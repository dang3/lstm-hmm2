jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ss
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
lea
push
call
lea
push
call
lea
push
lea
push
call
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
lea
push
call
mov
cmp
jae
mov
mov
mov
dec
mov
lea
inc
dec
inc
lea
lea
mov
lea
mov
mov
xchg
dec
je
lea
push
lea
push
call
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
lea
push
call
lea
push
lea
push
call
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
lea
push
lea
push
call
lea
push
call
mov
pop
ret
push
mov
add
lea
push
lea
push
call
call
call
lea
push
call
lea
push
call
lea
push
call
lea
push
call
call
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
lea
push
lea
push
call
lea
push
call
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
lea
push
lea
push
call
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
call
lea
push
lea
push
call
lea
push
call
lea
push
call
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
lea
push
call
call
lea
push
call
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jg
lea
lea
mov
lea
mov
mov
xchg
xchg
mov
lea
mov
xchg
xchg
mov
xchg
inc
inc
inc
dec
mov
cmp
je
call
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
xor
divl
test
jne
cmp
jl
mov
mov
mov
mov
inc
inc
dec
jne
xchg
mov
dec
mov
lea
mov
mov
xchg
mov
dec
dec
dec
jne
dec
dec
dec
dec
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
mov
cmp
je
jmp
mov
lea
lea
mov
lea
lea
mov
lea
xchg
dec
inc
dec
dec
jne
mov
xchg
mov
mov
lea
dec
dec
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
push
mov
push
call
mov
mov
mov
pop
ret
add
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
cmp
jae
mov
mov
mov
dec
mov
lea
inc
dec
inc
lea
lea
mov
lea
mov
mov
xchg
dec
je
mov
cmp
je
jmp
mov
lea
lea
mov
lea
lea
mov
lea
xchg
dec
inc
dec
dec
jne
mov
xchg
mov
mov
lea
dec
dec
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
mov
sub
mov
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
push
mov
mov
xor
call
mov
cmp
jl
mov
mov
mov
mov
inc
inc
dec
jne
xchg
mov
dec
mov
lea
mov
mov
xchg
mov
dec
dec
dec
jne
dec
dec
dec
dec
dec
dec
mov
mov
mov
call
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
push
mov
mov
xor
call
mov
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
cmp
jg
lea
lea
mov
lea
mov
mov
xchg
xchg
mov
lea
mov
xchg
xchg
mov
xchg
inc
inc
inc
dec
lea
mov
push
mov
jmp
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
lea
lea
mov
lea
lea
mov
lea
xchg
dec
inc
dec
dec
jne
mov
xchg
mov
mov
lea
dec
dec
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
jae
mov
mov
mov
dec
mov
lea
inc
dec
inc
lea
lea
mov
lea
mov
mov
xchg
dec
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
sub
add
add
mov
mov
cmp
jg
lea
lea
mov
lea
mov
mov
xchg
xchg
mov
lea
mov
xchg
xchg
mov
xchg
inc
inc
inc
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
mov
call
mov
mov
mov
cmp
jl
mov
mov
mov
mov
inc
inc
dec
jne
xchg
mov
dec
mov
lea
mov
mov
xchg
mov
dec
dec
dec
jne
dec
dec
dec
dec
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
mov
mov
movl
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
mov
pop
ret
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
jbe
mov
ljmp
int3
and
mov
ds
mov
cmp
mov
shl
mov
fdiv
mov
lock
lock
imul
mov
inc
xor
test
outsb
mov
inc
xor
mov
outsb
mov
inc
xor
add
outsb
mov
inc
xor
out
xor
int3
inc
xor
in
imul
int3
inc
xor
shrl
outsb
mov
inc
xor
leave
imul
int3
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jae
mov
mov
mov
dec
mov
lea
inc
dec
inc
lea
lea
mov
lea
mov
mov
xchg
dec
je
movl
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
mov
mov
call
mov
cmpl
je
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
mov
cmp
je
mov
subb
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
xorb
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
incl
mov
cmp
jne
mov
lea
lea
mov
lea
lea
mov
lea
xchg
dec
inc
dec
dec
jne
mov
xchg
mov
mov
lea
dec
dec
inc
mov
call
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
cmp
jg
lea
lea
mov
lea
mov
mov
xchg
xchg
mov
lea
mov
xchg
xchg
mov
xchg
inc
inc
inc
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jg
lea
lea
mov
lea
mov
mov
xchg
xchg
mov
lea
mov
xchg
xchg
mov
xchg
inc
inc
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
mov
mov
mov
mov
inc
inc
dec
jne
xchg
mov
dec
mov
lea
mov
mov
xchg
mov
dec
dec
dec
jne
dec
dec
dec
dec
dec
dec
movb
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
mov
mov
pop
ret
push
mov
add
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
call
test
jne
mov
jmp
movw
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
call
lea
mov
pop
ret
push
mov
add
cmp
ja
mov
lea
lea
mov
dec
je
xchg
xchg
lea
mov
mov
mov
lea
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
lea
push
call
call
call
lea
push
call
lea
push
call
call
lea
push
call
lea
push
call
lea
push
lea
push
call
call
lea
push
call
mov
cmp
jae
mov
mov
mov
dec
mov
lea
inc
dec
inc
lea
lea
mov
lea
mov
mov
xchg
dec
je
lea
push
lea
push
call
call
lea
push
lea
push
call
cmp
jl
mov
mov
mov
mov
inc
inc
dec
jne
xchg
mov
dec
mov
lea
mov
mov
xchg
mov
dec
dec
dec
jne
dec
dec
dec
dec
dec
dec
push
push
push
call
mov
call
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
mov
pop
ret
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
lea
push
lea
push
call
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
cmp
jp
mov
mov
xchg
lea
dec
inc
xchg
mov
mov
mov
mov
mov
mov
lea
xchg
mov
lea
dec
je
dec
lea
push
call
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
lea
push
lea
push
call
call
lea
push
lea
push
call
lea
push
call
lea
push
lea
push
call
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
lea
push
lea
push
call
mov
cmp
jae
mov
mov
mov
dec
mov
lea
inc
dec
inc
lea
lea
mov
lea
mov
mov
xchg
dec
je
lea
push
call
lea
push
call
call
xchg
mov
cmp
jno
cmp
jnp
mov
lea
xchg
xchg
mov
xchg
mov
lea
lea
lea
dec
je
lea
lea
push
lea
push
call
call
mov
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
inc
dec
dec
je
xchg
lea
lea
mov
lea
lea
push
lea
push
call
mov
pop
ret
addl
jne
mov
mov
lea
lea
mov
lea
lea
mov
lea
xchg
dec
inc
dec
dec
jne
mov
xchg
mov
mov
lea
dec
dec
inc
mov
mov
mov
lea
call
cmp
jns
lea
xchg
mov
xchg
xchg
mov
xchg
mov
lea
mov
inc
inc
dec
xchg
mov
xchg
mov
lea
xchg
dec
inc
ret
mov
ret
lea
add
inc
rolb
loopne
adc
dec
mov
out
jle
add
push
add
inc
mov
adc
pop
add
std
add
adc
add
scas
add
movsb
xor
loope
xor
mov
ficoml
add
jge
mov
add
add
xor
sbb
call
das
add
push
imul
inc
cmp
dec
xchg
daa
repnz
fwait
dec
inc
rcr
add
fs
loop
scas
sbb
insb
add
pop
jbe
jae
rolb
ret
pop
inc
add
xor
cltd
and
popa
add
aam
les
add
xchg
mov
add
adc
pop
add
mov
and
add
notl
add
cld
cmp
xchg
pop
les
add
xor
mov
jne
jge
add
push
jge
mov
dec
aam
mov
fildl
test
add
inc
sub
fsubl
cmpsl
repnz
add
pop
inc
and
mov
out
mov
mov
add
mov
mov
fisubs
add
out
add
mov
sahf
add
addl
add
push
iret
ss
nop
stos
in
cmpsb
xchg
push
inc
fcom
add
aaa
add
push
in
push
mov
aaa
mov
cmp
inc
in
cmp
push
inc
fildl
fs
add
add
adc
imul
scas
push
inc
inc
out
xchg
das
xchg
les
das
push
sbb
add
add
add
inc
or
pop
add
mov
cld
aaa
roll
ret
add
cmp
mov
add
add
add
into
loope
pop
add
sahf
in
bound
pop
add
nop
out
mov
pop
mov
add
lock
ret
lods
leave
sub
fcmovne
cmp
pop
add
adc
add
xor
mov
sub
dec
add
cmc
insl
cmc
or
arpl
xlat
sarb
jle
jp
add
lret
out
mov
add
les
add
add
add
cmp
xor
add
jns
add
popa
add
add
fisubrl
pop
add
mov
sahf
pushf
loope
or
xchg
jmp
or
xchg
aam
add
add
add
lret
inc
mov
jnp
or
mov
push
daa
and
insl
xlat
adc
outsb
movsl
add
jmp
lock
stos
mov
mov
add
xor
outsb
add
out
xchg
mov
lock
add
add
add
push
stos
pop
push
add
add
and
fs
pop
cmc
and
sub
nop
daa
sbb
add
loope
sbb
adc
pop
sub
int
call
push
add
add
cmpsb
add
adc
mov
push
adc
add
xchg
rcll
cli
add
jno
add
or
das
add
bnd
jbe
jl
push
add
add
add
add
addl
outsb
add
add
add
ret
test
add
add
xlat
push
add
xor
inc
inc
mov
mov
xchg
mov
push
add
and
push
add
test
jle
shlb
or
fmull
mov
and
jl
scas
dec
lods
pop
in
pop
jnp
int3
shl
sbb
fldl
add
add
dec
mov
add
fldcw
xchg
cmpsl
sbb
sbb
arpl
lea
enter
xor
add
cli
adc
add
les
in
push
inc
jecxz
test
and
shll
stos
sbb
sti
lock
jne
mov
add
pop
xchg
or
and
lret
dec
push
or
popa
mov
shl
xorb
ja
dec
hlt
shll
sub
push
pop
iret
je
cmp
sub
outsl
lock
mov
mov
in
mov
or
sbb
xchg
addb
es
jg
mov
mov
jno
mov
jle
fs
add
dec
or
cmp
xor
call
rcll
xchg
cmp
mov
or
imul
xor
sbb
add
stc
adc
pop
add
mov
outsb
mov
push
cwtl
out
ret
je
mov
mov
xchg
lret
aaa
pop
jnp
jl
cli
mov
dec
pop
jne
insl
adc
in
imul
or
xchg
rcr
push
sbb
mov
pop
xlat
jbe
inc
sub
mov
pushf
call
fcoml
dec
outsl
or
cld
lods
jae
ds
and
fnstenv
push
je
push
pushf
jecxz
jmp
xchg
lea
or
call
mov
pusha
pop
adc
xor
stos
push
js
arpl
movb
aas
rcr
jb
jo
dec
xchg
push
xor
dec
outsl
sarl
pop
pop
std
imul
cmpl
xlat
adcl
mov
mov
aas
adc
popa
jno
das
in
and
mov
pop
js
aam
ret
push
or
bound
clc
insl
mov
cmp
add
aam
or
icebp
shl
lock
xor
popf
mov
fs
cmp
adc
pop
sbb
adc
int
push
test
pop
mov
jp
push
and
fisttpll
dec
loopne
cmpsb
push
je
jle
sbb
xor
pushf
pop
repz
stos
inc
mov
xchg
out
mov
inc
sqrtps
inc
add
cmpl
jae
jno
pusha
sti
and
insl
ds
test
jnp
xchg
add
shrb
stos
shll
jne
shll
push
xchg
mov
decl
xchg
sbb
xchg
bound
xchg
jae
mov
add
out
mov
adc
arpl
dec
repnz
pop
out
push
mov
es
pop
dec
adc
pop
shlb
fbld
bound
sti
mov
or
shl
and
dec
or
imul
push
or
fnstcw
inc
jae
lea
lds
adcb
cltd
inc
xchg
mov
ljmp
jae
add
push
mov
mov
jb
adc
push
fistpll
sti
es
pop
aad
sbb
mov
lret
out
push
and
adc
adc
and
leave
hlt
in
push
arpl
inc
mov
mov
push
jl
pop
ficompl
adcb
popa
inc
pop
mov
fisubrl
lds
rcrb
nop
or
leave
shrl
movsb
push
lahf
lea
mov
fwait
jge
ds
sbb
adc
and
repnz
add
ljmp
adc
push
scas
lds
jo
inc
pop
scas
fdivr
andl
mov
loop
inc
into
inc
adc
jnp
enter
daa
aam
outsb
cmp
aam
mov
roll
dec
rol
imulb
movsl
fistpll
arpl
adc
test
cs
lods
test
mov
pushf
push
fdivrl
xor
push
repz
loope
out
fmul
push
jne
cmp
lahf
adc
ret
popl
sub
jp
int3
mov
pop
pop
and
clc
push
pop
push
js
mov
jmp
pop
cmp
xchg
loopne
xor
jp
sahf
bound
cld
cmpb
std
jg
xchg
mov
aas
mov
jno
push
sub
adc
add
cmp
in
into
and
xor
sbb
cmpsl
orl
or
or
sub
xor
shrb
xor
cwtl
loop
jns
stc
enter
push
out
add
adc
rolw
lods
push
or
out
sub
cli
cmpsl
and
xor
fcomip
sti
xchg
pop
mov
sahf
popf
dec
gs
pop
loopne
adc
pop
xchg
sbb
sub
adc
sarb
cld
xchg
xchg
lahf
cmpsl
sbb
in
ret
mov
jo
mov
insl
mov
xchg
clc
insb
jmp
adc
aad
or
dec
clc
xchg
sub
insb
dec
fldenv
xchg
mov
lret
test
mov
call
cmp
pop
jbe
les
dec
sbb
fistl
pop
stos
jmp
inc
ljmp
aas
pusha
hlt
sub
push
jns
or
inc
cmp
push
int
notb
sar
adc
fistpl
inc
stc
decl
sub
imul
repnz
mov
or
mov
pop
or
pop
pushf
dec
mov
cld
incl
ret
xchg
push
push
es
repnz
outsl
inc
hlt
dec
ret
cmpsl
roll
adc
test
inc
lods
popf
sbb
mov
arpl
lods
push
aas
pop
cmp
dec
sarb
sub
add
test
out
mov
scas
lea
fistl
test
icebp
sahf
icebp
popa
dec
aas
int3
pop
sahf
imul
xchg
xor
or
cmpxchg
imul
outsb
xchg
mov
pop
add
jnp
mov
pop
xchg
stos
sbb
mov
mov
push
xor
aam
insb
push
les
enter
daa
adc
jp
or
in
in
mov
mov
fdivl
ss
lret
sbb
ja
test
dec
enter
repz
sbb
mov
sub
repz
out
mov
adc
movsb
mov
xchg
iret
ss
sbbl
out
addr16
sub
mov
repz
jp
inc
and
cwtl
xor
jnp
js
jle
dec
in
push
push
pusha
xor
jp
and
cs
dec
push
jae
xchg
push
js
cmp
or
adc
and
pop
bound
addr16
imul
fsubrs
fisubrs
and
iret
cmpsl
add
mov
ret
xor
arpl
jne
mov
repz
push
sti
aas
jle
iret
or
xchg
andl
int3
pop
in
jl
fdivrp
cmp
lds
mov
sub
xchg
mov
dec
push
mov
push
mov
push
jbe
rol
jge
xor
sbb
inc
jb
in
mov
stc
jne
jl
sbb
push
xchg
dec
mov
jo
jnp
scas
mov
fwait
mov
push
loop
pop
inc
pop
xor
in
bound
fsubl
sarl
mov
scas
mov
jno
mov
into
cmp
xor
sbb
sub
cli
push
sahf
lahf
dec
fnstsw
push
out
jns
aas
pop
mov
xor
loope
dec
mov
js
jmp
pop
add
mov
loope
loope
fdivl
stos
sub
mov
adc
popf
jnp
fistpll
mov
mov
push
xor
ja
movl
pop
ffreep
sub
cli
xor
mov
ficoml
mov
mov
cmp
test
outsb
jae
push
jbe
jg
pop
mov
movb
adc
inc
xorb
push
nop
cmp
test
es
jg
lret
push
cmp
xchg
cmc
or
in
into
imul
xor
cld
lods
outsl
adc
loop
test
adc
mov
add
pop
outsb
lods
cmp
in
push
add
loope
ficoml
int3
xor
lahf
in
dec
lcall
mov
das
loopne
or
pop
mov
insb
adc
xor
inc
fstpt
dec
xchg
pop
fdivs
sub
divb
xlat
hlt
lret
sub
pushf
ds
jmp
or
push
inc
jb
mov
in
hlt
aam
dec
push
jbe
inc
ret
and
je
bound
jecxz
lods
mov
lea
mov
call
mov
hlt
mov
sub
pop
fildl
pop
dec
jno
push
inc
cld
aas
decl
jb
pop
bound
sub
and
sbb
jge
mov
neg
mov
sub
ficomps
cld
fwait
jns
lret
dec
sub
orb
lock
ficoms
mov
int
ret
aam
jp
ret
and
mov
insl
push
push
fs
mov
push
aas
mov
jg
xchg
lods
or
fidivrl
stos
adc
mov
pop
pop
sub
dec
dec
leave
sub
subl
mov
clc
push
push
xchg
and
test
fs
popa
pop
int3
xor
lret
int
out
es
xchg
jl
push
mov
fisttps
pxor
out
je
dec
in
pusha
xor
push
dec
mov
pusha
jp
dec
cmp
xchg
sbb
or
into
pop
fwait
das
lods
fistps
xlat
rcr
repz
cwtl
add
mov
inc
imul
xchg
cmp
orb
in
fadd
xchg
adc
mov
decl
shrl
xchg
aaa
ja
clc
daa
dec
mov
out
out
inc
mov
mov
pop
dec
fldt
dec
jne
andl
bound
or
xchg
lcall
out
stos
sbb
pushf
insl
pop
xor
hlt
mov
insb
add
add
loope
in
orl
inc
leave
fcoms
fdivrs
gs
push
push
cmp
gs
xchg
pop
ja
loope
xor
inc
pop
sub
imul
test
scas
shrl
bound
into
ret
test
aas
xchg
hlt
jnp
aaa
arpl
mov
inc
inc
or
or
inc
jp
push
fiaddl
ret
clc
rolb
pop
sbb
ficomps
aam
rorb
push
mov
out
out
mov
cmp
pop
mov
jge
rcpps
push
loope
aaa
in
or
fsubs
add
nop
addr16
add
int3
xor
vpsubw
mov
add
sub
push
lods
xlat
sbb
pusha
pop
cmpsb
sub
in
dec
mov
mov
lret
or
jno
cmp
sbb
test
fldl
and
mov
out
test
inc
in
aaa
xor
or
lcall
loope
inc
lock
loope
add
sub
imul
xchg
mov
js
and
lock
sbb
fdivl
and
add
int
jl
sub
cltd
pop
cmp
lcall
add
sbb
lret
call
roll
cmp
mov
js
mov
insl
and
cmp
ss
xlat
cmp
arpl
cltd
divl
adcb
pop
aas
outsl
or
cld
into
dec
and
cmc
mov
xchg
xor
outsl
repnz
cli
test
stc
ss
adc
out
lret
iret
stos
pushw
sbb
sbb
sbb
xor
mov
sti
hlt
repnz
in
stos
gs
loopne
adc
shlb
jne
aam
push
out
adc
xchg
sbb
loopne
push
movsb
sbb
xlat
xor
bound
jmp
les
jno
and
shl
push
nop
iret
inc
ret
dec
mov
cmc
inc
aad
cmp
adc
xchg
jecxz
cmc
test
inc
jbe
lea
mov
inc
aad
cmp
stc
pop
fmull
adc
clc
xchg
testb
or
pop
imul
jb
sahf
std
dec
sti
mov
shrl
push
std
pusha
xchg
xchg
cwtl
mov
sahf
mov
fidivl
mov
pop
xor
pop
sub
cld
pop
xchg
lret
mov
or
or
lock
xor
mov
add
test
test
xchg
dec
mov
mov
jbe
jmp
outsb
insl
cmp
xchg
mov
jp
loope
push
dec
pop
lods
jae
in
mov
int
jae
jno
pop
mov
jp
and
adc
mov
lahf
test
sub
mov
insl
addb
mov
jecxz
arpl
ljmp
cmp
cmp
sub
xchg
ret
leave
pop
push
data16
movd
cli
jbe
cltd
xor
xor
lea
jp
xchg
sbb
inc
je
jg
fldl
jmp
repnz
push
fwait
pop
outsb
fistpl
jp
mov
add
xchg
jmp
arpl
add
aad
in
push
mov
pusha
popa
clc
mov
mov
mov
inc
movb
out
dec
scas
ljmp
jno
rorl
mov
sub
mov
cmp
popa
movsl
andb
pop
jns
push
sub
enter
stc
sub
xchg
in
xor
xlat
jl
daa
xchg
insb
outsb
sbb
jnp
sub
in
dec
fisubs
cld
loopne
popa
out
xchg
mov
and
iret
pop
dec
inc
in
std
sti
jae
pop
cli
push
incb
in
sbbb
push
rcr
xchg
stos
push
frstor
pop
xlat
stc
sbb
aaa
xchg
dec
mov
push
cmc
sub
iret
gs
jp
pop
clc
stos
pop
xor
arpl
xabort
arpl
dec
inc
les
cmp
and
stc
inc
cli
fidivl
xchg
int3
jecxz
fwait
pop
dec
popf
pmaxub
into
lds
sub
and
sub
cmp
int
ss
movsb
cmc
test
jbe
pop
jle
xor
mov
adc
loope
lret
mov
test
pop
fsubl
outsl
imul
out
mov
and
scas
jns
test
cmp
outsb
lea
filds
rcrl
lods
ljmp
mov
push
daa
shl
jmp
adc
push
jno
out
sub
mov
or
pop
mov
xchg
and
in
jae
mov
push
test
dec
inc
sub
out
xchg
into
push
and
adc
test
out
ret
inc
pop
adcl
loope
inc
nop
fmul
in
cmp
add
adc
push
imul
add
push
sbb
aaa
sub
and
mov
dec
sub
mov
jo
in
jne
mov
cwtl
lock
dec
in
or
cmp
push
ja
mov
mov
scas
loop
mov
movlps
jg
cmp
push
int
divl
out
daa
inc
or
insb
insb
and
sarb
das
adc
cmc
ja
push
outsl
rorl
out
lea
insl
adc
jnp
add
leave
cmp
adc
cwtl
out
subb
sbb
in
and
out
incb
lret
lcall
sub
sahf
adc
leave
ret
mov
out
xchg
fbld
mov
sahf
sbb
sub
or
mov
xchg
scas
jno
pusha
inc
pop
cs
adc
sbb
nop
stos
int3
rorl
inc
popf
inc
call
xchg
je
cmp
clc
xorl
iret
cltd
cmp
mov
js
pop
push
aaa
adc
testb
hlt
inc
fndisi(8087
pop
cli
pop
xchg
push
lea
sbb
aas
cmp
adc
jmp
cmp
sti
mov
negb
fiadds
insl
jle
mov
adc
xor
adc
mov
xor
dec
mov
add
imul
aam
insb
mov
outsb
rclb
sbb
dec
mov
mulb
lods
imul
lods
lea
lock
cmc
mov
cltd
call
fildll
test
sub
mov
frstor
lret
xchg
mov
xchg
lret
push
pop
pop
lahf
aas
xchg
mov
mov
push
inc
icebp
pop
bswap
mov
fstps
lahf
sbb
pushf
xlat
pushf
xchg
cwtl
dec
or
xchg
xchg
rcll
push
push
or
cmpsb
imul
add
add
imul
pop
imul
inc
cmpsb
in
sbb
outsb
mov
in
mov
cld
clc
dec
ja
and
dec
mov
jge
mov
loop
pop
dec
mov
cmp
add
aaa
out
inc
out
jbe
xlat
hlt
loopne
leave
cmpsb
pop
xchg
xor
addl
in
out
mov
jle
test
xor
pop
xorb
leave
cld
jnp
movsl
mov
call
shll
sbb
mov
ret
jmp
notl
jae
mov
push
shl
popf
push
dec
fidivrs
adc
pusha
stos
mov
aaa
sbb
pop
adc
lods
jne
test
push
cmp
call
iret
les
pop
pop
push
fwait
xor
inc
test
movl
push
js
xor
call
outsl
or
xchg
inc
pop
jns
mov
in
clc
fld
aas
decl
mov
mov
movsb
andb
jbe
push
outsb
jge
jo
sbb
cld
loope
bound
loope
mov
icebp
in
xchg
ss
fisubs
push
cmp
or
xchg
add
fsub
sub
xchg
cmp
push
inc
sbb
pop
cmpsb
das
repz
in
pop
cmp
enter
daa
sarb
cmp
aam
sbb
or
pop
hlt
cmp
sbbb
sti
jnp
and
push
outsb
lahf
test
enter
fsubrs
pop
in
xorl
xchg
dec
cmpsb
pop
cmp
js
mov
ret
push
cmp
loope
stos
inc
fdivl
sub
dec
cmpsl
outsb
mov
and
shrb
jle
cld
repz
jbe
push
xor
adc
movsb
jg
push
push
arpl
mov
cmp
cmp
sub
jg
sahf
out
in
test
jns
andb
pop
mov
cmpl
addl
adc
sbb
mov
cmpl
xor
in
lret
test
pop
loope
mov
xchg
or
fistl
cmc
ds
xor
imul
test
stc
movsb
hlt
loope
xchg
pop
js
dec
lcall
icebp
mov
lods
out
cld
xchg
jae
add
out
cmp
sti
push
out
cmp
sub
cmc
gs
pop
sub
cld
and
je
add
fdivp
cld
mov
and
mov
pop
imul
adc
jae
aas
aas
inc
jmp
mov
aaa
pop
insl
aad
jcxz
test
dec
je
mov
sti
mov
flds
lret
sbb
dec
ljmp
ss
popf
aaa
andl
jg
xor
int3
dec
les
repz
mov
aad
push
xchg
inc
dec
mov
fbstp
rorb
jmp
je
rorl
dec
mulb
inc
std
scas
xlat
xchg
inc
int3
sub
mov
cld
sbb
ljmp
mov
adc
cmp
sub
mov
dec
jns
mov
repnz
rcrl
test
icebp
and
or
push
dec
scas
mov
mov
add
jecxz
dec
popa
insb
mov
adc
and
sbb
pop
mov
mov
push
test
orl
push
repz
fisttpll
xchg
clc
ljmp
mov
dec
std
pop
dec
test
jmp
outsb
out
out
cld
into
xchg
push
jb
push
sbb
sub
sub
add
and
dec
xor
sti
frstor
imul
adc
dec
inc
int3
shll
xor
push
loopne
mov
cmp
xor
xor
jp
mov
and
out
xor
dec
cmp
xchg
ja
mov
test
js
ds
mov
stc
ja
cli
dec
xchg
js
dec
sti
adc
cli
aad
test
fwait
jne
scas
iret
mov
sub
cmp
idivb
jmp
xchg
sti
insl
test
out
sub
jle
lea
daa
jp
cltd
and
pop
je
insb
inc
dec
push
jnp
out
jle
pop
lcall
pop
stos
fistps
fisubrs
mov
cld
jge
jo
fwait
push
test
mov
push
push
je
stos
cmp
and
push
aam
rcrl
push
addl
adc
cmp
and
mov
hlt
pop
xchg
adc
mov
inc
lret
or
hlt
adcb
fwait
cmp
fnstsw
int3
mov
int
fimuls
add
pop
cmp
mov
fildll
leave
and
in
or
ss
repnz
pop
jbe
push
add
testl
and
sti
or
mov
xchg
dec
dec
and
push
sbb
stos
js
sbb
scas
aaa
popa
and
jbe
dec
cmpsb
jge
push
mov
jmp
call
ret
daa
iret
xchg
je
jp
push
jno
mov
or
mov
cmpb
or
add
push
and
pop
lahf
popa
and
xor
test
gs
xor
push
pop
pop
mov
int
add
adc
int3
inc
loope
xor
lea
jecxz
sbb
adc
or
push
subb
fcomps
xlat
dec
mov
dec
shll
ret
imul
mov
add
lcall
xchg
mov
sahf
xchg
shr
test
sbb
repz
mov
push
loope
mov
lret
pop
adc
call
inc
cmp
xchg
pop
ja
lock
lret
mov
lcall
or
ret
dec
cmc
add
mov
outsl
movsl
lcall
mov
popa
xchg
push
add
in
data16
mov
push
fucom
scas
cli
xchg
cli
cmpsb
into
lret
xor
adc
add
jmp
and
aam
insb
mov
test
inc
loope
imul
push
xchg
gs
out
leave
in
ljmp
jmp
sub
push
mov
pushf
ljmp
cs
nop
pusha
adc
dec
rcrl
and
mov
je
in
sub
push
mov
dec
rolb
call
mov
outsl
pop
cmc
mov
dec
scas
xor
fidivl
inc
inc
push
xchg
mov
or
ds
adc
mulb
shr
cwtl
jecxz
repz
or
stos
rolb
leave
mov
inc
cli
adc
add
ja
push
pop
mov
lock
mov
test
lods
mov
es
dec
insl
bnd
dec
test
mov
mov
fucomi
mov
sub
mov
xchg
mov
mov
pop
pop
xlat
mov
rcrb
xchg
test
sub
push
mov
movsb
fnsave
and
add
sub
xor
xchg
pop
cmc
pushf
gs
ficompl
adc
push
sub
xchg
cwtl
pop
notl
inc
cmp
mov
cltd
sub
aam
xor
pop
addl
lock
dec
xchg
loope
sbb
fs
sarl
into
sbb
arpl
add
incw
jae
decb
out
or
ret
scas
push
xchg
dec
imul
jb
add
pop
push
dec
xchg
xchg
inc
out
jnp
repnz
mov
or
addr16
jg
mov
mov
std
int
aaa
aam
xchg
int
andl
sub
mov
out
mov
shlb
insb
scas
cmpsb
leave
jnp
in
mov
mov
out
pusha
cmp
fistpll
icebp
inc
jmp
or
and
push
inc
repz
pop
inc
cli
mov
nop
test
mov
and
imul
dec
push
lret
adc
repnz
sbbb
pop
fsubr
hlt
cmpsl
sahf
imul
or
outsl
xchg
and
jbe
inc
fimull
out
xchg
xor
cld
int3
movsb
cmpsb
sbbb
sub
sub
rolb
mov
repnz
leave
fwait
mov
pusha
cmp
rcl
jbe
aas
data16
bound
inc
push
pop
or
jl
mov
xchg
push
add
mov
xor
xchg
and
sbb
cmp
mov
inc
sub
inc
cmpsb
xor
jns
enter
daa
into
aaa
cmp
mov
dec
cmp
sarb
enter
or
lahf
out
rcll
incb
test
jo
sbb
push
icebp
jl
pop
xchg
push
pop
xchg
das
js
ficoms
inc
popf
in
push
push
loope
in
fmul
clc
mov
sarb
lods
outsb
test
adc
in
xchg
cmp
outsb
sbb
sbb
and
ret
push
outsb
inc
or
or
les
cs
roll
sub
lcall
pop
mov
sbb
add
adc
fcompl
mov
pop
lods
mov
jnp
cltd
out
adc
dec
cmp
out
jae
lods
fmuls
mov
scas
xorb
add
test
fwait
adc
cmp
or
std
dec
into
fmuls
push
xor
push
sub
stc
push
loop
ja
stc
adc
xchg
adc
sbb
adc
lods
mov
pop
lods
jl
cli
fnstcw
cmp
in
add
jo
lods
gs
and
sti
pop
pop
dec
push
mov
sbb
add
hlt
les
mov
repz
data16
xchg
sub
sbb
dec
mov
cmpsb
sub
icebp
mov
xchg
fidivrl
jmp
pop
sub
aad
insl
loopne
cmp
int
xor
fyl2x
push
adc
and
decl
sub
stos
xor
mov
adc
push
imul
fldt
cld
pop
jge
aaa
inc
adc
and
sbbl
sbb
lcall
jns
and
add
call
ret
push
std
cld
lods
xor
mov
int
mov
inc
cld
jb
int3
lret
jae
ret
pop
inc
mov
idiv
lock
das
push
pop
sub
pusha
mov
push
ret
out
fwait
mulw
insl
fincstp
mov
lret
push
cmpsl
int
iret
mov
mov
push
mov
pop
sbb
and
dec
pushf
loope
mulb
and
outsb
loope
sub
and
call
xor
cltd
enter
iret
inc
xchg
pop
daa
ds
xchg
pop
mov
aad
out
mov
fwait
xchg
fildll
inc
pminsw
jb
inc
xchg
or
cmpb
xchg
add
test
test
xchg
or
mov
test
or
pop
leave
fwait
sbb
rcrb
push
jmp
add
add
xor
aas
or
addr16
xchg
pushf
sahf
adc
push
inc
pop
sub
inc
inc
dec
jp
sbb
jge
js
sbb
loope
dec
dec
imul
adc
in
bound
pusha
adc
testb
mov
mov
xor
xorl
jp
jnp
mov
mov
insb
sbb
jnp
mov
jle
pop
test
cs
sbb
push
pop
xchg
xchg
add
jg
stos
inc
jle
sbb
jae
jne,pt
or
std
mov
iret
sbb
and
lds
scas
dec
push
adc
adc
adc
stos
dec
outsl
pop
or
jns
arpl
daa
push
or
ljmp
fiaddl
mov
mov
int3
insl
ja
push
push
aad
into
jnp
lds
cmp
nop
bnd
jmp
nop
or
adc
movsb
and
cltd
push
nop
xchg
sub
in
jge
mov
sbb
sti
les
lahf
mov
push
add
push
mov
sub
push
push
jecxz
das
xor
mov
scas
cmc
or
and
insl
cmp
push
inc
mov
or
in
int3
out
mov
mov
pop
mov
jno
icebp
cwtl
sub
inc
mov
adc
pop
ds
pop
movsl
adc
int
pushf
adc
lahf
add
rorl
test
jnp
mov
fucompp
ficomps
ljmp
jg
xor
jge
fdivl
and
rcr
outsb
out
push
adc
mov
dec
push
orb
sbb
pop
in
mov
pop
fisubs
rcll
int
jmp
sub
pusha
cmp
push
inc
cmp
push
sbbb
int
sahf
xlat
xchg
test
cmp
xor
mov
mov
pop
gs
push
ss
xchg
cmp
or
xor
cmpsb
dec
lret
push
enter
xor
int
mov
inc
inc
xor
jl
dec
push
xchg
fldcw
stc
leave
movsb
mov
add
dec
lret
pop
loop
cmpsb
push
xor
out
orb
or
mov
je
push
in
iret
sbb
xchg
pop
push
loopne
addr16
adc
outsb
loop
cmpsl
cmc
mov
sbb
cmpsb
jge
jmp
cmp
pop
xchg
lea
mov
xlat
outsb
adc
sub
jb
mov
inc
out
jmp
in
mov
aad
xchg
push
lods
scas
dec
xchg
or
inc
xor
test
sub
call
jecxz
pop
jno
push
mov
imul
cmpsl
sbb
mov
ficomps
mov
aaa
mov
push
fistpl
jecxz
inc
fwait
and
inc
sahf
dec
push
aas
mov
cli
push
dec
dec
pavgb
dec
movsb
shll
xchg
adc
sub
lret
cwtl
pop
jge
mov
adc
mov
out
cld
popf
xor
lret
loop
mov
aam
xchg
mov
jge
lock
das
in
dec
mov
pop
outsl
aam
aas
jne
jle
shlb
jp
subb
jo
lahf
lret
int3
add
mov
mov
lods
mov
pop
mov
jl
mov
jmp
xchg
imul
test
add
xchg
pop
push
cmp
ffree
inc
sub
js
inc
xchg
sahf
sahf
shr
mov
popa
jmp
dec
call
out
sbb
xchg
es
ret
in
cmovns
sub
lret
xchg
ja
fdiv
sub
movsl
imul
xchg
dec
xor
push
aaa
sbb
inc
fwait
fwait
dec
mov
push
test
outsb
daa
add
fsts
or
in
pop
sub
insl
push
outsb
pop
call
stos
push
dec
insl
incb
adc
js
dec
test
dec
sub
pop
jb
jo
sahf
out
mov
sti
jle
movsl
xchg
jnp
pop
mov
addl
out
les
or
ret
xchg
aad
es
inc
mov
add
insb
test
mov
jle
fs
xor
add
push
xchg
mov
jmp
and
out
fstpl
fstpl
cmpsl
sbb
stos
xchg
mov
sbb
cmp
xchg
scas
adc
push
pop
mov
mov
ret
sbb
add
hlt
cmp
mov
mov
pop
cmpsb
and
push
inc
je
rcr
mov
push
int3
jp
ds
xor
xchg
fidivs
ljmp
icebp
xor
movsb
lods
jmp
push
fbld
addr16
jecxz
sbb
sub
mov
mov
jl
lcall
xor
out
dec
scas
aam
push
and
pop
bound
jae
cmp
dec
inc
inc
or
cmpsb
cmp
test
pushf
mov
push
cmp
cmpsl
mov
sub
cmp
cmp
push
push
ds
into
and
aaa
into
lret
das
ficoms
test
xchg
jge
icebp
xchg
jmp
pop
aam
jb
push
jg
pop
mov
mov
aam
and
sub
scas
or
lcall
andb
sbb
xchg
push
mov
gs
and
and
int
loopne
sub
push
pop
xor
arpl
cwtl
cmp
mov
push
sahf
jp
mov
adcb
mov
shlb
jne
pop
ret
adc
xchg
adc
out
mov
mov
jecxz
fadd
add
imull
xchg
adc
cmp
mov
or
xor
cmc
pop
adc
outsl
sub
sub
insb
push
lahf
stc
andb
adc
sub
add
int
lods
lea
hlt
out
or
cli
aas
loop,pt
dec
sti
lods
in
cmp
cs
push
adc
dec
cmp
loopne
call
aaa
adc
add
imul
sub
sbb
lds
sub
mov
jmp
in
or
cs
mov
iret
nop
icebp
xchg
jnp
lock
inc
inc
cmp
insb
je
inc
sub
inc
cmp
rcr
in
and
and
push
inc
adc
inc
xchg
int3
shrb
ret
push
lds
dec
pop
aas
pop
sub
add
dec
lds
and
loop
roll
notb
dec
adc
cwtl
adc
dec
mov
fistpll
cmpl
cld
enter
push
out
mov
addr16
das
aam
mov
into
jno
aam
push
mov
or
adc
insl
cmpsl
test
repnz
lret
imul
lods
sub
pusha
lret
cmc
out
mov
lahf
cs
and
test
sub
xor
fcmovnbe
adc
jne
jl
push
test
sbb
and
clc
fucom
cmpsb
mov
mov
aas
xchg
fstpl
mulb
cwtl
sbbb
stos
cmpsl
fwait
sub
jnp
xchg
insl
jae
push
mov
push
or
add
cltd
int
inc
xor
leave
mov
jne
dec
dec
or
mov
xchg
push
sbb
mov
or
aas
inc
fwait
js
repnz
dec
nop
mov
add
dec
inc
xor
or
or
or
in
xor
cmp
ret
lea
pop
mov
xchg
aas
dec
pusha
push
aas
inc
stos
pop
jmp
jae
adc
adc
mov
ds
xchg
mov
mul
out
fwait
pushf
shlb
mov
xchg
daa
in
adc
sbb
mov
or
or
pop
addr16
pop
jp
cs
mov
jnp
insb
lock
pop
jnp
xchg
mov
in
ss
adc
sbb
mov
jmp
cs
or
nop
jae
popf
shl
push
mov
dec
int
stos
push
add
sbb
test
scas
je
ret
push
lahf
push
and
lahf
mov
ret
cmp
jnp
shl
mov
xchg
scas
xchg
or
loopne
xor
mov
fisubl
add
gs
pop
fs
ficoms
dec
lds
mov
xabort
mov
sub
movsb
aaa
das
xor
out
sub
mov
cli
mov
jb
insl
aaa
sbb
jp
add
or
or
sbb
test
shll
pop
scas
mov
and
lds
inc
aad
or
lcall
daa
lret
xor
cmp
jno
iret
ljmp
push
mov
xor
push
jbe
and
popf
outsb
lahf
inc
es
push
jle
out
imull
add
sub
pusha
in
dec
pop
sti
lods
inc
js
sub
imulb
and
loope
lret
lret
js
sub
mov
adc
jne
xor
xlat
dec
jnp
jne
inc
sbb
nop
mov
shll
jbe
push
ja
sbb
aas
mov
xchg
pop
mov
sbbb
popa
decb
jg
sahf
sbb
mov
subb
popf
mov
movsb
rorb
cmp
imul
push
gs
in
jge
lret
sub
testb
or
inc
into
sbbl
jno
or
je
aaa
dec
mov
lea
dec
push
mov
mov
in
out
sbb
xor
test
movsl
shll
fabs
nop
gs
dec
iret
loopne
jl
pop
stos
insb
insl
adc
jecxz
les
movsb
sub
adc
push
jno
mov
cmp
pusha
mov
in
dec
mov
mov
xchg
jns
jmp
push
repz
cwtl
nop
int3
xchg
in
dec
or
inc
pop
loope
fsts
mov
jecxz
pop
scas
push
cli
xchg
popf
mov
mov
pop
pop
shll
in
stc
dec
pop
sahf
mov
sti
sub
pop
data16
inc
test
mov
popa
out
push
and
push
and
shlb
rcl
das
or
mov
xchg
std
icebp
lcall
cld
sub
jge
jl
mov
repz
cmp
repz
lock
mov
das
mov
mov
test
push
aam
and
pushf
aad
sbbb
insl
mov
clc
dec
xchg
test
mov
aaa
pop
push
mov
ret
and
pop
insl
dec
pop
push
andl
inc
sub
cli
test
adc
push
ret
fisttpll
in
push
xchg
sbb
cld
ja
popa
pop
inc
dec
pop
mov
movsb
mov
xchg
mov
scas
push
arpl
sbb
pop
mov
add
adc
popa
dec
mov
xchg
rorl
sbb
test
xor
data16
out
lret
rcrl
subb
cmpsl
adc
out
iret
add
mov
enter
leave
test
cmp
in
rolb
mov
lock
pop
pop
dec
push
ja
push
std
dec
push
repnz
inc
inc
mov
sahf
ja
mov
dec
repz
mov
out
jp
stos
bound
jne
adc
xor
and
inc
pop
mov
or
sub
mov
shrb
pop
jnp
lods
add
fcmovb
in
mov
xchg
fistpll
sub
xchg
jl
jo
nop
movsl
or
mov
push
push
xchg
clc
loopne
mov
mov
leave
stos
jns
movsl
and
sbb
shrl
xchg
scas
xlat
fists
adc
lcall
jecxz
add
hlt
rorl
fucompp
inc
inc
fldenv
sub
pop
xchg
dec
inc
jb
das
ficompl
inc
xchg
xchg
nop
aad
int3
push
mov
out
mov
sti
aad
loope
adc
lahf
in
jle
test
ret
push
jge
mov
rorl
sbb
fimull
jo
inc
add
in
mov
test
push
mov
push
xor
popf
call
popf
and
imul
data16
add
gs
cmpsb
inc
stos
xor
andl
mov
jns
mov
je
sub
mov
inc
ds
mov
andb
xorl
push
test
out
insl
out
add
int
xor
popf
xchg
pop
and
mov
pop
cmp
dec
push
cmp
loope
or
fdivl
lret
push
scas
outsb
adc
fcom
push
lahf
in
ss
adc
sbb
jo
and
or
dec
cmpsb
ja
sub
mov
xor
test
inc
stos
jnp
sub
mov
mov
incb
push
cmpsl
or
cmc
dec
lds
add
inc
iret
fstpt
cmp
imull
aas
rol
shll
js
or
int3
cmc
call
xchg
jne
ljmp
stc
out
sbb
pop
mov
test
hlt
data16
icebp
cmp
test
or
xor
xor
in
adc
insb
inc
jbe
cld
nop
pop
gs
xorl
and
xor
leavew
dec
imul
mov
xor
negb
cmp
push
sub
fs
mov
inc
add
jmp
xor
mov
das
nop
cmpsl
movsl
cltd
dec
scas
or
inc
fxch
enter
icebp
jecxz
in
pop
add
sbb
lcall
pop
sub
cmp
imul
sub
or
inc
xor
jae
out
xchg
and
xchg
sahf
push
jb
or
mov
int
or
mov
div
clc
cmp
pop
cwtl
mov
adc
xor
das
or
mov
data16
dec
movsl
loopne
sbbb
mov
ljmp
add
jge
nop
aas
cld
cmpsl
leave
int
mov
push
adc
lods
lret
and
mov
in
test
test
fisubrl
sarb
lea
test
pop
movsl
mov
sbb
test
mov
xor
mov
xchg
pop
sbb
ljmp
inc
pop
dec
test
stos
test
out
inc
sub
ds
in
pcmpeqb
xchg
out
inc
cltd
cmp
xor
daa
stos
mov
jnp
es
fcmove
hlt
test
inc
jno
jno
pop
sbb
frstor
fwait
pop
aad
xchg
icebp
pop
add
xlat
inc
lcall
fwait
xor
cmp
in
xlat
mov
mov
leave
mov
pop
sbb
dec
inc
jp
inc
fchs
ljmp
ficoms
jne
xchg
pop
mov
aad
out
pop
and
jns
sti
popa
xchg
mov
lods
out
outsb
or
outsl
mov
insl
jp
mov
mov
xlat
jbe
int3
pop
jnp
test
push
add
in
movsb
cs
inc
popa
fistps
rcll
mov
xor
pop
aam
push
or
mov
push
lret
xchg
mov
adc
push
sbb
xchg
das
imul
scas
cmp
andnps
mov
iret
pop
xchg
ljmp
mov
hlt
push
cmp
arpl
repz
faddl
fwait
or
test
fcmove
cwtl
xchg
cmp
push
pop
ret
ficomps
xchg
lds
leave
sar
mov
repnz
leave
out
lds
push
int3
push
fdivs
add
insb
rcll
aaa
fildl
arpl
mov
dec
out
leave
push
outsl
std
cmp
clc
out
scas
jno
insb
and
lods
aam
cwtl
lods
or
inc
repz
fidivrs
enter
daa
leave
sbb
cmp
aas
sub
adc
fistpll
ja
adc
or
lahf
andl
ret
test
cmpsl
ret
jge
pop
orl
out
and
pushl
movl
push
add
pop
fsubl
repnz
jge
iret
outsb
jae
rcll
sub
xchg
push
xor
xlat
sbb
and
or
int
sbb
sub
pop
popa
lcall
dec
mov
lock
out
inc
sbb
test
mov
lods
cmpsb
mov
mov
fs
bound
add
xchg
cmp
mul
loope
push
sbb
mov
mov
stc
or
cmp
cmc
scas
xor
fmuls
loop
or
adc
mov
es
lods
inc
testl
cli
fadds
or
rolb
in
jnp
pop
sti
sbb
pop
xor
gs
push
in
loopne
loop
pop
jmp
cli
add
popa
test
repz
jno
idiv
pushf
sbb
jbe
pop
xlat
push
aas
sub
repnz
in
pop
fucomp
fcom
jle
in
cmpl
or
dec
or
vpsubusw
xorl
rol
jbe
pop
jge
call
mov
push
adc
int3
out
pop
push
je
lods
mov
inc
mov
addr16
or
inc
aas
xor
pop
mov
sub
push
and
cmpsl
mov
divb
test
std
aas
pop
negl
jp
sbb
stos
sarb
lret
sahf
inc
xchg
mov
cs
jl
lock
lods
ljmp
popa
add
stos
cld
xchg
mov
xor
mov
test
dec
mov
adc
inc
lret
aas
icebp
in
test
mov
or
push
and
push
pop
repz
xchg
addl
test
dec
mov
jl
push
dec
jle
fstpl
clc
fs
xchg
lcall
popa
inc
or
pop
notl
out
movsb
dec
push
xchg
inc
push
cmp
pextrw
cwtl
mov
movsl
dec
sub
notl
adc
int
jle
jg
inc
pop
cs
in
xchg
push
sbb
xor
not
enter
mov
daa
push
xor
sbb
icebp
pop
scas
cld
and
lock
adc
movsl
jmp
sub
pop
pop
aam
icebp
ja
jno
dec
cmp
push
mov
pop
mov
jne
shl
fsub
in
cmp
inc
bound
xor
mov
in
cmpl
out
cmp
or
and
fisttps
repnz
mov
mov
sbb
jae
js
xor
pop
in
icebp
cmp
fsubl
stc
xchg
and
cwtl
inc
dec
lret
jnp
sbb
cmpsl
push
flds
lahf
popf
inc
mov
mov
or
sbb
sub
sbb
pop
mov
scas
popf
mov
push
je
test
lock
iret
mov
jg
pop
and
loop
imul
inc
fbld
or
push
or
inc
jo
or
sbbb
int3
es
xor
std
cmp
fld
pop
sbb
repnz
loope
gs
add
sbb
jbe
jmp
jge
xchg
mov
aaa
pop
je
or
flds
jbe
mov
and
push
push
add
jo
stc
cmp
je
push
dec
xchg
mov
inc
or
cmpsb
inc
xchg
xchg
mov
mov
es
pop
xchg
jno
sub
sub
pop
sub
jg
and
lcall
and
and
testl
jns
mov
scas
xor
pop
es
jo
mov
add
xchg
push
test
push
repz
fmul
insb
sbb
insb
je
outsb
jnp
adc
push
cmc
rorb
sub
sbb
sub
sbb
xor
add
int
sahf
arpl
adc
xchg
pop
xor
add
push
hlt
test
xchg
sbb
sti
cmp
cmpb
jg
stos
xchg
mov
ret
adc
adc
mov
lret
cmp
mov
mov
sub
adc
sarl
or
aas
inc
cmc
jbe
and
or
dec
stc
pop
lcall
iretw
data16
sub
mov
mov
mov
or
loopne
out
idiv
lret
incb
push
gs
sbb
or
lods
sbb
or
mov
les
repz
xchg
mov
roll
mov
sbb
sub
mov
mov
xchg
mov
aaa
std
cs
bound
xchg
loope
nop
pop
add
add
add
xlat
je
jg
xor
pusha
ficoml
lea
dec
call
das
sbb
fs
adc
ror
dec
sbb
xchg
fisttpl
pop
jne
ds
inc
and
and
dec
imul
push
xchg
ljmp
lret
adc
out
cmpsl
cwtl
add
mov
xor
mov
fadds
je
mov
or
std
push
mov
idivb
lock
subb
jo
mov
stos
mov
ret
dec
jae
es
inc
insl
inc
mov
movsb
cmpsl
aas
cmpsl
mov
mov
lods
xchg
mov
sub
jp
mov
xchg
mov
mov
sti
shlb
or
pop
and
xor
or
fldl
pop
pop
xchg
fldcw
popa
popa
pop
and
pop
mov
push
pop
out
pop
sub
xchg
mov
es
cltd
test
mov
xchg
mov
xchg
pushf
sbb
clc
jo
pop
add
or
outsl
fistps
fsubs
inc
add
or
lock
cmp
lahf
cli
push
in
add
xchg
jbe
in
imul
mov
pop
movsb
ja
insl
insb
dec
sub
add
clc
idivb
cmc
jg
pushf
cli
enter
shll
cmp
bound
xchg
jns
and
orl
cs
gs
lock
add
insb
pushf
inc
inc
jnp
test
in
mov
rcr
lock
xchg
cmc
and
jmp
pop
adc
jae
test
pushf
jbe
popf
insl
xor
into
nop
insl
push
dec
xchg
inc
pop
jne
in
repz
imul
mov
add
add
lret
sub
iret
sbb
sub
push
sbb
mov
das
arpl
aam
inc
loop
fisttpll
int3
es
fidivl
pop
outsb
xchg
xchg
out
or
adc
pop
and
cmp
mov
std
je
xor
adc
mov
in
leave
fcompl
movsb
arpl
mov
jge
cmp
sbb
jbe
sbb
adc
or
bound
xor
sbb
scas
das
push
pop
cmp
and
push
xchg
scas
inc
adc
les
ss
dec
cmpl
daa
push
adc
adc
xlat
sub
jae
cmp
mov
ds
inc
mov
lahf
mov
or
test
mov
int3
or
insb
fs
xchg
loope
js
scas
adc
push
mov
rcr
ja
js
pop
stos
sub
adc
loope
cmp
rorl
inc
stc
fbstp
imul
fildl
test
mov
dec
pop
scas
jne
lcall
lods
mov
cmpl
dec
adc
sahf
test
mov
sbbb
mov
xor
mov
data16
adc
loop
cmp
insb
mov
imul
pop
cmpsl
lret
inc
rcll
cmp
pop
dec
or
push
dec
into
or
add
xor
in
xchg
stc
adc
adc
adc
or
imul
ds
xor
mov
push
add
jns
das
gs
in
pop
andb
inc
xchg
arpl
jne
adc
negl
jno
fwait
les
add
dec
mov
cmpsl
sbb
in
je
xlat
call
test
pusha
pushf
inc
nop
fsubr
mov
loope
mov
out
aad
push
sbb
cmp
dec
lret
xor
inc
cmpsb
jns
fnstenv
cmp
jecxz
xchg
daa
arpl
aad
mov
mov
outsb
scas
adc
add
inc
adc
push
gs
inc
inc
mov
jae
lds
ljmp
test
cltd
sub
mov
movsl
inc
cwtl
mov
nop
jno
inc
enter
popf
and
lret
jl
cmp
es
repz
aam
lock
cli
adc
pop
loope
mov
popa
push
xor
fsubrs
and
mov
push
dec
sub
jmp
stos
sub
xchg
adc
or
lea
dec
popl
mov
fwait
nop
cmpsb
jns
dec
out
test
add
jecxz
or
xchg
mov
clc
fisubl
ljmp
pop
pop
dec
xor
jo
out
push
aaa
xchg
sarb
js
xorl
cltd
loopne
pop
xor
stos
add
xchg
or
xchg
in
int
lcall
or
clc
fwait
arpl
push
jnp
add
daa
mov
xchg
xor
shll
xchg
lds
fistpll
dec
shlb
dec
in
ret
dec
pop
dec
fadds
mov
lret
daa
jl
jg
outsb
jne
dec
fs
cmp
out
imulb
xor
sub
pushf
cltd
sbbl
sub
pusha
xchg
test
jp
mov
xchg
xchg
stos
addr16
aaa
add
pusha
adc
fbstp
xlat
loope
insb
jns
inc
gs
jae
jle
push
pop
pop
push
xchg
ror
or
mov
stos
inc
frstor
pop
pop
cs
popa
push
imul
in
arpl
push
add
cmpsl
iret
jp
push
ret
jb
mov
xor
std
arpl
stos
pop
inc
in
or
push
outsb
mov
mov
int3
cld
or
jb
inc
shll
rorb
mov
lret
leave
push
cwtl
cwtl
movsb
out
insb
xor
jb
jbe
sbb
sbb
ss
aaa
fdivs
or
fildl
movsb
pop
mov
dec
xor
sbb
sbb
inc
xor
or
scas
push
fcmovnb
and
push
leave
push
xor
xor
inc
mov
in
sbb
jnp
daa
iret
stos
cmp
push
jno
outsl
fsubrl
popa
lret
cmp
loop
loopne,pt
pop
movsl
inc
xor
and
xlat
dec
lahf
fidivs
cmp
enter
lret
xlat
movsl
das
in
pop
mov
inc
cs
cmp
jbe
jle
cwtl
fsubl
fsubrp
sub
dec
outsb
pushf
sbb
adc
mov
add
adc
iret
sbb
mov
jne
and
adc
push
xchg
sub
pusha
push
pop
cs
arpl
mov
mov
jnp
push
sahf
dec
or
or
adc
mov
jecxz
rcrl
mov
rclb
in
and
mov
fsubs
cmc
mov
cmpsl
push
ror
ljmp
shr
mov
cmc
aaa
or
gs
lock
cmc
add
xorl
sbb
outsl
data16
stc
lret
adc
cmp
data16
push
mov
pop
movsl
sbb
cli
jno
push
xor
xchg
mov
paddd
inc
mov
pop
inc
inc
jge
mov
popa
imul
xchg
repz
aad
xchg
inc
imulb
sub
and
daa
sub
xlat
daa
pusha
imul
jge
mov
in
addr16
movsl
dec
sbb
adc
sub
mov
dec
sub
inc
mov
repnz
ja
popf
push
xchg
pop
jle
cmp
mov
add
mov
pop
inc
inc
adcl
je
dec
repnz
insl
lds
inc
dec
xor
ret
aas
adc
rorb
adc
jb
pusha
pop
push
testb
xchg
std
xor
inc
cwtl
jbe
aaa
mov
jae
mov
cmp
jmp
in
or
fdivl
mov
imul
arpl
mov
push
xchg
ret
ret
addr16
es
add
pop
int
jl
push
vaddsubpd
push
lods
ja
cmpsb
mov
jno
jmp
mov
out
sbb
rolb
add
test
outsl
mov
add
dec
mov
clc
adc
push
push
popa
mov
aas
pop
clc
mov
out
int
pop
xchg
pop
sub
add
loop
testb
mov
cltd
pop
push
inc
xor
aam
mov
xchg
xchg
test
inc
addl
int
popa
or
jg
fwait
xchg
xor
push
push
and
add
inc
pusha
lods
fldenv
jmp
dec
fucom
mov
in
adc
push
mov
mov
mov
add
icebp
cltd
dec
adc
mov
cmpsl
sbb
dec
lret
call
andb
aad
sbb
fadds
cmpsb
sbb
jmp
adc
iret
push
imull
pop
add
sub
and
mov
jb
xchg
jnp
xchg
add
in
xor
pusha
lods
repz
mov
xchg
fwait
mov
jb
jo
jg
xchg
popf
mov
decl
push
dec
mov
mov
mov
sbb
mov
jecxz
sbb
push
dec
mov
adc
add
inc
test
ljmp
les
call
cld
dec
push
in
mov
ficompl
mov
int3
out
daa
pop
jle
fsubp
mov
lds
jmp
mov
sbb
jnp
movsb
jns
ds
or
jbe
pop
jecxz
or
sub
aam
aaa
xchg
push
icebp
or
mov
cmp
mov
pusha
push
push
mov
rolb
cmp
scas
in
push
and
sub
inc
das
ljmp
add
xchg
enter
daa
lds
cmp
divl
enter
and
mov
dec
add
movsl
dec
xchg
and
lahf
std
inc
rcll
sarb
sbb
jbe
lcall
pop
in
dec
js
xor
ja
punpckhdq
jp
xchg
pusha
cld
fmul
aam
sub
rep
call
insb
adc
xchg
mov
and
mov
mov
enter
std
call
int
xchg
sub
pushf
std
lcall
pushf
mov
addr16
sbb
jl
test
addr16
jg
int
mov
mov
mov
pop
fs
rclb
cmp
jb
xchg
xor
loop
dec
mull
dec
lret
pushf
roll
cmp
filds
jecxz
shll
cmc
lret
mov
outsl
inc
mov
adc
subl
mulb
je
lods
je
fcoms
cli
movsb
fidivs
sub
inc
in
daa
pushf
sbb
xlat
adc
stos
dec
adc
jb
loopne
pushf
js
adc
adc
or
dec
repz
xor
xchg
add
mov
xlat
push
js
jb
or
sti
or
jmp
sti
lcall
popa
push
dec
mov
inc
int3
std
aad
loopne
in
lock
jecxz
lret
imul
mov
jg
leave
lods
sub
mov
stos
dec
fstl
cmc
fistl
shrb
shr
flds
xchg
pushf
aas
mov
aaa
jb
test
and
inc
shrl
in
mov
cwtl
xor
ds
fcmovbe
mov
push
lds
cmc
xor
mov
stos
or
adc
add
mov
loope
hlt
ret
divb
xchg
gs
clc
movsl
pop
dec
ja
push
cmpsl
enter
pop
jnp
inc
ret
loop
lea
xchg
sti
xchg
and
shrl
pop
or
lea
push
push
test
es
cmpsl
imul
jecxz
clc
ds
clc
push
icebp
push
xchg
xchg
call
ja
mov
pop
push
stos
xor
test
xor
xchg
pop
cmp
cmovno
dec
add
mov
cltd
dec
lods
repz
push
adc
mov
fstl
xchg
cwtl
sbb
push
test
and
testl
jmp
or
pop
xor
js
and
cmp
outsl
or
ja
inc
xor
xchg
arpl
mov
dec
mov
movsl
cs
pop
shlb
js
dec
add
test
mov
push
xor
and
jne
fs
out
mov
mov
mov
daa
cld
xchg
mov
mov
mov
lock
push
sarl
push
or
jp
inc
inc
mov
mov
insb
frstor
push
jle
sbb
mov
fcomip
fisubrl
outsb
fnstenv
jmp
jnp
test
ds
in
daa
popf
loop
fwait
mov
push
xorl
xchg
rcrl
mov
lahf
scas
sub
mov
nop
and
pop
insl
push
iret
cmp
mov
push
pop
hlt
pop
cld
cmp
hlt
xchg
into
xchg
arpl
cmp
or
cmp
sub
fimull
xchg
lcall
pop
lods
adc
rol
push
jmp
addl
jo
xor
inc
add
movsb
add
xlat
push
push
orl
scas
mov
sbb
decl
or
add
xchg
and
ficoms
in
jo
or
scas
int3
int3
cmpsl
and
push
inc
cmp
movsl
arpl
rolb
push
in
jmp
mov
daa
fstl
sub
mov
cwtl
ds
cmp
ja
sbb
cmp
push
inc
add
jge
xor
mov
mov
mov
or
inc
js
and
pop
mov
enter
dec
loope
ja
fdivrl
mov
outsb
bound
shlb
sub
cli
cld
xchg
ljmp
and
ret
push
mov
inc
int
pushf
nop
sub
inc
sub
sub
pop
lcall
mov
sbb
or
sub
ljmp
mov
les
mov
adc
ss
or
cmp
popf
cmp
lret
vmovhpd
cmp
stos
add
dec
pushf
mov
cmc
xchg
test
pop
outsl
and
loop,pt
mov
stc
cmp
adc
mov
xchg
leave
imul
mov
push
mov
in
xchg
es
xchg
gs
scas
pcmpgtw
push
loopne
mov
rcll
pop
cli
adc
sarb
repz
mov
jbe
inc
cmp
shrb
in
adc
pushf
inc
xchg
xchg
jmp
outsl
push
aad
clc
nop
leave
mov
dec
call
or
or
cmp
cmp
mov
mov
lea
pop
xor
sub
dec
pop
cmpsb
jmp
adc
lret
dec
enter
inc
xchg
and
in
inc
pop
or
inc
xchg
cmp
jb
mov
sbb
jg
sar
mov
testb
sbb
mov
lds
sbbl
fsts
mov
lds
das
mov
movsl
adc
lods
or
ret
test
loop
adc
adc
cmpsl
ret
push
inc
mov
sbb
lods
dec
mov
mov
mov
jae
rcrl
mov
sub
stos
shrb
out
arpl
fnstenv
pop
pop
pop
fstpl
rcr
mov
sahf
xchg
aad
fsubr
and
addr16
mov
push
xor
xchg
sbb
jnp
pusha
lcall
add
inc
cltd
test
mov
lea
clc
test
mov
ficomps
mov
hlt
sarl
leave
or
fistpll
push
fs
scas
add
js
idiv
pop
mov
xor
sub
in
inc
adcb
pop
inc
mov
jnp
enter
orl
xor
lret
dec
sub
jne
xchg
mov
sbb
dec
jmp
jns
sbb
xchg
jg
daa
orl
out
jmp
sub
push
mov
cwtl
jp
pop
sub
outsb
dec
hlt
insb
dec
sbb
jnp
mov
jle
pop
in
dec
popf
pusha
jecxz
movsb
fists
xor
jmp
xchg
push
test
clc
popf
or
xchg
inc
aas
xchg
stos
sahf
add
and
mov
or
xlat
repnz
adc
add
or
ret
pop
xor
push
hlt
loopne
hlt
arpl
out
out
out
sbb
mov
daa
push
xchg
icebp
pop
mov
pop
fdivrl
sbb
aam
lds
xor
bnd
adc
movsb
sbb
jbe
inc
mov
sbb
enter
xchg
adc
ljmp
dec
or
aad
enter
sbb
mov
push
inc
mov
loop
cmp
xchg
fildll
inc
dec
sti
xor
in
sarb
enter
daa
ret
sub
cmp
pop
mov
sub
and
cmp
jle
ds
lea
movsl
push
push
in
and
outsl
inc
push
push
inc
pop
test
jmp
nop
push
js
loope
xor
js
outsl
mov
cmc
inc
pop
push
mov
loope
mov
fsubl
subb
das
mov
adc
dec
test
iret
orb
cmp
lahf
cmpsb
push
and
sub
pop
pop
stos
sarl
push
cmpsl
pushf
pushf
mov
jmp
popa
test
cmp
mov
pop
fisttps
xchg
leave
test
ficoml
sbb
cmp
pop
cmp
lret
aad
scas
sbb
cmp
les
mov
or
cmc
pop
jmp
outsl
add
stc
out
xchg
notb
sub
popw
xchg
insb
lods
lods
sahf
daa
mov
leave
out
sbb
xor
jecxz
in
std
test
icebp
or
gs
loopne
icebp
push
pop
mov
arpl
imul
int
mov
sbb
popf
xor
fmul
adc
into
das
sub
in
mov
out
out
jmp
cmpsl
sub
ds
adc
jmp
movsb
push
lahf
dec
inc
pushf
test
add
loope
lret
outsl
or
lea
lcall
neg
pop
pop
iret
inc
adc
xor
sbb
ljmp
inc
lods
out
je
out
mov
jb
out
push
dec
hlt
and
and
or
rorl
mov
leave
inc
dec
std
sub
xlat
cwtl
cmpsl
repnz
xor
mov
lods
movsl
xorl
inc
lret
cmp
out
mov
xor
lock
pop
mov
ja
test
cwtl
lahf
and
dec
insl
mov
mov
out
add
lods
mov
flds
fidivl
mov
mov
dec
fdivrl
sub
push
pop
test
ss
push
push
push
fidivl
fldl
arpl
lea
xchg
adc
push
ljmp
mov
stc
pop
xchg
idivb
push
cmp
pop
add
mov
outsb
xor
dec
mov
xchg
xchg
xchg
push
sub
rcl
dec
dec
or
dec
ret
fwait
pop
mov
add
xchg
sbb
xor
sti
pop
or
xchg
mov
push
movsl
xchg
xchg
add
mov
jecxz
mov
ss
ja
adc
dec
jmp
jae
cli
daa
fs
hlt
xchg
sub
test
jne
push
jo
aaa
out
jb
xchg
inc
jns
mov
xchg
dec
jecxz
sbb
dec
out
addl
dec
int
addr16
cld
jp
lahf
arpl
mov
push
jnp
jmp
jbe
jnp
sub
repz
fbstp
mov
stos
xchg
jmp
xchg
insl
mov
repz
push
popf
xor
or
cmc
jp
push
test
stos
adc
andl
fdivrp
sbb
pusha
cmp
insb
adc
push
xor
adc
out
ret
push
pop
push
mov
arpl
dec
inc
icebp
add
or
xor
inc
push
xor
mov
ja
dec
call
out
or
leave
fmulp
addr16
lds
cwtl
mov
push
jmp
leave
das
mov
push
cmc
mov
cmpl
fstps
add
fmull
or
sub
jl
mov
dec
lock
push
movsb
adc
imul
into
adc
out
and
cltd
test
push
pop
out
inc
fsubrl
cmpsb
pop
push
in
mov
inc
sbb
ret
cmp
or
dec
sub
pop
adc
ds
lahf
push
movsl
pop
aam
and
jne
pop
mov
push
jmp
popf
addl
stos
xor
cmp
pop
pop
sub
lcall
inc
das
loope
adc
fmul
mov
sub
cmp
adc
sub
mov
andb
dec
sbb
imul
nop
or
fidivs
sub
jne
pop
sub
adcb
sti
mov
mov
fcoms
adc
push
adc
mov
jge
mov
loop
sub
jge
inc
adc
fcoms
rcrb
lret
std
roll
cmp
mov
or
sub
jl
out
and
das
outsl
loop
outsl
loop
loopne
cmpsb
jle
adc
sub
add
call
mov
xchg
fcoms
out
int3
sar
cmp
mov
in
push
lea
gs
push
loopne
cmp
ret
adc
pushl
imul
repz
in
push
xchg
dec
icebp
sub
adc
pop
xlat
and
sub
xlat
shlb
push
cmp
mov
gs
nop
jg
jne
cmpsb
rclb
test
mov
jb
jo
fsubs
sub
fcomps
addr16
hlt
gs
dec
sahf
add
or
mov
mov
fdivl
jae
dec
imul
and
out
adc
or
dec
std
sarb
bound
mov
addr16
or
push
or
ds
mov
add
lock
adc
jp
pop
mov
hlt
bound
mov
mov
jp
push
cmc
jne
stos
push
icebp
lods
and
cmc
mov
loope
sbb
xchg
pop
stos
pop
push
pop
rclb
pop
sub
dec
or
xchg
mov
push
clc
add
mov
pop
inc
inc
popa
out
nop
pop
movsb
cmp
stos
std
push
sub
push
hlt
movsb
divps
clc
add
push
sbb
ret
jge
cmp
adc
test
jg
xchg
fistpl
sbb
adc
enter
mov
dec
mov
xor
ljmp
call
xchg
xor
popf
jecxz
loop
and
std
fldt
pop
icebp
push
lods
ja
sub
inc
xchg
popf
mov
and
out
fxch
jne
stc
xorb
and
jns
icebp
inc
xchg
adc
add
out
jp
sub
inc
lea
and
mov
mov
out
insb
push
andb
jecxz
jle
popf
mov
cmp
pusha
sbb
sub
push
jmp
es
pushf
scas
inc
jae
pop
aas
push
cs
jo
push
in
mov
ret
inc
movsb
stos
test
and
cwtl
pop
sbb
icebp
or
scas
push
mov
cmp
in
fs
push
push
pop
ret
insb
pop
mov
jge
arpl
fs
hlt
xchg
or
scas
jmp
push
fisubl
jae
lahf
in
pusha
int3
xchg
pop
sti
pop
cmp
out
fidivs
xchg
lds
fdivrl
imul
rclb
lcall
movsb
fsubrs
rolb
aaa
xchg
adc
sti
cmpsl
jle
xchg
pop
fwait
jl
aas
dec
pop
repnz
xchg
xchg
xor
shrb
mov
jns
xor
push
sub
mov
cmpsb
dec
in
mov
insb
mov
rcll
inc
jne
jno
xchg
mov
pop
jo
cmp
arpl
movsl
push
movsl
fs
and
add
cmc
push
mov
gs
add
inc
movsl
xor
or
pop
sub
daa
pop
jae
leave
push
mov
loope
xchg
outsl
fdivrl
sub
cmc
or
xlat
repnz
add
inc
lea
test
cli
imul
jae
int
xor
sub
mov
lcall
sub
sbb
jp
jnp
dec
test
pop
aas
jg
xor
fisubs
loopne
and
inc
fs
out
js
repz
inc
jp
out
dec
xor
into
clc
mov
lret
outsb
rcr
dec
cmp
jae
or
outsb
push
cmc
out
sub
xchg
loop
xchg
stc
pop
or
inc
add
andb
testb
les
mov
sti
or
mov
idiv
xchg
jmp
in
xchg
cmp
out
outsl
pop
loope
adcb
rorb
les
pop
test
jmp
call
xlat
bound
sub
xor
mov
inc
or
push
arpl
cs
mov
xchg
nop
pop
lret
add
jbe
fnstcw
xor
call
push
pusha
lea
pusha
fucomp
imul
test
and
mov
jl
dec
mov
pop
pop
les
jnp
out
mov
inc
loop
imul
xchg
sub
loop
sbb
and
shr
cs
testb
std
ja
sbb
jb
mov
hlt
aad
andl
inc
lret
push
xchg
or
mov
cmp
jge
subb
ficoml
inc
loope
mov
or
das
and
sahf
dec
sbb
test
mov
rorb
icebp
popf
aad
lods
mov
repnz
and
call
cmp
pop
mov
outsb
shlb
out
test
dec
push
pusha
mov
and
cmp
adc
ljmp
sbbl
jb
mov
xor
push
icebp
mov
popa
dec
cltd
sub
ja
mov
dec
xchg
or
xchg
push
ficompl
int3
add
andb
in
lahf
fwait
jge
cwtl
push
dec
push
jb
jno
ret
add
dec
xchg
push
fs
xor
dec
pop
in
lretw
jg
mov
dec
in
inc
jge
pop
lods
les
shl
pop
inc
sub
lods
mov
shlb
dec
sar
std
jne
inc
cld
mov
sbb
lea
mov
jns
rcrb
loopne
inc
xor
fsubp
pop
out
sub
inc
loope
and
int
mov
mov
mov
jnp
mov
inc
in
imul
fbstp
mov
mov
out
outsb
inc
cmpsl
inc
add
in
inc
push
icebp
sub
mov
push
add
and
jbe
sbb
push
imul
mov
push
lods
mov
movsl
iret
mov
cmp
mov
mov
pop
arpl
pop
inc
testl
loope
push
sbb
xchg
notb
int3
jle
pop
pop
imul
lds
pushf
mov
out
xor
mov
mov
mov
movsb
xor
push
jbe
test
dec
mov
into
aaa
push
lret
out
lock
cmp
aaa
lahf
leave
dec
into
sub
push
push
add
sub
dec
loopne
and
cmc
cmp
hlt
aaa
push
xrelease
cli
adc
in
xchg
movsb
enter
daa
shrb
cmp
add
mov
mov
ds
sub
jnp
lahf
cwtl
int3
adcb
dec
test
or
mov
movsl
lods
xchg
shll
test
pop
js
rorl
pop
mov
test
rclb
fsubl
jb
in
sbb
out
adc
fisubrs
in
leave
dec
addb
sbb
cmp
and
jle
lods
fnstcw
call
add
lcall
movsb
mov
sub
xchg
adc
sahf
push
adc
xor
loop
push
push
cli
jg
push
xchg
mov
push
jb
fwait
adcb
in
das
ss
cmc
cmp
mov
dec
mov
shll
cmp
or
into
inc
mov
cmc
scas
push
add
loop
sbb
xor
stc
adc
clc
adc
sbb
xor
mov
clc
aad
mov
mov
xorl
mov
jecxz
inc
or
lea
xor
pop
push
adc
add
lods
dec
mov
clc
setl
adc
jbe
mov
cmp
mov
out
fstps
movsl
lcall
movsb
inc
dec
fs
mov
repz
xor
jecxz
jb
js
testb
cmp
pop
jb
ficoml
mov
sbb
fildl
pop
adc
add
inc
jbe
and
aas
int3
fmuls
dec
pop
repnz
and
lods
or
cmp
xchg
push
inc
sbbl
out
sbb
int3
fidivs
lret
test
jne
adc
lock
cmp
mov
bound
aam
out
pop
ret
rol
and
insl
jnp
xchg
dec
pop
pop
je
mov
mov
xor
stc
imull
mov
out
movsb
aam
enter
test
jmp
clc
pop
mov
adc
xor
and
adc
mov
into
or
rcrl
or
std
negl
ds
fisttpl
mov
int3
popf
movsl
nopl
or
push
mov
cltd
popa
adc
clc
mov
cltd
inc
sub
loopne
jae
and
lret
jg
inc
rcl
sub
iret
mov
fwait
lods
out
xor
lock
in
add
in
sub
xchg
or
xor
dec
movsb
or
fs
les
out
insb
xor
subl
mov
addr16
je
sbb
jne
mov
loop
mov
sbb
sbb
jne
cli
dec
mov
fbld
bound
push
fcoml
nop
push
out
lds
cmp
stos
sbb
insb
fidivl
hlt
xor
jnp
and
jle
or
nop
cmp
dec
cmpsl
sbb
mov
xchg
lea
jmp
mov
lods
jae
ret
test
mov
lcall
sub
inc
pop
stos
push
xchg
and
js
sbb
xchg
hlt
imul
mov
repz
pushf
adc
lods
jg
mov
pop
psllq
hlt
or
fbld
hlt
push
inc
cli
out
dec
or
movsb
lret
out
outsl
fcmove
jne
xchg
dec
popa
mov
pop
cwtl
nop
nop
fidivrs
stc
push
mov
maxps
xchg
inc
int3
movsb
mov
push
and
jge
adcl
or
in
push
add
inc
or
push
dec
cmp
mov
jo
and
daa
outsl
jne
lahf
push
xchg
cmp
push
inc
mov
cmpsb
loop
and
enter
daa
mov
popa
jmp
sub
setp
cmpsb
mov
ds
adc
and
jno
lahf
mov
insb
push
bound
xchg
xchg
mov
test
jne
iret
or
adc
push
movsb
push
loope
pop
mov
sub
repnz
outsb
push
dec
adc
mov
jns
sbbb
sbb
sbb
and
xchg
ror
adc
sub
roll
jno
lcall
iret
mov
sbb
std
imul
jno
fistpll
jle
mov
sbb
mov
movsl
xor
or
push
std
movsb
ss
addr16
fadds
mul
lret
in
or
test
jns
fxch
and
cmp
xor
ret
and
jecxz
mov
adc
nop
cmc
add
mov
out
dec
fiadds
out
cli
sar
inc
jbe
ss
test
in
mov
jge
fwait
gs
test
loopne
mov
pop
inc
or
ja
cmpsl
imul
loopne
xrelease
test
les
xlat
loopne
push
sub
jge
lcall
cs
aad
in
jne
adc
add
push
fldcw
dec
xchg
je
nop
push
jnp
lea
mov
jbe
and
adc
dec
pop
popa
cmc
fldt
idivl
pop
or
or
insl
or
xchg
cli
aas
imul
cmp
loop
add
aaa
not
insb
and
lds
cwtl
xchg
push
sub
mov
iret
xchg
adcl
xchg
icebp
mov
lds
mov
rorb
das
pop
clc
mov
push
jbe
aam
cli
rol
movsb
adc
movsb
rol
bound
cmp
inc
int
icebp
dec
aaa
inc
lods
fs
push
mov
data16
mov
push
sub
pop
pop
int
lcall
push
out
in
fucom
mov
out
adc
ljmp
arpl
push
stos
lret
out
add
xchg
or
sti
push
cmpsl
adc
add
mov
xor
and
pop
xchg
movsb
test
jmp
xchg
stc
test
xor
push
shrl
adc
fstpt
push
xchg
scas
aam
jg
mov
call
leave
pushl
mov
xor
jne
or
xchg
insb
in
ja
xchg
cmp
jl
mov
and
ja
jnp
dec
mov
or
sarb
aad
xchg
daa
fdivs
adc
mov
mov
out
out
int3
sbb
sub
jg
xchg
jbe
mov
adc
das
out
sbb
mov
inc
push
addr16
stos
xchg
jp
ret
cmp
mov
int
jnp
push
pop
in
outsl
in
pusha
ljmp
xchg
pusha
mov
int3
inc
mov
fstpl
ja
or
loope
xlat
push
subb
and
lahf
fistps
sahf
imul
jnp
stos
push
cmp
rclb
jle
fists
ret
cmpsb
pop
inc
sarb
hlt
push
and
arpl
sarl
push
data16
jle
mov
int3
push
jne
pop
mov
ficomps
leave
lds
lcall
xchg
std
repnz
popf
movsb
inc
jns
push
xor
xchg
sub
sbb
add
aaa
rol
std
or
sahf
cmp
pop
insb
dec
jl
fistpl
dec
lods
in
push
xor
mov
scas
push
add
xor
cmp
jne
jno
mov
shlb
push
test
enter
daa
mov
in
jno
and
pushf
mov
ds
outsl
movsl
jns
mov
lahf
push
stos
push
xor
xchg
xor
mov
inc
mov
jg
divb
js
mov
mov
lcall
fdivrl
push
sub
or
dec
adc
xchg
push
es
subb
xor
scas
mov
inc
mov
mov
jb
sahf
aam
int
sarb
fmulp
cmp
arpl
push
pop
adc
mov
fwait
sbb
lods
push
sahf
fs
rolb
sahf
mov
mov
pop
test
mov
fs
push
mov
gs
inc
ss
dec
sbb
ljmp
xor
dec
shll
mov
call
stos
xor
cmp
dec
xor
push
cmp
jbe
jl
adcb
add
data16
dec
adc
mov
shl
mov
adc
or
leave
xor
mov
push
mov
and
pop
xor
imul
pop
repz
inc
cmp
pop
sub
sbb
pushl
push
sub
pop
mov
inc
cmc
sub
cs
loop
nop
jmp
test
jp
inc
push
mov
fldenv
sbb
je
adc
mov
lea
call
and
int
adc
jb
dec
jle
fistpl
xchg
lret
rolb
loope
inc
xor
cmpsl
jb
mov
and
mov
inc
negb
sbb
cwtl
dec
fisttpl
mov
pop
scas
andl
out
outsl
lret
arpl
stc
mov
dec
jb
push
xor
lock
fisubrs
testb
rcrb
inc
aam
pop
xchg
ret
ffreep
xor
daa
lods
cwtl
insl
dec
inc
xchg
sbb
jbe
movsl
icebp
and
pop
mov
mov
std
rcl
adc
loop
sahf
push
mov
decb
mov
sub
xor
or
clc
in
xor
dec
jnp
ljmp
xor
pop
stos
mov
and
lcall
xchg
jbe
adc
iret
and
xor
lods
mov
lahf
mov
mov
lods
adc
in
mov
test
ss
or
push
ss
pop
add
sbb
sbb
shll
xor
das
in
push
jle
xchg
mov
stos
mov
inc
iret
mov
fstl
dec
stos
mov
inc
in
fldt
int
leave
mov
pop
decl
sub
jne
mov
mov
popf
insb
out
int
mov
rolb
pop
dec
rcll
das
push
out
loopne
sub
xor
addr16
iret
loope
js
push
insb
lret
jnp
jno
jle
dec
mov
pusha
test
ljmp
inc
rolb
jbe
cmp
cmp
jmp
sbb
fistl
jl
stos
push
dec
mov
sbb
subb
push
scas
fisubrs
addl
adc
rcll
std
pop
jge
or
mov
and
inc
add
inc
or
lcall
fidivl
inc
cmp
aas
jl
pop
notb
fdivrp
xchg
in
mov
inc
in
mov
mov
imul
cmpsl
mov
push
sbbb
jbe
fsts
sbb
inc
or
add
repz
rorl
je
push
adc
fnsave
cmp
adc
lds
and
sub
mov
add
mov
cmpsb
call
pop
adc
daa
mov
push
test
lahf
jg
add
arpl
sbb
movsl
andb
and
lahf
cmc
dec
sub
scas
add
sub
or
adc
adc
mov
pop
outsl
inc
or
or
or
sub
adc
adc
outsl
loop
cmpb
sbb
push
mov
xor
and
in
push
mov
and
sub
aaa
pop
movsl
fcomps
push
mov
add
and
sahf
pop
jb
test
adc
cmpsl
mov
jg
fiaddl
sub
lods
mov
fs
xchg
adc
aas
cmp
mov
and
lret
mov
cmp
mov
jmp
cmc
add
pushf
xor
outsl
cmp
es
mov
adc
ja
add
mov
imul
xor
out
add
cli
cmp
mov
in
add
sti
dec
add
mov
shll
pop
and
adc
and
int
gs
movsl
xchg
sbb
sbb
cmp
ret
lcall
lock
add
or
call
aad
cmp
dec
xorl
or
or
and
cmpsl
movb
sub
movsb
inc
push
pop
mov
push
adc
outsl
mov
lea
pop
push
popf
faddl
mov
cmpsl
aas
test
seta
xchg
and
inc
or
negb
dec
std
adc
mov
outsb
mov
lahf
cmpl
mov
jle
aad
inc
lock
and
insb
mov
cmp
ret
outsb
sub
stos
or
dec
dec
pop
xchg
cmpsl
mov
cmp
push
lods
cmp
mov
lods
int3
pop
and
cltd
xchg
pop
add
dec
mov
cmc
mov
test
mov
sbb
clc
sub
xchg
mov
mov
popa
pop
sbb
sti
hlt
hlt
stos
test
jp
dec
jge
xchg
xchg
mov
jnp
cmp
add
sahf
sub
mov
mov
rclb
in
lods
sbb
dec
fisttpll
inc
fwait
cmp
arpl
stos
add
xor
adc
aam
out
or
jg
fcmovne
inc
mov
cmpl
cwtl
push
jo
mov
pop
mov
test
jnp
pop
pop
xor
push
mov
fwait
add
lods
cld
ret
bound
mov
adc
cmpsb
xchg
xorl
mov
sub
cs
sahf
addr16
sarb
mov
mov
popa
pop
insb
xor
aas
lret
jle
jns
movsl
add
loope
in
sti
adcl
arpl
jae
fsubrl
std
and
mov
aam
stos
ret
push
cli
and
push
xchg
sbb
ss
scas
inc
roll
xor
jne
xor
ret
fwait
pop
mov
std
hlt
in
xor
lods
mov
and
adc
jg
mov
ret
push
adc
xlat
push
mov
push
rcrb
mov
or
xchg
movsb
pop
test
push
iret
gs
jge
xlat
jge
sub
xorb
aad
or
sub
pop
dec
mov
popf
xor
xchg
in
ret
scas
les
jl
pop
mov
jecxz
ss
pop
add
dec
cmpsb
imul
in
and
imul
shl
daa
mov
or
sub
xor
ds
and
daa
imul
jo
movsb
add
push
xorb
fists
int
pop
pop
inc
in
dec
js
ret
scas
aas
lret
push
mul
fs
dec
les
sub
fs
adc
dec
xchg
adcb
divb
xor
push
movsb
scas
jb
dec
push
and
pop
and
mov
push
or
mov
push
cmp
push
hlt
flds
rorb
mov
or
adc
ret
mov
out
or
fdivs
inc
negl
xchg
popa
ror
cmp
movsl
ret
or
pop
cmp
cmc
lret
xor
cmp
mov
loop
dec
sar
jb
adc
jmp
push
data16
lds
lods
std
out
mov
int3
and
outsl
jno
xor
dec
add
out
lea
mov
in
xchg
fcompl
push
lods
adc
lock
imul
xchg
mov
xor
mov
fiadds
push
scas
fcomi
cmp
rcl
xor
mov
fwait
pusha
jae
sti
sahf
or
repz
aad
clc
cmp
loopne
lcall
je
test
aaa
movb
call
and
int
incb
dec
and
fstpt
push
inc
xchg
hlt
mov
imul
scas
jb
lret
repnz
xor
sbb
negb
jl
cwtl
les
bound
push
adc
cld
js
mov
inc
int
mov
das
jg
pushf
and
inc
ss
mov
outsb
mov
ds
jbe
add
dec
ret
std
shll
frstor
dec
sub
mov
icebp
rcl
lods
movsl
jge
mov
iret
adc
mov
and
mov
sub
test
test
xchg
out
push
das
jge
fstl
push
arpl
mov
ljmp
les
fsubrs
stos
enter
notl
push
cmp
xchg
cwtl
dec
add
fwait
xor
jge
mov
movsl
or
sub
adc
sbb
pop
shll
mov
sub
jl
stc
add
push
sub
adc
daa
xor
in
xchg
xchg
sub
bound
test
fwait
pop
push
scas
stos
ja
jb
dec
nop
mov
inc
mov
std
into
bound
or
jne
lods
stos
mov
lods
stos
out
mov
test
shll
add
push
out
lret
sbb
sub
repz
jb
mov
mov
es
insb
mov
shrl
push
ja
lods
leavew
pusha
mov
jb
xchg
fldz
jl
or
mov
ficomps
push
jae
ret
sar
popf
inc
movsl
sub
cmp
or
and
sub
icebp
mov
dec
scas
movsb
or
adc
jo
iret
mov
ret
mov
jmp
xor
mov
arpl
xor
sub
push
jecxz
ficoml
cli
pop
int3
adc
and
inc
and
aad
je
jbe
ret
mov
pop
jl
leave
jo
xchg
movsb
out
jl
push
hlt
add
jp
mov
aaa
or
jmp
pop
jl
in
mov
stc
int3
lds
fabs
imul
mov
sbb
lcall
inc
cmpsb
out
push
fucomi
or
enter
daa
mov
stos
sbb
cld
stos
sub
cmp
cmp
lret
into
adc
xorb
lahf
xor
in
mov
inc
lods
into
xor
dec
nop
pop
imul
js
mov
pop
in
mov
fwait
loope
fwait
out
jnp
mov
outsb
jns
and
pop
and
sbb
or
mov
adc
popl
cmpsl
dec
aam
scas
jo
sub
addl
dec
rcrb
pop
xlat
inc
mov
mov
sbb
ja
test
cmp
fstpl
pop
mov
imul
ljmp
ss
pop
cmp
xor
xchg
neg
jns
lret
outsl
shll
cmp
pop
jp
xor
jns
cmc
xchg
mov
xor
sub
das
lods
test
adc
scas
or
or
ja
in
jle
cmpsb
movsb
add
cli
mov
inc
stos
in
push
dec
sbb
lods
and
or
gs
sbb
mov
pop
fwait
push
xor
ret
stc
icebp
imul
pop
xchg
mov
cmpsl
movsl
cmp
push
ret
push
adc
inc
push
xor
ljmp
aad
sbb
adc
aas
das
sbb
ret
push
loop
je
pop
xchg
jecxz
mov
dec
lea
cltd
insb
mov
cmp
adc
xchg
mov
pop
xchg
sbb
inc
sbb
aas
out
test
mov
frstor
push
and
loope
mov
cwtl
jg
xor
cmpsb
xor
cld
mov
mov
mov
lock
push
mov
mov
cmc
fsubrl
iret
insl
xchg
ret
mov
aas
insl
out
dec
inc
xchg
push
cmpsl
mov
jle
icebp
cmpsl
stos
movsb
lods
adc
mov
repnz
repnz
iret
cmpsb
inc
pop
inc
xor
sub
negb
xchg
stos
pusha
push
repnz
clc
sahf
pop
call
ljmp
fs
push
jb
stos
xchg
out
push
or
push
adc
add
xorb
adc
mov
test
enter
int3
test
insl
in
xchg
sbb
cltd
mov
or
mov
fwait
xchg
sbb
add
imul
ljmp
cs
in
mov
xchg
jns
out
mov
push
adc
push
cltd
std
ja
and
inc
mov
dec
mov
insb
xor
out
jne
push
mov
out
push
add
dec
aam
orl
adcl
out
out
ret
sub
and
cli
addr16
add
sub
std
hlt
jl
or
jnp
daa
sbb
in
sub
fildll
in
or
add
inc
jmp
in
icebp
push
adcl
push
xor
push
jl
shrb
insl
lahf
rcrl
sbb
add
push
sarb
iret
out
rolb
pop
and
loope
lret
inc
or
test
or
aad
bound
fimull
mov
add
out
sub
pop
test
loope
mov
mov
leave
out
aaa
movsb
jb
imul
inc
mov
xor
lret
int3
repnz
or
jle
jl
inc
dec
dec
push
cmp
xor
dec
cs
scas
xorb
jle
daa
cmp
add
inc
push
outsb
ja
jno
in
icebp
roll
daa
mov
cmp
xchg
loope
sub
sbb
cmp
stos
sarl
test
test
sbb
xrelease
and
add
mov
push
cmp
pop
xchg
idivb
pop
sub
aas
push
push
repnz
sbb
fsubl
push
cwtl
sub
int
inc
jecxz
adc
add
inc
cmpb
add
sahf
testb
pop
icebp
int
outsb
add
lret
pop
and
lcall
orl
push
sahf
lock
pop
in
cmp
bnd
and
and
mov
jne
ret
adc
push
mov
fsubr
inc
xlat
negl
mov
cld
cmp
jmp
or
push
pop
lea
outsl
fcmove
jecxz
ret
stc
pop
in
adc
leave
loop
cwtl
je
data16
xchg
mov
in
ds
aad
cmc
xor
mov
sti
pop
sub
cli
gs
xchg
loopne
dec
mov
adc
mov
mov
rcr
xchg
cld
push
test
jmp
in
xlat
sbb
xor
arpl
mov
icebp
sbb
jmp
adc
mov
lahf
sub
sahf
jae
inc
popf
fcmove
fnstcw
pop
ljmp
xchg
call
and
sbb
je
adc
dec
fistpl
and
cmp
pop
inc
mov
jecxz
aas
xchg
loopne
and
adc
mov
dec
and
and
mov
or
push
cwtl
cmp
jecxz
stos
dec
or
cltd
mov
orl
lret
pop
jb
mov
mov
lret
or
inc
xor
aam
sbb
ret
sbb
and
insl
in
lock
inc
mov
inc
sub
icebp
jle
clc
lods
jnp
daa
mov
adc
test
repnz
cli
shr
or
pop
test
mov
xchg
push
mov
jp
movsl
scas
clc
fldpi
jle
dec
jo
ljmp
sub
cmp
jno
movsb
xchg
imul
push
out
jp
orps
push
cltd
stos
ljmp
cmc
addl
sub
dec
dec
loop
test
mov
aas
sbb
mov
or
outsb
sub
ret
add
xchg
decl
dec
xor
pop
dec
or
add
in
loopne
xchg
enter
adc
adc
pop
leave
pop
sbb
push
outsb
dec
jbe
inc
inc
dec
pop
stos
mov
fistl
dec
push
mov
inc
mov
or
out
dec
loop
bound
aam
cmp
lret
jne
sbb
int
xrelease
aas
sbb
pop
sbb
jp
add
mov
hlt
inc
insb
jbe
fidivrs
inc
int3
jle
ss
in
push
fisubl
sub
fisttps
lahf
xchg
jg
cmp
divl
inc
hlt
xchg
jae
pop
cmp
inc
sbb
popl
mov
stos
sbb
ret
jns
sbb
dec
pop
imul
scas
push
enter
cmpsb
adc
adc
iret
dec
pop
int
es
into
mov
jmp
or
outsl
or
xchg
inc
loope
rcr
std
push
mov
jmp
lcall
jl
vdivsd
shrb
repnz
fcmove
pop
sbb
jne
mov
imulb
sbb
inc
jmp
xchg
lahf
lock
inc
jl
jo
dec
xlat
xor
out
mov
jns
popa
sbb
and
jecxz
or
or
leave
inc
jecxz
add
in
fcomps
and
cmp
mov
faddl
sub
sub
lret
nop
cmp
cmc
xchg
cmpsl
es
movsl
pushf
mov
mov
xor
push
push
leave
test
push
les
push
popf
jo
mov
dec
adc
imul
fstps
test
cld
jae
insl
adc
outsb
mov
test
rcr
in
pop
popl
cli
sbb
inc
mov
dec
shll
std
mov
stc
int
dec
mov
pop
mov
mov
push
or
dec
ret
sbb
xchg
or
in
mov
popf
rolb
jbe
fmull
add
rcll
lock
xorb
and
sub
cmpsb
push
mov
lret
add
push
or
dec
mov
adc
cmpsb
into
ja
cmpsb
cmc
pop
lret
pop
outsl
lcall
add
stc
adc
outsl
add
cwtl
and
pop
mov
pushf
fs
adc
xor
cltd
in
sub
or
or
decb
mov
mov
dec
xchg
pop
adc
and
nop
mov
stc
ss
mov
test
sbb
es
into
xlat
pop
sbb
sub
inc
ret
mov
pushf
mov
jmp
repnz
sbb
adc
xor
inc
dec
std
mov
mov
je
mov
jecxz
push
inc
lea
lea
mov
mov
pusha
mov
add
sbb
loope
pand
sti
pop
fsubrl
inc
daa
pushl
mov
or
sub
adc
mov
xor
addr16
std
scas
xor
cmc
aaa
and
mov
sbb
stc
xchg
pop
lret
mov
ja
nop
sbb
push
rorl
mov
arpl
push
aam
pop
pop
ret
stos
arpl
insl
int3
jo
dec
cmp
lock
mov
mov
lods
out
push
mov
cmp
push
mov
xorl
into
test
sahf
in
mov
test
adc
clc
adc
sbb
adc
lcall
aas
sbb
aam
call
push
leave
gs
lgs
add
jns
cltd
loop
cltd
xor
leave
jno
add
and
mov
fsubrs
loopne
jns
fs
jge
cmp
or
and
fwait
cmc
pop
cmp
gs
mov
add
xor
ret
orb
iret
adc
lds
sbb
jns
cmp
sub
dec
imul
mov
cs
jmp
into
lods
mov
pop
shr
sub
jns
out
xchg
cmp
xchg
out
xchg
shrb
sbb
sbb
jp
xchg
xchg
mov
sbb
insb
loope
mov
jle
xchg
loope
shl
pusha
mov
cmpsl
xchg
push
repz
out
push
scas
inc
mov
jae
or
mov
pop
mov
cli
pop
adc
arpl
and
push
pop
imul
scas
int
notb
mov
xchg
lods
popa
or
pop
nop
jae
hlt
sbb
arpl
inc
dec
inc
cpuid
addr16
add
inc
pusha
or
mov
es
scas
addr16
or
pop
loope
rcr
cwtl
xchg
lds
fs
push
hlt
push
repnz
xor
leave
aad
or
aaa
xor
pop
xchg
jge
loopne
sbb
jnp
dec
and
or
pop
stos
jl
jo
dec
inc
nop
aad
or
xor
add
xchg
and
pop
push
dec
rcl
jb
into
cmpsb
ja
lods
in
mov
mov
jo
movnti
jno
pop
sbb
push
cmp
pop
ds
movsl
mov
ficomps
nop
jne
push
daa
push
xchg
test
bound
xor
je
pop
loopne
les
repz
stos
dec
xchg
push
sbb
loope
test
fdivrl
sub
outsb
push
xor
shlb
mov
sbb
sbb
dec
mov
fistps
and
lock
mov
sbb
sub
and
pop
and
aas
lcall
outsb
mov
fmul
sahf
ss
inc
subb
sahf
jg
add
mov
dec
pusha
mov
mov
adc
fdivrs
cmp
popa
imul
sbb
inc
lret
call
cmp
addl
pop
fnsave
push
xor
and
loop
std
mov
adc
clc
pop
add
and
mov
sbb
cli
cmp
inc
xor
js
in
xchg
cmp
xchg
pop
jb
push
lds
lcall
dec
add
add
pop
repz
xor
dec
fs
cmp
je
cltd
ret
fwait
sub
shlb
inc
daa
sbb
mov
jae
jg
insb
aad
push
nop
or
or
stos
or
mov
orl
sbb
pop
das
sub
or
int3
adc
fimuls
mov
pop
jg
insb
inc
scas
lret
aad
int3
aas
les
push
dec
adc
and
leave
jge
mov
dec
imulb
notl
cwtl
mov
fwait
mov
jg
jg
dec
xorl
data16
enter
or
mov
lods
das
xor
mov
sbb
xor
ret
cmp
cmp
push
cmpsl
mov
popf
mov
sub
sub
xchg
or
daa
jne
mov
mov
cmp
bound
mov
push
cmp
inc
data16
dec
inc
fs
leave
andb
lahf
push
popa
int3
aad
pop
push
add
aaa
jle
xchg
stc
cmp
push
movsb
fs
adc
adc
call
cmpsl
dec
xor
mov
mov
mov
sub
insl
and
std
adc
sbb
fs
rorl
scas
mov
push
or
aam
xor
add
popa
xor
fwait
or
inc
pop
in
mov
xchg
addr16
mov
jp
mov
aas
shrl
jns
xor
inc
xlat
inc
ja
sbb
in
cmpsb
dec
int3
cmp
jne
mov
out
pop
cmp
bound
outsb
test
test
iret
xchg
add
xchg
cmp
inc
out
adc
or
sbb
andb
dec
sub
jnp
shl
test
lret
shlb
pusha
daa
dec
mov
xchg
and
pop
adc
add
fadds
mov
int3
add
popf
dec
mov
cmp
stos
add
test
sbb
cs
imul
cmp
sub
dec
adc
popf
iret
or
insl
pop
int3
sub
sbb
inc
adc
gs
fbstp
mov
rorl
pop
adc
adc
vpmaddwd
mov
cmpsl
fldcw
leave
dec
xor
push
pop
aad
jbe
mov
push
sbb
bnd
or
or
addb
xchg
dec
mov
xchg
gs
xchg
jo
and
pop
and
arpl
cmp
js
push
inc
rolb
ret
or
in
cmpsb
dec
mov
daa
mov
jne
inc
xor
jno
push
adc
push
xlat
adc
in
dec
jmp
out
cmp
repnz
cli
imul
xor
pop
in
pushf
shlb
pop
xor
js
xor
mov
outsl
out
daa
inc
out
sub
mov
adc
xchg
jmp
popl
push
xor
push
sbb
lret
in
sbb
int
mov
lahf
pop
lahf
insl
xchg
lcall
cli
mov
test
repz
orb
jg
dec
mov
mov
fcoms
adc
es
je
pop
push
neg
pop
ror
shlb
or
mov
into
cmp
outsl
xchg
xor
shlb
loop
sub
stc
sbb
adc
push
add
ret
pop
pop
lods
sbbb
out
jp
cli
outsb
jnp
xor
rorl
add
jecxz
xchg
test
gs
rol
loopne
addb
and
pop
les
dec
hlt
repz
push
xchg
xchg
lods
add
cmc
cmp
ja
mov
sbb
pushf
repnz
jmp
xor
loop
jne
dec
xchg
nop
call
pop
hlt
inc
pop
stos
mov
je
arpl
jle
push
xchg
andb
cmp
dec
pop
mov
pop
xor
add
cmpsl
push
jmp
xor
pushf
pop
aas
arpl
and
sarl
dec
mov
adc
inc
push
roll
mov
vpaddw
cwtl
imul
mov
pushf
popf
mov
push
orl
adc
insb
daa
cwtl
mov
pop
mov
rcl
lock
aam
add
pusha
aam
and
enter
mov
mov
xor
jmp
mov
add
lods
mov
leave
cli
mov
cs
push
mov
mov
mov
xchg
mov
push
xchg
cmp
sbb
clc
mov
adc
clc
in
jl
jecxz
mov
std
pop
mov
out
lcall
push
jg
add
jae
in
sti
inc
pop
cltd
push
sti
jecxz
cmp
xchg
mov
rorb
or
js
int3
xchg
add
xor
out
out
adc
fwait
push
ss
stos
xor
add
xlat
add
xor
daa
ret
pop
pop
in
fcmovnbe
xchg
mov
inc
mov
outsb
dec
mov
cli
or
ja
or
dec
dec
sub
inc
push
repz
pop
pop
dec
scas
out
jne
xlat
clc
mov
das
int3
out
out
dec
lds
fwait
xchg
into
cmp
orl
sub
adc
frstor
cmp
mov
jo
pop
int3
mov
jnp
and
out
iret
daa
lock
ret
fbld
movsb
dec
jmp
adc
cmp
and
pop
mov
js
enter
and
sbb
fsubrl
scas
xchg
mov
out
push
lahf
out
push
sub
pop
call
and
arpl
sub
inc
adc
stos
push
pop
out
ficoml
inc
in
pop
fs
lods
fdivl
pop
aas
adc
lds
add
std
xchg
out
mov
cli
mov
leave
ret
scas
mov
mov
jbe
into
add
xchg
inc
sbb
shll
enter
insb
jbe
add
lcall
xchg
cmc
push
dec
xor
jo
lahf
or
lret
cmp
adc
shlb
lea
xchg
enter
daa
mov
and
jne
mov
out
fdiv
sub
xlat
and
int
movsl
ds
fbld
mov
js
int
test
js
mov
pop
add
cs
pop
sub
push
push
mov
loope
jle
test
sub
jne
outsb
int3
push
adc
insb
or
mov
cld
clc
sbb
loop
mov
or
and
mov
js
mov
dec
sub
jg
lcall
sub
mov
sahf
jl
jae
jp
sub
jp
xor
outsl
loope
mov
fs
jp
adcb
js
fcom
loopne
notl
jle
rcrl
cmp
push
data16
and
dec
cmc
je
stos
xor
mov
loop
lea
cmp
adc
js
add
lcall
addr16
push
mov
pop
stc
cli
mov
dec
out
in
insb
lods
scas
sti
sbb
mov
xlat
xor
mov
aam
loop
dec
imul
sar
repz
mov
xchg
jo
or
xlat
aas
xlat
pop
movsb
pop
sub
gs
mov
popf
xorb
sub
inc
add
aad
pushf
push
nop
ret
jb
dec
sbb
or
sbb
inc
je
mov
jecxz
scas
xchg
xchg
mov
aas
call
sbb
pop
dec
adc
mov
mov
call
cld
inc
mov
pop
lods
aas
add
xlat
dec
decl
in
mov
push
ret
xor
pusha
std
movsb
mov
mov
mov
sbb
jp
ror
fucomi
std
mov
roll
and
das
out
ret
sub
xchg
mov
mov
pop
jl
push
pop
dec
es
push
mov
insl
mov
cmpsl
mov
idivl
push
lods
daa
sahf
or
movsb
ret
mov
roll
pop
fimuls
movsb
shlb
cmp
lods
test
ss
mov
and
fldl
adc
xchg
inc
movsl
pop
ljmp
jo
test
test
out
std
nop
push
xchg
xchg
lds
sahf
lea
rol
add
push
jge
cltd
xchg
aad
mov
add
mov
or
xchg
repz
sbb
adc
mov
or
cmp
fwait
push
dec
outsb
adc
repnz
pop
shlb
sbb
daa
or
adc
in
adcb
dec
adc
outsb
ficompl
testl
movsl
sbb
mov
xchg
xchg
xchg
mov
jne
jb
mov
mov
shlb
xor
xchg
cltd
int3
push
sbbl
cmp
ljmp
push
or
movsl
mov
adc
js
mov
pop
and
jnp
dec
cmp
lret
in
loopne
pusha
pop
mov
fists
rcl
xchg
inc
and
jae
mov
push
popf
sub
mov
mov
and
and
dec
data16
pop
sbb
or
mov
inc
adc
dec
push
iret
leave
pop
out
jb
ja
xor
rorb
sbb
mov
jb
movl
mov
or
andl
repnz
mov
cmp
sbb
dec
mov
dec
shr
cmp
lds
fnstsw
js
lret
inc
push
or
inc
add
imul
push
sub
xor
adc
subl
shlb
cmpsb
mov
lods
sbb
xor
cmpsb
add
out
in
je
bswap
sub
daa
mov
insl
cmp
jne
sub
fldcw
xor
movsl
mov
cmp
lahf
in
push
mov
test
and
xor
mov
pop
push
es
js
push
pop
subb
movsl
xchg
fwait
loope
mov
fdivrl
stos
sub
je
outsb
das
dec
adc
inc
cmp
popl
das
push
adcb
jle
and
mov
cmp
jecxz
mov
mov
outsb
pop
popf
adc
lcall
outsl
mov
aam
lcall
test
push
das
cmpb
jg
out
mov
sti
outsl
mov
push
cmpsb
adc
mov
ret
idivb
ret
fcoms
loopne
lret
mov
pop
ja
cmp
orb
xchg
loopne
add
mov
cmp
les
ds
mov
mov
adc
xor
shll
mov
mov
ret
aam
nop
xor
ds
in
mov
fistpl
lcall
push
mov
adc
cmp
les
push
adc
mov
lret
lock
push
fisubrl
mov
dec
outsb
jb
test
cmpsb
cs
mov
nop
sahf
sub
inc
cld
pop
xchg
fsts
push
je
pop
scas
jecxz
stos
cmp
cltd
outsb
cmp
adc
add
xchg
and
sbb
pop
addb
adc
add
jp
inc
inc
test
inc
es
js
mov
lcall
outsl
ds
rcrl
adcl
mov
push
mov
xorw
movsl
ss
lret
dec
je
mov
lock
cmp
lock
sbb
aam
jb
ret
out
dec
es
insl
push
and
cmpsl
mov
push
mov
mov
loopne
xchg
mov
push
jg
mov
cmp
pop
mov
std
filds
lods
push
inc
test
addr16
stc
jae
push
xchg
push
xchg
xchg
fisubs
jg
push
lret
and
pushf
xchg
into
inc
adcb
inc
rdtsc
pushf
push
add
out
cltd
mov
movb
inc
xchg
jmp
test
ljmp
xor
lret
or
inc
lret
fwait
mov
sbb
add
or
xor
or
in
jl
xchg
push
daa
out
mov
mov
mov
jo
jae
mov
fisttpll
or
movsb
mov
push
iret
dec
jne
cwtl
jne
jno
mov
push
jg
movsb
pop
push
jmp
jns
push
clc
xchg
fs
subl
and
push
jmp
pop
jp
xlat
pop
mov
adc
insb
lea
jnp
cmp
js
push
pusha
clc
xchg
cltd
sbb
xchg
sahf
es
lret
inc
sub
cmp
push
adc
or
mov
mulb
outsl
stos
pop
mov
and
xlat
mov
imul
cmp
add
xlat
adc
fxch
sub
mulps
hlt
inc
xchg
jge
and
lahf
inc
sbb
imul
popa
inc
pop
roll
jl
inc
xchg
or
add
cmp
pop
popf
cwtl
loop
mov
dec
shlb
icebp
mov
mov
lcall
inc
dec
inc
jbe
dec
jp
pop
rcll
aas
dec
shlb
stos
jg
push
xor
add
inc
jl
mov
les
push
bound
xor
outsl
rolb
mov
mov
mov
ja
loopne
scas
pop
add
pop
int
enter
daa
mov
aas
cmp
mov
fs
scas
push
cmp
out
ds
mov
movsl
mov
aam
lahf
or
mov
jae
mov
add
mov
add
in
and
js
fs
pop
cmpsb
cltd
in
push
and
sbb
jp
sub
fldt
sbb
aas
xor
shlb
jle
pusha
or
subb
pop
sbb
lods
mov
test
push
mov
adc
pop
sbb
cmp
rorb
leave
mov
repnz
inc
jp
mov
dec
in
mov
jle
fs
jb
jnp
dec
ss
or
cld
fmuls
lcall
push
jmp
xchg
cmp
sahf
cmp
jae,pt
into
out
push
add
xchg
xor
in
popf
outsl
adc
out
xor
inc
stc
test
in
lret
add
inc
pushf
data16
xor
loop
out
lods
xchg
cli
pop
mov
xor
loope
inc
insl
mov
inc
gs
inc
loopne
imul
adc
inc
add
xor
push
rep
xor
sbb
dec
ljmp
adc
or
pushf
repz
aaa
cs
and
and
xchg
nop
jns
fmuls
popa
insl
inc
imul
jmp
adc
stos
jmp
pushf
xchg
dec
lea
mov
sbb
cmp
adc
sub
popl
loopne
inc
inc
or
inc
enter
cmc
fisttps
fstpt
shr
xchg
divb
mov
cwtl
pushf
or
mov
cmp
shl
inc
lret
mov
out
mov
sbbl
mov
idivb
cmp
jne
mov
inc
shr
dec
fistps
and
xchg
mov
mov
lods
std
dec
adc
out
scas
and
or
lea
sbb
push
rcr
or
sub
xorl
repnz
clc
cmp
dec
xchg
ljmp
push
pop
ds
cmpps
ret
jae
xchg
adc
sub
seto
add
dec
cltd
cmc
iret
xorl
repz
mov
xor
jmp
or
sbb
sahf
icebp
shr
dec
loopne
rcrl
loopne
xchg
mov
sub
sub
idiv
pop
push
pop
xor
jae
in
lret
adc
mov
add
test
xor
ja
pusha
call
inc
ror
and
dec
out
pop
test
jne
rcrl
out
sbbl
bound
fidivrs
xchg
das
lock
cmpl
sub
add
xchg
rorl
rcll
and
call
insb
clc
add
jnp
out
dec
jle
mov
in
jle
pusha
xchg
jle
filds
mov
xchg
jno
pop
jmp
ss
jae
orl
jns
add
push
jnp
xor
or
sbb
imul
ljmp
inc
pop
movups
iret
xchg
imul
or
hlt
nop
mov
sahf
inc
push
jo
or
push
fisubrl
subb
dec
imul
mov
pop
outsb
pop
lds
mov
jae
repz
leave
sub
pop
movsb
aas
hlt
lahf
push
xchg
testb
fdivrs
pop
sbb
call
and
inc
mov
fstpt
orl
push
jb
lret
scas
fwait
pop
jge
sub
cmp
xor
inc
cmp
push
dec
in
inc
push
enter
daa
mov
mov
push
cld
inc
jno
adc
sub
pop
fnstcw
fcmove
add
jns
pop
test
sub
dec
push
inc
mov
movsb
add
in
push
sub
pop
pop
mov
repnz
in
xchg
gs
xor
sub
mov
stos
adc
std
outsb
mov
add
add
and
leave
push
mov
dec
mov
pop
fwait
lret
int3
lcall
hlt
mov
add
clc
mov
clc
test
jg
xorb
pop
mov
int3
sahf
mov
repnz
lret
ss
xchg
cmpb
out
not
ja
lret
test
xor
cmp
mull
lods
adc
into
leave
call
inc
xor
mov
aaa
stc
pop
pop
jb
xchg
lods
add
addl
fisubrs
jle
es
sbb
cli
cmp
jl
dec
mov
test
and
pop
shlb
inc
loopne
adc
shrl
ljmp
jnp
sub
sbb
mov
jne
mov
mov
pushf
sahf
shrl
inc
out
outsb
int3
test
push
dec
nop
push
shlb
dec
aaa
ret
and
add
mov
lods
fsubp
mov
sub
adc
xchg
lcall
adc
fs
imul
mov
xor
fbld
jb
test
dec
sbb
sarl
pop
xchg
std
cltd
lcall
in
lea
movsb
xchg
push
cld
sti
jle
lret
sub
lds
fwait
das
jb
ja
sub
mov
shlb
lods
push
aam
adc
ret
add
mov
enter
outsb
mov
pushf
clc
cmpsl
mov
cltd
mov
pop
push
adc
inc
cmp
dec
leave
jmp
cmpsl
inc
daa
pop
cmp
mov
fwait
xchg
mov
add
push
or
out
fnsave
mov
xchg
add
mov
popa
aas
scas
pop
pop
test
sub
out
es
adc
jmp
in
out
pop
push
cltd
sub
pop
xor
cmp
push
xchg
pop
cmovge
pop
fldcw
fisubrl
sbb
loop
or
lret
push
fwait
setae
push
aaa
and
inc
jp
jmp
popa
stos
or
lock
outsb
ret
movsl
lcall
dec
sbb
mov
inc
dec
sbb
mov
push
add
cmpsb
xor
in
mov
jne
lcall
fcomi
bound
pop
idivl
pusha
out
xchg
cli
jg
or
cwtl
out
pop
popa
sub
cld
sub
addr16
imul
jecxz
insb
arpl
xor
adc
pusha
jge,pn
fbld
dec
hlt
xchg
inc
js
jmp
inc
ficomps
jecxz
int3
push
fwait
cmp
popf
mov
out
push
push
je
xchg
and
fcmovb
imul
fs
pop
jns
push
mov
adc
fcmove
out
adc
stos
sub
es
inc
arpl
pop
inc
and
decl
jecxz
mov
pop
rcl
dec
xchg
mov
jo
pop
sti
xor
fdivrp
inc
mov
shrb
mov
inc
and
lahf
adc
mov
jbe
fwait
jnp
insl
movsb
inc
sbb
or
or
ret
jo
das
jl
aad
dec
loopne
ret
arpl
jo
push
insb
scas
jp
jnp
push
push
jns
or
stos
push
or
jb
cmpsb
mov
mov
sbb
cltd
daa
mov
inc
cmp
sbb
sbb
sub
aad
cmp
popa
xchg
movsl
int
or
cmc
inc
inc
lahf
dec
pop
ja
sbb
repz
movsb
outsb
adc
imul
pop
lret
js
adc
ljmp
and
fdivrl
dec
sub
or
adc
fadds
push
int
adcb
sbb
jecxz
mov
dec
dec
and
mov
int
imul
sbb
lds
outsb
mov
into
sbb
fwait
mov
xchg
dec
leave
adc
stos
jg
in
jae
mov
lret
mov
clc
adc
lock
fadd
mov
lret
sbb
mov
insl
cmp
and
or
sbb
cmc
nop
arpl
sarb
loop
sbb
stc
push
dec
into
adc
addr16
lretw
lods
add
xchg
xchg
or
cli
insl
sbb
in
sbb
sti
aam
incb
jecxz
out
fldt
loopne
arpl
mov
xor
cs
sub
mov
mov
inc
xor
repz
leave
dec
xchg
jl
in
xor
popf
cmp
in
xlat
adc
shlb
dec
sub
jmp
cmpb
das
ret
xchg
cmp
jmp
fprem1
stos
test
jecxz
aaa
ljmp
lods
fsubrp
mov
cmpb
cmp
ficoms
fs
dec
dec
jno
fistl
xchg
inc
ja
cmpl
std
sub
dec
icebp
dec
adc
rorl
mov
inc
addr16
adc
mov
jb
mov
mov
cmpl
loope
lret
xchg
movsl
pop
mov
fsubrl
sar
push
das
push
mov
fbstp
mov
repnz
test
dec
add
insl
sbb
aaa
scas
cmpsl
mov
std
mov
ss
iret
mov
sub
cmp
xchg
jle
pop
imul
subb
sub
add
int
sbb
frstor
inc
clc
mov
push
xchg
inc
sbb
aaa
cld
movsl
popa
push
loopne
pop
push
movsb
movsb
stos
in
push
mov
mov
pushf
xchg
mov
add
cmovle
add
xor
xor
testb
fcompl
dec
subb
fcomip
mov
dec
hlt
adc
or
dec
int3
fwait
ds
push
mov
add
scas
incl
xor
jmp
in
fs
inc
dec
dec
mov
add
mov
sbb
push
sub
ror
dec
mov
inc
dec
push
cwtl
adc
mov
cmpsb
insl
out
inc
mov
inc
jns
fdivr
xchg
lds
adcl
out
xchg
outsl
sub
imull
adc
xchg
jnp
into
out
jnp
sahf
cwtl
jle
iret
add
repnz
xor
filds
outsl
xchg
pop
outsl
pop
jmp
dec
pop
fnstenv
pop
enter
xor
loopne
in
mov
ss
mov
call
sbb
lods
imul
push
scas
orb
aad
sub
popf
ret
inc
fidivrl
ret
popa
pop
adc
hlt
add
push
xchg
ret
inc
and
movsb
or
pop
mov
inc
fsts
ficoml
push
in
inc
addr16
pop
sub
xchg
fisubs
sbb
rolb
repnz
std
mov
movsb
push
aaa
outsb
push
xor
add
pop
lock
jge
jecxz
sbb
xorl
jge
or
xchg
dec
add
bound
dec
dec
jns
push
mov
aaa
xor
subb
scas
pop
jecxz
and
test
in
inc
pop
mov
adc
enter
daa
mov
dec
cmp
jno
inc
xor
or
and
cmp
jge
mov
test
nop
pop
cwtl
lahf
imul
fwait
add
inc
jae
push
cs
pop
icebp
mov
popf
pop
arpl
add
loope
out
fsubrl
add
sub
pop
shrl
lret
dec
adc
mov
jne
jge
xor
mov
ja
jne
xchg
push
lds
int
push
sub
xchg
push
lcall
or
ds
sahf
stos
roll
cltd
sbb
dec
dec
mov
insl
mov
adc
push
pop
sti
cmp
jle
fdiv
push
pop
jns
xchg
test
dec
lahf
xchg
cmp
and
xchg
into
int3
cmp
push
rclb
pop
dec
outsl
mov
ja
in
adcb
int
imul
inc
xlat
dec
cmp
lods
ljmp
out
orb
out
adc
clc
loopne
in
add
sti
add
outsl
xor
in
xchg
add
pop
rcrl
ret
imul
jns
xchg
aas
mov
pop
popf
sub
mov
iret
sub
xor
hlt
fs
jmp
orb
clc
loop
nop
or
int
cmc
mov
dec
xlat
fldcw
lods
je
dec
js
fadds
movsl
mov
lea
mov
cwtl
mov
pop
out
or
jae
cmp
fcmovnb
in
pop
hlt
enter
dec
inc
inc
xchg
sub
aas
sbb
aas
mov
push
sub
fwait
sbb
rcr
rcrl
idivb
ss
out
mov
bound
aam
and
mov
cld
push
pop
mov
push
rorl
sub
pop
das
dec
mov
mov
sbb
movnti
cwtl
adc
into
rcrb
add
dec
adc
cmpsl
mov
mov
or
mov
sub
push
out
and
inc
pop
jns
add
push
dec
scas
sub
outsl
cld
mov
aas
cmp
cmp
fldl
pop
clc
in
sbb
aam
stos
orl
pop
call
out
in
in
out
xchg
ljmp
shrd
lcall
push
add
mov
and
fdivs
add
lock
or
mov
or
jge
das
add
jns
cmpsl
jmp
sahf
mov
mov
push
mov
sbb
xor
mov
lods
mov
pop
pop
nop
ret
pop
mov
inc
cwtl
lock
cld
xor
insl
dec
add
leave
jne
push
divb
and
bound
daa
in
jns
std
add
pop
adc
sub
repnz
mov
inc
insb
cmp
cmp
fwait
insb
jle
int3
ds
pop
lds
mov
fbld
loopne
ljmp
inc
push
xor
jae
sub
push
and
popf
out
dec
dec
mov
repnz
xchg
stos
daa
inc
mov
js
sbb
push
lea
sub
scas
in
push
sbb
out
adc
insb
iret
movsb
inc
loopne
roll
negb
sub
aam
pusha
inc
lret
ret
arpl
jno
fsts
push
pop
fstp
fimull
repnz
mov
cs
pop
pop
fnop
fiadds
xchg
lds
bound
in
movaps
in
push
dec
leave
lea
daa
movsb
loopne
jno
sbbl
jge
add
dec
aaa
inc
jbe
or
and
jl
inc
xor
rep
push
lcall
jo
and
scas
cmp
icebp
cmp
das
push
mov
fwait
in
cmpsb
popl
in
negl
inc
daa
mov
cmpsb
cmp
lea
sub
dec
inc
cmp
or
loop,pt
dec
movsl
fstpt
sub
xor
push
mov
mov
add
outsb
xor
xchg
stc
jno
icebp
adcb
mov
pop
mov
addr16
pop
les
aam
push
outsb
push
aam
mov
jb
mov
fcompl
sti
sbb
cmp
mov
push
and
cltd
int
push
xchg
sub
mov
mov
sbb
inc
mov
mov
nop
sahf
dec
cmp
movsb
or
jg
mov
mov
mov
mov
test
fs
mov
ss
fnstsw
cmp
push
notl
cmp
jp
push
cmp
sti
xchg
or
mov
into
jb
or
push
orl
loop
sbb
test
addl
rcrb
push
mov
sub
jl
cli
shll
xor
ss
out
ficomps
sti
xor
decb
xor
dec
pop
lock
imul
insb
pop
xchg
add
lea
cmp
sbb
xchg
movsl
jnp
loope
jmp
fdivp
push
pushf
lahf
je
jmp
inc
pop
cs
sub
in
mov
sti
testb
mov
arpl
je
xchg
movsb
jecxz
xchg
xor
test
push
lea
test
pop
adc
adc
jl
dec
and
aas
fcomi
std
pop
xchg
inc
inc
out
popf
inc
lods
pop
js
mov
imul
es
shrl
jo
test
inc
std
mov
mov
xor
imul
lret
jne
pop
mov
nop
aam
mov
or
sub
mov
rclb
aam
cld
ss
mov
scas
es
adc
dec
push
sub
cmpsl
scas
ja
mov
in
stos
lods
test
stos
pusha
mov
pop
inc
popa
mov
cwtl
xor
sub
inc
mov
jl
xchg
push
push
ljmp
daa
mov
xchg
shrl
mov
push
pop
stos
pop
imull
dec
test
in
jl
ss
pop
pop
add
cmp
dec
addr16
ds
icebp
add
cmp
test
lea
push
mov
insl
roll
dec
or
int
fwait
pushf
mov
stc
add
xchg
cmpsb
repnz
outsb
pop
or
in
in
dec
xor
mov
insl
mov
pop
xlat
xorl
xchg
adc
inc
das
out
pop
mov
xor
and
push
jne,pt
inc
sub
mov
cmp
jns
ret
pop
daa
mov
out
pop
pop
sub
in
call
jp
aas
inc
mov
scas
dec
insb
movsb
sbb
pushf
mov
push
pusha
push
fistpll
ss
mov
movsl
push
jae
inc
cli
push
in
call
mov
xor
stos
lcall
sbb
lret
call
scas
dec
and
sub
adc
arpl
add
inc
pop
jg
push
hlt
mov
xor
int3
or
push
adc
sub
xchg
mov
shll
pop
mov
fsubrp
je
lds
repnz
mov
ss
repnz
push
pushf
leave
add
push
movsb
imul
push
rclb
jbe
mulb
bound
aaa
add
ljmp
lret
add
dec
sub
or
xor
sub
and
mov
cmp
popf
sbb
inc
jns
sti
cmpsb
adc
in
faddp
push
enter
daa
scas
jbe
cmp
add
jno
repnz
inc
cmp
adc
and
or
lahf
cmpsl
test
test
xor
mov
or
js
repz
shll
push
jnp
loope
fcomps
jg
js
ret
addl
aad
xchg
imul
cmpsl
orb
xchg
mov
cmc
outsl
and
in
int
sbb
sub
xor
pop
xchg
imul
jae
das
mov
shll
sbb
movsb
test
add
andb
push
jg
sbb
mov
fldl
orb
outsb
sbb
adc
adc
ss
dec
outsl
cmp
hlt
mov
not
aas
lret
repz
cmp
movsb
jg
imul
scas
cmc
in
fidivl
in
pop
cltd
outsl
outsl
loope
loop
call
sbb
mov
add
jns
lods
mov
aam
out
cli
xchg
cli
push
mov
xor
int
sti
loope
lods
push
inc
gs
sbb
int3
jne
pop
psubsb
imul
movsb
sub
lds
sarb
xor
sub
mov
dec
pop
shr
into
push
cs
fnsave
and
movaps
imul
outsb
dec
dec
fstps
xor
call
lea
sub
cmpsl
dec
xchg
and
pop
push
inc
sub
imul
add
pop
fidivrl
inc
insl
xchg
inc
enter
pop
jmp
jb
lret
inc
ja
and
add
testb
movsb
cwtl
inc
dec
sti
mov
and
addl
call
lret
in
das
mov
mov
jecxz
das
pop
es
cwtl
stos
imul
inc
pop
ret
inc
lea
aam
mov
rclb
andb
adc
mov
jb
mov
xchg
inc
xchg
adc
rcrb
mov
ja
sti
and
test
shll
push
adc
clc
xchg
add
nop
test
popa
fwait
dec
push
pop
push
repnz
out
mov
mov
js
bound
fimuls
imul
add
lods
in
xchg
sbb
lcall
dec
mov
mov
xchg
adc
rcrl
lret
dec
fwait
lret
das
dec
push
ret
mov
call
jmp
outsb
jns
pop
fidivl
ds
in
inc
ret
shl
mov
pusha
call
pop
shlb
jp
out
ss
cvtpi2ps
jns
dec
movsl
mov
mov
stos
ljmp
ret
pop
sub
addl
out
icebp
xchg
sub
call
lret
popa
jp
xlat
push
mov
cmp
insb
pmuludq
cmp
and
mov
dec
pusha
lcall
xchg
nop
mov
jmp
insl
fisubl
pop
lcall
cmp
sahf
mov
jo
push
stos
or
and
imul
sti
push
stos
das
adc
cs
bound
je
mov
xor
pop
lods
arpl
outsl
inc
sub
pop
aam
iret
mov
int3
fisubrl
imul
int3
add
add
mov
je
mov
mov
mov
inc
rcl
fistpll
xchg
int
leave
jnp
bound
pop
xor
test
jge
divl
aaa
shl
or
mov
jl
fisttps
xor
push
pusha
xlat
pop
xor
xchg
inc
jo
testb
in
fidivrs
in
mov
inc
or
movsb
cmpsb
xchg
mov
in
vcvtss2sd
push
add
cmp
xchg
dec
sub
adc
cmp
dec
sub
movsl
jmp
push
lahf
lock
cmp
test
sarb
xchg
ja
push
pop
data16
js
mov
push
inc
arpl
cmpsb
pop
mov
sub
jmp
adc
inc
mov
mov
sbb
cltd
and
fs
int
adc
mov
jne
cmp
scas
push
lret
mov
mov
jns
xchg
pop
test
mov
mov
mov
adc
fs
mov
jnp
cwtl
push
fistpll
scas
jb
clc
xor
pusha
mov
mov
push
stos
push
into
cmp
pop
cmc
lods
movsb
xor
daa
outsl
dec
mov
loop
jmp
adc
xchg
xchg
add
data16
jbe
lahf
cmp
cld
jbe
cmp
out
in
les
mov
shlb
jbe
addr16
rcrb
popa
adc
shrl
rcll
xchg
les
rclb
scas
cmp
movb
or
fcomps
sbb
aad
push
add
dec
adc
and
shll
rorl
sub
add
out
sub
mov
out
adc
jmp
popf
dec
cli
in
fisttpl
aam
fldl
inc
hlt
cmp
aas
cli
xchg
mov
dec
mov
insl
and
jne
ror
je
testb
std
faddl
mov
mov
test
xor
shlb
repz
xchg
mov
jo
lock
push
das
out
fisubl
inc
jne
aam
out
ret
iret
in
ds
hlt
fsubrl
xchg
arpl
imul
lods
mov
xor
xchg
sub
mov
mov
loope
mov
pop
cmpsl
ror
pop
inc
sub
sahf
test
or
sbb
insl
push
fldcw
inc
clc
popf
xchg
stc
xchg
aas
iret
lods
ljmp
negl
sub
out
adc
mov
push
xor
mov
cmpsb
jne
cltd
aas
lds
and
mov
iret
out
sbb
xchg
pop
test
je
xchg
fwait
sbb
repnz
or
popf
js
cli
addb
xchg
add
jbe
push
add
rolb
rcrl
mov
mov
mov
lods
in
xchg
mov
imul
lea
shlb
insb
dec
fcmovbe
mov
pop
push
mov
iret
add
out
jne
pop
mov
pop
adc
into
aaa
xor
adcl
out
adc
ret
or
hlt
add
jp
and
insb
jp
mov
call
jnp
in
mov
fistpll
push
shr
mov
inc
js
in
out
aaa
gs
push
rcrb
int3
mov
loopne
stos
adc
and
cmp
imul
mov
adc
jp
iret
rcrl
pop
in
test
hlt
push
orl
xor
mov
cwtl
jbe
push
aad
neg
popa
add
xchg
imul
int3
out
mov
pop
out
mov
lds
pop
xchg
shl
icebp
mov
in
std
leave
repnz
mov
push
jo
pcmpeqd
sarl
lds
aaa
jg
iret
or
repnz
add
push
jl
sbb
dec
or
orl
xchg
jle
loop
mov
jo
scas
aad
push
and
push
sbb
pushf
adcl
fldenv
lods
lret
or
lods
cmp
cmp
test
jle
mov
sub
inc
movsl
lock
cld
inc
mov
cmp
add
in
xor
cmp
cmp
fidivrs
insb
loop
pop
mov
iret
loope
pop
add
aad
inc
sub
mov
rcrb
nop
add
stc
jns
subb
pop
mov
or
and
push
pop
int
pop
imull
or
test
and
out
lret
sbb
jae
sahf
aaa
pop
fadds
push
lret
adc
aam
pop
push
rorb
test
xor
cmp
push
jnp
dec
sahf
and
push
sarb
cmp
jb
or
enter
inc
cmc
jae
pop
xor
lea
loop
pop
add
adc
hlt
xor
pop
mov
xchg
pusha
je
out
subb
dec
inc
xor
in
das
es
aas
fildl
repz
adc
inc
pop
dec
inc
in
adc
cmp
push
imul
push
push
repz
loopne
xchg
dec
or
sbb
ljmp
sub
shrl
and
cwtl
pushf
mov
sub
rcrb
aad
lock
jno
pushf
inc
xchg
sub
or
out
adc
and
mov
into
lea
call
xchg
lret
mov
ret
mov
fstpt
add
push
sti
inc
jnp
cld
inc
outsl
or
jb
and
mov
cmp
rcll
fnstsw
mov
jl
add
cwtl
mov
sub
mov
sub
subl
aaa
aas
lret
ret
mov
pop
mov
jbe
lock
dec
adc
mov
idiv
mov
ret
pop
xchg
adc
ficoml
add
jmp
ja
flds
lods
icebp
imul
loope
lret
hlt
scas
mov
je
mov
dec
inc
push
pop
cmc
clc
psrld
jbe
test
adc
pushf
mov
frstor
out
xchg
jle
inc
ljmp
outsb
pop
stos
lahf
aad
cwtl
mov
out
js
loop
push
out
push
or
negl
mov
sbbl
mov
pushf
cmc
dec
test
es
inc
scas
xchg
jl
sbb
pop
ja
dec
lds
or
add
in
cmpsl
jmp
pop
xor
xchg
or
sub
jl
lock
dec
and
dec
int
inc
hlt
mov
pop
mov
push
dec
lea
xor
rclb
jg
pushf
mov
and
test
jae
mov
pop
je
sub
packuswb
dec
jp
and
mov
and
jnp
cmp
jle
dec
xor
adc
sbb
xchg
ss
sub
xorb
jae
sbb
push
sub
int
mov
out
js
stos
repz
and
xor
imul
jno
nop
push
cmp
adc
flds
and
stos
ret
push
pop
and
xchg
popf
cmc
dec
arpl
add
pushl
push
push
daa
sub
xchg
ret
int3
fisubl
mov
sarl
outsl
lds
iret
sarb
cmp
imul
inc
push
mov
mov
js
sbb
pop
and
or
dec
filds
cli
jbe
jl
or
dec
jp
xlat
push
es
jle
test
mov
scas
mov
test
mov
sarb
xlat
push
iret
jno
inc
es
mov
xchg
movsb
ss
daa
lods
cmpsb
cmp
daa
jno
sub
sub
sub
outsb
push
jmp
idivl
xchg
sbbl
push
or
test
out
fidivl
shrl
std
jmp
push
js
push
ds
sahf
repz
push
in
loope
shr
faddl
fisubrs
stos
sbb
sar
je
pop
jne
add
adc
adc
mov
push
aam
push
mov
inc
pop
pop
adc
lcall
cmpsl
mov
ljmp
sarb
mov
jne
lods
or
mov
adc
adc
xchg
divl
push
bndldx
and
enter
xchg
popa
sarl
cmp
xchg
bound
mov
sbb
xor
xor
testb
int3
mov
stc
pusha
mov
jp
push
mov
fdivrl
add
mov
xor
testb
nop
mov
out
dec
and
push
dec
mov
loopne
cmp
pop
insb
js
adc
fmulp
imul
mov
and
add
sbb
and
notb
lods
fldl
cmp
aad
jmp
aam
and
or
push
adc
dec
rcl
inc
inc
cmpsl
jg
fnstcw
pop
in
inc
push
fucom
and
mov
fimull
subb
gs
pop
outsb
push
or
outsb
int
dec
shlb
mov
pop
and
inc
add
add
repz
cmp
and
and
movsl
mov
and
push
sub
mov
test
nop
std
sub
push
je
or
jecxz
lret
jge
cld
sub
push
mov
sahf
pop
mov
loopne
lock
fwait
imul
mov
mov
scas
sub
mov
cmp
in
jp
es
movsl
pop
insl
xchg
dec
cli
cld
lds
or
std
icebp
inc
in
lods
push
adc
mov
push
push
mov
adc
mov
sub
test
xchg
mov
call
push
pop
cmp
ffree
or
clc
adc
pushf
xchg
mov
test
popa
loopne
sub
stos
xchg
out
fistpl
clc
xchg
dec
jl
push
call
hlt
fiaddl
int3
mov
xchg
xor
xor
movl
inc
dec
in
jge
test
stos
mov
sbb
mov
mov
mov
xchg
push
lods
and
add
add
incl
xor
mov
mov
punpcklbw
mov
and
pop
add
or
inc
mov
sarl
pop
dec
jo
dec
jne
cli
and
jnp
mov
push
xor
xchg
xchg
iret
out
fs
sub
fsts
or
mov
mov
insb
push
jne
jnp
or
jle
or
in
xchg
sub
imul
xchg
or
jns
pop
inc
mov
jae
aas
mov
lock
mov
sbb
sub
pmaddwd
sub
sbb
cli
imul
scas
aam
lods
push
jg
adc
xchg
sahf
ret
pop
pop
pop
repz
hlt
call
movsl
repnz
ss
or
inc
les
fcmovb
pop
xchg
xchg
sbb
out
int3
lds
fidivs
lds
rol
fdivl
mov
mov
leave
loopne
or
stc
push
jbe
jae
jge
push
scas
sbb
xchg
mov
std
or
inc
add
into
add
shll
push
or
mov
mov
loopne
and
ret
or
inc
mov
movsl
cmpsb
push
mov
jmp
daa
stos
adc
cmpsb
dec
adc
sub
jae
cmp
out
ds
push
pusha
movsl
negb
xor
popa
lahf
and
push
fmulp
sbb
icebp
sub
xor
movsl
inc
pop
fistl
js
xor
pop
fnsave
int
jmp
xlat
fsubrl
mov
sub
and
mov
xchg
rcl
insl
mov
aad
leave
sbb
sub
sbb
xlat
cltd
add
pop
daa
dec
sub
jne
pop
xchg
inc
test
push
testb
iret
dec
lods
mov
and
lahf
test
mov
lea
jg
fbstp
das
push
mov
shll
adc
mov
popa
cmp
dec
push
out
test
adc
inc
jno
jmp
sahf
xor
loope
js
add
push
xor
mov
jmp
inc
loop
es
pop
lods
adc
stos
adc
stc
insl
mov
pop
addr16
fcoml
out
sbb
shlb
or
add
jle
cmp
loopne
push
push
pop
mov
mov
les
sub
sbb
pusha
pop
push
xlat
int3
push
dec
sub
scas
mov
pushf
imulb
loope
ficoml
inc
aad
dec
arpl
das
push
add
mov
dec
je
mov
mov
jge
sbb
and
xchg
xorl
dec
mov
repnz
pop
push
mov
mov
aas
xlat
mov
jb
dec
pop
dec
sbb
push
and
shll
adc
push
std
shr
lret
in
and
mov
inc
lods
sbbl
lret
mov
add
dec
cld
sbb
adcl
mov
jg
add
jl
xchg
loopne
mov
cmc
add
cmc
mov
and
pop
clc
add
rolb
sub
inc
mov
cmpb
mov
xor
dec
rolb
pop
sub
jecxz
jbe
inc
mov
pop
es
and
imul
dec
inc
mov
pop
data16
mull
sahf
pop
add
fsubrp
ds
notl
ret
jno
movntq
out
out
add
sub
cltd
in
xor
mov
fcoms
dec
push
leave
fisubrs
shl
sbb
inc
pop
sar
lods
pop
or
or
push
dec
fisttpl
add
sub
sahf
cmp
xor
pop
and
push
xlat
xchg
imul
mov
mov
ds
dec
mov
mov
and
cmpl
gs
jne
loopne
mov
dec
out
pop
jp
bound
xor
testb
pop
sub
aam
fisubs
repz
cmp
mov
rorb
mov
mov
add
and
fistps
scas
sbb
jmp
cltd
push
ljmp
push
aaa
popf
fsub
xor
insb
xor
lods
and
and
dec
cwtl
fisubrl
mov
scas
aaa
lods
cmp
adc
push
cmpsl
ret
or
mov
cmp
jmp
inc
cmp
fsubrs
mov
jnp
jp
cmp
mov
push
ficoms
das
push
jne
inc
std
sarl
mov
in
and
pop
push
pop
or
jbe
cmc
loop
movsl
mov
aaa
mov
sbb
sub
jl
rorw
xchg
push
in
mov
xor
std
jae
scas
jb
jno
scas
pop
cmp
push
cmpsl
dec
inc
inc
ja
cmpsb
mov
add
enter
daa
stos
inc
aas
cmp
loope
jno
dec
or
nop
ja
add
and
mov
aam
add
xor
lahf
inc
lds
test
cld
dec
popa
xor
ljmp
mov
pop
sbb
mov
xchg
push
cs
loopne
sub
scas
outsb
jo
push
adc
mov
dec
push
js
sub
jb
andb
and
das
rolb
push
int
fs
sub
xchg
pop
adc
cltd
push
es
scas
mov
and
sahf
and
push
test
lods
imul
push
test
sahf
dec
fs
lcall
out
sbb
fcomps
cmpsl
or
sub
or
insl
test
or
es
enter
mov
jl
lret
loop
mull
stc
into
scas
ds
add
inc
data16
dec
lods
cmp
mov
test
cli
add
sub
sti
dec
jbe
pop
mov
gs
movsb
sbb
sarl
pop
stos
in
pop
adc
mov
rol
sahf
mov
mov
sbb
fwait
out
push
xlat
or
subl
push
ss
cs
adc
dec
mov
int
int
jge
lods
mov
je
inc
aaa
jecxz
or
lea
sub
pop
aam
push
adc
scas
dec
cmpsb
test
fisttpl
mov
sub
adc
mov
xor
cmc
jb
mov
dec
xchg
push
add
sbb
add
inc
notb
std
js
leave
cwtl
ljmp
mov
xor
ret
psubusw
mov
sarl
mov
lock
jo
das
bound
mov
sbb
jle
dec
test
add
insl
push
mov
lock
jb
loop
out
cs
mov
inc
xlat
fsubl
sbb
dec
pop
push
in
rcrb
dec
sub
dec
mov
mov
cmc
std
push
in
fcmovu
adc
dec
lret
ljmp
xor
stos
gs
hlt
out
mov
aam
push
sahf
mov
cmovbe
mov
repnz
cltd
sbb
repnz
fistpl
dec
mov
xor
loope
mov
or
sub
movsl
push
repnz
add
sbb
cmp
add
or
call
enter
jle
inc
mov
ja
mov
dec
cmpsb
mov
mov
lret
int3
mov
ss
jne
sub
out
cmp
bound
cli
jns
rcl
xchg
sbb
xor
and
sub
iret
cld
add
idivl
push
ds
adc
insb
es
outsb
push
ljmp
insb
adcl
movsb
aaa
gs
push
out
jbe
cmp
incl
mov
stos
pop
mov
dec
sbb
cmp
testl
push
scas
lcall
adc
add
cmp
pop
pop
leave
icebp
hlt
hlt
jle
lds
jne
inc
cmp
mov
xor
call
inc
ror
jae
sub
test
int3
fwait
out
mov
fidivrs
xlat
rcrb
inc
jb
repnz
cli
leave
into
je
movsb
lods
arpl
jbe
cmpb
inc
sbb
xchg
aaa
jnp
push
or
mov
jl
shrl
mov
test
pop
repnz
push
stos
andl
js
test
xor
and
mov
cmpsb
and
mov
enter
daa
test
sub
jno
xchg
inc
sub
andb
rclb
sub
or
xor
push
inc
sbb
jecxz
test
pop
lds
xor
popf
jge
inc
jns
pop
sub
pop
pop
mov
push
mov
loope
punpckldq
addl
or
xchg
adc
mov
mov
mov
js
xor
mov
mov
cmc
nop
pop
pop
xchg
dec
push
mov
add
sbb
out
sahf
ret
ss
push
cld
out
ret
cmp
mov
mov
fs
movsl
adc
or
cmp
push
cmp
dec
pop
xor
pop
and
add
call
or
imul
mov
xor
inc
mov
adc
loop
std
test
test
add
pop
icebp
pop
gs
jecxz
and
dec
mov
out
ret
cmp
sbb
mov
cmp
sti
sti
xor
jg
jo
cs
mov
adc
rcrb
xchg
repz
xchg
xchg
push
push
movsb
sbb
imul
sub
imul
jg
adc
dec
adc
cs
adc
aad
cmp
pop
dec
in
popa
xchg
inc
loopne
loop
in
mov
jecxz
xor
mov
or
call
nop
dec
popf
pop
xchg
rorb
or
cmp
inc
pop
or
test
inc
push
cmpl
pop
dec
and
or
rcll
sbb
xchg
shrb
pop
lods
xlat
cwtl
movsl
mov
mov
outsl
push
mov
sahf
cld
test
xchg
pop
mov
pop
divb
add
pop
dec
mov
roll
xlat
ret
lcall
insl
cmp
popf
dec
jmp
xcrypt-ofb
cmpsl
test
push
mov
lds
jbe
xchg
fidivrs
nop
mov
cmp
jno
lods
shr
mov
sub
dec
test
xchg
jbe
fnstsw
sar
out
or
jp
mov
inc
std
out
popa
and
ljmp
add
je
and
aaa
shld
add
fidivl
mov
mov
test
push
push
xchg
sbbb
mov
test
bound
and
fwait
in
adc
xchg
and
add
push
pop
fcos
fdivrl
push
push
test
or
xlat
inc
in
rorl
pop
jns
mov
xor
cld
ja
test
push
inc
push
int
mov
cmp
pushf
dec
sbb
jne
fcmovu
mov
into
shr
sbb
iret
jae
jns
adc
call
fsubrl
cmpsb
ljmp
lret
or
mov
lods
mov
jbe
insb
xchg
push
jnp
sbb
jle
add
movsb
pusha
cmp
outsl
fistps
pop
xchg
addb
pop
addr16
scas
lods
xchg
jae
dec
adcb
mov
jb
repz
add
ljmp
and
jns
sbb
dec
lock
je
std
addb
push
and
pushf
daa
mov
imul
icebp
arpl
inc
popf
inc
aas
loop
or
mov
inc
inc
push
mov
xchg
ljmp
pop
cltd
pop
rcrl
adc
pop
repnz
push
shlb
mov
test
xor
inc
in
sub
cmp
ljmp
push
adc
sbb
ret
cmp
jp
mov
icebp
add
jl
adc
dec
ss
sti
push
mov
aam
lds
inc
scas
xor
arpl
das
or
xor
loopne
cmpsb
cmpsl
xlat
jo
das
lock
enter
daa
test
cmp
es
jno
add
sub
inc
aaa
cmp
mov
cli
add
adc
push
lahf
add
push
push
cmp
mov
mov
or
xchg
dec
pop
push
mov
jbe
lcall
loope
push
jecxz
sub
mov
outsb
ss
xlat
shlb
and
push
lret
pop
sbb
cmp
popa
and
sub
push
loopne
repnz
mov
pop
adc
mov
adc
mov
test
std
outsb
xchg
fsubrl
xor
mov
int
mov
mov
ret
lods
adc
sub
cmp
adc
fcomip
or
aad
fwait
ja
cmp
je
or
xchg
mov
cmc
push
xchg
cmp
push
mov
add
loop
aaa
pop
stc
cmp
or
add
sbb
mov
add
cli
imul
xor
andb
jmp
gs
push
ds
call
cmp
les
adc
sbb
pop
sbb
adc
xlat
mov
jae
xchg
test
pushf
test
lods
cs
outsb
mov
ja
lock
mov
out
dec
inc
repz
out
sbb
mov
mov
rorl
outsb
ss
maskmovq
pop
cmp
pop
dec
jl
mov
push
sti
push
inc
push
mov
call
jb
adc
lahf
and
add
mov
jae
std
popa
fs
pusha
cmc
imul
and
adc
aam
out
lret
in
or
gs
outsl
cmp
pusha
xchg
in
das
and
popf
xchg
mov
mov
pop
aam
addb
lds
imul
dec
out
inc
cmpsl
cmpsl
fists
mov
pushf
or
mov
mov
lods
mov
nop
ljmp
cmp
test
cli
mov
imul
frstor
clc
jmp
add
mov
popa
cmp
xchg
pop
add
stos
inc
xor
push
xchg
imul
pop
add
mov
insb
xor
aas
jle
add
xchg
leave
mov
test
or
xchg
into
sbb
stos
push
fwait
adc
cld
push
cmp
insl
add
jnp
clc
xor
mov
in
adc
mov
push
mov
nop
cmp
out
fadd
ja
and
popa
inc
out
fs
test
jbe
jne
in
xorl
bound
jns
clc
mov
mov
lock
xchg
out
stos
jne
jge
enter
ss
sti
fstpt
test
lods
insb
cld
push
mov
sti
or
xchg
icebp
in
add
pusha
xlat
xchg
fbstp
xchg
xchg
push
aas
and
push
in
es
mov
jle
push
cld
mov
mov
sub
int
xor
sbb
and
lret
sbb
imul
push
fwait
ss
adc
in
iret
sti
mov
ret
loop
aaa
andb
out
pop
inc
inc
xor
or
sub
lods
inc
iret
sbb
pop
xchg
jne
sbb
jno
mov
fiadds
inc
out
lds
pop
rclb
jmp
xlat
into
xchg
leave
mov
ss
push
dec
fcmovbe
jbe
xor
jge
push
std
sbb
push
mov
jl
daa
les
mov
push
xchg
adc
xor
push
sub
je
std
cmp
sbb
in
and
icebp
jp
cmpsb
sub
push
cmp
push
daa
cmpsl
out
pop
cmp
fbstp
xchg
arpl
loope
cmp
and
ds
stos
and
dec
rcll
insl
test
sbb
out
int3
sbb
pop
ja
lcall
int
push
data16
loope
inc
and
xlat
shlb
sub
leave
fsubrs
cmp
lods
rolb
popf
xor
add
and
pop
nop
and
or
cltd
int
je
sub
sti
mov
gs
lcall
insl
mov
sbb
dec
sahf
or
arpl
testl
dec
rol
cmp
fs
xor
ss
push
cmp
int3
pop
pushf
test
add
xor
dec
cmp
mov
sbb
cmc
sbb
xchg
addr16
stos
movsb
repz
sbb
addl
test
imul
mov
inc
out
jp
cli
sahf
out
mov
pop
cmp
mov
sti
pop
cmc
pop
inc
cli
sub
loopne
push
pop
pop
mov
fldcw
into
mov
repz
repz
xchg
fnsave
int3
sbb
dec
sbb
xlat
enter
in
imul
mov
mov
popf
dec
cs
lock
mov
je
stos
jle
inc
push
cmp
fsts
cltd
je
pop
and
outsb
pop
lret
mov
mov
jmp
and
cmp
and
clc
fistl
lds
movsl
adc
inc
mov
rolb
clc
repnz
rclb
icebp
loop
negb
cli
fistps
fsubrs
std
cmpl
dec
mov
mov
int3
sub
mov
cmp
mov
inc
lahf
leave
aam
insl
in
ret
mov
int
insl
or
cld
cmpsl
cmpsb
pop
mov
jae
shrb
xor
mov
sahf
shrl
jmp
sahf
pop
scas
repz
xchg
mov
test
arpl
mov
fisttpll
in
pop
xchg
clc
gs
sub
push
inc
cmp
shrb
lret
xchg
mov
mov
packsswb
hlt
add
stc
add
in
xchg
lods
mov
in
sbb
fidivrs
test
push
ret
xchg
sbb
add
push
repnz
or
mov
fwait
inc
sub
fstpt
movl
sbb
xor
mov
in
movsb
add
push
push
and
pop
stos
push
popa
ja
and
xor
sub
mov
sbb
add
fs
mov
and
out
sub
cmc
dec
mov
xchg
jle
xchg
lods
fnstsw
or
push
cmpsb
addr16
pop
fidivrl
loopne
mov
test
or
mov
mov
pusha
jb
rcr
xchg
mov
jecxz
dec
sbb
xchg
loop
xchg
clc
inc
push
mov
push
mov
push
imul
popa
test
imul
push
ret
and
pop
adc
mov
push
ret
mulps
insb
hlt
pop
xchg
arpl
stos
push
inc
inc
repnz
or
cmpsl
in
inc
dec
push
loop
inc
mov
mov
pop
das
adc
pop
shrb
inc
repnz
push
leave
xor
and
cld
repz
adc
inc
pop
ficompl
jns
xchg
aaa
mov
and
lcall
fcoms
xor
imul
popf
and
loopne
cmp
add
cmpsb
lods
test
in
std
insl
xchg
enter
daa
cmpsb
das
and
movsl
cmp
jno
dec
sub
cmp
xchg
pop
movsl
and
insl
lahf
mov
xchg
add
pop
push
xor
sbb
pop
sahf
dec
lock
adc
sbb
call
loope
nop
mov
xorb
sub
cld
xchg
adc
sbb
mov
xorb
mov
lahf
in
and
xor
push
out
mov
sub
dec
pop
push
mov
lcall
pop
mov
leave
jnp
pop
leave
cld
sahf
lods
pop
xchg
test
aas
imul
jno
mov
out
mov
insl
cmpsl
adc
iret
mov
mov
and
fadds
xchg
dec
lret
cmp
cmp
fcmovb
or
sub
push
push
outsb
cmc
in
xor
inc
xor
in
loop
inc
aaa
stc
stos
inc
push
adc
mov
add
mov
data16
xorb
cmp
pushf
push
cli
sarl
xor
jae
sti
or
adc
call
push
lds
add
imul
lret
repz
push
sbb
xchg
xlat
pop
call
sahf
mov
dec
popf
test
jne,pn
cmpsl
aad
adc
nop
jae
mov
inc
sbb
mov
or
jecxz
push
faddp
push
sbb
call
or
jbe
adc
rorb
fcmovnb
or
cmc
addb
mov
mov
jb
dec
adc
test
and
roll
inc
daa
jns
pusha
push
mov
cwtl
xor
mov
or
orl
mov
lret
push
fimull
mov
cmp
push
or
fidivs
or
clc
mov
mov
inc
cmp
outsl
cwtl
mov
mov
in
cmpsl
movsl
popa
mov
icebp
dec
jb
lods
xlat
mov
mov
rorl
cwtl
and
xchg
into
add
shlb
cltd
sub
dec
testl
movl
dec
les
fwait
movsl
mov
and
out
and
aas
out
sub
xor
sub
ret
add
outsb
mov
xor
arpl
out
or
sahf
inc
test
xor
sbb
pop
test
fwait
jb
push
push
jle
xor
add
pop
dec
xor
orb
fisubrl
push
mov
xchg
hlt
ret
push
sti
or
data16
test
dec
jb
in
inc
adc
js
mov
inc
inc
jne
ds
mov
out
pop
out
mov
nop
bound
lods
in
dec
test
insl
out
test
or
aas
jbe
jmp
add
insb
rcl
push
jnp
or
jle
xchg
jmp
inc
xchg
test
xchg
mov
add
inc
out
inc
rolb
pop
jae
mov
push
or
popf
fwait
mov
and
adc
stos
sbb
enter
adc
scas
data16
loope
adc
test
iret
mov
sub
pop
movsl
sahf
push
arpl
sub
push
int
test
stc
pop
dec
xchg
and
int3
inc
xchg
jns
pop
xor
mov
ror
pop
mov
jge
lcall
pop
and
bound
addb
call
and
or
dec
jae
ror
dec
cmpl
xor
les
adc
cmp
push
pop
imul
xor
cmp
in
insl
enter
daa
movsl
hlt
cmpl
push
cmp
sub
nop
mov
insb
xchg
loop
arpl
movsl
sub
dec
and
push
bound
sarb
test
xor
mov
push
nop
aaa
pop
js
outsb
addr16
push
hlt
leave
push
jmp
xchg
fsubrl
orl
pop
les
shl
out
icebp
les
sbb
jb
and
lahf
and
jmp
repz
sub
mov
pop
lea
push
fldenv
data16
and
test
jno
data16
test
add
mov
xor
iret
adc
in
ss
inc
fadds
testl
movsl
shll
cmp
lret
popf
or
xor
cmc
stos
xchg
and
jnp
cmp
faddl
loop
sbb
adc
mov
add
shll
in
lods
mov
adc
out
inc
mov
xor
jl
xchg
add
or
push
gs
adc
loopne
outsl
adc
push
arpl
in
jo
aas
insb
stos
aad
pop
repz
mov
sbb
ret
xlat
inc
pop
addr16
push
shlb
enter
cmp
fadds
aad
lret
dec
rorb
push
inc
sub
mov
rorb
test
leave
push
cmp
call
mov
and
jb
adc
add
add
cmc
fcomps
xor
inc
mov
cmovo
mov
mov
dec
out
lock
aaa
test
scas
add
mov
xlat
arpl
push
repnz
mov
dec
fdivr
push
cmp
lret
cmp
and
jge
shl
jno
fs
mov
loope
mov
inc
aas
scas
es
pushf
insl
fadd
xchg
dec
xlat
mov
cmpsl
movsb
call
insb
icebp
and
lods
inc
loopne
mov
hlt
aas
and
and
cmp
sub
lea
