jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
xor
mov
mov
push
call
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
push
call
cmp
jbe
mov
xchg
lea
mov
lea
mov
lea
dec
inc
lea
mov
mov
mov
mov
mov
lea
lea
lea
jmp
mov
mov
mov
xchg
mov
mov
dec
inc
lea
inc
inc
dec
xor
mov
mov
push
call
mov
cmp
jo
mov
lea
inc
mov
mov
cmp
jbe
lea
mov
xchg
lea
mov
mov
lea
xchg
lea
lea
mov
lea
xchg
mov
lea
jmp
inc
dec
inc
mov
dec
dec
inc
movl
mov
push
call
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
xor
mov
mov
push
call
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
movl
mov
push
call
mov
cmp
jo
mov
lea
inc
mov
mov
cmp
jbe
lea
mov
xchg
lea
mov
mov
lea
xchg
lea
lea
mov
lea
xchg
mov
lea
jmp
inc
dec
inc
mov
dec
dec
inc
xor
mov
mov
push
call
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
movl
mov
push
push
call
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
xor
mov
mov
push
call
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
xor
mov
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jo
mov
lea
inc
mov
mov
cmp
jbe
lea
mov
xchg
lea
mov
mov
lea
xchg
lea
lea
mov
lea
xchg
mov
lea
jmp
inc
dec
inc
mov
dec
dec
inc
mov
cmp
je
call
ret
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
xor
divl
test
jne
cmp
jbe
mov
xchg
lea
mov
lea
mov
lea
dec
inc
lea
mov
mov
mov
mov
mov
lea
lea
lea
jmp
mov
mov
mov
xchg
mov
mov
dec
inc
lea
inc
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
ja
inc
inc
dec
inc
dec
inc
cmp
jp
xchg
mov
lea
xchg
lea
dec
inc
lea
mov
mov
mov
jmp
mov
inc
xchg
mov
lea
xchg
xchg
xchg
lea
lea
lea
mov
cmp
je
ret
cmp
jo
mov
mov
lea
mov
mov
xchg
inc
dec
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
mov
lea
dec
lea
lea
mov
lea
lea
mov
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
push
mov
push
call
mov
mov
pop
pop
pop
ret
add
je
jb
arpl
fs
jae
add
push
mov
add
mov
lea
mov
call
mov
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jo
lea
xchg
cmp
jnp
lea
xchg
mov
mov
lea
lea
dec
dec
lea
mov
xchg
mov
mov
mov
dec
inc
mov
xchg
mov
mov
mov
jmp
mov
mov
lea
xchg
lea
dec
mov
cmp
je
call
cmp
jo
mov
mov
lea
mov
mov
xchg
inc
dec
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
mov
lea
dec
lea
lea
mov
lea
lea
mov
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
mov
movl
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
mov
sub
mov
cmp
jge
mov
lea
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
mov
inc
dec
inc
dec
inc
inc
lea
mov
xchg
mov
xchg
mov
lea
lea
dec
inc
inc
push
mov
mov
xor
call
mov
cmp
jbe
mov
xchg
lea
mov
lea
mov
lea
dec
inc
lea
mov
mov
mov
mov
mov
lea
lea
lea
jmp
mov
mov
mov
xchg
mov
mov
dec
inc
lea
inc
inc
dec
mov
mov
mov
call
cmp
ja
inc
inc
dec
inc
dec
inc
cmp
jp
xchg
mov
lea
xchg
lea
dec
inc
lea
mov
mov
mov
jmp
mov
inc
xchg
mov
lea
xchg
xchg
xchg
lea
lea
lea
push
mov
mov
xor
call
mov
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
cmp
jo
mov
lea
inc
mov
mov
cmp
jbe
lea
mov
xchg
lea
mov
mov
lea
xchg
lea
lea
mov
lea
xchg
mov
lea
jmp
inc
dec
inc
mov
dec
dec
inc
lea
mov
call
cmp
jge
mov
lea
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
mov
inc
dec
inc
dec
inc
inc
lea
mov
xchg
mov
xchg
mov
lea
lea
dec
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
mov
mov
lea
mov
mov
xchg
inc
dec
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
mov
lea
dec
lea
lea
mov
lea
lea
mov
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jo
lea
xchg
cmp
jnp
lea
xchg
mov
mov
lea
lea
dec
dec
lea
mov
xchg
mov
mov
mov
dec
inc
mov
xchg
mov
mov
mov
jmp
mov
mov
lea
xchg
lea
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
ja
inc
inc
dec
inc
dec
inc
cmp
jp
xchg
mov
lea
xchg
lea
dec
inc
lea
mov
mov
mov
jmp
mov
inc
xchg
mov
lea
xchg
xchg
xchg
lea
lea
lea
push
call
mov
mov
call
mov
mov
mov
cmp
jbe
mov
xchg
lea
mov
lea
mov
lea
dec
inc
lea
mov
mov
mov
mov
mov
lea
lea
lea
jmp
mov
mov
mov
xchg
mov
mov
dec
inc
lea
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
lea
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
mov
inc
dec
inc
dec
inc
inc
lea
mov
xchg
mov
xchg
mov
lea
lea
dec
inc
inc
mov
mov
movl
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
gs
in
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
fdivl
mov
mov
jl
mov
fdivl
push
fdivl
dec
fdivl
push
xorl
xorl
xorl
xorl
xorl
xorl
xorl
xorl
jge
or
mov
xor
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
fs
hlt
ss
std
fs
hlt
ss
jp
or
or
fs
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
fs
repz
pmuludq
hlt
jl
or
xor
mov
fs
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
fs
mov
pmuludq
hlt
push
cld
fs
ret
xor
std
fs
ret
and
cld
fs
incl
add
repz
pmuludq
hlt
push
std
fs
ret
xor
cld
fs
jp
add
jl
adc
xor
std
fs
jp
add
ret
and
cld
fs
jl
add
ret
xor
std
fs
jp
adc
fs
ret
xor
cld
fs
incl
add
ret
and
std
fs
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
fs
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jo
lea
xchg
cmp
jnp
lea
xchg
mov
mov
lea
lea
dec
dec
lea
mov
xchg
mov
mov
mov
dec
inc
mov
xchg
mov
mov
mov
jmp
mov
mov
lea
xchg
lea
dec
movl
cmp
jge
mov
lea
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
mov
inc
dec
inc
dec
inc
inc
lea
mov
xchg
mov
xchg
mov
lea
lea
dec
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
call
mov
cmpl
je
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
mov
cmp
je
mov
subb
mov
mov
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
xorb
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
incl
mov
cmp
jne
cmp
jo
mov
mov
lea
mov
mov
xchg
inc
dec
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
mov
lea
dec
lea
lea
mov
lea
lea
mov
inc
inc
mov
call
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
cmp
jo
mov
lea
inc
mov
mov
cmp
jbe
lea
mov
xchg
lea
mov
mov
lea
xchg
lea
lea
mov
lea
xchg
mov
lea
jmp
inc
dec
inc
mov
dec
dec
inc
push
mov
push
call
mov
pop
ret
nop
push
mov
add
call
mov
cmp
jo
mov
lea
inc
mov
mov
cmp
jbe
lea
mov
xchg
lea
mov
mov
lea
xchg
lea
lea
mov
lea
xchg
mov
lea
jmp
inc
dec
inc
mov
dec
dec
inc
mov
mov
mov
add
mov
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jbe
mov
xchg
lea
mov
lea
mov
lea
dec
inc
lea
mov
mov
mov
mov
mov
lea
lea
lea
jmp
mov
mov
mov
xchg
mov
mov
dec
inc
lea
inc
inc
dec
movb
cmp
jl
xchg
xchg
dec
dec
mov
xchg
cmp
jge
inc
dec
dec
inc
inc
dec
cmp
ja
lea
inc
inc
inc
xchg
dec
inc
inc
cmp
jp
mov
xchg
inc
dec
inc
mov
jmp
inc
dec
inc
inc
dec
dec
xchg
mov
mov
jmp
dec
inc
mov
inc
mov
mov
pop
ret
mov
push
mov
add
call
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
call
call
call
test
jne
call
jmp
movw
cmp
ja
inc
inc
dec
inc
dec
inc
cmp
jp
xchg
mov
lea
xchg
lea
dec
inc
lea
mov
mov
mov
jmp
mov
inc
xchg
mov
lea
xchg
xchg
xchg
lea
lea
lea
call
lea
mov
pop
ret
lea
push
mov
add
cmp
jns
mov
lea
xchg
xchg
mov
lea
lea
mov
mov
inc
dec
lea
mov
mov
xchg
dec
push
call
test
jne
cmp
jbe
mov
xchg
lea
mov
lea
mov
lea
dec
inc
lea
mov
mov
mov
mov
mov
lea
lea
lea
jmp
mov
mov
mov
xchg
mov
mov
dec
inc
lea
inc
inc
dec
push
call
cmp
je
push
call
mov
call
cmp
jge
mov
lea
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
mov
mov
jmp
mov
inc
dec
inc
dec
inc
inc
lea
mov
xchg
mov
xchg
mov
lea
lea
dec
inc
inc
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
je
jae
add
sub
jne
mov
cmp
jo
mov
mov
lea
mov
mov
xchg
inc
dec
mov
cmp
js
mov
lea
mov
lea
lea
mov
xchg
mov
mov
lea
dec
lea
lea
mov
lea
lea
mov
inc
inc
mov
mov
mov
lea
call
cmp
jge
xchg
mov
lea
mov
xchg
dec
dec
mov
mov
lea
lea
mov
dec
cmp
jbe
mov
lea
inc
dec
dec
lea
mov
inc
mov
mov
mov
lea
lea
mov
lea
lea
ret
nop
ret
lea
adc
mov
xorl
test
lret
mov
cmpsb
jge
sbb
popa
add
loope
add
movsl
loopne
or
add
sub
in
mov
add
push
add
and
add
movl
add
call
inc
sbb
xchg
sahf
add
je
sbb
sbb
scas
sub
sahf
adc
add
xor
ja
mov
pop
jmp
mov
cltd
ljmp
add
pushf
dec
add
adc
dec
add
mov
jge
test
sbb
dec
jp
and
xchg
add
aas
xchg
or
add
out
add
push
add
add
mov
add
add
arpl
lock
xor
vorps
pop
cmp
leave
add
jmp
add
rorl
add
mov
mov
imul
push
jle
mull
lret
adc
test
dec
cmp
add
jne
and
cmp
push
jge
mov
jae
sub
lods
dec
in
ss
stos
add
add
ja
xchg
popf
cmpsl
push
subl
fisubs
addl
xor
pusha
aas
dec
cmpsb
or
dec
xchg
pop
jecxz
or
add
repnz
xchg
push
xor
mov
push
mov
dec
add
aas
add
call
popf
dec
mov
xchg
scas
add
mov
adc
add
add
notl
add
imull
inc
mov
ret
in
mov
inc
cmp
and
mov
add
mov
mov
fldl
xor
adc
jae
js
xor
add
scas
add
test
fisttpll
add
xchg
cmp
mov
xchg
push
pusha
add
aam
xor
add
push
inc
iret
cmp
mov
sbb
sarl
push
lret
cmp
pusha
lea
imul
flds
or
insb
add
xchg
inc
mov
jl
sub
jo
int
and
mov
jnp
in
or
add
daa
jnp
push
inc
aam
add
lods
and
add
jl
cmpb
flds
test
ja
add
add
aas
adc
xchg
add
add
lds
inc
or
sub
add
bound
je
add
inc
dec
or
jg
imul
dec
inc
stos
add
mov
pop
add
loop
int3
aas
aam
add
add
add
push
out
add
add
in
scas
outsb
aam
xor
push
push
mov
add
mov
pop
int
test
lds
push
adcb
and
mov
icebp
cmp
add
push
add
add
jbe
js
out
or
enter
lea
icebp
jno
sbb
add
dec
add
add
xchg
push
add
add
xchg
mov
sbb
pop
add
cmp
add
inc
shlb
add
movsb
inc
sub
addl
add
add
jb
lods
mov
mov
pop
jge
adc
repnz
aas
scas
faddl
mov
add
sub
jmp
adc
add
add
add
mov
add
and
add
imul
lock
jp
lea
add
add
push
mov
fldcw
call
popf
std
test
add
jecxz
dec
add
add
add
xor
add
sti
or
fwait
enter
add
lea
test
pop
inc
add
and
add
add
mov
fisubs
push
add
sarb
sbb
sbb
scas
lea
test
add
xchg
add
jp
dec
xchg
mov
iret
test
adc
xchg
sub
inc
fmulp
hlt
or
pop
and
mov
pop
aaa
add
out
jp
cmp
cltd
mov
in
cmp
xchg
add
and
dec
pop
mov
ret
dec
pop
mov
or
cmpsl
pop
dec
mov
aad
mov
out
mov
shlb
aad
xor
lods
mov
xchg
pop
jne
sbb
mov
mov
cs
mov
aaa
push
jp
pop
jbe
cltd
push
fisubrl
xchg
jnp
sbb
jle
sbb
push
out
fcomip
dec
mov
or
sahf
pop
into
test
jae
data16
lahf
push
sbb
aam
cmc
mov
enter
test
sbb
inc
hlt
imul
scas
mov
sbb
adc
xchg
in
iret
mov
into
pop
leave
xchg
mov
hlt
aas
aaa
add
sbbb
leave
out
push
scas
mov
fwait
add
fucomp
int3
cmp
mov
pop
add
lds
rol
lea
into
repnz
movsb
movsb
cs
push
push
stc
cmp
pop
jne
jge
fstps
pop
rol
aaa
sbb
pop
or
jno
mov
jl
or
dec
je
inc
push
pop
push
iret
xor
dec
iret
adc
fcmovbe
subb
ret
loopne
enter
fucomip
pop
xchg
dec
enter
daa
push
lods
mov
test
and
mov
push
nop
cmp
mov
movsl
sub
xchg
lahf
push
or
fldl
sbb
mov
outsl
lahf
cmp
sbb
pop
js
push
das
movsb
push
loop
jbe
bound
sub
in
mov
cld
outsl
in
repnz
adc
cli
mov
clc
mov
stos
push
push
ja
int
mov
sub
xchg
outsb
add
shrl
imul
or
xor
dec
jg
jno
mov
xor
xor
adc
jmp
cmp
addr16
mov
out
ss
cld
xor
not
or
dec
pop
cmc
inc
sbb
add
outsl
cmpsb
int3
shl
push
pop
pop
imul
cli
jg
into
fisttpll
aaa
mov
out
mov
mov
cld
xchg
jecxz
push
cmp
mov
jne
pop
xchg
dec
adc
jnp
fldl2t
and
stos
enter
cmp
mov
push
jmp
cmpsl
sub
int
adc
pop
sub
sub
cs
mov
nop
push
dec
push
dec
push
test
or
iret
mov
je
mov
cmpsb
or
lea
call
insl
les
cmpb
dec
xor
pushf
xchg
imul
push
inc
mov
in
push
sub
mov
and
leave
lcall
dec
int3
std
je
cmp
neg
jnp
jne
mov
cld
or
lret
sub
mov
adc
divb
das
ds
push
sub
lods
insl
ret
cmpsl
push
shrl
jmp
mov
push
hlt
mov
lret
lods
mov
cwtl
mov
mov
push
and
data16
jno
rolb
push
cltd
push
movl
mov
clc
push
mov
ljmp
rcrl
stos
sub
ret
xchg
push
xlat
jne
ljmp
add
xor
xor
dec
pop
mov
adc
mov
imul
mov
mov
jne
xchg
or
push
or
pop
cmpsl
scas
add
andb
sbb
jle
out
movsl
in
mov
add
xor
mov
inc
sub
ja
sbb
and
mov
sbb
mov
xor
mov
cmp
out
adc
filds
mov
leave
cmp
mov
sub
fwait
xchg
cmpsb
addr16
cmp
call
insb
mov
sti
jnp
add
jle
adc
in
sub
in
pop
into
fists
cmc
lcall
out
inc
mov
pop
jae
movsb
sbb
popf
sti
xlat
mov
pop
push
test
clc
pop
in
xchg
sbbl
sbb
test
imul
scas
push
sub
mov
iret
sbb
adcb
leave
or
and
inc
sub
or
add
fcmovu
out
add
daa
int3
daa
push
inc
pop
mov
int3
inc
or
test
in
mov
pop
loop
cmp
movsb
push
dec
and
jge
dec
dec
sbb
fnstenv
xlat
inc
sti
or
sbb
push
push
jl
inc
jle
jecxz
ret
xor
xor
movsb
sbb
clc
and
shrl
stos
test
mov
push
in
inc
sub
enter
daa
add
imul
push
add
sub
cmp
mov
jno
cmp
mov
sbb
xlat
addb
mov
fcmove
push
xor
and
repz
mov
ds
lret
cmp
or
test
aas
stos
mov
rcl
pusha
and
daa
popa
push
mov
ret
mov
cmpsb
int
call
add
in
pop
out
data16
rol
sbb
push
lock
das
and
shll
lea
addl
fs
and
jl
xchg
xchg
nop
fsubs
sub
mull
and
xor
cmp
addr16
or
add
cmc
or
mov
pop
movsb
jmp
loop
mov
imul
in
in
push
mov
mov
mov
jnp
in
jmp
in
addr16
xor
pop
add
jmp
adc
stos
in
and
movsl
movsl
xor
lds
and
cmc
les
popf
into
xchg
inc
add
sbb
mov
loop
sub
loope
pushf
fdivs
aam
enter
add
lods
dec
cs
rcrb
or
add
inc
imul
in
and
test
lock
mov
sahf
pop
xor
push
addl
fistl
lds
andl
mov
leave
aas
icebp
jge
jb
pushf
cmp
ljmp
add
or
std
sbb
push
mov
inc
aad
push
mov
xor
int3
mov
xchg
mov
test
lock
mov
das
sbb
xchg
daa
sub
add
and
jo
rcl
pop
insl
cmp
jle
add
lcall
jge
lods
and
mov
or
out
add
mov
dec
add
rcrb
add
pop
test
iret
rclb
mov
xchg
clc
nop
outsb
cmpsl
xchg
xor
ljmp
pop
pop
jecxz
popa
stos
jo
fwait
out
jo
ret
test
orl
xor
inc
enter
lret
mov
nop
add
xchg
fistps
dec
sbb
pop
leave
xchg
bound
mov
xchg
fwait
add
push
add
fiadds
popf
cmp
mov
dec
mov
popf
cmc
jmp
sbbl
mov
ljmp
add
ja
movsl
mov
mov
cmp
mov
push
push
push
dec
test
xchg
out
pop
mov
xchg
cmp
hlt
rcrl
stc
push
xchg
hlt
jo
cmp
lret
mov
cmp
xchg
xchg
test
and
jecxz
and
int3
or
jnp
mov
jle
add
pusha
mov
fbstp
hlt
xchg
scas
adc
cmp
cli
inc
mov
or
and
mov
dec
push
inc
sbb
fidivl
xor
pop
rorb
repnz
js
mov
leave
andl
stos
arpl
inc
sub
or
jge
lret
daa
push
fimull
inc
int3
adc
pop
in
gs
leave
ja
lds
sbb
mov
mov
inc
cmp
or
push
xchg
dec
jp
movsl
jae
jge
lcall
xchg
jmp
or
in
jno
mov
jl
push
push
dec
push
sbb
push
push
pop
pop
xor
jg
scas
or
mov
add
out
test
pop
call
xsha256
cmpsb
xchg
cmp
in
sub
inc
daa
add
cmp
mov
loope
sub
mov
data16
testb
mov
ss
sbbl
sub
dec
xor
cli
cmc
pop
dec
push
out
js
push
cmp
divb
inc
push
nop
jge
fdivrl
or
adc
mov
push
mov
aaa
cmpb
mov
mov
imul
int3
adc
decb
sub
xor
insb
xor
rcll
mov
push
xchg
pop
push
subb
xchg
xchg
dec
mov
sbb
stc
js
jbe
inc
mov
sbb
push
and
cmp
fstl
cltd
lret
pop
xor
or
lods
mov
cmc
shlb
sub
loop
cmp
imul
and
xor
adc
out
mov
cli
pop
ja
mov
rcl
push
sti
adc
gs
insl
loopne
mov
inc
adc
sub
repz
inc
jmp
push
pop
adc
fstl
imul
pop
test
and
mov
jmp
dec
popf
cs
stc
aad
call
push
dec
sub
addb
add
ret
jnp
jmp
lods
pop
pop
lea
push
call
imul
sbb
dec
or
test
pop
sbb
popf
inc
sarl
aas
nop
rcrb
fidivl
add
sarl
cli
inc
test
sbb
ret
cwtl
sub
les
pop
push
sub
pop
pop
cld
pusha
outsl
lcall
insb
xchg
lods
clc
sbb
cld
scas
xor
je
mov
in
and
jmp
insl
pop
adc
mov
out
add
dec
popa
clc
es
mov
test
push
mov
insb
xchg
into
shr
jb
lds
mov
push
pop
mov
pop
xor
clc
lret
jb
xchg
adc
in
sarl
jne
stos
pop
repz
shll
xchg
in
push
push
mov
movl
mov
pushf
stc
mov
int
int3
dec
test
test
in
xchg
jb
inc
mov
mov
fwait
xor
mov
movsb
js
add
mov
shl
iret
jbe
jns
ljmp
repnz
mov
mov
xor
mov
mov
dec
cmp
push
mov
rorb
mov
dec
push
adc
out
sarl
xor
repnz
nop
daa
xchg
mov
jp
out
lret
cmpsl
sub
xchg
cs
jp
mov
and
mov
jnp
and
jle
loop
in
dec
dec
pusha
and
aad
sbbl
inc
or
push
call
divb
cli
cli
aad
test
stos
xchg
xchg
xor
sbb
andl
int3
mov
push
pop
pop
in
ja
add
xlat
jne
leave
clc
dec
hlt
and
inc
arpl
sbb
push
sub
fidivrl
inc
stos
add
dec
add
sbb
xor
insb
pop
pop
jge
fdivp
jo
pop
push
cmc
repnz
stos
cmp
push
dec
movsb
iret
add
push
out
js
call
shrl
aaa
push
sbb
push
popa
fnstenv
sub
jl
cmp
dec
rorl
push
add
pop
xor
pop
testb
xchg
or
test
sarb
inc
lea
out
adc
clc
enter
daa
add
popa
cmp
mov
out
sub
adc
cmp
scas
movsl
mov
lods
movsl
xchg
adc
lahf
jnp
lea
cmp
popa
fdivr
add
mov
xor
repnz
mov
dec
jge
imul
fwait
sbb
or
sub
outsb
add
and
lea
sets
mov
sub
shll
cmpsl
aaa
mov
iret
or
int
not
sub
lcall
out
mov
mov
in
fcompl
dec
stc
sahf
jne
loopne
fists
jmp
cmpsl
lods
out
mov
pop
vcomisd
add
add
sbb
int
pop
outsb
adc
loopne
adc
cwtl
cwtl
mull
aad
mov
shlb
sbb
and
xor
std
sti
gs
fnstcw
out
adc
imul
div
imul
mov
daa
lods
in
loopne
mov
shlb
loop
ret
movsb
lds
cmp
out
xor
gs
jnp
jecxz
outsb
adc
xchg
lahf
repz
sub
xchg
leave
jg
sbb
sbb
mov
adc
pop
setl
dec
in
mov
xchg
jle,pn
into
aad
ljmp
xchg
out
inc
xor
mov
rolb
ror
or
scas
mov
lea
xchg
xlat
ljmp
xorl
ret
and
dec
inc
in
xor
aas
das
sub
sub
pop
shll
mov
testb
mov
cwtl
out
pop
mov
mov
pop
icebp
das
lret
mov
rorb
imul
lock
jns
das
mov
sub
arpl
mov
rol
push
add
fsubrs
jmp
cmpsl
add
gs
pmuludq
lods
clc
jbe
mov
sbb
and
aaa
scas
push
pop
mov
xor
mov
cmpsl
test
jge
push
sbb
fldl
or
ljmp
mov
stos
dec
sbb
out
adc
push
jnp
mov
add
jae
xor
xchg
xor
rcl
scas
ljmp
jmp
xlat
test
jecxz
sub
sub
or
push
pop
fwait
pop
xor
inc
dec
or
mov
sbb
xor
and
and
sbb
xchg
into
scas
xchg
inc
jns
mov
jle
mov
jbe
emms
test
dec
sub
mov
mov
ss
mov
xchg
cwtl
test
ds
out
mov
cltd
bound
dec
or
mov
pop
xchg
mov
out
dec
cmp
mov
addr16
fistps
and
aam
insb
repz
lret
pop
mov
in
in
lea
pop
ret
fbstp
lret
loop
pop
stos
loope
inc
shl
test
imulb
popf
jo
xchg
mov
les
fs
mov
sbb
inc
inc
imul
lea
pop
nop
popa
adc
pop
iret
ss
ret
dec
leave
outsl
sbb
hlt
imul
arpl
sub
jmp
jae
mov
and
inc
jo
int3
call
jle
fimuls
stos
mov
sar
popa
mov
push
subb
pop
cmp
push
xor
inc
mov
cmp
sbb
dec
inc
adc
icebp
in
jl
hlt
add
xor
xor
mov
sbb
lret
and
xor
test
popf
pop
test
sbb
add
stc
ds
stos
xchg
xchg
daa
add
sub
push
insb
arpl
sbb
nop
sub
push
inc
cmp
adc
mov
test
jne
sub
sbb
imull
xor
adc
jnp
push
pop
lcall
pop
je
xor
aad
push
ds
fmull
push
daa
sub
push
adc
push
cmp
andb
mov
add
push
mov
and
jnp
int
aad
sub
and
push
scas
lcall
dec
mov
inc
inc
sbb
iret
sahf
sbb
loop
pusha
inc
imul
arpl
out
pop
fs
jg
adc
jmp
cmp
push
sub
push
lret
pop
xor
mov
cmp
mov
or
into
mov
shll
push
xchg
outsl
and
stc
loop
jmp
fstl
andl
pusha
pusha
inc
data16
pop
lods
rcrl
dec
mov
enter
push
jnp
orb
sti
and
lock
push
mov
adc
mov
adc
adc
mov
fld
vpinsrw
int3
repz
sbb
push
mov
or
xchg
adc
inc
pushf
fldcw
jmp
andl
orl
dec
out
ljmp
popa
inc
je
and
jmp
lea
dec
cmpsl
call
imul
ret
adc
fnclex
ds
popa
rorb
inc
test
out
inc
pop
add
aas
into
xchg
mov
mov
pop
aam
dec
push
std
adc
add
mov
xchg
lock
push
push
mov
jne
out
inc
mov
loope
mov
iret
loop
bound
xchg
lret
std
aam
out
mov
es
lds
xchg
hlt
dec
test
inc
cmpsl
add
mov
es
lods
arpl
test
cmp
push
addr16
loop
stos
int
rclb
xchg
test
mov
mov
clc
inc
aaa
daa
xchg
xchg
adc
ljmp
pop
pop
in
in
cmp
mov
pop
push
push
dec
iret
setle
xchg
add
or
cmp
mov
sar
rorb
mov
xchg
dec
movsl
inc
shll
icebp
fwait
mov
ss
ljmp
add
sub
inc
xor
mov
in
test
mov
ja
mov
xor
shll
push
dec
dec
push
jns
mov
insb
mov
mov
lea
inc
xorl
cltd
and
leave
bound
xor
stc
call
sub
xchg
clc
addr16
push
mov
jns
and
jmp
pop
mov
jnp
push
jnp
data16
ret
pusha
pop
sub
fists
cltd
xor
rorb
inc
fdivl
or
inc
inc
push
outsb
mov
popf
xchg
push
idivb
add
stos
les
sbb
shll
scas
xchg
mov
push
movsl
daa
bound
sub
pop
test
out
cmpsb
hlt
mov
imul
mov
or
out
daa
inc
sub
incl
xlat
cs
shr
sbbl
pop
fidivs
jl
rclb
repnz
js
movsb
in
and
ljmp
ljmp
sar
or
cmp
jno
jl
addb
xor
push
aaa
mov
jo
pop
or
mov
arpl
push
aam
cmpsb
sbb
push
in
loopne
stos
enter
daa
add
shl
dec
nop
sub
popa
add
mov
ds
dec
sbb
and
stc
lahf
mov
mov
add
into
xor
mov
ds
ffreep
adc
mov
mov
addl
fdivrl
sub
adc
inc
in
int
xorb
mov
mov
push
xor
push
aad
popa
int
xchg
pop
sub
mov
xor
dec
rcrl
mov
sti
pusha
sahf
mov
or
jg
out
mov
jg
stc
popf
pop
icebp
fs
stos
pop
fistps
cmp
push
push
xor
mov
lock
test
ud2
fildl
jbe
lahf
mov
push
xor
mov
inc
loop
push
mov
jnp
leave
adc
push
pop
add
arpl
pop
int
lods
mov
push
push
out
sahf
lahf
cli
mov
dec
mov
adc
sti
rcr
and
ja
cmp
movb
pop
and
fists
adc
mov
repz
jge
sub
cmp
jecxz
sub
js
mov
pushf
test
jmp
inc
mov
aad
sbb
nop
lcall
inc
pop
pop
adc
and
xchg
jecxz
mov
pop
lea
inc
call
call
xor
dec
leave
mov
fistl
push
mov
inc
das
or
ret
call
cmp
sub
add
dec
pop
std
mov
ret
cwtl
pop
pop
lcall
test
cld
loope
dec
lret
push
push
mov
mov
add
lock
ds
mov
pop
gs
aam
push
or
ficoms
insl
aam
xchg
dec
mov
imul
lods
into
cltd
stos
mov
pusha
addr16
and
insl
fsubp
pop
leave
outsb
jle
gs
dec
cltd
push
push
test
xchg
pop
mov
cmp
fst
or
push
xchg
sarb
mov
pop
or
stos
sub
add
cld
sub
xchg
mov
xchg
into
paddw
inc
or
stos
mov
vpperm
push
xchg
fwait
push
test
in
mov
sub
sbb
push
push
jbe
fwait
mov
fsubs
add
push
push
pushl
adc
enter
jns
out
lods
fcoms
and
mov
in
mov
lcall
jo
mov
adc
jge
adc
and
jo
scas
bound
loopne
jbe
adc
lahf
mov
sahf
mov
sub
subb
pusha
dec
jp
push
subb
jnp
adc
jle
cmp
loope
hlt
adc
pop
mov
cli
sbb
sbb
inc
out
enter
inc
push
xor
pop
popf
mov
out
test
cwtl
stos
aaa
dec
sti
xchg
ss
sbb
cmp
scas
cmc
cmp
push
in
and
or
iret
hlt
andb
data16
pop
cmpsl
push
hlt
add
lret
lods
mov
xor
sbb
xor
ficompl
aaa
add
and
mov
cmpsb
scas
ficoms
mov
shrb
push
mov
cld
lock
cmp
jge
jo
dec
push
rcrl
jge
int
sbb
mov
or
and
jno
out
jl
loopne
dec
push
insl
adc
stos
fiaddl
jo
sar
scas
mov
and
test
xor
outsl
inc
cmp
and
insb
add
mov
push
sarl
lock
loope
repnz
sub
inc
movsb
cmp
das
mov
movsl
stos
mov
and
mov
pop
sbb
cmpsl
and
xor
push
je
add
aam
call
iret
es
repnz
hlt
pop
adc
fsubl
sub
cmp
adc
push
inc
in
sub
mov
mov
pop
xorb
mov
fdivs
push
sub
cmpsb
rolb
push
sub
mov
ret
mov
and
pop
adc
adcb
jnp
jno
mov
fs
adc
jbe
and
enter
int
popa
sub
lret
jns
lahf
mov
out
or
test
cmc
out
pop
xor
jno
outsl
loopne
inc
loop
push
jl
xchg
add
adc
repnz
lods
mov
outsl
mov
fistps
cli
jecxz
addr16
or
jle
sar
stc
cmp
lcall
loopne
in
cli
pop
inc
repnz
in
mov
in
push
jae
cmp
xchg
adc
mov
leave
pop
clc
xlat
loope
mov
icebp
mov
pushf
das
cmp
jmp
enter
pusha
aad
inc
rclb
movsb
cltd
inc
inc
imul
je
jmp
or
mov
mov
sub
pop
mov
sbb
mov
sbb
sub
pop
cmpsl
cs
mov
iret
inc
cmp
dec
or
sub
repz
push
adc
jp
mov
rclb
repnz
pop
aam
cwtl
sbb
mov
add
mov
test
icebp
mov
movsl
cld
or
pop
lret
lds
mov
sahf
xor
das
js
les
push
mov
imul
add
popa
push
jae
mov
cmp
push
cmpb
cmp
mov
sbb
and
or
pop
call
pop
cltd
mov
sub
mov
jmp
arpl
push
mov
mov
cmp
sub
shll
stos
sbb
ret
cmpsb
out
add
subps
add
cld
loop
fisubrl
les
fldcw
test
ret
mov
sbb
or
punpcklbw
fwait
in
jg
push
xor
in
and
mov
sarl
mov
sbb
mov
xor
into
xchg
jne,pn
mov
ret
push
sub
pop
cmpsl
test
ja
pop
pop
dec
add
dec
mov
cwtl
pop
mov
xorl
jne
test
mov
xchg
dec
out
dec
pop
cmp
mov
jmp
popa
add
jmp
sub
jge
push
addr16
movl
cmp
insb
xor
jb
ficoml
in
xor
pusha
or
lds
pop
dec
mov
insl
jae
stos
test
hlt
aaa
mov
in
lcall
fs
stos
stos
xor
sub
mov
scas
pop
mov
push
xor
scas
iret
push
mov
ret
in
aam
je
dec
iret
sbb
int3
dec
inc
cmp
movsb
or
in
inc
inc
daa
ds
jne
add
roll
fsub
mov
vpsrlq
mov
dec
divb
cmp
das
sub
sbb
jge
xchg
ret
sbb
push
or
sbb
loope
mov
imul
xchg
xor
xchg
lods
scas
addr16
leave
and
aad
test
incb
pop
inc
leave
add
adc
scas
pop
xchg
enter
daa
jmp
cmp
shlb
pop
mov
fdivrl
out
adc
pusha
inc
and
fwait
lahf
test
mov
add
mov
xor
mov
js
insl
inc
pop
xor
push
inc
inc
pop
fmull
mov
out
outsb
xchg
pop
push
adc
stc
test
clc
sbbb
inc
mov
cltd
xlat
and
stos
xor
fildl
stos
sub
sub
lcall
inc
sbbl
add
test
adc
xorb
std
mov
outsl
in
stc
or
fs
pushf
dec
adc
or
gs
xor
test
mull
xchg
lret
insb
xor
sahf
cmp
jb
or
aad
cmc
mov
shlb
cmp
outsl
mov
notb
imul
fisubl
mov
mov
std
mov
and
out
xchg
xchg
cli
push
popa
std
mov
jmp
mov
and
pop
pop
fiaddl
adc
jnp
imul
dec
repz
jo
xchg
aad
xor
cmp
int3
xlat
and
fs
mov
cmp
iret
pushf
fcmovu
outsb
jmp
btsl
stos
mov
push
xlat
add
dec
add
addl
pop
dec
adc
sahf
je
dec
inc
jecxz
pop
sub
mov
mov
fadd
out
add
gs
adc
jb
fldt
xchg
pop
dec
mov
inc
cmp
fldcw
stos
mov
jb
dec
imul
leave
jae
notb
or
pop
mov
adc
sbb
icebp
mov
cmp
aaa
ds
lret
xor
lds
xchg
das
push
pop
adc
inc
test
ret
nop
es
sub
test
cltd
cmp
out
mov
imul
mov
cmpsb
inc
fldenv
mov
mov
int
fdivs
loopne
ficoml
mov
push
es
dec
frstor
adc
clc
repnz
xchg
push
xchg
sbb
mov
mov
push
stos
or
out
ret
xchg
dec
lret
test
out
inc
btc
movsb
add
repz
out
xchg
xor
dec
xchg
sbb
xchg
fistps
jb
lcall
sbb
nop
xor
add
aas
pop
pushl
xchg
xor
insl
jns
dec
in
mov
mov
sbb
pop
bound
ja
cmpsl
orl
jecxz
mov
lock
xlat
fiaddl
mov
imul
bound
stc
jmp
mov
dec
adcl
movsb
in
sub
js
lcall
arpl
insb
lahf
popf
jnp
fcomps
iret
xchg
push
in
imul
fucomip
das
xor
xchg
inc
std
repnz
push
mov
push
popf
or
mov
push
shlb
in
aad
xor
adc
jp
ficoms
mov
jecxz
ret
test
dec
ret
xchg
pop
pop
arpl
ret
cmp
lcall
cmpsb
into
stos
fidivrl
inc
lods
int3
xchg
push
jb
pop
fbstp
fwait
add
shlb
mov
mov
addl
jbe
dec
jg
fnstcw
adc
xor
nop
or
stos
jno
insb
fidivrs
lock
in
sub
sbb
jmp
push
jo
jb
scas
inc
out
and
imulb
leave
cmp
inc
pop
test
cmpsb
movsl
xchg
dec
in
xchg
sub
enter
daa
incb
cmp
lods
sbb
cmp
adc
movsl
mov
imul
je
clc
add
inc
int
andl
xchg
cmc
pop
ss
lahf
sbb
jo
out
push
mov
mov
mov
cs
adc
aam
pop
subb
mov
cmp
and
jb
push
fidivrs
jle
push
jns
pop
popw
cmp
loope
in
outsl
in
aaa
sbb
mov
sahf
test
and
jg
pop
push
mov
mov
stc
ret
fs
dec
adc
lods
in
cmp
aas
dec
xor
fildll
lret
xor
jae
clc
scas
add
sub
into
dec
fisttpll
fcomps
xor
sti
jmp
mov
pop
imul
iret
add
mov
cmc
addr16
fstpl
cli
dec
adc
mov
push
jp
sti
loopne
fdivrp
loopne
xchg
fisttpl
in
testl
rcll
mov
stos
jp
add
pop
repz
stos
cmp
mov
jae
xlat
pop
push
push
sub
rcrb
nop
jge
pushf
test
jmp
sbb
aad
int3
inc
nop
sub
or
decb
inc
xchg
cltd
aas
dec
xchg
je
incb
mov
mov
call
gs
flds
mov
inc
pop
in
mov
inc
les
mov
aas
dec
and
jb
lahf
adc
int3
and
push
pop
repz
lods
sub
mov
test
icebp
bound
bound
imul
xor
into
mov
mov
or
ret
pop
std
mov
addr16
insl
mov
dec
xchg
call
into
mov
adcb
lods
je
dec
mov
cmp
mov
ficoms
xor
in
mov
push
jmp
in
cmp
sub
and
adc
mov
stos
stc
fs
and
pop
aas
push
ret
nop
dec
add
lea
mov
fildll
push
dec
out
pop
sbb
movsl
jmp
gs
sub
scas
adc
dec
fcompp
push
jbe
rolb
ss
adc
jecxz
sahf
sbb
xchg
int3
sbb
dec
loopne
mov
sbb
lret
cli
dec
ljmp
mov
pop
fdivrs
mov
push
mov
out
or
or
jmp
xorl
addr16
lods
or
jae
andb
mov
arpl
and
dec
insb
or
jnp
loop
jle
sub
in
add
lds
mov
pop
mov
test
push
jp
jb
xor
mov
push
decl
or
imul
pop
scas
push
andb
insb
push
adc
sbb
ret
or
lds
arpl
cld
lods
inc
inc
push
orl
and
inc
push
add
xchg
and
jg
rcrl
iret
fidivrs
fprem
lds
mov
fs
cmc
pushf
sarb
insb
ja
movsb
adc
jbe
shl
jbe
xor
jge
int
sbb
je
aaa
iret
clc
or
xor
jno
in
jl
clc
mov
push
push
jnp
xor
jl
sti
scas
and
repz
mov
rcrl
inc
mov
sub
cmpsb
in
jl
ss
daa
std
test
cmp
or
lea
int3
cmp
ds
jmp
nop
and
dec
push
dec
cmpsb
mov
stos
cmp
xor
dec
cmpl
pop
scas
adc
icebp
push
pushf
fsubl
pusha
sub
or
outsb
push
out
adc
scas
mov
vphadddq
inc
mov
xor
push
loope
ror
and
pop
in
lcall
js
scas
mov
mov
sahf
inc
jne
test
lods
cmp
popa
mov
stc
jns
andl
pop
ss
mov
lret
fdivr
rcrb
into
ror
arpl
or
and
mov
rcll
sub
inc
cmc
inc
cmp
xor
scas
outsl
jge
movsb
loop
lods
pusha
imul
add
sbb
imul
push
cwtl
aam
lock
fwait
out
sahf
sbb
jl
pop
mov
mov
lock
incb
xchg
adc
push
xor
pop
popf
mov
adc
sub
fdivrs
les
sub
sbb
jp
pop
xlat
sahf
and
sub
xchg
adc
and
pushf
xor
or
aad
and
cmc
dec
shll
inc
movsb
adc
add
pop
jecxz
xchg
ss
sti
lea
push
inc
call
in
inc
pop
lret
push
push
fcmovne
dec
add
pusha
repnz
dec
adc
aas
jmp
daa
pusha
mov
push
stos
mov
orb
adc
std
push
sub
cwtl
dec
push
out
scas
or
mov
dec
movsl
icebp
cmp
pop
cld
notb
mov
mov
les
lock
push
das
adc
cli
sub
xor
and
nop
es
dec
daa
sbb
cld
in
sarb
mov
lods
jp
pop
mov
in
out
mov
mov
inc
sbb
cltd
inc
mov
test
fisttps
push
lods
jbe
fnsave
mov
push
jle
ljmp
jnp
cmp
fisubrl
mov
cmpsb
xchg
dec
outsb
push
popf
xchg
leave
hlt
imul
lret
cs
test
xchg
xchg
jmp
test
mov
data16
sub
or
adc
je
sbb
add
jne
jne
mov
xor
adc
dec
jns
mov
flds
jp
sbb
imul
pop
bound
xor
ja
jb
dec
mov
out
mov
into
mov
dec
popf
rolb
mov
push
xchg
in
and
bound
mov
mov
out
out
sub
outsb
xchg
jp
sub
or
cmpb
lock
mov
call
fildll
les
hlt
and
inc
adc
jae
lds
cmp
jge
mov
loope,pt
stos
add
sub
sbb
pop
push
scas
adc
jbe
je
test
ret
mov
hlt
sub
jp
inc
inc
sbb
daa
push
movsb
jnp
fisubl
int3
add
add
int3
push
fistps
daa
mov
loope
mov
mov
fwait
fistpll
dec
loop,pt
and
sbb
lds
lea
sbb
shl
cli
dec
sbb
jl
test
add
ss
addr16
xlat
stc
scas
add
std
and
out
push
pop
sahf
pusha
inc
jbe
in
cmpsb
stos
push
pop
in
arpl
enter
daa
cld
xchg
sbb
subl
movsb
notb
mov
out
repz
or
jle
mov
mov
and
dec
sbb
push
sbb
ss
pop
or
xor
mov
or
fisubrs
pop
out
or
push
in
push
dec
cwtl
mov
adc
sub
scas
pop
outsb
mov
ljmp
test
inc
adc
xor
loopne
mov
push
in
sbb
mov
lret
mov
lcall
xor
addr16
sahf
ljmp
addb
and
ret
mov
shl
lahf
scas
mov
inc
dec
lcall
nop
cmc
fdivs
mov
adc
sti
jle
cmp
cmpsb
jno
push
or
into
push
leave
call
xor
das
mov
bound
enter
inc
mov
data16
adc
mov
scas
out
push
jg
or
in
sub
dec
sti
and
es
mov
loopne
ja
pop
mov
test
cmc
push
les
fwait
cmp
je
mov
push
jge
sbb
mov
out
xlat
fnstsw
xor
ds
fstps
jg
xor
mov
loope
into
dec
and
inc
mov
int
jne
sub
arpl
jae
add
lea
xor
arpl
out
pop
jle
lcall
inc
je
cld
xor
pop
xor
addb
cmp
xor
mov
imul
pop
mov
test
neg
movsl
jno
cli
push
xor
insl
pop
lret
mov
cmp
icebp
adc
dec
lret
orl
push
lock
or
hlt
mull
sub
cld
aam
sub
ret
cmp
call
rorl
cli
add
sbb
xchg
popa
mov
stos
lods
in
mov
sysenter
cmpsb
and
je
dec
pop
rclb
test
and
mov
mov
int3
fstl
fs
or
add
jae
negb
pop
stos
xlat
stos
insl
out
jmp
jo
sbb
ss
fadds
add
icebp
imul
push
div
mov
in
repnz
mov
loope
xchg
test
inc
pop
imul
fwait
test
rcrb
mov
inc
incb
nop
xor
dec
std
mov
jns
mov
xchg
xchg
push
push
mov
int3
or
xchg
mov
ja
sahf
test
shrb
mov
lahf
dec
mov
cmp
mov
and
mov
mov
test
dec
pop
xchg
xchg
pop
sbb
add
loope
sub
sub
addr16
fists
leave
mov
gs
loopne
fwait
jnp
inc
jno
cmp
outsl
in
pusha
sub
sti
mov
mov
sub
cmpsb
inc
push
mov
mov
popf
adc
in
jge
dec
stos
jbe
pop
xchg
jmp
mov
mov
push
dec
out
adc
lcall
sarl
leave
mov
fcomi
js
adc
inc
inc
pop
pushf
or
shrb
inc
and
dec
add
xchg
int3
push
xchg
jle
xchg
jno
fiadds
xchg
shlb
pusha
repnz
adc
dec
sub
push
pop
mov
mov
xchg
inc
sbb
clc
aaa
dec
push
jecxz
in
sbb
jl
sub
push
sbb
xor
xor
scas
jecxz
out
sub
sub
cmpsl
xchg
sub
mov
cwtl
xchg
cmpsb
fstl
enter
daa
sti
decb
cmp
push
mov
sbb
push
cmp
jno
movsl
into
lock
ret
lahf
jae
push
out
imul
add
cmc
fnstenv
lock
rolb
pop
stos
icebp
and
inc
scas
in
sub
mov
fdivrl
push
push
outsb
sbb
jb
shlb
test
pop
and
in
mov
mov
bswap
and
pusha
insl
push
out
icebp
int
sarb
sub
or
shll
loop
shlb
lea
test
aad
sbbb
sti
mov
shll
daa
and
xor
xchg
push
ss
aaa
cmp
jo
adc
sbb
pop
lret
xorb
dec
cmp
or
loopne
icebp
lods
and
sarl
std
outsl
cmp
daa
loop
xor
imul
das
add
leave
outsw
jp
lods
and
push
mov
mov
out
mov
cli
loop
loopne
and
mov
decb
mov
loopne
dec
in
mov
inc
adc
les
jle
repz
notl
loope
fistpl
lock
sbb
ret
sub
push
sbb
xchg
fcoml
jmp
xlat
cmp
xchg
cld
sub
jb
mov
dec
jg
fadds
test
xor
push
adc
adcb
mov
mov
call
loop
mov
mov
or
push
fldt
loopne
pop
fildll
inc
les
or
mov
insl
mov
roll
lods
mov
mov
or
sub
icebp
out
mov
lret
lock
mov
test
mov
dec
bound
rol
or
hlt
sbb
and
aam
xchg
negb
es
insl
ds
scas
cmpsl
cli
cltd
mov
insb
adc
aas
mov
xor
push
xchg
mov
orl
cltd
mov
mov
mov
sarl
fnstsw
pushf
jmp
dec
jns
ljmp
pushf
pop
xchg
xchg
shrb
dec
pop
and
push
stc
push
getsec
add
add
and
or
xor
xor
mov
ret
int
dec
and
mov
xchg
sbb
sbb
inc
repnz
cmpsb
pop
jg
xlat
test
adc
add
mov
xor
pop
test
out
mov
xchg
mov
icebp
dec
mov
dec
jbe
ja
dec
mov
mov
jnp
mov
lods
mov
dec
arpl
stos
mov
xchg
out
stos
pusha
jle
mov
mov
xchg
loop
in
adcl
adc
fs
addr16
out
push
jp
movsl
and
test
jnp
xchg
add
mov
in
and
and
push
ljmp
pop
sbb
inc
jae
aam
push
ret
dec
lcall
jb
push
mov
inc
enter
adc
inc
imul
mov
adc
int
iret
cs
ret
jnp
daa
test
hlt
ret
lret
or
inc
dec
or
mov
inc
mov
rorl
clc
push
jns
inc
sbb
ret
jg
fisubs
cwtl
jno
pushf
orl
add
out
sbb
cmp
enter
mov
jge
rcll
aaa
or
test
loopne
jno
daa
xor
mov
filds
xor
lea
movsb
and
lret
push
push
cmc
push
mov
es
cmpsb
mov
jg
xor
enter
daa
cli
out
loope
jmp
sarb
or
cmp
push
les
out
aad
lods
and
sbbb
sbb
sbb
in
mov
movsb
xor
hlt
push
pop
shr
dec
js
xor
push
loopne
push
testb
sub
mov
adc
inc
loop
data16
cmp
xor
jbe
and
aaa
adc
ljmp
sub
punpckhbw
bound
fcmovnb
cmp
aam
sbb
and
sahf
xor
test
inc
mov
ds
pusha
stc
sahf
xor
adc
int
ss
dec
cmp
sub
ror
cmp
mov
test
in
mov
into
aam
and
cwtl
xchg
mov
inc
popa
sub
loop
push
imul
ret
in
es
int
or
imul
adc
fiadds
in
add
loopne
pushf
lret
cmp
insb
xchg
testl
lret
adc
in
sub
jge
vucomiss
adcb
or
cmp
cwtl
jno
pop
jg
sub
out
mov
repz
stc
xor
xchg
clc
add
fdivp
repz
ffree
cwtl
dec
arpl
je
pop
jmp
lret
lea
es
popa
pop
adc
repz
ss
mov
pop
jns
scas
inc
loopne
rolb
out
aas
cld
jp
sbb
repnz
clc
xor
mulb
std
dec
test
jp
adc
jmp
push
mov
cmp
xchg
cld
push
rcll
int3
mov
fdivs
lock
in
mov
sbb
je
pop
daa
mov
insl
and
pop
aam
stc
jns
mov
fidivrs
lods
mov
sub
mov
pop
jecxz
mov
mov
test
test
mov
push
cmc
xchg
fucom
cmp
sbb
xchg
mov
shll
pop
fistps
icebp
stos
mov
dec
out
mov
lock
stos
jp
push
cs
setbe
mov
add
inc
xor
aad
mov
jmp
push
dec
mov
int
inc
call
add
icebp
mov
add
aas
jne
push
lret
mov
add
pop
add
jle
decl
ss
jp
daa
in
or
or
inc
mov
or
xchg
ja
adcb
adc
mov
mov
mov
jne
jmp
inc
out
mov
sahf
bound
jmp
lods
dec
les
xor
sub
pop
ljmp
das
mov
ret
mov
mov
jle
sbb
in
dec
stos
pusha
xor
int3
xchg
mov
insb
incb
lds
inc
xor
popf
iret
aaa
fidivrs
sti
add
xchg
xchg
test
sbb
xor
stos
mov
push
test
add
sbb
ret
xchg
leave
sahf
cmp
push
stc
popa
arpl
lea
dec
xor
add
arpl
cmp
fidivrl
xor
int3
sub
pop
repnz
push
fmulp
mov
scas
shr
or
inc
pop
dec
cmp
pop
movsb
cmp
movsb
fwait
jbe
push
and
lock
fmuls
sub
ror
push
jno
xor
dec
pop
jbe
push
test
jo
loope
scas
mov
popf
lods
test
shrb
xor
push
in
sbb
cli
daa
stc
fs
cmp
cmp
sub
mov
mov
out
lods
movsl
fcoml
cld
lahf
mov
int3
push
xchg
std
pop
sbb
or
jnp
push
pop
out
stc
ret
lahf
js
inc
push
pop
stos
push
in
ficoms
xor
fcoml
sahf
imull
lods
xor
jecxz
das
adc
sbb
inc
pop
lods
xor
sbb
sub
push
and
in
cld
int
mov
sub
xchg
rcrb
call
jp
push
movsl
out
rorl
test
jle
jg
je
mov
and
push
loope
fs
mov
adc
jne
testl
fsub
imul
das
push
pop
xor
dec
mov
push
shrb
push
push
cmc
pop
aam
xor
sbb
loop
mov
adc
nop
or
adc
data16
shrl
jno
out
fsubrp
cli
dec
adc
mov
imul
dec
inc
loopne
push
sub
lahf
stos
adc
xor
repz
and
arpl
jl
lcall
adc
xor
jmp
sarl
aad
jae
nop
jb
ret
inc
or
or
mov
mov
ret
jecxz
stos
rol
int
lea
imul
loopne
imul
push
xchg
pop
fisttpl
das
scas
inc
addr16
mov
aas
gs
jb
dec
test
mov
or
shll
pop
out
std
out
adc
cwtl
xor
dec
sub
xchg
or
cmp
lret
into
stos
add
mov
ret
xchg
xchg
enter
adc
sub
adc
aam
cmp
notb
and
jae
dec
jnp
and
mov
xchg
popa
cmc
mov
lods
es
in
xlat
aam
mov
pusha
xchg
adc
roll
sar
sbbb
push
rclb
xor
js
push
leave
jno
lret
ljmp
cs
out
push
movsb
shrl
out
adc
pop
xchg
repnz
fstl
mov
xor
adc
sub
fisubl
out
shll
test
leave
pop
xchg
daa
out
sbb
addr16
cmc
dec
fwait
xor
sbb
roll
loope
push
ljmp
mov
jns
mov
in
mov
xchg
push
bound
mov
xchg
push
mov
les
aam
cli
cmp
dec
test
sahf
lods
mov
mov
pop
jne
pop
mov
push
loope
jmp
js
cmpsl
subl
add
or
mov
pop
fwait
sbb
and
insl
mov
jnp
mov
jle
jbe
in
fadd
pusha
int3
push
push
fildll
sub
shlb
leave
inc
aas
inc
std
jae
hlt
imul
dec
call
mov
cmp
stos
iret
xor
sbb
ss
sub
scas
or
or
out
in
gs
jns
scas
leave
adc
jnp
arpl
sbb
inc
dec
int
or
inc
add
lock
in
add
ss
pop
and
test
insl
lds
pop
mov
xchg
lret
es
movsb
enter
dec
call
jbe
jp
jge
repnz
xchg
inc
sub
or
mov
jno
pop
jl
mov
dec
xchg
mov
ret
xor
inc
xor
scas
subb
test
mov
inc
mov
imul
js
mov
cmp
iret
loope
cmp
sub
inc
test
scas
xor
or
jecxz
movsb
and
dec
out
push
addr16
incb
xchg
test
pop
sti
adc
sbb
es
and
sti
pop
ljmp
push
movsb
add
pop
sub
mov
shl
mov
and
int3
sbbb
mov
mov
fldenv
push
lock
sbb
add
sbb
pusha
pushf
or
imul
icebp
aas
dec
sbb
pop
sahf
jbe
sbb
outsb
int3
ja
jl
mov
or
js
lret
or
pusha
mov
cmp
mov
xchg
lret
and
push
jle
cmp
andb
popf
push
into
lcall
xor
sti
movq
or
imul
push
mov
divb
data16
outsb
xlat
lods
fstps
mov
das
hlt
out
mov
inc
mov
in
stc
sti
cli
xchg
mov
int
add
inc
mov
adc
fldpi
cmp
les
repz
sub
mov
cmp
dec
ljmp
jg
pushf
xchg
xor
mov
rclb
fsubrs
dec
pushf
mov
inc
add
or
cwtl
jecxz
fistl
shlb
lea
movsb
adc
sti
sub
pop
dec
jg
xor
mov
leave
pop
mov
and
inc
adc
add
mov
jb
and
xor
repnz
imul
jp
std
xchg
mov
cwtl
lock
and
mov
rcl
shrl
out
mov
jl
lock
das
jo
leave
mov
or
and
jns
out
es
daa
insl
repz
enter
inc
cmpsl
imull
mov
or
out
xchg
mov
mov
fwait
int3
cmp
loopne
insb
pop
loopne
hlt
rcl
mov
cltd
pop
xchg
jo
daa
pushf
xorl
xor
call
ljmp
clc
pop
xchg
test
stos
xchg
xor
rcrl
push
in
add
push
pusha
add
out
rorl
dec
mov
mov
icebp
test
pop
dec
aas
test
aas
dec
xchg
mov
add
jg
fwait
fs
xchg
dec
jo
add
cld
sbb
lret
sti
sub
mov
les
pop
cli
in
mov
xchg
cmpsb
outsl
xor
mov
jg
cmp
jne
dec
pushf
mov
mov
out
mov
stc
insb
fisttpl
in
push
jne
sub
mov
outsl
mov
inc
pop
outsl
bound
xlat
jmp
inc
rolb
cmp
fnstsw
or
fisubs
aaa
inc
jp
jne
and
jecxz
mov
jnp
xor
push
in
int
pusha
addr16
ffreep
xchg
xchg
gs
call
jae
ljmp
sbb
add
jns
outsb
stos
inc
mov
and
jb
scas
jo
icebp
push
imul
dec
mov
ret
add
hlt
movsb
push
aaa
arpl
in
fwait
inc
push
fisttpl
push
pop
xor
fisubl
pop
stc
int3
add
cmp
adc
sbb
xor
xor
and
mov
out
sub
mov
pop
movsb
push
inc
ret
push
lcall
jge
fnstcw
sbb
shlb
dec
imul
jno
scas
ja
cli
test
out
add
movsl
js
xor
sahf
lcall
ja
jecxz
subl
push
fiaddl
cmpsb
cmp
push
daa
neg
inc
cmp
es
sub
fwait
sub
pop
pop
jmp
movsl
ljmp
lahf
out
nop
icebp
push
cmp
sbb
stos
sbb
lods
jne
xor
jnp
pop
inc
outsb
js
das
cs
sub
jp
sti
cli
mov
sub
sbb
adc
rol
fisttps
xor
fbstp
push
cmp
repz
mov
xchg
sub
push
pop
fildll
push
lcall
adc
mull
sahf
sbb
incb
mov
cmpl
push
fs
ret
sub
adc
push
ss
and
pop
mov
cmp
adc
fdivr
cmp
mov
or
sub
mov
xor
and
jbe
loop
mov
imul
addr16
test
sub
jnp
lods
rcrb
rolb
cmp
scas
lcall
inc
cmp
test
or
loopne
data16
stos
lahf
adc
lret
in
les
mov
jg
mov
mov
mov
xlat
sbb
sub
lahf
jg
icebp
std
push
pushf
xor
jmp
and
xor
sti
fsubr
inc
push
inc
add
cltd
add
jecxz
dec
pusha
shrl
and
pop
std
rol
orl
cmp
inc
jne
iret
inc
xor
and
mov
xchg
stc
mov
cltd
mov
roll
cmc
imulb
loop
cwtl
stos
in
xor
mov
jbe
inc
and
cld
ljmp
lret
lods
out
mov
lcall
dec
jae
mov
jmp
ret
or
es
rorb
dec
jno
lock
imulb
loopne
and
fnstsw
mov
sub
pop
call
mov
test
and
mov
fbstp
ds
fstpl
out
lret
xchg
dec
sahf
cmp
cmp
push
pop
cmp
mov
rcll
mov
xor
or
mov
xor
sbb
mov
hlt
test
gs
dec
clc
xchg
inc
out
sbb
movsb
inc
dec
or
push
xchg
mov
jmp
rolb
pop
pop
ljmp
scas
xor
ljmp
in
add
popa
mov
or
insb
dec
pop
cmp
jnp
js
loope
cwtl
jp
cltd
push
scas
mov
push
cltd
xchg
popa
lds
adc
bound
xchg
xchg
push
adc
mov
out
rcr
sub
push
cmpb
push
sbb
insb
popa
and
cmc
insb
notl
xchg
jle
or
in
and
pusha
add
adc
xchg
cmp
xor
js,pt
inc
push
stos
push
jae
and
and
mov
mov
repz
mov
mov
rcl
cs
mov
stos
adc
push
jmp
lahf
dec
ror
into
xchg
hlt
out
jnp
arpl
inc
inc
push
pop
cmpsb
or
aaa
dec
pop
inc
sahf
loop
ficoml
repnz
int3
in
insl
and
fidivs
mov
sarb
push
repnz
cmp
shld
rcll
pusha
jbe
sub
sbb
outsl
cmp
or
or
out
and
rcll
push
mov
sub
adc
scas
ds
mov
push
and
jmp
mov
rcr
outsb
js
daa
neg
and
mov
scas
loope
xor
xchg
cmp
je
movsl
icebp
out
add
leave
leave
lahf
push
fadd
push
or
push
fildl
cmpsl
mov
sti
dec
adc
outsb
lods
int3
js
add
push
inc
pop
push
push
adc
fcoml
dec
inc
sub
xor
and
adc
lods
fldl
loop
adc
sbbl
daa
push
testb
int
lods
add
pop
pop
cmp
rcrl
push
sbb
mov
test
movsb
in
mov
cmp
stc
jp
mov
adc
outsl
xchg
cmp
pop
ds
xlat
push
sub
or
xor
imul
into
pusha
insb
mov
xor
sub
imul
sar
add
inc
data16
push
daa
lods
cmpsl
dec
out
int
and
aad
pusha
cli
loope
les
lods
pop
sbb
pop
push
clc
lret
adc
loopne
sahf
cmp
mov
adc
jmp
fcmovnb
pop
xchg
mov
xchg
pop
std
add
sub
mov
pushf
fucom
adc
aad
dec
test
nop
add
ret
dec
pop
xor
dec
aas
jmp
je
jo
jecxz
pop
ffreep
imul
pop
or
pop
mov
in
sbbl
inc
insl
fistl
mov
xchg
inc
cld
out
inc
dec
popf
jg
inc
pop
jecxz
fs
mov
and
mov
nop
or
jo
lret
push
hlt
cwtl
pushw
loop
out
inc
mov
stos
or
mov
lods
push
mov
sbb
lock
sbb
das
sub
mov
testb
push
cmp
ret
xchg
xchg
es
jnp
shrl
insb
adc
cmpsl
cmc
insl
or
cmp
add
jb
mov
jne
bound
push
arpl
shlb
repnz
loope
test
dec
push
push
add
out
fldl
bound
ljmp
ret
pop
call
fsubl
xchg
push
lcall
add
imul
enter
jno
sbb
dec
es
test
out
xchg
pop
inc
inc
in
mov
testl
jle
xchg
add
pop
inc
decl
xchg
cmp
pop
call
jns
nop
daa
in
stos
cmpsl
xchg
inc
push
scas
mov
jb
mov
cmc
mov
ja
jns
dec
xorb
mov
loop
mov
xlat
adc
dec
sarb
sahf
jne
cld
sti
mov
insl
out
add
cmp
xchg
fldenv
inc
out
cmp
or
inc
addr16
sti
mov
pop
jg
and
insb
bound
jp
or
in
fcmovne
pusha
popf
and
xchg
or
pop
pop
jne
in
pusha
jae
mov
push
imul
push
idivl
xchg
repz
sbb
aas
add
scas
ss
push
stc
mov
adc
xlat
iret
or
ret
adc
jp
repz
cmp
adc
inc
pop
push
pusha
or
mov
cltd
inc
sbb
mov
in
xlat
adc
pop
scas
inc
sbb
push
out
lds
mull
mov
lea
cmp
pushf
push
cmp
sub
push
pop
sbb
loop
aaa
scas
xor
lahf
stos
jno,pn
mov
mov
shll
push
imul
xor
push
mov
jno
popf
xchg
jno
out
push
in
xlat
dec
inc
pop
jmp
cmpsb
inc
lods
push
in
mov
call
daa
cmc
pusha
cwtl
cmp
mov
push
jns
mov
ljmp
fs
js
sub
xchg
xor
arpl
pop
xor
bound
pop
xchg
sbb
js
addr16
cmpsl
dec
dec
push
and
push
test
sbbb
outsl
and
xchg
cld
popl
cltd
adcb
mov
sub
in
xchg
call
push
stc
pop
pop
pop
in
jno
mov
lcall
or
mov
clc
sbb
pop
std
sahf
pop
push
test
enter
push
jg
fwait
jl
add
stc
xor
fs
mov
add
nop
cmp
rclb
notl
fildll
xor
testl
or
cwtl
and
inc
or
jnp
scas
xor
jp
outsl
jne
add
loope
jae
psubq
adc
repnz
ja
lods
mov
mov
out
pop
sbb
adc
jne
stos
bound
sti
pop
fsubp
sbb
sbb
jg
xchg
enter
popa
fsts
mov
repz
scas
pop
sbb
push
mov
xchg
leavew
sub
jl
adc
iret
test
cli
ret
cs
add
nop
fidivrs
add
inc
testb
mov
jecxz
add
fstps
dec
lea
mov
faddl
enter
fildl
int
int3
fildl
insl
pop
test
jnp
sbb
inc
data16
push
aas
loope
pop
jb
mov
mov
scas
cmpsl
xchg
rcr
push
movsl
divb
aas
xchg
cmpsb
rolb
cwtl
nop
test
icebp
push
push
cld
in
mov
mov
mov
add
or
pop
jge
in
xchg
mov
rorl
andl
test
push
dec
addr16
sahf
cmpsl
hlt
mov
mov
push
out
xlat
lods
sar
dec
mov
add
xlat
and
mov
inc
pop
cmp
orb
jge
test
add
push
les
adc
enter
mov
rcl
jge
pop
xchg
jmp
stos
pusha
mov
pop
xchg
push
out
rcll
cs
add
aad
mov
adc
inc
pop
mov
cli
dec
xchg
dec
int
test
pop
popl
jo
inc
inc
jl
pop
or
adc
es
xor
pushf
add
dec
sbb
ljmp
xor
and
xor
or
push
cmp
sbb
testb
jne
in
inc
xchg
fidivrl
or
test
sti
fdivs
in
bound
push
or
sub
and
ret
sub
inc
jbe
addr16
and
and
into
dec
insb
int
sahf
jnp
lods
adc
jae
in
clc
jp
cmp
mov
xchg
ficomps
pop
lods
pop
mov
jae
arpl
push
ret
xchg
ds
mov
ss
stos
fwait
test
sbb
xchg
shrl
pushf
data16
cltd
or
bound
iret
push
xchg
leave
icebp
mov
inc
arpl
inc
pop
mov
icebp
push
pushf
iret
jl
mov
test
int3
ret
pop
fucomp
and
stc
roll
jae
push
mov
loopne
push
cmp
out
lret
movsb
hlt
mov
and
cmpsl
jo
pop
in
sbb
sbb
or
js
jl
cli
mov
inc
loop
push
dec
aad
xor
scas
inc
aam
cld
jle
and
test
test
mov
roll
adc
in
fwait
dec
add
daa
hlt
imul
sub
mov
movsb
ds
push
fbld
stc
stos
lahf
dec
jle
push
mov
mov
add
pop
lods
xor
pop
lcall
popa
in
out
jnp
pop
mov
push
add
sub
jb
rclb
mov
bound
mov
cmc
js
outsl
pop
sub
aad
push
cld
and
int
je
sub
inc
movb
ljmp
lret
popf
pop
xchg
sbb
mov
sahf
add
mov
fcmove
jg
clc
out
mov
push
mov
mull
add
mov
sub
std
fcmovu
lea
ret
notl
pop
lret
mov
mov
and
cmpsb
lahf
mov
into
es
push
cmc
inc
loopne
xor
push
outsl
push
sahf
inc
loop
jae
imul
mov
inc
data16
cmp
mov
out
ds
dec
pop
cli
inc
stos
mov
ret
in
sbbb
sti
mov
jmp
ds
add
add
fldt
adc
sahf
push
fld
mov
movsl
repz
popf
or
fisttps
lea
repnz
lods
adc
push
and
jmp
scas
je
dec
jge
aad
ffree
nop
mov
out
inc
dec
xchg
dec
sub
adc
cld
fdivrl
push
call
pop
jge
pop
push
push
mov
dec
mov
add
push
inc
or
lods
inc
orl
jb
or
mov
shrl
fildll
std
xor
fsubl
movsl
mov
and
cld
adc
int
aas
ficompl
dec
lock
pop
jle
in
popf
cmp
stc
cmc
out
in
aad
pushf
xor
ret
mov
lods
es
les
loope
dec
bound
cmpsl
repz
mov
push
mov
cmpl
imull
pop
pop
or
rcrb
sbb
push
mov
mov
icebp
mov
push
fs
jnp
jle
add
sbb
shrl
icebp
mov
stos
dec
bound
out
add
pusha
xchg
push
fs
push
push
jge
mov
in
or
rcrb
xor
push
andl
shl
dec
hlt
adc
test
fst
xchg
fdivrp
inc
adc
and
out
clc
fwait
and
movsl
add
push
cmp
lcall
das
in
hlt
bound
out
cmpb
adc
ja
mov
push
outsb
pop
mov
mov
xchg
dec
cwtl
pop
insl
jne
pop
int3
mov
mov
lcall
and
outsl
leave
loop
jns
scas
out
arpl
or
clc
addr16
iret
or
mov
and
jae
cmp
jnp
pop
dec
jle
xchg
fucom
and
imul
movl
jbe
in
push
imul
mov
cs
push
jne
push
stos
push
fucomi
xchg
mov
mov
dec
scas
cld
scas
or
jno
adc
hlt
ss
adc
inc
leave
push
bnd
jae
addl
jb
outsb
loop
push
sbb
fisubrl
and
sbb
int3
lods
fsubrp
pop
or
sub
pushf
mov
lds
xchg
mov
mov
xor
lcall
jbe
adc
lcall
add
or
pop
push
jl
push
jl
mov
decb
xor
mov
js
and
cld
fsubrl
ret
mov
test
andb
cmpsb
inc
xchg
lcall
jae
daa
repz
cmp
and
jae
mov
cmp
cli
push
ds
shll
lahf
imul
push
xchg
cmp
xor
push
call
lcall
and
hlt
test
cmp
fcoml
push
sub
cmp
clc
rcll
cmp
lods
sub
mov
xor
cmpl
push
lcall
daa
scas
movsb
sub
ss
fildl
add
mov
fstpl
cmp
cld
sahf
movsl
scas
cmpsl
test
xchg
xor
adc
mov
and
sbbb
mov
aam
dec
inc
xor
and
lret
and
mov
push
or
adc
sbb
cmc
or
xor
fsubrl
loop
jno
imul
push
add
sarl
xchg
lret
pop
fisttpl
shlb
test
fld
inc
in
in
mov
or
popa
shrb
sub
xchg
pop
shl
movsl
adc
stc
push
les
sbb
mov
stos
cld
sbb
enter
adc
out
sub
sub
adc
pop
pushf
fisubs
fucomi
mov
pop
add
stos
push
outsl
nop
xchg
gs
dec
ja
ret
inc
bound
dec
movsb
mov
je
gs
cli
jp
lea
cmp
call
fidivrl
pop
leave
sub
dec
mov
sarl
pop
out
cld
inc
inc
xchg
cli
adc
inc
es
pop
aad
jb
pushf
jbe
in
js
and
out
or
jge
data16
aaa
adc
fldcw
cwtl
xchg
or
and
pop
mov
mov
cld
cmp
lret
push
lock
es
lret
pop
loop
mov
add
aam
sub
cmp
insl
jbe
fisttps
imul
popa
jg
inc
lods
test
mov
icebp
hlt
mov
mov
lock
jnp
xchg
shr
mov
enter
jne
dec
sub
dec
insb
scas
or
mov
ret
add
ljmp
test
or
data16
and
sub
hlt
comiss
fisttps
mov
mov
mov
add
jge
pop
inc
addr16
ss
xchg
test
sbb
scas
movsl
inc
stos
ja
or
pushf
cltd
fwait
dec
and
add
cmpl
out
xor
mov
in
xchg
mov
sub
mov
es
mov
je
in
dec
pop
xor
mov
and
push
dec
jnp
test
and
mov
sbb
bound
xor
xchg
cmp
orl
fucom
enter
rcr
xchg
or
inc
addr16
push
jp
push
dec
and
sub
jnp
aam
jle
test
add
fbld
dec
xchg
test
lret
fdivs
mov
push
jge
loopne
mov
mov
mov
xchg
clc
jae
sbb
mov
iret
scas
pop
mov
push
into
in
adc
fdivr
iret
es
ret
jp
fbstp
cmp
arpl
in
sub
and
lds
int3
jo
and
arpl
mov
call
pop
cmp
jge
aam
fld
test
ret
xchg
xchg
movsb
or
push
and
not
jge
mov
sbb
mov
aaa
add
rorl
js
xlat
jno
pop
std
jl
push
rorl
pop
push
adc
stos
xor
gs
scas
mov
sbb
push
sti
repnz
dec
dec
addl
mulb
imul
daa
repnz
clc
cmp
fnstenv
cmp
mov
jmp
xor
xor
push
pop
call
faddl
mov
xor
and
pop
or
pop
pop
fs
push
in
or
loope
fdivrl
sub
cwtl
rcrl
rcrb
sbb
pop
xchg
pop
adcb
cltd
mov
dec
xor
cmpsb
jg
push
add
int
lret
data16
cli
mov
lcall
xlat
mov
sbbb
stos
add
jecxz
adcb
jg
mov
nop
stc
push
cwtl
scas
fs
js
ss
mov
cmp
add
mov
shll
test
popa
mov
cmp
and
cmp
in
xchg
shl
shrb
xor
dec
outsl
adc
push
loop
mov
dec
adc
shlb
jns
data16
mov
test
cli
lods
cmp
in
pop
das
jno
adc
xor
test
gs
push
push
loopne
dec
mov
adc
inc
fnstenv
cmp
ds
mov
fwait
jge
add
mov
cmp
aad
movsb
xchg
fstps
bound
adc
inc
aad
ret
gs
outsl
push
inc
dec
stos
incb
shlb
sbb
popf
jecxz
nop
cs
loop
inc
lea
adcb
jl
or
mov
mov
inc
sbb
imul
cmpl
mov
sbb
push
adc
ror
ret
push
in
std
cmp
cwtl
push
test
jecxz
push
mov
insl
icebp
jbe
push
lret
xlat
gs
mov
or
das
stos
and
mov
rorb
aam
jl
ret
sarl
and
mov
enter
dec
cmpsl
icebp
mov
inc
popa
xchg
push
mov
mov
insl
dec
gs
xorb
pop
lcall
cltd
mov
mov
push
push
or
xchg
ja
icebp
lcall
ja
add
flds
pop
xchg
lds
stos
sub
jns
xchg
jecxz
fcoml
push
or
add
ret
arpl
outsl
inc
mov
add
pop
dec
ret
test
and
xchg
xor
inc
sub
out
fwait
jle
push
push
sbb
lcall
incl
or
rorb
jecxz
insl
fwait
push
mov
loope
jge
xor
shll
adc
xchg
xchg
xor
pop
dec
cld
jne
dec
mov
dec
pop
sub
add
sub
mov
cli
adcl
inc
sub
aaa
mov
jp,pt
int3
push
and
insb
push
sbb
insb
push
push
jle
mov
in
cmpsl
mov
filds
cmpsb
cwtl
pop
push
push
push
inc
mov
push
jae
inc
mov
popf
pop
pop
mov
repz
stos
hlt
mov
mov
fisttps
loopne
ret
push
adc
xlat
iretw
test
lret
ret
or
push
out
hlt
cmp
arpl
mov
or
sahf
sahf
inc
inc
sbb
jl
aad
mov
inc
cmp
pop
push
lock
dec
aas
lds
push
rol
sub
fsts
movsb
xchg
and
je
pop
jbe
dec
push
jge
cmc
jae
mov
loop
ret
imul
jno
xchg
jl
loop
dec
mov
xchg
xor
shlb
jmp
add
sbb
cmovae
inc
mov
push
rorb
enter
daa
icebp
pushf
xor
loope
pushf
add
sbb
or
movsl
adc
pop
and
inc
inc
lahf
test
insb
or
aas
sub
add
lea
mov
rcrl
lods
into
js
enter
leave
loope
mov
hlt
push
add
mov
ret
outsb
sti
sahf
pop
adc
repz
mov
mov
and
sbb
and
das
jne
cmc
int3
push
sub
or
lcall
inc
mov
xor
xchg
dec
lahf
sahf
jmp
pop
test
roll
add
les
stc
or
mov
adc
and
cmp
mov
lret
mov
scas
jbe
cmp
cmp
daa
mov
into
iret
decl
xchg
lret
ja
mov
icebp
jmp
fisubrl
out
adc
into
and
fistpll
lods
sub
and
rcrb
mov
mov
ret
jne
sti
ret
mov
cmpsl
shlb
loopne
in
pop
adc
mov
inc
xor
lret
push
push
xchg
jg
xor
jge,pt
xlat
xchg
addr16
sub
out
pushf
xor
add
andb
je
aad
int
nop
dec
pop
mov
inc
mov
int3
je
add
in
mov
call
fadds
pop
das
flds
jns
mov
pop
xor
push
inc
lahf
movsl
daa
inc
shlb
aas
pop
adc
mov
fildl
mov
std
daa
stos
mov
mov
xchg
orl
xchg
fsubrs
inc
pop
mov
mov
ja
insl
fldt
mov
leave
and
aam
push
adc
rolb
push
faddl
insl
inc
cmp
push
xor
mov
lods
imul
lock
mov
nop
or
mov
mov
sar
ficoml
test
mov
mov
jae
fldl
clc
sub
jno
ret
ljmp
fstps
xor
sub
cmpsl
xchg
sub
push
push
loope
or
add
mov
xor
jge
mov
push
or
dec
sub
test
movsl
filds
cmp
jns
fadds
xchg
je
fwait
lods
imul
add
shrl
xor
or
jns
lret
cld
in
fcomp
xchg
iret
cmp
mov
inc
out
mov
pushf
insl
inc
ja
xchg
dec
inc
mov
mov
int
mov
add
add
fimuls
pusha
mov
jmp
shlb
es
out
or
sub
xor
addr16
jmp
jp
sti
or
xchg
outsb
or
sbb
or
jle
scas
xchg
cmp
movsb
sbb
xchg
sub
add
fcmovnb
inc
xchg
mov
and
popa
jne
popf
jg,pn
mov
xor
stos
addr16
out
cmpsb
and
sbb
xor
clc
mov
and
idivl
mov
dec
sti
ret
and
int
sbb
mov
andl
insl
inc
addr16
jmp
push
cwtl
fimull
pop
sbb
outsb
ret
in
cltd
sub
outsb
rcr
clc
mov
sub
cltd
cmp
inc
out
push
ret
popa
cmc
jbe
adc
jge
pop
rcrl
imul
aaa
andb
pop
dec
arpl
aam
jl
cmpl
xor
fisubrl
iret
jo
xchg
mov
js
popa
and
test
jecxz
push
inc
sub
iret
into
pop
in
aaa
sbb
enter
daa
lock
cmp
push
scas
loope
andl
mov
fstpt
daa
cmp
and
jp
imul
lahf
enter
jmp
ficompl
jbe
add
mov
xor
mov
xchg
pop
pop
mov
js
adc
loop
adc
and
outsb
push
pop
mov
mov
outsb
pop
pusha
jne
into
adc
dec
sbb
fildl
dec
xchg
and
cmp
push
or
cmpsl
int
mov
sub
std
leave
pop
pop
js
lcall
mov
dec
setg
lds
push
test
movsb
xor
je
cmpsl
mov
loop
stc
fldenv
and
adc
dec
cmp
push
or
inc
adc
fdivrs
daa
notl
push
lret
mov
cmp
cld
mov
cmp
insb
cmc
pop
mov
rolb
pop
loop
mov
mov
add
xchg
data16
mov
mov
sbb
adc
jge
cs
cmpsl
sti
jb
push
dec
dec
gs
xchg
les
push
sub
adc
fldenvs
out
repz
dec
xchg
inc
mov
sbb
jns
dec
xlat
shll
inc
sub
repz
push
bound
push
jmp
adc
xlat
mov
clc
nop
and
jg
inc
ficomps
je
dec
icebp
jecxz
in
cmc
call
cmpsl
or
dec
xchg
push
push
pop
loop
pop
subl
into
mov
xlat
ror
es
mov
in
mov
test
mov
dec
add
push
xor
add
into
rcrb
popa
ror
mov
jo
and
mov
mov
pop
inc
mov
xchg
jo
xor
lock
push
pop
subl
enter
icebp
test
es
push
cmp
jne
dec
dec
divb
cmpsl
out
rcl
mov
in
lods
jmp
pop
sarl
jg
mov
fadds
int3
cltd
adc
movsl
test
add
xchg
and
stos
clc
addr16
cmp
ljmp
inc
pop
ljmp
out
cld
xchg
jno
or
mov
pop
mov
or
inc
daa
xor
fsubp
mov
or
dec
nop
sbb
xchg
pop
push
inc
outsl
add
or
sahf
jb
fdivl
pop
push
pusha
push
imul
stos
sub
ret
mov
pusha
jns
nop
into
in
jbe
xchg
push
push
mov
addr16
mov
push
mov
ja
jecxz
dec
xor
sub
negb
jno
push
dec
and
lret
jne
sarl
mov
dec
dec
out
aas
pop
and
jmp
fwait
add
mov
test
push
sub
sub
sub
cmpsl
test
sub
mov
insb
in
jnp
int
jle
mov
dec
pusha
aas
push
pop
fistpll
das
jno
mov
out
jae
sub
push
and
das
popf
push
mov
mov
jno
or
std
lods
and
xor
flds
adc
mov
ret
icebp
leave
inc
cmp
cld
shr
arpl
fwait
push
or
xchg
call
fidivrl
mov
add
xchg
int3
pop
bound
pop
enter
sub
xchg
sar
xchg
jg
lods
cmp
cmp
and
jge
push
imul
inc
fistpll
push
mov
jno
inc
xchg
jl
notl
insl
jb
push
mov
lods
add
popf
test
movq
test
scas
mov
inc
mov
lret
and
push
dec
mov
dec
das
out
daa
out
push
jge
sbb
iret
mov
pop
aaa
lock
sub
ds
mov
movsl
and
scas
and
xor
push
rorb
stc
sbb
fdivs
movsb
enter
sub
js
icebp
mov
push
or
fdivrl
mov
in
adc
xlat
push
jnp
xchg
or
mov
ret
mov
out
or
sar
xchg
push
or
movsl
int
jnp
sub
mov
xlat
and
mov
mov
ja
hlt
loopne
sahf
xor
leave
andb
jg
int
mov
xor
stc
jnp
xor
push
adc
xor
xchg
arpl
fdivs
lret
subl
lods
dec
stos
xor
mov
cmp
movsl
mov
test
mov
cmc
and
xchg
nop
outsl
scas
test
outsl
movsb
imul
out
add
cmovg
les
sahf
or
stos
loope
out
xchg
inc
cli
inc
aam
mov
cltd
jle
sti
and
das
in
mov
gs
jae
loopne
pop
add
jl
adc
repnz
dec
scas
les
or
xchg
add
arpl
xlat
adc
fists
test
mov
fisubrs
cmp
aad
or
movsl
nop
dec
repz
pop
inc
scas
xor
mov
sub
jmp
jp
mov
adc
popf
jg
xchg
sarb
mov
pop
pop
jp
sub
loopne
inc
or
pushf
aas
fwait
pop
mov
test
lahf
nop
and
insb
mov
testb
std
jne
imul
xor
sti
dec
cmp
and
repz
cwtl
sti
lock
mov
mov
mov
add
xchg
pusha
xchg
ret
add
es
inc
insl
adc
cmpsl
out
xor
mov
fildl
imul
cmpsb
sbb
push
xchg
pop
pop
imull
sarb
cltd
test
mov
mov
mov
push
push
dec
xor
clc
mov
test
ljmp
sbb
stos
cli
push
push
out
repnz
adc
xchg
xor
add
inc
sti
or
shlb
push
jmp
or
rorb
cmpsb
test
fs
xchg
dec
loopne
mov
lea
pushf
add
add
add
aaa
cmp
mov
jnp
push
stc
jbe
jae
jbe
insl
fisttpl
mov
adc
loope
daa
or
mov
loopne
and
jne
sub
out
push
das
daa
bound
out
lret
loopne
addl
aam
inc
sub
sub
dec
addr16
out
jp
jbe
and
push
jno
dec
and
js
incl
cli
pusha
fisubl
xchg
rol
adc
jno
inc
lods
arpl
jae
cmp
out
sbb
shr
call
stos
dec
pop
or
loopne
dec
imul
scas
jmp
sub
adc
pop
iret
mov
adc
hlt
inc
sahf
shlb
inc
nop
inc
insl
mov
in
jle
and
out
std
pusha
add
mov
inc
aad
pop
mul
out
fmulp
pop
fcmovb
lock
rclb
cmp
shlb
and
jnp
push
popa
and
jbe
add
or
aaa
add
loop
inc
jge
jno
fnstenv
jge
popa
dec
fdivl
mov
sbb
mov
and
repz
jns
movl
cmp
in
add
push
jge
out
jae
cmp
jns
out
xchg
add
cmp
aad
movsl
sub
and
lds
das
cwtl
sbb
xchg
out
adc
imul
xor
mov
lds
divb
pop
pusha
shll
or
fcoms
out
inc
fsubrl
ljmp
mov
mov
fiaddl
sbb
xor
cmp
xlat
mov
int
and
add
push
push
lahf
int
sub
pop
push
push
pop
lcall
aaa
mov
or
and
insb
sahf
aam
jb
repnz
clc
cmpb
mov
sbb
xor
adc
xor
cmp
out
xor
lret
outsl
xor
and
sbb
cmc
in
cmp
mov
outsl
mov
loop
jo
imul
out
cmp
mov
in
push
adc
lods
fildll
sub
int
push
cli
jns
clc
mov
add
in
rcrb
sar
adc
gs
lcall
outsb
test
adc
mov
mov
sbb
out
xchg
dec
push
and
adc
ret
add
cli
subl
or
out
dec
push
fs
sarl
je
loop
jecxz
pop
rol
out
cltd
pop
lea
pop
call
push
xor
pop
dec
push
test
fisttpl
or
inc
and
aas
cmp
jb
je
mov
jl
jle
or
mov
sbb
out
ds
mov
rcll
icebp
shl
movsl
cld
adc
lret
xchg
pop
push
mov
cmp
lock
int3
das
es
xor
sub
ljmp
es
jmp
stc
xchg
test
cmpsl
in
adc
push
popa
repnz
shrb
nop
mov
lods
sbb
mov
push
pop
xchg
rorb
rcll
jg
mov
inc
mov
fnstsw
adc
jg
or
shll
andb
jmp
dec
mov
lcall
push
jb
pop
inc
dec
add
sbb
or
push
jmp
mov
cvtdq2ps
dec
pop
jne
test
mov
xchg
sbb
push
inc
popf
imul
cmp
jecxz
cmpsb
push
pushf
add
or
incl
nop
or
icebp
push
push
jns
push
data16
scas
mov
mov
add
mov
int
aas
ja
daa
ret
dec
sbb
mov
jno
mov
dec
dec
imul
pop
jne
loop
mov
mov
std
add
bound
gs
jmp
xor
out
les
or
sub
dec
stos
enter
dec
and
mov
mov
jle
pop
int3
in
mov
pusha
jne
data16
lahf
xor
sub
xor
jae
and
stos
mov
in
or
adcl
movsl
test
mov
imul
outsb
scas
dec
rclb
enter
aaa
iret
add
je
xor
in
arpl
mov
sbb
fcomps
insb
push
adc
decl
int3
das
sbb
pop
es
fisubrs
pop
lds
mov
mov
and
repnz
gs
sub
sbb
inc
or
and
mov
pop
pop
dec
dec
cmp
push
orl
xor
sub
adc
adc
sbb
test
inc
out
push
inc
xlat
and
in
dec
adc
inc
add
imul
mov
scas
sub
movsl
fwait
cmp
cmpl
xor
and
lahf
and
and
sbb
sti
add
jno,pn
inc
loop
jp
xchg
pop
int
fstpt
imul
push
dec
sub
dec
icebp
fcoml
sbb
adc
pop
gs
cmp
imul
inc
add
and
dec
sub
adc
int
mov
scas
pop
aad
aad
cs
shr
xor
or
ja
stc
test
das
adcb
sbb
jmp
push
std
adc
add
sbb
cmp
fsubrs
dec
out
lret
cmp
xchg
push
adc
or
aaa
mov
xor
in
outsl
insl
xor
loop
cmpsb
shrl
adc
xchg
dec
xchg
add
jae
cwtd
roll
lods
xchg
and
int3
push
jle
lods
push
mov
outsl
xlat
sahf
sti
jg
sub
xor
gs
and
popa
pop
fdivs
lea
xchg
mov
dec
call
aaa
or
xlat
mov
mov
pushf
loopne
and
add
add
mov
sub
jbe
dec
outsb
pushf
je,pn
sub
jecxz
je
icebp
jmp
xor
inc
pop
push
aam
cs
sti
ret
loop
outsb
xchg
dec
and
scas
or
sbb
mov
mov
aas
fnstcw
mov
pop
movsb
cmc
rcll
adc
lret
cmpsb
xor
ret
push
scas
cwtl
stc
xchg
divl
xor
push
icebp
test
stc
push
mov
mov
inc
jmp
das
add
ret
sbb
movsl
hlt
sub
sub
ffree
sahf
lret
sbb
loopne
aas
mov
cmpsl
in
jl
mov
or
ljmp
movsl
lods
mov
mov
add
xor
inc
jo
mov
das
test
adc
push
fdiv
fcmovu
loopne
cltd
clc
sbb
mov
scas
sti
rorl
push
fcoms
mov
nop
push
push
dec
aad
punpckhwd
mov
stc
and
loope
imul
mov
adc
push
dec
test
jae
xchg
push
sbb
push
jns
xor
loopne
adcb
imul
dec
add
and
addl
jns
mov
in
dec
aam
or
repnz
mov
ja
push
xchg
dec
or
inc
sbb
mov
rolb
mov
mov
lods
ret
xchg
cld
fwait
push
andl
out
aas
sbb
push
data16
repz
jp
shlb
and
stos
in
inc
sub
in
lock
adc
fistps
and
pop
fs
xor
mov
push
insl
push
adc
inc
aas
dec
push
test
xor
test
adc
mov
push
adc
and
ret
mov
test
cs
fdivrl
inc
jae
loope
aas
adc
mov
ficoml
add
dec
mov
sbb
ss
push
stos
ficoms
jg
mov
mov
js
cmp
push
lods
push
push
lea
rorl
mov
sbb
fidivl
jle
mov
sub
jno
outsl
pop
jl
dec
repnz
mov
mov
scas
jo
sub
hlt
in
and
mov
popf
push
ud2
pop
inc
data16
sbb
shll
pop
enter
daa
in
inc
js
mov
jle
adc
popa
sub
sbb
ds
cmc
les
xlat
cmpsb
jg
inc
cmpsl
cmp
or
sbb
adc
test
xor
aad
cmp
lock
add
push
jl
push
mov
mov
sub
imull
in
jg
ljmp
cwtl
cmp
add
mov
lock
mov
mov
and
fsubp
push
adc
inc
int
das
repz
push
inc
lcall
mov
mov
push
sbb
test
test
xlat
fldl
lock
stc
mov
xchg
iret
adc
and
ss
sub
loope
jns
cmp
lret
inc
xor
jg
cwtl
rorb
fdivp
into
ds
cmc
jp
and
ds
outsl
dec
or
jmp
adc
call
data16
dec
lods
lods
push
add
lret
sub
mov
fiaddl
sti
cmp
push
scas
sbb
loopne
and
pop
lods
or
adc
jns
jg
test
enter
fs
repnz
dec
imul
gs
xlat
int
fisubrl
in
sub
adc
pop
jg
sub
or
arpl
aad
xlat
icebp
nop
xchg
cmpsb
lret
dec
adc
inc
out
int3
dec
in
adc
adc
hlt
lods
lock
repnz
ret
push
loope
pop
scas
roll
addl
pushf
pop
arpl
pop
inc
inc
daa
stc
inc
pop
cmp
aas
js
lret
aaa
push
mov
xchg
mov
stc
testb
clc
std
push
aaa
cwtl
mov
xchg
mov
jecxz
mov
or
subb
lret
jno
testl
xor
jbe
in
add
pushf
add
aam
cmp
ret
sub
mov
insl
dec
fisttpll
lret
jmp
mov
popa
and
subl
sub
mov
lods
mov
push
inc
sub
cltd
in
iret
mov
daa
pop
push
lahf
je
fldl
jle
clc
push
dec
and
ljmp
mov
imulb
sbb
xchg
lea
nop
push
sub
mov
add
cmp
xor
stos
cmpsl
mov
adc
pusha
scas
test
fnstcw
xchg
mov
sbb
decl
mov
fwait
cwtl
push
push
in
cmpsl
add
inc
push
cmp
ja
xor
or
in
cmp
mov
jo
mov
inc
xchg
mov
lods
jp
dec
add
push
mov
cmp
mov
sub
cli
daa
jne
test
out
mov
cmp
jmp
ja
xor
dec
out
das
and
or
addr16
mov
mov
insb
nop
cmpsb
gs
jl
jle
in
or
pop
xchg
jmp
or
fistpll
or
pop
fwait
mov
shlb
daa
jne
xor
in
mov
insl
mov
cmp
loope
sbb
scas
adc
push
push
mov
fmul
mov
adc
and
jp
jmp
rolb
push
adc
and
shll
int3
int3
add
xor
fidivs
push
shlb
mov
lret
or
dec
dec
call
push
dec
shll
iret
inc
jge
and
aaa
cmp
mov
insb
jo
jl
psrlq
adc
push
dec
arpl
xor
loop
int
rol
mov
test
fidivrl
inc
cmc
pusha
repz
pop
inc
add
mov
sub
jmp
jle
out
psraw
and
sub
fidivrs
xchg
lahf
cmp
shl
int3
movsl
ds
and
push
lahf
arpl
call
sbb
jbe
xor
or
add
pop
sbb
icebp
xor
pop
sbb
pusha
in
push
fsubrl
iret
sub
jae
adc
adc
cmp
adcb
fidivs
mov
push
pop
test
pop
mov
sub
and
xchg
mov
rcll
int3
mov
mov
pop
sahf
mov
pop
jae
int
push
jg
xchg
pop
mov
xchg
fisubrl
mov
cmpb
mov
cmp
fsubs
sbb
testl
lods
xor
or
or
test
and
jl
cltd
xchg
outsl
sub
and
lahf
lods
out
mov
inc
adc
add
push
data16
mov
lods
xchg
push
fmull
lret
cli
adc
sbb
xchg
notl
inc
xorb
jns
push
gs
addr16
js
test
inc
and
xor
lods
fnstenv
dec
adc
xor
sbb
mov
loope
sub
fcoms
add
nop
and
cs
aad
cmp
nop
insb
and
dec
outsl
fldcw
dec
pop
mov
je
mov
jecxz
js
mul
push
lea
mov
sar
ljmp
cmp
dec
sti
or
fistpl
ret
and
sbb
je
test
pop
sub
mov
sbb
rcll
push
sarl
adc
pop
mov
mov
mov
repnz
push
mov
lret
loopne
adc
mov
js
lock
icebp
outsb
das
ret
cmc
cmp
xchg
mov
aam
shll
mov
aaa
jmp
dec
xor
cmp
aaa
pop
mov
mov
bound
adc
jae
daa
rolb
aam
test
xorb
push
inc
mov
xchg
cmp
daa
ljmp
ja
inc
mov
sbb
jle
mov
push
add
lcall
aam
or
xor
mov
mov
sbb
and
jl
scas
xchg
xor
sbb
movsl
inc
bound
or
fsubrl
push
pop
fiadds
pop
xor
fidivs
xor
push
jns
add
in
jnp
xchg
test
aad
mov
inc
mov
dec
repz
stos
mov
pop
xchg
mov
pushf
out
dec
xchg
sbb
and
jl
out
lcall
jmp
xchg
cmpsl
sub
loopne
fsubrs
adc
andl
ss
fistl
insb
sti
into
cmc
jnp
adc
jle
mov
pusha
inc
cmpsl
test
pop
ret
sbb
push
inc
fstps
and
repz
sbb
fistpll
lods
inc
pop
stos
sbb
adc
jns
imul
mov
adc
ljmp
adc
leave
xchg
mov
dec
arpl
ret
jne
jns
sbb
sti
pusha
inc
xchg
pusha
fidivrl
push
and
lock
mov
push
jb
lds
rolb
cmc
repnz
push
pushf
cmp
insb
sbb
roll
jbe
push
xlat
jge
ficomps
int
pop
aaa
cld
or
inc
xchg
push
jl
test
dec
cwtl
and
sub
jno
ja
mov
jmp
add
out
lea
test
movsl
inc
nop
inc
test
sub
mov
pushf
xor
ljmp
loope
loop
sub
xorb
inc
dec
ds
in
movsl
inc
popl
sbbb
sbb
adc
add
cwtl
pop
xor
nop
or
jnp
js
hlt
int
pop
mov
rclb
iret
fcoml
adc
scas
adc
mov
mov
js
mov
lock
adc
subb
icebp
mov
xchg
nop
and
enter
aam
int
arpl
mov
inc
sti
lcall
dec
mov
repnz
fbstp
sahf
pusha
adc
pusha
sub
fwait
jg
emms
mov
fmull
push
push
fs
adc
and
ss
iret
cmp
fisttpl
movsl
lret
mov
sbb
cmp
pop
in
aam
pop
into
add
jnp
or
hlt
imul
outsl
or
inc
loop
jg
imul
popa
data16
shrb
inc
inc
out
enter
xchg
adc
mov
jbe
mov
pushf
sbb
gs
loopne
pop
negl
adc
push
pop
insb
fldln2
loop
faddp
lock
mov
lods
sub
cmp
stos
cmp
dec
ret
loope
roll
xor
shrb
sub
leave
aad
pop
nop
inc
mov
dec
into
pop
or
jecxz
dec
shll
jecxz
pusha
lret
xchg
in
rclb
push
mov
popa
xorl
mov
lea
pop
stos
inc
push
dec
out
inc
jp
aas
mov
cmp
dec
lret
pop
jp
and
in
jns
inc
notb
xchg
jl
std
mov
and
mov
add
mov
lea
cs
xorl
dec
cltd
cmpsl
mov
test
imul
mov
in
mov
mov
sbb
dec
push
jno
mov
mov
dec
xor
mov
dec
scas
sbb
rcll
mov
leave
add
pop
xchg
cmp
rcrb
dec
cltd
pop
jl
test
call
dec
push
and
in
sti
clc
leave
int3
test
jnp
sbb
movntq
cs
pop
in
jp
stos
movsl
out
dec
out
loope
lea
xor
xchg
lea
xor
or
imul
dec
xacquire
jo
cli
fimull
xchg
test
push
or
pop
fwait
idiv
ret
push
xor
sbb
jbe
cmp
cmp
mov
pop
xchg
clc
or
cwtl
mov
mov
fdivrp
dec
out
sub
test
lea
jbe
mov
in
mov
mov
notb
bound
jmp
pop
sub
bswap
sub
sub
jp
sub
divb
xor
dec
insb
lretw
jnp
imul
scas
dec
adc
push
sub
pop
fistpll
sahf
xchg
out
lods
fistps
mov
mov
push
rclb
mov
mov
aas
jp
mov
jmp
leave
stos
mov
xchg
aaa
jmp
imul
push
dec
xchg
iret
jge
mov
xchg
ret
push
xchg
int
mov
dec
dec
inc
jl
in
or
jbe
outsl
inc
adc
xor
insl
push
sbb
cmp
int3
fstpt
pop
loop
add
cli
rcrb
bnd
popf
cmp
dec
xchg
push
in
sub
jbe
inc
sub
cli
in
sbb
lahf
inc
or
mov
adc
xor
push
jge
sahf
jo
cs
xchg
mov
and
push
in
jo
pop
inc
adc
cmpsb
cmp
mov
test
mov
cmp
dec
mov
sub
jae
cmp
lock
ds
int3
or
test
rcrb
fcmovb
sbb
or
lret
xor
inc
xchg
pop
imul
test
push
mov
test
sub
pop
jl
mov
jo
mov
roll
mov
lods
and
xchg
lret
call
scas
pop
rorl
ja
cli
fadd
inc
adc
mov
fistps
push
clc
xchg
xchg
xchg
adc
add
das
jg
mov
mov
xor
fs
jle
and
and
daa
add
in
xchg
xchg
movsl
testl
test
jg
mov
into
out
je
iret
rcrb
jp
outsl
jmp
test
mov
or
add
cmp
popa
dec
lods
bound
mov
out
pop
mov
js
movsl
mov
sbb
sti
cmp
jo
mov
cmp
loopne
lcall
call
jmp
out
adc
roll
lea
push
daa
das
xlat
mov
mov
adc
jae
jmp
icebp
or
mov
scas
nop
and
sub
outsl
gs
dec
pop
lret
je
xchg
in
nop
mov
lea
sub
call
ror
xor
or
cmp
fstpt
int3
pop
dec
jmp
test
cmp
aas
push
cmpsl
xchg
jb
popa
sub
xor
cmpsb
rcll
stos
jmp
pop
aas
test
mov
fstpt
cld
fisttpl
cld
jmp
push
popf
mov
push
xchg
mov
aas
add
inc
out
adc
mov
addl
ret
fiaddl
es
xlat
dec
sub
cmpsl
call
xor
popa
gs
lods
fwait
mov
mov
inc
and
cmc
je
pop
mov
shrb
enter
or
mov
rclb
mov
fnstsw
clc
add
push
xchg
mov
or
shr
sub
xor
inc
int3
ret
xchg
bound
push
mov
dec
xor
inc
push
mov
dec
xor
cmp
xchg
inc
stos
dec
popa
out
fisubrl
adc
inc
inc
nop
jecxz
or
hlt
repnz
and
cmpsl
loopne
pop
cmpl
and
lcall
push
xor
loope
in
cld
fists
enter
sub
xchg
pop
je
shll
aad
dec
or
mov
jp
and
xor
jne
fs
mov
subl
pop
outsb
add
jnp
jmp
sub
outsb
sbbl
sti
sub
or
in
jp
lds
insb
rcrl
mov
shr
cmp
jno
pushf
pusha
jl
std
fistps
ja
pop
inc
xchg
jmp
out
xor
imul
fwait
pop
popf
data16
xor
clc
push
sub
mov
xchg
pop
jae
sbb
xor
scas
cmp
loope
adc
sub
test
or
or
arpl
sbb
inc
jg
rorb
icebp
or
fisubl
xchg
loope
xchg
jg
int3
ljmp
popf
xor
mov
mov
adc
and
and
les
xchg
movsb
js
aas
push
cmp
ljmp
cmp
cmpsl
aaa
jp
xchg
or
out
jno
dec
in
jg
push
dec
jbe
enter
sbb
repz
push
scas
jo
lock
pusha
test
cmp
out
mov
bound
in
outsl
jb
enter
daa
call
test
loope
int3
jb
or
cmpsb
cmp
cmpsb
sahf
movsl
push
ja
and
jecxz
rcrb
sbb
lods
sub
fsubs
dec
dec
add
dec
dec
and
xchg
jmp
pop
fcmove
loopne
mov
cmp
insb
mov
and
adc
cmpsb
movsl
orl
repnz
add
xchg
and
jl
and
cwtl
int
in
cltd
sub
push
mov
rcr
mov
jg
sahf
cmpsb
push
enter
add
insb
adc
cmp
hlt
fs
adc
ss
fs
push
xor
testl
inc
xor
sti
loopne
stos
jne
or
scas
xchg
cmc
xchg
mov
nop
outsl
enter
pop
mov
push
adc
push
mov
data16
lods
dec
cwtl
push
mov
js
cli
stos
xor
mov
xchg
lret
mov
in
gs
std
loopne
jmp
pop
sub
dec
fstps
faddp
hlt
scas
ja
mov
test
cmp
ljmp
cmpsb
push
adc
inc
cmpsl
pushf
aaa
and
jmp
aad
cs
add
aad
mov
nop
std
adc
movsl
inc
xor
in
dec
shll
jecxz
cld
in
add
lea
mov
or
sbb
dec
mov
pop
rcrl
mov
jo
lds
jb
sub
mov
mov
sub
negb
dec
mov
cwtl
mov
ss
mov
ficoms
cld
adc
mov
mov
int3
push
mov
cmp
lock
mov
mov
js
pusha
aam
pushf
ret
imul
cmpsl
insl
arpl
fimuls
mov
jl
push
lods
inc
dec
pop
mov
lret
scas
nop
mov
sarb
or
add
cltd
leave
mov
pop
mov
and
push
stos
add
frstor
mov
xchg
cmc
in
sarl
push
lcall
aad
out
cmpsl
daa
je
test
inc
dec
cmove
add
jb
mov
mov
daa
xchg
xor
sti
test
ss
xchg
push
ja
daa
add
fwait
push
or
push
js
gs
lods
cmp
mov
push
mov
dec
in
cmp
mov
mov
lcall
push
insb
dec
int3
push
jg
xor
mov
arpl
jne
ja
mov
and
out
aaa
pop
pop
bound
sub
xchg
repz
subl
lret
sub
add
pop
insl
jp
dec
cli
and
nop
insb
cmp
mov
jle
jns
in
std
mov
sti
mov
push
xchg
xchg
jbe
pop
ja
aad
cli
jns
or
push
cmp
lcall
xor
ret
stos
jb
jmp
mov
sub
lea
imul
scas
mov
mov
or
cmp
stos
leave
cld
and
xor
cs
or
insb
mov
fcmovbe
int
add
sub
fiadds
popf
lds
popf
pop
mov
pop
mov
test
gs
mov
xlat
jge
arpl
ljmp
jmp
fstpt
jl
push
push
push
aad
mov
dec
mov
arpl
cmpsl
sar
test
push
xchg
cmpsb
push
xor
enter
daa
out
sbb
mov
data16
divl
ja
sub
dec
push
scas
ds
je
movsl
pop
subl
fbld
mov
push
mov
gs
roll
or
adc
js
js
mov
pop
sbb
dec
push
imul
pop
jb
sub
add
adc
dec
and
jae
andb
mov
shll
movsl
inc
push
and
int
dec
sub
test
mov
pusha
sbb
shll
mov
fstps
mov
lock
jg
lcall
xor
push
adc
test
cmp
or
jae
or
lret
sub
sahf
xchg
push
cmp
mov
adc
lods
mov
mov
outsl
cmpsl
xchg
shl
jmp
mov
adc
fs
add
inc
stos
loopne
lods
xor
dec
mov
push
scas
cli
fimuls
mov
icebp
sarl
add
fwait
aad
in
pop
pop
inc
dec
lcall
mov
xor
pop
aas
xchg
sbb
push
loope
mov
sbb
or
lods
adc
sbbl
sbb
push
push
push
aad
movsl
rclb
jmp
lds
and
cmp
and
mov
movb
or
sub
out
into
mov
in
clc
inc
cmp
lods
fcmovnbe
sbb
inc
in
pop
inc
loopne
fnstsw
xchg
xor
jb
sub
mov
dec
sub
shll
sub
pop
data16
std
lods
mov
pop
call
push
mov
xchg
test
mov
jb
aas
adcb
pushf
push
je
cmp
sub
sti
cmp
aas
mov
in
sub
aam
xchg
clc
cmp
sub
popa
insl
dec
fwait
mov
and
mov
out
pop
mov
xchg
jp
lods
lods
into
push
and
negb
and
sub
rcl
pop
jne
add
test
inc
mov
mov
aas
mov
xchg
cmp
and
pop
in
test
stos
jb
cmp
or
xchg
lock
xchg
push
outsl
lcall
imul
xor
push
cmp
push
adc
lcall
push
pop
mov
cmp
inc
mov
pop
mov
sbb
add
push
and
jns
dec
imul
in
lret
out
pop
mov
ljmp
dec
mov
xor
ljmp
dec
pop
sbb
inc
out
sub
out
push
dec
into
bound
push
out
xchg
mov
stos
shl
in
test
sub
add
mull
ja
jp
jg
and
xor
jnp
adc
jle
inc
in
xchg
push
shlb
push
imul
xlat
loopne
push
in
cmpsl
popf
mov
pop
mov
test
fisubrl
or
fstps
cmp
imul
scas
add
test
adc
loope
lcall
leave
jae
cltd
hlt
lahf
shr
test
inc
test
mov
inc
mov
mov
xchg
cmpsl
int3
pushf
cmp
pop
outsl
arpl
fsubp
enter
ljmp
bound
loopne
push
aas
cmp
pop
sbb
push
fld
ret
fstl
sbb
jne
or
push
lcall
push
test
push
mov
stos
mov
scas
cs
push
test
rcrl
push
cmpsb
in
cmpxchg
cmp
sub
daa
out
cltd
lock
inc
stos
sub
aas
jae
std
sub
xorb
movsl
popa
out
xor
jns
adc
cmp
aam
add
push
mov
pop
fidivrs
into
js
lds
push
pop
les
leave
fadd
adc
sub
jbe
cmp
ljmp
dec
mov
shlb
xorb
icebp
inc
ret
mov
cwtl
cwtl
and
inc
push
es
inc
int
movsb
ljmp
cmpsb
mov
push
lcall
push
mov
je
sahf
in
pop
aaa
test
fidivrl
jg
and
inc
stc
ljmp
adc
repz
lret
movsb
dec
fadd
sub
lret
outsl
xor
push
cmp
fadd
or
mov
cmc
and
scas
xor
int
xchg
sbb
mov
adc
push
lea
add
push
data16
ja
pop
or
mov
pop
out
cmp
mov
pop
and
sti
dec
in
push
sub
gs
loopne
enter
cltd
loopne
push
push
movsb
fxch
inc
pop
les
ljmp
loopne
lret
aad
cmp
adc
je
sub
in
pushf
hlt
jmp
jmp
fcmovbe
inc
sti
jnp
mov
inc
dec
dec
xchg
mov
pop
dec
xchg
dec
scas
and
inc
push
and
test
movb
in
pop
push
test
movsb
add
dec
push
mov
orl
fsub
pop
xor
inc
add
out
sub
jb
pop
pusha
mov
aam
lret
outsl
xchg
mov
or
mov
ja
mov
add
cld
push
cltd
lret
or
xor
mov
pop
mov
push
jmp
das
push
xchg
fsubl
lretw
mov
xchg
ret
xchg
test
dec
sbb
cmpsl
in
movsb
mov
stos
pop
lods
pop
es
mov
adc
sub
mov
push
push
push
shlb
test
in
pusha
pusha
mov
cmp
push
xor
popf
js
clc
mov
dec
xchg
ja
xor
pop
cwtl
mov
stos
popa
lret
adc
xchg
aaa
loopne
push
dec
add
add
jo
lods
cmp
xor
mov
mov
daa
jae
dec
xchg
cmp
jecxz
aad
lea
sbb
inc
xchg
inc
push
test
or
int
fwait
mov
mov
mov
fcompl
loop
mov
xor
jnp
in
mov
xchg
xor
fwait
mov
xchg
lock
movsl
inc
pusha
ja
aad
dec
mov
shll
adc
mov
dec
add
adc
leave
dec
mov
mov
inc
enter
andl
orl
out
push
xlat
sub
sti
shll
inc
pop
gs
imul
nop
add
insb
adc
gs
js
in
mov
fcomip
mov
call
inc
adc
xor
ret
popf
fucomi
pop
mov
out
out
stos
pop
imul
sbb
stc
lods
imul
sub
dec
test
iret
stc
loop
ret
mov
hlt
ljmp
inc
mov
or
bound
fidivrl
pop
scas
add
int3
xchg
negb
test
fiadds
outsl
test
or
repnz
mov
movsb
sbb
push
sub
shll
into
jge
pop
push
sbb
aaa
mov
lock
cltd
divb
imul
ret
xchg
push
fwait
push
mov
add
jmp
and
mov
test
pushf
add
inc
dec
xor
cmpsb
jo
shr
and
mov
sbb
daa
in
sahf
cmp
mov
loope
mov
xor
lods
ret
push
movsl
push
js
lahf
sbb
jb
sbb
pop
jbe
jae
pop
xor
dec
test
js
imul
xchg
rcr
adc
inc
test
sub
jne
lahf
xchg
pop
adc
aaa
mov
cmp
push
imul
imul
mov
leave
push
sbb
and
int
xchg
lcall
and
lods
into
sahf
push
test
jo
jg
mov
mov
cwtl
pop
stc
mov
cmpsl
xchg
adc
ss
pop
cmp
addb
lret
cmp
dec
xor
mov
into
jae
enter
adc
mov
cmpb
adc
mov
add
das
test
mov
mov
fiadds
inc
in
mov
pop
lods
sti
idivl
jp
mov
xchg
jmp
lock
jnp
les
xlat
xchg
outsl
cmp
add
mov
sub
movsb
dec
adc
in
stos
pushf
cmp
fsubr
mov
subl
aad
aad
mov
nop
mov
pop
inc
insb
cmpsl
sbb
pop
mov
jecxz
in
or
popf
call
int3
mov
xchg
icebp
push
andl
xchg
xor
testl
push
hlt
aas
rcl
or
and
pop
mov
mul
lock
std
sti
imul
mov
pop
or
popa
and
xchg
cli
loop
jp
sbb
mov
xlat
jl
std
mov
mov
pop
push
or
sbbl
es
scas
insl
sbb
sub
jg
cmpsl
in
jnp
mov
or
pusha
outsl
lods
adcb
sbbl
mov
in
scas
data16
sub
jmp
cltd
outsb
popa
sbb
clc
sarb
sub
fstpl
xchg
popa
clc
lock
xchg
mov
jp
dec
stos
sub
inc
xchg
or
subb
icebp
inc
xchg
jle
ljmp
xchg
xor
xchg
mov
cwtl
xor
mov
mov
sub
ja
std
and
xchg
fiaddl
xor
fwait
loope
push
push
popa
stos
inc
add
std
cld
jmp
cwtl
sahf
adc
fcompl
pop
jns
dec
push
xchg
and
mov
mov
mov
pusha
out
ja
fcompl
movsl
fistl
mov
repz
mov
les
dec
in
js
iret
pop
push
mov
orb
pop
add
jmp
push
stos
dec
sbb
mov
sub
notb
addr16
ret
mov
and
and
imul
call
xchg
fists
mov
push
stos
in
sbb
in
inc
sbb
jae
mov
call
mov
xlat
out
stos
lret
dec
aam
mov
push
mov
stc
adc
mov
int
cmc
mov
hlt
xor
cld
fildl
std
mov
ja
jo
fucomp
push
inc
mov
mov
add
icebp
pop
int
xchg
fisubrs
sub
lds
pop
sub
and
cmpsl
repnz
cmp
movsb
movsb
push
cmpsl
push
ja
or
fdivrl
sbb
push
mov
or
xchg
jno,pt
data16
sub
and
jle
jl
and
fnsave
or
scas
in
dec
call
test
addr16
ficomps
in
or
xor
adc
push
daa
in
mov
loope
push
push
sub
xchg
pop
cmp
out
ds
xchg
movsl
outsl
mull
lahf
cmp
adc
cltd
lcall
dec
pop
xor
xor
js
movsl
and
sbb
push
dec
rclb
call
pop
sub
out
outsb
add
repnz
adc
nop
movsb
jae
lcall
mov
xchg
adc
js
stos
push
sub
movsb
int
jmp
sub
push
lcall
jae
dec
cmpsb
sub
stc
inc
jle
xor
cwtl
orb
and
pop
xor
adc
sub
cmp
cmp
push
mov
xor
cmp
xchg
ja
outsb
dec
inc
into
push
ss
push
aaa
and
jl
loop
lods
pop
imul
sub
data16
mov
mov
cmpsb
out
or
ja
sbb
xor
sti
cmpsb
dec
sbb
outsb
aaa
push
xchg
pushf
std
loopne
cmc
push
pop
movsb
cmp
jmp
les
je
repz
imul
xor
xlat
sub
push
xlat
pushf
jecxz
fsubr
mov
add
nop
imul
stos
inc
jg
decl
xor
je
jns
jecxz
fs
or
repz
mov
call
dec
inc
mov
inc
mov
dec
dec
push
test
pop
jnp
test
jp
pop
inc
xor
jecxz
jo
sbb
cmp
mov
ljmp
mulb
fs
std
mov
loope
mov
leave
mov
xor
cld
shl
lret
jmp
dec
daa
mov
or
lock
repz
fmull
inc
sub
aam
aas
rol
movsl
xchg
insl
ljmp
scas
cmpsl
jecxz
sarl
fmuls
btc
fildl
and
cld
test
pop
dec
jnp
rorb
cltd
movsl
loope
test
xchg
xchg
mov
pop
mov
fnstsw
xchg
pop
clc
sub
jno
cmc
mull
rcrl
dec
adc
out
xor
sub
or
mov
add
push
xor
push
popa
mov
sub
stos
xchg
mov
mov
inc
sbb
or
sub
int3
push
add
cltd
add
sbb
pushl
mov
xor
shl
xor
sub
insb
jge
xchg
rolb
mov
inc
inc
mov
sbb
jg
cwtl
sbb
mov
movsl
shll
cltd
fbstp
stos
out
inc
jb
out
mov
or
movsb
jecxz
jno
pop
xchg
pop
add
jne
or
icebp
insl
pushf
addr16
scas
xchg
jp
pop
arpl
mov
sbb
cltd
or
addb
xchg
test
ja
xor
xchg
loope
and
inc
imul
dec
int
popf
sub
mov
gs
stos
loop,pt
xchg
adc
hlt
sbb
stc
pop
imul
cmc
scas
sub
and
test
adc
sarl
mov
xor
or
mov
xor
arpl
outsb
inc
mov
mov
fimuls
daa
push
or
mov
add
insl
stos
pop
cld
adc
in
mov
fisubrl
repnz
mov
movsb
das
mov
push
mov
jbe
mov
sbb
loope
aaa
xor
aas
mov
jl
add
dec
mov
ljmp
mov
dec
inc
and
pop
shrl
xor
sub
inc
pop
cmpsb
jbe
ret
fisubrl
enter
daa
jecxz
dec
cmp
cmpsl
loope
or
cmp
inc
into
ds
xchg
and
rcrb
mov
sbb
inc
pop
sbb
mov
xor
stc
sbb
jno
leave
jae
pop
adc
lret
rclb
rcr
hlt
subb
insl
shrl
out
fsts
in
out
ret
int
lods
cmp
inc
mov
push
push
and
lods
lret
int
fs
sub
outsl
ss
lret
jg
lcall
outsb
mov
stos
mov
sub
arpl
movsl
inc
push
jg
loopne
mov
call
jnp
xor
mov
cli
or
ss
js
clc
out
aad
add
scas
lret
daa
xor
fs
sub
into
cmp
and
jns
fbstp
jno
outsl
and
aaa
ljmp
test
in
mov
jmp
mov
loopne
int3
fstl
outsb
push
pop
out
mov
cli
stos
mov
mov
popf
inc
jecxz
push
pushf
and
xchg
adc
loopne
stos
mov
adc
je
fldcw
jb
sub
in
stos
bound
sub
xchg
sbb
js
inc
xlat
add
test
adc
std
movsb
jmp
fisubs
sub
insb
fwait
inc
xchg
sti
jno
adc
xorl
jecxz
sub
psadbw
adc
subl
add
adcl
fistl
aaa
cs
add
cmp
pop
test
movq
mov
jne
into
shrl
xlat
imulb
cld
std
dec
xlat
mov
mov
mov
popf
icebp
pcmpgtw
cld
jmp
jge
pop
mov
cmp
lock
das
mov
or
sub
rcl
pop
jp
ret
xor
cli
cmp
mov
cmpsl
loop
pushf
mov
out
jle
pop
and
mov
jp
push
and
xchg
and
pop
imul
faddl
push
mov
xlat
and
frstor
push
clc
push
pop
xchg
xor
lcall
sbb
and
xchg
cmp
xchg
or
fs
fldt
popa
add
add
xor
stos
add
mov
lret
mov
dec
lret
push
fldt
or
sbb
pop
rolb
mov
or
sbb
push
cmpsl
arpl
add
loope
call
int
xor
flds
in
pop
mov
mov
inc
pop
mov
out
ja
js
dec
mov
mov
gs
add
adcl
push
jbe
pop
mov
mov
ja
out
xchg
cmp
xchg
jmp
ljmp
out
inc
sub
in
sbb
jp
fs
and
xlat
mov
push
loop
jnp
dec
jle,pt
fwait
sti
in
into
loopne
push
insb
aam
push
and
xchg
mov
ficompl
enter
fdivrs
adc
push
or
lcall
lahf
push
push
movsb
shll
mov
adcl
or
scas
repnz
push
ds
adc
mov
loopne
dec
dec
sub
arpl
mov
or
rcll
inc
mov
mov
push
jp
add
add
int3
dec
shlb
fisubrs
dec
lds
rcrb
mov
mov
test
mov
insl
mov
testb
stos
jae
sbb
push
xorl
and
or
lret
xor
push
dec
adc
push
inc
and
loope
adc
dec
lock
pop
push
inc
cld
xor
in
fstps
test
loop
inc
cmp
ljmp
mov
movsl
jge
jne
in
icebp
lahf
jp
xchg
push
mov
inc
add
js
xor
in
fistpl
pop
jp
sarb
call
push
add
push
push
xchg
stos
fsubrl
lret
clc
or
adc
enter
dec
out
add
add
int
jo
jle
test
xchg
adc
push
xor
sub
loope
lcall
test
mov
adc
rolb
es
mov
fists
fs
int
ss
xor
cmp
mov
nop
test
in
test
shll
or
dec
int
into
sbb
and
inc
sbb
outsl
add
leave
imul
add
mov
cmp
lods
mov
cltd
mov
mov
cli
fucomp
dec
mov
or
lock
add
aaa
mov
or
out
loopne
jb
pop
loop
mov
fldenv
dec
cld
repz
imul
mov
push
xlat
inc
xor
imul
adc
pushf
cmp
mov
inc
cmp
aad
cmp
pop
adc
pop
inc
movsl
repz
je
out
ret
jecxz
xor
clc
push
js
nop
stos
push
dec
inc
sbbb
out
jmp
ret
icebp
xor
ret
pop
rol
inc
mov
inc
addr16
scas
pop
aas
jb
xor
mov
add
outsl
sarl
sti
std
lock
cwtl
add
scas
mov
sub
mov
mov
das
lret
int3
decb
adc
lock
das
lcall
sub
sahf
aam
or
ret
ret
fs
es
xor
cmpsl
loope
mov
push
dec
lods
ret
lret
cmp
nop
test
mov
add
pop
mov
lds
sbb
jbe
push
xchg
into
push
cmp
inc
mov
xchg
jae
push
ljmp
cwtl
pop
inc
xor
sbb
dec
pop
xchg
push
addl
add
icebp
mov
mov
out
mov
xor
dec
xor
test
fwait
xor
mov
fstpl
mov
cmpsb
sub
fwait
outsb
xchg
stos
push
dec
scas
addb
jno
pushl
xchg
xor
lods
mov
in
xchg
out
jo
loope
popf
mov
insl
pop
xchg
inc
mov
dec
jle
jno
cmp
test
or
dec
mov
insl
jne
sbb
mov
nop
sub
adc
jb
pop
leave
iret
xchg
mov
movsl
addl
loopne
daa
sub
addr16
adc
negl
dec
and
adc
insb
mov
leave
out
jle
in
in
push
lock
mov
add
xchg
rolb
jae
cmp
jne
ja
in
mov
jecxz
mov
dec
cltd
imul
inc
scas
repnz
push
test
adc
movsb
ret
arpl
ds
hlt
push
ror
subl
je
lods
mov
push
or
fiaddl
inc
pop
int3
xor
and
mov
ficoms
addr16
shlb
jge
adc
or
cltd
cmp
xor
inc
jns
push
fs
adc
jge
jmp
sbb
fnsave
mov
inc
or
xor
jl
inc
out
dec
jg
fisttpll
daa
push
pop
xor
jo
inc
scas
mov
and
fcmovne
test
enter
mov
cmpsb
jl
mov
rolb
add
or
cmp
sbb
loope
out
lcall
pop
ds
dec
shll
sbbb
cltd
mov
sbb
mov
xor
lret
xchg
sahf
mov
xlat
js
int3
repz
xchg
cmp
push
jne
push
sub
adc
loopne
mov
push
mov
mov
mov
add
movsl
mov
xor
add
pop
leave
and
cld
into
mov
sbbb
mov
mov
int
inc
sbb
loop
lds
adc
jle
in
stc
jge
adc
adc
out
cmp
outsb
lods
push
addb
imull
xor
fnstcw
mov
pop
fwait
cmc
pop
mov
xor
gs
outsl
loope
mov
imul
mov
iret
adc
sbb
mov
out
sahf
es
adc
jb
ja
xchg
in
jae
loopne
mov
inc
xlat
movsb
sbb
and
xchg
pop
add
adc
mov
les
repnz
pusha
xchg
scas
and
jae
out
sarb
sub
sub
int
adc
cld
pushf
in
gs
sbbl
test
pop
nop
cli
pop
imul
push
inc
mov
xchg
mov
mov
jge
adc
movups
or
in
pop
pop
call
mov
fcomi
sbb
fs
pop
inc
mov
aas
dec
cmp
jb
insb
cmp
and
jle
rorl
shll
xchg
aam
cwtl
mov
and
mov
stc
cld
inc
movsl
rorb
fscale
and
sbb
lcall
cmp
sahf
aam
jmp
ret
push
cmp
ds
ret
das
cmpsl
loopne
inc
mov
sbb
inc
push
mov
shrb
mov
test
loope,pt
dec
cmp
and
lahf
mov
xchg
test
fnsave
pusha
xchg
mov
mov
shll
pusha
bound
pop
push
pop
xchg
lcall
paddusw
mov
or
mov
into
mov
ss
dec
cltd
cltd
iret
test
pop
sahf
xchg
mov
insb
xchg
cmp
dec
rcrb
test
fwait
popf
fdivrl
add
imul
dec
jns
divl
xchg
mov
stos
addr16
dec
cmp
dec
jno
adc
in
or
repnz
cmp
scas
repz
ljmp
push
dec
enter
mov
push
int3
gs
adcb
out
popa
subb
sub
data16
scas
and
jo
insb
sub
and
pop
push
jle
and
pusha
push
and
clc
xchg
pop
push
popa
pop
clc
dec
cmp
cwtl
jae
dec
inc
push
xchg
sarl
or
adc
loopne
stos
xchg
fldl
cmp
sub
lret
push
pop
inc
push
int3
lret
add
push
push
xchg
ret
outsb
leave
cmp
and
arpl
sub
lret
push
mov
pop
add
cmp
push
adc
pop
mov
lds
jle
pop
cmc
mov
pop
pop
cmp
stc
lock
rcr
in
mov
icebp
jbe
dec
xor
bound
sbb
sbb
jb
stos
or
shll
out
cli
cmp
or
xor
lret
pop
jge
push
out
test
xchg
cld
lea
fstpl
cmpsb
push
mov
cmpsl
leave
push
daa
loopne
cmp
pop
mov
loope
adc
out
pop
inc
out
ds
pop
movsl
mov
sahf
lahf
mov
inc
loope
out
jg
stos
clc
xor
out
push
popa
pop
lret
sahf
icebp
js
push
pop
pop
shlb
jl
int3
aad
fadd
dec
xchg
sub
push
outsb
mov
pop
adc
jle
rorb
fisubrl
mov
js
and
data16
sub
mov
pop
dec
xor
inc
pop
inc
rcll
sub
mov
aam
mov
in
cmpsl
xor
or
mov
or
xor
xor
bound
out
sahf
orb
fsubrs
ljmp
ljmp
cmp
out
testb
pusha
and
loop
mov
xor
xchg
jp
lock
adc
in
loope
pop
fstl
inc
jecxz
lods
xorl
mov
inc
lret
mov
sti
bound
xor
cli
pop
xchg
lods
rclb
inc
mov
adc
fsts
pop
lock
repz
aas
xchg
jb
sub
sub
push
sub
pusha
adc
daa
or
test
aad
test
test
inc
lret
jg
dec
jns
and
sbb
cmpsl
lods
loope
xchg
mov
inc
push
pushf
pop
adc
sbbl
pop
aam
and
pop
pop
mov
add
jne
aas
in
and
xchg
jns
cmpb
and
mov
pop
popf
out
divb
mov
add
push
pushf
or
xchg
aad
cld
insb
and
jp
sti
add
mov
pop
ja
js
in
pop
cmpsl
fisubs
xor
iret
ret
loope
jnp
shl
insl
fwait
inc
inc
dec
inc
leave
cmpsl
fbld
cmp
xchg
add
cltd
xchg
mov
mov
mov
mov
enter
cwtl
push
mov
orl
mov
fldenv
fstp
orl
icebp
mov
ljmp
clc
pop
lcall
out
mov
test
sti
push
mov
or
sysenter
cmp
das
xchg
or
dec
test
mov
xchg
les
ret
fnstsw
push
nop
pop
pushf
add
test
mov
mov
xchg
xor
aas
jns
cld
jno
cwtl
call
push
pop
cmpsb
mov
or
mov
pop
rolb
mov
and
mov
shrb
mov
or
jne
sbb
imul
cmp
xchg
dec
jae
xchg
dec
pop
js
movsl
cli
out
rcr
cmc
sub
aam
aas
xchg
and
repnz
insb
xchg
xor
jnp
or
mov
daa
pusha
out
lahf
mov
xchg
sub
or
jae
movsl
outsl
push
push
push
and
inc
iret
enter
lahf
stos
or
insl
xchg
ds
out
imul
xchg
adc
xor
xor
xor
mov
push
hlt
lods
fmuls
inc
lcall
push
pop
push
sub
imul
add
sub
int3
or
rcrl
data16
pop
push
mov
shrb
repnz
loopne
cmp
lock
pop
mov
jbe
outsb
jge
test
out
aaa
xor
sub
cmp
jno
add
push
push
in
lea
xor
mov
inc
and
sub
stos
push
add
inc
inc
test
xor
enter
daa
filds
cmp
aad
aas
pusha
mov
cmp
ja
jne,pt
jnp
xchg
loope
and
jmp
push
add
sbb
mov
xor
mov
js
je
pop
adc
push
and
and
outsl
mov
sub
xor
outsb
icebp
or
test
adc
add
ss
sub
pop
inc
mov
ret
dec
aas
push
cmp
pushf
int
xor
sub
jne
pop
sbb
mov
sub
mov
add
in
jg
popa
adc
test
and
adcb
pop
jg
cmp
sbb
jmp
imul
lcall
outsb
xchg
fsub
mov
dec
fisttpll
push
cmp
fsub
or
xchg
mov
xchg
sbb
xor
out
outsl
lahf
mov
and
dec
fs
add
call
fildll
pop
mov
jp
jbe
shlb
dec
add
stc
sbb
ret
xchg
loopne
inc
jno
aas
push
stc
adc
and
and
les
cmp
xchg
xor
inc
cmp
xlat
add
adc
push
es
cmp
cs
loop
ss
inc
nop
mov
fimuls
adc
xchg
dec
lock
je
xchg
sbb
es
sbb
jbe
sub
cld
imul
lds
rorl
outsl
fisttpl
cmp
inc
sbb
cld
jecxz
mov
xchg
jbe
mov
mov
mov
fdivr
in
or
xor
mov
fwait
adc
imul
lret
adc
in
ficoms
mov
xchg
hlt
lock
insb
mov
daa
add
aam
lods
test
inc
fstp
insl
andb
cmpsl
fiadds
mov
dec
jae
lods
add
loopne
popf
sbb
push
mov
and
add
out
out
mov
cltd
mov
push
aad
jnp
mov
xchg
fldl
stc
aam
push
jnp
xchg
xor
rorl
adc
stos
ljmp
xchg
sub
inc
add
setnp
push
xor
mov
mov
cmp
repnz
lods
adc
push
data16
movsb
cltd
inc
jbe
mov
sbb
fwait
sti
mov
push
xor
add
lahf
cltd
mov
xor
push
mov
in
xor
xchg
pop
adc
mov
ret
ja
ffreep
dec
push
out
mov
sahf
sub
xor
aaa
xlat
jo
jns
mov
push
add
push
insl
mulb
loop
jmp
push
jge
xorl
out
xchg
and
fcoms
in
jp
mov
xor
push
jnp
into
pop
jle
js
in
dec
das
pusha
mov
mov
xchg
add
sbb
pop
aam
jae
aas
jmp
popf
in
jns
mov
mov
pop
pop
xchg
les
xchg
imul
cmp
push
pop
out
movsb
adc
popa
imul
outsl
pop
addr16
fxch
sub
jp
mul
fwait
arpl
jge
or
mov
push
push
ficompl
jns
add
int3
hlt
mov
sub
sti
xor
scas
rol
fs
add
mov
push
push
lea
mov
jge
rcrl
aaa
lock
jno
inc
xor
cmpsb
dec
int3
mov
xor
jo
std
lret
scas
sbbb
mov
adc
inc
cmp
in
jne
mov
idiv
and
cmp
adc
sub
jnp
cmp
push
ds
xchg
adc
and
and
aad
movsl
sbb
add
enter
add
pop
push
mov
lock
pop
push
add
sbb
jp
sti
fcompl
cli
fisubrl
loop
inc
outsb
push
cmc
mov
shlb
lock
orb
mov
bound
rclb
int
pop
jb
jle
stos
pop
inc
js
stos
fcomps
rol
scas
mov
sub
adc
xchg
sahf
add
cmp
sub
mov
adc
ja
push
stc
mov
lret
test
cs
lahf
pop
sahf
idivl
sub
xor
xchg
mov
into
test
mov
pop
in
xor
inc
mov
jle
mov
imul
testb
cmp
lods
dec
addr16
mov
jmp
cli
test
fmuls
mov
sarb
gs
pop
push
pop
pop
mov
ljmp
les
icebp
repz
outsb
xchg
clc
jg
sbb
lahf
lcall
aaa
sub
jo
ret
pushf
in
mov
cmp
sbb
adc
mov
inc
icebp
je
stos
jecxz
stc
stos
push
cli
dec
lea
or
inc
js
pop
js
cmp
ljmp
pop
dec
orl
in
leave
inc
rcll
enter
jmp
and
xchg
push
clc
and
std
mov
hlt
cwtl
out
outsl
xor
insl
test
icebp
inc
jg
cld
ret
lret
add
mov
sbb
mov
ja
lock
push
int
mov
push
or
aam
mov
movl
dec
hlt
xchg
cmpsl
frstor
mov
bound
outsl
mov
mov
sub
sbb
scas
out
pop
push
dec
dec
sarb
adc
out
push
addl
and
push
dec
clc
lea
xchg
outsl
outsl
jp
jae
fwait
shll
ljmp
test
pop
push
and
mov
cli
mov
add
push
cmpsl
or
xor
rcll
xchg
mov
test
sbb
test
sti
inc
or
sub
mov
pusha
imul
jns
push
mov
xor
idiv
jns
icebp
fucom
scas
mov
sub
test
sbb
pop
jge
movsl
ja
orl
dec
pop
or
mov
aas
and
pop
jne
scas
push
mov
mov
pop
bound
sahf
jmp
loope
cld
add
mov
xchg
subb
and
addr16
adc
and
icebp
insb
push
push
jnp
pop
fs
xchg
sti
in
arpl
and
mov
ret
fs
push
sbb
add
mov
push
xchg
stos
lock
xchg
sbb
shrl
enter
int3
adc
xchg
mov
iret
icebp
and
cltd
leave
mov
inc
pop
arpl
push
sub
cmp
inc
add
mov
in
fildll
inc
pop
push
daa
sbb
sahf
or
outsb
shl
repnz
push
xchg
movsb
jno
push
push
mov
sbb
jge
loop
sbb
aaa
scas
sarb
or
mov
jl
mov
loop
mov
jmp
xchg
dec
push
jo
imul
cltd
out
and
popa
test
hlt
sbb
cmpsb
mov
lcall
hlt
mov
cmp
bound
cmp
add
mov
popa
sbb
lahf
adc
pusha
js
mov
sbb
sbb
xor
sbb
stos
cmp
pop
cmp
insl
mov
cli
shrb
movsb
pop
push
roll
fadd
adc
outsb
mov
jge
adc
jecxz
movlps
sub
or
and
andb
pop
sti
push
inc
adc
int
icebp
lods
sub
outsl
movb
test
lcall
fmull
add
jmp
xchg
inc
jg
ret
lret
stc
pop
adc
adcb
cltd
cld
ss
cmp
cmp
pop
sbb
idivl
mov
ret
jle
xor
les
es
xchg
into
mov
daa
xor
iret
pop
loop
lahf
jp
aaa
inc
lahf
adc
lret
or
loope
leave
mov
mov
mul
mov
pop
fldenv
pop
fidivs
sti
outsl
cmpsb
int3
arpl
insb
gs
loopne
mov
pop
jge
xchg
adc
and
les
inc
repz
xchg
mov
push
cmp
add
cmp
stos
aaa
pop
adc
cs
pushf
nop
push
mov
cs
push
aad
mov
data16
inc
add
popa
dec
ficoms
pushl
jecxz
push
dec
and
add
test
popf
pop
sub
js
fidivrs
scas
fldt
aam
inc
sub
out
inc
insb
aas
leave
out
jb
push
jl
cmpsl
cmpsb
inc
and
pushf
mov
inc
lret
sti
cmp
cwtl
test
and
mov
mov
sbb
adc
repnz
mov
lock
das
cmc
in
mov
adc
mov
cmp
dec
es
insl
push
or
dec
out
inc
test
dec
mov
sub
bound
and
and
cmp
adc
cltd
es
xor
inc
int3
push
or
dec
fstl
clc
enter
scas
cmpsb
add
sar
sbb
iret
stos
enter
call
aam
push
std
and
mulps
mov
sub
or
fidivrl
xor
outsl
scas
mov
inc
js
dec
xor
sub
sbb
subb
mov
xor
mov
pop
cltd
arpl
jns
outsb
add
aad
popf
call
or
jns
loop
in
xchg
adcb
in
mov
cmp
xor
fisubrs
or
cwtl
je
scas
pop
inc
dec
std
into
insl
jne
push
push
mov
cmp
out
int3
pushf
cmp
repz
jmp
lods
mov
mov
sub
into
inc
xchg
addr16
out
notb
and
shrl
scas
jnp
movsl
sahf
jle
sahf
cmpsl
in
loopne
pusha
rolb
xchg
cmpsb
shll
pop
aam
roll
and
xchg
popf
mov
popf
cmp
jg
push
sub
xchg
jb
arpl
or
imul
push
call
mov
ret
mov
hlt
repz
arpl
jl
inc
mov
sti
and
mov
rolb
lret
dec
fiaddl
popf
int3
lret
pop
inc
sub
call
sar
dec
mov
test
loope
add
notl
mov
jbe
test
pop
aad
sbb
adc
aaa
outsb
sbb
jno
pop
fnstcw
xchg
dec
stos
mov
push
xchg
mov
pop
lds
scas
in
cmp
clc
and
nop
cmpsb
mov
mov
pop
mov
inc
aad
enter
daa
fdiv
pop
cmp
das
icebp
loope
sbb
shll
movsl
cmpsl
mov
and
stc
sub
sub
sbb
push
mov
xor
and
insl
shrl
add
js
inc
cmp
into
jae
push
adc
push
sub
fstp
jo
daa
sub
dec
push
outsb
sbb
shr
aaa
pusha
vpmacssww
pop
pop
mov
popf
mov
lock
movb
mov
inc
sub
pop
inc
jmp
adc
shr
lds
lea
test
sub
jg
jne
mov
jmp
sub
adc
cmc
inc
mov
sahf
cmp
adc
xor
lret
and
cmp
mov
or
mov
into
outsb
add
sbb
out
inc
insl
outsl
cmp
repnz
dec
mov
adc
mov
jmp
lods
sbb
scas
xor
mov
notl
ljmp
sti
push
push
mov
gs
and
loopne
lret
pushf
outsb
imul
andb
sbb
repz
test
push
sbb
adc
inc
push
sub
jns
pushf
cmp
gs
cmp
ss
int3
xchg
nop
inc
in
dec
add
stc
inc
pop
or
dec
push
or
sbb
push
cmc
mov
lea
adc
jb
dec
movl
daa
xorl
mov
fdivrl
pop
xchg
sbb
inc
mov
sbb
aas
push
mov
mov
inc
mulb
xchg
mov
idivb
dec
repz
and
dec
scas
cld
mov
jge
lock
and
popa
pop
push
mov
lretw
lock
cmc
das
aam
adc
or
fcom
movsb
inc
rol
sbb
js
insl
aaa
pop
lret
dec
ljmp
mov
nop
loop
lods
inc
sbb
mov
outsl
clc
gs
aam
xor
shl
lahf
negl
pop
test
mov
xchg
mov
iret
xor
mov
clc
add
xchg
in
popa
icebp
ljmp
dec
pop
inc
shrb
mov
out
dec
enter
stos
ficoms
push
adc
mov
aam
or
sti
xor
pusha
scas
mov
inc
fldcw
test
sar
xchg
jle
inc
cmp
sbb
imul
xor
outsl
add
jne
ljmp
icebp
xor
push
outsl
jns
jbe
in
ror
dec
mov
nop
mov
repz
pop
dec
xor
mov
fisubrl
mov
cmp
sbb
mov
bound
ja
xchg
ja
mov
loope
std
out
dec
sub
leave
std
inc
cmp
sub
and
push
insb
inc
lea
jnp
mov
jle
lahf
xchg
in
shll
pop
push
pop
fildll
mov
xchg
jns
inc
pop
or
inc
jle
das
jae
movsb
mov
pusha
adc
mov
pop
test
stos
in
xchg
leave
sub
sbb
push
lret
imul
imul
inc
sub
scas
sahf
faddp
mov
addr16
hlt
fdivr
xor
mov
and
xor
testb
fidivl
pop
test
inc
lods
and
mov
stc
pop
je
xchg
fsubp
cwtl
pop
jb
push
adc
aaa
ja
repnz
std
mov
movsb
xchg
ret
jbe
inc
jne
scas
stos
call
aaa
sub
mull
fcompl
lahf
dec
sbb
dec
push
jns
sbb
xchg
test
and
xor
fldl
sub
in
sub
and
daa
fcmovnu
ja
push
push
in
loope
hlt
xchg
sub
fwait
cmp
sub
add
movsl
scas
jno
and
nop
cwtl
lahf
push
mov
push
dec
and
sbb
add
add
imulb
xor
std
js
mov
pop
or
aaa
add
call
sub
outsb
jge
sbb
lds
out
lahf
addb
mov
dec
lea
add
inc
aad
int
aas
test
pop
ret
sti
mov
roll
mov
mov
dec
sbb
mul
mov
jg
sub
mov
mov
adc
jg
rcrl
loopne
rol
mov
cld
sbb
lea
mov
add
les
into
push
imul
xor
leave
outsl
sbb
and
iret
es
and
add
add
mov
imulb
inc
xor
mov
inc
or
in
cmc
push
test
int
cmp
test
mov
loopne
pop
cmp
out
adc
fstp
es
les
xor
xchg
inc
out
or
cmp
rcl
cld
in
sub
out
pushf
out
pop
jmp
adc
jns
push
insl
sub
pop
decl
dec
int3
stos
sbb
pop
jecxz
flds
daa
push
loopne
leave
and
mov
jb
orl
fisttpl
cmpsb
mov
push
jge
cmp
adc
aas
pop
aam
jb
cld
dec
mov
int
cs
out
testb
dec
cwtl
pop
add
scas
mov
jg
or
inc
add
lret
ror
clc
mov
jge
xorl
xchg
das
mov
imul
outsl
and
ret
lods
enter
aas
xlat
insl
push
push
fmull
cmp
pop
mov
cmpsl
dec
mov
adc
push
and
outsl
mov
adc
mov
xor
xchg
aaa
test
or
xchg
data16
fstpl
in
xchg
sub
sub
shrl
call
inc
out
scas
xchg
xchg
inc
in
push
mov
cmc
movhps
add
add
lret
xor
movsl
lds
dec
scas
dec
dec
add
xchg
sahf
das
sub
rorb
or
pop
cmpsb
fwait
mov
cld
push
mov
mov
dec
sub
xor
rolb
jns
scas
jno
dec
inc
push
xchg
cltd
jge
mov
mov
jns
scas
or
inc
dec
and
cmpsb
mov
ss
mov
mov
fs
ret
xchg
push
xchg
imull
out
mov
sbb
mov
inc
inc
mov
out
imul
dec
stos
cmp
fnstcw
out
cmp
insb
stos
cmc
mov
and
xchg
clc
in
push
push
pusha
divb
inc
fisttps
icebp
xchg
dec
jecxz
pop
inc
inc
fadds
xchg
jae
dec
sahf
push
and
rcrl
insl
pop
sub
pushf
gs
stos
dec
rcrb
sbb
hlt
out
subb
push
jbe
cltd
adc
popa
ss
inc
leave
pop
xlat
xor
push
stos
arpl
inc
push
inc
test
and
inc
orb
add
out
int3
mov
test
fiadds
hlt
xchg
shlb
aaa
mov
dec
xchg
cmp
and
sbb
jge
data16
shll
in
adc
inc
clc
icebp
jno
add
dec
mov
push
pop
dec
cmc
xor
in
and
push
ja
test
push
sub
add
adc
mov
cmp
mov
mov
push
sub
clc
push
xor
push
ds
mov
mov
mov
lahf
jb
mov
sbb
xchg
mov
xor
sub
pop
mov
lds
mov
pop
dec
repnz
push
icebp
mov
dec
clc
sub
and
call
mov
dec
sbbb
mov
daa
adc
push
pop
ljmp
mov
sbb
inc
jge
lcall
mov
inc
mov
test
pushf
sbbb
dec
mov
loope
stc
jle
mov
adc
ja
ss
cmp
mov
idivl
lods
mov
mov
ret
shl
or
js
into
xor
cmc
js
fdivl
movsb
mov
bound
loopne
sbb
mov
fwait
adc
mov
dec
sub
inc
inc
call
cli
jne
das
mov
pusha
pop
loopne
jl
inc
dec
stos
ret
xlat
scas
push
loopne
xchg
fisubl
adc
enter
testb
repnz
xlat
xchg
add
call
cmp
pop
cmpsb
sub
imul
xchg
mov
jmp
mov
cs
aas
dec
aad
jb
nop
divl
dec
mov
add
dec
inc
in
in
je
loopne
jecxz
add
sub
mov
xor
fucomi
push
ljmp
mov
sub
fstpt
xchg
rcrb
fwait
inc
shlb
aas
cmpsb
rolb
jb
lahf
loop
int3
aad
and
movsl
mov
test
outsb
std
sub
cwtl
ficompl
mov
push
and
icebp
sahf
sbbb
inc
loop
aas
add
dec
mov
mov
out
lock
mov
cli
mov
aam
dec
pop
ret
cmp
sarl
insl
add
sti
adc
fstps
push
mov
mov
xlat
sbb
mov
fisubs
or
mov
subb
rorb
pop
pop
test
shll
adc
lds
cmp
aas
sahf
mov
add
stos
xchg
ficoms
out
adc
push
xchg
mov
pcmpeqd
dec
or
cs
mov
xchg
ss
push
xor
orl
into
or
mov
ret
push
and
add
ret
insl
push
sbb
pop
mov
in
sbb
xchg
call
shll
repnz
out
imul
dec
push
inc
movsb
mov
mov
mov
sti
ret
inc
dec
cmpsb
call
ja
shrl
cmc
out
imul
fsubrp
pop
sarl
cmp
out
cmpb
mov
inc
es
dec
and
push
jle
jge
in
scas
push
pusha
xchg
and
fildll
je
pop
mov
push
inc
xchg
jno
jae
cmp
push
out
push
popf
scas
mov
or
leave
adc
ja
bound
movsl
push
imul
scas
or
xchg
push
mov
in
iret
insl
daa
xchg
ret
inc
leave
jle
leave
hlt
outsb
add
inc
lods
xor
or
es
add
mov
outsl
inc
pusha
int3
mov
mov
lds
sub
dec
jmp
mov
mov
lods
loop
popf
movsl
loope
fsubrl
cmpsl
jge
add
sbb
inc
xchg
aaa
stos
or
or
lods
mov
jl
ja
dec
testl
mov
in
loopne
sbbl
test
and
mov
xchg
and
in
clc
ja
enter
daa
flds
jl
icebp
loope
push
push
sub
sub
loopne
dec
ds
into
pop
movsl
mov
jmp
lahf
xchg
sub
hlt
mov
sbb
cli
add
push
inc
xor
push
mov
inc
pop
fldcw
js
dec
enter
fwait
push
lcall
jno
mov
lea
outsb
inc
sarb
jnp
sub
imul
mov
mov
xchg
and
addr16
popf
push
xchg
sub
push
sub
roll
shll
sbb
dec
in
sahf
xor
test
add
mov
lods
xor
mov
lahf
mov
cmp
inc
ret
push
idivl
sti
lret
push
xor
test
mov
or
add
cmc
aas
lods
mov
decl
outsl
fsts
loop
jge
imul
mov
add
lods
data16
dec
lods
shlb
mov
out
fdivrp
cli
test
jmp
das
or
sahf
sti
sub
ret
out
or
or
pop
add
pop
stc
loop
adc
mov
push
les
or
xchg
jnp
sbb
jp
xlat
jp
dec
sub
xor
and
cmpsb
pushf
cmp
out
call
jmp
es
rcrb
dec
sbb
shl
dec
mov
mov
mov
sub
bnd
jecxz
mov
rclb
notl
dec
sub
int3
pop
jl
mov
inc
pop
lret
sarl
inc
rorl
subl
roll
inc
pop
std
iret
imul
mov
addr16
mov
fdiv
jne
sbb
cltd
pop
in
lret
scas
clc
clc
mov
jle
mov
mov
jns
jno
arpl
icebp
ret
sbb
add
insl
cmp
push
sub
insl
in
pop
dec
fisttpl
push
cmpsl
fcom
pop
mov
aad
subb
mov
and
movsl
jp,pn
mov
jge
cltd
add
mov
sub
push
sbb
neg
in
imul
stos
stos
push
ljmp
adc
leave
stos
test
daa
out
je
jae
rolb
xchg
pmullw
xor
jne
push
or
sub
mov
dec
mov
dec
roll
and
xchg
xchg
push
pop
sbb
cwtl
or
repnz
adc
xor
inc
push
sar
stos
out
xor
fs
adc
jecxz
aaa
int3
ds
pop
bsr
lahf
addr16
jno
dec
or
mov
pop
fstpt
sub
out
and
mov
stc
repnz
dec
sub
bound
adc
jmp
fcomps
mov
push
push
sub
decl
mov
fildl
ret
and
inc
fnstcw
test
jle
pop
aad
loope
pusha
sub
mov
xchg
repnz
pop
mov
mov
lahf
and
outsb
scas
push
test
inc
cmp
sbb
notl
xchg
sub
imul
scas
insl
jp
push
add
out
adc
std
iret
int3
icebp
loope
fldl2t
inc
leave
cmc
mov
and
sbb
xor
mov
push
hlt
ficoml
mov
push
leave
hlt
int3
jbe
movsb
pop
add
int3
fmulp
fld
mov
dec
shlb
mov
hlt
xor
hlt
movsb
sub
or
jecxz
jge
xchg
repz
aaa
push
pop
or
push
scas
jno
cmp
jl
imull
pop
mov
xor
mov
inc
xchg
and
test
jmp
dec
inc
xchg
and
in
fbld
jno
fsubrs
daa
fdivrs
pop
loope
pop
out
sub
das
fwait
cmp
call
mov
mov
lahf
mov
dec
push
dec
js
sahf
scas
cld
add
sbb
jns
nop
pop
add
ret
sbb
in
fldenv
push
test
fcompl
lret
sub
outsb
cmpsb
jno
adc
push
xchg
add
jle
cmp
mov
add
and
mov
push
ficoms
int
fs
sub
xor
inc
or
lcall
jns
push
jge
sbb
jl
test
sbb
insb
adc
in
lret
sub
add
pop
or
lcall
fadds
mov
sahf
lret
adc
aaa
jns
cmp
push
pop
into
cli
dec
fcomip
push
into
pop
xor
and
mov
testl
ds
sbb
test
lods
mov
das
out
cmp
mov
ss
sti
fidivrl
gs
add
stc
xchg
js
sbb
adc
fisttpll
lret
pusha
sub
movsb
inc
dec
pause
pusha
adc
push
jnp
add
sbb
mov
or
je
out
loopne
xlat
xor
cs
mov
daa
test
inc
dec
jl
inc
inc
arpl
jmp
xor
je
in
jecxz
sbb
jne
mov
call
aas
cmp
pop
stos
mov
adc
jle
fistpl
mov
outsb
inc
jne
xor
in
shll
insb
mov
outsb
movsb
loop
rorb
out
dec
and
pop
xor
dec
add
mov
scas
cwtl
icebp
dec
fsub
cld
les
lret
sbb
cmp
mov
cmc
vmovmskps
sub
push
sahf
out
or
mov
fadd
pop
cmpsb
mov
insl
shrl
mov
lods
push
xlat
or
popa
in
outsb
dec
lods
icebp
loope
mov
sti
nop
jb
inc
lock
pop
shlb
cltd
cmp
cmp
nop
loop
fstpt
dec
clc
out
test
xchg
jmp
sbb
pop
pop
repnz
stos
jae
insb
out
xlat
jge
xchg
sbb
add
aad
sysenter
dec
inc
add
das
loope
xchg
insl
outsb
mov
push
in
dec
cmp
popf
jns,pn
jg
mov
mov
filds
cli
xchg
or
cld
push
fwait
inc
mov
adc
pop
pop
and
stos
out
cmp
adc
jns
xor
lock
dec
xchg
xchg
mov
pop
sarl
ffreep
loope
cltd
sub
in
mov
and
push
scas
mov
pop
push
dec
insb
push
sub
out
daa
pop
dec
add
mov
out
or
adc
mov
lock
negl
jp
sbb
insb
in
es
xor
mov
call
inc
lods
fbld
add
pop
out
gs
stos
das
stos
jae
jecxz
push
insb
push
popf
std
lods
and
push
imul
xchg
and
test
imul
scas
rclb
sbb
dec
mov
adc
fsubs
sub
adc
leave
insb
std
cmp
add
jg
pop
outsl
adc
fcmovne
or
sbb
or
add
add
add
mov
sbb
jo
adc
adc
rol
andps
inc
pop
mov
xchg
movsb
enter
pop
push
jp
xorb
mov
sbb
inc
jne
sbb
pushl
or
pop
dec
test
cld
imul
xchg
lret
clc
jno
movsl
lods
scas
aas
jbe
and
jl
test
mov
incl
cld
ret
cmpsb
lcall
enter
daa
xlat
mov
lock
enter
or
cmp
popf
aaa
ds
div
movsl
lret
and
mov
push
lcall
add
ja
xor
xor
cmp
xchg
lret
mov
pop
or
lret
push
frstpm(287
test
cld
outsb
sub
in
outsb
or
call
shlb
sbb
arpl
xchg
stos
push
mov
test
mov
mov
cmp
mov
push
leave
int
out
sub
inc
filds
mov
and
loop
lcall
popf
push
sahf
jns
out
test
call
xchg
xor
mov
inc
add
pop
adc
leave
or
mov
cld
fmul
jne
stc
xor
push
sarl
pop
mov
fldl
mov
mov
stc
outsl
xchg
mov
loop
movsl
fsubrs
cmp
adc
popa
add
popf
data16
and
mov
add
out
push
cmpsl
cli
push
xor
in
mov
inc
call
gs
jmp
loopne
cmp
pop
aaa
out
cwtl
adc
mov
scas
repz
pop
clc
cmp
xchg
aaa
add
cmp
xor
clc
test
sub
adc
or
pushf
xchg
and
sbbb
aad
fcmovbe
nop
mov
dec
fldt
mov
dec
test
mov
jecxz
adc
xor
lea
cmp
dec
mov
mov
dec
push
out
fcmovnb
and
ret
push
test
inc
nop
add
xchg
jb
sarl
mov
stc
testb
jb
or
push
mov
and
adc
out
cld
out
add
lret
mov
jl
lahf
xchg
push
lock
loopne
das
das
iret
add
sub
and
ret
call
loope
insl
mov
in
cmpsl
lret
jnp
in
popa
add
pop
movsl
lret
mov
push
sbb
mov
repz
adc
int
xchg
gs
cmp
cmp
inc
xchg
sub
add
cwtl
ljmp
popf
sarl
out
cmp
call
push
movsb
add
fldl
mov
xchg
dec
lahf
xchg
aas
test
mov
stc
sbb
mov
jl
or
fidivrl
jae
aaa
push
dec
lret
rolb
ja
add
dec
cmp
jns
cli
dec
in
xchg
mov
mov
rcr
mov
lcall
dec
out
push
lcall
inc
hlt
mov
gs
dec
xchg
arpl
jp
mov
iret
or
push
mov
jmp
outsb
dec
dec
subl
sub
mov
add
ss
sahf
jp
xchg
push
and
fcomps
jnp
mov
inc
icebp
mov
pusha
bound
ffreep
xchg
jnp
cwtl
jbe
pop
push
pop
fiadds
dec
jae
popf
aaa
push
das
mov
out
pop
xchg
cmc
push
cwtl
push
cld
stos
adc
adc
xchg
cmp
push
xchg
sbb
adc
out
stc
iret
mov
es
jecxz
inc
hlt
dec
add
popa
inc
mov
aad
sbb
or
pop
pop
inc
jle
insl
fidivl
cmp
int3
dec
or
ficoms
mov
xor
popf
sar
push
add
repnz
movsb
mov
imul
cmp
imul
pop
jl
jae
dec
inc
pop
icebp
push
call
enter
mov
dec
and
test
orl
in
lods
push
sahf
enter
daa
cmp
loope
pop
lret
mov
cmp
mov
ds
inc
movsl
shr
lds
sub
addr16
insl
sbb
or
add
sub
pushl
pop
dec
shlb
pop
dec
pop
xchg
push
je
push
xor
fdivl
and
pop
xor
insb
nop
or
or
xor
movsb
lds
mov
sub
mov
int
lcall
ds
jp
inc
scas
sarl
mov
cmp
mov
jo
sbb
jns
lcall
jg
call
cmovae
stc
pop
pop
add
or
std
lods
and
cmp
ja
divl
insb
aaa
xor
push
cmp
or
test
cmc
xchg
cmp
xor
adc
jbe
imul
xchg
clc
js
adc
dec
je
hlt
inc
mov
lods
xchg
or
mov
jge
inc
push
mov
in
or
add
cmp
cmpsb
gs
loopne
repnz
jnp
adc
pop
test
cs
xchg
adc
popf
cmp
jbe
aaa
mov
adcl
cmp
enter
mov
nop
arpl
lret
inc
mov
pop
pop
aas
je
cmp
lods
dec
xchg
sub
call
cmp
adc
cmp
and
fcomi
decb
gs
fcompl
lock
and
in
jb
xor
mov
test
pop
shll
out
not
inc
and
repz
mov
sbb
cli
lds
lret
sti
jns
mov
nop
divb
push
in
das
push
add
mov
dec
mov
push
mov
es
dec
insl
mov
scas
fisubs
scas
rol
popa
sbb
push
mov
inc
xchg
mov
mov
incb
rcl
rcrl
popf
shl
ret
push
popa
aas
mov
clc
sub
ljmp
xor
jp
push
mov
adc
cli
push
ljmp
push
stos
or
in
xchg
mov
push
mov
push
test
aad
xchg
loope
sbb
and
or
mov
push
out
test
add
xchg
xor
addr16
in
mov
int
sarl
pop
push
iret
emms
pop
xor
mov
sbb
clc
mov
mov
std
mov
flds
clc
ljmp
cmp
cmpl
into
out
push
or
mov
and
ret
adc
addr16
xor
cs
cmp
pusha
std
mov
mov
stos
pop
push
orb
xchg
fwait
mov
popf
dec
sub
lods
push
xlat
sbbb
lock
rorl
sbb
mov
imul
jns
mov
rcrl
jbe
jmp
push
pusha
leave
pop
mov
repz
push
jle
adcb
inc
std
out
fisubrl
jns
lret
sub
int3
aaa
xor
fidivs
call
inc
mov
in
inc
pop
cmp
jns
leave
fwait
mov
mov
jbe
xchg
call
sbb
pop
aaa
cmpsl
xchg
or
mov
out
clc
jl
outsl
xchg
dec
mov
and
lret
fimuls
lret
jo
scas
and
std
flds
test
dec
xor
inc
aas
jge
cmpsb
mov
jae
enter
daa
aad
sub
dec
aad
loope
or
sub
aaa
mov
ds
andl
xchg
ret
dec
sbb
sbb
out
and
stos
xor
daa
cs
jne
xchg
js
outsl
mov
xchg
push
mov
fcompl
mov
outsb
iret
or
sti
shl
imul
xorb
out
dec
inc
mov
pop
or
push
pop
sti
cmpsb
int
mov
sub
jnp
pop
mov
mov
rcll
pop
mov
aad
sbb
ds
test
sarl
mov
jg
iret
jle
fucomp
stc
adc
jl
int3
dec
ret
in
arpl
fdivs
scas
xlat
divl
ror
pop
pop
std
xor
pop
or
lds
mov
mov
xor
push
outsl
push
push
and
out
pop
call
add
out
lods
outsb
adc
mov
popa
dec
out
pop
jmp
mov
ja
sub
out
daa
jnp
sbb
pop
in
loopne
mov
add
push
test
lds
repz
repz
xchg
roll
jecxz
fistps
mov
jbe
mov
adc
pushf
call
cmp
cs
sbb
aad
push
lock
cltd
aad
inc
pushf
or
xchg
iret
inc
je
bound
cmp
lea
inc
popa
call
mov
dec
push
adcl
ret
or
mov
inc
arpl
cmpsl
inc
vprotw
jb
fsubl
pop
hlt
std
and
cltd
push
sarl
test
imul
xchg
cmpsb
mov
scas
inc
icebp
shl
jge
inc
std
cmc
lret
push
data16
ss
std
fs
in
cmp
mov
int
add
xor
insl
bound
insl
mov
dec
push
pushf
cmpsl
aam
xor
xor
sub
add
lods
and
adc
mov
shrb
inc
jno
test
dec
mov
push
jle
and
lods
fisttpll
pop
test
jle
rcl
mov
xchg
pop
repz
push
stos
inc
sbb
out
add
outsb
xchg
out
jbe
push
aad
insb
sqrtps
shr
or
mov
xchg
rorb
jp
test
xchg
xchg
pushf
pop
sbb
pop
and
or
adc
rcl
fstps
xchg
xor
add
lods
ficoms
decl
jge
in
ja
in
aaa
pop
xchg
jae
xor
xor
mov
ja
js
dec
aad
repnz
push
sbb
jnp
dec
adc
adc
mov
not
out
sti
inc
bound
out
xchg
add
jnp
lret
out
les
sub
cmpsb
xor
jb
mov
cmp
lahf
jnp
mov
xor
std
fdivrs
cwtl
or
filds
imul
inc
xchg
jae
fnstsw
popf
jb
mov
push
push
jnp
stos
sti
adc
sbb
mov
scas
stc
xchg
jo
and
int
lods
pop
xchg
dec
inc
imul
shl
sub
in
push
inc
mov
out
shrb
repnz
pop
push
ficompl
popl
bound
ds
and
int3
ficomps
pop
lds
pop
fdivrs
inc
add
mov
jmp
push
addr16
aas
jp
sbb
and
aaa
out
mov
repnz
mov
aas
icebp
dec
and
push
scas
jno
xor
psrlw
fcompl
or
nop
push
sub
pop
jo,pn
into
and
and
inc
enter
daa
aam
pop
cmp
lods
loope
loop
sub
lea
ds
jecxz
fbstp
and
cwtl
lahf
sub
test
mov
sbb
dec
add
mov
dec
pop
test
pop
pushf
mov
js
jmp
cs
fbld
loopne
mov
enter
cmp
outsb
xor
adc
ret
popl
xchg
xchg
mov
nop
mov
cmpsl
icebp
and
xor
pop
inc
cli
int
popa
outsl
sub
pop
cmp
lcallw
cmpsl
jge
mov
inc
cwtl
sbb
pop
sahf
bound
test
shrb
mov
hlt
stc
enter
push
je
adc
xor
fsubr
fucompp
divl
add
xor
test
pop
and
cmc
and
jge
dec
cmp
xor
test
aam
jae
out
mov
push
lahf
add
lock
data16
scas
lods
push
inc
fmull
mov
cmpsl
adc
mov
stos
and
xchg
arpl
sahf
dec
cmp
lods
pop
loopne
lahf
std
pop
xchg
lahf
add
sub
fldenv
add
repz
push
adc
push
and
cmp
into
sub
mov
pop
sub
fldt
xchg
insb
outsl
cs
mov
inc
push
nop
sbb
insl
dec
clc
mov
inc
scas
fmul
dec
or
fidivrs
lret
test
cmp
mov
dec
push
adc
cmp
sti
subl
dec
dec
pop
stos
xchg
hlt
inc
ljmp
aas
pusha
adc
push
sbb
lcall
notb
pop
std
adc
cs
cmp
scas
mov
xchg
pop
mov
shr
test
loop
jo
pop
lret
mov
les
mov
jns
mov
les
jmp
xchg
xor
es
repnz
outsl
jle
dec
ret
cmpsl
rcrl
and
dec
cmp
popf
out
mov
xchg
and
lods
mov
aam
jl
add
test
lret
ss
out
ljmp
sbb
popa
ljmp
ss
sahf
xor
xor
arpl
xchg
xor
cwtl
cmpxchg
cld
or
popa
shll
xchg
mov
pop
xor
test
int3
rolb
xorl
jae
jns
add
push
xor
addb
xchg
xor
js
movsb
sub
in
push
ljmp
out
mov
lret
sub
ja
inc
fimuls
mov
pushf
mov
xchg
mov
inc
jne
mull
repz
mov
bound
jle
jmp
iret
xorb
movsl
push
out
xchg
out
leave
adc
or
mov
and
add
out
aam
jle
clc
clc
in
fcmovbe
pusha
xor
fbld
lret
out
xchg
adc
outsb
pop
ret
scas
inc
inc
fwait
pushf
jae
arpl
js
les
or
stos
outsb
jmp
sub
xor
or
arpl
addr16
cmpsl
and
leave
dec
shr
hlt
xor
out
arpl
pushf
inc
mov
das
or
sbb
or
iret
imull
add
jno
int3
or
fsubrs
in
lds
dec
insl
mov
xchg
clc
adc
jb
je
fisttps
add
jge
jo
sbb
fcoml
jno
mov
jl
in
dec
xchg
push
dec
push
xchg
clc
cmp
push
mov
and
pop
outsb
test
loop
cmpsb
inc
pop
push
movsb
cmpsb
cmpsb
popa
pop
in
leave
cltd
enter
daa
rcl
add
loope
ffree
sub
mov
cmp
mov
movsl
out
std
and
fsubl
push
out
int
mov
lahf
add
aaa
jno
dec
dec
jmp
pop
ret
aas
ret
testl
push
aaa
and
fdivl
subl
cld
sub
adc
popf
pop
or
sbb
pop
mov
inc
mov
bound
push
pop
std
pop
int
sbb
sub
push
lret
ja
lcall
or
sbb
jb
sahf
add
sub
adcb
jg
jp
mov
scas
xor
jg
scas
fs
ljmp
cmp
test
mov
lret
loopne
push
enter
daa
or
inc
fs
imul
jb
and
gs
arpl
adc
add
add
xchg
cmp
mov
push
adc
mov
cli
mov
dec
lret
inc
testl
or
loopne
xchg
stc
pop
mov
and
sti
mov
xor
fildl
push
repz
push
xchg
pop
add
sbb
sub
add
hlt
out
sub
adc
fadds
andb
in
inc
aad
xchg
hlt
pusha
add
inc
ret
dec
test
shl
fimull
sbb
lds
mov
loopne
add
sarl
fildl
jno
inc
jno
enter
ds
ljmp
mov
mov
and
stc
mov
cltd
pop
pop
std
mov
add
mov
les
fimuls
inc
cld
fwait
inc
jmp
dec
mov
repnz
pop
push
das
stos
mov
lcall
mov
and
sti
es
lea
mov
out
cmpl
enter
sti
mov
stos
rcll
inc
pop
and
pop
inc
rorb
inc
cltd
dec
imul
mov
test
stos
fs
clc
push
jbe
xchg
and
loop
sub
pop
dec
decb
stos
push
sub
xchg
jl
ljmp
or
out
push
or
mov
adc
cmp
xor
cli
xlat
mov
ss
xlat
or
lcall
xlat
insl
aad
repz
into
add
inc
jo
movb
jns
test
xchg
adc
out
mov
sub
movhps
xor
dec
mov
and
mov
add
bound
aad
jne
cmp
fucomp
cmpb
mov
and
fdivrs
xor
andb
mov
int
pushf
jns
xor
cmp
hlt
ja
and
pop
insb
add
jnp,pt
lret
rorl
and
cmc
cli
filds
push
xchg
in
out
cli
mov
jnp
add
sub
inc
adc
stos
loope
sbb
sbb
mov
imul
lahf
scas
mov
lea
bound
and
push
add
ret
jns
mov
idivb
arpl
inc
inc
shrl
mov
pop
push
jp
sub
xor
add
sahf
inc
pop
sbb
pextrw
mov
test
or
mov
out
add
sub
movsl
movsb
push
sub
cmp
jbe
pop
cmpl
cmp
aaa
in
rorb
dec
jg
imul
jl
pop
mov
add
mov
pop
out
pop
jo
push
mov
lcall
test
lods
and
cmpsb
sub
fmulp
mov
sbb
loope
xor
push
pop
sub
mov
cmp
mov
movsl
in
bound
xchg
and
mov
pop
push
add
cmp
or
pop
ljmp
pop
inc
mov
push
sbb
mov
push
mov
sub
movl
sarb
aad
ds
xchg
mov
jb
and
sub
int
mov
add
cmp
xor
aad
push
mov
mov
mov
test
popl
jo
mov
mov
in
stc
ss
inc
fs
mov
ss
scas
cmp
arpl
push
mov
pushf
lret
pop
xor
fidivrl
or
cmp
dec
into
dec
shlb
mov
and
outsl
repnz
cli
adc
imul
cmp
add
stos
xlat
pushw
lods
and
mov
adc
mov
push
cli
or
jno
in
mov
dec
add
in
cmp
ja
loopne
pushf
inc
pop
rcl
dec
adc
sub
adc
pop
xchg
repz
xlat
xchg
sbb
popa
sbb
arpl
mov
sub
sbb
pushf
jmp
and
aad
lods
enter
imul
adc
dec
sti
pop
lret
je
sarl
jecxz
roll
lea
ss
cmp
ja
pop
daa
js
out
pop
mov
pop
icebp
outsl
inc
clc
into
lea
cmc
jnp
sahf
inc
xchg
or
mov
mov
pop
shrl
jle
pusha
into
add
mov
jbe
mov
add
cld
daa
dec
lret
mov
orb
test
jb
shrl
mov
jb
jg
inc
sub
xchg
xor
mov
inc
es
push
insl
cmp
mov
inc
mov
jbe
clc
lods
jae
outsl
mov
int
and
loop
test
shlb
sahf
fistpl
leave
jns
mov
orb
std
neg
clc
push
notl
xlat
jns
sarl
lcall
sub
mov
push
data16
movd
add
loop
or
push
out
xor
fldl2e
mov
arpl
cmp
jns
jle
jmp
and
or
pushf
arpl
jp
push
add
adc
jmp
mov
jns
adc
xor
and
int
mov
sub
xchg
ja
push
ret
mov
les
mov
orl
call
in
out
popa
rcll
xchg
jmp
mulb
out
mov
sub
xchg
stc
cmp
jae
jp
jae
and
insb
outsb
in
jnp
test
notb
in
or
fbld
rcll
insl
push
inc
in
dec
loope
sarb
js
mov
popf
out
mov
push
sarl
stos
push
mov
xchg
das
addl
add
jmp
test
test
iret
gs
ss
and
arpl
nop
inc
les
inc
push
stc
loopne
fidivl
dec
sub
jecxz
lods
pop
dec
stc
fiadds
out
lds
out
shlb
mov
cmp
cmp
ljmp
push
icebp
adc
xor
xor
mov
adc
insb
aaa
mov
movsb
in
inc
loop
jl
test
dec
outsl
pop
push
push
loop
xor
and
loope
dec
add
test
js
int3
inc
jnp
ja
lods
push
aad
xor
iret
daa
sarl
adc
iret
loope
aas
push
sub
test
ds
dec
popf
movsl
hlt
xor
and
js
lahf
mov
inc
sbb
mov
add
popl
fdivrs
pop
adc
js
iret
inc
pop
xorl
push
in
cld
fmul
mov
sub
mov
rclb
scas
popf
movsb
inc
addb
outsl
mov
arpl
xchg
pop
sub
gs
clc
int
cmp
pop
mov
iret
add
insb
push
movsl
sbb
addr16
dec
cltd
add
mov
fdivs
in
jge
fs
fld
adc
stos
xchg
cmp
push
fldenv
jb
or
xor
bound
xchg
into
das
mov
pop
xor
cmp
outsl
shll
shrl
xchg
adc
dec
add
cmc
aad
or
mov
mov
mov
xor
inc
hlt
adc
and
idiv
pop
ja
gs
repnz
mov
jae
mov
add
icebp
or
repz
mov
hlt
sbb
sahf
and
xlat
jb
inc
sub
cmc
imul
repnz
pushf
xchg
jnp
jmp
mov
test
sbb
or
adc
sub
jb
aas
je
dec
jbe
clc
pop
add
iret
aad
call
mov
inc
pop
xor
sarb
xchg
add
jg
mov
xor
jb
orl
cmp
sar
lock
or
std
pop
decl
cwtl
insl
mov
mov
lods
sub
sub
lret
es
adc
dec
jp
lock
jb
imul
sub
mov
outsb
in
inc
insl
and
pop
dec
mov
pop
cmpsl
rcrb
pop
mov
lea
lods
ficomps
sti
mov
js
jmp
pop
cltd
add
shl
mov
loopne
aam
inc
mov
rorl
and
outsb
clc
mov
loop
mov
jg
rcll
dec
fistps
stos
cld
inc
sub
or
enter
mov
or
sar
lahf
data16
pushf
mov
xchg
mov
or
mov
xchg
and
mov
jb
fwait
lea
push
sbb
shlb
add
pop
xor
jns
and
in
imul
mov
adc
decb
cld
add
ja
mov
fidivs
pushf
pop
dec
mov
or
mov
testl
xlat
pusha
imul
sbb
addl
icebp
out
mov
and
xchg
or
jl
pop
and
insb
fsts
fidivrl
xchg
mov
pusha
add
add
andb
pop
push
sahf
jle
mov
or
mov
adc
xchg
xchg
sbb
sub
scas
test
jmp
adc
and
aam
ret
out
leave
lods
insl
test
adc
aam
sbbb
or
jns
addl
or
add
pusha
and
das
cltd
fsubp
mov
repz
push
mov
mov
out
xchg
mov
movsb
xorb
mov
jge
jge
lods
in
sbb
or
mov
divl
scas
inc
jl
enter
sar
cmp
xor
jnp
pop
scas
pop
mov
test
inc
imul
cmpsb
das
pop
fsubr
pop
js
enter
daa
rclb
in
loope
cmpsb
sbb
sub
cmp
push
scas
orb
movsl
sti
aaa
dec
and
jecxz
lahf
test
leave
push
pop
pop
sbb
push
mov
add
cmp
mov
stos
xchg
jbe
pop
cmp
rclb
ret
push
and
rcr
xchg
cmp
hlt
test
outsb
mov
fisubs
cld
mov
push
lods
push
mov
aad
mov
mov
and
cltd
int
lahf
mov
pop
cmp
push
lcall
stc
mov
test
xor
lock
sbb
add
or
movsb
jo
orl
xlat
hlt
inc
ss
stc
cmp
fsts
divl
pop
movsl
lret
pop
xor
aaa
idivb
loope
or
aaa
xchg
adc
xor
mov
outsl
mov
popf
loop
adc
imul
test
pop
data16
in
icebp
cmc
aaa
mov
out
outsl
out
cwtl
xchg
cli
jae
scas
mov
mov
aam
sub
gs
jmp
mov
je
pop
flds
or
repz
mov
fsts
test
sub
in
out
aas
or
jmp
in
cs
lret
xor
pop
and
repnz
dec
je
cmovb
and
je
pop
sub
pop
cs
dec
push
and
ss
sbb
aaa
pop
addr16
inc
add
orl
adc
pop
aaa
mov
inc
push
inc
mov
dec
inc
dec
aas
fmull
in
mov
mov
rorl
lock
or
scas
adc
cwtl
sub
mov
jecxz
cld
sbb
inc
lret
xchg
sub
jb
mov
aam
lock
jno
movsl
push
sub
das
inc
sar
cwtl
es
scas
and
adc
cmpsl
iret
jae
mov
movsb
inc
fldt
mov
mov
jg
scas
mov
mov
or
adc
inc
scas
push
repz
enter
dec
clc
testb
loope
cmpsb
ljmp
iret
pop
dec
push
or
out
test
xchg
push
fistl
pushf
arpl
sub
ret
add
mov
rcrb
mov
imul
add
dec
das
xlat
inc
dec
divl
or
sbb
fwait
mov
jmp
cwtl
add
push
jmp
push
jns
addr16
xchg
push
icebp
mov
mov
mov
mov
out
xchg
fwait
jp
xchg
ret
pop
jo
mov
push
push
mov
xchg
mov
mov
out
pop
pop
pop
bound
shr
mov
mov
test
mov
sbb
lea
add
test
and
sbb
jnp
inc
les
add
imul
dec
xchg
pop
dec
call
inc
add
jae
and
push
test
mov
testb
push
push
adc
xchg
fnsave
sbb
and
imul
gs
call
mov
xchg
iret
and
inc
ret
mov
hlt
pop
fldl
inc
lret
or
hlt
mov
inc
div
outsb
ficompl
mov
int3
mov
sub
dec
mov
ja
stos
ds
inc
cmp
dec
movsb
or
push
repnz
test
je
xorb
sbb
mov
or
lahf
outsl
jl
mov
loopne
sbb
data16
test
scas
aaa
jge
and
fs
push
or
inc
cltd
pusha
cmp
and
enter
daa
iret
xor
cmp
mov
sub
movsb
xchg
cmp
mov
movsl
add
mov
push
xor
inc
sbb
aaa
movsl
xor
insl
pop
pop
hlt
sbb
clc
imul
idivl
cmp
pop
inc
movsl
sub
mov
jecxz
cmc
xchg
mov
pop
jg
subb
rorl
sets
mov
sub
imul
mov
or
pop
mov
lcall
xor
xchg
xchg
jle
test
push
add
je
repz
mov
mov
inc
fs
pop
pop
adc
les
cmc
jmp
cmp
xchg
dec
div
jp
lret
inc
xor
xor
cmp
or
or
outsl
div
add
cmp
push
loop
popa
fldcw
adc
fists
data16
lods
fcomps
jo
scas
xchg
xor
cmpsb
mov
imul
stc
mov
add
xchg
dec
pop
push
and
and
insb
cs
pop
das
sarb
dec
ret
fnstcw
pop
xor
xlat
inc
setbe
pop
sbb
adc
cmp
lock
sub
inc
mov
pushf
ljmp
cs
nop
pusha
mov
cmovb
cmc
mov
je
cmp
push
inc
cmp
dec
out
popf
jbe
call
mov
add
jbe
andl
aam
aas
jo
pop
ficompl
inc
lea
repz
push
mov
jb
or
mov
push
pop
rcrl
test
std
push
or
cwtl
jecxz
cmp
mov
in
cld
inc
aaa
lret
add
fwait
mov
ret
cmp
xorl
das
daa
out
mov
xchg
inc
mov
repz
lods
ret
pusha
xchg
jle
je
mov
dec
test
push
cmp
mov
nop
sub
ss
std
and
mov
xchg
xlat
shrb
fwait
xchg
xchg
cltd
sub
test
jne
mov
packsswb
inc
imul
add
enter
jno
mov
push
dec
out
push
fsubr
xchg
cwtl
sbb
into
inc
jnp
stos
or
pop
mov
xor
jge
mov
insb
add
test
rorl
xchg
jge
sbb
push
cmpsl
inc
out
stos
or
lcall
arpl
add
dec
sti
or
xor
jnp
jns
push
ss
cli
rcll
xchg
les
pop
jb
mov
dec
xchg
jb
xor
repnz
mov
shlb
addr16
push
jne
inc
mov
dec
xchg
out
stos
leave
std
sti
imul
mov
into
xchg
sbb
out
insl
jne
dec
and
or
daa
mov
rcrb
scas
jb
jnp
dec
std
jle
push
in
mov
das
fistpll
pop
adc
pop
leave
inc
or
cld
push
push
inc
pop
add
xor
inc
push
nop
and
stos
lods
movsl
push
sbb
lock
imul
or
inc
push
adc
jle
iret
xorb
leave
fwait
or
hlt
cmpsl
daa
mov
inc
int
dec
or
outsl
popf
pop
inc
jbe
popf
fimull
fldl
in
sahf
mov
movsb
jb
pop
xlat
out
fisubrs
adc
pop
jne
pop
mov
xor
jbe
add
lods
sub
lods
push
jbe
imul
sub
icebp
aaa
loopne
adc
movsb
fcmovnu
jno
mov
jl
test
push
add
scas
xor
xor
scas
push
sarb
add
or
mov
cmpsb
xor
mov
enter
daa
into
rorl
lods
out
fs
loopne
sub
icebp
test
ds
or
and
testl
push
add
cltd
mov
jo
mov
pop
ret
xchg
jl
mov
cmp
push
adc
fmul
les
outsb
test
rcll
in
jp
mov
out
mov
sbb
mov
notl
push
outsb
jo
int
push
inc
sub
add
ss
pop
lcall
dec
mov
dec
sbb
idivb
xor
cmc
test
xchg
sbb
aam
xchg
in
inc
mov
lds
stc
adc
fs
xor
cmp
std
cmp
dec
or
imull
lods
xor
or
or
pop
fmulp
fdivs
div
int3
xchg
and
call
adc
shrb
jo
adc
imul
data16
stos
lods
mov
addr16
lods
sbb
cli
fldcw
mov
fs
mov
jo
jnp
sub
gs
dec
insb
cmp
sbb
fyl2x
in
les
add
cmpsb
inc
outsb
xchg
sub
mov
dec
scas
outsb
xlat
das
sub
inc
adc
dec
cmpsb
pushf
xchg
cmpsb
aad
sub
and
nop
cmp
dec
xor
pop
inc
and
and
cmc
nop
je
lods
mov
dec
pop
mov
add
mov
xor
sahf
testl
outsb
nop
inc
pop
jge
out
inc
adc
out
sub
aas
sbb
shll
pop
mov
and
dec
stos
shr
xchg
std
cld
call
and
popf
idivl
icebp
mov
gs
jb
ror
sub
adc
pop
das
push
cmp
mov
mov
lret
ret
out
ja
testl
frstor
inc
adc
popa
shlb
gs
pop
js
lea
dec
sub
pop
idivb
or
outsb
dec
imul
cmp
push
jns
jp
cltd
add
clc
cmp
ret
imul
movl
pop
mov
xor
out
mov
rclb
rclb
push
add
jnp
aad
inc
xor
push
cmpsl
mov
outsl
mov
lcall
icebp
adc
mov
push
inc
jge
mov
fwait
sbb
push
push
stos
cs
push
jge
loope
loop
push
pushf
aam
out
fdivr
in
sarl
pushf
jp
mov
dec
js
xchg
cmp
adc
fisttps
jle
mov
lods
pop
mov
das
cmp
sub
jnp
mov
hlt
cmp
fldl
adc
pop
adc
stos
mov
adc
mov
ljmp
shll
imul
mov
lahf
cmp
jle
ret
push
in
adc
pusha
aad
dec
mov
sahf
pop
or
xchg
xorb
xor
or
cmc
popf
or
mov
iret
mov
stos
and
sbb
xchg
mov
scas
scas
jb
push
adc
jecxz
test
stos
pop
ret
repz
adc
ljmp
aas
pop
inc
rclb
or
ljmp
fiaddl
jbe
add
cmp
pop
push
push
fmulp
daa
dec
lds
xchg
nop
jle
mov
test
mov
mov
dec
pop
push
nop
jb
jbe
adc
jge
in
test
aaa
lahf
cmp
or
in
popf
jl
and
push
jecxz
movsl
xor
mov
subl
outsb
out
test
movsb
inc
cmp
and
mov
sub
mov
clc
jg
loopne
push
loope
mov
sub
adc
ds
movsl
movsl
adc
rcrl
cmp
fildl
das
adc
and
ficoml
inc
js
jo
pop
jg
sub
sti
lcall
sbb
sub
cmp
out
xor
sarb
push
orb
mov
stos
and
shl
clts
jno
add
jno
mov
pop
mov
or
enter
push
xchg
xor
clc
sahf
xlat
xor
test
inc
xor
mov
mov
decl
fs
pop
adc
cs
jnp
cld
cmp
or
outsb
inc
mov
repz
xchg
cmp
fnstenv
or
out
into
mov
push
xor
cmp
insl
arpl
fstps
lcall
and
data16
inc
mov
mov
add
or
daa
mov
iret
in
sti
pop
xorl
gs
mov
mov
sbb
adc
fisubrl
fldcw
js
les
addb
pop
int
cmp
mov
sub
pop
rcll
aaa
mov
pushf
inc
mov
jmp
dec
icebp
cs
ds
nop
push
cmp
xchg
sub
inc
xor
push
dec
dec
mov
cwtl
je
jecxz
ss
push
sub
call
mov
xchg
pop
pop
jp
orl
push
fistpl
mov
inc
sahf
fsubrs
jb
data16
addr16
lret
shll
outsl
push
sub
dec
std
mov
mov
mov
mov
mov
push
in
cld
popf
decb
mov
inc
scas
mov
cmp
lock
mov
test
aam
mov
ret
jle
jae
jp
mov
rcrb
cmpsl
int3
pushf
sahf
mov
jmp
shr
mov
jl
jp
xchg
inc
lods
mov
adc
cmp
test
ret
or
push
cmp
sub
rolb
xchg
sahf
cmp
push
popf
dec
shrl
pop
dec
push
or
sbb
inc
xchg
sbb
lods
jo
cmovns
call
xor
jecxz
mov
jb
lret
movsl
hlt
test
loop
xchg
call
or
or
adc
fwait
dec
or
push
test
sub
incl
lock
or
test
sbb
xchg
mov
call
inc
orb
lds
dec
push
adc
dec
sub
sbb
mov
mov
out
mov
addr16
jmp
pop
aad
addl
out
lock
or
frstor
xor
es
and
push
jmp
test
sbb
adc
xor
xchg
add
cld
aad
xchg
push
rcrb
adc
fnsave
jnp
push
int
xchg
popf
stos
add
mov
push
int
stos
xchg
jbe
xchg
loop
stos
sbb
pop
or
cmp
adc
pop
adc
cmp
mov
xor
arpl
popa
or
gs
inc
je
cmp
mov
cmp
int3
jp
pop
pop
xor
xor
fadd
stos
mull
repnz
cmp
movsb
lods
aaa
xchg
push
fistpll
dec
sub
jge
pop
popa
sbb
lds
mov
mov
jne
jle
xor
mov
xor
out
in
aam
pop
and
mov
add
dec
inc
inc
call
jp
mov
or
lods
ret
mov
pop
loope
stos
ljmp
mov
ds
jp
movsl
pop
cmp
and
pop
sbbb
inc
jae
xor
add
xor
outsb
fcmovnbe
popf
pop
aam
fistpll
mov
mov
stos
jb
cwtl
cmp
and
sub
pop
cmp
lcall
andb
mov
aas
mov
lock
and
out
push
je
lock
sbb
sub
fwait
pop
xor
rcrl
push
mov
cmp
sahf
jp
and
adcb
in
ror
jno
dec
outsb
cmp
mov
push
adc
lret
mov
pop
sub
imull
cmpl
pop
jle
or
mov
into
sahf
mov
js
sahf
push
nop
outsl
sub
xchg
loop
adcb
ret
add
stc
xor
sti
cs
stos
test
cli
aas
sub
mov
cmp
fdivr
push
jno
mov
mov
loopne
je
pop
mov
fcoml
shrb
pop
scas
outsb
les
dec
ds
push
aas
xchg
scas
inc
xlat
sbb
lds
sub
jl
mov
and
jmp
pushf
enter
in
aad
rcrb
lock
inc
inc
test
leave
je
nop
jbe
inc
push
mov
push
outsb
sub
and
cmp
pop
push
or
and
adc
fcmovne
sbb
pop
ret
adc
inc
and
cmpsb
inc
mov
inc
cltd
jb
loop
mov
repnz
roll
and
dec
dec
repnz
adc
add
subl
cld
enter
push
inc
or
sub
fwait
lock
pop
mov
lock
jl
cmp
push
push
sbb
or
inc
es
cmpsl
in
dec
lcall
mov
add
mov
lahf
fidivl
and
test
in
adc
and
or
mov
add
in
lods
fucom
loop
clc
mov
xor
mov
jl
ret
inc
sub
scas
stos
cmpsl
notl
out
jnp
addr16
insl
das
xchg
push
mov
orb
and
add
or
test
push
adc
movsb
xchg
stc
dec
or
loop
popa
enter
fs
sbb
add
push
dec
or
or
js
sbbl
movsb
jle
add
imul
idivl
jns
loop
in
dec
pusha
xchg
cmp
add
mov
xor
dec
pusha
or
mov
ja
mov
or
ja
jne
sbb
push
out
fwait
mov
shr
cltd
push
rcll
add
out
pop
loop
add
jns
dec
sub
jp
sbb
out
insb
lock
jnp
repnz
enter
cmp
shll
pushf
fistps
or
xchg
test
or
inc
cs
jae
and
push
nop
lahf
adc
rcrl
push
mov
dec
imul
cmp
push
sbb
push
dec
imul
outsl
push
lahf
and
adc
nop
iret
lahf
movsb
cmp
rclb
hlt
mov
inc
arpl
ljmp
fistl
loopne
inc
repz
fisubl
loop
mov
mov
pop
fs
dec
lds
test
test
daa
add
cmp
inc
dec
movsb
aaa
jnp
push
cs
pop
jbe
mov
jge
nop/reserved
getsec
sbb
data16
jno
lret
and
pop
aad
dec
or
xor
xor
inc
mov
scas
mov
daa
and
in
push
cmp
test
repnz
rolb
lret
into
hlt
cmp
jle
or
aas
sub
shrb
xor
mov
and
sub
lahf
inc
inc
out
push
jle
mov
add
ja
xor
and
lods
pop
sti
call
stc
pop
std
fs
ret
push
int3
push
out
pop
in
lret
inc
aam
lahf
ret
test
pop
unpckhps
pusha
jne
xchg
xlat
fs
xorb
mov
fbstp
push
pop
push
ja
imul
divb
sub
rep
lcall
or
outsb
bound
outsl
and
aaa
lret
cmp
cmp
cmp
xorb
in
sbb
xor
sbbl
or
test
addl
xor
xor
outsl
or
sub
lcall
call
cwtl
data16
cmp
div
inc
out
mov
cli
jb
mov
jno
push
in
movsl
lea
mov
lea
inc
or
fmuls
add
mov
fsts
lock
repz
nop
xchg
jno
push
sbb
add
in
call
jbe
in
fs
xchg
inc
popa
jmp
mov
cs
aad
mov
cmp
and
test
mov
fsub
push
cmp
lea
push
fld
mov
das
pop
rorl
jl
sahf
dec
pop
push
mov
test
repnz
idivl
jb
xchg
jmp
test
out
rcl
or
std
icebp
test
cld
leave
mov
jbe
or
aaa
pop
xchg
cld
xrelease
mov
jo
lock
cmp
das
mov
idivl
aam
insl
cmpsl
ret
pushf
mov
addb
mov
dec
xchg
nop
add
fbld
cmp
inc
jl
pusha
cmpsw
mov
ret
and
pop
stc
mov
shl
mov
cltd
add
jmp
mov
fisubrl
fisttpll
sub
out
pop
sahf
xchg
sbb
mov
cld
arpl
rcrl
jle
pop
mov
add
out
ficomps
push
push
arpl
sysret
cmpsb
imul
cmp
insb
xor
lcall
js
lret
dec
jae
aam
faddl
xchg
arpl
inc
inc
xchg
fwait
cmpsl
xorb
out
jb
add
mov
in
xor
or
pop
dec
in
or
xchg
mov
idivb
pop
pop
push
ja
mov
push
mov
adc
mov
dec
repz
jne
test
es
outsl
bound
fucomip
nop
and
repnz
andl
out
inc
les
je
data16
jp
add
insb
pop
sbb
jnp
or
in
ja
pusha
cmpsb
mov
sti
xchg
jl
jg
mov
scas
inc
cmp
pop
push
push
mov
popf
clc
sbb
mov
mov
setno
outsb
xor
scas
xlat
mov
adc
es
cmpsb
push
ret
jns
ja
call
arpl
lds
or
pop
lahf
mov
ficompl
xor
add
fxch
push
xchg
fidivs
sub
shl
lock
jle
nop
cmp
loop
movsb
ret
push
jge
jb
sarl
and
sub
bound
or
stc
jno
jo
jl
in
jbe
js
cmpsl
push
mov
jns
popf
je
scas
xchg
inc
lds
dec
pusha
ljmp
sbb
cmpsb
inc
lods
in
and
loopne
lret
cmp
test
and
jns
and
push
push
movsl
and
or
rclb
icebp
aas
sbb
sbb
xor
leave
inc
pop
and
pop
pop
cmp
repz
xlat
push
inc
cmpsl
jb
jbe
repnz
pop
out
pop
or
rclb
and
mov
or
mov
mov
cmp
jp
mov
sub
xchg
push
pop
xor
inc
rorl
fstpl
mov
imul
jg
ret
push
mov
out
stc
out
xchg
xchg
fs
adc
sti
xor
cmp
imull
sub
xor
jl,pn
mov
mov
mov
jmp
filds
xor
outsl
ljmp
imul
mov
lods
pop
xor
and
test
clc
mov
adc
push
sti
insb
pushf
outsl
cld
cmp
gs
aas
adc
jae
xchg
pop
lret
adc
xchg
int
jmp
ds
repz
push
sbb
cmp
mov
sub
sub
push
in
adc
in
inc
int
jmp
pop
mov
aad
out
nop
cmpsl
xor
dec
scas
sub
insl
and
xchg
je
popa
mov
stc
lea
out
xor
fistpl
inc
addl
xchg
inc
fldt
mov
jg
xor
je
out
sbb
int3
jb
je
mov
or
shll
dec
div
and
std
cwtl
inc
mov
mov
pushf
aam
imul
xchg
cld
push
or
das
stos
mov
mov
and
dec
xor
das
xorb
sub
data16
sub
sbb
daa
and
dec
adc
adc
jg
lret
in
cmp
in
mov
mov
sbb
sarb
ret
push
test
stos
mov
test
fnsave
xchg
pop
xchg
pop
mov
pop
shll
mov
stos
test
pushf
out
inc
adc
push
ds
decl
sub
or
jae
mov
jnp
jno
fiaddl
cmp
jno
lahf
sbb
fsubrl
mov
arpl
mov
or
arpl
lcall
jbe
popf
and
mov
mov
mov
in
mov
pop
sbb
pop
dec
inc
data16
leave
cli
mov
cmpsb
jg
int3
dec
cmc
mov
popa
imul
subb
fmull
aam
mov
inc
mov
sub
outsl
leave
call
jp
pushf
int3
and
enter
adc
push
mov
in
pusha
push
pusha
inc
in
xchg
fistps
dec
xchg
dec
jge
jmp
and
push
push
cmp
pop
sti
mov
lret
sub
jbe
out
scas
sbb
pusha
jae
popa
daa
and
push
sub
inc
push
iret
pop
lods
jo
testb
inc
push
push
xchg
iret
cmc
inc
fdivl
cmp
xchg
incb
xchg
loope
int
push
add
dec
ror
popf
loope
ret
ficomps
xor
jae
push
sar
dec
mov
sarl
cmp
xor
jbe
cs
jge
movups
call
ja
or
std
jno
cmp
out
push
push
outsl
test
fdivs
jb
scas
jno
and
loope
mov
push
shlb
or
push
orb
leave
mov
cmp
mov
cmp
xchg
rcrb
and
add
mov
and
ss
xchg
in
cmpsl
movhps
pop
pop
stos
out
sbb
js
push
pusha
pop
jnp
adc
icebp
ret
push
popf
adc
fsubl
mov
sbb
adc
sub
cmp
fwait
mov
adc
lds
int
push
fwait
sub
cli
outsl
lcall
popf
adc
arpl
test
arpl
jg
ret
inc
icebp
insl
stc
movsl
add
fs
scas
adcl
xor
xchg
lods
fdiv
out
xchg
imull
ror
fnsave
rolb
loop
fbld
or
xchg
cli
into
inc
imul
scas
cltd
sbb
scas
and
and
and
adc
push
rolb
aaa
sbb
add
xor
mov
xor
out
pop
cli
fsubr
out
lahf
out
in
jnp
jns
sbb
pop
loopne
gs
ficompl
jmp
mov
add
mov
dec
xor
mov
mov
mull
out
sbb
jbe
dec
xlat
push
pop
sub
mov
pushf
in
sub
cs
das
lods
aad
nop
add
or
xor
je
frstor
pop
repnz
call
mov
pop
pop
daa
icebp
das
subl
lods
pop
lods
pop
cs
mov
jns
or
aas
xor
mov
mov
xchg
repz
divb
aam
std
aas
xchg
stc
cwtl
inc
enter
rep
mov
icebp
in
idiv
dec
pop
pop
lret
sahf
lahf
sbb
cmpl
lock
popa
pop
fsubs
popa
orl
sahf
push
ret
mov
mov
insl
pop
push
int3
dec
mov
stc
mov
inc
pop
pop
lods
ss
fdivrs
or
test
xchg
popf
rorb
pop
test
push
mov
pop
cltd
push
dec
stos
neg
pop
pop
jle
fs
xchg
lcall
ror
pop
mov
mull
stos
je
dec
out
movsb
clc
pop
xchg
inc
lret
sbb
add
inc
fs
mov
addb
fwait
subl
out
icebp
sbb
xor
push
out
mov
mov
add
mov
cmp
icebp
out
cld
jecxz
xor
dec
stos
jns
cmp
in
mov
xchg
daa
andl
mov
aam
ja
or
test
cmp
into
mov
sub
sub
jne
jge
mov
outsb
lret
ljmp
jle
repnz
mov
cmpl
out
inc
sub
push
jle
sub
jp
jmp
and
jb
insb
xor
mov
jle
int
in
lods
je
fdivl
fistpll
push
xchg
and
rcrb
jl
inc
dec
pop
mov
sbb
cwtl
popf
inc
lds
push
or
stos
pop
mov
ds
mov
push
test
cli
push
je
or
iret
mov
jmp
leave
cmp
imul
mov
lea
or
push
sbb
jo
fiaddl
adc
int3
mov
fdivrp
jmp
jae
pop
movsb
ss
and
sbb
dec
adc
movsb
fdivrs
push
pop
pop
sub
adc
inc
sbb
adc
jno
and
xchg
dec
push
and
adc
push
test
scas
push
adc
mov
fwait
lahf
add
stos
sub
in
dec
iret
in
enter
daa
enter
fisttps
loope
out
lea
es
pop
ds
and
aas
test
insb
int
push
mov
add
pop
sbb
sub
test
jo
pop
js
mov
pop
push
jno
push
hlt
movsl
stc
fmul
cmp
sub
outsb
daa
pop
adc
push
adcl
mov
call
andb
in
push
sub
int
fiaddl
adc
sbb
xor
mov
sarl
lods
sbb
cmpsl
add
jle
mov
mov
cltd
das
pop
stc
pop
push
fldenv
inc
adc
xor
lret
cmp
mov
adc
sub
xchg
xor
pop
jmp
into
sub
sbb
jbe
dec
xor
cmp
jo
mov
adc
adc
xchg
add
inc
pushf
data16
lods
sub
aaa
out
clc
sbb
or
cwtl
in
out
out
lret
incb
push
gs
fldcw
test
leave
add
or
ja
cmp
sbb
push
sarl
cmpb
sbb
mov
fst
test
jne
adc
iret
fs
xchg
pop
shr
xchg
ljmp
dec
push
mov
xchg
popf
xchg
nop
pop
xchg
outsb
dec
insb
filds
jno
dec
mov
dec
push
jg
rol
pusha
push
test
outsb
mov
call
das
add
addl
pop
fisttpl
mov
inc
ds
rolb
mov
aas
aam
in
jb
xlat
clc
mov
push
frstor
rol
hlt
or
jp
pop
std
out
mov
mov
into
pop
mov
push
icebp
mov
mov
mov
int3
mov
mov
lock
das
inc
mov
out
imul
mov
ss
dec
dec
popa
or
add
stc
cld
dec
xchg
cmpsl
fistpl
mov
pop
and
push
stos
mov
mov
pop
mov
mov
inc
shlb
repz
test
ds
push
or
orl
lahf
push
dec
ljmp
dec
pop
mov
mov
out
pop
aam
xchg
mov
push
hlt
bound
inc
inc
add
jbe
xor
and
and
sub
test
and
outsl
jp
sbb
in
inc
pop
hlt
xchg
or
cmp
jb
push
fmul
scas
add
or
dec
lcall
mov
mov
dec
mov
imul
mov
rcll
ja
or
xchg
adc
pop
in
mov
push
mov
jne
adc
aaa
nop
imul
pop
pop
inc
bound
add
jmp
push
call
push
out
movsl
inc
sub
gs
daa
xlat
dec
jp
out
std
and
push
insb
pushf
or
jmp
in
pop
adc
mov
xchg
cmc
nop
cmpsb
pop
push
xchg
lcall
pusha
ja
pushf
mov
test
dec
add
stos
ror
inc
xchg
xchg
ljmp
aas
out
std
scas
add
lahf
push
mov
mov
iret
sbb
je
sbb
nop
leave
dec
hlt
mov
and
mov
inc
loop
sbb
int3
xor
out
jmp
lea
or
inc
lea
mov
fisubs
mov
pusha
mov
ja
xchg
push
mov
movsb
push
push
sub
je
jge
js
sbb
pop
aaa
sbb
mov
jl
fimull
add
xor
aam
jo
stos
mov
das
test
and
es
test
data16
inc
adc
jge
lret
in
ss
dec
enter
daa
stos
push
cmp
jl
loope
lcall
cs
adc
xor
push
lret
sbb
cs
imull
insb
nop
jno
xchg
sbb
xor
stc
cmpl
fdivl
adc
pop
pop
pushf
outsb
cmp
pop
adc
loope
fisttpll
sarl
mov
ret
sub
push
sbbl
int
inc
jb
mov
mov
lcall
xchg
mov
dec
sbb
sahf
test
jo
sbbb
push
mov
mov
xor
mov
sahf
into
mov
or
xchg
or
insb
mov
outsb
lret
jns
jle
je
xor
jb
into
or
mov
subb
dec
push
daa
imul
fildl
push
scas
cmp
or
lods
adc
clc
mov
rcl
cmpsb
push
and
ds
inc
mov
push
iret
adc
gs
gs
cmp
loopne
and
adc
arpl
les
insl
repz
xchg
jbe
jge
cltd
sbb
in
and
call
xchg
and
inc
push
inc
pushf
inc
pop
and
mov
jae
mov
adc
push
cmp
dec
lret
dec
jg
cmpsb
in
dec
sbb
pop
jecxz
jb
arpl
in
mov
cmp
scas
mov
pop
lea
fcomps
ja
mov
jge
repnz
dec
inc
lds
xchg
aas
jae
in
jb
push
in
mov
test
jne
idivb
loope
cwtl
mov
sub
mov
mov
cld
lahf
xchg
jl
loopne
es
pop
xchg
shrb
icebp
aam
and
es
imul
and
hlt
repnz
mov
jae
lods
or
add
dec
cmp
and
mov
mov
shlb
adc
test
movsl
mov
in
push
into
sar
stos
and
clc
fidivl
scas
ljmp
pop
dec
incb
push
int3
xor
push
lahf
xchg
sarb
push
iret
xor
stos
add
add
xor
notl
xchg
subb
mov
sbb
mov
or
pop
inc
fwait
arpl
mov
add
sub
cmp
push
xor
movsl
int3
in
pop
cmp
mov
mov
mov
dec
int3
outsb
ja
mov
pop
cmp
dec
sbb
cmp
inc
jne
pop
sub
test
bound
cmc
xchg
xchg
push
call
out
pop
stos
sub
pusha
mov
es
cmpsb
pop
and
and
lods
jnp
push
pop
jle
jecxz
in
jae
pusha
adc
dec
fbstp
inc
xor
push
fldl
jae
pop
xchg
pop
test
popf
xchg
std
push
mov
mov
mov
xchg
in
cmp
cwtl
sub
mov
push
add
adc
fdivrs
das
shll
leave
push
adc
hlt
decl
arpl
xchg
inc
in
fwait
or
inc
loope
inc
outsb
pop
scas
mov
add
jb
dec
imul
lds
pop
jb
mov
lret
cmp
mov
push
jbe
inc
jmp
popa
add
aaa
fmul
mov
cmp
iret
jno
imul
xchg
fisttpl
cmpsb
pop
push
sbb
ret
jo
out
scas
push
imull
and
popa
call
inc
mov
pusha
push
in
sbb
xchg
imul
pusha
nop
loope
imul
cmp
jge,pt
loopne
aam
inc
lock
lahf
ficoms
push
popf
mov
mov
jmp
not
das
adc
mov
dec
sbb
cmp
push
mov
and
dec
outsb
pushf
sbb
mov
sbb
cwtl
mov
xchg
mov
out
inc
push
xchg
lahf
sub
insb
jge
jecxz,pn
lcall
inc
mov
push
sub
jnp
mov
test
imul
mov
pop
jg
fldlg2
mov
dec
sar
lret
fs
out
adc
add
ss
cld
dec
cmp
daa
add
lret
mov
push
dec
cmpb
stc
or
jne
lock
xchg
cmc
add
shll
shlb
loop
aas
stos
imul
scas
add
pop
xor
mov
icebp
mov
mov
mov
pop
mov
mov
and
mov
lcall
pop
adcb
xor
fldcw
or
repz
mov
xchg
inc
and
cmp
cmp
daa
cld
xor
ljmp
adc
xor
cs
in
nop
adc
dec
sub
inc
mov
xchg
lret
je
push
mov
data16
add
inc
sub
sub
subl
and
cmp
inc
dec
icebp
cmp
xchg
aas
adc
ja
hlt
or
mov
xor
dec
shll
pushf
testb
jge
xor
jbe
jbe
shll
xor
push
stos
cld
lret
lret
jmp
sbb
shll
das
jno
mov
inc
leave
aam
filds
ret
addr16
es
bound
pop
mov
jl
shll
push
inc
popa
mov
jmp
mov
lds
es
pop
out
cmp
rolb
insb
push
cltd
pop
int3
test
mov
adc
fst
fnsave
xchg
push
in
adc
ror
scas
mov
stos
inc
test
adc
stos
sbb
psrad
add
negl
or
and
inc
cmp
dec
jbe
pop
test
dec
xchg
xchg
and
inc
xor
dec
and
push
shr
add
inc
in
movsb
flds
adc
cmpsb
push
test
mov
lock
adc
inc
mov
fidivs
add
lea
mov
cmp
mov
jbe
jne
popa
adc
in
push
jl
aad
lods
bound
inc
cmp
arpl
jmp
out
jnp
iret
subb
pop
adc
jp
adc
jo
sub
mov
lock
fmul
in
in
jg
lods
jg
movsb
lea
lds
and
xchg
fwait
popf
mov
or
out
stos
mov
scas
enter
jnp
sbb
lds
adc
out
enter
push
leave
lret
hlt
dec
mov
arpl
push
mov
push
in
dec
xchg
ficompl
xor
int3
out
clc
pop
jle
fcomp
out
lods
lds
ja
mov
sbb
cmpsl
jns
jns
jge
or
jbe
or
sbb
jne
aaa
xchg
repnz
or
js
jno
int3
jl
rolb
mov
insb
std
xor
fs
scas
in
insl
mulb
sub
cltd
dec
push
cld
pop
test
cmpsb
shlb
add
dec
jns
movsl
daa
lds
jg
xchg
pop
subb
lock
test
je
add
push
jo
xor
mov
stc
add
das
push
xor
add
pop
in
sub
jb
pop
ja
test
daa
or
xor
fmul
mov
subl
inc
jbe
xchg
pop
add
out
mov
mov
adc
and
xchg
push
mov
cmp
test
xchg
pop
pop
lods
cmp
sbb
mov
xor
sahf
out
sub
iret
repz
jmp
mov
andl
inc
adc
cmpsb
ss
pop
cmpl
fnstcw
mull
aaa
lret
je
sub
dec
cmp
xor
or
pop
or
and
lret
je
xor
sti
mov
loop
xchg
imul
clc
add
jae
adc
and
fsubs
adc
mov
daa
push
lock
stos
hlt
scas
gs
fchs
jp
rcrb
sub
lods
fchs
and
jne
push
repz
adc
add
fstpt
bound
shrl
jb
sub
pushf
cwtl
fbstp
js,pn
nop
aad
sbb
fimuls
jnp
inc
int3
imul
je
xchg
jecxz
cmpsb
mov
imul
or
jg
ss
lods
lcall
push
divl
fistl
insb
mov
shrl
jo
mov
jle
inc
icebp
fnstcw
mov
inc
sub
inc
sbb
std
fstpt
test
jbe
lahf
mov
ds
inc
mov
fmul
pop
sub
in
push
cmpsl
mov
ja
lock
popa
das
fucomp
lds
cmp
icebp
or
notb
es
repnz
dec
ja
js
les
adc
popa
mov
lahf
mov
xchg
cmpsl
add
mov
or
stc
das
cltd
dec
sub
pop
adc
addl
mov
xchg
xchg
test
scas
cwtl
sub
pop
mov
dec
pop
out
xor
xchg
pop
mov
jecxz
inc
add
or
mov
sahf
inc
mov
mov
push
test
ds
xchg
xor
sbb
inc
and
movsb
cmp
adc
push
sarl
add
dec
js
int
cmp
aam
pop
mov
add
mov
jnp
mov
sarb
adc
dec
add
scas
jno
mov
xor
inc
int3
cmp
and
mov
xor
jmp
mov
incb
push
sbb
sub
push
adc
stos
jp
xor
fnsave
jnp
sahf
arpl
leave
jle
insl
leave
xor
push
scas
fcomip
testb
cld
mov
cli
jae
sbb
push
in
pusha
popf
loop
inc
mov
push
pop
xlat
stos
sub
push
xchg
lcall
imul
scas
sub
push
nop
filds
pop
stc
xor
cmp
or
push
mov
inc
jg
hlt
xchg
sbb
arpl
roll
jge
or
cmp
movl
int3
sarb
pop
lods
jno
fimuls
lret
adcl
bnd
test
movsb
add
out
push
pop
lods
jbe
inc
mov
scas
les
aaa
push
fwait
mov
jno
inc
push
jl
loop
dec
adc
jle
fidivrs
outsb
xor
mov
call
movsb
test
lcall
push
ffree
in
jmp
aaa
enter
daa
les
cmp
jae
sub
test
ds
clc
test
sysret
lods
lahf
sbb
sti
push
inc
aam
sbb
xchg
call
xor
sub
mov
ds
or
js,pn
sub
pop
mov
into
push
jbe
push
push
push
stc
fdivrl
sub
inc
xor
xor
icebp
shlb
cmp
cli
push
mov
and
incb
mov
int
fsubrs
pop
sub
lcall
jno
lods
jecxz
sbb
imul
sub
loope
enter
in
popf
stc
cmp
push
fs
pop
lret
adc
xor
cmp
popf
inc
fcomi
and
add
xor
ss
cmp
ja
or
call
cmc
xchg
gs
outsl
and
sub
add
cld
imul
add
mov
xchg
cmc
adc
mov
outsb
xor
mov
inc
pop
adc
pop
in
xchg
repnz
dec
pop
gs
sbb
pop
test
notl
pop
sub
pop
jns
les
mov
xchg
mov
sbb
popf
bound
sub
xchg
inc
mov
dec
jmp
lret
xchg
fisttpl
add
mov
dec
nop
leave
inc
pushf
dec
call
jns
dec
jge
je,pt
inc
add
mov
ficomps
call
sub
or
sbbl
out
push
pop
fistl
xor
les
push
jp
jb
or
mov
dec
lret
inc
sar
lea
xchg
cwtl
in
pop
jnp
xor
xchg
xchg
icebp
sbb
cld
and
lret
leave
xor
cwtl
mov
subl
mov
adc
aam
pop
pop
ret
test
xchg
es
dec
mov
cmpsl
ret
out
hlt
mov
mov
jle
mov
mov
ss
pop
pushf
jns
sub
xor
lods
mov
arpl
cmp
push
pop
dec
mov
pop
cld
push
clc
mov
adc
and
insl
sarl
sub
mov
out
xchg
leave
inc
xchg
movsl
icebp
push
pusha
es
push
lahf
dec
add
rorl
jnp
or
outsl
sbb
loope
dec
inc
fcomps
xchg
test
mov
mov
or
stos
ja
lock
pop
add
js
call
test
xor
cwtl
or
int3
mov
xchg
mov
push
mov
mov
jnp
jbe
test
rorl
or
mov
test
mov
mov
fnstsw
xchg
aaa
lock
adc
push
into
and
pop
movsb
out
sub
sub
push
lods
mov
jp
add
and
out
jnp
pandn
stos
hlt
in
or
fists
dec
stos
xchg
inc
xchg
ljmp
int3
divb
loopne
push
test
sbbl
inc
fildl
lock
sbb
outsb
pop
imul
xchg
scas
mov
cs
xlat
scas
test
aaa
lea
xchg
daa
in
ret
xor
mov
add
arpl
push
inc
out
sbb
push
jmp
repnz
xor
add
or
mov
fwait
mov
sub
aas
lds
mov
imul
in
sahf
cmp
ds
movsb
mov
int
jbe
jno
jge
sti
mov
dec
cltd
ljmp
push
cmp
loop
jl
and
and
imul
or
lret
and
cmp
scas
cmc
or
js
dec
xlat
cmpsb
leave
outsl
in
shlb
sub
cmp
inc
lret
loope
scas
add
in
xor
ljmp
movsl
push
adc
and
mov
sbb
out
add
mov
xor
insb
adc
js
mov
js
jnp
pop
cmc
fdivp
push
jp
push
cmpsl
cwtl
add
and
pop
sub
mov
adc
dec
xor
sbb
ss
xchg
mov
and
jno
dec
pop
int
shrl
ja
icebp
pop
stos
outsl
daa
lcall
rorl
inc
push
sahf
xor
mov
addb
jne
cmp
stc
out
ja
adc
xor
cmp
pop
inc
aaa
mul
pop
cltd
lret
dec
xor
fcomip
cmp
nop
jne
mov
mov
cmc
pop
mov
xchg
outsl
add
sub
mov
adc
cld
movsl
add
mov
testb
mov
cli
or
mov
std
push
and
xor
mov
gs
xlat
loopne
jge
pop
mov
iret
xchg
dec
je
les
pushf
rclb
jb
cmp
aad
xlat
in
test
adc
mov
jmp
add
cs
aad
mov
jne
inc
mov
and
je
push
jnp
lret
outsl
ss
lea
or
jne
mov
stos
xchg
xor
mov
jbe
mov
test
jae
xchg
pop
jle
fadds
inc
mov
aas
out
sarb
mov
aad
dec
rorl
xchg
leave
jae
std
sub
cwtl
cmpsl
cli
mov
iret
stos
mov
cwtl
mov
out
ljmp
dec
enter
push
pop
mov
out
sub
das
fwait
call
xor
sub
int3
aam
adc
cwtl
lret
jne
fwait
sbb
cwtl
pop
cmpsl
ret
mov
iret
mov
ss
int
fisubl
pop
dec
clc
sarb
mov
outsb
out
pop
mov
xor
fldl
out
cltd
push
xchg
adc
scas
ljmp
mov
stc
sub
stos
push
fmuls
imulb
xchg
in
mov
push
cmp
ud0
add
divps
repnz
ret
xchg
xchg
nop
xchg
fmuls
ret
outsb
test
fnstsw
ljmp
inc
cli
and
sbb
pop
cld
push
push
pop
js
add
xchg
movsb
push
pushl
addr16
jns
xor
xchg
add
mov
femms
mov
ss
ja
mov
dec
jmp
adc
imulb
mov
lock
push
xor
mov
cld
out
jb
fisubl
scas
call
xchg
dec
das
lods
sbb
das
out
scas
daa
sub
dec
fstps
and
jp
mov
mov
das
insb
mov
mov
lea
jle
sbbb
scas
ret
pusha
jle
xor
xchg
adc
es
push
push
inc
xchg
mov
xchg
push
imul
mov
test
jg
adc
mov
imul
sub
out
mov
sbb
adc
gs
inc
leave
das
jp
hlt
sub
push
arpl
push
inc
icebp
sub
mov
inc
push
dec
fidivl
xchg
dec
test
daa
pop
or
mov
leave
icebp
sarb
lahf
repnz
push
scas
cmp
lahf
pop
push
cmc
jg
jbe
adc
jge
adc
mov
or
jmp
in
dec
lock
and
movsb
shll
or
jne
popa
scas
mov
mov
test
pop
adc
faddl
cmpsb
pop
sub
mov
push
leave
daa
ret
cmp
stc
xchg
fimull
xor
cltd
inc
mov
insb
dec
shld
mov
inc
cli
dec
lahf
pop
cmpsb
mov
sbb
pop
add
stc
inc
xor
xchg
cmp
repz
pop
pop
xor
fldt
xor
fmul
jl
sub
xchg
ret
outsb
sub
nop
jle
shrb
bound
cs
test
lods
lahf
or
xor
push
xchg
mov
jmp
repnz
lcall
dec
mov
in
sahf
fdivrs
add
and
jg
xor
stc
cmpsb
cli
mov
adc
ja
ss
cmp
hlt
fcoms
faddl
mull
jmp
xor
jle
or
jnp
jl
mov
xor
jnp
sub
repnz
add
les
lcallw
adc
mov
adc
mov
push
ljmp
subl
mov
adc
pop
gs
ja
dec
sub
mov
adc
imul
test
les
enter
sbb
cmp
adc
clc
xlat
and
ret
sub
ret
rclb
hlt
popa
push
jmp
jle
mov
and
dec
cmpsb
fcoml
add
aas
inc
je
mov
jecxz
jb
jb
out
fsubs
call
sub
mov
or
into
loop
mov
mov
xor
aas
mov
shll
fistps
and
cmp
testb
std
sarb
xlat
mov
ret
add
icebp
mov
lret
cmpsl
lcall
repnz
and
mov
and
iret
aam
and
es
subl
repz
mov
out
dec
lods
and
jbe
jo
xchg
mov
loope
jmp
push
add
push
test
mov
push
popf
ljmp
add
fs
push
bound
pop
xor
shrl
les
movsb
add
or
pop
cld
and
push
cmpb
pop
out
add
aam
or
sub
push
cmp
xchg
mov
xor
imul
data16
pop
fcompl
stos
inc
addl
push
fucomip
xor
insl
ljmp
mov
mov
pop
cs
icebp
pop
sti
ja
les
dec
fdivp
leave
mov
loop
mov
arpl
int
out
test
jne
mov
mov
cld
insl
out
push
aas
mov
cmp
jmp
adc
fisttpll
in
or
jp
and
jbe
push
push
and
xchg
sahf
insb
push
dec
lcall
dec
jmp
pusha
sbb
fists
sbb
pop
mov
cli
and
push
cs
jae
xor
mov
fbstp
test
inc
xchg
lahf
call
shrb
cmpsb
push
scas
push
dec
jns
gs
adc
lock
push
jo
ret
mov
cmpsb
in
xchg
hlt
jbe
ja
popa
mov
inc
hlt
mov
or
scas
cmc
push
inc
jmp
bound
xchg
push
pop
int3
xchg
and
pop
cmp
fidivs
mov
stos
pop
adc
aam
or
imul
jecxz
movsl
sub
inc
jbe
jbe
sub
adc
sbb
or
aaa
xchg
lods
mov
sti
xchg
add
ja
or
in
pop
dec
mov
xor
shlb
call
test
sub
inc
imul
cmpsb
fdivr
xchg
in
mov
js
daa
shr
cmp
loope
nop
xor
cmp
dec
ds
push
pop
movsl
fs
and
xchg
mov
push
mov
jbe
add
mov
pop
mov
andl
push
popf
addr16
push
mov
jns
mov
outsb
mov
adc
add
out
xorb
in
and
xchg
mov
stos
and
lahf
push
sub
fiaddl
test
pop
test
mov
pushf
sbb
repnz
jnp
inc
test
in
jg
dec
mov
stc
pop
mov
fs
cltd
adc
data16
outsl
mov
fmul
add
mull
adc
xor
aas
mov
into
pop
sbb
cmc
out
lret
adc
outsl
rol
loop
repz
lret
inc
add
scas
add
les
out
sahf
mov
mov
rorl
jno
aaa
dec
lret
gs
imul
and
pop
loope
push
adc
cmp
fnstcw
pop
repz
dec
xchg
movd
dec
js
xlat
xchg
sub
sbb
adc
fstps
mov
push
aad
ljmp
add
loop
dec
loop
outsb
je
jo
jecxz
ds
pushf
outsb
call
test
xchg
pop
mov
popa
adc
mov
fcmovnbe
fidivrs
inc
out
outsb
adc
loop
jge
sub
xchg
ud1
outsl
fcmovbe
jmp
jb
dec
sahf
push
std
ja
pushf
cwtl
sbb
cmp
mov
rol
popf
shll
lret
push
repz
mov
dec
repz
pop
notb
inc
dec
inc
sub
arpl
or
or
xchg
in
dec
arpl
push
cmpsl
shrb
popa
std
mov
inc
mov
and
icebp
and
sub
cmpsl
shlb
add
test
mov
pusha
call
xabort
xchg
xchg
xchg
or
ljmp
cwtl
pop
dec
mov
stos
in
jne
out
mov
in
or
lret
mov
int
or
mov
dec
frstpm(287
mov
xchg
pop
pop
dec
jns
pop
test
int3
xlat
xchg
mov
fiadds
xor
jge
push
push
dec
add
add
leave
fcomps
xor
dec
adc
insl
mov
xchg
lahf
pop
xor
mov
lods
rcr
ja
pop
icebp
dec
rcl
pop
mov
in
mov
sarb
scas
jne
add
mov
test
icebp
bound
cli
push
jmp
loopne
int3
xor
jecxz
pop
adc
sub
inc
in
insb
addr16
adc
and
jb
insb
mov
jnp
cld
imul
and
pusha
fbstp
dec
xchg
mov
xor
mov
push
icebp
pop
lock
jle
mov
add
sbb
notb
negl
and
imul
imulb
lods
je
adc
rolb
mov
rol
mov
add
sti
arpl
out
inc
imull
addr16
push
or
add
aaa
jle
add
mov
ficoms
pop
int3
shr
sub
mov
jo
movsb
xor
into
push
xchg
mov
jbe
mov
jge
notl
jnp
pusha
aaa
push
inc
or
fmull
mov
dec
into
mov
push
mov
sub
dec
scas
dec
cld
dec
and
xchg
test
repz
inc
cli
out
sub
xchg
pusha
enter
daa
rol
cmp
sbb
or
dec
sub
and
negl
ds
xchg
jnp
cmp
push
jnp
sbb
mov
add
jp
xor
xchg
nop
pop
test
dec
js
fstp
pop
mov
lret
push
mov
cmp
and
mov
outsb
out
addb
push
inc
rcl
mul
in
in
addb
mov
mov
arpl
cwtl
testb
adc
sub
sub
jae
jae
push
mov
rcrb
outsb
cmp
test
rolb
jae
mov
jb
stc
adc
mov
adc
leave
xor
loop
insl
cmp
mov
scas
mull
sbb
xor
push
cmp
aam
or
push
lods
into
inc
cmp
cmc
scas
adc
outsl
mov
dec
push
imul
inc
add
bts
shrl
mov
pop
std
cli
mov
iret
stos
in
ds
sti
inc
gs
pop
andb
adcl
mov
les
icebp
xchg
rclb
sbb
mov
push
sub
mov
pushf
out
movsl
xchg
jmp
inc
subb
push
pop
aad
pop
enter
mov
xor
dec
pop
outsb
push
je
jl
jecxz
dec
push
js
or
cmpsb
mov
cmp
daa
out
pop
jb
push
cmp
in
fildl
mov
pop
addr16
inc
jbe
movl
hlt
mov
mov
jbe
rcl
notb
std
push
jle
cwtl
fsubs
mov
xor
mov
in
icebp
je
adc
int3
stos
mov
test
xor
adcb
das
cmp
sbb
adc
add
mov
inc
insl
jnp
xlat
dec
pop
gs
cmpsl
mov
lea
stc
aad
stc
ret
push
mov
inc
fisubs
enter
test
mov
clc
lret
popa
xchg
cmp
mov
mov
push
and
fnstsw
fcmovb
xchg
shll
ljmp
lret
pop
cli
cmp
stos
fucomi
mov
pop
jmp
xchg
shll
nopl
push
or
int3
xor
cld
mov
cltd
insl
xchg
dec
loopne
pop
test
mov
sbb
dec
inc
mov
pop
rcrb
lock
add
in
add
xchg
es
in
adc
xchg
out
dec
xorb
inc
add
xlat
bound
ja
dec
les
mov
or
bound
mov
hlt
jne
mov
mov
imul
xorps
bound
xchg
adc
insb
in
out
icebp
enter
push
or
inc
bnd
pop
scas
and
je
insb
hlt
add
jle
mov
in
testb
dec
xor
int
xchg
xlat
jno
movq
inc
mov
xor
lahf
inc
push
mov
arpl
cmpsb
ss
inc
hlt
pop
stos
push
outsl
xchg
dec
pop
loop
inc
pop
pop
imul
sbb
repz
adc
movsl
ret
dec
leave
xchg
shlb
or
push
arpl
mov
or
movsb
push
inc
out
cmp
lret
popa
test
lds
mov
cwtl
in
add
mov
mov
rorb
push
mov
bswap
pop
cmp
cmp
adc
jge
mov
lds
adc
js
pusha
int
jl
lahf
adc
cmp
stos
xchg
xor
xchg
int
lahf
jp
test
mov
sub
outsb
adc
pop
jle
daa
mov
dec
push
loope
add
cmp
cmp
movsl
jb
and
std
int
mov
push
bound
xor
std
xchg
imul
not
test
xchg
pop
iret
inc
xchg
jl
pop
icebp
jnp
push
nop
rcll
jbe
iret
int3
mov
rorl
outsb
push
clc
dec
adc
mov
xchg
test
adc
mov
and
shl
adc
lcall
mov
rorl
mov
sbb
pop
add
mov
push
lahf
jg
lcall
lret
xchg
fs
fnstcw
ss
mov
in
mul
jbe
lret
popf
xor
out
xchg
cmp
cmp
fxch
and
cmc
movsl
xor
loop
fcmovb
imul
fdivl
and
lods
dec
sbb
out
xchg
jb
sub
out
test
dec
jge
sbb
fs
pop
pop
adc
dec
fldcw
leave
les
jecxz
xchg
xchg
fwait
negb
les
xlat
loopne
push
sub
adc
stc
adc
lcall
cs
aad
test
mov
ret
popa
lock
ds
loop
sar
push
je
faddl
push
mov
lret
lea
lret
dec
cmpsb
mov
pop
and
outsb
push
dec
pop
sub
cmc
pop
or
mov
aas
imul
cmp
std
and
xlat
cld
rorl
cwtl
ds
lds
ja
lock
mov
mov
das
cld
testl
mov
jno
mov
mov
lock
enter
xlat
mov
pop
add
mov
adcb
mov
aas
cmpsl
mov
mov
push
lods
fs
mov
data16
icebp
and
arpl
movl
test
mov
mov
loop
fprem
mov
push
adc
mov
pusha
sbb
push
movsl
xchg
xlat
stos
lret
out
subb
or
pop
push
cmpsl
pushf
les
jnp
mov
arpl
or
adc
xor
jno
mov
pushf
repnz
inc
pop
cltd
test
or
sbb
sti
push
or
sbb
push
xchg
pop
adc
lcall
xor
jg
loope,pn
jns
sti
or
add
xchg
cmp
test
mov
and
ja
pop
sbb
movsl
ljmp
orl
xchg
shrl
jne
int
mov
inc
aaa
out
out
call
or
and
xchg
jbe
fldl
fs
cmp
mov
push
int3
addr16
inc
cld
jp
scas
popa
and
fwait
push
insb
pop
cltd
pop
jnp
les
pop
ds
sub
pusha
ljmp
xchg
pusha
sub
inc
dec
sbb
inc
jae
mov
and
loope
iret
push
addb
in
and
sbb
push
imul
push
cmp
ret
iret
jb
int
xchg
fcmove
or
sbb
push
insb
sub
or
std
leave
or
pop
and
mov
add
int3
push
inc
fstps
ljmp
inc
ja
shlb
insb
repnz
cmp
dec
movsb
inc
lds
xor
popa
jbe
pop
dec
jge
push
jo
shlb
or
mov
jl
cmpsl
lods
dec
lods
dec
cld
push
xor
lret
mov
scas
push
push
arpl
xor
test
mov
mov
test
cmpsb
gs
in
push
in
enter
daa
mov
shrl
ss
sub
push
inc
ds
sbb
movsl
jns
aas
and
cmp
push
xor
sbb
cmp
inc
lcall
imulb
sbb
xor
push
pop
rcll
aad
jp
cmp
ret
outsb
mov
fists
xchg
fstpl
subb
mov
add
mov
push
sahf
add
loop
es
lcall
push
mov
addr16
sbb
or
sahf
or
orb
mov
lret
orb
adc
ss
cmp
push
pop
negl
sub
dec
out
cmp
jp
or
mov
into
or
cmc
cmp
sbb
cwtl
jb
outsl
pop
jae
loop
pushf
into
imul
movsl
insb
add
data16
jp
lods
das
in
mov
pop
or
mov
adc
aas
sti
mov
lret
fwait
dec
stos
loopne
mov
pop
ds
or
fldenv
cli
repz
pop
mov
pop
pop
out
sbb
inc
dec
xlat
pop
push
fwait
sub
xchg
lods
pushf
inc
ror
sbb
sub
pop
sahf
jno
jmp
imul
jl
push
push
fmuls
sub
push
jecxz
cmp
jle
nop
lea
call
and
mov
es
dec
dec
insb
fistpl
rcrl
ja
inc
test
fnstcw
or
fidivs
hlt
mov
mov
ds
jmp
negb
inc
push
std
insb
sarl
mov
mov
mov
inc
dec
icebp
and
gs
arpl
mov
lock
mov
scas
mov
decb
sub
outsb
movsl
pop
ret
fbld
js
dec
sub
push
daa
mov
jbe
xchg
xlat
xor
leave
stc
mov
std
jl
mov
out
lret
rcrb
popf
pop
test
or
fisttpll
mov
clc
in
cmpsl
xchg
dec
pop
loope
sarl
roll
shrb
in
into
xchg
dec
imul
andb
pminub
test
inc
stos
imul
mov
lahf
jmp
dec
scas
mov
mov
sbb
punpcklwd
xlat
scas
or
stos
rcrl
ss
in
push
and
add
mov
shll
addl
in
lret
mov
push
mov
jno
mov
frstor
xor
stos
popf
aas
mov
leave
lahf
mov
pop
mov
dec
jp
jle
and
mov
sub
int
leave
shlb
sbb
fsts
or
out
leave
sub
xor
addr16
mov
and
lret
jnp
int
jle
cmc
xor
pusha
test
int
cld
xchg
xor
testb
jae
push
or
cmp
pop
popf
repz
sbb
mov
stos
push
cmp
xchg
sti
popa
sbbl
xor
cmpl
cmp
fidivl
leave
andb
hlt
mov
add
inc
add
sub
push
in
and
xor
jns
repz
int3
aas
dec
sbb
fdivrp
inc
dec
add
inc
jo
mov
mov
adc
sub
ja
shll
mov
add
xlat
sbb
enter
sbb
jl
subl
sbb
xchg
adc
jo
ja
scas
in
cli
and
xchg
mov
jns
and
push
je
inc
cmpsl
push
cmpsb
call
cltd
add
push
aam
daa
mov
or
sub
lret
add
dec
ds
and
dec
mov
fsts
sbb
sbb
inc
add
xor
adc
out
or
into
pop
sbb
je
pop
outsl
loop
push
push
loop
mov
enter
add
mov
pop
outsb
pop
mov
fnop
outsl
outsb
xchg
cmpb
mov
push
mov
shrl
mov
int
pop
scas
sub
mov
movsl
je
lcall
cltd
mov
jecxz
sbb
jl
sahf
pop
push
lcall
adc
jg
imulb
stc
cmp
fs
test
mov
stos
ss
shlb
mov
mov
adc
in
mov
mov
into
jmp
fs
add
jp
repz
or
imul
ret
pop
add
jge
sub
inc
lods
push
xchg
pop
mov
sahf
mov
mov
jg
sar
dec
pop
pop
inc
fstl
loopne
pop
push
pop
pop
fsts
sbb
lret
sti
int
pop
repz
stos
xchg
sbb
ret
cmp
lods
xlat
pop
xor
sub
xchg
adc
or
jmp
sbb
hlt
aad
testl
or
jl
mov
cltd
test
and
jbe
or
push
call
movsb
fimuls
pop
mov
mov
dec
xor
xlat
ret
dec
in
or
inc
dec
push
aas
test
jnp
mov
pop
mov
daa
adc
negb
or
adc
rcrb
outsb
cmp
mov
test
cld
dec
add
lret
sar
call
mov
mov
lock
inc
andb
xor
ret
outsb
add
fsubrs
sub
cmpsl
mov
sub
pop
jl
lods
cmp
mov
lods
js
and
cltd
adc
shlb
jecxz
push
sbb
mov
mov
stc
cltd
cli
push
insb
addr16
je
clc
sub
xchg
mov
jl
inc
xchg
jle
fmull
pop
sti
rclb
loope
out
dec
sub
xchg
pop
push
push
pop
mov
ret
mov
shlb
pop
lock
mov
cld
movsl
test
lcall
cwtl
fsubs
test
jb
nop
adc
fwait
cmp
push
flds
jns
xor
das
sahf
xor
aad
jns
cmp
in
and
xchg
fldt
mov
cwtl
arpl
ja
loop
dec
popf
dec
xor
dec
pop
ljmp
icebp
dec
pop
lret
and
or
lods
sbb
push
add
xchg
or
pop
xorl
add
push
lahf
sub
cs
pop
jp
jp
and
push
sub
sub
jle
addb
shll
fwait
mov
xchg
push
insb
xchg
pop
mov
testl
mov
std
dec
inc
popf
sbb
cmpsl
push
jo
stos
ret
cmp
adc
imul
push
enter
xor
adc
xor
in
mov
stc
lret
in
jl
arpl
rorb
adc
sbb
add
and
pop
and
lea
lds
mov
pop
sub
mov
or
mov
jecxz
xor
inc
xorb
cmp
imul
dec
jno
or
aaa
inc
jl
xor
mov
das
push
mulb
arpl
xchg
jns
scas
les
and
push
test
pop
push
inc
inc
ss
cmpsb
imul
in
and
addr16
daa
mov
div
loope
cmp
sub
decl
ds
popf
and
mov
lahf
adc
sbb
out
sbb
push
xor
mov
imul
into
add
push
inc
push
push
or
nop
mov
outsb
jp
test
dec
adc
adcb
lods
mov
sbb
push
movsb
fidivl
xchg
ret
cli
mov
and
sbb
iret
inc
out
add
mov
sahf
stos
es
push
mov
add
mov
mov
repz
stc
lock
pop
fs
push
xchg
adc
lahf
stc
ss
ss
cmp
jne
mov
sbb
orl
mov
jno
or
arpl
into
into
inc
add
lret
xor
outsl
sbb
loop,pt
mov
lret
adc
xor
loopne
lods
icebp
push
lods
std
and
stos
scas
push
out
push
cld
mov
ljmp
out
sti
gs
sbb
push
adc
pop
iret
inc
fld
fcomp
out
xor
dec
xchg
fisubrs
movsb
cmp
inc
xlat
popf
into
add
jge
adc
add
pushf
fwait
sub
jmp
cli
int
repz
nop
mov
or
inc
ja
add
jl
je
cmc
and
xor
xchg
movb
call
and
xchg
pop
movsl
test
and
inc
fstpt
mov
xchg
mov
inc
imul
adc
ds
jp
mov
xorb
sahf
testb
movsl
cwtl
les
mov
rcrl
js
dec
lret
inc
sub
mov
lock
ret
mov
mov
in
add
pop
mov
std
lods
xchg
es
mov
dec
dec
cmp
cmpsl
mov
outsl
sbb
inc
loop
movsl
dec
stos
mov
iret
mov
fisubl
and
sbb
cmp
inc
aam
enter
das
test
pop
clc
arpl
xchg
xchg
int
jns
mov
pushf
das
pop
cmpsb
xchg
enter
daa
out
stos
je
xchg
fnsave
add
cwtl
sbb
add
mov
leave
mov
xchg
and
adc
mov
arpl
sbb
cmpsl
inc
sbb
or
dec
data16
push
push
es
push
mov
iret
xor
sahf
jecxz
int3
dec
test
xchg
sub
in
test
pop
push
mov
and
nop
test
lahf
mov
std
sub
inc
mov
jne
imul
out
mov
lahf
jmp
xlat
lea
sarl
sub
sub
mov
in
enter
into
insb
mov
sub
mov
lods
and
pusha
mov
mov
fstps
pop
jmp
lea
jecxz
pushf
sahf
test
shrb
popf
inc
loope
mov
cmp
hlt
or
icebp
mov
scas
movsb
mov
push
sub
paddb
iret
add
aam
jo
inc
hlt
cmp
mov
inc
push
pop
jp
imulb
push
jecxz
cmp
xchg
rcl
add
rolb
rol
pop
push
jge
fiadds
faddp
jbe
into
mov
pop
call
icebp
movsb
out
fistl
shlb
jbe
sub
jge
rcrb
and
aaa
or
aad
jno
clc
iret
jl
mov
loop
adc
repnz
pop
scas
mov
test
push
ljmp
cmpsb
out
jge
in
or
ds
mov
xchg
or
fisttpl
jb
bound
std
movsl
mov
fisubl
add
lahf
xor
js
scas
fidivrs
add
clc
xor
jne
pop
imul
js
mov
imulb
in
push
pop
shrl
fdivrl
adc
push
mov
push
stc
adc
and
jp
andb
mov
popa
frstor
fbld
es
lods
mov
pop
mov
xlat
pop
shll
mov
push
xchg
subb
test
imulb
frstor
mov
aad
stc
cmpsl
push
lock
xor
pusha
cmp
xor
es
xor
cmp
sub
xor
and
leave
xor
inc
xor
das
sbb
imul
jno
data16
pop
rep
in
int
cmpsb
mov
out
mov
cli
mov
sbb
sti
lods
jg
decb
loopne
gs
test
pop
fwait
sub
ret
gs
push
pop
add
jecxz
je
add
xchg
mov
jecxz
cmp
in
mov
adc
repnz
inc
and
cs
adc
sub
jl
mov
aas
dec
dec
inc
mov
xchg
dec
lods
cltd
nop
je
movsl
scas
jecxz
fwait
jnp
xchg
lea
movsl
stc
mov
sub
sub
cltd
adc
pop
xchg
enter
push
testl
daa
imul
ret
pop
test
xor
popa
andl
mov
cmpsb
sar
mov
sbb
mov
cmp
mov
insl
mov
das
xchg
jg
mov
jecxz
rcl
iret
mov
sbb
mov
and
dec
inc
mov
ss
xchg
xchg
lods
adc
jae
repnz
test
iret
xor
rclb
mov
cltd
je
dec
test
jle
mov
xchg
push
repnz
xchg
fnstsw
lcall
leave
vcvttss2si
xor
mov
fistps
jne
xchg
rcll
adc
out
neg
jae
scas
out
or
fwait
mov
test
ret
add
loop
mov
incb
mov
fwait
xchg
jne
push
pop
jge
add
imul
scas
sahf
pop
xor
inc
jns
push
lret
in
aad
xchg
jns
or
sub
pop
push
movsl
sti
ja
mov
mov
mov
insb
mov
and
inc
mov
pop
push
out
push
bound
ds
mov
clc
insl
out
sbb
sub
and
mov
sbb
jp
adc
and
test
mov
jle
jns
in
out
pusha
push
inc
mov
xchg
lods
jge
pop
and
sub
xor
enter
jle
popf
push
inc
stc
push
jl
xchg
stos
test
div
sbb
jmp
popf
scas
pop
repnz
and
ljmp
ret
loope
out
repz
sbb
arpl
inc
jecxz
or
aam
pop
in
aaa
push
fsubrs
add
push
mov
mov
fsubp
add
pop
gs
rclb
push
scas
icebp
pop
cmp
and
mov
mov
xor
xchg
int3
mov
jno
fisttpll
dec
push
call
xchg
mov
sub
test
mov
xchg
inc
push
dec
andb
setle
inc
stos
xchg
daa
mov
ljmp
inc
out
cmp
pop
test
movsl
xchg
nop
popa
and
pminsw
mov
sbb
sahf
push
add
fisubl
jg
inc
push
mov
xor
js
aas
sbb
sub
in
cmp
mov
jp
es
sub
mov
jo
enter
add
lcall
jae
mov
push
or
out
jp
push
stos
test
sub
insl
sbb
and
dec
lcall
je
fisttpl
sbb
adc
cmp
ret
pushf
clc
mov
in
dec
stc
pop
pusha
daa
fs
adc
jg
cmp
jmp
mov
lret
pop
xor
pop
cmp
mov
or
cmp
pop
dec
xchg
xor
fwait
outsl
outsl
loop
stos
cmp
adc
adc
cmpsl
data16
push
lods
lret
repz
mov
mov
mov
shl
sti
pop
aaa
pop
sub
or
iret
xor
and
add
or
xchg
mov
ljmp
mov
xchg
sarl
cld
xchg
js
jmp
or
sub
and
pushf
icebp
out
jmp
outsb
push
cs
pop
sbb
sahf
gs
popf
inc
gs
and
je
stos
aam
push
inc
push
mov
and
enter
and
pop
movsb
pusha
and
testb
pop
cmp
inc
mov
outsl
or
xchg
mov
mov
and
pop
std
or
dec
cwtl
cmp
cmp
mov
popf
xor
lret
pop
into
rorl
sub
lock
push
jmp
jb
mov
fimull
or
sbb
jbe
xor
inc
insl
in
xchg
dec
inc
fwait
movsl
cmpsl
mov
sbb
popa
sahf
inc
lods
jnp
sub
adc
add
bound
and
ljmp
test
or
data16
push
mov
iret
frstor
notl
xchg
dec
or
ljmp
sub
lret
mov
sbb
out
push
test
push
mov
or
jge
xor
test
mov
stos
push
pop
dec
dec
push
es
cltd
xchg
xchg
mov
mov
or
cmp
fwait
xchg
or
ret
add
xchg
sub
int
sbb
in
sub
xchg
enter
adc
dec
or
and
ja
icebp
dec
dec
jbe
mov
aam
push
mov
shlb
sbb
mov
xchg
cmc
out
dec
bound
out
jmp
insl
sarl
repz
sub
pop
imul
jp
out
test
test
insb
jbe
xchg
jnp
pushf
or
in
adc
pusha
icebp
mov
fisttps
sub
jg
lcall
rolb
push
inc
inc
jmp
popl
mov
mov
jge
xchg
push
sbb
sbb
sbb
push
es
scas
push
adc
popf
inc
pop
adc
lahf
add
dec
xor
es
vdivpd
sbb
nop
mov
or
or
push
loope
std
aas
or
dec
pop
inc
int3
jmp
sub
pop
jnp
mov
je
jecxz
test
lods
int3
mov
add
les
or
push
mov
and
jge
sbb
sbb
jecxz
or
out
jl
cmp
dec
xlat
xchg
sub
lahf
aaa
pushf
xor
test
subl
push
xor
push
sbb
inc
jecxz
sahf
cmpsb
hlt
bnd
fcoms
cmp
and
cmp
bnd
test
xchg
sti
cmp
push
std
cmpsl
rcl
movsl
pushf
xchg
mov
lahf
jno
pop
push
push
jb
sbb
je
push
adc
xor
inc
push
leave
insl
pop
mov
push
mov
imul
push
dec
js
or
enter
insb
pop
outsb
mov
inc
adc
fstpt
popl
xor
mov
outsl
mov
xchg
push
and
xchg
xor
lods
pop
in
int
mov
pop
mov
mov
xchg
mov
sbb
sbb
lock
in
adcb
ljmp
ss
adc
push
add
lock
push
xchg
cmp
cmpsb
sbb
pop
jge
lret
sbb
inc
bound
sbb
or
cs
into
ja
das
cmc
pop
xchg
xor
xchg
outsl
mov
jo
imul
orb
daa
je
xor
lods
mov
data16
adc
mov
sub
mov
dec
mov
gs
xlat
stos
pop
fldenv
sub
imul
std
stc
orb
jo
daa
aam
sbb
and
sub
das
movsl
adc
cmp
jmp
dec
mov
sbb
jne
rolb
push
ds
std
xlat
jge
mov
cmpsb
dec
lcall
jecxz
das
push
lea
mov
inc
or
pop
push
dec
pop
sbbl
inc
or
dec
adc
pop
fcoml
xchg
inc
daa
mov
ljmp
mov
xchg
in
jecxz
arpl
mulb
cltd
std
scas
mov
dec
mov
jg
mov
idiv
stc
popa
and
mov
mov
lock
pop
jnp
push
int
mov
roll
aam
imul
stos
aas
xchg
es
jl
int3
lods
sbb
cmp
xlat
cmpsl
mov
jp
popa
mov
shrl
sbb
cmp
and
add
iret
push
sarb
jb
test
ljmp
js
push
int3
push
dec
clc
adc
jl
mov
adc
adc
psrlw
outsb
sbbb
stos
lea
xchg
mov
sub
icebp
mov
mov
inc
add
in
or
adc
aam
scas
xchg
jg
mov
sub
xchg
xchg
add
or
lock
fwait
cmc
jnp
push
gs
iret
add
mov
sbb
test
icebp
arpl
xchg
pop
ss
mov
sarb
test
dec
ja
test
add
stos
adc
mov
dec
fwait
dec
jmp
mov
mov
mov
sub
shr
xchg
pop
xchg
cmp
subl
out
mov
pop
or
pop
inc
sbb
je
and
and
popl
arpl
jle
aas
call
pusha
mov
lds
nop
out
sub
xchg
jae
call
gs
mov
sarl
stc
cmc
stos
dec
add
sbb
and
inc
call
xchg
push
in
nop
adc
jge
ret
scas
leave
aad
in
sbb
lahf
inc
bswap
push
or
add
or
movsl
sbb
mov
cmc
add
pop
mov
pop
loope
and
sub
xor
rol
in
hlt
xchg
cmp
sbb
or
adc
dec
cmp
sbb
sbb
lea
dec
mov
pop
jno
adc
cmp
dec
inc
in
mov
xor
add
scas
inc
jecxz
and
lcall
xor
cmpsb
ja
in
mov
leave
in
mov
scas
mov
rolb
cmp
cld
ds
movsl
mov
push
lahf
nop
xchg
mov
sbb
mov
lcall
fldenv
jo
mov
fcoms
stos
call
adc
fildl
sub
outsb
push
fisubs
mov
cmp
fisubs
mov
fidivs
cmc
ljmp
push
push
shlb
pop
and
cmp
lcall
or
rorl
subb
or
mov
mov
stc
int3
popa
inc
mov
inc
ss
xchg
adc
popa
ja
negl
ja
lret
shlb
pop
je
cmp
dec
imul
pop
mov
out
stos
xor
ds
loop
imul
adc
inc
rolb
mov
mov
dec
pop
lods
cltd
push
pop
mov
mov
jae
es
or
xchg
pop
xor
mov
mov
gs
loopne
call
mov
fldcw
div
jo
or
dec
mov
xor
cltd
pop
inc
sub
add
pop
xchg
jns
inc
repz
jmp
bnd
jg
mov
pop
xchg
pop
nop
or
and
inc
ret
adc
je
scas
lods
jecxz
pop
sub
nop
out
fidivrs
fs
pop
lret
scas
pop
or
ret
mov
fstpt
sbbb
add
scas
xchg
aas
les
mov
and
adc
jb
stos
lret
push
xor
cwtl
mov
xchg
mov
lcall
sub
xchg
and
cmp
mov
jbe
mov
mov
adc
sub
mov
in
cmp
fs
fisubrs
sub
dec
loopne
mov
adc
int3
roll
push
psraw
pop
push
jl
daa
xor
mov
mov
test
xchg
test
push
fnstenv
cmp
xchg
sbbl
ljmp
push
pop
push
xor
stos
push
and
xchg
stc
hlt
cld
push
movsb
lock
unpcklps
push
add
mov
or
mov
mov
xchg
test
stc
xchg
ficompl
pop
push
int3
inc
ja
mov
fwait
and
imul
xor
in
mov
jecxz
xor
adc
or
in
aad
xchg
inc
popa
mov
cmpsb
pusha
mov
aas
fst
ja
in
dec
pop
xor
mov
pop
push
mov
mov
in
jne
pop
es
inc
inc
out
pop
push
cmp
fiaddl
jmp
add
cmp
pop
out
cmp
lods
or
mov
jp
ret
mov
jo
dec
hlt
push
jnp
sbb
jle
nop
and
enter
daa
fmuls
xchg
and
dec
jae
or
cmpsb
push
int3
jl,pn
fnsave
enter
adcl
add
popf
cli
aaa
imul
subb
fsubp
adc
dec
iret
or
xlat
ret
ror
dec
lods
or
fs
arpl
lock
inc
adc
fisttpll
jl
and
fisubl
test
jge
int3
rcl
pop
adc
push
ffree
icebp
mov
shl
cmpb
inc
mov
movsb
adc
adc
call
lock
push
aaa
or
loope
jns
es
fs
mov
or
push
gs
xor
pop
mov
scas
pop
xchg
xor
aaa
iret
subl
add
push
in
cmpsb
mov
enter
daa
mov
mov
inc
pop
and
xlat
imul
jbe
cmp
xor
movsl
stos
ret
out
leave
dec
lahf
scas
fadds
push
cli
aad
sbb
js
xor
xor
iret
pop
pop
jo
js
cmp
lds
jnp
push
mov
adc
outsb
imul
aam
xchg
ja
popl
pop
xor
into
mov
push
test
cwtl
in
push
mov
pop
int
cli
fldcw
cmp
pop
lahf
or
lcall
mov
pushf
jns,pn
cmp
pushf
sahf
fstps
sbb
mov
addr16
sbbl
push
push
pop
adc
push
sarb
push
mov
aad
lods
xor
int
cmp
push
stos
or
mov
into
cmp
sub
xor
out
jnp
test
adc
pop
movsl
add
pop
cmp
cmpsb
mov
push
and
outsb
addr16
mov
add
sti
imul
push
gs
mov
pop
pop
xor
xor
setne
aas
xor
xchg
lods
xor
jno
cmc
cmp
mov
mov
adc
pushf
repnz
loop,pn
or
dec
inc
or
mov
ss
mov
je
scas
shl
roll
lea
je
cmp
pop
pop
mov
inc
xchg
dec
mov
lcall
aaa
aam
xor
sub
jb
jmp
mov
pop
xchg
pop
roll
lcall
std
mov
imul
mov
cmp
jb
ljmp
or
mov
pop
mov
mov
lock
das
movntps
repz
sub
insb
fcmovb
enter
mov
xor
add
cmpsl
mov
jge
fistpl
popa
jecxz
and
mov
jle
xchg
cmp
pop
mov
mov
push
ja
test
cmpsb
scas
mov
xchg
and
fstpl
xchg
sub
mov
push
xchg
or
fucomp
clc
fcoms
pop
std
sub
out
lcall
push
jg
mov
jae
mov
sti
mov
or
in
mov
xchg
test
xchg
mov
or
or
fcomp
fwait
push
xchg
leave
push
stos
fbld
add
lret
lods
mov
jns
push
hlt
in
daa
adc
ficomps
sub
pop
cmp
dec
dec
adc
scas
mov
sub
adc
xchg
mov
out
out
dec
lds
pop
xchg
into
test
out
xor
sub
adc
fldenv
xlat
xor
mov
lret
insb
mov
test
andl
in
jecxz
pusha
ret
fbld
adc
inc
adc
pop
sbb
push
pop
popf
add
test
mov
push
lret
adc
sbb
test
imul
lahf
scas
xchg
imul
jb
adc
iretw
push
pusha
ret
pop
leave
ret
sub
arpl
pop
nop
inc
adc
out
push
pop
xorb
sub
into
int3
lods
test
pop
aas
insb
sbb
jae
scas
lds
mov
mov
cli
push
mov
movsb
sahf
rcll
jbe
cli
inc
jge
int
sbb
fucom
aaa
enter
insb
bound
out
fsubs
in
xor
in
loope
dec
fcoml
jecxz
push
mov
inc
sbb
lret
test
loope
and
nop
sub
cmpsb
jge
push
in
lea
enter
daa
mov
icebp
cmp
out
loope
jp
sub
mov
mov
movsl
mov
sbb
mov
sbb
push
sub
in
pop
mov
xor
lods
lods
pop
imull
js
adc
pop
sub
cmp
ljmp
cmp
fldcw
cld
and
insb
xchg
outsl
mov
push
fs
push
shlb
sub
push
mov
pop
int
xchg
mov
lods
pop
push
sbb
mov
popf
xchg
mov
adc
sahf
jl
fadds
fs
add
mov
dec
out
cmp
aad
mov
push
cli
addb
fcom
in
daa
notl
push
xor
dec
out
adc
or
jbe
and
ret
cmc
je
stc
xor
or
loop
stc
aas
imul
les
add
jbe
mov
lods
addr16
mov
out
clc
test
mov
insb
js
sti
sbb
rclw
mov
aas
fsts
loop
rcr
andb
push
mov
sbb
xlat
dec
xlat
pop
inc
and
das
push
pop
adc
mov
pushf
popf
dec
xchg
jmp
xchg
lods
mov
xchg
pop
xchg
sbb
push
inc
jmp
enter
add
jecxz
mov
xchg
ljmp
mov
pop
sbb
inc
out
fistps
and
fcmovnbe
inc
pusha
pop
lds
inc
or
mov
add
fdivrs
in
xchg
push
sahf
mov
xor
dec
std
movsb
enter
add
jns
gs
xor
sar
jp
inc
lret
fildl
mov
insl
push
mov
push
shl
data16
das
out
fistps
and
aam
imul
push
xor
in
insl
subl
mov
cli
out
out
lods
daa
push
mov
mov
lea
mov
fisubrs
or
cltd
xchg
test
sbbb
mov
mov
fldl
gs
xchg
inc
inc
int
imul
sarl
cmc
js
xor
or
pop
sub
psrld
arpl
push
jmp
push
pop
mov
mov
xchg
dec
out
cld
test
les
pop
jne
sbb
stos
inc
movsl
adc
or
or
add
push
dec
sbb
add
lea
leave
jp
xor
xchg
cmp
push
ds
in
into
pop
xchg
add
cld
mov
add
pop
mov
sub
call
sbb
xor
mov
xchg
out
fisttps
xor
jne
cs
mov
inc
mov
lds
jnp
rcll
xchg
cltd
sbb
sbbl
insl
out
cwtl
inc
sub
or
push
jp
fs
loopne
push
jnp
stos
mov
in
pushf
test
dec
mov
lds
lret
out
inc
and
dec
push
push
call
sarb
mov
mov
call
adc
sbb
sub
scas
imulb
push
mov
xlat
fs
leave
je
ret
jnp
cmp
hlt
cli
or
arpl
push
insb
or
jb
dec
inc
fnsave
sub
stos
cmp
xchg
dec
aaa
pop
outsb
dec
dec
ficoms
dec
sub
fadds
sbb
mov
dec
sub
cmp
and
movsb
sub
push
clc
mov
js
js
test
test
aaa
xchg
or
xchg
jno
jl
xor
mov
sub
movsb
xor
adc
lret
scas
jg
pop
sub
test
lods
mov
inc
pop
shufps
push
jp
sub
mov
lret
sbb
add
movsl
push
cmp
ds
jns
mov
lds
jb
push
mov
test
dec
xor
loopne
pop
push
bound
pop
addr16
push
jle
push
imul
jecxz
sub
sub
adc
inc
lds
popl
dec
xor
mov
jmp
mov
mov
stc
sbb
xor
outsl
lcall
aas
mov
pop
sbb
adc
cmpb
jg
add
stc
icebp
xor
fs
sbb
sub
ret
and
ret
fcoms
jl
lret
sahf
xor
adc
iret
repz
cmpl
lret
rolb
outsl
xor
mov
imul
orl
pop
sbb
mov
mov
xchg
pop
cli
aam
lods
mov
xlat
outsb
popf
sti
dec
jge
fcmovnb
cmp
sub
sub
dec
adc
jne
les
sub
cmp
mov
xlat
and
push
jbe
sub
jl
pushf
dec
cmp
test
cs
aad
add
jns
ja
cld
lret
jbe
jne
mov
xchg
lea
rcll
pushf
and
xorl
dec
fildl
es
inc
inc
inc
adc
es
aas
mov
push
test
outsl
mov
rcrl
lods
sar
dec
jmp
mov
mov
shl
mov
insl
cld
movsl
add
mov
mov
rorl
int
mov
sub
mov
push
ret
insl
push
cs
mov
adc
arpl
les
and
jno
dec
pop
std
sti
jge
or
cltd
mov
mov
mov
mov
push
test
mov
xchg
xchg
lods
ljmp
sbb
push
and
out
pusha
xor
xchg
into
incl
xor
testb
in
pushl
adc
xchg
daa
hlt
test
imulb
fmul
push
sbb
outsb
aad
cmp
je
call
mov
out
add
dec
xor
insb
enter
into
jo
icebp
enter
add
fistpll
adc
dec
push
ja
mov
dec
xor
or
mov
push
jmp
or
sub
mov
jmp
adc
lret
xchg
fs
subl
and
or
cmc
jmp
mov
popf
and
shll
jnp
cltd
push
jle
cmp
pusha
clc
pop
fcmovnu
in
jns
sahf
xchg
adc
sub
inc
sub
jae
push
cs
adc
dec
mov
das
xchg
int
test
stos
pop
mov
xlat
sbb
jg
imul
xor
add
iret
sub
lods
ret
arpl
mov
push
hlt
inc
arpl
xor
or
in
add
fidivrl
add
lcall
hlt
test
mov
subb
xor
lods
mov
mov
fsubrl
movsb
mov
test
and
jbe
js
jge
mov
aas
pop
adc
inc
inc
adc
push
and
jl
test
push
push
push
push
xor
outsl
pop
pop
scas
mov
sub
push
or
inc
scas
xor
jae
pop
or
enter
daa
mov
sub
adc
jp
cmp
inc
fs
pop
mov
and
jbe
jae
rcrb
xchg
sub
or
pop
loop
in
mov
jl
js
sahf
jo
pop
cmpsb
xor
ljmp
mov
sub
xchg
sti
outsb
xchg
jmp
adc
and
out
pusha
es
sub
orb
shrb
push
mov
dec
shrb
lods
cmpsb
xlat
pop
sbb
sbb
xchg
mov
jmp
leave
cld
scas
sahf
ret
test
shrl
jg
push
mov
test
gs
mov
jnp
adc
push
cmp
cmp
dec
mov
notl
add
xor
cli
cmp
push
or
iret
loop
out
sbb
add
stos
outsl
adc
aam
xor
mov
adc
xchg
jle
repnz
lods
xor
out
push
out
dec
push
mov
inc
cmp
sti
jbe
aaa
insl
mov
loope
inc
loopne
repnz
pop
je
out
adc
or
les
es
rep
adc
xchg
mulb
or
dec
notb
sub
les
sub
or
call
dec
fdivrs
inc
bndstx
dec
in
push
jecxz
jmp
fninit
stos
adc
pushf
mov
and
stos
movsb
push
sbb
or
or
testl
or
inc
inc
xchg
or
jb
popa
cmpl
out
jb
divb
in
xchg
cwtl
pushf
adc
mov
sub
hlt
icebp
mov
cld
sarb
mov
xchg
ds
cmp
lret
das
lods
push
mov
movsb
andb
gs
es
in
out
insl
dec
sbb
and
dec
mov
sub
cmc
mov
out
jb
inc
jns
mov
sbb
xchg
rcr
js
cltd
cmc
dec
or
movsl
icebp
push
inc
pop
cmpsb
fisttpll
in
xchg
lds
ljmp
aas
pop
decb
and
out
ret
pop
jp
adc
mov
seto
fimull
jmp
repz
and
mov
mov
outsb
ljmp
pop
test
sbb
mov
shr
dec
fwait
loopne
out
push
xchg
imul
lret
pop
and
mov
add
in
pop
rcll
das
inc
mov
sub
ja
cld
daa
dec
sub
shlb
jnp
mov
dec
pop
push
out
jne
xchg
mov
xchg
dec
out
xorl
jmp
das
cmp
cmpl
jle
add
rorl
or
int
adc
jp
xlat
jge
push
xchg
clc
int
jnp
dec
out
jle
pop
in
in
pusha
xchg
or
filds
iret
push
jno
fwait
pop
mov
std
movsb
jae
pop
lods
push
fdivs
popf
jns
mov
push
xor
notl
popa
jmp
sbb
sub
and
ret
out
out
into
iret
xchg
inc
leave
sub
mov
xor
les
pushf
cmp
push
stos
pusha
fisubrl
outsb
or
flds
pop
int3
pop
mov
lds
das
and
adc
repz
cmp
ret
inc
jg
xchg
shlb
jge
test
cli
hlt
push
aaa
add
lea
jl
test
mov
xor
lret
scas
fwait
jne
and
adc
popf
inc
cmp
xor
in
inc
cmpsb
and
pop
xor
mov
pop
cmp
call
pusha
sub
and
cmp
and
inc
movsl
rcl
and
sbbl
or
xchg
add
cmp
xor
stc
adc
mov
ss
in
sbb
mov
push
pop
push
pop
xchg
add
pop
sbb
outsb
cmc
shrb
sar
bound
mov
jno
mov
or
and
xchg
push
mov
xchg
sub
lods
pop
fwait
cmp
push
rcrl
mov
sbb
pop
cmp
gs
dec
test
cmp
mov
test
scas
pusha
mov
cmp
fwait
add
mov
ss
ret
pop
cmp
or
inc
not
adc
fsubrl
dec
popf
aas
cmp
ret
xchg
or
xchg
iret
cmc
leave
es
xor
aad
loop
push
cli
imul
fnstsw
inc
neg
lods
sbb
sbb
out
mov
cli
cmp
cmp
lods
xlat
cmp
lods
or
and
pcmpgtw
add
loopne
addr16
xchg
jnp
adc
cmp
mov
test
rcll
or
test
out
sub
jne
pushf
sahf
cli
jmp
mov
pop
aad
lock
nop
push
pop
cli
dec
aaa
fidivrs
inc
and
mov
ss
js
mov
push
lcall
sbb
pop
mov
orb
in
scas
in
inc
push
pop
push
inc
pop
lea
jb
icebp
add
test
or
cmp
xchg
int
push
cli
mov
mov
cmpsl
leave
icebp
pop
dec
mov
lret
sub
xchg
mov
jmp
lock
clc
das
mov
mov
dec
in
sub
pusha
hlt
ret
add
leave
es
ss
lahf
dec
sbb
push
fidivrs
aas
stos
or
mov
stc
and
cmpsl
iret
adc
cmp
push
cltd
sub
mov
push
psadbw
or
fnsave
mov
ljmp
subps
xchg
out
es
mov
push
jmp
mov
out
jbe
add
lcall
mov
pop
pop
addr16
xchg
test
adc
xchg
sbb
pop
hlt
or
xchg
fistps
aaa
sbbb
shll
sar
sti
pop
xor
int
jns
faddl
xchg
icebp
xorl
mov
out
pop
ja
int3
adc
lods
push
mov
mov
in
dec
cmp
add
push
movsb
mov
pop
das
out
divl
adc
loope
mov
lret
push
or
jge
mov
xchg
or
cmp
jp
sahf
mov
and
push
add
jge
fs
jb
in
pop
lret
pusha
or
inc
in
pop
fisubl
outsb
jae
cmpsb
mov
popf
mov
cli
or
aas
leave
stos
inc
add
mov
cmpsb
mov
scas
pop
and
inc
adc
push
cltd
iret
out
mov
stos
xchg
dec
leave
lahf
xchg
aad
fstpt
arpl
adc
out
int
xchg
and
push
pop
insb
icebp
jmp
add
mov
pop
sti
mov
fdivrp
in
jo
xchg
add
shrb
mov
inc
mov
movsb
lret
push
in
aaa
jbe
jge
loopne
sbb
movsb
mov
jno
adc
jl
mov
out
push
aam
mov
and
cmp
and
mov
mov
inc
int3
dec
push
mov
stos
in
sub
and
daa
mov
dec
cmp
xchg
loope
pop
sahf
sub
mov
js
pushf
or
push
lahf
dec
js
push
sbb
sbb
pop
pop
add
mov
pop
imul
pop
lret
js
and
pop
and
punpckhdq
dec
mov
fdivrl
imulb
mulb
pop
stos
lock
fmul
sbb
push
jmp
dec
mov
fwait
jle
retw
adc
int
movsl
mov
mov
mov
lcall
mov
faddp
sbb
divl
or
push
adc
cli
jg
or
mov
out
in
push
outsb
fs
fistl
sbb
or
mov
insl
cmp
ret
fwait
notl
push
xor
stos
xchg
cmp
lock
into
lods
or
cmc
nop
pop
inc
xor
add
outsl
rcrb
aad
mov
je
pusha
mov
add
fucom
lretw
lods
add
mov
out
test
cli
insl
add
insl
in
sbb
sti
aam
loopne
inc
cwtl
jb
out
xchg
dec
loopne
out
and
xchg
ja
cs
fprem1
es
les
mov
xchg
jl
sbb
out
cmp
lock
xlat
adc
shrb
sti
stos
in
cmpsl
mov
ficomps
rorl
aad
xchg
mov
dec
xchg
inc
js
xor
jbe
je
pushf
xor
leave
adc
mov
call
and
pop
cmp
mov
cmp
dec
dec
dec
cmp
cltd
pop
push
xor
inc
fdivrs
inc
ja
aas
jle
and
mov
mov
adc
sub
mov
idivb
loope
inc
mov
leave
mov
push
adc
ss
cld
lods
sti
lret
xchg
add
mov
mov
lock
and
xchg
dec
repnz
jnp
xchg
fistpll
dec
imul
inc
inc
cmpsl
mov
sarl
push
fmul
lods
rorl
push
mov
sub
cmc
pop
mov
pop
xchg
cltd
arpl
mov
ficomps
push
int
icebp
fstp
pop
clc
mov
xchg
inc
mov
ljmp
cld
pop
push
jo
stos
in
mov
out
mov
xchg
xchg
mov
int
dec
pop
cmpsl
add
gs
loopne
xor
inc
fbld
ret
out
inc
dec
subb
xchg
dec
sbb
addb
mov
fwait
xor
push
fimull
add
out
inc
fldenv
xor
jns,pt
pop
movsl
in
mov
xchg
inc
daa
jne
sub
mov
pop
mov
pop
cmp
adc
mov
mov
fimuls
inc
ja
je
lods
mov
xor
out
inc
mov
jnp
scas
testl
out
mov
loope
idivl
dec
adc
cmp
xchg
and
and
jnp
cli
pop
jle
jnp
in
push
filds
jge
pop
fstpt
adc
xchg
inc
dec
stos
mov
push
pop
lret
pop
popf
bound
loopne
insb
push
mov
or
cmovle
sbb
js
imul
add
aad
and
popf
dec
or
inc
testb
out
leave
push
inc
scas
hlt
es
dec
arpl
or
mov
or
pop
mov
fstp
xchg
sbb
ss
inc
xor
sub
fisubs
xlat
pop
rolb
repnz
imul
push
xor
shll
sbb
jge
pop
sbbb
call
je
sub
stc
jl
insl
push
dec
dec
aad
push
mov
insb
xor
cmpb
and
subl
pop
inc
mov
in
adc
daa
mov
jmp
je
pop
loope
loop
sub
repz
cmp
arpl
mov
mov
and
xlat
xchg
push
in
loopne
sbb
cmp
add
nop
mov
bnd
pop
icebp
testb
xlat
cltd
pop
arpl
cmc
push
lds
sub
jae
outsb
mov
rcrl
jge
fwait
andb
mov
jge
jne
jg
lds
int
cmpsb
jno
sbb
movsl
lcall
popf
mov
dec
push
sahf
stos
insl
jns
sbb
and
insb
mov
stc
int
sbb
les
push
xor
cmp
jle
adc
push
mov
popf
xor
fsubrl
out
mov
mov
jbe
js
cmc
push
jl
xor
out
outsl
mov
adc
in
in
jns
stos
movsb
movsb
adc
ror
lahf
and
ljmp
out
push
iret
cli
mov
inc
stc
in
adcl
sbb
notb
xchg
pop
shll
lret
stos
pop
les
adc
sbb
xchg
aas
sub
cmp
lret
in
xlat
push
ja
sub
xchg
adc
xor
cs
adc
nop
or
cmc
stos
xor
inc
aam
push
cld
inc
je
xchg
mov
fcomps
adc
movsl
loop
lea
mov
mov
out
stc
mov
rorb
or
roll
hlt
je
inc
pop
pop
inc
xchg
mov
aas
sbb
stos
inc
mov
fwait
push
aaa
idivb
mov
out
or
int
sti
mov
and
dec
icebp
or
jecxz
lret
push
lcall
sub
lock
movsb
into
mov
mov
lods
aam
push
arpl
and
into
cld
dec
insl
add
cli
dec
adc
cmpsl
mov
pop
mov
insl
xor
pcmpeqd
mov
pop
leave
jno
fnstsw
pop
jns
cmp
push
mov
cltd
lcall
mov
sbb
fldl
add
in
sub
stos
insl
add
lock
pop
jmp
stos
fsubl
xchg
ljmp
shrd
add
imul
iret
or
mov
int3
jge
jmp
test
fcoms
sbb
sbb
or
outsl
fwait
insl
xor
int3
add
jns
scas
jmp
mov
cli
jns
jns
in
sti
cmp
jo
mov
pop
pushf
loopne
mov
nop
dec
add
xchg
mov
inc
loopne
cld
add
add
sbb
out
and
jbe
cmpsb
mov
mov
out
push
sub
repnz
clc
adc
jp
dec
into
and
xchg
insb
cmp
jnp,pt
idivl
in
adc
rcr
pusha
test
mov
dec
test
inc
jae
push
inc
push
and
xor
repnz
rep
daa
xor
sbb
push
and
xchg
scas
in
sbb
dec
notl
js
lret
iret
movsb
pusha
jbe
shrl
lea
arpl
mov
or
fldenv
incl
jns
fimull
inc
add
mov
pop
xor
pop
lds
out
fs
in
jp
cmp
in
movsb
loopne
rclb
jl
mov
inc
cwtl
sbb
inc
loopne
inc
adc
or
jno
mov
jl
or
mov
xor
fldt
hlt
and
nop
test
mov
ja
cmpsb
outsl
js
not
mov
adc
daa
mov
sarl
cmpsl
loopne
loope
leave
mov
cmp
gs
loop
cmpsl
movsl
fstpt
test
sub
ds
mov
mov
sbb
icebp
scas
and
into
js
and
mov
push
fstl
jbe
sub
aam
mov
push
cmp
adc
mov
xchg
fdivrl
movsb
mov
and
mov
mov
and
pop
int
mov
sub
pop
int
aad
cwtl
shl
rorl
add
test
idivl
int
mov
imull
fs
adc
sbb
add
sub
or
jp
shlb
iret
xor
cmp
cmp
cli
in
into
jb
cmc
push
cmp
sub
loop
xchg
imul
test
data16
loope
shll
mov
in
out
sbb
cli
shll
mov
out
stos
mov
xor
sbb
icebp
movsb
loopne
cmp
hlt
adc
cs
fldenv
mov
pop
sub
repz
aas
scas
sbb
cmp
pop
xlat
xchg
inc
movsl
sub
popf
adc
js
pushf
lahf
inc
mov
jg
aas
or
nop
in
rorl
pop
push
inc
pop
arpl
leave
and
scas
jecxz
outsl
push
test
insl
lea
sarl
pop
scas
mov
cmp
imul
xchg
lock
repz
xchg
stos
fildl
repnz
lods
ljmp
push
xlat
insb
mov
es
shrl
dec
shl
xor
icebp
cwtl
mov
ljmp
mov
icebp
in
xchg
jl
cmpsb
lret
jne
mov
mov
mov
dec
inc
lock
das
sub
mov
andb
ret
mov
mov
insl
jmp
clc
dec
push
xor
sahf
mov
test
out
mov
inc
xlat
and
js
sbbl
sub
or
mov
and
sub
jl
daa
mov
hlt
ljmp
ljmp
pop
pop
out
dec
push
aad
xor
cmp
mov
xor
add
popa
mov
mov
leave
sbb
mov
aad
adc
sbb
ljmp
pushf
incb
add
xchg
xor
incl
ficoml
pusha
ds
test
sbb
mov
mov
pop
jecxz
ja
push
push
dec
hlt
add
mov
xor
in
inc
jne
add
mov
push
stc
lret
jmp
pop
jae
xorl
out
mov
sub
in
hlt
out
push
and
ljmp
mov
in
daa
sbb
jl
fistpll
arpl
jg
sbb
jae
sbb
push
in
mov
adc
push
push
xor
jnp
lcall
sbb
xchg
dec
imul
lea
call
xchg
iret
add
or
in
es
add
ret
out
arpl
lds
pushf
mov
push
push
test
pushf
stc
add
popf
jecxz
mov
push
sarb
cmc
repnz
shlb
imul
push
shlb
and
and
jge
dec
out
out
getsec
add
shlb
xlat
jl
subb
jge
mov
jo
mov
scas
pop
cltd
sbb
iret
and
test
outsb
arpl
inc
jns
xor
fiadds
sbb
daa
scas
adc
cmp
lock
loope
aam
sub
adc
ds
and
and
xchg
or
cmpsl
mov
pop
sbb
pusha
add
cmp
xor
mov
sub
cltd
fdivrs
jmp
loope
cld
push
xchg
mov
fdivrl
nop
sub
outsb
sub
shrb
lahf
cmp
mov
mov
inc
push
and
adc
int
push
subl
cmp
pop
xchg
add
inc
sarl
mov
popf
xchg
sbb
cmp
and
fidivrs
xor
mov
dec
fs
cmp
jmp
outsb
push
insl
ss
je
cmp
hlt
mov
xchg
insl
dec
stos
xor
jo
or
ror
sub
cmc
in
cltd
xor
call
push
imul
jae
push
movsl
icebp
lods
mov
loopne
out
xchg
xor
push
mov
sti
in
pop
cltd
and
loope
lock
lods
std
mov
loopne
add
pop
xchg
cmpsl
cmpsl
or
les
sbb
mov
adc
test
ds
sub
adc
mov
dec
and
jmp
sub
cs
mov
nop
rcrb
inc
outsb
mov
dec
inc
repz
je
adc
stos
and
adc
xchg
pop
push
sub
jecxz
subps
fistpl
ss
cmp
jb
insl
inc
jmp
enter
pop
pop
sbb
imul
adc
sarl
mov
std
xor
pop
inc
mov
mov
jecxz
mov
lret
clc
lret
in
push
mov
or
jecxz
mov
mov
ja
lahf
aam
xchg
adc
inc
imul
insl
ror
insb
dec
or
mov
fwait
inc
inc
lods
adc
cmp
mov
popfw
test
pop
mov
rcl
sti
lea
or
mov
mov
imul
clc
out
xchg
add
es
lret
pop
push
mov
mov
mov
popf
xchg
js
push
push
push
packssdw
add
cwtl
xor
sbb
xchg
loop
dec
mov
mov
push
inc
xchg
lods
or
bound
pop
or
xchg
sbb
lret
mov
push
ret
fs
add
scas
mov
test
pop
inc
mov
in
mov
sub
mov
push
add
ja
xor
mov
aaa
xchg
mov
mov
push
hlt
jne
pop
out
mov
ss
out
fisubs
jl
pop
cs
jmp
es
push
addl
out
sbb
mov
call
addr16
ret
jbe
sbbl
jnp
aas
xchg
jle
dec
lcall
lret
inc
fistps
neg
pop
mov
cmove
mov
push
cmpsl
mov
popf
cmp
cmpsb
mov
jo
nop
stos
or
repz
sbb
in
imul
mov
stos
jmp
adc
mov
repz
test
hlt
pop
mov
arpl
inc
sub
lcall
push
xchg
daa
fisubrl
xor
add
test
in
ja
mov
rol
scas
jge
aad
jnp
sub
repnz
cmp
cmp
stos
lcall
ss
daa
aam
jge
xor
sbb
push
or
xor
popl
cmp
nop
mov
xor
xchg
into
push
and
sbb
push
cmp
into
inc
or
pop
in
lds
ss
daa
scas
xor
or
add
cmp
jecxz
sub
cmp
popa
stos
adc
movsb
push
sbb
sub
xor
ja
mov
inc
xlat
js
jb
pop
and
and
neg
sub
sub
xchg
fists
inc
dec
lret
lcall
mov
nop
scas
mov
and
and
nop
or
sub
aaa
mov
cmp
jmp
sbb
sbb
test
sub
jg
mov
inc
stc
repnz
fs
add
adc
lahf
ss
inc
idivb
scas
loop
testl
dec
push
or
pop
loope
cmp
lods
ljmp
dec
shll
cmpsb
push
imul
xorl
repnz
gs
out
cwtl
cmpsl
cli
cmp
push
in
les
sti
nop
mov
rcrb
or
aad
addr16
pop
cs
adc
leave
or
jb
das
repz
cmp
rorb
cmp
lret
inc
lea
rcr
pushf
cmc
fistl
cs
xor
int
mov
fsave
inc
cmpl
icebp
je
jne
jecxz
scas
sbb
in
mov
adc
aad
adcl
pop
pop
sbb
cmc
dec
inc
jecxz
dec
aas
cli
mov
jb
leave
scas
mov
cmp
and
testb
std
fdivrl
mov
mov
xchg
or
xchg
daa
mov
sarb
lret
push
sti
cmpsl
mov
popa
mov
sub
lock
mov
outsb
mov
ret
iret
leave
dec
es
and
dec
add
int3
cmpsl
lods
push
xor
mov
cmc
lods
jg
xor
mov
popf
scas
mov
and
cltd
aas
inc
inc
test
mov
testb
jns
adc
xchg
aas
imul
add
call
pop
add
jge
test
test
xchg
mov
xor
lret
add
jb
xor
outsl
lds
iret
sbb
dec
push
iret
fs
addb
mov
inc
pop
push
lret
or
imul
add
lret
inc
ja
xor
mov
in
rclb
xchg
jl
repnz
xchg
sbb
lea
ja
xchg
or
fidivrl
mov
xchg
enter
xor
mov
leave
mov
mov
iret
xchg
icebp
xchg
xchg
inc
lahf
out
and
push
jecxz
push
addr16
push
pop
and
insb
sub
mov
jle
daa
inc
in
jne
pusha
xor
cmpsl
popf
xchg
arpl
mov
js
or
adc
push
push
cmp
int3
cwtl
sub
scas
jl
stos
add
xchg
imul
sbb
pop
add
lds
push
mov
mov
or
in
iret
shll
leave
bnd
hlt
push
iret
lahf
arpl
push
adc
dec
iret
imul
in
add
arpl
sbb
out
push
inc
pop
out
dec
fisubrs
pop
inc
lds
adc
pop
mov
in
cmpsb
cmp
jmp
jbe
stc
in
mov
ljmp
adc
or
jno
dec
jl
out
dec
or
push
inc
inc
hlt
xor
in
cld
inc
scas
aad
xchg
cmc
shlb
add
jno
xchg
mov
cmpsb
sbb
in
in
lods
pop
insl
enter
daa
lods
fsubs
mov
sbbb
hlt
mov
ds
hlt
movsl
lock
cld
shrl
in
inc
push
cmp
bound
fisttpl
dec
add
xor
cmp
jne
lret
cmp
js
pop
pop
push
pop
push
stos
fstl
and
sub
xor
ljmp
xchg
pop
subb
xor
xchg
add
int
xchg
test
or
push
lcall
scas
mov
inc
xor
adc
xor
cmp
jmp
push
push
in
jg
adc
mov
mov
test
cmc
add
movsb
pop
jmp
cmp
push
icebp
testl
pop
xor
cmp
ds
or
jmp
cmc
jae
cmp
mov
test
cmpsl
imul
pop
pop
mov
lods
xchg
pop
out
push
xor
insb
aaa
fbld
das
repnz
aas
aaa
dec
repz
cwtl
adc
loopne
push
pop
dec
pusha
add
dec
xor
rol
lahf
loop
push
mov
sbb
ljmp
sub
lods
rcll
pop
mov
sub
test
cs
aad
lods
rcll
jno
stos
inc
xchg
sti
xlat
dec
jp,pn
je
mov
out
mov
aam
dec
xor
call
xchg
data16
mov
xor
dec
fstpt
fstpl
add
sti
pusha
aas
cltd
fs
mov
movl
aaa
std
cmp
cwtl
mov
enter
adc
icebp
imul
add
mov
push
lock
fcmovnb
das
vhsubps
gs
aam
and
ret
pop
outsb
mov
fidivrl
jbe
push
js
lods
mov
frstor
in
jl
ljmp
mov
je
out
dec
int
pop
cmc
adc
shlb
std
adc
ja
pushf
jecxz
frstor
bnd
jle
ljmp
xchg
pop
stos
imul
cwtl
adc
xchg
push
mov
mov
add
icebp
adc
mov
ror
dec
dec
test
test
push
adc
enter
hlt
mov
xor
or
addb
adc
jmp
xorl
mov
insb
in
insl
test
jl
add
dec
das
stc
ja
jle
dec
int
push
mov
mov
rorl
leave
in
jne
xor
out
pushf
add
cltd
out
jmp
mov
cmp
out
mov
adc
fsubp
sub
jae
jp
or
mov
sub
xchg
popa
jle
cmc
cli
in
mov
pusha
shlb
xchg
ss
addl
xor
popf
mov
aas
mov
out
adc
stos
repz
xchg
ret
sbb
cld
jmp
je
test
push
cmp
xchg
adc
gs
and
add
lea
imul
arpl
mov
ljmp
loopne
push
ret
cmpsl
ficoml
mov
cli
jb
int3
fidivl
pop
adc
out
lds
pop
push
mov
cmp
cmp
shll
push
pop
jbe
xchg
sbb
sbb
divl
ds
repz
and
push
push
es
inc
xor
inc
aas
out
mov
mov
mov
test
iret
mov
jb
fwait
sbb
in
xchg
loopne
enter
daa
lods
add
cmp
and
int
sub
testb
outsb
incb
and
out
adc
sbb
sbb
xor
or
std
adc
jae
jbe
dec
pop
sahf
mov
mov
jmp
js
data16
cmp
outsb
stos
mov
stos
loopne
sar
add
pop
xchg
add
out
dec
mov
fcmovne
and
and
push
aam
insb
int
or
sub
stc
lcall
mov
inc
or
test
clc
jb
jb
jne
mov
push
stc
pusha
cmp
adc
jae
ss
cmp
cmp
and
fs
repnz
cmp
arpl
cmp
into
fildll
cmc
cmp
popa
xor
adcb
or
ljmp
cmc
call
add
inc
data16
jmp
mov
ds
sub
mov
lcall
push
imull
loopne
in
insb
xchg
lret
adc
dec
fnstcw
out
mov
repz
fwait
xchg
push
sbb
sbb
and
xchg
shrl
leave
xor
outsb
leave
pusha
pushf
dec
adc
jmp
xchg
and
aad
test
mov
lock
jmp
dec
movsl
xor
je
pop
daa
jecxz
pop
in
mov
xor
cmpb
adc
dec
pop
outsb
inc
roll
out
inc
fldt
pop
inc
add
sbb
cmp
js
bound
and
mov
int
into
lret
sub
cmp
mov
adc
icebp
inc
loope
cld
sub
lret
xor
sub
or
data16
daa
in
das
movsb
int3
pop
mov
pop
add
aam
imul
pop
rcll
dec
cli
or
mov
loopne
dec
lods
push
loopne
mov
lcall
mov
pop
adc
stos
shlb
cltd
lods
pop
fwait
test
daa
mov
fisttpl
pop
gs
movl
xchg
mov
xchg
rcl
mov
xorb
fcmovne
iret
xchg
dec
cmp
push
call
adc
add
daa
xchg
or
jle
mov
aad
in
dec
in
mov
jmp
sbb
incb
dec
daa
or
mov
fwait
pop
lret
and
lods
shrb
test
add
lcall
xor
jmp
cmp
loope
aam
mov
mov
pop
cmp
add
or
insl
ljmp
xchg
mov
mov
in
and
jo
nop
jne
mov
mov
out
cli
out
jnp
call
jmp
xchg
mov
sbb
add
or
pop
or
aas
bound
rcr
es
insb
push
inc
aad
inc
push
mul
sbb
xor
imul
shrd
outsl
loope
mov
addr16
lock
popf
mov
push
mov
sub
sti
push
xchg
sbb
push
sbb
lret
insl
cs
aam
push
push
jg
mov
iret
jg
add
xor
jge
loopne
mov
call
sbbl
push
rcrl
imul
xchg
dec
push
int3
lds
pop
inc
inc
fidivs
lds
sub
es
or
mov
nop
cmp
cmp
xchg
sub
push
push
aad
jbe
lahf
mov
sbb
mov
add
fldl
sub
lahf
jl
lcall
or
jo
xchg
add
and
cs
xlat
and
push
lcall
cmpsb
push
out
in
jp
hlt
enter
daa
stos
scas
jp
cmpsb
cmp
sub
aas
dec
cmp
xor
xchg
cld
dec
movsl
mov
and
pop
out
and
push
fidivrs
in
sbb
aaa
add
js
xor
shll
js
inc
inc
pop
fisttpll
and
xchg
fsubrl
pop
sub
jg
dec
outsb
or
test
rcl
stc
out
mov
popf
adc
add
fwait
mov
and
hlt
lahf
push
xlat
lds
pop
arpl
sub
andl
lcall
andl
test
loope
out
jg
sti
divl
pop
loope
fs
ss
gs
cmp
loopne
add
int3
adc
lret
bound
add
mov
jmp
cli
jo
loope
cmc
add
push
xor
adc
fs
pop
xchg
push
imul
adc
stc
dec
into
pop
xchg
pop
lods
push
sbb
mov
jmp
mov
push
mov
add
fiaddl
xor
and
lret
pop
mov
xor
repz
movsl
fnstenv
pop
les
pop
mov
shll
sbb
pusha
adc
and
movsb
pushf
idiv
in
jmp
icebp
int3
cs
xchg
aad
or
sbb
jno
inc
mov
xchg
shll
jecxz
cld
popf
mov
and
std
mov
pop
and
sbbl
fcmovnu
dec
push
pop
movb
inc
mov
inc
xor
sub
jb
mov
inc
and
or
sti
notb
adc
shrl
lods
cwtl
das
clc
scas
mov
loope
mov
cs
pop
hlt
xor
push
mov
lret
mov
ljmp
dec
mov
subl
sub
sbb
jg
cmp
jl
inc
es
pop
insl
outsb
xor
cmpsl
stos
push
out
aas
lods
and
lods
rclb
mov
and
sub
jg
mov
rolb
push
cltd
in
dec
test
movsb
mov
xor
push
and
fucomp
or
clc
dec
dec
dec
xchg
cld
fcoml
pop
push
push
sar
test
pop
add
stos
jbe
push
out
ds
pop
xchg
xchg
xor
push
ret
std
jge
out
addb
cwtl
in
or
fidivl
xor
addl
jle
dec
push
add
addb
xor
inc
and
icebp
or
xlat
xchg
fwait
xchg
push
dec
xchg
add
mov
lcall
ljmp
pop
sahf
rclb
add
mov
mov
dec
mov
aad
insl
into
mov
pop
ret
jp
push
adc
jne
pushf
mov
out
pop
xchg
and
aam
jmp
push
sbb
inc
icebp
pop
out
repz
enter
aam
cltd
or
in
daa
push
insb
mov
std
stos
jle
imul
pop
push
pusha
push
into
xchg
fistps
lret
fmull
pop
xchg
sbb
inc
cltd
bound
pop
test
popf
fsubs
jnp
jge
mov
stos
fldenv
mov
fs
imul
scas
aaa
pop
cmp
loopne
adc
xor
leave
push
sbb
mov
inc
cmp
movsb
or
mov
add
fidivrl
add
inc
and
mov
sub
mov
ficoms
rolb
mov
fisubs
push
cmp
pop
pop
movsb
and
pop
out
jbe
and
jge
lea
aaa
mov
add
inc
jl
xor
push
in
ss
xor
std
decl
jb
cltd
and
test
push
gs
inc
push
and
in
popa
ds
daa
stos
cmp
int
loope
sub
pop
adc
add
push
movsl
add
shlb
loope
push
mov
jns
andb
add
lcall
addl
pop
add
and
add
push
push
mov
lods
popa
sub
outsb
outsb
jo
in
adc
mov
jnp
push
xchg
enter
cli
mov
sbb
mov
in
and
or
int
mov
jp
adc
pop
shrl
mov
sbbb
ja
into
imul
mov
icebp
or
into
sub
and
jbe
movsb
add
out
push
xchg
fwait
cmp
and
sub
push
xor
sub
sub
or
pusha
cmc
enter
mov
test
loop
arpl
adc
push
addl
loop
push
lods
cmp
dec
out
enter
pop
mov
in
jo
adc
pop
popa
cltd
gs
pusha
mov
pop
stos
or
fldcw
or
xchg
xchg
aas
jo
insb
mov
cmp
rorl
sub
dec
sub
dec
cwtl
cs
iret
jbe
pop
lods
dec
dec
mov
mov
sbb
xchg
ret
je
mov
jecxz
in
mov
stos
cwtl
call
adc
lahf
pop
aam
jne
rep
cld
dec
cmpsb
je
fisttpl
push
pop
imul
mov
roll
mov
pop
push
mov
push
mov
push
int
std
js
mov
mov
xor
mov
leave
iret
icebp
out
sub
cld
jle
in
lret
sysexit
mov
mov
fwait
mov
stos
cld
call
mov
dec
or
ret
or
push
arpl
insl
push
jmp
cmpsl
test
fwait
add
jne
lods
sub
out
mov
inc
cmpl
sbb
pop
push
add
rcrb
mov
cltd
sbb
xchg
test
rcll
in
das
fstl
pop
pop
xchg
cmp
ljmp
xlat
pop
lods
and
cli
out
mov
nop
test
sahf
adc
cmovbe
scas
add
cmp
pop
xor
fstl
mov
fildl
imulb
push
xchg
lock
push
mov
iret
add
ds
mov
push
push
repnz
add
cmpsl
mov
xor
outsl
in
jns
dec
add
ljmp
mov
jge,pt
inc
icebp
pop
jns
sub
dec
cmpsb
movsb
inc
mov
push
cli
mov
lret
sub
dec
and
jne
out
mov
int3
xchg
out
cmp
cmp
mov
addr16
out
xchg
sbb
mov
out
lret
imul
or
jp
inc
repz
ss
insb
es
push
push
jle
adc
in
rcll
mov
mov
xchg
scas
loope
pop
leave
insl
pop
inc
movsb
or
sub
in
jbe
in
incl
aad
stos
cmc
add
movl
subl
jne
adc
cmp
push
leave
into
lock
hlt
jle
pop
arpl
push
mov
cmp
push
or
ss
inc
shll
sub
out
int3
fwait
mov
sbb
inc
test
push
xchg
pusha
rcrb
inc
mov
xor
movsb
lods
scas
mov
jbe
push
jge
and
sbb
fdivs
jnp
fimull
ret
jp
jno
xchg
xchg
lret
sbb
xor
pop
jle
scas
push
cmp
inc
imul
push
xor
inc
shll
cmpsb
and
imul
ret
xor
in
pop
add
test
push
inc
loope
or
cmp
aam
movsl
or
push
and
repz
popa
pusha
or
dec
jbe
mov
cmpsl
add
adc
inc
movsl
xor
loopne
js
pop
dec
pop
pop
push
mov
mov
or
adc
push
outsb
shll
ss
mov
xchg
jne
jae
sti
ret
push
mov
mov
imul
push
fst
mov
in
rcll
pushf
pop
pop
xchg
ljmp
add
jo
jbe
mov
sahf
ret
loop
test
xor
ret
push
jg
div
mov
jnp
stc
test
mov
adc
pop
ret
ss
dec
cmp
push
inc
dec
stc
xlat
lret
or
cmp
lret
inc
or
cmpsl
daa
push
cmc
jb
xor
roll
loop
imul
cmp
add
int
gs
ljmp
dec
mov
out
pop
jmp
mov
fistl
push
jg
iret
gs
loopne
inc
mov
adc
shr
les
arpl
push
xor
xchg
mov
cmp
jne
xlat
dec
cmp
sub
push
in
adc
pop
pushf
dec
fimuls
mov
mov
in
loop
dec
dec
in
jge
inc
loopne
into
dec
or
mov
mov
push
adc
mov
inc
sub
repz
nop
call
cmp
xchg
cmc
add
cmp
pop
or
icebp
inc
xchg
push
cld
inc
push
adc
jb
mov
mov
repz
rcll
mov
xchg
cld
gs
pop
jmp
shlb
mov
test
test
in
mov
mov
xor
lock
jnp
mov
inc
add
ret
lcall
insl
cmp
push
dec
jmp
mulb
movsl
cmp
scas
lods
xchg
testb
imul
nop
jns
mov
jno
addr16
hlt
popf
cltd
push
push
call
mov
mov
push
test
push
fnstsw
idiv
sti
jo
jp
mov
inc
jmp
jno
push
mov
stos
push
mov
cmp
and
push
jns
and
movsl
and
pop
jno
or
xor
mov
mov
fiadds
dec
and
test
pusha
cmpsl
xchg
push
xor
xchg
cs
inc
push
leave
lock
out
lret
out
dec
push
xchg
rolb
add
push
stos
pusha
fcoml
xor
fidivrl
pop
in
pop
jmp
mov
mov
mov
xor
fwait
ja
inc
push
dec
cltd
pusha
adc
push
sub
mov
push
inc
dec
sbb
pop
jne
xchg
jg
cmp
mov
sbb
iret
fistpll
pop
loop
xchg
call
mov
pop
sub
lret
or
push
adc
insb
xchg
ss
push
jne
jle
mov
in
mov
pusha
cmp
jno
pop
dec
ja
subb
scas
clc
int3
jae
and
push
cmp
cmpsb
popf
es
rep
fcoml
popf
adc
push
or
mov
daa
das
scas
std
sub
push
push
xor
push
lods
ss
pushf
inc
lret
in
xor
inc
push
adc
pop
hlt
inc
aas
push
adc
push
push
dec
repnz
cmpb
xchg
jne
pop
sahf
mov
ja
test
repnz
cmp
mov
movsb
cmp
push
sti
xlat
stc
jbe
jg
jge
rcrw
add
push
aaa
cmp
or
add
jl
fbld
ss
push
mov
fidivl
mov
sbb
and
xlat
subl
bound
in
das
sub
enter
daa
test
ljmp
adc
sub
adc
pop
imul
adc
and
les
and
push
push
cmpsl
adc
out
mov
push
xor
mov
gs
inc
ret
pushf
jecxz
jl
adc
fsubrl
test
dec
outsb
cli
outsb
ss
loopne
pop
and
pop
repz
aam
mov
ret
aaa
addr16
inc
mov
push
loopne
xor
sub
stos
pop
adc
rcrl
mov
sahf
data16
or
fsubrl
sbb
movsl
jg
jp
mov
cmp
stc
cmp
dec
cmp
sub
fcoms
jecxz
testl
mov
and
inc
mov
into
mov
je
push
push
push
push
pop
outsl
mov
loop
mov
xchg
adc
add
add
inc
or
inc
scas
dec
out
js
cli
imul
mov
inc
dec
push
sti
stos
or
lock
xchg
daa
pop
call
movsl
outsl
fstps
sbb
les
ljmp
inc
xchg
cmp
test
xlat
mov
sub
movsl
adc
pop
mov
testl
int3
aad
xchg
nop
mov
or
inc
repz
dec
addl
lret
imul
setae
cmp
cs
jl
jg
push
cmpsl
out
inc
push
pop
rolb
dec
aas
mov
dec
jb
subl
shll
lahf
sar
popf
jbe
pusha
add
mov
icebp
pushf
add
cld
aam
imul
mov
sub
pusha
and
mov
cmp
out
sub
cs
and
stc
cmpsl
cmpsl
jnp
mov
cmp
icebp
lods
add
cmpsb
mov
xchg
shll
mov
nop
push
rol
data16
cltd
mov
test
sub
frstor
xchg
clc
ljmp
ss
mov
ret
jmp
push
stos
inc
xchg
cld
out
subb
jns
push
push
jle
cs
add
and
or
call
mov
loope
mov
test
adc
xor
inc
out
add
xlat
mov
lret
push
cmp
add
insb
ret
aam
jnp
repz
je
in
pop
adc
lret
dec
push
mov
out
call
jnp
mov
jno
repnz
mov
aas
lret
and
jne
test
movsb
out
notl
bound
dec
jmp
mov
enter
cmpsb
out
mov
lds
addr16
xchg
xor
test
lods
insb
cld
jnp
push
push
mov
dec
in
mov
xchg
fbstp
inc
xchg
push
stos
and
cld
out
inc
mov
pop
sbb
cld
mov
out
mov
sub
ds
xor
jae
jne
mov
imul
lret
test
adc
jno
iret
sti
sarl
ret
inc
leave
mov
imul
inc
pop
adc
add
mov
inc
iret
mov
ja
in
or
jno
ljmp
out
das
lds
add
xchg
fs
adcl
repnz
cmp
cmp
xchg
mov
push
dec
mov
jbe
pop
mov
sbb
add
or
xchg
enter
add
adc
xchg
mov
jno
push
mov
scas
push
jg
addr16
test
cmp
inc
icebp
push
mov
in
push
jns
enter
daa
cmpsl
mov
loope
cmp
push
push
jle
ds
xorl
lahf
push
push
sub
sbbl
sbb
ret
int3
dec
mov
js
rol
fldcw
push
push
mov
inc
xchg
pushf
iret
sub
and
sbb
or
movsl
aas
xor
js
cmp
and
jmp
sub
mov
pop
jecxz
popl
jns
and
shll
cmc
mov
sbb
gs
or
incl
stc
mulb
dec
sub
stc
repz
fs
jl
adc
and
insl
xchg
dec
cmp
int3
adc
test
in
xchg
xor
and
lahf
popf
into
insl
sbb
cmc
sbb
adc
outsl
addr16
loop
adc
push
dec
sub
push
ret
add
shll
aaa
mov
pop
out
push
cmpsl
cli
sahf
fiaddl
in
mov
mov
inc
cmpsb
sub
cmp
lcall
aad
adc
mov
in
les
iret
mov
sbb
dec
sub
xlat
enter
in
jecxz
adc
sbb
jmp
stc
fsubrl
adc
aad
ja
nop
cwtl
fimull
dec
stos
lcall
clc
outsb
pop
je
push
jle
outsb
xor
mov
lcall
cmpsb
fld
mov
stos
pop
in
sbb
dec
addr16
fistl
jno
inc
movsl
into
inc
inc
mov
fsubrl
mov
or
shl
mov
jnp
insl
add
fadds
mov
cmpsl
aas
cld
decl
mov
mov
lock
pop
xor
das
loop
aam
mov
aam
in
stc
inc
insl
or
and
adc
mov
push
inc
test
insb
sub
mov
scas
jg
and
jmp
dec
pop
scas
jl
cltd
rcr
test
aas
jl
cs
je
cmp
pop
xchg
clc
add
rcll
mov
shrb
lret
xchg
mov
mov
packsswb
movb
mov
xor
loopne
mov
in
push
dec
out
sbb
into
mov
faddl
sub
inc
test
add
xchg
lret
lcall
sub
idiv
jg
iret
cld
mov
xchg
movsl
leave
pop
mov
jg
mov
stos
arpl
dec
jg
mov
movsl
or
icebp
dec
dec
fists
aad
add
mov
out
inc
sub
mov
int
jle
das
cmpl
lods
or
sub
shlb
push
test
and
pop
fwait
insb
addr16
xor
cld
mov
xlat
arpl
aas
push
pop
pusha
jb
je
xchg
fisubl
sub
xor
cmp
inc
jae
aam
push
mov
add
mov
push
push
repz
int3
test
clc
and
scas
ret
rcrl
push
loop
add
push
dec
mov
ret
ret
leave
xor
hlt
pop
shll
inc
inc
push
orl
lock
stos
mov
add
lret
outsl
add
pop
shrb
xor
sub
popf
dec
mov
push
cltd
fdiv
jbe
scas
adc
inc
cwtl
test
jns
inc
aaa
mov
adc
jno
inc
mov
dec
adc
orb
sub
jo
jno
scas
out
xchg
add
test
xchg
dec
mov
xor
ret
in
std
test
and
cmpsb
lret
out
cmp
mov
sub
sbb
cmp
aas
aam
and
fldenv
cmp
add
std
repnz
sbb
add
imul
dec
inc
sahf
mov
sbb
je
sbbb
sub
mov
sbb
sbb
sub
xchg
leave
aam
xor
push
mov
jmp
and
adc
fcomps
sub
jno
push
push
cld
lcall
pop
mov
xchg
xor
pop
and
testb
lods
jg
lea
mov
push
xor
stos
mov
dec
adc
stos
push
ss
mov
fadds
xor
xor
cmpsb
orb
xor
push
add
cmc
in
test
and
lahf
outsl
inc
add
loop
mov
imul
and
les
inc
lods
xlat
add
cmp
cmp
cli
shrl
mov
sbb
cwtl
sti
or
call
and
loopne
outsl
dec
pop
and
adc
fcompp
mov
clc
repz
push
xchg
mov
pop
or
xchg
xlat
pop
test
adc
jnp
dec
imul
jne,pn
mov
add
mov
ss
sbb
addr16
outsl
add
je
call
popf
mov
push
lea
adc
or
bound
dec
or
push
jo
fcmovnb
adc
cs
sub
add
xor
cltd
jb
mov
mov
xchg
sbb
shl
inc
mov
adc
in
cwtl
inc
add
xchg
cmp
push
cld
sub
sub
lret
scas
push
mov
outsb
mov
dec
dec
lock
xchg
mov
mov
es
clc
int3
ret
inc
pop
nop
outsl
ljmp
sahf
inc
cmpsl
movsl
std
xor
popa
push
inc
lods
xlat
orb
sarl
xchg
mov
into
sbb
shlb
and
notl
jae
lods
jecxz
mov
in
dec
push
icebp
repz
mov
clc
jne
cwtl
xchg
aaa
xchg
or
fwait
xchg
repnz
pusha
mov
and
repnz
div
pop
push
or
test
ret
add
ficoml
xor
mov
mov
out
xchg
dec
push
fcmovb
test
cmp
xchg
aaa
sbb
mov
fwait
jb
add
add
mov
je
xor
cwtl
jns
sub
push
xlat
sbb
push
daa
dec
mov
gs
ja
inc
push
jb
popf
mov
jne
mov
xchg
dec
ret
jne
cli
insl
mov
jp
out
mov
and
mov
out
jmp
dec
cmc
mov
or
out
mov
sub
mov
fucomi
jp
mov
and
lret
lahf
inc
jnp
mov
inc
loop
inc
dec
in
pusha
or
test
xchg
sti
inc
sub
sbb
inc
rorb
jae
xchg
mov
xor
popf
fwait
hlt
adc
movsb
jb
push
cmpsl
scas
lods
stos
sbb
loope
mov
les
push
sub
jp
mov
xchg
xlat
leave
stos
cmpsb
mov
arpl
push
xchg
or
and
adc
stc
dec
push
add
inc
mov
inc
pop
dec
pop
pop
xchg
sbb
imul
mov
jge
ret
cmp
movsb
fldenv
add
jae
jge
xchg
sbb
or
push
push
jno
pop
loop
rclb
push
pop
mov
sbb
leave
jo
aas
aas
scas
int
or
test
pop
mov
inc
addps
xor
fmul
fnstcw
popa
daa
movsl
nop
loopne
fdivrs
loope
lcall
sub
pop
pop
cmp
ds
bound
aam
lahf
fldl
sbb
xor
push
mov
pop
js
jp
pop
push
nop
aas
push
aad
push
fstps
sub
fistps
adc
divl
icebp
loopne
addb
mov
mov
mov
mov
int
jmp
das
in
loope
add
lea
pop
lcall
in
and
add
mov
mov
test
repz
gs
sbb
popa
cmp
inc
adc
and
repz
cmp
inc
xor
testl
jge
or
test
xchg
das
or
fistps
xor
je
and
xchg
scas
hlt
add
dec
data16
shrb
cmp
or
test
cli
cli
add
mov
in
xchg
sti
mov
into
decb
cltd
mov
dec
iret
fsub
insb
pop
inc
jno
adc
mov
fld
enter
inc
data16
daa
xchg
arpl
pop
sbb
ret
xlat
inc
cli
shrb
inc
loop
iret
add
pushf
clc
xchg
fucomp
je
daa
cs
push
aad
xchg
dec
imul
mov
je
shrb
leave
cmp
lea
sub
mov
or
out
sub
cmp
pop
cwtl
loopne
inc
mov
pusha
inc
inc
cmp
xchg
jns
jb
sbb
scas
dec
and
orl
mov
mulb
adc
mov
mov
mov
and
cld
push
add
in
dec
mov
mov
jo
lock
xchg
das
mov
dec
sub
mov
ret
and
repnz
fdivr
mov
mov
insl
mov
andl
cli
mov
hlt
jmp
and
and
inc
pop
in
sub
dec
cltd
cs
inc
test
fisttpll
fstp
pop
movsl
clc
mov
xchg
xchg
jbe
jo
push
xchg
roll
adc
mov
adc
lods
xchg
ds
sub
mov
mov
pop
add
add
in
adc
addl
xchg
sbbb
push
scas
pop
xchg
sbb
pusha
cltd
cmp
pop
aam
cwtl
push
mov
push
and
pop
add
mov
xchg
jns
cli
adc
mov
mov
and
test
lea
adc
cmovp
lret
mov
imul
dec
movsl
enter
cmp
mov
push
sub
xchg
xor
sbb
cmp
push
xchg
adc
add
mov
dec
sub
mov
cmp
inc
test
push
push
arpl
addr16
insb
cmp
xchg
insl
jle
scas
repz
stos
dec
pusha
test
sbb
aam
insb
xchg
into
fbstp
pop
fcompl
shlb
into
push
inc
aas
test
mov
out
into
stos
mov
xchg
jp
js
dec
jp
imul
nop
scas
mov
push
jo
mov
iret
sbb
mov
and
sbb
add
inc
dec
outsb
or
popf
or
dec
pop
cmc
fisubrl
jg
xor
sbb
ja
fsubrp
xchg
inc
idivb
lock
xor
pusha
add
shlb
adc
movsb
fs
push
aaa
jmp
jp
pop
xchg
sbb
je
aaa
ss
or
sbb
jl
daa
push
dec
repnz
out
fsubrl
xor
pop
and
scas
lods
test
test
daa
je
inc
sahf
mov
xchg
in
lret
mov
enter
daa
movsb
fstps
or
dec
loope
xchg
inc
sub
jno
cmp
dec
mov
movsl
das
stc
cli
and
adc
mov
lcall
dec
das
pop
adc
ret
cmpsb
js
mov
pop
xchg
jmp
pop
push
xor
aad
or
xchg
mov
and
shl
movsb
push
cld
sbb
lahf
and
mov
in
and
sub
in
jb
int
sub
pop
or
mov
shl
decl
pushf
sahf
repnz
test
sbb
orb
jg
mov
mov
cmp
fs
adc
jne
ss
nop
fdivr
sbb
out
fiadds
in
xor
xor
cmp
pop
mov
into
push
scas
cmp
jb
pop
xor
ljmp
hlt
and
ss
in
add
mov
aas
lods
movsl
add
mov
outsb
or
orl
cli
aaa
stos
shll
bnd
sti
data16
andb
fmulp
loopne
pushf
jnp
vmovlpd
lahf
lods
loopne
mov
xchg
es
adc
std
mov
xlat
test
shrb
inc
std
icebp
adc
sub
pushf
mov
mov
aad
mov
ss
enter
aas
mov
sub
fwait
or
jecxz
call
sbb
pop
dec
add
or
pop
push
push
mov
dec
sub
fcompl
xchg
inc
icebp
addr16
aas
xor
jb
mov
mov
stos
cmp
rcr
push
mov
out
mov
bound
cwtl
dec
ror
mov
stc
leave
mov
add
cld
cmp
lret
test
add
mov
cli
xchg
lock
pop
xchg
das
pushf
inc
stos
mov
adc
jecxz
or
xor
sub
insl
mov
jo
cmpsl
mov
hlt
xor
dec
jmp
lods
stos
jmp
mov
mov
mov
pop
or
call
or
insl
cltd
outsl
push
test
pop
nop
mov
adc
pusha
fprem
jmp
add
mov
mov
rcrl
jns
scas
cmc
jl
decl
xchg
test
test
inc
push
orb
or
xorl
pop
mov
in
inc
xchg
dec
and
inc
test
mov
xchg
js
adc
insl
inc
inc
lds
subl
fwait
shlb
push
les
xchg
add
jmp
push
fwait
mov
out
push
inc
jns
outsb
jnp
sub
stos
xchg
xchg
adc
aad
sub
pop
pop
fisttpl
ja
fcoms
dec
pop
cwtl
dec
mov
xorl
gs
cmp
xchg
xor
fdivrl
add
out
jae
call
jmp
fistps
fwait
out
pop
cmp
mov
hlt
add
fistpll
stos
out
and
stos
insb
test
xchg
jnp
test
jle
bswap
in
imul
inc
push
inc
fcomip
push
cs
mov
leave
dec
inc
out
cmpsl
jae
fidivl
popf
jmp
xor
push
and
xor
stc
jecxz
imul
inc
scas
in
outsb
or
xlat
lods
adc
xor
leave
cwtl
pop
into
hlt
inc
or
inc
dec
sbb
or
sbb
imul
push
ficompl
pop
add
xchg
int3
sbb
and
lds
xchg
sar
sbb
repnz
push
cmp
xor
push
xchg
divb
pop
jmp
sbb
lahf
pusha
or
mov
jl
mov
push
and
stos
xor
jp
mov
and
xor
push
repnz
inc
sub
lcall
iret
mov
dec
cmp
mov
sub
pop
out
lret
ds
xchg
fldenv
or
scas
push
jbe
sbb
add
add
mov
aaa
fdivr
sub
aaa
or
sub
aad
int3
push
sub
faddl
test
outsb
and
sti
shrb
scas
sbb
insl
andb
push
sbb
sbb
mov
sub
int
pop
mov
lcall
ret
mov
and
sbb
ljmp
jg
pop
andb
jg
dec
push
mov
std
outsl
stc
iret
and
adc
mov
pop
cs
mov
setae
rcrl
inc
xor
testb
stc
jb
cmc
cmp
lock
jecxz
and
into
std
imul
mov
data16
shrl
push
push
xorb
mov
pop
pop
mov
adc
pop
ljmp
push
sub
sbb
pop
fldcw
sbb
jmp
pusha
repz
xchg
jmp
aaa
pushf
cmp
jge
xlat
les
sub
jp
pushf
dec
push
dec
cs
ds
aad
and
nop
add
xchg
dec
daa
add
inc
push
subb
out
lret
lods
test
iret
jbe
lea
add
aad
pop
mov
pop
adcl
mov
push
inc
stc
pop
ficomps
push
inc
shll
lahf
js
iret
pushl
xchg
and
dec
sbb
sub
pushf
and
or
loopne
aam
leave
mov
xchg
icebp
iret
lcall
sbb
adc
mov
call
pop
das
jnp
icebp
mov
or
aam
lods
nop
ret
hlt
ja
es
fisttpl
insl
cmpsb
mov
mov
mov
into
shlb
pushf
lods
sbb
mov
cmp
sbb
push
or
rcr
stos
mov
pushf
xchg
or
mov
cmp
frstor
inc
or
es
xchg
hlt
data16
hlt
lea
pop
pop
jle
stos
out
xor
add
fwait
in
pandn
or
sbb
pop
mov
lock
dec
mov
test
dec
popa
xchg
pop
dec
sbb
push
lea
xchg
mov
fwait
jmp
xchg
push
mov
add
repz
xchg
mov
xor
ss
xchg
in
cmpb
fmuls
pop
xchg
push
ja
call
inc
mov
mov
xchg
imul
sbb
dec
jbe
push
xor
push
jmp
stos
push
mov
clc
int
lods
cwtl
loop
add
int3
and
jge
jnp
cmp
pop
nop
ss
ficoms
add
pop
dec
xchg
xchg
inc
icebp
lcall
lret
xor
mov
arpl
xchg
sub
fistps
and
imul
xchg
scas
dec
mov
decb
repnz
aad
ret
jle
pop
push
hlt
mov
lret
mov
push
scas
pop
or
xchg
jb
inc
dec
xchg
sbb
adc
add
sub
or
jmp
fisubrs
enter
cmp
rcrb
mov
sahf
mov
bnd
cmpsb
cmp
movsb
jp
add
or
jge
stos
jge
rclb
mov
add
push
andl
shlb
push
add
loop
outsl
inc
push
jo
and
scas
push
xchg
and
add
mov
push
mov
mov
push
sahf
enter
daa
mov
mov
jae
dec
sbb
ds
iret
mov
movsl
lods
hlt
lahf
cmp
push
dec
cli
sbb
jecxz
add
jnp
xor
and
fwait
iret
dec
pop
cmp
repz
adc
enter
inc
push
fisubrs
adc
sub
xor
adc
mov
loope
subb
mov
xor
push
push
xchg
push
repnz
int
fwait
or
pop
or
push
lcall
mov
sbb
or
cmp
mov
jg
jecxz
mov
repz
fs
inc
adc
and
mov
add
testl
test
cmp
arpl
into
fsubrl
out
cmc
add
xor
outsl
ret
loop
inc
in
imul
pop
add
test
cli
in
subl
shl
sub
pop
mov
enter
les
idiv
je
jge
pop
sub
pop
mov
inc
or
notb
mov
sbb
jae
sub
add
sub
xchg
stos
adc
in
rcrb
mov
outsl
aad
or
fisttps
mov
inc
gs
dec
dec
scas
push
je
andl
lea
dec
cmp
or
pop
insb
mov
stos
jecxz
dec
stos
loope
adcb
pop
subl
mov
outsb
add
mov
xchg
adc
sarl
imulb
std
mov
or
xchg
pop
or
popa
icebp
or
cmpsb
icebp
es
outsl
xchg
lret
xchg
mov
jbe
mov
cmp
pop
dec
andb
enter
cmp
es
les
imul
xchg
cmpsl
mov
pop
and
or
add
pop
xor
and
repnz
and
dec
jns
shlb
pop
fiaddl
inc
push
std
bound
clc
popa
sti
xchg
xor
lods
ljmp
mov
stos
frstor
cli
xchg
adc
outsl
shlb
or
mov
ja
mov
repz
push
dec
repnz
xchg
xchg
ja
jns
enter
das
or
fmuls
cs
push
or
push
add
push
clc
pop
pushl
inc
daa
jns
inc
add
inc
mov
xorl
add
pop
push
jne
ja
jnp
dec
ds
mov
sbb
mov
inc
in
dec
dec
add
mov
stos
out
xor
add
aam
cmp
pop
pop
mov
addl
out
xlat
int3
sub
cmpsl
fdivs
jp
insb
sub
insb
jle
inc
jnp
mov
jle
lods
jns
bound
lahf
pusha
jns
mov
xor
loope
inc
call
roll
stos
jae
xor
push
mov
lea
nop
aas
in
mov
inc
mov
jg
mov
xor
mov
fwait
rclb
mov
and
xor
cmpsl
into
leave
xchg
arpl
lods
inc
push
mov
or
push
test
fcmovb
fsub
add
jno
repz
dec
pop
sbb
dec
iret
sbb
shlb
mov
leave
fiadds
xor
movsb
add
sbbb
test
mov
aaa
jae
loope
pop
jb
jno
ljmp
aas
pop
jae
out
add
jo
inc
scas
scas
dec
lea
and
jg
test
mov
sbb
in
cmp
enter
daa
mov
cmpsl
xor
shll
pusha
sub
test
inc
ds
push
mov
inc
repz
inc
pop
jmp
cmpsb
sbb
jge
pop
xchg
scas
xor
adc
pop
popa
leave
loop
fisubl
push
dec
cmp
jp
fadds
sub
addb
mov
clc
shlb
cmp
xchg
or
mov
mov
mov
and
clts
cmc
aas
movsb
int
fnsave
sub
sub
mov
adc
mov
test
sbb
push
sahf
fistl
test
sub
cmpl
push
sahf
stc
cmp
aam
adc
add
push
push
cmp
cs
testl
imul
xchg
movsb
xchg
jnp
sub
mov
push
les
jmp
loop
out
imul
cmp
je
jge
mov
mov
clc
out
sahf
fs
ror
sub
in
xor
mov
xchg
in
dec
data16
loopne
imulb
adc
xchg
aaa
fstps
pop
repz
xchg
outsl
jg
lret
cmp
xlat
inc
sti
ret
sub
addl
mov
jmp
std
shrl
pop
lret
aad
push
pop
nop
mov
push
cltd
inc
js
xchg
dec
ret
je
mov
add
subb
sub
and
dec
pop
pop
push
jmp
inc
mov
dec
jmp
movsb
push
pop
and
sti
inc
iret
lahf
sti
inc
inc
dec
sarb
or
shlb
dec
popa
ror
push
inc
imulb
jle
cwtl
jge
lret
push
orl
add
jnp
testb
fcomps
mov
das
cmp
mov
stc
loope
aam
push
or
adc
stos
incb
dec
ret
add
mov
lahf
pop
popa
frstor
mov
xorb
enter
lea
or
imul
xor
dec
rclb
loopne
fnsave
clc
pushf
int
xchg
jb
ss
jbe
scas
or
int3
shl
out
sbb
mov
push
push
data16
popf
sti
faddl
popf
das
inc
or
or
les
xchg
dec
pop
repz
or
xchg
ljmp
or
mov
pop
test
push
lods
adc
or
sub
xor
xchg
sbb
in
jg
push
mov
cmp
mov
or
jp
mov
nop
jle
shll
add
xor
jnp
adc
jl
adc
bound
lret
or
adc
xchg
out
ret
into
xor
or
or
jp
fildl
ret
jne
insb
jmp
repnz
test
push
xchg
pusha
adc
push
fists
mov
sbb
pop
mov
jno
jae
inc
jno
push
bnd
pop
or
push
loop
push
stos
push
cli
pop
xchg
pop
es
sbb
test
into
scas
adc
sbb
cmpsb
iret
xchg
es
ret
cmpsb
leave
std
xor
and
cwtl
inc
push
rorb
sub
dec
and
add
lret
fimuls
dec
mov
lds
leave
test
mov
sbb
popa
cmp
out
movsb
nop
cmp
push
jae
mov
sbb
mov
sbb
pop
hlt
aaa
xor
sbb
imul
dec
scas
push
les
lret
xor
mov
scas
sub
shrb
scas
mov
cmpsb
mov
and
rclb
cmp
inc
xchg
loope
pop
sbb
cvtps2pd
xlat
jo
ds
mov
and
lock
out
mov
sbb
sti
hlt
xor
lret
es
mov
xor
pop
xchg
jbe
push
jmp
push
mov
xor
les
jns
decb
and
rcll
int3
xchg
cmpsl
andb
or
mov
clc
push
jmp
mov
hlt
sub
dec
pop
or
dec
lcall
jb
mov
xchg
mov
jle
test
adc
imul
xchg
jl
stc
hlt
push
shll
mov
ss
push
mov
jne
in
jmp
xchg
add
stos
mov
xchg
cmp
mov
inc
into
mov
imul
outsl
orb
loop
mov
repnz
fcomip
add
inc
adc
les
mov
outsb
mov
jg
push
cli
add
aam
sahf
icebp
xchg
sti
and
andl
mov
loope
loopne
loopne
xor
add
into
fs
jb
fsubs
insl
sbb
jmp
add
sbb
cmpb
jmp
add
cs
pop
xchg
aad
add
inc
std
std
inc
mov
dec
cmp
pcmpeqb
inc
jo
xlat
nop
xchg
fdivs
and
movl
aam
sbb
shrl
cld
insb
pop
movsb
inc
inc
push
lret
sbb
mov
pop
jb
sub
mov
push
rcrl
xor
std
push
mov
cmp
add
inc
sbbl
or
cld
sub
cwtl
lret
gs
mov
or
das
sbb
mov
lock
add
cmp
ret
mov
pop
loop
pop
jge
dec
mov
jecxz
mov
hlt
pop
aaa
lods
pop
icebp
dec
mov
mov
mov
or
mov
pusha
cltd
inc
fadds
mov
lea
adc
fstpl
mov
pusha
ljmp
sub
stos
mov
stos
jp
mov
inc
adc
add
test
push
xchg
int
dec
rorb
test
xchg
jge
inc
push
mov
fbstp
inc
lahf
jecxz
or
fdivs
fwait
mov
out
fdivrs
movsb
pushl
loopne
cmp
ret
jns
test
pop
xchg
into
xor
jecxz
mov
pop
out
adc
popa
das
xchg
dec
and
sbb
xlat
shll
mov
cmp
jne
dec
cmpsl
mov
pushf
out
out
push
clc
cli
lahf
jmp
xchg
or
xchg
andl
out
and
popf
adc
incl
sbb
idivl
jnp
hlt
add
int3
sbb
jo
mov
movb
in
icebp
and
aad
inc
adc
mov
cltd
sub
popf
test
mov
and
xchg
sub
rclb
xchg
lods
cwtl
scas
js
repnz
sar
push
adc
pusha
das
iret
repz
ret
xor
hlt
insb
jmp
arpl
adc
sbb
or
add
filds
lods
pop
fisubrl
fsubs
add
sub
pop
js
aas
ficomps
mov
fadd
push
ja
jnp
popa
repnz
mov
cmp
out
sub
ret
jbe
xchg
cmp
rcl
add
xchg
xchg
aaa
icebp
jp
or
mov
jl
adc
xchg
pusha
push
lods
iret
xor
out
jecxz
pop
cmpsl
addr16
int3
push
test
push
adc
cmpsb
inc
aam
in
dec
lock
mov
add
loope
movsl
adc
dec
sarl
mov
aad
push
jecxz
and
pop
lahf
xchg
xor
sbb
sbb
dec
xor
in
ss
scas
jmp
js
add
shll
push
notrack
add
das
loop
sub
in
adc
sbb
cmpb
cmpsl
mov
xchg
jmp
adcl
int
or
sub
shrl
xchg
movsl
lcall
inc
mov
xchg
sahf
and
rolb
ret
into
in
in
in
stos
test
pop
adc
add
test
icebp
fsubs
addr16
insl
xor
push
cmp
mov
imul
or
push
into
lock
sbb
loop
int
imul
aad
add
fnsave
sbb
jp
ss
mov
or
lret
sti
sar
lret
dec
push
gs
and
jl
hlt
pop
jmp
add
or
les
into
or
cmpsl
sbb
mov
and
rclb
adc
sbb
jmp
leave
adc
sub
aad
adc
jo
fmull
lods
mov
dec
mov
mov
mov
fistpl
in
dec
xchg
call
xchg
mov
xorl
cld
fisttpl
sbb
inc
fstpl
inc
js
enter
add
lret
xchg
popa
enter
push
dec
divb
or
repz
cmpsl
mov
lret
cmp
pushf
icebp
sub
add
push
dec
xchg
lret
aam
push
mov
xchg
lock
and
das
imull
mov
out
and
add
mov
add
movsb
insl
inc
fmull
mov
subb
mov
cmp
les
mov
adc
mov
cmpsl
call
sub
cli
xlat
stc
mov
push
add
cmp
clc
adc
stc
xchg
lock
rorb
rorl
cmp
add
adcl
gs
push
pop
cmp
cvtdq2ps
add
mov
and
mov
cld
rolb
daa
push
scas
test
jnp
xchg
lds
inc
ss
out
sbb
jne
mov
outsb
mov
add
je
adc
mov
mov
xchg
sbb
jno
mov
orb
ja
dec
jle
pop
divb
add
sti
mov
iret
mov
cmp
sbb
into
fs
bound
cld
mov
xor
out
cmc
and
or
xchg
push
aas
and
popf
lock
mov
mov
ljmp
push
ljmp
les
inc
sbb
xor
push
xlat
add
lods
orl
sub
stos
cmp
sbb
sbb
pusha
repnz
sti
push
sbb
adc
xlat
imul
xchg
daa
xchg
stos
leave
jmp
inc
hlt
mov
or
enter
jle
or
jg
mov
mov
pop
add
sti
int3
mov
add
cmpsl
lock
fidivrs
call
stos
mov
ret
cmp
mov
jnp
jbe
mov
jge
std
in
push
inc
sub
mov
cmp
xor
data16
std
mov
add
xlat
cmp
nop
rcl
xor
inc
adc
scas
out
cmp
test
jmp
mov
mov
xor
mov
add
cmp
adc
outsb
cmp
mov
mov
lahf
mov
mov
inc
in
adc
xor
lret
imul
xor
cmpsl
xchg
lahf
pop
rcr
js
xor
dec
push
inc
xor
and
sub
into
rcll
hlt
mov
in
or
add
push
dec
and
and
int
stc
or
xchg
push
outsl
and
roll
sbb
fcomps
and
into
sub
and
bound
mov
aad
stc
bound
adc
sbb
enter
ret
cmp
pop
into
imul
nop
sub
xor
inc
add
or
pop
mov
push
xchg
xor
clc
popf
mov
ds
pusha
loop
push
bound
aas
mov
add
in
pushw
imul
punpcklwd
mov
fadd
cli
imul
in
je
cmc
sti
andb
incb
out
cmc
gs
gs
add
pop
push
adc
adc
pop
xchg
les
xor
add
sbb
pop
jmp
jge
imull
rclb
push
sub
push
add
lea
xor
cmp
fwait
adc
add
inc
mov
fmull
pushf
xchg
je
pop
loop
cmc
jl
fidivrs
lea
call
add
lock
ds
xor
insb
sahf
inc
fs
xchg
inc
xchg
aas
ljmp
mov
in
jns
sarl
in
lcall
pop
push
mov
mov
cld
addb
inc
bound
adc
jno
out
mov
das
test
pop
outsl
push
aam
mov
mov
insl
sub
mov
mov
mov
and
fsubrl
pop
imul
pop
xchg
sub
adc
or
add
jecxz
push
or
inc
fucomp
sbb
clc
dec
push
mov
xor
imul
mov
and
cltd
out
out
inc
jle
xchg
das
je
push
loop
fisttpl
mov
shlb
or
movsb
push
mov
decl
dec
mov
pop
test
clc
pop
xchg
scas
sbb
xchg
inc
int
or
jge
add
jp
idiv
mov
shll
mov
in
fstpt
insb
fsts
mov
mov
lds
mov
push
mov
add
mov
jmp
push
jne
loope
mov
xchg
xchg
lods
jp
bound
and
mov
jge
out
cmp
mov
addr16
mov
jp
popa
mov
or
insb
sub
fstpt
inc
aas
jle
pop
inc
in
and
cmp
lods
test
push
pop
xor
inc
sub
adcl
rcll
dec
push
lahf
loopne
stos
mov
jg
fldt
sbb
shll
xor
push
popa
out
adc
cmp
cmp
call
arpl
push
or
cli
xchg
rolb
push
and
add
leave
sbb
pop
xor
ficomps
das
lds
push
mov
adc
pop
or
add
jbe
in
xchg
jge
or
sbb
pop
aaa
outsl
andb
into
dec
jno
cmc
mov
dec
sti
fnstsw
jae
mov
pushf
add
vunpckhps
and
test
push
mov
or
cld
jle
dec
test
mov
daa
popf
dec
jge
jo
mov
sub
aaa
adc
in
test
jnp
repnz
pusha
arpl
and
mov
push
into
clc
add
xor
xor
and
push
nop
pop
std
popf
or
jmp
int
dec
lret
insl
add
faddl
ljmpw
stos
adc
iret
leave
push
sbb
arpl
mov
or
mov
push
inc
int
lret
mov
fs
rcrl
out
jp
enter
jbe
addr16
test
cwtl
mov
mov
iret
stc
sbb
fs
xlat
adc
push
cmp
sbb
lret
idivl
mov
lret
shlb
les
cmp
icebp
dec
or
mov
dec
push
stos
cmc
jecxz
pop
xor
jbe
sbb
test
imul
mov
pcmpgtd
mov
mov
shlb
pushf
sub
xchg
mov
sar
adc
and
mov
pop
cmp
loop
fnstcw
sub
sub
fld
xchg
jnp
das
sbb
lcall
sub
pop
ret
nop
