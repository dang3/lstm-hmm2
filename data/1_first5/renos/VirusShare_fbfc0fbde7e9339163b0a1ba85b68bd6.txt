jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
bound
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
movl
mov
mov
mov
push
mov
push
call
mov
pop
ret
xor
xor
xor
xor
add
add
xor
add
xor
xor
xor
cmp
xor
xor
cmp
xor
xor
add
xor
aaa
xor
xor
aaa
xor
add
push
mov
add
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
movl
mov
push
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
mov
pop
ret
add
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
add
add
push
mov
add
mov
mov
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
mov
cmp
je
jmp
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
xor
divl
test
jne
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
mov
cmp
je
jmp
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
mov
cmp
je
jmp
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
cmp
je
jmp
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
sub
mov
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
push
mov
mov
xor
call
mov
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
mov
mov
mov
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
push
mov
mov
xor
call
mov
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
lea
mov
push
jmp
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
sub
add
add
mov
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
lea
pushl
call
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
mov
movl
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
sbb
mov
cld
out
fstpt
loop
mov
cld
fstpt
mov
fstpt
cld
jae
add
mov
mov
add
mov
cld
jae
add
rcrl
lcall
xlat
pop
mov
add
fstpl
lcall
jecxz
sbbb
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
jge
cld
xchg
in
jne
xor
cmp
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
mov
repz
add
mov
je
clc
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
mov
cld
cld
cld
pop
hlt
mov
repz
out
hlt
mov
clc
mov
or
cld
cld
pop
repz
hlt
mov
mov
int
pop
repz
mov
out
hlt
mov
mov
repz
je
clc
mov
hlt
mov
clc
mov
out
repz
clc
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
movl
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
mov
call
mov
cmpl
je
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
cmp
je
mov
subb
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
xorb
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
incl
mov
cmp
jne
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
mov
call
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
push
mov
push
call
mov
pop
ret
push
mov
add
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
movb
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
mov
mov
pop
ret
lea
push
mov
add
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
call
call
call
test
jne
mov
jmp
movw
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
call
lea
mov
pop
ret
mov
push
mov
add
mov
xchg
lea
lea
mov
mov
lea
lea
mov
xchg
lea
inc
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
push
call
mov
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
pop
ret
jne
dec
add
add
add
add
add
add
add
add
jae
mov
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
call
call
movl
mov
mov
mov
push
mov
push
call
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
movl
mov
push
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
movl
mov
mov
mov
push
mov
push
call
cmp
je
xchg
mov
mov
mov
lea
mov
mov
mov
dec
xchg
xchg
mov
mov
xchg
xchg
inc
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jp
mov
mov
mov
mov
mov
mov
mov
dec
je
xchg
inc
dec
xchg
mov
mov
mov
lea
inc
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
call
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jno
mov
lea
mov
lea
mov
mov
mov
xchg
mov
xchg
lea
xchg
mov
mov
xchg
dec
dec
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
cmp
ja
mov
mov
mov
mov
inc
dec
dec
jne
mov
mov
mov
mov
mov
mov
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jl
xchg
lea
mov
lea
lea
mov
lea
mov
xchg
lea
mov
lea
dec
inc
movl
mov
push
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jno
mov
lea
lea
dec
inc
xchg
mov
mov
mov
mov
xchg
xchg
xchg
mov
mov
xchg
dec
inc
call
call
movl
mov
push
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
mov
mov
mov
mov
mov
push
mov
push
call
cmp
jl
mov
mov
mov
dec
dec
inc
dec
jne
lea
dec
lea
mov
mov
xchg
mov
mov
lea
mov
xchg
dec
call
mov
mov
mov
lea
call
cmp
jno
lea
mov
lea
mov
xchg
inc
dec
lea
dec
inc
mov
mov
xchg
xchg
mov
mov
dec
dec
je
xchg
ret
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
cmp
aaa
ss
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
xor
xor
xor
aaa
add
add
xor
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
add
add
add
add
xor
xor
add
cmp
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lea
add
mov
dec
ret
xchg
ds
imul
add
add
add
add
inc
pop
nop
dec
imul
jno
adc
mov
mov
fnstsw
add
mov
add
fstp
jle
push
pop
jae
jo
testb
xor
add
add
aad
cmp
and
or
add
sahf
push
jbe
rclb
movsl
add
lock
jne
adc
loop
rcll
mov
jnp
sbb
adc
test
adc
add
add
pop
xor
add
add
scas
add
mov
sbbb
pop
ds
adc
mov
loop
pop
xchg
mov
bound
es
dec
fldt
in
add
addb
add
popa
add
pushw
add
shlb
jnp
push
ret
mov
xor
loopne
sub
mov
and
movsl
add
ds
test
cwtl
add
cwtl
add
xchg
mov
add
add
jg
out
or
dec
add
add
jbe
push
xchg
add
dec
lret
mov
cmp
fdivrl
dec
xchg
cmc
mov
jg
ret
lds
add
xor
cwtl
fidivs
push
add
add
add
add
mov
xor
add
add
pop
fbld
shlb
xchg
fmull
loope
sub
stos
stos
push
add
cmp
push
push
lds
add
push
lea
scas
incb
xchg
push
ret
and
dec
cmpsl
add
enter
ja
pushf
add
mov
pop
pop
mov
dec
gs
icebp
jns
leave
push
xchg
fmull
jne
add
out
sub
pop
dec
gs
add
mov
sbb
push
xor
jne
mov
xchg
jge
add
dec
mov
add
cmp
add
add
inc
in
adc
ljmp
add
add
pop
add
arpl
pusha
lret
notb
int
xchg
dec
jg
add
add
lea
sub
in
lret
ds
add
inc
repnz
in
std
mov
push
add
sldt
icebp
in
jb
xor
mov
push
jl
xlat
sbb
dec
add
lret
add
add
push
sub
and
subl
mov
dec
filds
je
jl
add
and
add
add
lods
fstpl
outsb
je
popa
add
xor
fadds
add
add
push
ret
arpl
outsb
add
lret
add
sahf
imul
add
inc
jge
lods
dec
add
add
add
mov
add
int3
or
add
or
arpl
stos
add
mov
dec
dec
inc
mov
mov
and
mulb
add
in
add
out
add
adc
xchg
lock
inc
pop
mov
push
daa
add
add
daa
inc
add
cmpsb
aas
scas
jl
xor
push
in
das
mov
sub
out
mov
jo
add
jno
add
jbe
add
sub
mov
mov
pop
nop
add
mov
stos
add
mov
push
add
add
or
mov
add
imull
js
dec
add
cmp
stos
dec
stc
js
add
add
addr16
mov
add
mov
sbb
pop
mov
adc
add
jno
pop
pop
add
xchg
add
add
adc
and
or
sbb
out
adc
cmpsl
test
xor
inc
xchg
or
cmp
sahf
dec
std
add
mov
adc
dec
int3
imul
aaa
cwtl
add
sub
xchg
xchg
xor
sbb
in
sti
adc
mov
cltd
sub
ss
in
loop
hlt
sti
xchg
jl
cs
dec
xchg
sbb
int3
inc
scas
insl
and
cmpsl
ss
shl
dec
repz
push
mov
lea
inc
fcmovb
cmp
or
adc
or
pushf
xchg
add
pop
stos
sbb
inc
ljmp
aas
pusha
mov
cmp
or
jnp
jecxz
ds
notb
stos
std
adc
cwtl
cmp
sub
mov
jbe
subl
in
mov
add
mov
mov
push
push
repnz
out
adc
es
aaa
insl
outsl
lahf
aaa
dec
ret
cmpsl
shrl
mov
test
mov
lret
fldenv
dec
and
lods
outsl
out
pop
cmp
jmp
jl
lods
sub
adc
ret
xchg
imul
scas
stos
int
fisttpl
xchg
in
mov
popa
dec
lods
scas
lods
popf
fs
and
mov
arpl
push
xchg
xor
and
std
add
mov
dec
test
les
xchg
dec
aam
mov
xchg
adc
rorl
int
pop
sahf
jb
stos
das
sbb
xor
or
insb
dec
jmp
enter
daa
xlat
test
pop
cmp
or
jb
xor
push
mov
outsl
and
mov
lret
aad
ja
int
dec
enter
repz
or
imul
dec
clc
sbb
jne
cmp
out
mov
xchg
test
movsb
std
sti
in
arpl
out
cmp
sub
mov
fdiv
jp
movsl
ljmp
aam
mov
std
icebp
in
fisttpl
fbld
hlt
cld
xchg
adc
fucomip
loope
fcoml
fisubs
js
mov
or
lahf
push
push
add
and
je
insb
cwtl
jge
jnp
in
add
pop
rcll
pop
test
xchg
ret
pop
ret
incb
les
pop
fs
mov
shlb
push
sti
movsb
and
iret
in
push
xchg
orl
imul
mov
lds
cwtl
pushf
mov
xchg
dec
lret
leave
dec
in
hlt
xor
ret
loop
jge
roll
lcall
or
arpl
add
bound
pop
in
jno
push
xchg
cmp
jo
adc
scas
mov
sbb
cmp
mull
inc
in
cmpsb
cmpsb
push
lcall
mov
sub
jno
gs
dec
xchg
ja
sbb
and
test
nop
push
out
or
loop
sub
inc
fst
dec
push
mov
js
and
pop
add
fsubs
loope
dec
imul
test
outsb
xchg
test
and
popf
xchg
add
fucom
rcrl
mov
sub
adc
xor
std
push
pop
and
pop
mov
stos
pop
mov
mov
xchg
jae
nop
sub
aad
sahf
add
stos
pusha
adcb
jg
and
or
xor
jecxz
mov
ss
inc
out
test
adc
hlt
movsb
push
lret
sarw
out
call
or
into
imul
push
loop
js
stc
jg
andl
fs
mov
mov
jle
out
aas
cli
fidivl
xor
aad
xor
inc
or
cltd
or
shrl
or
loopne
popa
add
adc
jbe
imul
sbb
aaa
xchg
pop
imul
cmp
das
mov
hlt
outsl
subl
lods
xchg
dec
inc
stc
sti
inc
adc
aad
dec
and
hlt
in
or
inc
ret
icebp
mov
fnsetpm(287
mov
fwait
clc
xor
aas
cmp
call
mov
aad
adc
adc
out
dec
mul
inc
jno
cmpsb
inc
cld
mov
aas
call
divb
sbb
je
dec
clc
jecxz
inc
sbb
cltd
inc
xchg
std
mov
scas
das
mov
dec
ljmp
sub
fildl
jl
mov
xor
lock
ja
das
stos
and
mov
int
js
and
jb
es
scas
mov
mov
aaa
pop
mov
jg
sar
add
lret
dec
cmp
stos
pusha
and
inc
sub
pop
pop
outsl
pop
rorb
pop
sub
jecxz
ret
and
add
leave
and
iret
psubb
mov
xchg
ljmp
fildll
jecxz
out
xchg
mov
push
mov
pmuludq
add
repnz
dec
mov
mov
jge
xchg
test
test
xchg
push
xchg
mov
fcmovnbe
in
pop
dec
cmp
stos
push
add
add
jecxz
cwtl
inc
xor
or
cmp
push
mov
jno
xorl
xchg
icebp
ja
sbb
in
mov
pop
xchg
mov
fistpl
loop
int
jp
dec
jp
out
and
bound
push
cli
in
test
xchg
adc
jmp
or
call
mov
aad
mov
add
xchg
jle
xchg
pop
in
inc
dec
pusha
into
ret
inc
push
aas
xchg
in
test
fmul
pop
xchg
lcall
push
cmp
fstpl
inc
inc
ds
xchg
add
and
push
insb
add
mov
push
scas
dec
repz
push
iret
push
in
adc
dec
daa
adc
or
inc
loope
scas
jae
es
inc
rcll
push
jp
mov
xchg
fsubr
ficomps
out
test
ficomps
adc
mov
out
jecxz
mov
xchg
data16
add
inc
xor
lods
pop
sbb
js
in
jne
fadds
add
fistpl
and
push
je
xchg
xor
lds
scas
lcall
cmp
xchg
movsb
push
and
mov
cmpsb
sub
mov
dec
jmp
enter
daa
shlb
cmp
ljmp
add
push
ds
shlb
in
sbb
mov
dec
cmp
lods
inc
ret
inc
in
jne
or
pop
ljmp
pop
inc
xchg
or
sahf
dec
mov
push
mov
cmp
add
and
sarb
pop
ds
call
push
js
pop
mov
push
bound
int
pop
lret
xchg
mov
cmp
lcall
out
fcompl
out
repz
mov
mov
xorb
jg
decl
mov
cmp
mov
maxps
xchg
ss
sbb
arpl
jmp
rcl
in
mov
popf
mov
inc
push
into
dec
adc
mov
jl
pop
outsl
repnz
push
loop
sub
add
insl
push
cmp
pushw
mov
sbb
out
jno
cli
or
popa
movsb
cmp
enter
jge
in
aam
vmread
fwait
imul
imul
push
sub
xor
xchg
xchg
sbb
mov
arpl
cmp
xor
cld
mov
mov
addr16
jno,pn
nop
aad
insl
and
mov
jo
aad
add
out
dec
repz
mov
inc
lea
dec
call
cmp
pop
fsubrl
adc
aad
jno
cmpsl
pop
icebp
ret
mov
clc
dec
call
aas
sahf
out
mov
dec
sti
sbb
jmp
fbld
mov
mov
sarl
cmp
icebp
sti
mov
vlddqu
xchg
das
mov
mov
test
mov
aad
lods
push
inc
es
sub
mov
mov
mov
push
cli
dec
cld
in
lret
mov
or
jno
lea
jp
push
shlb
jae
sub
mov
ret
mov
ljmp
fdivrs
xchg
arpl
xor
xlat
scas
xor
ljmp
subb
jmp
xchg
ret
inc
dec
push
ljmpw
outsb
pop
push
add
ja
cltd
add
test
push
pop
mov
jns
xchg
fisttps
sbb
inc
xchg
sti
sbb
loope
mov
xlat
stos
stos
or
jge
add
pop
cmpsl
jmp
push
or
out
xor
jbe
mov
int
xchg
mov
inc
jg
ja
icebp
leave
dec
scas
mov
inc
and
sub
dec
cltd
jecxz
pop
arpl
jne
sub
mov
sarl
out
popa
sub
bound
jns
push
jg
xor
mov
out
xor
or
mov
jge
lods
jne
mov
jae
sarb
sbb
adc
das
pusha
imul
xchg
mov
int3
jmp
adc
push
pop
in
popf
out
fdivrl
roll
and
insb
outsb
bound
scas
and
push
cmc
movsl
ret
and
ret
mov
xor
and
xor
sbb
pop
push
stc
test
inc
xchg
das
mov
sbb
inc
or
fiadds
outsb
lds
addr16
shlb
mov
cmp
inc
leave
cmpsl
xor
loope
arpl
out
jbe
sbb
jge
imul
adc
addr16
mov
pop
fadds
daa
cmp
int3
jecxz
iret
pop
dec
xchg
outsl
push
push
daa
gs
and
or
dec
sbb
movsb
cmc
or
push
cmpsb
lods
mov
mov
mov
iret
daa
rol
cmp
mov
jno
xchg
xor
rorl
and
pop
push
or
xor
lahf
mov
cli
push
mov
fldt
js
inc
jnp
call
pop
adc
and
cld
push
pop
cmpl
loope
mov
sub
add
cmp
mov
adc
push
cmpb
lea
addb
sbb
add
add
insb
inc
xor
rorl
push
gs
call
sub
pop
dec
lcall
sub
leave
cmc
xlat
sub
push
fwait
test
out
mov
mov
outsl
mov
mov
cltd
mov
jb
and
nop
jmp
jle
sbb
xchg
jb
mov
daa
jecxz
shrl
mov
sti
into
das
add
xor
inc
lea
mov
lea
idiv
in
dec
addr16
ss
adc
lcall
adc
mov
cli
inc
imul
cmp
dec
enter
cmp
pop
jl
gs
repz
pop
icebp
pushf
adc
sbb
in
add
or
sahf
push
pop
xlat
jb
xchg
sub
sub
in
and
dec
sti
mov
push
cmp
sbb
ficoms
adc
adc
sahf
icebp
out
repz
movb
iret
jbe
call
mov
cmp
jbe
xchg
mov
outsb
pop
xchg
test
inc
jg
lea
loope
aas
cmp
mov
jb
insb
je
call
xor
pop
out
adc
pop
pusha
lods
cwtl
insl
aaa
cli
mov
ss
xor
mov
mov
dec
pop
adc
lock
jl
imul
hlt
and
aam
sar
ficomps
outsb
xchg
dec
insl
and
lea
mov
jmp
icebp
sub
lcall
lock
jle
js
out
mov
cltd
sub
and
aam
aad
ret
inc
fistl
frstor
dec
clc
mov
sahf
xchg
mov
mov
popa
lea
jnp
das
mov
cwtl
xchg
or
push
inc
or
ret
or
outsb
addb
scas
xchg
cltd
dec
or
roll
pushf
mov
rcll
jg
pop
lahf
dec
push
stos
cld
pop
jmp
add
sbb
add
loop
pop
sub
or
cmp
add
mov
adc
and
cld
mov
ja
dec
lods
dec
mov
push
or
outsl
mov
dec
mov
cmp
add
cmp
inc
je
xlat
jne
jns
repz
in
scas
xchg
scas
pop
aas
out
pop
stos
sub
xchg
jp
xor
jp
xchg
cmp
pushf
sbb
loop
stos
jle
cltd
sti
in
ss
pusha
add
dec
filds
inc
jmp
xchg
xor
push
addl
pop
push
shll
push
gs
mov
lea
fchs
and
mov
fsts
sarl
lahf
scas
test
xchg
sbb
mov
jno
ficomps
adc
inc
idivl
jae
test
xchg
adc
jns
adc
js
add
xchg
imul
pop
fsubp
inc
push
or
aas
fcomps
mov
mov
leave
lods
jle
hlt
adc
jbe
bound
jge
or
cmp
bound
or
ficomps
into
pop
rcrb
enter
mov
lods
sbb
scas
pop
xchg
movsl
and
mov
movsb
or
push
mov
in
pop
cltd
and
mov
or
cmp
dec
jno
pusha
adc
xchg
sub
orb
movsl
sti
cmp
lahf
test
popa
push
pop
xor
test
inc
xchg
inc
or
cmp
xchg
push
js
jno
ret
push
pop
mov
cwtl
pop
lock
test
cmp
imul
scas
lahf
lcall
clc
fiadds
push
add
add
push
jp
mov
lcall
inc
xor
cmp
ficomps
cmp
stos
fdivl
sub
cmp
test
mov
andb
jg
add
mov
out
mov
sub
and
cmp
flds
push
divl
out
lret
call
mov
je
into
adc
adc
ds
js
mov
push
loop
sub
subl
data16
fildll
subps
scas
loope
cli
jae
cmp
out
call
sti
or
nop
jg
sub
gs
mov
pop
adc
adc
imul
xchg
add
push
xchg
mov
or
mov
sub
push
push
in
mov
cmpsl
cs
nop
push
aad
in
nop
test
dec
je
add
sti
mov
flds
in
repz
ja
ss
lods
call
aaa
call
ja
xor
rcrl
sub
cmp
inc
push
ret
add
aas
fdivl
loope
mov
mov
je
mov
jecxz
out
mulb
or
scas
je
cwtl
sub
mov
icebp
bound
mov
dec
repnz
adc
bound
sub
loope
movsl
jg
mov
sbb
stc
es
push
adc
dec
scas
add
cmpsl
iret
mov
inc
icebp
add
jno
sbb
out
xchg
xorl
jg
xor
mov
loop
sub
dec
stos
ret
shll
je
repz
and
ljmp
shrd
mov
out
insl
arpl
sbb
arpl
sub
out
add
push
jbe
icebp
mov
out
mov
aas
in
xchg
add
test
xchg
lods
xchg
push
sbb
add
add
lea
push
shrb
mov
pop
jmp
in
or
jecxz
xor
in
mov
push
xchg
inc
mov
mov
mov
and
dec
xchg
ja
inc
dec
call
jne
mov
int3
addr16
stos
inc
mov
ret
pop
ret
push
dec
jns
cmp
in
in
xchg
dec
mov
sub
lea
push
addr16
mov
jp
cli
fdivrs
jle
or
in
or
mov
fistps
pop
or
mov
xor
test
popf
xor
das
push
push
push
sbb
and
xchg
ss
pop
movsl
scas
call
subb
and
pop
lahf
or
inc
add
popf
inc
lret
or
hlt
jnp
inc
idivl
fwait
xchg
adc
or
fimuls
ds
pop
adc
add
fildll
test
hlt
pop
jp
arpl
pop
call
sbb
inc
sub
mov
xor
push
movsl
jno
mov
ret
sbb
cmpsl
xchg
jo
mov
scas
aaa
out
and
cmp
mov
push
repnz
mov
incb
enter
daa
iret
jnp
cmp
jno
push
jl
jns
dec
dec
fldcw
movsl
mov
push
data16
cmpsb
sub
lahf
cs
push
daa
test
cltd
loope
push
inc
pop
pop
pop
aad
js
and
fldt
in
shl
scas
mov
add
mov
insl
outsb
and
xchg
adc
or
jbe
pop
push
clc
sbb
adc
xor
into
int
mov
mov
pop
pop
mov
test
push
xchg
rcr
fcompl
jg
sub
cwtl
sbb
test
ss
es
test
mov
mov
xor
sub
cmc
sarb
cmp
xchg
adc
div
add
lcall
sbb
pop
sub
cmc
mov
cmc
add
dec
mov
sub
loop
jbe
stc
pop
fadds
fs
je
adc
cmp
lods
lods
fdivrs
out
fbld
xor
loop
cmp
or
pop
dec
gs
add
insb
sti
das
pop
das
jmp
jnp
mov
cld
dec
add
cli
xchg
xchg
gs
sbb
adc
sbb
lock
aaa
sub
jbe
mov
stc
or
sti
add
ja
lcall
nop
pusha
sub
loopne
push
mov
fnstcw
cmp
repz
aas
rol
and
lea
rclb
mov
cmp
imul
stos
or
ds
in
inc
lea
inc
aas
jnp
and
dec
pusha
adc
pop
jecxz
sti
fwait
mulb
insl
and
mov
xor
stos
popa
scas
andl
sti
push
fstpt
or
mov
shrb
lock
daa
dec
insb
mov
test
mov
or
je
mov
dec
test
fwait
jg
adc
ret
icebp
fistl
imul
ss
ja
xchg
lds
xlat
sti
int3
rcrb
aam
aam
push
gs
pusha
shl
push
mov
nop
fnsave
mov
xchg
and
jmp
xor
addr16
mov
or
pop
out
push
popf
pop
xchg
cwtl
jnp
aas
dec
cltd
sub
xorl
xlat
and
test
rolb
add
sarl
movsl
call
push
arpl
push
add
dec
dec
incw
mov
or
in
xor
sbb
mov
xchg
test
cmp
jb
sub
test
out
rorl
xchg
or
addr16
mov
adc
std
adc
in
push
mov
dec
mov
push
sub
mov
addr16
jp
adc
mov
rol
jle
outsl
jmp
daa
mov
adc
mov
xor
mov
ljmp
fcmovbe
push
inc
test
pop
pop
adc
push
nop
sub
lods
fcmove
and
out
inc
jnp
cli
scas
dec
pop
dec
push
lret
adc
or
iret
sbbb
pop
test
xorl
push
inc
int
orl
mov
dec
jmp
mov
imul
test
sarb
add
xor
leave
fwait
sbb
arpl
push
mov
decl
aaa
loopne
cmp
movsb
nop
aad
in
outsl
enter
mov
add
xor
xor
scas
push
cmp
and
fwait
cmp
add
or
inc
and
xor
enter
daa
into
sbb
cmp
gs
jl
inc
mov
mov
pop
frstor
add
mov
push
add
inc
mov
fstps
popa
inc
sub
dec
pop
daa
pop
pop
xchg
int
mov
inc
pushf
push
xor
push
sub
outsb
mov
outsb
test
icebp
adc
in
jmp
mov
orl
ljmp
push
jne
outsb
xchg
and
or
pop
pop
ss
pushf
lcall
cmp
lret
sub
jae
sahf
xor
rolb
fdivl
jg
xchg
insb
mov
sbb
mov
push
int
pop
xchg
mulb
ret
cmp
sbb
dec
mov
lret
loopne
xor
mov
add
jecxz
int3
rcrb
outsl
outsb
jle
loop
clc
mov
adc
jbe
cltd
nop
std
adc
or
cmpsl
jnp
mov
aam
out
popa
sar
mov
push
cmp
lds
jo
sub
pop
dec
xchg
jg
sbb
imul
mov
sbb
dec
fistpl
xlat
das
jecxz
sub
jp
sub
es
fs
mov
cs
call
fistl
xor
or
xchg
sbb
xor
inc
repz
cmp
add
stos
call
xor
xchg
rcll
loopne
negl
xchg
inc
pop
jge
call
inc
xorl
aas
sbb
lret
dec
xlat
push
jb
dec
dec
sbb
imul
aam
std
cld
dec
js
sahf
pop
push
mov
xor
dec
lcall
mov
dec
pop
mov
hlt
jmp
das
push
movsb
add
pusha
or
and
lods
push
shr
jle
divl
dec
movsb
inc
test
int
test
mov
cld
jb
jg
jae
outsl
mov
lea
mov
imulb
shrb
sbb
mov
and
mov
mov
push
jns
fstpl
or
mov
push
aas
lods
pop
inc
movsb
mov
mov
cmpsl
xchg
fbld
scas
push
shlb
cmp
inc
xchg
in
pop
dec
jb
cmc
dec
cs
adc
mov
test
jle
xchg
lcall
mov
adc
xchg
cmp
push
xor
xchg
mov
and
loope
cld
xor
dec
or
hlt
ss
mov
movzbl
xor
mov
sub
push
add
jge
pushf
or
call
aaa
dec
dec
pop
lret
jne
mov
mov
bound
lods
xchg
in
push
sub
mov
mov
xor
fwait
or
mov
jp
faddl
sbb
xchg
pop
jle
enter
adc
jns
xchg
xchg
add
jmp
xchg
ljmp
or
inc
popf
subl
push
iret
mov
cmpsb
and
sbb
jnp
sub
scas
scas
aaa
or
jmp
adc
xchg
jae
stos
dec
push
inc
sbb
jae
adc
inc
sarb
or
ljmp
fiaddl
imul
mov
stos
imul
js
push
movsl
push
rclb
sbb
test
leave
adc
jmp
arpl
imulb
cld
mov
aaa
lahf
lds
xchg
mov
add
sbb
add
push
jecxz
mov
jo
xchg
scas
cmc
vpshlw
shld
mov
jmp
cmpsb
mov
dec
sahf
enter
daa
int
iret
cmp
pop
test
sahf
movsb
jl
ficomps
ds
shll
imul
add
adc
push
movsb
fs
fidivrl
pop
lods
pop
xchg
js
popf
adcl
fnsave
adc
frstor
cmp
rclb
dec
xor
dec
jb
sbb
aam
add
or
xor
cmc
mov
int
enter
je
pop
mov
cmpsb
lcall
and
sub
adc
test
insl
xor
or
test
mov
push
xchg
mov
inc
nop
and
test
add
or
pop
imull
lret
lret
dec
ror
ljmp
ret
mov
aas
push
xor
fildll
mov
fldcw
loop
and
int
les
jnp
cmpsb
mov
mov
outsb
out
lods
addr16
cli
or
mov
je
or
or
cmp
xchg
adc
gs
loopne
shrb
inc
xlat
adc
scas
cmp
add
adc
arpl
add
pop
xchg
jmp
adc
mov
in
sub
xchg
mov
inc
xchg
sti
pop
lcall
xor
jmp
dec
xchg
adc
into
sub
pushf
les
jnp
push
dec
lea
mov
mov
sbbl
inc
adc
in
pushf
inc
out
in
sbb
sbbb
pop
inc
fwait
pop
ret
inc
sahf
and
mov
dec
dec
pushf
nop
je
adc
xor
fcomi
sub
cwtl
pop
ss
jle
orb
rol
dec
test
testl
cmp
mov
pop
adc
and
repnz
call
imul
inc
cmpsl
int3
in
mov
mov
sar
popf
mov
or
xchg
inc
mov
pop
adc
adc
add
aam
test
ret
jle
and
push
sub
shlb
js
push
xchg
sahf
inc
pop
ljmp
fisubrs
xchg
or
sbb
adcb
std
mov
dec
nop
js
pop
sbb
imul
or
js
out
hlt
xchg
mov
sbb
shrl
pop
dec
push
and
test
stos
and
test
xor
pop
xor
adcb
sbb
push
mov
call
iret
dec
insl
lahf
sub
cmp
loopne
inc
fwait
dec
movsl
xchg
dec
sub
pop
mov
mov
jl
jns
fimuls
jmp
insb
stos
out
xchg
pop
sub
jle
cmpsb
addr16
xor
pop
in
mov
mov
mov
sahf
das
adc
adc
mov
incb
repz
pop
repnz
push
int
rcrl
cmpsl
push
cmpsl
push
push
popf
stos
xchg
stos
or
iret
ret
test
jnp
mov
ficoms
ss
test
das
ret
pop
inc
shlb
and
pop
jae
je
inc
roll
jae
pop
cmpl
pop
inc
je
mov
sbb
xchg
inc
xchg
adc
fadd
stos
inc
imul
mov
cmp
xchg
lsl
subb
fdivrl
aaa
pop
dec
cmp
mov
jbe
jp
cmp
push
popf
fbstp
out
inc
scas
aam
into
and
mov
pop
movsb
lods
xchg
aam
fcomip
push
cmpsb
cmp
in
mov
mov
daa
int3
ljmp
jne
inc
jl
dec
adc
ds
jg
movsl
pop
cmp
and
daa
int
and
daa
push
stos
sbb
test
outsl
add
inc
inc
and
pop
aam
sub
mov
ja
push
loopne
loope
sbb
cmp
lret
dec
outsb
dec
pop
xor
lcall
andb
sbb
arpl
add
push
out
icebp
cmp
jl
fdivrs
adc
xor
mov
push
cwtl
imul
sub
sbb
adcb
jp
sarb
mov
ret
mov
mov
dec
cmp
loopne
shlb
pop
cs
lds
mov
rcrl
mov
mov
into
sahf
call
in
xor
xor
loop
xchg
mov
fs
adc
data16
sti
fwait
es
icebp
cs
aas
lahf
or
dec
test
cmp
cmp
or
in
mov
loopne
cmp
arpl
cmp
stc
fistl
rolb
cmpsl
add
xchg
rolb
mov
xchg
scas
cmpsb
xchg
vpsrld
lods
adc
sub
or
pop
inc
fucomip
cmp
push
mov
ret
adc
nop
icebp
scas
push
dec
lock
sbb
pop
add
sub
inc
inc
push
xchg
das
shlb
data16
xor
mov
push
ljmp
pushf
jmp
fs
jne
pop
ret
cltd
movb
jmp
aas
pop
out
repz
aaa
bound
aad
je
sub
ret
imulb
adc
dec
scas
jp
adc
loopne
cmp
pop
jno
in
pusha
dec
jo
xor
int3
mov
mov
fs
lock
imul
mov
into
mov
adc
es
in
insl
cmpsl
push
mov
cmpsl
lret
push
mov
lods
loope
icebp
pusha
ja
cld
enter
push
fwait
cmp
fwait
mov
mov
xor
fcmovbe
adc
sub
jl
jl
push
outsl
hlt
ret
or
push
cltd
fucom
ret
inc
clc
mov
ljmp
pop
jbe
add
lret
mov
out
jnp
adc
mov
test
popa
add
cltd
int
sbb
cli
clc
xchg
jnp
or
bound
jae
pop
sbb
fnstsw
rol
ja
pop
mul
push
stos
cmpsl
rolb
push
dec
sarl
mov
adc
xor
int
or
xchg
fdivs
mov
mov
pop
sahf
imul
lea
push
inc
stos
inc
cmpsl
or
or
js
scas
dec
adc
mov
jo
fwait
and
pop
mov
in
cmpsl
xchg
cmp
outsl
out
add
sub
jns
frstor
enter
clc
mov
sub
jae
push
mov
push
jno
cmp
bound
imul
xchg
test
xchg
mov
adc
and
nop
add
popf
sar
pop
mov
dec
jb
stos
push
and
and
adc
insb
lock
jnp
or
scas
je
notl
in
adc
ror
lahf
lea
ret
sub
inc
adc
lods
sbb
or
loopne
gs
repz
xchg
cmp
sbb
mov
orl
adc
push
lds
jbe
roll
mov
sub
leave
add
hlt
mov
xor
pushf
cmp
xchg
adc
aaa
sbb
sbb
add
inc
loopne
fs
sub
test
mov
insl
scas
mov
jbe
mov
adc
push
cs
and
lcall
daa
lret
pop
cld
cmp
cmp
dec
jl
jl
xchg
fmull
jnp
ds
xchg
movsl
push
xor
lahf
inc
imul
jle
push
test
cmp
inc
aad
lcall
leave
add
pop
std
insl
jno
ret
inc
pushf
loope
aaa
ret
dec
or
jb
pop
outsb
lods
and
adc
jne
in
xlat
dec
dec
xorb
sbb
or
push
pop
xor
push
sub
ja
jecxz
aas
xchg
mov
lahf
aas
in
pop
mov
rcrl
mov
lret
addl
sbb
out
addl
mov
les
cmp
ss
cmp
sbbb
imul
mov
push
shl
les
je
into
orl
outsl
or
repz
aaa
fwait
js
cmp
adc
lods
inc
shrb
negb
out
lcall
jb
lcall
mov
or
or
fsts
loopne,pn
aad
pop
stos
mov
adc
lock
adc
sbb
xchg
jno
icebp
sbb
add
xor
rolb
in
movsl
or
sti
mov
adc
aad
bound
nop
int3
lods
mov
inc
pop
loop
fsts
int
repz
mov
push
dec
and
popf
stos
into
mov
fcomps
inc
mov
in
ljmp
mov
pop
adc
inc
test
aas
out
mull
add
push
out
dec
cmp
cwtl
je
sahf
push
repz
mov
mov
icebp
aaa
or
cld
push
push
mov
flds
pop
addr16
and
lcall
lock
dec
xchg
das
mov
or
mov
jge
mov
es
insl
mov
xor
fistps
repnz
repz
adc
rorb
ret
and
pop
negl
push
enter
xchg
pop
mov
push
ret
fisttpll
or
clc
out
xor
xchg
sbb
dec
ljmp
pop
lods
pusha
jecxz
mov
fsubp
nop
xchg
mov
jno
arpl
fisttps
pop
loope
jg
pusha
cltd
add
icebp
test
cmp
xchg
cmp
stc
dec
test
cs
xchg
sub
sbb
iret
out
rcrl
scas
or
mov
fnstcw
push
out
mull
add
lea
mov
or
fcoml
xor
aaa
nop
mov
mov
lea
ja
sub
push
xchg
adc
js
or
lret
fwait
cmpsl
sbb
pop
xor
es
out
jp
loop
dec
mov
jns
sub
in
imul
sub
je
enter
mov
jbe
mov
les
add
mov
jle
mov
in
js
pusha
cmpsb
xchg
fistpll
outsl
les
nop
mov
xchg
repnz
push
andl
push
push
pop
mov
clc
std
addr16
mov
and
std
mov
jnp
and
scas
xlat
push
xchg
clc
test
cmp
add
jecxz
jb
mov
test
int3
jae
add
inc
fnstenv
or
pop
mov
inc
jb
and
sbb
hlt
xchg
nop
add
sbb
stos
lret
imul
fidivs
lods
dec
shl
lret
mov
jle
aam
ja
fwait
hlt
shll
sbb
rcrl
sbb
jmp
or
mov
int3
push
xorl
mov
lods
xor
popf
cmpl
cmp
mov
movsb
ret
push
jge
aad
inc
jnp
in
addl
jne
lret
cmp
out
jno
and
mov
cmpb
outsl
jmp
and
mov
bound
push
push
or
add
jp
and
mov
adcl
push
pop
push
loope
jbe
sub
in
mov
outsb
adc
mov
pop
int
rclb
rorl
ja
sbb
testb
sbb
jp
add
sub
sbbl
jle
lcall
fdivl
jmp
mov
aaa
test
pop
xlat
orb
jg
insb
mov
mov
faddl
xchg
and
mov
std
cmp
cmp
repnz
loopne
rorl
ja
mov
and
cmc
call
das
sub
loop
push
pop
stc
out
andl
jb
andb
pop
push
and
test
insl
xchg
xor
fbld
or
addr16
inc
pop
loopne
jle
pop
lret
adc
sbb
fnstsw
adc
cmc
test
xchg
xor
jg
mov
cmp
add
sub
xor
cld
in
adc
ljmp
test
nop
cmpsl
mov
pusha
inc
insl
mov
pusha
les
les
repz
es
pop
ja
lea
sarl
pop
je
or
pushf
inc
or
jmp
push
sub
jl
inc
out
push
aas
xchg
arpl
jb
leave
add
xor
je
bound
popa
pop
shl
hlt
or
cwtl
mov
mov
and
movsl
adcl
xchg
test
sub
mov
cmc
mov
arpl
das
sbbb
mov
cmp
scas
and
mov
cld
add
insl
jne
cmp
mov
test
icebp
push
shrl
das
rclb
in
and
mov
inc
rcl
mov
lcall
sub
pop
push
test
pop
clc
sub
stos
xchg
pop
shrl
sbbl
lret
push
mov
inc
daa
xchg
sti
dec
cwtl
push
ds
pcmpgtd
add
adc
test
xchg
xchg
lret
dec
fisubrl
mov
jno
cld
sbb
or
pop
dec
lea
test
jmp
add
mov
lcall
add
popf
jp
or
adc
add
mov
sbb
ja
pop
mov
inc
sbb
inc
fxch
ds
js
fwait
cld
jmp
jne
push
mov
outsb
sbb
pop
jmp
sbb
dec
push
in
subb
ret
aas
imull
outsl
ss
addr16
lea
adc
mov
jmp
fidivrs
mov
in
popa
fbld
mov
repz
dec
pushf
cmpsl
jmp
mov
jns
push
push
sahf
arpl
pop
stos
rclb
ss
in
sub
adc
adc
adc
adc
sub
iret
loopne
pop
xchg
sti
ret
mov
push
push
inc
inc
cmp
xor
inc
fcompl
or
jle
inc
icebp
pop
xchg
fcmove
jns
xchg
out
into
sbb
popf
xchg
imul
ficomps
adc
jae
int3
sar
jae
and
rorl
dec
leave
out
push
pop
hlt
push
and
arpl
mov
jbe
adc
call
add
or
push
add
inc
int3
cmp
es
outsl
out
sahf
xor
clc
jg
scas
jno
sub
loope
lods
cmp
pop
loop
int3
lods
daa
cmpsb
les
arpl
in
outsl
daa
leave
std
into
cmp
jp
mov
or
arpl
ja,pt
imul
andl
test
ror
sub
or
out
push
pop
dec
sbb
js
jle
pop
jnp
das
push
es
loope
fstps
cmp
lahf
aam
jae
sub
lahf
frstor
xchg
pop
faddl
xlat
in
add
in
jns
pop
pop
fiadds
jge
adc
or
pop
adc
lcall
fsubl
sti
xchg
sub
xlat
sahf
arpl
hlt
andb
jg
imul
inc
inc
sub
rcrl
or
jb
cmp
negb
dec
lret
sbb
and
or
ss
inc
mov
cmc
scas
fiaddl
xor
pop
loop
and
aam
fs
or
adc
lods
adc
ja
lods
inc
push
or
test
pop
cli
fsubs
xor
mov
cmp
and
or
lock
pop
in
gs
push
cmp
adc
cmp
subl
and
dec
add
push
fwait
xchg
testl
xlat
push
lea
cmpsb
cmp
test
jnp
push
sti
sbb
jb
in
hlt
ret
push
mov
dec
or
in
flds
les
imul
pop
pop
mov
xchg
aam
mov
mov
adc
gs
fmuls
repnz
lods
loop
inc
mov
das
inc
or
jne
sti
loopne
dec
sub
je
jp
jecxz
pop
fcomi
aaa
mov
jne
inc
jne
mov
jl
mov
subl
inc
mov
cmpl
das
popa
mov
jge
mov
xchg
push
or
xchg
insl
pop
aas
loopne
mov
adc
inc
sub
icebp
in
lret
cld
dec
sbb
lret
sahf
clc
pushf
mov
mov
imul
enter
and
aam
mov
fs
dec
fstpl
clc
fs
xchg
lcall
popa
inc
js
lods
ss
sarb
movsb
mov
pop
push
sbb
pop
pextrw
popf
push
movsl
dec
jo
jb
faddl
push
sbb
inc
cmp
test
xchg
mov
sbb
mov
stos
je
xchg
push
xor
push
nop
add
xor
cld
mov
xor
sahf
cli
or
push
xorb
mov
mov
cmpsl
bound
aam
les
xchg
leave
dec
cmp
inc
jo
ja
mov
and
mov
mov
out
cmp
bound
in
orl
fs
daa
cli
sbb
inc
or
or
ja
sub
pop
jp
pusha
lret
push
sub
xor
add
push
scas
jns
faddl
cmp
js
xchg
xchg
and
and
xchg
mov
cmpl
push
fstps
xchg
or
stos
pop
mov
data16
xor
jnp
cwtl
out
scas
popf
and
adcb
dec
iret
mov
xorb
dec
hlt
pop
jae
movsb
fldl
mov
or
push
add
aam
cmpb
ds
sbb
inc
arpl
subb
cli
cld
rclb
test
repnz
mov
gs
xchg
hlt
imul
jbe
cld
adc
xor
aaa
pop
cltd
clc
or
sub
jbe
xchg
test
push
push
icebp
sub
push
xchg
mov
and
cmp
or
fcomps
add
in
dec
lock
mov
push
enter
ffreep
out
jno
iret
jl
push
rorl
jle
ds
and
push
out
test
fwait
mov
sbb
test
fwait
cltd
js
jmp
shrl
cmpsb
xchg
loope
pusha
inc
sub
mov
ret
outsb
in
add
push
push
int
hlt
jecxz
subb
nop
add
xchg
sub
adc
int
jnp
sub
mov
xor
fistl
ret
fmul
jne
sub
sahf
push
sub
test
pop
dec
cmpb
jg
outsl
sbb
jecxz
xor
popf
insl
ss
cmp
mov
sub
sub
mov
add
add
pop
sbb
xor
xor
dec
out
outsl
test
or
mov
out
fistpl
notb
dec
pop
ja
mov
repnz
sub
fisttpl
cmpsl
inc
or
or
xor
sbb
xchg
jnp
incb
fldenv
fisubrl
pop
or
jo
or
arpl
mov
push
add
jnp
xchg
mov
fisubrs
mov
test
stos
push
mov
out
dec
sti
lret
cs
rorl
aad
pop
les
insb
daa
mov
xchg
push
xchg
cmp
les
repz
lea
pusha
call
das
int3
pop
pop
fiaddl
adc
add
pushf
xchg
xchg
inc
jmp
insb
sbb
dec
cmp
inc
and
call
sub
and
jecxz
divl
jp
mov
cwtl
add
push
mov
sub
sbb
mov
mov
inc
mov
fwait
mov
repz
add
das
inc
cmc
int3
mov
stos
aad
and
cmp
or
or
cmpsl
and
mov
mov
inc
nop
lret
or
js
and
lock
fistpl
mov
stos
shlb
stos
sub
xchg
adc
ret
dec
mov
or
xor
clc
lahf
xchg
jne
fsts
ljmp
enter
mov
out
pop
cltd
arpl
hlt
out
jle
and
push
add
push
iret
test
sbb
mov
imulb
xchg
mov
test
adc
xchg
sbb
out
mov
pop
sub
mov
push
fcoms
add
or
mov
fwait
adc
inc
imull
or
mov
cmp
mov
out
jle
ja
xchg
jle
sub
rolb
in
or
cmp
or
pushf
jmp
jne
push
cltd
mov
popf
inc
out
pop
rorl
push
sarl
fsubp
mov
movl
popf
pop
jle
xor
jp
fs
mov
jo
mov
leave
stos
pop
jle
jecxz
in
pop
xchg
pusha
ja
xchg
xchg
xor
sub
jne
int3
xchg
push
add
repnz
pushf
pop
ds
insl
push
jnp
into
leave
outsl
push
dec
or
and
sbb
inc
jnp
cli
stos
scas
add
push
mov
inc
aas
iret
sbb
or
inc
pop
cmp
mov
or
int3
pop
or
out
mov
fidivl
cmp
xchg
xchg
sbb
in
cld
out
aas
enter
ds
shlb
pop
mov
ja
dec
leave
fsub
mov
mov
shll
imul
sbb
dec
aaa
sbb
arpl
or
inc
sub
and
push
xor
adc
xchg
scas
das
in
cmpsl
and
cmp
cmp
jno
movsb
arpl
push
push
push
pusha
cmpsb
lret
in
ss
adc
repz
cmp
icebp
pushf
jno
out
jl
jmp
dec
lds
mov
add
ds
pop
lahf
mov
dec
subl
adc
push
insb
cmc
sbbb
jmp
pop
stc
mov
loope
or
cmp
add
cmp
insl
adc
loope
bound
rcll
inc
mov
mov
scas
int
in
sub
ficoml
shlb
push
dec
mov
ja
lods
sub
lea
xor
sbbb
xorb
sbb
add
ss
test
imul
subl
mov
dec
pop
sbb
into
or
add
xor
icebp
outsl
xchg
dec
loop
xor
adc
insl
adc
testb
adc
add
out
pop
jno
ds
cmp
loope
or
lret
gs
and
cmp
mov
adc
cmp
adc
jp
add
lods
xchg
jge
in
add
jg
in
lods
and
call
lret
int
insb
in
push
dec
add
cs
jo
fmulp
jmp
cmp
lret
aaa
xor
jp
fnstenv
mov
pop
mov
or
arpl
shr
mov
pusha
scas
jp
pop
lea
adc
mov
jmp
xchg
lods
pop
repnz
inc
inc
fs
aas
jae
xchg
jb
stos
dec
dec
sbb
pavgw
jae
std
lea
cwtl
mov
mov
mov
inc
sbb
adc
mov
mov
fildll
pop
xchg
cmpsb
das
pop
out
sarb
loopne
test
out
data16
das
dec
andl
mov
xchg
mov
ljmp
inc
repz
mov
sub
iret
aam
shlb
out
sub
pop
aam
cmp
js
into
es
stos
add
push
xchg
sbb
mov
enter
jae
xchg
lods
or
adc
push
push
push
iret
ret
cmpl
loopne
stos
test
cmpsb
mov
fmulp
xchg
out
test
faddl
sbb
hlt
sub
cmpsl
stos
push
movsl
mov
jnp
movb
jns
cmp
or
pop
cs
xchg
dec
mov
scas
fwait
sarl
dec
jns
ja
adc
dec
pop
jmp
inc
sahf
cmpsb
icebp
or
push
leave
fwait
arpl
pop
dec
jg
jne
dec
enter
aaa
out
divb
pop
bound
jbe
in
mov
xchg
out
in
test
or
ss
jp
sbb
jmp
aad
mov
fadd
jle
call
xchg
pusha
adc
mov
mov
call
insb
xchg
sbbl
popf
xchg
fimuls
or
pop
push
mov
mov
and
lahf
insb
pop
and
rcrl
ss
arpl
sbb
adc
rcrl
push
movsb
inc
fimull
inc
in
xor
mov
cmp
inc
outsb
and
out
adc
cwtl
push
imul
test
inc
add
fdivl
mov
lret
leave
push
and
jecxz
push
aas
call
jge
fs
sbb
out
fnsave
fcoms
or
add
cltd
pop
dec
add
push
sbb
fnstenv
or
imul
mov
sub
cmpsb
dec
add
loopne
jle
sbb
mov
cmp
test
jl
push
xor
call
loopne
in
inc
icebp
fldenv
fnstenv
clc
lahf
fidivrs
push
popf
lea
lret
push
xor
push
das
jne
pop
mov
jns
pop
cmp
add
loopne
jle
cmp
inc
stos
cmp
push
popa
outsb
pushf
mov
sarb
rolb
jl
and
or
lret
lods
incb
xchg
sahf
int
xor
sub
pop
mov
lcall
xchg
fsubl
out
sub
push
sahf
dec
cmp
test
in
push
xorb
mov
popf
jns
mov
aad
cmp
lret
mov
mull
lret
hlt
shr
test
sbb
test
lock
cmc
add
sub
outsl
lods
mov
stc
lret
fs
inc
ds
jp
data16
lods
mull
mov
movsl
add
jp
xor
sbb
jle
or
xchg
mov
aad
fucomip
mov
adc
stc
das
adc
movsb
push
add
xchg
inc
xchg
inc
xchg
sbb
daa
gs
daa
add
or
mov
cmp
cs
movsl
lahf
nop
adc
jno
sub
mov
mov
sbb
push
stos
cmc
scas
inc
lea
fsubr
add
xor
sub
and
mov
shr
adcb
dec
jb
inc
pop
fbstp
adc
jb
pop
pop
dec
mov
fs
mov
mov
xor
out
jbe
ja
mov
fmuls
outsl
daa
test
inc
mov
shll
mov
pop
das
fimull
mov
xor
push
shll
mov
insl
adc
jl
in
cmpsl
lds
mov
push
mov
lret
lret
jmp
repnz
lds
mov
out
popa
call
sub
ss
cld
sub
addr16
addr16
xchg
loopne
fst
mov
lret
divb
pop
pop
popa
mov
dec
lods
ja
xchg
int
inc
xchg
pop
stos
pop
push
stos
test
sbb
fimuls
test
in
mov
or
xchg
dec
jg
inc
cmp
xchg
icebp
sbb
sub
int
rcrb
stos
inc
and
push
push
pop
add
inc
cmp
xor
inc
jmp
xor
mov
std
mov
ret
and
pop
add
push
test
inc
addr16
xor
dec
xor
bound
sub
out
aad
insb
bound
pop
imul
add
mov
aas
xchg
adc
or
iret
and
add
pop
jle
addr16
xchg
shr
mov
cmpsl
rcrl
lcall
pusha
lods
dec
int
xchg
fwait
jns
arpl
xor
sub
and
popf
mov
cmp
out
mov
and
gs
jb
dec
jnp
or
push
dec
xor
outsb
iret
ret
ret
sub
add
inc
jo
hlt
jae
xchg
roll
js
or
ret
inc
in
pop
mov
xchg
inc
loopne
sbb
lods
int
sbb
mov
aas
shrb
mov
sbb
or
arpl
jo
jge
rcl
sbb
and
aaa
xchg
jnp
or
sub
ljmp
movsb
xor
sti
mov
xor
fs
loopne
in
insb
and
js
movsb
jns
rcpps
scas
dec
cmpsb
rorb
inc
in
add
push
enter
daa
vpcmpgtd
js
inc
jno
jne
jl
sub
fstpt
add
add
je
data16
std
mov
push
jo
fsubrs
cld
jp
inc
das
jmp
repnz
pop
js
lahf
push
pop
ja
adc
pop
loopne
xchg
int
sub
imul
jb
outsb
decl
adc
xchg
movsb
push
adc
lcall
or
xor
lock
test
subb
add
lcall
loope
int
or
cmp
in
xchg
dec
icebp
or
int
sub
push
mov
add
std
mov
and
test
xchg
inc
ljmp
xchg
lret
popa
roll
fstps
stos
jmp
into
shll
cmc
lret
mov
xor
or
loop
stos
jnp
xor
sbb
cmp
mov
lods
fidivs
sub
movsb
daa
sbb
movsb
aas
inc
xor
movsb
cmp
out
xchg
or
mov
stos
stc
gs
nop
loopne
cmc
add
adc
sbb
adc
and
xchg
add
cli
sbb
bound
jne
jb
jno
sti
ja
in
daa
in
sti
xlat
xchg
js,pn
push
aad
fimuls
out
inc
cmovg
in
fchs
jb
les
stos
repz
or
imul
in
call
lods
arpl
pop
repz
adc
daa
arpl
xor
inc
shrl
rolb
outsb
insl
aas
mov
fdivl
inc
mov
testb
std
fistpl
rcrb
ljmp
mov
repz
fucom
fistl
pushf
mov
lock
sti
das
fstl
mov
iret
pusha
fsubl
out
in
shrl
xchg
cs
clc
add
dec
ja
outsl
cmpsl
les
inc
icebp
inc
outsl
test
cmc
mov
imul
jno
mov
or
into
push
cmp
push
cmp
testb
pop
addr16
push
sub
xchg
lea
ljmp
push
lods
loop
lret
or
out
xor
das
xchg
pop
jl
push
test
add
mov
cltd
dec
jns
test
xorb
lds
test
sub
xchg
std
cmp
shll
and
outsl
stos
xor
adc
roll
push
aas
hlt
add
mov
xor
aad
add
lcall
sbbl
movsl
lret
lcall
sub
ja
popf
mov
add
xchg
mov
fwait
rcr
dec
inc
adc
mov
jns
out
mov
ja
mov
je
in
fstpl
arpl
nop
out
rorl
push
addb
mov
pop
movsl
mov
push
mov
jle
into
lret
in
lret
dec
jecxz
fcomip
pop
jnp
outsb
sbb
jmp
mov
mov
mov
or
popf
loop
cs
push
sub
and
out
sub
mov
scas
sub
or
adc
iret
cmp
ffreep
push
and
cld
or
jae
adc
inc
jmp
sbb
cmp
nop
test
dec
sahf
push
xchg
lcall
imul
fimuls
dec
test
mov
jo
cmc
leave
inc
nop
or
xchg
mov
arpl
sbb
jge
and
push
aaa
push
and
or
cmpsb
shlb
int3
sarb
pop
lods
or
fiadds
jo
mov
andb
aam
cmp
repnz
add
adcl
mov
in
jmp
cmp
je
push
daa
stos
mov
sarb
dec
adc
cmp
dec
stc
cltd
and
aam
lahf
sbb
jecxz
inc
test
jecxz
mov
inc
mov
rclb
pop
or
pop
js
pop
mov
mov
mov
call
in
sub
add
cmp
push
ljmp
or
jo
int
cli
std
sti
sbb
in
add
cmpsb
pop
xor
addr16
mov
int
jns
sub
cmp
pop
sub
aam
mov
js
pop
sub
sbb
inc
test
or
xlat
jg
movsl
shll
mov
pop
cld
and
scas
ss
sbb
cmp
popf
repz
lret
xchg
pop
dec
dec
mov
add
cmc
xchg
cmpsb
pusha
xor
mov
loop
xor
stc
cmp
stos
adc
lcall
rcr
shl
roll
xlat
mov
pusha
cmp
xor
or
xor
into
pusha
andl
push
ds
test
adc
imul
sbb
xchg
sbb
sbb
popf
cmp
movsl
jne
sub
arpl
adc
in
xchg
outsl
mov
cs
xor
nop
leave
int
dec
call
push
jecxz
pop
lret
xorb
mov
add
lea
cmp
cli
jmp
cmp
int3
mov
pushf
inc
pushf
icebp
jmp
movsb
pop
pop
fistl
gs
pop
inc
push
inc
xchg
adc
jb
popa
adc
je
loopne
jecxz
pop
xor
icebp
adc
and
cwtl
in
add
out
sbb
sbbl
xchg
mov
ret
insb
pushf
add
mov
es
mov
dec
sub
incb
fsubs
adc
insl
mov
cmpsl
ret
cmp
mov
sbb
sub
and
sub
leave
mov
mov
rcr
mov
sub
or
lods
nop
mov
xor
lods
aam
jne
ret
test
mov
fstpl
clc
mov
sub
and
popa
mov
sti
mov
xchg
mov
movsl
mov
push
pusha
mov
push
mov
add
repz
test
test
btr
jg
lea
or
test
mov
xchg
or
mov
cld
sarl
rcrl
stos
pop
mov
push
fs
fdivl
sub
pop
push
mov
or
push
xor
or
mov
ja
in
mov
jnp
cmpsb
ja
test
jge
arpl
push
or
test
fwait
lock
sub
jne
test
mov
mov
lcall
jmp
xchg
mov
push
out
sarb
sub
push
sbb
jp
js
mov
testl
test
pop
jle
scas
lods
in
or
fists
jbe
xchg
inc
imul
jg
incb
test
or
mov
in
stos
sahf
and
jne
dec
fs
jnp
sub
scas
mov
adc
adc
sbb
iret
xchg
adc
pop
xor
fidivs
fldenv
or
mov
mov
daa
stos
xchg
icebp
xor
sbb
stos
imul
scas
fisubrs
pop
rcrb
xchg
bnd
inc
push
leave
mov
popf
pop
arpl
hlt
jbe
push
pop
jge
pop
sahf
sbb
push
aaa
adc
rcll
int3
mov
xor
push
rorl
enter
sbb
push
scas
stos
sar
and
dec
cmp
movsb
pop
xor
cmpsb
outsb
push
rcr
ljmp
cvttps2pi
fidivrs
adc
mov
sbb
cmpl
movsl
push
adc
and
mov
push
push
test
push
xchg
dec
mov
js
jg
xor
js
test
pop
cmc
out
push
scas
test
ret
pop
fs
push
cmp
rep
lds
insb
rorb
fimull
or
aaa
adc
xchg
sub
cmp
push
jb
int
jb
sub
xchg
pop
stos
cmp
mov
and
fsubl
inc
daa
sub
fs
xor
xor
adc
addr16
jle
ss
mov
push
adc
sbb
mov
hlt
dec
mul
mov
xchg
shrl
inc
sbb
fisubs
into
cltd
sti
xor
pop
sti
aaa
xor
ljmp
xchg
icebp
stc
out
loopne
fs
jb
adc
lods
add
pop
fs
lods
lods
sti
repz
cmp
fdivr
or
iret
xor
nop
mov
or
mov
xchg
mov
pop
pop
mov
movsb
dec
imul
imul
cmp
and
fadds
xlat
in
add
mov
std
int
sti
xor
ja
aad
jl
nop
movsb
imul
inc
mov
push
les
xchg
ret
pop
jb
jno
call
stos
pop
mov
adc
out
in
jb
cmpsb
pop
jle
jne
loope
push
inc
lods
enter
jnp
jb
mov
dec
hlt
scas
lret
lock
jecxz
mov
and
sub
add
hlt
pop
repz
dec
loop
xor
aas
dec
mov
xchg
mov
xor
lock
sbb
das
fwait
push
adc
mov
aad
jl
dec
xchg
jnp
cwtl
jo
insl
mov
jmp
ret
mov
out
mov
cld
dec
test
lret
cmp
mov
fisubl
xor
dec
and
sub
fs
ja
hlt
ret
adc
pop
push
fcmovb
or
inc
inc
mov
mov
xchg
adc
and
xchg
aam
popa
iret
sub
lods
mov
dec
xchg
out
imulb
rcll
decb
ljmp
movb
movsb
stos
cltd
mov
lret
dec
mov
sub
xchg
fs
lret
ljmp
rcl
jns
pop
stc
gs
stos
push
mov
push
pop
std
mov
arpl
pushl
mov
inc
xor
xor
outsb
addr16
mov
stos
pushf
pop
ss
ja
cmp
dec
jmp
das
inc
cli
adc
or
push
add
pop
xchg
inc
dec
or
add
outsl
shr
and
ret
fwait
jns
add
in
dec
test
pop
push
adc
dec
inc
frstor
test
jp
add
mov
mov
mov
hlt
dec
es
test
pusha
jle
cmpsl
fbstp
rorb
jmp
dec
dec
js
fdivs
popf
xor
mov
cmc
mov
push
test
stos
adc
fisubs
mov
lahf
insb
mov
sbb
lea
scas
out
adcl
ret
divb
hlt
ret
lahf
pop
push
push
inc
xchg
xchg
mov
inc
icebp
push
add
xor
inc
push
sbb
gs
sbb
imul
fmulp
cwtl
cwtl
lds
into
sarb
mov
leave
das
mov
push
aas
mov
divl
std
jbe
sbb
add
or
int3
test
jle
or
cmp
xor
jne
mov
and
jmp
and
clc
cmp
mov
sarb
adc
jno
push
push
jl
cmp
lock
ds
push
iret
movsl
pop
xchg
mov
lahf
pop
iret
pop
push
jmp
stos
mov
inc
fdivrl
cmp
sbbl
adc
pop
xor
jl
into
mov
fidivrl
sub
cmpsl
mov
outsb
sub
pushf
adc
sub
jo
jl,pn
andb
mov
add
cld
xor
cmpb
xchg
loope
int
dec
inc
sub
outsb
jno
sub
inc
lcall
movsb
fmul
mov
inc
sahf
fadd
out
test
mov
fnstsw
fldenv
mov
xor
fisubs
ss
and
inc
mov
fcoms
mov
mull
mov
mov
sbb
jge
into
jl
popf
cmc
and
outsl
loop
cmp
sub
mov
fs
lock
lcallw
xor
cmp
mov
fidivs
mov
xor
cmp
or
cld
adc
mov
jg
mov
pop
ret
adc
inc
loop
inc
push
jle
mov
cmp
and
mov
dec
adcb
adc
xor
sub
clc
sbb
push
add
mov
loop
nop
jg
xor
lds
add
fs
xchg
dec
div
pop
shrl
jb
es
fadds
mov
lock
sub
cmpsb
adc
xchg
mov
fadds
and
inc
push
xchg
clc
aas
mov
lds
xor
dec
imul
rcll
fldcw
in
or
pop
std
rcrb
test
mov
inc
mov
or
sahf
lret
jg
mov
fucomip
mov
add
lock
inc
mov
hlt
scas
pop
and
xchg
aam
pushf
imul
sbb
xchg
dec
push
fidivrl
mov
movb
lret
cmpsl
repz
and
xchg
jo
pop
push
nop
rclb
in
and
aam
aas
add
mov
dec
out
mov
add
adc
pop
popfw
popa
out
lret
lods
and
mov
pop
roll
push
or
into
add
imul
jns
fnsave
xchg
in
dec
adc
test
js
xchg
fistps
sbb
adc
movsb
inc
xor
push
stos
movsb
add
scas
add
xor
sub
xor
stos
xor
std
in
into
mov
icebp
or
ja
dec
cmp
inc
xchg
mov
or
push
sbb
dec
xchg
je
out
lret
add
mov
out
push
test
bound
jns
ds
in
add
xchg
push
sub
out
dec
inc
sub
inc
push
or
sbb
jp
cmp
mov
arpl
jle
dec
jp
cmpb
fists
mov
jmp
adc
push
xchg
push
cs
popf
push
add
xor
pop
stos
test
and
add
mov
pop
fldt
cmp
iret
push
pop
int3
ret
xor
inc
pushf
xlat
and
inc
hlt
fsubrs
mov
movsl
inc
jmp
push
mov
lahf
sbb
out
cli
push
imul
movsl
fidivs
hlt
lds
mov
div
imul
hlt
jbe
jo
popa
imul
jge
jne
sbb
mov
pop
or
dec
mov
xchg
inc
add
xchg
and
pop
cmp
push
push
xchg
into
jo
inc
jbe
imul
out
cmp
sahf
movsb
movsl
xchg
push
inc
out
das
cmpsb
fsubl
xchg
gs
daa
shll
jno
inc
dec
jl
enter
cmpsl
jbe
push
xchg
loopne
xor
mov
jb
push
sub
inc
imul
mov
mov
lahf
add
push
shr
loope
add
sub
mov
mov
adc
add
pop
lea
xchg
xorb
je
pop
fiaddl
insb
xorl
xchg
les
int
adc
sub
adc
test
dec
xchg
push
push
shlb
cmc
cmp
popf
test
xor
jg
clc
divl
and
jb
sub
and
push
mov
fmul
mov
mull
jge
push
mov
arpl
loopne
into
pop
pop
xor
rclb
outsl
shrl
mov
pop
shll
popf
adc
in
sbb
lods
jp
out
les
xor
jo
or
mov
cmp
cld
mov
fwait
mov
xchg
gs
adc
out
insb
pop
loope
lret
adc
adc
popa
inc
add
jecxz
sbb
dec
movsl
cmp
cld
cmpsb
sub
push
sbb
roll
into
sti
xchg
pop
call
aad
stos
lods
nop
pop
jecxz
dec
add
ja
fnstcw
jecxz
sub
test
jne
push
lea
cmp
sub
test
fcomps
xchg
les
dec
test
bnd
cwtl
out
les
mov
inc
loop
stos
aas
sub
jmp
dec
loop
pop
je
or
aad
dec
xor
ja
clc
cwtl
sbb
ret
hlt
jbe
andl
and
shll
mov
lds
jge
mov
mov
stos
shll
jmp
and
jmp
lahf
es
sbb
insl
xchg
push
lods
dec
arpl
cmpsl
shl
mov
popf
andb
popf
mov
mov
call
xchg
loop
mov
shlb
hlt
fcom
or
inc
adcl
mov
xchg
mov
je
xchg
adc
jp
out
std
xor
mov
mov
lods
call
push
mov
mov
bound
sub
test
push
xchg
out
test
mov
leave
sbb
loop
roll
repz
push
dec
xchg
add
and
ret
xor
fsubrs
mov
inc
pop
inc
mov
lods
jge
ja
in
dec
roll
sub
in
cwtl
fwait
jge
mov
jne
inc
test
mov
xor
std
bound
punpckldq
pop
mov
xchg
lahf
aam
out
mov
sub
inc
pop
and
cmp
sub
mov
xchg
add
sbb
dec
or
in
es
pusha
mov
push
jo
scas
xchg
mov
cld
stos
xchg
loopne
scas
xor
leave
push
icebp
mov
fs
add
pop
stos
mull
gs
mov
out
scas
mov
mov
lods
xor
mov
mov
sbb
mov
xchg
inc
cmpsl
insb
les
ret
not
bound
sub
leave
inc
push
std
ret
inc
mov
lcall
ficoms
fldenv
mov
mov
push
cmp
arpl
cmpsl
jbe
xchg
stos
jge
pop
sub
jnp
out
push
out
outsl
or
xchg
scas
add
sub
jle
outsl
pop
imul
xor
sub
cmp
dec
gs
or
sub
pop
inc
jmp
xor
push
xchg
sub
cmpsb
pop
in
sub
xchg
enter
daa
rorb
cmp
cmp
dec
adc
aaa
sub
into
loope
ds
push
movsl
imul
lahf
cwtl
adc
push
push
or
xchg
fidivs
repz
daa
not
shl
pop
test
gs
or
push
icebp
out
or
sbb
divl
outsb
out
inc
or
fiadds
addb
sbb
add
imul
cwtl
sbb
int
mov
sub
icebp
sub
lcall
in
and
sub
in
xor
xor
xor
inc
sbb
mov
movl
and
outsl
cmp
mov
mull
mov
pop
shll
mov
rcrb
xchg
pop
lods
into
inc
jg
cmc
scas
push
hlt
xor
aam
outsl
mov
bound
stc
adc
xor
data16
push
mov
mov
jl
pop
data16
xchg
rorl
or
pop
test
gs
loop
loopne
pusha
dec
pop
add
out
imul
subl
dec
pop
xchg
shlb
pop
cmp
xchg
mov
je
outsb
inc
icebp
in
loope,pt
sti
inc
jle
cs
inc
aad
fcomp
nop
xor
sbb
sub
fpatan
mov
clc
in
js
and
cmpsb
pop
or
out
cmc
daa
mov
pop
jb
xchg
adc
loop
jmp
sbb
pop
addr16
flds
gs
aas
int3
popf
dec
jb
and
jg
je
sbb
pop
xchg
inc
paddw
fildll
fcoms
mov
mov
dec
cmp
loope
fildl
push
xor
pop
and
push
fcoms
cmp
shll
push
adc
cmp
jmp
and
insl
jnp
enter
popf
cmpsl
mov
add
icebp
je
cmp
addr16
lret
test
mov
out
popa
sbb
test
sti
sar
lahf
cmp
adc
jmp
fcomps
ret
rcr
push
and
mov
ja
or
in
movsb
pop
popa
adc
lret
inc
aaa
mov
pop
loopne
shll
int3
mov
nopl
mov
cltd
popa
loop
test
lods
clc
xchg
jle
test
lods
xchg
repz
cmp
xlat
push
push
pop
cli
ja
stos
fcmovnb
sti
push
lock
add
in
sar
xchg
iret
aam
fisttpl
jbe
push
sub
lcall
mov
cmp
call
test
ja
add
dec
les
and
or
push
sub
mov
jg
xchg
testl
bound
mov
xchg
out
shl
loope
js
aad
inc
or
nop
jb
mov
mov
stos
mov
sbb
mov
jo
dec
add
fisttps
lods
push
jmp
stos
xor
addl
cltd
popf
movsl
mov
mov
inc
std
imulb
cli
in
insb
hlt
jge
jnp
xchg
popa
scas
sbb
mov
repz
test
mov
mov
ret
daa
pop
xadd
mov
dec
jae
cwtl
push
cli
inc
sbb
movsb
ret
and
fcmove
push
sbb
dec
mov
inc
lcall
mov
ss
or
and
leave
xchg
sarl
or
bound
mov
jbe
xchg
and
push
mov
ss
aaa
adc
or
mov
int3
imul
or
dec
out
jp
in
and
mov
imul
popl
mov
lcall
loop
mov
enter
daa
mov
ret
pusha
jle
jl
pop
inc
dec
cmp
les
push
lret
mov
xor
cld
loopne
mov
mov
inc
mov
test
popf
js
test
fs
lds
sub
pop
push
cmp
mov
sarb
jle
sbbb
sbb
out
add
xchg
xor
push
fwait
out
int
inc
ja
arpl
ficompl
add
fmul
or
sahf
shrl
mov
mov
xchg
mov
mov
mov
ss
add
fadds
mul
decl
cmp
outsb
dec
mov
sbb
repnz
and
ss
dec
xor
jecxz
push
stc
lret
arpl
mov
push
mull
adc
lods
dec
cmp
out
fbld
xor
mov
sub
jns
scas
jge
mov
loopne
in
pop
pop
mov
adc
imul
stc
stos
add
rcll
sbb
les
fisubrl
and
pop
mov
test
popa
mov
lret
aad
push
nop
adc
addl
sbb
mov
sbb
fsub
jnp
into
lea
mov
add
inc
inc
adc
inc
popa
pushf
lcall
pop
or
mov
inc
sbb
aas
imul
jb
notb
rorb
je
jns
jecxz
pop
jmp
std
lds
dec
cwtl
xchg
or
mov
jo
adcl
in
pop
mov
mov
mov
iret
mov
xor
sub
pop
jge
mov
sbb
into
and
xor
rorl
xchg
imull
loopne
dec
pop
jmp
or
dec
in
cld
testl
sub
arpl
or
lods
cmp
sub
adc
aam
arpl
ret
push
mov
cwtl
fucom
mov
jge
adc
cwtl
ljmp
add
or
out
xorb
xchg
or
rorb
jnp
js
arpl
fstpl
lcall
xchg
in
mov
pop
dec
sbb
lock
cs
scas
pop
movsl
rcrb
push
xchg
fistpll
jg
push
add
test
jge
cs
into
and
in
clc
mov
lea
mov
and
jo
inc
mov
mov
push
ret
fmuls
adc
xor
jne
push
cmpsb
mov
dec
sub
out
push
bound
int3
sub
andl
xchg
cmp
ljmp
cmp
fdivrs
and
mov
or
mov
mov
cmpb
adc
xchg
sub
pusha
ljmp
xchg
pusha
ljmp
and
mov
adcl
push
ja
inc
popf
int3
pop
mov
loope
push
push
orb
frstor
inc
and
or
insb
pop
push
hlt
jnp
frstor
scas
jnp
push
cmp
adc
loop
jb
int3
ret
jecxz
inc
popf
roll
jae
mov
inc
std
and
or
pop
adc
aaa
dec
fidivrl
out
xchg
movsb
dec
sbb
cmpsl
shrl
sbb
lds
mov
mov
bound
leave
or
pushf
hlt
push
or
mov
jbe
add
jge
leave
mov
icebp
mov
or
aas
add
int3
push
ds
pop
movl
es
xchg
test
push
xchg
and
test
jne
mov
push
xor
cmpsb
fnstcw
in
push
add
push
daa
mov
inc
loop
aaa
shll
jl
fs
lods
mov
test
and
arpl
push
xor
mov
or
inc
ret
dec
pop
testb
pop
xor
push
dec
dec
loope
arpl
push
popf
pop
outsb
mov
mov
rclb
lds
xor
add
and
and
inc
xchg
sbb
sahf
and
aas
sub
les
lcall
neg
jp
shrl
inc
sahf
mov
inc
sarb
jg
outsl
inc
mov
pop
mov
mov
xchg
mov
sub
mov
ss
cmp
jmp
inc
lret
cmc
shll
es
mov
fprem1
cmp
push
xor
fdivl
stc
sbb
fs
stc
rcll
movsl
shlb
lods
das
add
jp
popf
mov
add
cmp
aaa
addr16
or
mov
dec
jge
pop
ja,pt
adc
push
and
es
ret
pop
mov
xchg
out
mov
sub
mov
in
adc
sbb
mov
out
cmp
pop
pop
jl
jmp
scas
dec
and
inc
push
mov
fldenv
inc
repz
sbb
jle
jg
je
push
call
and
scas
add
push
les
jmp
jo
pop
lods
cld
inc
inc
test
jno
xor
inc
jb
dec
js
inc
ds
je
sub
ljmp
xor
cwtl
dec
xchg
stos
mov
rorb
daa
sbb
dec
dec
inc
cmp
pop
dec
add
push
xor
das
notb
cwtl
mov
shlb
and
gs
es
jge
insl
dec
mov
adc
mov
and
cld
and
lret
arpl
gs
std
jge
mov
out
leave
rcrb
cltd
mov
outsb
ret
adc
test
cwtl
jle
in
imul
shll
sahf
lods
iret
pop
loopne
sub
lret
out
in
arpl
xorb
add
scas
cltd
iret
out
jb
movsl
scas
xorb
adc
scas
pop
aad
sbb
roll
add
roll
std
clc
stos
mov
jp
add
sbb
idiv
shll
lods
xor
mov
mov
mov
push
fistpll
fisttpll
ja
ret
fimuls
push
mov
in
enter
cmpsl
inc
fwait
or
dec
jp
loope
and
sub
out
rolb
in
daa
stos
xchg
mov
out
mov
sub
xor
push
addr16
xor
js
idivl
or
jbe
sahf
lds
into
icebp
xchg
xor
icebp
xchg
inc
jg
mov
inc
insl
popf
repz
sarb
mov
jo
and
push
inc
insb
lret
jnp
out
scas
push
push
cmpl
iret
rcrl
adc
pop
jge
fiaddl
int3
jae
pcmpgtw
jns
or
lcall
fidivl
imul
xchg
lahf
neg
inc
cmp
sbb
xchg
mov
xchg
leave
xorb
popf
mov
mov
inc
pop
cmpsb
sbb
or
movsb
addb
cmpsl
or
aas
inc
xor
inc
mov
adc
sysexit
jb
jo
test
and
lods
lret
cmp
and
jo
cmpsb
call
mov
lods
daa
mov
jg
jno
dec
dec
jl
inc
jae
sbb
into
ds
cld
movsl
and
and
lahf
cmc
xchg
lds
lock
push
xchg
mov
cmpsl
mov
sbb
ficompl
mov
outsb
push
mov
loope
jbe
sub
inc
inc
cmp
sub
pop
test
adc
outsl
sti
adc
jg
sbbb
cwtl
repz
or
push
mov
repz
sbb
movsl
cmp
test
fsubl
and
sahf
pop
mov
dec
andb
jb
sub
pop
mov
sbb
and
jp
ss
movsl
insl
cmp
mov
inc
xor
and
fwait
mov
loopne
sbb
adc
jl
add
xor
jb
outsl
cmp
cmpsl
or
cmp
mull
mov
sub
inc
mov
out
cli
cmp
jns
in
les
dec
cmp
push
add
inc
loop
mov
sub
pop
pop
addr16
imul
loopne
add
mov
xchg
sbb
sbb
cmp
cld
xlat
pop
cmp
lcall
push
inc
cs
dec
sbb
movsb
mov
in
dec
xorl
jge
int
adc
gs
push
movb
pop
call
movsb
cmpsl
mov
adc
dec
out
or
imul
or
idivb
aas
test
sarb
mov
ss
and
shl
pop
dec
mov
adc
jb
outsb
lds
cmp
cmpl
jo
mov
aad
jnp
jmp
stos
inc
mov
xchg
stos
shll
lea
insl
xor
dec
dec
rcll
test
aad
cld
dec
mov
mov
and
cltd
loopne
pop
add
lea
cmc
ret
dec
aam
jne
ret
outsb
ds
push
insb
int3
inc
fnsave
push
sub
sub
mov
pop
ljmp
shrd
push
mov
dec
out
pop
xchg
xchg
push
cmp
inc
inc
add
imul
xor
mov
popf
jmp
xchg
dec
dec
sbb
jns
pop
sti
std
out
stos
test
push
add
xor
fcoms
aam
xor
mov
cmc
and
dec
xchg
lret
mov
cwtl
adc
dec
popf
push
inc
test
rorl
or
xor
pop
adc
jne
addr16
and
out
lods
and
jns
or
xchg
xchg
push
adc
jb,pn
addr16
in
jp
out
fs
push
mov
mov
mov
xchg
in
ret
and
fucomip
inc
xor
adc
xchg
or
jae
xor
pop
push
std
mov
popf
sbb
mov
jns
stos
ret
jb
and
les
insb
xor
mov
scas
inc
xor
adc
xchg
ret
rcrb
inc
pop
inc
rorl
sub
mov
inc
add
or
adc
in
fwait
mov
sbb
aas
into
imul
lds
dec
rcrb
mov
or
leave
stc
fldt
hlt
in
sbb
lods
aaa
push
jbe
inc
xor
lret
addr16
or
dec
cli
daa
or
sbb
sub
rcrb
int3
out
imulb
xor
xchg
xchg
mov
pushf
cmp
iret
sbb
mov
fsubr
and
enter
daa
mov
imul
in
leave
jl
lock
mov
ds
xchg
sub
and
pop
outsb
fadds
stos
jae
int
lahf
pop
inc
or
js
sti
xchg
pop
scas
in
push
ja
loope
lods
jmp
jo
pop
cmp
aad
adc
dec
mov
ret
cmp
data16
ss
stos
xor
mov
push
movsb
inc
int
xor
sub
out
pop
and
rcrb
or
pop
sub
stos
jmp
add
stc
jg
rorb
mov
dec
cmp
mov
leave
in
ss
sbb
cmp
jne
negl
cmp
ror
movsl
mov
dec
popa
into
into
xchg
xor
jp
sbb
sub
pushf
rolb
pop
scas
adc
sbb
std
inc
sub
fwait
mov
cli
outsl
sar
xor
cs
or
mov
fisubs
inc
xchg
loopne
ljmp
lock
imul
push
addb
push
add
sbb
jne
inc
xlat
popf
xlat
loope
jge
dec
mov
ljmp
cs
sub
jmp
seto
repz
inc
ja
jbe
iret
xchg
xchg
fdivrs
xchg
movb
call
and
movsb
pop
ds
fwait
imul
inc
xchg
xor
aas
dec
pop
and
mov
xor
xchg
pop
jecxz
lock
negb
sbb
cwtl
les
mov
rorb
mov
add
fstpt
int3
mov
and
lock
iret
jbe
mov
fbld
ds
jbe
imul
scas
or
aad
dec
dec
cmpsb
sub
fsub
inc
icebp
rolb
lret
inc
subb
or
or
xor
and
and
jnp
inc
out
inc
sub
xchg
inc
aam
jl
ret
std
out
push
das
push
aaa
fstl
out
arpl
seta
adc
mov
mov
lods
movsl
mov
mov
cmpsl
out
stos
cmp
xchg
fnsave
cmp
icebp
sets
sub
pushf
dec
jno
cmp
and
enter
movsl
pop
jnp
jl
xchg
test
lods
dec
xchg
aad
dec
dec
inc
shll
int
pop
cmpsb
shrb
stos
xchg
aas
fistpl
jl
roll
push
push
test
jle
outsl
or
fnsave
mov
popl
mov
push
imul
pop
enter
ret
or
inc
out
fwait
push
cli
xorb
adc
mov
les
fadds
in
xor
xchg
sub
iret
out
pushf
dec
sub
sub
jnp
mov
mov
outsb
mov
std
adcl
clc
or
pusha
mov
mov
xchg
fldcw
into
jmp
xlat
stos
bound
rclb
mov
cmp
sub
and
bound
hlt
jnp
inc
lahf
scas
movsb
jp
push
psubd
adc
mov
xchg
xor
add
pop
jmp
jmp
jae
xchg
sbb
xorl
push
jecxz
cmc
ficoml
daa
sub
enter
push
fiadds
push
shlb
mov
pop
cmp
jp
cmp
push
jbe
adc
jge
and
sbb
hlt
insl
aaa
or
mov
and
out
pop
push
push
xchg
push
adc
add
lds
jmp
or
lcall
push
push
dec
mov
in
or
test
daa
mov
or
mov
jne
dec
stc
andl
mov
dec
and
std
sbb
scas
mov
test
ljmp
nop
fimull
pop
imul
add
das
pop
in
popa
sbb
sbb
loope
or
fildl
daa
outsb
fstpl
sbb
add
into
pop
arpl
sbb
fadds
inc
aad
xor
lcall
dec
xlat
sahf
pop
mov
int3
push
push
pop
add
fdivrl
inc
sub
test
test
ja
sbb
xchg
or
mov
sub
mov
sub
jmp
and
fistps
xor
cmp
xor
and
fcompl
or
mov
push
push
sbb
push
cmc
xchg
mov
xor
scas
cmc
loop
cs
fs
data16
add
in
stos
mov
mov
xor
out
or
in
gs
cmp
mov
add
ret
cmp
imul
stos
cmp
aad
stos
cmp
cmc
imull
lock
dec
mov
push
xchg
sbb
lods
cwtl
pushf
cs
ficoml
nop
jl
fimuls
xor
inc
mov
xor
repz
xchg
lea
xchg
scas
mov
sbb
cmp
sub
inc
sbb
jne
test
aas
out
popa
jb
jnp
dec
lods
stos
in
fiadds
jecxz
push
psadbw
loop
std
popa
loop
cwtl
jg
es
pop
imul
or
es
subl
xchg
call
jp
cmc
sub
sub
test
pop
insl
incb
dec
inc
or
stos
mov
cmpsl
push
out
cld
mov
jb
mov
adc
fsubl
inc
jp
rclb
test
aam
insl
ret
mov
ret
push
bnd
sub
jle
push
clc
sahf
pop
out
xchg
or
sbb
sub
lcall
mov
lcall
das
dec
push
adc
stos
add
dec
adc
xorb
test
lock
jecxz
cmp
xchg
inc
dec
sbb
jp
rorl
jnp
stos
xchg
or
imul
xor
stc
or
sub
mov
shlb
mov
push
push
pop
ja
inc
cwtl
dec
xorl
mov
xchg
or
push
xor
and
ret
jne
push
scas
mov
push
out
push
cli
bound
push
jns
xlat
scas
xor
xchg
jns
xchg
jo
xor
and
xlat
sbb
mov
mov
inc
mov
jle
jle
in
call
mov
sub
xchg
xchg
lods
push
xchg
jmp
mov
xor
push
and
popf
push
insl
scas
push
jl
std
stos
test
or
insb
or
push
scas
pop
mov
push
push
dec
pop
adc
rol
iret
out
aad
ret
cltd
pop
and
inc
jmp
rorl
pop
mov
push
bound
lods
xchg
add
sbb
es
imul
fsubp
test
rclb
dec
repnz
inc
pop
leave
out
data16
cmpl
lret
jbe
push
test
pop
fistps
fldl
jecxz
mov
imul
add
pop
andl
mov
pop
shll
cmp
jle
inc
cmp
andb
mov
jno
xchg
in
icebp
xor
inc
sbb
daa
mov
pop
pop
jno
mov
dec
push
xor
xchg
xchg
dec
and
cmp
andl
push
mov
inc
inc
push
xor
push
lret
xchg
adc
js
insb
inc
pop
sub
pushw
jb
loope
xchg
sub
arpl
and
outsb
inc
push
call
add
and
cmpb
test
mov
xor
fwait
push
stos
test
clc
sub
pop
jmp
lcall
mov
es
jns
jle
jmp
test
fwait
cmp
mov
incb
mov
inc
fwait
mov
clc
mov
out
pop
and
xor
cmp
jmp
push
fwait
nop
sub
cld
pop
scas
sar
stos
mov
dec
fistpl
scas
push
ror
xchg
inc
xchg
cmc
pop
mov
xor
adc
ret
stc
pop
xor
fs
jle
mov
fstl
mov
shrl
xor
ret
cmp
je
or
ret
gs
loopne,pt
test
pop
mov
ja
imul
xor
add
cmp
sbb
jmp
stos
xlat
sbb
int3
mov
shlb
pop
push
lcall
sbb
nop
push
jl
dec
sahf
js
inc
popf
fnstcw
aam
repz
push
lea
fsubr
enter
and
pop
movsb
push
insb
adc
in
flds
pop
cmp
rolb
enter
dec
aas
xchg
jb
sahf
cmp
insb
imul
inc
mulb
mov
cwtl
cmp
mov
xorl
testb
fistpl
jne
mov
mov
leave
das
jb
mov
lods
pop
mov
mov
sahf
fwait
xor
imul
pusha
cmpsl
mov
lea
jle
push
cld
into
mov
pop
daa
cli
mov
sbb
mov
bound
xchg
shr
dec
std
sub
sbb
aam
test
push
mov
push
frstor
and
xchg
dec
adc
mull
mov
lods
jnp
pop
mov
jno
pusha
xchg
imul
out
xchg
or
push
mov
stos
mov
test
out
mov
fstl
dec
dec
mov
int
popa
or
shl
fistps
pop
cld
testl
ret
add
xchg
decl
jb
int
add
and
cwtl
mov
adc
lods
or
rorb
ja
jp
dec
jbe
fadds
inc
mov
fwait
das
xor
stos
in
cmp
shlb
addr16
or
int
cmp
in
mov
enter
repz
repnz
pop
fisubs
dec
push
jp
xor
jns
mov
or
jle
out
in
adc
icebp
orl
jg
test
testl
in
push
inc
stos
test
mov
mov
mov
and
out
mov
push
scas
push
xor
add
adc
sub
iret
dec
sbb
ret
test
inc
hlt
scas
out
cmp
add
or
xchg
inc
loope
jno
std
xor
xchg
push
dec
add
pop
inc
imul
fimuls
fwait
loopne
lods
sbb
push
sub
repz
pop
stos
pop
hlt
into
test
arpl
dec
mov
inc
pop
mov
sbb
insb
pusha
or
dec
or
jmp
outsb
pop
mov
daa
push
lahf
jl
xor
test
xchg
adc
cmp
jne
movsb
std
mov
push
mov
xchg
mov
fdivs
enter
daa
mov
addr16
jno
xchg
stos
jl
stc
lcall
xlat
popa
movsl
pushf
xchg
or
mov
ja
push
push
inc
icebp
test
cmp
inc
jecxz
scas
push
cs
mov
addb
fnstcw
loope
sub
sub
adc
cmp
push
outsb
mov
add
fildl
or
test
inc
or
ret
test
pop
xor
ss
lods
sub
int
sub
sub
jns
mov
xchg
or
cmp
add
rcrb
in
scas
adcb
and
popf
test
mov
mov
cmpb
dec
xchg
ss
or
cmpsb
jge
pop
push
push
lret
sbb
xchg
aas
test
mov
ja
clc
cmc
pop
mov
outsl
mov
test
add
xor
lods
mov
cmp
cwtl
daa
insb
cli
or
xor
xchg
aad
or
xchg
mov
movsb
outsb
pop
adc
daa
imul
lahf
dec
add
lods
push
xchg
daa
cmp
or
xlat
pop
mov
clc
mov
sub
sar
int3
push
cs
dec
aad
add
decb
shlb
mov
mov
stc
pop
xor
mov
mov
lea
imul
mov
inc
push
adc
insb
fs
pushf
shlb
fcompl
inc
mov
into
xor
imulb
je
lahf
mov
mulb
lret
std
scas
pop
xor
cmc
lock
mov
or
mov
jp
sbb
dec
dec
loope
xchg
fisttpl
rorl
icebp
cmc
dec
lock
insb
movsl
das
push
test
arpl
mov
arpl
fldenv
mov
movsb
insl
int3
int
dec
cmp
test
push
imul
cmp
and
add
clc
lcall
rcr
aam
mov
ret
stos
js
push
js
int3
xor
clc
adc
push
xchg
mov
sbb
adc
into
popa
mov
jmp
mov
aam
pusha
xchg
mov
add
jle
lgs
add
jp
cltd
loop
adc
jle
xchg
xchg
popa
test
xchg
bound
fs
pop
sarl
lahf
cs
cmpsl
dec
test
gs
mov
add
push
xor
test
xor
mov
mov
pop
or
pop
test
aas
ja
xor
dec
imul
add
jmp
lret
mov
out
sub
sub
pop
sub
xor
in
xor
xchg
pop
scas
or
jbe
mov
or
lret
sbb
and
out
mov
lds
mov
loope
popa
inc
inc
in
sahf
cmp
or
fildll
push
xchg
push
xor
jmp
cmp
subl
push
or
setge
in
push
cli
add
stos
popl
insb
loope
push
jnp
xchg
mov
push
in
lds
mov
dec
ret
rcrb
cmp
add
loope
inc
psllq
or
add
jmp
xchg
scas
xchg
push
sbb
pop
loope
inc
rcll
push
mov
and
mov
push
cmc
test
aad
shl
sbb
shll
xlat
cmp
xor
jge
jge
sbb
jne
dec
inc
mov
xchg
push
add
dec
ds
shrl
push
cmpb
jo
pop
pop
scas
inc
dec
andl
mov
xor
or
in
mov
shlb
mov
and
jno
stc
dec
inc
inc
je
lret
movsl
mov
aaa
mov
daa
pop
aaa
test
dec
sub
inc
jb
movsb
flds
push
mov
lcall
cmp
sub
lcall
push
mov
pop
shlb
mov
stos
sbb
imul
sub
push
mov
pop
int
icebp
fwait
sub
sbb
add
push
fs
fdivrl
sub
sahf
ss
mov
insb
mov
xchg
jg
leave
xchg
mov
or
and
mov
enter
scas
jmp
cli
jl
cmp
popa
and
negl
add
lret
jp
sub
cmp
or
into
xor
addr16
xor
cmpsl
repnz
jle
stc
int3
xor
mov
dec
adc
sub
xor
xchg
fwait
xchg
out
add
cli
cmp
and
pop
and
dec
or
mov
pop
mov
pop
clc
push
out
cmp
test
adc
sahf
popa
sbb
mov
pop
xchg
ljmp
cmp
imul
dec
adc
mov
xchg
test
mov
pop
repnz
push
or
pop
or
lods
fldcw
aas
jmp
nop
or
ficomps
call
pop
xchg
sub
or
adc
repnz
inc
xor
jmp
lret
push
pop
jg
inc
inc
scas
pop
mov
into
or
les
jb
subl
jecxz
sbb
std
push
xchg
pop
cwtl
mov
bound
jg
pop
xorl
mov
add
lock
jecxz
xor
and
mov
into
jb
shll
xor
mov
sti
dec
ss
lcall
test
cld
and
add
std
fcmovnu
mov
daa
xor
mov
mov
aad
enter
xor
mov
cmp
loopne
cmp
adc
dec
jns
xchg
leave
daa
push
ljmp
adc
mov
aaa
out
ficoml
movsb
jge
unpcklps
push
add
inc
mov
test
sti
lea
mov
add
test
or
xchg
scas
sbb
inc
sbb
popl
stos
push
sti
push
or
popf
add
mov
mov
jae
dec
or
iret
pop
xor
jae
mov
fwait
mov
mov
aas
mov
dec
pop
out
inc
ja
or
ja
fwait
and
dec
int3
sub
mov
push
dec
out
pop
mov
cltd
jns
in
xor
mov
stc
loop
sub
adc
add
push
aaa
adc
iret
xor
mov
xchg
ljmp
movsl
aas
filds
repz
in
cld
xchg
add
cmp
mov
popf
fstl
jg
jle
fwait
push
cmp
push
stos
add
fldenv
mov
hlt
insb
dec
jno
jnp
xor
push
push
sub
jle
or
push
pop
cltd
mov
jae
stos
inc
adc
dec
or
jl
movsb
inc
fistps
mov
sbb
aaa
xor
inc
in
fcoms
icebp
xor
shl
add
cmpsl
lcall
add
jbe
int
jge
cmpsb
sbb
stos
or
or
nop
add
add
rcl
pop
adc
in
push
imulb
sbb
int
pop
mov
mov
aaa
in
cmp
xlat
movsb
adc
jl
pop
sub
cmpsb
cli
fcompl
cmpsb
stos
enter
daa
mov
jmp
jno
adc
dec
mov
sarb
in
decl
and
xchg
rcrl
cli
stos
dec
test
push
stos
sahf
inc
add
pushf
push
mov
js
push
pop
jmp
mov
loope
fdivrl
xchg
test
push
dec
push
outsb
imul
dec
popl
xchg
xor
push
sbb
push
jbe
in
fiaddl
mov
pop
int
fwait
pop
sub
pop
sub
lahf
rolb
cs
push
mov
dec
jecxz
dec
outsl
rcrl
jns
orb
jg
adc
sbb
leave
mov
gs
and
push
mov
cmp
adc
fcomps
mov
aad
add
ret
mov
pop
into
cmp
insb
jb
adc
push
cwtl
loop
lods
push
stc
subl
fs
mov
adc
loope,pn
cmpb
xchg
in
aaa
out
pop
xor
outsb
fsubl
in
sbb
icebp
loope
xchg
pop
or
loopne
fstps
adc
ljmpw
sub
imul
xchg
lods
xchg
jge
jno
sub
pushf
andl
sub
scas
in
add
scas
sti
imul
mov
dec
add
nop
call
pop
roll
pop
mov
loop
push
les
jb
repz
sub
xchg
shr
lea
and
cmp
pop
mov
inc
adc
xor
inc
xor
jne
aas
arpl
mov
roll
dec
mov
cmp
jle
mov
in
xchg
std
in
ja
imul
mov
sub
mov
cmp
cmpsl
pop
nop
mov
push
mov
int
lock
xor
sete
add
pop
mov
pop
lock
add
push
es
out
dec
xor
cmpsl
mov
arpl
add
arpl
dec
or
insb
fdivrl
and
cmp
sub
mov
in
sub
mov
push
and
fstpl
js
clc
mov
mov
clc
or
mov
mov
ds
out
lcall
push
jg
testb
repnz
add
dec
pop
cltd
push
enter
subl
mov
dec
jg
aam
js
movsl
xchg
push
sbb
inc
push
shl
mov
pop
std
gs
stos
inc
push
xchg
push
stos
fs
add
fiaddl
sub
xor
call
push
cmp
sbb
mov
jg
mov
cli
leave
ja
cs
dec
lret
push
loopne
or
aad
fwait
push
sub
scas
xlat
data16
aam
mov
enter
jo
lds
hlt
in
test
out
es
adc
addr16
and
jp
les
cli
cmpsl
pop
mov
adc
jle
fcmovb
in
in
pusha
ret
fbld
in
jmp
into
mov
jns
mov
popf
add
pop
mov
js
movsb
stos
jne
sub
leave
dec
or
jp
rcrl
push
jb
mov
iret
push
aas
ret
ret
pop
xchg
pop
inc
adc
adc
or
notl
inc
pop
dec
sti
ficoml
and
xchg
pop
xchg
jmp
imul
fidivs
xchg
lds
imul
xor
repnz
jae
leave
ret
cmp
hlt
scas
sub
arpl
shlb
ffreep
jge
mov
aaa
enter
insb
pop
popl
adc
movsl
sbb
add
add
mov
lods
jb
lret
cmp
fistl
or
cmpsb
jge
inc
in
lea
daa
mov
test
jne
jno
mov
in
dec
dec
and
in
adc
cmc
and
dec
or
sub
push
sub
add
gs
pop
adc
fcomps
sub
daa
push
fsubs
loope
jmp
sub
and
cmp
loop
outsb
int3
rcrl
dec
xor
insb
and
mov
std
xor
in
scas
js
rdpmc
mov
insl
cs
sub
mov
stos
pop
push
in
lcall
fs
mov
sub
stos
cmpsl
sahf
jl
aad
jp
repz
jp
push
mov
mov
mov
repz
and
cmp
andb
sbb
lcall
pop
in
pop
mov
sbb
push
into
and
shl
je
adc
jo
mov
or
push
sbb
cmp
jae
mov
iret
xor
mov
xchg
xchg
inc
adc
mov
cld
inc
cmp
icebp
dec
or
dec
mov
xchg
push
loopne
adc
pop
ss
lds
call
lahf
add
scas
xlat
xchg
jo
inc
sbb
xlat
js
xlat
pop
dec
sub
das
xchg
push
pop
mov
sti
sbb
xchg
cs
jb
aad
sbb
ret
mov
dec
sbb
fstps
ror
les
stc
inc
repz
xchg
xchg
setns
mov
xrstors
cmp
adc
out
pushf
popf
mov
jmp
pop
sbbl
lret
or
and
add
jb
xor
dec
fnstcw
mov
cmc
divb
roll
movsb
sub
cwtl
es
mov
in
mov
and
mov
cmp
lret
mov
and
mov
in
push
rcll
outsb
es
and
insl
or
and
push
dec
cmpsb
icebp
ficoml
and
outsl
and
sub
pop
ficoms
shlb
jle
sub
mov
rcrl
inc
jno
clc
lds
in
ljmp
cmp
aaa
out
std
add
xchg
xchg
lahf
psrld
out
push
jle
cltd
xchg
xor
clc
data16
fs
repz
xchg
jns
jge
dec
sarl
xor
stos
xor
push
dec
lahf
push
add
repnz
dec
and
or
lahf
imul
jecxz
xor
xor
pop
mov
xorl
fimull
hlt
inc
movsl
add
dec
fwait
sbbb
jns
jne
outsl
push
out
lds
out
pop
mov
jns
psrlq
sub
add
test
cmp
or
push
mov
jp
fnstcw
mov
or
and
dec
aas
jle
adc
in
popf
mov
ffreep
iret
adcl
cltd
xor
pop
push
push
dec
lods
popf
sub
inc
push
mov
in
stos
call
mov
insb
and
jbe
divb
rclb
cmpsb
adc
fs
iret
leave
pop
addr16
adc
cmp
jae
mov
or
jb
arpl
jg
fcmove
cmpl
inc
adc
data16
or
aam
vmulsd
mov
dec
xor
hlt
cli
test
loop
push
fs
js
xor
test
xor
or
dec
add
dec
stos
pop
outsb
out
push
sub
xor
adc
ljmp
pop
inc
add
in
test
sub
jl
add
fldln2
je
inc
enter
daa
mov
mov
jno
and
repnz
dec
xchg
in
mov
xor
mov
mov
xchg
jge
in
fwait
mov
test
lods
cmpsl
scas
inc
pop
dec
inc
and
pop
push
inc
xchg
js
mov
in
push
mov
loope
pop
out
pop
and
cmp
outsb
das
mov
pop
rolb
or
pop
int3
sbb
cli
inc
add
or
cmpsl
push
mov
lcall
popf
jns
lcall
je
jge
pop
sub
test
sahf
test
push
test
sbb
mov
xchg
and
arpl
ret
pop
mov
xchg
mov
notl
fcmove
mov
inc
and
jle,pt
add
repnz
cmp
outsl
xor
mov
add
lods
adc
cwtl
inc
std
cmc
lods
dec
xor
mov
cmpsl
mov
aam
pop
xor
lcall
lret
pcmpgtw
lcall
pop
push
js
adc
dec
cmp
lcall
cmpsb
xchg
xor
and
adc
xlat
push
jg
sub
pop
mov
sti
bound
insb
pop
aad
xchg
push
dec
jns
mov
fsts
sub
and
es
cltd
mov
cmp
das
mov
pushf
jmp
pop
and
cmpsb
adc
mov
jmp
dec
mov
stos
fiaddl
ret
add
aas
mov
pop
stc
dec
jbe
xor
aaa
jecxz
inc
divb
mov
dec
dec
aaa
cwtl
loope
lock
mov
pop
subb
adc
dec
lea
loop
sbb
popa
mov
xor
lret
das
int
mov
aas
cld
mov
outsl
out
rcrl
pop
shrb
xchg
mov
cmpsl
mov
enter
es
mov
repnz
movsl
mov
add
cmp
test
jno
adc
std
and
rorb
dec
lahf
sub
ret
out
mov
sub
add
push
xchg
xchg
sub
faddp
stos
popa
adc
push
lods
xchg
rorb
push
hlt
nop
out
pusha
stc
add
into
rorb
bnd
xor
stos
cltd
mov
nop
mov
jno
mov
dec
dec
enter
jecxz
xchg
xchg
cmp
rcll
movsl
stos
and
push
icebp
int
add
or
cmc
lds
insb
sbb
lret
xor
scas
mov
les
pop
jo
jne
mov
jae
xor
dec
mov
call
push
dec
dec
jne
cmp
outsb
pop
mov
out
nop
out
movsb
loopne
jmp
sub
int
call
xchg
push
jl
out
sbb
sub
push
jmp
jp
cmp
push
or
jle
inc
int3
in
mov
je
in
sub
lret
xchg
fs
push
push
adc
sub
das
rorl
lret
and
testl
pop
mov
scas
pop
and
lds
or
push
iret
sub
and
insb
jge
inc
sub
dec
jae
push
push
inc
sbb
add
in
out
cltd
inc
pop
cmp
jl
push
xchg
or
arpl
mov
repnz
add
shlb
adc
mov
daa
xor
inc
jl
arpl
aas
jbe
pop
mov
pop
jo
sbb
push
sub
inc
rclb
add
or
add
pop
popf
lea
xor
outsl
imul
and
cmp
cmc
movsb
mov
loope
inc
popf
das
cmpsb
subl
enter
daa
mov
ja
fistpl
jno
fistps
cmp
dec
add
ds
bound
mov
sub
push
push
jae
push
test
ja
push
inc
scas
outsb
mov
in
inc
pop
jl
bound
popf
inc
pop
cmpsb
ds
push
inc
loope,pn
jbe
sub
testl
outsb
xchg
mov
adc
and
mov
sbb
clc
add
out
xor
je
mov
out
icebp
sub
mov
or
push
sarb
sub
insb
add
mov
sbbb
or
adc
or
clc
insl
inc
and
jge
push
push
sarl
dec
pop
imul
shld
mov
roll
lea
leave
xchg
outsb
into
out
std
cmc
add
adc
test
loop
insl
jmp
fs
push
adc
test
xchg
mov
mov
xchg
mov
pop
in
repnz
int3
cmp
daa
lods
or
sub
jb
gs
ss
mov
lea
mov
imulb
dec
notl
mov
add
pop
lods
xchg
testb
sbb
dec
and
xlat
xchg
cmp
mov
inc
mov
sti
jbe
sbb
or
aad
jo
nop
jns
sbb
fsubs
inc
cmpxchg
flds
add
rep
or
pushf
jecxz
lea
shr
xchg
addr16
sbb
pop
addr16
adc
ss
jmp
add
pop
or
pop
inc
lret
inc
inc
jecxz
aas
inc
fnstenv
mov
dec
in
push
jbe
stos
sub
mov
out
std
repnz
mov
mov
mov
mov
cmp
js
mov
xor
fimull
aam
shl
add
lods
mov
dec
mov
cli
pusha
adc
out
jmp
es
xchg
mov
dec
cmp
dec
and
mov
mov
inc
mov
mov
xlat
cld
sarb
lret
mov
xor
inc
jp
mov
sbb
sub
sub
sbb
jne
push
push
inc
insb
mov
clc
cmp
cltd
xchg
lds
push
cs
sub
mov
std
xchg
imul
in
xchg
adc
inc
sbb
nop
jle
add
mov
test
adc
mov
sahf
xchg
nopl
pop
jno
sbb
jg
shr
ja
pop
incb
stos
maskmovq
push
xchg
lock
add
sub
jmp
pop
lret
lret
xor
add
xor
rorl
cmpsl
adc
mov
sub
push
ja
test
sub
decb
out
fwait
loopne
mov
jne
shlb
push
mov
mov
jns
aam
in
je
xchg
mov
imul
or
cmp
jp
dec
xor
jnp
xchg
mov
idivb
bound
in
pop
pusha
xchg
xlat
fcomp
add
notl
shr
xchg
das
pop
fildl
fcom
stc
popf
jns
arpl
xor
sub
and
notl
jnp
arpl
scas
mov
test
iret
xchg
das
pop
mov
fimull
push
and
rcll
sbb
dec
inc
das
arpl
sbb
out
imul
ficomps
lds
jl
mov
repz
xchg
leave
sub
push
arpl
lcall
out
sbb
mov
sbb
add
jne
int3
insl
push
addr16
int3
notl
push
icebp
pop
xchg
lret
scas
fiadds
cmp
lds
dec
pop
cmpsb
push
xlat
scas
in
inc
loope
pop
lahf
sbb
mov
scas
cmp
pop
dec
jno
rclb
jno
add
jns
pop
movsl
shll
and
cmp
inc
loop
test
inc
cmc
lahf
inc
cmp
or
js
sub
pop
in
and
xchg
xor
shrl
sub
mov
out
mov
push
movsb
sbb
adc
sbb
mov
sub
sub
and
pop
fwait
xor
lcall
xchg
rcll
sahf
fisttpll
xorb
shlb
mov
test
mov
cmp
or
lret
je
push
and
mov
push
sbb
mov
into
leave
fstps
cmc
leave
addr16
xor
ds
push
stc
pop
insb
push
fs
fwait
push
inc
pushf
nop
lods
sbb
fimull
xchg
std
cli
cmp
xor
int
xchg
xorb
lods
mov
and
mov
loopne
xor
pop
xchg
movsb
daa
adc
shrb
daa
adc
push
or
adcl
aad
or
imul
mov
mov
in
lods
push
sti
and
cmp
or
aaa
sbb
and
fnstcw
xchg
jnp
xchg
lahf
jnp
loope
xor
and
fs
mov
in
pushf
sahf
lret
bound
pop
scas
push
inc
push
aas
fbld
into
dec
cmpsb
jmp
jecxz
add
idiv
insb
es
cltd
aaa
repnz
push
cmpsl
insl
mov
orb
jle
dec
arpl
inc
mov
fdivrs
lock
ljmp
cli
out
lods
mov
and
cs
sarl
js
insl
ss
pop
dec
sbb
push
xor
pop
mov
lret
sub
inc
and
cmpsl
pushf
jae
cmp
mov
sub
jge
ret
add
push
push
or
push
mov
ljmp
pop
xor
les
popa
aas
sbb
lods
push
mov
repnz
pop
adc
push
jmp
dec
pxor
add
test
sub
pop
test
in
out
sub
dec
sbb
stos
test
add
xchg
shlb
xchg
push
cmp
inc
pop
test
pop
xchg
push
aaa
pop
xchg
add
inc
push
imul
adc
leave
or
imul
out
mov
ljmp
pop
out
les
push
mov
sbb
inc
push
lods
or
xchg
push
fwait
js
or
xchg
icebp
mov
gs
bound
bound
fstl
lods
ja
pop
pop
jo
icebp
cli
xchg
out
sub
sub
cld
movsl
mov
adc
mov
mov
nop
cmp
mov
cmpb
ja
in
and
cs
mov
and
mov
mov
call
jmp
fwait
leave
ficompl
movsl
daa
pop
push
je
adc
and
shrl
jnp
fnstenv
pop
ljmp
ret
iret
out
fadd
stos
sub
cltd
inc
inc
pop
and
lahf
lret
adc
or
jecxz
and
xor
int
mov
jecxz
imul
jne
pushl
lds
inc
mov
inc
loope
leave
lahf
mov
repz
push
jbe
lods
jge,pn
inc
rcrl
mov
aas
aaa
les
mov
int3
pop
cmp
pop
sti
and
ljmp
ljmp
push
shll
or
fstl
cmp
push
in
sub
enter
daa
mov
push
cmp
sbb
lds
xchg
pop
inc
dec
loopne
imul
int
xor
cmc
mov
mov
test
or
xchg
pop
lret
js
dec
pushf
pop
and
jo
jge
loope
nop
jl
sahf
push
inc
cmp
outsl
fists
fcomps
push
shlb
adcb
sbb
mov
add
xchg
aad
testl
dec
inc
movsb
sub
push
adc
outsb
call
idivb
push
test
cwtl
dec
jg
mov
mov
inc
xchg
mov
cmp
and
mov
cmp
ret
je
notl
pop
xchg
shll
jl
daa
nop
imul
nop
pusha
dec
xor
jnp
loop
pushf
pop
stc
push
xchg
cld
fs
xchg
adc
inc
mov
lret
lods
add
je
jns
xchg
out
icebp
cli
insl
jp
xor
pop
loopne
mov
sub
gs
cwtl
xor
sti
mov
into
adc
scas
xchg
imul
and
xor
sbb
dec
sub
fucomip
mov
sbb
sar
aam
sti
rcll
loop
mov
xchg
nop
das
inc
xor
ja
les
hlt
repz
sahf
ffreep
mov
mov
call
sbb
ret
arpl
fsubrs
dec
xor
pop
push
mov
sbb
in
aas
jle
aad
jo
sub
fildl
jecxz
leave
int3
clc
idivb
xchg
inc
add
cwtl
adc
pop
mov
xchg
jbe
xor
cmpl
cmp
xchg
xchg
mov
int
mov
ds
lock
pop
mov
or
rorl
add
dec
sbb
cmpl
adc
or
xchg
pop
xlat
mov
push
imulb
inc
ljmp
sub
sub
lret
pop
xchg
sbb
fstp
cmp
aad
inc
mov
mov
lods
rorl
out
mov
adc
sbb
add
lahf
cltd
arpl
pop
test
sbb
xchg
adc
dec
orb
fucomip
jo
pop
mov
sbb
aad
cltd
lret
push
lods
xchg
stos
in
mov
add
pop
mov
dec
xor
orb
icebp
mov
fists
sub
jmp
pop
mov
test
dec
push
lret
add
fwait
ds
sbb
push
mov
jne
ret
or
shr
inc
es
movsb
test
jns
sub
in
or
insl
out
fs
sub
mull
les
mov
mov
movsb
mov
lods
jle
orb
leave
call
ret
mov
jmp
adcl
push
pop
xor
movl
push
mov
scas
stos
mov
jmp
cmp
adc
mov
sub
subl
into
mov
iret
inc
fbstp
mov
and
jle
mov
repnz
and
mov
cld
dec
inc
push
fnstcw
ficoml
jg
sbb
mov
imul
adc
mov
pop
xor
test
mov
leave
push
push
cmp
arpl
call
jge
sbbb
jo
shll
mov
inc
add
dec
fxch
inc
xor
pop
sub
jb
mov
cmp
or
scas
pop
push
push
cmp
mov
movsb
push
loopne
push
xor
jae
or
pop
in
adc
lods
daa
mov
dec
cmp
jno
out
jl
sub
dec
dec
cs
mov
and
add
push
in
mov
test
fcoms
xchg
cs
lcall
add
pop
arpl
loope,pt
push
shrl
jo
cmp
push
xchg
outsb
mov
xchg
xchg
shlb
mov
ficomps
decl
rdpmc
jmp
push
lds
sub
testl
lds
push
sub
dec
stc
sahf
stos
repnz
test
jb
jg
adc
xchg
je
mov
sbb
and
les
iret
sbb
cmp
jle
xor
inc
leave
lret
sti
rorl
push
inc
scas
sbb
push
into
mov
js
aaa
repz
lret
in
add
stc
int
jecxz
pop
mov
dec
or
lods
ljmp
out
addr16
xor
lea
out
insl
or
and
loopne
pop
mov
shl
jb
add
stos
adc
fisubrs
lahf
pop
insb
xchg
aas
sbb
pop
mov
mov
push
cmpb
mov
in
orl
cs
dec
aad
pop
ficoms
cmc
xchg
leave
inc
dec
fsubrs
fldcw
mov
push
mov
sbb
movsl
pop
jnp
scas
add
cwtl
in
mov
out
out
or
mov
insl
xchg
jmp
mov
pop
hlt
stc
pop
inc
pop
mov
xchg
add
aas
sbb
add
or
jno
fcomp
mov
std
out
sub
bound
mov
cwtl
adc
sbb
fcmovnb
fidivrl
mov
mov
lock
or
idivb
fwait
lds
fldt
and
insl
add
scas
dec
adc
pop
cmpsl
mov
and
or
push
cmp
push
mov
sti
mov
pop
lret
fisttpll
pop
jns
rclb
je
mov
add
lods
xor
nop
leave
push
fldl
pop
clc
in
push
fists
stos
mov
xchg
lods
ds
pop
out
in
pop
dec
xchg
ljmp
shrd
pushf
add
rcrl
xor
xchg
icebp
jecxz
jmp
jno
xchg
sbb
shl
test
push
stos
fdivrl
push
jge
sbb
loope
push
add
out
jmp
arpl
or
leave
xor
in
xor
jo
aad
mov
mov
dec
xor
dec
add
enter
lock
insb
bound
add
pop
jne
push
bound
and
xlat
bound
test
jns
dec
and
sbb
mov
out
bswap
sub
repnz
adc
mov
hlt
ret
mov
ret
jle
jge
in
push
and
setnp
pusha
rcrb
jmp
nop
add
and
rclb
or
popf
out
imul
push
repnz
stos
daa
push
ds
cmp
jnp
adc
scas
in
add
adc
adc
movsb
dec
jge
roll
sti
pop
dec
cli
pop
inc
push
pop
adc
incl
or
fsts
adc
inc
clc
in
xchg
out
sbb
pop
out
imul
jno
mov
cmp
mov
in
iret
mov
hlt
jno
cmp
fcomps
jbe
lret
mov
in
daa
aaa
inc
fwait
inc
or
sarl
jno
int3
cs
loopne
pop
into
pop
push
lcall
jo
mov
ja
cmp
out
ja
mov
push
sub
cmpsb
adc
in
div
arpl
adc
frstor
mov
mov
cmpsl
push
fnsave
cmp
jl
lret
mov
xchg
jmp
sub
mov
push
mov
mov
pop
inc
ljmp
pop
sbb
pushf
pop
mov
mov
loope
cmp
sub
xchg
pop
cmp
jle
outsb
push
decb
rorb
movsb
mov
jbe
pop
sbb
or
xor
sub
sub
and
lcall
inc
gs
sahf
dec
imul
popa
fnstsw
jbe
mov
dec
scas
mov
xor
xchg
and
pop
cmp
cmp
xchg
notl
pop
lret
fcmovb
jecxz
pop
mov
xchg
into
jb
div
push
jle
xor
xchg
sub
sbbb
fs
notb
mov
inc
data16
lods
rcll
insb
out
popa
jns
rcr
jo
iret
jecxz
cmp
test
cli
cmp
or
loopne
or
pop
lock
adc
add
imul
loope
xchg
add
cmp
push
aad
loope
cld
mov
out
daa
or
xor
and
aas
int
nop
in
aas
dec
push
add
inc
pop
clc
hlt
fldenv
inc
les
repz
sti
inc
lea
bound
xchg
fldt
pop
js
pop
mov
test
pop
jmp
jnp
pop
xchg
das
jl
out
adc
aaa
xchg
aas
mov
sub
dec
leave
ss
je
jle
jecxz
sub
std
mov
cwtl
mov
pop
mov
mov
mov
imul
sar
fcomi
repnz
mov
lea
lock
das
sub
xchg
mov
rcrb
adc
sub
dec
es
in
insl
jmp
test
push
mov
pop
mov
in
mov
jl
int3
lret
jne
hlt
mov
pop
add
js
les
cwtl
jbe
shrb
pop
jle
xorb
aam
gs
mov
sti
push
push
jnp
cld
sar
daa
jmp
xchg
rcll
ljmp
test
mov
dec
sbb
xor
imul
lock
sbb
add
add
pop
mov
sbb
leave
inc
mov
test
xchg
push
pop
dec
sbb
lods
xor
sahf
stos
lret
xor
push
and
mov
add
test
or
jb
xor
dec
jae
mov
mov
ffree
mov
pop
nop
xchg
ja
fdivrl
inc
das
jg
scas
fwait
pushf
xchg
mov
jne
inc
and
mov
mov
stc
jns
psubusb
test
jno
fidivs
pop
sub
in
popa
int
pshufw
cmp
daa
imul
outsb
jmp
add
cmp
dec
add
jg
pusha
xchg
mov
mov
xchg
pop
nop
mov
push
in
test
adc
xchg
test
stos
lcall
insb
movsb
fs
mov
loope
dec
aaa
in
arpl
and
ret
ret
jae
inc
bound
jl
sub
push
or
push
or
xchg
push
xchg
mov
aam
imul
lds
das
push
sarb
dec
repnz
adc
leave
hlt
mov
lret
in
iret
jge
test
and
add
cwtl
or
decb
int3
sbb
add
jge
pop
xor
shll
cmp
cs
shrb
in
fisubs
lret
enter
daa
scas
pop
or
fisubl
jno
stos
out
adc
xchg
dec
sub
rcll
arpl
lahf
cmpsl
lret
xchg
pop
test
outsb
andb
jns
pop
mov
pop
pop
aas
jp
js
sub
pop
loope
jno
push
pushf
es
inc
pop
sub
mov
xchg
jno
outsb
xorl
inc
cmp
sbb
pop
add
adc
add
lret
ss
xor
sub
sub
xchg
into
lcall
cld
fdivrl
dec
sub
mov
sahf
icebp
xlat
sub
and
jg
fldl
mov
sahf
xchg
mov
fsubrp
and
pop
in
lods
push
pop
fdiv
push
not
sti
addr16
popa
sarl
mov
lcall
push
jno
cmc
in
sbb
in
cmc
inc
outsl
outsl
data16
adc
stc
cmp
sub
outsb
lds
push
dec
push
lods
mov
dec
stos
out
fbld
cli
push
push
mov
cmpsb
pop
out
cmp
in
push
lods
add
gs
leave
loopne
into
icebp
pop
cvtps2pi
cmpsl
jl
imul
lods
ficoml
test
imul
rcrb
inc
mov
pop
push
xor
loope
pop
cs
dec
xchg
aad
sahf
arpl
mov
es
outsb
dec
or
lcall
repz
inc
stos
arpl
lea
mov
xchg
xchg
push
and
pushf
dec
popa
lods
jmp
add
pop
cmp
inc
insl
ret
cmp
jle
aas
pop
mov
jb
mov
inc
add
je
push
lods
jecxz
mov
mov
xor
push
aas
mov
inc
dec
mov
addb
pop
sbb
pop
iret
dec
mov
gs
lret
xchg
lock
ret
stos
pop
mov
mov
movsl
and
lods
sarl
loop
aam
movsb
insl
shr
sbb
stc
add
mov
mov
mov
mov
data16
daa
mov
mov
mov
sti
bound
ja
lods
aam
mov
ret
inc
mov
adc
push
xor
clc
bound
cmp
nop
leave
cwtl
popa
fwait
mov
outsl
mov
mov
test
push
mull
packssdw
cmpsl
cltd
or
test
adc
int3
pop
jle
mov
mov
xchg
jbe
sbb
aaa
rcrl
sti
and
ret
jmp
dec
add
xor
pop
fwait
test
ds
or
lcall
mov
shrb
ja
mov
mov
or
xchg
rcrb
xchg
stos
jne
lcall
fimuls
jae
pop
js
in
jmp
lahf
out
ret
sub
pusha
or
sbb
data16
cmp
mov
mov
push
das
in
popf
shll
movsb
fistps
int3
lods
jmp
es
addl
push
cmpsl
sbb
popf
cmp
cmp
jo
dec
stos
or
lea
jnp
pop
xrstor
lods
dec
adc
inc
in
iret
bound
mov
imull
jbe
insl
add
inc
sub
cmp
inc
push
pop
fisubrl
and
sbb
and
xchg
jo
fimuls
xor
rcl
cmpsb
mov
xchg
mov
jnp
and
pop
dec
int3
arpl
sbb
mov
outsl
sbb
sbb
or
cmpsb
add
and
add
int3
pop
mov
pop
push
pusha
enter
sarb
scas
not
mov
bound
cmp
jnp
movsb
idivb
mov
and
mov
lds
loopne
push
jl
daa
scas
jl
cmp
inc
or
in
pushf
jmp
push
and
dec
lahf
xor
lahf
test
cmp
or
or
xor
ja
test
js
lahf
pop
and
insl
loope
je
sub
pop
sarl
inc
sub
in
jle
sbb
loop
inc
fdivrs
pushf
and
inc
add
out
xor
pusha
incl
into
mov
int
mov
cmp
push
add
cmp
sub
stc
sahf
xchg
cmp
cmpb
jg
dec
and
stc
mov
out
and
daa
xchg
cmp
scas
jmp
sbb
mov
mov
subb
mov
into
cmp
outsb
xor
out
outsl
dec
cmp
cmpsb
push
stc
repnz
adc
mov
lods
lahf
ret
add
loope
cli
cmp
push
xor
mov
or
pusha
xchg
shlb
gs
mov
cmpsl
rcrl
pop
lods
adc
sub
adc
jmp
add
xchg
mov
and
scas
add
xlat
packssdw
mov
fmuls
nop
movsb
into
cs
cmc
fcom
int
adcb
in
inc
adc
jp
jb
cltd
repz
pop
scas
aas
in
inc
call
adc
lret
rorb
pushf
cmc
sbb
jmp
dec
and
jbe
inc
hlt
jbe
inc
jecxz
push
aas
cli
pop
adc
push
pop
dec
mov
push
je
adc
testb
std
fcompl
mov
lahf
mov
adcl
outsl
push
mov
sub
ds
das
out
xor
inc
ret
cmp
push
ror
leave
fbld
push
lds
insl
mov
in
cmpsl
lods
sahf
push
mov
xchg
fcomps
cmp
lret
push
push
and
insl
sahf
test
pop
dec
dec
ror
pushf
jp
outsb
sbb
aam
dec
add
add
push
fnstcw
and
jns
gs
popf
iret
in
xchg
aas
je
ljmp
and
loope
adc
xor
bswap
add
add
xchg
pop
test
sub
iret
inc
push
dec
push
jo
test
insl
or
adc
pop
dec
pop
add
stos
test
les
lret
inc
and
mov
sbb
mov
movsb
xor
or
mov
cmp
mov
flds
ja
pop
ja
fidivl
inc
pop
inc
das
or
inc
fwait
cli
jne
dec
stos
fsubr
jne
push
jmp
jne
pop
out
mov
jns
test
in
das
jg
jl
pop
out
lret
adc
or
insl
into
addr16
adc
call
clc
outsb
mov
test
jle
sub
in
jbe
pusha
xor
rclb
arpl
cmpsl
xchg
icebp
mov
sbb
push
or
int3
lds
push
scas
test
stos
xor
and
jmp
jnp
push
test
push
icebp
adc
adc
xchg
pop
iret
shll
pop
in
push
pop
inc
js
stc
jae
or
inc
xor
or
dec
mov
movsl
fisubl
mov
imul
sbb
inc
je
test
repnz
xchg
jmp
mov
in
out
repnz
hlt
push
insb
mov
jp
jbe
fidivs
sbb
aaa
jg
push
or
xchg
incb
arpl
sbb
mov
inc
xchg
loop
cmp
in
or
scas
aad
pushf
and
aad
cmp
fwait
push
jo
cmpsb
sbb
in
lods
sub
enter
daa
lods
and
mov
adc
dec
or
sub
cld
sahf
lock
in
repnz
cmp
daa
test
add
mov
cmp
jg
lea
pop
pop
pop
mov
loope
xchg
sub
std
and
hlt
mov
mov
pop
test
flds
fistpl
add
or
jne
shrl
mov
or
lcall
dec
insl
shrb
mov
test
push
xchg
adcb
jg
mov
pop
mov
shlb
mov
cmp
push
nop
testl
and
mov
ds
sbb
push
gs
jae
mov
mov
adc
loop
mov
mov
test
adc
subl
in
cmp
mov
cli
insb
lods
out
xor
cmp
sti
lods
or
mov
repz
adc
loopne
xchg
jb
dec
mov
imul
xsha256
cmpsb
xchg
dec
lcall
ljmp
sub
loop
mov
das
outsl
push
sti
aas
push
hlt
rorb
nop
jbe
mov
inc
xchg
nop
loop
or
les
pop
repz
mov
mov
outsl
lea
push
call
xchg
das
jbe
mov
lock
mov
pop
sbb
mov
inc
jnp
adc
decb
aas
cltd
or
add
mov
je
pop
push
jecxz
mov
testb
or
pop
push
sti
mov
leave
incl
in
fstpt
out
xor
mov
inc
jae
lock
call
add
testl
rcll
xor
fisubl
insl
mov
bound
mov
imul
xor
je
pop
mov
cmc
cmp
int
sbbl
pop
cmpsl
jecxz
pushf
dec
int3
frstor
pop
loope
jle
pop
ljmp
lods
ljmp
out
js
sub
or
cld
lar
dec
and
mov
gs
test
ds
aas
mov
sbb
clc
and
dec
push
pop
stos
test
stos
cwtl
jmp
addl
pusha
adc
xor
cltd
or
ret
push
mov
jl
cld
mov
dec
fdivrl
scas
pop
inc
dec
int
cmp
stos
pop
or
or
fwait
sub
jnp
push
je
mov
test
aas
bound
xor
call
lcall
or
push
je
or
sub
adcb
test
jle
jle
lret
cli
addr16
mov
pusha
shlb
andb
mov
jmp
mov
jae
push
sub
ljmp
out
sbb
and
insb
in
xchg
jnp
scas
push
scas
jno
mov
fistps
iret
and
test
and
pusha
inc
cmp
jae
out
in
inc
xor
push
push
push
mov
ficoml
adc
idivb
ljmp
insb
cmp
mov
test
mov
cmp
and
popf
fisubs
arpl
aad
push
adc
outsl
aaa
cmpsb
lcall
arpl
fisubrl
pop
adc
cmp
jo
dec
scas
mov
mov
cmp
jp
or
push
mov
mov
aam
cld
jns
daa
lods
dec
cmp
adc
jbe
xchg
xchg
clc
dec
jp
xchg
outsb
add
and
sbb
test
iret
inc
xor
std
jp
pop
mov
cmp
pop
sahf
cwtl
ds
push
nop
loope
ds
sub
jae
cmp
mov
adc
cli
int3
pop
jp
add
daa
sbb
push
add
xchg
xor
add
aam
jns
mov
aas
push
pop
adc
outsl
lcall
rcr
sbb
sahf
fcmovbe
jmp
sarb
jb
mov
sub
mov
int
mov
sahf
pop
mov
js
and
ficompl
push
and
xor
in
fmulp
inc
aaa
ret
sarl
lods
mov
fildll
cmp
xor
popl
loop
or
seta
adc
in
lea
mov
lods
insl
and
pop
fwait
in
out
jno
cli
lahf
add
dec
cmp
and
push
cld
shlb
push
das
loopne
xchg
test
mov
and
xchg
adc
je
xchg
push
jg
sbb
and
fwait
popa
sub
mov
in
lcall
and
mov
pop
push
nop
push
sub
inc
cmpsl
addb
mov
repz
mov
lea
gs
adc
pop
pop
outsb
xor
test
jmp
xor
pop
and
cmpsl
inc
sbb
test
cmp
push
jb
loope
dec
movsl
inc
in
je
mull
jecxz
adc
sub
mov
pushf
xor
lds
dec
shr
jmp
mov
sub
or
cmp
hlt
xor
das
movsb
xor
lahf
mov
push
std
shll
es
jbe
insl
xchg
pop
cmpsl
stos
lock
or
gs
inc
xchg
jp
sub
jne
xor
mov
jnp
mov
in
popf
pop
adc
and
je
xchg
sub
aam
mov
ret
in
xlat
push
pop
lret
sub
adc
xchg
mov
leave
dec
popa
loopne
out
lods
push
pop
mov
fisttpl
inc
push
call
stc
clc
add
mov
out
imul
mov
push
out
dec
in
pop
movsl
test
movsb
inc
xchg
push
sbb
pop
shll
mov
jae
lods
push
fildl
add
repz
incl
divl
push
sbb
or
sbb
mov
rolb
add
ja
jae
dec
sar
inc
mov
add
xchg
pop
fs
dec
jo
mov
testl
jnp
add
mov
jns
mov
aam
adc
sbb
and
or
mov
arpl
mov
in
jp
jle
mov
inc
pusha
imul
cmp
xchg
or
rcll
lods
push
push
lock
popf
mov
xlat
mov
sub
xor
and
xchg
push
insb
push
mov
shrb
jg
aas
adc
cltd
push
ret
leave
pop
pop
sar
mov
jae
adc
inc
add
data16
inc
shr
in
movl
jns
mov
inc
jmp
lds
sub
es
mov
mov
sub
loopne
lods
hlt
call
cmp
jbe
test
stos
mov
rorb
aaa
std
xor
add
pop
rcrl
fld
push
or
hlt
xor
mov
mov
sbb
cmp
or
movsb
xchg
mov
push
dec
xchg
cmpsb
push
mov
mov
push
daa
stos
testl
jno
xlat
popf
jl
push
sbb
mov
movsl
mov
and
sub
lahf
and
or
lcall
shlb
pop
fldt
js
insl
pop
pop
fstl
push
repnz
loope
fcos
sub
mov
or
adc
rcl
xchg
mov
daa
adc
pop
sbb
and
push
mov
push
xlat
ljmp
ljmp
pop
xchg
lods
imul
sub
push
sahf
jge
push
test
addl
add
xchg
mov
jbe
fwait
push
mull
iret
lods
mov
popa
dec
stos
cmp
loopne
cmp
int3
lcall
sub
dec
sbb
fmul
loope
adc
add
lds
pop
jmp
outsl
jmp
shl
cmpsl
adc
pop
mov
fs
pop
cmp
mov
jp
mov
lahf
cli
rclb
jg
add
mov
and
aaa
sub
loopne
test
mov
repz
dec
mov
add
orb
xlat
pop
sbb
pusha
inc
xor
int3
stc
aas
sub
iret
sahf
mov
add
repz
xchg
adcb
pop
lock
mov
adcb
repz
mov
xchg
lea
xchg
lret
jns
xchg
call
adc
lds
stos
pushf
divb
cmp
pop
movb
inc
xor
loop
xlat
jp
jb
adc
dec
sbb
je
out
jecxz
mov
notb
notl
cwtl
das
movsl
fnstenv
jecxz
sbbl
fcmovnu
out
mov
das
int3
mov
stos
scas
lock
xchg
mov
mov
gs
lds
into
nop
es
imul
sbb
cmpsl
stos
pop
sbb
aas
and
cld
push
dec
mov
mov
xor
mov
xor
rolb
or
push
inc
adc
ret
jl
scas
push
and
vpmaxsw
out
clc
dec
jl
xchg
cld
in
ljmp
sub
rclb
out
ds
xchg
xchg
repz
mov
out
jns
fildll
aam
jbe
cmc
mov
sub
sbb
cmpsb
push
cmp
test
rcrb
cs
cli
fnstcw
stos
jbe
in
dec
or
add
sbb
lcall
push
and
xor
and
mov
dec
xlat
mov
mov
arpl
mov
adc
jmp
or
aam
fwait
xchg
mov
push
push
dec
jne
mov
pusha
jne
pop
call
bound
cmpb
imul
jp
or
out
in
pushf
es
jg
mov
pop
sbb
jle
jo
in
pop
loope
push
fwait
and
sbb
arpl
jo
ss
push
aaa
dec
addl
push
mov
and
jge
xor
fimull
test
fisttpll
pop
jnp
push
cltd
scas
aaa
sbb
jns
lcall
ret
cmc
pop
xchg
insl
popf
inc
cltd
aas
xchg
jae
jle
inc
cmp
or
push
push
leave
in
fidivrl
sbb
dec
mov
cmpsl
ficoms
pusha
xchg
insb
rolb
mov
fidivrs
leave
push
cs
xor
mov
xor
jbe
movsl
es
lea
into
aaa
mov
mov
ljmp
daa
sub
in
jnp
xor
std
or
scas
jb
inc
and
sub
movsb
and
aam
mov
pop
mov
daa
stos
sub
jno
cld
cli
jl
out
ss
pop
fwait
cwtl
ds
out
movsl
add
lahf
inc
or
mov
ret
cmp
push
adc
inc
mov
andl
add
lcall
mov
sub
fnstcw
outsb
jo
cmp
cmp
pushf
push
jge
sub
jle
xorb
cld
ja
xor
adc
fidivrl
fmulp
xchg
sub
or
adc
dec
lcall
js
jmp
mov
into
ljmp
out
pop
repnz
inc
sbb
out
xchg
and
les
movsb
call
enter
mov
lret
shrl
mov
sbb
les
cmc
enter
mov
mov
lret
loop
js
stc
into
cld
int3
fs
out
inc
data16
sbb
push
mov
out
adc
add
fiaddl
or
adc
daa
popa
and
sarl
adc
in
imul
add
movsb
js
insb
xchg
popf
cmp
fsubl
xchg
push
js
push
sub
sti
dec
jmp
cs
nop
xor
mov
sub
cld
test
lods
addl
mov
dec
adc
js
aas
adc
jg
sbb
ljmp
es
pop
imul
inc
dec
push
inc
aas
jbe
pushl
je
dec
xchg
mov
xor
inc
popf
cld
notb
std
js
mov
mov
mov
int3
xor
jno
fisttpl
cwtl
push
mov
les
lock
or
mov
sbb
pop
and
sub
roll
jg
arpl
in
push
in
dec
lock
inc
cmpsl
test
adc
out
fistl
lret
jle
aad
mov
cwtl
pop
push
sub
sbb
aam
adc
or
jae
adc
mov
ljmp
lods
sub
xchg
out
mov
push
ret
mov
addl
shrb
sbb
test
lret
fldt
test
sub
push
pusha
int
loope
inc
rcll
xchg
adc
repnz
add
ss
adc
cmp
les
xor
jp
mov
inc
and
mov
jns
push
ja
mov
inc
mov
negb
dec
ss
mov
fld
out
cmp
jae
cmp
mov
stos
pop
or
ljmp
out
jo
sub
iret
jne
or
pop
mov
add
cmpl
sub
sbb
dec
xor
cmp
xchg
jmp
sbb
jmp
push
jbe
arpl
mov
decb
and
cmpsl
mov
jnp
jo
scas
lcall
adc
insl
iret
cmp
pop
clc
pop
leave
mov
ljmp
pop
stos
or
ss
test
sub
and
notl
leave
imul
fidivrs
adc
rcrb
inc
aaa
repnz
ror
into
add
hlt
jle
xor
or
jbe
push
jge
test
dec
xorl
das
jb
mov
mov
pop
mov
or
fisubrl
jo
mov
push
das
shlb
cmpb
lock
movsb
lods
or
push
lods
mov
cmpsb
and
pop
in
dec
in
enter
daa
test
mov
jno
inc
jl
pop
decb
jno
xlat
or
inc
and
movsb
lahf
popa
mov
push
test
test
xor
or
sahf
dec
inc
or
pop
sub
aaa
js
xchg
pop
pop
pop
sub
aad
loope
jl
sub
lret
ret
cmp
div
adc
mov
cmp
sbb
out
xchg
xor
jb
push
pop
int
bound
cmc
mov
xchg
mov
lcall
lcall
push
xchg
sahf
ret
imul
dec
jg
lahf
jmp
cmpsb
shlb
xor
push
and
pop
inc
ss
test
push
repz
dec
and
pop
ror
add
and
fsubl
mov
xor
outsl
test
jle
stc
test
push
adc
jmp
lods
and
mov
out
cmpsl
cli
cmp
xor
mov
add
adc
gs
loopne
push
inc
pop
leave
jno
adc
int
adc
sbb
add
push
push
xchg
push
in
sbb
mov
mov
mov
fistl
add
sti
cmpsb
outsb
cs
add
nop
loop
iret
dec
in
pop
inc
loopne
mov
in
sbb
test
pop
inc
mov
out
call
nop
mov
pop
xchg
pushf
dec
sbb
pop
or
xchg
aam
inc
push
bound
adc
or
je
aam
push
leave
lods
notb
dec
cwtl
movsl
insb
xchg
mov
xchg
jg
mov
adc
fstpt
or
mov
dec
aaa
mov
jb
lock
in
mov
rcl
xchg
and
inc
pop
rcll
andl
cmp
in
jmp
cmp
mov
lds
jno
test
inc
test
push
jp
mov
jno
jno
in
leave
test
inc
xchg
adc
adc
loope
push
test
sbb
les
or
jp
jle
inc
push
in
and
jae
mov
add
lods
xchg
and
push
jns
mov
movsl
or
add
cmpsl
call
mov
stos
jb
fisubrs
pop
dec
and
scas
test
dec
addr16
out
sbb
fstpl
pop
stos
push
xchg
stos
push
xchg
push
mov
sbb
add
faddl
mov
or
fs
push
daa
xor
mov
outsl
mov
xor
dec
ja
into
mov
adc
add
jmp
fwait
in
push
dec
sbb
jne
xlat
movsb
mov
addr16
sbb
push
iret
hlt
movsb
jns
pusha
shl
jne
xchg
pop
fs
cmpsb
mov
jb
lret
or
sbb
xchg
mov
and
push
call
adc
mov
in
popa
pusha
cmp
fistps
js
addb
xchg
call
icebp
je
cmp
adc
repz
ljmp
dec
andl
out
insb
xchg
mov
jnp
mov
scas
std
icebp
imul
cmp
iret
pushf
sub
ret
add
mov
inc
scas
aad
jae
sbb
push
or
mov
into
inc
push
push
sbb
jne
xchg
push
cmp
imul
ficomps
xchg
popa
shlb
mov
test
mov
leave
out
aaa
arpl
fmuls
mov
dec
sbb
jnp
aaa
cmp
fwait
or
xchg
sbb
xchg
mov
paddd
mov
jae
lds
sub
and
in
aaa
cmp
pop
jl
cmp
cmpsb
push
sti
push
adc
in
das
dec
and
call
push
xchg
aas
xchg
jno
mov
jl
pushf
and
or
ds
mov
movsl
adc
and
xchg
inc
lahf
orb
push
jl
test
sti
xchg
repnz
cmc
jno
or
cmp
rcrb
bound
pop
lcall
loope
subl
nop
xor
pop
test
outsb
ss
pop
adc
jmpw
aam
lods
orb
popa
sbb
or
add
mov
mov
int
push
rolb
adc
sbbl
inc
sbb
or
sub
sahf
data16
fsubr
or
fisubs
adc
stc
mov
mov
fstp
and
mov
push
cmp
adc
cwtl
lret
daa
rcrl
out
sbb
arpl
into
mov
push
xchg
dec
xor
sti
outsl
mov
sar
cmp
xor
cmc
adc
add
call
mov
mov
sub
xchg
pop
cli
imul
xchg
pop
or
sar
mov
sti
sub
or
pop
call
jp
imul
xor
cmpsb
lods
adc
mov
mov
xlat
mov
sub
mov
inc
lret
ss
stos
es
aad
inc
mov
mov
repz
repz
or
sbb
mov
jnp
pusha
jo
mov
mov
call
subps
adc
mov
pushf
test
dec
pop
scas
sub
inc
push
loopne
inc
test
xchg
jb
pop
dec
adcl
repnz
test
cwtl
pusha
scas
icebp
mov
out
sahf
mov
in
dec
jl
push
fldt
mov
insb
out
lock
cs
and
andb
mov
and
stos
psrlq
dec
add
mov
dec
out
or
fmuls
mov
cld
aam
dec
lret
in
ret
mov
mov
nop
das
jae
sarb
sub
xor
ret
sub
out
imul
arpl
popf
xchg
mov
idivl
cmp
test
xor
inc
xchg
imul
and
add
in
add
mov
out
test
iret
lret
sbb
mov
lds
dec
repz
sbb
pop
sar
xlat
scas
pop
add
stos
inc
push
push
cmp
jecxz
mov
adc
jnp
mov
mov
push
shlb
push
add
iret
mov
das
out
mov
out
xchg
mov
imul
inc
out
rorb
mov
fwait
adc
jmp
jne
ljmp
idivl
jns
inc
jge
add
data16
jnp
sub
lds
addr16
loopne
jp
or
jg
fisttpl
mov
shl
cmp
and
fbstp
and
push
cli
iret
xchg
mov
xlat
sub
enter
pop
popf
dec
aad
mov
sub
jl
xor
or
and
insb
cld
push
push
jnp
jo
scas
pusha
dec
cmp
mov
adc
ror
sti
mov
inc
pop
aaa
dec
sti
inc
mov
push
fiadds
addl
sub
rolb
sub
xchg
scas
das
xchg
jne
rcrb
cmc
fiadds
jae
lds
cmc
rclb
xor
leavew
mov
push
xchg
arpl
ljmp
lcall
aaa
stc
lea
add
cld
dec
int3
jno
add
push
xchg
add
xor
push
les
wbinvd
mov
cmp
mov
sub
cmpsb
sub
in
push
lcall
cmpsl
rorl
jno
inc
mov
push
dec
dec
movsl
push
ds
test
and
xchg
cmpsb
push
sub
dec
test
push
ret
inc
icebp
pop
int3
lods
xor
mov
fnstenv
push
xchg
aaa
sub
outsb
cltd
scas
scas
adc
inc
xor
xor
sbbb
dec
repz
sbb
fdivrl
ror
mov
hlt
aam
and
popa
push
sub
fldlg2
sub
mov
test
cmc
cmp
aaa
jg
stos
pop
mov
xor
mov
or
and
mov
pop
cmp
int3
rcrb
jns
lret
stos
shll
pop
mov
sbb
nop
into
insl
pusha
dec
cmc
sbb
and
outsl
addr16
loop
and
pushf
fs
fsts
imul
lock
les
xchg
cli
sahf
dec
push
xor
jg
xchg
inc
sbb
loope
adc
lds
fchs
movsb
ret
mov
ja
aas
xchg
cwtl
imul
fadds
xor
ret
loope
mov
xlat
enter
in
sbb
mov
mov
sub
pop
push
adc
repnz
cmp
cwtl
and
cmpl
cmp
xchg
les
enter
repz
call
mov
adc
dec
mov
rclb
inc
movsl
dec
jbe
mov
test
jb
les
jg
je
lock
outsb
in
mov
std
insl
xchg
negb
fmul
push
mov
fstl
addr16
fistl
cmp
out
leave
insl
lock
rcr
xor
mov
or
shl
aaa
andl
sahf
push
insl
or
lods
dec
loope
popa
cmpsl
cmpsb
inc
xor
icebp
jae
or
decl
lret
pop
add
and
jmp
cmp
scas
cmp
xchg
loope
sub
jae
aam
stc
ret
mov
pop
jle
mov
cmpsl
clc
cmp
adc
sub
clc
lods
insb
cmpsb
js
in
sub
lret
xchg
mov
cs
das
pop
push
packsswb
add
cli
mov
test
cmp
dec
out
mov
pop
xchg
adc
cli
lock
rcll
outsb
pop
lods
nop
mov
xor
cmp
fldt
add
xchg
lcall
adc
xor
dec
test
imulb
in
jge
mov
push
fs
mov
stos
adc
ja
dec
and
test
inc
or
push
push
fwait
inc
push
repnz
fists
jne
popa
aad
repnz
mov
iret
jmp
in
dec
call
lods
scas
fldt
ror
addr16
inc
aas
jp
inc
repz
push
inc
mov
sbb
jle
int3
pop
in
push
xlat
pusha
jb
xor
xchg
sub
dec
xchg
jle
dec
cmpl
mov
jecxz
mov
push
mov
cmp
lcall
adc
ds
loop
out
adc
clc
iret
pop
dec
es
in
pop
outsb
mov
inc
lds
push
inc
inc
inc
pushf
or
cmpsl
fnstsw
dec
jae
fiaddl
xchg
xchg
int3
mov
sbb
pop
shrl
push
mov
mov
dec
test
lods
and
and
dec
repnz
inc
hlt
pop
jo
arpl
inc
pop
jbe
xchg
push
jge
stc
negb
jns
xorl
scas
sti
or
test
pop
je
pop
das
or
push
js
push
xor
imul
and
popa
lock
inc
loop
cltd
push
inc
cmpsb
lods
push
jp
std
lret
ficoms
daa
cmpsb
adc
cmp
testl
lea
inc
inc
movsl
and
jne
cmp
xchg
lahf
mov
out
stos
mov
push
xchg
imul
outsb
ss
lods
add
sahf
push
js
add
pop
sbb
jle
out
and
pop
std
mov
mov
insl
and
negl
adc
sbb
jge
xchg
mov
xorb
sbb
add
dec
xor
push
out
xor
and
mov
pop
push
sbb
lcall
pop
faddl
jns
sahf
lods
lea
adcb
jg
ss
lahf
cmpsl
out
mov
mov
and
leave
dec
ss
mov
mov
fadds
mov
xchg
leave
out
mov
xchg
jp
pop
mov
mov
in
pusha
xor
loopne
outsl
inc
imul
stc
stos
adc
push
push
xchg
adc
and
data16
push
rep
xlat
and
mov
xorl
xor
arpl
call
and
mov
es
fistl
adc
mov
adc
sbb
mov
mov
inc
cli
cmp
lea
pop
insl
xchg
sbb
xchg
sti
or
jne,pn
fs
mov
dec
or
inc
inc
sbb
or
repz
arpl
lea
pop
call
or
push
and
js
sub
jmp
ds
cmc
mov
inc
sub
lods
inc
mov
push
pushf
jb
or
je
test
in
mulb
inc
std
adc
fstpl
xchg
xor
orl
fcomp
movb
mov
xchg
mov
mov
lock
mov
ret
mov
xor
jp
roll
bound
outsl
imul
cmpsl
movsl
inc
aaa
mov
dec
pop
cmpsl
cld
sub
mov
movsl
scas
imul
inc
repnz
mov
es
movsl
aam
adc
add
pop
int
mov
cs
jne
xchg
xchg
aaa
sahf
out
fwait
je
push
push
lods
xlat
std
cmpsl
mov
sub
mov
push
or
cld
cmpps
cltd
mull
test
in
xchg
pop
push
dec
push
jnp
test
sub
xchg
test
lods
in
shrl
popf
and
push
jle
xor
add
sbb
in
or
xor
daa
pop
mov
push
or
mov
gs
scas
ja
int
dec
jb
xor
or
lds
dec
ret
jne
cmp
mov
xchg
out
mov
arpl
or
in
xor
xchg
hlt
pop
inc
out
push
imull
mov
and
jp
sub
mov
test
mov
inc
in
dec
out
or
shll
sbb
xchg
dec
adc
orl
cld
push
sbbb
fwait
aad
mov
cmpsl
mov
stos
sbb
test
mov
jg
scas
xlat
test
adc
roll
jecxz
ret
sub
movsl
imul
sub
jae
mov
or
and
mov
stc
ds
xchg
and
imul
out
fiadds
test
ror
and
jge
leave
stos
mov
hlt
stos
cs
arpl
pop
sbb
out
sbb
sbb
ja
jmp
or
int3
inc
pop
jge
pop
sub
pop
into
sbb
jo
dec
xor
lea
cmp
movsb
flds
je
call
in
in
pop
enter
daa
movsl
jno
rorb
rclb
jae
ds
pop
movsl
sub
lea
aam
test
mov
mov
aam
inc
setno
pop
lds
or
push
cltd
dec
push
or
jne
test
or
outsb
pop
xor
pusha
shl
incl
addb
sbb
push
test
push
jmp
ror
sub
scas
mov
icebp
adc
fsubrl
mov
dec
test
jnp
das
les
mov
add
mov
ret
pop
pop
cmp
sub
ss
movsl
cmp
inc
fmulp
testl
jmp
pusha
filds
sbb
and
cmc
stos
mov
xor
sti
outsl
and
pushf
cmp
fsubl
mov
lods
mov
lea
test
cmp
or
pop
cmp
push
jbe
mov
sahf
dec
gs
rclb
loopne
enter
lcall
aas
jns
adc
sbb
add
jbe
arpl
sbb
ret
xlat
inc
add
sub
jne
mov
xchg
sbb
mov
push
fdivs
in
dec
aas
cmpsl
dec
imul
add
aad
cmp
int
jno
leave
pop
mov
call
mov
pop
push
push
jb
iret
xor
pushf
clc
shll
je
sbb
xor
pop
xchg
xchg
mov
jb
jo
dec
out
xorl
mov
std
mov
jmp
mov
pop
sub
mov
addl
cmc
test
mov
mov
mov
lock
scas
das
mov
bound
and
loopne
rorl
cmpsl
in
fcomps
push
dec
xlat
sub
int
mov
and
pusha
cld
push
ret
cmp
pop
mov
lods
xor
and
pop
in
push
dec
sarb
leave
pop
sub
test
ret
pop
ficoms
push
cmp
clc
mov
pusha
xchg
jbe
stos
ljmp
std
lods
inc
sub
out
nop
bswap
xchg
ds
iret
mov
js
push
sbb
cs
cmp
add
mov
fwait
pop
xchg
sub
dec
roll
outsl
pop
add
stos
adc
mov
add
das
in
xor
mov
mov
xchg
sub
pop
and
stos
ja
aad
dec
gs
aam
cwtl
or
dec
movsl
or
fbstp
xchg
sahf
bound
jnp
jns
lret
dec
in
outsb
xor
inc
xor
out
jno
sub
mov
in
add
fdivrl
int3
sub
add
mov
clc
push
jle
mov
in
stos
ret
divb
mov
mov
cmp
xchg
adc
xor
lcall
popf
ret
mov
out
and
addr16
and
movsl
jnp
lods
add
jo
test
mov
jle
ret
xor
lock
inc
fcomi
sbb
lea
dec
and
aaa
inc
mov
popf
notb
inc
dec
loopne
fisubrl
ret
sbb
mov
imul
pmaxub
sbb
idivb
pop
mov
shlb
leave
and
outsb
arpl
movsl
jbe
xchg
xchg
jge
mov
fnstenv
ss
or
or
pop
lea
add
and
loope
aam
pop
das
xor
lods
in
pop
and
cmpsl
popf
cmp
imul
cmpsb
mov
and
lret
fmuls
aam
cmp
movsb
and
or
sbb
cmc
dec
repnz
js
das
cli
mov
outsl
xchg
lahf
cld
inc
pop
push
mov
lds
daa
xchg
xchg
mull
adc
movsb
push
js
loope
pop
xchg
repnz
ficompl
mov
addr16
out
cmpsl
cmp
addr16
outsb
ret
adc
rolb
sbbb
sbb
jmp
add
sub
push
in
xchg
and
lock
pop
or
adc
xor
sbb
or
dec
test
popf
stc
orb
jg
pop
dec
mov
nop
mov
mov
sbb
cmp
nop
ss
fldenv
inc
testl
cli
pop
mov
sub
push
hlt
fcomip
jb
sub
lcall
cmpsb
cltd
stc
sbb
lock
imul
hlt
mov
lods
movsl
and
xor
sbb
adcl
aaa
pop
out
xor
loope
cmp
sbb
ljmp
test
push
filds
pop
fs
dec
adc
mov
and
xchg
es
mov
cmp
mov
xlat
test
push
sub
popa
mov
repnz
ja
data16
cs
repnz
mov
enter
aas
push
add
div
or
loopne
test
pushf
addr16
ret
add
pop
cmp
or
and
add
pushf
mov
bound
pop
cmp
inc
inc
cmp
je
icebp
mov
aas
xor
mov
or
and
je
test
pushf
mul
cltd
inc
std
bound
mov
jnp
or
sub
cmp
and
loop
das
inc
fdivs
int3
imull
pushf
lods
ljmp
jecxz
and
cltd
push
rcr
rorb
insl
mov
fnsave
mov
imul
cmpb
pop
adc
mov
or
push
rorb
push
sub
test
or
lock
gs
ja
std
inc
add
jmp
fwait
xchg
mov
push
ljmp
outsl
lods
lods
sub
mov
repz
xchg
test
jns
xorb
cmc
mov
test
hlt
xor
xor
inc
xchg
data16
dec
and
and
cltd
mov
jge
adc
sub
pop
int
pop
scas
xor
jmp
push
les
fadds
fdivrs
sar
inc
jecxz
out
stos
out
or
dec
xor
jne
mov
xlat
mov
mov
ja
popa
adc
inc
inc
mov
or
and
adc
xlat
mov
sbb
sub
jae
fbld
push
sbb
aas
out
in
std
nop
xchg
xchg
mov
xor
push
and
mov
push
add
jp
pop
popa
mov
xor
mov
notb
in
insb
fsubl
and
fcomip
jns
xchg
mov
jle
xchg
fbstp
cs
or
popf
jmp
pop
adc
lods
jp
xor
jle
fisubrs
jmp
mov
xor
mov
push
adc
sbb
ret
xor
sbb
or
jae
shl
inc
dec
inc
sub
sbb
fiaddl
pop
scas
ficompl
outsl
xchg
sar
scas
sbb
and
fimuls
jbe
in
mov
and
movsl
hlt
inc
cmpsl
icebp
arpl
or
in
jge
jno
sbb
sub
or
jle
dec
incl
pop
mov
push
lcall
in
adc
mov
or
ret
movsb
out
jne
push
xchg
cmpsb
ss
addr16
mov
mov
daa
mov
add
in
xor
cs
popa
mov
ds
xchg
jmp
lahf
sbb
repnz
jbe
xchg
test
repnz
mov
fsubs
adc
mov
mov
xchg
push
pop
push
sub
xlat
arpl
lret
outsb
and
mov
scas
add
subb
sbb
mov
xor
jg
push
out
adc
int
fcomip
sub
mov
xchg
xchg
sub
cmpl
andb
jg
icebp
outsl
mov
push
mov
push
inc
add
enter
in
cmp
mov
cwtl
ret
lret
or
mov
fisttpll
adc
stc
mov
cmc
cmp
shlb
xor
jmp
stc
iret
divl
fs
jl
mov
aam
lods
mov
movsb
mov
mov
mov
xor
mov
or
pusha
pop
gs
push
arpl
adc
ja
addl
mov
imul
add
xchg
xchg
jmp
sbb
xlat
les
sub
pop
sbb
pop
fistl
and
cs
add
adc
daa
in
les
adc
ffreep
jmp
dec
repz
iret
fwait
pop
lea
pop
call
mov
mov
stos
jo
dec
movsl
jmp
sbb
fisubs
inc
or
lea
iret
iret
xchg
jb
je
cmp
jecxz
gs
sub
sub
aam
xchg
mov
inc
adcl
sbb
push
fstps
mov
xchg
or
shl
daa
push
or
mov
xor
loope
es
cmpb
flds
cmpsl
mov
inc
icebp
iret
dec
in
cld
stos
mov
sbb
and
push
leave
pop
sub
enter
xor
ret
hlt
mov
push
cmp
cs
es
cli
xchg
hlt
outsl
ret
scas
or
enter
lret
out
push
pop
cli
xchg
int3
aad
push
fwait
jno
pandn
fstps
into
or
mov
adc
lock
cld
dec
mov
outsb
test
cmp
xchg
call
cmc
shll
mov
test
adc
inc
fstpl
call
xchg
or
cs
mov
sbb
pop
xchg
ret
or
jno
dec
dec
inc
loope
fiaddl
ja
jp
dec
imul
mov
pop
mov
bound
inc
jns
pop
lods
in
fildll
out
add
sub
lods
add
outsl
jp
es
and
stos
mov
mov
jle
imul
adc
je
pop
jmp
stos
test
cmpl
xchg
push
fwait
in
push
fs
mov
and
cli
or
push
jno
dec
push
das
push
decb
adc
pusha
iret
mov
push
pop
dec
out
inc
icebp
ja
jae
pop
repz
push
shll
or
xchg
pop
int
dec
pop
rcr
adc
sub
sbb
pop
imul
dec
fisubrs
dec
lds
push
rcrb
jo
sahf
pop
xlat
bnd
lret
mov
aaa
arpl
inc
popa
jbe
pusha
pop
jge
or
sbb
xorl
push
sbb
int3
or
inc
pop
jmp
das
push
add
add
aad
aam
push
sbb
inc
mov
mov
cmpb
pop
loope
cltd
jbe
enter
daa
mov
xor
jno
xor
jl
and
ds
aam
movsl
cmp
jp
lahf
cmp
push
dec
iret
adc
mov
nop
fwait
xor
pop
cmp
js
adc
push
xchg
mov
sub
xchg
movsl
cmp
ljmp
movsl
push
adc
mov
pop
push
sub
addb
pop
add
pop
add
out
sub
repnz
sub
scas
pop
or
push
push
ficomps
fldt
out
xchg
push
dec
pushf
addb
bound
call
int
and
cli
ss
data16
jae
sub
sub
lret
and
and
stc
sahf
sbb
mov
imul
or
bound
pusha
xchg
loop
push
xor
fs
mov
data16
xchg
in
jae
pop
mov
xor
xorl
into
xor
and
je
pop
gs
sub
loopne
out
pop
mov
sbb
adc
or
int3
xchg
lods
pop
lcall
jae
out
add
sub
jno
and
mov
sti
les
shrl
add
stc
aad
lret
in
fistps
sbb
fldenv
icebp
imulb
repz
shl
decb
push
ss
or
imul
sbb
iret
jmp
xchg
pop
xorl
dec
inc
daa
aaa
jmp
outsb
lods
jmp
dec
dec
mov
sbb
mov
fsubl
std
mov
jmp
ret
mov
jecxz
mov
subw
fildl
mov
lock
mov
mov
aam
mov
rorb
sarl
es
and
mov
dec
enter
mov
rol
icebp
cmpsb
mov
pusha
lret
xchg
fs
rcll
mov
dec
mov
xchg
sub
pop
test
ret
addl
std
fisttpll
xbegin
xor
sti
ljmp
arpl
insl
sub
insl
pop
xchg
adc
jbe
pop
mov
add
fnstcw
mov
inc
stos
xchg
inc
pop
dec
repnz
stos
test
addr16
dec
or
sbb
fst
or
stos
fnstsw
push
or
lret
add
inc
adc
xor
xchg
sub
dec
mov
dec
mov
pop
xor
sbb
and
ja
add
dec
ds
arpl
aad
fwait
cs
mov
inc
ljmp
je
out
xor
jns
adc
ds
xor
and
out
xor
cmpsl
inc
shll
int
mov
divl
andl
jle
mov
in
sbb
fbstp
xor
xchg
inc
mov
arpl
mov
push
mov
popf
aaa
xchg
mov
mov
jl
and
mov
sbb
out
scas
mov
adc
arpl
adc
xor
cmp
pop
sbbl
jae
sub
push
fnstcw
insb
lock
jb
inc
leave
loope
fcmovb
int
xchg
jg
or
imul
fadd
mov
pop
shlb
mov
leave
xor
hlt
outsl
out
arpl
dec
jbe
cmc
or
mov
sbb
jno
aaa
jae
xor
pop
daa
mov
ja
aam
rep
pop
sbb
push
out
xchg
xor
xor
scas
dec
mulb
fsts
movsb
add
stc
cli
cmpsb
cmp
shr
sbb
enter
daa
mov
sbb
jno
fwait
cmc
jl
lea
ds
pop
pop
movsl
inc
hlt
push
inc
xchg
lahf
pop
adc
test
mov
into
pop
js
pop
popa
stos
cmpb
mov
push
addb
movsb
mov
cmp
sbb
outsb
jmp
sbb
arpl
outsb
adcb
rolb
icebp
xor
fs
and
adc
cwtl
lcall
adc
lcall
mov
test
sub
mov
jae
mov
adc
mov
fsubrl
fsubrs
or
testl
xchg
mov
movsl
or
into
mov
test
jnp
mov
sti
sbb
cmp
xor
adc
or
ret
add
mov
pop
cli
rolb
xor
jmp
xchg
popa
decb
jnp
inc
xchg
repnz
gs
loopne
ret
adc
add
adc
insb
xlat
imul
pop
jmp
xchg
outsl
cmp
sbb
scas
dec
rcl
add
sub
xchg
push
in
xor
sti
jae
test
fs
aad
adc
nop
mov
cmp
inc
js
mov
pushf
dec
mov
add
sbb
aad
sbb
lret
adc
mov
pop
pop
dec
add
sub
jmp
and
mov
inc
iret
and
inc
inc
xchg
jg
or
adc
es
push
int
enter
scas
stos
or
push
fistpll
jge
in
mov
fiaddl
mov
addl
in
mov
xor
lock
mov
mov
int
es
sub
je
xchg
dec
ret
outsb
add
mov
adc
icebp
jge
xor
add
inc
mov
enter
lea
mov
sub
jb
aam
cmp
ret
adc
sub
inc
add
je
ds
pushf
cli
fstl
ficompl
lds
jns
out
sbb
mov
push
repz
popf
les
or
adc
inc
mov
mulb
dec
pop
xchg
dec
test
sub
sbb
adc
pusha
mov
xchg
stos
int3
lods
mov
lods
lcall
sub
xlat
call
popf
xor
shl
xor
popa
into
mov
mov
rcrb
adc
lret
dec
xor
inc
or
add
xor
fnstenv
pop
xorb
scas
mov
addr16
push
jns
jbe
in
mov
imul
addr16
push
dec
or
push
jns
ljmp
mov
mov
xchg
jle
out
xor
imul
loopne
push
adc
xchg
sbb
sbb
push
fwait
sahf
xchg
inc
and
lods
cli
push
push
push
cmp
mov
loop
adc
push
das
push
and
out
insb
jmp
or
scas
adc
fsubp
adc
mov
ret
xlat
pop
mov
dec
mov
jno
jns
push
push
popa
or
mov
out
inc
dec
ljmp
mov
cli
push
stos
imul
out
lds
dec
inc
dec
insl
add
repnz
fmul
std
inc
add
and
leave
arpl
shll
sub
in
sbb
aaa
xor
or
cli
add
mov
es
dec
push
rorb
lret
xor
mov
out
insb
mov
movsb
nop
cwtl
push
push
jae
andl
movsb
pop
enter
daa
mov
mov
cmpb
dec
scas
outsl
ss
aam
dec
mov
mov
out
mov
test
push
int3
mov
and
sub
mov
iret
js
xchg
pop
xchg
jg
push
and
call
mov
xlat
mov
adc
ds
jno
int3
jp
andb
bound
fadds
test
jne
clc
cmp
int
mov
rolb
or
adc
add
fadd
faddl
out
jle
in
test
pop
xorb
je
xchg
rorl
jnp
mov
and
ss
add
jmp
sbb
stos
push
popa
rcll
mov
sub
cmc
mov
or
je
loop
aam
stc
hlt
and
adc
imul
mov
fcmovne
out
and
xor
popa
adc
or
adc
mov
add
loopne
mov
pop
loopne
add
add
cltd
imul
cld
pop
add
jp
xchg
xor
pop
cmp
sti
loope
orl
cmp
sahf
outsb
sti
and
aad
shrl
xchg
cmp
out
inc
mov
mov
or
test
fcomps
inc
xorl
std
pop
ror
out
subb
dec
sbb
jmp
fidivl
sub
inc
pop
or
aas
lods
jno
jb
orl
xlat
dec
fwait
div
out
jbe
mov
cwtl
cmp
mov
adc
aam
mov
mov
dec
dec
lock
sub
sbb
repnz
inc
jp
and
sbb
push
insl
pop
sahf
insl
dec
mov
sub
mov
push
mov
jge
gs
mov
iret
mov
push
pop
mov
rcrb
imull
lock
ret
mov
aaa
loop
fwait
cs
xlat
into
ret
xchg
mov
addr16
stos
lods
pop
outsb
mov
scas
dec
stc
out
jg
mov
mov
rclb
adc
mov
cmp
out
dec
test
xchg
repnz
dec
shrb
xchg
sub
fbld
shll
dec
jmp
mov
int
add
inc
mov
xorl
aaa
mov
mulb
jecxz
mov
enter
fwait
cmc
ja
mov
mov
or
aad
fwait
mov
dec
adc
mov
nop
sub
out
mov
mov
in
jg
xchg
into
stos
pop
out
mov
mov
add
decl
jp
je
mov
stc
push
mov
and
in
pop
imul
cli
and
in
movb
or
add
gs
mov
adc
sub
push
lret
mov
and
inc
stos
lret
and
push
gs
or
or
mov
or
adc
xchg
pop
out
xlat
inc
adc
roll
inc
or
add
jle
jbe
fisubrl
int
xchg
sub
comiss
test
lds
push
mov
outsl
or
leave
je
mov
arpl
out
adc
lock
xor
xchg
xor
aaa
icebp
add
or
inc
add
sub
js
les
lods
or
jo
lahf
scas
pop
adc
cmp
dec
xchg
mov
cmpsb
inc
jns
in
dec
adc
enter
daa
lahf
dec
je
or
in
jno
fsts
jl
and
xor
in
and
pop
lahf
xchg
pop
dec
push
ret
test
push
sub
add
in
sub
int3
mov
pop
shrl
xchg
loope
push
in
pop
insl
cmp
test
jnp
sbb
sub
push
add
xchg
test
push
sti
xchg
sub
rol
xchg
enter
test
fsubrl
pop
shrl
inc
pop
sahf
and
test
and
jg
ja
mov
arpl
mov
add
pop
xor
orl
test
pop
fsubs
pop
lret
jecxz
ljmp
sbb
cmp
push
wrmsr
xor
test
loop
loop
stc
stos
jp
fs
out
notb
idivb
addw
mov
or
sub
mov
push
sbb
or
sar
push
jbe
je
inc
loopne
mov
mov
imul
repnz
pop
mov
cmp
stc
xlat
rcrb
gs
mov
or
cli
sub
test
mov
sub
repz
stos
sub
cmpsl
push
in
fildl
jecxz
roll
pop
test
lods
adc
dec
push
pushf
cli
cmp
push
xor
fisttpl
aas
dec
pop
pop
jb
and
dec
mov
outsb
je
ret
push
jecxz
sbb
sahf
std
movsl
insb
dec
cwtl
repz
rclb
mov
std
xorl
mov
mov
enter
xor
neg
frstor
stc
stc
and
and
xor
add
lds
std
mov
cmpsl
sahf
lret
scas
mov
sub
cld
push
or
lret
aam
jb
adc
outsb
mov
cmpsl
adc
shrb
pusha
in
sub
xchg
in
aam
std
mov
push
inc
popf
add
ret
clc
adc
mov
rolb
or
idivb
loop
or
pop
lds
add
push
movsl
cltd
js
xchg
test
mov
mov
bndldx
daa
cmpsl
jp
add
xchg
mov
xchg
inc
and
push
push
pop
add
pop
xor
repz
add
pop
insl
or
adc
or
mov
pop
or
clc
jae
mov
mov
push
push
mov
xorb
dec
pop
sbb
ss
or
adc
fwait
mov
adc
jne
daa
pop
mov
cmp
out
into
int
bound
and
jecxz
jae
sbb
lcall
cwtl
jge
addr16
js
push
dec
push
mov
lds
mov
nop
gs
jle
inc
aas
in
or
or
mov
mov
add
std
xchg
or
xor
je
xlat
call
mov
push
pusha
xchg
stc
stos
cmp
push
shrb
int3
jnp
sarl
push
sbb
scas
adc
fs
push
jo
ret
xor
es
inc
sbb
sub
inc
pop
mov
pop
push
inc
xchg
ficomps
xchg
test
sbb
popf
cwtl
imul
mov
rolb
xchg
bnd
leave
jmp
dec
hlt
mov
movsl
arpl
ja
push
insl
xchg
pop
aaa
sbb
enter
lahf
or
popf
add
xchg
int3
mov
or
mov
push
test
mov
mov
scas
out
cmp
xchg
push
bound
push
mov
movsb
cmpsb
push
gs
adc
jns
lds
lahf
in
xor
sub
cmp
scas
pop
jl
test
jecxz
pop
movsl
sbb
pop
jb
and
push
sub
mov
sbb
push
cmp
push
jmp
repnz
cmpsl
sti
jl
mov
js
bound
adc
fldt
jp
loope
xchg
shlb
outsb
adc
xor
hlt
inc
inc
or
xchg
sbb
shlb
and
dec
pop
lcall
push
cmp
cmp
out
sub
loop
test
popa
mov
jg
and
mov
sub
mov
adc
xchg
cmp
enter
ret
pushf
push
fcomps
cld
idivl
ror
nop
fidivrs
adcl
into
push
fsubr
xor
stos
dec
outsl
ds
adc
and
bound
fs
dec
mull
adc
lods
jb
test
jge
sar
imul
inc
or
mov
incb
hlt
andb
add
pop
shl
pop
push
cmp
stos
xchg
and
rcrb
cmp
mov
cmp
pop
xchg
mov
push
fidivrs
pop
push
mov
ljmp
aaa
mov
je
push
sti
cmpb
cs
sti
insb
aad
dec
jmp
dec
add
inc
mov
jp
inc
jo
les
adc
repz
xchg
ficomps
imul
add
in
adc
dec
mov
jmp
sub
inc
fs
sbb
aas
ljmp
dec
daa
lods
mov
jecxz
xor
mov
dec
or
cwtl
scas
or
mov
add
pop
out
int3
dec
stos
and
fstpt
xchg
loopne
adcl
or
out
xchg
repnz
in
shlb
mov
dec
sarl
or
lock
mov
lods
cmpsl
popf
out
jge
adc
cld
cmp
lret
inc
mov
and
fnstsw
ret
pop
xlat
sar
fyl2xp1
sub
cwtl
aam
mov
ja
fucomp
cld
das
clc
dec
xor
xchg
das
enter
and
stos
enter
aam
or
mov
xchg
das
xor
mov
mov
fcompl
pusha
test
fcompl
pushl
dec
mov
loop
inc
ret
inc
fistpl
gs
rcrb
rep
cltd
xlat
jmp
xchg
push
test
jp
mov
sbb
loope
dec
or
inc
clc
mov
imul
jl
fistpll
dec
or
cs
and
ret
xchg
call
mov
mov
arpl
cmp
in
cmp
out
loop
sub
xchg
or
lods
jp
add
mov
cli
popf
jle
pop
add
jle
add
les
xchg
xchg
mov
add
mov
push
lcall
mov
lahf
jmp
int3
and
flds
jnp
pop
cwtl
scas
ds
push
popa
test
adc
es
in
pop
pop
test
test
fimuls
pop
inc
pusha
jns
or
cli
orl
lds
test
xchg
fistpl
sbb
xchg
imul
ficomps
popf
lds
mov
mov
adc
jecxz
hlt
add
push
arpl
jbe
lcall
sbb
aaa
outsl
or
or
xorl
sarl
pop
lret
mov
xor
pushf
adc
lds
in
and
sub
mov
cmpsb
dec
dec
hlt
in
sbb
and
mov
jge
popf
xchg
or
jo
sub
jl
push
movsb
dec
sti
add
jnp
dec
movsl
pusha
fisubs
lods
mov
and
stos
dec
test
mov
adc
xchg
pop
pop
std
jle
js
test
pop
dec
shrl
loope
sbb
sub
mov
cmp
insl
or
jo
adc
iret
push
or
jmp
and
sub
push
outsl
xor
sbb
push
add
int
imul
mov
xchg
lcall
adc
test
sub
ja
test
in
jg
rcll
mov
and
mov
xor
mov
mov
cs
cmp
sbb
ds
xchg
lret
sahf
rcrl
push
sbb
mov
inc
cmc
jecxz
xchg
xor
pop
outsl
sbb
cltd
inc
stc
sbb
fs
mov
xchg
data16
mov
mov
imulb
inc
out
out
cli
pushf
lahf
sbb
cli
sahf
cmp
scas
repz
das
sbb
and
shl
mov
adc
stos
xchg
adc
dec
imul
add
push
xor
addr16
cmp
inc
adc
push
andl
jne
sti
das
sub
lock
aad
and
nop
es
fldl
icebp
xor
js
sub
sub
shl
loope
ljmp
dec
xchg
movl
or
jge
pop
mov
mov
inc
scas
fidivl
jb
sti
mov
je
jg
jecxz
xchg
mov
mov
mov
cwtl
imul
out
sbbl
xchg
mov
inc
lock
push
imul
out
movb
ja
stc
roll
xlat
or
or
jnp
adc
dec
scas
repnz
mov
fnstenv
cld
lods
ret
xchg
mov
outsb
mov
in
shlb
in
mov
sub
inc
xchg
aam
push
push
ret
dec
adc
fstl
cmp
mov
test
cmpsb
mov
popa
cmp
fisubrs
push
push
out
test
out
xchg
jbe
or
out
nopl
push
cltd
out
jbe
adc
mov
cmc
dec
js
div
roll
clc
and
pop
pop
push
add
push
cmp
ret
add
dec
mov
or
xor
lods
pop
mov
pop
clc
cmpsl
cld
ja
mov
rolb
adc
or
dec
mov
addb
mov
sahf
bound
pusha
jbe
stc
adc
out
popf
fldcw
mov
cmp
pop
out
jp
adc
mov
mov
int3
jle
insb
in
mov
int3
les
jmp
insb
dec
dec
adcl
sub
pop
dec
jle
cli
insb
dec
mov
faddp
shrb
pop
push
jnp
stos
lahf
scas
mov
mov
adc
pusha
ret
out
pop
xchg
sub
xor
shll
jo
arpl
pop
or
jne
gs
inc
xor
fiaddl
xchg
xor
fisubrl
iret
inc
fiadds
hlt
lds
sbb
mov
ror
repnz
or
hlt
dec
mov
shlb
stos
in
jge
pop
lods
sbb
das
push
or
sbb
add
lods
int3
mov
imul
or
xor
notl
es
movsb
push
xchg
and
inc
jg
mov
inc
loope
lret
out
in
add
add
pushf
cli
out
cmp
ret
inc
jl
ss
push
aas
ds
inc
and
inc
xor
lahf
hlt
imul
push
mov
push
jg
inc
inc
push
mov
out
pop
and
popf
js
xorl
mov
loopne
lcall
imul
adc
stos
jnp
vpcmov
insl
das
add
enter
dec
enter
movsl
int
and
pop
add
xchg
lcall
dec
fdivl
arpl
sahf
or
loop
xor
xor
jg
xchg
mov
sbb
jmp
ss
and
cmp
aad
jmp
lret
aaa
shrl
clc
sbb
jb
into
cs
dec
cmc
stos
xchg
sahf
xor
lret
add
cld
inc
in
rclb
fs
rcl
or
fsubrl
or
das
out
xor
iret
cmp
xor
adc
or
push
mov
mov
loopne
ds
pop
pop
mov
push
or
imul
lret
fildl
pop
inc
mov
mov
out
jge
gs
gs
mov
dec
and
pop
cs
movsb
fcmovbe
lret
pop
xchg
nop
add
dec
sarb
fldcw
fdivrl
adc
test
xor
lea
lret
xor
cvtps2pd
mov
int3
jmp
xchg
adc
mov
inc
jb
sbb
popf
scas
aas
sub
jb
fmuls
cld
je
pop
cmp
adc
out
idiv
adcl
sbbb
push
push
xorl
sahf
xor
jl
hlt
lock
lcall
cmpl
or
push
ret
gs
jecxz
divl
dec
stos
inc
cmpsl
cmpsl
fwait
sarb
cmp
cmp
cld
fcomps
lret
and
mov
jmp
mov
pop
add
lret
imul
ret
fnstsw
push
push
popl
sar
ret
out
xchg
lods
mov
ret
popa
push
sbb
lods
add
xor
ficoms
cwtl
adc
lret
sub
inc
test
in
mov
inc
popf
xchg
icebp
pushf
test
pushf
rolb
stos
and
rcll
js
pop
push
test
stos
ja
rcrb
fcompl
flds
mov
push
out
adcl
xor
rcl
mov
out
mov
pop
mov
in
pop
dec
fmull
pushf
aaa
inc
sti
xor
fcmovnb
mov
dec
mov
inc
jmp
out
imul
bound
cmp
cmc
adc
test
xchg
or
pop
out
int
sub
mov
fwait
addr16
addr16
mov
add
adc
mov
jno
jle
insl
out
in
test
pusha
sbb
fucomip
mov
pop
jmp
aaa
fs
andl
mov
mov
sbb
aaa
imul
fldz
insb
add
lds
out
and
adc
mov
ret
gs
lret
jae
inc
mov
mov
or
lock
inc
ret
rcrb
idivl
xchg
xchg
mov
in
sbb
adc
lds
xchg
lds
es
mov
mov
test
cwtl
test
jnp
and
sbb
and
subb
or
les
pop
xor
mov
cmp
enter
pop
jo
test
scas
xorl
dec
in
idivb
jp
into
movsb
inc
push
push
mov
dec
repz
in
ljmp
daa
fwait
out
cmp
push
imul
cmp
dec
shlb
ret
push
lahf
adc
mov
test
dec
clc
xchg
inc
movsl
xchg
lock
insl
pop
dec
shl
popa
icebp
push
pop
int
sti
push
leave
jno
pop
stos
aam
cmp
aam
inc
das
mov
cmp
push
aad
test
addb
movsb
add
shll
lds
push
pop
cmp
sub
movsb
sbbl
out
neg
mov
sahf
lods
jl
test
cmc
and
imul
dec
test
and
mov
cmp
nop
and
idivl
aaa
roll
mov
push
sbb
test
jno
jne
or
outsl
fucomi
xchg
loop
and
xchg
push
adc
popa
mov
lods
les
cmc
out
incl
cli
add
gs
dec
xlat
or
mov
nop
cli
js
call
xchg
sbb
and
adc
pop
test
add
sbb
adc
xlat
mov
jbe
mov
mov
std
sti
lea
cs
push
aad
add
dec
pop
sbbb
out
rol
inc
aas
cld
repz
nop
out
decl
lods
popa
sub
xor
pop
push
aam
adc
adc
pop
test
inc
stc
add
in
aas
and
jb
movsl
clc
dec
mov
sbb
and
sbb
inc
or
inc
aaa
pop
cwtl
fbld
mov
int3
jl
dec
imul
fcmovne
lret
sub
fbstp
cmp
das
jae
dec
mov
aad
jmp
shll
add
push
dec
movsl
sub
cmpsl
lcall
icebp
xchg
push
cld
add
ror
nop
sarb
repnz
mov
das
jae
pop
and
icebp
shlb
xchg
sub
cmpb
insb
movsl
fstl
mov
movsl
clc
lahf
inc
xchg
in
stc
inc
ljmp
dec
lods
jo
add
outsb
movsl
mov
push
jae
in
xlat
xor
fbld
push
push
cmp
es
xchg
mov
fiaddl
dec
ret
jl
test
aad
xchg
je
sbb
pop
shrl
mov
mov
data16
push
jg
scas
add
lret
gs
decl
mov
divl
adc
jne
xor
dec
mov
outsb
jmp
mov
inc
xchg
and
or
push
js
ja
cmc
dec
adc
jne
push
mov
push
xchg
dec
cmp
sub
arpl
inc
in
les
pop
lret
shlb
sub
test
pop
jp
mov
mov
pop
mov
dec
push
or
bound
xchg
leave
mov
fisttps
mov
xchg
or
jmpw
lahf
xchg
add
jmp
push
jecxz
or
sub
sbb
dec
jbe
jnp
xchg
cli
scas
subl
notl
dec
or
iret
into
popa
mov
jae
test
popa
pop
inc
dec
mov
jae
cmp
inc
imul
mov
fisubrl
jb
sbb
sbb
imul
fiadds
insl
lds
adc
icebp
xchg
repnz
mov
leave
movl
arpl
mov
cld
sbb
outsl
in
or
push
add
out
aam
arpl
pushw
sbb
or
lods
push
scas
bound
fdivrs
xor
movsb
sarb
cmp
rorl
xchg
daa
lcall
jno
imul
ds
pop
movsl
jne
jmp
jge
lock
xor
sub
popf
insb
test
adc
xchg
add
mov
add
jb
loope
pushf
repz
or
push
push
mov
dec
sub
push
add
outsb
mov
jp
shlb
sub
sbb
sbb
cmc
stc
add
cmp
xor
iret
push
or
js
divb
jle
sub
mov
lcall
xchg
xchg
sahf
push
in
sbb
pop
fwait
scas
jg
stc
xchg
mov
dec
leave
mov
inc
mov
pop
es
push
adc
aam
cmp
dec
xlat
idivl
clc
lret
rol
movsb
mov
mov
sbb
jle
cmc
cmp
mov
fs
outsl
mov
xor
ds
test
adc
into
shrd
mov
out
push
movsb
cli
xor
fsubrs
les
or
pop
gs
icebp
sub
cmp
pop
lcall
imul
stos
push
add
pop
xchg
les
mov
cmp
lock
sti
pop
imull
ret
cmp
mov
and
pop
sti
cmp
inc
sbb
mov
mov
and
inc
adc
sbb
mov
dec
imulb
repz
mov
ljmp
call
add
lea
mov
mov
add
add
int
addb
aas
and
dec
add
arpl
xchg
jecxz
ds
test
loop
call
cli
pushl
stc
int
andl
ret
mov
xchg
mov
sbb
das
push
imul
mov
sbb
and
hlt
cmpsb
es
aas
mov
dec
mov
mov
icebp
icebp
pop
imul
lret
push
adc
jne
sbb
mov
inc
sbb
rorb
loope
mov
sahf
add
adc
dec
data16
cmp
int3
xchg
sub
mov
lods
fldt
and
rcrl
xchg
dec
push
insl
push
dec
scas
iret
jbe
add
les
mov
lret
test
test
sub
sub
popa
test
mov
jnp
adc
movsl
rol
mov
pop
pop
int
stos
push
jae
push
and
loop
add
aad
sub
push
or
sbb
or
jne
cltd
mov
sub
mov
pop
dec
js
inc
sub
sub
mov
imul
sbb
das
mov
getsec
out
sub
bound
jns
or
lcall
out
mov
xor
or
sub
stc
or
or
mov
mov
mov
dec
cmpsl
in
jb
pusha
push
pop
icebp
fildll
mov
xchg
ffreep
fucompp
xlat
lahf
jns
int
insb
cmpl
xchg
popf
outsl
cmpsl
pop
mov
fwait
bound
and
insb
dec
jecxz
xchg
sub
scas
lret
push
jge
std
adc
sub
ret
jnp
cmp
incb
inc
jae
sub
inc
insb
pop
es
out
adc
xchg
mov
pop
stos
push
xchg
aaa
pop
iret
sbb
int
imul
xchg
ljmp
rorb
repnz
outsb
out
ds
push
hlt
cs
arpl
out
pop
jge
scas
sbb
pop
or
imul
push
xchg
add
pop
dec
dec
pop
xchg
jl
push
lcall
addr16
adc
scas
inc
mov
mov
call
gs
push
pushf
cmp
push
push
push
enter
daa
cltd
dec
das
cmp
pop
jno
bnd
les
clc
ds
fsubrl
and
pop
sahf
lahf
push
fwait
cwtl
push
mov
sbb
loopne
js
ret
out
jbe
loop
cltd
xchg
add
mov
push
sub
loope
int
sub
sub
mov
outsb
rcll
bound
sbb
subb
std
sbb
xor
xor
jg
push
or
cltd
mov
pop
subl
movsl
push
in
and
arpl
dec
arpl
repz
int
lds
xorb
jg
mov
dec
mov
dec
and
lock
cmp
push
pop
push
lret
xor
je
in
es
sbb
lret
lcall
lahf
outsl
cltd
aaa
mov
mov
add
cmc
imulb
pusha
add
cmp
xchg
lahf
jnp
xchg
dec
dec
mov
pop
aad
js
pop
cli
push
push
cmp
cmp
repz
scas
pop
sub
dec
mov
push
js
pop
mov
inc
subl
cltd
inc
add
pop
xchg
xchg
xchg
push
cmp
push
sub
mov
mov
mov
sbb
jmp
xchg
jl,pn
aaa
aad
outsb
in
xchg
fnsave
adc
movsl
fsts
les
shl
jns
in
divl
lea
mov
movl
jbe
pushf
cld
jne
jmp
gs
pop
cmp
xchg
inc
pop
insl
lret
pop
popa
aas
add
and
dec
jp
pop
je
call
jnp
jne
std
je
cwtl
push
call
and
cli
cmp
dec
inc
mov
lods
mov
jnp
mov
out
inc
lock
ja
xor
add
mov
and
push
out
mov
ljmp
cwtl
pop
dec
mov
xor
and
lret
outsb
in
sarl
add
movsb
mov
popa
pop
dec
rcrb
push
repnz
and
push
fadds
test
je
push
xchg
push
gs
dec
lods
inc
lret
ja
loopne
xor
in
xchg
xchg
pop
call
sbb
setne
addr16
ret
test
push
mov
fadds
xchg
aas
loop
loop
add
les
rcrl
lret
pop
sahf
add
add
add
jae
int3
cmp
or
inc
xor
pushf
cld
mov
mov
in
or
jp
ja
push
dec
leave
je
inc
shlb
pushf
ljmp
dec
insb
adc
mov
faddl
decl
sub
and
sbb
sub
jp
mov
jp
sbb
subb
arpl
shrl
in
jg
pusha
in
sbb
out
xchg
mov
mov
xchg
cwtl
scas
sti
orl
push
imul
mov
fimull
stos
out
adc
inc
pop
push
jnp
mov
sub
enter
fadds
ret
js
jo
ret
inc
pop
movb
dec
inc
outsl
jae
or
popa
sbb
inc
inc
mov
std
xchg
mov
and
push
push
imul
scas
fimuls
es
daa
xchg
mov
mov
mov
hlt
jns
lock
fldenv
jge
adc
aaa
sub
push
add
fistps
int3
ss
pop
rcll
xor
arpl
adc
add
ret
adc
push
push
jmp
add
lahf
sti
or
cwtl
xchg
pop
daa
cwtl
xchg
cmp
loopne
and
test
roll
ds
pop
movsl
cmp
and
pop
clc
push
xchg
popa
push
stos
add
push
jle
cmp
cmp
sarb
pop
mov
push
imul
mov
xchg
cmp
outsb
data16
adc
push
xlat
cmp
ds
dec
sbb
pop
add
clc
dec
xor
sarl
ficomps
sub
int
pop
add
cwtl
push
inc
ja
push
sub
out
sahf
xchg
stos
and
orb
xchg
mov
adc
mov
jo
mov
repnz
in
iret
mov
pop
test
fadd
sti
dec
idiv
ja
lret
mov
or
lahf
mov
cmc
jne
in
negb
mov
shlb
sbb
shl
dec
icebp
addr16
lods
leave
mov
adc
xlat
scas
data16
or
negl
dec
cli
fwait
movsl
jo
negl
out
cmp
lock
or
and
shlb
and
or
fcoms
loopne
pushf
addr16
ficompl
xchg
dec
xchg
cmp
inc
push
xlat
jns
pop
sub
adc
in
notb
jmp
lcall
aad
cmp
nop
insl
xlat
icebp
dec
cmp
call
pusha
push
int
lock
out
lea
xlat
nop
jmp
pop
pop
push
insb
adc
push
or
mov
pop
fbld
popl
mov
aad
movsb
mov
sub
icebp
dec
pcmpeqb
adc
xchg
testb
fscale
imul
or
aam
xchg
dec
and
sub
loop
pop
out
mov
cmp
adc
mov
cli
addr16
cs
rcll
adc
dec
xchg
pop
js
xchg
xchg
xchg
mov
or
mov
test
lretw
add
pop
jae
mov
andb
sub
clc
mov
sbb
ret
outsb
clc
scas
inc
xchg
test
cs
lods
movsl
sbb
pusha
ret
out
xchg
fwait
movsl
xchg
fnstcw
mov
hlt
or
add
push
cltd
stc
mov
mov
in
addl
pop
cli
adc
aas
lret
push
shrl
lds
popa
stos
xor
lods
push
push
jae
add
in
imul
or
pop
lret
fstl
mov
sti
rcrl
mov
lahf
mov
pushf
dec
mov
sar
or
hlt
cmpsl
fwait
add
rorb
cmpsb
test
adc
out
andb
out
mov
outsl
xchg
inc
cmpsb
pop
out
adc
in
ja
or
or
mov
lret
mov
dec
sub
and
stc
stos
in
lock
fbld
push
jmp
arpl
inc
sbb
sbb
sub
pop
popf
mov
fs
sbb
in
and
xor
stos
push
scas
nop
jo
push
or
aam
fcmovnu
aaa
iret
jmp
sub
lods
sbb
faddl
scas
jae
rclb
jb
lods
or
fdiv
nop
inc
mov
ljmp
std
lods
inc
imul
ret
or
rolb
mov
pop
test
leave
sub
or
arpl
sub
jbe
mov
jge
jns
sbb
inc
aaa
jmp
movsb
pop
add
ror
lock
lock
insl
push
lds
sbb
cld
stos
jns
mov
push
iret
and
arpl
movsb
jae
xor
xor
cmpsb
pop
lods
test
xchg
je
xchg
ret
mov
jno
outsl
repz
xchg
fisttps
jno
ds
add
movsl
mov
dec
lret
and
subb
add
loope
or
cld
or
pop
out
jae
dec
jb
pop
leave
data16
pop
pop
lahf
loope
jg
sub
pusha
cltd
cmp
loope
outsb
leave
movsb
mov
shl
pop
push
and
push
sbb
push
rdpmc
int3
dec
out
adc
adc
sub
add
fwait
mov
pop
jg
mov
push
inc
pop
push
fwait
in
lock
lea
notl
rorl
aam
mov
inc
dec
mov
pop
test
ss
mov
jae
jl
sub
mov
loopne
shll
sub
sbb
popf
ds
lea
xor
inc
outsl
push
xchg
ss
sahf
ja
arpl
fs
stos
adc
sahf
out
pusha
ja
mov
insb
arpl
jbe
cmp
xor
stc
dec
cmp
jns
or
punpcklbw
cmc
std
mov
loopne
lods
xchg
pop
negl
gs
jo
add
out
or
cld
sub
xlat
mov
rorb
dec
lahf
in
popa
loopne
sti
dec
lds
inc
clc
and
cs
mov
dec
fwait
test
pop
fld
sub
outsl
adc
repz
gs
repz
cltd
jnp
jle
aad
sbb
dec
sub
jno
pop
xorb
inc
adc
cltd
pusha
aas
inc
das
sti
jb
imul
ja
je
xchg
test
pop
dec
xor
dec
mov
std
fldl
cwtl
lret
jg
mov
flds
xchg
sbb
dec
pop
lahf
jge
xchg
pushf
mov
call
das
out
out
pop
mov
mov
pop
and
loope
shl
pop
mull
sbb
loope
jp
inc
dec
xchg
nop
cmpsl
xchg
push
mov
jecxz
frndint
scas
int3
lret
dec
sub
and
fwait
mov
dec
rol
fidivrs
aam
and
push
pop
sbb
clc
ljmp
ljmp
pop
lods
sbb
jmp
out
cli
sub
xchg
and
ret
pop
add
pop
stos
push
cltd
xor
std
mov
in
xchg
insb
dec
pop
xchg
dec
test
andl
sub
pop
pop
mov
mov
add
aaa
sahf
fcos
or
adc
es
or
iret
xor
jb
mov
ds
stos
mov
pop
pop
mov
dec
scas
mov
inc
out
push
and
rclb
adc
paddq
jno
icebp
mov
mov
out
in
das
bound
jns
in
push
cmp
out
xchg
jo
iret
negb
jp
push
mov
xor
mov
or
loop
scas
lds
filds
sub
mov
subl
out
dec
jne
in
sub
pop
cmpsl
add
test
mull
jnp
nop
and
push
sub
iret
dec
xchg
adc
mov
jge
inc
jne
xor
mov
inc
jne
jle
fsts
push
gs
inc
ds
xchg
fidivl
loope
cmp
lds
ficoml
nop
leave
lds
add
pop
aam
mov
pop
ficomps
mov
mov
arpl
shll
outsl
inc
push
jge
ret
xor
sub
xor
test
jecxz
int3
jne
add
push
imul
pop
or
test
cs
sbb
mov
and
dec
and
or
pop
cmp
cmpsb
and
insl
stc
and
mov
jmp
cmp
jle
jno
imul
dec
add
insb
jo,pt
xchg
movsl
xchg
repnz
and
mov
dec
push
sub
adc
inc
jo
mov
mov
std
mov
pop
or
pop
push
push
iret
loope
push
and
push
sarl
clc
movsl
outsb
sub
enter
mov
int3
cld
or
andb
int3
mov
add
or
xor
mov
sub
loopne
pop
push
mov
repnz
xor
sub
dec
xchg
sahf
fdivl
test
sti
stos
jg
adc
mov
popf
cmc
mov
sbb
and
pop
jnp
loopne
fdivrl
aaa
jno
divl
xchg
sub
ffreep
cmp
mov
mov
sbb
inc
into
andb
push
adc
shlb
outsl
ss
stos
loop
andb
pop
pop
add
adc
int3
inc
lods
inc
loope
mov
rol
out
rcl
add
cmp
decl
inc
jecxz
sbb
lods
loopne
gs
pop
push
sub
adc
mov
mov
pop
cmp
mov
rcll
js
sti
cmp
mov
adc
push
push
mov
int3
addb
movsl
jle
aad
add
and
xor
jge
inc
dec
xchg
stc
stc
test
jp
xchg
repz
inc
xor
test
lea
xchg
std
test
pop
shlb
adc
jno
pushf
std
rclb
and
jnp
inc
imul
aas
loop
repz
fimuls
fisttps
je
imul
nop
jnp
std
test
lods
cwtl
xchg
lds
cmpl
and
mov
enter
mov
das
into
and
mov
push
xor
xor
lcall
addr16
mov
cmpsl
xchg
xchg
and
icebp
mov
pop
cmp
mov
and
mov
mov
clc
dec
sub
mov
mov
and
push
and
repnz
fcmovb
mov
lea
xchg
addr16
push
mov
mov
add
test
addr16
ret
and
mov
shlb
xchg
mov
xchg
sbb
cmp
sarb
pop
or
imull
scas
xor
add
push
push
add
test
xor
lds
pop
jle
adc
cmp
xorl
rcrl
stos
outsb
ja
sub
dec
mov
clc
pop
or
test
fwait
pop
dec
repnz
loop
cmp
or
movsl
and
bound
in
in
cmp
xchg
in
inc
out
outsb
aaa
sub
imul
cmc
xor
sbb
in
test
jle
js
in
jb
mov
rorl
sub
aam
mov
int3
xchg
stc
out
rolb
mov
iret
popf
or
insb
mov
xchg
sbb
stos
dec
inc
shlb
sarb
insb
addb
scas
push
jge
push
cltd
repnz
adc
imul
inc
sbb
jae
mov
inc
js
out
or
shlb
inc
mov
cli
ja
xchg
adc
sbb
fdiv
imul
jae
jbe
iret
xor
js
or
repnz
imul
sbb
aaa
hlt
pop
mov
arpl
fwait
dec
jbe
dec
les
repnz
sbb
mov
aaa
addr16
lods
add
imul
mov
mov
jp
mov
xchg
aam
ljmp
fdivrs
in
push
dec
popa
enter
daa
xchg
dec
ljmp
jge
jl
mov
dec
jae
stos
ds
cld
sti
movsl
cwtl
add
and
sbb
test
or
popa
inc
fstps
cmp
pop
xor
stos
rcll
or
mov
sub
pop
cmp
outsb
stos
ret
adc
cmpsl
lods
pop
loope
add
sbb
sbbl
xor
inc
push
sbb
int
push
aaa
sub
imul
push
dec
inc
push
std
je
or
cmp
loope
sbb
jg
mov
inc
out
cwtl
test
ret
and
add
xor
repnz
lret
ds
adc
in
into
arpl
in
xor
mov
adc
xchg
push
stc
rcrl
mov
adc
sbb
insl
pop
lods
cs
rorl
je
stc
cli
xor
mov
jl
insb
cmp
pop
or
jo
gs
xor
mov
jnp
scas
test
adc
cwtl
fiadds
inc
xchg
mov
lahf
push
dec
cmp
sbb
xchg
add
cmc
in
aaa
stc
test
cmpsl
sbb
cs
inc
aad
sti
lds
pop
push
repz
pop
and
les
pusha
add
stc
push
repz
jl
popl
cmpsb
pop
subl
pushf
test
mov
lea
enter
and
testl
dec
data16
test
push
mov
sbb
jl
ret
mov
rcrl
inc
mov
dec
adcl
cmp
in
push
mov
mov
sub
cmpsl
das
lods
pop
jecxz
xchg
aam
pop
xor
iret
fsubs
jg
adc
and
outsl
insl
dec
scas
pop
dec
xchg
push
mov
xchg
xlat
icebp
cld
add
ja
mov
sbb
mov
fisttpll
movsb
sub
je
ret
mov
push
in
jne
dec
xor
adc
mov
ds
popa
icebp
or
lods
bnd
mov
shlb
push
xchg
lea
adc
je
sahf
and
test
pop
mov
add
sub
push
add
sbb
das
dec
pop
mov
stos
add
loop
movsl
mov
or
dec
imul
or
xor
cltd
sub
les
pop
rorb
jl
xchg
insb
jg
sbb
pop
or
or
fwait
xchg
aaa
mov
jne
xchg
mov
fisubrl
bound
out
jns
testb
pushf
xchg
xor
push
out
leave
xor
and
hlt
sub
dec
pop
arpl
mov
pop
mov
scas
ss
and
movsl
pusha
pop
add
xchg
incb
int
stos
mov
xchg
les
orl
push
popf
xor
mov
xlat
push
adc
and
inc
stc
insb
in
jecxz
jnp
cmpsl
in
scas
mov
sbb
dec
iret
or
in
jbe
dec
addb
jae
lret
jnp
xor
dec
sbb
fcmovu
addr16
ljmp
imul
lock
je
lds
inc
rclb
or
add
insl
hlt
movsl
add
dec
jbe
vhsubps
add
sbb
sub
mov
leave
add
push
jbe
loop
std
pop
jge
pop
push
outsb
out
pop
xor
iret
hlt
pushf
scas
pushf
mov
jne
jnp
jmp
daa
jmp
in
cmp
mov
xchg
rcr
cmp
jecxz
jno
mov
cmovnp
in
ds
test
pop
loope
lahf
in
xchg
mov
test
xlat
std
cmovae
and
and
and
pop
xchg
inc
loope
cwtl
jnp
sub
and
or
outsb
repnz
adc
xorb
inc
mov
xchg
cmp
call
xor
jne
push
sbb
push
int
fsubl
or
outsb
pop
cld
add
lcall
pop
fmull
or
and
dec
cmp
sub
mov
adc
jnp
pop
xchg
int
sub
out
es
cmp
lods
ss
cmc
xchg
push
mov
shll
mov
mov
mov
loop
test
outsl
hlt
cmp
xchg
fistpll
mov
pop
je
adc
adc
orl
push
mov
pop
daa
out
adc
xor
or
or
stos
pop
xchg
lds
out
loopne,pn
adc
pop
push
push
or
call
sub
cmpsl
add
mov
push
loope
sbb
lods
dec
sub
jne
cwtl
sub
in
bound
sti
push
call
aas
aad
pop
mov
flds
fs
outsl
repnz
fldenv
into
les
stc
cld
mov
add
or
inc
sti
cmc
fcompl
sahf
mov
pushf
push
insb
xchg
jmp
shll
add
fwait
inc
mov
popa
inc
jb
popa
xlat
xchg
je
push
mov
notb
outsb
add
cwtl
cld
cmp
mov
dec
and
in
or
dec
fcom
mov
mov
es
divl
lock
nop
das
mov
pop
mov
pop
rcrb
into
mov
movsl
and
insl
das
fstps
cmpsl
xchg
test
mov
push
lcall
mov
and
fistpl
cld
fldl
sub
sbb
push
or
mov
clc
fstenv
xchg
movsl
and
ljmp
dec
lods
pop
mov
push
and
push
push
jo
in
pshufw
xchg
data16
aad
xor
js
xchg
cmp
test
cwtl
xor
inc
push
push
ror
and
stos
out
aam
push
hlt
test
add
mov
jmp
mov
add
xor
sub
mov
pop
in
pushf
mov
popa
ja
cmp
and
scas
or
rcrb
mov
imul
fdivp
cmpsl
jns
stos
fucom
faddl
push
sub
popa
jns
addr16
dec
jp
repnz
mov
iret
xchg
in
bnd
cwtl
in
pushf
adc
sti
add
mov
adc
push
cmp
cmp
lret
push
adc
cmp
and
jns
insb
pop
sbb
scas
sbb
push
push
daa
lods
clc
adc
hlt
iret
and
ret
addr16
or
inc
xchg
cmp
inc
jle
jo
push
push
push
mov
xchg
inc
in
sbb
pop
shrb
sbb
mov
add
mov
push
and
leave
or
hlt
lock
in
adc
jbe
mov
jge
sti
lcall
pop
pop
ja
in
pop
or
mov
pop
lods
jge
push
push
jbe
xor
sub
mov
and
shlb
xor
and
push
popa
cmpsb
cmpsw
xchg
in
and
daa
xchg
filds
outsb
mov
clc
jl
sub
push
xchg
ljmp
push
adc
mov
push
push
cmpsb
pushf
xlat
test
mov
imul
subl
cmp
ja
push
xor
loope
xchg
sub
xchg
push
mov
outsb
push
adcb
pusha
fwait
rcrb
fisttpl
popf
sub
jno
mov
xor
or
push
pop
arpl
int
xchg
fisubrl
xchg
pop
jnp
bound
imull
sub
xor
loop
out
ljmp
int3
adcb
and
xchg
push
and
daa
xor
test
lods
out
fsubrs
jne
mov
inc
lret
push
sar
int3
mov
push
dec
into
sub
mov
loope
sbb
jp
loop
pop
adc
aas
xorl
stos
jmp
cmpsw
or
lods
cld
jbe
mov
jl
out
dec
cli
lcall
cmp
in
or
mov
gs
rolb
pop
jae
inc
adc
push
fists
enter
sbb
call
jg
sub
dec
leave
mov
or
jl
cs
leave
sbb
dec
sbb
dec
pop
adc
xor
fstps
daa
jg
pop
insb
push
mov
insl
call
jp
xchg
inc
scas
adc
mov
pushf
jg
jmp
mov
fiaddl
push
ret
inc
mov
jns
jb
jo
dec
inc
xchg
adc
xchg
jecxz
movsb
negb
mov
jns
inc
cwtl
mov
sti
mov
jl
mov
rorl
dec
ret
mov
mov
gs
and
dec
das
imul
mov
out
js
in
icebp
rcrl
mov
dec
jge
adc
pop
xchg
icebp
aas
cltd
inc
cld
pop
or
cld
mov
sub
mov
sbb
xor
movd
jnp
mov
xchg
or
in
scas
push
push
test
xchg
cltd
push
clc
xor
xchg
in
fucomp
and
jp
pop
inc
lods
enter
xchg
or
xchg
cmc
xchg
cmp
sub
aas
and
iret
lret
add
dec
sub
mov
xor
xchg
mov
sti
out
test
jno
xchg
cmpsb
shlw
cmp
pop
or
leave
stos
fidivrs
xor
mov
sbb
inc
mov
xor
psubsw
dec
mov
pop
pop
inc
movntq
lea
jnp
dec
inc
dec
rcr
push
xchg
outsb
fwait
out
insl
loopne
fwait
adc
jne
mov
mov
push
out
inc
fmull
jns
add
in
test
xchg
shll
call
mov
or
addr16
movsl
jp
cmp
xchg
dec
cmpsl
mov
out
outsb
jle
pop
jnp
lret
add
pusha
mov
push
filds
push
xchg
cwtl
or
pop
and
subl
test
addb
mov
push
nop
mov
mov
shrb
insb
ret
and
jnp
iret
xor
jg
stos
push
outsb
mov
mov
movb
mov
call
pusha
inc
adcl
or
test
inc
xlat
adc
push
flds
ficomps
mov
je
stos
ror
scas
mov
cmpsb
dec
aam
jg
dec
hlt
cmp
mov
jnp
cli
jge
rcrb
adc
test
add
mov
pop
fldt
into
push
xor
adc
test
scas
pop
cmp
cmp
movsb
sub
push
cmpsb
jmp
movsl
xor
daa
xchg
jo
cmp
mov
push
dec
rolb
movsl
lods
xchg
dec
and
insb
lahf
sub
push
jns
aad
test
push
insl
repz
inc
lods
cltd
adc
lret
shlb
js
aad
pop
add
in
pop
lods
mov
sub
or
cmp
xor
adc
cmp
cmc
jge
xorb
mov
xor
out
push
and
push
sub
imulb
pop
cli
shll
iret
xchg
or
push
popf
sbb
fcmovne
sahf
push
pop
fiaddl
data16
std
cmpsb
pop
mov
popa
dec
and
jns
in
scas
addr16
and
jae
jle
hlt
sbb
cltd
mov
mov
into
or
inc
cmc
jo
jnp
cmp
dec
outsl
mov
loop
push
inc
stc
imulb
cmp
stc
out
push
data16
xchg
lods
jecxz
sub
jno
push
cli
int
shll
add
cmp
xchg
add
cld
fcomps
movsb
rcll
iret
mov
mov
adc
and
add
inc
mov
sbb
and
xlat
repz
scas
stos
mov
js
sti
mov
push
xor
add
xchg
aas
cltd
nop
push
std
dec
jbe
or
cs
aad
dec
les
pop
sbb
add
lea
xchg
xor
add
stc
jbe
pop
pushf
cltd
in
adc
pushf
test
jne
pop
mov
jmp
inc
xlat
mov
jb
mov
dec
mov
add
negb
jne
jb
jg
subl
mov
mov
jl
jb
push
mov
mov
lock
das
dec
and
mov
jo
enter
shll
stos
arpl
dec
js
push
cmpsl
xchg
lret
cmp
icebp
push
xor
xchg
mov
ja
mov
lea
mov
cmp
sub
mov
ret
jae
addr16
sub
mov
adc
and
ljmp
in
xor
outsl
out
jmp
pop
push
ucomiss
inc
add
push
inc
test
sub
push
test
fucomip
xchg
movsb
sbb
jne
pop
mov
int3
stos
int
das
push
cmp
movl
and
cmp
or
dec
pop
mov
lea
mov
add
scas
dec
outsb
or
loope
mov
fwait
push
das
mov
jne
pop
dec
mov
stos
mov
and
mov
add
dec
jns
add
xchg
and
shrl
in
addr16
cmp
out
xor
xor
mov
mov
jle
in
in
lret
sub
and
xchg
ja
adc
cmpsl
clc
xchg
and
shl
mov
enter
and
xchg
adc
stos
adc
pop
and
or
xchg
mov
scas
loop
insl
push
mov
inc
adc
xchg
lret
iret
and
out
pop
icebp
mov
inc
lods
jmp
push
inc
test
scas
or
mov
dec
cli
mov
xchg
out
dec
cltd
sbb
sub
test
outsl
ds
jmp
mov
stc
test
leave
testb
xchg
sub
xor
jge
xchg
cld
sbb
dec
imul
jp
or
popa
repz
mov
sahf
test
pop
pusha
fbstp
loopne
lahf
scas
cmp
cmp
xchg
and
cmpsb
insb
pop
fwait
in
lock
jne
xchg
test
jno
dec
jg
sbb
pusha
dec
das
cmp
ds
pop
mov
and
stos
sbbb
jo
test
cmp
into
inc
cmp
mov
sarl
scas
or
pop
inc
mov
push
xlat
mul
inc
test
imul
xchg
outsb
sbb
in
daa
fnsave
rclb
cmp
pop
in
add
dec
sbb
adc
xor
xor
insl
sub
pop
pop
jns
fs
loop
mov
xchg
sub
push
sahf
or
pop
test
dec
testb
inc
test
outsb
mov
aad
cmp
and
push
pop
test
das
mov
std
fcomp
xor
divl
cmp
lret
mov
mov
inc
sbb
fnstcw
aaa
xchg
jb
xchg
sahf
dec
outsl
xchg
push
xchg
loop
hlt
ss
lods
jl
fs
ss
lods
jnp
lods
lret
mov
jl
out
addr16
add
jg
fmuls
xchg
adc
or
jge
mov
jns
imulb
pop
mov
iret
adc
cmp
xchg
lret
xlat
mov
xchg
lahf
out
sbb
pop
mov
imulb
into
mov
in
jecxz
push
sti
arpl
sub
aad
enter
fsubrl
dec
aad
push
inc
test
mov
cmp
stc
xchg
movb
mov
js
repz
dec
movsl
lods
adc
and
and
out
push
outsb
jns
aas
mov
or
std
mov
jb
sub
dec
xor
add
jge
mov
aas
inc
std
or
mov
data16
test
xorl
mov
mov
lret
sub
mov
sti
cmp
sti
mov
sarl
mov
insl
in
pop
dec
jae
inc
cmpsl
nop
mov
popf
icebp
in
ljmp
out
push
mov
cmp
int3
pop
pop
cmc
sbb
mov
xchg
sub
call
sbb
jg
push
lock
popl
clc
dec
sahf
jo
into
or
or
sbb
fs
dec
mov
xchg
lret
push
add
jge
cmc
xor
xchg
fsts
xchg
sar
dec
leave
ljmp
mov
fs
rcl
cmpsl
pop
pop
repz
stos
mov
and
add
fxch
aam
xlat
jnp
sbb
mov
xor
jmp
mov
rolb
cld
pop
mov
mov
iret
inc
js
out
hlt
imul
popa
jmp
jne
push
mov
pop
aaa
out
add
xchg
ficompl
jge
stos
xchg
outsl
repz
out
mov
or
gs
jp
in
mov
scas
mov
pop
cmp
fldenv
in
divl
filds
mov
xchg
lea
es
andl
ret
sbb
stos
xchg
xor
xor
pop
insb
cltd
lods
xchg
push
ja
inc
dec
test
mov
adc
es
iret
test
push
ret
out
sub
mov
stos
jae
jns
inc
xchg
xchg
push
cmp
pop
xchg
inc
xor
sbb
push
cmp
fimuls
fisubs
add
sar
es
dec
cmp
hlt
rcll
int3
jbe
xor
jge
aaa
in
sbb
repz
jle
das
add
int3
mov
pop
push
cli
ret
insl
lea
scas
sbb
pop
and
movsb
inc
xor
cmpsb
out
fs
xlat
push
xor
jo
daa
nop
push
mov
pop
sbb
jno
adc
inc
dec
sahf
ss
pop
sahf
movsl
mov
pop
ficomps
pop
test
test
add
aas
inc
lret
push
dec
gs
clc
fcmovnu
js
aad
pop
xorb
push
mov
loope
pop
mov
subb
xchg
push
outsb
jle
push
outsb
xor
dec
or
test
sbb
adc
add
sbb
xor
fwait
push
sub
cld
sbb
clc
clc
incl
clc
nop
fstps
cld
adc
sti
mov
push
test
mov
adc
jns
rcll
jmp
bound
pop
mov
jb
les
cltd
mov
div
aad
lret
pushf
rol
inc
mov
test
rorb
pop
stos
cmc
pop
xor
adc
or
loopne
daa
stc
outsl
pop
fs
dec
repnz
popa
cmpsl
lods
mov
ss
pop
mov
cli
xor
jne
scas
ficoms
jb
dec
or
jmp
ljmp
loopne
pop
adc
enter
fidivrs
adc
mov
sbb
sbb
cltd
imul
rcrb
sub
sub
dec
mov
sti
adc
xlat
imull
outsb
nop
inc
jbe
dec
xor
lahf
inc
mov
dec
jns
mov
sti
adc
or
call
testl
push
adc
xor
adc
mull
mov
inc
or
fldt
dec
test
inc
shl
push
mulb
ret
fdivr
outsb
push
repz
call
and
orl
sbb
sarb
loope
jmp
fdivs
call
mov
mov
mov
and
add
rorl
je
insl
lret
insb
push
dec
outsb
inc
xchg
mov
leave
cld
fsubrl
add
push
sbb
mov
aas
inc
sub
fdivs
rorb
xor
aam
jle
ret
xchg
xlat
xchg
push
mov
mov
clc
xchg
sbb
jge
jnp
fs
lods
or
ds
scas
adc
fcompl
paddsb
sub
loopne
aaa
cltd
mov
jbe
lahf
sub
mov
sub
movsb
test
jbe
xchg
mov
sbb
rcll
pop
or
or
stos
adc
add
hlt
ret
arpl
ret
or
mov
mov
adc
sbb
ja
in
ja
xchg
aam
push
hlt
xchg
inc
bswap
rorl
cmp
inc
lds
fcoml
out
fistpll
jnp
inc
out
in
or
xchg
mov
pop
jg
and
mov
mov
mov
xchg
test
mov
jle
shlb
pop
ffree
fistps
in
xchg
sbb
shll
adcl
push
inc
jb
popf
cmc
clc
insl
mov
adc
add
dec
stos
nop
insb
add
jb
push
cs
test
and
shlb
mov
repnz
jecxz
inc
ret
xchg
pop
pop
fimull
inc
ret
jae
packssdw
shrl
lcall
pop
or
xchg
popf
ds
sbb
dec
mov
add
fimuls
dec
lds
and
mov
lahf
incl
in
dec
hlt
sbb
arpl
xor
jge
mov
icebp
aaa
loope
pop
or
mov
adc
mov
pop
push
sbb
xor
xchg
int3
scas
scas
negl
or
movsb
lret
and
push
mov
pop
cmpsb
jb
clc
in
mov
cmp
cmp
cmp
jl
add
dec
or
lds
and
xchg
cs
xchg
arpl
adc
test
into
fsts
inc
pop
mov
push
js
xor
pop
shll
mov
dec
loope
call
cmp
jbe
ret
outsb
loope
add
leave
jbe
sbb
xor
dec
mov
add
pop
dec
xor
push
sub
dec
arpl
sub
lret
mov
rcll
test
sub
lods
das
test
dec
pusha
addb
jmp
mov
aaa
mov
xchg
jae
xorl
mov
fcoms
divl
jg
rcrl
mov
sbb
or
lds
xor
dec
outsl
dec
mov
inc
stc
sbb
loop
into
push
mov
out
mov
lods
cwtl
mov
mov
int3
push
outsb
fbstp
xor
xchg
push
dec
sbb
decb
push
and
sub
add
jo
adc
xlat
fildll
int3
adc
out
ret
pop
xor
mov
insb
xlat
mov
fldt
mov
and
in
mov
jb
cs
fcomi
aad
pop
or
and
dec
xchg
mov
adc
jp
sub
jnp
repz
mov
or
call
jbe
outsl
pop
mov
outsl
adc
or
inc
daa
pop
lcall
inc
sub
mov
leave
mov
dec
and
mov
jecxz
jle
mulb
daa
std
adc
std
push
mov
pop
xor
loopne
icebp
dec
outsl
mov
xchg
sbb
xchg
les
das
out
popa
mov
imul
lret
stos
pop
insl
mov
inc
dec
imul
mov
fwait
int3
cld
pop
mov
lret
les
add
jae
fstps
xchg
ret
cmpsl
rcrb
pushf
sub
rcl
mov
add
je
push
jbe
push
clc
ret
xchg
loopne
mov
popa
jnp
subb
mov
adc
adcb
xchg
add
dec
jns
add
add
cltd
call
aad
mov
mov
jne
xchg
jge
test
lahf
xchg
icebp
mov
pop
mov
test
push
and
test
iret
iret
pop
add
iret
imul
cmpsl
xlat
xor
mov
das
mov
push
cmp
pop
xor
mov
adc
test
clc
xchg
inc
cmpsb
outsl
rorb
lds
daa
xchg
fwait
jne
mov
mov
cs
mov
jne
jns
into
in
jp
xchg
or
jb
sub
dec
fnsave
sbbb
icebp
mov
and
jle
cmp
out
cs
cli
stos
xchg
jle
and
lock
pop
mov
and
fistl
pop
mov
popf
sbb
in
mov
push
mov
mulb
popa
nop
adc
jnp
dec
xor
or
js
mov
mov
push
lods
sub
ja
inc
int
or
call
cmp
das
test
test
xchg
hlt
outsb
adc
sbb
imul
fsubrp
std
das
lds
sub
ja
repnz
cs
pop
ja
hlt
xlat
shlb
add
jbe
and
jge
sub
sbb
nop
ret
aaa
mov
dec
dec
add
pop
pop
xchg
mov
shlb
or
jo
data16
scas
jo
and
aas
sub
movsb
push
insb
push
add
adc
movsl
nop
sub
data16
cmp
gs
sbb
popf
int3
arpl
ja
mov
movsl
leave
jb
and
sub
cmpsb
fnstcw
test
cltd
into
or
sti
es
xlat
xchg
les
inc
adc
pusha
es
add
stc
push
xchg
leave
loope
xchg
inc
sub
dec
push
cmp
leave
ficoml
movsb
mov
jp
cltd
cmp
jg
test
scas
add
imul
push
cs
xor
lret
sub
dec
push
imulb
lcall
or
mov
sub
mov
xchg
sub
sbbb
mov
das
and
sbb
cmp
andb
ss
das
fidivrl
packuswb
lret
outsb
shl
lahf
mov
shrb
fidivrl
cmc
mov
outsl
cs
push
fnsave
fs
xor
xor
mov
lods
jg
test
out
popa
xor
cltd
insl
add
pop
idivb
enter
mov
xchg
gs
mov
cli
add
adc
add
jo
lea
js
add
sbb
mov
push
cmp
sub
xlat
out
repnz
daa
dec
fisubs
and
sub
jo
lahf
cs
mov
mov
mov
inc
loope
mov
mov
fcmovb
shlb
cmp
scas
arpl
push
add
xlat
jo
in
inc
and
cmc
test
pop
push
xchg
in
pushf
push
dec
lret
or
pop
cmp
daa
mov
jge
aas
fidivl
shlb
mov
xchg
in
je
fsubl
test
popa
std
mov
inc
in
mov
and
mov
je
ja
fwait
dec
pop
xchg
adc
cs
mov
out
lock
jnp
das
pop
jbe
mov
and
pushf
pushf
shrl
push
outsb
insl
cltd
mov
fs
lea
cs
jb
mov
lret
xor
loope
sbb
dec
ffreep
mov
mov
shrb
pop
lods
sub
inc
aam
push
dec
push
cmp
fdivrp
std
xchg
jne
pop
sbb
ljmp
xchg
lods
fistps
pop
out
jne
dec
xchg
lahf
cmp
push
xchg
fldcw
add
pop
inc
cltd
pop
shll
cli
enter
mov
inc
test
pop
push
xchg
movb
jl
pusha
cmp
rcrl
pop
xlat
add
sub
jmp
mov
xchg
xor
jbe
mov
cltd
ret
xchg
or
lock
xlat
xor
mov
inc
cmp
jecxz
fcmovu
and
push
fidivl
out
lock
xlat
dec
out
popf
popa
out
push
xchg
lods
jns
pop
insl
in
inc
and
out
cli
loop
repz
or
jns
in
xor
mov
shl
mov
out
jno
jle
xchg
mov
out
ds
xchg
mov
popf
aam
xchg
ret
lods
nop
jmp
push
pop
out
xorl
push
lret
popf
inc
mov
mov
dec
stos
stos
loopne
inc
and
pop
insb
fidivl
jns
outsb
shlb
adc
ljmp
dec
xlat
pop
int
inc
inc
fdivs
mov
or
stos
dec
movb
xor
rcll
dec
ret
rcrl
lea
pushf
mov
push
rclb
mov
inc
es
leave
sarb
das
hlt
mov
fldenv
cld
insl
jbe
movb
and
or
push
add
pop
int3
dec
jno
pop
push
mov
xor
dec
adc
aas
and
mov
jl
xor
jmp
in
mov
inc
daa
lea
sub
mov
push
pop
jl
push
inc
ds
std
movsl
shlb
lahf
vaddps
xchg
push
fs
ret
jle
lcall
js
lods
adc
push
lea
popf
push
sub
imul
sbb
cmpsl
out
adc
jg
sub
movzwl
sbb
xor
sub
xor
int
mov
popl
jne
inc
lcall
add
xor
dec
pop
sahf
xchg
popa
sbb
mov
mov
icebp
in
gs
imul
gs
cmp
bound
lret
imull
mov
lret
inc
test
or
adc
push
icebp
fnsave
add
scas
outsl
or
xchg
scas
stc
mov
pcmpgtb
mov
data16
lods
data16
rorl
addr16
cli
int3
xchg
divl
xor
ret
pusha
or
push
pop
xor
or
bound
pop
sub
fs
adc
push
faddl
mov
bnd
xlat
aaa
push
xlat
cs
shrb
lcall
in
jl
sti
pop
push
sahf
and
aad
aad
nop
mov
or
push
mov
call
sbb
movsl
adc
fmuls
addr16
je
jns
sbb
je
idiv
rcrb
mov
inc
pop
mov
add
jb
adc
je
movsb
xchg
hlt
jb
imul
add
std
arpl
mov
imul
inc
inc
outsb
fistpl
call
mov
insb
cmp
stc
xor
movsl
mov
mov
xlat
and
daa
aad
shl
jnp
cmp
xor
dec
pop
addb
and
cmpsb
icebp
dec
ds
pop
adc
mov
fs
and
test
mov
push
sub
lods
aam
ret
jns,pt
push
cld
inc
cmp
clc
cmp
xchg
pop
xchg
push
popa
test
stos
adc
out
fdivs
movsl
xchg
out
add
wbinvd
push
cmpsb
cltd
push
adc
lds
xor
cmp
mov
fwait
xchg
xlat
shrl
pop
or
dec
stos
js
test
add
inc
and
incl
dec
xor
or
mov
mov
mov
fdivrl
cli
pop
test
emms
mov
rorl
sbb
inc
aam
out
mov
jno
dec
in
or
aaa
lea
out
jl
add
loopne
jns
mov
in
pop
rclb
cli
cmc
ljmp
adc
jp
test
mov
es
mov
pop
or
in
xchg
pushf
pusha
xor
rclb
bound
xchg
sbb
mov
add
push
lea
mov
and
gs
stos
push
enter
enter
mov
jnp
movsl
in
scas
shl
add
mov
adc
iret
add
lret
pop
add
filds
mov
push
in
fistps
push
xor
ret
fstl
push
das
sahf
imul
xor
mov
shrb
mov
cwtl
xchg
dec
mov
ret
cmp
jbe
loopne
jge
stos
xor
ja
cmc
aaa
push
decb
or
push
add
testb
cmp
pop
cmc
push
aam
xchg
dec
xor
cmpsl
xlat
cwtl
scas
xchg
and
cmp
add
movsb
insb
negl
cmpsb
sti
push
scas
in
jae
xchg
enter
daa
mov
lret
mov
jl
fsubrs
dec
pop
enter
xchg
and
lea
push
imul
push
das
mov
inc
push
inc
xor
pop
xchg
inc
loope
pop
pop
jle
push
push
cmp
jae
andb
xor
outsb
or
adc
pop
imul
andb
xchg
sbb
jo
add
or
xor
xor
cwtl
xchg
sub
pop
hlt
pop
aaa
lcall
sti
fsub
lods
lods
sub
setle
sub
test
in
jg
loopne
mov
fdivr
mov
in
ret
mov
mov
or
jle
sub
test
in
fs
cmpsb
xor
and
sbb
add
sbb
xor
xlat
outsl
in
test
arpl
inc
mov
rcll
rcll
sbb
mov
icebp
popa
cli
ljmp
xor
sahf
mov
push
push
icebp
or
and
loopne
out
pop
dec
or
imul
xchg
dec
fnstenv
sbb
test
sub
int
in
cli
data16
into
cmc
inc
subl
aad
push
out
nop
mov
jnp
mov
fwait
inc
pop
ret
mov
call
jae
adc
jge
loop
clc
repz
mov
imul
stos
cmp
pop
addl
inc
jns
out
aas
sbb
addr16
test
mov
imulb
pop
push
std
or
cwtl
aam
scas
mov
xor
mov
mov
movsl
cmp
out
fisttpl
leave
mov
push
adc
push
add
mov
mov
roll
dec
es
inc
in
dec
pop
adc
pop
mov
and
adc
mov
pop
or
mov
hlt
push
js
aam
xlat
sub
je
adc
push
ret
int
adc
inc
enter
sbb
jae
cmc
xchg
popf
mov
dec
cmp
popa
ror
lods
mov
pushf
mov
cmp
push
dec
mov
mov
cltd
cmc
inc
test
lds
xchg
xchg
and
sbb
mov
pop
mov
mov
addr16
push
or
lret
mov
sti
sub
or
test
mov
pop
das
mov
aam
inc
pop
arpl
dec
dec
and
or
add
fwait
cmp
std
dec
shlb
mov
popw
out
pop
sbb
sbb
push
in
lret
cli
std
xchg
jge
insb
sub
cmp
scas
addr16
int3
jp
fdivrl
mov
int
mov
pop
add
cld
mov
pusha
lret
vphaddudq
xchg
imul
xchg
xchg
out
jno
xchg
push
lcall
or
mov
or
ds
and
mov
jnp
idivl
xor
xchg
push
pop
aaa
adc
pop
and
iret
pop
movsl
scas
ret
ss
cmp
adc
outsl
jae
push
int3
inc
xchg
add
or
mov
mov
pop
xchg
stc
xlat
xchg
jns
imul
and
rolb
scas
bnd
test
lods
add
dec
scas
cmp
jbe
insl
dec
jge
rclb
fisttpll
jge
cmp
dec
xchg
and
pop
addr16
imul
mov
add
scas
and
mov
movsb
idivl
notl
push
sbb
jle
mov
pop
fwait
adc
push
ss
mov
pop
cmp
cmc
mov
xor
jl
sbb
aas
ds
add
test
lahf
add
mov
cli
movsb
dec
inc
xchg
dec
in
and
lret
adc
js
jne
pop
mov
mov
int
jmp
push
cmp
jp
outsb
insl
std
rcll
xor
movsl
jb
sub
aaa
xor
mov
sub
sub
jae
and
scas
fs
pop
fsubrs
test
adc
sub
push
jg
fcomps
mov
bound
mov
cld
lahf
and
rcrb
sub
jo
inc
int
imull
pop
shll
rcrb
rcl
inc
add
mov
mov
or
mov
enter
sbbb
and
mov
lods
xor
loopne
mov
add
push
icebp
cli
xor
xor
loop
int
dec
jg
or
fisttpl
add
loopne
jl
pop
imul
adc
inc
imul
xchg
fnstenv
xchg
xor
xchg
sbb
shl
xlat
lods
add
sbb
inc
in
gs
jle
out
lods
aad
xor
nop
mov
dec
inc
sbb
fsts
xor
repz
sarl
or
stc
and
call
jb
nop
pop
subl
cwtl
jmp
or
inc
imul
cs
mov
xchg
jb
cmp
dec
cld
nop
movsb
je
xor
divb
insb
std
mov
call
mov
andb
add
cmpl
dec
fstpt
mov
mov
mov
xor
arpl
mov
inc
jl
and
pop
add
xchg
sbb
insl
dec
outsl
push
dec
push
cmp
cmpsl
mov
mov
idivl
mov
lret
and
mov
bound
push
pop
adc
push
sub
ret
fistpll
push
cmpb
clc
scas
ret
rcll
mov
ja
lods
and
sarl
sahf
cmp
push
and
arpl
data16
aas
nop
and
mov
nop
xchg
test
dec
xor
test
or
out
sbb
add
pop
popa
sti
adc
push
scas
and
add
jnp
jle
jle
arpl
or
sbb
cli
stc
ss
or
mov
bound
xor
push
xor
xchg
dec
adc
filds
pop
fimull
rcrl
addr16
dec
mov
ss
idivb
mov
dec
stos
out
cmp
bound
sbb
jns
fldcw
mov
dec
out
dec
xchg
sub
xor
jge
ljmp
mov
cmp
mov
cmp
jle
push
cmp
add
add
scas
xchg
jbe
xchg
cmp
sbb
push
lock
xchg
mov
fldl
adc
popf
mov
enter
and
cmp
and
xor
jnp
or
scas
xchg
jmp
ficoml
cli
sub
mov
insb
dec
pop
jb
inc
inc
stc
and
inc
cltd
jae
or
sbb
lret
adc
xchg
push
cwtl
jge
lods
xchg
dec
imul
fcmovnu
ja
cmp
lods
sbb
mov
mov
repnz
leave
aaa
pop
pushf
hlt
xchg
dec
sti
arpl
outsb
mov
test
jns
pushf
fwait
mov
add
enter
mov
addr16
dec
sbb
xor
pop
cwtl
sbb
push
in
and
sbb
cmp
rol
push
cmp
sbb
in
inc
mov
les
mov
ljmp
xor
mov
movsl
in
out
and
scas
rsqrtps
cmp
scas
clc
fistl
jg
and
lock
jecxz
push
js
mov
pop
cld
xchg
push
mov
loope
mov
and
loope
pop
outsb
shl
xchg
adc
adc
imulb
pop
orb
sbb
stos
add
stc
add
dec
dec
iret
push
cmp
int
cs
sub
loope
pop
repnz
repz
mov
sub
sbb
test
popf
lret
jg
sarl
mov
push
scas
mov
lods
or
mov
icebp
xor
sti
shll
mov
out
rorl
mov
cmpsl
lcall
jg
dec
into
and
es
test
add
outsl
stos
insl
mov
stc
scas
xchg
test
test
clc
adc
and
inc
jnp
sbb
mov
xchg
addr16
gs
xor
int3
dec
or
mov
cmpb
xor
sbb
es
lret
adc
call
in
xchg
hlt
jl
sbb
sti
dec
icebp
xlat
jmp
cvtpi2ps
and
mov
shlb
inc
cs
and
aad
jns
nop
addr16
dec
outsb
stos
add
aas
das
push
jg
mov
clc
jno
pusha
pop
cs
icebp
sbb
xor
rcll
add
xchg
jmp
in
pop
leave
imul
scas
mov
aas
push
or
jb
push
and
adc
cmp
dec
jecxz
fbstp
std
pop
dec
rcrb
jnp
jge
sub
sub
fucomi
fstpl
mov
push
repz
ds
inc
xlat
out
mov
cld
outsl
mov
shl
int3
adc
ret
xchg
insl
xor
test
mov
into
testb
scas
lret
out
pop
dec
mov
imul
nopl
or
mov
aam
sub
ret
jmp
arpl
mov
dec
clc
jmp
adc
popa
out
dec
xchg
lods
mov
arpl
add
ret
xchg
mov
mov
sub
push
mov
cltd
sti
mov
push
mov
movsb
faddl
lcall
xchg
adc
shll
pusha
int
or
pop
stos
inc
bound
jb
mov
lcall
cmovp
jno
xchg
jecxz
mov
movsl
imul
sbb
fbstp
mov
inc
cltd
mov
or
jae
fwait
xchg
enter
in
jne
sar
inc
inc
mov
bound
xchg
in
mov
jno
andl
or
mov
addr16
pop
aam
and
sarl
outsl
xor
jge
in
and
pusha
add
ret
mov
xchg
psrlw
inc
scas
loopne
jge
movsl
subl
xor
sbb
push
mov
cmp
and
sub
jnp
out
scas
cli
fsts
in
shll
sbb
fidivs
pop
test
ret
or
adc
pop
push
or
xchg
popf
xor
mov
push
fimull
jl
sbb
mov
cld
pop
ficomps
cld
lret
add
loop
and
jecxz
leave
scas
mov
hlt
fidivs
stos
arpl
jecxz
jge
lcall
pop
mov
or
push
add
aam
pop
cmpb
xor
mov
dec
and
out
movsb
or
rolb
push
adc
sub
ror
lods
mov
cmp
jno
lahf
adc
inc
dec
cmpsl
jg
ds
fiadds
movsl
in
push
in
and
cmp
in
jp
movsl
mov
cmp
xor
cmpsb
ret
or
js
lea
push
xor
stc
push
cmp
cmp
cmp
in
adc
jmp
xor
pop
jnp
sbb
out
add
push
mov
push
cmp
iret
adc
pop
jno
pushf
lcall
fsub
and
pop
sahf
and
andb
sarl
rcll
mov
pop
adc
xchg
scas
xchg
and
shrl
adc
jbe
lods
fdivs
jp
lret
dec
shl
lret
xor
sbb
sub
xor
jbe
mov
sbb
in
mov
adc
shll
push
jle
add
mov
mov
cwtl
das
sbb
nop
cmpsl
and
in
and
jecxz
cmp
sub
xchg
loopne
loope
pop
test
out
sti
imul
inc
add
mov
xchg
mov
inc
sbb
ss
sub
sub
sub
sub
cmp
add
lods
or
adc
int
mov
inc
dec
neg
lret
les
push
xchg
jno
sbb
jae
call
jo
ss
out
inc
adc
xor
test
pop
insb
lret
cltd
inc
ja
movb
jae
cmc
dec
xchg
xor
int
test
mov
testl
cwtl
add
lods
dec
mov
jno
icebp
dec
inc
fistpl
sarb
mov
stos
dec
mov
imul
gs
das
and
mov
mov
sub
xor
shll
lds
sbb
jp
dec
inc
mov
mov
movsl
shll
lret
pop
xchg
ret
mov
jo
aad
adc
mov
rorb
sti
sub
adc
jne
mov
push
or
sub
sbb
mov
xchg
pop
cwtl
iret
ljmp
xor
pop
fucomi
fs
and
fldenv
jne
push
int
xor
test
test
fildl
add
sub
mov
cmp
rorl
dec
subl
stc
idivb
mov
cli
mov
xor
or
jb
xor
adc
mov
call
cmpsb
cmpsl
pop
xchg
inc
sub
push
pop
dec
stc
shll
xor
lcall
push
jne
lock
pushf
push
in
out
clc
dec
int3
bound
daa
xor
inc
mov
in
or
data16
insb
test
or
imul
jp
lods
xchg
mov
fisttpll
mov
sbb
in
jo
pusha
pushf
daa
dec
fistpll
imull
loop
fucomip
adc
cmpl
jno
cltd
leave
outsl
popf
push
mov
mov
lret
stos
pop
fimull
jmp
pop
insb
icebp
add
jnp
test
pop
mov
in
mov
cmp
jl
mov
leave
test
pop
loopne
jge
movzwl
jae
xchg
mov
or
adc
inc
xor
fiaddl
jmp
sbb
dec
push
imul
loop
mov
fsubrp
rcl
fidivrs
in
sub
and
jns
arpl
int
jge
pop
ljmp
dec
dec
or
mov
add
sub
out
mov
push
adc
mov
adc
shll
xor
cmpb
sarl
cwtl
std
pop
push
fcmovnu
xor
pop
stc
lret
in
rsm
aad
dec
lds
cmp
mov
jl
loope
dec
push
lcall
repz
and
lock
pusha
mov
push
mov
dec
test
pop
outsl
sub
imul
js
notl
jp
imulb
add
sub
jle
cmp
lcall
cmpsb
jecxz
rol
fmull
outsb
outsb
imul
adc
add
cmp
xor
push
or
inc
push
ja
xor
mov
shlb
pop
lock
or
push
mov
int3
fmull
push
sahf
aam
test
jg
xlat
sbb
pop
cltd
mov
mov
push
call
mov
push
imul
xor
lret
popf
sarl
mov
xchg
rcrb
fisttpll
pmaddwd
in
ja
lret
outsl
push
sub
stc
sbb
mov
adc
lods
dec
dec
frstor
mov
inc
ret
cli
lret
fsubs
xor
cmp
or
xor
gs
mov
pop
enter
int3
push
and
popa
sub
scas
xchg
pop
add
jb
sbb
jno
daa
xlat
imul
in
cmpsb
pop
jae
mov
paddsb
push
xor
sbb
mov
pop
fsincos
xchg
sub
repz
sub
and
call
out
jmp
pop
lcall
pushf
push
add
xchg
lea
and
inc
nop
jb
in
fnstcw
xchg
nop
mov
andl
iret
jns
jecxz
jnp
idivb
sub
cmp
stc
xchg
addl
and
fisttpl
sub
or
sti
lock
das
add
mov
and
sbb
roll
fdivrs
add
inc
sub
xchg
cmp
jns
jl
sbb
xor
push
lret
int
xchg
mov
ja
cmp
mov
add
jo
dec
shlb
mov
sub
xor
aam
add
ret
push
lret
rcr
fldl
repnz
pop
and
xchg
cltd
mov
popa
sbb
shrl
mov
icebp
clc
xchg
dec
inc
jne
mov
adc
in
xchg
add
ljmp
popf
inc
mov
test
push
dec
push
repnz
xchg
rcr
cmp
bound
aas
push
cwtl
jl
add
int3
push
sbb
xor
mov
or
js
add
jae
sub
mov
dec
lods
lahf
ja
add
inc
lret
aaa
xor
fwait
hlt
jp
pop
in
jne
subl
xlat
mov
pop
jns
sbb
ss
pushf
out
stos
lock
and
lahf
sarb
mov
mov
in
mov
mov
jp
sbb
dec
pusha
aaa
and
push
cmp
out
jmp
adc
or
lods
push
pop
cmp
sub
cwtl
cwtl
push
or
test
add
push
insb
pop
and
mov
push
jnp
or
mov
pop
ret
dec
pop
pop
mov
inc
sbb
inc
jae
dec
adc
orl
inc
scas
push
sbb
repz
repnz
out
imul
push
fisubs
lds
jmp
repnz
sbb
aaa
jp
leave
pushf
inc
jb
je
mov
jbe
sub
push
mov
mov
or
add
xorps
sarl
pop
loopne
push
push
cmc
and
xor
outsb
iret
jge
out
and
and
fistpll
pop
fbld
cmp
in
divb
enter
daa
xchg
lahf
jno
popf
push
jl
jne
dec
test
jge,pt
leave
movsl
cli
add
and
arpl
push
mov
ljmp
mov
inc
shll
xchg
sub
mov
push
dec
mov
pop
mov
ss
push
fldcw
xchg
dec
cmp
sub
outsb
stc
lcall
mov
lret
in
addb
in
add
xlat
pop
xor
enter
sub
out
outsl
mov
xchg
push
or
fdivl
out
jnp
sbb
sahf
imul
sbbb
jg
fiadds
or
mov
pushf
jno
daa
mov
and
inc
fnstenv
int
inc
cmp
sub
nop
imull
pop
sbb
adc
mov
out
into
int
lock
std
mov
xor
mov
loop
sbb
ror
cmc
fs
adc
jp
lret
sbb
mov
pop
mov
xor
cmp
cmc
stos
cltd
or
es
and
jg
loopne
xchg
mov
out
sbb
lahf
in
imul
adc
insl
nop
add
sbb
sbb
lods
cld
pushf
xlat
test
and
dec
outsb
mov
adc
sti
cmp
adc
jb
inc
aad
mov
push
dec
mov
aam
callw
les
in
repz
lea
arpl
outsb
lcall
add
pushf
add
jmp
adc
inc
test
push
aas
xor
and
dec
fsubrs
je
cmp
idivb
push
std
dec
in
lahf
cwtl
jnp
test
mov
cmpsb
and
cwtl
xor
enter
xchg
sbb
push
das
fistps
cld
mov
imul
es
scas
xor
adc
xchg
mov
push
repz
dec
fs
cmp
movsl
mov
jle
je
dec
fistpl
shl
fildl
aam
jo
ret
cwtl
call
inc
push
xchg
fdivs
xchg
mov
popa
xor
mov
sub
jp
nop
dec
push
push
stc
inc
cmovae
cltd
mov
out
mov
xchg
scas
xchg
dec
iret
push
xchg
pop
inc
rcl
ss
inc
pop
or
popa
iret
push
cmp
add
out
ret
sbbl
sbb
xor
addr16
mov
outsb
sub
mov
or
xchg
dec
fbld
inc
pop
mov
or
push
sub
aas
push
shlb
jns
mov
test
aad
push
add
jns
and
in
fmulp
xchg
test
sub
and
imul
insl
mov
adc
mov
clc
mov
jle
mov
in
ss
shl
sub
jbe
push
xchg
mov
jmp
fidivs
sbbl
pop
sbb
popf
push
call
sub
lret
ja
add
shll
jnp
or
scas
and
push
ret
adc
pop
iret
cmp
add
out
insb
fstps
jno
inc
and
inc
dec
inc
movsl
ret
rorl
pop
in
addl
mov
xchg
lods
add
pop
push
es
mov
out
or
lahf
or
mov
into
leave
adc
dec
arpl
inc
data16
sti
int
and
js
cwtl
push
push
or
and
add
int3
mov
push
pushw
fmuls
xor
leave
or
scas
into
xchg
xchg
pop
xor
cmp
jne
scas
js
push
jns
ja
or
daa
test
daa
xchg
add
shrb
dec
hlt
sbb
mov
repz
lahf
sahf
ret
pop
add
push
icebp
inc
jl
pusha
subb
in
pop
jle
mov
pop
clc
sub
loope
and
cmp
fs
xor
rcl
jl
mov
jb
xchg
adcb
add
leave
adc
mov
test
int
or
sub
mov
pop
out
mov
push
bound
scas
fsub
adc
or
das
sahf
or
dec
test
or
lea
ljmp
xchg
inc
jnp
jb
mov
ss
je
imul
out
stos
mull
aad
pop
popf
ljmp
iret
push
sbb
in
into
mov
pop
cmc
fisubl
xor
and
push
stc
mov
inc
fs
aaa
adc
inc
adc
popf
shl
out
add
cli
xor
xor
dec
xchg
or
cmp
dec
iret
aad
and
loopne
lcall
push
sbb
imul
xchg
test
movsb
cli
xor
add
sbb
out
cmp
out
dec
sub
inc
mov
jl
inc
sti
call
test
jbe
nop
rol
in
dec
ljmp
fldcw
pop
les
sub
xor
cld
sbb
in
int3
rcrl
mov
pushf
lods
jmp
cld
in
push
test
inc
or
test
es
aas
shlb
scas
dec
dec
andb
pop
daa
fdiv
ror
std
hlt
call
and
ja
inc
mov
nop
dec
subl
dec
mov
mov
jl
mov
add
lock
dec
das
mov
sarb
fsubs
inc
shll
inc
pop
es
stc
outsl
insl
shll
inc
cmpsl
test
xchg
mov
sub
sub
mov
xchg
stos
aad
mov
test
in
mov
scas
sub
xor
movsb
aam
cs
ret
daa
jmp
mov
clc
aad
mov
pop
inc
push
sti
xor
popa
dec
cmc
out
aaa
sub
mov
lea
push
push
repnz
sub
sahf
push
cmpsl
cltd
xlat
stos
add
mov
clc
dec
ss
test
sbb
sbb
xor
pushf
stos
add
jno
fidivrs
add
add
fwait
lcall
fdivrs
xor
nop
dec
mov
mov
push
mov
lds
ret
test
dec
sarb
adc
cmc
sbb
jne
aam
mov
repnz
xchg
mov
mov
in
inc
jecxz
aam
mov
popl
inc
or
std
and
jecxz
jp
shl
mov
popa
push
mov
jne
pop
stos
test
pusha
insl
jae
fists
xor
jmp
test
or
popf
jnp
cmp
xchg
stos
js
push
and
sti
xor
xor
pop
jnp
cmc
repnz
xchg
pop
push
or
jmp
cltd
out
imul
test
in
xor
dec
inc
test
mov
push
lods
mov
ficompl
test
add
mov
lds
dec
shrb
or
mov
loopne
leave
mov
hlt
or
mov
jbe
inc
loop
enter
xchg
xchg
mov
or
jmp
cli
int3
cmpsl
js
pop
ds
push
mov
or
and
scas
lods
push
stos
and
mov
scas
movsb
cmp
cmpsb
nop
stos
push
in
les
daa
test
mov
jl
sbb
ds
decb
xor
cmp
xor
test
mov
and
mov
jnp
movsl
mov
push
pop
aaa
adcl
sub
inc
iret
cmp
outsb
mov
cwtl
xchg
rclb
cmp
andb
addl
mov
push
dec
xor
sub
add
insl
loope
lcall
add
sub
aad
sahf
scas
push
addl
jmp
mov
mov
xchg
sub
mov
sub
push
push
xor
mov
jns
lret
inc
roll
mov
aaa
scas
into
xchg
loopne
cmc
mov
xor
pop
lahf
outsl
add
push
stc
inc
and
adc
inc
ret
shlw
sub
fs
idiv
fs
xor
push
mov
or
inc
mov
loopne
pushf
mov
ficomps
inc
mov
cmpsl
adc
adc
loopne
ret
enter
imul
sub
les
in
out
or
xchg
repz
aas
and
sub
or
dec
cld
and
subl
mov
sbb
lods
jge
sub
je
aas
call
sub
mov
and
pushf
pop
xchg
push
lods
sbbb
rolb
int3
inc
ss
aas
jno
icebp
jb
fwait
outsl
dec
xor
mov
insb
jecxz
testb
mov
fwait
leave
hlt
cwtl
icebp
loop
mov
das
cmp
lea
popf
fwait
xchg
fcmovnbe
dec
jecxz
lods
push
lgs
push
lock
mov
popf
or
mov
jg
xor
outsl
dec
push
es
mov
xchg
dec
aaa
dec
test
mov
add
push
sbb
push
mov
mov
sbb
int
mov
cltd
ret
je
std
popa
push
aam
inc
sub
mov
repz
adc
and
mov
mov
ds
cmp
mov
out
lock
inc
fcmovnb
vmresume
and
mov
cmpsb
cltd
push
pop
test
jb
mov
xor
dec
popf
lret
cltd
test
or
sbb
in
shl
inc
dec
pop
arpl
inc
stos
lock
subl
sbb
mov
cmp
les
xor
or
test
gs
pop
sbbb
xchg
mov
or
or
dec
add
xchg
adc
out
je
mulb
lods
sbb
sbb
add
and
ljmp
push
add
jp
repnz
mov
aad
mov
data16
xchg
test
sub
or
xchg
cs
push
jmp
je
push
cmpl
push
movsl
cmp
popf
mov
pushf
sti
push
mov
stos
jmp
fsubl
inc
dec
cmc
insb
popf
mov
out
mov
sbb
repnz
sbb
or
ret
in
pop
mov
shll
inc
stos
mov
add
add
je
or
adcb
lods
dec
imul
xchg
fimuls
aad
sub
rolb
mov
xor
fwait
leave
add
xor
lret
hlt
mov
test
outsl
dec
push
sbb
repz
push
aam
or
les
xchg
fwait
int3
xchg
mov
pop
insl
push
rorb
sahf
mov
sub
scas
mov
cmpb
movsb
les
push
pop
in
sub
stos
xor
mov
cmp
test
jl
sub
dec
shrb
test
iret
cmp
fsub
call
test
xchg
inc
jle
xor
jne
pushf
pop
int3
leave
fdivrs
push
pop
push
or
loope
sub
sti
jl
outsb
and
rcll
pusha
enter
xchg
cmpb
add
test
xor
dec
mov
icebp
sub
pop
lcall
loopne
cmp
je
call
mov
add
mov
fisttpll
or
ss
sub
pop
mov
je
ds
rcl
cli
mov
add
cltd
dec
ret
into
jbe
xor
ss
cmp
sbb
loop
sbb
fs
pop
dec
adc
mov
lods
test
out
sarl
test
xor
fsub
cmp
incl
decb
add
aad
or
mov
adc
lock
adc
out
add
and
ret
xor
xlat
test
movsl
add
rcr
push
push
mov
cs
in
jg
jae
inc
nop
mov
popf
dec
test
aam
lahf
xchg
in
pop
aaa
les
push
repz
mov
sub
int
lret
call
jmp
sbb
cmp
push
call
int3
jmp
and
fwait
in
inc
sbb
xor
jb
mov
dec
cmp
jb
jecxz
jecxz
testb
std
inc
mov
cwtl
lods
hlt
scas
mov
sbb
sbbl
adc
mov
mov
lock
ds
jl
mov
dec
dec
mov
inc
lcall
mov
ljmp
xor
cmpsl
cmpl
add
xchg
icebp
fdivs
mov
loopne
ret
sub
mov
xchg
pop
mov
in
dec
mov
insb
test
sub
paddsb
insb
test
ret
inc
mov
push
xlat
mov
xchg
clc
dec
mov
repz
dec
lods
or
cmc
ret
out
xchg
les
punpcklbw
add
xlat
push
cltd
inc
pop
test
in
xchg
stos
dec
add
fldt
sub
add
jae
sub
cmp
pop
push
or
push
and
lahf
add
cmp
xlat
cmp
xor
dec
or
xlat
aad
fists
push
ret
mov
add
mov
cmp
ja
sbb
dec
mov
test
loopne
mov
add
call
mov
mov
shll
push
shrl
aam
jo
mov
loopne
jb
mov
xchg
xor
adc
lods
jp
cs
dec
mov
inc
in
jle
js
in
int
pusha
mov
jge
xchg
add
or
jnp
push
push
ljmp
add
inc
iret
and
insb
or
out
jnp
adc
scas
dec
sbbb
notl
dec
ret
rcrl
cmp
inc
insb
jae
int3
cmp
inc
sub
jle
test
js
mov
fidivrl
lret
pop
xchg
mov
fsubrp
insl
int3
lds
sbb
mov
adcl
leave
js
popf
hlt
mov
pop
gs
daa
push
jge
xchg
sbb
mov
aaa
aad
inc
or
aaa
add
adc
int3
jge
dec
pop
pushf
inc
or
addl
scas
imul
and
push
cmp
daa
stc
push
pop
call
in
xchg
xchg
push
enter
daa
or
cmp
dec
loope
jbe
nop
dec
inc
lcall
push
adc
loopne
sti
sti
popf
push
stc
dec
test
push
sti
dec
inc
or
sbb
aad
jmp
mov
push
or
loope
gs
inc
inc
out
stos
pop
loopne
test
adc
or
xor
or
in
loope
sbb
xchg
mov
clc
cwtl
dec
push
dec
mov
int
dec
cmpsl
sub
ljmp
dec
repz
jno
sub
lahf
ficompl
pop
push
rolb
daa
and
mov
notb
mov
fnstenv
pusha
stos
fcomps
mov
dec
lret
push
shrl
mov
sbbl
pop
je
cmc
sbb
cmp
cwtl
xchg
loop
cmp
fs
adc
sub
lods
insb
cmc
in
mov
out
js
lret
xor
sbb
or
insb
mov
insb
gs
iret
loopne
icebp
es
arpl
dec
imul
mov
lods
sbb
cwtl
push
rcl
movsb
xorl
jmp
call
ucomiss
mov
nop
fs
enter
and
xlat
aas
adc
repz
or
lea
popa
call
push
jl
sbb
in
scas
pop
hlt
jmp
pop
dec
pop
sbb
inc
mov
pmaxsw
scas
and
lods
add
push
je
adcl
daa
mov
mov
inc
cwtl
addr16
into
mov
hlt
jp
dec
jae
in
lahf
adc
jmp
pop
lock
push
mov
std
or
rorl
xchg
pop
insl
xchg
test
inc
out
cmpsl
addb
icebp
scas
out
cld
or
push
mov
lcall
pop
or
outsl
sarb
jnp
sub
popa
rcl
aaa
arpl
push
lcall
clc
xchg
xchg
aam
jns
push
mov
popa
lock
cli
pmaxsw
pop
push
sti
or
movswl
lar
push
mov
xchg
and
mov
fldl
es
mov
xchg
iret
inc
pop
mov
insb
and
and
lds
push
js
pushl
lret
xor
cmp
mov
jp
xchg
mov
negb
ja
test
bound
cli
movsb
or
adc
fbld
dec
lret
xchg
imul
inc
add
bound
scas
add
pop
jno
xchg
rcrl
sub
or
mov
jp
dec
mov
mov
mov
movd
dec
mov
cmp
pusha
jae,pt
fcomip
xlat
loope
aam
mov
or
dec
xchg
or
lods
push
sub
cmp
mov
inc
mov
stos
rorl
and
dec
insb
jae
dec
jnp
dec
mov
push
fdivp
jo
sarb
iret
iret
mov
popf
ret
fstpl
into
adc
jae
adc
push
adc
rep
fiadds
lods
xor
jb
inc
xchg
or
dec
imul
cld
vmovntps
jns
add
adcb
out
call
mov
jbe
enter
mov
shlb
mov
or
jo
add
lods
nop
int3
push
xor
fs
adc
xor
mov
pop
mov
in
push
mov
shll
jns
ss
daa
andb
jno
or
popf
dec
mov
mov
movsl
sbb
xor
test
sub
push
sbb
mov
inc
pop
sbb
pop
hlt
cwtl
gs
ret
loope
les
cmp
xor
adc
push
shll
call
rcll
and
lret
cmp
add
fsts
mov
push
push
and
sahf
sub
sub
stc
lcall
jecxz
mov
out
sub
stos
fcompl
out
jnp
loopne
add
inc
scas
mov
push
hlt
mov
mov
das
cmp
cmp
shll
mov
lret
popa
roll
pop
sbb
enter
lods
or
loopne
sub
in
rorb
mov
jle
data16
lds
or
jmp
cmpb
xor
out
mov
cli
std
xchg
lea
jno
enter
dec
or
das
pop
aam
leave
gs
dec
inc
loopne
cmp
adc
adc
jo
lds
loopne
lock
or
cmp
test
cmp
pop
jmp
sub
or
movsb
outsb
enter
add
add
dec
pop
cli
inc
lds
flds
inc
les
out
sbb
cmpsl
lea
test
jmp
mov
adc
cltd
jmp
push
pop
pop
loope
fadds
or
inc
xchg
sub
jb
mov
sub
je,pn
out
jecxz
scas
into
test
sar
ret
jecxz
and
in
mov
jnp
mov
inc
adc
pop
xchg
inc
mov
cmp
loop
jns
cmp
mov
and
jp
rcrl
fldt
jg
sub
jno
push
mov
xchg
mov
addr16
lret
mov
mov
push
sbb
sub
adc
aam
jb
ret
arpl
aas
adcl
popa
cmpsb
loope
lods
jecxz
test
out
sbb
mov
inc
pop
nopl
addr16
mov
test
mov
sbb
xchg
in
dec
rorb
lea
fsts
mov
fs
cmpsb
stos
mov
lock
add
mov
xor
loope
or
dec
inc
xor
jge
mov
mov
pop
stc
pop
mov
ja,pn
mov
mov
push
jo
or
push
inc
fwait
push
bound
jne
daa
dec
mov
loopne
out
adc
aaa
jns
in
sbb
mov
jmp
movl
insb
jp
mov
mov
or
mov
sub
in
jnp
pusha
flds
fists
cmp
pushl
popa
andl
xor
out
push
mov
pop
or
mov
cmpl
inc
mov
and
sub
scas
adc
pop
adc
jno
ret
inc
pop
popa
mov
xorb
gs
mov
pop
or
outsb
add
inc
test
inc
gs
pop
scas
dec
sbb
in
imul
xchg
lds
fcmovnb
xchg
addr16
mov
sub
and
hlt
ss
arpl
insl
fdivl
fisttpll
jge
lahf
rcrl
sub
or
imul
push
pop
mov
cli
loopne
push
inc
out
pop
xor
nop
pop
subb
out
cmp
and
jle
add
cmpsb
pushf
inc
ljmp
movsb
push
daa
xor
pop
jno
imulb
int3
push
dec
pop
ret
sub
dec
pop
pop
movsl
and
jne
mov
ss
push
jl
aas
test
call
push
adc
mov
dec
fidivrs
wbinvd
pop
xor
test
das
popa
loope
inc
cmc
sub
xchg
adc
or
mov
rol
out
dec
jnp
xor
push
sbb
xor
xor
add
mov
sub
pop
mov
mov
xor
xchg
ljmp
jns
sahf
cmp
insb
cmp
and
pusha
inc
mov
std
enter
ds
cltd
xchg
and
xorb
gs
scas
push
push
fmuls
mov
mov
mov
arpl
es
into
pop
fsubr
cmc
cmpsl
addb
andl
fs
lret
aaa
fnsaves
or
test
cli
xor
xor
inc
cmp
fwait
or
js
notl
push
loopne
xchg
push
pop
mov
int3
imul
push
loopne
outsl
sbb
stos
loope
cmp
hlt
xchg
xlat
and
sub
in
add
pop
push
sub
xchg
and
sti
push
lret
les
lret
nop
sbb
xor
test
fdivr
push
fnstcw
les
test
jmp
call
scas
call
push
add
adc
mov
imul
adc
pop
test
testl
mov
or
push
inc
mov
jae
je
lahf
and
paddq
std
aaa
xor
cwtl
frstor
dec
mov
in
dec
dec
daa
fistl
inc
push
mov
sub
lock
pop
stos
mov
imul
and
scas
mov
es
cmp
dec
and
fstpt
pop
mov
pop
lret
out
mov
test
jb
in
js
pop
dec
daa
jp
in
jno
fyl2x
push
aam
aam
ret
repnz
push
and
pop
fstl
clc
cld
inc
xchg
xchg
push
bound
popa
mov
int3
js
fisttps
out
jl
notb
mov
insb
push
sbb
std
xor
inc
jp
mov
fwait
pop
xchg
cmp
inc
jns
push
fiaddl
mov
mov
setle
push
or
or
add
adc
cmpsb
sub
mov
dec
add
mov
ljmp
insb
lods
ja
push
push
dec
xchg
add
inc
call
push
and
jmp
call
out
lock
jns
int3
sub
sub
test
out
sbb
sub
add
insl
loopnew
enter
cmp
or
or
or
jb
dec
call
cmpsb
fbstp
cwtl
xchg
idivb
and
lahf
cmp
mov
setge
icebp
pop
mov
ret
stos
mov
lret
jmp
dec
jnp
add
scas
jne
mov
insb
xchg
adc
fwait
ret
ret
sub
push
cwtl
inc
addr16
hlt
jae
mov
inc
mov
das
or
jmp
cmp
fsubr
mov
sbb
dec
pushf
imul
mov
mov
pop
mov
jl
mov
fnsave
hlt
sbbl
jbe
addr16
or
pusha
aaa
adc
pop
add
dec
jnp
ds
pop
sub
push
sub
add
scas
or
push
cmp
mov
push
push
cmp
or
enter
daa
or
cmp
jg
jno
add
mov
dec
mov
adc
jb
pop
movsl
sub
inc
lahf
pop
pop
jecxz
dec
push
pop
cmpsb
push
mov
xor
dec
cmp
pop
push
sbb
pop
jb
dec
push
dec
loope
out
cvttps2pi
jno
scas
and
adc
sahf
cmp
addb
scas
sbb
pop
outsb
xor
add
int
nop
lock
dec
and
insb
inc
ss
inc
insb
sub
cmp
push
out
jg
test
mov
lds
imul
dec
sbb
inc
lret
mov
xor
sbb
scas
into
add
jno
outsb
add
outsl
pusha
xor
loop
inc
mov
aam
mov
adc
pop
sti
lods
and
mov
cmp
cli
arpl
xor
pop
mov
and
lret
sbb
fs
and
loopne
pop
sub
sub
imul
jbe
add
stos
cmp
sarb
icebp
cmp
mov
popa
xchg
or
jno
int
cs
shr
sti
out
add
or
aad
stos
adc
and
adc
mov
or
insb
mov
pop
cmp
call
out
mov
xor
or
stc
negb
xchg
js
daa
push
movl
lods
add
mov
jb
sub
dec
sbb
je
lods
stc
jecxz
mov
push
xchg
scas
std
fimuls
pop
mov
in
xchg
mov
insb
mov
fs
mov
ret
mov
das
clc
mov
pop
mov
cmp
sar
jae
es
push
insl
cmp
mov
cmpsl
jg
xchg
xor
cs
mov
lret
inc
add
mov
scas
jecxz
mov
push
xchg
test
shrb
iret
aam
mov
addl
or
aaa
xchg
iret
xchg
xchg
lea
lods
sub
lods
mov
mov
pop
xchg
addl
add
adc
and
test
leave
mov
pusha
rolb
mov
insl
jne
daa
outsb
sbb
cmp
rcll
and
stos
fwait
jg
push
mov
rolb
in
call
xor
dec
sub
mov
inc
lret
test
mov
ja
jo
dec
test
movsb
or
push
cmp
dec
je
fs
sub
iret
dec
push
out
iret
mov
bound
mov
push
sahf
in
nop
imul
xchg
test
std
rclb
bound
sbb
mov
xor
mov
add
std
in
mov
inc
fisttps
mov
jmp
imul
push
je
mov
data16
sub
insb
mov
push
jnp
cmp
fsubrs
leave
adc
ja
ror
je
je
int3
pop
iret
loopne
jb
dec
jae
mov
mov
jp
push
cmpsl
inc
mov
xchg
or
test
fidivrs
rol
sbb
ror
dec
mov
iret
hlt
call
hlt
int3
xchg
fisubl
enter
jge
dec
mov
imul
mov
rcr
popf
or
push
iret
int3
sub
pop
pop
xchg
push
or
cmc
inc
jo
rcl
scas
out
mov
pop
xor
cmp
fisubl
mov
imul
cs
jb
sbb
sarb
push
mov
xor
jl
out
dec
std
sti
inc
ds
inc
mov
and
xor
ja
jl
and
test
jle
push
inc
dec
xchg
inc
adc
pop
jno
js
mov
pop
mov
mov
out
in
loope
mov
fidivrl
push
inc
outsb
adc
clc
sarb
nop
or
stos
sbbb
or
add
xchg
xor
jecxz
pop
daa
outsb
int
sbb
sub
lock
addr16
lcall
fmull
arpl
adcl
in
xor
popa
mov
out
hlt
mov
iret
xchg
mov
fsubl
ss
lret
cmp
add
jp
mov
mov
loope
add
sbb
shl
xor
div
outsl
aas
shlb
aam
stc
mov
lds
movsl
arpl
repnz
mov
sub
pop
ffreep
cli
xchg
outsl
and
notb
jge
cmp
jecxz
cmp
cmpsl
popa
loopne
mov
adc
add
imul
jmp
add
mov
sbb
test
jb
mov
mov
adc
imul
adc
cmp
nop
shlb
sub
fldl2e
addr16
les
mov
xchg
cmp
out
int
and
data16
inc
pop
in
out
mov
icebp
push
jmp
fbld
lret
inc
mov
mov
aas
sub
inc
dec
nop
ljmp
ffreep
notb
rcr
push
stc
pusha
mov
imul
lcall
dec
pop
in
fucomi
ja
mov
outsb
test
repz
das
xlat
xor
mov
fnstenv
add
push
sahf
rorl
movsl
es
insl
and
scas
dec
sbb
xchg
cmpsl
jle
arpl
or
xchg
cld
mov
inc
lret
mov
inc
mov
mov
sub
xchg
rorb
adc
xchg
fwait
ret
adc
push
cmpsb
xchg
inc
frstor
jle
xchg
sarb
popa
jmp
popf
lods
and
cmpb
mov
xchg
enter
addr16
scas
lds
and
sti
test
fs
imul
pop
push
mov
xchg
pushf
adc
out
xchg
or
gs
stos
mov
mov
add
pusha
test
out
lret
mov
push
movsl
loope
mov
xchg
pop
mov
loop
dec
ja
adc
ja
popf
inc
push
test
xchg
push
adc
jne
inc
sbb
scas
dec
jmp
jns
jp
in
inc
xchg
xchg
std
jl
and
jnp
jl
fs
cmp
fimuls
sub
jno
mov
and
bound
sub
in
out
jp
stos
xor
rcll
sub
xchg
ss
stos
adc
xchg
aaa
adcl
aas
dec
push
inc
fucom
stos
popf
ds
and
adc
pop
mov
jnp
leave
insb
scas
cmp
fs
cli
test
or
cld
jns
xchg
insl
inc
jge
inc
jae
movsl
mov
mov
outsb
xchg
push
xlat
jl
ds
sub
mov
mov
ficomps
fdivs
shl
mov
cli
sbbl
cli
leave
lret
mov
arpl
add
aad
jge
repz
mov
push
aaa
nop
pushf
ja
xchg
cld
cmpsb
add
mov
pop
xchg
mov
imul
scas
mov
sub
xor
test
push
icebp
jge
cmpsb
and
mov
bound
jle
sarb
sar
jno
mov
insb
mov
pusha
movsl
cmp
and
xor
cmc
push
adc
inc
and
fadds
pop
xor
pop
mov
lahf
js
ljmp
pop
test
insb
sub
ror
adc
pushl
insb
ljmp
push
xchg
subb
sbb
jnp
add
sub
xor
dec
push
pop
data16
int
xchg
sub
cmpsl
xchg
lcall
pop
fdivrl
imull
jle
sahf
and
mov
dec
jle
jg
xlat
shlb
dec
cwtl
sbb
mov
sub
fdivrs
shrl
lock
popa
inc
scas
mov
fisubrs
sbb
adc
cmc
cld
xor
xor
inc
outsl
push
push
jl
ss
ds
inc
or
or
data16
mov
fsubp
pop
mov
push
cmp
add
test
adc
pusha
sbb
mov
loopne
and
pop
decb
imul
mov
add
and
and
add
fbstp
cwtl
sub
cmp
aam
sti
pusha
jne
cs
pop
jno
sbb
mov
xchg
inc
adc
iret
fldenv
xchg
add
xorb
repz
mov
ds
jne
xor
pop
call
in
stc
pop
cwtl
sbb
adc
fiaddl
add
jmp
pop
insl
in
inc
inc
sbbb
into
xor
lret
jb
sahf
xor
sbb
je
rcrb
aad
sbb
fdivrs
std
sub
push
cwtl
push
addl
lea
adc
or
pop
fistpl
fcom
mov
xrelease
dec
popa
enter
sbb
mov
dec
dec
inc
rcrl
popf
into
insl
or
sahf
dec
adc
xchg
cmpsl
jge
bound
loop
and
loop
mov
mov
mov
push
fcomps
cmpsb
and
rcrb
xchg
sub
cmc
pop
ret
lahf
jge
push
imul
jno
lods
cli
xchg
xchg
pshufw
add
subl
mov
xchg
mov
out
setp
ss
ficompl
xor
ljmp
dec
outsb
mov
test
aam
xchg
mov
roll
dec
pop
adc
jg
mulb
fildl
ficoml
cltd
xor
push
or
stos
mov
leave
out
mov
popf
jl
ja
xor
push
mov
scas
cltd
or
mov
dec
dec
cmp
shlb
mov
fildll
sub
jns
inc
jge
into
dec
notb
cmpsl
adc
arpl
lock
dec
lods
fstl
jecxz
mov
lea
cmp
jb
pop
in
xchg
pusha
inc
pop
aad
lea
fistpl
andl
push
cli
ja
popf
mov
jae
fsub
nop
push
jg
test
and
pop
push
insb
mov
sbb
push
inc
rol
adc
lods
icebp
iret
xchg
xor
ret
cmc
pop
cmp
out
jae
add
sarb
call
adc
inc
movsl
jmp
adc
xchg
mov
je
imul
fidivrs
lcall
rolb
xor
jne
adc
hlt
cli
jmp
mov
pop
jge
addb
jmp
aaa
dec
loope
or
int
int3
jg
pop
mov
sahf
push
shll
dec
xor
cld
lcall
test
cmp
and
movsb
xchg
pusha
stos
push
inc
test
cmpsb
test
fsubr
cld
jae
enter
daa
jge
leave
cmp
or
into
add
js
and
fildl
jo
inc
in
and
dec
lahf
mov
xchg
push
enter
cmp
push
adc
ret
inc
movl
and
dec
mov
pop
das
mov
aas
loope
mov
mov
les
hlt
outsb
xlat
pop
popa
adc
das
mov
cmpb
xchg
sbb
cmpsb
repnz
psubusw
shlb
push
mov
jmp
pop
gs
sti
push
jno
adc
in
imulb
jno
stc
sahf
dec
daa
test
push
mov
mov
add
mov
outsl
outsl
and
mov
cmp
jp
sbb
push
aaa
dec
jecxz
stos
sar
lds
pusha
or
stos
pminub
ret
fisttpll
outsl
std
jmp
loop
mov
stc
sub
je
xor
xorl
lods
adc
pop
out
cli
cld
test
cmp
adc
or
pop
sub
gs
adc
xchg
pop
sbb
adc
xlat
out
push
adc
rcll
add
sahf
cmp
cli
sub
xlat
push
dec
push
sub
push
cmp
aas
subl
loope
cs
iret
aad
mov
xchg
cmp
and
insb
fstps
les
or
movb
lea
sbb
fs
adc
lcall
mov
cmp
lret
push
jl
push
data16
imul
xor
pop
jecxz
push
push
negb
cltd
add
rcr
sbb
cs
mov
jle
rorb
mov
dec
cld
push
mov
insb
dec
mov
call
subl
dec
pop
mov
xlat
int
shl
and
insl
lock
movhlps
cmpsl
jl
jb
imul
jne
xchg
icebp
das
mov
les
jecxz
pop
movl
xor
push
stc
cmpsl
inc
ret
loop,pn
push
sub
and
lock
pop
clc
call
daa
ss
cmp
mov
or
xchg
push
xor
sbb
sbb
jae
xabort
test
sahf
mov
inc
pop
xchg
push
dec
aad
xchg
test
testw
mov
pop
mov
jbe
push
cltd
xor
dec
jne
add
add
pushl
rolb
xchg
mov
mov
mov
or
dec
mov
pop
aas
mov
jle
pop
dec
pop
jnp
inc
inc
fsub
or
or
fwait
stc
jecxz
dec
sbb
cltd
and
insb
jns
bound
jp
jns
mov
in
movsb
ss
fwait
cmc
popf
out
dec
jo
dec
mov
jle
fcompl
dec
mov
test
mov
dec
ret
xchg
push
in
test
fildll
dec
jmp
int3
subl
mov
jno
mov
mov
adc
dec
pusha
insb
cmc
pop
lds
mov
lods
push
mov
hlt
lret
je
lock
inc
ret
fcompl
adc
jae
movsl
inc
inc
ret
inc
loop
dec
add
aad
movsl
inc
and
push
fisubl
rcrb
sub
imul
popa
jnp
lds
mov
rcrb
test
enter
mov
sub
arpl
jbe
adc
jge
hlt
mov
aaa
push
stos
or
jp
and
int3
ljmp
push
mov
xor
push
popf
pop
scas
test
jge
sbb
je
sbb
sahf
push
into
data16
sub
xor
jecxz
int3
enter
daa
jl
fdivrl
add
xor
movsl
sahf
push
jl
jnp
dec
dec
cld
ds
and
cmpsl
out
lahf
aam
out
push
fwait
lods
sbb
fbld
cli
inc
test
iret
minps
or
or
pop
outsb
mov
push
aam
loope
repz
cmp
mov
cmp
lock
push
mov
adcb
sbb
or
dec
add
mov
inc
pop
int
push
scas
sub
popa
lcall
into
fcoml
add
sahf
push
stos
test
push
mov
jg
cmp
cmp
adc
adc
nop
or
lret
cmp
xor
and
xor
rorl
xchg
sbb
cwtl
daa
into
mov
loope
mov
pop
xor
rcrl
outsl
faddl
adc
fs
push
and
ret
imul
insb
ja
lods
mov
sbb
pop
mov
cli
das
lahf
mov
jnp
mov
or
xor
imul
push
adc
aam
adc
inc
xchg
cmp
xchg
sahf
inc
xchg
sbb
xor
out
sub
out
lret
lods
dec
sti
mov
mov
aad
inc
stos
nop
popa
jecxz
dec
mov
fs
les
iret
push
inc
hlt
push
call
jecxz
mov
push
mov
pushf
pop
aam
jmp
dec
clc
pop
mov
mov
push
xchg
xor
inc
inc
aas
or
pushl
loopne
dec
cmc
push
je
and
pop
negb
std
jp
mov
mov
mov
adcl
in
mov
adc
das
je
data16
incb
das
and
cmpsl
push
shll
lea
in
into
mov
push
repnz
or
jb
jnp
test
nop
mov
and
add
or
lret
stos
cli
mov
in
sub
add
les
lods
int3
aam
scas
stc
ret
mov
xor
clc
and
scas
ljmp
cmp
mov
imul
push
clc
xor
addps
jp
pop
adc
cltd
std
sbb
test
pushf
mov
sbb
cmp
cmp
and
sbb
neg
shl
and
pop
data16
stos
push
sti
aam
cmp
mov
aam
ret
add
lea
jne
xor
xchg
or
cli
jle
xchg
jmp
dec
shrl
mov
adc
inc
dec
push
xlat
fwait
sub
dec
add
pop
jne
fmull
cmp
out
dec
pop
int3
bound
int3
ss
push
or
lods
std
or
jmp
daa
out
jp
scas
scas
mov
cmp
mov
mov
roll
pusha
jnp
int3
mov
xor
leave
fs
xchg
sbb
mov
popf
add
cmp
std
in
stos
testb
push
pop
or
push
jnp
xor
scas
adc
push
iret
dec
xchg
adc
mov
ret
cmp
fimull
inc
sahf
add
jae
mov
inc
movb
push
mov
mov
xchg
imul
inc
fiadds
inc
lds
or
pop
movsl
repnz
sub
xor
scas
arpl
pushl
loope
jge
dec
repnz
bound
or
ss
jbe
aad
jbe
adc
loopne
cltd
or
rorb
mov
in
scas
arpl
mov
pop
sti
pop
movsb
cmpsl
adc
ficomps
scas
ret
paddsw
mov
daa
jnp
call
jno
pop
and
sub
mov
mov
and
inc
lahf
repz
imul
sbb
stos
push
pop
inc
test
loop
push
dec
pushf
pop
sub
js
clc
pop
pop
lods
xor
push
ja
loope
dec
ljmp
lds
popf
repz
adc
in
pop
popl
inc
push
add
fadds
xor
and
addr16
int
daa
subl
ss
lcall
fdivrl
aaa
mov
dec
addr16
or
cltd
insl
sbbb
fdivs
scas
leave
pop
mov
push
jb
lahf
mov
push
fdiv
js
negl
xor
es
mov
xchg
jnp
jno
xor
imul
loop,pt
adc
stc
addr16
jo
stos
test
push
out
loopne
lods
movsb
mov
mov
cmpsl
out
jmp
bound
push
in
cmp
mov
or
xchg
dec
sub
dec
loopne
data16
pop
pop
fildl
sub
imul
or
or
loope
xchg
dec
pop
cmp
jnp
pushf
add
enter
shr
adc
add
cs
repz
aad
push
nop
dec
dec
cli
inc
dec
dec
jne
cld
aaa
les
xlat
int
inc
in
sub
call
bound
dec
pop
mov
loopne
adc
enter
cmpsl
ficomps
lds
xor
inc
inc
cwtl
jb
cmpsl
js
jb
rclb
je
aad
jecxz
fdivs
mulb
mov
aas
cwtl
push
lods
mov
subl
mov
and
mov
push
mov
dec
mov
in
aam
roll
adc
xor
add
popl
icebp
lea
arpl
je
jo
insb
mov
rclb
pop
pop
add
rcl
jns
sub
or
ret
dec
ja
push
mov
dec
fnstsw
inc
mov
xchg
int3
and
in
in
dec
popa
inc
imul
mov
into
rcrl
push
shl
cmc
movzwl
cltd
xor
testb
loop
push
sub
test
inc
pop
xchg
daa
popa
rorl
xchg
pop
adc
dec
stos
inc
inc
sbb
fildll
and
add
sub
xor
test
or
sbb
incb
mov
testl
ja
mov
dec
inc
out
roll
xchg
cmp
push
setnp
lds
rcrb
mov
inc
in
sub
jns
test
xchg
cmp
out
and
sbb
fsubl
aaa
int3
jp
in
mov
push
lret
mov
dec
jle
inc
out
in
stos
movsl
pusha
push
cmp
ljmp
jmp
bound
push
push
inc
adc
popf
sub
lea
cmp
inc
stos
imul
cmp
scas
dec
or
adc
in
xchg
ret
aas
pop
loop
cmove
mov
inc
leave
xor
sbb
xor
and
fimull
nop
fwait
xchg
sarb
imul
sbb
cmpsl
out
cli
lds
mov
push
jmp
mov
outsb
sbb
hlt
inc
lea
arpl
and
jge
test
aaa
mov
pop
or
adc
js
cmpsb
int3
rorb
jl
push
xor
or
xor
and
add
adc
sub
push
sub
les
enter
daa
jp
fidivrs
imul
daa
jl
push
rorl
jo
ds
cmp
and
sbb
adc
pop
test
jne
nop
inc
adc
and
adc
inc
pop
push
pop
xchg
jp
pop
in
xor
es
cwtl
loope
int
sub
ds
cmp
dec
mov
add
enter
jp
out
adc
sar
incb
mov
adc
push
or
and
sub
xchg
or
push
jbe
adc
out
clc
sub
xchg
or
mov
pop
test
inc
xchg
cmpb
jecxz
jecxz
mov
inc
inc
and
jne
cmp
stos
lods
push
pop
adc
mov
jge
mov
push
clc
into
push
mov
in
les
xchg
outsl
lcall
stc
push
pop
mov
je
popa
out
stc
data16
pop
lods
mov
imul
xchg
in
in
xor
shll
or
in
sbb
gs
test
pop
jp
add
push
sub
imul
ret
xchg
and
push
sbb
stos
bound
sub
or
cmpb
sbb
add
jns
mov
nop
pop
jae
dec
pop
adc
inc
pop
pusha
inc
fscale
mov
and
xchg
and
rcr
adc
mov
ljmp
dec
lahf
pushf
mov
shr
cltd
ret
pop
pop
stc
jecxz
inc
pusha
ss
inc
pop
add
jb
repz
dec
out
je
fsts
adc
lock
enter
cli
jno
mov
mov
dec
addl
gs
add
mov
xchg
ret
lock
inc
sbb
insb
lret
ss
push
mov
es
shrb
sbb
add
cmpsl
jns
insb
mov
ds
cld
mov
aas
mov
int
sub
shrb
pop
jne
pop
mov
into
push
jne
mov
gs
sbb
cltd
mov
xchg
or
ljmp
int3
lods
cmp
fs
xor
out
push
scas
lret
push
bound
add
inc
fwait
test
xchg
rolb
or
imulb
and
sbb
test
mov
mov
mov
adcb
add
xchg
decl
mov
or
stos
in
sbb
leave
mov
aad
stos
mov
mov
mov
dec
ss
inc
or
jnp
xchg
lock
mov
das
mov
jp
out
or
int3
pusha
lahf
jns
loope
in
stos
pop
xchg
mov
sub
icebp
or
push
leave
addr16
xchg
mov
mov
pop
repz
fwait
out
jle
scas
jnp
jp
loope
mov
test
or
add
mov
jmp
sub
xchg
adc
popf
dec
sub
mov
jnp
pop
stos
fmul
pop
and
insb
ss
xor
mov
sahf
push
pop
push
mov
test
push
ret
sbb
sbb
inc
mov
ljmp
pop
jp
test
ljmp
and
xchg
pop
loop
sbb
inc
dec
imul
sti
fimuls
fwait
lds
loopne
mov
rcrl
push
or
hlt
mov
dec
jbe
fcom
jge
movsb
cmp
pop
push
outsl
aaa
dec
sbb
or
ljmp
jecxz
pop
jb
aad
pop
mov
xor
push
fnstcw
cmp
bound
movsb
mov
inc
ja
mov
sbb
enter
daa
jns
scas
cmp
sarl
and
push
and
loopnew
movsl
pop
xchg
push
and
into
lahf
xor
adc
inc
scas
push
inc
mov
sahf
cs
jns
inc
js
xchg
stc
pop
sub
cmp
imul
cmp
pop
ds
fwait
mov
sbb
pop
mov
add
lock
push
insl
insl
sub
cmp
rcl
pop
popa
sbb
push
int
jl
xchg
xor
sub
es
movsl
push
jle
rcr
xor
mov
mov
shlb
xchg
in
ja
lods
cmp
data16
negl
mulb
rcll
xchg
into
aaa
xchg
fistpll
xor
pop
popa
outsl
jns
mov
adc
or
mov
mov
lods
data16
pmaddwd
pop
fsubrl
pop
daa
sar
enter
add
lock
mov
pop
decb
add
gs
fucom
jle
xor
xlat
adc
popf
stos
imul
adc
xchg
out
sbb
out
cmpsl
xlat
sbb
pop
sub
movsl
in
jmp
sti
lret
aaa
es
aad
xlat
lahf
nop
repnz
inc
jo
jp
xor
cld
les
mov
dec
cmp
lea
cmp
pusha
dec
pop
pop
pop
scas
add
ret
adcl
jmp
mov
xchg
inc
out
and
aas
in
push
jb
dec
es
pop
scas
push
je
xor
and
daa
sahf
mov
outsl
leave
adc
mov
fidivl
dec
jnp
sbb
jnp
or
leave
mov
out
lock
out
mov
and
lret
shll
push
es
ds
mov
sbb
aad
cmpsl
js
and
adc
sub
mov
loopne
imul
jge
repz
mov
pop
push
cmp
mov
sar
aam
mov
ljmp
cmp
inc
lcall
loope
push
mov
mov
xchg
aas
cwtd
mov
dec
pop
mov
xor
outsb
jp
dec
jno
repnz
je
xchg
movsl
jne
clc
hlt
ret
repz
and
pop
and
popa
popf
xchg
ljmp
mov
xor
test
mov
pushf
scas
mov
inc
adc
ja
mov
dec
inc
mov
out
fwait
mov
lods
dec
test
cld
shlb
or
jns
loop
in
push
lds
les
or
dec
leave
addr16
push
jp
inc
mov
fs
mov
shlb
and
sub
xor
cmp
xchg
adc
jmp
clc
call
push
leave
adc
cmp
mov
mov
xor
fdivrl
jg
scas
lea
adc
or
insb
jle
ret
add
push
faddl
fdivs
aam
inc
iret
repz
shrl
inc
and
fidivl
mov
mov
sbb
fsubrp
xor
xchg
jmp
pop
repnz
leave
xchg
aas
xor
fnstcw
and
dec
add
sbb
into
adc
or
out
add
push
xchg
pop
mov
clc
add
adc
outsb
adc
add
cmp
jno
dec
xchg
mov
lret
lahf
stos
cmpsb
aaa
and
clc
hlt
cmp
js
inc
cmp
mov
jno
jp
jl
test
dec
push
popa
mov
movsl
arpl
xchg
and
sahf
jecxz
push
add
push
out
arpl
or
dec
inc
xor
xchg
pop
mov
cmp
push
lcall
fdivl
das
movsl
movsb
outsb
jnp
adc
jbe
xchg
movsb
adc
sbb
adc
int
fstpl
push
jo
push
sub
and
lcall
test
cmp
subb
xor
sahf
idiv
test
lds
jg
xor
mov
mov
ljmp
lea
fsubs
rcll
lret
shr
repnz
lcall
int
sub
sbb
cmc
cmpsb
sbb
xor
and
pop
mov
stc
mov
fs
stos
jmp
incl
mov
pop
outsb
dec
mov
push
out
add
xor
sbb
or
push
xor
or
sub
loopne
pop
lcall
inc
adc
adc
push
je
jbe
adcl
and
xlat
pop
js
sub
scas
ret
mov
push
lahf
iret
sti
jp
mov
aas
jb
aad
and
nop
int
jp
sbb
lret
sub
fldcw
adc
les
fadd
push
mov
lea
es
fbstp
inc
adc
fsubrl
jmp
inc
aam
aas
sbb
inc
xchg
adc
xchg
mov
sarl
insl
jecxz
pushf
cmpsl
imulb
test
push
ds
cwtl
jo
adc
mov
and
mov
jp
cmp
xor
jo
pop
das
lock
ficompl
test
shll
arpl
stc
mov
lahf
dec
idiv
or
mov
in
cld
in
sbb
mov
jecxz
and
pusha
sub
pop
pusha
test
rclb
mov
mov
in
lock
push
sti
lea
mov
pop
clc
invd
das
xchg
mov
ljmp
mov
adc
sbb
out
testl
push
fs
paddq
jno
test
mov
flds
outsb
test
push
mov
dec
fsubs
mov
pop
jnp
sbb
icebp
pop
adc
dec
stos
adc
jo
lock
mov
jl
imul
xor
lret
inc
insb
mov
pop
sbb
mov
mov
inc
dec
sbb
leave
inc
aaa
jno
fwait
in
jmp
jne
iret
test
cmpsl
sub
mov
push
add
in
push
mov
out
inc
ljmp
rorb
adc
or
jg
mov
dec
jle
pop
cmp
pusha
out
call
xchg
in
and
movsl
test
xchg
ret
aam
cmpl
in
popf
popf
sbb
mov
stc
jle
stos
ret
and
shrl
jnp
and
scas
lock
mov
iret
lret
int3
mov
or
sbb
mov
xor
jae
lret
rolb
fisttpll
cmp
int
lahf
cmp
and
xchg
lds
mov
ficoms
adc
shlb
fwait
repnz
adc
or
jnp
and
test
mov
or
sahf
jg
ljmp
aaa
leave
push
push
or
orl
cltd
adc
orl
lcall
aad
scas
fbstp
std
and
mov
movsb
shrl
push
sbb
pop
cmpsb
mov
gs
repz
daa
ja
cltd
cmp
and
jno
lret
jp
jg
jne
repnz
or
push
insb
and
dec
push
mov
cld
pop
push
pop
sub
ljmp
lcall
test
or
aas
sub
into
fnstcw
fidivs
outsb
sub
push
rclb
scas
popl
loope
xorb
loope
sub
bound
jae
lock
jne
sub
mov
cmp
jnp
or
out
add
or
xor
or
aas
mov
rcrb
xlat
push
and
fistl
cmp
fadd
mov
cwtl
insl
sbb
xchg
pop
fadd
andb
pop
cmpsb
cs
daa
ret
into
std
cli
mov
insl
push
pusha
xor
and
cmp
sbb
int
dec
mov
data16
push
mov
mov
fsubp
push
pop
pop
cli
cs
push
cmp
ficoms
or
mov
xchg
mov
in
xlat
jecxz
adc
sbb
sub
add
inc
sbb
mov
xlat
cwtl
cmpsb
sbb
jl
dec
mov
shr
sti
sub
mov
nop
nop
test
xchg
dec
jnp
xchg
loopne
fldenv
mov
repz
in
lea
dec
add
jge
in
jno
aad
mov
sub
scas
mov
loop
and
cwtl
scas
inc
mov
pop
aas
and
add
data16
and
ds
imulb
xchg
lret
ja
mov
icebp
mov
orl
cld
pand
mov
push
inc
xorb
iret
xor
iret
dec
insl
mov
xchg
loop,pt
sbb
add
shll
insl
pop
and
dec
icebp
scas
dec
cmpsl
jbe
ret
mov
ret
inc
loopne
psrld
lret
sub
sarl
out
das
xor
pop
jg
dec
shlb
flds
aam
mov
ja
mov
inc
pop
clc
dec
nop
push
xchg
enter
mov
test
mov
pop
push
loope
add
xchg
push
aas
fisttpll
xor
mov
mov
push
jl
mov
fdivl
je
rorb
pop
test
repz
xchg
bnd
cmpsb
fnstsw
pop
mov
adc
push
imul
add
cmp
or
inc
add
xor
pop
daa
mov
sahf
adc
mov
mov
popf
nop
dec
cmova
or
iret
aad
adc
xchg
dec
outsl
shlb
jne
push
push
mov
lahf
and
bound
sar
in
cmpsl
mov
jne
pop
out
aaa
mov
mov
mov
shr
ret
addr16
lahf
inc
jp
jnp
mov
out
imul
mov
cmpsb
pusha
cmpb
dec
jno
mov
xchg
stos
xchg
mov
orl
dec
out
popf
ljmp
cmp
jo
xor
push
and
and
xchg
push
xor
loope
push
das
lods
iret
sub
hlt
ret
popf
pop
mov
or
mov
aad
popf
or
mov
test
jmp
fcmovbe
push
lcall
rorb
fidivs
inc
rol
cmp
sub
mov
mov
lcall
mov
jbe
scas
mov
sbb
xor
sub
cmp
aam
pushf
int3
insb
loopne
pop
call
pop
push
or
xor
jns
sub
mov
mov
push
imul
lret
push
adc
daa
jbe
xchg
cmp
aas
adc
movsl
add
dec
in
std
rorb
dec
and
sbb
push
lea
je
mov
mov
pop
orb
call
pop
pushf
push
xor
loope
xor
mov
mov
outsb
mov
jnp
sub
push
bound
sbb
xor
jle
jbe
hlt
int
add
sub
xor
faddp
add
shl
push
fcoml
in
sahf
cmp
add
cmp
dec
andb
jg
out
das
mov
mov
in
movsb
mov
inc
mov
ljmp
cmp
xchg
dec
notl
cmpsl
lret
stos
rcrl
bound
testl
xor
fwait
xor
mov
sbb
into
bnd
cli
icebp
into
fs
push
or
popf
and
data16
dec
lods
daa
pop
popf
mov
mov
push
inc
popf
cli
popa
cli
push
xor
mov
cmc
js
mov
loopne
mov
inc
adc
cmpsb
dec
adc
shll
xchg
adc
xchg
xor
cmp
pop
pop
sub
and
mov
sub
fdivr
fadds
cs
jmp
nop
addl
inc
test
and
fidivrl
xor
into
cli
pop
push
nop
jbe
insb
mov
push
fstl
pop
xor
cld
pushf
pop
negb
pop
test
sub
sub
inc
lret
ja
aas
ret
jb
mov
mov
xor
jecxz
enter
and
std
fs
cwtl
out
add
and
mov
dec
bound
mov
push
mov
inc
pop
lock
lret
add
mov
movsb
movsb
xchg
rcll
stos
xlat
incl
insl
inc
add
dec
in
cli
enter
mov
lcall
lret
fwait
cmp
mov
cmc
cmovne
sahf
sbb
shl
jb
sub
cltd
aam
mov
in
push
orl
and
sub
jecxz
mov
inc
mov
mov
rcr
sbb
mov
xchg
lahf
cmp
cltd
inc
dec
jecxz
mov
lods
ljmp
mov
insb
xchg
cmpsl
repz
or
pop
push
sub
push
push
enter
mov
dec
decl
jge
or
lds
icebp
push
mov
jne
test
dec
add
xor
jmp
or
add
fwait
inc
sub
jne
mov
xor
test
hlt
bound
pop
jo
mov
pop
xchg
les
out
sahf
adc
lret
pushf
push
addr16
fdivrs
fdivl
in
rorl
mov
lret
pop
mov
filds
inc
adc
xchg
and
xchg
pop
test
sbb
je
adc
popf
jmp
call
push
ja
fisubrl
mov
push
sbb
scas
mov
push
push
jns
in
icebp
iret
mov
ret
mov
cmc
add
iret
jae
adcb
fdivrs
or
xor
push
inc
popf
pop
xchg
fimull
mov
lea
lcall
mov
jl
mov
or
mov
repnz
sbb
je
cmp
fwait
sbb
aaa
inc
xchg
test
pop
fchs
add
cwtl
int3
push
xchg
pop
repz
push
jmp
call
jo
fldl
popf
pushf
add
sbb
loope
movsb
jmp
inc
out
cmpsb
rclb
enter
daa
jne
sub
push
fdivs
dec
push
or
js
test
in
mov
push
pusha
push
test
insb
pop
arpl
imul
adc
mov
pop
daa
cmc
subb
dec
loope
cmp
imul
jmp
rcl
or
rorl
sbb
pop
mov
adc
xor
repz
jns
movsb
int
jae
sub
negb
lcall
sub
cmp
in
sahf
filds
test
je
cmpb
leave
jg
adc
mov
push
mov
and
cmpsb
divb
sbbl
cmp
push
popa
xor
push
cmc
stos
lret
inc
mov
xchg
mov
or
sbb
fwait
into
ret
ds
sti
push
inc
xor
cmp
mov
fs
mov
scas
add
mov
dec
dec
and
cmpsl
jbe
xchg
call
xor
cmp
insb
add
fwait
adc
gs
pop
adc
push
imul
inc
jl
repz
sbb
rclb
xlat
push
jmp
mov
xchg
push
cmp
cs
fs
pop
cmp
inc
mov
adc
in
or
popf
lcall
rorl
adc
pop
or
pop
jecxz
or
pop
ret
xchg
pushf
or
sub
inc
lret
pop
pop
sub
inc
out
aas
aas
popa
mov
test
je
fisttpl
pop
int
xor
adc
or
sti
cwtl
mov
mov
stc
xorl
dec
ret
fcmovnb
lods
imul
es
lock
jb
out
or
das
lret
pop
repz
addb
sub
scas
dec
out
sub
add
cmp
or
cli
mov
cld
push
push
mov
mov
inc
jns
insl
and
aam
push
jbe
cmpsb
xchg
jecxz
inc
jnp
sbb
clc
rcrb
jno
ljmp
mov
mov
loope
mov
cmp
sub
icebp
js
add
stos
or
jle
adc
pop
mov
jp
sub
and
xchg
not
push
pop
outsl
pop
adc
stos
loopne
aas
push
mov
syscall
test
ret
add
jne
ljmp
fnstsw
sub
push
or
clc
xor
and
add
cli
mov
push
jnp
aad
cmp
ja
test
jl
cld
xor
or
pop
mov
jno
add
xor
lahf
mov
lds
out
fcomps
stos
inc
jg
lea
in
dec
imul
or
or
loopne
addr16
idivb
test
mov
xor
mov
sbb
push
in
jl
pusha
mov
imul
jmp
and
in
subl
push
aad
popf
adc
mov
mov
xor
mov
adc
jnp
popf
stmxcsr
mov
sbb
int3
lcall
inc
es
pop
sub
in
inc
jmp
jp
add
jecxz
or
lods
or
jns
cmp
dec
xchg
lret
sbb
cmpsl
push
imul
lds
inc
shl
test
xor
leave
jno
cmp
add
mov
loop
fistps
pop
aaa
push
cmpb
xchg
jae
add
jb
inc
add
pop
pop
cltd
pusha
push
into
mov
xor
das
subb
mov
mov
movsb
je
lahf
push
pop
mov
cmpsb
inc
dec
jle
sbb
sbb
in
pop
daa
je
dec
cmp
xchg
das
jl
int3
mov
ds
imul
jnp
and
stos
lahf
int3
ss
xor
mov
call
xlat
sbb
outsb
xchg
fwait
movsl
pop
mov
js
lods
notl
pushw
push
push
lahf
sub
fdivrl
xchg
cmp
xchg
push
mov
shl
dec
orl
adc
add
ljmp
jl
cs
leave
arpl
insb
repnz
lcall
sbb
lret
jmp
sbb
js
and
out
test
mov
shlb
xchg
or
push
lret
or
inc
xchg
mov
loope
into
cmpsb
into
aas
cmc
ret
xor
fisttpl
loop
push
loop
push
inc
dec
adc
stos
data16
lods
cmc
fst
mov
cli
out
xchg
aad
mov
loop
es
jnp
mov
adc
pop
xor
xchg
adc
mov
adc
mov
push
xchg
mov
sbbb
jb
xlat
push
dec
mov
aad
pop
mov
add
outsl
sti
ss
cmpsl
cs
jae
aad
inc
das
nop
cmp
icebp
dec
cwtl
incb
iret
xor
flds
inc
lock
mov
insb
jle
pop
fs
cmp
call
fildl
lock
or
mov
aam
xor
pop
lret
stc
mov
mov
inc
add
adc
add
pusha
dec
lods
inc
xlat
je
xlat
pop
jecxz
add
divb
jmp
mov
cmp
in
xchg
int
dec
cmp
xchg
mov
jo
lock
pushf
mov
mov
int
mov
jg
es
jbe
dec
loop
and
xor
sub
cld
nop
test
lret
jns
xor
and
int3
dec
dec
pop
fadd
jecxz
pushf
inc
iret
sub
aam
mov
ret
xor
pop
cwtl
fisttpll
cmp
sti
mov
mov
adc
arpl
aam
lods
mov
and
out
cmpl
push
shlb
push
jmp
cltd
mov
jnp
rcll
in
jge
xor
test
xchg
sbb
int
pop
mov
mov
push
push
sbb
add
call
mov
xor
into
or
xchg
mov
movsl
into
mov
jmp
shll
sub
inc
xchg
mov
ret
mov
jne
add
adc
out
inc
xchg
mov
ds
pop
jns
andb
bound
out
leave
bound
sarl
jp
cwtl
sub
cmp
xor
sub
push
xchg
ffreep
lcall
jmp
out
lret
xchg
cmp
pop
push
cwtl
pop
dec
popf
cmp
mov
stos
mov
and
cld
mov
jnp,pn
dec
les
pop
clc
adc
jl,pn
pop
adc
arpl
jae
dec
lret
inc
faddp
pop
or
sub
out
dec
fcoml
or
mov
add
ficomps
clc
vpslld
rorb
xor
mov
cltd
leave
call
mov
arpl
popf
jmp
cwtl
fwait
xor
adc
aaa
or
fwait
pushf
int3
sub
add
push
mov
cmpsb
xor
mov
or
inc
adc
adc
adc
pop
mov
ja
in
add
daa
jae
loop
into
jmp
out
jl
icebp
jle
xor
das
movsl
xchg
mov
sbb
jmp
jns
push
push
imulb
add
cltd
push
js
cmp
movsl
stos
stc
push
jecxz
loope
ss
jnp
cmp
outsb
inc
adc
mov
inc
dec
cmp
mov
add
sbb
push
jg
add
out
lds
pop
adc
push
xlat
adc
fcoml
cs
sahf
and
fucom
xorb
jg
mov
add
mov
cld
mov
or
dec
fmul
dec
pop
notl
add
fiadds
loop
mov
push
pop
cmc
mov
movsb
xor
push
mov
imul
dec
popf
stc
pop
lcall
mov
loope
fdivl
mov
cld
iret
out
ljmp
xor
inc
insb
cmp
dec
pop
or
xor
loope
jecxz
test
sbb
and
pushf
pop
push
sub
adc
xchg
adc
or
add
push
xchg
jns
xor
dec
and
dec
sub
mov
in
insl
outsl
and
in
inc
cs
dec
aad
addl
negl
inc
loop
ja
jle
test
cmp
and
in
and
pop
dec
clc
cmc
adc
mov
dec
jmp
mul
pop
outsb
push
lea
aas
test
aas
lahf
int
jb
lcall
mulb
pop
jecxz
mov
idivb
loope
cwtl
pop
xchg
fnstenv
cwtl
and
and
adc
mov
push
cmp
aaa
pop
std
das
dec
aaa
and
insl
and
cmp
std
dec
adc
insl
testb
fstl
cmpsl
jb
pop
mov
pop
xor
cld
mov
and
lret
and
addl
lcall
pop
mov
gs
les
push
lret
fnsave
push
clc
ss
xchg
les
jno
jmp
xchg
lods
sub
fsubr
out
leave
xchg
sbb
add
imul
jmp
pop
sbb
test
outsb
cmpsl
mov
mov
insb
arpl
xchg
adc
lcall
roll
gs
pop
imul
test
imull
fwait
add
add
cli
jmp
fbstp
shlb
imul
pushf
pop
mov
imul
pop
cmpsb
cmpsb
pop
ja
les
fcmovnu
xor
xor
or
fstps
sti
vmptrld
leave
mov
cmp
out
and
inc
inc
jns
pop
and
cmp
mov
push
out
lea
or
fwait
jp
pusha
mov
jne
mov
mov
in
stos
loop
pusha
out
cld
mov
loop
inc
xchg
add
mov
js
rclb
xchg
lret
push
pop
cli
inc
popf
pusha
or
mov
xor
arpl
in
lea
cmpsb
jnp
lds
scas
filds
jmp
iret
cmpsb
nop
xchg
ret
outsl
pop
lcall
jae
xchg
add
or
mov
aad
fisubl
shrb
imul
lds
shrb
push
repnz
mov
leave
pop
add
hlt
fwait
das
cld
arpl
les
fstpt
sub
inc
mov
or
pop
sbb
xor
int3
sbb
mov
lea
xor
in
adc
ja
cmp
cli
jnp
mov
push
movsl
push
loopne
dec
sbb
jmp
les
jb
in
add
dec
jno
jnp
jl
jmp
ds
sbb
lea
push
lahf
or
dec
push
fldenv
enter
cmp
stos
jae
sub
pop
pop
mov
js,pt
pop
xchg
pop
in
imul
test
pop
stc
mov
outsb
sbb
adc
cwtl
adc
sub
adcb
push
sbb
lcall
xorb
sub
loope
fidivl
insb
lcall
dec
fdivrl
scas
sub
push
cmp
nop
lahf
mov
mov
pop
daa
mov
cmc
mov
and
rolb
inc
cmp
andl
notl
loopne
push
sbb
shll
mov
push
std
sbb
fistpl
into
insb
lret
push
adc
xor
cmp
sbb
sti
lea
data16
push
lods
ret
in
outsl
mov
xor
cli
sub
push
or
js
or
xchg
incb
outsl
gs
fisubl
mov
dec
push
adc
bound
je
cmpsb
adc
ret
jns
sarb
xchg
cmp
mov
subl
dec
stos
sub
stos
fldlg2
fsub
or
xchg
or
cs
sub
aad
sub
out
rcll
cmc
jo
fnstenv
mov
arpl
bound
stos
lea
mov
fcmovb
flds
je
cld
iret
dec
adc
pop
pushf
or
lret
pop
adc
xor
sub
aas
ds
jb
pop
orl
xchg
je
int3
mov
mov
idiv
fdivrs
rorb
lock
jae
icebp
xchg
je
sti
nop
hlt
dec
push
cmc
repnz
xor
mov
xor
lock
sub
in
mov
and
jg
shlb
mov
es
sub
ja
dec
fsubr
cltd
cmpsl
jno
enter
stc
icebp
testb
out
pop
lret
push
mulb
adc
mov
sbb
rolb
and
push
xlat
fcom
mov
or
push
lea
popf
pop
aad
jno
mov
ljmp
push
lods
xchg
out
mov
dec
lock
xchg
femms
sbb
addr16
and
inc
mov
pop
daa
xchg
movsb
mov
sbb
sbb
subb
adc
push
stos
lods
dec
imul
sbb
add
sub
incl
xchg
cltd
xor
mov
mov
in
mov
mov
ja
sbb
dec
into
inc
cld
inc
shr
or
adc
fiadds
lods
mov
adc
bound
jns
xlat
and
push
xor
out
les
aaa
pusha
push
or
sti
add
fcmovnb
mov
sarb
mov
dec
in
sub
mov
add
add
push
xlat
in
jmp
test
sbb
push
popa
add
mov
fcompl
stos
je
xchg
cld
int3
xchg
insb
mov
cmpsl
jnp
dec
scas
inc
push
push
xchg
and
pop
push
in
add
add
shl
or
sub
and
or
push
leave
pop
inc
cltd
sbb
ficoml
push
xchg
iret
adc
sbb
mov
jae
bound
xor
inc
pop
mov
pop
xchg
mov
hlt
out
mov
jbe
sarb
jge
test
gs
inc
push
rorl
jmp
xchg
add
je
int3
add
pop
ljmp
xor
inc
fbstp
mov
add
andb
push
hlt
xchg
cmpsb
int3
sub
in
shlb
enter
daa
jno
inc
cmp
sbb
jl
mov
dec
cmovp
jg
dec
movsl
xchg
mov
and
lahf
sub
push
lods
sub
test
cwtl
inc
sti
inc
sbb
dec
pop
mov
jecxz
movlps
push
xchg
and
into
cmp
jnp
outsb
jnp
push
adc
jae
mov
and
sbb
jo
xor
aad
int
and
sub
pop
ret
pop
pop
xlat
mov
test
push
movsl
mov
test
push
jg
jp
mov
inc
fisttps
cltd
outsb
pop
and
sub
ds
notl
xor
lret
mov
shll
push
jg
into
dec
cmpsb
cmc
pop
outsl
cld
xor
dec
push
outsl
jno
ret
loop
out
stc
lea
jnp
sub
or
lods
stos
dec
jge
xor
dec
out
addr16
pusha
sbb
xor
jns
or
ss
daa
imul
loopne
add
adc
jae
imul
pop
add
test
sbb
mov
nop
mov
mov
inc
sub
sti
inc
movsl
test
hlt
neg
aad
xor
dec
mov
test
pop
jo
in
dec
xchg
adc
imul
shll
mov
call
pop
or
and
jnp
adc
jmp
xor
inc
pop
ljmp
fisttpll
pop
jb
push
push
dec
adc
movsb
je
cwtl
pop
or
aas
push
rcrl
and
mov
inc
fiaddl
stc
aad
fildl
outsl
xorb
adc
cmc
mov
and
test
rcrl
ret
into
mov
cmpsl
jo
lret
pop
mov
cld
adc
mov
and
popf
xor
pop
cmp
rclb
mov
aam
mov
mov
ffree
je
clc
lods
in
xchg
inc
mul
ljmp
lods
and
mov
lods
mov
xchg
stos
add
popa
fmull
push
testl
pop
ret
addr16
sbb
mov
enter
mov
dec
test
push
xchg
mov
fstpl
dec
stos
pushf
cmp
push
cmp
xor
cmp
pusha
xor
rorb
adc
cltd
xor
mov
or
jno
lcall
js
ja
lock
bound
or
rcrb
addr16
shl
jne
xorb
and
cs
loopne
push
testl
in
jp
xchg
dec
pop
sti
out
jo
sub
mov
or
xor
mov
push
mov
subb
in
fcomp
pusha
and
daa
fbld
fiaddl
jmp
push
ja
andl
cmpsl
popf
scas
jae
mov
mov
mov
adc
or
loop
fwait
cld
cli
scas
movsl
pop
aad
fcompl
adc
clc
iret
fs
cmp
xchg
push
mov
inc
pop
and
inc
out
lds
cltd
das
incb
loop
fimull
in
xchg
es
sbb
inc
shrl
pop
add
add
jae
rcrb
mov
lods
movsb
push
dec
or
hlt
xor
outsb
arpl
fmull
jge
int3
aaa
sbb
pop
lock
add
or
jge
add
push
int3
out
xor
ret
pop
mov
jo
shl
scas
clc
push
and
cmp
ljmp
inc
add
dec
mov
in
mov
xchg
enter
daa
jo
in
loopw
jno
lock
jl
push
pusha
dec
jle
and
movsl
fwait
cmp
and
lret
dec
stos
outsl
push
jg
add
arpl
jbe
stos
aam
mov
xor
add
pop
bound
jg
cmp
ret
cmp
sbb
dec
sub
pushf
cld
popl
notb
cmpsl
add
lcall
mov
faddl
pop
sub
sbb
fadds
out
lcall
and
xchg
nop
into
sub
roll
fstpt
fisttpll
mov
ror
mov
movsl
dec
and
rorb
inc
cmp
stc
mov
lret
shll
push
sbb
fxch
xor
pop
xor
push
outsl
push
push
cld
loop
andb
mov
imul
xchg
hlt
mov
pop
push
out
popa
dec
cli
xchg
movsl
dec
xor
dec
imul
cltd
decb
imul
mov
pop
mov
or
imul
push
add
inc
lcall
fmull
cmp
mov
xlat
push
pop
js
mov
out
in
scas
inc
sub
cs
mov
aad
sahf
sbb
adc
test
jge
fldenv
jo
les
xor
test
in
push
jnp
call
xlat
xchg
pop
pop
bound
insl
pushf
pop
call
mov
inc
cmpsb
aad
inc
insl
jle
aas
jl
cmpsl
jb
subb
mov
je
adc
cmpsl
lods
testb
imul
mov
addl
mov
dec
dec
dec
mov
jg
lock
adc
das
call
mov
mov
out
dec
shr
pop
sbb
adc
adc
into
loopne
cmpsl
outsl
pushf
push
mov
movsb
in
cld
cmp
mov
xor
aam
and
cmp
sbb
call
das
aam
cwtl
das
ret
jno
cmp
insb
aam
jmp
in
out
xor
fnstsw
mov
lret
adc
lahf
xchg
icebp
or
push
cmp
cli
bswap
repz
inc
xchg
xchg
adc
int
xchg
outsl
adc
xchg
xlat
sbb
roll
add
pop
push
lret
out
push
add
push
push
aaa
incl
and
lret
ret
movsl
or
and
dec
xor
mov
xlat
mov
add
xor
out
shrb
pop
arpl
movsb
inc
aas
jne
jne
mov
add
out
mov
inc
int
and
fs
sahf
mov
rorl
fimull
lods
loopne
addr16
out
cmpsl
jp
in
sub
out
mov
icebp
js
jle
aaa
cmp
shr
pusha
mov
orb
pop
lock
xchg
sbb
int
xor
mov
aad
xchg
mov
icebp
jo
stos
pop
stos
lcall
incl
jnp
mov
xor
sti
xchg
adc
xchg
iret
ret
iret
test
pop
aas
inc
pop
inc
and
jae
or
ljmp
push
xchg
cs
fidivrl
or
sbb
mov
sti
fisubrs
adc
sarb
mov
jmp
pop
hlt
jl
or
into
lahf
jbe
fmuls
cmpsb
inc
adc
rol
or
mov
sbb
mov
push
cmp
rol
jo
xlat
or
fstpl
movsb
sub
xchg
push
xchg
rcl
shlb
jb
lret
sbb
cmp
popa
addr16
leave
sub
add
movsl
mov
lret
adc
into
push
push
xor
cmp
je
inc
pop
inc
fstpt
cmp
pop
mov
stc
inc
loope
mov
lahf
imul
inc
mov
adc
sub
rorl
dec
das
lods
sbb
sbb
push
mov
int
rcr
sub
xchg
lcall
out
aas
mov
sbbb
pop
int
loope
sarl
inc
fidivs
inc
aaa
xchg
mov
xor
and
ss
mov
mov
mov
lret
mov
mov
test
movsl
push
into
xor
loop
dec
gs
sti
sbb
fs
push
lods
js
inc
mov
dec
jp
dec
fists
loop
xor
test
or
dec
lcall
testl
pop
iret
mov
adc
dec
imul
jbe
jge
xchg
xchg
test
inc
sbb
xor
or
sub
fsubs
sbb
leave
sti
mov
addr16
inc
jo
nop
sbbb
dec
jae
jecxz
cs
fstps
xchg
daa
sbb
jp
imul
lea
jecxz,pt
push
cmpsb
mov
adc
pop
pushf
or
loopne
fidivrs
pop
cli
inc
or
and
mov
sbb
jb
loopne
dec
add
dec
je
mov
jecxz
inc
push
std
cmc
imul
cmc
ds
ja
mov
mov
push
dec
iret
adc
mov
sbb
adc
mov
bound
pop
push
xchg
jno
rcl
cmp
es
mov
std
dec
leave
aaa
out
cmpsl
outsb
sti
cmpl
addr16
lret
movsb
or
push
jl
and
shll
je
ja
lods
sarb
push
mov
adc
or
add
push
xchg
mov
adc
dec
clc
and
mov
push
cmpsb
push
pop
jle
lods
aam
cmpl
and
cmp
pop
xor
sub
mov
cltd
enter
or
sub
mov
cmp
test
cmovnp
and
rcrl
mov
stos
jp
arpl
adcl
add
outsl
xchg
jmpw
sbb
push
xor
or
or
cwtl
cmp
mov
cltd
jno
lock
inc
xchg
push
or
sbb
xchg
cs
sbb
xchg
xlat
and
daa
xchg
in
sti
mov
sub
test
cmp
jp
test
mov
pop
jp
adc
pusha
or
in
pop
sub
mov
bound
push
sti
aam
out
xor
addr16
jp
cld
imul
push
mov
push
xor
pop
stos
int
inc
and
or
iret
xlat
jnp
inc
imul
out
mov
outsl
ret
mov
jbe
mov
sub
bound
or
mov
rcr
outsb
int3
cmp
pusha
or
push
fimuls
sub
jo
xchg
rclb
inc
repnz
arpl
leave
cmp
sub
add
jbe
mov
sbb
je
or
or
stos
mov
int3
les
pop
ja
and
and
mov
jo
repnz
scas
mov
pop
and
adc
movsl
imul
loope
push
cmpsb
push
and
enter
daa
outsb
cmp
cmp
mov
jno
notb
std
adc
dec
pop
add
out
movsl
test
fimuls
xchg
push
and
jg
push
stc
cmpsl
push
inc
enter
aaa
shrb
js
lods
push
pop
loopne
mov
loope
mov
pop
cmp
xor
cmc
rolb
dec
pop
fisttps
sbb
add
ljmp
mov
out
int
jge
sub
jmp
lcall
int3
fsubr
shr
jb
push
test
sub
xor
insb
mov
adc
and
jns
pop
cmp
cmp
outsl
cmpsl
testl
in
rcl
loopne
lahf
std
mov
into
clc
xor
cmc
insb
fnstsw
push
mov
loop
dec
stc
mov
adc
lock
js
lods
pop
mov
imul
stc
roll
cmp
jne
or
stos
iret
gs
push
inc
loopne
dec
mov
loopne
adc
fidivrs
imul
adc
or
imul
outsl
push
xchg
iret
jp
sub
mov
in
test
push
sti
push
adc
aad
movsl
jp
pop
popa
sub
inc
inc
pop
inc
fsts
inc
sub
outsb
rclb
sub
dec
xchg
jle
aad
or
adc
andl
popf
pop
pop
inc
mov
mov
and
jb
jae
dec
ja
ret
je
movsl
loopne
lds
testb
sbb
cwtl
mov
mov
popa
adcl
jne
push
sti
out
mov
loop
mov
pop
mov
incb
das
cmpsb
aaa
leave
mov
add
mov
rorl
out
insl
jns
int3
dec
les
in
insl
ficomps
mov
push
push
stos
cld
xchg
inc
inc
lret
adc
mov
jns
jg
sub
iret
add
xchg
adc
rorb
pop
xor
fiadds
ret
push
cltd
sub
clc
pop
pop
dec
xchg
inc
out
ret
inc
dec
popa
jb
xchg
lods
aas
int
mov
aad
pop
xchg
jg
inc
push
repnz
pop
jp
cmp
test
mov
in
dec
fmulp
mov
mov
adc
pushf
xor
mov
inc
pop
rclb
stos
imul
add
or
jno
or
das
xor
mov
stc
or
mov
dec
or
scas
popl
dec
lcall
or
popa
xchg
fwait
mov
rcrl
mov
inc
mov
jge
cli
bound
xor
in
push
sbb
xlat
sub
sub
mov
repz
rcr
mov
or
and
mov
aaa
call
fistpll
xchg
and
add
dec
stos
out
mov
xor
sub
mov
outsl
adc
inc
and
ja
cmp
scas
into
sbb
push
mov
sbb
iret
cmpl
mov
jae
add
lock
or
or
sti
inc
xchg
push
lret
fisubl
into
jmp
sub
imull
lcall
divl
shlb
jne
movsl
adc
leave
mov
sub
adc
arpl
sub
scas
sub
mov
aaa
aas
dec
cmpsb
or
xlat
xchg
int3
scas
mov
push
add
jg
mov
and
xchg
jecxz
and
lahf
sbb
or
cmpsb
fadds
clc
in
insb
loop
enter
daa
insl
loope
cmp
das
sub
scas
test
sub
and
lret
adc
or
jo
mov
mov
add
into
push
clc
inc
jecxz
test
jo
inc
push
adc
cli
mov
cmpsl
js
mov
pop
pop
das
sub
cmp
loope
or
in
mov
outsb
pop
rcll
rcr
pop
fwait
mov
fstps
add
adc
xchg
jmp
lret
sub
add
pop
push
xchg
sub
loope
inc
fcoml
insb
push
sahf
divl
popl
shll
sbb
sbb
pop
mov
in
mov
and
aad
fwait
jp
cmp
sub
jo
push
mov
lret
inc
shrl
mov
mov
into
fldt
cmc
xor
cltd
xor
mov
mov
loop
test
stc
imul
adc
sbb
add
and
aam
dec
addr16
iret
xor
je
push
mov
mov
bound
test
jo
or
mov
out
pop
push
movsl
add
dec
push
mov
push
cmp
rcr
sub
jle
mov
out
mov
subb
nop
ss
dec
xor
jno
push
adc
jp
cmp
sub
jno
adc
movl
inc
adc
add
pop
jmp
fidivl
jno
inc
cmp
inc
mov
mov
jb
cmp
dec
out
push
or
aam
fwait
testb
std
inc
or
mov
sbbl
dec
movsl
mov
stc
mov
lcall
pop
jg
das
test
sbb
mov
mov
xchg
fs
lds
es
dec
mov
inc
ret
mov
sub
cmp
mov
cwtl
mov
pushf
test
and
or
mov
sub
je
ret
push
dec
xchg
push
pop
cmp
pusha
adc
xchg
ds
loope
mov
lods
stos
pop
mov
out
cmp
xchg
je
push
int
ss
outsb
add
jae
faddl
and
mov
jae
xchg
dec
jl
push
push
out
xchg
inc
cmp
rorl
pop
stos
pop
movsl
std
push
leave
mov
out
movsl
out
jmp
cli
mov
les
xor
cmp
mov
cmp
dec
mov
or
icebp
ja
ja
dec
fcmove
inc
mov
decb
pop
xor
dec
pop
daa
jne
cmpsb
add
nop
andb
pop
aaa
bound
and
inc
jecxz
in
in
lock
mov
imul
int3
cmp
inc
iret
inc
mov
loope
mov
jns,pt
jle
ret
aad
repnz
nop
cwtl
repnz
in
inc
std
xchg
jl
addb
cs
popf
dec
hlt
xor
scas
lods
cmpsl
stos
mov
int3
and
adc
sarb
fwait
shrb
clc
xor
iret
loopne
mov
frstor
and
test
inc
inc
mov
mov
adcl
lods
push
adc
into
fcmovbe
xorl
xchg
imul
ficoms
inc
arpl
lret
outsb
xchg
mov
clc
icebp
mov
sub
jno
pop
icebp
lods
arpl
jbe
dec
ljmp
or
push
lea
stos
test
sub
lcall
push
out
cmp
pop
arpl
and
sarl
adc
movsb
int3
sub
push
jg
pop
pop
sub
push
mov
jle
insb
or
cmp
pop
push
jno
mov
dec
cmp
ds
movsl
mov
pop
and
das
lahf
les
push
lret
leave
pop
test
lea
push
or
mov
gs
pop
pop
push
repnz
test
loopne
push
cmp
jge
push
mov
sarb
rorb
sbb
ja
add
mov
xchg
xor
loope
js
adc
inc
sahf
iret
pop
aam
push
lcall
inc
or
push
dec
inc
sahf
lcall
xorb
popf
jg
xchg
jmp
mov
lret
shlb
sbbb
fidivs
loopne
popa
lahf
icebp
fsub
inc
lret
test
xor
sar
das
mov
movsl
sbb
sub
cmc
cli
sbb
xor
gs
out
sti
stc
and
push
fs
cmp
adc
outsl
out
lods
sub
lcall
pop
shlb
xor
cwtl
lods
cmp
jmp
or
leave
inc
and
cwtl
ja
pop
cmp
pop
sub
pop
adc
rorl
inc
clc
adc
add
add
or
into
das
mov
in
xlat
dec
stos
mov
insl
fwait
and
pop
hlt
pop
sti
scas
sub
jecxz,pn
mov
sbb
nop
adc
and
jno
inc
addr16
pop
les
movsl
repz
mov
je
lea
xor
inc
add
shr
push
pop
mov
rcrl
scas
xchg
pop
jecxz
out
inc
ret
inc
fsts
test
clc
imul
and
je
mov
jecxz
jl
mov
lods
std
ljmp
mov
lret
repz
adc
dec
nop
cmpsb
inc
fldt
mov
inc
ss
into
jg
mov
cmpsl
das
fs
push
mov
outsb
jecxz
and
loopne
shll
jb
es
fstp
dec
mov
xor
int3
hlt
std
icebp
add
call
add
mov
cmp
movsb
inc
push
pop
aam
xor
out
sbb
enter
test
xor
pop
mov
pop
clc
rcll
mov
test
sub
std
mov
fwait
call
push
push
test
gs
pop
add
xor
sub
movsl
xchg
mov
test
xor
adc
rcl
js
pop
push
push
jge
insb
jle
add
shrb
xor
lods
pusha
or
mov
out
adc
jg
adc
ret
mov
mov
inc
dec
pop
imul
mov
dec
xor
xor
fisubrs
sbb
cmp
dec
jns
aaa
mov
xchg
stos
out
xchg
sbb
cltd
dec
mov
pop
xchg
jp
adcb
fcos
mov
lods
push
pop
jle
cmp
fcoml
movsb
fistpll
icebp
mov
cmp
in
inc
jp
xorl
push
mov
push
popf
jno
jp
add
ret
push
in
leave
jle
es
or
xchg
jle
push
insl
cmp
push
aas
pusha
ja
jg
pop
iret
aas
mov
ret
jb
sbb
in
jae
or
inc
testb
or
add
inc
inc
xchg
mov
fiaddl
mov
inc
imul
out
fidivs
inc
shl
sarl
dec
pop
xchg
leave
mov
mov
arpl
sub
push
push
jge
aad
sbb
loop
or
pusha
mov
test
sbb
leave
sbb
xor
bound
loop
loopne
lret
movsb
push
in
cld
push
into
popa
mov
fisubrs
fsubrp
cmp
enter
daa
imul
jno
mov
jle
test
movsb
std
ds
or
mov
nop
lahf
jecxz
enter
fisubrs
pop
mov
andb
js
jl
pop
popf
and
fwait
loope
pop
sub
xchg
adc
adc
inc
outsb
int
mov
rclb
roll
adcb
add
pop
push
xor
test
xchg
sub
sub
mov
lcall
mov
sub
notb
sahf
cmp
and
orb
jg
or
mov
add
mov
xor
pop
cmpsb
cwtl
and
pop
in
or
fsubs
mov
rcll
sbbb
data16
mov
iret
fidivs
sbb
outsl
stos
inc
sbb
pop
mov
stc
xlat
fisttps
adc
mov
outsb
lods
adc
int
push
out
call
xchg
fistpll
cmp
in
or
scas
jle
stc
jg
gs
inc
loopne
dec
aas
pop
dec
jge
adc
or
add
mov
cmp
mov
sub
imul
adc
lds
mov
pop
pop
jmp
aad
popf
nop
in
sahf
cs
out
icebp
mov
jp
inc
fnstenv
shl
les
mov
mov
rol
ja
repz
fldcw
mov
pop
loope
cmp
test
ficompl
inc
push
pop
xchg
inc
dec
dec
inc
inc
hlt
test
jb
jne
sub
fdivrl
je
jp
jecxz
cmp
not
inc
adc
xchg
ss
out
xchg
insl
mov
lcall
sbb
std
dec
jnp
cltd
fistpl
call
mov
cvttps2pi
das
inc
into
data16
and
dec
sahf
shll
mov
mov
mov
dec
mov
repz
push
or
xlat
cld
adc
pusha
xor
lock
aas
and
repz
ja
sub
inc
xchg
aam
push
mov
cmp
add
mov
or
ljmp
jl
sub
mov
addr16
push
add
pushf
xcrypt-cbc
cmpsl
rcr
add
inc
dec
test
lcall
inc
loope
xchg
add
test
jl
xchg
rclb
pop
rcll
ss
push
sysexit
dec
add
fisttpl
mov
push
fimull
fimull
mov
mov
ret
mov
jle
adc
rcl
dec
jae
jl
loop
mov
fwait
inc
int
dec
adc
jne
sysenter
mov
aaa
xor
sbb
scas
bound
stc
jns
xor
xchg
sub
out
stc
jb
mov
or
lret
jp
jmp
cmc
mov
sbb
mov
cmp
pusha
mov
cli
rclb
xor
rolb
loopne
popf
cwtl
or
mov
sub
mov
and
addl
xchg
lret
gs
iret
sahf
xor
pop
push
cmp
pop
add
jae
jb
inc
stc
repz
jnp
popl
imul
sbb
mov
enter
add
add
js
sahf
push
adc
pop
mov
hlt
repz
jp
or
nop
