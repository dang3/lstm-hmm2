enter
jmp
mov
pop
mov
test
enter
insb
or
enter
pusha
xor
and
and
pushl
cwtl
push
mov
push
push
call
pop
ret
lea
push
mov
push
push
lea
mov
jne
adc
test
je
or
or
out
ljmp
mov
cmpl
je
xor
mov
lea
pushl
dec
test
jne
call
sbb
call
adc
les
pop
pop
pop
push
push
push
push
idivb
call
clc
mov
mov
mov
mov
cmpl
pop
loope
pushl
inc
and
add
jl
test
jb
and
add
mov
mov
and
cmp
je
xor
mov
cmp
je
xor
mov
lcall
mov
and
xor
sbb
push
pop
imul
outsb
lock
rorb
and
fistpll
ret
imul
or
mov
pop
pop
pop
clc
pop
imul
gs
xor
cs
insb
insb
jno
or
adc
mov
xlat
inc
sub
mov
pop
std
out
add
push
mov
jmp
mov
inc
test
imul
loopne
mov
shlb
loop
mov
cld
push
inc
lea
not
mov
mov
lea
rol
aam
pushl
cld
or
inc
xchg
rcr
dec
pop
pop
mov
mov
not
mov
or
jg
neg
mov
sbb
ret
mov
adc
jns
outsl
incl
not
xor
lea
dec
mov
inc
fmull
ret
in
fildl
xor
cmp
sub
cli
add
in
fisubrs
out
cmp
adc
mov
inc
mov
mov
jge
xchg
mov
jns
sub
mov
scas
out
sbbl
or
mov
neg
shr
negl
aad
adc
in
xchg
lods
std
movsl
xor
rcr
and
dec
inc
mov
pop
inc
rolb
lret
mov
ss
cli
xchg
neg
mov
jmp
repnz
mov
mov
dec
mov
out
mov
ror
dec
in
dec
jne
push
mov
mov
lea
mov
js
mov
jg
ljmp
jmp
xchg
mov
mov
inc
mov
dec
clc
scas
sti
incl
jbe
lea
jg
idivb
mov
mov
rcll
and
mov
mov
lds
mov
add
dec
loopne
neg
xor
nop
inc
dec
mov
mov
mov
call
cld
or
sti
outsl
das
fdivl
jmp
cmp
shr
pusha
dec
inc
add
das
jl
and
mov
jmp
jmp
ret
jno
sub
sbb
mov
xchg
mov
mov
sbb
xchg
xor
mov
lea
enter
fstpl
sub
lcall
xor
test
scas
shr
jmp
inc
push
sbb
notb
pop
push
inc
dec
lret
push
dec
test
in
jg
mov
mov
push
push
push
push
mov
push
clc
pop
and
mov
adc
ds
js
mov
xor
jnp
rol
xor
push
out
std
out
clc
or
rcl
and
dec
sbb
inc
inc
mov
mov
fistpll
ror
or
and
mov
mov
sbb
jmp
imul
les
push
sti
insl
loope
inc
jmp
ror
xchg
les
idivb
pop
outsl
ljmp
call
movb
imul
fisttps
mov
mov
adc
dec
loope
pop
mov
pop
dec
mov
inc
outsb
add
aas
sti
fisttpl
lea
dec
loope
add
mov
mov
adc
fcomp
jg
rorb
rorb
mov
xchg
inc
dec
jb
adc
dec
pop
ficomps
push
pop
ds
ljmp
jecxz
jl
and
and
mov
movsb
xor
pop
test
xchg
jmp
ljmp
or
ret
mov
inc
inc
sbb
ror
add
into
enter
cmc
scas
aad
dec
loopne
push
add
fidivrl
mov
add
xor
mov
pop
fwait
mov
push
or
idivb
outsb
jns
repz
mov
cwtl
mov
jecxz
xor
mov
cmp
pop
clc
addr16
pushf
mov
int
shl
dec
or
int3
fcmovb
fistpl
push
fisttps
jmp
cmpsb
ljmp
lea
arpl
mov
xchg
cmpb
decb
in
mov
xchg
sub
mov
subb
inc
sti
mov
inc
lea
aas
mov
adc
fldl
mov
hlt
shl
mov
arpl
lcall
dec
loopne
dec
mov
mov
and
xchg
lret
aaa
cmp
and
or
lock
test
out
jae
lods
incl
loopne
mov
inc
inc
jae
dec
sbb
jge
cmc
in
mov
xchg
test
jmp
dec
dec
int
inc
shll
imulb
pop
dec
daa
pop
dec
mov
or
mov
dec
adc
pop
jno
sbb
cli
mov
mov
rcr
mov
in
sbb
mov
mov
in
xor
xchg
push
jmp
mov
mov
jecxz
dec
mov
adc
xchg
lods
shl
jmp
xor
mov
or
push
outsb
mov
inc
dec
jne
adc
add
mov
or
dec
cmp
das
adc
icebp
mov
mov
lea
pop
rcrb
js
xrelease
icebp
jg
in
inc
mov
push
dec
mov
or
loopne
loope
mov
mov
movswl
mov
test
dec
out
xchg
jge
ljmp
inc
mov
and
xor
inc
inc
add
shrl
mov
or
mov
and
cmpsl
daa
inc
inc
dec
je
rcl
jnp
out
filds
stc
mov
inc
adc
shl
mov
xchg
push
dec
dec
loop
dec
mov
jmp
xor
mov
cltd
shl
outsl
mov
repz
adc
add
dec
clc
push
ljmp
sub
inc
mov
mov
mov
es
jg,pt
mov
push
lea
push
push
imul
jmp
adc
mov
insl
dec
mov
ljmp
scas
mov
dec
jo
sbb
iret
mov
loope
fldcw
pop
popf
xchg
mov
lcall
rclb
neg
adc
mov
fildll
jmp
lock
lock
mov
lods
dec
jmp
lds
sbb
cs
movb
dec
stc
mov
xor
dec
pop
aad
inc
enter
jmp
pop
cmp
fbstp
in
dec
fwait
mov
jmp
cmc
xor
test
inc
out
xor
pop
loop
sub
xor
inc
xor
sbb
out
mov
dec
mov
loop
xor
push
push
adc
rorb
jmp
fisttps
jnp
cmpl
call
lds
push
adc
cmp
xchg
outsb
insl
loope
or
xchg
lock
mov
inc
or
xchg
int3
rclb
in
inc
xchg
push
fimull
mov
inc
push
shrb
scas
cmc
add
mov
or
adc
dec
pop
push
cwtl
or
sbb
lock
sbb
or
loop
dec
dec
lcall
mov
mov
fsubr
mov
push
mov
sbb
es
sub
and
fidivl
mov
insl
ds
add
into
push
mov
jmp
lahf
stos
mov
mov
ljmp
inc
pop
sti
pop
adc
jecxz
or
xor
inc
dec
inc
xor
cs
mov
or
iret
add
scas
aam
sbb
je
out
aaa
aam
std
lods
or
cltd
inc
dec
cltd
enter
xlat
test
rcr
jmp
scas
mov
rol
pushl
mov
pop
lods
inc
and
inc
pusha
xor
dec
xchg
out
mov
outsb
nop
or
shlb
jle
xor
mov
pop
mov
out
outsl
xchg
mov
sti
mov
fwait
nop
mov
loope
repz
cs
fldcw
frstor
rcrl
mov
pop
dec
mov
mov
add
pushl
xor
xor
xor
cmp
out
lods
mov
sbb
add
or
xor
xor
adc
mov
adc
add
or
subb
rep
sbb
mov
sbb
inc
sub
es
dec
adc
arpl
movsb
jne
daa
and
mov
mov
pop
dec
xor
pop
imul
mov
cmp
xor
mov
jle
lock
mov
insl
mov
rorb
call
sub
shr
fmull
pop
lret
jle
adc
movl
mov
test
cmpsl
cmp
fbstp
pop
adc
loop
movzwl
add
insl
mov
subl
aaa
jge
cmp
dec
loopne
cmp
sbb
add
xchg
lods
sub
in
sarl
add
testb
je
orl
xchg
ja
mov
sbb
arpl
or
and
cmp
enter
ja
adc
sub
pop
mov
add
or
add
test
shl
pop
push
das
lret
mov
mov
or
insl
call
mov
hlt
outsb
das
dec
mov
push
push
adc
push
adc
xor
ljmp
sub
pop
test
test
out
push
inc
or
adc
test
pop
inc
test
insl
pop
push
sbb
adc
lcall
mov
ss
outsb
popa
fxch
cmp
in
in
cmc
cmp
push
jbe
sbb
je
sub
stos
adc
sub
in
sbb
aaa
fcoms
xor
or
imul
stc
cld
mov
add
cmp
jo
test
sbb
add
mov
lcall
or
jmp
ja
fistpll
pusha
iret
cmp
add
insb
cmp
enter
inc
enter
addr16
loopne
sub
into
into
outsl
and
cmp
je
xor
das
adc
mov
or
jmp
or
push
mov
out
sbb
cmp
adc
xor
sbb
and
push
cmc
les
mov
ficoml
and
sub
out
cmp
addr16
or
mov
out
mov
push
jmp
mov
test
lods
add
mov
xlat
repnz
or
ret
or
lea
inc
or
fs
adc
test
inc
dec
fmuls
mov
jne
cld
sub
cwtl
sbb
sbb
mov
insb
pop
mov
in
inc
or
sbb
mov
push
movl
xchg
push
in
sbb
dec
or
imul
in
pop
jmp
cltd
ret
int3
jmp
cmp
shl
jne
test
jne
out
ret
or
imull
pop
or
cmp
ja
stos
add
call
mov
popf
xor
inc
push
adc
xchg
sub
mov
push
jo
inc
add
jo
int
mov
or
outsl
cld
popa
pop
lea
jp
add
cmp
insb
xlat
jbe
sub
inc
adc
sub
sub
fs
sub
or
push
mov
test
jle
adc
inc
push
or
fisttpl
and
adc
inc
scas
lods
sbb
sbb
mov
call
fwait
pop
add
loope
test
jg
gs
jb
arpl
fs
jae
add
mov
lcall
or
not
in
jne
popa
repz
sbb
in
fcomps
mov
loopne
or
add
push
and
push
cld
push
pop
ss
enter
add
mov
or
xchg
add
in
mov
pusha
pushl
cld
and
popa
out
int
imull
xor
pop
cld
in
adc
sbb
sbbb
cmp
sbb
dec
and
in
inc
rclb
fcoml
push
lahf
fistpl
mov
add
loopne
mov
rclb
add
add
dec
or
adc
xchg
push
cmp
ss
paddusb
cmp
dec
dec
call
dec
daa
push
int3
push
and
js
montmul
cmpsb
andl
enter
in
daa
and
xchg
jae
and
adc
call
fmuls
xchg
movsl
jmp
cmp
xchg
data16
and
cmpl
pop
ret
jae
adc
fmull
jne
mov
push
xchg
and
fcomi
sub
jmp
add
mov
loope
daa
and
push
js
adc
enter
sbb
mov
push
pushf
add
mov
fsubl
and
out
fistl
cmp
sbb
pop
push
push
push
mov
rcrl
dec
push
adc
popf
xor
and
insl
dec
ss
or
sub
les
mov
add
and
int3
int3
lods
into
inc
cli
and
xchg
add
xor
out
fisttps
je
jl
pop
imul
add
outsb
add
insb
aaa
jno
add
or
popf
xchg
adc
cmc
mov
dec
imul
and
outsb
push
push
pop
popa
fs
popa
imul
insb
gs
bound
arpl
pushl
outsl
jae
dec
popa
outsb
adc
insl
popa
jo
imul
inc
imul
popa
insb
inc
insb
and
sbb
scas
je
cmovbe
ljmp
insb
dec
outsl
jbe
dec
gs
pusha
jns
arpl
jmp
data16
jo
imul
insb
je
jns
outsl
jo
add
mov
ja
add
jo
loopne
push
movsl
mov
sti
add
hlt
or
sbb
hlt
nop
cld
out
pop
push
mov
cmp
es
sub
cld
jmp
cmpl
jbe
leave
mov
ljmp
test
insb
out
mov
lea
cwtl
cld
data16
hlt
cmpb
sbb
push
sbb
xor
mov
sbb
inc
daa
daa
jne
fs
enter
jmp
nop
sub
cltd
ret
int3
je
mov
xor
mov
lods
mov
ss
js
cmp
sbb
addb
dec
push
imul
andl
and
push
pop
lods
xor
cmp
je
cmp
push
cmp
je
jne
mov
cmp
je
cmp
je
cmp
jno
lahf
pop
jge
outsl
xor
mov
xor
mov
out
in
mov
add
or
sbb
sbb
loop
shl
loopne
mov
leave
out
cld
xor
sbb
sbb
sbb
sbb
in
leave
sbb
scas
push
and
bound
imul
jb
sbb
nop
push
sbb
pop
mov
in
in
cmp
rolb
scas
sbb
pop
sbb
adc
scas
and
add
mov
mov
test
and
dec
in
and
pop
cli
and
add
test
insl
loope
fiadds
sar
push
mov
inc
loop
arpl
inc
xor
sar
dec
mov
cmp
mov
sbb
sar
dec
jge
jle
mov
mov
fstps
dec
sbb
rcl
lods
call
mov
jmp
fidivrs
pop
push
pushf
add
popa
lea
cmp
or
inc
pop
imul
stos
in
and
and
inc
jne
dec
imul
stos
push
and
add
jo
and
dec
leave
sub
stos
lods
pop
insl
mov
jg
pop
inc
pop
addr16
cmp
enter
and
and
jb
jns
and
and
inc
out
sarb
mov
adc
icebp
adc
cmpb
fldl
outsb
cmc
test
and
sbb
sub
mov
inc
loop
inc
inc
pop
and
sarb
sub
ds
repnz
and
pop
ja
in
push
daa
cmp
push
xor
adc
pop
mov
jns
daa
push
or
lock
xchg
mov
mov
sbb
sub
sub
xchg
push
leave
sub
int
push
push
xchg
add
rolb
std
or
scas
sub
push
repnz
ja
lea
push
sub
enter
mov
call
lock
add
andb
out
lcall
cmpw
jb
test
adc
inc
incl
mov
push
fisttpll
adc
jne
arpl
add
js
ret
in
xchg
pop
push
pop
inc
push
push
enter
mov
push
leave
subl
cs
nop
xchg
push
or
dec
add
or
loopne
les
sti
and
adc
fdivl
inc
arpl
sbb
das
shll
lock
nop
or
sub
mov
adc
popf
aad
and
ret
subl
add
jae
cmc
cwtl
ret
nop
add
adc
jl
add
push
adc
mov
inc
mov
cmp
scas
movl
in
add
adc
sbbb
das
xor
in
add
pop
imul
mov
pop
jbe
inc
dec
aad
xchg
pop
enter
inc
push
inc
pop
inc
fadds
cmp
insb
add
inc
sbb
das
jae
fwait
andl
and
sbb
or
jg
inc
ss
xchg
cli
or
pop
sub
movsb
mov
je
insb
jae
xchg
cwtl
test
pusha
add
int3
fcomip
adc
mul
add
dec
and
adc
in
add
cmp
dec
dec
fs
fcoms
xor
test
nop
or
aas
add
inc
ss
sbb
adc
and
inc
popa
aas
test
lods
jl
fldcw
and
xchg
and
jns
mov
out
out
gs
repnz
out
push
add
mov
adc
jnp
sub
and
inc
jle
jmp
addb
fxch
pop
xchg
test
mov
scas
fsts
addr16
xchg
daa
sahf
xchg
divb
xor
cld
outsb
aaa
pop
push
daa
and
add
and
fcomps
push
add
addr16
adc
int
and
aas
fnstenv
sub
cmp
popf
sub
fwait
sub
roll
call
dec
dec
add
add
repnz
loopne
dec
pop
aad
dec
push
dec
push
pop
lret
fstpt
push
push
add
pop
dec
pop
arpl
or
pushl
inc
or
sub
pop
xchg
add
pop
add
xor
repz
add
js
jnp
mov
popa
add
pop
add
pop
xchg
std
loope
mov
jmp
sti
into
or
nopl
jae
add
jae
jae
pop
or
or
jge
insl
mov
push
fwait
xor
ss
jbe
cli
jecxz
add
rorl
add
fstpt
mov
add
inc
dec
add
pop
daa
ja
bound
imul
sub
or
out
sbb
inc
dec
mov
es
and
insl
sti
popf
cmp
add
and
adc
or
leave
or
mov
ss
arpl
pop
jno
fistl
and
popf
inc
aaa
sub
sub
add
mov
add
pop
pop
pop
inc
outsl
andb
fxch
cwtl
sub
sbb
ret
push
mov
aas
cs
mov
or
add
mov
mov
mov
aas
mov
fldt
pop
sbb
add
mov
imul
aaa
fbld
notb
mov
aas
push
inc
inc
inc
xor
test
inc
or
pop
test
sbb
inc
addr16
aaa
xchg
test
pop
ss
sbb
mov
cmp
adc
es
inc
sbb
es
jae
adc
adc
jno
popa
iret
mov
es
sub
xor
test
or
and
ret
fcomps
sub
cmp
inc
xorb
xchg
mov
push
insb
test
out
lret
or
scas
inc
dec
pusha
and
dec
fadds
arpl
leave
fdivrl
repz
cwtl
inc
sub
cmp
lea
xchg
and
jb
mov
mov
add
je
and
insl
subl
mov
adc
jno
dec
lods
out
mov
and
dec
sbb
add
aas
xor
out
mov
mov
cmp
push
ljmp
xchg
repnz
icebp
jne
subl
push
repz
fdivl
xor
mov
outsl
addr16
cmp
xchg
xor
fcmovnu
mov
sbbl
outsb
rorl
and
jne
xlat
pop
lahf
std
sbb
rcrl
iret
xor
outsl
scas
aam
test
and
xor
xor
aaa
stos
jnp
jg
movsb
jecxz
add
fists
pop
sti
iret
rcrl
mov
adc
cld
add
ljmp
aam
cmp
cmp
xchg
sbb
outsb
mov
pusha
adc
add
adc
adc
or
xor
and
push
lods
outsb
or
cs
mov
jo
outsb
or
out
insl
lods
jecxz
fisubs
jae
push
xor
adc
add
fcoms
or
lods
push
ss
movsb
pusha
data16
xor
movsb
fcoml
mov
push
clc
sbb
inc
jge
fstpt
lock
js
xchg
adc
out
js
jns
mov
stc
jl
add
inc
xor
cwtl
int3
push
pop
pop
push
dec
fmuls
pop
test
dec
daa
rcll
popl
add
lret
sub
icebp
scas
inc
gs
mov
mov
add
inc
aaa
adc
mov
add
add
jne
push
xor
jne
pop
pop
or
ret
mov
and
adc
xor
icebp
insb
xchg
cmpsl
outsb
fwait
jo
cmp
pop
cmp
mov
jge
xor
es
and
subb
jne
and
or
mov
mov
cmc
ret
cmp
jbe
ja
ss
add
jl
and
ret
cmp
jne
int3
addr16
mov
mov
ror
xor
lods
fnstcw
cld
in
ss
dec
cmc
sbb
jl
adc
mov
adc
inc
push
scas
pop
inc
add
or
xchg
mov
in
cmpsb
sti
push
xlat
fdivs
in
dec
jns
mov
mov
cmpsb
in
adc
cmpsl
dec
in
jge
mov
adc
mov
lds
leave
add
jae
sbb
bnd
sti
push
jp
imul
mov
int3
push
scas
shll
ret
call
push
fsubrs
bound
popa
xor
xlat
mov
jl
add
add
fimuls
fadd
js
xor
mov
pop
jmp
fcompl
xchg
jnp
push
mov
fsubrl
shld
or
fucomip
test
cwtl
popa
jae
nop
xchg
push
imul
jo
adc
in
mov
dec
popa
gs
jge
mov
bound
sti
ja
scas
add
pop
mov
out
arpl
mov
daa
loopne
jmp
jg
jno
sti
jo
pop
ret
insl
pop
es
pop
sarb
and
inc
out
ljmp
sbb
and
aam
jle
es
fnstsw
fdivl
insb
popa
mov
sub
andb
out
les
rolb
lds
cmp
addb
add
in
adc
sarb
sti
gs
push
jecxz
loope
testl
pop
shll
arpl
mov
sub
pop
ja
dec
out
shll
ja
jp
dec
jg
stos
out
xor
mulb
sub
int3
xlat
sub
divb
cmp
xchg
inc
outsl
dec
lods
and
repnz
aaa
es
pop
ret
stos
jecxz
shll
je
jle
and
xor
rolb
mov
pop
pop
pop
out
loope,pn
inc
sbb
aas
and
sub
add
in
mov
add
xchg
enter
or
xorl
or
add
and
jmp
scas
push
add
adcl
add
push
xor
cmpsl
push
add
pop
jo
push
cltd
out
sbb
dec
fcoms
pop
dec
out
daa
shrb
ja
add
adc
fwait
rorl
into
inc
in
pop
cmp
push
xchg
pushf
cmp
cld
into
stos
repz
add
or
loopne
lods
dec
dec
pop
fisttps
dec
mov
cmovge
dec
mov
out
dec
dec
ljmp
je
repz
sti
pushf
dec
mov
clc
pop
dec
pushf
and
mov
shlb
aas
ja
lcall
aaa
inc
jge
mov
lret
xchg
xchg
in
xorb
or
and
daa
dec
add
hlt
in
or
and
and
xchg
sbb
lcall
daa
sarl
mov
dec
fincstp
sbb
lahf
ja
je
aas
jle
mov
cmpsb
pop
cs
cmpsl
clc
inc
jmp
mov
and
push
push
push
push
in
rorb
adcb
fs
jno
movsb
iret
mov
gs
and
popl
iret
mov
lahf
ret
pmaxub
icebp
idivl
xor
xchg
sbb
mov
shlb
int3
push
pop
mov
aam
xor
jno
sahf
rorb
sbb
imul
mov
adc
dec
into
sbb
aaa
add
cmpsb
in
push
inc
pusha
pop
testb
lahf
pop
jmp
mov
cs
mov
outsl
mov
or
mov
push
mov
rcll
iret
or
stc
je
inc
daa
add
xor
pop
and
int3
add
xchg
cmp
pop
sub
or
dec
daa
pop
cld
sub
lahf
jp
sub
mov
call
dec
cld
push
aas
les
cmp
pop
hlt
es
add
movsl
lahf
bound
pop
sti
daa
shlb
cmp
loope
imull
daa
les
mov
and
jecxz
rcrl
push
xchg
mov
aaa
adc
inc
jae
pop
pop
push
sbb
or
push
or
push
js
add
jnp
add
sbb
lea
add
sar
mov
add
and
rcrl
mov
or
mov
stc
push
aaa
or
loop
ret
lods
jecxz
sbb
and
inc
cltd
add
sub
mov
xchg
fnstcw
test
pop
cs
fistpll
mov
add
xor
loopne
dec
mov
and
or
mov
sub
jmp
mov
xchg
sub
das
rol
push
mov
adc
sub
ss
sbb
inc
xor
xor
mov
movsb
adc
in
jb
fsubl
jp
ds
iret
fidivl
out
cmp
jg
aam
xchg
push
cmp
and
cmp
ss
adc
inc
adc
push
rcll
push
leave
lcall
dec
shlb
inc
aas
ljmp
cltd
outsl
fs
add
stos
or
stos
mov
sarb
push
push
inc
loopne
aam
xchg
cs
sub
add
add
js
jns
inc
ret
add
mov
sbb
inc
jo
aas
push
push
hlt
int3
test
push
insl
packssdw
inc
sub
mov
sbb
mov
sbb
dec
movsl
aas
adc
or
or
scas
bound
frstor
jbe
sti
mov
push
lret
adc
orl
cmp
cmp
mov
mov
stos
ss
into
lea
mov
add
rcl
in
fdivrs
jle
adc
and
add
fcmovne
push
loope
fsubs
jno
push
mov
push
jmp
fldcw
pop
fiadds
add
lods
add
xor
sbb
sbb
dec
and
jns
or
sub
push
ficoml
adc
xchg
lods
outsl
je
add
cltd
adc
jae
popa
push
sub
push
mov
push
ljmp
xor
in
repnz
and
les
test
lahf
fdivrl
sahf
hlt
mov
inc
cld
push
sbb
mov
fidivrl
out
sub
push
call
xor
aam
out
clc
js
push
cs
movl
gs
daa
fsts
dec
fistps
sub
jno
cmp
jbe
jp
js
icebp
jno
adc
std
ds
rcll
fldt
xchg
fstps
cmp
xchg
cs
xchg
mov
sbb
add
pop
sarb
int
out
add
fdivs
call
cmp
iret
cmp
stos
pushf
mov
insb
xor
adc
lock
aaa
popf
sbb
push
jl
sbb
movsb
loopne
lods
out
xchg
out
in
sub
sub
jnp
mov
sub
or
sbb
push
cmp
shrb
ficompl
add
adc
outsl
or
pop
cmp
scas
cmp
lods
push
push
xor
data16
dec
add
pop
iret
cmp
mov
add
sbb
aaa
inc
iret
adc
push
rcl
in
add
or
inc
push
jmp
in
pop
and
repnz
add
or
and
xor
push
push
data16
sahf
xchg
inc
mov
mov
cli
fstps
pop
dec
in
insb
test
cwtl
imul
pop
sub
pop
ret
out
add
hlt
mov
shl
into
fstpt
rol
xchg
mov
and
sbb
test
outsl
mov
in
add
jno
push
or
ret
ja
and
mov
xor
xor
or
add
fs
xlat
inc
out
fwait
cmp
dec
scas
xor
and
pop
ret
add
adc
lldt
out
out
mov
add
fcmovnu
test
loope
pop
test
dec
push
jno
push
push
lods
paddw
and
ss
or
xchg
push
xor
xchg
sub
add
adc
andb
push
aaa
or
and
popf
cmp
cmc
ret
ja
das
ds
mov
inc
xchg
sub
pop
lock
push
cmp
out
xchg
add
add
fbstp
bound
scas
aad
mov
ljmp
test
scas
loopne
xor
inc
jnp
stos
and
sbbb
pop
cmp
mov
enter
cmp
add
enter
jno
pop
ret
xor
out
lods
sub
sub
dec
icebp
jg
xor
popf
lahf
loop
rcr
and
sub
ja
ds
shrb
xchg
div
punpckhbw
mov
and
push
xor
jns
and
xor
pop
fnsave
pop
fidivl
cmp
decb
push
push
in
les
or
movsl
fisubrs
and
xchg
iret
xor
sub
jp
mov
pop
fxch
or
cli
aam
mov
xor
sub
xor
or
movsb
fldenv
or
and
movsl
test
scas
outsl
mov
add
inc
clc
into
pusha
aas
pop
fcomps
push
push
xor
sub
in
iret
mov
mov
sub
push
pusha
pop
and
add
mov
push
mov
push
inc
subb
mov
mov
jns
mov
inc
gs
repz
pop
sbb
adc
add
repnz
das
dec
test
ja
sbb
mov
shl
out
jle
aas
es
inc
xchg
cwtl
mov
pop
faddp
push
sbb
cld
cmp
mov
lods
loopne
cmpsl
in
test
mov
in
pop
lds
setle
call
sbb
sbb
loope,pn
fstp
sbb
cmpsl
ljmp
hlt
inc
imul
push
lods
push
fimull
sbb
xchg
sbb
sub
mov
dec
xor
fmuls
add
lock
lcall
ds
sti
fildl
and
and
hlt
sub
fimull
mov
jbe
xor
sub
popf
inc
cmp
ja
mov
pop
jnp
test
cmpsb
lods
jecxz
cld
mov
jo
arpl
sbb
inc
shrb
out
cmp
xchg
je
cmpsl
fidivrs
or
out
and
push
cmpsb
mov
scas
sahf
cwtl
pusha
pop
aas
dec
in
fcmovnbe
mov
jb
movsb
push
fucomi
loope
push
sub
sbb
push
mov
pop
sub
nop
out
xchg
cmp
lea
adc
sub
popa
es
inc
fdivs
int3
push
and
or
outsb
cmp
lds
sbb
and
pop
loope
mov
pusha
push
sbb
and
das
adcb
clc
ret
iret
std
add
outsl
dec
fcom
push
or
icebp
movsl
push
cmp
mov
shlb
jno
jbe
outsb
push
mov
ljmp
inc
pop
outsb
fnstenv
outsb
cmp
xchg
push
scas
popa
popf
shrl
test
jmp
and
insb
mov
push
lea
xor
jle
sbb
adc
lcall
daa
cmc
sbb
iret
shrl
test
mov
adc
in
daa
or
jbe
or
movl
popa
cltd
cmpsl
je
icebp
pop
xchg
adc
adc
or
stos
pop
jae
js
add
dec
sub
xchg
pop
mov
gs
pop
jae
mov
lahf
stc
cmp
in
bound
sarb
shll
fstp
mov
sbb
imul
enter
xor
cmpsb
cwtl
inc
jb
das
inc
and
pop
xchg
or
shl
xor
mov
imul
cmpsl
stos
decb
push
stos
mov
mov
call
out
sbb
rcr
xor
or
icebp
insb
les
cmp
sub
bound
adc
cmp
sbb
scas
movsb
and
jae
dec
push
les
popf
paddusb
jae
dec
out
push
pushf
test
test
sub
cmpsl
add
shl
push
out
add
mull
aaa
jmp
pop
inc
jmp
sahf
ja
shrb
and
mov
mov
cmp
fiadds
pop
cmp
push
fldt
dec
jnp
mov
loop
iret
sub
stos
add
lea
pop
xlat
push
das
push
dec
fisubrl
ja
ret
mov
mov
call
test
jnp
les
cmp
dec
jg
aam
loope
jg
dec
sub
mov
and
push
xchg
jp
rolb
sub
mov
ljmp
and
les
fstpl
push
dec
adc
andb
adc
sbb
pop
xchg
sbb
sub
inc
push
orl
lods
and
inc
mov
dec
out
cmp
popa
inc
mov
ljmp
sti
push
adc
jo
mov
incb
mov
inc
and
insl
aas
jmp
scas
test
rorl
jp
das
jbe
cmp
or
xchg
ss
insb
leave
fisttps
adc
push
orb
mov
push
out
ret
jo
sbb
jle
pop
popa
push
mov
cli
mov
dec
cmp
cmpsb
sbbb
xorl
mov
je
aaa
mov
aam
fucomp
les
shll
roll
rcll
fucomi
xlat
jg
repnz
mov
jnp
xchg
fcoml
icebp
and
cmp
sub
and
sub
fmuls
lods
pop
fstpl
jno
and
pusha
mov
lcall
sti
xchg
and
jecxz
push
pusha
mov
push
add
xor
data16
mov
mov
cmpsl
out
je
add
int3
addr16
pop
mov
xor
sub
push
push
cltd
cltd
icebp
fnstenv
aam
les
jp
mov
popf
jecxz
push
fwait
jo
and
pop
int
xchg
loope
aad
insl
mov
in
rolb
stos
mov
test
in
call
loop
and
mov
jb
or
jp
push
mov
div
lcall
jge
cmc
mov
mov
loopne
xchg
sbb
pushf
pushaw
scas
jp
push
nop
cmp
sub
jb
test
fcomps
sub
xor
popa
insl
ja
or
sub
lods
lcall
push
aad
push
fiadds
push
sbb
mov
and
bound
and
std
sbb
jo
mov
cld
adc
cmp
sbb
scas
insb
lock
add
jge
sbb
add
sbb
lods
fstps
jns
addr16
or
clc
cli
mov
outsb
pop
dec
and
adc
daa
decb
push
shrb
xor
rorb
setnp
xor
rol
sbb
aad
mov
push
push
pop
mull
je
cmp
pop
lock
sbb
xor
dec
enter
jae
xor
loopne
mov
mov
outsb
imul
mov
lods
ret
filds
mov
cwtl
push
sub
hlt
xlat
jbe
lret
popf
aaa
mov
outsb
or
jnp
cmp
rclb
sub
ret
aas
sbb
mov
out
and
stos
sbb
xor
rorb
loopne
add
dec
daa
mov
jg
test
pop
or
dec
adc
add
adc
daa
btc
push
mov
aaa
or
test
fdivrs
aam
les
pop
cs
pop
mov
dec
pop
rolb
imull
cld
xor
add
jb
inc
pmuludq
rcr
mov
inc
in
insl
cltd
jae
mov
pop
mov
pop
push
test
stos
push
ret
or
inc
jae
mov
int
mov
adc
negb
push
or
fcompp
pop
filds
mov
in
loopne
pop
cmp
jge
mov
test
mov
adc
adc
jns
repz
fcompl
lahf
adc
mov
mov
mov
mov
sub
jb
pop
mov
in
xor
and
out
or
and
sub
test
sti
pop
inc
pop
pop
out
mov
ret
fcomps
add
xor
add
cs
fldcw
mov
fsubp
cmp
mov
inc
fcoml
lcall
add
sub
iret
mov
test
mov
and
mov
mov
mov
xor
push
push
mov
les
in
or
push
mov
lods
mov
xchg
xchg
int
mov
cvtdq2ps
mov
dec
pop
push
popl
pusha
shlb
and
mov
subb
out
fs
mov
xor
sbb
cwtl
inc
pop
pop
cmp
repnz
in
and
fimuls
inc
xchg
inc
sahf
rorl
mov
mov
neg
fiaddl
daa
push
pop
and
popa
jno
pop
mov
and
and
fs
mov
dec
push
pop
xchg
adc
mov
and
daa
fildl
mov
jmp
ss
sub
push
pop
push
jo
jecxz
inc
loopne
or
and
ss
xor
pusha
jne
pop
jnp
sub
int
pop
filds
xor
mov
stos
out
or
sbb
in
xor
push
push
loopne
push
lock
sub
cmpsb
cmp
mov
mov
and
inc
sub
fnstcw
shrl
sub
out
and
jl
mov
and
das
xchg
int
xor
jbe
and
mov
outsb
sbb
and
jge
sbb
mov
fcoms
and
in
out
or
test
in
pop
mov
scas
fidivs
inc
adcb
setns
nop
xchg
cmp
pop
out
das
sbb
stc
dec
or
insb
sbb
xchg
fnsave
sti
add
xor
ljmp
mov
call
push
push
dec
dec
mov
xchg
rolb
cwtl
cmp
fildl
xchg
inc
and
jle
aas
sub
or
out
push
arpl
sbb
pop
sub
loope
jmp
loope
outsb
jns
sub
add
lock
jmp
cmp
push
out
insl
xchg
mov
iret
sub
add
lock
cld
mov
lods
testb
or
sbb
mov
aam
or
inc
je
daa
mov
sub
fdivrl
addr16
inc
mov
mov
mov
mov
push
and
add
add
push
test
pop
xchg
sbb
push
mov
xchg
mov
call
in
out
mov
in
xlat
loopne
push
cs
ljmp
adc
inc
or
jl
xchg
mov
fcomp
mov
loopne
rol
outsb
std
lcall
shll
dec
xor
push
dec
xor
loopne
int3
xor
dec
dec
and
jbe
mov
push
ret
movsb
xchg
inc
jle
jl
push
fldl
adc
jns
mov
mov
int3
jae
fs
dec
scas
inc
shlb
in
int3
xor
mov
pop
popa
push
and
or
sbb
lret
sarl
adc
daa
adc
sarb
lgs
popf
jnp
sysret
outsl
outsb
aas
outsl
push
mov
das
jmp
xor
xor
es
xchg
out
sub
das
sub
inc
and
push
mov
inc
push
rorb
jo
loop
push
sub
sbb
arpl
mov
bswap
test
push
pop
imul
inc
orb
mov
popf
pop
cltd
cmp
loop
cmp
jle
cmpsl
inc
sub
aam
dec
or
mov
aad
and
jbe
inc
mov
xchg
loope
pop
mov
jl
dec
lea
lods
and
clc
data16
mov
icebp
fbld
adc
sub
lds
lahf
fsubl
or
loop
das
push
test
fcoml
cwtl
loopne
add
call
or
adc
jb
pop
daa
pop
push
fbld
scas
fildll
pop
mov
insl
je
push
scas
in
sub
pop
inc
push
popf
jo
iret
scas
fcmove
inc
pop
andl
pshufw
into
loopne
insb
push
hlt
xchg
inc
pop
sarl
sbb
sub
mov
pop
adc
sub
add
cmp
xchg
jmp
enter
mov
lea
pop
lahf
lret
iret
call
xor
adc
andl
mov
stos
loopne
insl
stos
roll
insl
imul
or
cwtl
nop
adc
ja
or
jp
jge
test
xor
inc
fistl
jecxz
cmp
sbb
jo
xchg
hlt
adc
jns
cmp
js
imul
into
jo
out
xor
sub
rclb
jnp
sti
add
ss
jns
inc
movsb
cmpsl
iret
leave
dec
xchg
outsl
mov
and
lret
insl
push
fistpl
pusha
and
out
jno
es
das
divb
and
push
scas
pop
pop
push
lcall
test
subb
scas
shlb
mov
je
cmp
adc
push
roll
mov
dec
and
scas
push
es
ljmp
lret
cmp
shr
lds
rol
lods
je
add
scas
mov
mulb
mov
pop
push
fimuls
imul
add
shrb
lods
mov
sti
mov
loopne
fdivl
fidivs
push
loopne
dec
push
xchg
daa
mov
pushf
jle
addr16
sbb
out
and
jno
xchg
xchg
jno
and
xor
xchg
jecxz
out
loope
mov
sub
outsb
sub
je
ficompl
jmp
add
adc
and
jns
mov
sarl
dec
movsb
mov
out
ds
cmp
imul
pop
mov
mov
fstps
daa
out
xchg
pop
fwait
rcr
js
ret
sub
and
fnstsw
push
fstps
pushf
addr16
ljmp
xlat
loope
ja
loopne
shll
daa
mov
or
das
pop
mov
inc
cmpsb
mov
pusha
fldcw
test
cli
roll
xor
imul
fildl
sahf
rclb
pop
mov
jo
es
mov
fdivrl
mov
sub
dec
outsb
outsb
sbb
pop
jo
fisubrs
push
mov
int3
push
fdivs
inc
xchg
vmovss
dec
call
cwtl
sbb
ffree
popa
stos
jle
loope
lods
jmp
add
ljmp
call
mulb
mov
xor
xchg
loopne
ret
cmc
lcall
gs
sbb
shll
xchg
rorb
mov
cwtl
pop
cmp
rcrb
cmp
or
or
mov
add
je
push
mov
and
std
jnp
ret
and
jno
int3
lods
jl
and
cltd
loope
enter
xor
ss
mov
out
scas
push
fdivrl
test
sbb
rol
js
aas
fsub
mov
test
ret
add
or
adc
inc
mov
mov
jb
and
jo
sub
add
rcr
and
aad
xchg
push
cmp
nop
jo
push
pop
pushf
pop
aad
jl
cmp
mov
push
hlt
addl
and
sbb
test
pushf
adcb
roll
lcall
add
dec
inc
pop
xchg
adc
cwtl
push
xorb
jo
pop
add
dec
mov
mov
xor
fs
inc
les
iret
cltd
mov
add
jecxz
mov
mov
sub
out
pop
push
shrl
ja
pop
mov
repz
lds
jo
lret
popa
test
enter
pop
fisttpll
or
lods
inc
ret
push
push
sti
cli
and
pusha
adc
jbe
mov
mov
fisubl
sub
sti
xor
aad
bound
add
test
loopne
jmp
jecxz
js
inc
add
jecxz
and
mov
and
out
movsb
xchg
or
adcl
push
and
jg
je
cmpxchg
les
sbb
call
lret
inc
ja
shlb
mov
mov
pop
xchg
jl
jmp
jno
out
mov
dec
mul
lods
in
ja
xchg
jno
mov
adc
insb
daa
insl
xchg
jmp
jecxz
xchg
adc
inc
cwtl
push
jb
roll
push
in
push
ret
icebp
cmp
mov
add
jo
fsts
bound
in
fistps
pop
in
dec
mov
sar
or
rorb
add
call
insl
lods
inc
pop
or
cmc
xchg
and
cmpsb
and
push
inc
sub
mov
mov
pop
fcoms
and
es
or
icebp
sti
adcl
pop
xor
popa
mov
jo
sub
stos
inc
sub
adc
jecxz
sub
sbb
fdivrs
mov
push
xchg
test
inc
scas
sbb
xchg
shll
imul
pop
sbb
cltd
popa
sub
add
adc
push
mov
ja
cmp
xchg
mov
jae
roll
test
arpl
adc
or
xchg
lret
jnp
sbb
aam
iret
or
fcompl
loopne
add
pop
pop
hlt
loop
dec
xor
iret
push
mov
aaa
add
lock
add
push
test
stos
push
sub
add
sbb
mov
jo
aam
inc
xor
push
mov
je
xchg
js
adc
push
cs
sbb
pop
sbb
je
and
add
fcomps
sbb
sbb
jne
xchg
out
in
inc
nop
jp
call
imul
imul
or
bound
mov
xor
cmp
test
jle
sbb
leave
popa
jbe
mov
sbb
sub
enter
das
jo
jbe
pop
imul
push
mov
sub
xchg
mov
stc
out
jnp
xchg
pop
fistpl
popa
cmc
push
xor
rorb
nop
aaa
or
ja
mov
add
ret
add
push
imul
xor
xchg
movsb
and
jmp
decb
aam
cmp
fwait
daa
and
add
xchg
movsl
fldcw
sub
jp
repnz
data16
pop
insb
pop
add
add
mov
ss
lret
xchg
jg
rcrl
out
jge
mov
out
xchg
loope
iret
not
mov
add
add
shrb
mov
jbe
add
jbe
outsb
cmp
adc
cmp
fs
outsb
push
or
adc
in
loopne
cmpl
imul
insb
cmp
nop
lcall
xchg
loope
push
fcoms
jb
loope
sbb
pop
jnp
or
loope
sub
rolb
add
fildl
jno
push
out
jno
mov
push
mov
fcompl
inc
fs
ljmp
cltd
lods
pop
jno
das
cmp
out
push
loope
aad
loope
mov
jnp
repz
out
adc
aam
shrb
add
sbb
add
and
add
jns
add
lods
xor
mov
push
call
popa
test
loop
mov
or
dec
mov
pop
loope
movsl
adc
dec
movsl
cmpsb
sbbb
xor
or
sub
test
push
xor
pusha
pop
loop
sti
adc
or
push
sbb
pop
add
or
xor
lret
sahf
lea
in
jp
jmp
mov
pop
dec
and
jge
jmp
jmp
negl
mov
loop
out
adc
or
push
jne
movsb
repz
jl
test
jnp
or
and
test
and
sub
push
movsb
scas
inc
stos
mov
lods
sub
arpl
jno
rolb
inc
or
adc
clc
push
pop
ret
and
or
sub
xlat
cli
ss
out
scas
loopne
je
dec
adc
inc
mov
data16
mov
xlat
pop
push
pushf
notl
xor
ret
scas
lahf
xor
fs
stc
int3
dec
push
sub
mov
scas
call
push
leave
xor
popl
test
and
les
push
divl
push
je
sbb
testb
out
mov
mov
jnp
mov
xchg
jge
scas
add
push
daa
sub
cltd
ret
mov
shll
rcll
adc
or
xor
mov
dec
xor
daa
aaa
add
pop
repnz
movsb
jne
data16
repnz
hlt
add
les
fldenv
jns
aam
lods
fs
es
sub
push
out
xor
rorb
out
pop
pop
adc
push
jo
in
and
sbb
pushf
int3
push
adc
mov
mov
sub
popa
adc
lods
sub
xorb
cs
ja
inc
mov
xor
decb
xlat
inc
cmp
sbb
push
jle
shlb
aam
lods
lods
dec
pusha
orb
pop
pop
or
enter
cmp
jmp
movsb
rsqrtps
pop
mov
pop
mov
imul
bound
ds
ja
mov
out
call
dec
mov
push
or
iret
sbb
push
enter
add
dec
test
movsb
add
fwait
dec
xor
jne
test
ds
inc
xorl
int3
xchg
aam
addb
in
adc
xchg
les
scas
jge
fwait
dec
ss
xor
xchg
bsr
push
and
orl
jo
xchg
cmp
fiaddl
adc
ds
andb
or
lcall
mov
int3
sbb
int
jbe
add
inc
mov
xor
sahf
out
sub
in
fwait
jecxz
add
pushf
lock
mov
orl
repz
cmp
cmp
jmp
inc
adcb
aad
add
push
and
cmpb
test
rolb
xchg
fidivl
dec
outsb
push
mov
push
add
js
sahf
popf
into
mov
pop
mov
ret
sbb
inc
mov
dec
repnz
cmpsl
pusha
jmp
imull
sub
pop
stc
adc
andl
cli
cmp
inc
dec
sub
cs
inc
cld
xchg
dec
and
adc
push
pop
mov
or
call
out
adc
sbb
cmpsl
inc
push
pop
pop
outsl
push
jl
divl
inc
mov
loopne
test
out
fiaddl
loopne
or
mov
xor
cmp
pop
and
mov
sub
adc
sti
or
sbb
ret
jle
mov
adc
outsb
sbb
jne
mull
outsl
inc
aaa
xor
in
jnp
xor
inc
xor
fs
ja
push
aas
add
jae
sti
fisubs
adc
jg
out
mov
sbb
adc
add
in
jnp
dec
inc
adc
notb
test
fwait
out
mull
sub
or
inc
mov
xor
pop
mov
lahf
jnp
mov
adc
out
out
and
xchg
push
xor
notl
pop
cli
fisubs
xor
inc
fs
adc
mov
pop
negl
or
leave
add
jg
cmp
pop
mov
xchg
mov
xchg
stos
xchg
pop
outsl
je
orb
jle
fsubs
adc
add
xchg
test
mulps
stos
rcr
mov
add
fwait
lea
iret
rcll
mov
jg
mov
lret
inc
loope
pop
stos
mov
mov
cmp
stos
test
andb
inc
or
pop
sti
into
pusha
mov
add
nop
lea
orl
xor
cmp
mov
roll
adcl
enter
lods
mov
jne
lahf
dec
das
add
xor
mov
jbe
and
jecxz
mov
mov
out
mov
xchg
mov
in
sub
in
cmp
jg
pushl
iret
std
sti
pop
xchg
xor
dec
lcall
xchg
fwait
mov
ret
dec
arpl
xor
test
cmp
rcll
int3
xor
sbb
fistps
mov
xor
jae
lods
and
jecxz
and
xlat
jno
andb
sub
dec
inc
aaa
ret
bndstx
adc
push
loope
mov
fmulp
cmp
fcomp
cmp
xlat
pop
addr16
insl
jbe
cmp
fucomip
add
xor
int3
fcmovne
cmovns
cmp
xorl
leave
add
dec
rclb
pop
mov
ds
pop
aam
das
sub
mov
out
cltd
pop
cmp
fsub
mov
sbb
xor
addr16
daa
fucomp
arpl
loop
insl
repnz
add
imul
insb
testl
and
wrmsr
jnp
sbb
pop
jg
int
mov
push
cmp
sbb
inc
popa
sbbb
ret
dec
push
fisubs
mov
aaa
fwait
test
imul
and
inc
lods
fwait
sarb
pop
dec
adc
lods
popa
xchg
or
dec
and
iret
push
fisubs
test
sbb
mov
fsubrs
pop
sti
add
mov
xchg
sub
xor
mov
test
mov
test
fsubs
xchg
cmp
mov
cmp
mov
ss
adc
cld
push
jo
call
pop
mov
int
sub
dec
int
push
in
fstp
pop
mov
cmp
push
sarl
shlb
sub
repz
aam
push
mov
inc
xchg
push
addb
dec
mov
out
mov
and
add
lret
pop
scas
jp
mov
andb
pop
xchg
or
test
xor
mov
jg
dec
call
into
sbb
aad
or
inc
loop
cmp
xlat
es
push
scas
inc
dec
or
in
push
cmc
mov
jge
pop
adc
dec
pop
mov
outsb
sub
flds
in
mov
out
pop
pushf
bnd
int3
mov
bndldx
xor
rclb
mov
lods
adc
sbbl
mov
xchg
mov
ficoms
mov
push
das
mov
mov
inc
lcall
jo
xor
out
xor
mov
fistpll
add
into
mov
push
ljmp
cmp
inc
fstl
pop
fstpt
leave
es
mov
lods
lahf
loope
lock
push
mov
pushf
sbb
stos
arpl
cli
or
test
inc
ret
mov
nop
push
aaa
out
mov
dec
movups
inc
lea
mov
pop
scas
lcall
xchg
inc
jne
test
subl
jg
jo
and
push
fildl
fisubrl
imul
adc
mov
and
mov
lea
jo
in
fwait
jnp
lcall
mov
add
scas
pop
pop
or
loop
or
xor
pop
stos
adc
fadds
xchg
lret
and
xchg
xor
in
mov
inc
in
or
sub
inc
mov
pushf
sub
aam
mov
aam
jecxz
xchg
out
scas
push
jno
jge
cmc
int
cmp
dec
iret
pusha
mov
jmp
rcrb
add
mov
dec
push
mov
push
int3
add
push
int
movsl
sub
add
jp
shrb
add
aaa
xor
rorw
stos
jg
dec
push
insb
mov
xor
sub
pusha
sub
mov
mov
popf
jns
mov
jae
sarl
sub
mov
call
jo
sbb
sub
test
mov
adc
scas
stos
jnp
cwtl
mov
cld
sbbb
gs
sbb
sub
ss
faddl
sub
addr16
rorl
sti
shrl
iret
imul
push
adc
adcl
lods
pop
adc
dec
cld
stos
notl
mov
out
add
lock
cmc
mov
xlat
enter
cmp
mov
sub
call
fildll
call
lea
loope,pt
sbb
sub
insb
mov
pop
mov
push
lock
add
mov
and
addr16
aam
les
fcoms
pop
mov
lods
mov
jp
inc
and
add
shrl
adc
pop
mov
loope
or
adc
jo
dec
pop
xchg
inc
mov
dec
and
sbb
mov
es
mov
mov
inc
test
push
sbb
jge
ficomps
fsubs
add
xor
push
push
jp
lds
repz
cmpsl
sbb
aaa
cmpl
mov
jmp
sbb
sbb
jge
cmp
xor
aad
pusha
dec
mov
mov
mov
sahf
hlt
cltd
xor
daa
sbb
stos
or
pop
mov
js
adc
xor
or
or
fstps
and
cmp
mov
popf
mov
inc
mov
push
dec
pushf
jnp
outsb
push
xor
pop
jmp
lds
and
push
mov
and
insb
lods
ss
cmp
aad
sbb
ret
sbb
fcmovb
cmc
shrb
dec
aad
inc
fdivrl
and
jmp
cmp
sbb
int3
push
cmpsl
inc
add
mulb
in
or
in
dec
lods
subb
jmp
pop
aam
mov
adc
fisubrl
pop
sub
mov
push
mov
xor
jbe
pop
lret
mov
add
and
rcr
out
jno
jecxz
jbe
call
aam
jne
loop
je
sbb
lods
and
outsl
inc
add
ret
scas
xchg
mov
push
loop
inc
imul
pop
pop
sub
adc
lods
dec
js,pn
je
lea
cld
cmpsl
ret
js
push
fstps
je
stos
fstl
and
push
lcall
adc
jb
fnstcw
add
mov
scas
xchg
scas
out
sti
adcb
pop
jle
jecxz
mov
fmull
or
clc
jecxz
popf
call
scas
cmp
or
scas
popl
add
out
test
and
test
and
imul
icebp
je
in
cmc
test
in
andl
xchg
arpl
roll
jl
adc
push
push
jne
and
xchg
jb
loope
and
add
daa
or
jne
fdivl
lret
jb
sub
repnz
rclb
push
dec
dec
js
repnz
inc
sbb
ret
out
insb
shlb
fsubrl
and
rcll
pushf
loope
xchg
push
addb
cwtl
jo
cs
loopne
rolb
es
shll
mov
loopne
jo
inc
xor
fisubrl
test
loop
das
test
inc
ja
and
or
les
cmc
dec
jne
cmp
int
xchg
orb
fs
jle
push
inc
subl
or
push
add
sbb
xchg
enter
fidivs
jns
jge
cmp
pop
sub
xor
sahf
inc
jge
push
pop
cwtl
icebp
sbb
mov
cmpxchg
or
dec
loopne
stos
cmp
fs
fisubl
lock
shll
mov
jp
inc
pop
inc
cmp
xor
lcall
cs
jbe
ret
lods
xchg
mov
arpl
movb
ret
pop
push
int
push
dec
push
or
lcall
sub
test
test
adc
ret
push
shr
cli
mov
aad
and
aam
orl
xchg
mov
xor
add
hlt
push
push
push
mov
mov
push
xchg
jne
mov
lock
subb
lret
add
loopne
pop
outsb
lods
mov
lea
dec
mov
dec
mov
pop
sub
xor
or
ljmp
mov
call
test
daa
or
add
and
es
popf
push
sub
adc
ds
call
sub
gs
es
mov
je
inc
xchg
add
daa
pop
lods
orb
inc
mov
push
in
out
xchg
push
xchg
xchg
jmp
popa
je
ret
idiv
jle
movsb
adc
stos
faddl
lahf
out
iret
adc
add
into
rorb
xor
and
push
cmp
test
andl
mov
push
inc
lock
je
add
push
add
ficompl
xchg
mov
cwtl
jb
cmp
es
insl
adc
mov
add
mov
add
add
int3
das
adc
mov
cmp
xor
js
mull
lods
pop
das
mov
not
push
test
arpl
mov
adc
mov
pushf
cmp
xchg
pop
push
sub
push
adc
mov
sbb
fst
mov
es
mov
adc
push
cmp
push
xchg
sub
js
push
sar
aaa
lret
sub
sbb
pop
outsb
push
sub
xor
dec
dec
add
push
and
sub
sub
iret
push
cltd
movl
sub
add
loope
std
leave
idivl
jns
jnp
stos
pusha
sbbl
xor
cs
jmp
xor
mov
sbb
outsb
leave
xor
and
fs
add
push
inc
mov
cmpsl
stc
fadd
mov
pop
inc
les
imull
jno
aaa
lods
add
sub
adcl
aaa
test
fldenv
and
xorl
sub
insl
out
and
mov
or
enter
push
and
stos
and
test
xor
xchg
je
sub
call
add
sub
or
leave
shrb
popa
lods
setnp
add
mull
push
xchg
pop
aaa
lods
insb
icebp
aaa
outsl
and
pusha
inc
cltd
fistpl
arpl
arpl
scas
imul
push
lods
popf
cmp
xor
fwait
mov
psrad
scas
jp
cmp
shrb
popa
xor
scas
and
ds
fdivrs
xchg
or
sbb
mov
add
jae
hlt
lahf
mov
loop
add
mov
push
and
xor
out
and
cmpsl
sub
jge
addr16
fsubr
sbb
add
add
aam
lretw
add
addl
scas
adc
ret
iret
pop
call
inc
enter
stos
imul
js
mov
push
test
and
jecxz
stc
hlt
idiv
jmp
cmp
out
sbb
pop
loop
inc
mov
pop
push
sbb
mov
fidivrl
mov
adc
xchg
cmovs
mov
or
adc
pop
adc
stc
jmp
dec
sub
push
and
xor
adc
std
rolb
push
jmp
loope
in
ja
jbe
adc
ja
iret
mov
loop
push
rcr
inc
repz
mov
loope
cmp
push
std
cmp
jnp
enter
insl
jl
add
xchg
cmpl
jnp
add
filds
js
dec
mov
imul
ss
mov
movsb
in
push
xchg
jmp
insb
shlw
loop
nop
je
jno
popa
inc
pop
sbb
or
orb
divb
jo
pop
and
test
mov
gs
cmpsl
loop
push
sbb
add
jp
add
je
mov
and
add
adc
test
push
mov
pop
mov
testb
sbb
and
jecxz
scas
cmpb
shll
fdivrp
sub
sub
sub
mov
pusha
xor
and
daa
push
sbb
inc
xlat
jge
cmp
into
aaa
orl
and
int3
scas
xor
vmovdqu
ss
inc
jae
daa
add
daa
jle
aaa
add
dec
stos
imul
loop
cmp
inc
lcall
pop
iret
xchg
std
pop
adc
mov
and
ja
or
sbb
loopne
mov
loopne
mov
sub
in
incb
das
arpl
pop
leave
xor
xchg
imull
cld
lods
mov
mov
popa
and
dec
xor
and
je
loopne
inc
mov
sahf
add
add
dec
push
filds
xor
add
fcoml
incl
orb
and
mov
int
push
inc
cmpsl
in
sbb
stos
push
pop
scas
mov
inc
daa
stos
inc
pop
lahf
lahf
ficoml
stos
xorb
mov
sbb
sub
inc
xchg
cmpsb
pop
mov
inc
sti
aas
aaa
and
je
push
xor
lods
mov
es
cltd
sbb
add
hlt
add
dec
jns
hlt
add
test
fcmovu
stos
cmp
in
lret
jns
in
subl
dec
es
or
or
std
fistpl
and
jp
xchg
sbb
mov
addr16
and
xor
sub
dec
les
cmc
dec
jnp
or
mov
lock
jno
dec
daa
repz
mov
popa
icebp
and
mov
jno
add
sbb
jp
scas
push
dec
push
or
inc
mov
or
jp
xor
dec
call
incl
add
shl
push
or
jnp
jo
in
adc
cld
enter
xor
push
add
add
fisubs
repz
cmpsb
dec
loop,pn
ljmp
lcall
xor
push
jg
cli
push
xor
push
cld
sub
popf
pop
sub
imull
fiaddl
sbb
sbb
push
testb
mov
lods
je
pusha
inc
aas
ds
ret
mov
or
mov
int
popa
imul
pushf
outsl
pop
push
pop
les
add
xchg
subl
inc
push
out
iret
jb
adc
add
mov
xchg
push
int
jg
xor
lcall
addb
mov
and
xchg
pop
and
xor
pusha
cmc
or
adc
sbb
jg
push
or
xor
push
dec
sbb
loopne
into
cmp
bound
or
and
punpckhwd
aad
add
pop
add
mov
push
mov
jle
xchg
pop
imull
pop
stos
and
mov
push
lods
pop
mov
mov
pop
pop
repz
sbb
cmp
sarl
popa
pushl
out
or
stos
sbb
dec
js
lcall
and
out
popf
adcl
xchg
and
and
movsb
ljmp
icebp
mov
add
cltd
pop
sbb
jp
ss
sbb
jmp
aas
xchg
sbb
mov
cmp
sbb
imul
aaa
push
mov
push
inc
or
popf
loopne
pushf
lods
mov
sub
jo
scas
pusha
fidivl
mov
mov
mov
jmp
mov
add
out
scas
push
lods
jmp
adc
pop
and
xor
daa
cmp
shll
push
sub
inc
pusha
push
sbb
sbb
sbb
xor
inc
fcompl
repz
mov
fcomps
sbb
cmp
loop
push
mov
cmc
int3
in
test
dec
test
insl
ja
jle
scas
scas
popa
das
add
mov
out
inc
rclb
mov
sub
pop
pop
xor
cmc
mov
mov
iret
lea
mov
sub
into
pop
mov
imul
int3
das
pop
jge
adc
sbb
push
ss
pushf
jnp
sub
sub
lret
out
es
out
jne
shll
mov
jmp
imul
mov
popf
sub
rorb
pushf
sub
test
adc
xor
push
cmc
lods
jnp
inc
rcl
push
pusha
xlat
adc
cmp
shr
and
cmp
cmpsl
or
mov
out
sarb
cs
hlt
push
jbe
insb
rorl
sub
mov
test
add
add
outsb
loope
and
push
jne
cmpsl
ja
lods
push
push
xor
add
das
ret
push
adc
outsb
mov
sub
sub
ret
pop
jno
fcoms
aaa
mov
jecxz
mov
or
or
sub
mov
mov
and
aas
ret
out
inc
add
lods
add
xor
movl
cwtl
jne
inc
jl
inc
add
and
addr16
dec
sub
push
mov
in
dec
inc
sahf
test
jo
jne
andb
mov
or
xchg
fsubr
xor
loopne
cs
imul
in
out
sub
push
fildll
xor
daa
adc
sub
fldt
jbe
jae
sub
and
pop
insb
dec
pusha
pop
jne
jne
and
inc
mov
and
das
mov
ud1
adc
das
push
fistl
rorb
mov
insl
inc
leave
in
mov
sub
cltd
push
or
xor
push
xchg
fcmovnu
out
rcll
sahf
lret
ficompl
push
sbb
gs
sbb
outsb
push
cld
data16
scas
imul
sbb
loop
iret
jbe
add
test
sbb
nop
out
jae
out
loope
xor
dec
mov
movsl
ljmp
in
mov
push
cli
repnz
xchg
cmp
loope
xchg
add
sarl
and
sbb
montmul
cmpsb
add
or
out
pusha
cmpsl
and
and
and
jbe
pop
insb
mov
es
data16
es
add
lret
cltd
insl
rcll
xor
xchg
lahf
add
push
pop
stos
pop
aad
aaa
inc
jne
adc
mov
push
push
cmc
and
addr16
xor
add
dec
pop
into
jle
les
ljmp
imul
sub
rclb
inc
cmpsl
leave
fsubs
xor
test
jo
mov
xor
mov
out
shll
or
movsb
cmc
gs
xor
sbb
sbb
push
insb
mov
sub
inc
out
mov
cmp
popf
jno
mov
and
xchg
jnp
lds
les
cwtl
fiadds
push
cmp
insl
out
and
and
dec
iret
repnz
ja
les
push
inc
stos
dec
shll
jnp
xor
mov
and
hlt
pop
push
leave
movsb
cmpsb
sbb
mov
mov
lds
xor
pop
lods
cmc
push
jle
add
and
fcmovnbe
jnp
push
lods
and
push
aaa
jl
mov
adc
add
cmp
and
loop
call
dec
in
insl
and
or
sub
mov
pop
jb
shr
sbb
xor
iret
xor
pop
jae
hlt
sub
fdivs
ja
fwait
jmp
add
rolb
jnp
and
and
or
movsl
mov
sbb
add
xchg
fldenv
outsb
inc
inc
nop
ja
xchg
dec
movl
and
pop
xor
insb
xchg
movsb
push
ret
add
fildll
dec
dec
lcall
xor
aam
sbb
cwtl
je
push
or
lods
sub
das
push
xor
gs
inc
push
imul
imul
xchg
imul
mov
add
add
add
sahf
imul
das
sbb
imul
les
or
daa
data16
add
addr16
sbb
push
rclb
sub
shrb
insl
aad
jmp
movsb
xchg
cmp
fldt
add
mov
je
jae
push
xor
jmp
cmp
ficoms
sbb
push
push
dec
push
repz
mov
and
push
or
movsb
ljmp
or
push
into
shll
pop
cmp
jg
xlat
loopne
mov
push
pop
nop
mov
jbe
loopne
mov
ret
fidivrl
lock
add
pop
out
xlat
movsb
ret
aam
inc
outsl
jnp
imul
inc
loopne
mulb
add
mov
jb
inc
add
adc
xor
aad
aaa
jnp
mov
das
rol
inc
adc
mov
stos
jbe
pop
fsubr
dec
or
add
dec
cmpsb
and
aaa
xor
sbbb
daa
jp
lock
add
out
lods
adcb
mov
adc
insb
das
cmp
dec
lock
lret
mov
je
mov
std
js
das
je
lods
and
sub
orb
sar
adc
mov
pop
js
pusha
aaa
test
stos
jns
jb
cmpxchg
push
mov
scas
and
pop
pop
push
ljmp
js
push
and
inc
adc
xor
xor
mov
iret
xchg
dec
add
lahf
stc
jmp
cmp
movl
pop
mov
in
add
popf
xlat
outsb
and
aaa
int3
and
data16
div
mov
xchg
or
out
or
pusha
ret
cmpsl
out
popf
sub
lret
sub
call
mov
ljmp
xor
mov
pop
stos
cmp
mov
or
lock
iret
test
fwait
add
jl
sub
xchg
add
out
dec
mov
jcxz
mov
xchg
insb
nop
nop
add
das
idivl
ret
sbb
sbb
sub
ds
jl
and
cs
or
pop
sti
or
repz
int3
mov
dec
ret
push
out
lea
sti
mov
iret
cmp
push
dec
inc
mov
xlat
sbb
or
fdivs
inc
filds
out
jno
loopne
xchg
mov
push
dec
add
inc
cmp
inc
xor
js
xchg
and
add
pop
mov
je
ja
stos
arpl
sbb
fistps
iret
je
mov
adc
dec
xlat
xchg
jns
sbb
loopne
arpl
outsb
inc
adc
pushf
pop
lock
push
scas
ljmp
clc
xlat
loope
fwait
push
pop
cmpsb
lret
dec
and
jae
mov
aam
fnstsw
es
cwtl
int3
jge
cmp
adc
xchg
xor
mov
icebp
lods
call
ficoml
stos
les
pop
insb
and
jb
mov
sbb
jb
mov
push
or
xchg
fimull
mov
sar
push
sub
and
outsl
stos
sbb
mov
dec
ret
and
jns
xorl
add
sti
add
sahf
dec
add
in
aam
push
popa
sub
sahf
jae
loopne
subl
test
add
iret
adc
lea
js
xchg
stos
mov
xacquire
jmp
cmp
outsl
inc
mov
stos
jle
jle
jmp
xor
and
dec
add
stos
and
push
mov
jnp
lds
mov
inc
nop
sub
sub
or
and
inc
les
and
adc
stos
rclb
lods
push
ret
inc
insb
pop
add
ret
lock
adc
sbbb
jns
pusha
push
test
fcoms
adc
inc
sbb
mov
test
lahf
fwait
les
inc
mov
push
xor
inc
cmp
fwait
lcall
ja
and
push
lcall
add
ja
fwait
scas
sbb
mov
repnz
sub
jnp
mov
inc
movsb
dec
icebp
outsl
sub
je
jb
test
push
or
sub
insb
pop
loope
or
jnp
adc
je
loopne
scas
scas
and
loope
imul
mov
pop
ret
ss
adc
out
and
es
mov
rcr
int3
call
adc
push
mov
cmp
cmp
jmp
lcall
test
inc
outsl
mov
insb
inc
adc
dec
mov
arpl
js
aad
test
sbb
das
xchg
dec
rorb
or
shl
add
inc
jae
cmpsb
dec
cmp
sub
inc
cmp
divl
ret
and
push
push
mov
jnp
mov
mov
and
sbb
xchg
xor
or
or
xor
xchg
cmpsl
cmp
push
add
cmp
cmp
push
push
ljmp
jo
sti
xlat
push
cli
jne
int3
orb
out
mov
imull
sub
adc
data16
or
ljmp
jecxz
and
shll
loopne
sub
mov
pop
inc
push
mov
jp
loopne
xor
les
and
jns
xchg
add
subb
clc
adc
push
jp
mov
mov
jb
movsl
test
add
or
push
roll
cmp
adc
sbb
rorl
push
xor
or
pop
adc
test
and
out
add
mov
leave
sbbb
add
dec
out
dec
xchg
sti
push
rorb
push
jecxz
add
js
ret
inc
pop
rcr
out
call
arpl
repz
dec
sahf
fldcw
pop
push
mov
mov
inc
mov
addr16
sbb
xchg
aaa
lods
mov
push
dec
cmc
lock
mov
mov
int
inc
iret
jle
and
dec
adc
mov
xchg
xchg
and
test
arpl
stos
add
insb
rclb
mov
dec
add
pop
sbb
in
movsl
or
or
or
aaa
inc
stos
and
test
in
push
into
repz
sub
pop
adc
push
in
or
mov
adc
add
call
mov
cmp
mov
jbe
test
sub
loope
ds
sbbb
mov
pop
xor
dec
jle
mov
adc
or
hlt
and
add
adc
sub
push
xchg
lods
and
cmp
ret
dec
and
sub
or
rcr
or
movsl
push
and
in
in
mov
sub
stc
jecxz
shrl
andl
mov
adc
adc
outsb
loope
bound
add
mov
mov
mov
xor
loope
mov
mov
fnsave
push
ret
pop
sub
jge
es
adc
es
pushf
outsb
stos
xor
mov
mov
addr16
xchg
mov
sub
mov
movsb
sub
repz
roll
ss
jnp
mov
shrl
rcpps
rclb
ja
and
mov
and
or
xor
mov
add
filds
add
popf
sbb
xchg
jp
jge
xchg
push
jnp
stc
mov
mov
outsl
in
sahf
sahf
movsb
jp
push
dec
addr16
in
aaa
adc
call
dec
add
iret
add
loop
or
call
and
add
je
stc
in
add
loope
pop
pop
jno
mov
lods
mov
and
add
inc
aaa
or
mov
sbb
icebp
and
add
lahf
sti
int
jnp
add
scas
and
xor
pushf
pop
int3
int
loopne
dec
adc
addw
cmpsb
cmc
push
inc
stc
xchg
xchg
or
jb
ret
adc
out
inc
mov
and
sbb
pusha
sbb
add
mov
xchg
test
roll
push
lods
push
adc
cmp
inc
cmpsl
pop
lcall
adc
in
push
mov
xchg
lods
pushf
mov
mov
fnsave
lods
lcall
mov
adc
sub
add
ret
stos
int
push
daa
aaa
xor
cmp
in
cld
add
add
mov
inc
ret
loopne
mov
push
mov
cmp
fwait
and
ja
cmp
sbb
sahf
sub
jnp
cmp
cmp
andb
sub
jnp
and
call
and
adc
xchg
lds
and
pop
push
or
das
push
xchg
dec
test
clc
out
sub
push
pop
es
repnz
lds
push
and
xor
sub
jbe
movsb
dec
xchg
ds
xchg
mov
or
add
fcoml
xor
mov
out
rcrl
adc
lds
adc
mov
dec
sub
cmp
and
mov
cltd
in
sbb
xor
jbe
jbe
mov
mov
fsubp
in
lcall
cwtl
loope
nop
jne
and
cwtl
pop
ss
sub
scas
imull
sbb
enter
fnstenv
jnp
and
xchg
xchg
jbe
aaa
cmp
add
xchg
add
xor
pushf
js
insl
nop
pop
negb
std
pop
mov
or
les
inc
mov
dec
aam
xlat
mov
stos
bound
js
inc
aam
mov
or
es
mov
add
and
cmp
imull
mov
add
mov
and
mov
cmpsl
mov
adc
or
and
popf
mov
adc
lcall
xor
or
aad
mov
lods
int3
das
add
xlat
adc
lret
adc
roll
and
mov
xchg
idivb
cwtl
pshufd
aam
xchg
aas
xchg
jo
in
add
aas
clc
rolb
movsl
add
adc
into
rolb
imul
xor
add
ret
loopne
jbe
add
movb
flds
addl
into
push
inc
insl
inc
cmp
cld
pop
or
jmp
pop
mov
test
dec
inc
gs
xchg
test
out
mov
add
mov
les
cmpsb
push
test
rclb
out
cmc
mov
push
roll
push
sbb
cmpsl
mov
orb
insl
mov
mov
ret
mov
xor
shrb
pusha
ret
push
mov
pop
repz
fidivl
and
cmpsl
inc
xor
lods
cmp
push
rolb
ret
dec
push
mov
aam
xchg
inc
xchg
mov
xchg
notl
mov
sub
test
xchg
mov
adc
mov
cmp
out
js
daa
sbb
inc
add
test
loope
js
xor
or
fwait
lcall
or
dec
dec
pop
shlb
or
cli
and
shl
sub
test
out
sbbl
lret
or
test
cmp
add
pop
into
sub
insb
call
or
dec
or
mov
add
inc
arpl
mov
movb
fsubrl
xor
and
imull
jle
mov
lods
and
or
mov
or
mov
mov
movsl
push
jns
fs
sahf
sbb
sub
inc
bound
ret
addr16
or
or
mov
inc
or
dec
mov
or
mov
cs
and
dec
add
xor
cmp
sbbl
adc
pusha
jo
inc
adc
sets
jecxz
pushf
xchg
stos
scas
femms
push
pop
jmp
int3
pop
xchg
xchg
cld
stos
mov
xchg
jmp
mov
pop
and
add
xchg
roll
add
dec
orb
cwtl
jne
sbb
push
inc
add
sbb
mov
cmp
icebp
cltd
in
loope
icebp
fwait
and
out
push
int3
xorb
cmpsb
push
mov
xor
or
mov
ret
dec
lds
inc
push
or
xchg
cmp
movsb
pop
sbb
divl
cmpb
adc
pusha
flds
nop
and
adc
imul
add
sbb
sub
ss
jmp
dec
or
and
adc
add
dec
test
adc
lods
and
movsl
cltd
cli
pusha
lahf
pusha
es
sub
loop
add
les
push
inc
jo
popf
mov
dec
mov
or
out
inc
sbb
aad
cmp
pop
pop
sub
mov
mov
add
fwait
jno
scas
jmp
mov
andl
cmp
ja
or
push
jge
fsubl
xchg
mov
fistpl
pshufw
cmpsl
test
jb
mov
adc
arpl
mov
test
mov
sbb
cld
mov
mov
in
cmp
daa
inc
mov
outsl
dec
inc
orb
pop
pop
pusha
sbb
test
pushf
in
mov
xchg
fstpt
imul
jb
rcrb
aam
pop
outsl
xchg
or
movsb
jecxz
or
mov
mov
lods
jmp
jno
dec
out
or
mov
lds
mov
pop
test
out
xchg
sub
aad
adc
mov
scas
pop
push
add
cmp
dec
xor
pop
enter
pop
out
iret
adc
es
mov
mov
lods
insl
inc
fwait
add
nop
xchg
jo
test
dec
pushf
imul
add
int3
orb
scas
push
fistpl
movsb
or
test
and
test
test
insb
mov
or
or
sbb
out
int3
add
jae
add
push
xchg
arpl
in
xchg
psrlw
inc
pop
sub
and
mov
adc
arpl
insb
or
add
sub
or
jp
mov
in
ret
and
into
cmpsl
out
pop
xchg
and
push
pop
pop
push
jns
mov
add
test
mov
push
push
aam
mov
rclb
popa
iret
inc
mov
or
and
mov
adc
dec
test
mov
mov
and
xchg
mov
aad
mov
fs
add
js
pop
and
scas
daa
xor
addl
cmp
or
sahf
popa
into
or
inc
les
stos
push
lds
daa
inc
flds
pushf
lock
mov
add
jmp
add
scas
pusha
sbb
push
les
adc
ds
jmp
xchg
insl
cmpsb
aas
cmp
dec
pop
xchg
cs
mov
xor
and
mov
and
es
pushf
inc
je
bound
xchg
sbb
roll
and
xchg
inc
icebp
xchg
xor
mov
sub
imul
jo
inc
ljmp
add
fisttps
xchg
jns
jae
dec
mov
inc
inc
mov
andb
inc
movsb
mov
lret
mov
shrb
mov
psllq
add
mov
sub
das
xor
adc
jb
sbb
and
sub
jb
or
push
imul
lds
adc
fsubr
fldcw
dec
or
pop
les
mov
add
sahf
xchg
aaa
andl
sub
mov
mov
add
and
jg
ljmp
loop
mov
stos
xor
loope
in
xchg
dec
shll
repz
fcomp
pusha
hlt
hlt
mov
push
lods
xchg
shrb
pop
mov
mov
inc
addb
scas
adc
pop
xchg
or
sub
ret
adc
test
xor
pop
pop
push
daa
bound
jecxz
mov
pop
push
aad
or
sbb
xor
push
jnp
pop
inc
mov
adc
es
in
add
cmpsl
sbb
xor
push
cmp
jle
rcrl
inc
clc
shr
dec
add
sbb
andl
mull
mov
jge
iret
out
dec
pop
pop
sbb
lods
and
std
xor
xchg
ret
or
out
pop
mov
inc
aaa
subb
xchg
iret
add
and
inc
dec
push
add
pop
add
or
pop
push
daa
dec
dec
dec
inc
test
sub
lea
popa
add
xchg
arpl
mov
or
nop
and
jae
stc
js
movsb
sbbb
adc
mov
add
xor
mov
imul
sub
lds
int3
sub
add
xor
lods
xor
cmc
add
and
rolb
pop
sbb
dec
outsl
pop
and
adc
iret
inc
nop
push
shlb
jo
sbb
push
inc
jne
add
pop
sub
dec
xchg
rcll
addr16
push
xchg
push
dec
jo
and
add
lcall
mov
add
out
ret
ljmp
jb
dec
sbb
sub
inc
outsl
xor
aad
dec
xchg
and
aaa
cmp
in
ret
fisubs
les
scas
std
stos
sti
cmp
test
xchg
scas
push
sbb
xchg
mov
sub
shrb
mov
scas
nop
sbb
add
sbb
mov
xchg
push
rol
loop
jno
xlat
fmul
lods
mov
lcall
fidivs
pushf
cwtl
dec
push
cmp
lahf
test
sbb
and
js
lock
mov
stos
aam
xchg
add
addb
push
movsb
inc
shr
jbe
or
xchg
and
mov
or
pop
test
mov
arpl
push
cmp
movsb
xor
mov
mov
inc
shll
pop
lahf
insb
nop
xor
stos
and
nop
pop
cmc
mov
les
inc
and
das
inc
scas
inc
std
xchg
push
loopne
and
scas
ljmp
and
shrl
cmp
stos
nop
or
movsb
dec
inc
pop
sti
xor
jl
call
bound
xchg
xchg
mov
clc
and
xchg
movsb
stos
loope
out
and
int
jecxz
es
outsb
jmp
xorl
xor
add
and
mov
push
push
ficoml
push
or
test
inc
adc
lcall
cs
mov
loope
and
and
pop
int3
or
test
or
cmpsb
add
loope
daa
inc
and
cwtl
jge
shlb
ret
xor
xchg
mov
jg
push
cmp
jge
jne
xchg
shll
shll
shlb
cmp
flds
xor
inc
add
addb
mov
xor
xor
adc
mov
repnz
les
pop
adc
xchg
mov
movsb
cmp
adc
add
cmpsb
mov
inc
inc
xlat
gs
add
cmpsl
aam
mov
adc
add
lods
add
fisubs
xchg
dec
sbb
xor
lea
mov
cs
push
lcall
push
popa
ds
icebp
jge
xchg
in
mov
nop
mov
aad
xor
mov
push
fsubrs
add
push
lea
dec
add
sbb
ficomps
adc
test
add
pop
scas
pop
enter
pusha
pop
arpl
cmp
fldenv
ja
push
sbb
inc
xor
cmp
aad
mov
mov
push
adc
test
inc
mov
or
mov
mov
xor
and
popa
sbb
pop
dec
lret
icebp
add
roll
sub
les
and
std
push
mov
out
and
dec
insb
inc
cltd
jp
add
daa
popa
mov
pop
adc
gs
sub
daa
push
dec
aas
and
pmaddwd
cmp
in
popa
inc
inc
ret
cmpsb
stos
mov
dec
push
cltd
mov
les
stos
and
dec
ret
cld
into
cmpb
sub
xchg
fidivl
outsl
into
lcall
or
xor
mov
pop
xor
movsb
inc
shlb
fsubs
pushf
aam
leave
call
dec
sub
mov
mov
push
or
sbb
jae
aas
inc
lods
add
xchg
pop
fwait
sbb
sahf
out
je
outsb
test
mov
loope
mov
or
jmp
cltd
and
mov
stos
inc
dec
and
dec
cmp
cwtl
das
adc
inc
mov
stos
pop
out
loope
push
jnp
push
inc
les
dec
sbb
lret
repz
mov
ficomps
and
pushl
loopne
lods
sub
mov
add
add
rcll
movsl
adc
xchg
loope
push
stc
ljmp
sub
adc
mov
xor
inc
adc
addb
cli
xor
sti
add
cmp
shrd
pop
ror
int
mov
and
mov
enter
lcall
xor
repnz
xchg
inc
xchg
jb
xchg
sti
jle
dec
mov
mov
dec
mov
add
cmp
add
movsb
mov
push
jecxz
pop
and
andb
jno
movsb
jle
ja
add
cmpsb
or
testl
dec
mov
pop
sar
jmp
push
push
sbb
xchg
push
inc
ja
mov
das
pushf
xchg
inc
cmp
add
xchg
inc
pushf
and
jmp
fsubr
orb
push
popa
mov
push
jmp
sbbl
fwait
enter
and
sbb
pop
insb
cmc
stos
pusha
xchg
xor
or
jle
cmp
mov
call
adc
jge
adc
push
roll
fwait
cmp
rorl
imul
and
dec
scas
int3
in
cmc
and
add
fisubl
arpl
jl
xor
aam
pop
inc
mov
push
xor
xor
mov
loope
and
jnp
ret
inc
addr16
push
es
sbb
roll
dec
jne
inc
aas
imull
add
inc
jb
adc
arpl
add
pop
nop
stos
js
lock
addb
mov
sbb
dec
adc
jl
test
fnstcw
sbb
push
aaa
cmp
popf
fldcw
mull
sbb
loopne
inc
testl
popf
outsb
inc
outsl
dec
add
f2xm1
or
lcall
xor
mov
xor
outsl
inc
out
add
cmp
in
shlb
xchg
jnp
mov
xchg
notl
add
or
ret
and
mov
out
aas
filds
insb
or
call
xor
outsl
adc
stos
out
mov
adc
fwait
clc
dec
shrl
test
push
mov
inc
sub
lds
popf
sub
push
inc
push
xlat
push
in
sbb
push
jae
add
int3
aaa
nop
add
bound
movsb
sti
xor
pop
sub
cld
push
cmp
arpl
arpl
test
imul
mov
add
aas
sub
sbb
and
mov
add
mov
mov
test
pop
inc
loopne
and
dec
push
fnstcw
ret
in
add
lods
jae
sbb
call
push
inc
rorb
sbb
daa
push
xor
jne
pop
mov
andl
inc
mov
out
daa
sub
scas
jo
rorb
iret
dec
xor
shll
adc
mov
pusha
mov
testb
out
and
es
sub
es
push
sub
loopne
nop
pop
cmp
aaa
stos
pop
loopne
cmpsl
xchg
push
sti
push
ja
jmp
push
cmc
fcmovu
sub
test
test
icebp
add
adc
notl
mov
or
ds
insb
bound
xchg
rcrl
addr16
dec
adc
movsl
addr16
push
mov
mov
jo
jno
filds
add
adc
or
or
shlb
daa
call
add
xor
and
and
imul
jne
dec
cmp
out
dec
pop
push
xor
sti
mov
pop
sbb
std
in
push
push
add
into
cs
loop
filds
flds
ja
xor
ljmp
cmp
pop
sbb
mov
insb
faddp
ret
and
rclb
sub
xchg
add
lcall
mov
xlat
add
stos
push
sub
sahf
ss
inc
mov
adc
push
push
xchg
cmp
jno
xor
inc
or
clc
and
iret
sbb
js
ljmp
jecxz
fwait
ljmp
mov
lods
sbbb
data16
jmp
push
cld
cmpsl
movb
sub
hlt
mov
fldenv
fiaddl
fsubl
add
popf
cmp
jle
adc
and
mov
nop
fistpl
in
push
xchg
xor
dec
fdivs
push
inc
filds
push
jp
dec
mull
into
pop
daa
cmpsl
test
adcb
insb
push
inc
cwtl
rolb
int3
loopne
roll
popf
xchg
dec
push
xchg
mov
mov
rcrb
adc
fcmovnb
pop
loopne
push
cmp
repz
out
or
fwait
add
js
mov
iret
mov
sbbb
into
rolb
arpl
pop
add
pop
push
push
mov
leave
and
lock
int3
addl
fucom
sti
movsb
or
int3
fcompl
add
pop
pushf
add
mov
into
push
mov
lret
mov
lea
or
inc
imul
xchg
stos
push
sub
inc
lods
into
ds
dec
dec
out
add
fmul
into
shlb
imull
lret
mov
lods
cmpl
iret
add
sbb
fbld
push
xor
sub
mov
add
add
adc
mov
adc
jmp
ljmp
pop
mov
icebp
pop
ret
int
mov
cmp
pop
mov
or
or
je
adc
out
adc
xchg
cs
add
lock
adc
and
ds
mov
add
int3
sbb
inc
lock
mov
insb
mov
int3
add
or
into
inc
cmp
dec
mov
mov
roll
mov
add
xchg
es
pushf
mov
popl
shlb
xor
pop
nop
lahf
mov
xchg
mov
push
cli
rorl
jno
cmpl
xchg
sbb
add
hlt
insb
add
sub
xor
sbb
and
xchg
or
pushf
adc
movsl
rcll
rolb
std
cltd
xor
xor
fsts
mov
fadd
sub
call
cwtl
push
pusha
je
or
push
mov
inc
xchg
lods
mov
inc
cwtl
or
pop
push
les
add
pushf
pop
das
rol
ss
std
xchg
sarb
shrl
push
das
jae
push
mov
push
mov
push
fcoms
and
fdivl
ds
xor
sbbl
mov
inc
add
add
push
bound
cmpsb
push
add
int3
cld
add
inc
pop
inc
out
es
aas
es
pushf
pop
addr16
lds
test
filds
add
jae
stos
jle
ljmp
and
push
nop
cmp
mull
add
popf
push
inc
sub
sbb
adc
sub
ss
gs
and
inc
addl
cmp
add
mov
adc
add
mov
sub
push
into
lahf
sub
jns
inc
mov
aas
xchg
test
pop
jp
pusha
dec
mov
lret
test
jbe
add
mov
adc
mov
jge
mov
outsl
jmp
es
or
cmp
inc
pop
xlat
xor
ret
andl
pop
outsl
lret
xor
mov
xor
das
push
es
dec
xchg
and
push
jp
add
repz
daa
push
mov
jb
pop
and
in
jns,pn
push
jno
xchg
loope
test
fists
les
xor
addr16
out
rorl
rorl
or
inc
orb
gs
xor
add
call
jno
mov
call
ja
mov
sub
sahf
cwtl
insb
mov
mov
test
mov
dec
add
shll
and
lock
dec
addl
mov
shl
sbb
and
cmc
push
add
lods
incb
pop
lahf
fs
jg
xchg
add
movsw
lock
lahf
ret
clc
adc
test
imul
shrl
pop
mov
fcompl
in
and
and
push
push
pop
mov
adc
mov
lods
inc
loop
mov
cmpsl
add
imul
add
push
lock
mov
adc
mov
fwait
jnp
lcall
adc
inc
adc
loope
mov
inc
cld
pusha
or
mov
pusha
daa
lahf
and
add
pop
out
and
test
loop
stos
sahf
loope
pop
inc
mov
mov
adc
in
into
faddl
fidivrl
fcom
mov
ret
fld
insl
ja
mov
push
xor
dec
add
ss
cmp
and
cwtl
sbb
stc
add
xchg
jae
mov
shrb
pop
xchg
das
sub
mov
leave
les
and
loop
pop
mov
les
inc
sub
shlb
sbb
sahf
sub
cmpsl
push
popa
rcr
adc
push
push
push
daa
adc
outsb
push
lea
inc
ret
popa
mov
fiadds
push
dec
rol
jnp
mov
jmp
not
inc
mov
lods
pop
mov
cwtl
inc
add
cmpsl
jbe
subb
aam
dec
fistps
out
roll
or
push
mov
cmp
xor
test
inc
hlt
and
inc
test
adc
push
testb
shl
lock
lahf
cs
inc
aad
aaa
imul
xchg
mov
xlat
cli
push
test
aas
add
push
mov
push
lock
jl
add
xor
add
mov
dec
jns
jge
jne
and
mov
pusha
test
inc
int
cwtl
shrl
sbb
sbb
out
add
inc
mov
mov
out
and
push
or
jnp
out
sub
fistpl
mov
sub
addl
jp
jmp
add
sbbb
add
xchg
fs
cmc
cmpsl
xor
pop
and
test
xor
adc
mov
or
jl
jbe
and
pop
dec
aaa
add
dec
js
and
sub
fxch
int3
test
sub
push
mov
int3
fcoms
sbb
inc
nop
and
jnp
mov
push
or
jle
mov
sbb
adc
add
add
les
mov
mov
push
inc
cmp
pop
add
cmc
add
inc
cmpsl
in
leave
jecxz
enter
sub
sbb
es
adc
pop
cmpsb
sub
jg
xchg
rcr
and
test
add
mov
inc
sub
call
fwait
or
subb
fxch
xchg
mov
pop
push
ret
pop
inc
cmp
mov
mov
xchg
movsb
and
dec
cli
sub
shlb
hlt
push
pusha
lahf
pop
push
xchg
xor
dec
cmp
andb
and
mov
cmp
add
sbb
push
cmp
xor
xchg
pop
ret
and
jle
faddl
mov
add
sub
jne
outsb
outsl
loop
pop
cmp
in
pop
out
into
orl
pop
dec
and
mov
sub
lods
pop
das
out
jl
call
int3
or
sub
nop
jecxz
call
dec
push
lcall
jb
pusha
push
dec
add
sub
dec
add
mov
xchg
shll
sbb
dec
or
sbb
daa
loope
call
bound
ret
cmp
ret
xchg
jo
in
into
sbb
add
and
repz
sbb
addr16
sbb
lret
or
into
es
adc
rclb
jbe
fucomp
pop
cmp
and
sahf
sbb
push
shrl
addl
lds
pop
mov
lahf
pushf
adc
sbb
repz
mov
add
ficoms
cmp
pop
inc
jne
mov
pop
sub
mov
mov
ja
add
fcoml
dec
and
pop
push
sub
fisubrs
loope
xor
ret
aad
push
and
xor
and
cmp
mov
div
adcl
fimull
in
cmp
cmp
cmp
xor
dec
dec
ja
lret
inc
insl
into
lods
out
mov
jbe,pn
and
xor
and
sbb
xchg
xor
pop
int3
mov
mov
fistpl
lods
loopne
add
je
push
ret
fidivs
and
or
int3
test
pop
aas
push
mov
adc
out
inc
mov
movsb
or
adc
rclb
ljmp
jo
aaa
or
test
repz
adc
or
or
ret
adc
xor
dec
sbb
add
pop
xchg
mov
pop
push
dec
inc
adc
cmp
or
add
mov
orb
fstps
jne
adc
mov
std
sarl
mov
dec
outsb
sub
jns
ret
std
xor
sub
call
insl
test
dec
xchg
add
fisttpll
dec
loopne
sub
sarb
and
jnp
dec
push
xchg
bound
jl
sbb
and
adc
roll
roll
call
ja
or
jb
cmp
push
jecxz
jne
jmp
inc
dec
insb
inc
mov
adc
sarb
popa
mov
jle
jge
pusha
push
insb
iret
aad
fstpt
add
lock
lea
inc
jo
push
and
mov
mov
pop
push
xchg
hlt
or
les
aad
xchg
mov
enter
pop
in
push
loopne
mov
and
mov
pop
mov
and
mov
dec
out
push
bound
pop
adc
jno
sbb
dec
xor
subl
jae
sub
mov
mov
aaa
lock
ja
sbb
cmpsl
cs
mov
cmp
aam
xor
inc
sub
rclb
rcll
out
das
and
inc
sbb
inc
fdiv
inc
xchg
add
sub
mov
mov
mov
insb
or
popf
fmulp
sub
loopne
insb
inc
adc
in
add
mov
cmp
das
cmpl
das
pop
mov
bound
xchg
and
shlb
aaa
sbb
sub
mov
push
sbb
push
idivl
xchg
sub
test
out
mov
aaa
lods
jmp
and
inc
test
jo
int3
cmp
dec
ret
sub
xchg
inc
imul
mov
xor
cmpb
pop
aad
test
imul
into
mov
and
adc
int
push
lods
jns
add
scas
inc
ds
add
adc
mov
sbb
adc
push
fstl
mov
adc
mov
sub
or
pop
mov
push
and
mov
jle
js
mov
sub
repnz
xor
xchg
xchg
pusha
adcl
repz
in
bound
adc
push
jo
mov
cld
inc
sub
shlb
and
das
fsub
cmp
mov
inc
test
inc
or
cmp
lcall
leave
imul
pop
lock
popf
adc
jl
jecxz
or
mov
add
jmp
test
and
mov
pop
mov
loopne
sbbl
jno
push
push
push
sbb
adc
pop
cltd
adc
mov
pop
mov
adc
inc
push
adc
jb
lds
adc
sub
jecxz
xchg
push
push
mov
mov
call
sahf
jle
hlt
ljmp
lahf
mov
add
inc
sub
add
stos
push
sub
cmp
adc
lea
sub
or
inc
xchg
push
das
movsl
cmp
jno
movsl
out
test
add
or
inc
xchg
push
lock
add
or
mov
or
adc
insl
add
jnp
mov
jnp
push
add
inc
loopne
movsb
mov
dec
xchg
aaa
mov
jns
xor
and
cmp
push
lods
xor
sti
lock
jmp
mov
call
iret
sbb
mov
pop
inc
cmp
sub
test
stos
or
jl
sub
lds
daa
divb
in
or
sub
les
mov
pop
inc
jns
fidivl
or
movsb
out
out
adc
aad
es
ret
sub
clc
mov
scas
test
test
idivl
pop
inc
push
lods
add
lds
ljmp
cmp
inc
xor
mov
cmp
scas
cltd
or
mov
inc
cmpsl
jge
pusha
sub
int
ret
inc
aas
jbe
adc
mov
mov
jns
adc
xchg
adc
jbe
inc
int
mov
scas
mov
jae
pop
out
jl
or
andb
ja
cmp
lds
fcom
pop
cs
cs
fisubrl
xor
cs
stos
add
bound
dec
outsl
or
stos
aad
into
xchg
inc
push
pop
and
lock
int3
cmp
mov
sbb
push
pop
jo
fiadds
stos
and
sub
fildl
jo
mov
popf
mov
out
negl
jl
les
and
sbb
jb
jno
in
mov
jo
and
ss
loope,pn
jle
outsb
aas
adc
dec
ja
notb
push
add
jnp
push
pop
and
mov
xchg
mov
adc
jb
les
add
jl
out
call
cld
lcall
inc
jmp
xchg
push
movsl
enter
dec
push
push
sub
outsl
out
jmp
jnp
cmp
sub
hlt
push
lods
mov
cmc
loop
gs
lcall
adc
les
mov
outsb
fcoml
fstpl
nop
lds
or
sbb
xor
lahf
test
push
jp
xor
outsb
mov
mov
pop
imul
pop
int
lea
xchg
mov
fcomps
test
cs
xchg
scas
das
in
add
subb
add
sub
lret
and
lods
xlat
fildll
cmc
cmpsl
mov
xchg
push
sarb
pop
js
xchg
xlat
sub
std
inc
mov
cmp
out
jmp
or
mov
insl
mov
push
pusha
aam
mov
and
leave
jno
fcmovne
or
sub
push
inc
xor
or
fsubrl
sbb
jb
mov
adc
sbb
mov
or
scas
push
pop
inc
mov
sub
aas
jle
in
lods
insb
pop
push
pop
and
adc
sub
push
imull
mov
cwtl
and
push
cmp
jmp
pop
pop
mov
dec
add
mov
ja
ja
add
loopne
mov
jne
add
sub
pop
add
xlat
sahf
jae
pop
dec
adc
push
shl
add
and
xor
dec
sbb
or
push
jl
push
shl
int
sub
push
sub
stc
ds
pop
mov
mulb
or
add
sbb
cmpl
xlat
lods
jbe
pop
fadds
cli
mov
sub
pop
jne
insl
mov
fbstp
inc
jns
flds
inc
and
or
and
rolb
sbb
data16
sbb
ds
in
push
rcrb
lcall
mov
imull
pop
push
adc
xchg
pop
ret
js
shll
push
and
mov
push
pop
div
js
jg
add
popa
or
xlat
fcomps
lods
pop
lods
push
add
loopne
push
ss
and
jp
sar
pop
movl
es
pop
inc
add
lods
dec
imul
xchg
arpl
aas
jne
das
fnstcw
sub
es
add
mov
iret
popa
push
or
pop
sbb
mov
lock
or
xor
popf
add
jnp
insl
in
cli
and
pop
aam
mov
pop
mov
adc
sbb
fldenv
daa
pop
push
sub
jns
add
xor
cvtpi2ps
sahf
icebp
and
dec
xchg
mov
push
xor
test
ja
adc
insb
sub
lods
shlb
jbe
divl
daa
mov
das
jl
in
mov
sbb
inc
bound
ds
adc
inc
shlb
mov
cmp
les
or
repnz
sub
xor
adc
mov
fsts
inc
inc
xor
loopne
jp
movaps
shll
sbb
push
xor
fildll
add
xchg
sub
mov
add
rclb
mov
sub
mov
pop
jno
jg
js
or
sbb
andl
fcompl
push
test
mov
mov
pop
lea
jge
mov
loope
aam
js
add
andb
fiadds
add
ret
inc
adc
in
decb
dec
sub
movl
mov
mov
cmp
xchg
and
es
jl
lods
pusha
jecxz
mov
mov
lcall
or
cmp
cmp
push
add
sbb
jle
out
insb
or
aam
push
int3
cmp
xor
cmp
push
lods
fs
std
inc
mov
fcmovne
ret
and
mov
adc
xchg
sbb
shll
test
jmp
cmp
int3
je
sub
insl
mov
insl
dec
movsb
les
sbb
popa
sti
jbe
ret
xchg
mov
rcr
sub
cs
popf
sub
popa
adc
addr16
inc
inc
and
dec
mov
and
cmp
mov
dec
inc
adc
add
dec
data16
out
pop
add
pop
push
inc
lock
cld
jmp
sub
sub
adc
and
inc
adc
mov
inc
aaa
xor
sub
adc
cmp
sysenter
shrl
jmp
add
test
repnz
xchg
fdivs
je
pop
and
pop
mov
movsb
in
vpsllq
adc
cmp
pop
gs
pop
scas
push
sarb
ret
and
scas
jno
mov
ds
push
and
sbb
push
lret
dec
bound
nopl
lods
inc
mov
cmc
mov
sti
call
and
hlt
nop
adc
popa
pusha
and
mulb
subb
sbb
adc
int3
and
cwtl
jmp
gs
es
jb
adc
sti
sub
sbb
jne
lods
dec
pop
das
sub
sbb
and
cld
icebp
sti
out
cmp
sub
ret
fiaddl
sti
jle
outsl
and
lock
gs
sub
dec
or
in
rcrl
into
inc
cmp
ret
cmpsb
jbe
mov
aad
push
cmp
or
inc
clc
push
jns
js
out
cmp
pop
shrl
inc
pop
outsb
mov
in
xor
add
pop
jg
lret
addl
cmp
mov
orb
in
jne
add
jno
das
adc
fs
inc
add
sub
icebp
or
out
loop
sbb
or
jo
movsl
push
les
rclb
and
lcall
inc
je
push
mov
test
imul
dec
js
mov
and
mov
push
pushf
mov
aaa
inc
in
jle,pt
xchg
in
cmpsl
and
add
test
mov
rol
add
adc
sub
push
add
sbb
lret
mov
test
aam
lahf
jnp
pusha
rclb
pusha
or
sub
ret
cmc
ret
push
sbb
or
orb
mov
lock
stos
push
out
stos
inc
adc
push
loope
xadd
das
iret
add
or
mov
js
jb
mov
jmp
adc
mov
inc
inc
inc
adc
andb
movsl
idivb
and
subb
sbb
and
inc
stc
in
pop
xchg
iret
mov
xchg
ret
movsl
xchg
and
ja
adc
add
pop
test
push
testl
inc
sbbb
shlb
imul
daa
ja
insl
nop
add
sbb
aam
aas
mov
test
rep
push
aad
insl
lcall
cmp
fdivrl
shrl
je
call
push
out
sbb
rcll
xor
and
fidivrs
inc
add
mov
cmpsl
imull
push
orl
aas
jp
in
push
cltd
mov
cmp
adc
idivl
xchg
xchg
jmp
out
or
xor
stos
ss
inc
ret
subb
in
inc
or
sbbl
adc
or
inc
test
sbb
pushf
adc
sbb
call
iret
cltd
lahf
fistl
mov
mov
mov
sahf
inc
adc
inc
or
and
pop
aaa
inc
mov
adcb
fidivrs
xor
js
flds
orl
int
xorb
mov
sub
dec
inc
mov
dec
push
push
popf
lods
in
sub
mov
sub
or
mov
mov
xorl
scas
mov
cmp
mov
movl
or
dec
rorb
pop
mov
jp
ret
stos
fimuls
in
mov
clc
xchg
jge
enter
test
cwtl
pop
stos
loop
roll
popa
lods
or
lds
xor
arpl
mov
mov
mov
daa
adc
add
inc
aas
jl
mov
fs
adc
or
roll
inc
aas
sbb
add
fdiv
sbb
add
adc
or
jbe
dec
xchg
popf
bound
lds
mov
and
sbb
mov
inc
rcll
dec
addr16
jne
jle
push
mov
jo
inc
pusha
inc
jo
or
mov
js
push
push
lods
mov
jle
add
sub
pop
push
jns
dec
mov
enter
adc
mov
aaa
mov
pop
sbb
sub
inc
jl
insl
or
add
lcall
xor
xor
adcb
jns
pop
arpl
test
stos
sbb
mov
pop
aad
lods
scas
ret
sbb
dec
cmpsb
or
out
rorb
nop
fwait
or
imul
dec
and
push
dec
mov
and
pop
and
sub
mov
ja
sub
adc
cmp
adc
test
jne
jae
mov
inc
cmp
movnti
xchg
inc
xchg
out
scas
inc
lock
cmp
lods
and
adc
mov
sbb
jo
mov
jg
stos
add
mov
push
scas
mov
inc
push
jle
pushf
dec
shlb
xchg
stos
or
aam
add
pop
cmpsl
imul
in
js
sarb
xor
jbe
jmp
scas
inc
jmp
xor
adc
insb
je
sbb
fdivl
fcoms
mov
xor
push
outsb
int3
push
stos
sub
insb
cmpsb
dec
or
mov
rep
push
add
mov
add
push
scas
push
cmp
aam
andb
enter
inc
pop
and
jo
jge
into
and
inc
add
js
dec
xchg
outsl
and
jo
daa
cmp
hlt
insl
mov
mov
in
mov
add
or
sahf
jmp
fcompl
aaa
lahf
adc
push
adc
cld
push
adc
lea
addr16
and
or
fdivrs
je
xor
test
or
in
test
dec
jnp,pn
xchg
push
imul
push
stos
push
mov
push
push
jle
push
sti
pop
xlat
jo
xor
add
fwait
xor
pop
pop
mov
push
adc
iret
cltd
jo
or
and
jb
jbe
xchg
test
ret
dec
ja
mov
mov
jecxz
mov
iret
jne
jmp
out
jb
les
into
push
and
pop
cs
pop
insb
insl
scas
notl
cltd
mov
iret
push
xchg
inc
in
mov
or
lret
xor
sub
popf
lea
pmulhuw
iret
inc
int
dec
js
dec
popa
andb
sub
xlat
or
jne
jg
mov
into
lret
out
jnp
add
jp
sub
hlt
push
push
int3
sbb
adc
xchg
inc
xchg
repz
shrl
shlb
adc
add
ret
roll
xor
insl
and
cmp
sub
adc
stos
sub
test
jmp
and
jae
jb
cli
mov
sbb
clc
repz
add
sbb
inc
inc
mov
and
xchg
fidivs
mov
mov
lods
xchg
stos
mov
sub
ljmp
inc
sub
fwait
sbb
adcl
inc
adc
lods
jmp
add
pusha
aaa
push
dec
push
inc
xor
jbe
rorb
mov
scas
imul
dec
fstpt
scas
inc
sbb
xor
and
sbb
fistl
ljmp
jecxz
cmp
mov
daa
add
clc
sbb
mov
imul
mov
add
push
sbb
sub
insb
fs
adc
insl
aaa
mov
gs
mov
in
gs
push
lret
pop
or
iret
pusha
push
adc
cmp
xor
in
mov
pusha
repnz
icebp
adc
push
mov
fld
adc
mov
pop
or
nop
adc
or
pusha
mov
sbb
lret
imul
jmp
sti
cli
testl
sub
mov
sbb
outsb
js
sub
mov
push
push
and
jbe
xchg
jg
ljmp
xor
adc
pop
mov
leave
ret
sub
cwtl
fwait
xor
fxam
subb
mov
add
repnz
inc
xchg
pop
add
xor
inc
sbb
daa
mov
jno
sub
xchg
sbb
rclb
int3
fiaddl
xlat
fimuls
ret
sub
cmp
mov
dec
es
ljmp
sub
push
in
call
popa
jnp
aaa
divb
mov
push
sbb
stos
popa
cmp
inc
ja
sub
lock
mov
jmp
sub
adc
push
cmpsb
jae
mov
loopne
test
mov
push
call
insb
mov
into
mov
adc
daa
test
iret
bound
sbb
in
imul
xor
testl
add
and
sbb
pop
sbb
dec
dec
add
inc
orl
outsb
cmp
in
data16
aaa
dec
test
cld
gs
and
ljmp
mov
cli
fstpt
xchg
stos
pop
or
adc
lods
nop
outsl
arpl
push
add
loope
cmp
mov
xchg
dec
aad
outsb
insl
jb
mov
int3
sbb
jo
jp
mov
add
pop
xor
and
cmp
cmp
xchg
clc
test
mov
in
es
das
fcoms
mov
inc
ljmp
jbe
stos
pop
or
add
imul
pop
test
jg
sbb
mov
inc
and
stos
repz
xlat
add
adc
or
loope
data16
sbb
jp
out
andl
push
xor
lcall
add
jmp
call
push
fnsave
add
xor
push
sbb
das
sbb
push
push
jnp
adc
push
das
mov
bound
sbb
ja
push
inc
push
dec
dec
stos
je
les
das
adc
add
fcomps
adc
fidivl
pop
push
in
adc
cmpsb
or
les
jle
das
inc
sarb
mov
daa
pop
or
push
jno
cmp
les
outsb
sub
push
leave
ffreep
mov
push
adc
or
jne
mov
add
push
movsl
pop
and
jb
adc
push
cmp
into
lock
dec
test
adc
test
mov
lret
mov
add
xchg
inc
sub
adc
mov
das
test
mov
sbb
or
xor
in
mov
into
fwait
dec
and
mov
cmp
xor
or
dec
push
mov
xor
loopne
adc
push
cmp
jl
or
movsb
mov
sahf
jb
jne
test
jo
xlat
add
insl
adc
jmp
andb
cmp
sub
adc
sbb
jmp
add
aaa
jnp
pusha
add
push
and
mov
shll
rorl
jge
cmp
xchg
mov
push
cmpsl
inc
or
push
daa
in
pop
popf
xchg
jno
jnp
push
cmpsb
cmpsb
enter
or
xor
add
lods
inc
cmp
or
jbe
pushf
pusha
andl
xchg
jle
filds
dec
xor
fnstcw
fimuls
add
insb
xor
loopne
test
enter
inc
push
cwtl
lret
popf
movsb
push
rorb
loopne
ficomps
cmp
push
push
dec
rolb
or
das
mov
xchg
jbe
push
sbb
je
and
add
sbb
sbb
jae
jno
and
cmpsl
pop
jmp
adc
popa
inc
ds
stos
fbstp
xchg
es
sbb
mov
andb
jecxz
stc
aaa
and
pop
xchg
jo
and
jne
popf
mov
or
dec
lds
ds
xchg
mov
cs
ret
or
mov
push
inc
cld
dec
push
lret
ljmp
dec
scas
pop
mov
out
repnz
jo
push
jne
adc
or
jo
mov
rclb
lds
lods
push
js
sbb
push
mov
xchg
mov
xor
das
jge
xor
fbld
and
in
inc
icebp
jo
mov
sbb
push
push
xor
xchg
add
sbb
push
repnz
ljmp
test
jno
es
test
sbb
hlt
nop
and
int3
sub
test
daa
js
fiadds
sub
lds
lret
mov
icebp
adc
addl
test
push
dec
and
leave
outsb
xchg
imul
inc
inc
movsb
inc
orl
fs
ds
movsb
je
sarb
or
repnz
lods
jo
clc
sub
jp
pop
shr
jne
leave
sbb
jl
aaa
outsl
push
dec
xchg
imul
addl
imul
orb
sbb
leave
mov
push
and
xor
inc
or
dec
add
pop
int
adc
ror
scas
dec
orb
stos
bound
jo
mov
arpl
shl
sub
adc
or
inc
add
roll
push
lods
push
xchg
adc
imul
test
arpl
out
mov
es
cmp
pusha
pop
push
mov
mov
push
pop
inc
roll
icebp
inc
add
mov
dec
in
mov
clc
insb
jecxz
cmp
push
les
pop
stos
add
loopne
push
aam
mov
add
insb
call
dec
sub
add
pop
inc
dec
pop
jb
aaa
pop
sahf
adc
sbb
sbb
xor
adc
adc
push
jge
xor
cmp
jecxz
hlt
loop
fisubl
test
es
sbb
and
fistpl
pop
push
inc
mov
imul
sbb
xor
ljmp
jbe
sbb
add
clc
div
hlt
mov
mov
and
xchg
add
mov
add
psrlw
xchg
jmp
jo
or
repz
dec
adc
data16
xchg
addr16
mov
cltd
and
sarb
test
bound
dec
mov
add
mov
dec
inc
test
xchg
test
and
push
sub
bnd
fcoms
je
inc
imul
jnp
jge
xor
sub
icebp
stos
push
dec
add
and
push
adc
sbb
cmpsb
add
lea
pop
adc
mov
insl
dec
mov
jbe
sbb
jo
dec
cmp
aad
dec
out
sbb
add
and
xchg
cmp
mov
jo
mov
add
lods
dec
inc
sub
scas
jp
lret
std
jge
mov
mov
jbe
addr16
fildl
push
push
sbb
mulb
add
nop
push
sub
xlat
mov
sbb
jae
adc
pop
adc
and
fistl
add
mov
insl
je
je
add
push
sbb
xor
mov
gs
adc
mov
pop
push
cmp
push
dec
scas
or
add
mov
add
bt
arpl
dec
push
mov
sbb
int3
dec
shl
sbb
jbe
mov
push
inc
fsubs
mov
iret
rclb
jp
or
pop
sbb
cmp
cmp
or
inc
cltd
push
pop
push
nop
loope
dec
push
add
nop
orl
inc
pop
or
and
xor
jp
mov
jmp
mov
clc
js
jnp
pop
and
dec
adc
push
xor
adc
jo
inc
mov
mov
xor
loopne
stos
shrl
imul
mov
ret
scas
xor
fsubs
repnz
inc
call
cwtl
test
inc
cltd
stc
loopne
mov
and
mov
out
stos
mov
outsb
ret
scas
xchg
iret
add
fidivrs
jne
mov
or
pop
jp
add
or
pop
mov
lods
mov
or
xor
sarl
outsl
adc
dec
jge
sbb
lock
ficompl
sbb
ret
or
js
adc
add
rclb
fs
orb
icebp
and
jl
scas
cmp
or
xor
sub
and
cmp
cwtl
pusha
andl
inc
xor
sub
addb
add
push
sub
xchg
dec
insb
mov
push
sbb
adc
push
cs
roll
adc
adc
cmpsl
fs
push
and
xor
mov
lds
ss
stos
add
adc
xchg
insb
or
movl
jo
xchg
gs
mov
in
push
mov
and
in
cmp
pop
sub
mov
pop
sar
add
pop
xor
jp
push
sbb
cmp
add
pop
and
lea
push
aas
mov
and
push
xchg
mov
clc
dec
mov
lods
scas
fwait
scas
in
addb
cmp
loope
mov
xor
lock
scas
scas
or
add
test
out
push
cmp
and
adc
jns
or
movsb
jecxz
inc
inc
jo
push
mov
imul
cwtl
movsb
sbb
or
outsl
in
and
inc
mov
fcomps
adc
sbb
stc
and
aam
xor
add
or
xor
mov
or
xor
int
and
stos
pop
icebp
es
mov
ljmp
and
sub
js
jnp
pop
and
adc
sbb
cld
fisubrs
and
push
leave
pop
or
pop
adc
pusha
or
enter
cmpsl
pop
cmp
fdivrs
jecxz
inc
rclb
xchg
inc
add
or
and
mov
js
popa
pop
movsb
cmpsl
fld
pusha
daa
sbb
jae
mov
ret
inc
rorl
jmp
addr16
add
fcomps
aad
imul
inc
adc
iret
ljmp
jae
jmp
inc
pusha
push
adc
test
add
cmp
nop
fldt
or
out
ja
inc
int3
and
daa
pop
add
daa
pop
notb
dec
nop
pop
out
add
xchg
lret
jns
loop
pop
rorb
lods
sub
aad
adc
lods
sbb
mov
and
cmp
pop
add
cmp
out
jnp
pop
subps
push
and
mov
je
mov
jnp
test
fadds
dec
add
cmp
rcr
ds
add
insb
mov
lods
sbb
mov
pop
scas
adc
mov
adc
popf
popa
icebp
das
xor
jge
lds
ret
mov
test
mov
ja
js
call
lret
pop
push
cmpsb
into
aad
stos
clc
or
shll
dec
roll
sub
hlt
ljmp
add
sub
cwtl
aam
push
iret
sbb
mov
int
in
fnstenv
sbb
adcb
add
xlat
lods
das
mov
enter
add
in
sbb
jo
and
or
mov
mov
cmp
inc
fcompl
notl
adc
mov
jo
jae
xchg
push
sub
sbbl
leave
scas
and
push
pop
sbb
xchg
add
lea
pop
or
jo
and
cmp
push
cmp
mov
push
roll
shl
sbb
push
pop
lock
jo
insl
push
cmp
iret
inc
out
adc
mov
fimuls
sub
mov
push
inc
loopne
scas
push
jnp
dec
adc
lods
add
in
mov
test
dec
inc
mov
test
dec
bound
xor
xor
jle
jae
cmpsl
lds
sbb
push
pop
xchg
cltd
push
shlb
in
inc
cmp
sub
das
adc
dec
xchg
pop
ja
push
push
ss
lcall
push
pop
lcall
in
sbb
adc
add
js
cmp
mov
sub
dec
pop
fsts
pushf
cltd
cwtl
and
push
inc
scas
inc
and
pop
add
mov
adc
inc
push
push
mov
loopne
fmull
fs
call
adc
mov
popa
fsubrs
dec
rol
outsb
adc
or
insb
ja
add
xchg
xor
cmp
testl
jbe
sub
or
loop
push
jne
pop
aam
dec
adc
adc
adc
add
xlat
and
jl
movsb
fbstp
mov
nop
adc
andl
mov
pop
xchg
xchg
add
decb
mov
inc
add
xchg
lret
sbb
pop
xchg
push
popf
add
out
inc
pop
test
dec
out
jno
or
mov
into
push
and
jo
ds
cmp
out
iret
mov
inc
ret
stos
pop
clc
cmp
js
shrb
lock
in
and
add
or
push
push
sbb
push
testl
cwtl
inc
shlb
inc
sbb
aam
data16
or
or
divb
es
adc
mov
inc
sub
adc
in
xchg
push
aam
cmp
or
mov
dec
das
dec
popa
cwtl
add
push
add
pop
rorb
in
call
adc
inc
pusha
outsb
adc
repnz
xchg
add
mov
jle
jno
or
dec
add
nop
nop
inc
aad
clc
fbstp
push
or
lcall
push
mov
lock
sub
adc
insb
iret
js
cmp
faddl
pop
imul
or
add
pop
inc
std
push
call
aad
and
cmp
sub
ljmp
or
xor
in
add
call
not
or
pop
ja
enter
movsb
rcrb
or
fimuls
das
xor
insb
dec
orps
shrb
int3
cmp
xor
xchg
aad
xchg
jmp
sbb
pop
daa
jl
je
push
shlb
mov
jb
mov
lret
jmp
jp
and
movsl
add
cmp
dec
mov
mov
std
push
fists
stc
fdivs
call
arpl
aas
negb
inc
nop
fld
stos
popa
and
adc
and
adc
jb
xor
lcall
xor
xor
pop
adc
push
aam
adc
scas
inc
imul
sbb
orb
fsubl
ror
or
add
fimuls
iret
or
mov
sub
sub
sbb
popf
adc
add
sbb
push
push
mov
int3
or
jge
icebp
jae
xchg
jg
mov
test
sbb
test
shl
out
or
sbb
push
add
push
mov
mov
xchg
jb
dec
sbb
fsubs
push
jbe
icebp
dec
aaa
pop
push
rol
push
jb
mov
test
insb
fsubs
clc
pop
daa
out
movsb
hlt
ds
mov
aam
or
adc
lods
jle
out
data16
test
xchg
test
pop
hlt
inc
les
push
and
sub
sbb
xchg
out
xlat
mov
out
cli
push
hlt
pop
add
mov
or
das
stos
cmpsl
dec
outsl
call
cli
and
les
stc
add
pop
mov
lods
adc
push
xchg
jnp
bound
movsb
xchg
in
popf
add
sub
sub
loope
sub
cmp
rdpmc
add
jo
mov
mov
scas
ret
push
cmp
sub
mov
dec
aaa
aam
pandn
insb
hlt
pop
inc
xchg
push
inc
mov
or
cmp
xor
jae
add
test
jns
xor
mov
inc
shrb
sbb
jo
mov
test
inc
icebp
shl
pop
dec
pop
xor
adc
mov
pop
jne
hlt
sub
test
mov
mov
filds
fwait
arpl
inc
ss
add
in
sbb
aas
das
cmpsl
sbb
and
inc
fnsave
fisttpl
add
sbb
or
shr
in
push
stos
rorb
aaa
jno
xor
addr16
push
stos
mov
xor
subl
jp
leave
ds
and
out
and
fstps
xchg
jecxz
mov
es
ds
es
loopne
lods
mov
add
sub
pop
xchg
push
insl
sar
es
or
mov
mov
add
push
clc
push
les
inc
fcomps
cld
fwait
pop
add
adc
push
jl
call
mov
aas
jp
loopne
dec
jno
in
jl
pop
and
loope
in
movsl
in
aad
pop
push
movsb
aaa
dec
add
hlt
test
test
jbe
stos
mov
test
imul
in
cmpsl
or
jbe
push
test
dec
shrb
push
add
mov
negb
push
loopne
imulb
pop
jecxz
into
mov
shll
or
cmp
inc
dec
lock
aaa
push
inc
dec
sub
mov
inc
add
xor
and
cmp
lea
pop
adcb
push
mov
pop
jp
add
out
scas
xchg
or
sbb
xchg
pop
sub
popa
and
mov
cmp
add
mov
mov
shl
lock
jmp
and
xor
pop
lods
decl
xor
push
push
dec
std
scas
push
mov
fildl
fildll
es
aas
inc
mov
hlt
dec
fwait
imul
aas
sub
rcrb
jbe
mov
mov
inc
sub
xor
loopne
push
adc
sbb
xor
cmpsb
pusha
or
xor
mov
stos
or
jg
and
mov
jae
xor
cmp
jl
xor
out
movsb
mov
popa
not
aas
in
sub
fisubl
mov
cmp
xchg
in
cmc
mov
xor
rcr
push
divb
insb
rclb
inc
xchg
sub
adcl
lock
scas
add
popa
es
mulb
xchg
xchg
les
mov
in
dec
cmp
ror
sub
inc
fcompl
and
xchg
call
cmc
sub
adc
fsubs
push
fdivs
cltd
jno
adc
int
fucomp
out
xor
add
lds
mov
popa
addl
popf
xchg
aam
lret
lods
jmp
add
xchg
aas
add
add
dec
int3
es
mov
add
data16
inc
int3
cmp
out
testb
iret
stos
fwait
sub
insl
mov
call
aaa
lods
mov
insb
test
fcmovnu
icebp
lods
mov
cmc
int
jecxz
jnp
lret
mov
mov
pop
shrl
pusha
cli
mov
cmp
fstl
and
loop
inc
popa
add
add
push
scas
inc
loope
lock
jl
mov
mov
ja
cmp
push
and
js
sbb
insl
out
sbb
outsb
push
and
out
xchg
andl
int
sarb
addl
sub
call
xchg
fldt
roll
sub
xchg
jecxz
insb
xchg
lcall
cmp
adc
popa
mov
out
jns
aam
fwait
test
aam
fdivp
in
dec
stos
pop
ret
imul
out
aam
mov
aad
jmp
sahf
cmpsb
or
fldenv
ja
cmp
add
subl
sub
mov
dec
add
das
jle
and
ja
add
add
cmp
xor
ret
hlt
aas
imul
stos
leave
inc
mov
xchg
aam
cmp
mov
add
and
inc
cmp
test
adc
lea
pop
cmpsb
or
or
fidivrl
or
mov
jp
sub
pop
adc
mov
sbb
scas
xor
popa
aad
xchg
xor
idiv
xlat
xchg
and
mov
cs
int
xor
mov
lods
xor
push
jge
leave
add
out
add
and
fldcw
mov
mov
loope
mov
or
pop
ja
push
fnstcw
data16
popf
xor
fistl
and
jge
decl
fsubrl
and
shlb
lcall
clc
in
xor
clc
scas
jmp
and
scas
inc
pop
add
xlat
rcll
cmp
imul
fs
roll
and
ret
fists
stos
shr
in
lds
lods
psubd
clc
dec
subb
sbb
push
hlt
push
dec
push
insl
jmp
xor
adc
imull
clc
xor
xor
pusha
mov
aam
xor
mov
xor
orb
repnz
rcl
je
and
lods
testb
aam
lods
icebp
add
xor
loopne
in
and
push
das
lret
lahf
inc
mov
fcompl
sbb
xchg
mov
mov
sbb
ja
add
das
loope
andl
ljmp
jb
or
and
les
inc
or
fbld
push
cmp
loopne
sub
rorb
xor
sbb
or
pop
fucomp
push
call
js
jge
popa
add
enter
jmp
adc
pop
xorl
push
sti
flds
popa
bound
icebp
test
scas
and
mov
fsubs
inc
aam
sbb
es
pop
pop
data16
adc
mov
test
xchg
fwait
sbb
inc
xor
repnz
jno
loop
fildll
xor
mov
out
ds
cmp
pop
fadd
jne
inc
andb
rorl
adc
or
add
hlt
add
pusha
sbbl
and
loopne
nop
or
mov
cmp
mov
sub
cmpsb
cmp
das
mov
add
enter
sub
and
cmpsb
sub
scas
add
in
popf
xchg
or
xor
sub
xchg
fisubs
add
xlat
aaa
out
aaa
mov
ljmp
loopne
lcall
bound
push
lahf
fldt
sub
outsb
jecxz
loope
faddp
into
jecxz
fs
inc
je
fdivs
mov
xlat
xlat
or
jmp
orl
push
stc
pop
aam
vunpcklpd
lahf
popf
sbb
pop
xor
mov
hlt
mov
stc
add
jae
insb
repnz
xor
out
sub
iret
cmp
out
inc
mov
push
inc
data16
and
pop
add
loop
cli
ret
loopne
fldcw
arpl
loope
lods
adc
xchg
mov
add
in
mov
int
xchg
push
test
or
or
lods
sti
jp
mov
shr
enter
movsl
cmpsl
ljmp
ret
and
adc
roll
add
in
mov
shr
scas
adc
in
jg
jne
xor
add
pop
mov
or
and
sahf
or
inc
xchg
cmp
push
xor
push
jle
adc
push
lods
fnstenv
mov
push
das
sub
mov
sub
mov
pop
je
mov
or
daa
sub
mov
insl
scas
mov
out
test
imul
ret
inc
fsts
adc
adc
adc
es
cmpsl
das
mov
fucomi
lea
and
sbb
ja
les
adc
std
pop
loopne
aam
and
icebp
ds
jmp
fistpll
push
int
adc
jo
je
ret
add
repz
mov
push
dec
cmpl
cmp
fsubrl
mov
or
xchg
and
and
into
rolb
shll
ficomps
add
pop
mov
loopne
addl
jmp
push
cmpsl
iret
push
inc
out
rcrb
jmp
or
test
and
add
adc
mov
pop
out
push
sub
bound
pop
les
out
movsb
inc
add
mov
pop
test
pusha
dec
unpcklps
addr16
pop
pop
xchg
push
shr
cmp
and
mov
lods
iret
outsb
das
push
xchg
push
jb
loope
in
mov
mov
fs
test
xchg
xlat
or
pop
mov
push
lcall
sbb
lret
xchg
pusha
add
arpl
int3
loopne
and
xor
jbe
stos
shrb
push
inc
pushf
aad
mov
in
lret
rolb
jnp
sub
repz
push
sub
aas
shrl
out
add
orb
shlb
jbe
adc
cmp
add
xchg
cmp
mov
fwait
ljmp
push
js
cmp
aad
imul
adc
insb
cld
or
add
inc
pop
filds
out
xchg
sub
add
sub
pop
push
add
scas
or
lahf
push
jo
movsb
pop
sarl
cmp
adc
jg
mov
sub
shr
sbbb
test
xor
push
mov
xor
dec
mov
lock
xchg
js
sub
enter
inc
jnp
jp
sub
dec
nop
push
inc
inc
pop
sarb
addb
shl
loope
lahf
les
jl
sub
idivb
mov
sub
iret
sub
sbbb
addl
sbb
xchg
dec
xchg
shl
sbb
push
repz
inc
cwtl
inc
add
and
add
in
in
jno
add
pop
inc
out
xchg
lods
mov
mulb
or
insl
xor
jno
jge
inc
das
popf
lock
inc
test
sub
fldl
fistps
ljmp
push
out
xor
shrl
push
sub
dec
or
sub
inc
push
push
shll
adc
les
inc
das
imul
iret
cmpsb
adc
adc
les
sub
mov
sub
loopne
adc
cltd
lods
scas
cmp
pop
cmp
and
xchg
test
and
jne
jp
scas
sarb
cmp
in
sub
rcrb
sarl
inc
adc
out
into
roll
xchg
xchg
andb
dec
lcall
cmc
xor
sub
lods
cmp
nopl
or
mov
inc
fcmovnbe
push
subb
aaa
pop
push
push
lds
adc
stos
hlt
enter
mov
sbb
mov
push
aam
jl
rcll
adc
fwait
lcall
jl
hlt
mov
mov
insl
jae
popa
fisubs
in
or
pop
ret
or
sbb
jge
fildll
cmp
int3
xchg
xchg
out
popa
and
xchg
js
nop
mov
add
mov
xchg
push
cmpsl
and
and
test
inc
xor
mov
testb
pop
add
popl
clc
xchg
andb
mov
test
xchg
std
and
jle
add
push
xchg
test
test
xchg
lret
js
add
push
vpcompressb
loop
sbb
dec
sahf
adcb
movsl
rcrl
adc
shrl
jle
rorl
inc
mov
sub
dec
pop
xchg
test
movsb
in
pop
lods
and
das
hlt
sub
adc
pushf
mov
xchg
ds
mov
adc
jl
movsb
or
adc
inc
iret
iret
inc
add
sbb
and
sbb
movsb
sbb
faddl
shrd
aaa
pop
push
outsl
push
jno
jle
mov
sub
mov
push
ljmp
and
push
xor
inc
xor
xchg
fbstp
mov
movsl
loop
xor
push
inc
js
cmp
inc
push
lahf
aam
xor
jle
sub
mov
mov
adc
lock
ja
push
lea
aad
jmp
or
daa
or
push
adcl
arpl
shll
dec
xor
push
mov
clc
out
push
pop
cmp
jns
jmp
push
jecxz
mov
sub
xchg
mov
sub
imul
das
jp
imul
js
sti
mull
sbb
inc
call
daa
mov
push
sbb
xor
add
lock
test
add
loope
arpl
adc
xchg
push
xchg
jle
sbb
lods
xor
cmp
inc
push
push
test
sub
jns
add
sbbl
add
aaa
sbb
pop
in
fmull
add
es
and
inc
add
ja
xchg
call
or
call
and
mov
mov
shrl
movsb
mov
loopne
push
cmpsl
nop
inc
jl
js
add
inc
add
adc
dec
mov
clc
push
dec
jg
mov
push
mov
insl
jle
js
sub
mov
mov
push
adc
rorl
bound
divl
std
or
cmp
mov
jge
or
aas
lods
xor
in
xor
movsl
and
call
scas
loope
add
stos
jle
add
cmpsb
push
mov
and
subb
add
adc
adc
and
xor
movsb
movsb
aam
repnz
dec
leave
jp
jp
andl
aas
inc
inc
cmp
adc
or
mov
js
js
push
inc
mov
lahf
iret
xor
mov
mov
dec
sbb
fadds
sub
ret
xor
test
test
pop
shrb
xchg
lcall
pop
fcomp
pop
xor
incl
aas
jb
sbb
ds
aas
mov
xchg
add
pusha
js
xor
jo
sub
pop
aam
add
test
fwait
mov
in
or
cmpsb
mov
iret
repz
push
pop
mov
hlt
or
mov
push
add
xchg
cmp
cmp
inc
cmp
aad
xor
testb
mov
xchg
mov
inc
xlat
cmc
pop
xor
add
jmp
insl
cwtl
add
jbe
and
mov
or
aaa
sarl
ljmp
add
sbb
jecxz
sub
mov
push
inc
test
push
jo
aaa
or
sub
test
xchg
popl
xchg
or
add
jns
test
enter
stos
jmp
inc
pop
rcrb
fidivrl
mov
xchg
xchg
test
dec
push
cmp
jns
push
add
cmp
sub
pop
xor
movsb
xor
loopne
das
lods
xor
aad
sub
add
jmp
inc
lods
inc
dec
or
or
lret
andb
inc
pop
or
pop
inc
fidivl
loopne
or
test
and
push
xor
add
xchg
cmpb
or
add
sbb
clc
adc
ljmp
sub
fwait
mov
pop
sbb
xor
push
mov
das
add
mov
adc
sbb
cmp
xchg
bound
daa
in
dec
xor
int3
jbe
mov
mov
sbb
jnp
mov
fs
mov
lods
xchg
lods
pop
add
sbb
push
aam
cmpsb
fisubrs
inc
sub
cwtl
movsb
sub
inc
icebp
je
jl
inc
add
pop
fldenv
xchg
mov
inc
xorl
inc
xor
pusha
add
je
adc
test
pop
inc
ja
inc
insb
mov
rolb
inc
jecxz
pop
and
aam
rorl
add
sbb
push
sub
adc
mov
les
mov
push
sub
xor
and
daa
dec
js
xchg
push
xor
icebp
lcall
and
mov
pop
das
inc
jnp
dec
pop
xchg
cwtl
aad
stos
lock
or
stc
pop
mov
addl
pop
sub
and
cmovge
iret
pop
shl
jp
xchg
mov
adc
and
iret
xchg
jge
daa
call
in
jns
lock
push
lea
inc
or
add
lods
adc
or
ljmp
inc
pop
jp
jge
jae
aad
and
outsb
inc
dec
xor
shll
dec
scas
jmp
fcomps
xchg
jg
arpl
add
ret
push
pop
and
stos
inc
repnz
pop
test
lahf
mov
daa
add
mov
stos
xor
xchg
js
movsl
adc
add
iret
xor
arpl
mov
jmp
aad
push
adc
in
mov
adc
xlat
or
sub
rorb
jge
loope
popa
in
push
xor
or
or
jne
iret
orl
and
xor
xor
es
sub
jbe
pop
push
add
add
aad
push
sbbl
out
dec
loop
ljmp
mov
jb
or
mov
test
aaa
test
adc
stos
sbb
aas
adc
pop
roll
sub
fisubl
out
inc
mov
lcall
test
xchg
xor
test
dec
sub
out
lcall
inc
pop
lds
sub
or
pop
inc
cmp
or
js
loope
in
fdiv
lret
es
adc
adc
sarl
xchg
xchg
lret
iret
divb
or
mov
int
adcb
jmp
sbb
cmpsl
mov
mov
xor
jle
push
aam
push
cld
loopne
scas
and
test
sbb
test
ret
cmp
mov
fwait
cwtl
xchg
and
pop
mov
das
insb
add
mov
add
jb
mov
push
fs
inc
rol
pop
insb
xchg
jo
lret
loopne
and
mov
sub
dec
adc
loope
xchg
push
mov
lret
loope
insb
sbb
rcrl
pop
cmpb
daa
adc
out
inc
arpl
lahf
push
lahf
leave
iret
mov
iret
iret
add
jno
ret
bound
xor
pop
adc
pop
fcoms
xor
xor
mov
adc
lahf
xor
adc
fwait
mov
mov
mov
iret
scas
add
dec
inc
mov
inc
daa
cmp
jo
and
daa
add
fnstenv
add
pusha
mov
sti
loopne
and
xchg
mov
xor
sbb
pop
fcompl
pop
push
push
xchg
adc
xchg
jl
add
add
lahf
jb
aam
xor
sub
in
int3
add
cmpsl
pop
fwait
sub
cmp
in
pop
xchg
pop
jecxz
lods
enter
mov
aas
sbb
repnz
or
ja
negl
iret
daa
and
repz
and
inc
sub
adc
shll
xor
adc
scas
jae
cwtl
mov
out
mov
iret
pusha
push
xchg
lods
add
andb
sbb
push
rcl
fbstp
jo
push
rolb
sti
rcrl
adc
loopew
sbb
cld
jg
mov
sub
sub
mov
iret
lea
pusha
dec
push
mov
push
xchg
cmp
incb
test
xchg
ret
xor
jo
and
fldenv
add
or
cmpsl
rcrb
out
ret
cmp
aaa
andl
inc
imul
roll
inc
xchg
adc
out
xchg
xchg
inc
rcrb
pop
mov
mov
sbb
fildll
dec
add
jmp
lods
loop
or
testb
ljmp
imul
jmp
fimuls
cmpb
in
or
sbb
jmp
mov
sbb
dec
dec
dec
iret
xor
and
jne
out
add
push
add
mov
cld
es
into
add
add
xor
pop
pop
fwait
loopne
addr16
add
jmp
js
mov
ret
iret
jle
in
adc
adc
aam
negl
xchg
jle
sbb
jbe
cli
mov
sti
cmp
cmpb
adc
fwait
je
jne
movsb
sbb
mov
lcall
or
mov
ja
fiadds
in
lods
jno
or
sub
in
pop
add
arpl
pusha
clc
adc
fucomi
inc
in
sbb
je
sbb
aad
and
or
popf
test
mov
adc
mov
test
sub
test
and
cwtl
xchg
push
adc
cli
add
sbb
and
sbb
pop
xor
dec
mov
jo
cmp
icebp
ljmp
jbe
popf
sub
bsf
cmp
lock
or
and
pop
les
outsl
lcall
fcomps
movsb
pop
jmp
cwtl
xor
adc
test
ja
pop
data16
fdivs
popf
lods
xor
jne
add
adc
ljmp
lcall
sbb
add
xor
mov
lock
call
ret
push
push
xor
movl
add
punpcklwd
in
lods
or
test
sbbl
sbb
cmp
fildll
inc
bound
xor
and
popa
xchg
jns
cs
imul
mov
bound
repz
or
mov
daa
mov
or
incl
sbb
pop
sbb
in
and
lods
je
jecxz
loope
test
mov
adc
scas
ja
call
and
jae
push
cmp
icebp
add
mov
mov
and
dec
or
cmp
jnp
inc
hlt
lcall
pop
js
pop
in
repz
call
int
aaa
mov
sti
jo
nop
test
cltd
pop
les
mov
fisttps
jb
cmp
cmc
cld
call
sub
cltd
aaa
sbb
inc
cwtl
les
std
in
adc
inc
je
rsm
pusha
jnp
dec
adc
cmp
imull
xchg
xchg
sarl
sbb
cld
or
mov
popa
mov
scas
adc
icebp
daa
sbb
xchg
inc
or
loopne
arpl
inc
mov
les
mov
jo
pop
sarl
xchg
sarb
mov
push
jle
mov
adc
aaa
jno
adc
leave
cmpb
or
adcb
push
imul
push
mov
sub
test
add
test
lods
adc
jp
fcomip
push
addb
rorb
push
mov
andb
fstpl
shlb
aad
jns
add
jmp
test
push
mov
aaa
pushf
popl
or
dec
mov
cmp
decl
adc
inc
xchg
lods
ret
jmp
rcr
fisttps
pop
or
add
pop
mov
jp
rol
push
dec
mov
sub
xchg
loopne
jp
frstor
inc
mov
jmp
sub
mov
das
dec
jae
push
or
adc
sub
adc
pop
out
adc
and
sub
push
test
mov
adc
ja
sbb
add
insb
cli
addb
inc
push
xchg
or
mov
mov
lcall
fwait
je
mov
rclb
test
cld
push
push
andl
test
jle
mov
jl
movl
mov
add
sub
fsubp
sub
sub
mov
add
loope
adc
mov
mov
jnp
mov
sbb
sub
loop
add
pop
ret
cmp
push
bound
mov
shl
loopne
in
loopne
push
aam
clc
lret
int
adc
mov
lods
push
pushf
sub
sub
cmp
mov
fsts
push
out
and
out
pop
jb
jno
add
insl
js
cmc
shlb
xor
stos
ljmp
pusha
xchg
cmp
aaa
js
cmp
dec
fwait
sbb
sub
cmp
jnp
and
mov
xor
xchg
push
push
lods
sbb
sbb
sub
inc
dec
and
push
adc
cmp
mov
out
cmp
mov
cwtl
inc
lock
adc
push
orl
sub
sbb
cwtl
inc
into
iret
and
mov
push
outsl
dec
insl
or
sbb
mov
push
ss
push
loopne
and
mov
add
insb
add
outsl
xchg
inc
add
push
int
sbb
mov
adc
daa
rcll
pusha
dec
ret
test
or
xor
sahf
ljmp
lock
xorl
sbb
nop
dec
movsb
and
gs
shlb
lret
cmpsb
subb
mov
lods
fnsave
cmp
fucomp
sti
inc
shrb
lahf
push
iret
or
and
and
lret
cmp
lock
sub
aaa
or
inc
cltd
or
sbb
sbb
roll
inc
test
les
jmp
and
inc
add
leave
fmulp
lcall
mov
add
dec
mov
icebp
add
push
das
nop
and
sarb
scas
lret
cmpsl
mov
cltd
out
cs
testb
inc
sub
mov
and
push
out
test
lahf
leave
jo
jge
test
ret
sbbb
push
inc
dec
adc
push
mov
into
bound
inc
fimuls
cltd
icebp
jg
jo
imul
push
addl
int3
mov
outsb
daa
adc
mov
and
and
in
xchg
adc
add
lods
rorb
push
xor
add
sub
or
adc
or
xchg
outsl
loopne
stos
sbbb
cmp
add
xor
xor
or
xchg
push
xchg
addl
push
pop
mov
fcmovnbe
add
xchg
xchg
rcrl
imul
shlb
inc
jne
clc
jo
int3
cmp
adc
jg
les
push
iret
mov
dec
sub
mov
addb
in
lret
mov
sarb
cmp
sub
sbb
fiadds
mov
and
and
int3
mov
jle
test
adc
sub
in
pop
add
or
xchg
jecxz
jmp
movb
inc
sbb
mov
add
add
jmp
or
addb
add
lahf
and
idivl
les
sti
and
mov
lahf
std
inc
push
sbb
ds
sub
je
test
leave
andb
xor
adcl
xor
inc
sub
andl
popa
out
sti
lret
jmp
jge
out
inc
test
or
jl
int3
and
out
test
jg
or
out
fstps
adcb
les
lcall
adc
lret
xchg
xor
ret
aad
subl
adcb
jne
pop
add
jge
gs
sub
mov
xchg
pushf
pop
lods
pusha
adc
push
mov
loop
scas
push
add
sub
mov
sbb
add
and
imul
dec
dec
scas
loopne
aam
mov
repnz
pop
fadds
cmp
cmpsl
adc
loop
mov
add
add
test
xchg
sub
sbb
xchg
and
andb
mov
subb
mov
mov
dec
adc
cmp
jecxz
mov
and
leave
jge
jp
xor
stos
xchg
jge
sbb
add
sbb
lret
push
test
int
imul
mov
mov
push
cs
scas
adc
jg
test
inc
out
push
out
cmp
push
inc
xchg
sub
push
arpl
jmp
or
test
xchg
and
loope
jp
pop
stos
and
sub
cwtl
pop
int3
pusha
inc
xor
stos
jle
sub
sbb
inc
mov
lcall
add
xor
shrl
inc
movsb
sub
mov
mov
ret
scas
add
test
sub
jle
dec
and
mov
lock
test
or
jg
sub
pop
and
inc
in
inc
xlat
push
inc
mov
mov
into
vmread
dec
stc
push
fsincos
loope
iret
sub
push
fisubs
cmp
ljmp
and
fwait
xor
mov
sbb
xor
and
mov
adc
mov
or
push
adc
loopne
out
jmp
cmpsl
sbb
mov
es
add
sub
adc
mov
pop
ficomps
iret
repz
push
sarb
mov
inc
data16
push
cmpsb
leave
cmpsb
insl
std
add
icebp
sahf
fidivrl
adc
mov
roll
outsb
sbb
pushf
add
xorb
sbb
mov
gs
cmp
sbb
mov
scas
pop
mov
push
das
mov
pop
mov
and
mov
imul
push
ja
popa
imul
adc
push
add
or
fcmovbe
data16
aaa
sub
cltd
inc
adc
outsl
popa
sub
mov
sbb
push
shll
rolb
rcll
les
pop
and
nop
xorb
mov
lds
dec
adc
xchg
jb
out
popa
mov
mov
out
test
mov
pushf
and
stos
lods
jmp
adc
loopne
or
or
mov
fstps
xlat
push
xchg
adc
mov
mov
jl
push
shlb
sub
xor
aas
jecxz
cwtl
push
shll
hlt
jbe
cmp
in
mov
das
sahf
and
fs
fadds
mov
aaa
cmp
push
lods
sub
in
aaa
push
js
xchg
dec
loope
out
jbe
cmp
out
popa
out
sbbb
or
fmull
mov
std
aaa
hlt
data16
xchg
adc
adc
fiadds
xchg
mov
mov
int
cs
cmpsb
pop
xor
shl
iret
inc
add
es
mov
int3
mov
mov
mov
mov
call
mov
repz
inc
or
lahf
orb
add
or
mov
mov
dec
adc
sbb
scas
jle
subb
cmpsl
out
push
or
push
rcrl
repz
jno
jae
add
or
push
aas
xchg
inc
rolb
js
stos
out
or
jg
enter
aad
add
mov
push
pusha
mov
push
cmp
shlb
push
mov
hlt
and
int3
sbb
lods
dec
add
jae
lcall
add
or
jne
int
push
rcrl
jno
xor
sub
lods
and
add
icebp
cmp
jo
inc
bswap
pop
cmp
jp
mov
push
mov
or
jo
jge
aam
add
call
mov
pop
addr16
je
mov
shl
movsb
loope
repnz
and
sub
mov
sbb
add
and
inc
mov
dec
sub
add
inc
rcrl
cwtl
iret
lret
xor
push
je
sbb
mov
fisttpll
fcoml
and
sbb
and
sub
stos
mov
pop
sbb
mov
jmp
sbb
sbb
and
lods
das
xchg
adcl
mov
add
loopne
aad
inc
sub
imulb
mov
fdivs
orl
cmp
xlat
and
repnz
adc
mov
scas
push
scas
or
insl
sbb
aaa
cmp
test
adc
sbb
adc
jl
inc
scas
xchg
aaa
add
push
andb
mov
inc
inc
outsb
mov
imul
xor
in
jnp
add
xchg
mov
test
xchg
or
add
shll
add
sbb
sub
daa
movsl
xor
jecxz
cmp
inc
fst
test
das
dec
leave
cwtl
mov
popf
fmuls
mov
mov
xchg
and
loope
in
test
ja
gs
cmp
pop
mov
add
dec
adc
mov
xor
rorb
mov
cs
jb
sbb
xchg
outsb
mov
lea
mov
pop
fcomi
fucomip
lock
mov
into
sarb
repnz
lock
icebp
add
inc
imul
jecxz
adc
fnstsw
jl
daa
add
fiaddl
push
pop
xor
test
mov
sub
sbb
insl
cmp
inc
adc
and
mov
add
xchg
cmpl
ds
imulb
ret
iret
push
popa
mov
push
movsl
loope
mov
int
jnp
or
add
lock
lret
xor
clc
int3
and
or
leave
dec
xor
pop
mov
das
push
les
or
stos
jno
idivl
rcr
jae
call
or
rcr
xlat
add
inc
push
xchg
or
mov
lods
in
jns
mov
bndstx
cltd
add
dec
aaa
fnsave
add
fldcw
pusha
push
in
mov
movsl
pop
daa
js
sbbb
test
repnz
push
push
sahf
in
inc
loope
outsl
add
xchg
cmpl
and
push
push
lods
pop
inc
dec
test
mov
es
cltd
jb
rclb
sub
stos
ret
mov
fidivrs
dec
mov
test
pop
xor
push
mov
das
std
mov
fs
sub
and
enter
push
mov
mov
out
pop
test
les
and
adc
jmp
xchg
or
js
in
pusha
or
sbb
push
arpl
mov
insb
ret
xor
mov
push
fisttpl
shll
or
xchg
adc
bndstx
movsb
mov
test
jmp
push
das
aaa
ljmp
shll
fmull
bound
add
test
cmp
pusha
xorl
mov
loope
mov
cmp
iret
icebp
xor
movsl
movsb
xor
js
popa
pop
jo
sub
or
std
jmp
pop
xchg
jl
sub
add
or
andb
sbb
and
out
push
pusha
andb
inc
jecxz
add
mov
mov
les
add
add
add
pop
lock
mov
add
pop
inc
or
fisubs
sub
add
adc
inc
hlt
jecxz
daa
aaa
lods
out
add
movsb
dec
xchg
mov
xor
mov
ss
sub
dec
mov
out
les
dec
inc
dec
in
test
mov
push
outsl
arpl
popf
fwait
xchg
fmull
lods
pop
mov
mov
jbe
cld
popf
jne
adc
jb
movsl
ljmp
inc
psubb
sub
es
add
and
push
mov
jp
mov
or
xchg
cmc
jbe
push
lods
mov
faddl
fucomip
xor
adc
adc
add
dec
dec
lds
sub
mov
ret
cmp
xor
aaa
xchg
xor
pop
adcb
sub
or
data16
push
push
mov
fsincos
bound
lret
push
adc
push
adc
push
loopne
mov
lods
stos
lds
inc
mov
xchg
sahf
int
fisubrl
add
jnp
sbb
lret
or
fs
jecxz
loop
xchg
and
cmp
mov
loop
dec
pop
pop
ds
push
fdivrs
loope
dec
lds
or
and
cmpsl
lret
xor
or
and
push
icebp
lcall
and
insl
sti
jne
jo
int3
js
outsl
push
les
or
xor
xchg
xchg
jbe
aaa
ljmp
xor
dec
push
cmc
mov
push
push
scas
stos
sahf
mov
mov
xchg
add
xchg
inc
cmp
or
les
sub
and
test
pop
add
and
mov
add
lea
loopne,pt
adc
hlt
push
add
mov
inc
loop
jmp
aad
dec
push
addr16
popa
push
pop
cmp
or
push
pop
jno
bound
sbb
mov
add
or
or
push
push
into
test
lret
clc
iret
inc
mov
jge
loope
sub
sbb
and
shl
mov
orl
rclb
inc
js
xchg
mov
sub
call
sbbl
or
scas
pop
dec
or
insb
inc
xchg
cmp
adc
repz
in
pop
fwait
add
lds
pop
xor
xor
cwtl
inc
les
inc
mov
adc
jmp
movsb
mov
sbb
pop
sbb
rclb
pop
add
pop
cmp
test
sbb
push
sbb
les
sbb
push
push
jo
daa
bound
push
adc
mov
inc
je
decb
movb
data16
cmpb
std
sub
inc
push
mov
nop
push
js
sub
movsl
xor
sub
popa
into
or
add
sub
loopne
popa
push
xor
aam
inc
xor
ds
xor
sti
lea
das
daa
and
inc
shr
jae
std
cmpsb
push
in
dec
push
rclb
arpl
dec
cmp
sub
or
and
push
mov
mov
clc
cwtl
jmp
mov
mov
pop
and
pop
adc
les
sti
mov
fdivrs
test
inc
shrb
stos
fwait
pop
add
cs
call
daa
fnsave
das
ret
add
xlat
inc
leave
cmp
ja
sub
xor
inc
mov
aaa
js
mov
jno
xor
and
cmp
test
gs
dec
add
notl
stc
aaa
pushf
sub
add
out
fisttpl
cltd
popa
add
mov
and
test
mov
jg
add
pop
sbb
add
outsl
cs
sub
movsl
jp
add
nop
mov
nop
sti
imul
roll
add
rol
or
push
xlat
or
mov
sbb
test
inc
int3
in
test
and
push
iret
clc
rolb
aas
inc
or
bound
pop
pop
add
pusha
ret
add
into
call
mov
rcrb
aad
add
xchg
popf
in
loope
add
stos
cmp
rcrl
pop
dec
or
lahf
push
adc
dec
std
ljmp
sbb
cmp
add
cmp
xchg
icebp
ror
pop
push
imul
ljmp
aaa
mov
aam
add
aad
jae
and
sub
jnp
inc
or
push
adc
outsb
jnp
and
adc
mov
mov
mov
and
adc
inc
ror
jne
loopne
imul
adcl
push
shlb
out
mov
sbbb
jae
or
into
mov
or
mov
mov
and
ss
mov
jg
xor
push
stos
jno
push
jno
adc
mov
mov
jmp
outsl
and
xor
push
pusha
pop
dec
add
mov
stos
inc
and
fwait
xor
out
pop
add
dec
mov
push
ret
cvtpi2ps
inc
and
mov
lret
mov
orb
add
jp
lock
sahf
icebp
subl
fsub
push
mov
dec
ja
addr16
ret
push
fistps
or
bswap
imul
daa
bound
jbe
dec
dec
mov
sbb
push
aas
pop
pop
das
and
and
es
jg
cmpsl
imul
jg
inc
nop
mov
push
xchg
iret
popf
adc
inc
hlt
add
pop
mov
and
pop
nop
push
jge
and
pop
push
test
gs
inc
cmpsl
pusha
lds
aaa
mov
out
in
adc
loopne
adc
pop
mov
mov
sbbb
sbb
mov
orl
xor
aaa
cmpb
inc
push
inc
fisubrs
je
mov
push
hlt
push
ljmp
call
add
and
adc
mov
add
push
jns
aaa
xchg
shll
adc
inc
inc
or
fidivs
outsb
aaa
adc
inc
rorl
mov
les
sub
fxch
mov
cmpsb
out
pusha
jp
mov
js
dec
out
popa
or
mov
and
popf
adc
addr16
add
je
ficoml
and
scas
and
mov
sbb
add
mov
add
dec
xchg
mov
mov
jbe
fs
arpl
and
cmp
ret
push
mov
pop
jbe
sti
mov
repz
add
test
jns
push
add
hlt
sahf
mov
mov
add
or
scas
or
arpl
or
and
ljmp
inc
add
data16
push
adc
xchg
add
and
loopne
and
repz
mov
pop
pop
cmp
jge
in
out
out
lret
jnp
adc
imul
xlat
movsb
mov
imul
out
adc
pop
push
mov
scas
cmp
mov
inc
xor
clc
push
mov
dec
and
sbb
push
pusha
push
sub
jmp
push
adc
mov
cmp
ret
cmp
aaa
or
and
loope
stos
mov
mov
shlb
push
loopne
adc
or
out
pop
or
mov
addb
ret
pushf
xor
jl
jns
out
push
mov
daa
push
add
or
add
inc
iret
mov
sbb
xor
mov
inc
mov
mov
addb
imul
sbb
push
mov
cmp
stc
sub
xchg
or
adc
imulb
js
sbb
fnsave
cmc
push
mov
leave
inc
cmp
mov
call
xor
cmpsb
ret
push
out
les
and
outsb
and
add
push
jle
cmp
aad
aad
jo
mov
push
inc
xor
pop
jmp
add
cmpsl
iret
xchg
add
xor
sbb
fmull
addr16
test
jo
ficoms
cld
mov
xlat
xor
mov
adc
inc
loop
pop
mov
or
add
outsb
int
frstor
cmp
arpl
adc
jecxz
stos
sbb
xchg
sti
into
mov
insb
ss
cmc
cmpsl
push
add
push
mov
ficoms
pusha
sbb
fwait
sub
in
cmp
pop
aad
insl
pop
inc
test
mov
xor
mov
shrb
iret
arpl
in
inc
inc
shll
cwtl
aam
aaa
pop
adc
ss
aaa
pushf
pop
adc
cltd
inc
fldcw
rorl
xor
jo
int3
js
xchg
test
dec
push
sub
add
push
outsl
mov
lds
sub
sbb
push
xor
xor
nop
daa
or
lcall
cmp
fstpt
pop
and
mov
push
nop
sub
lods
and
jo
sub
mov
pop
das
ret
jb
mov
add
mov
stos
pop
mov
sub
js
push
and
jbe
popa
jb
jne
jbe
lret
mov
mov
sub
rorl
andb
xor
mov
sub
or
add
pushf
push
ja,pt
lahf
movsl
cmp
jmp
scas
xlat
imul
nop
fadds
andb
and
aam
lods
cmp
add
mov
mov
xor
testl
adcb
mov
fstpl
push
xor
push
push
or
das
into
pop
cltd
mov
lcallw
jo
inc
or
sahf
aas
mov
push
jbe
mov
adc
sbb
mov
cmp
cltd
jno
and
dec
push
fcomps
push
sarl
add
pusha
lods
arpl
iret
jmp
mov
xchg
je
ret
xchg
nop
iret
xlat
jne
in
sahf
int3
mov
loope
mov
jbe
pop
in
fistpl
xor
mov
adc
fwait
dec
and
pop
incb
test
mov
mov
dec
mov
push
insl
mov
dec
lahf
jns
mov
rolb
test
sbb
loop
xchg
jmp
stos
dec
mov
adc
les
push
inc
je
popa
xor
aas
ja
sbb
mov
int
movsl
push
sub
notl
lods
movb
mov
cmpsl
stos
ja
insb
scas
call
jb
add
add
inc
inc
or
dec
mov
adc
add
test
jns
stc
filds
daa
adc
dec
jne
lcall
sahf
mov
mov
pusha
fcom
leave
mov
xlat
rol
fnstcw
outsl
push
sub
inc
outsb
add
mov
pop
loope
fwait
bound
in
sbb
scas
imul
pop
outsl
sbb
aas
ja
fidivrl
add
mov
mov
shll
sahf
and
push
push
xchg
aas
daa
fbstp
pusha
lods
push
dec
fwait
mov
cmp
test
add
cmp
xor
sbb
int3
pop
or
dec
aaa
call
cmp
pop
lds
out
or
lock
outsb
inc
insl
cmpps
idiv
xor
js
add
jne
subb
inc
add
es
outsb
les
mov
sbb
mov
jnp
popf
pop
out
push
jle
mov
mov
lock
pop
hlt
or
adc
ja
call
ds
mov
xchg
sub
movsl
out
sbb
and
stos
and
mov
adc
cmpsl
filds
ret
popa
or
push
ss
adc
ljmp
jo
lods
popf
mov
sbb
pop
push
aad
lock
andl
pop
xor
sub
std
es
ss
mov
popf
int3
sub
js
outsb
insl
lcall
int3
sarb
jg
mov
je
aaa
or
inc
and
xchg
test
mov
push
jle
arpl
sbb
arpl
jno
test
arpl
lret
lock
movsb
ret
sub
addr16
in
iret
aaa
sbb
outsb
movsb
push
cmp
push
adc
iret
xor
mov
adc
out
xor
push
mov
enter
movsl
sarb
push
shll
test
stos
push
fs
aas
add
addr16
shlb
add
add
jno
mov
shrl
js
cmc
pop
ja
or
sarl
xor
addr16
xor
cmp
add
call
mov
and
inc
jne
sahf
push
dec
lea
out
popf
and
sub
orb
mov
sub
add
orl
jae
in
xor
pop
or
ljmp
add
and
pop
out
addl
push
shrb
mov
add
das
mov
and
sbb
dec
cmp
add
in
xor
adcl
test
inc
sbb
bound
mov
push
lret
cltd
fldenv
int3
pop
mov
mul
jb
pop
sbb
mov
xchg
shr
push
inc
sub
sbb
pop
daa
add
lea
lea
mov
ss
into
lods
insl
cmp
in
adc
mov
ret
iret
mov
or
sub
aad
gs
mov
push
mov
mov
xor
jl
cmp
stos
pusha
inc
scas
push
mov
pusha
and
xor
pop
pop
orb
shlb
xchg
push
xchg
bound
sub
mov
cmp
add
rclb
popa
sbb
xor
cmp
cmp
add
sub
std
and
mov
add
ljmp
pop
js
push
shlb
or
add
sbb
pop
arpl
mov
sub
cmpl
add
pop
mov
sub
mov
push
popa
js
out
add
dec
xor
cwtl
ror
scas
push
lret
rclb
das
inc
push
sub
int3
pop
sbb
cmp
push
rcrb
enter
add
inc
lods
jnp
dec
scas
loopne
mov
dec
mov
mov
js
mov
inc
lods
loope
fldt
jo
adc
xchg
lods
push
sub
mov
ja
in
or
xchg
add
loopne
push
jge
addr16
into
enter
pop
pop
mov
lcall
roll
or
cmc
sub
call
sub
mov
pop
add
jmp
inc
repz
enter
lahf
mov
sub
aam
cmp
mov
insb
lret
push
sub
leave
fidivrs
inc
loop
pop
shlb
xor
xchg
cwtl
adc
mov
es
dec
mov
push
dec
adc
das
in
imul
outsb
mov
add
lret
es
add
sbb
out
or
xchg
add
int
add
jne
pop
movsl
test
cmp
je
das
and
push
add
cmp
loope
inc
and
scas
lret
xor
arpl
jecxz
mov
loope
fistpl
inc
sub
jno
and
mov
cmpsl
or
and
sub
sbb
mov
loopne
dec
inc
xchg
stos
fwait
stos
fnstenv
loope
pop
sub
cwtl
mov
sub
mov
add
popa
mov
adc
imul
and
xor
stos
fsts
xor
sub
sub
insb
jbe
adc
lahf
lods
or
or
lods
pushf
pop
inc
shlb
push
or
adc
aaa
popf
sub
lods
ss
inc
arpl
sub
sbb
or
int3
fisttps
test
jecxz
or
ret
out
in
fists
das
xlat
inc
xor
xchg
rol
fisubl
lahf
push
popa
mov
xor
inc
js
testl
add
bound
adc
push
in
iret
xor
test
xor
push
mov
sti
add
inc
sub
stos
sbbl
or
xchg
into
rorb
es
scas
or
xchg
push
fisttpll
in
xlat
mov
into
cmp
cmp
cltd
sbb
or
fadd
push
inc
out
and
add
adc
insl
sub
stos
test
sub
mov
or
and
popa
int
xor
ret
adc
rorb
push
cmpsl
sbbl
and
pop
add
stos
loop
ljmp
and
add
fcoml
outsb
int
popa
jbe
and
and
test
push
xchg
dec
mov
push
or
jl
push
or
mov
adc
das
mov
ja
roll
sub
dec
and
add
sub
sub
or
cmpsb
loop
inc
movsb
js
adc
out
push
pop
shl
pop
lret
lcall
adc
dec
add
push
insb
fnstenv
add
push
push
jp
pushaw
push
test
push
lldt
cli
add
and
rcrl
fldenv
lret
inc
cs
mov
dec
test
rcrl
call
and
andl
mov
mov
rorb
popa
adc
jo
enter
imul
es
xor
inc
aaa
sbb
sbb
lds
and
aaa
jne
in
scas
fs
sbb
gs
into
cmp
mov
mov
aas
cmpsb
add
mov
and
je
cmpsb
pop
xor
dec
aad
adc
mov
add
add
cltd
xor
in
popa
mov
cmp
add
sbb
mov
ret
sti
xchg
add
sub
adc
add
iret
and
cmc
sahf
hlt
sarb
sbb
jne
jmp
inc
loopne
sahf
popa
ja
xchg
repz
out
sub
cmp
push
pop
insb
rep
adc
sahf
sarl
cmp
lcall
mov
or
out
pop
cwtl
sar
dec
pop
into
xor
jns
jne
inc
mov
mov
bound
push
mov
dec
or
shll
das
into
rorl
mov
imul
cmp
push
sub
and
lea
into
out
mov
or
or
lret
or
sarb
notb
add
mov
movsb
call
mov
stos
pushf
pop
es
inc
mov
sub
lahf
jo
jge
dec
adc
aam
aam
fisubs
xlat
jg
xchg
scas
sub
cld
xchg
movsb
in
mov
or
arpl
mov
mov
sbb
cmp
xlat
icebp
mov
subl
pop
test
sbb
sub
xor
adc
push
mov
xchg
dec
scas
dec
pop
adc
push
add
cwtl
int
adc
and
loopne
orl
test
mov
insl
xchg
aam
fldenv
add
push
and
daa
inc
pop
inc
call
mov
aad
push
mov
lahf
lock
dec
pop
nop
test
sti
aaa
adc
mov
sub
clc
jns
jne
pusha
rcll
cmc
out
movsb
jbe
xchg
mov
shl
icebp
das
adc
adc
sub
dec
add
mov
mov
push
dec
add
data16
xchg
jmp
xchg
lret
xchg
push
fwait
cmp
pop
fs
dec
in
cmpsb
scas
sbb
push
add
xchg
xor
icebp
je
dec
enter
xor
mov
mov
in
push
add
adc
in
fld
jbe
leave
js
ret
cmp
mov
idiv
jecxz
lods
data16
adc
popa
test
ljmp
into
jbe
push
adc
push
push
and
xlat
ja
into
dec
dec
adc
sbb
push
ret
bound
sub
testl
mov
int
sbb
pop
mov
adc
push
lahf
push
arpl
mov
pop
aam
mov
or
lcall
aaa
addb
mov
pop
or
sbb
les
addr16
sub
jmp
add
cmp
jns
push
pop
cmp
push
xchg
add
idivl
mov
fdivl
jecxz
mov
lea
jg
sbb
das
add
fsincos
jne
sub
into
inc
insl
pmaxub
fisttps
in
jne
xchg
push
dec
outsl
xlat
jmp
jo
nop
fistl
movb
pop
add
jnp
and
shll
mov
jns
sub
add
in
pop
push
cmpsl
push
data16
pop
sbb
ficoms
lret
enter
es
ret
mov
fsubp
dec
dec
sbb
bound
xchg
enter
adc
lret
adcb
shrb
daa
add
sbb
add
pop
pop
ret
push
push
push
insb
pop
lret
inc
or
mov
mov
mov
sub
dec
xchg
and
lret
sbb
sub
fwait
mov
pop
or
test
cmpsb
inc
or
and
mov
lret
push
ret
cmp
xchg
movsl
mov
subb
jo
push
sbb
pop
add
or
negb
jbe
popa
adc
popa
push
lea
push
fstp
aaa
ss
pop
pop
dec
or
inc
add
inc
adc
and
insl
jle
cmp
ret
bound
ja
xlat
decl
push
lahf
mov
sti
mov
or
adc
out
mov
fnstsw
add
or
jecxz
ss
and
sub
inc
add
sbb
push
sbb
add
mov
popf
or
data16
out
repz
xchg
data16
data16
sbb
mov
aaa
gs
mov
xchg
loopne
sub
mov
mov
jno
dec
ret
pop
or
in
mov
cmp
xor
xlat
add
cmp
fcom
add
or
add
mov
add
mov
push
adc
insl
or
addr16
data16
mov
sbb
popa
or
popa
fstpl
not
cmpsl
std
mov
out
or
or
popf
adc
sbb
mov
mov
add
sbb
jbe
loope
adc
jge
imul
sbb
hlt
aas
das
pusha
loopne
mov
cmp
fs
imul
mov
push
xchg
cmp
mov
mov
cs
sub
jb
mov
dec
mov
adc
pop
cmp
insl
rclb
mov
cmp
cmp
shrl
loopne
mov
loope
sub
add
divl
mov
les
push
add
sbb
fndisi(8087
cmp
hlt
movsb
xchg
pop
push
sti
jbe
fwait
pop
mov
ret
neg
shlb
jl
pop
fnstsw
rcr
inc
pop
das
cmp
xchg
mov
fists
lock
add
call
in
jns
cmp
jnp
aaa
add
test
aas
sub
cld
mov
cmpsb
inc
das
add
add
push
ss
add
push
mov
outsb
push
or
adc
sub
push
dec
daa
call
push
dec
mov
lds
pop
mov
lds
jp
and
mov
idivb
aas
std
xor
sbb
pop
xor
mov
and
jmp
ret
in
inc
inc
xor
mov
inc
lods
cwtl
in
ljmp
inc
gs
push
ds
lahf
pop
xchg
inc
jecxz
andl
pop
add
lock
push
cmp
sti
mov
cmp
add
pop
mov
in
mov
xchg
ds
add
or
daa
or
in
arpl
add
and
jo
xchg
std
bound
or
aas
stos
adc
xchg
int
in
sti
fwait
or
fcoml
cmp
scas
mov
pop
jbe
outsl
mov
mov
pop
jle
mov
outsl
outsb
shl
xchg
add
leave
or
xor
push
push
test
sti
cmp
add
mov
mov
insb
cmpsl
and
xchg
mov
mov
pop
or
test
mov
push
int
or
mov
insl
dec
ja
cmp
out
mov
ljmp
in
mov
repnz
test
sbb
pop
outsb
mov
cmp
lret
mov
das
push
pop
pop
stos
aas
lret
add
xchg
in
mov
pop
ret
sahf
fsub
jo
fcomps
cli
outsl
inc
sbb
fistl
add
pop
add
and
imul
fcomi
dec
or
cmpsb
xchg
adc
out
mov
js
bound
cli
lds
pop
sbb
cld
add
cmpsb
and
test
push
int3
das
lods
outsb
push
adc
js
or
scas
mov
hlt
dec
in
mov
push
ljmp
cwtl
or
fsubr
sbb
or
aaa
imul
xchg
test
mov
aas
loope
sbb
jecxz
inc
popf
or
cmp
fbstp
add
inc
mov
inc
sahf
jecxz
mov
pop
push
outsl
push
xor
xchg
sti
fcmovu
mov
jb
xchg
je
xchg
xchg
pop
fidivs
in
mov
icebp
pop
aaa
cmc
shll
fcmovnb
xor
xchg
cmp
mov
adc
add
dec
rclb
cs
mov
fisubrl
es
lods
das
jmp
rcl
jns
add
sub
xchg
lret
in
ret
jne
fsubs
ja
inc
fildll
bound
icebp
mov
xchg
jl
cltd
pop
push
movl
subb
scas
xchg
xchg
outsb
insl
pop
loope
mov
add
pop
mov
mov
outsb
lods
scas
sbb
pop
arpl
push
loope
insb
rcll
aas
and
xchg
add
mov
sbb
rolb
sbb
inc
add
or
xor
int3
pop
imul
out
js
icebp
ss
or
sar
fcoml
jb
out
js
hlt
test
sub
imul
push
out
mov
mov
std
sbb
mov
stos
mov
mov
cmp
xor
and
enter
in
test
ss
push
mov
ret
lods
mov
in
xor
repnz
loop
iret
dec
push
push
mov
and
fistpll
or
pop
loopne
fcoms
inc
jno
xchg
dec
mov
jno
adc
pusha
fdivl
and
add
jecxz
mov
pop
push
aam
sub
xchg
jecxz
xor
push
arpl
outsb
imul
mov
pop
mov
inc
mov
add
clc
mov
ss
mov
inc
pop
mov
pusha
aaa
pusha
cmpsl
pusha
mov
sbb
add
push
pushl
cmp
rcll
mov
push
pop
xchg
orl
xchg
sbb
xchg
mov
imul
pusha
inc
adc
repnz
out
cmp
sbb
insb
negb
mov
push
cmp
mov
pushf
add
insb
pop
mov
rcrl
mov
jb
xor
jbe
fwait
adc
and
mov
in
mov
pop
sbb
inc
or
iret
lea
pop
mov
xchg
push
ret
xor
stos
jae
outsb
outsb
popa
jnp
rorb
push
repnz
jbe
pusha
add
test
push
mov
mov
and
inc
xlat
sbb
or
mov
in
fstps
or
stos
sub
mov
push
inc
in
lods
sbb
xchg
shlb
pop
add
sbb
jb
ss
cmp
cmp
mov
inc
cltd
fcomp
inc
sub
scas
jge
cmpsb
rcl
ret
lock
lea
test
hlt
cli
scas
fldenv
push
xchg
out
das
jo
ret
lea
adc
rcr
xor
mov
sbb
insb
lea
cmp
ds
sahf
mov
cli
in
out
pop
mov
cmpsb
pop
inc
sarb
cmp
pop
mov
movsl
or
mov
popa
mov
xchg
add
mov
dec
aam
cmpsl
mov
ss
push
cmp
out
inc
mov
sbb
xchg
jns
jle
repnz
pop
pop
jbe
dec
fwait
aaa
sbb
push
pop
add
jb
enter
push
inc
xor
or
es
inc
add
and
push
pop
adc
sub
cmp
fisubrl
movhps
inc
clc
mov
xchg
hlt
jg
aaa
inc
mov
cmp
dec
jae
loope
xor
add
cli
sub
mov
or
stc
dec
push
negl
xor
fs
push
mov
js
loopne
xchg
loopne
xchg
push
clc
in
ja
jne
nop
clc
rcr
dec
outsb
in
jo
xor
outsl
mov
dec
and
sub
cmp
movsb
and
add
mov
cmp
inc
sahf
or
mov
or
and
inc
pop
push
push
mov
push
loope
sub
mov
adc
out
sbb
mov
and
xor
xchg
and
inc
imull
nop
xor
aaa
sbb
insl
fnstsw
push
adc
incb
dec
jne
cmp
add
adc
inc
mov
adc
call
lock
pusha
inc
mov
push
cmpl
test
fnsave
jecxz
dec
pop
std
nop
pop
bound
inc
jg
pop
aas
mov
jbe
in
sbb
xchg
lea
into
pop
flds
fdivr
stos
add
pop
inc
mov
mov
pop
jge
mov
xor
sub
daa
mov
pop
aam
cmp
pop
xorb
mov
clc
out
mov
push
sbb
add
sahf
cmc
push
lods
cld
clc
and
std
insl
outsl
sarl
sub
sub
call
jb
inc
xchg
jnp
rep
inc
int3
outsb
in
jae
sbb
mov
insb
mov
jo
outsb
push
mov
jmp
fadd
jb
adc
clc
orb
mov
pop
ret
fcmovbe
rol
in
popf
cmp
popl
xchg
fdivrs
flds
gs
jo
or
fwait
mov
fmul
sbb
mov
inc
add
jg
pop
pop
xchg
scas
cmp
xor
clc
pop
clc
pop
mov
icebp
sbb
nop
dec
jge
pop
xor
lahf
mov
jl
jne
out
push
pushf
cs
sbb
fwait
sbb
test
lds
ret
mov
inc
push
sbb
dec
sub
fwait
and
sbb
and
outsl
lahf
mov
mov
loop
add
push
aaa
jae
sub
arpl
xchg
fs
mov
and
pop
sbb
mov
xchg
mov
arpl
lea
sub
cmp
push
data16
and
cmp
pop
pop
adc
cmc
mov
lock
mov
cmp
sbbb
insl
mov
mov
or
pop
mov
daa
cmp
arpl
cmp
xchg
aam
int
mov
dec
ljmp
dec
daa
pushf
loope
stos
roll
fcmovnbe
push
mov
mov
cmp
adc
fs
loopne
mov
cmpsl
or
jl
ja
xor
mov
imul
test
xor
pop
mov
popl
mov
test
xor
divl
stos
sbb
or
push
notl
and
jno
xchg
mov
enter
ljmp
lock
xchg
add
add
outsl
fstpl
ret
pop
sub
ret
or
push
and
loopne
jns
push
add
pop
aaa
lock
mov
push
mov
or
lock
aas
aad
jnp
and
push
sti
dec
gs
and
lods
xchg
mov
addr16
insl
mov
pop
shll
fmull
hlt
dec
das
rcll
loop
ss
faddp
xchg
push
mov
or
sbb
loop
inc
mov
push
push
and
outsb
sbb
lea
add
xor
push
push
mov
mov
push
movsb
movzbl
cmp
leave
sub
mov
jmp
cmp
addr16
cmc
or
xor
fcmovne
push
scas
in
jle
push
fdivrp
push
outsl
loop
xor
fstps
or
std
aad
sarl
mov
mov
add
int
ffreep
pop
mov
jle
add
sbb
lret
pop
mov
das
dec
or
decb
sub
iret
adc
add
mov
imul
xor
aad
mov
les
arpl
dec
add
mov
loope
test
mov
enter
in
xlat
inc
sub
ja
push
sub
clc
add
mov
adc
rcll
push
pop
sbb
or
fidivs
sahf
sub
cmp
pop
cvtpi2ps
add
mov
sbbl
daa
or
xor
inc
mov
sub
ljmp
pop
dec
js
bound
jg
push
sbb
fsubrl
dec
mov
fldcw
ss
adc
lcall
and
sub
push
mov
leave
loopne
aas
shlb
and
xchg
and
sub
push
sub
push
mov
sbb
sub
adc
int
add
in
add
jae
in
pop
aaa
jnp
mov
xor
mov
daa
hlt
xor
or
int
pop
inc
jnp
popa
andb
cs
fdivr
cmc
mov
xor
xchg
negl
je
aam
inc
pop
je
adc
push
xor
pop
nop
std
lret
sbb
leave
ret
add
or
mov
mov
jecxz
pop
cmp
dec
mov
ljmp
ficomps
mov
ficompl
sbb
sbb
fwait
ds
add
jbe
imul
pop
rorb
enter
frstor
pop
pop
in
pop
pop
fcoms
xor
pop
clc
cs
mov
popa
int3
mov
xchg
xor
fcomps
xchg
arpl
scas
mov
outsb
jnp
imul
shll
lea
incb
pop
pushf
lcall
clc
add
in
xchg
sbb
mov
add
add
xor
or
ss
stos
jb
in
aaa
xchg
rolb
scas
mov
std
data16
testl
push
inc
jl
into
mov
int
rcl
push
mov
jmp
outsl
subb
fs
inc
mov
add
add
mov
xchg
jecxz
push
dec
push
mov
push
jmp
in
aad
lock
insl
notb
xor
push
ret
sbb
out
inc
xor
cmp
ss
mov
decb
mov
jb
sbb
xchg
fisubrs
add
loopne
mov
movsl
cmp
cmp
fnstcw
push
add
inc
xchg
sbb
adc
xchg
cmpsl
dec
sub
or
outsl
mov
or
push
and
movsl
pop
loop
mov
jg
lock
push
inc
pop
add
addr16
call
pop
andl
dec
sti
cmp
mov
je
or
mov
lock
movsl
imulb
xchg
dec
sub
add
mov
mov
es
test
aad
mov
adc
aas
cli
add
xor
movb
xchg
cmp
push
repnz
jbe
mov
int3
inc
inc
leave
rolb
fdivr
sbb
cmp
sbbb
pop
mov
push
mov
out
inc
xor
lods
test
movsl
and
fadds
cmpsb
lods
dec
fldt
scas
test
xchg
dec
xor
fiaddl
imul
xchg
lods
das
push
repnz
jo
mov
xchg
sbb
cmc
pop
pop
push
adc
rclb
mov
mov
pop
mov
scas
mov
mov
pop
mov
jecxz
mov
daa
dec
in
adc
jle
addr16
dec
loop
shrl
mov
sbbb
add
cli
xor
sbb
mov
lahf
mov
dec
mov
out
mov
xchg
add
push
ret
mov
dec
push
xor
xor
sti
inc
movsl
push
popa
or
pop
mov
xchg
insl
shll
mov
cmp
notl
inc
mov
fisubs
mov
adc
push
dec
xor
rorb
inc
lret
push
lea
xchg
js
mov
mov
shl
out
sbb
fsub
inc
xchg
push
cltd
bound
test
inc
or
xor
xor
xchg
mov
popf
mov
lock
xorl
dec
mov
xor
ja
popf
sbb
jae
push
insl
rclb
cs
jge
jae
bndstx
negl
inc
insl
adc
cmp
pop
cmp
test
adc
fdivrs
fwait
lret
adc
outsl
mov
xchg
adc
aad
nop
mov
je
jle
pop
mov
ss
or
jle
cltd
add
xor
mov
pop
xor
jbe
cli
lcall
xor
call
mov
sbb
cli
shll
pushf
mov
ret
rcll
dec
pop
jns
mov
in
rcll
aaa
or
mov
push
push
xlat
mov
push
pop
inc
negl
test
adc
ds
insl
aaa
mov
adc
add
push
inc
jmp
jmp
paddb
loop
scas
sub
mov
mov
movsb
mov
pop
loope
or
mov
xor
mov
push
in
ficompl
and
sub
insl
push
push
sbb
rol
cmpsl
cmp
mov
jp
cmp
dec
cwtl
imull
xchg
insl
fidivrl
mov
xchg
push
or
jmp
ja
sub
mov
cmp
or
mov
sti
les
sub
mov
dec
shl
fsubrs
adc
xor
xor
in
sbbb
sub
ss
out
fsubrs
out
sub
or
cli
mov
xor
add
cwtl
inc
xor
mov
dec
aam
mov
mov
xcrypt-cbc
cmpsl
adc
sbb
jl
call
push
lahf
inc
es
loop
xchg
jmp
sub
mov
mov
add
ss
out
mov
idivl
jne
mov
imulb
lods
push
adc
ds
pop
pop
jnp
mov
jle
cli
ret
xor
push
popf
mov
pop
scas
mov
inc
mov
xor
xchg
adc
pop
insb
pushl
inc
xorl
ret
mov
sbb
fucomi
fildll
push
mov
xlat
jmp
and
rorl
imul
push
imull
pushf
ror
test
cmp
cmp
cld
lret
xchg
and
imul
insb
push
xchg
icebp
ret
cwtl
into
push
mov
das
sub
adc
sub
cli
aaa
jbe
daa
adc
mov
pop
add
mov
neg
push
lods
cmpsl
popa
mov
mov
leave
mov
out
mov
mov
outsb
sbb
mov
daa
and
push
sub
or
cmp
aaa
mov
call
icebp
mov
rolb
out
loope
ja
int3
add
jecxz
loope
lret
add
test
adc
mov
int3
rep
jmp
pop
sub
jmp
or
jno
mov
jnp
ljmp
leave
dec
and
xor
mov
jne
mov
push
xchg
adc
popf
jne
jae
add
fmul
icebp
scas
outsl
mov
dec
inc
loopne
fistl
test
sub
pop
jge
sub
adc
pop
mov
sub
xor
xchg
sarl
jae
cltd
daa
pop
test
mov
push
mov
ret
sub
lods
add
or
jno
rclb
push
ds
mov
mov
pusha
aam
jg
or
sub
inc
push
in
mov
fldcw
rcll
xor
mov
inc
not
data16
movsl
push
xlat
mov
adc
pop
cmp
mov
pop
loopne
xor
adc
dec
inc
stos
xchg
lock
add
pusha
push
mov
pop
sub
mov
add
rclb
jno
arpl
ljmp
push
insb
insb
sbb
mov
pop
jmp
in
sub
pop
push
adc
lret
in
mull
or
xchg
push
jbe
loope
jno
xor
xor
fnsave
cs
dec
roll
jns
push
xchg
outsl
inc
popf
das
jge
jg
or
or
jl
orl
outsb
jg
or
mov
mov
lods
sbb
inc
lods
stos
clc
lea
ja
fidivrl
push
pop
cld
imul
repz
sbb
outsb
aaa
mov
lcall
mulb
mov
fld
int
rclb
clc
getsec
xlat
stos
das
jmp
xor
aam
mov
dec
fwait
mov
jb
int3
mov
std
adc
cmp
bound
test
pop
lret
mov
in
shrb
mov
jmp
jo
jecxz
push
push
and
mov
cmp
loop
aas
lea
fwait
or
push
xor
pop
cli
xchg
outsb
fwait
push
lret
outsb
dec
xchg
subl
xorb
cmp
outsb
pop
mov
push
inc
aad
jnp
pusha
fisubrl
cli
adc
or
loop
cmp
mov
jl
enter
sbb
jns
shrb
mov
mov
mov
jecxz
dec
lahf
dec
mov
add
fildll
pop
clc
rorb
pop
lods
addb
js
or
pop
arpl
outsl
cmp
mov
cmp
insb
push
lcall
pop
mov
shr
jno
sti
dec
stos
sub
pop
lods
xor
pushl
add
shrd
dec
add
scas
mov
jecxz
push
adc
add
pop
mull
loopne
loope
xor
or
cmp
push
adc
das
fistl
push
jge
int3
lcall
inc
fistl
push
popa
mov
pop
push
insb
push
arpl
mov
fsubs
mov
out
and
cld
pop
scas
pop
push
xorl
xorl
fucomp
push
xor
push
mov
scas
jecxz
mov
cmp
mov
add
call
push
and
and
dec
aad
mov
jae
xchg
cmp
xor
lds
mov
ljmp
mov
xor
cs
clc
fstpt
cwtl
mov
fsubr
in
inc
outsb
jne
add
fcomp
ror
fndisi(8087
lea
push
rolb
cmpsb
push
leave
pushf
pop
sbb
insl
push
pop
push
mov
or
or
lods
add
imull
shlb
push
clc
adc
and
xchg
icebp
xchg
sbbb
xchg
sub
sbb
bound
xchg
mov
jne
loop
mov
ja
mov
fnstsw
xor
pusha
mov
in
pop
xchg
loop
xor
lea
ficompl
xor
hlt
push
add
mov
dec
cmpsb
in
cmp
push
orl
data16
push
sbb
daa
cwtl
fdivrl
mov
xchg
outsb
mov
xchg
jge
push
call
mov
adc
scas
xor
sbb
ss
cs
sub
sub
sbb
stos
shrl
fimull
cmp
or
test
xchg
aad
lret
cwtl
shrb
insb
sub
mov
sub
cmp
push
mov
popf
rcrl
push
sbb
sbb
pop
imul
mov
ss
sbbb
scas
dec
rolb
pop
push
loopne
or
loope
test
out
cmpl
imul
test
xchg
scas
popa
jns
lds
sub
cs
je
ljmp
sti
fs
sub
jno
lcall
call
mov
xchg
es
push
cmp
mov
xchg
imul
out
lods
mov
cld
sbb
sub
xor
cltd
sbb
push
fdivs
out
fadd
push
inc
sub
lds
jl
stos
fcmovnu
and
daa
fcompl
roll
in
pop
mov
xchg
and
mov
xchg
in
add
jb
add
and
push
out
test
negl
int
pop
ljmp
mov
pop
fisttpl
ja
add
add
inc
xlat
addb
ja
in
into
pop
jg
daa
mov
or
jge
out
das
xor
imul
or
add
mov
or
push
adc
ja
insb
in
sub
inc
push
pop
add
jnp
filds
sbb
mov
lahf
adc
add
push
popf
out
sub
or
insb
in
xor
scas
pop
mov
xchg
test
add
mov
ss
xor
add
setle
jbe
pop
xor
add
iret
mov
or
ljmp
xlat
cmp
cmp
dec
ja
negb
outsl
add
xor
scas
jne
lea
sub
popf
sbb
mov
fistl
xchg
aas
aas
or
mov
adc
bound
adc
push
fwait
push
repz
dec
scas
mov
movb
push
syscall
loopne
add
pop
jae
pop
inc
hlt
sbb
cmp
mov
aam
sbb
jecxz
sbb
push
in
mov
push
add
jbe
outsl
push
pop
jae
dec
and
loope
sbb
scas
or
push
in
sbb
cmp
add
dec
in
pushf
outsl
testl
cmp
insb
cmp
xor
mov
cmp
adc
bound
pop
xchg
adc
aad
jp
xchg
and
movsb
jb
xchg
push
fwait
daa
add
repz
adc
xor
ffree
movsl
cmp
sub
cmp
fstpt
mov
pop
add
rcll
ja
mov
push
outsl
or
push
xchg
xchg
jmp
into
push
jmp
adc
and
rorl
add
add
loopne
sarl
or
or
cmp
cmp
mov
fildl
inc
add
int
stos
cmp
mov
outsb
sub
jecxz
lret
sarb
in
in
cmp
mov
mov
daa
cmp
sub
or
adc
fldt
aaa
pop
add
stos
nop
or
lret
aam
mov
out
add
or
push
outsl
sub
dec
repz
jg
and
arpl
fcomp
dec
sub
pop
add
push
scas
xlat
jge
addr16
mov
mov
es
stos
pop
xor
xlat
or
push
mov
add
js
push
cmp
or
or
lods
dec
and
addl
fidivrs
pop
add
add
pop
or
sbb
imul
iret
or
jae
push
fstps
add
js
fbstp
mov
push
jnp
adc
jnp
adc
ret
in
insb
dec
adc
lret
sbb
jge
xlat
or
push
lret
add
arpl
dec
int3
mov
add
or
adc
fs
ss
sbb
xlat
rcr
cmp
add
add
cmpsb
add
icebp
into
push
pop
push
pop
push
andl
xchg
mov
popl
mov
xchg
lahf
and
cmp
mov
repz
rcll
cmp
sbb
add
add
fincstp
int
or
push
push
adc
fidivl
divl
fdivrs
addr16
inc
xor
sbb
cltd
sbb
push
mov
fcoms
jge
and
dec
jnp
sbb
out
addr16
aas
cmp
mov
adc
adc
lret
outsl
insl
sbb
push
sbb
sub
push
sti
pop
xchg
movsl
popa
ret
push
or
rcrl
adc
xorb
aad
push
ud2
test
fimuls
fisttpll
pop
xor
xchg
mov
and
dec
sbb
and
and
pusha
or
sbb
popa
mov
rorb
repnz
push
or
and
insb
dec
fdivs
dec
sub
fists
jae
loop
xor
into
pop
popa
daa
rorl
xchg
mov
and
ds
sub
adc
ror
lock
mov
nop
aaa
fdivrl
cmp
mov
and
lds
sub
mov
es
xor
or
fadds
test
lahf
dec
mov
adc
inc
sbb
mov
sub
xchg
jae
push
jp
test
jnp
addb
inc
ret
int3
mov
popa
xchg
mov
es
mov
nop
cmp
cmp
xchg
push
daa
mov
mov
mov
mov
sub
jbe
mov
into
sahf
or
inc
sub
or
sbb
into
sbb
lret
dec
ja
sbb
fbld
and
xchg
add
mov
mov
push
jbe
mov
les
and
fcomi
lea
and
jge
cmpsb
or
lea
and
pusha
das
jge
aaa
jbe
dec
insb
adcb
jnp
push
hlt
ficomps
or
adc
or
mov
mov
sub
popf
push
sub
sbb
sub
jnp
cmp
cmc
push
in
and
rorb
or
hlt
les
xor
iret
insb
add
fildl
shlb
cmp
adc
aas
das
fcmove
clc
stos
or
test
les
or
or
andl
test
or
sub
add
or
mov
inc
jp
popa
adc
sahf
sahf
and
or
fs
pop
movsb
xchg
sbb
jmp
xchg
ficoml
mov
out
pop
mov
xchg
loope
test
popl
pop
push
rcrb
xchg
mov
popa
out
push
xor
jne
xchg
cld
add
retw
fcoms
mov
or
test
inc
inc
inc
rclb
ja
mov
jl
dec
filds
pusha
and
sub
dec
jg
cmp
cmp
pop
out
lods
fsts
or
or
movsb
fnstenv
arpl
cmpsl
sbb
pushf
cmp
jl
and
jp
and
outsb
adc
pop
in
jge
and
pop
addr16
adc
mov
adc
daa
mov
or
xchg
sub
scas
test
mov
pusha
out
outsb
insl
notl
mov
inc
lds
push
and
pop
jecxz
sbb
test
fcom
das
fsubs
mov
mov
jp
jbe
or
add
adc
mov
int
pop
push
ja
sub
jb
mov
mov
jle
fnstcw
inc
mov
lock
in
insb
ss
xchg
dec
push
sub
jbe
outsl
fcomps
dec
mov
push
pop
dec
mov
sub
adc
fnstcw
mov
fwait
arpl
flds
mov
or
mov
loope
es
adc
xchg
mov
mov
mov
fcmovnb
mov
adc
gs
insb
dec
cwtl
or
push
dec
js
scas
adc
and
dec
out
or
scas
add
fstpl
scas
and
ret
stos
xchg
pop
push
jg
push
out
popf
mov
test
lods
pop
iret
hlt
dec
bound
inc
jmp
lods
cmp
or
or
mov
adc
sarb
notb
sbb
leave
jl
lods
sbb
and
add
jo
rclb
push
cmp
push
pusha
sbb
sti
bound
add
mov
sub
jo
pop
xchg
ss
jnp
add
and
inc
or
push
push
loop
popf
jmp
pop
pop
leave
mov
lret
jne
adc
push
dec
xor
mov
xchg
aaa
insl
imul
cli
and
lahf
into
cwtl
popf
cmc
xchg
cltd
jecxz
stos
testl
popf
jl
lds
aas
and
push
and
ficomps
aad
and
pop
mov
pop
ja
mulb
movsb
loop
or
sub
rcr
sub
or
lods
sarl
sub
cmp
push
shr
xor
into
push
int
or
icebp
inc
push
ja
loope
push
repnz
es
add
sub
xorl
push
dec
mov
adc
adcl
sub
or
mov
lods
aaa
stos
cmp
cli
js
ret
pushf
cmp
sbb
notb
cmp
clc
or
insl
fxch
dec
mov
scas
or
jns
adc
pop
lret
addr16
and
and
xor
dec
shl
movsb
and
pop
pop
jb
rol
push
and
and
dec
aas
xor
movsl
xchg
add
flds
stc
inc
pop
movsb
fcomps
lea
sbb
push
and
xor
sub
add
push
jae
or
jbe
sbb
and
popa
xor
or
mov
neg
inc
rorl
inc
data16
mov
fcmovnb
pop
push
ret
push
xlat
in
inc
mov
lods
sbbb
xor
ja
cmpsl
pop
mov
xchg
jae
or
xlat
jb
add
jo
insl
cmpl
adc
mov
lds
icebp
cmpb
shl
sub
dec
in
adc
adc
xchg
imul
lock
pop
sbb
inc
add
or
lock
into
fidivs
and
cmc
and
adc
or
dec
dec
data16
sbb
add
mov
pop
adc
aas
sub
push
cmp
adc
dec
xlat
fnsave
pop
mov
jle
ficoml
jl
orl
mov
or
nopl
dec
fmuls
mov
cmp
inc
add
xor
int
addr16
dec
aam
and
dec
cmp
mulb
inc
and
and
xchg
test
sub
adc
mov
inc
mov
push
fisubs
in
adc
dec
rcrl
cmp
add
and
insb
adc
mov
xor
out
mov
pusha
and
daa
int
inc
inc
cmp
inc
inc
movsb
and
push
movsb
addr16
jne
push
and
popa
sarb
mov
mov
arpl
push
add
in
jnp
and
xchg
in
add
or
adc
ret
ret
enter
inc
repz
sti
and
ret
sbb
lret
jo
add
cmp
push
mov
sub
push
test
loopne
sbb
ret
xor
dec
testb
xor
ja
mov
test
outsb
xchg
and
aas
sbb
lods
mov
lcall
cmp
add
frstor
or
and
sbb
lods
addr16
and
inc
xor
aaa
fs
sbb
movsb
mov
out
sbb
pop
es
fadds
mov
popa
sub
testl
jmp
sbb
jo
fnstsw
es
xlat
cwtl
inc
mov
push
cmp
add
lods
stc
adc
pop
mov
add
jns
cld
sbb
repz
syscall
lea
pop
shlb
test
mov
jne
adc
add
aad
mov
xchg
ret
bound
bound
rcrl
sub
mov
xchg
xchg
decb
and
es
mov
add
lock
add
push
add
mov
addr16
dec
add
pop
pop
jle
mov
pop
data16
xchg
xchg
add
inc
sti
jge
mov
daa
das
jb
or
or
xor
mov
cmp
lea
in
insb
pop
adc
push
cmp
sbb
cmp
test
pop
lock
adc
sub
pop
add
and
pop
jecxz
mov
sub
add
fincstp
sbb
aaa
or
add
ret
or
and
jae
fs
ja
cmpsl
add
pusha
add
cwtl
add
push
shlb
mov
xor
jge
ret
add
inc
push
mov
xor
mov
jnp
add
daa
add
push
subb
inc
dec
inc
sarl
insl
lds
sbb
xor
inc
push
add
js
ss
push
push
hlt
dec
jo
call
push
sbb
inc
int
push
js
push
dec
push
mov
mov
push
inc
or
fcomps
faddl
dec
and
dec
push
dec
pusha
or
or
faddl
add
push
jg
ja
sbb
jae
sbb
cmp
mov
js
bound
mov
add
nop
cmp
fisubs
jp
js
inc
add
push
pop
ja
jns
mov
mov
data16
js
or
and
sub
pop
testl
pop
idivl
sbb
add
jnp
fsubrl
repz
and
sbb
adc
lock
outsb
loop
or
jg
pop
fistpl
push
jg
dec
es
mov
pop
cld
jae
js
dec
jl
xor
test
cli
aaa
xchg
insb
in
test
andb
and
sti
push
jle
adc
testb
add
push
lcall
jge
mov
and
dec
push
dec
pop
mov
sbb
add
ja
adc
add
mov
push
inc
xor
andb
or
mov
jle
sub
outsb
gs
xchg
inc
dec
addl
inc
add
jb
outsl
in
jo
jb
stc
add
test
in
dec
sti
div
cli
lock
pusha
push
cld
data16
xchg
arpl
test
orb
xchg
mov
push
sbb
adc
jl
icebp
push
outsl
nop
adc
sub
sub
and
addb
xchg
leave
int
in
or
ja
sub
add
xor
outsl
pop
adc
jns
adc
test
fmuls
jnp
dec
xchg
inc
adc
xchg
mov
pop
dec
dec
js
adc
dec
mov
sbb
add
movsb
sbb
jno
in
or
gs
adc
ret
ja
daa
fisubl
jae
inc
ds
adc
sbb
mov
cwtl
xor
cmp
xchg
arpl
sbb
leave
add
arpl
cmp
pop
xchg
arpl
in
add
es
jno
dec
lcall
xchg
fwait
js
popl
outsb
adc
adc
pusha
mov
scas
popa
adc
pop
mov
test
adc
hlt
adc
nop
mov
xchg
lea
jbe
sbb
xor
movsb
ja
jl
jle
cs
adc
mov
mov
jbe
mov
sbb
add
in
cmp
icebp
jb
sbb
pop
push
push
xchg
add
xchg
jbe
jnp
inc
jne
inc
insb
inc
in
dec
and
hlt
jne
mov
jg
insb
xor
and
sarb
in
inc
in
inc
js
push
jecxz
mov
inc
adc
lcall
fisttpll
scas
inc
adc
mov
cmpsl
mov
push
push
or
xchg
in
fimull
inc
push
outsl
add
test
add
orl
jg
fildll
addl
sbb
and
push
jg
dec
pop
scas
inc
scas
mov
jg
mov
outsb
dec
push
push
lahf
pop
xchg
xchg
les
scas
add
mov
mov
xchg
mov
and
sub
dec
and
shll
rolb
sub
andl
dec
cmpsb
rcll
dec
inc
fwait
mov
test
sarb
sub
loop
jecxz
jnp
jns
mov
jp
or
and
adc
sahf
mov
sub
sbb
push
imul
pop
sbb
or
test
pop
and
sub
rolb
lret
sbb
push
int3
arpl
cmp
dec
and
popa
dec
in
jge
rorb
out
outsl
leave
or
imul
outsb
or
dec
cli
add
jp
sub
push
xchg
xlat
xor
testl
popa
jns
add
add
ret
sub
addw
inc
lds
clc
add
inc
jb
cmp
xchg
les
mov
mov
fists
loope
inc
push
popf
movb
call
xor
xorl
jl
jnp
xchg
pop
inc
or
test
inc
adc
pop
push
aad
aaa
push
mov
fldl2e
test
sub
pop
ss
in
daa
and
dec
cmp
repnz
add
cld
jl
lahf
adc
push
xor
inc
add
sub
push
push
cltd
xor
sbb
fs
pop
popa
mov
cltd
lods
mov
cmp
mov
ss
sub
outsb
mov
pushf
mov
pop
and
jnp
in
sub
mov
mov
xchg
daa
push
cs
xor
mov
lods
jne
xchg
sbb
fiadds
add
int
adc
or
arpl
dec
out
addl
inc
and
jns
dec
mov
enter
mov
rorl
push
js
outsl
dec
and
ret
fiaddl
daa
xor
adc
imul
stos
sub
push
push
pop
lods
js
inc
pop
outsb
lods
repz
test
hlt
pop
xlat
push
mov
daa
jg
movsl
mov
sub
cmpl
sub
push
push
inc
ret
xor
dec
xchg
popf
lods
add
dec
or
sub
push
pop
dec
sahf
fcomp
cmpsl
inc
andl
add
jnp
fs
sti
push
lret
mov
mov
incl
cmp
in
sti
cltd
and
js
add
mov
sub
adc
dec
dec
push
push
cmp
adc
add
jne
testl
sbb
pop
rcrb
filds
inc
push
pop
fcmovnu
outsb
push
gs
ja
addr16
inc
imul
cltd
arpl
aam
jne
inc
lcall
cmp
cmovbe
iret
das
push
jno
sti
lcall
adc
fs
ret
and
inc
sbb
inc
loop
mov
shlb
mov
sbb
dec
and
and
pop
xlat
push
fsubs
cmp
cmpsl
inc
inc
inc
aas
in
jge
push
sub
and
dec
inc
push
push
pop
inc
fs
rcr
popa
push
inc
test
lods
and
fiaddl
outsb
dec
jo
and
push
daa
push
jge
div
fdivp
bound
loope
loope
adc
xor
cmp
fs
test
inc
loope
int
or
js
fldl
inc
mov
and
pop
jno
jo
xor
ja
push
daa
ret
jl
das
inc
mov
push
inc
arpl
push
rcrl
or
mov
push
daa
mov
loope
je
mov
add
push
outsb
dec
inc
dec
sbb
dec
pop
or
imul
test
cli
addb
push
dec
mov
data16
inc
das
popa
mov
push
out
pop
aaa
mov
add
push
sub
push
orl
fisubrs
xlat
sbb
inc
push
sub
jo
or
das
mov
push
scas
push
repz
jo
xchg
push
mov
push
add
push
setge
fcoms
inc
addb
cmp
addr16
mov
or
push
sbb
imul
dec
rclb
dec
pop
jae
push
dec
push
mov
jo
mov
push
int3
add
xchg
cld
jb
jge
push
or
xor
or
cmp
orb
sub
sti
sbb
mov
pop
lods
inc
push
mov
push
push
sbb
dec
arpl
outsb
adc
in
call
ljmp
dec
adc
sub
push
mov
jo
outsl
push
daa
adc
pusha
fcomp
shll
mov
mov
mov
ret
inc
dec
mov
mov
jmp
and
pushf
add
mov
adc
inc
adc
pop
lahf
inc
pusha
imul
sub
dec
jmp
mov
xchg
mov
add
xchg
pop
idivb
sbb
mov
push
sbb
sub
mov
mov
and
and
xor
rclb
xor
xor
inc
mov
enter
stos
add
gs
daa
pop
adc
mov
sub
and
xchg
call
lret
inc
arpl
adc
fsubr
or
cmp
pop
add
xor
orl
add
add
inc
pop
mov
daa
add
add
add
or
pushf
add
sbb
sbb
inc
addr16
xlat
cmpb
mov
and
mov
or
fbld
int
sbb
mov
mov
aad
jne
imul
insb
inc
movsl
adc
and
shrl
push
dec
mov
jp
pop
add
mov
pop
push
sbb
sbb
insl
icebp
cmc
ss
or
sub
lods
movsl
push
adc
inc
xlat
xchg
pop
cmpsl
sbb
aaa
jbe
or
sbb
pop
insb
xchg
jnp
xchg
inc
inc
hlt
mov
add
mov
mov
or
scas
add
sbb
addl
dec
add
sbb
jae
and
mov
addr16
bound
fadds
mul
dec
cmp
add
pop
add
dec
stos
dec
dec
bound
or
or
mov
sbb
pop
sub
mov
push
dec
gs
or
cmp
and
es
aas
sub
add
xor
pop
xor
add
lods
daa
call
add
outsl
pop
inc
mov
nop
mov
mov
es
inc
loopne
dec
dec
pop
push
aam
sub
fcoml
jmp
inc
mov
jo
xchg
adc
sbb
push
addr16
loopne
add
test
call
push
add
cmp
push
insl
xor
and
xchg
dec
mov
inc
fimuls
lods
jnp
sbb
or
or
inc
push
or
mov
inc
dec
or
mov
or
in
xchg
push
and
dec
in
push
jnp
mov
mov
sub
sub
addb
or
fdivp
mov
push
mov
in
testl
cmp
cmp
nop
inc
es
daa
clc
mov
mov
sub
mov
xchg
dec
push
jl
das
mov
outsl
and
mov
or
mov
mov
adc
adc
add
scas
repz
jno
sbb
push
pop
das
xor
rcll
dec
stos
push
arpl
insb
mov
lds
inc
sarb
imull
sbb
mov
jge
lret
push
pop
insb
sub
inc
dec
jae
jbe
sub
xor
pop
mov
bound
mov
push
cmp
dec
or
dec
or
dec
mov
sahf
dec
data16
arpl
or
add
xchg
xchg
call
inc
jae
mov
das
movsl
inc
cmp
cli
dec
scas
adc
inc
rcrb
mov
mov
or
addb
sbb
call
sub
insb
or
sub
fmul
xchg
pop
adc
test
and
popa
neg
inc
pop
sub
mov
and
or
or
or
and
and
popf
or
mov
inc
int3
adc
lret
mov
mov
lret
lcall
cmp
mov
mov
mov
add
jb
test
inc
add
add
add
inc
xor
or
inc
add
or
add
or
mov
jae
add
or
cld
jg
inc
add
add
jb
outsb
inc
test
push
mov
xor
enter
cmp
sbb
jg
or
cmovge
jne
neg
sbb
push
adc
jb
jbe
stos
loopne
je
dec
adc
insl
jo
je
jb
popa
insl
and
fwait
or
adc
sbb
cmp
pop
inc
jo
or
or
xchg
push
inc
or
insb
arpl
insb
in
push
imul
and
imulb
stos
bound
dec
inc
imul
mov
sbb
push
imul
sahf
xchg
test
adc
stc
mov
imul
inc
push
je
imul
pusha
imul
ljmp
lock
add
mov
add
add
xor
push
sbb
sbb
pop
xor
adc
add
pop
sbb
jns
lock
or
cmpsl
or
add
sbb
icebp
mov
add
mov
inc
sbb
add
pop
inc
sub
add
mov
add
sbb
xor
add
inc
or
and
int
or
fnstenv
adc
in
into
ficoms
cs
adc
push
add
add
sub
punpcklbw
add
inc
dec
inc
inc
pop
testb
add
and
fnstenv
inc
loopne
sti
loop
ss
jb
jbe
rolb
or
inc
add
add
imul
add
push
daa
add
fstp
test
pusha
daa
add
push
jae
es
inc
push
daa
add
adc
rolb
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
