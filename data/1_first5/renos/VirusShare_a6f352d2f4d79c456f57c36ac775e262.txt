jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
popa
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
mov
cmp
je
jmp
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
xor
divl
test
jne
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
mov
cmp
je
jmp
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
mov
cmp
je
jmp
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
sub
mov
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
push
mov
mov
xor
call
mov
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
mov
mov
mov
call
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
push
mov
mov
xor
call
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
lea
mov
push
jmp
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
mov
mov
movl
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
out
mov
not
mov
inc
out
mov
xor
mov
cmp
mov
sub
mov
cs
mov
sbb
mov
add
mov
adc
mov
push
call
mov
in
arpl
sbb
hlt
jge
or
push
aam
mov
jge
or
loope
fsubs
hlt
jge
or
rcll
arpl
sbb
push
loopne
mov
jge
or
call
arpl
sbb
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
push
mov
hlt
ss
std
push
mov
hlt
ss
jp
or
or
push
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
push
mov
repz
pmuludq
hlt
jl
or
xor
mov
push
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
push
mov
mov
pmuludq
hlt
push
cld
push
mov
ret
xor
std
push
mov
ret
and
cld
push
mov
incl
add
repz
pmuludq
hlt
push
std
push
mov
ret
xor
cld
push
mov
jp
add
jl
adc
xor
std
push
mov
jp
add
ret
and
cld
push
mov
jl
add
ret
xor
std
push
mov
jp
adc
push
mov
ret
xor
cld
push
mov
incl
add
ret
and
std
push
mov
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
push
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
movl
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
mov
call
mov
cmpl
je
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
cmp
je
mov
subb
mov
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
xorb
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
incl
mov
cmp
jne
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
movb
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
mov
pop
ret
push
mov
add
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
call
call
call
test
jne
mov
jmp
movw
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
call
lea
mov
pop
ret
push
mov
add
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
push
call
test
jne
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
push
push
push
call
mov
pushl
pushl
call
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
mov
pop
ret
add
add
ja
add
add
data16
add
add
add
add
outsb
add
add
and
add
add
subl
je
mov
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
mov
mov
lea
call
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
ret
nop
ret
lea
or
addr16
xor
push
sub
fisubrl
sub
sbb
push
fs
add
aas
repnz
add
insl
adc
mov
and
add
add
xor
loope
add
outsb
add
in
les
das
add
cmp
cli
jnp
and
add
xchg
fucompp
xor
xchg
add
iret
dec
into
outsb
loop
jge
jmp
fldcw
aas
mov
movsl
fidivrl
pop
add
xor
mov
push
add
mov
out
lret
dec
dec
add
outsb
mov
xchg
nop
add
pop
cmp
add
add
add
aas
pop
add
ret
dec
pop
movsl
add
imul
add
mov
add
int3
xor
mov
add
inc
enter
cwtl
subl
mov
addb
mov
cmp
dec
xor
xchg
rolb
dec
add
adc
outsl
sub
lcall
push
js
dec
cmc
fildl
or
and
xchg
jl
add
jbe
inc
jbe
jnp
out
add
jno
add
in
and
fucomip
cmpsb
mov
dec
mov
xchg
jecxz
cs
nop
cld
ds
test
sub
add
add
mov
popl
add
cmpsb
fidivl
sbb
or
pop
add
enter
xlat
inc
cmpsb
xor
pop
cli
xchg
jno
inc
push
push
and
mov
pusha
loopne
add
inc
enter
jge
fdivs
hlt
xor
outsl
lods
add
inc
add
dec
add
mov
add
add
add
add
add
adc
cmp
outsb
jge
aam
xchg
mov
xor
add
add
sbb
in
push
add
enter
xchg
inc
or
add
add
mov
mov
add
sbb
add
sbb
jns
add
sub
pusha
xchg
rcr
push
add
add
add
inc
xchg
add
xchg
fistpll
cmp
ficoml
add
add
das
jl
add
add
cmp
mov
add
add
sbb
test
ret
iret
and
lret
sti
jle
xor
loop
mov
clc
mov
add
jle
mov
pop
mov
add
add
add
add
aad
sub
add
add
jb
dec
or
add
fwait
add
add
add
jp
pop
add
adc
or
dec
loop
loop
add
rcl
add
test
outsb
add
add
add
rcrb
clc
fldpi
add
cmpsb
jae
add
add
push
inc
repz
push
cli
cli
adc
cli
popf
dec
add
or
les
pop
data16
mov
and
popf
inc
add
add
mov
iret
sub
dec
add
lock
inc
add
mov
mov
test
lret
enter
roll
jg
pop
add
add
mov
add
add
add
mov
insb
add
cli
add
cmp
and
nop
add
adc
iret
push
sub
add
add
xor
push
jmp
je
int
add
add
jecxz
jne
leave
mov
add
das
clc
push
jp
sarb
adc
gs
add
clc
and
ret
ret
inc
xchg
mov
sub
imul
seto
jp
and
mov
or
xor
fwait
sbb
xchg
add
push
cmpsl
out
fstl
sub
adc
int
pushf
fwait
xor
mov
sub
fcompl
jp
in
mov
lds
mov
loop,pt
dec
in
jne
movsb
js
adc
hlt
loope
add
pop
xchg
xchg
xor
mov
lcall
test
mov
stos
and
and
fs
jnp
aam
jle
push
sub
cs
fs
aad
fwait
iret
loope
test
push
scas
pop
or
mov
dec
push
or
out
popf
adcl
inc
cmc
or
xchg
mov
shrb
dec
nop
scas
scas
mov
cli
adc
push
jp
adc
hlt
repnz
cmc
arpl
add
push
lahf
in
or
push
fcmovne
jle
pop
push
stos
out
fmulp
xor
lds
jecxz
nop
xchg
or
cmc
mov
and
and
movsb
and
out
nop
xchg
out
jbe
jle
jge
xor
daa
daa
int
leave
cmp
arpl
jno
push
aad
or
pushf
dec
sub
push
jecxz
enter
jo,pt
arpl
fcomps
subl
lods
iret
inc
mov
andl
xor
sbb
pop
jg
lds
cmp
sub
fsubr
cmp
movsl
adc
sbb
sbb
orb
sbb
cmp
add
push
xor
popf
je
fiaddl
dec
pop
lods
out
inc
js
rolb
mov
or
mov
push
inc
shlb
sub
mov
and
mov
lods
cmp
nop
out
mov
mov
rcll
push
jno
arpl
jno
jnp
test
repz
lret
pop
ror
int
push
or
xor
sahf
xlat
inc
movsl
test
pop
xor
outsl
dec
mul
fnstenv
push
adc
dec
data16
jecxz
sbb
pop
fmuls
mov
cli
or
inc
xor
cmp
ficomps
adc
mov
daa
dec
xor
jecxz
insl
insl
aam
in
mov
imul
add
stc
lods
cmpsb
pushf
dec
mov
mov
sub
fwait
cmp
inc
out
mov
sti
pop
inc
jmp
xor
std
dec
xchg
cmp
fldcw
xor
les
and
sbb
mov
mov
rcrl
dec
adc
dec
xlat
pushf
inc
aaa
jl
sbb
out
pusha
mov
aad
in
daa
nop
push
aad
mov
ret
and
add
je
pop
dec
jecxz
xchg
sbb
push
xlat
jge
cmpsl
frstor
mov
cmp
dec
test
in
fistpl
pushf
xlat
inc
fwait
inc
enter
je
in
scas
mov
pop
jnp
and
cmp
aaa
nop
sbb
std
mov
decb
mov
mov
cld
popf
add
push
fwait
mov
or
stc
lock
pop
adc
sbb
test
mov
adc
jle
push
es
pop
insl
shlb
xchg
sahf
imul
push
ficoml
popa
jmp
cwtl
fnstcw
jl
shll
out
aad
dec
mov
lods
cltd
xchg
out
push
test
out
mov
push
push
push
cmp
ds
dec
mov
xchg
fldenv
shrl
pop
dec
fwait
jb
mov
pusha
rcll
lods
lds
add
xor
outsl
xor
enter
xor
xchg
adc
loop,pn
out
add
not
dec
insl
cmpsl
and
or
push
inc
fwait
dec
dec
movsl
push
test
xchg
aas
add
jmp
bound
test
movsl
inc
add
jmp
adc
mov
mov
mov
call
movsb
mov
es
sbb
mov
sahf
xlat
sti
dec
sub
inc
icebp
mov
xchg
xchg
sti
dec
jmp
pop
cmp
addl
out
sbb
clc
or
rcll
adc
and
sub
test
mov
jle
popf
shl
xor
es
inc
mov
ret
mov
inc
cmp
inc
and
jae
sbb
push
int
pop
popf
stos
int
mov
je
lret
test
xchg
loop
ficompl
mov
scas
adc
test
pop
push
push
adc
mov
fdivrs
jnp
cmp
fidivs
rorl
push
pop
jbe
or
cmp
int3
jp
repz
xor
inc
dec
adc
stos
or
scas
aam
sahf
and
test
cmp
stos
movsb
lods
fcoml
push
fistps
dec
jge
push
dec
daa
int3
adc
cmp
adc
jl
xchg
clc
dec
lcall
xor
out
icebp
lahf
and
lods
push
stos
and
test
outsl
dec
int3
inc
inc
leave
push
cmpsb
cmp
push
in
mov
mov
pushf
loop
pop
mov
call
cmpsl
sub
int
cmp
jae
ds
pop
sub
aaa
out
push
js
xchg
andb
sbb
lret
dec
add
dec
jle
icebp
popf
lret
aam
cmp
push
adcb
cmpsl
jle
inc
xor
push
cwtl
shl
fsubl
lret
cmpsl
sub
cmpsl
jb
lret
rcrb
mov
xchg
mov
mov
ds
pusha
or
je
push
int
movsl
lods
sub
nop
imull
inc
jecxz
pop
ret
add
push
fldcw
popa
popa
pushf
sahf
jp
cld
test
rcl
adcb
push
outsl
sub
loopw
lahf
mov
fs
or
stos
ss
push
xchg
stos
sbb
aas
cmpsl
jne
dec
adc
or
xlat
into
sahf
jo
cmc
pop
clc
jle
sahf
sub
pop
mov
cmp
rorb
unpcklps
fnsave
add
cmp
sti
arpl
xlat
lods
cmp
sub
je
pop
scas
insl
in
cmp
mov
cmp
loopne
or
dec
lock
xor
pop
push
nop
repz
cmpsl
dec
xchg
scas
add
lds
push
pop
push
pop
adc
mov
bound
sbb
jns
jnp
adcl
add
aaa
dec
lds
scas
jecxz
ja
push
sbb
rcrb
sbb
cmp
push
and
push
pop
fcmovne
pop
push
pop
ret
and
and
inc
mov
addl
and
rol
roll
popl
dec
xchg
xor
lret
js
mov
pusha
cld
enter
push
inc
sub
sub
cwtl
lock
xor
pop
xor
psrld
stc
sub
aam
mov
ret
or
insl
mov
dec
lcall
ljmp
jmp
mov
lahf
addr16
and
test
add
cltd
int
bound
mov
mov
out
mov
mov
mov
sbb
mov
pop
imulb
test
jnp
inc
xchg
insl
fsubr
push
mov
lcall
cmp
xor
aad
or
std
inc
xor
cli
mov
jne
or
test
jge
ja
jecxz
dec
pusha
cli
inc
stos
scas
sbb
push
and
dec
dec
int3
add
mov
dec
jecxz
mov
push
jns
sbb
in
out
lret
sar
mov
sbb
mov
lock
jp
xchg
push
mov
nop
jl
jae
and
adc
ds
add
sbb
xchg
test
fstl
loop
out
mov
sub
jns
call
stos
push
sub
out
nop
insb
lock
jle
fidivrs
pusha
or
cmpsb
iret
lahf
mov
ret
xor
jnp
pop
inc
cs
daa
jae
ret
nop
mov
mov
repz
xlat
fisubl
inc
xchg
cmp
cmp
scas
je
mov
adc
ret
sar
repnz
leave
add
out
arpl
pusha
addb
fwait
or
loopne
mov
sbb
and
add
mov
fs
neg
adc
fadd
test
rol
subb
clc
jecxz
sub
movsb
aaa
and
push
cs
add
jge
jg
sbb
enter
mov
inc
jo
jno
in
jl
ficompl
push
test
cmpsb
cwtl
jo
pop
stc
lahf
inc
xchg
mov
test
cmp
icebp
inc
aad
xchg
cmpsb
mov
leave
adc
xchg
aas
or
push
dec
in
loope
lahf
sbb
xchg
jp
jb
std
xor
aas
and
mov
push
jne
push
sbb
addb
shll
rol
pusha
push
icebp
pop
sti
mov
js
cmpsl
pop
mov
out
hlt
enter
divb
sub
lods
xchg
adc
jne
adc
cwtl
mov
mov
sub
mov
repnz
out
mov
push
ja
fs
jg
sub
lret
fnstcw
rol
mulb
mov
jp
nop
sbb
sahf
sbb
xlat
subb
xor
mov
mov
adc
jmp
cmp
and
out
daa
lock
jb
in
and
insl
or
add
adcl
pop
stos
fnstcw
adc
pop
pop
adc
arpl
add
jns
decw
lods
je
cmp
mulb
mov
mov
movsl
push
or
fstps
sbb
icebp
out
fcomps
fwait
inc
pop
ljmp
xor
pushf
xchg
jno
dec
sbb
add
mov
xlat
pop
rorl
in
mov
jmp
xor
cs
addr16
dec
aaa
nop
int3
je
aas
testl
dec
cmp
shlb
add
push
fwait
jo
push
rcrl
lea
icebp
dec
call
cld
jp
mov
popf
cmpl
leave
icebp
pop
data16
xchg
mov
aam
mov
adc
mov
jge
dec
rcl
sub
divb
pop
and
lret
mov
aaa
jb
cld
repz
shl
mov
cltd
and
out
adc
shl
popl
jae
mov
pop
rorb
xorb
sbb
jecxz
sbb
stos
ljmp
jecxz
pusha
sub
dec
inc
ljmp
sbb
orl
jg
dec
cltd
add
fwait
test
andl
ret
fisttpll
icebp
aam
out
cld
mov
sbb
xlat
lods
rcrl
pop
jns
mov
cmpl
push
arpl
lds
dec
xchg
scas
or
inc
loopne
popa
jg
mov
js
stos
dec
jae
jns
fdiv
data16
push
pop
dec
push
fwait
iret
inc
inc
loopne
or
push
mov
out
jg
add
mov
stos
cltd
bound
sbb
in
mov
xchg
mov
nop
mov
or
mov
pop
into
mov
ror
mov
mov
sub
mov
jl
push
dec
repz
jne
lods
adc
fistpll
xchg
xor
nop
sbb
xchg
repnz
mov
out
jo
sub
je
mov
mov
pop
and
repnz
fidivrs
leave
and
adc
in
pusha
cmp
dec
leave
iret
mov
ret
pop
pop
mov
movb
jae
lods
pushw
push
lahf
cld
popf
clc
in
mov
jb
iret
ficompl
xor
sbb
repz
imul
scas
xlat
fcoms
push
out
xlat
adc
jnp
mov
jle
jns
ja
add
sarl
arpl
es
inc
fsqrt
dec
or
pop
push
pop
aaa
fcoml
dec
or
push
add
mov
push
lret
daa
pop
xchg
leave
and
inc
shl
sub
dec
jge
cmp
sbb
ret
push
jge
sbb
and
outsb
sbb
lock
cmp
and
mov
js
orb
addr16
push
es
jo
dec
sub
push
into
test
push
add
and
cmpsb
inc
add
in
sub
cwtl
pop
cmp
les
arpl
sub
xor
cmp
cmp
lea
insl
mov
rolb
mov
ds
pop
pop
and
imul
jno
xor
int
inc
inc
popa
fdivl
push
mov
aaa
outsb
adc
daa
rclb
leave
jg
xchg
jmp
repz
out
mov
inc
inc
mov
mov
dec
push
jp
data16
cmp
sub
dec
popf
imull
call
mov
jne
sbb
jbe
test
inc
in
dec
pop
outsl
ljmp
stc
out
int
lds
inc
push
stos
fdivrs
out
mov
mov
cmp
dec
sbb
mov
in
lods
loopne
call
not
pop
lret
adc
mov
mov
adc
cmp
icebp
data16
lods
pop
or
sub
xor
dec
in
adc
jb
insb
pop
cltd
cld
leave
andl
ja
jae
jg
scas
cmp
fxch
ret
ds
repz
jo
xor
mov
cmp
enter
and
pop
je
mov
cmp
pop
pushf
inc
push
xor
jmp
xchg
jecxz
or
mov
xchg
mov
jb
rcll
je
stos
in
jecxz
add
pop
pushl
call
mov
call
aas
dec
inc
fsubrl
sub
jo
or
addl
xor
das
addb
pop
xor
mov
or
xchg
shll
icebp
div
xchg
test
cwtl
mov
push
cmpsl
leave
fidivl
adc
and
push
sub
cld
push
push
push
mov
lods
mov
dec
add
pop
jb
sbb
push
adc
inc
xor
es
sub
xor
dec
nop
andb
outsl
xchg
shlb
jmp
lods
lret
mov
mov
in
mov
test
sti
fimull
data16
add
jl
test
iret
jnp
jbe
dec
push
test
pop
fnsave
mov
xchg
xor
cmpl
dec
aad
stos
test
out
inc
pop
sbb
ds
aas
lcall
loope
popf
xorb
cs
lods
pop
xchg
mov
jnp
sbb
ficoml
gs
inc
fisttps
and
inc
fnstenv
and
xchg
stos
mov
add
js
out
pop
adc
jns
mov
in
enter
sbb
mov
sbb
xor
sbb
mov
in
xlat
mov
jmp
out
jae
jne
ja
mov
ss
pop
aad
xchg
dec
movsb
xor
xchg
pop
xchg
mov
and
ret
movl
lret
pop
jl
in
xor
lea
jnp
mov
sbb
dec
dec
sub
adcb
mul
push
pop
jmp
inc
mov
push
push
es
popf
pop
enter
jae
inc
icebp
test
xchg
out
xor
in
imul
scas
cmp
and
adc
dec
in
repnz
int
out
mov
repz
xor
fsub
xlat
or
inc
or
fwait
sub
or
in
fildll
mov
ficomps
pop
lds
and
cld
out
mov
jno
sbb
loope
jo
cwtl
popa
andb
int
push
fwait
jnp
insb
pop
mov
call
and
xorl
fimuls
push
outsl
jbe
xor
clc
inc
aaa
lahf
orl
mov
rclb
je
repz
cmpsb
les
in
push
mov
pop
jnp
lahf
push
cs
loope
inc
mov
add
mov
ja
out
movsl
sub
xchg
and
lcall
fwait
ds
xlat
dec
add
xor
xor
xor
out
cli
pop
dec
add
js
inc
popw
mov
pusha
lcall
pop
fsubl
inc
cmc
sub
arpl
xchg
push
adc
sub
movq
dec
movsl
mov
mov
movsb
or
or
in
int
fmulp
sub
mov
lret
cmpsl
shll
mov
add
out
fisubrs
arpl
test
popa
andb
outsl
leave
test
stc
movsl
cmp
fs
push
mov
ss
bound
mulb
out
iret
scas
cli
fsubrs
xor
sbb
or
cwtl
jo
inc
cmp
scas
cli
push
pop
jmp
inc
ret
mov
imul
cld
scas
add
lods
inc
cmp
mov
gs
push
aad
cmpsb
inc
lods
mov
jnp
cmp
sbb
cmpsl
gs
ret
fsub
push
add
dec
or
into
mov
les
pop
repz
mov
sbb
jbe
add
mov
jp
daa
out
jmp
xchg
dec
cmpsb
pushf
in
lods
mov
fdivs
sbb
nop
subb
sti
call
out
jo
lcall
inc
call
mov
movsb
js
pop
mov
subl
out
les
push
inc
mov
mov
or
das
popa
mov
mov
repz
shll
lret
divb
inc
mov
aas
fisttpll
inc
cmp
nop
mov
in
lods
cld
dec
fs
sahf
mov
test
movsl
push
push
pop
xchg
out
sbb
sub
add
ret
mov
fst
insl
pop
daa
ds
mov
test
loop
insb
popa
inc
loopne
lods
ss
je
cmpsl
push
out
mov
mov
cld
mov
vpmaddwd
movsl
push
pop
cltd
jb
inc
test
loope
inc
stc
sbb
xchg
cmp
pop
daa
sahf
clc
fs
inc
sbb
iret
pop
mul
push
stos
je
shr
movsb
inc
fistl
sbb
outsb
cld
mov
xor
cmpsb
or
mov
mov
xchg
xchg
dec
inc
and
test
movsl
xorb
push
dec
cmp
inc
jo
or
mov
push
xor
cmp
cmp
cmp
bound
nop
jns
jno
in
xor
daa
mov
mov
or
and
in
pop
jp
push
fs
pop
in
dec
mov
cmpsb
adc
js
lds
jle
rcll
cmpsl
dec
out
xchg
xchg
sub
push
and
xchg
and
dec
inc
insb
xor
lods
jle
pop
out
in
xchg
and
enter
enter
mov
and
mov
push
fldenv
mov
xchg
mov
inc
fiaddl
push
loope
inc
stos
jmp
push
sub
scas
popf
lods
adc
xor
lock
pop
mov
and
sbb
gs
hlt
imul
jne
mov
int
aaa
pop
rcrl
mov
int3
es
pop
icebp
mov
fdivrp
mulb
rclb
scas
push
cmpsb
and
bound
dec
dec
fisubl
outsl
or
test
jge
sbb
mov
fmulp
cmp
enter
loopne,pt
fistps
adc
push
jns
xor
push
pop
int
mov
dec
dec
test
fwait
add
inc
orb
in
dec
fmuls
mov
scas
xchg
push
enter
jmp
cmp
fidivrl
lcall
and
or
subb
sub
jle
xor
jno
pop
jo
sub
pop
xor
dec
push
hlt
ds
int3
mov
dec
outsb
je
adc
push
xchg
jg
xchg
or
cltd
mov
mov
cld
lods
and
pop
int
arpl
sub
mov
imull
insb
insl
lret
in
sarl
dec
sbb
mov
test
inc
adc
outsl
test
xor
mov
dec
movsb
adc
aad
lret
cmp
mov
clc
out
imul
cmp
pusha
daa
or
mov
xor
adc
or
dec
adc
mov
adc
in
ss
and
data16
mov
jecxz
xlat
test
mov
mov
out
adc
lret
incb
mov
push
ret
test
dec
movl
lods
cmp
push
idivb
sbbb
mov
sbb
mov
cmp
das
hlt
jns
fimull
adc
push
cmp
adc
cs
pop
inc
aad
inc
jecxz
pop
out
aas
aam
xorb
jg
mov
das
push
jecxz
lahf
xchg
pusha
mov
lea
xchg
call
cmp
mov
lea
sbb
pop
fisttpl
shlb
and
sbb
dec
mov
push
addb
adc
jne
out
push
add
insb
cmpsl
dec
outsl
mov
mov
mov
or
jbe
mov
fistpl
pop
mov
pop
shlb
sti
sub
stos
aam
sbb
ret
dec
xor
or
insl
inc
add
dec
xchg
outsl
ljmp
outsb
lods
mov
xchg
sub
shlb
adc
add
mov
xorb
imul
xchg
push
sbb
loope
rcrl
xchg
jge
mov
xor
out
pop
and
xchg
mov
xchg
push
hlt
mov
lcall
js
lahf
out
xchg
pop
add
addl
test
fldt
mov
sub
pop
dec
aad
ja
mov
xor
pop
push
fcomp
fiaddl
or
jp
pop
jmp
dec
jns
jae
mov
outsl
dec
mov
outsl
daa
mov
popl
addr16
dec
dec
jp
insb
sbb
pop
ljmp
pushf
jae
jne
cmp
mov
gs
xchg
pop
cs
cmc
insl
jno
jne
mov
jno
out
rcrb
popf
inc
push
or
daa
push
dec
xor
stos
rorb
xor
insb
pushf
sarb
and
in
inc
lcall
xlat
jp
sbb
xchg
pop
push
dec
xchg
sub
add
pushf
cmp
into
xchg
enter
popf
fidivl
inc
sbb
in
inc
dec
imul
popf
scas
add
fcoml
lret
or
bnd
xchg
leave
fmull
hlt
mov
andb
jns
loop
push
or
int3
out
aaa
sbb
push
or
mov
or
mov
fisubs
and
das
adc
mov
push
fxtract
movsb
arpl
push
push
lds
loope
jge
rorl
sbb
cmp
stc
outsb
jno
dec
sbb
jmp
push
xor
std
push
lahf
mov
push
ret
fcoml
fadds
cmpsb
andb
movsl
inc
enter
pop
stc
mov
push
loope
loope
jae
sub
add
cmp
test
cld
movsl
cmp
mov
ds
push
fwait
les
inc
addb
dec
insb
jge
pop
xchg
out
js
scas
popl
scas
add
lcall
adc
sub
fisubrl
dec
adc
loope
or
sahf
shll
pop
cmp
test
push
add
int
int3
pop
sub
test
pop
rcll
mov
xchg
sub
dec
mov
sahf
test
fnstenv
cltd
mov
xchg
loop
cmp
fs
adc
jnp
cmp
insb
xor
out
xchg
xor
pop
cmp
sub
or
jae
into
or
call
xor
adc
inc
shrl
in
adc
ret
push
popl
lods
adc
or
call
rcl
mov
push
xchg
scas
sti
jns
jbe
gs
fbld
and
mov
pop
mov
fnstenv
inc
les
pop
repz
ss
jge
rcrb
jne
scas
mov
pop
adc
push
pushf
inc
loope
jmp
cmp
cs
mov
fidivs
jo
jae
mov
dec
sbb
lret
je
out
sub
arpl
pop
aad
fs
clc
inc
jno
sbb
pop
fstp
mov
stos
pop
repnz
inc
lds
filds
sub
das
pop
mov
rol
cmp
test
xchg
jl
mov
sub
mov
dec
mov
xchg
and
popf
lret
jl
insl
mov
xorl
lock
pop
and
iret
cld
jns
xor
enter
loope
dec
test
ret
fsubr
mov
insl
sub
dec
dec
subl
xchg
ljmp
popf
lods
or
je
add
enter
mov
mov
and
add
lahf
fwait
cltd
loopne
roll
xchg
movsl
pop
xchg
jp
sbb
pop
pop
pop
dec
xorl
push
dec
lods
out
push
cli
xchg
shlb
jbe
iret
mov
cmp
cmp
or
jge
fsubl
mov
test
inc
dec
maskmovq
notl
ja
cmp
dec
pop
repz
push
inc
or
sahf
push
fwait
arpl
stos
push
jnp
ss
daa
inc
cmp
negb
bound
fiadds
in
add
xchg
lds
jecxz
push
fs
dec
inc
pop
addr16
jp
and
mov
add
dec
sbb
lock
jg
movsb
jne
xor
xchg
lcall
enter
insb
out
lods
xchg
push
dec
jae
dec
xchg
or
mov
stos
inc
push
mov
pop
xor
insb
pop
lret
sti
jnp
mov
ja
int
pop
pop
jmp
xchg
ror
jp
jle
das
jo
pop
mov
inc
and
push
pop
jb
popf
xchg
movb
dec
movsb
scas
inc
xchg
in
shll
imul
fisubrl
add
pushf
adc
lahf
outsl
repnz
leave
push
lea
hlt
ljmp
jb
push
out
inc
in
sahf
or
inc
xchg
int3
aaa
fdivrs
or
pop
add
pop
dec
stos
loopne
inc
mov
les
rorb
scas
push
mov
and
or
out
pop
movsb
push
mov
mov
jge
dec
negl
sbb
in
inc
fstpl
jg
dec
jl
fwait
push
dec
xor
rorb
sbb
xor
or
mov
popf
xchg
xor
push
xor
push
inc
mov
lea
enter
pop
cmp
loope
inc
jae
inc
repnz
cmp
pushl
loopne,pt
or
fprem
jno
mov
lret
adc
stos
sbb
add
push
in
lret
push
jo
das
std
mov
sub
and
cs
lcall
scas
fsubl
das
jp
dec
addl
adc
mov
stos
test
mov
push
mov
and
dec
inc
push
xchg
int
sbb
sub
and
cmpsl
imul
jmp
pushf
mov
sahf
dec
rorl
jecxz
mov
xchg
outsl
data16
loop
pop
push
stc
lret
fs
mov
in
and
push
imul
fsubs
jbe
out
sub
cli
jno
or
cmp
ud2
jo
pop
into
lock
sahf
cmc
add
add
sarb
scas
inc
adc
popa
jnp
test
repnz
je,pt
mov
inc
lods
testl
in
jmp
xor
mov
in
decb
in
insl
loopne
mov
dec
sub
mov
daa
rol
push
lods
repz
push
mov
sbb
daa
sub
sbbb
jp
cwtl
or
pushf
in
mov
xchg
cs
lea
adc
xorl
jo
movsl
add
popf
dec
adc
data16
popf
lea
int
add
sub
xor
lahf
dec
repnz
test
out
sbb
inc
dec
pop
or
cmpsl
lds
incb
dec
mov
sbb
inc
shll
xor
add
sub
xor
fistps
mov
push
mov
lret
lret
jmp
and
cli
fcomi
mov
jae
out
mov
push
dec
sub
sbb
push
inc
xchg
addr16
es
movsb
insl
adc
jl
call
cmp
popa
mov
leave
mov
jno
and
sub
loop
movl
pop
test
dec
inc
ss
mov
push
xchg
push
in
adc
push
test
dec
pop
inc
ror
inc
or
stos
inc
sub
out
int
mov
push
stos
jno
fsts
xor
dec
testb
inc
fs
add
xor
dec
jbe
mov
pop
xor
dec
addl
lds
rcrl
push
add
das
out
aad
add
popa
mov
cmpsb
mov
mov
jecxz
adc
fdivs
cltd
rcrl
call
jp
mov
mov
cmpsl
jns
dec
bound
jne
mov
mov
jecxz
cmc
out
xchg
fwait
pop
sub
cmp
repz
cmp
iret
lods
pusha
sub
pop
inc
cmp
stos
mov
pop
fs
jb
inc
jnp
mov
jle
imul
pusha
lods
adc
iret
fcos
inc
ret
outsl
pop
lds
jo
cmc
jae
cmp
and
cmc
popf
mov
add
in
aas
inc
ficompl
dec
mov
imul
mov
dec
sbb
popf
mov
sbb
jo
hlt
dec
insl
push
arpl
add
push
xchg
mov
mov
int3
out
sbbb
aas
fsubp
inc
add
push
sub
loopne
movsb
jns
imul
outsl
jbe
clc
mov
mov
sbb
lds
popa
cmp
xlat
jno
fucom
jl
xlat
cs
mov
cmp
jo
or
jo
fldcw
cld
ret
das
cmpsl
pop
cmpsb
rclb
mov
jns
mov
push
fs
xchg
xor
mov
mov
daa
add
movsl
dec
sub
adc
adc
mov
test
push
fwait
xor
lock
pop
or
pop
lods
sub
push
stc
lret
int
call
outsb
call
sbb
xchg
insb
xchg
mov
sbb
std
stc
inc
and
nop
push
mov
int
dec
fsubrs
orl
lret
insl
roll
sbb
xor
fiadds
inc
dec
cmp
jno
mov
sbbl
adc
cmp
xchg
lret
leave
cmp
loop
sub
movsb
dec
out
cli
movsb
inc
int3
xor
insb
cmp
aaa
dec
or
pop
jmp
cmc
lret
popf
or
sbb
stos
pop
gs
adc
xorb
jae
scas
adc
outsl
lods
ficomps
out
mov
aad
xlat
and
sub
stc
mov
daa
sub
xchg
stos
addl
jp
xchg
dec
mov
fchs
fimull
jne
sbb
in
mov
xchg
add
adc
bound
lods
mov
movsb
xchg
adc
ja
cwtl
fs
jmp
fsubs
js,pn
xor
insb
mov
mov
lds
dec
test
sar
lock
imul
lret
daa
arpl
push
push
orl
and
cmp
inc
rcll
xlat
inc
jbe
fwait
das
fnstsw
mov
iret
enter
ss
testb
std
fildl
sbb
aad
mov
inc
xlat
or
cmc
add
lret
pop
sub
mov
and
mov
mov
ss
or
pop
sub
push
jae
divb
lds
xchg
pop
and
clc
ljmp
xchg
mov
ljmp
sbb
mov
mov
int3
pop
pop
mov
inc
adc
add
mov
ret
test
test
push
push
xchg
cmp
clc
inc
dec
clc
push
repnz
add
shll
iret
pop
mov
lret
shr
xor
xchg
pop
fs
push
test
js
arpl
cmp
ret
pop
stos
xor
subl
mov
dec
fstpl
test
repz
ja
add
std
lret
push
cmp
roll
add
pop
aad
out
mov
outsb
bound
fsub
in
and
mov
mov
shl
addr16
loope
mov
popf
mov
push
xor
dec
inc
cltd
aaa
jne
dec
pushf
mov
inc
aam
hlt
inc
sub
pop
xor
xchg
mov
movsb
cmpl
imull
push
dec
lods
push
push
push
and
xchg
add
jle
push
cmp
insl
mov
pusha
dec
stos
mov
cmp
ret
ret
jo
cld
jno
inc
jnp
mov
push
mov
xchg
jg
faddl
mov
dec
xchg
lcall
imul
scas
sub
xlat
push
nop
mov
adc
mov
jo
fcmove
inc
clc
mov
xchg
lcall
xor
or
or
cmp
dec
inc
or
scas
add
rcr
xor
rol
rcrl
stos
fimuls
xor
rolb
push
and
fsubrl
movsb
add
rclb
jbe,pt
mov
jge
or
and
ljmp
sub
out
dec
adc
inc
push
fimuls
xor
mov
lds
inc
mov
test
lcall
mov
or
enter
pop
mov
pop
push
mov
loope
dec
mov
cmp
stc
cmpb
test
movsl
dec
loope
and
pushf
xchg
jo
mov
ljmp
xor
cltd
mov
pop
pop
or
insb
js
and
lcall
fdivrl
sub
vmovd
cmp
jb
in
jg
int
mov
lea
mov
mov
testb
call
adc
sub
add
and
shlb
mov
mov
stos
inc
sahf
xchg
sahf
test
cmc
iret
sub
lods
outsl
and
add
mov
cmp
fs
add
ss
mov
mov
popf
mov
jae
xlat
rclb
mov
push
or
lret
aas
cmc
xchg
mov
xor
mov
adc
mov
adc
cmp
add
push
xchg
and
lds
pop
xlat
movsl
popf
jnp
in
fisubs
xchg
mov
sti
xchg
sar
into
call
test
dec
call
push
cli
fsts
xor
les
push
in
xchg
movsb
into
sbb
popf
push
mov
pop
cmpsb
aam
adc
les
dec
in
fistpl
mov
or
push
dec
jae
lcall
je
sub
insb
mov
lea
and
call
xor
dec
add
enter
inc
das
mov
fistpl
mov
das
mov
cs
and
jo
sar
scas
or
std
or
cwtl
in
int
cmpsl
ret
pusha
cmp
sbb
cld
and
lret
leave
ss
mov
stos
inc
lock
fs
sub
aas
shrb
dec
aam
mov
or
adc
push
stc
dec
jb
pop
xchg
aad
mov
popa
mov
inc
mov
mov
sub
pop
xor
mov
sbb
cltd
test
pop
test
pop
mov
fldenv
pop
cmp
fstpl
lds
clc
mov
lret
sarl
sbb
sarl
int
dec
movsl
xlat
stos
pop
xor
xchg
push
test
pusha
jnp
call
jns
xor
and
xor
push
insb
mov
lea
test
jns
ja
shrl
inc
arpl
ret
or
lock
lock
add
js
outsl
out
xchg
enter
je
jns
rcll
in
xor
xchg
mov
movsb
mov
clc
pushf
mov
jnp
arpl
loopne
jp
orb
lret
scas
xchg
mov
jecxz
jne
insb
push
mov
mov
fists
sahf
test
push
or
jg
roll
aad
xchg
push
loop
push
inc
or
stos
sahf
sub
xor
dec
lods
lock
shrb
in
repz
pusha
jecxz
mov
ret
addr16
xor
incb
sahf
jae
sbb
popf
or
cmpb
mov
das
adcl
sti
das
and
mov
push
xlat
push
xor
mov
ret
dec
fcmovne
mov
in
arpl
inc
inc
out
enter
fimuls
aaa
adc
fldt
imul
adc
sub
lds
shrb
and
push
cmp
ja
movsb
or
push
cmpsb
out
dec
jbe
fidivrs
push
inc
xchg
dec
push
add
ret
aaa
out
faddp
cmp
sti
add
mov
fisttps
es
push
rcl
xor
sbb
loop
cmp
cmp
push
lea
scas
out
sbb
xchg
nop
inc
inc
dec
mov
das
in
rol
pop
enter
pop
cmc
push
mov
loope
xchg
cmp
fwait
xor
movsl
push
sti
push
iret
add
orb
mov
fsubl
js
arpl
pop
nop
js
jo
pop
stos
pusha
sbbb
xor
sub
or
outsb
lds
stos
adc
dec
mov
jg
in
mov
sarb
mov
loopne
mov
pushf
sti
and
gs
cli
mov
ja
sub
repnz
enter
pop
pop
shrl
xchg
sbb
xchg
sti
aaa
test
flds
outsl
add
loop
stc
ret
dec
pop
fs
mov
inc
ss
xor
pop
mov
outsl
cli
or
sbb
inc
cmp
xchg
iret
or
adcl
shll
fstl
sub
adc
popa
lods
add
in
fwait
lods
lods
jecxz
mov
add
lea
pop
pop
xchg
mov
std
adc
xor
icebp
inc
push
gs
aas
loopne
adc
inc
leave
imul
pop
mov
repz
jl
popf
cmp
fmul
or
stos
test
adc
aaa
cmp
jb
lret
cs
nop
movsb
xor
jb
mov
add
add
lret
outsl
jecxz
lea
cli
call
hlt
and
push
push
cmpsb
xorl
mov
jle
in
inc
loope
sbb
lods
nop
imul
jns
mov
cmp
std
or
dec
aas
adc
leave
loopne
std
sub
cwtl
cmpsl
jae
cmpsl
ret
mov
out
sbb
cld
dec
int
lret
cmp
fimull
sub
loop
in
pop
dec
dec
push
sarb
iret
sub
int3
sub
ja
out
ret
adc
mov
cwtl
clc
sbb
movsb
mov
insl
int
xchg
adc
sub
iret
xchg
test
mov
fidivl
and
imull
mov
add
lods
lcall
adc
mov
rorb
push
fimull
fldl
das
clc
mov
sbb
out
rcl
loope
pop
stc
lods
imul
in
xor
push
cmp
es
les
xchg
mov
nop
inc
sbb
dec
hlt
test
xchg
adc
popa
in
dec
jmp
jmp
cli
jl
or
pop
rcrl
test
add
dec
in
loope
xchg
imul
outsb
jp
mov
xchg
int3
pop
ss
lods
addr16
sarl
or
mov
sbb
divb
rorl
or
lret
repz
aaa
cmc
fbstp
clc
notl
dec
add
dec
xchg
sub
pop
faddl
and
out
or
push
test
adc
push
and
hlt
mov
lea
xor
in
cwtl
cltd
pusha
jle
imul
jnp
xchg
push
pop
jae
mov
imul
mov
push
xor
mov
jo
dec
jge
sbb
mov
imul
cmp
push
mov
mov
push
mov
leave
das
repz
sub
adc
out
inc
icebp
fucompp
or
xor
adc
aam
pop
or
mov
int3
test
repz
or
addr16
and
lds
ret
sarb
push
and
icebp
inc
cmp
inc
rcll
mov
jle
std
pop
out
sbb
or
cmp
jbe
jno
mov
sbb
fcomp
push
movsb
mov
jo
insb
and
push
jmp
adc
push
pop
jne
inc
fsubl
pop
cmpsb
pop
push
fucomi
mov
mov
pop
xor
mov
outsb
mov
sub
out
or
cltd
add
movsl
pop
jns
and
mov
and
cwtl
sbb
addr16
push
push
xor
sub
cmp
js
push
addb
inc
int
aas
mov
inc
fmul
add
outsb
sub
sahf
adc
sub
pop
mov
inc
int
lods
sbb
and
into
push
xchg
imul
repnz
mov
test
roll
mov
and
rolb
and
outsl
loop
mov
stc
cmpsb
xor
fs
cwtl
push
pop
stos
cmp
adc
out
fxch
cli
cmp
sbb
xorl
jl
into
jl
fcomi
and
pop
ret
adc
dec
jnp
inc
mov
pop
add
movsl
imul
cld
lods
xchg
sbb
xchg
xlat
and
fs
add
inc
in
stos
in
push
stos
cwtl
adc
shll
lock
dec
cmpsb
in
mov
flds
xchg
push
repz
imul
lret
mov
adc
pop
sub
pop
or
dec
adc
cli
mov
jmp
or
mov
lret
jg
outsl
aas
mov
iret
jb
cmp
dec
imul
jecxz
roll
jb
decl
lock
cmp
add
xor
sahf
adc
mov
cs
push
pop
das
jp
andb
pop
fwait
and
filds
pushf
adc
std
rolb
cld
cwtl
bound
push
mov
out
sbb
jbe
cltd
lret
cmpsl
fwait
mov
mov
jmp
or
rclb
jne
and
lret
aam
xchg
ret
mov
adc
insl
lods
xlat
xchg
dec
push
xchg
push
ljmp
mov
and
sti
mov
loope
jp
xchg
cmp
add
jno
cltd
repz
test
movsl
mov
push
stc
push
popf
xlat
mov
clc
add
adc
shrl
pop
ds
movsb
mov
std
inc
repz
pop
dec
clc
xchg
xor
je
push
aad
call
cmp
xor
xchg
sbb
repz
xchg
insb
in
adc
ja
jne
dec
fidivs
dec
or
lahf
mov
push
stos
dec
jne
ljmp
out
push
rcl
bound
jns
cmpsb
sub
loop
push
xchg
push
shll
mov
je
mov
icebp
rolb
and
push
inc
mov
sbb
pop
mov
arpl
in
out
push
or
fisubs
fists
outsl
xchg
out
sbb
aas
loope
xchg
adc
mov
push
sub
inc
into
rclb
adc
stos
test
and
insl
dec
insb
push
adc
jle
xchg
andb
iret
push
or
pop
mov
pop
cmpsb
jae
fsubs
popf
push
jmp
inc
inc
jmp
pop
dec
xchg
lahf
add
imul
fisubrl
and
pop
shrb
leave
cmpsb
data16
jbe
pop
arpl
flds
pusha
xor
scas
stos
mov
xchg
pop
pusha
or
push
dec
add
imul
test
lds
push
mov
cmp
or
xchg
aad
cs
mov
sbb
cmp
cmp
jno
test
jl
adc
dec
xlat
push
xchg
imul
push
mov
loopne
test
sub
push
cmpsb
fsubrl
in
in
mov
lods
notl
jae
in
push
loope
imul
cmp
outsl
ds
fimuls
movsl
fs
push
and
es
lea
xorb
xor
das
adc
pushl
incb
pop
sub
mov
test
push
and
sub
sub
in
outsb
mov
adc
add
jg
and
mov
push
push
xchg
dec
pop
int
stc
mov
mull
pop
lret
scas
rcr
mov
xor
data16
sahf
jnp
pop
test
stc
scas
outsl
rcll
adc
pop
ret
test
xor
js
jmp
lahf
fcoml
cmp
into
jns
out
jbe
xor
inc
in
or
out
cmc
out
inc
xor
out
adc
sbb
imul
test
and
fcmovne
lods
jp
sub
les
out
sub
pop
and
rorl
sti
xchg
push
idiv
aaa
mov
stos
mov
out
jle
add
jg
fnstcw
shl
sub
cs
packssdw
sbb
dec
insl
inc
test
xchg
pop
mov
adc
inc
pop
or
push
inc
lret
cs
and
mov
mov
jb
repz
je
push
jecxz
lahf
xchg
jne
or
imul
mov
ljmp
bound
out
rcrl
rcrb
lock
out
xlat
das
inc
loop
pop
das
pop
xchg
inc
push
mov
jmp
outsb
shr
sub
testb
std
ja
rcrb
rcrb
mov
popf
ljmp
push
hlt
xchg
mov
and
mov
movsb
sub
pop
pushf
aam
ljmp
sahf
mov
or
pop
mov
ljmp
into
lods
mov
insl
mov
call
pop
sub
mov
push
cltd
sub
es
sbb
aad
fstl
mov
call
ljmp
dec
cmp
out
mov
xchg
push
icebp
pop
ud0
push
add
mov
add
loopne
aas
xor
sar
mov
ss
jns
cltd
test
addl
dec
rorl
mov
fwait
jge
dec
push
dec
push
dec
add
leave
in
out
xor
bound
pop
or
in
push
je
lahf
jl
mov
loope
mov
lods
inc
int3
and
cmp
mov
add
dec
mov
mov
rcrb
sub
mov
jle
fbstp
fistl
ss
xchg
loopne
and
pop
aas
lock
inc
and
add
stos
imull
inc
insb
mov
mov
mov
mov
mov
push
pusha
mov
jmp
mov
jnp
mov
out
aas
inc
cmpsl
mov
jae
push
push
icebp
inc
inc
popf
jle
loopne
imul
ficompl
add
jbe
lcall
scas
mov
push
lods
sbb
sbb
mov
jle
hlt
rcll
inc
negl
or
sub
aaa
push
pop
aam
out
cltd
and
cs
test
jle
movsb
pop
imul
adc
xor
push
shr
sbb
dec
lea
or
int3
cmp
test
push
push
xchg
shll
jge
inc
xor
jnp
jl
shlb
cmp
sub
jl
jo
dec
into
mov
push
push
mov
sub
fists
pop
insl
test
repz
cmpsb
pop
je
in
xchg
loopne
pusha
data16
mov
hlt
push
stc
xlat
loope
adc
out
cmp
sbb
ds
andb
rcl
in
testb
inc
sbb
add
lahf
xorl
sarl
test
stc
js
shr
pop
sub
js
lods
flds
and
push
in
sbb
adc
fimuls
inc
inc
imul
je
cmp
xchg
int
push
cwtl
mov
inc
sub
mov
xchg
lret
jae
jae
jecxz
pop
xor
sbb
leave
jne
push
cmpsl
outsl
mov
push
stc
adc
arpl
push
ljmp
xchg
in
add
mov
mul
lahf
leave
cmp
pop
into
mov
fldlg2
or
movq
inc
pop
or
scas
cmp
xor
pushf
dec
pop
add
call
imul
lret
push
add
lock
add
popa
cmp
mov
sub
test
in
ds
sti
inc
es
pop
or
and
subl
js
sub
fpatan
test
lods
mov
rcll
adc
jae
daa
fdivs
jb
stc
adc
sub
aas
sahf
jp
iret
sar
xor
lds
jb
fidivrs
pop
out
je
popa
mov
imull
mov
call
xor
js
out
scas
cmp
sub
fildl
clc
into
pop
addr16
mov
das
cmp
mov
bound
shll
sahf
inc
sarl
mov
std
push
mov
cmpsl
mov
or
icebp
je
ret
cld
int3
scas
ret
adc
mov
dec
mov
mov
pop
test
mov
clc
cmpsl
mov
adc
mov
roll
jnp
test
lcall
in
lods
cmp
shlb
stc
mov
mov
out
dec
or
sbb
mov
cltd
popa
dec
mov
mov
push
pop
push
and
fnstsw
iret
sub
jg
cwtl
rcl
mov
aam
fldt
out
pop
dec
xchg
xchg
rcrl
int3
jle
call
adc
or
repz
loope
mov
cltd
sbb
dec
loopne
repnz
push
sbb
subl
addl
lahf
test
lock
push
mov
out
psubsb
lock
in
mov
xchg
out
imul
mov
addr16
add
mov
sub
ja
mov
jecxz
mov
insl
jne
ffreep
mov
inc
pop
fisttps
mov
jmp
stos
jnp
addl
inc
sub
cmp
and
mov
insb
hlt
lds
jnp
aas
cmpb
pop
in
fistpll
dec
enter
fimull
pop
movaps
jae
inc
and
mov
test
cmpsb
sub
lret
pop
jb
dec
idivb
inc
loop
imul
ficoms
jl
adc
cltd
sahf
repnz
leave
xchg
cmp
hlt
or
adc
xor
inc
cli
enter
enter
mov
aaa
adc
loope
xlat
add
xchg
xchg
int3
imul
fidivrs
push
clc
rorb
sub
lahf
xchg
lds
mov
loop
push
loop
xchg
jbe
sbb
jge
push
lock
inc
mov
mov
lret
pusha
out
jl
movsb
orl
lret
push
dec
ja
xor
xchg
xchg
push
bound
test
mov
or
loop
in
outsb
sbb
enter
pop
icebp
lods
xchg
push
int
loope
fadd
sub
mov
push
ds
or
push
xchg
nop
dec
cmpsb
jns
pop
loope
sbb
dec
lahf
add
fstpl
adc
test
addr16
iret
setno
jno
pop
cmpsl
incb
push
add
int
ror
mov
adc
mov
imul
test
mov
lcall
mov
outsb
outsb
int
sub
sub
dec
mul
daa
call
rorl
imul
das
sahf
shl
test
imul
jecxz
mov
lret
lret
or
adc
cli
mov
and
in
adc
inc
xchg
out
pop
mov
stos
xor
cmp
inc
and
jns
daa
into
and
push
fdivs
cmp
mov
adc
ljmp
mov
insl
add
jnp
and
xchg
loopne
loop
and
mov
test
or
jge
jbe
xchg
dec
in
loopne
lods
pop
dec
ret
jb
inc
jae,pt
fldcw
addb
mov
lret
xrelease
cmp
pop
cwtl
cmpsb
cmpsb
sbbb
mov
stc
test
dec
jmp
or
cs
aad
push
and
adc
aas
imul
jb
decb
shlb
mov
ja
push
add
jnp
inc
lea
and
lock
adcl
xchg
add
cmpsl
mov
std
xchg
nop
inc
sbb
inc
mov
sbb
sub
add
mov
ljmp
jmp
cwtl
xchg
rclb
mov
dec
dec
cld
cld
testl
mov
ds
mov
mov
lock
push
ror
insl
pop
sub
jl
aam
stos
test
push
popa
mull
movsb
sbb
dec
pop
mov
xchg
adc
out
sub
or
mov
mov
mulb
adc
jnp
ret
add
dec
cltd
cwtl
jle
test
pop
scas
push
out
in
fucom
cmpsb
xchg
clc
mov
jle
out
mov
shrl
cmpsl
lcall
movsb
in
cmpb
push
cmpsl
icebp
out
xor
adc
into
mov
mov
pushf
lahf
and
loop
test
shrb
inc
enter
inc
push
sub
or
pop
mov
push
xchg
addr16
add
jno
out
out
jns
bound
xor
in
push
cmc
mov
adc
leave
pop
and
mov
mov
push
mov
xchg
dec
xchg
mov
dec
mov
adc
push
xchg
pusha
pop
xchg
jmp
jbe
or
fs
sub
cmp
xlat
stos
jmp
adc
pop
pop
or
jle
jmp
or
xchg
iret
jb
lock
dec
pop
inc
add
xchg
pop
bound
ja
adc
loope
mov
pop
jbe
jle
and
movsb
dec
sbb
out
or
pop
jb
jnp
jne
cmp
adc
xor
bound
leave
or
aad
mov
sub
std
stos
sub
sarl
rclb
or
inc
cwtl
add
int3
push
xchg
sub
lds
adc
scas
push
scas
in
and
mov
cmp
dec
movsb
inc
push
push
xor
mov
jge
mov
sbb
test
daa
mov
dec
xchg
jno
cmp
jl
lods
xchg
dec
cmpsl
push
xor
mov
stos
fwait
loope
loope
xchg
lahf
mov
test
mov
inc
sbb
pop
in
push
in
pop
enter
pop
xor
std
loope
lret
loop
lcall
ds
test
movsl
jns
mov
subb
xor
pop
add
outsl
sti
xor
mov
inc
dec
lea
jbe
js
mov
lret
lcall
adc
jp
shrl
ljmp
lods
inc
pop
rclb
divb
mov
mov
jno
and
lods
fxch
jp
sbb
fimuls
lret
and
mov
lods
rcrl
repz
fcomps
inc
mov
add
pop
add
loop
mov
inc
fs
inc
or
gs
fidivs
push
iret
pop
fdivr
imul
popf
leave
or
or
or
jg
or
mov
into
or
cwtl
cmc
cmp
daa
xor
lahf
mov
dec
les
adc
or
add
data16
cmpsl
lret
lods
das
in
jmp
xlat
pop
dec
sub
xchg
lcall
adc
movsb
sti
mov
push
add
xor
loopne
inc
xchg
cmpsl
mov
fldenv
xor
ret
repz
rorb
pusha
hlt
mov
and
mov
adc
jae
inc
inc
insl
jmp
sbb
sub
inc
pop
nop
jmp
outsl
aas
or
lea
cmpsb
cmpsl
je
jne
jecxz
pushf
lret
clc
call
scas
data16
mov
add
andl
sahf
fistpl
pop
pop
lods
test
xor
das
idivb
push
mov
ror
icebp
and
lods
xchg
rcr
or
negb
mov
std
insb
sbb
cwtl
dec
pop
jo
mov
adc
icebp
and
jbe
arpl
jge
push
sbb
xchg
enter
rcrb
add
ret
filds
sbb
mov
push
pop
sub
sarl
add
iret
mov
push
mov
std
gs
ss
add
std
cltd
iret
push
cld
test
stos
add
test
addb
in
xor
cmp
in
roll
inc
push
out
in
xchg
dec
adc
push
cmpb
rorl
xor
and
xor
and
mov
cwtl
sbb
scas
inc
fildll
jmp
dec
stos
pop
roll
xor
or
out
pusha
fwait
or
push
add
add
sbb
jnp
int
add
lea
in
outsl
dec
xchg
mov
lea
ss
mov
addr16
cmp
mov
loop
mov
pop
mov
dec
jp
jne
jno
mov
adc
xchg
xor
insb
xchg
inc
setb
out
fisubrs
xor
fsubrl
sub
arpl
mov
jle
addb
sahf
lods
ja
test
jmp
roll
ret
std
pop
jge
sti
inc
enter
mov
push
cmp
sbb
sbb
push
inc
in
mov
xor
jg
sti
cli
push
sbb
rorl
inc
stos
scas
fisubs
push
andl
mov
mov
cwtl
leave
sbbb
popf
popa
loop
add
aam
sub
mov
pop
mov
lods
xchg
add
xorps
aas
lea
fdivrp
dec
add
movl
shlb
mov
cmp
shld
inc
push
sbbb
jbe
jb
jge
inc
into
sbb
pop
cmp
xchg
push
mov
jl
mov
sbb
scas
push
adc
sbb
dec
jns
cmc
mov
cmp
push
flds
cmpsb
call
mov
xor
outsl
adc
or
ficomps
sub
cmc
cmp
arpl
sbb
movsl
or
and
vphaddwq
imul
add
push
or
or
cmp
ret
mov
pop
movsl
gs
and
and
leave
xor
adc
outsl
ret
js
and
xorl
iret
cmp
and
mov
out
sub
mov
lret
insb
sarl
jge
sbb
mov
and
in
leave
cmp
cmp
scas
inc
stc
cmp
fs
int3
adc
dec
cmp
mov
pcmpeqd
cmp
add
in
mov
nop
testl
jmp
sbb
add
pop
pop
mov
imul
sub
sub
inc
lods
push
fwait
pop
mov
gs
mov
jg
mov
inc
push
mov
bnd
sbb
fstps
jae
repz
jg
sbb
sbb
cmp
clc
pop
mov
or
cmpsl
shlb
pushf
lock
jge
or
iret
cs
shl
aad
mov
lea
test
fdivs
mov
jle
jecxz
js
movb
push
mov
in
mov
rolb
mov
and
lea
enter
ret
fidivrs
das
aad
mov
xchg
xchg
and
xor
daa
xor
loope
adc
pop
cmpsl
mov
cmpsb
stc
cmp
pop
lret
sar
dec
mov
es
faddp
lock
xor
shlb
outsl
sub
sub
ret
outsb
out
es
arpl
xor
jge
dec
fwait
xchg
inc
rorl
pop
push
lods
cmp
jb
out
mov
add
pop
mov
cmp
add
rcrl
mov
pop
mov
cmp
insb
push
push
fnsave
cmp
xchg
xchg
jno
sbb
loope
pop
sti
inc
aas
stos
test
and
xchg
xchg
push
xchg
push
pop
adc
xor
xor
or
mov
xchg
test
xchg
dec
emms
mov
push
push
inc
test
or
push
sub
cmp
inc
push
fsts
mov
out
lods
test
push
in
leave
sbb
dec
sbb
pop
cwtl
fsubrs
sbb
outsl
jp
neg
mov
jbe
mov
mov
xorb
loopne
and
test
xchg
push
dec
loop
adc
jmp
xorl
pushf
out
jne
sub
cmp
mov
mov
aas
sub
insb
xor
pop
nop
jle
cvtps2pd
movsl
stos
xor
xor
iret
xor
ret
negl
stos
cwtl
inc
rcll
jae
pop
mov
std
cmp
popf
sbb
mov
fs
mov
add
inc
xchg
imul
push
enter
xor
fidivrl
or
leave
stc
inc
shl
in
popa
movsl
arpl
lret
push
imull
xor
mov
orb
sub
pop
and
lcall
pop
ds
loopne
and
mov
movsb
pop
jne
push
iret
jns
out
iret
sbb
push
daa
mov
jae
jno
push
pop
jl
cmp
dec
mov
rorb
div
xchg
xor
xchg
dec
sub
fstpt
add
pop
mov
inc
ss
imul
in
and
push
enter
pop
scas
or
push
jg
loope
adc
out
cmp
dec
aam
xchg
gs
adcb
cld
add
popl
loope
push
int
mov
js
ret
movl
jno
adcb
ss
adc
icebp
outsb
jp
jge
cmp
lahf
jg
cli
jg
jge
sbb
mov
jno
push
movsb
xchg
dec
sbb
sub
scas
push
lret
out
ror
out
add
hlt
and
push
sbb
outsl
sbb
iret
loop
fcomps
fs
test
add
imul
xor
fdivs
and
cli
outsl
fisubl
mov
jbe
or
fs
into
into
push
push
cmc
lret
xor
pop
pop
jl
outsb
adc
cmp
adc
lcall
lods
push
sbb
std
sub
mov
decl
sub
mov
lret
in
ljmp
out
cmp
lock
mov
dec
loopne
icebp
inc
ja
fxch
sti
inc
fadds
cli
repz
sbb
scas
loopne
cmp
scas
and
inc
pop
mov
cs
fwait
mov
jmp
jnp
cs
in
jmp
scas
nop
mov
subb
xchg
sub
cmc
mov
sbb
movb
call
sub
xor
orb
fstpt
flds
sbb
inc
imul
pop
mov
add
mov
mov
ljmp
sub
cmpsl
mov
in
mov
cld
js
ss
inc
sub
mov
or
and
mov
inc
notl
sub
stc
out
add
addr16
std
mov
es
mov
xchg
int
jo
mov
push
in
lods
movsl
push
ret
xchg
mov
or
jge
xor
int3
sets
xchg
add
ja
mov
vmread
xchg
sub
push
fisubrs
clc
arpl
scas
xchg
dec
sbb
and
xor
pop
stos
xchg
out
out
stos
roll
pop
rclb
test
xor
sti
cmp
xor
xor
scas
outsb
mov
movsl
out
dec
jl
pop
test
jne
ja
mov
movsb
inc
sbb
lret
fwait
push
adc
add
push
into
in
out
mov
out
xchg
jns
xchg
xchg
sub
pop
mov
lret
test
es
pop
jp
push
mov
cs
mov
std
sub
inc
xor
scas
xchg
aad
jnp
dec
fisttps
fbld
fnstenv
xchg
jmp
xlat
repnz
rcrl
sub
sub
push
cmp
xor
insb
mov
out
cmp
in
or
iret
mov
push
inc
fimuls
push
push
rcrb
popf
inc
stos
test
jecxz
inc
ficoml
int3
sbb
adc
jae
scas
movsb
add
loop
adc
push
cld
mov
pop
inc
push
leave
jo
xor
mov
or
div
inc
push
or
xchg
add
and
xchg
int3
adc
mov
mov
shlb
scas
mov
mov
shll
sahf
jbe
cwtl
cmp
or
sbb
mov
ja
jbe
xchg
jno
adc
jl
mov
add
fstps
xor
repnz
lahf
xor
test
ljmp
cmpsb
out
stos
and
or
or
in
mov
push
and
loope
jo
sub
int
cmp
push
ds
pop
jbe
mov
jmp
sbbb
mov
andb
mov
xor
loopne
add
stc
lcall
mov
sub
mov
pushf
shlb
xor
mov
xor
mov
inc
pop
and
add
push
cmpsl
and
int
xor
std
neg
ror
or
shll
mov
fwait
mov
sahf
dec
xor
xlat
pop
cld
sbb
cmp
loop
ss
cmpsl
mov
adc
stos
xor
cmp
out
daa
dec
cli
mov
push
mov
das
out
xor
repnz
xchg
cltd
imul
pop
test
adc
inc
mov
adc
pusha
jb
or
data16
mov
mov
sbb
xchg
mov
push
flds
lods
inc
jmp
or
gs
icebp
loopne
xchg
aas
pop
cmp
flds
pop
push
repz
sbb
mov
mov
and
or
inc
movsl
and
ljmp
aad
jg
nop
jl
cmp
jb
and
lods
adc
jecxz
cld
push
movb
mov
mov
xchg
cmpsb
fcompl
dec
or
mov
jmp
mov
inc
sbb
enter
xor
cmc
xchg
and
push
pop
mul
push
std
popa
lret
jg
mov
movntq
out
icebp
cmpsl
mov
mov
mov
push
mov
xchg
cmp
lahf
mov
pop
inc
mov
sub
imul
iret
push
push
es
adc
dec
inc
aad
xchg
or
js
sub
fisubl
or
mov
repnz
mov
imul
jbe
scas
test
test
mov
jne
repnz
add
jle
ret
and
loop
and
incb
jg
push
ret
ja
xchg
sub
push
add
push
adc
inc
xor
cmpsb
or
je
mov
test
bound
mov
test
cs
dec
cmpl
mov
push
popfw
out
fwait
xchg
mov
push
pop
mov
add
imul
push
mov
jns
cmp
cmpl
in
jp
xchg
jns
jne
shr
mov
jae
push
sbb
addr16
cmp
xchg
fidivs
dec
sbb
mov
dec
and
jne
cmp
mov
xor
lods
pop
inc
jmp
mov
fcos
out
dec
popa
sub
and
ret
fidivs
and
rep
or
add
inc
cli
jle
push
add
mov
push
pusha
push
out
std
mov
adc
sbbb
add
es
imul
popf
push
xor
jae
dec
stos
arpl
pushf
outsb
jne
bound
stos
push
push
xor
xchg
mov
scas
dec
add
out
int
add
arpl
cmpsl
hlt
inc
or
xor
or
imul
aas
xchg
mov
rcrl
add
fcmovu
out
sbb
pop
into
push
rclb
cmpsl
and
daa
cmp
mov
ret
clc
jbe
fimull
sbb
dec
stos
daa
mov
addr16
jno
neg
jl
adc
sub
mov
inc
push
jo
movsb
lahf
push
pusha
scas
push
subl
push
mov
scas
inc
push
sub
jno
cmp
icebp
sbb
inc
loopne
pop
sub
jbe
data16
loope
out
aad
inc
stos
xchg
cmp
enter
mov
dec
and
dec
mov
sbb
push
pop
add
call
xor
push
push
pop
pop
xchg
sti
lahf
js
xor
pop
and
inc
lcall
sub
es
sub
adc
adc
add
sub
insl
test
gs
divl
int
xor
lret
negl
addr16
sar
lods
mov
xchg
or
scas
scas
push
sahf
lock
test
test
clc
pop
inc
outsl
fidivrl
loop
movl
jne
xor
mov
in
sbb
jg
clc
fsubr
or
cltd
stc
fwait
cli
aad
add
imul
or
shl
pop
jb
xor
lahf
adc
xor
adc
jp
add
gs
lret
cld
sbb
sbb
cmp
arpl
clc
cmp
in
shrb
sub
loopne
mov
push
loopne
jo
dec
sahf
mov
or
cmp
sbb
repz
xchg
fs
cld
pop
movsl
cmp
fcmovnbe
and
pop
movsb
pop
adc
lods
popf
sub
out
aas
cs
add
nop
push
inc
xor
xchg
jb
cmpsb
rorb
aam
je
movsl
jecxz
movsb
movsl
mov
lea
scas
dec
call
stos
cltd
fisttps
sbb
dec
testb
sbb
sbb
mov
sbb
jb
int
inc
mov
repnz
mov
xchg
mulb
lcall
dec
mov
mov
jle
mov
into
rolb
mov
mov
cli
jmp
pop
bound
shr
push
mov
fiaddl
cwtl
ret
sbb
insl
in
imul
cmp
pop
popa
sahf
sbb
lods
jnp
sbb
adc
dec
pop
mov
push
mov
add
jmp
xchg
test
das
movsl
mov
test
mov
push
frstor
in
addb
addr16
loope
out
cld
aas
cmp
jno
push
xchg
imul
decl
push
xor
daa
jne
pop
into
mov
stos
add
dec
dec
cmpsl
out
pop
jl
ja
mov
je
dec
scas
icebp
or
jg
fwait
xlat
bound
ret
add
xchg
insb
out
dec
mov
add
jns
pushf
adc
cmp
mov
mov
xchg
mov
leave
cwtl
mov
je
jp
insb
dec
mov
or
jns
mov
dec
push
xor
jne
inc
inc
mov
insb
jp
dec
xlat
pop
xchg
jg
or
xchg
insl
mov
repz
sub
pop
sahf
test
stos
sbb
adc
test
insb
jbe
pop
jnp
pop
mov
outsl
scas
in
stc
xchg
pusha
icebp
dec
sub
dec
inc
mov
pop
pop
rep
inc
hlt
mull
cmp
push
inc
xor
popf
or
ret
inc
loope
jg
std
cmp
xchg
push
mov
sbb
mov
pop
scas
push
sahf
push
popf
in
data16
hlt
dec
mov
add
hlt
into
lock
arpl
icebp
mov
or
xchg
jb
mov
add
ror
jmp
ret
pop
mov
mov
mov
xor
scas
popa
leave
loop
adc
cmp
fnstsw
push
mov
mov
sbb
xchg
cmp
fsubrl
jno
lcall
fs
push
dec
xlat
xchg
inc
push
lahf
add
xor
test
rcrl
push
dec
jb
push
sub
push
addb
std
push
hlt
pop
aaa
in
fcomps
enter
pop
imul
push
test
test
pop
mov
cmpsl
pop
out
pushf
jnp
and
push
and
inc
adc
push
xor
mov
push
mov
pop
mov
dec
push
pop
mov
popf
cwtl
push
or
dec
adc
insl
in
pop
outsb
mov
ljmp
popf
lods
outsb
mov
xchg
rorl
cmpl
push
lods
mov
int
adc
sub
cwtl
negl
das
lret
movsl
rcll
sbb
xor
sahf
xchg
add
sbb
mov
call
fs
cld
adc
jmp
imul
cwtl
dec
mov
xor
sarb
sbb
cmp
cmc
pop
scas
imul
shlb
adc
mov
adc
out
add
push
imul
cmp
xlat
pop
out
sub
insb
add
sub
sti
or
dec
aas
xor
xchg
xchg
loopne
insb
orb
jmp
fnstenv
stc
cmpsl
and
mov
roll
es
das
mov
dec
adc
aam
pushf
pushf
or
cs
movsl
aad
in
ja
xor
pushf
jb
push
dec
lcall
jecxz
nop
loope
lea
mov
ja
cmp
inc
mov
adc
mov
sbbl
mov
dec
push
or
fsubl
inc
daa
and
inc
mov
pop
and
fimull
mov
inc
xchg
xlat
shll
das
mulb
mov
cwtl
cmc
mov
scas
mov
push
shrl
push
lret
mov
mov
fstpl
lock
xor
pop
andl
mov
aam
shrb
es
sbb
mov
dec
cmp
xchg
mov
ljmp
xor
inc
popf
mov
and
add
mov
rolb
sub
loop
jp
fmull
inc
mov
cmpsb
push
js
insl
sbb
clc
adc
cwtl
xchg
ja
sbb
sarl
pop
pop
pop
cmpsl
nop
push
stos
fs
jp
aam
xor
leave
inc
mov
in
out
xchg
xor
mov
xor
cli
xlat
mov
scas
inc
mov
mov
dec
test
pop
icebp
ja
pop
jae
imul
sbbb
push
outsl
add
mov
cmp
jns
pushf
dec
in
jnp
xchg
pop
push
mov
pop
xchg
or
jns
push
test
jp
and
call
mov
dec
pushf
dec
dec
jmp
mov
mov
mov
xor
out
mov
subl
out
jmp
sub
sbb
adc
fwait
dec
mov
ja
arpl
pop
jle
int3
xor
roll
iret
lods
mov
pop
nop
test
inc
ljmp
jae
mov
push
or
popf
mov
clc
mov
pusha
xchg
push
fidivl
cld
adc
repnz
push
scas
int
push
adc
push
jno
push
std
jmp
hlt
sbb
arpl
jg
inc
orb
aad
aaa
dec
insl
in
or
mov
int3
sbb
loope
xlat
fisubrs
popf
addr16
ss
inc
je
and
inc
movsb
mov
push
or
jbe
mov
ficompl
push
daa
or
mov
sub
jno
sub
jl
inc
repz
inc
in
xor
addb
push
out
shlb
and
push
daa
addr16
test
dec
jno
inc
jb
shlb
xchg
stos
sbb
dec
inc
xchg
loope
pop
ds
loop
cmp
jg
lret
movsl
mov
incl
in
clc
sbb
dec
sbb
add
mov
lods
js
hlt
dec
pop
and
lcall
insb
fdivrl
sub
outsb
push
sub
push
sahf
push
shlb
icebp
xchg
push
mov
and
mov
mov
jge
in
mov
shl
negl
sub
loop
out
sub
popf
mov
jns
sahf
ficoms
insb
mov
subb
jmp
loop
xchg
stc
int3
lcall
aas
aad
ss
add
cmp
popa
in
sbb
xchg
sub
xor
lea
mov
cli
pop
into
pop
push
xor
mov
jnp
adc
clc
adc
test
xchg
mov
lods
cltd
pop
rorb
cltd
nop
cmp
mov
xchg
int3
pop
sti
mov
push
jno
vunpcklps
pop
jge
dec
pop
xor
inc
fldcw
xchg
xchg
ljmp
cmp
push
pop
mov
lret
cs
inc
js
jmp
jae
jg,pn
sub
pop
cmp
nop
or
jp
jb
mov
dec
adc
je
xchg
push
jecxz
shlb
fiadds
call
sub
mov
mov
dec
int3
mov
icebp
pop
jg
pop
inc
scas
out
insl
inc
aad
xchg
das
xor
and
mov
into
mov
shl
stos
cmp
cwtl
mov
cmpsl
mov
and
icebp
sub
sbb
and
lret
std
orl
in
mov
xchg
sub
mov
jg
mov
xchg
sub
cltd
fcmovnbe
xor
dec
ret
cmp
stos
cmp
dec
insl
mov
mov
xchg
leave
dec
ljmp
mov
mov
pop
loop
and
mov
dec
or
call
test
inc
push
mov
or
dec
clc
dec
inc
pusha
xchg
movsl
sbb
dec
ja
push
mov
stos
push
mov
lea
movsb
inc
std
decl
and
or
aaa
dec
xor
mov
pop
xchg
xor
test
shlb
ja
xchg
lock
pop
out
ret
inc
mov
fwait
and
mov
add
mov
out
bound
mull
test
jno
push
jp
xchg
fs
adc
and
aad
pop
sub
mov
jne
mov
mov
mov
jne
test
out
and
xchg
insb
xchg
and
shlb
cmp
stc
push
sub
adc
pop
mov
add
mov
mov
xor
clc
jnp
fucom
jle
sbb
mov
daa
insl
mov
ret
xchg
pop
movl
shll
fs
int3
sbb
popf
pop
mov
ffreep
ljmp
imul
scas
xor
adc
in
mov
cmpsl
mov
mov
fs
ss
push
sahf
inc
adc
pop
push
or
push
or
in
jge
mov
rcrl
pop
adc
pop
and
scas
pop
and
aaa
in
cmp
add
adc
push
pop
shrb
int3
push
sarl
dec
push
sbb
jae
daa
mov
and
inc
pushf
and
jge
jl
adc
repz
gs
xor
pop
xchg
scas
sub
cli
mov
test
push
repnz
add
cmpsb
cli
mov
enter
pop
jmp
mov
push
sub
cmp
ds
xchg
movsl
stos
stos
mov
out
pop
insl
popl
das
xor
xchg
sbb
popf
outsb
xor
jmp
pushf
flds
in
xor
pop
lahf
cli
ljmp
imul
dec
pop
push
outsb
imul
rclb
cmp
mov
int
mov
cld
in
sbb
mov
mov
or
dec
addl
fsubs
dec
rol
aas
mov
stos
sahf
fldcw
pop
orb
outsl
ja
pop
loop
mov
stc
adcl
adc
mov
cwtl
fcomps
inc
cli
outsb
in
xor
out
cmp
pop
adc
into
cmp
push
in
adc
test
adc
outsb
cmp
xchg
push
adc
mov
and
mov
lods
andb
xchg
mov
xlat
fdivrs
loope
cmp
sbb
imul
dec
loopne
mov
inc
inc
arpl
jmp
les
mov
mov
lods
push
pop
sbb
pushf
dec
jmp
sahf
stos
mov
mov
lods
gs
repnz
arpl
loop
rcl
dec
in
notb
arpl
dec
mov
je
xchg
push
jecxz
xor
xchg
pop
lea
mov
cmp
call
subb
pushf
out
mov
rcr
add
jns
xor
cmp
mov
mov
pop
cmp
roll
mov
add
std
aam
cwtl
imul
mov
dec
mov
add
cld
dec
movsbl
insb
test
mov
mov
lock
mov
mov
in
imulb
mov
shrl
enter
mov
iret
sbb
cmp
xchg
or
sub
jecxz
mov
mov
jle
push
and
cmp
xor
jae
stos
add
push
lret
cltd
push
xor
repnz
xlat
mov
xor
stos
sbb
sbb
clc
mov
mov
lret
shl
icebp
es
std
lods
push
stos
inc
cld
mov
lcall
push
jg
push
ljmp
jle
xor
lock
xchg
xor
rorl
xchg
jle
js
repz
push
cld
dec
dec
shl
inc
push
dec
fisttpl
sbb
xchg
push
stos
in
fadds
xlat
mov
sub
mov
jmp
xchg
mov
clc
mov
pop
or
sahf
int3
pop
cli
mov
addr16
dec
mov
mov
jle
pop
loope
mov
sub
xor
mov
nop
pop
fbld
in
cs
into
jmp
std
out
pop
aam
hlt
lcall
js
pop
stos
jne
loope
leave
mov
insb
mov
xchg
jnp
inc
aas
jle
bound
iret
int3
insl
pusha
ret
iret
push
pop
dec
inc
adc
mov
lods
popf
add
xchg
mov
pop
jae
ficoml
sub
xchg
pop
stc
insl
sbb
sub
jnp
xchg
mov
imul
xorb
imul
leave
ret
movsb
shl
scas
jae
arpl
push
cwtl
or
negl
mov
add
mov
lods
in
adc
lods
fidivs
jp
js
ffree
std
cmp
lret
cmp
jbe
push
test
addr16
jge
push
imul
mov
pop
cmp
jns
out
icebp
and
insl
dec
and
insb
push
dec
test
popa
jo
add
into
je
push
int
test
loope
in
inc
nop
or
insl
in
lea
pop
sub
loope
push
fwait
sub
push
xor
movsl
mov
jbe
mov
mov
mov
add
imul
and
pop
shlb
add
xor
adc
cmp
cmp
outsb
int3
dec
loop
in
not
insb
jmp
add
outsl
stos
add
bound
cwtl
and
loopne
push
mov
bswap
mov
dec
sub
cmpsl
jb
enter
pop
idivb
mov
push
pop
sahf
jl
test
addb
xor
loop
push
je
cmp
mov
ja
ss
cmp
xlat
popa
daa
out
imul
cmp
cmp
or
and
and
out
jo
lods
pop
ss
pop
adc
jp
imul
sub
aam
or
arpl
mov
jno
sub
mov
mov
insb
cmp
ret
mov
jl
loopne
dec
sbb
cs
jmp
cmp
repz
das
in
jo
add
xlat
inc
stos
sbb
inc
push
adc
dec
in
popf
rcll
cs
cli
aad
add
ret
push
mov
add
aaa
dec
incl
je
call
aam
xchg
xchg
repnz
push
mov
or
mov
inc
sbb
inc
mov
test
pop
inc
mov
stc
outsl
das
out
jo
mov
mov
popf
and
or
rcll
jecxz
xor
std
movsb
adc
cwtl
es
cmpsl
mov
pop
mov
fwait
cld
jp
mov
mov
cmp
mov
aaa
mov
test
shlb
xchg
mov
jg
sar
ret
push
push
pop
es
test
loope
sub
ss
inc
jb
ljmp
mov
mov
mov
jbe
mov
shr
xchg
add
xchg
test
cmpsl
xor
mov
movsb
ret
fldl
pop
clc
xchg
das
sbb
outsb
sarl
jp
stos
xor
mov
xchg
xchg
xchg
dec
dec
or
sbb
fisttpll
std
pop
sbb
cmp
xchg
dec
cs
jns
ja
cltd
xchg
push
inc
movsl
insl
std
dec
addr16
addb
dec
daa
mov
add
mov
jge
pop
mov
sub
data16
xchg
add
push
mov
jo
mov
mov
andb
inc
jp
loope
mov
jno
mov
xchg
lock
dec
xchg
add
mov
sbb
ffreep
test
jmp
cltd
jge
sbbl
jmp
inc
mov
or
out
push
mov
add
and
push
bound
clc
jnp
insb
push
jle
fwait
mov
test
iret
leave
test
ret
push
pop
xor
les
jbe
add
push
aad
popf
sub
mov
frstor
mov
repz
fldcw
inc
loop
idivb
mov
xor
mov
dec
mov
leave
cmp
mov
cli
icebp
push
arpl
add
or
jb
lret
pavgw
pop
and
add
xchg
jg
outsb
jno
push
pop
inc
add
sbb
scas
fisttpll
cmp
pop
xchg
movsb
sub
jae
clc
fisubl
jge
lds
test
push
mov
mov
test
pusha
jno
mov
xchg
xchg
xchg
push
sub
call
jo
lret
lahf
in
ret
loopne
mov
xor
push
lods
out
js
pop
lock
pop
out
enter
pop
addr16
mov
jge
pop
push
cmp
xor
fsubs
and
xlat
popl
pop
jge
pop
aam
sbb
std
add
push
push
xor
int
pop
push
sub
arpl
pop
popf
mov
les
shl
jge
cmp
sub
outsb
das
inc
jg
sub
test
inc
sbb
sbb
dec
mov
aam
mov
into
sub
cmp
dec
push
mov
cmpb
shl
push
sub
pop
shl
add
out
sahf
pop
and
test
cmp
jg
lcall
stos
pop
stc
icebp
push
fs
ret
das
push
ss
insl
cmp
xchg
jp
out
iret
pop
cli
aam
call
cmp
ljmp
add
cmc
cmp
lret
pop
push
mov
add
mov
adc
out
add
cmp
test
dec
sbb
xlat
push
cmpsl
mov
mov
shr
xlat
xor
sti
or
fistl
gs
cwtl
loopne
daa
fwait
dec
jns
roll
movsl
fsts
jl
and
into
dec
xchg
xor
mov
int3
inc
pushf
adc
and
lods
adc
rcrl
imul
cs
xor
nop
sahf
or
mov
arpl
dec
jbe
stos
je
nop
adc
cltd
inc
aaa
lea
pop
mov
das
jns
mov
mov
mov
outsl
xorl
dec
fildl
xor
inc
es
sub
mov
outsl
das
mov
lahf
pop
xor
jae
or
dec
xor
cmpsl
mov
jb
inc
mov
cld
movsl
pop
jne
dec
rcll
mov
sbb
pop
pop
std
dec
or
sub
and
out
movsl
es
insl
push
arpl
ljmp
fsubrl
pushf
ja
mov
mov
xor
mov
and
ficompl
or
fdivl
test
mov
push
xchg
movl
xchg
insb
arpl
cmc
stos
and
ljmp
test
push
xor
sbb
or
xor
negl
sbb
mov
mov
test
stos
lods
ja
popa
jg
xor
mov
or
push
adc
icebp
push
mov
lds
add
or
jmp
push
jns
pop
sahf
in
insl
movsb
xchg
push
and
mov
dec
in
adc
mov
pop
jp
inc
push
mov
and
lret
mov
ljmp
pop
push
mov
mov
xchg
sahf
outsl
mov
xchg
fs
andb
or
sub
div
lcall
lods
lret
insb
jnp
pop
sbb
enter
mov
jbe
sub
es
dec
pop
insb
in
inc
sub
jae
clc
fists
adc
adc
das
mov
pusha
imul
or
dec
imul
pop
scas
pop
lods
lods
push
add
adc
sbb
repnz
fxtract
inc
pusha
das
inc
sbb
or
in
mov
aaa
inc
clc
je
push
fucom
add
mov
orb
pop
popf
xor
loope
xchg
add
xor
lods
scas
mov
inc
sbb
movsb
mov
sbb
jbe
in
jge
pop
push
sbb
into
ds
mov
sarl
jno
inc
in
jl
mov
push
push
fnsetpm(287
xor
outsl
xor
push
jae
xor
ja
std
inc
scas
push
and
in
pop
adc
enter
pop
cmpsb
data16
sbb
loope
fisubrs
aas
xchg
cmp
add
ds
ljmp
mov
aaa
je
sub
push
pop
push
adc
das
xor
cmpsb
in
dec
pop
jl
jbe
sahf
gs
sbb
jbe
or
push
shlb
fsubrl
cmp
xchg
cmp
adc
and
jg
daa
jle
adc
jae
mov
mov
and
lds
mov
xlat
mov
lods
pop
in
notl
mov
push
mov
cli
sbb
cmp
in
test
call
inc
loop
jne
stc
test
pusha
fs
dec
adc
bound
push
cmpsb
xchg
cmp
dec
daa
mov
cli
pop
hlt
pop
xor
hlt
cmp
outsl
dec
or
rolb
add
mov
adc
mov
adc
clc
pop
add
add
lods
xor
and
xlat
xchg
popa
mov
mov
inc
imul
pop
or
cli
push
gs
loopne
xchg
mov
inc
out
flds
dec
outsb
rep
mov
xchg
notb
pusha
cmp
pop
sbb
inc
adc
jle
jmp
stos
mov
or
push
aad
pop
push
jns
fwait
aas
inc
mov
jb
mov
mov
jmp
xor
stos
sub
jp
jae
stos
pop
push
mov
fisubs
dec
sbb
rorl
mov
xor
hlt
pop
or
pop
inc
inc
stos
and
lods
out
mov
imulb
and
test
shr
xchg
inc
divb
ss
pushf
mov
mov
dec
mov
mov
cld
rol
movsb
lret
mov
pop
je
aam
imul
lret
sbb
arpl
fcoml
sub
xor
jne
lahf
es
sbb
dec
and
test
push
adc
ja
lods
std
fldcw
sbb
and
inc
bound
seto
lret
cltd
cmc
add
test
pop
xorb
hlt
movsb
fisttpll
fidivrl
xchg
negl
jecxz
xchg
shr
fbld
stos
setg
out
ret
insb
jns
adc
or
incl
repz
xor
push
push
mov
mov
imul
test
jo
ja
lods
dec
sub
jno
shrl
setnp
mov
push
xchg
js
add
sub
xor
add
bound
lret
jns
cmp
in
mov
es
pushf
jnp
mov
mov
addr16
clc
jp
push
mov
jnp
mov
dec
pop
and
jne
mov
xlat
filds
and
jmp
das
mov
repz
icebp
or
or
add
push
xor
xor
and
pop
push
insb
clc
xchg
loopne
into
or
adc
test
pusha
xchg
lahf
mov
ret
ss
mov
and
push
fcomps
popf
jns
mov
inc
fistpl
xchg
popa
xor
dec
cs
scas
mov
insb
push
adc
mov
hlt
repnz
pop
leave
sub
cmpsb
hlt
nop
ljmp
push
dec
pop
or
push
gs
or
test
je
insl
pop
cld
pop
int3
lahf
fstp
pop
daa
mov
or
inc
push
scas
fwait
push
mov
xorl
push
jae
movsb
aas
in
push
xchg
repz
fcoms
jge
into
ret
imul
cmp
gs
scas
jle
jno
mov
xor
lret
lahf
sub
push
inc
ljmp
inc
cmp
mov
push
pop
je
inc
scas
dec
enter
pop
in
shrb
mov
loope
pop
fldcw
jmp
mov
jns
push
movsl
mov
push
mov
push
mov
add
pop
xor
lcall
mov
repz
fwait
pop
push
lcall
int
rcrl
xor
pop
fwait
and
sbb
sar
mov
jg
jg
mov
xchg
mov
mov
icebp
cmpsl
and
dec
push
mov
adc
sub
jmp
not
loopne
mov
mov
clc
pop
cmp
shld
repz
jb
stc
pop
aam
fs
jecxz
adc
imul
cmp
or
out
daa
nop
cli
cmp
xor
push
cmp
enter
outsl
stos
into
leave
popa
jle
leave
dec
inc
xor
int3
in
pop
fnstcw
mov
pop
dec
add
and
lods
sbb
pusha
mov
pmovmskb
lahf
xchg
sub
and
mov
and
xchg
cli
gs
cld
mov
out
cmovb
cmp
fnstcw
into
mov
xchg
mov
push
inc
cmp
mov
mov
rcrl
dec
outsb
lds
push
or
fisttps
jb
dec
orl
and
mov
lahf
add
call
in
je
ds
movsb
out
dec
arpl
rcrl
jo
push
lds
inc
pop
mov
out
mov
lods
pop
push
and
jbe
sarl
hlt
cmp
cwtl
push
outsl
shlb
cmpsl
or
cld
sti
dec
test
loop
adc
fwait
adc
lock
out
cmp
push
shrb
or
daa
add
cld
es
ss
dec
sbb
test
popa
aas
test
lods
push
popa
cmc
mov
dec
outsb
push
mov
out
xchg
inc
pop
xchg
cltd
sub
pop
test
xor
mov
jg
push
or
fnsave
mov
xchg
clc
or
xchg
pop
not
inc
ja
pop
test
pop
push
out
es
add
push
jmp
jecxz
cmpsb
int3
sub
adc
jbe
bound
cmp
outsb
inc
mov
shlb
dec
sbb
aam
fs
xor
jl
sbb
inc
push
jle
mov
xor
push
aaa
popl
add
out
bound
aas
jns
adc
mov
icebp
mov
sbb
out
popa
addr16
add
sbb
mov
cmc
mov
in
and
lahf
push
jne
jg
mov
sub
inc
xchg
inc
shll
sarl
xchg
cli
xor
push
out
out
mov
sub
cld
insl
mov
stos
inc
aas
and
sbb
jnp
xorl
jmp
popa
pusha
cs
ja
out
jnp
stos
xor
ficompl
inc
inc
dec
ret
inc
fs
fwait
push
es
mov
out
xlat
inc
pop
pop
xchg
call
inc
sbb
sub
imul
dec
scas
pop
jb
push
mov
mov
ret
mov
inc
jmp
nop
hlt
inc
push
rorb
lahf
sub
les
or
imul
mov
push
sti
int
fdivrp
cli
imul
push
shrb
scas
jp
jl
push
fistpl
or
movsb
lret
push
in
xorb
ss
sub
sbb
cmp
inc
pop
dec
jno
sub
in
loopne
push
aam
mov
call
jo
mov
lahf
dec
leave
std
push
sbb
and
or
das
sbb
sub
lods
enter
pop
and
subl
clc
xor
xchg
cmp
lcall
cmc
push
mov
push
jns
sbb
sbb
movsb
fildll
imul
pop
lret
js
push
lea
sbb
lcall
sbb
jle
mov
mul
outsb
pop
mul
adc
fsubs
jg
fidivl
mov
shrb
data16
push
ret
int
cs
sub
cmpsl
lret
inc
shll
stos
sbb
cmp
sahf
or
testb
pusha
fisubrs
sub
loop
movsb
cmp
push
jmp
adc
in
push
mov
fdivrs
ret
cmp
out
sbb
cli
insl
andb
mov
roll
into
lods
fxch
cmc
nop
dec
mov
pop
mov
jmp
cs
imul
shll
mov
pop
mov
jmp
adc
sub
out
mov
sbb
aam
stos
incb
gs
orb
test
dec
xchg
push
mov
hlt
pop
fprem1
fildll
repz
inc
sub
xor
cli
cmp
in
sbb
and
imul
dec
jp
jmp
pop
sub
rcrl
cmc
nop
das
mov
fidivs
adc
dec
fucomi
popa
je
andl
mov
jno
call
mov
pop
ret
cmpl
cmpb
xchg
cs
push
inc
inc
inc
fsubr
aas
inc
ja
xor
mov
fs
and
cwtl
xchg
rorl
jg
inc
in
mov
cmpsl
mov
dec
mov
ss
cld
es
lret
xchg
add
mov
es
lock
pop
pop
fmul
rolb
inc
lcall
shrb
es
xchg
inc
out
ljmp
jmp
rcl
mov
mov
push
ficomps
cmovle
add
outsb
cltd
arpl
test
pusha
jns
fdivrp
add
adc
clc
mov
xchg
jge
dec
fnsave
cltd
xor
stos
in
xor
out
mov
sub
loop
incl
sub
or
pop
mov
mov
ret
pushf
or
test
mov
ja
shlb
push
shlb
or
pop
fwait
jno,pt
push
ficompl
mov
pop
imul
inc
dec
int3
bound
cmpsb
in
push
mov
sub
rcll
adc
xchg
cld
mov
push
outsb
mov
push
adc
jne
stos
stc
mov
pop
out
inc
pop
xchg
pop
mov
insl
xchg
lds
adcl
out
in
or
imull
push
mov
inc
stos
mov
pop
and
insb
into
ja
jnp
mov
xchg
in
push
dec
pusha
leave
mov
iret
inc
pop
je
mov
jmp
dec
sar
jae
aad
push
pop
mov
mov
fldenv
addr16
movntq
sbb
std
adc
es
scas
addb
aad
dec
adc
fidivl
cltd
and
push
mov
hlt
arpl
testl
xor
push
or
or
inc
fiaddl
pop
mov
int3
inc
js
pop
sub
cld
fisubs
inc
test
test
scas
pop
nop
mov
test
sbb
movsb
push
sub
xor
sbb
mov
jge
push
jbe
mov
les
je
dec
jno
push
inc
jl
jb
dec
dec
sahf
push
mov
loopne
xchg
push
jo
nop
data16
imul
call
push
fcomp
cmp
pop
and
or
fucomip
adc
mov
arpl
call
loope
mov
adc
cmp
dec
ds
fsubl
nop
inc
push
andb
sbb
repnz
scas
mov
xor
xchg
or
pop
icebp
mov
mov
lcall
cmp
sub
sub
hlt
test
les
adc
mov
in
jg
cmp
mov
fbld
jne
sub
lds
int
das
inc
sub
insb
movsl
lret
xchg
dec
hlt
rorl
sahf
stos
jp
test
cmp
mov
aaa
loop
or
stc
int
call
adc
xlat
ss
mov
cmp
jle
insl
out
push
cli
mov
cmc
mov
or
inc
mov
push
movsl
sub
aaa
mov
lock
and
popf
aad
sub
outsb
add
xchg
lods
ljmp
xlat
push
test
sub
dec
mov
adcl
and
addr16
idivb
loopne
and
dec
cmc
mov
in
sub
add
rolb
sbb
leave
xchg
aas
pop
cmp
inc
mov
pop
out
testb
hlt
mov
jmp
pop
pop
cs
movsl
aad
inc
popf
nop
or
popf
jb
or
dec
push
jne
je
jns
jecxz
cmpb
xor
scas
jmp
call
bound
mov
sbb
shl
decl
mov
pop
hlt
adcl
das
dec
xor
test
and
or
jp
jg
sbb
out
add
mov
dec
mov
or
call
or
test
add
sub
mov
in
mov
add
ret
and
es
sub
add
or
adc
pop
ljmp
fldt
aaa
jle
push
pop
xchg
and
fstl
adc
lods
push
daa
add
sbbb
loopne
mov
mov
mov
add
ret
push
and
cld
adc
cs
jmp
and
in
out
xchg
ljmp
jmp
mov
xor
dec
pop
xor
xor
mov
jns
dec
jmp
cmp
mov
jae
add
inc
inc
cwtl
inc
orl
fistps
jge
int3
add
jns
aam
and
dec
bound
mov
jns
mov
in
mov
mov
inc
and
pop
pop
adc
jp
lds
arpl
cld
push
les
add
jne
cmp
fs
sbb
cli
lret
xchg
ljmp
xchg
nop
dec
into
and
and
xchg
mov
or
add
stos
daa
jo
and
sbb
jnp
mov
outsl
in
dec
pusha
xlat
sbb
movsb
jno
ret
mov
inc
push
movsl
jb
andl
dec
mov
pop
push
fimull
arpl
dec
mov
les
sbb
cli
adc
mov
repnz
xlat
and
lea
or
orb
arpl
fdivs
inc
ret
movsl
or
leave
out
add
inc
push
pop
pop
jbe
fiadds
lcall
add
scas
cmp
and
mov
ja
jo
loopne
or
xchg
mov
jge
mov
sbb
mov
daa
mov
push
jno
mov
loope
mov
scas
sub
lea
lahf
mov
shrb
mov
pop
cmpsb
pushf
pop
in
neg
icebp
enter
pop
mov
nop
shl
mov
jo
out
fstpt
loop
movsl
sub
fmul
out
xorb
sbb
jno
add
ffreep
xor
fwait
ljmp
push
dec
pop
sbb
lcall
mov
sub
push
outsb
push
xchg
mov
rorb
sahf
gs
push
or
or
sbb
test
imul
mov
int
adc
xor
adc
inc
shl
and
inc
or
movsb
das
arpl
nop
mov
xchg
stc
test
fs
push
mov
movsb
adc
pop
fdivrs
mov
sub
shl
pop
xor
dec
movsl
cmp
int3
xchg
or
in
into
jb
cmc
cmc
push
push
xor
sub
adc
or
adc
xchg
add
mov
data16
cmp
outsl
and
sub
int3
in
fmulp
shr
outsl
aad
xor
decb
fisubl
xor
adc
push
sub
inc
pop
add
pop
dec
sbb
call
sub
sbb
cmp
aad
pop
mov
leave
adc
adc
lahf
lds
das
and
cs
and
aad
mov
nop
in
aas
aas
mov
xor
dec
leave
sahf
push
je
mov
out
mov
lea
dec
sub
and
mov
dec
and
mov
pop
xchg
mov
inc
out
testb
and
sub
xchg
mov
rolb
jle
xlat
cmp
test
inc
std
mov
inc
cwtl
mov
xchg
mov
in
clc
cld
jl
lahf
lret
jne
mov
jne
lock
pop
cwtl
sahf
adc
sub
sub
lods
and
mov
es
insb
mov
dec
push
push
xchg
sarl
ljmp
dec
lods
test
ds
pop
ljmp
or
jo
orb
cltd
shrl
test
mov
mov
shrl
sub
xchg
clc
daa
mov
xchg
inc
sbb
adc
dec
stos
lret
fidivrl
xchg
xor
mov
incl
aaa
decb
fiaddl
mov
leave
lret
push
std
or
aad
mov
jno
movsl
dec
hlt
mov
pop
or
fimuls
pushf
aas
mov
and
sbb
out
jmp
ja
lret
jns
ja
in
ds
xchg
ficomps
mov
gs
mov
pop
pop
iret
sets
jp
test
mov
les
mov
xor
dec
in
js
add
mov
cmc
outsb
fistpll
in
xchg
mov
sbb
pop
fcoms
xorl
out
mov
sub
in
sub
xor
xor
push
mov
gs
jp
jle
test
add
inc
pusha
call
gs
add
mov
in
dec
pop
jg
test
jae
mov
xchg
popf
adc
pop
add
mov
cltd
cmpsl
xchg
mov
sbb
imul
andnps
movups
xchg
mov
aas
sbb
push
hlt
mov
jb
inc
sub
or
push
shrl
aaa
add
or
push
filds
xor
loop
pop
mov
dec
fsubrp
sub
sub
mov
sub
and
inc
aad
cs
or
push
pop
jbe
jbe
bound
xchg
daa
scas
addl
insl
jno
adc
adc
or
jge
les
mov
push
xchg
popa
or
outsb
enter
rcr
cmpsb
adc
mov
pop
loope
mov
loope
lods
cs
cmp
dec
pop
movsl
loop
xchg
and
sub
orb
push
add
pop
push
xor
mov
mov
js
hlt
in
xchg
divb
push
jae
mov
sub
pop
shrl
cmp
shrb
in
jg
add
rorl
outsl
es
and
mov
or
adc
sub
shlb
add
insl
or
mov
loop
sbb
stos
test
es
and
inc
outsl
outsl
mov
stc
cmp
outsb
or
stos
ss
loope
cmp
hlt
xor
out
pop
xor
xor
jne
or
into
into
push
stc
aaa
cmc
in
mov
in
mov
scas
adc
imul
sarl
push
rclb
push
cmpsb
xlat
rol
or
push
int
mov
pop
pop
fdivr
loope
cs
lods
mov
gs
add
int3
xchg
ret
dec
mov
cltd
inc
outsb
push
sbb
and
repz
scas
xchg
lds
cmp
xchg
scas
lret
pop
push
sub
adc
push
pushf
dec
test
xchg
cs
mov
xchg
aas
pop
fmuls
dec
inc
insb
jp
bound
jecxz
fs
stos
jmp
lea
push
call
loopne
mov
addl
mov
inc
pop
cmp
ja
insl
stos
jle
enter
pop
sarl
mov
mov
cmp
jns
clc
testb
repnz
inc
into
and
jae
xchg
icebp
mov
rcrb
in
orl
jecxz
ds
mov
sar
push
sub
das
aam
clc
dec
adc
aam
fisubrl
ss
or
cmp
nop
rcrl
fwait
and
mov
xchg
jnp
and
adc
cltd
packssdw
push
cltd
or
jge
dec
fdivrl
dec
or
fstl
sub
fstpt
xchg
sahf
jae
bound
mov
stos
mov
push
sbb
push
mov
inc
xor
mov
adc
mov
int3
outsl
dec
mov
addr16
clc
sbb
xor
in
out
fiadds
fs
or
fdivr
fwait
lret
int3
aam
ret
jno
add
scas
shll
fidivs
fidivrs
loopne
in
xor
idiv
mov
shlb
gs
fsubrs
jp
inc
aas
mov
push
sub
out
dec
push
jns
leave
or
sbb
pop
fistps
aam
jmp
es
aad
xchg
dec
subb
in
push
jo
add
xor
jnp
add
in
test
pusha
lcall
ret
fcomps
clc
aaa
inc
insl
dec
shlb
fcoms
cmpsl
movsb
popfw
cmp
jne
xchg
lods
insl
inc
push
xchg
xchg
adc
xchg
sbb
push
imul
test
xchg
clc
adc
mov
xchg
xchg
pop
leave
jnp
or
pop
xchg
pop
arpl
inc
inc
sub
and
iret
popa
outsb
aaa
rolb
add
fiaddl
int3
mov
int3
add
rcrl
add
mov
in
lds
xchg
test
bound
cmp
jecxz
movsb
testb
jbe
inc
inc
jge
jl
sbb
movsb
dec
cmp
test
jl
iret
or
xchg
and
pusha
push
fdivs
xchg
mov
cmp
test
cmp
push
cmpsb
xchg
or
in
lds
cs
pop
and
shrb
imul
dec
movsb
mov
sub
movsl
jmp
aas
ret
scas
lods
sbbb
add
das
test
ja
in
pop
or
js
addr16
pop
push
sub
cmp
neg
sub
in
sub
in
adc
inc
mov
shll
stc
or
and
cmp
jno
mov
popl
lret
jmp
adc
push
sbb
pop
or
mov
xchg
cmpb
outsl
dec
bound
cmpsb
jb
stc
repnz
adc
xlat
ss
scas
nop
cmp
scas
push
js
lea
fs
cmp
cli
xor
or
repnz
or
or
cmp
cmc
lods
adc
dec
fstl
pop
orl
nop
dec
fwait
adc
inc
mov
dec
adc
pop
repnz
lahf
stos
mov
nop
xlat
setae
sub
sub
in
les
aad
nop
dec
std
shr
xchg
gs
dec
loopne
outsl
orl
mov
les
jb
sub
xchg
fistpl
scas
lret
adc
rorb
adc
jno
pushf
cmc
pusha
cmc
jmp
mull
cs
jge
aad
mov
cli
aas
cli
test
dec
mov
imul
xor
scas
call
call
lahf
mov
mov
push
jl
xchg
insl
cmp
cli
std
push
pop
imul
mov
das
out
repnz
inc
sub
and
cmp
jno
testb
std
faddl
sbbb
fwait
mov
xchg
inc
pop
cld
rolb
push
mov
pop
mov
push
xchg
js,pt
pop
je
ror
movsb
mov
outsb
or
ret
iret
stos
outsb
es
dec
pop
insl
mov
lods
sub
add
popa
mov
xchg
xor
scas
and
scas
mov
bswap
sub
cmpsb
jle
cltd
aas
cli
mov
mov
xchg
popf
push
fld
push
fnstsw
jmp
xchg
les
adc
xchg
stos
test
cmc
test
xor
ret
xor
jmp
xor
push
popa
mov
iret
enter
pop
jbe
lret
xor
and
jns
inc
pop
stos
loope
push
scas
bound
dec
jne
jbe
add
lret
out
mov
out
jns
in
mov
mov
test
mov
add
mov
lea
fs
mov
call
inc
mov
dec
stos
pusha
cltd
jne
cmp
out
fistpll
fwait
cmc
jmp
icebp
jmp
adcl
lock
jecxz
sbb
lods
dec
stos
cmp
and
xor
jnp
dec
pop
jle
mov
in
pop
out
pusha
xor
enter
aam
pop
in
mov
cli
jae
mov
push
push
mov
arpl
mov
aad
xor
popa
jmp
mov
imul
loope
icebp
sti
and
mov
in
jmp
repnz
push
mov
arpl
add
or
dec
test
jg
fmuls
negl
test
out
push
fisubrs
imul
scas
aad
or
cmc
ffree
cmp
notl
popf
push
jbe
data16
dec
mov
daa
lods
dec
outsb
cmp
sub
popa
inc
jl
jmp
dec
or
push
inc
sets
in
shll
push
cmp
sub
add
xchg
xchg
iret
cmpsb
sbb
xor
enter
pop
pop
xchg
out
loope
das
sub
dec
out
ds
xorl
and
dec
stc
cmpsb
xor
scas
pushf
negl
fcmovnb
jbe
fistl
xor
mov
cmp
mov
pop
xchg
fst
lcall
mov
sub
sub
arpl
insb
jg
loope
mov
out
mov
lahf
mov
cmp
mov
mov
int
sbb
dec
testl
xor
test
push
mov
xchg
sbb
adc
sahf
aaa
adc
addb
cmp
loop
test
stc
test
lcall
fcomi
sub
push
std
out
mov
xor
cmp
inc
imul
sbb
cmc
jae
in
mov
mov
adc
or
leave
sbb
add
mov
pop
loope
lods
xchg
not
dec
jmp
mov
in
das
mov
sti
aas
clc
cmp
cmp
adc
loopne
pop
add
jno
out
xchg
cwtl
sbb
or
push
les
enter
stos
xchg
dec
and
sbb
ljmp
pop
mov
pop
mov
push
jge
rclb
aad
push
pop
nop
jbe
pop
aas
cltd
xor
testb
pop
je
mov
dec
mov
test
call
pop
jns
mov
roll
subl
cs
jge
mov
inc
jnp
sbb
adc
mov
mov
and
sub
rcll
fiaddl
testb
pusha
cwtl
mov
sub
fwait
icebp
imul
inc
lret
ret
mov
mov
pop
clc
lock
mov
pop
cmc
gs
shlb
jmp
aam
mov
ret
pop
dec
iret
es
mov
dec
ljmp
adcb
enter
sub
adc
and
dec
bound
add
mov
test
ss
mov
rcr
frstor
out
xchg
or
rorl
pop
stos
lock
js
jge
push
dec
enter
cmc
jmp
mov
or
shll
mov
mov
shlb
dec
test
test
inc
pop
scas
ja
das
push
dec
int
ss
hlt
adc
inc
push
jmp
sub
lods
push
or
mov
std
jecxz
add
daa
bound
jns
popf
jns
dec
adc
jl
int3
mov
dec
movsb
pop
addr16
lods
jp
mov
mov
roll
test
test
dec
lea
xor
fsubrl
test
xchg
mov
sbb
int
sub
ficomps
lahf
push
out
inc
or
scas
sub
jo
xchg
push
push
jle
adc
adc
cmp
inc
fcmovb
sbb
pop
loop
addl
mov
xchg
mov
push
mov
ficoml
or
testb
scas
jno
push
push
cmp
pop
adc
mov
and
cmp
lret
es
pushf
loopne
inc
xor
insl
or
lds
push
ds
jle
ljmp
int3
fidivl
xor
shl
loop
mov
jo
scas
mov
jno
mov
cmp
movsb
or
int3
push
mov
lcall
pop
faddl
cmp
xorl
pop
jl
fcmovnu
dec
jp
push
es
test
adc
lahf
add
and
pop
jno
loopne
xlat
push
iret
and
cmpsb
fwait
inc
jmp
enter
pop
sahf
rorb
aam
inc
sub
mov
mov
outsb
mov
mull
int
xchg
mov
imul
rclb
out
pop
xor
test
adc
add
jbe
int3
pop
adc
ss
popf
faddl
mov
jl
stos
mov
sar
push
adc
mov
cmp
mov
push
push
mov
ror
rolb
int
xchg
jb
test
aad
or
aas
scas
sarl
out
mov
xchg
ficompl
test
popa
jecxz
jb
popa
outsl
or
cmp
int3
adc
pandn
adc
xchg
imul
test
cmp
and
cltd
repnz
lahf
or
js
mov
cmp
lods
out
cmc
cmp
xor
push
imul
daa
cli
imul
out
push
sbb
push
jno
insl
imul
pop
arpl
sub
repnz
in
lcall
push
test
loopne
pop
testb
push
inc
cmpsl
mov
aas
push
les
popa
sub
push
and
and
repnz
outsb
cmp
push
pushf
dec
dec
dec
jmp
fimull
aad
push
aas
nop
push
repnz
aas
cmp
fwait
jb
jmp
ret
je
aas
loopne
and
rorb
subb
mov
add
add
xor
fldt
inc
inc
add
or
xchg
xchg
das
movsb
pop
cmp
scas
fst
and
inc
adc
data16
test
add
sub
je
movsb
cmpsl
stos
sbb
mov
inc
cli
cmp
sub
lret
xor
int3
mov
pop
and
hlt
cld
or
shlb
sub
aam
rclb
in
aaa
and
pop
xchg
insl
xchg
repnz
mov
shrl
lods
push
movsl
mov
ljmp
mov
mov
mov
fs
push
xor
jl
push
pop
push
cmp
adc
xchg
test
jnp
cmp
mov
add
nop
out
fistl
das
xchg
dec
loope
push
call
das
sbb
push
and
xor
arpl
mov
aad
orb
outsl
test
insb
xor
insl
fwait
pop
dec
rolb
or
into
inc
fwait
pop
or
push
lods
fucomp
add
add
cmp
jnp
push
bound
mov
mov
aam
jbe
sbb
mov
add
sbb
mov
jp
cmp
xor
mov
and
jne
fisttps
mov
ret
out
sti
pusha
es
or
and
jns
sete
push
cli
out
mov
invd
fsts
pop
stos
data16
call
insb
push
push
mov
sub
sub
in
cmp
pusha
imul
iret
jg
lcall
sub
inc
mov
hlt
push
lock
mov
inc
or
inc
rcll
xor
or
sbb
sbb
dec
cmp
arpl
pop
scas
aam
or
testb
pop
out
repnz
in
leave
loopne
mov
call
loop
inc
mov
data16
aaa
std
pop
decl
fldl
cmc
add
movsl
push
fidivs
lds
mov
scas
xchg
lea
cmp
jno
movsb
xchg
rcrl
push
idivb
lock
jge
xchg
jbe
rclb
xchg
daa
stos
pop
mov
jno
aas
mov
fisttpll
xor
push
or
xor
mov
mov
push
ficomps
lret
sbb
mov
cmpsb
push
adc
in
jp
add
negl
lcall
cli
sbb
jmp
push
sub
add
cmp
add
xchg
mov
and
repnz
aad
pop
sbb
fwait
add
popf
sbb
mov
mov
sub
xor
lcall
out
sub
mov
jg
sbb
adc
aad
in
jg
int3
or
pop
sti
adc
and
push
xor
xlat
jb
int
in
in
sub
ss
test
mov
mov
mov
ret
jge
push
test
sub
outsl
jmp
enter
or
fs
ss
rorb
dec
in
mov
out
daa
xor
rcrb
leave
xor
adc
xor
and
shlb
add
mov
pop
mov
inc
imul
cmp
stc
sub
lods
push
and
mov
cmc
xlat
int3
and
sub
xlat
out
push
push
mov
add
fwait
jb
cmp
pop
loopne
jno
dec
das
and
mov
ljmp
repz
xchg
rcrl
sbb
pusha
or
xchg
adc
adc
nop
jle
idivb
jmp
jb
xchg
out
aad
mov
nop
sub
mov
xlat
mov
scas
dec
sbb
push
je
das
jl
xor
mov
nop
lea
jle
call
fcoml
dec
sbbl
fcmovnu
adc
jle
inc
xor
shrb
cmpl
mov
lods
mov
shll
jg
std
shll
das
insl
cmpsl
stos
xchg
icebp
pop
or
icebp
lret
mov
mov
mov
xchg
mov
pop
xor
inc
mov
aam
imul
loopne
pop
insl
outsb
cmp
dec
cmc
in
xchg
cld
or
mov
lods
rcr
mov
and
mov
out
inc
add
xor
jle
jbe
fnsave
and
fucomp
aad
clc
dec
inc
rolb
cs
pop
add
xor
ds
lret
lcall
pop
rorb
sbb
xor
push
pop
xchg
sub
test
data16
sub
xor
inc
and
or
sbb
fwait
xchg
push
add
sbb
outsl
out
pop
daa
into
bound
ljmp
imul
in
pop
mov
add
jp
movsb
pusha
mov
out
mov
pop
les
jne
xchg
test
xchg
fsubl
mov
jo
rcll
shrb
sub
aam
gs
insb
add
and
cmc
cmp
stc
jnp
mov
fsub
and
pusha
push
arpl
iret
fiadds
ret
fcompl
aad
inc
cltd
xchg
jae
xor
mov
outsb
popf
fsubr
mov
inc
push
icebp
fidivrl
rcll
dec
jmp
jl
aaa
movsl
aaa
push
mov
mov
fiadds
cmp
xor
fldenv
sub
cmp
or
mov
imul
ret
sub
adc
ficoms
call
popa
rolb
scas
jb
shll
scas
dec
xlat
cmp
xchg
inc
movsb
and
pop
push
pop
or
jbe
mov
movsl
push
les
out
daa
stos
push
leave
cmp
dec
mov
add
jmp
inc
cltd
push
in
add
jo
aam
lahf
inc
xor
test
gs
les
xor
cmpsb
mov
inc
enter
pop
sbb
lods
push
xchg
jmp
sub
and
add
ds
xchg
movsl
add
push
rorl
and
sbb
add
mov
add
pop
add
mov
adc
rcrl
es
adc
xor
outsb
int
outsb
jo
aas
adc
mov
movsb
jg
inc
and
aad
dec
mov
lret
fisubrs
fcmovb
aas
int
sub
testl
fsts
mov
shll
into
ror
subb
movsb
loop
cmpb
fs
and
xchg
loopne
movsb
jo
cmp
fwait
mov
out
cmp
add
inc
outsb
cmp
das
mov
into
call
xor
jns
in
push
imul
add
fnsave
mov
out
xlat
or
sub
fiadds
sti
dec
xchg
mov
gs
dec
pushf
loopne
cltd
in
dec
mov
jl
int
sbb
jmp
inc
repz
xchg
xchg
sub
sbb
fwait
out
stos
adc
and
pushf
mov
into
subl
jmp
add
aas
jbe
or
jl
dec
xchg
or
inc
inc
pop
mov
xor
call
fwait
in
mov
xchg
repz
mov
fisttpl
inc
sub
std
movsl
inc
adc
adc
bound
ljmp
and
roll
je
push
cmp
std
js
xor
ljmp
mov
out
inc
adc
jle
insl
lret
push
mov
dec
jbe
lcall
pop
push
push
dec
rcrb
xchg
out
dec
add
aam
pop
push
ret
or
fs
insl
push
int
dec
lock
fsts
iret
add
popa
push
dec
jbe
sub
sahf
mov
inc
adc
mov
mov
inc
sub
cltd
sbb
arpl
jb
push
in
fstl
push
mov
loope
loope
push
sbb
add
mov
cmp
push
sahf
imul
xor
int3
sbb
xor
ret
in
ja
test
repz
ja
dec
dec
cmpsb
popa
enter
xchg
or
ds
mov
insl
push
repnz
add
ss
mov
pop
jg
stos
xchg
in
fxch
xchg
mov
stos
lods
mov
jns
xchg
addr16
cmp
shlb
daa
sbb
sub
jne
adc
loope
fcomp
cmp
add
addr16
mov
sbb
xchg
je
and
outsb
sub
iret
cmp
and
hlt
mov
sub
sbb
in
stos
arpl
adc
inc
ret
mov
inc
movsb
test
jae
aam
push
jbe
popf
decl
mov
push
loopne
sub
sbb
imul
scas
lcall
adc
sbb
repnz
pop
leave
into
imul
arpl
mov
inc
cmp
jae
xor
mov
imul
add
ret
aaa
push
add
jmp
fidivrs
cld
lods
rcrb
push
push
scas
and
inc
cmp
popf
movsb
lods
push
jns
lods
pop
push
jbe
cmpl
dec
insl
call
daa
test
xchg
in
jno
lods
scas
jl
movsb
orl
xchg
push
xor
pop
push
sbbb
sub
test
xor
inc
roll
cmpsb
and
in
dec
int3
test
pop
test
loope
in
sub
adc
cmp
popa
shlb
push
lods
nop
cmp
test
mov
inc
add
ss
xor
sbb
inc
xchg
mov
test
rolb
xchg
fucomi
lcall
xchg
faddl
cld
sbb
adc
mov
jl
cmpsb
fdivs
mov
mov
dec
cli
and
stos
push
fldl
sub
push
nop
testl
push
roll
mov
jo
into
test
test
cmp
test
xchg
stc
test
fs
xchg
adc
jle
ss
in
xchg
cmp
push
mov
push
cli
cmp
xor
rclb
into
cmpsl
hlt
cld
cmc
fwait
test
pusha
pop
leave
cltd
and
imul
mov
outsw
ljmp
in
xlat
dec
push
sub
xchg
pop
mov
fistpl
sti
sti
dec
jge
jg
mov
cs
loopne
push
dec
in
mov
inc
loopne
inc
ftst
mov
les
add
xchg
push
insl
add
cmp
push
nop
fldcw
pop
xchg
pushf
dec
arpl
jmp
out
dec
cs
or
aad
mov
out
aas
adc
adc
dec
or
xor
push
jno
mov
into
jno
repz
pop
mov
orl
mov
pop
or
mov
inc
push
adc
inc
or
mov
sarl
xor
mov
notb
xor
cmpsl
test
dec
mov
lds
in
lret
jle
mov
mov
pop
in
add
push
shr
rcrl
sub
aam
popf
out
lcall
insl
cmp
inc
dec
jmp
scas
xchg
jp
sahf
ljmp
into
lods
xchg
mov
adc
nop
bound
mov
ljmp
mov
cltd
push
rsqrtps
push
je
test
adc
cmp
xchg
clc
lock
xchg
lar
xchg
sub
shrl
cmp
stos
push
cmp
jg
and
and
jns
or
xor
pop
or
int3
inc
xor
outsl
dec
mov
fidivs
cltd
test
adc
adc
cltd
sbb
xchg
or
xor
in
in
xchg
frstor
sbb
out
sbb
jge
iret
cld
dec
jns
enter
les
mov
neg
mov
xor
lods
or
sbb
pop
mov
mov
mov
cmp
dec
sbb
test
mov
das
fistps
movsl
xchg
orb
xchg
call
cltd
cmp
cmpsb
inc
cs
lret
push
ljmp
and
dec
imull
test
push
ss
xchg
ds
cmp
sbb
pushf
push
adc
imul
pop
jae
lds
popf
es
sarl
push
ds
jge
xchg
push
mov
mov
scas
std
jns
push
push
fcompl
push
add
in
imul
mov
leave
inc
loope
hlt
leave
aaa
push
arpl
cmpb
fwait
adc
aaa
cmp
add
mov
cmp
push
incb
xchg
pop
shll
mov
shlb
scas
xor
and
hlt
fidivrl
das
ret
cmp
push
sti
clc
sbb
in
out
repz
push
sbb
inc
xchg
daa
test
pusha
cmp
and
sbb
jl
in
dec
ss
push
mov
cli
xor
mov
pop
lahf
xorb
push
test
push
sti
fstpl
bound
int
das
xor
mov
lcall
loope
jmp
sub
fadds
pop
sub
ds
cmp
adc
and
pop
decl
push
aam
sbb
jb
add
add
xor
stos
mov
js
cmp
pop
adc
adc
test
push
sub
outsb
ss
adc
data16
jg
dec
add
mov
mov
mov
and
jne
loopne
adc
push
push
subl
cmp
aam
adc
rcrl
fcompl
std
or
data16
sbb
inc
outsl
mov
imul
out
cmp
push
das
stos
mov
sub
xchg
cmp
adc
out
jmp
pop
xor
inc
jnp
jb
call
cmc
push
jl
xor
pop
pop
call
xorb
ljmp
cmpsb
push
test
je
lods
or
inc
xlat
mov
jns
dec
mov
inc
adc
sti
stos
into
movsb
mov
jecxz
loopne
daa
jmp
inc
repz
mov
les
push
sbb
fistpl
adc
je
hlt
adc
repz
rclb
aad
das
rcll
mov
pusha
jb
fidivs
je
clc
lods
jecxz
loope
mov
cmp
outsb
div
mov
pop
mov
scas
fsubs
dec
jl
stc
fldt
enter
or
enter
push
andl
jle
cmp
mov
or
std
out
cwtl
pusha
jbe
cmpsl
cmpsl
in
pop
mov
pushf
sbb
push
lret
in
push
mov
push
sbb
pusha
idivb
nop
push
sub
rolb
cmp
or
es
mov
push
pop
xchg
mov
lcall
cmp
sub
add
mov
mov
xor
push
push
jno
add
fadds
sbb
jl
mov
mov
mov
ja
push
imul
frstor
xchg
clc
jmp
xchg
rcrb
mov
cmp
add
jge
addr16
xchg
imul
push
jnp
push
xor
jle
xor
jo
mov
loope
addr16
mov
push
lods
lret
imul
inc
out
ret
or
std
mov
push
cmp
add
insb
fadds
bound
xor
lods
adc
add
stos
xchg
push
pop
je
lret
mov
mov
out
pop
out
addr16
or
mov
adc
mov
test
out
jns
cmp
sbb
xchg
rolb
ja
scas
xchg
push
mov
bound
sub
jmp
sub
daa
sub
lds
xor
sti
aam
xor
loope
and
inc
jnp
sbb
jle
iret
popf
in
test
pusha
xlat
mov
iret
sti
loop
ret
lret
mov
inc
mov
sti
xchg
push
cld
cmpsl
inc
popf
dec
mov
mov
iret
stos
mov
xchg
jne
negl
outsb
ljmp
fwait
push
adc
movb
call
stos
leave
mov
dec
inc
arpl
xchg
pop
inc
inc
or
or
sub
ja
stc
mov
or
fs
jno
sbb
push
xchg
fiadds
sti
outsb
lds
or
xchg
jns
scas
rdtsc
insl
and
sarb
out
mov
push
dec
xlat
pop
jbe
leave
mov
sbb
sti
leave
cmp
mov
stos
daa
jl
clc
nop
dec
movsl
adc
xor
push
mov
lahf
mov
mov
inc
icebp
aaa
inc
cmpsb
sub
sti
in
push
andb
jecxz
sub
push
pop
loope
push
push
sub
jb
cmp
aas
sub
sbb
insb
clc
and
sahf
andb
lcall
and
push
adc
fsubl
int3
xor
add
mov
pop
repnz
lcall
push
and
cmp
push
adc
inc
cli
in
jg
shrb
cmp
push
and
dec
mov
jecxz
aad
mov
mov
or
test
inc
mov
sbb
xor
arpl
and
addr16
insb
loop
sub
bound
in
adc
ds
add
in
aam
int3
mov
cli
sahf
push
call
cmp
mov
or
mov
sub
sbb
call
mov
aas
fwait
shrl
inc
jae
sbb
imul
lods
lock
mov
xlat
enter
in
and
in
mov
aad
pop
adc
inc
xor
loopne
mov
stos
stos
in
inc
push
inc
iret
fsts
les
jo
xchg
fisttpll
sbb
dec
sbb
ret
pop
aad
and
jno
xchg
jp
adc
out
cwtl
das
add
push
lods
std
jb
fdivrp
dec
clc
out
je
cmp
jecxz
xchg
cmp
ret
jnp
lea
pop
xchg
mov
cmc
les
mov
mov
cs
push
jle
inc
movsl
aaa
mov
das
jmp
in
mov
or
cwtl
negb
jg
cwtl
sbb
cmpsb
imul
or
lret
icebp
jae
lods
cld
call
imul
mov
pusha
arpl
xchg
jmp
sbb
stos
push
je
mov
es
or
lret
dec
loope
xchg
xchg
clc
xor
ljmp
ljmp
push
push
mov
sahf
jbe
mov
arpl
add
add
cltd
rclb
mov
loopne
push
cmpsl
rcr
mov
lret
clc
cmp
xchg
xchg
stos
sub
rcll
pop
pop
lods
fadds
xor
sbb
mov
lds
es
sbb
xor
push
aad
not
lcall
xor
loop
out
mov
stos
ja
jb
dec
jg
mov
jle
xchg
or
fwait
fwait
inc
movb
outsb
add
xchg
out
lds
xlat
push
jns
xor
ret
xchg
movsl
ljmp
aaa
fsin
pop
stos
fmuls
addr16
push
lods
mov
mov
pop
mov
bnd
mov
mov
test
fists
mov
fs
jle
jl
jl
jle
lods
mov
rclb
stos
movsl
xchg
in
and
cmp
add
mov
add
pusha
jb
ja
pop
jne
ret
push
pop
outsb
repnz
inc
lds
sbb
xchg
jne
push
mov
lret
mov
dec
fwait
xor
inc
movsl
enter
lret
cmpsl
sbb
clc
fildll
loop
sahf
adc
sahf
dec
mov
sub
sub
pop
mov
dec
inc
inc
lret
add
push
mov
into
filds
test
outsl
int3
pop
mov
jo
mov
xor
shrb
das
and
imul
dec
pop
push
cltd
stc
or
aas
sbb
jge
loope
sbb
xlat
daa
cmpsb
cmp
cmp
pop
sbb
dec
adc
lret
push
js
fs
imul
push
std
iret
or
xchg
mov
inc
adcb
cmpsb
lods
fstpl
enter
pop
sbb
push
push
not
loope
gs
mov
adc
mov
cmp
xorb
sbb
add
nop
aas
xor
xor
ret
enter
inc
mov
push
cmpb
faddl
and
cld
jg
adc
sbb
add
mov
scas
or
mov
xchg
mov
shrb
sbb
push
out
adc
and
xchg
sub
in
testl
dec
jo
aaa
fisubl
sbb
out
sahf
lods
adc
addl
ds
std
stc
stos
idivl
fs
pop
adc
int3
insl
ss
mov
mov
fadds
test
mov
cmp
stos
sbb
push
xor
into
push
shlb
in
xor
and
js
adc
mov
adc
gs
les
data16
fistl
mov
mov
sub
das
mov
sbb
sbb
call
or
imul
insl
std
push
push
repz
dec
xchg
mov
sub
xchg
or
pop
inc
adc
loope
dec
out
mov
test
cmp
jne
pop
aad
jbe
nop
jae
inc
aas
bnd
jb
adc
dec
outsl
jns
je
int
jecxz
fadd
idivl
call
xchg
pop
pop
mov
bound
fcmovnb
test
pop
cmc
cmp
inc
sub
push
inc
mov
fiadds
mov
xchg
ret
inc
and
mulb
mov
cwtl
mov
cmpsl
movsl
outsb
cmpl
sub
pop
lret
lret
scas
xchg
mov
int3
mov
jae
lock
imul
into
insl
shlb
les
rorl
inc
aas
outsl
icebp
lods
insl
icebp
add
add
fwait
into
adc
push
mov
xlat
inc
jmp
mov
movsl
xchg
sbb
xchg
cmpleps
ja,pt
cltd
test
xchg
icebp
loopne
fnsave
dec
js
dec
mov
dec
shrl
in
stos
and
out
sub
lcall
mov
xchg
stc
or
jne
cmp
mov
out
out
dec
push
arpl
ja
cmc
pusha
dec
jb
push
inc
adc
or
push
push
jle
xchg
mov
int3
cli
bound
bound
xchg
hlt
mov
test
pop
gs
addr16
xor
mov
mov
aad
pop
mov
mov
or
mov
mov
sti
and
xchg
dec
pop
jmp
or
out
fiadds
mov
fistpll
and
subl
jnp
daa
adc
int
in
ss
pusha
or
or
pop
movsl
shll
shlb
xor
push
and
popf
fwait
mov
repz
int
inc
inc
xor
and
push
sbb
imul
push
sub
adc
mov
roll
leave
stos
pop
dec
hlt
stos
jbe
arpl
add
or
and
aaa
ja
outsl
or
sahf
je
inc
mov
fiadds
jb
outsl
mov
loopne
int
jae
lea
cmp
movsb
push
call
loopne
jge
iret
sahf
sbb
push
daa
movsl
add
jno
cmp
rcrb
pop
push
inc
xor
les
lahf
fst
push
rol
mov
mov
sbb
inc
in
cmpsb
xor
in
in
or
fnstenv
pop
push
sarl
adc
loope
fcomps
sub
and
insb
mov
arpl
outsb
and
jae
icebp
icebp
in
addb
sbb
push
popa
xor
movsl
push
test
push
pop
lea
js
xchg
gs
fnstenv
pop
sub
pusha
push
outsb
pop
mov
xchg
test
sbb
sub
mov
pop
mov
dec
push
jmp
mov
sub
lret
test
and
sbb
sahf
dec
or
das
mov
loop
movsb
mov
fs
stos
adc
xor
cmp
inc
cmpsb
aaa
out
dec
push
cli
add
mov
cmp
pushf
xor
mov
lods
je
stos
jbe
xor
lcall
ret
in
and
loope
adc
arpl
jno
jmp
mov
push
or
inc
sub
mov
xchg
xchg
mov
jecxz
or
leave
gs
mov
mov
imul
pop
fld
adcl
int
lcall
mov
mov
js
iret
lcall
je
jge
fdivrs
das
aad
das
and
dec
pop
inc
aas
xchg
dec
enter
mov
scas
clc
je
mov
jecxz
leave
loope
leave
out
lea
loopne
mov
aas
pusha
mov
mov
sti
fcomi
sub
pop
cwtl
in
jmp
mov
mov
pop
out
mov
push
mov
pop
sub
mulb
pop
ljmp
cmc
je
jno
cmp
and
cld
push
or
lret
cmp
mov
mov
cltd
jbe
jno
jmp
in
jle
sarb
sar
sub
lock
add
es
fldt
pop
in
dec
xlat
repnz
xchg
jbe
dec
ljmp
ret
lods
inc
jno
mov
hlt
js
and
and
addl
and
test
jle
push
mov
push
fstp
sub
xchg
push
xlat
sbb
dec
roll
sbb
ljmp
nop
xchg
and
in
cmpsl
lcall
scas
xor
mov
subl
or
xchg
sub
leave
test
arpl
ja
std
rorl
or
jo
or
push
mov
push
and
ljmp
cwtl
cmp
xchg
and
jns
xor
in
mov
xchg
inc
fscale
mov
mov
mov
and
pop
jp
aam
mov
xorb
add
cmp
xchg
dec
jne
bound
test
dec
lret
mov
cmp
pop
xchg
adc
sbbl
dec
sub
mov
xorps
xchg
cwtl
stos
mov
jg
cmp
push
inc
jle
cmp
pusha
test
jbe
sbb
pop
pop
fcompl
inc
fstpt
cld
jae
xor
dec
popf
ret
mov
dec
or
fisubrl
or
dec
imul
and
mov
hlt
adc
loop
sarb
leave
and
movsl
hlt
cmc
mov
dec
stos
mov
popf
mov
sub
orb
mov
pop
int3
xor
pop
lea
and
mulb
imulb
and
cmc
movsb
fs
iret
push
aaa
or
lds
fidivrl
mov
in
daa
movsb
dec
sarb
mov
jl
sub
dec
repnz
push
ds
dec
jo
neg
lahf
cld
push
mov
push
daa
fnstenv
inc
sahf
lahf
ret
cmpsb
mov
or
lret
rcrb
lahf
pop
xchg
sbb
dec
loop
loope
outsl
pop
sub
cmp
sbb
icebp
xchg
and
js
push
or
out
sbb
push
mov
xor
not
adc
mov
test
lcall
pop
test
or
outsb
ret
adc
rorb
test
mov
mov
lret
cmp
ret
dec
push
sub
testl
bound
sbb
repnz
orb
outsl
add
mov
fs
mov
sbb
dec
adc
test
ss
adc
std
xchg
xchg
out
jns
cli
aaa
daa
pop
xor
dec
test
bound
or
cmpsl
add
push
jl
cmc
jb
mov
pop
fs
cmpsb
adc
es
jp
xchg
loop
fs
adc
lods
movsl
or
test
leave
mov
repnz
sar
jne
cs
fchs
jne
in
dec
enter
aas
pop
pop
fincstp
pop
mov
repz
prefetchwt1
push
aam
cmp
jle
or
pop
push
or
pushf
mov
or
cmp
aad
dec
sub
aas
xor
jb
adc
dec
pop
mov
fwait
dec
cmp
int3
dec
sbb
pop
add
mov
stos
leave
mov
in
cmpl
popa
flds
fcompp
inc
icebp
jl
das
pushf
aam
mov
dec
jnp
stos
loope
rcr
js
mul
and
bound
adc
movsb
jno
icebp
clc
andb
add
lret
test
into
into
mov
and
lock
das
adc
or
mov
or
and
aam
xlat
or
gs
es
imulb
repnz
dec
shlb
push
ljmp
xchg
lods
lods
jo
mov
pop
popf
adc
mov
sti
mov
sbbb
gs
test
cmp
mov
mov
push
ja
lock
sub
jmp
cmp
dec
jno
sbb
repz
pop
xor
xor
repz
test
xor
imull
out
mov
or
mov
mov
in
out
test
mov
test
push
orl
push
inc
or
insl
jne
shlb
push
les
add
fadds
push
out
jae
bound
cmpsl
add
sub
cmc
xchg
xchg
ss
mov
inc
into
mov
fcmovnb
dec
add
push
daa
mov
mov
gs
fisttpl
pop
stc
jne
add
jge
repz
cli
jmp
fldl
xor
cmp
mov
jne
and
cmp
and
pushf
insb
test
movsb
jnp
inc
adc
pushf
dec
in
push
gs
inc
jmp
das
ret
cmp
andb
add
pop
push
or
lret
dec
loopne
sbb
in
inc
lret
test
ficompl
inc
xchg
shll
sbb
push
push
scas
in
mov
fstl
xchg
popf
js
ljmp
pusha
repnz
lods
hlt
inc
out
pop
arpl
xorl
xor
sbb
or
push
add
mov
sbb
bound
rcr
jge
or
mov
scas
mov
and
outsb
iret
movsb
out
mov
add
adc
ss
jecxz
stos
lds
mov
or
jl
xchg
icebp
dec
popa
xor
push
and
inc
xor
jp
mov
push
jbe
push
test
bnd
test
mov
sub
iret
mov
push
gs
sub
pop
aad
lret
ds
jl
and
aas
and
insl
pop
ficompl
add
dec
add
fidivrs
xor
daa
and
fsubr
dec
pop
adc
and
pop
mov
lcall
or
andl
and
movsb
push
shrb
sbb
cwtl
pop
outsl
mov
scas
mov
and
jo
out
lcall
xlat
cmpb
rcr
rcr
aad
mov
mov
call
iret
fiaddl
gs
mov
test
loop
jmp
stc
iret
pop
jns
repnz
mov
je
cmp
mov
daa
xor
xor
sti
or
into
stc
aas
pusha
cmc
cmp
pop
subl
mov
and
nopl
xchg
out
ja
je
mov
sub
les
xor
pop
and
adc
call
sbb
adc
enter
mov
fldcw
aam
jmp
jle
imul
jmp
add
mov
adc
inc
pushf
dec
in
sbb
push
ret
sahf
mov
aad
int
nop
add
cmp
iret
idivl
jb
jecxz
dec
aam
in
out
iret
jecxz
or
push
lea
outsl
call
aam
test
adc
xor
fistl
xchg
pop
fisubrs
inc
rcr
inc
or
jnp
jnp
in
mov
sbb
out
push
shrl
or
cwtl
pop
imul
mov
dec
push
icebp
iret
mov
cld
stos
shlb
mov
ucomiss
daa
xor
rcr
mov
or
aam
adc
hlt
pop
mov
clc
or
insl
cmpsb
shll
int
ja
hlt
xchg
and
popa
scas
jne
lods
sbb
mov
mov
and
push
sahf
push
pandn
enter
sbb
mov
sub
push
cmp
frstor
psrld
es
jp
lret
sbb
add
pop
add
stos
out
mov
out
push
loop
xchg
int3
mov
inc
call
mov
xor
arpl
mov
lock
mov
xchg
test
add
dec
dec
dec
popf
inc
add
pop
xor
jmp
nopl
pop
add
repz
out
push
sbb
jns
shlb
mov
repz
loope
lret
inc
push
mov
xchg
mov
jp
cs
mov
aam
cmp
sbb
data16
and
fists
jl
xchg
je
enter
rcll
dec
inc
out
mov
sub
lods
int
push
fs
fldcw
xchg
mov
insb
adc
jnp
cld
outsl
jle
icebp
pusha
in
jns
pusha
fisubs
lcall
mov
pop
dec
dec
or
jns
roll
popf
adc
in
mov
dec
test
xchg
sub
cmpsb
sbb
cmpsb
push
imul
pop
scas
dec
fdivrs
adc
xor
jbe
outsl
leave
mov
hlt
mov
adc
pop
or
xchg
daa
aam
mov
popf
or
jnp
loopne
jge
or
pop
jmp
pop
fisubrs
aad
lds
inc
rcrb
into
scas
push
stos
and
mov
movsb
jp
xor
jbe
call
daa
sbb
push
daa
mov
cmp
jno
lcall
shlb
push
add
lret
insl
cmp
lahf
cmp
mov
xchg
rcll
out
inc
mov
cmpsl
xchg
cltd
pop
out
lret
pop
adc
stc
push
popf
shl
mov
cmp
push
ds
pop
insl
movsl
cmp
inc
mov
push
push
mov
sbb
pushf
cmp
mov
sbb
fwait
mov
sbb
fldcw
lcall
sbb
cs
pop
sub
mov
outsb
mov
rorb
mov
mov
push
mov
adc
add
repnz
sub
in
testl
push
jnp
jecxz
int3
sbb
dec
mov
cmp
test
outsl
ret
loop
pop
adc
xchg
jmp
jge
jno
or
ss
dec
push
fdivs
aaa
out
pop
inc
cli
popf
xor
pushf
cmp
push
jle
fdiv
test
xor
inc
adc
sbb
pushf
insl
adc
push
jnp
add
jg
cli
sbb
lods
jae
inc
mov
sti
aad
add
cltd
mov
enter
loopne
je
je
pop
adc
scas
cmc
dec
xchg
outsb
fldenv
divb
and
lods
loop
sbb
jae
cmpxchg8b
push
pop
insb
xchg
aam
cmpsb
pushf
stc
xchg
push
jmp
ds
add
inc
nop
fbld
aas
outsb
aam
jb
out
dec
dec
daa
fbstp
cwtl
jecxz
adc
fmuls
push
push
mov
or
stos
cmp
dec
lock
adcb
cmpl
mov
mov
aam
out
and
push
cmp
jl
jg
insb
fs
std
mov
arpl
mov
icebp
cmpsb
or
cld
je
lret
xchg
mov
inc
popa
mov
bound
pop
dec
lret
mov
sub
rorl
mov
in
es
mov
lea
enter
xor
mov
popa
out
lods
sub
mov
pop
shrl
sar
mov
jecxz,pt
add
adc
test
shlb
std
dec
loop
dec
fmul
clc
popa
orb
jns
jnp
or
sbb
mov
frstor
xchg
out
mov
cmp
push
jbe
mov
xor
lahf
mov
xor
pop
andl
int3
test
test
das
xchg
ja
sub
dec
ds
aad
jno
xchg
or
sbb
mov
add
push
or
lret
or
bound
in
pop
bound
pop
mov
stos
pop
push
ljmp
mov
adc
subl
sbb
jbe
mov
cmp
fbstp
pop
mov
inc
lds
jmp
jne
addl
out
inc
or
fcomps
in
imul
lock
insb
jle
sub
jle
cmp
pusha
jns
xchg
iret
xor
inc
lcall
subb
mov
xchg
popf
aaa
outsb
add
nop
xor
inc
leave
or
xchg
jg
jb
dec
mov
jp
mov
jl
inc
dec
pop
adc
lea
leave
cmp
leave
xchg
frstor
xchg
pop
inc
push
popa
inc
or
push
cmp
or
pop
add
sahf
int3
xrelease
pop
sbb
and
rcr
and
mov
icebp
scas
dec
push
push
and
pushf
mov
xor
cld
push
and
mov
jge
jb
sbb
cmp
cmp
cmpsb
jl
aad
dec
aas
pop
sub
out
cmp
xor
pop
lahf
pop
cmp
fwait
cld
test
mov
addl
cld
inc
in
addb
enter
pop
push
imul
or
sub
outsb
dec
cmp
ret
call
movsl
inc
fmul
and
fmuls
xchg
test
stc
add
mov
xor
add
pop
popa
xchg
mov
dec
mov
mov
or
adc
pop
sub
add
outsb
jmp
std
adc
arpl
jg
push
movsl
mov
jnp
mov
outsl
mov
cmp
push
cmc
in
adc
sub
frstor
testl
adc
mov
in
sbb
inc
or
lea
sti
outsl
mov
add
stc
cmp
jns
adc
or
jmp
into
add
loop
orb
cli
rorb
xor
xor
xchg
test
dec
mov
xchg
jbe
out
lcall
sub
sbb
adc
mov
and
dec
add
and
cmpsl
xlat
inc
sub
sub
sti
in
xor
jae
mov
xchg
jp
gs
shl
mov
dec
in
movsl
inc
js
push
les
and
repz
test
sbb
scas
adc
mov
xchg
sub
pushf
movsb
adc
jmp
jle
cs
sbb
push
cmpsb
pop
aas
or
sbb
sbb
jecxz
popa
stos
aad
rorb
lret
fcmove
mov
add
addl
popa
cmp
inc
iret
or
das
cmp
shlb
push
sbb
push
adc
lret
jne
imulb
adc
jge
adc
cmp
test
cld
add
enter
push
mov
insb
cwtl
mov
sbb
pop
imul
pop
sub
ficoml
aam
andl
mov
insl
je
repz
ret
ss
jb
add
fisubl
or
and
add
and
int
setge
add
cmpl
popf
jmp
xchg
fnsave
clc
pushf
ret
enter
sub
nop
shll
out
pop
scas
nop
arpl
sbb
pusha
xchg
pop
push
jno
push
mov
shlb
call
dec
pop
xor
test
fwait
xchg
jmp
ss
icebp
emms
mov
dec
out
inc
or
imul
jge
pop
jmp
ds
sub
sub
jns
ficomps
int
repnz
jg
sbb
and
pop
or
jmp
add
ljmp
mov
mov
cli
dec
xor
jne
inc
arpl
push
cmp
xchg
sbb
sub
inc
imul
out
out
cld
sub
mov
mov
dec
and
dec
sbb
icebp
jnp
mov
jle
ja
in
out
mov
iret
xchg
aaa
dec
ret
jle
mov
xchg
adc
jno
rclb
push
fisttps
pop
aam
mov
dec
adc
xchg
hlt
and
imul
xchg
push
mov
rcll
sub
mov
sbb
inc
leave
std
lods
sub
and
cwtl
arpl
inc
inc
push
fisttpl
or
mov
mov
xor
or
outsb
add
and
ficoms
mov
lds
xor
scas
sub
xor
cmp
pop
int3
movsb
nop
loopne
push
jae
mov
xchg
jge
aad
sbb
rclb
cmp
shlb
nop
nop
jl
mov
dec
scas
pop
testl
std
fdivs
dec
or
out
xchg
addr16
push
adc
inc
lods
cmpsb
mov
mov
enter
pop
xchg
cmpsl
subl
xor
cmp
xor
movsl
dec
mov
inc
int3
mov
nopl
and
ret
es
and
arpl
pop
inc
pop
or
pop
lcall
and
test
bound
les
aam
dec
cmp
adc
sub
jg
clc
gs
fldcw
jnp
bound
out
iret
push
clc
ret
sub
mov
iret
testl
pop
int
push
cmp
sbb
call
test
sub
sbbb
hlt
mov
fs
lods
mov
ss
mov
jne
push
fsubr
or
pop
cli
add
xor
leave
mov
or
mov
aad
mov
outsb
pop
loopne
fstl
add
repnz
inc
inc
add
and
lods
inc
mov
jecxz
xorl
and
sahf
mov
sti
and
mov
jmp
loopne
jnp
dec
inc
push
inc
inc
mov
mov
repz
xchg
xor
test
cmp
ret
lret
push
dec
adc
pusha
adc
pop
cmpb
scas
test
pop
aas
lods
cltd
sti
jb
mov
dec
cmp
je
sub
jecxz
icebp
mov
lea
dec
stos
mov
jge
mov
jbe
flds
out
dec
aam
inc
fneni(8087
cmp
mov
inc
pop
rorl
mov
inc
loop
and
jg
div
jbe
std
fwait
les
lahf
push
lea
push
and
cld
sub
push
lret
fisubrs
mov
xor
cmp
jge
pop
and
lock
mov
ret
mov
xor
insl
pop
xchg
dec
mov
or
pushf
popa
hlt
xor
lods
pop
mov
mov
mov
mov
mov
cld
cmp
mov
enter
addr16
xchg
xor
cmpl
clc
xlat
xchg
in
inc
pop
pop
sbb
insl
and
mov
ret
xchg
lcall
clc
imul
nop
