cld
call
mov
push
mov
xchg
cmp
jbe
inc
cmp
jo
lea
fisttpll
mov
xchg
lea
in
idiv
xchg
dec
dec
cmp
jae
lea
mov
int
add
adc
dec
and
sti
jb
in
dec
dec
mov
lock
mov
ja
pop
cmp
mov
mov
call
jbe
mov
or
add
dec
cmp
jg
lea
xchg
jle
fidivrs
mov
in
lea
pop
add
das
mov
push
cld
mov
dec
dec
inc
mov
cmp
jne
mov
divb
mov
sbb
shl
mov
or
pop
sbb
add
mov
loopne
jg
pushf
imul
xchg
call
in
sti
jmp
inc
pop
pop
ret
jmp
sbb
rolb
mov
fs
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
ror
enter
push
rclb
shll
add
ret
lea
pop
fmull
add
pop
mov
inc
cld
clc
nop
push
cmp
pusha
adc
test
data16
imul
icebp
in
mov
cld
push
and
std
jnp
push
popf
in
bound
push
pop
sarb
dec
mov
cmp
jge
mov
divl
xor
jle
add
fistpl
push
mov
inc
mov
test
decb
push
cld
jp
inc
inc
adc
jne
mov
outsl
ja
call
mov
lock
pop
in
push
ret
loop
pop
fdivs
pop
sbb
adc
insl
fsubrs
mov
fs
mov
fadds
sub
inc
ret
cld
inc
adc
xor
jne
jbe
inc
dec
out
mov
in
dec
lock
hlt
hlt
inc
inc
outsb
xlat
pusha
push
xor
in
or
or
clc
dec
mov
divl
mov
sar
adc
cmp
out
dec
into
loopne
xchg
fmull
mov
mov
fnstcw
sub
push
add
loopne
cmpsl
pop
divl
imul
in
jns
arpl
inc
aaa
divl
hlt
mov
mov
fadds
out
call
jbe
je
loopne
negb
pop
divl
mov
out
push
xchg
cltd
adc
cmp
xchg
js
mov
xor
mov
mov
call
data16
dec
dec
adc
in
add
xor
xor
xor
inc
inc
xor
cmp
cmp
push
mov
lock
cmp
jbe
cmc
dec
cmp
jmp
divl
or
mov
mov
xorl
add
cmp
dec
cmp
jmp
cmp
inc
cmp
cmp
jle
js
inc
mov
cmp
inc
fwait
loop
adc
int
mov
jle
idiv
pop
cmp
cmc
sub
rcll
idiv
outsb
sti
pop
xor
or
cmp
mov
pop
mov
shl
adc
clc
std
outsb
ja
push
mov
push
fdivrs
mov
xchg
mov
sbb
out
fidivrl
ds
pop
movsb
fdivs
push
dec
mov
je
jbe
fmuls
pop
xorb
mov
aaa
dec
std
outsb
lds
fbld
cmp
sbb
hlt
mov
lds
and
mov
inc
test
jmp
lcall
lods
roll
cmc
dec
mov
mov
std
dec
mov
jbe
fisttpll
popf
add
xor
mov
mov
out
add
mov
mov
jbe
pop
lcall
mov
cmp
pop
mov
xchg
dec
aaa
adcl
mov
sub
jbe
mov
push
mov
cmc
inc
inc
leave
outsb
das
subb
adc
or
sbb
mov
loope
repnz
jb
jb
test
mov
and
daa
int
mov
xor
ss
test
nop
sbb
xchg
lods
jne
fisttpl
adc
pop
pop
mov
xchg
pop
cmp
sbb
mov
sub
dec
dec
dec
ss
mov
sub
test
loop
jnp
fsts
scas
mov
mov
xchg
pop
or
test
cmp
cli
mov
fisttpl
repnz
mov
or
jbe
inc
dec
inc
mov
or
cmp
lret
jg
lss
pop
add
push
mov
mov
push
lea
fnstenv
dec
and
and
lret
push
sbb
outsb
das
mov
or
sbb
outsb
dec
repnz
scas
or
imul
push
xorb
test
cmp
xchg
sbb
mov
jbe
and
dec
xor
jae
and
sub
lock
mov
icebp
push
dec
out
repnz
mov
xchg
pop
frstor
lock
into
cmp
cmp
divb
cmpsb
inc
enter
adc
lsl
pop
notb
push
std
pop
lds
add
lahf
fwait
cmp
and
inc
mov
mov
or
push
jg
sbb
or
dec
scas
mov
mov
inc
nop
out
mov
push
pop
jb
mov
orb
inc
pop
in
cmp
mov
inc
sar
jbe
dec
xor
xorl
and
inc
and
lcall
xor
add
fldt
mov
inc
push
clc
dec
cld
ss
divl
test
jne
or
movlps
dec
je
inc
imull
hlt
gs
push
or
adc
or
jne
push
cmp
call
sub
movzwl
dec
test
jb
insb
xchg
mov
add
lea
mov
inc
mov
ret
or
xchg
mov
add
cmp
cmc
loop
outsb
ffree
ds
jl
pusha
lret
sbbl
sub
fildl
jb
adc
push
cmp
cltd
ret
jle
adc
cmp
sbb
out
dec
rcll
add
and
sbb
call
aaa
cmp
test
incl
inc
ret
outsl
mov
ret
jmp
dec
imul
adc
push
push
idiv
mov
je
popa
insb
inc
insb
insb
outsl
arpl
jb
mov
dec
bnd
arpl
add
bound
mov
pop
dec
fs
imul
inc
outsl
jb
pcmpgtw
test
mov
dec
rep
jbe
cmp
std
add
cmpl
lock
out
je
repnz
dec
test
outsb
lods
fld
xchg
mov
sbb
add
rolb
add
je
or
mov
lret
call
fisttpl
adc
and
xor
aas
icebp
nop
jnp
sbb
add
and
and
icebp
add
sub
fimull
xchg
add
aas
jp
push
push
ret
es
lock
repz
jne
inc
lret
call
mov
je
cmp
repnz
loope
push
add
loope
mov
or
std
inc
sbb
cmp
aam
push
inc
mov
call
inc
dec
hlt
not
push
out
sub
mov
sub
adc
lea
jnp
mov
in
inc
xor
dec
or
push
add
in
adc
loopne
mov
dec
jl
rcrl
sarb
or
fmuls
lock
sub
cwtl
cmp
mov
inc
or
dec
js
xor
sub
in
push
mov
jnp
mov
cmp
and
pushf
cmp
and
push
mov
loope
mov
hlt
sbb
jns
jns
mov
popl
mov
jmp
inc
gs
mov
data16
movsl
outsl
fwait
jno
sub
pop
imul
js
imul
inc
bound
jle
outsw
jns
dec
imul
fldt
pop
imul
outsl
ja
mov
data16
out
in
pop
pop
jle
inc
gs
add
jb
add
xor
adc
cltd
mov
cwtl
cmpb
push
mov
orb
xor
mov
adcb
cld
insl
or
sbb
fdivrs
pop
mov
scas
adc
adc
out
scas
cmp
sbb
jp
jge
sub
cmc
test
mov
lcall
xchg
in
push
movsl
dec
jne
fmuls
popa
sbb
ror
sbb
aad
mov
lahf
insl
lock
mov
sbb
push
test
pop
js
push
jg
sub
sub
sub
stos
pop
push
inc
push
add
fcomi
adc
icebp
mov
xchg
mov
int3
nop
add
jne
sub
fsub
add
loopne
pop
repnz
push
inc
mov
pop
subb
push
pop
pop
jbe
out
cld
dec
dec
xchg
fdivrl
pop
shll
pop
mov
jne
inc
hlt
jge
inc
inc
dec
sub
xor
or
scas
fistl
clc
dec
adc
mov
sub
les
and
push
jbe
xchg
pusha
hlt
popf
push
mov
pusha
sbb
push
in
enter
je
lea
enter
and
shrb
or
movsb
subl
test
add
cmp
andb
loope
mov
push
or
int
fcoml
or
sbb
hlt
sarl
pop
lock
sub
sbb
ret
dec
mov
outsb
and
jo
and
js
fwait
jle
xchg
jae
dec
dec
gs
and
fsubs
les
and
clc
lock
aam
fwait
pop
loopne
stc
les
pop
lcall
in
and
in
adc
subps
outsb
dec
sub
ss
adc
test
jne
or
cmp
adc
adc
jae
fxch
inc
push
shlb
jl
xchg
xor
push
cmp
in
mov
mov
or
and
xor
pushf
add
fldcw
mov
test
push
and
pop
xchg
xchg
cmp
push
call
lret
ds
or
xchg
lcall
inc
and
mov
and
pushf
and
and
fdivl
das
mov
mov
xor
add
int3
pop
dec
das
sub
movsb
cmp
pop
cmpl
enter
je
aam
mov
adc
jl
xor
or
adc
outsb
gs
xor
cs
insb
push
mov
ret
add
or
nop
loopne
xor
das
stos
fisttpll
hlt
int3
jne
sbb
cwtl
aam
rcr
jge
add
add
dec
adc
mov
push
arpl
nop
cld
add
push
fs
mov
ja
adc
jne
leave
mov
or
or
cmpl
mov
lods
and
mov
ja
add
shrb
xor
xchg
jns
in
int
adc
inc
clc
mov
jl
call
test
mov
add
jmp
xchg
in
push
sbb
jle
sub
imul
xchg
xchg
jne
push
decb
fmuls
loope
and
jmp
push
mov
xor
pop
loopne
push
adc
and
pop
cmp
or
rcrb
arpl
lds
mov
pop
or
mov
mov
je
jge
mov
sbb
sub
or
mov
sahf
lcall
xor
xor
enter
inc
sub
push
pop
add
test
insb
cmp
cwtl
shrl
mov
decb
lock
pop
xchg
jle
or
xor
loopne
push
dec
std
pop
fchs
jmp
jp
sbb
jmp
add
push
jecxz
pusha
adc
cmp
je
jb
fcmovnu
cmp
mov
popa
xlat
add
je
mov
mov
outsl
in
mov
jnp
mov
fsubrs
loop
mov
mov
lea
jns
pushl
sub
or
push
gs
add
add
in
push
shlb
mov
cmp
inc
pushf
xchg
add
push
inc
imul
sbb
pushf
insb
ss
fwait
add
adc
add
lcall
loope
mov
xor
ret
in
cmp
stos
pop
out
cmp
enter
mov
inc
mov
sub
ja
and
push
or
pop
adc
add
mov
add
lret
adc
push
mov
ret
sub
ret
aam
mov
cmp
sbb
inc
or
lods
xchg
mov
or
sbb
push
sbb
add
lods
test
xchg
add
xchg
lods
mov
sub
imul
addb
push
xchg
push
xchg
mov
xchg
add
aam
ss
arpl
mov
add
fists
fsubrl
ror
std
and
dec
xchg
mov
add
sbb
push
cmp
mov
jae
add
inc
and
mov
shrb
les
or
fdiv
popa
add
aam
push
xchg
add
pop
in
sub
and
and
pop
and
fxch
xchg
or
add
daa
and
out
ja
mov
add
jg
inc
inc
pop
add
or
pop
add
ret
insb
push
dec
idiv
adc
mov
add
sbb
dec
dec
or
out
or
or
outsl
add
inc
scas
out
jb
and
sbb
es
push
mov
jnp
les
push
fcoml
mov
mov
add
stc
pop
add
or
fstp
fnsave
mov
sbb
jne
icebp
jl
adc
cs
mov
add
ret
adc
je
sbb
dec
add
out
inc
sbb
cltd
fwait
or
pop
dec
mov
insl
fnstsw
mov
adc
jg
mov
divb
testb
sbb
cmp
filds
add
xlat
add
xchg
insl
mov
pop
mov
add
jns
dec
sub
jle
xchg
insl
sbb
sahf
jnp
or
jno
sub
adc
cmp
sarl
lret
add
and
or
popa
call
xor
ret
push
cmp
inc
pop
xchg
insb
cmp
add
pop
das
aaa
jbe
sbb
pop
sub
or
or
insb
in
or
or
popa
outsl
fnstenv
scas
cmc
jbe
or
adc
or
dec
fldenv
sbb
test
adc
add
xchg
or
call
and
shll
mov
gs
fidivs
mov
rorb
push
pop
ss
dec
cmc
add
pcmpgtb
sub
mov
sbb
fldt
dec
add
dec
xor
xor
xor
nop
xor
mov
pushf
xlat
inc
loop
push
mov
add
jae
mov
push
addr16
sub
fisttpl
xor
out
sub
ss
cwtl
pop
imul
and
lret
out
add
dec
ja
mov
cmp
add
jmp
push
xor
cmp
test
xchg
ffreep
push
std
push
mov
sub
and
add
xchg
aaa
add
or
push
sub
mov
insb
push
sub
mov
je
mov
gs
xchg
mov
and
enter
xor
scas
xchg
and
push
sub
shlb
dec
nop
sub
xor
imul
add
and
adc
inc
outsb
ret
insb
fwait
shl
and
inc
add
sbb
movsl
sbb
test
mov
adc
xchg
mov
push
dec
pusha
mov
mov
add
inc
or
imul
sub
push
add
adc
add
mov
mov
lock
mov
cmp
adc
mov
xor
js
mov
out
je
pop
push
push
ret
pop
aas
jae
idivl
and
aaa
push
imul
jge
lock
dec
mov
scas
mov
sub
mov
sbb
push
outsb
sbb
out
jne
shll
xlat
mov
inc
fistpl
pop
xor
mov
sbb
fnstsw
add
jb
aad
cmp
push
bound
mov
adc
inc
add
in
or
fsubrp
or
mov
pushf
cmp
cmpl
js
add
mulps
mov
jns
jnp
and
stc
sbb
mov
add
out
cmp
mov
add
enter
fldz
mov
into
out
push
jge
out
jmp
inc
xchg
repz
pusha
xchg
repz
fidivrs
add
ja
out
jmp
scas
xor
xor
in
push
fistps
pop
add
dec
shll
insb
pop
bound
push
ss
mov
je
add
loop
mov
sub
pop
inc
pop
adc
lret
out
mov
mov
popa
enter
adc
dec
loope
out
jns
add
xor
add
xchg
pop
inc
mov
jnp
mov
int3
sarb
scas
dec
imul
loope
cmp
adc
imul
loope
mov
mov
jns
jae
jle
jbe
iret
je
cld
outsl
inc
jnp
fnstsw
xchg
xchg
mov
add
mov
xchg
jns
xlat
fs
pop
sbb
jae
inc
push
pop
and
jmp
inc
shlb
inc
mov
push
mov
add
jne
stos
pop
adc
into
mov
rcrb
mov
dec
and
push
inc
jnp
shrl
cs
lods
pop
popa
mov
insl
fstpl
sub
adc
lea
mov
inc
jl
mov
fcompl
adc
fidivrl
mov
dec
fsubrp
hlt
sbb
mov
dec
fstp
ljmp
xchg
insl
fistpl
nop
sbb
jp
or
mov
cmpsb
jb,pt
imul
cmp
repnz
lods
sti
lcall
xor
int
pop
ljmp
or
fwait
push
dec
mov
pop
inc
call
cmpsl
ret
test
push
mov
and
popa
adc
xchg
test
aam
pop
mov
pop
data16
fnsave
cltd
add
dec
inc
dec
adc
clc
addl
sar
mov
push
frstor
add
sti
stos
in
mov
test
call
mov
pop
into
adc
and
push
add
mov
cwtl
lcall
add
inc
divl
mov
dec
mov
adc
loope
leave
jae
ds
sti
out
or
sbb
mov
das
int3
addr16
pop
inc
mov
xlat
sub
adc
sub
ret
sbb
xchg
test
jae
jno
cmp
fldl
xchg
add
sub
mov
arpl
cmpsb
sarl
js
lods
rcrl
pop
lret
fcoms
sbb
jle
imul
stc
or
imul
jmp
jo
loope
or
jp
and
jbe
into
fadds
xor
call
mov
fstl
fisubrl
in
cmpsb
jmp
sub
or
shrl
sahf
jno
or
call
mov
mov
xchg
sub
xor
sbb
pusha
cmp
arpl
jmp
data16
cltd
sbb
push
push
mov
rcll
es
sbb
lds
sbb
add
push
mov
dec
paddsb
inc
pop
push
lods
je
ds
jnp
imul
sbb
jmp
aam
or
add
cmp
aaa
sub
xlat
xchg
aas
xor
inc
psrlq
scas
inc
ja
arpl
ror
mov
and
outsb
cmp
jl
inc
mov
cmp
mov
lcall
cmp
adc
aam
mov
cmc
aas
addr16
lea
xchg
xlat
mov
cmp
flds
sub
and
fstpt
or
das
xorb
mov
es
ja
dec
xor
push
je
aas
pop
call
imul
mov
insb
fsubrp
mov
ret
sub
mov
popa
call
out
fs
ss
mov
iret
repnz
rcr
rcl
das
cmc
jmp
pusha
add
adc
mov
jno
ror
fwait
sub
je
inc
js
je
repz
pop
mov
mov
mov
inc
iret
push
cs
mov
mov
test
sbb
or
xchg
into
js
testl
sahf
mov
jbe
ret
mov
loopne
jecxz
jb
pop
dec
inc
jae
sub
out
nop
add
js
mov
lret
test
sbb
xor
aam
pushl
loope
jno
jp
test
enter
mov
mov
lea
jge,pn
jp
mov
pop
pop
lret
ret
out
xor
xor
hlt
test
mov
add
jge
clc
push
test
aas
aam
pushf
notb
xlat
cmp
rcr
mov
out
pop
rorb
jmp
testl
pop
xchg
jo
add
bnd
cmc
loopne
dec
bound
stos
std
jb
in
sub
add
cmp
int3
rorl
cmp
xchg
lret
shlb
mov
in
imul
inc
jno
pop
aaa
out
mov
jb
ret
pusha
repnz
es
call
stos
push
mov
dec
sbb
lock
lret
mov
jae
fadd
mov
out
adc
popa
cwtl
xchg
sbb
pop
stos
push
jl
and
shrb
jmp
test
jecxz
and
pop
mov
pop
ret
aam
inc
jae
add
or
out
lock
movsb
js
and
jge
push
add
and
int
sbb
inc
shll
dec
lret
and
ret
fists
fldpi
xchg
sbb
sti
cmp
jb
sub
sub
cmpb
and
mov
sub
in
mov
or
mov
in
cmp
and
and
sbb
es
js
ljmp
sub
icebp
addl
xchg
adc
icebp
icebp
fisubs
cmp
sysexit
add
push
xchg
test
push
arpl
mov
das
clc
sub
add
or
mov
scas
jl
sbb
lret
outsb
lahf
fwait
dec
test
jmp
mov
mov
addr16
jge
rcrb
jmp
and
inc
add
dec
cmpsl
cmp
mov
sbb
daa
call
jnp
xor
outsb
dec
test
mov
sbb
fdivrs
inc
mov
rcl
add
in
mov
sbb
sub
xor
or
lea
in
sub
add
adc
imul
jbe
stos
jae
sub
clc
sbb
and
test
cmpsb
pop
jnp
fimuls
push
xchg
aas
inc
test
jl
fwait
or
and
stos
icebp
or
leave
loopne
adc
out
mov
xchg
pop
iret
fs
push
cmpsb
mov
repz
bound
dec
lock
sbb
jecxz
pusha
stc
dec
xchg
mov
sub
jecxz
push
dec
sbb
lods
jl
add
test
pop
mov
sbb
test
insl
pop
sbb
push
aaa
sub
scas
ret
shll
and
mov
in
dec
pop
add
mov
jg
fnsave
cmpsl
lret
xor
scas
arpl
bound
jne
mov
and
cmp
or
scas
addr16
pop
and
sub
add
popa
mov
adc
jo
jb
jae
push
sub
loope
jo
sbb
jge
fnsave
mov
fs
add
or
push
pop
sbb
sarl
aam
cmp
pop
and
ds
insb
pusha
and
das
push
jne
xchg
call
or
nop
cmp
test
sub
adc
ljmp
sbb
xor
add
adc
mov
insb
inc
aaa
or
pushf
push
jecxz
rol
test
icebp
call
mov
or
repnz
or
mov
sub
add
mov
fisttpll
sahf
repnz
xchg
out
mov
movsb
shrb
out
popa
sbb
fimuls
jp
jge
imul
mov
rolb
adc
lods
mov
shlb
es
mov
fwait
jns
mov
cmp
jns
sbb
mov
mov
roll
jmp
jns
xlat
adc
mov
notb
in
jae
scas
lea
xor
cmp
aad
adc
ret
ds
and
add
and
andb
sbb
inc
add
inc
sbb
mov
jecxz
jo
lea
call
in
fistpl
and
je
cmpsb
scas
jnp
lret
aad
add
movsl
faddl
mov
repz
and
out
push
cli
pop
add
or
aad
shlb
adc
fidivl
addr16
mov
call
dec
shrl
mov
xorl
pop
cmc
in
lock
mov
and
or
and
and
aad
and
add
rcl
aam
test
mov
cmp
mov
mov
adc
fbld
jo
jmp
xor
cmpsb
push
cmp
dec
add
mov
out
push
arpl
push
push
int3
jns
loopne
and
fcoms
push
inc
or
dec
jp
or
into
cmp
loop
adc
mulb
and
xor
sbb
in
inc
ret
dec
and
addl
jb
ret
bound
mov
or
mov
or
cmp
popa
cmc
stos
add
ss
push
push
and
outsl
mov
dec
push
push
push
xchg
iret
mov
inc
sub
add
xor
daa
and
lods
and
or
add
inc
lea
loope
out
mov
push
push
and
jecxz
adc
adc
push
and
lahf
adcl
cmp
ret
dec
stos
sub
dec
ljmp
jg
push
cmpl
lods
inc
sub
das
repnz
aas
push
xlat
add
les
rolb
sbb
int
fs
jp
fiaddl
idiv
jg
or
movsl
es
push
jle
mov
hlt
test
cmpsb
push
push
push
adc
inc
push
test
xchg
rorb
xor
sbb
popa
cli
mov
and
orb
sub
sbb
xor
cmp
xchg
push
insb
inc
insb
sub
adc
mov
xchg
nop
jae
cwtl
lods
es
inc
and
push
hlt
daa
xor
or
je
add
mov
das
cmp
and
and
shlb
and
shll
popa
ret
xor
leave
adc
inc
cmp
aam
dec
mov
movsb
jnp
mov
sub
adc
sub
sub
jb
mov
aam
push
xor
je
pop
mov
das
xchg
and
jmp
ret
sarb
dec
dec
es
fs
std
jbe
cmc
mov
dec
xor
pop
rcll
ja
cmpl
inc
bound
xchg
lds
sbb
adc
xchg
ret
dec
push
jl
loope
xchg
dec
movsb
pop
lds
or
adc
pop
hlt
popf
jnp
push
sti
lock
cmp
cwtl
sub
es
sub
add
xor
mov
cmp
xor
insb
cmp
shl
popf
shl
add
push
clflush
lret
test
xchg
cmpsl
mov
add
js
sbb
cmpsl
movl
and
leave
jnp
sbb
fldl
or
js
push
inc
xor
mov
gs
jo
mov
movsb
cs
test
loopne
arpl
mov
add
lcall
es
push
fisttpl
xchg
or
loopne
loop
lret
mov
or
push
dec
lock
mov
aad
sub
push
vmwrite
sbb
loope
push
movsl
or
popa
mov
sbb
add
add
add
addr16
adc
mov
and
add
das
mov
sub
sbb
push
sbb
dec
jo
xor
mov
addr16
data16
outsl
aad
int3
call
jnp
sub
or
ja
mov
pop
das
mov
and
jge
cmp
rol
sbb
jp
mov
mov
mov
push
pavgb
ss
xchg
in
cmp
or
mov
mov
and
sub
jecxz
sti
cmp
loop
jnp
stos
fimuls
shll
dec
test
hlt
xchg
movsb
scas
adc
jno
push
es
icebp
aam
aas
cmp
vmread
mov
lds
xchg
cwtl
mov
and
rclb
and
psraw
cs
adc
loope
js
or
inc
mov
lods
mov
mov
jp
mov
sbb
lret
out
adc
test
and
mov
or
icebp
mov
jne
and
mov
or
push
mov
jp
icebp
inc
aam
jb
xor
xor
inc
and
sub
add
fimuls
mov
and
lods
cmp
push
ficoms
or
inc
ljmp
xchg
xlat
jne
push
adc
sub
sbb
into
cmpsb
or
pop
int
fidivrs
in
das
bndldx
xlat
loope
sub
out
cmp
mov
pop
or
adc
dec
jg
sarl
das
les
cld
and
inc
je
lds
inc
adc
mov
cmp
icebp
inc
add
xor
adc
or
and
mov
push
fadd
imul
cwtl
mov
or
data16
loope
aad
data16
jnp
push
pop
mov
out
test
rorb
cmp
ds
aas
icebp
stos
or
js
and
dec
int3
imul
xchg
bound
pop
jp
push
dec
cmp
xlat
cltd
ret
fs
jecxz
inc
stos
les
lock
mov
loop
jb
scas
data16
cmpsl
push
movsb
cmp
sarb
cmp
es
sub
cmp
dec
aas
and
dec
xchg
pop
adc
cmp
jne
stos
aam
rolb
and
or
pop
pop
fldt
mov
ret
and
leave
mov
inc
sub
stos
pusha
push
and
push
inc
lea
aam
jmp
vmptrld
add
cmp
ss
xor
pop
movd
dec
or
fnsave
and
ljmp
out
mov
xchg
adc
rcrb
mov
push
insb
or
jo
sub
mov
push
xor
add
inc
sarl
outsb
daa
nop
pop
push
int3
loopne
lahf
and
push
dec
push
adc
lods
in
and
pop
jmp
mov
test
cmpsl
inc
sub
data16
xchg
add
cmpsb
cmp
pop
mov
lahf
jns
xor
in
ret
mov
or
adcl
pop
sbb
loop
lods
mov
ljmp
aas
inc
sub
lea
sub
pop
sub
jecxz
mov
sbb
add
jo
les
loopne
sahf
mov
sub
sahf
out
jae
out
loopne
push
imul
popa
fxch
ret
mov
cmp
lret
or
cmp
mov
outsl
add
inc
pop
inc
aam
dec
xor
or
mov
jl
xchg
ret
jnp
inc
insl
jmp
int3
es
lcall
xchg
sub
popf
sbbb
icebp
popf
jmp
cmpsl
mov
or
mov
lret
mov
push
push
xchg
add
jg
daa
aas
and
movsl
lcall
cwtl
orb
mov
mov
and
imul
mov
jnp
jbe
in
cltd
or
sub
jp
xor
daa
dec
jnp
cmp
xor
jmp
cmp
scas
sbb
sub
and
movsl
or
xlat
mov
loop
sahf
and
fisttps
adc
push
or
movsl
je
push
ljmp
mov
ja
shlw
xor
add
cmp
dec
adc
mov
adc
xchg
mov
pop
jge
push
ljmp
pmovmskb
bound
shrb
das
js
xchg
rolb
dec
lock
adc
orl
push
mull
pusha
mov
and
lret
ret
mov
loopne
pop
test
test
pop
and
cmp
fldpi
iret
mov
mov
cmp
dec
cmp
jecxz
xor
jno
sarb
jb
popa
xchg
outsl
push
dec
sub
inc
xor
sbb
xchg
cwtl
mov
jae
aaa
add
xlat
inc
xchg
shrb
subl
faddl
pop
mov
adc
xlat
jno
push
dec
mov
xchg
hlt
fwait
lods
aad
out
iret
ret
jge
js
test
movsl
shrl
inc
add
pop
loopne
adc
xlat
test
inc
sbb
dec
js
jle
mov
jno
dec
orl
lock
sub
add
loopne
sub
sbb
cmp
aad
loopne
loope
and
call
pushf
dec
or
dec
xor
lea
cli
imul
inc
int3
repnz
aas
mov
sbb
test
xor
xchg
es
movl
lds
jns
popa
ret
add
jl
roll
cmpsb
cmc
inc
neg
pop
push
fisttpl
es
enter
and
inc
push
hlt
mov
mov
out
cmc
cmpl
lods
push
and
jmp
pop
pop
jno
insb
or
or
push
scas
adc
push
adc
add
sbb
or
mov
loope
mov
sbb
xor
into
das
jle
rcll
add
ret
sbb
mov
psubsb
push
adc
addl
in
sub
and
cmp
jne
mov
test
pop
mov
xor
xor
sub
dec
mov
push
push
jne
add
adc
test
adc
ret
dec
add
arpl
imul
out
and
daa
sub
or
jp
lret
dec
adc
xchg
imul
test
sbb
in
andb
lds
mov
add
stos
cwtl
aam
mov
pop
jecxz,pn
cmp
movsb
jp
fidivs
loop
mov
pusha
cs
ret
pop
sub
mov
popa
or
jae,pt
aad
mov
call
addr16
imul
xor
cmp
test
xor
fs
scas
fnstcw
sub
das
jp
inc
test
subb
xchg
inc
push
mov
ds
filds
pop
xchg
std
xor
or
addr16
add
xor
xchg
xchg
fwait
xor
cs
mov
pavgb
mov
adcb
push
or
inc
adc
jb
push
in
or
aaa
ret
inc
cli
daa
js
push
xlat
mov
cmp
fsts
jae
fwait
insb
xchg
push
mov
jbe
inc
call
jnp
add
xchg
dec
jno
or
cmpsl
test
sub
fsubs
fbld
insb
outsl
and
sbb
arpl
mov
sarb
xchg
in
push
pop
ret
inc
cli
add
push
out
mov
pusha
sub
pop
sub
xor
jl
es
fiadds
jecxz
out
dec
push
aam
inc
aas
in
aas
bound
cli
int
sbb
insb
les
insl
test
cmp
add
ret
push
lret
bound
dec
out
or
or
arpl
dec
sub
dec
into
cmp
mov
sti
push
fld
repz
push
leave
andl
jae
fldl
jne
jle
cmp
push
aam
insl
xchg
popa
daa
or
int
arpl
xchg
mov
sub
dec
in
shlb
cmp
movsb
xor
outsb
dec
mov
lock
mov
call
adc
inc
pop
inc
jnp
sub
add
call
fwait
lock
mov
sbb
and
push
shll
jmp
cmp
movb
xchg
jg
aaa
adc
cmc
sub
jle
jle
jp
shll
adc
cmp
fbstp
ret
and
pop
les
dec
clc
lea
jg
push
pop
sub
sahf
frstor
sbb
pop
or
outsl
mov
popa
adc
or
dec
shlb
adc
sbb
nop
in
dec
mov
jbe
jae
push
adcl
or
testb
xchg
mov
out
aam
fadd
add
mov
iret
or
or
scas
lret
in
dec
jbe
loopne
stos
mov
and
sub
sbb
pop
pop
or
sub
sbb
adc
mov
add
mov
jnp
mov
mov
jecxz
fld
push
mov
mov
lods
cmp
jp
dec
aam
add
adc
shlb
cmpsl
shl
shll
es
mov
inc
gs
push
call
pop
or
scas
cmpsb
inc
xchg
aam
mov
fcmovbe
imul
arpl
sbb
or
dec
mov
inc
das
aaa
inc
add
inc
daa
xor
mov
adc
adc
sbbl
jmp
pop
sub
jecxz
cmc
xor
pop
es
jg
in
pop
loop
xchg
lock
add
mov
movsb
aaa
push
mov
addr16
mov
mov
or
adc
mov
nop
fs
and
jecxz
mov
test
add
jecxz
subb
xor
in
pop
or
and
movsw
lods
out
mov
pop
aad
pusha
jno
cli
push
inc
jmp
rcl
or
inc
pop
sub
in
ds
in
xchg
adc
cs
mov
xchg
xchg
adc
cmc
sub
or
test
shl
aas
sbb
inc
inc
call
and
in
and
shl
sbb
xor
and
jb
arpl
mov
xor
rolb
mov
shlb
mov
in
pop
mov
mov
fs
ja
cmpsb
insl
mov
xchg
sub
mov
xlat
jne
lret
es
add
sbb
jno
cmpsl
or
in
enter
out
sbb
jecxz
push
inc
inc
mov
data16
sub
mov
pop
std
and
or
dec
xchg
pop
psubb
push
cmp
imul
and
cmp
push
dec
imul
jge
sub
loopne
inc
cltd
jl
fcmovnb
lock
rcll
popa
test
daa
push
lea
outsb
loope
mov
lahf
lds
push
sbb
icebp
test
test
lret
push
jae
and
mov
mov
in
js
push
orl
rcll
pop
nop
fbstp
pop
jno
push
imul
pop
call
jae
mov
lock
idivl
or
popa
cltd
test
sbb
das
and
adc
test
test
push
mov
cmp
pop
imul
jne
imul
cmc
push
or
sub
pusha
add
loopne
and
rorb
pop
sbb
or
sbb
and
sbb
and
push
daa
and
addr16
loope
and
push
jg
pop
push
or
pop
and
cmp
fucomi
xor
cmp
es
stc
mov
sbb
lea
stos
or
shl
cmpsl
push
pushf
ds
xor
aam
loope
aam
out
adc
loope
mov
and
mov
enter
and
dec
jne
adc
cmpsb
mov
stos
or
sub
jno
jnp
ds
add
fcom
sub
xchg
add
cmp
loop
add
add
xor
add
shrb
sbb
push
sub
inc
or
sub
bound
in
popa
orb
push
xlat
mov
test
mov
mov
adc
xor
sti
push
adc
sbb
cmpsb
mov
sub
loopne
dec
cmpsl
pusha
sarl
pop
jmp
je
loope
sub
insl
add
mov
in
dec
mov
mov
aaa
add
pop
adc
aad
ja
xchg
xchg
cmp
cmpsl
add
push
cltd
outsb
xor
sbb
jne
push
clc
add
hlt
dec
sub
add
mov
or
out
add
mov
or
sbb
xchg
test
add
or
std
push
je
cmpsb
ljmp
pop
sub
mov
jge
testl
adc
pop
outsl
xchg
or
jnp
mov
jmp
pop
insl
inc
jne
sub
loopne
out
std
out
aam
dec
dec
dec
sarl
pop
test
jl
sbb
mov
aad
mov
lea
mov
mov
das
cmp
or
clc
bound
dec
test
bound
add
jg
aaa
pop
daa
xor
jmp
mov
scas
daa
cli
mov
push
ret
mov
daa
shlb
lds
cmp
pop
stc
sub
sub
inc
out
ret
scas
push
sub
nop
xor
lds
shll
mov
pop
or
dec
push
lds
sub
push
cwtl
in
cld
lea
jp
movsb
and
test
pop
les
xlat
cmp
jp
mov
inc
or
cmp
inc
add
mov
jne
cmp
sub
dec
pop
dec
rolb
test
in
jg
cmpsb
dec
movsb
dec
sysenter
movsb
loop
cmp
adc
pop
adc
cmp
xor
push
xor
sbb
cwtl
jge
rcrb
sbbl
add
dec
jecxz
divl
push
push
shll
and
add
ret
jno
pushf
test
cmp
and
add
lods
push
xchg
imul
pop
addr16
add
or
lcall
and
adc
repnz
mov
das
adc
in
pop
add
pop
rclb
jge
dec
ret
leave
rclb
inc
mov
mov
into
add
into
rcrl
sarb
cwtl
push
xor
data16
mov
add
test
daa
mov
nop
enter
sbb
sbb
sbbb
js
add
mov
ret
sbb
jmp
pop
sbbb
mov
lahf
inc
clc
ret
or
loopne
roll
xchg
jbe
push
inc
into
inc
fbld
ljmp
add
dec
mov
ret
sbb
lcall
add
xchg
mov
inc
movsl
push
mov
xor
mov
outsb
push
fildl
push
sub
jle
add
in
pop
and
test
dec
jo
adc
xor
push
hlt
jl
add
add
push
or
enter
push
sub
loopne
ret
sbb
popf
fsubl
lcall
push
out
fxrstor
xlat
jle
es
je
adc
push
addr16
fisttps
mov
daa
pop
dec
sub
or
pop
addr16
imul
stos
inc
lahf
jl
fcmovu
aad
or
xchg
sbb
sbb
sbb
jno
or
sahf
adcb
dec
and
mov
sbb
cwtl
ret
sarb
and
xor
mov
pop
xchg
ret
cmp
fstpl
test
or
pop
xchg
shlb
xchg
adc
sarb
mov
cmp
ljmp
and
and
sbb
cwtl
pop
xchg
add
cmc
popa
add
jno
iret
adc
aad
in
mov
mov
and
adc
test
js
outsl
mov
pop
rorl
ret
jmp
cmp
push
pop
or
cmpsb
movsl
adc
pop
and
das
out
sbb
mov
mov
inc
mov
mov
sbb
movsb
pop
adcb
dec
inc
xchg
sbb
xchg
xchg
addl
pop
js
mov
add
or
into
mov
inc
xor
sbb
cmp
adc
lret
lds
add
pop
les
fstps
fistpl
sbb
imul
sbb
movsb
fsubrp
mov
cld
dec
ret
mov
adc
mov
add
int
cltd
jo
subl
push
xchg
subb
mov
bound
pop
sbb
inc
add
pushf
leave
mov
fisttps
push
adc
push
shrb
mov
inc
loop
es
and
lret
or
sub
aas
ljmp
adc
rcll
dec
sub
xlat
mov
sub
mov
addr16
add
aad
dec
call
mov
push
fsubrl
push
and
push
push
ret
ja
cmpsb
addr16
mov
mov
movsb
test
fidivs
adc
lea
xchg
fistpl
xor
jbe
loope
mov
pop
out
data16
jbe
inc
add
inc
or
dec
xchg
pop
mov
add
inc
or
js
fldenv
dec
loop
sarb
pop
push
out
jl
pop
mov
xor
sbb
shlb
cli
push
sahf
adc
dec
fnstcw
je
int
ret
fstpl
adc
pop
push
lret
xchg
pop
aam
pop
icebp
push
orb
out
add
aas
shl
mov
mov
les
or
insl
pop
pop
and
jp
push
add
sub
ja
mov
sub
push
aas
or
mov
add
or
or
push
add
pushf
mov
lret
or
mov
ret
lret
test
cmc
and
fldenv
rcll
rcrb
aam
xchg
push
dec
mov
inc
or
test
stos
pop
pushf
js
mov
inc
jl
fwait
push
call
add
ret
or
fildll
xchg
pop
jmp
scas
lcall
sub
stos
xchg
pop
jl
imul
dec
fs
xor
jnp
pop
add
mov
adc
jl
cmp
xchg
not
xor
bound
or
cmp
imul
push
les
das
cmp
movsl
fcompl
xchg
push
jbe
sbb
les
popa
xor
sbb
push
scas
bound
out
xor
push
mov
or
and
lods
add
adc
out
rorl
outsb
imul
or
or
jp
lods
iret
cwtl
call
sbb
add
xor
inc
jl
or
sub
xor
imul
push
xchg
jb
aaa
cmc
popf
cmp
cmp
cmp
push
aam
aam
sbb
and
pop
loop
in
cmpsl
mov
mov
imul
adc
mov
sbb
jl
add
push
mov
inc
rorl
repz
repz
aad
mov
imul
repnz
and
lcall
aaa
add
addr16
inc
aam
jae
mov
cmc
xor
mov
stos
add
mov
cmp
mov
mov
cmpsb
jle
jl
jp
das
mov
cmp
mov
mov
ret
jmp
adc
mov
les
shll
jne
xor
push
cmp
xchg
add
dec
pusha
or
popa
inc
pop
cmp
mov
lcall
or
jns
xor
das
sub
jb
rcr
sarb
adc
xorl
mov
mov
fsubrs
push
cmp
sbb
pusha
mov
adc
mov
sub
imul
imul
dec
insb
or
repz
aad
sbb
jl
jecxz
mov
andl
inc
pop
movsb
pushf
adc
add
jb
aaa
mov
outsl
adc
ljmp
jmp
mov
ds
xor
mov
add
and
lock
adc
adc
pop
les
or
dec
dec
xchg
dec
sub
mov
sbb
cmpsb
insb
sub
mov
push
gs
inc
cltd
xor
jnp
add
cmp
fs
fwait
cwtl
add
out
je
inc
testb
inc
mov
mov
loop
adc
mov
into
push
sbb
mov
iret
je
int
pop
mov
out
sub
dec
jnp
mov
mov
mov
pop
out
or
and
inc
xor
xor
xchg
xchg
sub
jmp
inc
pop
cmp
arpl
sbb
lods
jnp
daa
sub
push
xchg
push
jne
mov
jge
inc
sbb
je
pop
xor
lods
fcmovu
popa
inc
xchg
data16
nop
mov
lock
pop
fcomps
jo
and
mov
cmp
cmp
pop
mov
lret
sub
loop
cmp
mov
shrl
ljmp
paddsb
jge
test
adc
leave
push
push
rcrb
lret
xlat
add
add
jnp
pop
inc
xor
mov
adc
inc
out
mov
sbb
and
imul
sbb
js
sti
and
or
inc
mov
ss
adc
jle
int
jno
leave
jp
fidivrl
repz
pushf
mov
xor
push
scas
std
outsb
cmp
add
pushf
jne
pop
sub
pop
cmpsb
stos
inc
pop
daa
add
dec
push
dec
sti
arpl
add
outsb
jns
jp
addr16
cmp
lret
jno
out
dec
xor
mov
rclb
clc
mov
aaa
aad
cmpsb
fwait
cmp
cmp
cmp
icebp
add
push
decl
cmp
cltd
and
xor
and
nop
push
jle
loop
ficoml
push
adc
or
outsl
das
add
addr16
scas
push
aad
mov
jnp
cmp
mov
add
mov
mov
push
xchg
scas
popa
fdivrs
ret
cmp
adc
inc
add
or
in
loope
push
sub
mov
inc
les
cmpsl
imul
fwait
je
jbe
insl
aam
sahf
add
mov
das
loope
ret
nop
rolb
fldenv
inc
jle
sbb
cmc
dec
xchg
test
in
subb
xchg
add
xchg
jnp
mov
xor
sti
into
scas
das
pop
add
jno
add
in
data16
aaa
or
aas
fldcw
mov
mov
mov
repz
push
and
sbb
push
pop
cli
lds
das
mov
test
or
adc
insb
cmpb
pop
std
jge
jge
or
jecxz
sti
inc
js
or
inc
sbb
and
push
iret
add
push
loope
inc
add
mov
cmc
in
les
mov
sbb
outsl
popf
dec
lcall
mov
jmp
xchg
add
fsubr
cs
leave
sbb
adc
jnp
fs
rcrl
jecxz
cmp
jbe
bound
cmp
pushf
jno
insl
pushf
xor
pop
xor
loope,pn
inc
add
jnp
mov
cmp
test
add
add
add
sub
add
dec
loopne
ja
add
xor
or
or
imul
or
xchg
add
pop
and
cwtl
sub
add
inc
push
add
aam
addb
or
mov
cmpsl
pop
imul
xor
pop
addr16
xchg
inc
pop
inc
xchg
cmp
add
push
shll
jo
or
addl
mov
mov
inc
mov
dec
add
inc
mov
sub
dec
sub
xchg
fdivrs
mov
mov
cmc
dec
mov
aam
fsubrs
push
push
lret
dec
lret
ret
aas
imul
dec
cmp
add
fsubs
pushf
in
les
sub
inc
leave
lret
push
jl
mov
jmp
daa
mov
pushw
gs
push
adc
push
cmc
xor
sub
rcll
sub
add
and
insb
not
push
test
cmpsl
das
das
loope
loopne
insb
lret
into
push
gs
in
add
push
push
or
lock
mov
pop
mull
shl
pop
mov
inc
cmp
incl
sub
adc
xchg
dec
add
ja
mov
ja
add
jl
loop
mov
dec
sbb
xor
shll
insl
or
or
inc
sbb
movsl
jle
test
fildl
push
das
or
xor
and
rcrb
xchg
rcr
je
pushf
inc
xor
dec
fsub
mov
ret
xor
aaa
sub
jae
lods
dec
add
xlat
sbb
aaa
mov
sub
aam
mov
shrl
or
aad
sub
stos
and
xor
pushf
sub
inc
es
pop
lods
or
cmp
bound
dec
add
push
enter
out
std
sub
xor
xor
cmp
xchg
or
push
or
imul
cmp
out
fimuls
or
insb
add
pop
xor
ficomps
xor
fbstp
bound
jecxz
rorb
xchg
mov
data16
aam
xor
das
and
notl
out
mov
and
sub
sbb
subb
or
pop
jnp
bound
decl
push
ss
adc
dec
js
jmp
sub
imul
fwait
jne
jb
icebp
pop
mov
xor
imul
js
sbb
icebp
sbb
sub
fidivs
fsubrs
mov
jnp
stc
sub
test
push
push
arpl
push
inc
arpl
cmp
xor
data16
ret
or
mov
lds
pop
es
out
mov
push
iret
es
jl
fcmovnb
push
jg
dec
out
xchg
jg
jne
or
mov
and
or
sub
frstor
or
int
js
fistpl
or
pusha
pop
inc
add
cmpb
notl
jl
into
into
dec
jbe
xor
hlt
mov
lahf
inc
cmpb
xor
xchg
mov
clc
sbb
cmpsb
adc
cwtl
pop
push
fsubrp
pop
rcr
icebp
gs
out
push
pop
arpl
dec
lcall
insb
xchg
or
or
fldenv
cmpsl
in
sbb
jge
mov
je
sarb
mov
outsb
insb
ss
cld
mov
mov
ja
sbb
das
fsubs
or
pusha
das
mov
jb
sub
pop
mov
fwait
gs
ss
push
popa
mov
inc
jp
push
loopne
xchg
ss
pop
es
xor
xorl
js
test
lahf
sub
sbb
es
inc
sbb
push
dec
pop
es
xor
sbb
out
jmp
sti
xchg
jne
xor
sbb
repz
adc
xchg
xchg
testl
andw
decl
iret
mov
xadd
repz
sbb
or
movb
adc
aad
push
fcmovnbe
add
cmp
push
pop
gs
sbbl
scas
rcll
xchg
jno
inc
xor
xchg
mov
aad
adc
loope
rcrb
call
xchg
rorl
push
lret
cwtl
mov
and
rcrl
xor
nop
fisubl
daa
push
dec
xlat
xlat
cmp
pop
xor
sub
aas
adc
js
add
pop
out
sbb
inc
xchg
sbb
cwtl
and
pop
mov
sbb
push
dec
in
fidivrl
xor
add
aas
adc
pop
jno
xor
pmaxub
ficomps
inc
pop
aaa
ds
fsubrs
popa
jb
mov
pop
iret
movd
mov
lods
das
push
pop
mov
dec
outsl
sub
int
xor
pop
arpl
xor
into
sub
sub
lea
jnp
lahf
ret
or
jnp
mov
inc
imul
add
jl
push
cld
pop
inc
ja
xor
add
or
fwait
sbb
mov
and
inc
push
scas
dec
stos
into
ret
lock
daa
mov
jge
cmp
fdivp
bound
xor
jnp
sbb
add
inc
mov
arpl
imul
add
push
aas
adc
mov
popw
mov
adc
xchg
mulb
fs
jno
jb
sub
mov
mov
test
mov
loopne
lahf
and
jbe,pn
out
add
push
xchg
sub
or
daa
lock
add
xchg
gs
mov
andb
push
fists
leave
sub
fcmovnu
lcall
loop
mov
sbb
mov
pop
fisubl
inc
and
dec
out
repz
pusha
sbb
mov
ret
cwtl
push
in
ljmp
cmp
mov
add
mov
inc
push
jg
sahf
insb
mov
mov
add
loopne
pop
or
aad
sub
xor
es
jae
jl
pop
mov
daa
in
jb
or
cwtl
ljmp
cli
push
call
sub
or
dec
add
jbe
xor
xor
xor
pushf
lods
test
mov
mov
inc
ret
add
jnp
mov
push
loopne
jl
xlat
sub
fcomps
dec
js
push
lret
jp
xchg
stos
test
xor
mov
sub
das
jb
add
cwtl
je
mov
sbb
xor
and
cmpb
dec
cwtl
add
arpl
ret
xor
add
pusha
pop
lds
sarl
jp
ret
cmp
fsubs
and
cmpsb
pop
movsl
stos
nop
movsb
push
dec
shrl
ljmp
sbb
cmp
enter
jecxz
daa
mov
pop
jg
mov
xor
cmp
sbb
out
movlps
fimull
scas
jnp
xor
mov
xchg
mov
ret
pop
popf
dec
roll
xor
imulb
cmpsl
inc
les
jl
and
cli
inc
push
jbe
testl
mov
mov
sub
cmpsb
gs
popa
test
lds
sub
add
and
out
sbb
mov
cwtl
in
into
xchg
sbb
or
insl
imul
push
sub
and
jo
andb
jmp
cmp
nop
jp
fmull
pop
mov
cmp
and
add
xchg
dec
mov
or
popf
int
packuswb
or
cmp
icebp
mov
cltd
mov
dec
andb
jge
dec
xor
jecxz
mov
jo
add
movsl
push
jns
bound
enter
jecxz
sbb
roll
bound
outsl
out
les
iret
shlb
add
loope
out
gs
cmpsb
ja
inc
lock
notl
push
adc
aad
int3
cs
xor
sbb
outsb
cwtl
jnp
lret
xchg
dec
fbld
sub
fincstp
xor
test
jle
dec
add
dec
fsubs
adc
jge
aas
mov
and
sbb
scas
cmpsb
add
jno
inc
mov
pop
push
cmp
add
andl
mov
in
mov
jnp
das
pop
and
mov
push
movsb
adc
mov
aas
pop
adc
ret
adc
into
daa
lret
push
inc
cli
jae
adc
aaa
push
js
mov
push
jg
cwtl
inc
inc
adc
inc
scas
and
add
outsb
pop
sbb
pop
add
add
cmc
popa
lahf
push
or
and
pop
and
fdivs
jb
outsb
lret
mov
mov
je
ret
xchg
sbb
dec
rorl
pop
aaa
orl
dec
push
xor
aad
sahf
jmp
sbb
into
adc
add
sbb
in
insb
aam
or
hlt
mov
mov
inc
inc
cmpsl
out
rclb
inc
cmp
out
adc
push
xor
mov
cmp
stos
mov
sbb
pop
bound
cltd
cmpsb
jo
fists
push
pop
cmpsb
add
push
test
mov
and
add
jge
ljmp
jl
xlat
repz
inc
mov
je
add
shl
inc
subb
xor
idivl
out
in
mov
je
cmp
leave
sub
sub
ljmp
xchg
sbb
cs
leave
pop
and
or
inc
sub
jb
sub
cmp
push
mov
dec
push
lahf
es
je
ja
sbb
cmp
inc
adc
cwtl
inc
test
xor
pop
daa
idivl
scas
inc
xchg
push
xchg
push
sub
inc
push
cmp
mov
imul
mov
or
lds
mov
jmp
xchg
fsubs
cltd
mov
add
dec
fwait
jbe
mov
popa
gs
test
inc
pop
push
out
jb
stos
scas
pop
add
push
push
push
jp
xchg
and
lock
add
aam
add
cmc
ret
imulb
loope
inc
stos
or
add
sbb
fildl
sub
cmp
faddl
bound
lods
adc
adc
data16
fcomi
and
scas
pusha
aas
nop
inc
stc
dec
sub
fmuls
lret
call
add
and
cmp
adc
cmp
test
aam
cwtl
xor
fdivl
mov
cmpsl
daa
test
decl
cmpb
mov
sub
shll
xor
pop
sub
test
push
jg
inc
imul
push
or
push
repnz
sub
mov
sub
add
dec
sbb
in
push
sbb
jo
sub
mov
push
icebp
aam
addr16
xor
mov
or
push
repnz
or
and
inc
jno
jmp
jae
cld
pop
ret
mov
ss
dec
fdivs
mov
cld
mov
lods
xor
or
push
mov
and
adc
push
pop
popa
sub
inc
or
orb
loopne
mov
or
push
or
data16
jmp
dec
sbbl
xchg
push
lea
push
cmp
and
mov
insb
xchg
jp
repnz
pop
cltd
and
stos
dec
xchg
js
add
fsubrl
or
mov
add
fs
mov
push
cwtl
jno
jl
inc
rcll
cmp
mov
test
js
add
push
int3
leave
cwtl
inc
xor
add
and
inc
out
inc
mov
dec
out
add
adcl
mov
in
mov
out
sbbl
inc
nop
dec
cmp
test
adc
rclb
pop
adc
xor
ret
or
xchg
jmp
aad
jne
sub
adc
in
jne,pn
xchg
mov
mov
or
arpl
and
sbb
dec
xchg
ss
je
pop
lret
ret
sub
es
xchg
mov
jp
mov
inc
jne
jae
sub
ja
add
push
aam
sub
insl
mov
xchg
in
test
cmp
push
cs
arpl
imul
int3
xor
aam
clc
push
jl
clc
pop
cmp
fildl
test
test
jo
sub
and
loop
test
xlat
lods
xor
inc
sbb
cmpsl
popa
mov
pop
pop
xchg
xor
iret
arpl
les
leave
aas
lcall
bound
pop
stos
inc
sub
outsl
je
adc
loop
mov
sbb
and
lds
jmp
sub
das
js
lcall
leave
dec
scas
aad
outsl
adc
add
lret
mov
scas
fwait
push
sbb
xor
sub
stc
rorb
aam
loope
loopne
mov
addb
shlb
fisttps
rclb
les
inc
cmp
cld
jle
fisubs
cmp
cli
out
sub
stos
push
gs
jge
movsb
call
aam
leave
and
push
mov
cmp
push
adc
push
mov
sti
and
ljmp
mov
and
sbb
rorl
mov
insl
roll
sbb
dec
sub
push
push
fimuls
call
push
sub
push
loopne
or
push
pop
addr16
repnz
jae
cmp
or
aam
inc
fldenv
stc
outsl
or
std
and
clc
cmpsl
push
inc
clc
sarb
hlt
lea
popf
bound
call
test
add
push
cmp
sub
push
add
lret
bound
jge
inc
scas
pop
dec
mov
adcb
cmp
lds
push
xor
pop
inc
mov
leave
jbe
scas
andl
dec
rcl
lods
sub
adcb
into
pop
orb
cmp
int3
add
or
arpl
dec
or
cmp
scas
cmpsb
pop
and
pusha
xor
xor
je
adc
inc
fucomip
lret
push
mov
adc
push
imul
mov
push
cmovge
cmp
subl
movzwl
jmp
cmp
cwtl
mov
sbb
ja
shrl
popf
ljmp
and
jle
sub
ret
mov
nop
dec
out
ja
mov
cmp
movd
xchg
pop
ret
mov
cwtl
sub
push
mov
mov
in
aaa
pop
cs
dec
jbe
jo
push
adc
and
or
mov
orps
and
je
xchg
cwtl
sbb
pop
inc
pushf
test
popa
mov
cmp
and
lods
push
sbb
jle
or
mov
leave
lcall
imul
or
pop
xchg
xchg
aam
shll
mov
popf
add
pop
shl
sbb
cld
sbb
push
inc
out
push
sub
jne
lea
out
xchg
push
imul
mov
mov
add
les
loop
das
sbb
int
sti
mov
push
scas
cs
mov
dec
test
pop
mov
hlt
fnstcw
jg
pusha
add
sbb
sahf
hlt
mov
xor
loopne
xchg
popa
stos
adc
out
cmp
inc
pop
adc
pop
test
js
fnstenv
arpl
sub
inc
into
or
mov
stc
cli
mov
push
adc
push
jmp
fwait
xor
ljmp
cmpsl
pop
int3
lcall
mov
inc
xchg
clc
popa
ss
ljmp
popf
pop
adc
in
jns
shrb
xor
add
aad
adc
lahf
cmp
bound
lods
lret
pushf
jbe
fwait
inc
aam
jbe
jmp
sub
in
test
mov
adc
sbb
xor
xchg
les
imul
repnz
mov
pusha
dec
xchg
jne
dec
sub
xchg
adc
add
or
das
imul
jno
inc
inc
lret
xor
outsb
leave
aaa
adc
addb
jmp
iret
pop
jge
outsb
add
push
sub
es
pop
sub
cmpl
xchg
add
xorb
sub
push
push
arpl
adc
jp
mov
ret
lock
push
jle
push
out
dec
pop
daa
call
add
add
hlt
add
pusha
pop
inc
xorb
mov
in
outsb
adc
iret
fldt
add
fimull
sub
sub
or
sub
ljmp
ljmp
dec
in
rcr
cltd
mov
inc
aam
mov
imul
or
sub
cmp
or
and
xor
or
push
or
sub
inc
mov
pop
and
lock
jo
mov
fistpl
mov
mov
push
in
and
sub
jl
sbb
or
lock
mov
mov
pop
mov
imulb
jo
or
icebp
jo
fwait
adc
shrl
adc
mov
push
dec
or
add
lds
in
fcoms
and
fsub
call
mov
add
and
sub
xor
and
sub
call
mov
icebp
call
push
adc
and
pop
jmp
inc
sub
add
incb
or
adc
mov
fldcw
imul
jmp
into
test
jle
js
sbb
adc
jo
daa
lods
pop
ret
loop
dec
inc
xor
xchg
mov
jmp
jp
inc
mov
mov
aam
and
or
imul
xchg
xchg
inc
jl
test
adc
mov
dec
popa
cmc
push
cwtl
out
cwtl
popa
push
sbb
add
push
mov
or
hlt
fisttps
mov
xor
add
das
enter
cmpsb
cmp
inc
push
daa
sub
push
xor
pop
dec
push
mov
sub
pandn
sub
pop
pop
jnp
imul
add
sbb
pusha
xchg
push
sub
push
rcr
lods
mov
scas
fistpl
mov
inc
popf
adc
or
out
lods
sub
xchg
addr16
jecxz
repnz
test
inc
xlat
add
in
push
push
test
jge
aaa
mov
push
inc
sbb
adc
jle
jle
adc
mov
xchg
pop
shl
or
js
fstps
scas
jae
or
push
les
jo
pop
kmovw
cmp
pop
ljmp
push
ljmp
fiaddl
dec
rcrl
test
dec
adc
push
jg
dec
dec
loopne
jl
xor
xchg
mov
mov
shl
repz
push
arpl
push
jo
pop
dec
inc
fsubl
dec
je
xchg
adc
jmp
add
xchg
fstpt
cmc
ret
jl
hlt
cmp
mov
xor
sbb
xor
jbe
cmc
mov
xor
and
dec
xor
jns
movsb
stos
aaa
cmp
or
mov
sub
add
adcl
mov
aas
ret
cmp
add
lock
mov
popa
jo
and
icebp
lea
add
mov
mov
adc
pop
or
ds
mov
adc
test
cwtl
mov
out
xor
mov
pusha
or
fwait
adc
mov
add
or
popa
and
mov
mov
lods
xchg
push
sarb
stos
cmp
inc
popf
pushf
fldt
mov
je
xchg
clc
faddl
cs
push
xor
nop
mov
jg
push
sbb
or
dec
cltd
ret
sub
sbbl
cwtl
sub
ss
jno
cwtl
inc
cmp
loope
push
mov
mov
inc
repz
mov
dec
adc
sbb
loopne
inc
in
mov
icebp
add
iret
xchg
mov
or
movsl
test
cmp
mov
ret
inc
fiadds
arpl
je
inc
add
push
push
fidivrl
arpl
mov
push
cmp
cmp
fiaddl
ret
inc
mov
and
repnz
leave
dec
dec
cltd
mov
popf
adc
jo
dec
jl
loopne
fcmovnu
jo
push
in
cmp
mov
adc
ret
mov
fbstp
and
inc
pop
push
jge
inc
call
sbb
or
add
loopne
arpl
inc
mov
xchg
cmp
int
fdivrp
add
test
pop
or
push
out
aam
inc
shl
fsubs
xor
cmp
push
dec
pushf
les
mov
fcompl
mov
push
repz
cmpb
pushf
cmpsb
push
adc
xchg
add
jnp
sub
xor
adc
outsb
and
add
sub
test
sub
xor
aaa
in
sbb
pop
add
pop
and
inc
icebp
jge
adc
and
add
xor
mov
lret
mov
jmp
xor
cs
jmp
out
xchg
sbbb
insb
and
sbb
or
jnp
jbe
sbb
add
pop
sub
in
push
pop
lcall
push
adc
xchg
inc
adc
xor
lock
pop
push
aam
or
jnp
andb
aam
outsb
pushf
les
je
test
pop
lret
sub
cmp
repz
ret
xor
or
pop
mov
mov
adc
or
stos
dec
push
xorl
les
inc
xchg
adc
insl
movsb
fstpl
hlt
mov
adc
int3
add
insb
sub
inc
mov
mov
lds
push
or
push
int
and
in
loope
push
aaa
xor
xchg
add
in
adc
movsb
mov
negl
xchg
test
aas
mov
and
aam
je
and
jne
pop
push
addr16
iret
inc
sar
sub
sti
jnp
jmp
or
aam
push
ja
sbb
mov
sub
cmp
rep
shlb
idivl
mov
test
xchg
insl
add
cltd
sub
push
or
mov
lcall
inc
sub
pushf
xchg
pusha
push
mov
rorl
push
shrl
sub
cmpsb
idivb
pusha
dec
cmp
push
mov
icebp
jae
dec
jno
dec
jl
mov
rcrb
mov
jmp
rcr
pop
das
add
and
ret
mov
ret
add
notl
add
mov
mov
add
push
pop
stc
inc
outsl
in
sbb
daa
adc
sbb
sbb
mov
loopne
and
test
sbb
sti
cmp
push
dec
shll
data16
jl
jbe
hlt
pop
cmp
or
xor
ljmp
iret
dec
cmp
inc
scas
jnp
das
jne
add
ltr
int3
fdiv
push
add
add
das
adc
in
lods
push
in
sbb
mov
inc
fs
sbb
xor
jo
or
jmp
add
sub
or
aam
mov
fmull
pop
leave
pop
test
push
sub
adc
sub
js
mov
xchg
adc
sub
sub
ret
add
sub
pop
dec
or
lock
stc
test
sbb
and
sbb
jnp
ds
divl
in
aas
daa
lret
sbb
out
cmp
xchg
imul
push
xchg
and
lods
mov
sbb
fadds
add
push
add
mov
flds
jnp
loopne
lock
fidivrs
xor
jnp
xchg
movsb
mov
ljmp
push
fwait
mov
cmovle
mov
push
dec
cmc
or
xorl
cmc
ljmp
sahf
cmp
sbb
cmc
jb
ret
movsb
test
jge
mov
mov
or
mov
mov
jb
inc
xlat
xchg
les
addr16
or
jae
xchg
stos
jb
push
adc
mov
jo
inc
rclb
lods
mov
pop
sub
hlt
xor
fcomps
js
push
xor
cmp
or
inc
cmp
adc
mov
lock
push
ljmp
dec
in
mov
mov
sahf
dec
adc
loopne
jp
ret
cltd
inc
imul
push
adc
mov
add
sahf
sub
int3
daa
scas
std
cmp
rcrb
das
jb
rclb
in
popf
aam
or
test
cmp
cmpsb
movsb
push
mov
mov
jecxz
ja
loopne
data16
cmpsb
or
xlat
jge
mov
sahf
leave
cmc
hlt
icebp
sbb
xchg
mov
cmp
dec
test
int
xchg
std
push
lods
icebp
adc
dec
or
mov
cmpsb
fldt
sbb
xor
sub
insb
add
rcr
loope
push
cmp
inc
inc
cmp
data16
mov
pop
sahf
dec
jmp
das
add
mov
insl
stc
scas
push
sahf
push
mov
jge
mov
lret
dec
call
nop
andb
sub
mov
mov
repz
in
dec
dec
out
pop
mov
push
out
xor
jecxz
adc
mov
jo,pt
push
daa
lcall
ret
jnp
jecxz
sbb
inc
test
out
push
or
enter
loopne
jl
lret
cmp
sbb
xor
bound
fwait
orb
jl
sub
xor
or
jb
out
push
mov
in
in
cltd
gs
loop
adc
rol
inc
pop
mov
sub
or
cmp
push
rcl
cmpsb
push
pminsw
js
mov
mov
mov
fstl
sub
nop
icebp
add
int3
notb
test
pushf
dec
adc
leave
sbb
subl
das
mov
insb
ss
mov
mov
xchg
inc
sahf
ret
sbb
outsb
andl
loopne
js
into
lret
xor
test
jecxz
movsb
add
inc
cmpsb
sub
or
sbb
sub
sub
lret
cltd
mov
mov
add
inc
loopne
add
jl
xor
cs
inc
jo
or
mov
ret
mov
jmp
jno
pop
cmp
jae
sahf
cmpsb
add
mov
sbb
pusha
xlat
mov
jmp
js
divb
jmp
xor
xor
xor
stos
pop
jo
subl
xlat
jne
movsb
mov
popa
inc
lods
inc
sub
in
xor
divl
adc
test
lds
lea
and
jecxz
jo
dec
jb
ja
divl
or
cmc
jo
sbb
adc
notb
mov
scas
adc
push
shrl
ret
pushf
mov
mov
mov
push
in
jo
test
mov
and
sete
rcrl
aaa
and
mov
outsb
xchg
pop
outsb
inc
mov
mov
scas
arpl
loop
adc
mov
out
adc
stos
pop
jb
das
pop
xchg
xor
adc
fsubrs
push
and
test
mov
cmpsb
movsb
mov
xchg
dec
xchg
es
mov
jp
mov
adc
and
cmpsl
xor
test
test
aam
outsb
push
cmpsl
xchg
movsb
and
cmpsb
cmpsl
dec
ficompl
pop
cmp
enter
add
movsb
sbb
into
fisttpl
mov
mov
clc
mov
mov
cs
xor
popf
and
push
scas
popa
sahf
lcall
or
int3
clc
jo
cmc
js
xor
jb
lcall
sub
dec
or
cmpsl
adc
mov
leave
xchg
in
cwtl
loope
repz
ss
daa
and
pop
mov
aas
fnstsw
stc
sbb
sbb
adc
adc
jmp
xor
xchg
lock
add
ret
dec
xor
add
mov
dec
aas
jnp
addb
add
loopne
jno
das
js
jo
aam
add
imul
adc
dec
xchg
mov
call
mov
inc
mov
xor
xchg
push
add
inc
out
repnz
fildl
inc
test
adc
and
sbb
out
or
shlb
cs
shlb
scas
jl
mov
add
sub
les
pusha
shrl
loop
ficoms
xchg
test
out
push
or
inc
sbb
inc
push
push
inc
das
inc
pop
sbb
loop
xchg
xor
xor
shll
inc
hlt
lahf
and
lock
sub
fnstsw
sub
dec
adc
in
sub
mov
push
adc
jecxz
mov
mov
andb
movsb
xor
or
fisttps
dec
jmp
outsb
fcomp
pop
or
push
rorb
or
add
mov
lock
add
xchg
push
mov
out
je
add
in
jmp
sub
sbb
mov
xchg
bound
adc
and
jmp
sbb
adc
cmp
inc
test
dec
cs
mov
aam
pop
mov
fiadds
sar
sub
adc
cmpsb
jne
jmp
cwtl
add
sbb
scas
fnstsw
dec
sbb
and
mov
andl
inc
xchg
repnz
and
ret
cmp
push
push
jl
xchg
stos
bound
pushf
sbb
pop
cmp
dec
add
push
add
das
test
stos
repz
pop
rclb
inc
pop
inc
xchg
adc
push
adc
jmp
jno
testb
stos
xor
arpl
add
jno
scas
ret
dec
mov
dec
test
dec
sti
dec
jo
jmp
push
jge
daa
repz
mov
pop
mov
cs
mov
out
fxch
lret
add
and
mov
fbld
orl
popf
xchg
insb
rcrb
rorl
add
in
adcb
daa
out
adc
scas
cmp
loope
add
jb
xchg
mov
call
sub
mov
orl
lcall
inc
sar
or
or
sbb
arpl
cmpsb
rcll
dec
mulb
adc
int
push
xor
push
nop
mov
fidivl
outsl
dec
push
jbe
xchg
les
push
jo
rcr
jns
test
inc
das
fldl
test
repnz
aas
add
lret
xchg
mov
js
add
ljmp
lock
out
js
mov
xchg
inc
pop
inc
dec
icebp
inc
ror
add
xlat
loopne
mov
mov
push
pop
mov
push
adc
add
popa
shrb
push
icebp
inc
mov
pop
xorb
sti
test
mov
inc
pushf
push
iret
mov
inc
pop
sub
fnclex
jne
hlt
mov
xlat
ja
push
cmp
cmp
inc
mov
bound
stos
jp
inc
and
daa
fdivp
pushf
sub
pop
mov
outsl
ret
cltd
sbb
cmpsb
xor
or
push
sbb
sub
test
dec
xchg
clc
jp
loope
cwtl
adc
shll
xor
mov
out
imul
jl
push
inc
fwait
inc
sub
mov
xor
xchg
jmp
sub
mov
cli
outsb
mov
pop
mov
jns
jge
push
lock
pop
add
inc
sub
mov
fiadds
jno
adc
stos
loopne
mov
arpl
dec
addr16
xchg
add
or
bound
sub
and
call
aam
and
mov
iret
jp
add
mov
fildl
mov
mov
inc
aad
fistpl
xor
test
jo
mov
adc
jnp
dec
sahf
pop
mov
push
dec
xor
cmpsb
mov
imul
or
movsl
jb
notb
mov
imul
enter
aam
sbb
in
lods
fwait
lods
adc
sub
adc
cs
mov
daa
in
push
push
pop
mov
sbb
push
in
and
mov
aam
xor
pop
daa
js
or
dec
sub
out
sbb
push
out
fldcw
ljmp
cmp
pop
pop
ret
repz
nop
ficomps
sub
test
push
mov
inc
and
dec
jg
shl
or
pop
into
movsb
push
inc
inc
imul
les
aad
in
mov
test
jmp
add
or
es
cld
dec
stos
outsl
ss
shll
loopne
sub
repnz
aam
add
inc
loop
mov
je
and
std
popf
sahf
push
sti
jb
imul
dec
das
inc
cmp
pop
mov
shlb
sti
imul
mov
push
mov
popf
test
jae
sbb
jnp
push
ret
or
sbb
push
xor
or
xor
add
mov
or
or
jge
push
ret
jl
sbb
pcmpeqw
subb
rolb
lds
mov
pop
in
adc
iret
test
xor
adc
ja
dec
sbb
or
shll
inc
shl
xchg
xor
fisttpl
add
pop
jmp
pop
and
loop
jecxz
sub
sbb
jge
sbbb
and
push
push
xor
jo
cmp
andb
jo
cmp
pushf
push
adc
add
cmp
pushf
jne
pop
in
xorb
dec
sbb
lret
int3
lcall
mov
call
add
lret
or
fimuls
pop
scas
fbld
js
cmp
add
push
xchg
push
daa
fidivrs
cmc
mov
jl
jnp
lcall
psllq
repz
add
lahf
or
add
add
les
lds
mov
xor
enter
push
xor
and
add
mov
xchg
xor
dec
insl
xchg
inc
mov
aaa
hlt
in
add
lret
mov
add
adc
pusha
sbb
addr16
scas
add
mov
add
ret
shrl
shl
pop
adcl
stc
adc
mov
call
mov
aad
scas
sub
cmp
mov
dec
addb
add
sub
lret
jnp
cmp
and
or
es
inc
mov
add
mov
and
xorb
cmp
xchg
in
bndstx
sub
clc
sahf
sbb
and
mov
mov
pop
fsubrs
pop
push
in
insl
repnz
cmp
adc
push
xor
or
xor
dec
mov
adc
mov
pop
push
arpl
repnz
gs
mov
mov
sbb
or
mov
test
js
mov
js
adc
fbld
sub
dec
and
inc
clc
push
add
test
cwtl
add
test
dec
xor
or
sub
or
jle
xchg
xchg
ret
outsb
andl
aas
or
cld
ret
push
out
xor
fdivrs
popf
sub
xchg
inc
addb
jo
orb
or
test
add
add
pop
sub
mov
hlt
or
ret
lret
or
in
jmp
pop
insb
shlb
lods
mov
popf
mov
fcompl
cwtl
aad
inc
cmp
push
dec
add
test
adc
ljmp
push
ror
inc
add
fdivs
sarb
int3
xor
pop
adc
pop
shr
lahf
shrb
jl
jmp
lock
sub
fcom
je
or
ret
outsl
mov
movsl
and
repz
fwait
add
clc
xlat
add
popa
mov
js
sbb
cmp
sbb
pop
movsb
pop
outsb
mov
and
jl
cmp
data16
and
push
jg
test
fldz
pop
ret
divb
pop
shl
popf
add
xor
repz
sbb
pusha
pop
outsl
sub
rcrb
rolb
loopne
cmp
mov
jnp
jl
sbb
cs
mov
jg
adc
adc
out
fs
test
cmp
jb
inc
jno
aaa
movsb
ret
and
mov
sub
jg
add
cwtl
ja
mov
mov
sub
je
jle
sbb
scas
dec
mov
js
out
push
mov
push
inc
pop
rolb
mov
lds
std
fimull
jbe
push
jecxz
add
xor
pop
cmp
cmp
bound
jmp
dec
jg
daa
xor
shrb
push
cmp
push
hlt
pushf
jnp
or
aam
xchg
lock
lds
jnp
pusha
inc
xor
or
add
xchg
push
popf
inc
lds
pop
aam
or
jo
cltd
fistpl
add
mov
mov
sub
lds
dec
add
ljmp
cmp
add
adc
xor
mov
xchg
mov
mov
add
push
mov
dec
test
int3
push
push
jo
bound
scas
hlt
lods
sbb
div
sub
arpl
and
cmpl
adc
ficoml
jmp
push
andl
out
cmp
loopne
add
dec
aam
test
imul
add
repnz
mov
xor
mov
or
mov
jne
sub
xor
xchg
mov
in
mov
flds
sub
pop
mov
leave
push
pop
add
mov
mov
mov
xor
and
scas
adc
inc
mov
sbb
ljmp
or
aas
fwait
lds
xor
jg
xchg
fiadds
ret
jmp
sbb
or
dec
mov
loopne
inc
cwtl
jp
lods
push
insl
cs
shrl
mov
mov
imul
push
mov
stos
xor
test
adc
ja
out
pop
lret
aaa
jl
pop
xchg
pop
inc
repz
lret
mov
fs
aam
rcr
bound
sbb
mov
testb
or
aam
and
imul
push
shrl
ret
fmull
mov
out
sbb
add
adc
test
arpl
cmpb
mov
xor
sub
int3
xchg
stos
xchg
mov
sub
sbb
mov
inc
mov
and
inc
xchg
mov
rclb
jp,pn
adc
mov
enter
sbb
adc
mov
or
cltd
add
outsb
sbb
mov
test
pop
test
pusha
popa
jo
and
pop
push
xor
shl
push
dec
mov
inc
or
fmull
je
xor
filds
arpl
loope
js
aaa
mov
sub
faddl
push
daa
adc
mov
and
icebp
hlt
xchg
or
ret
xchg
test
pop
jno
cld
xchg
xor
inc
adc
add
push
in
jmp
or
xor
and
rorb
adc
adc
dec
pop
ret
add
loope
pop
dec
fcoml
lock
push
dec
jg
jmp
push
rclb
popa
pop
sbb
lock
and
adc
sub
or
add
add
and
int3
or
inc
test
es
xor
xor
xchg
xor
dec
mov
push
push
sub
mov
cmpsl
sub
int
sbb
scas
dec
inc
xchg
rclb
adc
push
and
punpckhwd
sub
lret
pop
inc
push
inc
xor
sbbb
jmp
ret
mov
pusha
push
mov
mov
lds
mov
and
sahf
fsubrs
lahf
adc
sbb
lea
out
jp
cmp
daa
mov
aas
add
ret
rorl
mov
rclb
enter
fstps
inc
sub
mov
sub
imul
stos
mov
aad
xchg
shlb
mov
popf
pop
pop
outsb
dec
push
pop
or
cmp
mov
push
insb
ret
sub
roll
cmp
or
xor
neg
add
mov
and
inc
or
xchg
jg
adc
add
xchg
add
popl
bound
mov
xchg
cmp
sbb
pop
and
iret
xchg
pop
fs
mov
cmp
out
cmp
adc
xchg
mov
add
inc
popf
mov
adc
dec
pop
push
xchg
xchg
mov
js
loop
add
ljmp
notb
fmuls
cs
push
out
push
mov
xchg
movsb
mov
push
int
out
xor
dec
jnp
sub
sbb
inc
or
fucomip
sbb
adc
jno
add
mov
gs
push
les
test
stos
sbb
or
sub
or
dec
and
int
lods
and
add
and
xchg
dec
mov
sbb
fs
mov
push
call
xor
push
in
and
sub
scas
addb
mov
ds
movsb
mov
insl
pop
outsl
mov
xor
pop
sub
adc
jmp
push
sbb
insb
xor
cmpsl
sti
sbb
xor
cmpsl
sahf
push
imul
push
adc
imul
xor
push
pop
sbb
xor
out
aaa
test
shlb
fnstsw
cmp
fidivs
ljmp
add
and
pushf
insl
or
xchg
fnstsw
stc
das
pusha
inc
adc
push
mov
pop
mov
fsubl
fidivl
sub
adc
shufps
push
imul
loopne
imul
fcmovb
pop
in
aam
test
inc
sbb
mov
stos
call
and
xchg
inc
addb
sahf
cmpsl
mov
mov
push
mov
pop
sbb
xorl
int3
fstl
cwtl
add
mov
popf
push
into
insl
cmp
iret
or
shl
mov
xor
xchg
and
dec
jo
xchg
and
dec
jge
fdiv
fimuls
push
lcall
adc
mov
fwait
or
jmp
mov
jmp
int
lret
in
push
shrl
or
or
lcall
fwait
cmp
int
daa
jle
scas
ja
orl
stos
adc
shll
and
das
stos
or
scas
jno
xor
dec
cmp
or
push
xchg
jno
mov
xchg
add
mov
mov
mov
inc
stos
mov
lret
pop
sub
xor
xchg
inc
into
sbb
pop
xchg
push
jb
fwait
jo
add
add
or
mov
stos
adc
or
sbbb
adc
xlat
sbb
shrb
popa
sbb
and
lods
mov
sbb
or
stos
sbb
inc
mov
jg
adc
xchg
jl
pop
push
pop
sub
subb
stc
popa
sbb
mov
add
jmp
lods
test
repnz
push
pop
add
mov
xor
inc
ljmp
and
cld
push
mov
push
inc
pop
xor
insb
ret
jl
xlat
lea
stos
push
lahf
or
cmpsl
jl
sbb
dec
mov
add
stos
inc
adc
loop
es
data16
out
test
dec
subl
cmp
mov
cmp
ret
mov
inc
fdivs
adc
cmp
lods
stos
adc
stos
pop
jge
xor
lcall
mov
rcl
jge
lods
fs
aad
enter
mov
push
adc
stos
sub
xchg
cmpsb
nop
bound
cmpsb
mov
fistpll
sub
mov
cwtl
cmp
push
add
or
jp
lock
out
add
in
pop
ja
adc
sub
out
data16
mov
add
ljmp
lods
nop
push
and
cmp
enter
ljmp
out
inc
adc
repz
xchg
adc
mov
inc
das
sbb
sub
mov
push
pop
in
push
or
mov
sbb
popa
sbb
mov
shr
pop
dec
out
sbb
fucom
loopne
loop
cmp
xlat
sbb
pop
and
sbb
fisttpll
mov
xor
cmp
and
add
xchg
sub
fwait
stos
mov
movsb
pop
imul
mov
dec
mov
add
sub
iret
push
cmp
pop
cli
loop
cmp
repz
mov
insl
jb
insb
push
cwtl
and
mov
gs
add
ljmp
mov
movsb
pop
inc
sub
push
sbb
out
dec
sub
inc
xchg
or
cmp
sahf
lds
push
pop
jno
and
mov
fdiv
daa
jg
lods
das
fisubs
add
cwtl
sti
push
mov
xchg
push
outsb
mov
mov
push
or
and
pop
sbb
cwtl
or
xchg
push
or
sub
sbb
test
xor
rorb
adc
fnstsw
and
scas
sub
shrb
call
ljmp
lods
adc
das
or
sbb
xchg
mov
repz
lods
das
inc
push
xor
sbb
jnp
popa
je
mov
arpl
mov
push
xchg
les
jo
and
mov
sbb
bound
and
rcll
ret
sbb
lds
jge
shll
jae
dec
cmp
aad
test
xchg
and
cmp
dec
sub
inc
stos
jb
sub
pusha
xor
xor
xchg
add
aad
jl
inc
mov
sahf
mov
xor
push
inc
add
pop
push
add
xchg
mov
xchg
stos
pop
data16
scas
sti
sbb
xchg
xchg
iret
int
xchg
cmp
faddp
arpl
pop
and
enter
call
adc
shrl
ds
dec
inc
and
insl
pop
in
imul
ljmp
outsb
ss
outsb
xor
push
push
mov
and
xor
call
pop
das
pop
add
in
int3
cmp
sub
sbb
inc
stos
popa
add
xchg
aad
into
mov
aam
xchg
fs
adc
sbb
add
loopne
or
mov
jge
test
popa
sahf
push
adc
push
lea
inc
mov
dec
and
ljmp
mov
fsubrl
pop
leave
push
and
mov
xor
xorb
ret
mov
pushf
aad
jp
out
cltd
mov
xor
leave
pusha
mov
adc
sub
xchg
push
sbb
jp
shlb
movsb
or
adc
cmp
sub
js
es
cmpsl
int
sbb
and
push
popf
clc
shrl
xor
mov
adc
sub
dec
adc
lods
idivl
lea
adc
cli
mov
mov
inc
gs
pusha
mov
popf
ficompl
pop
xchg
and
and
mov
push
aam
mov
outsb
pop
cmc
or
popf
adc
and
mov
aam
adc
pop
lsl
or
lods
lods
adc
popa
dec
pusha
mov
cwtl
mov
int
xchg
push
adc
or
adc
mov
xor
xchg
loop
mov
inc
arpl
jne
loop
sbb
rorl
and
mov
rorb
jo
inc
mov
and
xchg
test
sbb
dec
outsl
xchg
lods
and
jmp
movsl
adcl
mov
pusha
adc
and
jae
and
test
adc
test
inc
pushf
loop
push
das
mov
repz
push
sbb
pop
in
sbb
mov
lret
mov
xchg
jl
and
clc
dec
test
fnstcw
js
sbb
xchg
mov
and
push
daa
lds
sub
int
xor
js
fwait
mov
xchg
rolb
pop
lods
dec
jno
test
mov
js
popf
add
test
jp
sbb
enter
sbb
shrl
mov
test
sub
adc
imul
or
push
sub
cmpsl
das
inc
fwait
pop
cmp
jbe
mov
mov
add
adc
add
jbe
cmp
ret
dec
call
and
pop
sub
mov
add
negl
cwtl
add
aad
or
dec
lahf
mov
xor
adc
cmp
cmp
call
push
jl
push
lock
xchg
cs
test
fucomip
dec
inc
shrb
push
pop
ret
loopne
add
sti
dec
sarl
jnp
cmpsl
inc
cld
mov
xchg
stos
fwait
bound
pop
pushf
js
adcb
adcb
push
cmp
cli
jb
arpl
mov
fildl
dec
mov
sbb
mov
test
or
mov
or
cmpsb
or
xchg
mov
cmp
push
and
cmpsl
push
dec
mov
cmp
leave
stos
push
adc
std
clc
sahf
jecxz
pusha
ds
pop
mov
sahf
jecxz
movsb
bound
test
ss
xchg
jge
sbb
std
sbb
mov
insb
test
test
sub
shlb
or
cmp
push
test
ret
popa
lcall
test
shlb
and
mov
mov
dec
adc
push
adc
fsubr
cwtl
xlat
std
sbb
or
pop
pop
inc
addl
sbb
arpl
add
lds
xor
add
dec
in
mov
mov
lea
sbb
mov
xor
and
js
add
sbb
sub
xchg
or
jo
jne
shl
dec
ret
out
sti
fsubl
mov
mov
stos
pop
scas
in
int3
jnp
shlb
inc
dec
push
jmp
cli
es
negl
cltd
adc
inc
movsb
jnp
jno
push
dec
mov
mov
faddp
test
lds
pusha
cli
ret
mov
jne
mov
fdivrl
mov
push
adc
gs
movsl
movsb
mov
mov
bound
test
pushf
xor
fdivs
jg
add
xor
inc
xorl
inc
push
test
mov
add
adc
mov
sub
ds
lret
cmpb
pop
cmp
push
dec
xchg
or
or
adc
inc
popf
and
mov
test
jae
dec
inc
iret
xchg
cmp
sub
adc
pop
fs
dec
icebp
lret
stos
fstl
or
lds
pop
lds
mov
mov
sahf
std
es
xchg
inc
mov
repz
push
push
lea
pop
add
adc
adc
xor
push
mov
xor
inc
push
aaa
fiaddl
pop
push
add
sub
mov
insb
add
or
enter
pusha
mov
in
je
jb
sbb
cmc
das
push
shlb
in
add
mov
leave
loop
adc
fwait
repz
adc
and
outsl
and
shll
add
push
mov
mov
pop
mov
and
or
adc
faddl
jp
vmovntps
scas
push
fucomp
and
push
pop
sbb
adc
jnp
or
lock
andb
mov
ret
dec
lods
iret
stos
bound
inc
pusha
mov
enter
or
orl
movsb
sbb
add
push
out
loop
pop
sub
dec
popf
scas
pop
rcrl
push
comiss
add
sbb
add
mov
stos
or
pop
loopne
jmp
mov
push
adc
or
inc
push
mov
sbb
sarb
pop
xchg
shll
dec
out
xchg
xchg
xor
sub
inc
clc
int
les
lcall
pusha
xchg
add
add
test
call
or
scas
loopne
fnsave
sub
test
test
sub
mov
es
sub
mov
inc
dec
push
jo
cmc
adc
lods
xchg
shr
paddb
out
dec
sub
ljmp
adc
mov
fwait
mov
add
wrmsr
and
test
jno
and
iret
int3
repz
scas
call
pushf
stos
and
sub
cmp
in
hlt
or
ljmp
push
clc
dec
push
hlt
or
cmp
push
adc
cmpsb
jecxz
roll
cwtl
xor
sbb
insb
sub
mov
stos
call
ret
cwtl
cmp
mov
add
outsl
fwait
jge
dec
push
xchg
dec
push
mov
pop
and
or
xchg
call
add
ja
pop
add
pop
movsb
sub
sbb
mov
xchg
adc
repz
sub
jmp
inc
ret
cmp
jo
adc
mov
inc
adc
and
mov
lcall
daa
call
dec
frstor
fs
add
ljmp
roll
fcompl
push
dec
fwait
cmpsb
push
dec
mov
mov
js
rorl
adc
and
sbb
jne
fwait
sti
jmp
mov
inc
icebp
loop
and
js
daa
push
push
imul
ret
xor
sub
jae
dec
jg
add
enter
push
jge
add
jge
sti
enter
popa
cmp
lea
cmpsl
sub
lret
cmp
mov
push
jp
sbb
push
lcall
lret
in
sub
sub
mov
inc
cmp
jbe
push
arpl
cwtl
stos
mov
and
mov
push
mov
pushf
pop
adc
add
ret
es
mov
movsb
ljmp
inc
je
aam
adc
jb
push
popf
daa
xchg
lea
push
adc
testb
ljmp
sbb
inc
fistps
inc
aam
lds
sub
or
jge
fldt
ficoml
jg
inc
dec
add
push
cmpsl
ljmp
rclb
add
cs
int3
sub
or
test
orl
out
push
inc
cmpb
enter
fiadds
sbb
imul
dec
in
push
dec
mov
xchg
inc
xor
xor
test
mov
add
orl
or
jbe
and
pop
inc
xchg
inc
or
in
cmp
mov
rcrl
loope
iret
cmp
test
ficomps
sbb
push
adcl
cwtl
rcll
mov
sti
mov
sbb
test
into
jo
pop
push
and
add
cltd
mov
xchg
or
jl
push
sub
call
add
mov
inc
jge
mov
insl
and
and
mov
vmaxps
loop
xor
ja
stc
or
pop
inc
ja
pop
xchg
cmp
push
pop
push
jge
aam
xchg
jl
mov
or
dec
inc
popa
jp
rol
movsl
and
mov
cmp
mov
adc
push
int3
imul
jl
es
xor
adc
js
cmp
or
sub
imul
lock
sbb
sbb
ret
mov
aas
fsubrs
jmp
mov
pop
pop
inc
inc
pop
xor
mov
push
sub
sub
jne
jl
add
in
jb
mov
mov
ljmp
adcb
movsb
call
sub
jle
rolb
push
lahf
xchg
daa
ljmp
ret
jp
int
sbb
mov
int
mov
sbb
imul
sti
stos
leave
pop
dec
jecxz
dec
call
rcr
pushf
cmc
and
mov
sbb
fdivrs
fwait
xchg
in
inc
test
ficomps
fmuls
xchg
xlat
je
call
cmpsb
inc
repz
xchg
movsb
and
lcall
jp
mov
aaa
push
mov
push
dec
mov
or
orb
and
lds
jmp
lea
mov
rcrl
or
inc
sub
xchg
stos
str
insb
xchg
pop
jae
mov
movsb
mov
mov
push
fstp
int
stos
push
mov
sbb
dec
mov
or
cmpsb
test
add
and
pop
and
xlat
ficompl
xor
jae
imul
popw
int
int
inc
sbb
inc
adc
stos
jp
jne
xlat
lods
xor
add
sub
xor
js
stos
lods
cmp
or
sub
arpl
push
and
inc
xor
fstpt
push
cmpsl
or
pop
jmp
loope
or
sub
inc
sub
or
mov
cmpsb
popa
dec
push
outsb
add
sub
cwtl
push
cwtl
icebp
cmc
lcall
mov
sub
mov
xor
pop
shrb
or
outsl
inc
sbb
or
cmpsl
add
subb
inc
ret
or
pop
cmp
dec
mov
gs
mov
lcall
add
insb
sbb
mov
mov
push
lahf
push
cmp
and
add
pop
sbb
and
sbb
movsl
mov
and
test
mov
push
xchg
and
pop
lock
xor
mov
cmc
loope
dec
cmpsb
movsb
xchg
cltd
call
pop
xchg
jae
fstpl
dec
jnp
das
mov
inc
cmp
mov
xchg
mov
je
push
cmp
addl
xchg
pop
xor
push
cmpb
and
and
add
mov
sbbb
adcb
inc
xor
sbb
mov
cmp
pop
xorb
mov
xor
xor
ffreep
push
dec
mov
jne
pop
push
xchg
test
leave
xchg
test
mov
aam
in
push
mov
aas
mov
xchg
jno
and
add
scas
shlb
mov
push
inc
jno
cmc
cwtl
jne
xchg
inc
mov
adc
pushf
xchg
sub
mov
popf
ja
imull
push
push
adc
dec
inc
xchg
cmc
xchg
andl
dec
icebp
add
call
adc
mov
xchg
pop
les
push
or
jae
test
lods
js
and
ret
xor
addb
inc
and
test
and
je
mov
mov
into
pop
sarl
movl
sbb
loope
adc
adc
js
leave
xchg
aam
jg
inc
int
dec
jge
push
subb
aaa
mov
mov
jns
inc
test
or
dec
pusha
jp
add
sub
mov
lahf
roll
dec
out
or
pop
or
mov
adc
mov
sub
addb
mov
iret
sbb
adc
addl
aam
cmovo
mov
cmc
imul
movsb
add
adc
shll
add
or
mov
mov
adc
das
jnp
cs
push
cmc
data16
and
push
roll
fnsave
or
xchg
jne
inc
mov
jl
andb
pop
popf
adc
pop
mov
in
jl
fcomps
loop
jbe
bound
inc
mov
push
pop
lea
mov
jp
fwait
cmp
test
insl
push
inc
into
roll
dec
adc
and
and
cmpl
mov
mov
pop
mov
repnz
add
dec
outsl
inc
test
pop
or
ljmp
stos
int
sbb
notl
xchg
scas
or
popf
mov
xlat
enter
test
and
push
pop
xor
das
ret
or
int
xchg
adc
fnclex
xor
push
add
dec
stos
pop
xor
arpl
add
add
sub
or
movsb
jge
pop
sbb
cmp
add
mov
sub
popa
sub
sar
mov
fildl
jge
fwait
popf
into
sub
std
pop
xlat
aam
jo
pop
arpl
rcll
stos
xchg
sbb
rcrb
adc
stos
scas
push
adc
and
insl
arpl
imul
sbb
movnti
cmp
sbb
xor
fninit
lcall
xchg
xor
jge
ds
je
cmc
pop
inc
pop
adcl
mov
movsl
push
shl
mov
popf
jo
enter
jmp
cmpsb
jb
and
int3
outsl
inc
mov
xchg
add
dec
adc
mov
and
idivl
cmp
xor
js
dec
jl
pop
adc
inc
xor
pop
adc
sub
add
test
iret
xor
jmp
sbb
test
pushf
add
sahf
mov
hlt
inc
dec
andb
or
jb
mov
rclb
jb
notb
shlb
xor
push
or
imull
jecxz
xor
push
mov
in
adcb
jno
out
mov
pop
insb
es
outsb
push
rcrb
dec
test
mov
push
add
repz
out
mov
orl
jp
aam
or
jne
or
shlb
adc
jb
mov
sbb
xor
inc
int
or
mov
fstpl
mov
out
dec
or
in
xchg
and
sub
es
adc
push
cmp
push
add
inc
xor
cmp
pop
lods
stos
aam
stos
scas
popa
sbb
push
test
lret
testb
or
push
cwtl
push
mov
mov
dec
lods
sbb
inc
dec
push
outsl
sbb
adc
sub
pop
call
cmp
shrb
out
out
mov
in
das
lods
rcr
pop
jne
jecxz
dec
dec
mov
ret
test
lea
js
push
out
dec
imul
stos
mov
cmpsb
js
push
adc
xor
add
mov
inc
fimull
dec
andb
outsl
sub
imul
cmp
in
xor
adc
pop
mov
movsb
fdivrl
sahf
daa
lea
add
addb
jg
add
add
sbb
sbb
aam
out
insb
fwait
cmpsb
imul
fs
hlt
hlt
or
mov
ret
inc
pop
add
push
lods
mov
pop
lods
fsubrs
into
rorl
xchg
les
add
sahf
or
cmp
sbb
mov
les
adc
xor
pop
fsub
inc
adc
mov
movsb
xorb
in
jo
and
rorw
push
mov
stos
sub
mov
or
insb
xchg
popa
mov
mov
jl
adc
mov
pop
mov
inc
loop
push
stos
fwait
jne
mov
push
aam
and
dec
hlt
lods
call
inc
and
mov
and
jno
adc
js
mov
push
ljmp
aas
xor
push
inc
arpl
jl
jecxz
adc
les
outsl
lret
fcomp
inc
jo
mov
mov
sub
dec
addr16
fs
mov
inc
xor
pop
test
xor
dec
adc
push
aam
cltd
js
sbb
cmp
push
stos
aam
lret
in
sbb
add
xor
aas
lret
adc
xor
sub
test
mov
mov
out
or
addr16
add
mov
jb
push
out
mov
mov
fcomi
ret
xchg
mov
aad
loop
and
pusha
arpl
xchg
sbb
cmpsb
add
cmp
outsl
and
inc
nop
jnp
mov
fdivrs
cmp
scas
xchg
ret
mov
push
mov
cmp
xchg
mov
dec
xor
adc
xlat
mov
adc
push
push
fistpl
mov
sbb
sub
fisubl
sbb
jo
jp
popf
mov
inc
jne
sbb
cwtl
movsb
sub
in
jp
in
outsl
stc
outsb
cmp
daa
sbb
jno
or
or
fbstp
out
mov
inc
cmp
mov
imull
sbb
aam
xor
pop
inc
push
sbb
pop
mov
sbb
cs
push
lds
inc
daa
mov
mov
hlt
inc
aas
xorb
sub
add
out
xchg
jbe
jnp,pt
int
mov
popl
xchg
pop
rdpmc
sub
push
jae
icebp
roll
das
xchg
inc
inc
or
mov
adc
sahf
orl
insl
das
add
xor
mov
ficoml
loope
jb
adc
outsb
fnsave
xorb
push
sbb
pop
jecxz
mov
and
das
sti
push
cli
das
add
and
xor
push
mov
aad
out
stc
sbb
xor
lretw
sbb
sahf
or
test
addb
mov
mov
in
dec
xor
and
add
jno
testl
inc
cmp
es
repz
jo
xchg
mov
add
add
cltd
data16
stos
sbb
iret
out
repz
xlat
jne
xchg
lcall
imul
dec
stos
loopne
rolb
adc
or
xor
cmp
push
testl
xorb
mov
pop
dec
mov
popa
fnsave
sub
out
orb
sbb
inc
popf
lds
daa
sub
fwait
jno
ja
and
push
sbb
shrb
clc
pop
mov
pop
aaa
sbb
xor
sub
mov
or
adc
decl
push
daa
push
or
andl
js
outsb
addr16
sub
adc
clc
push
sub
pop
daa
push
inc
popf
inc
jo
fwait
or
sub
xorb
or
cmp
test
adc
mov
add
mov
mov
in
mov
xchg
push
je
lcall
mov
loope
jnp
xchg
xorl
sub
xor
lock
mov
dec
jl
cwtl
fdiv
or
es
pop
mov
push
cmovno
js
push
mov
jne
aas
pop
pop
add
mov
fwait
xor
rcrb
test
cmp
ret
dec
inc
outsl
adc
cmp
cmp
push
push
into
push
xor
push
test
mov
ret
pop
mov
and
or
push
mov
mov
xor
push
push
dec
mov
inc
in
cmp
add
rorb
subl
pop
sbb
roll
aaa
test
ds
sub
inc
subb
sete
sbbb
push
aaa
ret
add
jne
aaa
or
cmp
mov
add
aas
es
cmp
aaa
ljmp
les
xchg
sub
push
call
cmp
mov
dec
or
hlt
sub
dec
sbb
das
dec
jmp
sub
test
cmp
sub
pusha
pop
or
int3
das
gs
retw
push
mov
push
xorb
movsb
js
sbb
daa
ja
ret
orb
sub
imul
xor
mov
and
dec
sbbb
jecxz
daa
ficoml
dec
je
add
jo
push
mov
mov
daa
mov
arpl
ds
adc
mov
or
and
mov
sub
cltd
mov
inc
adc
and
sub
test
stos
popa
push
jo
sbb
testb
scas
lods
lds
inc
sbb
mov
push
mov
mov
xchg
or
out
sub
pop
or
mov
mov
xchg
jo
xchg
add
bound
std
mov
pop
aaa
adc
push
pop
push
cmovnp
leave
pop
sub
cwtl
push
cwtl
aam
push
mov
pop
cmpsb
arpl
add
repnz
int
pusha
adc
imulb
jl
daa
mov
mov
push
jl
in
add
mov
add
push
cmpsl
arpl
stc
inc
outsb
ficoml
xor
jnp
xlat
mov
adc
pop
test
xchg
cwtl
xchg
xchg
shlb
inc
or
inc
das
fistpl
adc
xor
addb
mov
push
mov
xchg
adc
sub
mov
mov
sub
fwait
rolb
mov
les
jle
or
cmpsl
call
inc
cmp
ljmp
sub
loopne
cmp
fldl
and
pop
mov
int3
enter
mov
mov
adc
and
cmp
inc
inc
xor
es
test
test
scas
mov
iret
aaa
and
inc
push
mulb
mov
pusha
fdivs
sbb
or
jb
and
pop
or
jnp
stc
movsl
and
ffree
adc
mov
mov
mov
push
popl
fists
popl
test
pop
das
and
inc
mov
add
aad
inc
cmp
out
pop
mov
roll
bound
push
pop
stos
cmp
dec
jno
arpl
sub
ret
lret
jne
add
cmp
ja
sbb
cli
into
pop
xchg
les
pusha
mov
nop
and
mov
mov
add
sbb
push
lods
fmuls
pusha
add
repz
cmpsb
xchg
cmp
lock
stc
lret
xchg
jae
ljmp
andb
add
cs
lret
cmpsl
mov
add
xchg
cmp
dec
in
std
sahf
push
mov
out
leave
sbb
es
lock
scas
das
pushfw
push
cli
mov
inc
aad
rcrb
inc
divl
add
jno
call
lahf
inc
or
fs
and
add
in
adc
das
pop
xor
and
jecxz
out
out
pop
inc
lcall
in
mov
adc
aas
cli
pop
out
out
pusha
mov
scas
pop
daa
pop
bnd
sbb
into
sub
adcb
addb
or
sub
sbb
mov
inc
scas
inc
mov
mov
adc
xorb
les
add
es
movsl
gs
test
ret
adc
fimuls
pusha
push
aad
adc
add
pushw
popa
add
and
rclb
imul
pushf
adc
js
xor
xchg
or
fimuls
cmpsl
cs
lret
cmpsl
mov
and
xchg
push
xor
rcl
fildll
adc
push
push
sbb
aaa
test
and
add
push
inc
xchg
and
push
jl
adc
push
jno
test
and
pop
inc
inc
add
mov
arpl
xlat
xchg
jecxz
mov
outsl
inc
out
out
daa
dec
lcall
push
scas
adc
out
xchg
xor
cwtl
jb
or
inc
rclb
loopne
add
mov
add
inc
icebp
syscall
xor
testl
push
aas
jo
test
roll
dec
out
daa
push
sub
cmp
mov
xchg
and
andnps
inc
lock
adc
dec
fstpt
push
xor
daa
call
mov
es
or
jp
jo
addr16
jmp
push
push
fistpl
sub
dec
je
je
dec
in
lret
and
add
cmp
sbb
lock
dec
cmp
cmpl
adc
and
push
das
clc
and
push
adc
cmpb
add
mov
movsb
pusha
idivb
jne
int3
sub
jl
dec
cmp
inc
hlt
ret
adc
cmp
cwtl
je
cwtl
leave
fsubs
int3
jmp
loop
push
push
popf
xchg
xchg
jp
rcll
mov
or
je
jo
dec
lcall
lock
mov
push
clc
je
ret
test
sbb
and
lret
mov
test
test
dec
mov
mov
adc
test
test
add
mov
adc
sahf
icebp
neg
in
mov
cwtl
pop
das
inc
into
adc
sub
es
jnp
mov
mov
aaa
jmp
inc
dec
push
adc
adc
xchg
or
cmp
lds
data16
pop
or
shrb
sub
mov
pop
mov
adc
data16
pop
leave
mov
pop
jne
call
pop
sti
jle
jge
rolb
and
nop
xchg
inc
adc
pop
adc
out
and
outsb
pop
jbe
sti
cli
scas
and
mov
mov
arpl
shrl
ficoms
aas
pop
cmpsb
or
nop
jae
push
rol
mov
add
fisubrs
movsl
push
xlat
sbb
sub
es
cmp
cltd
sub
pop
push
xchg
imul
insl
scas
imul
mov
add
inc
daa
mov
xor
sarl
clc
mov
mov
push
jns
jge
push
sub
sahf
in
sbb
das
dec
dec
xchg
push
aaa
sub
out
cld
mov
fsubs
sbb
rcl
jmp
dec
push
lret
mov
xor
sub
xor
sbbl
ljmp
mov
pushf
lcall
fidivs
mull
pop
fdivrs
mov
mov
aam
daa
xchg
adc
pop
lret
fildl
jb
pushf
or
imul
xor
js
shlb
stos
dec
daa
add
test
jmp
lds
out
jb
xchg
dec
add
sbb
hlt
pop
mov
jno
jae
int3
daa
ret
xor
daa
aam
rcrl
out
fidivl
pop
push
mov
mov
mul
ret
mov
sbb
aaa
inc
insl
push
stos
scas
and
jecxz
or
mov
pop
cli
loope
frstor
lea
mov
dec
ljmp
mov
test
sub
cmp
and
sbb
jmp
mov
arpl
mov
jmp
push
ret
sub
sbb
pop
pop
in
das
and
mov
lock
or
inc
sbb
and
into
xor
add
mov
lahf
fneni(8087
sbb
mov
mov
insb
adc
add
mov
mov
jnp
mov
jle
les
pop
jle
jns
mov
mov
xor
ret
xchg
adc
push
scas
bound
adc
jbe
out
out
cli
cmp
and
cmp
loope
cmc
sub
pop
sub
arpl
out
push
sahf
mov
filds
jae
imul
xor
pop
push
in
out
xor
popa
and
sbb
xor
sub
rolb
je
fisubs
or
cld
je
push
mov
mov
push
adc
xlat
andl
push
test
xchg
push
mov
sbb
jge
fisttpl
ret
push
sub
inc
loopne
push
pop
jbe
pop
and
cmovnp
repnz
pop
inc
inc
xor
inc
push
lcall
mov
movsb
aam
pop
adc
scas
mov
pop
add
jmp
mov
push
jb
es
pop
pop
jne
push
sbb
mov
je
inc
adc
sti
pushf
lds
push
ret
and
sub
mov
imul
push
jne
popa
loopne
jnp
mov
insl
and
cwtl
outsb
pop
bound
cmp
arpl
loop
jg
aam
adc
rclb
fsubrl
and
sbb
jmp
or
jns
insb
rorb
outsl
mov
or
adc
int
enter
hlt
add
es
ljmp
xor
imull
mov
daa
loop
sub
jl
mov
dec
in
xor
mov
aam
push
sbb
je
aam
dec
and
inc
adc
mov
push
mov
cmp
lcall
fdivl
test
mov
out
or
sbb
xchg
repz
iret
jl
movsb
mov
lea
das
sub
mov
lock
cmp
or
roll
push
push
push
and
stos
dec
cmp
test
aad
dec
in
insl
inc
sub
lds
xor
jb
mov
icebp
jno
daa
aas
adc
das
lret
imul
xor
pop
sahf
mov
add
mov
hlt
push
push
mov
into
fwait
xchg
adc
sbb
out
add
ret
xor
mov
push
mov
push
mov
mov
mov
pop
push
mov
ret
js
lret
call
mov
dec
xchg
dec
jmp
pop
mov
xchg
dec
xchg
add
pop
mov
into
mov
fbstp
cmp
push
jmp
cmpsb
insb
ss
mov
cwtl
aam
jns
ret
nop
add
jno
call
jo
xor
insl
js
inc
jmp
sbb
adc
sub
cmp
fwait
xchg
mov
add
shlb
aaa
add
and
add
adc
cltd
data16
sub
xor
roll
js
or
fwait
mov
dec
and
xchg
bound
aad
mov
sbb
and
ljmp
aaa
clc
ror
xchg
lret
xchg
xor
rol
lret
mov
mov
pop
add
dec
gs
scas
dec
inc
cmpsl
mov
int
aad
jle
mov
push
nop
adc
inc
imul
gs
ss
mov
fisubrl
push
test
mov
aam
fistl
imulb
and
xchg
mov
sbb
int
inc
push
aam
gs
lds
xchg
int3
push
insl
xor
cmp
jnp
mov
shrl
scas
sbb
out
cmc
imul
inc
je
lods
ljmp
sbb
mov
mov
xor
je
xlat
popa
mov
xor
cmp
mov
pop
out
arpl
rclb
into
fsubrs
ja
aad
hlt
push
daa
js
jns
nop
cmp
mov
xor
es
sbb
sbb
fsubl
push
repnz
ljmp
jo
cmp
jne
jg
das
sub
arpl
imul
push
rcrl
jle
rcrl
insl
sub
sbbb
xchg
push
das
xchg
sub
jg
fidivrl
cmp
in
sahf
xor
dec
pop
mov
hlt
nop
daa
xchg
mov
int3
inc
add
sbb
xchg
jbe
mov
sub
xchg
xchg
xchg
jnp
ja
mov
jne
cs
das
xchg
and
popa
xchg
jp
pop
mov
xchg
sub
loop
add
jnp
adc
jmp
shlb
inc
test
int3
inc
jnp
adc
mov
sbb
push
jmp
imull
call
std
stos
and
cmp
std
fmull
cmp
inc
insl
adc
and
adcl
pop
mov
imul
std
fists
stos
jmp
ficoml
jnp
loop
fdivl
xor
fstps
cmp
mov
cmp
mov
jl
jne
pop
setns
xorb
cmp
cmc
jo
and
cmp
cmc
cmp
lds
addr16
scas
into
andb
stos
sahf
adc
lods
stos
or
xor
stos
ljmp
sbb
push
pop
and
mov
mov
mov
or
bound
or
sar
cmpsb
jae
jle
push
das
push
xchg
sub
cmp
mov
push
pusha
or
add
add
dec
add
ds
loop
cwtl
hlt
or
sbb
addr16
cmp
lret
push
mov
cmp
and
bound
leave
iret
aas
out
pop
push
mov
add
xor
call
das
loopne
fidivl
bound
loope
push
push
sub
imul
cmp
xlat
sub
sti
mov
inc
dec
divb
iret
popf
mov
cmp
sbbl
and
xor
push
xchg
and
loope
rol
loope
inc
rorb
xorl
sub
mov
aas
cmpsb
popf
pop
jmp
cmp
pushf
rclb
adc
mov
test
pop
add
mov
sub
adc
mov
mov
jne
mov
pop
mov
inc
dec
push
lock
adc
sub
xchg
outsb
push
aam
cmp
pop
pushf
ja
cmc
inc
push
nop
inc
add
dec
push
xchg
adc
iret
jnp
addr16
dec
and
out
add
dec
lahf
aam
test
fsubrl
lock
sbb
lods
test
out
shl
or
ret
and
pop
inc
cmp
divb
fistl
sbb
bound
mov
add
jnp
dec
and
mov
mov
dec
pop
push
cwtl
cmpb
scas
add
xor
mov
fwait
and
sbb
bound
std
sbb
sub
test
dec
xor
fnstcw
mov
and
adc
dec
or
pop
adc
out
mov
push
repz
imul
mov
cmp
ds
mov
mov
loopne
in
loop
sub
js
lds
movsb
mov
push
mov
or
rcll
sub
call
sub
jmp
lods
cwtl
lock
xor
pop
push
in
bound
sbb
pop
jmp
adc
repz
xchg
fbld
ret
gs
lds
or
sub
xor
in
sbb
sub
push
and
cmc
add
push
scas
or
inc
xor
pop
shl
and
inc
pminub
pop
stos
ljmp
push
int3
inc
push
ja
add
and
movhps
push
cmp
ljmp
fadd
sub
je
dec
pop
xor
pop
dec
sbb
ret
insb
mov
jge
mov
test
call
ret
cmp
adc
ljmp
xor
mov
pop
mov
mov
dec
je
ja
or
jno
or
adc
dec
adc
or
leave
shr
pop
inc
outsl
add
sub
xchg
es
icebp
xchg
fmull
cmc
add
or
or
mov
cwtl
xor
or
popf
mov
out
xlat
insb
or
cmp
inc
sub
inc
push
inc
jl
xor
sbbl
loopne
nop
jp
push
hlt
xor
jo
sub
das
add
and
sarl
add
push
js
adc
add
les
cwtl
sub
sbb
cli
or
push
roll
lods
call
add
aaa
enter
push
out
sbb
push
sub
fldenv
cli
xor
cmpsl
adc
lcall
mov
or
mov
lods
clc
sbb
adc
dec
rol
nop
sub
pop
cmpsl
pop
sbb
xchg
xor
and
mov
pop
mov
dec
cmp
and
mov
sub
dec
pop
xor
add
sarb
mov
pop
sbb
mov
pop
mov
cld
stos
mov
lock
in
inc
jbe
mov
cltd
cmpsl
scas
sbb
and
scas
into
adc
vmread
mov
mov
mov
sub
icebp
jae
outsl
adc
and
sub
cmp
js
jne
dec
sub
imul
mov
cmpsl
xor
popa
sub
sbb
mov
mov
jnp
das
movsl
mov
sub
and
es
lret
in
mull
sbb
adc
pop
jno
sbb
movsl
cmp
or
lods
jp
inc
mov
cmpsl
add
iret
data16
jl
mov
push
add
mov
pop
cli
leave
inc
popf
mov
in
push
xor
aas
ret
pop
ss
push
repz
aad
mov
jg
and
jmp
push
xchg
sub
push
lds
sub
into
sbb
sbb
aam
rcr
push
pop
push
ret
sub
mov
add
andl
or
add
dec
cld
pusha
push
mov
mov
pusha
sahf
adc
inc
rolb
add
mov
add
add
daa
dec
cmp
xor
out
push
inc
enter
add
or
jg
pop
les
inc
push
adc
sub
mov
stos
pop
mov
subb
add
cli
sub
adc
ret
mov
clc
push
mov
mov
jge
push
or
jl
cltd
cmp
andb
lock
insb
or
lret
bound
adc
and
push
in
js
inc
out
mov
adc
dec
mov
mov
inc
rcr
pop
push
mov
adc
dec
inc
xlat
mov
or
pusha
push
fcmovne
test
insl
sbb
jb
test
inc
jg
jge
inc
sub
inc
out
jo
enter
pop
fadds
int3
jne
dec
aam
inc
inc
inc
shlb
cmpsb
into
in
jo
inc
pop
iret
adc
adc
adc
das
dec
push
int
sbb
jae
mov
jbe
xchg
mov
loope
les
ret
es
cld
lods
mov
jmp
cmp
punpckhbw
sub
sbb
mov
xor
or
push
push
add
xor
push
mov
sahf
push
dec
xor
jno
lods
mul
push
pop
xchg
arpl
or
testl
out
cmp
mov
and
and
adc
jp
mov
movsl
insl
aam
shrl
loopne
or
mov
push
jge
or
jmp
adcb
cmp
sub
es
inc
jge
outsb
mov
mov
add
push
sbb
adc
mov
ds
add
xor
popa
fcompl
sub
inc
and
jae
xor
loop
add
pop
adc
or
jle
mov
cmp
xor
sub
fldenv
mov
sarb
and
xor
push
pop
js
ret
scas
pop
and
lret
cmpsl
adc
xchg
cmpl
and
sub
mov
add
cmp
lds
pop
xor
sub
mov
adc
les
push
jo
rorb
xchg
lahf
dec
cmp
arpl
jns
cmp
enter
shll
adc
xchg
sbb
mov
jno
pop
mov
sbbl
data16
jo
push
adc
les
push
popa
sbb
cmp
adc
hlt
into
mov
sub
mov
pop
loopne
and
stc
clc
push
inc
sbb
jno
orb
and
xchg
inc
jo
aam
iret
xchg
adc
pop
cwtl
ljmp
and
pop
adc
add
adc
push
daa
aam
xlat
scas
add
rcll
dec
mov
and
jns,pt
adc
js
int
pop
movsb
add
add
mov
push
xchg
in
cmc
pop
jge
sub
inc
add
cmp
adc
or
movsb
stos
sub
pop
cmp
pop
adc
push
rcll
xchg
pop
add
flds
adc
inc
inc
pusha
sbb
mov
jl
jb
les
adc
call
jno
pop
cmpsl
dec
inc
mov
push
xchg
out
and
adc
ret
jle
jge
out
xor
popf
jl
jge
add
inc
xchg
mov
jnp
inc
xor
ja
lea
shr
xchg
or
lds
cmp
adc
mov
sbb
adc
scas
add
js
in
push
push
lock
lock
sub
cmc
push
sbb
and
dec
xchg
dec
dec
es
inc
pop
sbb
push
mov
icebp
stos
hlt
mov
loop
ss
nop
bound
aas
mov
pop
lret
xchg
xchg
sti
push
inc
and
mov
and
sbb
xchg
inc
and
sub
data16
jmp
add
inc
test
mov
bound
mov
xor
jae
mov
push
aas
outsb
data16
adc
push
add
out
jl
jle
out
sub
mov
in
push
push
jle
add
outsl
dec
sub
enter
jle
lea
or
in
lock
mov
faddl
adc
in
add
enter
popa
call
sub
mov
inc
inc
xchg
jns
cmp
test
or
dec
add
ret
add
dec
sub
testb
add
sub
inc
adc
ljmp
push
mov
add
jp
outsb
pop
add
jg
je
dec
jae
cmp
push
sbb
add
add
je
mov
sbb
dec
ss
or
mov
mov
and
lret
and
fimuls
andl
or
xor
push
push
sub
inc
xchg
sbb
sti
cmp
es
or
enter
adc
in
sbb
sub
mov
test
ret
repnz
mov
lcall
lds
mov
lods
leave
or
add
rcl
repnz
int
sub
add
into
test
out
stos
and
mov
fidivs
jmp
lea
addb
stc
push
mov
iret
lds
jle
stc
mov
push
sbb
subb
je
jge
das
mov
aad
dec
add
hlt
pop
lcall
bound
adc
scas
scas
movsl
aam
loop
frstor
push
mov
js
stc
ja
mov
jge
or
ficoml
mov
and
and
jge
push
cmpsl
sbb
and
push
insl
inc
dec
add
and
cwtl
int
movsb
inc
cmp
mov
push
sub
jnp
loopne
int
int
mov
cs
addb
adc
dec
push
rcrb
xchg
pop
xlat
and
int
sub
jnp
mov
fs
shrb
cmp
or
ljmp
cs
lret
sub
fwait
add
sub
add
mov
loopne
hlt
mov
aam
ja
fnstenv
clc
div
shlb
pop
adc
sub
mov
mov
and
mov
insb
mov
adc
lea
mov
addr16
adc
cmp
push
sub
bound
fs
dec
pop
pop
test
add
push
dec
in
pop
lret
mov
mov
loopne
jle
mov
int3
push
adc
scas
or
push
jge
fsub
mov
adc
mov
scas
adc
push
out
adc
das
test
popl
fadd
add
add
xor
mov
jnp
aad
xor
ror
paddw
sbb
or
mov
ljmp
pop
xor
aad
xlat
or
push
cmc
insb
adc
movsl
and
es
bnd
adc
sub
xor
inc
test
sub
das
adc
mov
pop
push
xchg
and
fsub
cmp
stc
jg
mov
mov
push
in
scas
push
and
cs
xchg
and
push
int
out
push
insb
loop
mov
jp
fisttpll
lock
add
imulb
and
test
outsb
das
data16
xor
cmpl
ret
add
ret
mov
and
and
mov
rcll
outsb
dec
sub
and
xchg
and
popa
push
sbb
test
xchg
rorb
xor
shrb
ret
mov
ret
fiadds
add
cmc
push
cmp
arpl
push
das
push
dec
mov
dec
push
push
cmp
push
dec
mov
cmpsb
insl
das
cmp
push
xchg
and
jnp
test
sbb
jnp
push
dec
fstpt
sub
mov
and
cmpsb
jb
pop
rcl
mov
data16
mov
das
jmp
adc
clc
push
dec
in
inc
xor
pop
rorb
cld
xor
lock
arpl
loope
pmaxub
adc
aam
sub
stos
cmp
mov
add
cmp
es
lret
lods
mov
fs
and
cmp
add
jno
subb
ret
and
sbb
cmp
jge
and
xor
sahf
pop
mov
inc
and
or
add
or
in
fisubs
inc
push
test
adc
adc
mov
andb
imul
mov
addr16
and
add
andb
push
mov
mov
jl
push
add
sbb
pop
inc
xor
pop
or
mov
xor
pop
sub
inc
sub
or
and
xchg
add
daa
adc
cltd
cwtl
adc
dec
in
sahf
loope
pusha
add
hlt
sbb
dec
lock
mov
andb
adc
mov
mov
lds
cmpsb
lods
mov
sbb
je
inc
and
in
insl
push
mov
and
or
aam
movsb
inc
popf
push
jge
ss
mov
jae
data16
fistl
and
adc
push
mov
test
js
pand
and
sub
sbb
and
gs
push
adc
add
aam
outsl
xchg
adc
lcall
fdivs
neg
or
jb
aaa
popf
or
mov
inc
xchg
aam
xchg
jp
enter
stos
add
and
lods
and
or
fmull
mov
shlb
cmpsb
aad
xor
aam
jo
add
or
mov
dec
push
les
gs
ljmp
shl
or
or
pop
push
push
adc
and
inc
mov
xlat
insl
clc
js
xchg
mov
xor
cwtl
and
bound
adc
rol
mov
or
add
frstor
dec
ljmp
mov
push
hlt
bound
sub
clts
lret
jbe
jno
pop
data16
sbb
lock
push
adc
loope
stos
sbb
iret
jae
sbb
dec
xchg
mov
ret
ret
push
add
push
dec
push
aad
jecxz
push
mov
call
js
popa
jno
int3
push
cmp
xchg
cmp
xchg
jne
mov
shrl
js
mov
inc
pop
xor
movsb
dec
sbbb
mov
sahf
cmp
cmp
pop
sbb
ret
dec
daa
add
jb
xor
or
add
ja
lret
mov
xor
aam
mov
lcall
adc
stos
add
or
fmuls
scas
or
adc
sub
or
adc
mov
es
mov
popf
dec
push
add
jo
cmp
mov
gs
add
rorb
test
push
dec
ljmp
sti
in
test
dec
ret
pusha
jp
cmp
push
fwait
and
add
mov
data16
jge
arpl
mov
or
mov
hlt
add
pop
xorl
push
inc
add
cwtl
adc
aaa
fwait
add
jbe
loop
in
push
sbb
sbb
cmc
adc
fcomps
xor
adc
pop
int
push
mov
sub
jo
or
xchg
jae
push
nop
xchg
mull
imull
mov
dec
out
out
sarl
dec
cmp
mov
cmp
push
sub
push
sub
xchg
xchg
js
xchg
add
pusha
mov
adc
xlat
or
inc
push
ss
shll
mov
fisubs
aas
pop
xchg
int3
push
xor
sub
add
mov
fwait
add
movsl
jl
mul
pop
bound
cmpsl
pop
mov
das
jo
xor
push
in
fists
sbb
ret
lret
hlt
loope
mov
nop
xchg
daa
testb
aam
jp
fildl
pop
inc
in
loope
jge
add
mov
addl
and
mov
adc
and
mov
mov
xchg
sub
in
inc
pop
pop
inc
push
es
out
lock
mov
js
jbe
les
mov
cmpl
add
add
adc
cmp
add
iret
loop
pusha
inc
js
mov
inc
adc
pop
mov
subl
or
adc
cli
push
push
sarl
sub
adc
sub
or
fnstcw
inc
arpl
push
sub
shlb
scas
xchg
sub
jno
and
sbb
adcl
mov
push
pop
push
add
xor
dec
cwtl
inc
cmp
shlb
call
jmp
and
jnp
xor
neg
sub
jae
aad
lock
test
push
xchg
jno
mov
dec
adc
jp
shll
mov
push
cmc
adc
fcoms
test
lds
or
std
out
pusha
adc
jb
aam
mov
jbe
cmp
adc
cmpsl
add
xor
fisubs
xchg
ss
push
add
mov
fwait
movsl
aad
add
adc
mov
test
popa
cmpsl
decl
adc
push
pop
push
xchg
xchg
inc
pop
std
shl
stos
ja
mov
dec
scas
loop
inc
scas
push
mov
fdivl
lds
dec
sub
mov
mov
outsb
nop
mov
jb
add
test
fsubrl
sbb
mov
sub
and
xchg
fldl
dec
xor
add
cmc
jo
stos
pop
dec
sub
cli
and
ljmp
pop
daa
adc
jl
inc
mov
sub
and
mov
push
scas
mov
outsl
data16
stos
dec
bound
dec
mov
mov
and
xor
aad
mov
xlat
xor
scas
pop
adc
pop
stos
mov
subb
adc
mov
and
ss
adc
cmpl
shrl
adc
imul
imul
scas
setbe
adc
or
pop
movsb
test
inc
adc
js
xor
scas
stos
xchg
push
dec
dec
sbb
arpl
hlt
icebp
icebp
mov
int3
push
adc
xchg
inc
sub
xchg
adc
pop
ds
xchg
aad
push
adc
rorb
fadd
cmp
insb
push
test
jo
scas
add
xorl
mov
jp
loope
adc
pushf
inc
add
xor
pop
adc
mov
push
aad
mov
test
aam
sbb
add
fisubs
or
popa
add
xchg
mov
test
loope
push
mov
out
imull
shr
pop
das
cmp
lods
mov
outsb
out
sub
cmp
pop
aam
mov
sbb
dec
fldenv
push
mov
aaa
test
fwait
into
stos
adc
notl
or
bound
and
mov
push
or
inc
and
cmpl
xchg
leave
add
cmc
les
add
pop
pop
lods
addr16
loope
sub
cs
xchg
add
lea
xor
fwait
push
sub
sub
sub
push
stos
pop
mov
add
fidivs
clc
lcall
mov
adc
dec
push
and
pop
cmc
shrl
cld
pop
jecxz
and
cmpb
cld
adc
xchg
cwtl
add
js
dec
push
lds
and
add
pusha
sbb
pop
aam
mov
adcl
dec
push
jp
aam
adcb
xor
inc
or
sbb
dec
dec
mov
inc
aaa
insl
add
shll
xlat
inc
cmpsl
cmp
add
roll
lds
adc
mov
lds
add
stos
adc
dec
int
xor
dec
push
addr16
enter
jp
cmp
mov
loope
mov
mov
adc
fdivs
mov
inc
cltd
pop
and
add
adc
mov
ljmp
add
cwtl
add
push
insb
jg
xchg
divb
pop
aaa
test
mov
and
test
andb
fiadds
test
aam
mov
out
or
dec
daa
cmp
push
jnp
shll
lret
add
insl
cmp
cwtl
lods
cmp
sub
sub
jns
in
xchg
bound
cmp
repnz
add
insl
and
sub
sbb
jne
dec
xlat
popa
leave
sbb
insb
pop
es
and
or
push
jle
bound
mov
xor
mov
inc
sbb
int
and
sub
dec
xchg
cld
push
hlt
push
xor
fimull
and
add
mov
cmc
mov
and
aaa
sbb
sbb
fcompl
dec
mov
mov
push
sub
mov
cwtl
pop
sbb
scas
mov
xchg
jae
cmp
jg
lods
mov
mov
mov
roll
dec
ret
cltd
push
loop
add
mov
sbb
test
jnp
cmpsb
push
fnstsw
js
pusha
aas
stos
stc
and
sbb
and
jo
lods
test
outsl
insl
lods
pushf
sti
adc
shrb
je
test
ret
ficoml
aad
mov
scas
popa
sbb
sub
cmp
jo
clc
push
outsl
leave
sarb
insb
daa
jne
je
jl
out
push
sub
jmp
mov
pop
dec
scas
mov
sarl
inc
jge
mov
fldt
je
inc
je
xchg
es
adcb
jb
loope
cmpsl
dec
aam
sub
lods
lret
ss
pop
mov
xor
mov
clc
pusha
mov
push
test
rolb
adc
ja
ret
mov
jmp
pop
movl
pop
adc
jle
in
sahf
loopne
jns
cmp
mov
mov
lock
cmp
cmp
test
fcompl
push
or
push
push
and
mov
es
adc
out
mov
movb
mov
push
call
call
cmp
sbb
js
push
sarl
sbb
enter
sbb
add
gs
or
cmp
dec
jo
in
in
pop
sbb
push
xor
lods
ljmp
jae
jae
pop
pushf
ljmp
sub
and
adc
adc
mov
adc
je
daa
xor
push
mov
ja
xchg
mov
mov
mov
adc
dec
mov
test
aam
dec
sbb
shrb
lea
inc
pop
lods
jbe
lret
pop
or
sbb
imul
sub
pop
cmp
and
ret
adc
cmp
mov
and
add
push
daa
pop
pop
data16
mov
xchg
adc
xor
aad
adc
shll
sub
pop
push
mov
add
daa
sub
dec
inc
in
sub
pop
xchg
sub
pop
mov
dec
dec
mov
test
pop
lock
rcrl
mov
sub
dec
add
mov
push
imul
mov
mov
inc
push
push
ret
jne
int3
mov
inc
outsl
inc
or
test
scas
push
rcrl
inc
jno
xchg
andb
push
sub
loop
arpl
je
push
lds
xor
push
add
sbb
and
stc
pop
mov
add
add
test
sbb
pushf
dec
xor
int3
adc
inc
jne
dec
int
cmpsl
cmp
add
and
mov
pop
dec
mov
add
cmp
dec
and
fwait
xor
subl
xchg
aad
xchg
mov
pop
sub
cwtl
add
inc
add
push
xor
imulb
test
popw
cmp
mov
push
push
imul
mov
hlt
push
xor
push
test
sub
insb
out
mov
jae
call
rcrl
xor
insb
adc
daa
movsl
pop
sub
push
push
inc
aaa
ljmp
or
xor
cmpsb
icebp
xlat
sbb
pop
push
inc
mov
scas
in
sub
inc
sub
pop
mov
push
in
sbb
ljmp
hlt
adcb
lret
add
pop
aam
pop
inc
pushf
mov
jne
cmp
aas
dec
sub
cmpsb
pop
fadd
dec
adc
sub
je
mov
push
push
add
ret
cmp
sub
push
mov
xchg
cmp
xchg
test
adc
bound
test
packsswb
xor
pusha
jbe
lcall
mov
mov
jg
or
cmp
pop
jecxz
xlat
mov
dec
ljmp
inc
push
xor
cld
pop
ret
test
add
sub
inc
pusha
xlat
insb
adc
outsb
daa
mov
aaa
fnsave
jmp
in
xor
adc
or
gs
sub
hlt
lock
push
rolb
repz
frstor
add
jbe
cmp
icebp
mov
sbbl
mov
jb
daa
mov
xor
or
or
nop
mov
push
xor
mov
jae
stc
sub
cwtl
pop
roll
adc
xor
lods
dec
mov
sub
xchg
cld
dec
sahf
ret
aas
adc
xor
addb
addb
sbb
jp
scas
or
mov
fcomps
or
rcrb
cmp
mov
push
add
shl
mov
shl
shlb
pop
adc
cli
cmp
mov
es
cltd
jno
and
rorb
int3
sub
push
jae
in
pusha
adc
adcl
lea
inc
and
adc
jb
adc
lds
lds
arpl
adc
clc
sub
and
jge
aam
xchg
sub
mov
adc
xchg
mov
inc
lret
add
mov
xlat
jae
cmp
ljmp
loopne
pusha
inc
dec
je
fs
orb
inc
pop
inc
sub
cmp
and
mov
inc
or
mov
aad
bound
pop
iret
add
push
ret
or
xor
inc
pop
mov
push
sub
orl
ret
xor
lds
pop
lock
sahf
sub
sbb
jno
sbb
int
adc
add
jnp
cwtl
in
xlat
add
int
cmpsb
pop
xchg
test
rclb
cltd
push
fcomp
push
and
mov
aaa
shll
js
outsl
push
stos
pushf
add
sbb
adc
fwait
xchg
out
adc
sub
pop
call
shr
icebp
loopne
sbb
sbb
pop
jp
outsb
jbe
roll
bound
inc
sbb
arpl
call
sub
xor
cmp
test
je
jecxz
adc
pop
fadd
xor
mov
jp
sarl
and
sti
mov
outsb
mov
or
ja
ret
inc
push
ljmp
lahf
cmp
sub
xchg
jae
enter
js
test
jmp
aas
add
dec
mov
andl
xchg
pop
dec
fcoml
in
div
call
xlat
push
adc
mov
cmpsb
loop
or
jl
repz
push
push
pop
shl
fstps
andb
add
cmp
gs
in
adc
pop
lret
add
out
xchg
dec
cmp
shll
mov
xchg
xchg
inc
jecxz
cmp
imul
and
jecxz
dec
mov
jbe
pop
inc
jmp
sbbb
and
sbb
roll
push
fldt
leave
xchg
sub
cli
lds
lret
inc
movsb
sbb
mov
sub
jb
mov
mov
adc
lret
fisubs
movsb
addr16
jno
out
or
pop
call
mov
sbb
lods
add
test
daa
and
es
add
mov
dec
fimuls
or
adc
mov
push
push
cmp
sub
movsl
out
shll
mov
cmpsl
or
cmpsl
arpl
xchg
add
popa
rcrl
dec
jnp
inc
xorb
dec
push
mov
movnti
sbb
in
loop
fadds
add
out
cmpsl
xor
xor
and
mov
add
shrb
mov
ret
or
add
sub
jmp
roll
imul
aad
cltd
outsb
js
loope
xchg
xchg
pop
sub
pop
pop
mov
cmpsl
and
pop
fldl
xor
lret
jmp
out
in
in
sar
loopne
jecxz
cmp
insl
outsl
lret
mov
mov
cmp
mov
lea
inc
ss
gs
fistl
pusha
clc
adc
mov
push
xchg
push
lods
xchg
dec
xchg
or
cmp
pop
xlat
popa
mov
data16
loopne
or
leave
out
cmp
push
add
and
mov
mov
sub
mov
sub
ja
sbb
arpl
jo
jmp
rcll
mov
or
loopne
sti
or
add
add
decl
clc
or
or
sbb
xor
jmp
jmp
or
dec
cli
or
lods
inc
and
shlb
cmpsb
mov
add
fbld
push
adc
add
pop
dec
or
dec
xor
xchg
inc
aad
mov
or
iret
or
mov
fwait
hlt
xor
bound
jmp
mov
sub
dec
jno
mov
jo
aam
cmp
cmc
mov
cld
push
sbb
cmc
jo
mov
insl
loope
jle
pop
or
pop
jp
jle
cmp
fwait
xor
lds
enter
and
fcom
sub
inc
cli
mov
xlat
gs
loope
mov
in
push
add
shll
addl
inc
or
js
jl
lahf
jae
dec
add
mov
popa
dec
mov
rol
es
hlt
ret
clc
stos
xor
jae
sbb
jb
popa
in
push
cmp
shll
xor
sbbl
inc
lods
sbb
xchg
jmp
mov
add
movsbl
es
sbb
jecxz
sbb
mov
xchg
addl
aam
cwtl
add
add
les
aas
jbe,pt
add
sbb
movsb
mov
pop
mov
mov
jp
jl
in
sub
fiadds
inc
push
inc
mov
cli
lock
popa
inc
rcll
mul
in
sbb
movsb
add
jne
mov
and
andb
dec
dec
arpl
loop
mov
xchg
push
mov
dec
loop
cmp
add
sbb
xor
in
popf
cmc
fmul
dec
sub
xchg
ror
mov
cmpsl
fidivl
scas
ds
and
ret
ret
dec
out
fcmovu
out
xor
jbe
add
test
js
jl
xor
shl
mov
or
negl
ret
mov
adc
or
insl
dec
xchg
inc
adc
cli
inc
repz
cmp
mov
ffreep
fadds
xchg
movsb
and
in
cmp
call
test
imul
add
js
xor
out
stos
stos
sbb
and
mov
jp
out
dec
cwtl
adc
incb
test
push
pop
mov
adc
jo
mov
test
fistpll
mov
mov
fadd
loop
test
jmp
sub
mov
sub
ja
push
ret
pop
cmpsl
or
and
loopne
inc
es
fwait
bound
cmp
lcall
loope
xor
movsl
int
int3
or
cmp
adc
inc
xor
or
mov
insb
aad
test
or
bound
popa
add
and
inc
mov
add
in
sbb
sbb
or
add
aam
xchg
xor
test
loope
mov
mov
sbb
outsb
or
lahf
cmp
popf
and
fiaddl
rol
mov
add
sbb
cmp
loopne
imul
in
jnp
adc
pop
cmpsl
test
aas
jno
jbe
cmpsl
ret
add
mov
sub
lods
or
rorb
js
or
and
call
bound
loope,pn
mov
sbbb
cli
shll
jne
out
add
adc
mov
mov
sub
call
es
pop
bswap
jno
push
mov
add
ljmp
loopne
fisubrl
inc
mov
loop
xchg
clc
xor
xor
int
mov
pop
out
call
mov
mov
xchg
jp
dec
adc
pop
and
adc
add
sbbl
ret
shrl
pop
addl
ds
xchg
cmp
sub
pusha
pop
insl
sub
cmpsb
rcll
mov
rclb
sub
sub
sub
inc
leave
jnp
sbb
sbb
mov
imul
rcl
shl
aaa
xchg
adc
std
mov
xor
add
pop
dec
xor
ret
cmp
aaa
fists
dec
xchg
test
mov
out
adc
or
in
xor
pop
xchg
hlt
aas
adc
lea
test
loope
pop
roll
jmp
test
daa
jecxz
or
int3
fneni(8087
fmull
cmp
mov
dec
mov
push
cwtl
cmp
push
fcmovnb
andb
int3
movsl
sar
popa
or
mov
loopne
lea
and
daa
into
lock
and
insl
imul
mov
shl
cwtl
or
loop
cmp
sub
outsl
rcll
jae
es
cmp
aaa
dec
das
mov
cld
and
cwtl
sub
repz
data16
jg
mov
and
ds
icebp
pop
js
into
jmp
xorb
inc
pusha
sub
loope
sub
ret
ret
mov
repz
ret
imul
jecxz
scas
mov
fwait
aad
sbb
jle
mov
push
fbld
mov
or
push
or
insl
jmp
nop
fisttpll
xor
movsl
ret
ljmp
add
lock
je
pop
std
adc
jo
repz
loop
lret
cmp
xchg
xchg
sbb
inc
int
rcr
xor
cmp
fcmovnbe
pusha
aad
jnp
mov
push
fcompl
pop
pop
iret
mov
cwtl
lahf
fistpll
mov
dec
mov
cmc
lcall
and
xchg
xor
mov
pop
cmp
inc
add
jg
dec
or
and
sahf
sbb
fwait
outsl
sub
lock
lds
xchg
add
push
fdivs
or
cwtl
jl
stos
cld
sbb
incl
stos
sti
xor
xchg
cmp
or
push
fbstp
mov
in
xchg
jbe
mov
pop
ljmp
sti
insb
imul
cmp
out
rolb
mov
sub
popa
or
or
pop
lea
mov
xor
sbb
inc
add
cld
cmpsb
xchg
adc
incl
xchg
jne
repz
mov
or
rcrl
xchg
ret
loopne
adc
orl
js
jae
dec
add
sti
pop
adc
rorb
mov
stos
lret
pop
bound
into
test
mov
fstpt
dec
test
sbb
shl
cmpb
fcomps
pop
dec
sahf
mov
pop
cmp
movsl
sbb
xchg
cmpsb
jae
scas
add
scas
push
pushf
xor
loope
sub
loope
sub
or
cmp
loopne
jge
out
hlt
es
adc
mov
push
add
xchg
and
jge
out
push
pop
jl
js
hlt
or
mov
daa
dec
sti
adc
imul
stos
adc
roll
add
or
rolb
push
add
dec
sub
mov
addb
lahf
js
push
mov
ret
scas
xor
inc
jns
xchg
inc
push
pop
mov
dec
hlt
aaa
das
adc
stos
pop
mov
sbb
lret
jne
adc
aam
nop
xor
adc
int3
inc
adc
dec
dec
sbb
data16
adc
gs
pop
dec
add
pop
fcmove
mov
jmp
inc
jae
aas
inc
cmp
dec
or
xor
in
sub
push
pop
xchg
pop
pop
mov
fisubl
mov
ret
inc
xor
cs
pop
xchg
rorb
lods
mov
jp
clc
dec
dec
mov
xor
movsb
fs
imul
xor
lret
adc
lahf
and
add
sub
mov
mov
mov
aad
das
push
cmp
pop
and
sahf
and
sbb
stc
shll
pop
mov
sbb
push
push
xchg
add
push
aam
cmp
jo
popa
mov
lods
gs
test
jno
mov
aaa
sub
pop
xor
mov
dec
xchg
fcmovnbe
gs
push
cmp
or
cmpsb
ss
jbe
scas
mov
jp
mov
je
jno
cmp
inc
pop
or
jp
pop
pusha
ljmp
xchg
mov
add
add
jbe
jno
lea
lret
cmpsb
pop
inc
xor
fistpl
jae
addr16
mov
push
imul
xlat
imul
das
push
mov
pop
sbb
rol
shrb
xchg
sub
bound
rclb
enter
dec
xorb
cli
stos
pop
pop
daa
pop
cmpsl
or
shrb
enter
xchg
sub
sub
sbb
fdivl
xor
loopne
xlat
pop
and
cwtl
pushw
insb
and
pop
pop
jae
xor
scas
inc
and
cmovs
dec
jnp
xor
xchg
mov
jmp
or
sub
and
mov
sub
push
pop
gs
mov
push
xchg
mov
fdiv
push
lds
mov
test
or
sbb
cwtl
adc
cmp
nop
arpl
push
rorl
mov
and
mov
fldenv
pop
xchg
pop
adc
leave
xchg
pop
push
fldenv
imul
mov
adc
and
stos
add
fnstcw
mov
loope,pt
add
mov
les
push
rcrb
jecxz
mov
xorl
frndint
xor
or
add
xor
cmp
shl
int
sbb
ror
pop
cwtl
mov
or
inc
popf
int
imul
mov
add
call
adc
mov
mov
mov
mov
ljmp
push
add
ljmp
pushf
pusha
ljmp
inc
sbb
inc
and
sub
jmp
insb
inc
ds
push
cmovs
mov
dec
push
das
sub
mov
jp
or
loopne
imul
mov
add
xor
insb
push
jp
xlat
leave
data16
add
shll
call
adc
or
push
push
add
cmp
mov
xorl
and
insb
jb
inc
add
pop
scas
cmp
inc
sbbb
push
jmp
dec
adc
or
imul
inc
jmp
cmpsl
cmpsb
pop
jnp
mov
sbb
sbb
adc
les
test
loopne
sub
add
cli
mov
out
loopne
insl
aam
dec
rclb
jecxz
jl
dec
and
lds
push
adc
sub
and
xchg
and
push
sarl
xor
mov
iret
inc
push
mov
cmp
mov
dec
pushf
sub
or
leave
mov
dec
pushf
shrl
in
push
jno
cmp
jg
negb
adc
xorb
adc
adc
add
icebp
cmp
bound
test
bound
sbb
mov
push
add
mov
push
jmp
add
sbb
sub
dec
js
xorb
sahf
adc
pop
daa
vmread
data16
sub
xchg
mov
xchg
dec
jge
es
mov
mov
mov
inc
popa
stos
cmc
push
add
mov
cmp
add
dec
aad
and
gs
data16
sub
mov
pusha
and
adcl
jb
or
push
in
outsb
orl
mov
loop
mov
pop
dec
enter
stos
shld
inc
or
sub
stc
push
bound
jo
push
insl
sahf
sub
fdivp
add
lahf
cli
fwait
inc
xor
xor
xchg
dec
shll
loopne
jo
add
inc
xor
lret
adc
aad
ljmp
add
sub
xor
xchg
daa
add
cwtl
daa
mov
js
push
outsb
lods
das
adc
adc
andl
and
cmp
dec
pop
dec
mov
inc
push
xchg
mov
jge
xchg
pop
mov
jp
and
stos
push
aam
sbb
adc
pop
pop
sub
push
aaa
ret
jbe
sub
add
hlt
pop
xchg
mov
or
adc
inc
mov
fldt
push
and
inc
shlb
das
add
add
ret
lcall
jae
es
pop
in
movsb
pop
loopne,pt
loope
and
sbb
push
imul
imul
adc
je
dec
shr
xor
mov
xchg
cmp
xor
jne
movsb
je
inc
sbb
imul
adc
jno
shrl
inc
stos
cmp
xchg
sub
mov
ds
shrl
push
xor
jp
mov
das
cld
mov
pop
mov
mov
add
loop
or
out
add
leave
push
push
aaa
cmpsl
xchg
mov
loop
fidivrs
ror
pop
aam
aaa
jl
test
pop
cmpsl
xor
mov
lock
scas
and
jg
sbb
addb
push
or
sbb
jl
sub
cwtl
push
cmp
mov
add
jo
xchg
mov
dec
in
push
sti
mov
push
mov
popf
sub
lret
push
inc
int3
or
lahf
je
stc
mov
mov
dec
push
les
sbb
mov
mov
or
push
jge
addb
add
dec
inc
adc
pop
push
stc
shll
jecxz
cmp
lret
into
mov
into
and
xor
mov
dec
stos
fdivr
or
clc
or
int
pop
scas
mov
add
iret
fbld
les
fsub
scas
es
sub
cmp
lds
mov
imul
sub
jbe
lock
daa
es
push
push
scas
jbe
test
push
add
loope
pop
in
jnp
testl
idivb
stos
frstor
ret
add
out
push
div
jo
xor
xor
addl
bound
shlb
rcr
mov
test
loopne
mov
jbe
cld
mov
or
jbe
aad
test
and
fnsave
adc
or
test
orl
cmpsl
in
push
jo
inc
and
leave
fisttpll
and
mov
jge
icebp
shlb
cmpb
or
adc
add
in
nop
push
lods
and
push
xor
imul
xlat
pop
xor
leave
rol
or
sbb
sbb
je
pop
adc
loope
inc
ss
mov
ljmp
scas
push
test
push
pop
inc
rorb
insl
or
sbb
inc
jbe
jb
pushf
sub
xor
fldt
mov
fdivrp
fyl2x
es
xor
xor
pop
xor
and
jecxz
cmp
orb
insb
inc
pop
sahf
inc
mov
mov
sub
and
or
cwtl
loopne
inc
cmpsl
mov
adcb
int3
jge
mov
movsb
test
movsl
test
push
jae
mov
clc
xchg
aad
inc
pop
shll
addb
xor
dec
inc
add
fisttpl
bound
jp
orb
sbb
mov
dec
sub
dec
jnp
arpl
inc
mov
mov
out
inc
insb
aad
or
add
push
sbb
lock
mov
pop
mov
adc
lds
sbb
in
pop
les
js
add
inc
adc
jl
jb
pop
lea
and
lock
xchg
xchg
movsb
mov
mov
outsl
xor
ret
mov
jl
jo
pop
adc
lcall
lcall
adc
cmp
lahf
jae
mov
push
adc
ja
ret
sbb
mov
and
xor
int
cmp
sbb
jo
or
addb
std
mov
xchg
pop
cmp
rolb
stos
mov
dec
xchg
mov
or
imul
add
adc
sbb
mov
jnp
test
adc
push
sbb
rorb
or
dec
ja
push
rcrl
jbe
sbb
sbb
or
cmpl
push
pop
subb
out
inc
mov
arpl
xchg
add
add
mov
leave
nop
mov
dec
mov
fstps
jnp
xor
push
in
xchg
dec
stos
pop
mov
addl
pop
clc
sarl
out
inc
and
lahf
inc
cli
add
cli
inc
es
fldcw
aas
dec
sub
xchg
and
jo
pushf
imul
inc
cmp
pop
dec
jge
sbb
adc
insb
jnp
push
add
and
ret
cwtl
cmp
and
jns
arpl
xor
push
push
inc
adc
xchg
xchg
add
icebp
jle
cs
scas
jge
xchg
adc
mov
aam
cltd
add
xor
ret
pop
int3
adc
jl
lds
dec
mov
adc
sbb
aaa
mov
cwtl
frstor
int
mov
mov
aam
and
std
xor
jp
pop
dec
jb
mov
add
int
cmp
dec
and
mov
stos
sbbb
push
out
fmull
mov
stos
loopne
cmp
sbb
loop
push
sub
and
sub
lret
add
add
lock
sbb
push
ret
mov
cli
es
jno
push
adc
fsincos
stos
cwtl
cmp
cvttps2pi
pop
test
nop
jg
or
xchg
and
in
adc
lea
xor
fistpl
or
add
and
jae
or
xchg
add
dec
dec
sub
mov
xchg
xor
andb
xor
jb
es
clc
or
aam
mov
iret
mov
icebp
xchg
ja
insb
sti
ss
and
sahf
push
push
push
push
mov
loopne
mov
pop
daa
pusha
xorb
pop
and
daa
xchg
adc
addr16
pushf
sahf
cmp
xor
popa
pop
xor
roll
icebp
les
aam
and
cltd
sub
les
or
push
mov
mov
add
int
adc
and
test
jle
add
icebp
aam
jne
adc
xorb
and
add
push
icebp
ja
xlat
movsb
cwtl
adc
adcb
sbb
int3
test
aad
fadds
adc
sub
mov
arpl
les
das
sbb
outsb
push
xor
push
mov
dec
aas
mov
mov
add
mov
add
xor
and
adc
add
je
sub
mov
or
mov
push
in
push
popl
es
add
out
add
mov
lahf
es
sbb
or
mov
pop
mov
inc
aad
adc
lcall
add
ret
lret
or
dec
push
or
dec
into
xor
jno
adc
xor
and
daa
jae
add
adc
pop
dec
int
lcall
or
cmpsl
sub
push
mov
push
fildll
or
add
or
xor
roll
jmp
add
orb
popa
add
sub
pop
dec
out
in
inc
adc
mov
leave
and
popf
push
mov
test
faddl
add
pop
aad
and
dec
fldz
cmp
sbb
shrl
xchg
push
shrl
test
scas
fsubrl
call
mov
repz
sahf
cmp
push
leave
push
data16
fnstcw
mov
xchg
add
sti
and
ficoml
xor
mov
sub
add
push
jb
cwtl
dec
push
test
dec
pop
sbb
dec
dec
inc
inc
xchg
adc
add
icebp
xchg
pusha
jle
loopne
cmp
adcl
mov
pop
std
push
mov
loopne
mov
push
sahf
jns
sub
or
mov
cmc
pusha
adc
inc
stos
les
dec
lds
add
adc
add
inc
pop
or
sub
idivb
imull
and
push
cmpsl
or
incl
leave
xchg
fcompl
sub
bound
dec
outsb
pop
mov
jae
add
jno
div
int
push
xor
xchg
xchg
stc
iret
sub
je
jnp
xchg
movsb
push
outsl
mov
fiadds
push
push
add
stos
les
jne
scas
popa
insb
xorl
jb
js
or
xchg
mov
cmc
out
push
imul
inc
scas
dec
inc
sub
push
aas
ret
xchg
pop
enter
andl
pop
inc
in
xchg
into
sbb
movsb
rolb
cmpsl
mov
xor
sub
push
push
sbb
jbe
dec
js
inc
icebp
adc
test
or
and
inc
inc
int3
orb
popf
nop
push
pop
mov
into
mov
inc
dec
pop
add
lret
push
imulb
inc
lods
add
or
xor
mov
push
andl
test
nop
adc
mov
subb
outsl
inc
add
mov
ret
adc
orl
add
je
daa
sbb
test
aam
ss
scas
xor
cmc
and
cmpsb
lock
icebp
and
or
xchg
popa
iret
jo
inc
ljmp
mov
cmpl
cmp
loopne
or
sarl
sub
mov
rcrb
test
jmp
sbb
jbe
add
loope
gs
divl
jae
inc
insl
pop
add
inc
repz
adcl
insl
or
dec
mov
adc
mov
mov
pop
ret
aam
ret
sub
sbb
and
test
pop
add
shr
js
lret
fcmovnb
adc
pop
orl
jge
and
lock
push
sbbb
jp
loopne
push
mov
mov
and
sbb
adc
dec
push
cmp
add
jns
mov
sub
add
fcomps
dec
lret
push
pop
xor
or
in
xchg
adc
js
push
xor
call
mov
sbb
and
sub
gs
dec
les
push
inc
push
test
add
xchg
ds
mov
pop
or
dec
xor
sbb
gs
mov
nop
aaa
push
or
mov
inc
cmp
mov
pop
and
or
xchg
xchg
jge
pusha
push
push
mov
xchg
inc
pop
lret
sbb
mov
sub
stos
fwait
push
test
xchg
cmpsl
mov
sti
mov
adc
dec
push
xchg
dec
sub
add
inc
adc
cwtl
xchg
icebp
xchg
fldcw
adc
mov
jo
cwtl
add
mov
pop
mov
addb
loopne
sub
inc
lods
sbb
add
in
mov
push
push
ds
dec
movb
sbbb
dec
xchg
clc
sbb
xchg
out
and
xchg
int
xchg
adc
stos
pop
xchg
pop
add
push
cmpsl
and
call
mov
mov
ds
dec
add
andl
loopne
and
or
sbb
lds
stos
js
cmpb
sbb
mov
movsb
jp
mov
sahf
sti
dec
mov
mov
arpl
add
sbbb
es
or
or
fildl
ljmp
jne
pop
push
stos
xchg
in
sub
push
arpl
adc
pushf
popf
gs
in
cmpsb
cmp
ficoml
sti
and
loope
jg
data16
pop
vunpcklps
jge
adc
push
xor
inc
xchg
stos
mov
stos
xor
inc
push
jl
jae
jno
push
fs
sbb
stos
movsb
sbb
jp
xchg
and
push
fbstp
mov
aam
loopne
push
mov
adc
jle
xchg
test
sahf
cmpsl
les
adc
adc
adc
test
imul
or
push
clc
sub
xchg
jmp
adc
or
je
jg
sub
sub
insl
xchg
jo
inc
loopne
inc
adc
stos
jecxz
mov
mov
jge
shll
std
jne
pop
pusha
inc
jno
out
iret
mov
or
outsw
or
dec
into
adc
shrl
mov
mov
and
mov
loopne
or
mov
jns
inc
bound
push
sub
push
daa
xchg
mov
pop
test
or
or
orb
mov
shrl
dec
sub
push
ss
lds
hlt
pop
jmp
in
loope
cmp
negl
or
loop
icebp
add
jnp
push
inc
cs
leave
dec
ss
dec
aad
mov
inc
pop
pop
adc
lcall
mov
inc
out
cmp
or
sahf
adcb
inc
fmull
mov
or
ror
mov
or
sub
mov
and
mov
pop
and
push
loopne
sub
ret
jo
dec
mov
imul
fwait
cs
xchg
sub
test
add
not
aad
fwait
movsb
jbe
jg
js
mov
sbb
push
pop
ds
pop
add
adcb
push
mov
enter
in
popa
icebp
push
mov
adc
jp
repz
push
inc
mov
dec
mov
mov
popa
or
mov
cmp
pop
popf
inc
aad
ret
xchg
xor
cmp
js
shl
xorb
insl
outsb
jl
ja
add
cwtl
mov
xor
cmpsl
jns
shll
test
add
push
add
sbb
sbbb
shll
sbb
jmp
sahf
gs
adc
mov
cmp
stos
jge
pop
or
cmp
jns
mov
adc
add
mov
inc
mov
inc
or
inc
or
int3
rcrb
shrb
add
shrb
add
mov
ljmp
push
sbb
outsb
enter
mov
mov
mov
and
jnp
mov
sbb
rolb
xor
roll
and
inc
push
add
adc
aad
sub
mov
and
nop
test
jg
xchg
mov
or
popf
popf
or
test
loop
inc
es
and
sub
xor
aam
push
mov
imul
ret
or
gs
bound
cmpsl
mov
das
icebp
rol
jae
inc
cmpsl
test
dec
adc
outsb
rcl
sahf
cmp
rclb
orb
adc
sub
ds
pop
jl
out
sbb
nop
jmp
loope
mov
jg
mov
lret
mov
and
inc
adc
xor
cmp
push
popf
and
roll
add
sahf
xor
mov
lods
push
int
pop
es
adc
cwtl
subl
stos
pop
aad
call
movsb
push
adc
adc
mov
lret
fstpl
ret
movsl
pop
or
xchg
mov
or
test
inc
test
inc
cmp
sbb
inc
in
and
and
pop
push
mov
sbb
push
cmp
inc
adc
push
les
mov
hlt
in
icebp
mov
nop
push
addl
cmpsb
pop
sbb
out
sti
xorl
mov
mov
cmp
test
xor
stos
test
sbb
xor
in
ljmp
lods
and
cmp
push
jbe
adc
sbb
and
lret
add
xchg
inc
mov
bound
arpl
and
and
sbb
subl
sub
xor
jmp
ljmp
flds
push
addb
adc
or
aad
mov
pusha
sbb
fs
jge
or
outsb
inc
dec
adc
add
leave
add
inc
rorb
sub
xor
adcl
mov
or
icebp
add
hlt
add
inc
push
sub
push
andl
sub
repz
add
lock
je
xlat
popa
pop
aad
inc
sub
arpl
jb
fsubl
das
rcl
adc
inc
das
dec
call
adc
fiadds
mov
adc
ret
push
pop
insl
lea
or
xchg
sub
pop
sbb
push
lock
scas
aaa
inc
pushf
rorb
add
or
cmp
pop
xor
or
push
test
xor
or
mov
mov
and
mov
sub
stc
or
cmp
ja
add
loop
mov
nop
push
cld
pop
mov
sbb
ret
sar
xchg
aas
pop
pop
test
or
add
enter
add
sbb
pop
lock
imul
mov
xor
bound
ja
addr16
cmpsl
mov
mov
xor
sti
ret
into
daa
loopne
mov
add
in
mov
xor
int3
mov
add
clc
popf
je
push
je
lock
xchg
sub
inc
ret
mov
sbb
mov
push
pop
xchg
iret
lahf
sub
lock
add
test
cmc
stos
mov
test
das
cs
mov
jno
dec
sub
cli
or
es
jnp
jb
cwtl
or
pusha
pop
std
xchg
dec
dec
clc
sub
sub
imul
xchg
das
sub
icebp
add
xchg
cs
lods
loopne
and
call
in
and
sbb
into
scas
int
or
adc
cltd
roll
loope
xchg
fisubl
adc
loope
xchg
test
inc
push
push
aas
push
sub
push
test
bound
xchg
or
mov
inc
cmp
out
add
mov
ret
cltd
and
es
push
aas
loope
rcrl
icebp
shlb
adc
adc
sahf
jmp
mov
push
scas
test
movsb
mov
adc
rcrl
push
lock
orb
dec
xor
mov
dec
in
call
cmp
popa
push
dec
adcb
or
jp
arpl
push
lahf
xor
mov
mov
sbbl
pop
daa
push
daa
push
lock
outsb
in
cs
push
cld
sbb
adc
insl
clc
lret
inc
push
adc
xlat
jp
daa
sbb
lret
xchg
scas
jmp
dec
iret
dec
sbbb
xchg
jg
inc
pop
adc
xchg
or
popa
mov
pusha
adc
push
cmpsb
andb
das
fs
dec
or
and
push
test
or
je
in
push
insb
leave
test
out
dec
or
mov
add
jo
aam
xchg
shrb
orl
daa
setb
jb
arpl
pop
xchg
call
div
sub
dec
sub
jge
sbb
jne
sub
pop
cmpsl
cli
xchg
add
loop
xlat
push
loope
inc
imul
movsb
pusha
or
sbb
fmuls
ret
je
aam
shlb
xor
loope
mov
popf
ret
sub
pop
jecxz
jne
ss
leave
jnp
add
mov
movsl
pavgw
ds
mov
adc
ret
and
adc
rcrl
rolb
dec
adc
iret
sub
add
dec
lcall
push
lret
add
add
mov
xchg
jb
aaa
jmp
jns
sub
cmp
sbb
loop
xor
sub
lahf
add
loopne
ljmp
mov
xchg
mov
addr16
shrb
dec
lret
inc
lcall
add
sub
sub
inc
js
bound
les
push
pop
imull
mov
xor
aad
dec
mov
and
cmp
lret
mov
pop
inc
je
inc
xchg
addr16
in
sub
pop
and
mov
flds
add
sub
in
rorb
imul
xchg
mov
shlb
ret
xlat
pop
add
or
scas
mov
fucomp
movsl
imul
push
adc
fwait
mov
mov
push
arpl
or
popa
inc
cmp
ror
xchg
mov
mov
jo
push
ljmp
pop
lret
xchg
sub
pop
sbb
mov
jnp
inc
xor
lds
xor
and
and
dec
adc
sbb
or
mov
add
insl
adc
mov
into
push
adc
fstpl
jmp
sbb
add
mov
mov
pop
adc
push
jle
shlb
icebp
mov
or
cmp
adc
mov
loope
and
xor
shlb
orl
or
or
loop
mov
stc
jmp
call
sub
dec
lods
out
rcrb
pusha
jge
or
fldt
mov
testb
loopne
icebp
cmp
icebp
data16
clc
ret
adc
pop
fcoml
shlb
pop
loop
xchg
mov
pop
pusha
inc
sub
adc
decl
adc
xor
fcomi
cmp
enter
cwtl
sub
addb
xor
add
ret
push
dec
sysret
adc
jb
mov
rclb
mov
push
or
xchg
and
add
roll
bound
mov
pop
xchg
outsb
jnp
inc
add
cmpb
inc
adc
fildll
js
loopne
mov
xchg
jbe
sub
and
mov
adcb
sbb
mov
les
push
adc
cmp
jmpw
mov
dec
pop
notb
jae
shlb
mov
mov
in
and
idivb
jl
sub
xor
daa
scas
mov
cmc
jbe
sub
push
push
jecxz
add
insl
daa
mov
lahf
pop
sarb
pop
cmpsl
data16
xor
mov
popf
mov
icebp
sbb
inc
repz
rolb
add
push
enter
jmp
es
push
adc
mov
jno
push
repnz
popf
inc
lock
adc
lret
pop
mov
sarb
jge
cwtl
inc
enter
xor
cmp
or
cmp
movsb
dec
push
add
cmp
data16
jbe
int3
sub
fmuls
add
ror
shll
sub
cmp
push
mov
sbb
mov
insl
das
mov
fwait
dec
xchg
or
call
xlat
cltd
or
sub
sub
les
push
lds
les
xchg
xchg
add
dec
les
aaa
testl
test
push
hlt
jo
arpl
loop
fstpt
pop
outsb
outsl
inc
ljmp
mov
jmp
xor
sub
xlat
pop
adc
mov
adc
or
loope
aas
add
mov
adc
add
pop
hlt
orb
push
lret
shlb
cltd
je
inc
mov
cmp
scas
stos
inc
pop
inc
ds
or
stos
outsl
pop
in
jge
cmp
add
mov
scas
in
imul
inc
jge
loopne
and
outsb
cmpsl
jp
mov
mov
jno
sbb
loopne
sarl
adc
icebp
int3
scas
or
mov
rolb
fsts
sub
cmp
std
mov
mov
fadds
inc
pop
sbb
or
cmp
cmp
roll
mov
xchg
test
add
pop
adc
dec
add
sbb
cltd
xchg
das
sbb
cmp
adc
mov
push
ret
es
mov
hlt
arpl
cmp
hlt
and
sbb
clc
lods
add
mov
out
jo
dec
rcll
or
shlb
insl
repz
rcll
scas
je
inc
jnp
int
push
add
scas
daa
loopne
cli
adc
add
addb
ret
clc
arpl
push
and
rcrb
adc
push
inc
jbe
je
adc
rorl
sbb
loopne
add
shr
out
and
xlat
in
inc
cmp
daa
mov
mov
ret
aam
addb
int3
adc
test
jbe
std
jb
and
jbe
xor
cmp
dec
jne
pop
jne
roll
dec
cmp
testl
rorb
inc
rorb
dec
cld
push
div
icebp
mov
shlb
inc
fidivl
addb
jg
inc
insb
outsb
ret
enter
icebp
adc
aaa
adc
pop
xor
test
ret
test
jo
into
jp
and
sbb
add
sub
ljmp
enter
add
lea
flds
cmp
cwtl
adc
jp
and
std
adc
xchg
cli
push
jl
pusha
inc
jl
inc
xchg
xor
testl
in
test
hlt
mov
inc
loope
imul
xchg
add
cmp
test
mov
les
xor
dec
shlb
mov
and
push
arpl
push
leave
xchg
lcall
pushf
adc
add
iret
fiadds
subl
rcrb
jns
dec
loopne
xchg
sti
outsl
mov
and
faddp
push
pop
lds
adc
pushf
jae
into
or
ror
test
pop
daa
cld
cmp
sub
xchg
push
or
pusha
push
mov
dec
addr16
add
int3
lret
and
mov
lods
xchg
and
repz
inc
js
jmp
push
adc
loop
sub
adc
into
xor
xor
stos
lcall
and
jl
insb
sub
cmc
aam
mov
dec
sbb
cmpb
xchg
or
mov
dec
sub
push
dec
xor
subb
loope
arpl
adc
sub
add
adc
or
xor
scas
stos
dec
sub
jmp
ret
out
aam
sub
arpl
mov
iret
loop
push
add
lds
sbb
adcb
arpl
sti
test
idivb
mov
orb
and
lret
adc
inc
and
xor
cmpsl
inc
subb
iret
adc
xchg
adc
mov
adc
cli
mov
addr16
inc
mulb
gs
sbb
xor
inc
mov
and
lds
xchg
xchg
das
shll
add
in
jp
push
adc
mov
add
pop
cmp
mov
ret
mov
cmp
or
rolb
ss
sahf
sub
insb
addr16
push
sub
or
lock
xor
lock
aaa
sbb
adc
add
mov
mov
push
mov
es
ret
mov
arpl
xchg
sub
mov
scas
mov
fdivs
pop
push
pop
cmp
jo
xor
imul
add
push
bsf
loopne
push
lahf
aam
sbb
add
sti
cmp
enter
or
cmp
mov
pop
and
push
mov
and
add
jge
stos
loop
jge
sub
aad
or
or
mov
dec
adc
lock
pop
push
popa
jge
jne
push
ja
adc
mov
and
add
or
mov
pop
int
test
pop
push
cmp
push
jbe
fsubrs
test
xchg
not
daa
mov
xor
aaa
jnp
imul
in
xor
mov
and
jecxz
repnz
into
add
sub
adc
dec
add
lahf
ret
test
push
fwait
push
andb
jnp
dec
add
gs
add
aas
mov
sub
adc
jp
andb
cmp
scas
cs
sbb
stos
movsl
outsb
mov
mov
push
mov
pop
or
loop
popf
sbb
jae
fisubs
sub
and
orl
jo
inc
xchg
cmpsb
mov
add
mov
sub
cmp
pop
test
push
xchg
shrb
push
insb
ja
mov
icebp
push
xchg
sbb
cmpsb
insl
adc
sbb
pop
sub
test
add
mov
adc
push
cmp
movl
scas
jno
aam
mov
scas
cwtl
push
fmuls
shrb
shlb
mov
lcall
mov
xlat
test
sub
dec
mov
addl
jmp
mov
push
not
push
push
inc
mov
scas
stos
jo
mov
or
insb
and
in
pop
push
sub
imul
push
stos
sub
jl
cmp
pop
jp
adc
mov
push
add
loopne
add
addr16
ret
pop
adc
sub
add
or
push
mov
push
das
lds
mov
and
int3
push
fdivr
in
push
xorl
lock
mov
inc
mov
fsubl
fsubrp
test
daa
fsubrs
mov
sbb
stos
or
xor
je
sub
leave
pop
mov
push
dec
or
sbbb
popf
adc
imull
or
test
or
js
mov
data16
add
xor
sub
xchg
add
mov
rcrb
out
cvtps2pd
pop
adc
mov
mov
mov
push
test
je
add
sbb
adc
shll
aad
push
arpl
mov
xchg
mov
or
js
xchg
ret
cmp
xor
push
push
cmp
bound
inc
pop
jmp
test
hlt
push
mov
mov
push
cmp
push
push
aad
cli
adc
ret
cmpb
in
js
and
mov
push
push
cmp
sbb
add
js
and
sbbb
adc
mov
mov
add
dec
push
loopne
hlt
push
inc
cmp
movsl
sub
mov
stos
aaa
ret
and
sbb
arpl
cmp
pop
adc
xor
repz
xor
and
adc
push
sub
nop
aad
mov
out
hlt
push
out
add
out
cmc
pop
adc
sti
data16
aad
fsubs
inc
dec
and
xor
loope
push
popf
inc
mov
pushf
shll
lcall
dec
push
enter
cmp
aam
pop
xchg
mov
cmp
bound
movl
lret
mov
in
sahf
shl
pop
push
shld
lods
pusha
sarl
call
pop
aas
je
dec
shl
lods
mov
gs
scas
pop
add
add
and
cmp
mov
shl
ds
testl
jecxz
mov
mov
popf
xor
mov
std
insb
adc
add
pop
inc
fbld
push
lret
cli
xor
into
movsb
xor
adc
mov
int3
jmp
vpshufb
jb
stos
pop
push
mov
xchg
into
xlat
or
xor
mov
pop
adc
pop
xchg
mov
not
out
inc
shrb
cmp
mov
out
inc
pop
sti
inc
aad
loopne
pop
adc
mov
dec
inc
xor
push
stos
ret
lods
adcl
mov
sbb
jnp
mov
mov
jecxz
cmp
cmp
push
roll
rclb
fdivr
push
ja
xchg
das
inc
add
xchg
ret
test
xor
jo
add
ljmp
loopne
test
bound
lret
mov
leave
test
gs
xor
push
adc
adc
xchg
pop
in
test
mov
imul
arpl
les
push
add
icebp
dec
xor
fsubl
inc
loop
int
dec
or
lret
xor
inc
ss
mov
or
mov
xchg
inc
rcrl
pop
pop
cmp
arpl
lret
loopne
xchg
jge
mov
and
and
sub
push
addl
mov
stos
mov
adc
ret
into
xlat
das
fldcw
or
insl
iret
add
fadds
push
mov
hlt
lock
sub
dec
or
add
arpl
outsl
fstl
pop
sub
xchg
mov
add
jg
dec
in
aad
or
in
roll
xchg
push
test
int
shll
mov
addb
mulb
push
mov
xchg
ja
subl
jp
out
mov
mov
lock
test
in
cmp
add
enter
or
outsb
scas
loop
mov
ret
outsl
out
jb
inc
push
nop
mov
lock
sbb
push
cmpsl
test
or
pop
loop
scas
mov
int3
lret
cwtl
adc
xchg
add
fadds
rcrl
mov
cmc
stos
jb
cs
and
and
inc
push
arpl
xor
pop
inc
sub
push
adc
in
fsubr
lods
popf
sub
mov
cmp
shll
xor
or
scas
shll
sub
jne
mov
outsb
push
inc
addr16
jecxz
imul
sbb
add
xor
arpl
or
lret
adc
call
bound
inc
jo
xchg
adc
das
or
or
filds
xchg
mov
inc
pushf
cwtl
cs
les
mov
pop
notl
hlt
xor
pop
cltd
adc
mov
cltd
add
adc
cs
adc
aad
add
push
sub
ljmp
cmc
ljmp
dec
ret
add
insb
jl
fsts
pop
xchg
sbb
cmp
icebp
call
sbb
and
adc
inc
movsb
out
mov
mov
add
cmp
and
pushf
jno
into
add
out
xor
daa
jp
bound
add
fcmovnu
pop
bound
dec
jb
xor
aas
mov
or
or
and
bound
cmpl
sub
gs
fiaddl
inc
pusha
mull
xor
lods
pop
add
mov
icebp
daa
jnp
mov
xor
sbb
adc
or
pushf
mov
je
cwtl
sub
push
xchg
mov
mov
dec
push
jbe
cmp
mov
pop
sub
es
in
lds
jbe
pop
call
adc
jp
int
push
dec
add
push
cwtl
mov
mov
iret
es
pusha
mov
jne
and
push
inc
xchg
shrl
rorl
xchg
or
sbb
dec
sub
pop
push
cs
sub
dec
push
je
out
inc
jno
add
and
adc
aam
mov
inc
and
adc
sub
or
xor
int3
addb
mov
in
push
xor
add
jae
cld
inc
mov
stos
ja
sbb
sub
insl
push
adc
sub
je
das
jne
fs
jle
sbb
push
mov
sub
mov
cld
mov
or
shl
das
dec
push
push
test
hlt
js
dec
push
cmovb
out
pusha
cs
leave
ret
js
xchg
lock
add
sbbb
bound
jecxz
mov
mov
dec
inc
mov
and
stos
and
push
aaa
adcb
dec
inc
sbb
jp
dec
sbb
outsb
leave
fwait
aad
aas
push
iret
stos
mov
mov
push
mov
fldt
enter
lock
inc
jno
mov
xchg
mov
push
test
add
popl
pop
ljmp
jnp
xchg
cmp
jp
mov
mov
push
inc
shrb
mov
les
and
cwtl
push
inc
pop
imul
adc
or
adc
push
test
add
jecxz
lret
sub
cmpsl
sub
adc
xor
pushf
loopne
xor
fs
and
mov
dec
adc
shrb
push
sbb
test
adc
rorl
dec
xor
or
xchg
xchg
sbb
adc
dec
sub
mov
push
push
xorb
inc
push
push
mov
push
scas
and
sbb
push
jmp
and
sbb
je
outsb
mov
pop
ror
cmpsl
dec
push
adc
loopne
xor
push
xor
daa
lods
and
loop
fwait
jae
push
push
cmp
add
std
pusha
ret
mull
mov
cltd
and
xchg
xor
push
cmp
push
jl
daa
out
test
push
test
lcall
adc
or
or
adc
xor
pusha
fadd
xchg
out
das
or
push
addr16
fs
dec
dec
das
mov
jle
mov
push
sub
dec
mov
push
aam
repz
xchg
push
or
or
pop
pushf
clc
subb
xchg
adc
lods
rclb
dec
sbbb
decb
setp
bound
xchg
mov
lret
adc
or
lea
stc
lods
fs
xchg
popf
lods
lock
arpl
loopne
push
mov
mov
std
xchg
add
adc
push
sbb
cmp
xor
sub
mov
or
or
in
and
je
jae
inc
cs
push
mov
out
es
adc
testl
nop
add
cwtl
jmp
push
lds
scas
jmp
inc
popa
or
pop
movsb
mov
int3
jle
inc
test
sub
sbb
lds
lret
xor
icebp
dec
icebp
mov
adc
push
adc
sub
les
add
ret
nop
dec
push
aam
testl
sarb
xchg
add
cmc
dec
inc
xor
sbb
mov
xlat
mov
xchg
aam
outsl
ljmp
cmp
inc
cwtl
mov
adc
into
push
mov
les
xchg
mov
cmc
and
fldcw
jb
scas
mov
cmpsb
mov
scas
daa
mov
sub
mov
pop
aas
jle
jns
fstpt
jecxz
mov
mov
mov
jnp
arpl
inc
adc
addb
fistl
add
sub
in
cmc
jno
mov
shl
loop
push
jne
mov
and
add
lcall
pushf
sti
aaa
jp
dec
and
push
jo
ret
cmp
ret
ja
iret
aam
lahf
ret
add
test
outsl
dec
outsb
movl
or
sahf
bound
test
les
out
ret
push
fsubl
loopne
jnp
or
stc
lret
lret
or
aaa
imul
ss
into
push
add
gs
nop
je
shrl
shll
cltd
roll
mov
mov
cmp
add
jnp
mov
push
outsb
call
mov
adc
fwait
cmp
rcrl
or
and
add
mull
stos
cmp
ds
fcmovu
int
push
add
jmp
cld
jo
cmpsl
loope
into
adc
in
sub
fisttpl
clc
cmp
xchg
and
dec
lds
pop
push
out
add
es
and
insb
and
jo
mov
dec
xor
adc
ror
sub
das
xchg
sub
aam
shlb
aaa
adc
cmpsl
adc
aaa
jbe
xorb
fsubs
xor
clc
and
or
out
pop
push
jp
adc
xor
dec
outsb
pop
sbb
ret
xlat
and
push
pop
scas
filds
ficoms
sub
fstps
sub
xchg
push
sbb
inc
idivl
jns
sbb
out
and
pushf
or
sbb
outsl
inc
push
add
fwait
aaa
pop
xorb
mov
mov
jnp
cmp
add
inc
inc
dec
into
xor
xchg
inc
pop
arpl
aaa
push
jne
pop
mov
sbb
js
mov
push
das
ljmp
scas
jno
es
arpl
mov
dec
stc
test
sub
adc
cmc
xor
add
lahf
orl
xor
push
push
loope
lds
or
cmp
popf
pusha
daa
lock
gs
dec
adc
sbb
and
sbb
jns
sub
add
adc
push
sub
inc
shll
xor
push
lds
adc
xorb
mov
push
inc
xchg
inc
push
adc
rolb
xor
inc
int3
lock
jb
xor
les
jle
arpl
andl
call
inc
lods
sar
or
mov
mov
sub
and
lds
mov
jp
or
jge
pop
mov
rcr
enter
mov
jb
lds
and
mov
or
mov
and
pop
add
or
ljmp
outsl
and
mov
sub
jne
mov
addl
pushf
lds
sub
push
in
mov
push
cmp
jb,pt
xchg
out
dec
subb
inc
inc
movsl
testb
adc
stos
dec
adc
xor
inc
pop
or
out
cmp
sub
fisubl
adc
das
call
pop
push
or
fstps
inc
rcr
sbb
inc
jg
cmpl
sub
cmpsl
lds
push
pushf
and
arpl
pop
cmpsl
sbb
stos
add
add
ret
mov
push
lret
ror
cltd
lea
fcmove
aaa
add
mov
sbb
mov
jb
pop
loope
andb
aad
and
cmp
sub
xchg
jmp
das
and
xchg
out
popa
insb
ret
iret
sub
pop
sub
inc
xchg
cmp
movsb
call
xor
out
sbb
or
inc
sti
dec
mov
and
mov
jp
ret
xchg
mov
shrb
push
push
test
inc
imul
and
mov
sub
aaa
ds
ret
sub
jle
daa
xor
push
rcrl
fistl
xor
jne
aas
sbb
xor
stos
jmp
adc
fisubs
sbbb
nop
jno
orb
jns
movsl
mov
loop
mov
jno
push
push
cmp
inc
es
add
jle
adc
pop
add
imul
xchg
cmp
jmp
rolb
xor
sbb
ror
fcoms
push
adc
gs
sub
pop
cmp
push
and
mov
mov
mov
ds
xor
out
insl
stc
das
sbb
lgs
inc
xchg
mov
or
ret
ljmp
jno
lea
or
jl
mov
sbb
ret
sbb
aam
mov
insl
inc
xor
ljmp
adc
add
cwtl
jl
addr16
sarl
mov
out
js
inc
mov
imul
cmpsl
shr
jno
ds
loope
add
push
outsl
push
sbb
mov
pavgb
ja
adc
scas
stos
ja
sbb
and
add
jle
mov
push
lcall
sbb
out
push
sti
cmp
mov
and
sub
mov
sub
fs
or
xchg
xchg
mov
xor
nop
dec
sahf
cmp
fnsave
ds
dec
sub
mov
imul
mov
loop
clc
loop
sarb
outsb
pop
dec
mov
pop
sub
dec
and
aaa
adc
pop
cmp
and
daa
dec
mov
pushf
mov
sbb
data16
sub
xchg
mov
adc
add
std
push
adc
popa
cmp
lret
lods
xchg
inc
nop
sarb
inc
pop
adc
pop
popa
inc
nop
test
mov
psubusw
sub
and
mov
clc
and
and
push
pop
lds
out
in
pusha
push
adc
addb
ret
insb
and
sub
xchg
jb
pop
arpl
sub
and
inc
imul
daa
sub
and
movsb
insb
lea
push
dec
or
cmp
sbb
push
inc
push
or
xchg
ret
leave
lods
or
cwtl
inc
pop
daa
add
cltd
jnp
movsl
jne
pop
addr16
pop
inc
cltd
inc
and
xchg
out
addl
add
and
inc
lds
ret
mov
xchg
ds
out
adc
mov
xchg
imul
add
mov
adcl
pop
sub
in
mov
xchg
pop
sbb
ljmp
jnp
jo
xchg
ss
pop
xor
fisubrs
mov
xchg
mov
es
dec
xchg
xchg
mov
fwait
pop
pop
dec
negb
lods
shll
sub
or
push
and
jmp
xchg
popa
or
inc
adcb
sbbb
mov
jecxz
and
jnp
and
cmp
inc
cmpl
pushf
push
add
push
test
and
inc
sub
add
cwtl
fsubl
jne
sbb
xchg
mov
sbb
jle
sub
adc
imul
xchg
xor
aad
push
movsl
inc
test
mov
xchg
xchg
das
js
adcl
dec
inc
dec
rep
sub
add
dec
fnstenv
cmp
jne
cmc
add
ret
sbb
mov
and
aam
xchg
cmpb
xchg
lock
mov
adc
loop
jns
js
testl
mov
fsubrs
jge
lret
aad
test
test
mov
nop
mov
dec
inc
jb
imul
fistps
cmpsl
dec
enter
pop
sti
push
or
add
add
hlt
xor
lea
add
ljmp
icebp
jecxz
lret
es
add
inc
pop
or
adc
popa
add
or
ss
jge
adc
dec
imul
jo
inc
stos
mov
lret
fiadds
xchg
dec
rorl
or
shr
inc
fcmovnbe
mov
adc
sub
lods
xchg
adc
sbb
notl
out
or
fwait
jo
daa
lahf
pop
and
ror
push
lret
cmc
xchg
xchg
orl
fwait
add
jb
rolb
aam
pop
inc
cmp
pop
in
cmpsl
push
popf
inc
jp
xchg
jp
xlat
je
add
cmp
sub
xor
fistpl
das
and
and
and
or
mov
mov
ret
imul
popf
push
inc
jmp
icebp
sti
rcrl
jmp
sub
sbb
sar
scas
pop
xchg
push
test
mulb
inc
xlat
and
and
loop
xchg
lods
clc
inc
adc
cmp
insl
mov
fcomps
out
or
or
add
inc
loopne
xchg
fldl2e
stos
adc
adc
test
jo
inc
outsl
aam
sub
or
xor
enter
xchg
add
or
fwait
stc
call
leave
or
mov
ret
pusha
push
es
mov
mov
pop
push
mov
mov
mov
pop
or
and
pop
outsb
imul
push
scas
aad
sbb
xchg
or
mov
dec
push
or
jno
dec
je
enter
dec
jo
fsub
sub
add
movsb
pop
adc
add
or
xchg
jmp
decl
shrl
pop
or
push
adc
push
pop
dec
or
ljmp
sbb
xchg
jecxz
gs
mov
sti
test
mov
xor
xchg
mov
or
mov
lds
cmp
insb
inc
mov
roll
mov
sub
lods
fs
jle
add
jmp
xchg
jae
test
fidivs
push
push
inc
mov
xor
sbb
in
and
jnp
stos
sbb
fwait
notb
cmpsb
cmpsl
or
push
rorl
dec
jne
scas
sbb
ret
test
cwtl
xor
xchg
pop
push
inc
add
sub
in
insl
mov
clc
and
test
dec
push
ret
mov
push
jl
shlb
sbb
out
mov
mov
loope
adc
or
cmc
mov
test
fdivp
mov
fstp
pop
out
mov
cmpsb
mov
add
push
test
cmp
xchg
cmp
das
mov
xchg
push
sbb
mov
push
dec
pop
xor
sbb
sbb
sbb
or
dec
push
and
sahf
sbb
and
jae
mov
pop
fsubl
cmp
lods
xor
xor
sub
lock
xlat
cltd
subl
int3
out
dec
ret
add
movsl
es
pop
fists
cmp
sbb
sbb
jmp
push
push
mov
jae
and
sbb
and
aam
xchg
mov
cmp
aam
aaa
lods
pop
adcl
fbld
sub
sub
pop
inc
cs
fnstcw
test
sub
adc
nop
gs
aam
jnp
pop
jecxz
stos
sbb
out
test
out
sbb
je
ss
test
clc
icebp
pop
pop
inc
mov
gs
sub
cmpsb
loop
bound
mov
int
push
and
repz
insl
push
loopne
js
aam
ret
ret
out
mov
or
sbb
mov
test
imul
sbb
mov
adc
bound
ss
adc
out
sbb
imul
sub
jl
xchg
and
and
cmp
jl
xor
bound
fisubs
dec
pop
jne
fldl
adc
dec
sbb
xchg
mov
sbb
jo
xor
cwtl
lods
or
movsb
jbe
jecxz
clc
test
inc
adc
leave
or
into
or
push
shll
roll
jge
mov
fistpl
fisubrs
pop
adc
imul
adc
or
dec
pop
test
in
xchg
sar
rolb
sbb
fldenv
inc
push
or
push
inc
inc
mov
push
pop
mov
push
mov
or
xor
lock
movsb
leave
add
jns
popa
bound
test
fs
push
jg
push
sub
pop
inc
mov
fs
xchg
adc
or
cmp
idivb
fstps
push
es
add
or
das
add
mov
sub
jecxz
push
int3
sahf
les
test
add
mov
je
into
rcrb
fmuls
adc
adc
cmp
push
arpl
es
test
pushf
or
imul
bnd
adc
mov
and
mov
sub
mov
push
mov
inc
sub
std
jo
fcoml
loopne
and
adc
xor
and
pop
push
pop
pop
sub
lds
and
aam
aaa
sbb
test
add
loopne
in
js
mov
sbb
imul
pusha
push
mov
test
sub
sub
movsb
negl
and
and
sub
shll
inc
mov
push
dec
cmp
jb
or
dec
sbb
pusha
push
sbb
mov
adcl
sbb
arpl
mov
loopne
xor
xchg
sub
adcl
int3
mov
orl
add
outsl
xchg
loopne
rcll
add
mov
or
add
test
xor
push
fildl
sbbb
cmp
inc
or
jmp
arpl
push
lods
ret
mov
sub
push
sbb
orl
aaa
js
int3
fcoms
adc
movsl
dec
das
into
and
stos
daa
and
jno
pop
loope
add
sbb
cld
scas
out
flds
inc
push
dec
pop
mov
push
adc
mov
adc
adc
xor
add
ret
pop
pop
aad
sub
ja
dec
adc
arpl
cwtl
popl
push
ljmp
adc
inc
adc
sti
fwait
sbb
xorl
ret
add
movsb
roll
insb
push
popa
aas
add
push
jns
addl
lret
negl
jnp
roll
cmp
adc
aam
jne
sbb
out
add
sbb
mov
in
mov
and
adc
out
add
rolb
xchg
push
in
insb
or
int
sbb
dec
add
sub
mov
push
and
pop
xchg
sub
outsl
xor
xor
popa
and
fsubrs
sub
dec
xor
ret
add
insb
popa
add
aaa
sub
sti
mov
inc
cmp
pop
inc
sub
adc
cltd
movlps
pop
lret
push
mov
mov
sbb
ret
jecxz
mov
popf
add
fldt
icebp
out
fcompl
subl
mov
arpl
push
insl
or
and
push
test
idivl
movlhps
pop
xchg
mov
xlat
mov
or
call
outsb
and
ja
aaa
or
mov
js
pushf
jmp
push
pop
dec
cmp
cmpxchg
std
cmp
push
add
push
inc
adc
sbb
push
cwtl
or
jbe
cmp
adc
mov
cmc
adc
scas
adc
lods
push
addr16
or
popf
cmp
or
imul
fwait
jae
cmovae
stc
fisubs
lret
or
jnp
fnstenv
scas
ja
pop
pop
add
and
shrl
and
cmp
adc
popa
add
adc
jae
enter
pop
push
out
push
ret
mov
arpl
stc
dec
xchg
mov
fwait
movzwl
popf
insl
or
pop
outsl
mov
xchg
or
pop
pusha
btr
enter
pop
aaa
jbe
xorb
aas
inc
and
jae
mov
sti
je
fwait
sarb
leave
movsb
adc
in
lods
mov
movsb
add
pop
imull
loop
inc
or
add
movsb
mov
push
lds
lret
mov
mov
insb
mov
sbb
sbb
sbb
cli
and
mov
out
jno
or
rcrl
subb
mov
sub
rolb
stc
out
pop
das
cmp
pusha
cmovo
push
and
fucomi
mov
loope
sub
mov
xor
add
mov
shlb
lods
sti
fnsave
out
in
add
imul
add
aas
mov
das
mov
cs
fs
jne
mov
and
cld
sahf
xor
cmc
stc
out
mov
add
dec
movsl
dec
push
adc
jl
mov
add
cld
adc
cmp
mov
mov
jb
jmp
sahf
call
dec
sub
fmull
in
push
and
das
int
aad
loop
jge
and
jb
sub
bound
cltd
js
scas
pop
aaa
inc
loop,pn
fisttpl
ret
movsl
fimull
jno
mov
test
add
sub
jg
add
mov
inc
add
mov
mov
add
adc
xchg
add
bound
fwait
cmp
test
mov
pop
aad
jecxz
push
xchg
outsb
adc
mov
movsl
scas
push
cmc
idivb
stc
mov
in
pop
fnstenv
mov
add
push
mov
sub
clc
inc
imulb
cld
dec
repz
inc
icebp
in
pop
mov
data16
jne
jmp
cmp
lods
sti
sar
inc
push
jae
ljmp
cmp
out
jecxz
js
lods
xor
mov
inc
pop
adc
add
jns
pop
mov
fdiv
sub
cmp
mov
loop
dec
adc
fdivrl
insb
pop
inc
bound
fs
call
push
dec
shrl
fidivrs
dec
es
and
nop
jecxz
test
clc
jnp
jl
insl
js
jbe
aam
xchg
pusha
jns
test
movsl
dec
mov
shll
out
sbb
out
jl
jle
push
mov
lock
jo
mov
sar
push
mov
pop
add
scas
mov
mov
cmp
mov
push
push
clc
out
dec
or
push
in
mov
shl
shrb
out
or
adcl
in
adc
mov
add
sub
mov
fcmovbe
jno
or
pop
mov
fimull
lret
dec
sarl
popa
sti
xor
pop
xor
je,pn
dec
aad
cmc
mov
mov
jno
fidivrs
mov
shll
movsb
inc
cs
rorb
xchg
shll
mov
leave
adc
and
fcoml
pop
test
dec
jge
mov
stos
pop
je
or
fucomip
sub
bnd
aaa
mov
pop
mov
jmp
fstpt
testl
bound
pop
push
cmp
cld
or
mov
or
adc
dec
cmpsb
sub
add
push
mov
cmp
imul
sbb
hlt
shll
sbb
jl
shll
bound
xchg
push
loope
dec
or
filds
push
es
inc
inc
sub
enter
js
fnstsw
jns
jle
adc
pop
sarb
sub
inc
sti
aad
icebp
ret
lret
aad
or
xchg
outsl
imulb
mov
cmp
mov
jg
inc
xlat
ds
jns
push
add
push
inc
dec
push
jbe
xchg
cmp
pop
jge
adc
xchg
mov
add
roll
gs
mov
scas
int3
in
loope
scas
hlt
mov
push
jb
inc
out
jne
pop
and
pop
loop
mov
add
fstl
mov
mov
test
lods
push
loop
fmuls
pop
mov
js
insl
sarl
mov
jnp
rorl
dec
xchg
lcall
and
loope
and
lods
popa
enter
cmp
sub
sbb
stos
add
ja
roll
dec
idivb
add
cmc
dec
add
arpl
flds
xor
and
mov
xchg
ss
cli
daa
xchg
outsl
mov
clc
and
push
mov
cmp
cwtl
movsl
dec
and
inc
mov
fcomps
and
sub
ficoms
mov
popf
mov
add
push
loop
popa
cmp
push
jl
push
cmp
rolb
outsl
pop
ret
aam
jmp
out
addr16
sub
and
dec
add
cltd
pop
fmuls
data16
jnp
test
mov
shl
add
fcoms
pop
xchg
hlt
jp
adc
sbb
cmp
sbb
clc
and
outsl
ret
call
jle
add
popa
pop
lds
push
adc
xchg
lds
xchg
sub
sub
jnp
or
pop
adc
mov
fcmovnu
dec
loop
xchg
ret
and
cmp
cld
das
pop
fldt
loope
ljmp
jae
aam
sarb
idivl
adc
xchg
xchg
xchg
mov
leave
push
push
jmp
inc
mov
lahf
mov
push
cmp
mov
adc
pop
inc
loopne
in
pop
bound
js
lods
mov
das
sbb
mov
cmp
fldpi
ja
sub
push
cs
jmp
sub
jl
pusha
in
xor
adc
fmull
sbb
sub
jne
jnp
mov
xchg
and
in
xchg
arpl
xchg
roll
and
inc
xor
pop
lret
bound
dec
add
ljmp
test
cmpsl
add
push
xchg
jne
stc
sub
sub
test
mov
mov
or
cmp
inc
xor
sbb
pop
pop
dec
bound
pusha
mov
aaa
jecxz
push
pop
popa
movsb
test
shr
jno
rol
ret
sbb
pushl
mov
push
jg
stos
mov
subl
sbbl
add
mov
into
jne
gs
jae
and
repnz
xchg
orl
push
imul
lock
pop
mov
cmp
icebp
cmc
into
pop
pop
adc
push
pusha
aaa
push
ds
xor
xchg
lea
icebp
ss
mov
jnp
ja
stos
out
rol
xor
pop
jae
sbb
or
xchg
mov
jp
loope
pop
xor
ret
cmp
sbb
icebp
sahf
outsb
push
jno
jbe
push
sub
pop
in
andb
push
sbb
loope
or
sbb
jmp
ss
loopne
clc
lods
loope
cmp
ffreep
testl
mov
inc
inc
fistpll
leave
sbb
xor
dec
mov
mov
or
xor
fbstp
sbbl
imul
mov
ficoms
insl
adc
cmp
int
div
aas
je
aas
das
push
clc
ljmp
inc
loopne
arpl
scas
je
inc
sub
jo
mov
sbb
jp
inc
jl
xor
sbb
mov
adc
xchg
mov
fidivs
in
inc
sti
adc
push
cmp
adc
cmp
lods
pop
insb
mov
mov
push
and
out
sub
push
sub
xchg
add
and
xchg
scas
or
push
aad
dec
sbb
add
pop
add
mov
pop
mov
or
pop
dec
imul
inc
shlb
das
loope
std
rcr
dec
inc
pop
pop
rolb
mov
and
lret
or
cmp
push
stc
mov
xchg
stos
in
sbbb
xor
mul
jp
jl
push
jbe
jle
lods
dec
into
dec
mov
loopne
mov
cwtl
jb
scas
std
fcomp
mov
adc
push
test
mov
xor
pop
cmc
mov
inc
pushf
into
fs
jl
mov
mov
dec
popf
add
xlat
loope
adc
daa
and
je
je
jge
mov
inc
pop
loope
and
andl
clc
jne
imul
cmp
mov
ljmp
clc
inc
jl
test
mov
and
mov
aas
pop
hlt
andl
cmp
inc
fcomps
daa
jae
aam
test
push
mov
pop
roll
cmp
pop
jge
sarl
lods
and
inc
push
loopne
lahf
jbe
out
adc
cld
dec
pop
sub
aam
jmp
clc
sbb
test
sbb
jle
mul
inc
in
ljmp
add
inc
mov
xor
and
popa
sbb
sbb
ret
xor
in
sub
adc
sbb
sub
or
fwait
roll
repnz
ja
mov
mov
push
ljmp
sub
leave
stos
ror
pop
mov
fisubrs
loope
iret
sub
xor
out
jecxz
mov
jne
stos
ret
mov
out
jnp
and
stos
fcomps
and
and
mov
mov
div
cbtw
push
out
and
mov
jb
icebp
hlt
mov
shlb
dec
push
outsb
inc
data16
in
idivb
cmc
push
cmp
or
pop
pop
popa
mov
inc
insl
jl
test
push
sub
sbb
push
in
push
cmc
jae
movsl
fcompl
movl
sub
mov
daa
pop
xchg
rep
pop
add
or
mov
pop
imul
jo
aas
addb
or
sbb
fcmovnu
push
xchg
rolb
jno
mov
xor
inc
jne
fwait
cmp
xchg
pop
and
nop
push
jl
mov
icebp
hlt
cmp
shll
sbb
add
adc
loope
nop
sub
data16
ss
cwtl
mov
push
push
pop
pusha
xor
and
push
jne
aaa
mov
push
call
cld
sub
sub
xor
in
test
or
xor
fidivrs
xchg
pop
sti
pushl
push
es
outsb
lock
or
inc
mov
insl
mov
mov
xorl
add
call
clc
push
sub
pop
rcrl
xor
sub
insb
cwtl
icebp
and
mov
dec
sub
addr16
pop
jb
xlat
ret
dec
fmull
hlt
gs
xchg
or
cmp
pushf
jno
mov
jae
fwait
xchg
in
pop
lcall
movsb
sub
rcrl
das
js
ss
ret
or
sub
inc
lods
sbb
pop
and
cmp
fbld
iret
negb
jmp
gs
sbb
add
push
sbb
push
sub
roll
mov
pop
lcall
dec
lock
sub
jb
jge
int3
push
lods
mov
dec
imul
push
xor
dec
lds
fisttpll
fwait
adc
push
mov
xchg
imul
inc
jle
cmp
pop
loopne
test
sbb
sbb
mov
or
rcl
pop
dec
lret
mov
xchg
test
ret
mov
adc
mov
pop
pop
pop
xchg
les
rcrl
xor
pop
and
xor
push
add
mov
adc
popl
sub
jle
rol
and
adc
and
in
lds
inc
ficompl
lcall
add
loopne
jecxz
push
adc
mov
mov
and
lods
out
lods
testl
mov
inc
fnstsw
pop
pop
sbb
insl
mov
movsb
stos
jno
sbb
sub
test
push
sub
in
outsl
andb
loopne
and
sbb
inc
cmp
popa
pop
xchg
mov
fcomps
mov
mov
sahf
inc
scas
push
and
and
cs
and
jb
adc
out
sbb
sbb
adc
fsts
sbb
mov
pop
mov
call
fbstp
sub
inc
rclb
pop
sarb
xchg
mov
arpl
orl
neg
mov
push
pop
jp
xchg
mov
stc
jns,pt
adc
adc
outsl
movsl
sub
mov
lea
or
push
dec
sbb
ret
mov
sbb
inc
test
popa
xchg
add
mov
jo
aad
fistpll
jecxz
pop
mov
pop
or
sub
test
aam
mov
repz
sbb
mov
popa
in
xchg
clc
ljmp
inc
andl
dec
mov
pop
sbb
icebp
inc
shr
xor
enter
lcall
cmp
mov
push
sbb
mov
push
pop
fwait
or
popa
imul
inc
cmp
xchg
mov
ss
cmp
std
pop
jmp
call
adc
push
push
lahf
je
mov
lods
mov
fiadds
fimull
test
mov
in
mov
mov
pop
inc
iret
inc
sarl
and
out
dec
adc
and
push
addr16
mov
sbb
dec
cltd
pop
je
mov
daa
mov
sub
addl
add
lods
mul
rcr
pop
ljmp
imul
call
mov
pop
inc
lahf
push
lea
jnp
insl
pop
mov
aas
push
cmpsb
out
cmp
mov
mov
iret
push
mov
xor
sub
fildl
and
or
out
adc
add
shrb
fistps
mov
adc
insl
aas
lods
push
cmp
push
cwtl
add
add
clc
add
inc
jp
jge
dec
push
orb
sbb
call
or
pop
not
sbb
pop
pop
bnd
adc
lret
push
imul
mov
jl
xchg
adc
loop
xchg
mov
xor
shll
cmp
fisttps
sub
cmp
lcall
or
out
not
cmp
rolb
push
push
xlat
xchg
lahf
adc
mov
jb
xor
dec
jo
ret
cmpsl
loopne
pop
gs
push
icebp
shll
or
dec
inc
mov
or
xchg
jle
pop
lods
dec
pop
xorl
sarl
inc
add
mov
cmp
call
xor
pop
je
push
jmp
repz
arpl
xchg
add
adc
cmpsl
leave
stos
xor
daa
inc
jae
push
mov
ret
lea
shl
add
inc
inc
stc
mov
fisubrl
mov
xor
adc
jecxz
stos
rdpmc
or
lret
add
test
xchg
inc
sub
ljmp
mov
movsb
testl
aam
dec
in
test
sbb
adc
inc
push
negl
push
jno
xlat
push
cld
mov
sbb
push
addr16
lods
fistl
jo
xchg
dec
xchg
mov
ljmp
mov
jp
test
pop
mov
outsl
ss
int
sahf
sahf
lcall
pop
xor
test
outsb
jb
fimuls
push
lcall
mov
jecxz
leave
mov
fwait
and
or
das
stos
xchg
push
mov
pop
mov
xor
push
jnp
lods
nop
push
movsb
mov
fchs
jle
inc
dec
iret
and
sbb
ret
ret
inc
ret
shrl
lods
in
sbbb
cwtl
jle
daa
test
jmp
dec
test
gs
sub
pop
and
and
mov
loope
push
mov
dec
mov
sbb
sbb
sub
fcoml
mov
lret
or
xchg
mov
fcmovu
repz
clc
dec
sbb
rolb
pop
push
lcall
in
cmp
cmp
push
stc
imul
sbb
inc
icebp
pop
pop
and
cmpsl
xchg
inc
jle
icebp
add
scas
in
mov
ret
das
mov
xchg
adc
js
popa
lret
aaa
mov
int3
je
in
dec
cmp
mov
sbb
adc
ljmp
mov
loopne
mov
and
mov
xorl
fwait
sbb
ja
and
adc
addb
lret
or
daa
mov
je
adc
jns
and
or
and
lcall
dec
cmp
add
mov
imul
ret
sbb
dec
cli
or
mov
cli
cmp
shrl
std
ret
cmp
insb
outsl
arpl
cs
jno
xor
xor
je
adc
mov
push
dec
pop
cmpsl
mov
xchg
mov
or
xor
add
mov
cld
fldcw
add
push
out
push
bsr
or
sbb
in
fdiv
loop
dec
push
bound
mov
in
push
call
daa
mov
xor
mov
cld
aad
jo
jnp
adc
test
pop
rorb
loope
pop
pop
cmc
ja
mov
inc
add
xchg
mov
enter
loopne
mov
dec
xor
es
sbb
movswl
adc
loop
in
test
mov
mov
loopne
insb
sub
popf
xchg
jo
clc
mov
mov
pusha
in
lock
pop
mov
jmp
daa
or
arpl
mov
inc
dec
call
sub
les
hlt
js
movsb
adc
mov
ret
or
and
fcmovb
sub
pop
or
xchg
nop
repnz
jns
sti
ljmp
cmp
inc
mov
push
cmpsb
lcall
repnz
imul
nop
cmpl
add
lret
mov
inc
leave
fisubrl
jp
sbb
mov
xchg
insb
jmp
test
jle
mov
cmc
push
sbb
mov
and
shl
lds
shrl
shll
je
xor
idivb
ja
sti
lahf
xchg
xchg
pop
push
push
push
fcoms
cmp
sub
and
inc
push
js
cmpsb
es
lcall
lcall
loopne
bound
lahf
iret
fwait
inc
or
or
aaa
pmuludq
pop
popa
popf
stos
xor
xor
pop
mov
sub
scas
imul
imul
sahf
sub
or
cmc
in
pop
xchg
mov
sahf
xor
sbb
jmp
ss
div
repnz
into
sbb
lock
cli
into
std
jecxz
ljmp
mov
rcrb
stos
jmp
jecxz
xor
mov
jg
push
into
divb
pop
cmpsl
pop
loope
je
add
iret
cwtl
or
div
inc
adcb
in
cltd
xlat
or
cld
pop
dec
cs
fstpt
push
out
sub
enter
cmp
das
les
lret
mov
ret
add
mov
fwait
lea
lock
fstl
sbb
scas
insl
xchg
es
sarb
sbb
in
inc
add
mov
and
in
imul
pop
outsl
jg
jl
push
adc
cmp
loopne
xor
lock
jecxz
in
loope
pop
push
loopne
inc
loopne
inc
aam
fsub
pop
add
cltd
push
sahf
pop
outsl
movb
push
or
fcomi
push
mov
mov
sbb
fmull
and
ja
and
cmp
out
popa
lcall
mov
jge
sub
mov
enter
adc
dec
sbb
inc
cld
call
ljmp
rclb
ljmp
xchg
ljmp
int3
add
mov
shr
lret
sub
fimuls
sbb
xchg
popa
pop
jae
sbb
push
sbb
movntq
jo
jae
pop
xor
sub
add
xor
push
xorl
pop
inc
insb
inc
xlat
fimull
and
push
or
pop
add
push
punpcklwd
fcomps
fcmovnu
lea
insl
sbb
adc
mov
dec
addr16
xor
outsl
xchg
push
imul
sbb
stos
mov
or
and
pusha
mov
xchg
pop
inc
jge
adc
mov
mov
fisttpl
or
push
pushf
hlt
ljmp
mov
aad
ss
ja
pop
add
and
mov
push
repnz
cs
jge
leave
mov
jmp
adc
xchg
dec
xchg
xor
pop
pusha
aad
jbe
pop
mov
cmp
mov
mov
lret
xor
mov
out
lods
stos
xchg
mov
mov
fcomps
mov
pusha
mov
and
hlt
cmp
adc
or
orl
rcrb
mov
sub
fldt
sbb
sub
js
ffree
int
adc
or
inc
pop
pop
shlb
mov
jb
dec
sub
xchg
pop
xchg
cli
or
inc
mov
rcrl
add
call
cmpsb
sub
in
ljmp
sbb
and
sbb
js
mov
leave
int3
mov
jnp
sub
dec
jbe
jne
sbb
rcl
dec
aas
dec
jle
hlt
jmp
insl
leave
cld
les
mov
and
mov
add
dec
push
out
push
inc
es
adc
push
ret
pop
shlb
push
std
loopne
xor
insb
popf
inc
adc
jp
ret
subl
mov
push
loop
xor
push
sbb
mov
xor
mov
inc
add
jno
je
sarl
shr
push
lock
or
jae
pushf
orl
stc
add
stc
mov
pop
in
test
mov
scas
mov
pop
xchg
inc
mov
jo
mov
push
nop
pop
inc
loopne
arpl
lea
adc
out
ret
inc
lahf
das
out
push
sub
cmp
mov
das
in
sbb
mov
push
arpl
jge
cmpsl
sbb
loope
xor
pop
xchg
pop
out
adc
add
repz
sbb
movsl
insb
popa
scas
or
jo
idivb
pop
mov
stc
inc
push
cs
out
mov
mov
lret
fmull
es
popf
test
sarb
push
mov
jne
es
fucom
xchg
jp
xor
inc
mov
pop
jle
into
pusha
cmpsb
push
pop
loop
outsl
adc
sub
push
push
adc
imul
jmp
adc
pop
inc
ret
pop
ja
dec
repnz
lock
out
movsl
push
mov
imul
pop
inc
or
fdivl
cwtl
stos
out
in
leave
pop
sbb
shl
sti
clc
inc
aaa
pop
xchg
aas
and
data16
in
cld
ljmp
xor
lods
pop
mov
mov
movsl
ja
imul
mov
mov
jo
sub
xlat
xchg
or
out
mov
rol
inc
adc
popa
sub
adc
pop
dec
mov
sbb
or
xchg
jo
dec
ss
scas
push
push
loop
push
nop
js
jle
dec
mov
dec
in
jle
xor
fidivs
insb
jecxz
push
push
dec
popf
dec
sbb
or
jle
mov
cmpsb
leave
xor
hlt
mov
xor
xchg
clc
sub
addl
lret
leave
js
cmc
mov
mov
lock
daa
es
or
pop
push
sti
or
in
ret
jno
jmp
test
ret
stos
add
and
mov
cs
lods
mov
subl
lcall
xchg
loopne
test
test
dec
push
insl
sbb
out
daa
xor
pop
add
push
jle
lea
dec
lcall
outsb
ja
call
and
jg
cs
jle
lods
push
add
dec
ret
movsb
lock
mov
and
movsb
dec
sub
inc
lret
or
inc
cmp
adc
push
sub
adc
hlt
outsb
adc
cmp
inc
push
lret
add
sub
and
or
xchg
lods
sti
mov
adc
add
arpl
outsl
or
or
jae
push
push
mov
jns
sub
arpl
mov
push
sbb
sbb
pop
stc
lods
sti
pop
add
iret
and
aas
pop
movsb
jnp
push
pop
aas
jle
push
pop
pop
data16
addr16
aas
mov
mov
sbb
fidivrs
push
out
jl
sarl
jecxz
or
pop
ds
cmp
xchg
ret
adc
ja
add
mov
push
mov
es
cmp
and
lret
in
movsb
fcomp
sbb
or
negl
xor
sub
psrlw
outsl
in
cmp
push
push
mov
adc
lcall
sbb
cmp
aas
or
pop
jae
sbb
cvtdq2ps
aaa
cwtl
jnp
adc
or
and
cmpl
dec
idivl
mov
xlat
daa
das
xor
lret
inc
lds
imul
xchg
dec
push
imul
pop
loope
jmp
mov
sbb
xor
xchg
pushl
cmp
addr16
mov
or
cmp
in
mov
arpl
xor
test
pop
jl
insb
dec
xor
push
scas
xor
es
out
cmp
inc
fisttpl
frstor
sub
add
adc
jg
popf
sbb
add
push
push
sbb
xor
mov
or
out
sbb
inc
out
pop
cmp
clc
xor
push
xor
in
ret
dec
jno
cmp
test
pop
inc
push
xor
lcall
test
sub
adc
aaa
pop
adc
push
adc
sub
bswap
into
add
xor
scas
lea
andb
adc
dec
and
push
cmp
pop
jbe
insb
rorl
das
into
fisubs
aas
stos
pusha
fisttps
aaa
loop
adc
jnp
outsl
adc
bound
xor
mov
orl
mov
pop
xor
arpl
es
outsl
pop
adc
xchg
lret
sbb
mov
fwait
insl
out
mov
inc
xor
dec
rclb
add
ret
or
out
mov
mov
push
aas
sub
jp
int3
adc
xor
nop
idivl
pop
or
dec
add
js
mov
andl
push
stos
or
sbb
and
or
xor
lea
pop
sub
pop
hlt
sbb
out
adc
sbb
xor
push
mov
push
sbb
divb
or
or
sbb
add
adc
dec
pop
ja
jp
pop
push
pop
in
inc
mov
or
or
push
add
iret
push
xchg
pop
fisttpl
sbb
or
or
loop
push
push
lcall
sbb
pop
cli
imul
pop
sub
push
leavew
dec
test
adc
or
pusha
or
sub
push
xchg
das
or
or
add
fsubs
aaa
adc
and
roll
pushf
or
pop
pop
ss
int
mov
push
addr16
and
imul
shll
or
pop
adc
sbb
int
dec
or
lea
lahf
push
jge
frstor
push
adc
js
popa
xchg
xor
cmp
lahf
stos
lret
add
xchg
jae
out
mov
adc
ds
scas
mov
pop
movsb
rsqrtps
push
out
pop
shr
push
mov
sbb
shr
roll
sbb
add
inc
add
xor
ja
inc
and
push
mov
fmuls
lea
push
pop
xor
or
fisubs
das
das
or
xor
mov
stc
or
ljmp
or
nop
add
pushf
test
stc
and
inc
push
xor
and
mov
and
cmp
aam
mov
inc
std
adc
imul
jg
xor
xchg
call
xchg
sbb
cmp
stc
test
lret
push
addr16
mov
das
ds
stos
and
add
pop
and
xlat
cmp
pop
fsubl
aam
mov
mov
in
mov
rorl
jge
daa
ficomps
sub
cmc
jp
shl
inc
mov
adc
dec
mov
xor
push
mov
cs
popf
lds
mov
add
sub
dec
aam
xchg
mov
fld
inc
sbb
ret
fimuls
adc
sti
mov
sub
xor
insb
notb
cs
sbb
push
adc
mov
or
push
ja
add
cwtl
xor
sahf
dec
sub
negb
fs
movsb
lahf
shrb
insb
out
mov
mov
inc
fwait
mov
adc
aam
pop
adc
sti
push
mov
inc
les
mov
pop
mov
or
scas
lds
xor
fs
gs
pop
adc
sbb
dec
add
dec
aad
jno
mov
lret
test
mov
dec
mov
dec
cmp
loope
std
jnp
popa
adc
mov
sbb
sub
xchg
or
ror
sub
pop
int3
adc
cs
fmuls
outsl
pop
dec
lea
jmp
ja
ss
mov
sbb
jbe
adc
leave
testb
sub
sysexit
sub
dec
pushf
lcall
push
push
fistl
push
mov
jmp
mov
jnp
in
popa
cmp
inc
push
jbe
sub
cltd
cmp
gs
pop
fiadds
and
je
or
add
fidivrs
popa
mov
das
sub
fisttpl
and
shll
and
cmp
and
adc
iret
adc
mov
or
lds
das
dec
fistps
out
ret
push
and
pop
or
sti
sbbb
or
or
in
add
dec
dec
or
test
ss
imul
jge
gs
add
and
jge
arpl
sbb
gs
mov
or
xchg
cmc
xchg
pop
fwait
cltd
jb
pop
xchg
mov
or
aam
ss
pop
pop
xchg
and
or
sub
sarb
sti
popa
mov
push
int
mov
xor
lret
sub
xchg
cmpb
push
cmp
test
mov
popa
add
dec
shrl
insb
shlb
pop
aad
dec
jl
jmp
hlt
iret
lret
dec
mulb
xchg
loopne
jnp
imul
xor
sti
adc
imul
sub
add
cmp
ja
insb
and
add
cmpsl
push
mov
xor
testb
ret
inc
sbb
sub
inc
and
sbb
pop
inc
jmp
popa
pop
mov
stc
cli
popa
xchg
es
push
sub
mov
rcrb
imul
insb
sub
xor
lods
testb
popa
inc
jp
pop
orl
push
fcoml
fsub
fisttps
xor
imulb
push
adc
add
or
sub
sbb
out
mov
and
loopne
test
xlat
xchg
xchg
xor
add
inc
mov
pop
mov
mov
push
mov
or
lret
lock
sbb
pop
movsl
mov
add
inc
cwtl
sar
mov
out
dec
pop
sub
cwtl
inc
adc
xchg
xor
xchg
in
nop
push
aam
xchg
pusha
jnp
addr16
push
sub
mov
sbb
sub
cwtl
aaa
shlb
mov
mov
jl
popa
int
mov
sbb
cmp
and
aam
sbb
test
sbb
lret
xchg
mov
mull
ret
and
or
xorb
jbe
push
int3
push
sub
adc
ret
loop
xorb
add
and
push
imul
sub
mov
fs
ret
sbb
test
loopne
jae
dec
mov
add
inc
test
or
xor
xchg
in
push
je
int
lds
subl
xchg
js
icebp
push
xor
sbb
fwait
xchg
adc
push
push
dec
jmp
add
cmp
loope
xorl
fisubl
inc
or
les
out
test
cmp
push
pop
pop
lods
test
adc
mov
or
cmc
movsb
out
mov
jmp
or
mov
pop
mov
push
adc
into
cmp
pusha
ret
loope
jbe
adc
pop
ja
pop
int3
and
inc
push
mov
dec
adc
lods
push
inc
dec
sub
push
inc
loopne
scas
dec
nop
cwtl
insb
inc
inc
mov
jge
nop
mov
mov
xchg
or
cmp
in
ja,pn
cltd
dec
and
inc
add
and
sub
xor
sbb
ss
adc
sub
inc
pop
popa
xor
pop
std
push
mov
mov
jae
xor
xchg
aam
jecxz
pop
jno
fiadds
int
gs
cmp
bound
jae
push
nop
adc
ljmp
and
xchg
sub
or
cmp
lret
test
dec
push
xchg
xor
adc
divb
in
adc
xchg
shl
push
or
adc
punpcklbw
and
fisubrs
mov
shlb
mov
je
insb
jbe
lret
and
movsb
and
stc
rorb
mov
xchg
lods
out
xor
push
pop
movsb
xchg
add
pusha
sub
dec
fwait
scas
push
leave
loop
es
add
jno
xlat
sbb
in
fs
enter
nop
mov
in
rclb
mov
jb
ret
push
or
orl
fs
sbb
xor
push
push
ret
pop
sbbb
add
sbb
pusha
dec
lret
stos
movsl
pop
sbb
sbb
jno
mov
push
sub
int3
ljmp
addr16
loopne
fsubrl
or
lret
insb
jb
adc
jbe
fldcw
and
or
ss
jno
mov
xor
xchg
outsl
mov
mov
adcb
lret
es
sbb
xor
daa
ret
insl
rcrb
lds
cmc
rcrb
xor
aam
das
mov
jmp
mov
loop
lock
es
mov
and
xor
into
jae
and
test
mov
sub
sub
sub
mov
insl
test
mov
jnp
cmp
aas
into
and
popa
xor
movsb
mov
sub
popa
jb
sbb
test
sarb
jo
or
sub
into
aaa
xorl
fwait
ret
mov
fs
inc
jns
shll
outsl
fcomps
add
test
xchg
sbb
fcomps
push
bound
das
scas
push
popf
sbb
movsl
movsb
sub
mov
or
shlb
movsl
add
mov
das
mov
das
or
mov
mov
inc
pop
adc
mov
shll
fildll
pop
stos
andb
xchg
sub
add
mov
dec
jne
pop
aas
xor
sub
clc
push
or
jne
lods
or
testb
js
push
push
xchg
insl
inc
or
fwait
push
mov
or
jl
inc
into
outsw
mov
pop
or
dec
mov
pop
stc
xchg
inc
mov
sti
push
mov
and
mov
xor
cmp
sub
mov
orps
pop
or
cwtl
popf
lea
cmpsl
sbb
adc
push
cld
sub
mov
mov
icebp
xchg
cmp
stos
mov
sbb
mov
pusha
xchg
lock
push
ss
fnstcw
xchg
lcall
out
test
or
lret
mov
add
sbb
loope
and
mov
fildll
and
pop
int3
inc
jne
aaa
aaa
mull
scas
or
aaa
jmp
sub
inc
rcrb
pop
push
mov
repnz
iret
aam
pop
aaa
add
dec
xchg
lcall
sbb
mov
push
adc
flds
inc
ljmp
dec
xor
dec
bnd
fstps
bound
in
fsts
cmpsl
or
pop
loope
push
adc
jge
sbb
ret
pop
stos
xchg
mov
or
clc
daa
mov
xchg
and
lahf
hlt
andb
cld
sbb
popa
or
xchg
in
in
dec
ja
sub
xchg
xchg
cld
xor
mov
inc
enter
push
sub
pushf
mov
popa
dec
imulb
jne,pt
gs
mov
rorl
dec
lods
imull
pop
push
xchg
rolb
or
xor
xchg
xor
pop
pop
sub
std
insl
mov
push
imul
dec
xor
aam
out
mov
inc
mov
mov
and
xchg
cmpsb
nop
cli
lcall
jbe
or
cmp
and
fwait
arpl
and
xchg
push
call
leave
icebp
js
adc
imul
rorb
mov
fisttps
pop
jge
insb
and
pop
lret
pop
add
popa
das
dec
pop
int
fldenv
loope
ss
cmpl
outsb
xor
mov
push
sbb
popa
adc
jle
ret
in
sub
jae
cmpsb
test
inc
adc
pop
lret
push
adc
ss
sub
adc
and
sbb
daa
push
jnp
jbe
adc
imul
imul
out
xor
adc
add
adc
or
push
imul
imul
jno
sti
sarl
push
popa
inc
mov
arpl
fadd
adc
outsb
and
jecxz
mov
add
in
test
dec
icebp
pop
pop
add
sti
mov
add
or
fcom
mov
dec
adc
insb
mov
jge
out
insl
aaa
pop
xor
insb
mov
sbb
aas
and
jnp
pop
and
adc
mov
mov
push
adc
inc
lods
fnstenv
popa
outsl
pop
mov
sbb
mov
fldt
dec
lock
dec
add
fs
stos
or
cmovle
jno
ret
jne
and
pusha
adc
pop
adc
and
sbb
push
fsubrs
xor
out
cmc
mov
jno
int3
jecxz
cli
rcrl
aas
add
call
mov
inc
pop
ljmp
adc
cltd
aam
andb
or
pop
pop
pop
xchg
inc
dec
imul
adc
stos
js
inc
fwait
jae
pop
dec
pop
sbb
pop
mov
out
jae
and
pop
dec
push
imul
pop
jae
dec
inc
pop
inc
xor
sub
out
cmp
or
or
outsb
subb
cmc
cmp
jno
bound
jnp
adc
jg
dec
push
imul
jnp
fldt
inc
inc
adc
dec
xor
xchg
imul
push
pop
and
fdivl
outsl
imul
inc
xchg
add
xchg
pop
xchg
push
push
fcmovnbe
popf
xor
jno
cmpsb
loopne
sbb
das
inc
dec
rolb
mov
imul
movsb
mov
mov
int
mov
mov
mov
outsl
xor
out
mov
mov
mov
jnp
add
mov
cmpsb
imul
and
jmp
mov
inc
pop
add
xchg
dec
adc
lods
pop
cmp
repnz
loope
lods
mov
and
lods
je
dec
movsb
pop
test
int3
sub
js
loopne
dec
dec
movsb
dec
push
xor
jnp
lahf
add
iret
lods
cmp
jge
shrb
or
sbb
pop
mov
adc
pop
mov
sti
scas
inc
inc
imul
and
loope
add
cmp
cwtl
loope
add
add
mov
xor
add
pop
ds
ret
sbb
js
inc
clc
xchg
or
fisttps
js
and
xchg
popa
lret
fdivrl
notb
adc
pop
xchg
xchg
dec
and
push
xor
pusha
ds
adc
pop
mov
jno
scas
dec
lds
shl
add
jnp
decl
hlt
or
push
add
adc
test
dec
ss
out
sbb
pop
lret
pop
sub
sbb
int
movsb
ja
jecxz
ret
mov
outsl
mov
lret
fmul
sub
leave
enter
les
loop
jne
push
jae
nopl
xor
or
std
sbb
dec
in
push
mov
imul
cmp
adc
test
icebp
enter
test
push
adc
test
xchg
cmp
xor
pop
je
add
loope
lret
aad
bound
add
cs
xchg
cmp
pop
pop
sub
inc
mov
dec
imul
xchg
leave
jne
pop
mov
pop
xor
add
sarb
ret
fimuls
cld
ret
jnp
outsl
and
add
divl
mov
je
pop
and
push
jne
add
push
or
and
scas
daa
fadds
pusha
jbe
sub
or
jne
ficoml
enter
push
addr16
jno
cmp
lea
jae
insl
cmp
xchg
mov
xchg
scas
cmc
es
icebp
lods
adc
stos
or
sbbl
sbb
or
fwait
xchg
adc
adc
je
adc
sub
cmpsb
or
jb
shrl
add
ret
fwait
dec
test
push
bound
xor
scas
fs
popf
test
fsubr
adc
call
subb
pop
pop
and
leave
cwtl
cli
divl
fwait
add
mov
xchg
ficomps
pop
imul
push
data16
fs
push
insl
in
icebp
push
inc
mov
xchg
mov
xchg
outsb
pop
cld
sbb
stos
rcrl
cmp
mov
xor
inc
ret
dec
js
outsb
sbb
test
or
scas
jle
imul
or
mov
mov
das
in
shl
mov
imul
mov
test
mov
sbbb
push
xchg
rol
push
and
inc
inc
out
fs
push
insl
xor
cmpsl
dec
mov
and
int
int3
jae
sbb
pusha
mov
test
or
xor
lds
cli
cmpsl
jae
imul
pop
add
xchg
inc
mov
out
xchg
mov
xchg
mov
or
mov
xchg
xor
xor
popa
sbb
and
fdivs
cmp
out
rolb
or
mov
mov
dec
mov
leave
lret
or
fs
sbb
add
mov
pop
movsb
add
xchg
mov
and
xor
cwtl
out
loopne
xor
in
jo
xorb
push
inc
xchg
sbb
inc
aam
aad
and
test
sbb
sbb
arpl
arpl
cltd
ret
leave
xchg
cs
push
iret
jb
mov
push
mov
dec
outsl
cmpsb
in
sbb
sub
mov
lds
outsb
lds
push
out
imul
scas
outsb
mov
sbb
adc
insl
cltd
jecxz
adc
jbe
hlt
data16
imul
adc
cmp
test
cmp
dec
add
or
push
dec
sbb
jne
xchg
ret
adc
pop
or
jno
in
bound
pop
je
lods
add
lods
add
andl
js
mov
orl
fdivs
rorb
xchg
jne
mov
lods
sbb
jnp
repz
dec
or
pop
data16
les
inc
inc
push
cmp
dec
and
sbb
add
aas
out
dec
fldcw
xchg
xor
inc
sbb
shll
mov
outsb
cmp
add
sbb
nop
mov
xchg
xor
or
sbb
add
mov
mov
fsubs
xchg
add
imul
push
adc
or
push
mov
sub
sub
fsub
add
jnp
loopne
push
dec
iret
jp
inc
xor
shrl
xor
sbb
inc
dec
cli
push
sub
stos
sub
lret
push
fdivrp
out
fsubl
in
push
cmp
lcall
daa
mov
jae
int
pop
dec
add
jns
popf
push
pop
xor
and
orl
cwtl
js
mov
or
sbb
jnp
movsb
sub
inc
mov
inc
sbb
pop
inc
movsl
lea
push
into
lahf
pop
out
adc
shlb
scas
scas
jg
pop
sbb
sarl
inc
inc
inc
lea
or
sub
pop
jne
popw
in
inc
bound
test
sub
inc
add
or
out
sbb
inc
jno
jge
movsb
popa
inc
sub
mov
sarl
lock
xlat
ret
jne
jo
push
adc
add
dec
inc
loopne
mov
jae
and
pop
push
pop
scas
mov
dec
into
insl
adc
mov
sub
sub
adc
xchg
jnp
jae
adc
inc
je
popl
dec
test
lods
jae
outsb
pop
push
inc
pop
test
dec
xor
or
xor
filds
adc
fiadds
outsb
sub
lds
imul
adc
ja
sub
and
je
jle
inc
inc
movb
jae
xor
sbb
loopne
sub
inc
cmp
mov
mov
pop
sub
pop
loopne
push
je
arpl
fsubl
sub
mov
or
jnp
pop
outsw
and
and
pop
mov
mov
insb
dec
pop
mov
in
dec
dec
pop
test
addr16
xor
jb
jbe
sub
dec
aad
pop
pop
jle
adc
fs
bound
dec
dec
push
int3
inc
jnp
pusha
cmp
jecxz
jne
push
addr16
ds
sbb
push
test
mov
imul
pop
clc
dec
mov
rorb
pop
push
xor
dec
jg
mov
sub
dec
das
hlt
imul
sbb
pop
dec
and
and
ds
call
dec
inc
aaa
ret
adc
jnp
adc
sub
ret
dec
jge
ret
jmp
aas
aaa
inc
orb
ds
jge
jae
adc
sbb
jnp
leave
inc
ja
ret
sub
pop
popf
loopne
xlat
or
and
insl
mov
sub
xor
ss
jne
mov
lret
repz
push
add
in
hlt
ficoms
fisttps
js
xor
ret
popa
or
xor
dec
cmp
xlat
or
push
adc
jne
mov
arpl
movb
push
cmpl
test
test
fisubs
mov
inc
jns
add
inc
mov
ds
mull
insl
pusha
dec
dec
pop
ret
jnp
cli
xor
pop
sub
cmpsl
jp
ret
pop
push
pop
pop
pop
sub
ret
mov
sbbl
inc
mov
test
out
int
mov
imul
out
or
ficomps
mov
sub
pushf
jnp
fldl
cmp
pop
dec
mov
push
fsubrp
adc
pop
sbb
cli
lods
pop
cmp
sbb
or
sub
fmuls
dec
fadd
ds
into
pop
jg
inc
dec
xor
dec
jb
or
or
pop
dec
pop
inc
mov
lds
jp
mov
out
sbb
out
or
sub
jecxz
fiadds
mov
aaa
lods
out
std
fisubs
pop
pop
pop
cmpsb
push
in
inc
pop
cli
and
les
xchg
xor
xor
sbb
mulb
fs
icebp
jle
cmp
xchg
push
cmp
std
iret
call
xorl
fisubl
dec
sbb
pop
mov
cmpsl
add
rcr
jo
mov
push
jl
push
insb
adc
pop
lahf
mov
mov
cmp
push
pop
roll
add
lcall
lret
jbe,pn
inc
push
sub
push
dec
call
ja
bound
jecxz
dec
insl
mov
lods
push
and
and
xchg
pop
and
sbb
pop
jo
mov
leave
and
xor
dec
dec
adc
cwtl
pop
add
push
xchg
insb
test
xchg
fbstp
adc
adc
gs
shlb
mov
pop
cmp
mov
pop
dec
inc
aas
push
or
lret
mov
loop
mov
push
push
xchg
jnp
xchg
sub
test
cmp
popa
popa
adc
mov
push
loop
jnp
popa
jo
dec
lods
sub
gs
inc
mov
xchg
fimuls
xor
js
xor
and
scas
pop
filds
and
popa
shlb
sub
xchg
xor
adc
or
adc
imul
mov
mov
pop
push
push
add
push
test
xor
pop
cmp
or
mov
inc
repz
or
movsb
or
push
push
adc
push
or
jnp
negb
jno
mov
stc
movsl
add
and
fnstcw
sub
dec
sbb
adc
mov
gs
or
mov
sub
mov
enter
sti
or
or
adc
xchg
lds
or
mov
mov
sbb
dec
dec
js
cltd
add
jmp
mov
add
dec
sub
lahf
or
push
outsb
add
and
popa
insl
and
pop
mov
inc
sub
sub
ret
sti
stos
xchg
adc
das
pop
lods
mov
sbb
les
ret
mov
stos
shrb
add
add
add
adc
add
adc
mov
clc
lds
inc
mov
mov
fdivs
cmp
and
pushf
xor
rolb
xorb
inc
arpl
or
loopne
or
imul
ret
pop
sahf
xor
nop
xchg
mov
in
gs
push
add
sub
lods
pop
sub
inc
or
mov
xchg
rol
repnz
inc
int
mov
mov
xchg
icebp
pop
data16
enter
mov
ret
in
pop
cmp
mov
mov
sub
add
adc
mov
out
das
adc
xchg
dec
add
inc
enter
movsb
mov
pop
adc
inc
inc
sbb
pop
les
pop
pop
andb
add
ds
pop
push
scas
aam
aam
stc
jg
push
call
inc
movsw
insl
pop
sti
push
dec
and
rorl
mov
ret
and
insl
pop
sbb
mov
push
pop
sub
cli
jge
xor
ret
sbb
xor
rolb
and
push
inc
dec
je
pop
cmp
xor
pop
push
repnz
jmp
xlat
adc
add
inc
lock
popa
scas
mov
xchg
aam
aaa
jmp
aad
or
and
cltd
imul
inc
mov
mov
es
loope
pop
pushf
sbb
mov
dec
dec
add
pop
dec
mov
pop
lahf
mov
jp
jo
sti
and
xchg
in
inc
jae
sbb
sbb
lods
push
adc
inc
pop
sbb
mov
add
mov
push
xchg
sub
test
mov
cmp
and
fmull
nop
push
dec
pushf
int
jle
pop
inc
gs
push
xor
mov
push
sbb
xchg
mov
jae
mov
out
and
cmpsb
sub
pop
nop
xchg
mov
push
adc
jnp
pop
inc
out
jne
xor
xor
inc
or
dec
pop
inc
mov
inc
mov
mov
mov
addr16
pop
dec
sbb
pop
push
inc
push
inc
in
sbb
addl
fistps
inc
pop
dec
shrl
leave
push
or
int
js
leave
pop
jl
lods
cmp
dec
ret
outsl
flds
jne
or
das
xor
jmp
aad
and
push
daa
int3
or
xor
bound
outsb
into
add
popl
push
out
push
nop
mov
shll
mov
xchg
inc
push
or
sub
push
and
add
adcl
push
xchg
or
pop
mov
sub
xor
xchg
lods
movsb
movsl
push
movsb
adc
sbb
and
sub
push
push
jp
mov
push
testb
popa
or
pusha
xor
dec
ret
inc
mov
les
mov
jmp
leave
xor
mov
lret
inc
cmpsl
push
mov
ss
xchg
sub
cltd
add
xchg
mov
push
xchg
out
and
and
sub
adc
mov
clc
add
outsb
das
fstps
cvtdq2ps
push
cmp
orb
cs
fistl
push
push
jo
jb
repnz
sub
jb
jmp
fwait
ljmp
xchg
xchg
outsl
mov
ss
pop
lods
cmp
add
adc
xchg
push
flds
unpcklps
push
loopne
aas
jmp
das
test
enter
lods
adc
lahf
repnz
push
cmp
ds
mov
fstl
fchs
sar
fcomp
xchg
int
sti
add
pop
pop
pop
movsb
and
sub
pminub
cmp
and
shufps
push
and
mov
std
push
pop
and
and
mul
ss
pop
fs
aam
pop
jbe
popa
inc
adc
jns
fstpt
fld
into
or
pop
dec
jle
mov
pop
fcoms
xchg
dec
iret
xchg
repnz
sahf
pop
ja
sbb
lahf
jp
mov
cmpsb
adc
xchg
fisttpl
pop
fbld
stos
repnz
pop
mov
pop
or
stos
adc
jnp
pop
pop
pop
scas
xchg
lods
scas
adc
pop
in
gs
cmp
mov
pop
mov
das
stc
add
mov
mov
or
daa
push
hlt
cmp
fnstenv
pop
sub
adc
enter
pusha
ljmp
mov
add
xor
bts
pop
mov
mov
sysret
adc
add
mov
lcall
sub
sbb
in
dec
outsb
sbb
ret
pop
daa
and
sub
in
or
mov
popa
add
pop
or
sbb
imul
jbe
dec
mov
outsl
inc
jo
sysenter
fnsave
dec
or
add
in
fwait
gs
add
add
shrl
fcoms
inc
pop
mov
sub
add
pop
or
add
add
insb
jae
jb
outsb
inc
arpl
popf
mov
or
inc
js
lods
mov
scas
sub
das
mov
or
je
pop
sti
fistl
dec
gs
push
imul
das
pop
inc
push
cmovge
jne
jno
insb
sti
dec
popa
outsb
fs
jb
outsb
je
cmp
enter
outsl
insl
insl
add
outsb
and
imul
or
inc
adc
or
pop
jecxz
outsb
pop
mov
sub
mov
fldz
shrb
outsb
push
popf
in
mov
fidivs
push
outsb
insb
dec
outsl
ja
stos
rcr
int
sub
data16
insb
popa
scas
or
ss
xchg
fs
jae
lods
insl
fcmovnb
mov
outsl
adc
jne
and
outsl
test
adc
mov
outsw
ds
out
test
dec
arpl
inc
sub
inc
gs
mov
mov
sub
jp
fsubrl
and
stos
mov
add
add
pop
inc
sub
loopne
popl
add
mov
fdivrl
adc
or
add
stc
shlw
or
int
sbbl
stos
imull
add
and
push
cmp
add
inc
xchg
mov
inc
call
ja
repz
or
inc
push
inc
sbb
movl
rolb
or
dec
sahf
jl
add
push
jbe
outsb
pop
popa
add
shlb
inc
out
in
push
cmp
idiv
loopne
movsl
gs
lcall
mov
mov
jge
in
outsl
add
add
add
add
cmp
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
