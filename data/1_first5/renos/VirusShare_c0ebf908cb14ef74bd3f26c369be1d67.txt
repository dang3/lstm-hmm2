jmp
mov
jmp
mov
jmp
mov
xor
fs
data16
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
cmp
jbe
mov
mov
dec
mov
mov
dec
dec
dec
xchg
xchg
lea
xchg
mov
mov
mov
mov
mov
movl
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
movl
mov
push
call
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
mov
pop
ret
lea
push
mov
add
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
movl
movl
mov
push
mov
push
call
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
call
call
movl
movl
mov
push
mov
push
call
call
mov
pop
ret
push
mov
add
mov
mov
mov
cmp
jnp
xchg
mov
xchg
mov
inc
inc
lea
jmp
mov
mov
lea
inc
mov
mov
lea
dec
inc
inc
mov
cmp
je
call
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
xor
divl
test
jne
xchg
cmp
jle
xchg
dec
dec
lea
mov
mov
xchg
mov
lea
mov
mov
lea
xchg
inc
dec
jne
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
mov
dec
dec
dec
xchg
xchg
lea
xchg
mov
mov
mov
mov
mov
mov
cmp
je
jmp
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
xchg
mov
dec
je
mov
lea
mov
mov
inc
inc
mov
cmp
je
jmp
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
mov
sub
mov
lea
xchg
cmp
jl
mov
inc
inc
mov
dec
lea
mov
xchg
mov
mov
xchg
mov
lea
mov
inc
push
mov
mov
xor
call
mov
xchg
cmp
jle
xchg
dec
dec
lea
mov
mov
xchg
mov
lea
mov
mov
lea
xchg
inc
dec
jne
mov
mov
mov
mov
call
cmp
jbe
mov
mov
dec
mov
mov
dec
dec
dec
xchg
xchg
lea
xchg
mov
mov
mov
mov
mov
push
mov
mov
xor
call
mov
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
cmp
jnp
xchg
mov
xchg
mov
inc
inc
lea
jmp
mov
mov
lea
inc
mov
mov
lea
dec
inc
inc
lea
mov
push
mov
jmp
lea
xchg
cmp
jl
mov
inc
inc
mov
dec
lea
mov
xchg
mov
mov
xchg
mov
lea
mov
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
mov
xchg
lea
lea
mov
xchg
mov
dec
je
mov
lea
mov
mov
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
sub
add
add
mov
mov
cmp
jnp
xchg
mov
xchg
mov
inc
inc
lea
jmp
mov
mov
lea
inc
mov
mov
lea
dec
inc
inc
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
cmp
jbe
mov
mov
dec
mov
mov
dec
dec
dec
xchg
xchg
lea
xchg
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
xchg
cmp
jle
xchg
dec
dec
lea
mov
mov
xchg
mov
lea
mov
mov
lea
xchg
inc
dec
jne
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
xchg
cmp
jl
mov
inc
inc
mov
dec
lea
mov
xchg
mov
mov
xchg
mov
lea
mov
inc
mov
mov
movl
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
out
mov
pop
in
mov
mov
mov
xchg
in
mov
scas
in
mov
test
mov
ret
int3
dec
in
mov
inc
in
mov
pusha
in
mov
imul
and
mov
inc
xor
mov
outsb
mov
inc
xor
add
outsb
mov
inc
xor
out
xchg
outsb
mov
inc
xor
in
imul
xor
shrl
outsb
mov
inc
xor
leave
imul
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
xchg
lea
lea
mov
xchg
mov
dec
je
mov
lea
mov
mov
inc
inc
movl
push
call
mov
xchg
cmp
jle
xchg
dec
dec
lea
mov
mov
xchg
mov
lea
mov
mov
lea
xchg
inc
dec
jne
mov
mov
mov
call
mov
lea
xchg
cmp
jl
mov
inc
inc
mov
dec
lea
mov
xchg
mov
mov
xchg
mov
lea
mov
inc
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
mov
mov
call
mov
cmpl
je
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
mov
cmp
je
mov
subb
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
xorb
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
incl
mov
cmp
jne
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
mov
call
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
mov
push
mov
push
call
cmpl
je
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
cmp
jnp
xchg
mov
xchg
mov
inc
inc
lea
jmp
mov
mov
lea
inc
mov
mov
lea
dec
inc
inc
push
mov
push
call
mov
pop
ret
add
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
mov
cmp
jnp
xchg
mov
xchg
mov
inc
inc
lea
jmp
mov
mov
lea
inc
mov
mov
lea
dec
inc
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
xchg
cmp
jle
xchg
dec
dec
lea
mov
mov
xchg
mov
lea
mov
mov
lea
xchg
inc
dec
jne
mov
movb
cmp
jl
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
lea
xchg
cmp
jl
mov
inc
inc
mov
dec
lea
mov
xchg
mov
mov
xchg
mov
lea
mov
inc
call
test
jne
mov
jmp
movw
cmp
jbe
mov
mov
dec
mov
mov
dec
dec
dec
xchg
xchg
lea
xchg
mov
mov
mov
mov
mov
call
lea
mov
pop
ret
push
mov
add
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
movl
mov
push
call
call
movl
mov
push
call
call
movl
mov
push
call
mov
cmp
jnp
xchg
mov
xchg
mov
inc
inc
lea
jmp
mov
mov
lea
inc
mov
mov
lea
dec
inc
inc
movl
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
movl
movl
mov
push
mov
push
call
call
cmp
jbe
mov
mov
dec
mov
mov
dec
dec
dec
xchg
xchg
lea
xchg
mov
mov
mov
mov
mov
movl
movl
mov
push
mov
push
call
call
call
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
xchg
cmp
jle
xchg
dec
dec
lea
mov
mov
xchg
mov
lea
mov
mov
lea
xchg
inc
dec
jne
mov
push
call
mov
call
lea
xchg
cmp
jl
mov
inc
inc
mov
dec
lea
mov
xchg
mov
mov
xchg
mov
lea
mov
inc
mov
pop
ret
popa
jo
ja
jp
arpl
and
push
mov
add
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
movl
mov
push
call
movl
mov
push
call
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
movl
movl
mov
push
mov
push
call
movl
mov
push
call
call
cmp
jg
lea
mov
lea
xchg
xchg
dec
inc
inc
xchg
lea
mov
mov
mov
inc
inc
lea
xchg
inc
dec
dec
movl
mov
push
call
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
lea
subl
jne
mov
cmp
jl
mov
dec
inc
inc
xchg
inc
inc
inc
lea
xchg
jmp
lea
mov
mov
lea
mov
mov
dec
inc
mov
inc
mov
mov
mov
lea
call
mov
cmp
jnp
mov
mov
mov
xchg
mov
mov
lea
xchg
xchg
mov
xchg
lea
lea
dec
je
dec
ret
mov
ret
lea
lods
call
add
cltd
hlt
lret
xchg
add
xor
leave
add
inc
inc
fs
mov
push
sub
add
adc
test
add
adc
ret
and
loope
pop
add
mov
add
out
push
push
add
xchg
ja
addl
xor
jp
insl
pop
outsb
scas
popf
stc
mov
dec
clc
stos
push
xchg
cwtl
add
jo
js
add
pop
scas
add
mov
pop
lods
add
sub
add
xor
jp
aas
shlb
add
data16
outsb
push
mov
and
or
fcmovnb
add
xchg
inc
cmpsb
pusha
add
lret
sub
cli
add
add
add
fcmovnbe
mov
add
jle
cmc
xchg
push
inc
pop
mov
cmc
imul
clc
loope
xchg
out
flds
jne
xor
add
pushf
push
add
loop
inc
add
dec
push
add
add
mov
adc
loopne
mov
jnp
adc
pusha
int
or
gs
loope
jmp
jbe
xor
mov
jne
rcll
fistl
add
orb
addr16
add
jg
add
add
cs
test
add
inc
jbe
add
xchg
iret
or
jnp
neg
mov
cmc
cmp
jae
fs
inc
adc
xor
sub
aaa
push
and
push
push
add
cld
pop
out
add
push
mov
add
sbb
lret
add
adc
aaa
popf
add
add
mov
daa
mov
add
push
pop
lcall
xchg
pop
or
std
add
adc
mov
add
aad
add
aas
xor
add
movsb
jnp
xchg
add
add
add
and
lds
add
ret
mulb
xor
add
push
add
mov
enter
add
add
mov
push
cmp
insl
add
add
popf
aas
in
add
add
add
call
xor
add
adc
outsb
add
sbb
add
sbb
adc
mov
push
loopne
dec
add
clc
add
cmp
bound
pop
push
shll
lock
cmp
cli
add
adc
test
jmp
stos
mov
iret
in
or
nop
gs
add
add
arpl
aam
aas
push
fsubrs
pop
push
adc
add
add
or
mov
leave
or
add
inc
out
lods
and
adc
jecxz
mov
jg
xchg
or
add
mov
loopne
pusha
mov
ficoml
xchg
mov
fs
icebp
pop
nop
add
pusha
mov
jl
xlat
mov
stc
add
mov
push
pop
pop
fnsave
incb
fiaddl
xchg
xchg
ret
add
add
daa
into
ret
inc
pop
xor
testl
pusha
add
lret
es
filds
addr16
add
xchg
cld
xor
add
push
add
jl
or
mov
xchg
xchg
popa
je
stos
xchg
cmp
xor
add
mov
shrl
add
fldt
cmpb
mov
rcrb
movsb
je
pop
dec
dec
pop
add
push
add
push
adc
int3
movsl
or
cwtl
xlat
in
aam
pop
add
add
packssdw
lcall
sbb
add
add
add
out
mov
and
add
movsb
jnp
add
add
add
inc
mov
sub
inc
iret
cmp
imul
js
shl
add
push
xchg
ret
subb
cmp
rolb
add
sti
pop
xor
imul
sbb
mov
mov
cmp
dec
push
fcoml
test
sub
addr16
push
pop
insl
sub
sub
cmpsb
int
xchg
mov
mov
ss
and
dec
mov
sbb
movsb
cmp
loopne
lret
or
shrl
sahf
sbb
fstpt
pusha
shrb
or
xor
sub
or
inc
stc
push
insl
es
adc
jmp
cmpsb
lods
jnp
pop
mov
mov
add
sbb
ss
loop
or
or
sahf
fsubs
pop
cmp
adc
pop
pop
ljmp
imul
pop
data16
sbb
fstpt
adc
rorl
in
mov
mov
mov
mov
nop
inc
imul
inc
or
sar
fisubrs
div
add
xchg
aam
shlb
call
push
sbb
adc
pushf
loope
and
or
add
sub
inc
insl
sarb
mov
fdivl
mov
dec
shl
test
jecxz
out
cli
lods
mov
mov
mov
mov
mov
imul
cld
push
fisttpl
fstpl
ret
fisubrl
imulb
mov
cs
mov
test
sbb
notb
mov
cmpsl
jmp
pop
xlat
icebp
test
cld
mov
sbb
sbb
inc
add
xchg
dec
push
rcrb
or
mov
ret
dec
push
inc
mov
dec
cld
clc
leave
fisttps
inc
imul
pslld
popa
dec
jle
lods
imul
mov
sbb
adcb
ja
xchg
xchg
cltd
pop
imul
dec
add
and
jns
test
mov
xchg
hlt
jle
xchg
cmp
popa
stos
movsl
push
mov
add
jbe
call
xor
push
aad
dec
lods
dec
mov
sbb
xchg
mov
xchg
dec
dec
out
sbb
cmp
or
inc
and
xor
push
jne
mov
mov
sub
jns
pop
bound
jns
andnps
sub
jnp
clc
aam
mov
or
out
minps
addr16
ficompl
rcll
imul
dec
jbe
fucom
push
stos
pusha
loope
arpl
jns
dec
xchg
out
pop
xchg
jmp
pop
dec
cmp
out
add
fidivrl
jmp
dec
stos
mov
jg
xor
and
data16
jle
xchg
push
dec
add
cmp
jge
out
ret
mov
inc
in
mov
push
dec
push
mov
aaa
or
jbe
sub
cmp
fisubrl
sahf
xchg
pop
cli
sub
imul
aas
lds
ljmp
jno
imul
ret
mov
aad
inc
jl
dec
jge
mov
add
mov
dec
out
add
mov
fcmovnb
lods
pop
loop
xchg
cmp
cwtl
lcall
xor
push
movsb
in
das
xor
in
lock
jbe
mov
xor
sub
lret
push
cmp
jno
insl
push
jl
xchg
sbb
in
push
js
mov
lahf
mov
inc
outsl
test
jo
push
inc
adc
cmpsb
fs
pop
imul
add
fwait
mov
adc
mov
pop
sbb
adc
lret
and
mov
xchg
cmpb
pop
sbb
cld
lods
add
jno
xor
pop
xchg
loop
sub
xchg
js
roll
ja
mov
stos
dec
sub
aad
test
mov
jg
and
je
mov
divl
stos
adc
sbb
fs
fcoms
rcrb
lcall
mov
loope
push
lahf
sbbb
mov
push
outsl
jmp
scas
js
lds
fs
cltd
adc
shll
lods
bound
mov
mov
js
jmp
cmp
andl
push
dec
into
out
gs
js
loopne
or
inc
adc
jbe
imul
jo
movsw
cld
das
sbb
push
cmp
sub
test
in
sbb
sti
cmp
mov
cmpsb
jo
and
into
dec
sub
sbb
fldenv
and
xchg
xchg
stos
inc
lea
lret
mov
sarb
dec
pop
movl
out
clc
pop
mov
cmp
xlat
mov
inc
stos
sub
aas
push
ds
jb
dec
loope
dec
mov
fs
xchg
jecxz
adc
std
int3
lahf
std
pop
push
or
mov
xchg
inc
mov
data16
or
jge
fstpt
add
movsb
das
mov
ds
lock
and
sbbl
and
rcll
push
fldt
and
cmpsl
call
sti
ret
filds
cld
jmp
cmp
and
cmc
out
pop
mov
shrb
mov
aam
sub
fimull
test
fnstsw
clc
add
out
xchg
mov
pop
cmp
lods
pop
add
out
mov
sar
mov
lahf
add
inc
std
cmp
int3
imul
call
lea
test
aam
xchg
ss
sbb
int3
or
call
push
pop
stos
xchg
addr16
out
inc
inc
in
add
xchg
pop
js
sbb
popa
xor
fs
xchg
pop
stos
mov
push
pop
mov
je
bnd
mov
dec
fldcw
inc
nop
xor
or
aaa
cs
and
bound
mov
lcall
inc
mov
xsha1
cmpsb
dec
jns
push
stc
in
fcomip
xchg
inc
fimuls
enter
dec
movsb
or
xchg
inc
addr16
xor
jp
nop
cmc
mov
mov
mov
jp
xor
in
or
fistps
loop
jmp
sub
pop
sbbl
imul
sub
stos
incl
and
fisubrl
int
xchg
mov
jle
and
push
xchg
pusha
mov
nop
jmp
mov
pop
inc
test
jae
js
push
jns
lock
icebp
pop
ja
nop
and
fisubl
fistpll
sbb
xor
jo
lds
sbb
jge
mov
pushf
mov
les
leave
test
aaa
hlt
or
mov
inc
jg
inc
jge
sbb
sbb
xchg
aaa
jp
mov
divb
add
sub
insl
ficomps
out
push
jo
sub
scas
jo
mov
adc
pop
cmp
jl
js
rclb
mov
in
outsl
xchg
pop
enter
daa
call
push
jno,pt
fldenv
jl
xlat
insl
dec
jbe
aam
repnz
movsl
push
mov
and
rcrl
popf
shrl
cmp
cmovae
std
bound
hlt
out
js
inc
pop
pop
fiaddl
mov
mov
fwait
mov
cmp
loope
adc
cmpsb
pop
aad
adc
iret
orb
sbb
fwait
jmp
xor
jp
dec
daa
cmp
sub
lret
or
push
adc
push
fsubrl
sub
pushf
test
adc
jg
test
jb
add
lods
mov
nop
jg
cmp
repnz
and
dec
cmp
push
mov
lret
sub
mov
es
sahf
cmpsb
or
cli
xor
jnp
loop
jmp
dec
fs
and
outsl
cld
ss
bound
xchg
cli
stos
sti
cltd
xor
mov
stos
clc
cltd
or
test
inc
loopne
pop
fcompl
sbb
adc
pop
adc
xor
out
dec
data16
icebp
sbb
push
dec
test
sub
lret
xchg
in
sti
ljmp
aad
xor
nop
std
enter
leave
adc
ficoml
hlt
adc
mov
pop
inc
lea
mulb
dec
ljmp
or
aaa
es
out
add
out
jl
inc
pop
mov
mov
hlt
add
dec
rcl
je
and
add
std
push
shl
cwtl
mov
in
or
popa
popf
pushf
dec
mov
call
mov
cmp
lock
xchg
mov
lret
and
dec
adc
icebp
add
sbb
or
mov
cmpsl
out
dec
mov
fcompl
cld
adc
mov
sub
aas
and
nop
std
aam
rclb
rolb
frstor
sub
pushf
aam
mov
shll
sbb
push
clc
aas
mov
xchg
stc
fldcw
popa
jl
push
lods
inc
push
sbb
lret
jmp
inc
push
xchg
cli
stc
cmove
into
cltd
leave
cmpsl
mov
mov
push
push
stos
fisubs
dec
enter
in
mov
sbb
pusha
inc
pop
inc
jae
stos
cmpl
cmpsl
mov
inc
add
loop
jecxz
mov
mov
pop
xor
and
mov
das
dec
xchg
ja
or
int3
ficoms
daa
push
mov
pop
add
fwait
push
mov
push
js
xchg
jne
jbe
mov
push
mov
bound
xor
mov
mov
adc
pop
or
push
out
lds
mov
mov
jmp
and
adc
outsb
sbb
pop
dec
xchg
xchg
loope
jmp
repz
xor
imul
xor
imul
and
icebp
insb
cmp
jnp
xchg
xchg
mov
push
fistpl
adc
arpl
cmp
cmp
mov
sbb
popa
jae
scas
es
cmp
inc
or
insb
idivb
xchg
fs
sbb
sbb
dec
adc
pop
aam
mov
xchg
rclb
xor
pop
push
xor
hlt
push
stc
dec
arpl
mov
inc
xorb
fiaddl
sbb
jge
aaa
cmp
or
dec
add
insb
dec
pop
inc
lods
push
fiadds
jo
int3
sbb
jo
roll
scas
dec
aas
inc
and
sbb
add
jmp
mov
jbe
out
in
push
fidivrs
out
jnp
mov
mov
jl
jmp
dec
in
inc
push
aad
cmp
and
outsl
sti
lahf
fistpll
outsb
push
push
or
push
stos
mov
xor
fwait
cmpsb
push
jl
mov
stos
js
lds
push
add
loope
jmp
cmp
je
pop
scas
pop
adc
andl
into
sbb
push
add
pop
jo
sbb
mov
or
inc
int
jne
sub
cld
loope
iret
cwtl
lods
lcall
lock
jne
sub
or
test
jecxz
jg
xor
mov
add
mov
sub
sub
push
and
fmuls
pop
testl
jp
shll
mov
pushf
sahf
dec
sbb
cmc
pop
in
xor
imul
jmp
jle
xor
pop
adc
loopne
lods
xor
dec
mov
or
inc
xor
inc
mov
and
cli
into
lods
popf
daa
gs
sahf
loopne
ret
inc
and
jg
sbb
cmp
pop
xchg
stos
jnp
sbb
mov
push
xlat
or
mull
icebp
test
cltd
or
incb
and
nop
fcoms
push
inc
inc
into
mov
incl
mov
sbb
stos
jbe
sub
into
sbb
pop
sub
adc
jmp
in
cs
iret
mov
inc
loopne
repz
xchg
lret
inc
jb
pop
and
rclb
scas
aaa
test
imul
cwtl
pop
jnp
mov
int3
arpl
clc
xchg
jecxz
cmpsl
sti
mov
xlat
ret
xchg
inc
cmp
sti
insl
out
das
aas
js
mov
sbbl
negb
fisubrs
mov
pop
cmpsl
out
xchg
mov
mov
lcall
cmc
push
mov
cmp
fimuls
mov
out
pop
sbb
roll
aam
test
jl
sub
xor
lret
clc
jp
stc
xchg
cmp
mov
popa
xchg
dec
or
or
mov
lock
push
outsl
dec
bt
jnp
add
test
cmpsl
insl
mov
rol
push
outsb
movsb
nop
dec
das
pusha
and
xchg
sarl
cmp
sbbl
stos
jb
aaa
out
or
push
add
pop
sar
push
jp
ss
stos
or
insl
inc
xor
mov
mov
and
cmp
pop
ljmp
dec
mov
xchg
jecxz
add
leave
push
sbb
inc
in
test
xor
int
xor
mov
mov
dec
dec
jne
movsb
aad
or
mov
addr16
outsb
mov
mov
mov
cli
mov
and
pop
adc
jg
jae
mov
iret
jmp
das
jmp
mov
mov
out
inc
lcall
xor
dec
stos
in
repnz
fisubrl
dec
jnp
aaa
add
cmp
and
adc
out
iret
lcall
pop
scas
pop
fadds
add
daa
rclb
inc
or
daa
push
mov
jle
or
lcall
loop
scas
add
shr
cmpb
push
leave
jae
add
lahf
arpl
arpl
or
test
sbb
orl
aaa
clc
sub
or
fistps
les
stos
pop
outsl
or
jecxz
test
xchg
stos
pushl
lea
scas
xor
cmp
test
mov
mov
jg
mov
cmp
sti
pop
daa
out
push
cmp
fs
jno
pop
pop
jl
shr
dec
push
pushl
mov
fisubs
jns
pop
lahf
inc
notb
jmp
inc
push
sarl
add
ficomps
pusha
pop
pop
and
loope
adc
loop
std
dec
clc
xorb
xchg
pop
mov
pop
imul
pop
jnp
pushf
ret
bound
lret
shll
jmp
stc
iret
mov
int
inc
sub
ljmp
ret
fadd
pop
xchg
sub
data16
cmp
add
sub
in
jg
mov
add
push
cmp
pop
push
jg
es
cmp
mov
sub
cmp
rorl
insb
mov
rcrl
fwait
orb
and
jmp
pusha
scas
std
outsl
xchg
loop
clc
scas
stc
ljmp
adc
dec
fldcw
jge
and
lds
popf
cli
adc
xor
cmp
pop
fisttpll
nop
mov
mov
loopne
cmp
pop
data16
adc
mov
adc
xor
add
fsubl
imul
xlat
inc
stos
test
lahf
cmpsb
loop
add
in
pop
out
sti
dec
adc
sub
leave
nop
mov
scas
dec
dec
out
gs
pop
mul
fxch
ss
les
dec
shl
ds
lea
call
dec
lret
mov
adc
add
jmp
push
xchg
cs
fiaddl
ds
sti
loope
aas
xor
xchg
dec
scas
push
and
push
jecxz
das
lods
movb
pop
std
push
call
loopne
xlat
cs
mov
mov
orl
add
xor
push
into
lock
xor
mov
cmp
popa
and
sbb
dec
mulb
fisttpll
sbb
sub
jle
into
icebp
mov
xor
push
xchg
lret
or
cli
mov
push
mov
push
insb
shlb
jns
aam
call
lret
ds
icebp
xlat
add
mov
ret
jl
ljmp
lahf
lods
pop
jmp
fnstcw
aaa
pop
loopne
dec
mov
lar
mov
jle
jae
aaa
je
test
ret
xor
xor
ljmp
mov
xchg
mov
in
adc
stos
popa
xor
out
insl
xor
mov
stc
and
xor
addr16
xor
pop
jbe
popa
pusha
push
xchg
mov
pop
movsl
sbb
mov
dec
mov
push
inc
push
imull
or
adc
push
mov
enter
and
cmc
sbb
enter
ljmp
xor
jns
xchg
icebp
and
sti
movsb
fwait
addr16
push
daa
jp
ss
loopne
xor
jno
dec
add
mov
xchg
xor
pop
test
cmc
mov
xchg
cmp
jmp
mov
mov
popf
fisttpl
mov
out
add
nop
rolb
insb
adc
pop
jnp
mov
int
imul
pop
iret
stc
cmp
ret
pop
pop
in
jg
adc
push
push
ret
or
out
inc
or
test
xchg
arpl
inc
sbb
cld
xchg
imul
hlt
lds
xchg
mov
mov
ja
hlt
ljmp
inc
mov
jge
cmp
sbb
aaa
mov
clc
or
and
add
fmul
xchg
pop
sahf
sub
fiadds
sahf
aas
jo
pop
mov
and
fildl
xchg
pop
dec
movsb
sbb
push
push
sub
mov
ret
in
and
add
sbb
daa
in
dec
cmp
jge
jno
clc
push
jl
nop
outsb
dec
ret
in
push
fwait
dec
movsw
push
jmp
lahf
sbb
frstor
push
pushf
daa
je
dec
cmp
das
inc
pop
add
jle
pop
xchg
notl
loope
mov
dec
inc
adc
mov
jnp
shlb
outsl
push
xor
mov
rorl
add
xchg
xor
es
leave
hlt
out
and
rcrb
sbb
fsubrl
icebp
sub
dec
outsb
lahf
adc
outsl
arpl
dec
dec
xchg
push
push
shlb
imul
scas
fadds
mov
and
mov
mov
pop
sahf
shufps
lcall
gs
je
adc
call
fs
jg
pop
push
dec
xor
push
lods
xor
mov
enter
aam
inc
scas
dec
xor
cmp
push
dec
or
adc
or
int3
ss
enter
add
adc
fsts
add
lret
outsl
cwtl
or
add
std
xlat
xchg
pop
sub
scas
cmp
sbb
imul
mov
cmc
nop
mov
dec
test
push
flds
push
les
push
ret
xchg
mov
sbb
call
int3
add
pop
xchg
cmp
adc
sti
push
pushf
cmp
shrb
sbb
inc
repz
inc
push
icebp
jb
shrl
jb
mov
dec
xchg
je
loopne
jecxz
imul
or
scas
std
sti
dec
add
mov
adc
movb
leave
pop
mov
mov
jge
lock
mov
std
gs
xchg
push
movsb
mov
pop
adcl
iret
mov
mov
in
dec
pop
push
and
mov
xor
popa
mov
cld
xchg
jge
lret
jp
ret
mov
fsubs
sub
push
sub
nop
aam
jnp
ret
push
xchg
sbb
jne
lock
xchg
mov
dec
mov
popa
shrl
lods
adcb
addl
xor
call
and
in
xchg
add
push
or
jo
push
hlt
mov
std
ret
pop
and
mov
mov
jle
push
push
mov
add
std
out
lcall
add
or
fnstenv
push
xchg
mov
sub
repnz
pusha
jns
ja
xchg
mov
inc
in
xor
fcoms
fwait
loope
sbb
popa
sub
push
xchg
mov
mov
out
aam
sti
bound
or
mov
in
subl
sub
imulb
and
mov
inc
mov
sub
inc
fdivrs
ss
rorl
lret
lea
mov
fists
sbb
jp
pop
xchg
push
int
sbb
pop
out
push
xor
pop
int3
xchg
push
test
lret
push
jo
cmpsl
sahf
fisubrs
out
jnp
iret
and
and
adc
jo
iret
pop
aam
ret
cmp
ror
sbb
push
push
test
into
or
fnstsw
mov
xchg
mov
xchg
mov
scas
leave
sub
shlb
in
mov
cmp
leave
popa
jg
hlt
xor
orl
iret
push
cwtl
sbb
cltd
js
jbe
stc
or
sbb
sbb
jb
stc
pop
int
int3
fisubrs
out
xor
pop
test
pusha
sbb
cmp
and
movsb
xor
data16
aaa
pop
in
or
cmp
in
pop
cmp
xor
jl
and
dec
xor
in
movsl
outsl
ss
and
out
push
jecxz
addr16
addr16
inc
fisubs
dec
pop
sub
pop
js
mov
je
mov
loope
pop
xchg
sub
pop
outsb
cmp
pusha
ds
shrl
and
inc
rclb
hlt
inc
nop
sti
out
lcall
add
stos
push
xor
push
push
int
mov
sub
ss
push
fcompl
fnstcw
outsb
add
cmp
push
jg
fists
test
out
fbstp
lret
insl
mov
sub
test
fdivrs
or
push
nop
clc
shll
pop
mov
jno
stc
ljmp
mov
xchg
xor
push
outsl
inc
push
cmp
movsb
xlat
pop
stc
pop
mov
rclb
stos
push
bnd
mov
jae
sbb
ret
call
xor
lret
push
adc
into
push
xor
gs
fistl
mov
in
pop
movsb
push
pop
adc
imulb
adc
andb
pop
mov
mov
lea
cmp
sbb
sub
jae
in
xor
sti
sti
cmpsb
outsl
inc
outsb
jb
aad
push
lea
or
test
fnstenv
inc
rol
xlat
mov
xchg
mov
sub
ds
dec
mov
rcll
and
jecxz
jmp
mov
jle
inc
jp
fs
xor
jb
dec
adc
pusha
xor
fistpl
jecxz
jmp
or
cmp
cwtl
mov
push
cmpb
mov
outsb
aad
fs
stc
pop
jnp
xorl
fsubl
mov
cmpsb
adc
and
cmp
rcrl
mov
mulb
mov
out
adc
hlt
mov
cmp
xor
shlb
jmp
inc
popa
and
cld
sbb
pop
dec
xchg
xor
sub
aam
bound
movsl
mov
es
scas
fnstsw
divb
dec
dec
xchg
cmc
cs
ljmp
cmp
in
adc
mov
lds
push
add
les
movsb
inc
push
cltd
movsl
shlb
mov
movsl
clc
push
mov
xor
dec
xlat
test
daa
jno
mov
dec
rcrl
dec
test
xor
xor
sbb
pushl
dec
sub
das
lods
inc
or
test
fadds
insb
push
hlt
pop
sbb
cmpsl
dec
cwtl
cmpsb
xchg
lods
or
jo
fwait
adc
lods
push
add
push
jne
test
add
mov
jae
out
iret
mov
xor
insb
pusha
aad
rorb
add
pop
sahf
fwait
sub
icebp
inc
sub
cmpsb
popf
jp
sub
mov
pop
mov
xchg
jle
xchg
call
in
fbstp
pusha
mov
jmp
pop
dec
mov
imul
ficompl
pop
jne
push
gs
sub
mov
fsubl
jle
andl
xlat
test
ret
adc
push
ljmp
inc
sub
jne
fisubs
xchg
inc
or
ficompl
dec
sbbl
sbb
scas
sub
adc
mov
int
mov
arpl
or
sub
lcall
mov
mov
ljmp
or
aaa
lods
int3
pop
mov
pop
cld
mov
pop
xor
mov
and
cmp
mov
movsb
das
cltd
clc
push
mov
dec
in
in
repnz
jl
movzbl
daa
jecxz
cmp
jno
push
cmp
dec
mov
in
movsl
jbe
pop
and
xor
pop
jle
push
mov
mov
push
xor
adc
cmpsb
jbe
pop
pop
push
dec
mov
xchg
pop
adc
add
sub
inc
popf
cmp
insb
and
jmp
call
fimuls
lods
call
lods
add
sbb
pop
cltd
fs
sbb
int
add
pop
ret
lret
notb
lcall
push
fadd
imull
outsb
imul
jg
ja
mov
rcll
mov
cmpsl
mov
mov
and
enter
cmpsb
repz
adcb
adc
cltd
mov
in
imul
inc
cmp
jns
test
jno
fldt
push
loopne
aaa
adc
cmpsb
xor
adc
mov
cld
push
out
lods
cli
stos
push
jnp
cli
repz
subl
mov
dec
in
push
sbb
clc
adc
fists
insl
pop
hlt
adc
es
add
jmp
jo
js
pop
xlat
add
push
sub
fcomi
mov
popf
push
dec
sti
push
ret
xor
xchg
dec
out
aad
rolb
nop
inc
xchg
sub
ret
mov
fldcw
cmc
les
lcall
sub
mov
lret
pop
stc
dec
mov
mov
add
xchg
sub
fisubs
add
dec
dec
mov
movhps
lea
dec
adc
lcall
scas
icebp
movups
std
dec
mov
cwtl
inc
lcall
scas
add
adcl
fistl
repnz
divl
mov
pop
add
and
dec
push
shrl
enter
arpl
popf
lea
dec
xchg
pop
lea
cld
jmp
ror
pop
lahf
orb
and
mov
imul
sub
loopne
pop
popf
jle
xor
mov
cmp
frstor
jo
data16
xchg
xor
icebp
ljmp
and
xchg
jp
xor
nopl
add
hlt
add
push
ret
push
jp
jl
lret
mov
test
roll
push
movsl
mov
repnz
pop
cltd
add
loope,pn
out
xchg
mov
add
xor
cmp
xorb
mov
adc
stos
xor
dec
sub
xor
jne
adc
ja
das
cld
dec
mov
int3
or
pop
mov
push
cmpsl
push
mov
pop
mov
mov
stos
js
xchg
adc
bound
dec
push
in
inc
xchg
pop
mov
aam
in
in
addr16
push
test
das
sti
mov
mov
push
dec
stos
push
test
pusha
push
fists
ja
mov
pop
jmp
ljmp
out
cltd
lods
popf
push
js
mov
movsb
or
mov
lds
aad
insb
push
movsl
cmp
jbe
jle
call
mov
loop
push
adc
adc
mov
sub
mov
push
or
test
inc
mov
inc
mov
ficoml
insb
xchg
push
cmp
imul
fsubrl
inc
pop
mov
pop
mov
fisubs
sub
mov
pop
leave
dec
jp
hlt
lret
push
xchg
arpl
xor
enter
pusha
sbb
movsl
in
aaa
hlt
xlat
sti
or
push
dec
dec
adc
sub
sub
outsl
sbb
xor
adc
and
sarl
clc
movsb
mov
mov
in
fnstcw
aam
loop
fidivrs
mov
mov
pop
or
pusha
dec
adc
cmp
movsl
jge
xor
in
pop
lahf
jp
add
lock
std
pop
xchg
inc
cld
cmp
stc
je
pop
jp
lock
jmp
test
outsb
push
jl
cli
mov
push
cmp
add
ror
cmp
dec
ds
add
out
sbb
pushf
add
fstpt
fstpt
ror
pusha
xor
xchg
and
push
lcall
dec
fsubrl
push
outsb
enter
inc
imul
adc
sub
cmpsb
mov
jg
mov
andb
xor
and
mov
xor
sub
lret
mov
gs
repz
push
gs
js
insb
cmc
inc
sbb
int3
je
outsl
add
loop
xchg
fs
xchg
cltd
ss
rep
mov
mov
imul
roll
cmp
sbb
or
into
sbb
pop
gs
and
jp
loop
notl
sahf
cld
or
xchg
add
and
data16
and
mov
or
sub
mov
in
or
sub
mov
pop
aad
mov
nop
pop
enter
addr16
inc
movsl
sahf
inc
fldenv
mov
repz
rcll
clc
repz
cltd
dec
mov
loope
adc
add
test
cs
mov
inc
mov
mov
scas
repnz
jb
pop
xchg
dec
mov
aam
jno
and
stc
mov
adc
std
lock
add
shl
test
jmp
rorl
fcmovnb
sub
pop
sarl
adc
lock
das
lcall
mov
add
imulb
pop
dec
or
push
cmpsl
loope
xor
out
sub
push
call
push
mov
shrl
xor
out
pop
mov
or
repnz
and
inc
jns
aam
sub
ret
imul
lea
xchg
jae
dec
ljmp
scas
lods
ret
mov
mov
push
add
push
mov
inc
movd
add
pushf
add
test
jl
mov
fcmovne
push
cmp
add
addl
imul
pop
inc
xor
out
stc
lret
or
sub
dec
fs
pushl
fwait
xor
cwtl
mov
mov
or
xor
mov
xchg
and
incl
cmc
mov
fwait
outsb
ds
push
dec
imul
mov
ret
fucomi
jno
aad
adc
sarb
xor
cmpb
jo
dec
mov
sbb
sub
out
xchg
or
jp
ljmp
shl
mov
add
in
xchg
pusha
mov
sbb
xchg
xchg
xchg
pop
js
xchg
mov
cmp
out
adc
popf
ja
lea
jecxz
subl
mov
lock
jle
pop
rcll
mov
iret
jne
sti
ret
insb
pop
shrl
inc
cmp
jae
test
push
into
sbbl
inc
or
xor
add
sub
sbb
dec
dec
imul
cs
bnd
vcvttsd2si
shlb
jge
arpl
or
push
leave
insl
xchg
hlt
push
arpl
inc
xchg
into
jo
fisubs
aaa
mov
fmull
fwait
inc
filds
mov
jle
xor
pop
pop
pop
sub
adc
push
jo
pop
int3
scas
mov
and
push
push
cmp
jne
inc
pop
dec
push
xor
rcrb
add
add
cmp
in
jno
ret
std
jl
enter
daa
and
movsl
test
and
mov
xlat
test
enter
mov
cmpsb
jl
dec
pop
mov
pop
xchg
je
push
stc
push
loope
mov
cmp
push
mov
shlb
addb
ficomps
icebp
mov
sahf
jge
int
mov
and
leave
cmp
dec
push
jne
dec
fcompl
mov
sub
nop
pop
test
fyl2x
sbb
ret
jg
mov
mov
hlt
iret
mov
mov
mov
lcall
xor
inc
testl
sbb
and
xchg
sahf
sbb
cmc
pop
mov
xor
cwtl
or
loop
sub
stc
jge
fs
adc
adc
inc
xchg
movsb
repz
xchg
dec
cli
adc
push
xor
pop
popf
or
pop
sub
cmpsb
pusha
daa
loopne
ret
add
adc
cli
imul
mov
mov
sbb
out
jecxz
xlat
andb
sub
fsubrs
in
jae
xor
mov
sbb
xlat
aad
add
cli
or
js
mov
sahf
test
inc
sbb
repz
inc
sub
lea
sub
or
aaa
enter
pop
xor
pushf
in
aam
jo
ss
rorl
xor
aas
dec
rcll
xor
dec
add
push
je
leave
es
add
adc
mov
cwtl
mov
fdivr
mov
jecxz
sub
fcomi
mov
icebp
mov
cld
aad
sbb
jno
mov
lret
into
add
mov
rorl
mov
out
shl
insl
mov
mov
cmpsl
loopne
push
mov
mov
pop
mov
mov
loop
and
int
inc
pop
test
test
ss
push
mov
push
inc
les
pushl
fnsave
fcoms
sbb
dec
lods
or
mov
lcall
paddusw
add
adc
pop
test
ss
fisttpl
push
add
push
dec
cltd
cmp
dec
mov
xchg
add
shll
arpl
stos
or
xchg
out
pop
shlb
add
call
movsb
insl
xor
fstpl
or
call
fsubl
ss
inc
mov
dec
int3
dec
ja
ficoml
jno
repnz
dec
psllq
mov
fwait
popf
addl
cmpsl
test
mov
icebp
fsubr
push
and
bound
dec
in
add
xchg
mov
push
cld
sub
loop
cmp
sbbb
mov
mov
repnz
jno
dec
in
xorl
nop
cli
jmp
jmp
xorb
cld
popf
sahf
pusha
mov
and
cmp
add
cmc
insb
sub
push
jle
pop
aad
int3
dec
test
push
cmpps
pop
clc
cmp
sub
mov
inc
push
xchg
pushf
je
adc
imul
clc
fidivrl
xchg
push
aad
sbb
xor
call
sub
push
cmpsb
xchg
rorb
shl
pop
inc
push
hlt
popa
nop
mov
mov
sbb
andb
mov
or
dec
repz
int3
push
push
adc
push
neg
mov
xor
mov
scas
push
adc
movsb
sarb
movsb
int3
in
cmpsl
call
lods
daa
loopne
sbb
pop
adcb
test
test
dec
out
loope
push
or
movsl
mov
repz
std
sbb
mov
lods
std
test
xchg
pop
push
inc
sbb
daa
cmpsb
call
pop
js
imul
push
cltd
mov
sub
testl
push
add
ds
hlt
sarb
mov
or
add
out
pop
add
pop
and
lds
xchg
int3
sub
mov
lcall
xchg
fadd
dec
pop
sub
pushf
outsb
mov
faddl
fs
xchg
mov
push
mov
mov
sbb
and
mov
fsubrs
jge
testl
aas
rcll
inc
sbb
and
cmc
into
mov
xor
push
loop
add
cmpsb
rorl
adc
out
subb
adc
shl
mov
xchg
sbb
jg
mov
or
inc
dec
into
loop
loopne
lods
mov
pop
and
ficoml
inc
rclb
push
lcall
pop
in
inc
jle
sbb
sub
out
sub
mulb
ficomps
in
cli
xchg
or
nop
aad
aad
test
fsts
push
mov
repz
xchg
jb
push
dec
add
xchg
movl
icebp
adc
ss
jae
jmp
in
fisubrs
pop
shrb
sub
popf
push
push
jb
ret
jns
test
cmpsl
jecxz
xchg
adc
std
mov
mov
push
cwtl
mov
push
pop
dec
adc
push
sbb
pop
ja
mov
push
lods
lock
jns
pop
jle
mov
subb
rcrl
or
xor
dec
cwtl
lcall
push
or
xchg
fs
cld
insb
test
lret
movsl
sub
and
push
push
rcrb
push
pushf
aam
inc
adc
loope
ss
clc
pop
adcl
xor
je
cltd
pop
add
jecxz
arpl
insb
roll
test
add
ret
cmpl
btr
inc
dec
add
test
add
sahf
sbb
bswap
shl
mov
pop
lcall
out
mov
fistpl
add
out
jnp
loopne
ja
and
ss
mov
cmp
and
or
xchg
pop
pop
push
repz
jbe
dec
fs
cmc
inc
fisttps
outsl
and
push
nop
fisubrl
mov
add
out
das
xor
bound
data16
adc
in
loop
xchg
push
fdivl
cmc
dec
ds
push
sub
pop
jge
mov
popa
mov
popa
inc
and
push
inc
sub
mov
into
pusha
out
adc
fildll
sub
xchg
dec
cmp
movsl
add
out
pop
lcall
inc
loop
push
popa
arpl
and
rcl
xchg
imul
jnp
das
mov
push
adc
adc
inc
pushf
sub
xor
ret
loope
das
idivl
inc
push
jp
jae
in
rcll
push
sub
jp
inc
push
pop
test
fisubrl
adcl
ljmp
mov
xorl
dec
sarl
scas
lret
jae
mov
shl
lods
jnp
arpl
ss
jge
mov
stos
scas
aaa
xor
adc
in
int3
int3
or
pop
mov
or
add
pop
scas
inc
inc
inc
and
push
test
ficoms
fistl
in
pop
jbe
and
sti
jno
daa
fistpll
cwtl
cmp
int3
jno
add
jl
pop
aam
pop
pusha
clc
push
in
mov
xchg
and
and
add
add
jae
stos
int
push
pop
cmp
test
into
lea
add
pop
adc
ss
in
call
sub
xor
sahf
cmpb
jo
adc
pop
mov
pop
cmp
mov
sbb
sbb
and
int
roll
add
out
xchg
icebp
lcall
fsubrl
addr16
xchg
push
icebp
xchg
adcb
cmpsb
jg
sbb
and
movsb
mov
andl
push
cmp
fsub
dec
into
testl
sbb
cltd
add
sbb
pop
bound
xchg
sbb
xor
sbb
outsl
lahf
jp
loop
adc
fs
rcll
ss
lds
push
lods
push
je
out
out
jbe
pop
xor
inc
cmp
pop
xor
cltd
ss
into
lds
loopne
mov
pop
aas
xor
push
imul
les
in
out
dec
retw
xchg
mov
fs
push
sub
movsl
shll
dec
enter
mov
mov
nop
mov
xor
insb
jecxz
fidivrs
xchg
push
out
mov
xchg
xor
iret
jge
add
mov
out
adc
adc
out
jmp
mov
cs
in
inc
sbb
out
cltd
aas
mov
clc
dec
lock
je
ss
jecxz
push
and
in
cwtl
cwtl
xor
lock
push
inc
mov
movsl
xorl
xor
pop
stos
loopne
mov
xchg
scas
lock
sahf
das
aaa
popl
mov
mov
test
divb
insl
add
dec
stc
das
jo
fidivrs
inc
mov
imul
cld
xchg
cmp
adc
out
fimuls
fsubl
add
out
shrb
dec
sub
mov
aam
shrb
ret
jo
lret
es
js
fldl
pop
add
push
mov
xor
inc
ljmp
lods
add
mov
popf
inc
popf
mov
sub
push
push
inc
mov
setnp
faddl
add
test
mov
jecxz
xchg
outsl
dec
addr16
js
inc
out
cmc
xchg
fisttpll
shr
movsl
rorl
and
jnp
ljmp
add
lahf
mov
call
divb
into
add
or
xor
xor
sub
mov
cmp
in
scas
and
pop
ret
ja
xchg
and
jb
inc
jbe
out
pop
pop
into
fwait
sti
pop
and
xor
xchg
jne
mov
mov
mov
push
inc
adc
jns
adc
in
adc
xor
fsubl
addr16
sub
push
or
inc
pop
out
mov
pop
pop
dec
aaa
shl
in
mov
mov
lock
add
jmp
push
mov
add
pop
popf
in
fdivs
push
mov
imul
insb
decl
enter
imul
insl
push
adc
adc
iret
xchg
push
ret
pop
pop
push
xchg
inc
pop
aaa
lret
xchg
or
mov
xchg
jo
push
out
les
movsl
imul
aam
sbb
lds
leave
rol
hlt
mov
add
add
testl
jbe
mov
imul
lock
je
and
jl
jp
hlt
out
pop
out
mov
xor
xorl
shlb
iret
cmp
jbe
push
push
cs
jbe
adc
in
jne
sbb
daa
ficomps
pusha
jno
sbb
sub
mov
sbb
and
push
lahf
imulb
push
mov
xor
mov
push
call
outsb
pop
push
cmp
push
hlt
add
sub
ds
cmp
sbb
cwtl
rorb
shlb
mov
push
add
aad
arpl
out
in
int
mov
mov
inc
push
xor
stos
and
jp
lods
fcompl
std
dec
sub
xor
push
jo
test
cwtl
subb
jg
test
mov
test
add
es
ds
dec
cmp
lahf
mov
idivl
mov
rol
sub
iret
insb
outsl
sbb
mov
add
in
pop
in
xor
jp
outsl
jle
jmp
push
push
aas
stc
mov
lods
imul
or
cmc
lods
dec
xchg
mov
xchg
out
iret
je
test
loope
cmp
sbb
ljmp
mov
shlb
pop
mov
pop
imul
in
jl
cmp
and
fdivrs
lahf
lods
jmp
sub
lcall
mov
test
shl
incb
sub
nop
mov
dec
inc
and
inc
icebp
xchg
les
addr16
xchg
clc
pop
add
jl
sbb
inc
out
test
js
test
jo
inc
pushf
in
sub
inc
shrb
int
cmp
stos
daa
inc
rorl
sbb
xor
shll
jecxz
andb
adc
test
iret
aam
mov
out
addl
in
fstpt
sbbl
jbe
lock
mov
lock
add
jp
sar
call
sub
imul
cmpsl
fstpl
push
pop
std
icebp
inc
push
cld
ret
lret
subl
and
sahf
and
sarb
jnp
sub
mov
mov
es
loop
mov
clc
lea
add
popa
bound
lods
outsl
je
mov
sub
sub
psubd
lods
add
mov
leave
test
mov
dec
jbe
push
dec
cld
or
into
sub
test
insb
mov
test
pop
lock
cmpsb
stos
fldcw
dec
add
mov
and
or
bound
je
mov
aas
cmpsb
mov
pop
jge
add
cmp
dec
dec
ljmp
inc
jo
fwait
sub
call
jne
scas
jbe
gs
je
in
pop
mov
jns
pusha
mov
xchg
lods
int3
sub
ret
loopne
or
hlt
stos
addr16
mov
sbb
scas
mov
lods
decl
push
fsubp
mov
inc
jl
in
mov
jmpw
out
xchg
loope
gs
or
popf
adc
mov
push
filds
popf
and
cli
insb
push
jmp
sbb
jle
int3
jecxz
mov
lahf
addr16
icebp
jl
ret
repnz
popf
push
popf
inc
push
fs
push
fisubl
push
add
add
stc
sbb
ficoml
mov
mov
push
shl
ss
push
jb
leave
mov
in
arpl
outsb
ja
pusha
shl
dec
mov
push
add
repz
int3
fildll
pop
push
into
ficomps
dec
push
jo
sahf
cltd
scas
add
jo
cmp
movsb
jno
sbb
mov
ja
in
pop
fstpt
daa
fnstsw
cmp
iret
or
and
test
movsl
mov
mull
push
test
adc
hlt
cmp
sbb
cmp
xorb
xor
loope
xor
cmp
scas
ds
mov
shufps
sub
pop
idiv
sbb
xchg
test
xor
loopne
stos
adc
int
nop
cwtl
sub
ret
lcall
pusha
fadd
adc
rcll
int3
test
jnp
addb
jg
pop
mov
movsl
adc
cmc
js
and
cmpsb
mov
cmp
pop
stos
iret
idivl
loopne
ret
or
mov
jge
sahf
cmpsl
add
cmc
and
or
xchg
in
jp
pop
cmpsb
je
test
test
adc
pusha
sub
dec
xchg
mov
mov
xlat
out
xchg
sbb
fsubrl
push
xor
inc
cmp
test
addr16
mov
outsb
loopne
cld
jns
jge
adcb
cwtl
fldcw
icebp
adc
add
shr
leavew
es
cmpsl
leave
das
cmp
sbb
xlat
jle
mov
mov
pop
mov
xor
arpl
les
cmp
fnstcw
add
and
mov
adc
xchg
mov
jg
call
les
pop
sub
adc
cmp
jmp
nop
stc
xor
inc
sub
or
out
cmp
jb
cmp
dec
fiadds
je
repnz
inc
fsubrl
and
rcrb
fistl
sbb
and
pop
lock
mov
pop
das
cmc
mov
jl
cmpsl
adc
mov
idiv
xchg
in
push
sub
dec
out
sbb
cmpsl
faddl
ret
mov
sbb
push
lret
repnz
xchg
mov
mov
cmp
cwtl
pop
and
sub
sub
loope
ret
mov
and
dec
rcll
enter
scas
fnsave
out
scas
popa
jns
lods
fidivrl
movsl
mov
dec
outsl
repz
mov
in
push
std
aad
mulps
add
add
es
test
fidivs
or
dec
dec
xor
jle
xchg
sbb
int
sar
sub
pop
fwait
outsb
imul
ja
add
aad
sub
nop
push
pushf
xor
or
or
mov
inc
xchg
sarl
cmp
ja
popa
jmp
cmp
frstor
or
push
pop
fwait
pop
inc
sbbb
sub
jne
or
into
out
int3
jae
clc
mov
xor
jbe
xchg
sti
add
in
sub
into
sbb
jp
push
bound
cwtl
sbbl
std
leave
sbb
lds
jp
sar
fisttps
or
xor
ficoms
jg
or
xchg
testl
stos
arpl
push
insb
aad
or
int3
ja
jne
and
pop
or
aam
lret
iret
push
aaa
cmpsb
ret
into
pop
aam
int
jae
test
test
or
mov
xor
inc
out
test
xlat
xchg
jb
int3
sbb
cmovge
popa
jecxz
loope
cltd
lds
scas
sar
inc
mov
test
jae
sbb
mov
arpl
add
mov
mov
sbb
cmpsl
pop
aaa
outsb
sarb
pop
xor
adc
lret
pop
inc
aam
fiadds
pop
xor
aaa
and
and
dec
push
cmp
div
movsb
cld
cmp
jbe
push
mov
enter
daa
fsubr
cmp
cli
in
add
jno
dec
stos
jae
push
xchg
test
and
adc
xchg
xchg
test
mov
data16
bound
js
pop
sbb
into
stos
xchg
push
pop
aad
test
icebp
sub
aad
cmp
into
cs
adc
ljmp
xorb
sti
sbb
std
cmpsb
add
dec
push
xor
imul
int
inc
xor
je
test
inc
jne
lcall
pop
fdivl
jge
shlb
jo
jno
bound
lahf
jg
or
mov
aam
mov
inc
mov
jne
push
inc
aad
cmp
adc
out
lret
add
out
mov
xor
sahf
dec
lea
xor
je
outsl
cmp
imul
je
stc
adc
mov
jmp
adc
mov
mov
dec
addb
ffreep
cli
cmpps
fisttpl
xchg
cmp
push
mov
out
ss
outsb
add
gs
arpl
lea
jle
nop
in
imul
fbstp
dec
pushf
outsb
sbb
adc
jge
sub
adc
mov
sti
push
jge
incb
dec
or
inc
xchg
dec
dec
add
xchg
or
repz
lock
jle
call
call
inc
and
pop
fidivrs
dec
pushf
cmp
sbb
sbb
inc
mov
addl
and
push
ja
dec
push
cmp
je
iret
xor
push
jl
and
mov
cwtl
shlb
dec
sbb
jne
addr16
shlb
fsubl
lcall
aad
mov
gs
in
pop
das
aam
xchg
mov
pop
xorl
rcll
test
mov
cmpsl
fldt
mov
lock
sbb
cmpsb
lret
popa
inc
int3
mov
daa
push
mov
inc
lret
loop
in
dec
sub
inc
aam
push
mov
fnsave
mov
xchg
in
cwtl
ljmp
lods
inc
filds
stos
xchg
xchg
mov
std
sub
test
cmp
nop
cltd
pop
loop
test
test
iret
or
pushf
xchg
test
and
sbb
leave
sbb
push
add
pop
inc
ret
js
mov
mov
dec
inc
int
xor
cmc
add
push
adc
ds
or
pop
xor
add
xchg
pop
mov
repz
cmpsb
dec
xor
pop
inc
cmp
mov
sbb
mov
iret
xorl
xchg
jns
in
in
movsb
inc
xchg
dec
cmpl
xchg
add
or
shlb
cmp
push
inc
imul
mov
xor
in
add
pusha
pop
lds
mov
mov
sub
or
and
and
lea
popf
popa
mov
push
push
pop
mov
mov
jbe
jecxz
inc
push
sarl
fidivs
das
adc
cmc
or
pop
or
jle
xchg
jmp
push
pusha
out
sub
xor
add
mov
xchg
leave
cmp
imul
cli
vpsraw
rclb
fdivrs
sti
call
sbb
fcomps
inc
cmpsb
jbe
jge
mov
aaa
sub
cmpb
cld
mov
xor
fsubp
push
loop
and
cld
scas
ret
test
jne
mov
test
jbe
sahf
jb
sub
xchg
enter
daa
fcmovnbe
mov
push
sbb
jl
jne
dec
sbb
in
push
jns
mov
and
add
push
dec
cs
mov
inc
in
xchg
cmpsb
mov
pop
mov
aaa
js
enter
test
push
inc
out
fwait
ret
cmp
pop
cmpsb
cmp
mov
adc
lds
decb
inc
icebp
mov
add
pop
std
xor
fbstp
int
ficomps
pop
ret
jb
lcall
inc
fcompl
mov
add
in
test
movsb
addl
jo
cltd
mov
jnp
mov
pop
clc
and
mov
cmp
rcrb
idiv
aam
lret
mov
mov
scas
pop
sahf
in
or
dec
adc
loop
push
gs
lods
mov
lods
adc
ja
shl
in
add
jnp
inc
add
out
lods
pusha
cli
inc
pminsw
mov
pop
cmp
inc
test
push
pushf
int
push
fs
gs
jno
sub
pop
adc
adc
pop
dec
adc
and
add
outsb
iretw
test
sbb
push
stos
xor
cld
sbb
sub
sub
in
cmc
leave
mov
int
imul
push
in
and
pop
push
lret
pop
push
fldenv
cmpsb
loopne
addl
xchg
inc
leave
mov
leave
sarb
ret
pop
xchg
mov
dec
pushf
out
sub
jl
testb
inc
cmp
incb
aam
aas
pop
imul
and
fsts
jle
fs
pusha
in
daa
and
std
orl
mov
mov
addl
jle
fisttpl
dec
xor
mov
jae
lock
lret
mov
push
mov
adc
xchg
shl
lods
mov
insl
push
and
shlb
scas
scas
lcall
shlb
jmp
xor
mov
arpl
shlb
mov
in
lods
iret
inc
es
ficoml
clc
ds
xchg
sub
movsb
ljmp
dec
lods
mov
mov
xchg
jmp
xchg
inc
fs
push
mov
lds
pop
sub
cltd
xchg
es
mov
sub
inc
imul
pop
inc
xchg
ret
lods
sbb
notl
stos
cmpsb
mov
push
add
or
fnsave
sbb
gs
dec
mov
dec
leave
mov
scas
mov
das
dec
and
xor
sahf
cmp
mov
negb
jbe
pop
out
mov
into
jns
push
sahf
in
daa
mov
mov
adc
sub
les
jp
mov
mov
mov
cmp
pusha
mulb
mov
jmp
inc
addr16
xorl
out
push
lcall
insb
sub
pushf
daa
stos
dec
fstpt
addr16
jnp
mov
jle
iret
pushf
push
jbe
push
adc
mov
sbb
xor
mov
jae
xchg
hlt
push
and
orb
push
inc
cmp
add
xchg
and
imul
rol
jl
rol
addr16
mov
dec
jb
leave
pop
push
sbb
and
sub
inc
test
inc
lods
sbb
xchg
aaa
in
in
daa
or
mov
int3
mov
sub
fiadds
fistps
popa
xchg
scas
mov
mov
shll
pop
mov
enter
daa
fiaddl
cmp
and
xchg
xchg
jl
dec
pop
dec
mov
pop
inc
sub
and
orb
add
push
push
push
push
je
arpl
mov
add
lret
dec
sub
push
sbb
sub
mov
scas
ds
jge
call
jo
popl
and
sbb
xchg
add
mov
nop
repz
mov
sub
out
pop
inc
hlt
mov
add
dec
sub
popf
pop
test
call
jg
sbb
ret
int3
sbb
mov
lret
push
loopne
push
dec
jg
cmp
mov
cmp
pushf
aaa
adc
sbb
push
ficompl
iret
out
adc
js
dec
xor
fs
arpl
cmp
adc
add
adc
inc
sbb
jmp
cli
jne
pusha
xor
push
outsl
or
pop
sbb
xor
arpl
in
shl
ret
cli
fistps
jns
adc
xor
imul
rolb
mov
jecxz
sbb
mov
xlat
cmp
sbb
add
sbb
fucomp
pusha
sbb
sti
jl
push
dec
in
aad
icebp
pop
nop
mull
out
dec
mov
scas
aad
pop
in
les
inc
pusha
xchg
add
mov
call
inc
popa
jae
inc
jne
adc
mov
jmp
pop
js
pop
mov
in
inc
aas
mov
loop
js
push
dec
inc
sbb
je
xorl
jno
cmp
sub
lods
cwtl
fidivs
cmp
andl
cmp
cmp
dec
in
lock
mov
int3
inc
dec
and
mov
test
mov
clc
mov
into
sbb
mov
sahf
adc
lret
aas
out
mov
leave
and
or
pop
addb
mov
sub
cmp
aam
jb
ret
cmp
xor
clc
jns
sbb
imul
popa
mov
lcall
mov
icebp
xchg
mov
push
push
mov
jle
bound
mov
jno
add
push
jmp
dec
push
stos
test
sub
addl
nop
roll
adc
stos
xchg
inc
cmpsb
out
adc
loopne
es
ljmp
lock
mov
inc
sbb
pop
mov
dec
adc
pop
imul
roll
mov
or
lcall
push
bound
imul
cmpsb
mov
pop
out
out
imul
int3
jns
sti
mov
sub
mov
test
mov
cmp
mov
inc
jns
sbb
mov
stos
mov
cmpsb
jecxz
in
out
int
xchg
xchg
push
fildll
popa
xchg
pop
and
loop
or
push
mov
xchg
sbb
jp
test
cmp
add
stos
mov
rcll
push
cmc
sbb
jle
mov
dec
adc
dec
iret
insl
jle
ret
in
pop
jns
fwait
inc
xchg
aam
jae
subl
pop
push
or
es
iret
ficompl
pop
xchg
sbb
test
imul
scas
or
lds
jmp
xor
repnz
sbb
hlt
outsb
movsl
mov
xchg
jne
lods
dec
jne
cld
jecxz
sbb
mov
stos
ret
xor
mov
int3
mov
pop
sarb
fisubrs
scas
shlb
dec
and
scas
xor
jmp
sub
movsb
popf
mov
jbe
xchg
int3
in
clc
xchg
test
daa
fnstcw
mov
jno
sbb
add
jg
imull
push
aas
push
pop
movsl
mov
pop
daa
lahf
xchg
inc
ret
and
jne
pushf
push
and
jl
xchg
mov
repz
popa
inc
pop
mov
or
movsl
push
loope
in
sub
in
mov
ds
or
sarb
push
movsl
xor
mov
xor
divl
xor
stos
mov
mov
popf
mov
xor
sar
lcall
mov
jno
cmp
lea
pop
test
hlt
fidivrl
aas
shlb
cld
iret
fidivl
jnp
push
dec
sub
inc
stc
fadds
sbb
jp
pop
sub
mov
push
mov
pop
sbb
icebp
es
xor
dec
cmc
aas
lods
jl
incl
inc
loop
test
stc
xor
call
arpl
push
and
lods
rclb
mov
je
mov
lds
pusha
push
adc
das
lea
xor
adc
pop
or
fimuls
loopne
ja
pop
stc
stc
loope
or
imul
lods
xchg
add
dec
data16
outsb
sbb
lea
jp
pop
sub
adc
das
fdivr
in
lret
inc
mov
sub
out
dec
out
aad
pop
sub
sbb
jnp
fsts
repz
push
in
xchg
xchg
scas
call
rol
pop
mul
test
and
jge
cmp
cmc
jmp
ja
cs
dec
mov
aas
inc
push
dec
mov
pop
dec
jecxz
hlt
ss
sub
dec
sbbl
push
pop
mov
mov
subl
pop
jl
out
mov
mov
cli
das
jno
push
mov
sbbl
sbb
testb
mov
scas
pop
dec
fcmovnu
nop
cmpsl
fadd
dec
mov
jne
stc
cld
cltd
lret
scas
fists
xor
and
movsl
mov
js
pop
call
rcl
add
je
es
ret
iret
fucomp
lret
mov
addr16
stos
loop
ljmp
int3
lods
xchg
outsb
mov
rolb
push
imul
inc
add
sbb
test
mov
jb
push
sbb
dec
dec
shl
cmp
add
fcomps
add
rcrl
mov
stos
test
faddl
inc
stc
sbb
or
cmp
rorb
mov
iret
mov
xchg
xchg
mov
and
ja
sub
or
addb
mov
xor
lds
add
jo
mov
sub
out
dec
add
bound
aas
stos
jns
jl
in
sub
xchg
aaa
xchg
xor
inc
push
sbb
rclb
ret
mov
call
xor
mov
loop
loope
sbb
popf
in
fisttps
das
jmp
push
mov
mov
mov
push
test
mov
sbb
mov
das
int3
andl
aas
pop
insb
addl
mov
adc
loop
int3
dec
jge
fsts
inc
lahf
mov
mov
push
test
je
push
or
ficoml
mov
sbb
cs
imul
scas
insl
cmc
mov
shlb
mov
hlt
and
leave
cmc
shrb
arpl
movsb
sbb
jge
negw
repz
mov
add
sbb
jbe
cmp
add
pop
xor
mov
push
xchg
and
cmp
lds
movsb
sub
adc
ds
fistpll
out
enter
daa
fdivs
jno
jo
das
jp
dec
inc
out
push
and
jl
ret
ss
and
sub
push
mov
rclb
mov
xchg
sub
cmpsb
pop
or
pop
jns
push
mov
mov
push
in
loope
sub
sub
repnz
cmp
and
jbe
arpl
push
inc
xchg
popl
xor
sahf
sahf
cli
add
jl
xor
inc
in
int
add
sub
outsl
pop
inc
addl
test
fcompl
icebp
sub
outsb
cmpsb
in
mov
or
dec
jg
add
mov
xchg
cltd
mov
mov
pop
push
cmp
add
cmp
lret
rorl
mov
push
sbb
aaa
cmc
push
int
xor
sub
mov
and
in
cmp
adc
lea
lcall
mov
add
mov
pop
cli
fldt
dec
xor
or
or
inc
movsb
gs
mov
stc
pop
test
jle
adc
dec
sti
imul
out
rolb
mov
pop
cli
sbb
add
sbb
mov
sbb
mov
ss
test
adc
cmc
nop
lods
push
orl
in
inc
arpl
fxch
dec
sbb
movsb
mov
bound
decb
call
aas
mov
pop
stos
add
jp
pushf
out
arpl
xlat
fwait
cs
add
into
xchg
in
jne
aas
in
jmp
dec
xor
pop
jecxz
movsb
mov
jbe
fstps
dec
mov
cltd
adc
rcr
cwtl
imul
mov
hlt
sbb
push
and
push
jne
mov
cmp
scas
rcl
and
dec
jle
insl
rorl
dec
sbb
xlat
add
dec
push
jp
dec
imul
leave
cld
lret
sbb
ss
and
inc
neg
pop
rol
shlb
lcall
ror
mov
es
xchg
fstl
jl
clc
out
xchg
fs
jmp
sub
lods
icebp
movsb
pop
mov
sti
lret
lods
xchg
sbb
push
inc
mov
add
lret
sbb
xlat
lret
push
fistpl
sbb
xchg
push
sbb
mov
pop
repnz
inc
stos
jae
out
xlat
clc
aas
add
pop
push
das
ljmp
push
adc
mov
push
add
mov
fistps
ja
in
dec
cld
jge
inc
xchg
dec
into
or
aas
inc
fwait
inc
data16
mov
fs
or
push
jns
mov
xchg
xchg
xchg
cltd
mov
mov
aad
mov
out
addr16
out
sarb
out
mov
mov
mov
flds
dec
insb
arpl
insb
jecxz
mov
fbld
outsb
shr
add
scas
rolb
cltd
test
popf
std
or
mov
pop
push
test
mov
loope
insb
in
jmp
pushf
jle
adc
xor
adc
mov
iret
sub
aad
in
cs
out
ss
stos
xchg
shlb
sub
push
insb
icebp
mov
mov
push
push
js
fiaddl
push
xchg
xchg
and
mov
dec
xlat
adc
adc
sarb
inc
inc
aas
leave
insb
sub
hlt
add
frstor
not
inc
mov
nop
jge
int
sbb
clc
jne
sbb
loope
popa
sti
sub
outsl
jecxz
jo
es
fdivrs
scas
aas
dec
enter
adc
movsb
mov
and
outsb
icebp
jbe
pop
lock
int3
repnz
daa
xlat
mov
cmp
mov
icebp
jl
into
dec
aad
fwait
push
add
orb
or
lahf
iret
lret
jo
lcall
push
mov
pop
inc
and
push
cmpsb
lcall
js
dec
sub
push
fadds
loope
xchg
imull
int3
cmp
les
adc
xor
jg
xchg
push
sbb
aad
icebp
add
ficoml
cmp
test
fistl
pop
lcall
ss
decl
sub
cmp
subb
jmp
lret
mov
mov
mov
adc
and
jge
push
push
in
cmp
mov
mov
lret
js
loop
cmc
mov
mov
sahf
jns
cmpsl
cmc
int
lods
xor
mov
stc
mov
in
adc
and
lods
mov
aam
out
or
and
push
loop
cmp
je
or
inc
mov
fnstsw
gs
sub
pop
aaa
push
pusha
adc
jmp
adc
test
add
add
mov
sbb
cmp
xlat
clc
mov
sbb
mov
cmpsl
xor
pop
ficoms
fstpt
inc
jbe
outsl
flds
jnp
les
aas
in
xchg
dec
mov
lea
jge
flds
mov
aam
adc
pop
xor
subl
push
inc
int
nop
clc
add
xorl
jno
pop
dec
test
add
stos
or
xor
push
cwtl
or
mov
fadd
mov
xor
dec
push
sub
movsl
pop
pop
ret
mov
xchg
xor
stos
adc
das
das
cmpsb
cmp
icebp
aaa
lcall
pop
lcall
enter
mov
cmpsl
rcrl
lahf
scas
icebp
and
cld
out
xchg
mov
out
and
pop
fists
test
add
leave
aam
negb
es
jl
fnstsw
adc
xchg
sub
or
cwtl
cmc
je
add
pop
lods
pop
push
jne
push
push
outsb
xchg
pusha
xor
das
setae
incb
fwait
cld
ret
lahf
jno
xchg
enter
jg
push
sahf
mov
les
call
roll
cmp
bts
adc
cmp
push
add
decl
xor
data16
or
movsl
push
mov
push
movsl
imul
pop
and
dec
out
loope
inc
cs
mov
mov
loop
jae
lods
push
dec
xchg
jne
jns
mov
add
out
push
arpl
bound
int3
jns
imul
mov
sub
orl
ss
jp
pop
stos
mov
pushf
pop
mov
dec
xor
in
inc
lcall
stos
aam
cwtl
loope
jmp
outsb
outsb
pop
subl
popf
and
mov
pop
test
lods
stos
adc
cmpsl
jge
push
mov
cmpl
mov
xchg
xchg
mov
iret
mov
add
cld
dec
pop
push
dec
jae
mov
addr16
in
push
das
xchg
sbb
xchg
lods
cmc
inc
jle
mov
jl
jl
or
mov
imul
pop
scas
xor
lds
mov
mov
lcall
hlt
dec
test
arpl
mov
jge
pop
sbb
aaa
call
flds
xor
dec
int3
dec
dec
add
ficoms
pop
outsb
xor
pop
rcrl
adcb
dec
add
mov
jbe
in
gs
lods
cmp
adc
xor
cmp
lea
test
xlat
dec
inc
inc
add
movsl
shrl
mov
sub
negl
insl
xchg
subl
bound
xor
js
fwait
and
dec
push
in
push
jg
loope
daa
shrb
sarl
in
ds
pop
adc
or
sub
ret
andb
add
mov
decl
int
cmp
sub
xchg
and
inc
dec
test
mov
fdivl
xor
pop
lcall
lcall
jg
xchg
jl
ucomiss
mov
scas
mov
sarb
push
inc
dec
cmp
ja
divl
testl
mov
jl
sbb
xchg
cmp
outsl
jbe
mov
stc
pop
lret
push
fs
bound
std
jae
ss
lods
lods
xchg
push
mov
outsl
lods
cli
inc
sbb
xchg
cmp
ror
or
mov
adc
das
lods
pop
push
xchg
sbb
subb
imul
insl
add
hlt
dec
imul
fwait
sbb
ja
fst
aaa
out
int
iret
lea
je
sbb
or
dec
sti
cmp
in
mov
push
nop
arpl
xchg
push
roll
or
cmp
les
sbb
int3
js
call
cmp
pop
in
adc
cmp
pushf
cmp
das
jl
in
sbb
push
jmp
aas
and
jae
pop
mov
cmc
fdivl
lods
shrb
ss
cmc
std
rol
cwtl
and
mov
jp
mov
fwait
push
dec
inc
addr16
fcomi
movsl
imul
out
mov
xchg
pop
lock
sbb
push
fildl
mov
test
dec
and
adc
jo
hlt
not
mov
mov
int3
xorb
scas
popf
fyl2x
cli
push
push
cld
sbb
cmp
sti
pusha
lret
mov
mov
push
mov
pop
pop
aas
rcl
cltd
pop
sub
clc
aam
jne
ret
ja
out
filds
xor
gs
xchg
rorb
ja
popa
sbb
aas
mov
inc
rolb
push
cli
sarl
scas
mov
cltd
cmpsl
pop
and
insb
fsts
sbb
ss
test
sub
xchg
sbb
call
inc
stos
push
and
popf
or
add
sbb
or
sbb
sbb
xchg
cltd
mov
push
bound
ja
call
mov
lds
or
iret
jne
mov
inc
inc
jne
xchg
cmp
cmp
cwtl
pop
clc
adc
pop
in
mov
jmp
rcll
or
mov
jp
mov
push
lods
cmpb
arpl
mov
in
jp
pusha
std
sub
xchg
imul
xchg
cmp
dec
out
add
dec
mov
mov
xlat
mov
js
add
in
jnp
pop
sub
in
push
fstps
adc
into
jbe
jmp
lcall
push
outsl
in
shlb
push
repnz
jg
xorb
push
std
pop
xor
imul
sbb
mov
imul
add
cmpsl
int
mov
sub
repnz
sub
leave
pop
iret
xchg
lcall
inc
mov
inc
ficompl
and
and
cmpsl
cmp
lds
lret
ja
int3
aaa
jne
pop
mov
fidivs
cli
add
loope
scas
std
mov
and
add
cmp
ljmp
ja
jbe
icebp
pop
in
xchg
xchg
repz
daa
aad
adc
dec
mov
inc
jl
repnz
insb
sbb
lret
fldenv
fadds
and
add
lahf
or
mov
inc
push
dec
push
daa
inc
aas
test
pop
jne
out
add
ljmp
fisubl
cmp
xor
out
cltd
and
xorb
xor
xchg
mov
stos
cmp
ret
int
sub
ror
ret
aaa
sub
not
inc
push
mov
fcompl
sbb
test
sbbb
movsl
jo
cmp
mov
enter
sub
and
mov
cmp
xor
divl
inc
lret
and
adc
mov
sbb
sahf
mov
xchg
xor
jns
push
cmc
cmc
loop
imul
int3
xor
adc
ss
lea
sub
out
push
mov
xor
sub
out
lods
cmp
mov
pushf
loopne
xor
pop
jne
adc
push
out
loope
out
or
lahf
stos
jns
cmp
data16
js
mov
mov
sub
jbe
inc
sub
adc
ja
jmp
jnp
in
aad
out
nop
ds
dec
dec
cltd
sub
inc
pushf
mov
fnstenv
ret
lds
lds
xor
lods
call
mov
xchg
inc
adc
in
call
lahf
xchg
cs
xchg
adc
iret
test
movb
jb
stos
dec
xchg
adc
push
jecxz
dec
pop
cmp
std
imul
sbbl
mov
cmp
xchg
sbb
dec
sub
push
pop
or
mov
cli
sbb
popa
xor
mov
pop
arpl
mov
notb
loopne
insl
mov
dec
loope
cmpsl
aam
out
mov
sarl
cld
inc
andb
mov
dec
out
mov
sbb
out
sub
ret
xor
ret
push
out
je
bound
lock
mov
daa
add
jle
pop
popa
xor
or
mov
out
cmc
push
aad
je
push
mov
xchg
cltd
fidivs
popf
test
popf
xchg
push
and
dec
dec
insl
sbb
test
fcmove
xchg
adc
shll
lea
add
movl
mov
xor
cmp
xchg
or
sbb
xchg
lea
adc
ja
das
xlat
dec
aad
ret
inc
pop
cmp
fwait
sarl
push
xchg
out
add
adc
cwtl
sub
ror
bound
out
in
sbb
jae
mov
add
add
cmpsb
or
addr16
sbb
push
pop
mov
bound
dec
adc
pop
nop
pusha
cwtl
jg
filds
aas
xchg
arpl
xchg
add
ja
lret
out
pop
cmp
iret
mov
cltd
stos
sti
sbb
cmpsb
insb
sub
lret
lea
mov
iret
dec
lcall
mov
inc
lret
movsl
cwtl
jae
and
push
mov
adc
lea
inc
jl
push
ficompl
clc
xchg
sub
sub
sbb
inc
scas
stc
push
push
lds
push
jo
nop
mov
jae
rcll
pop
hlt
in
mov
inc
mov
pop
sahf
sbb
mov
aaa
data16
mov
add
ror
and
pop
mov
inc
sub
sbb
and
aam
movsb
push
into
ds
addr16
aad
xor
lret
ror
les
daa
aam
jmp
jno
loop
jl
ret
and
push
scas
insb
sub
pop
and
push
adc
aad
dec
inc
adcl
xor
and
pop
pushf
jmp
js
cld
jbe
movb
mov
mov
sub
push
sbb
dec
push
scas
notb
and
rol
loope
popl
inc
push
sbb
pop
add
in
xor
data16
test
ljmp
dec
mov
cmp
mov
loopne
loop
enter
cmp
xor
roll
cmp
mov
fdivrs
add
mov
jb
cwtl
dec
jmp
push
pop
pop
aas
cmp
in
insl
mov
xor
test
int3
push
mov
xchg
sahf
bound
into
cmc
and
add
jg
outsl
xor
sbb
stc
enter
push
push
push
adc
mov
and
push
out
mov
xor
or
pop
or
gs
lock
adc
pop
xchg
mov
adc
in
imul
cmp
jmp
cwtl
ss
in
loope
xlat
mov
mov
mov
loop
push
sti
xchg
mov
test
nop
sbb
test
addl
cmpsl
aam
shlb
repz
sahf
repnz
xchg
cmpsb
mov
call
cmp
adc
ljmp
xchg
shl
cs
add
inc
ljmp
aas
pusha
cmpsl
mov
dec
or
xorl
cmp
sbb
adc
in
cmp
inc
mov
dec
lcall
rcl
sbb
fistl
pop
stos
push
or
lock
push
mov
push
out
and
lcall
notb
out
insl
outsl
popf
pop
dec
ret
cmpsl
rcll
cmpl
into
adc
lret
fnstenv
pop
and
lods
adc
rcl
jl
cld
sub
xor
aam
outsb
sahf
ret
xchg
aaa
outsb
es
xor
in
push
ljmp
or
sub
jns
xor
dec
orl
add
add
mov
cltd
adc
fmuls
push
out
mov
test
pop
clc
xchg
inc
sbb
stos
xor
mov
out
arpl
push
add
enter
daa
lds
or
nop
add
mov
pop
dec
je
fmull
lret
mov
inc
dec
enter
repz
xchg
or
scas
cmp
xor
jne,pt
imulb
out
mov
test
push
in
jmp
jge
inc
inc
adc
mov
xchg
jp
sti
or
sbb
mov
in
sbb
fbld
loop
xchg
adc
jmp
iret
movsl
sbbl
out
cs
popf
cltd
pushf
cmpb
arpl
shlb
cwtl
ret
outsl
jnp
sti
jo
mov
test
adc
js
ret
cli
pop
ret
popf
and
xchg
jae
stos
adcb
xor
or
or
inc
sti
push
addr16
inc
in
xchg
subl
scas
pop
ja
lds
ds
repnz
jecxz
leave
dec
add
hlt
xor
in
inc
mov
dec
fstps
lcall
or
cmp
int3
or
jg
fdivrp
mov
xchg
cmp
mov
xor
movsb
fbstp
push
mov
add
js
xchg
in
call
push
daa
ror
cmp
scas
insb
jno
inc
bnd
addr16
dec
xchg
add
jl
out
jne
cli
dec
inc
lahf
dec
adc
push
out
lods
test
loop
roll
adc
xor
js
or
pop
add
scas
xor
sub
jns
cmp
mov
ds
addr16
popf
mov
dec
sbb
scas
sbb
lcall
dec
jbe
pop
mov
or
mov
adc
aaa
xor
jae
in
sub
arpl
outsb
xchg
pop
in
test
jmp
pop
jg
adc
mov
cltd
stos
mov
cs
and
cmp
pop
sbb
fsubrs
rcrb
lret
scas
sarl
js
call
sbb
sahf
add
dec
jnp
and
and
addr16
stc
jg
sbb
and
ljmp
lods
cmp
pop
mov
in
out
lods
pop
cli
fcmove
add
cmp
loope
or
daa
sbb
or
mov
dec
js
sti
or
imul
and
out
push
sbb
sub
aad
sub
sti
in
dec
lea
inc
push
push
inc
lahf
cs
push
pop
nop
hlt
adc
dec
push
jmp
mov
fldt
repz
inc
ss
pop
lea
fs
mov
sub
adc
fisttpl
jmp
lret
push
cs
addr16
inc
jno
roll
pop
fs
mov
inc
dec
test
icebp
je
push
jp
ficoml
sub
aas
xor
cwtl
notl
inc
mov
adc
add
push
push
fildl
sub
mov
icebp
ljmp
xchg
or
int
xor
sarb
push
lods
mov
pop
add
inc
rolb
icebp
jg
mov
lret
dec
movb
push
dec
mov
pop
pop
xchg
dec
pop
movaps
jmp
lret
pop
mov
clc
push
mov
xchg
and
jns
fs
popa
pop
xchg
ret
mov
and
jl
gs
mov
sbb
punpckldq
out
adc
test
lret
push
push
stos
aas
jae
cmp
xchg
dec
push
sbb
push
scas
shll
ret
add
stos
push
nop
dec
out
dec
out
repz
add
xor
cld
xor
mov
xor
inc
andl
sub
pop
xchg
dec
ja
dec
add
jns
inc
mov
fs
ffree
fwait
das
mov
push
xlat
sub
jne
cmp
mov
mov
push
bound
hlt
in
or
adc
aaa
mov
xchg
sub
pushf
dec
cwtl
xor
hlt
inc
cmp
inc
mov
or
in
jle
pusha
into
push
ds
in
movsl
jmp
lcall
out
jb
popf
sarb
inc
es
push
xchg
cs
stos
loope
mov
insb
add
pop
jnp
icebp
bnd
enter
or
adc
aas
iret
push
pop
mov
pop
cli
stos
roll
data16
je
push
cmp
xor
testl
inc
cwtl
xchg
fmul
insb
sbb
mov
imul
out
mov
dec
rol
or
mov
out
fcmove
mov
cltd
pop
arpl
hlt
inc
rorl
sbb
lods
aaa
in
cmc
or
fcmove
add
loope
pop
sbb
aaa
ficomps
out
add
lds
and
xor
movsb
push
mov
add
mov
je
mov
pop
icebp
cmp
loopne
jno
enter
filds
add
push
je
mov
xchg
xchg
ljmp
lea
imul
inc
in
inc
sub
ljmp
pop
inc
ret
adc
sahf
and
gs
ja
cmp
les
adc
js
lahf
ds
pop
xor
mov
add
pushf
imul
or
fwait
int
push
inc
sub
ja
cmp
sqrtps
mov
sub
cs
outsb
clc
mov
in
xorb
jg
in
or
cmp
adc
clc
push
bound
cmp
arpl
cli
lret
add
out
add
shl
out
inc
js
sahf
test
sub
mov
mov
jl
sub
loop
aas
push
fs
pushf
or
cmp
jns
sub
lods
and
mov
lcall
or
aas
inc
cmp
mov
into
dec
lret
movsb
movzbl
pop
shr
adc
imul
adc
pop
jns
xor
pop
sbb
arpl
hlt
xlat
xor
lret
sub
inc
in
in
mov
jne
in
aad
sub
iret
test
dec
mov
mov
fsts
shll
xor
lea
mov
inc
and
mov
faddl
sbb
jmp
xchg
jno,pn
aad
clc
lea
inc
pop
call
xchg
cmc
add
ss
and
jecxz
pop
ljmp
lods
lds
ret
sub
mov
out
mov
rcrl
stc
scas
mov
and
jb
inc
das
mov
pop
mov
test
jmp
mov
lods
push
or
fcoml
insl
cmp
jbe
cmpsl
sarl
lock
push
fcom
cld
stos
push
lret
mov
push
mov
push
and
loop
fstps
jp
shlb
or
mov
js
xchg
mov
jp
jmp
sbb
push
aas
clc
push
jne
xchg
arpl
ljmp
and
jp
mov
ret
add
push
and
outsb
mov
cltd
andl
leave
fadd
mov
iret
push
insl
mov
dec
mov
mov
mov
sbb
push
pop
sarl
popf
jecxz
or
mov
jno
incb
pop
xor
cmpb
fnstsw
arpl
fistpl
gs
ja
pop
decl
popa
xchg
inc
and
or
fisttps
fwait
pop
jno
push
jp
in
jne
out
mov
stc
xchg
popa
cwtl
inc
bound
jns
icebp
jecxz
xor
shlb
xchg
daa
mov
xchg
int3
jno
xor
jp
ds
mov
push
sub
data16
ret
adc
pusha
imul
into
xchg
mov
xchg
jmp
sbb
stos
xlat
out
sub
popf
out
lahf
mov
shll
out
and
insb
outsb
test
jnp
stos
repz
push
addr16
cmc
arpl
adc
inc
sbb
pop
pop
xor
in
lods
shlb
push
push
decb
sbb
sbb
stc
push
dec
fidivl
xchg
pop
sbb
push
inc
imul
xchg
scas
and
lds
movsl
shlb
repnz
leave
lds
arpl
test
jge
jmp
add
mov
das
mov
daa
lcall
dec
mov
jp
out
xchg
jo
jecxz
scas
jns
frstor
dec
das
sarb
loopne
mov
push
push
mov
push
in
xor
sbb
mov
xchg
daa
shll
cmp
pop
jno
jno
jl
sub
outsl
scas
in
push
fldl
and
jmp
lahf
mov
adc
mov
mov
loope
jnp
pop
cmpsb
lods
mov
pop
adc
pop
pop
sub
push
push
mov
sub
dec
jle
pop
enter
mov
rclb
sub
popf
sti
data16
insl
sbb
mov
and
out
sub
into
pop
mov
aad
mov
mov
mov
lcall
and
leave
mov
int
pop
push
xlat
test
xchg
mov
mov
mov
scas
cmp
mov
aaa
and
ljmp
push
insb
enter
bswap
daa
mov
sbb
mov
fwait
ret
push
xor
ja
sbb
xlat
insl
or
cld
xchg
lea
pcmpgtb
mov
pop
outsl
push
pop
lods
or
mov
mov
xchg
cli
inc
mov
sbb
or
mov
gs
xor
ss
pop
icebp
mov
adc
hlt
cmp
ljmp
in
nop
cltd
sbb
sahf
aaa
jnp
jb
jbe
push
add
mov
and
sti
mov
mov
aad
mov
nop
stos
or
adc
sub
icebp
insb
xlat
repz
xchg
fildll
call
mov
mov
adc
add
xchg
jle
jmp
pop
imul
pop
test
jg
enter
jle
cmp
insb
movsb
dec
jb
push
je
out
push
jecxz
in
movb
std
pop
cwtl
insl
sbb
push
mov
mov
lret
dec
flds
mov
pop
xchg
mov
es
xchg
das
imul
xor
cmp
sar
sub
negb
gs
insl
and
jne
mov
cmp
lods
and
cld
icebp
pusha
test
mov
dec
and
jge
jg
cltd
sbb
cmc
es
sub
outsb
xchg
frstor
sar
mov
lcall
mov
lods
fisubs
mov
lock
xchg
or
xchg
push
inc
xor
add
or
test
fcoml
mov
or
dec
or
mov
clc
cltd
jne
pushf
or
cmpsl
pop
lahf
push
jb
cld
lods
pop
out
mov
syscall
add
add
ljmp
pop
ret
jo
lea
or
mov
popw
mov
pop
cld
xchg
addr16
jbe
dec
mov
enter
mov
fwait
divb
sbb
negb
add
ljmp
mov
jns
xchg
out
mov
insl
cmp
adc
sub
xchg
loopne
xor
mov
pop
in
push
mov
pop
dec
mov
loop
mov
mov
je
pusha
add
aam
cmpb
mov
pop
jmp
xor
add
cs
hlt
popf
push
jecxz
mov
adc
add
jae
push
insb
fstps
jnp
sub
sbb
sub
pop
aad
sbb
aam
les
in
ret
or
mov
inc
testl
out
shr
or
jns
push
inc
js
mov
call
jp
sbb
sub
imul
mov
vdivss
aas
jle
mov
mov
push
hlt
adc
sti
inc
mov
jge
mov
aaa
bound
or
cmp
int3
into
mov
sahf
fsubp
ja
xor
jnp
scas
pop
add
bound
xchg
and
movsb
adcb
mov
jbe
fsubrs
pop
xchg
nop
enter
daa
rorb
cmp
shlb
jecxz,pt
xchg
dec
fisubrs
cltd
movsl
sti
jbe
and
push
mov
push
pop
leave
js
and
int3
push
inc
mov
or
cmpsb
das
mov
adc
lods
and
ret
push
xor
sub
out
sub
pop
ja
addb
pop
jmp
cs
adcb
lock
rolb
cmp
mov
adc
push
outsl
int
shrb
add
cmp
lcall
sub
je
add
hlt
jle
test
hlt
testb
mov
mov
fadds
mov
add
mov
das
scas
and
das
cmp
fld1
xor
xor
lret
sub
add
loope
movsl
and
out
dec
pop
cmc
jecxz,pt
xor
in
outsl
mov
loop
aas
add
xorl
adc
mov
xlat
lods
icebp
adc
mov
ret
scas
lahf
cli
jae
sub
out
call
or
push
jmp
adc
mov
rcrl
adc
dec
adc
imul
int3
scas
add
andb
mov
cmp
es
xlat
mov
lds
or
insb
in
mov
repz
push
jno
sub
sbb
je
faddl
lret
and
cld
imul
or
out
mov
push
cld
call
aaa
xchg
sbbl
fsts
xor
and
dec
out
cs
inc
call
inc
dec
cmp
jb
pop
pop
dec
jmp
mov
lret
xor
std
scas
repnz
sub
fidivl
mov
and
les
scas
fistl
mov
push
mov
shll
lock
das
dec
insb
mov
mov
mov
dec
mulb
out
insl
or
mov
cmpsl
iret
push
mov
add
add
sbb
xor
xchg
psrld
jg
cmc
mov
mov
js
sub
push
add
add
dec
adc
in
xchg
loope
sub
mov
push
mov
xlat
fwait
mov
push
lods
loope
sbb
out
cvttps2pi
mov
test
xor
push
repz
dec
jo
subb
add
iret
shll
fistpl
mov
out
and
add
xor
add
mov
jp
or
add
xor
ljmp
imul
fstpl
pop
sbb
push
jb
xchg
dec
jle
dec
inc
mov
pop
insb
fwait
mov
movsb
into
jne
imul
pop
xor
push
pop
jns
push
in
imul
push
or
gs
out
lea
fidivrl
push
pushf
mov
lcall
mov
push
cmp
int3
in
add
sbb
bound
jmp
sti
fadd
adcl
jp
xor
adc
out
cmp
and
jnp
push
jle
inc
jno
cmpl
adc
jns
iret
and
and
test
pop
lahf
stos
pop
inc
add
fistl
test
pop
push
imull
fwait
jno
xchg
fldl
adc
scas
call
jl
rcrb
mov
ffreep
xchg
leave
and
push
hlt
pop
addb
mov
jge
adc
sbb
outsb
jg
mov
das
add
ror
ret
test
jne
mov
stos
jo
fistpl
and
iret
cmp
push
movsb
or
push
repnz
xchg
popa
in
incb
enter
daa
iret
sub
cmp
icebp
jno
cs
jl
aas
add
xor
cli
movsl
add
xor
data16
adc
push
xor
push
push
sub
in
mov
pop
pop
push
test
or
pop
add
test
scas
add
sub
outsl
cmp
repnz
adc
or
ss
pop
inc
subb
jbe
lea
add
lcall
push
mov
sub
mov
lcall
out
pop
inc
fildll
jecxz
js
and
test
incl
repz
add
mov
cmp
and
mov
fcoms
popf
lret
lcall
sbb
sub
fdiv
add
jo
outsl
cwtl
mov
stc
pop
jbe
fs
cli
cmp
ss
inc
lods
fdivrs
sub
scas
loopne
cmpsb
test
fisttpll
dec
cmc
push
gs
dec
loopne
mov
pusha
adc
call
adc
add
mov
iret
mov
leave
xchg
adc
or
lock
int
adc
dec
enter
decb
mov
cmpsb
rep
nop
pusha
push
rorb
xchg
add
mov
lods
les
mov
jecxz
gs
in
lea
ss
mov
ret
shll
ljmp
cs
inc
push
dec
lret
testl
add
jl
push
leave
lret
sbb
std
push
jmp
cwtl
jecxz
mov
pop
jmp
stos
aaa
addb
inc
mov
pop
ficompl
arpl
andl
daa
mov
pop
mov
push
inc
sahf
rcrl
insl
repnz
jbe
test
dec
iret
mov
inc
dec
popf
lret
add
fisttpll
xchg
xchg
mov
xlat
jmp
stos
sub
sbb
ret
pusha
sahf
frstor
je
mov
jb
push
clc
add
lock
js
mov
inc
mov
ss
xchg
cwtl
xchg
out
testl
sbb
ljmp
push
mov
orl
or
div
xchg
sbb
fwait
repz
imul
fcmovu
cmpsl
out
push
push
and
dec
out
jo
inc
lods
xor
jmpw
mov
adc
mov
sbb
mov
jb
and
dec
xchg
inc
out
inc
or
fucomp
fwait
jmp
addr16
arpl
dec
jne
aas
mov
out
incb
add
mov
scas
xchg
dec
or
mov
pop
subb
les
addr16
xor
divl
add
repnz
mov
dec
xchg
dec
addr16
push
in
cli
xor
sub
mov
enter
cmp
xchg
cmp
andl
out
or
popf
pop
fucomi
mov
nop
push
push
stos
lods
mov
and
xor
dec
jle
movsl
push
lret
adc
xor
orb
xchg
mov
jle
or
inc
sbb
or
outsl
lock
inc
jbe
das
fimull
aas
xchg
xor
push
sbb
repz
imul
pop
ljmp
adcb
mov
shl
lret
sahf
int3
aaa
inc
int
ret
jge
sbb
and
or
movsb
mov
pop
xlat
mov
fisubrs
lret
sub
cmp
jo
jbe
scas
push
cmpsl
jecxz
add
jae
xchg
popl
jbe
sub
in
mov
daa
into
lret
lods
mov
cmp
dec
mov
loop
movsl
or
cs
out
xor
add
popa
lret
push
fldenv
xchg
inc
sub
cltd
pop
xchg
js
std
ja
inc
jo
push
or
loope
scas
mov
cmp
jb
enter
cmp
adc
in
adc
mov
cltd
xor
les
pop
xor
out
pop
popf
in
or
ret
ds
lcall
enter
dec
sub
add
cmpsb
int
rolb
sbb
adc
addl
sbb
mov
lcall
outsb
mov
cmp
dec
sahf
xor
scas
shl
lret
jb
xor
push
mov
mov
add
loope
int3
nop
shlb
outsl
outsb
in
push
loop
push
inc
stc
adc
insb
adc
jl
cmp
sub
lods
cmova
fdecstp
stos
xor
mov
or
inc
or
fdivs
test
cli
loopne
cli
js
dec
addl
in
imul
pop
insb
data16
test
cmp
jne
das
adc
sub
shll
xchg
mov
mov
vpshufhw
in
test
nop
cmp
jo
and
mov
repz
mov
lea
or
sub
sbb
xor
jmp
imul
sahf
jb
adc
test
fsubl
aas
sbb
jb
or
je
dec
daa
jecxz
and
dec
jne
std
cld
mov
sahf
ds
and
popf
addb
lcall
pop
jge
xorb
or
mov
pusha
test
shr
dec
imul
dec
lea
push
sbb
stos
push
cmpsl
int
sbb
inc
fbld
mov
xor
jb
fwait
lret
jae
popf
mov
add
dec
fistps
notb
shrb
push
sub
cmp
ret
out
jle
imull
insl
fstpl
out
call
ljmp
lret
mov
mov
pop
add
in
push
ror
adc
add
pop
cltd
pop
jmp
xor
jns
test
ds
inc
test
in
xchg
loopne
mov
hlt
rcll
pop
adc
mov
xchg
add
push
xchg
jmp
sbb
or
adc
xor
test
testl
sub
xchg
pop
dec
jp
push
jge
cwtl
or
fstpl
push
data16
jp
mov
daa
cmpsb
out
fst
xchg
bound
dec
sbb
pop
movsb
or
fldenv
pop
or
bound
mov
cmp
sbb
and
dec
dec
adc
pusha
aad
cmp
fnstsw
sub
imul
xchg
lock
out
je
subl
push
iret
jmp
stos
and
shrl
jnp
cmp
push
adc
mov
loope
add
pop
mov
mov
stc
xor
popa
popf
push
or
pop
push
cmc
xchg
sbb
xchg
mov
jle
jmp
jge
movsl
cs
scas
scas
in
add
push
jecxz
rclb
lods
repnz
mov
adc
ja
repnz
add
outsb
cmp
lret
jnp
cld
lcall
xchg
mov
add
jl
pop
push
adc
fmulp
loop
xor
mov
scas
cmc
std
and
pop
mov
and
cmpsl
push
nop
cmp
in
int3
dec
and
mov
out
mov
loopne
jno
jl
jl
movsb
test
sub
imul
and
adc
or
pushf
adc
fsubrs
imul
lods
test
pop
jg
inc
push
push
sbb
fldl
ja
adc
xor
jmp
repz
mov
shll
mov
sti
jb
add
xchg
mov
ror
jno
out
test
jae
lcall
cmp
sub
mov
ret
test
inc
xor
scas
jg
jae
mov
ljmp
movsl
dec
enter
adc
jno
sarb
or
sub
lret
mov
enter
push
cmp
xor
loop
xlat
out
lcall
ret
cld
outsl
dec
inc
clc
loop
ret
popf
stc
leave
stos
fs
and
cmc
and
jnp
pop
lods
cmpsb
mov
mov
aam
out
adc
pushf
xor
cmp
pop
test
addr16
dec
mov
add
pop
pop
insl
xor
adc
inc
imull
and
imull
add
sub
sbb
mov
outsb
out
sub
imul
sti
pop
test
xchg
inc
stc
aad
ret
push
jmp
dec
xchg
jg
inc
xor
push
fldcw
les
popa
iret
repz
pop
xchg
jmp
or
cmpsl
jnp
mov
cltd
pop
pop
lds
pushf
inc
mov
jmp
scas
sahf
cs
mov
push
inc
sahf
lret
pop
aas
mov
push
rorb
bound
pop
jecxz
mov
sar
mov
sbb
mov
lea
pusha
orl
popf
sbb
mov
cmp
lock
xchg
das
in
sub
pop
mov
and
js
shll
repz
sub
mov
inc
cmpsl
int3
xchg
jnp
jns
stos
icebp
mov
sti
cld
popf
sbb
mov
cmp
mov
adc
cmpsb
dec
sub
scas
push
es
mov
shl
clc
js
repnz
sahf
jno
ljmp
icebp
lods
mov
cmp
jl
adc
lods
and
dec
jp
pop
xor
test
and
notb
insl
dec
movsl
inc
mov
xchg
pop
cmp
push
inc
ret
sbb
stos
mov
mov
add
mov
or
xor
xchg
fcoms
xchg
es
call
std
arpl
jne
inc
adc
in
or
push
repz
dec
mov
push
test
sbb
mov
xchg
sti
jns
jl
in
mov
enter
mov
sbb
int3
or
push
addr16
and
es
mov
mov
mov
sahf
mov
cmp
xor
add
in
mov
mov
mov
clc
dec
addl
out
mov
stos
arpl
cmpsl
cmp
push
push
add
stos
xchg
or
insb
test
jnp
xor
movsl
dec
ss
pop
hlt
dec
adc
add
xor
dec
inc
and
dec
push
int
pop
or
gs
cmp
ljmp
loop
push
sbb
or
xchg
mov
add
fisubrs
shrb
cmc
repnz
leave
mov
hlt
cmp
add
inc
sar
add
sbb
jl
or
das
pop
int3
jp
addr16
xor
out
jne
leave
pusha
jo
out
scas
aam
or
sub
mov
inc
cmpsb
jbe
test
in
mov
cs
daa
int3
cwtl
insb
cmp
pop
dec
jno
fldcw
jl
adc
dec
lcall
movsl
pop
ja
and
int
lahf
and
test
test
outsl
pop
and
cmpsb
cmp
aam
push
js
sahf
ja
mov
mov
loope
jns
sub
lret
pushf
cmp
ds
mov
adc
lcall
andb
sbb
add
add
mov
icebp
mov
popf
mov
shrb
testb
sub
int3
push
cwtl
inc
mov
and
sub
aad
test
es
mov
data16
pop
outsb
mov
lock
pop
and
xchg
je
aad
sar
fadd
mov
jp
out
fld
pop
mov
bound
popa
mov
pop
into
sbb
outsl
sub
dec
loop
lods
lods
stc
adcb
fs
dec
adc
adc
imul
stos
lahf
inc
cli
aas
cmc
xchg
xor
dec
cmp
add
into
sahf
sahf
andl
out
pop
mov
das
adc
fisubrl
imul
inc
jne
jl
pop
sbb
lds
xor
dec
push
mov
in
cmp
xchg
mov
aad
aas
push
nop
icebp
aam
dec
lock
inc
inc
push
cmp
pop
sahf
les
mov
repz
dec
aas
xchg
scas
sbb
shlb
xor
adc
push
das
adc
xchg
adc
or
pop
cs
hlt
inc
and
xchg
aas
pop
fdivl
add
pushf
dec
vhaddps
lret
jecxz
popf
dec
push
mov
dec
sub
cmp
xorl
jo
push
fcmovne
ret
popf
pop
ret
iret
scas
mov
and
lock
cs
call
mov
repnz
imulb
xchg
insl
cmpsl
add
dec
lcall
mov
pusha
push
aad
enter
push
sub
mov
scas
mov
xor
add
adc
mov
jl
out
push
jne
ret
or
fistl
fucom
inc
clc
clc
mov
out
xchg
mov
mull
arpl
cmc
jne
mov
lahf
adc
cmpsl
push
mov
stos
add
cltd
int
pop
test
leave
outsl
mov
dec
in
inc
add
sub
test
sbb
xchg
sbb
xor
inc
pop
imulb
sbb
add
mov
add
xor
arpl
ret
mov
xor
mov
mov
mov
mov
jmp
aam
stos
movsb
mov
lret
dec
fstpl
dec
imull
mov
mov
out
fwait
mov
jns
push
mov
xchg
cmp
mov
adc
sub
jns
mov
sub
jp
in
mov
push
mov
mov
jb
in
xor
pusha
or
push
fistps
and
xchg
test
mov
xchg
daa
push
loope
rorl
push
out
cli
xchg
popf
sarl
mov
dec
mov
mov
out
iret
insb
lock
fidivrs
mov
lahf
mov
cwtl
iret
lahf
sti
stos
ret
mov
inc
cs
jbe
lods
push
out
or
loopne
stos
inc
repz
or
loopnew
xchg
cmp
inc
sbb
push
stc
imul
inc
lds
ffree
ja
mov
sub
mov
hlt
mov
popf
inc
testb
adc
fbstp
sbb
icebp
mov
mov
lcall
popa
icebp
ficoms
dec
xor
inc
mov
sti
and
mov
movsb
aaa
pop
enter
ja
nop
adc
lcall
daa
lret
lds
inc
mov
sbb
mov
push
test
jno
and
pushf
ss
inc
pop
popf
push
jle
cmp
cmp
push
inc
aad
mov
pop
sti
inc
cmp
dec
dec
pop
std
fwait
jno
ret
sbb
loope
xchg
and
xchg
pop
cmp
gs
sbb
jne
dec
xlat
mov
jno
imul
mov
pusha
hlt
or
aas
xchg
data16
push
lcall
mov
sub
fcmovb
test
imul
pop
shll
jle
movsl
mov
mov
and
fldenv
push
ja
fs
addb
in
rolb
shl
xchg
mov
mov
sahf
sbb
add
xor
gs
outsl
or
add
stc
aaa
cmp
cmp
bound
add
sub
test
out
lods
mov
xor
adc
mov
or
pop
into
addl
loopne
jnp
pop
stos
lahf
sbb
xchg
mov
ds
and
sbb
jbe
gs
scas
cmp
jg
xlat
in
pop
sub
push
lock
movsl
push
insb
sti
mov
enter
and
dec
dec
jl
inc
pop
clc
das
fsts
push
out
adc
cmp
popf
adc
mov
jg
rcrl
pushf
xchg
dec
enter
mov
inc
test
in
aas
notl
jb
jl
dec
cmp
jp
movsb
and
push
sarl
icebp
mov
cwtl
iret
xchg
mov
cmpb
jl
mov
das
mov
mov
outsl
push
lock
outsl
sbb
mov
test
rcl
rcl
divb
xor
dec
xchg
arpl
cmpsl
lret
mov
aaa
call
out
rcr
mov
jae
mov
push
mov
shl
sbb
lahf
aam
nop
out
ret
pushf
mov
cmp
push
xchg
clc
out
sbb
ljmp
subb
add
xchg
mov
out
push
arpl
jae
jg
rcrb
push
shll
and
dec
jae
mov
repnz
sbb
and
clc
pop
mov
addr16
add
mov
jnp
xor
wbinvd
cmp
xchg
xor
cmp
daa
xchg
dec
mov
pop
in
mov
pop
js
push
imul
mov
dec
fwait
cmpsl
sub
out
sub
xor
jp
pop
bound
cmp
lret
out
sub
mov
mov
or
sub
jp
int3
fidivs
sahf
movb
jl
sbb
in
mov
pusha
cmpsb
sub
add
jl
fucomip
nop
shl
xchg
repnz
andl
out
fimuls
mov
mov
jmp
jns
xor
std
call
sarl
xchg
jle
rorl
cmp
cmc
iret
std
out
jecxz
mov
and
inc
cmp
ret
jae
push
repz
push
lea
push
jb
in
ficompl
jle
xchg
nop
loopne
sbb
jno
imul
scas
xlat
push
clc
mov
mov
jle
or
ja
ret
cmp
arpl
dec
dec
inc
fldcw
jge
lar
sub
sbb
jo
call
int3
push
leave
stos
pop
xchg
das
mov
mov
loop
push
cld
inc
jo
cmpsl
jp
xchg
sbb
cmp
push
scas
movsb
ret
push
jge
cmc
jbe
adc
addl
lret
cmp
pusha
jno
cmp
dec
js
imul
xchg
in
and
add
bound
push
pop
xchg
test
add
dec
shlb
call
js
mov
push
xor
and
daa
sub
xor
ds
movsl
xchg
adc
push
fimuls
orb
rolb
jl
xor
movsb
mov
cmpsb
push
dec
sub
jmp
lcall
je
jbe
jo
mov
xor
dec
cmp
jg
pop
cmc
mov
shll
mov
pop
arpl
jo
push
jp
scas
cmp
cmp
aas
imull
mov
rorl
ljmp
and
cmc
call
push
subb
or
xchg
sbb
stc
out
add
fs
adc
push
mov
icebp
sbb
out
aas
sbb
movsl
ret
outsl
xor
mov
orb
mov
into
fs
gs
jle
loopne
and
pop
lret
adc
shrb
sti
adc
pop
sti
add
pop
push
sbb
cmp
pop
xlat
sub
mov
in
adc
fsincos
insb
ret
ret
ja
aad
data16
scas
sub
insl
shlb
int
xchg
les
dec
mov
xchg
xor
lock
cmp
xor
pop
adc
mov
inc
sarb
jmp
shr
xor
popa
aas
xchg
push
in
jb
pop
mov
push
int3
je
push
ljmp
and
mov
push
jnp
imul
jno
sub
pop
or
fdivp
dec
fs
das
orb
mov
or
shll
push
hlt
jg
insl
jne
pop
dec
nop
push
pop
cmpsl
leave
pusha
popa
mov
push
lahf
jb
push
mov
lret
das
dec
pusha
mov
inc
and
mov
xor
sub
cltd
aam
mov
add
fnsave
cmpsl
jg
pop
out
pop
ljmp
lods
lret
mov
mov
in
fstl
lods
ret
pcmpgtd
and
test
or
sub
daa
popa
dec
fisubl
jno
jno
std
sbb
call
into
stos
test
out
inc
mov
add
push
pop
stc
fidivs
popf
adc
in
xor
push
ret
test
bound
lahf
ja
dec
sub
icebp
cmp
or
mov
lea
xchg
pop
stos
jne
dec
fs
xchg
movsl
out
pop
push
inc
fdivrl
mov
xchg
fdivrs
add
outsl
pushf
mov
jp
addr16
bound
jge
mov
and
mov
push
pusha
inc
pusha
push
fistps
jnp
dec
xor
xchg
mov
inc
into
out
xor
std
mov
lret
fs
in
add
and
and
or
or
push
jmp
push
sub
cmc
jbe
pop
add
ret
push
pop
jmp
test
jae
or
push
adc
or
in
inc
icebp
or
xchg
out
and
xchg
arpl
imul
scas
cmp
push
lds
inc
sar
lahf
mov
shll
hlt
push
sub
arpl
push
cs
fmull
jge
out
icebp
sbb
mov
aaa
fwait
add
arpl
inc
add
sahf
inc
int3
cmp
inc
pop
ret
ficomps
pop
xor
clc
movsl
push
scas
jno
inc
and
inc
push
cmp
loope
push
int3
cli
push
jbe
mov
in
push
push
jb
leave
stos
stos
cmp
add
mov
push
outsl
movsb
std
movsl
sub
sub
or
lahf
adcl
test
rcl
in
repz
pop
dec
lcall
jnp
mov
loope
aaa
or
movsb
into
cmp
lods
ret
or
adc
sub
xchg
pop
sbbb
pop
add
jb
xor
ds
out
movsl
int
hlt
aad
xchg
rolb
pusha
ficoml
and
sub
loope
jae
iret
test
in
andb
jg
pop
push
mov
fdivl
mov
mov
bound
and
push
jecxz
mov
nop
fdiv
sbbl
and
in
mov
jmp
sahf
arpl
push
cmc
scas
cwtl
dec
xor
lret
dec
loop
mov
xor
push
adc
sti
imul
inc
push
jo
in
add
out
push
dec
cli
fdivrs
mov
fucomip
mov
and
into
inc
data16
gs
sbb
loopne
loope
pop
jmp
shll
adc
sub
add
and
add
and
cmp
pop
xlat
push
scas
sub
mov
test
pop
sbb
aad
cmove
or
faddl
add
pop
les
mov
xchg
testl
popf
call
mov
repz
daa
cmp
adc
sub
jmp
xchg
cs
stos
jo
mov
stos
inc
or
aas
xor
jbe
dec
sub
je
adcb
aad
pop
or
fstpl
jp
out
mov
subl
push
inc
pop
lods
sbb
lock
insb
mov
popa
testb
repz
lcall
jg
divb
das
mov
pop
cmp
enter
mov
or
in
push
cld
dec
loop
lret
sahf
xchg
and
push
pop
test
xchg
mov
rorb
xor
mov
xor
xchg
fstpl
clc
fs
jae
lcall
popa
inc
mov
mov
or
outsl
xchg
inc
dec
movsb
push
sbb
pextrw
or
cltd
jb
mov
mov
lahf
pop
push
dec
test
test
inc
adc
sbb
ja
enter
mull
stos
je
add
movsb
jae
add
icebp
fcmovbe
cld
jp
xor
xor
or
jae
xor
inc
out
mov
jle
lds
aam
sub
dec
cmp
sbb
xor
fwait
add
ja
jne
jl
mov
mov
pop
bound
cmp
andl
pop
mov
sbb
mov
sub
jp
mov
mov
inc
sbb
lret
mov
in
in
mull
cmpsb
add
js
addr16
and
jmp
mov
cmpl
out
add
popf
inc
and
mov
or
lock
inc
cld
insb
xor
jle
or
je
adc
lock
iret
mov
xchg
push
pop
and
inc
dec
jp
jae
repnz
push
scas
or
push
imul
adc
xchg
ds
sbb
sub
scas
popf
fildl
rclb
ds
and
cmp
gs
enter
sub
test
jge
mov
sbb
movl
jbe
int3
es
outsl
pop
icebp
pop
mov
xor
push
mov
jne
je
sarb
sbbl
sbb
movsl
in
dec
out
stos
enter
daa
enter
fists
mov
shll
dec
push
or
push
push
cmpsl
mov
xor
int3
lahf
mov
xlat
leave
test
fwait
ret
xorb
pop
jo
out
add
jne
mov
jl
loope
mov
push
jg
jns
lcall
rolb
xor
hlt
push
cltd
subb
scas
add
mov
cmpsl
test
jns
sub
sub
pop
xor
ja
or
mov
fmul
cmp
insb
aaa
xor
mov
dec
cmpb
jg
pop
out
cltd
sbb
mov
pop
or
imul
orb
cmp
mov
dec
imull
jb
lret
add
mov
pop
mov
sahf
push
bound
jbe
add
or
outsl
test
mov
stc
pop
test
adc
cwtl
ss
lods
sub
mov
sbbl
or
xor
ficomps
into
sub
and
sbb
loopne
mov
pop
or
in
or
imul
stos
mov
dec
fisubs
repnz
mov
sbb
test
orb
out
mov
lret
incb
pop
aad
sbb
nop
pop
inc
in
dec
insb
xchg
int3
inc
xchg
sbb
fnstcw
jecxz
les
repz
mov
push
out
call
das
jp
pop
ficompl
mov
jmp
cli
and
dec
mov
inc
ds
xchg
mov
push
jb
ret
mov
in
mov
jg
push
pusha
and
std
out
mov
mov
test
mov
xchg
addl
jno
mov
pop
dec
outsb
push
mov
mov
lock
into
mov
stos
jae
and
shrb
jp
jecxz
inc
sbb
cmpsl
shrb
js
arpl
mov
or
lret
or
movsb
ss
lock
mov
lock
fisubrl
pop
push
adc
sbb
ret
dec
push
jl
or
or
lahf
jnp
xchg
flds
repnz
pop
out
subl
jg
sub
repz
hlt
adc
mov
cltd
test
mov
ss
or
dec
test
loope
dec
jns
xchg
test
out
xchg
rcrl
or
mov
sbb
out
pop
dec
inc
add
or
xchg
lcall
lea
or
lds
and
xorl
in
mov
orl
es
pop
inc
ja
mov
fmuls
out
mov
ret
cltd
out
pop
das
popf
bound
sub
jns
or
in
das
les
imul
popf
pop
jo
gs
adc
jp
mov
clc
mov
leave
cmp
dec
pushf
mov
pop
pusha
ja
mov
xchg
and
jmp
push
or
orl
inc
popf
insl
into
lea
dec
cmp
rcr
and
cmp
js
and
ja
push
sbb
adc
push
je
sbb
and
test
jae
cmpsl
cmp
pushf
jge
or
int3
test
inc
out
pusha
jb
xor
test
in
ret
aas
push
adc
cmpl
mov
ja
jge
faddl
jne
mov
shlb
xor
loop
pop
jge
push
push
sbb
clc
aaa
sbb
sub
dec
sub
addr16
adc
cmp
mov
shll
scas
fiadds
pop
push
xlat
cmp
setle
jae
jbe
iret
outsl
in
ss
out
mov
pop
jno
lds
or
mov
xor
inc
jo
mov
ja
lret
test
add
adc
dec
cmpsb
lret
pop
xchg
jl
js
int
pop
stc
mov
ja
imul
cmp
bswap
ds
call
bound
shll
inc
xor
out
sub
insb
imul
fnclex
mov
mov
push
pop
scas
mov
lcall
mov
sub
sub
js
test
push
jg
fs
mov
mov
mov
jl
addr16
into
je
xorl
add
neg
insb
dec
div
call
clc
cmp
push
aas
das
mov
xchg
xchg
dec
pop
ficompl
cmp
fwait
jle
xchg
addr16
adc
fs
xor
sahf
xchg
jg
or
cli
jnp
loop
sub
cmpsb
or
mov
jle
lret
cmpsl
or
pop
cmp
or
jnp
loopne
xchg
sbb
daa
test
adc
into
inc
imul
mov
push
mov
or
push
sbb
in
xchg
push
xlat
call
mov
dec
in
push
xchg
sub
gs
xchg
lret
movsl
nop
inc
cmpsb
nop
push
fnstenv
jg
pop
daa
iret
repz
fsubrl
jge
int
aad
imul
scas
sub
lea
in
inc
pop
pop
jmp
and
mov
outsb
inc
lds
inc
or
aas
jae
js
mov
scas
push
je
lods
jno
mov
or
arpl
push
cwtl
mov
jecxz
mov
push
sbb
pop
std
mov
mov
push
pop
mov
xor
popa
push
sti
and
std
repnz
cmp
idivb
xlat
addr16
add
movsb
mov
xchg
fwait
cmp
lahf
or
jl
inc
mov
xchg
out
and
mov
repnz
jge
sub
jno
dec
inc
mov
mov
clc
fcmovb
and
enter
jae
fisubrl
loop
mov
sar
jnp
iret
call
inc
add
lods
ds
loopne
xchg
test
add
into
pushf
mov
test
inc
jne
out
add
sbb
shlb
pop
dec
add
stos
push
xor
add
daa
pop
loopne
cmp
sbb
push
jl
xor
lcall
test
xchg
pop
jne
dec
inc
cmovp
shll
bound
push
jnp
add
push
es
clc
clc
out
mulb
test
adc
in
inc
mov
mov
adc
test
mov
es
les
jno
mov
jns
mov
cmp
dec
jg
mov
pusha
adc
fbstp
scas
loopne
insb
movsb
inc
xchg
push
or
out
hlt
mov
mov
mov
stos
inc
aam
and
inc
insb
pop
leave
jnp
sub
loopne
add
mov
cmpsb
shlb
das
jle
pop
mov
inc
gs
and
mov
inc
or
inc
xor
inc
outsb
shll
out
cs
in
dec
lahf
sbb
xor
imul
mov
arpl
inc
rorb
mov
lret
leave
push
inc
jge
in
mov
inc
in
mov
popa
loop
sbb
aad
aaa
fadds
add
xor
adc
fiadds
sub
or
scas
push
into
mov
lcall
movsb
out
fwait
pushf
push
mov
mov
pushf
enter
daa
cmp
mov
jl
sbb
push
sbb
ljmp
push
inc
test
xor
sbb
mov
pop
je
cmp
jge
jle
inc
sub
lock
cmp
cmpsl
loopne,pt
sub
sarb
es
mov
jl
push
add
dec
fnsave
lret
cli
mov
das
jmp
int
xor
sub
mov
cmp
push
mov
lods
lahf
sub
mov
test
sub
mov
cld
jg
jo
mov
xor
mov
les
mov
and
jne
push
xchg
out
stos
cmp
fsubs
xchg
push
mull
jbe
shr
and
cmpsb
in
dec
outsl
cmp
add
mov
rcr
outsl
sbb
loop
push
stc
lret
fs
lret
in
enter
push
imulb
fnstsw
dec
out
scas
inc
cli
jno
fbstp
push
fstpl
cmp
inc
xchg
or
ret
rol
arpl
loopne
mov
adc
pop
sub
stos
jge
in
data16
sbb
daa
dec
mov
daa
xor
pushl
in
int
mov
dec
sub
mov
nop
adc
jae
sub
data16
outsb
daa
repz
clc
pop
xchg
inc
std
cmc
lea
jp
add
xor
sub
ja
adc
ss
movsl
push
daa
cs
mov
inc
pop
test
aas
adc
hlt
hlt
test
rclb
movsl
shrl
movsw
push
std
xor
cbtw
jbe
aas
mov
fisttpl
outsl
test
repnz
enter
cmc
dec
mov
rclb
std
cmpsb
das
decb
mov
sbb
shll
cmp
testb
sub
jp
dec
jl
fisubl
fisubs
cltd
icebp
push
xchg
cld
lret
lret
jmp
pop
mov
jp
and
es
pop
pop
out
dec
mov
sub
rcl
push
add
ret
adc
bswap
fst
cmp
clc
adc
and
ljmp
adc
mov
jno
scas
xchg
pop
push
repnz
mov
popf
cltd
pop
mov
xor
xchg
push
and
dec
loopne
inc
mov
adc
dec
gs
int
push
pop
clc
lea
stos
inc
adc
add
inc
fistps
fsts
jae
jmp
mul
xor
ret
sbb
xchg
lock
add
inc
sbb
sbb
or
mov
fwait
xchg
aaa
insb
push
push
mov
jne
pusha
xchg
mov
inc
xchg
aad
push
bound
outsl
mov
in
test
xchg
adc
mov
sub
pop
in
addr16
fsubl
leave
hlt
mov
cmpsl
pop
decl
jno
in
sub
mov
and
arpl
jo
jmp
divb
out
sbb
popf
mov
push
cwtl
push
sbb
ja
jo
xchg
insb
jb
dec
jnp
pop
fdivrl
pop
xchg
push
dec
repz
subl
ret
mov
mov
je
xchg
fists
and
pop
push
in
cltd
push
dec
xchg
inc
mov
loopne
sbb
inc
add
pop
xlat
shrb
mov
sbb
es
hlt
dec
sub
and
outsb
out
or
sbb
or
xchg
test
xor
int3
out
sub
jle
test
xor
addr16
inc
mov
cmp
movsb
jns
imul
push
jbe
out
in
add
lret
das
fsubs
lds
pushl
push
pop
jl
push
jnp
mov
addr16
movsl
dec
sbb
lahf
std
ja
push
jo
stos
test
cld
subb
das
int
cmpsb
sar
minps
out
mov
pop
ja
shrl
and
sub
mov
cmp
jb
mov
lret
adc
sbb
xchg
pushf
xor
fdivrp
int
popa
subl
out
pop
lods
scas
or
stc
inc
cmp
int
adc
outsb
cli
test
out
jg
adcb
xchg
or
jne
std
mov
and
mov
mov
stos
cmp
loop
adc
data16
lret
fcmovnb
orb
mov
jbe
sbb
jecxz
cmc
lret
jae
xor
cs
loop
rcrb
adcl
ss
mov
scas
mov
jae
out
aad
cli
movsb
xchg
xor
sub
or
inc
mov
rcrl
sub
jp
cmp
inc
cmc
adc
cmp
jae
loope
adc
mov
bound
mov
mov
daa
sub
xlat
xchg
mov
stos
das
ret
pushf
cli
nop
out
imul
int3
adc
fchs
adc
les
lahf
repz
push
or
mov
scas
pop
lods
adc
adc
add
shr
xchg
mov
mov
inc
jbe
outsb
aas
mov
push
jb
fsubl
push
jbe
je
sub
jecxz
sub
in
std
fistpl
dec
mov
sub
insl
addl
es
fistl
daa
jbe
popf
jbe
lock
das
ffree
andl
incb
and
je
shrl
je
insl
clc
add
ja
lds
adc
icebp
inc
dec
adc
cmc
or
pop
adc
and
shrl
pop
or
fs
sub
adc
ret
notb
es
lea
clc
push
adc
xchg
xchg
mov
hlt
popa
mov
sarl
pop
mov
xchg
pop
cmp
push
test
sub
inc
pop
pop
add
lret
ja
dec
pop
test
scas
mov
lret
push
test
test
xchg
mov
add
ds
mov
mov
out
xor
adc
pop
mov
js
jmp
or
mov
mov
leave
pop
rclb
ja
lret
xchg
dec
add
repz
cmp
shr
push
sarl
scas
pop
cmpsl
mov
lahf
icebp
out
mov
mov
jns
adc
inc
arpl
arpl
add
or
xor
cli
nop
jp
sti
lret
cmp
aas
mov
sbb
dec
inc
mov
pusha
dec
mov
fcomip
or
jp
pop
out
xchg
mov
cmp
push
mov
popf
loop
pop
mov
push
push
rsm
sub
outsl
and
xor
pushf
jle
add
push
nop
pop
sbb
pop
lods
sub
cmp
ret
push
pop
cld
cmpsl
int
jnp
cmp
push
in
or
cmp
ds
dec
hlt
rcll
xchg
scas
sub
outsb
lds
mov
addl
bnd
sbb
inc
scas
pusha
hlt
xchg
mov
add
cwtl
ljmp
shl
aaa
push
push
iret
or
jl
add
shrl
pop
lods
sbb
mov
jnp
mov
mov
sub
sub
enter
mov
lahf
jge
jmp
add
daa
les
cmp
shr
jl
gs
adc
lcall
aaa
mov
lahf
sbb
movsl
push
inc
aas
ja
mov
mov
lret
js
pop
or
les
aas
sbb
push
sbbl
cmp
pop
sarb
push
aad
add
shlb
fmull
cli
adc
add
sub
xor
scas
mov
sub
adc
sub
mov
popa
lcall
xchg
fdivrl
cld
sub
stos
imul
bound
ljmp
mov
sbb
dec
pop
pop
and
addl
insl
dec
cmp
popf
mull
mov
mov
adc
dec
loop
xchg
shlb
jbe
subl
dec
mov
fs
inc
sub
mov
in
popl
lds
and
cli
xlat
push
js
add
jno
mov
jmp
into
mov
aas
gs
repnz
mov
push
pop
shrl
std
hlt
adc
cli
sbb
add
fstpl
popf
jne
xlat
movsl
mov
dec
mov
xchg
mov
sti
xchg
movsb
aad
cmp
nop
leave
repz
and
fsts
push
in
mov
xchg
mov
or
es
sub
cmpsb
and
adc
adc
xor
mov
inc
xchg
mov
aas
push
adc
jb
testl
jecxz
sub
push
cwtl
in
jmp
mov
sbb
sbb
sbbl
xchg
ss
fisttpl
orb
insb
ret
mov
cmp
mov
dec
scas
and
push
mov
xchg
insl
fildll
dec
jb
inc
cmpsl
ret
out
mov
sbb
sbb
lret
leave
sbb
mov
pop
push
and
pop
jb
shrb
push
aam
jnp
ret
test
ds
pop
jmp
mov
xchg
aad
fsubr
and
mov
mov
in
adc
mov
movsl
jo
push
pusha
fnstcw
push
testb
sub
cltd
test
xchg
test
and
push
jg
push
pop
test
ja
test
pop
adc
mov
cmpsl
sarl
gs
dec
and
out
xchg
inc
rolb
js
lods
call
aas
inc
xor
xlat
mov
adc
mov
cld
cmp
jnp
sbb
xlat
push
inc
arpl
popf
or
out
jbe
lock
pop
pop
jne
inc
shll
xchg
push
cmpb
adc
shl
int3
jno
xchg
mov
cmp
cmp
scas
and
jp
into
push
mov
aad
mov
test
mov
pusha
jecxz
stos
fists
fs
inc
call
xchg
jg
jo
dec
gs
aad
mov
mov
adc
stos
sahf
sti
popf
and
stos
or
ss
jle
in
push
xlat
sub
repz
xchg
jle
ret
adc
xor
inc
xchg
jae,pn
daa
aas
push
test
cld
or
mov
cmp
xchg
icebp
adc
imul
cmp
popf
push
add
mov
ret
fsub
leave
mov
mov
lahf
inc
out
ss
jge
fidivl
aaa
adc
test
es
mov
inc
dec
fisubrs
loop
enter
sbb
scas
stos
ds
cmp
lods
add
xchg
sti
jbe
int3
mov
rcl
mov
daa
ret
mov
repz
jno
jl
dec
cmp
orl
movsl
push
push
lock
mov
shrl
xchg
dec
in
dec
fimuls
pop
xor
nop
js
mov
pop
cmc
adc
sbb
ret
jge
sub
mov
cmp
add
ds
je
adc
dec
call
xor
and
flds
sbb
js
mov
sub
jb
stos
out
lcall
loope
and
push
lds
test
mov
jg
stos
inc
mov
pop
ja
ss
int3
mov
pop
pop
and
pop
push
mov
fidivl
in
xchg
lret
pop
shrl
adc
or
fcomps
pop
mov
outsl
add
mov
fs
clc
push
adc
cli
or
lods
lods
stc
mov
mov
cmp
xor
outsb
pop
cmp
adc
mov
mov
gs
xor
mov
sbb
lock
adc
cmp
in
push
add
pop
inc
sbb
fsubr
xchg
xlat
in
xlat
sub
enter
loop
std
adc
xor
icebp
popa
aad
cmp
nop
movsb
xchg
js
inc
psubw
push
xchg
les
jecxz
xchg
mov
test
call
stos
or
adc
mov
jmp
push
cs
add
outsb
dec
aas
out
imul
dec
hlt
int3
in
je
mulb
lret
outsl
push
std
std
sub
ss
cmpsl
xchg
add
hlt
xchg
mov
and
dec
mov
fcmovu
jae
lahf
pop
jle
lds
movl
mov
cmp
cmp
test
mov
adc
ja
test
out
mov
cld
dec
dec
add
cmp
dec
mov
jecxz
mov
dec
getsec
sarb
xchg
sub
sbbb
xchg
ret
adc
dec
es
pushw
fldl
cmp
lods
loop
adc
test
xchg
stos
mov
iret
mov
mov
ficompl
sub
push
cmp
rorb
call
pop
cltd
mov
push
inc
mov
js
push
fidivrl
fimuls
bound
mov
fadds
data16
adc
push
aaa
pop
stc
sub
stos
push
aas
pop
out
mul
xchg
xchg
xchg
loope
mov
jnp
loop
add
repnz
sub
outsb
xor
sti
mov
ss
ja
mov
pop
int
cli
jb
or
pop
ret
fwait
pop
mov
xchg
jne
leave
xorl
loope
loop
lret
lahf
inc
in
aam
xchg
add
mov
push
sub
dec
lods
pop
and
jp
push
das
mov
xchg
sbb
xlat
sbb
in
out
pop
pusha
jle
xor
and
xchg
dec
push
roll
pop
dec
lea
cmc
cltd
imul
ljmp
mov
fs
mov
fdivrs
insb
ljmp
popa
adc
call
sbb
jnp
sti
pop
push
cmp
divb
xor
jae
or
xor
fidivl
repz
das
in
imul
mov
out
cmp
lds
jge
mov
mov
repnz
inc
enter
repnz
sub
js
push
or
pop
jge
hlt
rcrl
sbb
aaa
aam
jb
or
pop
int3
test
mov
or
or
iret
into
cld
xor
jne
mov
mov
shlb
out
push
cmp
sub
cmc
inc
fwait
jbe
insl
clc
in
mov
es
daa
ret
cmp
les
jno
xor
jge
lock
cmp
inc
insl
loope
pop
mov
out
test
pop
xor
fmull
pop
lds
pop
enter
jo
pop
xor
add
into
cmp
loope
fdivl
sub
in
out
cmp
xchg
shrb
adc
rolb
lret
fldl
pop
outsb
xor
into
adc
cmp
int
dec
inc
sub
aam
pop
sub
arpl
adc
push
std
ret
outsb
sub
push
test
cld
jge
and
mov
mov
test
sub
xchg
xlat
fdivrs
adc
mull
jbe
roll
mov
mov
sahf
fdivr
and
xor
pop
outsl
loop
pushf
loop
stc
push
stc
cmpsb
imul
adc
ds
ss
cwtl
dec
lods
xchg
xor
mov
cltd
outsl
out
pop
ret
cli
cmp
cmp
cmp
add
or
pop
into
jl
sbb
loopne
cmp
adc
xlat
imul
add
lret
aad
lcall
cmp
lock
xlat
and
sub
into
inc
mov
push
adc
adc
sub
inc
mov
rorb
xor
inc
add
add
repz
xchg
dec
clc
inc
fadds
jno
lock
fs
sub
pop
or
aaa
adc
jo
pushf
cltd
fstl
jmp
data16
mov
out
inc
cmp
aas
mov
adc
lret
imul
rcrl
jecxz
stc
cmp
jb
fscale
rclb
adc
mov
mov
fsubp
or
adc
pop
and
repnz
pusha
das
jp
repz
hlt
dec
and
sbb
push
testb
insl
lods
in
cmc
dec
push
mov
mov
gs
cld
jbe
or
sbbl
mov
push
xchg
push
inc
add
and
aam
inc
mov
mov
xorl
clc
add
sub
pop
cmp
popa
out
mov
and
mov
xor
ret
xor
add
jg
cltd
repz
jns
ret
mov
mov
push
popf
adc
or
das
fimuls
sbb
inc
jge
sub
and
stos
std
sub
out
pop
ja
add
scas
cmpsl
or
push
jbe
xor
dec
aaa
xor
mov
mov
xchg
ficoml
mov
icebp
lock
dec
fiadds
jbe
stc
popf
ret
fwait
dec
movsb
push
push
stos
std
cmpsb
jne
mov
mov
das
dec
out
push
push
mov
jns
fdivrl
in
mov
std
bound
sub
inc
insb
lock
dec
jp
xchg
lea
and
mov
arpl
pushf
dec
out
xorb
negl
fists
push
out
fldl2t
aas
xchg
adcb
xchg
out
inc
call
mov
ret
push
lcall
arpl
insb
push
wrmsr
jnp
push
jle
test
push
gs
rcll
in
mov
cmp
mov
cmp
pop
inc
jae
jle
push
cs
scas
dec
sti
inc
jmp
lods
pop
xchg
lahf
idiv
sbb
rolb
push
lret
stos
sbb
cld
mov
imul
push
hlt
jbe
into
arpl
add
hlt
into
mov
movsb
repz
rcrb
or
push
in
xchg
mov
adc
jecxz
fidivs
xorb
push
and
jns
xchg
push
aad
movsb
movsl
or
push
jbe
addl
gs
aaa
daa
shl
cmp
jno
push
adc
dec
pop
xor
je
fs
and
add
lahf
jns
jl
mov
nop
mov
inc
imul
cmpsb
fcompl
aaa
js
out
pop
jae
dec
push
test
loope
pop
mov
cmp
out
mov
rolb
push
xchg
xor
mov
push
fidivl
sub
xor
out
sub
les
test
movsl
arpl
sahf
sbb
jns
xor
outsb
mov
lods
ljmp
movsl
out
mov
jle
mov
add
mov
push
xchg
mov
jno
into
xchg
xchg
mull
push
lret
cmp
mov
mov
sahf
jnp
mov
out
sbb
xchg
outsl
rcrl
stc
pop
clc
sti
fs
aam
js
xchg
lahf
lret
jp
mov
mov
mov
xor
ret
fwait
dec
dec
into
pop
adc
int
out
inc
pop
loope
ss
cmpsl
dec
imul
testl
sbb
aad
cmp
bound
or
ds
out
push
movsb
in
rorl
xchg
insb
enter
sub
nop
pop
or
inc
sbb
dec
les
jg
xchg
mulps
call
test
dec
pop
mov
xchg
pushf
inc
fstps
cs
mov
out
sub
dec
aas
sub
and
je
adc
jecxz
vshufps
std
ja
mov
mov
lock
hlt
dec
dec
andl
aaa
fcmovnbe
test
mov
cmc
jge
push
das
pop
int
mov
stos
add
xchg
shr
shrl
insl
xchg
add
dec
arpl
test
popf
pusha
repnz
mov
fcmove
mov
js
call
cmp
pop
mov
shlb
adc
or
adc
sahf
paddq
xchg
ss
cltd
icebp
xchg
xchg
inc
adc
jp
lahf
popa
std
mov
lods
mov
cwtl
mov
jp
int3
push
icebp
jge
bsr
xor
cmp
lock
test
mov
xor
rorl
in
test
pop
fildl
int3
cmp
roll
mov
pop
out
mov
cmpsl
mov
leave
lret
aam
hlt
pop
sub
mov
xorl
jae
mov
in
xchg
ja
mov
lods
arpl
ja
adc
inc
sub
daa
fwait
jge
fs
dec
mov
ss
fmull
out
xor
stc
jns
mov
sbb
inc
iret
enter
in
or
push
addr16
mov
sbbb
dec
xor
dec
shll
insb
pusha
mov
jno
jo
mov
jmp
loopne
fadds
pop
lods
int3
popf
jle
scas
mov
add
stos
divl
and
inc
cmp
sarb
xor
inc
je
lods
repz
jae
iret
mov
int3
ret
lcall
and
inc
cmpsl
repnz
jae
adc
push
icebp
xor
or
sub
inc
push
push
rclb
lcall
scas
mov
mov
xor
pusha
shr
sarl
mov
xor
hlt
rorl
jo
stos
inc
test
push
sbb
imul
sbb
xchg
cs
int3
jle
js
imul
xor
sub
or
or
push
pop
fistpll
xor
jg
xchg
ja
jbe
or
in
xchg
enter
daa
sarb
mov
arpl
cs
into
outsl
and
push
leave
movsl
imul
and
cmp
out
test
repz
inc
inc
cli
cmc
mov
pop
loop
pop
test
bnd
lock
pop
mov
cmp
mov
je
or
sbb
in
cmp
xorl
rcr
stos
push
in
cmp
addb
sbb
mov
stos
xor
insl
int3
int
mov
sub
push
inc
pop
sub
les
lods
dec
in
and
mov
outsb
out
std
adc
xor
jne
push
test
jg
or
mov
inc
mov
xchg
repz
cwtl
adc
cmp
mov
and
jp
dec
cs
shll
mov
push
sbb
ja
cmc
scas
jbe
outsl
mov
js
stc
adc
scas
xor
adc
ss
mov
mov
dec
inc
cli
mov
inc
cmp
push
mov
into
inc
xor
or
addl
mov
imul
mov
add
push
or
sbb
mov
and
mov
jmp
outsb
sahf
mov
ds
xchg
sti
inc
mov
pop
mov
lods
nop
xor
mov
fpatan
sub
les
mov
lea
cltd
data16
daa
pop
adc
jmp
gs
out
test
jmp
stos
ret
cs
push
inc
jbe
pushf
inc
std
or
mov
jb
insb
ds
pop
popf
xor
push
jecxz
aad
js
daa
std
push
pop
sbb
xor
pop
mov
outsl
testb
daa
sub
add
pop
imul
orb
das
cmp
mov
bound
and
fsubrl
cs
xchg
mov
aaa
dec
pop
cmp
cmpsl
mov
pop
fcomi
je
xchg
cld
int3
sub
iret
mov
lods
and
enter
test
adc
xor
mov
fcomps
ret
shrl
fnstsw
in
in
xchg
shrl
ljmp
lds
add
xchg
shll
push
int3
fsubrl
add
sbbb
adc
push
and
cmp
addr16
sbb
test
xlat
xor
scas
stos
fistl
out
pop
jp
add
in
repz
lahf
mov
xor
lahf
mov
xchg
and
aad
subl
mov
or
popf
lahf
fwait
lods
bnd
lock
daa
jne
mov
mov
sahf
sbb
bound
inc
jge
clc
repz
xchg
out
mov
scas
stc
sub
cmp
ds
mov
pushf
pop
mov
inc
xor
dec
mov
arpl
nop
xor
xor
in
xchg
lea
jmp
stos
cmp
addl
push
movsl
das
mov
cmpsb
dec
repnz
inc
sub
stos
push
das
and
inc
inc
insb
hlt
ret
cmp
movsl
insl
jle
repnz
push
or
and
ret
jnp
divps
inc
mov
cmp
out
push
mov
cs
movsb
sub
out
push
xchg
dec
insb
lcall
adc
ffree
mov
sub
cmpsb
repnz
leave
xchg
out
jl
or
nop
arpl
fiadds
ss
repnz
mov
aaa
adc
or
add
lds
pop
cwtl
xchg
sub
xor
xchg
lock
daa
bound
lahf
movsl
sub
mov
and
push
loop
jecxz
mov
sbb
outsb
xor
pop
push
movsb
daa
mov
sbb
jno
pop
mov
bound
add
outsb
sub
dec
movsl
imul
mov
pop
push
bound
mov
mov
xor
pop
iret
movsl
xor
fs
icebp
mov
push
fwait
loope
shrb
cmp
je
adc
mov
in
sub
pop
out
xchg
sbb
test
xor
test
loop
adc
mov
arpl
jmp
cmpsl
test
lcall
fs
iret
sub
shll
testb
inc
push
mov
outsl
and
mov
jbe
push
fmul
cmp
inc
movsl
stc
mul
sub
cld
rorl
jns
inc
add
les
fs
shll
xor
mov
loop
add
andl
and
and
cmp
mov
lea
clc
jg
ss
cmp
shl
jns
into
and
mov
sub
jns
adc
mov
sub
adc
ljmp
add
mov
dec
sbb
les
xlat
loopne
int3
sub
jl
test
or
test
outsl
stc
jge
movsb
aad
sub
dec
ret
mov
jge
sub
jle
sub
lea
push
stos
cmpsb
sub
pop
and
pop
lret
pushf
lcall
cs
inc
std
call
in
imul
jb
mov
dec
shrb
std
je
jg
jecxz
sub
std
lds
push
mov
imul
dec
pop
jo
fldt
cli
nop
pop
or
mov
lea
or
das
pop
jmp
mov
sbb
and
mov
outsl
not
repz
dec
pop
dec
les
inc
test
icebp
dec
ret
test
xchg
mov
insb
inc
and
arpl
or
lret
sti
aas
sub
xor
mov
xchg
movsb
mov
loop
xchg
mov
lret
sbb
popa
sub
lahf
mov
popw
mov
push
cmpsl
dec
inc
inc
imul
push
xor
lcall
push
out
or
clc
jge
mov
or
sbb
inc
cmc
shrl
sbb
or
sub
add
decl
pushl
addr16
cs
rorl
into
aas
cmp
in
push
mov
pushf
or
adc
add
cmc
dec
mov
hlt
inc
push
and
or
pop
fistpl
xchg
adc
inc
mov
jae
out
out
mov
push
jns
push
in
cmpsb
sbb
movb
sub
cmp
addr16
ds
mov
call
into
mov
into
sub
xchg
push
pusha
ljmp
xchg
pusha
xchg
lods
jmp
jbe
roll
fs
popf
int3
fisttpll
mov
cmpb
cmp
adc
insb
pop
pop
push
jnp
jmp
jle
xchg
adc
push
daa
adc
lock
jb
adc
fistps
cmp
inc
mov
add
push
ja
add
pop
js
inc
in
fidivrl
dec
xchg
movsb
fdiv
sbb
insl
sub
cmpsb
aas
mov
inc
ss
and
dec
stos
repnz
out
sbb
or
hlt
push
minps
dec
popl
sbb
sbb
mov
testb
adc
imul
xchg
std
ficomps
pusha
xor
loope
inc
scas
push
cmc
or
xor
pop
movsb
inc
test
push
xor
mov
push
add
enter
daa
mov
pushf
xor
aaa
mov
jl
sub
lods
xor
xor
xchg
mov
push
push
dec
push
xor
shlb
mov
rolb
ljmp
or
js
rcll
lcall
sub
sub
ds
push
xor
xchg
nop
repnz
subb
xor
je
and
adc
inc
cmp
jp
pop
sub
sub
es
lcall
pop
fdivrl
es
shrb
mov
sbb
mov
loopne
xlat
mov
mov
das
sbb
mov
jmp
sahf
sbb
fdivr
mov
xor
add
sbb
scas
je
fs
shl
cmp
divb
cwtl
movsl
fldt
dec
ss
movl
adc
mov
push
add
mov
dec
out
dec
popf
cli
or
test
or
xchg
push
or
gs
mov
pop
ds
adc
add
punpcklbw
enter
jno
data16
adc
cmpb
aam
xlat
pop
push
std
sub
ljmp
mov
add
pop
nop
jmp
icebp
dec
and
roll
leave
inc
fldenv
rol
ret
repz
data16
je
in
fdivl
scas
and
add
adc
mov
inc
les
sbb
movsl
sahf
inc
test
xor
ret
aas
or
jb
dec
inc
pop
pop
je
xor
jecxz
ret
jle
sar
insb
mov
cwtl
dec
jp
mov
insb
adc
andl
lea
fistpl
push
pop
lods
xor
out
xor
mov
cmp
idivb
mov
rolb
and
jmp
rcr
mov
negb
lahf
popa
insl
dec
mov
inc
cmpsl
mov
bound
sub
lret
arpl
mov
icebp
jno
std
mov
and
out
sahf
cmc
out
sub
mov
aam
enter
cmpsl
inc
es
jae
fisttpll
push
lahf
clc
in
push
cmp
rorl
test
mov
mov
xchg
dec
ljmp
cmp
jbe
test
iret
mov
test
push
mov
dec
scas
push
jbe
sbb
shlb
test
mov
stos
mov
dec
roll
sbb
in
xor
fiaddl
mov
lahf
push
push
pop
fnsave
pop
ja
icebp
mov
stos
sub
or
in
mov
ss
jne
inc
and
lds
int
mov
fwait
sarl
aaa
sbb
push
lods
or
mov
fisubrs
xor
addr16
xchg
mov
pop
cld
mov
pop
fwait
ss
jp
adc
pusha
test
or
int
fsts
sbb
xchg
inc
int
andl
xchg
popf
rep
xor
push
mov
inc
lcall
enter
hlt
mov
push
cmpl
mov
pop
jge
scas
inc
enter
pop
mov
cmp
sbb
pop
inc
inc
in
cwtl
fidivl
jl
xchg
sti
jo
sbb
dec
js
xchg
sub
add
pop
and
inc
arpl
mov
push
leave
adcb
mov
xchg
jge
jmp
aaa
pop
jno
jp
add
add
icebp
pop
notb
fdivrp
cld
addr16
cmp
mov
in
and
ret
sub
dec
movsb
roll
and
pusha
in
cmp
ljmp
pop
fwait
cmp
aad
jno
sub
jl
push
add
mov
push
adc
or
dec
sub
push
or
ljmp
jno
cmpsb
call
pop
js
xchg
pop
outsl
sbb
or
aam
sub
lea
cmp
jp
sbb
jmp
cmpb
sbb
jmp
sub
sub
or
inc
int
cld
sbb
pop
repnz
mov
cmp
fsubl
scas
xchg
outsb
pop
cmp
andb
push
mov
xor
mov
and
and
dec
stos
push
mov
sub
and
pop
jne
lret
sbb
cmp
fisttpl
and
sahf
pop
fstps
add
repz
xchg
outsl
cmp
mov
inc
fs
adc
add
mov
add
pushf
xchg
icebp
cli
cmp
fidivs
in
lea
push
or
pop
into
jmp
lds
aad
loopne
rcrb
pop
push
dec
adc
push
xor
out
add
test
sub
idivb
cmp
aas
xlat
pop
imul
mov
xchg
in
jg
jo
dec
addl
sbb
movsb
jbe
nop
call
mov
fstps
mov
repz
xchg
sbb
fisttpl
call
movsb
push
push
pop
mov
ficoms
cmpsl
dec
xchg
into
pop
cs
jmp
inc
dec
pop
cltd
aas
test
xchg
dec
mov
cmp
jecxz
sahf
adc
and
out
or
pop
mov
adc
mov
jle
fisttpl
add
mov
mov
lock
sbb
mov
mov
pop
jno
shll
fcmovnb
negb
insl
xor
dec
dec
cmp
cmpsl
mov
hlt
scas
icebp
stc
mov
cld
dec
test
shl
xor
add
test
pop
add
and
sub
loope
aam
jnp
ret
outsb
or
es
shl
fnsave
rcll
out
xchg
mov
in
pop
dec
mov
mov
lods
mov
xchg
xchg
fsubrl
push
pop
jno
mov
add
or
mov
loopne
push
insb
inc
add
adc
in
add
cwtl
and
pop
sti
ret
xor
dec
movsb
repz
xor
fidivl
aam
jo
mov
sti
dec
mov
mov
add
neg
ja
cltd
pusha
dec
popf
aam
inc
test
or
push
pop
fwait
cmp
lcall
fnstcw
xchg
jne
and
pop
out
lods
out
dec
bound
je
adc
pop
loopne
fldt
mov
or
sub
fdivs
addr16
pop
jp
inc
popf
mov
in
mov
je
dec
pop
dec
in
add
pusha
and
test
in
bound
adc
cmp
xor
inc
out
jecxz
popf
sbb
xchg
mov
cmpsl
jnp
ret
dec
andb
and
insb
xor
ret
aad
cmp
enter
xor
test
xor
gs
sbb
mov
je
rorl
lds
std
daa
dec
or
adc
xchg
lret
icebp
imul
test
or
lds
sub
mov
or
ret
stc
mov
arpl
mov
out
xchg
sbb
sub
or
js
int3
sub
pop
and
dec
enter
jo
lods
out
les
je
pop
pop
jge
jecxz
enter
or
iret
or
jge
mov
enter
daa
mov
shll
cmp
xchg
dec
mov
imul
and
movsl
xchg
icebp
and
es
lahf
adc
loop
fcmovne
fldt
pop
je
inc
ss
cmpsb
imul
loope
pop
scas
adc
orb
or
jo
add
mov
push
ds
