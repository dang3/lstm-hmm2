jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
xor
xor
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jb
mov
mov
mov
mov
mov
mov
dec
inc
dec
lea
xchg
inc
dec
mov
mov
lea
mov
mov
mov
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jb
mov
mov
mov
mov
mov
mov
dec
inc
dec
lea
xchg
inc
dec
mov
mov
lea
mov
mov
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
add
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
cmp
jns
xchg
dec
inc
inc
xchg
dec
inc
inc
cmp
js
lea
inc
mov
dec
mov
lea
lea
mov
mov
mov
mov
dec
dec
je
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
add
xor
cmp
xor
aaa
add
add
xor
xor
xor
cmp
add
add
xor
aaa
add
add
add
xor
xor
xor
xor
xor
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xor
cmp
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
xor
xor
cmp
xor
xor
add
add
add
add
add
xor
xor
xor
xor
add
add
add
cmp
add
add
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
cmp
cmp
add
add
add
add
in
add
mov
mov
cmp
jle
mov
mov
mov
jmp
lea
xchg
mov
jmp
dec
inc
lea
dec
inc
dec
dec
jne
dec
lea
xchg
xchg
lea
lea
inc
inc
dec
mov
cmp
je
call
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
mov
xor
divl
test
jne
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
dec
inc
lea
lea
xchg
mov
lea
dec
mov
inc
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
dec
inc
dec
lea
xchg
inc
dec
mov
mov
lea
mov
mov
mov
mov
cmp
je
jmp
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jns
xchg
dec
inc
inc
xchg
dec
inc
inc
cmp
js
lea
inc
mov
dec
mov
lea
lea
mov
mov
mov
mov
dec
dec
je
inc
mov
cmp
je
jmp
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
dec
inc
lea
lea
xchg
mov
lea
dec
mov
inc
dec
mov
sub
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
push
mov
mov
xor
call
mov
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
mov
mov
mov
call
cmp
jb
mov
mov
mov
mov
mov
mov
dec
inc
dec
lea
xchg
inc
dec
mov
mov
lea
mov
mov
mov
push
mov
mov
xor
call
mov
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
cmp
jle
mov
mov
mov
jmp
lea
xchg
mov
jmp
dec
inc
lea
dec
inc
dec
dec
jne
dec
lea
xchg
xchg
lea
lea
inc
inc
dec
lea
mov
push
mov
jmp
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jns
xchg
dec
inc
inc
xchg
dec
inc
inc
cmp
js
lea
inc
mov
dec
mov
lea
lea
mov
mov
mov
mov
dec
dec
je
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
mov
sub
add
add
mov
cmp
jle
mov
mov
mov
jmp
lea
xchg
mov
jmp
dec
inc
lea
dec
inc
dec
dec
jne
dec
lea
xchg
xchg
lea
lea
inc
inc
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jb
mov
mov
mov
mov
mov
mov
dec
inc
dec
lea
xchg
inc
dec
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
mov
mov
movl
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
dec
inc
lea
lea
xchg
mov
lea
dec
mov
inc
dec
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
pop
icebp
mov
shl
mov
xor
int3
or
mov
push
icebp
mov
and
mov
sbb
mov
and
mov
ds
mov
cmp
mov
imul
and
mov
inc
xor
mov
outsl
mov
inc
xor
add
outsl
mov
inc
xor
out
xchg
outsl
mov
inc
xor
in
imul
xor
shrl
outsl
mov
inc
xor
leave
imul
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jns
xchg
dec
inc
inc
xchg
dec
inc
inc
cmp
js
lea
inc
mov
dec
mov
lea
lea
mov
mov
mov
mov
dec
dec
je
inc
movl
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
push
call
mov
call
mov
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
dec
inc
lea
lea
xchg
mov
lea
dec
mov
inc
dec
mov
mov
call
mov
cmpl
je
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
cmp
je
mov
subb
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
mov
xorb
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
dec
inc
lea
lea
xchg
mov
lea
dec
mov
inc
dec
incl
mov
cmp
jne
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
mov
call
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
push
mov
push
call
cmpl
je
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
cmp
jle
mov
mov
mov
jmp
lea
xchg
mov
jmp
dec
inc
lea
dec
inc
dec
dec
jne
dec
lea
xchg
xchg
lea
lea
inc
inc
dec
push
mov
push
call
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
cmp
jle
mov
mov
mov
jmp
lea
xchg
mov
jmp
dec
inc
lea
dec
inc
dec
dec
jne
dec
lea
xchg
xchg
lea
lea
inc
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
movb
cmp
jp
xchg
xchg
xchg
lea
mov
inc
dec
dec
lea
mov
jmp
mov
dec
dec
inc
xchg
lea
mov
xchg
xchg
lea
mov
mov
pop
ret
mov
push
mov
add
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
call
test
jne
mov
jmp
movw
cmp
jb
mov
mov
mov
mov
mov
mov
dec
inc
dec
lea
xchg
inc
dec
mov
mov
lea
mov
mov
mov
call
lea
mov
pop
ret
push
mov
add
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
movl
movl
mov
push
mov
push
call
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
cmp
jnp
mov
mov
mov
jmp
mov
inc
inc
mov
inc
dec
mov
inc
mov
mov
jmp
xchg
lea
mov
mov
inc
inc
inc
push
call
mov
call
mov
xchg
mov
xchg
mov
mov
mov
mov
mov
xchg
xchg
mov
mov
mov
lea
mov
dec
jne
mov
pop
ret
add
xor
xor
xor
xor
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
cmp
xor
xor
xor
xor
cmp
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
add
add
xor
xor
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
xor
add
add
aaa
add
add
add
add
add
xor
xor
aaa
add
add
add
add
add
add
add
add
jo
imul
add
in
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jle
mov
mov
mov
jmp
lea
xchg
mov
jmp
dec
inc
lea
dec
inc
dec
dec
jne
dec
lea
xchg
xchg
lea
lea
inc
inc
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
je
xchg
jmp
jmp
lea
inc
dec
dec
dec
mov
lea
dec
mov
mov
mov
mov
mov
dec
dec
dec
xchg
mov
mov
mov
inc
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
pop
ret
add
add
add
add
add
add
add
xor
add
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
add
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
xor
cmp
add
add
add
add
jne
mov
cmp
jge
mov
dec
mov
inc
mov
cmp
jo
lea
mov
lea
mov
xchg
inc
dec
jne
mov
dec
xchg
lea
inc
lea
inc
inc
dec
mov
mov
mov
lea
call
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
dec
inc
lea
lea
xchg
mov
lea
dec
mov
inc
dec
ret
mov
ret
lea
mov
jmp
add
jae
add
pusha
add
lcall
pop
inc
subl
inc
mov
add
xlat
gs
test
outsl
add
repnz
rorl
in
xor
addr16
aas
xchg
add
gs
cmp
or
push
add
push
jle
add
fiadds
loopne
push
add
sub
pop
stos
aad
add
pop
add
push
or
add
mov
mov
fiaddl
sub
repnz
fisttpl
insl
stos
add
jb
xor
push
outsl
pop
dec
leave
sub
pop
test
mov
mov
roll
clc
in
lret
ja
iret
add
push
add
jmp
push
add
stos
cltd
and
ret
add
ja
jb
rorl
sti
sub
mov
add
ja
add
add
jmp
inc
cli
push
add
mov
ret
mov
add
cmpsl
and
jg
xchg
add
dec
add
mov
hlt
push
dec
jge
xchg
sub
sub
cltd
cmp
push
orl
daa
add
add
mov
pop
sbb
or
xlat
add
cmp
inc
push
ljmp
add
and
and
sbb
add
jp
push
lock
push
sub
add
clc
add
dec
xchg
sub
sub
andb
add
js
pop
std
mov
aaa
inc
add
add
loop
add
aad
popf
add
add
scas
add
les
add
lods
movb
aas
sub
subl
pop
add
add
mov
cmp
add
and
add
add
inc
cmp
add
pop
dec
add
lret
add
insl
pop
cmpsl
inc
add
push
js
and
call
jg
leave
jb
add
lret
sub
loopne
jmp
loopne
and
xor
jbe
add
aam
pop
cmp
adc
add
into
dec
in
daa
sahf
mov
pop
xchg
and
adc
jge
add
add
adc
or
add
lea
inc
add
std
pop
mov
sbb
add
dec
pop
add
add
adc
adc
jnp
add
add
mov
add
add
jle
nop
xchg
xchg
imul
fbstp
fistpl
pushf
mov
add
sbb
cmpsb
or
or
mov
add
sahf
das
cli
add
loopne
inc
mov
cmc
mov
in
add
test
enter
mov
jns
add
insl
loopne
add
sub
pop
mov
test
xchg
sub
inc
add
or
add
add
pop
loop
xlat
add
int3
inc
enter
test
mov
testl
or
in
add
fsts
push
add
mov
rcll
pop
out
test
aad
mov
mov
mov
cmp
add
inc
jmp
testb
add
add
pop
add
adc
push
iret
xor
roll
add
add
xor
das
push
add
mov
out
jo
in
add
popf
add
add
jmp
std
adc
cmc
leave
leave
cmc
fcom
add
adc
add
add
jg
jg
test
addb
add
sahf
and
enter
loope
mov
add
add
add
mov
adc
popa
in
jne
sub
adcl
pop
add
add
in
faddl
into
xchg
out
in
jns
shlb
ja
sbb
add
add
add
push
cmp
frstor
and
gs
add
add
in
sahf
and
repz
xchg
xchg
inc
mov
cmp
test
sub
and
pushf
mov
mov
cs
cld
lret
nop
pop
mov
dec
mov
aam
int
mov
lods
lods
popa
je
addr16
inc
test
aad
cmpb
call
adc
pop
aam
notl
sbb
lods
dec
cmpsb
sub
bound
xchg
cmp
cltd
test
mov
aas
jbe
pop
jb
push
decb
iret
push
roll
notb
mov
cwtl
ljmp
mov
fisubrl
repz
lret
bndldx
lcall
das
bound
mov
sbb
call
ret
or
jle
arpl
loopne
lock
sub
jb
int
out
xchg
fsubs
and
mov
enter
ret
pop
push
jne
rcrb
push
cmp
ficoms
lds
clc
mov
ljmp
adc
int
adc
xchg
fstpt
lock
repnz
sbb
or
mov
in
sahf
xchg
dec
cwtl
dec
mov
daa
push
xchg
dec
sbb
cmpsb
push
popa
sbb
fwait
mov
aas
push
repnz
add
jo
cmp
mov
pusha
in
int
xchg
mov
mov
fistps
pop
mov
dec
cmpsb
mov
inc
mov
cltd
ret
mov
or
xor
mov
push
push
out
cmp
in
bound
mov
stos
dec
jmp
or
test
sub
iret
jno
or
jp
adc
mov
imul
es
test
movsb
cld
fistpll
xor
clc
pusha
mov
std
cltd
xchg
scas
xchg
pusha
jmp
movsb
pushf
or
cmp
push
jbe
imul
push
add
lret
dec
xchg
lret
push
negb
into
inc
imul
scas
lcall
adc
dec
cmp
cmp
ljmp
leave
push
les
cmc
or
or
fisubrl
pop
mov
pop
mov
jecxz
lds
rol
xchg
inc
addl
outsl
leave
into
sub
fstl
ret
jbe
lret
jge
jno
sbb
fidivs
jnp
dec
or
mov
mov
sbb
std
popa
push
iret
es
xor
pop
pop
scas
push
jnp
and
and
push
xor
inc
shrl
mov
dec
rclb
in
enter
test
lods
jno
lock
xchg
xlat
cmc
mov
or
cmp
push
aad
push
test
pop
test
pop
sub
xor
jle
inc
cmpsb
pop
sub
insl
pop
pop
sub
push
xor
sbb
dec
faddl
loopne
outsb
rcll
rcll
mov
cltd
jne
cld
cmp
mov
mov
inc
addr16
sub
push
fstpl
pushf
sub
test
pop
xchg
jg
lcall
xlat
mov
aaa
sbb
push
addb
popl
jg
jmp
mov
lods
cmc
mov
fs
adcl
out
loop
xchg
cmp
fcoms
push
testl
fadd
add
xor
or
stos
cmpsl
mov
cmc
pop
mov
cvtps2pd
test
pop
stc
test
out
adc
pop
push
add
adc
andw
and
push
out
jae
cli
cmp
xchg
in
fcmovne
cmp
sti
xor
jg
andl
mov
leave
mov
dec
imul
cmc
repz
push
mov
cmp
sahf
fcom
dec
push
inc
sub
call
add
dec
xlat
mov
cs
popf
or
xor
pop
nop
loop
push
inc
loopne
and
je
add
push
aad
mov
rolb
nop
jge
pop
xchg
notb
jae
in
dec
xchg
scas
in
cmp
add
inc
ret
dec
sbb
adc
out
dec
or
and
jge
rcll
cmp
xchg
jge
std
pop
rcrb
pusha
out
mov
mov
loope
jle
mov
imul
das
inc
xor
mov
sar
insl
aam
xchg
and
es
js
cmp
xchg
dec
jmp
xor
movsl
push
dec
icebp
lods
xchg
das
mov
mov
nop
out
mov
jno
jae
in
movsl
pop
sub
loope
mov
push
test
xor
cmp
data16
les
xchg
jp
mov
popa
and
scas
and
push
and
add
push
xchg
and
push
shld
add
shrl
push
arpl
mov
faddp
sub
aad
test
dec
sbb
shlb
jle
test
ret
or
cmpsl
adc
xchg
jno
add
push
je
fmull
push
inc
xor
or
fwait
xchg
pop
jo
mov
or
pop
xor
add
dec
cltd
jno
inc
push
mov
movsb
jle
cmp
ret
dec
sbb
lods
mov
jecxz
out
sbb
push
iret
shlb
jns
mov
xchg
call
std
fucom
cmpsb
push
aas
sub
lret
addr16
mov
mov
iret
ret
outsl
or
jle
rorb
in
sti
mov
nop
fcmovu
pop
mov
cmc
jmp
scas
adc
jae
sub
popf
es
sbb
push
ljmp
and
xchg
mov
imul
ljmp
pusha
jle
push
mov
iret
pushf
js
ret
out
add
xor
sub
arpl
in
inc
aas
iret
inc
or
mov
pop
inc
push
loop
rcll
int3
xchg
test
rcrl
xlat
sbb
ja
pop
mov
test
jmp
pop
mov
mov
mov
sbb
ja
aaa
cmp
cmp
jl
pop
xchg
dec
ss
add
mov
mov
lds
jb
mov
iret
scas
xor
and
enter
xchg
push
sti
shll
bound
dec
cmpsb
cmpsl
inc
dec
in
das
cmp
enter
daa
test
loope
aas
jecxz
jno
pop
cmp
dec
mov
pop
adc
movsl
adc
andl
or
pusha
push
push
pop
mov
mov
hlt
jg
or
mov
jnp
bound
lcall
loope
das
call
sub
outsb
ss
adc
gs
aam
ret
orb
jmp
mov
sbb
and
lret
loopne
vandpd
jo
lea
adc
cmp
aam
or
sbb
out
fistpl
fcoml
sbb
mov
sub
cwtl
mov
push
mov
je
cmp
insl
sub
dec
fcoms
mov
lret
push
cmp
mov
push
mov
jle
push
mov
loop
xchg
stos
stc
cmp
or
pop
testl
call
lahf
enter
cmpsl
out
lea
imul
xor
xchg
mov
mov
addr16
fstpt
pop
call
push
jle
pop
scas
jge
mov
xor
pusha
jl
xchg
sbb
aas
sbb
adc
xchg
sub
xchg
mov
testl
mov
nop
mov
aas
leave
inc
repz
fstps
cwtl
shll
jecxz
inc
std
mov
pop
lea
sbb
outsb
sub
movaps
pop
cmp
es
aaa
dec
dec
jl
cld
fldt
fistps
dec
std
inc
push
dec
push
inc
test
aas
mov
push
jb
mov
dec
cmpl
adc
fisubl
cmp
ljmp
sbb
incb
aam
inc
lret
in
dec
lea
sub
xor
pusha
stos
mov
and
inc
mov
loopne
jl
sub
lods
es
int
out
push
cmpsl
cmpsl
nop
cwtl
mov
pushf
popa
jmp
add
jo
rorl
mov
and
push
mov
inc
rol
pop
jnp
cmp
test
fisttpl
arpl
and
mov
shll
mov
test
addr16
jle
imul
insb
add
xchg
mov
xor
fs
xchg
mov
dec
mov
mov
dec
mov
sbb
incl
into
fwait
adc
mov
cmp
add
jnp
mov
or
or
add
loop
push
mov
movsb
mov
out
xchg
ja
imul
xchg
inc
out
fstpt
and
dec
cld
xor
cmp
mov
test
testl
enter
cli
xchg
mov
and
in
inc
add
sub
call
or
insl
cs
lods
int3
jp
bound
cld
adc
jnp
cld
lret
arpl
in
sub
pusha
xlat
push
fbstp
sub
push
es
inc
mov
pop
adc
cld
mov
jle
cs
inc
stos
xor
and
hlt
in
dec
cs
imul
jb
pusha
data16
fwait
pop
data16
jp
iret
sti
push
mov
jl
mov
aaa
jns
hlt
adc
andl
sbb
outsb
push
iret
dec
mov
xchg
jne
fmul
jno
xor
fiadds
cmp
popa
xchg
cld
rclb
movsb
repnz
imul
mov
sbb
jbe
sbb
pop
and
add
test
jl
insb
into
dec
movsl
imulb
xchg
and
xor
push
inc
adc
imul
push
xchg
push
inc
icebp
fwait
jae
sub
sub
push
xchg
jecxz
jne
cmpsl
lahf
mov
jno
out
sub
out
cmp
and
ds
lock
lahf
lahf
fnstsw
push
sub
fsubrl
sbb
push
pop
ja
mov
pop
fnstcw
and
jecxz
loope
pop
inc
xchg
dec
sub
mov
outsb
cltd
lret
or
scas
stc
xor
ljmp
jns
mov
inc
sbb
push
jecxz
cmp
mov
lock
lcall
js
dec
pop
sbb
push
sahf
or
adc
lret
imulb
mov
stc
out
fs
adc
fs
pop
cmp
int3
mov
cmp
add
rcl
xchg
add
loope
jge
insl
jl
cmc
sbb
pushf
jbe
shll
add
stc
repz
adc
mov
add
add
mov
xchg
out
sub
sahf
stos
xor
pop
call
cmp
negb
gs
jg
movsb
aas
out
pop
dec
out
aas
outsl
lret
imul
sub
xchg
fstpl
sbb
dec
push
xlat
enter
in
je
mov
mov
pop
cli
adc
aad
movsb
repnz
cwtl
jecxz
dec
stos
iret
xchg
inc
push
sbb
push
andl
sub
outsb
stc
xchg
mov
push
lea
iret
mov
pop
in
imul
addr16
fistl
adc
movsl
mov
pop
aas
push
rcrl
mov
dec
clc
stos
push
shl
inc
fcomi
sbb
addl
fcomps
sbb
incl
testl
mov
or
mov
stos
adc
ret
mov
cmp
or
cld
dec
loope
je
cmpsb
bswap
mov
jae
sub
xor
xchg
and
jmp
xchg
pop
scas
test
rclb
lahf
push
test
inc
inc
push
cs
jnp
cmp
and
ljmp
imul
nop
out
lret
xchg
mov
int
das
fimull
packsswb
sub
pop
cltd
rclb
in
mov
dec
xchg
sbb
test
dec
xor
cli
dec
loop
push
lret
repz
bswap
fwait
inc
stos
addr16
fisttpl
into
add
pop
xorb
sub
negb
sub
push
add
mov
stos
or
ja
push
fisttpll
add
sahf
mov
sbb
movsb
dec
fbstp
jne
int
mov
cmp
out
cli
ja
cmc
stos
fwait
jns
stc
dec
xchg
jle
cmpsl
cmpl
lods
dec
cli
sub
ror
addr16
or
jp
popf
push
mov
add
addr16
jnp
mov
or
aas
shll
dec
notl
dec
push
or
dec
jae
fstps
mov
iret
mov
push
push
call
fistps
sbb
scas
ret
mov
push
loop
mov
iret
pop
cltd
test
pop
outsb
mov
hlt
pop
lods
in
arpl
dec
loop
inc
fildll
cmpsl
fsts
fiaddl
add
pop
xor
fisubs
mov
sbb
repnz
sub
push
cltd
pop
xchg
das
jle
inc
in
sbb
fnsave
mov
and
test
mov
xchg
push
dec
adc
xchg
push
js
jl
push
lret
imul
cmp
cmp
cmpsl
int
cmpb
lods
icebp
jl
std
mov
enter
daa
cmpsb
loopne
cmp
mov
mov
ds
pusha
jnp
and
and
pusha
sti
lahf
mov
mov
popf
add
test
xor
dec
mov
js
cld
mov
sbb
dec
loope
test
inc
sub
add
stos
adc
sbb
inc
xchg
popa
xorb
sbb
mov
les
sbb
addl
cltd
es
or
sub
or
push
call
jbe
cmpb
dec
jle
pop
dec
dec
sahf
lods
test
pop
adcb
jg
adc
lahf
and
mov
push
fs
push
inc
adc
xor
mov
lds
xchg
clc
cli
inc
ror
lock
pop
xchg
or
or
push
fs
in
xor
and
inc
mov
loop
mov
mov
pop
sub
aam
data16
out
fldcw
cmp
dec
loopne
sarl
xor
js
sti
or
nop
call
xchg
mov
pop
es
sbb
adc
lret
repz
outsl
jae
mov
sub
cmp
pop
pop
sub
mov
dec
bound
jmp
lret
jne
pop
aad
cli
adcb
fs
sbb
rcr
jge
cmpsl
mov
cmp
fs
or
mov
adc
cs
push
sub
pop
cmc
iret
inc
inc
sub
sub
mov
popf
hlt
jb
in
dec
outsl
cmp
pushf
roll
mov
pusha
ret
xor
cwtl
jmp
pop
mov
cmpsb
imul
lret
xchg
xchg
mov
mov
lock
pop
push
das
fiadds
dec
mov
clc
sbb
aam
push
lcall
add
xchg
dec
faddl
adc
ds
adc
outsb
inc
mov
movsl
sbb
xchg
xchg
pop
into
xchg
shlb
sbb
test
lods
cld
pop
mov
icebp
adcl
xor
mov
push
clc
jne
cmp
fwait
and
popa
push
adc
and
sub
push
push
push
or
cmpps
cltd
testl
add
push
addr16
test
and
inc
sbb
ss
or
add
push
jle
movl
mov
push
or
scas
in
jo
xchg
hlt
and
mov
test
mov
sbb
dec
jb
cmp
sub
aad
test
xchg
dec
ret
jne
cmpsl
pushl
mov
sbb
mov
fistpll
es
dec
dec
inc
orl
aad
das
repnz
sub
mov
lock
mov
mov
rol
insb
rcr
jbe
pusha
or
jle
popa
xchg
inc
mov
cmp
mov
or
inc
and
jae
xchg
pop
push
xor
popf
fwait
sarl
movsb
fwait
add
addl
sbb
int
push
and
sbb
imul
or
sub
mov
iret
mov
or
pop
movsl
xchg
sbb
arpl
adc
mov
and
lcall
inc
pop
int
pop
mov
fiadds
lahf
lds
es
adc
shll
leave
stos
jecxz
movsb
fnstcw
hlt
push
call
hlt
sarl
sarl
xor
test
ja
sub
addr16
loop
jl
adc
dec
cmp
push
pop
ljmp
enter
ds
and
fwait
and
popl
popf
cmpsb
xor
in
in
and
daa
movsl
movsl
pop
cmp
nopl
jl
sub
xchg
jae
insb
xchg
mov
movsl
sub
mov
lahf
inc
push
rclb
lds
dec
dec
xor
push
push
mov
add
mov
gs
data16
jne
out
fsubrl
inc
pop
outsb
pop
push
xchg
adc
idivl
icebp
adc
aas
sbb
xchg
mov
sub
push
jmp
mov
jnp
lea
jnp
fyl2xp1
test
and
dec
sahf
dec
sahf
movsb
test
subb
test
adc
mov
fldl
sub
pusha
fs
pop
adc
cmp
repz
cmp
inc
fidivrl
lret
cmp
pusha
mov
cmp
adc
or
inc
sub
stos
cli
divl
jnp
shrb
lods
sub
sarl
stc
popa
cmp
adc
push
pop
add
aaa
data16
in
mov
mov
out
repz
add
xor
inc
in
xchg
cld
decb
mov
pop
loopne
inc
cwtl
pop
inc
out
adc
cmp
imul
pusha
and
int
das
xchg
arpl
sbb
ret
xlat
inc
iret
mov
rcl
test
clc
lea
fmul
fcom
dec
mov
nop
dec
mov
addb
fld
inc
jo
push
test
sbb
lea
adc
mov
jg
push
scas
mov
dec
cmp
adc
cwtl
xor
inc
or
pop
jb
dec
mov
and
sbb
rorl
ret
mov
out
mov
jecxz
mov
out
cld
push
jle
lret
cmp
dec
adc
pusha
lock
mov
mov
ds
scas
ret
dec
aam
in
ret
adc
inc
insl
fmuls
std
dec
xlat
es
cmpsl
movsb
cltd
mov
and
fidivrs
hlt
or
and
and
pop
in
mov
sub
insb
data16
loop
push
mov
xor
fsubrs
xchg
jbe
sub
push
sbb
popa
addl
stos
adc
mov
jno,pt
push
in
stos
mov
add
cmc
cltd
cs
sti
xor
pusha
stos
mov
ljmp
test
xchg
cld
xchg
stc
dec
sbb
mov
or
pop
fwait
mov
je
add
mov
jnp
xor
ftst
mov
cmp
out
test
pop
and
adc
imul
testb
out
mov
loopne
out
xchg
ljmp
cmp
jbe
sbbl
sbb
mov
fwait
addr16
les
sub
insb
cmp
cmp
in
pop
xor
jb
out
push
xchg
into
nop
push
jmp
fldt
or
inc
inc
fwait
popf
ret
mov
out
push
stos
mov
arpl
addr16
imul
cld
scas
mov
notl
mov
adc
into
ret
push
pop
fcompl
hlt
cmc
jl
arpl
nop
or
popf
repnz
lods
fisubrl
mov
pop
lea
dec
shl
pop
mov
rclb
leave
and
mov
outsb
lret
sub
dec
sbb
sbb
push
or
mov
jl
mov
rorb
ds
xor
stos
push
scas
lods
cmp
and
adcl
or
dec
inc
sahf
add
mov
inc
in
lret
les
aam
ja
movsb
out
add
or
fidivs
jns
sub
stos
imul
xchg
scas
movsl
das
data16
outsl
add
lahf
cld
mov
push
mov
icebp
push
add
fs
xor
loopne
adc
nop
in
js
fstl
xchg
mov
stos
loope
mov
stc
sub
or
outsb
ret
adc
rolb
jae
push
xor
sbbb
sbb
pop
or
out
addr16
in
xor
sub
pop
or
push
lcall
dec
mov
mov
sahf
xacquire
test
or
jg
movsl
adc
lahf
pop
test
sub
imul
ss
lahf
fdivr
movb
xchg
jge
ficoms
in
mull
ljmp
adc
cmc
jb
popf
xor
push
mov
loop
xorb
jp
sub
loop
add
shrb
xor
sbbl
xor
lea
sti
pop
mov
push
loopne
in
pop
cmp
adc
ljmp
pushf
jae
xchg
es
inc
sbb
std
mov
xlat
test
out
sub
shlb
mov
out
push
cs
push
aad
rorb
nop
sub
sbb
cwtl
addl
insb
fincstp
sbb
je
in
jecxz
lods
out
int3
pop
cli
ljmp
or
int3
pop
push
pop
lea
es
dec
sub
aam
cmp
mov
bound
xor
jb
out
dec
pop
dec
sbb
aad
rcr
fcoml
out
push
std
bound
push
mov
dec
lods
mov
or
cmpb
test
bound
mov
cmpsl
into
lock
jecxz
das
pushf
clc
cpuid
jmp
packuswb
or
cmp
gs
es
or
imulb
cmpsl
mov
lds
clc
les
mov
pop
xor
and
mov
mov
fisubrl
adc
loop
ret
xor
xor
inc
push
ja
sbb
sub
pop
xchg
mov
mov
popa
cwtl
insb
rcrb
push
stos
push
xor
repz
cmpsl
xchg
test
adc
jo
ror
cltd
gs
xchg
xor
mov
mov
in
add
dec
and
sub
xchg
fistpl
adc
rcrl
pop
or
loope
fwait
rorb
push
insb
add
fdivs
xor
xchg
pop
je
in
cmp
xchg
xchg
lcall
sub
int3
pop
fcomi
xchg
ja
sub
pop
inc
inc
bound
mov
adcb
repz
push
mov
add
pop
out
jae
cmp
cli
jnp
hlt
imul
adc
mov
mov
xor
inc
daa
jp
jnp
mov
faddp
insb
test
clc
jnp
sub
jle
xor
fcomps
fcomip
mov
stos
pop
inc
out
lea
fistps
or
popf
jmp
pop
pop
push
and
xor
jle
adc
fdivl
fistl
fwait
scas
in
dec
dec
push
mov
mov
xchg
push
jns
ja
ffreep
enter
adc
hlt
inc
jecxz
arpl
out
inc
dec
fucomp
or
sbb
arpl
sub
ficompl
xchg
shrl
movsb
pop
mov
push
lds
mov
mov
and
inc
leave
cwtl
xchg
andl
fcmovnb
jge
pop
popf
sbb
hlt
fmuls
jne
enter
lahf
jl
add
lret
test
test
inc
jo
mov
lahf
and
xor
push
repnz
cmpsb
fistpl
in
mov
and
iret
or
daa
mov
pop
mov
cltd
out
jecxz
xor
ds
add
lahf
sbb
test
dec
rorb
fadds
mov
adc
pop
aad
dec
push
mov
into
faddl
or
add
sub
lods
cltd
mov
subb
sbb
ljmp
inc
loop
push
out
scas
mov
push
lret
and
xlat
mov
pop
mov
dec
lcall
ljmp
setg
jg
cmp
inc
cmp
push
mov
jae
bnd
mov
mov
fdivrs
fs
lret
ja
mov
iret
cmp
outsl
jno
popf
push
into
stc
shll
cmp
xor
adc
outsl
jecxz
stos
loop
mov
cltd
adc
dec
adc
jno
repz
int
mov
lahf
mov
mov
ret
sub
in
pop
xchg
ljmp
jl
gs
mov
push
pop
adcl
imul
fisttpl
xchg
jmp
add
cmp
cmpsb
repz
les
sub
lret
clc
pushf
dec
popa
sub
push
cmpsb
push
cs
pop
adc
ficoml
nop
add
rorl
cmp
inc
push
icebp
fldcw
je
jne
jecxz
jno
iret
aaa
in
push
and
test
mov
mov
ret
jge
bound
adc
push
fstpl
rorb
push
inc
or
cmpsl
aas
iret
sbb
dec
mov
dec
aam
xor
in
push
imulb
sbb
repz
pop
lahf
cld
mov
cmp
mov
xlat
adcl
mov
sbb
push
mov
mov
cmpsl
lock
in
das
jnp
add
sbb
add
mov
clc
sbb
insl
cmpsb
lds
int
sbb
xlat
lahf
ds
iret
testl
mov
dec
mov
mov
push
gs
sub
rcr
pop
fildll
or
in
into
dec
and
cmp
frstor
adc
es
xchg
hlt
cmp
ljmp
pop
pop
ja
stos
out
lcall
int3
inc
xor
in
test
icebp
add
js
pushf
adc
xor
push
mov
xchg
aaa
imul
incb
push
adc
push
es
iret
xor
addr16
pop
add
xor
xor
testl
mov
sbb
sbb
mov
xchg
mov
mov
inc
fidivl
lret
mov
aam
and
jne
nop
sub
push
ljmp
stos
test
cmpl
and
lods
add
add
test
adc
sub
loopne
jle
test
in
std
mov
ja
adc
fucompp
sub
inc
icebp
mov
jae
push
jg
adc
fnstcw
cmp
jno
bound
xchg
cli
mov
movsb
sbb
lret
scas
dec
insb
fwait
push
mov
adc
popa
iret
or
dec
adc
arpl
dec
fs
push
outsl
jb
add
pop
inc
dec
sub
xchg
sub
int3
or
mov
fisubrs
imul
rcrb
xchg
mov
jbe
push
leave
xchg
movsb
jp
jmp
jbe
cld
ret
jge
not
sbb
sbb
mov
test
push
lds
dec
rorb
push
add
mov
jo
stos
scas
push
jns
inc
cwtl
push
cmp
out
push
mov
pushf
andl
iret
enter
daa
mov
nop
pop
jno
fiadds
dec
push
xchg
jns
and
int3
lock
movsl
cmp
negb
mov
outsl
test
push
xchg
aam
out
jecxz
fwait
rcrb
cmp
js
or
jno
cs
push
loope
dec
push
or
outsb
mov
out
jo
and
mov
push
je
addb
push
or
and
jno
repnz
jno
mov
sbb
pop
or
lcall
jmp
sbb
das
int
cmp
test
mov
in
jg
fadd
mov
and
mov
mov
ss
push
jl
jae
dec
testl
dec
mov
or
mov
cmc
add
xor
es
xor
xchg
jle
add
std
data16
sub
test
sub
pop
out
std
inc
cli
popf
mov
enter
call
gs
xchg
pusha
loopne
bound
mov
testl
repz
mov
cmp
inc
xlat
add
sub
and
mov
stc
or
inc
and
add
sub
nop
fists
dec
xchg
dec
inc
gs
push
je
pop
loope
mov
adcl
mov
xor
or
mov
insb
fcmovb
adc
leave
mov
fs
fildl
dec
pop
inc
dec
lds
inc
daa
mov
aas
outsb
clc
xorl
jmp
and
inc
push
sarl
imulb
std
mov
add
mov
scas
inc
mov
mov
call
rorl
shl
pop
lock
das
pop
aas
mov
aam
mov
ret
orl
jnp
sub
js
dec
enter
mov
cs
icebp
cmpsb
dec
dec
lods
sbbl
push
stc
lea
roll
pop
dec
out
into
shlb
test
mov
dec
dec
push
std
arpl
fisttpll
sub
popa
mov
xchg
xor
jmp
xor
sub
aam
stos
fldl
and
mov
sarb
ds
lret
add
fdivs
xor
push
pop
mov
repz
dec
repnz
push
test
arpl
xchg
xor
jns
cli
rorl
dec
popa
or
xchg
aad
mov
push
or
add
push
sarl
xor
jae
or
mul
inc
push
mov
mov
shll
pop
push
push
divl
sarb
ds
jg
jno
dec
mov
inc
leave
movsb
dec
dec
arpl
mov
lock
aam
sbb
bound
xchg
jne
pushf
addl
out
sbb
sub
cmpsl
inc
test
add
es
jns
insb
jle
loop
sbb
out
jle
into
or
pusha
jns
lahf
fbstp
jle
xchg
inc
cltd
cld
jmp
cld
je
jae
ss
push
mov
repz
aaa
jb
mov
mov
fsubrs
and
pop
imul
push
push
inc
iret
adc
dec
mov
iret
xor
sbb
hlt
stos
arpl
sbb
or
push
outsb
inc
inc
leave
lods
add
xchg
jg
test
sbb
adc
shlb
lds
add
mov
leave
btr
xchg
xor
add
add
jbe
sbb
insl
jbe
jae
mov
pop
xor
ja
xchg
jl
dec
mov
push
out
shlb
lret
dec
inc
xchg
and
jo
cmp
pop
push
push
mov
daa
inc
dec
iret
pop
cmpsb
cmp
xchg
in
addb
enter
daa
mov
js
jno
inc
dec
sub
loop
cmp
cmpsl
and
movsl
inc
pusha
fsubl
inc
push
mov
pop
pop
fsts
outsl
push
jge
fs
stos
shll
mov
add
pop
adc
pop
popa
xchg
or
incl
movsl
pop
push
loop
push
fdivrl
loope
push
arpl
sub
aad
ljmp
and
shlb
sbb
adcb
sbb
xchg
pop
push
cmc
add
sub
adc
pop
mov
lcall
mov
sbb
xchg
sahf
adc
sbbb
dec
mov
dec
stc
mov
loopne
or
adc
into
ss
js
cmp
cs
lret
lret
adc
mov
sbb
xchg
into
mov
adc
xchg
outsl
mov
xlat
loop
cmp
xchg
push
add
pop
mov
mov
pop
out
mov
cli
rcrb
adc
xor
or
jae
xchg
push
frstor
ror
loopne
aas
leave
pop
rorl
xor
imul
adc
std
xchg
outsl
xlat
and
scas
dec
xor
inc
shlb
sti
inc
mov
movsb
test
cs
test
push
pop
pop
dec
in
in
inc
js
int
pushf
jp
je
xchg
movsb
jecxz
lds
lea
mov
call
mov
pop
pop
cmpsb
mov
sub
dec
jmp
leave
or
inc
iret
mov
inc
inc
adc
jb
icebp
sti
dec
ret
and
cli
or
imulb
lret
cmpsb
cwtl
jge
sahf
mov
cmpsb
out
push
icebp
dec
addl
ds
mulb
clc
mov
pushf
pop
lock
xchg
das
cmp
mov
mov
lret
insl
ja
ret
adc
lahf
es
fildll
pinsrw
ja
mov
jo
icebp
jge
sub
out
fcmovu
mov
adcb
enter
lea
inc
rolb
sahf
pushf
test
je
mov
dec
and
fnsave
clc
pushf
not
xchg
jb
mov
popa
fnstsw
fildll
sbb
mov
pop
mov
xchg
popf
xor
or
xor
popf
jmp
xchg
std
ret
dec
pop
addb
and
fcompl
sub
mov
or
daa
fcompl
lods
mov
add
sub
call
jmp
jg
rclb
in
fdivrl
jg
pop
mov
mov
into
pop
or
lds
call
inc
inc
or
mov
mov
les
or
adc
js
adc
jg
addr16
xlat
xchg
inc
pop
sbb
mov
inc
or
add
mov
mov
std
jp
jmp
xchg
stos
jle
or
imul
fists
dec
xchg
sbb
jmp
pop
mov
jno
pop
push
push
repz
popf
pop
fcomps
lret
int
push
loop
mov
ret
xchg
pusha
sbb
adc
scas
adc
dec
ja
sub
dec
ret
cmp
cltd
jp
and
sub
in
inc
push
out
rorl
mov
inc
dec
mov
fidivrl
fwait
xchg
cmp
pop
dec
fstpl
fidivs
mov
adc
inc
mov
sbb
mov
std
jo
movsb
nop
aam
push
jae
mov
jge
fldcw
aaa
xor
out
dec
dec
hlt
add
addr16
jl
sub
scas
sti
pop
push
lret
xor
mov
scas
sub
and
cmp
jecxz
push
push
or
cmpsb
mov
nop
mov
sar
daa
mov
adc
jno
aam
sub
dec
jl
xlat
adc
dec
movsl
dec
xor
fstpt
dec
lahf
js
rcll
test
push
xor
int3
daa
pop
mov
mov
xchg
dec
fisubrl
jl
loope
ja
faddl
pop
outsb
dec
shl
adc
fcoml
andb
or
and
push
clc
xlat
pop
int
out
dec
popf
or
lcall
rorl
mov
push
test
cmpsl
xorb
jns
xchg
lods
pop
mov
ret
fs
mov
inc
lahf
mov
fsubr
inc
shl
add
inc
lret
jle
push
jge
cmp
xor
into
mov
push
mov
outsl
add
loop
mov
stc
hlt
dec
in
adc
cmp
data16
pop
mov
xlat
out
in
ss
add
xor
or
pushf
sti
and
mov
outsl
add
loope
fcomps
mov
adc
les
mov
xchg
xor
cmp
mull
sbb
call
pushf
dec
aam
jmp
data16
ds
aad
sub
test
xor
inc
mov
loope
je
push
loop
xlat
push
es
fdivs
lea
jg
movl
and
push
dec
aam
enter
adc
inc
push
mov
inc
aas
lods
mov
orl
add
div
mov
std
lahf
inc
cwtl
cmp
stos
mov
push
sbb
test
or
pusha
mov
lock
das
sbb
mov
inc
cmpsb
jp
cmp
ljmp
mov
dec
mov
clc
inc
mov
push
push
inc
mov
mov
push
add
mov
rcrb
mov
test
mov
mov
xchg
pop
push
adc
fstpl
lret
mov
clc
ljmp
dec
pop
pop
or
mov
mov
mov
dec
orl
mov
mov
cli
and
stc
mov
dec
rclb
xchg
sbb
sar
mov
jmp
das
xchg
negb
push
jmp
jne
inc
sbb
out
xor
xor
in
mov
mov
sbb
outsl
pop
xchg
cmp
test
and
pop
inc
lahf
orb
and
jae
adc
jae
jb
add
out
pop
stc
cli
nop
inc
jns
cmpsb
enter
rolb
inc
arpl
sub
popf
jge
lcall
pop
jp
shlb
insb
push
pop
mov
jp
lds
cmp
in
les
scas
movaps
outsl
inc
stos
xchg
in
mov
dec
inc
adc
loop
inc
sahf
xchg
adc
rcrb
push
cmp
xchg
test
ficoml
sbb
lret
dec
imul
es
shrl
inc
adc
imul
pop
out
push
jle
insb
in
pop
pop
pop
inc
pop
fisttpll
or
add
inc
inc
movl
xchg
sub
in
pop
js
fstp
sbb
cltd
xchg
xor
push
addr16
outsl
out
leave
je
aam
sbb
clc
jbe
sbb
jge
pop
cmp
xchg
xor
or
iret
add
fnstsw
lods
daa
xorl
inc
shrb
mov
xor
push
imul
in
dec
std
movb
lahf
pop
and
or
jno
test
popl
fwait
ds
push
mov
lahf
xchg
test
push
ret
test
jne
stos
xor
in
mov
scas
mov
jl
sarl
sti
push
iret
jp
inc
sub
das
outsb
mov
js
inc
mov
rcrb
lds
sub
and
fstpl
xor
adcl
sti
and
int
cwtl
ljmp
ret
mov
into
lcall
sahf
mov
lods
sahf
and
test
mov
dec
mov
aas
mov
fs
sub
adc
xchg
cmp
movsb
adc
test
pushf
nop
shr
cmpb
stos
into
test
cmc
push
jnp
xor
ror
loop
mov
pop
adc
cs
sbbw
lods
sub
mov
or
jle
mov
ss
xor
push
sti
shll
loope
je
push
pop
lcall
lods
adc
test
les
out
repz
and
sbb
and
mov
shrb
test
sbb
cli
mull
push
cs
sub
scas
aad
ds
nop
jo
lea
loop
inc
sahf
or
je
decl
out
stos
fistpl
cmp
roll
pop
test
adc
clc
mov
cmc
fisttpl
ds
pop
push
push
inc
fldl
inc
js
addr16
dec
cmpsb
cltd
cld
dec
dec
mov
xor
popa
mov
divb
pop
push
cwtl
repz
xor
cmp
into
xorl
xchg
lret
aam
push
mov
xor
lock
lods
test
mull
mov
stc
and
push
ret
xor
subb
mov
add
cmpsl
sahf
xchg
ret
mov
sub
dec
lods
les
mov
xor
and
ret
add
pop
cmpsl
pop
dec
shrb
cmp
sub
mov
fs
sbb
inc
cmp
ret
clc
adc
mov
ljmp
js
add
out
out
loop
push
xchg
call
inc
les
pop
out
ret
test
inc
xor
mov
cld
xchg
in
dec
daa
xchg
adc
pop
loopne
xchg
mov
sbb
iret
aam
mov
add
pop
jmp
inc
xor
pop
xor
jecxz
pop
xchg
sbb
repnz
xorb
dec
pop
jne
inc
ss
mov
nop
icebp
mov
jne
xchg
aas
mov
mov
out
into
sbb
bound
dec
nop
xchg
dec
ja
hlt
sar
out
ss
pushf
or
or
fwait
inc
jp
cmpsl
in
mov
jno
insb
mov
pop
das
jle
popa
jb
ja
xchg
pusha
dec
sahf
jmp
mov
loop
shlb
add
aas
inc
sbb
cmp
push
xlat
test
inc
push
inc
push
pusha
popa
push
stos
cmp
mov
imul
sub
insl
loope
fsubp
dec
iret
push
mov
mov
hlt
mov
and
outsb
lea
or
jg
rolb
push
jl
fidivs
pop
int3
mov
lret
pop
cmpsl
adc
test
and
scas
rolb
pop
bnd
leave
jmp
mov
cmpsb
push
push
adc
cmp
or
jge
dec
imul
mov
mov
xor
mov
cmp
inc
jl
gs
dec
mov
xor
inc
popf
imul
outsb
aad
xchg
xor
cmp
sbb
addb
pop
cmpsb
in
xor
daa
shlb
sahf
js
cmp
pop
pop
sub
mov
cmp
shll
adc
setg
repnz
and
xor
cmp
cmpsl
xchg
cwtl
pop
lahf
call
pop
adc
in
loope
xor
sbb
scas
outsb
adc
inc
adc
hlt
roll
int3
push
mov
mov
mov
push
loope
int
xchg
push
add
lcall
mov
push
fstpl
and
movsl
sub
jg
outsl
cmpsl
mov
push
cmp
test
pop
sub
enter
ret
mov
fcomps
pop
idivl
je
nop
cmp
addl
or
inc
mov
push
inc
cmp
clc
es
outsl
ds
loop
call
stc
bound
sbb
cmp
lret
lods
push
lods
movd
mov
in
cli
imul
push
in
je
ss
or
incb
adc
fnstenv
pop
dec
leave
pop
push
xchg
adc
cld
push
les
dec
push
repz
add
inc
cmp
push
xlat
jp
sub
mov
inc
pushf
movsl
out
push
jmp
mov
loope
cmp
movsb
and
xchg
and
roll
inc
pushf
divl
mov
cmc
inc
and
lea
call
add
inc
mov
dec
stos
loopne
fstpt
push
mov
or
cmp
aas
ljmp
dec
daa
fxch
and
adc
sarl
insl
and
dec
cmc
inc
cwtl
scas
pop
shlb
sub
fwait
and
cmpb
mov
adc
cmp
mov
mov
and
into
pop
and
mov
test
cmovs
popa
mov
add
data16
das
inc
jle
or
push
mov
adc
mov
sar
mov
sub
les
mov
call
jnp
jmp
das
or
xor
popa
and
pop
mov
outsb
stos
cltd
arpl
das
mov
decl
mov
inc
dec
cltd
scas
popa
push
xor
jge
mov
decl
dec
mov
test
loope
xchg
sbb
inc
aaa
mov
or
loope
fwait
ljmp
add
jp
dec
pushl
mov
cmp
outsb
je
xchg
insb
pop
push
mov
cmp
pop
cmp
inc
sahf
dec
or
mov
mov
incl
bnd
mov
and
das
popf
bound
adc
jns
pushf
sahf
xchg
mov
ret
inc
jle
sub
xchg
or
addr16
lahf
inc
jp
xor
popa
das
insb
sub
jnp
call
in
xchg
popf
pusha
in
xchg
fildll
jl
jmp
sub
pop
jae
adc
loop
shll
mov
lahf
mov
stos
mov
jecxz
or
aad
jne
adc
push
popa
adc
adc
jb
ret
add
mov
hlt
add
mov
adc
aam
cli
jg
inc
ficoml
or
lahf
push
cmpsb
pop
push
pop
ficomps
adc
cmpsl
jp
shlb
div
adc
pmulhuw
xchg
lcall
sbb
mov
outsl
aad
or
add
outsw
jl
ret
sti
ret
jae
xor
jo
or
lds
sarl
or
and
mov
inc
inc
xchg
cmpsb
dec
ljmp
mov
sub
popf
pop
pop
cmp
shlb
cwtl
sub
jo
cmp
stc
cmp
jnp
jbe
pusha
rorb
lahf
aad
jle
push
gs
add
dec
xchg
xor
daa
mov
push
add
js
movsb
ds
dec
lahf
push
xchg
and
lds
sub
mov
ror
popf
ror
shlb
jmp
add
sbb
mov
add
push
add
adc
pop
test
cmp
push
inc
push
xchg
hlt
adc
inc
addr16
addr16
test
popa
mov
mov
add
mov
popa
fisubl
rclb
xchg
jb
ss
mov
fcomps
jo
idivl
or
orl
inc
push
or
mov
adc
xor
mov
sbb
jne
stc
sbb
adc
push
imul
je
mov
cmp
jl
mov
pushf
sti
iret
xor
cmpsb
push
in
fbstp
sahf
sti
das
mov
and
cwtl
loopne
jns
pop
cmp
xchg
sbb
les
fisubrs
xchg
jnp
ret
sbb
lcall
sub
loop
xchg
xlat
xor
jmp
or
cs
adc
test
repnz
popa
dec
sbb
int
fnstcw
sbb
pop
jecxz
sahf
test
loope
rorb
mov
test
test
arpl
xchg
fisttpll
push
fldt
daa
pop
mov
clc
inc
jmp
and
push
xor
mov
pop
dec
sahf
cs
ja
adc
jecxz
idivb
jne
cwtl
imul
loopne
sahf
sti
sar
lods
jg
lret
mov
in
mov
mov
pop
div
dec
mov
das
mov
xchg
mov
adc
aam
dec
or
dec
sbb
or
jmp
cmpsl
pushf
popa
adc
fstps
lods
lcall
mov
in
test
pop
in
jle
shll
sub
outsb
and
clc
cmp
pusha
fstl
outsb
clc
mov
pop
ljmp
outsl
pop
pop
seto
test
push
xchg
jbe
enter
loop
sbb
push
add
mov
cltd
out
mov
mov
add
bound
xor
dec
xchg
inc
bound
clc
jg
sarl
pushf
fwait
sbb
roll
xchg
mov
jle
xor
jp
pushf
xor
mov
lods
testb
clc
mov
mov
inc
adc
outsb
loopne
dec
mov
in
dec
mov
fwait
sbb
bound
mov
insb
test
adc
push
out
cmp
or
daa
push
jp
jno
mov
jne
insb
xchg
int3
movsl
jnp
ss
jle
mov
in
pmaddwd
neg
adc
jmp
xor
mov
lods
aaa
xchg
push
pop
out
popf
cli
pop
mov
fimuls
push
sbb
lock
pop
mov
mov
pop
pop
adc
add
dec
call
hlt
dec
fucomip
arpl
or
jne
pop
inc
inc
add
fiaddl
xchg
xor
int3
mov
pop
add
jecxz
lds
test
sarb
fptan
push
ss
mov
push
inc
jbe
inc
mov
dec
jle
sub
cs
and
sbb
add
cld
jl
repnz
lea
xor
testl
fdivrs
ret
jb
push
jg
addb
dec
cmpsb
lret
addb
pushf
fxch
lods
movsl
mov
cmp
outsl
sub
and
je
sahf
popa
xlat
movsl
addr16
and
daa
lahf
hlt
mov
push
cmp
test
xchg
add
xor
pop
sub
sbb
pop
mov
push
push
add
inc
jl
fdivl
pop
shrl
sub
outsb
ficompl
adc
stos
idivl
xor
mov
sbbb
and
mov
repnz
roll
add
pop
lcall
cltd
mov
pushf
sbb
cmp
xor
roll
rcl
mov
cs
mov
jnp
mov
int
ss
shrb
aad
idiv
je
lret
xchg
shrl
fimuls
cmpsb
imulb
fildll
xor
pop
jne
cld
push
jg
rolb
popa
add
popf
data16
arpl
or
outsb
out
std
push
cli
iret
xchg
xor
in
dec
fcoml
fisubs
incb
shlb
roll
dec
mov
out
push
call
les
sbb
repz
add
ds
pop
sbb
aad
cmpsb
xlat
jge
subb
rcr
stos
push
or
jmp
sbb
outsb
aad
lret
add
scas
dec
rorb
inc
xlat
std
mov
scas
out
je
xchg
pop
jecxz
ds
lea
mov
call
add
pop
sahf
sub
adc
imul
adcb
pop
push
movsb
fldl
dec
mov
aas
sub
jb
adc
and
jb
rcll
lods
idiv
pop
out
lcall
mov
xor
mov
sub
xorl
fsubl
mov
inc
mov
add
in
das
xchg
outsl
inc
mov
push
jge
aam
rol
ret
fldl
fimull
negl
dec
stos
inc
push
fwait
mov
mov
mov
call
mov
das
mov
in
xchg
aad
pop
add
pop
shlb
sahf
test
and
push
and
fnsave
inc
adc
xchg
lods
xchg
sbb
popa
push
lds
pop
push
fs
stos
ja
sbb
or
xlat
xchg
mov
xchg
sbb
add
or
cltd
sbb
or
mov
add
frstor
xchg
stos
sbb
and
or
and
dec
mov
or
mov
out
int
xor
cwtl
pop
in
jge
xchg
or
sub
mov
imul
xchg
clc
faddl
fidivs
mov
mov
xchg
mov
mov
mov
imul
inc
addr16
lods
and
aaa
mov
iret
out
imul
addr16
xor
jmp
lods
iret
insb
add
jnp
dec
movsl
jle
mov
in
lock
ret
jmp
in
cmp
ret
jno
inc
fildll
push
and
popf
and
inc
mov
sbb
xchg
mov
sbb
cli
jo
push
push
subl
outsl
shrb
jmp
ret
cltd
pop
lret
lahf
fwait
hlt
cwtl
in
arpl
sbb
sbb
add
inc
ret
pushf
ljmp
sahf
mov
jne
jp
xor
or
movsb
mov
popa
rcl
and
mov
add
movsb
inc
sahf
adc
pop
out
and
inc
sbb
ljmp
add
jl
divb
dec
fstps
mov
xor
push
and
scas
cmpl
cmp
pop
push
dec
xor
inc
movsl
xchg
cltd
cmpsb
dec
popl
in
ljmp
daa
fwait
mov
cmp
lods
sbb
mov
sub
scas
cmp
xchg
rcrl
and
aas
imul
dec
jg
inc
add
mov
rcll
pop
dec
lods
push
js
in
push
int
xor
push
and
pop
fucom
sub
lret
outsb
cmp
jp
rolb
fildl
add
mov
mov
in
and
xlat
aad
cmpsb
lcall
jo
lcall
xchg
mov
rcrl
pusha
jns
sahf
lods
cwtl
aam
mov
icebp
cmpb
jge
xor
and
adc
insl
bound
xchg
sub
cmp
nop
sbb
lret
and
cmp
or
or
inc
loopne
jno
mov
or
shl
cld
cltd
stc
xchg
adc
dec
stos
add
mov
or
lods
les
inc
out
lret
cmpsb
cli
add
aad
jb
insl
in
mov
adc
fidivl
imul
xchg
pop
jnp
dec
adc
jno
imul
jnp
repz
outsb
xchg
add
cmp
adc
mov
mov
shlb
mov
cmpsb
into
addr16
cmc
arpl
mov
sub
adc
fsubl
jne
ljmp
je
enter
and
lea
pop
cmp
cmpb
xor
scas
push
fcmovne
push
adc
frstor
stc
insl
push
inc
in
xchg
aas
jo
jb
cmpl
shll
cmpsl
addr16
inc
and
mov
inc
push
mov
dec
add
add
fmuls
inc
adc
lock
ret
mov
aad
and
das
lods
inc
insb
mov
adc
pop
dec
movsl
sub
cmpsl
lcall
icebp
xchg
fstpt
push
pop
cmp
repnz
xor
and
push
shlb
sub
ret
scas
in
test
fstps
ja
aam
push
pop
data16
cmp
fwait
fwait
xchg
in
vpminsw
jnp
mov
pop
stos
data16
out
outsb
roll
and
push
jae
pusha
jl
add
mov
pop
xor
push
push
mov
or
cmpsl
dec
ret
push
and
pop
sub
rorb
push
mov
ja
sub
jg
jo
jnp
movsb
add
loope
decl
xchg
in
or
add
xchg
pop
cmpsl
mov
lret
push
mov
outsb
in
ja
dec
cmp
mov
inc
xchg
sarb
mov
dec
xor
jne
mov
out
dec
mov
popf
jns
pop
rcll
das
imul
cmp
test
or
ret
popa
jp
or
mov
or
jnp
sbb
in
in
xor
lock
add
xchg
or
mov
inc
dec
in
add
inc
cmpsl
push
jecxz
sbbl
pop
lret
or
and
mov
xlat
pop
imul
scas
addr16
sbb
bound
dec
mov
into
lods
stc
ret
dec
pop
add
clc
arpl
dec
jecxz
cmp
pop
roll
mov
insb
xchg
loopne
cld
int3
pusha
stos
aam
arpl
xchg
lds
sub
icebp
add
xchg
push
aaa
repnz
lea
movsb
shl
xchg
push
dec
mov
jbe
push
lds
cmp
cmp
add
mov
cwtl
stos
repz
into
xchg
dec
dec
outsb
rorb
sbb
sub
lods
into
jmp
and
or
cmp
xchg
jo
adc
mov
ja
sarl
enter
daa
lcall
jno
adc
addr16
shll
shll
movsl
jne
mov
lahf
xor
hlt
push
loope
dec
test
lods
je
xor
or
mov
pop
pop
jb
popf
js
out
loopne
or
pop
push
cld
in
jb
and
xchg
sub
rep
mov
out
shlb
lods
popl
pop
cwtl
sbbb
push
lock
and
popa
or
or
int
and
sub
pop
pop
add
jb
aaa
dec
insb
push
xchg
movsb
jne
cmp
sbb
or
sbbb
jg
inc
js
andl
mov
inc
fs
inc
adc
or
cmp
dec
shlb
jnp
fcmove
pop
mov
addr16
adc
inc
into
hlt
lcall
fs
sbb
mov
push
into
stc
ds
popf
adc
out
add
or
adc
lods
stos
jge
mov
scas
cmpsb
out
sbb
loopne
dec
test
in
and
mov
gs
pop
loope
xorl
lcall
imul
xor
repz
pop
xchg
les
cmp
rcl
sti
jmp
sub
xchg
out
fadd
aaa
pushf
push
push
sub
mov
cmp
jno
nop
mov
lods
dec
jle
mov
fstps
dec
fsub
xor
ljmp
call
add
mov
dec
push
pushf
dec
inc
gs
cltd
or
inc
aas
insw
lods
jb
and
mov
shl
jae
testb
cwtl
lcall
mov
sub
cld
cs
incl
js
or
jecxz
push
mov
mov
mov
aam
fisubrl
sti
popa
popa
es
fildl
pop
fisttpl
mov
jmp
icebp
pop
adc
and
jne
mov
mov
inc
addr16
rorb
or
mov
in
mov
ret
dec
push
adc
xor
xor
decl
aam
jle
add
imul
dec
ret
dec
sub
ret
and
pushl
ljmp
or
dec
sub
mov
inc
test
sbb
xchg
inc
rol
ss
or
jo
fwait
cmpsb
and
push
and
add
out
cmp
inc
scas
xor
dec
jbe
lcall
mov
jecxz
mov
sub
push
ja
test
inc
sub
xchg
mov
mov
inc
xor
popa
call
out
sub
sarb
aaa
pop
xchg
int
cltd
cmpl
mov
pop
and
addr16
xlat
cmp
addr16
mov
mov
insb
add
lods
jle
stos
in
fisubrs
pusha
push
xchg
and
sub
aas
xchg
fistps
dec
inc
push
dec
pop
jae
xor
cltd
popf
outsl
xchg
aam
push
cs
stos
jl
clc
and
sbb
mov
scas
lret
push
jge
mov
iret
sub
stc
into
pop
cmp
xchg
cs
adc
xlat
enter
xchg
out
cmp
popa
call
xchg
aaa
ret
cmp
dec
orb
xchg
or
ljmp
rorb
mov
popa
dec
or
test
pop
mov
sub
mov
jge
jnp
sbb
pop
xor
imul
or
jp
add
or
jl
jp
dec
mov
iret
push
pushl
jo
lea
and
pop
cmp
xchg
fs
loopne
jmp
cmpsb
push
add
in
mov
mov
mov
jno
sahf
dec
sub
ds
cmp
clc
xchg
movsl
jl
fldenv
sbb
xor
fldl
add
sub
jbe
into
pop
cltd
jg
js
test
push
mov
loope
jns
fdivl
xlat
movsl
sub
in
add
cmp
cmp
movsl
outsw
subb
cmc
sbb
pop
jnp
loope
pop
and
cld
cld
push
or
test
sub
div
lcall
test
sbb
insl
out
lds
cmp
add
mov
pusha
inc
push
shlb
ss
pop
sarl
push
sbb
idivl
lret
dec
fdivrl
cmp
idivb
repz
xor
xlat
out
cmc
decl
das
xor
subl
push
dec
stc
cmc
and
adc
aad
add
imul
xchg
cmp
mov
pop
inc
out
repz
cli
push
push
sbb
mov
dec
sti
jmp
cli
scas
ja
gs
mov
pop
pop
mov
push
xchg
imul
cmp
xchg
xchg
icebp
cmp
xchg
mov
mov
cld
xor
jl,pn
jnp
mov
pop
dec
dec
fstpl
inc
adc
inc
fsts
je
and
jecxz
mov
in
xchg
pop
lea
lahf
call
addb
adc
and
fldt
sti
lea
sub
pop
inc
sbb
sbb
add
cld
in
jp
ret
and
jbe
roll
and
std
pusha
inc
cwtl
push
in
mov
in
mov
cli
in
cld
pop
loopne
lret
outsb
jns
mov
xchg
aas
mov
pop
cmp
mov
adc
xor
pop
mov
inc
cwtl
out
lds
ret
mov
es
mov
fwait
mov
cmpsl
cwtl
and
out
xor
xchg
ja
cmp
add
mov
popa
test
rcrb
jle
test
jbe
fcomps
push
enter
movsl
ljmp
sbb
into
stos
inc
push
xchg
out
xor
xchg
xchg
xchg
std
push
sub
xchg
xor
mov
xor
fcoms
xchg
cmp
sub
loop
mov
rorb
les
xchg
or
cmpsb
lcall
sti
addb
push
xor
int3
xchg
subb
or
cmp
and
and
mov
outsl
repz
in
test
dec
leave
sarb
rcrb
mov
sub
mov
dec
mov
jne
dec
std
mov
pop
movsb
out
or
xor
imul
xchg
cwtl
jmp
orl
out
scas
cmp
jp
xor
outsl
jecxz
xorb
mov
insb
inc
push
adc
adc
cmp
mov
cltd
test
xchg
mov
std
jmp
pop
add
jmp
sbb
popf
xchg
sbb
mov
ficoml
dec
stos
out
outsb
jae
jnp
dec
sbb
imul
pop
scas
sub
xor
adc
push
and
mov
inc
cltd
pop
pop
pop
jo
lcall
in
inc
outsl
or
dec
push
inc
mov
xchg
mov
fcomps
push
popf
fimuls
xchg
sub
daa
add
mov
mov
jmp
mov
xchg
and
jge
mov
aaa
sub
or
jecxz
add
mov
dec
es
stos
push
loop
inc
xor
arpl
scas
and
and
clc
cmp
ds
push
mov
xlat
insb
inc
in
lahf
out
enter
daa
cwtl
xchg
repz
inc
jno
dec
xchg
sub
inc
mov
sub
push
movsl
andl
mov
push
lahf
jo
bound
jne
test
ret
xor
int
cmp
mov
sarb
pop
mov
in
loope
shlb
cmp
nop
outsb
sub
adc
push
push
fisttps
jns,pt
sbb
xor
fisttpl
adc
into
int
lret
and
repnz
add
or
inc
and
sbb
sbbb
into
test
orb
sbb
xor
adc
jecxz
ss
and
fadd
testl
lret
and
cmp
lods
jl
bound
cmc
sub
xor
pop
inc
outsl
js
and
lods
cmc
js
push
add
or
mov
xchg
int
ja
pop
cli
fwait
add
xor
lret
out
test
sti
lcall
movsl
ja
loopne
test
adc
push
repz
fsts
sbb
roll
jns
mov
test
rolb
and
xchg
adc
jno
out
cld
nop
insl
push
lcall
mov
mov
insl
je
push
and
data16
lea
rcl
out
ret
pop
push
add
cmp
imul
jnp
filds
inc
mov
inc
xor
jb
jb
pop
mov
and
and
rcll
cmc
stos
std
ss
popf
cwtl
adc
mov
xchg
mov
sti
xchg
adcl
xor
mov
lock
mov
mov
cli
xchg
mov
ret
sbb
xor
jno
dec
xchg
push
jnp
xchg
pusha
push
mov
or
push
lods
mov
test
mov
mov
sub
shl
aam
sub
stc
stos
mov
dec
inc
push
fwait
mov
fst
mov
clc
scas
cmp
xchg
test
mov
pop
mov
cmp
xchg
mov
xchg
fldcw
test
add
cmp
hlt
pop
aas
add
and
push
sbb
mov
adc
dec
clc
bound
pop
neg
xchg
xchg
xchg
ja
adc
outsl
fsqrt
or
mov
fwait
add
jne
push
fildll
add
mov
imul
xor
inc
inc
or
mov
in
jg
xchg
inc
mov
mov
outsl
into
mov
lahf
popf
and
pop
xacquire
adcb
das
push
xchg
mov
ret
stos
mov
push
out
out
lcall
fdivrl
xchg
arpl
sbb
push
out
scas
stc
sub
jne
xchg
testl
hlt
leave
insb
lods
cli
jnp
ss
in
iret
in
pop
andl
cmp
addr16
outsl
xchg
test
fldl2t
lds
out
jae
fmull
popf
mov
pusha
mov
stos
bound
and
push
ds
nop
mov
push
or
adc
push
call
ret
and
sub
hlt
les
arpl
aaa
fadds
popf
sub
jb
cmpsb
push
mov
inc
push
xchg
in
pop
int3
and
fidivs
sub
rorl
into
mov
pop
popa
jge
sub
test
push
cmp
jbe
push
push
jge
gs
aaa
jmp
add
add
mov
dec
xchg
std
push
push
lds
ljmp
inc
pop
scas
jmp
and
mov
jbe
int
loope
mov
in
xchg
xchg
jle
xchg
in
mov
sbb
out
sub
insl
and
dec
and
and
dec
lahf
jno
push
pop
inc
adc
int
xchg
xor
push
xchg
cld
movsl
inc
pop
out
pop
js
outsb
add
leave
xor
push
mov
pusha
faddl
sbb
outsb
leave
sarb
icebp
fisttpl
and
pop
adcb
sbb
cltd
fsubl
sti
loope
adc
js
sub
repz
mov
push
mov
into
mov
movsb
push
sbb
imul
idivb
test
nop
mov
mov
ds
adc
mov
cmp
jl
clc
idivl
cmp
shll
xor
into
popf
pop
push
cmc
lea
sti
outsl
push
fbstp
stc
arpl
leave
lods
filds
and
cmp
lods
pusha
arpl
out
sub
xor
movsl
xchg
in
popa
pushf
sar
dec
push
pop
cmc
sbb
loopne
sub
pop
imul
mov
outsl
pushf
cwtl
imul
dec
mov
pop
jno
xchg
or
mov
and
xlat
mov
sbb
mov
push
in
jmp
std
xchg
cs
adc
aad
flds
dec
popa
inc
dec
fwait
cmc
inc
inc
ss
push
fld
push
dec
je
sar
jecxz
pop
shufps
dec
lea
ja
jle
cvtps2pd
sti
fmull
xor
pop
orb
aam
inc
push
adc
xorl
push
dec
push
sbb
dec
testb
std
sti
mov
movsl
dec
mov
repnz
subl
mov
lret
dec
mov
mov
xor
imul
das
out
cmp
pusha
jbe
mov
pop
pop
scas
ret
test
inc
es
sbb
jp
xchg
dec
xchg
mov
cmpsl
xchg
pop
pop
mov
jecxz
cmc
lods
sbb
add
faddp
test
push
fcmovnbe
mov
lahf
ss
ret
mov
sbb
icebp
mov
dec
push
ljmp
ljmp
rcrb
bound
cli
inc
rclb
fbld
push
add
mov
xor
ret
or
adc
cltd
dec
pop
jle
test
jg
xchg
clc
and
or
mov
fwait
xor
mov
aaa
sbb
xor
cmp
in
push
imul
cmpsl
pop
sbbl
js
sbb
rorl
in
inc
out
jge
pop
or
dec
pop
jne
pop
lcall
cmp
bound
movsl
jl
cs
pop
subl
fsubl
and
jo
data16
pop
jp
mov
mov
loopne
insb
pop
mov
jnp
sbb
jle
fistl
pusha
and
xchg
xchg
push
xchg
pop
pop
push
mov
push
xor
out
ljmp
sbb
xchg
stos
aad
sti
and
xchg
inc
imul
add
push
xchg
cmp
mov
loope
dec
fists
fisubrs
lock
int
inc
jne
mov
push
popa
outsl
inc
ds
jbe
push
xchg
cmp
pop
int3
or
ficompl
xchg
popf
lods
lds
pop
rcrb
mov
pop
mov
sub
mov
cmpb
loop
sub
push
or
rcll
jl
ja
dec
add
mov
test
mov
sbb
scas
ficoms
ja
or
xchg
dec
inc
jo
sub
in
insl
in
enter
daa
xchg
adc
jno
adc
sub
lret
lods
test
movsl
xchg
pop
cmp
jmp
cmp
push
sub
cmp
movsl
xor
in
pop
push
jmp
inc
pop
or
mov
loope
mov
mov
sbb
shrl
dec
pop
adc
int3
js
popl
jnp
sbb
loop
mov
pop
mov
or
push
push
sub
sub
fsubl
pop
pop
in
add
repnz
sbb
mov
test
les
pop
pop
cmp
and
xor
adc
or
cmp
aaa
insl
lcall
jp
sarl
dec
cmp
xchg
push
or
push
into
addb
xor
icebp
pop
outsl
ss
loop
pop
pop
stc
sbb
pop
add
lods
inc
int
mov
into
out
lea
xor
ds
sbb
gs
mov
pop
push
js
adc
jne
mov
push
imul
shlb
sbb
aaa
pushf
mov
negl
mov
std
jl
jmp
test
out
jne
sbb
dec
cli
leave
sbb
bound
stc
and
shl
insl
xchg
repz
imulb
lea
call
pop
ror
int3
adc
sbb
sub
mov
fs
and
out
inc
imul
loop
dec
jb
mov
frstor
outsl
inc
shll
in
ret
pop
lods
std
test
xchg
xchg
mov
popf
imul
sbb
mov
stos
mov
movb
into
jo
mov
push
fidivrs
es
dec
xchg
insl
popa
push
add
cmpsl
xchg
bound
icebp
mov
rcrb
mov
adc
fwait
or
mov
aam
sub
pop
pushl
and
loop
and
mov
and
mov
add
outsl
dec
pop
or
icebp
stos
adc
iret
out
pop
lret
and
dec
cmp
mov
test
cltd
xor
xor
xchg
dec
mov
pop
and
subl
mov
xchg
rcrl
inc
sbbl
push
push
roll
push
lcall
jns
jne
fstpl
in
js
xchg
in
fbstp
dec
or
push
ja
cmc
popf
dec
mov
movsb
push
mov
ja
insb
dec
repnz
cmp
std
cmp
out
movsl
outsb
sahf
bound
adc
cmp
push
out
or
sub
imul
cmc
dec
or
fcoml
insb
cmpb
jnp
outsl
jle
xchg
mov
pusha
mov
pop
repnz
sub
fucomip
mov
fiadds
fidivl
xchg
fwait
push
mov
pop
popf
or
mov
xchg
out
stos
dec
sahf
addr16
in
sbb
cwtl
mov
in
sub
push
cltd
pop
add
xchg
fwait
mov
ret
mulps
out
mov
cmc
cmpsl
faddl
adc
jmp
shlb
inc
mov
push
js
xchg
mov
je
dec
stc
push
fidivs
fcmovnb
js
mov
lods
inc
loopne
sbb
jae
mov
mov
jge
fisubs
aaa
mov
or
jmp
jl
jae
dec
jae
rorl
js
xor
je
dec
scas
mov
outsl
mov
push
or
adc
in
cmpsb
pusha
pop
hlt
in
push
cmp
enter
daa
xchg
adc
cmpsb
sub
mov
pop
insl
ds
sbb
and
clc
push
add
test
jecxz
lods
xor
sbbb
js
cmpsb
insl
pop
inc
add
insl
mov
fnstsw
dec
outsb
pop
jecxz
or
fst
cmpsl
sub
loope
mov
add
push
and
adc
stc
repnz
sub
xor
rclb
out
orl
mov
jg
inc
test
iret
xchg
sbb
test
sub
mov
and
cwtl
aad
mov
lahf
and
cmp
repnz
lods
lret
mov
shlb
or
sahf
push
sbb
or
outsl
adc
jb
stc
roll
adc
aam
add
dec
mov
sbb
mov
enter
jae
cli
xor
call
in
aaa
mov
sti
cmpsl
movsb
sar
cmp
loopne
scas
ret
pop
xor
ljmp
test
rcll
repnz
jb
dec
xlat
ss
das
sub
stc
lods
mov
test
iret
jmp
sbb
or
lock
mov
scas
inc
pop
call
je
into
mov
jl
cmp
repz
jl
sbbb
cmp
aas
xor
adc
in
inc
pop
enter
and
inc
xchg
mov
popa
mov
ljmp
jg
or
rcll
std
sub
lret
mov
outsl
pop
mov
adc
add
add
inc
inc
mov
cltd
daa
lock
cmp
pop
pop
outsb
aam
mov
ret
sarb
and
leave
insl
dec
lcall
xchg
sub
icebp
xchg
subl
xor
mov
sbb
call
pop
fst
lods
shrb
fwait
sub
or
push
in
imul
pusha
adc
xchg
adc
punpckhbw
mov
pop
mov
cltd
stos
add
out
rolb
scas
mov
push
xchg
or
movups
add
dec
mov
mov
sbb
inc
test
dec
cli
xchg
xchg
shll
or
aad
xchg
ret
mov
push
incb
add
insl
cs
dec
mov
xor
ret
sbb
push
cmp
push
repz
mov
sub
mov
rorb
xlat
dec
xchg
enter
outsb
adc
cmp
dec
aad
dec
jne
repnz
test
mov
xchg
les
adc
loop
jb
mov
sbb
dec
jp
mov
push
insb
in
lahf
sbb
jle
inc
jl
mov
jl
ffreep
xor
xchg
frstor
stos
loop
inc
mov
stos
jae
mov
jne
sub
mov
stos
mov
repz
insl
lock
loopne
sti
adc
iret
or
cltd
pop
dec
nop
cltd
hlt
movsl
inc
mov
jnp
pusha
or
dec
cli
xchg
inc
cmp
xor
fsubr
notl
loop
pop
pop
jge
adc
sbb
aaa
rclb
cltd
repnz
adc
xchg
cmp
adc
sub
xor
jbe
popa
sub
sbb
hlt
mov
mov
addb
incb
inc
rorb
imul
or
jo
jo
scas
pushf
pop
or
push
in
ljmp
cmp
inc
mov
in
cmp
enter
daa
xchg
sahf
je
cmp
cmp
popaw
sub
mov
mov
movsl
lahf
out
and
pop
rcrb
rcr
fsubrs
out
movsb
push
xor
xorl
pop
mov
xor
xchg
push
int
loope
inc
xor
mov
clc
xchg
outsb
repnz
rolb
pop
hlt
orb
push
mov
shll
and
add
int
enter
aas
imul
into
jmp
push
mov
js
sbb
mov
test
push
cmp
xor
call
jne
mov
jbe
jl
pop
cmp
ret
dec
imul
div
push
sbb
push
adc
shll
cmp
enter
bound
cmc
loop
sbb
xchg
outsl
hlt
xchg
xchg
mov
push
adc
data16
add
cwtl
or
pop
push
lods
adc
push
out
jae
idiv
scas
arpl
push
or
mov
je
pop
mov
rcrl
and
pushf
out
call
pop
add
nop
pusha
aaa
repz
xchg
jp
cmp
lea
mov
push
sub
jmp
dec
ss
nop
flds
inc
dec
mov
into
enter
lea
dec
jecxz
into
fcmovnb
cld
aas
lea
jbe
or
roll
xchg
into
testb
fistl
mov
inc
stos
cmp
aas
and
mov
add
and
push
ja
into
rcll
push
or
std
rorb
scas
cwtl
cld
xor
mov
sbb
sub
mov
add
mov
arpl
mov
icebp
mov
ljmp
push
sbb
movsl
mov
fisttpll
test
add
push
jnp
mov
inc
adc
and
insb
shlb
cld
sub
sub
xorb
addb
pusha
sahf
clc
fwait
aad
xchg
movsl
lock
mov
xor
pop
pop
stos
out
pusha
jo
and
in
jo
jo
hlt
add
inc
xor
data16
mov
sbb
sub
test
xchg
xor
sbb
dec
ror
into
and
fwait
sar
push
hlt
mov
js
mov
mov
out
sub
pop
lods
pop
or
mov
ljmp
stc
fidivrl
mov
addr16
or
mov
inc
mov
adc
jns
dec
mov
aad
mov
xchg
out
arpl
jp
or
xlat
lcall
into
enter
clc
sub
popa
jne
repz
jp
dec
push
mov
jnp
insb
pop
aam
jnp
sub
loop
in
or
pusha
repz
inc
dec
xchg
shr
xor
mov
ja
jae
pop
fs
cmp
loope
lret
push
adc
xchg
andl
test
nop
fsubrs
daa
sbb
iret
outsb
or
clc
imul
hlt
lock
arpl
sub
jle
xor
enter
mov
xor
jg
int
inc
pop
lods
or
fidivrs
ffreep
scas
fldt
out
fdivs
repnz
sub
or
movsb
lahf
mov
push
jbe
adc
dec
mov
sbb
add
in
cmp
movsl
jl
add
out
dec
push
pop
mov
xor
sub
xor
jecxz
cmp
xor
xor
mov
ja
cmpsb
inc
inc
in
and
mov
xchg
stos
lods
cmp
push
jno
stos
sub
lret
mov
loopne
movsl
cmpsb
shl
mov
mov
push
cmpsb
js
test
stc
push
push
xor
sbb
or
pop
adcl
cmp
inc
pop
lds
ret
loope
inc
xor
sub
pushf
lcall
int3
push
rcrb
iret
lahf
data16
popf
add
sbb
pop
mov
mov
push
pop
call
int
orl
pop
jnp
daa
lcall
dec
mov
loop
sahf
test
cmp
jg
xlat
mov
enter
xchg
add
leave
adc
int3
add
lock
and
push
pusha
fxch
add
mov
or
mov
cmc
test
adc
jl
daa
cmp
cmc
dec
pop
add
out
cmpsw
test
lods
cld
bound
fidivrs
out
lret
jmp
lcall
in
or
or
incb
push
int
rolb
adc
cmpb
fwait
arpl
xchg
sbb
lods
cmp
jns
xlat
mov
adc
call
sub
pushf
cmp
jmp
inc
and
into
in
aad
xchg
mov
inc
dec
pop
pop
int3
inc
adc
fstps
sbb
lcall
shrl
test
push
jp
add
popf
push
adc
pop
or
xchg
fildl
jbe
push
sti
mov
xor
inc
mov
lds
jge
adc
rcll
sbb
xor
mov
lea
sahf
pop
addl
fwait
mov
cmp
xlat
mov
imul
mov
lea
xor
xchg
ret
in
andl
and
and
xor
xchg
inc
icebp
mov
aas
inc
sahf
lods
enter
xchg
sbb
push
test
pop
mov
pop
sbb
subb
dec
pusha
test
imul
xchg
test
sub
ljmp
ja
or
sbb
xchg
xchg
cmp
or
mov
movb
xchg
fstpl
leave
dec
in
ds
mov
and
ret
shrl
les
xchg
add
shll
out
or
dec
sub
xchg
aaa
jb
mov
add
mov
fs
or
jp
addr16
xchg
shll
mov
cmp
mov
ja
pop
push
dec
jnp
std
inc
dec
insl
jae
push
push
fwait
das
cmp
sbb
mov
int
out
inc
sub
jns
xor
subl
cmpsl
sub
pop
popa
cld
repnz
jp
xchg
sbb
ret
jnp
pop
fs
ja
in
insl
inc
pusha
mov
filds
bound
cwtl
xor
inc
mov
and
lahf
popf
xor
mov
push
pop
mov
add
xchg
jb
mov
rclb
push
outsb
or
adc
xchg
mov
push
jo
or
les
push
push
hlt
cmp
push
arpl
into
mov
subl
lret
jecxz
inc
cmp
fiaddl
rcll
xchg
ficomps
mov
ficomps
pop
lds
ror
sarb
cmpsb
daa
popa
leave
jg
js
sub
test
mov
jge
ret
adc
push
xor
cwtl
sbb
jl,pn
pop
es
rclb
xor
test
subl
jmp
das
clc
inc
lods
movsl
into
cmpsb
jmp
xchg
in
enter
daa
xchg
cmp
cmp
dec
lods
sub
mov
ds
mov
movsl
lods
imul
rorb
lahf
sub
xor
div
pop
add
push
push
xor
repnz
insb
sbbl
lock
rorl
add
outsb
push
or
loope
pop
and
sub
outsb
mov
pop
sbb
cmp
xorb
enter
shlb
inc
stos
lock
and
int
pop
dec
pop
cli
int
iret
out
fstl
decl
mov
inc
push
sahf
push
addl
mov
mov
sub
mov
rcrb
adc
cli
inc
ss
dec
mov
xchg
lods
add
and
divl
loopne
hlt
jns
rcll
xchg
or
fs
or
inc
cmc
jo
mov
cmp
push
outsl
mov
pop
loop
ljmp
rolb
data16
jne
fldcw
fsub
jno
inc
cli
int
mov
in
js
insl
sti
mov
cmp
fst
gs
and
dec
pop
xchg
rorb
adc
dec
push
les
fs
xchg
fsubl
sbb
and
xlat
repz
mov
test
add
xor
aad
stos
mov
rolb
inc
xchg
or
aad
test
jecxz
sbb
movb
xor
add
stc
inc
fstpl
cmc
in
inc
pmaxub
sbb
pop
mov
mov
push
inc
mov
add
aas
pop
loop
jb
popl
and
shrl
negb
cwtl
jb
and
xchg
push
addl
stos
jecxz
ja
and
and
and
das
dec
insb
bound
inc
out
pop
aam
and
ret
jae
or
stos
mov
dec
js
mov
mov
push
faddl
lods
xor
mov
lea
pop
mov
cmp
sbb
loop
loop
jb
mov
mov
cmp
push
sub
mov
xchg
and
mov
xchg
out
popa
ss
out
mov
pop
stos
int
xchg
out
jmp
les
ucomiss
add
jl
xor
test
fbld
xchg
adc
bound
test
fistl
cmp
mov
sarl
add
or
fwait
push
mov
faddl
mov
ret
lds
orl
repnz
loop
and
inc
mov
add
jp
outsb
fs
inc
loope
test
xor
std
dec
jle
test
mov
es
out
and
bound
sarl
sub
xchg
and
int
out
xor
or
bound
pop
mov
out
popa
mov
xchg
adc
mov
or
push
jle
add
sub
out
and
pop
jmp
lods
and
pushw
mov
mov
mov
xchg
loopne
stos
adc
xor
sbb
ficomps
out
imul
imul
adc
iret
and
fcmovb
pop
icebp
mov
hlt
xchg
jl
xor
nop
or
mov
adc
push
out
cmc
or
or
pop
or
fiadds
mov
sti
mov
shl
xchg
mov
stc
test
leave
divb
push
movsb
mov
in
adc
push
jbe
test
hlt
cmpb
rorb
aaa
arpl
or
or
inc
dec
das
enter
jl
xor
loopne
mov
cmp
and
lcall
cmp
rolb
lock
enter
daa
xchg
push
dec
cmp
fwait
pop
jno
cmc
shrb
cltd
and
sbb
ds
jns
movsl
mov
das
and
daa
ss
dec
jo
push
dec
dec
mov
in
jl
add
stos
or
cmpsb
adc
mov
cmc
pop
shrl
js
pop
add
inc
push
push
push
xor
loope
mov
push
sub
testb
inc
inc
adc
adc
stos
add
lds
fistpll
mov
push
gs
push
and
mov
mov
jns
lret
dec
popa
push
movsl
dec
mov
sbb
sub
std
xor
orb
jg
xchg
fdivl
je
movsl
fs
inc
inc
ss
cmp
rcr
fidivs
sub
lret
push
shrl
cmp
rolb
or
enter
mov
aaa
add
xor
push
repz
rolb
stc
lods
test
adc
adc
add
repnz
pop
add
mov
js
out
xor
cli
add
lods
in
jecxz
or
arpl
inc
loopne
gs
mov
cmp
jo
adc
lret
rol
mov
pop
repz
xchg
and
cmp
cmp
rcl
xor
into
and
mov
push
jmp
subl
aad
xor
nop
push
inc
dec
aad
sbb
jbe
add
push
jecxz
cmpsb
pop
movb
and
jnp
sub
pop
dec
add
adc
xor
mov
aas
and
inc
aas
std
add
jb
pop
pop
dec
xor
es
repnz
mov
fildl
cwtl
sub
xor
mov
cmp
mov
push
lret
out
xchg
mov
das
test
lea
das
sub
gs
sbb
mov
es
insl
in
mov
cli
mov
nop
insl
jecxz
insl
xor
icebp
in
xchg
inc
lods
sahf
xor
out
lock
mov
cmp
sub
pop
inc
pushf
shlb
pop
dec
test
pop
push
lock
mov
in
mov
dec
lcall
or
stc
popa
dec
xor
pop
scas
repnz
mov
cmpsl
lock
lret
push
add
jo
int
repz
jp
jecxz
pop
adc
mov
outsb
mov
imul
pop
rol
rolb
dec
fwait
dec
inc
clc
push
fldl
add
flds
inc
and
xor
popf
mov
in
and
lods
mov
and
mov
mov
test
dec
popa
add
mov
mov
pop
test
sbb
mov
add
scas
jns
int
xchg
lock
add
out
pop
inc
sub
push
cmc
pop
addr16
pop
mov
pop
xchg
lds
xchg
inc
jle
jge
in
arpl
pusha
les
inc
xchg
dec
push
adc
inc
mov
pop
jae
test
into
pop
mov
shr
sub
xor
imul
adc
push
mov
fsubs
mov
xor
dec
pop
sub
or
out
inc
xchg
jg
inc
outsl
push
push
cmp
fisubrl
fisubrs
int3
mov
cmp
fisubs
outsb
cli
sar
push
repnz
push
fcmove
insl
or
movsb
inc
insl
jg
arpl
jge
and
mov
push
aaa
and
sub
jle
aam
inc
int3
aaa
dec
sahf
ret
cli
fiadds
jo
ret
sbb
push
and
call
inc
inc
lret
cmpsb
out
add
xlat
ds
jo
jns
nop
ljmp
fld
sub
imul
and
ds
xor
and
push
inc
push
pop
test
in
pop
add
push
and
jne
cmc
push
call
mov
ljmp
push
adc
or
sub
pop
adc
out
leave
sub
adc
std
sbb
cmp
mov
mov
movl
cld
add
cmp
clc
pop
setp
mov
or
gs
xchg
test
data16
jg
jbe
mov
xor
mov
scas
andb
adc
mov
pop
fcomps
mov
mov
cmp
and
int
shlb
cmc
incb
xor
xchg
fildll
sahf
cmp
loopne
cmp
fwait
scas
adc
cmc
cmp
push
pop
out
data16
in
lods
mov
and
outsl
lods
call
xor
jno
sti
adc
ljmp
loopne
pop
rclb
adc
pusha
imul
pop
loopne
bound
sbbb
mov
xlat
jno
sti
sub
fsubs
ljmp
jmp
lds
cs
sub
xor
imul
rcr
jne
je
xorl
or
negb
call
not
sbbl
filds
fcmovnbe
les
pop
idivl
inc
inc
nop
or
or
daa
jecxz
jbe
orl
ret
cmp
rorl
fwait
mov
and
std
outsb
or
mov
in
cmp
dec
scas
xor
fsubr
jnp
push
test
pop
mov
jb
lock
add
mov
call
jecxz
es
jg
lret
pop
xchg
dec
outsb
cmp
mov
les
lods
or
cmp
mov
aas
scas
adc
pop
js
xchg
mov
jle
lahf
imul
push
mov
sbb
dec
sbb
xchg
test
popa
sub
or
stos
stos
pushf
out
scas
loop
xchg
adc
push
stc
paddsb
add
mov
leave
xor
repz
sub
gs
xor
in
test
jb
xchg
andl
cvtps2pi
daa
add
or
iret
and
push
xorb
add
ds
jmp
lret
push
pop
or
inc
pop
xchg
mov
ret
cmp
xor
pusha
aas
dec
push
push
clc
inc
dec
mov
adc
les
loope
jne
dec
imul
sub
jns
adc
mov
fdivl
out
sti
lea
dec
popf
lcall
mov
movsl
insb
add
mov
jle
out
push
in
hlt
clc
pusha
pop
pop
xchg
fistps
jae
sbb
std
xchg
inc
ret
jae
sbb
push
inc
push
leave
popf
cmc
in
mov
adc
stos
cli
clc
stc
and
add
imul
aas
push
inc
ds
adc
emms
ret
mov
push
mov
sbb
insl
arpl
test
mov
or
mov
roll
sub
xchg
popf
ljmp
push
mulb
rcrb
cli
mov
lahf
fstpt
in
movsb
lret
pusha
push
push
mov
dec
jbe
mov
sbb
mov
or
aas
add
sarb
fnsave
pshufw
data16
addr16
cmp
or
sub
leave
adc
in
mov
popl
or
cmp
aam
mov
push
sub
mov
push
ds
movsl
ret
and
adc
lahf
xchg
push
push
repnz
ds
and
sbb
adc
hlt
pop
pop
or
pop
shrl
mov
loopew
xchg
fbld
sub
mov
ror
repnz
sbb
sub
cmp
dec
fisubrs
jae
push
int
dec
loope
jae
pop
pop
ja
mov
push
push
pop
mov
sbb
call
addb
mov
mov
cmpsl
fs
push
fcoms
out
push
ss
pop
cmp
push
mov
dec
int
mov
data16
cmpsl
fcmove
mov
mov
xor
xchg
out
and
jae
sub
sbb
xchg
sub
add
push
test
cwtl
mov
jns
outsb
stos
adc
pop
jl
xchg
sti
sar
decb
ret
sub
fistpl
mov
xchg
imul
jbe
xchg
mov
in
mov
cmp
push
cld
xlat
mov
mov
mov
mov
stos
rolb
dec
or
pop
not
aad
jae
nop
and
sbb
ljmp
ret
jecxz
mov
or
lea
bnd
jbe
sub
xor
adc
cmp
push
jmp
sbb
jmp
icebp
inc
sub
sarb
cmp
jb
xchg
out
dec
and
andl
aaa
rcrl
mov
std
adc
stc
call
mov
sti
and
dec
lret
les
mov
fcompl
inc
push
push
mov
imul
ret
and
adc
dec
imul
icebp
fwait
js
lods
je
jmp
dec
add
and
jae
mov
xchg
bswap
rcrb
repz
rolb
test
jbe
mov
clc
ret
xchg
loopne
sbb
lock
popa
jnp
jno
mov
adc
lcall
xchg
pop
push
mov
ds
mov
cltd
call
sub
jp
outsl
xchg
and
imul
ret
sarl
test
dec
rcrl
sbb
add
cmovnp
incl
repz
mov
in
in
mov
xchg
or
arpl
xor
or
sarb
cmpsb
sbb
mov
scas
adc
mov
stos
push
out
mov
push
dec
jns
cli
adc
leave
fs
push
ret
sub
dec
fxch
addr16
mov
sub
outsl
inc
push
jnp
fisubl
in
jmp
fistpll
jp
lock
vpcmpeqb
hlt
sti
push
pop
push
ficompl
icebp
movl
insl
push
jle
popa
cmp
sbb
aam
imul
scas
or
and
shrl
inc
add
xchg
mov
push
arpl
pop
inc
dec
or
das
movsl
jae
ss
fimull
xor
data16
sbb
fsubrp
sbb
shlb
call
leave
pop
mov
pop
push
add
jbe
mov
adc
aaa
mov
test
mov
popf
mov
add
xor
icebp
loop
scas
mov
add
lds
outsl
push
cltd
or
inc
call
insl
sub
jl
enter
daa
mov
push
sub
add
aad
mov
xor
shll
push
lds
mov
xor
push
xchg
xlat
xor
pop
inc
xor
pop
add
shrl
je
xchg
fmull
cmp
inc
in
adc
movsb
das
and
cld
mov
cli
mov
and
and
jb
int
jl
sub
inc
movl
fwait
mov
mov
sbb
cbtw
sahf
hlt
test
test
clc
pop
jg
dec
mov
fstps
fs
outsl
adcl
mov
ss
lret
addr16
packsswb
imull
or
mov
and
dec
inc
or
adc
xor
inc
xchg
loop
mov
out
adc
mov
add
mov
and
lods
jg
xor
out
sub
daa
xor
xchg
in
and
psubq
idiv
xor
sub
jbe
pop
push
imul
rcrb
repz
call
pop
popa
cmp
es
out
mov
lods
mov
push
or
cs
sub
nop
sti
popa
aam
repnz
adc
repnz
fnstenv
sbb
push
pushf
bound
in
inc
add
cmc
je
pop
push
inc
outsb
dec
pop
dec
pop
fldt
inc
dec
pop
cmp
xchg
mov
stc
sub
fidivrl
sbb
lret
dec
xchg
adc
and
lret
adc
test
clc
imulb
filds
mov
out
aaa
mov
xorl
lahf
lret
xor
outsl
mov
push
inc
lock
negl
mov
and
push
scas
pusha
xor
mov
mov
dec
fs
cmpsl
lea
adc
jb
cmpsl
lods
fistps
mov
sbb
and
push
pop
scas
pop
mov
push
shrb
repz
sub
test
aam
push
cmp
fstpl
cmp
xchg
cltd
xchg
pop
call
xor
pop
pusha
stc
test
out
jne
daa
xchg
lahf
movsl
popf
push
xchg
push
jp
stos
cmp
cltd
pop
add
in
mov
add
decb
mov
xor
and
or
lahf
rcrb
je
add
sub
jmp
bound
xchg
ds
push
jge
xchg
pop
sarl
cltd
pop
outsl
mov
in
in
jmp
iret
mov
mov
loope
mov
out
std
mov
jno
jne
pop
imul
push
insl
outsb
jns
xchg
xchg
push
cltd
faddl
ja
adc
inc
test
xor
test
jle
insb
fidivl
jnp
mov
ja
out
inc
fsubl
or
popf
and
ret
mov
jmp
fdivs
jae
adc
popf
inc
movsl
insl
mov
sbb
and
jo
stos
jne
imul
scas
outsb
in
in
push
shrl
cmp
mov
sub
pop
int
mov
mov
push
inc
nop
adc
sti
push
mov
and
shll
int3
dec
sub
ja
mov
mov
pop
repz
push
push
sbb
test
add
loope
cld
push
push
or
lret
jge
arpl
mov
inc
xor
push
into
mov
jl
and
dec
jmp
fimull
mov
enter
xchg
mov
and
lock
push
fs
repz
ja
mov
in
mov
pop
enter
daa
int
cmp
add
cmp
les
stos
sbb
and
lahf
lds
push
cwtl
arpl
test
cmp
xor
xor
lcall
js
test
pop
aas
adc
push
jmp
fdivl
outsb
cmpsl
add
adc
jg
jl
fdecstp
movl
gs
cmp
xchg
stc
movb
in
int
mov
imul
ljmp
ljmp
repnz
cs
xchg
jge
test
aam
xorb
fidivl
push
dec
mov
mov
test
imul
mov
fmul
fwait
imull
xchg
lret
cwtl
rorl
repnz
push
int3
into
jnp
out
push
pop
jle
add
outsl
or
outsb
mov
adc
xchg
push
add
gs
lods
lcallw
movntq
cli
int3
out
lods
xor
sub
cmp
pop
xchg
vrcpss
gs
loopne
jecxz
pop
sub
inc
mov
in
sahf
fstpl
repz
mov
dec
rol
xlat
cs
pop
sub
mov
test
and
clc
aad
inc
xchg
push
cmc
inc
inc
hlt
cs
call
loopne
jecxz
jle
adc
sub
call
je
rcrl
cmp
dec
inc
add
fistpl
mov
sbb
inc
pop
call
jae
outsl
in
dec
dec
push
cmpsb
cs
adc
imul
mov
xor
ds
test
pop
cmpb
xchg
pop
add
lock
scas
lds
movsl
add
push
insb
sbb
xlat
lods
jl
dec
pop
fcmovb
test
cmp
lcall
jle
cmpsl
mov
pop
mov
dec
ljmp
stos
lret
mov
cmp
mov
mov
aad
sbb
add
jl
inc
cmp
and
mov
sbbb
clc
cmp
xchg
pop
pop
imul
test
mov
and
fmuls
out
les
mov
wbinvd
mov
add
mov
mov
mov
mov
xor
dec
gs
test
stos
adc
sub
insb
or
lds
fwait
or
inc
push
imul
into
add
dec
incl
sub
fs
or
pushf
xchg
stos
dec
sahf
mov
pop
mov
pop
test
test
or
aam
popa
mov
pop
xchg
add
in
add
stc
push
xor
sub
pop
or
jecxz
mov
gs
scas
addl
movsb
out
xchg
test
or
or
pushf
jp
add
mov
rcrb
inc
jae
jnp
xor
jle
cli
mov
cmc
decl
fistpll
push
jmp
jecxz
jnp
popf
je
push
lea
mov
mov
into
xor
push
and
and
jmp
imul
roll
into
push
sbb
mov
inc
stos
or
add
jno
jge
outsl
pop
add
jbe
std
mov
add
lahf
xchg
or
and
test
fidivl
xchg
mov
enter
loopne
fidivs
cmp
jae
imul
repnz
arpl
dec
into
push
movsb
insb
xor
jbe
jl
jge
xchg
push
sbb
out
aaa
push
lret
dec
cmpsl
mov
fisubl
pop
dec
pop
push
and
xchg
dec
xor
cmpsl
push
sti
scas
xchg
outsb
ret
and
and
xor
imul
shlb
jae
sub
pop
aad
daa
mov
cmp
lock
jno
pop
and
sbb
cmp
mov
scas
and
or
lahf
in
dec
push
imul
rol
add
inc
and
mov
sbb
pop
dec
sbbl
ret
jle
jle
adc
lods
fsub
imul
outsb
or
adc
pop
in
cmp
andb
ficomps
repnz
mov
mov
xchg
mov
int3
fxch
cwtl
orl
hlt
sub
push
pop
jmp
mov
xchg
or
test
pusha
jb
nop
sub
mov
mov
mov
sbb
outsl
movsb
and
ss
xlat
cmp
test
imul
xor
cmpsb
xchg
mov
cmp
ret
xchg
int
into
pop
jge
cmc
sbb
cmp
outsl
in
cmc
call
stc
inc
into
sub
les
dec
in
data16
mov
mov
mov
xor
dec
outsb
in
cli
and
into
cmpl
gs
jecxz
loopne
arpl
adc
xchg
dec
call
jg
xchg
outsb
repz
test
aad
insl
out
or
or
jns
pushf
stos
cmc
insl
jmp
jl
addl
cmp
in
mov
cmpsb
inc
pop
lahf
stos
fstps
jp
je
cld
leave
jecxz
pop
dec
adc
xchg
loop
stc
repz
loopne
dec
xor
dec
xor
rcrb
sahf
xor
es
inc
jns
ja
sbb
cmp
addr16
dec
test
stc
and
stos
sahf
roll
nop
imulb
hlt
in
or
cwtl
aam
mov
std
incl
mov
xor
cld
mov
adc
fisttpl
in
rcrl
push
jl
das
test
mov
mov
aam
ficomps
ret
int
xchg
es
sub
dec
pop
adc
mov
and
lods
mov
mov
sub
pop
ja
mov
hlt
bound
rcl
add
sub
push
test
add
cwtl
mov
lret
frstor
cmp
dec
xchg
add
jbe
pop
mov
push
stos
sbb
out
cmp
xchg
sub
pop
fwait
punpckhbw
loopne
sub
cltd
lea
fnstenv
shrb
xor
jae
test
nop
js
xor
sbb
out
roll
mov
arpl
or
cld
add
pusha
out
filds
xor
fistps
xchg
cli
or
pop
lret
sub
arpl
testl
fdivrs
mov
hlt
into
dec
rcl
mov
mov
loop
out
pop
gs
bound
inc
jns
lea
adcl
mov
or
add
add
sbb
dec
mov
dec
xchg
mov
sbbl
cmp
in
and
pusha
lret
or
mov
xchg
imul
outsb
jae
sbb
push
push
sarl
mov
or
lcall
add
mov
push
pop
mov
mov
ret
push
cmp
hlt
dec
ljmp
xchg
popf
and
mov
test
fisubl
sar
xchg
stc
adcl
aaa
push
pop
and
rcr
cmp
lds
adc
mov
jmp
jb
rcr
movsb
divl
push
out
arpl
or
sbb
add
or
stc
and
push
fld1
dec
leave
and
imul
fnsave
sub
and
inc
cmp
sub
inc
xchg
pop
push
cmpsb
jle
out
pop
xchg
enter
daa
mov
cmp
sub
in
cmp
push
hlt
ds
and
movsl
fisubs
lahf
add
or
cmpsl
fisubrl
push
xchg
jns
sbbb
and
bound
jno
pop
mov
cld
es
sub
mov
sub
fisubrl
sbb
shlb
icebp
mov
xor
iret
add
and
daa
lods
int
pop
jne
pop
lcall
mov
enter
pop
mov
lods
je
push
dec
and
test
jge
sub
movsb
jg
and
mov
push
orb
mov
lock
sub
fadds
mov
lods
pop
mov
cltd
mov
mov
fs
cmp
or
and
xor
push
cmpsl
loop
jne
stc
div
fistl
inc
daa
mov
lods
xor
pop
mov
lret
xchg
cli
xor
xor
rcl
in
gs
sti
jge
inc
cltd
div
add
push
imul
imul
pop
repz
xchg
xor
inc
sbb
shl
xlat
lods
int
sub
pop
mov
jmp
xchg
push
cs
rcl
andb
dec
pslld
inc
sbb
fsts
ret
insb
loopne
adc
in
stc
push
xor
pop
inc
xlat
jb
mov
or
dec
sbb
rcr
cmp
sbb
imul
pop
lock
cld
mov
stos
rcll
mov
xor
mov
pop
sbb
mov
or
jae
mov
cmp
lock
pop
stos
das
arpl
push
mov
fld
pop
lcall
dec
pop
pop
dec
push
cmp
cmpsl
mov
mov
imul
xchg
lods
and
stos
mov
cmpb
and
pop
adc
adc
cmpsl
pop
out
xor
cmp
xchg
loop
adcb
mov
and
ljmp
mov
stos
push
and
xchg
je
lcall
mov
add
insb
inc
cltd
les
push
mov
cmp
mov
test
or
sbb
mov
or
lea
push
scas
cmp
add
jnp
sbb
jle
fbstp
or
orb
and
jbe
dec
or
bound
cmp
xor
dec
adc
add
cmc
mov
cmp
outsb
lock
bound
out
cmp
add
or
pop
jns
add
cli
andl
mov
sub
xor
aam
ljmp
mov
out
insb
sbb
addr16
cwtl
iret
jle
jo
in
cmpsb
lea
sub
xchg
cmp
push
jmp
stc
pop
mov
push
adc
fistpl
ffree
rclb
out
ret
mov
push
mov
scas
xchg
add
dec
adc
movsl
lods
iret
mov
dec
or
jb
jl
xchg
test
inc
cltd
subps
sbb
sub
fidivl
xchg
push
inc
xchg
int3
adc
pop
push
mov
pop
lds
pop
mov
ds
aaa
mov
orb
push
cmp
or
sbb
push
xchg
aaa
pushf
addr16
xor
add
je
jl
icebp
outsl
dec
cmp
xor
pop
adc
scas
push
xor
cmp
and
sub
in
inc
test
enter
daa
mov
cmp
jno
or
push
addl
adc
fwait
movsl
in
and
cli
fsts
pop
sub
pop
xor
or
jecxz
les
mov
js
mov
pop
cld
lret
notb
fndisi(8087
loop
insl
fdivl
cmp
dec
dec
push
outsb
rclb
jecxz
sbb
mov
divb
dec
cwtl
and
pusha
movsl
xor
and
idivb
int
sbb
pop
repnz
lcall
test
sbb
gs
xorb
orb
jno
into
pop
push
mov
sub
mov
sub
jno
xchg
ss
add
sti
mov
mov
mov
insb
rorl
cmp
mov
je
popa
into
and
test
test
xchg
xor
adc
mov
jb
scas
mov
xor
push
loop
lods
sbb
mov
pop
xlat
cli
gs
inc
xor
jae
sti
sub
fdivr
mov
out
in
loopne
mov
sbb
es
inc
imul
repz
sbb
cmp
dec
rcl
jmp
int3
sub
jge
mov
add
mov
test
aas
jns
leave
in
nop
xor
outsb
imulb
aam
je
xor
sbb
call
icebp
out
pop
xor
cmp
cld
mov
dec
push
or
pop
leave
test
inc
lock
lods
inc
scas
sub
inc
jb
cli
jne
jae
stos
and
fnstcw
in
stc
divb
push
dec
xor
jnp
adc
sub
adc
mov
mov
rcll
inc
and
mov
stos
addr16
mov
insl
xor
repz
mov
fdivp
into
mov
dec
mov
movsl
push
cltd
mov
xor
sarb
enter
data16
inc
sub
inc
ds
cmc
out
clc
jmp
fisttpll
popa
out
hlt
adc
or
fldcw
add
xchg
mov
cmp
cmp
add
dec
cltd
sti
int
xor
pop
lret
aaa
xacquire
test
loop
pop
pop
xor
inc
jge
shll
or
or
das
push
fwait
xchg
push
mov
add
xchg
mov
lcall
jmp
or
xor
dec
fcomip
xchg
cwtl
push
int
movsl
pop
mov
fldcw
ja
pop
jmp
push
hlt
mov
cltd
pop
cmpl
adc
add
jne
sub
dec
out
sbb
push
jns
and
jge
rolb
cmpl
xchg
or
mov
addr16
mov
shrl
dec
jnp
jb
jle
cltd
sbb
or
repnz
add
xchg
shrd
jmp
add
or
xor
popf
addr16
mov
fldenv
aam
adc
inc
lret
imul
cmp
cli
cmc
rcll
sub
fcmove
sbb
mov
jbe
fidivs
arpl
cmc
jbe
adc
add
cltd
pop
inc
mov
push
fimull
sub
int3
sti
nop
xchg
pop
orb
sbb
add
jno
sarb
repnz
mov
movsb
or
int3
adc
jge
xchg
sbb
jl
or
push
add
frstor
push
das
inc
scas
xor
mov
xchg
adc
mov
adc
nop
mov
push
cmpsb
test
in
sub
mov
mov
ljmp
hlt
pop
cmp
cli
push
and
mov
lahf
inc
stc
test
in
jmp
add
sub
cwtl
loopne
cmpsb
pop
cmp
push
mov
pop
cmp
or
fbstp
stc
lret
loope
cmp
cmp
add
pop
fucomi
shr
mov
push
cld
in
pop
push
popa
sbb
jmp
and
int
push
cmp
mov
lret
outsl
sbbb
lahf
mov
out
popf
sbb
pop
test
adc
mov
aaa
push
mov
in
adc
cmpsb
adc
or
ss
pop
xor
jbe
add
mov
imul
jg
push
shl
fdivrl
test
dec
into
pop
inc
cltd
cmc
outsl
clc
wrmsr
outsl
add
loop
dec
add
gs
adc
push
clc
add
ret
popf
data16
lods
add
inc
mov
repnz
cwtl
mov
xor
fidivrl
sti
fucomi
loope
fisttps
gs
mov
test
lret
push
imul
sub
jno
or
jae
sub
ss
sbb
sub
test
ss
mov
lods
mov
cwtl
adc
aad
cli
nop
inc
push
inc
dec
int
xor
daa
xchg
fld
notl
jecxz
xchg
leave
sbb
pop
sahf
call
jo
rcrb
scas
dec
adc
inc
dec
icebp
or
fistpl
pop
and
out
inc
ja
push
inc
lret
aas
cmc
xchg
outsb
jb
adc
ljmp
shll
rcll
movsl
push
std
decl
or
sbb
inc
subl
xchg
lret
pop
and
mov
xlat
into
lock
cltd
das
and
mov
jne
fwait
ret
jp
cs
adc
sbb
sub
inc
stos
cmpsl
mov
xor
lods
neg
std
mov
enter
jo
out
mov
push
fisubrl
rorb
mov
and
inc
test
in
mov
adc
push
or
clc
and
movsl
xchg
pop
fs
mov
ljmp
xor
mov
fs
xchg
add
adc
jecxz
jne
ljmp
mov
mov
aam
mov
add
loope
mov
mov
hlt
aad
rorl
movsl
negb
cmc
test
stc
loopne
mov
mov
xor
sahf
jo
aad
push
xchg
out
xchg
mov
shrl
pop
xchg
inc
loope
mov
jb
stc
das
mov
xor
aam
mov
jne
sbb
pop
jne
pop
mov
pushf
into
mov
clc
xchg
adc
jns
jecxz
xchg
dec
or
out
or
or
outsb
addr16
or
mov
mov
insb
icebp
mov
sahf
jle
mov
in
faddl
pusha
pushf
mov
lahf
xchg
loop
cmp
ds
adc
mov
pop
popf
push
pushf
jl
push
mov
cs
pop
xor
jmp
lcall
or
imul
scas
pop
fucompp
push
xor
clc
adc
add
ret
push
pop
loopne
push
hlt
sub
inc
lahf
dec
mov
push
xor
inc
fiaddl
cmp
out
fistpl
mov
mov
rcl
mov
repnz
push
leave
and
cmp
sbb
jge
dec
cld
sbb
or
sbb
cmpsb
add
aad
jl
popf
cs
push
sbb
adc
xor
adc
push
and
mov
paddw
push
pop
stos
scas
inc
inc
adc
in
setbe
mov
cmp
cmp
sub
cmp
ds
push
xchg
movsl
repz
and
xor
mov
dec
test
jb
push
xor
sbb
imul
xchg
js
repz
jp
sahf
push
pop
sbb
adc
fmull
rep
xchg
loope
adc
movb
mov
lods
subb
sbb
cmp
or
fsubr
xchg
push
inc
lock
int
inc
push
sub
and
pop
lock
lcall
pop
mov
dec
mov
fstl
cmc
test
pushf
jg
and
mov
fsts
pop
mov
push
fdivs
jecxz
jmp
mov
sarl
cmp
sahf
cmp
push
arpl
into
ljmp
xor
sbb
outsl
push
push
or
adc
shll
xchg
adc
jns
lods
jmp
push
mov
addr16
lods
xor
xor
sti
mov
push
incb
loope
gs
cs
pop
enter
int3
xor
imul
sub
mov
sbb
jno
daa
xlat
imul
loop
push
mov
and
invd
xor
nop
sbb
or
fsincos
mov
and
and
lea
pop
xor
into
jp
out
mov
pop
lcall
dec
fsub
jmp
dec
push
fistpl
cmp
push
inc
in
mov
jb
pop
fmuls
sub
xor
orb
std
cmpsb
mov
or
mov
lret
loope
add
xor
dec
lret
int
and
or
lock
add
sub
mov
inc
inc
cld
ret
or
mov
leave
je
insl
add
dec
inc
and
cwtl
mov
jl
in
popa
or
mov
jmp
fisubs
mov
dec
pop
jo
push
shlb
xchg
aam
sbb
neg
cmp
lret
insl
sbb
inc
out
clc
pop
and
ljmp
hlt
pop
jmp
out
or
ret
push
mov
mov
add
mov
xor
into
ret
jne
xchg
lock
push
out
pop
xchg
outsl
test
rcr
cs
aaa
out
sub
hlt
bound
push
cwtl
cwtl
mov
add
iret
ljmp
push
shl
or
mov
adc
mov
dec
test
cwtl
dec
in
pop
dec
inc
jbe
mov
mov
dec
pop
add
jne
out
add
xlat
add
clc
inc
sub
mov
jg
pop
ret
and
imul
or
mov
xchg
or
cmc
jnp
jno
jle
enter
pusha
aaa
das
fists
mov
jmp
sbb
jae
pop
inc
push
pop
aam
popf
sub
xchg
mov
stos
xchg
jl
and
ja
sbb
mov
iret
scas
shlb
adc
adc
ret
mov
hlt
je
xchg
arpl
js
inc
mov
rol
push
scas
push
in
orl
sarl
bound
mov
cmp
inc
mov
shl
jmp
arpl
add
leave
pushf
outsl
push
movsb
and
in
push
sub
jbe
aad
jp
ljmp
xor
or
jo
add
mov
dec
test
push
cmc
cmp
xor
outsb
dec
xor
mov
mov
es
cltd
inc
shrl
cmp
mulb
enter
daa
xchg
cmp
fsts
sub
push
loope
out
mov
push
movsl
cli
jo
and
lahf
jg
or
sahf
jns
xchg
or
xor
rcrb
imul
cld
pop
mov
xchg
add
daa
std
mov
sub
test
outsb
stc
mov
adc
mov
pop
aad
xorl
mov
out
out
and
dec
inc
push
inc
sbb
sub
mov
outsl
xchg
push
or
dec
mov
jnp
imul
sbbb
jg
sub
mov
enter
addr16
pop
cmpsl
pop
ss
les
sub
pop
imull
jnp
rcll
inc
cmp
fimuls
shll
cmc
std
sbb
xchg
outsl
inc
std
or
or
mov
adc
test
icebp
lretw
jb
lods
shl
into
mov
sub
xchg
inc
xor
arpl
cmp
gs
cmp
add
or
out
xchg
lahf
leave
cltd
imul
and
repz
lds
shll
lods
clc
lods
xlat
test
push
sub
mov
add
xchg
jbe
repz
cmpsl
aad
or
mov
inc
data16
xor
aam
sbb
jecxz
mov
push
lea
pop
cmp
pop
dec
and
dec
mov
mov
test
test
adc
daa
das
aas
xor
adc
fcomps
je
rorl
mov
cwtl
jnp
sti
mov
mov
mov
add
cwtl
fcoml
lret
cmp
add
iret
cs
lock
cltd
mov
and
aam
lods
popf
ret
cwtl
hlt
test
dec
dec
imul
or
pushf
aam
xchg
stc
mov
push
lahf
out
int3
cmovs
push
in
and
dec
push
hlt
pop
repz
sub
push
roll
sahf
inc
push
mov
cmp
lcall
ljmp
pop
pop
or
in
daa
out
sub
inc
xchg
nop
mov
add
inc
loopne
add
push
xor
mov
sbb
inc
cld
mov
push
cli
test
mov
xchg
mov
or
or
adc
cmp
inc
add
jnp
cli
iret
sbb
push
hlt
pop
or
cmpsl
nop
in
sbb
xchg
test
je
pop
push
jge
or
dec
ffreep
cwtl
inc
pop
cmp
mov
inc
aas
dec
aas
outsb
lret
in
mov
and
mov
jns
push
push
xchg
fidivs
shl
or
mov
or
mov
addr16
mov
sbb
lret
mov
mov
sbb
xchg
out
aaa
int
in
mov
mov
jbe
sub
sub
push
inc
and
push
push
push
pop
mov
popf
push
aam
mov
dec
xchg
or
add
jge
sbb
adc
imul
in
scas
and
push
ret
adc
sbb
ret
fstpl
popf
jg
mov
dec
sub
pop
in
dec
cmpsl
sti
push
popl
out
push
xchg
lods
lods
ret
int3
mov
lcall
enter
or
jmp
repnz
sbb
adc
pop
push
jns
mov
lahf
xchg
idivl
jp
sbb
pop
shlb
cwtl
sarb
add
jl
cltd
sbb
cmpsb
cltd
push
fsubs
xchg
xor
leave
test
and
fdivrl
jge
xchg
push
icebp
sbbb
or
adc
enter
daa
xchg
cmp
jle
sub
inc
idivb
popf
psrlq
mov
pop
andl
adc
lahf
sahf
push
jl
pop
fisubrs
add
add
and
out
subl
js
test
clc
testl
loope
int3
int
loop
lock
mov
cli
adc
jl
jbe
jb
dec
adcb
mov
in
add
cli
mulb
inc
mov
cmp
mov
pop
out
push
pop
lcall
fisttpl
jo
sahf
or
adc
je
jae
dec
mov
mov
and
adc
mov
fsub
pop
mov
addr16
lret
cmpsl
shrl
jmp
xor
pop
into
mov
sbb
les
xor
jno
loop
adc
mov
inc
shrl
movsb
push
es
loopne
lods
mov
mov
gs
cli
xor
and
sti
call
jmp
and
addr16
push
pop
pop
adc
mov
les
addr16
fisubrs
adc
call
scas
pop
xlat
out
inc
sub
in
jp
lods
xchg
push
cs
push
nop
roll
dec
ljmp
fldcw
js
mov
jecxz
xor
cld
push
aas
call
in
cwtl
lret
pop
add
je
pop
arpl
les
inc
sbb
cmpsb
jb
popl
dec
lods
mov
shll
push
aas
test
xchg
std
hlt
aam
cwtl
ss
xchg
cmc
in
sub
cld
mov
sahf
lret
stos
popa
sbb
xchg
jo
lock
adc
mov
fcom
aam
push
ret
daa
cmc
adc
iret
xchg
cmp
mov
cmpsl
test
xor
out
lods
aaa
out
mov
xor
mull
scas
jne
rol
adc
test
lret
lds
insl
pop
fstl
inc
pop
xchg
pop
adc
ljmp
cmpsl
pop
mov
lret
lea
ds
push
mov
add
jae
cwtl
int3
adc
add
testl
add
in
or
loope
or
call
push
andl
mov
add
cmp
lcall
mov
or
push
in
sbbl
mov
lock
lds
test
push
orb
flds
sbb
mov
cwtl
dec
and
pop
jne
inc
imul
call
std
cmp
sub
mov
and
or
stc
addr16
mov
mov
or
add
jle
in
in
sbb
fists
adc
and
scas
inc
xor
pop
jae
xchg
pop
push
loop
popf
jnp
lock
xchg
stos
js
mov
xor
pop
imul
fldcw
or
rcll
stc
mov
ret
xchg
pop
test
stos
hlt
or
in
jbe
test
pop
or
subb
inc
lods
xorl
pop
adc
int3
cmpsl
xor
pop
ds
fisubs
das
cmc
shrb
mov
fnstsw
movsb
cmp
test
enter
loop
fwait
jge
call
or
or
inc
xchg
add
hlt
js
and
aad
arpl
lahf
xor
and
test
lods
pop
cwtl
and
cwtl
jb
xor
pop
push
mov
cs
cmpsb
nop
inc
out
les
sub
test
mov
push
xlat
subl
sbb
xor
scas
lahf
mov
push
or
xchg
dec
popa
xor
inc
mov
cmpsl
pop
movsl
cmpsb
in
js
stos
mov
push
adc
xchg
fmull
popa
add
mov
add
rclb
adc
cmpsl
pop
jl
jae
sahf
mov
inc
hlt
and
loop
push
dec
int
int
sub
sub
icebp
pop
insl
lods
xchg
lcall
orb
fistpl
push
fcoms
pop
xchg
jg
inc
cmpsb
mov
push
mov
adc
push
inc
ss
lock
cmp
mov
inc
in
dec
sub
cmp
jbe
or
cld
lret
roll
outsl
add
imul
inc
push
rclb
push
in
xor
mov
lods
sahf
sbb
fs
fs
mov
out
jle
xchg
jg
imul
sub
insb
loopne
sbb
pop
and
xchg
push
imul
add
rep
mov
sbb
and
fcmovbe
xlat
xor
xor
mov
pop
inc
mov
push
cmp
aad
sbb
nop
scas
mov
dec
dec
dec
fiadds
pop
push
fldenv
repnz
jecxz
out
mov
lea
cltd
call
insb
dec
push
pop
mov
insl
adc
push
insl
fcmovnbe
add
clc
cmc
jge
xchg
negl
aas
jno
sbb
ja
dec
popa
out
and
or
dec
testb
or
cwtl
icebp
ficomps
ss
fisttps
cmp
lret
sbb
lds
roll
das
popf
push
mov
cli
xor
mov
cmp
es
push
insl
mov
inc
fsubl
shll
arpl
inc
in
push
push
adc
and
int3
rcrb
lea
sbb
mov
fnstsw
mov
xchg
push
test
push
popa
popa
es
pop
arpl
or
xchg
push
cli
out
inc
push
movsb
sidtl
adc
mov
es
push
xor
xor
dec
mov
adc
xchg
movsl
dec
popf
mov
test
push
mov
rolb
in
jo
clc
les
fwait
xorl
and
sbb
out
mov
or
inc
outsl
in
cmp
xchg
and
sbb
adcb
xchg
and
daa
cmp
daa
jp
pusha
mov
rorb
es
outsl
lcall
or
js
je
jg
jnp
out
jns
dec
bound
lods
add
sub
push
std
dec
addr16
push
jp
dec
iret
mov
xor
jnp
cs
jge
pop
in
clc
pop
pusha
or
xchg
sub
inc
cmp
and
adc
popf
mov
cwtl
xor
sbb
jmp
add
inc
cmc
fstps
push
subb
pop
adcl
jns
iret
clc
push
stos
ret
adc
add
push
push
jge
hlt
mov
or
std
add
inc
sub
mov
or
adc
xchg
outsl
push
pop
insl
mov
pop
xchg
inc
and
mov
xor
or
push
pop
clc
or
xchg
bnd
cmp
dec
push
insl
aaa
push
mov
jge
xchg
inc
xor
lods
dec
shlb
lret
xor
jg
cld
scas
mov
and
or
inc
jle
dec
cmpsb
adc
or
xor
cmc
daa
test
cmp
dec
jno
push
push
cmp
or
out
mov
and
mov
lahf
fdivl
xchg
push
add
lret
mov
add
in
xor
into
dec
jne
push
pop
int3
mov
js
fs
push
fs
loope
insb
fdivrl
popl
sub
in
outsb
and
jno
ret
shlb
fsubrl
mov
push
inc
mov
call
pop
push
dec
push
jne
sarb
shrb
mov
xchg
cltd
sbb
mov
and
cltd
fcmovb
sahf
push
fildl
subb
fwait
mov
jbe
mov
aad
cwtl
and
dec
or
fnstcw
pop
sahf
mov
in
aaa
lret
xor
xlat
pop
popf
cmp
mov
mov
jbe
arpl
push
stc
xor
inc
pop
outsl
in
in
hlt
scas
stc
clc
repz
and
push
pop
dec
lods
test
test
arpl
xor
mov
in
push
inc
and
inc
aad
mov
mov
xor
aad
nop
pop
inc
test
imul
icebp
inc
repz
inc
xchg
xchg
sbb
pop
xlat
gs
ljmp
movsl
pop
mov
add
and
inc
lods
sub
fwait
or
mov
dec
test
pop
inc
lahf
outsl
pop
inc
divb
fsubp
jnp
adc
sub
lret
call
jmp
les
xchg
push
adc
xchg
inc
dec
mov
add
xor
sbb
inc
sbb
inc
inc
push
aam
aas
adc
clc
jb
xchg
aaa
dec
cmp
inc
sbb
mov
fimuls
inc
jp
cwtl
lods
lock
fcmovnu
enter
aam
loopne
cli
lret
mov
scas
mov
and
lock
sub
jl
xlat
mov
inc
mov
ret
inc
ret
aad
inc
insl
lahf
xchg
icebp
dec
xor
cmpsl
addl
int3
jge
fcomp
mov
mov
ja
cli
and
sbb
xchg
pop
in
fwait
ret
popa
dec
sub
cmp
and
in
adc
push
push
xlat
cmp
fstp
xchg
pop
clc
dec
mov
inc
ljmp
scas
pop
push
lret
iret
jb
push
add
xor
push
and
punpcklbw
cltd
inc
xor
mov
dec
arpl
test
mov
xchg
lds
jae
sarl
and
or
pop
mov
and
push
add
cmp
mov
xlat
test
dec
shrl
in
dec
cmp
jb
repnz
popf
adc
pop
cmp
dec
mov
push
sub
jo
dec
call
and
arpl
shlb
lret
jns
inc
sub
orl
cs
int
sub
adc
gs
and
mov
sbb
insb
or
inc
jle
xchg
xchg
xor
jo
mov
leave
aam
add
jmp
inc
test
jae
fdivs
popf
leave
leave
mov
add
sahf
xchg
pop
or
pop
push
lcall
pushf
jp
xchg
sub
gs
push
je
ret
test
lods
hlt
mov
imul
push
stos
clc
scas
fidivrl
jbe
int3
jge
mov
fsubrp
mov
lds
rcrb
mov
xor
leave
js
jns
dec
arpl
jbe
ret
sub
jb
sbb
mov
aaa
aad
push
or
jmp
add
mov
push
dec
inc
es
andl
dec
scas
imul
inc
xchg
cmp
aaa
sbb
inc
call
in
xchg
jle
enter
daa
sbbl
jno
hlt
xchg
sub
add
or
movsl
push
subl
inc
sbb
aad
test
test
movsb
xor
cmp
sarl
loop
mov
mov
sbb
loope
adc
fsub
sub
mov
xchg
adc
or
jl
or
cmp
mov
jecxz
and
test
int
cmp
sub
out
pop
imul
lcall
int
pop
fwait
mov
enter
cmc
aaa
movb
xchg
sarl
outsl
mov
mov
jbe
push
push
test
lcall
cmp
sbb
loopne
xor
sarb
aam
or
push
into
pop
nop
adc
sbb
mov
outsl
ret
in
loop
mov
stc
scas
cmp
dec
hlt
add
das
data16
loopne
lods
insb
loope
mov
lret
cwtl
cli
lret
xor
movsb
dec
sti
cmc
bound
mov
xchg
cmp
loopne
insl
mov
adc
xor
imul
adc
fcompl
cwtl
dec
and
movsb
dec
mov
mov
scas
push
pop
jmp
in
cs
stos
pop
aad
mov
rorb
jl
mov
cmp
push
aas
mov
inc
mov
int3
das
js
lea
mov
call
push
negb
jns
adc
dec
jae
in
xor
rcrl
xor
jae
insb
mov
aas
scas
outsl
xor
loope
dec
mov
mov
rorl
inc
mov
jmp
xchg
mov
mov
xchg
hlt
es
lret
clc
xchg
mov
cmp
jmp
xor
xchg
xchg
das
pop
push
or
std
xor
retw
aam
cwtl
es
sub
adc
sub
push
sub
aaa
es
lods
js
ret
xchg
lcall
mov
or
pop
sub
lea
mov
jmp
push
fldl
clc
je
xchg
xchg
aam
lcall
pushf
dec
pop
mov
clc
mov
xchg
lods
lret
sti
mov
add
inc
jbe
jl
in
xor
inc
pop
mov
push
sbb
test
movsl
xacquire
scas
pop
rcll
int3
cmc
fucomip
std
push
movl
add
push
pushl
enter
push
or
lods
xchg
xchg
shll
mov
notb
ja
jne
dec
stos
pop
sbb
cmpsb
aas
mov
mov
mov
jne
test
mov
ret
xor
bound
fisttpl
xchg
or
xchg
sbbl
mov
or
xchg
loopw
in
in
pop
mov
aad
insb
jae
addr16
jmp
ret
imul
fcomip
and
xchg
aam
inc
jmp
push
xchg
shlb
loop
push
sub
xor
lock
jecxz
mov
sahf
push
inc
sbbb
shrl
and
int
add
cmp
sub
scas
scas
cmp
adc
mov
iret
mov
pusha
ret
and
cli
int3
hlt
jmp
sti
arpl
dec
dec
inc
mov
arpl
repz
inc
sub
fidivl
lock
or
int3
push
mov
mov
sarb
mov
pop
lahf
leave
out
adc
movsb
ficompl
push
jbe
fs
mov
mov
ds
int3
iret
add
pop
jl
subb
fsubrs
push
fs
mov
dec
sub
jo
aaa
inc
scas
dec
xlat
loope
cmpsb
push
cmp
jmp
inc
pushf
scas
pop
cmpsb
sbb
in
jns
in
enter
daa
subb
push
jbe
fwait
mov
les
pop
adc
jne
movsl
sbb
stos
lahf
sbb
push
test
push
insl
add
adc
loop
sti
or
pop
sbb
push
pop
hlt
fs
push
pop
stc
loope
jo
fmull
ss
outsb
call
cmp
mov
and
mov
sbb
mov
xor
and
cmp
sahf
adc
pop
pop
ljmp
push
mov
repz
sahf
cwtl
mov
out
daa
and
daa
jg
mov
mov
das
and
fstpl
adc
dec
cli
ss
ljmp
xor
mull
ror
and
pop
roll
loope
in
mov
or
loopne
cmp
in
dec
push
outsl
mov
mov
jnp
jo
ljmp
push
jecxz
push
sbb
mov
jge
cli
std
out
jae
jno
mov
sti
movsb
cli
aam
test
mov
loopne
mov
pop
xorb
imul
cld
repz
xchg
or
sti
sbb
rcll
jecxz
or
mov
sub
pop
ds
and
iret
cs
inc
aaa
aad
and
nop
aas
nop
dec
test
lds
fstp
inc
fisubs
jecxz
mov
rorb
sub
pop
int3
adc
dec
pop
inc
aad
bound
pop
loope
inc
inc
sub
inc
xchg
aas
dec
int3
mov
add
dec
sub
and
mov
rcrl
test
repz
nop
scas
std
cwtl
and
mov
inc
inc
mov
mov
mov
lret
sbb
mov
sahf
mov
pop
xor
loop
subl
fimull
mov
add
aad
fildl
insl
insl
adc
nop
cmpsl
and
xchg
icebp
xchg
lods
jecxz
adc
mov
ret
imul
shrb
adc
js
cmp
mov
es
pop
fsub
jge
xchg
adc
or
lea
mov
and
mov
ja
ljmp
xor
mov
adc
sarb
test
push
mov
sub
and
or
push
adc
push
out
stos
push
add
jmp
adc
mov
push
mov
or
mov
mov
push
ja
mov
dec
sahf
xor
push
sbb
mov
and
xchg
jne
xchg
xorb
in
mov
xor
mov
xchg
aad
push
andl
dec
out
dec
shrl
xorl
mov
mov
insb
ficomps
pop
jnp
iret
adc
xor
in
out
pusha
fld
inc
fists
andb
cmpsl
mov
jmp
pop
push
jae
xor
out
lock
popf
pop
testl
push
addl
out
and
mov
cltd
pop
push
scas
adc
mov
and
jo
iret
adc
fwait
adc
popa
jmp
hlt
ss
arpl
jns
inc
mov
cmp
outsb
std
test
jge
fisubl
pop
xor
push
sbb
cli
insb
lods
fidivs
movsl
leave
lds
ret
rclb
repnz
inc
leave
data16
gs
push
add
es
jns
jge
mov
sbb
mov
or
pop
cmc
jl
push
mov
pop
dec
orl
or
push
or
aad
scas
sub
and
ret
lock
push
pop
push
call
popa
sahf
cmpsb
pushf
loopne
in
pusha
in
enter
daa
add
imul
push
push
cmp
cmp
out
movsl
and
out
mov
add
jl
cs
mov
push
dec
mov
cmp
pop
or
pop
xor
fisubrs
mov
repz
fdivrl
out
sub
mov
imul
bound
dec
and
dec
add
and
movl
add
inc
jb
imul
xchg
push
adc
pop
pushf
sbb
mov
lds
sti
mov
jg
lods
je
sahf
fs
xlat
sti
ss
add
scas
ds
fmuls
test
lret
inc
rcrl
or
ret
hlt
jnp
cmpsl
out
in
inc
lock
outsl
xor
push
stc
sbb
nop
adc
data16
shrl
mov
push
cli
xor
imul
fstp
sti
push
push
pop
divl
xchg
loopne
adc
adc
out
dec
les
into
repz
das
out
sbb
push
lock
sub
dec
and
pop
add
jmp
mov
dec
aad
jmp
dec
dec
inc
fcom
insl
fnstcw
je
fistpl
test
int3
xor
inc
adc
sub
push
je
jg
xchg
adc
imul
xchg
xor
test
scas
mov
fidivrs
in
sub
jb
sbb
dec
mov
jmp
shrl
jo
std
aaa
and
fstpl
mov
push
cld
popa
fs
jae
mov
pop
add
jns
jge
cmp
arpl
add
mov
int
sub
es
and
sub
dec
and
dec
mov
pop
xchg
fstpt
and
in
hlt
test
dec
jae
shl
fisubs
test
mov
cmpsl
rcll
ficoml
push
outsb
pop
clc
cld
cmp
ja
cmp
push
popa
mov
pop
fisubrl
jl
push
xchg
cmp
inc
push
mov
mov
jge
dec
add
add
cltd
ljmp
mov
push
faddp
dec
cmp
ja
mov
adc
xchg
push
or
and
fwait
cmp
lret
lods
add
mov
and
mov
or
dec
xorb
mov
outsb
dec
xchg
pop
mov
mov
xchg
mov
insb
test
ja
and
inc
call
jae
mov
add
jo
je
inc
out
lock
dec
sub
clc
aad
mov
stos
and
push
mov
sub
add
fs
lock
shl
mov
mov
mov
lea
in
push
andl
fbstp
in
xchg
jp
imul
gs
inc
imul
or
popf
frstor
push
ret
stos
mov
xor
mov
pop
stos
imul
aas
push
insb
repz
adc
out
ret
mov
sub
adcl
mov
push
sub
jecxz
fadds
xchg
mov
fcmove
mov
dec
and
shrb
inc
bnd
pop
leave
fstpl
cs
push
dec
pop
jbe
add
jge
outsb
xor
cmp
aaa
adc
or
stc
mov
fimull
mov
push
sub
mov
scas
or
int3
and
dec
or
pop
mov
inc
mov
sub
inc
in
inc
enter
daa
sbbb
jno
scas
pop
sub
xor
xor
movsl
sub
push
cmp
or
dec
mov
pushf
add
xchg
pusha
xor
pop
addl
js
adc
ja
je
push
loope
lcall
movsb
cwtl
into
outsb
scas
cmp
adc
sahf
mov
lods
jb
addb
mov
xchg
xchg
mov
int
and
push
pop
clc
push
int
jl
sub
adc
lcall
inc
mov
pop
push
sbb
in
sahf
fiadds
pusha
adcb
add
rolb
mov
in
repz
adc
cmpsl
xor
fmuls
mov
loope
inc
lret
test
xor
sarl
sbb
or
dec
into
add
cmc
outsb
outsl
xor
mov
jl
loop
and
stc
aam
adc
push
mov
add
mov
pushaw
cmc
inc
lods
and
push
mov
cmp
pop
insl
push
cli
arpl
mov
pop
or
in
mov
sti
add
sbb
aas
gs
nop
jb
inc
sub
shlb
cmpsl
cmp
inc
pop
les
repz
add
sbb
dec
pop
or
popa
out
jno
jge
jb,pn
pushf
scas
or
cs
dec
rcl
push
int
cmc
das
stc
dec
and
fildl
mov
fnstenv
call
hlt
cmp
cwtl
lea
and
out
mov
adc
fmuls
mov
shlb
daa
cmp
imul
mov
mov
and
jne
sar
jg
notb
add
fidivs
cwtl
lcall
mov
mov
jmp
mov
cs
inc
nop
pusha
mov
cli
popf
mov
das
xor
sub
mov
and
aam
rol
orl
dec
push
or
lret
insb
inc
icebp
xor
jp
mov
sub
mov
scas
dec
mov
push
jo
sub
pop
insl
test
inc
mov
insb
adc
jecxz
rcr
jnp
push
clc
aaa
xchg
rcll
lods
ffree
popa
aam
mov
stos
fwait
or
out
fistpll
push
xchg
xor
xchg
fmull
add
xor
xor
test
mov
pop
out
push
dec
mov
imul
rcll
push
sub
mov
mov
mov
pusha
scas
call
stos
xor
jne
in
int3
add
mov
es
pop
pop
daa
scas
mov
dec
test
test
jae
mov
add
pop
dec
jne
xchg
xor
out
iret
add
jns
jge
xchg
imul
addl
out
xchg
int
xchg
jno
or
mov
pop
jp
jbe
mov
loopne
insb
mov
mov
jle
mov
out
pusha
bt
fisttps
inc
xchg
dec
mov
addb
jae
cwtl
push
je
xor
data16
add
stos
sub
insb
and
inc
fisubrl
xadd
mov
lods
adc
test
rcll
rcrb
xchg
int3
int
arpl
cltd
cmp
ffree
or
fs
inc
cmpsl
adc
fimull
rcr
int3
sub
adc
sbb
adc
ror
mov
repnz
shlb
movsb
jnp
sbb
in
je
test
sbb
out
aaa
shll
bound
test
jl,pn
mov
cmp
or
popa
sub
scas
out
jge
pop
adc
cmp
sub
jle
pop
inc
dec
xchg
inc
cmpsb
mov
ficompl
enter
daa
jg
jnp
push
cld
jno
loopne
sub
out
jmp
data16
ds
arpl
movsl
xor
push
and
lods
cmp
ja
ss
and
test
aad
inc
xor
or
pop
pop
data16
mov
pop
mov
test
loope
gs
lock
sub
mov
adc
jns
lds
sbb
movsb
sbb
sbb
arpl
push
int
add
mov
addr16
sbb
adc
enter
repz
test
int
xorl
addb
divl
mov
sti
add
jle
jmp
ss
enter
sbb
push
mull
sbb
cmp
addl
in
test
xor
jb
outsl
aas
or
loop
mov
stc
mov
enter
loop
jecxz
xchg
lods
or
xchg
mov
aaa
out
stos
and
xchg
lret
mov
testb
imul
cmp
adc
pop
fistps
adc
loopne
imul
mov
xrelease
push
dec
adc
test
add
mov
push
mov
pop
lods
cld
jmp
imul
hlt
aad
cmpsl
add
subl
inc
dec
sbb
ljmp
jecxz
jmp
cmp
int
fucomip
and
pushw
pop
in
adc
mov
test
inc
mov
das
push
aas
sub
fs
es
ja
rcll
dec
and
xchg
push
std
test
xor
lcall
cld
mov
lret
jo
mov
mov
lock
cmp
xlat
sbbb
fstps
arpl
xor
adc
es
push
insl
and
jge
sbb
cmpsl
jle
ja
add
sub
and
sbb
es
and
and
xchg
dec
rorb
cmp
out
mov
jne
push
cmpsb
xor
jb
xchg
rorb
ljmp
mov
push
stos
mov
inc
test
xchg
enter
addr16
sti
xchg
add
xchg
sbb
pop
rcrb
mov
pop
je
dec
pop
inc
cmp
cmpsb
mov
sbb
clc
out
inc
adc
int3
sbbl
aas
in
add
lods
in
out
cmpsb
rorl
imul
std
ror
mov
mov
addps
dec
lahf
ja
fdivrl
ja
xchg
inc
push
push
xor
pop
add
sub
inc
mov
mov
push
in
push
jns
cmpsb
aaa
xchg
orb
and
sbb
clc
cmp
lock
int
mov
sub
insb
pop
insl
push
jnp
push
fdivrl
inc
outsb
in
pop
enter
neg
outsb
mov
xchg
and
mov
inc
jge
out
mov
push
aaa
sbb
add
push
inc
test
lret
and
mov
out
imul
scas
cmp
adc
adc
ret
iret
xor
ret
fstps
xchg
fs
pop
pop
shll
popl
mov
pop
mov
inc
mov
sbb
adc
pop
xchg
mov
sbb
cwtl
lds
inc
jne
in
adc
and
leave
lret
mov
mov
icebp
mov
jge
fbld
nop
push
rolb
sub
dec
stos
jno
insb
dec
jbe
lock
mov
mov
or
repnz
cmp
mull
cmpsb
and
stos
cltd
enter
daa
jle
cmp
popf
das
cld
jno
xor
sub
jl
cmp
inc
mull
jno
adc
cmc
sub
test
loopne
in
add
inc
pop
rcrb
js
out
pop
lock
pop
add
add
sub
sbb
rclb
subb
mov
mov
and
xlat
push
pop
add
cmp
sub
jae
lcall
pop
mov
lcall
and
rolb
dec
cli
mov
and
xchg
adc
fs
test
sub
cmp
mov
popf
adc
lock
cmp
mov
into
into
enter
cld
pushf
arpl
pop
push
xchg
mov
mov
adc
icebp
scas
add
xchg
data16
out
out
ljmp
pop
insl
dec
cli
leave
jl
xor
lahf
cmp
aam
mov
pusha
xor
gs
cli
inc
loopne
mov
dec
adc
dec
out
imul
outsl
pusha
repz
cwtl
in
sbb
movsb
sbb
mov
add
mov
add
ja
cs
and
aad
popf
inc
nop
stos
pop
fwait
dec
loop
add
adc
fldenv
ret
lahf
je
cld
pop
jecxz
addl
int
xor
mov
pushf
imul
mov
or
adc
mov
pop
insl
add
inc
inc
in
pop
inc
repz
popf
aas
lret
jb
jp
dec
pop
dec
test
test
neg
adc
lods
cwtl
push
jg
mov
cmp
and
ds
lret
and
sub
lock
fstl
das
mov
and
nop
add
xor
ret
lahf
mov
es
sbb
leave
mov
cmpsl
jge
inc
mov
loop
or
mov
dec
shlb
mov
rol
pop
cmpsb
outsb
out
pop
xor
mov
outsb
mov
ljmp
dec
adc
xchg
dec
ljmp
ret
pop
adc
jns
sub
movsl
or
push
inc
arpl
setp
dec
cltd
lock
mov
pop
insl
push
dec
outsb
lahf
jb
fcmovnbe
mov
sbb
dec
mov
fwait
lret
push
idivb
out
add
or
call
pop
push
or
test
mov
adcb
popf
js
ja
jmp
push
adc
pop
les
je
dec
cmp
lret
add
lea
test
add
jns
jae
xchg
add
andl
out
scas
jg
arpl
aam
fstpl
jp
fdivr
mov
pushf
aaa
insb
mov
dec
jnp
pop
pop
jle
fistps
in
repz
inc
aam
fisttps
xchg
mov
inc
mov
pop
jae
btc
cli
adc
mov
stos
mov
jg
mov
call
xor
scas
sahf
xchg
mov
adc
sub
xchg
jle
ret
or
sbb
hlt
bound
arpl
mov
or
pop
sldt
mov
outsb
push
xchg
mov
cmp
mov
imul
add
bnd
jb
inc
mov
stos
push
inc
nop
push
jbe
push
xchg
jge
outsb
enter
lret
aaa
dec
lods
or
xchg
arpl
inc
dec
fcmovnbe
fimuls
rorl
xor
cld
push
push
scas
movsl
mov
inc
cmp
dec
lds
hlt
inc
rcll
test
ljmp
cld
inc
daa
jge
adc
jno
lods
loope
vpsubsb
les
cwtl
movsl
inc
push
dec
and
aas
lahf
mov
in
push
enter
cmp
xor
inc
clc
lret
pop
fisttpll
ss
lods
fcoms
das
xchg
loope
push
stc
sub
mov
js
adc
das
lods
cmpb
dec
sbb
rorb
and
mov
int
les
pop
gs
mov
mov
push
mov
loop
mov
test
in
jg
push
xor
shlb
fs
mov
adc
imul
dec
add
mov
push
add
jecxz
jns
clc
mov
or
jmp
lods
cmc
ret
dec
sub
mov
imul
mov
stc
stc
push
stc
adc
jl
jmpw
lods
cwtl
in
jo
aas
out
mov
cli
cld
loope
xor
pop
sti
sar
inc
pop
bound
loopne
dec
mov
cmp
adc
in
sub
xlat
sbb
repz
cmp
sbb
cli
and
xlat
push
sbb
lret
mov
mov
cli
jmp
inc
cmp
push
jle
aad
idiv
nop
xchg
ja
and
enter
push
je
add
dec
movb
lea
sbb
fs
sbb
xchg
lret
sub
dec
cmc
scas
or
dec
mov
inc
lret
ret
lret
inc
push
jp
aas
imul
imul
xchg
and
or
shl
sub
negb
xor
lds
shll
jle
jns
or
jge
mov
mov
lock
scas
and
inc
dec
xchg
aam
jecxz
ret
cs
mov
push
push
insl
lock
push
dec
femms
stos
cmpsl
jl
es
mov
mov
ret
mov
les
cmp
lds
mov
sub
decb
mov
pop
xchg
or
push
mov
ljmp
into
pop
mov
add
or
xchg
push
pushf
and
sbb
imul
cltd
and
xor
add
mov
ficompl
dec
aad
iret
test
bound
jne
sbb
stos
rcrl
ds
stc
outsl
negl
cltd
dec
or
cmc
andb
xor
or
in
loopne
xchg
fwait
add
mov
pop
cmp
jle
cmp
xlat
cs
inc
test
mov
dec
mov
and
ljmp
lds
adc
jns
jecxz
xchg
int3
mov
aaa
out
ljmp
out
in
mov
fsubl
jp
cwtl
dec
mov
xor
insb
cmc
sbb
addr16
jle
insb
loop
lock
sub
lods
xchg
add
jmp
xchg
pop
lcall
jle
popf
ficompl
mov
mov
jmp
and
jne
sbb
out
imul
add
js
mov
insb
adc
inc
aad
lock
sbbb
lods
hlt
lods
push
xchg
inc
ret
fists
push
and
enter
pusha
xchg
adc
inc
pop
in
mov
popa
xchg
dec
lds
cmc
je
sbb
pop
repnz
mov
int3
scas
push
fcmovb
jbe
mov
jge
loopne
sbb
arpl
aaa
push
jbe
or
pop
add
aam
mov
sbb
mov
lds
push
sbb
and
mov
cmp
pop
cmp
fstps
in
jecxz
enter
daa
jl
clc
cmp
push
push
jno
dec
cmp
adc
ds
in
movsl
inc
daa
aad
cmpsl
arpl
aam
sbb
mov
test
testb
lea
pop
add
and
pop
outsb
xorb
inc
xor
fcoml
mov
outsb
cmp
sbb
rorb
roll
adcb
sbb
divb
sbb
int
cli
push
sub
lcall
sbb
lds
sbb
and
sahf
push
adc
and
jg
xchg
cmp
inc
jo
pop
lea
ret
ja
ss
enter
mov
fdivs
in
mov
nop
cwtl
rorl
rorb
movsb
js
mov
inc
cmc
mov
xor
dec
test
shll
pop
xchg
scas
stc
mov
cmp
orl
insb
adc
mov
push
lods
out
jge
cli
das
sti
sti
xor
push
in
stos
imul
cmpsb
dec
jp
imul
pusha
pop
cmp
insl
adc
add
repz
fstpt
sahf
fbstp
cmp
mov
sub
lcall
mov
int3
out
aad
mov
nop
popa
pop
sub
inc
aaa
inc
aad
or
mov
repz
movb
add
pop
call
jecxz
mov
stc
adc
jae
fstpt
pop
mov
jge
push
call
inc
sub
ja
repnz
sbb
cltd
mov
pop
enter
scas
popf
cwtl
test
mov
lret
mov
jae
dec
adcl
stos
pop
mov
jle
lock
inc
das
je
or
loope
push
mov
ljmp
in
push
insl
xlat
cli
mov
or
xor
mov
nop
data16
pop
in
data16
enter
aam
rolb
lret
sub
push
mov
daa
ss
out
lcall
and
sub
lret
loop
xor
push
pop
cmp
push
xchg
xchg
popf
repnz
push
clc
lods
sub
pop
daa
mov
cltd
std
inc
jle
xchg
mov
gs
shrl
xor
shl
into
push
ret
nop
