jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
arpl
xor
gs
ss
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
movl
mov
mov
mov
push
mov
push
call
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
mov
pop
ret
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
pop
ret
add
add
xor
xor
xor
add
push
mov
add
mov
mov
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
mov
cmp
je
jmp
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
xor
divl
test
jne
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
mov
cmp
je
jmp
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
mov
cmp
je
jmp
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
sub
mov
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
push
mov
mov
xor
call
mov
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
mov
mov
mov
call
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
push
mov
mov
xor
call
mov
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
lea
mov
push
jmp
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
mov
mov
movl
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
push
fstpt
fstpt
sbb
mov
cld
fidivrs
repnz
pop
js
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
insl
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
insb
mov
rep
mov
add
mov
je
clc
insb
mov
jl
add
mov
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
insb
mov
or
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
insb
mov
jl
add
pop
cmpsl
cmp
jne
stos
je
or
cmp
hlt
insb
mov
cld
cld
cld
pop
hlt
insb
mov
rep
mov
out
hlt
insb
mov
clc
insb
mov
or
cld
cld
pop
rep
mov
hlt
insb
mov
insb
mov
int
pop
rep
mov
insb
mov
out
hlt
insb
mov
insb
mov
rep
mov
je
clc
insb
mov
hlt
insb
mov
clc
insb
mov
out
rep
mov
clc
insb
mov
or
cld
cld
je
pop
int
jbe
pop
jbe
clc
insb
mov
je
or
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
movl
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
mov
mov
call
mov
cmpl
je
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
cmp
je
mov
subb
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
xorb
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
incl
mov
cmp
jne
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
call
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
movb
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
call
call
call
call
test
jne
mov
jmp
movw
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
call
lea
mov
pop
ret
nop
push
mov
add
mov
cmp
jb
mov
mov
lea
xchg
lea
mov
xchg
mov
mov
xchg
lea
mov
dec
inc
dec
jne
mov
inc
dec
dec
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
push
push
push
call
mov
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
mov
pop
ret
add
push
outsb
je
jae
inc
dec
insb
and
and
add
add
add
jae
movl
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
lea
mov
xchg
mov
mov
dec
je
mov
mov
lea
mov
mov
lea
mov
inc
dec
inc
dec
je
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
lea
mov
dec
mov
lea
mov
inc
lea
xchg
lea
lea
mov
mov
xchg
lea
mov
dec
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
mov
mov
lea
mov
mov
lea
mov
lea
xchg
dec
jne
inc
inc
mov
lea
xchg
mov
dec
inc
inc
dec
je
movl
mov
mov
mov
push
mov
push
call
cmp
jle
dec
inc
dec
dec
mov
mov
mov
mov
mov
lea
mov
mov
dec
dec
je
lea
mov
mov
xchg
mov
inc
inc
inc
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
js
mov
xchg
lea
mov
lea
inc
dec
inc
xchg
lea
lea
mov
xchg
mov
lea
lea
dec
dec
jne
mov
dec
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
mov
mov
mov
mov
xchg
xchg
mov
inc
dec
jne
dec
lea
dec
inc
dec
lea
lea
mov
lea
inc
inc
inc
movl
mov
mov
mov
push
mov
push
call
cmp
jge
lea
mov
mov
dec
xchg
lea
xchg
dec
mov
mov
lea
mov
lea
lea
inc
inc
dec
jne
mov
mov
dec
dec
mov
mov
mov
lea
call
cmp
jnp
mov
mov
mov
mov
inc
inc
dec
jne
mov
dec
mov
xchg
mov
lea
xchg
lea
mov
dec
dec
je
inc
dec
inc
ret
add
xor
xor
xor
add
aaa
cmp
xor
cmp
add
add
xor
xor
xor
cmp
add
aaa
cmp
xor
add
add
xor
xor
xor
add
xor
cmp
cmp
aaa
xor
xor
add
xor
xor
xor
ret
lea
mov
mov
or
adc
pusha
rcr
mov
mov
dec
adc
mov
pop
jns
sarl
shl
cmp
or
enter
sub
cwtl
mov
add
or
stos
add
push
xchg
pop
add
adc
or
ja
sar
push
into
xchg
add
add
sub
fmuls
adc
add
ret
sti
add
mov
sarl
add
andl
out
add
in
mov
ret
mov
filds
mov
scas
add
add
add
test
je
sbb
popf
clc
add
add
add
add
add
push
add
mov
stc
xchg
sub
push
xchg
daa
jmp
xor
push
les
dec
icebp
ds
ret
out
jmp
outsb
stos
lret
add
insl
popa
roll
insb
cmc
sarb
enter
aaa
add
data16
jmp
add
add
fnstenv
push
arpl
and
adc
imull
cmp
clc
add
mov
dec
addl
push
add
pop
in
inc
imul
add
cwtl
add
add
add
push
fimuls
dec
leave
movsl
fstl
fiaddl
daa
popf
rcll
cld
std
cmp
hlt
add
xchg
inc
add
ret
outsb
in
scas
mov
outsb
push
jg
addr16
xchg
icebp
ret
aad
pop
loop
add
loopne
xchg
push
add
icebp
xchg
jl
add
daa
add
add
movb
inc
test
and
cltd
lret
add
or
push
shl
stc
sub
icebp
sub
mov
imul
pop
xchg
add
add
das
dec
mov
add
pop
pop
lret
and
inc
mov
dec
push
jbe
xchg
add
mov
mov
lods
xchg
insb
mov
cmc
ss
pop
addl
xor
adc
add
push
movsb
push
push
jb
and
add
add
je
jns,pt
add
add
lods
or
rolb
mov
add
movl
pusha
rolb
add
out
out
daa
mov
add
sti
add
ja
ljmp
add
add
mov
push
mov
push
add
add
cmc
js
add
int
and
outsb
add
add
scas
or
bound
push
add
or
add
add
into
addl
mov
clc
inc
pop
ss
mov
dec
push
cwtl
lods
rolb
roll
add
lds
and
sbb
push
shlb
rolb
add
adc
inc
loopne
add
scas
adcl
add
mov
stc
xor
stos
pop
das
enter
ds
or
add
dec
sub
inc
hlt
push
pop
mov
and
add
scas
pop
add
fs
add
mov
jge
in
add
inc
aas
ret
jg
insl
repnz
pop
add
add
pop
iret
fadds
add
add
incb
mov
mov
add
push
shl
xchg
xor
arpl
add
testl
outsb
repnz
add
add
pop
or
mov
add
add
push
jae
jg
out
pop
add
jl
mov
call
mov
jg
ljmp
insl
add
mov
dec
loope
add
outsl
stos
stos
mov
cwtl
imul
add
add
stc
negb
pop
mov
or
inc
insl
sub
inc
sbb
add
repz
xor
in
push
mov
aas
push
clc
jge
out
xchg
pusha
push
rcll
lods
pop
loopne
stc
stos
or
out
cmc
fwait
cmp
adc
jmp
mov
xchg
sarb
xor
sub
scas
roll
jle
xor
dec
mov
stos
inc
mov
add
pop
dec
ja
inc
cmp
mov
jnp
sbb
cmp
cs
in
mov
fsubl
xchg
mov
insl
addr16
insl
clc
lea
test
mov
dec
insl
mov
outsl
mov
sbb
cs
mov
jle
fistps
mov
ss
rorl
bound
imul
jb
jae
add
ret
orl
pusha
sar
clc
repnz
insb
pop
xchg
mov
jle
xor
in
imul
pusha
adc
rcrl
dec
add
inc
pop
inc
nop
jae
mov
imul
arpl
fiaddl
scas
xchg
lret
sti
enter
jmp
scas
out
shr
push
push
cmp
and
sub
repnz
leave
push
arpl
hlt
xor
int3
arpl
js
inc
adc
or
sub
inc
aaa
hlt
or
in
lea
ret
fsubr
int3
iret
cvttps2pi
sti
mov
push
js
lds
pop
inc
scas
xor
push
pop
cmp
mov
movsb
popa
mov
pop
shlb
fnstcw
sbb
fldenv
or
ret
leave
jno
dec
mov
dec
imul
xor
int3
cmp
lahf
inc
jge
push
sbb
pop
test
in
inc
idivl
cltd
in
or
pusha
enter
pop
mov
enter
inc
push
sub
leave
test
sub
mov
and
pop
cld
pop
aas
inc
orb
cmp
popf
cli
xor
dec
sbb
add
sbb
pop
cmc
test
xchg
push
xor
sub
fcmovnb
outsb
daa
imul
sar
ljmp
cmp
mov
mov
adc
movb
jnp
int
adc
sub
jmp
mov
xor
xchg
rorl
lea
jp
sahf
pop
inc
cmc
test
insl
fsubrs
mov
and
or
test
add
inc
ss
iret
mov
out
sub
cli
dec
in
cmp
cmp
fbstp
cmpsl
adc
into
sti
repz
shll
arpl
sbbl
adc
sub
aaa
add
int
cmp
mov
arpl
scas
insl
add
sbb
in
mov
cvtdq2ps
lahf
xor
sar
xor
jb
push
loop
and
mov
in
fldcw
mov
repz
xchg
sub
sbb
lret
hlt
ret
sbb
mulb
pushf
sbbb
mov
js
push
and
aas
stc
push
popf
jb
fidivrl
je
adc
xchg
add
stos
push
inc
call
mov
bound
dec
vunpckhps
fldl
dec
inc
fistpl
xor
and
mov
mov
shll
cmp
std
jecxz
sub
or
sti
mov
leave
ss
ffree
dec
lret
and
enter
cmp
jns
popf
pop
push
push
test
sub
ljmp
mov
out
insl
add
cmp
fidivs
and
sbb
mov
mov
arpl
sub
add
fnstsw
inc
mov
mov
lods
push
jl
add
add
fwait
xchg
dec
sbb
jb
pop
mov
out
pop
mov
xchg
data16
xor
sbb
sar
xor
and
or
shll
mov
inc
dec
in
std
test
vzeroall
push
and
dec
lods
push
adc
mov
or
sub
mov
xchg
push
jmp
lods
dec
add
imul
in
sub
sub
jns
pop
push
cs
sub
ljmp
add
mov
ficoms
dec
insl
dec
loopne
mov
inc
mov
cmp
cmp
jge
push
xor
jmp
pushf
adc
out
call
pop
or
or
roll
mov
lds
movd
adcb
jne
or
mov
iret
cmpb
pop
test
mov
arpl
shll
add
or
out
cmova
stc
xchg
and
insl
inc
imul
jnp
push
out
push
cwtl
mov
les
repnz
leave
leave
lret
jge
cmp
mov
inc
adc
aas
push
sahf
bound
or
lds
int3
mov
inc
pop
fidivs
mov
shr
dec
scas
adc
imul
mov
movsb
in
lds
push
pop
data16
jbe
repnz
jge
jp
sbb
inc
stos
daa
or
cmp
icebp
jno
test
xchg
xchg
sbb
xor
daa
popf
lahf
fs
push
jmp
fildll
scas
loop
inc
xchg
xchg
in
repz
pop
enter
pop
and
push
ja
loope
cmp
cmp
movsb
mov
dec
stos
mov
push
fisttpl
mov
les
jb
out
xchg
jne
xor
test
rcl
js
jge
pop
je
stc
lcall
mov
pusha
insb
popa
sub
cmp
dec
adc
fimull
jg
push
divl
inc
xchg
test
stc
loope
mov
pop
int
or
add
in
lret
add
pop
or
xchg
sub
sahf
mov
imul
push
sub
loop
outsb
stc
shrb
fs
mov
adc
or
mov
jo
add
mov
cli
jg
adc
mov
dec
cmp
test
into
fisubs
adc
fisubs
pop
int3
mov
adc
add
imul
aaa
inc
add
xchg
test
jno
lods
int
stos
mov
jno
xlat
in
lret
sub
and
push
dec
and
gs
push
loopne
out
jp
xor
mov
lahf
xchg
rol
push
cmovbe
jle
loope
add
ficomps
dec
xchg
pushf
sub
jmp
std
sbb
add
leave
nop
xor
aas
cwtl
mov
jb
push
xchg
dec
add
das
pop
jecxz
iret
insb
xchg
outsb
lea
rol
bound
mov
cwtl
push
mov
adc
xor
mov
pop
fisttpl
stos
pop
add
out
bound
inc
das
add
pop
mov
push
xor
pop
rol
add
imulb
sub
push
lea
mov
mov
lahf
xchg
lret
xchg
add
mov
sub
daa
lock
std
pop
je
xor
sub
lods
ret
dec
push
mov
cmp
lock
dec
fisubrl
xchg
sbb
jb
popa
inc
mov
adc
fisttps
arpl
call
mov
or
push
pop
mov
lret
xor
adc
mov
repz
sbb
arpl
add
or
out
jmp
mov
orb
mov
pop
jo
xor
lods
xchg
or
pop
and
mov
mov
scas
dec
dec
clc
pop
test
stos
add
paddw
ss
inc
jmp
inc
or
and
fwait
mov
int3
mov
add
mov
out
fldt
testb
jns
jmp
cmpsl
xchg
jp
sbb
push
push
cmpsl
pop
jecxz
inc
imul
jp
ss
mov
push
outsb
mov
dec
mov
dec
push
mull
or
inc
xchg
jmp
cmp
lock
std
push
call
or
cmpsb
adc
es
insb
xor
jnp
and
jle
ret
jl
loope
dec
xchg
cltd
iret
fistpll
dec
pop
mov
loop
jae
stos
ljmp
sbb
and
pop
inc
xor
dec
xchg
jns
dec
sbb
mov
imul
loop
mov
cmp
aaa
lea
lahf
mov
repnz
leave
inc
clc
hlt
enter
or
stos
inc
push
mov
or
and
repnz
pop
outsl
pop
or
gs
movsl
sbb
movsb
dec
jp
push
subl
pop
inc
rolb
int
repz
andb
mov
cmpsb
movsb
ja
xchg
push
outsb
mov
jbe
jg
jge
xchg
cmp
mov
iret
daa
or
cmp
sub
dec
dec
arpl
xor
adc
lahf
andl
mov
inc
adc
int
in
fimull
enter
pop
cmp
fisttpl
dec
push
sub
mov
cmp
sub
pop
aad
and
in
pop
cmp
mov
lods
sbb
in
xor
outsl
xchg
mov
movsb
out
xchg
sub
mov
stos
push
das
sbb
xor
outsb
in
jg
adc
mov
pop
jg
dec
mov
loopne
sbb
mov
jmp
and
dec
xchg
mov
ror
loope
sub
mov
imull
add
sbb
aam
ss
mov
orb
sbb
sub
sahf
pop
leave
fldl
insl
std
jl
dec
pop
jae
aas
inc
mov
fs
xor
ss
gs
cmp
rolb
ljmp
xor
ret
cmp
std
mov
into
roll
popa
aaa
mov
cmp
cld
adc
int3
outsl
imul
mov
loop
aas
fwait
and
xor
sub
call
mov
in
jns
std
aad
sbb
subb
sbb
and
sarl
jno
les
and
xchg
mov
enter
dec
cmp
popa
bnd
pop
add
sbb
and
sub
cmp
imul
xor
fistpll
aaa
ret
inc
jb
add
ljmp
repz
lea
scas
call
cmp
adc
mov
pop
cmpl
movsb
pop
cmpsb
pop
and
cli
cmpsl
inc
adc
cmpsb
das
jecxz
sbb
lds
rcll
xor
cwtl
setae
or
cmp
ja
leave
cld
xor
lret
add
mov
fs
lock
pop
scas
pop
xchg
inc
fcmovnbe
daa
pop
inc
sub
jmp
ret
fmul
inc
sarb
into
pop
aam
aad
aad
pop
xor
popa
push
push
je
mov
icebp
adc
loop
mov
pop
xor
add
inc
popl
mov
add
dec
arpl
xchg
xchg
jne
push
pop
jne
pop
mov
mov
and
xchg
hlt
cld
in
mov
jmp
pop
or
in
mov
out
testb
ret
ret
and
ja
jg
dec
xchg
or
or
out
ds
out
stc
push
das
add
sti
or
pop
bound
bound
in
fldt
xchg
leave
fldt
mov
movsl
xchg
mov
sahf
stos
mov
push
int
int3
sbb
jge
fmulp
orl
inc
aaa
pop
mov
repnz
fistpll
lcall
pop
mov
andl
mov
mov
aas
push
int3
push
stos
mov
jmp
clc
jnp
cmp
sub
test
sbbl
out
inc
iret
ds
negb
pushf
push
inc
jns
sti
jae
xchg
pop
push
xchg
lcall
pop
cmp
mov
pop
ficompl
ficoml
sub
jnp
mov
scas
pop
in
jge
es
xchg
adc
pop
mov
mov
test
hlt
adc
xor
es
sub
inc
icebp
aaa
sbb
inc
or
loopne
int3
nop
pop
hlt
pop
rcrl
or
divl
lds
lods
shlb
subl
and
bound
inc
jns
adc
add
insl
dec
cli
daa
or
mov
jno
iret
push
jl
xor
dec
mov
fiaddl
jo
mov
jb
xchg
lds
loope,pn
push
inc
sbb
inc
movsb
fiaddl
cmpsb
orl
call
jl
in
jbe
ret
loope
xchg
imul
ret
cmp
jge
xchg
lcall
lods
sub
jbe
fs
into
sbb
inc
add
xchg
arpl
pop
bound
js
insl
popa
pop
jb
adc
xchg
fdivl
dec
lods
outsb
push
jns
adc
nop
push
fnstsw
dec
mov
mov
lcall
mov
sahf
mov
imul
sub
lret
mov
mov
sbb
stos
or
add
test
fdivrl
mov
pop
outsl
sub
popf
loop
xchg
out
stc
cs
fs
jne
test
xor
jnp
jl
jmp
xchg
mov
cmp
dec
test
hlt
shlb
into
movsb
fbld
xchg
sub
pop
or
ficoml
cmpsb
leave
add
int3
add
call
cmp
mov
mov
xlat
imul
sub
push
mov
push
xchg
cmp
lods
dec
cmp
mov
xchg
inc
dec
out
mov
sub
or
adc
gs
je
imul
jno
mov
adc
pushf
xorl
mov
nop
out
pop
aas
decl
call
cmp
je
arpl
jecxz
pop
mov
loopne
jo
pop
or
mov
mov
adcl
and
push
sbbb
cs
jo
fildl
js
das
ret
mov
jl
shlb
insb
ljmp
insl
std
fcomps
outsb
cwtl
lret
cmpsl
or
mov
push
icebp
xchg
icebp
dec
out
insl
cld
pop
iret
mov
mov
adc
bound
mov
mov
cli
nop
stos
sub
pop
dec
ret
imul
insl
mov
pop
dec
rorb
xchg
fwait
xor
andb
pop
lods
or
mov
and
xchg
and
cmpsb
xor
rcrb
inc
test
out
mov
mov
fnsave
mov
xchg
mov
jne
mov
add
xorl
mov
xor
pop
cmpsb
or
mov
xor
shr
mov
mov
jae
test
xor
dec
jae
dec
xchg
sub
xchg
mov
push
xor
int3
add
push
jle
out
cltd
xor
push
jns
jg
in
icebp
lahf
xchg
sbb
mov
mov
pop
ljmp
mov
xlat
mov
sub
jne
add
jmp
fistps
xchg
std
and
subl
aaa
out
xchg
add
scas
mov
or
stos
sub
xchg
and
insb
push
xchg
jnp
adc
in
inc
mov
out
iret
popf
ret
ss
jbe
sub
inc
test
inc
jae
ret
push
and
popf
pop
cli
pop
mov
xor
iret
xchg
daa
mov
sbb
mov
mov
fsubl
insl
ret
push
lods
sbb
movsl
aas
aaa
repnz
jne
pop
movsl
mov
sub
ljmp
fiaddl
xor
aaa
fistl
or
jg
int3
jnp
popa
pop
add
lds
mov
scas
mov
adc
and
dec
cmp
out
fwait
movsb
lea
jbe
divb
lods
push
sbb
xor
daa
or
mov
jno
cwtl
sub
hlt
pop
outsb
dec
daa
dec
mov
scas
jmp
mov
cmp
fists
imul
inc
xor
cmpsb
add
pop
in
test
add
int
lds
mov
mov
in
sub
xchg
dec
cmp
js
ds
xor
dec
mov
fiaddl
pop
mov
lcall
xchg
outsl
pop
mov
popf
js
inc
addl
lcall
fsubl
jg
mov
data16
imul
jg
inc
add
lods
fildll
mov
sahf
jle
dec
mov
xchg
int
inc
mov
aad
jmp
stos
pop
push
cmp
movsb
dec
mov
pop
sbb
out
and
mov
xor
or
push
loop
sbb
fs
cld
dec
adc
ljmp
aad
fdivs
sar
call
mov
cmp
insb
mov
into
xchg
cmc
out
int3
lods
xor
das
xchg
pop
sub
xor
jns
push
imul
les
inc
dec
and
sub
jno
stos
out
fildll
out
jmp
in
mov
mov
mov
adc
insl
inc
shlb
les
xor
sbb
mov
xchg
lock
mov
insl
rclb
shll
pushf
sub
pop
jmp
xchg
adc
sub
aad
and
aas
jne
adc
add
dec
push
dec
je
jl
jecxz
pop
popa
popf
dec
rorb
les
mov
repz
jno
add
cltd
mov
cmp
mul
repnz
dec
mov
das
mov
int3
sub
roll
sub
mov
call
std
jg
bound
or
add
and
and
push
mov
sub
pop
roll
ror
dec
sbb
mov
sbb
ret
cli
out
lds
call
cli
dec
lret
pushf
dec
xchg
fidivrl
popa
test
aad
jbe
int3
mov
dec
dec
mov
xchg
and
syscall
or
in
rcrl
cmp
test
jo
mov
fstpl
test
xor
sbb
rorl
cwtl
lods
pop
aaa
pop
stos
stos
mov
cmc
out
in
sbb
pop
dec
mov
cmp
cmp
xor
or
bound
incl
push
movsl
inc
xchg
push
pop
test
shr
ja
jmp
dec
jns
mov
mov
or
pop
or
inc
push
jne
xchg
add
xor
dec
out
js
lods
bound
aas
add
push
pop
mov
stos
gs
lret
dec
testl
addr16
or
mov
lcall
jne
xor
sbb
loopne
mov
es
jmp
enter
mov
pop
xchg
stos
aas
test
xchg
jns
lahf
xchg
mov
imul
jno
call
jle
cmp
cmp
iret
cld
int3
mov
pop
pusha
jecxz
inc
pop
inc
jae
xor
push
sbb
popf
xchg
pop
mov
mov
sub
xchg
jle
mov
imul
and
popf
sbb
xor
mov
inc
add
movsl
shlb
arpl
push
mov
or
xchg
mov
xor
xchg
xor
mov
and
pop
pop
pop
xor
sub
cmp
mov
xor
and
pop
movsb
sbb
or
aaa
addr16
filds
jecxz
sbb
or
ret
jno
test
pop
loopne
dec
xchg
or
xchg
in
addr16
xchg
iret
movsl
lahf
loopne
cmp
test
fistpl
mov
pop
xchg
enter
pop
cli
xor
loope
jle
sub
fdivrl
cmp
pop
andb
lret
xor
mov
sbb
pop
add
movl
pop
mov
and
scas
jnp
jo
xchg
xor
add
or
push
sub
out
adc
inc
stos
jg,pt
dec
jns
mov
and
mov
cmc
pop
and
push
rolb
sub
jecxz
imul
sbb
sti
scas
adc
sbb
inc
sahf
inc
mov
test
mov
call
aam
stc
pushf
popf
push
sbb
jne
or
fdiv
out
add
fwait
xor
adc
enter
adc
push
stc
cmc
mov
xor
dec
inc
push
pop
dec
scas
cld
adc
imul
pushf
dec
enterw
imul
xlat
jmp
add
testb
sti
or
pcmpgtw
mov
cld
inc
shl
sbb
xchg
cld
repz
xchg
cli
fstps
icebp
por
outsl
jo
pop
sbb
pop
adc
dec
push
pushf
xlat
ds
pop
cmc
mov
aad
xor
nop
popf
jnp
aas
adc
xorb
out
loope
xchg
je
call
pushf
mov
bound
call
jns
jbe
vfrczpd
ret
leave
fcmovne
jbe
pop
popl
pop
inc
gs
das
addb
mov
pop
jmp
roll
pop
inc
idivb
movsb
aad
inc
sbb
cmpsl
pop
test
cld
mov
jmp
dec
pop
xor
mov
xchg
pop
lock
sub
xor
mov
es
dec
jne
addl
jg
xchg
sbb
movsb
ljmp
push
lods
loope
lock
imul
and
xor
aaa
add
test
jmp
sub
mov
ficoms
movsb
push
ret
mov
xchg
and
rcrl
bound
pop
stos
mov
je
xchg
leave
ret
xlat
push
xor
fldt
xor
dec
add
or
arpl
xchg
lods
test
call
or
leave
out
dec
insb
mov
sbb
mov
clc
fwait
je
and
sbb
add
dec
lcall
inc
and
mov
xchg
mov
imul
iret
and
xlat
jp
or
mov
or
aaa
dec
fsubl
divl
ret
test
xlat
jno
xchg
xor
orl
dec
imul
fldl
lods
or
aas
inc
stos
adc
inc
and
add
jle
dec
out
cwtl
inc
insb
pusha
mov
or
pop
pop
leave
mov
inc
lcall
push
fmull
dec
mov
das
xlat
aaa
fidivl
mov
aad
sub
imul
scas
inc
cltd
out
sti
fdivrl
or
sarl
mov
pop
leave
sbb
loope
hlt
jge
arpl
popf
inc
and
push
pop
lret
mov
sbb
push
sbb
sahf
fsubp
or
vpaddb
outsl
stc
insl
and
nop
cmp
fsubl
xchg
mov
jge
shll
sbb
clc
mov
jno
xchg
sub
decb
inc
sub
jne
repz
out
cmc
rcrb
dec
sub
cmpsb
fiadds
push
pop
xchg
cmpsb
or
in
ret
enter
jg
push
jo
loope
sub
pop
testb
fdecstp
ds
test
movsl
jp
push
xchg
pop
add
sbb
gs
xor
sbb
pop
xlat
fsubs
pop
out
mov
nop
push
mov
fdivl
test
outsb
jns
or
and
sub
mov
push
in
mov
mov
xor
ret
mov
int
das
jae
lret
cmp
lret
jmp
mov
fcompl
mov
pop
sahf
jmp
jae
sbb
mov
add
dec
stc
push
push
jp
cmpsb
jns
adc
ja
ss
xchg
cmpb
mov
jle
ja
mov
sub
dec
pop
adc
jge
inc
xor
jbe
adc
clc
in
imul
pop
movsl
dec
leave
cmpsl
lods
push
xor
sub
sub
and
mov
xchg
inc
xchg
mov
repnz
gs
lahf
adc
dec
or
addr16
out
dec
fnstenv
repnz
sahf
fs
mov
xchg
imul
xor
out
push
sahf
pop
int
dec
adc
inc
add
negb
cs
push
mov
ja
mov
mov
lret
pop
xchg
xorb
jecxz
sub
mov
inc
and
leave
stc
mov
mov
dec
inc
dec
inc
insb
sub
div
fstps
int
inc
add
jno
das
pop
repnz
mov
sub
rcll
xchg
idiv
sar
int
aaa
cwtl
sti
jno
cmpsl
push
test
mov
shr
push
cld
fisttps
lret
mov
pop
xor
lock
push
imul
push
sub
jae
shrl
fiaddl
sahf
jg
sbb
popf
insl
push
aaa
dec
shl
xchg
pop
push
ss
dec
lods
dec
mov
mov
mov
fsubs
lret
popa
sbb
add
inc
inc
cltd
and
push
and
int
ljmp
xchg
mov
sbb
loope
shll
movsb
les
stos
inc
fists
pavgb
xor
bound
push
and
xor
push
sub
les
cmp
or
adc
data16
pop
bound
inc
fisubs
or
outsl
sub
mov
test
addr16
pop
out
ss
aad
mov
lods
xchg
in
sub
popf
mov
mov
mov
mov
sub
inc
mov
mov
mov
mov
js
fisttps
xchg
mov
mov
cmpsl
fcomip
mov
inc
jmp
pop
es
fdivl
out
push
imul
arpl
push
enter
test
jge
cltd
sub
jnp
cmp
mov
and
push
mov
idivl
mov
xlat
fistps
mov
and
push
lahf
insl
jb
aam
dec
mov
scas
inc
in
fisubl
scas
add
fcoms
fs
mov
xorb
out
and
or
icebp
leave
xchg
stos
call
arpl
jnp
and
stos
leave
push
sbb
or
add
xor
cmp
pop
cli
fiadds
sahf
outsb
rorb
and
pop
outsl
cmp
cwtl
nop
movsb
cs
cmpsb
push
stc
aaa
inc
jbe
push
inc
jge
pop
in
pop
push
xchg
daa
push
mov
test
lret
jne
xchg
out
push
pop
into
jnp
mov
cwtl
jo
xor
lahf
push
ja
push
fisttpll
push
jno
cmp
mov
jecxz
pop
fsubs
mov
push
shrb
pop
loope
clc
add
jecxz
cmp
jmp
movsl
adcl
lcall
add
or
xor
std
inc
outsl
mov
movsb
js
rolb
nop
fistpl
loop
sahf
fsubl
aad
mov
jmp
sar
push
pusha
jg
pop
mov
jg
enter
out
mov
lahf
and
xchg
push
push
sbb
cmpb
into
jb
out
ret
xchg
adc
sub
fisttpll
push
pop
sahf
mov
and
hlt
inc
mov
loop
in
stc
or
jae
sub
test
fsubs
sbb
cli
mov
jle
xchg
insl
pop
cmp
out
mov
sbb
cmc
inc
sbb
add
xchg
adc
les
adc
inc
add
push
data16
ss
mov
mov
xchg
mov
cld
daa
out
sti
push
jno
mov
xchg
pusha
dec
push
sahf
inc
stc
adc
fldl2t
push
out
les
mov
sbb
addr16
subb
pushf
sub
or
cs
xchg
gs
nop
push
sub
push
sbb
jb
jle
dec
iret
test
je
mov
xchg
cmpsb
loop
lea
call
imull
mov
dec
subl
xor
inc
mov
das
addr16
mov
scas
jo
je
adc
mov
adc
je
clc
cwtl
mov
jo
add
mov
icebp
stos
xor
cld
or
test
sub
or
lock
rolb
jnp
xchg
aam
pop
xchg
cmpsl
and
push
insl
push
data16
mov
push
ljmp
and
mov
xor
mov
stos
and
popw
mov
fiadds
push
cmp
cltd
push
jae
test
shll
icebp
clc
push
lcall
dec
xchg
sbb
out
lcall
xchg
stos
or
jno
push
cmp
push
ljmp
xor
and
sahf
sub
jg
mov
jmp
dec
mov
inc
test
das
adc
push
dec
push
mov
fwait
or
popa
dec
fwait
shlb
push
pop
pusha
push
add
addb
out
adc
push
push
in
xchg
mov
mov
out
mov
inc
lods
addr16
jp
sub
jecxz
mov
lds
mov
adc
neg
adc
ds
mov
jp
subl
out
jns
sub
fwait
shll
pop
and
stos
clc
orl
mov
and
and
jle
dec
and
iret
add
jns
iret
sbb
ret
pushf
pop
add
pushf
push
and
les
popf
sti
push
mov
sub
iret
jnp
subl
imul
scas
push
es
push
mov
push
mov
pop
stos
adc
or
lds
flds
sub
or
add
call
or
xchg
add
jnp
daa
pop
xchg
pop
mov
test
xchg
shrb
adc
insl
out
cmp
call
jbe
push
dec
jge
int
sbb
and
add
aam
jno
and
jl
sbb
jecxz
xchg
push
cmp
repz
jle
lahf
cmp
add
test
cmp
jl
outsl
pop
out
cmpsb
adc
or
fidivs
push
repz
loope
jmp
sub
movsb
dec
cmp
dec
sbb
inc
and
and
jo
daa
push
sbb
or
add
sahf
outsl
xor
dec
pusha
xor
js
fs
in
in
lcall
push
fmull
leave
outsb
aas
movsb
mov
rcl
inc
xchg
jg
outsb
pop
mov
jp
mov
aas
mov
rep
and
arpl
int
lods
pop
sub
cmc
push
cmpsb
pop
mov
lret
leave
rol
stos
mov
sbb
mov
push
test
int3
mov
test
shl
mov
jl
shrl
adc
ss
pop
cmp
and
cli
in
loopne
insb
iret
lret
cmp
cmp
pop
pop
inc
into
adc
add
xor
pop
pop
movsl
adc
imul
stos
push
push
sbb
sbb
cmp
cmpsb
scas
add
mov
shll
fidivs
pop
and
jmp
push
gs
xchg
and
mov
adc
fldenv
or
mov
mov
sub
sbb
jns
cmp
pop
cmp
xor
adc
jbe
pushf
fadd
lahf
jmp
mov
es
mov
nop
mov
xor
gs
inc
pop
add
xor
xor
test
mov
call
mov
decl
inc
cmpsb
imul
fistl
adc
cmp
inc
adc
mov
scas
das
sbb
pop
mov
and
lahf
jae
out
stos
testb
mov
add
and
sbbl
and
lock
in
adc
rcrb
dec
in
sub
jne
and
ret
ss
shrb
lds
in
or
mov
aad
add
out
in
popa
loope
push
lods
and
js
aam
andl
icebp
cmp
adcl
cltd
mov
and
dec
pop
push
xchg
rcll
clc
nop
outsl
fiadds
inc
jg
shll
pop
jecxz
subb
mov
push
vmovd
mov
pop
add
inc
mov
and
lret
dec
sbb
and
ja
repnz
dec
inc
or
out
js
adc
add
inc
push
add
add
popf
fidivrl
hlt
outsb
mov
push
or
popf
stos
inc
in
dec
sbb
mov
adc
in
push
pop
add
nop
cli
jp
dec
mov
xlat
dec
inc
mov
push
mov
dec
test
out
shrl
fbstp
imul
outsb
mov
cmp
hlt
out
adc
sub
xchg
xlat
mov
stos
imul
and
mov
inc
jnp
iret
das
jle
cmp
mov
dec
iret
js
insl
ret
pop
pop
cmp
sub
es
mov
int
and
mov
inc
lods
mov
fimull
inc
sbb
jmp
imul
imul
pop
adc
lods
jmp
adcl
pop
arpl
inc
sub
or
jge
push
aaa
xchg
cmp
or
inc
add
mov
int3
adc
pop
in
add
fmulp
xor
rol
adc
add
movsb
inc
adc
jbe
or
jge
pop
mov
daa
add
stos
cmp
and
jl
sub
push
push
cmpb
inc
mov
dec
lahf
pop
cltd
fists
test
test
pop
cltd
mov
incb
cmpsb
xchg
xchg
aam
sub
stos
enter
pop
idivb
push
inc
mov
in
add
cmp
push
ds
inc
movsl
fbld
dec
rcll
and
or
sub
lds
test
adc
js
pop
scas
pop
insb
mov
push
nop
adc
sub
adc
adc
mov
ret
sub
and
sub
and
ljmp
cmp
sbb
gs
mov
rcll
mov
jns
sbb
mov
pop
test
mov
sub
jmp
loop
ret
push
stc
js
movsl
fs
stos
xchg
adc
fstp
ss
mov
inc
fcomp
sbb
out
xchg
and
pop
loopne
xor
outsl
cmp
jge
or
jb
cmc
rcrb
xchg
pop
out
adc
add
push
data16
xor
add
mov
xlat
in
mov
and
ss
sti
das
cmp
push
dec
andl
cld
loopne
ret
mov
sub
push
push
pusha
or
rol
repz
mov
scas
sbb
fstl
imul
out
xor
pushf
addl
ret
sub
cs
mov
nop
or
add
nop
mov
pop
dec
mov
loope
jecxz
pop
and
lods
fisttpll
cmp
xchg
mov
jle
mov
outsl
sbb
pop
mov
test
sti
pop
sbb
inc
lcall
das
cld
pop
std
mov
mov
dec
sarl
mull
ret
cwtl
sub
cmpsl
add
aad
pop
sub
cld
pusha
inc
jo
or
lods
mov
in
mov
je
lock
pop
inc
pop
insb
add
shr
andnps
je
cmpsl
aam
daa
ret
es
pop
and
dec
mov
mov
ljmp
dec
lods
lea
mov
adc
mov
loopne
add
cltd
test
add
fstpl
stc
clc
lret
jae
xchg
pop
xchg
sarl
ss
pop
rclb
shrl
xchg
in
out
mov
lods
jmp
or
int
mov
int
fmuls
inc
mov
jns
pop
ja
std
push
dec
cmp
es
shrl
xor
cmp
add
in
in
bound
lahf
fucom
or
stos
xchg
repnz
mov
mov
mov
cld
imul
push
mov
in
mov
lds
xor
xchg
enter
mov
fists
pop
xchg
subl
pop
orl
cmp
xchg
outsl
lcall
cld
out
ficoms
mov
xchg
inc
push
jle
sbb
mov
int3
pusha
and
sbb
test
lcall
jp
jae
imul
popf
dec
sti
sarb
sub
cmpsb
xchg
xor
xchg
sbb
aam
imul
or
pop
ret
ja
sub
add
scas
leave
clc
inc
test
and
pop
arpl
hlt
testb
push
xor
push
mov
push
or
add
pusha
int3
pop
sbb
mov
insb
rclb
fstp
ffreep
ficoms
jnp
xchg
xchg
cmp
and
cmp
push
out
and
cmp
sbb
adc
cmp
and
inc
xor
popa
dec
shll
add
xor
pop
push
xor
push
test
test
shrb
cltd
inc
lea
cmpsb
push
cmpb
scas
inc
insl
pop
xor
inc
dec
loope
mov
cmp
int3
in
mov
movsl
xchg
mov
and
xor
pextrw
fwait
orb
sbb
inc
add
outsb
xor
dec
mov
dec
mov
imul
lcall
mov
sub
int3
outsb
add
test
pop
mov
mov
daa
and
rcll
jbe
iret
in
int
mov
sub
and
inc
lret
jns
out
add
mov
dec
xchg
aaa
sahf
jne
inc
test
mov
addb
outsl
inc
in
push
loop
orb
shlb
adc
fstpl
ss
pop
sub
cwtl
sbb
cli
dec
or
mov
and
into
fnstenv
ljmp
mov
sub
adc
mov
aaa
inc
lods
in
and
loop
and
xor
cwtl
stos
pop
mov
cmp
add
xor
dec
loopne
idiv
dec
xchg
inc
xor
push
xor
movsl
lcall
in
pushf
cmp
mov
cltd
aaa
test
fucomp
pushf
cs
scas
jmp
fs
xchg
sub
cmp
nop
in
sarl
das
sbb
dec
xor
push
je
icebp
ret
movsb
push
scas
mov
mov
xchg
mov
in
popa
mov
jns
je
repnz
repz
push
jnp
inc
and
movsl
inc
in
aad
das
fcmovnu
dec
mov
jge
xchg
and
addr16
testb
cmp
imul
sahf
cmpsl
add
jns
mov
lret
fistpll
lret
js
cmp
repnz
in
mov
loop
lock
fimull
mov
out
imul
mov
and
push
mov
mov
dec
lods
lcall
aam
je
bswap
jb
clc
pop
aad
add
or
aaa
ror
xchg
push
add
dec
cltd
cld
jae
test
cli
pop
push
sbb
sar
or
xchg
sbb
int
adc
arpl
or
xchg
sub
push
jnp
pushf
push
inc
add
or
out
xor
repnz
scas
daa
mov
dec
jmp
cmc
test
mov
inc
dec
sub
mov
cmp
dec
fwait
pop
int
push
inc
or
mov
mov
and
rcl
jns
cmp
xchg
inc
jbe
mov
pop
mov
pop
jbe
sub
jp
cmpsl
int3
mov
mov
push
mov
cmp
aam
jne
jge
mov
in
jb
fsts
mov
xchg
mov
sbbl
loope
cwtl
cmpsl
in
pusha
xchg
or
popf
stos
push
xchg
and
test
cmpsl
jnp
jbe
jle
lock
mov
jns
iret
ss
pop
ret
cmp
stos
push
adc
jae
jae
push
stos
sbbb
xor
xor
insb
mov
sbb
xchg
stos
imul
ds
das
pop
movsb
push
pop
cmc
sbb
push
lahf
sub
push
dec
mov
outsl
adc
imul
xchg
mov
push
or
jae
cmp
or
pop
add
stos
int3
call
sbb
pcmpgtb
sar
cmp
lret
and
mov
sbb
imul
jge
jno
sbb
jno
add
jno
push
aad
jno
push
and
mov
xor
xchg
push
in
xor
mov
mov
push
sub
push
popf
push
aam
sbb
daa
cmpsb
cltd
loop
in
stc
sub
stos
aad
pop
je
and
push
adc
sbb
mov
fnstenv
ret
lods
jnp
movsl
popf
xor
and
push
mov
cwtl
add
add
push
clc
jnp
and
and
js
dec
enter
sbb
push
rorl
mov
fsubrl
xchg
mov
shrb
in
inc
mov
mov
popf
jne
in
idivb
push
in
and
push
mov
sub
in
mul
inc
adc
movsb
xchg
loopne
test
jno
ret
push
push
sbb
cmp
sbb
test
stos
andb
outsl
and
loop
jb
stc
out
loopne
pop
jo
adc
shlb
lds
fcoms
enter
fdivrp
jge
add
cmp
test
into
mov
cmpsb
push
xor
pop
add
in
test
adc
xor
add
dec
data16
rcrl
mov
or
arpl
mov
andb
test
mov
push
negb
loopne
inc
dec
out
xor
mov
push
popf
push
lcall
sbb
push
adc
imul
adc
sub
pusha
fisubrs
loope
test
xorl
jb
push
dec
stos
push
add
jl
sbb
mov
mov
call
repz
mov
orl
and
fnclex
fistpl
pop
popa
mov
ljmp
mov
mov
mov
rcr
pop
dec
testb
adc
cmpsl
add
mov
push
mov
cld
mov
ret
lret
out
rorb
mov
lock
pop
stos
cmp
rclb
inc
jb
andb
es
push
outsb
insl
in
fnstenv
test
or
inc
jge
popa
es
fdivrl
cmp
clc
enter
pop
setle
dec
add
jbe
xor
mov
aaa
inc
push
fstl
xchg
cmp
xchg
xor
shrl
dec
pop
in
mov
out
cltd
pushf
sti
xchg
jae
jg
push
sub
xor
and
xor
insb
xchg
mov
rcl
add
test
insl
cwtl
ja
mov
pop
inc
rorl
ds
jno
fwait
mov
test
ljmp
add
into
adc
xchg
hlt
push
bound
ret
in
jbe
xchg
nop
fildl
cmp
stos
inc
pop
xor
xchg
loop
mov
adcl
dec
cs
xchg
jne
push
push
xchg
daa
loop
jmp
push
adc
cmpsl
mov
out
lahf
ljmp
pop
mov
stos
les
and
sub
push
jnp
jo
jle
mov
dec
pusha
pop
dec
lahf
iret
xchg
test
ret
xor
inc
fsubrl
push
outsb
cmpsl
add
jo
mov
ss
fisubl
out
sbb
and
imul
ljmp
movsl
mov
mov
test
test
arpl
mov
or
out
xchg
and
rorl
or
xorb
sar
ret
pop
jp
rcr
mov
mov
jmp
sbb
adc
mov
mov
sub
push
push
test
jbe
lock
jge
outsl
dec
sbb
pop
mov
add
jecxz
test
aaa
jl
push
xor
mov
xor
adc
jmp
cld
xlat
add
push
xchg
out
sbb
fucomip
loopne
movsl
cli
mov
push
imul
sub
repnz
ds
and
and
dec
jo
int
pop
xorb
sbb
popf
lcall
das
pusha
add
pop
rcr
js
jmp
pop
ss
xchg
dec
mov
mov
push
outsb
lret
and
adc
inc
int
jg
aam
mov
dec
pusha
mov
mov
mov
push
aad
xor
test
sub
pushf
push
lret
pop
sbb
fimull
cwtl
fstps
in
cs
cmpb
outsl
add
and
popf
adc
call
cmpsl
mov
cmp
push
xlat
or
loopne
ret
cli
mov
mov
enter
ja
dec
or
arpl
cmc
daa
ret
repnz
sbb
and
adc
rcl
imul
pop
add
and
pop
es
lods
mov
xchg
mov
sub
je
xchg
scas
xchg
adc
mov
shl
sti
ja
in
gs
and
and
inc
pop
xchg
frndint
cmp
xor
imul
sbb
mov
and
call
sbb
mov
mov
jmp
and
cs
mov
aad
jge
nop
lcall
jb
or
je
push
add
sub
push
mov
and
stos
js
mov
push
into
mov
andw
fistl
lock
mov
das
xor
inc
and
mov
mov
sub
shrl
je
testb
popf
cwtl
pop
cwtl
adc
sbb
mov
cld
loope
fxch
push
mov
mov
jmp
test
leave
fcomi
shlb
inc
sub
jmp
ret
jb
frstor
fisubrs
dec
mov
xchg
mov
iret
and
mov
pusha
mov
xlat
mov
std
in
add
fcomps
les
fs
mov
push
mov
adc
clc
jl
cmp
sbb
ret
rol
mov
call
out
cld
and
push
xor
pushl
xorl
and
mov
je
dec
mov
scas
lret
ja
cmp
adc
loopne
push
xchg
mov
xchg
or
mov
popl
or
out
jo
shlb
push
pusha
jns
push
lock
sbbb
cmpb
push
push
pop
in
and
jp
shl
mov
test
mov
adc
dec
adc
mov
xor
int3
pop
xchg
cli
int3
movsl
jmp
and
cltd
xorl
or
sahf
or
cs
subb
stos
aaa
js
and
inc
in
insb
leave
xor
jle
jbe
in
or
pusha
hlt
xor
iret
hlt
scas
popa
ret
mov
sbb
xorl
inc
pop
popf
mov
out
lret
inc
test
mov
xchg
adc
fimull
ds
cmc
xor
adc
sub
mov
cld
mov
sbb
add
movsb
arpl
xchg
pop
nop
push
xchg
add
cs
in
add
push
int3
mov
inc
xor
push
addr16
jb
out
das
xchg
loop
mov
and
cmp
jno
jo
cmp
cltd
mov
jns
jge
push
sub
mov
adc
jno
sti
in
ja
mov
lret
stos
push
xor
imul
lahf
fmuls
stos
test
xor
adc
mov
lahf
js
mov
enter
pop
repnz
hlt
mov
loope
xchg
sub
fadds
bnd
movsl
stos
pop
insb
and
mov
sahf
sbb
fsubrl
dec
call
jno
add
fstps
jle
js
rorb
lcall
pop
fsubl
sub
leave
outsb
mov
jp
push
and
test
dec
mov
adc
mov
shll
sbb
fmuls
ljmp
sub
mull
inc
lret
mov
mov
aas
mov
mov
push
test
adcb
dec
loop
icebp
sahf
stc
push
inc
push
fs
dec
adc
jae
and
repnz
xchg
and
fbld
cli
jecxz
test
cmp
fisubl
dec
maskmovq
cmpb
cmc
out
inc
sub
and
jno
inc
pop
movhlps
aad
imul
jecxz
jle
xor
dec
les
pushl
adc
icebp
mov
mov
jle
xor
adcb
lcall
loopne
or
and
fnstenv
and
mov
cmp
mov
sbb
leave
pop
jl
addr16
lods
pop
mov
sbb
loop
repz
das
mov
cmpsl
xor
nop
jne
int3
aas
or
jb
div
dec
cltd
test
jecxz
or
mov
gs
call
jno
rorb
test
dec
mov
sbb
inc
enter
or
mov
jmp
cmp
js
mov
mov
pop
jp
dec
not
test
cwtl
sbb
or
mov
mov
inc
cld
or
and
mov
cmpl
call
pop
push
push
sbb
aam
mov
push
es
scas
lods
insl
mov
addr16
xchg
adc
leave
popa
push
or
mov
adcl
das
test
mov
pop
xchg
adc
nop
movsl
cltd
mov
pushf
lcall
adcb
and
dec
faddl
mov
data16
pop
cmp
lahf
stos
sbb
out
pop
lahf
cmp
add
jnp
or
notrack
sub
xor
jmp
movsb
xor
pop
frstor
flds
cmp
rcll
mov
lcall
or
jno
fwait
in
sbb
push
xor
cmp
add
add
dec
or
ficoml
push
in
fisttps
jb,pn
mov
pop
loope
sub
add
sub
jp
je
mov
lods
xchg
into
sub
inc
cltd
jne
imul
xor
xchg
int
lods
jmp
jmp
push
add
iret
out
ljmp
jge
clc
push
xorl
in
cmp
xor
add
scas
push
jle
daa
sbb
rcr
add
sub
add
hlt
jmp
cmp
loop
mov
push
lret
popf
in
call
inc
daa
lret
fimull
pop
and
test
jmp
testl
sub
jecxz
mov
dec
mov
loope
dec
add
arpl
hlt
addr16
in
aaa
aaa
push
inc
mov
add
in
pop
fdivrs
fdivrp
and
stc
clc
rol
adc
scas
add
pop
mov
movsb
sti
lret
sbb
jbe
jbe
jge
sbb
sbb
cltd
daa
ljmp
cmp
sub
jl
in
dec
jge
pop
push
ljmp
xabort
lahf
divl
push
mov
push
aas
push
mov
inc
leave
ret
and
enter
pop
xor
push
pop
jae
pop
xchg
enter
sti
cmp
jle
adc
add
or
cltd
or
add
adc
mov
sbb
pop
lar
js
outsb
and
lcall
mov
sub
lock
sbb
adc
stc
mov
jg
and
push
js
mov
lret
jecxz
dec
push
fistpl
int
mov
sub
aam
lret
test
dec
insb
push
mov
sahf
sahf
add
jo
sti
aaa
dec
xorb
lods
loop
jg
stc
or
daa
decb
xchg
gs
push
fadds
dec
cli
push
lret
jbe
loope
int
mov
into
gs
mov
xor
pop
pop
inc
fcoml
mov
xor
jp
adc
lcall
arpl
sti
lods
mov
mov
bound
xlat
and
sub
mov
jmp
cli
sbb
mov
shl
pop
xchg
adc
inc
jle
dec
fldcw
outsl
negl
repz
in
xor
aad
pop
sbb
add
int3
out
push
gs
lret
adc
nop
aaa
pushf
fisubrl
sub
outsb
in
adc
or
nop
push
or
aas
stos
mov
mov
adc
bnd
jecxz
pop
movsl
mov
push
xchg
sbb
bound
lahf
xor
outsl
sub
push
inc
cmp
jp
das
push
or
mov
pop
cmp
inc
in
ror
jo
notb
xchg
pusha
cwtl
shr
jbe
das
cmp
icebp
mov
pop
cld
aaa
cmovle
xor
popa
mov
jecxz
xchg
inc
pop
pop
sub
in
sub
sub
ret
nop
cltd
arpl
in
subb
sbb
jle
xchg
push
popa
xchg
ljmp
in
lods
movsb
popf
add
mov
jl
and
mov
inc
les
mov
insb
stos
test
test
fwait
test
push
es
jg
repnz
xchg
ret
push
sbb
stos
shrl
mov
stos
or
out
ret
xchg
dec
xor
push
out
sbb
jb
cltd
xor
out
push
call
stos
mov
fmull
fwait
dec
xchg
jmp
loopne
lret
hlt
dec
not
dec
inc
xchg
inc
icebp
or
cs
sbb
push
shr
int3
add
aas
ja
out
cs
adc
jns
add
in
xchg
jg
jge
xchg
iret
push
mov
addr16
aam
jp
int3
mov
mov
lock
nop
dec
xlat
push
insl
jne
andb
stos
lret
out
pushf
jo
mov
xchg
bound
jae
out
cmp
scas
or
mov
stos
sbb
push
insb
lahf
cmc
push
jle
int3
or
pusha
sub
ret
or
mov
inc
std
arpl
jae
inc
dec
push
mov
mov
and
inc
cmpsb
pop
aaa
fidivrl
int3
push
sbb
shll
scas
mov
stos
inc
adc
js
repnz
mov
hlt
xchg
mov
arpl
incl
or
pop
enter
sub
adc
sub
pushf
xchg
xor
pop
pop
jl
ficomps
mov
test
jb
lds
mov
shll
fisubrl
aaa
call
stc
sbb
and
cmp
add
dec
in
mov
push
jo
test
jo
rcrl
push
pusha
icebp
push
jne
sbb
leave
jmp
inc
cmpsb
movsl
in
sub
xchg
outsl
dec
enter
pop
jo
adc
jecxz
loope
subl
cmp
mov
mov
subb
add
mov
push
xchg
xor
imul
data16
fcomps
lcall
sub
or
hlt
andl
jg
dec
jns
pop
jg
mov
inc
xorb
cmp
ficomps
add
push
cmp
lret
sub
loope
mov
sbb
pop
cmpsb
sahf
movsb
sbb
test
les
loop
inc
jge
ret
fs
loopne
movsl
aad
ss
mov
aas
leave
jl
frstor
cli
dec
jnp
xor
loope
clc
xor
sub
inc
cmc
jl
cmp
fdivrs
jle
jbe
mov
imul
pop
add
xor
outsl
das
pop
mov
test
xlat
pop
sub
jmp
push
in
push
or
loopne
sbb
scas
cli
loopne
sub
dec
bound
mov
mov
xchg
add
repz
sub
cwtl
rclb
jle
aas
je
gs
pop
sbb
adc
cmpsl
out
pop
clc
out
insl
or
aad
xor
aas
dec
psraw
push
mov
jecxz
hlt
inc
mov
dec
xchg
sbb
jo
out
ror
mov
ficoml
fistpl
inc
scas
inc
les
inc
jae
cltd
das
ss
cld
mov
adc
stos
and
push
lods
rcrl
push
adc
pop
mov
mov
cmpsl
std
shrb
mov
or
bound
cld
bound
adc
popa
mov
mov
jecxz
lock
xchg
movsl
sub
sbb
scas
and
ret
pop
mov
popa
insl
mov
or
adc
jb
and
lods
unpckhps
insb
cmp
mov
cmp
fdivl
add
inc
stos
test
sar
push
dec
push
jmp
repnz
mov
xchg
dec
push
rol
pop
pop
pop
nop
imul
and
push
ret
call
cmp
shll
test
andb
add
dec
out
and
pop
jmp
ja
sbb
sub
shlb
jbe
add
pop
xlat
out
or
xchg
jmp
sahf
iret
sahf
in
cwtl
in
int3
sbb
mov
sbb
pop
loopne
arpl
lds
or
xor
popa
jne
sti
iret
mov
mov
fisttps
lds
xchg
sub
fs
add
mov
push
call
stos
nop
inc
xchg
push
cld
sbb
call
in
cmpsl
outsl
pusha
lds
iret
adc
ret
inc
pop
mov
cmc
sbb
mov
les
pop
pop
add
jo
fidivl
jbe
cmp
sbb
mov
imul
dec
scas
push
jns
push
rcl
adc
xlat
repnz
gs
ret
hlt
loop
push
arpl
cmp
inc
sub
or
fisubrl
stos
or
faddl
int3
jg
icebp
pop
ss
ds
lahf
lds
loopne
rolb
insl
and
sub
movsb
adc
lcall
int
jge
push
lret
sbb
cmc
nop
daa
std
mov
cmp
sub
cli
sarb
cltd
dec
pop
adc
hlt
jl
mov
in
jl
mov
dec
out
inc
test
xchg
jb
inc
out
xchg
cmpsb
sub
sbb
xchg
push
xchg
scas
fbld
push
pop
jb
lea
cmp
ds
and
movsl
rolb
cmpb
iret
add
sahf
mov
dec
lcall
lret
data16
in
ljmp
jmp
fsubl
les
icebp
jmp
adc
scas
cwtl
fstpt
jnp
mov
stc
test
inc
lods
int3
mov
pop
movsb
and
mov
push
int
dec
sub
negl
test
scas
mov
stc
sbb
push
sahf
inc
cs
rcrl
outsl
jge
adc
dec
ss
jns
fs
and
hlt
insb
lock
je
lret
fdivr
inc
and
fsubrl
das
xor
and
xchg
rorl
test
push
cmc
inc
push
out
xor
jo
pop
popf
and
adc
mov
adc
subl
push
fstl
mov
xor
sahf
icebp
sub
add
mov
or
xor
stc
aaa
loopne
xlat
dec
dec
shll
movsb
push
add
fdivs
lret
rep
test
xchg
pop
icebp
fistps
jp
in
inc
pop
lret
push
xchg
adc
mov
xchg
jmp
enter
fs
mov
nop
push
and
jb
lock
sbb
jecxz
ror
mov
test
xchg
mov
mov
pop
lds
mov
mov
pop
nop
sbb
dec
cmp
das
adc
addl
pushf
or
addr16
negb
scas
lahf
cwtl
dec
xchg
dec
cmpsl
cld
stc
cmpsl
mov
cmp
cld
or
mov
mov
test
adc
inc
mov
shlb
stos
js
jns
jnp
scas
push
aaa
es
dec
vpmacsdql
mov
xchg
inc
popa
cltd
mov
jp
btc
xlat
inc
mov
inc
les
mov
jns
imul
std
outsl
cltd
inc
shl
lock
xorb
popl
jo
stos
clc
push
scas
jbe
fcoms
rcrl
inc
pop
cmp
stos
call
leave
rclb
popf
push
into
xor
jp
cld
shl
mov
cmp
dec
push
fisubrs
xorb
aas
dec
fnsave
inc
les
or
fcompl
sbb
add
jne
mov
bound
inc
push
in
repnz
mov
push
pop
fdivs
add
xchg
pop
mov
cld
sarb
push
lcall
fisubl
fildll
mov
xchg
dec
xor
xorl
out
inc
sub
outsb
aam
ds
inc
stos
add
and
and
jne
jnp
int3
add
repz
in
loope
pusha
xchg
test
adcl
inc
adc
push
jae
inc
jno
cmp
adcb
dec
fldl
or
xchg
xchg
sbb
sbb
push
loop
or
mov
je
mov
mov
pop
imul
bound
hlt
sub
mov
inc
inc
mul
or
push
and
mov
sbb
cli
hlt
push
add
pop
aad
push
dec
pop
les
loope
lret
imul
scas
add
inc
and
mov
push
movntps
mov
lds
sbb
sahf
sub
adc
jno
xchg
ss
jp
dec
lret
push
ss
jns
jo
ret
test
sbb
dec
test
pop
dec
hlt
inc
jbe
pop
cmpsb
stos
test
jb
mov
pop
out
fcomps
loope
lret
cmp
mov
cmp
scas
fwait
jle,pt
mov
daa
outsb
orb
xchg
fs
cmp
add
fsubr
xor
add
scas
pop
test
fstpt
rcll
sbb
lcall
imul
mov
sub
mov
outsb
mov
dec
pushf
rorb
scas
mov
mov
movsb
int3
and
or
push
in
jnp
mov
sub
cs
mov
mov
xor
xchg
add
sahf
ljmp
addb
arpl
fsubr
loop
pop
cmp
jbe
fs
lahf
cltd
adc
mov
cmp
mov
pop
out
jne
cli
scas
stc
xor
sti
xchg
sbb
ja
or
mov
cmc
or
add
mov
pop
mov
icebp
stos
imul
mov
data16
imul
jmp
xlat
fisttpll
js
or
in
sub
es
gs
cwtl
xor
inc
mov
push
sub
sbb
repz
add
out
xchg
xor
arpl
or
ds
fistl
fucomi
cmp
xor
xchg
loope
pop
aas
mov
push
jb
stos
mov
jne
lock
xchg
jge
jae
es
sub
adc
inc
mov
mov
adcl
sarb
xor
nop
inc
shlb
inc
test
shll
mov
jle
add
shll
ds
cli
xchg
and
cmpsl
sti
movsb
out
sbb
sti
icebp
adc
add
sub
add
lock
rolb
js
inc
fnsave
es
inc
or
mov
mov
or
test
daa
lods
in
mov
mov
dec
dec
adc
psubusb
add
cli
leave
cltd
jge
hlt
test
xor
mov
cmp
fstl
gs
mov
in
pop
out
xchg
stos
xlat
xchg
xchg
sbb
pop
cmp
xor
pop
or
outsb
xor
sub
mov
in
fisttps
mov
test
mov
rorl
aad
inc
pop
mov
push
fwait
test
mov
mov
push
add
imul
es
xchg
in
mov
imul
add
xchg
or
addr16
in
sbb
mov
mov
mov
cmp
xor
adc
dec
repz
sbb
jmp
pop
int3
push
addl
mul
sub
insl
adc
imul
subb
mov
insb
loopne
sbb
xchg
pop
lea
je
in
add
mov
ret
mov
sub
loope
push
adc
jae
daa
cmp
add
popf
sbb
xchg
inc
and
sub
xor
push
imul
es
dec
dec
in
adc
mov
repnz
mov
clc
hlt
js
push
arpl
jns
inc
inc
xor
or
shrb
aaa
dec
pop
pop
or
sarl
push
test
pop
xchg
push
rcr
test
pop
shlb
clc
and
imul
movsb
daa
loop
push
pop
mov
stc
jge
sbb
bound
daa
sti
or
mov
mov
jl
sub
push
sbb
out
inc
int
jo
lahf
jae
aas
push
out
mov
test
sub
mov
dec
cmp
enter
pop
sub
mov
loope
es
sub
mov
lds
mov
xchg
pop
and
jge
popl
push
leave
and
inc
sbb
scas
lods
add
in
xor
sti
xchg
rcrb
mov
pop
jecxz
adc
lahf
xchg
stc
fdivrl
repz
jbe
adc
gs
jg
out
mov
mov
mov
inc
mov
pop
popf
mov
out
insb
int
xchg
pop
sub
jae
lret
or
cmpsb
adc
mov
in
cltd
sbb
call
test
cli
into
sbbb
sub
outsl
mov
pop
fs
sti
adc
test
jo
shl
fcmovb
cmpsb
cli
loop
outsb
xor
pop
das
cmp
xor
or
imul
shll
inc
pop
fisttpl
jb
add
imull
fsts
lret
outsl
ror
lods
and
push
xlat
sbb
pushf
sub
jg
mov
xchg
mov
in
xor
decb
sbb
mov
inc
dec
jg
mov
lret
flds
sbb
and
mov
inc
je
xchg
loope
jae
adc
icebp
insb
loop
and
xor
stos
pushf
xchg
jo
sub
aad
imul
daa
insl
mov
lcall
push
inc
das
jecxz
push
inc
mov
arpl
xchg
mov
repz
mov
mov
dec
dec
out
sbb
sub
pop
cwtl
pop
inc
pop
adc
les
das
shll
hlt
movsb
jno
xor
mov
adc
std
mov
mov
cmpsl
cli
rcrl
mov
out
xor
lret
lock
mov
std
sbb
fildll
rclb
xchg
sub
ljmp
int3
mov
lock
test
push
ljmp
mov
mov
xor
cld
mov
aaa
xor
cltd
mov
push
test
insl
mov
xlat
push
mov
fnstsw
popf
cli
xchg
test
push
ror
push
mov
stos
rolb
out
dec
push
test
push
ficompl
out
mov
test
ljmp
mov
call
lcall
jl
xor
jmp
dec
or
outsb
push
fwait
xlat
inc
mov
add
stos
outsl
sbb
stos
or
mov
in
mov
add
imul
pop
dec
test
jp
xor
mov
lods
or
fnsave
ret
test
push
pop
xchg
in
xchg
lahf
jmp
loop
mov
mov
popf
sub
fs
push
mov
push
and
cmp
jnp
mov
jle
jmp
insl
pusha
xchg
jl,pt
cs
ret
dec
pop
bound
fs
push
movlhps
inc
popf
test
fdivrl
mov
stos
ret
xchg
inc
idivb
imul
inc
push
xchg
lahf
mov
mov
out
in
leave
daa
popf
imul
sti
mulb
orb
push
push
or
jno
loopne
in
add
test
xor
sbb
fisubs
push
in
lds
mov
and
in
movsb
mov
jo
lods
mov
inc
xor
sub
sbb
cld
xchg
jmp
cmp
jl
push
sbb
cmp
push
cld
sub
xor
lea
lahf
xchg
xor
push
shll
sahf
inc
aam
cmc
add
inc
xchg
jecxz
cmpsb
mov
shr
xor
and
push
or
loope
movsl
mov
cmp
mov
movsl
aad
jns
pop
mov
aas
cmp
sbb
push
lds
xor
or
push
js
xor
pop
bound
lret
sbb
or
outsb
subb
rolb
lock
and
mov
pushl
je
push
ljmp
sub
shlb
cmp
lock
fistpl
out
mov
jle
sahf
movsb
mov
cmp
lock
sbb
mov
add
stc
sahf
out
fs
notl
loope
and
mov
pop
cmp
sub
out
xchg
and
adc
dec
fdivrs
mov
call
cmc
cwtl
jl
xor
pop
cli
or
imul
cmp
fsubrs
out
or
jmp
loope
add
pop
dec
sub
mov
in
add
sti
pushf
call
inc
divl
shl
arpl
dec
fisubs
fnstcw
add
xlat
repz
ljmp
pshufw
cltd
ffree
popa
out
pop
in
add
in
or
xor
add
sbb
dec
cs
sub
aad
out
sbb
jmp
loope
arpl
je
dec
jnp
xchg
cld
sbb
lret
lea
xor
or
pusha
mov
add
push
add
pop
mov
pop
jns
testl
leave
test
mov
scas
mov
in
rorl
clc
and
rcll
mulb
std
dec
or
cwtl
jp
lock
stc
xchg
mov
mov
xchg
or
movsb
mov
push
xorb
loope
pop
mov
into
ljmp
sbb
pop
aam
out
ret
pop
in
es
sub
cmp
xchg
mov
stc
popa
ficoms
lods
mov
inc
lret
mov
pop
mov
sbb
setbe
stos
add
xchg
mov
test
stc
mov
push
cmc
mov
fucom
ds
sbb
xchg
cmpsb
dec
shll
out
sub
stos
mov
cmpsl
out
mov
out
xchg
stos
fbstp
decl
pushl
or
adc
push
shll
jmp
inc
dec
mov
ja,pn
iret
push
dec
mov
mov
or
push
xchg
add
add
pop
sbb
mov
add
push
in
cli
and
mov
and
adc
cmp
or
addr16
nop
adc
or
mov
nop
mov
sbb
xlat
dec
inc
in
jne
into
insl
mov
and
xchg
mov
daa
jnp
lods
lcall
pop
push
pop
out
stos
cs
pop
sub
push
sti
into
iret
stos
pop
mov
mov
cmpl
ret
push
fsub
cli
repz
xor
jo
data16
pop
cltd
mov
mov
push
xchg
mov
dec
arpl
ljmp
xchg
sbb
imul
push
push
fstl
adc
dec
insl
repnz
and
leave
sahf
xor
hlt
push
sub
arpl
lret
dec
or
or
sti
pop
aaa
lret
cmpb
sub
jecxz
lret
lds
pop
dec
shr
shrl
es
cmp
movsb
cmp
mov
jge
jne
sbb
or
daa
stc
jno
cmp
int3
jno
inc
int3
jl
subb
fbstp
xor
call
jae
push
xchg
inc
test
rcr
inc
and
ret
loopne
enter
pop
stos
push
adc
sub
dec
jl
add
ds
pop
movsl
fdivl
push
pop
fidivl
or
adc
xchg
add
jle
xor
jno
pop
stc
enter
inc
sbb
lcall
xor
adc
dec
sub
fdivrl
dec
adc
rcrb
movsb
cmpb
cld
mov
ljmp
shll
cmp
lahf
scas
int
jbe
sub
fisubl
das
stc
pushf
rcl
xor
push
mov
sbb
inc
rcrb
mov
adcb
outsl
stc
jle
xchg
adc
stc
push
xchg
fs
movsl
cmp
xor
ss
pop
cmp
out
inc
out
jmp
cli
dec
jge
xor
push
cmpsb
or
push
into
mov
pop
cmc
pop
mov
loop
sbb
adc
les
adc
inc
inc
add
jmp
add
lods
bnd
mov
mov
xlat
lcall
mov
imul
sti
dec
fs
mov
ret
loopne
push
jg
cmp
push
push
mov
sbb
cmp
sbb
arpl
fs
loopne
xchg
pop
xchg
enter
mov
inc
jmp
mov
cs
push
jg
add
adc
jb
inc
aas
gs
jb
adc
xorb
jecxz
call
pop
lea
sub
mov
pushf
in
int3
cmc
scas
sbbl
fisttpl
call
xor
dec
mov
mov
mov
cli
push
shll
mov
std
out
cltd
nop
cwtl
xor
mov
nop
icebp
xchg
xchg
mov
lret
into
pop
ljmp
test
lock
sub
pop
shll
lret
jb
adc
sub
ljmp
insl
or
jp
jnp
dec
xchg
lret
ljmp
mov
mov
js
or
inc
fdivr
pmaddwd
mov
test
push
mov
dec
ljmp
mov
clc
push
lret
and
sarl
test
out
pop
stos
movsb
scas
mov
adc
mov
push
or
xor
mov
fsubs
sbb
jae
mov
out
lods
loop
icebp
pop
xor
cli
xchg
dec
test
jg
or
push
pushf
fwait
xor
les
loope
inc
out
push
push
jns
imul
push
pop
inc
mov
cs
mov
les
jp
fwait
repnz
mov
mov
mov
dec
sub
cmp
fildll
jae
jmp
js
mov
out
mov
sub
pop
pop
mov
cmp
ret
pop
test
fildl
insb
and
dec
jle
scas
icebp
in
subl
in
xchg
or
jns
cmp
push
pop
inc
aas
mov
jae
jno
push
dec
push
test
mov
sbbl
xor
bound
and
int3
adc
jns
mov
xchg
xchg
pop
leave
adc
lods
dec
arpl
pop
jle
dec
cmpsb
push
push
mov
or
pusha
je
mov
push
lods
xchg
pop
and
mov
stos
ja
rolb
push
scas
sbbb
in
nop
cmp
xchg
xor
cld
mov
jge
ja
sbb
push
cmp
cmp
jb
jl
sbbb
ret
xor
inc
xchg
adc
addr16
out
test
mov
pop
inc
mov
add
in
decl
and
js
mov
push
aam
loope
adc
cmp
popf
sbb
xchg
and
and
lcall
frstor
xor
jo
sbb
pop
and
inc
pop
pusha
sub
jge
and
lcall
pushf
rolb
xchg
enter
cwtl
push
jg
movsl
jecxz
or
mov
or
push
lock
int
cmp
sub
xchg
shl
pop
aam
lret
inc
shrl
mov
push
mov
dec
mov
sahf
jbe
xor
outsb
insl
stos
outsl
fdivs
loop
push
cmc
stc
or
mov
lret
stc
jp
jg
out
cmp
pop
cmp
mov
lds
xor
mov
or
cli
lret
into
lcall
xor
pop
dec
pop
cmp
arpl
jl
in
sub
pop
adc
add
data16
sub
xlat
jo
xlat
fstps
sub
scas
sub
jge
sti
cli
mov
cli
gs
bound
dec
pushf
mov
jmp
dec
les
repz
lods
xchg
sub
scas
cmp
cmp
pop
dec
push
lcall
push
jecxz
mov
and
movsl
aas
add
pop
jb
mov
xorb
jecxz
sbb
lea
imul
mov
mov
mov
cmp
or
pop
fstpt
jge
inc
out
dec
push
inc
adc
outsl
and
lods
pop
les
push
and
shl
inc
pop
imul
adc
xchg
push
jb
lock
cmc
cmpsl
idivl
mov
insb
aam
fs
push
lret
cmp
xlat
or
lock
rcl
std
sbb
aam
inc
xchg
jns
push
es
inc
insl
repz
dec
call
ljmp
adc
bound
mov
addr16
jns
loopne
mov
add
mull
test
or
std
push
jnp
push
fnsave
mov
imul
mov
ror
nop
lahf
pop
xchg
sbb
ja
into
xchg
cmp
push
in
mov
xor
xchg
xor
xor
mov
dec
pop
adc
test
add
pushf
pop
iret
inc
mov
jno
addr16
inc
fwait
divb
dec
sub
add
mov
mov
jns
pfcmpge
mov
lret
scas
push
pop
jg
scas
addr16
inc
cmp
ficoms
mov
stc
leave
push
dec
or
cmp
adc
daa
rolb
repz
gs
jmp
inc
sbbl
cmp
ss
sub
push
cmpsl
pusha
push
jns
shrl
repnz
sarb
dec
mov
les
or
or
pusha
shlb
dec
loope
ret
in
pop
pop
mov
inc
dec
aas
icebp
jae
addr16
push
or
fcompl
mov
mov
mov
sbb
pusha
add
dec
cmp
push
imul
adc
push
sub
out
jle
mov
hlt
movsb
sbbb
aaa
sub
or
mov
mov
or
mov
int3
add
ficoms
movsb
imul
and
es
pop
pop
and
xor
movsb
push
cmp
lcall
jge
pop
adc
daa
mul
lret
cmp
ret
mov
cwtl
dec
cmc
dec
jp
movsl
icebp
or
pop
and
jo
sti
dec
lahf
out
std
notb
stos
daa
test
push
mov
inc
inc
daa
inc
cmpsb
cmp
adc
out
ror
jae
nop
pop
sub
push
inc
pop
loope
sti
sub
sub
cmp
mov
movsl
ljmp
popl
xchg
sub
cmc
fbstp
lods
out
xor
scas
fcoml
js
xor
pop
fbstp
push
push
sti
jl
cmp
mov
shrl
adc
fucom
not
shll
jmp
mov
lods
push
mov
cmc
jl
pop
xchg
mov
repz
mov
or
jnp
inc
negl
push
cmp
adc
stc
sbb
xchg
adc
xor
lds
mov
mov
mov
fistpll
mov
icebp
ss
xchg
pop
cmp
out
and
scas
add
cs
lahf
cmp
pop
orl
jge
xor
in
pop
cmp
push
enter
sbb
adc
subb
pop
adc
sbb
test
aaa
data16
lods
lods
shlb
sbb
sub
enter
arpl
in
inc
int3
test
inc
out
or
call
dec
sti
or
inc
push
dec
sbb
and
mov
dec
ret
cmp
jg
xchg
xchg
in
cltd
rcrb
faddl
ja
fisubs
pop
pop
std
mov
pop
pushf
xor
into
and
adcl
adc
dec
enter
dec
dec
fucom
mov
push
cli
lea
loope
mov
push
add
mov
mov
negl
test
inc
jne
aaa
inc
xor
into
mov
adc
and
mov
jae
sub
addr16
cwtl
stos
insl
andl
mov
icebp
inc
cmp
rclb
lret
lods
inc
pusha
mov
jg
lock
imulb
shlb
sbb
ret
or
andb
sub
insl
fcmovbe
je
jno
adc
cmp
fldcw
xchg
pop
mov
outsb
rolb
btr
add
clc
mov
test
xchg
jecxz
adc
ds
fstpl
data16
lret
xchg
iret
sbb
shll
cwtl
sbbb
stos
sbbb
adcb
ljmp
adc
push
enter
stos
lret
dec
ret
mov
hlt
sub
mov
or
ja
addb
dec
pop
out
xor
jmp
push
add
pop
test
out
es
and
in
test
cmc
mov
mov
pop
cmp
addr16
fs
jp
aad
mov
addr16
push
adc
inc
dec
mov
inc
vcvtpd2dqy
xchg
cmp
adc
outsl
icebp
out
sub
sub
push
ret
jge
mov
sbb
and
stos
sbb
leave
jnp
mov
jle
inc
push
in
pushaw
add
faddp
lahf
pop
add
lods
bound
fs
mov
mov
mov
sahf
outsl
ficoml
sbb
mov
xor
pop
cltd
cmc
scas
ror
daa
push
mov
jno
xchg
xchg
sarl
cmp
aaa
leave
add
or
out
lods
icebp
arpl
in
push
ss
sub
or
lods
dec
imul
cld
pop
int3
in
jle
pop
jg
adc
mov
lcall
out
ds
push
movsb
ficomps
push
jmp
ret
adc
sbb
lock
daa
imul
cmc
cmp
cmp
jl
decl
fs
push
mov
xor
stc
jne
lahf
push
dec
xchg
push
or
mov
rolb
lahf
cmpsb
mov
push
mov
outsb
mov
subl
shl
or
or
lods
jns
icebp
xchg
jge
leave
notl
loop
jbe
inc
sub
sbb
faddl
sbb
sti
leave
not
lahf
push
in
pop
outsb
mov
js
add
pop
pop
enter
push
iret
push
push
test
dec
sub
outsb
or
loopne
and
fwait
shrb
pushl
adcl
push
mul
fcmove
bnd
sub
movsl
adc
xlat
push
je
or
xor
cltd
mov
or
sbb
outsb
cmp
movsb
inc
adc
xlat
lods
loop
popf
data16
jp
push
fs
mov
rorb
cmp
pop
mov
leave
cli
loope
lahf
xor
cmp
into
pusha
in
cmc
mov
mov
mov
mov
adc
xor
sbb
adcl
add
fisubs
scas
mov
cmpsl
mov
mov
test
xlat
push
std
fldcw
outsl
mov
lods
out
in
pop
outsl
pop
clc
add
loopne
mov
jb
sub
push
fstps
inc
les
std
repz
xchg
xchg
mov
stos
sbb
pop
popa
pop
cltd
aam
mov
adcl
xor
jmp
test
rclb
inc
add
jb
push
push
dec
aas
loopne
je
mov
dec
inc
cli
in
xchg
popa
call
out
fimuls
pop
iret
cmpsl
dec
loop
pop
fistl
push
inc
pop
add
or
inc
dec
sub
cs
mov
enter
and
rcll
ss
in
jno
xchg
lods
cmpsl
cmc
jp
mov
sbb
gs
mov
or
jns
and
lock
jp
pop
push
rclb
jbe
fsubrl
idivb
scas
ret
xchg
dec
inc
es
int3
insl
shll
xchg
sbb
incl
mov
loope
clc
and
push
cltd
aam
adc
add
icebp
cltd
push
mov
mov
enter
loopne
fldl
arpl
xchg
inc
adc
jge
rcrl
stos
jno
sub
xchg
movl
decl
subb
enter
push
xor
mov
mov
negl
mov
es
pop
test
cmpsl
aas
ja
decl
inc
in
push
or
and
ret
push
mov
bound
xor
jle
cwtl
shrl
push
inc
xchg
in
pushf
jl
inc
push
pop
mov
or
pop
cmc
cmp
jp
add
jo
imul
inc
dec
shlb
mov
into
jbe
add
dec
sbb
adc
lds
aas
xchg
mov
sbb
lret
or
mov
stos
sub
out
and
adc
mov
jle
jg
in
xorb
popf
inc
loope
or
mov
jne
daa
inc
pusha
dec
sahf
jae
push
in
xchg
rcrb
xor
lods
inc
sbb
mov
sbb
nop
jns
dec
cmpsl
jnp
ss
push
stc
sbb
mov
lea
jp
jp
sbb
cmp
jbe
push
lcall
mov
lea
sti
ja
lahf
push
push
int3
xlat
and
push
ficoms
je
aas
sbb
rcrb
scas
sbb
adc
and
mov
push
cmp
jge,pt
xlat
les
daa
cmc
insl
mov
jno
shrl
jl
jnp
dec
rcl
push
push
imul
xor
push
add
lahf
sub
test
in
mov
inc
pop
test
cmpsb
inc
add
sub
imul
sbb
dec
xor
inc
cmp
icebp
cmp
js
clc
and
mov
adcb
sbb
push
add
sahf
fdivs
lret
bound
xor
push
inc
lcall
push
fdivrl
jno
outsb
outsl
sbb
imul
jg
mov
mov
sbb
mov
and
in
aaa
and
int
stc
xor
int
in
sub
in
xchg
fldenv
lret
fadd
xor
mov
pop
sbb
testb
inc
aad
cmpb
int
loope
adc
fs
out
in
adc
add
ret
xlat
imul
imul
adc
sub
fmull
or
cmc
repz
inc
andl
xchg
xor
adc
jb
imul
inc
sbb
mov
shlb
mov
enter
xchg
xor
loop
mov
stos
aaa
sub
in
sti
pop
sti
dec
sbb
movsb
loopne
or
dec
mov
dec
ret
fsts
and
sub
sbb
push
mov
fmull
dec
adc
and
cs
and
loope
mov
dec
mov
push
je
dec
adc
faddl
fptan
mov
push
jl
call
cmpsb
pop
sub
cwtl
cmp
int
cli
fildl
jns
test
iret
inc
addl
or
or
call
sub
scas
cwtl
not
fisttps
divb
les
and
cmpsl
hlt
rorl
icebp
push
cld
in
std
lret
mov
add
add
xchg
pop
cmp
lret
push
sub
or
aam
cmp
ret
roll
insl
test
push
dec
xor
xchg
cmp
push
fdivrl
push
les
mov
add
mov
mov
jno
dec
add
mov
test
fidivs
les
adc
cli
ficomps
jo
in
rcl
adc
pop
xchg
cmp
stos
pusha
lcall
push
push
cmp
punpckhwd
test
mov
or
mov
cli
sub
lea
jne
testb
inc
jl
push
or
es
fwait
icebp
mov
add
dec
mov
fsubs
icebp
into
jns
jo
xor
inc
mov
out
mov
mov
sub
push
xor
loopne,pn
mov
stos
ljmp
push
dec
mov
xorl
cmp
and
or
or
jbe
ljmp
sub
inc
mov
push
add
stos
fwait
lods
fsubl
aaa
mov
ret
jnp
lret
sub
popf
shll
sbb
iret
push
nop
sub
xchg
nop
inc
imul
jae
loopne
push
push
mov
pushf
pop
add
mov
in
repnz
in
imul
scas
cltd
sarb
inc
sub
dec
add
mov
insb
repnz
ja
icebp
lods
popa
hlt
test
pop
arpl
inc
pop
xchg
loope
pop
out
push
xchg
clc
or
std
mov
ret
pop
fldl
daa
daa
shlb
scas
cld
sub
xor
iret
movsb
hlt
stos
lds
or
mov
sbb
mov
cmp
test
jnp
test
push
dec
dec
push
xor
scas
cmpsb
aas
lahf
dec
jmp
push
mov
xchg
test
mov
inc
inc
out
into
data16
ret
mov
mov
fs
pop
out
xchg
push
fisubl
pop
xchg
sti
sub
xor
ds
lea
and
sbb
mov
decb
add
js
xor
xor
pop
mov
bound
pop
pop
ja
lcall
push
fsubrl
in
pop
xor
outsb
rorb
loop
mov
repz
fnstsw
fistl
mov
push
mov
movsb
mov
scas
xchg
and
cli
add
sarb
sub
or
push
jecxz
lret
aas
rol
mov
popf
sbb
sbb
dec
mov
add
pop
test
xlat
lods
sbb
mov
loop
cld
cld
stc
call
xchg
icebp
adc
roll
test
out
push
pop
cli
inc
adc
rorb
cmpsb
jo
or
jo
adc
inc
lds
data16
dec
lds
enter
push
jne
adc
push
repnz
jnp
data16
ljmp
ret
xor
xlat
aad
fisubrs
push
and
mov
subb
ds
sub
xor
add
adc
fld
repz
les
mov
in
sbb
sbb
lea
cli
pop
push
out
pop
adc
in
pushf
xor
test
cs
jbe
aad
inc
ficoml
subb
jb
lcall
inc
insb
jecxz
cmpb
push
push
lea
push
mov
dec
fmull
dec
hlt
je
mov
mov
inc
inc
or
inc
xor
mov
ss
and
adc
imulb
cmpsb
std
xor
lods
cwtl
fsubl
fwait
mov
enter
adc
in
mov
push
dec
mov
xor
lock
mov
icebp
rcrb
mov
pushf
jecxz
ret
mov
inc
test
orb
xchg
xchg
add
inc
inc
popa
push
dec
cmp
inc
int
mov
sbbl
shr
and
je
sub
test
jge
subb
xchg
imul
fwait
aad
sbb
movl
stos
dec
aas
mov
xchg
push
leave
pop
push
push
pop
mov
xor
fs
or
lock
subb
cwtl
xchg
test
inc
test
sahf
cmp
fldcw
inc
adc
inc
or
add
and
push
aam
cld
add
push
ljmp
les
hlt
in
in
xchg
loop
sub
mov
imul
jp
repz
adcl
ret
mov
sti
dec
cwtl
aam
jne
inc
sbb
inc
xor
xchg
mov
mov
add
mov
out
mov
inc
or
push
jne
jmp
and
sbb
es
jl
jle
int
in
push
scas
pusha
roll
iret
movl
pop
jecxz
push
inc
jbe
sub
out
push
sbb
popf
mov
das
sub
cltd
nop
fisubrl
ficoms
mov
add
cmpxchg
xchg
inc
adc
aad
mov
xor
pop
leave
push
and
jae
lret
inc
pop
je
or
test
fbstp
inc
push
aam
test
add
mov
int3
lods
out
jne
or
dec
ficomps
test
scas
fucomi
cmc
and
cmp
data16
jg
daa
push
mov
call
sbb
pop
mull
repz
cmp
outsb
sbb
dec
mov
movsb
push
xor
xor
or
lahf
imul
xchg
out
test
adc
inc
jge
mov
inc
ljmp
pop
mov
pop
and
sbb
das
sub
fimull
sbb
push
ds
jbe
and
cmpb
sbb
push
inc
add
cmpsb
inc
xor
insl
call
lahf
js
icebp
roll
fistl
lcall
inc
fcoml
mov
pusha
outsb
xor
sub
jg
xor
mov
in
rorb
sub
and
xor
int3
sub
push
notl
scas
lret
mov
pop
pop
stos
mov
imul
xor
xor
xor
leave
loop
cli
dec
stc
lahf
and
adc
repnz
mov
cmp
dec
lds
out
ret
pop
cli
jp
push
xor
leave
mov
in
outsl
xor
cmc
or
xor
cmp
push
adc
sbb
lahf
add
ss
xchg
lods
pop
movsb
push
mov
sub
sub
push
mov
in
dec
jg
gs
popa
stc
bound
fs
mov
jae
inc
bound
jmp
cs
mov
xchg
stc
les
shl
cmp
pop
ljmp
adc
adc
xchg
pushf
fidivs
jmp
add
cs
pop
sbb
nop
xchg
inc
aas
pop
ret
pop
gs
je
xchg
xor
cli
add
fildll
int
gs
mov
stc
fimuls
in
cs
mov
outsb
pop
pop
out
mov
inc
xchg
pop
sub
out
das
lret
or
mov
in
sub
out
jge
adc
cmp
outsl
std
fnstenv
mov
repnz
mov
lahf
sub
cld
cmp
mov
push
push
inc
mov
ficomps
mov
or
jnp
das
shr
add
fisttpl
fadd
inc
test
or
insl
jbe
scas
dec
pop
stos
mov
ljmp
dec
lods
test
ret
adc
dec
mov
and
out
rorl
int3
adc
xchg
cltd
insb
xlat
mov
mov
cmpsl
lods
push
dec
test
push
nop
clc
mov
mov
sbb
push
roll
stc
fs
ds
out
data16
gs
pushf
mov
cltd
jmp
add
xor
insl
or
out
mov
add
inc
test
idivl
ja
test
in
stos
int3
cwtl
or
lods
dec
fwait
dec
rol
ja
dec
add
andl
out
mov
in
mov
in
mov
mov
cld
xchg
mov
es
push
mov
jle
mov
and
jge
jnp
mov
mov
loop
fbld
sbb
clc
lfs
dec
enter
shlb
or
xor
stos
orl
std
insb
mov
icebp
xchg
jle
loop
in
add
pusha
outsb
add
iret
movsl
xor
jmp
sub
inc
sbb
inc
push
fisttpl
loopne
push
mov
lcall
xchg
clc
or
imul
inc
scas
pop
test
into
dec
jno
add
div
xchg
data16
sbb
push
inc
popa
pop
or
and
cli
or
movsl
add
adc
fidivrs
ds
aam
out
test
lods
into
and
jbe
dec
add
movsb
or
push
and
popl
lods
cmp
sbb
ss
daa
repnz
cmp
jae
jl
out
dec
and
push
adc
mov
gs
repz
mov
or
dec
sti
outsb
inc
or
fisubl
imul
or
adc
dec
sub
push
out
cmp
mov
in
movsl
or
mov
adcb
lea
sub
stos
fistl
js
adc
lcall
xchg
fdivrl
push
lea
lret
inc
ss
rcrb
cli
add
mov
insl
mov
jns
and
in
int
nop
cli
sub
mov
gs
in
shl
mov
sbb
cs
dec
stc
inc
test
or
outsl
adc
and
sub
stc
push
dec
mulb
in
pop
jne
ss
dec
mov
test
shl
shll
shll
popa
lret
cld
divb
pop
shll
into
in
or
cmc
rclb
xor
adc
leave
imul
jno
add
mov
lods
inc
push
loop
mov
out
xor
mov
pop
shrb
adc
sar
mov
loopne
push
dec
xlat
pop
inc
jne
add
les
scas
push
xchg
mov
mov
dec
pop
mov
pop
jl
push
adc
popf
jmp
aas
cs
sti
aad
sub
outsl
cmp
mov
ljmp
cmp
jecxz
int
loop
add
call
jecxz
and
jno
sub
mov
in
pop
xchg
add
inc
mov
sbb
stos
shl
mov
movsb
addl
idivb
std
cmpb
push
push
xor
icebp
scas
idivl
jbe
jno
data16
lret
xlat
ret
add
lock
lock
lcall
sub
mov
pop
ret
sar
lret
mov
insl
pop
sub
xchg
xorl
ljmp
jmp
adc
mov
insl
andb
xchg
sbb
adcb
mov
cltd
mov
sub
and
push
or
cwtl
adc
icebp
fwait
inc
xchg
sbb
rcr
fcoms
pop
xchg
push
enter
iret
out
leave
jb
xchg
jecxz
add
push
cmp
xor
mov
cmpsl
mov
add
pop
dec
ret
test
in
ja
std
xchg
dec
dec
inc
push
inc
inc
add
jmp
add
sbb
xchg
add
jb
in
gs
pusha
scas
in
jle
xchg
adcb
insl
xor
mov
loope
fsubs
sar
xor
mov
mov
int
mov
fdivl
subl
out
mov
out
sub
dec
mov
sub
aaa
sti
in
repz
hlt
int3
stos
and
insb
push
test
out
xchg
jmp
in
dec
push
outsl
iret
test
mov
pop
push
cmp
inc
mov
jae
mov
mov
pop
pop
xor
inc
sbb
add
pop
imul
pop
scas
ret
push
adc
mov
sub
fstps
leave
push
faddl
hlt
data16
aas
arpl
mov
push
ret
mov
or
jno
inc
lea
orl
pop
push
es
add
push
rol
shrb
cmp
cmp
test
fs
je
fnsave
in
jge
jp
sbb
test
jno
pushf
jmp
dec
push
loopne
idivl
or
rolb
push
sub
adc
sbb
fcmove
cmpsb
dec
lahf
add
push
pop
add
push
ljmp
mov
mov
sub
test
cmpsl
incl
jbe
shlb
mov
aas
inc
sbb
popa
stos
add
mov
push
cmp
outsb
fistpll
xor
loop
and
push
add
hlt
jg
and
xchg
inc
adc
repz
jg
out
sbb
aam
mov
sbb
and
or
int
xchg
push
sub
and
xchg
sbb
pop
xchg
rorl
sbb
jge
test
subb
pop
outsl
icebp
xchg
cld
loop
xchg
jmp
or
jns
adc
mov
aas
fdivrs
sub
xor
cld
test
daa
clc
mov
lret
cli
push
into
iret
js
cmc
xchg
scas
dec
xor
into
pop
adc
ljmp
pop
leave
adc
jg
add
jns
data16
fsubrp
lods
sub
mov
clc
xlat
xchg
xor
sub
nop
cmpsb
in
ret
push
mov
cmpsl
or
gs
loopne
push
push
dec
xor
psubusw
les
pop
cmpsb
xchg
jg
loope
fwait
push
dec
cmp
jle
fcoms
mov
pushf
xor
add
cmpb
je,pn
push
aad
xor
nop
dec
ds
aas
pop
pushl
jb
and
dec
xchg
adc
je
xor
in
jnp
out
or
fdivs
fs
jbe
jns
xlat
fildl
push
rcrb
inc
sbb
lret
rclb
test
mov
pop
jns
and
jbe
rcrl
sbb
mov
das
cmp
cmpsl
lock
jle
cld
xchg
test
popf
mov
xor
mov
data16
lock
cmp
pop
mov
or
aam
iret
xchg
ret
bound
in
inc
jg
dec
push
je
xchg
ret
ljmp
mov
mov
nop
inc
in
cwtl
in
std
mov
in
lcall
fimull
sbb
in
in
push
rorb
clc
sub
pop
xchg
addb
xor
add
sbb
test
sub
and
loope
stos
jmp
push
xor
aad
or
scas
pop
mov
push
in
dec
sub
xchg
test
data16
repnz
dec
inc
pop
push
inc
fcomps
or
test
fwait
lods
push
rcrl
mov
xchg
push
add
cmp
bound
outsl
jns
add
pop
leave
pop
xchg
iret
cmp
mov
or
pushf
out
pop
addr16
clc
fidivrs
mov
mov
add
orl
ret
sahf
mov
test
cmp
out
jne
shlb
icebp
out
bound
sahf
loopne
or
daa
push
xor
sbb
xchg
inc
ss
jns
sub
sbb
cmpsb
jle
call
or
iret
in
mov
adc
pop
mov
fs
xchg
jg,pn
rorl
popf
test
inc
cwtl
data16
mov
and
mov
scas
and
pop
lret
adc
icebp
mov
sub
jb
int
cltd
hlt
mov
arpl
push
or
sbb
mov
subb
add
scas
or
outsb
aam
pop
cltd
iret
fiadds
push
push
rcr
mov
jl
lods
cmp
xor
jbe
lods
ljmp
push
int
lock
out
stc
jno
jmp
arpl
nop
femms
fisubl
stos
xor
sbb
push
lahf
enter
ljmp
inc
and
push
jecxz
mov
cmpsb
iret
daa
jae
aaa
pusha
and
push
jecxz
pop
loop
pop
push
and
loope
pop
sbb
into
jle
daa
push
pop
and
jge
imul
sbb
or
jbe
or
sub
xor
push
add
xor
pop
pop
xchg
push
js
adc
lcall
sub
adc
sub
adc
mov
pop
pop
cmp
ror
packuswb
push
cmp
dec
jnp
mov
xchg
dec
and
jbe
push
or
dec
sub
mov
gs
mov
mov
ljmp
testb
leave
xchg
addb
outsl
shlb
loop
sub
and
adc
inc
call
cmp
jns
cmp
iret
and
into
xor
push
pop
cmp
int
or
out
into
mov
daa
cmc
pop
jo
xor
out
pop
xor
notl
adc
mov
adc
loope
add
jno
adc
adc
out
sar
pop
sub
sbb
mov
cs
sti
jb
cli
dec
orb
cmp
mov
dec
xchg
lods
jp
fwait
out
fldenv
pop
and
sub
xchg
inc
cmpsl
push
sbb
jns
push
sbb
pop
loop
sbb
push
testl
outsl
add
xlat
mov
aad
lahf
mov
aas
cld
mov
ret
cmp
fninit
daa
sub
lea
push
call
popa
sbb
in
test
sub
pop
xlat
jp
inc
es
inc
in
inc
push
das
push
loope
mov
inc
psrlq
xor
jle
std
into
ret
aad
enter
out
loopne
mov
and
jmp
mov
mov
mov
push
shll
enter
fdiv
push
pop
jbe
enter
icebp
gs
ja
insl
sub
mov
ljmp
ja
mov
lahf
and
mov
dec
mov
add
scas
imul
jge
mov
jmp
jbe
imul
xor
imul
out
inc
sti
roll
lret
enter
jmp
cmc
fstl
mov
movsl
xchg
dec
push
or
cmp
mov
or
pop
dec
nop
ffreep
test
jl
ja
xor
inc
outsl
pop
dec
or
scas
fistpl
pusha
push
xor
aam
cmp
aas
or
bound
jmp
jns
inc
inc
in
cmpsb
xchg
push
addr16
mov
add
pop
push
xor
jp
dec
sbb
addr16
sub
dec
and
aam
inc
mov
mov
stos
out
mov
js
jmp
fwait
mov
xorl
sub
sub
adc
imul
test
fstl
jnp
ljmp
inc
or
pusha
aas
ja
iret
inc
in
ret
mov
inc
mov
movsl
adc
and
or
xchg
pushf
push
inc
pop
mov
fidivrl
cltd
mov
xor
push
add
mov
in
mov
bnd
loop
inc
das
pushf
hlt
cld
add
arpl
je
or
xchg
rorb
sub
or
cmp
jne
scas
int3
pop
jae
pop
enter
sub
lds
arpl
cli
test
scas
push
push
movsl
and
or
cmp
cltd
movsb
stos
movsb
aad
adc
lcall
ds
daa
out
pop
data16
int
jno
pop
push
jl
enter
iret
mov
mov
xchg
mov
lahf
out
xchg
push
rcrb
test
scas
popa
and
mov
cmpsb
push
and
in
push
lea
dec
jo
pop
and
push
xor
loope
arpl
cmp
dec
mov
movsl
and
sahf
and
push
mov
or
xchg
sbb
cmpsl
mov
hlt
inc
bound
push
xchg
js
repnz
pop
xlat
mov
lcall
dec
fdivrl
jg
outsb
rorl
adc
test
mov
hlt
mov
fistpll
scas
pop
shlb
cmp
or
dec
sub
shl
rorb
sarl
sbb
jge
sahf
xor
test
push
andb
outsl
scas
xor
loop
clc
insl
stc
jnp
jnp
scas
mov
adc
insb
ss
cld
cmc
cmp
xor
pop
out
mov
imul
lret
out
jge
decl
test
sub
cmc
and
repz
pop
dec
jmp
loopne
fldcw
jo
add
mov
lods
clc
jecxz
mov
dec
pop
sub
outsl
in
cltd
sti
and
in
in
mov
sbb
or
xor
sbb
inc
scas
cmp
les
mov
sbb
mov
mov
sub
adc
or
pop
mov
cmp
aad
jo
nop
add
ret
jb
stos
stc
dec
orb
je
pop
sub
ss
mov
push
aad
mov
fsub
mov
push
addl
je
pop
inc
pop
pop
jp
es
lods
add
sub
inc
aaa
inc
mov
leave
push
and
pop
xchg
mov
cmc
push
std
jne
fstpl
out
aas
cmp
icebp
sti
pop
push
cld
out
mov
and
dec
mov
jge
lock
pop
neg
loopne
cmp
repz
adc
adc
pop
insl
adc
dec
dec
dec
mov
xchg
inc
jne
ljmp
push
lods
push
je
mov
sahf
andl
stos
jns
add
push
pop
cltd
dec
shlb
mov
xor
push
push
fs
xchg
mov
xchg
fistpl
sbb
loop
pop
xchg
fs
stos
cli
repz
repnz
les
xchg
adc
jmp
dec
xor
outsl
xor
les
ficoml
dec
negl
push
dec
daa
mov
inc
push
jnp
or
lods
cmpsl
fwait
or
push
add
sbb
out
fmuls
bound
scas
xchg
in
pop
outsl
xchg
insl
fmuls
mov
adc
inc
addr16
hlt
dec
jp
fbld
mov
loopne
lds
shlb
jne
or
sbb
ficomps
xchg
rorb
pop
jmp
xchg
fiadds
aam
and
sub
push
mov
or
shr
insb
dec
mov
jnp
jo
jle
mov
lds
ret
lret
cmpsb
or
ret
pushl
popf
jl
push
inc
xchg
subl
out
xchg
push
repnz
loopne
addr16
scas
jmp
push
push
ljmp
mov
shrb
jp
inc
iret
push
arpl
xchg
inc
or
cmovg
aaa
add
fwait
add
ror
inc
out
pop
idivl
fmulp
adc
out
rclb
and
cmp
insb
mov
jbe
pushf
sbb
sbb
mov
pushf
cmp
jl
out
sbb
rorl
inc
push
mov
add
jo
sbb
lahf
push
xor
movsl
js
test
jns
mov
cmpsb
aad
aam
add
xchg
cmp
pusha
sahf
push
push
sti
xor
out
aad
mov
cmp
push
adc
and
jae
sbb
outsb
sbb
dec
add
jns
xor
sub
mov
ret
sti
lds
fildl
push
in
lcall
fsubrl
shrl
repnz
and
xchg
adc
test
jg
and
movsl
mov
call
loopne
loop
jb
push
sub
sub
adc
test
push
and
push
cmp
mov
sbb
sbb
insl
leave
sahf
aam
mov
cmpb
mov
cmp
out
pushf
stc
xor
cmp
adc
lret
xchg
cld
loop
out
mov
out
movsl
push
cli
jns
mov
mov
repz
into
js
pop
cmc
in
sbb
jl
outsb
adc
ljmp
mov
imul
movsl
test
xlat
dec
pop
fisubrl
pop
rcrl
mov
add
sti
sarb
adc
gs
aas
push
loopne
push
jnp
push
xchg
pop
inc
rol
fsts
repz
mov
sub
movb
sbb
out
xchg
pop
dec
push
movsl
adc
pop
push
pushf
xor
xlat
test
popf
adc
nop
fcmovnb
aam
cmp
mov
dec
idivl
je
adc
inc
xchg
fwait
out
jb
lea
enter
xchg
mov
ret
xchg
pop
fisttpl
ret
xor
lds
out
das
es
mov
cmpb
and
iret
add
or
pushf
std
sbb
ret
cwtl
ds
cmpsl
in
and
mov
rolb
pop
cld
adc
xchg
mov
sub
mov
insl
popf
pop
push
leave
sub
push
sbb
sub
mov
ret
pavgw
insl
stc
fistl
xchg
jg
xchg
ljmp
movsb
lods
mov
in
mov
lods
shl
out
push
cmp
or
add
and
mov
mov
mov
inc
fnstsw
adc
xchg
aaa
add
xor
shrl
push
dec
add
push
jb
lock
jge
xor
sbb
or
dec
ret
xor
into
sub
sysenter
ds
pop
cmp
or
ja
je
dec
sbb
and
popf
rcrb
jg
fwait
cmp
fwait
add
or
out
std
mov
bound
out
mov
push
mov
imul
out
dec
pop
int
mov
mov
jbe
sub
mov
push
dec
ljmp
mov
jmp
cld
xchg
mov
adc
xchg
xor
gs
test
push
sbb
push
or
ret
inc
push
out
mov
ret
jne
insb
mov
mov
dec
pop
push
pusha
jne
mov
add
rol
cmp
pop
sub
movsl
divl
popf
xchg
push
stos
xchg
popf
mov
lret
sti
inc
adc
call
sbb
imul
sbb
xor
adc
pop
mov
and
adc
arpl
cli
faddl
sub
or
mov
aaa
mov
lret
xor
int3
das
sub
stc
fisubrs
xchg
ja
shlb
sub
xor
cmpsl
and
gs
jge
pop
or
daa
in
and
cmp
mov
sub
dec
dec
cwtl
and
addl
jo
inc
fs
and
int3
pop
test
inc
lahf
in
inc
xlat
dec
dec
cmpsb
pop
jns
in
in
xchg
mov
inc
inc
aam
lahf
push
das
push
jbe
loope
in
sub
repz
enter
xchg
cmp
mov
out
ret
lods
sbb
xor
add
lahf
int3
xor
call
jp
stos
pop
int
pop
js
push
pop
aad
jg
cs
fcoml
clc
jl
xchg
adc
pop
inc
jg
push
xchg
adc
mov
mov
and
mov
adc
int
jg
sub
mov
lret
int
call
fsubrs
sbb
ss
ja
movl
insl
fimuls
loop
das
push
stc
jmp
inc
adc
in
fidivs
sbb
ljmp
sub
xor
jecxz
xchg
into
pop
mov
cmc
mov
fbstp
jecxz
xlat
pop
lea
adc
xchg
add
xor
cwtd
sub
lods
fistpl
xlat
mov
sub
int
arpl
pop
in
outsl
push
repz
xor
imul
mov
xor
jg
inc
mov
lds
sbb
sub
jmp
sti
lods
xor
push
mov
out
add
mov
fldcw
out
dec
outsb
xchg
or
add
push
mov
icebp
ret
mov
mov
mov
in
mov
sbbl
and
dec
ja
rcl
inc
mov
push
enter
lds
aaa
rorb
xchg
aaa
rcll
pop
test
xor
cwtl
stc
adc
cmpsl
in
mov
mov
test
lret
add
mov
mov
and
popf
pop
xor
mov
aam
mov
test
insl
loopne
cmp
clc
std
xchg
mov
xlat
push
popa
or
push
lods
sub
stc
mov
mov
mov
punpckhwd
add
rcrb
mov
nop
ret
or
fucom
mov
xchg
or
rorl
sub
fdivs
stos
out
mov
cmc
push
push
dec
mov
jmp
out
push
or
xor
sub
xchg
loope
dec
lds
shlb
pop
xor
aad
inc
xor
ss
and
js
dec
sahf
jmp
cmp
sub
mov
jns
imul
xchg
sbb
lea
mov
add
jp
sub
mov
mov
dec
pop
jne
out
mov
daa
fistps
mov
jmp
cld
dec
cmp
ficompl
lock
cmpsl
mov
cs
out
stos
xor
lahf
and
and
jnp
mov
inc
gs
push
xchg
push
pusha
adc
in
ret
arpl
int
inc
ret
lret
std
jle
push
insl
add
mov
xchg
mov
ficoml
xchg
add
add
mov
or
push
js
mov
and
icebp
mov
js
adc
test
pop
out
fdivrl
mov
push
jle
jp
sub
add
mov
bound
inc
ficoms
cmp
aaa
rorb
scas
hlt
xchg
sbb
cmp
testl
in
pop
pop
jge
andps
push
jns
daa
in
dec
inc
cmp
test
rcrl
dec
mov
xor
sub
mov
inc
adc
push
dec
push
jmp
and
push
bsf
cmpsb
fcmovnbe
lret
in
shrl
enter
pop
fimuls
loope
pop
pop
sub
lods
and
ds
cs
movsl
aaa
fdivr
and
mov
addb
jle
push
inc
lret
sbb
cmp
cmc
js
add
pop
push
rcll
push
mov
add
ljmp
sarb
sub
jg
or
in
sub
mov
in
mov
mov
pusha
push
adc
arpl
clc
hlt
clc
sub
mov
testl
scas
sarl
mov
addr16
xchg
jmp
sbb
test
cld
out
xorb
dec
loop
cltd
stc
mov
mov
ss
ret
or
fsubs
cltd
out
xor
add
imul
cmp
imul
into
loopne,pt
cmc
jp
pop
xor
lea
lods
jns
adc
and
mov
mov
add
lock
lods
lods
sbb
int
daa
sub
push
sahf
mov
fcmovbe
int3
sti
cs
push
out
gs
mov
add
adc
aad
jg
test
repz
add
pop
xor
sbb
push
outsb
pushf
pop
scas
mov
and
jmp
mov
rcl
fwait
cmp
nop
xchg
xchg
jb
add
je
clc
out
jecxz
adc
repnz
call
pop
xor
addl
jae
pop
arpl
cs
inc
dec
test
fnstcw
mov
out
jmp
and
scas
iret
shll
adc
std
push
in
cwtl
mov
aaa
cmpsl
jmp
mov
dec
iret
dec
icebp
add
cld
push
shll
push
or
lock
aas
pop
push
scas
pop
shlb
push
aam
jmp
mov
insl
lea
xchg
std
pop
xchg
ljmp
mov
mov
aas
dec
lock
and
xlat
bswap
add
or
pop
cltd
in
add
test
movsb
nop
push
lahf
lea
clc
push
dec
js
xchg
inc
aaa
sbb
xor
xchg
es
stos
divb
out
sbb
xchg
lea
inc
aas
fs
xor
ljmp
pop
pop
xchg
sub
subl
add
inc
lret
mov
or
lahf
sbbb
pusha
cmp
inc
cmc
sub
imul
jns
sar
adc
mov
pop
pushl
xor
cmp
sbb
addr16
int3
movsb
jp
fcompl
adc
mov
jae
jne
imul
xchg
dec
cld
insl
jmp
sub
xor
and
pop
mov
and
jmp
sbb
sub
outsb
je
cmpsb
pop
xor
push
not
insb
nop
aaa
cmpsb
jnp
cltd
scas
jle
es
in
movsb
pusha
stos
sub
iret
mov
sbb
fwait
fs
into
inc
divl
movsb
lret
push
xor
stos
mov
adc
mov
sbb
sub
imul
add
mov
inc
mov
repnz
rorl
leave
and
xor
mov
sbb
xorb
cmp
xor
add
js
int3
add
shr
fidivs
aam
inc
js
shll
and
pushf
cmp
mull
mov
je
cmpsb
xchg
sbb
mov
daa
jmp
xchg
cmp
adc
popa
jl
loopne
dec
sub
push
dec
fdiv
xor
loop
adc
arpl
xchg
fisubrl
inc
cmc
sbb
imul
mov
insb
jbe
sbb
mov
loope
clc
jecxz
lret
cmc
lods
cmp
sub
movsl
ds
loopne
jb
jo
mull
adcb
sti
add
out
xor
mov
add
pop
sbb
js
xor
lcall
xchg
fsubrl
push
mov
insb
jmp
xor
adc
sub
inc
dec
jl
sahf
fldenv
fistl
push
pop
pop
mov
pop
dec
mov
aas
in
testl
test
sub
mov
lret
inc
sbb
popf
in
test
adcb
lcall
push
push
push
adc
in
pop
cmp
and
jns
adc
imul
sbb
or
icebp
into
and
cmc
inc
adc
pop
lret
mov
adc
daa
mov
mov
add
mov
in
xchg
arpl
xlat
or
aam
pusha
es
in
inc
adc
sti
fisttpll
push
pusha
or
loopne
push
mov
inc
cli
xchg
push
mov
mov
repz
sbb
test
cmp
mov
popa
adc
add
loope
jmp
push
sbb
mov
mov
aas
pop
pop
loopne
cmc
das
sub
je
call
sbb
idivl
pop
call
sbb
push
mov
fwait
push
dec
sti
sbb
cmpsb
pop
push
rorl
inc
je
add
ret
mov
mov
sbb
mov
jne
adc
adc
ljmp
icebp
push
rol
cld
xchg
push
mov
loopne
mov
mov
pop
lahf
lock
push
xor
jae
and
xchg
sbb
xchg
sub
aam
test
pushf
mov
and
inc
dec
xor
pop
xchg
ljmp
and
add
mov
dec
and
mov
addr16
pop
fldl
and
push
test
std
xor
andl
cs
dec
clc
mov
or
adc
xor
sarl
call
mov
mov
daa
out
jle
ret
test
push
add
adc
ljmp
xor
loop
mov
sbb
bound
insb
mov
dec
repz
imul
push
pop
mov
dec
or
out
lcall
jns
mov
pusha
xchg
test
outsb
jge
fstpt
pop
incb
addr16
sbb
jp
inc
push
mov
insl
pop
mov
pushf
inc
or
xchg
xchg
jne
push
adc
fstpl
xchg
sbb
sbb
xchg
xchg
pop
test
loopne
and
or
adc
push
push
lods
push
inc
stos
sbb
cld
insb
sti
pop
jb
xor
pusha
inc
enter
dec
lahf
ret
fstps
orl
and
push
push
push
repz
popf
sbb
adc
in
or
mov
sbb
sbb
lret
xchg
enter
mov
inc
adc
lret
ret
adc
repnz
sbb
hlt
jae
shll
test
or
sti
push
jle
cld
push
and
adc
dec
add
sbb
lock
inc
pop
mov
push
ficoms
add
or
lods
rolb
popf
and
push
or
movsb
rclb
rclb
jae
and
and
sbb
test
cmp
stos
mov
inc
stos
movsl
jl
jns
dec
cwtl
xorl
sub
cs
cmp
push
or
jmp
push
mov
pop
inc
test
insl
cmpsb
loope
fsubr
mov
fstp
pop
pop
mov
inc
mov
sub
adc
inc
cmpl
inc
xor
and
imul
add
or
ret
test
fnstsw
cmc
fiaddl
push
rorb
push
rol
fcoml
shrl
outsb
mov
and
lock
jg
cld
shll
adc
repz
add
outsb
int
mov
mov
mov
shrl
les
lock
pusha
into
dec
test
insl
dec
sub
xchg
outsl
or
loop
or
fs
push
ss
mov
fcomp
jl
cli
inc
sti
cmp
cmp
xor
add
fcomip
or
es
push
in
pop
ljmp
imul
mov
sub
mov
nop
sub
stos
pop
mov
mov
adc
mov
les
ret
test
adc
dec
into
mov
or
pop
push
fidivs
das
repz
ret
xor
cmp
lods
data16
push
das
enter
inc
adc
pushf
loope
outsb
jmp
scas
jg
sub
pusha
aad
arpl
aas
mov
dec
jb
xchg
jg
shrl
cmp
sbbl
fucomp
mov
push
sub
xor
and
fisttpl
sbb
inc
push
outsl
push
inc
sbb
mov
mov
mov
test
out
roll
notb
rcrl
jmp
divl
icebp
or
cld
mov
idivb
mov
mov
ljmp
rcrb
mov
mov
aam
jae
ret
dec
or
mov
dec
xor
adc
ljmp
scas
lods
imul
sbb
cmpl
pop
xchg
test
xchg
xor
push
test
pop
in
mov
lcall
push
icebp
idiv
leave
int
xchg
xchg
sub
xchg
ret
or
push
stos
movsl
int3
push
xchg
sbb
insb
push
fidivrs
fbstp
cmp
sbb
xor
cmp
mov
sbb
mov
mull
mov
sub
out
ds
stc
ds
or
cvtps2pi
xor
mov
jbe
jns
jns
inc
bound
jns
push
and
sub
add
test
mov
mov
lock
jp
pop
push
mov
lods
stc
mov
or
addr16
lcall
jns
cwtl
xchg
out
cmc
lock
pop
fcompl
jl
int
out
dec
or
lret
fstl
xor
adc
and
stos
insb
pop
dec
jnp
mov
push
cmpsl
pusha
loope
ds
jge
push
ret
aas
pop
or
test
in
push
jae
mov
aaa
popf
aas
jg
mov
adc
fisubrl
insb
xchg
pop
adcb
cmp
imul
stos
push
dec
jmp
adc
push
cmpsl
bnd
cli
leave
push
mov
hlt
mov
mov
inc
jl
sbb
jbe
or
mov
addr16
call
test
fdivrp
xchg
lds
cwtl
subl
dec
jnp
mov
cmp
adc
fimuls
sbb
loope
cmp
jno
repz
jl
in
dec
pop
pop
and
xor
cwtl
enter
test
test
jo
cmpsl
inc
adc
jp
fs
lahf
in
mov
enter
pop
fwait
push
pop
push
insb
sbb
pop
lcall
lock
je
dec
jbe
and
jo
cmpb
inc
sbb
inc
jno
inc
jg
xor
fcom
xchg
pop
imul
push
lcall
push
fadd
stc
jmp
outsb
adc
adc
lret
push
sub
jnp
mov
das
in
mov
int3
and
jo
int
lods
shrb
xor
push
loope
pop
mov
inc
mov
xchg
and
xchg
mov
outsl
jmp
or
popa
fs
adcl
daa
sahf
pop
cmp
xchg
sbb
out
imul
js
stos
xor
lcall
inc
mov
out
je
iret
movsl
pop
xor
inc
pop
or
gs
push
cmpsl
imul
es
movsw
mov
insb
mov
in
sub
mov
in
sbb
outsb
sti
cmp
push
mov
fimuls
scas
mov
xchg
inc
and
fldenv
xor
repz
xchg
call
pop
cmp
sub
rclb
pop
and
pushf
mov
cli
jmp
into
imul
pushf
sub
jo
call
aas
push
xchg
jo
fwait
sub
dec
dec
push
je
nop
leave
adc
std
mov
daa
icebp
loop
xor
mov
test
or
dec
or
jns
push
inc
xlat
push
inc
stos
ficompl
xorl
mov
xor
xlat
rcll
inc
pop
std
pop
les
cmpsl
call
cltd
cmpsb
icebp
add
sub
mov
leave
cmp
inc
dec
rcrl
mov
mov
sub
mov
ret
fcmovb
or
es
pop
insl
jl
fisttps
mov
inc
ljmp
int
sub
mov
test
jge
rcrb
pmulhw
add
call
test
jns
mov
jnp
push
call
jle
clc
add
fldl
aam
cmp
pop
xchg
pop
loope
xchg
fucomp
out
inc
lds
push
mov
pop
loope
nop
dec
lods
or
jbe
xchg
call
mov
popa
mov
test
inc
ret
ja
and
inc
nop
cmp
sub
add
aad
in
add
xchg
lds
pop
sbb
jmp
mov
in
inc
xchg
inc
adc
mov
xchg
push
mov
je
mov
dec
push
jp
cs
mov
adc
xchg
mov
mov
or
test
cltd
mov
in
fistps
rcrb
sahf
sbb
xchg
sub
out
push
subb
jl
sub
mov
dec
inc
dec
insb
shrl
jnp
cmpsb
mov
shll
pop
in
jno
pusha
jl
adc
fcompl
ret
lods
pop
inc
lret
out
cmpsb
cmp
push
jns
negl
xor
fiadds
cmp
xchg
pop
or
loop
cmp
or
scas
cmp
inc
jecxz
nop
pop
and
and
repnz
leave
test
ss
or
arpl
pop
addl
pop
or
icebp
leave
pushf
aaa
jp
mov
add
sti
mov
ficomps
xor
shlb
and
cmp
stos
movsb
js
into
push
cmp
push
jbe
inc
icebp
jge
ret
inc
loopne
daa
call
out
gs
pop
nop
jl
and
repnz
repnz
xor
repz
xchg
lahf
rorb
push
xchg
jnp
test
cmp
inc
mov
mov
xchg
enter
pop
ficompl
shl
mov
sub
lahf
pop
sbb
cmp
movsb
movsl
push
sbb
and
testb
sti
inc
sbb
loope
add
dec
imul
dec
gs
pop
nop
lcall
push
loope
lcall
popf
fsubrl
sub
push
adc
cmpsb
xchg
insb
call
cmp
push
add
jae
cmp
sub
and
sub
nop
call
rcr
jno
mov
sbb
sahf
cmpsb
or
sbbb
mov
enter
pop
inc
mov
jl
repz
aam
outsl
xor
ss
insl
cmp
push
mov
out
test
cli
stos
cltd
jecxz
adc
cmp
inc
jl
mov
dec
into
lret
cmc
xchg
xchg
pop
sub
adc
adc
mov
lret
rorb
dec
fnsave
xchg
cli
xlat
leave
loopne
sub
rolb
fdivr
ljmp
gs
pop
loopne
or
dec
mov
fstps
mov
hlt
and
repz
popf
dec
sbb
push
aaa
push
dec
add
jp
pop
adc
fiaddl
pushf
aaa
je
jmp
mov
cs
cli
in
mov
xlat
nop
std
mulb
hlt
pop
inc
jb
cmc
jp
rcrl
jecxz
cmp
movb
mov
scas
xor
out
xchg
andl
leave
fldt
ja
inc
pop
and
das
pusha
pop
jno
frstor
mov
mov
daa
mov
std
push
jns
cwtl
mov
dec
fistpll
fsub
mov
adc
add
mov
inc
cwtl
mov
push
lock
stos
push
add
dec
aam
dec
clc
ret
imul
mov
xchg
stc
outsl
ljmp
repnz
inc
fdivr
mov
lret
out
and
nop
stos
sub
add
add
xlat
in
mov
push
stos
sbb
frstor
mov
sbb
out
pop
inc
shrl
and
test
sub
mov
and
mov
jmp
fwait
xchg
push
ss
enter
in
test
dec
int3
cld
dec
inc
daa
push
ljmp
test
or
loopne
movsl
add
push
mov
jnp
in
sub
xchg
xchg
popa
outsl
mov
push
dec
mov
das
cmp
inc
and
jp
mov
mov
cltd
aam
mov
shrb
jp
movsl
mov
test
fbstp
mov
xor
fistl
out
into
imul
fists
pop
out
jb
push
and
inc
insb
cmp
sarl
mov
in
mov
in
iret
cmp
mov
pop
ja
jg
cli
outsl
mov
in
push
cmp
push
popf
out
push
mov
xor
xchg
mov
popf
sbb
fwait
shrl
into
xor
push
fildl
ret
fadd
repnz
das
aam
cld
sbb
push
xchg
arpl
imul
xor
or
insb
fs
insb
cmp
sub
cmp
pop
inc
mov
lods
lds
ds
scas
dec
adc
es
andb
sbb
and
in
sbb
imul
out
popa
cmp
lock
jl
cmp
dec
in
mov
aad
sbb
dec
add
lahf
fisttps
pop
test
push
cmp
cmpsb
push
popf
in
push
add
enter
pop
sbb
push
pop
cmpsb
loope
int3
stc
sub
arpl
cmp
cmp
movsl
pop
es
jae
mov
sbb
jmp
xor
adc
icebp
rcrl
jge
js
mov
pop
iret
scas
daa
lcall
pop
fcoml
ret
sub
jnp
mov
adc
or
enter
mov
or
loop
push
and
int
fwait
xchg
sub
testl
cwtl
in
jb
mov
mov
repz
xchg
call
loop
mov
stc
xor
fs
lret
rcll
mov
push
add
or
jecxz
and
xor
xor
and
inc
cmc
pop
lret
mov
add
mov
dec
imul
mov
lods
xor
iret
mov
dec
xchg
sub
add
icebp
push
or
incb
inc
and
in
and
inc
inc
sub
fsts
xchg
hlt
rep
fmuls
xchg
sbb
pop
test
mov
mov
pop
sub
cwtl
or
pop
xchg
cs
dec
mov
nop
fadd
push
xchg
and
dec
cmp
or
scas
in
pusha
movb
cld
cmc
roll
mov
bound
loop
mov
clc
fwait
dec
dec
cmpsl
leave
and
xlat
mov
cli
inc
in
inc
inc
loopne
dec
das
aas
dec
cmp
andl
shll
sub
std
lods
adc
cwtl
pop
imul
mov
mov
pop
cld
aas
push
mov
pushf
imul
mov
mov
jl
lock
fwait
cli
pop
out
mov
rcl
pusha
ret
sub
pop
aam
aaa
sbb
clc
imulb
es
push
insl
dec
loopne
dec
and
xchg
xchg
cmp
ljmp
mov
add
mov
fidivs
mov
mov
test
js
loop
mov
add
test
inc
loope
jp
js
push
out
sbb
cmp
pop
in
stc
xor
or
xchg
lock
ficoms
jnp
lcall
dec
xor
sub
sbb
dec
insb
xchg
and
xchg
test
inc
dec
ja
sahf
call
inc
mov
insl
adc
sbb
add
or
out
push
sti
cmpsl
bound
add
in
mov
stos
mov
xchg
pop
ljmp
jp
call
icebp
mov
pop
jb
dec
pop
xchg
add
shll
xor
neg
aas
xchg
xchg
push
lret
mov
mov
push
shrl
and
stos
in
inc
and
sbb
in
icebp
sub
sbb
jg
test
iret
lcall
pop
scas
mov
divb
pop
ds
incl
aaa
mov
mov
in
or
ja
cmp
dec
scas
add
bound
sub
mov
push
mov
jae
shl
lahf
icebp
push
arpl
rcll
test
xchg
mov
or
std
mov
lds
pushf
dec
lcall
add
lds
mov
in
scas
std
scas
or
cmp
jns
push
fld
inc
jbe
jbe
jge
repz
mov
sbb
lahf
movsl
xchg
jl
and
dec
push
jne
push
mov
nop
test
test
sbb
test
rorl
ror
cmpsb
in
push
loopne
push
imul
xchg
loope
sbb
loop
outsb
cmp
inc
jmp
movsl
popa
xchg
insl
and
push
rcrb
sti
sbb
js
jmp
out
iret
lock
fiadds
sbb
addl
add
lcall
inc
fadd
gs
sub
cmp
push
lret
inc
mov
pop
sub
jg
adc
filds
or
push
leave
jmp
pop
or
push
es
int
imul
lret
add
or
add
jbe
sahf
in
sbb
sub
adcb
xchg
and
ljmp
adc
mov
cmp
stos
ja
lds
cli
adc
je
jne
lods
cmp
lods
dec
or
add
cmc
and
outsb
xor
mov
adc
ja
mov
in
adc
mov
test
lods
pop
dec
testl
lahf
les
fldl
pop
mov
sti
dec
or
sub
or
jg
mov
inc
pop
push
enter
inc
les
pop
sub
je,pt
xchg
loopne
scas
sbb
adc
pop
loopne
repz
dec
mov
cs
loope
inc
pusha
jns
mov
jns
xor
mov
dec
scas
pop
out
inc
xchg
jecxz
in
movb
repz
call
xlat
out
aad
test
dec
xchg
mov
push
jns
pop
xor
gs
das
push
inc
mov
cmp
and
sub
roll
mov
push
sarl
in
pop
mov
mov
cld
push
ja
or
mov
cmp
fstps
push
ret
cmpsb
cmp
data16
jae
mov
sub
xchg
es
cld
mov
dec
sbb
ljmp
fnsave
lods
pop
mov
mov
adc
in
outsb
mov
add
mov
test
sarl
push
xor
jge
clc
mov
mov
in
sub
shr
cwtl
cmpsl
pop
cwtl
push
push
stos
popa
test
out
insl
mov
xchg
aaa
inc
push
dec
loop
stc
jns
xor
sub
pop
mov
daa
dec
movsb
dec
xchg
inc
push
test
push
add
and
dec
mov
push
inc
push
std
xor
jae
mov
add
add
dec
mov
cmc
lock
enter
xor
push
movsl
stos
xchg
xor
or
push
loope
pop
movsl
les
jp
aam
mov
adc
mov
out
dec
add
jne
scas
xorb
or
imul
mov
sbb
outsl
test
pop
or
adc
stos
pop
xchg
add
nop
sub
ret
xchg
mov
mov
in
xor
pusha
dec
or
ret
lcall
subl
cmpsb
sbb
push
ret
popf
fucomi
mov
inc
or
inc
jae
arpl
sbb
dec
loop
cmp
jb
push
imul
cs
cmp
jp
inc
pop
push
inc
mov
or
bound
aaa
mov
hlt
or
inc
lock
fwait
int3
xchg
pop
sahf
and
lds
xor
xchg
int
fdivrs
xchg
gs
sbb
jbe
cmp
je
mov
cmp
sbb
jno
jle
jl
fidivs
dec
ret
pop
loop
fwait
leave
push
xor
add
sbb
adc
mov
pushf
mov
inc
dec
icebp
pop
cmpsb
jo
jo
and
mov
pop
xchg
lea
adc
mov
dec
adc
lods
loopne
mov
pushfw
and
lcall
mov
sbb
xchg
jecxz
jae
xchg
xor
mov
js
insb
addb
aad
lcall
jge
insl
fdivl
outsb
lahf
nop
fsts
aaa
popf
fdivrs
mov
orl
imul
leave
sbb
and
inc
lret
stos
shll
xor
lret
sahf
or
hlt
subb
outsl
gs
loop
mov
cwtl
xchg
pop
dec
out
xor
cmp
addb
out
jmp
cli
inc
dec
sub
dec
dec
bound
sahf
orl
mov
jae
aaa
cmc
jmp
mov
pop
test
adc
lahf
test
mov
mov
mov
lods
pop
pop
mov
adc
adc
push
mov
jmp
sti
not
dec
decb
cmp
xor
dec
test
mov
flds
mov
les
push
imul
ds
cmp
fnstsw
int3
pop
xchg
pop
xchg
fimull
jno
stos
jmp
notb
aad
sbb
aas
sarl
pushf
dec
es
fnsave
mov
int3
and
ret
inc
mov
pop
dec
lret
mov
stos
fmull
es
cmp
mov
inc
repz
xchg
lahf
pop
das
std
cmp
xchg
mov
mov
pop
xchg
int
iret
hlt
jecxz
jecxz
xor
sti
out
cmp
in
cmpb
cmp
lret
jp
out
mov
es
sub
sub
dec
jmp
aam
or
ret
push
cmp
xor
fsubrl
or
dec
pop
shrb
mov
scas
ljmp
fildll
aaa
fdivrl
in
push
test
popa
ret
or
xchg
mov
outsb
xchg
pop
test
inc
push
mov
cmpsb
mov
hlt
leave
or
sbb
pop
xchg
push
sbb
sub
pop
inc
out
stos
push
leave
dec
out
shr
or
and
mov
xor
loope
or
jle
ret
in
mov
sub
jnp
pop
nop
ja
sub
dec
movsl
test
in
xchg
or
and
fwait
loope
in
push
popa
arpl
std
popf
shr
aam
and
jns
add
loope
push
xchg
and
mov
dec
cltd
mov
pusha
adc
rclb
pop
jae
mov
or
mov
and
in
ss
in
das
mov
loope
fists
lods
xchg
push
hlt
shr
or
adc
repnz
jb
inc
or
xchg
jge
movsb
imulb
cmpsl
movsb
in
insb
jge
sbb
lds
in
ret
and
ret
imul
ret
int3
jae
sbb
negb
pop
mov
push
in
fwait
pop
xchg
mov
loopne
imul
scas
leave
cmpsb
xor
mov
pop
adc
sahf
xchg
mov
adc
aaa
leave
popa
inc
popf
hlt
xor
cmp
mov
insl
or
popf
or
cmp
repnz
int3
jb
fcompl
or
sub
xchg
lds
jle
shlb
out
scas
in
stc
dec
and
or
dec
pop
repnz
movsb
inc
daa
push
ja
cmpsl
jbe
jne
jge
mov
sbb
xchg
daa
in
in
dec
out
jno
jnp
jl
outsb
lahf
dec
xor
jg
jle
loope
and
mov
lahf
cmp
cmp
loop
test
addr16
inc
ficoms
cmpsb
repz
in
or
enter
pop
out
push
jno
loope
and
mov
pop
aas
mov
movsl
outsl
pushf
mov
scas
je
nop
shll
sbbb
imul
js
push
dec
pop
sub
xchg
js
cmpsb
pop
pop
dec
das
test
push
jo
cmp
sbb
inc
sub
lret
ret
and
in
rclb
and
call
out
decl
call
and
int
mov
sub
inc
lret
or
aaa
stc
mov
sbb
loopne
sahf
xor
ret
test
and
orb
cmp
movsb
xor
lret
cmpsl
jl
adc
lds
fdivrs
adc
outsl
xor
push
dec
cmp
arpl
outsb
cmpsl
fmulp
push
scas
je
mov
call
pop
movsb
stos
jo
clc
aam
imul
rolb
and
data16
lods
in
mov
sbb
lds
aam
xor
in
xor
or
cmpsb
gs
outsb
jo
gs
inc
or
mov
push
dec
or
faddl
inc
call
les
in
repz
xchg
data16
pop
sbb
cmp
rcrb
pop
inc
mov
pushf
jecxz
out
mov
cld
aad
shll
or
aas
jo
bnd
sub
popf
es
or
cmp
lcall
mov
pop
loop
push
inc
sub
push
pop
inc
jp
or
ret
fdivrl
xchg
mov
cmpsb
pop
stos
and
dec
push
rcrl
sarl
es
es
mov
sti
cmpsl
jecxz
es
cmp
cld
rol
lret
jmp
rcr
test
sbb
or
popf
pop
dec
call
pop
sub
aam
lock
movsl
inc
or
mov
ljmp
jae
xchg
cmc
les
ljmp
js
in
loope
mov
push
rcr
repz
mov
shl
add
lock
push
ljmp
jmp
fnstsw
pushf
sub
movsb
xchg
xor
pop
out
fwait
repnz
aas
scas
and
xchg
lds
push
add
int3
pushl
mov
and
fwait
push
mov
push
aaa
or
sub
jo
test
xchg
lods
ja
mov
dec
cwtl
faddl
xor
or
mov
add
mov
cld
xchg
sbb
test
mov
inc
out
sub
scas
in
outsb
or
pop
fmul
mov
sbb
jns
xchg
and
imul
movsl
push
xchg
adc
jne
cmc
mov
sarl
xor
pop
jmp
pop
xlat
addl
push
sbb
icebp
scas
into
push
gs
stos
ds
and
stos
lcall
jg
in
dec
repz
orl
mov
dec
ret
lret
xor
inc
fcompl
push
dec
out
popf
sub
ds
or
lret
into
adc
imul
sbb
imul
cmp
xlat
mov
mov
arpl
inc
leave
fdiv
lret
hlt
subb
arpl
jne
mov
mov
pop
xchg
and
xor
call
inc
int3
pop
jle
pop
cld
mov
fmulp
add
lds
jnp
scas
lret
clc
jae
repz
cmp
std
xor
sarb
jbe
mov
ljmp
cmp
pop
jno
pushf
jl,pn
rcl
dec
mov
arpl
xor
mov
aam
push
mov
sub
iret
sub
xor
jbe
jbe
lcall
and
pop
adc
hlt
loope
loopne
sub
adc
ds
ss
rorl
lods
inc
lods
sbb
loopne
mov
imul
sbb
sub
je
pop
lret
or
lcall
in
fadd
inc
cld
sub
dec
mov
adc
in
mov
cwtl
mov
mov
mov
sub
push
popa
push
das
xchg
int
sub
pop
xor
testl
out
cmp
sahf
aad
dec
test
loope
outsl
and
xchg
aaa
jae
stc
xor
add
cmp
clc
jo
out
ret
hlt
cli
stos
rep
xor
jns
cmp
cld
out
or
xchg
cmc
jns
arpl
jno
jne
ret
add
adc
mov
xor
movntq
cmpsl
jle
int3
and
xlat
add
mov
mov
popf
aam
sti
push
mov
cs
mov
loopne
lret
mov
inc
xchg
add
fldcw
mov
rep
fbld
sub
int
mov
das
aam
lret
pop
stc
in
hlt
adc
dec
out
jmp
mov
add
nop
inc
into
aas
sub
cli
std
dec
adc
push
je
cmp
jecxz
gs
bswap
out
xchg
inc
push
adc
add
cmp
dec
push
mov
fistl
lock
add
adc
stc
add
mov
pop
dec
ja
jne
push
imulb
pop
std
dec
pop
inc
cwtl
inc
mov
jmp
mov
jmp
bswap
pop
adc
mov
addr16
push
rcrb
add
sub
sbb
pop
sub
ret
xor
fldenv
cmp
insl
out
dec
dec
or
in
ljmp
inc
lods
pop
mov
mov
jp
xor
xchg
inc
nopl
rolb
mov
fcompl
push
push
imul
addw
or
sbb
inc
repz
mov
pop
cltd
and
stos
cs
jecxz
xchg
xor
pusha
push
fisttpl
lock
cmc
and
fsubrl
mov
sti
xchg
jnp
lret
fstpt
push
das
pop
ja
mov
lea
sub
fwait
aas
mov
push
cmpsl
sbb
add
xor
cmp
add
xor
notl
xchg
and
inc
mov
loopne
mov
push
or
int
mov
pop
sub
loopne
dec
stos
shrb
pop
xchg
inc
mov
fdivs
fists
pop
xchg
mov
outsl
jmp
ljmp
out
push
hlt
sub
in
pop
push
push
movsb
mov
xor
aad
inc
insb
push
jae
jnp
insb
xchg
aam
in
jae
pusha
push
ror
push
jmp
ret
push
pop
mov
mov
xor
jae
in
pop
push
or
loopne
push
push
cmc
mov
mov
repz
push
xchg
or
push
scas
jmp
push
ds
sub
mov
mov
leavew
dec
inc
push
hlt
lret
loop
arpl
push
inc
xchg
xchg
or
rcll
aaa
hlt
insl
out
or
pop
jns
dec
loope
pop
sub
adc
outsl
sbb
inc
jge
rcrb
scas
stos
sti
in
and
data16
mov
repz
jbe
inc
popf
jge
push
push
sbb
inc
or
mov
loopne
sti
loopne
jl
or
push
inc
sahf
shll
adc
outsl
push
push
mov
leave
test
std
out
inc
cld
lock
fchs
push
enter
pop
push
and
mov
cli
mov
cmp
add
in
in
dec
adc
add
mov
js
mov
xor
push
pop
jp
idivl
xlat
aad
dec
outsb
sbb
push
sub
fsubrl
subb
aad
outsb
enter
mov
push
ror
xor
imul
mov
push
leave
and
jne
int
xchg
test
xchg
lods
shll
mov
xchg
daa
sbb
in
js
xchg
test
fiaddl
add
ds
sbb
adc
mov
cld
int
cmp
mov
insb
out
cmc
xor
fstl
rol
jo
lods
imul
cmc
inc
lcall
loop
mov
sahf
imul
add
aas
data16
lods
mov
cmp
inc
xor
imul
mov
or
test
mov
mov
loopne
xchg
jno
cmp
inc
fldenv
mov
icebp
xchg
in
pop
loope
in
inc
cmp
roll
adc
repz
cmp
je
sbbl
inc
aad
popf
adc
scas
dec
lods
jb
std
mov
je
pop
mul
stc
insl
adc
adc
fmull
nop
imul
shll
mov
xchg
mov
ds
fcmovnb
and
sarl
mov
dec
das
lcall
mov
add
cmc
imulb
mov
cmpsl
loope
mov
dec
mov
jne
push
ss
lret
sub
mov
sub
test
shl
test
xchg
aam
mov
std
es
jbe
dec
or
push
cmpsl
jmp
popa
push
sbb
inc
mov
popf
in
and
xor
testb
daa
lret
cli
imul
push
adc
cmp
dec
adc
mov
jo
sbb
scas
push
pop
inc
subl
xchg
push
out
push
mov
sar
fdivs
or
aad
mov
xor
sub
sub
ja
pop
add
pusha
fs
mov
data16
out
outsl
fwait
outsb
xor
push
dec
rolb
or
out
jno
mull
adc
jns
dec
cmp
xchg
jo
jle
popf
pop
outsb
mov
xchg
fsubs
and
jp
mov
mov
mov
fimull
mov
test
jno
ret
xchg
xchg
and
pop
ds
xchg
mov
popf
addl
sub
out
mov
stos
and
cs
out
insb
mov
out
jle
sbb
int3
pusha
mov
xchg
push
ret
xor
outsb
jb
cmp
insl
jae
mov
xlat
popf
ja
loop
shlb
inc
or
neg
add
mov
sbb
cltd
mov
scas
repnz
mov
test
sarl
or
aad
xor
hlt
push
icebp
fsubs
imul
xchg
mov
push
mov
js
fwait
pop
out
mov
loope
xor
loopne
pop
push
cmp
kmovd
shlb
mov
test
sbb
jo
cld
movsb
inc
push
push
imul
les
daa
loope
scas
cmp
xor
rorb
jl
push
pop
dec
jg
pop
push
daa
int
xor
jo
fs
cltd
push
test
pop
xchg
push
test
enter
mov
stc
cmpsb
jl
cltd
in
rolb
pop
xchg
or
loope
in
loope
ret
and
stc
pop
mov
push
xchg
and
cmp
adc
adc
scas
and
add
decl
testb
sahf
mov
push
pop
leave
push
pop
lcall
in
fcompl
decl
outsb
sub
dec
adc
mov
or
mov
mov
xor
enter
fmuls
gs
mov
lret
push
sar
testb
lcall
aas
jbe
fildl
mov
loop
mov
fs
and
adc
or
push
fdivr
fsubrs
ret
out
stos
lret
push
xor
stos
testl
call
jp
pop
pushf
add
daa
aaa
pop
add
pop
imul
fs
rcrb
lods
lcall
xlat
cmpb
mov
jae
xchg
sti
mov
fwait
xlat
fisttpll
sbb
xchg
dec
and
sub
in
les
int
dec
jnp
xchg
scas
ds
sbb
out
roll
enter
pop
shl
adc
mov
pop
sbb
movsb
aas
mov
nop
cli
cmp
jb
xor
sahf
je
push
dec
adc
aam
call
xchg
outsb
in
mov
mov
fcomi
mov
pop
fs
inc
packsswb
andb
mov
lret
adc
and
outsl
sbb
or
test
cwtl
mov
xchg
jnp
jge
xor
mov
lods
insl
lret
ss
mov
pusha
pushf
mov
loop
lock
aas
jle
lds
aas
aam
pushf
lods
ret
push
mulb
ds
inc
dec
add
xchg
mov
pop
ljmp
inc
lods
fcoms
mov
or
mov
fstl
add
jae
cltd
dec
outsl
push
test
sub
add
sbb
mov
sar
aas
pop
xchg
sbb
sbb
shll
mov
stos
or
ret
out
pop
push
xchg
xchg
lcall
call
sub
or
scas
xorl
ljmp
dec
cltd
pop
inc
test
push
xor
dec
jno
filds
adc
and
in
movsl
pop
add
imul
mov
pop
lods
ds
adc
mov
inc
inc
mov
dec
mov
xor
clc
add
in
fidivl
dec
jno
and
iret
sub
push
pop
sub
nop
push
pop
xchg
pop
scas
jmp
addb
push
dec
sbb
mov
sbb
loop
mov
and
out
and
inc
mov
jnp
and
jle
pop
test
test
inc
scas
iret
aam
cmpps
pop
clc
sbbl
mov
sahf
push
xchg
fidivrl
mov
mov
rcr
mov
pop
std
sbb
jg
imul
jbe
push
add
adc
dec
mov
pop
and
leave
cmp
push
into
arpl
push
mov
push
jb
sub
mov
cltd
add
call
pop
mov
fidivs
or
rorb
xchg
and
movsb
ror
push
push
mov
mov
jge
out
sbb
outsb
push
daa
loopne
cltd
cmp
and
test
testb
or
jno
cmp
mov
outsb
push
das
mov
push
xchg
lods
mov
sbb
loope
cmpsl
push
xchg
add
jl
shlb
push
mov
loope
ljmp
pop
push
movsl
mov
sbb
ljmp
loop
add
imul
popa
jae
pop
enter
jp
ds
dec
mov
lea
push
fadd
cltd
shrb
aaa
pusha
outsb
mov
jecxz
fistpll
sarb
lcall
xor
mov
test
jge
cmp
jns
mov
stos
testl
jo
xchg
iret
mov
sbb
and
xor
inc
add
lock
stc
xor
mov
add
out
or
cmp
sub
out
in
cli
inc
xor
cmp
shr
sub
aaa
cmc
into
pushf
or
cmp
pop
and
in
inc
mov
imul
je
pop
lcall
cmp
repz
rol
sub
mov
in
fisubs
sti
bound
cli
xchg
fs
gs
and
dec
test
pop
fsts
dec
and
dec
jmp
fists
xor
xor
inc
in
pop
adc
adc
mov
mov
pop
in
cs
cmpsb
aad
xchg
or
in
or
rorb
mov
pop
in
jecxz
dec
cwtl
sbb
pop
jb
call
push
jmp
roll
adc
out
push
es
pop
jne
inc
xchg
mov
das
pop
push
pop
mov
xor
and
jns
rcrl
add
xor
std
ds
mov
mov
mov
xchg
ljmp
movsl
sahf
mov
mov
sahf
jge
enter
cwtl
cltd
xchg
xor
aam
rcl
ret
loope
sarl
insl
fwait
mov
dec
incb
or
ljmp
push
lods
cltd
daa
and
jecxz
jl
pextrw
movsb
mov
cmp
xchg
add
and
cmpl
mov
push
push
ret
cli
push
fstp
mov
xchg
sbb
lods
leave
shl
adc
stos
sti
jmp
jae
loope
add
out
push
pushl
xor
or
push
xor
out
mov
cmp
inc
dec
add
test
jae
ja
or
dec
fs
push
fists
or
out
out
int3
adc
nop
fsubs
add
test
out
das
or
jns
mov
in
lock
xchg
push
pop
pop
mov
movsl
lods
mov
pop
inc
adc
xchg
test
pop
sbb
mov
out
mov
popa
mov
add
add
scas
ss
xchg
sub
call
jmp
out
sbb
cmc
jb
or
notb
stc
and
sbb
imul
jnp
and
inc
in
cmp
pusha
out
rclb
push
insb
mov
das
cmp
sbb
andb
push
push
imul
pop
fwait
out
imul
xchg
insl
daa
adc
fldt
adc
out
inc
lret
mov
test
sti
hlt
lods
or
inc
lcall
push
xor
stc
or
jg
int3
or
or
mov
or
shrb
movsb
and
mov
cmp
fisttpl
movsb
pop
jge
push
add
and
pop
in
jge
cs
sbb
cltd
mov
cmp
mov
jl
stos
dec
dec
pop
jle
in
push
pushf
xor
es
lahf
xlat
pop
xchg
push
add
mov
inc
test
mov
in
mov
enter
pop
adc
push
or
sub
ja
xchg
mov
jne
std
movsl
xchg
xchg
and
xchg
lock
sbb
daa
mov
and
pop
pop
out
cmpsb
stc
js
jne
pop
stos
lods
lcall
std
fsubrl
fldcw
repz
mov
pop
out
jg
push
pop
mov
ret
mov
inc
ret
je
and
mov
push
cmp
es
idivl
testl
aaa
xor
mov
adc
sahf
popa
int
test
dec
inc
adcb
sub
lahf
push
daa
loop
jno
stc
jmp
je
pop
fisttps
adc
lods
xchg
lds
cmp
in
xchg
out
mov
outsb
xor
adc
lods
xor
lds
int3
cmc
xchg
add
xor
dec
rcrb
mov
pop
imul
adc
xchg
sbb
in
movsl
xor
push
out
lods
push
loop
xlat
add
sub
ret
sbb
dec
xchg
push
sti
adc
pop
gs
inc
loopne
gs
dec
jecxz
pop
inc
ficomps
rol
push
cld
repz
and
pop
dec
fidivrl
les
xor
test
pushf
cmp
shr
dec
sub
aad
movsl
mov
mov
hlt
aas
mov
push
jb
aas
fwait
dec
lock
je
les
es
in
sbb
int3
call
adc
test
mov
inc
dec
jmp
sub
stos
fimuls
inc
sbb
popf
xor
aaa
gs
or
repnz
mov
mov
fs
in
cmp
cmpsl
fimuls
mov
imul
lret
adc
add
addr16
lock
ljmp
fistps
aam
pop
mov
jo
mov
insl
and
dec
stc
popf
sub
add
popa
dec
dec
push
lods
add
sahf
mov
push
rorl
mov
rorl
fwait
scas
inc
add
add
test
mov
filds
fldl
jae
push
jl
xchg
repz
sbb
lea
rorl
add
stos
ljmp
xchg
sub
xor
push
dec
pop
xor
fbstp
xor
mov
sahf
xchg
or
jno
test
pop
cltd
ja
sub
dec
push
nop
xor
or
sub
fwait
sti
dec
in
xor
pop
add
lahf
cmp
int
sarl
pop
in
and
mov
pop
or
fnstsw
ret
addr16
jp
repnz
mov
mov
mov
rorb
jne
cltd
jno
or
jbe
add
std
jmp
push
sbb
add
mov
or
shrb
push
mov
xchg
insb
fsubl
jle
mov
in
out
iret
pusha
mov
iret
xchg
pushf
mov
pop
lcallw
pushl
mov
or
sbbl
ficompl
bound
sbb
insb
imul
sahf
scas
sbb
cmp
push
mov
push
inc
mov
add
leave
sub
adc
notl
loopne
scas
add
inc
popf
push
sahf
or
mov
pop
rorl
je
roll
sub
pop
out
inc
fdivrp
out
jo
pusha
sub
lds
mov
es
lds
shlb
insl
movsb
out
sbb
fs
xchg
push
push
jge
pop
test
xchg
pop
xor
fidivs
fdivs
pop
xchg
jl
xor
dec
int3
sbb
rclb
inc
xor
sbbl
push
aad
subb
ret
cmpsb
inc
cmp
cmpsb
add
int3
lods
enter
pop
push
rcrb
loope
movsb
and
or
cmp
dec
ds
shlb
movsl
cltd
adc
and
or
or
push
sbb
add
cmp
out
pop
push
mov
js
daa
roll
inc
sbb
lcall
add
sbb
sub
test
outsb
push
out
jp
int3
xor
xor
ret
call
mov
mov
mov
xchg
mov
rcl
out
push
ds
jne
jle
div
mov
aad
rol
add
xorb
enter
fs
push
mov
stc
mov
mov
inc
or
cmp
lahf
mov
in
cli
test
addr16
cmp
or
pusha
push
cmc
pop
lret
cmp
mov
ljmp
adc
fldl
add
inc
jecxz
lods
dec
lods
sbb
push
test
xlat
aas
arpl
mov
mov
inc
sti
rcl
incb
xchg
gs
jle
dec
inc
divl
inc
icebp
in
flds
arpl
repz
es
clc
cwtl
pop
sbb
lahf
fwait
push
movl
outsl
adc
pushf
in
sub
cmp
push
adc
sbb
mov
data16
adc
dec
addr16
je
clc
int3
jecxz
ss
lea
mov
iret
push
mov
rolb
ljmp
pop
dec
cmp
inc
movsb
adc
inc
sarl
jbe
push
jp
mov
lock
xor
mov
idivb
adcl
fnsave
mov
inc
xchg
in
cld
ret
lret
andl
mov
xchg
xor
cs
lcall
pop
shrb
push
jg
aam
cmp
mov
mov
xchg
enter
cmp
ljmp
mov
mov
sub
inc
mov
cli
in
add
pop
iret
cltd
out
mov
inc
cmp
dec
lods
mov
push
pop
clc
lea
xchg
and
movsl
add
pop
lock
stos
fstps
mov
xchg
outsl
notl
jmp
inc
xor
rclb
adc
rolb
daa
mov
aas
fs
into
push
inc
test
fidivl
pop
shlb
dec
dec
or
or
ds
fwait
sub
rcrb
sbb
add
mov
das
bound
mov
jle
push
scas
test
stc
mov
roll
or
jp
jge
mov
mov
inc
mov
and
inc
xchg
in
mov
pop
fucomip
push
push
xchg
rcr
and
cmp
test
add
das
out
xor
xlat
or
bound
push
fistps
mov
dec
aaa
pusha
insb
push
mov
jne
jle
lret
mov
repnz
icebp
push
pop
ret
fcomps
fwait
movb
jae
lcall
adc
mov
inc
xchg
shll
sbb
sub
imul
dec
push
mov
int
mov
push
push
cmp
mov
jb
arpl
sub
or
cmp
adc
scas
sbb
xchg
add
stc
sbb
fistpll
negl
les
sahf
popa
vaddsubps
shl
cmp
gs
or
dec
and
movsb
jno
mov
mov
mov
jge
xor
dec
lods
mov
cmp
push
push
pop
pop
xchg
push
mov
xchg
xor
fmul
push
lahf
adc
test
inc
push
hlt
lret
cmc
inc
xchg
inc
cmpsb
mov
in
pop
add
enter
pop
pop
shrb
cld
loope
aaa
enter
push
cmp
or
mov
push
movsl
and
movsl
out
sbbb
inc
sbb
lahf
xor
xor
stos
push
mov
cmp
outsb
loop
lds
cltd
lcall
sahf
fadd
popa
insb
sub
pop
jg
mov
fsts
pmuludq
jg
scas
push
mov
and
and
cmc
push
jo
loope
lods
push
inc
in
jmp
add
idivl
inc
lret
jbe
pop
stos
pop
mov
jae
sahf
cmpsl
add
test
loope
addb
outsl
pop
jl
loop
sub
je
push
adc
xchg
dec
roll
cmp
pop
cltd
and
mov
das
xor
fidivrs
neg
or
xchg
mov
cmp
xor
adcl
jbe
imul
jnp
add
mov
lods
fimull
xlat
jle
stc
sub
or
in
pop
outsl
xlat
sti
outsl
ret
push
arpl
gs
loopne
stos
fmuls
scas
dec
inc
add
into
fnstcw
push
adc
test
jecxz
mov
outsl
pop
cmp
push
ds
or
pushf
nop
test
jmp
push
jg
xor
aam
repz
sbb
jb
sbb
dec
fimuls
lcall
xchg
arpl
and
sti
movsl
dec
call
mov
mov
js
fimuls
jl
lods
scas
add
inc
sub
inc
out
out
das
cmc
xchg
jne
cs
sbb
mov
mov
idiv
ror
std
xor
cwtl
test
sbb
icebp
sbb
or
repnz
mov
cmc
lock
cmp
and
pop
dec
sub
outsl
jg
mov
pop
es
jg
insl
push
push
or
xchg
scas
jae
ljmp
clc
lods
fimull
outsl
mov
and
mov
mulps
jmp
sub
cltd
es
test
icebp
mov
mov
xor
push
xchg
fprem
enter
add
pop
sbb
imul
fwait
mov
pop
out
call
cmp
push
std
add
xor
or
iret
jle
sbb
push
xchg
pop
dec
xor
in
mov
fdivp
movsb
dec
cmp
jecxz
or
and
fwait
pop
ss
push
jns
lret
es
add
push
out
int3
dec
push
xor
test
mov
jge
mov
cmp
addr16
loope
idivb
mov
scas
jl
dec
std
inc
or
repz
mov
pushf
cmp
or
loope
cmpsb
sbb
jmp
lods
imul
out
icebp
cld
sub
into
xchg
push
push
negb
stos
arpl
push
pop
and
je
mov
push
in
test
iret
push
or
cmp
aam
filds
dec
jae
mov
dec
popf
cmp
xor
fiaddl
mov
imul
push
call
insl
inc
mov
test
ljmp
and
arpl
mov
decl
mov
mov
or
flds
stos
jmp
int3
lret
pop
inc
lret
inc
xchg
stos
lds
loopne
sti
xchg
scas
in
std
and
stos
cmp
cmp
push
push
out
mov
jbe
mov
sbb
xchg
jmp
cmp
cwtl
insb
jno
jb
jl
mov
lret
push
xchg
add
xor
aaa
dec
mov
jnp
mov
push
mov
sbb
cmpsb
or
xchg
in
inc
sbb
mov
dec
push
cmp
stc
sub
mov
scas
fidivs
movsl
cmpsl
pop
enter
xor
int3
sbb
inc
xor
pop
into
xor
lahf
mov
pop
or
pop
inc
mov
push
sub
inc
sub
sub
adc
ljmp
mov
mov
mov
into
bound
lock
int
imul
je
pop
idivl
sub
jo
movsl
push
jecxz
jno
jmp
dec
mov
test
incb
cmp
stos
loop
rolb
adc
notl
and
loopne
mov
idivb
adc
cmc
mov
punpcklbw
cmp
pop
lret
adc
outsb
jle
cmc
ljmp
pop
pushf
adc
sbb
adc
insl
pop
add
pop
jmp
mov
test
mov
mov
xchg
in
mov
mov
incb
leave
outsb
loopne
jmp
dec
add
pop
adc
push
mov
js
outsl
repz
es
xchg
jle
push
sbb
adc
test
push
adc
pushf
cmp
jmp
sbb
aad
xor
nop
inc
push
push
cwtl
dec
push
add
je
pop
mov
push
xor
and
clc
lea
leave
call
dec
cld
push
mov
and
shlb
fcmovnu
push
outsl
pop
xchg
rol
inc
mov
push
or
mov
mov
inc
out
rcll
out
std
fisubrl
cwtl
fs
fildl
jl
push
icebp
lock
cld
sbb
lret
popa
mov
sbb
in
jg
inc
and
shl
call
aam
movsb
test
sbb
roll
pop
dec
dec
ljmp
ljmp
jp
inc
lods
cmpb
xor
mov
mov
frstor
pop
sub
test
pop
mov
adc
fnsave
addr16
add
in
jmp
cmp
push
xchg
pop
inc
adc
stos
mov
test
dec
shll
cmovg
xor
ficomps
xor
sbb
or
in
xor
xchg
cmp
inc
mov
dec
pushf
mov
std
ja
mov
hlt
inc
cmp
sbbb
sub
xor
ss
push
xchg
out
stos
addr16
bound
sub
in
mov
xchg
dec
mov
idivb
repz
cmp
sub
or
lcall
into
mov
mov
cs
fildll
notl
jmp
ja
adc
lea
cmp
leave
ds
push
pop
push
in
stos
push
fsubs
jbe
sbb
add
jbe
xchg
jle
fsubs
pusha
pop
jae
iret
scas
lret
push
ret
pop
pop
or
adc
and
popf
popa
popa
scas
mov
add
push
fidivl
inc
add
leave
rorb
int
scas
inc
push
das
jne
adc
fs
sti
movb
nop
pop
in
fsubrs
lods
arpl
sti
ret
inc
cmpsb
xor
or
xor
stc
or
mov
inc
add
pop
je
rcr
in
jle
cmc
inc
mov
push
mov
scas
ret
jg
and
cli
push
movsb
xchg
dec
jbe
fsubl
scas
xor
fucomi
push
cmp
mov
test
jae
sbb
push
jns
sti
xor
xchg
in
lahf
push
sbb
fisubrs
mov
lods
inc
in
adc
sub
pusha
enter
pop
or
pusha
scas
loope
leave
sub
sub
cmp
scas
xor
and
mov
stc
xor
cmp
rclb
out
pop
mov
add
ret
mov
push
jg
push
fcompl
or
sub
bound
rol
push
dec
jg
sbb
mov
adc
mov
inc
aad
mov
adc
ds
inc
scas
push
int
add
sub
jnp
idiv
push
lret
xchg
roll
ret
sbb
pop
loop
testl
fsubrs
mov
scas
stc
repz
mov
adc
stos
shll
pop
cmp
rolb
out
ret
sar
inc
lods
sbb
mov
jb
fsts
ds
push
loop
cmc
mov
shlb
ds
pop
mov
push
movsb
imul
jl
iretw
inc
jne
add
fisttpll
cld
mov
sub
cs
in
cmc
xchg
mov
test
pop
shl
sub
dec
pop
sub
inc
sub
fldenv
in
int
adcl
xchg
inc
pop
es
push
cltd
inc
mov
pop
inc
adc
xchg
pushf
out
sub
repnz
testb
nop
sbb
fidivrl
pop
shll
int3
lahf
or
jecxz
push
xor
daa
fbld
leave
out
call
or
push
mov
incb
stos
dec
rcr
or
pop
ss
dec
inc
and
into
das
mov
fbld
adc
xchg
test
in
ja
subl
cwtl
pop
xchg
pop
mov
and
inc
aad
lret
shrb
inc
mov
lods
mov
pop
icebp
lock
clc
adc
arpl
shlb
imul
ret
lods
test
es
cwtl
sbb
push
dec
int3
dec
in
lods
xchg
sub
pop
ljmp
mov
mov
xchg
mov
xchg
jmp
mov
outsl
loopne
movhps
inc
cltd
xchg
insb
sub
stos
ljmp
mov
mov
add
pop
sbb
jge
pop
icebp
cmp
stos
cmpsb
cs
scas
xor
inc
dec
notl
jne
dec
pop
mov
sbb
sbb
or
dec
xchg
dec
add
test
lret
add
pop
sarl
dec
and
xor
push
insb
sti
fwait
mov
inc
push
mov
mov
add
xor
bound
adc
jns
fs
dec
xor
ja
jb
and
scas
mov
jp
push
mov
mov
mov
dec
ret
cmovo
faddl
mov
rcrl
dec
icebp
fists
and
pop
xchg
inc
cmc
aam
jo
jnp
adc
and
les
push
stos
dec
stc
sub
lea
insb
stos
xchg
jnp
stos
pop
jle
int
in
stos
movsb
pusha
notb
iret
push
mov
mov
cltd
pop
inc
ja
inc
mov
inc
push
and
stc
popf
mov
sbb
adcb
xchg
and
sbb
inc
scas
imul
mov
jbe
xor
mov
xchg
mov
dec
push
mov
hlt
and
dec
inc
test
in
push
in
sbbl
mov
mov
pop
mov
add
ret
shlb
jae
mov
add
cmp
lahf
movsb
adc
mov
adc
mov
push
jmp
sbb
icebp
daa
ficompl
dec
lea
jl
fwait
mov
push
pop
lds
out
in
in
and
push
and
ds
push
fidivs
cmc
push
cmpsb
adc
loope
loop
sub
dec
mov
sti
loope
enter
mov
cmp
push
jg
and
inc
movsl
mov
or
mov
mov
dec
sbb
int3
mov
leave
sub
repz
cltd
pop
mov
dec
js
mov
mov
xchg
popf
sub
sbb
shlb
arpl
test
sub
and
xchg
inc
push
dec
cmp
cld
sub
push
idivl
push
jno
sbb
and
sahf
nop
js
test
inc
sbbb
repnz
shll
adc
je
ss
pop
cmp
mov
jno
mov
scas
sbb
mov
cmp
mov
mov
xor
ljmp
in
jle
fcmove
aaa
adc
adc
imul
or
push
mov
pushf
mov
xor
cmp
dec
sub
xchg
jmp
in
pusha
ljmp
int3
jecxz
xlat
push
popf
loopne
test
dec
mov
or
int3
les
jns
xchg
add
sbb
cmp
ja
pop
inc
adc
adc
push
mov
jmp
lea
pop
cmp
nop
notl
cmpsb
mov
push
dec
inc
loope
je
adc
jno
scas
sub
adc
push
popf
adc
mov
cmp
cmp
adc
cmp
mov
das
xchg
cmc
lret
mov
int3
mov
and
xchg
lock
or
les
std
sub
pop
cwtl
fcmovu
fsubl
loop
adc
sahf
xchg
inc
cld
outsb
pop
nop
lret
aas
pop
lahf
mov
xchg
mov
lret
mov
pop
adcb
sub
and
cmp
add
rcl
shrl
out
dec
loopne
inc
xchg
imul
ljmp
push
lods
sbb
mov
mov
cmp
or
mov
jbe
sub
bound
cltd
lret
push
add
xchg
push
push
sub
clc
jns
inc
xchg
jge
roll
cltd
or
imul
xor
xchg
mov
xchg
int3
sar
insl
push
dec
xor
loop
inc
jecxz
xor
outsl
mov
xchg
fisttpl
mov
test
cwtl
jns
sbb
jbe
imul
adc
bound
add
arpl
out
imul
add
fimull
cs
call
push
mov
imul
pop
mov
lret
sbb
loopne
cmpsb
popa
xchg
jne
addr16
fildll
cs
pop
add
pop
inc
cmp
cmp
jae
xchg
fneni(8087
sub
mov
xchg
pop
stos
mov
push
insb
push
ret
loopne
aam
jp
fidivs
dec
pusha
xchg
inc
lods
iret
insl
push
mov
pop
jns
gs
xchg
loop
jae
mov
xchg
popf
scas
rorl
test
xor
mov
leave
xchg
ja
cmp
negb
jno
mov
push
mov
lds
repnz
fistpll
arpl
dec
cld
inc
lods
or
or
mov
stos
pop
js
xor
add
inc
int3
mov
adc
sub
jge
dec
mov
or
loop
sub
movsb
popf
xchg
jne
fsubrl
int3
jge
mov
daa
fsts
cmp
jno
mov
test
mul
orb
xchg
push
xor
dec
dec
loopne
xchg
xchg
stc
push
hlt
add
push
and
lds
dec
dec
cmpsb
xchg
jnp
in
clc
mov
pop
pop
mov
mov
loope
jmp
sub
mov
xchg
inc
pop
test
pop
or
movsl
push
testb
push
js
idivl
xor
test
mov
mov
insl
mov
pop
rorl
lcall
xchg
fdivl
pop
sub
leave
mov
jnp
out
mov
jne
mov
xchg
insb
mov
sbb
and
inc
aas
int
jecxz
sub
push
in
jp
loop
ja
shll
sbb
out
sahf
xor
mov
xorb
jl
cmc
push
push
stc
xor
negb
adc
pushf
out
push
bound
cmp
inc
inc
out
jmp
cli
test
mov
pusha
fmuls
das
test
or
pop
ror
pop
xchg
aas
xchg
inc
xor
mov
pop
stc
dec
adcl
add
imul
cmp
data16
add
cmp
xlat
jp
cmp
jbe
mov
lret
adc
out
inc
jge
fisubrs
cwtl
dec
sbb
fxch
fsts
dec
repz
sbb
jnp
mov
jle
adc
lds
jmp
in
cmp
aad
inc
and
inc
mov
test
je
ljmp
sub
mov
call
mov
cmpl
cli
dec
fldt
daa
pop
jl
pop
inc
inc
scas
fldl
insb
pop
das
jno
jb
jp
and
jecxz
lods
roll
cwtl
xchg
int
cmpsl
fcomp
mov
adc
xor
cltd
sub
pop
mov
idiv
mov
mov
negb
mov
mov
aam
adcl
sub
insl
in
aam
dec
fisttpl
xchg
stos
js
ljmp
add
sti
mov
inc
std
shlb
aad
pushf
add
dec
cltd
add
filds
test
push
sbb
fucomp
jo
clc
mov
xchg
in
sbb
sbb
pop
fmuls
pop
inc
pop
cmp
je
lea
imul
cmp
shrb
xor
pop
mov
and
sbb
rorl
xchg
test
cli
or
mov
scas
inc
add
pop
or
add
fwait
adc
jmp
add
inc
cmpsl
je
dec
fsts
bound
popf
enter
js
gs
aaa
leave
mov
test
cltd
es
and
fisubs
call
mov
lret
outsb
mov
mov
in
dec
mov
pop
mov
pop
das
fisttps
or
lods
xchg
fcom
sbb
mov
imul
stos
sub
mov
jg
stos
das
ljmp
adc
fstpt
xchg
mov
loope
jmp
dec
nop
iret
int3
push
mov
pop
mov
jo
lahf
xchg
cmp
jmp
push
test
inc
cld
mov
and
ficoml
jns
into
lods
negl
jl
imul
scas
insl
jae
push
add
pop
adc
jns
adc
push
repnz
mov
hlt
mov
pop
int3
inc
scas
cmp
mov
mov
or
mov
add
pop
add
or
mov
push
shlb
scas
pusha
hlt
test
inc
and
enter
das
push
sub
aad
mov
sti
lret
lret
scas
push
inc
jno
dec
pop
jl
enter
mov
shll
mov
pop
or
cwtl
jl
insb
jae
push
jmp
dec
inc
xchg
faddp
cmpsb
pop
in
in
fbld
enter
pop
lret
push
add
loopne
add
mov
cmp
and
ret
pushf
xor
repz
jno
add
pop
cmpb
sbb
mov
cmp
xor
js
jns
pop
inc
cltd
rcrl
test
fldt
jl
pusha
outsb
cmpsb
push
adc
push
je
jg
pop
les
jae
add
adc
push
push
mov
int
sub
idivl
dec
ror
orb
dec
cmp
mov
dec
sbb
xor
test
outsl
mov
orb
jg
fs
adcb
pop
cmp
lcall
fadds
and
out
inc
cli
fcmovne
adc
cmp
cmp
mov
lds
cmc
push
mov
xor
ficomps
aam
adc
es
adc
jl
add
data16
pop
mov
clc
mov
jo
xlat
mov
adc
or
fcmovu
jo
adc
and
stc
mov
dec
jl
add
fldenv
lret
xchg
mov
pause
fstl
xchg
mov
jae
add
std
aas
enter
sahf
imul
out
mov
cs
and
nop
lods
xor
aas
in
daa
jb
dec
xchg
dec
xor
je
push
add
xor
or
pop
or
mov
dec
sahf
mov
push
lods
adc
popl
fistpl
jb
inc
into
cli
push
jne
data16
push
dec
ret
outsl
cwtl
mov
outsb
xchg
nop
rcl
or
testb
std
jbe
push
cwtl
push
dec
pop
cmpsl
xlat
sbb
icebp
dec
icebp
data16
les
ror
sbb
mov
mov
fisubrl
lock
push
mov
shlb
js
sub
push
ss
pop
mov
fldenv
out
out
lea
and
inc
imull
mov
push
and
inc
movsl
mov
xor
je
mov
xchg
cltd
cmp
cmp
or
xchg
adc
loope
out
test
xchg
mov
shrl
stos
adc
xlat
jbe
xchg
sbb
push
inc
mov
ljmp
inc
add
das
and
xor
sahf
out
xor
mov
dec
cmp
test
out
imul
add
fwait
js
xchg
dec
xchg
or
pop
push
test
ja
push
jne
add
out
daa
pop
sbb
mov
jns
out
in
mov
xchg
xchg
mov
mull
pop
filds
addr16
add
jp
test
mov
fnstenv
xchg
jne
test
mov
cmp
fbld
dec
shr
xor
xchg
mov
xchg
push
out
lods
sub
mov
repnz
pop
jmp
stos
mov
out
insb
in
mov
jnp
ret
sbb
gs
call
gs
sub
mov
pop
out
rolb
jg
clc
pusha
rclb
insb
das
inc
popf
std
mov
mov
decl
icebp
xchg
and
jae
dec
dec
repnz
rorb
stc
push
dec
sbb
adc
mov
arpl
inc
and
leave
insb
repnz
add
out
pop
lods
test
or
sbb
pop
aaa
sub
add
popf
les
leave
xor
xor
fidivs
loop
adc
mov
xorb
and
add
dec
movsb
mov
push
jp
cmp
cltd
add
jae
sbb
jnp
loop
mov
jl
sbb
dec
aad
bound
add
fisttpll
incb
movsb
lahf
iret
and
push
lcall
push
mov
mov
cmpsb
lcall
enter
pop
or
push
imul
loope
popf
xchg
lcall
lea
push
movsl
lret
and
mov
xchg
sbb
data16
or
cltd
fwait
cmp
or
rolb
pop
mov
or
push
fstpt
fadd
dec
mov
outsb
or
in
adc
xor
cmpb
stos
mov
movsl
icebp
mov
jp
mov
sahf
pop
and
xor
int
push
out
fildl
nop
idiv
dec
pop
lret
jno
loop
and
cmp
sahf
jns
and
sub
xor
loop
cs
stc
mov
repz
adc
out
cmp
mov
and
push
ljmp
test
mov
adc
dec
cmc
int
dec
xor
pop
push
adc
mov
adc
adc
lods
mov
inc
mov
clc
push
je
pop
pop
mov
in
mov
pop
mov
gs
nop
mov
dec
fistl
inc
jbe
dec
flds
rcll
pop
jne
xchg
dec
repnz
cmp
xchg
mov
jb
adc
popf
sbb
stc
pop
adcb
aad
aas
cmpsb
nop
mov
aas
or
jb
mov
dec
test
pusha
je
xchg
mov
sahf
dec
enter
jb
sbb
mov
outsb
inc
mov
dec
cmp
push
clc
pop
fcmovnb
fwait
xchg
pop
ret
inc
push
stos
mov
das
das
jl
mov
icebp
jge
and
xchg
dec
shll
dec
div
lea
repnz
sbb
gs
cmpsl
xlat
adc
jnp
and
and
pushf
cld
out
aad
lret
mov
sbb
stos
inc
pusha
pop
fbld
rolb
pop
mov
fistps
gs
call
cmp
mov
and
pop
ljmp
arpl
insl
push
mov
dec
xchg
jae
fisttpl
popa
setae
movsb
add
in
test
mov
push
sahf
fidivrs
cmp
ret
xchg
push
sbb
cli
roll
ret
in
pop
popf
and
stos
cli
shr
cmp
setne
or
pop
dec
decl
test
xchg
or
cmpsb
mov
repz
push
arpl
dec
lahf
pop
in
test
jns
ja
mov
add
rcll
mov
ret
fwait
jae
scas
push
dec
test
add
ja
mov
push
cmp
bound
stc
jns
scas
mov
jnp
push
xchg
aad
sbb
out
popf
pop
lcall
jp
cld
aas
mov
and
mov
and
dec
pop
jne
pop
add
loop
cmp
xchg
cwtl
mov
repz
outsb
cld
push
subl
sub
mov
adcb
sub
jmp
jo
jnp
test
jle
sub
in
cmpsl
dec
pusha
bound
ret
jmp
inc
mov
fdivl
sbb
push
das
shlb
mov
jle
fcomp
mov
arpl
call
pop
arpl
xchg
jge
adc
shrb
push
icebp
push
repnz
hlt
dec
ss
es
test
mov
or
xchg
sbb
aaa
call
lods
mov
int3
dec
sbb
pop
pop
add
lds
popa
daa
scas
push
push
and
idivb
dec
dec
sti
movsb
ds
lret
push
leave
push
lods
jbe
sub
icebp
mov
mull
dec
cmp
adc
jl
inc
pop
dec
inc
mov
pusha
xor
pop
add
push
insl
fs
test
cmpl
das
cmpsb
sbb
arpl
enter
pop
dec
in
xchg
push
popf
fndisi(8087
push
sub
fidivrs
in
rcrb
mov
inc
movsl
rcll
pop
hlt
cmp
or
addl
aam
decl
js
mov
pop
ds
lcall
int
jb
stos
sub
add
mov
rorb
in
lcall
mov
clc
mov
pop
shlb
lcall
rcrb
sub
push
divl
adc
lret
dec
enter
in
sahf
sbb
dec
test
dec
clc
outsl
jbe
jmp
scas
femms
stc
pop
adc
fs
jo
adc
test
dec
cmp
ja
and
test
inc
mov
mov
pop
ret
mov
shlb
cmc
xchg
and
pop
push
call
mov
adc
sti
pop
add
add
lods
xchg
mov
xlat
aaa
test
mov
or
dec
sti
cmp
mov
pop
jnp
das
adc
dec
cmp
and
fnstcw
nop
jecxz
mov
push
mov
sbb
ja
push
cmp
cli
pop
adc
shlb
mov
sbb
in
lahf
aad
aam
nop
arpl
and
ljmp
dec
mov
push
lods
xchg
add
int3
sahf
mov
push
jmp
jae
add
mov
cld
fcomi
fwait
lret
pop
gs
inc
fdivrl
sbb
push
mov
mov
test
mov
shll
jns
rcr
stos
std
les
cwtl
push
in
aad
ds
cli
fiaddl
lret
sti
dec
mov
or
mov
jp
lock
inc
loopne
mov
rcl
ja
sub
mov
std
ret
ja
inc
filds
mov
lock
xchg
addr16
or
mov
int
mov
inc
into
outsb
and
jbe
or
add
pop
adc
mov
imul
sub
jge
xchg
sbb
outsb
mov
dec
jno
stos
push
xchg
push
out
popf
mov
xchg
cmpsl
dec
sahf
push
cli
out
sbb
jmp
adc
sbb
sbb
xchg
pop
dec
push
pop
xor
pop
jle
dec
loop
jns
lds
or
popf
pop
fwait
mov
ds
add
xchg
jmp
out
in
pop
clc
jae
jns
sbb
in
scas
cs
and
cli
mov
push
addr16
push
push
cli
addr16
daa
nop
mov
xor
mov
mov
xor
xor
js
repz
cmp
xchg
imul
repz
lds
lahf
rcrl
sti
cmc
int3
or
dec
shrl
add
iret
jnp
push
clc
jle
jecxz
in
loopne
pusha
std
xor
jmp
pop
jg
push
mov
inc
shrb
push
bnd
cli
mov
std
jae
fisubrl
std
xchg
rcr
sti
sbb
add
mov
push
flds
sar
in
icebp
jg
repnz
or
leave
pop
xchg
mov
arpl
sub
or
adc
hlt
or
xor
lret
jge
int3
aaa
inc
sbb
fidivs
or
push
std
mov
and
bound
leave
mov
jbe
das
jle
cwtl
in
pop
sbb
in
aad
lret
ds
inc
rorl
loop
push
lret
push
shlb
mov
adc
inc
cwtl
insb
test
dec
loop
inc
aas
cmp
cmpsb
mov
mov
pop
xchg
cmp
stc
outsl
loope
loopne
sub
enter
stos
mov
shll
push
movsl
fsubs
mov
mov
dec
sbb
adc
mov
mov
ret
pop
jne
xor
add
pop
mov
jne
push
mov
enter
pop
sub
sub
push
push
adc
out
lcall
cmpsb
rorb
dec
jno
and
out
push
pop
aam
int
push
or
sarl
divl
out
pop
pop
rcll
cmp
sbb
mull
pop
push
outsl
push
lret
int3
loop
and
ds
inc
jne
dec
loope
arpl
xor
xor
add
mov
sbb
xor
jecxz
out
and
cmc
pop
insl
inc
xor
add
js
adc
mov
adc
cmp
data16
sub
sub
shrl
hlt
lods
mov
ja
scas
sti
out
adc
jnp
pushf
gs
add
loopne
fildll
cltd
add
inc
pushf
adc
fnstenv
and
repz
jo
xchg
rcrl
mov
cmp
lahf
test
xor
sahf
pushf
call
adc
mov
nop
ds
pop
movsl
sahf
dec
xchg
les
je
xchg
push
jecxz
add
xor
or
iret
mov
mov
aaa
adc
xchg
and
dec
sub
pusha
xchg
pop
or
inc
arpl
into
das
in
jmp
jge
pop
test
clc
sarl
push
std
imul
cwtl
orl
loope
scas
icebp
roll
iret
lret
push
cli
mov
pop
lock
pop
rcrb
sbb
lds
aam
xor
push
movsl
hlt
es
cwtl
movsl
dec
dec
xor
jle
xchg
popa
xor
mov
fs
mov
push
jns
add
clc
loope
fidivrs
test
roll
and
jae
mov
sti
xchg
sub
rolb
dec
shll
mov
inc
clc
fucomi
add
clc
xchg
out
fisttpl
aad
cltd
decl
wbinvd
xchg
shll
jae
dec
mov
pop
or
dec
insl
aas
pop
test
dec
cmp
dec
aad
adc
inc
xchg
or
and
fwait
shrl
push
xchg
in
adc
in
filds
lods
jg
out
les
lock
sub
in
sub
jae
jmp
add
test
xor
xor
jp
push
shll
lock
mov
fcomps
dec
adc
stc
mov
add
push
xchg
ds
pop
jmp
add
add
and
push
or
dec
push
and
cmpsb
xor
sub
shlb
and
cwtl
sub
je
and
jp
inc
lret
mov
jae
pop
movsb
push
mov
mov
mov
jl
push
ficompl
out
xchg
sub
mov
imul
scas
stc
mov
push
and
adc
repnz
int3
sub
rcr
jl
in
add
inc
cmp
inc
mov
mov
push
data16
or
push
add
dec
and
mov
mov
aas
cld
lds
sti
scas
fadd
and
sbb
push
addr16
xchg
jbe
test
xchg
fbld
inc
cmp
or
push
imul
ljmp
rdmsr
pop
lahf
sub
insl
push
adc
cmp
push
pop
fbld
into
loopne
cmpsb
and
or
jnp
jo
or
push
or
loope
mov
sub
push
mov
dec
dec
outsl
notb
sbb
pop
into
pop
popl
mov
and
cli
sbb
jns
sub
test
pop
pushf
xchg
aad
ds
test
mov
fmul
jno
sub
ror
outsb
xor
adc
ret
jg
jns
mov
xor
dec
mov
jl
push
sbb
sub
divl
lods
xchg
cmpsl
shr
mov
push
jae
jmp
and
push
dec
outsl
xor
pushf
loop
outsb
icebp
stc
enter
push
mov
cmpsb
leave
cmp
in
pop
mov
mov
pop
cli
cmpsl
jns
xor
push
lret
or
adc
xchg
cmc
and
aad
lods
out
xchg
or
adc
ret
out
in
push
add
adc
icebp
lods
push
mov
and
xlat
mov
sub
lcall
xchg
cmp
sahf
adcb
push
sub
sarb
scas
loope
fldenv
jne
repz
aam
xchg
xchg
in
sbb
in
iret
add
cmp
leave
adc
jo
pushf
xchg
adc
into
cs
adcb
sub
pusha
std
cltd
jb
xorb
mov
stc
jecxz
ret
cmp
xchg
lea
push
xchg
mov
loop
mov
push
subl
call
gs
ljmp
das
int3
addr16
jmp
and
adcl
cmpsb
jmp
push
rcrl
std
adc
repz
shrl
icebp
test
adc
jo
jne
fldcw
pop
mov
test
out
cmp
and
jl
sub
divb
ret
xchg
in
adc
insl
outsl
ret
fisttpl
inc
add
in
mov
popa
dec
adc
lods
popf
js
mov
xchg
out
lods
ret
sbb
add
adc
je
pusha
dec
mov
cmpsl
int
scas
into
sub
fistpl
jmp
jnp
lea
sbbl
pop
sahf
xchg
out
arpl
xor
jns
jmp
sbb
xor
or
push
adc
jmp
mov
pop
or
dec
aam
adc
xchg
xchg
out
enter
repz
jb
add
pop
add
enter
mov
pop
lea
loope
in
divl
mov
add
fdiv
mov
xor
rcrl
mov
xchg
adc
pop
jne
fdivl
repz
fbld
cmp
adc
jmp
iret
xor
out
in
mov
leave
pop
mov
push
push
fldcw
fsubrs
jnp
icebp
jle
xor
in
jg
pusha
xor
fs
xor
jecxz
inc
or
jae
loopne
push
js
scas
popf
cltd
inc
test
sti
push
push
xorl
dec
scas
pop
cmc
jp
call
nop
inc
mov
xchg
rcrl
enter
sub
arpl
je
or
or
cmc
aaa
and
push
push
add
ljmp
jne
fdivrp
sahf
lds
in
mov
and
mov
push
mov
in
jbe
xchg
lds
cmc
sub
lcall
cmp
leave
arpl
leave
dec
xchg
jnp
push
xchg
jno
xor
push
movsb
lahf
dec
inc
push
out
popf
test
loop
push
inc
pop
lret
jl
cmpsb
mov
xor
mov
mov
cmp
sub
inc
mov
cli
lods
xchg
sbb
movsl
out
mov
filds
mov
sbb
test
xor
jl
dec
add
pop
ret
inc
cmp
clc
mov
mov
scas
notb
mov
mov
outsb
xchg
fisttpll
fnstenv
rcrb
addr16
or
mov
hlt
imul
xor
pop
loopne
sub
push
hlt
push
leave
sarl
inc
mov
cltd
jb
sbb
xor
test
dec
adcb
outsl
adc
loop
in
push
fs
cmp
ljmp
cmp
test
fucom
mov
or
xor
lcall
popf
int
imul
xor
jmp
or
sti
ljmp
xor
call
enter
test
xlat
hlt
xor
mov
dec
pop
cwtl
sti
inc
adc
inc
popf
in
or
mov
push
mov
mov
and
fstpt
repz
jl
xchg
pop
sbb
inc
cmp
add
mov
leave
mov
pushf
sub
addb
push
in
aad
in
nop
hlt
inc
jmp
call
inc
dec
test
pop
jecxz
mov
aas
out
cmp
lds
popa
mov
adc
fidivs
lods
add
in
fildl
sub
inc
jno
pusha
inc
cld
or
sbb
or
and
idivb
std
mov
andl
inc
outsb
xchg
icebp
jg
mov
lret
dec
cmp
mov
xlat
push
pop
lret
int3
pop
pop
mov
rorb
ret
or
ret
and
lcall
rol
dec
mov
clc
insl
ljmp
data16
or
mov
push
inc
mov
add
data16
dec
sahf
push
test
add
push
stos
jge
fst
repz
push
ja
xchg
fs
sbb
out
xchg
shll
test
jecxz
push
push
scas
out
lret
enter
cmpsl
push
mov
je
xor
jl
xor
roll
jle
add
cmp
addr16
loope
dec
mov
aas
movsl
or
stos
leave
fwait
das
cmpsb
and
add
jecxz
or
subb
bound
cmp
cmpsl
sbb
xchg
adc
fidivrs
xchg
jp
loopne
mov
cmp
inc
sub
mov
push
dec
fisttpl
jne
and
dec
into
add
inc
push
movsb
xchg
in
cmp
fsubrs
pushf
sub
cmpsl
out
xor
or
pop
stos
loope
and
mov
add
cmp
cmp
or
shlb
push
mov
push
xor
ret
lods
pop
cli
lock
inc
loope
sti
jae
stos
mov
cmp
xor
inc
adc
inc
jp
fiaddl
push
imul
out
scas
mov
repnz
adc
xchg
out
mov
hlt
jnp
dec
arpl
xchg
inc
roll
mov
xchg
push
in
push
add
scas
mov
and
ficomps
mov
rorb
int3
scas
lcall
cmp
jp
movsb
push
jecxz
add
imull
shlb
shlb
loope
inc
jno
dec
sti
jl
sub
dec
push
je
push
xor
lds
cmpsb
push
mov
das
loopne
lods
aam
inc
in
stc
or
sub
sbb
dec
pmulhw
mov
pop
pop
push
inc
xlat
loope
sarl
ds
jecxz
test
ret
in
xor
and
push
xor
fstpl
call
stos
mov
pop
aaa
xchg
or
js
lcall
cvtps2pd
push
mov
xchg
fcompl
add
sub
movsb
cmp
ss
adc
js
js
push
inc
into
mov
lods
lret
in
ds
mov
mov
int
jge
sub
pop
divl
adc
mov
sbb
pop
sahf
test
roll
jo
push
outsl
repnz
loop
popf
jns
ss
fs
stos
jmp
cmp
adc
cmp
arpl
out
xor
mov
inc
pop
fsubrl
into
dec
dec
imul
stos
push
xor
pop
rolb
adc
inc
xor
dec
mov
add
push
loope
and
xlat
xor
sub
inc
mov
sti
hlt
imul
in
mov
sbb
loopne
mov
mov
fsts
iret
jo
push
and
push
in
cmp
mov
cmp
sahf
pop
fsubl
std
adc
and
jno
sbb
jno
jge
rcll
ss
iret
mov
aas
sahf
xor
dec
sti
cld
leave
je
add
jecxz
push
popf
movb
lea
and
mov
ret
cli
mov
lods
lret
sbbl
add
mov
rcrl
notl
inc
clc
repz
xchg
xchg
das
mov
mov
mov
jo
lods
mov
neg
xchg
jbe
pusha
push
mov
mov
mov
rorl
mov
push
pop
sahf
cld
xabort
lret
mov
cmp
subb
jb
xor
shlb
out
sub
inc
jle
mov
jb
jmp
dec
insl
cmp
in
xchg
arpl
cli
ljmp
lods
lods
jae
cmp
int
adc
loop
bound
outsb
popf
mov
cli
jmp
cltd
andl
mov
std
stc
push
insl
xor
std
cld
stc
clc
push
arpl
xchg
push
sbb
repnz
sarl
jmp
stos
or
pop
add
push
out
rcrb
or
inc
cltd
xor
or
mov
arpl
dec
mov
aam
ja
mov
dec
scas
jg
inc
and
or
lods
aam
pop
addr16
add
mov
out
popa
outsb
ljmp
aaa
jo
xor
xorl
inc
push
insl
xor
daa
fsubrl
mov
fnstenv
mov
jae
jl
mov
int
mov
daa
push
fbld
fistl
iret
dec
hlt
xchg
cmpsl
pop
xorl
out
out
sub
xchg
cmp
push
rorl
stos
push
pop
test
insb
outsb
jbe
jnp
mov
mov
adc
dec
iret
gs
lock
jg
xor
sbb
push
dec
outsl
popf
out
jae
andb
fidivl
sbb
sbb
push
das
imul
gs
and
lea
cmp
loop
repnz
leave
mov
jne
arpl
jo
les
push
mov
dec
smsw
mov
sub
dec
xchg
sbb
inc
cmp
cmp
jmp
scas
jns
push
dec
lea
cmp
lahf
shll
adc
int3
push
jge
xchg
sbb
mov
daa
rorl
mov
jl
jns
dec
outsl
and
push
push
pop
adc
and
loope
mov
mov
outsl
iret
test
js
repz
jnp
push
in
xor
repz
pop
cmpl
adc
loope
adc
sub
push
jae
pop
mov
cmpsl
movsl
hlt
cwtl
and
cltd
rorb
add
sbb
call
xor
out
push
into
xchg
lret
push
adc
pop
mov
mov
inc
fmul
or
add
test
out
rclb
dec
jg
and
mov
pop
pop
mov
and
xchg
cltd
outsb
push
gs
int
sbb
mov
adc
daa
xlat
ret
mov
xor
jbe
and
cmp
inc
sub
loop
adcl
xor
adc
inc
and
push
pop
jl
mov
xchg
cli
inc
pop
mov
cmp
pop
or
stos
sub
into
das
xor
and
xlat
fwait
mov
icebp
loopne
adc
mov
out
mov
dec
insb
lods
or
mov
xor
jb
xchg
sub
push
test
out
push
in
and
sti
mov
mov
gs
xchg
mov
dec
adc
mov
icebp
jp
repz
and
jnp
fdivrs
sahf
and
or
adc
xchg
jmp
jge
cs
push
aad
fwait
popa
nop
stos
cmp
aas
cmp
dec
mov
jb
ljmp
lcall
iret
lcall
cmp
mov
xor
rcrl
loope
push
pop
xchg
mov
es
xor
dec
mov
cmp
cwtl
sar
bound
negb
mov
sub
shlb
pop
icebp
sub
scas
cmc
lret
es
pop
mov
pop
or
int
iret
pop
cltd
jno
shl
add
sub
imul
outsb
inc
sahf
insl
and
orl
inc
cmp
dec
test
popa
lea
pop
lods
fisubrs
out
das
mov
mov
js
jbe
jge
push
bswap
push
jg
or
push
xchg
test
ljmp
xor
cmc
clc
mov
dec
xchg
scas
mov
pushf
stos
dec
rcll
jecxz
pop
lahf
pop
mov
cld
and
out
mov
xchg
or
in
add
or
pop
mov
push
xor
xchg
dec
mov
lds
or
inc
ja
or
dec
mov
into
add
addl
in
gs
sbb
in
add
cwtl
sub
xlat
jmp
pop
in
pop
in
scas
mov
out
mov
cld
test
jp
mov
mov
popf
cmp
mov
gs
dec
mov
fcompl
mov
xchg
mov
xchg
mov
xchg
xor
addl
mov
cs
sub
xchg
dec
fistl
push
mov
and
xor
fldenv
cwtl
jnp
push
cli
jle
int
in
fiaddl
pusha
add
mov
les
insb
ret
fstps
divl
testl
les
shll
popf
push
mov
mov
js
lahf
cmc
lock
xchg
sti
sbb
jns
imul
mov
push
cmp
rcll
add
mov
mov
aas
leave
lods
bound
arpl
inc
cwtl
or
jns
ss
bound
cmc
or
inc
ljmp
int3
pop
fsubp
jne
pop
sarb
sbb
and
xchg
imul
push
mov
push
mov
cmp
daa
shlb
pop
cmp
mov
jl
cltd
mov
push
inc
push
cmp
aas
jo
xorl
test
jecxz
pop
cmpsl
add
inc
sbb
inc
or
jg
das
js
in
pop
mov
xchg
ret
push
dec
pop
loope
jnp
sub
mov
push
addb
sti
fmul
and
add
cld
cmp
adcb
and
push
out
add
stos
adc
mov
call
pop
cmp
jne
cmp
lcall
xor
je
sub
hlt
test
outsb
mov
inc
mov
cs
jg
push
pop
mov
mov
mov
lret
les
adc
int
lea
cmp
divl
stos
cmp
sbb
roll
mov
test
js
sahf
out
dec
adc
cmpsb
mov
outsl
mov
in
and
shll
adc
icebp
jne
mov
mov
fcomp
sub
scas
movsl
inc
cli
jae
xor
out
dec
dec
cmp
mov
or
xchg
adc
adc
xor
adc
adc
adc
adc
pop
mov
data16
cwtl
lods
icebp
cmp
wrmsr
xchg
xlat
mov
mov
sub
push
in
mov
cli
sub
mov
rorl
inc
dec
je
xor
sub
cld
jns
repz
xchg
mov
xor
fsts
pop
inc
in
xor
xor
cld
jmp
sarl
lahf
aad
mov
aas
fdivl
jb
cmc
repnz
jmp
dec
xchg
jecxz
imul
dec
out
xchg
lea
jns
call
inc
mov
mov
shll
push
push
fistl
mov
pop
aaa
outsl
into
inc
push
cmovo
pop
das
dec
inc
lods
mov
repnz
jmp
mov
rorl
ret
es
scas
cwtl
sahf
cwtl
sub
cmc
mov
add
mov
lret
xchg
test
jmp
mov
mov
dec
pop
mov
push
sub
loopne
ret
shll
lcall
repz
loope
push
ljmp
out
dec
mov
nop
mov
jg
sub
sub
push
add
xchg
xchg
cltd
icebp
mov
pusha
mov
ret
xor
mov
fisttpll
ds
mul
xchg
push
sbb
dec
shll
push
pop
dec
mov
data16
out
mov
pop
push
sbb
jl
mov
pop
mov
out
popf
xor
js
mov
imul
aam
xchg
call
jae
dec
dec
orl
fwait
mov
mov
outsl
add
loop
pop
push
xor
jns
sbb
in
jns
xchg
push
data16
dec
inc
mov
mov
mov
jp
out
jmp
mov
push
mov
dec
test
daa
jne
dec
test
lahf
mov
push
jmp
sti
push
adcl
pop
sub
not
push
push
stos
cmp
mov
insb
inc
stos
mov
jle
ds
in
imul
lahf
or
ret
ljmp
mov
fists
test
loop
xor
add
testl
adc
or
scas
call
and
adc
cmpsl
in
mov
fistps
std
hlt
pop
push
into
arpl
je
or
hlt
dec
sub
and
or
or
mov
pop
fimuls
loop
rcrb
scas
aaa
sub
cmp
sub
es
shll
sbb
aas
lcall
mov
jl
clc
dec
dec
fnsave
push
sbb
dec
lods
jo
or
ljmp
sbb
jb
cltd
sbb
cmpsl
in
imul
pop
add
push
loope
loope
push
mov
cmp
lock
add
and
push
pop
lods
push
subb
das
sbb
test
xor
into
pop
pop
stc
inc
js
stc
mov
mov
pop
lcall
fcompl
xchg
shrb
jecxz
jecxz
and
adc
or
jg
in
mov
mov
leave
sahf
and
dec
push
int
lods
or
mov
sahf
div
xor
or
mov
in
aam
das
sahf
xchg
aaa
lcall
xor
outsl
outsb
push
mov
and
pop
mov
jbe
roll
cmc
test
cmp
xchg
out
out
mov
es
inc
popa
cmp
fisttpl
or
call
or
lea
xchg
adc
fisubrl
mov
adc
nop
and
fnstsw
repz
mov
mov
adc
hlt
push
mov
stc
sbb
sti
add
mov
gs
mov
insb
dec
mov
inc
push
push
fnstcw
int
repz
ret
sti
xchg
gs
sbb
adc
js
mov
cmpsl
pop
cmc
pop
mov
mov
gs
leave
push
cs
nop
pusha
adcl
dec
pusha
stc
mov
add
jecxz
jg
dec
xlat
js
popf
cmp
mov
xorb
push
pop
andl
por
aas
or
jecxz
lea
cmp
scas
dec
das
daa
xchg
mov
test
dec
mov
cltd
ffreep
mulb
xchg
sbbb
pop
leave
mov
mov
inc
xchg
jns
add
js
push
cmp
mov
jbe
lock
fdivrl
xchg
mov
sub
pusha
push
dec
es
jae
repnz
push
dec
test
popf
test
xor
pop
popa
mov
and
mov
xchg
xor
mov
pop
add
mov
cltd
sub
mov
push
mov
fcomp
jb
inc
clc
add
daa
sbb
cmp
sarl
mov
cmpsl
out
push
shll
xchg
cwtl
jge
push
imull
les
incb
pop
jle
xor
scas
repz
insb
xlat
inc
jb
lock
pop
ja
dec
mov
xchg
inc
out
sub
stos
or
jmp
test
add
dec
pushf
lcall
test
aaa
add
dec
xchg
dec
inc
imul
jb
or
jp
add
ret
mov
rol
dec
addr16
js
jmp
stos
cmpsl
fistpll
cmpsb
jmp
lret
and
sub
xor
shrl
mov
rclb
int3
stos
lods
into
dec
and
add
pop
xor
mov
sub
iret
and
ret
jecxz
lea
inc
or
jns
push
inc
cmp
pop
cmp
inc
jbe
push
xchg
xor
in
sbb
inc
inc
imul
arpl
cmpsl
lds
into
pop
loope
dec
dec
repnz
push
hlt
cmpsl
pop
mov
inc
int
push
push
xchg
cltd
push
loopne
jmp
movsb
test
movsb
xorl
sub
xor
shlb
shlb
scas
push
jge
and
bndldx
add
popf
rclb
test
cmpl
mov
daa
into
loopne
cmp
leave
ss
push
lahf
dec
mov
pusha
jl
cmp
jnp
xor
push
add
daa
sbb
incb
pop
sahf
cmpsb
xor
cli
mov
cmpsb
lock
pop
inc
push
lods
push
sub
loope
mov
sub
addb
push
and
enter
or
mov
mov
divl
into
xchg
add
cli
shll
dec
movsb
pop
fstpt
js
jmp
pop
ss
cmp
fisttpl
push
ljmp
sub
ja
outsb
test
adc
in
or
mov
mov
mov
sub
push
outsb
dec
aad
or
add
imull
push
xor
xor
pop
mov
nop
sbb
xchg
pop
sahf
xor
cmpsl
test
stos
fildl
outsb
ret
inc
insb
js
adc
out
fs
and
adc
mov
cmp
fnstsw
dec
mov
cli
fsts
cmp
or
mov
into
fdivs
add
call
fstps
sbb
imul
mov
add
data16
xchg
lods
mov
test
xlat
das
cmpsl
and
addr16
adc
fs
int
mov
inc
jo
inc
sub
loopne
test
dec
xor
inc
and
cmc
fyl2x
sbb
adc
cmpsb
mov
or
cmp
sub
xor
xchg
adc
loop
pushf
xchg
testl
cs
sbb
aad
mov
aas
sbb
das
jb
call
aas
je
fstpl
dec
xor
add
inc
call
mov
mov
loope
lcall
pop
jge
or
push
inc
orl
mov
pusha
out
jmp
faddl
shr
andl
call
insl
inc
cwtl
sahf
sub
cmpsl
int
mov
icebp
mov
sahf
cld
jb
aas
lret
jae
pop
mov
subb
cmp
shrb
mov
mov
mov
ret
out
xor
es
pop
insl
fnstcw
dec
movsb
sbb
xchg
pop
nop
jae
mov
jp
lods
pop
pop
pop
mov
pop
jmp
dec
dec
mov
ljmp
cltd
pop
das
aad
cmc
loop
mov
cltd
mov
jns
add
clc
cmp
jle
sbb
flds
mov
push
jp
mov
mov
push
shl
xor
loope
repz
ljmp
aaa
js
leave
lahf
push
xchg
add
ds
imul
cvttps2pi
inc
jge
popa
or
cld
fwait
sbb
push
push
fs
add
push
add
bound
xchg
inc
in
mov
xchg
pushf
ja
mov
in
mov
sub
js
jp
shl
mov
rcrl
das
lcall
mov
xchg
mov
push
dec
adc
jmp
xchg
jle
xorl
arpl
addl
push
iret
sbbl
and
xor
jle
cld
mov
cs
repz
loope
test
or
pop
scas
jae
xchg
icebp
push
or
xchg
insb
xor
fiaddl
pop
add
sbb
loop
imul
push
push
adc
cmp
test
and
adc
out
hlt
repnz
arpl
sub
or
ljmp
or
add
push
pop
dec
fmulp
loopne
lds
mov
nop
pop
pop
scas
cmc
shrl
and
sahf
pop
movsb
and
mov
jbe
stos
push
jge
jno
sbb
mov
daa
int
cmpl
sahf
add
jl
repnz
cmpsb
rorl
sahf
or
jo
push
push
lahf
add
xchg
push
movsb
clc
push
inc
mov
xchg
int3
outsl
lcall
cmp
push
and
loope
mov
adc
or
jmp
and
pushf
mov
ret
out
sbb
mov
out
xor
jns
fisubrl
xor
js
jno
pop
mov
ss
sti
fdivl
jle
rcll
outsb
out
push
adc
mov
leave
cwtl
mov
enter
arpl
mov
fcmovnbe
and
sub
test
jno
jmp
test
out
ror
call
sbb
loopne
xlat
in
push
xor
inc
outsl
dec
sbb
loop
and
leave
aad
fs
jmp
les
test
jnp
stc
cmp
or
add
lods
sub
or
cmp
cmp
stos
mov
into
mov
jecxz
xor
pop
insl
mov
and
imul
loope
data16
pushf
les
add
xlat
outsb
jge
sub
xchg
inc
jmp
in
iret
jne
sti
pop
sahf
jge
xchg
inc
call
loopne
adc
dec
xchg
push
push
fldcw
lods
rol
sbb
incl
sbb
mov
mov
into
pop
pop
arpl
pushf
inc
add
cs
aaa
in
aad
test
nop
push
sbb
aas
mov
das
repz
dec
or
cwtl
movsl
cltd
jecxz
jae
push
add
call
jle
pushf
mov
aaa
fimull
pushf
fistpl
dec
outsl
inc
fwait
add
das
in
sub
pop
divl
xchg
insb
loopne
sub
std
mov
or
test
insl
icebp
mov
popf
iret
dec
lret
loop
ljmp
push
pop
lock
in
pop
adc
test
sub
cmp
ret
jle
pop
es
jle
rcr
dec
lahf
pop
seta
in
popa
jmp
fs
jmp
test
and
jmp
aam
add
sub
xchg
imul
xor
mov
ljmp
rolb
xchg
jne
sbb
push
shrl
pop
dec
addr16
stos
mov
or
xchg
es
push
lods
push
mov
and
xor
cmp
adc
mov
jb
fisttpl
push
test
mov
popf
dec
insl
xchg
les
popf
popf
or
and
push
test
dec
pop
add
pop
bound
lock
movsl
ret
jmp
lock
mov
loop
mov
call
inc
sbb
push
mov
dec
and
mov
inc
lods
jne
lcall
mov
adc
cld
inc
or
mov
xchg
addl
out
dec
ds
jle
xor
lcall
iret
es
insb
test
mov
mov
test
pusha
jo
movsb
iret
inc
shll
pop
inc
mov
inc
and
push
int
inc
popf
stos
or
cmpsl
daa
mov
fidivl
rcrb
sbb
push
mov
adc
fistl
test
cmpsl
mov
fsubs
clc
leave
mov
dec
hlt
cmp
mov
mov
push
pop
adc
or
xor
or
dec
and
jno
mov
ficoms
sub
sub
cmp
sbb
jns
jbe
ret
pop
jge
movsb
pusha
sbb
scas
or
adc
push
jno
pop
stc
jl
bound
lcall
xor
out
mov
and
push
test
outsl
xchg
pop
inc
inc
movsl
ljmp
enter
out
notl
mov
aam
loope
jg
sub
cltd
jns
ret
iret
fistpll
push
mov
movsl
pop
and
jnp
js
mov
xor
add
lcall
popf
mul
pop
aam
dec
js
mov
pop
xor
cmp
cwtl
int
fsubl
xchg
out
mov
je
dec
push
icebp
adc
lcall
mov
aaa
mov
mov
loop
and
cmp
push
je
int
loope
sub
mov
lret
stos
rcrl
mov
clc
sbb
scas
sahf
jp
jne
adc
outsl
sub
push
loop
or
stc
sbbb
scas
pop
movsb
adc
pop
ss
movsb
inc
fadd
xchg
aam
stos
mov
cli
aas
xchg
shll
or
cmp
dec
orl
sahf
sbb
cmc
pop
mov
xor
cmp
mov
sahf
mov
adc
sub
data16
push
lods
lea
sbb
lods
xlat
xchg
sub
add
in
cmp
sti
push
mov
mov
mov
loopne
xchg
fisttpll
push
call
fstps
adc
sub
iret
xchg
scas
pop
xchg
sbb
lds
out
pop
push
repz
pushf
jmp
into
jmp
jns
cs
inc
int3
aad
and
int3
aas
pop
xor
dec
lds
shl
inc
push
in
push
inc
push
rcr
cmp
mov
enter
push
mov
in
jmp
fcmovne
mov
inc
inc
and
mov
mov
popf
xchg
mov
into
mov
rcl
xchg
add
dec
shll
cwtl
adc
cmpsl
lret
adc
mov
pusha
fistl
cld
enter
push
lahf
or
sub
push
lock
mov
xchg
rclb
and
jl
clc
aam
add
ret
or
cltd
cmpsl
sub
dec
lcall
ljmp
pop
lods
cmc
inc
movsl
mov
lahf
adc
and
test
imul
insb
dec
and
or
lret
jle
push
incl
and
mov
push
xchg
push
sbb
shr
rol
idiv
sub
jnp
insl
xchg
insl
xchg
rcll
mov
pop
pop
cmpsl
xor
inc
fisttpll
ret
jns
xor
inc
push
mov
jne
es
or
xor
popa
mov
ja
jg
dec
pusha
mov
inc
stos
stos
dec
or
sbb
fwait
js
jl
dec
cmc
xchg
mov
gs
bound
xchg
mov
xchg
cmp
daa
mov
mov
mov
jp
add
mov
xor
xchg
push
jne
add
mov
jecxz
fistps
jns
xchg
test
jnp
xchg
daa
loop
adc
inc
out
mov
dec
or
sbb
ss
and
js
insb
lock
jnp
jle
mov
in
xchg
mulb
mov
jae
rcrb
pop
inc
movsl
xorl
mov
popf
shll
xchg
mov
repz
addr16
xchg
cmp
cwtl
imul
pushf
push
lahf
mov
pop
call
mov
sub
hlt
mov
jns
lret
cmp
inc
mov
or
loopne
clc
aaa
sbb
cmovae
mov
in
int3
gs
pop
pop
fs
jne
adc
imul
inc
clc
rol
jae
mov
js
mov
neg
movsb
aaa
insb
outsb
push
cs
push
lds
mov
jno
lret
fisttpl
jno
loopne
jl
cmpsb
aam
or
push
test
bound
lahf
inc
scas
add
jle
imul
aad
mov
in
lcall
pop
std
xor
ret
aaa
cmp
or
mov
xor
push
movsl
push
xlat
or
xlat
xchg
out
xorb
sbb
test
call
sub
pusha
xor
sti
in
cwtl
js
cmp
pop
mov
xor
out
repnz
lret
xchg
out
sub
pop
arpl
jne
sbb
mov
fldcw
mov
ds
and
jecxz
ja
and
sub
mov
es
mov
push
sbb
jb
test
filds
or
imul
sub
aaa
jg
cmp
adc
sub
add
cmp
xor
out
ret
stos
cli
jb
xorb
xchg
dec
cmp
enter
sub
add
inc
xor
xchg
push
pop
stos
cmc
ljmp
aam
adc
scas
push
add
push
andb
jns
je
out
mov
xor
xlat
in
mov
sub
je
mov
movsl
push
add
mov
call
loopne
sub
inc
pop
push
push
xchg
mov
pop
repz
xchg
jno
sub
cmp
insl
or
mov
add
shll
adc
cmpl
es
or
ret
nop
int3
add
aas
imull
jb
pop
mov
je
xor
jecxz
ja
push
ljmp
lea
sub
mov
mov
dec
cmpl
and
mov
inc
aam
scas
das
mov
adcb
test
int
jge
sub
aad
psadbw
pop
daa
cwtl
iret
cmp
mov
aaa
outsb
push
cld
repz
jecxz
rorb
lcall
lock
popf
or
push
or
shl
sti
mov
aam
push
adc
andb
dec
xchg
shll
sbb
mov
popa
pop
push
lods
pusha
notl
dec
popf
ret
or
fldcw
mov
pop
sar
add
outsl
cltd
add
movsb
test
iret
cltd
mov
push
call
fisttpll
sub
in
xchg
lock
rcrl
adc
pop
mov
fnstsw
mov
jo
arpl
mov
xor
cmp
lret
lret
or
js
adc
jae
xchg
test
add
ja
out
add
xchg
inc
inc
or
ljmp
out
sub
add
cwtl
bound
jns
adc
xchg
mov
cmp
pop
ficoml
jp
push
mov
sub
mov
jl
mov
jne
imul
cmp
mov
nop
xchg
fcoms
mov
nop
sub
je
mov
mov
stos
jns
popa
and
out
aad
pop
lods
cmp
adc
mov
push
pusha
cmpsb
fistl
ret
mov
push
inc
cmp
cwtl
jae
mov
popf
clc
and
mov
jb
sbb
xchg
nop
data16
mov
jle
xlat
test
out
adcl
pop
jge
test
bnd
adc
ja
icebp
hlt
ror
push
arpl
add
inc
fldenv
pop
or
pop
pusha
pop
aaa
fsubrl
daa
add
push
int3
push
xchg
fistps
and
push
vsqrtps
scas
xchg
lock
dec
jmp
or
ret
push
jge
inc
jbe
push
sarb
sti
sbb
mov
cmp
js
and
inc
dec
js
cmp
mov
test
jo
aad
lahf
bound
dec
test
add
jecxz
inc
das
inc
in
andl
push
pop
cmp
test
dec
and
and
jg
xchg
add
ds
mov
push
insl
cs
orb
stos
add
mov
xor
loop
pop
and
movsb
pop
xor
lcall
jmp
jbe
dec
sub
push
xlat
adc
push
or
jg
mov
mov
scas
fwait
mov
sarb
xchg
and
es
push
jp
ja
cmpsb
js
sub
push
dec
imull
aam
rorl
adc
mov
and
test
std
movsb
orb
outsl
ljmp
stc
out
dec
mov
adc
xchg
cmpl
out
out
push
mov
movsl
popa
test
cmp
adc
ror
pop
jmp
xor
pop
lret
adc
push
mov
sti
adc
mov
add
sbb
pop
jp
mov
xchg
sub
push
sub
jns
mov
adc
cld
jne
gs
in
loopne
shrb
dec
scas
push
sub
insl
cs
les
pop
fcomi
loop
adc
mov
cmp
aam
xor
jmp
pushf
inc
push
insb
das
mov
aad
dec
in
nop
cmpsl
adc
jb
cmp
lock
imulb
pop
sub
lea
cmpsl
push
mov
jmp
inc
adcl
test
fldt
push
pop
or
pop
inc
out
mov
loopne
pop
lahf
add
or
shll
add
cwtl
enter
sbb
mov
push
and
aam
das
sbb
mov
pop
fwait
lock
xchg
inc
pop
jb
imul
push
jp
ljmp
add
cmp
insb
cmp
xchg
pop
test
ljmp
xchg
lods
lret
jle
mov
in
cmpsb
and
mov
pop
repnz
clc
test
je
push
test
fnsave
xchg
xchg
aam
subl
pop
dec
mov
ss
inc
or
xchg
sti
in
push
push
fiaddl
lcall
mov
popf
out
or
mov
mov
mov
jnp
dec
fcmove
arpl
or
pop
dec
inc
packsswb
xor
or
mov
fwait
add
add
add
out
pop
sub
loopne
lret
in
adc
xchg
fdiv
fwait
mov
mov
mov
sbb
out
sub
mov
call
inc
mov
xchg
or
pop
mov
int3
xor
mov
ret
pop
icebp
enter
psubsw
xchg
fildl
ret
repz
outsl
or
stos
in
push
movsl
and
cmpsl
insb
sub
sti
jle
jmp
push
pusha
inc
push
cs
pop
fidivrl
ret
fstps
cmp
inc
inc
xchg
mov
dec
mov
push
push
push
addr16
pop
add
mov
icebp
and
fcmove
insl
ficoml
xchg
mov
imul
scas
cmp
push
sub
and
gs
repnz
pop
hlt
push
mov
xor
or
push
sbb
fwait
les
arpl
add
movsb
gs
cmp
dec
ficomps
mov
jae
sub
scas
jno
or
cmp
out
aam
int3
xor
jge
xchg
push
sbb
lahf
les
leave
roll
cmp
jno
dec
cmpl
dec
out
movsb
push
outsl
and
xor
clc
shll
subl
mov
shlb
inc
pause
pop
cmpsb
les
in
push
sarl
test
cmp
add
shlb
mov
or
push
xchg
pushf
pop
sbbb
and
and
pop
fdivrl
dec
inc
sarl
imul
pop
dec
push
popf
test
movsb
sub
cmp
adc
sub
add
insb
jge
mov
lock
jge
mov
or
cs
push
push
shll
mov
int
sbb
cmp
test
xor
leave
mov
out
stc
movsl
mov
push
adc
xor
xchg
mov
fdiv
outsl
nop
out
imul
rclb
cmpsb
or
hlt
fcmovne
inc
in
cmc
scas
jle
xor
jno
adc
scas
enter
nop
adc
mov
add
fcoms
lods
inc
js
mov
jno
xlat
push
or
cmpsb
xor
mov
jnp
sar
sbb
push
pop
sbb
loopne
popl
or
cmp
add
pop
les
mov
xchg
testl
cmp
ja
mov
enter
jno
xchg
dec
les
or
cs
sub
push
cmc
mov
aas
xor
push
push
dec
sub
in
je
push
mov
jo
aam
pop
lret
testb
arpl
mov
inc
lahf
mov
subl
dec
stos
pop
lods
push
push
inc
mov
dec
inc
or
leave
das
popa
int3
cmpsb
mov
repz
and
in
shll
into
divb
insl
xor
aas
sbb
inc
dec
icebp
cmpsl
enter
inc
and
icebp
in
or
dec
xor
lret
sahf
cld
cmp
pusha
and
pop
lock
lcall
lea
sub
or
ret
mov
or
dec
mov
mov
lcall
popa
inc
fcoml
fidivrl
mov
mov
jae
push
or
add
les
sub
jns
inc
aad
push
dec
ret
or
clc
fs
xchg
jnp
sbb
stos
ror
in
jno
divl
repnz
movsb
icebp
icebp
xchg
inc
das
notb
test
cld
rcrb
or
cmp
xor
sarl
adc
call
dec
inc
pusha
sbb
lret
dec
cmp
inc
jo
insb
or
add
cmpsb
test
xor
stc
test
icebp
mov
bound
fidivrl
in
out
adc
jle
mov
pop
mov
or
loope
aam
lds
mov
jp
push
sub
hlt
push
mov
xchg
dec
mov
bound
fmul
fistpll
pop
xchg
and
jmp
mov
dec
cmpl
out
mov
sahf
or
les
and
sub
insb
xor
jnp
pushf
leave
jle
push
add
push
push
pop
pusha
fcoml
mov
hlt
sub
and
mov
sub
popf
inc
lret
xchg
les
fiaddl
push
pop
sbb
ja
imul
scas
popf
pop
sti
push
je
cmp
lock
jecxz
add
inc
repnz
push
leave
gs
mov
pop
pop
inc
fbld
or
push
aaa
pop
pop
dec
or
adc
jbe
cwtl
int3
es
xor
or
daa
cmp
pop
inc
sub
je
mov
movsb
fsubrs
in
sbb
jbe
mov
jge
push
repnz
jp
cmp
mov
jno
cmp
fildll
dec
push
sub
push
and
out
push
out
lahf
mov
mov
test
fwait
push
lds
or
inc
in
dec
adc
enter
pop
mov
lcall
insb
mov
cmp
sbb
lcall
and
daa
inc
subb
pop
add
lret
sub
popf
cwtl
pop
jo
jl
add
dec
lcall
lret
mov
outsb
and
rolb
bound
jg
mov
mov
clc
in
mov
fldl
sbb
sbb
pop
push
add
int
lahf
mov
adc
inc
lret
hlt
sarl
push
sbb
pusha
pop
test
cmc
cmpb
outsl
test
sbb
mov
lret
push
ret
ss
cmp
mov
test
cmpsl
add
cld
xor
sub
or
fs
jbe
mov
or
scas
adc
adc
xchg
out
cmp
add
lcall
mov
arpl
test
sahf
or
mov
cmp
out
jns
lret
incb
jae
push
jle
loopne
pop
xchg
imul
jp
fnstcw
sub
push
inc
scas
repz
xchg
mov
add
das
nop
push
pop
fidivrl
sub
ljmp
jmp
jo
cs
pop
fcom
xchg
add
nop
pop
jb
aas
aam
adc
mov
push
je
jnp
jecxz
jnp
pusha
lea
xchg
call
cmp
pop
mov
sub
sbb
sbb
mov
push
pop
dec
insb
into
inc
rorl
inc
cmp
mov
stos
mov
rol
icebp
cmp
jp
outsl
std
out
lahf
cwtl
add
outsb
cmpsl
call
into
icebp
mov
pop
jo
or
and
lock
and
pusha
xor
ret
aam
data16
dec
or
or
inc
ds
dec
xchg
sbb
push
jge
popa
pop
cmc
pop
lods
mov
jecxz
mov
mov
icebp
mov
and
cmp
mov
xor
test
scas
ljmp
xchg
int
adcl
imul
out
push
rcrl
xchg
das
pop
mov
nop
fucomip
pop
int
xchg
mov
lods
push
hlt
inc
sbb
fwait
push
mov
or
push
cwtl
mov
subl
test
out
ja
push
add
inc
pop
dec
dec
or
dec
and
push
fadds
str
mov
bound
mov
jns
push
das
in
cmp
test
mov
scas
pop
push
lds
in
jp
pop
into
mov
aam
mov
leave
scas
sub
pop
mov
pop
cmc
push
mov
icebp
out
fists
jmp
push
cltd
jbe
or
bound
gs
lcall
imull
insb
pushf
sahf
dec
jnp
jne
push
pop
sub
pop
add
pusha
ja
and
sbb
fcmovnb
sbb
mov
push
lret
pop
rol
jae
fnstsw
pushf
mov
jb
into
popf
testl
sub
popf
sbb
adc
imul
jb
add
cmp
mov
xchg
add
mov
sbb
fmul
pop
hlt
mov
dec
arpl
in
mov
xor
or
int3
repz
aaa
sbb
or
jp
or
pop
gs
and
pop
fisubs
shlb
push
scas
das
xor
pop
scas
pop
cmp
push
mov
arpl
jo
push
mov
jge
std
inc
sbb
stos
daa
mov
cmp
in
jno
dec
xchg
jl
lcall
lds
push
xor
mov
insl
lahf
mov
rcll
std
push
xchg
cmp
and
lret
in
ss
enter
pop
stc
dec
xor
int
loope
outsl
cmp
shl
cmp
add
xor
and
push
and
add
xchg
sbb
ret
add
push
clc
insb
test
cmp
pop
scas
sahf
sbbl
ja
sbb
pop
in
outsb
cmp
push
adc
loope
push
jg
mov
mov
pop
loop
mov
repz
test
push
xor
int
or
sub
inc
scas
lret
mov
push
inc
fmull
or
dec
test
adc
outsl
xchg
loop
cmpsl
push
stc
adc
lods
adc
cmpsl
dec
cmp
insb
cmp
jg
ds
test
jle
push
cmp
cmc
adc
add
enter
dec
cmc
cmp
leave
clc
pop
daa
adc
fildll
adc
push
lret
imul
adc
decb
call
mov
pop
in
push
pusha
in
jns
push
gs
gs
loope
loopne
inc
stos
dec
lret
jnp
inc
cmpsb
out
mov
jb
mov
pop
xor
ret
xchg
jge
loope
add
das
cmp
addl
pop
lea
adc
dec
pushf
inc
lods
jmp
cwtl
outsb
cs
insl
aad
jae
nop
cmp
lods
aas
jae
fidivs
pop
das
dec
sbb
je
cmp
mov
pop
aad
js
mov
scas
mov
outsl
sbb
daa
insl
mov
inc
inc
inc
mov
and
popa
cltd
add
rcll
jb
idivb
mov
pusha
xlat
cmpsl
out
mov
xchg
and
cld
lahf
pop
jp
jl
sbb
adc
pcmpeqw
lock
out
pop
iret
sbb
shlb
pop
subl
fmuls
aam
roll
fmul
dec
mov
insl
sub
orl
push
xchg
sbb
test
xor
or
pop
mov
dec
je
and
mov
jae
or
cltd
loopne
sbb
mov
bound
mov
xchg
push
fstpl
lcall
pop
dec
dec
in
stos
push
test
mov
rcr
popf
push
iret
push
clc
cmp
ret
xor
inc
test
lea
mov
test
dec
rdpmc
lock
mov
ja
cmp
fistps
sahf
or
or
push
fwait
arpl
add
daa
int
out
divb
bound
pop
int
sub
xchg
lds
scas
dec
cmpl
les
mov
pushl
dec
jmp
ret
dec
jg
inc
jne
in
hlt
mov
es
fbstp
mov
jmp
push
cltd
push
sbbl
sub
pusha
loop
push
mov
shlb
pop
das
subl
jnp
and
jle
sbb
in
sbb
adc
fxch
jp
jo
das
fsubrl
inc
outsb
pop
jae
xlat
sbb
pop
sahf
pop
popf
xchg
add
inc
outsb
out
lcall
cwtl
jle
imul
aas
scas
arpl
mov
add
xchg
cmpsb
out
pop
mov
lret
leave
push
or
jp
arpl
ret
mov
or
inc
mov
ljmp
pop
sbb
cld
ljmp
inc
ss
lds
andb
adc
push
movsb
jnp
lcall
movsb
out
test
push
jbe
fisubs
sbb
jmp
js
cmp
repz
adc
xor
add
push
sbb
xchg
xor
or
lahf
fidivrs
sbb
xor
dec
inc
mov
mov
in
enter
pop
cmp
in
add
cmp
inc
mov
cwtl
loopne,pt
xchg
movsl
inc
xchg
jns
flds
adc
xor
jl
int
enter
lret
xor
pop
mov
dec
xchg
pop
jo,pn
lcall
jns
and
cwtl
sub
lea
mov
mov
mov
divl
rorl
call
push
xchg
ret
sub
sub
mov
shr
mov
xlat
push
cli
sahf
dec
insl
inc
test
nop
in
mov
mov
icebp
nop
loop
enter
fsubrl
icebp
fsubrs
in
decb
cmp
daa
andb
movsl
lds
jno
cmp
push
arpl
or
jp
lock
out
add
adc
rorb
pop
inc
lret
mov
sub
push
cmp
in
or
mov
aas
lods
test
mov
sub
xchg
and
mov
inc
out
mov
push
loopne
cmp
dec
sub
dec
fldcw
jl
repz
mov
sbb
daa
cmp
pop
inc
adc
pop
pushf
in
test
movsl
test
mov
repnz
adc
aas
aas
adc
xor
dec
popl
fs
daa
sti
data16
cmp
bnd
mov
orl
mov
mov
pop
inc
dec
push
into
inc
pop
xor
mov
sbb
das
shll
out
add
arpl
jbe
frstor
fidivrs
inc
cld
lret
lret
jmp
bound
mov
lock
sti
pop
out
movsl
inc
rolb
mov
sub
push
aam
nop
and
addr16
cs
jl
jl
popf
xchg
push
mov
popa
mov
cmpb
xor
mov
loop
in
fiadds
loop
pop
add
test
ds
xchg
push
xchg
xchg
mov
clc
adc
stos
mov
dec
add
int
fistps
hlt
stos
inc
xchg
out
int
rclb
std
dec
fldcw
xor
mov
or
push
add
xchg
test
push
cmp
dec
adc
push
inc
xor
pop
arpl
push
mov
into
shlb
add
or
bound
int
jns
pop
xor
mov
add
mov
ja
mov
add
sub
mov
mov
dec
fdivrl
aad
dec
out
jbe
call
outsl
insb
adc
xchg
fwait
jae
jmp
jmp
lods
sbb
iret
flds
sub
pop
push
dec
push
mov
stos
mov
pop
mov
jnp
or
aas
in
xchg
sub
lods
mov
enter
xor
call
xor
adc
or
mov
in
fisttpl
ficompl
inc
adc
shrb
sbb
mov
sbb
sbbl
repnz
in
or
dec
mov
aad
call
std
lret
in
aaa
xchg
aas
jns
das
and
cmp
dec
pop
jle
sbb
lds
sbb
scas
in
sbb
and
pop
adc
xor
and
jge
not
sbb
mulb
cmp
mov
jl
mov
inc
push
sti
in
xor
fs
sbb
jo
or
cld
push
mov
cmpsb
sarb
or
popf
ds
ja
xchg
push
push
popf
loope
xor
sub
jg
cmp
fbld
je
mov
out
mov
mov
out
shll
pop
repnz
pop
in
mov
jae
pop
lods
add
push
stc
aaa
fmul
icebp
sub
sahf
shrl
jl
adc
xchg
clc
outsl
jg
pop
mov
jmp
mov
es
inc
in
dec
push
pushw
mov
sub
dec
push
lret
roll
loop
stos
out
add
test
xchg
mov
imul
stc
sbb
mov
cmp
fnstenv
xchg
negl
push
xchg
out
jmp
cli
movsb
xor
sub
mov
add
or
mov
cmp
lret
pop
sub
sbb
gs
pop
cli
adc
mov
add
xlat
adc
mov
mov
loope
xlat
mov
jb
mov
in
daa
stc
mov
stos
sub
jnp
jp
pop
dec
mov
psubusw
push
scas
les
shl
lea
sbb
bound
pop
pause
pop
adc
mov
pushf
cwtl
xor
js,pn
mov
insb
adcb
out
xchg
mov
mov
or
mov
inc
je
mov
jecxz
jecxz
imul
jae
jg
mov
ret
leave
mov
out
addl
hlt
fistl
and
stos
inc
jbe
push
das
fstl
das
mov
mov
ds
inc
mov
std
fildl
cwtl
xor
das
cmpsl
les
mov
inc
shrl
lret
pop
xchg
mov
sarb
lock
rcr
inc
mov
cmp
mov
xchg
es
dec
ret
insl
clc
es
dec
ja
iret
xchg
xchg
push
and
scas
shll
loop
jne
arpl
sub
mov
inc
das
xchg
add
sub
pop
sub
mov
add
jg
clc
push
sub
in
rol
add
shll
mov
mov
daa
xor
xor
fsts
test
iret
js
or
cmp
or
hlt
xor
iret
lods
mov
mov
dec
fstl
jle
popa
or
inc
gs
int3
stc
insl
or
and
fwait
shl
push
shll
push
jecxz
add
mov
mov
int
mov
pop
int
inc
jno
xchg
arpl
mov
adc
mov
sar
addr16
lds
cltd
lock
ret
sarl
mov
inc
inc
js
scas
add
pop
fcomip
arpl
xchg
outsb
mov
xchg
mov
inc
cmpl
ljmp
push
push
push
in
pop
stos
sub
into
and
add
das
mov
mov
insl
outsb
int3
pusha
dec
aaa
xor
cmp
aam
push
xchg
sbbl
sahf
inc
jnp
ret
xchg
jl
in
out
popf
loop
jne
jg
jnp
insb
push
leave
fimull
xchg
lcall
imul
scas
sub
push
nop
inc
in
pop
fisubl
sbbb
adcl
xchg
dec
push
arpl
iret
inc
jmp
loop
push
lcall
push
call
mov
rcr
pop
int3
rorb
fimuls
out
cmp
xorl
scas
int3
xchg
adc
rorb
sub
and
pop
leave
jbe
frstor
sbb
xchg
cmp
push
stc
jl
mov
dec
adc
xor
mov
loope
push
inc
sbb
cmpsb
push
dec
lock
mov
ss
jmp
and
pop
mov
sub
lahf
sahf
loope
dec
mov
adc
add
es
dec
movsl
dec
popf
sbb
movaps
jo
std
cmp
inc
sbb
enter
cmp
xor
not
mov
rcrl
movsb
sti
js
sub
aam
flds
jns
js
test
sub
outsb
bound
cmp
jb
movsl
jg
jmp
pushf
mov
in
outsl
and
pop
push
mov
inc
int
popf
test
mull
lods
mov
mov
push
ficompl
sbb
inc
outsl
and
add
add
cmp
cmp
fs
dec
cli
adc
int
cmp
popf
aas
out
xchg
pop
cli
xlat
lods
loope
add
cmp
dec
in
or
push
into
mov
jne
xchg
dec
and
pop
test
adc
imul
xchg
add
xchg
dec
sbb
shrl
subb
push
out
mov
xchg
adcl
into
xchg
bound
call
xorb
addb
repz
rcr
sbb
popf
arpl
sub
pop
cmpsb
shlb
inc
mov
jmp
test
fisttpl
ret
aad
pop
lahf
nop
leave
and
push
addr16
jb
aad
dec
jge
movsl
je
je
jecxz
jecxz
insb
mov
lea
pop
insl
call
xor
cmp
sbbl
mov
fisttpl
inc
pop
jmp
and
mov
lcall
dec
mov
loopne
xchg
add
cmpsl
ret
cld
mov
sbb
cld
and
lret
leave
xchg
dec
mov
popf
lret
cmp
insb
lock
pop
sub
inc
shrb
cmpsl
aam
or
ret
test
subb
pop
dec
jb
lcall
jmp
popa
mov
mov
mov
cli
and
pop
mov
insl
add
push
cltd
test
test
mov
push
pop
fs
pop
add
mov
movb
or
dec
jno
stos
pop
mov
xchg
ret
movsl
push
and
pop
sub
pop
xchg
rdmsr
aam
or
sbb
mov
jmp
lea
dec
test
test
test
dec
clc
add
inc
arpl
jbe
and
push
fs
hlt
add
js
out
out
xchg
in
bound
jle
adc
pmulhuw
jg
xchg
mov
sbb
dec
in
mov
jnp
sbb
jl
jp
insb
add
lret
jp
mov
jns
jbe
fdivs
adc
mov
xchg
jg
inc
orl
out
test
sub
push
out
push
push
inc
test
stos
sahf
sbb
dec
js
jnp
sub
jle
jecxz
in
scas
test
iret
xchg
push
test
push
xchg
jnp
xchg
and
test
sub
mov
push
add
lcall
mov
sbb
mov
cmp
xlat
adc
aaa
outsb
jb
pop
xor
bnd
mov
leave
mov
xor
arpl
xchg
inc
out
hlt
in
or
mov
adc
insb
add
mov
pop
fdivrl
adc
sub
lds
pop
push
scas
stos
adc
and
aas
cmp
repz
push
cmpsb
lret
test
bound
addb
ret
sarl
jno
idivl
addl
fnsave
outsb
repnz
cmp
or
stc
inc
test
xchg
fsub
inc
dec
xchg
cmpsb
and
in
sar
inc
enter
pop
cmc
stos
xchg
push
mov
mov
cmpl
ljmp
movsl
push
mov
and
sbb
orb
or
xor
jmp
outsl
pop
xor
add
stos
cld
dec
lcall
mov
and
sub
push
stc
adc
dec
push
mov
add
mov
cmp
mov
pop
dec
mov
call
pop
push
es
int
xchg
sub
push
mul
fs
jno
test
imul
cwtl
js
sbb
loop
sahf
xor
xlat
pop
addb
psrad
les
xchg
push
cmpsl
adc
xor
sbb
push
mov
enter
ret
stos
cli
or
xor
cmp
popa
cmp
mov
das
leave
cmc
pop
lahf
insb
xor
ds
pop
mov
sbb
imul
test
xchg
roll
pop
sbb
mov
adc
sub
repnz
std
loope
sti
xor
out
mov
loopne
sahf
leave
dec
inc
in
inc
repnz
ljmp
dec
pop
repz
cmp
sbb
fcom
arpl
stos
and
pop
movsb
xor
popf
add
pushf
out
add
jb
sub
ds
mov
cli
and
nop
movsb
mov
fnsave
and
dec
hlt
xchg
push
jecxz
daa
mov
outsl
sidtl
jne
jbe
hlt
sbb
mov
inc
roll
mov
push
jae
negl
movsl
inc
loope
adc
sbb
das
fwait
xchg
cpuid
sbb
arpl
aad
rorl
je
leave
or
std
sub
jp
ret
mov
out
adc
cld
dec
cltd
ds
cmp
mov
aam
lock
jo
pop
dec
gs
jg
leave
sub
dec
xchg
aam
stc
ret
adc
lahf
es
and
insl
loopne
dec
insl
fldcw
ljmp
stos
lods
mov
push
xchg
mov
fimull
mov
ljmp
add
sbb
cltd
mov
pop
test
push
fidivrl
fldl
push
clc
lcall
cwtd
call
pop
stc
jns
stos
push
mov
out
mulb
xchg
in
lock
push
cmp
or
mov
in
xor
xor
repnz
mov
nop
outsl
add
mov
inc
std
push
dec
jmp
stos
inc
cli
js
or
sub
pop
cltd
jge
pop
xor
xchg
inc
imul
fs
in
in
loop
xchg
add
mov
test
mov
add
and
jp
hlt
fs
pop
mov
mov
dec
loop
or
stos
jne
scas
lock
ret
loopne
xor
xchg
adc
cmp
dec
jle
xchg
dec
loopne
sbb
jno
pop
or
sub
dec
sbb
test
popf
stos
adc
lahf
and
rclb
add
xor
jle
mov
divb
ret
cmp
in
inc
xchg
sub
jae
pop
push
imul
mov
push
cmpsb
fidivl
jns
sbb
jge
imul
push
inc
rclb
adc
js
mov
and
leave
das
outsl
hlt
sub
push
ret
sbb
push
daa
or
xor
aaa
aam
or
test
add
jmp
int3
test
sub
daa
neg
iret
int3
pusha
lds
aas
sarb
xor
cmp
nop
xchg
push
cmc
jl
jbe
stos
mov
std
lcall
ret
cmp
bound
fstpt
popf
dec
lock
push
movsb
cmp
lock
lahf
pop
adc
push
jmp
mov
pop
shll
faddl
mov
mov
xchg
pop
xor
int
into
pop
loope
loop
sub
mov
aad
insb
test
and
rcrb
xchg
pop
sbb
stc
add
push
xor
add
cmp
cwtl
js
pop
xor
sub
es
dec
fmul
int
sub
jae
outsb
sub
adc
sub
jg
sbb
stc
mov
aaa
lock
push
push
xchg
xchg
loop
fidivs
sub
inc
loopne
mov
xchg
dec
roll
mov
sbbl
and
test
loop
push
call
fs
je
ss
test
adc
out
jne
cli
cmp
ret
or
stos
or
mov
jl
fs
and
xor
ds
ret
adc
mov
imul
add
addl
xchg
pop
cwtl
mov
pop
add
and
repnz
push
push
pop
adc
jno
jg
fucom
dec
out
dec
cmpsb
or
flds
loopne
repz
inc
xchg
xchg
dec
ss
les
jl
adc
test
sub
pop
or
add
hlt
testb
sub
mov
xchg
aas
mov
jb
test
dec
imul
shr
mov
jb
in
fsubs
mov
lock
lods
mov
cld
stos
or
filds
mov
jb
inc
push
out
das
jp
sub
scas
jecxz
mov
pusha
sub
pushf
out
stos
testb
std
sarb
shlb
stos
mov
ljmp
idivl
mov
movsl
outsb
lock
stos
rclb
shrb
ds
aam
shll
sbb
subl
sbb
xor
xchg
push
das
pminsw
pop
add
jg
lods
and
in
std
test
and
xchg
vdivsd
push
add
test
out
mov
ljmp
insl
scas
ret
clc
add
ja
sbb
imul
movsb
push
jmp
std
mov
ds
xor
jmp
push
popa
and
push
int3
xor
push
xchg
xor
aas
fsubl
xchg
cwtl
push
dec
adc
test
dec
push
ja
adc
sahf
cmp
xchg
out
pop
or
imul
stos
sti
push
add
scas
push
fucomi
push
in
loopne
je
adc
and
loop
jo
push
scas
mov
mov
xor
icebp
ficoms
jp
das
dec
mov
imull
mov
mov
cmp
lcall
push
jb
xchg
out
ja
aas
pop
popf
xchg
adc
lcall
pop
sub
or
and
ret
lods
loopne
test
and
imul
jnp
pop
inc
jle
or
sbbb
sbb
iret
push
popf
nop
ret
add
aad
inc
pushf
imul
ret
push
fdivrs
push
and
push
inc
jmp
dec
es
lahf
jge
sbb
push
jne
flds
mov
adc
shll
mov
imul
pop
arpl
dec
inc
hlt
mov
or
scas
mov
aaa
xchg
cli
ds
cmp
add
xor
mov
jb
in
lds
hlt
fildll
jns
cmp
sub
jae
jbe
roll
cltd
lret
enter
mov
inc
lret
mov
jl
dec
pop
stos
sahf
push
xchg
xorb
xchg
jno
jns
je
mov
push
mov
sub
popl
mov
cmpsb
fcoml
in
mov
mov
mov
loope
gs
sub
int
cmp
lahf
ds
fs
shlb
mov
lea
xorb
dec
sbb
add
bound
pop
subl
or
test
inc
xchg
push
push
and
fdivrl
pop
sub
inc
add
cli
xor
add
mov
pop
jno
and
push
mov
fildl
test
push
xchg
js
int
xor
xor
bound
rcr
mov
sbb
push
jnp
loope
lods
push
and
shll
mov
ds
fs
cld
adc
leave
ss
or
cmp
into
test
out
stos
loope
jo
into
xor
adc
or
xchg
ja
out
cmpsb
xor
add
imul
cmc
mov
sbb
lods
jp
jle
les
mov
mov
rcrl
int
xchg
bound
aaa
cmpb
mov
dec
add
jmp
fnstcw
mov
sub
hlt
sbb
dec
jns
test
fs
mov
or
in
jmp
pushf
dec
cs
in
mov
nop
pop
aaa
fstpt
sub
pop
jp
loop
fnstenv
fsub
call
sbb
aas
popa
mov
imul
mov
xchg
hlt
push
andl
push
fcmovnbe
jnp
pop
les
inc
out
xchg
inc
inc
loop
push
das
pop
mov
sub
jmp
insb
shr
pop
js
dec
aaa
repnz
ja
jne
sbb
mov
mov
popf
out
cld
mov
push
xchg
mov
or
jge
adc
mov
sub
fsubs
or
enter
int
insl
xchg
sub
xchg
xchg
aam
jp
jnp
std
xchg
out
lods
mov
in
and
mov
sub
mov
pop
cltd
sub
jne
test
insl
push
pusha
add
clc
cmp
and
int3
aaa
roll
pop
dec
stos
in
push
mov
mov
push
pop
push
icebp
stos
and
hlt
insl
ljmp
mov
inc
mov
xchg
xor
push
test
out
ja
test
dec
sarl
inc
sub
cmp
dec
mov
les
leave
jns
out
xor
bound
adc
cmp
sbb
xchg
lahf
pop
fidivs
inc
ds
pop
lods
push
icebp
addr16
pop
jp
push
in
repz
fdivrl
sbb
dec
shll
mov
or
jo
repz
mov
loopne
xchg
loopne
add
pop
imul
out
cmp
or
xchg
push
add
iret
stos
notl
insb
mov
or
sbb
dec
aas
inc
in
lret
mov
aam
mov
int3
ret
dec
pop
fsubrs
inc
cmpsl
add
xchg
inc
sub
popf
jle
insb
mov
push
icebp
xchg
mulb
fisubrl
and
push
adc
mov
fcomip
mov
cli
repnz
rcr
arpl
sbb
xchg
or
sub
jmp
push
mov
or
test
int3
jle
jl
imul
lds
jge
shr
ljmp
or
stos
cmp
and
mov
jbe
dec
inc
jge
jl
sbb
adc
cmp
movsl
jno
mov
jl
cmp
dec
into
in
push
push
fnsave
sub
lahf
cwtl
push
pop
push
pop
das
test
xrelease
cmpsb
pop
mov
dec
pusha
jb
pop
mov
push
push
in
loope
or
pop
cmp
ja
ds
in
movsl
imul
jnp
mov
in
adc
sbb
jmp
add
movsl
add
xchg
pop
test
enter
inc
pop
sub
cmp
aad
fsubl
imul
out
jnp
adc
jg,pt
pusha
pop
mov
cmp
mov
shr
and
das
int
fiaddl
and
lret
cli
shll
mov
dec
sbb
jne
test
popa
adcb
outsl
mov
mov
xor
add
ss
aad
xchg
sub
mov
out
gs
cli
mov
lret
bound
cli
into
inc
mov
cmc
scas
cmc
js
loop
ret
out
adc
xchg
pop
push
add
int3
lret
sub
lods
popa
jns
mov
dec
arpl
mov
lods
mov
ds
sti
inc
andb
pop
mov
fs
mov
dec
fs
xchg
inc
sub
inc
fpatan
jb
les
adc
adc
sbb
daa
je
pop
jb
dec
adc
notb
cs
aad
jl
nop
xor
loope
jb
dec
pop
dec
pop
arpl
lods
imul
mov
js
inc
lea
pop
jo
xor
leave
cmp
cmc
adc
add
imul
inc
std
mov
add
bound
push
sarl
fs
inc
std
push
add
fsubr
pop
cmpsl
mov
clc
xchg
je
mov
int3
jnp
lret
test
pop
pop
inc
mov
jne
lock
pop
test
hlt
sar
adc
adc
cmpsl
aam
in
add
shll
and
jnp
jnp
sub
pop
cmpsb
outsb
xchg
roll
cmp
in
cwtl
push
popa
adc
mov
mov
inc
popf
adc
enter
sbb
and
push
add
cltd
popa
pop
test
xor
push
and
fnstsw
repz
jg
adc
mov
cmp
pop
clc
jns
rcll
push
int3
or
xor
jge
or
mov
sub
lret
xchg
mov
aam
add
xor
inc
or
imul
call
loope
clc
adc
out
in
bound
xchg
clc
add
mov
in
inc
mov
addr16
cmc
addr16
push
mov
rcrl
and
mov
cmpsb
dec
mov
jne,pt
fwait
shlb
cmp
xchg
lea
fwait
jmp
stos
iret
addl
leave
sub
cmp
rcrl
jnp
and
dec
insb
hlt
xchg
dec
jnp
fwait
lods
jle
lock
in
fwait
inc
pusha
dec
push
fcmovne
adc
insb
ret
push
pop
shld
cmpsb
jae
sbb
push
mov
jge
movsl
aad
mov
out
jns
lret
dec
lock
dec
repnz
mov
scas
sbb
push
repz
adc
mov
repnz
leave
xchg
mov
hlt
or
pop
arpl
jne
cli
hlt
rorl
movsb
xchg
clc
aaa
adc
pusha
or
sbbb
lds
insl
pop
cwtl
mov
lds
fcmovnu
scas
daa
cmp
cmp
cs
push
loop
in
jbe
inc
jmp
repnz
sub
daa
mov
mov
jno
loop
jl
jo
dec
cmp
and
jo
nopl
bound
test
mov
out
cmpsb
loop
aad
outsb
pop
ja
pop
mov
test
mov
ljmp
insb
inc
cmp
jb
movsl
jb
outsb
and
push
cmp
sbbb
sbb
lret
pusha
add
sub
test
pop
iret
dec
jo
adc
lcall
add
pushf
sub
sub
adc
mov
xchg
mov
dec
jecxz
adc
mov
and
lcall
arpl
mul
ret
lret
mov
rorl
data16
sbb
notb
test
cmc
in
outsl
jg
mov
jecxz
lret
stc
lret
inc
push
fs
mov
and
sub
out
mov
xchg
xor
add
cmp
push
int
jns
xor
and
ficompl
cmp
iret
adc
and
adc
lea
and
mov
dec
pop
clc
mov
pop
mov
and
mov
test
gs
jge
add
or
sbb
stc
dec
ret
mov
fldcw
inc
les
pusha
sbb
cmp
push
cmpsb
inc
outsb
pop
and
movsl
jae
lcall
cs
aad
push
or
imul
cmp
dec
shl
sbb
sub
push
loopne
jnp
sbb
or
mov
mov
call
outsb
adcl
lock
push
scas
inc
std
dec
lds
sarl
rcrl
sbb
push
rorl
xor
lds
stos
cwtl
xchg
fsubp
cmpsl
mov
and
dec
dec
cld
cld
negl
xor
hlt
dec
mov
ds
xor
ficomps
icebp
es
fsts
aam
div
ret
push
cmp
lods
insl
bound
dec
pop
mov
xor
pusha
inc
sbb
sub
fs
xchg
add
mulb
mov
jnp
roll
arpl
cwtl
cli
lods
test
cmp
push
out
loopne
loop
clc
clc
mov
mov
xor
jns
mov
pusha
stos
lret
out
andb
or
push
cmpsl
jge
pushl
mov
pop
or
add
mov
stos
out
xchg
addr16
int3
mov
inc
fs
dec
mov
icebp
inc
push
daa
cs
sub
mov
jg
lods
add
std
mov
bound
mov
in
mov
xchg
cmp
inc
inc
mov
and
push
addr16
push
fidivrs
sbb
mov
outsb
cmpsl
mov
mov
cld
dec
xchg
dec
pcmpeqw
push
mov
mov
mov
and
imul
sahf
pop
sub
cmp
je
fstl
adc
pop
sub
jnp
loope
jle
xchg
cmc
in
shl
pusha
ljmp
ret
cmp
inc
mov
ss
ja
pop
popf
int3
sbbl
sti
sub
jle
repnz
movsb
bound
sbb
mov
push
scas
jnp
jg
cmp
bound
jle
xlat
mov
int
leave
or
out
arpl
test
push
shlb
sub
pop
mov
int
movl
rol
and
lret
mov
clc
dec
cmp
lcall
out
lds
mov
mov
daa
mov
cmp
lea
dec
lods
cmpsb
push
push
xor
scas
jo
jmp
cmp
xor
xchg
push
mov
cmpsb
lea
enter
pop
xor
ds
inc
pop
loope
sub
stc
jb
push
mov
xlat
movsl
jns
pop
and
jne
subb
xor
das
add
mov
inc
inc
ja
pop
divb
js
mov
or
push
pop
movsb
pop
fdivrl
pop
sub
inc
jge
mov
pop
adc
xchg
mov
les
mov
mov
mov
mov
sahf
fldcw
sub
cwtl
scas
negl
aam
shll
lcall
rep
lret
ret
inc
je
orb
loop
and
cltd
fs
lea
sub
push
or
fdivr
ja
out
gs
xor
dec
mov
into
or
pusha
cmc
cmp
mov
pop
ds
cli
imul
push
testl
cmpsb
roll
das
sub
cmpsl
call
pop
jmp
sub
lock
adc
sub
mov
add
gs
lock
shl
dec
and
cmc
inc
push
daa
imul
ret
repz
pushf
ljmp
xor
inc
lret
xchg
xor
mov
inc
pushf
inc
adc
jmp
je
cs
add
jmp
std
aas
or
or
je
rol
adc
xchg
decb
fsubl
mov
out
mov
daa
addb
jle
pop
push
jno
lods
xor
ret
xor
mov
mov
rorb
and
stc
add
fsubr
mov
sbb
cmp
cwtl
dec
push
jecxz
jbe
cmp
and
mov
mov
outsl
sbb
mov
rcrb
out
mov
sub
jge
aam
push
push
ret
fistps
es
xor
insl
dec
adc
xchg
dec
in
ljmp
push
lods
iret
outsl
pop
mov
mov
and
inc
dec
pminub
dec
add
sub
iret
rcl
test
xchg
push
test
mov
inc
xchg
fcompl
in
dec
roll
adc
mov
lret
dec
shlb
push
addb
shrl
xor
mov
sbb
xchg
jge
test
lret
incl
and
sub
or
mov
cmp
ss
and
add
pop
int
dec
sar
jns
jge
in
mov
arpl
ss
mov
addr16
and
mov
fisubs
mov
pop
adc
dec
jp
add
sub
adc
int
pop
xchg
xor
sub
enter
add
xor
or
sub
push
jnp
ljmp
sahf
imul
rcrl
ret
inc
pop
jge
flds
mov
xchg
xchg
cmp
mov
repz
pop
inc
in
cli
fidivl
sbb
sbb
popf
pop
imul
dec
push
andl
icebp
mov
mov
inc
leave
sbbb
hlt
mov
cmp
mov
push
cmc
lods
or
cwtl
ja
repz
int3
aas
pop
dec
pop
testb
cli
repz
jmp
inc
adc
and
and
cmp
outsl
movsb
rcll
jp
cmp
sub
lods
cmp
mov
jae
jno
mov
jl
push
or
sub
jnp
jb
divb
fsubrs
cmc
push
push
or
jns
sahf
push
push
and
or
cmp
loop
push
adc
outsl
push
jl
loope
fidivl
pop
xchg
cmp
sarl
sbb
pop
movsl
addb
cmpb
sbb
mov
mov
mov
or
sub
decb
pop
movsl
add
mov
sarl
sub
mov
shrb
loop
and
loope
sub
out
mov
dec
cld
mov
mov
and
lcall
and
negl
xchg
lret
jecxz
cmp
cwtl
mov
hlt
mov
and
pop
sahf
pop
xlat
cmpsl
test
repnz
andb
push
loop
sbb
stc
cmp
loopne
aam
xlat
adc
arpl
mov
stos
adc
cmp
pushl
in
sub
pop
inc
or
jnp
jmp
xor
add
push
xor
fcompl
stos
dec
adc
push
fists
je
add
cmp
push
xlat
cltd
mov
add
sub
scas
arpl
jg
idiv
dec
jns
inc
push
mov
mov
jle
dec
cmp
imul
int
movsb
repz
xchg
sbb
pop
cmp
scas
mov
pop
mov
pushf
lock
mov
cs
jge
aad
pop
adc
test
inc
inc
dec
mov
lret
and
or
andl
pop
mov
mov
cmpl
je
pop
push
add
or
shrl
out
loopne
mov
stc
and
jg
shll
adc
negb
dec
std
adc
cwtl
or
cmpb
cmp
lret
rcrb
mov
adc
jmp
push
push
shlb
dec
sub
cmpsl
push
aam
or
ret
outsb
ret
stos
gs
xor
dec
dec
cmpsl
jne
mov
loope
pop
push
aaa
lods
cmp
cmpsl
mov
add
xchg
mov
cmp
sub
mov
mov
stc
push
loop
insb
sub
xor
clc
sub
xchg
or
cs
fnsave
sti
adc
stos
test
push
out
dec
and
push
pop
lahf
repnz
cmp
aam
add
xor
mov
xchg
rorl
pop
aaa
ja
das
sbb
repnz
test
or
and
push
fnstcw
add
xor
lds
jns
out
in
adc
sbb
xchg
pop
cwtl
in
addr16
sarb
jecxz
mov
jb
mov
mov
call
jne
or
mov
mov
in
test
xchg
push
mov
jmp
or
test
push
repz
cs
rclb
cmp
push
and
sub
xlat
jno
cmpsl
mov
das
in
sub
mov
add
pop
mov
xchg
xchg
jae
xor
mov
sbb
inc
fs
and
inc
push
pusha
imul
push
enter
xor
pop
mov
or
cmp
stc
mov
pop
arpl
out
lea
push
dec
mov
das
add
xor
pop
and
inc
pop
lds
pusha
rcrb
scas
cld
enter
fdivrl
jecxz
movsb
pop
shrl
ds
jbe
testl
daa
mov
pop
in
jno
dec
cmpb
dec
mov
push
negb
xorb
out
adc
and
stos
add
pop
add
inc
ss
in
and
enter
pop
scas
test
push
imul
jo
popa
cmp
cmc
jge
xchg
and
aam
adcb
out
add
fildl
xor
cmp
int
fistps
sub
pop
pop
and
push
lcall
mov
sub
or
adc
dec
hlt
fdivrs
push
outsb
mov
mov
leave
mov
testl
movsb
mov
int
pop
push
sub
mov
pop
lret
mov
iret
cwtl
adc
push
ss
stos
fistps
add
in
sbb
jbe
pushf
inc
sar
lock
movsl
adc
pushf
sbb
out
iret
and
xor
fdivs
iret
out
jne
cli
outsl
scas
xor
inc
or
mov
into
into
mov
mov
dec
into
adc
lahf
mov
lock
imul
out
add
xor
dec
aaa
lods
std
push
and
popf
fwait
mov
jge
inc
mov
ljmp
out
mov
loopne
ds
inc
ja
dec
fxch
ja
fmuls
repz
fwait
xchg
fiadds
sbb
jne
mov
and
fistps
mov
adc
cwtl
sbb
fwait
jge
jmp
xlat
dec
cs
ss
sbb
nop
mov
pushf
mov
dec
xor
es
jecxz
je
movb
call
sub
and
adcl
lret
pop
jo
repz
inc
imul
mov
jle,pt
and
pop
into
shll
hlt
negb
cmp
cld
cmpsl
mov
fadds
cld
js
add
inc
xchg
out
pushl
inc
and
pop
and
xor
sub
jne
aam
adc
ret
std
push
es
stc
push
dec
dec
jp
xchg
int
fsubr
mov
sbb
movsl
ficompl
mov
or
ret
mov
cwtl
inc
push
add
jno
mov
jmp
push
das
ret
push
sbb
clc
arpl
sub
dec
ds
shll
xor
pop
cmpsb
out
stos
xchg
inc
imul
fstpl
cwtl
push
cmp
decl
sarb
xor
addr16
xor
sti
xor
cli
ret
mov
movsl
adc
dec
jl
arpl
jge
dec
dec
nop
push
xchg
inc
sbb
fwait
push
mov
mov
push
pop
in
out
mov
out
jmp
int3
add
in
les
mov
test
test
rcrl
pop
sbb
jp
push
jmp
mov
std
xchg
inc
add
dec
cmpxchg
out
or
or
fldenv
adcl
push
pop
sub
sub
push
cmp
sbb
adc
jnp
dec
stos
jle
cmp
in
mov
mov
xlat
xchg
ret
dec
pop
jmp
movl
sbb
rolb
out
mov
jecxz
test
xchg
mov
ret
fsubrl
scas
movsb
scas
push
push
setle
paddusw
mov
pop
mov
leave
jo
pusha
hlt
cmp
arpl
xor
xchg
push
or
jle
add
adc
insb
pop
push
sbb
fiadds
mov
scas
mov
or
inc
movsb
out
ja
push
int
jbe
les
sbb
enter
lret
dec
cmp
fwait
jno
or
or
test
push
flds
loopne
add
mov
lahf
xor
push
scas
daa
sub
ljmp
cmpsb
out
cmp
or
test
inc
mov
cld
push
push
ja
jnp
push
sub
cltd
cmpl
popa
mov
movsl
mov
ret
cmpsl
pop
andb
mov
xor
mov
imul
add
inc
lcall
aaa
fdivrl
lock
dec
or
shlb
dec
pop
mov
sahf
adc
jmp
les
fnstsw
and
cmpsl
dec
mov
sub
fsubl
lret
lock
mov
addr16
sahf
dec
fsubrl
sbb
and
repz
das
mov
sub
pop
adc
ljmp
push
fdivs
sahf
insb
out
ret
or
mov
push
inc
cmp
sti
into
or
sahf
inc
cmc
xchg
push
sub
pop
fwait
xchg
jo
ret
scas
and
test
cmp
cs
data16
mov
lods
in
loop
cmpsb
icebp
sub
fdivrl
ja
loope
insl
in
push
movsl
aaa
sti
lods
pushf
lahf
decb
sbb
gs
and
adc
dec
aas
js
inc
mov
cmp
push
xchg
adc
jecxz
aaa
repz
pop
xchg
mov
call
fs
mov
adc
pushf
inc
jno
jmp
das
mov
push
push
aam
xor
into
nop
jl
cmp
out
in
jb
out
push
dec
lods
mov
je
test
inc
fsubrs
movb
jbe
dec
cwtd
mov
and
enter
lea
fucomi
or
xchg
or
inc
test
int3
mov
cmc
or
sti
rol
sub
ja
popa
push
or
mov
rcrl
icebp
cmpsl
mov
dec
lret
mov
xlat
mov
mov
mov
push
shl
inc
adc
inc
mov
loopne
jecxz
cli
aam
push
ret
mov
es
aam
addr16
dec
inc
loope
xchg
or
jno
sub
dec
popa
xchg
cmp
or
mov
adc
push
maskmovq
testl
rcrl
out
lea
bnd
fnstsw
imul
loop
xor
outsb
rorl
out
stos
xchg
xchg
and
dec
push
adc
lods
ljmp
arpl
or
shlb
and
xchg
repz
mov
in
ja
or
andl
mov
lods
or
imul
push
pop
ss
add
inc
out
push
mov
jns
out
cmpl
xchg
jns
sti
mov
sbb
mov
push
es
sbb
jp
jge
mov
add
orl
or
jne
cmc
sbb
sub
xchg
lods
into
jmp
mov
mov
out
je
sub
and
les
jp
stos
test
jo
insb
or
pop
jnp
mov
jne
mov
imul
push
iret
out
sbb
ret
mov
and
inc
jmp
inc
adcb
xchg
sbbl
inc
daa
inc
bound
fimull
jno
add
imul
scas
pop
jmp
push
push
icebp
cmp
ljmp
repnz
mov
mov
arpl
adcl
out
or
or
cmpsl
aaa
int3
fistl
mov
iret
and
add
pop
subl
fsubp
mov
sbb
xchg
js
scas
cmpb
and
in
push
rcrl
push
insl
lahf
and
push
jge,pt
xorb
mov
jmp
jl
loope
dec
push
popa
aam
sbb
sbb
push
jl
push
adc
cmp
mov
cmpsb
jno
mov
enter
pop
sub
aaa
push
data16
loope
jmp
sub
ja
cmp
and
test
movsl
xchg
xor
imul
adc
outsl
add
dec
aaa
xor
mov
push
jle
pop
xchg
aaa
iret
js
inc
addr16
and
lcall
mov
es
sub
pop
outsb
inc
mov
adc
add
jg
mov
mov
ljmp
mov
push
stos
pop
sub
push
outsl
repnz
cs
fwait
push
pop
lret
ret
jnp
mov
pop
je
scas
or
test
push
outsl
ficoml
adc
pop
adc
lods
adc
sbb
cmp
jmp
stc
out
xchg
out
aad
in
xor
js
mov
or
fdiv
pop
cs
add
ficomps
xchg
fists
xchg
jmp
imul
sub
data16
insl
lods
lret
cmp
mov
pop
fildll
arpl
mov
shlb
pop
push
sub
gs
cli
loopne
cld
pop
dec
sahf
mov
data16
push
cmpsb
xchg
fs
sub
cmp
out
and
pop
pop
movsb
dec
dec
adc
scas
jmp
dec
lods
cs
shlb
xchg
xchg
dec
and
je
push
orb
mov
call
stos
xor
incb
notb
jne
sbb
pop
cmp
mov
inc
lahf
adc
das
jb
clc
mov
lods
inc
mov
pop
out
rcll
add
and
cmc
std
or
sbb
inc
sub
cld
into
pushf
in
lret
pop
sub
mov
inc
fcomi
cli
ja
pop
bound
shr
ret
jbe
lcall
xor
insl
in
outsl
dec
inc
fcoml
dec
lahf
xor
cmp
lock
and
push
mov
push
into
mov
cltd
stos
fwait
scas
test
jnp
mov
popa
jns
mov
mov
movsl
or
clc
fprem
popf
xchg
jp
mov
std
shl
inc
jns
cld
or
out
jno
sbb
out
out
decl
sub
int
arpl
and
xor
fld
mov
stos
xor
jecxz
test
mov
sti
cmovp
add
stos
inc
or
dec
sbb
ret
add
xchg
sbb
jns
sbb
xchg
enter
adc
shl
pop
leave
movsb
popa
sbb
pop
jp
pop
pop
mov
add
ret
push
stc
dec
push
faddp
jne
add
fisttps
xchg
jg
in
jmp
insl
jb
sbb
lock
or
aas
fwait
bound
pop
stos
jnp
mov
cmpsb
push
test
insb
jbe
lea
mov
jne
mov
xlat
ret
iret
dec
pusha
loop
pmuludq
outsl
leave
inc
hlt
inc
fs
mov
push
inc
pop
lods
popf
popl
mov
loope
add
xchg
push
mov
sbb
insb
out
push
add
scas
push
cmp
test
adc
addb
push
jno
repnz
pusha
leave
pop
mov
hlt
into
cmp
arpl
int
inc
or
jns
les
lahf
push
mov
ret
or
scas
stos
int3
jmp
dec
pop
mov
push
fimuls
aas
inc
shrb
and
lret
dec
cmp
pop
frstor
mov
jbe
mov
cli
sbb
xor
cmp
pop
add
jl
or
mov
lahf
mov
xor
test
add
push
mov
and
std
inc
jecxz
scas
cmpsb
hlt
dec
out
in
fcomps
cmpsl
pop
imul
test
sub
cmpsl
or
and
xor
or
sbb
inc
lea
push
add
push
loop
pop
mov
push
push
pop
mov
mov
sbb
outsb
mov
cmpsb
push
rcr
pop
popf
jg
leave
or
jbe
int
fsubl
add
xchg
push
lods
loopne
int
push
sub
sbb
pop
lret
out
cmc
pop
rcll
sbb
fstps
in
jmp
adc
and
aas
mov
push
stc
or
adc
dec
inc
adc
lds
ss
mov
fsubs
jmp
cli
or
xor
lods
cmp
jmp
test
ja
outsl
cmc
pop
imul
pop
aad
fsts
cmpsl
imul
xor
daa
xor
xor
jbe
mov
pop
sub
pop
andl
or
icebp
decb
mov
loopne
clc
add
add
inc
mov
add
je
gs
stc
repz
mov
in
pop
sbb
and
pop
push
xor
push
pushf
pushf
aam
jmp
sub
cs
call
nop
xor
mov
jb
push
dec
lcall
jecxz
insb
sbb
lea
lea
das
call
push
cmp
sbb
dec
loope
inc
fisttpl
repnz
jp
daa
loopne
inc
mov
jp
mov
arpl
add
shll
xor
add
scas
inc
xor
mov
jecxz
icebp
push
int
cld
stc
xor
mov
cltd
mov
pop
cmpl
sub
mov
aam
sbb
ret
stos
cld
push
mov
jns
int3
icebp
fs
cmp
xchg
mov
jecxz
mov
shrl
popf
xchg
mov
and
lock
cmpsl
cltd
loop
mov
mov
add
js
inc
push
out
clc
adc
addl
in
lock
add
pop
cmpsl
pop
push
fs
out
aam
dec
xchg
mov
fists
rolb
in
or
xor
clc
dec
or
inc
popf
mov
scas
insl
rorb
subl
idivb
imul
and
cmc
sbb
lcall
add
mov
push
shlb
pop
jns
sbb
in
movl
mov
test
push
jp
call
cli
mov
dec
clc
std
dec
jmp
outsl
add
fildll
lret
xchg
push
test
jmp
cmp
int
outsb
cld
iret
out
pop
pop
sub
sbb
or
js
and
and
arpl
inc
in
inc
pop
pusha
mov
iret
lods
stos
jle
cmp
cmp
and
inc
js
jae
cmp
or
add
pusha
xor
mov
gs
scas
clc
cmp
jno
imul
scas
int
push
push
in
jg
mov
jae
repnz
imul
hlt
sbb
sub
cmpsl
fisttpll
add
pop
aaa
dec
or
or
mov
int3
out
pop
loope
add
lds
test
jbe
scas
inc
nop
push
and
out
movsb
mov
in
push
or
mov
jge
mov
and
mov
sbb
jno
sub
or
or
xor
xor
add
push
daa
rcr
test
dec
mov
xchg
cmpsb
ja
push
in
mov
or
pop
stos
mov
push
xor
loope
push
out
sbb
les
outsl
jge
ds
movsl
mov
mov
fisubrs
sbb
xor
or
xor
mov
dec
js
add
pop
and
inc
lcall
push
fdivrl
sub
outsb
push
xlat
or
push
pop
sahf
shlb
or
std
mov
stos
mov
pop
lea
or
flds
mov
cs
adc
dec
negl
les
lret
in
shrl
or
aad
sahf
mov
subb
inc
outsl
cwtl
jmp
loop
bnd
int3
push
andb
adc
mov
ss
xor
int
daa
fsubs
movsl
out
lds
cli
cmp
xchg
xor
mov
mov
push
push
into
pop
add
cmc
out
shll
mov
xchg
and
cmp
xor
adc
cmc
ret
cwtl
or
test
lods
cltd
cwtl
mov
xchg
outsl
cmp
cltd
sub
sub
mov
in
xchg
cwtl
test
mov
ret
lds
dec
pop
push
ret
inc
ret
sbb
stos
mov
in
repz
mov
dec
movsl
enter
cwtl
pop
pop
sub
aad
adc
adc
jmp
iret
and
jg
mov
nop
or
xchg
add
cmc
pop
dec
adc
mov
outsl
pushf
jl
nop
mov
out
mov
out
mov
push
xorl
movsl
addr16
jg
test
stos
adc
and
das
xor
jo
insl
cmpl
into
push
jecxz
mov
imulb
mov
push
mov
sub
mov
and
jecxz
std
fildll
jae
clc
mov
push
fdivp
mov
addr16
mov
repnz
sub
adc
inc
ret
cmp
clc
insl
mov
loopne
mov
ljmp
insb
lods
push
mov
adc
daa
mov
adc
push
add
mov
adc
out
push
cmp
xchg
xchg
data16
cmp
rorl
sbbl
aaa
and
xchg
stc
pop
popf
push
movsb
rcrl
mov
cmc
xor
push
or
mov
xor
pop
popf
mov
mov
jo
sbb
test
fisubrs
jns
mov
inc
ja
sub
fwait
and
push
push
or
add
mov
add
jns
mov
fcoms
fwait
aas
mov
and
pop
aas
pop
dec
addr16
bnd
sub
mov
mov
pop
lds
inc
les
xchg
xchg
xchg
and
dec
aam
add
cmp
out
xchg
mov
adc
mov
stos
add
test
insb
dec
test
jnp
cmp
enter
daa
stc
fxch
or
inc
dec
ud1
jge
inc
or
pop
jae
pop
insl
push
int3
inc
jbe
fnsave
jbe
jle
and
pop
nop
fisubl
hlt
xchg
add
dec
xor
das
dec
mov
xor
push
sub
adc
inc
mov
cmpsl
push
push
leave
dec
mov
jmp
sub
orl
or
or
cmpsl
add
or
out
pop
adc
neg
rorb
vmovq
loop
xor
aaa
pop
aam
jbe
les
scas
dec
jbe
xorl
push
jg
daa
mov
cmp
inc
mov
sbb
jl
loope
dec
mov
pop
push
gs
xor
pop
adc
scas
inc
or
push
and
push
ds
add
cmpsb
cli
nop
imul
cmpsb
iret
jb
xor
popf
pop
jmp
movsb
mov
xlat
inc
cvttps2pi
push
gs
xor
out
ljmp
icebp
aad
sbb
jmp
cwtl
pushf
add
fdivrl
jno,pt
lahf
xchg
je
lock
push
mov
arpl
dec
jae
outsb
imul
ljmp
push
jl
sbb
mov
mov
dec
loop
sbb
addr16
mov
or
dec
mov
sub
fadds
lret
cmpsb
rol
mov
sbb
mov
repz
or
fwait
xchg
loop
and
fs
inc
pop
adc
jmp
cmp
sbb
and
xchg
and
cli
outsb
rorb
out
loop
cmp
daa
ds
in
into
cmp
adc
xor
mov
fisubrs
emms
adc
or
inc
sub
loop
lods
sbbb
xlat
fcomps
sub
pop
in
add
sti
imul
xlat
gs
xor
loopne
sub
outsl
inc
iret
dec
addr16
clts
adc
aas
scas
add
lods
dec
jns
jno
fidivrl
pushf
push
add
sahf
inc
and
sub
mov
mov
jmp
aaa
subl
dec
test
nop
call
pop
std
jb
mov
dec
mov
or
xchg
jle
arpl
xchg
xchg
call
call
insb
pop
orl
push
lock
xor
leave
cmp
psubusb
mov
pop
test
add
dec
std
std
adc
imul
imull
fcmovnb
jle
add
cld
dec
fistpl
mov
js
jg
cmpsl
lock
rcl
pop
mov
mov
sbb
es
or
xor
xchg
or
push
popa
jecxz
jge
mov
inc
popf
mov
cs
jno
cmp
aaa
add
mov
gs
pop
adc
fstpl
pushf
test
mov
adc
sbb
cmp
shl
in
call
stos
inc
pop
shr
lcall
push
jg
aas
ljmp
lcall
xchg
in
cmp
mov
orl
xlat
test
call
es
dec
mov
pop
or
jmp
rcrb
cwtl
and
mov
mov
out
out
addr16
lds
sahf
jns
push
mov
fistpl
sub
mov
mov
mov
cli
cwtl
sub
in
jp
and
mov
sub
daa
dec
scas
or
jne
js
mov
sbb
fbld
pop
std
jmp
into
xor
dec
out
mov
sub
adc
push
js
jns
jne
sub
leave
mov
insb
mov
xor
sahf
jnp
cmpsl
push
and
pusha
ret
iret
push
push
ret
sahf
pop
jp
inc
adc
xchg
insl
push
add
ret
jle
inc
pop
maxps
push
push
jl
pop
cmc
mov
dec
stc
cltd
imul
loopne
xchg
fs
push
jb
push
adc
pop
mov
cli
out
leave
ret
and
hlt
scas
mov
xor
aaa
xchg
or
imull
cli
aaa
enter
insb
or
add
mov
lods
mov
adc
lds
sbb
std
les
and
in
push
cmp
ret
test
xchg
aas
jge
push
ss
pop
je
mov
cmp
adc
in
stos
jl
mov
push
dec
push
mov
jo
mov
lahf
into
nop
ljmp
ss
adc
inc
nop
jmp
adc
ror
js,pn
pop
sub
xor
mov
out
dec
fs
xor
cmp
out
adc
xchg
and
mov
sbb
in
xchg
mov
xor
vminss
cld
fistpll
adc
pop
push
test
lcall
dec
lds
cmp
inc
adc
insb
jne
jg
mov
out
mov
mov
mov
popa
int
dec
sub
mov
pop
notl
adc
mov
scas
lret
sahf
jl
sub
fs
xor
dec
cmp
push
addb
mov
push
popa
sbbb
cmp
xlat
insl
push
out
add
sub
lds
cmp
add
cmp
and
cmc
je
stc
xor
aas
pop
lods
fstl
loop
aam
fmul
push
adc
jne
add
xor
lods
addr16
mov
or
xchg
insb
or
sti
sbb
inc
mov
cmp
dec
sbb
out
jmp
mov
les
lea
xchg
jo
jo
cwtl
inc
cld
cmp
dec
xchg
sbb
xor
dec
xor
arpl
cs
cmpsb
not
xchg
mov
mov
jb
test
dec
mov
mov
enter
ret
xchg
lea
push
cmpsl
test
mov
addb
adc
fcmovnbe
loope
pop
lds
inc
mov
test
out
mov
xchg
stos
xchg
in
sub
divb
xchg
movsb
dec
cmp
cmpsl
mov
xchg
sub
jp
fs
mov
repz
adc
pop
ficoms
imul
sbb
ret
push
repnz
es
aad
insl
sub
aam
inc
push
cmc
ljmp
jb
daa
sti
test
movsb
cmp
and
jg
psrld
mov
push
repnz
cltd
xchg
mov
jl
push
rcl
fldl
push
clc
xchg
adc
jge
ja
cmp
inc
push
stos
xor
out
std
xor
xor
or
xor
pop
repnz
adcl
xchg
mov
mov
sub
mov
ja
xor
filds
imul
push
dec
sarl
repnz
out
lds
bound
out
jns
repz
mov
add
test
mov
mov
xchg
addr16
int
mov
insl
hlt
mov
xchg
dec
sub
lods
xchg
adc
ffreep
adc
xchg
lret
orb
cltd
leave
adc
sbb
lret
icebp
pop
sub
or
cld
push
mov
mov
call
sbb
jnp
enter
inc
nop
in
inc
icebp
pusha
pop
push
iret
leave
mov
sbb
sbb
inc
and
mov
jbe
sub
push
add
sub
das
inc
fldl
fcmove
ja
xchg
mov
dec
sbb
jp
imul
test
insl
mov
xor
aaa
repnz
cmc
and
cmp
cli
cmp
mov
or
jb
push
aaa
xchg
rolb
nop
pop
int3
xchg
pusha
inc
pop
outsb
jmp
ficoms
or
rcrb
fsubrl
pop
mov
cmp
xlat
jne
sub
lret
mov
jbe
sbb
sbb
jmp
test
dec
jno
xchg
adc
mov
lock
sub
stos
cltd
dec
jo
sbb
lahf
in
fisttps
xor
jl
pop
int3
push
cmpsb
add
mov
pop
addr16
jle
add
ss
cmp
xor
movsl
mov
out
popl
js
adcb
dec
sbb
ficomps
andl
and
int3
pop
push
addr16
ja
popf
cmp
notb
mov
sub
lods
cmp
adc
inc
cmpsb
pop
jg
lock
mov
xor
mov
sbb
and
out
push
mov
mov
nop
notl
mov
shl
sahf
mov
js
lcall
test
testl
loop
pop
cmp
sub
dec
adc
mov
ret
mov
cmp
xchg
xchg
out
imul
es
push
or
push
push
into
add
sub
cmp
xor
xor
pop
push
mov
inc
imul
xor
arpl
inc
mov
lods
dec
push
stos
mov
inc
sub
mov
mov
mov
cmp
mov
pop
dec
jns
sbb
cld
rcll
les
stos
mov
sbb
adc
clc
pushf
scas
repz
and
jb
pop
adc
pushf
dec
mov
test
cs
mov
nop
sahf
xchg
dec
aas
mov
iret
ds
jbe
lock
fsub
jecxz
les
cltd
jae
lea
xchg
mov
mov
dec
push
mov
cli
xorl
jns
add
fildll
inc
es
icebp
das
int
jle
es
mov
rcrl
inc
cmc
std
dec
outsb
hlt
cwtl
loope
push
cmpsl
mov
jb
inc
je
icebp
mov
repnz
movsl
shl
lret
dec
sub
in
or
test
adc
lods
pop
or
xchg
outsl
fadd
out
jno
ret
insl
push
outsl
add
fidivrs
mov
mov
les
jo
jno
xchg
rdtsc
in
add
pop
ficompl
or
push
test
mov
clc
add
lds
xor
rcll
dec
stos
and
out
pusha
sub
jmp
ljmp
sub
or
xor
inc
bound
mov
in
stc
test
mov
ja
std
leave
dec
xor
mov
or
and
fwait
mov
stos
push
icebp
add
add
and
jmp
loope
int
mov
icebp
mov
mov
mov
jo
aaa
addr16
inc
jp
sub
mov
and
mov
push
inc
cmovle
pop
jne
adc
clc
inc
push
movsl
scas
xchg
sahf
fldt
xchg
fs
subl
pop
sub
push
notb
xlat
stos
pop
lret
imull
adc
jle
je
in
pop
out
clc
inc
pop
iret
sub
aaa
ret
pop
pop
insb
popa
xchg
inc
sub
cwtl
push
adc
dec
movsb
mov
pop
cld
mov
xchg
or
push
imul
mov
add
inc
adc
jecxz
jo
xor
mov
or
hlt
inc
adc
arpl
icebp
inc
sbb
and
aaa
inc
xchg
mov
add
fcmovne
sbb
pop
popf
xchg
xchg
fidivrs
cmpsl
pop
shlb
push
scas
mov
mov
cmp
or
inc
jbe
adc
sbb
ficoml
cmp
adc
jno
inc
xchg
jl
push
js
add
push
push
xchg
xor
outsl
mov
loopne
jae
mov
sub
xchg
push
ja
rolb
repnz
pop
dec
mov
pop
cmpsb
add
sbb
sbb
sbb
push
sub
or
ds
xchg
outsb
movsl
mov
sbbl
subb
xchg
sbb
addl
movsb
xor
add
in
pop
pop
jl
add
pop
sbb
mov
or
push
rcrb
sub
jo
outsb
xchg
in
adc
and
adc
inc
in
mov
jg
mov
out
add
clc
add
push
mov
adc
adc
stos
lahf
roll
inc
sbb
cltd
ret
sahf
ret
test
je
outsl
adc
imul
loope
stc
test
push
fs
movsl
adc
xchg
ss
sarb
imul
test
xchg
push
push
xor
and
cmp
or
sub
into
out
fs
add
xor
pop
je
mov
mov
adc
inc
popa
add
ficomps
les
lods
xor
das
or
xchg
std
mov
mov
inc
lret
jbe
lods
cmpsb
push
gs
xchg
loopne
adc
dec
fsubrs
sub
xchg
les
xchg
loop
lods
mov
xchg
idivb
cmp
in
sbb
test
adc
dec
xchg
jmp
pop
pop
or
nop
jns
dec
aas
inc
shl
jb
sub
je
fcom
jecxz
add
pushf
xchg
test
jp
mov
stos
and
dec
or
orl
cs
pop
or
inc
lret
inc
inc
aaa
scas
das
lods
add
mov
imul
lret
hlt
dec
shr
outsl
sbb
mov
popa
std
bnd
cwtl
pushf
xchg
sahf
cmpsl
mov
fidivrs
mov
cld
rorb
cltd
mov
or
mov
and
sbb
mov
sbb
addr16
shll
cmc
inc
aam
push
outsl
ret
jne
sti
es
inc
jns
dec
pusha
dec
and
ret
xchg
lds
ljmp
int
std
movsl
mov
out
mulb
or
jmp
nop
ret
xor
sbb
adc
lds
and
fisttpll
out
xchg
stc
sbb
jae
shr
fistl
stos
psubq
out
ret
sbb
xchg
adc
xchg
jae
pop
mov
mov
in
xor
push
mov
xor
jmp
dec
mov
sub
and
sar
ret
push
or
xchg
and
add
sub
out
and
bound
movsb
jns
mov
push
xchg
mov
enter
out
pop
sub
ret
pop
insb
jp
inc
jle
fdivrp
in
mov
jne
ret
dec
pop
int
jne
je
mov
hlt
repnz
cmp
xchg
jno
adc
rcl
xchg
das
in
sbb
cmp
repz
sbb
enter
jae
xor
and
push
pop
lret
insb
clc
pop
out
jnp
addr16
adc
sbb
sub
iret
xchg
ret
cltd
pop
mov
outsb
jmp
push
fmuls
sbb
fstpt
xor
das
push
xchg
popa
jle
sbb
cli
pop
imul
out
scas
mov
sub
out
mov
bsr
leave
sub
hlt
nop
mov
push
or
push
jne
or
push
add
or
xchg
stos
int3
insl
sub
sti
fcmovnu
pop
rcrl
rorb
scas
fwait
and
and
out
jno
aas
xor
push
xchg
iret
pop
jbe
jle
jge
or
sbb
jne
daa
mov
sarb
push
and
and
jl
jp
dec
jno
dec
push
icebp
shll
lret
lahf
sub
sbb
pop
mov
cmp
mov
in
inc
jmp
enter
pop
in
subb
mov
sub
mov
cmp
inc
enter
xchg
movsl
ja
and
ret
xor
sbb
test
fwait
test
stos
pop
mov
jmp
pop
fwait
hlt
sbb
push
pop
mov
mov
outsb
cmc
leave
popf
adc
std
inc
js
push
fwait
mov
add
mov
cmp
aas
push
mov
dec
imull
daa
test
lret
xlat
rcrl
outsl
mov
rcrb
mov
sahf
adc
punpcklbw
xorb
ficoms
pop
push
popf
fs
das
addr16
inc
in
dec
pop
fdivrl
or
xchg
ret
lret
cli
cmp
xor
xchg
cmp
xchg
sbb
lods
lret
jne
leave
or
xchg
adcl
imul
lcall
sbb
xchg
mov
test
sub
and
in
lods
push
mov
and
gs
mov
dec
aaa
or
and
or
cmp
out
jnp
setbe
pop
sub
mov
rcrb
jg
adc
fiadds
outsb
jno
aad
push
lods
nop
push
cmp
mov
dec
mov
jecxz
mov
lahf
das
cmp
loope
xchg
call
in
sti
mov
push
test
dec
arpl
pop
pop
scas
sahf
sub
andl
das
mov
or
lods
fwait
adc
sarl
and
std
cltd
pop
cwtl
push
jnp
cmpsl
mov
mov
icebp
pop
bound
lret
sub
and
ja
ficomps
cmp
out
scas
testl
daa
adc
ret
add
call
insl
ss
outsl
dec
sbb
and
ljmp
adc
mov
sbb
cmpsl
lock
pxor
ss
sub
xchg
test
addb
pop
movsb
push
or
fnsave
mov
pushf
sbb
jae
pop
test
arpl
xchg
pop
mov
push
jmp
push
jmp
xchg
jp
bound
ljmp
pop
jb
sbb
test
jecxz
xor
out
sbb
inc
push
inc
or
test
fwait
jl
adc
inc
cmpsl
fucomp
bound
jns
xchg
clc
in
stos
inc
xchg
icebp
jle
mov
mov
mov
out
out
adc
mov
hlt
cmp
test
dec
cmp
jne
cmp
mov
mov
aas
xchg
inc
sub
cmpsl
xchg
cli
jl
or
jg
mov
jno
nop
sahf
mov
push
je
test
inc
sub
xor
insb
arpl
mov
jle
stos
add
jmp
sti
pusha
cs
iret
out
lods
ret
sti
pop
fcmovbe
push
jae
and
popf
mov
sti
push
inc
pop
stc
or
loop
adc
hlt
mul
imul
out
scas
pop
push
std
push
mov
jge
scas
xlat
ds
push
mov
lahf
xchg
hlt
in
and
std
or
jecxz
in
icebp
out
cmp
add
cmp
pop
dec
mov
fdivrp
cmpsb
lret
lds
out
jp
pop
and
inc
xchg
cmp
icebp
mov
push
in
sub
pusha
push
sbb
aam
cmp
and
jl
jb
dec
loopne
mov
xor
and
in
push
sbb
jle
or
or
mov
fsubrp
sub
sbb
and
shrl
mov
dec
hlt
cmp
xor
cmp
inc
inc
movsl
int
xchg
and
hlt
push
push
push
inc
adcb
sbb
xchg
movsb
sub
xor
sar
imul
add
js
and
sbb
repz
and
jle
in
sub
inc
clc
outsb
pop
mov
mov
jg
testb
mov
cmp
mov
int3
add
data16
and
push
sub
jb
lret
daa
shll
xchg
sbb
xchg
sahf
sahf
or
adc
rolb
loop
adc
fs
inc
adc
leave
mov
cmp
ret
dec
mov
cli
insl
outsb
adc
and
adc
mov
das
arpl
lods
test
nop
add
xor
arpl
pop
mov
lods
adc
and
mov
jle
pusha
fs
adc
add
jns
push
xlat
adc
push
sub
rol
mov
sbb
and
aam
outsb
incb
gs
cmp
loopne
adc
xchg
outsl
addl
pop
inc
les
sbb
dec
and
jl
cli
sbb
ret
icebp
adc
sbb
mov
pushf
dec
inc
bnd
mov
iret
aad
cli
test
das
das
inc
aas
jle
shll
jge
dec
fldt
je
int
jecxz
push
add
cmp
lea
into
call
mov
dec
cmpl
dec
fcmovu
xchg
mov
pop
push
in
dec
inc
fsubs
das
push
inc
mov
fs
or
in
rorl
pop
std
inc
sub
adc
test
fiaddl
icebp
ss
cld
es
lret
xchg
pop
pop
mov
add
mov
loop
lock
mov
pop
hlt
in
rolb
mov
inc
ret
xchg
pushf
sub
dec
xchg
insl
sbb
test
xchg
inc
andl
push
mov
lods
shll
dec
mov
push
lcall
dec
mov
add
pop
cltd
arpl
add
xlat
lds
aas
mov
frstor
clc
mov
roll
dec
leave
mov
pop
push
rorl
nop
repz
mov
jno
mov
outsb
outsb
incl
xorl
fs
aad
xor
jae
mov
ret
enter
outsb
pop
test
ret
aaa
ja
insb
pop
dec
push
mov
xor
sub
fwait
ds
push
fiaddl
add
pop
idiv
out
inc
push
bound
ret
mov
push
mov
lds
mov
mov
inc
cli
jp
sbbb
mov
mov
push
lret
push
mov
shll
inc
je
xchg
pop
and
jmp
lds
adcl
out
sbb
sub
idivl
push
mov
xor
cmp
and
into
inc
fnstsw
pop
out
jle
mov
in
or
jbe
inc
and
pop
adc
mov
jnp
mov
push
push
pop
in
popf
addr16
mov
fnstcw
inc
xchg
pavgw
imul
jge
sub
push
aad
xchg
popf
das
call
repnz
xor
hlt
es
arpl
imul
insl
into
push
andl
sub
int3
inc
inc
inc
pop
sub
fisubs
cld
adc
test
scas
pop
lods
sti
and
xchg
cmp
clc
push
jbe
mov
jge
movsb
jecxz
jo
aas
daa
mov
cmp
je
jbe
and
jl
ds
xor
mov
in
push
lods
jo
sbb
lahf
imul
or
addb
adc
adc
jbe
adc
mov
sbb
add
test
cmp
mov
push
dec
and
std
std
andb
sbb
outsb
push
add
add
xor
outsl
sbb
cs
ljmp
fadds
cltd
mov
lods
push
lds
push
fsubrl
pop
pushf
sub
push
fildll
jo
adc
mov
pop
jg
push
xor
xchg
pop
shll
cmp
lds
int
imul
shlb
push
or
xchg
rorl
push
pop
ja
push
aaa
jns
stos
xlat
test
push
outsl
mov
psrad
jne
stc
int
or
pop
sbb
adc
mov
iret
int3
cs
jle
stos
out
sub
xor
icebp
sbb
ret
mov
into
icebp
arpl
push
popa
lea
aaa
inc
ljmp
xor
adc
jb
add
mov
mov
xlat
push
inc
cmp
outsb
insb
dec
mov
andl
sti
cmpl
divb
daa
loopne
lods
dec
cmc
xlat
add
fldcw
daa
les
sub
sbb
jp
aas
inc
cmp
dec
mov
cwtl
mov
pop
out
loop
adc
orl
clc
add
or
pop
jb
je
dec
push
icebp
insb
je
fcomps
movsl
mov
into
call
bound
cli
mov
out
rcr
pop
dec
cmp
sub
rcr
pop
hlt
sub
movb
mov
dec
push
mov
mov
fwait
pop
xchg
rcr
lods
std
idivb
inc
std
out
movsl
cwtl
int
xor
or
mov
cld
push
mov
lret
push
negl
mov
pop
fdiv
sub
aad
rclb
jg
mov
jmp
es
push
daa
insl
add
mov
xchg
subb
stos
xchg
mov
insl
push
cld
lods
faddl
mov
push
lret
push
and
fstpl
adc
insl
pop
rcrb
sub
mov
cwtl
sbb
jge
fldl
or
in
sub
sbb
add
shl
or
mov
out
in
xchg
mov
ljmp
jmp
cmpsl
into
xor
orb
movsl
sahf
dec
jmp
inc
sub
inc
decb
fisubl
or
addb
insl
rorb
push
jge
clc
add
jns
ret
out
and
bound
sbb
jns
cs
in
mov
mov
jno
mov
pop
sbb
cmp
mov
pop
mov
mov
rcrl
add
jmp
mov
orb
pusha
push
in
ljmp
xchg
nop
cwtl
lods
and
xor
mov
out
sub
repnz
push
daa
pop
inc
and
ret
je
jnp
adc
jle
mov
in
mov
add
ret
cmc
pop
dec
fimuls
jae
sbb
and
sarl
pop
push
leave
fimull
nop
xchg
dec
bound
outsl
shrl
mov
sbb
inc
adc
cmpsl
mov
in
inc
lea
andb
mov
scas
or
ftst
xor
inc
pop
adc
push
mov
add
pmaxsw
shl
fiadds
lcall
clc
scas
cmp
and
cmp
lahf
movsb
loopne
jo
xorl
mov
sbb
rcll
xorb
dec
inc
jno
sahf
xor
add
push
lcall
jo
push
scas
lahf
mov
xchg
test
mov
xor
cmpsb
vpcomuw
adc
adc
pop
push
jl
loope
sahf
xchg
sub
test
fwait
loop,pt
int
fcmovnu
stos
and
mov
movsb
xorb
sbb
in
fldl
sub
xchg
push
loope
icebp
out
sbb
or
and
lcall
lret
jns
sub
and
outsb
push
xor
mov
scas
jg
mov
fmuls
and
lds
test
or
sbb
pusha
sub
and
jp
int
jecxz
or
or
fcompl
movsb
jmp
addb
or
fidivl
stc
test
adc
mov
cmp
cmp
pop
cli
ror
xor
inc
adc
cwtl
outsl
or
inc
movsl
into
jb
push
cmc
push
and
xor
dec
rcll
ja
imul
sbb
and
lods
shll
xchg
xlat
xchg
push
ret
mov
outsb
in
out
cmp
decb
xchg
mov
dec
push
inc
testb
pop
fldenv
sub
pop
fwait
int3
repz
pop
jp
xorb
cmp
pop
cmp
pop
mov
or
add
das
jg
cs
shrb
aas
jno
nop
in
sub
jb
mov
mov
pop
adc
test
arpl
xchg
scas
in
and
mov
pop
roll
and
loope
lock
pop
xchg
arpl
lods
mov
das
sub
pop
mov
rolb
or
sub
test
mov
cwtl
mov
mov
in
call
lret
jne
add
mov
test
lock
pop
cwtl
mov
mov
aam
stc
pushf
ret
mov
arpl
push
cwtl
shrl
repz
push
jbe
xchg
rcl
ljmp
subb
inc
mov
pop
cmpsb
pop
mov
or
in
add
jmp
mov
push
das
xchg
and
clc
daa
mov
sbbl
out
insb
roll
icebp
pop
stos
jbe
stos
lret
ss
out
dec
dec
jmp
xor
incl
mov
and
loop
mov
leave
imulb
test
pop
push
dec
hlt
test
dec
or
stos
add
and
scas
add
xchg
rcr
out
incl
cmpsl
lret
jns
repz
test
pop
xchg
fidivrs
dec
mov
xchg
ret
mov
pop
les
xor
jp
xchg
mov
daa
adc
mov
mov
dec
jne
call
lret
mov
sbb
popf
xchg
or
loop
out
jecxz
sub
in
xor
ds
lcall
insb
movsb
js
jnp
sub
pushf
mov
push
pusha
lcall
xchg
ret
in
pop
jg
addr16
bound
ljmp
or
dec
mov
xlat
push
mov
sti
test
sbb
call
add
arpl
adc
push
mov
mov
leave
add
out
hlt
mov
dec
cmp
sub
or
push
fistps
add
pop
or
repnz
xor
scas
pop
pop
mov
call
rcl
sarb
mov
cmp
into
dec
movsb
imul
push
shlb
mov
jge
int
sbb
lods
add
scas
pop
fidivrs
ficompl
jno
cmovg
int3
dec
sub
xor
push
add
jo
adc
mov
xchg
int
test
outsb
adc
inc
jns
mov
in
fiadds
enter
pop
loope
xchg
push
nop
add
fbld
xlat
ds
and
cmp
sub
insl
movhps
jns
mov
or
sahf
cmpl
xchg
aas
lcall
repz
cmp
ret
mov
adc
aad
fnop
imul
mov
adc
mov
jb
and
ljmp
adc
lret
not
mov
add
jmp
mov
scas
sbb
sahf
icebp
or
test
loop
andb
in
outsl
outsl
stos
cld
loop
frstor
outsb
pop
dec
adc
jmp
ss
or
pop
fdiv
ds
mov
mov
cmpsb
shrl
inc
or
fxch
push
movsl
mov
in
or
pop
pop
adc
out
adc
mov
add
aas
lods
mov
and
sub
mov
pop
sub
lods
ss
loopne
and
mov
inc
outsb
rorb
mov
outsb
lods
repz
jle
sbb
je
jp
xchg
dec
mov
adc
fcompl
pop
xor
cli
adcb
xchg
nop
sarb
hlt
sub
dec
inc
call
jnp
testb
stos
pop
xor
call
loopne
orl
insl
xchg
dec
mov
pop
ror
pop
cmp
mov
enter
pop
out
sbb
mov
dec
and
inc
jns
fwait
testb
mov
inc
fidivl
jg
mov
mov
pushf
mov
mov
or
jecxz
jne
mov
fwait
sar
fldt
ja
fcom
push
inc
adc
inc
es
insl
rclb
in
dec
or
xchg
nop
mov
cli
lods
adc
cmp
xchg
daa
push
inc
mov
imul
xchg
adc
inc
test
xor
dec
out
push
push
push
pop
fstl
xchg
clc
out
xchg
cmp
bound
pop
push
movntq
mov
dec
xchg
js
mov
push
dec
jmp
and
xor
testl
xchg
xchg
mov
int3
mov
aas
test
add
ja
orb
pusha
push
or
test
fwait
lret
sub
ret
sbb
mov
out
cmc
bound
inc
jns
pop
cmpsb
in
jge
xchg
sub
and
xchg
pop
sarb
sub
je
jp
sub
mov
dec
scas
mov
mov
lret
leave
fnstenv
sahf
data16
nop
inc
and
xchg
mov
roll
jbe
sub
call
xor
stc
and
push
lods
jnp
pop
dec
jle
xchg
in
inc
add
iret
bound
ret
int3
pop
mov
add
jae
repz
cmpsl
shrb
mov
push
and
scas
shll
xchg
adc
pop
sbb
ss
xchg
je
scas
stos
pop
nop
push
stos
push
adc
fwait
loope
sub
repnz
add
hlt
pop
loop
arpl
imul
pop
jbe
iret
insl
push
rcr
or
insl
add
xchg
pop
mov
rcr
mov
lds
sbb
mov
cmp
pop
cmpsb
movsb
test
push
and
jbe
insl
mov
sbb
inc
jne
or
movsb
jecxz
cmp
in
lcall
je
jo
das
mov
push
gs
and
cmp
andb
push
insb
enter
pop
and
push
push
jp
cmpsb
fsub
sub
jo
cmp
push
sub
xchg
movsl
jmp
lret
ds
lcall
sbb
leave
xor
in
ja
mov
inc
in
js
jae
pop
push
les
lcall
inc
fsubrl
stos
mov
mov
scas
outsb
in
fists
inc
sub
jg
lea
mov
test
mov
push
andl
test
push
into
imul
sub
loope
lret
adc
adc
inc
sbb
mov
jp
mov
adc
outsl
dec
jle
loop
fisubs
stc
repnz
call
adc
ss
fistl
push
pushw
arpl
cli
cmp
movsl
xor
xchg
cmp
mov
push
into
cmp
dec
cmc
lods
iret
shlb
dec
imul
adc
mov
adc
xchg
jo
dec
inc
sub
dec
insl
lods
lahf
out
mov
cmp
comiss
insl
frstor
in
pop
sti
nop
test
rclb
lods
loopne
sti
repz
adc
fildl
dec
adc
roll
les
jge
xchg
xchg
mov
lret
sbb
scas
inc
adc
mov
sub
cmc
sub
jmp
push
push
cs
sub
nop
fwait
mov
int
mov
pop
and
cmp
add
repz
call
lahf
dec
rorl
xchg
imul
fisttpl
jg
incl
sub
frstor
inc
cmpsb
dec
and
mov
ror
dec
mov
dec
xor
std
faddl
cwtl
mov
mov
xchg
cmp
cld
rorb
lret
push
pop
adc
jle
ds
pop
nop
daa
ror
adc
sub
xchg
push
jecxz
ret
iret
xchg
es
jns
insl
mov
mov
ljmp
fsubrs
xchg
nop
mov
insl
inc
andl
cmpsb
ljmp
push
movsb
sti
mov
jae
push
fldz
xchg
fnstsw
pusha
clc
popf
mov
sbb
and
add
test
mov
push
push
xor
fs
xor
addr16
xor
mov
testb
xchg
pop
test
inc
ja
jecxz
dec
fisubl
inc
pop
cmpsb
hlt
or
jp
fwait
cli
jns
push
data16
nop
add
lret
out
mov
push
loop
into
push
lds
cmp
xchg
lea
cmp
ja
mov
sti
dec
mov
js
or
stc
pop
mov
shr
mov
pop
xchg
jmp
icebp
aaa
pop
adcl
adc
jecxz
stos
push
scas
dec
jl
sub
and
std
lock
movsl
cmpsb
jle
pusha
push
in
sbb
pusha
xor
in
ret
ret
xor
mov
out
nop
popa
push
push
dec
popf
arpl
mov
aad
jns
popa
aad
xchg
imul
pop
push
imul
cmp
mov
adc
out
mov
in
xchg
leave
repnz
lret
add
arpl
sub
arpl
nop
adc
jg
testl
arpl
ss
out
mov
cs
mov
lock
scas
aad
mov
cmp
int
jo
iret
jbe
xchg
fidivrl
xchg
sbb
daa
lods
in
cmp
nop
jno
pop
pop
jl
mov
dec
or
xor
in
pop
xchg
lahf
in
inc
push
cmp
test
add
or
jo
cmpsb
sbb
lods
in
lods
dec
bswap
add
lea
rcll
loope
sub
cmp
cmpsb
pop
ds
sub
and
stc
ret
scas
or
fstpt
pop
add
mov
xchg
cmp
mov
sarb
pop
xchg
jns
lcall
and
aad
push
sub
cs
arpl
cmp
pop
std
aad
adc
cs
push
rorl
test
push
rcrl
push
pop
xor
or
testl
test
test
insl
mov
push
xor
adc
aaa
rcr
cmp
adc
sub
adc
stc
test
out
adc
inc
cmp
push
jp
mov
inc
cli
insb
mov
add
xchg
lss
inc
pushf
sbb
sbb
sbb
xor
int
adc
shrb
inc
loop
push
icebp
pushf
add
xchg
loope
pop
or
xor
xlat
dec
test
and
push
pop
repz
sbb
add
inc
dec
jno
scas
inc
xchg
add
push
cmp
jge
in
repz
cmp
notl
fcmovb
xchg
repz
ret
push
insb
pushf
mov
bound
cs
aad
adc
jbe
mov
cltd
push
push
dec
outsl
and
jg
adc
inc
mov
push
lea
pop
call
pop
adc
push
subl
cli
push
fstpt
dec
pop
cmpb
pushf
out
lds
mov
ja
rcll
mov
testb
inc
cwtl
mov
leave
ret
push
sub
imul
ds
ret
mov
mov
inc
pop
pop
lock
cmp
pop
cmc
sub
sub
sub
jmp
sub
ficoml
shrl
into
dec
pushl
jo
jle
shr
jbe
mov
ret
ljmp
mov
je
movsb
mov
sub
add
xor
test
mov
pushf
cld
jae
mov
repz
xchg
movsl
push
sbb
in
cli
rorl
pop
stos
mov
add
js
push
xchg
push
pop
nop
push
or
push
loopne
add
push
sub
fwait
xor
sbb
shlb
mov
ja
lret
sbb
push
aad
hlt
setne
and
sub
sbb
add
mov
out
pushf
adcl
test
in
dec
pop
notb
jl
mov
dec
mov
addr16
adc
jbe
mov
iret
out
test
pop
mov
es
lea
jne
sbb
sar
scas
push
jmp
mov
notl
lcall
or
and
lds
scas
sub
in
jnp,pn
mov
jle
cs
in
push
cli
pusha
rol
jl
and
ret
lcall
fwait
iret
inc
orl
push
sub
push
xchg
mov
push
push
mov
adc
ja
ret
sbb
dec
jl
je
bound
cmp
lods
mov
cmp
cltd
hlt
popf
jb
arpl
mov
lds
aaa
ds
or
loopne
add
enter
add
push
and
shll
rorb
xchg
scas
mov
mov
mov
in
push
outsl
aaa
movsb
or
jb
mov
sub
jge
cmp
sbb
call
loopne
jae
cmp
cmp
jl
cmpsl
inc
dec
jp
pop
push
outsb
enter
gs
mov
fists
leave
jae
loopne
cmpsl
push
iret
outsb
loopne
es
cmpsb
fwait
jb
in
xchg
and
xchg
pop
sahf
pop
das
push
add
loope
mov
sbb
outsb
aaa
sbb
neg
mov
xchg
cs
pop
mov
in
sbb
dec
inc
add
sbb
xor
test
std
cs
pop
mov
pusha
js
adc
adc
out
lcall
pop
faddl
pop
test
mov
imul
mov
sub
out
sub
pop
mov
aam
mov
mov
adc
testl
jb
mov
jecxz
sahf
fimull
and
jb
js
or
loop
int3
jge
stc
pusha
out
mov
adc
jo
ss
aam
cmp
and
xor
dec
xor
pop
and
mov
xchg
push
into
pop
push
cmc
cmp
sbb
insb
add
adc
xchg
adc
push
adc
mov
push
data16
lods
insl
cmpsl
stos
mov
rcl
lea
sub
out
dec
in
lcall
push
xor
loopne
call
mov
cmpsl
hlt
xlat
fnstcw
or
mov
stos
repz
lods
xchg
push
xor
push
mov
mov
pop
outsb
sub
adc
or
dec
sbb
jmp
and
aad
push
push
nop
push
jle
aas
cmp
out
jb
push
jb
movsl
sub
jecxz
xchg
pop
xchg
lea
cmp
mov
pusha
cmp
dec
sar
mov
lods
call
pop
and
cs
add
popf
das
movsb
jns
mov
scas
pop
dec
and
xchg
and
bound
into
arpl
cwtl
je
cmpsl
stos
mov
mov
inc
imulb
sub
xchg
lret
xor
mov
ret
pop
mov
sbbl
adc
fcmovbe
je
xchg
sub
aam
sbb
ret
in
adc
es
sub
insl
xchg
mov
cli
dec
mov
mov
mov
test
push
movsl
mov
jnp
imul
int3
xor
test
pushf
mov
pop
jle
pop
jle
ffree
dec
inc
clc
adc
jecxz
push
mov
arpl
mov
shll
out
fcmovnb
push
xchg
dec
popf
rclb
decl
xor
cmp
mov
scas
xchg
aad
cltd
dec
in
jle
test
js
ja
aaa
mov
shl
inc
mov
jnp
pop
push
cmpsl
add
add
jnp
bound
es
jns
outsb
push
in
dec
mov
mov
lcall
add
or
jp
sub
mov
jmp
mov
jle
dec
jo
or
fwait
dec
mov
dec
sbb
jl
xchg
or
pusha
jmp
xchg
jp
sbb
inc
cmp
fstps
imul
sti
leave
insb
push
rclb
jle
out
inc
in
clc
fsubs
push
cltd
iret
jg
mov
pop
pop
movsb
fildl
pusha
jae
cwtl
mov
popf
mov
push
mov
shrl
xchg
sbb
sbb
pop
xchg
imul
scas
aam
add
jg
test
mov
mov
xchg
hlt
call
mov
or
inc
xchg
repnz
std
idivb
add
jno
pop
inc
fisttpll
fidivs
lds
lods
shlb
mov
and
mov
cmp
in
dec
movsb
xchg
sbb
push
jbe
cmp
jge
iret
repz
and
daa
stos
mov
push
jno
cmp
jl
imul
jmp
adc
dec
jo
testb
fwait
push
fiadds
push
lcall
cmpsb
push
aas
cmp
jp
outsb
enter
pop
fstpl
sub
out
loope
cmp
sbb
push
call
jge
push
lret
and
jle
mov
movl
icebp
jmp
shr
pop
fistl
roll
xchg
jo
lcall
pusha
fsubrl
stos
les
jg
outsb
or
or
cmc
jg
call
stos
mov
clc
mov
out
and
xor
int
sub
incl
test
movsl
stos
rcl
lock
push
mov
test
fiadds
jmp
add
pop
sbb
fs
ss
incb
cmp
loopne
test
mov
in
cli
rolb
xor
adc
jmp
push
mov
cmc
add
jns
pop
aas
sbb
cmp
adc
fldt
in
test
add
push
push
pop
in
push
mov
xlat
int3
mov
mov
add
mull
cmp
and
loopne
std
jmp
inc
mov
data16
xchg
add
repz
rorl
out
cmp
push
xchg
lods
fcomps
in
mov
pushf
testb
fcmove
pop
cs
xchg
aad
outsl
movsl
nop
sub
mov
xlat
mov
pop
dec
sbb
hlt
je
jnp
jecxz
cmp
mov
movsl
lea
mov
or
mov
xlat
clc
sbbl
fcmovnu
jmp
pop
mov
jbe
xor
stos
das
sbbl
in
sub
and
mov
or
adc
into
cwtl
das
jns
cmpsl
stos
and
mov
pop
or
push
pop
mov
mov
arpl
mov
dec
aas
lock
jmp
loope
inc
divb
aam
mov
ret
jl
es
fisubrs
jbe
dec
cmc
lock
cld
test
cs
idiv
xor
jae
mov
sbbb
movntq
xchg
add
mov
xchg
mov
push
and
out
adc
clc
dec
push
sbb
sbb
sbb
sar
cmp
test
out
ds
inc
xchg
xchg
xchg
lea
fiadds
lcall
enter
iret
adc
mov
fcoms
dec
push
lret
cmp
aas
ja
daa
and
inc
or
and
or
call
jno
dec
inc
pop
add
sbb
out
pop
inc
int
test
mov
mov
mov
inc
mov
mov
pushf
lods
jp
nop
and
insl
jecxz
mov
pop
and
push
mov
jne
cmpl
fistps
aaa
dec
xchg
fcoml
mov
addl
out
dec
int3
sub
aam
addr16
insb
sahf
pop
stos
fxch
jmp
insb
mov
sbb
and
in
push
out
scas
iret
ficomps
ret
mulps
rcrl
pop
add
popf
fsubs
movsl
mov
push
lea
xchg
jo
jne
dec
mov
imul
scas
aaa
push
adcb
push
adc
cmp
repnz
push
leave
push
adc
hlt
xor
arpl
cmpsl
mov
int
push
mov
pop
sbb
shrb
sbb
mov
int
jae
ficoms
xchg
fadd
int3
ret
inc
sub
scas
jb
and
push
shll
in
jbe
mov
push
sbb
in
xor
fnstenv
push
jno
pusha
xchg
jl
add
dec
pop
lahf
push
push
in
scas
repz
std
pusha
xchg
lahf
inc
dec
imul
sbb
mov
inc
adc
mov
orl
repnz
lea
sbb
insl
push
jge
loope
std
popa
sub
in
sbb
ds
frstor
int
jge
push
sarl
adcb
cld
or
sbbl
pop
add
out
in
add
lcall
sahf
std
cmp
outsb
sub
outsb
jo
pop
adc
mov
jge
out
arpl
mov
mov
aas
mov
push
ljmp
in
push
int
gs
sub
div
mov
js
insl
aad
mov
sbb
sbb
test
icebp
outsl
lret
loop
in
dec
stc
into
loopne
fs
jae
movsb
pushf
ss
fwait
mov
mov
xor
cmp
sti
jno
xchg
fisubl
cmc
enter
mov
stos
pop
stos
jne
adc
pop
aad
insb
mov
mov
data16
icebp
lods
cmp
aam
push
xchg
xlat
or
shll
jo
mov
dec
out
add
pop
lcall
shll
cmc
inc
int
fcmovnu
lods
gs
sahf
jns
repz
xchg
xchg
pop
in
insb
mov
push
adc
pop
aam
pop
adc
sub
mov
sub
cs
xor
nop
pop
mov
jb
call
mov
jecxz
and
mov
jo
call
fwait
sub
xor
test
or
inc
adc
out
inc
dec
bound
mov
sbb
xor
push
xchg
notb
std
js
dec
cwtl
ljmp
mov
out
aas
popa
cld
jle
fcmove
setb
push
mov
cmpb
pop
stos
pop
push
insl
icebp
rcrb
add
aam
cmpsb
stos
ret
or
mov
or
xchg
cmp
popa
push
dec
pop
lods
sub
mov
mov
xchg
mov
inc
inc
mov
repnz
test
test
dec
mov
fstl
pop
test
sbb
ds
rcll
out
lods
jbe
stos
mov
mov
cmc
xor
cmc
pushf
cmp
cmp
or
push
push
mov
dec
mov
mov
dec
cmpsb
dec
push
inc
mov
or
fwait
mov
out
repnz
ss
mov
bound
js
stos
add
ljmp
mov
xlat
pop
mov
jns
push
jp
lods
mov
sub
adc
ss
lret
int3
mov
fistpll
cmc
or
addr16
xchg
sbb
outsl
adc
and
sub
iret
dec
fcoms
ret
dec
sub
xor
jnp
je
jle
dec
std
in
data16
mov
mov
push
rolb
leave
mov
data16
mov
push
jbe
addr16
decl
aas
inc
shl
fisubrl
adc
imul
pop
scas
lcall
adc
sarb
xor
leave
into
in
hlt
jle
inc
arpl
mov
cmp
orl
jnp
scas
or
and
add
lret
sub
cmp
jle
push
mov
push
scas
push
jae
and
dec
cmp
cmp
lods
mov
pcmpeqd
cmp
test
mov
test
jg
jno
test
jl
jo
dec
jne
push
iret
ds
xor
pop
fildll
push
test
cs
xor
dec
cmpsb
and
fwait
in
dec
or
pop
pop
and
push
leave
test
sbb
shrl
cmp
or
xchg
and
or
sti
int3
sbb
mov
fs
cmp
divb
pop
sub
stos
js
pop
aad
xchg
ja
lcall
xor
andl
outsb
shrl
inc
adc
mov
xchg
jg
jecxz
mov
inc
mov
mov
lcall
fnsave
mov
cmc
pop
adc
dec
inc
dec
pop
mov
roll
sbb
loopne
sahf
ret
fwait
sub
add
inc
outsl
test
repnz
stc
test
adc
fistl
loopne
inc
ss
cmp
push
push
out
imul
mov
adc
pushf
pop
or
and
into
cmpsl
mov
data16
xor
cltd
or
adc
mov
add
mov
gs
cmc
lods
and
mov
xlat
dec
push
aaa
sub
orb
sti
sti
stos
push
jg
and
and
outsb
sbb
cld
jmp
in
adc
test
loopne
xchg
push
cltd
test
jbe
nop
jne
pop
xchg
lea
dec
dec
cs
mov
aad
pop
pop
nop
loop
lea
adc
jg
dec
or
cmpsb
mov
or
repz
mov
pop
pop
mov
fs
xchg
push
add
cmp
pop
or
xchg
inc
xchg
js
inc
push
mov
inc
sub
or
and
aad
rcll
fdecstp
xchg
xchg
fscale
pop
outsb
rcrl
test
btl
mov
test
dec
dec
mov
cmp
lock
outsb
cli
shr
cmp
adc
gs
insl
cmp
pop
dec
jmp
fstl
inc
adc
popa
and
xchg
mov
nop
push
loopne
mov
pop
shld
add
mov
mov
mov
test
call
clc
cld
aaa
xchg
stos
xor
xchg
pop
ljmp
pop
inc
stos
push
cltd
or
add
xchg
xchg
and
lahf
faddl
push
fnstsw
or
dec
dec
xor
mov
push
xchg
fstpl
and
pop
ja
xchg
pop
dec
cltd
or
inc
push
push
testb
xlat
fwait
in
out
push
xchg
mov
add
push
dec
push
out
sbb
popf
iret
push
mov
jne
inc
xchg
pop
call
fnstcw
xor
push
addr16
mov
mov
xchg
mov
cmp
stos
jne
jnp
mov
mov
cmp
jmp
call
jne
out
outsl
loope
xchg
jmp
pop
push
ljmp
and
dec
sbb
xchg
cmpsb
jnp
xchg
icebp
jle
ljmp
cmp
test
pushf
jo
ret
jl
add
and
push
cmp
inc
popf
es
fdivrl
push
fiaddl
xchg
push
sahf
xchg
sbb
insb
test
add
scas
std
and
adc
repnz
test
and
hlt
leave
cmp
fcomps
aas
out
or
mov
jo
cmp
stos
add
sub
xchg
push
pop
rcll
pop
ficomps
cmp
ficoml
xor
ja
sbb
xor
and
pusha
cmp
das
ds
movsb
cmp
push
sti
aam
jbe
sbb
jge
jmp
sbb
dec
lods
daa
test
out
aas
jnp
jno
adc
sub
adc
push
mov
into
xor
mov
pop
lahf
adcb
push
lock
test
sti
sub
cmpsb
cmpsl
pop
aam
das
jno
enter
pop
lcall
loope
out
sub
movsb
cmc
cmp
sub
cli
out
movsl
adc
add
add
pop
aam
sbb
push
inc
call
add
dec
xor
cmp
in
js
inc
movl
insl
inc
push
push
aam
xchg
sub
aam
dec
dec
cmpsb
outsb
lea
shlb
out
jg
xor
inc
mov
sub
mov
jno
and
inc
fwait
push
loopne
ret
int
mov
jo
pop
testl
dec
lcall
push
sbb
addr16
data16
test
mov
outsl
mov
in
loop
sub
stc
cmp
dec
cmp
movsl
sub
mov
adc
xchg
in
xchg
pop
cmp
adc
or
in
mov
push
xor
push
pop
call
out
mov
push
adc
mov
add
mov
in
inc
out
int3
xlat
mov
mov
mov
inc
fbld
stos
sub
mov
lahf
enter
cmp
aaa
sub
mov
mov
repz
hlt
sub
mov
xchg
and
cmp
adc
out
or
jmp
cs
cs
adc
nop
mov
add
jb
dec
adc
xorl
jecxz
mov
aas
lea
sbb
outsb
add
mov
dec
adc
fldt
aas
pop
scas
pusha
xor
test
inc
test
mov
mov
mov
and
aas
mov
mov
cmp
and
cwtl
pusha
xor
cmpsl
mov
icebp
pushf
sbb
cld
aam
sub
in
mov
sub
iret
lock
andb
jae
rol
scas
out
sub
adc
or
sub
es
mov
out
pop
xchg
mov
jmp
popa
cmp
cmp
mov
xchg
jbe
mov
add
aad
sbb
repnz
push
xchg
push
imul
clc
pushl
jns
dec
mov
sbb
and
pop
add
inc
outsb
cs
addr16
xchg
imul
mov
xor
cli
leave
xor
mov
mov
loope
rorb
pop
test
leave
ja
push
xchg
dec
mov
inc
out
ss
leave
xor
cmp
add
insb
fs
add
bound
jns
sub
in
dec
sub
mov
jecxz
mov
out
imul
test
and
jg
daa
mov
fwait
lret
mov
fbstp
xlat
xchg
push
hlt
ljmp
push
pop
sub
stos
out
das
sub
lds
push
sub
fisubl
and
jnp
je
jle
jnp
in
fs
xlat
inc
cmpsb
iret
sti
and
pop
aaa
xor
jae
xlat
mov
popf
dec
stc
pop
mov
iret
inc
popa
ficoml
dec
sub
imul
mov
push
fwait
push
adc
push
xchg
mov
xlat
add
mov
lcall
inc
xor
ljmp
andl
stc
push
leave
or
pusha
ror
jno
inc
pop
add
lds
rclb
andb
add
out
js
ret
jae
push
dec
mov
jbe
cmc
pop
jge
adc
sbb
xchg
loope
jb
shlb
cmpsb
lahf
jl
les
push
xchg
cmp
xor
push
sbb
lahf
lahf
xlat
xchg
push
sub
mov
fstl
xor
adc
in
push
mov
adc
fnstenv
dec
push
jnp
loope
adc
sub
sub
push
fwait
cli
ds
sub
and
jecxz
andb
sbb
push
xor
aas
jge
int3
popa
arpl
pop
js
ret
mov
lcall
adc
xlat
in
pop
sub
add
outsb
cltd
loop
adc
inc
xchg
jg
out
push
dec
cmc
leave
mov
mov
mov
pushf
dec
and
es
jecxz
int
jne
sub
enter
cmp
dec
shll
mov
sbb
adc
test
adc
addr16
or
repz
and
adc
mov
cmp
int3
xchg
out
and
xor
cmpl
push
into
insl
xchg
and
sbb
je
pop
pop
inc
movsl
adc
pop
js
push
mov
xor
xor
sbb
mov
pop
xlat
enter
in
or
mov
mov
or
pop
outsb
pop
inc
fbstp
loopne
pop
orl
mov
fsts
insb
les
dec
mov
loope
push
mov
pop
in
add
adc
scas
push
pushf
mov
push
adc
aad
fmull
cwtl
mov
pop
jb
dec
stos
dec
clc
arpl
je
test
outsb
jno
mov
mov
jmp
xchg
or
mov
test
fistl
sub
inc
movsl
rep
inc
mov
add
ret
shlb
shl
mov
daa
std
insl
mov
repz
cmpsb
pop
mov
jae
sub
lcall
lret
pop
pop
sbb
out
insl
mov
pop
scas
jl
rclb
push
inc
aam
push
ret
mov
push
cmp
sbb
dec
loope
bound
sub
popa
push
adc
ret
mov
scas
mov
push
mov
arpl
sub
cltd
rorb
test
mov
inc
fisttpll
stc
sbb
into
inc
jg
cli
in
rcll
sbb
lods
movsb
stc
stos
xor
jbe
lret
xchg
mov
in
push
das
mov
lcall
push
dec
xor
rcrl
in
adc
xchg
xor
test
and
dec
jg
ss
jle
sbb
rcrl
outsl
push
pusha
add
repnz
cmc
inc
jns,pt
mov
in
loope
xchg
movsl
xabort
push
sbb
aaa
adc
dec
addr16
add
jp
xor
cmpb
dec
dec
fisttps
add
xchg
inc
xchg
sub
pop
jmp
jle
jnp
jl
into
out
fsubrl
shlb
stos
movsl
xorb
addr16
jnp
sbb
jle
add
pusha
jb
or
xchg
cmp
faddp
pop
outsb
outsb
sbb
jae
push
add
popf
je
mov
inc
dec
aaa
push
xchg
int3
sbb
sbb
jae
imul
inc
scas
ret
lret
loop
mov
push
sub
and
repnz
push
hlt
pop
add
arpl
lock
inc
testl
push
mov
mov
jbe
pop
mov
das
or
fisubs
lock
scas
out
aas
shlb
cli
aad
cmp
fnsetpm(287
push
cltd
aad
jbe
inc
into
jge
sbb
nop
daa
cmpsb
fadds
pop
pop
movsl
jl
lods
popf
dec
adc
ret
mov
jns
imul
or
cmp
test
xchg
decl
xor
cmpsb
lods
or
std
out
mov
fisubs
mov
push
jecxz
loope
popa
mov
mov
jno
ds
js
movsl
and
push
xchg
idiv
xorb
sbb
add
xor
popa
fs
sahf
mov
js
aam
pop
push
loopne
lcall
aas
faddl
jge
outsb
cld
sub
adc
sbb
push
jg
jp
mov
sbb
mov
sbb
and
dec
sbb
out
fs
inc
jae
data16
testl
dec
sti
mov
cmpsb
rcrl
pop
ret
lods
roll
ljmp
outsl
inc
lods
out
cmp
stc
stos
jae
fs
stos
adcl
mov
std
cmp
xchg
out
inc
cs
rcl
into
xor
ja
or
ror
jl
cmc
in
inc
xor
xor
pop
es
adc
push
mov
dec
mov
dec
add
dec
jle
out
pop
mov
cmp
push
test
pop
popa
mov
in
sbb
and
or
call
leave
daa
loopne
nop
pop
dec
or
sbb
cwtl
popf
es
out
xchg
mov
sbb
xchg
or
dec
mov
pushf
dec
mov
out
jne
xchg
aad
xor
nop
jae
push
aas
repnz
xlat
jb
jge
dec
outsl
cmc
pop
je
sbb
imul
lea
jno
fs
fdivl
xchg
out
orl
popf
fcmovnb
add
pop
cmc
out
inc
sub
push
inc
mov
cli
in
mov
clc
ror
and
push
jg
inc
add
std
adc
sub
movsl
or
mov
dec
xorl
sub
xlat
mov
call
lock
imull
mov
data16
iret
sub
cmp
retw
inc
sbb
outsl
sbb
mov
lahf
xchg
aaa
lock
xchg
out
mov
movsl
push
ret
mov
ret
add
jecxz
cltd
testl
mov
imul
fnsave
push
roll
lods
fsts
lods
out
cmpsb
pop
pop
mov
stos
and
sub
push
xchg
push
or
idiv
mov
add
or
mov
cmp
test
out
jmp
test
std
leave
ja
xchg
sbb
jne
inc
adc
fldenv
jb
enter
and
mov
call
and
fidivrs
push
enter
fwait
data16
rclb
repz
cmp
jmp
add
aad
js
xchg
into
dec
ret
jne
fbld
fbstp
lea
xchg
dec
cmpsb
mov
out
or
sub
mov
jnp
stos
sbb
fsubrs
lock
sbb
cli
jns
in
repnz
xor
iret
mov
mov
aad
rol
mov
movaps
orb
mov
int
or
stc
xor
xchg
and
stos
sbb
xor
cwtl
scas
or
sub
stos
adc
adc
inc
bnd
nop
leave
stos
fwait
xchg
stos
ret
add
sub
mov
je
aaa
ja
push
or
lcall
pop
cs
fiadds
loop
outsl
jbe
ror
mov
int
cmpsb
and
push
jle
fsts
adc
or
jge
or
scas
fldenv
movsl
popf
sarl
cmpsl
test
xor
jl
push
mov
pop
add
xor
les
cmp
das
in
mov
push
jno
xor
fcmovne
fnstcw
push
pop
int
aad
adc
jne
hlt
sub
in
xchg
cmp
arpl
cmp
and
dec
icebp
or
sbb
add
mov
jb
push
aad
pop
lds
call
pop
lea
xchg
push
fnstenv
dec
sub
mov
xchg
notl
jg
or
mov
jne
mov
cmpsb
repnz
out
cld
and
mov
sahf
int
hlt
hlt
sub
sub
inc
inc
out
jmp
out
shll
mov
add
sbb
mov
test
js
das
sbb
movsl
jmp
stc
popa
bnd
fdivrl
adc
aam
repz
cmp
inc
mov
out
jmp
cli
add
xor
or
aas
cmp
push
ror
xor
cmc
stos
xor
jnp
arpl
fimuls
imul
scas
fildl
push
shlb
jno
lods
mov
popa
add
inc
and
shrb
mov
xchg
pop
sti
mov
clc
decb
shlb
dec
je
loopne
sbb
dec
imul
inc
fld
std
mov
aad
push
repz
or
das
enter
sub
mov
jno
push
inc
ds
xchg
mov
clc
in
jmp
jb
cs
mov
dec
jmp
nop
dec
xchg
and
xchg
data16
in
dec
out
aas
je
add
leave
adc
lea
in
xorb
add
xchg
dec
cmp
mov
pop
cwtl
cltd
add
pusha
inc
in
das
mov
cs
pop
je
rorl
ficompl
std
mov
mov
je
jno
dec
icebp
and
cld
push
inc
lret
cmp
mov
mov
push
pop
lock
inc
pop
in
lcall
sbb
cmp
ret
fists
insl
fadds
dec
xlat
inc
xchg
jbe
movsb
ljmp
movsb
lods
inc
cmp
sarl
lods
xor
and
movsb
cltd
cs
test
pop
xchg
push
mov
fs
fs
xchg
icebp
dec
sbb
movsb
roll
std
pop
add
sub
nop
inc
ja
ds
js
pop
jae
xor
cli
xor
mov
sbb
ljmp
test
outsl
mov
dec
add
inc
lods
insb
mov
pop
sahf
fwait
mov
mov
add
mov
loop
bound
out
cmpsl
jns
scas
jmp
xchg
inc
mov
mov
fmull
pop
and
inc
jp
rolb
jle
mov
idiv
cs
movsl
inc
mov
push
in
mov
mov
bound
cmp
xchg
adc
lds
mov
cmp
or
xor
stos
mov
in
cmp
mov
jle
out
in
dec
pushaw
test
pop
iret
sbb
lahf
ret
insl
pop
xor
or
adc
push
inc
pop
mov
ret
mov
dec
movsb
cmp
lods
mov
xchg
jp
outsb
sbb
lret
fldcw
mov
scas
mov
mov
adc
in
repnz
cmp
hlt
cmc
aam
arpl
es
popf
lret
ss
pop
or
insb
jg
xor
es
lea
fsubrp
dec
loope
negb
shl
cwtl
scas
lods
xor
and
sbb
or
movsb
cmpsb
cmc
push
aaa
out
jbe
inc
insb
jge
fidivs
out
cmc
inc
daa
movsb
out
cmp
je
jno
xor
jmp
mov
push
ds
xchg
xor
pop
sbbl
cld
test
push
mov
test
add
cmpsb
mov
dec
in
lret
cld
cmp
aam
cmc
pop
xchg
mov
push
into
dec
loope
imul
add
cmp
imul
fadds
and
adc
push
sub
sbbb
sbb
iret
sub
mov
push
adc
enter
mov
pop
or
adc
xor
push
adc
or
xor
rcl
fmuls
mov
add
mov
push
push
and
addr16
in
dec
mov
lock
pop
mov
mov
fisubrs
dec
mov
sub
sahf
repnz
cld
test
inc
orb
outsl
add
sbb
sbb
movsb
adc
mov
ss
idivl
std
sahf
pop
out
adc
and
jecxz
mov
push
cs
or
add
into
push
sub
jb
icebp
xor
out
jmp
