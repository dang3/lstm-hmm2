push
mov
mov
mov
mov
mov
sub
sub
push
call
mov
sub
mov
mov
call
mov
mov
add
mov
mov
mov
mov
call
mov
add
mov
sub
mov
call
mov
add
mov
pop
ret
mov
add
mov
mov
add
call
mov
mov
mov
sub
add
push
push
push
call
mov
sub
sub
mov
mov
add
mov
mov
mov
add
ret
push
mov
add
adc
mov
sub
mov
and
mov
add
mov
mov
add
mov
or
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
sub
sub
mov
mov
mov
lea
mov
push
mov
push
call
mov
mov
sub
mov
mov
add
call
mov
mov
mov
mov
add
mov
and
leave
ret
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
add
or
mov
mov
add
sub
pop
ret
push
mov
mov
mov
mov
mov
add
push
call
mov
add
sub
call
mov
mov
mov
mov
mov
mov
sub
pop
ret
push
mov
add
or
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
mov
pop
ret
push
mov
add
mov
mov
add
mov
add
mov
or
sub
mov
mov
sub
mov
mov
mov
mov
mov
pop
ret
push
mov
add
mov
mov
add
mov
mov
sbb
sub
mov
mov
sub
mov
add
mov
mov
mov
movl
pushl
push
call
mov
mov
sub
mov
add
or
mov
mov
mov
sub
mov
mov
mov
mov
mov
pop
ret
push
mov
mov
sub
add
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
sub
mov
mov
mov
sub
add
mov
add
mov
push
call
mov
mov
sub
mov
pushl
call
mov
sub
mov
mov
mov
and
sub
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
call
mov
add
push
call
mov
add
mov
and
add
push
call
mov
or
mov
mov
mov
push
call
mov
add
mov
sbb
add
push
call
mov
sub
mov
sub
mov
push
call
mov
sub
call
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
call
mov
sub
mov
add
push
call
mov
add
push
call
mov
add
mov
add
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
sbb
mov
mov
mov
sbb
push
call
mov
sub
mov
sub
mov
add
add
or
push
call
xor
mov
mov
mov
call
mov
sub
mov
mov
sub
push
call
mov
sub
call
mov
add
mov
mov
call
mov
add
mov
sub
mov
mov
push
sub
push
call
mov
add
call
mov
sub
mov
add
call
mov
add
adc
mov
mov
call
mov
sub
mov
mov
mov
pushl
call
mov
sub
mov
or
mov
mov
pushl
call
mov
mov
add
mov
push
call
mov
mov
mov
add
call
mov
mov
or
mov
add
call
mov
or
mov
add
mov
add
add
mov
mov
mov
add
add
push
call
mov
mov
mov
mov
mov
sbb
sub
mov
mov
xor
call
mov
mov
mov
sub
call
mov
sub
mov
sub
mov
add
push
call
mov
mov
call
mov
add
mov
mov
mov
push
call
mov
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
pushl
call
mov
sub
mov
call
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
sub
push
push
call
mov
mov
mov
add
sub
mov
add
xor
add
push
push
call
mov
mov
sub
mov
mov
push
push
call
mov
sub
mov
or
sub
call
mov
add
mov
mov
pushl
push
call
mov
sub
mov
push
call
mov
sub
mov
sbb
sub
call
mov
mov
mov
mov
add
add
push
mov
push
call
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
or
mov
mov
mov
adc
sub
call
mov
mov
mov
sub
call
sbb
mov
push
push
call
mov
sub
mov
mov
push
call
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
push
call
mov
add
add
mov
push
mov
sub
push
call
mov
sub
mov
mov
push
push
call
mov
mov
mov
add
mov
add
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sbb
add
add
call
mov
add
mov
sub
mov
call
mov
xor
mov
mov
mov
mov
sub
mov
pushl
call
mov
sub
mov
mov
mov
mov
sub
mov
add
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
or
mov
mov
mov
mov
push
mov
pushl
call
mov
mov
push
call
mov
sub
call
mov
add
add
or
add
push
call
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
sub
mov
add
pushl
call
mov
mov
mov
mov
sub
mov
sub
mov
mov
push
call
mov
mov
mov
sub
push
call
mov
add
add
mov
mov
call
mov
mov
mov
mov
and
mov
call
mov
sub
mov
mov
mov
sub
mov
mov
sub
add
mov
call
mov
or
mov
mov
call
mov
and
call
mov
sub
mov
mov
call
mov
sub
mov
mov
push
mov
pushl
call
mov
add
mov
call
mov
mov
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
and
push
mov
push
call
mov
sub
and
add
mov
mov
add
or
sub
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
add
sub
mov
push
call
mov
add
sub
pushl
call
mov
sub
mov
sub
mov
push
mov
push
call
xor
sub
add
mov
push
add
push
call
mov
mov
add
mov
add
push
call
mov
mov
mov
add
push
call
mov
sub
sub
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
add
call
mov
sub
sub
mov
mov
add
mov
add
call
mov
mov
mov
sub
mov
call
mov
sub
sub
pushl
call
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
mov
mov
add
sbb
call
xor
sub
sub
mov
add
add
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
sub
add
mov
call
xor
mov
add
mov
call
sbb
sub
mov
mov
call
mov
sub
mov
mov
call
mov
sub
mov
add
mov
sub
push
mov
push
call
mov
add
mov
pushl
mov
push
call
mov
mov
mov
mov
add
mov
add
push
call
mov
mov
sub
add
push
call
mov
mov
mov
call
xor
mov
mov
or
mov
pushl
call
mov
mov
mov
mov
push
call
mov
add
add
push
call
mov
sub
mov
add
mov
push
push
call
mov
mov
call
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
call
mov
mov
add
push
call
mov
sub
mov
mov
call
mov
mov
mov
add
sub
call
mov
or
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
pushl
call
mov
sub
mov
sub
sub
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
add
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
add
add
add
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
pushl
pushl
call
mov
mov
mov
sub
mov
add
mov
sub
mov
push
call
mov
add
add
mov
mov
mov
xor
mov
mov
add
mov
add
mov
mov
mov
push
call
mov
sub
mov
sub
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
pushl
push
call
mov
mov
mov
add
call
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
or
call
and
add
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
mov
add
mov
mov
sub
mov
call
mov
sub
mov
mov
sub
mov
mov
xor
sub
mov
add
mov
call
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
push
call
mov
sub
mov
add
push
call
mov
sub
mov
mov
add
mov
pushl
call
mov
and
mov
mov
mov
sub
mov
and
mov
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
xor
mov
mov
mov
sub
mov
mov
add
sub
mov
mov
call
mov
mov
sub
mov
mov
call
mov
sub
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
sub
push
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
add
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
mov
add
mov
mov
call
mov
sub
mov
pushl
call
mov
add
add
push
call
mov
sub
sub
mov
or
pushl
mov
push
call
mov
add
add
mov
push
call
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
mov
push
call
mov
mov
call
mov
add
mov
mov
add
call
mov
sub
mov
mov
call
and
add
mov
mov
push
sub
push
call
mov
sub
mov
mov
sub
push
push
call
mov
mov
mov
mov
push
push
call
mov
or
mov
mov
mov
add
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
add
sbb
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
call
mov
add
mov
sub
mov
push
call
mov
sub
mov
mov
sub
push
call
mov
mov
mov
add
mov
call
mov
sub
mov
mov
push
call
mov
add
mov
mov
push
push
call
mov
xor
sub
mov
add
call
mov
sub
mov
push
call
mov
mov
mov
push
call
xor
sub
add
mov
mov
mov
mov
call
mov
sub
mov
sub
mov
mov
call
mov
sub
mov
mov
sub
mov
push
call
mov
mov
xor
mov
pushl
call
mov
and
sub
call
mov
xor
sub
mov
call
mov
mov
mov
mov
sub
mov
push
push
call
mov
add
adc
mov
push
pushl
call
mov
mov
and
mov
call
mov
mov
mov
mov
pushl
push
call
mov
add
mov
mov
pushl
push
call
mov
mov
mov
mov
push
mov
pushl
call
mov
sub
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
or
call
mov
add
mov
add
mov
mov
add
mov
call
mov
mov
mov
mov
push
call
mov
add
mov
add
call
mov
sub
mov
push
call
mov
sub
add
mov
call
mov
mov
mov
and
call
mov
mov
add
call
mov
mov
mov
mov
or
mov
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
call
mov
sub
mov
mov
add
add
sub
mov
push
push
call
mov
mov
mov
add
call
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
push
call
mov
sub
mov
push
call
mov
sub
mov
mov
mov
mov
mov
sub
mov
xor
mov
mov
mov
sub
push
call
mov
add
mov
add
mov
call
mov
add
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
mov
mov
mov
mov
mov
mov
push
push
call
sub
sub
add
mov
add
push
call
mov
sub
pushl
call
mov
add
sub
mov
mov
sub
mov
mov
add
call
mov
mov
mov
sub
mov
add
mov
mov
call
mov
mov
mov
mov
xor
push
mov
push
call
mov
sub
mov
sub
or
call
mov
mov
mov
sub
mov
mov
sub
or
push
push
call
mov
mov
mov
add
add
push
call
mov
mov
mov
and
mov
call
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
sub
sub
mov
add
push
call
mov
add
mov
mov
push
call
mov
sub
mov
call
mov
mov
mov
push
call
mov
sub
mov
mov
push
call
sub
or
mov
mov
mov
call
mov
add
mov
mov
push
call
mov
sub
call
mov
add
mov
call
mov
sub
mov
mov
mov
add
push
call
mov
mov
mov
mov
sub
mov
mov
mov
push
mov
pushl
call
mov
mov
sub
call
add
mov
call
mov
and
or
mov
sub
mov
add
mov
sub
call
mov
add
mov
mov
add
call
mov
mov
mov
add
mov
sub
call
mov
add
mov
sub
mov
mov
call
mov
mov
add
call
mov
mov
mov
call
mov
mov
mov
mov
add
mov
add
mov
call
mov
sub
mov
add
mov
push
call
sub
mov
add
add
mov
mov
xor
mov
sub
mov
sub
mov
push
call
mov
add
add
mov
call
mov
add
call
mov
mov
mov
call
mov
xor
mov
mov
call
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
pushl
mov
pushl
call
mov
mov
mov
mov
call
mov
add
mov
mov
push
call
mov
add
mov
mov
mov
mov
sub
adc
mov
call
mov
sub
mov
add
mov
mov
call
mov
mov
mov
sub
mov
pushl
mov
pushl
call
mov
sub
mov
pushl
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
sub
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
push
push
call
mov
add
mov
push
push
call
mov
add
mov
sub
mov
call
mov
mov
mov
mov
pushl
add
push
call
and
add
sub
mov
push
call
mov
add
mov
sub
mov
mov
call
mov
sub
mov
mov
mov
push
call
mov
add
sub
mov
call
mov
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
add
mov
sub
sub
push
pushl
call
mov
add
mov
add
mov
sub
push
call
mov
mov
mov
mov
subl
push
call
mov
sub
mov
add
mov
push
call
mov
and
mov
add
sub
call
mov
add
mov
sub
push
call
mov
mov
mov
push
call
mov
sub
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
add
mov
mov
add
call
mov
sub
mov
add
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
add
add
push
call
mov
sub
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
adc
push
call
mov
mov
sub
mov
call
adc
add
mov
mov
call
mov
mov
mov
mov
push
push
call
mov
or
sub
mov
add
call
mov
mov
mov
mov
add
call
mov
mov
mov
add
call
mov
add
mov
mov
add
mov
mov
mov
push
push
call
mov
sub
mov
mov
add
mov
sub
call
mov
sub
mov
call
mov
mov
push
push
call
mov
add
mov
mov
mov
call
sub
mov
mov
mov
add
push
call
mov
mov
mov
mov
sub
mov
sub
mov
push
call
mov
sub
add
mov
push
call
mov
mov
mov
mov
add
add
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
mov
add
pushl
call
mov
mov
mov
mov
pushl
mov
push
call
mov
sub
mov
add
mov
mov
mov
pushl
call
sub
mov
mov
call
mov
mov
mov
add
push
call
mov
mov
mov
sub
push
call
mov
mov
mov
add
sub
sub
mov
mov
mov
call
mov
add
sub
mov
mov
call
mov
and
mov
mov
mov
call
mov
sub
and
mov
push
call
mov
add
call
mov
mov
mov
sub
sbb
mov
call
mov
mov
mov
mov
add
pushl
call
mov
sub
mov
mov
pushl
push
call
mov
sub
mov
mov
mov
push
call
mov
or
mov
add
mov
push
call
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
cmp
je
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
dec
jne
mov
add
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
add
mov
mov
mov
pushl
call
mov
mov
mov
mov
call
and
sub
sub
mov
mov
push
pushl
call
mov
sub
mov
add
mov
call
xor
sub
sub
add
push
call
mov
add
mov
push
call
mov
sub
mov
mov
pushl
call
mov
mov
add
mov
mov
add
add
mov
add
mov
mov
push
call
add
sub
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
sub
push
call
mov
add
add
push
pushl
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
call
mov
sub
mov
call
mov
mov
mov
sub
add
call
mov
mov
sub
add
push
call
add
mov
add
mov
sub
push
call
mov
mov
mov
mov
mov
add
mov
mov
sub
call
add
mov
mov
sub
mov
mov
sub
mov
mov
push
call
mov
sub
mov
mov
add
sub
call
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
call
mov
mov
mov
push
mov
mov
push
call
mov
add
sbb
add
call
mov
xor
add
pushl
call
mov
mov
mov
call
or
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
add
mov
sbb
call
mov
xor
sub
mov
add
mov
push
pushl
call
mov
mov
mov
push
or
push
call
mov
mov
mov
mov
mov
call
mov
sub
xor
mov
add
push
call
or
sub
mov
mov
call
mov
mov
mov
add
mov
mov
push
push
call
mov
sub
mov
sub
push
push
call
mov
mov
mov
mov
mov
sub
sub
call
mov
sub
xor
mov
call
mov
sub
add
mov
mov
add
mov
push
call
mov
mov
mov
add
mov
call
mov
add
mov
add
mov
sub
pushl
push
call
mov
sub
mov
mov
push
call
mov
add
mov
mov
push
call
mov
sub
mov
mov
mov
call
mov
sub
mov
mov
push
call
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
push
call
mov
add
mov
sub
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
push
call
mov
sub
mov
add
call
adc
mov
mov
add
mov
mov
mov
call
mov
sub
add
mov
push
mov
sub
push
call
mov
mov
mov
call
mov
mov
mov
mov
add
mov
push
call
mov
xor
add
mov
mov
add
mov
call
mov
add
sub
sub
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
add
mov
add
call
mov
mov
mov
mov
mov
mov
add
mov
push
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
sub
sub
call
mov
add
sub
mov
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
add
mov
mov
push
call
mov
mov
mov
mov
sub
call
mov
sub
add
sbb
push
mov
push
call
mov
mov
add
call
mov
mov
sub
mov
push
call
mov
xor
push
push
call
and
add
mov
mov
push
push
call
mov
sub
mov
add
call
mov
sub
mov
mov
push
call
mov
mov
mov
sub
push
call
pop
add
jae
add
add
inc
add
add
add
add
add
add
aaa
xor
add
insb
add
imul
add
dec
xor
add
add
add
add
add
ja
add
add
add
mov
add
mov
mov
mov
sub
mov
call
mov
add
mov
push
call
mov
sub
add
mov
sub
mov
mov
mov
mov
sub
call
mov
mov
mov
add
mov
call
mov
sub
add
mov
sub
mov
mov
mov
call
mov
mov
call
call
mov
sub
mov
add
mov
sub
sbb
call
mov
mov
sub
mov
mov
push
call
mov
add
mov
mov
add
call
call
mov
mov
sub
mov
call
mov
sub
mov
sub
mov
mov
sub
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
sub
mov
and
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
push
call
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
add
mov
mov
call
mov
mov
sub
adc
mov
call
mov
sub
add
push
call
push
mov
sub
mov
mov
xor
add
mov
sub
mov
mov
mov
xor
push
push
mov
pushl
call
mov
add
and
add
mov
add
add
mov
mov
pop
ret
push
mov
mov
sub
or
mov
mov
mov
mov
mov
sub
mov
sub
mov
sub
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
add
sub
mov
sub
call
mov
sbb
sub
mov
mov
mov
call
sub
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
xor
call
mov
mov
sub
mov
mov
sbb
mov
mov
push
pushl
call
mov
mov
sub
mov
add
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
call
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
andl
sub
mov
inc
mov
cmp
jne
mov
mov
xor
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
and
call
mov
mov
add
mov
sub
mov
mov
sub
mov
mov
mov
mov
sub
push
call
mov
mov
sub
mov
mov
push
push
push
push
push
call
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
add
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
xor
mov
mov
xor
add
mov
mov
mov
cmp
jae
mov
mov
mov
sbb
mov
sub
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
sub
sub
mov
mov
add
add
mov
mov
add
test
jne
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
call
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
add
mov
call
mov
pop
ret
push
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
sub
mov
pop
ret
sbb
add
mov
mov
add
mov
sub
add
ret
push
mov
add
mov
mov
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
push
mov
add
mov
mov
sub
mov
mov
and
mov
mov
mov
add
mov
sub
add
pushl
mov
lea
push
call
mov
mov
add
and
mov
call
mov
mov
and
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
mov
push
pushl
call
mov
and
mov
mov
push
push
call
mov
sub
mov
mov
sub
call
mov
add
mov
sub
mov
call
mov
sub
mov
sub
pop
ret
push
mov
add
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
pop
ret
push
mov
add
mov
mov
sub
mov
sub
mov
sub
mov
mov
add
mov
mov
or
mov
mov
call
mov
mov
add
adc
mov
mov
call
call
and
mov
add
mov
mov
call
mov
mov
add
mov
mov
mov
sub
call
mov
mov
add
mov
add
adc
mov
sub
leave
ret
push
mov
add
mov
mov
and
mov
mov
sub
call
mov
mov
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
add
mov
xor
add
add
mov
mov
mov
push
call
mov
add
mov
mov
ret
push
mov
add
mov
mov
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
mov
adc
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
leave
ret
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
outsb
add
add
aam
cld
mov
adc
xchg
sub
cmpl
inc
rcll
ret
mov
jmp
push
arpl
sub
outsl
test
pop
jge
cmc
mov
push
xchg
rorb
xchg
mov
lods
dec
sub
add
cld
push
icebp
inc
in
dec
lock
rorl
add
into
or
mov
pop
nop
insb
ret
fwait
hlt
xchg
lds
in
adc
mov
lods
jge
rorl
das
mov
shlb
inc
mov
mov
cmpsb
das
inc
stos
dec
or
icebp
jg
test
int
inc
xchg
dec
fisttpll
sub
inc
xchg
cmp
dec
or
test
sbb
pop
enter
and
int
test
mov
test
pop
inc
test
repnz
mov
or
mov
mov
leave
xchg
xchg
xor
mov
xacquire
rorb
xchg
mov
stos
inc
cmp
dec
and
stc
xchg
sar
adc
dec
sbbl
sarl
sti
ret
in
and
out
mov
sti
cli
rclb
or
sbb
xchg
xchg
pop
movsl
and
movsl
add
pusha
pop
jl
sti
xchg
shlb
movsl
aas
inc
scas
iret
sti
xchg
aam
push
cmp
inc
cld
xchg
shlb
subl
sub
inc
xor
xor
mov
sti
xchg
mov
inc
inc
dec
sar
jno
sti
xchg
shlb
xchg
rclb
adc
js
xchg
rolb
mov
sarl
lds
inc
inc
ret
sbb
out
xchg
in
mov
cmp
cltd
andl
mov
xchg
xchg
std
lret
shr
lahf
sarl
clc
sar
loope
data16
jnp
adc
clc
xchg
sarb
aas
sarl
sub
cmp
mov
int
sarl
mov
sbb
mov
xchg
pop
cmp
inc
roll
mov
mov
ret
sarl
xchg
push
inc
shl
push
xchg
addb
rcr
inc
xchg
adc
dec
inc
sbb
shlb
dec
dec
test
into
sub
ret
sarb
mov
fiaddl
sti
or
test
sti
xchg
fldenv
xchg
push
sarb
cmc
aas
mov
mov
cltd
or
movsb
aas
je
pop
xor
in
mov
into
sub
stc
push
shll
ror
test
rorb
popf
les
mov
aas
cmp
mov
sti
enter
mov
mov
or
push
aam
push
xlat
adc
int
xor
dec
push
mov
shrl
cmp
push
mov
movsb
inc
add
mov
outsl
dec
and
inc
test
mov
mov
ljmp
ds
rorl
xchg
mov
jno
push
mov
xchg
mov
shll
iret
aad
lds
lea
inc
int3
dec
or
sbb
mov
repz
or
mov
jo
and
mov
outsl
jb
stos
sbb
xchg
mov
mov
sti
xchg
adc
aas
aaa
lods
pushl
xchg
sarb
movsb
aas
or
int
push
mov
jl
movsb
dec
aam
push
sti
or
movsb
aas
ljmp
sti
sti
es
inc
sbb
sti
push
sarl
call
mov
cld
sub
aam
sti
xchg
aaa
sar
test
mov
gs
sbb
dec
loope
sti
out
rcl
mov
sar
fcoml
sbb
sarl
repz
imul
mov
aas
inc
hlt
mov
ds
inc
shr
aad
jno
es
shl
inc
xchg
sar
xchg
inc
mov
adcb
rcl
mov
pop
and
cmpsb
inc
cmp
sbb
pop
cld
inc
adc
dec
add
rorl
std
add
jge
sarl
movl
or
inc
aad
sub
xchg
shlb
dec
xor
cmc
leave
sarl
sbbl
stos
test
dec
xchg
cmp
shlb
int
inc
in
ret
cmpsb
mov
inc
mov
xchg
mov
ret
adc
dec
and
cmp
out
icebp
mov
inc
sub
mov
xchg
enter
fildl
js
push
inc
adc
lret
nop
std
mov
movsb
lret
movsl
jb
rolb
pop
mov
mov
sti
sub
add
add
gs
shlb
data16
into
aas
inc
out
cld
insb
sarl
arpl
sti
xchg
in
cld
xlat
shlb
sarb
icebp
add
dec
sbb
out
les
mov
shlb
sbb
mov
aam
mov
sti
dec
fldl
sub
pop
dec
xchg
mov
cmpsb
adc
jns
mov
ret
add
xchg
sarl
ret
sub
dec
jbe
pop
cmpsb
or
jle
stc
xchg
shlb
push
sarb
push
xchg
rcrb
sarl
in
ret
lret
mov
push
push
leave
push
push
aam
cmp
pop
ret
lret
frndint
and
adc
in
or
xchg
aaa
imul
fidivrs
dec
lahf
jns
into
sahf
jns
aas
test
repz
inc
sti
andl
dec
push
insl
scas
es
push
repnz
cli
mov
stos
mov
sub
in
lods
push
xor
mov
xor
add
fnsave
mov
neg
int
cmp
dec
out
mov
out
xchg
xor
dec
iret
mul
clc
js
out
shl
lret
cmp
inc
aad
cmp
aam
adc
mov
mov
clc
mov
divb
insl
dec
cvtpi2ps
xor
pushf
outsl
cmp
shrb
movsb
lea
das
or
sub
or
cmpsl
sbb
dec
mov
aas
mov
sub
subl
out
insl
xchg
lret
or
push
adc
push
sub
mov
sub
push
adc
jo
adc
push
es
mov
daa
pop
xor
mov
push
sbb
sar
filds
js
das
mov
bound
mov
dec
mov
data16
fnstsw
clc
imul
add
ljmp
dec
push
repnz
rcll
repnz
sub
pop
and
int3
mov
push
imul
push
dec
hlt
and
mov
mov
sti
xchg
shlb
mov
movsb
aas
int3
pmulhuw
mov
aad
sarb
jae
icebp
jb
aaa
jecxz
dec
xchg
sarb
inc
sarl
sti
xchg
ret
minps
xchg
sarb
push
hlt
mov
or
push
mov
rcll
xlat
cmp
lcall
rcrl
inc
sarl
clc
xchg
shlb
mov
and
jge
sar
iret
daa
xor
mov
cld
xchg
shlb
movb
dec
les
sar
jae
cmp
rorl
push
rolb
xchg
shlb
push
mov
aam
mov
xorb
sar
push
test
jmp
mov
sar
shrl
mov
mov
mov
mov
mov
mov
inc
sarl
sti
xchg
shlb
adc
fbld
xchg
sarb
push
pop
enter
call
aas
inc
rol
aaa
mov
dec
repz
sub
mov
test
ror
inc
shrb
xchg
xchg
mov
jg
movsb
aas
push
pushf
test
xchg
sarb
inc
xchg
and
xchg
ljmp
xchg
icebp
jg
leave
in
inc
inc
pop
in
shll
leave
cmpsb
cmpsb
adc
fwait
mov
xor
jb
inc
adc
jns
inc
pop
jge
xchg
sarb
inc
mov
sti
xchg
shlb
inc
sarl
cmp
repz
mov
into
jecxz
sti
xchg
inc
cmpl
push
sarb
cld
xchg
shlb
dec
rcrl
test
inc
inc
xor
movsl
mov
xor
sbb
sti
xchg
pop
test
and
dec
mov
shlb
inc
xorb
mov
add
dec
sar
xchg
shlb
push
inc
sub
xchg
shl
inc
cmp
cwtl
sti
addr16
sub
sub
les
jecxz
pop
xchg
sarb
int
add
add
popf
inc
xchg
inc
sarl
out
dec
dec
or
shlb
mov
and
inc
stos
dec
mov
xchg
shlb
push
sarb
add
inc
sbb
in
dec
inc
je
shlb
inc
test
push
inc
or
mov
add
or
test
xchg
sarb
inc
shll
sub
sub
xchg
ret
test
xchg
jge
inc
sti
xchg
inc
insb
cmp
fstpt
mov
and
cld
xchg
sarb
les
inc
ljmp
jecxz
sbb
sar
dec
add
dec
inc
jo
push
add
push
add
xor
mov
int3
fsubl
cmp
pusha
xor
pop
xor
push
add
and
adc
cmp
or
mov
cld
pop
or
or
push
sbb
out
mov
or
inc
daa
xor
jecxz
aaa
mov
in
outsb
cmp
mov
or
jnp
test
push
mov
leave
lret
xchg
jo
fsubl
push
inc
xchg
lret
pop
mov
inc
test
test
filds
lret
mov
push
les
outsb
ret
lcall
sbb
mov
mov
push
inc
mov
dec
sub
add
mov
jbe
inc
and
jg
fstpl
notb
xchg
cmp
iret
int3
fsubrl
pop
idiv
push
inc
mov
aaa
jg
dec
ljmp
mov
mov
and
push
lcall
sbb
pop
cmp
jl
mov
mov
movsb
pop
or
cmp
sahf
adc
xchg
push
pop
sahf
inc
and
out
mov
add
mov
push
mov
xchg
jbe
mov
mov
loopne
push
pusha
mov
add
popf
lods
push
sub
lods
js
jbe
push
dec
adcb
cmpsb
ffreep
int3
and
mov
xor
mov
leave
adc
add
add
out
mov
inc
jbe
sti
and
and
push
test
mov
paddsb
enter
pop
in
adc
out
notl
inc
rcll
mov
inc
push
pop
imul
mov
mov
jnp
push
outsb
pushf
push
mov
mov
push
sub
fs
mov
andb
out
test
jmp
sub
shrb
push
lahf
push
and
push
or
push
jne
or
shll
sub
mov
mov
std
cmp
mov
fwait
push
xchg
mov
inc
sub
pusha
pusha
ret
cwtl
adc
cmpsl
pushf
cmp
xchg
out
push
call
sbb
sub
mov
push
cmp
call
iret
pop
push
push
adc
add
and
pop
adc
xlat
or
call
push
pop
stc
or
dec
jnp
mov
jge
jbe
int
lcall
or
dec
cmp
loope
cmp
or
pushf
sub
push
pop
cmp
mov
jle
jmp
bound
pop
or
push
jp
mov
int3
and
fimull
outsb
int3
xchg
enter
jb
leave
sti
mov
mov
mov
fstpt
orb
lock
mov
pop
dec
ret
movsb
jne
jle
iret
mov
call
je
je
fsub
loopne
in
xchg
aam
xchg
stos
ss
xchg
xor
add
iret
fnstcw
fstps
cmp
lock
outsl
test
dec
call
orb
data16
out
cmp
xor
test
mov
rcll
gs
jp
aaa
hlt
lret
push
xchg
int3
insb
leave
je
roll
lds
cli
jnp
enter
popa
pop
cmp
fistpll
xchg
xchg
mov
push
adc
pop
or
jle
shll
push
or
jne
lods
cs
pop
inc
cmpb
je
lcall
mov
dec
mov
push
mov
and
jb
or
andb
add
add
fsubr
xchg
jne
mov
jmp
xchg
repnz
xor
pop
sbb
jle
xchg
fsts
stos
mov
push
dec
mov
mov
in
call
add
outsl
jmp
dec
lcall
pop
clc
bound
sbb
arpl
add
call
mov
test
dec
lock
popf
enter
mov
pop
ljmp
lcall
ds
ss
inc
mov
add
les
test
push
adc
insl
dec
add
mov
jmp
stos
push
js
hlt
mov
add
add
sahf
push
fidivs
sbb
xchg
aaa
push
icebp
mov
push
inc
pop
or
add
jae
add
add
insl
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
insb
add
add
add
push
add
add
add
inc
add
xor
add
add
add
add
add
xor
add
jno
add
add
xor
add
add
popa
add
add
js
add
add
pop
add
add
dec
add
add
add
add
push
add
popa
add
data16
add
add
add
add
dec
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
dec
add
add
add
jno
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
push
add
inc
add
add
add
add
push
add
add
add
add
add
dec
add
add
dec
add
inc
add
add
add
add
push
jns
add
pop
add
add
jp
add
add
add
add
insl
add
add
pop
add
add
push
add
add
add
add
add
xor
add
jns
add
add
add
add
inc
add
add
add
dec
add
xor
add
add
add
add
add
add
add
add
push
add
xor
add
add
add
add
add
add
add
je
add
add
add
arpl
add
push
add
inc
add
add
sub
push
pop
lods
or
push
sbb
int
mov
inc
pop
push
or
shr
cmp
inc
xchg
test
testb
cs
fld
add
ret
add
out
push
ljmp
inc
mov
push
movl
dec
lods
insb
dec
lret
xchg
inc
mov
fstpt
and
add
shl
cmp
jg
fnsave
shlb
or
pop
jmp
inc
jmp
push
sub
push
add
sub
add
inc
stc
add
inc
cmp
pop
cmpsb
aaa
or
xor
sbb
push
call
dec
push
sbb
adc
or
pop
ljmp
or
gs
xchg
in
cltd
or
push
or
stc
add
cmc
leave
jle
xorl
and
dec
ret
sbb
jno
lea
mov
push
push
xchg
data16
push
shrl
lahf
pusha
dec
clc
jne
xchg
cmpsb
hlt
loope
dec
mov
push
nop
ret
mov
stos
push
into
loopne
push
orb
xchg
les
test
push
add
mov
or
add
jle
mov
call
ja
mov
pop
insb
adc
icebp
push
push
les
adc
pop
pop
rcr
test
mov
cmp
xor
and
lods
and
push
lea
sahf
mov
into
jmp
push
call
push
ror
ret
cmpsl
ror
push
frstor
aad
mov
into
incl
pushl
scas
push
int
sub
pop
orl
out
into
mov
jno
int3
mov
sub
mov
mov
hlt
in
adc
enter
out
outsl
int
hlt
mov
xchg
sbb
cmpsb
out
add
jno
loopne
out
lcall
mov
stos
pop
jg
dec
sub
lea
adc
test
enter
inc
in
pop
repnz
je
adc
pop
cld
adc
jns
sbb
adc
cmp
loop
inc
call
mov
xor
fistpll
or
inc
add
cmp
jne
mov
hlt
push
insb
in
dec
and
mov
lods
insl
xchg
rcrl
sbb
inc
add
inc
push
pop
pop
outsl
push
loopne
mov
clc
call
je
lods
mov
ret
add
jge
cmpsb
ljmp
call
bound
popa
bswap
lock
add
je
xchg
push
out
data16
ret
popa
gs
push
dec
or
xchg
repnz
sub
pop
je
lahf
jno
sahf
pop
stos
mov
iret
sbb
leave
fildl
jecxz
dec
pop
jbe
inc
ret
into
cld
test
call
nop
xor
push
fs
or
cld
ss
mov
sbb
cmp
outsb
xor
push
pop
inc
sbb
mov
outsb
xor
push
loop
cli
add
movl
sub
xor
loop
jle
pop
and
mov
inc
lahf
scas
bound
pop
cs
add
call
pop
xor
pop
inc
fwait
cmp
hlt
push
imul
jo
sbb
out
sbb
mov
fisubl
leave
mov
stos
cwtl
mov
insl
push
arpl
and
outsb
push
das
xchg
pop
jg,pn
sub
xlat
mov
les
mov
and
pushl
mov
adc
lods
outsl
push
in
xchg
iret
xchg
dec
insl
mov
jo
jno
mov
xchg
roll
adcl
cmpsl
mov
hlt
ret
in
cwtl
clc
cld
mov
dec
mov
and
fbstp
jae
out
cli
imulb
add
push
movb
xchg
cmpsb
pusha
outsl
dec
fbld
repnz
xchg
jne
sbb
pop
into
lods
push
push
fcmovnb
jae
stos
repz
mov
mov
mov
push
mov
repnz
cld
xchg
inc
gs
adc
lret
push
add
loop
cmc
push
pusha
adc
scas
les
mov
pop
ljmp
lock
pop
and
test
cs
mulb
add
add
jbe
pop
lret
pop
imulb
inc
xchg
hlt
in
pop
dec
outsl
fwait
mov
xchg
lret
sub
imul
jb
mov
test
pop
int3
jne
push
cmp
mov
mov
sub
sub
and
add
popa
add
add
inc
add
add
dec
add
inc
add
add
jo
add
add
push
add
imul
add
ja
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
imul
push
add
js
add
add
add
push
js
add
add
add
add
push
add
add
add
add
add
add
add
add
add
dec
add
jno
add
add
insb
add
pop
add
outsb
add
dec
add
add
add
add
pop
cmp
add
add
add
add
js
add
add
add
add
add
add
add
data16
add
add
inc
add
add
add
add
add
add
jbe
add
add
pop
add
add
add
add
add
add
add
imul
imul
add
add
imul
add
add
add
insb
add
imul
outsl
add
add
imul
imul
add
jp
bound
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
xor
xor
add
add
add
add
add
dec
pop
add
add
dec
add
inc
add
add
add
add
add
add
add
inc
add
add
add
popa
add
add
add
add
add
add
add
jbe
jno
add
dec
outsl
add
add
push
add
add
add
dec
add
add
inc
push
push
add
add
add
add
add
push
add
add
add
arpl
add
add
add
dec
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
dec
add
xor
add
add
add
push
add
add
jne
sbb
pusha
inc
adc
repnz
test
xchg
push
les
addr16
push
mov
or
adc
inc
mov
icebp
jb,pn
cmpb
je
jle
lock
int
add
mov
mov
outsl
inc
lea
mov
pop
add
rolb
test
es
and
call
stos
inc
push
ljmp
pop
adcb
sub
loop
mov
cmp
or
scas
mov
in
jl
cmp
nop
xchg
push
call
jl
pop
pop
lods
testb
stos
dec
outsl
cs
push
push
test
mov
int
adc
mov
dec
jae
and
mov
mov
je
push
jmp
aam
xchg
lock
sti
movl
sti
fwait
mov
mov
jne
jmp
pop
fildl
and
lock
inc
pop
xchg
fildll
adc
fmull
repnz
in
push
movsb
inc
cld
out
xchg
pop
les
das
ja
or
cmpsb
jbe
mov
and
mov
out
fwait
js
mov
and
outsb
adc
mov
cmc
dec
insb
mov
and
hlt
mov
stos
sbb
aaa
fimuls
jbe
sbb
or
test
jno
les
enter
dec
cmp
leave
or
test
mov
or
fsubrs
hlt
enter
sti
adc
icebp
and
aam
repnz
mov
test
js,pn
aam
repnz
in
and
mov
hlt
div
ret
mov
insb
lea
cmc
add
jo
movsl
and
jmp
in
jg
xchg
push
out
call
fstl
dec
push
push
sbb
rep
addb
jbe
aaa
divb
sub
jb
jns
push
push
dec
scas
movsl
aad
lods
fdivr
ljmp
jmp
mov
sbbb
xor
sbb
stc
dec
int3
fidivl
inc
jle
mov
sub
mov
cmpsb
inc
js
jmp
jg
pop
and
mov
cmp
fcompl
fsubrs
xor
call
lret
bound
push
jp
jbe
cmp
negl
push
adc
cmp
inc
loopne
jae
fistpll
fmull
push
jmp
dec
cmp
out
mov
dec
xchg
mov
js
scas
lret
mov
and
icebp
int
call
das
mov
int
hlt
scas
stc
add
jb
js
enter
dec
adc
jb
mov
pushf
shr
scas
mov
imulb
and
fdiv
sbb
imul
imul
outsb
adc
xor
xchg
out
outsb
movsb
mov
inc
pop
out
int3
cmc
mov
push
jecxz
lock
sti
scas
scas
inc
xchg
add
fs
adc
mov
bnd
into
sbb
movsb
push
les
and
repnz
jg
test
sti
inc
ja
add
xchg
jb
pop
shlb
jbe
leave
andb
jmp
in
mov
icebp
movsb
push
xor
mov
sub
push
lock
lahf
or
ja
lock
pop
mov
sahf
insb
test
pop
fdivs
lods
enter
cmc
out
in
and
enter
fsubs
in
int
mov
mov
mov
or
lds
mov
outsl
repz
fidivs
mov
movsb
ds
xor
je
loop
jne
mov
bound
xchg
out
int3
mov
jmp
mov
fs
or
xchg
jg
xor
rorb
data16
repz
aas
mov
mov
dec
xlat
and
pushf
sti
mov
js
mov
negb
ror
hlt
push
fidivrs
out
jo
hlt
or
jmp
divl
negl
fisttpl
into
pusha
mov
mov
loope
sub
fcmovb
in
aaa
xor
xlat
mov
scas
mov
and
aaa
les
mov
mov
inc
shrl
jne
subb
add
cwtl
xor
mov
push
sub
test
lods
cmpsb
jo
lahf
or
xor
jno
loope
mov
enter
mov
xchg
jg
out
inc
outsl
mov
insb
add
loopne
and
or
outsb
mov
xchg
call
stc
in
cmp
push
and
jbe
adc
in
push
fs
or
jae
fbld
mov
push
cmp
ljmp
in
and
mov
jmp
or
add
cwtl
stos
mov
stos
addr16
out
stc
dec
jb
decb
mov
mov
clc
popf
fsubr
cmp
outsl
lahf
into
cmc
insw
sbb
imul
fs
and
data16
imul
cmp
and
insl
add
imul
mov
dec
mov
add
cmp
es
notb
aad
imul
mov
mov
ficompl
imulb
movsb
cltd
or
cmp
jle
mov
lcall
xchg
fiadds
scas
into
and
jb
andb
jmp
push
clc
call
mov
mov
int3
inc
loopne
mov
xor
call
ljmp
lret
inc
dec
mov
addr16
cmp
dec
pop
int
mov
mov
add
mov
es
movsb
sbb
mov
popf
int3
cmp
xchg
jae
pop
xor
clc
out
fs
add
lahf
xchg
push
push
pop
mov
cmpsl
pop
xlat
push
aas
add
loopne
pusha
lret
loope
pushf
addb
pop
adc
push
lods
shll
and
sbb
cmp
frstor
add
mov
jg
loope
and
loope
mulb
out
in
in
sbb
int3
and
mov
mov
shlb
xchg
lods
add
and
push
xchg
dec
lahf
inc
add
jp
test
loop
in
icebp
dec
mov
mov
bnd
add
inc
xchg
and
add
adc
or
lahf
jbe
insl
and
es
xchg
data16
cltd
stos
in
test
xor
fstps
shlb
cmp
adc
sub
add
mov
xchg
in
lods
cmpb
mov
pop
xchg
and
pop
popf
test
or
inc
pop
orb
leave
das
push
outsb
pop
scas
cs
sub
ret
jbe
cmp
popa
lcall
aad
push
pop
aam
ret
xor
dec
mov
add
jmp
out
negl
xchg
test
es
or
jne
xchg
es
add
lret
popa
cltd
movsl
lahf
loop
adc
sbb
jno
insl
xor
js
lea
pop
fwait
es
dec
movsb
push
mov
in
insl
out
popf
cmp
xchg
mov
sbb
sti
repnz
movsb
pop
xchg
cld
fnstenv
add
mov
icebp
pop
outsl
mov
add
inc
pop
js
inc
adc
popf
mov
mov
push
out
push
inc
inc
sbb
repz
dec
or
out
in
xor
pop
mov
jnp
sqrtps
insb
push
data16
sub
pop
xchg
enter
fidivrs
mov
mov
add
push
jne,pt
cld
adc
inc
leave
out
mov
in
xchg
push
mov
das
movl
cmp
jno
jmp
enter
stos
movsl
divl
imul
add
fwait
mov
jp
daa
xchg
pop
adc
jno
inc
push
int3
xchg
ds
int
sub
in
cld
testb
pop
xchg
shl
out
in
mov
push
pop
push
jl
loope
loop
mov
add
cli
push
xor
lea
adcb
addr16
pop
and
data16
sub
mov
cmpsb
mov
mov
xor
add
xchg
fistpl
jb
fwait
push
mov
add
dec
pop
sub
pop
ficompl
jb
add
and
dec
mov
pop
add
or
scas
outsl
testl
les
aad
dec
push
push
lret
movsb
cmp
scas
jne
data16
add
shll
add
shrl
shlb
iret
xchg
test
ds
add
or
xchg
icebp
out
outsl
add
jnp
out
insb
scas
push
mov
add
std
dec
ljmp
add
xchg
int
mov
push
fstps
inc
imul
pop
aaa
loope
stc
xlat
lret
push
cmp
hlt
jae
add
mov
ret
imul
cmp
jae
fdivl
repnz
std
inc
add
fisttpll
sub
push
arpl
mov
loopne
xor
cmp
je
sbbl
cmp
movsl
pop
in
rorb
xor
inc
dec
test
jbe
jle
jns
inc
jge
clc
movsl
cmpsb
dec
sbb
push
outsb
lahf
dec
push
push
jbe
inc
adc
cmp
adc
and
enter
sub
lods
dec
or
rcl
and
add
nop
ret
iret
mov
out
sbb
xor
mov
pop
mov
mov
orl
sub
pop
in
add
mov
mov
jmp
push
insb
jecxz
jae
sbb
addr16
je
sbb
mov
je
mov
sub
dec
pop
pusha
clc
bnd
inc
cld
outsb
gs
stos
lods
loop
sarb
sti
je
adc
dec
inc
je
inc
std
stc
loop
das
cli
pop
and
mov
jmp
test
jbe
pop
lea
addr16
sub
test
sbb
pop
lock
xchg
jmp
out
pop
jo
movsb
cmp
adc
xchg
ret
insb
test
out
and
rorb
xor
fstl
dec
or
enter
inc
add
or
push
push
fwait
scas
int
icebp
leave
ret
add
test
lea
pop
inc
rorb
and
jbe
mov
aad
xor
cmp
loopne
jmp
dec
in
inc
xlat
push
les
push
dec
inc
lock
scas
add
shr
jae
je
cld
push
xchg
fld
mov
pop
icebp
into
ret
ss
shl
add
in
jmp
pop
xor
cmc
enter
sub
aam
cli
mov
ljmp
xchg
xor
push
push
push
xor
push
mov
rclb
int
xor
dec
fiaddl
inc
push
out
cwtl
adc
xchg
jo
dec
test
xchg
test
and
out
fsubrl
pop
shll
or
out
scas
cmp
sbb
or
fldcw
ret
divl
nop
fistpll
leave
lock
int
sub
addr16
push
scas
js
insb
mov
nop
cli
sbb
je
add
cmp
fwait
mov
dec
pop
add
cmovns
repz
inc
pop
outsb
cwtd
pop
add
shrb
hlt
cmc
lcall
xchg
icebp
fadds
in
adc
adc
xor
mov
or
call
sub
arpl
out
dec
cmp
aas
cmpsl
subb
mov
lret
ret
sbb
ret
dec
out
push
cmpb
bound
xchg
and
inc
or
jno
mov
loopne
imul
sub
and
stos
in
in
imulb
or
mov
xchg
inc
push
testl
jge
test
pop
mov
in
leave
cmp
gs
aad
add
loopne
out
lods
int
mov
pop
jmp
incl
pop
sbb
mov
mov
pop
xlat
mov
or
shrl
and
inc
into
test
insb
cmp
shrb
dec
push
ret
mov
in
incl
xor
push
and
dec
xchg
adc
out
jl
inc
cli
jmp
and
push
jne
fs
in
arpl
or
fcomi
ljmp
sarb
jmp
adc
adc
lret
dec
or
movsb
in
test
pop
outsl
inc
es
jne
pop
and
sub
shll
or
clc
push
inc
push
gs
hlt
jno
je
clc
jl
test
push
inc
mov
data16
loop
fwait
sub
jbe
mov
imull
dec
shlb
loop,pt
lea
cmp
xchg
jl
push
pop
pop
fildll
xchg
sbb
pslld
pop
enter
addr16
push
inc
fdivs
xchg
sahf
fcomps
cld
lods
inc
mov
inc
lods
inc
add
jl
add
outsl
int3
mov
xor
stos
inc
and
xor
cmp
cmc
into
clc
mov
test
pushf
sbb
push
xor
and
bound
cld
call
hlt
or
test
insl
inc
call
shlb
mov
ret
ja
pop
inc
ss
fsts
push
sbb
out
add
cmp
movsb
pop
add
add
add
addr16
cltd
mov
bound
das
test
cmc
pop
cmpl
bswap
test
cmp
inc
hlt
jns
into
or
lods
jne
fwait
ret
dec
or
into
lea
enter
in
inc
call
jns
sbb
pop
jne
lods
movsl
aas
hlt
int3
push
js
mov
repz
jns
aaa
cs
pop
lea
hlt
ret
mov
ret
inc
mov
ja
pop
jl
dec
cmp
xchg
push
inc
pop
mov
pop
movsb
pop
lahf
xor
jae
fdivs
xchg
aad
sti
incl
push
mov
sub
popf
repnz
xchg
ret
out
fdivr
dec
push
fcmovnu
sub
add
mov
adc
mov
xchg
push
sbb
cli
in
adc
dec
mov
roll
stos
shll
addb
jo
cs
dec
enter
dec
test
adc
je
push
mov
lret
aam
adc
dec
je
or
jle
adc
inc
add
add
cmp
push
jne
shr
inc
adc
imul
les
or
cwtl
in
or
jne
jge
sbb
jo
rolb
iret
test
pop
fnstenv
cmpsb
pop
icebp
test
sub
std
call
js
jl
mov
inc
sti
fcoms
pop
adc
xchg
mov
jge
and
jne
les
ficomps
xchg
scas
cmp
and
cmpl
scas
les
les
add
ret
jmp
and
push
xchg
arpl
pop
arpl
addl
push
jb
int
aam
push
or
mov
mov
stc
mov
mov
stc
jmp
push
lcall
pop
pop
iret
push
insl
jbe
insl
lock
or
inc
pop
fs
lcall
daa
setl
aad
bound
les
mov
add
mov
js
cmp
dec
sahf
imul
fs
aam
cmp
xchg
inc
fs
pop
mov
mov
lahf
and
sbb
cld
mov
jne
inc
imul
cmc
test
jns
hlt
xor
out
mov
push
mov
lock
cmc
push
mov
adc
mov
pop
push
lea
cmpsl
aas
cld
test
xor
ficompl
je
aaa
add
adcb
mov
sub
jo
stos
into
bound
push
add
xor
mov
lods
test
mov
mov
sub
or
imul
mov
es
add
cmp
push
cmp
inc
les
jnp
mov
stc
into
call
adc
ljmp
xor
xchg
and
in
xlat
sbb
shr
out
mov
jmp
lret
dec
mov
push
adc
mov
ja
ja
xor
mov
mov
jb
outsl
push
lock
pop
jl
xor
sbb
pop
ret
enter
inc
sub
push
idivl
cmp
fistpll
sbb
fsubrp
inc
clc
push
adc
outsl
xor
fiadds
iret
adc
sub
stc
in
push
or
mov
lea
mov
outsl
rorl
das
mov
call
or
jo
sarl
jo
mov
call
pop
aaa
call
shlb
mov
test
jne
xor
xchg
shll
aad
subl
jge
arpl
mov
cmp
lods
jmp
push
mov
loopne
pusha
pop
jb
test
add
fmull
in
cmpl
cmpsb
out
jne
mov
inc
rcr
add
inc
ds
out
clc
mov
mov
enter
lods
shlb
xor
mov
mov
add
ret
lods
call
cmp
mov
outsl
jno
cli
popa
add
add
inc
add
add
dec
add
add
add
cmp
add
add
add
add
add
push
add
add
add
add
xor
insb
add
cmp
add
add
add
add
add
pop
add
add
add
add
add
add
add
inc
add
add
add
xor
add
add
add
dec
dec
add
add
add
add
pop
cmp
add
dec
add
add
add
add
add
add
add
add
jp
add
ja
jne
add
add
add
add
data16
add
add
add
add
add
ja
add
push
dec
je
add
add
add
add
pop
add
add
add
jne
add
pop
dec
add
add
pop
add
pop
add
inc
push
add
add
add
add
add
cmp
add
add
add
add
add
add
dec
add
add
add
add
push
add
add
add
add
bound
popa
add
add
add
outsl
add
push
cmp
add
add
add
add
inc
add
add
add
dec
add
add
jbe
xor
inc
je
add
add
add
xor
dec
push
add
add
outsl
imul
add
add
add
add
add
add
add
jno
add
add
add
add
push
add
add
pop
jbe
add
js
add
xor
push
add
add
add
imul
add
add
push
mov
cmp
pop
arpl
movsb
popa
aas
bound
sub
xchg
xchg
dec
adc
ljmp
mov
fadds
fmuls
cmp
or
repnz
adc
ret
add
dec
faddp
call
movb
xchg
gs
lcall
int3
jb
sub
ret
or
dec
inc
lcall
or
pop
push
cmpsl
add
adc
mov
mov
and
test
jg
ljmp
push
popa
stos
jg
movsb
inc
push
stos
aam
or
inc
jns
mov
lods
xor
mov
add
cmp
fdivrl
jg
xor
jne
mov
sub
pop
fsubrs
jge
push
bound
add
sub
movb
fs
xor
xor
and
jp
lcall
cld
push
push
call
adc
sbb
cmp
fidivs
inc
or
mov
add
jae
add
pop
call
jns
inc
repz
or
jnp
sub
mov
fucomi
je
push
fs
jno
pop
pop
push
push
sub
xor
ret
mov
cmp
mov
sbb
push
les
pusha
fwait
jge
leave
sbb
jle
cmp
test
lds
push
mov
je
in
sbb
movsb
in
movsl
lcall
dec
mov
int3
sbb
jmp
and
orb
jmp
mov
sub
mov
mov
mov
mov
mov
mov
loope
inc
gs
jge
jge
or
ljmp
and
or
pop
push
inc
imul
test
mov
fmuls
jg
dec
cmp
mov
lahf
insb
mov
inc
inc
adc
and
inc
mov
and
jge
je
cmp
or
jnp
faddl
pop
adc
addr16
stos
pop
add
je
inc
xchg
out
sub
cmp
jbe
cmp
out
bound
and
mov
hlt
add
push
hlt
pop
call
je
pop
insb
jb
add
add
inc
cmp
leave
rdmsr
push
cmp
lds
insl
inc
stc
cmc
test
out
bound
pop
lret
ffree
xchg
add
push
ror
or
in
mov
and
test
lcall
xor
adc
test
test
or
rcrl
mov
inc
jle
and
jbe
rcll
mov
adc
outsl
test
mov
jmp
dec
js
test
push
sub
add
hlt
inc
mov
cmp
push
xchg
push
pop
jbe
pusha
call
mov
pop
test
add
cmp
lea
mov
mov
rorl
jge
push
pop
mov
pop
sub
dec
add
push
pop
pop
out
ret
adc
shlb
jp
enter
inc
mov
lods
pop
pop
xlat
xor
lahf
lock
decb
pop
cmp
fwait
mov
int
jg
fsubl
dec
cwtl
pop
in
stos
dec
mov
jle
mov
xlat
sbb
les
mov
mov
in
cltd
pop
insb
icebp
stos
xchg
inc
mov
adc
roll
dec
jnp
call
mov
cs
sub
lods
pop
pop
lret
jbe
nop
inc
test
add
and
inc
add
sub
mov
call
ss
jo
sarl
movsb
ret
fildll
fimull
cmp
jne
jecxz
adc
and
pop
sub
jbe
add
aas
or
xor
dec
pushf
jns
outsb
je
pop
push
je
pop
lcall
ret
sub
push
push
push
pop
push
hlt
call
fstpl
loop
fwait
rol
add
aas
push
lahf
lea
pop
repnz
pop
mov
push
sbb
jl
bswap
cmp
mov
jb
xchg
je
cltd
incl
inc
jo
outsb
mov
push
mov
xchg
fstl
dec
sbb
adc
push
mov
mov
xor
mov
add
add
add
add
add
add
add
js
jp
add
add
add
add
push
add
push
add
xor
add
add
jb
add
add
add
add
add
add
add
add
imul
add
add
add
data16
add
add
add
add
xor
add
add
add
push
add
add
add
add
push
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
cmp
add
add
add
add
push
add
push
add
add
pop
add
add
add
add
xor
add
dec
add
add
add
cmp
add
add
add
add
add
add
cmp
add
add
xor
add
add
add
inc
add
add
add
add
jno
dec
add
add
add
add
add
jne
add
add
add
add
add
insb
add
add
add
add
add
add
push
add
add
add
push
inc
xor
add
add
add
push
push
add
add
add
add
add
add
add
add
jo
add
add
add
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
add
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
xchg
cmp
fsubrl
bound
scas
sbb
int
xor
lret
adc
dec
mov
test
iret
aas
in
fcoml
mov
xchg
or
mov
cmp
aas
mov
arpl
bound
lcall
xchg
cmp
into
or
lahf
inc
leave
adc
and
push
mov
rolb
test
cmc
sbb
xchg
clc
setns
jg,pn
notl
jns
or
data16
addl
push
ret
add
xlat
lret
inc
aaa
aaa
test
cmp
adc
xor
fs
add
lock
sbb
in
movsl
and
inc
mulb
dec
aad
dec
cmp
lods
sub
push
jecxz
in
cs
mov
lods
or
lods
pop
clc
xor
xchg
pop
lods
pop
call
mov
movsl
bound
cmpsl
in
mov
add
lods
mov
mov
test
test
pop
mov
push
and
call
mov
jle
push
mov
scas
ss
aam
je
in
jo
mov
pushf
loopne
out
mov
pop
inc
or
push
push
push
inc
dec
icebp
lock
and
insb
pop
ror
aad
or
inc
add
jp
shl
shrl
repnz
or
jle
ret
les
xor
jnp
lds
fistl
orb
mov
into
das
mov
push
push
call
outsb
mov
xchg
inc
push
cmpsl
or
fwait
mov
daa
pop
jns
mov
fwait
pop
inc
jae
xchg
in
lds
js
les
ss
call
push
cmp
lock
jge
jbe
and
xor
pop
repz
fwait
test
xor
add
adc
add
test
push
hlt
sbb
dec
adc
xchg
js
das
jnp
push
out
inc
xor
mov
inc
mov
or
scas
xor
push
push
add
xor
pop
xchg
pusha
test
push
mov
call
mov
dec
insb
push
outsb
inc
ss
add
sbb
scas
mov
movsb
xor
sbb
mov
push
rolb
pop
cs
in
lea
push
pop
jo
dec
mov
test
loop
dec
mov
inc
xorb
jns
cmpsb
cmp
scas
mov
add
add
fadd
pushf
add
or
ret
arpl
mov
cmp
imul
bound
add
dec
and
jl
ret
xorb
mov
and
ds
mov
roll
jne
or
pop
int3
hlt
and
fs
mov
jne
adc
fdivp
push
incl
lea
lret
cmp
fcomps
rolb
inc
lcall
or
sub
jecxz
add
enter
cld
lret
loope
mov
push
ljmp
mov
mov
or
test
out
outsl
fdivrp
ljmp
add
out
call
mov
mov
js
jb
mov
repz
sub
and
inc
xor
and
or
daa
sub
loopne
or
out
mov
mov
mov
loopne
iret
adc
fsubr
mov
mov
ret
pop
push
loop
jno
cmp
call
decl
dec
fs
sbb
insb
stc
mov
xchg
loopne
xchg
aam
std
repnz
sbb
adc
push
outsb
cmpsb
dec
outsb
repnz
aam
add
mov
cmpb
or
test
mov
pop
addr16
cmp
cli
repnz
lahf
popa
arpl
jbe
ljmp
test
loope
movzwl
mov
xchg
push
pop
lea
mov
movsb
in
call
inc
cwtl
lret
fcomps
imul
mov
jbe
ja
ret
cs
scas
shrl
subb
jae
loopne
shlb
add
in
call
xor
mov
xchg
jae
add
push
mov
je
inc
push
imul
push
iret
xchg
xlat
adc
jl
inc
fldl
pushf
jns
mov
dec
loop
testb
add
add
add
dec
data16
add
add
dec
xor
add
add
add
jbe
add
add
add
add
add
add
add
push
add
arpl
aaa
xor
add
add
add
add
dec
add
inc
add
add
add
add
add
add
add
popa
add
add
add
add
add
push
add
js
add
add
add
add
add
add
add
dec
push
add
add
inc
push
add
push
add
add
add
add
add
add
jne
add
jns
add
add
dec
add
add
add
jbe
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
push
add
push
add
add
add
add
jae
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
inc
add
pop
push
bound
add
add
add
add
add
add
jbe
push
add
add
add
add
add
jo
add
push
add
dec
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
jno
add
add
add
jns
add
cmp
add
add
add
add
add
add
add
add
jp
xor
add
bound
add
add
add
add
push
add
jne
hlt
mov
call
push
pusha
test
popa
sbb
xchg
inc
adc
aas
dec
call
jb
mov
add
std
divb
call
dec
xchg
bswap
push
repnz
pop
or
adc
mov
testl
and
add
xchg
jl
mov
cli
fs
and
xchg
add
pop
xlat
cmp
and
push
out
rolb
xchg
stc
imulb
decw
push
inc
call
xor
or
mov
xchg
int3
jmp
jo
mov
mull
add
push
xlat
iret
sub
xor
aam
fwait
jle
mov
xor
jbe
jl
sahf
fs
jge
call
dec
jne
in
mov
mov
mov
stos
pop
push
mov
enter
mov
add
adcb
xchg
mov
xchg
cmpsb
in
repz
sbb
cwtl
loopne
push
jae
ljmp
mov
mov
adc
cmp
and
add
jecxz
mov
out
xchg
pop
iret
js
lock
lock
lea
or
adc
lock
je
outsl
cmp
push
jne
cmp
cmp
jne
jmp
sub
inc
inc
fdivl
testl
scas
mov
iret
pop
jl
mov
aam
into
pop
aaa
push
dec
jnp
les
cwtl
inc
fdiv
mov
shlb
insl
leave
mov
cli
sub
bound
mov
je
mov
cmp
insl
insb
mov
add
push
mov
insb
lds
xchg
movsb
in
jo
cwtl
out
je
mov
inc
imulb
push
arpl
insb
movsb
movb
inc
and
cltd
notl
enter
ret
jg
inc
hlt
fdivrl
insb
or
daa
call
movsl
sbb
call
mov
adc
cli
les
fs
sbb
stos
ret
hlt
dec
xchg
mov
ljmp
xchg
les
leave
jl
push
and
popa
pop
lea
outsl
test
int3
mov
lahf
dec
movsl
or
loope
lahf
jbe
test
mov
and
xchg
sahf
add
js
sahf
mov
and
and
mov
fidivl
ljmp
ret
shll
push
cld
lcall
mov
cmpsl
fdivrl
cmp
xor
jbe
push
cmpb
iret
sbb
and
lcall
dec
mov
out
mov
cmpb
mov
test
frstor
pop
sub
sbb
faddl
jne
cli
pop
and
dec
cmp
aad
cmp
cmp
sub
mov
or
fmul
push
data16
vorps
cmp
mov
or
pop
mov
cmc
cmp
mov
mov
cmpsb
or
xchg
cmpsl
pop
add
notb
aaa
mov
lret
fimuls
sbb
xor
addl
enter
dec
std
insb
movb
or
cmp
adc
xor
push
mull
and
jb
jbe
or
adc
loopne
call
dec
mov
sbb
push
or
or
jecxz
and
es
aaa
push
or
mov
out
clc
mov
loop
pop
add
mov
mov
xchg
and
jge
pusha
adc
jbe
push
jbe
push
mov
xor
dec
pop
dec
mov
push
ret
pop
call
jb
sbb
xor
jne
mov
inc
test
aam
xorl
test
adc
lret
xchg
mov
cmp
test
in
test
add
sub
test
fisubrs
push
into
jg
jne
call
cmpsl
mulb
mov
adc
test
cmc
shll
hlt
dec
cmpsb
out
out
jle
cmp
push
xchg
push
into
mov
mov
enter
add
aaa
aaa
inc
pop
test
loopne
add
adc
cmpsl
roll
add
outsl
add
dec
add
pop
add
add
add
add
insb
add
add
add
add
jne
add
push
inc
add
add
add
add
add
jb
add
inc
add
add
add
add
add
add
add
inc
xor
jno
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
push
add
add
add
add
add
push
add
add
add
add
dec
jae
arpl
add
add
add
add
add
insl
inc
add
add
inc
add
add
add
xor
add
dec
add
add
pop
dec
add
insb
add
add
add
jns
add
add
add
push
add
add
add
add
add
insl
add
add
push
add
inc
add
xor
add
add
add
add
add
add
add
inc
add
add
add
add
add
jne
je
add
add
imul
add
add
dec
add
add
add
add
add
push
add
add
dec
add
jbe
add
add
add
add
jne
add
add
add
data16
add
add
add
add
add
add
inc
xor
add
add
add
add
imul
outsl
add
pop
imul
add
add
ja
add
add
pop
push
jp
add
add
add
add
add
add
add
pop
inc
add
add
add
add
add
add
add
add
add
add
add
add
in
jp
incl
xchg
inc
arpl
xlat
repz
test
mov
repnz
call
push
pop
and
mov
hlt
adc
outsl
add
clc
loop
add
rcl
sub
jmp
xchg
inc
out
shr
fisubl
cmpl
mov
dec
mov
aas
or
sahf
je,pn
gs
sub
or
add
inc
and
jb,pn
popa
xchg
je
sahf
aaa
dec
sbb
inc
loope
inc
shrl
or
and
into
shrb
jae
arpl
cmpsl
or
adc
xchg
jae,pt
fidivs
call
sbb
and
mov
xor
shll
out
jecxz
pop
ret
push
mov
mov
mov
sub
stc
xor
mov
add
add
mov
fidivs
out
mov
loopne
jmp
pop
xchg
test
or
mov
js
push
adc
xchg
inc
ljmp
pushf
pusha
movsl
xor
mov
addb
decl
lods
pusha
movsl
push
mov
pop
cs
pusha
aam
ljmp
mov
shlb
les
cwtl
ljmp
jbe
cs
mov
ljmp
jbe
cs
fcom
call
out
mul
sub
fdivrp
mov
divl
cmp
movsb
inc
dec
notb
mov
je
negb
les
bound
les
mull
idivl
aam
fsubrl
sub
lock
sub
xor
clc
rorl
cld
or
aam
lcall
ljmp
jbe
adc
cmp
sbb
inc
sbb
dec
and
pop
ljmp
jbe
xor
sub
pusha
movsl
mov
cmp
cwtl
cs
andb
dec
pusha
movsl
mov
dec
jbe
cs
outsl
mov
icebp
inc
add
sbb
jecxz
out
sbb
movsb
and
sub
xor
cmp
inc
les
les
out
insb
bound
test
and
bound
out
in
movsb
imull
ret
jo
in
les
int3
inc
std
shrb
aam
inc
ljmp
fs
movsl
lock
push
mov
push
mov
je
adc
js
sbb
and
test
xor
mov
cmp
cs
adcb
push
pusha
movsl
cwtl
pop
jbe
cs
andb
jo
movsl
test
js
lods
addb
bound
cs
fsubl
jecxz
bound
push
jbe
outsb
adc
sbb
and
sub
xor
movsb
cmp
inc
testb
pop
les
out
je
movsb
jl
test
mov
mov
push
scas
imull
hlt
ljmp
movsl
rol
jbe
rorb
loopne
fdivr
call
lock
loopne
clc
cs
or
call
in
sbb
and
clc
ljmp
pop
sub
inc
cs
dec
aam
call
or
cmpsl
add
xor
loop
int3
not
mull
pop
fldenv
bound
out
loope
loop
lods
add
testb
mov
sub
xor
movsb
cmp
inc
testb
addl
pusha
in
fs
mov
insb
mov
push
in
insb
negl
out
jo
movsb
sbb
je
and
mov
sub
xor
out
test
xor
mov
ret
push
mov
add
mov
and
outsb
inc
aam
mov
neg
aaa
sub
faddl
xor
in
cmp
call
pop
inc
ljmp
scas
pop
pop
cmp
push
ds
rolb
loopne
adc
movswl
mov
call
add
sub
inc
jo
insb
ret
lea
incb
aaa
in
imul
add
mov
addl
loopne
cld
call
mov
push
pushf
and
out
or
pop
mov
cmp
jne
pusha
push
inc
mov
sub
popl
add
jl
cmpsb
mov
or
enter
gs
inc
repnz
call
lock
call
inc
mov
dec
aad
mov
mov
mov
cmpsb
dec
adc
cmp
ja
pop
outsb
xchg
insl
mov
mov
or
push
sub
jle
les
imul
sub
dec
cltd
jle
ret
mov
out
popa
ja
sbb
pop
aam
fsub
in
sti
inc
std
push
pop
sbb
xor
mov
push
jbe
adc
lods
mov
jmp
jecxz
call
into
adc
push
push
call
push
les
call
mov
fsubrs
cltd
sbb
push
xor
test
je
mov
xor
jo
mov
inc
out
out
stc
jne
dec
lock
and
jns
icebp
dec
xchg
shll
mov
ret
cli
rcl
add
test
movsl
push
inc
xor
xor
nop
into
and
jno
or
les
stos
jae
xchg
inc
test
fdivl
dec
push
inc
push
push
push
xlat
or
bnd
cld
and
push
call
out
andb
mov
sahf
shll
lock
dec
mov
sub
mov
cmpb
mov
jne
lea
lret
push
mov
addr16
das
inc
inc
loop
mov
add
call
mov
mov
and
adc
cs
test
insb
nop
mov
jmp
popf
jecxz
fnsave
lret
push
dec
lret
jl
repz
iret
call
fsubs
adc
push
mov
loopne
sti
sbb
movsb
xchg
inc
adc
mov
push
das
jg
inc
cmpsb
xor
mov
or
xorb
jo
repz
sub
shll
jecxz
stos
lahf
clc
out
adc
push
ret
mov
or
push
xlat
push
jecxz
imul
xchg
mov
stos
aam
xor
lea
jg
fldz
lods
mov
hlt
push
adc
jb
sahf
call
mov
pop
xlat
xor
push
ret
push
and
or
xor
out
mov
jns
lods
or
sbb
data16
leave
sbb
fstps
in
push
add
push
out
mov
shl
or
dec
jne
xchg
ja
loopne
inc
sub
add
xor
jo
rol
add
cmp
icebp
call
movsb
pop
inc
ja
and
sbb
adc
push
dec
pop
push
arpl
push
pop
jg
in
dec
imul
call
or
cmp
nop
push
mov
push
inc
out
xchg
jmp
mov
xlat
les
xor
pop
testl
sbb
or
das
cmp
adcl
push
mov
insb
lret
xchg
cs
jne
ja
andb
adc
aas
mov
add
jmp
dec
aam
mov
push
adc
push
mov
jp
mov
fld
sbb
jne
xor
push
out
neg
sbb
and
inc
jne
push
sub
sub
or
dec
mov
sub
aaa
outsl
dec
addr16
jl
sub
or
decb
fwait
adc
pop
jg
sbb
dec
orb
icebp
inc
add
neg
sbb
and
add
jne
xor
pop
mov
push
pop
test
or
faddp
lcall
or
fistpl
add
lret
mov
mov
mov
jo
movsb
pusha
sar
add
fdivl
hlt
sbbb
cltd
out
testb
push
and
gs
adc
push
pusha
jmp
mov
out
adc
in
call
push
mulb
jg
out
and
loopne
xchg
pop
mov
roll
mov
lods
and
mov
dec
inc
mov
std
jbe
test
rcrl
jbe
fsubr
push
dec
dec
lods
fadds
aaa
jnp
mov
scas
out
iret
aam
dec
lret
jle
sub
xor
sub
inc
cmp
outsl
lods
add
popa
add
add
add
add
inc
jp
add
add
xor
add
popa
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
pop
add
push
add
add
add
dec
add
jno
add
push
xor
inc
add
add
add
xor
imul
add
add
push
add
add
jno
add
add
add
pop
add
add
add
add
add
outsb
add
jb
add
pop
push
bound
add
add
add
pop
add
cmp
add
xor
add
push
add
add
add
dec
add
push
add
add
add
xor
add
add
add
add
xor
add
add
inc
add
js
add
add
add
add
add
aaa
add
add
add
inc
add
add
add
xor
add
add
add
dec
inc
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
insl
add
push
add
push
add
insb
add
add
imul
inc
add
add
add
add
add
add
add
add
dec
add
add
pop
pop
add
push
add
add
add
add
add
add
inc
add
xor
imul
add
push
add
jns
add
dec
add
jae
add
add
add
bound
add
dec
add
add
add
add
add
add
mov
lods
push
outsb
and
je
add
xor
push
imul
jne
push
jl
xchg
add
sub
pop
sbb
das
and
xor
jb
test
enter
mov
jno
fwait
ret
add
mov
or
int3
fincstp
mov
pop
jbe
push
mov
mov
nop
pop
sti
mov
movsb
xor
and
or
stc
push
cmp
ret
je
ds
mov
shll
jmp
sub
pop
hlt
movsl
or
adc
jge
mov
pushf
sahf
jnp
pop
mov
je
icebp
xor
into
addr16
sub
jge
jne
ljmp
je
pop
sbb
push
mov
out
push
rclb
mov
das
cmp
inc
jo
xorb
cld
adc
movsb
cmp
shl
sub
js
or
jae
fstl
data16
add
test
jo
adc
cwtl
aam
adc
hlt
mov
xor
pop
in
cltd
idiv
pop
mov
fmul
add
pop
pop
jae
clc
jne
add
jl
hlt
adc
ss
insl
int3
sahf
xchg
data16
jae
dec
loop
stos
ret
imul
pop
sti
fdivrs
clc
call
flds
std
shl
add
inc
add
movsb
popa
pop
or
xor
scas
adc
vpcmpeqb
add
out
xor
lock
pushf
inc
jmp
movsl
fidivrl
push
lret
jmp
adc
loope
cmp
in
mov
jnp
mov
loopne
lret
mov
aam
sbb
ljmp
adc
cmp
ret
cs
into
jne
sub
imul
fsubrs
lcall
fs
outsb
das
dec
mov
cmpsl
hlt
jecxz
xchg
cld
out
es
out
xor
ds
push
ret
ljmp
pop
mov
enter
inc
mov
scas
lret
or
and
iret
inc
inc
mov
inc
stos
cmp
jb
subb
xor
std
inc
rcl
mov
xor
sbbl
loop
or
jmp
psrlq
sub
jge
jmp
lret
mov
sub
mov
jg
in
lea
shl
pop
xor
xor
cmp
sbb
and
add
mov
pusha
idivb
xorb
lret
insl
shlb
push
and
fisttps
mov
icebp
in
add
stos
mov
adc
movb
mov
out
add
inc
pop
mov
push
movsl
mov
out
fldenv
add
and
sahf
out
mov
add
mov
sub
movsl
adc
mov
mov
outsl
lock
addb
out
pop
mov
mov
mov
lahf
call
adc
fs
jl
cmpsl
mov
push
cli
add
sbb
sub
push
hlt
adc
lret
push
pop
jb
sahf
movl
mov
mov
inc
push
jg
mov
cld
imul
add
aam
and
pop
mov
lret
hlt
lods
fcmove
popa
jbe
jae
insb
mov
sahf
icebp
xchg
mov
out
mov
outsb
pop
jbe
ss
movl
jl
dec
testl
mov
mov
nop
out
sbb
xchg
out
pusha
bound
outsb
push
mull
je
lods
outsb
js
mov
xor
sbb
mov
and
jbe
push
add
push
cmpsl
ja
mov
cli
add
push
inc
fsubr
pop
popf
mov
jne
or
les
cmp
mov
sahf
cmp
mov
pop
xchg
dec
fwait
cmpsl
or
jecxz
and
push
testb
inc
loopne
push
insl
cmc
jne
es
orb
iret
mov
ds
lcall
sbb
mov
mov
enter
push
jmp
das
cwtl
insb
mov
mov
push
mov
out
gs
fsubr
adc
inc
xor
mov
insl
mov
aas
mov
mov
mov
sbb
inc
or
mov
aad
pushf
xchg
fimuls
popa
outsb
sbb
cmp
addr16
mov
int3
movsb
mov
fwait
jle
inc
mov
add
xor
jo
mov
enter
push
push
pop
sub
jmp
je
inc
aas
pop
sti
xorb
fs
sbb
push
les
mov
cltd
jnp
shrb
sbb
cwtl
sub
cmpsl
stc
loope
xchg
or
jle
push
add
jbe
int3
call
lods
outsb
push
in
imul
mov
push
or
add
or
hlt
xchg
in
add
mov
dec
sar
add
mov
aaa
pop
mov
inc
dec
add
jbe
xorl
ds
sbb
pop
lods
jmp
fwait
and
outsb
xchg
nop
pusha
mov
mov
sub
add
scas
fisubrl
lods
mov
insl
xchg
cmp
pop
and
movsb
push
push
xor
push
ret
xchg
mov
test
int3
xchg
pop
push
negl
mov
movsl
push
pop
daa
lods
mov
pop
and
xorl
add
call
sub
inc
inc
cwtl
icebp
divl
test
repnz
xchg
mov
sar
cwtl
outsb
mov
in
xchg
iret
adc
sub
mov
inc
icebp
or
inc
add
xchg
dec
repnz
push
stos
xrelease
or
ffreep
inc
js
adc
lock
call
mov
push
adc
test
jae
mov
pop
das
call
jge
nop
js
test
xchg
push
pop
sbb
adc
clc
xor
cmp
sub
fidivs
sbb
dec
test
jne
xor
pop
enter
int3
neg
inc
mov
std
jmp
inc
shrl
int
xchg
and
adc
call
testb
rclb
outsl
scas
mov
and
and
jmp
idivl
lcall
xor
add
mulb
pop
lret
or
test
js
inc
push
sbb
pop
stc
inc
mov
call
cmpsl
lods
and
mov
popf
mov
pop
xchg
inc
pop
mov
jg
cmc
sbb
stos
jl
cmp
roll
je
icebp
cmp
test
js
sbbb
or
mov
mov
outsl
jmp
push
es
sti
xchg
mov
pop
fwait
jb
les
dec
jo
mov
jmp
in
mov
jo
mov
add
jb
jnp
push
jno
mov
or
lods
fcoml
and
mov
repz
insl
jo
in
movb
adc
jae
or
cli
sub
dec
pop
xchg
adc
add
or
data16
call
pop
xchg
and
andl
out
or
cmp
test
jno
or
push
nop
test
repz
les
divb
jmp
pop
movsb
xchg
add
cmp
mov
jae
fiadds
mov
lcall
push
xchg
mov
inc
sbb
mov
lret
mov
repnz
mov
lods
push
fisttpl
stos
mov
lds
int3
out
xor
inc
dec
or
xchg
jle
je
cmp
jecxz
or
and
pushl
ret
rorl
or
mov
or
fsubrl
inc
or
or
lret
ja
je
gs
shll
dec
xchg
adc
sbb
pop
fnstenv
pop
aaa
cmc
pop
mov
sbb
orl
pusha
call
jbe
xchg
movhps
hlt
shll
jb
dec
inc
imul
add
push
test
insb
pop
mov
imul
add
jo
mov
je
add
lea
push
jp
shll
jb
jmp
push
rcrb
inc
sbb
or
shlb
lods
clc
filds
je
lods
adc
imul
mov
jbe
jecxz
lret
rolb
cmp
jne
or
shrb
call
in
inc
out
adc
shlb
jb
mov
adc
inc
add
sbb
iret
call
push
addr16
movb
andb
sbb
xor
xorl
mov
mov
xor
pop
out
push
mov
pushf
rcrb
lds
add
cwtl
in
lea
jmp
push
push
test
inc
in
lcall
mov
popl
cli
push
arpl
jmp
mov
lods
popf
loop
mov
pop
mov
fiaddl
in
hlt
incl
mov
leave
sub
idivb
mov
pop
push
in
movsl
xor
mov
leave
aas
notl
nop
leave
decb
sub
xorb
and
jbe
and
loop
mov
push
mov
dec
add
xchg
jae
dec
arpl
cs
and
test
adc
cmp
mov
fs
call
xor
fisubrs
gs
mov
mov
or
cli
lds
xchg
data16
add
insb
mov
outsb
inc
push
mov
add
pop
bound
insl
iret
lahf
lds
imul
xchg
sub
inc
idiv
jg
sub
imul
orb
std
test
xor
add
rcll
xchg
inc
test
lcall
ret
sbb
push
sbb
mov
fsubrl
insl
inc
insb
addr16
mov
mov
mov
or
mov
push
rcrb
xchg
xor
cs
aad
ret
shrl
pxor
rcrb
leave
xchg
inc
repz
xor
add
jge
adc
dec
adc
xchg
push
mov
add
fsub
jle
adc
xchg
popa
sub
sub
jmp
mov
sbb
ss
outsl
cmp
mov
pusha
dec
insl
mov
mul
push
sbb
stos
fisttpl
push
loop
adc
ds
sub
call
mov
push
sub
out
in
jecxz
out
icebp
add
mov
jmp
dec
ret
pop
pushf
lea
xor
sub
cs
call
cmp
pop
je
xchg
in
sarb
push
mov
jns
mov
aam
sub
push
push
xor
push
repnz
adc
test
mov
inc
xchg
in
mov
jne
stos
add
and
outsb
addr16
jne
dec
jae
sarl
aaa
mov
cmp
rorb
sub
mov
fnstsw
cmp
je
mov
pop
je
imul
and
int
mov
je
mov
adc
sbb
mov
jbe
cmc
subl
and
dec
push
rorb
adc
jno
lods
jne
xor
jmp
inc
xor
adc
ljmp
sub
jle
ret
pop
add
or
inc
scas
mov
das
je
gs
xchg
sbb
jle
push
cld
outsl
mov
lcall
jb
jmp
sub
fnstcw
shrl
add
xor
sti
or
adcl
shlb
cs
inc
mov
lea
test
lock
jnp
inc
arpl
xor
add
push
iret
and
pop
hlt
push
in
insl
xchg
sub
mov
xchg
call
adc
stos
dec
lock
add
and
adc
out
jnp
xor
or
mov
rcrb
fiaddl
int
jp
ja
dec
fisubs
inc
ljmp
push
push
dec
pop
in
test
repz
cltd
bound
aas
add
cmp
movsl
fsubl
or
loop
cwtl
call
inc
and
inc
clc
lds
add
sbb
mov
insb
loop
pusha
mov
test
and
cmpl
lcall
lahf
movsb
fildl
or
or
sub
cltd
les
push
pop
mov
fwait
hlt
or
cmp
jbe
aas
cmp
outsb
andb
insl
jbe
push
adc
ja
outsb
sbbb
pop
je
gs
scas
stos
inc
in
insb
mull
push
jne
shr
out
dec
mov
push
add
int
push
bswap
fimuls
dec
les
jp
pushf
add
add
add
add
icebp
cmpsb
stos
fcmove
dec
sbb
add
jge
jle
pop
or
jb
lcall
xor
call
and
push
jle
push
popa
popf
push
jp
add
jns
and
add
jo
je
xor
int3
xchg
push
inc
push
push
cmp
stos
push
hlt
test
xor
lea
push
pusha
and
push
pushf
sbb
jae
lcall
mov
add
and
in
pop
jb
adc
cmp
sti
jb
sti
js
add
sub
cmp
xchg
rclb
cld
call
cmp
xchg
cli
xchg
fs
int3
dec
mov
clc
xchg
jno,pt
popa
jmp
push
cmpsl
ret
mov
mov
icebp
lcall
inc
pop
fadds
and
jo
addr16
iret
lret
xchg
sbb
xlat
mov
call
pop
cmp
hlt
les
aas
lods
cmpsl
xchg
pop
pop
xchg
mov
xor
mov
loop
loope
pop
mov
cmp
jle
push
ss
jnp
leave
mov
loopne
clc
rcrb
jo
iret
cmp
cmp
divb
push
add
outsb
inc
outsl
rcll
ret
and
not
push
push
hlt
or
jnp
inc
add
je
xor
js
push
pop
push
shr
loope
pop
or
repz
insb
inc
mov
into
mov
mov
pop
push
loop
call
adc
mov
add
add
pop
inc
bound
add
cmpb
and
pop
pusha
push
jo
add
dec
insl
out
imul
insb
xchg
and
inc
fisubs
into
cmpl
push
and
or
add
test
mov
add
adc
add
rcr
or
xchg
das
rcrb
shll
push
inc
push
scas
bswap
jl
or
icebp
jecxz
and
rorb
mov
movb
cs
aas
aas
mov
iret
shr
enter
inc
xor
mov
cmp
subl
data16
xchg
lea
std
dec
mov
jmp
icebp
ret
pop
xchg
ror
not
inc
and
out
lds
lret
dec
shlb
push
fcomps
mull
and
pop
mov
sti
bswap
les
or
in
pop
scas
testl
out
daa
add
mov
lods
scas
sar
jp
pop
jle
mov
lea
inc
sti
movsb
loop
xor
clc
fucomi
flds
stc
sbb
sbb
mov
mov
inc
pusha
mov
mov
push
out
fcmovnb
dec
ljmp
scas
rcll
je
push
loopne
lea
mov
out
pop
outsl
jae
push
or
mov
jl
adc
ret
lcall
outsl
in
rclb
adc
or
xrelease
xor
or
hlt
not
stos
sub
les
pop
mov
scas
cmpsb
sub
cmp
dec
pop
add
fld
jle
outsb
cmp
and
imul
lock
in
outsl
and
mov
cli
popl
mov
pop
aaa
push
xchg
jne
inc
sbb
inc
mov
push
fisubl
jb
push
sbb
repnz
lret
mov
addb
push
add
jne
jns
mov
rolb
pop
or
loop
add
call
aas
mov
pop
pop
clc
daa
inc
das
mov
fsub
push
push
pop
pop
orb
adc
or
icebp
insb
sbb
sbb
jge
into
enter
xlat
or
mov
jmp
rorb
fs
xor
mov
pusha
mov
les
mov
pop
adc
fs
fnstenv
loope
fs
add
movsb
adc
push
mov
scas
inc
fsubs
push
repnz
add
divb
sub
pusha
out
sub
push
repnz
inc
insb
jecxz
and
divl
mov
movsl
aaa
jo
lcall
enter
notl
stc
xor
push
les
icebp
insb
push
cmpsl
add
add
jl
lahf
sub
rclb
out
loope
ficoml
je
adc
fisubrl
shl
add
pop
sti
sub
jns
mov
call
movsl
jo
cmpsl
negl
int3
and
ja
pop
sub
out
rclb
aad
out
cmpsb
jmp
pop
xor
dec
add
jecxz
les
fimull
dec
insl
or
xchg
scas
bound
jecxz,pn
add
je
mov
mov
jae
lds
jne
stos
xchg
repnz
cs
xor
add
adc
sbb
setns
sbbl
lahf
ret
insb
out
je
mov
inc
pop
sub
pop
mov
xor
outsl
inc
inc
add
jg
insl
adc
sti
and
mov
loopne
stos
push
repnz
adc
and
mov
push
mov
jp
adc
push
and
push
nop
xchg
push
das
or
daa
or
cmpsb
adc
push
mov
data16
cmp
ret
pop
fdivl
push
sub
call
pop
leave
movsb
les
iret
jb
test
xor
leave
lods
fs
dec
lcall
cmp
add
sbb
lahf
stc
fiadds
add
pop
cmpsl
inc
int3
aas
sbb
lea
mov
test
cmp
jb
hlt
or
add
adc
fwait
adc
std
sbb
xor
push
cmp
mov
adc
dec
nop
roll
scas
not
mov
cwtl
test
add
mov
call
jns
scas
push
pop
mov
and
lea
fisttps
jns
mov
sbb
leave
and
ret
jb
xchg
add
jecxz
sbb
dec
or
cld
int3
pusha
inc
sbb
adc
ret
and
addps
cmp
inc
decl
dec
sub
or
mov
movb
push
add
jnp
test
xor
int3
lds
xor
mov
int
jmp
aas
test
jb
mov
ja
in
jne
lcall
pushf
movsb
in
mov
mov
and
xchg
and
test
xor
mov
clc
cltd
je
mov
push
lock
dec
sbb
addr16
mov
xor
pop
lcall
sub
leave
pop
xchg
int
push
daa
data16
loopne
repz
lcall
lret
inc
lods
mov
mov
inc
out
test
push
cmp
out
call
idivb
xchg
pop
push
rolb
xchg
push
xchg
pop
in
pop
and
call
inc
mov
ja
mov
outsb
nop
or
cmp
aam
pusha
test
inc
add
cmp
pop
push
and
sbb
jl
jnp
inc
dec
adc
push
jecxz
mov
sub
call
and
sbb
lret
in
add
lret
iret
fdiv
cmc
cmp
and
mov
inc
sub
or
jno
cmp
cwtl
or
jle
loopne
add
add
mov
movsb
js
repnz
in
mov
call
lret
xor
call
setp
pop
movsb
int3
or
jbe
xor
loopne
shrd
cmp
cmp
xor
lea
xor
add
loopne
dec
dec
loop
mov
div
adc
adc
inc
dec
sub
idivl
pop
sbb
add
sub
inc
repnz
mov
jae
add
or
fbld
inc
lods
adcb
add
int
out
and
cmp
ret
cmp
pop
xchg
imul
adc
cmp
xor
xchg
sbb
lds
jo
loope
sti
xlat
inc
mov
mov
xor
push
inc
out
cwtl
outsb
movsb
mov
adc
sti
xchg
fcoml
ja
lods
adc
mov
mov
movsl
cmp
push
es
adc
bound
test
jnp
std
jb
jge
and
cli
in
test
fwait
or
xor
testb
mov
mov
mov
jg
pusha
repz
ret
mov
dec
mov
mov
stos
push
add
inc
sub
push
xchg
jnp
cmpsl
add
push
add
add
push
add
insl
add
add
add
add
add
inc
add
add
add
add
add
insb
add
add
add
add
add
add
add
data16
add
add
add
add
js
add
add
add
add
add
push
add
add
data16
add
xor
dec
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
imul
add
add
add
xor
add
dec
add
add
add
add
add
add
add
add
add
push
jbe
add
ja
inc
add
add
xor
add
add
add
push
add
add
dec
add
dec
add
add
add
jae
add
add
add
bound
add
add
add
push
add
add
add
add
ja
add
add
add
imul
add
imul
add
add
dec
add
xor
add
imul
push
add
add
add
add
add
jns
add
xor
add
add
add
js
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
add
add
je
add
push
inc
add
add
add
add
add
push
je
add
add
add
add
inc
pop
add
add
push
xor
add
pop
dec
add
add
add
add
insl
add
add
add
add
add
add
popa
add
jne
add
bound
add
inc
add
insb
add
add
inc
mov
mov
int
mov
jne
xor
inc
add
jo
sub
mov
outsb
sbb
mov
fimuls
arpl
pushf
adc
test
sub
inc
sti
lcall
pop
lret
jle
test
mov
push
ret
add
out
arpl
insl
xchg
pop
orb
pop
je
sbb
dec
inc
pop
mov
xor
stos
stc
loope
into
mov
and
cmp
inc
clc
jno
cmp
xchg
les
jbe
pop
ljmp
xor
lret
jb
sbb
xor
test
dec
hlt
lods
fdivrl
cmc
cmp
lret
ja
mov
mov
lea
adc
xchg
pop
push
xchg
pop
and
mov
stos
adc
inc
stos
sbb
fnstsw
int3
xor
arpl
test
lock
mov
mov
add
ret
xor
mov
mov
push
mov
jb
xorl
scas
ss
ret
lret
cwtl
mov
push
insb
popf
xchg
pop
jo
xorl
xlat
mov
enter
ffreep
and
cmp
mov
rcll
sbb
rcrl
lock
in
and
dec
or
sti
out
jb
mov
inc
mov
push
push
adc
xchg
lea
int3
push
mov
dec
in
lret
imull
sub
js
add
mov
push
lock
mov
adc
jp
das
pop
adc
push
sbb
jbe
ret
cld
xchg
call
xchg
cmp
divb
in
repnz
scas
in
mov
cs
sub
outsl
cli
mov
icebp
sub
jle
les
push
cwtl
fisubrs
dec
inc
int3
mov
xchg
adc
xchg
dec
lahf
leave
mov
lock
scas
adc
ja
in
sbb
push
data16
dec
addr16
pop
int
xchg
xchg
push
ljmp
test
bound
lock
jo
lret
enter
mov
roll
sub
jnp
cmp
pop
lcall
test
lods
mov
stos
add
ficomps
dec
adc
mov
cmpsb
hlt
sub
mov
add
test
call
adc
test
mulb
mov
shlb
push
mov
movsl
xor
sub
pop
mov
aaa
lahf
mov
mov
jne
call
or
sub
fdivs
push
push
les
in
adc
xchg
out
push
sti
or
xchg
adc
xchg
call
dec
mov
cmp
sbb
pusha
xchg
leave
in
ds
loop
in
rcrb
pop
test
ret
aas
notb
imul
enter
pop
jp
mov
push
pop
pushf
out
push
jb
gs
scas
sub
data16
sub
or
or
jns
mov
ret
jge
mulb
mov
out
aam
pop
dec
pop
xor
lret
or
mov
or
enter
and
xchg
mov
sarl
cmp
inc
inc
mov
cmc
or
dec
outsb
je
sub
arpl
rorl
mov
addr16
out
jl
loop
jp
scas
mov
cli
data16
jg
xor
cwtl
adc
jle
pushf
rclb
repnz
sbb
loop
lcall
cmpsb
jne
adc
out
mov
xchg
loop
jp
test
dec
test
jb
lret
hlt
test
rolb
lret
or
mov
fsubs
fcomp
xchg
mov
xor
xor
lret
int
cli
lea
sub
sub
push
or
mov
stc
mov
jo
rcrl
or
rcl
outsb
pop
add
xor
mov
xchg
movsb
add
jne
dec
ja
push
xchg
cmpsl
adc
add
insb
into
imul
push
push
or
je
dec
leave
jae
add
dec
scas
es
dec
jmp
adc
je
sets
jp
mul
pop
cmp
cli
lods
mov
cs
mov
lret
inc
aam
add
sbb
add
out
int
mov
adc
scas
lock
aaa
mov
or
lock
out
test
xor
out
or
popa
lret
adc
or
lret
inc
jno
out
shrb
dec
mov
in
ss
popf
xor
dec
fs
arpl
add
push
cs
stc
jmp
subb
push
call
push
xor
jmp
and
jns
test
cmp
add
scas
jbe
pusha
imul
push
xlat
loopne
hlt
jmp
mov
testl
xor
jno
push
fs
cmp
stos
push
adc
adc
inc
mov
jmp
adc
faddp
adc
pushf
ficompl
mov
dec
pusha
jge
in
addr16
in
xchg
stos
leave
movlps
dec
cmp
cmp
xorl
cmc
mov
pop
negl
cmp
xchg
push
pop
inc
inc
or
in
fdiv
test
jnp
cmp
repz
das
in
cmp
jne
gs
cmpl
dec
rorl
pusha
sbb
bswap
ds
clc
and
push
xor
ds
xor
mov
sbb
idivl
iret
int
push
fsubrl
jmp
aam
pop
in
mov
call
je
out
stos
dec
shl
cmpsl
addr16
lret
inc
sub
jmp
xor
and
add
flds
mov
lock
loop
icebp
jle
mov
inc
jmp
mov
lea
mov
repz
jb
xor
pop
test
cmp
flds
divl
push
inc
mov
lea
dec
out
cli
repnz
arpl
cmp
pop
jge
jne
dec
pop
adc
mov
inc
jmp
sub
jb
je
lock
clc
mov
ret
movl
push
cmp
mov
push
push
mov
inc
pop
out
inc
add
and
cmp
je
or
xchg
call
push
aas
daa
adc
mov
inc
and
pop
or
inc
idivb
fcoms
movsb
outsl
arpl
outsb
adc
addr16
iret
ja
mov
pop
loope
inc
call
xor
pop
aam
inc
push
movsb
jae
leave
je
je
incl
les
mov
jle
orl
sbb
fwait
cmpsl
ja
xor
movsl
jmp
cmp
repz
test
icebp
mov
jle
jge
ret
loop
mov
or
shll
movsb
cmpsl
js
hlt
sbb
rclb
inc
push
cmpsb
repz
mov
fstl
sbb
jbe
mov
scas
test
movl
ljmp
cmpsl
mov
lods
mov
repz
sbb
jbe
pop
inc
movsb
enter
cmp
xor
mov
bound
je
push
in
and
imul
jb
scas
hlt
cmpsb
loop
add
add
insb
rcrl
inc
stos
loop
pop
dec
bound
inc
rorb
mov
mov
xchg
mov
cmp
jbe
dec
and
adc
lahf
loope
inc
sub
add
pusha
inc
mov
in
mov
mov
jmp
imul
jb
adc
mov
xor
jge
jmp
or
cmp
fwait
daa
pop
ret
es
imul
in
ljmp
imul
repnz
hlt
sub
and
orb
inc
rcl
js
mov
jmp
cmp
add
add
enter
push
mov
dec
and
scas
dec
shr
xchg
mov
std
pusha
mov
sbb
mov
xor
sbb
mov
inc
jge
cwtl
add
xchg
push
icebp
aam
push
mov
pop
je
dec
into
pop
test
sub
outsl
ret
scas
imulb
mov
movsb
in
mov
dec
ljmp
inc
sbb
stos
das
insl
sbb
xchg
xor
shlb
pop
stos
cmc
pop
int
sbb
inc
movsl
ret
inc
dec
shl
sbb
cwtl
js
jge
add
cmp
jge
ficomps
inc
fs
insl
call
mov
jo
cmpsl
mov
cmc
aam
sbb
les
dec
cltd
jl
leave
add
les
aam
add
aaa
stc
push
scas
imulb
mov
into
xor
test
outsl
loope
adc
incb
jl
jle
sahf
inc
xchg
add
push
insl
pop
add
mov
ret
in
xchg
or
and
out
push
add
jmp
pusha
fwait
loop
or
jo
addr16
test
sub
icebp
pop
add
cmpsb
cmp
xchg
out
sti
inc
arpl
cltd
push
gs
xchg
scas
popa
imul
aad
in
or
inc
jne
add
add
pop
jbe
and
aam
in
push
hlt
enter
fs
inc
imul
loopne
pop
incl
in
rcll
scas
repz
push
jbe
xchg
bound
mov
adc
arpl
cmpsb
outsl
loope
pop
bound
fadds
dec
insl
xor
xlat
js
dec
cli
or
add
nop
out
add
xor
es
and
pop
pop
bound
jo
int3
pop
clc
bound
add
mov
and
cmpsb
cwtl
push
fsts
movsb
sbbb
mov
push
loopne
testl
ja
cli
xchg
cmc
js
in
lcall
arpl
out
faddp
mov
jne
adcb
sahf
inc
movsl
or
or
out
add
sbb
ret
push
add
push
add
adc
xchg
in
scas
jbe
fdivs
lock
dec
jo
add
adc
pusha
sti
jns
ja
andb
xor
mov
xchg
mov
insb
fiaddl
std
aas
jl
add
and
sbb
pop
jb
push
mov
out
or
push
push
jo
xor
mov
jae
mov
aaa
push
ret
pop
and
add
mov
xchg
orl
sub
cmp
jmp
pop
mov
push
mov
cmp
inc
cmp
add
or
push
xchg
sti
stc
sub
jle
test
inc
adc
es
std
in
xlat
push
mov
popf
lods
push
out
gs
hlt
out
mov
out
sub
stos
xor
sbb
cmp
out
stos
xor
sub
hlt
aam
push
stos
in
popa
ja
mov
fiadds
fbstp
loope
add
sub
jmp
loop
cld
xchg
cmc
mov
out
hlt
inc
sbb
add
mov
inc
stc
bound
lea
addr16
mov
cmp
or
ljmp
add
sti
push
xor
scas
xchg
sahf
xchg
xchg
jp
xchg
add
sbb
adc
in
dec
push
dec
adcb
faddp
jns
roll
and
gs
shrl
add
jb
aad
xor
push
cli
push
mov
fidivrs
cmp
lahf
test
and
loopne
cmp
xchg
cmc
add
fcompl
ret
or
cs
lock
icebp
repz
mov
ljmp
xchg
push
leave
xchg
movsl
sbb
jg
gs
add
dec
and
and
add
aas
stos
xchg
xor
adc
aam
ljmp
add
inc
insb
dec
ret
xor
roll
out
and
sub
add
xchg
jecxz
push
dec
loope
int3
negb
data16
rol
xor
into
ss
in
push
xor
addr16
movsl
add
and
lods
dec
shrb
shr
add
xor
inc
mov
xchg
jbe
cli
mov
fisttpl
jge
loope
mov
or
cmpsb
add
sti
push
inc
add
arpl
mov
fadds
out
push
add
clc
es
repz
jecxz
out
push
adc
out
shlb
test
mov
cmp
aas
mov
cli
repz
pop
or
xchg
es
addr16
pop
ss
fyl2x
stos
mov
push
divb
int
out
jo
fisubrs
loope
in
daa
adc
push
xchg
movsb
out
dec
dec
pop
add
scas
xor
pop
xchg
data16
or
aam
add
std
dec
popa
lcall
pop
dec
iret
xchg
in
sub
insb
divl
out
mov
hlt
push
ror
sbb
mov
imul
pop
xchg
xor
inc
cld
out
add
sbb
add
add
insb
push
add
push
aaa
add
xor
add
add
add
add
add
dec
add
jo
add
dec
add
add
add
add
push
add
insb
add
add
add
add
add
add
inc
add
add
add
add
add
outsb
add
add
imul
add
add
popa
add
add
outsl
add
add
add
push
add
add
inc
arpl
xor
add
bound
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
xor
add
add
imul
add
add
add
popa
add
add
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
dec
dec
add
add
add
cmp
add
add
pop
add
add
add
je
add
push
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
je
add
add
imul
add
add
add
outsb
data16
bound
add
add
add
add
add
aaa
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
xor
add
add
add
add
add
jbe
add
arpl
dec
add
add
add
add
add
add
dec
add
add
add
add
add
cld
icebp
jle
fsubrl
sub
dec
inc
shrd
dec
pop
inc
outsl
dec
mov
pop
inc
jno
push
loop
push
xor
out
add
je
addr16
imul
outsb
add
loopne
inc
imul
fsubl
popf
mov
lods
jns
xlat
mov
pop
push
fs
ret
fistl
inc
jno
outsb
cs
jno
dec
sti
inc
jmp
jb
sub
in
push
test
inc
out
popa
dec
sub
dec
fsub
pop
jns
sbb
fidivs
inc
incl
dec
inc
les
clc
sub
dec
mov
mov
jns
mov
cwtl
insl
inc
push
inc
movsb
inc
mov
cli
repnz
out
dec
inc
push
dec
sub
test
push
xor
mov
push
ljmp
sbb
jns
jo
pop
push
push
popa
and
fdivrp
mulb
jae
jbe
mov
leave
xchg
loop
add
inc
jbe
inc
insb
jo
ljmp
pop
in
repz
rcrb
dec
lods
scas
lcall
lock
jne
fldcw
shll
out
andl
repnz
mov
daa
in
pop
call
push
dec
xchg
dec
dec
mov
fmulp
in
pop
gs
or
ret
insb
jb
dec
jb
jns
jmp
jns
mov
int3
nop
dec
cmp
inc
loop
insl
jnp
or
mov
into
ret
jmp
repnz
sahf
jno
lods
inc
push
insl
inc
ljmp
xchg
gs
divb
push
mov
mov
push
push
shrl
push
cmp
pop
ret
data16
jo
inc
fs
push
cmpsb
rclb
and
add
testb
push
rdtsc
je
xchg
push
pop
and
outsl
and
push
sub
rcrl
sbb
jnp
popf
lcall
repz
jmp
popa
arpl
jl
pop
das
cmpsl
fidivs
cwtl
inc
mov
addr16
mov
sbb
jnp
sar
jmp
push
and
cmp
subb
jl
jo
lea
push
iret
div
callw
movsb
stos
xorb
inc
jg
mov
mov
insb
data16
stc
push
push
xor
jle
jg
push
rorb
arpl
xchg
mov
mov
push
jne
jo
push
cmp
lret
leave
in
inc
jns
stc
push
out
shrb
jmp
int3
add
xchg
adc
icebp
mov
pop
xchg
mov
sbb
or
ret
inc
add
enter
xor
movsl
xchg
popa
addr16
adc
ja
out
xor
dec
pop
cmp
aad
cmp
std
sub
fldcw
push
es
outsl
nop
hlt
int
or
loop
scas
test
inc
aad
sahf
mov
testb
out
push
dec
loope
push
push
push
push
mov
aaa
ss
xor
lahf
cmp
ljmp
out
add
push
loop
or
jle
dec
divb
sbb
roll
jle
jno,pn
jecxz
aas
fidivrs
or
push
sbb
mov
gs
sub
sbb
add
aaa
gs
mov
cmp
jmp
sbbb
testb
aad
repz
push
mov
cmp
js
icebp
insb
and
frstpm(287
cmp
inc
or
arpl
fs
cmp
push
push
inc
sub
je
test
popf
mov
adc
lods
cmp
inc
sbb
ljmp
outsb
adc
jnp
sub
into
jnp
sub
outsl
adc
data16
jb
cmp
ss
xor
outsb
xlat
imul
std
and
in
test
je
sub
in
mov
pop
inc
sub
cmp
cmpsb
pop
cmp
fisubrs
xchg
push
inc
inc
loop
loope
icebp
ja
daa
xor
xor
ds
mov
outsb
pop
into
icebp
push
mov
mov
jge
mov
ljmp
ds
sub
jbe
insb
sub
call
sbb
sub
dec
aaa
mov
and
fcomp
inc
push
popa
cwtl
fcompl
dec
and
fnstenv
test
fisubrl
rol
lret
add
mov
arpl
add
mov
dec
out
rcrl
adc
scas
leave
outsl
mov
hlt
ds
je
jno
sub
jno,pn
daa
cmp
mov
jo
jbe
add
js
mov
mov
lcall
add
or
or
loope
lea
stos
mov
dec
in
insb
cmp
and
mov
push
andl
push
pop
hlt
addr16
packssdw
loope
sub
movsb
xlat
test
push
adc
jl
push
fsubl
jo
divb
dec
call
daa
push
or
push
mov
sbb
mov
or
mov
movsb
sub
add
mov
sub
arpl
daa
mov
lods
jle
dec
add
or
cmp
ds
pushf
mov
fildll
cmp
call
mov
je
or
outsb
sbb
mov
or
push
sub
inc
xchg
gs
mov
jb
cmp
sbb
cmc
je
mov
stos
mov
test
in
or
and
jo
or
dec
repz
shr
pop
mov
test
jo
lret
and
jecxz
loope
inc
pop
add
rorb
sahf
jmp
mov
addr16
xorl
leave
pop
test
xchg
test
in
mov
lret
jmp
popa
loopne
dec
inc
cmpsl
mov
mov
movsb
orl
popf
jne
cltd
push
dec
int3
or
add
mov
push
add
pop
rcrl
pop
sbb
adc
jns
fs
xlat
in
sub
ret
inc
xchg
mov
test
sbb
aam
ret
shrb
pop
pop
mov
lahf
mov
stos
shrb
and
cmp
mov
push
shlb
or
nop
sub
inc
add
xor
xchg
xchg
xchg
xchg
movsl
cwtl
mov
push
outsb
mov
dec
lahf
mov
fadds
xor
sbb
shll
lahf
lahf
movsb
call
add
lret
pop
or
mov
cltd
insb
test
jae
mov
pop
mov
icebp
mov
outsb
jo
enter
adc
ret
in
dec
and
push
push
dec
mov
out
pop
bound
push
mov
inc
pop
outsl
inc
xor
jno
lock
mov
pop
mov
push
imul
ret
mov
out
push
jo
mov
mov
ja
push
test
incb
cmp
divb
bound
out
shr
push
mov
insl
shlb
sub
jmp
sub
lcall
jbe
mov
add
mov
scas
fstpt
das
fists
fldcw
ss
push
dec
jl
sbb
popf
sub
or
enter
pop
call
jmp
mov
sti
rclb
lret
shll
inc
sub
movsl
jl
dec
aaa
shrb
add
mov
push
xchg
ret
in
cmpl
mov
pushf
mov
scas
mov
and
out
int
adc
push
inc
lock
das
pop
mov
mov
xchg
nop
mov
and
lods
test
jbe
pop
insb
sub
dec
imul
xlat
jecxz
adc
push
sti
pop
jp
in
pop
fsubr
jbe
xchg
dec
jo
add
mov
inc
or
std
mov
outsb
mov
sub
mov
enter
call
fs
es
test
aaa
aam
inc
mov
icebp
std
pop
jo
fadds
jg
sbb
lock
push
and
lret
sub
fwait
mov
mov
fdivrs
testb
sbb
jo
mov
push
insb
daa
jle
mov
push
aam
insb
xor
lahf
sub
in
fcomps
xor
mov
push
test
test
lock
sarl
ret
push
out
int3
inc
adc
sub
popf
jns
call
mov
dec
push
mov
jecxz
add
shrl
dec
mov
mov
push
loop
mov
hlt
aam
popa
sbb
jbe
xorl
dec
into
lds
pop
dec
call
dec
or
add
cmp
je
clc
incl
cmp
cltd
fnstsw
or
adcb
mov
enter
divl
rorb
aam
ret
js
jbe
imul
les
jmp
cmpsb
xchg
push
push
adc
inc
loop
mov
mov
or
push
lcall
pusha
add
adc
mov
cwtl
testb
cmpb
ljmpw
lret
loopne
inc
call
call
test
cmp
xchg
cmpsb
adc
into
and
inc
add
pop
fs
cmp
rolb
xchg
or
in
out
add
pop
pop
jmp
sarb
jbe
setne
mov
cmpsl
push
dec
movsb
gs
xchg
ret
sbb
add
pop
inc
lods
xor
nop
mov
add
push
int3
adc
dec
and
ret
dec
dec
mov
sub
das
out
push
movsl
icebp
add
sti
sbb
mov
int3
inc
mov
and
xor
inc
in
dec
cld
decl
lock
mov
xlat
push
push
add
data16
mov
sub
or
lock
jg
in
xchg
jne
cmpsl
mov
stos
mov
popf
xor
and
fs
cmp
ljmp
test
shl
sub
divb
loopne
push
push
pop
fisubs
xor
ja
cmp
mov
test
push
and
xor
jecxz
mov
icebp
stc
rolb
outsl
push
add
and
sbb
xlat
in
jbe
scas
pop
cmp
mov
add
adc
stos
cmp
nop
inc
or
movsb
pop
push
fcoml
inc
nop
xor
dec
cmpsl
push
pop
pusha
xchg
in
push
mov
jl
pop
mov
dec
int3
sete
jbe
inc
inc
nop
push
movsl
adc
pop
fiadds
fucom
push
rol
ret
adc
iret
enter
fisubl
in
aaa
mov
shrb
data16
and
outsl
popf
in
negl
lds
sub
mov
cmp
pop
dec
push
mov
or
push
mov
push
stos
sti
xor
sbb
mov
and
push
pop
jle
xor
jg
inc
jnp
rolb
mov
hlt
push
or
loop
aam
sbbb
mov
out
mov
mov
aam
jb
push
cmp
addr16
in
sbb
mov
cld
ret
fcomp
dec
mov
inc
movsb
movsl
test
stos
subb
addr16
cld
lds
add
out
outsl
mov
add
mov
es
sub
inc
loop
outsl
aam
pop
lods
add
push
call
jnp
into
pop
lret
je
data16
mov
pop
fsubl
scas
sbb
jg
adc
cld
jno
cmp
push
mov
repz
mov
imul
frstor
pusha
es
and
loope
dec
hlt
xor
shrl
inc
inc
popf
loopne
push
aad
adc
inc
xor
inc
inc
adc
mov
testb
pusha
xchg
sub
jge
lret
or
shl
inc
hlt
push
fcom
xor
nop
popa
sahf
inc
shll
push
sub
fildll
les
lahf
fcom
nop
dec
mov
loop
and
mov
pop
xchg
add
jo
adc
jmp
lods
sub
out
xorb
inc
cmp
insb
and
xchg
push
notb
outsb
push
pushf
sub
lods
xchg
cmc
ror
dec
fsin
mov
push
jbe
movsb
fs
adc
rclb
push
out
or
jno
sbb
je
aaa
ja
mov
je
mov
loop
add
adc
hlt
add
ret
cld
pop
pop
enter
mov
bound
push
jecxz
sbbb
in
add
pop
jmp
or
imul
test
in
test
repnz
jne
push
jmp
or
enter
in
popa
inc
lds
dec
out
xchg
xor
add
push
sti
jg
add
xor
std
jg
add
idiv
add
fcomps
inc
adc
add
add
add
add
add
xor
add
add
add
inc
add
push
add
add
aaa
add
add
xor
add
push
add
dec
add
add
add
add
add
add
add
add
js
add
inc
add
jo
add
add
add
add
add
xor
add
add
add
push
cmp
cmp
dec
add
add
add
add
add
add
add
add
add
add
jns
add
add
add
add
dec
add
add
push
add
add
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
inc
add
add
js
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
xor
dec
add
cmp
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
inc
add
cmp
add
add
inc
add
popa
add
add
add
add
add
pop
add
add
add
add
arpl
add
add
add
add
add
add
dec
jae
add
add
add
add
xor
add
inc
add
add
add
add
add
add
inc
add
add
add
cmp
add
add
inc
add
add
add
inc
add
add
add
push
inc
insl
add
push
insl
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
outsb
popf
mov
jmp
dec
xlat
adc
adcl
mov
cmp
into
xchg
jmp
adc
rcl
fs
out
or
nop
addl
or
mov
add
mov
mov
adc
jbe
and
inc
mov
jno
insb
mov
lea
ror
pusha
mov
popa
inc
xor
adc
jge
lods
or
jnp
jne
pop
mov
mov
dec
ljmp
insl
pushf
sarl
inc
xor
or
jne
pop
xchg
jmp
mov
jge
fldcw
push
xor
mov
mov
fsubs
push
and
nop
mov
mov
mov
pop
push
je
add
dec
push
pop
jae
sub
push
daa
loopne
sahf
jne
push
outsl
in
popa
mov
fsubrl
rolb
push
mov
adc
push
dec
xlat
jp
mov
jl
outsb
sbb
out
and
mov
xor
shll
aas
lcall
aas
and
cmp
jae
cmp
mov
insl
subb
test
jge
xchg
in
xor
add
and
xchg
scas
cmp
pop
ljmp
or
je
sub
push
out
sub
ret
jge
ss
mov
in
addl
paddsb
enter
lods
add
fistl
movsb
add
outsl
sbb
mov
mov
pop
push
or
xchg
fdivrp
test
jmp
out
call
pop
call
push
hlt
aaa
pop
subb
out
call
mov
test
rorb
mov
pop
mov
and
je
aam
mov
xchg
inc
sbb
xor
or
ss
jb
sahf
fnstsw
xchg
xchg
jo
mov
xlat
in
fwait
mov
or
test
mov
cltd
add
iret
ret
push
pop
pushf
push
fistps
test
xchg
jae
mulb
inc
movsb
ret
loop
div
and
jnp
repz
xor
mov
inc
mov
out
in
xrelease
cmp
adc
adc
or
subb
mov
dec
pusha
add
xlat
mov
cli
insl
arpl
xchg
cmp
mov
inc
fnsave
out
inc
shr
out
out
dec
mull
in
test
std
jae
orb
inc
sub
sub
mov
ret
sbb
popf
scas
es
sub
jmp
jecxz
test
out
jmp
xchg
sbb
daa
sub
sub
popa
adcb
add
or
mov
in
adc
add
test
je
test
pop
pushf
and
scas
leave
mov
lahf
leave
rolb
lahf
div
xchg
nop
mov
mov
jge
adc
hlt
sbb
mov
mov
xchg
sahf
sarl
leave
mov
outsl
les
dec
add
pop
xchg
mov
arpl
mov
in
aaa
pushf
inc
leave
mov
jo
cmp
add
xor
xor
outsb
outsb
mov
enter
movsb
test
and
test
xorb
js
fiaddl
xchg
add
lods
decb
in
andl
xor
inc
rcl
pushf
out
adc
xorb
outsl
loopne
sbb
xchg
enter
mov
mov
xchg
push
arpl
imul
test
sub
push
ja
adc
test
sbb
out
mov
mov
out
je
jp
dec
pop
ret
inc
mov
jge
or
mov
stos
xchg
or
vpcmpeqd
test
jo
inc
jmp
ficompl
sahf
add
mov
and
sub
mov
test
xchg
lcall
xor
mov
mov
xchg
and
std
hlt
mov
adc
adc
sti
jne
mov
mov
out
sbb
inc
cmp
and
jae
push
push
dec
mov
mov
mov
aaa
mov
lcall
add
jle
mov
xchg
inc
mov
stos
out
pop
push
mov
cs
mov
push
cmp
ja
loope,pn
push
add
cli
mov
and
add
imul
xchg
cmp
xchg
test
dec
outsl
jp
lds
das
xchg
js
into
lds
lahf
nop
test
mov
inc
ja
pop
enter
cltd
outsl
mov
out
rcll
and
outsb
and
push
xchg
addl
xor
mov
ja
cs
add
scas
in
ljmp
mov
mov
ja
fadds
loope
out
ljmp
sar
and
test
and
cmp
inc
lds
push
cs
inc
add
mov
imul
xchg
mov
in
sti
sub
enter
or
repz
and
outsb
xor
mov
scas
iret
popa
addb
je
adcl
ja
cs
add
scas
mov
cs
xchg
outsl
lock
sub
data16
jp
add
or
or
mov
bound
xor
xor
cs
ja
lds
cli
mov
scas
push
jo
into
adc
test
jb
xchg
mov
xchg
xchg
mov
mov
add
scas
ret
lret
rolb
pop
icebp
pop
ja
les
mov
hlt
or
or
bound
mov
sbb
imul
jb
into
push
mov
enter
add
pop
jo
loop
jns
xorb
sub
push
into
mov
lods
addr16
lds
mov
ja
lds
or
mov
push
jge
jmp
testl
push
ret
pop
jb
cmp
mov
insb
addl
ss
cmpsl
dec
mov
ja
sub
scas
mov
add
xchg
rcrl
fisubrl
add
scas
dec
adc
dec
into
andb
outsb
add
xchg
xor
fiaddl
add
shl
push
into
push
pop
shll
add
pop
xchg
dec
jbe
or
fidivs
lds
inc
out
mov
bnd
push
loope
ds
ja
add
cmp
out
sbb
sub
out
adc
mov
cmp
mov
ja
cs
add
pusha
filds
hlt
mov
sub
subb
stos
out
shrb
enter
xor
xchg
fsubrl
lock
punpcklwd
test
sbb
pushf
mov
add
mov
mov
repnz
aam
add
decb
int3
cmp
out
faddl
inc
adc
mov
cwtl
inc
push
dec
fdivl
pop
inc
mov
ja
les
movsl
xor
inc
inc
ljmp
testb
arpl
das
adc
cmp
push
dec
dec
loop
push
cli
cs
sahf
in
add
gs
notb
je
call
adc
xor
jmp
sub
loope
jae
arpl
je
push
outsb
addr16
roll
xor
xchg
clc
xchg
imul
cltd
lret
outsl
arpl
xor
icebp
cmpsl
sub
es
clc
add
pop
push
stc
imul
pop
fstps
push
inc
push
add
arpl
outsl
insl
jo
gs
inc
fimuls
inc
push
popf
fdivl
mov
popaw
jo
mov
adc
xor
pop
inc
movsb
loopne
inc
mov
repz
jae
sbb
rorb
inc
inc
sbb
outsb
inc
mov
sbb
xor
test
dec
jne
test
sbb
inc
inc
push
mov
push
repnz
pop
xor
jb
gs
mov
sbb
xor
imul
scas
mov
das
pop
ret
and
jp
repz
xorb
hlt
clc
pop
inc
pop
int
mov
scas
xor
jecxz
pop
aas
jae
arpl
int3
scas
push
pop
stos
inc
das
inc
push
xlat
scas
pop
jge
jb
push
outsl
add
pop
cmpsl
dec
dec
jne
jg
mov
inc
hlt
fcomp
stos
push
jle
aad
pop
xchg
outsb
sbb
scas
lea
pop
lock
inc
xchg
mov
lods
mov
mov
push
mov
add
test
nop
nop
cmp
mov
cld
sub
add
add
add
jp
add
add
add
add
push
add
add
push
add
add
inc
add
add
add
inc
add
je
add
add
add
add
push
pop
add
push
add
add
add
push
add
jae
dec
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
push
aaa
add
add
add
xor
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
imul
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
push
add
add
add
ja
add
jo
add
add
add
add
add
jno
add
add
add
add
add
add
add
add
xor
dec
jns
add
add
add
xor
dec
add
add
ja
add
add
add
add
add
je
js
add
add
add
inc
add
outsb
add
add
add
inc
add
add
add
add
inc
add
xor
add
add
add
add
add
add
add
add
add
add
add
pop
add
xor
add
add
dec
add
add
xor
xor
add
dec
add
push
push
add
jbe
add
add
add
push
add
add
add
fdivr
shll
add
aaa
jno
xchg
out
adc
cld
out
cmp
loop
mov
insb
mov
or
mov
push
xchg
jecxz
sub
and
mov
out
mov
mov
mov
add
inc
pop
les
out
jmp
loope
xor
dec
mov
inc
orb
in
add
pop
mov
loopne
cmpsl
push
into
cmpsb
push
hlt
call
stc
push
inc
aam
loop
lret
xor
iret
dec
cmpsl
add
scas
pop
pop
addr16
pop
ret
aad
mov
xchg
test
addb
lret
jecxz
sub
flds
enter
and
loope
test
push
sub
cli
fbld
enter
mov
dec
sub
out
pop
sbb
je
daa
xlat
or
adc
xchg
pop
mov
iret
jne
orb
cmp
cli
lcall
mov
mov
aad
jecxz
hlt
mov
imul
rclb
loop
divb
les
jecxz
dec
or
in
rcr
test
mov
push
mov
jae
dec
adc
cmpsl
jno
popa
popf
insl
out
adc
insl
lahf
mov
popf
ret
xor
imull
cmp
mov
cmp
std
push
mul
jbe
sbb
outsl
sub
idiv
jb
xor
push
repz
lret
hlt
push
xor
push
xor
inc
ljmp
lret
mov
out
xlat
loope
rcr
and
push
dec
inc
lods
push
jp
sub
jo
xor
stos
or
test
imull
jbe
icebp
insb
shlb
mov
imulb
mov
xchg
out
pop
lock
mov
adc
lds
mov
movsb
cmpsb
fsubrs
xor
les
loop
xor
dec
addr16
pop
pop
adc
jne
mov
aam
loope
aaa
inc
jle
sub
popf
mov
xchg
cli
daa
iret
mov
inc
fs
xor
inc
daa
out
xchg
aam
xor
or
adcb
test
xor
aam
jmp
push
into
push
push
imul
push
pop
lods
and
sbb
sbb
add
es
incb
aam
cld
xchg
lds
rolb
sarb
outsb
into
insl
jne
lahf
into
shll
imul
cltd
jne
cs
and
cmpsl
clc
jl
pop
call
adc
sub
movsb
rol
or
repnz
lods
les
sbb
imul
icebp
xor
mov
cmpsl
and
cmp
cwtl
mov
fs
and
hlt
negl
in
mov
jne
push
xchg
dec
sub
notb
ret
or
sbb
repnz
jle
insb
jno
mov
call
xchg
stos
les
adc
maskmovq
idivl
into
xor
int
roll
rorl
fadd
inc
fistl
cld
sub
or
pop
inc
lretw
dec
and
lods
pop
push
pop
pop
mov
pop
jne
xchg
je
add
data16
scas
mov
int3
or
inc
xor
outsl
inc
cmp
fs
fsubrl
aas
lcall
cmc
xor
add
lock
xchg
sub
notb
movlps
enter
mov
adc
lock
repnz
test
adc
out
dec
sbb
lret
leave
test
lret
xor
orb
jle
lods
outsl
scas
lock
push
cmpsl
sub
sarb
and
loopne
sub
popa
les
adc
subb
into
push
outsb
adc
out
popa
ret
sbb
repnz
jne
inc
adc
iret
xchg
les
mov
inc
sbb
sub
inc
jl
shlb
test
inc
mov
bound
mov
outsb
fsubl
cmp
cld
xchg
test
mov
dec
inc
mov
mov
sbb
pop
inc
into
xor
jmp
xchg
roll
call
dec
sbb
cmp
and
arpl
fists
loope
sti
sahf
push
mulb
add
xchg
fld1
inc
arpl
add
add
incb
adc
test
push
out
adc
in
jge
rep
fwait
stos
dec
jl
popa
sub
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
imul
add
add
add
add
add
add
add
dec
add
push
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
insl
add
add
js
add
add
jbe
add
add
add
push
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
jo
add
insb
add
add
add
add
add
outsl
add
add
dec
add
push
add
jns
add
xor
add
pop
add
add
cmp
add
add
add
jb
add
add
add
add
add
jno
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
push
add
add
add
dec
add
xor
add
data16
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
pop
add
add
add
add
xor
add
add
add
popa
push
add
add
xor
add
add
add
add
add
add
aaa
add
add
add
dec
add
add
inc
add
add
add
add
add
add
add
insl
add
push
add
add
add
dec
add
cmp
cmp
add
add
push
xlat
enter
pop
in
insl
or
je
push
push
mov
mov
xor
outsl
inc
or
andl
out
out
push
std
test
push
push
adc
xchg
out
sbb
or
mov
pop
scas
jbe
shl
push
insb
and
call
pop
fwait
stos
dec
lds
in
add
xchg
push
or
pop
mov
adc
bound
sub
jp
mov
push
jmp
push
clc
push
jo
mov
xchg
es
jp
cmc
and
mov
fists
jbe
and
jecxz
xchg
xchg
loopne
mov
test
test
cmpsb
push
inc
test
sarl
sbb
sbb
mov
aas
push
add
mov
ret
add
jbe
and
push
xor
add
mov
fbstp
cld
out
xchg
imul
push
ja
dec
push
addl
jecxz
testl
hlt
inc
adc
stc
repnz
ror
cmp
sub
cmp
jbe
dec
sarl
xchg
or
xor
loop
mov
pop
data16
sahf
ja
mov
sbb
mov
xor
out
mov
sub
cmp
mov
mov
iret
and
insl
sub
pop
add
cld
cli
pop
sub
sub
sti
sub
or
sub
call
xor
cmp
xchg
adc
shll
aam
jecxz
push
lock
mov
call
data16
xor
icebp
push
mov
test
xlat
gs
inc
clc
fisubs
lea
in
or
lock
xchg
lret
bound
lods
jne
subb
add
fsubl
adcl
mov
mov
in
in
or
subl
cmp
sarl
add
cmp
jle
aad
negl
cmp
sarl
daa
sub
das
aaa
sub
cmp
and
and
sbb
lret
es
movb
add
insl
cmp
jmp
jg
add
sub
xchg
mov
inc
inc
jb
fstl
jp
cmpsl
jl
jbe
inc
js
call
push
jg
int3
in
cld
add
push
pop
hlt
push
sub
lock
push
bound
movsb
cmp
cltd
pop
rcll
lock
push
sub
jmp
int3
dec
data16
or
aas
sbb
mov
orb
or
push
jecxz
mov
mov
out
xor
movsb
inc
mov
fsubl
outsb
andb
mov
out
adc
mov
cld
cld
out
aam
or
push
loopne
or
xchg
mov
fsubl
outsb
jbe
pop
into
lock
sbb
jb
pushf
xchg
imul
loopne
xchg
mov
repnz
imul
das
jbe
inc
sar
data16
cmpl
int
je
hlt
push
repz
negl
stos
mov
jmp
popa
xor
lods
inc
aad
scas
cmp
cmpsb
mov
jecxz
mov
loopne
and
imul
pop
push
aaa
mov
dec
dec
ret
mov
jne
stc
pop
imulb
adc
jle
add
mov
jge
mov
mov
lods
mov
adc
mov
sub
subl
sbb
je
mov
sahf
push
fbld
jne
mov
out
jge
xchg
maxps
mov
les
outsb
sub
out
mov
mov
mov
stc
jne
data16
mov
mov
or
jl
into
ja
test
ror
sub
bound
add
and
int
mov
cmovl
and
xor
cmp
mov
xor
and
rcrl
push
call
sahf
adc
dec
push
movsl
sbb
aaa
pushf
dec
and
fdiv
iret
adc
mulb
push
ljmp
pop
cs
dec
out
idivl
mov
or
int
adc
inc
mov
pop
int3
adc
dec
or
and
mov
int
and
cmp
mov
xchg
test
dec
jbe
aaa
cmp
sub
cmp
add
push
push
notb
lds
mov
cmc
add
jl
imulb
xchg
scas
aam
jnp
test
xor
out
rol
in
pop
push
jne
or
jge
inc
call
ret
or
repnz
inc
aad
adcb
or
das
loopne
cmpsb
ljmp
lds
mov
outsb
cs
call
ret
jbe
loopne
addr16
mov
mov
sbb
mulb
cmp
idivl
push
dec
out
mov
ret
mov
cmpsl
push
faddl
int3
push
mov
push
inc
pop
pushf
and
and
ja
imul
cli
popa
push
rol
cmc
sarl
adc
in
test
iret
int3
add
orb
lods
push
pop
mov
mov
xchg
cmpsb
add
dec
jae
sbb
jno
pop
sub
inc
and
test
clc
push
mov
cmp
insl
and
jecxz
xchg
or
int3
adc
jge
mov
je
mov
sub
mov
das
and
xchg
call
xor
iret
mov
jae
mov
inc
sub
inc
scas
or
xlat
es
dec
pop
and
cltd
sub
je
fwait
push
enter
into
fstl
test
lock
or
test
dec
hlt
dec
fbstp
daa
rcrb
test
inc
push
pop
cld
stos
mov
fisubl
pop
insb
int
dec
mov
movsb
andl
sti
push
or
or
xor
inc
enter
push
xorb
xorl
push
push
push
mov
aaa
outsl
push
lcall
notb
cmp
sti
call
and
fsubp
push
call
lods
pop
data16
sbb
lret
push
mov
ja
lods
jg
sub
jge
adc
lea
outsl
mov
pop
xchg
jnp
or
dec
adc
ficoms
inc
fcompl
test
xorl
mov
mov
fcoml
push
pushf
lcall
leave
out
daa
push
cmp
and
dec
jg
lcall
in
test
js
push
jp
mov
repnz
mov
movsb
sbb
lock
sbb
mov
int3
imul
add
test
push
push
sahf
pusha
clc
push
push
loope
inc
lods
xchg
push
adc
mov
rorl
mov
scas
adc
add
or
cmp
nop
in
sub
push
jae
sub
frstor
mov
push
mov
jp
stos
sub
jg
mov
cmp
mov
les
sub
pushf
jg
inc
out
pop
or
test
fsubp
inc
jae
adc
cmpsb
adc
push
cmp
inc
mov
cmp
sbb
pop
mov
ret
mov
mov
decb
outsl
add
inc
xchg
lea
push
call
mov
xorb
sahf
adc
inc
mov
cs
repnz
cmp
nop
mov
inc
mov
adc
mov
aaa
jb
test
ficompl
mov
or
and
jne
pop
push
mov
gs
mov
arpl
mov
bnd
addr16
int3
out
loopne
or
pop
outsb
test
dec
add
scas
test
xor
cli
idivl
xchg
mov
fstpt
adc
pop
stos
lahf
scas
addr16
rcrb
inc
subl
mov
cmpsl
dec
xchg
frstor
dec
clc
push
push
or
push
in
cld
enter
bound
cmpsb
stc
push
sub
mov
lock
xor
add
jbe
hlt
mov
pop
lret
sub
sbb
stos
jnp
push
and
sbb
mov
lods
cmpsl
xor
lock
mov
mov
into
imul
push
push
mov
xor
push
mov
jbe
fcoms
inc
movsl
sbb
in
outsb
je
mov
dec
loope
jg
adc
out
mov
dec
imul
aam
mov
xchg
cmp
dec
je
xor
mov
mov
xor
je
mov
outsb
xchg
mov
add
add
add
add
add
dec
add
add
add
aaa
add
xor
push
add
jne
add
add
push
add
cmp
add
add
add
add
add
add
add
add
add
dec
bound
insb
inc
add
jno
add
add
js
add
add
add
add
add
add
add
add
add
add
jne
xor
add
add
data16
insb
add
push
je
add
add
add
add
add
add
add
add
imul
add
push
add
add
add
cmp
add
add
add
xor
inc
add
add
add
add
add
add
add
add
push
add
add
pop
add
inc
add
add
add
jp
add
add
push
add
add
add
add
add
add
add
push
add
imul
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
outsb
add
add
dec
add
add
add
add
add
inc
add
dec
data16
add
add
inc
add
add
add
add
insb
add
dec
add
add
add
add
add
je
add
arpl
pop
add
jns
add
data16
add
dec
push
jns
push
add
pop
add
add
jo
add
add
xor
add
add
arpl
add
add
push
pop
add
add
xor
add
add
xor
inc
add
add
add
add
add
add
add
add
dec
jne
add
add
add
divb
ret
and
sub
or
mov
shll
int3
pop
or
insl
mov
addr16
loope
sahf
sbb
imul
int3
push
adc
xchg
ret
push
outsb
ds
imull
xor
adc
icebp
inc
dec
xchg
leave
mov
into
fbld
insl
dec
xchg
in
pop
jg
dec
data16
dec
iret
ret
int3
add
jno
and
jnp
insb
cmp
fld
loopne
outsb
push
cmp
mov
xchg
into
jbe
mov
push
mov
xchg
dec
jl
loop
movsb
daa
lds
int3
adc
movsb
mov
xchg
int3
jle
aaa
xchg
mov
scas
jnp
xor
movsb
mov
sub
movsb
dec
outsb
lods
das
mov
lods
in
mov
sbb
pop
lods
test
addb
dec
sbb
insb
mov
mov
and
dec
add
ficompl
in
test
sbb
pop
inc
jns
cmpsb
jbe
xchg
pop
inc
je
mov
hlt
loop
iret
and
mov
enter
fs
inc
inc
les
mov
mov
outsb
lods
testb
mov
hlt
pop
cmp
imulb
push
imul
dec
andl
xor
insb
cmc
sti
hlt
push
dec
subl
ret
pop
push
das
push
lcall
in
pushf
sub
int3
push
call
sub
sub
pop
in
cmp
lock
js
push
lret
in
push
test
fidivrl
int
or
adc
sbb
add
or
pop
push
add
push
xchg
daa
pop
loop
push
xchg
insb
mov
mov
or
xchg
pop
movsb
sbbb
hlt
int
push
add
lea
and
enter
cld
pop
subb
push
adc
and
add
lods
ret
sarl
cmp
subb
pop
icebp
jbe
mov
or
jmp
xchg
icebp
lret
mov
push
push
pop
cld
sub
push
xor
popf
push
push
popf
mov
andl
pop
ret
inc
sarl
scas
nop
and
addr16
inc
or
mov
and
and
ljmp
jne
inc
xchg
mov
adc
scas
mov
outsb
mov
adc
push
push
push
cmp
inc
mov
xchg
cmpl
jne
pushl
call
mov
jbe
push
aaa
ror
dec
xor
mov
cld
jns
fisubrl
and
hlt
clc
je
mov
pop
repnz
jbe
adc
aas
xchg
jmp
icebp
adc
cmp
cmp
call
out
jge
cmp
mov
mov
mov
lods
stc
mov
lea
push
jge
fstps
loopne
test
jge
scas
push
push
out
shr
and
sbb
iret
repz
cli
pop
jmp
pop
insb
loop
cmp
mov
jbe
daa
mov
jle
pop
stos
outsl
sete
das
cmp
sub
fs
xor
mov
clc
push
fadds
out
push
shl
and
int
add
testb
push
xor
mov
mov
lea
rclb
pop
fnsave
jo
cmpsb
sbb
xchg
push
pop
mov
jo
inc
fwait
sub
mov
inc
lret
or
stos
jne
adc
push
cltd
sbb
in
shl
aad
fcomps
bound
je
pushf
jbe
icebp
and
pop
xchg
repnz
negb
add
lret
arpl
push
outsb
mov
ja
add
inc
mov
out
add
inc
addr16
xchg
sub
in
mov
das
inc
lret
fdivrl
call
jle
or
cmc
push
xor
or
fists
and
adc
cmp
mov
andb
or
xchg
mov
pop
adc
jmp
and
shr
push
fistpl
ss
in
sub
scas
iret
in
add
imul
sub
cmp
jae
lcall
jns
mov
inc
inc
shr
icebp
add
push
push
in
pop
sub
cmp
daa
mov
enter
test
mov
incl
sarb
mov
cwtl
negl
add
add
add
add
dec
add
add
add
jo
add
pop
add
add
add
add
add
add
add
push
add
xor
add
add
add
xor
push
aaa
imul
add
inc
add
add
add
add
add
xor
add
jbe
add
add
add
add
inc
add
add
add
imul
add
add
dec
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
xor
imul
add
dec
add
add
add
add
add
add
add
add
add
inc
add
add
add
jp
inc
push
add
add
aaa
add
push
add
add
add
add
push
je
arpl
add
add
add
add
add
add
add
add
add
inc
add
add
add
xor
add
add
pop
add
add
add
add
add
cmp
dec
add
jp
xor
add
add
add
add
imul
add
push
add
add
add
add
add
add
add
imul
add
add
add
add
add
jb
add
add
add
inc
add
add
add
add
add
push
add
add
outsl
add
add
add
add
dec
add
popa
js
add
add
outsb
dec
add
outsl
add
xor
js
add
add
add
add
add
add
add
add
add
pop
add
add
add
insl
inc
add
add
add
add
add
add
add
add
add
jne
add
add
xor
cmp
add
add
add
add
add
push
add
add
add
js
add
add
add
push
push
add
bound
add
add
add
add
add
add
add
add
push
add
xor
add
jbe
jae
add
add
add
add
dec
add
add
add
add
add
sub
fadds
lods
arpl
adc
adc
or
cld
xchg
repz
mov
push
scas
call
dec
and
pop
and
les
pop
neg
sbb
fists
sub
jp
fadds
sbb
push
aaa
lds
js
mov
orl
insb
into
push
scas
lcall
scas
or
or
dec
mov
or
add
jg
xchg
inc
gs
andl
dec
adc
rorl
outsl
rclb
sti
scas
push
sarl
xchg
add
mov
push
sahf
lock
sbb
push
pushf
pop
das
add
pop
into
push
shlb
mov
lock
mov
stos
sbb
sbb
lock
dec
popa
aam
repz
in
xchg
shrl
mov
push
or
stos
lds
mov
and
jb
mov
decl
dec
inc
mov
mov
push
push
scas
movsb
pop
insb
xor
and
int
fidivl
mov
mov
cs
push
xchg
or
mov
mov
mov
addr16
lock
push
outsl
call
sub
icebp
dec
andl
icebp
pop
int
mov
hlt
mov
out
sub
lret
loopne
lcall
mov
pop
mov
fiaddl
fwait
cmpsl
sbb
xor
or
push
lret
fsubr
mov
lcall
or
aam
jne
lret
jo
cltd
mov
scas
xlat
outsb
adc
lret
stos
psrlq
mov
lea
sub
mov
sub
out
sbb
int
enter
pop
test
dec
bound
neg
test
aaa
gs
sub
sar
clc
mov
and
sbb
xchg
in
dec
mov
mull
cltd
push
cwtl
out
cmp
je
push
insb
repz
sar
addr16
mov
je
sub
xor
mov
push
push
std
or
sub
lds
imul
idivb
cmp
or
jg
cmp
jge
ss
jns
in
bndstx
xor
inc
mov
mov
add
dec
cli
push
lock
cmp
fwait
inc
orb
cmp
dec
cmp
cmpsb
jno
into
push
push
pusha
mov
xor
aaa
inc
imul
add
call
mov
cltd
lret
das
scas
mov
sbb
sbb
cmp
les
leave
cmpsb
dec
lret
stc
cltd
loope
pop
rcll
push
fwait
cltd
mov
add
mov
ret
inc
dec
inc
repnz
inc
lds
inc
lcall
sahf
les
cwtl
xor
cmp
adc
test
pop
add
jmp
mov
inc
xlat
fimull
cmp
aam
jl
lock
push
aam
mov
ss
add
adc
jmp
out
inc
loop
bound
imul
xchg
pop
push
hlt
fwait
addb
scas
adc
push
dec
cmpsb
decl
pop
popa
lock
addr16
cltd
mov
pop
push
aam
cwtl
out
xor
addr16
push
xchg
aaa
lods
xor
mov
adc
push
xchg
mov
stos
mov
xchg
dec
fcoml
flds
pop
jno
push
jle
inc
out
mov
jge
mov
out
jnp
ret
jnp
mov
add
push
dec
push
mov
ja
adc
jmp
ds
mov
xor
pop
xchg
test
or
movl
aaa
mov
xchg
mov
adc
stos
xchg
mov
mov
fsubl
or
pop
jp
sub
add
xor
fucomi
add
sti
jno
movsb
mov
insb
mov
add
adc
ret
sub
enter
xchg
push
icebp
ds
in
dec
mov
or
lret
scas
adc
mov
inc
push
xor
mov
fdivs
push
scas
sti
mov
jmp
push
inc
add
jp
test
lock
les
int3
cmp
add
and
das
cld
nop
loopne
call
dec
jp
mov
sub
loopne
sub
sar
pop
rep
adc
int3
mov
idivl
add
fisttps
test
cmp
mov
sub
inc
in
xchg
test
testl
add
in
das
cwtl
pusha
hlt
mov
adc
test
fwait
jb
addr16
jge
int
movsl
jbe
dec
ljmp
movb
je
fcoml
lret
shlb
inc
dec
scas
int3
lahf
leave
loopne
lret
inc
mov
call
in
jl
pop
jg
pop
loop
push
pop
lret
xchg
mov
rcrb
rclb
mov
xchg
int
ss
sbbl
pop
repnz
xchg
add
fidivrl
push
jno
inc
lock
adc
cmp
ret
iret
notl
xor
add
jae
push
je
cmp
pcmpeqb
and
in
fmull
lock
jmp
jbe
shl
es
cli
lock
out
inc
push
mov
les
push
fcomip
push
mov
push
andl
lods
push
sub
adc
scas
add
pop
cmc
hlt
loopne
out
push
lcall
dec
lock
shlb
lock
int
or
out
mov
add
and
fsubl
shlb
mov
adc
push
inc
fs
test
lods
pop
lret
pushf
and
stos
or
mov
cltd
mov
test
int3
pop
addb
jle
test
movsb
push
out
push
call
sarb
sbb
ret
push
jno
inc
pop
mov
addr16
sbb
push
ret
dec
dec
mov
pop
push
lods
in
jle
je
push
in
push
jmp
dec
sub
leave
out
lret
cmpl
leave
test
shrl
xchg
aas
adc
mov
or
xorb
and
add
loop
pop
and
call
mov
lahf
lock
enter
mov
sti
sbb
dec
int
jno
punpckhwd
push
and
and
add
cld
in
jbe
cmpb
mov
jb
popa
jae
imul
inc
insb
inc
out
inc
jns
add
test
xor
jo
jmp
push
push
jle
mov
mov
adc
jbe
lods
or
pop
call
xchg
repnz
adc
or
cli
cs
push
je
cmp
jp
popf
outsb
movsb
and
or
cmp
add
lds
mov
pop
cld
pop
fadd
mov
cmc
jmp
pop
adc
dec
sub
mov
lea
jbe
pop
int3
push
push
pop
push
fisubrl
push
push
mov
cltd
test
mov
and
lret
push
daa
dec
fcoms
leave
sub
in
imul
pop
jnp
insb
in
test
cmp
sahf
xchg
xorb
dec
les
xor
outsb
jg
subl
test
aad
xlat
jecxz
cli
pushf
movsb
xchg
add
xchg
dec
xchg
movsl
les
push
sbb
cmp
add
cwtl
aam
repnz
daa
adc
adcl
dec
sub
rcrl
add
xchg
xlat
pushf
ljmp
xchg
adc
jmp
mov
cmpl
cmpsl
test
pop
int
cmpsb
imul
imul
movsb
mov
xlat
movsb
jmp
push
cmp
arpl
mov
loopne
cltd
pop
icebp
ret
iret
pop
ja
mov
test
pop
leave
adc
insl
jmp
aas
cmc
and
ret
in
xlat
jne
lods
daa
cs
ss
test
cmp
lods
out
and
adc
ror
bound
cltd
mov
test
lcall
in
not
xchg
pop
int3
ds
ret
add
pop
jne
cmc
mov
ret
lret
arpl
mov
and
lea
sbb
mov
and
decl
cmovg
bswap
and
sbb
mov
int
ljmp
call
push
pop
pop
cld
jmp
pop
mov
mov
xlat
mov
fsts
sub
lds
or
or
xchg
int3
test
jae
xchg
mov
pop
xor
jbe
ret
mov
mov
outsb
mov
push
into
or
add
shl
add
push
ds
shll
mov
cli
imul
add
add
add
add
add
dec
add
add
add
jne
push
add
add
add
add
push
add
xor
add
add
add
add
add
js
add
add
outsl
inc
add
je
add
dec
add
add
inc
add
add
add
add
xor
add
add
add
add
add
add
add
add
push
jns
add
add
dec
jb
push
add
add
add
add
add
xor
jbe
add
xor
add
add
add
add
jae
inc
jno
jbe
add
add
add
add
xor
add
add
add
jne
add
dec
outsb
add
add
add
pop
inc
add
add
add
add
add
add
add
add
xor
add
add
push
add
imul
add
add
add
add
push
add
add
add
add
add
add
add
arpl
js
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
bound
add
add
add
add
push
add
add
add
add
outsl
inc
add
popa
add
dec
add
add
data16
add
add
push
add
add
push
add
add
dec
add
add
add
add
push
add
add
add
popa
push
push
jno
add
add
add
add
add
add
push
jb
add
add
add
push
add
add
push
add
je
jns
add
add
add
add
inc
xchg
mov
xchg
sub
xchg
pop
mov
mov
add
imulb
mov
cltd
addr16
incl
xchg
ss
xor
add
popf
cltd
call
lcall
test
jnp
pop
sub
xchg
push
jmp
mov
ljmp
imul
cmp
test
xchg
adc
push
cli
dec
aam
popf
scas
shlb
mov
mov
int3
xchg
scas
mov
bound
jmp
xor
iret
clc
das
ljmp
push
inc
outsl
dec
sbb
movsb
cltd
out
int3
push
mov
mov
push
je
xchg
ljmp
inc
pushf
divb
and
es
pop
push
leave
in
nop
jbe
pop
scas
jbe
insb
pop
notb
add
inc
addr16
out
bound
mov
sbb
arpl
aam
int
fs
xor
lds
popf
mov
loope
xor
out
in
out
inc
ja
inc
out
push
movsl
in
xlat
ds
scas
ss
pusha
int
fs
sub
mov
cmpsl
push
xor
lock
and
shrl
jbe
add
stc
daa
jmp
xchg
sti
jecxz
sahf
andb
out
push
scas
pop
fsubl
shrl
fbld
shll
fmuls
out
shll
in
and
lret
cmp
je
push
lcall
jne
aaa
mov
adc
lcall
mov
mov
out
xor
repnz
mov
mov
cmp
mov
inc
push
sti
dec
add
adc
call
outsb
dec
lods
sbb
and
data16
sub
je
les
inc
inc
pop
mov
xchg
pop
loope
cmp
lahf
mov
iret
or
jo
int
pop
in
pop
add
nop
mov
faddl
ror
xor
mov
pop
mov
daa
mov
xchg
cmp
lods
mov
mov
jmp
cmp
je
popa
clc
add
cmp
sub
mov
sbb
push
out
inc
push
and
test
and
dec
cmp
les
pop
and
add
enter
aad
jle
jbe
in
pop
jecxz
popa
sahf
rcrl
push
add
push
daa
in
mov
into
push
mov
pop
or
ljmp
xchg
push
push
test
mov
add
addl
idivl
mov
push
or
daa
cmp
out
inc
cmp
andb
inc
xchg
inc
in
pop
mov
xorl
in
sahf
sti
adc
add
hlt
ljmp
bound
mov
scas
adc
push
cmp
push
addr16
iret
ss
mov
sub
repnz
sbb
push
ficoml
aad
into
cmp
fildl
xchg
mov
loop
call
cwtl
out
fstpl
sbb
mov
aas
call
test
jo
data16
xor
call
cli
into
ljmp
pop
sahf
xor
imul
jb
xor
fcoms
repz
ss
jns
in
lret
jmp
cmp
add
in
push
sbb
add
test
lret
ljmp
loopne
fidivl
stos
test
out
pop
mov
push
js
out
and
cmp
xor
in
add
jae
cld
fs
jle
mov
mov
inc
xor
cld
or
loope
mov
inc
clc
test
xchg
mov
push
sbb
mov
je
repz
and
out
js
pop
shll
add
pusha
out
xor
add
sahf
cmp
push
jb
pop
add
lock
mov
adc
sarb
sahf
jne
in
inc
mov
outsl
sbb
add
das
enter
sub
hlt
jle
lahf
jo
imul
push
pop
pop
push
sahf
subl
adc
mov
cltd
cmc
icebp
pop
pop
in
lret
out
sub
pop
lods
pushw
call
sar
lret
add
add
decb
add
sbb
jl
adc
popa
push
xchg
add
pop
xor
loop
jne
cli
add
fs
or
push
aas
dec
repnz
mov
xor
test
stc
dec
ss
ss
jecxz
loop
ret
ret
add
es
je
sarb
xchg
stc
ljmp
shlb
jae
adc
push
js
test
cmp
sbb
xor
push
mov
fisttpll
data16
cmpsl
out
hlt
sbb
pop
andb
adc
pusha
fwait
pop
data16
dec
mov
test
test
lret
loop
sub
add
pop
clc
mov
dec
int3
enter
adcb
mov
bound
add
in
jbe
sbb
dec
out
pop
inc
xor
cmp
dec
loopne
psllq
iret
iret
idivl
cmp
dec
es
and
les
adc
pop
jge
gs
mov
pop
mov
jp
pop
loope
push
jae
ss
add
adc
add
es
std
pop
mov
mov
adc
jb
dec
and
sti
in
xchg
sbb
xchg
sub
xlat
mov
hlt
and
divb
jae
test
xor
xchg
mov
xchg
cmpsb
dec
push
out
out
mov
lds
xorb
out
test
cmpsl
sub
adc
mov
or
test
outsl
mov
scas
shlb
loopne
in
or
hlt
xor
cmp
dec
ja
les
and
aam
cld
push
mov
mov
hlt
push
ret
xorb
test
mov
cld
lds
adc
out
dec
mov
hlt
nop
ret
mov
mov
sbb
hlt
cmp
push
scas
pusha
ja
les
hlt
hlt
les
loop
scas
cmp
les
jl
outsl
movsb
hlt
mov
ja
hlt
rorb
sbb
outsl
push
hlt
pusha
ret
xorb
pushf
mov
hlt
lock
ss
sub
hlt
pusha
ret
mov
les
testl
add
ja
out
pop
scas
push
mov
hlt
mov
shrb
mov
sbb
hlt
and
xor
inc
ja
les
insb
js
xor
ret
cwtl
ja
les
hlt
rol
fsubrl
cld
movb
adc
ret
xor
inc
les
js
nop
hlt
movsb
ret
shlb
clc
or
mov
hlt
mov
mov
std
or
inc
out
dec
mov
hlt
pushf
ret
fdivl
mulb
les
push
insb
outsl
mov
cwtl
ret
mov
mov
mov
outsl
sbb
push
ja
les
mov
hlt
dec
ret
push
ja
les
push
add
scas
nop
ja
les
icebp
loopne
aas
cs
adc
sbb
sub
hlt
jl
cwtl
scas
mov
shlb
mov
outsl
sbb
and
sub
cmp
inc
dec
outsl
push
hlt
pop
ret
mov
rclb
and
outsl
enter
shrb
clc
rorb
and
out
mov
hlt
je
jl
mov
enter
outsl
lock
xor
xor
cmp
inc
hlt
dec
ret
pusha
ja
les
shl
ret
mulb
les
sbb
pop
push
or
pushl
sub
cli
test
sbb
psubsb
aaa
push
fdivrl
movsl
out
and
bnd
nop
mov
jnp
adc
cwtl
ds
orl
faddp
pop
jg
mov
iret
push
and
xlat
ljmp
ret
push
mov
in
pop
jg
push
test
cmpb
mov
xchg
sbb
cmc
call
jbe
into
loopne
outsl
into
add
adc
std
xchg
mov
push
adc
mov
add
mov
cs
cmp
and
imul
xchg
pop
iret
xorb
or
cmpsb
pop
and
mov
movsl
cli
mov
mov
ljmp
ja
cs
jle
pop
add
or
sbb
sub
pop
scas
xor
les
mov
hlt
add
jns
jecxz
fwait
xor
icebp
xchg
jbe
aas
stos
stos
fidivl
mov
mul
pusha
fwait
xchg
pop
stos
out
lock
fiaddl
jo
popf
dec
pusha
les
cmp
pop
add
xor
cltd
lock
lret
fisubl
cwtl
sti
idivb
lock
scas
xchg
and
jmp
loopne,pt
inc
ror
out
dec
push
out
adc
jbe
push
pop
idivl
out
and
or
test
push
xchg
in
clc
cmp
popa
sbb
loopne
out
mov
hlt
jbe
test
scas
pop
ja
les
mov
idiv
inc
in
into
out
dec
inc
mulb
out
jl
repnz
call
imull
jg
xchg
pushf
jg
inc
out
xor
fiaddl
add
mov
in
aad
cmp
in
out
mov
std
aam
call
out
cs
mov
into
out
faddp
xchg
stos
inc
in
negl
mov
out
stos
decl
jl
outsb
mov
inc
aas
out
sahf
hlt
test
mov
fisubl
cmc
add
xchg
out
and
sub
out
loopne
adcb
enter
cli
in
and
mov
out
sbb
call
les
into
out
adc
jbe
imul
bound
loope
and
fs
or
inc
data16
popf
loopne
adc
dec
insb
xchg
arpl
push
mov
out
xlat
jecxz
hlt
push
imul
rorb
mov
sub
int3
aaa
imul
dec
mov
cmp
sub
jecxz
rclb
sbb
in
add
jnp
pop
xor
mov
incl
das
mov
data16
xchg
sub
jmpw
leave
sbb
call
aam
insl
or
adcb
dec
movsl
loope,pn
addr16
arpl
sub
xchg
xchg
xor
pop
sbb
and
mov
outsb
jle
inc
es
push
push
jnp
pusha
mov
aam
pop
add
das
test
xor
add
cmp
add
xor
and
pop
cmp
add
inc
jnp
add
js
fisubl
add
adcl
add
cs
lea
arpl
mov
sub
sbb
in
or
or
fldl
push
data16
xor
test
addb
push
imul
xchg
adc
stc
addb
shl
sbb
das
sub
push
mov
pop
mov
or
pop
cmpsb
push
pop
das
inc
fcoms
scas
xchg
and
js
cmp
add
cwtl
jp
inc
lods
xor
dec
xor
xor
out
outsl
sbb
mov
push
add
adc
call
xchg
xorb
or
inc
cltd
ja
or
fucom
insb
cmp
or
aaa
jne
xchg
and
fiadds
insb
sub
lsl
push
adc
call
inc
lods
fwait
scas
insb
add
pop
add
vpmacsdql
std
add
jle
out
xor
ljmp
add
push
sub
loope
xchg
das
mov
mov
out
popa
or
xor
js
bound
add
inc
jnp
adc
push
cmpsb
hlt
jbe
adc
in
add
adc
and
dec
sbb
clc
loopne
cmpsb
add
in
loop
cli
mov
ds
pop
push
stos
add
mov
xor
sti
mov
adc
push
scas
sbb
out
add
sub
fisubl
mov
out
mov
add
pop
int3
and
mov
jno
enter
stos
lret
inc
popf
les
cmpsb
add
nop
mov
sbb
add
lods
rorl
pop
dec
add
test
add
jle
arpl
fisubs
gs
mov
xchg
outsb
push
mov
xchg
ljmp
repnz
xchg
inc
sbb
insb
sbb
enter
mov
lcall
jle
je
push
mul
or
inc
jge
jle
mov
and
add
mov
pop
mov
int3
push
in
ss
sub
es
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
