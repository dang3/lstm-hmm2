pushf
pushf
jl
jmp
mov
sets
mov
pushf
pushf
jl
je
pushf
pushf
pushf
pushf
insb
push
pushf
pushf
test
sarb
push
mov
push
push
call
pop
ret
jge
sti
decl
in
push
push
lea
push
add
jne
xor
je
decl
push
or
sbb
ret
adc
je
xor
mov
lea
pushl
pushl
dec
test
jne
call
xor
mov
mov
mul
add
mov
cld
mov
pop
pop
pop
mov
push
push
push
add
mov
mov
mov
sti
fcmovnu
lahf
lods
mov
cmpl
jbe
inc
and
add
insb
dec
test
jb
mov
and
and
cmp
je
xor
mov
cmp
je
outsl
testl
pop
and
mov
and
xor
xor
lcall
mov
adc
decb
test
cmp
push
cmp
jge
roll
dec
mov
fistpll
pop
pop
clc
push
imul
gs
xor
fs
insb
imul
jbe
hlt
or
adc
jno
xchg
addl
sub
add
mov
jle
add
adc
test
adc
add
out
cmpl
jo
into
dec
mov
mov
rep
out
pop
cmpl
in
push
movsb
jne
mov
mov
call
xor
dec
rcrb
ds
or
sarb
sub
shr
lock
data16
sti
and
or
add
jne
mov
add
push
loop
movzwl
add
mov
add
data16
aam
and
push
add
ret
mov
repnz
mov
je
or
and
inc
int
dec
je
xorb
inc
jmp
or
jmp
and
mov
push
adcb
sub
pop
add
adc
xchg
add
mov
sbb
add
arpl
out
mov
mov
mov
add
push
imul
xor
test
je
push
push
push
cmp
cmp
push
cs
pop
mov
mov
add
test
xchg
fnstcw
fistps
push
mov
push
cs
in
das
lahf
inc
test
and
outsb
hlt
mov
out
xlat
in
inc
xor
ret
push
and
push
dec
int
das
push
fcomi
loop
push
and
and
imul
mov
bound
dec
dec
and
adcl
ret
push
mov
cli
add
jo
dec
cld
mov
push
cmp
movb
jle
pusha
es
call
sub
add
add
sbb
lock
xchg
xchg
imul
push
fsubr
jle
push
int3
sub
mov
pushl
fmull
clc
add
sbb
out
sub
inc
cmp
jmp
sbb
sbb
cltd
loopne
or
and
test
shr
mov
sbb
addr16
push
mov
add
aaa
xorl
sbb
aas
fdivrs
or
je
lods
ds
inc
push
or
inc
rol
mov
jmp
loopne
out
lea
cmp
mov
cs
inc
clc
and
mov
sbb
loopne
mov
lea
decb
jne
cmc
sub
jl
rorl
clc
aam
jo
cld
mov
scas
outsl
lcall
mov
pop
inc
mov
push
or
push
push
ds
cmpl
jg
dec
inc
or
cld
ljmp
loopne
mov
pop
ret
lcall
mov
mov
rep
push
testb
sbb
jmp
rolb
aas
xlat
hlt
mov
pop
icebp
pusha
notl
lods
xchg
mov
or
mov
clc
dec
clc
pop
js
dec
test
test
mov
aaa
std
inc
xor
lea
jb
adc
push
adc
outsb
jbe
pop
aad
iret
add
pop
push
outsb
cmpl
inc
or
pop
sti
lods
imul
inc
and
mov
test
and
push
cmp
dec
lock
cmp
cmp
das
popa
fs
iret
aaa
adc
adc
push
sbb
dec
pop
pop
and
std
incl
push
jb
arpl
fs
jae
add
aam
fcomip
cmp
fidivrs
add
fistpl
inc
fists
pcmpgtb
fdivrl
mov
lret
push
mov
push
inc
push
inc
lcall
mov
cmp
push
rorl
sbb
fs
sahf
jb
and
add
inc
add
outsb
call
lcall
pushl
loop
sets
sbb
mov
dec
inc
mov
jnp
mov
mov
sbb
mov
sub
push
push
stc
sbb
or
cmp
sub
in
lret
dec
inc
cmp
push
loopne
push
push
je
mov
stos
call
jmp
push
xchg
or
add
sbb
mov
popa
scas
mov
in
mov
je
in
adc
cld
add
push
aaa
pushf
imul
in
repnz
add
and
cmp
push
out
mov
test
cld
cmpl
ss
jle
fldenv
pop
in
call
jo
push
je
and
cmp
adc
push
scas
mov
dec
lock
jae
push
push
inc
decl
jne
or
cmp
push
add
mov
jl
sbb
popf
loopne
cmpsb
mov
pop
in
adc
dec
adc
push
out
pop
mov
insl
lods
mov
cmp
lcall
push
cmpsl
call
xor
cmp
and
push
mov
pushf
data16
push
mov
inc
add
call
ret
mov
pop
fsubrl
popf
jg
push
call
inc
data16
pop
sub
icebp
mov
add
jb
outsb
or
add
add
add
add
sub
mov
outsl
popa
fs
imul
aaa
push
gs
imul
mov
cmpsb
push
jo
outsb
adc
je
outsl
jb
fwait
std
ljmp
insb
gs
bound
arpl
insb
outsl
jae
dec
popa
outsb
lcall
ljmp
jo
imul
push
adc
je
popa
insb
inc
shr
scas
cmpsl
js
pop
xchg
je
pop
mov
mov
dec
outsl
jbe
dec
gs
sarb
aas
imulb
arpl
data16
jo
imul
insb
je
jns
outsl
jo
xchg
or
jno
ja
add
or
test
fwait
lock
pushf
mov
inc
jle
adc
fmull
cmp
mov
add
lcall
cld
xchg
outsl
push
push
pop
mov
test
je
test
shr
xor
mov
cmpb
jne
mov
xchg
in
fstps
and
jne
jne
lcall
xorb
mov
mov
inc
inc
inc
cmp
sub
xor
lds
mov
out
lods
push
imul
jg
mov
push
pop
lods
xor
cmp
je
cmp
sbb
pushf
je
cmp
je
cmp
clc
pushl
mov
je
cmp
je
cmp
je
cmp
je
loop
jmp
jmp
popa
loopne
pop
or
pop
push
mov
jl
jo
addb
sbb
rcrb
push
cld
cmpl
add
loopne
cmp
adc
sbb
inc
call
push
clc
mov
push
hlt
add
push
push
out
sub
pop
je
push
sbb
add
mov
ljmp
push
xchg
or
jle
mov
jecxz
jmp
push
div
idiv
push
adc
inc
jmp
inc
fimull
aaa
fsub
fcompl
and
push
movsl
sar
sahf
loop
add
jl
pop
jb
jl
ret
ret
and
insb
jne
imul
js
negl
je
xchg
sbb
add
ss
int
loopne
dec
test
sahf
or
push
idivl
jae
mov
aad
add
jmp
mov
mov
pop
pop
out
sti
jnp
add
xor
ss
lcall
or
add
shrd
scas
or
inc
cld
ret
nop
add
fstps
adc
sbb
nop
push
mov
mov
sub
jbe
aaa
aam
ja
ja
rorl
insb
std
je
pop
lea
pushf
nop
push
inc
xchg
xor
pop
popf
dec
mov
cltd
aaa
jg
xchg
sbb
cmp
lret
out
idivl
and
lret
adc
xchg
and
jl
ss
sub
mov
push
push
cmp
cmp
cmp
in
add
add
negl
scas
lods
outsb
cmpsl
mulb
push
outsb
push
jns,pn
mov
in
adc
dec
pop
cmp
aaa
mov
fisttpl
popf
es
mov
xor
in
jae
lahf
divl
jae
add
add
adc
mov
sub
add
push
movsl
inc
pop
push
in
test
pop
xlat
add
mov
push
pop
dec
nop
pop
popf
and
jb
pop
mov
addr16
lds
je
ja
stc
andb
adc
daa
mov
cwtl
mov
sti
xadd
lret
adc
add
add
pusha
dec
xor
add
sbb
xchg
fwait
adc
sbb
ds
inc
pop
les
fiadds
cmpsl
jbe
iret
cs
das
cmp
stos
insl
das
fs
pop
cmpsl
push
outsl
aas
xchg
jg
xchg
call
or
lcall
mov
jae
aaa
repnz
mov
insb
jae
mov
fnstcw
sub
das
and
add
hlt
add
add
fwait
push
jnp
adc
adc
cmp
push
inc
sbb
negb
sbb
ja
cs
cmp
dec
fwait
cmp
cmp
in
outsl
repz
leave
inc
jb
dec
in
dec
inc
aas
loope
add
lret
pop
insb
stos
pop
push
cmp
bound
mov
lea
popa
test
pop
loope
pop
aaa
mov
adc
lods
sahf
jbe
das
icebp
mov
dec
ret
mov
mov
jb
cmpsb
mov
add
bound
in
scas
sub
mov
adc
lds
out
cld
jecxz
in
cld
dec
adc
mov
inc
mov
add
int
xchg
mov
push
push
push
popf
pusha
fsubs
add
shll
cmp
subb
push
arpl
movsl
orl
xchg
stc
mov
jle
das
mov
ficoml
cmp
fwait
out
aaa
adc
testb
mov
bound
jbe
xor
mov
pop
inc
in
sub
xrelease
jae
popf
xchg
push
pop
es
mov
fwait
xchg
pop
jb
sub
mov
in
mov
lahf
sub
push
out
fsubrs
nop
cmp
dec
dec
dec
leave
mov
push
push
into
daa
ja
aaa
mov
das
bound
mov
pop
inc
lgdtl
fildl
insl
jg
and
lahf
daa
scas
and
jae
rolb
filds
or
aaa
daa
push
leave
das
mov
pop
pop
daa
inc
fcoml
sbb
push
nop
cmp
imul
or
ja
mov
pop
add
xchg
pop
add
add
neg
mov
adc
add
scas
and
das
jae
nop
adc
ud2
fcmovu
shrb
aaa
pop
xor
test
arpl
push
sbb
lods
es
ret
mov
in
push
sbb
test
jg
mov
movsb
jo
jp
pop
pop
add
aaa
add
or
mov
arpl
jne
jb
bound
aaa
lods
cmp
or
pop
inc
jp
jae
add
outsl
shr
add
add
hlt
add
push
cli
push
ljmp
mov
and
enter
mov
mov
lret
add
add
mov
xor
out
imul
cmc
adc
pop
and
cmc
je
cmp
add
adcl
jae
xor
mov
jnp
insl
jecxz
cltd
adc
add
pop
push
mov
xlat
test
das
xchg
pop
inc
cmp
lret
mov
adc
fldcw
inc
push
sbb
out
shlb
sahf
pop
xor
notl
sbb
fs
adc
mov
adc
lahf
add
in
outsl
pop
divl
pop
jno
adc
push
sbb
push
adc
xor
testl
ret
cwtl
xor
jecxz
sub
inc
mov
int
sbb
icebp
scas
aas
or
adc
mov
sub
cmp
and
jmp
movsl
stos
jae
sub
js
push
adc
sub
shl
addr16
xorl
mov
dec
push
pop
mov
xchg
adc
ret
pop
mov
pushf
mov
ja
mov
popf
mov
jbe
clc
fs
add
mov
pop
pop
leave
cmp
jne
mov
sub
arpl
cmp
dec
mov
mov
adc
xchg
and
popa
adc
out
or
inc
xlat
inc
imul
xchg
jge
pop
mov
xchg
mov
sub
movsl
cmpsl
divl
cmp
push
fsts
imul
mov
shll
mov
jnp
and
push
mov
ja
insl
or
aad
adc
mov
inc
mov
lods
mov
ret
push
aas
pop
icebp
fisubrl
inc
ret
mov
dec
in
pop
popa
inc
xchg
xchg
inc
cmp
sub
push
xlat
mov
adc
xchg
xchg
or
inc
add
rcll
dec
cmp
pop
call
pop
incb
or
inc
add
mov
int
adc
and
add
push
dec
mov
sub
xlat
and
add
add
incl
bound
js
shlb
mov
scas
lahf
out
push
addr16
and
jns
add
dec
negl
push
sbb
sahf
xor
std
push
dec
mov
sbb
push
lea
cmp
jae
jbe
mov
popa
add
cmpsl
arpl
lock
jne
arpl
pop
mov
iret
sbb
int
iret
mov
stos
mov
adc
xchg
xlat
pop
sbb
int
sub
jae
lahf
pop
mov
js
test
pop
add
jno,pn
outsl
xor
mov
cwtl
shl
out
xchg
aaa
test
iret
or
jnp
pop
idivl
popf
test
push
in
loopne
jns
mov
or
aaa
push
cmp
in
mov
sbb
pop
inc
pop
daa
jmp
adcl
stos
sub
xor
mov
mov
mov
inc
jno
sbb
imul
push
mov
adc
scas
mov
push
xchg
out
rcll
jbe
in
push
mov
pop
divb
mov
sti
stos
push
push
pop
mov
lods
stos
fstpt
and
push
lahf
rorl
pop
push
jmp
dec
jo
pop
movsl
fstps
sub
pop
push
adc
ret
push
mov
out
movsb
xchg
push
inc
or
adc
sub
dec
shlb
sbb
pop
stos
popa
testl
mov
in
dec
pop
repz
xorl
in
rep
dec
mov
mov
fldcw
loope
ret
in
xor
mov
ja
add
outsb
sub
dec
mov
sub
jne
mov
xor
out
mov
mov
sbb
adc
cmp
or
jmp
jge
cmpsl
lss
imul
adc
daa
cmpsb
idivl
sub
in
cmp
pop
das
xchg
xor
sbb
int3
pop
push
das
sub
dec
testb
push
push
ja
test
shll
faddl
jg
cmp
in
push
ss
pop
cmpsl
jnp
sbb
aas
cmpsl
shll
in
dec
shll
push
mov
pop
xchg
fwait
outsl
out
sbb
fldcw
loope
or
mov
sub
mov
mov
lods
popa
xchg
jnp
loop
dec
mov
nop
out
fdiv
cmp
arpl
fisubrs
out
repnz
xchg
push
ss
mov
push
repz
out
int
xor
int
lahf
loope
add
add
shll
mov
sbb
xor
cmp
das
cmpsl
popa
sbb
lahf
adc
mov
mov
adc
insl
test
arpl
lret
add
pushf
jge
out
or
ret
out
xor
addr16
dec
mov
push
xchg
into
fbld
jnp
pop
push
dec
inc
push
mov
scas
mov
lret
and
inc
cmp
push
nop
sub
rcr
jo
jnp
in
insl
shl
inc
mov
fildll
mov
call
fidivrs
cmpsb
mov
xor
sbb
popf
ret
arpl
or
or
mov
push
lret
and
sub
notl
push
push
ja
jmp
xchg
stos
imul
sbb
push
xchg
rcrb
ficoms
sti
xlat
sbb
cli
mov
mov
sbb
sbb
lea
mov
pop
mov
pusha
test
fsubs
mov
lock
dec
adc
lret
ja
sbb
pop
cs
aaa
mov
jns
cmp
xor
adc
push
cmp
mov
in
cmp
outsb
jbe
aas
cvtps2pd
daa
pop
pop
adc
xor
pop
in
and
cmp
cwtl
shrl
das
mov
pushf
aad
mov
imul
cmp
xor
mov
hlt
nop
or
pop
das
mov
mov
mov
mov
mov
mov
dec
in
fnstenv
daa
dec
push
add
mov
pop
ja
ja
mov
dec
push
scas
ret
jae
adc
ret
insb
xor
dec
lcall
in
add
add
je
mov
daa
arpl
ja
and
outsl
aaa
mov
shrl
sbb
add
gs
mov
inc
xor
fidivs
mov
imul
xchg
ljmp
not
mov
in
pushl
rorl
fnstenv
xlat
mov
test
jmp
inc
call
pushf
sti
add
inc
push
or
insl
testl
inc
sbb
mov
sbb
sti
iret
in
ja
cmpsl
jle
popf
or
jl
cmc
fdiv
sub
pop
mov
or
dec
test
push
push
pop
ret
mov
mov
cmp
push
inc
xor
stos
xchg
xchg
sub
push
add
mov
fcomps
cwtl
sub
shrb
or
call
fstp
std
fdivr
sahf
push
das
sub
push
jg
mov
addb
js
add
ds
je
push
mov
mov
mov
fsts
jbe
lods
out
std
mov
sub
shll
jbe
inc
or
inc
out
insb
clc
cmp
add
mov
xchg
out
fbld
mov
add
adc
and
push
lock
sub
push
add
jl
movsl
orl
cmp
pop
cli
sub
push
js
mov
inc
or
outsl
fucomip
ja
mov
pop
jb,pn
push
push
into
push
sub
jge
or
cmp
pop
inc
pop
mov
sub
dec
fcmovne
jne
fldl
add
sahf
jae
jp
adc
mov
in
andb
pop
lahf
movsb
inc
into
in
jge
mov
jle
sbb
add
aam
mov
loopne
pop
jne
insl
push
push
insb
adcl
push
push
push
inc
pop
cwtl
jmp
jl
mov
dec
cmpsl
aas
js
cmp
mov
add
inc
addb
push
pop
pop
call
pop
or
mov
lcall
ret
sbbl
dec
dec
mov
stos
aam
int3
scas
aad
fucomi
movsl
push
xchg
pop
rcr
cmp
js
ret
cli
mov
sbb
add
jae
cmc
adc
in
bound
enter
stos
inc
pushf
and
sbb
sub
inc
jmp
dec
aaa
int
inc
or
add
mov
imul
fwait
sbb
add
shrl
mov
lret
push
cwtl
out
mov
cli
adc
rolb
mov
clc
mov
cmp
leave
fidivrs
jl
sub
rorl
jle
and
and
cs
push
and
out
cli
jo
ja
outsb
out
clc
inc
cmp
cmc
mov
pop
xchg
jno
jmp
leave
mov
ljmp
negb
inc
shrb
cmp
sub
cmp
rcl
adc
jmp
inc
add
mov
iret
adc
cmp
frstor
inc
inc
sbb
jb
jo
into
or
rclb
test
insb
jno
push
xchg
cmp
jne
cli
subb
imulb
mov
sbb
pop
ljmp
jb
dec
pop
mov
xor
dec
dec
or
es
jge
xchg
outsl
push
mov
push
out
adc
mov
pop
nop
int
inc
arpl
rcll
add
sahf
jb
and
rcll
mov
repz
add
cmp
fnstsw
fs
cltd
rclb
dec
and
fcomps
fisubrs
aam
push
xor
dec
mov
faddl
mov
js
jno
lret
push
jno
mov
popf
out
push
add
sbb
cmc
adc
pop
cmc
movsb
xchg
and
sub
call
mov
out
xchg
add
inc
aaa
cmp
and
jp
add
les
fstpt
ret
jmp
ret
or
lock
push
mov
nop
sbb
sub
dec
cli
ds
es
push
dec
add
adc
dec
or
add
sbb
add
or
adc
ret
repnz
cltd
mov
cmovg
lds
mov
add
mov
push
push
fs
lret
sub
pop
loope
jnp
xor
das
mov
cmp
mov
pop
fisubl
sbb
es
xchg
lret
mov
ljmp
pop
xlat
arpl
pop
mov
xchg
mov
or
loop
pop
inc
inc
mov
push
add
mov
add
inc
xchg
push
pop
mov
mov
mov
or
adcl
inc
xchg
push
ret
jle
aam
sbb
pop
and
and
jle
out
test
iret
cmpb
sahf
jecxz
xchg
push
adc
std
mov
jo
mov
out
in
xorl
out
stc
mov
cltd
push
sub
pop
dec
sbb
in
cmc
idivl
push
in
and
xlat
into
fwait
nop
push
add
cld
in
inc
jo
add
adc
ja
inc
adcl
pop
movsb
mov
dec
dec
shl
adc
shll
xor
es
sub
cmp
les
clc
push
mov
push
pop
pop
aam
jb
pushf
test
lea
movsb
call
dec
jge
pop
push
aad
or
adc
shl
push
jo
push
jp
mov
xchg
ja
or
mov
dec
mov
mov
sub
bound
inc
ficompl
add
std
out
lahf
js
adc
mov
add
imul
jecxz
jno
ret
mov
cmp
aam
pushf
dec
cmpl
cmpsl
fsts
shl
div
popf
add
addl
adc
mov
sbb
shll
lea
push
add
add
jae
insl
loopne
loopne
stc
divb
adc
repz
inc
inc
mov
loope
xchg
mov
dec
xor
mov
sub
xor
mov
adc
leave
sahf
push
mov
mov
adc
bound
incl
ljmp
mull
inc
fdivl
jne
out
lret
fisttps
and
pop
lret
std
inc
pop
ja
jmp
xchg
xor
push
lret
sbb
loope
sbb
adcl
popa
jl
outsl
jno
movsl
fmul
lds
xchg
ret
loopne
pop
lcall
add
decl
xor
lahf
or
idiv
fcmovnu
adc
jno
ret
fimull
call
shrb
repz
std
pop
sbb
xor
jl
mov
mov
mov
mov
imul
in
movsl
push
ds
sub
aad
testl
je
dec
push
jae
pushf
call
filds
push
cwtl
push
in
rcll
mov
imul
jne
push
jge
fs
cmpsl
adc
lcall
mov
mov
xlat
add
ss
scas
push
mov
jae
mov
jp
mov
insb
sub
inc
pop
ds
ret
sub
es
repnz
imul
out
outsl
xor
fnstcw
pushf
fcmovb
jmp
js
jnp
inc
inc
inc
jg
ds
jp
insl
notb
repnz
mov
sub
mov
mulb
cwtl
out
call
in
pushf
cmp
cmp
jmp
lea
xchg
cmpsl
mov
mov
jns
leave
adc
sbb
inc
pusha
stc
mov
mov
mov
xchg
jecxz
xchg
scas
push
mov
mov
sub
std
aam
orl
push
in
fldl
aas
mov
or
pop
mov
jge
push
add
adc
jmp
rorb
dec
mov
out
mov
and
mov
stos
inc
mov
rolb
popa
inc
cmp
push
sbb
sbb
xor
leave
das
push
cmc
mov
jae
jb
repz
sar
fwait
pushf
push
sbb
jb
loopne
in
push
cmp
rcll
xor
ds
cmc
imul
sub
mov
enter
add
sti
xchg
adc
les
sub
mov
push
sbb
pop
movl
jbe
punpcklwd
jnp
push
rclb
pop
aam
sbb
je
sti
dec
xchg
dec
pusha
stos
mov
add
lock
push
jo
cmpsl
xchg
adc
clc
inc
sub
rorb
in
sti
pop
or
jno
mov
dec
imul
jg
lret
inc
out
rorb
incb
cli
dec
sub
imul
inc
or
add
ss
test
pushf
lcall
adc
and
and
inc
clc
jb
mov
lret
aas
sbb
adc
scas
sub
mov
dec
in
add
lea
jp
lret
enter
loop
fists
loope
daa
pop
add
push
pop
aaa
jns
sti
mov
push
sbb
push
push
lods
xor
cmp
cmpsb
pop
jbe
or
add
shrb
xchg
xor
pop
pop
stos
dec
sbb
imul
test
jmp
jp
cmc
jmp
loopne
pushf
cld
arpl
pop
aad
xchg
outsb
mov
ds
jb
add
rorl
ror
clc
mov
and
enter
jmp
push
cmp
test
cmc
movsb
xchg
out
faddl
ret
ret
and
lahf
push
fistpl
aaa
mov
cmp
adcb
pop
dec
enter
mov
cs
push
xchg
cmp
pop
lods
jnp
push
jmp
dec
inc
lods
loop
xlat
mul
mov
sub
mov
inc
shlb
xchg
add
sbb
in
inc
mov
fstpt
mov
push
mov
sub
jge
loope
xor
sbb
cs
fdivrl
push
dec
sbb
inc
xor
sub
lret
popa
mov
add
lcall
mov
movl
jae
shll
xor
ja
ret
lret
sbb
mov
and
push
mov
cmpsl
add
inc
daa
idiv
jmp
ss
push
out
int3
xchg
add
xchg
aad
out
cmp
adc
pop
loope
or
push
mov
in
and
and
call
mov
or
inc
outsl
les
xor
cmpsb
loop
mov
loop
icebp
inc
mov
jnp
loopne
or
pop
sahf
or
ficompl
pusha
xchg
jge
enter
mov
pop
push
xor
or
out
call
int
jo
adc
mov
dec
adc
jg
inc
loop
addl
inc
pop
int3
mov
cs
lcall
bound
int3
jge
lods
lock
add
dec
mov
pop
lcall
sub
sub
dec
cmp
or
xlat
ret
bound
pop
dec
jecxz
inc
mov
test
frstor
dec
ja
fucomi
inc
adc
pop
inc
push
fidivl
pop
popl
jecxz
scas
in
lods
inc
jo
push
sub
lret
sub
jp
jnp
dec
or
sbb
adc
daa
xchg
inc
pop
sbb
mov
fcompl
jno
decl
popf
mov
fld
mov
lret
hlt
loop
imul
add
lahf
sahf
or
mov
or
adc
jl
cmp
mov
pop
push
pop
fs
sbb
dec
xor
lods
jo
pop
xor
xlat
sbb
xlat
or
lret
cmp
pop
add
cmc
push
xchg
out
sub
jb
xchg
fsubrl
dec
movhps
movsl
lret
cmpsl
fimuls
mov
call
fisttpll
aaa
mov
or
les
outsb
sbb
inc
add
lcall
pop
or
inc
xchg
push
pop
pop
test
flds
in
or
clc
movl
jle
jecxz
and
push
jmp
iret
xlat
bound
int3
aad
bound
jecxz
jae
loopne
loope
dec
push
fwait
lds
rcll
xchg
movsb
arpl
jb
shrl
ljmp
into
into
cltd
push
push
xor
push
pop
sub
pop
add
sbb
and
adc
mov
sub
mov
pop
sub
add
push
hlt
jle
xchg
add
cmp
dec
pushf
cmp
inc
aam
ucomiss
and
jecxz
add
xchg
insb
fldt
pusha
mov
lret
insb
add
or
push
dec
movsb
out
xchg
adc
jge
dec
cmp
xchg
shll
xchg
or
stc
orb
cmc
addr16
inc
lea
push
cmovp
push
mov
lret
fstl
sahf
cmp
add
inc
pop
mov
jmp
cld
jmp
call
adcb
jmp
dec
scas
enter
jle
and
rorl
testl
sub
xor
lods
sbb
subb
jo
stc
jb
dec
inc
dec
jne
sbb
cmp
push
fcomp
inc
jns
push
fsts
xchg
clc
jecxz
fdivrs
fcoms
push
or
nop
loopne
daa
push
out
adc
xchg
mov
sbb
dec
ret
sub
repz
call
push
scas
daa
lock
es
cltd
out
cmp
cmpsb
pop
add
add
popaw
jno
add
clc
sbb
adcl
icebp
iret
fcomp
add
jmp
pushf
adc
aad
adc
sbb
ds
pop
xorb
stc
lods
push
push
dec
xchg
cwtl
inc
lret
ss
out
push
cmp
inc
mov
sbb
fstpt
adc
insb
sti
ret
adc
add
inc
movsb
outsl
inc
mov
mov
dec
mov
lock
inc
push
lcall
xor
push
mov
ret
enter
bound
int3
adc
fldl
jge
inc
push
adc
adc
lock
inc
pop
or
outsl
enter
rcll
pop
xchg
les
pop
cmc
in
flds
jae
insb
xor
arpl
call
jne
jae
jo
pop
mov
rorb
inc
pushf
push
jbe
and
out
cmova
loopne
das
sub
adcb
pusha
ficomps
xor
dec
pop
ret
pop
add
iret
or
sahf
sarl
add
sub
pop
nop
add
cmp
lea
out
sbb
xchg
fldcw
push
das
pop
pop
fs
cmp
pop
and
add
jnp
xor
pop
sti
mov
in
jg
dec
xor
mov
aaa
inc
imul
add
add
push
outsl
jb
mov
test
mov
jbe
cmp
add
pop
stos
or
push
bound
cltd
sti
sbb
adc
loopne
fs
aad
imulb
out
or
movsb
add
add
sub
adcl
adcl
push
xor
js
jnp
lea
rorl
xchg
cmp
pusha
rolb
jecxz
xchg
jmp
pusha
mov
or
mov
daa
outsl
sti
pop
test
out
stos
ficoml
push
mov
add
ja
mov
dec
mov
lock
fsubr
bound
fs
mov
or
cmpb
stos
fmuls
lods
adc
jb
test
add
lods
pop
push
out
mov
dec
hlt
lods
pop
aas
mov
adc
scas
xor
sbb
xchg
jnp
jg
mov
in
fucomi
fwait
clc
fidivl
dec
mov
lcall
punpcklwd
div
test
pop
call
inc
cmpxchg
popa
cmp
into
fnstsw
inc
aad
xchg
dec
and
mov
imul
mov
jecxz
daa
push
pop
loopne
rol
and
cs
cs
clc
test
push
repnz
inc
add
jmp
inc
and
mov
dec
and
movl
mov
mov
mov
xor
sbb
xor
stos
stos
aas
mov
sti
hlt
sub
fwait
pop
mov
xchg
mov
sub
and
sub
jecxz
mov
pushf
pop
jae
imul
test
sbb
jge
icebp
ljmp
repz
movsb
or
pop
sub
push
lcall
pop
shlb
lock
scas
push
mov
lods
xchg
loope
inc
add
pop
sbb
pushf
rcrl
push
mov
pop
mov
pushf
xor
or
test
xchg
arpl
and
movd
pop
inc
jo
inc
outsl
xchg
mov
jg
fucom
pushf
mov
jo
pop
inc
inc
fiadds
test
daa
pushf
pop
or
jnp
mov
bound
push
test
xor
ds
out
pop
iret
arpl
loope
push
clc
lea
outsb
add
sub
sbbl
icebp
test
rclb
jo
or
sbb
jne
pop
jp
mov
xchg
adc
icebp
imul
outsb
pop
or
pushf
sti
dec
and
fs
scas
push
pusha
enter
leave
or
lock
mov
shll
insb
sbb
clc
cmp
test
mov
and
or
in
shlb
lock
jecxz
imul
dec
sub
in
adc
push
xor
sbb
adcl
or
clc
adc
jge
pop
cs
mov
call
inc
fistpll
hlt
jne
cmc
shr
cmp
call
sahf
test
cmp
pusha
xchg
xchg
push
xor
clc
lret
fidivs
cmpsl
jno
add
pop
jno
mov
inc
pop
or
mov
pop
jmp
mov
dec
scas
out
stos
shr
xor
push
jne
jl
dec
pop
xchg
call
es
sbb
mov
jno
xchg
call
mov
out
sbb
frstor
aaa
dec
pop
aaa
push
and
fadds
xor
and
lock
xchg
adcl
movb
mov
mov
sbb
fwait
dec
sahf
xlat
outsl
notl
xlat
pop
pop
adcb
iret
dec
rclb
fimull
ret
cmp
lcall
xor
icebp
ret
mov
clc
jp
scas
adc
mov
loopne
sub
mov
and
sbb
les
mov
aaa
mov
scas
or
and
ret
xchg
jb
and
sub
fwait
lods
clc
dec
mov
pop
pop
pop
dec
sub
jp
xchg
xchg
in
fwait
push
arpl
mov
jecxz
arpl
aad
testb
push
ret
jg
cmp
jl
add
repz
paddusb
loope
imul
inc
cmp
mov
inc
roll
pushf
push
add
mov
mov
jb
xchg
mov
push
stc
pop
xor
mov
xor
bnd
fmull
dec
dec
push
es
xchg
lods
mov
push
movsl
lahf
or
iret
xor
push
daa
add
add
loopne
pop
adc
shrl
pop
enter
and
adc
aad
pusha
sub
inc
sbb
je
adc
or
push
xchg
nop
pusha
movsl
push
and
sar
fwait
mov
int
add
psrlw
push
out
adcl
leave
test
xchg
push
jg
mov
in
sub
cmpb
add
inc
repnz
jne
inc
xchg
shl
mov
popa
cmp
xor
incl
lcall
pop
arpl
pop
aaa
push
mov
icebp
call
inc
push
push
icebp
out
dec
add
push
and
das
mov
push
mov
rcrl
mov
xor
and
jbe
aad
xchg
sub
je
ret
insl
es
push
ss
xchg
add
mull
sub
sbb
and
popa
cmp
or
jge
daa
je
insb
imul
inc
jle
pop
cmp
loope
add
adc
jmp
loopne
add
or
mov
inc
or
sbb
pushf
out
push
pop
cwtl
jmp
push
inc
scas
test
jl
adc
inc
pop
adc
dec
not
rcll
lods
arpl
dec
rcll
scas
sub
adc
jae
sbb
push
cld
dec
sbb
jg
mov
cmpsb
hlt
dec
dec
sar
mov
mov
sub
push
cmp
push
ljmp
fistpll
addb
inc
pop
xor
push
xchg
adc
outsb
jne
inc
out
cmpsb
adc
dec
and
outsl
rcr
xchg
rcll
adcb
jo
shrl
arpl
decl
xor
bound
hlt
gs
mov
jmp
mov
cmp
orb
jo
push
pop
adc
scas
cltd
jp
push
jne
orb
pop
add
mov
push
in
pop
pusha
mov
mov
lea
xor
incb
pop
bound
cs
lods
lea
pushf
mov
std
adcl
loop
popf
cmp
sbb
jle
add
or
cs
jmp
fs
fidivl
add
scas
paddsb
adc
mov
lds
rcrl
pop
getsec
mov
sbb
pop
pop
sub
in
pavgb
call
fimuls
stos
mov
flds
cwtl
cli
or
sbb
jo
push
add
stos
or
dec
popa
lock
jo
jo
mov
imul
roll
or
in
ss
inc
pop
or
js
xchg
pusha
arpl
popf
rorb
popf
and
xchg
outsb
mov
sbb
sbbb
lds
js
out
xor
popa
cmp
ret
pusha
pop
xor
inc
cmp
inc
xchg
cmpsl
stos
rorb
test
ffree
cmp
jp
lcall
push
fisttpll
pop
lret
int
or
leave
pop
ja
mov
xchg
loope
push
cmp
rcrl
inc
fwait
or
adc
sbb
xchg
inc
sbb
cmpsb
xor
scas
sbb
sub
clc
add
inc
mov
mov
loope
lret
shr
jmp
jno
sub
dec
insl
pop
dec
aaa
scas
insb
ds
pop
daa
aam
loopne
add
xor
cmp
lret
jns
in
int3
adc
movl
testl
jecxz
pop
sub
sbb
ret
cmp
sub
sbb
xchg
jo
test
mov
cmp
aam
fsubs
sub
fists
adc
xlat
or
leave
lret
imul
jle
std
mov
sub
jmp
mov
loopne
push
outsb
push
outsb
fistps
icebp
outsb
lcall
decb
and
mulb
xor
dec
pop
or
ds
inc
jmp
mov
cmc
cli
push
pushf
jbe
cmp
xor
cli
dec
xchg
out
fdivrp
lock
lds
jne
ret
dec
les
sub
cmp
fs
lcall
aam
jnp
mov
inc
fmuls
pop
gs
fnstsw
loope
pop
jle
mov
add
call
xchg
fdivs
mov
mov
xor
inc
xor
lock
daa
and
rol
test
fcmovnu
popf
shl
sub
je
cmp
jne
push
xor
cmp
push
and
push
pusha
in
repnz
or
pop
inc
add
dec
test
sbb
fisubrl
xor
bound
cs
arpl
test
mov
or
lcall
aas
dec
xor
xchg
inc
rcrb
or
test
pusha
mov
movsb
dec
xlat
mov
movb
jge
arpl
loop
bound
pop
mov
outsb
roll
xlat
jecxz
dec
in
ljmp
dec
and
icebp
pop
imul
jge
int3
roll
pavgw
push
enter
jmp
add
dec
fldcw
shl
xlat
jb
and
clc
jge
jecxz
and
pop
xor
pop
push
add
push
in
les
cmc
pop
movsb
ljmp
add
add
cmp
pusha
sbb
test
xor
dec
or
ret
or
insb
int3
mov
jne
push
mov
mov
sbbb
test
shll
in
lock
imul
xor
xchg
aad
and
push
lods
arpl
xlat
fiaddl
int3
icebp
dec
fcmovnu
out
test
adc
pop
pop
xor
inc
inc
pushf
sbb
mov
sub
xlat
icebp
nop
sub
cmp
xchg
les
mov
pop
sbb
roll
mov
or
in
pop
mov
call
mov
sarl
sbb
jge
call
dec
xor
jmp
cmc
jecxz
push
pop
or
mov
pop
movsl
mov
call
subl
push
repz
push
or
sbb
adc
sbb
xchg
pop
jl
mov
inc
mov
pop
test
insb
sbb
std
adc
add
add
ljmp
push
arpl
xchg
jno
xlat
cmpsb
je
inc
xor
loop
inc
push
ljmp
enter
loopne
inc
or
add
sbb
idivl
and
out
or
pop
xchg
stos
push
pop
fisubrl
inc
inc
fdivl
inc
addl
inc
push
les
jmp
jns
xor
and
pop
movsl
test
outsl
fisubl
lahf
lcall
addb
and
mov
leave
scas
jo
scas
add
repnz
outsl
xchg
popf
fwait
test
push
jae
sbb
test
leave
mov
jmp
ret
cmp
cs
jge
xchg
addl
lods
xchg
test
or
pop
sub
call
inc
pop
test
daa
push
add
jo
lea
test
xor
outsl
dec
ds
ja
inc
cmc
pop
adc
imull
push
sbb
js
push
ret
sbb
cs
icebp
mov
sbb
cmp
jecxz
les
mov
inc
lahf
orl
jo
add
pop
adc
lea
jecxz
xchg
sbb
decl
pusha
adc
jecxz
push
pop
adc
push
daa
test
cmp
pop
and
repz
cmp
inc
jmp
idivl
jo,pn
xlat
test
sbb
jle
push
pop
mov
enter
xor
add
mov
sbb
fs
jno
addr16
lods
orl
fldl
push
jmp
sbb
in
shl
dec
add
lock
mov
loope
add
in
hlt
ret
outsl
loopne
pop
sti
fst
adc
fidivs
inc
loope
test
and
xlat
cs
mov
mov
mov
in
les
xchg
mov
cmpsb
sub
dec
cmp
and
and
addps
js
xor
stc
popf
add
ret
clc
stos
fildl
scas
addb
adc
push
push
daa
loop
lock
dec
mov
or
testl
cwtl
shrl
incl
aaa
lods
sub
adc
loop
jo
ret
adcb
adc
mov
lahf
loop
jmp
aas
dec
cmp
icebp
shr
mov
hlt
loope
or
or
and
cmc
pop
test
mov
setns
lods
fmull
les
mov
cld
inc
mov
fsts
inc
loope
fwait
out
fsubrs
xchg
pop
pop
cmp
cmp
mov
pop
repz
test
das
dec
stos
fldt
movsb
cmpsl
cmp
popa
and
aaa
cmp
mov
xchg
rcll
mov
xchg
js
mov
aam
movsb
push
jb
das
shlb
mov
xor
lea
ja
roll
roll
add
mov
push
add
ret
mov
pop
jge
testl
test
and
adc
sub
pop
pop
lods
pop
cmp
xor
cwtl
rcrl
fwait
jecxz
xor
add
testb
jecxz
test
mov
sub
sub
pop
mov
pop
or
xlat
mov
lahf
loop
test
push
fwait
js
jle
add
les
and
shrb
lcall
test
xor
lea
notb
ljmp
aam
fmull
xchg
lods
lret
and
cmp
bound
clc
int
xor
repz
sbb
and
mov
cmp
ficoml
inc
and
xchg
pop
pop
inc
push
bound
pop
loop
adc
cmpsb
pop
push
popa
mov
dec
dec
xor
push
xor
inc
cmp
sub
dec
cmp
aad
sub
sete
adc
cld
repnz
jne
cmc
js
sbb
cld
in
or
outsb
in
adc
lods
mov
pop
fmulp
push
mov
adc
pusha
mov
aas
cmpl
scas
xor
push
push
push
adc
or
push
sti
cmp
bound
int
mov
pusha
add
cmp
ret
nop
adc
das
movsb
xchg
les
rorb
adc
sbbl
or
aaa
push
lcall
xchg
pop
or
pop
rep
jnp
lahf
stos
rcrb
dec
jno
xor
add
clc
add
shlb
shlb
dec
xchg
and
imul
enter
shlb
jge
pop
dec
or
xchg
in
cmp
popa
shll
mov
das
add
dec
in
push
xorb
popa
movsb
add
mov
mov
cmp
fistps
add
lcall
mov
je
sbb
pop
pop
pop
push
cmp
adc
pop
rcrl
popa
pop
add
sbb
mov
test
push
loop
push
pop
test
mov
jno
push
push
xchg
push
dec
pushf
rorl
cmpsl
and
scas
fiadds
xor
lds
fwait
jb
xchg
adc
xchg
xchg
sbb
or
out
leave
sbb
jp
leave
fcomps
push
dec
dec
sbb
lock
out
push
or
out
jl
or
cs
push
fldl
insl
loopne
js
paddd
ret
pop
sub
or
out
push
pop
pop
push
jmp
sub
add
or
mov
out
add
or
inc
dec
mov
std
sti
add
adc
ja
jae
lods
popa
push
push
sti
push
fcomps
sbb
hlt
or
testb
das
sub
adc
mov
jno
mov
loop
inc
inc
cli
xchg
inc
xor
xor
dec
mov
mov
inc
in
cmc
jo
xorl
jo
int
cmp
test
inc
inc
sti
mov
aam
addr16
jnp
jmp
xor
xchg
cmp
lea
pop
push
scas
cmc
xor
xchg
inc
shrl
outsb
dec
test
stc
aad
sbb
xor
das
or
sub
sahf
orb
mov
bound
add
inc
jbe
inc
jp
js
loope
xor
jmp
mov
adc
xchg
rcr
push
ljmp
or
or
loope
mov
sbb
pop
negl
pop
test
mov
jge
push
bts
pop
and
fdivrl
dec
jno
call
clc
orb
mov
sbb
ja
and
negl
add
xchg
inc
mov
sbb
ret
inc
push
cmp
aam
push
movsl
repz
sti
add
gs
and
xchg
in
add
fs
out
imul
or
push
or
jno
add
repz
ljmp
adc
pop
out
in
fstl
aas
jge
or
and
loope
add
cli
outsb
adc
push
xchg
lock
jb
paddsw
adc
adc
je
stos
jp
rclb
sub
aam
fwait
mov
mov
pop
sbb
ds
adc
daa
outsb
push
pop
out
sub
cmp
loope
inc
mov
mov
pop
pop
ljmp
dec
int
bound
ss
mov
mov
cmp
push
not
cmp
insb
ret
cmp
pusha
enter
push
or
and
or
adc
sub
neg
push
out
outsl
mov
xlat
imul
mov
adc
dec
or
sub
and
add
inc
sti
mov
mov
mov
adc
jae
in
mov
sbb
out
cmc
adc
movsl
sub
addr16
hlt
pop
inc
lods
push
jo
or
mov
nop
mov
aaa
pop
add
xchg
nop
loopne
dec
xlat
add
es
jnp
cmp
xor
and
fcoml
movsb
jp
das
lahf
push
xchg
or
mov
leave
adc
arpl
pop
lods
mov
movsb
negb
xlat
dec
fnstenv
jg
push
test
jg
add
mov
outsb
loop
mov
sub
sub
add
lock
mov
rorl
icebp
rclb
and
push
sub
iret
rolb
imul
lds
outsb
mov
xchg
add
jmp
sarb
dec
mov
mov
rcrl
adc
pop
loope
and
add
ss
push
inc
cmp
mov
adc
cs
jo
addr16
mov
mov
cmpsl
mull
xchg
je
test
mov
rorb
das
sub
add
aam
sub
test
inc
sub
mov
and
push
add
adc
jecxz
fstps
movsb
or
push
push
mov
jne
testl
adc
clc
sbb
mov
js
xor
mov
sbbl
sub
xor
or
and
ret
jecxz
int
or
jnp
call
daa
pop
fcomps
and
pop
das
mov
aam
sarl
phaddw
fwait
add
jo
pushf
dec
xchg
scas
push
js
sahf
mov
mov
xor
cmp
faddl
inc
xlat
push
xor
inc
mov
jmp
xor
out
ret
dec
dec
arpl
call
test
nop
movsb
cmpl
xchg
fdiv
ljmp
inc
xor
inc
popf
pop
fchs
jl
imul
rcl
aad
inc
insb
jmp
fcmovnu
dec
mov
inc
in
aad
pop
scas
and
sbb
lea
mov
lock
sbb
int3
fcompl
dec
push
mov
ljmp
and
inc
movsl
xor
mov
jae
lods
adc
fisttpl
pop
divl
pop
test
mov
pop
rcrl
jp
insb
in
push
nop
mov
bound
pop
jns
adc
jge
inc
int3
xor
roll
pusha
push
fs
pop
sbb
adc
inc
dec
addr16
xlat
cmp
or
hlt
or
lods
add
dec
fcompl
jne,pt
adc
mov
cmp
or
or
ljmp
sbb
cmp
popa
or
xchg
push
push
jle
sti
or
js
mov
iret
pop
mov
cs
js
lds
mov
xlat
lret
sbb
push
ror
fisttpll
test
sbb
cmovge
inc
loopne
testl
fistl
jno
cmp
out
xlat
pop
sub
call
mov
int
ja
xchg
xchg
jge
xchg
stos
adc
push
inc
test
cli
bound
pavgw
test
inc
movsb
cmp
fistl
lock
xor
fiadds
adc
cwtl
ror
mov
mov
stos
add
je
or
jno
and
mov
cmc
ret
pop
inc
fwait
mov
mov
notl
stos
sarl
test
adc
repz
or
mov
lods
inc
mov
pusha
ret
leave
pop
mov
jno
push
dec
clc
call
xchg
adc
iret
or
lcall
out
int
pavgb
sub
cmpsb
jo
inc
pushf
std
xchg
push
jns
pop
das
bound
and
repz
jge
rolb
xchg
cmpb
iret
push
push
out
inc
mov
cmp
negl
ret
dec
mov
dec
ret
pop
adc
movsb
jmp
or
add
lods
rcrb
adc
pop
mov
push
stos
incl
pop
test
jecxz
push
pushf
sbb
xchg
aam
fsubs
pop
or
jge
dec
js
sbb
cli
sub
xor
imul
pusha
jmp
push
repz
int3
test
pop
out
stos
jg
mov
cmp
cmp
cmp
pop
cmp
imul
into
jle
inc
rdmsr
movsl
lods
loope
jmp
call
xchg
outsb
mov
pop
pop
sbb
movsb
pop
xlat
jl
es
btr
push
ret
add
jnp
movsl
push
pop
sbb
ret
into
testl
adc
or
adc
lret
push
arpl
pop
das
test
jmp
dec
jns
xor
loopne,pt
jno
ret
mov
and
lcall
mov
out
sub
out
cmp
pop
or
lods
push
xor
in
jmp
cmc
popa
xor
sub
adc
insl
repz
out
lock
faddl
shll
scas
mov
adc
loopne
or
movsb
sbb
out
and
jl
or
sub
dec
int
mov
dec
ljmp
sub
jo
or
dec
rorb
aam
xchg
mov
ret
iret
pop
push
inc
inc
mov
aaa
ss
cltd
dec
adc
scas
scas
enter
js
pop
aam
cmc
pop
lds
mov
aam
bound
push
fiadds
ljmp
popa
xor
push
scas
icebp
mov
mov
fcomps
test
pop
mov
and
mov
jno
mov
sub
jecxz
cmp
push
sub
dec
pop
pop
addb
and
mov
ds
add
decl
add
add
orl
ljmp
out
test
jo
mov
sub
out
ds
out
and
sbb
ret
mov
adc
push
xchg
aam
xchg
push
cmp
dec
mov
xchg
xchg
push
incb
pop
das
in
dec
sub
inc
cmp
cmp
ljmp
sbb
ljmp
or
mov
or
popa
test
aaa
mov
sbb
push
lret
sub
dec
or
pop
mov
or
cmp
push
inc
and
push
fistpl
jecxz
ljmp
fbld
inc
mov
aaa
dec
roll
adc
adc
xchg
incl
adc
idivl
roll
and
and
inc
clc
sub
sbb
or
aad
adc
loopne
cmpsb
jb
xor
jne
add
lret
insl
push
ljmp
aas
sahf
push
ljmp
xchg
mov
xor
aam
ds
xor
das
inc
push
ret
nop
push
inc
xor
sub
out
jns
push
ds
dec
data16
ffreep
in
jno
in
mov
shlb
cld
shl
xchg
push
push
adc
mov
jo
bound
loope
es
int3
mov
pop
scas
add
pusha
and
lock
outsl
out
in
xchg
lock
push
inc
sub
push
lahf
ret
roll
or
clc
ljmp
push
pop
and
lock
jecxz
add
xor
cmc
and
mov
adc
cmp
push
sti
push
hlt
test
push
and
sub
jmp
movsl
add
fsubrs
and
mov
shlb
sti
sub
fldl
ret
dec
add
mov
adcb
imul
int3
or
push
fs
sarb
xor
xchg
sub
jae
pop
je
inc
fwait
int
fld1
inc
addr16
leave
ret
pop
mov
out
push
and
es
xor
jno
ret
sub
xchg
loopne
notl
pusha
sub
ja
xor
push
mov
addb
out
dec
pop
pop
rolb
push
fcomp
std
xchg
shlb
hlt
test
and
push
ljmp
cld
jecxz
cli
daa
sbb
inc
cmp
out
pop
xlat
adc
aam
inc
jp
nop
repz
push
idiv
mov
cltd
aaa
in
fadd
inc
mov
cmp
or
fildl
cmp
push
jb,pn
ds
bound
add
daa
mov
les
push
lock
or
out
adc
pop
adc
lahf
fcoms
lcall
lods
xchg
sbb
jecxz
nop
stos
adc
add
xorb
mov
mov
std
in
fadds
inc
loopne
fwait
or
fsubrs
mov
arpl
mov
pop
pusha
xor
ret
dec
aam
mov
push
sbb
fldt
hlt
push
jecxz
cwtl
push
js
adc
scas
jmp
dec
loopne
adc
pop
push
cs
mov
push
nop
scas
into
fidivrs
xor
push
push
je,pn
jle
jp
call
jnp
add
and
leave
xchg
xchg
loope
das
lods
bound
push
lret
add
filds
lret
xchg
mov
and
std
jnp
movsb
add
add
mov
pusha
push
and
loope
imul
or
stc
call
pop
aas
push
dec
cmpsl
mov
pop
inc
stos
les
faddl
movsb
pop
adc
loopne
mov
sarb
jmp
inc
dec
sbb
movsl
add
rcll
or
lea
adc
sbb
ja
rol
pavgb
mov
cli
sub
dec
sub
sbb
orb
out
in
inc
out
leave
sahf
setl
dec
cmc
insb
icebp
mov
sbb
add
jg
adc
cld
jecxz
fdivrs
push
xchg
cmp
push
xchg
sti
mov
pop
cli
out
lcall
push
mov
xchg
fxch
daa
mov
clc
push
cwtl
cmp
movsb
shr
push
push
or
mov
dec
bound
xchg
push
gs
jb
out
hlt
rcll
or
cmpsb
ljmp
jg
adc
sbb
enter
push
and
jecxz,pn
inc
cltd
xor
adcb
inc
sti
mov
lock
sub
sbb
scas
add
xor
mov
sti
mov
cmp
or
jo
movsb
leave
in
add
ss
sub
hlt
or
jns
std
rcr
out
jo
dec
or
cwtl
lret
ds
dec
pop
movsl
xor
jge
lret
or
pop
add
inc
stos
and
pop
inc
sbb
lods
scas
arpl
mov
hlt
cmp
xor
jnp
out
adc
out
gs
mov
fcmovnb
or
movb
les
jg
sarb
mov
cmp
lock
xchg
pop
hlt
test
jecxz
daa
add
add
out
mov
xchg
movsl
addr16
lcall
cmp
cli
insb
add
icebp
adc
sbb
shrb
imul
loopne
sub
sub
push
out
call
xor
lods
ja
imul
in
or
pop
adc
sbb
xchg
scas
rcll
dec
fnstenv
mov
inc
xor
mov
add
pop
xchg
imul
les
xorl
pop
repnz
push
and
dec
sub
mov
mov
outsb
iret
pop
dec
fs
sbb
pop
rclb
xor
sub
mov
loope
sbb
cwtl
sti
gs
cmp
in
rcrl
aad
imul
test
inc
xchg
or
and
dec
sbb
cmpsl
gs
mov
jmp
mov
push
pop
popl
push
inc
syscall
jecxz
jnp
and
adc
xlat
sahf
in
rol
or
adc
pushf
call
aad
sbb
fwait
repnz
cld
add
clc
out
mov
sbb
mov
jge
loopne
sahf
pop
dec
loop
popa
in
mov
sbb
mov
jno
inc
pop
sub
cmpsl
pop
and
or
cs
dec
jns
iret
das
les
and
add
rcrl
adcl
iret
add
das
lahf
sub
mov
out
dec
sahf
adc
and
les
xor
dec
jg
pop
or
arpl
mov
xor
jl
pop
fcoms
hlt
inc
sbb
mov
fnstcw
dec
arpl
jb
add
sbb
sbb
insl
add
adc
xchg
fmul
jmp
push
push
fisttps
repnz
xchg
daa
push
jmp
mov
gs
xchg
inc
rolb
outsl
aas
push
fadds
rol
test
insb
mov
cs
test
aaa
jb
out
test
repz
sbb
iret
and
and
mov
pusha
or
pusha
and
loope
xchg
jb
push
cltd
xor
pop
push
jecxz
xchg
clc
add
adc
push
lds
iret
sbb
inc
cld
sti
movsb
push
in
int
shl
popa
mov
xchg
iret
cmpsl
lock
hlt
add
cmp
rorl
add
lods
ret
popa
lea
jle
loope
cmp
sbb
idivb
test
xor
push
xor
mov
pop
clc
xorl
dec
call
sbb
inc
push
pop
shlb
aas
out
add
jns
call
je
jg
pusha
cmp
or
mov
jnp
xchg
mov
adc
xchg
mov
mov
inc
jle
arpl
mov
mov
dec
pushf
ret
push
and
fwait
push
dec
jmp
or
xor
ds
insl
mov
stos
jne
rorb
in
jecxz
sbb
pop
pusha
push
inc
repz
jg
add
in
or
and
les
sti
cmc
ljmp
je
pop
clc
adc
jnp
push
pop
mov
cmpsl
aad
cmc
xor
outsb
ret
jge
fwait
inc
sti
loop
ret
mov
push
shll
popf
daa
cmc
int
lcall
add
std
cltd
bound
mov
imul
mov
sub
adc
cld
movsl
addr16
cmpsl
xor
push
jne
add
scas
jnp
lods
idivb
sbb
xlat
push
push
mov
addr16
insb
hlt
adc
cmp
cmp
mov
roll
sbb
repz
popa
cmp
ja
ds
movsl
mov
icebp
out
inc
or
xchg
dec
or
rorl
push
pop
js
rolb
mov
jo
stos
xchg
pop
mov
pushf
dec
loopne
out
test
nop
ss
mov
movsb
cs
fnstsw
notb
in
ret
loopne
sbb
mov
out
js
adc
xor
mov
pop
xor
adc
rcrb
dec
das
push
int
xchg
jns
jo
mov
lret
call
lret
cmp
push
js
nop
mov
pusha
cmp
pop
loop
popa
aas
in
lcall
add
mov
push
mov
test
mov
sbb
imul
fdivr
fld1
out
mov
cmp
fdivr
mov
dec
mov
mov
or
inc
loopne
pop
and
or
cmpsl
ja
xchg
negl
movb
add
out
add
lcall
clc
xor
jno
xor
xchg
jmp
loopne
rclb
fdivr
inc
mov
sbb
stos
popf
jno
pop
lods
dec
add
sbb
adc
test
pop
push
addl
and
or
sbb
ficoms
icebp
cmc
lahf
jo
inc
hlt
xor
aad
loopne
js
popa
and
arpl
ret
icebp
xchg
xor
xlat
cmp
adc
and
lcall
scas
scas
lea
imul
cmpsb
js
cmpsl
int
cs
lret
daa
inc
rol
dec
imul
lock
cwtl
xchg
dec
sti
mov
and
sbb
mov
push
bound
insl
add
adc
lds
lahf
fisubrs
fsubrl
push
xchg
insb
mov
jg
loop
cld
or
push
push
or
inc
mov
xchg
cwtl
ljmp
lock
pop
push
adc
les
lods
aad
pop
pop
mov
mov
in
or
add
push
roll
pop
ret
out
test
or
lods
mov
pop
rcrb
add
jo
cmp
jno
dec
lret
add
icebp
jecxz
adc
or
and
sbbb
xlat
aam
or
push
movaps
inc
imul
jl
pusha
aad
mov
sub
inc
pop
push
dec
nop
cmp
jo
mov
rcl
mov
jno
mov
daa
mov
pop
lahf
in
and
data16
dec
or
mov
pop
dec
bound
imul
cmp
jg
pop
cltd
add
lods
jge
stos
push
push
pop
ja
inc
ret
jno
test
jl
sti
ret
jnp
js
push
inc
sbb
jno
es
addr16
test
mov
std
inc
rol
push
imul
cmp
xor
push
out
and
lods
inc
add
adc
pop
arpl
xlat
bound
or
test
popa
cmp
add
mov
dec
and
mov
cld
xchg
xor
adc
jne
jle
jmp
sub
mov
test
cmpsb
addl
aam
popa
es
mov
pop
mov
push
adc
and
or
pop
mov
sub
loopne
mov
rorb
sbb
insl
sbb
inc
add
mov
lods
push
inc
xchg
mov
jge
or
icebp
dec
rcl
lcall
push
mov
lret
jmp
sub
fs
fistps
add
cmpsl
inc
xor
dec
testb
inc
fnstsw
jmp
mov
jmp
dec
dec
or
adc
imul
pop
or
ljmp
pop
insb
lds
fistl
in
add
pop
loopne
fidivl
pop
add
ret
xchg
push
idivb
pop
jns
stos
sub
aaa
imul
loop
popa
pop
jns
adc
and
pop
lods
dec
cmp
dec
test
and
xor
ja
jp
test
fs
mov
jmp
cmp
push
loopne
popa
and
lea
add
aam
fimull
negl
mov
or
and
xchg
inc
fldl
or
shlb
mov
jmp
and
out
loop
cmp
or
hlt
lods
das
repnz
cmp
lret
mov
insb
inc
adcl
jl
loope
adc
cmp
sahf
dec
or
dec
daa
pop
sahf
sub
xchg
jae
cmpsb
outsb
jb
test
push
inc
lret
js
pop
sarl
push
shr
test
xlat
pop
test
daa
dec
add
push
jg
push
popf
fstps
cmp
dec
cmp
sbb
inc
divb
popa
ljmp
inc
inc
mov
xchg
mov
test
in
nop
dec
rclb
xchg
pop
mov
lret
pop
mov
jae
sbb
mov
xor
adc
xchg
ljmp
lret
rcrl
loop
or
ja
fs
enter
jecxz
adc
cmp
mov
cltd
or
outsl
fcomps
sbb
sbb
out
cmpsl
mov
adc
add
mov
adc
sbb
sbb
push
out
xor
mov
movsb
jmp
push
mov
testl
je
pop
rorl
shrb
movsl
and
bound
pop
or
lods
das
or
sahf
mov
inc
pusha
hlt
pushf
sahf
lds
dec
sub
test
mov
negb
xchg
cltd
movsl
adc
fimull
mov
adc
add
jbe
movsb
ror
divb
stos
inc
xchg
jns
jmp
cmpl
mov
push
aam
loope
fists
xor
adcl
lock
mov
daa
test
insb
pop
lahf
mov
imul
test
xor
pop
xlat
js
hlt
lss
pop
test
into
repnz
mov
push
ljmp
test
adc
popf
cmp
jp
push
inc
mov
xchg
aad
push
lea
jecxz
nop
scas
mov
shrl
or
mov
clc
mov
pop
int
arpl
and
lock
lret
inc
cs
outsb
stos
adc
scas
outsl
popa
xor
pop
or
lret
add
ret
int
sbb
test
test
mov
dec
pusha
mov
dec
dec
pusha
adcl
sarb
in
fisubrs
jnp
cs
mov
call
pop
xor
cmp
jno
pusha
pop
cmc
out
cmpxchg
js
inc
jmp
lock
add
cmpsb
adcb
push
jecxz
outsw
xor
ss
mov
adc
cld
xchg
js
ret
or
mov
inc
inc
das
sbb
lds
arpl
shlb
mov
jg
pushf
or
mov
sbb
fwait
jae
push
repz
outsl
rcr
outsl
js
xor
nop
sbb
adc
mov
cmp
dec
dec
imul
dec
pop
push
rolb
loopne,pn
add
rclb
imull
xor
xchg
rolb
ss
add
cmpsb
insl
push
xor
loop
adc
push
test
fisttps
jmp
clc
push
fwait
inc
test
push
rcll
fwait
test
das
nop
xchg
lock
sbb
gs
add
sbbl
icebp
push
loopne
or
mov
fisubl
stos
movsb
push
mov
rol
inc
test
mov
bnd
out
icebp
jmp
cmp
das
loop
add
mov
fstp
xor
pop
ljmp
adc
popf
shrl
adc
lods
ss
movsb
pop
mov
addb
icebp
int3
and
adc
or
gs
je
out
cmp
xchg
mov
ret
push
sub
pop
les
xchg
arpl
dec
bswap
xor
movsb
aad
mov
call
push
or
adc
test
sub
call
push
das
arpl
mov
les
dec
inc
incl
dec
or
sarb
dec
dec
dec
jge
cmp
add
test
call
dec
clts
das
xor
or
xchg
or
push
inc
lods
mov
cs
popa
dec
mov
sbb
add
sbb
mov
sub
imul
out
out
je
shlb
pushl
jo
fstl
add
jmp
daa
icebp
popa
imul
push
out
outsl
adc
adc
rclb
sbb
arpl
add
mov
inc
xchg
inc
pushf
sub
inc
xor
sub
add
gs
out
pop
pop
aaa
ret
jmp
mov
cmp
fildl
mov
jmp
xlat
xchg
pop
add
add
popa
arpl
or
push
addr16
js
lds
xor
imul
loopne
push
or
sub
and
cmpsl
jl
dec
ss
int
into
add
sub
loope
dec
ja
add
je
add
adc
mov
es
mov
popa
push
sbb
push
ret
cmpsl
sti
outsl
lds
mov
dec
fistl
add
adcl
std
addr16
into
or
sti
jnp
arpl
xchg
daa
and
jo
jl
xor
mov
adc
xchg
lcall
aaa
sbb
adc
or
mov
pop
pop
jecxz
mov
and
mov
popa
aaa
dec
sahf
cmp
mov
bound
rcrl
pop
xor
repnz
jne
cmp
imul
xor
pop
xchg
jge
sbb
sub
push
inc
mov
push
cs
add
or
jmp
or
push
cli
lods
cmpb
push
loop
adc
sbb
int3
imul
shrb
push
cmp
popa
out
fidivs
or
lcall
jg
adc
stos
lock
inc
js
add
jbe
push
adc
sbb
sub
test
adc
cmpsl
subl
and
pushf
add
insl
mov
jo
sbb
add
jmp
jmp
ljmp
arpl
dec
test
inc
and
cmp
sarl
dec
lcall
bound
lock
adc
jns
rolb
sub
add
inc
aad
lret
movsl
pop
push
sbb
sbb
inc
jo
mov
mov
movl
in
fwait
jmp
mov
mov
ds
mov
leave
addr16
fildll
cmp
das
push
enter
popa
and
popf
jg
mov
fildll
pop
faddl
loopne
aas
jno
popa
test
cmp
or
push
loop
push
cltd
scas
pop
sahf
filds
or
mov
sbbb
test
aaa
int
dec
inc
je
pop
cmp
ret
shl
add
mov
mov
dec
dec
mov
outsl
out
mov
lea
sarb
mov
jmp
pop
cmpsl
sub
dec
jecxz
mov
jae
sbb
push
pop
sbb
ret
mov
mov
es
fsts
or
sarb
inc
mov
shrl
sbb
icebp
stos
scas
repz
test
cmpsl
pop
sbb
xor
xor
xorl
mov
lods
call
sbb
div
add
out
in
add
dec
fcomps
jg
out
add
add
lret
test
mov
push
xor
jecxz
jae
mov
sbb
leave
xchg
das
ljmp
mov
mov
ret
lods
popa
dec
leave
imul
je
dec
pusha
shlw
mov
je
xlat
fdivr
sub
outsl
imul
cwtl
push
push
dec
push
and
enter
and
jecxz
inc
inc
fwait
das
lea
mov
aaa
push
in
push
mov
lods
mov
aaa
push
cmp
hlt
pop
mov
dec
ret
cmp
add
loope
xchg
push
iret
mov
cmp
arpl
fisttps
xchg
sbb
adc
pushf
pop
inc
imul
in
stos
jnp
sub
xchg
inc
jo
adc
xchg
fbstp
mov
gs
iret
xor
fimuls
mov
xor
or
mov
mov
adc
mov
dec
sti
xor
inc
pop
int
sbb
pop
pop
iret
inc
inc
call
inc
in
inc
cmp
not
rcll
les
out
inc
inc
leave
inc
xor
sub
mov
sbb
shlb
bound
pusha
jbe
jo
popa
cmp
mov
push
inc
pushf
out
sbbl
inc
mov
push
mov
imul
xchg
xor
mov
adc
sub
sti
int
pop
test
mov
lcall
shl
imul
adc
and
aad
into
adc
mov
stos
xor
sub
add
mov
repz
xlat
loopne
js
rcl
pop
dec
stos
add
scas
and
and
or
add
inc
jne
mov
bound
mov
lret
sub
sub
push
adc
add
adc
add
inc
jo
in
jb
scas
loope
leave
sub
push
jecxz
rcrl
loope
es
mov
decl
mov
mov
cmc
pop
cmc
fstpl
sbb
pop
inc
pop
cmp
je
aaa
cmpl
push
int3
xor
dec
jle
test
sbbb
lock
or
add
sbb
adc
test
inc
add
jge
popf
movsb
push
jge
stos
and
jbe
or
sub
fwait
jbe
cmp
aad
ljmp
stos
test
inc
outsb
movsb
xchg
dec
stos
jbe
scas
push
or
fwait
divb
mov
jge
ja
decl
out
fwait
cmp
xchg
xchg
je
les
getsec
ljmp
daa
jmp
add
mov
iret
lock
shr
fcompl
mov
ljmp
cmp
sbb
nop
jo
pop
inc
cs
iret
addl
stos
in
lahf
sahf
mov
dec
faddl
lods
mov
mov
call
add
cmp
andl
icebp
ja
inc
lods
bound
js
ret
adc
sub
loopne
mov
inc
jno
push
mov
les
xor
ret
fisttps
cmpsl
rorb
mov
popa
pusha
test
rolb
icebp
movsl
aad
adc
sbb
jbe
inc
and
push
dec
data16
neg
push
push
dec
adc
and
popa
pop
dec
push
loope
cmc
and
lea
pop
iret
rolb
in
sbb
add
arpl
lcall
adc
loope
xchg
scas
dec
xorl
nop
add
jae
push
loope
jns
ss
cwtl
mov
xlat
mov
mov
sub
fldcw
push
jmp
fisttpll
cld
js
scas
hlt
inc
xor
sbb
jno
mov
xlat
mov
or
push
loop
test
jle
int
out
loop
mov
les
and
out
jno
jmp
xchg
and
popl
movsl
mov
das
cmp
fstpl
jne
clc
and
iret
adc
aaa
jecxz
or
fnstenv
imul
and
cmp
add
add
subb
jae
jp
add
xchg
mov
pusha
sbb
or
sahf
shlb
ret
push
jbe
xor
stc
jmp
push
or
sbb
sbb
sbb
loop,pt
push
hlt
popa
fwait
pop
dec
cmp
ret
adcl
xor
insl
and
lcall
and
xor
sbb
and
cmp
add
xor
mov
out
iret
clc
sahf
enter
sbb
cltd
popf
add
inc
ja
adcl
loopne
push
outsl
out
mov
js
fstpt
xor
adc
mov
or
xor
pop
mov
mov
scas
es
pushf
outsl
mov
xchg
mov
sub
ret
pop
dec
pushl
inc
or
mov
add
jecxz
jno
cltd
loope
in
sbbb
jmp
fwait
adc
pop
outsb
adc
push
dec
imul
scas
push
and
adc
mov
sub
test
push
mov
out
mov
out
addr16
adc
cmp
es
inc
pop
loope
insb
popa
adc
xchg
push
in
adc
cmpsb
cmpsl
lods
sbb
mov
fwait
retw
outsl
push
loop
mov
pop
and
mov
pop
mov
push
rorl
fbstp
and
outsb
sar
sub
jnp
pop
xchg
rorl
js
add
jecxz
leave
ret
fnstsw
fs
push
cltd
shrb
gs
push
jge
or
bound
lock
and
sbb
fwait
sar
jo
lods
dec
sub
jmp
mov
xor
rcll
and
or
in
mov
and
pop
adc
test
clc
mov
out
xor
popa
pop
add
jmp
in
jo
add
mov
popf
arpl
shrb
jmp
and
pop
jecxz
adc
sub
loop
mov
lahf
cmp
mov
pop
lahf
push
insl
sub
lock
xchg
push
out
repnz
xor
int
dec
mov
int
lahf
test
add
push
and
cmp
jae
add
push
sbb
push
lods
push
icebp
inc
jecxz
mov
xor
arpl
add
mov
add
sub
cmp
push
push
arpl
adc
das
dec
std
out
lret
scas
dec
xchg
pop
pop
push
pusha
aad
push
dec
xchg
and
jg
mov
divl
pusha
add
movsl
and
sub
shll
add
mov
or
test
fistps
movsl
rcrb
or
pop
jmp
mov
or
mov
push
jp
icebp
mov
sub
insl
addl
sbb
dec
cmp
imulb
inc
xor
inc
lcall
push
mov
add
pop
mov
add
sbb
cmp
xlat
js
loopne
sub
add
cmpsl
and
dec
push
mov
aad
push
cmp
push
or
clc
inc
pop
xchg
test
adc
mov
jae
or
mov
stos
add
imul
and
add
aas
sub
loope
mov
rclb
mov
bound
mov
add
mov
shll
pop
outsb
lods
insl
stos
push
pop
idivb
adc
fisttpll
inc
loop
cmp
outsb
mov
iret
xchg
sbb
push
popf
arpl
add
ds
mov
sbb
and
jne
or
lret
or
imul
mov
dec
js
mov
adc
push
pop
aam
jae
ja
jle
push
fbstp
inc
sbb
add
push
testl
das
mov
popl
fstl
out
jb
je
ljmp
imul
jnp
mov
mov
outsb
pop
cmp
cmp
lret
xchg
loop
popl
add
lods
es
cmp
pusha
ret
add
sub
push
push
ret
arpl
mov
or
mov
jle
fsubrl
test
fdivs
mov
mull
xor
add
inc
xchg
call
adc
push
cld
mov
lds
cmp
data16
inc
rclb
in
mov
adc
or
loopne
dec
fcompl
jne
mov
add
inc
dec
cmp
jecxz
mov
imul
sbb
cmc
and
sub
rcrb
call
fldt
sub
add
shrl
imul
push
sub
aad
loope
out
mov
mov
adc
scas
mov
and
mov
mov
cltd
imul
dec
dec
cwtl
cmpsl
mov
add
xor
jmp
or
loop
add
sarb
jge
cmp
or
divl
in
fldenv
fcmovnu
loop
imul
sahf
cmp
jp
shlb
or
leave
fistpl
faddl
test
popf
sub
push
enter
data16
push
jns
scas
push
push
pusha
cmc
xchg
cmp
scas
lcall
divb
scas
addr16
sbb
fistps
add
cmp
sarb
fmull
stos
pushf
push
mov
adc
xlat
aaa
pop
lds
adc
push
cmpsb
jnp
add
dec
push
frstor
add
mov
sub
pop
test
mov
add
rclb
or
jl
jmp
fbld
inc
stc
sub
andl
jo
popa
sbb
add
leave
ja
xchg
hlt
lods
negl
sub
push
daa
ja
lcall
sub
mov
add
fwait
add
xlat
call
cmc
dec
push
mov
mov
sub
mov
xlat
mov
add
xor
call
pusha
sahf
es
cld
or
add
jnp
sbb
push
or
lock
sbb
je
cmp
inc
lahf
lock
gs
movsb
mov
add
sti
int3
js
ds
scas
aad
mov
adc
cld
add
popa
fstpl
add
ret
loope
pop
push
mov
ret
cmp
adc
lcall
and
movsb
jnp
mov
xor
mov
mov
fwait
cltd
aas
mov
add
pop
cli
jns
sub
push
add
jmp
ljmp
aad
in
mov
dec
add
or
push
cld
or
inc
dec
rcrl
sbb
inc
xchg
rolb
add
rolb
add
imul
in
add
xchg
scas
sbb
fwait
or
adc
fisubs
inc
loopne
ret
lcall
push
leave
adc
inc
push
pop
inc
fadds
popf
popf
lcall
repnz
sbb
push
cmp
xor
sub
mov
dec
or
jbe
in
fists
xchg
and
addb
repz
pop
jle
and
inc
in
enter
xor
cmp
jp
and
cmp
and
es
popa
pop
xchg
cmpsb
ljmp
add
insb
sbb
push
jl
mov
sub
sbb
ror
ja
iret
stos
adcb
jge
fimull
pop
mov
pop
paddsb
mov
sbbl
add
add
mov
ret
arpl
push
lea
sbb
or
in
fwait
pop
ss
mov
sub
nop
lcall
pop
jns
xlat
xchg
mov
xor
sub
mov
inc
jno
mov
pop
cwtl
fstpt
xchg
lods
test
jno
push
lock
mov
mov
and
pop
pop
pop
jp
inc
xchg
mov
xchg
sbb
es
jge
stos
xchg
fwait
mov
inc
sub
xchg
dec
call
pushl
push
xchg
inc
cmp
pop
jge
sub
jmp
stos
inc
mov
mov
xchg
mov
paddq
test
xchg
mov
jmp
xor
roll
xor
pop
push
adc
ret
sub
lock
jno
sbb
lods
sbb
leave
mov
stos
mov
sbb
xor
push
lds
jno
hlt
fucom
mov
shl
addr16
in
aaa
xor
aam
or
adc
mov
adc
fadd
jne
inc
jge
inc
mull
cmp
jl
and
inc
add
cmp
test
adc
dec
repz
test
push
in
fstpt
ja
xor
andl
movsb
cmpsl
popa
testl
mov
cmp
cmp
fidivl
inc
gs
mov
ljmp
push
ret
clc
or
fnstsw
iret
or
cs
fstpl
push
jbe
add
lret
popa
pop
pop
adc
add
dec
jp
sti
outsb
shlb
xor
das
mov
sbb
xchg
push
jbe
leave
shll
sbb
xor
call
pushl
add
pop
std
jb
xchg
adc
mov
inc
xchg
imul
dec
jne
icebp
add
mov
pop
pop
inc
jne
mov
push
jp
ret
pop
jmp
pop
sbb
fmuls
inc
iret
mov
xor
and
lods
push
fstpl
adc
jecxz
loope
jecxz
add
sbb
jge
sbb
jb
rolb
xchg
std
and
jbe
pop
xchg
test
jecxz
mov
pop
loopne
xchg
sbb
xor
add
add
jno
xchg
or
xchg
idivl
in
shll
pop
and
sub
int
fldenv
inc
popf
xchg
sahf
inc
addr16
mov
pushl
and
or
js
sbb
frstor
cwtl
pusha
pop
inc
insb
pop
xor
imul
mov
jne
adc
loopne
cmp
rcrl
adc
andl
sbb
mov
mov
push
mov
daa
push
sub
mov
mov
jecxz
and
pop
pop
orb
inc
inc
loopne
sahf
or
xchg
outsb
and
sub
dec
xor
fcomps
sahf
repz
mov
ss
daa
push
mov
dec
fists
or
dec
shr
gs
inc
xchg
ret
rcll
scas
imul
pop
mov
ret
out
loopne
call
pop
mov
fwait
and
xchg
bound
sahf
xor
cs
dec
xchg
loopne
and
mov
inc
pushf
mov
test
cmp
adc
lea
jae
pop
adc
and
mov
mov
mov
push
dec
call
mov
mov
xchg
sbb
and
loopne
repnz
cltd
sbb
dec
sub
jg
ret
das
add
test
mov
dec
aaa
imul
rolb
cmp
xlat
jle
push
pop
and
sub
movsl
mov
adc
push
and
pop
imul
pusha
movhps
and
dec
dec
mov
call
testl
push
xchg
adc
adcb
pushf
mov
xor
lds
scas
lods
js
mov
lcall
fs
push
or
call
or
push
xor
or
ret
mov
pop
or
arpl
inc
push
jne
loope
cltd
xor
inc
add
mov
inc
jl
sub
es
pop
xlat
movsb
inc
jne
xchg
notb
test
fstl
xchg
popa
add
pusha
rolb
pop
sub
gs
xor
mov
mov
or
icebp
mov
adc
inc
cmp
dec
jg
rcll
cmp
mov
dec
xor
lock
adcl
test
pop
test
xchg
fsubs
xor
gs
loopne
stos
sbb
lods
dec
push
pop
dec
add
inc
loope
inc
pop
inc
ljmp
xorb
xchg
aaa
fnstenv
mov
test
pop
loope
sbb
popf
adc
and
mov
roll
push
or
test
mov
sbb
or
lcall
stc
sbb
pop
pop
mov
stos
pop
lcall
dec
lea
fildl
out
pop
scas
rclb
int3
or
add
mov
call
push
push
into
push
xchg
sbb
sar
jne
popf
add
and
xchg
int
imul
mov
jno
pop
pop
xchg
lret
fimull
push
aad
sbb
pop
mov
dec
cmp
scas
pop
add
dec
inc
ret
leave
add
add
xor
outsl
xchg
mov
or
cwtl
lods
sbb
mov
and
adc
xlat
add
data16
addb
and
movsl
jg
lret
and
aas
lahf
movsl
add
and
bound
lahf
cmp
movsb
and
rcr
lods
mov
add
movb
iret
mov
fisubrs
int
inc
out
out
fstl
test
cmp
out
push
xchg
or
mov
dec
std
add
push
loope
push
add
cmp
adc
rcrb
rcr
popa
pop
sbb
shrl
jecxz
inc
push
mov
or
add
and
addr16
out
inc
xchg
ret
inc
jl
xchg
test
scas
pop
xchg
cld
stc
inc
pop
sub
xchg
cmp
xor
lods
and
fst
ss
inc
jae
loop
int3
lcall
jmp
inc
inc
leave
incb
cmp
dec
les
out
push
into
push
add
cmp
pop
xchg
stc
lret
or
jo
negl
push
jecxz
inc
inc
test
and
inc
shll
test
pusha
inc
inc
and
or
mov
aam
aam
push
js
add
or
and
test
roll
shl
sti
fmuls
push
pop
sbb
cmp
adc
jle
xchg
icebp
pusha
push
or
xor
int
adc
arpl
aaa
hlt
mov
dec
xor
mov
xchg
stos
pop
cmp
jmp
dec
scas
pop
and
adc
inc
mov
je
out
lods
sub
and
pop
les
in
add
mov
sbb
call
ret
stos
xchg
xchg
sar
outsl
xor
mov
fwait
pop
inc
dec
add
mov
jo
stos
add
jecxz
lods
les
add
pop
aad
loope
mov
xor
fwait
hlt
xor
loopne
sbb
ljmp
fdivl
mov
das
into
mov
mov
xor
and
inc
and
mov
cmpl
adc
sub
decl
sahf
push
xor
adc
jecxz
jae
test
pop
ret
movsb
push
sub
sub
add
xchg
inc
lahf
ret
lcall
pop
mov
xchg
rclb
mov
jnp
dec
sbb
sub
sub
iret
rcrb
or
aad
imul
add
or
roll
pop
pop
add
mov
sti
int3
pop
sbb
adc
clc
test
fs
xchg
xor
sahf
dec
cmp
stos
and
push
test
or
mov
mov
pushf
push
ret
cmp
mov
dec
dec
add
mov
fisttpll
imul
loope
mov
sbb
shrb
cmp
roll
sbb
mov
inc
stc
ds
or
pusha
out
dec
sbb
jecxz,pn
cmp
mov
and
add
or
or
push
adc
pop
sbb
mov
pop
gs
pop
rolb
cmp
inc
jo
js
push
in
xchg
xor
lds
cmp
mov
inc
sbb
and
adc
or
fcoml
mov
mov
daa
mov
arpl
clc
push
cmpsl
or
ud2
ret
loopne
in
mov
xlat
adc
mov
dec
movsl
push
lock
inc
gs
jmp
sbbb
mov
push
jmp
and
xor
adc
ss
push
aaa
mov
push
insb
sbb
inc
sub
jl
jp
popa
cld
jae
inc
sub
in
push
into
and
push
mov
test
add
push
mov
sbb
add
cli
xor
bound
loop
cmp
add
lock
mov
dec
loope
mov
xchg
test
pop
scas
outsb
hlt
iret
inc
outsl
push
notl
pop
and
sub
dec
jns
cmp
cld
sbb
ret
loope
or
dec
loope
sbb
or
dec
or
sub
and
jno
mov
and
loope
fimuls
filds
lcall
andl
xchg
out
fidivs
jno
popa
jns
and
mov
int
jb
icebp
adc
mov
jp
decl
clc
ret
or
int3
push
pop
jge
out
mov
inc
jl
cmp
cmp
pop
add
pop
xor
inc
add
push
and
lret
sub
out
adc
pop
frstor
roll
mov
inc
add
aaa
inc
inc
lods
shl
ret
test
xor
test
out
adc
xchg
dec
and
jecxz
lcall
jg
cmp
mov
ss
es
imul
pusha
mov
cli
test
xchg
lock
aas
xlat
or
and
mov
xchg
divb
rolb
xchg
dec
xchg
nop
push
adc
subl
or
rcll
push
add
jecxz
loope
pusha
and
pop
mov
lock
inc
into
lds
bound
xchg
popf
pop
ja
push
outsb
sbb
mov
shl
mov
fs
xchg
inc
testb
adc
hlt
sbb
mov
sti
imull
cmc
fs
out
sbb
xor
jno
jge
rol
lret
add
cwtl
mov
das
inc
cli
out
push
jo
push
xchg
data16
sti
and
cmp
sbb
mov
loope
xor
xor
test
mov
mov
or
movsl
arpl
mov
fmuls
pop
aas
add
lock
xor
in
insl
mov
and
push
sub
lock
mov
popa
or
sub
pop
sbb
fcomip
pop
or
xchg
xorl
imul
int3
push
xchg
cmc
arpl
mov
out
ja
outsl
lret
add
loope
xchg
add
psubusw
cmp
dec
popa
push
pop
add
push
dec
sbb
loope
jmp
das
cmp
sub
inc
cmp
sbb
test
stc
or
sub
mov
out
push
fdivl
pop
inc
xor
lea
mov
pop
jno
pop
rclb
mov
stos
mov
xchg
jge
cld
cmp
push
sar
mov
icebp
dec
lds
dec
adc
pop
adc
les
fistpll
movsb
scas
xlat
xor
lahf
out
imul
cmp
and
mov
sahf
inc
in
inc
repz
inc
cld
mov
mov
adc
movsl
push
jg
xchg
lock
lods
es
js
lods
push
aad
je
push
and
inc
mov
test
pop
xorb
xlat
leave
popf
jp
push
aam
cmpsl
mov
adc
loopne
pop
mov
push
ret
or
pop
or
xor
and
xchg
and
adc
cwtl
mov
out
xorl
cmc
pop
shlb
xchg
movsl
hlt
mov
jb
lock
add
pop
shlb
mov
cli
std
sbb
inc
repnz
dec
cwtl
add
notl
out
jge
dec
dec
add
mov
mov
and
clc
fnsave
inc
jmp
inc
inc
push
xchg
or
or
addl
call
cmp
insl
dec
cmp
and
movsl
dec
fs
out
sub
fildll
adc
cmp
rol
int3
xor
mov
orl
sbbl
out
out
adc
dec
sub
in
ljmp
stos
lods
and
arpl
fcompl
pop
mov
mov
mov
cld
xorb
and
mov
sar
in
push
adc
imul
jns
cmp
aad
pushf
cmp
icebp
cmc
aaa
cmp
ret
mov
int3
ret
test
sbb
adc
js
sti
repz
ljmp
mov
mov
jbe
xchg
adc
pop
xchg
xlat
mov
inc
sub
and
pop
shlb
lds
clc
popa
sarb
movsb
out
int
push
adc
mov
mov
in
xor
xchg
sbbl
adc
xor
mov
in
sub
mov
xor
inc
jge
sbb
push
inc
xor
in
ljmp
lods
cmp
jmp
mov
mov
popf
push
lret
mov
loope
xchg
shrl
xchg
adc
femms
sub
push
mov
sahf
mov
sbb
xor
xor
out
dec
testl
jp
pushl
ret
cmp
mov
rorb
push
push
inc
lret
xorl
lea
test
fnstcw
je
test
and
and
pop
inc
adc
jns
mov
test
pop
test
ja
test
cmpsl
sub
sbb
push
sti
inc
push
mov
loope
push
hlt
rclb
and
xchg
divl
add
lods
sbb
cmp
xchg
mov
in
fsubrs
scas
push
leave
jge
cmp
sarl
sub
dec
mov
sub
xor
test
jmp
jnp
adc
and
push
mov
push
fwait
adc
test
pop
scas
or
cmc
pop
in
icebp
or
les
adc
repz
out
sub
popa
lods
ss
push
addb
movsl
or
outsb
movsl
movsb
jl
add
add
dec
cs
lock
sbb
inc
jns
mov
test
lret
mov
mov
push
iret
mov
je
mov
roll
jecxz
or
filds
aam
xchg
mov
lods
xchg
pop
out
mov
sahf
or
ljmp
movsl
inc
loopne
dec
test
fisttpl
mov
icebp
cmpsb
push
idivl
adc
push
sub
push
aad
dec
or
fadd
xlat
pop
and
jo
loope
lods
sbb
rorb
icebp
sbb
cmp
or
test
push
xor
mov
sbb
xor
mov
fcmovnb
xlat
fildl
pop
bound
push
sbb
rcr
and
faddp
xchg
lds
enter
gs
jmp
xor
ss
fwait
sti
adc
rcl
bound
fisubrs
rcrb
lea
mov
aad
sbb
cmpsb
pop
inc
sbb
push
push
insb
pop
loopne
inc
ret
add
inc
adc
lcall
or
adc
mov
inc
add
jmp
and
stos
sti
popa
sbb
lret
sbb
stos
sbb
ret
sub
push
push
sbb
jno
sub
mov
aaa
mov
mov
jle
and
or
sahf
mov
sbb
lret
out
out
xor
xor
lock
sub
ftst
arpl
jb
imul
mov
or
imul
cmp
dec
ljmp
adc
or
dec
pop
dec
and
pop
push
pop
loop
sub
addr16
lock
xchg
inc
testl
sbb
lret
fmull
sbb
imul
jmp
sub
adc
outsb
imul
or
mov
add
dec
fmul
or
ret
and
je
repz
imul
in
sub
dec
push
adc
cs
xor
cmp
cmc
es
push
mov
data16
stos
xchg
cmc
jne
fistps
das
aaa
bndstx
lcall
sub
inc
adc
adc
in
jbe
xchg
or
push
pop
dec
xchg
adc
shrl
clc
psubb
jno
xorb
cmpsb
sub
pop
jmp
out
mov
xor
xchg
fidivrl
jecxz
push
je
sub
mov
or
jae
inc
add
push
lea
jno
iret
pop
sub
roll
sbb
add
fiadds
cmp
in
jno
test
test
mov
or
lcall
call
and
adc
pop
dec
loope
mov
push
dec
outsb
imul
and
mov
jecxz
in
inc
push
call
shl
aaa
mov
sbb
xchg
clc
es
movsb
pop
int
xlat
mov
pop
ret
call
add
jo
out
push
out
inc
insl
sbb
movsl
pushf
movsl
mov
or
mov
fcomps
sbb
nop
xchg
aam
jae
dec
repz
enter
rcrb
inc
sub
sbb
dec
out
lcall
and
daa
fbstp
in
subb
mov
ret
mov
mov
mov
ret
fldlg2
adc
ljmp
loope
lcall
repz
xchg
test
fimuls
sbb
ss
arpl
push
pop
jbe
inc
push
fwait
pop
add
jb
fidivrs
dec
cmpsl
sub
xchg
js
rorl
ja
jns
jl
or
mov
sbb
inc
mov
push
outsl
adc
bound
pop
fadds
das
in
and
add
adc
or
and
cwtl
mov
or
jno
sbb
lcall
scas
jge
dec
or
pop
inc
inc
cmp
dec
and
std
and
gs
push
rcrl
cmp
int
es
and
in
and
cltd
shrl
mov
xor
xchg
mov
inc
hlt
popaw
loop
dec
lcall
inc
and
inc
insb
sbbb
add
fwait
or
xor
js
xchg
inc
out
rol
jns
fistl
repz
call
add
inc
adc
xor
mov
or
jle
mov
in
and
leave
ja
ret
mov
inc
jnp
pop
ret
arpl
into
push
adc
pop
loope
stos
ljmp
cld
fcmovbe
cmpsb
mov
inc
fldenv
es
dec
ljmp
push
arpl
jmp
mov
or
bound
add
in
cwtl
mov
mov
cmp
xlat
test
sbb
and
xlat
fildl
sbb
adc
fstps
add
pop
fbstp
pop
pop
lds
pushl
mov
into
sbb
mov
xor
push
or
cmc
adc
shrl
je
lea
sti
jae
mov
xchg
push
sub
xor
test
aam
in
ret
popa
jecxz
nop
mov
push
and
cmp
adc
xchg
shll
xchg
xchg
adc
jl
adc
xchg
popa
rorb
inc
dec
mov
push
sbb
pusha
lock
and
push
inc
pop
andl
addl
jae
adc
mov
adc
ljmp
outsl
add
imul
es
addb
sbb
inc
je
popf
jl
das
or
data16
hlt
insb
ret
cmp
aaa
sub
push
popa
xchg
inc
dec
popa
cmp
sub
cmp
dec
sbb
adc
mov
mov
aam
inc
das
pusha
add
or
pusha
pushf
in
test
jnp
jno
jae
stos
enter
mov
js
adc
pop
xlat
pop
or
or
cltd
pop
cmc
lea
frstor
das
outsl
sub
enter
inc
xchg
lods
out
sbb
xchg
or
adc
sub
test
sahf
shll
loopne
outsb
into
inc
push
fnsave
dec
loopne
lret
push
das
add
pop
jmp
mov
push
adc
lahf
cwtl
movsb
add
adc
inc
loop
jmp
adc
or
mov
xchg
push
pop
cmp
push
xchg
sbb
pop
add
or
sub
ljmp
adc
sbb
or
dec
xchg
xchg
mov
in
pop
add
push
pop
add
hlt
mov
adc
pop
push
fwait
iret
push
mov
mov
addl
mov
dec
jecxz
leave
and
mov
mov
dec
icebp
push
jne
sub
dec
xchg
cltd
push
ja
mov
dec
lock
bound
outsl
andl
mov
adc
popa
sub
sbb
cs
in
jmp
leave
cltd
sbb
add
sbb
sub
sub
rolb
cmp
jmp
ror
sti
sub
data16
sbbl
sub
lret
and
mov
fs
cld
sbb
inc
ficomps
mov
fcomip
dec
sbb
jne
cmp
lods
ficoml
stos
jno
sub
out
les
pop
pop
xchg
bound
pop
sbb
or
xlat
push
pop
inc
ret
ret
jge
ret
inc
pop
jns
imul
mov
subb
sub
xchg
xor
push
inc
cwtl
xchg
push
push
and
sbb
cmpb
sbb
or
push
add
and
fiaddl
movsl
loope
rol
push
cli
sub
inc
or
xlat
fists
or
xor
sbb
mov
push
or
add
das
sbb
jo
jg
mov
mov
cmp
pusha
bound
popa
adc
orl
clc
adc
testl
js
sbb
js
js,pn
int
inc
add
lret
test
inc
pop
push
push
sbb
mov
cmp
inc
push
jecxz
jge
dec
lret
jo
push
jecxz
or
dec
and
sub
xchg
add
mov
mov
and
loop
lods
and
fdiv
sahf
push
adc
pop
jmp
adc
popa
push
or
bound
loope
and
daa
pushf
cmpsb
shlb
addb
es
or
cld
inc
into
cmp
push
and
and
xchg
xlat
cltd
cmp
jg
inc
inc
sti
push
xor
sub
mov
scas
push
aam
into
outsl
das
or
aad
shl
les
outsl
adc
xchg
mov
dec
jae
or
push
or
stos
loopnew
mov
add
in
or
ret
movsl
inc
xchg
jo
insl
mov
sub
mov
ljmp
les
xor
or
adc
outsb
mov
stc
dec
jnp
ret
js
scas
popa
mov
test
daa
lcall
mov
dec
shlb
mov
mov
adc
stc
popa
arpl
push
js
xchg
aaa
push
cmp
pop
inc
and
sbb
daa
adc
test
pop
in
pop
popa
addr16
dec
adc
mov
cmpsl
sbb
ret
pop
push
sarb
mov
out
push
les
sub
xchg
push
addr16
inc
dec
arpl
inc
ja
mov
sub
xchg
xor
cltd
movsl
dec
call
mov
add
add
test
mov
dec
cmp
add
jmp
in
cvtpi2ps
adc
cmp
mov
aas
inc
roll
inc
xchg
push
adc
sbb
insl
les
mov
jnp
in
push
shlb
xlat
mov
xchg
jb
mov
adc
push
cwtl
and
in
and
add
jl
lret
in
dec
mov
push
xor
movsb
push
jp
mov
xchg
mov
out
movsl
scas
ret
ret
aad
sbb
out
push
push
jbe
scas
push
sahf
or
jns
xor
sbb
or
fcoms
dec
pop
sti
dec
dec
jne
pop
pop
xchg
sbb
mov
cmpsb
lock
inc
andl
dec
push
push
mov
les
mov
adc
subl
mov
inc
ret
mov
adc
fstps
pop
js
popaw
fimull
add
fiadds
xchg
pop
rclb
insb
pop
mov
pop
in
sub
lods
adc
sbb
push
nop
fcompl
nop
add
in
mov
push
pushf
sub
fwait
cmpsb
rorl
aam
stos
mov
sub
sbb
sti
leave
xchg
push
ret
cmp
rcr
mov
imul
mov
jmp
adc
add
cltd
arpl
jo
bound
dec
popa
cmp
imul
pop
push
loope
sbb
mov
jns
js
add
dec
adc
jae
xchg
aad
and
jecxz
mov
jno
inc
jge
call
scas
xchg
push
push
mov
pop
inc
xchg
outsl
hlt
xor
sub
pop
ja
andl
push
lret
and
add
sub
add
sar
jp
scas
xorl
pop
cmp
shrl
push
dec
fld
and
les
push
loopne
aad
ss
add
pop
adc
xor
movsb
inc
inc
repnz
scas
and
js
and
scas
mov
mov
fisubrl
sbb
cmp
fcmovu
nop
push
repnz
mov
xchg
nop
adc
push
data16
push
cmc
psubsb
push
sub
add
repz
pop
adc
cmp
rcrl
dec
aad
andb
arpl
pusha
test
mov
and
pusha
lock
pop
aad
jp
add
and
addr16
xor
lods
dec
or
out
cs
imul
mov
and
mov
pop
pop
outsb
push
dec
icebp
adc
adc
jnp
sbb
adc
inc
pop
or
cmp
dec
mov
shrl
js
jle
push
and
add
cmp
jge
lahf
repnz
loopne
das
push
jge
pop
imul
cmp
add
adc
push
test
mov
adc
mov
movsb
mov
sub
mov
sbb
arpl
and
jae
cmp
inc
inc
cmpsl
icebp
cltd
inc
fst
pop
cld
lcall
dec
push
or
inc
or
addr16
xor
xchg
sahf
mov
aas
imul
sbb
andl
int
mov
pushf
movswl
lods
pop
test
loopne
jb
push
pop
or
imul
push
mov
je
out
pop
mov
ficomps
cmp
out
dec
aas
cmp
test
pusha
mov
lcall
leave
inc
stos
xchg
out
vmread
fnstsw
sub
jae
cld
cmc
pop
adc
and
push
call
sub
xor
sub
push
js
dec
andb
xchg
adc
mov
sub
cmp
mov
ljmpw
lods
popf
cmp
adc
or
mov
push
in
jmp
jle
pop
push
ja
pop
call
xchg
clc
cmpsl
adc
ret
roll
push
pop
cmpsl
inc
das
pop
rcll
inc
nop
loopne
push
cmp
dec
divl
adc
jge
xor
mov
mov
inc
inc
adc
bound
xchg
lds
or
fisubl
xchg
es
cmpsb
cmpsl
les
adc
adc
inc
imul
inc
sub
pop
maxps
dec
rcr
mov
leave
mov
push
ljmp
push
test
lahf
in
dec
mov
sub
inc
jmp
inc
xor
inc
cmpsl
push
cmp
outsb
inc
inc
inc
imul
movsl
in
ljmp
cli
mov
dec
jae
jmp
adc
mov
call
sub
rcr
shlb
in
xor
and
or
xor
pop
mov
and
push
adc
mov
add
clc
mov
rcrl
inc
lret
push
cmp
shll
daa
mov
and
out
or
push
push
xchg
test
push
out
jle
mov
jns
sti
push
xor
int
loope
shrb
lahf
js
repz
mov
jp
mov
jg
pop
xchg
sahf
jnp
pop
cmp
inc
cmp
out
pop
hlt
dec
inc
pop
inc
xlat
jmp
cmp
xor
add
lock
mov
rorb
xlat
sahf
lds
cmp
push
dec
sbb
fimuls
gs
xchg
lret
jnp
or
loopne
mov
scas
pop
push
repnz
pusha
sub
adc
loopne
or
pop
or
pusha
cmp
fs
sbb
inc
xchg
jl
fmull
shl
and
mov
pop
mov
inc
mov
jp
fs
pop
loope
jo
clc
aad
push
adc
adc
fld
addb
push
push
push
js
sub
aam
in
imul
xchg
push
pop
rcrb
rcrb
icebp
cli
sahf
sbb
adc
aam
hlt
les
insl
push
push
pushl
ja
and
pop
sbb
icebp
mov
cmpsb
test
xchg
mov
loope
movsb
rorb
mov
fs
pushf
pop
iret
inc
push
cmpsl
xor
stos
fs
cmc
loop
xor
xor
pop
inc
ljmp
sbb
jno
push
mov
std
xor
pushf
pusha
adc
sbb
xchg
and
and
fwait
jge
jmp
loopne
or
adc
xchg
and
push
or
pop
arpl
and
push
imul
mov
cmp
mov
pop
ss
xor
dec
bound
push
aad
xchg
imull
inc
popa
fcmovbe
lock
sbb
lods
inc
pop
pushf
into
fwait
cltd
out
and
xchg
pop
scas
adc
test
jae
dec
stos
aam
cld
ljmp
sarb
sbb
jge
adc
cltd
aas
push
inc
imul
pop
or
scas
sahf
movl
bound
jns
aad
lds
or
subl
or
or
sbb
mov
push
shlb
data16
mov
mov
stc
pop
xchg
push
pusha
mov
xorl
jne
pop
or
insb
sub
pop
xor
scas
repnz
mov
into
add
and
insl
lea
mov
pop
jp
popa
pop
and
jle
or
dec
imul
pop
cmp
pop
idivl
mov
jg
mov
cmp
jecxz
cltd
pop
mov
mov
out
push
lock
pop
popa
add
xor
mov
lcall
xor
push
icebp
shr
inc
sbb
mov
pop
xchg
call
loope
addr16
sbb
mov
stos
adc
lea
or
test
ja
enter
lods
ljmp
add
mov
or
dec
fwait
iret
mov
and
pop
pushfw
ret
rorl
pop
daa
gs
clc
mov
xor
in
jp
imul
inc
jecxz
loop
xor
aad
pop
fsubr
cltd
fstps
bound
adc
dec
pusha
add
out
jmp
cld
ret
sahf
inc
adc
stos
hlt
jns
adc
insl
aam
aad
test
adc
push
sbb
inc
or
out
mov
sahf
lods
pop
inc
mov
pop
pusha
mov
sub
sbb
movsl
jmp
psraw
and
adc
jmp
push
shl
out
mov
in
enter
mov
push
dec
add
inc
lods
or
or
adc
movsl
mov
push
mov
inc
roll
sub
xor
jo
inc
loope
pushf
pushl
mov
cmp
bound
aas
inc
popa
push
int3
lock
mov
cmp
mov
out
xor
leave
sub
cmp
sbb
lds
jns
rorb
inc
std
jnp
pop
arpl
sub
ja
rorl
lret
clc
movsl
add
lods
sbb
mov
ret
ja
add
xchg
sub
mov
pusha
into
rclb
push
cld
xchg
mov
inc
enter
jmp
ja
push
pop
dec
movsl
sbb
pop
scas
aad
cmpsb
movsl
add
push
popf
sbb
mov
adc
mov
inc
push
daa
push
bound
push
mov
std
sub
mov
bound
cld
xchg
xchg
in
inc
adc
jecxz
xchg
mov
lahf
andb
dec
pop
scas
pop
xchg
xchg
xlat
xchg
les
add
dec
add
shrl
call
dec
ficoms
imul
lahf
xor
dec
movb
xor
imul
in
cmp
add
js
daa
cmp
out
mov
adc
pop
leave
pop
xor
pop
out
leave
pop
mov
dec
je
pop
setno
or
pop
scas
andl
inc
bound
es
rorb
iret
mov
shlb
xlat
or
inc
push
out
xlat
stos
xchg
xchg
imul
rolb
xor
inc
jmp
lcall
iret
xlat
xor
pushf
in
cmp
xchg
or
xchg
add
pusha
push
or
xchg
bound
xchg
push
and
inc
sub
sahf
and
jae
loopne
js
int
call
or
lret
pop
subb
push
gs
or
ret
push
leave
pop
outsl
test
cmpsb
pusha
add
sti
outsl
fmuls
out
jne
xchg
orb
xchg
jae
sbb
rolb
mov
xlat
ret
pop
jbe
dec
push
imul
xchg
adc
and
mov
orl
lds
mov
push
mov
call
insl
xchg
aad
jnp
adc
lcall
pushf
out
jp
sub
mov
outsb
jo
xor
getsec
inc
xchg
mov
dec
lock
cs
adc
adc
or
pop
xor
pop
sub
scas
movsl
mov
dec
push
dec
test
adc
out
into
icebp
mov
ret
rcl
aas
inc
sub
loope
jae
sarl
cmp
xor
push
fistpll
lds
clc
js
xchg
lods
nop
imul
sbb
jne
mov
fiadds
and
je
mov
dec
arpl
inc
cmp
aaa
or
call
out
sbb
out
adc
mov
cmp
dec
sub
test
push
ljmp
clc
divl
or
test
je
adc
pop
call
sbb
or
mov
test
pop
outsl
cmp
pop
push
or
jmp
cmpb
out
popf
pop
cmp
into
sub
cmp
adc
das
jp
aad
xlat
dec
jns
aas
aad
les
pop
je
iret
fidivs
lds
xchg
jmp
in
or
pop
les
pop
add
divl
or
mov
push
jo,pt
and
aad
mov
pop
mov
sbb
add
dec
pop
mov
inc
add
test
into
xlat
loope
or
out
movsb
adc
add
fs
mov
shr
lock
cmp
add
cmp
inc
stos
mov
push
scas
push
mov
imul
dec
xor
dec
bnd
jo
pusha
insb
push
pop
mov
xchg
adc
iret
push
lret
rol
push
and
out
add
sbb
add
aam
int
cmp
push
push
sbb
adc
jmp
ds
pop
and
cmpsb
es
aam
jmp
push
pop
sbb
adc
and
push
cmp
pop
mov
pop
pop
adcl
pop
mov
cmp
mov
pop
lret
cmp
inc
psllq
subl
xor
xchg
repz
jo
cltd
mov
pop
mov
cmp
add
jne
cmpsb
mov
je
sahf
push
jb
add
lods
pop
xchg
push
loopne
arpl
insl
add
jmp
add
or
test
pop
out
push
ret
ror
call
xchg
clc
mov
sub
adc
rclb
data16
cmpsl
mov
and
sbb
sbb
jo
and
imul
inc
daa
adc
add
ljmp
mov
mov
xchg
jo
jl
mov
sub
jecxz
sub
idivb
add
sub
out
outsl
fnsave
jns
mov
cld
add
loopne
jno
adc
sbb
dec
pop
jmp
aam
gs
loopne
adcb
dec
call
or
xlat
jecxz
mov
adc
and
or
movsb
jae
lret
and
mov
gs
mov
jge
xchg
or
arpl
fsubrs
mov
ud0
dec
mov
xor
jg
inc
loope
jno
bound
mov
mov
adc
or
or
imul
cmc
jbe
shrb
sub
pop
adc
add
nop
xor
imul
xor
and
es
mov
sbb
divps
fcmovnu
dec
or
lods
mov
adc
fmuls
imul
dec
pop
pusha
mov
adc
inc
imul
mov
cmp
movsl
dec
outsl
sahf
les
mov
jmp
xchg
test
push
adc
pop
mov
lods
xchg
test
lds
in
mov
jnp
enter
ja
mov
inc
push
aam
fdiv
sbbb
mull
clc
es
xchg
shll
add
mov
into
sbb
lret
lret
xchg
mov
mov
xor
push
pop
stc
mov
xchg
jge
sbb
in
xchg
stos
shl
shlb
sbbb
insl
dec
xchg
mov
or
fidivs
lahf
adc
push
add
enter
push
adc
push
xchg
in
sbb
fnstenv
cs
insb
mov
and
stc
aas
mov
add
nop
test
pusha
test
xor
sbb
sub
push
mov
ss
fwait
cmpsl
pop
jecxz
test
jmp
xchg
imul
icebp
insb
push
xor
add
mov
add
add
imul
ret
daa
je
lcall
nop
mov
push
mov
call
cmp
popa
adc
xchg
leave
cwtl
push
mov
sbb
push
sub
js
test
push
iret
push
int
out
or
pop
das
mov
call
sbb
mov
aas
jnp
cmp
ret
call
sub
flds
mov
cmpsl
cltd
sub
movsb
js
mov
jns
fldl
sub
pop
movups
je
insl
movsl
or
sbb
sbb
mov
std
push
lea
popa
push
shr
inc
cmpsl
jmp
cmpb
inc
or
push
or
add
add
aas
cli
sub
add
iret
pop
adc
cmpsl
jmp
inc
push
push
dec
or
imul
mov
jmp
jmp
unpcklps
das
in
bound
inc
jecxz
cs
sbb
popa
fcoml
ficompl
fcomip
push
push
push
xchg
or
pop
jne
inc
int3
loope
std
push
adc
int
mov
pop
nop
mov
adc
movsl
mov
out
cmp
inc
adc
lcall
xlat
or
ret
cmp
lea
mov
mov
cmp
je
int
loope
enter
and
xchg
pop
xchg
arpl
cmp
jg
je
push
and
stc
adc
lea
ss
add
push
mov
aaa
ss
mov
dec
or
repnz
inc
pop
cmp
cli
mov
or
ficoml
or
sub
or
or
xor
test
inc
sub
push
xor
pop
push
sbb
inc
xchg
adc
addps
stos
insl
sbb
adcl
stos
pop
dec
or
ja
aam
orb
lock
and
fadds
mov
sti
inc
out
add
sbb
lahf
pop
inc
stos
imul
mov
icebp
out
mov
push
push
lods
push
xor
pop
imul
mov
sbb
addr16
mov
sbb
jl
call
loopne
aas
xchg
adc
cwtl
jmp
mov
push
imul
ret
mov
dec
or
das
sub
mov
ret
jmp
jecxz
jmp
sub
xor
mov
pushl
pop
push
scas
adc
int
mov
xlat
push
add
mov
inc
sahf
adc
xchg
add
lods
xor
int
es
xor
hlt
das
stos
xchg
jo
cmp
ret
nop
dec
rcll
pushf
mov
fisubrs
inc
movsl
fcmovnbe
or
cld
push
popl
popf
add
mov
dec
and
xchg
sahf
test
jmpw
mov
dec
outsl
push
push
fdiv
arpl
sub
xchg
xchg
cmpsl
nop
push
movsb
adc
lods
push
xor
and
cmp
pop
js
pop
xchg
xor
dec
xor
adc
sahf
sub
call
call
and
mov
or
or
in
xlat
dec
sbb
enter
mov
inc
popa
js
push
ret
mov
inc
xchg
and
scas
mov
sub
push
and
push
xchg
repz
adc
pusha
pusha
push
inc
scas
cmp
inc
shrl
jg
popa
je
cwtl
pusha
cmp
adc
cmc
push
or
add
or
call
repnz
ljmp
lahf
fildl
jge
sbb
in
mov
pop
or
pop
add
outsb
leave
push
mov
xchg
outsl
jne
adc
xor
or
pop
add
paddq
pop
xor
call
out
sbb
pop
mov
inc
inc
mov
or
sarb
mov
mov
xor
add
pop
pop
lret
daa
rolb
and
jmp
push
out
cmpsl
bound
or
push
pop
pop
adc
scas
insb
sbb
sbbl
push
sub
cli
or
int
loope
or
insl
add
mov
lds
xchg
sahf
or
adc
sbb
xor
dec
cmpsl
mov
xor
jge
push
pop
shrb
push
lods
pushf
nop
fcmovnu
das
shlb
push
std
mov
popl
inc
sub
mov
insb
sub
mov
jp
rclb
xchg
decl
add
mov
xchg
sub
dec
push
jg
and
add
push
and
mov
stos
clc
fadds
pop
scas
sbbl
jb
xor
ja
aas
push
dec
pop
pop
xor
sbb
sbb
mov
dec
sahf
ret
pushl
or
div
mov
mov
movb
push
sbb
movsl
cwtl
xor
sti
andl
sub
xchg
fidivrs
adcl
or
loope
push
push
mov
sti
mov
cmpsl
add
gs
mov
subb
ljmp
or
popf
arpl
imul
cmp
xchg
outsl
adc
mov
cmpl
sbb
xor
adc
pop
mov
ret
inc
xor
lea
dec
inc
push
mov
sbb
dec
js
cmp
sbb
enter
insl
lcall
roll
in
add
ds
dec
cmp
sub
sub
fwait
sbb
mov
cmc
xchg
pop
paddq
add
bound
stos
test
sbb
popf
push
pusha
xor
inc
sbb
inc
dec
add
add
sbb
shl
mov
jecxz
jmp
ror
adc
inc
cmp
lea
mov
fwait
push
xchg
scas
sbb
cmp
cmpsl
add
sbb
andl
fistl
push
mov
push
mov
add
inc
jp
pop
ret
add
ret
and
inc
inc
sub
mov
jmp
rol
pop
add
insl
sbb
jno
sbb
into
ss
jmp
popa
nop
pusha
out
les
ljmp
loop
dec
fdivrp
push
and
pop
mov
adc
pop
dec
sub
rcrl
push
arpl
cmp
cmp
dec
sbb
int
clc
sub
xchg
mov
jno
jmp
pop
or
out
xchg
jno
clc
repz
push
jmp
mov
and
loop
mov
rorl
enter
push
sbb
fidivrl
in
ss
mov
test
rcl
adc
shrb
xchg
testl
rolb
loope
clc
mov
orl
push
inc
and
xchg
jp
js
test
arpl
inc
and
cmp
or
cmp
cmc
iret
roll
cmp
mov
repz
push
push
hlt
sbb
push
mov
pop
and
xchg
dec
rorl
xor
fwait
and
xchg
or
in
lds
mov
inc
shll
pusha
nop
das
mov
scas
rclb
pop
jae
int3
cmp
jge
xchg
pop
mov
xlat
fcoml
sbb
lahf
imul
fiadds
loope
test
or
packssdw
sbb
xchg
push
fmull
or
or
xchg
mov
popa
push
push
pop
movsb
test
adc
add
call
aad
aam
mov
lods
add
jno
pop
adc
icebp
mov
leave
lods
in
push
js
adc
iret
stos
test
lret
cmp
sbb
and
dec
loopne
or
js
dec
inc
scas
sub
adc
pop
sub
cli
inc
pop
add
adc
je
adc
mov
mov
push
pushf
pop
cmp
aad
dec
dec
or
push
xchg
movsl
xchg
ret
pop
xchg
pop
mov
ss
push
inc
shrl
sbb
add
ds
je
mov
out
jns
jbe
dec
aad
cmp
adc
adc
sbb
mov
cwtl
sub
dec
mov
shrb
fsts
fs
inc
pop
pop
out
dec
adc
sub
pop
jg
insb
inc
or
cmc
inc
pop
mov
add
cmpsb
jge
pop
cmp
dec
les
inc
pop
or
adc
sti
out
test
xor
pop
adc
jns
push
and
push
hlt
clc
lret
subl
mov
shl
adc
mov
orl
push
mov
push
mov
loope
punpcklwd
mov
add
icebp
pop
cmpsl
mov
sbb
jecxz
mov
xchg
decl
shll
sub
mov
push
xor
ds
mov
xor
sub
and
pop
add
dec
xor
mov
sub
mov
cmpsl
scas
mov
std
jns
jle
push
sbb
rclb
xor
sbb
inc
mov
loope
jle
out
xchg
movb
outsl
leave
adc
pop
fdivl
pop
adc
jmp
out
fcoms
mov
adc
aas
out
cmp
push
adc
test
out
or
sub
test
mov
repnz
dec
fimull
and
pop
inc
imul
mov
sbb
pushf
loope
rcl
xchg
push
sbbb
inc
addb
fst
fsts
iret
rorb
arpl
pop
sub
dec
lods
inc
imul
pop
aaa
dec
push
dec
jmp
stos
test
inc
xlat
imulb
sbb
xor
xorb
gs
sbb
or
dec
loopne
inc
ret
add
sahf
pop
cli
sbb
outsb
cld
adc
jl
mov
mov
insl
cmp
and
push
sub
ljmp
das
movsl
ds
aas
xchg
ss
sub
inc
cwtl
and
mov
loopne
or
fsubrs
xlat
sbb
push
imul
dec
popa
cmp
sbb
sbb
and
cmp
sub
test
jmp
cmp
jno
jne,pt
sbb
adc
push
push
cmp
add
push
mov
mov
es
decl
lea
shrb
push
outsb
cmp
mov
xchg
orb
jmp
daa
lret
mov
xlat
jae
mov
inc
enter
adc
rcl
lcall
sti
cld
lret
jmp
xchg
inc
inc
sub
faddl
sub
sub
cmc
and
adc
int3
ja
xor
mov
mov
adc
les
add
push
mov
insl
add
das
mov
push
adc
out
jne
inc
push
cmp
sub
jmp
fwait
mov
dec
push
add
jecxz
or
inc
mov
lcall
pushf
lea
popa
mov
push
jne
fsubrs
add
mov
popf
sub
ja
jo
and
add
pop
popa
mov
jmp
pop
push
shrl
sub
or
xchg
mov
cmp
aad
test
pusha
loop
js
loope
adc
and
es
jno
insl
jbe
sahf
test
ss
or
in
test
repz
mov
push
addr16
cmp
pop
mov
addr16
pop
inc
dec
notb
xor
and
mov
sub
ds
jp
imul
ret
test
adc
arpl
fs
push
lret
outsb
inc
pop
cmp
int3
cmpsl
pop
aad
and
cmpsl
test
cmp
test
dec
les
js
lock
das
sarb
outsb
cltd
xchg
fs
xor
out
push
pop
movsb
jnp
int3
sahf
dec
rclb
repz
push
xchg
or
jnp
or
lcall
cli
sub
pop
not
in
mov
adc
into
mov
jp
mov
arpl
xlat
repz
and
mov
inc
mov
cmc
lods
dec
cwtl
nop
popf
pop
mov
roll
neg
popa
cltd
add
daa
dec
jno
jno
in
pop
xor
xchg
inc
jno
and
pop
or
fistps
mov
xlat
mov
rclb
xchg
cmp
cmpsb
dec
xchg
mov
pop
cmp
loope
fstpl
push
sbb
dec
jp
lahf
mov
movsl
lret
ja
popf
or
adc
add
addr16
xor
xchg
mov
sub
sbb
adc
movsl
add
mov
cmp
call
and
aaa
mov
outsl
imul
mov
push
cmp
pop
in
fmuls
xlat
cmpsl
outsl
xchg
test
push
or
pop
push
adc
sbb
push
pusha
sub
out
cmp
lds
add
lea
sbb
into
lret
inc
dec
or
lea
insl
pop
sub
mov
fists
imul
pop
pop
jbe
repnz
jbe
cmp
outsl
roll
or
mov
inc
aam
movsb
loop
and
cmp
push
push
jo
les
dec
or
addl
add
xchg
sub
jne
jge
scas
das
sti
jnp
pop
jae
dec
sbb
jnp
mov
pushf
ret
inc
xchg
testl
shlb
pop
pop
xor
mov
pop
idivl
pop
inc
inc
popa
movsl
push
sbb
push
call
jp
ja
sarl
jmp
rcrl
cmp
test
pop
clc
push
movsb
add
inc
pop
xchg
jg
push
pop
inc
mov
push
outsl
lea
out
jl
push
xchg
sub
pusha
xchg
sbb
pop
ret
call
dec
pop
notl
insb
xchg
jge
xor
pop
inc
lcall
xor
pop
push
add
fbld
pop
inc
pop
jno
sti
dec
enter
cmp
pushf
push
inc
sbbb
push
push
push
add
call
xchg
rcrb
or
jle
pusha
enter
pop
popf
notl
int
mov
inc
push
nop
pop
add
popa
pusha
nop
sub
std
cmp
inc
push
xchg
js
js
ret
or
stos
pop
sub
push
ja
inc
or
movsl
jecxz
add
fistl
add
lods
sbb
sub
mov
pop
add
mov
sbb
popa
aas
bound
mov
orl
pop
loopne
add
retw
stc
jo
mov
icebp
icebp
add
xor
push
adc
int
jb
sbb
mov
mov
rorl
or
push
sahf
cs
movsb
mov
dec
sti
fistpll
add
jmp
ret
jbe
adc
stc
lcall
lret
rolb
xchg
jno
inc
dec
pop
mov
out
dec
jmp
iret
fcoml
push
dec
imul
or
lods
push
or
add
pusha
cmc
mov
dec
xor
mov
out
mov
daa
inc
push
xchg
jmp
mov
xchg
into
adc
adc
imul
cld
or
pop
sarb
add
pop
mov
sbb
mov
nop
fiaddl
ret
xlat
xchg
xor
add
out
sbb
neg
inc
aad
inc
push
ret
mov
js
add
fidivl
mov
xchg
leave
mov
pop
sar
cmc
repz
rol
mov
arpl
mov
ret
jo
sti
mov
inc
inc
jle
jnp
negl
insl
dec
cmc
sub
mov
gs
shr
or
dec
bound
wbinvd
inc
mov
or
mov
jmp
mov
jnp
xor
cltd
xor
push
fdivrl
int
ja
not
aad
dec
adc
and
jmp
inc
ds
lret
lcall
jbe
adc
lock
jae
pop
xchg
popf
fdivrl
cmp
mov
dec
adc
push
dec
jmp
scas
add
cmpb
int3
pop
sbb
mov
mov
mov
mov
addr16
sbb
xor
add
das
push
xlat
xor
pop
daa
test
test
sbbl
popa
imul
pusha
xchg
pop
mov
pop
dec
pcmpeqw
push
mov
ds
dec
jae
mov
jecxz
jne
int3
orl
loopne
mov
and
ret
pop
sub
insb
fs
js
push
loopne
int
mov
int
push
pop
xor
dec
sbb
sbb
outsb
jge
add
test
int3
fisttpl
pop
test
push
jo
and
push
orl
test
fiaddl
push
dec
decl
xor
jne
inc
das
aad
inc
out
or
aas
inc
add
fst
xor
and
pop
dec
xor
popl
inc
pop
xlat
sub
sub
jne
xchg
je
mov
adc
cmpsb
je
fwait
mov
xchg
enter
andl
pop
aaa
push
dec
movsb
pop
shlb
pop
dec
cmp
es
mov
pop
fwait
adc
mov
adc
popa
or
dec
call
mov
sub
fadd
cmpsb
aam
push
shlb
add
adc
adc
or
fadd
lock
daa
movb
mov
mov
jo
or
mov
adc
push
xchg
dec
outsb
cmp
daa
jle
sbb
mov
movsl
sub
mov
popa
mov
mov
lock
lock
outsl
cmp
pop
dec
add
jno
adc
fildl
inc
fists
arpl
xor
xor
mov
inc
jge
lahf
sub
mov
and
push
imul
dec
sub
push
leave
pop
inc
aas
add
imul
push
xorb
sub
and
sub
addr16
mov
ljmp
pop
in
push
popf
cmc
push
psrlw
lock
jnp
or
movb
adc
xor
xor
fdivrl
xchg
sbbl
jnp
sub
mov
rorl
xor
mov
shr
add
inc
jne
mov
inc
roll
adc
inc
add
push
fsts
stc
into
fsubr
or
subb
test
adc
jge
inc
in
mov
dec
dec
jns
push
push
popa
and
pop
add
in
mov
sbb
mov
pop
dec
and
lds
dec
outsb
subl
xchg
clc
out
add
nop
sahf
mov
nop
add
mov
clc
jnp
rolb
mov
call
fld
mov
adc
loope
pop
call
rcll
inc
nop
pmulhuw
loop
xor
jmp
cmp
into
insb
loopne
fwait
les
das
cmc
stos
ja
icebp
imul
addr16
dec
pop
sbb
jl
or
dec
sbb
push
sbb
fs
cmp
je
inc
xchg
sarl
insl
mov
inc
push
xchg
popf
fucomp
mov
xor
jae
dec
mov
adc
in
out
aad
dec
mov
mov
movsl
xchg
sub
add
aas
sub
adc
shl
add
inc
sbb
lock
and
add
out
mov
push
scas
xor
adc
cli
sbb
mov
cs
push
ret
aas
add
jne
clc
push
pop
add
pop
and
mov
mov
test
add
xor
adc
mov
mov
in
mov
push
inc
imul
xchg
sub
adc
xchg
dec
sbbl
sbb
pop
pop
ror
jp
jmp
push
xchg
xchg
aas
mov
fstpl
push
test
outsb
mov
rcrb
pop
pop
jge
shlb
adc
mov
jmp
addb
mov
mov
cwtl
push
add
or
and
sub
in
rcl
fldcw
outsl
push
mov
ret
jecxz
pop
and
rcrl
or
pop
scas
lds
jne
sbb
inc
orl
jp
xchg
push
imul
loop
movlhps
inc
call
mov
movsb
pop
stos
adc
xchg
adc
dec
inc
adc
push
sub
shll
pop
aaa
push
mov
jno
lods
push
movsb
add
scas
sbb
adc
jecxz
add
dec
add
leave
rcll
int
push
sub
push
icebp
cmp
dec
sbbl
jmp
and
add
mov
push
into
mov
push
pop
icebp
ret
test
loop
insl
push
inc
sbb
xor
or
lea
xchg
stos
movsb
iret
xlat
mov
mov
jmp
jle
cwtl
rol
iret
add
in
inc
jge
rcrb
loope
xlat
sbb
xlat
xchg
xor
add
in
mov
rolb
cmc
mov
fmull
add
mov
push
inc
outsl
cmpsb
mov
jge
xor
fists
push
lock
xchg
dec
loope
or
mov
scas
inc
daa
ffreep
xlat
or
jmp
mov
sub
loopne
repz
out
cmpl
ds
cmp
inc
or
sbb
mov
clc
adc
mov
bound
pop
pop
loopne
push
jp
sbb
inc
and
mov
imul
fnsave
add
xchg
adc
arpl
inc
pop
inc
icebp
xor
dec
std
mov
dec
jge
or
js
lret
iret
leave
rep
bound
sbb
sbb
push
add
adc
repz
or
or
adc
adc
jbe
scas
jl
daa
ret
rcl
jbe
xor
pop
mov
dec
aad
jno
fcomi
push
mov
imul
xchg
push
push
adc
inc
ljmp
cmp
roll
rolb
lock
mov
adc
cmpb
outsl
repnz
pop
jb
inc
jne
jae
roll
js
gs
ror
repz
das
out
cmp
mov
jno
hlt
add
push
outsl
mov
rcll
decb
iret
jp
pop
jb
fdiv
xor
mov
sbb
test
popf
xchg
sbb
sub
shll
sbb
push
stc
fidivrl
sbb
and
dec
xchg
jmp
das
xchg
jnp
jo
loop
mov
lret
les
sysret
negl
adc
jne
pushf
mov
xor
inc
sub
lcall
mov
inc
pop
pop
or
dec
sbb
jle
lock
mov
out
adc
mov
add
dec
das
xor
dec
cwtl
dec
pop
sub
mov
mov
iret
mov
inc
sub
lea
cmpsb
aam
das
and
das
test
mov
addr16
mov
ja
mov
or
adc
int3
enter
icebp
sbbb
pop
ret
xchg
insb
mov
and
mov
push
add
inc
xchg
icebp
or
push
mov
dec
cmp
xor
push
xchg
sbb
mov
pop
dec
mov
in
shrl
xor
ret
dec
sub
pusha
rcll
jbe
mov
inc
adc
xor
mov
movsb
sbb
mov
sbb
testl
push
mov
sbb
in
enter
mov
test
push
mov
cmpsl
and
xor
mov
and
dec
mov
std
and
add
adc
or
hlt
lea
inc
sub
push
adc
pusha
push
aad
stos
sub
jns
adcb
inc
loopne
ret
sbb
cltd
das
scas
xor
add
lahf
inc
icebp
jne
mov
aad
adc
push
mov
fs
addr16
icebp
or
test
mov
mov
xor
add
lahf
jns
push
sub
push
inc
sub
xor
ficoml
xor
sub
sub
mov
inc
pop
ja
push
out
daa
shll
ss
push
bound
jmp
dec
orb
pop
inc
js
sub
addb
sbb
push
push
xchg
add
imul
lea
dec
xor
push
ret
aad
add
test
sbbb
adc
dec
pop
inc
ss
test
negl
mov
roll
rorl
mov
cmp
pop
jp
mov
mov
ss
xor
pop
xchg
and
cmp
outsl
jmp
dec
inc
fiadds
outsb
add
aas
negb
in
inc
pop
mov
cmpsb
pop
sahf
mull
js
dec
movl
mov
jbe
pop
popa
imul
mov
adc
dec
adc
jp
push
jno
das
jecxz
test
aaa
dec
aaa
lock
push
pushf
mov
or
pop
icebp
rolb
add
mov
jno
shr
jo
fucom
fisubs
call
ja
scas
rcll
and
inc
out
jo
jo
xchg
jno
jae
cmp
lock
orb
out
fadds
jbe
add
shlb
rcrw
jnp
push
xchg
jmp
mov
xchg
pop
imul
movsbl
sub
dec
xorl
mov
sub
add
and
add
sbb
mov
dec
test
cmovp
pusha
and
push
sahf
mov
lret
dec
adc
imul
add
test
adc
aaa
adc
sbb
and
jl
add
fisubl
pop
mov
ret
push
cmp
inc
gs
mov
shll
in
sub
pop
ret
into
or
js
inc
dec
add
inc
mov
mov
or
cli
jb
dec
dec
pop
pop
xchg
mov
jae
stc
ljmp
cmp
push
inc
xlat
cmp
cmpsl
pop
test
dec
sub
shll
mov
daa
ds
xlat
ljmp
or
adc
jnp
shrl
jmp
ret
mov
add
test
ret
inc
jp
inc
lcall
jp
add
outsb
mull
loope
xchg
das
fs
popf
rclb
xchg
or
add
add
cmp
sub
into
jne
push
call
mov
sarl
add
in
out
insl
pop
sbbb
and
adc
cmpsb
mov
int3
xorb
pop
mov
push
imul
cmpsb
out
inc
mov
hlt
inc
cs
xlat
or
lods
scas
pop
pop
push
arpl
pop
sub
cltd
dec
lea
xor
dec
aam
cs
adc
mov
mov
push
pushf
rcrl
ss
imull
jmp
dec
fiaddl
jecxz
out
jo
xlat
inc
aad
andl
movl
push
btr
cmpsb
mov
jb
cmc
sub
inc
daa
xlat
mov
out
mov
dec
sbb
pop
ret
aaa
outsl
pop
call
add
iret
outsl
out
mov
negl
pop
inc
dec
bound
pop
and
dec
aas
mov
fildl
call
test
jp
dec
cmc
cmpb
lock
scas
sbb
dec
pop
xchg
lcall
cmp
movsl
or
xchg
fisubrl
dec
std
sbb
xor
or
fwait
jo
add
xor
mov
sarb
cmp
test
arpl
dec
mov
inc
xor
fsts
test
or
cmpsb
rol
mov
add
loope
dec
mov
xor
roll
cmc
inc
sbb
inc
and
push
push
sub
daa
inc
jo
pop
or
repnz
lret
or
add
push
loopne
sbb
inc
outsb
ret
adc
pusha
inc
push
sub
bnd
dec
lahf
mov
gs
adc
push
lahf
nop
inc
ds
lock
fcomp
test
push
xor
adc
and
mov
mov
xchg
push
sbb
sub
cli
push
and
movl
cmpsb
xor
loope
mov
loopne
mov
sahf
mov
xchg
jbe
mov
mov
outsl
rorb
icebp
pop
insb
mov
mov
fs
fst
xor
push
sbb
mov
cmp
or
or
pop
mov
dec
jl
cmp
js
dec
mov
add
adc
pushf
je
xor
push
sarl
xchg
rcrl
in
ljmp
icebp
push
sbb
mov
in
subb
bound
push
push
push
sub
cmc
mov
inc
inc
test
mov
pop
cmp
mov
out
sbb
xchg
sbb
repz
addb
lahf
mov
ss
mov
adc
mov
call
xor
test
cmc
in
push
or
add
dec
or
add
add
je
scas
mov
xchg
inc
xor
data16
fwait
ljmp
scas
pop
mov
pop
in
cmp
fisttpll
mov
subl
add
inc
and
xlat
fadds
mov
cmp
sub
mov
rclb
cmp
int
aaa
int
fstl
lock
xlat
movsb
paddsb
ljmp
or
push
subb
xor
cmp
xchg
ds
mov
pop
xchg
xor
inc
push
cmpb
sub
mov
xchg
loope
or
sahf
cvtps2pi
idivl
and
adc
cmp
adc
push
and
fcmovnbe
jbe
inc
dec
or
pop
xchg
dec
pop
or
popf
inc
adc
xchg
outsl
mov
sbb
push
or
inc
lret
cmp
xchg
test
orb
push
outsl
sbb
outsb
cmpsl
adc
movsl
mov
popf
dec
aaa
pop
pop
inc
push
nop
add
xor
lea
mov
jp
mov
and
and
xchg
adc
out
xchg
rolb
int
in
and
fcmovbe
jmp
sbb
or
adc
ror
xor
sbb
mov
jle
jb
xor
inc
leave
sbb
fwait
stc
push
pop
loop
arpl
xchg
cli
jns
loopne
movsl
incl
dec
mov
ss
inc
test
xchg
mov
not
idivb
jnp
adc
popf
inc
and
or
cmp
test
roll
or
or
pusha
and
inc
cli
cltd
dec
xlat
push
pop
push
mov
out
scas
sbb
add
shrb
jbe,pt
arpl
push
push
mov
filds
dec
cmp
jp
inc
popa
aas
jnp
dec
mov
adc
inc
xchg
lret
push
movsb
cmp
xchg
inc
popa
mov
jmp
sub
mov
loopne
lods
mov
sbb
ret
xchg
loop
pop
std
jne
mov
xchg
sbbl
xchg
xchg
or
and
and
sbbl
insl
sar
shrb
das
or
call
rorb
jae
cwtl
sbb
lea
lret
fstps
xchg
add
inc
xor
fsubrs
loop
dec
push
jb
push
xor
pushf
cli
inc
push
xchg
mov
aas
pop
xchg
cmp
rolb
lahf
sbb
add
push
insb
cmp
adc
pop
xlat
fwait
dec
and
cmp
loopne
test
imul
pusha
leave
pusha
xor
jne
sub
mov
mov
lret
dec
movswl
xchg
iret
cwtl
pop
mov
pop
enter
stos
fs
roll
mov
sbb
popa
js
out
mov
lods
pop
add
xor
dec
pop
jmp
inc
aad
leave
or
leave
pop
js
dec
fistps
inc
iret
lock
cld
mov
ret
aad
imulb
shll
or
add
mov
lret
popf
mov
and
popa
and
cmpsb
jle
ja
fbstp
in
cmpsl
xchg
mov
cmpsl
sub
lods
mov
pop
adcb
push
stos
fs
add
xor
sub
cmp
jecxz
jno
mov
icebp
sbb
out
and
add
ficoms
popf
xchg
movsb
stos
adc
add
cmpsl
inc
fsubs
xlat
dec
popa
sbb
pop
lahf
pushf
sub
push
dec
cltd
xor
lahf
xchg
addl
cmp
inc
fdivl
mov
xchg
adc
das
aad
or
lret
arpl
or
daa
xchg
mov
pop
idivb
sbb
and
sbb
dec
ffreep
jb
inc
popa
add
jmp
mov
movsb
mov
ja
jl
pop
add
rorb
int3
lahf
lock
pushl
push
lahf
add
inc
adc
adcb
arpl
adc
pop
addr16
xor
sbb
lea
mov
mulb
in
inc
arpl
sbb
xor
xchg
sbb
add
pop
outsb
inc
xor
inc
jns
adc
mov
inc
xor
lock
push
ret
lds
mov
add
scas
in
mov
and
fbld
xor
lcall
fisubl
pop
out
push
test
repnz
xchg
in
xlat
push
xlat
mov
sbb
and
inc
ja
movsb
jle
mov
aam
sbb
sbb
scas
mov
out
adc
movsb
xchg
mov
mov
push
add
outsb
push
daa
les
jo
lods
xchg
popf
leave
fistps
inc
jl
scas
and
xchg
sub
pop
mov
cmpsl
add
fdiv
jle
rep
repz
mov
cmp
lds
or
test
adc
adc
insb
dec
out
pop
or
sub
pop
nop
add
cltd
andl
and
jp
mov
out
test
jo
mov
outsl
daa
stc
push
dec
push
aaa
push
pop
ret
adc
inc
xor
inc
jae
mov
sub
xchg
xor
mov
adc
fildl
std
sbb
push
test
mov
sub
cs
and
adc
push
push
lcall
jae
dec
faddl
je
push
iret
cwtl
xor
cmp
and
inc
sbb
repz
and
xor
pop
push
sub
pop
packssdw
add
inc
jl
adc
mov
sbb
or
mov
sbb
rolb
repz
sahf
sbb
sar
mov
icebp
cmpsl
stc
icebp
lods
out
push
push
jg
lret
std
pop
out
pop
mov
mov
dec
iret
fcmovne
pop
adc
sub
mov
les
push
in
outsl
and
mov
daa
movsb
mov
xchg
xor
out
pusha
ret
add
sbb
dec
lock
mov
xchg
nop
adc
push
sbb
pop
mov
sbb
loopne
test
push
inc
xlat
sub
test
sub
subb
iret
mov
roll
pcmpeqw
lods
popa
mov
loope
sub
mov
inc
insl
sbb
rorl
xchg
push
rolb
arpl
or
mov
lret
mov
pop
mov
sbbl
inc
pop
dec
cli
or
adc
je
xchg
sbb
mov
stos
add
cmpsb
out
insb
inc
xor
jb
ljmp
fdivr
lret
out
xchg
cmp
push
in
push
filds
mov
push
inc
mov
xchg
sub
pop
gs
sbb
ret
out
js
dec
cmp
cmp
mov
fnsave
or
mov
lds
dec
lods
int
scas
fcmovbe
popa
adc
jbe
push
mov
mov
das
out
pushw
or
adc
popf
mov
sbb
mov
lock
scas
cltd
sbb
test
bound
adc
sub
inc
aad
and
jge
pop
sbb
loop
inc
daa
sahf
push
and
xor
mov
out
pop
push
incl
ret
repz
scas
mov
aas
push
inc
mov
je
mov
outsl
mov
movsl
lea
fwait
xlat
int
or
loope
inc
mov
adc
inc
xlat
aaa
dec
dec
lock
pop
cs
push
std
imul
lods
pop
xor
sub
fldenv
testb
sub
test
inc
dec
cmp
aam
dec
mov
rorb
xor
sbb
test
jae
and
loop
inc
or
cmp
xor
movsb
ret
and
inc
push
ss
inc
mov
mov
push
mov
jge
les
jmp
adc
fs
mov
sarb
cmp
push
inc
adc
sahf
mov
sub
outsl
or
push
adc
mov
sbb
cld
xchg
inc
decl
add
loop
jae
dec
inc
cmp
sbb
lea
xchg
mov
roll
push
xor
fdivl
adc
dec
sti
lods
mov
push
add
add
or
mov
mov
xor
inc
push
inc
loopne
adc
adcl
pusha
out
sub
lret
push
icebp
pop
outsb
xchg
test
push
adc
cltd
push
cmp
pop
dec
outsl
adc
test
lahf
mov
lcall
xchg
sbb
jns
repnz
fdivl
add
xor
clc
sbb
pop
and
inc
add
out
jecxz
push
stos
xor
mov
inc
ret
ja
in
jo
mov
push
aam
sub
fistl
push
push
jg
jl
outsb
pop
add
pop
inc
loop
mov
imul
pop
imul
loop
test
movsl
outsl
sub
cs
les
imul
add
mov
push
pop
xor
inc
dec
insl
cmpsb
fs
in
nop
pop
dec
adc
add
daa
je
ret
push
into
or
rorl
arpl
or
sbb
and
fcmovnbe
inc
cmp
loope
sbb
jmp
mov
sbb
por
divb
adc
mov
mov
fnstcw
sub
xor
mov
add
lea
lods
or
and
sbb
mov
arpl
push
jbe
cmc
ret
xchg
bound
je
arpl
shll
test
dec
test
js
push
and
popf
insl
aaa
pop
pop
xor
dec
pop
adc
jmp
pop
jb
sbb
in
xchg
dec
inc
cmp
mov
cmp
fwait
add
cltd
adc
push
adc
push
and
pop
jp
mov
loope
xorl
sub
xchg
push
inc
cmp
fisttpl
dec
mov
sub
add
push
sbb
jnp
loopne
mov
mov
mov
push
or
push
test
cmp
and
adc
sub
jno
movsl
std
mov
rorl
inc
stos
xchg
jo
or
mov
cmp
xchg
jo
jg
inc
sbb
adc
adc
sbb
mov
shl
mov
mov
in
mov
pop
sar
dec
pop
test
les
add
repz
mov
pusha
inc
push
and
mov
testl
push
int
out
mov
sbbb
inc
out
inc
xchg
or
dec
xchg
iret
mov
inc
stc
jbe
jecxz
and
int
inc
daa
push
jle
and
pop
mov
adc
lea
cmp
jno
out
sub
push
mov
or
sub
test
push
mov
imul
popa
data16
pop
and
mov
lret
add
pusha
adc
jno
nop
ds
mov
inc
mov
mov
stos
pop
adc
pop
dec
dec
leave
push
xchg
rolb
jecxz
add
push
stos
inc
inc
dec
pushf
mov
inc
push
sbb
pop
in
adc
xchg
adc
xor
insb
loop
adc
pop
clc
rcl
dec
inc
add
pop
loope
xor
jae
dec
fistpll
notl
dec
jmp
je
push
sbb
push
dec
inc
xchg
pop
lods
shrl
pop
add
in
mov
cltd
movntq
test
push
add
iret
pop
cld
ret
jle
sbb
push
test
pop
cld
sti
movb
lret
dec
xchg
pop
aam
rorb
rcl
xor
nop
cwtl
sbb
inc
jo
xor
adc
or
mov
adc
xchg
push
shrb
mov
cmc
inc
add
icebp
add
push
inc
popf
repz
shll
lret
test
sbb
mov
add
cmpsb
ja
cmpsl
add
xchg
push
movsb
icebp
mov
xlat
cmpsb
inc
shlb
inc
jmp
aaa
dec
xchg
lods
pop
aaa
xchg
xor
mov
xlat
add
and
outsl
cmpsb
dec
push
mov
sbb
aad
dec
es
aas
ror
add
push
mov
mov
psubb
pop
push
adc
aam
cmp
orl
jae
pop
pop
jno
scas
stos
dec
sub
hlt
mov
cs
inc
inc
data16
bound
mov
add
sbb
sarb
arpl
xchg
xchg
mov
movb
xchg
mov
add
dec
inc
fcoml
test
xchg
pop
inc
push
dec
int
push
in
adc
jecxz
fistps
jecxz
cmp
bound
ret
adc
fstpt
dec
adc
push
out
jecxz
lcall
mov
push
jmp
mov
ljmp
dec
in
xchg
or
popa
and
push
ret
out
sbb
mov
push
dec
pop
dec
xchg
and
fstpl
sahf
add
cmp
xchg
repnz
sub
inc
inc
pop
mov
rolb
add
inc
and
int
pop
xor
in
mov
mov
movsl
inc
sub
sahf
add
mov
inc
ljmp
pop
sarb
pusha
roll
rorb
test
sbb
test
enter
cmp
mov
cmp
pop
inc
shll
cmp
fwait
lcall
daa
aam
adc
sub
add
mov
cmp
call
outsb
dec
imul
sub
or
repz
and
stc
jmp
jle
push
pop
push
jno
leave
push
push
mov
inc
push
cmpsl
pop
push
push
push
sub
pop
in
add
xchg
dec
xchg
mov
push
xchg
call
pop
jne
mov
mov
push
jge
pop
and
xor
shlb
push
ret
scas
mov
sbb
pop
sub
push
jmp
jp
test
mov
int3
sbb
jmp
aas
les
je
sbb
dec
lods
jno
xchg
mov
push
ja
dec
shrl
decl
test
retw
push
mov
jl
push
insl
adc
xchg
push
xlat
outsb
mov
cli
aas
cltd
mov
jmp
dec
cmp
mov
add
pop
or
arpl
cmp
clc
aaa
mov
dec
lods
xchg
mov
iret
fidivs
push
lret
sbb
inc
push
test
xchg
inc
sti
lcall
fdivrl
and
xchg
daa
adc
pop
jge
pushf
cmp
jbe
lds
sti
nop
inc
inc
jl
sbb
flds
mov
mov
sub
push
sbb
push
mov
in
in
push
and
pop
hlt
ror
sub
xor
movsl
jne
pop
sub
and
sbb
pop
adc
jle
inc
mov
sarl
adc
out
mov
inc
cltd
or
xor
cmp
pop
fiaddl
jmp
lods
sarl
jmp
xchg
inc
push
sub
sbb
or
inc
pop
add
jle
sub
in
add
inc
stos
ficoms
test
jmp
jns
sub
push
inc
int
pop
dec
pop
movsl
sti
jge
xor
inc
xor
xchg
xchg
sub
gs
call
int
aam
xchg
outsb
mov
stos
cmpsl
push
cld
jae
orl
shlb
dec
test
cmp
push
mov
pop
scas
out
popf
xchg
push
adc
dec
jmp
push
nop
xchg
cmp
sbb
xchg
inc
fs
ret
pop
std
or
add
push
jg
push
sbb
or
inc
xchg
mov
ret
dec
loopne
mov
pop
xchg
push
add
ljmp
test
inc
mov
inc
call
dec
xchg
cs
push
test
push
dec
sub
gs
mov
and
scas
pop
repz
pusha
dec
and
fnstenv
mov
sub
mov
lret
mov
aad
fcom
int
jbe
stos
ds
insl
cmp
leave
bound
xchg
push
aam
adc
add
mov
bound
sub
stos
ret
cmp
jl
aaa
mov
ja
adcl
outsb
lods
rol
sub
call
adc
jge
dec
call
mov
dec
inc
mov
cld
or
mov
adc
pop
roll
popl
aam
addr16
and
fldpi
mov
push
sbb
data16
mov
ret
sub
mov
jl
lods
add
pop
iret
dec
jno
xor
insl
lods
or
stc
sbb
aaa
xchg
sbb
mov
in
fnstsw
push
sahf
jnp
and
sbb
xor
add
or
dec
dec
fiaddl
loop
pop
adc
inc
mov
fmul
inc
sbbl
jae
repnz
sub
ret
add
xor
and
push
and
arpl
jnp
sub
push
pop
gs
dec
aaa
arpl
fst
data16
stos
gs
lock
loopne
sbb
push
xchg
aaa
jb
mov
mov
push
jae
jo
and
and
xor
popa
or
popa
sbb
pop
out
xor
cmp
push
mov
adc
cmpsl
pop
or
dec
imul
js
add
stos
dec
cs
add
gs
jg
notb
xlat
adc
cmp
imul
mov
ret
adc
adc
xchg
push
roll
push
or
sbb
and
popf
inc
xor
mov
jmp
fsts
and
clc
jbe
xor
xchg
fildll
mov
xchg
and
jo
test
mov
xchg
sbb
mov
dec
out
mov
sub
pop
xlat
cli
dec
mov
mov
push
mov
mov
dec
andb
cmpxchg
inc
pop
jp
nop
ds
push
out
icebp
clc
pop
sbb
dec
loopne
dec
and
filds
mov
in
repnz
lock
ror
aaa
ret
mov
xchg
popf
popf
push
in
data16
clc
cmp
inc
fsts
adc
aaa
in
lahf
test
push
and
add
pop
jne
and
xchg
nop
dec
jns
mov
push
pop
adc
lret
xor
bound
inc
lea
push
jge
adcb
or
pop
and
and
and
iret
mov
xchg
movsl
sbb
aad
inc
in
aad
in
xor
mov
dec
mov
insb
daa
bound
out
call
xchg
fldenv
mov
dec
imul
mov
cmpl
rcrl
pop
push
jp
jae
mov
lds
xchg
gs
dec
jmp
and
sbb
adc
rcrl
cs
jmp
loope
pop
adc
js
icebp
call
push
mov
sub
sti
xor
pop
clc
jo
lds
cmpsl
cmc
js
mov
push
test
xor
add
push
fwait
out
loope
pop
pushf
push
push
js
fstp
mov
cmc
lock
dec
mov
or
frstor
fldcw
leave
int3
push
enter
rcl
ja
mov
loopne
push
shlb
iret
push
adc
mov
jp
and
arpl
mov
add
add
add
aas
rcrb
fldl2t
cltd
xor
sub
lcall
or
jns
test
not
lds
test
dec
sti
out
dec
sbb
add
jp
or
repnz
and
xchg
inc
ret
adc
and
push
sub
mov
push
or
push
lods
mov
test
and
pop
nop
pop
addr16
call
dec
xor
insb
dec
orb
cli
jno
scas
arpl
add
mov
dec
dec
pusha
pop
lods
lahf
xlat
adcb
push
mov
jp
sahf
outsl
push
sahf
fdivrs
out
loope
xchg
pop
add
fcmovb
xor
hlt
bound
pop
mov
popa
ds
pop
push
inc
mov
iret
enter
mov
enter
jle
cmp
sbb
hlt
clc
sahf
stos
jne
jno
in
sbb
cmp
cs
jmp
fs
testl
xchg
adc
add
aad
mov
scas
or
add
adc
or
js
inc
rcr
inc
les
xor
jae
stc
lahf
pusha
repnz
pop
mov
add
xor
mov
filds
sbb
dec
pop
sub
ret
or
push
addr16
push
jo
and
inc
jae
push
outsl
addr16
les
pop
dec
xlat
mov
dec
je
jp
std
sub
mov
lret
sbb
sbb
xchg
and
in
iret
jo
in
add
cltd
add
push
lock
in
add
clc
movsl
fwait
jmp
jecxz
jnp
psraw
imul
loopne
mov
sarl
xor
movsbl
xor
jnp
pop
movb
lret
sbb
hlt
ret
jge
subps
xor
pop
push
xlat
xorl
dec
add
jge
push
inc
xchg
add
inc
inc
cwtl
fcomp
push
adcl
call
cmp
cs
jg
pop
scas
pusha
and
xchg
lds
repz
push
test
pop
jmp
int3
sti
pop
mov
pop
inc
push
xor
sbb
push
adc
add
test
ficoms
push
jnp
pop
pop
popa
sub
out
lods
dec
mov
xchg
stos
mov
iret
mov
mov
sub
test
int
mov
imul
imul
jbe
and
and
aas
loope
inc
stos
push
leave
add
lret
mov
out
sub
daa
mov
imul
add
inc
xchg
fadds
pop
sub
sbb
xor
push
mov
ja
inc
adc
cmp
push
lahf
rclb
pop
mov
fs
push
das
mov
xchg
adc
dec
mov
push
js
out
dec
xchg
add
aad
mov
dec
cmp
xchg
jne
filds
insb
pop
sbb
rorl
pop
add
mov
mov
adcl
ret
xchg
and
jno
dec
or
or
cmpsb
adc
fsub
and
add
push
ja
sbb
mov
sbb
ss
dec
clc
cmp
pop
jnp
stos
lahf
test
mov
pop
mov
test
in
and
js
lea
cltd
lcall
iret
rclb
adc
jne
xlat
shl
gs
lods
stos
dec
cmp
lods
loopne
mov
stos
cmp
push
jmp
inc
mov
xchg
jno
pop
subb
sbb
xor
iret
lcall
xor
lds
add
push
or
inc
es
cmp
pop
adc
jne
xor
adc
dec
sbb
add
lock
push
mov
jo
negl
jns
into
jb
fs
jo
or
dec
mov
push
outsl
jg
fildl
mov
test
jns
cmpsb
popa
mov
imul
je
jge
dec
jg
sub
xchg
or
xchg
je
mov
inc
sbb
push
sbb
aaa
lock
and
mov
push
inc
rcrl
or
push
add
aam
sarb
inc
mov
lcall
pop
xor
loope
push
mov
push
vpslld
shrl
je
aaa
mov
mov
movb
sarb
rolb
mov
lcall
aaa
js
push
outsl
and
cmp
insb
popf
pusha
ret
push
push
imul
xchg
cmc
notl
jmp
adc
lds
pop
arpl
ret
stos
or
jge
push
test
nop
mov
mov
and
add
jbe
pop
pop
fiadds
xor
nop
cmp
inc
add
jmp
mov
pop
cmc
xchg
sub
xor
push
push
pop
mov
je
ljmp
mov
test
push
xchg
sbb
loop
push
popa
pop
cmp
xchg
and
fwait
or
movsl
sbb
stc
call
or
add
push
and
jmp
xchg
add
fwait
cmp
lea
and
je
pop
xor
or
sbb
jno
sarl
test
ficomps
xor
sbb
aaa
pop
push
test
stc
xor
test
xchg
loope
dec
push
push
arpl
in
dec
xchg
add
rclb
test
sub
es
repnz
dec
pop
lds
or
inc
loope
sbb
jge
loopne
cmpsl
subl
aaa
mov
push
add
fstpt
push
testb
dec
mov
and
lock
and
scas
out
mov
inc
jnp
ret
jp
pop
sti
pcmpeqw
fstpl
jno
popa
pop
fwait
xor
lods
lret
pop
push
inc
xor
xchg
fwait
jo
push
sti
xor
shr
imul
lcall
xchg
sub
jae
test
lcall
push
push
insb
xchg
ret
or
in
mov
sbb
jp
sub
sub
cmp
test
jmp
fwait
inc
mov
cmp
xor
aaa
push
imul
sbbl
mov
lret
push
add
in
inc
sarl
mov
xchg
push
addr16
aad
daa
pop
push
pop
enter
js
and
iret
lcall
pop
pop
jp
mov
mov
cwtl
arpl
jle
inc
push
and
loope
ret
mov
fldt
dec
fbld
mov
jb
in
add
jecxz
jnp
jbe
call
cmp
jnp
xor
cmpsl
in
mov
loopne
leave
jecxz
and
cmp
idivl
shl
imul
out
sbb
inc
jl
cmp
inc
add
pusha
mov
adc
dec
in
mov
ljmp
call
mov
push
fs
lods
mov
jno
mov
mov
or
mov
push
sar
xchg
mov
insl
lods
mov
out
int
push
cmp
ja
fldl
popa
stos
jno
in
inc
jecxz
daa
sahf
mov
scas
sbb
inc
mov
ss
stc
jae
xchg
in
xchg
push
xchg
repz
xor
call
rcl
push
lahf
jge
lea
add
or
cmpsl
aaa
mov
aaa
lcall
cmp
xorl
insb
movsb
daa
pop
aad
sub
jno
in
xchg
push
stos
mov
add
filds
xor
mov
inc
loope
sub
aad
pop
add
sbb
ror
mov
adc
fldt
add
dec
adcl
jno
jmp
repnz
add
jo
push
push
js
dec
mov
movb
pop
loopne
xchg
rcl
xchg
or
lahf
je
xchg
scas
into
sahf
dec
mov
inc
dec
dec
jno
das
sub
lcall
popa
les
inc
lock
sbb
lods
imul
ret
push
xor
test
pop
repz
adc
gs
sbb
jle
test
xor
fcoml
lock
xor
or
jmp
lock
fdivs
sbb
xchg
mov
add
js
push
lock
adcb
repz
out
or
sbb
mov
xor
and
and
icebp
es
add
shlb
xor
jmp
mov
jp
fucomp
pop
sti
xchg
mov
mov
sbb
xchg
daa
notl
or
add
pminsw
lea
sbb
jno
pop
jo
fistl
add
sbb
scas
das
cs
lret
mov
icebp
rcrb
mov
lea
add
fld
loopne
pop
xor
adc
dec
mov
lret
sub
add
stos
mov
sbb
movsb
xchg
mov
push
and
xor
inc
xor
mov
xchg
cmpsb
or
or
dec
and
add
lods
mov
inc
ret
std
dec
xchg
mov
add
pop
lds
jns
pushf
mov
pop
lea
jl
inc
std
mov
and
popf
fldl
adc
mov
mov
and
jae
inc
and
adc
pop
xchg
sbb
pop
cmpb
and
rcr
and
in
aam
imul
add
inc
jg
arpl
adc
aas
push
add
pop
lods
pop
mov
cmp
lods
jp
sub
faddp
fs
adc
inc
fs
or
ds
push
sahf
icebp
je
movsb
xchg
jmp
xor
adc
inc
popf
xor
ret
imul
pusha
adc
int
jge
push
adc
loopne
test
cmc
dec
subb
inc
jbe
lods
adcl
pusha
xor
sbb
adc
imul
mov
aaa
sbb
xor
sahf
dec
arpl
scas
cmc
rol
int3
xchg
push
fnstcw
cmpsl
dec
xor
cmpsl
icebp
gs
push
dec
or
lods
add
leave
adc
stos
xor
add
fisttps
lcall
or
push
jb
ss
repz
mov
push
dec
sub
in
push
aaa
mov
insb
imul
imul
adc
repnz
or
arpl
xor
push
mov
add
in
cmp
and
rcl
ja
sub
push
rorl
push
and
pushf
push
mov
xor
popa
mov
add
xor
aas
add
inc
mov
add
popf
sub
push
movsl
lahf
push
dec
dec
ss
and
push
rorl
arpl
push
add
je
test
inc
test
iret
xor
cs
sub
jno
sbb
or
rcll
push
lret
rorb
add
mov
sbb
fisttps
pop
sbb
or
sub
rorb
jg
cmp
or
aaa
push
dec
movsb
push
pop
fwait
push
nop
shll
sbb
js
and
add
sarb
xchg
sbbb
pushf
inc
bound
cmove
loopne
adc
cmp
ja
cmp
xor
xchg
mov
adc
icebp
add
insb
movsl
ljmp
and
push
call
dec
aad
mov
cmpb
sbb
pop
lods
mov
dec
jg
mov
paddq
aas
cmp
cmp
xchg
push
sub
dec
fistps
jmp
inc
push
and
xchg
or
jl
push
or
mov
xor
imul
lcall
test
fisttps
pop
or
test
sub
xor
push
pop
icebp
mov
adc
sbb
shl
int
cltd
mov
movsl
lahf
fimuls
add
loope
sbb
ss
sti
xor
or
fistps
inc
arpl
cmp
inc
push
jo
jmp
xor
cmp
or
jnp
cmpl
push
aad
in
fadds
leave
lock
sbbb
inc
sbb
imul
les
xchg
xor
or
lods
add
lret
lods
out
jno
fidivs
sub
sti
dec
and
xor
mov
push
rolb
xor
cmpsl
mov
adc
aam
mov
pushf
inc
inc
lds
arpl
aad
xchg
sub
sarl
lmsw
adc
add
push
mov
movsb
xchg
jno
imul
cmp
push
jecxz
and
sbb
or
outsl
bound
and
add
dec
test
nop
push
outsl
sub
sti
and
mov
push
loope
and
sub
xchg
sub
movsl
xchg
mov
or
das
int
incl
or
pop
pop
adc
hlt
mov
adc
sahf
insb
in
cltd
outsl
dec
popf
icebp
dec
cmc
and
inc
jo
inc
inc
shr
lahf
or
test
push
sarb
out
and
popa
lods
xlat
add
adc
movsb
jno
hlt
pushl
or
shlb
add
icebp
mov
daa
addb
mov
adc
cmp
dec
adc
or
rcll
push
adc
fsts
imulb
mov
add
xor
fadds
jle
mov
test
movsl
lods
push
pushf
aam
or
sub
pop
inc
or
lea
inc
cmpsb
ss
push
in
iret
ss
cs
cmp
inc
and
adc
mov
mov
or
push
and
mov
lods
insl
pop
pop
idiv
cmp
arpl
nop
mov
aad
add
sub
sub
push
mov
loope
or
lret
jle
std
push
pop
rolb
cmp
in
or
fcomi
int
out
mov
cld
adc
outsl
lret
dec
jbe
pop
flds
lods
adc
testl
or
push
xchg
iret
sub
or
mov
push
loope
cmp
jo
inc
cld
ljmp
xchg
mov
popf
adc
pop
loope
insl
sbb
push
rorb
and
and
jnp
lds
lea
shl
out
dec
mov
cmp
cmc
inc
inc
xor
adc
scas
add
pop
pop
inc
mov
sub
or
jne
call
inc
inc
enter
ja
test
pop
push
add
mov
pop
cwtl
popf
lods
lds
jns
ficompl
outsl
arpl
imul
mov
movb
lcall
lcall
aam
subl
adc
push
mov
lods
cmpsl
lcall
addl
sbb
xchg
push
sbb
shrl
cmp
iret
shll
sbb
jg
mov
and
mov
or
cmp
ljmp
mov
cmpsb
ljmp
and
test
sbb
adc
sub
sbb
outsl
add
cmp
rclb
adc
dec
xor
js
add
add
pop
mov
aam
std
lods
pop
jne
push
add
xchg
or
fsts
pop
sbb
push
ret
sub
test
loope
add
xchg
adc
les
pushf
mov
pop
fs
and
cli
sbb
inc
cltd
lea
sbb
test
push
cmp
lahf
fidivl
icebp
add
dec
inc
pop
sub
dec
adc
mov
mov
mov
clc
or
test
lock
int3
or
movsb
aaa
pusha
popa
jmp
fnstsw
add
pop
xchg
xchg
rorb
rorl
inc
sub
xorl
add
xor
add
out
add
subb
add
push
add
lret
jae
pop
add
lret
xor
bswap
pop
leave
sbb
mov
adc
loopne
cmp
adc
cmpsb
xchg
jle
cld
inc
sbb
add
outsl
sub
stos
cltd
sub
jmp
mov
ss
adc
dec
jnp
push
aam
sahf
andb
rcll
idiv
pop
call
inc
pop
loope
and
mov
push
mov
mov
push
pusha
daa
mov
add
jne
movsb
int
fnsave
lods
mov
aam
sub
inc
jne
out
xchg
in
xchg
sbb
push
adc
inc
aas
dec
loope
lcall
and
aas
or
push
push
xor
mov
xchg
scas
mov
push
jl
mov
and
xchg
xor
push
mov
adc
adc
inc
jecxz
or
test
mov
movsl
test
and
cmp
adc
xchg
gs
xor
add
jecxz
call
enter
int3
push
repz
mov
movsb
dec
movb
xchg
inc
inc
out
and
aam
call
push
testl
mov
or
cmp
shrl
cwtl
sub
lret
add
ja
xlat
repz
mov
and
mov
push
mov
lret
jae
xorl
jecxz
arpl
mov
xchg
div
scas
icebp
inc
out
movsb
insl
pop
or
js
shlb
or
mov
lcall
fistps
add
inc
cltd
into
add
add
lahf
cmp
sbb
adcl
pop
stos
jne
ljmp
scas
lods
dec
cvtdq2ps
adc
or
into
and
adcl
sbb
inc
mov
add
adc
es
int
mov
sub
das
adcl
pop
subb
dec
leave
bound
sub
sub
add
inc
mov
jmp
dec
stc
iret
clc
daa
mov
push
mov
inc
inc
ss
call
les
adc
jl
and
push
jne
inc
mov
add
outsl
add
mov
mov
popf
inc
xchg
mov
pop
mov
leave
aam
shlb
loop
sti
lahf
leave
aam
push
loope
mov
das
cs
sti
lods
sbb
ret
bound
jne
icebp
mov
push
inc
pop
sbb
cmpl
fldt
mov
sbb
mov
xchg
aam
push
cmp
pop
xchg
orl
pop
ret
mov
lods
mov
in
xchg
sbb
das
jecxz
pop
mov
mov
xor
mov
outsb
je
pushl
and
das
dec
sbb
inc
mov
mov
add
sahf
xor
xlat
test
jmp
and
cmp
test
test
xlat
lcall
stos
push
pop
inc
lods
lock
mov
in
push
mov
imul
testb
pop
dec
push
das
mov
xor
mov
lret
imul
mov
int
sbb
inc
idiv
xchg
call
lahf
outsl
jl
dec
pop
pop
mov
test
xchg
mov
jecxz
xchg
xor
pop
sub
es
adcb
pop
das
add
push
inc
push
enter
add
lods
inc
or
jno
push
sub
in
lcall
mov
push
adc
lods
addr16
rolb
in
add
adc
loopne
add
inc
es
mov
loope
mov
lret
je
rolb
xchg
lods
push
pop
cmp
push
and
adc
mov
lahf
in
adc
xlat
xchg
jns
pop
testl
sbb
pop
lock
adc
lock
invd
mov
cmp
or
and
das
mov
push
and
out
addl
inc
addr16
mov
pop
ret
pop
cmpsl
pushf
out
stos
lahf
testl
push
enter
arpl
popf
dec
jmp
repz
testb
xor
mov
mov
sbb
and
add
daa
test
push
cmp
pop
shll
adc
mov
inc
andl
popa
dec
lods
pop
add
cs
flds
and
cmp
cmpsl
add
inc
xchg
push
push
ret
inc
ret
push
xchg
inc
pushf
fidivl
fisttpl
pushf
fiadds
imul
lock
dec
sub
dec
int
gs
or
push
pusha
outsb
bound
sub
mov
mov
cli
gs
das
dec
fistps
lahf
add
imul
decb
shrb
loopne
repnz
shlb
dec
fisubrl
sbb
fwait
sti
fisubrl
mov
pop
call
push
cmpsb
jne
in
lock
mov
rcrl
add
div
popa
bound
xchg
imul
push
repz
pop
inc
inc
push
inc
scas
adc
lcall
jne
inc
mov
daa
mov
shrb
dec
cmpsl
cmp
pop
add
xchg
lock
or
fbstp
push
rolb
adc
sub
popa
sub
mov
int3
add
add
adc
xlat
test
pop
rcrb
add
mov
outsl
stc
sub
dec
imul
add
dec
jae
xchg
lahf
add
add
pop
nop
xchg
sbb
sbb
cmp
push
add
sbb
rol
add
sbb
adc
shl
jl
pushf
add
fldl
movsb
shll
movsb
aad
xchg
jne
xor
rcr
cld
std
jl
pusha
and
stos
std
jp
xchg
test
fmulp
les
push
and
scas
xor
add
pop
mov
dec
sub
adc
loopne
js
add
cmp
gs
jno
jno
test
lret
mov
push
stos
add
xor
xor
and
or
push
popa
jno
fmull
inc
rorb
insb
cmp
pop
or
fwait
adc
cwtl
push
and
cs
enter
inc
aaa
aad
and
loop
xor
sub
clc
lock
pop
pop
add
loope
imul
pop
test
out
sbb
add
test
shl
or
arpl
lds
adc
inc
stc
sub
call
pop
add
push
push
cmpsl
stos
mov
sbb
fnstsw
dec
xchg
xlat
push
lods
bound
mov
jmp
scas
mov
mov
mov
mov
mov
ja
cli
ja
sbb
cmovbe
gs
pop
shll
shll
mov
fdiv
inc
addl
pop
pusha
cmpsb
lcall
xchg
adc
push
aam
pop
sbb
mov
pop
fs
aam
popf
fnsave
push
add
scas
or
and
pop
cmpsl
sti
lock
dec
call
mov
arpl
sbb
and
dec
ret
daa
xorl
add
pop
popa
test
nop
inc
and
and
dec
jp
push
xlat
fisubrl
out
dec
shll
std
rcr
pop
cmpsl
jmp
ret
sub
and
pop
cmp
lcall
mov
jne
push
push
push
lahf
repz
or
mov
xchg
or
or
sbb
sbb
arpl
mov
es
xor
sbb
inc
add
add
lods
mov
mov
or
adcb
mov
outsl
xorl
mov
sarl
jae
adc
fsubl
jmp
movsl
pop
adc
add
cmpsl
sub
std
popa
loope
sbb
xor
pop
js
aas
arpl
ja
dec
popa
cmpsl
mov
call
mov
sarl
cmp
shlb
or
dec
ret
fidivs
mov
mov
out
add
sti
in
ss
mov
bound
pushf
and
mov
add
or
sti
adc
mov
push
cmp
jns
cli
jb
pushf
or
call
cltd
dec
sub
dec
movsb
mov
es
sbb
fs
mov
xchg
push
rcr
xchg
out
cwtl
adc
popf
les
data16
xor
jmp
xorb
sbb
popa
inc
xor
aad
cs
pusha
xor
xor
call
adc
fucomp
jo
in
cltd
addr16
gs
ljmp
repnz
cmp
outsl
adc
lret
lret
insl
popa
dec
push
cmp
addl
push
aaa
subl
shl
popf
loope
test
ficompl
repz
shll
test
hlt
mov
sub
and
hlt
in
pop
add
rclb
pushf
stos
js
ret
or
popf
call
sub
or
adc
sbb
or
xchg
cmp
sub
push
addl
inc
add
sub
mov
test
xchg
cs
xchg
pop
lods
mov
pop
inc
dec
in
sub
xor
xor
xchg
test
inc
ret
gs
cmc
testl
dec
lock
xchg
xor
mov
divb
dec
fcmovnu
lret
fistps
fisubrs
add
cmp
or
push
sub
out
std
mov
sbb
movsl
jp
mov
jmp
sbb
aam
mov
aam
jge
push
adc
dec
add
in
jne
loopne
or
mov
jge
sub
pop
xor
cld
jo
lds
xor
push
mov
repz
mov
out
pop
andl
dec
and
sub
xor
ret
and
dec
lgs
call
jle
mov
mov
int3
pop
je
add
inc
xor
mov
xor
push
push
lcall
in
xor
and
dec
outsb
repz
add
pop
jno
add
cmpsb
mov
sub
pop
rcrl
pop
aaa
cs
icebp
nop
add
xor
jecxz
dec
inc
sbb
in
lea
or
arpl
dec
cmp
jbe
inc
loope
jecxz
rcl
in
inc
mov
out
pusha
aad
pop
xchg
inc
fiadds
lock
test
mov
stc
lods
stos
sbb
pushf
pop
bnd
inc
shll
repz
jae
push
sti
adc
cmc
out
or
lahf
adc
pop
adc
mov
jne
ja
mov
sbb
jge
imul
push
cltd
dec
sub
daa
add
add
enter
movsb
fcmovnu
sbb
jecxz
jb
and
rcll
adc
push
bnd
push
adc
pop
std
mov
and
pop
dec
ja
pop
dec
fldenv
xchg
incb
call
int3
or
mov
xor
aad
mov
jne
push
or
cmpsl
xorb
fdivs
lcall
icebp
push
mov
inc
repz
sub
movsb
pop
jb
jge
icebp
add
frstor
mov
jbe
sahf
lea
inc
mulb
std
andb
adc
sub
filds
xchg
xchg
xor
stc
xor
add
dec
aaa
pop
dec
pop
sysret
mov
iret
or
addr16
lds
and
iret
and
xchg
in
jmp
or
and
aaa
loopne,pt
xor
test
stos
jge
clc
fmull
jne
pop
sub
xor
jl
mov
pop
mov
ss
push
push
mov
pop
mov
sti
pop
loope
pop
xor
inc
push
call
cmp
lret
jne
and
adcl
pop
stos
pop
jp
aaa
xchg
xor
movsl
popa
dec
bswap
xchg
es
iret
inc
inc
cmp
loopne
rorl
fwait
jmp
dec
xor
push
insb
sub
inc
jg
call
lods
and
jbe
mov
xchg
xor
imul
sbb
outsl
fisubl
cmpsb
out
test
js
xor
pop
imul
out
mov
lods
ret
cmpb
xchg
rorl
test
call
xor
shl
push
lock
cmc
and
push
pop
js
lahf
sub
sbbl
imul
arpl
inc
mov
femms
subb
lods
push
push
fwait
push
dec
mov
aaa
scas
inc
and
mov
add
loopne
icebp
push
or
inc
sahf
lods
pop
hlt
loopne
cmc
xchg
xchg
jnp
jbe
add
jno
pop
cld
adc
in
push
xchg
dec
lcall
cmp
rcl
mov
pop
mov
pop
mov
lea
lds
aam
dec
into
icebp
xor
bound
jb
fidivrl
adc
repz
add
inc
mov
mov
push
stc
shlb
and
xchg
mov
adc
jnp
out
adc
inc
pop
dec
push
xlat
loopne,pt
xchg
dec
ss
inc
aas
ljmp
mov
add
shlb
ja
filds
cmpsl
and
js
mov
dec
scas
jle
test
and
rorl
mov
inc
lock
arpl
push
inc
movsl
dec
rcll
jl
push
xlat
sbb
mov
out
fisttps
mov
out
loope
push
push
push
mov
sbb
pop
test
push
arpl
xchg
call
imul
loopne
mov
sbb
pop
pop
arpl
hlt
push
or
in
mov
inc
pop
mov
cmpsb
lahf
add
xchg
std
daa
loope
jecxz
ja
dec
push
testb
mov
lods
popa
sub
loopne
hlt
int3
sub
out
subl
lods
mov
mov
add
es
aad
mov
mov
jmp
jo
jnp
and
arpl
lock
cmp
jbe
sbb
inc
loopne
loopne
jbe
cli
fbstp
scas
addr16
roll
filds
or
sbb
and
jmp
stos
roll
adc
and
fstpl
mov
shrb
lret
out
xchg
xchg
adc
dec
loope
sti
dec
sti
mov
push
jecxz
jmp
xchg
fistps
sub
sbb
adc
mov
int3
push
push
mov
mov
fsubrs
cmp
push
or
stc
sti
sub
xchg
mov
jne
je
mov
out
sub
adc
mov
push
fists
jbe
xor
out
cmp
call
mov
ja
lcall
ja
sub
adc
es
orl
outsl
xchg
loope
arpl
aam
xor
adc
pop
fwait
sbb
int
fdivr
pop
pop
and
out
sbb
and
mov
inc
xchg
lods
dec
mov
dec
clc
or
xlat
int
mov
push
hlt
sahf
loopne
xchg
es
in
jp
add
mov
push
mov
insl
insb
aas
imul
jecxz
sbbl
enter
out
fwait
mov
sub
js
dec
and
pop
loope
pop
loope
ds
mov
sbb
sub
outsl
adc
jge
cmp
xchg
mov
mov
xor
and
cltd
cwtl
popa
mov
stos
pop
cltd
sarb
rclb
inc
sub
pop
pop
inc
into
pop
push
inc
test
pop
pop
test
lret
push
loope
cmp
or
imul
adc
lahf
xor
sub
sub
sub
add
cltd
sub
cmovp
push
inc
xchg
incl
pop
mov
xchg
push
and
mulb
xor
push
cmp
repz
lds
mov
inc
popf
sbb
out
popa
sbb
scas
nop
shrb
xchg
add
addb
add
push
sahf
add
xchg
je
mov
je
mov
push
push
fisubs
dec
dec
add
add
dec
dec
push
mov
add
jne
mov
stos
int
pushf
cmp
popl
add
dec
cmp
jo
inc
mov
add
cmp
or
adc
xor
shrb
dec
js
or
adc
int
push
add
das
or
pop
adc
sbb
and
aad
and
jo
imul
movsb
nop
les
mov
shll
and
mov
imul
divl
in
loope
fsubrs
test
push
arpl
mov
arpl
mov
sbb
jo
sbb
popa
or
lcall
inc
andb
mov
scas
xor
rcll
inc
js
mov
jmp
add
mov
inc
add
out
xor
sbb
add
push
jno
xchg
test
test
pop
dec
call
dec
adc
orl
cltd
inc
dec
negb
test
add
xchg
push
xchg
into
loop
cmp
fisubrs
pop
jecxz
or
mov
loop
or
ljmp
addl
js
cmp
call
sbb
imul
ja
inc
lcall
add
sahf
loop
jne
ja
outsb
lods
mov
subl
inc
lds
ss
pop
loopne
mov
adc
adc
pop
or
jb
out
add
loope
or
add
rol
popa
jmp
ret
cmp
rol
imul
jo
out
aaa
mov
shl
jno
hlt
sbb
lock
shrl
fs
lret
jmp
sbb
popf
inc
jno
sbb
and
fwait
push
cmp
and
mov
iret
push
cmp
pop
jb
xchg
xchg
cmp
xchg
loop
push
jge
sbb
fisttpll
or
leave
adc
pop
mov
dec
jecxz
call
dec
outsl
xchg
mov
sbb
faddp
add
pop
shrl
add
jmp
push
mov
adc
xor
sbb
fwait
orb
jmp
jbe
lahf
test
pop
shlb
test
and
fsubrs
xchg
test
xchg
add
mov
dec
push
inc
inc
shrb
imul
jge
pop
addr16
cmpsl
mov
inc
ret
xor
or
mov
jb
inc
push
xor
das
mov
dec
lods
lock
sbb
aaa
inc
dec
popa
cmp
dec
mov
mov
xorb
or
xchg
movsl
xor
pusha
shll
add
lock
sub
xor
push
push
cmp
popa
mov
xchg
fs
in
lods
inc
push
inc
push
dec
loope
popa
loope
jecxz
or
add
insb
inc
daa
shrb
mov
jno
pop
lock
cmpsb
xchg
mov
sub
jne
mov
sbb
test
bound
mov
and
mov
and
rorb
or
stos
jg
lahf
out
inc
push
add
adc
popf
int
push
adc
and
pop
loopne
mov
xchg
mov
push
push
cltd
pop
test
xchg
mov
sbb
cmp
xchg
cmp
imul
dec
insb
jg
inc
sbb
ret
sqrtps
add
shrl
mov
or
lea
add
pop
sub
and
cmp
or
push
fldcw
ffreep
add
lock
or
icebp
add
jge
in
dec
and
test
movhps
into
sub
movsl
aaa
fs
sbbl
nop
ret
test
cmp
jo
or
test
or
jmp
inc
lahf
or
sub
xor
sbb
xlat
stos
xorb
jmp
lods
cs
mov
add
imul
sub
mov
jge
lahf
insl
lret
mov
xor
jl
xor
int
std
inc
sbb
push
xor
or
sbb
xor
dec
insl
push
fst
sbb
movsl
aaa
xchg
mov
shll
in
ja
cmpsb
mov
out
add
dec
mov
cmp
insb
call
xorb
dec
jne
fstpl
xor
mov
add
push
jmp
loope
sbb
lea
dec
in
lods
dec
mov
sub
push
out
in
jg
mov
cmp
mov
add
iret
repnz
movsl
mov
scas
and
push
mov
and
or
bound
loope
mull
lods
test
adc
mov
push
test
pop
lcall
mov
sub
pop
cwtl
mov
add
add
sbb
jp
das
aaa
add
pusha
or
xchg
xchg
insl
fistps
inc
leave
sub
pop
insl
add
es
outsl
je
or
jmp
sub
lcall
adc
dec
xchg
mov
push
subl
std
inc
push
cmc
dec
xor
cmp
fistpll
jae
cli
sub
lock
or
and
test
push
mov
inc
std
add
outsb
push
fimuls
mov
stc
and
mov
jbe
int3
pop
aad
insb
and
in
movsl
sbb
pop
push
shlb
sti
fisttpl
adc
push
xchg
or
cmc
sub
adc
adcb
cmp
inc
cmp
aas
cmp
les
test
movl
xchg
imul
fsubs
test
add
xchg
mov
mov
push
xchg
lcall
jo
sub
jno
test
cltd
cmp
faddl
pop
pop
sbb
pusha
lds
imul
pop
push
sub
cmpb
rcrb
dec
mov
push
push
sub
jge
dec
dec
nop
lods
movsl
gs
imull
arpl
push
add
jecxz
ret
xchg
mov
sbb
xor
cmc
sub
out
leave
jge
in
dec
data16
push
dec
dec
xchg
lods
movsl
sbb
dec
xchg
sub
pop
inc
add
mov
lods
pop
or
lcall
cltd
arpl
movsl
pop
pop
mov
jnp
cmp
pusha
xchg
jmp
addl
repz
xor
push
lea
mov
ds
jnp
mov
xor
shrl
lods
stos
push
imul
xor
jnp
mov
fdivrs
adc
jo
adc
lcall
sbb
xchg
push
loopne
in
mov
sbb
and
mov
out
roll
repz
insb
les
fiadds
jne
fwait
mov
mov
pusha
mov
cmp
fs
jnp
iret
and
icebp
jmp
lds
pop
push
inc
es
sub
cmp
mov
rcrb
add
pop
test
test
push
movsb
movsl
jo
int
sub
or
adc
add
call
and
cmc
xchg
pavgw
lcall
dec
xchg
imull
adc
out
pop
mov
and
lods
ret
rol
adcl
mov
jg,pn
mov
mov
sub
and
or
jp
cmpsb
in
push
lods
je
sub
adc
xor
xchg
mov
fidivl
sbb
push
xchg
adc
loope
frstor
mov
shrl
into
test
pop
call
lods
popa
mov
scas
mov
fstl
mov
jg
and
inc
sbb
add
in
cmp
sub
adc
and
dec
pushf
sbb
mov
xchg
pusha
out
das
inc
fimuls
mov
mov
testl
arpl
adc
push
data16
xchg
pushf
or
mov
lods
ja
pop
movsl
push
adc
loop
sbb
mov
or
dec
xchg
push
xchg
popa
in
xchg
lods
in
cmp
in
xor
cld
inc
lahf
mov
js
mov
notl
or
xchg
jge
lds
pop
mov
adc
cmpsb
xor
daa
jge
std
lods
rcll
sbb
les
cli
dec
adc
popl
xor
fldt
xor
inc
or
cmp
sub
push
ds
mov
sahf
sbb
xlat
sbb
push
nop
dec
add
adc
insb
cmp
add
shll
xchg
jmp
hlt
add
popf
dec
les
jecxz
lds
mov
adc
pop
pop
adc
fwait
xor
sarl
adc
int
dec
push
ja
lret
stos
xchg
adc
inc
mov
mov
cltd
xor
and
push
adc
xchg
mov
pop
add
imul
adc
lock
sbb
js
jp
adc
lcall
xor
js
pop
pushf
imul
adc
loop
fisubl
push
cli
jo
pop
inc
inc
pop
xor
push
and
nop
subb
dec
inc
jl
push
jae
pop
xor
jp
rcll
mov
aaa
jno
mov
lea
adc
das
jmp
aaa
popf
out
xchg
jno
lahf
push
cmpsl
or
sarb
mov
scas
rclb
inc
add
enter
das
mov
or
movsb
stos
imul
add
mov
nop
popf
or
mov
xchg
movsb
lret
push
mov
push
stos
stos
fiadds
int
mov
inc
rcll
pop
ljmp
dec
cmp
or
cmp
sub
shll
fldenv
adc
dec
inc
push
stos
fildl
add
ret
mov
popf
or
pusha
inc
cli
daa
mov
lcall
pop
iret
mov
stos
mov
sub
jb
or
call
sahf
jmp
lret
outsb
lods
das
sbbb
dec
push
flds
push
gs
in
jno
or
dec
pusha
mov
mov
lock
cmp
sbb
fnstenv
insl
in
and
jae
daa
lea
clc
lea
or
jmp
call
xchg
fcomps
or
adc
cmc
jne
or
push
adc
inc
xchg
mov
iret
xor
sbb
add
popa
sub
insb
inc
test
or
test
sbb
adc
adc
jbe
into
jmp
push
fisubs
ss
xchg
dec
aas
xor
cmp
dec
mov
inc
add
movsb
dec
gs
in
je
popa
or
fstl
lods
xor
push
push
inc
fcmovnb
aaa
push
fildll
ret
fmulp
pop
sbb
mov
jl
cmpb
add
xor
add
es
sub
mov
add
pop
mov
imul
jne
add
mov
xchg
pushf
or
bound
push
mov
or
xchg
pop
outsl
ret
ret
mov
dec
or
mov
push
testb
sahf
push
stos
and
lds
xor
pop
add
fwait
inc
xor
sbb
xchg
cmc
mov
add
in
cmp
rclb
pop
arpl
lock
sbb
adc
sbb
mov
xchg
sbb
jnp
push
fadds
je
fdivrs
pop
lcall
cmp
xor
jnp
std
out
arpl
aas
test
jge,pn
les
adc
inc
push
lods
aaa
sub
jae
mov
jae
test
mov
sbbl
scas
cmp
push
push
imul
pop
pop
inc
sbb
adc
push
mov
popa
notb
int
or
stos
and
or
jne
adc
fiaddl
loop
fwait
push
icebp
inc
sub
fldt
sarl
sbbb
sub
inc
inc
lahf
mov
mov
pop
sub
js
popf
push
jne
je
cmp
mov
sbb
push
fwait
push
inc
js
mov
ljmp
push
lea
sub
adc
movsb
hlt
inc
add
inc
out
mov
inc
inc
pop
push
imul
add
add
lea
inc
in
dec
rorb
pop
fldenv
movsb
adc
shlb
cmp
shll
int3
xchg
xchg
rolb
adc
sbb
lock
jne
or
pop
add
adcb
dec
ljmp
and
inc
in
addl
push
xlat
mov
and
mov
and
jmp
mov
mov
or
xchg
pop
pop
into
aas
pop
outsl
or
or
dec
daa
call
or
lret
or
inc
xchg
icebp
loopne
iret
adc
test
es
jns
sbb
dec
cli
dec
sbb
cmp
sbb
lret
addr16
int
loop
mov
sbb
sbb
gs
mov
pop
sbb
adcl
dec
sub
push
pop
daa
dec
sbb
sub
pop
mov
mov
fdivs
cli
xchg
loopne
dec
or
inc
outsl
popf
mov
xor
cmp
lods
mov
and
mov
movsb
test
xor
mov
pop
inc
imul
arpl
dec
mov
lret
pop
ja
add
iret
xor
cmp
data16
mov
jge
pop
dec
cmovg
lods
push
movsl
shll
push
dec
dec
roll
jne
sbb
shrb
rolb
je
jecxz
pop
jne
bound
jnp
sbb
stc
les
dec
add
mov
gs
outsb
test
mov
inc
mov
cmp
pusha
add
icebp
das
and
sub
cmp
adcb
sbb
adc
cmp
shrb
rcrb
pop
popa
jnp
jge
mov
movsb
lret
add
xchg
fs
dec
sub
pop
scas
fistps
cmpsl
mov
js
data16
inc
mov
ljmp
inc
cmp
cmp
sbb
push
in
scas
rcll
cld
gs
dec
pushf
xchg
inc
es
out
sub
imul
ja
lea
dec
pop
cmp
jns
push
xchg
js
pusha
std
or
dec
xchg
adc
aad
mov
les
mov
jns
dec
loope
int3
pushl
orl
andnps
or
daa
js
mov
jns
dec
dec
lods
or
movsb
xchg
mov
and
vmovsd
lds
pop
cwtl
cli
pop
jle
jo
and
loop
movsb
scas
pop
push
hlt
sub
out
pop
add
xchg
hlt
jo
jge
mov
or
jmp
popl
sbb
subl
cmp
aaa
jnp
sub
repz
arpl
ret
add
es
adc
cmp
les
lret
add
int
mov
outsb
sbb
loopne
add
jno
sahf
cmp
je
jnp
pop
xor
dec
ljmp
jecxz
bndstx
sbb
dec
dec
jecxz
pop
fisubrl
sbb
add
lods
jo
cmc
dec
lea
testl
cmc
inc
loope
jl
mov
movb
jmp
lidtl
jmp
fs
jle
pop
jmp
push
lcall
sbb
push
inc
bound
and
pop
xlat
adcb
les
push
jp
data16
dec
ljmp
fisttps
stos
shr
push
popa
dec
test
aam
dec
xor
loope
pop
xchg
pop
cmp
cmp
in
js
inc
test
pop
inc
js
daa
adc
or
mov
subl
cmp
les
push
xchg
push
push
pcmpgtb
mov
hlt
xor
test
xorl
shll
sub
push
and
divb
pop
into
cmpsb
push
sar
ss
xchg
pop
out
inc
jl
mov
aam
jecxz
adc
pop
dec
call
xlat
pop
or
adc
or
addr16
popf
push
inc
or
scas
inc
gs
or
fstl
mov
mov
les
xor
cmp
adcl
push
sbb
push
ja
dec
mov
scas
xchg
mov
movsl
sub
add
clts
lock
call
push
inc
int3
mov
aaa
or
jmp
adc
pop
shrd
xor
int3
nop
into
add
push
inc
fbld
fnstenv
sbb
rcrl
nop
cmp
push
add
outsb
dec
xor
inc
shrb
loope
pop
mov
pop
repz
sti
cmp
lretw
pop
fwait
repz
icebp
faddp
out
and
dec
add
mov
int
mov
pushf
loope
stos
imull
insb
or
repnz
xchg
mov
loopne
add
jno
pop
inc
push
jbe
mov
adc
adc
cwtl
sub
sbb
ret
sbb
rolb
jg
js
mov
inc
cltd
das
adc
test
add
decb
jae
nop
xor
dec
adc
cmp
outsl
push
or
or
jno
loope
imul
push
push
jp
scas
out
out
jno
mov
popa
test
out
les
cmp
or
adc
lock
xchg
dec
dec
aaa
mov
adc
in
cmp
adc
and
icebp
nop
sub
shll
inc
dec
adc
in
xchg
mov
sbb
push
lret
and
movsl
icebp
and
pop
mov
sti
pop
movb
enter
xchg
call
xor
hlt
mov
cmc
sti
dec
sahf
dec
mov
cmp
fucomip
dec
scas
sub
adc
pop
sti
push
jp
movsb
xchg
cmpsl
sbb
xchg
pop
out
dec
lock
add
mov
jnp
movsb
inc
mov
pop
and
and
jge
into
dec
lret
ja
cmpl
arpl
insb
add
push
and
lods
cmp
mov
mov
pop
adc
dec
jp
bound
cli
add
dec
orb
pop
popa
pop
cwtl
or
es
xchg
out
js
mov
mov
jno
cli
cmpsl
mov
loop
xor
xchg
inc
push
push
mov
imul
addl
cld
mov
cld
int
xchg
push
outsb
jg
outsl
js
cmp
inc
test
sub
cli
inc
push
mov
jno
sbb
imul
mov
mov
dec
in
out
js
xorl
or
add
sbb
pop
rolb
sub
push
jecxz
lret
push
adc
jne
pop
leave
cld
pop
sub
xchg
pop
cmp
ja
sahf
or
and
sbb
or
cli
incl
xlat
loopne
pop
add
nop
aaa
lahf
push
add
sbbl
and
pop
mov
stc
push
pop
rorl
pop
bound
or
sahf
and
es
aaa
add
xchg
inc
pushf
rcrb
jb
loope
data16
rcrb
sub
push
je
mov
or
ja
inc
shlb
test
sbb
adc
scas
test
sbb
sub
adc
cltd
push
or
jae
sbb
adc
xchg
insl
ret
mov
out
cmp
outsb
adc
movsl
xor
cmpb
cs
nop
push
push
mov
in
insb
sahf
push
push
out
popf
mov
cmc
inc
loop
cmp
inc
or
jp
or
daa
rolb
xchg
aas
cmpsb
cmp
dec
cld
pop
push
fiaddl
sub
std
addl
es
add
jl
nop
aad
mov
gs
jbe
mov
cltd
sbb
pop
faddl
jae
test
adc
cmp
das
push
jno
dec
add
jle
dec
add
xchg
xor
movsb
insl
mov
jmp
sbb
sub
xchg
cmp
mov
fstps
dec
jge
adc
push
push
outsl
cmp
mov
out
bound
lods
mov
out
mov
sbb
nop
push
in
dec
dec
fwait
push
jno
dec
pop
push
pop
mov
and
mov
or
lahf
jno
pushf
addr16
dec
cmp
mov
adc
mov
iret
jns
fcompl
add
sub
and
sub
in
fadd
jge
xchg
int
sahf
outsl
les
loopne
testl
adc
movsl
inc
cmpsb
jl
jnp
in
pop
xchg
sub
push
cmp
xorb
sahf
jb
xor
aad
lods
faddl
inc
das
sub
mov
dec
sahf
and
icebp
fs
xchg
inc
sahf
sbbb
adc
in
psraw
push
pop
jecxz
je
xchg
pop
adc
adcb
out
ljmp
sahf
push
and
adc
pushf
aas
cld
outsl
stc
dec
xchg
ds
sahf
add
mov
fimuls
scas
and
mov
rorb
add
enter
inc
scas
mov
lahf
jbe
rorl
adc
js
xchg
dec
pop
arpl
sar
or
fbstp
push
mov
rolb
sub
into
sbb
loopne
mov
ret
hlt
in
and
lcall
mov
test
push
push
mov
stos
mov
pop
jmp
push
xchg
pop
cmp
cmp
and
icebp
or
loop
pop
lcall
adc
inc
push
sub
and
add
xlat
inc
or
xchg
sub
sahf
and
clc
pusha
add
aaa
cltd
dec
dec
pop
mov
and
in
ss
cltd
stos
jmp
sub
add
inc
mov
popa
mov
shrl
jge
jb
js
rolb
test
cmp
call
xchg
sbb
clc
dec
adc
mov
push
add
adcb
mov
push
xor
clc
xor
shlb
sti
add
add
loopne
sub
mov
je
les
mov
ljmp
inc
pop
sarl
addl
mov
sarb
or
mov
add
push
pop
add
jp
ds
shlb
bound
push
dec
daa
mov
pop
int
or
cwtl
shl
inc
dec
das
repz
mov
test
adc
fs
push
arpl
add
test
loopne
hlt
in
sbb
push
iret
leave
dec
iret
pop
mov
xor
xchg
xor
bound
mov
clc
xchg
lret
inc
and
dec
out
xlat
inc
push
in
xchg
in
add
push
mov
jecxz
movsl
add
stos
dec
sub
sbb
sti
aaa
xchg
push
mov
dec
mov
jns
dec
lock
mov
loop
and
and
testl
cmpsl
arpl
call
das
loopne
mov
xor
dec
call
inc
or
sub
xor
daa
pop
fld
mov
push
add
idivb
mov
push
icebp
and
adc
xchg
jp
cmpsl
pop
neg
fisttpll
loopne
callw
xor
or
hlt
push
push
or
sub
movsl
jl
and
cmc
jb
add
jo
and
jge
lds
aad
cmpsb
xchg
dec
out
adc
daa
mov
jg
dec
loopne
inc
jno
outsl
loope
sub
idivl
mov
es
pop
mov
inc
test
data16
sti
jmp
bound
xchg
pop
push
out
stos
mov
test
adc
sbb
add
sub
cwtl
test
iret
add
mull
mov
jb
xchg
push
mov
or
jo
or
subl
mov
into
shrb
inc
xlat
cmp
imull
sub
lea
ret
mov
popa
inc
sbb
imul
cltd
inc
jae
lea
pop
iret
shrb
xchg
or
jge
xor
ret
push
je
ljmp
or
xchg
mov
jmp
push
pop
pop
xchg
mov
add
mov
cmp
push
or
shl
test
loope
jl
mov
push
ja
pushf
jp
jae
cs
mov
lea
nop
jge
jp
pop
movsl
and
sbb
daa
mov
mov
sarb
jo
into
adc
or
dec
push
lods
addr16
jmp
out
sub
icebp
lea
outsb
cmpsl
xor
mov
insl
mov
adc
insl
or
cmc
xchg
pop
orl
sbb
jg
add
popa
dec
aam
push
push
inc
fnstsw
rcll
inc
mov
inc
aad
loope
push
lret
fisttps
adc
jbe
cld
in
jle
jne
or
push
push
aam
add
pop
push
gs
mov
subb
jbe
subb
lcall
fs
mov
mov
sbb
mov
xchg
adc
data16
dec
sub
inc
or
and
loopne
mov
pushf
lods
mov
inc
push
mov
imul
in
rcrb
sbb
jmp
push
out
add
mov
shl
sti
loope
xchg
jg
jge
mov
mov
orl
xor
jo
sahf
ret
add
adc
or
inc
dec
sbb
fdivs
imul
push
roll
jae
add
mov
je
adc
xor
rcrb
insl
clc
add
imul
push
add
or
add
jecxz
mov
push
cmp
and
sbb
push
fildll
and
aas
das
cmp
ds
loopne
outsl
adc
outsb
in
push
sbb
sbbl
add
outsl
sbb
int
pop
adc
pop
pop
or
dec
int3
inc
fs
imul
mov
popf
xchg
jmp
add
xorl
push
pop
jmp
pop
enter
lret
or
xchg
fsubrl
push
cmp
mov
pop
clc
lret
xchg
addr16
andl
inc
out
cmp
stos
arpl
test
loopne
dec
fst
aad
clc
cmp
jnp
iret
cmp
fcoms
test
fwait
dec
add
ret
jbe
dec
push
aam
pop
mov
lcall
enter
sub
sub
adc
jne
push
fidivrs
xchg
sbb
or
jmp
cwtl
arpl
xchg
aas
xchg
stc
addr16
aam
in
aaa
enter
adcl
into
push
dec
dec
insl
cmp
imul
xchg
lods
call
mov
xchg
cmp
inc
jnp
xor
jle
jb
insb
dec
dec
xchg
scas
hlt
movsb
jge
test
sub
lods
bound
rol
dec
push
cmp
sahf
xor
cld
hlt
add
add
addr16
or
dec
andl
mov
push
repz
stos
pusha
shll
addr16
pop
adc
or
lock
adc
mov
inc
negb
das
ds
iret
or
in
inc
call
call
push
pushf
adc
mov
push
lcall
das
cmp
jmp
fs
push
loopne
enter
cmp
sub
push
insb
sub
data16
stc
xor
int3
enter
dec
lret
rorb
addr16
fisubs
adc
sbb
rdmsr
sbb
add
leave
dec
aam
adc
mov
lods
es
imul
test
je
and
add
adc
push
inc
or
jae
mov
insb
mov
jnp
or
mov
xor
mov
mov
insl
outsb
mov
daa
int
inc
dec
rorb
pop
sbb
into
call
loopne
add
outsb
pop
dec
mov
xchg
nop
inc
sub
iret
aam
ror
sbb
or
bound
ljmp
mov
arpl
jae
clc
insb
imul
xchg
dec
imul
xchg
push
push
in
add
shll
xchg
dec
add
int3
popf
push
das
jmp
jno
sbb
add
pop
popf
lods
insl
test
inc
xor
loope
loopne
inc
mov
mov
pop
xchg
or
dec
jns
add
pop
cwtl
outsb
push
insl
pop
and
mov
dec
loop
out
stos
xor
scas
aaa
ds
xchg
and
lahf
push
in
movsl
int
loope
add
aaa
inc
push
pop
fldt
popa
xchg
popf
xchg
js
iret
movsl
or
pop
mov
test
outsb
sub
jecxz
dec
insl
movsb
xor
jae
inc
add
imull
sub
into
push
mov
and
jbe
inc
or
push
je
cvtdq2ps
jg
loopne
xor
iret
scas
inc
push
jcxz
test
popf
fcoms
orl
call
icebp
das
sbb
ja
ja
fmull
mov
push
mov
and
push
jg
jg
pop
add
lea
jmp
call
xor
inc
jge
in
cmp
jnp
in
sbb
adc
jl
push
mov
adc
adc
rcr
sub
xor
movsb
lret
addb
jl
adc
aaa
lahf
xchg
iret
movsb
dec
sub
pushf
popf
psraw
or
mov
ret
jp
ljmp
adc
xchg
cmpsl
adc
outsl
add
ret
decb
jg
xor
aas
ret
scas
add
xor
aaa
dec
aam
sub
push
mov
add
push
movsl
push
cs
dec
aas
aad
sti
mov
mov
aam
stc
stos
xor
and
js
xor
adc
das
mov
les
mov
jge
mov
ret
mov
cwtl
jl
adc
fldl
out
lea
imul
addr16
fsts
scas
add
add
sbb
pop
mov
icebp
jg
loop
fadds
out
outsl
xor
lock
pop
dec
int
ret
and
cmc
arpl
or
inc
mov
jge
ret
rol
out
inc
add
sub
jge
push
sbb
push
shll
in
cmp
ficomps
lret
cli
lahf
jnp
push
cld
call
fstps
xor
mov
je
lahf
imul
pop
repz
add
in
insb
or
mov
adc
push
cs
pop
mov
push
jp
in
imul
dec
popa
add
mov
sbb
cli
and
sbbl
adc
mov
pop
jns
insl
add
dec
and
movsb
movsl
int3
shll
inc
jae
xor
mov
lock
jge
roll
lret
pop
fcoml
int3
stc
scas
fsubl
jg
add
inc
pop
imul
or
cs
pop
vpsllq
sbb
iret
sbb
push
pop
sbb
jno
sbb
scas
jno
add
jecxz,pt
stos
in
push
inc
fwait
jbe
fstps
jecxz
and
sub
outsl
xchg
mov
jae
stos
pop
cmpsl
xor
test
sti
fdiv
sti
int
lds
ljmp
jo
aas
mov
mov
xor
adc
add
aam
insl
or
and
push
adc
xchg
push
aad
mov
fstpl
dec
addr16
int
mov
dec
test
int
mov
push
add
loope
cmp
scas
in
out
faddl
loope
fsubrl
inc
mov
in
ret
pop
cmc
dec
repz
fimuls
sbb
sub
dec
in
or
pop
push
mov
roll
pop
pop
test
aam
fnstsw
lds
test
fs
mov
imul
sbb
std
inc
jmp
sbb
jno
dec
cwtl
mov
test
jnp
mov
push
cs
adc
ljmp
xchg
mov
in
repz
lods
mov
xchg
jbe
sub
or
stos
adc
cmp
iret
pop
fidivrl
inc
sbb
pop
xor
aam
xor
gs
or
sbb
nop
nop
xorb
push
push
movsb
mov
stos
sub
lds
ret
shrl
test
mov
sbb
movsb
divl
fldenv
mov
sbb
mov
outsb
int
sub
dec
cli
aas
aad
sub
push
mov
cmp
and
inc
insl
and
insl
xchg
fisubs
add
gs
add
xchg
mov
js
mov
mov
rcll
dec
test
aaa
out
add
mov
pop
mov
jge
mov
jno
test
xorb
scas
push
arpl
cmp
mov
push
push
hlt
add
cli
sub
stc
inc
cmpsl
aad
adc
xlat
ljmp
add
loopne
jnp
sti
rcl
fadd
and
sbb
loope
into
mov
and
add
jne
mov
mov
aad
adc
faddl
cmpsl
adc
js
mov
pop
sbb
inc
inc
adc
iret
jne
or
pop
sbb
test
add
adc
xor
push
in
clc
xor
int
in
loopne
sbb
xlat
mov
cmp
push
xor
or
add
push
dec
loop
stc
inc
stos
or
adc
sbb
aaa
test
add
or
add
jno
mov
mov
stos
pop
cmp
das
ficomps
fisubrl
lea
and
nop
inc
loop
lock
cld
les
iret
mov
out
pusha
notb
adc
dec
add
mov
and
mov
xlat
mov
mov
ret
jno
pop
jo
lds
adc
test
cmp
imul
loopne
cs
rcll
imul
or
ret
dec
xchg
inc
sbb
mov
or
xor
mov
mov
rclb
adc
or
pop
dec
dec
dec
mov
add
mov
arpl
xchg
shlb
inc
cmp
jp
ret
test
and
add
dec
cwtl
loope
loope
sub
leave
adc
inc
sub
cmpsl
in
adc
adc
movsb
and
movsb
push
push
pop
push
jmp
mov
add
fstpl
mov
mov
mov
mov
inc
dec
popf
rorb
clc
adc
rcrb
iret
cmp
cmpl
mov
mov
insb
xchg
sbb
push
inc
outsl
imul
loop
out
das
loopne
cmpsl
movsb
cmpsb
mov
jbe
xor
push
mov
sub
dec
scas
dec
mov
add
mov
leave
in
rorb
js
xlat
lcall
or
sub
imul
adc
ds
stc
stos
xor
push
adc
mov
add
push
add
pop
div
cmp
jp
mov
inc
xor
cmp
sub
and
jb
and
dec
push
inc
cmp
imul
in
xor
cmpsb
in
push
rcll
add
mov
mov
mov
dec
gs
cmpsl
jl
mov
lods
mov
mov
lods
fsubrs
test
mov
jae
pop
fstpl
jle
fcom
clc
or
xchg
jmp
pop
pop
pop
sbb
jmp
and
cmp
sub
jmp
mov
xchg
cmpsl
fisttpl
rcll
xchg
mov
push
ja
pop
add
icebp
test
mov
ljmp
rorl
insl
mov
push
or
add
mov
adc
pop
jecxz
dec
push
sub
mov
outsl
fistps
pop
mov
dec
add
sub
mov
movsl
sub
in
bound
jbe
or
imul
add
shl
rclb
aaa
dec
jae
push
pop
adc
cmp
or
sub
stos
loope
adc
scas
and
pop
or
xor
lret
cmp
addl
daa
call
ret
imul
inc
jno
call
add
pop
jne
xlat
mov
and
in
jns
test
or
pop
shll
ret
cwtl
dec
push
mov
call
xchg
and
mov
adc
cmp
cmc
stos
enter
aam
and
test
not
test
jmp
adc
xchg
rorb
pop
adc
mov
mov
mov
dec
mov
sbb
out
dec
and
iret
cmp
push
pop
adc
mov
dec
xchg
and
lods
loop
sbbl
cmpsb
or
xor
cld
xchg
movsb
dec
or
cmc
add
and
arpl
shlb
jmp
dec
sbb
test
mov
rolb
pop
ds
xor
and
mov
pop
jl
cltd
fsubrs
pop
pop
adc
cwtl
adc
push
cmp
arpl
sbb
add
dec
mov
rorb
xor
xchg
xchg
fs
hlt
add
mov
sub
cvtps2pi
adc
jne
out
add
mov
gs
pop
or
inc
dec
sbbl
add
andb
scas
pusha
mov
cmp
ja
pop
jbe
inc
cmp
add
pop
mov
je
sub
sbb
repz
and
adc
insb
in
lock
popf
loope
ljmp
jne
xor
jp
imul
push
iret
pop
addr16
cmp
inc
ljmp
xlat
pop
loopne
int
push
rorl
out
add
les
jno
fistl
push
lods
cmc
or
and
push
adc
fadds
cmp
pop
orb
stc
clts
imul
ret
push
cmp
fistpl
cmc
or
out
lahf
rcl
cs
jmp
test
leave
cmp
dec
pop
xchg
add
dec
inc
repz
adc
push
insl
pop
xor
lcall
jo
adc
gs
push
adc
jo
jno
test
hlt
jbe
movsb
stos
pop
sbb
jle
cmp
sub
jno
stc
add
fiaddl
adc
jae
mov
movsl
jmp
xor
aad
xchg
cmp
fsub
adc
mov
sbb
aas
inc
imul
ret
and
pop
xor
xor
add
push
clc
jle
cmp
xor
stos
cmp
bound
movl
shrl
jmp
aaa
mov
xlat
add
xchg
push
push
push
mov
pop
in
ret
loope
sbb
lret
sbb
add
jle
push
movsl
add
adcb
push
addr16
xlat
jne
popa
addl
add
cmp
dec
jne
push
ja
xor
mov
push
std
sbb
push
inc
pop
mov
inc
sbb
mov
jnp
stc
sbb
jb
xor
jmp
daa
imul
jge
testb
movsb
aas
jno
xchg
jno
xchg
sbb
sbb
int
mov
lea
gs
jo
xchg
cmp
or
push
call
imull
aam
xchg
push
inc
and
jge
fwait
add
or
pop
dec
sbb
loope
pop
mov
ret
mov
adc
sub
adc
in
mov
xor
leave
fwait
sub
lahf
xchg
dec
cmp
pop
aad
xor
push
push
dec
lret
jg
dec
add
add
fdivrp
push
loope
and
pop
mov
jge
jg
add
and
lret
dec
mov
cmp
sahf
aas
andb
sahf
icebp
mov
andl
test
in
andb
xor
dec
movq
ljmp
inc
jnp
inc
sahf
bound
fisttps
ficompl
fs
lds
cmp
mov
cs
inc
push
loope
ret
mov
mov
dec
aas
pop
pop
push
inc
pop
subl
mov
lahf
popf
fbstp
sbbb
movsb
adc
shrb
das
dec
inc
cld
out
loop
ljmp
push
adc
pop
loop
gs
push
loopne
scas
repz
lret
push
loope
jo
lods
xchg
ret
xor
cmp
xchg
faddl
cs
inc
call
jge
negb
inc
push
pop
add
adc
mov
adc
inc
lcall
xchg
pushf
push
xor
xor
or
rorb
push
mov
pop
cmp
hlt
xor
int
dec
movsl
add
mov
pop
popa
test
loopne
or
dec
mov
daa
xor
pop
push
ret
inc
stos
mov
test
bound
cmpsl
mov
mov
lods
pop
jb
dec
stos
mov
cmp
push
loope
jb
loope
dec
sbb
sarb
mov
mov
and
mov
cmpsl
mov
test
loop
ret
push
ret
jge
lea
sub
add
shrb
lret
loopne
mov
jg
or
sti
mov
adc
add
push
ret
cmp
adc
pop
mov
adcl
add
inc
call
adc
rcrb
loop
mov
and
push
cmp
scas
sub
daa
lods
dec
fistl
stc
lahf
aaa
iret
and
adc
cmp
adc
dec
cmp
pop
adc
lahf
mov
cmp
xchg
roll
ljmp
jb
pushf
ret
popa
scas
lods
add
and
jle
sti
jle
lret
cmp
in
icebp
jnp
cmp
imul
push
dec
dec
andb
test
xchg
or
arpl
jo
sbb
inc
jns
mov
cmpsl
fs
int
jnp
adc
jmp
jmp
lea
shlb
mov
pop
jo
insl
sub
shrl
and
mov
test
repnz
mov
sub
sub
inc
xchg
arpl
aad
push
cs
aas
sub
dec
dec
add
das
sub
xchg
mov
lea
mov
sub
gs
mov
cs
xor
sbb
jg
lock
pop
jecxz
dec
sub
add
lea
pop
cmovp
jge
js
jmp
pop
aaa
lcall
add
dec
mov
pop
fistpll
leave
pop
inc
and
in
testl
orb
adc
pop
xor
lds
mov
and
cmp
adc
xchg
ja
add
cli
push
mov
jns
pusha
andl
js
fsubrl
movsl
je
addr16
xor
mov
test
test
sti
mov
mov
mov
xlat
add
push
xchg
rcll
dec
gs
das
cmc
add
dec
in
xor
fs
mov
xchg
aaa
jb
and
dec
aas
sbb
add
lods
add
in
push
and
push
ret
pop
test
or
lret
or
add
dec
insl
inc
and
dec
aaa
push
jge
fimull
fsubl
and
imul
sub
sub
sbb
sub
pop
pop
lods
sahf
adc
dec
inc
aam
push
lea
imul
push
or
dec
lcall
out
shlb
repz
inc
arpl
out
das
mov
insb
out
pop
adcb
loope
xchg
cwtl
nop
jo
aam
int
cwtl
sub
push
lock
adcl
in
mov
pop
or
enter
loope
jo
mov
das
gs
roll
push
into
lahf
sbb
cmp
jae
lahf
inc
inc
clc
inc
mov
popa
setns
inc
mov
cmp
pop
push
addb
test
out
inc
pusha
and
push
dec
ret
or
scas
dec
mov
inc
mov
call
and
jecxz
adc
mov
mov
fisttpl
rolb
adc
xchg
push
out
sahf
dec
fildll
cmc
inc
pop
and
adc
mov
aaa
jmp
sbb
pop
aaa
pop
outsb
cmp
pop
xchg
les
testl
insb
xor
dec
call
push
fildll
push
push
inc
aam
mov
inc
sti
add
cmp
inc
ret
push
loopne
lahf
sbb
popa
pop
or
les
xor
and
mov
or
rcr
in
mov
je
sbb
cltd
ret
out
insb
jge
jmp
or
das
push
sbb
gs
sbb
xchg
mov
push
mov
inc
pop
jo
and
inc
sub
pusha
push
adc
inc
inc
ret
mov
and
or
popf
jp
push
add
mov
scas
fwait
mov
dec
nop
shrl
xchg
rcrb
pop
fwait
addr16
arpl
cltd
mov
rol
dec
stos
inc
push
xchg
out
xor
popf
sub
arpl
stc
inc
fisubrs
or
int
sbb
dec
push
jnp
push
add
xor
lahf
fsubrs
sub
mov
sbb
fcmovnbe
loopne
mov
jmp
shll
fs
inc
xchg
scas
mov
push
fldl
inc
arpl
add
std
mov
pop
adc
mov
fnsave
mov
and
inc
sub
cmpsl
inc
or
mov
add
jne
pusha
xlat
sub
pop
push
rcrb
lret
jle
mov
mov
xchg
xor
xchg
cltd
clc
sub
adc
inc
push
add
or
ja
iret
adc
test
fnsave
in
xchg
out
mov
and
mov
mov
cmpsl
cmp
inc
jmp
inc
out
test
xor
les
pushf
adc
aam
push
orb
das
dec
popl
xor
cs
xor
fwait
and
out
icebp
repz
repz
pop
jl
cmp
ljmp
cs
or
push
in
and
out
sub
inc
mov
je
lock
mov
daa
ds
add
inc
fcoms
pop
popa
sub
pop
or
loop
sahf
adcl
lcall
jl
pop
cmpsl
fildll
ja
loop
jge
lcall
and
imul
and
adc
scas
sub
sti
les
pop
out
popf
cs
jne
jge
insb
loop
outsb
and
fiaddl
cs
dec
loopne
jecxz
mov
sub
lods
rclb
inc
or
sub
filds
adc
rolb
pop
iret
aaa
test
out
dec
add
pop
pop
pop
or
std
xchg
loope
popa
inc
stos
sub
mov
cmpsl
lock
jne
fisttps
mov
push
dec
xchg
or
jmp
sbb
das
adc
xchg
xchg
push
ficoms
sahf
aas
mov
decb
inc
test
fdivs
mov
mov
inc
fisttpl
jge
xlat
cltd
fidivs
mov
push
aaa
jp
loop
add
sti
add
lret
arpl
pop
mov
stos
sub
jno
test
dec
sub
dec
loop
cltd
mov
icebp
mov
mov
cmpb
mov
pop
mov
imul
cs
jl
das
cld
xchg
and
dec
add
dec
mov
scas
lods
sbb
repz
mov
rclb
das
or
jno
in
lahf
sti
push
ror
popa
add
addr16
mov
add
push
cmpsl
mov
pop
lods
popf
stc
les
movb
cmp
xchg
jecxz
push
pop
in
push
cs
push
xor
push
ss
pop
stc
or
shll
sbb
xchg
arpl
dec
inc
icebp
push
ficompl
add
fwait
pop
xor
fnsave
or
aaa
pop
mov
rolb
pop
add
shlb
pop
test
inc
jb
pop
jbe
push
adc
sbb
cmpsl
push
cmp
clc
sub
jecxz
dec
push
push
ret
mov
push
push
add
lea
xchg
or
lcall
mov
mov
mov
and
imul
int3
daa
pushf
test
inc
pop
add
push
xchg
rol
mov
pmaddwd
jp
cmp
test
push
pop
push
pop
pop
pop
je
inc
and
sti
dec
push
shlb
or
mov
push
sbb
inc
add
jmp
pop
lds
push
pop
dec
lea
mov
push
sarl
add
cld
cmpsb
pop
add
push
iret
sbb
inc
add
mov
push
mov
mov
cmp
adc
pop
xchg
outsb
daa
xchg
jne
mov
push
push
sub
test
clc
cmc
fs
pop
adc
xor
rcl
or
or
popa
mov
fnstenv
xchg
jo
pop
iret
push
aaa
xor
jo
lret
ret
mov
inc
xor
xchg
mov
inc
icebp
jbe
dec
jne
and
and
addr16
sti
pop
rcrb
mov
sub
popf
call
or
and
loope
clc
ja
mov
push
and
sub
call
and
push
pushf
add
pop
inc
inc
testb
cmp
pop
cmpsb
fldenv
mov
fcomps
fiaddl
ja
rcrb
dec
dec
sahf
jne
jno
rcrl
imul
lock
inc
xor
and
xchg
addb
movsl
xchg
loope
push
mov
xor
and
push
pop
data16
sub
inc
cmp
into
or
and
or
add
add
in
or
adc
rolb
push
or
sub
xlat
out
lock
add
or
pop
or
movsl
xchg
dec
vmaxss
push
push
repnz
push
shlb
add
movsl
inc
orb
pop
test
sub
add
or
mov
dec
and
cltd
inc
addr16
sti
sbb
add
and
xchg
and
scas
imul
sub
stos
sub
mov
rcl
sbb
push
test
stos
addr16
mov
lods
mov
cmp
or
inc
push
push
add
xchg
daa
lret
cwtl
sub
pop
iret
mov
pop
rcrl
jo
cltd
push
add
das
xor
incl
aam
inc
clc
xlat
cmp
pop
xorl
jecxz
xchg
ror
and
mov
mov
lea
dec
ret
mov
sub
loop
adcb
icebp
jmp
add
loope
hlt
sub
mov
rclb
jp
std
add
adc
scas
ret
and
movsb
and
insl
movsb
push
mov
xlat
sub
lahf
and
push
xor
fisttpl
fucomp
sbb
jmp
ficoms
or
mov
mov
jmp
mov
cmp
bnd
in
add
sub
lods
xchg
mov
ljmp
lods
push
push
dec
lods
subb
scas
pop
repz
adc
mov
aam
loope
jb
hlt
inc
test
or
lahf
mov
mov
or
jecxz
sbb
mov
mov
add
call
aam
repnz
lods
mov
rcll
sub
das
cmpsl
push
fldt
inc
adcl
or
and
push
xor
and
or
in
and
jb
pop
repz
cld
sub
sti
push
dec
push
mov
lods
cmp
sbb
xor
inc
das
sbb
popa
out
pop
lods
push
cwtl
or
push
stc
mov
mov
push
sbb
or
cmp
daa
ffree
lock
adc
inc
push
add
fdivl
xchg
inc
out
test
sarb
leave
add
vpaddd
pop
inc
cmp
add
pop
aad
sbb
push
dec
adc
jecxz
adc
aad
lds
arpl
mov
dec
and
das
sbb
pop
and
or
fs
push
push
or
mov
or
cmpsl
nop
sahf
push
mov
xchg
stos
or
pop
popa
cmp
cmp
fnstsw
call
cmp
cmp
jns,pt
aad
mov
ret
mov
pop
das
jge
ret
adc
add
xor
xchg
sarl
add
add
adc
movsb
ret
jmp
fs
fstl
movsl
int3
push
aaa
adcb
stos
push
mov
jno
add
nop
stos
cmpsl
sbbl
adc
aas
pop
out
jge
xchg
testl
sbb
mov
inc
push
enter
roll
cmp
jae
push
je
rol
dec
mov
inc
rcl
and
inc
insl
mov
and
jg
aad
xor
jp
dec
bound
add
push
mov
mov
test
lea
or
lods
sahf
leave
clc
in
popa
aaa
add
test
inc
cmp
insl
jg
adc
jl
out
dec
sahf
jo
fidivs
lods
dec
cmp
ss
addb
adc
sub
dec
mov
mov
cli
adc
push
scas
or
mov
add
adc
mov
sub
inc
mov
sbb
das
dec
aas
inc
imul
into
orb
leave
push
adc
js
inc
clc
sbb
jne
ret
sub
les
sub
loopne
lods
pop
fs
test
outsl
sti
fs
or
inc
jns
jb
lcall
xchg
out
inc
mov
cmp
nop
add
stos
add
mov
or
cmp
push
sbb
dec
addl
leave
jg
cwtl
mov
xchg
add
shll
ljmp
aas
ljmp
dec
inc
push
dec
enter
or
adc
outsl
cmp
sbb
loopne
push
push
xchg
jp
or
clc
fcoms
iret
filds
je
or
push
mov
adc
push
jmp
mov
jae
aad
add
cmp
xchg
sbb
dec
loope
inc
hlt
fdivs
jnp
and
push
add
and
std
pusha
push
ret
test
aas
std
hlt
mov
cmpsl
test
int
outsl
push
popf
xor
and
cmc
imul
loope
cmpsl
xor
sbb
mov
sti
pop
xchg
jb
adc
push
test
outsl
jmp
bound
das
lds
adc
add
repnz
jl
xor
test
shr
pop
test
int
add
dec
add
xor
dec
jno
jne
jecxz
mov
out
jbe
dec
mov
mov
pop
mov
mov
lock
xorb
lahf
push
into
xchg
jbe
incb
rorb
ret
sub
vreducess
roll
adc
push
pop
push
lcall
jne
cmp
mov
movsb
or
dec
loop
rorb
sbb
cmp
outsl
cld
stos
negl
bound
adc
mov
popf
pushf
adc
cmpsl
jne
sahf
xchg
out
iret
and
outsb
inc
pushf
sti
rclb
add
ds
lea
or
xchg
cmp
xchg
aaa
fisubrl
inc
pop
imul
popf
scas
je
xchg
mulb
ja
inc
xlat
sbb
mov
and
and
adc
add
mov
ret
xor
loope
mov
mov
and
jae
lods
outsl
fdivr
add
in
sbb
push
out
ffreep
fcoml
in
add
loope
stos
cmp
dec
cmp
sbb
jb
ljmp
or
call
pop
jl
mov
add
xlat
and
pop
mov
push
jmp
pop
scas
sbb
mov
rcrl
xchg
push
test
shlb
ds
adc
mov
mov
adc
pop
mov
adc
push
dec
xchg
loope
stos
xchg
cmp
push
scas
subl
je
inc
fiaddl
jecxz
lahf
lahf
sbb
cmp
sub
daa
imul
mov
lock
mov
ja
dec
sbb
sub
pop
daa
sub
jge
or
or
dec
dec
jge
popa
mov
imul
sub
popf
scas
es
push
lea
rorl
mov
imul
cmp
or
sbbb
sbb
xor
movl
push
adc
pop
loopne
loopne
insl
int
inc
xchg
aam
sub
nop
and
jge
cmp
sbb
fildll
pop
call
push
dec
dec
sbb
loop
or
lock
pop
loope
xchg
rclb
push
and
insl
js
push
jnp
loopne
sub
cmc
inc
dec
mov
test
sub
stc
aas
test
ja
sub
adc
and
les
xor
ja
mov
lods
and
and
mov
insb
add
imul
pop
sub
sti
imul
push
pop
cmp
and
fisttpl
loopne
add
xor
jecxz
or
out
lret
pop
pop
sbb
inc
dec
push
outsb
add
jmp
jl
daa
jno
or
cmc
adc
add
pusha
iret
or
mov
jecxz
arpl
xchg
inc
or
xor
ficomps
xchg
test
pushf
call
sahf
or
add
adc
lahf
popf
sub
frstor
popf
es
pop
add
adcl
jmp
repnz
push
jecxz
popa
pop
cmp
hlt
and
mov
clc
mov
mov
adcl
inc
cmp
call
push
adc
outsl
and
sub
dec
push
popf
inc
pop
lret
fiadds
je
adc
mov
jmp
stc
outsl
lea
pop
inc
adc
clc
adc
mov
hlt
sbbl
loopne
pusha
shlb
or
cmpl
push
sbb
pusha
dec
xchg
or
aad
jg
inc
pop
addb
call
xchg
and
mov
fbld
ficomps
sbb
dec
jbe
mov
sbb
movsb
sbb
and
aaa
dec
fdivr
pop
xchg
loope
sbb
or
inc
jbe,pn
mov
dec
xchg
cs
or
lahf
test
popf
xchg
fldcw
push
dec
add
or
sub
adc
mov
lock
mov
sbb
les
andl
js
mov
loopne
or
push
sahf
movsb
fstps
stos
dec
add
pop
dec
js
or
cmp
push
adc
jecxz
inc
sub
push
push
inc
sub
or
lock
mov
add
push
add
inc
lds
insb
jecxz
cwtl
inc
adc
popa
movsl
test
fbld
in
sbb
jns
fsubrl
push
lods
cmpb
adc
push
xchg
insl
or
lock
push
cmp
jge
sbb
pop
fs
push
cli
and
outsl
sbb
fdivrl
adc
adc
mov
loopne,pt
rol
sub
mov
gs
xchg
sbb
cmp
xor
xchg
xor
push
pop
rclb
add
sub
mov
sub
mov
scas
mov
xorl
cltd
xchg
push
add
arpl
mov
inc
pop
lcall
push
jp
add
data16
sub
jne
sti
push
add
inc
add
xor
out
popf
outsb
and
bound
sahf
imulb
test
bound
call
pop
scas
cltd
rclb
aam
cld
rclb
dec
shlb
notl
cld
xchg
test
mov
jo
fistpll
or
fsubr
sbb
mov
sub
outsl
scas
adc
jo
fidivs
aad
mov
inc
xor
dec
dec
mov
mov
ret
cli
rorb
hlt
outsl
and
inc
and
mov
xor
xor
pop
push
sti
and
dec
out
inc
shl
adc
pusha
movsl
sahf
clc
loope
xchg
lods
pushf
sbb
addb
add
push
dec
or
ljmp
xchg
lcall
sti
sahf
push
imul
ret
xchg
insl
add
mov
idivb
mov
sahf
sbb
rcrb
sahf
mov
or
jnp
push
test
pop
sbb
sbb
in
or
gs
cs
sub
adc
xchg
cmc
sub
sbb
pop
mov
and
bound
and
loopne
sub
mov
pop
mov
sub
sub
xchg
lods
add
orb
dec
faddl
or
xor
loopne
mov
jnp
sbb
xlat
dec
mov
jo
adc
sahf
es
sti
sahf
inc
cmp
xchg
sahf
mov
cmp
jno
sbb
pop
ret
inc
and
jg
adc
cmp
outsb
sub
sub
adc
inc
loope
decl
mov
ret
dec
aas
xor
add
mov
push
push
inc
addb
pushw
xor
xor
lods
jmp
into
rorl
in
push
dec
pop
ds
xchg
mov
add
push
test
mov
sar
mov
cmp
sbb
xchg
imul
aas
push
sub
loop
fidivrs
addl
outsl
inc
sbb
mov
cmp
insb
imul
add
lods
cmpsl
cmc
insb
mov
mov
bound
jo
shlb
mov
xor
xlat
add
inc
outsl
sahf
sbb
mov
into
add
sub
fistps
ss
adc
jnp
add
ja
mov
sbb
mov
and
xchg
lock
pop
leave
dec
rcrb
cmp
xor
mov
push
in
pop
fs
mov
pop
jae
and
adc
lock
xlat
aaa
pushf
add
or
sub
call
sbb
ja
roll
in
jp
movsb
add
mov
jno
inc
jmp
ficomps
jle
push
pop
fcomps
lock
or
cmp
add
fistpll
sahf
imul
sti
pop
fisttpll
pop
pusha
in
je
add
clc
or
test
mov
mov
push
mov
pop
mov
cld
mov
popf
dec
in
dec
sahf
pop
mov
mov
lea
inc
cmp
and
or
rcrl
jmp
sub
sub
outsl
jmp
ret
roll
adc
call
icebp
fcos
jle
push
push
pop
xchg
test
loop
xchg
insl
in
sahf
dec
mov
cmpsb
test
and
add
lahf
dec
sbb
and
and
sbb
mov
push
stos
adc
jmp
xor
roll
or
std
stc
dec
mov
das
xchg
cmc
add
push
or
jo
inc
mov
xorb
cmp
xor
and
mov
adc
call
cmp
cwtl
cwtl
xchg
pop
cmp
loopne
test
pop
adc
shll
dec
add
pop
xchg
test
cmp
fdivl
jl
orb
ja
cwtl
or
xchg
inc
jo
outsb
xchg
push
cmp
xor
and
or
adc
lds
js
add
sarl
jns
fnstsw
jp
pushf
data16
add
pop
movsl
lods
mov
ret
imul
inc
rol
je
xor
jb
repnz
js
or
pop
jmp
daa
xor
inc
sub
sbb
add
dec
jnp
sahf
lahf
and
jg
pop
pusha
inc
loopne
movsb
call
or
fstpl
pop
popa
pop
out
mov
mov
or
add
or
aaa
or
sti
push
fimull
push
scas
mov
std
popa
adc
inc
cmpsb
jne
shll
ja
adc
add
adc
bound
sub
mov
add
mov
mov
pop
or
xchg
stc
mov
and
mov
movsl
xor
xlat
insl
lahf
and
dec
add
push
dec
mov
popf
adc
enter
rorl
adc
pop
pop
cld
sbb
test
dec
add
adc
xchg
xchg
mov
pushf
or
add
lahf
cs
insb
add
jnp
out
popf
sbb
dec
pop
clc
ret
adc
add
xor
mov
add
dec
xchg
jo
and
fnstenv
add
xor
adc
xor
or
sbbb
inc
mov
pushf
xchg
test
sbb
lock
sarb
test
pop
cmp
loop
nop
out
ss
insl
test
outsb
adc
leave
dec
bound
adcb
bound
loope
addb
pop
xor
and
mov
and
push
sbb
adcl
movsl
cmc
aad
adc
pop
pop
fsub
sahf
cmp
push
dec
xchg
xor
cmp
pop
test
adc
xlat
movsl
shll
cmp
adc
imul
push
enter
cmp
adc
popf
insb
cmp
push
or
push
inc
lock
dec
orb
mov
imul
jnp
pusha
test
pushf
insl
pop
aaa
lret
stos
sbb
pop
sbb
adc
outsb
mov
adc
sbb
lock
pop
lea
ss
pusha
adc
in
jmp
into
add
jae
sub
bound
and
and
push
repnz
adc
fwait
sbb
data16
mov
jne
int
mov
push
mov
ret
push
aaa
add
add
adc
test
adc
mov
pop
jno
pop
add
mov
or
xchg
lods
add
pusha
lret
cltd
clc
popa
jmp
roll
add
add
inc
dec
repz
loope
add
mov
mov
mov
ret
dec
and
movsb
mov
pop
add
dec
inc
ljmp
je
test
mov
mov
das
cmp
cmpsb
jo
mov
jp
dec
faddl
adc
lret
jmp
xchg
cmpsb
sub
lahf
lock
shll
out
pushf
adc
pusha
iret
add
xchg
cmc
lahf
xchg
jne
inc
insl
sub
inc
pop
pop
in
and
push
add
mov
or
jns
mov
jb
in
adc
cmp
add
lea
out
xor
push
test
cmc
push
bound
or
test
pop
adc
pusha
mov
int3
adc
adc
test
push
sbb
sub
pop
pop
test
add
jb
xor
xchg
pushf
ds
out
inc
ret
fstpl
arpl
pop
stos
leave
push
add
cmpsl
mov
lds
xor
gs
mov
add
lea
das
sbb
jmp
mov
sbbl
push
punpckldq
pop
mov
mov
and
loop
xchg
adc
xor
pop
fs
inc
mov
das
mov
and
inc
adc
insb
xor
mov
adc
fwait
jno
or
ja
xor
inc
in
mov
test
mov
sub
into
jl
jo
mov
add
and
fcomip
and
jae
jge
pop
sbb
mov
ret
lods
stos
dec
ss
int3
xchg
pusha
add
or
mov
pop
pop
adc
dec
shrl
mov
rcrl
aaa
shlb
rclb
mov
xor
sub
mov
and
adc
cs
fstl
pop
dec
orb
dec
dec
push
mov
rolb
xchg
call
jmp
jne
sub
dec
mov
jo
pop
push
lret
addr16
dec
jae
dec
mov
and
das
push
or
adc
pop
bound
sahf
mov
sub
xchg
push
out
add
mov
sub
xor
lock
add
fnstsw
ljmp
pop
mov
cmp
mov
out
dec
popf
stos
jg
dec
pop
loope
nop
sahf
push
adc
pop
inc
pushf
adc
mov
xor
lret
cmc
loopne
xor
imul
mov
add
sbb
hlt
sub
out
jg
inc
sbb
push
pop
mov
cs
jge
pop
xor
adc
nop
popa
pop
cmpsb
dec
inc
sbb
clc
xor
or
xchg
fistps
int3
rol
pop
ja
or
mov
and
popf
xchg
xlat
jmp
add
push
pop
arpl
arpl
ret
fnstsw
add
loopne
push
fstpl
cs
in
js
adc
pop
stos
fistpll
lcall
xor
mov
mov
ret
lock
call
mov
add
imul
out
imul
sti
cmc
dec
loope
cld
mov
adcb
add
push
mov
imul
push
ja
dec
fidivs
jne
add
cli
loope
pop
add
ljmp
add
cmpb
xchg
daa
add
movl
lcall
mov
jnp
out
add
adc
andl
and
add
push
imul
adc
mov
cmp
add
call
jae
and
xlat
or
push
push
iret
rcrb
push
sahf
push
adc
addl
inc
mov
popl
jns
scas
int
or
jo
in
adc
push
sbb
movsl
xor
mov
fldt
rcrl
sub
lods
inc
pop
add
fstp
xlat
mov
and
cmp
daa
mov
pop
mov
xor
dec
cmc
fnstsw
dec
jp
aas
orb
push
hlt
in
and
pop
test
mov
cmp
mov
push
mov
testb
or
push
adc
inc
loopne
jecxz
or
rorb
dec
pop
sub
cmp
xor
add
adc
push
mov
arpl
js
jg
add
jb
or
mov
rol
or
add
ficoms
aas
inc
aaa
sbb
shl
jmp
mov
adc
sbb
mov
aam
cmp
mov
push
inc
add
push
xchg
roll
sbb
icebp
adc
add
insb
out
mov
test
sbb
adc
and
mov
cmp
push
iret
sar
in
daa
sub
enter
mov
adc
mov
or
std
loop
inc
nop
xor
or
cmpps
xor
movsl
sub
mov
push
sbb
push
outsb
mov
mov
push
or
cmpsb
push
mov
test
rolb
imul
dec
pop
adc
rclb
jge
lods
xlat
push
jo
pushf
mov
push
inc
rcr
pop
adc
aaa
or
int3
mov
icebp
stc
rcrb
push
sbb
push
subb
orl
mov
aaa
cs
mov
or
dec
ret
leave
adc
add
inc
movsl
dec
pop
ja
jno
mov
sbb
js
or
leave
ficomps
shlb
aas
jg
jb
shrb
jle
pop
int
les
xorl
sbb
fstps
push
adc
fdivl
add
out
ja
mov
cld
sahf
push
sbb
nop
test
push
adc
mov
in
pop
xor
dec
lea
clc
xchg
mov
or
js
xchg
sub
pop
insl
fnsave
callw
cltd
jae
add
in
sbb
cmp
xchg
js
sarl
add
lock
test
add
lret
add
aad
arpl
inc
or
es
add
scas
mov
fisttpll
addr16
clc
std
call
repnz
jo
add
adc
xor
cli
aaa
inc
jns
out
jno
pop
sub
or
push
shll
sahf
sub
xor
push
mov
sarb
popa
shll
xchg
scas
push
pop
push
fwait
hlt
jne
scas
mov
or
lds
inc
push
mov
fs
add
addr16
push
jnp
enter
inc
sbb
xchg
adc
jo
inc
pop
nop
pop
enter
xor
mov
pop
or
lret
imul
lcall
or
mov
add
clc
imul
fs
or
add
push
aas
mov
pusha
inc
repnz
test
mov
xor
mov
loopne
jle
jnp
mov
out
xor
loopne
or
add
and
bound
pop
adc
clc
imul
or
jge
xor
gs
jbe
inc
or
mov
lods
jae
stos
bound
push
inc
add
cld
jo
adc
pusha
mov
jg
wrmsr
out
addr16
lds
scas
push
test
push
inc
insl
pushf
push
or
add
iret
xchg
enter
call
sbb
pop
test
repnz
sbb
shlb
gs
xor
std
stc
push
inc
adc
icebp
es
imul
jno
lret
sbb
xchg
or
popf
out
push
or
aam
sbb
xor
xchg
aad
in
push
int
mov
push
bound
int
loopne
or
rcrb
xor
sbb
adc
addr16
sbb
mov
pusha
stc
xchg
or
pop
ret
in
je
mov
or
pop
xchg
jo
dec
outsl
stos
rolb
ja
adcb
out
mov
in
shll
data16
or
xlat
xchg
or
movsl
adcl
clc
add
adc
out
sbb
push
mov
ss
xchg
xor
jp
pop
cmp
mov
imul
out
aas
cmpsl
xor
cmp
mov
shlb
or
sub
fiadds
inc
pop
pop
outsb
push
shlb
insl
mov
js
mov
cmp
lcall
cmp
hlt
popf
je
aas
cmp
jo
pop
cmp
push
shrl
cmp
mov
sub
pushf
cmp
or
jb
mov
pop
inc
aaa
cmp
adc
addr16
ror
fdivr
cmp
dec
shll
adcl
roll
call
sub
inc
fbstp
roll
inc
adc
or
insb
ret
add
je
daa
add
leave
pop
add
pop
push
ljmp
lcall
mov
pop
ret
sbb
jb
dec
aaa
push
cmp
sar
xchg
mov
push
and
into
lock
xchg
imul
xor
int3
push
push
push
js
loopne
xchg
push
adc
jp
popa
and
out
sbb
int
aad
push
pop
das
mov
pop
scas
mov
imul
inc
ror
cmpl
jnp
in
jbe
lea
sbb
sub
lds
cmp
iret
adc
data16
xor
dec
adc
jnp
mov
mov
cmp
sub
push
jbe
xchg
push
cs
inc
arpl
push
push
loopne
in
out
mov
ja
andl
mov
mov
in
leave
push
roll
psllq
sub
add
loopne
and
push
pop
lret
cmp
test
lock
lret
arpl
aad
loopne
rolb
loopne
leave
adc
xor
adc
movl
cmpsb
add
or
pushf
jns
rcll
push
lahf
mov
lcall
or
push
jecxz
sbb
mov
and
cmp
dec
andl
or
xchg
dec
add
movl
pop
aaa
scas
xchg
push
pop
shlb
shll
std
jns
and
sbb
mov
sbb
test
adc
ret
in
mov
or
in
xor
js
sbb
dec
rclb
lcall
lods
mov
add
popf
pop
sbb
pop
jns
leave
mov
rcrl
orb
mov
adc
aam
dec
ljmp
jge
fwait
iret
fcoml
add
fnstenv
mov
push
cs
addl
pop
test
daa
pop
outsl
int3
enter
pmaxub
add
dec
addl
or
lds
dec
push
push
icebp
mov
andb
sub
fsubs
stos
pop
mov
out
sbb
roll
inc
pop
in
xchg
rolb
scas
xchg
fsts
inc
scas
js
pushf
adc
js
sbb
fisubrs
jge
jecxz
mov
test
or
or
fcoms
jnp
mov
sub
bound
sbb
push
fsubrs
cmp
adc
push
call
addl
ret
push
cmc
dec
pop
add
jmp
adc
inc
and
and
adc
lret
push
add
and
cmc
mov
xchg
pop
mov
clc
mov
xchg
xorl
adc
icebp
mov
xchg
sub
mov
pop
inc
pushf
out
or
cmpsl
rcr
inc
inc
dec
add
lcall
add
add
dec
mov
adc
pusha
pop
fwait
add
call
arpl
mov
sbb
jae
cmc
int3
add
xchg
sbb
xorps
adc
jmp
rcll
das
pushf
mov
dec
adcl
dec
leave
pop
nop
push
push
mov
cltd
mov
xchg
scas
add
adc
cmp
pop
sub
ret
and
jo
mov
inc
fstps
jo
jecxz
push
sub
pop
dec
mov
xor
sub
mov
mov
and
cmc
mov
inc
mov
xor
adc
pop
stc
in
jb
stos
xchg
gs
aam
cmpsb
fisubrs
sbb
jbe
jecxz
clc
ret
pop
push
mov
sarb
js
sbb
fisubs
jbe
jb
test
lcall
add
cmp
sbb
mov
push
adc
rol
loope
mov
sub
popa
lock
cmpb
es
xchg
imul
cmpsb
test
test
inc
jge
pusha
mov
mov
cli
add
decl
mov
sub
mov
jo
mov
and
mov
daa
pop
movsl
xchg
es
sub
sub
fld
gs
dec
sub
jg
fisttpll
dec
add
in
cmpsl
add
pop
pop
int
adc
cmpsl
out
stc
fcompl
inc
xchg
add
pop
xchg
xchg
xchg
push
arpl
iret
xlat
loop
inc
xor
adc
and
xor
jg
xchg
inc
lock
sbb
stos
add
xchg
rorb
lods
xor
mov
mov
jo
xchg
pop
cld
or
adc
in
call
int3
cmp
mov
fisubl
or
pop
fidivl
dec
test
mov
mov
mov
daa
pop
and
out
fists
or
test
cmp
and
dec
xor
movlps
sub
sub
adc
loopne
ds
push
pop
mov
movsl
out
outsb
in
test
daa
rcrb
and
aaa
stos
add
xchg
enter
cmp
xlat
inc
es
sub
and
inc
sbb
xchg
and
mov
iret
movsl
outsb
lock
xchg
inc
xchg
and
mov
cs
adc
repz
arpl
xchg
aad
fidivrs
cwtl
add
jo
fdivrl
pusha
and
sub
add
adc
es
jmp
add
mov
subl
dec
loopne
imul
pop
fistps
adc
pop
dec
pop
test
roll
aas
mov
add
leave
testl
lcall
adc
xor
aas
sti
add
add
xchg
negb
mov
push
cmp
out
call
and
jl
sbb
xlat
insl
cmp
and
inc
and
xchg
cmpsb
inc
or
aaa
test
cmp
mov
xchg
sbb
ret
cmp
mov
rcrb
movsl
add
dec
dec
mov
lea
mov
xchg
jecxz
aas
iret
add
xchg
pop
movsb
jmp
call
dec
sub
test
push
add
or
fsincos
fsubs
mov
or
orl
bound
cmp
jbe
out
mov
cmpsb
mov
pop
push
cmpb
sub
push
or
or
cltd
mov
jnp
bound
loop
int
pop
jne
jp
jne
dec
inc
mov
xchg
fcomps
dec
sub
mov
push
mov
xor
cltd
aas
add
ret
insb
nop
sbb
xor
gs
xor
je
cmp
mov
jp
sub
das
imul
pop
imul
mov
scas
xchg
pop
jecxz
xchg
dec
pmaxsw
andl
loopne
adc
and
and
xchg
movsl
test
lock
mov
cmc
loopne
mov
sbb
leave
mov
dec
lcall
or
es
pop
sub
cltd
or
arpl
faddl
movsl
dec
test
cmp
or
jo
pusha
xchg
std
xchg
sahf
test
fdivrl
and
mov
pop
rolb
cltd
sbb
sbb
sub
xchg
mov
lret
out
push
sarb
pop
sbb
add
movsl
jle
push
inc
or
cmp
jecxz
nop
xor
repz
pop
in
in
and
test
inc
lahf
push
rolb
pop
repz
popa
movsl
int3
adc
push
orb
sub
dec
lds
sub
ds
mov
bound
int3
mov
add
inc
dec
pop
xchg
xor
pop
push
ljmp
sub
inc
dec
insl
jno
and
movsl
mov
pop
leave
sub
test
rcrl
imul
inc
or
inc
popa
mov
dec
and
inc
add
pop
pushf
sbb
lea
pop
sbb
add
pop
test
subb
jb
xor
les
and
and
sbb
sarb
popf
stos
and
adc
cmp
je
insb
mov
lods
xor
test
sub
arpl
xchg
push
outsb
adc
or
dec
add
mov
xchg
ret
or
jg
movsb
dec
or
pop
test
inc
or
xchg
sti
movsb
fs
mov
dec
outsl
xor
sub
mov
push
shlb
add
inc
adc
or
push
rcll
dec
or
adc
lea
and
jbe
push
push
aaa
push
jmp
mov
outsl
xchg
movsb
dec
lret
mov
adc
and
cmp
push
adc
pop
imul
test
lahf
jecxz
or
shll
mov
ret
popf
pop
xor
shl
push
rcr
insb
jae
add
inc
sub
pushf
mov
mov
mov
rol
add
notl
cmpsb
jecxz
pop
negl
outsb
shr
sbb
pop
sbb
movsl
pop
mov
inc
insb
push
ds
mov
sbb
aad
cmp
mov
bound
mov
inc
int
gs
ret
pushf
imul
jmp
lcall
and
or
imul
fisttpll
add
pop
test
add
adc
mov
xor
in
sub
insb
mov
fcmovnb
scas
call
xchg
ret
add
sbb
es
jbe
jmp
hlt
sub
data16
sub
push
stos
xlat
jecxz
sbb
repnz
fisttpll
add
imul
inc
push
ret
adc
int
jae
push
cmp
jo
dec
pop
jge
fcomi
jo
rcrb
cmp
movsb
mov
and
lea
or
lcall
xchg
loope
mov
add
fstps
aam
dec
mov
pop
or
notl
xor
lea
shll
je
dec
pop
mov
add
jl
jmp
adc
cmpsl
xchg
pop
in
inc
dec
pusha
and
xchg
jne
es
sbb
pushf
insl
outsl
cmpsl
lahf
insl
xorb
out
jae
inc
hlt
and
leave
pop
mov
mov
lds
into
jns
aad
fidivrl
js
xchg
cltd
int
adc
fidivs
xor
bound
dec
popf
adc
jnp
mov
mov
ficomps
mov
xlat
inc
mov
std
popa
add
xor
dec
jmp
jno
aaa
and
adcl
sbb
bnd
cmp
js
jg
enter
out
fdivl
movsb
mov
adc
mov
rcl
in
add
cwtl
mov
jne
pop
adc
js
or
out
jecxz
pop
hlt
add
pop
or
push
xchg
add
pop
add
sbb
sbb
xlat
in
ret
inc
shll
add
lock
lcall
sub
stos
adc
sbb
inc
inc
dec
sbb
pop
loopne
aaa
call
dec
xor
push
fcmovnbe
xor
iret
aad
daa
jmp
mov
xor
bound
imul
aam
push
xlat
inc
add
push
fists
dec
or
adc
out
push
frndint
adc
scas
push
push
mov
and
and
cli
subb
mov
rcrb
rorb
fsubp
inc
add
lds
sbb
dec
fwait
xchg
push
cmpsl
inc
jmp
popa
mov
add
cs
add
push
sbb
ja
lods
pop
push
and
add
rolb
or
sub
inc
add
cmp
xor
xchg
data16
mov
popf
ss
cld
inc
inc
leave
or
fisubrl
cmp
mov
mov
push
data16
push
pop
sti
in
leave
mov
jg
push
dec
ret
popa
sbb
jnp
daa
out
fstpl
sub
jp
cmp
aaa
sub
add
in
mov
leave
inc
fiaddl
add
iret
jne
add
andb
xchg
sbbb
sub
adc
sub
fs
dec
push
aam
ret
loope
jge
xor
es
dec
sub
cmp
or
pop
xchg
push
test
lea
add
push
stos
sub
adc
dec
inc
pop
test
add
dec
xchg
cmpsb
pop
cmp
sbb
cmp
rorb
scas
movsl
xchg
mov
jb
inc
pop
xchg
mov
adc
mov
ss
daa
dec
pusha
out
pop
dec
leave
jmp
shlb
lds
inc
add
pop
jnp
aad
clc
leave
sbb
out
pop
dec
or
arpl
push
push
add
mov
mov
sub
mov
popf
test
mov
cmc
dec
dec
pop
mov
adc
adc
ds
sub
in
daa
fsts
pop
xor
mov
lret
inc
cs
xchg
inc
test
add
in
xchg
pop
fstl
dec
test
xchg
enter
inc
xlat
loopne
adc
pop
adc
push
jne
das
movsb
mov
or
popl
push
add
dec
jae
sub
sub
mov
imul
das
adc
mov
add
add
fwait
gs
movsb
xchg
jecxz
mov
mov
and
shll
push
in
or
imul
xor
xchg
lock
jno
inc
lea
push
push
adcb
dec
cmp
call
icebp
jno
push
xor
push
push
and
sub
test
fst
inc
mov
repnz
jle
mov
mov
xchg
jle
scas
adc
fistps
jg
inc
nop
ret
sub
cmc
push
push
and
add
inc
rclb
pop
enter
dec
mov
loopne
pushf
mov
in
xchg
popa
or
call
push
pop
scas
cmpb
mov
cmpsl
outsb
imul
dec
scas
xorl
inc
push
je
xchg
push
lea
xchg
cltd
push
cld
add
inc
lock
cmc
adc
mov
lock
ret
jne
mov
fs
sbb
and
jmp
lahf
mov
fisubl
cmp
inc
icebp
add
lret
jmp
and
mov
sub
xor
inc
inc
sbb
or
lock
adc
inc
pusha
sub
jecxz
stos
or
out
push
leave
js
add
movsl
orl
inc
xor
jns
and
repz
fwait
das
outsl
jbe
mov
push
aaa
in
mov
stos
inc
push
stos
xchg
or
push
cmpsb
hlt
inc
movsl
dec
or
push
adc
xchg
lods
inc
inc
add
xorb
mov
jp
enter
sub
filds
ret
lods
lds
add
xor
sbb
das
and
cmc
and
shlb
dec
xchg
mov
mov
xchg
mov
mov
jl
push
pusha
psadbw
cwtl
stos
push
adc
jle
repz
lea
pop
cmp
jbe
scas
dec
lods
xchg
loopne
ret
sub
sub
xor
add
mov
push
mov
or
cmp
shlb
out
loopne
xchg
push
dec
dec
and
sbb
inc
decl
push
or
or
mov
enter
sub
addb
inc
and
mov
mov
mov
push
sub
or
mov
xlat
mov
js
dec
jnp
inc
dec
lods
push
pop
roll
cmpsl
sub
ja
mov
test
push
and
imul
cltd
test
sbb
cmp
cli
adc
xor
sbbb
imul
xor
mov
or
mov
push
add
cwtl
in
sbb
das
or
cmc
je
mov
and
inc
dec
jge
clc
das
mov
cmc
push
adc
add
adc
lods
push
and
mov
add
pusha
pop
movsb
addr16
in
add
push
js
mov
or
test
adc
mov
adc
sub
subb
add
std
daa
repz
mov
js
dec
xlat
push
xorb
pop
or
int3
inc
jns
cmp
lock
mov
pop
mov
shrb
in
xor
mov
lods
pop
ds
sti
cltd
inc
rcrl
popa
xor
inc
sbb
lods
leave
mov
push
xor
cmp
adc
sbb
ret
sub
sub
cli
test
pop
push
jg
add
jecxz
xor
push
cs
mov
add
popf
clc
pusha
cmp
sub
andl
and
movb
scas
mov
std
or
in
or
jmp
sub
and
dec
arpl
push
sub
inc
leave
xchg
dec
pop
cmp
popf
pop
iret
cld
test
inc
add
ljmp
xchg
js
ljmp
jo
adc
add
dec
lods
push
jae
push
aam
mov
or
sbb
dec
sbb
push
sbb
mov
clc
out
jno
std
sub
push
xor
jge
xchg
insb
hlt
lods
mov
imul
cltd
xor
movsl
adc
adc
clc
sbb
add
inc
dec
outsl
dec
sbb
and
push
xchg
roll
mov
enter
test
xor
pop
adc
lcall
aaa
pop
pop
sub
push
iret
adc
push
push
add
inc
into
xor
notl
and
ss
mov
test
mov
jbe
cmpsl
stc
sub
in
gs
fiadds
aad
mov
mov
inc
sub
orl
popf
shlb
sbb
les
xor
xchg
shll
leave
add
out
mov
inc
jecxz
sbb
mov
arpl
xchg
nop
rol
cmp
add
aam
arpl
add
push
mov
and
inc
lods
sbb
add
mov
cld
repz
imul
mov
cmp
xchg
xor
cltd
inc
popa
dec
jb
sub
fidivrl
and
jo
push
sub
rorl
icebp
ret
adc
lods
in
movsb
xor
fst
push
pop
sysret
addl
call
lods
cmp
es
sbb
adc
push
xchg
adc
inc
inc
adc
add
sbb
xchg
testl
adc
adc
add
lret
add
xorl
repnz
mov
call
mov
pop
adc
pop
lcall
jno
mov
cmp
rcl
mov
and
sub
lock
and
lock
add
or
inc
rcrl
or
jmp
pushf
in
fcmovnu
jge
movhps
adc
or
nop
outsb
shlb
push
scas
int
shll
inc
ret
cmp
lods
add
mov
mov
xor
and
add
leave
movsl
and
add
sub
out
add
out
loope
out
adc
sbb
xchg
and
sbb
out
fs
jne
cmp
mov
inc
push
sbb
cmp
divb
mov
icebp
out
pop
sub
mov
add
sbb
sbb
cmp
rorl
cmp
sub
sub
daa
dec
push
xor
je
inc
std
or
pusha
mov
stc
push
xchg
push
add
sub
rclb
dec
sbb
jmp
icebp
pop
sbb
adcl
and
cmp
dec
insb
or
and
push
ljmp
je
call
hlt
insb
sbb
pop
in
or
mov
or
movsl
or
sbb
mov
mov
shlb
popf
ds
test
mov
xor
rclb
dec
pop
rol
fstpl
insl
enter
call
fwait
mov
xor
dec
cmp
dec
mov
or
adc
adc
or
pop
aad
xchg
imull
mov
lahf
push
lea
and
sub
xchg
fsubr
test
push
int
pop
xchg
mov
in
sbb
mov
push
dec
dec
sub
rcr
adc
mov
inc
mov
das
iret
and
shll
add
jecxz
lods
lock
sbb
adc
push
cmp
insb
out
adc
inc
loope
sub
testl
ficoml
mov
mov
jae
aaa
push
lret
and
mov
ja
pop
add
and
mov
outsl
arpl
and
jl
inc
leave
mov
inc
inc
xchg
push
xchg
push
or
mov
and
mov
jns
jp
inc
lret
push
cmp
sbb
mov
jmp
pushf
mov
sub
rcrb
scas
add
xchg
mov
push
mov
mov
cwtl
orl
fwait
adc
loope
inc
inc
loope
mov
and
shll
push
jmp
sarl
dec
les
icebp
pushf
jnp
inc
add
sub
and
andl
orl
fwait
add
xor
xor
outsl
call
popf
mov
sbb
outsl
and
shlb
or
add
mov
out
or
pop
dec
inc
incl
sbb
lcall
push
mov
lods
mov
gs
mov
sub
test
divl
jnp
add
add
pop
sub
add
sbb
aas
push
sbb
xor
sbb
je
adcl
rorb
pushf
xchg
mov
push
mov
push
xchg
aaa
ds
loope
push
cmp
lahf
sbb
lret
and
dec
sub
add
pop
xchg
leave
les
push
outsl
aam
add
in
cs
sarl
das
test
cmp
fiaddl
and
cmpsl
fwait
mov
xor
scas
int
loopne
inc
push
int
subb
lret
xchg
push
adc
and
xchg
sbb
dec
add
pop
int
adc
push
inc
sbb
ret
xchg
imul
or
insb
popa
push
pop
sub
rol
fidivrl
push
dec
shrl
cmpsl
in
and
dec
stc
mov
addr16
cmp
test
cwtl
aam
add
pop
inc
and
mov
stos
jns
jne
mov
icebp
dec
roll
mov
mov
push
xor
and
jno
or
orl
xor
or
pop
adcb
add
dec
cmpsl
inc
jno
das
adc
cltd
lcall
push
js
lahf
dec
pop
sbb
pop
ret
out
add
lods
jae
xor
ljmp
push
inc
arpl
sbb
push
pop
lods
or
bound
dec
subl
call
xor
xlat
adc
fsts
xor
xchg
cmpsl
lock
mov
or
xor
cmp
add
push
xchg
mov
push
ret
dec
or
ret
andl
add
pop
adc
cmpsb
gs
jecxz
mov
or
movsl
pop
pop
sub
sarl
rcll
add
inc
inc
or
and
loope
inc
bound
xchg
loop
not
cmp
push
xor
or
or
dec
or
daa
sub
cwtl
mov
sub
dec
sbb
or
mov
or
adcb
mov
mov
or
aas
dec
and
pop
dec
mov
xchg
lds
bound
cmp
push
hlt
cs
mov
add
addr16
or
xor
sbb
add
jbe
loop
je
push
push
loope
ja
add
enter
imul
fcompl
je
cltd
test
insl
inc
nop
inc
inc
jle
or
call
incl
aad
adc
or
mov
sarl
loope
mov
loope
mov
mov
and
or
out
xlat
add
adc
add
movsl
fadds
cmpsb
imul
dec
or
sub
lds
push
dec
in
push
daa
adcl
pop
icebp
jecxz
sti
sahf
ja
jno
mov
fadds
sub
sub
inc
cmp
std
xor
mov
xor
out
sbb
outsb
pop
mov
in
xchg
inc
add
lret
jmp
cmc
jbe
mov
add
pop
pop
and
cmp
sbb
pusha
popaw
ja
mov
pop
mov
lahf
subb
mov
loopne
rol
or
aas
pop
adc
test
mov
std
push
xor
out
sbb
and
sti
mov
mov
addps
lds
inc
cmp
insl
ja
divb
xorb
dec
pop
loop
xchg
imul
xchg
cmp
pop
or
loope
and
jecxz
mov
fld
pusha
add
rorl
lock
add
sbb
mov
cmpsb
movb
or
addl
mov
inc
add
dec
adc
test
or
or
adc
sub
orb
add
push
and
iret
pop
jo
popa
inc
push
push
hlt
cmc
xor
movsb
xchg
pushl
xor
jp
push
jge
ret
jb
jo
or
adcl
and
imul
mov
popa
inc
cmp
push
jne
sub
insl
xor
cmp
sbb
jo
mov
addr16
ljmp
add
in
add
inc
mov
addl
lcall
and
je
ret
rcll
jns
ficoms
adcl
jns
sbb
sub
ret
lret
inc
popa
dec
orl
inc
mov
imull
inc
mov
mov
aas
pusha
pusha
pusha
cvtpi2ps
adc
fisttpll
or
ret
and
loopne
addr16
push
lods
popa
or
roll
mov
inc
and
xchg
lret
mov
mov
xor
jno
mov
mov
cmp
mov
xchg
popl
cmpsb
inc
inc
cmp
inc
lahf
jne
fidivs
xor
push
jecxz
fiadds
aaa
outsl
and
add
scas
mov
inc
lcall
aad
in
push
sar
test
jg
inc
or
fsubs
sub
sub
js
mov
test
dec
xor
and
or
mov
add
cmp
cmp
arpl
jno
lret
mov
dec
cmp
test
xchg
sbb
fwait
add
insl
insl
adc
jbe
sub
xor
inc
pop
or
pop
mov
adc
dec
pop
cvtdq2ps
insb
mov
repz
imul
mov
test
lret
stos
pop
dec
lret
sbb
icebp
fists
rcl
cmp
sbb
dec
or
jae
push
sbb
je
inc
lahf
pop
mov
and
inc
aam
and
lcall
inc
daa
insb
pop
loopne
incl
dec
xchg
mov
or
sub
mov
add
int
or
adc
sub
ret
xchg
rorb
push
mov
mov
in
xchg
mov
mov
scas
push
sbb
jns
jecxz
dec
out
sbb
xor
sbb
adc
popa
mov
mov
adc
bound
dec
sub
adc
inc
scas
movsl
insb
jge
inc
adc
pop
decb
pusha
cli
mov
or
cmp
adc
ret
sbb
or
lds
add
xchg
push
ja
dec
xorb
sub
adc
ja
mov
xorb
sub
mov
lahf
out
xchg
jo
add
xor
ret
ficompl
adc
jns
or
push
sub
xchg
adc
or
icebp
insb
popf
mov
fstps
insb
gs
jno
add
pop
loope
je
adc
push
inc
mov
xchg
xchg
push
data16
stos
cmp
arpl
clc
test
ljmp
and
divl
in
in
test
je
adc
inc
pop
dec
aas
mov
out
test
fs
dec
inc
xor
pop
sbb
scas
pmaxsw
lock
nop
inc
mov
ljmp
jno
adc
bound
inc
int3
test
adc
imul
jmp
mov
xorb
inc
and
inc
movsl
shl
orb
push
iret
shlb
clc
test
pop
cmpsl
fmull
sub
mov
in
roll
mov
es
rcr
bndstx
dec
jmp
ficompl
bound
mov
jmp
mov
lds
xchg
in
mov
cmp
push
test
mov
inc
inc
lods
adc
mov
rcrl
inc
js
orl
call
add
dec
popf
lcall
sub
xor
add
xor
add
push
leave
dec
repnz
aaa
inc
shlb
or
or
adc
mov
cmp
add
call
mov
rcrb
or
add
lret
movsb
cmp
jns
dec
mov
or
sarl
iret
scas
mov
bound
add
testl
push
aas
xchg
icebp
sub
sbb
faddl
cmp
cmp
adc
loope
push
or
push
inc
jg
push
or
outsb
push
xor
sbb
pop
fs
xchg
cs
inc
stos
and
in
sub
movsl
es
loope
rolb
push
mov
adc
push
pop
gs
sar
cwtl
push
sub
daa
and
inc
mov
xchg
test
aad
out
mov
cmp
pop
inc
loopne
or
shlb
mov
adc
adc
pop
ret
bswap
cmp
mov
stos
push
repz
or
pop
aaa
add
xor
xor
scas
inc
pop
jo
out
pop
ret
inc
mov
cmc
inc
push
and
xlat
mov
add
cli
in
insb
movsl
rcll
lods
rcll
rcrl
out
scas
insl
and
or
jl
movsl
sti
dec
jg
xchg
dec
adc
xchg
int3
adc
sti
jnp
inc
es
lahf
or
sti
inc
xor
add
push
jecxz
cmp
outsl
sub
cmc
cmp
mov
xchg
lods
subl
lea
dec
xor
mov
ret
dec
adc
mov
push
and
sub
lret
subb
stos
fst
sub
xor
adc
lcall
jmp
lds
inc
or
test
sub
push
mov
add
add
ret
or
mov
mov
lahf
xor
iret
daa
and
call
mov
inc
pop
jmp
add
cs
or
sub
push
xor
xor
and
adc
inc
or
or
das
movsb
lods
je
sar
xor
fwait
mov
cmp
mov
or
adc
jo
xlat
xchg
and
mov
and
xchg
jb
pusha
addr16
xchg
pushf
sub
cwtl
movsb
sub
pop
jg
aas
mov
popa
dec
add
cmp
push
jp
lret
xor
dec
scas
lock
sbb
mov
jl
mov
adc
sub
dec
pusha
push
mov
jge
pop
jl
fwait
ret
dec
shrb
push
rorl
mov
xchg
dec
inc
andb
cltd
pop
add
cli
add
dec
sbb
push
jb
push
test
and
cmpl
jns
add
sti
fldenv
cltd
jg
sbb
inc
les
push
fiaddl
cmp
pop
rorb
xchg
mov
adc
shll
mov
cwtl
sbbb
jl
or
test
ljmp
shll
xchg
loopne
iret
push
testl
cmp
dec
sbb
and
ds
jmp
rorl
inc
loopne
inc
or
mov
hlt
test
pop
cmc
add
mov
dec
rclb
dec
sub
cmp
leave
in
push
cmp
addr16
jg
add
dec
dec
inc
fstpt
sbb
push
ret
or
fcoml
mov
shlb
push
test
test
cmpsb
imul
mov
cmpsb
push
loopne
and
adc
dec
dec
stos
cmpsl
gs
and
hlt
cld
push
pushl
or
jno
lea
mov
and
cmp
sbb
sbb
dec
fmull
cli
ret
enter
mov
push
cmp
das
push
mov
aas
add
jo
add
inc
aaa
mov
mov
outsb
cli
mov
ljmp
or
sub
pop
dec
and
arpl
adcb
ret
lcall
cmpsl
mov
pop
es
add
mov
add
xchg
inc
sub
fnsave
xor
jmp
cmp
dec
pop
dec
jo
aaa
cmpsl
or
xlat
xor
jno
cmc
push
mov
es
filds
addb
enter
inc
xchg
loope
sahf
dec
movsl
mov
pop
movsb
push
dec
loope
rorl
hlt
dec
arpl
out
sbb
add
sub
shll
arpl
loope
xchg
ret
filds
add
adc
mov
addr16
sti
push
aaa
popa
lds
push
dec
orl
cmp
ss
sbb
add
xor
and
mov
ja
rol
dec
shll
xor
rcll
cmp
cmpl
mov
cmp
imul
sub
xchg
out
push
inc
sbb
push
stos
lea
jno
and
test
imul
jl
jmp
js
aaa
and
js
jmp
pop
or
xor
sbb
or
loopne
shll
arpl
aaa
idiv
and
loop
mov
imul
les
mov
repz
xchg
and
jmp
add
dec
xor
rcl
dec
mov
adc
xlat
jnp
fstpt
scas
mov
xchg
scas
push
dec
push
and
outsb
nop
aam
inc
xor
aam
call
push
mov
repz
mov
nop
cmp
int
and
in
icebp
sti
xlat
lss
mov
pop
and
das
jo
imul
mov
xchg
pop
dec
repz
xor
sbb
popa
xchg
test
out
call
je
push
mov
inc
adc
add
outsl
mov
mov
iret
push
sbb
inc
gs
repz
test
orb
ds
arpl
insl
fwait
mov
and
ret
jp
nop
jecxz
roll
pop
sti
fcomi
daa
jae
push
add
and
inc
sarb
inc
adc
fimuls
repz
jbe
and
xor
aas
mov
sub
and
jns
pusha
and
inc
lods
aas
inc
push
push
ret
loopne
int
imul
daa
movsl
sub
pop
mov
sbb
addr16
decl
push
jge
sahf
jo
lods
xor
jp
pop
xor
pop
or
test
xlat
inc
call
in
xchg
movsl
jo
int
movsl
adc
out
dec
je
movsb
jns
psrad
popa
jp
popf
ret
shlb
cmc
or
xchg
mov
out
pop
popa
sub
fimull
sti
test
jle
sbb
adc
pop
jbe
push
jp
and
sbb
bound
jne
pusha
or
popl
gs
movsl
add
popa
imul
mov
call
or
xchg
andl
mov
in
inc
push
sub
aam
mov
adc
repz
fcmovb
cmp
jns
add
dec
adc
lret
add
pop
pop
xchg
pop
fldcw
fisubrl
mov
fstpl
ds
sbb
lret
cmp
xor
inc
push
les
outsb
daa
add
xchg
lock
adc
es
mov
dec
insl
sub
adc
jge
push
movsb
call
jecxz
test
pop
enter
cmp
add
inc
cli
movups
aaa
mov
mov
daa
loope
bound
aam
or
icebp
add
pop
imul
fs
mov
das
dec
jb
lcall
dec
stos
add
xor
out
adc
add
inc
add
pop
mov
mov
jno
cmp
sbb
xchg
or
adc
aaa
fsubrs
adc
idiv
jg
add
push
outsb
xchg
orb
jp
jg
xor
leave
sbb
sbb
cmp
sti
mov
jge
cwtl
popl
pop
outsb
adc
clc
and
aaa
andb
int3
insb
aad
js
test
sub
add
fiaddl
or
ficoms
ss
leave
lret
mov
sub
mov
adc
addr16
push
cmp
insl
jns
cltd
xchg
mov
push
dec
adc
xchg
lahf
mov
or
jg
add
inc
sbb
outsb
xor
nop
and
or
repnz
inc
xlat
push
fisttps
test
push
inc
inc
popa
mov
push
adc
sub
popl
xor
mov
jecxz
dec
and
xor
jbe
pop
jecxz
fcmovbe
and
pop
sbb
xor
fcoms
js
aad
arpl
cmpsb
dec
popf
mov
mov
mov
lock
ret
lahf
xor
pop
sub
es
call
adc
inc
bound
es
cltd
dec
cwtl
jno
xor
fbld
pop
xor
xor
mov
insl
mov
out
test
inc
popf
cmc
push
jb
stc
filds
insl
in
cli
int3
loop
cli
pop
push
pop
cmpsb
xchg
inc
or
lcall
test
cmpsb
jbe
dec
arpl
imul
call
flds
addr16
pop
cld
arpl
cli
lret
sub
out
sbb
jge
clc
cmpsl
loop
xchg
rcrb
push
dec
jo
stos
cmpsl
fsubl
test
inc
popa
add
xor
dec
js
and
pop
xor
adc
out
push
dec
in
out
mov
jo
and
and
loope
call
push
dec
jl
push
bound
push
sbb
jmp
jge
mov
es
xor
jl
fcoms
repz
icebp
cmp
jo
inc
cmp
and
call
loope
loop
mov
dec
cs
hlt
or
cmp
movups
cmc
lret
js
mov
pop
xor
lret
or
xchg
jne
loopne
cli
cmpsl
insb
or
xchg
pushf
ds
jne
inc
ja
sbb
sub
dec
sbb
mov
jne
nop
pop
push
and
stos
enter
mov
adc
xor
das
mov
lcall
dec
sub
ud2
push
insb
cmpsl
movsb
insl
aaa
in
mov
aam
mov
aam
mov
mov
jp
stc
mov
or
out
imul
jmp
js
dec
or
out
or
inc
add
pop
cmp
dec
outsl
push
andb
das
pop
lods
dec
gs
aas
pop
sti
addb
adc
out
push
pop
sub
scas
mov
xchg
push
decl
mov
sub
ret
cmpsb
movsl
divl
or
or
js
mov
lods
loopne
and
and
js
adc
dec
popf
jne
and
mov
jns
and
cmp
pop
stos
mov
or
cwtl
sub
pop
dec
jnp
int3
mov
lret
xor
and
pop
pop
mov
js
fistps
mov
test
adc
out
mov
out
in
jle
fisttpll
sar
dec
jb
mov
sbb
jge
xor
aaa
daa
stos
push
xor
sbb
aas
scas
test
dec
lods
movsb
aam
cmpsb
addr16
inc
mov
rolb
sbb
xor
push
inc
mov
push
or
ds
scas
cli
scas
mov
iret
lea
lret
xchg
xlat
xchg
sbb
pop
jmp
or
push
cs
flds
or
das
lds
andl
stos
fnstenv
mov
lods
addl
or
add
mov
div
das
dec
sbbb
out
lods
push
sarb
and
sbb
ficomps
add
cmp
pop
rcl
cmp
adc
jo
shlb
push
test
xor
inc
mov
sbbl
insl
aaa
pushf
add
bndstx
and
aaa
xor
lock
pop
movsl
ss
aad
test
icebp
mov
jne
pushf
jno
xlat
or
xchg
dec
enter
cmc
subl
sub
add
ss
mov
pop
adc
std
jne
add
jecxz
mov
sub
mov
sbb
fisubs
inc
call
pop
lret
leave
cmp
popa
add
je
mov
sahf
jmp
lret
inc
inc
inc
and
pusha
mov
addr16
sbb
or
jge
jo
adc
aaa
test
adc
xchg
pushf
pop
sbb
push
ficompl
fwait
mov
adc
inc
inc
sbb
sub
push
adc
pop
testl
add
mov
jnp
test
imul
ret
sahf
lea
jo
movsl
cwtl
jmp
push
aad
mov
or
push
dec
pop
test
or
cwtl
lods
push
jno
aam
enter
ja
popa
xor
push
mov
mov
test
loopne
jl
mov
pop
adc
add
sarb
cmp
scas
xor
mov
arpl
imul
incl
outsl
jo
push
cmp
into
jnp
adc
leave
test
inc
xchg
mov
icebp
mov
pop
sub
and
jae
mov
cwtl
dec
push
popf
mov
iret
nop
jb
mov
xlat
rclb
stos
xchg
in
aad
mov
or
bound
lods
mov
jne
sahf
adc
lret
lahf
pop
xor
popa
mov
sub
mov
dec
loope
test
loopne
fildll
mov
imul
cmc
push
add
push
pop
add
lods
adc
pop
cmp
mov
arpl
jbe
pop
jp
cmp
rcll
rorl
xor
cmpsl
je
xlat
add
xchg
fmuls
es
aad
imul
loope
sbb
js
pop
adc
and
jae,pt
nop
push
sbb
inc
pop
push
pop
inc
or
sbb
stos
xor
push
or
add
add
in
incb
and
icebp
inc
stos
jae
jp
push
bound
aas
sub
out
lea
lahf
jno
or
test
popa
xchg
sti
fisubs
gs
xor
cmpsb
xor
mov
mov
and
rcrl
mov
je
jbe
sbb
sub
inc
popf
jmp
imul
ja
push
adc
push
cmc
inc
mov
clc
pop
pop
lods
lea
or
and
iret
lock
iret
js
test
mov
push
imul
adc
inc
and
aad
mov
lahf
movsl
add
push
insb
shl
pop
jp
cmp
mov
ret
pop
dec
pop
rcrb
sub
xchg
xor
fdivrp
sub
push
in
sbb
popf
add
sbb
or
add
xchg
ret
mov
movsl
addr16
cs
pop
add
add
popl
sbb
fldenv
shll
inc
rol
cmp
push
dec
out
scas
test
insb
and
shll
adc
or
cli
icebp
adc
lds
js
mov
mov
and
inc
push
pop
fs
mov
inc
jg
bound
inc
push
pop
cmp
push
rclb
and
movsb
ffree
pop
jp
pop
fwait
lock
lock
xchg
pop
adc
fs
sarb
mov
popf
iret
sti
arpl
lods
arpl
jno
inc
mov
xchg
dec
mov
movsb
testl
ret
ret
sbbl
push
push
fsub
je
clc
push
xchg
mov
push
or
sbb
lret
add
pusha
xor
dec
sbb
mov
sahf
add
cmp
xorb
and
xor
adc
leave
inc
cmc
push
sahf
cs
fxch
pop
mov
mov
add
aas
lahf
sub
add
jp
inc
mov
xorb
test
ss
je,pt
je
pop
jmp
xchg
aad
dec
stos
je
pop
fs
push
push
pop
or
jae
inc
insb
and
nop
shlb
out
and
pop
stos
lahf
xchg
jno
jno
in
cs
add
fcoml
jmp
or
dec
push
dec
pop
add
mov
call
int3
push
mov
test
clc
loope
mov
mov
mov
test
stc
lds
and
ret
mov
call
mov
sub
dec
loope
jmp
popl
test
xor
aam
lock
mov
ret
popf
adc
xor
js
xchg
cmp
pop
and
push
add
andl
mov
pop
shlb
dec
sub
mov
into
and
mov
xor
stos
sti
sbb
dec
lret
bound
adc
lock
or
daa
ss
mov
or
lods
add
iret
jbe
andl
mov
js
ret
and
test
inc
push
adc
inc
sbb
bound
lea
add
mov
jnp
adc
sub
sbb
sub
sahf
mov
and
inc
pop
aas
adc
mov
fdiv
add
repz
mov
add
push
aas
cmp
int3
insb
sub
leave
lcall
cld
jne
fcmovb
mov
mov
mov
jae
push
push
stos
sbb
cmp
data16
sbb
add
or
push
xor
xchg
andl
test
mov
sbb
dec
adc
or
mov
roll
nop
inc
push
add
mov
inc
cmp
jnp
cmp
cmp
arpl
cmp
sbb
mov
or
mov
push
ljmp
jb
xchg
or
ret
xlat
inc
xlat
lea
mov
shrl
das
sbb
lods
xor
jne
fdivs
cmp
adc
cmp
clc
mov
sbb
inc
xchg
rolb
push
adcb
idivl
inc
dec
test
pop
xor
mov
pushf
cs
leave
adc
jae
nop
js
push
js
push
sbbl
imul
mov
push
scas
movsl
or
mov
cmp
push
or
xchg
gs
ss
push
data16
add
aaa
add
add
or
jmp
sbb
sub
adc
inc
push
orb
adc
jg
push
popa
xchg
fidivl
push
mov
subb
lods
imul
dec
adc
rcrl
mov
pop
imul
or
andb
and
adcl
push
daa
add
sbb
push
sarb
push
pop
scas
imul
test
icebp
loope
or
je
fldl
test
xchg
dec
xor
test
push
sbb
push
test
mov
push
addr16
loope
arpl
arpl
or
int
push
mov
nop
pop
inc
mov
imul
or
jmp
shlb
xor
popa
jne
test
mov
xor
xchg
push
mov
cmp
push
lds
jl
cmp
xor
xor
adc
or
cmc
sub
and
dec
sub
xchg
rcrl
bound
pop
fsubl
sub
adcl
lods
rolb
sbb
out
add
fmull
pusha
push
pop
mov
pop
or
push
cmp
sbb
sbb
sbb
dec
mov
dec
cmp
arpl
dec
adc
inc
xchg
lods
mov
push
add
and
xchg
sub
xor
adc
xchg
inc
cmc
jle
clc
rolb
cwtl
add
imul
xor
and
mov
lds
add
xor
dec
xor
jp
fidivl
fistpl
mov
mov
mov
cld
push
adcb
ror
iret
cmp
mov
xchg
cmp
jp
popa
lcall
in
addb
and
add
mov
mov
decl
test
call
test
popa
cwtl
les
mov
mov
or
cmpl
test
dec
addr16
mov
jp
ss
mov
in
cmc
cs
jno
fmulp
mov
movsl
adc
push
xor
fidivrl
adc
inc
cmp
mov
mov
ret
xchg
push
dec
sub
loope
dec
or
add
lea
sahf
pop
insl
add
mov
fsubr
mov
inc
add
push
add
adc
and
inc
mov
lods
pop
xchg
lods
das
sub
inc
call
test
lds
mov
and
xchg
adc
pop
jns
jbe
ret
mov
cmp
jp
jnp
or
push
pusha
mov
fsubl
mov
dec
nop
testb
xor
and
sbb
cmp
or
enter
sbb
cmovno
mov
stc
sub
popa
mov
inc
or
popf
out
sub
fstps
aas
test
inc
sub
xchg
shlb
icebp
mov
fnstsw
jmp
jp
xchg
jp
orl
daa
dec
fistpl
daa
leave
pop
cmc
mov
stc
rorl
rcll
xchg
jecxz
jge
int
jo
loope
push
mov
test
mov
xchg
cmpsl
push
lret
sub
and
clc
add
cwtl
movsl
jae
mov
ret
adc
aad
push
lods
and
push
jl
push
or
inc
lods
inc
shlb
in
cmp
imul
adc
push
mov
mov
cmp
pusha
lods
or
or
ss
lahf
ror
add
or
xor
rep
pop
xchg
pop
push
fiaddl
mov
in
mov
push
mov
xlat
in
add
and
stc
popf
or
gs
add
xchg
rcl
gs
arpl
aad
rolb
les
add
das
pop
pop
scas
sti
bound
test
sahf
add
int
sahf
or
and
inc
arpl
push
and
lock
cwtl
xchg
sbb
scas
icebp
jnp
enter
dec
std
subb
push
addl
aaa
dec
or
pop
add
aam
adc
movsb
lret
cmpsl
mov
add
xor
es
cmp
lret
lock
and
popa
dec
mov
sbb
loope
scas
jge
pop
sub
mov
xchg
jb
insl
xorb
wrmsr
mov
sub
aam
imul
pushf
stos
xchg
cmp
andl
cmp
mov
pop
or
out
in
in
je
repz
mov
add
inc
pop
loope
or
lods
outsl
pop
mov
fucom
add
rol
cmc
aad
sub
pop
stos
add
mov
fisttps
call
inc
and
push
mov
pop
sbb
mov
pop
jnp
fcmovnu
push
test
cmc
popf
loope
es
arpl
scas
xor
sbb
dec
push
pop
push
rol
xor
sub
aad
scas
jmp
std
call
xchg
orb
shrl
sbb
add
push
les
mov
sub
push
add
and
mov
loope
adc
push
stos
dec
imul
sbb
popf
repz
bound
js
mov
cmp
insl
nop
jmp
pop
pop
adc
aad
jecxz
out
cs
and
pop
jge
gs
add
aas
jo
dec
fdivrs
js
nop
pop
push
iret
neg
and
adc
xor
mov
xlat
imul
inc
add
mov
adc
sbb
pop
lcall
in
adc
cmp
shlb
inc
loope
lock
cmp
rcll
sub
out
mov
ljmp
ret
add
push
pop
mov
add
and
or
sbb
push
outsl
cmp
xchg
adc
mov
lcall
lcall
and
xchg
stos
pop
add
movsb
push
add
mov
push
mov
mov
mov
jecxz
xchg
mov
add
clc
jecxz
dec
add
ret
pop
pop
out
jmp
pop
pop
mov
pop
xchg
add
in
cmp
jno
add
mov
rol
add
xchg
fstl
or
mov
push
dec
rcll
fwait
sub
sbb
and
enter
or
fld
adc
insl
out
xchg
orb
popa
arpl
in
and
jmp
mov
mov
cwtl
add
rclb
push
sahf
mov
jbe
xor
inc
adc
mov
and
loope
add
pushf
cltd
jne
mov
mov
cmp
dec
push
mov
or
jo
and
repz
dec
mov
push
pop
xchg
cwtl
and
imul
add
jge
test
or
mov
xchg
or
or
mov
push
push
daa
push
sbb
repnz
out
lret
ljmp
std
cltd
mov
jo
rorb
cltd
add
add
dec
movsl
roll
push
popf
jne
xchg
test
mov
add
sbb
test
dec
cmp
leave
in
or
push
xor
push
adc
add
test
jo
enter
pop
test
popa
pusha
outsl
xor
jne
je
mov
and
or
dec
add
lea
xchg
or
adc
mov
inc
mov
imul
inc
or
push
in
add
out
push
and
sbb
push
and
test
or
cwtl
adc
shll
ja
push
and
sub
stos
jmp
mov
lock
cmp
inc
inc
sub
add
pop
lods
jnp
push
fidivrs
mov
ja
or
adc
sub
push
adc
sahf
andb
es
add
faddl
iret
mov
and
mov
in
out
lcall
popf
add
stos
test
push
ljmp
out
dec
adc
clc
dec
and
cmovnp
rorb
pop
push
sbb
xchg
sbb
mov
add
sbb
dec
sub
cltd
mov
out
ret
addr16
xor
xchg
add
int
adc
push
out
lock
jmp
inc
je
push
js
xchg
sbb
xchg
call
mov
out
mov
add
stos
in
dec
and
jnp
sbb
add
pushf
inc
fs
xchg
fstpl
lds
mov
jecxz
dec
shlb
push
jo
jne
jno
push
insl
iret
cli
rolb
in
je
add
sbb
pop
loopne
inc
push
test
add
insl
push
adc
adc
sbb
bound
test
xchg
pop
fldt
sbbb
data16
daa
pop
sbb
stos
scas
jb
dec
mov
push
adc
fildll
sbb
sbb
repz
cltd
scas
pop
jp
js
fstpl
inc
xchg
sbb
jo
stc
push
mov
xchg
sub
add
movsb
inc
mov
movb
mov
stos
or
sub
loope
add
js
inc
bound
jbe
rol
aad
mov
test
mov
jbe
mov
adc
add
loopne
test
xor
and
je
loope
lock
and
fistl
lods
xor
or
out
adcl
insl
bound
loope
jp
fildl
das
rolb
and
xor
mov
jecxz
lahf
out
fstl
cmpl
lahf
adc
mov
add
icebp
pop
push
or
enter
inc
add
pop
pop
out
ss
adc
sbb
adc
leave
shll
insl
shl
lret
addb
xchg
inc
cmovl
sub
lea
test
inc
loopne
sbb
adc
lea
cmc
mov
dec
sub
mov
and
aad
movsb
testl
pop
sbb
fisubs
pop
push
pop
push
xor
mov
aas
add
or
ret
pusha
aad
mov
sti
cmp
jecxz
mov
cmp
addl
xchg
xlat
repz
mov
pop
nop
mov
aas
scas
add
push
stos
adcb
in
cmp
insb
rcll
test
cmp
jno
jno
dec
cld
push
jmp
lods
mov
sub
aad
aas
jne
push
pusha
sub
mov
xor
jo
pusha
add
enter
adc
aaa
insb
loope
cmp
ret
in
adc
ffreep
push
jmp
scas
and
lret
xor
adc
rcll
jne
xchg
cltd
enter
test
loop
in
mov
punpcklbw
cmp
shrl
mov
ja
push
xor
cmc
xor
and
in
mov
inc
push
roll
jno
arpl
jmp
adc
not
add
aaa
mov
popa
es
out
mov
iret
cmp
testb
adc
fists
nop
mov
sub
xor
lds
movsb
orl
jl
ret
fcomi
inc
fdivrs
and
xor
pop
cltd
sub
pushf
cwtl
and
adc
jmp
sbb
repnz
mov
add
add
add
inc
cmc
out
mov
mov
jg
push
rol
sub
cmc
cmp
xor
stos
or
sub
add
cmp
js
xchg
xor
xchg
or
sbb
jge
movsl
inc
adc
mov
inc
and
inc
pop
push
lods
inc
adc
mov
imul
xor
xchg
cmp
pop
mov
in
sahf
ss
lock
push
lods
mov
out
jbe
inc
popl
mov
les
loope
sbb
jnp,pn
sbb
xchg
test
scas
lods
lahf
stos
add
ror
sub
mov
push
lods
in
mov
icebp
push
jns
and
testl
mov
cmpl
ljmp
inc
inc
shlb
fwait
push
ds
aas
push
sbb
mov
adc
fdivp
loop
push
loope
push
arpl
out
dec
es
arpl
mov
mov
pop
xchg
jne
adc
pop
das
xor
nop
or
pop
in
add
popa
lds
add
push
cmc
sub
cmp
pushf
add
ja
fld
fisubl
xchg
mov
inc
test
and
push
or
push
sbb
insl
mov
cltd
sbb
lea
fmull
push
dec
test
mov
cs
loop
imul
mov
add
xor
popf
lods
lock
popf
push
leave
push
and
xlat
and
cli
or
gs
and
xor
lds
ss
pop
add
mov
sub
sub
mov
fmull
stos
xor
fdivl
or
pop
roll
push
iret
xchg
ss
stos
lahf
cmpsb
pop
stos
popa
loope
dec
mov
inc
mov
push
jge
movsb
pop
fdivr
mov
add
lahf
add
cmpsb
adc
cmp
pop
in
mov
js
loopne
xchg
xchg
mov
mov
mov
adc
jecxz
adc
xchg
sbb
or
add
call
mov
dec
adc
or
inc
inc
int
inc
es
popa
in
xorl
or
shlb
pop
push
adc
imul
add
jnp
mov
push
fstps
rcll
jp
scas
mull
mov
loope
cmpb
xor
add
and
xchg
out
mov
scas
enter
xor
and
xor
dec
sbb
add
sbb
pop
inc
pop
mov
pop
lods
daa
jb
add
adc
popa
pop
leave
adc
dec
fmul
pop
movsl
lret
xor
pop
or
mov
or
es
sub
sbb
sub
imul
jne
cmp
or
sub
dec
or
popf
pop
js
mov
sbb
ljmp
scas
test
shlb
fistpl
adc
or
inc
pop
push
imul
lods
add
negb
or
pop
push
sub
iret
inc
ljmp
jno
loopne
cmp
rolb
xor
mov
sbb
push
fbstp
js
faddl
jo
pop
pop
add
mov
or
xchg
sti
les
mov
push
add
clc
pop
das
adc
int3
dec
mov
inc
shlb
xorl
out
int
ss
xchg
jno
mov
inc
push
movsl
push
cmp
icebp
xor
test
mov
add
or
outsl
andl
adc
xchg
inc
and
mov
cmp
jo
adc
jecxz
sub
scas
sub
dec
lret
mov
pop
mov
insb
jae
scas
mov
leave
add
cltd
sub
mov
xor
add
and
mov
or
ss
or
pop
outsl
arpl
out
jmp
adc
sub
repz
mov
mov
push
push
xchg
or
pushf
cmc
sbb
sbb
lahf
andl
cmp
mov
jo
xchg
mov
jg
or
ss
gs
rcll
movsb
lds
pop
bound
mov
das
sbb
add
and
sbb
lds
add
ja
pop
xchg
decl
inc
aas
push
rcll
test
popf
or
stc
add
and
fadds
and
dec
jns
mov
sbb
mov
enter
loope
sub
push
add
sbb
jbe
fs
nop
add
pop
sbb
adc
inc
cmp
push
jbe
xchg
cltd
test
out
shl
repz
clc
mov
aas
adc
inc
pop
or
mov
adc
imul
mov
ret
mov
xor
cmpsb
icebp
in
xchg
je,pt
orl
pop
xchg
mov
jmp
icebp
or
add
enter
pushl
sub
jbe
push
out
sbb
add
sbb
add
out
jecxz
or
dec
sbb
jno
stc
mov
jmp
or
mov
shll
add
or
adc
jmp
rcl
mov
fwait
xchg
jne
lods
mov
xchg
and
pop
or
xchg
scas
mov
jno
imul
pusha
push
ss
cltd
ja
sbb
jns
adc
leave
add
jnp
loopne
push
mov
push
jl
movsb
or
sub
clc
push
xchg
sbb
dec
and
loopne
xchg
xor
push
xlat
sahf
mov
add
mov
nop
and
mov
mov
jge
mov
insb
mov
in
ret
inc
jmp
les
mov
cmpsl
cmpsl
test
inc
inc
cmpsb
jg
push
mov
mov
xor
xchg
ret
sub
inc
js
dec
jge
mov
loope
idivl
inc
jge
or
inc
rclb
mov
fwait
pop
jns
mov
sub
dec
jnp
in
daa
test
fildl
adc
shrl
pop
loopne
push
sbb
push
mov
cmpsl
mov
mov
xor
jmp
andl
inc
das
adc
add
sub
inc
rcl
cmp
les
or
dec
lahf
dec
xor
jne
adc
xchg
adc
sbb
xor
aam
jmp
rorl
cs
sbb
nop
cmp
js
push
push
ret
andb
mov
lahf
hlt
adc
icebp
push
mov
loopne
add
das
in
loopne
push
xor
and
int
rorl
inc
sub
pop
lea
arpl
out
pop
xchg
push
test
jp
clc
mov
add
xchg
xor
or
shll
adc
pop
lock
pop
adc
or
add
add
add
lods
dec
push
js
pushw
lcall
vaddsubpd
or
cmpb
scas
add
push
inc
sahf
sarb
and
jecxz
test
pop
in
add
mov
into
or
and
mov
sub
inc
xchg
lcall
lret
test
mov
xor
dec
xchg
popf
test
sarl
dec
loop
jmp
ret
push
aaa
xchg
in
ss
fisubrs
sub
paddb
xor
or
push
arpl
mov
popf
or
test
int3
iret
rcrl
es
shld
dec
pop
mov
adc
xchg
add
test
xchg
jo
xchg
mov
lods
lds
dec
sbb
push
pop
inc
xchg
xchg
lods
xchg
push
push
adc
and
imul
sub
addb
inc
and
mov
mov
outsl
or
xchg
shll
mov
inc
loope
shlb
jp
xlat
or
mov
adc
pop
cmp
scas
lods
add
mov
sbb
ror
daa
xor
add
loope
xor
push
adc
iret
dec
pop
push
or
xor
mov
jb
xchg
adc
pop
dec
sub
fs
mov
test
cmp
mov
inc
or
lahf
jge
add
mov
push
cmp
insb
aam
jg
mov
mov
in
nop
push
cs
insb
mov
rcrl
jp
das
xchg
mov
mov
aad
insl
scas
das
sbb
and
cmp
jno
mov
adc
inc
fsubs
into
jno
lods
hlt
pop
mov
dec
xchg
fprem
push
sbb
sub
les
xchg
cmp
bound
insb
jge
es
jne
sub
pop
or
adc
jne
sub
and
movsb
add
inc
inc
jnp
fs
mov
fxtract
test
rolb
xor
rorl
rcrl
nop
xchg
or
movsb
sbb
and
xor
jo
popa
cmc
enter
out
jmp
into
imul
push
scas
das
sbb
in
jge
mov
pop
sti
push
cmp
add
xor
jecxz
and
gs
fmuls
xor
adc
rorb
je
and
pop
push
int
adc
inc
or
das
mov
pop
pop
xchg
inc
sbb
xchg
pop
insl
pop
add
adc
push
mov
mov
xchg
les
iret
xor
mov
lahf
push
test
add
or
ror
jbe
inc
pop
sbb
cmp
les
add
sub
jp
dec
cld
pop
xchg
xchg
or
or
lods
lea
jmp
adc
adc
pop
out
cmp
fadds
mov
aas
and
and
std
inc
js
out
mov
shlb
mov
ljmp
pop
push
cmc
add
fnstcw
shl
xor
pop
lret
pop
flds
pop
inc
mov
test
inc
fiaddl
add
push
stos
pop
repz
mov
std
leave
and
pop
iret
pmulhw
imul
push
stc
xor
ss
cmp
xor
cmpsb
and
sti
adc
sbb
mov
addl
dec
mov
pop
addl
clc
mov
fdivs
jne
popa
shll
ja
xchg
xchg
repnz
sbb
inc
push
shll
cmp
ret
out
imul
mov
mov
imul
sub
xor
repnz
jo
aad
mov
add
rcr
pop
mov
mov
rcll
insl
in
cli
cmpsb
mov
shll
mov
cmp
add
addl
or
je
add
gs
xor
mov
push
mov
enter
add
les
or
inc
add
pop
inc
xor
iret
jmp
jb
cmpsl
dec
pop
repz
mov
jmp
test
loopne
insl
jmp
lock
mov
jmp
loopne
jl
add
in
mov
sarl
and
add
cmp
shl
sub
add
cmp
cmpsb
jecxz
pop
cmp
aam
and
mov
outsl
mov
add
add
jmp
cmp
popf
mov
jo
add
adc
cmp
in
lahf
pushf
or
mov
xlat
test
imul
lea
ret
xlat
xchg
sbb
sahf
or
inc
rorl
ret
adc
mov
and
mov
cmp
mov
mov
add
push
or
mov
inc
aam
fcmove
add
mov
add
rcrl
jle
add
sbb
xchg
lcall
test
and
fbstp
sub
and
cmpsl
loopne
dec
adc
imul
nop
les
out
pop
jmp
repz
icebp
dec
fwait
aam
push
push
mov
mov
adc
and
popa
and
xor
pop
adc
pushf
popf
push
mov
dec
in
pop
adc
arpl
xchg
add
inc
jl
ret
aad
mov
add
sbb
or
lds
adc
xchg
cmp
ret
push
sahf
mov
xchg
loopne
mov
xchg
lahf
mov
sub
jmp
inc
mov
mov
add
xchg
xor
add
roll
test
shlb
jns
test
or
xchg
jbe
add
arpl
xlat
or
add
ja
pusha
sub
push
pop
xchg
and
pop
pop
stos
xor
inc
pusha
icebp
xchg
dec
icebp
test
fwait
cmp
sub
mov
pop
xchg
add
jg
add
xchg
and
jge
xchg
loopne
int
sub
fmuls
cwtl
adcb
push
and
test
mov
fwait
lods
movsl
jnp
inc
lds
arpl
repz
mov
out
or
loopne
mov
and
inc
cmp
int3
mov
xor
aaa
movsl
mov
inc
mov
jecxz
dec
mov
sysexit
sub
gs
jo
adc
outsl
subl
jo
sbb
jmp
mov
xchg
andb
in
inc
lret
insb
jge
and
jmp
mov
pop
adc
in
out
int
cmp
push
iret
daa
cmpl
fisubs
or
out
jo
sub
add
inc
mov
test
jae
adc
daa
xor
sub
ja
dec
dec
aaa
inc
popa
xor
inc
mov
sub
push
inc
xor
mov
testb
jmp
xlat
push
das
pop
mov
les
test
sbb
cmpsl
push
mov
js
jo
jnp
mov
loopne
int3
xor
and
push
pop
jbe
loopne
lea
or
push
dec
push
mov
dec
cmp
or
xchg
or
aad
out
fisubrl
arpl
lods
xor
pop
or
push
mov
lea
fisttps
fidivs
add
push
dec
imul
hlt
jne
push
and
nop
in
int
imul
daa
out
jecxz
mov
lcall
gs
sbb
push
rclb
setae
push
inc
out
xor
xor
mov
inc
icebp
cmp
mov
or
andb
cltd
les
cmp
mov
xor
in
mov
dec
mov
cmp
imul
inc
loope
adc
fildl
dec
roll
jae
inc
xchg
ja
push
lods
xchg
inc
pop
in
mov
fwait
inc
pusha
xchg
xchg
in
outsl
sub
roll
xlat
fdiv
and
adc
mov
repz
in
adc
in
dec
mov
daa
sbb
add
xchg
pop
xchg
mov
cmc
xor
add
ret
sbb
iret
pop
mov
sarb
arpl
adc
xchg
loope
mov
or
out
daa
scas
inc
pop
adc
adc
and
mov
mov
adc
mov
add
dec
les
xchg
mov
out
sahf
inc
pop
cmp
mov
and
and
les
ds
adc
mov
jp
push
jmp
pop
and
shll
pop
xor
les
mov
loop
sbb
sbb
mov
dec
pop
fstl
mov
mov
testl
xor
lods
sbb
fmul
or
shl
xchg
cmpsl
cmp
jl
and
dec
aaa
inc
aas
cs
loope
and
mov
adc
shrb
inc
mov
sbb
add
scas
dec
sub
inc
or
es
addr16
shr
sub
shll
ja
add
sbb
sbb
fcoms
push
cmp
popf
fwait
out
int3
push
xor
das
mov
cmpsl
mov
jecxz
adc
jmp
xchg
test
xchg
pop
push
aas
roll
pop
fcompl
pop
mov
mov
sub
mov
fsubrs
imul
adc
add
imul
rcrl
aaa
bound
and
mov
ljmp
and
lcall
sub
sbb
fisubl
mov
inc
mov
pop
jmp
in
add
cs
xor
or
daa
in
out
pushw
xor
lret
lods
add
sub
sub
rorl
mov
mov
pop
mov
ja
jo
in
nop
call
or
mov
mov
push
pop
daa
ss
flds
pop
es
lret
xor
or
push
lahf
adc
mov
scas
push
ja
je
or
insb
jnp
je
mov
jecxz
testl
rclb
aad
neg
xchg
or
mov
jl
lods
xchg
aas
adc
lock
addl
jae
aas
js
lds
inc
or
mov
ret
xor
rcl
mov
inc
loopne
jbe
shlb
xchg
out
or
das
das
mov
adc
gs
syscall
push
push
int
cmpb
testb
mov
mov
inc
jge
dec
decl
imul
inc
inc
mov
mov
mov
fildll
xchg
arpl
mov
test
mov
outsl
jg
xchg
dec
jo
test
inc
xchg
cmp
lea
popl
bound
mov
movsl
add
inc
pop
scas
mov
mov
cmp
addl
mov
xor
mov
aad
scas
fwait
mov
or
dec
rol
dec
loopne
imul
cmp
push
repz
adc
lcall
pop
xchg
out
inc
cmp
add
xor
in
sub
pop
cmp
push
out
xor
ret
mov
mov
sub
sub
repz
mov
inc
fmul
inc
cmp
aam
cmp
imul
xor
in
xor
mov
jle
adc
shll
and
lods
jnp
push
out
jnp
adc
or
andb
and
adc
or
mov
mov
cmpsl
jae
fisttpl
xchg
in
jge
mov
int3
mov
xchg
dec
xor
mov
cmp
imull
je
fstpl
and
sbb
ljmp
xlat
push
popa
adc
outsb
inc
jmp
xchg
insb
mov
ds
out
inc
push
testl
cltd
mov
mov
jmp
xchg
cmp
std
jb
add
jo
xor
inc
cmp
push
fldl
add
inc
fldt
add
pop
jne
fistpl
push
dec
mov
sbb
pop
lea
add
dec
pusha
pop
adc
popl
jae
arpl
mov
xchg
jg
add
fiaddl
pop
jno
pop
mov
arpl
adc
dec
pop
xlat
aam
jmp
clc
andb
xchg
inc
nop
mov
loopne
sub
mov
sbb
aas
pop
bound
shll
or
dec
push
daa
pop
dec
js
jne
mov
mov
xor
addr16
mov
inc
push
sbb
mov
out
push
stos
push
or
stos
iret
sbb
repnz
add
mov
pop
rol
pop
fstp
adc
dec
lods
dec
je
push
xchg
add
sbb
out
mov
jle
cmp
xor
sbb
push
rclb
xchg
mov
pop
cwtl
outsb
mov
add
cltd
sbb
stos
or
imull
jno
sahf
mov
mov
sbb
sub
rclb
arpl
scas
test
dec
pop
xchg
sub
adc
push
out
sub
mov
jge
mov
lock
xorb
inc
cmp
out
sub
push
out
and
mov
fidivs
adc
mov
pop
stos
cmp
sbb
add
push
push
dec
or
push
or
mov
add
pushf
jecxz
enter
push
fidivs
sbb
imul
test
or
cmpsl
adc
pop
stc
bound
jne
add
add
sbb
xor
cmpsb
mov
in
or
ffreep
and
xchg
lcall
or
add
or
shll
outsb
pop
inc
popf
roll
incl
jo
cmpsb
sbb
and
xor
pushf
or
test
mov
pusha
cwtl
adc
add
call
xor
or
jno
xlat
adcb
int
lcall
pop
rcr
push
sti
push
pop
cmpsb
fdivl
mov
pop
push
xchg
dec
pop
movsb
inc
rorb
sti
pop
fs
jo
lods
incl
out
loope
shlb
mov
or
xchg
jbe
ret
push
sbb
mov
icebp
cmp
lods
cld
cli
sbb
push
add
add
xchg
insb
lock
cmp
jns
dec
rolb
add
insl
jns
addr16
pop
or
shlb
or
adc
jns
es
mov
mov
sbb
pop
or
inc
xor
cs
mov
push
in
push
iret
jb
int
pop
or
pusha
fs
sub
mov
jo
lahf
push
jae
aam
xor
out
pop
enter
fbld
insl
pop
lods
xchg
xchg
call
pop
fcoms
insb
cltd
decl
enter
das
jnp
push
mov
add
sbb
call
sbb
data16
fdiv
enter
lcall
xlat
cmpsl
insl
arpl
xorb
or
ret
jl
mov
icebp
fisttpll
addr16
and
sbb
insl
cmp
mov
fmull
lds
xor
sub
add
mov
jecxz
stc
add
add
addr16
inc
mov
xor
mov
fistps
lcall
es
mov
and
add
jp
fdivrs
scas
in
imul
outsl
xor
mov
pop
bound
mov
incl
mov
jmp
sub
stos
adc
pusha
lds
lock
sbb
mov
ficompl
sbbb
xor
pushf
sub
cmp
stos
cmpsl
pop
mov
lahf
std
pop
add
push
push
mov
mov
or
cltd
lcall
inc
in
and
mov
out
sub
jnp
outsb
popa
push
ret
jbe
xchg
mov
pop
mov
jmp
pushl
mov
inc
add
pop
mov
and
and
sub
adc
shlb
outsb
sbb
call
cmpl
call
mov
fildl
mov
and
mov
rolb
mov
sub
adc
dec
xor
push
mov
ja
clc
push
and
sbb
inc
fwait
pop
std
andl
daa
lock
sahf
push
rorb
ja
or
cmp
pop
adc
adc
test
ja
call
adc
sbb
jne
or
pop
xor
inc
sbb
pop
jns
dec
orl
pop
or
or
sbbb
cmp
cmp
adcl
add
pushf
xchg
and
or
hlt
mov
adc
adc
and
inc
sub
ret
dec
nop
cmovb
xchg
mov
mov
push
and
ret
scas
loop
fstl
jp
xor
rorb
pop
ja
or
xchg
lods
add
xlat
dec
add
decl
es
cmc
pop
fcmovnu
rorb
sbb
outsb
adc
int3
mov
mov
pop
fisubrl
mov
aad
add
cli
hlt
add
stos
bound
sub
jne
decl
sub
inc
and
aas
insl
add
jl
jae
je
daa
fadds
rcl
bound
mov
mov
pushf
add
movsl
mov
sub
imulb
rcl
adc
mov
adc
popa
pop
or
and
cmpb
les
and
mov
decb
add
imul
push
xchg
add
fstps
jge
cmp
pop
ret
pop
dec
sahf
loope
add
daa
out
jl
push
and
popf
mov
sbb
xchg
pop
pop
push
lea
sub
add
orl
rorl
jo
add
data16
pusha
or
add
div
dec
nop
aad
add
add
pop
out
repz
sbb
test
or
dec
rcrl
push
andl
and
sti
fisubl
daa
push
cmp
rcrb
sub
enter
movsb
or
jnp
or
adc
mov
ret
xchg
es
jb
enter
or
addr16
cli
push
les
pushf
push
jb
adc
mov
xchg
adc
push
stos
add
or
ret
jle
mov
cmp
adc
pop
sub
mov
and
and
inc
cmovge
rolb
xchg
mov
add
call
lds
mov
bound
adc
inc
out
adc
dec
add
inc
das
les
movsl
mov
sub
dec
lret
ffreep
xor
xor
push
sbb
cs
in
or
add
push
adc
mov
jno
pop
hlt
lret
pushf
add
incb
sbb
int
mov
popa
or
cmc
sbb
movsl
inc
cmpl
sbb
adc
ja
add
test
mov
and
arpl
movsl
fldl
inc
fsubs
inc
rcrl
popa
out
push
xor
mov
push
pusha
call
sbb
cmp
push
xor
in
and
push
shlb
cmp
sbb
xchg
lods
shrl
inc
aas
or
mov
ret
movsl
test
xor
mov
and
adc
mov
inc
push
popa
test
add
js
mov
mov
ljmp
sbb
mov
lea
ret
cli
std
into
mov
mov
xchg
jae
andb
ficomps
jno
xchg
adc
insb
jne
cs
fwait
hlt
lret
inc
push
leave
loope
jmp
movsb
add
add
inc
js
cmp
mov
ds
clc
and
dec
mov
call
das
ret
xchg
pusha
sub
jmp
das
jnp
mov
xor
inc
loop
insl
dec
pushf
test
or
into
and
addr16
sbb
add
rcl
dec
pop
sub
xchg
daa
bound
and
cmp
lods
jnp
je
fmull
mov
push
out
in
pop
add
pop
addr16
sbb
pop
mov
not
mov
jmp
push
fmuls
dec
xchg
or
and
push
fsub
pushf
mov
aam
enter
lods
or
clc
fistps
cmc
or
out
and
dec
test
jp
test
lods
or
push
inc
cli
sbb
loope
and
adc
sub
outsl
cld
sub
insl
push
jmp
ret
leave
pop
pop
add
pop
or
and
in
sti
and
js
gs
pushf
jno
xor
add
jmp
pusha
mov
sahf
or
add
pop
or
adc
fimuls
sub
leave
cwtl
mov
dec
in
add
or
paddb
sbbl
sbb
jge
ret
or
leave
rcrb
loope
sub
xchg
sub
and
mov
loope
xor
filds
dec
rcll
test
inc
loope
pop
dec
inc
mov
add
mov
push
fdivrs
fldenv
je
sbb
aaa
es
ljmp
adc
jo
add
sub
or
sbb
mov
push
out
xor
rcll
and
xchg
ret
imul
dec
push
xchg
push
aad
test
mov
xchg
xor
pop
mov
sub
orb
or
inc
mov
or
insb
pop
mov
dec
xor
rcrl
inc
pop
push
adc
xor
mov
aaa
pop
lea
leave
sbb
sub
xorl
test
adc
adc
gs
shr
dec
mov
pop
xchg
inc
xchg
pop
jmp
sub
ficoml
mov
loop
cltd
idivl
adcb
mov
cli
sub
pop
add
add
lods
sahf
daa
sbb
jo
lods
xor
or
mov
dec
xchg
jmp
inc
ret
jmp
mov
sbb
mov
imul
outsl
cli
int3
mov
pop
xor
outsl
leave
cs
sub
fadd
xor
jbe
xchg
xchg
adc
dec
insl
or
sysret
jge
rcll
notl
daa
mov
or
add
loopne
add
insl
and
data16
pop
dec
push
push
mov
adc
jecxz
loope
pop
insl
and
fdivrs
popa
and
insl
or
dec
loopne
dec
mov
inc
inc
jno
adcl
in
jbe
dec
jno
ret
pop
mov
adc
mov
mov
add
outsb
loope
inc
js
aas
jb
test
push
dec
movsb
mov
insb
sub
or
dec
pop
lds
mov
push
mov
dec
jl
add
xchg
xlat
sahf
add
dec
or
movb
daa
cmp
mov
adc
sub
fcoms
add
or
sub
jge
imul
xchg
xchg
xor
push
push
insl
or
and
jp
xchg
jbe
mov
repnz
xchg
jnp
mov
xchg
xchg
popf
pop
add
and
cli
in
push
hlt
scas
lods
adc
add
or
jge
xor
mov
out
stos
negl
adc
aas
adc
cmp
cmp
sbb
loop
fsubl
leave
xchg
push
out
push
mov
mov
or
jl
test
popa
xchg
jle
lock
fistl
and
inc
xchg
pcmpgtb
lret
cmp
ss
movsl
xchg
fiadds
mov
or
imul
mov
movsb
cli
lds
push
sahf
mov
fmuls
mov
fldenv
cs
mov
pop
mov
cs
pop
dec
imul
jo
arpl
push
pop
dec
and
std
cwtl
sti
mov
shll
shrb
cmpsl
mov
test
dec
mov
loop
out
iret
xor
inc
push
insb
pop
nop
mov
adc
movb
imul
test
cmpsl
mov
rcll
adc
or
mov
sub
xor
cmp
mov
dec
test
loopne
jo
or
ret
pop
jo
sbb
sbb
mull
and
or
das
sti
pop
rorl
mov
adc
jge
jae
pop
addl
and
add
cwtl
shll
and
mov
push
add
or
popa
push
or
push
push
sbb
xor
rcll
dec
add
inc
adc
jae
dec
dec
rclb
daa
shl
cmpsb
sbb
pushf
pop
or
inc
lea
mov
adc
push
xchg
sub
inc
pop
lods
or
mov
mov
push
inc
call
cmp
push
jns
jno
dec
mov
jmp
push
add
push
adc
fld
add
or
aad
adc
subl
addr16
pushf
xlat
aad
push
dec
and
aam
in
pop
shll
sbb
add
add
jmp
xor
and
or
push
or
jno
imul
cmpsb
add
add
dec
sub
mov
loope
pop
subl
adc
je
inc
gs
dec
adc
pop
pop
and
inc
push
xor
aas
inc
mov
loope
aam
int3
cmova
mov
lret
or
mov
and
mov
decb
loop
jne
pusha
and
pop
pop
lds
xor
or
stos
arpl
xor
add
pop
ja
sub
ret
inc
xor
inc
xor
push
enter
mov
inc
aaa
jbe,pt
sbb
xor
int3
cmp
addr16
pushf
shlb
sbb
pop
int
shrb
fdiv
or
enter
bound
gs
loopne
sub
jle
mov
lock
repz
mov
xor
movsb
arpl
xchg
dec
sbb
xor
inc
stc
mov
mov
sub
and
iret
aaa
fwait
inc
sub
out
add
addl
pop
mov
out
xchg
dec
sti
push
pop
xor
test
subb
xor
test
jecxz
pop
mov
pop
stc
movsl
xlat
data16
push
gs
xchg
fiadds
jae
pop
outsb
or
iret
mov
adc
mov
addl
adc
xor
scas
js
inc
or
insl
jg
test
push
ja
xor
xor
jae
or
dec
add
movsl
lret
sub
cmpsb
dec
pop
or
mov
call
or
inc
mov
sub
push
mov
inc
dec
pop
in
or
les
inc
lods
xchg
dec
lea
push
addr16
rol
xchg
aas
dec
xor
pop
dec
ja
sar
push
mov
jmp
lcall
xor
mov
adc
test
sub
mov
fcmovb
dec
movsb
mov
mov
dec
popf
add
cmp
stos
xchg
test
pop
popf
icebp
xchg
arpl
mov
int3
sub
arpl
lods
popa
test
sbb
mov
in
leave
add
nop
shlb
and
fwait
push
sbb
stos
test
scas
imul
loope
imulb
insl
lods
xchg
sub
inc
imul
cltd
gs
insl
and
sarb
inc
cs
dec
imul
popf
lahf
mov
int
loopne
xchg
or
jle
add
in
xor
mov
mov
cmp
dec
adc
mov
and
sbb
or
dec
mov
add
cmc
push
dec
call
loopne
mov
sub
mov
scas
dec
out
sub
push
in
es
dec
ja
shlb
dec
adc
add
popa
dec
and
xchg
jmp
cwtl
loopne
mov
in
xchg
in
ud2
dec
setno
xor
rorl
roll
out
fbstp
pop
imul
adc
or
jb
and
enter
outsl
mov
out
mov
aam
mov
mov
or
xor
jns
dec
dec
mov
faddl
jp
movsl
or
mov
add
lock
cltd
orl
imul
jg
gs
sub
dec
stos
or
cmp
call
mov
xor
dec
mov
or
mov
sbb
inc
push
jo
rorl
cs
imul
mov
out
pop
adcl
mov
cli
dec
add
add
xchg
lods
outsl
add
add
xor
push
test
jle
and
pop
jecxz
mov
orl
jno
cmpsl
cmc
imul
cmp
mov
in
push
fcmovu
mov
add
lods
mov
cld
pop
clc
xchg
mov
loop
jb
sbb
jne
mov
dec
mov
iret
repnz
hlt
rcrl
xchg
sub
adc
daa
jno
repz
pop
xor
mov
cwtl
outsl
mov
shl
add
xchg
or
sub
xor
ret
inc
add
and
enter
jnp
jns
aad
sub
and
daa
dec
imul
clc
add
popa
fs
push
bound
xor
inc
or
jae
nop
mov
push
mov
jo
dec
test
je
dec
outsl
fidivs
xchg
inc
add
frstor
mov
mov
sub
inc
loopne
fdivrl
cltd
dec
mov
mov
lods
push
sarl
sbb
add
pop
loope
insl
cmp
adc
movsl
xchg
mov
adc
sarb
mulps
mov
cmp
roll
fcomip
push
mov
sub
and
dec
push
jae
xchg
out
and
fisubrl
push
inc
jns
xlat
sub
add
mov
xor
mov
pop
xchg
inc
pop
xchg
add
and
ret
dec
jmp
mov
das
pop
push
pusha
jmp
rcll
and
test
inc
push
not
cmp
bound
insl
inc
rcll
ljmp
aad
inc
sub
mov
hlt
orl
aam
push
sbb
dec
add
add
cli
push
sbb
movsl
cmp
xlat
push
push
and
aas
ficoms
ljmp
fcmove
push
test
ret
ror
pand
into
add
repz
sub
dec
shlb
popf
pusha
sbb
add
xchg
mov
movsl
push
test
mov
mov
or
mov
icebp
pushf
ficompl
xor
sbb
jno
add
pushf
bound
mov
xchg
out
inc
loope
lcall
lds
scas
call
cmpsb
adc
cmp
test
popa
daa
int
nop
push
das
dec
in
jmp
sbb
and
das
mov
ret
cmp
leave
repnz
test
inc
push
push
ret
sbb
cmp
dec
out
adc
add
pop
add
shlb
dec
fwait
mov
arpl
pop
mov
fwait
out
insb
fsubl
loopne
pop
dec
dec
pusha
sub
or
stc
dec
cs
xlat
xor
fists
mov
sbb
imul
scas
rcr
gs
pusha
stos
cmp
je
ss
and
andl
mov
add
mov
nop
call
sbb
inc
or
cmc
ret
fldcw
out
mov
jno
lods
repz
inc
loop
push
aaa
pushf
mov
outsl
inc
ret
inc
or
or
mov
xor
cwtl
push
lds
jl
dec
js
sub
rclb
add
mov
jno
shr
add
jno
cltd
jae
scas
lds
call
pop
pop
ret
cwtl
xchg
adc
test
arpl
imul
add
xor
dec
or
bound
mov
in
andl
xor
adc
adc
cmp
fsubrl
xor
sbb
pop
xchg
cmp
and
mov
frstor
clc
pusha
push
or
mov
cmp
push
insl
cmp
mov
sbb
and
aam
bound
and
scas
jg
pop
movsl
sbb
popw
dec
arpl
mov
mov
lods
sbb
xchg
imul
mov
xchg
dec
fistps
xchg
dec
stos
mov
dec
mov
andb
pop
scas
jb
add
xchg
shr
call
dec
sub
movsb
xor
fldl
nop
cmc
jno
insl
or
scas
int3
mov
enter
adc
mov
push
add
cltd
mov
mov
xchg
repz
pop
xchg
scas
dec
pop
std
sbb
enter
jnp
xor
lods
mov
sbb
xchg
es
xchg
xorb
xchg
push
pop
shl
jmp
mov
add
push
pop
xchg
stos
and
pushl
add
adc
test
sub
pop
das
adc
rorl
lds
in
xchg
lret
in
dec
mov
xchg
shl
adc
pushf
dec
sbb
jmp
mov
fcompl
sub
clc
adc
lock
mov
push
shll
arpl
insb
pusha
test
mov
mov
or
lea
dec
stos
and
or
mov
and
jo
pushf
jnp
mov
pusha
xor
mov
ljmp
mov
xor
inc
addr16
xorb
push
mov
gs
bound
cmp
cs
jns
sub
inc
cmp
in
xor
daa
cmpsl
sub
sbb
pop
das
add
mov
push
int
call
andl
xchg
icebp
or
enter
or
jmp
push
and
mov
xchg
jge
test
xor
sub
addb
cmp
xchg
xchg
jmp
in
inc
nop
mov
inc
add
dec
adc
mov
jg
inc
add
xor
data16
ss
paddsb
pop
iret
adc
mov
sbb
popa
xchg
pop
push
jo
pop
daa
repz
out
nop
mov
push
xor
xchg
jecxz
ljmp
fistl
loope
cs
mov
pop
pusha
in
test
loope
popf
je
lods
mov
pop
push
push
stos
adc
jecxz
mov
rolb
or
jb
outsb
xchg
jbe
mov
and
push
push
and
adc
imul
je
inc
ret
xchg
pop
cwtl
add
iret
mov
push
and
test
rol
dec
pop
jo
mov
inc
sub
add
xchg
movsl
pop
dec
pop
out
mov
inc
pop
mov
rcr
sbb
mov
xchg
lods
test
mov
dec
or
xchg
xchg
dec
mov
loopne
pop
lock
mov
push
test
jl
and
xchg
sti
xor
sbb
inc
jge
jge
jmp
mov
loope
and
mov
dec
lea
cmp
ljmp
push
out
loope
ljmp
or
icebp
out
insl
nop
sbb
test
mov
jl
fistl
in
dec
cmp
mov
fwait
xor
fs
adc
xor
rep
das
dec
outsl
daa
jne
shl
out
dec
lahf
push
adc
aam
inc
mov
sbb
popa
inc
cmc
add
sahf
add
or
add
inc
mov
adc
push
fisttpl
popf
dec
push
xor
adc
adc
out
fwait
movsl
push
in
pop
jp
rorl
cmp
in
in
sbb
ret
icebp
mov
repnz
add
js
pop
sbb
test
mov
jmp
sub
mov
cltd
int3
fwait
les
mov
xchg
xor
ja
push
fsubs
mov
mov
movsl
add
adc
outsl
loop
mov
pop
pop
nop
add
pop
push
pop
inc
push
lock
sbb
xor
cmp
add
mov
roll
dec
dec
adc
pusha
mov
imul
rorl
add
loopne
divb
xchg
incb
dec
push
enter
pop
sahf
shlb
inc
mov
pop
jg
push
add
adc
add
or
sarb
test
aaa
call
jl
rcrb
rorl
lods
aaa
jl
decl
push
add
rorl
dec
subb
or
adc
or
or
add
inc
fwait
pop
iret
ret
outsb
lods
lods
js
dec
pop
push
gs
adc
out
add
test
sub
dec
mov
xor
xchg
roll
dec
test
dec
sbb
and
mov
ret
cmpsb
xchg
lock
rcrl
adc
adc
xorb
xchg
xlat
insl
mov
mov
lea
ret
inc
sub
imul
ds
adc
outsb
xchg
lods
jo
cmp
sbb
mov
lods
and
sub
xor
loop
ret
or
in
add
xlat
stc
and
shlb
negb
mov
aad
icebp
inc
nop
inc
push
jle
push
jecxz
mov
cmp
pusha
xorl
sbb
loopne
subl
test
dec
adc
lret
or
pop
push
inc
gs
inc
push
test
bound
xlat
mov
outsb
pop
lods
ret
stc
cmp
inc
jnp
fld
pop
test
or
add
addr16
pop
ret
jg
fcompl
cltd
sbbl
and
or
rol
jo
jo
or
mov
mov
sub
out
dec
mov
icebp
dec
sub
cmp
psrlw
xchg
test
mov
sbb
xchg
inc
sub
in
test
loop
or
lock
aaa
mov
in
addb
sbb
lock
or
dec
cmc
mov
sbb
bound
sub
sub
andl
or
leave
fdivl
fiaddl
push
or
pop
movd
add
popf
push
out
in
push
adc
dec
xor
push
lods
inc
pop
sub
loop
imul
lea
xor
movsb
loope
sub
imul
add
sub
fs
lods
lcall
shll
xor
jne
mov
call
outsb
push
mov
mov
sub
and
cmpsl
call
outsl
inc
sti
clc
xchg
mov
xchg
jnp
cmp
add
inc
gs
mov
or
and
jno
mov
inc
or
xor
xor
push
fadds
stos
insb
add
stos
push
in
or
sbb
xchg
arpl
and
stos
add
aaa
mov
adc
push
movsl
cwtl
je
loope
cmp
push
jle
xchg
fdivrp
push
or
sahf
push
aas
ljmp
cli
push
insl
pushf
xor
popa
cmp
sbb
jb
pop
arpl
mov
add
xor
jg
xchg
popa
fisubs
rcl
sbb
test
sub
push
push
je
add
lret
in
push
fdivs
sub
sub
sbb
mov
arpl
movsb
pop
mov
pop
add
xchg
adc
addl
add
xchg
sbb
shll
pop
pusha
cmp
add
call
sub
cmp
sub
or
mov
dec
sub
je
xlat
aas
push
inc
cmp
sub
mov
lcall
pop
stc
push
sub
lcall
xchg
mov
add
dec
cmp
out
xchg
es
dec
scas
pop
aaa
lods
xchg
or
fwait
iret
or
pop
ljmp
lcall
lcall
inc
push
or
out
adc
mov
cs
mov
push
fimull
aas
pop
cmc
bound
push
sbb
push
sbb
insl
mov
pop
mov
add
mov
les
add
mov
adc
push
cld
ss
fbld
sbb
repz
mov
lret
cmp
mov
movsb
das
xor
and
inc
xchg
sbb
insl
aam
call
ret
mov
jne
push
test
push
or
pop
add
pop
pop
cwtl
hlt
cs
or
adc
mov
cwtl
sub
enter
inc
cmpl
fwait
icebp
addr16
mov
push
sbb
push
or
fcmove
ja
mov
cmp
subl
lret
enter
inc
mov
dec
dec
dec
sbb
or
or
int
or
add
dec
jmp
out
push
jno
cmp
push
xor
add
stc
popf
fwait
add
mov
xchg
stos
mov
push
pop
popf
push
add
outsb
es
iret
jne
inc
mov
and
xlat
fs
add
pop
das
filds
scas
lea
stos
outsb
test
pop
divb
add
dec
mov
or
popa
fisubs
dec
ja,pn
mov
adc
mov
xchg
mov
loope
mov
or
sbb
mov
ljmp
adc
push
rcl
arpl
lock
xor
dec
dec
insb
test
cmp
add
add
js
xchg
loop
repnz
and
xchg
jge
push
adc
push
inc
clc
sub
push
adc
push
js
xchg
icebp
or
scas
addl
in
push
testl
mov
ficoms
adc
rolb
dec
adc
xor
push
les
and
mov
das
sub
xchg
pop
test
pop
cmp
out
shrl
xor
daa
into
sub
jge
xchg
or
fwait
aad
push
pop
movsl
cmp
inc
add
lea
fildl
lods
jecxz
xor
pop
jge
mov
lahf
arpl
inc
in
sbb
sub
jno
shl
loope
add
cmpsl
pop
mov
xchg
jo
lahf
sbb
pusha
inc
inc
arpl
dec
and
cmpsl
jne
clc
jne
mov
idivl
rcrl
push
cmp
dec
or
push
lea
outsb
mov
fadds
mov
repz
ds
sub
dec
ret
dec
iret
add
mov
mov
xor
mov
in
and
ret
outsb
cmp
jecxz
sbb
pop
mov
xchg
push
sbb
insb
push
pop
sbb
add
adc
sub
jmp
adc
xor
dec
lret
pushf
lods
inc
gs
inc
loope
add
cli
push
push
loope
fwait
call
sub
popa
mov
add
add
out
mov
daa
pop
dec
push
xor
hlt
hlt
add
pop
push
pop
push
popa
sbb
push
popa
push
sub
leave
aas
jg
je
pop
cwtl
pop
mov
sub
xchg
popf
jno
xchg
xchg
push
push
cmpsl
frstor
lea
cmpsl
cmp
xor
cmpsl
and
inc
add
mov
stos
xchg
outsl
and
jns
or
xlat
xchg
sbb
mov
push
popa
inc
test
add
mov
xchg
xor
add
adc
xchg
jo
cwtl
pop
cmp
shlb
mov
push
add
aam
sub
shll
nop
ret
dec
sub
pop
mov
pusha
push
scas
cmp
dec
fnsave
mov
jp
sbb
adc
sarl
je
mov
push
stos
push
mov
mov
add
aas
lock
pop
fwait
aaa
icebp
test
push
jae
adc
aas
cmp
adc
dec
dec
fldcw
add
jecxz
fsubrs
adc
mov
jnp
jmp
push
cmc
test
pop
xchg
or
rclb
push
pop
mov
xchg
sub
ret
std
fwait
enter
fwait
pop
out
adc
repz
mov
pop
push
je
and
jl
in
sub
mov
loope
shlb
pop
push
add
out
lcall
js
mov
lock
sbb
sub
inc
pop
cmc
cmc
jno
add
pop
decl
in
popa
lds
sub
fcomip
lods
repz
and
pop
imul
push
loope
cli
xor
lea
out
lahf
clc
sbb
test
test
inc
clc
rolb
or
ret
adc
mov
rol
imul
dec
sub
add
das
mov
cltd
repz
push
out
mov
fs
sbb
cmp
push
dec
pusha
movsl
aas
mov
test
or
lret
cmp
mov
dec
pop
inc
sub
pop
insl
push
fistl
mov
fwait
rcrl
xor
push
and
rolb
ret
pop
and
bound
fdivl
lock
daa
dec
je
jmp
push
out
sbb
cmp
insb
inc
adc
jns
pop
mov
movsl
movsl
inc
adc
rcl
je
loope
movsl
mov
xchg
repz
pop
push
pop
inc
sbb
mov
jecxz
pop
in
inc
fistpl
push
adc
add
dec
psrlw
cmp
push
sbb
pop
pop
cs
jno
dec
loop
xor
cld
ss
jne
mov
lahf
mov
mov
aas
loopne
or
lock
aad
sub
in
daa
push
inc
sbb
shlb
sbb
add
inc
mov
adc
aaa
sub
xor
dec
pop
stc
cmp
push
mov
inc
inc
test
dec
roll
pop
mov
sbb
mov
xchg
ljmp
sbb
add
and
sub
cltd
or
lock
xor
lea
mov
cmp
pop
icebp
adc
jmp
cmpsb
or
xlat
mov
push
dec
inc
les
cmp
push
mov
aaa
mov
cwtl
iret
ret
daa
xor
jno
xor
mov
addr16
inc
and
fldl
adc
push
sti
lock
fidivl
add
lock
push
mov
inc
stc
xchg
jo
leave
add
shrb
jne
mov
aas
mov
add
add
pop
movsl
xor
test
adc
dec
xchg
ja
xor
pop
jne
mov
adcl
outsb
xchg
adcl
loopne
ficompl
pop
mov
jae
sbb
inc
dec
add
mov
cmp
pusha
jl
mov
xor
dec
or
push
std
jg
pop
lcall
push
mov
mov
sbb
add
pushf
xorb
in
pop
or
shl
dec
sti
inc
push
push
mov
das
pop
iret
inc
dec
orb
lods
test
cs
loopne
imul
xor
adcb
fnstenv
or
xor
aas
and
cmp
pop
fwait
sub
jae
or
add
sahf
and
add
push
mov
mov
mov
xchg
and
bound
jns
xchg
clc
adcb
inc
jmp
shr
cmp
pop
lods
add
sbb
mov
sub
jae
lahf
add
mov
call
lds
popa
add
cli
imul
in
test
sub
popa
mov
fs
and
adc
or
push
jne
pop
rorb
mov
lods
mull
sbb
mov
pop
mov
jns
int3
adc
xlat
mov
lds
idivb
imul
aam
mov
jb
add
sbb
push
rolb
pusha
push
mov
pushf
cmpsl
inc
in
push
inc
mov
sahf
and
inc
in
dec
dec
dec
scas
pop
and
bound
imul
push
aam
inc
pop
jmp
and
mov
inc
loop
lea
inc
sbb
shlb
out
bound
imul
bound
mov
bound
loope
clc
faddl
pop
arpl
cwtl
loop
aaa
push
mov
push
pop
iret
push
jmp
pusha
sub
pop
and
or
sub
mov
or
pop
ret
nop
push
scas
jo
shlb
adc
xchg
pop
ret
xor
adc
dec
shlb
out
loope
push
push
addb
mov
pop
dec
pop
and
mov
xchg
and
dec
mov
rorl
jae
movsb
xchg
arpl
loopne
pop
add
sub
push
cmp
ja
dec
jecxz
or
testl
push
pop
and
fldl
mov
adc
inc
push
push
inc
adc
sub
dec
push
mov
push
imul
push
pop
adc
pushf
sub
ret
mov
inc
mov
cmp
mov
adc
xor
mov
add
orl
aad
xchg
jae
inc
movsl
xchg
lds
ret
cmpsb
rolb
xor
fsub
sbb
adc
fwait
inc
pop
mov
push
aas
lds
mov
sbb
adc
rol
push
mov
xor
xorb
or
xchg
mov
lods
push
popa
js
les
out
and
loopne
lods
test
pop
in
push
movsb
mov
outsb
mov
daa
xchg
mov
xchg
stos
lods
addr16
xor
fmuls
lea
xor
sub
shrb
inc
ficoms
rcll
dec
call
fsubrs
out
out
and
xor
add
or
mov
mov
inc
inc
mov
inc
mov
bound
cmovg
sbb
cmpsl
mov
adc
mov
add
out
inc
dec
loopne
sub
stos
mov
jmp
ret
popf
out
pop
les
adc
jp
pop
pop
and
jp
xorl
leave
fst
or
jno
sahf
fdivs
imul
sub
mov
xorb
rcll
pop
xchg
push
sti
arpl
mov
outsl
xchg
jns
imul
xchg
clc
sti
shlb
push
jae
dec
xlat
and
int3
sarb
jmp
sub
inc
incl
test
sub
insl
sub
add
cmpsl
lahf
pop
sbb
pop
jecxz
addb
arpl
sub
inc
cmc
icebp
sbb
fidivrs
fs
push
in
pusha
xchg
popa
cmc
pop
fisubl
inc
sub
nop
movl
fwait
push
outsl
adc
cmp
mov
lods
sbb
stos
fidivl
fwait
dec
pusha
movsl
call
cmpsl
xor
clc
inc
sub
pop
inc
shll
or
call
inc
insb
xorb
push
dec
jo
in
ret
mov
les
adc
and
or
inc
mov
rclb
xchg
sub
je
adc
push
mov
cs
dec
leave
add
add
ljmp
rclb
or
sbb
mov
or
out
jg
aam
cmc
imul
inc
add
js
imul
adc
cmp
pushf
pop
pusha
sub
jbe
add
pop
adc
add
fstpt
packsswb
mov
rolb
xor
cmpsl
adc
mov
faddl
jo
or
sub
aam
sub
xchg
jecxz
das
xchg
or
lea
xchg
xchg
fwait
js
das
stc
rclb
rcl
pop
push
hlt
hlt
pop
sub
sub
xchg
inc
arpl
sub
or
ss
and
dec
pop
mov
jne
das
ljmp
out
cmp
jnp
cmp
lock
lds
and
push
movsb
arpl
and
mov
sub
xchg
cmp
mov
cmovb
test
out
pop
sbb
stc
xchg
faddp
push
xor
imul
arpl
dec
or
mov
repnz
push
ds
imul
daa
adc
ds
imul
mov
sub
scas
movsl
push
dec
bound
aad
add
mov
incl
popa
push
icebp
adc
jnp
imulb
or
or
xlat
add
jbe
mov
lea
and
xchg
jge
pop
in
int3
adcb
jae
sub
in
add
fsubr
pop
test
dec
ret
jg
dec
sbb
addr16
xor
inc
mov
nop
adc
xchg
xor
clc
loope
and
roll
sbb
or
jno
or
sbb
rol
xlat
pop
loope
cwtl
outsb
dec
or
mov
sahf
imul
sub
fcoms
imul
rclb
mov
xlat
jb
mov
aad
je
popf
jl
xchg
popf
ret
cltd
mov
rcrb
jg
dec
push
call
mov
inc
arpl
les
lock
stos
mov
or
pop
clc
dec
sbb
or
push
sahf
aas
cmp
ret
sbb
sub
dec
push
loope
outsl
mov
mov
sub
stos
inc
lock
test
or
pop
or
jnp
jb
test
notb
mov
add
movsb
mov
mov
and
xor
dec
insb
fnstenv
mov
and
movsb
shlb
pop
adc
sbb
mov
mov
push
cli
inc
outsb
jl
mov
lds
dec
and
mov
rolb
push
into
adc
test
sub
divl
jmp
sub
push
push
js
pop
add
scas
xchg
push
xor
jb
mov
cmc
enter
dec
test
xor
push
dec
shlb
add
sub
sub
lods
test
jns
xor
add
mov
and
mov
push
mov
or
dec
loope
push
xchg
sbb
xchg
jbe
movb
xor
or
dec
fwait
push
sbb
adc
lods
pushf
sbb
add
xchg
or
fistps
rcrl
pop
cmpl
push
lods
and
lret
test
push
arpl
add
orb
push
mov
sbb
dec
mov
fsubl
aaa
push
or
sub
fcmovne
mov
adc
pop
or
mov
jecxz
loope
cmp
sub
xchg
pop
lock
sti
scas
call
pop
jae
ljmp
mov
pusha
ret
ljmp
mov
das
xchg
cmp
cltd
cmp
das
add
or
adc
xor
pop
inc
mov
js
icebp
sub
dec
xchg
xor
mov
push
mov
push
test
enter
sbb
ret
xchg
sbb
outsl
ss
push
xor
repz
or
test
aaa
out
ffree
cmpsl
or
stc
inc
mov
pop
inc
dec
out
or
mov
ret
adc
adc
adc
mov
rcll
sbb
lds
sarb
mov
dec
iret
lods
fidivl
jb
xchg
mov
pop
dec
rorb
push
dec
insl
sub
mov
inc
data16
adc
mov
scas
push
dec
jge
lods
femms
mov
jbe
mov
cmpsb
je
xchg
sbb
mov
lahf
mov
movsb
jne
xchg
cmp
and
add
repz
sbb
mov
inc
adc
aaa
cs
mov
cltd
adc
jo
lods
loopne
icebp
sbb
or
adc
pop
clc
aam
sti
faddl
ret
mov
dec
subl
call
insl
in
shlb
inc
fmull
add
push
cmp
mov
pop
lea
add
cmc
push
push
lds
stos
mov
pop
pusha
sub
dec
lea
movsl
pop
sbb
mov
jns,pt
xorl
out
cli
icebp
mov
push
sbb
outsb
pusha
lds
push
lea
aad
pop
lds
inc
fsubl
int
adc
mov
incb
sbb
repz
and
inc
fwait
int
test
sbb
jmp
push
xchg
inc
pushf
into
sub
inc
mov
jbe
imul
call
repnz
xor
rcrb
inc
fcomps
mov
or
lcall
xchg
dec
sub
test
cltd
std
xor
arpl
mov
outsl
mov
and
aad
push
xlat
lret
pop
xchg
std
push
and
cmp
xchg
jle
mov
or
fnstcw
mov
sti
rolb
or
test
push
out
fadds
pop
lock
sbb
ja
ja
pop
mov
dec
dec
insl
dec
xchg
clc
xchg
adc
sbb
pushf
rclb
sbb
adc
sahf
stos
lods
add
or
inc
jp
xor
mov
ss
loopne
ffree
ret
ficoml
jle
lods
das
or
jge
mov
lret
ja
lcall
fsubr
incl
in
jae
fiadds
xchg
push
sub
cmpsb
movb
mov
mov
icebp
mov
sahf
lea
cmp
dec
xor
adc
into
out
mov
sbb
pushf
outsb
or
xchg
pop
rorl
add
sbb
xor
std
xchg
sbb
dec
lahf
cmp
xchg
add
adc
and
mov
sub
pop
cmp
push
shrl
mov
aam
lcall
add
je
sub
or
dec
out
loopne
or
dec
inc
shrl
cmpsb
and
pushf
push
out
movl
lcall
or
loopne
mov
mov
pop
je
in
xchg
add
inc
xchg
mov
cmpl
jbe
fadd
sbb
pop
scas
mov
add
jmp
mov
mov
add
loopne
sbb
xchg
jb
into
mov
pop
lcall
xor
inc
pusha
pop
loope
mov
lcall
sbb
sub
xor
sbb
and
mov
push
clc
popa
inc
mov
fs
pop
xor
add
adc
scas
test
ret
sti
es
push
xchg
push
jbe
sbb
sbb
sbb
fcomps
ss
enter
insb
lods
sbb
fbstp
and
cmp
insb
mov
xor
in
add
andl
xchg
and
popf
and
mov
pop
insl
add
das
sbb
xchg
push
outsl
jo
das
xor
pop
sbb
pop
cltd
pop
sbb
adc
fbld
scas
or
jecxz
js
add
or
imul
adc
inc
jge
sbb
lods
add
adc
les
mov
test
sbb
inc
and
xchg
cmp
orl
xchg
mov
push
movsl
xor
mov
cmp
ficoml
xchg
out
add
lock
inc
mov
daa
pop
inc
movsb
dec
cmp
xor
frstor
and
jnp
cmc
pop
sti
or
add
popa
cltd
sbb
push
mov
aad
cltd
shlb
dec
pusha
mov
add
or
inc
pusha
mov
inc
or
shlb
adc
sbb
pusha
fisttpll
mov
add
fwait
sub
add
iret
arpl
rorb
inc
aaa
adc
dec
popa
stos
repz
push
pusha
testl
pop
pop
mov
pushf
mov
popa
push
xlat
dec
inc
rclb
and
dec
stos
jge
dec
sub
xchg
adc
sahf
nop
pushf
inc
sub
aaa
sub
adc
mov
jg
rcl
add
mov
test
cld
dec
outsl
push
lods
imull
shrl
stc
pusha
inc
outsb
adc
fnstenv
xor
das
adc
das
mov
sub
pop
add
pushf
dec
inc
loop
inc
rclb
dec
imul
pop
outsl
sub
sbb
aad
sbb
pop
jmp
mov
test
jae
push
jbe
add
pop
pop
and
dec
xchg
pop
addl
mov
push
pop
and
jne
mov
fdivrs
leave
push
lret
or
movb
xor
loopne
incl
jl
dec
add
adc
jbe
dec
jnp
rolb
enter
mov
mov
ret
xor
pop
aad
imulb
or
fsub
and
dec
scas
rorl
popa
add
sub
push
mov
lcall
mov
rcr
loopne
xor
fcomp
insb
or
mov
rclb
inc
pop
cmp
jb
xor
ja
and
jae
mov
fadds
add
sbb
sub
sbb
aam
in
mov
inc
add
add
ret
lret
sbb
push
add
jmp
pusha
add
ret
xchg
aad
rcrl
xchg
in
sub
rcrb
or
push
es
jle
adc
mov
add
int
test
sahf
sub
dec
xchg
fcomps
adc
cmp
adc
push
stos
inc
arpl
es
mov
or
cmp
lods
shrl
pop
out
iret
mov
adc
jge
add
pop
xor
in
imul
add
mov
aas
inc
call
adc
pop
out
mov
mov
push
inc
cmpsb
inc
dec
jecxz
daa
rclb
pushf
push
jae
lods
xlat
sbb
arpl
loop
ret
sbb
push
nop
fcmovnbe
sub
arpl
ret
jne
iret
and
sbb
ja
sub
outsl
push
pop
sbb
loope
into
js
loopne
rcl
inc
lret
leave
sbb
jge
jo
ljmp
movsl
test
clc
fistpl
jne
adc
pusha
pushf
fadd
aam
stos
fisubrs
push
xchg
or
xchg
push
cs
lods
add
inc
sub
mov
sub
lods
incl
pop
jge
xor
adc
cmp
mov
mov
cmp
jg
xchg
sbb
add
jmp
pop
or
sbb
push
push
pop
sub
lods
inc
or
adc
mov
cmc
sub
pop
push
adc
xor
fsub
loope
sbb
push
leave
or
fadds
popa
push
dec
xchg
rcrl
xor
les
lds
sahf
dec
incl
out
icebp
xchg
sti
add
pop
xchg
jne
pop
jbe
les
pop
popa
adc
and
add
or
call
das
inc
sbb
xchg
xor
aad
sti
cmpsb
nop
xor
pop
loopne
xchg
icebp
mov
ja
jmp
gs
cmp
mov
dec
out
adc
mov
inc
or
outsb
dec
in
cs
rcrb
scas
dec
sbb
movl
inc
push
jo
sbb
mov
pop
into
and
idivl
xor
aad
repnz
pop
bound
and
jecxz
pop
sbb
push
lock
movups
mov
inc
clc
mov
push
jp
mov
cmp
imul
push
and
xor
aad
pop
fmul
dec
rcrb
push
insb
cld
sbb
inc
mov
or
or
pop
sub
test
in
mov
lock
mov
dec
fdivrs
mov
test
and
cltd
pushf
add
ljmp
imul
daa
adc
mov
cmp
ret
mov
stos
cld
mov
add
imul
and
adc
add
addr16
add
sti
insb
rorb
mov
dec
mov
cs
xchg
js
adc
xchg
das
jno
hlt
xchg
mov
bound
fwait
cmp
mov
fists
mov
push
jg
adc
pop
cmpsb
cltd
push
neg
pop
mov
cwtl
mov
call
cwtl
mov
add
js
sub
lock
mov
jne
and
ja
movsb
adc
push
mov
into
jg
loopne
mov
mov
lret
sub
outsl
adc
or
ds
adc
scas
inc
enter
xchg
hlt
test
xchg
xlat
or
pop
mov
mov
test
imul
add
xchg
mov
cld
lcall
mov
prefetch
dec
or
dec
dec
fadds
cltd
push
imul
add
lods
scas
jo
mov
xor
frstor
cmp
adc
or
leave
and
fisubs
call
dec
mov
adc
cmp
lods
push
lea
cmpsb
ror
pop
icebp
mov
jb
mov
rol
jno
cmpsb
or
dec
jmp
popf
xor
xor
test
insl
or
mov
or
inc
dec
jmp
out
out
push
xor
scas
sbb
push
popf
push
mov
sbb
or
push
daa
rcrb
pop
daa
ss
shl
int3
imul
fbstp
inc
imul
sbb
inc
sbb
pushf
inc
stos
stc
mov
pop
add
sub
inc
jge
addl
fucomp
pusha
dec
sbb
mov
add
lods
pusha
pusha
roll
xchg
popa
pop
mov
xchg
or
pop
sbb
push
or
push
bound
mov
or
mull
inc
or
rcrl
and
pop
sbb
jno,pt
mov
mov
sub
mov
adc
mov
stc
sbb
sub
or
adc
dec
add
sahf
lods
jne
mov
xor
movb
xor
shrb
add
cmp
icebp
nop
sbb
jmp
ja
inc
lods
add
scas
rorb
pop
stos
push
cmp
shl
aas
xchg
pop
mov
adc
lock
and
clc
add
pop
push
fisttpll
pop
xchg
and
add
pop
cmpsl
addr16
xchg
push
xor
mov
xor
push
outsl
daa
out
or
lret
mov
xor
adc
and
nop
cmp
into
add
enter
mov
adc
dec
pop
daa
dec
inc
xor
adc
sahf
adc
sub
jl
push
jp
mov
mov
pushf
cmp
push
dec
fs
pop
daa
loope
mov
pop
ljmp
mov
les
jno
mov
imul
sub
gs
int
cmp
push
into
xchg
fistpll
hlt
call
adc
sub
jbe
dec
push
inc
xchg
pushf
adc
fnstsw
stos
fs
pop
jp
sbb
xchg
lret
mov
xchg
jne
add
inc
orl
cmp
fs
orl
jo
lcall
lock
addr16
mov
sub
shlb
jae
xor
cmp
stos
jmp
lock
add
and
cld
mov
dec
mov
cs
movsl
mov
xchg
sahf
inc
fcmove
rorb
test
and
push
inc
imul
out
mov
jl
das
outsb
xorl
lahf
pop
sbb
pop
sbb
jne
push
mov
imul
or
or
js
inc
lahf
pop
add
imul
and
mov
popa
inc
jmp
pop
jl
lds
gs
ret
and
pop
repnz
mov
mov
into
outsl
push
pop
xchg
das
sti
sbb
aad
scas
jle
outsb
jnp
loopne
repnz
stos
fstps
data16
lret
test
add
pop
xor
stc
fcomps
rol
gs
xchg
mov
mov
negb
push
sbb
out
ds
aas
push
or
lea
movsl
leave
loop
dec
ret
loope
mov
iret
cmp
adc
inc
test
cmp
pop
and
xor
cmp
add
xor
push
inc
repz
and
xor
sub
lret
pop
test
sbb
fs
xchg
jp
add
dec
aad
add
pop
pop
add
inc
adcl
js
pop
rcr
add
push
inc
mov
imul
in
adc
add
mov
imul
popa
xorl
fidivl
xor
jg
inc
jge
lods
pop
sbb
mov
pop
orl
pop
add
fldl
pushf
jmp
in
mov
push
push
sarb
lods
add
lock
inc
mov
cmp
or
push
sahf
sarb
lea
adc
adc
inc
rolb
pop
and
lock
lea
push
xchg
inc
lret
addb
lss
xchg
or
jmp
lea
popa
xor
sbb
mov
or
pop
pop
xlat
sub
lock
stos
xor
adc
adc
movsl
and
popa
test
mov
adc
adc
xorl
mov
mov
cwtl
pop
sbb
pop
push
mov
dec
fndisi(8087
sub
xchg
loop
mov
inc
or
adc
out
xchg
push
xchg
pop
jge
push
add
push
jg
and
adc
pop
in
add
pop
shr
sbb
nop
cvtpi2ps
inc
fcomip
jno
mov
or
cmc
lock
mov
imul
cmp
rclb
push
nop
mov
and
sar
pop
or
mov
xchg
mov
les
sbb
fsubl
mov
lods
fcmovnbe
cs
test
mov
aam
sbb
addl
or
add
pop
sbb
adc
add
cmp
rol
fwait
adc
jecxz
movsb
outsl
xchg
cmp
add
shll
fsub
dec
xchg
inc
rclb
js
xchg
jmp
mov
stos
pop
ret
mov
mov
rcll
cs
int
sbb
mov
mov
call
sbb
adcb
push
insl
mov
rcll
or
pop
push
ja
pop
mov
hlt
xchg
and
imul
arpl
es
aad
adc
cmpsb
cmpsb
mov
adc
adc
or
push
adc
movsb
mov
sub
rorb
jg
cmp
jae,pt
mov
pop
adc
sbb
xor
popa
ret
cmpsb
add
mov
fcoml
and
es
cli
mov
inc
sbb
jae
pop
popa
adc
xor
loop
add
fwait
adc
cmp
xor
pop
rorb
add
mov
out
or
scas
adc
fwait
lock
leave
subl
and
jno
js
inc
add
and
push
pop
mov
mov
pop
mov
push
cmp
ret
xor
add
lods
out
mov
test
shr
repz
lods
inc
and
cmc
dec
ja
dec
mov
mov
adc
rep
jnp
lods
sahf
jle
aad
in
add
cmp
xchg
xorl
insl
fucomi
xor
addr16
test
add
cmp
fwait
add
inc
and
outsl
movsl
pop
fstl
jp
jnp
inc
mov
imul
pop
jp
sbb
lds
icebp
jno
push
mov
or
or
mov
adc
sahf
cmp
lcall
pop
add
mov
jecxz
and
mov
push
fwait
hlt
addr16
and
and
popa
or
and
add
jge
xchg
imul
push
xchg
cmovp
add
dec
dec
popf
into
dec
push
inc
adc
test
fwait
popf
inc
mov
lods
ret
push
dec
popf
inc
cmp
rorl
mov
shl
sub
outsl
jp
jne
js
shlb
sub
xchg
cmp
ss
popa
cmp
scas
scas
xor
mov
and
cmpb
shlb
leave
xor
push
xor
aad
adc
dec
jnp
jne
mov
sub
std
loop
enter
and
push
pop
and
pop
mov
sbb
stos
xor
sbb
sarb
sub
xchg
out
dec
push
add
out
daa
inc
xor
xor
jnp
adc
adcl
pop
add
dec
jno
pop
lahf
fmuls
dec
jl
dec
shlb
adc
inc
add
xchg
orb
dec
cmp
imul
xor
mov
jae
in
adc
cmpsb
movsl
sarb
adcl
push
ret
mov
rclb
mov
fmull
push
inc
bound
lcall
or
pop
push
ret
push
lods
adc
sbb
lds
cmpsb
icebp
incw
std
cltd
dec
sub
lds
test
pop
push
mov
stos
popf
adc
out
xchg
cltd
mov
and
outsb
addb
push
xor
xchg
cli
in
mov
outsl
sub
arpl
sub
inc
jl
inc
popa
mov
add
popf
in
xor
and
sti
and
or
ss
sub
sahf
add
adc
jmp
sbbb
push
lea
cmp
loope
lcall
fbstp
sbb
add
add
or
fwait
adc
arpl
arpl
nop
cwtl
mov
pop
sti
mov
pop
mov
andb
jecxz
lcall
push
insb
cmp
gs
inc
cs
sbb
scas
push
pusha
xor
xor
jmp
or
mov
daa
rolb
xchg
cli
xchg
loop
inc
or
lret
cs
dec
movsb
xchg
lock
or
mov
push
xchg
outsl
pop
and
mov
sbb
push
add
xorl
push
ljmp
jmp
pop
mov
cs
sti
jnp
jne
arpl
pop
mov
ret
mov
pop
and
dec
imul
mov
xor
xchg
xchg
les
mov
and
push
xor
mov
push
push
cmp
cmp
adc
les
mov
iret
cmp
imul
add
dec
loope
and
mov
xchg
dec
ficoml
push
jnp
xor
xor
mov
sub
pop
mov
subb
adc
add
insb
or
sub
lea
icebp
xor
mov
mov
jno
xor
push
or
ss
mov
nop
and
inc
das
add
jno
xor
push
into
lds
subl
and
mov
pop
ret
pushf
mov
std
aam
mov
jno
bound
mov
pusha
ficoms
adc
sti
cmp
lock
lea
nop
mov
or
pushl
daa
aas
inc
pop
int
jp
xchg
pop
in
jne
mov
jge
mov
mov
xchg
dec
sbb
aam
inc
dec
add
fs
mov
xchg
stos
adc
andl
dec
lahf
imul
inc
notl
jmp
push
test
ret
add
sub
pop
add
call
jae
push
ret
cmpsl
pusha
ret
push
pop
popa
sub
xor
lds
test
jno
mov
popa
pop
push
dec
mov
dec
aaa
ret
imul
sbb
pop
mov
jecxz
lock
in
popf
inc
aad
adc
inc
jno
push
inc
movups
lock
fcomi
lcall
movsl
movsl
shrb
inc
gs
lds
movsb
clc
add
dec
mov
repz
movsl
adcb
push
xchg
dec
imul
mov
add
mov
dec
push
jbe
add
fnstcw
test
push
cltd
inc
and
loopne
pop
add
cli
movsb
repz
fs
or
scas
bound
cltd
movsl
rolb
mov
mov
pop
test
mov
pop
cli
mov
pop
adc
and
pop
test
mov
cmpsb
lret
xor
jae
push
mov
jmp
xor
cmpsl
jg
test
loopne
bound
xchg
mov
shrb
dec
mov
mov
xor
sbb
jge
or
cmp
or
or
jnp
push
fldenv
sub
xor
adc
fwait
push
enter
dec
dec
stc
xor
dec
imul
dec
popa
adc
popa
xor
imul
push
xor
frstor
cmc
es
aam
ret
daa
and
aad
ja
pop
es
mov
xor
sbb
cmove
cmp
cwtl
push
fdivrs
cmpsl
adc
cmp
out
callw
cmp
and
inc
idivb
jmp
cmp
int
push
xorl
ret
incl
shrb
aad
aaa
test
dec
adc
adc
push
sbb
mov
addr16
xchg
movsb
dec
xor
jo
jmp
sbbb
in
and
mov
xor
data16
add
adc
cmp
ljmp
mov
std
es
fiaddl
inc
dec
insb
jno
push
add
inc
cld
xor
mov
push
push
xor
and
and
mov
mov
jmp
in
pop
add
add
out
dec
xchg
jne
sbb
and
rorb
test
mov
xor
xor
rolb
xchg
and
or
add
xchg
or
push
adc
adc
fisubl
xor
sbb
rcll
inc
xchg
push
sub
adc
xor
dec
mov
sub
popa
lods
mov
jg
enter
push
jg
lods
push
aam
mov
test
insb
jns
mov
lods
minps
jcxz
adc
rcrb
out
push
xor
adc
mov
jmp
dec
ja
stos
leave
xchg
addl
mov
es
lahf
add
lcall
sub
mov
test
mov
or
in
xchg
fsubrs
gs
aaa
jmp
xchg
add
mov
cmpsl
arpl
jbe
arpl
mov
add
popf
push
xor
iret
pushf
mov
add
sub
jne
cli
test
add
gs
outsb
sub
lea
stos
mov
mov
out
nop
hlt
xchg
rclb
jmp
aaa
sub
sub
and
cmp
adc
add
sbb
rcrb
or
addb
lods
or
sbb
mov
add
inc
jne
xchg
jge
stc
scas
add
out
sbb
mov
pop
imul
ss
test
ror
and
nop
jo
lea
jmp
add
in
inc
mov
js
inc
lret
in
aas
dec
call
inc
popl
insb
push
xchg
push
aaa
bound
movsb
push
xchg
lods
test
mov
mov
les
cmp
fmuls
mov
pop
jg
call
loop
aaa
dec
cmovnp
cltd
adc
icebp
add
aaa
addl
xchg
hlt
add
pop
push
jmp
sub
jo
pop
cld
cmp
fnstcw
xchg
xchg
icebp
fisubrs
inc
iret
mov
popa
int
xor
fsubrl
sbb
and
xor
out
roll
sbb
insb
int3
imul
into
sbb
fiaddl
vpavgb
and
xor
jno
lods
sti
adc
add
dec
lahf
cltd
pusha
andl
mov
inc
jmp
cmp
dec
jb
push
inc
in
lcall
sbb
ss
pop
lahf
xor
pop
lahf
or
rcl
subl
mov
pop
in
pop
dec
pop
lret
ffree
mov
sbb
dec
mov
jmp
fildl
cmp
jo
inc
scas
jbe
addr16
mov
aam
cmpsl
ret
add
jecxz
testl
jecxz
add
mov
rcrb
jg
ror
inc
mov
lret
inc
pop
mov
in
popf
mov
sbb
push
sbb
push
es
jecxz
stos
leave
or
aam
xor
lret
dec
pop
mov
cltd
pop
jmp
add
ljmp
mov
pop
cmpsl
or
insl
pop
or
lret
sbb
sahf
fs
pop
ficompl
mov
xchg
ret
rcll
jp
dec
mov
cmp
arpl
inc
shrl
bound
sahf
add
push
lds
imul
mov
cmc
cmpl
lds
pop
xchg
aam
jne
jo
mov
mov
or
or
sbb
imul
aaa
and
mov
or
sbb
xchg
ficompl
inc
or
repz
inc
xlat
jg
incb
sub
mov
daa
xor
adc
nop
dec
ret
xor
or
das
pop
in
jg
and
jp
std
test
or
mov
inc
rcrb
add
adc
and
std
adc
call
out
js
xor
xchg
lock
popa
in
scas
sbbb
clc
arpl
test
push
mov
sub
sub
or
int
xor
aad
adc
cmc
dec
stos
cmp
int
jp
dec
shl
notl
xlat
jnp
or
ja
fstpl
andl
sub
pop
push
jno
loope
inc
pop
test
mov
cmp
mov
bound
nop
dec
mov
jns
std
lea
enter
add
and
test
aas
emms
add
dec
pop
rolb
dec
arpl
dec
add
push
dec
pop
lods
movb
sub
jmp
sub
mov
push
cmp
ret
rorb
and
mov
jbe
pop
jne
xchg
mov
mov
xor
aas
or
stos
dec
xchg
mov
shll
shlb
cmpsl
mov
inc
inc
inc
fldl
adc
sub
fiaddl
div
inc
outsb
sbb
push
dec
xor
add
push
adc
sbb
jp
jo
jno
and
imul
inc
movb
mov
adc
xchg
cli
pop
idivb
or
mov
mov
fnstcw
mov
sbb
out
mov
mov
cltd
mov
or
xchg
lods
jmp
dec
or
lea
push
insl
mov
arpl
pop
out
mov
je
pop
adc
in
fs
inc
popf
cmc
and
filds
inc
mov
mov
dec
sbbb
ret
inc
jl
mov
jp
lds
adc
insl
adc
cltd
and
loope
loope
mov
pop
clc
sbb
mov
xchg
shlb
jge
xchg
mov
xchg
insl
add
dec
mov
lock
pop
je
or
mov
inc
dec
push
icebp
adc
xor
adcb
mov
hlt
mov
and
dec
sub
cmp
xor
mov
lea
pop
mov
inc
daa
das
adc
jnp
mov
mov
ffreep
xor
mov
cli
scas
icebp
sbb
cmp
lds
hlt
pop
push
daa
aaa
pop
pop
push
add
inc
shlb
pop
cmpsb
push
jp
dec
mov
cwtl
stos
test
and
pop
jmp
ret
js
dec
mov
or
dec
xchg
or
mov
add
and
shrb
pop
aam
dec
test
icebp
daa
icebp
bound
sub
adc
sub
ja
cs
js
and
int3
test
je
xor
leave
lods
and
or
pusha
ja
inc
xchg
cltd
adc
or
adc
movsl
cwtl
adc
sti
or
mov
sbb
mov
push
pop
lock
xchg
cmp
xorb
inc
push
dec
sti
cmc
insl
loope
addl
and
cmp
adc
lret
push
jnp
jl
adc
loopne
call
sub
into
pop
lahf
xchg
idivl
bound
adc
clc
add
cmc
les
aaa
xchg
cmpsb
and
pop
or
movsb
popf
pop
inc
test
mov
js
enter
mulb
jmp
loop
cmp
fstpl
inc
ffreep
mov
add
ror
push
push
fsts
aam
cs
push
push
lret
clc
cmc
inc
insb
iret
sbbl
jne
dec
mov
mov
cmp
and
into
fmuls
xor
xchg
cmp
imul
pop
push
mov
adc
push
pop
orb
or
inc
jge
mov
xor
incb
sbb
push
mov
sahf
out
or
dec
mov
loope
fisttpl
xchg
nop
data16
and
xor
mov
adcb
add
sti
stos
mov
mov
jb
and
jo
cmc
mov
or
mov
int
push
sub
or
add
jae
mov
cmp
mov
std
and
jae
add
mov
xor
mov
adc
int3
or
inc
movsl
xchg
xchg
bound
mov
sbb
cmc
push
fwait
xrelease
jno
mov
cmc
pop
dec
das
sbb
xor
add
or
mov
pop
in
nop
subb
lock
js
mov
mov
push
and
push
fcomi
dec
shrb
push
stos
cmp
pop
or
stos
gs
cwtl
jns
mov
call
arpl
cwtl
inc
js
pop
ja
ret
jp
jge
mov
sbb
or
dec
xchg
aas
add
mov
and
stos
inc
adc
loope
mov
xor
dec
inc
rcrl
add
cmp
icebp
rclb
ss
icebp
xchg
mov
loope
flds
adc
adcl
adc
fwait
adc
rcrb
cmpsl
rcr
mov
mov
aas
mov
xor
cmp
add
iret
jl
dec
outsl
mov
lret
xor
jg
pusha
je
dec
imul
sub
pop
adc
adc
jne
mov
xor
add
add
js
js
push
lret
mov
or
pop
push
out
inc
popa
adc
inc
mov
cmpsl
adc
stos
or
rcrl
sbb
lahf
jnp
pop
sbb
icebp
addl
iret
pop
fs
add
xchg
icebp
cmpsb
rolb
rcrl
mov
mov
sub
add
rol
push
orb
cmp
add
mov
icebp
ret
iret
add
push
sbb
sub
addr16
ja
inc
push
add
out
sahf
mov
popf
test
adc
adc
add
pop
popa
mov
out
mov
mov
loopne
jp
xlat
insl
test
fmuls
popf
add
pop
cmp
cltd
cmp
leave
in
clc
aaa
lret
and
ss
cmp
add
and
or
es
push
sbb
sub
shll
mov
pop
add
fists
icebp
xor
inc
in
xchg
enter
pop
loope
leave
dec
sbb
sub
push
add
xchg
pop
or
and
pop
fmull
xlat
push
arpl
mov
adc
mov
cmp
pop
or
mov
or
fwait
cld
add
sbb
lret
or
add
mov
push
and
xchg
lods
and
jge
add
add
xlat
push
push
pusha
mov
imul
cmc
sbb
pusha
mull
ret
inc
aam
or
cld
add
scas
adc
add
outsl
movl
notl
out
or
jecxz
sub
mov
inc
popa
or
mov
add
fbstp
inc
cwtl
sbb
rolb
arpl
add
pop
or
enter
mov
jmp
adcb
std
push
dec
sbb
mov
xchg
ficompl
adc
inc
push
adc
rolb
sbb
aad
dec
mov
sbb
adc
dec
cmp
fmuls
pop
in
or
add
int3
sbb
dec
fisubrl
or
push
cld
add
movsl
rorl
ret
pop
add
loopne
jne
and
push
add
dec
mov
adc
xlat
jl
cwtl
sub
xchg
rorl
insl
xchg
sub
sbb
jl
lcall
jp
ret
or
popa
mov
add
add
dec
out
test
mov
subl
loopne
and
fldl
dec
mov
das
adc
in
sbb
add
dec
jnp
mov
inc
sub
std
addl
sub
add
adc
stos
ss
mov
pop
add
das
and
movups
scas
ja
add
push
mov
hlt
sbb
mov
pop
xor
mov
push
nop
sarb
dec
push
sub
jns
in
lret
and
inc
sbb
mov
loop
sub
xchg
sbb
lock
sbb
out
sbb
ret
xchg
sub
add
in
incl
add
sbb
pop
add
shlb
push
inc
mov
cmp
xor
and
sbb
jns
push
push
add
sti
adc
movsb
push
es
adc
or
dec
fdivrl
js
mov
push
push
icebp
aam
bound
jl
addb
push
or
xor
mov
push
sub
sbbb
out
xchg
sub
icebp
es
sbb
xchg
aas
cmpsl
scas
sbb
xor
js
sahf
scas
jne
pop
into
test
xorb
fisttps
sbb
inc
mov
outsb
cmp
push
push
fstpt
jp
xchg
xor
dec
or
xchg
cmp
jne
shrb
aam
cmp
aas
jg
fisttps
stc
adc
pop
out
add
or
ds
mov
push
push
insb
push
pusha
adc
in
popf
xchg
xchg
adc
xor
cltd
call
mov
test
add
leave
rcl
test
prefetch
or
ljmp
mov
xor
adc
loope
lock
mov
sub
sbb
std
dec
loopne
xchg
arpl
mov
or
mov
mov
pop
jbe
cmp
adc
cwtl
or
lcall
lea
test
push
xor
add
fdivrl
pushf
pop
lods
sbb
jbe
cmp
imul
sub
mov
lock
sub
jmp
sub
mov
fnstenv
hlt
ds
xchg
fcom
dec
addl
aaa
cli
mov
xchg
mov
sbb
jne
enter
push
fcoms
sarb
fbstp
and
test
add
or
sbb
and
cs
jae
inc
or
stos
shll
push
ret
frstor
push
xchg
in
or
inc
jge
cld
mov
add
pop
cltd
xor
xor
es
mov
push
popl
mov
leave
movsl
movsl
pop
das
mov
inc
movsl
inc
cmp
mov
test
nop
dec
xchg
roll
and
and
inc
xchg
dec
arpl
cmp
cld
test
test
sbb
das
sub
dec
mov
mov
mov
rclb
push
sub
pop
loope
popf
adcl
or
sub
test
out
clc
fcomps
xchg
mov
shll
push
pop
or
cli
or
add
xor
inc
ret
pop
stos
cltd
rolb
adc
aaa
fwait
xor
pop
popa
mov
cmp
push
dec
xor
test
movsl
mov
and
lds
arpl
adc
sub
movsb
push
shr
rolb
lock
sbb
mov
jge
rolb
pop
mov
cmp
aaa
dec
cwtl
pop
add
add
sub
jne
push
cmp
sbb
fsubl
mov
add
sbb
xchg
adc
dec
add
add
jo
jb
add
adc
adc
ret
or
push
sahf
aam
xchg
lds
push
lcall
push
inc
or
cmpsl
test
aad
cs
pop
insb
ret
add
inc
sub
outsl
rorl
inc
rcl
addb
test
inc
int3
mov
je
das
dec
rcr
call
and
add
pop
mov
cmp
repz
mov
xor
rolb
movl
inc
cmp
loope
jo
dec
dec
out
xchg
push
faddl
jecxz
add
cmp
push
xchg
movsl
mov
popf
jmp
in
scas
add
jo
jo
dec
xchg
ja
fistpll
outsb
test
add
xor
inc
ret
test
orl
lods
inc
int3
insl
mov
fisttpll
inc
or
jl
cmp
sti
pop
pop
jno
xor
vpinsrw
sub
inc
movsb
dec
adc
add
or
adcl
daa
sbbb
jp
pop
cs
xchg
out
adc
push
or
inc
add
cs
mov
jno
xchg
add
lds
and
clc
test
adc
pop
or
lcall
mov
mov
movsl
fstp
cmp
add
sbb
rorl
mov
pop
notb
sub
aad
icebp
or
add
sbb
sbb
ds
and
sbb
sbb
imul
mov
adc
jne
jge
push
inc
lock
push
ret
inc
loope
xor
call
and
mov
lods
xchg
push
and
adc
mov
or
add
inc
sbb
pop
push
ja
mov
pop
or
add
arpl
out
aaa
stc
mov
inc
cmp
cltd
xchg
iret
sahf
test
add
callw
xchg
push
pop
cmp
or
lea
dec
and
rorb
roll
add
orl
int
cmpl
cmpsb
stos
test
insb
adc
dec
xchg
icebp
imul
adc
add
scas
mov
movsl
int3
dec
add
adc
and
sbb
sub
jo
fistl
sub
dec
push
dec
adc
stc
or
xchg
test
in
aas
pop
pop
daa
insb
ja
push
ficomps
arpl
sub
loopne
clc
sbb
movsl
pusha
sub
cmpsl
mov
fcmove
cmp
test
and
test
or
inc
pop
push
in
repz
adc
sbb
leave
dec
adc
mov
inc
jnp
das
dec
clc
mov
xchg
add
test
mov
add
popa
cmpsl
jnp
xchg
or
sub
hlt
fnstenv
adc
mov
test
cmpsl
rorb
inc
les
lods
mov
add
sub
addr16
sbb
int
sub
jmp
xor
repz
mov
mov
xor
and
add
cltd
jmp
jne
popf
adc
and
mov
mov
push
rcl
jge
cmpsb
push
daa
dec
dec
xchg
or
or
repz
add
or
lret
sarl
push
or
bound
cli
xchg
add
aas
dec
or
pcmpeqw
xor
xlat
inc
jbe
mov
subl
js
or
enter
inc
and
iret
icebp
out
or
push
mov
add
in
lret
mov
cmpb
fwait
daa
imul
cmp
push
mov
ret
mov
pop
and
mov
adc
arpl
inc
movsl
pop
and
test
fists
cmpsl
cmp
sub
sbb
and
adc
jns
and
add
in
pop
clc
push
ja
cmp
mov
mov
cmc
lea
shll
xor
js
mov
es
push
sub
pushf
cmpsl
stc
int3
loope
xchg
inc
sub
aam
mov
inc
xchg
xor
mov
cmp
pushf
sub
popa
xlat
pop
inc
dec
lahf
popa
xlat
cmp
or
mov
pushf
fcomi
stos
test
push
out
jge
movsl
lds
lods
pop
and
push
pusha
call
xor
lcall
push
std
inc
adc
bound
lock
inc
mov
push
loop
xchg
sbb
mov
das
lods
fwait
test
dec
popf
stos
and
cmp
jns
inc
negl
fldt
cwtl
mov
mov
cwtl
inc
rolb
dec
adcl
test
jmp
push
enter
lods
dec
pop
fldt
push
test
inc
push
xor
cmc
xchg
jmp
sbb
or
adc
bound
or
dec
mov
rcl
or
sub
jl
inc
jnp
mov
enter
ret
push
mov
and
mov
adc
imul
sbbl
mov
jge
hlt
cs
out
inc
scas
icebp
cmp
pop
pusha
dec
and
out
stos
arpl
dec
cmp
dec
stc
cmp
aam
das
std
sbb
data16
inc
and
sbbl
jmp
jns
gs
dec
daa
sbb
sub
jbe
jo
stos
sbb
cmpsl
sbb
gs
add
popa
loopne
or
pop
in
pusha
in
shll
push
xchg
jge
mov
fisubs
testb
test
push
inc
movl
push
sbb
dec
popf
ud2
aaa
or
bound
cmp
aad
cmpsb
hlt
add
sbb
sbbl
jnp
cwtl
mov
jns
shr
inc
je
cmpsl
cmp
adc
jl
mov
or
add
test
js
dec
cmc
mov
fildl
mov
xchg
in
xor
inc
dec
jns
sbb
push
dec
pop
push
movsb
out
mov
ret
in
ss
cmp
pop
adc
adc
ljmp
mov
jne
inc
or
scas
mov
jecxz
mov
cmp
cwtl
lods
add
cmp
rcl
out
scas
and
sub
pop
imul
dec
fmull
movups
dec
pop
adc
aaa
sahf
and
cmc
lcall
inc
cmp
inc
mov
adc
xor
add
mov
push
or
mov
add
icebp
push
popf
sarb
jecxz
mov
stos
adc
jno
push
aam
pop
cmp
dec
push
add
movsb
xor
cld
rorb
add
test
lret
inc
mov
sub
xchg
outsl
insb
add
pushl
mov
rcll
xor
sub
pop
xchg
fstpl
add
jle
dec
jno
clc
js
sbbb
jbe
mov
mov
sub
mov
sarb
test
jno
push
aaa
jne
or
shrl
pop
repz
popa
and
loopne
aad
dec
out
sbb
in
sahf
and
jo
push
jb
and
repz
inc
sbb
imul
add
or
xor
xor
pop
push
mov
jno
dec
lcall
push
xchg
xchg
rclb
loope
add
lret
mov
xchg
sbb
xchg
cwtl
iret
fisttps
mov
sbb
lods
mov
outsl
push
push
or
sbb
adc
jb
inc
cmp
xchg
cmpsl
push
pop
shlb
mov
pop
sub
push
push
aaa
popf
cmpsl
and
inc
fiadds
orl
fbld
push
fisubrl
rolb
xor
loope
and
pop
xchg
dec
out
fs
cli
mov
adc
jp
or
loop
xchg
shrb
push
push
add
push
cmpb
pop
xchg
xchg
xchg
lret
add
push
adc
fists
or
popa
inc
push
repz
mov
or
jecxz
adc
mov
sub
dec
out
testl
fcmovnbe
and
xchg
push
inc
xchg
imul
mov
jns
mov
push
and
cmp
aam
dec
push
pop
cmp
lock
mov
cltd
mov
ficomps
fwait
lods
add
es
and
pop
fstps
jo
adc
mov
js
lret
push
adc
mov
add
fiaddl
and
dec
and
adc
push
js
fistps
std
insb
sahf
xchg
add
mov
fistpl
jb
stos
mov
mov
outsl
loopne
or
sub
loope
jbe
cwtl
fs
movl
dec
xchg
or
adc
in
sti
rorl
and
js
leave
lret
aaa
in
jo
add
jns
ss
ss
dec
push
dec
or
insl
aad
test
adc
or
and
push
int
movsl
enter
inc
push
fiadds
jg
dec
enter
ss
xchg
adc
sarb
loope
jmp
add
push
add
hlt
adc
loopne
lods
xor
movsl
mov
push
in
jge
inc
jo
jnp
leave
cli
xchg
test
or
rol
jge
xor
fsub
jge
rcrl
add
dec
pusha
jae
jne
clc
loopne
imul
xor
push
lods
inc
mov
jbe
or
sbb
jo
or
inc
mov
insb
sbb
pop
es
ja
pop
and
pop
ss
adc
adc
lret
in
xchg
sub
add
mov
pop
inc
daa
stc
or
jmp
mov
xorb
sub
fcompl
pop
les
cmp
inc
sarb
ss
push
data16
mov
or
bndldx
stos
inc
test
or
andl
and
mov
loopne
shr
mov
movsb
out
daa
orb
xorl
mov
fwait
out
mov
mov
outsl
push
clc
fcmove
add
int
mov
jecxz
sbbl
das
mov
les
gs
xor
loopne
pop
bound
cmp
jp
out
imul
lds
insb
testl
inc
daa
cmp
add
mov
js
and
popl
or
fmull
push
test
arpl
dec
mov
adc
fists
inc
push
cmp
cmp
ret
stc
xchg
jl
gs
or
add
xchg
sbb
cmp
pop
xor
shlb
push
mov
lea
nop
xchg
test
sbb
lock
xchg
jp
dec
daa
sub
push
cmp
movsb
pop
insl
icebp
add
add
push
loope
cmp
aad
or
sbb
xchg
mov
inc
xor
scas
jnp
add
popa
and
fprem
mov
icebp
pushf
pop
or
add
xchg
pop
ss
mov
mov
movsl
pop
fwait
popa
and
pop
mov
mov
or
lea
add
sbb
cmp
add
cltd
add
add
testl
shrl
push
and
sub
mov
adc
mov
add
xchg
std
psubb
xor
or
inc
xor
daa
push
scas
xor
dec
xchg
dec
add
mov
pop
out
pop
mov
jo
cmp
enter
or
push
jle
xchg
pop
sahf
data16
lods
dec
icebp
loopne
das
test
rolb
sub
xchg
add
jne
sahf
push
stos
fildll
sub
pusha
pop
in
xor
jl
js
xor
dec
mov
sbb
adc
add
inc
cltd
xchg
popa
fldpi
xchg
pop
clc
sub
sbb
xor
dec
fst
inc
add
jo
jp
repnz
rclb
jae
adc
lret
inc
lods
fisttpl
or
imul
add
lock
addb
in
sbb
and
andl
add
mov
lods
lret
roll
ja
imul
das
and
and
inc
imul
cltd
xchg
outsl
int3
push
push
enter
push
add
movl
loop
nop
mov
scas
dec
jmp
inc
in
call
imul
testl
xchg
sbb
cld
jl
ret
add
mov
test
dec
popa
inc
dec
jecxz
std
xor
data16
jmp
jmp
lret
and
cmp
mov
lock
jnp
xor
imul
jno
in
push
js
in
sahf
pop
in
push
cltd
adcb
mov
fsubp
add
scas
imul
imul
mov
cltd
shrb
xchg
mov
sub
int3
test
das
adc
add
xorb
pop
and
xor
adc
add
imul
lds
arpl
add
test
mov
leave
shrl
es
mov
test
add
ret
add
mov
adc
jne
jge
dec
jecxz
inc
movsb
int3
mov
or
andb
pop
and
add
icebp
xorl
cmp
sbb
jb
shlb
loope
mov
ss
int
out
or
add
push
andb
arpl
xchg
xor
sbb
fistl
fcom
jle
cltd
jge
incl
jge
int
dec
cmp
mov
es
push
loope
and
mov
sub
xchg
popa
das
or
pop
paddw
rol
addl
sbb
ret
or
rcll
and
mov
stc
sub
cmc
or
add
aaa
pop
add
sub
xchg
test
mov
mov
sub
adc
xchg
loope
inc
test
and
cltd
sub
or
pop
cld
mov
je
sub
mov
push
and
inc
cs
lods
mov
mov
movsl
push
das
roll
jle
orb
pop
or
mov
cltd
rorb
mov
lret
mov
pop
sbb
inc
cmp
aam
or
dec
sahf
push
xchg
jo
inc
mov
iret
adc
push
adc
jo
push
add
cmpsb
test
inc
lret
xchg
rcll
xchg
mov
xchg
add
sub
push
andb
push
or
fisubrs
mov
rcr
push
fidivl
outsb
shll
adc
orl
mov
dec
inc
jno
pop
cltd
or
jg
push
adc
adc
hlt
and
cs
popa
mov
rolb
sbb
sarl
inc
pushf
sub
inc
fucomip
pusha
ret
gs
out
flds
andl
clc
push
adc
mov
cld
leave
mov
or
add
sub
or
add
ror
mov
loop
aad
les
pop
test
addr16
cmp
js
sub
add
sbb
dec
cmc
pop
pop
sub
leave
daa
mov
add
jo
mov
sub
and
addr16
and
cmp
sbb
or
dec
xor
cs
fwait
xor
pop
cmp
xor
cmp
lea
push
inc
lds
adc
pop
dec
inc
sub
insl
pop
push
xor
outsl
sub
cmp
loope
add
dec
cmp
mov
xor
mov
and
xchg
dec
and
mov
mull
dec
inc
push
sarl
nop
xor
push
jnp
sbb
imul
inc
stos
cmp
ret
aas
andl
inc
xor
je
jnp
cs
and
sub
cmpl
gs
ret
ret
push
hlt
jle
xchg
fistps
jl
flds
jmp
pop
pop
push
and
pop
cltd
jge
add
lods
fisubrs
iret
push
inc
sub
mov
aaa
jns
jmp
sbb
dec
mov
mov
ret
les
add
inc
loopne
inc
sub
insl
inc
adc
push
addl
push
jae
adc
fbld
lods
fwait
mov
jbe
shr
mov
cmp
inc
arpl
movhps
or
dec
push
adc
sti
adc
add
cmp
pop
dec
or
ss
fldcw
xor
pop
adc
fisttpll
bound
enter
jnp
push
cwtl
push
mov
adc
push
adc
push
mov
inc
cmp
fmuls
or
sub
inc
jo
mov
mov
sbb
test
clc
nop
push
add
lret
sbb
jl
lds
sbb
scas
push
outsl
daa
add
shrl
push
outsb
push
mov
cmp
and
pop
test
push
insl
mov
jmp
fdivrl
mov
xor
arpl
test
lcall
sarb
int
push
and
add
sbb
add
mov
sbb
adc
add
dec
xchg
lea
xlat
xchg
cmp
cmp
jo
in
sahf
test
gs
repnz
fwait
or
mov
push
xor
cmp
xorb
popf
arpl
adc
cmpsb
push
add
sub
cmp
movsb
push
rolb
mov
sbb
ret
adc
inc
cmp
push
cmc
or
jno
xchg
add
call
mov
or
sbb
sub
pop
test
xlat
jle
popa
jo
sub
inc
jns
stc
inc
rol
sbb
into
ds
popf
cmp
xchg
mov
lea
jno
les
pop
dec
lret
cmp
rcrb
jno
icebp
int
adc
pushf
push
cmp
mov
imul
dec
mov
jecxz
imul
mov
push
cmpsl
outsl
test
inc
dec
lea
adc
add
sub
sbb
loopne
imul
mov
or
jmp
mov
xchg
out
push
ret
inc
push
sbb
mov
lods
dec
cmp
mov
test
mov
iret
xchg
cmp
data16
lods
sub
xor
mov
out
fs
jl
pop
xor
aam
add
mov
and
icebp
bound
icebp
icebp
and
push
or
cmp
mov
dec
jmp
rcrl
jle
in
cmp
subl
movsl
jge
push
clc
insl
push
push
std
loope
mov
insl
jp
push
js
cli
and
sbb
add
adcl
fs
xchg
push
imul
lods
xchg
aas
loopne
or
sbb
dec
adcl
mov
movsl
xchg
xor
jns
mov
jmp
dec
js
std
adc
icebp
and
mov
pop
or
adc
or
aaa
xchg
sub
xchg
xchg
sti
dec
xchg
adc
das
add
fdivs
inc
pop
pop
xchg
dec
xlat
lret
adc
cmp
add
daa
fs
dec
movsl
movsb
add
sub
sbb
mov
sbb
inc
dec
sbb
adc
xor
pop
aam
adc
dec
mov
add
mov
jge
sbb
data16
mov
loop
push
xor
sarb
mov
fstpt
ljmp
xchg
mov
jno
adc
inc
dec
cmpsl
icebp
sbb
mov
dec
sub
in
sub
cmp
cmp
int3
nop
icebp
dec
add
pop
shrl
popf
jno
add
lods
aad
scas
inc
loope
xchg
daa
loop
sbb
and
mov
mov
mov
aaa
xchg
mov
jns
scas
cmpb
sbb
jbe
lret
sub
pop
jle
jecxz
hlt
loopne
mov
outsl
push
mov
je
lcall
sbb
mov
or
adc
repz
and
mov
addr16
flds
sbb
cmp
inc
jnp
mov
mov
and
inc
out
std
xchg
sbb
mov
out
aas
push
sub
inc
js
sbb
leave
dec
dec
mov
mov
sbb
push
dec
push
mov
mov
movsl
and
or
and
int
js
stos
and
sbbl
lea
sbb
xchg
scas
and
js
test
ljmp
pop
popa
sbb
jg
push
mov
gs
icebp
xchg
sbb
cwtl
and
sub
lea
ja
in
out
sub
push
clc
fstl
push
into
mov
sbb
add
aaa
bound
imul
push
xor
dec
adc
mov
aad
push
inc
mov
push
aam
mov
inc
cmpsl
pop
sbb
std
aaa
jmp
add
inc
mov
outsl
sbb
mov
or
xchg
adc
scas
mov
fnstenv
dec
push
cmp
sub
aas
inc
xor
aas
inc
sti
lret
add
mov
les
andl
jo
fs
inc
imul
loopew
aas
loopne
or
test
pop
push
lea
xchg
cli
dec
test
popf
push
lds
leave
jl
lea
adc
sub
jl
or
fsubl
jmp
cmp
inc
arpl
cmp
sub
das
insb
imulb
shll
les
loope
mov
fildl
adc
mov
cmp
pushf
sti
push
addb
mov
ret
push
inc
mov
pushf
xor
sub
scas
or
push
xor
add
push
mov
jnp
sub
mov
rcrb
cmpsl
mov
popa
or
scas
xchg
sbb
push
ljmp
fs
sti
pop
jno
leave
enter
adc
popf
popf
jle
shl
dec
aaa
or
push
adc
dec
or
mov
mov
push
lret
sbb
cmp
clc
nop
addl
sbb
mov
pop
adc
ds
inc
inc
dec
stos
ret
cmp
fucom
inc
dec
mov
mov
imull
adc
popa
adc
mov
lock
push
pop
icebp
push
outsl
inc
sub
jne
rcr
mov
repnz
cmc
adc
xchg
in
mov
jno
sub
popa
push
dec
xor
inc
out
dec
mul
sbb
test
mov
hlt
mov
inc
shll
ficoml
inc
fmull
popf
or
fimull
mov
pop
gs
push
mov
loope
push
add
fisubl
pop
cmc
es
sub
rorl
movsb
add
sub
mov
lds
daa
aam
jecxz
add
push
push
movsl
and
enter
cmp
mov
lods
dec
sub
leavew
jo
inc
push
pop
push
dec
rorl
addr16
aaa
nop
fldpi
addb
mov
ss
jmp
in
add
xor
jecxz
adc
std
loopne
mov
xor
sbb
mov
mov
push
inc
push
and
dec
jmp
icebp
mov
jge
sub
loope
xlat
push
mov
fsubrs
jnp
mov
or
iret
add
xor
xchg
inc
or
add
lcall
adc
loope
inc
je
push
lret
jge
pop
mull
push
lock
fdivrp
jecxz
adc
inc
push
cmp
arpl
pop
subl
pop
pop
mov
cmpl
ret
push
push
or
jle
out
adc
outsb
adc
pop
inc
add
sbb
mov
xor
movntps
push
xchg
lret
imul
fbstp
pushf
fldcw
mov
inc
xor
jmp
pusha
nop
jmp
adc
jo
or
push
adc
mov
adc
mov
dec
pop
dec
push
kmovb
adc
hlt
imul
rorb
jecxz
inc
fcoms
ret
add
shrd
enter
test
mov
mov
ret
icebp
insb
jle
or
or
movsl
xchg
loope
lock
popf
out
leave
jne
xchg
dec
in
push
xchg
gs
or
sarb
pop
aaa
push
nop
jb
loope
xor
lds
in
xor
adc
sub
push
push
sub
dec
and
jb
pop
pop
sti
adc
pop
int3
sub
push
nop
lret
fsubrp
push
adcb
adc
cmp
sbb
mov
je
orb
icebp
sbb
add
jb
mov
int3
and
movl
movsl
xchg
pop
inc
mov
fwait
icebp
repz
and
call
add
ret
mov
xchg
mov
arpl
add
mov
xor
leave
mov
icebp
jo
mov
adc
sbb
ret
pop
xorl
nop
aaa
cs
je
mov
test
fwait
gs
icebp
mov
xor
dec
outsl
sbb
inc
inc
add
nop
xor
dec
imul
sbb
pusha
ss
shrb
xchg
sub
jno
lcall
mov
pop
mov
lahf
sbb
fldt
ljmp
lods
dec
jae
sub
add
cmp
add
and
lods
push
or
arpl
stc
lock
ret
loopne
rolb
ret
hlt
adc
inc
dec
aad
mov
pop
cmp
fimull
and
sbb
add
outsl
rcrl
jmp
or
dec
or
sarb
mov
add
cmc
insl
stos
sbb
les
pop
mov
adc
cmpsl
cs
mov
mov
andl
mov
pop
add
out
out
cmp
adc
jle
insb
mov
call
add
add
adc
and
push
rcl
dec
aas
inc
loopne
imul
popa
outsb
push
cmpsl
es
dec
xchg
xchg
sbb
outsl
mov
or
fadd
sbb
adc
mov
in
pop
rcrb
mov
adc
fisttpll
sbb
jno
iret
mov
adc
sub
rclb
xchg
aas
jmp
xchg
xchg
lret
push
sub
lret
push
fnsave
test
mov
mov
mov
scas
push
sbb
xor
sbb
pop
stos
add
inc
jb
cli
les
add
sub
cmp
pop
dec
lods
fmull
or
lods
das
test
loope
and
pushl
cs
xchg
add
xchg
add
fwait
inc
push
fmull
inc
pop
pushf
aad
pop
or
pop
rcll
push
or
sub
inc
gs
mov
fwait
aaa
dec
mov
fstl
outsl
or
les
sti
mov
bound
pop
inc
rorl
pop
jg
insl
push
stos
out
imul
push
ret
das
adc
dec
in
mov
lods
mov
fdivrs
lods
or
mov
scas
int3
lret
movsl
sub
or
and
in
loop
pop
push
and
out
stos
inc
sub
popa
iret
sbb
mov
jno
sbb
dec
in
or
adc
arpl
jp
push
dec
pop
push
push
enter
outsl
or
aaa
enter
mov
sbb
sbb
ret
sbb
cs
fisttpll
mov
pop
push
sbb
cmc
mov
pop
cmpsl
arpl
inc
ret
dec
hlt
shlb
push
addl
mov
test
mov
bound
mov
xor
inc
test
pop
push
sbb
sbb
xor
sbb
or
xor
sub
fisttpl
ret
fisttpl
cmp
pop
pop
mov
mov
movsl
mov
sbb
dec
sbb
jno
mov
andl
ret
test
or
xchg
xor
jp
fmul
adc
dec
or
sub
fsubs
test
pop
jb
xor
mov
test
push
lsl
ret
push
push
js
lods
fnop
ret
add
xor
cmp
or
cmp
cmp
xchg
rolb
mov
dec
inc
xchg
daa
sub
xor
sti
shrl
rolb
test
inc
cmp
data16
lret
test
sbb
iret
test
fstpt
sbb
test
cld
add
add
pop
popa
mov
rorb
pop
xor
pushf
dec
or
pop
out
jmp
imul
xchg
dec
pop
pop
mov
enter
arpl
jmp
push
pop
cmovle
and
aas
stc
rclb
inc
rcrl
jno
arpl
out
addb
inc
inc
inc
mov
cmp
mul
xor
and
inc
dec
inc
int
sbb
fidivl
das
xchg
icebp
cs
adc
push
xor
cmpsb
aad
rolb
push
rcrl
mov
add
or
push
add
mov
inc
stos
lds
add
and
or
and
mov
cmp
xchg
ret
and
xchg
xchg
jo
xchg
dec
sbb
scas
sbb
ret
into
push
popa
xchg
test
pusha
aaa
xchg
int
adc
add
call
adcl
lcall
adc
cmp
gs
test
xchg
mov
nop
into
scas
daa
add
pushf
add
dec
mov
enter
pop
xchg
mov
and
cmp
dec
addr16
outsb
xor
inc
mov
mov
inc
repz
nop
push
pop
add
rolb
add
je
icebp
or
arpl
les
popa
popf
xor
add
cmp
xor
pop
cwtl
cmp
dec
pop
in
sbb
jae
cltd
add
xor
cltd
andl
ret
add
sbb
inc
add
stos
hlt
xor
push
mov
mov
sahf
push
ret
cmp
adc
pop
inc
or
cmp
fsubl
cltd
fcmovnb
xorb
fs
jle
add
bound
and
icebp
sbbb
pushf
and
inc
cs
orl
jae
imul
mov
push
pop
mov
inc
cltd
sbb
lahf
add
push
inc
jg
lcall
push
and
xchg
xor
lret
and
ja
cltd
sub
and
sub
icebp
insb
lcall
sub
outsl
sbb
inc
popl
inc
add
ret
cmc
add
jl
mov
sbb
jge
mov
cltd
imul
cmp
pop
pop
das
sbb
rcl
add
xor
out
adc
mov
rcl
pop
mov
test
cmpsl
xor
jae
xchg
mov
hlt
adc
movsb
subl
add
lods
mov
inc
xchg
dec
test
aas
fstpl
inc
cmp
insl
shlb
dec
dec
push
dec
jb
cmpsb
loopne
imul
sbb
sahf
add
nop
nop
sub
dec
inc
jge
imul
adc
lods
sti
push
sarl
pushf
movl
pop
or
add
jmp
add
pushf
xchg
setl
cmpsb
jo
dec
rcrl
inc
loope
insl
bound
xchg
add
das
subl
cmp
sbb
movsb
inc
sbb
pop
dec
xor
aaa
adc
dec
call
dec
and
rcr
daa
test
add
xor
shlb
inc
xor
cmp
repz
lahf
add
dec
sahf
dec
inc
cs
jo
icebp
add
or
xchg
and
mov
adc
sub
and
and
inc
pop
or
dec
pop
xchg
pop
xlat
pop
adc
cmp
jnp
add
dec
loop
loopne
aas
stos
adc
sub
roll
aaa
insl
dec
in
leave
adc
add
aam
dec
stos
or
stos
data16
adc
scas
int
loop
push
and
inc
dec
inc
xchg
pop
xchg
sub
add
xchg
cmp
and
push
and
test
sbb
push
or
ficompl
pop
xor
imul
or
sbb
jecxz
sbb
pop
or
dec
fsubrl
call
push
orl
or
aas
fstl
add
adc
lea
mov
inc
fwait
shl
dec
pop
insb
add
mov
js
pop
xchg
inc
sub
mov
add
cltd
push
xchg
mov
push
test
mov
jb
and
enter
inc
ss
xor
loop
leave
pop
cmp
xor
pop
fidivs
mov
insl
sbb
ss
xor
dec
or
xor
pop
inc
mov
and
cmp
cmp
mov
add
pop
popa
pop
scas
scas
sbb
ss
das
pushf
pop
das
or
daa
outsl
int
and
jb
or
test
xchg
pop
inc
imul
mov
movsb
pop
inc
lods
jno
movsb
fadd
adc
shll
add
popa
or
addr16
mov
out
xchg
adc
je
cld
mov
movb
pop
pop
xor
pushf
cs
mov
js
add
and
inc
adc
test
popf
adc
cmpsb
stos
lock
pop
dec
sbb
add
jl
arpl
jno
mov
pop
rorb
inc
and
mov
adc
imul
adc
movb
lea
dec
sub
or
mov
dec
pop
fsub
outsl
mov
or
fists
mov
insl
faddl
pop
pushf
test
les
xchg
adc
inc
js
pop
adc
pop
data16
inc
popf
xor
loopne
in
leave
lock
ret
test
test
data16
adcb
sbb
add
outsb
arpl
leave
xor
pop
leave
jmp
adc
jnp
xor
mov
and
sahf
xchg
lahf
out
in
inc
or
jae
mov
dec
das
jbe
mov
push
xchg
mov
pusha
rorb
sub
jno
add
jp
mov
filds
das
jl
jl
dec
mov
dec
lret
cmpsb
in
add
mov
or
imul
repz
loope
es
dec
sub
loope
rclb
lahf
xchg
outsb
or
push
or
bound
add
mov
cmp
inc
push
mov
rorb
fs
lods
lcall
xchg
dec
scas
sub
xlat
insl
orb
stos
mov
ret
mov
pusha
add
test
inc
and
sahf
mov
addl
xor
cmp
xchg
add
and
inc
add
out
inc
aaa
je
leave
dec
push
roll
setbe
and
bound
jecxz
popf
enter
push
jg
jg
or
push
andl
lods
or
insl
adc
jecxz
mov
inc
xor
jg
jns
lock
adc
adc
jl
inc
mov
fucomip
jp
xchg
mov
jmp
or
adcl
adc
xlat
xlat
inc
xlat
or
or
out
repnz
add
orl
dec
inc
fldenv
and
lock
cmp
inc
lret
sahf
outsb
enter
daa
xchg
jae
pop
shlb
and
ret
shrl
jno
or
shll
test
or
xchg
std
mov
adc
lret
clc
sbb
pushf
fildl
or
lock
sub
dec
mov
inc
pop
aaa
outsb
call
mov
aaa
insb
loope
arpl
or
cmp
inc
jl
mov
aad
add
and
dec
xchg
mov
xchg
xor
ret
xlat
repz
inc
xlat
xor
inc
and
xlat
std
mov
pop
pop
jbe
pop
pop
xchg
rclb
sbb
jmp
and
adc
daa
dec
das
or
dec
inc
cmp
scas
and
insl
dec
fildl
jno
pop
inc
jle
out
imul
inc
test
pop
xlat
lret
pop
test
cmp
push
test
jmp
js
push
and
stos
add
add
sahf
and
sub
int
daa
or
movsb
daa
cmp
ja
inc
pushf
lock
test
bound
or
mov
adc
fsubs
or
fwait
inc
addl
int
iret
nop
pop
jecxz
or
testl
dec
daa
movsb
imul
inc
jnp
iret
insl
pop
pushf
pop
sti
add
movsb
or
lods
or
int
scas
in
xchg
push
inc
jp
roll
push
inc
and
lods
fisttps
inc
sbb
mov
push
xchg
addr16
nop
cs
inc
gs
lea
xchg
mov
test
pushf
popf
push
les
cmp
dec
scas
pop
sub
push
cmp
out
or
mov
xor
jnp
in
add
pop
mov
icebp
sbb
js
push
daa
add
xchg
ljmp
aad
xchg
lock
fmul
iret
jmp
ficoms
push
push
pushf
mov
pop
mov
pop
jmp
out
mov
or
dec
dec
jp
adc
mov
leave
fwait
push
fidivl
xchg
add
and
mov
jno
aas
xor
push
mov
push
or
sub
jmp
aaa
into
sub
mov
xchg
int
cltd
dec
add
add
xchg
or
dec
sub
inc
lock
adc
fildll
mov
xlat
jmp
xor
bound
int3
xchg
jbe
pop
sub
and
mov
out
and
xchg
sub
vmovupd
xlat
dec
cmpsl
pop
sbb
loope
jno
push
das
jl
jo
adc
pop
jecxz
jmp
push
ret
xlat
add
shrb
jo
mov
pop
rorb
dec
dec
jmp
daa
and
xor
mov
fcmovb
outsl
add
or
dec
imul
push
cmp
sub
sub
iret
jb
nop
je
add
mov
xor
scas
adc
aaa
push
sub
mov
mov
jge
xor
pop
sbb
push
test
ss
out
sbb
cmp
icebp
sbb
lods
mov
cmp
lods
or
inc
daa
mov
pop
imul
subb
mov
outsb
movsb
pop
pop
push
and
pop
inc
and
es
rcrb
xchg
sbb
fmull
inc
and
scas
sbb
dec
jp
xor
cli
xchg
sti
jmp
adc
jmp
popa
cld
stos
or
es
sahf
gs
push
jo
aas
or
push
jns
lds
enter
mov
jecxz
daa
lods
outsl
fcomps
icebp
das
lock
jno
jge
outsb
arpl
or
xchg
iret
jmp
aad
jno
or
mov
push
sbb
popf
xchg
ret
pop
addr16
outsl
outsl
or
out
mov
and
adc
pop
aaa
shrb
loopnew
lcall
imul
test
cmp
bound
pop
pop
sbb
add
ss
cld
movb
jne
lods
push
cmpsb
aad
or
aaa
hlt
shlb
dec
mov
pop
call
ss
lahf
shrb
mov
dec
fistps
lret
je
testl
popa
or
pushf
fistpl
bound
call
add
ret
pop
add
or
insl
loop
outsb
call
outsl
sbb
adcl
arpl
xchg
and
repnz
das
jnp
enter
or
add
fstpl
xor
add
dec
fists
and
inc
ret
dec
push
les
rclb
ja
dec
sbb
xor
rorb
mov
push
stos
adc
dec
dec
aam
push
rcrl
aaa
mov
shlb
aaa
sbb
dec
test
xchg
cmp
dec
dec
fsts
and
push
adc
cli
and
xor
in
or
gs
push
mov
test
sbb
fildll
std
xor
mov
js
mov
mov
das
arpl
gs
mov
frstor
xchg
xor
frstor
test
xchg
pop
sub
dec
sub
jmp
pop
cli
sarb
or
andl
loope
and
xchg
jge
daa
and
sub
lds
jmp
jmp
icebp
push
lret
daa
mov
dec
mov
aaa
adc
mov
add
in
jmp
data16
out
jns
dec
dec
ret
sbb
flds
push
cmpsb
ffree
fldl
subl
pop
mov
daa
sub
cwtl
xchg
stos
jg
mov
add
xchg
inc
cmpsl
test
sub
dec
adc
sbb
xchg
and
repz
icebp
sbb
ret
xchg
adc
xchg
pop
repz
hlt
leave
push
inc
sub
stc
mov
add
popa
lds
es
popa
adc
adc
add
insb
rcll
daa
push
pop
pop
sbb
sub
in
roll
or
pop
mov
mov
out
add
mov
cltd
mov
push
and
js
push
and
dec
xchg
cltd
fistpl
mov
stc
mov
mov
loopne
bnd
sahf
xchg
sbb
add
es
in
test
inc
dec
arpl
scas
inc
das
mov
fbld
lret
pop
ret
fiaddl
add
pop
xor
popf
inc
inc
and
pop
cmp
pop
test
cltd
subb
push
pusha
mov
push
jne
jnp
cs
push
cmp
or
dec
aas
out
in
stc
xor
pop
add
sti
mov
fildl
jg
inc
adcb
out
xchg
inc
ret
rorb
idivl
pop
cmp
add
add
imul
and
adc
iret
insb
imul
add
jbe
enter
lcall
movsl
xor
or
inc
outsb
and
mov
xor
and
adc
sub
push
das
mov
cltd
nop
push
lods
sub
xchg
pushf
dec
out
xor
inc
jge
cltd
xor
xor
sti
mov
and
mov
lods
test
sub
clc
cmpsl
incl
mov
mov
rcrb
adcl
add
adc
dec
or
ffreep
ss
and
movl
pop
pop
roll
xorb
cmp
test
icebp
jg
js
add
mov
bound
and
xchg
xchg
shlb
int3
adc
les
push
scas
fimull
xchg
add
cmpl
cs
orl
popa
mov
mov
inc
cld
and
dec
loope
pop
fsubl
cmp
cwtl
or
jg
arpl
dec
jl
js
mov
fbstp
aaa
rol
or
mov
adc
and
add
mov
pop
ds
inc
inc
pop
xchg
lret
dec
sbb
aaa
fisttpl
loopne
jne
icebp
xor
imul
sub
pop
mov
push
dec
loope
cmp
movsb
mov
rol
outsl
out
adc
and
and
inc
push
stos
in
lods
sub
lcall
cmp
negl
int
add
pop
sti
xchg
xor
daa
jecxz
or
push
lret
lahf
fdivrs
and
xlat
rcrb
fcmovnb
adc
insl
das
repz
jl
cmp
push
rcrb
jo
inc
dec
lret
add
pop
dec
sbb
sub
adc
add
adc
mov
test
jno
adc
dec
or
sbb
inc
addr16
adc
mov
xchg
inc
or
or
push
pop
and
pop
and
rcl
fucom
cmp
test
mov
xchg
sub
cmp
popa
mov
mov
and
mov
dec
pop
in
push
pop
inc
mov
pop
mov
dec
fwait
insl
sbb
fdivl
jmp
sti
or
fs
or
lret
jno
test
sbb
icebp
test
jecxz
mov
xchg
rcl
xor
popa
dec
mov
add
loopne
inc
sub
push
inc
lahf
xchg
cmc
mov
int
xorl
dec
and
dec
mov
mov
insb
adc
or
sub
pushf
jnp
insl
adc
aad
rdpmc
dec
cmp
jno
aam
and
adc
lock
xchg
adc
cmp
inc
inc
or
xchg
jmp
push
cwtl
mov
pop
push
cmp
cmp
pushf
cmp
cltd
xor
insl
dec
outsb
test
inc
push
leave
mov
mov
sub
dec
xor
inc
scas
imul
lods
pop
mov
movsl
and
sahf
pop
mov
sahf
sub
pop
pop
mov
bound
adc
xor
std
fwait
cmc
inc
dec
push
mov
ja
dec
aaa
subb
sbb
sbbb
xor
adc
rcrl
push
sahf
dec
cmp
adc
outsl
and
sub
bsf
fildl
jmp
fcomi
out
stos
adc
add
lret
xor
leave
std
dec
cli
cmc
mov
jg
lcall
ljmp
lods
jmp
mov
jmp
popa
dec
adc
and
pop
inc
cmp
aaa
stos
jae
cmpsl
sub
cmp
xchg
cmpsl
or
jo
rcll
add
push
rolb
push
loope
sbb
cwtl
enter
adc
icebp
mov
lahf
scas
adc
daa
hlt
xchg
add
rcrb
mov
push
pop
sbb
cmp
stos
js
test
jne
mov
sub
in
popf
push
sub
jecxz
pop
add
push
adc
fistps
testb
test
push
mov
mov
adc
adc
bound
cmpsl
leave
ret
insl
fldl
dec
call
xchg
sti
aaa
xchg
ret
dec
aas
add
loop
adc
aam
mov
mov
shlb
adc
arpl
dec
dec
add
imul
dec
decl
push
add
and
xorl
adc
and
mov
and
out
cmc
testl
and
xchg
pushf
xchg
dec
clc
shl
dec
aaa
xchg
js
and
repz
cs
icebp
aam
dec
inc
mov
out
cmpb
or
test
rclb
rcrl
xchg
int
data16
lahf
add
adcb
mov
int
dec
add
pop
xchg
cltd
dec
dec
xor
js
cmp
and
jnp
dec
cmp
pop
loop
shl
add
cwtl
add
xchg
push
js
or
aas
call
xor
and
push
adc
add
xchg
push
push
cmp
cmp
pop
sbb
xchg
ret
push
les
fcomps
adc
inc
arpl
mov
lds
pop
sub
fcmovnu
cmp
cmovns
xor
test
pop
movsl
add
mov
mov
sbb
cltd
inc
mov
pop
mov
les
int
sub
lods
sub
dec
xchg
add
or
mov
popa
arpl
es
pop
test
pop
pop
mov
push
push
lret
ja
ret
inc
inc
cmp
and
mov
fisubrl
sti
jmp
jecxz
dec
test
jmp
jno
inc
lock
cltd
sar
rcrl
bt
pop
jno
or
sub
jb
call
push
movsb
mov
mov
flds
and
or
and
sahf
clc
pop
repz
dec
lods
jecxz
mov
adc
insl
xchg
andb
pusha
ret
mov
push
mov
test
push
or
ret
push
adc
xchg
xlat
addr16
or
xor
lcall
lea
adc
daa
xlat
pop
adc
inc
push
mov
inc
lock
sbb
mov
adc
jno
pop
jae
cmp
xor
xor
dec
cmpl
jg
sub
or
repz
ss
pop
shll
xchg
cwtl
jg
popf
out
shlb
pop
and
or
cvtdq2ps
cmp
cmp
dec
xor
or
cmc
lods
and
adc
xlat
test
and
fxch
icebp
pop
dec
add
inc
sbb
or
pop
packsswb
imul
pop
cmp
inc
pop
mov
inc
pop
jmp
pop
in
leave
scas
ljmp
std
mov
pusha
addr16
loopne
test
dec
addr16
sbb
mov
add
push
mov
mov
push
inc
fisttpll
sbb
adc
pop
sbb
out
incb
ja
inc
add
pop
leave
pop
test
adc
sbbl
xchg
ret
and
sub
cmp
stos
pop
rcrl
rclb
or
jae
dec
dec
dec
leave
mov
std
int
or
pop
add
cwtl
xor
mov
add
push
filds
sub
lods
sarl
fucomi
inc
jmp
pop
pop
sub
jno
pop
sbb
lds
test
ret
mov
aaa
jecxz
in
pushf
aam
jmpw
pop
scas
aas
mov
mov
mov
fwait
jae
inc
mov
xor
add
jne
ret
dec
mov
sub
dec
loopne
pop
decl
fstpt
adc
adc
or
push
popa
cmpl
pop
mov
gs
and
xorb
inc
dec
sub
sbb
xchg
xor
inc
inc
inc
push
add
xor
mov
rolb
adc
jmp
xchg
test
outsb
xchg
mov
push
or
mov
mov
xchg
arpl
xlat
mov
jmp
and
sub
and
lock
mov
mov
ret
stos
lods
js
sub
sub
mov
outsl
xchg
dec
mov
xchg
push
inc
inc
imul
pop
imull
sbb
loope
decb
xchg
popa
add
push
push
mov
or
mov
jo
dec
sub
mov
ffree
push
out
out
insl
mov
sti
popa
adc
inc
movl
dec
js
mov
sub
test
mov
sub
clc
lret
add
gs
xlat
shrb
xchg
mov
jno
insl
cmp
nop
sbb
mov
and
js
sbb
sub
mov
rclb
xor
mov
lahf
cltd
lods
pop
or
and
xor
stos
xchg
mov
les
aad
imul
ret
mov
add
out
test
xor
sbb
xor
rorl
mov
mov
sbbl
mov
and
or
push
and
or
mov
sbb
mov
lret
mov
cmp
inc
lock
sub
mov
sub
sbb
mov
cmp
imul
rolb
test
rcrl
out
adc
mov
test
das
jne
cs
sbb
or
push
push
es
js
lahf
jnp
dec
lea
dec
movb
pop
sti
xor
mov
test
adc
sbb
pop
jno
sarl
inc
mov
dec
or
loopne
sbbl
or
jg
xor
roll
aas
mov
xchg
pop
das
mov
ret
xor
cs
arpl
sbb
xor
test
mov
lret
xor
ja
inc
mov
pop
sarl
mov
add
in
insl
pop
or
xchg
mov
loope
mov
repz
dec
mov
test
sbb
cmp
xor
add
pop
inc
mov
adc
popa
aad
pusha
lock
mov
mov
aad
jns
mov
fnsave
push
ret
aam
dec
sbb
xchg
mov
add
imul
sti
push
add
popa
sub
lahf
ret
sahf
sbb
xorl
xchg
push
sub
addb
adc
fbstp
push
pop
mov
push
cmp
pop
adc
movsb
pop
imul
ret
push
adc
add
and
mov
int
xchg
jno
and
pop
mov
inc
and
adc
cmpsl
and
xor
sub
xor
mov
sar
adc
or
mov
push
add
sub
cmpsb
xchg
xlat
in
addps
mov
mov
loop
inc
sub
ss
hlt
cmpsl
adc
or
dec
clc
repnz
mov
fwait
mov
cld
lret
or
add
push
enter
xor
push
xchg
cmc
xlat
xor
hlt
mov
inc
sub
int
add
push
and
mov
add
test
movsb
lods
stos
cmp
add
lret
xchg
aad
jg
mov
jmp
insl
out
jbe
and
ss
mov
xor
sub
addr16
pop
jecxz
or
jmp
xchg
or
cs
or
xor
and
rcrl
into
repz
add
fdivrl
leave
dec
mov
adc
ficomps
bound
push
icebp
mov
sub
insl
fs
cmp
lea
dec
cmp
stos
jne
in
mov
out
pop
movb
scas
js
cwtl
mov
add
sub
mov
int
xor
mov
test
pop
jb
shlb
lods
shll
adc
sub
rcll
mov
mov
popa
xchg
xchg
inc
ret
mov
scas
test
and
mov
adc
mov
fmuls
pop
dec
or
or
outsb
addr16
std
gs
lahf
xor
addb
mov
inc
pop
sub
mov
inc
xchg
scas
jmp
and
ja
test
and
cmpsl
xor
or
adc
or
add
movsl
push
pop
or
xor
cmp
pop
adc
movsb
mov
cmp
xlat
xchg
ds
je
lds
stos
dec
dec
sbb
adc
xor
sahf
outsl
mov
inc
pop
adc
mov
movsb
mov
jp
mov
mov
push
gs
inc
mov
call
dec
mov
push
sub
mov
fs
xchg
jg
push
or
arpl
cmp
push
lcall
inc
push
sbb
push
inc
loope
movsl
fstl
mov
ss
inc
stc
and
xor
xchg
pop
inc
movsb
pop
and
pop
out
scas
adc
cmpl
dec
aas
int3
test
jae
sub
push
gs
mov
pop
inc
iret
sub
and
aas
and
pushf
fsubrs
xchg
loopne
push
fisttpl
lret
mov
pop
pop
call
fnsave
dec
arpl
sub
jb
imul
shrb
sbb
sub
outsl
or
pushf
adc
push
repz
pusha
pushf
or
xchg
push
test
pusha
mov
popf
mov
lods
lea
loop
and
test
xorl
push
add
xor
sub
adc
daa
imul
cmp
inc
adc
cmp
add
adc
sub
sbb
pop
or
sub
or
mov
add
adc
sbb
mov
xor
pop
sbb
jno
xor
cmp
imul
or
test
inc
sub
xor
mov
fs
push
xor
ss
add
nop
pop
adc
push
xchg
jo
jo
lea
xor
imul
stc
daa
jp
arpl
mov
cmp
add
orl
xchg
cmovbe
xor
adc
mov
das
sbb
rorb
adc
movsl
adc
outsl
xchg
pusha
mov
sub
pop
xchg
mov
pushf
scas
sub
jnp
mov
sbb
push
and
add
add
sbb
cwtl
int3
push
jecxz
jecxz
push
daa
sub
lds
push
imul
cmp
and
xlat
mov
test
addr16
lea
movsl
stc
xchg
fcmovnb
gs
outsl
insl
int3
sub
inc
cmp
into
leave
dec
xor
inc
stc
fnstenv
les
or
mov
sbb
outsb
mov
shrl
movsb
push
xchg
dec
sub
rolb
popa
pop
pushf
mov
std
push
mov
sbb
cmp
lds
mov
add
adc
hlt
jmp
xchg
pop
dec
lods
scas
sahf
push
loop
lea
mov
and
lods
xor
push
push
loope
push
mov
mov
push
stos
mov
ret
clc
adc
add
lahf
outsl
push
or
or
bound
or
mov
sub
mov
les
mov
outsl
rolb
das
loop
ja
add
jno
inc
push
lret
pop
ret
and
or
dec
mov
mov
into
inc
mov
jo
mov
das
test
mov
dec
cmp
or
push
jo
xor
mov
lea
adc
stos
jmp
jmp
rcll
ljmp
pushl
or
mov
and
and
push
cmp
sub
mov
add
mov
dec
shrb
add
dec
pushf
dec
xchg
mov
xor
orb
sub
es
xor
cmc
and
sbb
enter
dec
das
or
shlb
jg
dec
in
mov
and
sbb
and
jg
xchg
xchg
lock
test
fnstenv
jno
and
and
pusha
add
pop
push
pop
rolb
and
xchg
test
and
add
nop
and
scas
xchg
mov
neg
mov
mov
adc
pop
xchg
in
and
and
or
aam
aas
flds
or
sbb
ret
push
or
loopne
scas
fs
mov
test
xchg
outsl
or
mov
rcrl
dec
cmp
imul
dec
dec
sbb
adc
cmpsl
out
add
sbb
mov
xor
imul
popf
push
or
cmp
mov
or
push
adc
xchg
nop
sub
adc
sub
leave
cwtl
sarl
fwait
add
adc
fwait
push
mov
adc
lods
lea
pop
fs
xchg
push
ret
andb
dec
cmp
adc
cmp
add
mov
sahf
sub
dec
dec
jns
popa
xchg
dec
or
imul
jg
sbb
sbb
addr16
push
lahf
push
cmpsl
push
and
cld
jmp
mov
and
pop
sbb
aas
jecxz
ja
or
mov
cmp
ret
and
sub
aas
inc
jecxz
pusha
jmp
int
adc
mov
test
xor
inc
lahf
hlt
aad
push
fs
and
pop
sub
scas
sahf
shrb
ficoml
mov
adc
adc
xchg
lock
and
addr16
mov
aad
fcomps
iret
jmp
nop
lock
das
inc
mov
mov
fmul
in
sahf
movsb
jo
mov
bound
aaa
push
xchg
sbb
fcomps
and
popa
mov
out
aaa
add
dec
decl
cmp
mov
jmp
xorb
jbe
std
push
imul
push
cmc
out
xchg
inc
pushf
add
fdivs
call
sbb
and
lahf
jns
or
cmp
add
jnp
push
mov
xchg
leave
ret
xor
pusha
rol
sysret
dec
inc
sbb
add
pop
dec
roll
sbb
xchg
roll
fwait
test
cmp
lods
lahf
popa
notb
add
loop
adc
pop
rcl
cmp
js
popa
aas
adc
cs
or
add
jne
int
jb
adc
pop
mov
or
dec
xchg
mov
push
push
dec
add
push
outsl
mov
and
dec
imul
mov
adc
cmc
sti
out
adc
inc
add
mov
add
dec
imul
shll
cmp
popa
scas
or
aaa
sub
cmpsb
xchg
xlat
test
loope
clc
mov
push
subb
inc
and
xchg
and
movsb
hlt
sub
jmp
xor
out
ret
push
and
push
inc
or
xchg
push
push
jo
out
xchg
bound
jno
and
loope
xchg
adc
test
or
out
loop
pop
inc
jmp
stc
insb
and
push
xor
xchg
xor
sub
daa
dec
inc
or
cwtl
cmp
xor
adc
ljmp
arpl
shll
inc
and
pop
lret
add
jecxz
bound
arpl
fwait
inc
xchg
or
jne
ja
movsl
icebp
mov
inc
or
push
push
fdivrs
dec
mov
and
push
or
pusha
mov
jbe
pop
icebp
pusha
movsb
add
leave
mov
mov
aam
mov
and
push
lret
sbb
xchg
subb
test
adc
xchg
mov
ret
sbb
dec
stos
sti
sbb
jmp
mov
sbb
fistl
push
dec
pop
cmpsl
repz
cmp
fdivrl
notb
pop
pop
es
sbb
jb
xchg
or
xchg
dec
sub
fs
xchg
outsl
mov
add
add
sahf
ja
cmpsb
es
sti
or
movsb
addl
push
push
mov
inc
add
ljmp
push
xchg
pop
xchg
add
rcrb
mov
mov
xchg
test
push
or
nop
stos
jno
xchg
pop
add
ss
inc
fnstenv
and
arpl
and
dec
adc
adc
jno
xchg
mov
and
pop
and
or
push
cmpsl
testl
xorb
xlat
mov
adc
xchg
inc
popa
pop
rcl
inc
pop
pop
loopne
lea
test
add
mov
pop
lock
scas
movzwl
comiss
scas
adc
xorb
outsb
adc
xchg
cltd
xchg
cltd
xor
jl
push
inc
or
int
fcmove
int3
mov
add
sbb
cmp
mov
and
sub
jmp
pop
mov
dec
popa
movsb
inc
popa
loop
adc
xchg
xor
push
es
and
ds
stos
and
or
inc
push
and
pusha
movdq2q
mov
imul
pop
xchg
pop
loopne
aam
cld
les
adc
pop
dec
push
sub
mov
dec
fcompl
fistpll
cltd
loope
mov
cmp
add
mov
sbb
adc
xchg
mov
sbb
jae
out
add
lcall
mov
pop
jno
push
addl
daa
jmp
mov
or
and
pop
js
jecxz
xlat
dec
sbb
inc
iret
pop
bound
mov
icebp
mov
and
push
and
stos
sbb
push
call
pusha
pop
rcrb
rclb
call
out
test
pop
xchg
dec
push
lds
loopne
lret
inc
outsb
xor
loopne
pop
add
and
adc
rcl
dec
lods
aad
mov
das
test
gs
mov
subb
jp
xchg
xor
out
pop
lock
daa
cmpsl
jecxz
js
movsb
jno
rorl
adcb
cmp
loopne
pop
jge
les
dec
rcrb
out
popa
push
cmc
adc
and
shll
mov
dec
outsl
test
sub
push
push
pop
sbb
scas
xchg
mov
and
stos
sti
jp
xchg
add
scas
ret
shrb
popa
bound
cmp
ds
or
fbld
sub
mov
aaa
loope
lock
call
jecxz
mov
xchg
mov
push
sub
arpl
sarl
in
nop
rcll
les
mov
adc
jo
popa
call
or
les
mov
mov
mov
call
sbb
or
push
fwait
test
loope
xchg
jnp
mov
mov
pop
jnp
addl
xchg
shrl
inc
push
sbb
mov
imul
jae
in
arpl
pop
fcmovnbe
mov
sub
dec
mov
sub
and
out
aam
mov
cmp
xchg
scas
jg
test
sub
pop
movsb
mov
add
add
loope
push
dec
cli
mov
fstl
or
test
rol
fcoml
daa
add
dec
cmp
adc
xchg
int
arpl
and
push
daa
jg
stc
loope
pop
add
xchg
mov
stc
jmp
add
push
mov
lea
add
mov
enter
inc
arpl
daa
push
add
and
or
aam
inc
dec
inc
mov
aas
mov
faddl
loopne
into
adc
sub
sbb
cmp
test
adc
mov
sarb
in
cmp
divl
push
sbb
rorb
dec
loopne
lret
scas
mov
inc
mov
out
cwtl
xchg
add
sbb
iret
test
rorb
subl
xor
mov
rorb
jle
pop
mov
sti
dec
push
test
pop
or
insl
leave
sub
call
sbb
bound
or
fldenv
shl
push
adc
repnz
dec
push
xchg
fsubs
add
sbb
loope
pop
stos
addr16
lahf
adc
mov
idiv
jno
mov
xchg
lods
lcall
out
pop
xchg
in
sbb
sbb
cwtl
movl
sbb
test
out
inc
pop
xlat
test
fcoms
out
add
stos
fcmovb
mov
sarl
adc
lock
or
pop
dec
fs
xchg
lret
loopne
add
addr16
cmp
rcl
mov
ret
inc
mov
lods
push
movl
dec
scas
sub
imul
inc
sub
xor
jge
adc
imul
gs
out
out
clc
adc
testl
push
ror
call
mov
jns
sub
inc
sti
xchg
adc
iret
movsl
cmp
iret
ss
enter
add
cmp
jno
xor
push
push
add
mov
rcrb
sbb
jo
ficompl
not
bound
xchg
or
cs
addr16
out
and
xchg
and
adc
mov
xchg
push
por
xchg
mov
mov
mov
jp
shr
jbe
cmc
inc
loop
and
fldt
sbb
pushf
jp
push
pop
icebp
mov
pop
mov
dec
push
add
call
pop
sbb
cmpsl
movsb
sbbb
add
ret
das
imul
adc
jo
movsl
dec
aad
cmp
cmp
inc
dec
mov
pop
nop
fadds
rcl
popf
adc
adc
loope
scas
out
push
dec
aaa
sub
add
dec
and
dec
enter
mov
pop
dec
xchg
push
fstpl
jl
push
push
lret
xor
lret
insl
cs
dec
xor
frstor
imul
and
xchg
test
cltd
inc
lcall
es
cmp
ljmp
fs
aas
sbb
xchg
adc
sbb
loop
orl
or
pop
jmp
cld
lss
or
push
jno
movsb
loop
sbb
loope
les
repz
shll
add
cmp
xchg
daa
adc
inc
in
or
pop
sbb
push
sbb
pop
test
ret
pop
push
ss
jmp
test
or
cmp
xor
insl
dec
cmpsl
aas
mov
pop
xor
and
jns
mov
mov
mov
rolb
push
cmp
push
jmp
sti
cmp
mov
xor
sahf
inc
lret
je
jmp
cmpsl
push
mov
shll
add
add
pop
mov
sbb
js
inc
pop
push
mov
adc
pop
jmp
pop
in
pop
popf
mov
or
mov
sahf
in
ljmp
fcoml
icebp
sub
add
loopne
rcrb
mov
push
loope
pop
scas
jecxz
jne
inc
hlt
adc
or
fists
add
aaa
or
adc
fistpll
or
inc
popa
test
mov
push
sbb
or
pop
sub
sarl
imul
test
xchg
cmp
push
out
movsb
push
sbb
movsb
mov
pop
pusha
cmp
or
out
lahf
ret
push
push
jg
sub
sub
pop
dec
jo
movsb
jns
enter
or
sbb
sbb
sbb
or
jo
hlt
mov
add
dec
mov
cltd
or
sbb
in
or
andb
and
jnp
or
jmp
fsubrl
and
fldenv
and
inc
dec
adc
icebp
mov
mov
push
loop
pop
sub
sub
faddl
xchg
pop
loop
add
ds
int
icebp
pop
fbstp
lcall
cmp
shl
jge
mov
rclb
lods
add
mov
mov
jmp
jb
cmp
cmc
je
xlat
cmp
push
iret
push
jle
shlb
stos
adc
rolb
movsl
xchg
or
ds
sbb
add
rcl
sarb
push
xor
sub
dec
pop
xor
lock
in
mov
fwait
icebp
ficoml
inc
js
rcll
push
loopne
sub
mov
add
or
lret
das
xchg
add
movsl
lds
sbb
cli
inc
mov
dec
outsb
adc
mov
pop
xor
sbb
xor
loopne
mov
inc
and
inc
call
icebp
in
test
divl
cmp
dec
adc
adc
and
ds
xor
hlt
ljmp
out
fcmove
sarb
inc
ss
lock
push
adc
mov
add
xchg
push
mov
lock
lods
mov
mov
pushf
or
subb
pop
lock
and
sbb
out
scas
loope
gs
xchg
push
inc
xchg
mov
test
cmc
cmc
xchg
or
test
mov
cmp
sbb
out
enter
push
les
test
mov
sub
iret
and
fnsave
das
push
mov
add
pop
mov
sub
mov
dec
test
mov
push
mov
pushf
out
aam
adc
out
in
push
pop
jge
ret
push
push
cli
fmull
pushf
repz
fcoml
loopne
dec
push
clc
sarb
mov
cmp
in
adc
mov
aad
call
and
out
pop
jp
js
adc
pop
pop
dec
fwait
cmc
jae
stos
mov
jmp
loope
push
mov
inc
cmc
loop
jmp
sub
mov
fwait
stos
adc
mov
mov
xor
pusha
or
cmp
aam
js
jae
ss
andb
and
xchg
xor
cli
lea
xchg
fsubs
and
xchg
mov
jecxz
push
ret
imull
mov
test
xor
add
xor
imul
in
imul
dec
andb
adc
jno
pop
adc
call
add
scas
das
jns
adc
or
and
ss
lret
pop
and
shlb
dec
inc
adc
hlt
push
mov
push
dec
in
add
and
or
mov
push
pop
sbb
cld
or
pop
dec
sub
imul
mov
lret
xlat
inc
fstpl
mov
lcall
sbb
adc
xchg
stos
or
adc
add
ret
pop
xchg
and
rorb
stos
je
sbb
mov
lcall
mov
mov
inc
cvtps2pi
and
or
sbb
adc
movsl
div
push
lock
clc
out
das
ficoms
iret
xor
mov
sub
or
shll
sti
pop
mov
addl
pop
lock
dec
mov
test
rolb
and
dec
movsb
jo
or
pop
mov
divl
pop
pusha
popa
dec
lods
mov
repz
lock
stos
sub
push
pop
and
fdivrp
pop
pop
mov
mov
sbbl
pusha
imul
jecxz
fsubs
aas
icebp
or
ja
jne
push
or
cmpsb
pop
out
mov
jle
aaa
incl
add
mov
rol
addl
jae
adc
popa
jmp
xchg
notb
mov
sub
jo
shll
loopne
dec
mov
mov
push
movsl
cmc
push
inc
mov
shl
pusha
xor
xlat
add
push
enter
push
sbb
push
sub
adc
add
push
pop
jno
lret
jo
or
or
lea
cwtl
push
xchg
aad
and
in
mov
sbb
in
add
je
adc
inc
test
adc
adc
push
inc
xchg
mov
call
add
jg
pop
imul
lock
mov
aad
jmp
sub
mov
ja
leave
iret
add
movsb
movsl
push
push
mov
out
inc
fstpt
test
stos
lahf
adc
and
stos
jmp
popf
push
lods
inc
iret
test
in
push
into
cmp
gs
movsl
dec
xchg
push
in
pop
daa
mov
push
outsl
frstor
adc
push
dec
cmp
push
scas
jnp
mov
mov
pop
call
mov
inc
jmp
pop
icebp
mov
or
scas
loope
jecxz
ds
jp
repnz
hlt
and
icebp
pop
incl
dec
ret
adc
sub
mov
repz
imul
mov
or
adcb
xchg
sbb
addr16
roll
push
imull
test
pop
dec
sub
cmp
xchg
xor
movsb
sti
movsl
stos
aad
inc
sbb
sub
add
shll
mov
add
adc
jmp
in
subl
push
jl
and
dec
inc
push
les
jmp
push
jbe
lret
xchg
mov
es
xchg
jecxz,pt
xchg
or
mov
rcrb
movsl
fs
not
add
cmp
cmp
addr16
repz
jle
inc
aam
clc
insl
ss
adc
adc
jno
xchg
repz
cld
dec
mov
call
dec
pop
or
xor
sbbl
enter
in
sbb
jp
adc
adc
int3
sahf
cmp
movl
sahf
pop
mov
leave
out
and
lcall
mov
int
inc
pop
mov
inc
mov
fcoml
lcall
arpl
cmp
shlb
leave
mov
movsl
mov
add
sub
inc
dec
dec
enter
loop
sub
dec
adc
addl
inc
ljmp
ja
sbb
push
mov
inc
cmp
popl
or
push
xlat
and
loopne
cwtl
pop
pop
add
mov
push
pandn
sahf
add
cli
ret
pop
add
iret
mov
cwtl
scas
sbb
ret
rolb
cmp
scas
jecxz
push
sahf
push
test
test
rclb
mov
mov
push
leave
sbb
aam
add
pop
pop
andb
ret
xor
scas
mov
xlat
jno
addb
pop
mov
je
lahf
lods
xchg
icebp
daa
sbb
mov
mov
add
outsb
filds
shll
xchg
fstpl
push
scas
push
dec
xchg
ffreep
pop
add
lahf
nop
mov
cmpsl
js
dec
notb
adc
ja
mov
adc
dec
or
ficomps
and
subl
popa
arpl
clc
lock
fldpi
dec
aaa
lret
pusha
pop
test
or
mov
scas
movsb
jg
add
loopne
inc
cmc
sarl
sbbb
mov
adc
pop
test
dec
addr16
fmul
cmp
cltd
sub
mull
add
lods
or
sbb
xlat
mov
ja
cmpsl
mov
or
xchg
pop
pop
mov
jecxz
out
pusha
or
mov
push
outsb
pop
pop
out
pop
repz
add
mov
add
xchg
sbb
xlat
mov
or
inc
jmp
es
ja
jno
decl
fildl
xchg
addb
push
scas
and
shll
xchg
test
mov
arpl
sbb
pop
mov
sbb
inc
les
sbbl
or
stos
rcr
add
cmc
xchg
push
jno
fstl
xchg
pop
sub
sbb
sub
jno
scas
pusha
add
call
pop
stos
mov
lods
add
hlt
sub
mov
mov
vandps
pop
lret
add
mov
sbb
cmp
stos
adc
sub
mov
daa
and
add
add
addl
push
xchg
aaa
aam
xchg
jo
aad
icebp
and
mov
xor
mov
popf
aas
inc
inc
mov
loope
cmc
int3
jl
test
icebp
orb
push
std
and
sub
std
scas
add
fldenv
and
xchg
test
ret
add
inc
sub
fimuls
mov
xor
inc
stos
sbb
cmp
fwait
popa
push
jg
push
mov
adc
xor
test
sbbb
lret
fwait
cmpsl
loopne
or
xchg
in
movsb
mov
sbb
mov
adcb
adc
addr16
cmp
push
sbb
pop
cmpsb
daa
xchg
ja
jmp
daa
inc
push
aas
mov
lahf
xor
test
sub
outsb
push
and
ss
outsb
mov
pop
mov
xchg
adc
inc
ret
and
pop
sub
mov
jae
add
dec
push
mov
push
cmc
add
xor
test
push
dec
addb
rclb
push
in
or
dec
dec
push
inc
aam
rcll
mov
aaa
pop
xor
sbb
popa
push
sub
maxps
xchg
call
cmp
jb
popf
lds
push
popa
xor
inc
dec
mov
push
pop
mov
pop
pop
call
add
adc
sub
pop
ret
shlb
jae
inc
test
jnp
popf
gs
daa
pusha
jne
xor
and
cmp
jmp
cmpb
jp
push
mov
pop
jae
test
cmp
sub
fdivs
mov
pop
movsb
push
or
gs
movsb
fucom
or
fadds
xchg
mov
rorl
mov
inc
dec
loope
popa
add
pusha
pop
iret
mov
dec
jp
jmp
xchg
jne
pop
jmp
jnp
sbb
fnsave
aaa
mov
jae
jns
xor
jg
add
push
sub
sub
in
mov
dec
in
xchg
dec
es
movsl
out
cs
ljmp
fidivs
imul
fwait
jnp
insl
fbld
dec
xchg
daa
sub
lea
lahf
xor
sub
push
cs
popf
fildl
movsb
int3
mov
jne
pop
movw
cmp
inc
and
mov
pop
xlat
jecxz
pop
scas
push
movl
push
sbb
xchg
loope
or
gs
loope
jo
dec
cmp
dec
push
fwait
imul
inc
shlb
xchg
mov
sub
jecxz
and
fistpll
xchg
and
pop
inc
mov
mov
out
xchg
loop
stos
adc
popw
stos
mov
xorb
test
enter
add
and
add
pop
cmp
xchg
mov
out
loop
insl
loope
aam
orb
push
add
adc
fcoms
inc
daa
out
mov
and
pop
mov
sbb
mov
pop
fsubs
test
gs
sub
leave
clc
movsb
ja
cwtl
inc
in
out
imul
daa
sbb
arpl
and
sbb
inc
sub
pop
jmp
pop
cmpsl
mov
and
pop
jge
es
pop
pop
jg
fbld
icebp
orl
inc
jg
mov
add
and
mov
dec
mov
adc
or
inc
mov
jge
test
gs
or
lods
lods
daa
xor
jne
add
and
es
stos
push
dec
arpl
mov
sbb
xchg
adc
les
dec
das
xchg
jae
sbb
adc
loopne
mov
push
dec
add
dec
mov
xlat
je
mov
xor
and
sub
cs
inc
and
adc
cmpsl
mov
lods
xchg
sub
xor
adc
mov
fisttpl
loopne
xor
mov
sbb
sub
test
xchg
adc
iret
jmp
insl
dec
loopne
fs
cmp
aam
pushf
xchg
mov
test
and
add
mov
jne
fiadds
mov
lahf
imul
push
loope
inc
filds
loop
jle
pop
or
cmpsl
inc
jbe
push
cmp
sbb
xor
xor
xor
mov
dec
and
inc
xchg
pop
jns
insl
mov
inc
and
inc
inc
xchg
xlat
ror
dec
bound
insb
loopne
not
xor
or
movsl
add
mov
mov
push
or
push
sbb
scas
jo
mov
pop
pop
mov
iret
pop
xor
cmp
in
sbb
lret
repz
loopne
shlb
neg
xchg
adc
add
mov
jmp
mov
leave
add
jo
sub
pop
ss
test
push
push
rolb
sti
dec
dec
sbb
xor
push
js
pop
outsl
and
mull
add
mov
or
jae
push
jg
adc
add
aaa
mov
push
movsb
xchg
clc
loope
push
pusha
xchg
xchg
inc
lods
xor
insl
pop
cmpsl
insb
fsubrl
mov
and
add
mov
out
les
je
dec
or
inc
lods
push
dec
xchg
lea
mov
fsubs
mov
dec
cs
mov
xor
daa
cmpsl
inc
adc
add
ret
aas
sub
iret
call
mov
cmp
aaa
xlat
dec
call
or
xor
add
lods
rcll
lret
sbb
add
and
pavgw
add
outsb
push
inc
popa
and
sar
rcrl
dec
test
mov
ret
gs
and
fs
and
pop
sar
into
push
shrb
enter
call
pop
mov
add
adcl
add
sub
outsl
inc
int
ret
rcl
fwait
pop
adcl
mov
and
ds
sbb
xor
sbb
cmpsl
add
mov
inc
mov
fdivl
xor
mov
xchg
mov
cmc
cmp
sbb
cmp
icebp
adc
out
shlb
add
pop
bound
mov
jnp
xchg
mov
push
jmp
scas
adc
push
add
ja
cmpsl
jg
push
pop
movsb
in
call
adc
sub
xchg
mov
rcr
mov
jecxz
push
push
inc
pop
mov
xor
mov
andb
sbb
ret
test
sbb
and
push
in
loope
add
ret
test
xchg
adc
pop
loope
inc
inc
daa
mov
push
stc
rol
dec
jmp
jg
pop
add
xorb
aam
shr
sbb
sbbl
or
xchg
nop
add
in
nop
mov
or
mov
or
pop
mov
and
xlat
xchg
xchg
test
adc
push
dec
sub
scas
int
loope
inc
sbb
adc
jp
andb
push
push
sub
scas
into
insl
inc
cmp
decl
push
insl
in
xor
nop
push
adc
jo
adc
lea
xchg
add
mov
imul
and
pushf
mov
jmp
add
cmpsb
adc
cmpsl
mov
mov
clc
mov
inc
lahf
or
lahf
cmp
fidivrs
mov
aaa
or
stos
xor
lret
inc
or
push
inc
push
cmp
xchg
and
mov
or
mov
xorl
add
adc
xchg
or
es
push
cmc
mov
mov
ret
xlat
mov
or
sub
ret
xor
inc
and
mov
nop
push
cmp
push
push
scas
out
ret
pushl
scas
pop
hlt
and
getsec
jbe
fwait
popf
mov
mov
pop
jge
pop
ret
imul
jmp
xchg
or
sti
push
out
mov
push
fisttpll
pop
divl
push
push
push
cmp
pop
mov
mov
js
jns
pop
aam
dec
mov
cmc
xchg
jp
gs
lds
mov
test
push
dec
sbb
sub
int3
mov
std
adc
xchg
test
and
out
cmp
sbb
call
clc
aaa
or
imul
cmp
faddl
fisubrs
sub
sub
sub
jno
sti
adc
xchg
mov
imul
call
insl
ljmp
loope
sbb
cmpsb
mov
shlb
dec
and
cwtl
xchg
inc
fldt
pusha
mov
rcl
jge
push
pop
push
inc
clc
movb
adc
mov
push
pop
inc
sbb
dec
dec
sbb
sbb
inc
mov
cmp
subb
and
xor
add
or
movsb
jne,pt
inc
mov
std
mov
in
mov
mov
push
arpl
sbbb
adc
push
rcrb
and
dec
pop
lret
jecxz
test
and
push
js
cltd
aad
pushf
es
pop
popa
xchg
sbb
push
sub
mov
into
inc
imul
movsl
lret
and
gs
pop
add
cmp
iret
inc
xchg
ret
xchg
rcrb
mov
movsl
jge,pt
dec
sub
daa
push
xor
popf
add
and
dec
xchg
push
fwait
push
loopne
lea
and
xchg
fsubrs
pop
mov
mov
das
subl
adc
mov
push
int
inc
cmp
pop
inc
xor
add
inc
gs
add
cmpsl
in
mov
xchg
adc
mov
lea
rol
or
mov
pop
stos
add
scas
and
mov
pop
pop
jecxz
mov
push
and
jmp
xchg
mov
mov
inc
in
mov
and
jo
mov
and
and
dec
aam
lea
pop
in
cwtl
pop
cltd
clc
in
jns
aas
ds
push
rorl
dec
lods
dec
jl
cltd
iret
outsb
xchg
jne
push
mov
mov
jle
cmp
cmp
or
fwait
nop
add
popf
repz
jne
push
pop
mov
and
shrl
pop
xlat
mov
pop
lds
or
push
adc
xchg
jge
and
xchg
inc
lods
mov
jb
aaa
movb
xchg
imul
or
dec
ret
push
popf
dec
xchg
sbb
mov
mov
push
fadds
adc
xor
mov
daa
or
push
sub
jbe
arpl
jmp
and
rol
and
pushf
dec
sub
mov
mov
push
xor
cmp
test
sbbb
aad
add
cltd
push
sbb
lret
mov
ss
mov
and
cmp
mov
xchg
ret
repnz
mov
push
dec
lret
outsb
mov
add
or
ds
and
call
xlat
lock
call
pusha
test
std
test
push
mov
iret
imull
ficoml
and
push
pop
loopne
ds
push
rclb
pop
pop
inc
sbb
pop
sub
js
sub
pop
mov
cmc
jp
es
mov
orl
adc
lret
cmp
enter
lds
jbe
add
shll
push
push
or
push
and
dec
repnz
popf
mov
lret
inc
adc
and
push
in
pop
mov
lret
mov
adcb
sti
xchg
stos
aaa
das
lret
push
subl
add
inc
subl
orl
mov
dec
sbb
negl
rorb
sbb
inc
sub
popa
inc
cmp
adc
lock
jmp
mov
jecxz
scas
ljmp
imull
and
inc
cmp
fidivl
lahf
inc
sub
sarb
sub
adc
push
das
xchg
rcrb
cmp
or
or
iret
push
aaa
mov
xchg
xor
call
clc
fildll
inc
inc
mov
lret
cs
jae
jmp
pushf
mov
subl
push
push
scas
arpl
fisubl
cmp
add
popa
add
adc
adc
int
adc
mov
mov
jge
movsl
loop
dec
mov
popf
push
dec
and
adcb
xor
xor
adc
sub
sub
inc
lcall
adc
xor
adc
sub
sbb
mov
or
or
xchg
dec
mov
dec
decl
insb
adc
pusha
test
testl
or
push
pushl
sub
subl
dec
dec
mov
mov
cld
cmc
sub
inc
ret
lcall
movsb
pop
mov
addl
movsb
int3
popa
jecxz
dec
cmpb
add
mov
cwtl
push
mov
scas
jo
add
pop
stos
xchg
xlat
mov
or
loop
and
add
out
loopne
mov
adc
inc
cwtl
sbb
mov
adc
int
out
sbb
pop
dec
popa
or
pop
add
xchg
jbe
mov
sub
iret
out
mov
push
mov
ret
dec
dec
and
pop
cmp
ret
push
nop
aam
pop
ja
dec
in
push
and
mov
loope
fisttps
or
pop
add
fisubl
nop
icebp
mov
xor
mov
sbbb
push
cwtl
negl
cmpsl
aas
je
aam
sarl
adc
adc
jo
lds
push
jno
add
add
mov
inc
stos
adc
lea
mov
jmp
adc
mov
imul
cmc
fs
ljmp
lcall
movsb
shrl
jge
adc
dec
lock
sbb
pop
cmp
adc
xchg
out
rolb
adc
sbb
push
push
push
dec
jns
sbb
jp
adc
popa
mov
sbb
shll
and
in
addb
push
sbb
inc
jno
push
jo
sub
les
rol
add
or
cltd
lcall
pop
xchg
aas
pusha
popf
mov
aam
test
adc
ljmp
cltd
repz
test
cwtl
leave
cmp
sub
mov
xor
mov
fnsave
pop
in
push
scas
push
inc
ljmp
mov
adc
inc
push
mov
cld
jnp
jge
mov
fldt
adc
inc
mov
jmp
mov
popa
arpl
shll
cmp
lods
and
jecxz
adc
pop
in
sbb
adc
addl
sbb
js
sbb
sbb
lock
shrl
leave
mov
cmp
jne
daa
xor
xchg
stos
adc
cld
adc
xor
insb
adc
push
sbb
aaa
push
push
pop
andl
xchg
push
pop
hlt
push
inc
push
and
pop
sub
movsb
xchg
lret
cwtl
fildl
sub
jo
mov
es
xchg
xor
sbb
add
push
or
mov
rolb
int
xor
push
cmp
sub
nop
ret
ret
dec
aaa
or
inc
dec
xchg
pop
or
ret
pop
pop
cmp
mov
outsl
add
enter
nop
into
sysret
lds
dec
test
add
cmpsl
je
and
sbb
mov
xor
test
in
cmp
sub
cwtl
stos
add
movsl
sub
inc
call
fists
jae
inc
xlat
xor
jae
dec
mov
stc
sbb
pop
dec
push
push
add
mov
fcoml
das
xlat
outsb
movsb
lock
and
movsb
mov
or
and
pop
scas
pop
xorb
add
rol
nop
jnp
and
arpl
mov
and
test
test
push
rolb
imul
xchg
testb
cmp
testl
hlt
mov
and
push
cmp
in
psrlq
and
fadds
sbbl
imul
mov
push
mov
sub
es
inc
ja
lock
shrb
aam
pushf
adc
imul
pop
jno
mov
jns
cmp
daa
cmp
mov
add
adc
mov
xchg
push
jbe
cltd
call
xchg
mov
mov
insl
xchg
cmc
jno
or
aas
xchg
inc
sbb
push
cs
pop
jnp
sahf
sbb
das
lcall
int
add
xchg
add
xchg
inc
psllw
les
mov
cmc
int
sbb
pop
push
lcall
insl
xchg
adc
mov
jnp
jle
shlb
jmp
mov
jge
adc
andl
repz
jae
xchg
pop
fstp
xchg
push
pusha
mov
lock
out
adc
mov
lods
sbb
in
scas
rcl
call
sahf
inc
popf
rcrb
mov
sub
add
and
adc
push
xor
jbe
add
shll
outsb
sbb
pop
mov
jecxz
mov
mov
sbb
xchg
mov
push
lret
cmpxchg
push
pushf
mov
aas
and
or
xchg
shlb
shll
in
mov
sbb
cld
cli
bound
dec
cvttps2pi
jbe
inc
xor
add
xlat
adc
add
nop
push
or
roll
mov
jmp
dec
ss
fadds
and
jo
xor
arpl
mov
into
insl
xchg
fstl
lods
or
add
inc
in
jmp
cmp
aad
adc
push
packssdw
jb
push
xchg
adc
or
ljmp
test
les
mov
mov
inc
sbb
fsts
jne
jg
dec
xchg
js
repnz
dec
sbb
sbb
dec
test
call
mov
push
xor
scas
push
ficoms
pop
mov
mov
dec
shr
cltd
aam
push
push
popf
pop
cmp
fstpl
jo
or
decl
inc
aaa
jne
xor
out
add
sbb
gs
fwait
xor
or
dec
ja
imul
push
loopne
cmp
mov
xor
mov
outsb
out
subl
mov
adc
aas
out
or
mov
sbb
dec
xor
sbb
imul
push
gs
mov
push
sbb
dec
xor
push
xlat
inc
jecxz
aaa
mov
xor
dec
popf
scas
jno
test
add
pop
loope
lahf
add
mov
jmp
mov
imul
ret
jo
stos
pop
jns
dec
popa
push
mov
arpl
or
mov
sbb
pop
mov
or
mov
add
adc
dec
nop
sbb
pop
lock
insl
mov
aam
and
push
xchg
mov
dec
jge
mov
mov
sub
jne
mov
mov
mov
sti
adc
adc
cmp
lods
shlb
and
movsl
dec
shl
pop
call
lcall
xchg
cmp
ret
es
mov
das
or
loop
xchg
lods
sub
inc
pop
sbb
adc
rolb
daa
movsl
out
cwtl
subl
sbb
call
dec
mov
ljmp
mov
sub
xor
dec
loop
aas
mov
dec
sbb
adc
sbb
aaa
xchg
push
pop
pusha
jecxz
cmp
imul
ds
test
lock
mov
push
fdivp
movsb
jmp
mov
shlb
push
es
imul
mov
gs
mov
sbb
mov
daa
mov
dec
movsb
movsl
mov
mov
add
dec
mov
test
adc
and
dec
sbb
jg
int
push
push
lock
pop
xchg
fstl
lea
cmp
imul
mov
cmp
cmc
pop
and
popa
add
add
xchg
test
or
hlt
fildll
mov
pop
xchg
jecxz
mov
dec
movsb
cmc
inc
int3
insl
fistl
pusha
xchg
push
fstp
loopne
and
push
push
and
pop
decb
rcrl
add
pop
in
xchg
inc
and
pop
push
js
imul
in
test
fincstp
fisubrs
mov
or
mov
sarl
sbb
movsb
jmp
mov
nop
dec
jp
jmp
or
push
repnz
add
movb
sbb
rcll
inc
jmp
xchg
insb
pop
std
frstor
adc
mov
and
and
hlt
addb
or
mov
dec
cmp
loopne
mov
rcrl
jne
sbb
cli
movsl
dec
or
or
leave
add
dec
adc
or
pusha
gs
mov
cltd
xchg
sbb
adc
dec
arpl
jne
add
pop
sbb
and
xor
adc
movsl
icebp
imul
enter
pop
add
and
pop
clts
in
es
iret
dec
fwait
adc
sbb
sbb
ljmp
arpl
sbb
inc
pop
insl
lods
inc
sbb
int3
lahf
push
inc
push
xchg
aas
sbb
inc
das
push
pop
xchg
icebp
xchg
jbe
lods
xchg
cmpb
xor
fwait
ret
loopne
sub
ret
mov
push
xchg
ss
jbe
dec
add
sbb
pop
or
mov
in
fnstcw
push
inc
loopne
mov
pop
or
mov
add
ror
lea
mov
sub
add
or
mov
cmp
pop
and
pop
nop
sub
cli
inc
mov
inc
jmp
sbbb
addr16
adc
push
pop
fsubrp
shrb
mov
cmp
or
lock
mov
pop
lret
mov
repz
inc
cmp
lahf
dec
push
dec
mov
mov
pushl
xor
inc
lret
icebp
cltd
aam
cmc
outsb
adc
fnstenv
jo
rorl
mov
insb
pop
inc
clc
mov
fs
pop
and
cmc
push
push
mov
push
cwtl
shll
inc
inc
into
rcl
aad
xor
pshufw
test
mov
and
mov
stc
sbb
movsl
sub
lea
xchg
push
insl
fsubs
sbb
aam
cmp
or
cmp
add
inc
adc
gs
movsl
int
xlat
xchg
repnz
repz
add
call
dec
mov
pop
lcall
cmpsb
pop
nop
roll
popa
lret
push
test
cld
lods
out
mov
and
mov
add
sbb
lock
mov
cmc
adc
push
in
es
xlat
adc
cmp
sbb
xchg
or
inc
inc
add
fsub
push
add
dec
and
pop
adc
test
xchg
and
xchg
cmp
inc
mov
or
cwtl
sub
cwtl
fcmovnu
cltd
mov
pop
and
push
cmc
clc
pop
in
or
jmp
andl
in
cmp
cmp
push
cmc
or
cmp
cmp
xchg
mov
clc
add
fiadds
arpl
and
jmp
push
enter
and
pop
gs
and
pop
adc
loope
adc
shlb
add
add
sbb
jbe
mov
mov
and
pop
add
add
add
clc
or
push
jmp
es
add
loopne
and
xor
inc
outsl
das
andl
imull
add
cs
pushf
in
arpl
push
add
mov
jo
mov
dec
lods
imul
in
jmp
clc
lock
xchg
loopne
imull
nop
out
sub
aam
packuswb
xor
push
fldcw
mov
les
mov
dec
xchg
or
ret
shl
pop
xor
loopne
fdivs
add
sub
or
sbb
into
js
cmc
xor
js
aad
pop
add
cmova
addb
push
xchg
aam
fmuls
mov
aaa
sbbb
dec
scas
iret
mov
arpl
shrb
jge
pop
mov
popa
xchg
outsb
fdivrp
pop
xor
pop
jno
dec
ja
rorb
or
aas
mov
aaa
cs
jg
movsl
inc
mov
adc
adc
or
push
inc
adc
dec
jbe
psubsb
jge
insl
lahf
inc
or
adcb
rolb
mov
je
mov
jp
popa
push
mov
dec
mov
add
inc
mov
adc
push
fwait
push
clc
pop
dec
les
les
shr
jp
scas
insl
movsb
sub
inc
xor
add
pop
jno
popa
xor
xchg
or
dec
push
and
test
or
mov
insl
jecxz
and
mov
mov
cltd
popf
jne
js
notb
jmp
loop
test
rcll
mov
push
adcb
mov
pop
and
ljmp
sub
mov
xlat
mov
in
push
push
ret
push
inc
mov
cmp
push
out
push
cs
pop
rcrl
aad
inc
or
xchg
je
lock
pop
lea
push
pop
mov
pop
je
sub
inc
dec
iret
sbb
fidivs
jne
stos
jne
sub
xchg
addl
lcall
adc
shll
and
iret
push
sub
add
std
sbb
and
in
call
and
retw
fwait
jno
sbb
pop
adc
cmp
mov
pop
js
cmpsl
call
rol
or
mov
pop
mov
mov
iret
sub
xor
push
ret
les
nop
cltd
cmp
test
cmpb
leave
sbb
nop
icebp
hlt
sbb
xchg
inc
int
aam
mov
add
pop
pusha
loope
pop
or
popf
inc
sbbb
mov
sub
inc
ljmp
out
add
cmp
mov
dec
push
or
repnz
xor
or
inc
add
mov
xchg
inc
inc
adc
xor
add
pop
js
add
jmp
arpl
popa
fldl
lcall
adc
xchg
xchg
js
popa
cmp
jg
ret
mov
mov
lret
xor
and
aam
inc
push
jae
and
jbe
inc
add
xchg
je
stos
test
pop
xchg
dec
pop
jge
test
adc
dec
iret
outsl
mov
mov
insl
in
les
adc
and
push
or
pop
adc
ja
or
xchg
andb
fistpl
sub
fwait
mov
sti
or
adc
test
cmpsb
push
xor
mov
cmp
pop
xchg
inc
pusha
and
nop
ret
mov
ljmp
fadds
aas
xchg
sub
pop
sub
fsave
mov
repz
jecxz
cmc
sub
inc
sbb
inc
outsl
jno
sti
jl
aaa
add
std
popa
cmpsl
dec
pop
ljmp
mov
add
inc
pop
dec
insb
add
iret
sbb
sbb
xor
dec
push
mov
lcall
or
cmp
sbb
rdpmc
inc
inc
pop
sub
fwait
pop
xchg
push
das
dec
mov
cmp
jl
push
jmp
data16
add
jp
movl
stos
add
enter
xchg
or
pushf
and
loope
xchg
push
fidivrs
add
xchg
adc
and
sub
das
mov
or
dec
aam
sub
mov
push
aas
lcall
inc
push
or
pop
test
adc
add
add
xor
add
stos
jp
insb
vfrczss
pop
mov
mov
cmc
jnp
sbb
dec
push
or
push
dec
data16
dec
push
insl
dec
xor
movhps
push
add
mov
lds
sub
in
push
psrld
or
push
inc
pop
pop
or
lahf
inc
pop
popa
xchg
test
push
sahf
xchg
xchg
dec
fucomi
movsl
fcompp
fildll
lods
adc
adc
push
loop
xor
insl
popf
and
adc
mov
sub
adc
and
fnsave
loop,pt
dec
out
ljmp
inc
jge
cmp
pop
jns
sub
pop
clc
adc
pop
call
lods
mov
xchg
cmpsb
mov
fisubrl
mov
add
sahf
popf
adc
movsb
fsub
add
pop
in
mov
or
sahf
aad
dec
or
xor
xlat
and
inc
js
cmp
adc
test
daa
inc
mov
xchg
xchg
and
movsl
or
popf
test
sub
test
pushf
cmp
mov
ret
push
das
add
jb
dec
outsb
push
enter
sbbb
jge
sbb
outsb
pop
cmp
push
ret
sbb
push
cmpl
mov
pusha
push
movsb
cmp
push
test
mov
dec
add
imul
pop
cs
mov
sbb
shl
movb
leave
adc
ja
jns
xlat
or
and
sarb
ret
movb
subb
fildl
jno
jbe
inc
jmp
inc
xor
fcomip
popa
and
loope
add
js
sahf
rcrb
fsubrs
out
inc
ljmp
mov
sbb
inc
xchg
xchg
fwait
dec
jo
std
push
loope
daa
inc
add
mov
fildll
js
aas
dec
fs
pop
fwait
les
dec
add
push
mov
adc
adc
idivl
div
sti
repz
or
push
jnp
jge
push
sti
pop
in
out
into
out
push
jle
fbld
bound
add
or
pop
jae
aas
pop
jnp
rcrl
xchg
adc
or
sbb
das
arpl
pop
call
cmpsb
cwtl
pusha
sti
jmp
sbb
fwait
jbe
cmp
add
pop
mov
pop
das
inc
roll
lock
fistl
ds
cmp
ljmp
lods
adc
test
ss
push
sbb
jno
call
push
adc
sub
lods
push
xlat
outsb
ret
dec
mov
test
aad
and
jno
cmpb
adc
dec
add
add
jmp
leave
cmp
imul
imul
and
sbb
mov
das
dec
pusha
add
add
dec
pop
fwait
stc
les
inc
sub
mov
sub
sbbb
mov
adc
add
sub
xchg
rcll
je
fbstp
jp
adc
les
sbb
lods
or
dec
push
jecxz
add
insb
sub
pop
xchg
jo
test
sarb
fnsave
pop
sbbb
add
daa
call
add
xor
mov
cmp
lahf
mov
in
movsl
lods
sbb
push
movsl
cmp
xor
adc
inc
arpl
sbb
cmpsb
popa
mov
mov
maskmovq
testl
jp
add
cmp
and
push
cmp
ja
pop
pusha
add
shll
xor
adc
xchg
fs
adc
sti
inc
test
xchg
pop
loopne
jno
inc
or
imul
or
fisubrl
xchg
mov
pop
cmp
inc
inc
or
xchg
cmpsb
xor
and
xor
fnstenv
sbb
mov
xchg
dec
dec
push
push
dec
adc
adc
dec
adc
xchg
cmp
xchg
imull
jo
aas
daa
xor
add
dec
mov
push
sbbl
mov
sub
sub
add
pop
sbb
inc
addr16
out
pusha
aaa
lods
adc
jne
cmp
and
out
add
cs
arpl
jno
dec
or
imul
inc
call
iret
mov
push
call
into
push
outsb
jmp
popf
bound
xor
addl
fisttpll
rcl
sahf
mov
or
or
in
fbld
loope
leave
cltd
sbb
je
mov
mov
cmp
jmp
enter
lods
ret
cmp
mov
sbb
cmp
jecxz
add
jo
mov
shrl
adc
xchg
xchg
adc
mov
pusha
jb
mov
or
ret
sti
xchg
xor
aad
push
in
sub
jp
insb
fucomp
notl
icebp
outsb
jmp
stc
in
adc
cs
insb
pop
notl
repnz
sub
sub
or
mov
sub
sub
push
jbe,pn
loopne
aaa
packssdw
call
jg
xor
jae
push
xchg
add
xlat
loop
and
aad
popa
jp
lods
stc
not
xchg
aad
jae
stos
jb
add
fnstenv
hlt
push
fs
mov
ret
movsb
adc
mov
pop
test
cmp
xchg
add
ror
aam
pushf
orb
lret
xchg
jmp
leave
mov
jmp
popa
or
mov
and
dec
cmp
lcall
xor
imul
das
cmp
or
stos
sbb
mov
mov
test
push
cld
or
xchg
push
and
addl
ret
mov
popf
js
pop
and
and
imul
inc
adc
jb
popa
or
jno
xchg
xchg
jne
pop
out
cmp
sbb
xor
fldcw
dec
push
out
je
shl
xor
pop
clc
cmp
gs
ficoms
add
sub
imul
movsb
ret
add
out
sarl
adc
xchg
je
imul
sbb
outsb
aad
aaa
sti
add
mov
dec
aaa
fisubl
shlb
lods
push
sub
mov
stos
xor
or
ss
sti
inc
sti
push
inc
dec
lds
push
push
pop
test
push
andb
adc
call
or
inc
loop
mov
fbld
hlt
rorb
jo
sahf
xor
aad
insl
ret
cmc
or
movlps
loopne
and
push
out
fstl
lock
cltd
ret
fnstsw
cmp
lods
out
mov
enter
mov
cmp
sub
loop
lods
loope
inc
and
int
mov
lods
sub
jne
adc
sub
lods
aaa
add
sub
mov
sbb
inc
xor
cmpsl
adc
test
jo
adc
xor
orb
dec
sbb
push
mov
or
js
and
scas
sahf
loope
xchg
dec
xchg
adc
sbb
adc
pop
add
lcall
pop
std
dec
add
mov
dec
mov
clc
and
push
push
push
fyl2x
xor
mov
mov
je
sub
or
out
pop
sbb
mov
rorb
and
popa
subl
popa
and
sub
pop
cmp
inc
mov
fisubs
dec
test
push
fs
dec
dec
mov
cli
and
xchg
and
or
fs
jns
push
add
fistpl
sbb
fs
adc
rolb
pop
sbb
jbe
orl
ss
mov
adc
or
fcomi
jbe
push
or
test
pop
aaa
pop
mov
fwait
insl
leave
out
arpl
adc
bound
and
and
mov
jbe
mov
orb
fs
sti
test
jmp
jae
test
or
sub
sbb
movsb
push
sbb
sbb
push
movsl
test
dec
and
or
mov
es
test
mov
push
aaa
insb
aaa
addr16
mov
mov
cmp
cmc
push
les
fldt
pop
cmp
mov
leave
cmc
adc
aaa
add
js
inc
fstpt
aam
push
sub
insl
subl
push
mull
inc
fcomi
ja
in
lret
movsb
iret
aas
lea
mov
cmp
sub
addl
sbb
push
andb
loopne
pop
les
cmp
sbb
mov
in
fsubrl
sti
adc
cmpsl
cmp
rcrl
add
sbb
inc
movsl
fs
sub
mov
movsb
push
sub
ljmp
xor
xchg
cs
jecxz
test
int
comiss
mov
push
and
xor
mov
xchg
imul
and
ja
dec
sub
inc
test
sbb
dec
ret
or
sbb
adc
pusha
jnp
ficoml
fcoms
lods
leave
adc
lock
xor
gs
push
xchg
mov
xchg
and
push
add
orl
into
or
fsts
inc
dec
add
shll
cmp
push
xchg
cs
add
sbb
dec
push
cmp
xchg
rcrl
jno
push
jmp
lock
sub
aam
mov
push
insl
mov
xorb
les
or
mov
test
in
das
ror
inc
loopne
xor
push
sub
sbb
dec
sbb
jmp
push
imul
inc
jmp
js
or
test
adc
roll
jae
push
or
daa
sarb
loopne
xor
jne
push
push
sub
mov
loope
ret
xchg
in
add
jns
xchg
mov
xlat
lea
and
jne
or
pop
inc
andl
mov
lds
mov
pop
jp
mov
or
push
loopne
xor
push
rorl
cmpsl
mov
stos
xor
pop
dec
sub
mov
stos
inc
icebp
stos
adc
jge
call
cmp
out
out
das
and
xchg
cmp
jne
jno
dec
sbb
mov
adc
xchg
mov
add
pop
mov
pop
stc
mov
sbb
sbb
jg
pop
repnz
and
add
and
mov
je
cmp
aad
pop
jne
roll
push
add
loopne
cmp
dec
in
sbb
out
loope
arpl
dec
xor
and
push
xor
dec
inc
xchg
add
jno
and
ret
inc
xor
mov
loopne
lock
shlb
push
jns
xchg
js
jno
data16
add
int3
jns
fists
test
mov
mov
les
mov
mov
mov
dec
xorl
pushl
addr16
int3
add
adc
and
test
bound
rcll
sbb
jg
loope
lds
sub
popf
xor
mov
xchg
mov
xchg
mov
sti
cmp
jp
shlb
iret
mov
push
hlt
mov
adc
sbb
or
push
add
and
sbb
imul
imul
movsb
leave
add
in
lahf
out
and
pop
sti
xchg
out
jnp
icebp
add
inc
inc
and
shll
pop
rorb
xor
push
int
int
push
cs
xchg
lods
mov
je
xchg
mov
cmc
push
xchg
mov
mov
jmp
and
lds
nop
add
ficoms
popf
cwtl
pop
rcrb
out
adc
lret
push
imul
xor
xor
dec
xchg
clc
adc
sarb
mov
pop
negl
pop
lds
out
jmp
push
popa
pop
sub
xor
xor
lock
jno
add
pop
cmc
mov
push
outsb
fistpl
inc
inc
cmpsb
scas
sarl
sub
xor
xor
pusha
out
sbb
fimull
outsb
test
and
outsl
shll
loopne
push
push
imul
pop
dec
mov
std
add
xchg
sti
lret
dec
pop
xorb
rclb
lds
adc
xchg
mov
data16
mov
rclb
or
sbb
adc
outsl
mov
in
mov
test
notl
lock
dec
adc
or
or
and
mov
stos
gs
aaa
mov
fcoms
or
imul
pop
dec
sub
sub
inc
lock
inc
xchg
push
sbb
imul
sub
jns
sbb
mov
subl
jmp
adc
dec
cmp
in
data16
shlb
fwait
mov
data16
pop
test
ficoms
fwait
call
mov
add
lea
fwait
aam
cmp
cmp
loope
imul
mov
cs
addr16
cmp
and
or
push
ljmp
or
sbbb
adc
dec
addr16
sbb
sbb
rorb
push
pop
les
add
aad
inc
popa
lods
mov
pop
jmp
ret
jmp
xchg
mull
dec
pusha
dec
pop
fdivrs
and
cmpsl
test
mov
aaa
pcmpgtd
jg
or
insl
ljmp
or
sub
rorl
sub
test
sub
dec
test
inc
inc
push
das
int
mov
pop
movsl
jle
arpl
pop
fs
dec
dec
icebp
jno
arpl
inc
push
xor
mov
adc
stos
xor
xor
jns
add
pop
es
add
out
mov
out
inc
sub
icebp
and
xchg
jno
test
ret
jnp
mov
lods
repz
loope
push
in
inc
adc
or
ud1
add
sub
clc
adc
test
inc
and
aaa
arpl
mov
push
aad
imul
flds
pop
inc
sti
lcall
push
xchg
lds
and
mov
adc
jp
inc
scas
adc
or
mov
jo
or
add
add
aas
adc
and
xorl
mov
mulb
adc
push
inc
mov
pop
dec
pop
adc
or
ret
xchg
pop
mov
jge
fcomip
inc
and
cmp
loopne
ja
xchg
xlat
sub
dec
dec
addr16
aaa
rcl
imul
out
shrb
push
ljmp
add
ss
lock
dec
inc
sub
and
ja
cwtl
or
ret
pop
insb
sbb
inc
mov
pop
out
pop
repnz
dec
inc
mov
inc
push
sbb
or
insb
js
pop
inc
inc
push
jbe
mov
test
fstpl
lahf
fs
movsl
cmc
push
mov
push
ret
cmp
test
imul
sarl
cmc
aad
in
cmp
cmp
test
popa
aad
xor
xor
pop
mov
test
mov
inc
ret
popa
adc
les
push
jp
mov
adc
push
or
ss
push
adc
adc
xchg
shll
add
imul
addr16
adc
outsb
pop
mov
jmp
addl
mov
xor
loop
pop
jno
adc
xchg
mov
xchg
icebp
gs
psrlq
adc
xchg
in
cmp
popf
outsb
cwtl
push
push
mov
sbb
jg
insl
mov
mov
pop
mov
popa
cmp
sbbl
aam
hlt
sbb
mov
cmpsl
inc
dec
lret
sti
xchg
adc
push
or
das
lods
imul
add
roll
add
movsl
insl
movsb
push
mov
inc
cwtl
sub
cmpb
mov
imul
out
sbb
popa
and
pop
clc
xor
xchg
cmp
lgs
push
mov
cmp
jne
jecxz
add
enter
jp
insl
pop
dec
cmpsl
mov
notl
and
loop
add
loope
jmp
or
stos
pusha
repz
outsl
in
xorb
and
mov
test
lds
leave
jmp
push
xor
push
inc
push
das
inc
or
cmp
gs
mov
adc
insb
mov
and
pop
mov
add
movsb
xor
adc
cmp
sub
das
dec
mov
imul
sbb
cltd
mov
mov
in
add
cmpsl
lock
add
dec
inc
loope
fmuls
in
aaa
roll
push
leave
mov
sub
dec
mov
inc
jle
mov
and
aam
test
push
cmpb
bound
rcll
sub
mov
nop
mov
xor
sbb
test
mov
xchg
jp
add
mov
pop
cmp
popa
mov
adc
push
sub
shrb
lock
and
fsubr
add
lds
loopne
shlb
cmpl
pop
outsl
or
sbb
lock
outsl
cmp
cmp
insb
movsl
repnz
into
dec
mov
xor
movsb
je
movsb
cmpsl
dec
push
aaa
movsb
sti
test
jnp
or
lds
sub
push
fildll
inc
subl
sub
iret
stos
scas
neg
aad
cmpsl
sbb
fildll
incl
lods
pop
push
cltd
jp
movsl
sbb
mov
adc
insb
sbb
sub
daa
xor
test
popl
dec
inc
jno
or
pop
pop
sub
pop
or
mov
cli
sahf
fisttpll
ret
aaa
or
xchg
iret
pushl
clc
lret
adc
in
insb
sbbl
push
mov
pslld
mov
sub
pop
pop
flds
xor
lret
xor
pusha
push
pop
nop
inc
mov
jecxz
js
dec
iret
sbb
in
loop
mov
or
adc
insb
ret
outsl
loopne
add
and
mov
test
jo
cmp
adc
xor
sub
add
or
mov
add
sub
jo
inc
mov
mov
loopne
call
sbb
loope
in
xchg
popa
lret
dec
add
or
cs
sub
sub
jo
inc
pop
xor
inc
xchg
aaa
cltd
or
mov
daa
and
jl
iret
insl
jmp
adc
adc
jnp
movsb
adc
mov
aam
sub
lods
shll
ret
inc
mov
mov
orl
mov
jg
adc
jmp
mov
sub
add
sbb
js
xlat
in
inc
pusha
sti
sbb
imul
pop
sbb
rorl
mov
imul
sub
dec
add
aaa
test
push
and
insb
cwtl
inc
outsb
arpl
mov
pop
push
cmp
lock
in
icebp
decl
fistl
inc
mov
pop
mov
add
int3
test
lods
adc
sbb
push
add
std
outsl
insl
sbb
adc
and
inc
cmp
mov
test
dec
pop
inc
or
dec
add
xchg
movb
mov
and
movsl
stc
stos
adc
and
xor
test
popa
popf
add
js
inc
inc
lods
dec
dec
and
sub
pop
pop
push
xor
outsl
jmp
je
jmp
xor
dec
loop
mov
daa
cmp
adc
mov
push
sbb
cmc
imul
and
vsqrtps
adcl
js
mov
xchg
xor
test
sbb
mov
sbb
mov
lods
mov
cmp
arpl
dec
cmp
jmp
inc
aaa
xchg
ja
sub
nop
les
cmc
inc
popa
mov
pushf
ja
ljmp
xor
xchg
les
mov
pop
shlb
or
inc
jecxz
or
and
xchg
loop
push
inc
adc
mov
or
and
push
push
jecxz
dec
mov
fldl
sub
call
adc
mov
pop
cmp
cmp
dec
pop
imul
jae
inc
nop
sub
add
dec
ficoms
icebp
mov
testl
sub
js
aam
cmpsl
or
rcll
icebp
sbb
sbb
jl
jnp
xchg
xchg
out
stos
mov
dec
push
inc
rcrl
das
xchg
popa
mov
gs
xchg
gs
cmc
add
int
adc
adc
mov
movsb
lahf
or
aaa
or
stos
adc
or
mov
adc
push
es
gs
aad
mov
les
lret
push
mov
rol
sub
push
cmp
popa
mov
sar
xor
push
ljmp
xchg
into
call
xchg
push
iret
loopne
push
mov
imul
lea
xchg
mov
iret
push
add
xor
push
sarl
sub
ljmp
outsl
cmc
or
bound
xor
icebp
addb
sbb
or
aam
sub
or
xor
jmp
addb
daa
jle
xchg
mov
dec
imul
imul
or
mov
inc
decl
inc
inc
pop
imul
pop
push
jae
fs
jnp
orl
insb
test
pusha
inc
dec
xor
rolb
mov
dec
xor
push
mov
cmp
add
mov
pop
aad
inc
cmp
sbb
aad
imul
push
jmp
and
push
jge
shlb
push
mov
or
ja
mov
jno
es
dec
js
xor
push
xchg
sub
push
jo
and
inc
sbb
shlb
push
or
in
inc
ljmp
or
fists
in
and
adc
and
inc
add
imul
lds
push
lcall
in
addr16
test
cmc
outsb
dec
or
xchg
push
dec
inc
inc
push
loope
mov
cmpsb
push
or
push
loopne
mov
pusha
aad
cmpsl
nop
pop
arpl
inc
mov
or
ret
inc
xchg
leave
fldenv
mov
mov
sbb
pop
or
push
ja
xor
dec
aaa
pop
push
stc
add
stos
xchg
test
mov
sub
push
adc
adc
cmpsl
lods
xchg
lcall
stos
movsb
or
loope
js
mov
test
push
push
cmp
mov
scas
insl
movsl
and
incl
dec
rorb
call
shlb
outsl
sub
xchg
xchg
lea
dec
addr16
addl
or
sbb
xchg
add
mov
hlt
test
lahf
adc
xor
aam
push
inc
cli
adc
test
xchg
cmp
icebp
mov
hlt
or
jp
lret
fs
std
push
movsl
adc
pop
xchg
adc
adc
cmpsl
lods
xor
pop
movl
cmp
push
lahf
xchg
fisubrs
dec
mov
xlat
or
arpl
pop
lcall
xor
out
cmp
jnp
test
jae
pop
icebp
test
mov
add
cmpb
push
lods
loope
adc
jp
pop
loop
gs
cmc
shl
add
mov
gs
push
lcall
or
scas
xor
sub
pop
xorl
mov
lea
addb
mov
fdivp
repz
aad
pop
mov
fildl
adc
or
inc
inc
xor
mov
and
jg
js
jecxz
adc
mov
sub
and
pop
sbb
add
fcomi
pusha
test
add
pop
cmp
fs
add
inc
dec
test
adc
pop
pop
jl
enter
xor
pop
inc
xlat
mov
add
sub
movsl
add
xchg
pop
popf
pop
shll
sub
ds
call
pop
sub
repz
shlb
lret
sub
mov
push
popa
test
push
jb
lahf
add
push
hlt
pop
cmp
xor
addr16
push
call
cmp
faddl
xor
jno
cmp
rorb
gs
adc
shrl
dec
ja
or
xor
pop
sub
into
xlat
inc
imul
add
inc
negl
fidivrl
mov
dec
mov
add
cmp
push
mov
or
push
dec
xchg
lock
shrl
in
lahf
push
xchg
sub
add
push
bound
cmpsb
jmp
addl
int
adc
sbb
sbb
jo
jae
in
cmp
icebp
mov
sub
push
cmc
xchg
push
inc
cmp
adc
inc
rcl
aam
push
popf
or
test
enter
lods
mov
xchg
sub
dec
add
push
cmp
mov
adc
inc
dec
mov
adc
xorb
pop
inc
call
ror
xor
iret
insl
xchg
dec
xchg
and
xchg
jo
iret
mov
movsb
inc
inc
dec
sbb
and
or
xchg
repz
outsl
cwtl
cmpl
sarb
push
inc
push
adc
fnstenv
mov
dec
out
addb
ret
sbb
dec
xchg
outsb
andl
imul
xchg
or
push
or
dec
xchg
dec
iret
dec
xor
adc
dec
ljmp
lea
xor
cmp
cmp
mov
sbbl
sbb
je
pop
mov
mov
mov
sbb
and
inc
test
nop
data16
lahf
stc
or
out
lods
or
adc
loope
adc
adc
xor
jb
mov
and
test
ja
ljmp
subl
inc
aas
test
js
aam
je
inc
xchg
xchg
add
fnsave
popf
pop
cmpsb
xchg
xorb
add
or
sbb
inc
rcl
shr
mov
sbb
popf
cmp
or
adc
shlb
push
add
push
addr16
push
loope
dec
add
ds
paddq
dec
xchg
arpl
dec
adc
insl
test
dec
inc
test
or
add
sahf
leave
adc
cmp
lods
sub
ficoms
divl
mov
add
cli
add
stos
add
in
xor
addr16
cmp
add
sbb
dec
adc
push
stos
js
or
and
inc
lods
iret
lock
pop
add
pop
pop
inc
outsb
sub
inc
sub
sysret
adc
pop
jae
es
adc
inc
xchg
sbb
sarl
pop
and
mov
inc
dec
ret
aam
mov
jae
aaa
push
ficompl
add
test
cmpsl
insl
dec
xor
movsl
icebp
inc
or
sbb
aas
out
sbbl
adc
and
loopne
movsl
sbb
lea
mov
mov
arpl
xchg
mov
outsb
add
filds
insl
inc
stc
nop
test
push
sbbl
and
jne
push
bound
insb
jecxz
fldl
sub
push
popa
push
stos
or
or
out
adc
xchg
xchg
daa
and
xor
rcrb
adc
sub
in
sub
or
das
inc
bound
mov
add
popa
mov
dec
jmp
xchg
push
xor
rolb
in
es
sbb
test
sbb
push
adc
xchg
mov
add
xor
arpl
add
jp
scas
call
aad
sub
add
xorb
sbb
jp
pop
push
and
add
frstor
jmp
loope
dec
adcb
jge
aad
jbe
leave
lea
xchg
lods
pop
add
add
pop
jg
movsl
inc
ljmp
shufps
pop
pop
stc
inc
cwtl
bndldx
rcrl
jb
addr16
cmp
in
add
jge
sbb
outsb
jno
in
mov
andl
lock
jmp
sub
in
xchg
sub
mov
fsubr
inc
jns
lods
rorl
pop
mov
mov
push
push
add
fadds
xlat
dec
cwtl
add
ljmp
rcrl
add
pop
xor
ss
lcall
gs
lock
sti
mov
xor
pop
and
or
add
mov
add
push
dec
shlb
pop
xchg
ljmp
push
into
xorl
push
stos
add
test
mov
inc
pop
das
pop
mov
dec
in
push
shll
fdivs
sbb
sbb
mov
pop
mulb
aaa
mov
fs
mov
xchg
mov
pushf
outsl
push
xor
sub
push
dec
jge
ds
pop
add
mov
es
ret
inc
and
sbb
scas
push
add
ja
scas
adc
jp
fucomip
add
sbb
in
cmp
push
test
shlb
shl
sarb
mov
movsb
popa
aaa
fstpl
divb
xor
lcall
adc
inc
dec
xchg
pop
and
and
push
popa
adc
push
les
fsubrl
and
insb
mov
adc
dec
jb
out
dec
ret
popl
or
xor
sub
push
xchg
shlb
pop
mov
sarl
scas
hlt
add
dec
sub
fnop
jno
dec
sbb
repnz
pushf
fidivrs
call
mov
xor
xchg
pop
mov
push
sbb
rclb
add
lods
ficompl
popa
fists
cmp
adc
xchg
sbb
ja
inc
push
lret
sub
pusha
lods
mov
adc
inc
ret
cmp
adcl
pop
shrl
jmp
adc
js
jl
jecxz
loopne
loop
adc
pusha
lock
ja
xlat
lea
jo
out
test
aad
xorl
xchg
mov
mov
adc
or
shrb
test
popa
mov
lea
imul
sub
and
dec
jnp
cmp
sub
ja
or
popa
mov
aas
push
push
pusha
arpl
popf
sbb
jmp
enter
sbb
add
repz
call
lret
es
mov
adc
mov
pop
and
push
roll
pusha
fisubrl
popa
push
arpl
and
sub
out
shrb
mov
xor
loop
sbb
fistpl
dec
pop
pop
pushf
sahf
adcl
iret
xchg
rcrb
xchg
xchg
sub
jae
stc
shrl
pop
xchg
es
rcll
dec
or
loope
loope
fs
xor
xlat
jbe
xchg
into
or
xchg
sar
dec
pop
dec
jle
add
and
mov
xchg
je
int3
pop
jge
push
push
hlt
jl
fwait
push
jg
mov
js
xor
sbb
and
pop
in
out
sbb
sub
cmc
push
sub
addr16
adc
inc
cmpsb
stos
push
fsubrl
dec
push
and
movsb
or
mov
or
jmp
popa
fstl
cli
jb
add
in
xchg
fbld
dec
loope
mov
push
xchg
and
xor
lods
jns
mov
xlat
lea
stos
pop
aad
jp
xor
mov
ljmp
and
xchg
cmpsb
pop
add
fs
rcrl
pusha
aaa
sarb
jne
stos
jno
inc
sub
stos
push
cmpsb
adc
add
pusha
mov
jle
mov
push
gs
test
rclb
rcll
push
mov
adc
mov
add
mov
int
cmp
sub
enter
add
push
cmp
mov
sub
adc
pop
out
icebp
scas
sahf
xor
mov
mov
pop
push
inc
loopne
bound
mov
cli
mov
or
cmpsl
xor
add
add
mov
sub
shl
sahf
and
add
sbb
adc
popa
pop
mov
xchg
test
push
push
jp
in
mov
imul
xchg
and
and
pop
shl
test
loopne
dec
lds
push
dec
shrb
jno
jmp
fdivl
cmp
and
packuswb
sub
in
cmp
loop
fwait
ss
sahf
in
pop
inc
mov
arpl
add
test
daa
pop
pop
push
mov
out
pop
pusha
pop
push
lahf
movsl
fcoml
imulb
testb
push
lea
jae
push
out
loopne
add
out
sub
mov
adc
daa
loopne
or
sub
clc
popa
xchg
mov
sub
ficoml
pop
and
or
fcom
shlb
lock
dec
test
pop
lea
loope
jl
aas
xor
cmc
xor
outsl
sbb
jmp
cmpl
push
arpl
mov
xor
pop
movsb
cmpb
daa
push
lods
jg
inc
push
aad
sbb
adc
adc
punpcklbw
mov
outsb
xor
xchg
adc
sbb
shll
jno
nop
sub
lods
test
out
loope
inc
jge
data16
jo
ret
jmp
test
jae
jge
xchg
mov
push
lcall
fisubrs
orl
cmp
rol
cmp
pop
sub
imul
rclb
xor
jb
mov
lock
pop
ss
fistps
mov
insb
js
hlt
adc
jg
add
orl
icebp
pop
sub
lds
dec
cmpl
arpl
icebp
mov
loop
je
jo
stc
push
cmpb
lods
sti
sbb
sub
aad
pop
xchg
jb
sbb
ret
dec
adc
xchg
mov
xor
loope
dec
jl
add
jne
sbb
lods
jns
loope
lea
pop
cmp
or
adcb
int
or
lds
loop
cld
xchg
push
sbb
sub
es
notl
or
cmpsl
xchg
stos
push
cli
mov
into
mov
push
popa
and
insl
je
jne
rolb
or
or
adc
cltd
mov
sbb
sub
pop
popf
dec
dec
inc
aaa
andl
and
pusha
test
cld
or
pop
pop
in
in
cs
fcomps
test
dec
rcrb
outsb
imul
rol
add
in
aaa
or
mov
mov
mov
dec
add
xchg
imul
add
out
push
xor
call
and
popa
and
dec
mov
sbb
lods
xchg
adc
stc
movsb
jbe
or
popf
or
je
lds
inc
cli
or
repz
dec
rcl
gs
movsl
test
pusha
lret
push
xchg
jo
push
adc
ret
jne
mov
das
sahf
jmp
sub
mov
icebp
out
iret
fsubp
push
inc
sbb
xchg
push
cmpsb
minps
xchg
or
imul
cmp
cmp
dec
in
xchg
pop
test
and
lcall
rcll
mov
xchg
out
faddl
pop
lds
out
xor
repz
adc
out
sub
mov
ror
or
push
fisubrs
dec
out
mov
mov
les
ljmp
ds
lds
push
nop
mov
scas
arpl
aad
stos
pop
push
pushf
xlat
popf
and
inc
mov
or
int
dec
shl
insl
test
adcl
and
mov
cmp
inc
add
leave
adcl
roll
andb
inc
adc
popa
rorb
dec
aam
xchg
mov
jmp
rcrb
mov
call
jae
dec
mov
mov
aam
lds
inc
xlat
xchg
push
repz
pop
sbb
dec
gs
in
nop
or
sahf
aas
xlat
rorb
lock
mov
ret
mov
lods
js
and
cltd
jp
dec
hlt
outsl
dec
scas
pop
push
nop
dec
cmp
test
clts
ds
mov
mov
push
das
call
bound
out
adc
add
xchg
aam
and
dec
add
xchg
in
loope
mov
inc
insb
lea
and
sbb
jo
ret
dec
sub
ds
loopne
out
add
les
mov
pop
xor
mov
sbb
xor
mov
imul
dec
out
add
and
sbb
adc
inc
inc
mov
add
jmp
mov
adc
jbe
out
shll
sub
pop
loope
sub
adc
pop
stos
mov
ret
cwtl
leave
ret
xchg
cmp
xor
dec
adcl
adc
into
mov
arpl
xchg
xor
vmread
xor
adc
add
ret
daa
inc
or
imull
xchg
push
sbb
and
mov
pop
mov
bound
stos
clc
cmpsl
mov
sbb
inc
pop
xchg
xadd
mov
les
repz
pop
inc
loope
shlb
rclb
lret
and
stos
popf
ss
int
imul
sub
jno
fwait
push
or
sbb
push
jno
loopne
jge
mov
push
push
sub
sbb
fcomi
jnp
scas
or
in
push
xchg
pop
cmp
nop
xchg
enter
jp
or
rol
xchg
mov
xchg
mov
pop
aad
andb
xor
add
push
jmp
and
adc
dec
or
iret
xchg
jle
test
mull
and
ja
cwtl
mov
jae
sbb
or
enter
out
sbb
dec
dec
movsb
jne
lahf
and
cs
fisttpl
and
or
adc
push
pushf
mov
push
inc
sub
test
pusha
aam
test
dec
xchg
xchg
or
xchg
jo
pop
sub
dec
ss
movsb
stos
sti
add
rclb
inc
push
jnp
adc
sbb
fucomp
jp
rorb
xchg
mov
xor
imul
mov
out
pop
mov
or
cmp
cmp
incl
jnp
add
inc
jno
inc
loopne
jnp
sub
bound
push
jae
sbb
test
imul
pop
mov
xchg
enter
frstor
add
int3
iret
push
push
inc
mov
insb
xor
call
inc
mov
mov
addr16
mov
addr16
mov
sbb
dec
or
sbb
in
mov
rclb
scas
or
and
imul
jge
cmp
jae
sbb
cmp
movsl
xchg
mov
jecxz
fwait
sbb
fnstcw
pop
jbe
cmp
and
call
ljmp
dec
fwait
outsb
rorl
dec
or
std
mov
cmpsl
xor
je
stos
imul
ret
test
push
mov
jnp
int
loope
pop
test
dec
cmp
jl
rcrl
sub
xor
xchg
and
ds
pop
or
mov
lock
daa
jge
push
in
mov
imul
adc
mov
popf
mov
adc
insl
outsl
cld
mov
popf
xlat
sbb
je
insb
cld
popf
or
test
fnstsw
hlt
shll
ds
mov
and
scas
sbb
mov
dec
cs
jb
lods
dec
cmp
inc
fwait
adc
add
jecxz
add
es
hlt
push
daa
push
imul
and
adc
es
inc
dec
lea
and
scas
cltd
add
das
adc
ffree
sub
fsubl
sbbl
pop
push
iret
pop
daa
mov
imul
inc
stos
push
in
sub
and
fstpl
ss
add
in
adc
mov
sbb
adc
adc
loop,pt
adc
add
sti
scas
test
jbe
mov
sbb
dec
dec
cmp
add
push
fcoml
mov
or
push
shrb
mov
xchg
cmp
jp
fwait
mov
jne
mov
in
cltd
popa
and
xchg
lahf
das
lock
call
and
leave
xor
mov
lret
cwtl
js
dec
daa
fwait
sbb
or
xor
adc
push
sahf
jb
xor
sbb
sub
jb
inc
or
popa
xchg
xchg
dec
and
pop
bound
shlb
xor
sbb
dec
adc
xor
or
subl
or
pushf
pop
mov
add
jne
ret
test
or
scas
leave
adc
jbe
xor
or
fcmovnb
popf
lret
push
or
or
adc
add
outsb
test
xchg
inc
call
push
and
mov
push
loope
nop
push
fistpl
pusha
jmp
xchg
clc
lret
ret
mov
stos
jno
mov
mov
sbb
call
aaa
pop
daa
push
sbb
stos
and
loope
dec
addb
popa
arpl
sub
dec
pusha
push
sbbl
das
stos
sbb
std
cmpsb
add
out
in
inc
dec
adc
push
inc
shlb
xchg
in
add
or
insl
in
push
repz
add
out
add
sub
add
inc
mov
and
xchg
lcall
mov
dec
leave
cmc
inc
loope
mov
imul
aaa
out
jge
pop
inc
lods
push
adcl
xchg
dec
push
sbb
cmp
cmp
loopne
insl
and
xchg
movsb
movsb
inc
add
xchg
lret
dec
ja
inc
vdivsd
jg
outsb
lret
mov
mov
xchg
mov
pushf
int3
inc
lods
xor
mov
xor
bound
or
dec
adc
add
sbb
sti
aaa
lods
loop
repnz
cmc
inc
dec
pop
dec
out
xor
sbb
arpl
jo
in
dec
int
fisubrs
mov
fisubrs
xlat
les
dec
clc
or
cs
xor
ret
insl
and
push
pop
dec
sub
xchg
cltd
sti
leave
int3
sub
or
lea
sub
cmpsb
stc
clc
and
xlat
inc
and
cmp
shr
mov
add
pop
xor
sub
arpl
aam
xchg
jb
outsb
or
js
push
aas
dec
fwait
and
or
xchg
sbb
stc
test
sub
or
jno
popa
inc
mov
add
push
cs
adc
in
fildll
mov
jge
dec
and
loope
push
or
roll
out
xor
dec
mov
rcrl
fadds
hlt
scas
mov
push
jbe
and
mov
dec
test
shlb
hlt
sub
push
push
or
lret
mov
adc
and
sahf
je
sti
jge
jle
add
jmp
mov
punpcklwd
xchg
fmuls
int3
mov
inc
mov
and
loopne
inc
adc
in
sub
js
xorl
mov
adc
xor
js
dec
mov
or
and
add
sub
mov
inc
mov
lret
inc
cmp
lods
rclb
lea
movsl
sbb
jg
lock
jmp
hlt
mov
addb
cmp
cmp
shll
or
adc
xor
pop
add
pop
cmp
sysenter
xor
mov
inc
adc
mov
aas
movsl
lret
add
xor
arpl
fwait
call
lahf
dec
jno
sbb
out
mov
aam
sbb
lea
fisubs
frstor
cmp
jg
rolb
loope
mulb
fstps
adc
pop
movsb
inc
ljmp
testl
push
into
cld
scas
xchg
arpl
jno
jbe
cli
push
repz
jmp
push
mov
adc
mov
mov
xor
pop
xor
movsl
sub
inc
cmp
push
xchg
shrl
push
ljmp
adcl
les
icebp
decb
or
sbb
xchg
inc
arpl
bound
xor
cmpsl
scas
jmp
int3
and
inc
lds
ror
inc
mov
pop
adc
lods
push
xor
fadds
push
push
aaa
test
cwtl
pminsw
push
scas
dec
call
gs
and
cmp
push
pop
dec
jmp
or
mov
enter
sbb
imul
imul
arpl
dec
pop
xchg
hlt
push
rclb
clc
sub
mov
jle
mov
into
and
lea
fidivrs
fisubrs
push
lods
mov
enter
scas
les
in
and
mov
test
popa
mov
add
enter
sbb
fsubs
mov
and
bound
jmp
adc
es
bound
mov
push
fnstsw
std
xor
mov
rcrb
sbb
cld
mov
jne
and
imul
and
cmp
dec
mov
imul
out
cmp
adc
orb
cmp
loope
mov
dec
bound
pop
lea
push
icebp
pop
aam
xchg
mov
adc
push
sarb
sbb
popf
pop
mov
fimuls
push
push
xchg
push
mov
add
add
jge
adc
inc
ret
pop
mov
sub
shll
xchg
lods
pop
fxch
jo
xchg
int
pop
sub
shlb
popa
mov
addr16
movntps
inc
cmpsb
movsb
and
es
sbb
icebp
jp
mov
lods
fcmovne
lds
and
aam
sbb
sahf
lahf
mov
xor
adc
mov
sbb
mov
leave
or
lods
xor
ds
dec
pop
add
sti
fidivrs
jle
mov
mov
adc
std
adc
push
test
inc
and
fiadds
fdivl
movsb
adc
jmp
dec
xchg
flds
sbb
xor
and
lcall
rorl
xor
xchg
and
les
cmp
pop
outsb
and
test
pop
pushf
push
pusha
mov
popa
pusha
cltd
jno
adc
lahf
sahf
ret
rorb
insl
bound
es
movsb
push
or
adcl
jno
adc
adc
sub
sbb
les
add
and
ret
and
sub
dec
lret
dec
add
sbbl
sub
scas
xor
mov
icebp
lahf
stos
out
sbb
push
mov
and
pop
into
dec
clc
pop
add
jo
sbb
movsl
jo
add
mov
arpl
sbb
mov
adc
test
or
roll
fistpl
enter
outsl
nop
sahf
test
push
aam
dec
mov
pop
fstpt
inc
loopne
push
mov
jg
jp
and
insb
pop
push
jp
arpl
fnop
or
sub
shrl
inc
lods
testl
mov
jecxz
fimuls
push
inc
xor
sbb
pop
aam
xor
ds
xor
push
adc
cmpsl
push
mov
xorl
or
add
mov
data16
js
and
jecxz
loope,pn
xchg
jmp
pop
loope
and
push
pop
lea
test
loope
and
xchg
sbb
mov
mov
loope
add
mov
inc
shlb
ret
inc
pushf
testb
fsubrs
xor
outsb
xchg
test
addl
push
movsl
bswap
push
mov
sub
rclb
or
fmul
mov
scas
ret
sbb
lods
jb
je
xchg
dec
mov
and
rorb
nop
mov
in
mov
adcb
ss
aam
popf
ss
jl
sbb
mov
inc
or
adc
jecxz
es
es
add
je
pop
pop
cmp
inc
or
test
jmp
cli
roll
pusha
loope
mov
cmp
rcrb
cmp
fists
sbb
xchg
fimuls
pushf
inc
frstor
pop
dec
in
add
adc
and
jae
cmp
stc
fdivl
dec
xchg
aam
adc
aaa
add
inc
mov
popf
xchg
movsb
mov
push
ljmp
rcrl
das
pop
mov
mov
call
nop
xor
cltd
mov
cmpsb
icebp
pop
sbb
mov
mov
cmp
loope
jne
push
cltd
fadds
mov
inc
push
test
orb
orb
pop
cmp
loopne
mov
mov
adc
adc
xchg
add
pop
andl
popa
cmp
fnstenv
sar
or
cmc
mov
outsl
daa
mov
testl
add
or
jae
adc
dec
sub
shll
pop
imul
pusha
xor
mov
pop
das
stos
add
addr16
or
sbb
icebp
sti
call
add
add
xor
inc
push
push
adc
add
mov
pop
addr16
jg
fndisi(8087
scas
fs
dec
or
mov
pop
pop
mov
adc
lahf
sbb
mov
inc
and
les
dec
push
sti
pushf
test
loope
dec
xchg
mov
ss
call
dec
or
push
add
call
bound
and
push
lds
mov
test
gs
test
cmp
ljmp
dec
lcall
push
mov
je
and
xchg
lahf
movsb
lret
adc
lret
lock
in
fcmovnb
ljmp
or
pusha
addr16
sub
jno
dec
pop
loopne
fbstp
rcll
jecxz
mov
pop
inc
inc
fst
adc
fsubrs
add
add
fwait
xor
in
in
inc
cmp
mov
cmp
fldl
int
mov
shrd
lods
stos
inc
mov
xchg
fbstp
or
test
pop
fcoms
sub
aaa
test
and
fadds
xor
and
push
aas
pop
scas
push
lds
rcrb
dec
or
adc
mov
mov
or
rcl
and
fstps
mov
fnstenv
lods
mov
movsl
add
sbb
mov
sti
add
pop
xor
cmpsl
sti
inc
dec
mov
jnp
dec
sbb
fidivrs
dec
out
std
arpl
and
xchg
mov
jmp
add
cmp
out
shll
movsb
or
inc
ss
cltd
dec
add
add
pavgb
rorl
push
andl
push
or
prefetcht0
int
sbb
push
imulb
stos
popa
xor
mov
fwait
cmp
jbe
aad
fwait
pop
inc
pop
xchg
out
mov
iret
mov
mov
mov
scas
push
shll
jno
outsb
sarl
push
testl
mov
sarb
push
jp
dec
orl
rorb
scas
loopne
ds
stc
cmp
sub
movsl
ret
jnp
bound
test
mov
or
stc
cmp
add
aad
cmpsl
xorb
pop
and
inc
ret
mov
cmpsb
and
movsb
ljmp
inc
sarb
or
iret
outsl
mov
or
mov
add
fdiv
sbbl
es
fs
rcrb
int
mov
movsl
lret
std
add
sbb
ret
arpl
or
push
pop
add
push
aad
movsl
adc
sub
adc
negl
and
lods
pop
mov
cmp
jecxz
jno
inc
or
inc
xchg
xor
mov
mov
out
xchg
sahf
call
and
xor
popf
sbb
push
sbb
ds
xor
aam
pop
mov
sbb
pop
mov
lds
pop
inc
lahf
fwait
cmp
add
xlat
adc
fidivrs
push
enter
inc
push
sub
gs
loope,pt
das
in
or
sub
popl
adc
in
mov
shrl
test
sbb
add
adc
in
enter
cmp
xlat
imul
xchg
outsl
jne
mov
mov
movsl
sbb
adc
jge
pop
popf
inc
bound
dec
cmpsb
adc
cwtl
shlb
or
jbe
popf
add
jbe
mov
jo
mov
sti
push
sbb
insl
cmp
lock
repnz
movsl
fiadds
pop
add
or
lods
push
gs
sbb
test
jo
pop
lock
lods
add
jo
adc
xchg
out
dec
pop
mov
push
popa
not
jp
je
rcrl
jo
rcrb
pop
cmp
adcb
orl
push
push
arpl
jle
popa
ret
xchg
pop
stc
mov
jb
stos
mov
pop
call
pop
outsl
jecxz
rcrb
mov
dec
data16
adc
xchg
mov
pop
dec
sub
cmp
mov
fsub
lcall
dec
dec
adc
pop
adc
scas
shrl
cmpsb
aas
and
loope
xchg
xchg
popl
lea
jl
and
sub
inc
addr16
pop
push
cmp
pushf
fbstp
push
jno
popa
rol
jae
mov
test
or
mov
jmp
xor
ret
cwtl
add
fsubs
fwait
xchg
push
xchg
xchg
cld
cmp
xchg
add
xor
adc
sub
out
mov
jno
sub
xor
jge
out
addl
or
inc
pop
add
sub
or
enter
mov
mov
ret
push
dec
dec
loope
sub
xor
add
shl
fisubs
push
adc
dec
mov
fs
leave
add
sti
fcomps
dec
add
and
sbb
mov
and
inc
or
pop
xor
sub
push
daa
cmc
dec
lcall
pop
pop
aad
das
lock
push
or
rclb
insl
adc
xchg
inc
fcmovnu
and
sub
xor
dec
lcall
push
inc
stos
imul
pop
cmp
dec
outsb
adc
push
mov
dec
bound
shrl
xchg
stos
sub
add
shlb
push
ret
sbb
mov
add
mov
xchg
push
ret
dec
arpl
jb
testl
mov
add
mov
dec
arpl
pop
add
or
movsb
mov
mov
inc
inc
mov
mov
add
add
cmpsb
jno
jge
mov
sub
xchg
movsb
lods
dec
ja
cmp
cs
dec
pop
or
sub
test
std
lock
add
out
xor
mov
and
and
imul
fistl
inc
inc
ljmp
mov
andb
mov
jg
imul
imul
test
mov
mov
sbb
or
xchg
fidivs
sub
fidivs
pop
pop
insl
std
xor
shl
mov
and
xor
or
push
xchg
sub
shll
sbb
int3
lret
scas
ljmp
jbe
adc
rol
insb
jnp
mov
jnp
ds
xorl
and
inc
sub
idiv
push
add
imul
cmp
sahf
fbld
fbld
jno
and
pushf
mov
out
lods
mov
sbb
mov
negl
dec
mov
fwait
sbb
jge
lahf
mov
sbb
mov
dec
and
sub
push
mov
jge
rcrb
mov
shrl
mov
xchg
adc
cmp
imulb
add
testl
jo
or
and
dec
dec
add
inc
clc
not
jo
loopne
mov
pop
jno
push
addr16
mov
and
dec
inc
xchg
cmp
fldenv
fucomip
sub
pop
in
xchg
mov
leave
rcrb
dec
inc
mov
adc
adc
or
mov
rcrl
add
fsubl
into
popa
rorb
movsb
mov
subb
mov
mov
test
jnp
movb
sbb
pushf
add
and
cmp
mov
out
xor
jno
xchg
add
popa
xorl
mov
or
dec
shr
shll
pop
and
adc
dec
addl
adc
push
pop
stc
insb
enter
add
xchg
pushf
fildl
mov
add
cmpsb
hlt
add
adc
pop
sbb
mov
mov
dec
adc
gs
mov
fildl
jge
adcb
hlt
pop
imul
aad
adc
mov
xchg
imul
int
push
sub
inc
jecxz
shlb
sbb
sbb
push
inc
inc
xchg
pop
out
pop
into
lret
jmp
sbb
xchg
dec
dec
cmpsb
testb
and
test
dec
push
lea
mov
and
push
iret
jo
mov
ja
cmp
push
test
mov
or
fldl
imul
or
add
dec
imul
jno
dec
std
add
mov
pop
or
inc
push
fs
cmp
fidivl
cmp
xchg
sbb
dec
sbb
mov
sbb
in
dec
push
les
sbb
xlat
lock
push
adc
fiadds
pop
cmp
ss
sbb
rolb
xor
loop
imul
jmp
fisubrl
add
pushf
dec
pusha
pop
rol
pop
jno
add
xchg
add
push
xchg
xchg
or
icebp
add
lahf
scas
push
or
out
dec
adc
sub
adc
add
dec
add
lret
push
xchg
sbb
enter
or
lods
fcom
dec
adc
sbb
adc
pop
cmp
add
pop
jle
pop
stos
mov
imul
fwait
movsl
pop
cmp
push
pop
nop
mov
lea
int3
ljmp
ja
dec
outsl
push
add
inc
js
sbb
or
dec
les
ja
xchg
push
xor
pop
sbb
popa
out
fildl
rcrl
fbstp
mov
push
pushf
xchg
aaa
daa
jl
or
inc
or
xor
xchg
loopne
dec
popa
or
mov
adc
lret
pusha
xchg
add
add
sahf
or
cmp
push
jb
ret
push
mov
mov
subl
pop
dec
fldcw
scas
push
movsl
test
mov
std
arpl
add
nop
popf
dec
outsl
insl
add
repnz
and
ret
leave
pop
jg
push
pop
mov
adc
inc
cmp
dec
xchg
ret
jnp
gs
xchg
add
xchg
or
test
pop
in
xchg
lahf
aaa
jmp
and
fcompl
adc
mov
adc
inc
inc
aaa
das
rcr
xor
mov
or
insl
mov
fisubrl
stos
push
pop
adc
cmpsb
iret
sarb
jecxz
cs
ja
pop
jp
jg
jmp
xor
gs
ja
mov
mov
aad
popa
sbb
out
in
pop
jno
dec
psrlw
call
stc
and
loop
xorl
jmp
insl
sub
sub
aaa
add
es
iret
mov
or
or
adc
push
mov
and
or
xchg
inc
jo
out
aaa
lods
mov
sbb
lods
dec
or
adc
mov
iret
mov
aaa
pop
sbb
bound
pop
roll
cmpl
jb
pushf
aam
inc
dec
add
adc
or
add
int3
mov
or
fstl
aaa
jb
test
aaa
sub
mov
sub
fs
sbb
mov
sbb
ret
addr16
xchg
movsl
jae
mov
push
inc
shlb
mov
out
xchg
or
inc
mov
lret
insl
sub
mov
sub
or
incl
add
int3
mov
sahf
pop
aaa
pop
push
ret
cmc
arpl
nop
in
mov
or
mov
pop
fwait
jne
jmp
dec
mov
es
popa
adc
lret
mov
dec
cltd
out
fdivl
mov
push
fsubrs
sbb
pop
or
or
aaa
lods
fwait
loop
jns
mov
addr16
xchg
rolb
adc
fisubl
or
dec
and
xor
add
popa
fldl
sub
adc
popa
hlt
call
adc
xchg
vandps
xorb
sub
mov
add
xchg
test
push
jbe
or
pop
lea
sahf
cmp
in
add
xchg
pop
jp
xor
or
sub
xor
push
inc
mull
adc
adc
mov
xor
xchg
mov
push
sbb
add
add
jp
mov
sbb
and
outsl
andl
inc
in
popa
imul
mov
pusha
cltd
xor
iret
bound
cmc
push
pushf
sbb
push
add
aaa
inc
sub
add
dec
ja
push
mov
mov
cld
or
arpl
cltd
sub
ror
pop
lods
popf
jecxz
shlb
addr16
mov
movsl
enter
js
fwait
popa
xchg
pushl
aad
lret
jp
sbb
xchg
shrb
pop
mov
jecxz,pt
jp
xchg
push
pushf
int3
jnp
les
jbe
rorl
and
add
push
pop
pushf
xorl
xorb
adc
xor
mov
pushf
mov
in
pop
adc
movsb
pop
push
pop
push
inc
mov
stos
xor
adc
sbb
mulb
pusha
int3
mov
jb
xor
xor
pop
test
sti
xchg
pop
or
inc
and
adcl
pop
call
cmpsl
sub
xor
icebp
movsl
adc
sti
popa
rorb
add
mov
mov
mov
cmp
roll
call
dec
cmpsb
push
sarb
movsl
jo
jae
out
add
fdivs
decb
add
fiaddl
cmp
xchg
fadds
faddp
pushf
mov
mov
push
xchg
imul
movsl
test
mov
aas
jl
push
sbb
cmp
into
mov
sub
push
jno
push
xchg
dec
sub
sbb
dec
xchg
shl
test
inc
jb
insl
cmp
pop
push
movsl
add
cmp
sbb
jbe
sub
and
test
loope
mov
jecxz
lret
push
aaa
add
mov
mull
mov
xchg
movsl
cld
loope
mov
mov
out
lods
sbb
jo
mov
pop
shlb
xorb
xor
or
and
or
mov
out
or
cmp
daa
cmp
dec
pop
inc
or
andl
add
ret
pop
pop
lods
pop
xchg
ss
inc
push
sbb
pop
inc
jge
push
pop
adc
or
into
mov
sub
in
ljmp
or
and
nop
mov
roll
stos
mov
dec
arpl
lods
cmp
addr16
movsb
insl
mov
addr16
test
xorb
sbb
lea
pop
cmpsb
xor
pusha
xor
lock
in
push
scas
loop
mov
popa
pop
dec
mov
adc
push
or
push
push
rcr
or
or
or
push
and
mov
pushf
mov
sub
xchg
xlat
inc
pushf
loopne
mov
jp
xchg
das
adc
jp
lods
xor
das
mov
int
push
xchg
xor
adcb
inc
jbe
sbb
and
pop
or
and
mov
fildl
pop
icebp
test
inc
inc
mov
push
sub
jo
sbb
add
pop
adc
adc
and
inc
jmp
mov
push
test
or
mov
movsb
ds
pop
mov
popa
add
mov
pop
mov
or
add
cmp
sbb
lret
popf
or
movl
dec
dec
push
push
inc
lock
cmp
adc
lea
daa
test
arpl
mov
dec
mov
push
xor
dec
sub
fiaddl
mov
jp
pop
scas
dec
loopne
pop
push
data16
sbb
push
movsl
sbb
and
pop
mov
hlt
insb
adc
add
add
cmp
test
test
decl
adc
dec
adc
and
xchg
ret
fsubs
add
dec
popa
xchg
dec
mov
mov
sar
inc
push
outsl
dec
dec
and
and
push
dec
push
sbb
inc
or
dec
clc
push
add
pop
test
cmp
push
pop
and
push
cmp
ret
adc
pusha
es
bound
test
lea
jmp
rclb
add
add
pop
cmp
clc
rclb
mov
adc
idivl
pop
inc
inc
inc
dec
test
fstl
sbb
popa
ret
cmc
fst
roll
aaa
aaa
lahf
movb
outsb
sti
movsb
cmpb
mov
lahf
pop
jp
in
leave
shrb
fisubrl
adc
jge
inc
xor
lods
pop
pop
je
cmpsb
dec
mov
adc
push
loope
mov
and
sbb
sbb
loopne
jecxz
push
adc
xor
cli
add
inc
adc
jb
dec
lods
adc
jns
outsb
dec
shlb
or
mov
xchg
xchg
mov
frstor
popf
ss
jg
js
aaa
sbb
lahf
mov
dec
or
jmp
andl
inc
cmp
dec
xor
jnp
sbb
js
lret
aas
sbb
adc
jae
sub
push
aad
test
dec
jmp
loop
nop
and
push
cmp
push
loope
add
jecxz
pushf
add
add
adcl
pop
xchg
mov
out
push
inc
pop
fadds
daa
orb
mov
mov
pusha
or
rolb
lret
pop
in
ss
cmp
loop
inc
and
aaa
jl
pop
or
pop
fs
adc
and
cmp
sbbl
mov
dec
out
mov
sub
andb
sub
inc
dec
icebp
xchg
mov
js
pop
or
jl
pavgb
push
push
lret
rcrl
pop
adcb
push
push
sub
fsubl
fwait
sub
and
lds
dec
sub
sbb
xor
xor
call
mov
push
aad
inc
xor
or
insb
mov
dec
mov
sub
cltd
inc
cmp
imul
xor
rolb
movzwl
ret
xchg
repz
jmp
inc
ljmp
filds
sub
dec
rcrl
pop
out
push
jo
sub
popa
adc
daa
add
lods
sbb
loope
pop
call
add
sbb
dec
jl
mov
jecxz
or
xor
push
fmull
sarb
or
aaa
mov
aam
bound
push
push
sbb
cmp
mov
aas
rorl
ret
fiaddl
xor
mov
popa
mov
or
scas
shlb
push
cmp
dec
loop
sbb
jae
inc
lds
push
fwait
sub
adc
add
adc
iret
mov
call
jb
lods
daa
sub
add
lea
dec
mov
cltd
inc
xchg
sahf
pop
or
add
push
or
test
es
loopne
pop
pop
mov
or
fsts
push
inc
mov
cmc
adc
popa
imul
pop
mov
lods
ss
jno
shrb
inc
jo
js
jg
sbb
jae
inc
pop
push
mov
add
mov
xchg
dec
inc
out
or
xchg
jns
or
mov
pop
insl
call
xchg
add
sub
mov
adc
in
ret
decl
inc
loopne,pn
xor
and
or
pop
cli
call
xor
sub
jge
je
sbb
movsb
roll
imul
dec
cltd
xlat
orb
xchg
mov
push
jnp
cmpsl
mov
mov
adc
test
dec
sbbb
push
adc
cmp
mov
pop
inc
mov
or
push
sar
or
cmpsl
jnp
pop
xchg
aas
sahf
std
cmp
nop
dec
les
scas
aaa
push
push
cmp
lods
mov
mov
lahf
add
sbbl
sub
mov
mov
xchg
dec
icebp
shlb
pop
or
movsl
andl
push
push
cwtl
jle
push
movl
push
addl
addr16
call
roll
or
test
mov
push
or
mov
push
add
jae
xor
mov
stos
addr16
add
mov
cmpsl
sti
and
add
push
mov
sbb
xchg
push
adcl
mov
sub
outsl
rcrl
ja
and
mov
shll
inc
push
lea
mov
insb
call
or
in
xlat
lea
dec
insb
pusha
lea
shrb
mov
cwtl
js
setl
fstl
pop
cmp
decl
jmp
ds
sub
in
xchg
and
sub
adc
dec
lea
mov
pop
inc
adc
or
and
jl
lods
push
pop
ja
mov
mov
xor
sbb
or
mov
rcll
push
movswl
jne
sbb
jmp
sub
pop
adc
ja
pop
aaa
scas
sub
test
xchg
rolb
mov
jp
icebp
or
sbb
add
arpl
add
arpl
xchg
jbe,pt
push
std
sbb
adc
clc
and
mov
add
lds
jns
inc
mov
ja
mov
adc
mov
sub
mov
icebp
xchg
xchg
rorb
cltd
shl
add
dec
or
adc
cwtl
inc
pushl
and
mov
sub
ss
xlat
push
jp
or
inc
fs
pop
pop
inc
dec
lahf
xchg
fs
adc
fcmovne
push
addl
inc
add
push
mov
mov
lret
pop
mov
das
jns
int
sbb
lahf
test
mov
xor
aad
cwtl
inc
pusha
imul
mov
mov
push
jg
repz
call
cmp
xchg
loope
aaa
and
add
jno
inc
mov
aaa
push
mov
or
add
ret
ja
or
das
jno
stc
lods
xchg
mov
rol
mov
adc
cmp
push
mov
sbb
pusha
pop
jb
or
adc
mov
data16
cmp
adc
mov
xchg
sbb
xchg
sub
adc
movsb
cmpsb
das
pop
mov
xchg
das
movsl
add
and
fwait
outsb
inc
sub
repz
sub
icebp
or
fs
and
test
adc
or
inc
jl
pop
js
xchg
pop
add
inc
push
adc
ljmp
imul
or
test
shll
movsl
stos
and
je
in
and
pop
dec
pop
inc
popa
mov
lea
cmp
loopne
xchg
mov
pop
add
ja
lods
in
xchg
jno
das
xlat
fwait
mov
cli
xchg
test
sti
popa
pop
imul
ss
xchg
xor
push
mov
fbstp
rol
fnstcw
push
cmp
rorb
mov
divl
jmp
push
lods
dec
mov
or
dec
adc
pop
out
jno
push
into
scas
mov
push
dec
sahf
clc
cmp
mov
adc
outsb
add
push
data16
scas
dec
sub
pop
mov
xchg
push
mov
add
pushl
daa
pop
sub
adc
daa
sub
addr16
cmp
pop
mov
aam
jecxz
sbb
mov
pop
roll
lock
or
fidivl
cld
xor
clc
inc
pop
das
mov
or
gs
push
shrb
cmp
loope
dec
adc
imul
outsb
lock
aaa
sub
fisubrl
nop
or
and
jae
fimull
sub
iret
inc
lret
clc
mov
xchg
mov
pusha
mov
cmpsl
add
pushf
push
and
xlat
cmpsb
xor
test
sub
mov
dec
xor
sbb
lods
push
mov
gs
xchg
inc
or
cmp
pop
call
xchg
cwtl
clc
mov
xchg
push
and
rclb
arpl
inc
sbb
pop
loopne
sub
xor
loopne
leave
ljmp
rcll
adc
int
fadds
add
jo
add
orb
xchg
mull
jno
loopne
mov
bound
mov
call
add
push
sbbl
nop
pop
adc
scas
sub
mov
mov
nop
inc
mov
mov
or
insb
push
cli
arpl
inc
sbb
inc
loop
xchg
nop
roll
sub
xchg
ds
xor
pop
imul
and
xor
pop
cmpsl
cmc
pop
dec
aas
mov
push
rorl
imul
mov
or
jg
popa
sbb
add
dec
sub
rclb
mov
push
movsb
bound
xor
or
xchg
inc
add
adc
call
daa
ret
iret
out
sub
adc
mov
rolb
push
push
popa
xchg
daa
mov
stos
stc
enter
jno
ss
adcl
cmp
dec
idiv
mov
push
fwait
in
nop
ljmp
add
fidivrl
mov
gs
inc
arpl
mov
dec
xchg
and
hlt
mov
lods
push
mov
ja
mov
ret
inc
mov
out
mov
mov
sub
or
arpl
and
fnstenv
dec
xchg
pop
inc
loop
adc
fcoml
xor
call
sar
inc
adc
adc
les
shll
sbb
iret
xchg
xchg
inc
inc
and
adc
xorb
and
mov
mov
lods
push
in
xchg
or
arpl
cmp
sub
popf
daa
pop
xchg
imul
mov
jno
xchg
ret
cltd
es
mov
and
xor
js
iret
mov
pop
pop
jge
push
sub
push
icebp
or
push
sub
jno
xchg
push
test
test
sbbl
mov
mov
adcb
out
jmp
inc
lods
cwtl
push
ret
arpl
inc
sub
sbb
push
sbb
pushl
push
pop
inc
sub
inc
mov
movsl
adc
repz
or
or
or
sbb
cmp
sbb
xchg
arpl
in
out
icebp
jp
xlat
js
imull
cmpsb
pcmpeqb
and
sbb
inc
lea
aas
iret
and
mov
movsl
sub
call
ss
mov
in
xlat
sub
ret
xchg
pop
movsb
aaa
lods
mov
mov
and
pop
xchg
ror
es
fcmovne
stos
call
cltd
lahf
mov
sti
adc
mov
xchg
xor
xor
xor
cmp
pop
adc
mov
mov
shrb
outsb
int
adc
pop
fwait
pop
cmpsl
push
xor
or
and
nop
insl
cltd
adc
push
adc
push
gs
push
sbb
push
and
pop
jne
push
popa
in
dec
clc
nop
xor
add
pop
add
add
inc
test
js
sbb
nop
int
imul
movsl
js
dec
pop
jecxz
rcll
and
lods
icebp
push
insb
negl
inc
add
imul
sbb
sbb
push
ljmp
push
inc
inc
arpl
push
aas
adc
sbb
and
xor
shrl
call
add
popl
jb
mov
rorb
jecxz
jns
imul
cmp
lods
push
sub
fs
lea
jns
gs
inc
scas
shrb
xor
lods
xor
cmpl
pusha
mov
jp
sbb
or
movsb
nop
cs
inc
scas
mov
xor
dec
pop
add
add
mov
jecxz
inc
ret
or
inc
cmp
imul
add
jmp
cmpl
movsl
sbb
mov
clc
lods
add
fimull
fisttpl
nop
lret
sbbb
les
sub
pop
outsb
sbb
jno
pusha
mov
xor
icebp
subl
jmp
daa
in
add
sub
mov
inc
mov
jl
outsb
rclb
test
push
xchg
les
incb
fwait
test
lea
cmp
mov
adc
or
add
shl
out
add
push
stos
add
stc
push
popa
or
jbe
scas
imul
cmc
sub
notl
fidivs
pop
cmp
pop
movsl
lret
lret
lds
les
sbb
push
sahf
movb
dec
aaa
cmp
sub
mov
push
adc
pop
adcl
fnstenv
ljmp
push
add
in
cmc
ja
dec
out
or
icebp
test
push
pop
push
sub
adc
loopw
sub
loope
scas
xlat
addl
loop
dec
xchg
cmp
jns
lock
xor
cmp
arpl
scas
stc
in
leave
les
dec
cmp
jge
mov
lahf
cwtl
push
in
cmpsl
and
pop
inc
add
and
sbb
fcmovne
push
ds
adc
inc
inc
imul
pop
in
rclb
sub
lods
iret
fchs
mov
dec
sti
call
inc
cmp
xlat
add
roll
test
lcall
loopne
inc
add
mov
rorb
lahf
out
cwtl
xchg
inc
andl
daa
ret
add
cmp
lods
or
jnp
popl
sub
inc
mov
int
insl
ljmp
xchg
sar
mov
xchg
daa
push
mov
sbb
adc
and
std
rolb
jo
pusha
cmp
add
add
pushl
test
and
ss
iret
sbb
pop
add
jle
cmp
add
dec
mov
and
xchg
xchg
shlb
jmp
pusha
push
add
add
lock
sbb
push
mov
roll
xchg
push
loope
pop
icebp
push
mov
mov
xchg
movsl
stc
xchg
ret
pop
dec
test
rolb
lods
rorl
mov
jne
orb
add
pop
pop
mov
sub
aam
or
cmp
pop
push
xchg
scas
and
add
and
inc
fs
ret
cli
xor
ss
in
sbb
shlb
out
and
mov
std
stc
xor
and
pushf
push
mov
sub
cmp
nopl
pop
and
jp
or
jno
lock
lea
dec
pop
xchg
dec
add
hlt
mov
cmc
popf
add
xor
fld
sahf
mov
add
pop
cwtl
or
pop
sub
nop
pop
lret
push
sbb
ret
xor
sub
adc
inc
pop
sub
push
sbb
icebp
pusha
jge
and
movsb
mov
mov
dec
out
and
fnstenv
push
jecxz
pop
xor
jno
cmpl
aaa
and
shrb
mov
and
out
mov
shrb
and
jne
test
push
sbb
xchg
inc
nop
es
insb
popa
jbe
xchg
test
xchg
pop
and
pusha
test
mov
test
jmp
je
xor
ljmp
mov
mov
stos
ret
inc
inc
cmc
enter
pop
rol
cmp
cmp
adc
outsl
icebp
push
xor
notl
jp
ss
pop
ret
add
mov
pusha
and
push
add
dec
push
in
mov
aas
add
imul
pop
into
xor
adc
testl
les
jbe
call
lods
popa
xor
push
inc
push
sbb
cs
lods
add
cmpsl
push
or
pop
int
ss
mov
inc
adc
mov
pop
test
jnp
xchg
inc
push
or
add
sub
pusha
jecxz
stc
lcall
sti
sti
repz
push
in
mov
xlat
push
addl
inc
sub
dec
cwtl
mov
mov
fildl
shlb
mov
sub
inc
sub
sub
add
popa
data16
add
sbb
lahf
lock
mov
out
jg
push
rolb
xchg
sbb
and
push
imul
in
sahf
xor
insb
and
push
jo
rcrb
ja
fwait
cmp
mov
xchg
pop
cwtl
dec
test
mov
scas
loop
lock
add
ffreep
sub
sbb
jl
mov
mov
inc
adc
or
fwait
mov
push
pop
push
cmp
inc
imul
xchg
pop
xorl
repz
das
add
xchg
jmp
xchg
xor
dec
mov
cltd
add
pop
cltd
sub
dec
loope
movsl
or
das
inc
dec
dec
dec
jmp
push
pop
or
xchg
sub
adc
xor
cmp
test
insb
loop
or
adc
push
sbb
sbb
or
and
mov
xor
or
xchg
pusha
jno
shrl
sbb
and
mov
mull
inc
inc
cltd
mov
cmpl
jo
xchg
sub
imul
test
sbb
loope
push
xor
sub
add
push
push
push
mov
or
into
adc
stos
inc
sarb
sbb
mov
pop
jmp
mov
sub
mov
jecxz
imul
dec
fdivl
jno
bound
lock
mov
adc
pop
adc
rclb
mov
sbbl
cmpsb
pop
into
rorl
mov
inc
repnz
mov
mov
pop
jmp
fildl
dec
pop
mov
or
sbb
pushf
and
popa
xchg
pop
and
jne
inc
mov
js
mov
push
jmp
xlat
js
add
fisubs
or
clc
rcrb
shrb
int
orl
das
lea
aad
mov
test
mov
push
mov
xchg
sub
sub
add
lods
pop
add
xchg
fwait
das
add
shrl
lock
xchg
cmpsb
and
fs
push
sti
int
add
sbb
mov
lods
popf
cmp
mov
sbb
mov
and
popa
pusha
mov
add
push
fs
mov
arpl
or
ret
jmp
mov
sub
sbb
stos
inc
lret
mov
pusha
mov
mov
ret
inc
or
sub
dec
imul
imul
lcall
jecxz
xor
sub
adc
movb
fstp
loope
andb
pop
loopne
or
jmp
and
xchg
es
xchg
pop
cmc
jbe
rol
pop
imull
jecxz
ljmp
xchg
ret
push
rclb
pop
push
add
or
jp
and
scas
mov
mov
sub
mov
fsubs
fisttps
inc
inc
cmp
aaa
sbb
add
dec
sub
jecxz
xor
adc
dec
loop
adc
mov
test
push
push
lret
mov
inc
pop
cmpsl
aad
push
sub
add
or
fs
pop
add
adc
inc
jno
cwtl
add
adc
test
inc
adc
push
jae
int
xchg
insl
cmpsl
or
fistps
sub
jle
or
cwtl
add
and
in
mov
sub
inc
add
xchg
pop
pop
jg
scas
add
pop
mov
xor
sbb
adc
push
lock
push
mov
sub
aas
push
rolb
sub
sbb
sub
js
mov
xchg
icebp
and
mov
roll
mov
mov
lcall
pop
das
push
in
sbb
push
rolb
aam
add
dec
pop
add
mov
test
fcoml
jge
xchg
mov
mov
adc
jbe
add
jg
push
sbb
jb
test
mov
mov
inc
test
popa
jo
aam
shll
fs
add
leave
jp
push
jno
pop
out
xlat
into
call
test
jne
adc
add
xor
roll
mov
pop
inc
std
or
adc
pushf
and
mov
inc
sahf
call
mov
cmpsl
cli
adc
xor
inc
ud2
fbstp
adc
and
push
xchg
daa
loop
mov
rcrb
movsl
fwait
test
dec
sar
out
dec
ja
sub
or
sub
popf
sbb
cmp
jo
xchg
xlat
push
stos
sbb
pusha
xor
inc
and
add
aas
movsb
jae
add
ss
in
mov
mov
pop
shl
jns
xor
mov
sub
ret
ret
pop
add
adc
dec
xlat
or
push
adc
dec
dec
loopne
pop
dec
cwtl
ljmp
pop
xchg
fildl
arpl
add
sbb
sbb
mov
frstor
in
xor
add
xor
add
add
xor
sub
pop
int
push
ret
lcall
push
mov
pop
xor
mov
pop
xchg
push
ss
sbb
lods
aas
insl
std
rcll
add
pop
mov
popa
fsub
mov
add
insb
xor
xor
push
sbb
hlt
gs
out
inc
das
sbb
pop
sbb
sbb
in
jmp
push
or
loope
imul
loop
inc
adc
fnsave
cmp
cs
xor
aaa
add
push
adc
ret
dec
ret
jg
jnp
sbb
xchg
mov
pusha
dec
inc
jmp
mov
mov
dec
cmp
insb
pop
cmp
das
es
rclb
push
lahf
out
xchg
sub
movsl
outsl
sbb
bound
je
cld
jns
sbb
add
movsb
adc
into
lods
in
out
shrl
pop
mov
or
repz
inc
mov
adc
adc
inc
sbb
mov
jo
mov
jg
idivl
subb
clc
sbb
add
out
rcll
and
lods
mov
xor
icebp
sbb
outsl
fidivrl
inc
add
mov
sbb
ret
cmp
and
mov
lahf
dec
pop
adc
mov
sbb
sbb
movsl
inc
sbb
popa
pushf
lods
add
iret
xchg
das
je
mov
imul
and
lods
fsubs
xchg
adc
mov
rcll
inc
out
mov
and
sub
mov
mov
fbstp
push
pusha
mov
inc
mov
add
pminub
mov
fld
adc
sbb
push
movsb
repz
call
push
push
dec
divl
insl
sbb
dec
sbb
xor
les
mov
imul
mov
mov
sbb
lods
cmp
addl
pop
push
sub
lret
and
pop
xor
mov
je
add
mov
sbb
shl
inc
loopne
and
fcmovb
out
cmp
loopne
xor
add
lock
les
and
movsb
sbb
push
out
outsl
add
shrl
xchg
cmp
lahf
adcl
addb
adc
mov
jge
jo
add
cwtl
pop
rcrl
and
sub
incl
sbb
or
adc
les
ret
out
lcall
mov
sub
or
mov
pop
aam
mov
adc
sti
jg
or
outsl
fstps
or
or
mov
cmp
nop
movsb
jnp
add
gs
cs
les
add
outsl
popa
sub
pusha
popf
lods
xchg
icebp
in
lret
pushf
add
xor
fisttpl
push
adc
ds
jg
jecxz
mov
mov
push
cmp
pop
sbb
cmp
cmpsl
sub
loop
enter
mov
sbb
int
js
cmpl
cmpl
push
cmp
pop
xchg
pushf
mov
leave
mov
add
mov
and
jle
adc
push
daa
mov
add
push
jb
rcrb
and
sub
xor
in
push
dec
adc
jne
or
aaa
shlb
sub
pop
push
out
mov
pop
loope
ds
ficomps
mov
das
cld
pusha
std
inc
popa
iret
xchg
ret
stos
pop
fwait
loopne
and
dec
inc
inc
inc
andl
mov
jno
inc
pop
and
movsl
and
cmpsl
xor
lods
fidivs
lahf
movsb
xchg
inc
negl
pop
ss
jne
movsl
cmp
jno
hlt
adc
mov
insl
fisttps
shrl
stos
xlat
in
mov
push
sub
adc
loope
jmp
adc
mov
jne
jmp
fcmovnbe
inc
adc
shl
aaa
fwait
aad
jge
shll
lock
stos
and
xlat
in
push
lret
add
inc
arpl
push
mov
pop
dec
mov
es
les
hlt
or
mov
gs
mov
hlt
and
mov
sbb
jmp
sub
cs
adc
inc
jmp
lock
adc
nop
cmp
inc
sbbl
pop
add
lds
xchg
loope
out
sub
jg
and
add
sbb
push
xor
cwtl
scas
mov
inc
mov
aam
lcall
mov
dec
pusha
inc
pop
clc
or
mov
clc
xchg
daa
aaa
in
dec
dec
push
pop
outsl
lcall
or
mov
mov
stos
dec
cmc
mov
movsb
repz
xor
lea
rcll
xor
and
fadds
outsb
sbb
jl
mov
xchg
and
cmp
mov
std
xor
cmp
scas
inc
inc
xor
les
jnp
sbb
std
in
cltd
ret
push
and
jo
mov
nop
and
xchg
lock
aad
in
shl
je
inc
out
or
movsb
les
mov
xchg
daa
cmp
push
cmp
sbb
mov
negl
adcb
shr
or
loopne
xchg
cwtl
jmp
call
add
je
pop
jecxz
mov
ret
mov
jmp
xchg
movsb
jae
jno
cmp
sbb
mov
jno
sbb
mov
and
pop
mov
push
adc
adc
sbb
inc
addr16
sub
or
scas
mov
sahf
sub
sub
lock
mov
push
ja
popa
mov
adc
sbb
push
or
mov
jge
pop
mov
lock
pop
add
sbbl
mov
or
dec
ret
xchg
pusha
testb
incl
dec
arpl
mov
inc
arpl
imul
push
jecxz
repz
mov
cmpsb
mov
xchg
pop
inc
pop
repz
mov
mov
mov
std
fsubrp
jmp
adc
xor
sub
push
push
xchg
xor
add
jp
inc
jns
adc
andl
mov
mov
leave
scas
cmp
arpl
cmpsl
mov
mov
or
sbb
mov
adc
imul
adc
insl
dec
push
jno
aaa
xor
mov
rolb
sbb
orl
rolb
sti
icebp
fsubl
jne
mov
pop
jb
nop
push
subl
out
or
inc
add
cs
mov
shrb
mov
xor
jae
cmp
mov
sbb
push
sub
fwait
and
push
jmp
pusha
pop
sbb
mov
push
mov
dec
and
stos
arpl
fstpt
icebp
mov
jns
pop
adc
mov
mov
arpl
in
push
lret
mov
repz
rorl
dec
mov
dec
js
das
cvttps2pi
sbb
das
ret
push
out
roll
scas
mov
push
xchg
xchg
jbe
push
imul
and
int3
mov
pop
fadd
and
jnp
test
loopne
mov
fwait
mov
mov
dec
jg
fadds
and
xor
arpl
xor
sbb
mov
mov
fisubrl
sbb
sub
dec
insb
pop
js
int
icebp
mov
inc
fldt
mov
inc
jp
or
dec
xchg
push
lret
pop
rolb
mov
sbb
jno
fidivrl
pop
pop
mov
sbb
push
fimuls
imul
ljmp
in
mov
and
and
sbb
sub
push
mov
mov
shrl
outsl
out
cmovb
mov
mov
xchg
xchg
sahf
jbe
cmc
add
ret
xlat
dec
pop
negb
adc
ret
jo
addr16
cmpsl
push
add
inc
inc
stos
dec
xchg
dec
out
and
sub
push
xchg
pop
pop
inc
cmp
fincstp
mov
add
push
decb
xlat
or
jne
mov
xor
in
out
loopne
ja
pop
insl
scas
mov
jle
dec
loope
iret
mov
scas
aaa
pop
cs
mov
jge
js
mov
in
rolb
lcall
jo
cmp
push
iret
popa
mov
sbb
outsl
shlb
fsubs
mov
fsubr
fnstsw
pop
and
pop
loope
movsl
xchg
sbb
inc
jle
int3
inc
jbe
mov
cmpsl
fdivs
sbb
fldcw
lcall
mov
lret
sarb
dec
call
outsl
push
js
cmp
jge
fucomi
shr
or
jg
imul
jnp
and
jecxz
loope
xchg
push
pusha
and
pop
inc
into
and
scas
mov
xor
clc
or
test
mov
jp
pop
addb
aam
mov
iret
ficoms
mov
pop
les
lock
push
dec
mov
jmp
cmpsl
fs
pop
lret
inc
ljmp
xor
push
mov
mov
stc
pop
add
and
lcall
mov
out
jmp
pop
jmp
and
call
jl
sti
cmp
and
sbb
jno
cltd
jecxz
mov
xchg
mov
addr16
jecxz
pop
add
fwait
and
test
mov
inc
sarb
negl
in
mov
popa
stc
add
popf
and
fstps
fisttpll
shll
add
inc
xlat
das
sbb
leave
xlat
or
jnp
mov
das
gs
pushf
test
jae
mov
ror
xlat
popa
pop
out
daa
in
xchg
addr16
lcall
fcomip
mov
dec
cmp
xchg
test
mov
jg
int3
push
fiadds
iret
fcomip
pop
lea
sarl
mov
lcall
add
cs
fisttpl
or
jmp
sarb
das
in
scas
call
loope
out
add
pop
out
push
sub
pop
cmp
sub
popf
mov
pop
gs
daa
sbb
shlb
push
or
and
popa
xchg
mov
pop
and
mov
pushf
pop
mov
jnp
dec
xor
movsl
cs
pop
imulb
xchg
push
mov
rorb
or
sub
jnp
sbb
sti
pop
rorl
jge
sub
popa
sbb
movsl
push
pop
push
add
mov
push
rclb
subb
ljmp
insl
popa
and
gs
mov
bound
clc
inc
ds
addr16
or
jno
mov
or
push
push
mov
mov
orb
icebp
adc
add
mov
mov
jmp
cmpsl
jl
ffreep
push
and
mov
pop
inc
dec
inc
js
pop
jo
pushf
out
or
fisubl
repz
sbb
fcmovnb
xchg
das
push
loopne
inc
jl
and
addb
inc
pop
es
add
push
out
xchg
addr16
xchg
cmp
add
vfrczss
js
mov
ljmp
loopne
imul
sub
add
lds
cmpsl
stos
test
pop
or
jg
push
sbb
popf
jl
in
lock
lods
add
repz
mov
sbb
fwait
cmpsb
add
mov
popf
iret
jmp
sbb
insb
dec
in
mov
insl
inc
inc
dec
sti
adc
sarl
outsl
aad
push
lds
mov
jle
notl
cltd
sub
xchg
push
pop
aaa
mov
lea
cmp
aam
roll
sub
push
push
or
iret
cmp
inc
or
inc
cmp
add
jae
adc
fisttpl
push
shll
xor
insl
push
mov
inc
scas
ljmp
loopne
out
sbb
and
popf
lcall
mov
fidivs
cmovne
fsub
icebp
lcall
pop
inc
fldt
dec
lret
add
lea
sbb
repnz
scas
add
gs
or
out
insl
mov
enter
cmpsl
cltd
xchg
neg
es
pop
mov
cmp
fisttpl
mov
outsb
fs
mov
repz
push
mov
ja
mov
sbb
sub
shl
pushl
add
jl
dec
insb
and
pop
ds
add
outsb
mov
in
jne
cmp
push
cmp
outsl
test
cmp
xor
adcl
cs
cmpsl
dec
mov
mov
out
nop
mov
rol
xorb
xlat
and
jmp
inc
adc
mov
pop
mov
push
movsl
negl
pxor
aas
add
mov
pop
inc
rol
call
adc
push
and
lods
inc
pusha
inc
int
inc
cmp
wbinvd
push
pop
movsl
adc
mov
scas
loope
addb
sub
xchg
cmp
inc
cmpsl
divb
in
add
cmc
lahf
shlb
aaa
jno,pn
in
lods
pop
lods
je
fdivrl
push
ret
cmp
orb
dec
push
or
aaa
jl,pn
mov
lods
xchg
vmaxpd
in
mov
push
popa
ret
mov
pop
and
call
testl
mov
dec
sub
inc
jne
fwait
insl
add
rcl
mov
and
in
call
pusha
movsl
xor
and
lret
out
ret
mov
pop
push
add
cmp
inc
aas
cmp
cmp
bound
sub
mov
sub
inc
shll
sbb
push
cmp
lcall
mov
xchg
cmpsl
add
sbb
ror
jbe
push
lcall
jmp
xor
arpl
inc
cwtl
push
sbb
icebp
xchg
mov
stc
dec
nop
cmp
inc
mov
jno
adc
mov
fbstp
inc
loope
lret
or
ljmp
jo
or
mov
ficomps
rol
scas
int
or
pop
lock
arpl
pop
cmpsl
mov
shrl
popa
lods
add
pop
cmp
jo
xchg
cmp
arpl
cmp
pop
jecxz
mov
sbb
xorl
cs
out
fwait
mov
into
jns
lahf
sarl
fstpl
loopne
add
shlb
jo
xor
cmpsl
sub
add
xlat
xor
in
mov
sbb
mov
jecxz
jmp
inc
mov
lcall
ljmp
and
in
test
sbb
enter
icebp
and
xchg
das
add
clc
lods
jecxz
cli
dec
fisttpl
daa
scas
inc
outsl
lock
xchg
lods
popa
adc
cmp
test
testl
es
ds
mov
into
outsb
cmp
xchg
mov
push
mov
inc
or
icebp
dec
push
xchg
in
cmp
les
out
jno
inc
sub
call
arpl
pop
scas
lock
inc
add
aam
add
ret
idiv
add
push
cmc
pop
stc
mov
cltd
xchg
sub
ret
adc
inc
mov
out
push
das
pop
and
inc
xor
adc
mov
pop
aaa
mov
imull
sbb
dec
mov
pop
testl
jno
je
jne
ljmp
mov
js
outsb
pushf
fdivrs
dec
ror
push
ja
xchg
mov
lahf
aam
imul
push
push
das
or
push
pop
pusha
sti
pop
mov
inc
dec
xor
adc
hlt
dec
loope
movsb
and
push
fstpl
out
dec
or
mov
cld
cwtl
dec
push
pop
ljmp
in
mov
movsl
into
enter
xchg
js
jae
fwait
pop
xlat
pop
lock
cmp
mov
out
test
stos
and
pushf
loop
dec
notl
sbb
sbb
cmp
mov
loop
loope
out
or
push
pop
dec
push
or
pop
mov
movsb
mov
cld
daa
out
adcb
aam
add
mov
repz
xlat
dec
dec
pop
icebp
in
inc
jl
dec
hlt
dec
xchg
sbb
lea
push
cmp
insb
nop
pop
dec
mov
lock
dec
jmp
xchg
nop
movsl
iret
out
dec
push
fsubl
outsl
pop
add
add
hlt
dec
imull
push
dec
cli
ljmp
addl
daa
pop
push
xor
push
sub
xchg
adc
hlt
imul
push
call
sub
dec
mov
or
sbb
and
rcrb
jg
sub
push
pusha
stos
xchg
repz
dec
xchg
push
jns
sub
dec
add
push
aaa
add
add
ret
stos
xorl
shll
sub
testl
in
out
xor
out
repz
hlt
sub
jno
dec
push
fsubl
rorl
mov
dec
mov
addb
mov
dec
add
daa
push
roll
jl
add
adc
dec
xchg
in
insb
mov
aam
mov
cmp
xchg
std
stc
pop
je
cmp
insl
push
sub
lret
add
stos
sbb
js
inc
jns
mov
aad
or
call
mov
xor
in
inc
adc
xchg
aas
push
jge
pushf
cmc
sub
loopne
jmp
icebp
inc
dec
xor
and
negl
loope
inc
arpl
int3
repnz
sbb
add
sub
add
adc
psllq
sub
stos
dec
mov
mov
xchg
push
rorl
orl
mov
outsl
cltd
fstpl
and
sub
adc
lods
add
leave
fisttpl
mov
and
and
sbb
push
xchg
addb
repz
dec
cmp
std
lods
dec
fstpl
insl
or
pop
pop
push
add
mov
pop
mov
push
shll
jb
shl
inc
popa
xor
pushf
lock
push
pushf
sub
push
mov
orl
sbb
adc
in
pop
dec
add
pop
popf
loopne
dec
aaa
or
inc
push
jl
pop
subl
ret
stc
fcom
jl
test
daa
sbb
adcl
in
add
fisttps
scas
fmull
int3
dec
loope
popa
add
push
xor
loopne
dec
mov
push
dec
push
rcrb
aad
adc
sbb
mov
mov
and
nop
sbb
sti
lds
jge
ja
mov
pop
jo
add
sahf
pushl
xchg
adc
lock
popa
fbstp
pop
dec
xorb
mov
and
inc
xchg
dec
push
xor
out
sub
fucom
in
pop
sahf
cmp
iret
lods
mulb
push
inc
mov
call
and
loop
push
cmp
lods
jnp
and
or
fldt
xchg
push
add
inc
ja
cltd
mov
sti
adc
sbb
dec
adc
mov
push
faddp
insl
jb
cs
push
loopne
push
xchg
pop
inc
pop
test
push
sahf
dec
and
pop
cmp
add
andl
push
push
cli
in
mov
inc
or
xor
or
pop
scas
fsubrs
ja
xchg
push
and
loopne
fdivr
push
push
ret
sarl
push
mov
dec
lahf
popa
adc
negl
inc
arpl
push
mov
mov
ret
sub
adc
add
push
add
push
outsl
rol
cmp
add
jae
test
das
sub
test
daa
jmp
ficoml
sbb
repz
or
push
icebp
imul
adc
loope
add
mov
lea
dec
cmpsl
mov
sbb
mov
mov
ja
mov
xchg
mov
scas
push
jbe
faddp
dec
adc
enter
dec
notb
loop
adc
test
push
icebp
call
mov
pop
sub
dec
push
jle
sub
movsb
jmp
iret
in
jbe
ret
lahf
icebp
lds
xchg
mov
repz
mov
xor
aaa
push
pop
pop
add
jne
dec
jp
jnp
mov
lea
repz
stos
stc
jne
fistpll
jno
fidivl
jno
lock
mov
pop
sub
fldenv
xchg
mov
pop
push
mov
ja
insb
xchg
pop
cmc
mov
fidivrs
inc
mov
pusha
loope
push
stos
dec
mov
lock
sti
rolb
out
or
fwait
mull
test
mov
sub
xchg
lcall
sbb
cwtl
inc
insl
cmpl
aad
aam
fwait
jg
mov
jg
bnd
sarb
mov
pusha
lahf
or
jp
mov
jo
dec
xchg
and
inc
jecxz
mov
xchg
sub
jge
add
loope,pt
or
inc
and
lea
and
inc
pop
movl
or
mov
adcl
inc
hlt
rorb
xor
outsl
ror
add
std
fld
adc
add
data16
cmpsb
gs
cs
push
mov
ret
or
pop
xor
mov
mov
adc
stos
mov
pop
repz
jl
test
divl
inc
clc
sbb
jno
roll
inc
repz
jnp
test
scas
fwait
pop
add
xchg
outsl
push
push
add
fists
jae
dec
pusha
push
pcmpeqw
jae
mov
sbb
out
xor
add
jecxz
mov
sbb
jge
jb
sub
insb
lods
adc
loopne
xchg
mov
outsb
push
dec
dec
in
add
mov
xchg
xchg
jg
dec
test
enter
pop
ja
pop
bound
arpl
jecxz
subl
pop
mov
jecxz
clc
in
loope
mov
pop
push
test
mov
mov
shlb
leave
cmp
sub
jb
cmp
or
jl
lods
cmp
jno
movsl
mov
and
arpl
sbb
adc
cmpl
out
test
add
jg
add
sbb
adc
je
lods
xor
cmp
push
rcll
dec
sbb
aad
movsb
lea
lahf
lods
add
pop
dec
fistpll
frstor
pop
jno
lds
inc
test
les
rclb
adc
jne
cmc
adc
push
inc
xor
mov
cmc
xor
cmp
jno
mov
ret
cmc
fldl
movsb
adc
add
xchg
pop
mov
jl
jnp
lret
lea
cmp
pop
lock
loop
push
nop
cmc
in
aas
fadds
and
lcall
faddl
test
pop
pop
pop
mov
xchg
cmp
and
ret
loope
jo
inc
imul
inc
movsb
loopne
jae
lret
mov
add
fwait
push
fisttps
shll
outsl
cmp
movsl
daa
fcompl
loopne
popa
scas
adcb
xor
pop
lds
xor
add
jmp
shlb
lahf
ja
sub
push
or
sub
adc
mov
cmc
ret
scas
in
insl
mov
add
cmp
inc
in
popa
fsubr
xlat
imul
xor
cmpsl
add
cltd
add
inc
sub
dec
pop
pop
jmp
pop
lods
testb
lods
push
in
aas
mov
inc
sub
mov
mov
xor
jo
lret
in
inc
cmovbe
add
mov
loope
sub
pop
sbb
movsb
add
aam
adc
andl
pop
sbb
sbb
mov
sahf
xchg
mov
ljmp
sbb
scas
xlat
pusha
lock
cli
pushf
or
pop
enter
push
loope
jae
scas
push
push
adc
addl
fldenv
adc
mov
leave
jno
loope
pop
jae
jge
movsl
negl
mov
das
stos
push
and
fiaddl
and
mov
or
enter
pop
outsl
arpl
lds
outsb
jp
outsl
jno
sarb
xor
sbb
cmpsl
aam
inc
stos
add
sub
es
gs
xchg
outsl
jge
dec
mov
or
rcrb
lea
pop
leave
pop
add
jmp
xor
xor
pop
and
jl
jae
shr
jge
aaa
cmc
mov
cmp
xlat
push
enter
sub
push
sub
add
cmp
dec
aaa
loope
and
inc
not
ja
dec
dec
mov
test
ds
icebp
cli
enter
insb
inc
mov
fwait
dec
jl
ret
enter
pop
loope
fistps
add
push
out
sbb
xchg
rcll
mov
or
mov
dec
jo
pop
jecxz
stc
cmpsl
dec
sbb
inc
ror
mov
popa
fidivl
mov
shll
cmp
push
xchg
out
bound
sbbl
js
arpl
popa
pop
pop
cmp
testl
sub
iret
mov
jg
cmp
mov
pop
push
mov
jnp
out
mov
fildl
ret
xor
push
push
pop
adc
orl
sahf
add
ja
scas
jo
pop
aaa
xor
adc
shll
test
mov
insl
inc
in
jo
and
mov
dec
jo
daa
xlat
cli
fmuls
notl
leave
cmp
xchg
push
xor
test
incb
fnsave
daa
aaa
in
push
push
lret
movsb
jp
xchg
jge
sub
jmp
insl
lret
movsl
mov
addr16
es
scas
dec
js
mov
xor
cmp
lret
push
sbb
stos
and
add
or
fsubrl
pop
jg
shll
sti
add
jnp
and
push
insb
xor
and
sbbb
cmp
cmpsb
add
push
adc
addr16
fstps
pop
push
jb
dec
xlat
loope
lret
pop
mull
xchg
int
xchg
pop
cli
jbe
fnsave
fdivs
ja
adc
jno
pop
cltd
jge
mov
and
pop
in
fldl
clc
and
and
push
rolb
and
add
adc
mov
bound
or
cmc
stos
fimuls
push
dec
icebp
push
pop
or
or
cmp
jl
popa
mov
adcb
xchg
enter
xchg
jnp
sub
jbe
xchg
enter
sub
scas
lods
sub
xlat
idivl
rolb
jmp
fldt
movsb
adc
xchg
lods
fstpt
shrl
lret
adc
xor
sbb
mov
cltd
add
repz
sbb
inc
pop
push
push
enter
movsb
cltd
inc
cmc
sub
outsb
xlat
add
cli
jl
add
cmp
je
test
ss
pop
scas
pop
adc
inc
cmpsl
jg
pop
arpl
and
or
or
test
shll
insl
jno
cmp
jbe
imul
lods
imul
add
or
ret
jns
loope
inc
jo
sbb
popf
jp
adc
dec
insb
and
push
fwait
dec
mov
and
sbb
dec
xchg
imul
push
dec
cmp
and
inc
loop
gs
loope
mov
repnz
sub
movsb
fwait
jns
jb
fwait
sbb
sbb
imul
ja
cmp
inc
sub
leave
sub
jbe
lock
popaw
mov
push
mov
je
inc
aas
inc
mov
pop
faddl
ror
fcmovne
xchg
int3
add
addb
pop
cwtl
mov
int3
cmpsl
dec
sub
xchg
ret
loopne
add
adc
sbb
or
test
cmpsl
pop
xchg
enter
and
cmp
push
movsl
inc
cmpsl
mov
in
lds
pusha
sub
jae
jno
in
loope
mov
rorb
jg
int
mov
push
lcall
xchg
imul
ljmp
fsubs
push
add
cmpsw
mov
ficoms
out
pop
stos
cmp
or
fcmovnb
pop
sub
ret
push
imul
mov
cmp
scas
movsb
and
xor
mov
aas
gs
shrb
or
mov
jno
pusha
lods
add
or
int
add
inc
lcall
pop
aam
test
arpl
ret
in
pop
ror
sub
jl
pop
pop
jmp
xlat
push
sbb
add
es
gs
or
cs
or
jo
adc
fwait
jecxz
in
inc
dec
incb
add
sbb
lea
dec
scas
sbb
mov
cmpsl
pop
mov
arpl
sbb
pop
out
ret
jmp
ficomps
add
pop
push
es
addr16
mov
scas
mov
gs
xchg
xchg
rcrb
mov
outsl
popf
or
clc
shlb
es
cltd
cmpsb
dec
fadds
jg
jge
push
mov
xor
mov
ljmp
fcoms
xor
popf
add
rcl
push
lods
ret
sbb
aaa
out
pop
ret
add
pop
stos
scas
pop
mov
repz
and
aad
inc
mov
fisubrs
inc
daa
xchg
lea
pop
shr
imull
aaa
and
adc
or
push
test
fisttps
and
adc
shr
sbb
jmp
and
imul
out
arpl
mov
sbb
cmp
stos
aaa
xchg
inc
outsl
test
arpl
arpl
gs
cmp
add
inc
xchg
bound
popf
mov
jo
add
popf
pop
sub
sbb
int3
cmp
fwait
daa
adc
mov
test
lds
adc
lock
xor
je
push
or
in
push
adc
sbb
xlat
adc
rclb
add
dec
sub
ja
inc
dec
sbb
jmp
add
lock
out
les
and
jmp
xchg
aad
push
test
push
inc
mov
aaa
adc
sbb
push
xchg
jbe
push
dec
mov
bound
xchg
mov
mov
mov
dec
rcl
pop
or
or
or
jge
dec
mov
ror
xchg
pop
add
sbb
xor
popa
and
arpl
xor
lahf
sub
mov
and
pop
push
mov
popa
or
or
or
sub
mov
sbb
lods
dec
test
add
roll
pop
pop
ljmp
xor
xchg
sub
pop
or
frstor
lds
dec
frstor
push
aaa
push
sub
movsb
cmp
dec
cmp
xchg
dec
dec
not
add
flds
cmp
push
mov
lods
add
add
adc
dec
test
lret
repz
and
popa
lds
movsb
call
jns
mov
push
test
loopne
lds
das
cmp
dec
stos
outsb
int3
jns
out
outsl
bound
iret
and
mov
xor
jl
xor
loope
xor
out
addr16
pusha
mov
outsl
out
sbb
lcall
sahf
xor
pusha
mov
stos
sahf
pop
je
lahf
adc
push
shlb
addb
sbb
xlat
test
sarb
inc
mov
stc
add
sbb
pop
and
mov
pop
mull
mov
aad
fcmovnb
jle
mov
stc
rolb
dec
mov
test
lds
test
cmp
dec
sub
iret
xlat
shlb
lret
imul
int
sbbl
xchg
int3
rcl
jo
aas
outsb
aas
jb
ret
outsb
dec
rcll
lock
out
lahf
inc
xchg
outsb
or
pop
xor
gs
test
jg
scas
sbb
aaa
in
repnz
cmp
xlat
iret
les
or
addl
pushf
jp
lcall
lret
add
sub
and
adc
mov
fldt
sti
xor
pop
test
notb
pop
and
insl
fisttpl
push
inc
ss
push
xchg
pop
neg
jge
std
xor
adc
sub
sbb
mov
popa
and
cltd
and
mov
mov
lahf
sti
and
out
test
or
jae
ja
adc
xor
adc
pop
fdivrl
iret
mov
or
fdivr
jns
rdmsr
dec
popf
mov
push
aad
sub
popa
mov
push
mov
daa
lahf
adc
cmp
push
mov
add
daa
mov
test
inc
sub
xchg
cwtl
sbb
aaa
cld
ds
loopne
cwtl
stc
outsl
cwtl
inc
pop
fbld
add
adc
cwtl
sub
pop
ja
outsb
cli
adc
or
rcrl
xchg
sbb
add
lods
enter
sarl
and
addr16
mov
push
and
push
popf
push
or
or
test
popf
or
sahf
and
dec
das
mov
push
xchg
loope
adc
mov
fisttps
imul
add
and
imul
mov
xchg
test
adc
fmulp
push
and
pop
xchg
xchg
sub
rorl
nop
adc
jne
cmp
mov
loop
mov
lahf
mov
fnstcw
push
int
adc
cmp
push
movl
inc
pop
test
dec
outsl
clc
ficoms
out
push
lret
test
mov
cmpsb
xlat
test
mov
pop
mov
mov
aas
aaa
fmull
outsb
lods
mul
push
in
jae
xchg
ret
outsb
invd
jbe
xor
or
mov
scas
in
xchg
mov
adc
or
repz
adc
fnstenv
rcr
adc
inc
push
jmp
mov
mov
fiadds
out
pop
fildl
push
imul
js
and
xchg
int
out
pop
aas
dec
sbb
adc
ret
jge
hlt
push
sub
mov
daa
xchg
jmp
js
jno
xorb
orl
and
adc
pusha
shll
sahf
loope
add
jne
push
repz
xchg
repz
mov
cmp
or
mov
push
push
mov
pop
jno
xchg
mov
sbb
lret
out
test
mov
stos
adc
pop
pop
or
andb
in
pop
adc
adc
pop
dec
inc
pop
add
fistpll
xchg
in
add
loope
dec
adc
and
arpl
adc
mov
test
jne
fidivl
jecxz
rclb
jno
push
inc
cmp
mov
daa
das
cmp
in
adc
hlt
or
cld
out
add
adc
inc
testb
xlat
lods
cmp
shll
cmp
pop
mov
jp
mov
faddl
or
push
jl
out
loopne
mov
subb
pop
jbe
dec
ss
shl
inc
add
xchg
mov
sbb
popf
jle
and
xlat
call
sbb
fisttps
les
sbb
popl
jnp
xchg
mov
stos
rolb
xchg
divb
jo
inc
xor
sbb
xor
pop
or
orb
mov
cmp
jg
inc
rorl
push
push
ficoml
loop
movsb
mov
and
push
inc
xor
add
sbb
mov
mov
rcrb
xlat
mov
and
mov
movb
mov
cld
xor
xchg
mov
loopne
pop
sub
loopne
and
mov
xchg
hlt
xchg
int
out
fadd
push
rolb
enter
loope
fcmovnb
lods
cld
out
das
mov
mov
add
mov
add
pusha
shl
test
cmpxchg
lock
cmpsl
and
cmp
sub
hlt
cmp
jl
mov
inc
out
mov
rclb
test
and
mov
add
dec
sbb
icebp
cmp
push
in
ret
notb
xlat
dec
aas
mov
ljmp
test
ss
push
test
jge
mov
sbb
sbb
repz
xchg
adc
add
and
push
in
xor
mov
jb
jb
lret
inc
jnp
and
mov
ret
popa
popl
mov
rcrb
test
pushf
cwtl
scas
xchg
mov
add
in
add
sar
fwait
ds
cwtl
cwtl
outsl
inc
mov
out
mov
je
xor
add
negb
movb
sbb
jo,pt
call
xor
add
and
jno
xor
fadd
sarl
sbb
fwait
icebp
loope
and
call
outsb
lret
add
mov
cld
cmp
dec
ret
inc
cmpsb
fdiv
pop
gs
xor
push
fiaddl
nop
je
stos
xchg
and
or
sub
jecxz
xchg
pop
shrl
in
int3
mov
sub
or
mov
shll
cld
sbb
push
hlt
mov
push
popf
aas
fnsave
js
sti
or
inc
jnp
movsl
insb
out
popf
fmulp
cmp
xchg
inc
outsb
fstpt
jl
repz
mov
push
lret
sbb
cmp
add
incl
xchg
je
push
add
sbb
addl
jno
cmp
out
add
xchg
and
cmp
add
inc
sbb
test
inc
mov
scas
rcrb
add
cs
or
xor
dec
push
mov
jp
aad
clc
cwtl
jae
or
mov
mov
mov
cmc
pop
add
push
xchg
cmp
add
rolb
xchg
pop
dec
mov
test
xchg
and
xchg
loope
ds
cli
add
xor
pusha
ss
adc
mov
add
mov
test
and
add
sarl
mov
pop
das
inc
mov
movl
in
lock
jae
jne
add
push
stos
out
aas
std
mov
inc
loope
insb
mov
leave
jo
mov
mov
xchg
mov
xchg
aad
jbe
pop
in
stos
xor
orl
in
xchg
test
jg
xor
xor
je
fbld
int3
ss
andl
adc
jb
mov
in
mov
ds
call
inc
adc
fdivrl
cmc
ret
xchg
sub
shr
imul
enter
sahf
loope
fbstp
nop
std
mov
add
fmull
std
jnp
pop
loopne
inc
shrl
notb
aaa
js
xor
add
jp,pn
mov
sbb
sub
fs
xchg
mov
test
add
aam
add
jmp
mov
pop
cmp
push
negb
cmp
push
ja
pushf
mov
mov
rcl
subl
add
mov
popa
xor
sbb
loope
or
push
xchg
je
cmp
aaa
add
dec
in
lock
jbe
lods
test
ljmp
pop
rcrb
push
xchg
xorl
subb
rcrb
mov
lret
cli
push
into
fdiv
mov
jnp
cmp
xor
mov
xchg
sbb
imul
inc
dec
call
mov
icebp
mov
je
test
mov
repz
push
jnp
inc
shll
dec
push
cmp
pop
loopne
xchg
mov
loop
mov
mov
and
and
sub
adc
mov
shl
pop
push
and
mov
sbb
clc
jg
mov
loope
add
fcmovnb
pop
lret
ljmp
insb
enter
popa
adc
sub
and
pop
mov
mov
test
pop
pop
jl
push
clc
ret
sub
xchg
rolb
xchg
popf
or
aas
push
mov
add
fmuls
inc
test
mov
loopne
out
std
mov
daa
inc
lret
add
test
sbb
je
repz
je
push
cmp
js
test
dec
mov
xchg
jecxz
and
pop
inc
ror
scas
fildl
jg
jl
add
adc
stos
xlat
mov
or
lcall
mov
mov
mov
cmp
push
icebp
or
mov
inc
rol
enter
or
mov
pop
mov
scas
ret
cmp
arpl
daa
and
pop
mov
inc
push
mov
adc
subb
jmp
daa
cmp
int3
mov
mov
xchg
jbe
pop
jne
push
or
push
ret
es
daa
adc
push
mov
mov
sbb
mov
or
xor
inc
clc
pop
or
add
mov
pusha
and
cmp
or
cltd
sbb
mov
mov
lahf
arpl
pop
movsb
out
sub
jl
cmp
dec
clc
test
js
or
or
sbb
sbb
cmpsl
dec
test
jecxz
push
jno
adc
or
nop
scas
daa
cmp
jle
sub
cmpsb
adc
cmp
push
jne
fmul
add
adc
arpl
jle
icebp
out
cmp
push
call
mov
ret
and
mov
mov
cmpb
loop
cmp
ficompl
jg
jp
cpuid
jecxz
cmp
pop
sbb
fdivs
cwtl
ja
fnstenv
cld
scas
xor
mov
push
lret
clc
cmp
mov
inc
jmp
ret
arpl
xor
inc
iret
in
fcmovnb
mov
cmp
ja
push
in
jl
inc
pop
add
insl
mov
ja
stos
ret
mov
mull
mov
and
sbb
adc
push
and
cmp
push
cmpl
aaa
or
cli
ficompl
imul
lcall
xor
push
add
sub
mov
mov
clc
adc
out
mov
andb
add
js
cmp
xor
sahf
push
loop
push
push
shr
js
mov
aaa
pop
daa
mov
jno
divl
sub
test
aas
xor
inc
loop
jge
pop
das
lods
outsl
in
ljmp
clc
jecxz
ret
pop
and
xor
pop
push
insl
leave
mov
mov
lret
fldt
add
ret
lds
sub
mov
loopne
mov
mov
int
daa
clc
cmc
inc
or
inc
adc
jle
movsb
mov
inc
fiadds
lcall
sub
sbb
mov
mov
mov
lret
add
rcrl
out
stos
mov
xor
test
in
inc
mov
leave
adc
push
ret
ljmp
dec
mov
inc
hlt
data16
adc
lret
mov
dec
sbb
aam
je
out
subb
push
movsl
nop
inc
insb
arpl
add
cmp
add
jbe
loopne
push
jmp
xor
adc
xor
dec
cmc
push
sbb
push
aad
cld
fdivs
xor
dec
rolb
xchg
fmuls
lock
or
outsl
push
ss
cmp
sbb
fsubrl
add
mov
loope
sbb
mov
jg
sar
into
mov
pop
fs
mov
push
push
mov
std
lock
outsb
lahf
insb
xchg
jecxz
punpckhbw
test
fldl2e
or
mov
inc
mov
ret
add
loope
shll
push
outsl
push
push
out
xor
dec
xchg
shll
push
or
pushf
jns
lods
mov
push
insb
lret
pop
sub
aaa
lret
or
sub
aas
sarl
je
xor
jecxz
lcall
dec
sub
rcr
fcmovnu
mov
sarl
dec
test
cwtl
hlt
push
popa
jo
mov
cmp
push
pop
negl
or
cwtl
push
xor
mov
mov
mov
push
mov
add
inc
rcrb
pop
out
in
aad
sahf
sarl
leave
das
insb
out
ret
call
sub
lea
mov
inc
je
and
xchg
push
mov
ret
ljmp
xchg
pop
push
gs
adc
iret
xchg
jo
rolb
jae
movsl
mov
jnp
out
adc
xor
test
mov
test
shl
cmpsb
sbb
pop
dec
and
xor
dec
and
ljmp
jno
push
push
xchg
push
sub
cmpl
pop
dec
xchg
inc
mov
jo
xchg
popl
ficoml
insl
inc
or
fbld
inc
sti
mov
stc
add
jne,pt
dec
shll
pand
mov
jg
jb
sarl
or
sbb
jge
xchg
inc
rcrb
mov
rclb
pop
mov
xchg
adc
jne
lods
cmp
insb
imul
mov
aas
test
and
push
xor
or
int3
mov
xor
jbe
outsb
adc
xchg
int
jecxz,pt
add
hlt
mov
fadds
loope
mov
sub
pop
xchg
inc
inc
out
jecxz
loop
mov
push
scas
mov
or
pushf
or
icebp
jne
stos
nop
mov
jno
adc
cli
or
cltd
mov
gs
mov
xchg
ljmp
js
xor
lret
xchg
ss
cwtl
sbb
aaa
inc
loopne
pusha
or
xor
jl
sbb
mov
jle
ljmp
hlt
sbb
outsl
adc
frstor
sub
sbb
ljmp
cmp
pop
loopne
xchg
scas
mov
mov
push
out
jbe
fidivl
test
cs
jb
fs
cmp
add
aad
lock
and
adc
cmp
sub
push
xchg
mov
in
stc
ret
mov
mov
mov
xor
mov
xchg
shlb
popf
cs
out
jno
popf
gs
mov
xchg
push
push
jb
or
or
mov
push
ss
inc
or
cmp
mov
mov
aas
sahf
add
hlt
aas
mov
dec
jns
add
sub
pop
jne
lock
movsl
pop
mov
mov
fstpt
pop
rclb
into
cmpl
xor
inc
mov
outsl
fnstenv
pushf
jp
push
es
xor
lret
jl
push
push
lret
mov
sbb
lods
aas
insb
fnstcw
and
fs
mov
ret
lds
aas
xchg
mov
mov
cmp
shrb
pop
add
mov
and
lahf
push
jge
rolb
decb
mov
je
sbb
jl
mov
pop
jp
cmpsb
adc
mov
push
aam
nop
xor
sub
mov
jbe
call
cmpsl
call
pop
jbe
mov
add
sbb
jmp
adc
cmp
lcall
filds
arpl
cmp
xchg
xor
push
adc
push
sub
rol
and
nop
mov
dec
lock
push
pop
aas
mov
pmuludq
outsb
sbb
xor
cmp
sbb
mov
js
jecxz
mov
pop
adc
adc
sbb
push
xchg
in
movsb
hlt
rclb
mov
hlt
push
xor
cld
mov
aas
nop
xchg
ds
cmp
rcrb
push
cmp
adc
je
aam
pop
jb
popa
cwtl
inc
push
pop
sbb
pop
test
daa
cltd
add
lds
add
lret
fsub
mov
push
xchg
mov
fmulp
cmpsb
pushl
cli
pusha
sahf
mov
xchg
call
jmp
lods
rolb
cs
mov
insl
popa
out
je
fdecstp
stos
dec
insb
icebp
mov
div
and
mov
mov
lock
mov
pop
shl
xchg
add
mov
cmpsl
mov
dec
add
jbe
mov
push
gs
roll
sbb
add
inc
cmp
add
and
mov
test
mov
testb
jge
ror
xorl
out
arpl
popf
ja
movsb
fsts
fildl
aam
sub
jo
lahf
add
sbb
add
out
sub
mov
test
movsl
push
add
arpl
push
jne
jmp
dec
add
scas
xor
cmp
mov
sbb
scas
cmp
mov
sahf
movsb
mov
and
icebp
shll
fadd
jnp
lods
negl
jecxz
jb
int
movsb
or
data16
mov
push
add
hlt
cmp
lds
hlt
insb
mov
cmp
adc
fmuls
lods
push
outsl
add
mov
insl
out
pop
push
jnp
rorb
rcrl
lods
subb
imul
add
mov
popa
aad
test
ds
mov
clc
mov
push
sahf
ss
xchg
mov
test
repz
pop
bswap
cli
les
ss
mov
pop
loope
push
ja
mov
iret
rol
dec
lods
jo
mov
divb
fimuls
xor
stos
add
mov
push
movsb
pop
mov
xchg
clc
test
inc
and
mov
push
jl
xchg
roll
insb
test
mov
jns
pop
lock
sbb
movsl
shlb
outsb
lea
xchg
xor
sbb
imul
insb
jo
fdivrs
mov
lea
sbb
loop
gs
call
xor
rcrb
add
lock
sbb
pop
lahf
shll
add
jnp
and
mov
mov
ret
or
mov
xchg
clc
test
add
ljmp
aam
adc
jno
in
xchg
push
jo
and
lods
pop
clc
mov
insb
jmp
push
pop
adc
add
imul
mov
jo
incb
insb
dec
pop
cmpsl
in
jle
push
insl
les
addl
cmp
movsb
aaa
cmpsb
fidivrl
test
jmp
inc
rolb
rcr
into
xor
mov
inc
cltd
shl
mov
add
sbb
sahf
cmp
clc
mov
data16
int3
push
jge
and
loope
inc
daa
or
xor
mov
fidivrl
sub
cmc
ds
sub
test
sub
iret
pop
ds
or
cmp
cli
cmpsb
push
roll
shlb
sbb
sahf
fs
leave
ret
and
add
ret
popf
jle
sbb
icebp
cltd
mov
adc
mov
rcl
out
movl
and
hlt
and
shlb
sub
inc
and
mov
cmc
jnp
clc
inc
js
popf
nop
loopne
sahf
mov
notl
cmp
or
jle
adc
not
stos
or
jle
scas
jle
xor
jecxz
loop
in
test
xorl
push
sbb
mov
lea
sahf
mov
xchg
stos
loopne
pop
xchg
push
push
mov
out
jecxz
fcom
or
mov
loope
sub
incl
pop
out
pop
aam
jbe
adc
aad
mov
aas
cmp
sti
les
divl
xor
inc
shll
xchg
sub
movsb
imul
movsl
sbb
mov
add
mov
mov
insl
aas
dec
cmp
cs
add
jae
add
dec
xchg
cltd
inc
and
out
arpl
divl
lock
loopne
stc
hlt
xor
xchg
adc
stos
xor
push
jle
scas
push
out
stos
in
xchg
std
or
insb
cmp
cmp
lcall
inc
cmp
jg
jl,pt
rcrb
ret
sbb
adc
int
jl
outsl
arpl
xchg
push
popa
scas
ret
cmp
fsubrs
in
cmc
sbb
inc
jbe
out
xchg
test
pop
in
add
mov
dec
pop
jl
jg
mov
sbb
inc
lods
shr
mov
icebp
andb
and
test
mov
jmp
mov
and
mov
scas
ss
clc
insb
out
insb
adc
ret
add
cmp
in
mov
push
jecxz
imul
cld
mov
lds
gs
mov
cld
xor
mov
ret
jno
cmp
icebp
xchg
inc
jae
fadds
mov
scas
fsubrl
int
inc
cmp
pop
in
dec
adc
shrb
mov
aad
jge
inc
aaa
jge
cmp
in
shll
fnstcw
negl
jno
fcomps
int
movsl
lahf
xor
jne,pn
add
test
cli
jge
jmp
xchg
and
sbb
testl
push
pop
push
shll
mov
rclb
xor
outsl
aam
mov
cmpsl
repnz
lret
mov
mov
leave
cmpsb
mov
jmp
cmc
inc
into
outsb
and
sbb
dec
bound
nop
jp
dec
jo
movsl
div
popa
cmp
rol
iret
jp
push
fcom
shl
daa
lods
inc
mov
pop
arpl
push
inc
out
popf
add
shrb
xor
loope
ret
out
fmull
insb
mov
cld
xor
bound
ret
or
arpl
cmp
std
pushf
enter
fwait
add
clc
sbb
lret
and
lcall
lret
or
push
jge
fmuls
shl
out
shll
adc
jle
fisttpll
dec
jl
sahf
push
movsb
mov
pop
cmp
test
out
adcl
jmp
xchg
sbb
jo
setae
add
inc
pop
movsl
xor
pop
movb
mov
xor
and
mov
pop
cmpl
sbb
pop
dec
outsb
bound
and
pop
sub
or
push
pop
mov
xor
dec
xor
and
subl
pop
or
pop
ljmp
mov
daa
dec
sbb
mov
push
movsl
out
aam
rcll
push
mov
cltd
call
add
pop
dec
push
test
push
es
jg
cmc
lea
mov
int
notb
or
ret
leave
mov
inc
fucom
loope
stos
js
mov
mov
in
lods
cmpsb
xchg
iret
mov
push
inc
inc
xor
or
mov
lods
sahf
push
aad
jae
push
xchg
push
push
lahf
push
pop
lods
insb
xor
push
jnp
stc
and
lock
je
ss
dec
sarb
inc
adc
out
add
add
or
ja
sbb
daa
int
pushf
or
sbb
xor
lret
add
xor
movsl
sbb
loope
xor
inc
je
mov
lahf
jmp
mov
notl
mov
lock
jb
cs
jae
push
sub
xchg
out
jne
es
cwtl
lcall
addb
rcl
mov
jne
addr16
mov
fwait
mov
out
aas
cmp
xchg
pop
notl
or
mov
icebp
push
sub
std
test
es
adc
xor
mov
call
xor
xor
sub
mov
mov
fdivrl
add
sub
jnp
lahf
xchg
fcompl
insb
popa
fsubrs
dec
pop
xor
dec
sbb
dec
rorb
push
insl
test
mov
sub
fwait
aaa
cmp
das
and
push
fimuls
addb
add
mov
int
loope
testb
stos
aaa
cld
mov
jbe
leave
insb
sub
add
lahf
sahf
dec
sbb
xchg
ja
jl
xor
loopne
cmpsb
mov
pop
fsubs
sbb
stos
sbbl
xor
sub
xchg
cld
add
addr16
cmp
fimuls
push
mov
testl
sub
jb
cmc
movsb
mov
or
or
adc
cmp
sbb
daa
ret
xlat
std
xor
xchg
sub
adc
cld
xchg
dec
mov
inc
add
loopne
call
inc
lock
sbb
push
aad
in
scas
sub
add
cmp
mov
xchg
loopne
lret
add
imul
int
or
fsubp
lods
dec
adcb
cmp
sub
loop
pop
jl
or
adc
sbb
insl
add
dec
nop
js
push
xchg
js
add
test
dec
sub
ss
xchg
jbe
mov
mov
add
inc
cmp
push
push
push
xor
add
cmp
push
sub
or
pusha
push
sar
pop
xchg
sbb
je
and
sbb
sbb
loopne
and
shlb
jg
pop
popf
fst
std
pop
in
cmp
push
and
and
add
pop
mov
adc
addl
xor
pop
aad
out
pusha
xor
daa
cmp
mov
cmpb
fdivrl
fldt
push
arpl
jae
clc
lret
xchg
call
sub
adc
cmpsb
stos
aad
inc
mov
xor
jb
fnstcw
popa
and
loope
xor
je
clc
xor
aad
inc
sub
aad
dec
push
push
or
dec
mov
fbstp
add
icebp
stc
push
fildll
aaa
and
cwtl
data16
cmp
mov
push
dec
ret
lret
add
or
add
pusha
dec
pop
repnz
pusha
xor
pop
out
lea
jp
sbb
out
xlat
cmp
pop
rolb
ss
cltd
insb
out
daa
outsb
jno
mov
movsl
fidivrl
lret
mov
adc
dec
jmp
icebp
in
cmpsb
sbb
jae
ja
push
fcmovnb
rolb
xchg
inc
mov
lods
mov
mov
mov
xor
call
push
pop
sub
bound
inc
shlb
xor
lods
push
hlt
mov
mov
stos
sub
cli
mov
lods
sbb
jb
adc
xor
cmp
lret
push
sti
ljmp
mov
imul
hlt
loopne
mov
sbbb
icebp
lock
sbb
jb
clc
fnstenv
addr16
push
loope
and
push
js
pop
and
call
add
jle,pt
xor
inc
aam
test
rcrl
aam
xchg
imul
mov
test
lods
and
push
fistps
shll
prefetchnta
xchg
ret
xchg
pop
cwtl
out
hlt
leave
adc
movsl
ljmp
dec
pop
insb
loopne
movsb
ret
ds
outsl
push
pushf
addr16
jae
add
add
dec
sub
sub
mov
and
subb
dec
shlw
mov
loopne
push
adc
pop
mov
cmp
xor
xchg
js
or
pop
or
sbb
es
cmp
jno
fs
or
insb
pop
and
inc
push
mov
fdivrl
movsb
mov
inc
push
jl
xchg
scas
sub
mov
fwait
dec
aam
test
mov
push
insb
outsl
in
movsb
into
cmpsb
sbb
xor
jnp
in
or
popf
jmp
sub
jecxz
test
orl
int
loopne
push
mov
cmp
xlat
fstps
mov
push
push
xor
mov
out
inc
and
sbb
call
in
xchg
xchg
loop
gs
push
lods
or
nop
add
pop
push
or
loop
dec
lods
push
pusha
mov
jo
push
pop
call
push
je
dec
mov
jmp
inc
jae
xlat
jb
add
andl
gs
xchg
xor
cmp
jg
loop
fildl
icebp
add
std
adc
mov
nop
push
lock
mov
xor
jbe
jnp
daa
test
or
sbb
psrlw
arpl
xchg
jno,pn
jmp
push
loop
ds
and
push
insl
aam
mov
and
cmp
dec
in
cmp
add
fxch
xor
push
jg
xchg
mov
mov
fadds
push
cmp
push
fildll
mov
mov
sahf
cmp
push
cmc
aad
mov
ljmp
ret
mov
stos
fwait
add
mov
inc
jmp
loopne
iret
xor
jbe
add
testl
adc
out
sub
push
mov
jnp
in
fs
jmp
mov
fsubs
ret
decb
mov
cmp
jmp
arpl
negb
test
rcrl
out
pop
mov
jge
mov
add
loope
iret
loopne
and
mov
xchg
in
and
and
inc
inc
in
sarb
ret
pop
in
call
in
cmpsb
mov
xchg
gs
fidivrs
pop
and
bound
jp
cmc
and
lods
clc
inc
sahf
fmul
pop
je
and
repnz
add
cmp
jg
xor
push
add
xorl
pushf
outsb
and
data16
xchg
xor
daa
push
dec
add
ss
mov
movsl
pushf
cmp
dec
cli
jb
add
loope
addr16
jge
lahf
jno
or
push
lods
add
mov
cmp
mov
int
push
leave
xchg
mov
jle
jp
mov
lea
cli
aad
xor
nop
loop
lock
xor
rcl
mov
bound
data16
push
jg
dec
sarb
cmp
cli
sarb
dec
dec
mov
jo
jb
pop
cmp
scas
push
repz
fwait
mov
loope
mov
xor
inc
cmpl
mov
pop
inc
jnp
push
sbb
jmp
xorl
rcr
int
stc
aad
xchg
or
repz
setg
scas
jg
dec
sub
dec
jge
es
or
pop
pop
xchg
fdivs
fwait
xlat
add
pop
mov
lcall
jns
hlt
pop
mov
adc
add
cmp
fistps
jg
stos
sub
mov
mov
mov
clc
sub
sub
jbe
mov
out
fidivrs
ret
lds
sti
sbb
je
cmp
push
fcmovnbe
cmpsl
or
or
mov
jl
movsl
mov
dec
and
imul
mov
dec
push
jl
pmaxub
jl
push
out
mov
daa
cmp
mov
shrl
inc
lods
and
cmp
enter
jp
xchg
lock
aad
nop
push
mov
loop
jb
std
cli
mov
das
cmp
push
lods
sbb
popa
add
rcll
das
inc
shlb
lahf
fstl
pop
lds
fsubrs
cmp
sbb
push
inc
or
mov
push
cmp
ds
les
cmp
psrld
lcall
sbb
ds
add
out
nop
and
pop
ret
jp
jg
or
mov
cmp
cmp
push
stc
aam
mov
pop
push
aam
jae
aas
stc
jnp
fldl
cmp
mov
lahf
shrb
sub
push
xchg
orl
popa
stos
push
lds
xor
xchg
leave
clc
movsb
mov
loop
pop
repz
mov
mov
dec
adc
test
inc
xchg
pop
add
xor
fsubrs
inc
adc
lret
or
mov
jmp
adc
pop
lods
or
ljmp
cmc
xchg
lret
or
fstpl
rorl
xor
lods
fidivl
out
jecxz
insb
loopne
cmp
mov
mov
test
and
jecxz
inc
test
test
mov
ret
jp
xchg
jne
scas
cli
push
popa
psubw
addr16
shlb
shlb
test
adc
cmp
addr16
mull
cmp
push
pop
imul
mov
sub
jecxz
fisttps
cmp
ja
es
jmp
jno
mov
int
mov
shlb
sahf
imul
push
lods
sbb
mov
jg
cld
lahf
cmp
jmp
sbb
fcmovbe
xor
pop
pusha
add
dec
sub
mov
sub
add
test
inc
mov
mov
je
mov
test
jne
mov
js
lahf
inc
inc
xchg
or
cmpl
hlt
jmp
mov
add
mov
pop
push
or
das
pop
fsubrs
sub
daa
push
or
xchg
jp
je
lcall
mov
lods
lock
data16
stos
mov
js
push
cmc
adc
jle
inc
mov
inc
test
or
adc
mulb
jo
ja
dec
sbbl
mov
shl
cmp
cli
sub
push
mov
sub
ljmp
lret
and
cmp
hlt
test
mov
je
add
ds
out
fiadds
mov
bound
cli
xor
inc
out
push
push
adc
push
inc
aam
imul
add
mov
xchg
bound
mov
sub
jne
pop
push
inc
pop
int
out
mov
repnz
imul
add
cmp
repz
dec
arpl
loopew
cmp
in
dec
paddd
dec
movsl
xor
pop
inc
sbb
mov
jge
lods
pushf
js
aas
pop
jne
daa
lcall
int3
sbb
sbb
jecxz
push
ljmp
mov
out
stos
and
and
sub
hlt
mov
push
pop
xchg
push
sub
fsubrp
ljmp
or
sbb
push
inc
das
sbb
dec
pop
insl
inc
xor
dec
jns
jge
addr16
mov
fistps
stos
xor
fistpll
sti
popf
int
jmp
adc
cltd
and
sub
xor
cld
xor
adc
xor
sbb
xor
fucom
cltd
inc
push
adc
or
mov
mov
fnstcw
dec
and
xchg
icebp
cmp
xor
inc
dec
xor
ja
fwait
popa
mov
dec
cwtl
popf
jnp
fucomip
mov
xor
sub
jge
fildll
pop
iret
and
mov
push
pop
xor
xor
addr16
leave
push
adc
inc
adc
push
xor
mov
or
add
cmp
sub
jns
mov
es
jae
aas
jnp
inc
imul
bound
mov
movsl
aas
insl
cmpsl
inc
stos
pop
fistps
rcr
popfw
sub
mov
sub
movsb
frstor
call
sub
sub
jnp
mov
or
dec
lret
int
or
inc
and
dec
arpl
sahf
adc
dec
sub
and
push
addl
arpl
dec
xor
jg
das
fidivrs
stos
mov
mov
jns,pt
lods
sti
das
dec
mov
and
mov
sbb
roll
ret
lret
cmpsl
adc
adc
popa
sbb
adc
idivl
cmp
cmp
sub
cmp
testb
scas
xor
mov
popf
push
xlat
and
xor
add
pop
adc
pop
fldt
aas
add
daa
iret
or
imul
mov
insl
ret
push
aam
push
jae
mov
and
insb
cwtl
imul
or
mov
cmpsl
in
jbe
pop
cwtl
das
sti
and
setnp
mov
or
cmp
cmp
mov
dec
cs
arpl
rclb
lret
adc
outsb
xchg
test
xchg
xchg
cmpsb
fdivrs
imul
or
jae
outsb
and
push
xlat
cmp
or
mov
cmp
cmp
pop
mov
mov
das
repz
sub
push
imul
cmp
cmp
cmp
sti
outsb
notb
mov
mov
xchg
cmp
fistl
mov
mov
insb
repnz
out
add
sub
daa
or
daa
sbb
sti
cmp
push
sub
ja
pop
addr16
popf
fdivrl
xchg
mov
inc
sub
popa
cmpsb
in
shrb
sub
jmp
mov
xchg
stos
adc
es
aas
sbb
sbbb
jae
adc
lock
insl
int
mov
lods
jno
jns
out
jecxz
pop
push
fildll
inc
mov
and
gs
or
das
pop
or
adc
and
cmp
mov
sbb
inc
lret
es
add
pop
and
aas
and
fistpll
adc
dec
or
jnp
mov
xchg
jle
inc
jmp
xlat
inc
movsb
xchg
pavgw
sub
pop
mov
and
or
dec
and
mov
push
adc
idivb
arpl
pop
addl
adc
arpl
sbb
out
popa
pop
sti
mov
adc
test
das
addps
testl
ficompl
jnp
ret
daa
mov
mov
and
cmp
mov
rol
jae
scas
jmp
and
inc
fmull
adc
sbb
mov
in
fdivrl
popa
cmpsl
sub
sarl
dec
fxch
cmp
ds
push
xchg
add
adc
or
add
outsb
sub
push
xor
or
mov
cltd
dec
mov
mov
mov
jne
sub
mov
ja
arpl
das
ja
jo
jbe
adc
loopne
das
mov
lea
int3
inc
insl
cmpsl
insl
scas
cwtl
aaa
adc
xor
das
fidivrs
repz
dec
pop
cs
aaa
jb
push
lret
and
sahf
add
sbb
fwait
sub
mov
jae
pop
jg
test
cmp
or
mov
xor
out
fcomi
sub
ja
movnti
gs
shlb
mov
jle
movsb
fldpi
popa
pop
lahf
sub
loope
mov
inc
and
push
or
mov
sub
mov
fmulp
push
cmpsl
jnp
dec
xchg
cltd
fiadds
jbe
adc
fwait
push
inc
xor
out
or
mov
idivb
and
sub
dec
xor
pop
idivb
inc
jns
pushf
fmul
push
mov
mov
cwtl
int3
xchg
out
daa
data16
sti
mov
popa
sub
sbb
jo
mov
pop
cmp
fmul
adc
sub
in
mov
sbb
sbb
cmp
pop
sti
pop
imul
jns
jmp
pop
sub
test
sbb
add
adc
sbb
aaa
sub
push
mov
mov
and
sbb
jmp
push
mov
jo
popa
fstpl
and
mov
push
push
mov
mov
pop
add
mov
aas
push
add
mov
push
cmpsb
sub
mov
ficoms
inc
mov
sahf
add
divb
push
inc
cmpsb
or
faddl
ret
inc
flds
in
fcompl
cmpl
ret
loope
jnp
jl
ja
mov
test
pop
jno
fadds
test
push
ds
movsb
jae
pop
jle
mov
pop
jmp
enter
lods
sub
xchg
outsb
cmp
xchg
inc
ds
or
in
ds
xchg
adc
cmp
xor
test
mov
pop
lock
push
adc
int
dec
adc
dec
imul
inc
push
jne
sbb
cltd
jns
sub
ja
sbb
pop
jp
jo
ja
pop
jbe
jp
ja
adc
test
mov
popf
jne
rcll
add
pop
sbb
aam
adc
shlb
scas
fincstp
adc
add
stos
push
sbb
popf
js
lods
push
lods
fistl
call
xchg
out
lea
adc
lods
xor
jns
or
aad
pusha
push
jnp
ljmp
and
mov
xchg
pop
and
inc
xor
pop
mov
out
sbb
xor
dec
add
add
push
sub
sub
test
mov
cltd
inc
daa
cmp
pop
and
test
pop
out
sbb
sbb
push
push
pop
xchg
push
fimuls
lret
pusha
notb
punpckhwd
or
cltd
mov
fadd
je
ss
xchg
and
adc
aad
push
push
xchg
push
push
and
xchg
aad
mov
testl
lods
dec
test
mov
xchg
enter
lods
and
pop
ret
test
jg
inc
mov
leave
add
push
mov
mov
lock
xor
mov
xchg
stc
pop
sub
insl
push
xor
fdivs
xlat
adc
lods
pop
sqrtps
adc
inc
pop
jbe,pt
inc
lahf
or
insb
aam
and
push
push
adc
mov
outsl
and
inc
test
xor
adc
outsb
loopne
push
mov
les
fiaddl
sub
or
inc
pop
call
addl
ret
jmp
jp
daa
int3
or
xchg
scas
sbb
mov
mov
jmp
clc
xor
adc
push
js
cmp
cmp
mov
pop
cmp
inc
push
repz
outsb
stos
test
add
xlat
adc
pop
leave
sti
pop
push
adc
xor
xor
movl
xchg
pop
xorb
xchg
rcl
iret
orl
into
lret
das
je
lock
movsl
sbbl
and
xchg
and
imul
mov
test
aam
or
shlb
shrl
stos
mov
pop
lock
loopne
cmpsl
int
pop
cmp
adc
cltd
dec
cmp
jne
adc
mov
leave
pop
add
push
jnp
lret
dec
mov
out
mov
scas
xchg
mov
test
pop
loopne
mov
or
sbb
fldl
lret
scas
push
xchg
mov
imul
aaa
fistps
push
cltd
roll
xchg
iret
fwait
sbb
xor
dec
adc
loope
lret
jp
jecxz
pop
cltd
sbb
je
jno
pop
mov
aaa
push
insb
rorl
mov
or
out
push
call
xlat
add
add
sbb
jge
adc
push
pop
mov
mov
call
mov
and
inc
xchg
fists
insb
dec
adc
jae
mov
mov
out
mov
xor
lock
subl
sbb
int
ret
out
push
stc
add
sbb
ja
out
xchg
outsb
xor
aad
aaa
adc
mov
mov
outsl
in
mov
out
push
adc
jo
and
pop
fwait
std
and
mov
dec
pop
dec
outsl
int
xor
inc
and
js
test
mov
adc
xchg
and
or
in
sbb
mov
inc
mov
mov
push
sti
test
in
mov
pop
packsswb
cmp
mov
lds
imul
enter
cmp
push
sar
ds
xchg
iret
add
add
pusha
mov
lret
adc
loopne
mov
push
push
rclb
add
pop
movsl
cmc
pop
out
pusha
or
adc
pop
cmp
push
loope
or
pop
jnp
mov
out
sbb
addl
xchg
mov
xlat
or
loopne
jmp
push
imul
test
ja
push
dec
cmp
daa
test
xor
sbb
ret
fcmovu
push
roll
xor
pop
push
mov
ja
mov
adc
orl
mov
bound
mov
mov
cld
sti
xchg
mov
sbb
outsl
add
loope
mov
xchg
sub
push
lahf
inc
adc
pop
sbb
rcrb
pop
fisubrs
subps
adc
js
call
pop
dec
cmpsb
sbb
shlb
mov
movsb
push
mov
insb
cltd
xlat
dec
filds
and
out
or
hlt
mov
icebp
neg
mov
jo
jae
sbb
sbb
out
ss
push
dec
daa
xor
mov
pusha
adc
xor
sbb
in
ret
xor
or
fwait
int
adc
mov
mov
adc
adcl
out
insl
sub
pop
dec
add
and
movsb
push
and
std
mov
push
add
add
adc
inc
or
pop
nop
mov
adc
cmp
and
outsl
sub
dec
mul
and
pop
lahf
xor
addr16
add
xor
fsubrs
sbb
and
sbb
lea
loopne
or
jmp
or
cmp
addl
mov
pop
aaa
loope
push
push
lea
fcomps
leave
push
mov
push
sub
filds
in
fsubs
dec
jo
xchg
gs
ljmp
mov
out
in
cltd
inc
aas
outsb
ret
mov
and
imul
and
xchg
into
fwait
mov
push
pop
neg
or
push
push
popf
sbb
push
fimull
pop
cmp
jo
dec
mov
add
jg
mov
lods
outsl
outsl
out
ss
push
or
sbb
xchg
sbb
xchg
adc
enter
stos
fs
xor
mov
mov
add
xor
push
jns
data16
push
and
fidivrs
outsb
and
dec
dec
leave
cmp
pop
in
cmc
sub
aaa
cld
cmp
aad
daa
inc
test
cmp
mov
ret
mov
push
orl
nop
jecxz
es
arpl
adc
pop
mov
pop
aaa
mov
mov
scas
fwait
and
das
and
jmp
pop
das
jno
adc
sbb
stc
loopne
pop
popf
fnstsw
pusha
jmp
add
ja
fwait
pop
xor
adc
or
outsb
pop
add
inc
mov
fsub
outsl
pop
push
jne
pop
test
mov
mov
mov
cmp
fildl
ret
cmpsb
dec
adc
stos
arpl
imul
sbb
xor
insb
js
sbb
fstl
dec
or
das
jo
pop
out
pop
pop
mov
ffree
mov
jle
or
xchg
or
je
cmp
jns
setp
adc
and
pop
push
xor
das
push
xor
jmp
xor
out
ret
xchg
add
testl
popa
pop
jmp
dec
cld
push
xchg
or
jmp
test
xchg
stos
xchg
call
sub
xchg
xchg
insl
test
fwait
dec
adc
sbb
scas
cs
xor
push
icebp
jno
popf
sub
in
mov
sahf
adc
pop
sbb
mov
mov
jnp
add
into
fldt
push
movsl
call
fadds
mov
cmc
cmpsl
xchg
loopne
insl
mov
fmuls
mov
popf
dec
adcl
pop
jg
and
loopne
andl
lods
clc
ficompl
imul
lds
and
and
inc
sbb
lret
xor
subl
mov
cmpsl
pop
test
notl
pop
mov
fwait
test
and
loope
mov
popa
mov
dec
add
jge
cmpsl
mul
and
xchg
outsl
mov
and
rcll
das
insl
sbb
adc
loopne
pop
outsl
jge
sub
dec
mov
shrb
je
sbb
lea
jns
mov
call
lea
out
rcrb
fiaddl
popf
pop
sbb
or
out
inc
lret
das
sub
ja
sti
add
pop
jecxz
sbb
pop
js
add
jbe
and
shl
inc
push
sub
inc
mov
aaa
imul
or
daa
inc
xchg
xorl
shll
mov
xchg
inc
cmpsl
and
daa
dec
lret
imul
jp
bound
jno
inc
lret
or
pusha
cmp
das
mov
xchg
push
les
jo
mov
jg
out
lock
sub
xchg
scas
push
nop
sbb
xchg
in
inc
rcrb
push
unpckhps
aaa
out
or
push
jecxz
adc
leave
incl
xlat
and
lds
insb
xchg
mov
inc
ds
cmp
adc
movsl
mov
inc
mov
adc
pop
lods
scas
imul
add
lods
add
mov
sbb
adc
shll
cmp
in
push
lock
sahf
stc
xor
sti
cs
scas
scas
jno
xchg
adc
push
in
and
ja
flds
inc
pminub
fistl
movsl
lret
out
xchg
repnz
mov
cmp
add
pop
mov
ja
test
loopne
push
xchg
jne
push
gs
push
outsb
divb
xor
push
push
adc
ret
lock
pop
ss
jge
arpl
fdivl
jne
cmp
cmp
adc
sub
pop
adcl
push
add
or
je
mov
inc
push
popa
jae
add
push
outsb
out
jg
in
addr16
push
or
pop
push
or
mov
test
imul
pop
xchg
imul
sbb
in
lcall
ja
test
rcl
cmp
pop
mov
cmp
adc
sub
or
inc
insb
xor
aam
test
arpl
mov
cwtl
sub
pop
add
int
imul
aas
push
test
jnp
stos
add
loop
and
ljmp
adc
outsb
subb
or
adc
sbb
aas
inc
sub
xchg
push
xchg
adc
or
mov
shll
push
jo
nop
push
mov
idivl
inc
mov
fwait
inc
push
shr
push
adc
dec
fs
stos
mov
jl
push
fs
adcb
nop
mov
aas
mov
test
scas
xchg
add
movsl
lea
add
cltd
lds
inc
lcall
add
pop
pop
cwtl
cs
xor
scas
inc
or
imul
fisubs
xor
and
mov
popa
sbb
add
or
and
aad
mov
sbb
flds
inc
xchg
mov
mov
cmpsl
xlat
adc
xchg
add
fisubrl
outsb
mov
aas
add
dec
pop
inc
xor
pop
adc
inc
addl
mov
test
dec
rolb
pop
aas
aaa
or
adc
dec
sbb
sahf
xorl
jl
pop
sti
arpl
inc
adc
pop
xchg
int
sahf
mov
push
fs
adc
mull
pop
mov
flds
mov
xor
inc
cmpsl
lret
push
daa
mov
push
ja
shll
cmp
sbb
jge
lods
or
and
iret
out
negb
jg
push
daa
stos
adc
jecxz
jo
mov
inc
jecxz
sub
or
lock
sahf
dec
js
jl
inc
ficompl
bound
inc
cmpsb
insl
mov
add
cmp
and
push
shl
adc
lods
and
ja
inc
imul
shl
pop
inc
add
or
xchg
pop
inc
out
cmpsb
add
fisttpl
pop
jo
xor
jne
int
push
dec
lds
sbb
fstl
xchg
add
mov
inc
lea
test
mov
fistpll
inc
std
cmpsl
adc
inc
scas
outsb
mov
adc
push
fcmovu
or
or
ret
loope
add
adcb
and
icebp
mov
sbb
lds
jecxz
cmpsb
sti
sub
cli
push
sbb
push
pop
inc
pop
or
mov
test
pushf
dec
call
inc
cmpsl
movaps
fildll
fildl
aas
movsl
jecxz
outsb
sub
xchg
push
movsb
jecxz
push
add
and
sub
enter
dec
addl
nop
mov
jnp
push
pop
mov
rcrb
lret
call
pop
mov
or
jae
push
jnp
mov
cmp
popf
sub
addr16
dec
mov
fsts
inc
xor
shlb
jmp
js
or
push
subb
cltd
mov
lea
cmp
sbb
add
mov
pop
in
aaa
scas
pusha
cmp
add
in
xchg
pop
push
pop
pop
fstps
shl
stos
fstp
dec
sbb
ret
pmullw
scas
mov
jns
xchg
mov
arpl
cmp
or
sub
or
push
sbb
add
push
sbb
cmp
jno
adc
adc
lcall
rclb
xor
stos
arpl
xor
negb
xchg
outsl
sub
in
roll
es
imul
dec
movsl
sbb
mov
adc
lahf
adc
arpl
dec
sbb
inc
popa
cmp
imull
mov
or
insl
lods
aaa
popa
push
or
aas
xchg
fdivl
dec
xchg
iret
test
loop
or
fstl
and
xorl
inc
and
rorl
xor
scas
fcmovnb
popf
xchg
add
out
xchg
loope
filds
scas
aad
pop
test
xorb
into
fcmovu
mov
mov
sub
lods
movsl
add
adc
sub
jl
bound
decl
out
jns
mov
sbb
lret
cmpsl
stos
cmc
push
jo
popf
cmpsl
add
jmp
add
mov
cltd
fildll
aad
movsl
and
addr16
or
fnsave
incl
lcall
or
or
pop
fisubrs
in
clc
dec
aad
lods
add
fildll
add
js
pushl
pop
fsts
inc
dec
idivl
inc
das
nop
and
adc
arpl
or
out
cmp
addr16
das
mov
sbb
xor
lahf
pop
aaa
aaa
sti
adc
in
mov
xorl
movsl
fbstp
paddsw
fists
xchg
push
stos
shll
fisttps
scas
cmovnp
loop
add
mov
mov
adc
xchg
adc
cmp
and
jg
js
and
jmp
mull
lret
add
add
js
test
and
inc
jnp
or
rcll
test
xchg
sbb
loopne
loope
and
mov
in
pop
push
mov
popa
add
cmpsb
and
cmp
lea
loopne
sub
push
xlat
mov
mov
push
pop
sub
xorb
ret
inc
fstp
xor
pop
sbb
cmpb
inc
mov
push
and
out
js
rorl
mov
outsl
lahf
js
leave
jns
dec
push
shrb
mov
add
loope
mov
push
mov
outsl
shll
adc
popa
add
sub
jne
jge
sub
add
mov
mov
outsl
mov
and
test
ja
jbe
adc
inc
sbbb
mov
lret
out
repz
rolb
fisttps
inc
dec
cmp
std
gs
add
sbb
or
pop
jo
xor
shll
lods
push
daa
insb
mov
mov
daa
enter
sbb
mov
mov
add
imul
fnstsw
jge
sub
sbb
bound
ja
lods
push
test
push
arpl
shl
jge
dec
mov
movsl
push
lret
fiadds
sub
cmp
pop
cltd
shlb
lods
pusha
ljmp
shlb
arpl
dec
inc
lcall
inc
and
popa
mov
mov
mov
jmp
or
xchg
pop
inc
aas
or
stos
pushf
inc
mov
movsl
imul
sbb
fwait
inc
mov
les
push
mov
mov
iret
sbb
idivb
xor
push
lea
std
pop
sbb
cmpsl
sbb
ja
mov
mov
dec
push
fwait
xadd
inc
mov
pop
lods
adc
push
xchg
fistps
push
sbb
outsl
jae
popf
mov
add
add
xchg
xor
mov
mov
sbb
inc
daa
test
cmp
iret
jecxz
pop
shll
and
arpl
stos
addr16
sbb
pop
jbe
imul
push
lods
mov
mov
loopne
mov
jbe
fs
mov
aaa
jbe
pop
sub
lds
pop
sbb
sub
popa
clflush
leave
xchg
push
aas
scas
ret
adc
lret
dec
test
add
in
mov
pop
mov
in
movsl
pop
pusha
lds
lea
stc
lahf
pop
aam
subl
inc
xchg
xor
mov
sbb
pop
and
dec
dec
ret
cmp
adc
cwtl
adcb
xlat
xchg
or
add
sbb
pop
sbbl
popa
xchg
mov
out
scas
sub
dec
rcrb
mov
and
pop
sbb
fwait
sbb
fld
adc
dec
pop
pop
test
stos
flds
jae
fistpll
jmp
lds
adc
add
pop
sbb
rcll
jge
xor
sahf
add
mov
lret
lea
roll
idivl
pop
xchg
cmpsl
mov
sub
jne
scas
and
loopne
in
neg
jg
arpl
or
call
inc
add
dec
xor
adc
sbb
scas
es
pop
imul
in
sbb
sbb
mov
inc
adc
pop
sub
cs
mov
daa
dec
inc
mov
addl
inc
cmpl
jmp
aam
inc
shrl
jae
icebp
xchg
jno
or
js
pop
xor
jns
xor
push
xchg
mov
fwait
adc
pop
loope
nop
int
mov
mov
rcrl
sub
sbb
mov
or
gs
pop
lock
mov
ret
je
and
ja
adc
xor
mov
aaa
jae
mov
add
sti
gs
inc
subl
sti
cmpsl
adc
push
push
leave
pop
je
xor
flds
into
scas
or
jne
push
sbb
insl
ss
movsl
and
gs
sbb
mov
mov
ja
and
dec
cmpsl
jp
adc
stos
adc
sarl
dec
cld
inc
sbb
adc
cmpsl
iret
jae
mov
mov
dec
adc
jmp
out
scas
mov
mov
sub
jb
dec
mov
insb
or
movq
insl
and
push
cmp
cs
icebp
imul
cmp
lods
cwtl
jbe
imul
or
push
mov
add
mov
mov
cmp
in
sbb
adc
inc
lret
cwtl
fcmove
fwait
cmpsl
sbb
jmp
inc
call
mov
jg
insl
mov
xchg
sub
shl
jecxz
das
adc
jge
fabs
imul
ret
cmp
sbb
jecxz
sbb
int
adcl
lea
daa
adc
shrd
aas
nop
mov
sbb
aam
mov
fsub
outsb
add
rcll
xor
add
or
jmp
adc
sub
cltd
bound
dec
xchg
jmp
xor
ljmp
outsb
and
sub
adc
add
jp
bound
inc
xchg
fwait
add
or
mov
mov
mov
mov
adc
loop
jo
fldcw
add
mov
shl
and
add
and
and
mov
ret
iret
pop
pop
adc
lods
fistl
movsl
dec
test
mov
pop
loop
pop
stos
rolb
pop
dec
xlat
pop
loope
dec
xlat
cmp
rcrb
repz
test
inc
repz
mov
pop
ret
sbb
es
dec
mov
or
jnp
jns
iret
orb
popf
pop
mov
mov
pop
loopne
les
inc
andl
stos
add
popa
xlat
or
sbb
sbb
leave
mov
mov
cmc
sahf
xor
or
rcl
cmp
movsl
lahf
sbb
and
js
fmulp
sbb
push
mov
iret
or
mov
mov
mov
out
dec
ljmp
pop
inc
push
pop
xchg
xor
or
or
jne
sub
movsl
jbe
insl
sbb
jmp
stos
mov
arpl
sti
adc
push
push
pusha
add
fisttpl
sti
or
imul
xorb
sbb
dec
jl
push
xor
dec
adc
jmp
into
push
dec
jle
iret
add
sbb
roll
iret
fldcw
sbb
inc
bound
push
dec
jmp
into
lret
inc
and
xlat
mov
xlat
arpl
gs
mov
ret
fwait
jecxz
ret
sub
ret
in
mov
jno
inc
adc
push
shlb
and
adc
divl
add
subl
pop
movsl
jne
cmpsb
aad
sbb
adc
mov
push
inc
pop
mov
sub
test
lds
movsl
cmp
or
pop
or
mov
cli
mov
add
push
push
fwait
xchg
mov
femms
ret
sbb
aas
fisubs
and
sbb
or
movzwl
add
adc
or
mov
loope
popf
add
test
pop
mov
push
add
cmp
push
xchg
lods
pop
mov
test
xlat
cs
rorl
mov
mov
sarb
aas
add
loope
jmp
jo
or
nop
sbb
jbe
xor
jle
cli
xchg
imul
jno
stos
mov
xlat
dec
sub
inc
fcoms
gs
sub
mov
pusha
in
test
sbb
sbb
or
bound
mov
das
xchg
imul
and
movsl
jns
dec
pop
and
push
jecxz
dec
sti
xchg
pop
and
sbb
push
ljmp
sub
fistpl
popa
pop
pop
push
das
jmp
adc
sub
mov
and
push
xchg
mov
mov
lods
mov
arpl
push
push
adc
xchg
add
mov
pop
rcrl
add
shrl
sbb
insb
cmp
adc
into
outsl
lret
push
add
xchg
adc
sub
test
adc
jnp
test
test
imul
stos
daa
test
stos
adc
pop
xchg
inc
ret
inc
cs
js
lahf
inc
pop
imul
xlat
fimull
mov
adc
popf
out
xchg
push
add
cmpsl
fldl
jp
gs
push
adc
sub
push
push
push
ss
daa
mov
nop
mov
aas
and
mov
les
ja
in
fcoms
frstor
insl
push
or
aaa
cmc
push
dec
ja
or
add
dec
adc
stc
jg
pusha
inc
adc
movsb
xor
insb
mov
dec
vmwrite
aad
call
push
mov
dec
dec
fistpl
jnp
aam
fcompl
loopne
mov
xor
jo
pop
pop
out
mov
jne
movsl
dec
push
cmpsl
add
outsl
outsb
ret
jns
push
test
pusha
mov
adc
push
out
jno
push
int3
xor
dec
les
xchg
scas
jae
pop
dec
f2xm1
jnp
out
cmpsb
mov
and
movsl
adc
icebp
mov
scas
mov
int
or
fstl
aaa
cmp
dec
dec
jmp
out
xchg
and
xor
stos
or
jns
xchg
push
mov
and
dec
add
mov
or
cmp
adc
xor
jo
jo
adc
pop
js
mov
test
imul
adc
andl
mov
xor
outsl
js
fistl
mov
xchg
sub
mov
adc
pop
loop
or
adc
add
dec
test
sbb
pop
xchg
or
mov
xor
testl
jo
inc
sub
lods
in
dec
mov
popl
pushf
adc
sbb
dec
jns
cmpsl
inc
fs
add
orb
push
add
jo
xchg
pop
inc
es
sbb
push
sub
jmp
lods
test
and
and
dec
pop
ljmp
pop
fwait
adc
dec
icebp
insl
lock
repz
sbb
add
jns
outsl
fwait
sub
xchg
lret
popf
bound
addl
mov
push
loop
pop
aad
fldt
xchg
pop
pusha
cmp
popa
push
mov
push
aad
push
in
ret
mov
push
xchg
jmp
jnp
mov
push
sub
or
inc
test
das
add
add
jae
aaa
popf
stos
xchg
push
mov
jnp
mov
add
mov
fadds
sarb
in
addl
aaa
add
cwtl
xor
movsb
popa
add
adc
cs
push
push
jno
push
adc
insl
insl
xor
bound
pop
xor
jmp
outsl
xor
fdivrs
add
fisttpl
adc
andl
aaa
mov
mov
bound
add
dec
ja
or
popa
ss
and
add
push
adc
pop
gs
adc
bswap
pop
imul
push
aas
add
xor
lret
inc
in
fcmovnbe
pop
push
out
add
adc
push
push
in
inc
adc
mov
lret
rcrb
fwait
inc
lods
test
or
add
movsl
add
daa
sub
fstpl
push
lea
mov
popf
mov
cmp
aas
pop
imul
jmp
push
sbb
iret
add
dec
xor
inc
cmp
shrl
xor
xor
push
imul
xchg
mov
fnstsw
mov
adc
popf
mov
test
movsl
xchg
push
in
cmp
mov
out
enter
insl
pop
sbb
or
lods
inc
aad
rcll
mov
scas
ret
mov
daa
xor
in
mov
cmp
sti
flds
shlb
movsl
xlat
test
movsb
jne
mov
push
lods
roll
incl
jno
sbb
add
inc
lahf
nop
loop
shlb
pusha
sti
push
pop
popa
jle
jnp
pop
ret
xor
add
inc
int
test
jnp
and
imul
das
jnp
inc
mov
sbb
add
stos
pop
xchg
mov
adc
fcomp
popa
and
cmpsl
filds
cmp
andl
pop
dec
loop
xchg
lret
sub
push
xor
adc
cli
movsl
dec
push
push
add
pop
pop
icebp
out
mov
pop
adc
ss
push
les
sti
aam
insl
jmp
mov
setns
pop
add
fiadds
bound
xchg
mov
xchg
sbb
xchg
xchg
pmaddwd
aad
sbb
test
push
imul
xor
int
push
adcl
stos
and
pop
in
int
adc
mov
ret
lods
pop
or
push
sbb
mov
adc
std
adc
stc
jmp
and
pop
cmp
mov
sub
movl
or
jp
btr
mov
adcb
subl
inc
pop
xchg
sar
push
mov
aaa
adc
mov
loope
mov
popa
testl
arpl
pop
xorl
test
jae
in
lods
notl
push
sub
call
rorl
pop
test
popf
xor
popa
dec
shrb
cmp
mov
dec
push
lods
adcb
or
and
movsb
mov
lret
push
mov
int
push
imul
pop
test
mov
lods
aas
pusha
mov
sbb
pusha
rcll
sarl
jae
sahf
sub
sysret
pop
xchg
mov
iret
pop
xlat
ja
movsl
leave
outsl
mov
push
jno
lea
sti
test
popa
mov
or
sbb
arpl
aaa
push
or
test
pop
sub
mov
lcall
add
push
push
sbb
cmpsl
cmpsl
inc
or
sub
std
mov
or
popa
jg
aaa
jbe
aaa
sub
add
or
imul
outsl
push
inc
inc
cwtl
sub
xor
popa
dec
jae
push
push
test
or
mov
jg
xor
xor
mov
adc
fstl
cmp
pop
or
adc
adc
orl
push
mov
push
add
stos
out
or
inc
fldt
adc
xlat
addr16
filds
and
sbb
dec
adc
mov
mov
mov
jmp
xchg
cmp
cwtl
cmc
repz
push
mov
out
aas
test
fnstsw
push
sbb
in
adc
and
jecxz
out
sub
and
jno
call
jnp
pop
mov
loope
outsb
sbb
jge
dec
inc
jbe
nop
into
jnp
jmp
push
pop
jmp
std
outsb
mov
mov
push
or
xchg
imul
add
and
xchg
push
add
pop
and
xchg
fstpt
or
xor
add
outsl
jo
xor
pop
push
xor
pushf
mov
sub
mov
fwait
jns
xor
mov
and
bound
arpl
mov
pop
lcall
push
imul
inc
adcb
add
mov
xchg
pop
shll
xchg
push
xor
aas
out
popf
xchg
shll
add
mov
push
mov
fsubrs
cltd
adc
push
and
push
cwtl
insb
pop
mov
shr
and
imul
ja
xchg
or
sbb
ss
addr16
subb
sti
mov
dec
jg
mov
scas
jge
gs
jae
pop
fbld
in
sub
rcll
jae
mov
sub
cmpl
mov
imul
push
push
popa
das
jmp
popa
aas
int
imul
dec
mov
and
notl
sbb
inc
testl
cmp
adc
pop
adc
add
xchg
xor
and
add
mov
sbb
leave
dec
std
outsl
jecxz
sbbl
dec
loopne
xor
push
pop
cmpl
out
loopne
xorl
insl
adc
inc
dec
mov
sbb
adc
cwtl
out
fnsave
dec
cwtl
and
add
sbb
xor
in
inc
lret
xor
fnstsw
popf
and
cmp
xor
lods
push
or
mov
mov
fwait
int
adcl
sub
pop
cmp
sbb
xchg
pushf
mov
outsb
sbb
popf
out
popf
outsl
sub
in
pop
aaa
pop
test
jno
sarb
adc
mov
xchg
outsl
jmp
int
lcall
sub
or
addr16
xchg
xchg
fstps
jge
pop
arpl
mov
pop
xchg
pop
sti
test
ret
xchg
xchg
and
xchg
and
sub
sub
jg
cmpsl
sub
nop
sbb
insb
mov
jmp
in
icebp
mov
sbb
sti
push
aad
and
test
pop
xor
pop
xchg
in
pop
out
cmp
int3
add
movl
mov
and
dec
or
dec
sarb
imul
addb
adc
add
lahf
adc
jg
adc
mov
xrelease
xchg
cmpsl
in
dec
mov
or
fistpl
sbbl
mov
lahf
inc
lock
push
adc
sub
mov
sbb
loopne
or
dec
ja
jno
jns
rorl
fcomip
fidivrl
xor
subl
jo
inc
jp
xchg
sub
pop
ret
xchg
or
sbb
daa
push
outsl
cwtl
repnz
push
add
mov
mov
xchg
sbb
vpmaxub
jb
push
leave
xchg
and
insl
movl
addr16
xchg
test
in
movsl
movl
dec
inc
sub
sub
and
push
outsb
sbb
loope
inc
add
sub
or
and
pop
sysret
jcxz
and
mov
pop
mov
add
shrl
popf
cmp
or
test
jb
js
jp
imul
push
jae
jle
sbb
sub
pop
mov
xor
hlt
cmp
test
jae
inc
mov
xchg
fdivl
scas
adc
in
push
andb
mov
arpl
je
jp
gs
and
bound
push
push
add
push
mov
inc
xchg
gs
jns
repnz
mov
mov
push
or
bound
arpl
dec
arpl
jbe
das
sarl
mov
popf
cmp
sub
arpl
cmpsb
jo
aaa
in
and
inc
xchg
cld
mov
gs
mov
ficompl
fsubl
xchg
push
jns
inc
jg
adc
sbb
jae
fndisi(8087
cs
push
hlt
adc
add
add
add
js
pop
divl
pop
bound
push
cmp
xor
jb
sti
insb
cmp
iret
dec
shl
andl
gs
std
jnp
inc
out
and
loop
mov
xchg
mov
out
xor
daa
mov
dec
mov
lods
arpl
nop
sbb
adc
mov
add
and
aaa
lds
pop
lcall
adc
jg
add
push
add
lds
ret
fs
hlt
cmp
add
pop
add
jo
jne
imulb
adc
inc
and
das
gs
test
les
add
mov
inc
xor
adc
lea
jns
loope
and
push
testb
cmpsl
push
cmp
dec
mov
and
jae
icebp
and
mov
call
push
shr
xor
mov
jns
jb
test
push
mov
and
pop
adc
fwait
adcb
jle
and
pushf
pop
jne
hlt
add
or
pop
add
push
popa
sub
push
push
js
jge
incb
jno
cmpl
pop
xor
fistps
out
pop
aas
jb
stos
shr
adc
pusha
arpl
cmpsl
mov
mov
mov
in
inc
pop
push
mov
loopne,pt
leave
les
jp
jnp
sbb
jae
jecxz
jl
inc
push
cwtl
push
shr
inc
jle
pusha
jge
loopne
pop
cmpsl
in
and
jo
ss
xor
inc
push
push
pusha
dec
or
rorl
xchg
xorl
pusha
mov
shlb
pop
jbe
imull
mov
arpl
cmpsb
cmpb
mov
test
mov
out
jnp
xchg
push
bound
adcb
lock
pop
fmull
lods
addr16
cld
js
in
push
sub
fnsave
jbe
arpl
add
inc
inc
jle
js
mov
clc
aam
bound
push
push
and
addr16
decl
cmp
pop
mov
mov
gs
xchg
push
xlat
xor
jb
mov
xchg
add
jbe
filds
pop
lods
nop
jo
xchg
ror
push
pop
inc
fsubs
jns
scas
inc
arpl
cmp
shl
pop
imul
add
cmp
dec
imul
imul
pop
push
xchg
ja
stos
daa
or
sahf
iret
scas
cmp
cmp
dec
cmc
push
adc
add
inc
jmp
jecxz
js
jb
int
or
cmp
fdivl
adc
test
mov
and
cwtl
and
loopne
sub
mov
jbe
bound
push
out
mov
xchg
push
inc
mov
lahf
adc
jnp
out
inc
loopne
fldl2e
or
ljmp
gs
pop
xchg
mov
push
lcall
clc
lds
loope
fsubrs
push
test
inc
js
pop
or
jo
ljmp
jb
and
js
and
cmp
pop
out
cmp
push
je
inc
sub
add
cmpsl
ret
incb
es
sbb
jne
fs
sbb
enter
cmp
adc
test
lods
std
sbb
dec
push
push
add
rclb
inc
mov
xor
jbe
and
loope
xlat
and
ret
and
dec
pop
adc
jno
mov
cltd
fdivrl
sub
filds
jo
subb
mov
dec
cmp
scas
imul
push
and
inc
push
int3
ss
sub
or
sub
and
and
sbb
pop
inc
push
add
sub
dec
lahf
adc
add
ljmp
push
mov
stos
pop
dec
sbb
repnz
shl
sbb
pop
push
push
xchg
xchg
or
jnp
sti
push
push
add
and
push
dec
push
cwtl
push
dec
mov
jg
or
loopne
dec
add
mov
pop
xor
inc
mov
pop
out
popa
shll
cltd
ret
jo
push
pop
dec
sahf
inc
mov
xchg
add
xchg
inc
test
mov
mov
mov
inc
xor
push
adc
pop
pop
arpl
add
jns
mov
jno
and
insb
fdivs
fs
fwait
out
and
jle
push
mov
fdivrl
or
lock
xorl
or
add
push
pop
pop
loope
bound
aaa
adc
fimull
jns
jbe
dec
sbb
bound
jle
pop
frstor
flds
adc
dec
pop
mov
pusha
push
outsb
dec
mov
and
js
push
test
hlt
inc
sub
data16
mov
lds
adc
addr16
bound
jne
hlt
mov
test
or
cmp
fwait
repnz
jbe
dec
outsl
roll
pop
mov
cmp
or
xchg
js
mov
add
icebp
push
aam
jl
mov
and
push
mov
pop
mov
jecxz
mov
dec
mov
stos
mov
flds
cmc
inc
cmc
push
add
ret
rcll
inc
xlat
mov
pop
in
cmp
ret
inc
adc
xchg
mov
cwtl
cmp
sbb
sub
cmp
insb
addl
das
ret
xchg
and
loopne
and
cmp
aas
sbb
sbb
push
cmp
ret
enter
dec
or
push
daa
pop
bound
jbe
mov
imul
jo
cmp
push
push
sub
lret
mov
ja
mov
push
cmpsb
push
push
out
icebp
add
mov
sub
js
adc
shrl
pop
addb
out
inc
and
adc
cmp
xor
push
or
xor
lods
mov
xchg
cmp
std
dec
mov
into
xchg
lock
lds
add
add
dec
xor
test
xchg
pop
push
push
das
testl
xchg
inc
fldl
mov
lea
push
adc
jbe
std
pusha
test
cmp
rep
pop
inc
sub
jo
dec
jb
insl
inc
or
sub
adc
test
mov
imul
gs
ja
mov
mov
pop
mov
stc
dec
push
mov
mov
mov
mov
ljmp
dec
dec
inc
or
sahf
addl
or
pop
sti
stos
roll
insb
xchg
lods
pop
cmp
mov
pop
lods
inc
dec
add
stos
xlat
xchg
add
push
lahf
jae
jno
and
mov
pop
ss
adc
arpl
mov
pusha
cmc
sbb
fildll
and
outsl
mov
les
push
repz
and
pusha
sub
leave
xlat
arpl
xor
jle
lret
cmp
aas
cmp
repz
fsubrs
ss
inc
cmp
test
insl
pusha
mov
jb
xlat
jmp
push
cld
pop
ds
add
push
mov
adc
mov
push
pusha
test
daa
and
push
or
gs
frstor
cmp
xchg
and
daa
enter
rorb
pop
shrb
js
fnstsw
js
add
push
jno
jbe
imul
out
jb
xorl
inc
out
cwtl
add
adc
shll
mov
mov
in
sti
jle
mov
jno
ja
and
and
or
outsl
dec
jb
and
dec
pop
or
inc
cmp
cmp
mov
ret
jmp
pop
fldenv
sub
mov
jae
or
sti
mov
fadds
push
sub
das
ss
sub
sub
popf
jmp
sub
mov
mov
add
add
or
inc
jno
sub
push
adc
mov
inc
dec
movsl
jmp
push
mov
cmp
je
push
and
aas
inc
inc
push
int
imul
pop
dec
add
cs
mov
fwait
jno
dec
add
outsb
sbb
mov
sbb
adc
xor
sub
mov
sub
adc
mov
cmp
addr16
mov
or
pop
stos
jo
out
and
addb
push
loope
pop
push
daa
lahf
mov
aaa
fwait
pusha
lds
mov
popa
pop
imul
je
movsl
add
jmp
mov
cwtl
lock
mov
rcl
outsb
mov
es
inc
pop
xor
push
mov
insb
enter
fcoml
push
lea
jge
and
and
fwait
nop
andl
out
adc
adc
ret
aas
daa
sarl
shrl
push
jle
jb
lcall
adc
inc
ret
sbbb
xchg
jo
jne
add
roll
inc
cmp
ret
iret
xor
xorl
add
movsb
popf
cwtl
repz
pop
sbb
add
mov
pop
ja
lret
jmp
jecxz
bound
pop
adc
daa
dec
pop
movsb
rclb
jmp
arpl
cwtl
in
adc
scas
mov
dec
push
dec
pop
lcall
push
mov
sub
lea
push
popa
pop
sbb
cmp
out
sbb
push
and
daa
out
scas
fdivl
or
dec
nop
rorl
jne
dec
jmp
aas
imul
loope
jbe
andb
xor
push
lods
loop
scas
arpl
clc
orb
sub
sarl
dec
and
cmp
gs
out
cmp
adc
jns
jnp
sbb
arpl
mov
push
and
xchg
mov
jnp
push
and
push
inc
adc
or
inc
dec
fists
xor
insl
jb
jmp
xchg
mov
lret
or
mov
and
dec
mov
push
and
ss
hlt
adc
mov
lds
dec
ljmp
jno
push
sbb
inc
cs
push
push
mov
sbb
cltd
rol
gs
xor
shlb
jmp
cmp
out
mov
sub
loopne
jmp
ret
in
xor
mov
jmp
add
jne
inc
sub
push
push
jg
pusha
push
sub
in
jno
adc
enter
adc
cmpsl
test
cmp
jmp
cmc
push
sub
jle
popa
add
cwtl
xchg
add
xchg
stos
mov
jge
jne
gs
cmp
mov
inc
popa
add
mov
pop
push
mov
mov
sbb
fdivl
jae
outsb
sbb
mov
dec
xor
mov
adc
push
jg
xchg
cwtl
jo
xor
movsl
cmc
mov
adc
cmp
sbb
mov
xor
sbb
adc
dec
jns
xor
les
push
mov
adc
shrb
inc
sbb
xchg
xchg
pop
pop
movsl
inc
jmp
mov
sub
push
movsl
jne
sub
add
or
add
add
loop
loopne
andl
pop
movsl
jne
test
xchg
movsl
aad
cmpl
aam
mov
pop
cwtl
je
push
jmp
xlat
shl
xchg
mov
mov
scas
cmpsl
stos
jne
mov
xor
sbb
scas
xlat
xchg
imul
xor
add
pop
add
shll
arpl
shl
inc
inc
mov
mov
lods
adc
lods
fnstcw
test
mov
add
mov
adcb
xor
push
xor
adcb
sub
arpl
mov
and
xorb
loop
sub
xor
cltd
push
mov
sub
xchg
and
push
jne
in
adc
add
ret
jne
sbb
aaa
les
outsl
or
aad
loope
stos
sub
pop
and
loope
inc
imul
mov
cmp
add
stos
test
lea
cmp
fisubs
faddl
push
outsl
fsubrs
in
test
sbbl
test
push
add
in
xchg
xchg
mov
mov
add
add
lods
bsf
jne
lea
repz
add
rcl
pop
test
in
mov
shlb
adc
dec
movsl
aaa
cwtl
negl
mov
shlb
loopne
jb
test
push
adc
jp
or
in
mov
scas
pop
mov
pop
mov
sub
sbb
fisttpl
popa
test
jne
jg
pop
jmp
sbb
mov
sbb
arpl
push
inc
fstl
pop
mov
mov
dec
and
pop
lret
arpl
adcl
stos
ror
shlb
mov
add
jo
movsb
test
and
and
je
outsl
pop
sqrtps
out
push
add
outsb
in
xchg
lods
test
mov
jnp
stos
je
mov
jecxz
jb
mov
ret
adc
int
or
je
cmpsl
pop
add
xor
addr16
addb
aaa
fdivrl
loope
lds
stos
mov
fiadds
jo
ss
aas
jnp
mov
andl
sbb
sub
stc
jge
xchg
rcrl
outsl
add
aas
add
xor
pop
pop
roll
icebp
jmp
cmc
bnd
mov
or
rorb
mov
fnstsw
sub
xchg
xchg
aaa
lret
cmp
clc
add
mov
adc
cmpb
pop
jge
test
addb
adc
adcl
pop
mov
sub
add
mov
and
fstl
jo
fdivl
arpl
jbe
sub
addr16
adc
mov
xchg
sub
mov
cmp
jp
add
sbb
sub
add
dec
scas
lds
xchg
push
je
outsb
imul
ret
mov
push
je
jp
mov
adc
les
out
sub
mov
addl
xchg
daa
jb
rclb
inc
fsubr
dec
push
imul
xchg
es
sbb
add
pop
jmp
stos
push
jbe
jle
mov
test
xchg
adc
mull
movsl
divl
mov
pop
adc
jbe
jno
add
jge
fchs
loopne
in
mov
outsb
xchg
push
je
imul
daa
push
ja
das
fwait
push
shl
out
xchg
js
in
push
push
outsl
jns
call
add
mov
xor
es
push
mov
jo
sahf
out
sbb
shll
sub
jno
dec
subb
add
loopne
xor
pop
insb
fisubrl
sbb
shr
cmp
roll
les
out
loop
popf
xchg
xor
pop
cmp
sbb
pop
int3
push
sahf
outsl
mov
add
xor
jmp
cmp
mov
loope
iret
bound
pushf
icebp
and
mov
loopne
mov
test
add
les
pop
cmovp
xor
sbb
lcall
jb
jne
pop
xorl
jbe
push
and
pop
sbb
add
sar
rorb
pop
addr16
or
and
sbbl
inc
ds
imul
cmp
arpl
inc
jae
popf
mov
pop
or
mov
jge
mov
fdivs
loopne
nop
or
push
add
loope
arpl
nop
js
mov
mov
dec
js
aaa
add
pop
jne
cmp
js
dec
xorl
jae
stos
mov
sub
add
mov
arpl
mov
sbb
jbe
push
in
dec
mov
mov
pop
pop
add
inc
pop
cmp
mov
inc
sub
inc
popa
mov
mov
push
cld
pop
sub
iret
out
mov
out
inc
or
inc
mov
sub
or
test
not
mov
and
loope
les
mov
sub
dec
xor
adc
pop
xchg
jmp
int
push
popf
mov
push
jbe
push
sbb
jns
pop
call
and
mov
mov
shlb
jle
dec
inc
pop
mov
push
popa
add
or
add
sbb
aaa
mov
or
jns
sbb
test
out
jle
pop
cmp
add
out
testb
pop
mov
pop
insb
arpl
cmc
add
or
sbb
mov
lods
add
xor
and
or
sahf
sti
pop
insl
adc
mov
jae
int3
push
xor
nop
xor
inc
or
ja
lret
mov
add
js
inc
pop
bound
xor
flds
xorl
cwtl
cwtl
leave
jo
sbb
or
inc
push
in
imull
test
sub
xlat
test
xor
clc
mov
movsb
daa
mov
clc
nop
xchg
mov
stos
xchg
mov
js
cmp
jne
mov
bound
xor
loope
cld
mov
and
mov
mov
hlt
lcall
fdivp
cs
out
xor
out
shrb
rolb
pop
into
push
ret
cmpsl
int
or
mov
pop
and
and
push
repnz
andb
cmpb
push
fnstcw
sbb
jle
mov
sub
div
std
pop
pop
and
jno
and
data16
adc
push
test
shl
add
int
or
or
add
or
arpl
dec
push
xchg
pop
inc
daa
je
jecxz
or
imul
pusha
sub
addr16
jmp
ja
stc
and
call
icebp
fsubr
add
pop
jg
js
jl
cwtl
cmp
or
test
scas
dec
fmuls
les
imul
lods
repnz
cmp
dec
repz
lcall
jb
push
push
and
xchg
je
and
cmp
push
testb
iret
pop
push
sbb
outsl
xorl
cmp
add
push
sahf
negl
das
inc
and
or
and
and
and
push
and
das
ds
in
ds
add
insb
sub
stc
aas
or
mov
shrd
cmp
dec
lods
imul
int3
adc
sarl
fwait
call
cmp
dec
mov
and
pop
jb
leave
push
rclb
cli
stc
add
pop
push
xchg
sbb
jo
iret
mov
inc
cmp
test
fildll
mov
mov
sbb
pusha
pop
loope
leave
jb
lock
imul
xchg
jae
pop
or
jmp
inc
or
xor
rol
sub
sahf
push
cld
roll
add
les
movsl
cmp
xor
pusha
je
mov
mov
cmp
cmp
xchg
and
xlat
mov
cmp
pop
lcall
sbb
cmp
lea
dec
xor
or
jno
test
add
faddl
pop
mov
into
push
mov
jecxz
sti
lods
pop
mov
cmc
icebp
jp
or
lea
mov
lret
and
sub
or
sub
scas
xor
mov
inc
and
ss
or
and
pop
js
popa
dec
lods
popa
cmp
or
xchg
mov
pop
xchg
dec
push
mov
inc
inc
mov
fcmovnbe
xchg
fisubrs
xchg
and
cmc
repz
es
adc
div
and
je
or
mov
sbb
or
mov
sub
stos
pop
jp
and
test
mov
lods
ret
mov
xchg
test
pop
push
sub
xchg
mov
add
lods
or
out
sbb
push
sbb
cld
pop
dec
stos
mov
inc
sbb
ja
add
inc
or
push
jo
hlt
cltd
mov
cmp
push
sub
cmp
dec
push
or
lds
sub
jns
adc
xor
mov
arpl
rclb
xchg
cmp
mov
std
movsl
dec
and
jae
sub
frstor
xor
pop
outsl
pop
dec
adcl
ret
sti
and
add
and
or
push
and
insl
popa
jne
jns
gs
push
in
lea
inc
push
xor
or
jmp
mov
pop
or
in
mov
mov
add
sub
scas
and
clc
inc
lods
sub
scas
dec
inc
adc
add
xor
mov
adc
cld
pushl
cwtl
fs
pop
add
insb
jae
jb
outsb
inc
or
add
popa
sub
add
inc
js
inc
sub
dec
xchg
and
mov
insb
adcl
in
and
jne
pop
outsb
je
in
and
cmovns
insl
jo
je
jb
outsl
imul
popa
insl
outsl
imul
mov
out
inc
es
xor
add
enter
scas
cmp
push
gs
dec
mov
inc
outsl
in
inc
repz
inc
addr16
addr16
outsb
outsw
inc
mov
sahf
push
jo
inc
jae
jo
scas
mov
mov
insb
fmull
data16
lods
sarb
je
jbe
xor
jo
push
imul
imul
dec
push
insl
mov
enter
jp
int3
mov
or
dec
outsl
mov
loop
aas
cmp
sbb
add
or
jo
lock
jg
incl
pop
and
syscall
lock
add
push
daa
lock
mov
push
push
or
sbb
loop
negl
add
push
inc
mov
int3
cmp
loopne
mov
add
jmp
fisttpl
or
push
and
inc
pop
mov
pop
xor
add
nop/reserved
outsl
cmp
adc
scas
imul
pusha
pop
xchg
push
subb
add
pop
add
add
and
inc
add
mov
pusha
inc
inc
push
inc
insb
and
mull
outsl
testb
in
inc
rolb
or
push
pop
xor
shrb
fs
fiadds
xchg
popa
add
pusha
dec
add
dec
and
push
negl
fidivs
add
push
jae
aam
loope
dec
jbe
cmp
idivl
add
mov
dec
xchg
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
