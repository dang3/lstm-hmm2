dec
add
add
in
add
mov
mov
add
mov
cmp
jno
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
test
jb
mov
sub
mov
sub
mov
mov
sbb
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
sub
mov
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jae
mov
and
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
movl
mov
mov
pushl
push
mov
sub
push
lea
mov
push
call
mov
mov
mov
mov
cmpl
jle
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
mov
add
add
cmp
jb
mov
mov
sub
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
cmp
jae
mov
mov
sbb
mov
mov
add
sub
cmp
jle
mov
mov
mov
mov
mov
mov
movl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jbe
mov
mov
add
mov
mov
mov
call
mov
sub
cmp
jg
sbb
mov
mov
mov
mov
sub
mov
mov
mov
add
call
mov
mov
mov
cmp
jl
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
mov
sub
mov
mov
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
sbb
cmpl
jne
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
sub
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
cmpl
ja
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
cmp
ja
mov
mov
mov
mov
orl
mov
mov
mov
call
push
call
mov
add
mov
cmp
jb
mov
mov
mov
mov
mov
adc
mov
mov
call
mov
sub
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
lea
mov
mov
add
mov
mov
mov
mov
add
mov
sub
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
pushl
mov
push
pushl
call
mov
mov
add
mov
or
cmpl
jne
mov
adc
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
test
jo
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
cmp
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
mov
lea
push
push
call
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
mov
test
jl
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
add
cmp
jae
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
or
test
jo
mov
mov
xor
mov
mov
mov
xor
mov
mov
and
call
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
or
leave
ret
int3
push
mov
add
mov
mov
sub
mov
cmp
jno
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
cmp
je
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
add
cmp
je
mov
mov
mov
sub
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
pushl
call
mov
mov
sub
mov
mov
cmp
ja
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
push
mov
lea
mov
push
call
mov
mov
mov
mov
adc
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
adc
cmp
jo
mov
mov
mov
mov
mov
sub
mov
mov
mov
sbb
mov
push
push
call
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
mov
push
call
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
cmp
ja
or
mov
mov
sub
mov
xor
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
and
push
call
add
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
add
xorl
mov
mov
mov
mov
push
call
mov
mov
add
mov
cmp
jb
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
push
call
and
mov
add
mov
sub
cmp
je
subl
mov
mov
sub
sub
sub
mov
mov
mov
push
call
mov
mov
sub
mov
cmp
jg
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
cmp
jl
mov
mov
mov
sub
or
mov
mov
mov
addl
mov
mov
pushl
mov
lea
push
call
mov
and
add
mov
sub
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
test
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
cmp
jbe
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jne
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
test
ja
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
and
push
call
mov
mov
mov
mov
mov
test
jbe
mov
mov
add
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
add
mov
add
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
add
push
call
mov
mov
sub
mov
mov
cmp
je
mov
mov
add
or
add
mov
mov
movl
mov
xorl
push
push
call
mov
mov
add
mov
sub
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
push
mov
push
call
mov
add
sub
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
sub
push
call
mov
mov
sub
mov
add
cmp
jl
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
call
mov
mov
sub
cmpl
jae
mov
mov
and
mov
add
mov
mov
mov
mov
adc
mov
mov
push
lea
mov
push
call
mov
mov
add
mov
test
je
mov
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
add
mov
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
call
mov
mov
mov
cmpl
jg
sbb
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
or
mov
mov
mov
mov
mov
mov
cmp
je
dec
jne
mov
mov
add
mov
and
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
pop
add
add
add
pop
push
jae
add
addr16
add
add
jae
add
mov
mov
sub
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
adc
mov
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
cmp
jne
mov
mov
mov
mov
mov
add
orl
mov
mov
mov
mov
mov
mov
mov
add
add
test
jb
adc
mov
mov
mov
adc
sub
mov
mov
mov
call
mov
mov
mov
mov
cmp
ja
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
xor
mov
cmpl
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmpl
jb
mov
mov
mov
sub
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
test
jl
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
xor
mov
mov
mov
mov
cmp
jl
and
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
push
call
mov
mov
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
call
mov
mov
mov
mov
cmp
jb
mov
or
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
xor
mov
cmpl
jne
add
orl
mov
mov
add
mov
mov
mov
mov
mov
call
push
push
call
xor
mov
mov
mov
cmp
ja
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
sub
mov
sub
mov
mov
mov
mov
push
mov
push
call
call
pushl
call
call
mov
mov
sub
sub
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
call
adc
mov
mov
mov
mov
mov
cmp
jnp
sub
xor
mov
mov
xor
mov
add
mov
sbb
mov
push
push
call
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
mov
mov
or
mov
mov
call
mov
mov
add
mov
cmp
ja
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
cmpl
jae
mov
mov
mov
mov
mov
xorl
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
call
call
mov
mov
add
mov
add
test
ja
mov
mov
mov
mov
add
mov
add
mov
mov
mov
subl
mov
mov
mov
mov
add
sub
cmp
jne
mov
mov
mov
mov
mov
sub
incl
mov
decl
and
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmpl
jbe
mov
add
mov
mov
mov
mov
mov
push
call
mov
and
sub
cmp
jg
mov
and
mov
mov
mov
mov
mov
ret
int3
push
mov
add
mov
mov
sub
mov
cmp
jae
mov
mov
mov
mov
sub
mov
mov
mov
xor
mov
mov
mov
mov
cmp
jg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
pushl
call
mov
mov
sub
mov
mov
cmpl
jle
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
add
xor
cmpl
jl
mov
mov
sub
mov
addl
mov
mov
mov
call
push
call
mov
mov
sub
sub
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
pushl
call
mov
mov
sub
mov
cmpl
ja
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
sub
mov
mov
incl
mov
mov
mov
push
call
mov
mov
add
cmp
jg
mov
mov
sub
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
inc
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmpl
jb
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
or
mov
add
push
call
mov
mov
mov
mov
mov
cmp
ja
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
cmp
ja
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
mov
or
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
test
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
or
mov
cmp
jno
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jne
or
mov
mov
sbb
add
mov
mov
mov
mov
andl
mov
add
push
call
mov
mov
sub
sub
cmp
jne
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
cmp
ja
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
mov
sub
mov
add
add
add
test
jne
mov
mov
add
mov
sub
cmp
jg
mov
mov
or
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
cmpl
jp
mov
add
mov
mov
mov
mov
mov
xor
mov
mov
test
jg
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
cmp
jp
mov
mov
mov
add
sub
add
mov
mov
mov
mov
mov
push
call
mov
mov
cmpl
jae
mov
sub
mov
mov
mov
mov
mov
mov
ret
push
mov
add
mov
mov
mov
mov
add
cmpl
jl
mov
sub
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
sub
sbb
mov
add
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
add
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmpl
jg
mov
xor
add
mov
mov
movl
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
sub
cmp
ja
andl
mov
mov
xor
mov
mov
mov
pushl
call
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sbb
sub
cmp
jg
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
add
cmp
jbe
mov
mov
mov
add
mov
mov
add
decl
mov
mov
mov
mov
mov
mov
xor
mov
mov
add
cmp
jg
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
jl
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
mov
lea
mov
push
call
mov
mov
sub
mov
cmpl
jns
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
sbb
mov
cmp
jo
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
add
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
add
cmp
jo
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
jg
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
sub
mov
mov
mov
push
call
or
mov
cmp
jbe
mov
mov
mov
mov
mov
add
push
push
call
mov
add
mov
cmp
je
mov
sub
mov
mov
mov
mov
mov
push
call
mov
add
mov
cmp
jbe
sub
mov
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
mov
add
and
sub
or
mov
mov
push
add
push
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
cmp
jb
mov
mov
mov
add
mov
mov
mov
mov
mov
push
push
call
mov
sub
sub
cmp
js
mov
mov
add
mov
add
mov
mov
mov
mov
mov
call
call
mov
add
mov
cmpl
jl
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
test
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
push
call
mov
mov
add
mov
add
cmpl
jbe
mov
mov
mov
add
mov
mov
mov
movl
sub
mov
xor
push
mov
push
call
mov
mov
mov
mov
cmp
jbe
mov
adc
mov
adc
mov
mov
mov
mov
mov
addl
mov
mov
mov
sub
or
mov
add
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
jb
mov
mov
and
add
sub
mov
mov
mov
sub
mov
add
cmp
jae
mov
sub
mov
mov
mov
sub
push
call
mov
mov
mov
cmpl
jns
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
cmp
jb
mov
mov
sub
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmpl
jb
mov
mov
add
mov
mov
mov
mov
mov
mov
push
push
and
push
call
mov
sub
mov
add
cmp
jae
mov
sub
mov
mov
mov
push
pushl
push
call
mov
mov
cmp
ja
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jl
mov
mov
add
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
add
sub
test
jae
and
sub
add
mov
mov
mov
push
call
mov
add
mov
cmp
jl
mov
mov
mov
mov
xorl
mov
mov
mov
mov
mov
mov
add
cmp
je
mov
mov
sub
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
shl
push
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
loope
add
push
add
push
add
push
add
push
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
push
add
loop
add
push
add
push
add
push
add
push
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
jecxz
add
push
add
jecxz
add
jecxz
add
push
add
add
add
push
add
push
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
in
add
push
add
add
push
add
push
add
in
add
in
add
in
add
in
add
in
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
push
add
add
add
loopne
add
add
add
push
add
push
add
add
insb
add
add
add
inc
add
imul
add
push
add
arpl
add
inc
add
push
add
add
push
jne
add
add
add
add
add
add
jb
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
dec
push
add
inc
add
push
add
xor
add
add
add
dec
push
add
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
dec
push
add
add
add
add
popa
add
add
add
jne
add
pop
pop
add
je
add
add
jno
add
add
add
add
add
add
add
inc
add
js
add
xor
add
push
add
inc
jae
add
add
add
add
add
jne
add
add
add
inc
add
dec
jns
add
add
add
pop
add
add
add
push
add
add
add
jno
add
add
push
push
inc
add
add
add
add
add
add
add
add
add
cmp
add
add
add
dec
jns
add
add
je
add
js
add
add
pop
add
push
push
add
push
aaa
add
add
xor
add
push
add
push
add
add
add
jb
js
add
add
push
add
add
dec
add
dec
add
jae
dec
popa
add
add
add
ja
inc
dec
add
inc
add
add
add
add
add
add
add
add
add
add
je
add
add
add
add
xor
add
add
cmp
add
jns
cmp
pop
add
add
add
add
data16
add
dec
add
push
xor
add
add
add
add
add
add
insl
add
add
cmp
bound
add
dec
xor
add
add
add
add
add
pop
jb
add
jae
imul
add
add
inc
add
add
add
add
add
js
inc
add
push
add
add
add
add
add
js
add
dec
add
add
add
add
add
js
dec
add
add
add
add
xor
add
push
inc
add
add
add
add
push
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
dec
add
add
xor
jno
push
xor
add
add
add
add
add
add
add
add
dec
add
add
xor
add
add
jno
add
jns
add
dec
add
add
add
add
add
data16
add
dec
add
add
add
inc
add
add
add
cmp
add
dec
add
xor
add
cmp
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
push
add
inc
add
add
add
add
add
add
push
add
pop
add
add
jns
add
add
add
add
add
add
add
add
add
add
dec
add
ja
add
inc
add
add
add
dec
add
add
jne
add
add
add
xor
add
add
add
add
add
add
aaa
add
dec
push
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
dec
add
add
add
ja
jb
add
add
add
insl
add
add
add
add
add
add
dec
add
pop
add
add
add
add
add
add
add
add
bound
inc
add
add
add
xor
push
add
push
add
add
jbe
js
add
inc
data16
add
cmp
insl
bound
inc
add
dec
add
add
add
jns
add
add
add
jo
add
push
add
add
cmp
jns
add
xor
jno
jno
pop
jae
add
add
bound
xor
data16
add
add
push
push
add
dec
push
dec
jb
xor
imul
add
jbe
je
add
dec
outsl
add
push
xor
add
xorl
mov
xor
push
sbb
jg
les
mov
or
cmpsb
data16
cmp
xor
or
inc
sbb
cmp
cmp
inc
fcoms
push
sbb
jbe
popl
xchg
test
lock
lea
cs
pop
std
leave
xchg
ficompl
shrl
fisttpll
mov
mov
shrb
popf
insl
fs
adc
or
ljmp
jge
push
mov
cltd
mov
jbe
xor
or
loop
cmpsb
or
pusha
mov
jg
clc
es
xor
add
mov
shlb
clc
push
and
mov
aam
inc
sub
pop
outsl
popf
xchg
mov
leave
jmp
pop
xchg
cmp
xchg
or
pop
mov
test
call
inc
cltd
mov
cmp
push
movsb
ljmp
shll
push
add
xchg
xor
bound
test
xor
sub
test
je
mov
mov
jle
repz
mov
adc
or
xchg
mov
cltd
mov
cmpsl
outsb
jne
movsl
in
dec
cmp
inc
mov
xor
mov
pop
stos
push
inc
or
insl
mov
xchg
push
test
mov
mull
dec
or
rorl
mov
and
push
pop
sarb
mov
mov
push
cltd
mov
pop
cwtl
add
mov
pop
mov
jae
add
mov
enter
outsb
hlt
mov
cmp
movsl
sbb
inc
mov
sbb
movsl
out
leave
sbb
cmp
jo
jg
popf
cmc
scas
sub
ret
mov
dec
ja
mov
jle
cmp
pop
lods
ror
call
nop
push
lods
jbe
call
inc
fiadds
lods
push
mov
push
lahf
stos
mov
inc
aaa
shl
push
sbb
cli
ret
cmp
xchg
push
sbb
lret
push
lret
out
xchg
mov
movsb
pop
pop
inc
mov
cltd
repnz
test
aaa
add
jmp
pusha
add
pop
aad
mov
in
push
addl
add
mov
add
arpl
sbb
lret
in
pop
adc
call
in
pusha
xchg
test
inc
sub
rorl
adc
mov
pop
call
outsl
pop
push
xor
faddp
cmp
test
sbb
mull
add
jl
into
ljmp
dec
icebp
leave
in
out
or
inc
xchg
dec
adc
cmp
ss
dec
or
inc
iretw
sbbl
jp
insl
call
in
fs
cmp
push
push
adc
in
push
push
aam
xor
add
stos
cmp
lret
xor
xor
inc
mov
loopne
or
or
ljmp
int
out
or
in
dec
dec
cs
sbb
cmp
dec
dec
xor
push
jb
push
das
loop
mov
mov
pmuludq
xor
outsb
push
push
imul
sub
cmp
movsl
mov
data16
notl
aam
fidivl
and
jmp
xchg
sbb
jmp
mov
push
aaa
ljmp
nop
cltd
cmp
or
imul
xor
xor
jnp
cmp
loope
pop
sbb
xor
stos
jmp
inc
cs
in
cmp
lea
adc
push
dec
lret
iret
jns
xor
clc
repnz
cmp
inc
xor
inc
jl
jnp
jmp
xor
xchg
sub
xor
stos
cmp
push
fs
filds
out
notb
dec
jmp
in
and
cmp
pop
aaa
and
xor
je
bound
mov
inc
cmp
sub
mov
mov
in
movsb
jbe
mov
testb
out
push
push
iret
mov
adc
push
aaa
leave
in
dec
js
and
test
mov
bound
add
mov
js
sub
adc
jne
push
call
dec
sarl
jecxz
cmpsl
fadd
das
cmp
jle
mov
xor
fisttps
or
out
mov
or
push
data16
cmp
mov
repz
push
add
push
jmp
jmp
aas
xorb
xchg
push
shll
adc
xor
lock
mov
jmp
jl
and
and
dec
inc
pop
push
cld
or
sbb
xchg
pop
rcr
xor
adc
xor
pop
jmp
xchg
aas
pop
ret
lcall
outsb
in
lea
mov
mov
push
insl
sub
mov
jp
adc
inc
add
cs
lret
addl
mov
add
push
pop
roll
jo
aaa
add
nop
add
cmp
imul
iret
pusha
sbb
sub
and
fcoms
mov
arpl
jbe
mov
cmp
xor
jmp
sub
mov
fs
pop
xor
pop
add
mov
add
lea
xor
movsl
pusha
add
or
pop
cmp
and
pusha
fs
mov
bound
xor
and
cmp
mov
insb
xor
ljmp
dec
push
push
leave
insb
or
and
imul
inc
in
outsl
add
je
outsl
lea
push
in
mov
leave
daa
outsb
jl
or
stos
icebp
jg
xchg
adc
and
daa
aas
mov
or
dec
or
or
and
je
sbb
add
adc
in
mov
inc
in
dec
mov
int3
icebp
int3
shll
mov
stos
sub
push
or
sub
mov
cld
pop
fsubl
and
int3
xor
out
scas
xlat
arpl
add
push
and
movl
push
or
and
add
mov
add
jle
add
inc
fmull
in
nop
jns
inc
movsl
jno
stc
and
notl
add
mov
xor
popf
sbb
push
mov
sub
cmp
pop
loopne
adc
and
mov
jbe
pop
push
xor
imul
outsl
call
adc
mov
rorb
cmp
jp
push
in
or
or
aam
xor
in
xor
add
rclb
fimuls
xor
in
push
imul
pop
je
test
adc
inc
adc
cmp
pushf
jns
xlat
and
pop
aas
movb
cmovo
adc
adc
pop
or
dec
add
pop
cmc
inc
dec
adc
jns
data16
fbld
fadd
loope
xchg
cmp
mov
sar
inc
jmp
nop
outsl
add
jo
add
push
pop
push
jecxz
push
rclb
dec
pop
nop
sbb
push
into
adc
xchg
mov
sub
inc
sub
lds
data16
loop
loop
aas
mov
push
mov
fsts
push
sub
test
add
add
adc
xor
movsl
leave
fdivl
ds
scas
in
jnp
and
cmp
or
incl
scas
ja
test
mov
xchg
pop
out
scas
inc
jne
inc
test
pop
hlt
push
flds
mov
out
imul
or
add
in
push
sub
shll
test
lret
xadd
cmp
pushf
lods
xchg
push
dec
in
test
call
push
mov
dec
adc
push
test
in
jno
lea
sbb
mov
jle
pop
mov
mov
xchg
mov
jne
call
xchg
movsb
mov
xchg
push
sbb
test
repnz
or
mov
shlb
test
jle
jl
mov
and
fbld
cmp
insl
fists
movsb
test
or
gs
push
xchg
add
mov
js
jl
mov
icebp
sarb
mov
je
sub
jg
push
cmc
or
mov
and
fisubl
add
xor
mov
mov
daa
mov
add
xchg
adcb
fnclex
dec
jle
mov
mov
scas
adcb
aaa
jecxz
jmp
mov
iret
iret
lret
test
test
dec
icebp
repnz
adc
int3
dec
and
jne
xor
adc
pop
mov
xor
adc
fs
mov
push
mov
jo
in
je
mov
js
xchg
mov
jl
adc
jge
mov
icebp
ret
mov
hlt
sbb
rcrb
xchg
push
sbb
inc
add
test
decb
jae
fcmovnb
jge
mulb
in
sbb
out
addr16
aas
cmp
test
lahf
add
jnp
jmp
jle
cmp
jmp
sub
cmpsb
call
pop
add
popa
add
and
dec
aas
repz
rcll
sbb
or
add
outsl
jmp
pop
push
ja
arpl
cmp
mov
ret
sub
or
adc
fildll
xchg
imul
shlb
lds
int
adc
jl
mov
insl
daa
xchg
xor
lock
mov
xor
mov
or
cmpsb
repnz
cld
xchg
fisubrs
fldt
ret
or
dec
sub
sub
ds
xchg
test
sub
xchg
test
sar
test
xchg
loop
or
xchg
or
loopne
sbb
sbb
push
or
sub
cmp
mov
daa
ljmp
insb
out
lret
scas
shrl
andl
popa
and
jae
cmp
subl
adc
in
adc
mov
adc
mov
sub
sbb
add
es
xor
adcb
dec
repnz
cmp
mov
lods
or
ja
mov
mov
push
or
push
hlt
aam
leave
faddl
imul
adc
mov
mov
jb
in
jge
jle
sti
repz
sbb
sub
adc
pop
aam
xlat
add
nop
insl
push
add
sahf
jmp
outsb
out
fmul
cmp
xchg
sbb
test
mov
add
lods
inc
adc
lahf
loopne
sub
or
and
pop
dec
mov
jne
adc
push
pop
vstmxcsr
or
lcall
push
pop
shll
mov
into
cli
imul
sub
fmull
cs
incb
mov
lcall
cmpsb
subl
out
xlat
test
pop
xor
or
sti
and
popa
mov
lods
jo
jbe
cmp
inc
test
dec
nop
lods
xor
mov
shll
lret
test
dec
cmp
dec
fildl
fists
mov
or
adc
pop
sti
sbb
dec
js
out
call
add
out
movsb
dec
sbb
pop
adc
sub
inc
enter
adc
movsb
mov
xorb
cmpsb
mov
sbb
jge
sbb
cmp
sub
hlt
shll
int3
addr16
xor
cmpsb
aas
call
iret
lds
xor
fldenv
mov
int3
incb
add
adc
jb
cld
add
imul
mov
xchg
sbb
stos
sbb
scas
xor
test
or
push
pop
adc
dec
popf
cmp
test
adcl
cmp
pop
fidivl
push
pop
test
or
or
or
repnz
call
jnp
jl
pop
test
xchg
sbb
or
js
lret
fstpt
mov
dec
mull
les
adc
stc
add
repz
mov
push
cld
test
cmp
xchg
sub
popl
cltd
xchg
leave
adcb
je
xor
or
outsl
pop
call
out
pop
aaa
aad
rorl
call
outsl
xchg
or
rcll
rcrl
pop
mov
data16
pop
add
jmp
mov
loope
mov
mov
movsl
and
outsb
int
aaa
es
xchg
je
movsb
dec
cmp
add
dec
push
scas
stc
call
sub
ret
jle
jmp
sbb
cmp
cs
add
jmp
add
mov
stos
aaa
out
pop
ljmp
push
inc
lock
stos
int
pushf
jne
dec
inc
pop
pop
cmp
imul
shr
mov
sbb
xchg
sub
insl
out
mov
movsl
or
mov
or
inc
cmp
xlat
inc
jp
aad
mov
inc
sahf
xor
xchg
in
and
inc
call
iret
pusha
call
push
or
popf
mov
rcrb
jbe
cmp
cmp
iret
ds
ret
sti
jo
inc
push
dec
je
adc
or
sub
pop
sbb
push
and
mov
or
shlb
dec
mov
cmc
jno
cmpsb
mov
lcall
cli
movsl
aam
push
push
pop
movsl
filds
iret
addr16
lds
cmc
dec
inc
mov
loope
mov
jg
add
add
pop
je
add
jb
test
jne
pop
dec
jecxz
adc
xor
xor
subl
call
cli
js
add
loop
addr16
jbe
sbb
dec
push
jmp
in
jo
loop
dec
fldcw
sbb
fstl
test
cmp
mov
popa
xor
xchg
push
fs
sbb
je
andl
jmp
jg
cmp
xchg
incb
loopne
aam
push
fwait
ret
mov
sbb
mov
scas
mov
fnstenv
add
push
cmp
arpl
or
iret
mov
add
dec
inc
or
div
mov
xchg
mov
out
add
or
in
sub
inc
je
fs
sbb
inc
push
in
pop
gs
loop
sbb
xchg
ljmp
int3
pop
jle
xchg
gs
dec
push
lods
jb
ja
dec
cmp
jbe
call
mov
add
cmp
inc
sbb
or
adcb
and
mov
xor
jne
and
push
jne
adc
mov
jnp
mov
jne
inc
inc
frstor
mov
cmp
cmp
sub
sarl
gs
cmp
int3
push
arpl
push
push
es
xchg
out
nop
lret
and
cmp
loope
cmpl
xor
icebp
cmp
push
or
sahf
jecxz
stos
mov
clc
sub
daa
push
mov
and
adc
push
fs
popa
add
in
cli
orl
fmuls
pop
call
pop
add
adc
inc
jecxz
sub
ljmp
cmp
fs
repz
imul
dec
icebp
dec
int
or
xchg
sub
pop
mov
pop
icebp
or
int3
pshufw
enter
in
lds
pusha
iret
in
inc
push
mov
cmp
je
dec
jmp
xor
test
sub
adc
add
test
jle
call
pop
lea
jbe
lea
adc
out
jl
addl
dec
adc
jg
adc
dec
lret
dec
sub
add
aad
mov
orb
je
pusha
jo
and
jmp
rcrb
add
mov
dec
and
shr
add
push
cli
aaa
addr16
cmpl
jae
push
xor
aaa
inc
into
test
push
arpl
mov
add
mov
andb
add
and
scas
hlt
mov
inc
xor
cli
xchg
sub
push
push
adc
xchg
cltd
jl
adc
dec
pop
sbb
loope
or
add
ljmp
sarl
mov
push
fsubl
jbe
push
data16
mov
fisttpll
imul
mov
mov
rorb
pop
jb
lcall
arpl
pop
pop
cwtl
fsub
cmp
xchg
jg
jbe
and
sti
pushf
mov
xchg
in
or
nop
mov
xor
mov
cmp
mov
fdivs
mov
lea
pusha
pusha
loope
flds
mov
push
js
test
mov
test
inc
and
stos
outsb
dec
or
mov
or
les
or
xchg
outsb
pop
in
and
insl
xor
mov
jmp
movsl
sub
daa
dec
sbb
dec
lea
or
outsl
ljmp
out
mov
leave
adc
cmp
movsl
xor
or
leave
or
and
and
and
mov
in
xadd
mov
and
test
pushf
pop
je
mov
push
or
dec
and
in
and
pop
sub
jns
xor
cmp
and
cwtl
shrl
rorb
push
stc
pushf
mov
jecxz
cltd
and
push
sbb
add
outsl
mov
mov
hlt
add
popa
in
mov
mov
in
hlt
push
and
sti
mov
lds
je
mov
fidivrl
sub
loop
inc
or
movsl
bound
cmp
je
xchg
in
test
push
jnp
arpl
int3
mov
cmc
inc
dec
jge
mov
add
adc
jne
xor
inc
dec
push
hlt
fs
and
pop
test
call
mov
int3
and
sarl
fisttpll
and
in
in
call
mov
cltd
mov
cwtl
mov
mov
out
fdivs
into
adc
jge
andb
scas
cmpsl
dec
add
std
out
xchg
ss
and
movb
cmp
test
fiadds
shlb
sub
mov
addr16
punpckhwd
je
outsl
or
xchg
enter
js
sbb
scas
testb
movsl
xchg
popa
movsl
and
sbb
mov
push
es
testb
cmp
test
lret
xorl
int
js
mov
mov
outsl
jl
xchg
je
jg
sbbb
add
imul
add
jp
je
add
mov
and
fdivl
daa
sbb
mov
mov
je
dec
sbb
jmp
pop
popf
xor
call
sti
lea
push
test
mov
ret
clc
xor
xor
mov
push
mov
movsb
xor
bound
sti
xchg
jae
pop
cmpsl
jo
leave
mov
push
jbe
loope
cmpsb
and
call
lret
push
mov
popa
bound
je
dec
and
les
or
inc
adc
sub
cs
jmp
pop
pushf
call
rcrb
adc
bts
in
push
lock
mov
imul
cmp
push
loope
cmp
adc
mov
add
adc
mull
jmp
pop
pop
cmp
test
ret
testb
pop
enter
push
jmp
roll
and
cmp
pop
sarb
nop
enter
push
mov
in
or
jg
mov
cmp
mov
add
mov
sahf
inc
mov
add
pop
dec
lahf
add
mov
sti
subl
shlb
adc
nop
lret
rclb
pop
test
lods
mov
dec
xor
xor
clc
push
cmp
out
rorl
inc
in
enter
movsl
push
iret
fiadds
adc
cli
cmpsb
int3
std
insl
out
filds
sbb
cmp
jne
out
lds
daa
in
je
cmp
inc
popl
mov
addr16
aas
test
pop
aad
ljmp
roll
aad
test
lock
push
xchg
mov
mov
out
pop
popa
and
cmp
push
loope
and
dec
or
rorb
or
vrsqrtss
sub
callw
js
imul
fsubl
aas
call
sarb
int3
xor
out
int
and
sub
jl
push
dec
mov
aaa
pop
lahf
jp
clc
mov
lea
out
mov
mov
or
shrb
cmp
or
pop
dec
or
std
rcrb
inc
sbb
xchg
sbb
mov
test
ja
xor
pop
cmp
add
pop
pop
je
or
repnz
pop
mov
inc
mov
jnp
hlt
in
mov
push
inc
pop
ja
rcrb
lret
lods
and
dec
aam
test
enter
data16
rcll
into
movsb
pop
push
orl
or
cld
imul
add
lea
and
mov
inc
in
mov
push
pop
mov
in
mov
in
lods
dec
mulb
add
jp
add
lea
adc
imul
xchg
movsl
jo
dec
push
lds
mov
jmp
loope
pop
and
mov
test
minps
shlb
aaa
cmp
sub
popf
cwtl
push
call
mov
and
out
mov
cli
dec
je
sbb
mov
mov
sbb
xor
call
sti
fwait
sub
dec
imul
pop
xchg
aas
repnz
jle
pushf
xchg
add
inc
xor
push
test
nop
xchg
adc
popf
adc
cmp
subb
and
sar
call
mov
cs
dec
and
push
dec
sub
mov
in
cli
xor
add
push
jge
cmp
hlt
aas
xchg
xchg
icebp
jmp
bound
fiaddl
call
test
aas
jnp
xchg
icebp
push
and
push
lahf
ret
cmp
or
or
push
jnp
cld
dec
mov
call
jecxz
test
lar
dec
jl
sub
lods
lods
push
es
shrb
es
jo
inc
add
sub
sub
std
add
rorl
iret
sbb
jns
xchg
inc
jbe
lcall
out
dec
outsl
xor
aam
jle
push
jl
stos
pop
xor
xchg
in
push
adc
dec
and
shrl
js
jg
mov
and
pushf
stos
pop
mov
bound
aam
dec
inc
add
jbe
pop
sub
mov
pop
pop
jbe
xor
je
fidivl
mov
jg
cmp
cmpsb
roll
mov
fisttpll
cmp
sbb
rorl
push
test
fs
call
cmp
cmpsl
mov
js
stos
sub
push
adc
mov
dec
jnp
jb
jecxz
pushf
lahf
data16
and
iret
jmp
push
mov
lods
dec
mov
lods
ret
adc
loopne
nop
mov
jno
mov
cmpsb
push
mov
data16
ja
xlat
pop
pop
out
das
fcmovne
call
xchg
sarb
sub
sub
pusha
and
dec
push
pop
test
mov
prefetch
or
in
xor
dec
sbb
push
sarl
fisubs
hlt
and
scas
fmul
push
push
cmp
add
pop
dec
sbb
nop
jle
push
in
outsb
or
xlat
jo
pop
inc
mov
js
pop
or
xchg
jle
outsl
push
sbb
and
mov
cmp
repz
cmp
mov
js
push
lea
lret
leave
mov
mov
fadds
cmp
pop
xchg
sahf
jg
xchg
cmpsl
out
in
xlat
aaa
mov
mov
lea
push
xchg
inc
fsubrl
push
jae
mov
add
xchg
xor
pop
add
lcall
subb
xor
adc
lock
out
inc
bound
or
push
or
jb
mov
xchg
push
in
push
jno
xor
je
sub
call
sbb
ds
xchg
adc
clc
test
xchg
xor
ret
es
es
cmc
sbb
adc
scas
xor
mov
arpl
or
xchg
not
daa
inc
mov
outsl
jmp
add
cmp
add
and
cmc
sti
aas
add
add
jb
push
aad
aad
ffreep
js
sub
jg
adc
in
xchg
jge
aas
stos
testb
mov
jmp
lahf
int
icebp
mov
mov
es
andb
xchg
in
mov
cmp
or
and
in
cmp
push
push
cli
int3
shl
mov
scas
cmp
xchg
imul
repz
ja
or
push
in
sub
lock
lea
call
xchg
iret
call
xchg
int3
add
mov
fsubr
data16
or
roll
rcrb
add
cwtl
cli
xlat
xor
cmp
and
into
call
outsl
pushf
cmc
andl
jno
jnp
xor
lea
call
idivl
sub
loopne
and
adc
test
ret
pusha
or
adc
jns
xchg
roll
push
adc
cmp
popf
adcb
in
jne
and
xorl
inc
and
mov
or
inc
test
sub
cmp
outsl
outsl
push
inc
das
ret
mov
adc
popf
adc
adc
mov
nop
aam
cmp
mov
mov
lea
out
ret
jmp
ja
mov
add
cmpsb
sbb
cmpsb
ja
jae
xchg
and
and
sub
les
sbb
ret
inc
adc
cmp
adc
adc
es
pop
sbb
adc
push
dec
mov
lret
scas
out
iret
add
cmp
repz
dec
push
jo
hlt
add
inc
pop
add
adc
lret
dec
jbe
cmp
pop
fisttpl
stos
pushf
lods
ds
jne
ret
mov
xor
pop
mov
or
cmp
test
jae
push
push
dec
xchg
sub
jg
add
jmp
jae
xor
cmp
cld
aad
push
call
adc
divb
sub
push
ret
or
adc
mov
and
jnp
mov
repnz
inc
inc
xor
enter
movsl
or
adc
sub
push
sub
sub
idivb
inc
add
or
cmp
fisttps
outsl
jp
xchg
cmp
or
push
or
push
in
andb
or
test
push
push
mul
or
add
popa
jl
test
sti
push
lea
dec
cmpb
add
nop
or
cmp
jl
add
outsb
adc
ds
imul
jle
or
pusha
mov
mov
inc
clc
push
pop
jle
test
sbb
pushl
call
stos
add
outsl
mov
pop
xchg
xchg
pop
push
or
popf
mov
cmpsl
outsl
lock
jo
mov
push
mov
mov
and
add
mov
dec
mov
jle
stos
sarb
jne
imul
ret
or
out
movsl
lds
sbb
dec
mov
pop
dec
mov
cmp
add
cmp
je
and
stc
int
call
aam
les
in
notb
and
jne
pop
push
ja
shlb
js
push
lds
cmp
mov
xchg
xor
lret
xor
mov
or
cmp
or
leave
jns
xchg
jle
movsb
sbb
mov
test
cltd
cmp
sbb
test
fstps
pop
mov
dec
mov
cmp
mov
or
xor
mov
jl,pt
ret
cmpxchg
out
es
add
insl
add
add
add
add
add
push
add
add
add
add
inc
add
gs
xor
imul
add
outsl
jp
add
outsl
add
popa
add
jbe
inc
aaa
je
add
xor
add
aaa
add
add
pop
add
jbe
add
cmp
add
dec
push
pop
dec
add
add
add
add
add
add
add
ja
xor
add
add
jb
push
add
inc
je
mov
xchg
pop
lcall
out
pop
mov
negl
shr
hlt
add
lods
xor
jo
push
jo
lcall
ret
js
lcall
sub
out
sti
mov
mov
test
mov
adc
fs
sbb
cmp
inc
and
fucomi
js
sbb
mov
or
dec
dec
clc
imul
ja
pop
mov
out
enter
sbb
ljmp
testb
incl
pop
loope
or
in
jl
add
sahf
inc
or
dec
call
push
mov
out
inc
or
jmp
pop
lea
mov
mov
push
xor
daa
mov
and
cmp
les
pusha
add
in
fadds
test
cmp
popl
scas
imul
rcr
rcl
fnstcw
movsl
into
push
imul
mov
out
push
aas
pop
or
test
repz
iret
aaa
je
and
jbe
jp
js
jecxz
sub
fldcw
daa
ja
clc
mov
movsl
mov
or
popf
sarl
lea
cld
inc
lahf
stos
pushf
jbe
rorl
sub
adc
sub
xchg
out
and
adc
ror
pop
push
insb
addr16
subb
scas
mov
shrb
in
addr16
daa
lea
cmp
push
add
mov
cmpsb
jbe
cmpsb
fiaddl
mov
sbb
bound
sub
cmp
jne
es
das
cmp
jg
mov
push
outsl
bound
lea
cmp
mov
inc
add
jmp
lcall
jnp
orb
or
pop
call
push
movsb
add
outsl
aaa
mov
or
insl
jecxz
in
fwait
jl
push
mov
jmp
or
mov
mov
testb
jecxz
imul
in
mov
or
fisttpl
mov
add
and
pop
lcall
nop
ds
xor
or
fwait
dec
dec
cmp
shrb
push
inc
mov
rol
stos
nop
add
sbb
push
sub
pop
rorl
sub
or
jmp
cmp
dec
jno
xor
cmp
cmp
mov
bound
or
dec
pop
sub
scas
cmp
jge
mov
dec
stos
mov
daa
lods
mov
iret
and
fistpll
mulb
and
incb
outsl
aaa
jmp
mov
xchg
jne
das
cmp
jne
inc
xchg
add
in
and
cmp
inc
xor
jne
jmp
or
mov
and
lret
fisubs
iret
and
sbb
mov
jmp
jne
imul
xor
daa
push
mov
int3
popa
push
push
mov
jl
or
mov
push
mov
cmp
hlt
push
pop
inc
sbb
popa
dec
ss
insl
insb
aas
lret
std
loop
push
ljmp
dec
adc
jae
pop
adcl
xchg
ret
cmpsb
shr
in
xchg
mov
bound
out
push
pop
ja
sahf
jmp
dec
in
aas
pop
mov
jbe
adc
add
aas
cmp
in
divl
fwait
mov
jecxz
sub
lea
jb
scas
mov
push
pusha
mov
jne
ror
rcrb
xchg
stos
ljmp
inc
clc
mov
or
addb
jne
pop
cmp
adc
test
mov
cmp
jmp
or
lcall
in
fdivrs
mov
sub
or
jecxz
stc
cmp
movsb
jmp
xlat
adc
ja
les
jmp
fstpl
add
push
sbbl
push
loop
int
cmp
adcl
fdivl
jb
pop
cmp
clc
fbstp
jg
mov
cmp
int
mov
cmpsb
into
test
arpl
adc
mov
out
test
add
arpl
or
out
cmp
ret
add
dec
dec
out
push
xchg
testl
mov
mov
test
or
addr16
xchg
add
mov
fs
jge
mov
or
sbb
mov
rorb
and
mov
jecxz
adc
imull
sarb
xorb
outsl
test
daa
andb
cmp
or
or
clc
fldenv
jg
sub
add
inc
pop
and
cld
scas
iret
jmp
movq
mov
inc
imul
je
push
cmp
cmpsl
adc
add
jmp
mov
jl
subl
or
inc
pop
cmp
clc
mov
inc
adc
pop
sbb
test
or
stc
test
cmp
and
pop
jecxz
cmp
mov
push
arpl
popf
sahf
sbb
ret
sbb
pop
stc
push
lods
xchg
pop
mov
repnz
and
repnz
jmp
je
xor
mov
sbb
add
xor
lahf
jbe
pop
nop
es
in
imul
popa
mov
shl
rolb
mov
push
repnz
notb
add
mov
outsb
mov
inc
push
je
psubusw
jge
arpl
mov
call
push
lea
lret
xchg
movsl
add
jae
je
andb
add
jae
or
cmpsl
push
or
or
xlat
sbb
js
mov
lock
lock
cmp
ljmp
cmp
fcomp
or
test
jb
test
push
sbb
adc
push
sub
dec
or
sbb
pop
leave
cmp
or
adc
xchg
cmp
popl
pop
lock
or
movl
decl
push
jmp
jle
je
stos
push
sbb
mov
and
outsl
add
or
jmp
je
test
cwtl
inc
imul
fs
push
adc
mov
imul
push
mov
xor
mov
je
std
jb
jge
mov
mov
add
adc
adc
in
gs
push
sbb
aad
inc
xor
imul
insb
and
mov
add
nop
mov
mov
decb
lods
fs
or
lahf
gs
fs
repz
pop
in
fbstp
imul
in
imul
mov
addps
and
dec
decb
and
push
outsl
mov
adc
imul
loopne
push
push
out
or
pushf
xor
fldcw
pop
mov
leave
pop
sbbl
mov
pop
in
jno
adc
mov
xor
out
mov
mov
mov
aas
dec
pop
lahf
imul
xor
ror
js
push
jb
mov
mov
xchg
lret
scas
cli
aad
les
mov
jge
add
std
dec
jge
xchg
mov
jge
adcb
test
call
loopne
xlat
jae
push
movsl
or
repz
subl
xchg
fs
mov
adc
pop
jb
pop
imull
xchg
mov
adc
cmp
loopne
mov
js
add
jl
adc
sbb
or
imul
jmp
adc
imul
cmp
dec
setp
push
inc
mov
fldcw
pop
mov
imul
imul
cmp
inc
cmp
inc
jg
outsl
imul
or
imul
xchg
cld
pop
add
fdiv
push
sahf
cltd
aas
add
shl
dec
xor
mov
in
or
fistpl
inc
ret
jne
add
pop
jne
cmp
add
je
push
push
and
nop
outsl
jne
jp
lock
sbb
mov
hlt
xor
inc
dec
mov
xchg
sbb
mov
mov
rcrb
mov
fs
mov
jmp
cmpsl
rclb
mov
scas
pop
andl
addb
je
mov
gs
jne
repnz
mov
mov
or
sarb
adc
pop
xchg
je
test
mov
adc
repnz
jmp
aad
lahf
in
idivl
clc
dec
push
lret
test
je
add
mov
dec
mov
jmp
sub
scas
add
call
insl
lret
push
xchg
loop
in
js
gs
inc
and
imul
leave
xor
je
adc
ret
inc
jo
test
ret
pop
xchg
sbb
pop
and
mov
imul
mov
imul
test
cwtl
jmp
sub
mov
mov
push
xor
rclb
sub
and
add
rorb
push
pop
push
test
fsubrs
push
fucomip
movsl
into
push
adc
or
sti
jae
inc
addr16
scas
adc
inc
fcmovnb
dec
iret
fisubl
sbb
andl
jne
or
iret
imul
or
xlat
lods
test
jle
movb
ret
add
out
lret
push
mov
mov
or
inc
xchg
int3
addr16
push
xchg
adc
sub
hlt
enter
push
in
test
jecxz
pop
fwait
mov
aaa
repnz
xor
jl
and
jg
or
rclb
xlat
popa
pop
jl
daa
data16
cmp
test
jbe
mov
stos
inc
pop
cmp
sbbb
fstpt
inc
fbld
xchg
insb
out
fs
mov
mov
pop
test
jo
push
pop
dec
mov
inc
jg
xorl
xor
push
insb
pop
andb
shl
add
sarb
adc
fldcw
cmp
adc
rorl
push
xchg
in
or
push
fldenv
mov
push
aaa
and
mov
or
mov
ss
rcrl
es
push
fistl
or
pushl
mov
dec
jmp
mov
das
je
inc
mov
lahf
inc
dec
xchg
add
addb
mov
push
flds
test
sub
testl
mov
addl
mov
adc
arpl
mov
mov
push
add
in
call
cmp
mov
adc
inc
sahf
inc
jmp
cmp
cmp
lahf
call
lock
ficoml
mov
mov
add
andl
dec
pop
sub
pop
push
ss
cmc
fadds
xchg
sarl
cmp
mov
sub
call
xorl
out
pop
addr16
cmp
int
or
jbe
inc
cld
cmpsl
pop
jmp
das
addb
push
add
adc
cmpb
jns
inc
sub
add
clc
xor
dec
or
pushf
sub
mov
aas
fdivrp
enter
add
pop
mov
jp
xchg
sub
roll
lods
xor
out
loopne
sbb
lcall
sub
jne
xchg
dec
imul
pop
adc
ljmp
lods
ja
clc
xor
jnp
mov
dec
pop
out
lcall
mov
mov
or
cmp
lods
clc
mov
sub
popf
sti
xchg
dec
jnp
repnz
mov
mov
mov
pop
or
mov
cli
outsl
scas
sbb
push
sahf
mov
adc
arpl
mov
lahf
add
out
pop
out
adc
leave
xchg
movsb
lret
mov
test
or
pop
negl
push
outsl
sub
cwtl
data16
mov
sub
daa
adc
lret
adc
sahf
loope
lock
not
mulb
adc
mov
or
fwait
jmp
movsl
lods
push
adc
sub
pop
sbb
mov
add
sub
mov
pop
push
movsb
jo,pn
call
call
cmovns
dec
clc
xor
scas
mov
repz
mov
xlat
pop
cmp
hlt
mov
leave
movsl
push
cwtl
int3
add
jp
loope
push
pop
bnd
call
out
and
push
lds
loope
in
test
arpl
or
sarl
out
test
mov
cmpsl
scas
add
cmp
push
pop
adc
mov
movsb
mov
int
sbb
push
or
movsb
cmp
adc
xor
test
call
stos
pop
add
push
aas
add
push
lret
lods
imul
mov
push
lret
inc
cli
mov
aam
ljmp
popa
add
sbb
aaa
pop
dec
and
pop
xor
ret
je
lods
sbb
add
mov
fucomip
enter
pusha
sub
test
sti
pusha
or
dec
mov
outsl
add
cmp
xchg
hlt
addr16
xor
pop
shl
or
xor
push
mov
cmc
push
pop
stos
gs
psubb
pop
adc
mov
or
jmp
xlat
mov
and
loopne
add
in
push
call
or
xchg
xor
sub
stos
adc
or
adc
lcall
and
aas
sbb
cmp
xchg
js
lds
and
aaa
hlt
add
pop
mov
cmp
lret
or
rolb
push
lret
xchg
dec
andb
jle
pop
subb
andb
je
scas
stos
call
insl
jg
gs
imul
pop
jmp
lcall
push
or
mov
xchg
je
and
mov
fwait
adc
lea
add
test
mov
ljmp
shrb
adcl
je
jns
cmp
call
sub
xor
jae
push
rcl
into
movsb
cmp
mov
mov
scas
iret
bsr
sub
leave
fisttpll
enter
lret
and
cmp
adc
arpl
andb
jne
cmc
adc
cmp
xchg
icebp
cmp
jge
int
movb
add
enter
sub
push
rclb
lret
iret
jmp
call
pop
imul
xchg
pop
add
pop
push
call
jg
pop
call
ljmp
pop
addr16
gs
push
mov
fidivl
or
push
rcr
cli
enter
inc
out
mov
lcall
dec
outsl
ds
mov
or
mov
cmp
mov
push
sbb
cld
divl
test
push
jecxz
add
xor
add
push
xor
cwtl
or
cld
mov
rcrb
sub
xor
mov
dec
mov
mov
push
sbb
xchg
lahf
addr16
push
subl
addr16
loope
call
dec
xchg
sbb
jns
aam
icebp
andb
mov
lock
xor
mov
and
daa
int3
rclb
mov
or
jno
sbb
dec
call
sahf
dec
mov
mov
jb
push
add
notb
push
nop
mov
adc
rcll
mov
icebp
gs
daa
dec
call
fists
inc
nop
or
icebp
jne
lret
lahf
push
call
push
dec
cli
and
cmp
or
sbb
pop
add
or
push
gs
icebp
insb
gs
or
popf
movzwl
xorl
lods
lock
push
adc
xor
push
push
js
decb
fsubrs
hlt
cmpsl
cli
movsl
orl
inc
inc
mov
test
pop
movsl
lock
add
sbb
adc
mov
or
int
mov
mov
rorl
jge
out
adc
inc
sub
int
and
pop
jb
repz
push
stos
push
push
and
imul
cmp
push
dec
or
inc
cmpb
push
movsb
mov
int
mov
mov
push
int
inc
mov
popf
and
addl
lods
and
movsb
jp
cltd
in
jg
popa
lea
shr
mull
mov
dec
or
aam
push
ja
xor
stc
xchg
es
dec
and
popa
mov
xor
call
mov
pop
inc
test
call
mov
cmpsl
dec
and
movsb
and
ret
push
mov
shl
lock
sahf
cmp
pop
ljmp
out
pop
and
fiaddl
rcrl
cmp
mov
adc
cmp
mov
pop
mov
mov
js
mov
test
push
lret
in
and
lea
lock
add
je
mov
sbb
adc
and
mov
int
push
in
cmp
lret
pop
loope
push
mov
das
dec
and
or
jge
mov
jno
pop
jbe
adc
xor
shr
mov
mov
push
arpl
negb
cmp
addl
and
mov
add
mov
mov
mov
mov
xor
fnstsw
jge
mov
sbb
lock
insl
insb
add
int3
inc
movq
outsl
push
adc
rorl
adc
and
fmuls
cmp
sbb
idivl
lds
and
in
xchg
sbb
mov
and
or
mov
and
dec
rol
lea
or
ja
mov
cmp
or
inc
push
and
sbb
cmp
adc
es
ret
imul
cmp
cmp
clc
repz
les
and
or
cmp
push
mov
inc
or
or
xor
cmp
cmpsl
cli
ds
vxorps
mov
ljmp
sahf
xchg
jo
jmp
and
inc
cmp
rcll
das
cmp
push
js
lret
mov
test
cmp
xor
fidivrs
pop
gs
aaa
int3
sub
pmaddwd
loopne
or
or
mov
and
aaa
dec
cmp
xchg
cmc
enter
push
clc
dec
insl
inc
lds
pop
cmp
mov
or
mov
cmp
jne
notb
adc
adc
int
int3
push
loope
add
jmp
cld
push
cld
jnp
pop
push
mov
scas
xchg
enter
add
ret
or
hlt
movsb
enter
pop
mov
insl
ljmp
add
jno
andb
scas
cmp
or
push
adc
xchg
pop
push
cmp
stos
jmp
push
jne
sti
jecxz
pop
cmp
enter
or
push
lea
cmp
in
je
inc
mov
jo
inc
inc
stos
loop
xchg
mov
cmp
add
scas
scas
shl
nop
jecxz
in
sub
rcl
pop
and
cmpl
loop
mov
mov
add
loop
inc
jmp
adcb
movb
mov
cmp
loop
mov
and
outsb
mov
and
aam
in
leave
aam
push
sahf
stos
mov
sub
dec
outsl
lds
dec
dec
icebp
std
xchg
int3
mov
aas
call
and
lods
and
lods
int
sbb
mulb
push
je
push
cli
aad
sti
shll
icebp
lds
outsl
pop
or
xor
xor
cmp
orb
push
outsl
lods
add
inc
add
or
insl
dec
or
or
xchg
je
cwtl
dec
icebp
xor
into
jae
popf
jle
jbe
inc
loope
cmp
mov
jbe
mov
ret
dec
xor
ficoms
xor
cwtl
mov
sub
mov
mov
les
mov
pop
mov
mov
adc
pusha
ds
in
inc
push
pushf
jne
mov
call
pop
test
mov
xor
dec
sub
sub
mov
mul
jne
rorl
mov
es
jne
andl
pop
mov
mov
push
add
xorb
mov
jne
dec
setl
cmp
cmp
push
sub
jns
sub
jne
pop
aas
je
sarb
cmp
dec
insb
cmp
sbb
movsb
mov
arpl
incb
sbb
sti
push
jmp
mov
outsl
sub
popa
mov
int3
fisubrs
aaa
test
stos
sub
add
push
test
jp
mov
in
addl
mov
and
jae
fldt
repnz
loope
repz
xchg
jnp
sub
or
push
sub
push
ja
fs
add
pusha
pop
roll
inc
xlat
shlb
mov
divl
or
pop
sti
sbb
sbb
push
pop
nop
inc
add
dec
ffreep
pop
pop
mov
icebp
cwtl
inc
push
add
push
popl
ds
addr16
mov
popl
rol
and
fnstsw
rcl
jo
mov
pop
rol
mov
rorl
shrl
cmpsl
push
jle
push
cmp
mov
jmp
fcomps
jne
push
movsl
and
test
dec
mov
repz
in
orl
sbb
mov
pop
sbb
inc
dec
test
std
or
out
repz
sbb
popa
jecxz
stc
lcall
cwtl
loop
pushf
test
pop
shlb
int3
stos
mov
xor
imulb
into
push
movsl
out
jnp
rorb
out
in
sbb
loopne
out
mov
shr
movsl
arpl
mov
mov
movsl
nop
or
jp
push
lcall
mov
xor
lds
nop
inc
mov
adc
inc
inc
and
loop
sbb
xor
mov
lret
jns
insl
add
jmp
sbb
inc
or
mov
rorl
or
gs
lods
mov
leave
jnp
shrb
je
xchg
dec
outsb
adc
gs
in
and
cmp
dec
cld
dec
movsl
dec
inc
cld
repnz
add
aaa
sbb
lret
bound
fisubl
adc
xor
test
das
jg
pop
cli
sbb
dec
jecxz
loope
aad
aam
sarl
mov
bound
leave
fidivl
rcrl
outsl
sbb
push
mov
stc
adc
iret
pop
sarb
jo
xor
dec
jp
mov
fcmovnb
call
jbe
aaa
cmpsb
cmp
or
jb
push
scas
or
push
and
mov
stc
add
xor
jl
and
outsl
pusha
ret
lea
jmp
and
aaa
pushf
xor
ss
add
aaa
jmp
cwtl
add
test
mov
jle
and
jge
or
loope
jnp
or
pop
lahf
sbb
dec
loop
dec
sbb
mov
mov
xchg
mov
mov
add
pop
out
lgs
mov
add
pop
imul
inc
sar
aaa
testb
adc
popa
pop
inc
cmp
stos
xchg
inc
arpl
push
mov
imul
mov
dec
mov
add
mov
sbb
loop
inc
push
int
xchg
ret
nop
jmp
loop
xor
sti
adc
adc
movsl
sbb
or
or
sbb
addr16
imul
wbinvd
nop
inc
push
sub
rcrb
push
outsl
js
cmp
dec
call
dec
fcompl
xor
jmp
pop
leave
pop
cmp
shlb
repnz
icebp
dec
and
outsl
rolb
pushl
lea
outsb
sbb
ret
cld
mov
rorl
pop
pop
or
add
pusha
inc
cmp
mov
pusha
sbb
fcoms
loop
or
shrb
cmc
mov
or
shlb
je
daa
xchg
pusha
mov
aam
daa
push
lods
sbb
push
and
test
mov
add
add
mov
jbe
push
push
xor
and
cmp
xchg
or
add
iret
xchg
out
cmp
es
add
cmp
outsb
mov
adc
xchg
mov
outsb
add
and
lret
push
mov
test
enter
dec
call
dec
movsl
pop
rolb
out
mov
cmp
rorb
push
jne
add
jbe
icebp
outsb
dec
lahf
dec
cmp
sub
jle
pop
push
adc
dec
bound
mov
mov
mov
iret
cmp
cmp
dec
nop
rclb
jno
or
addb
cmp
jae
add
adc
xor
mov
loope
xor
ret
outsl
js
pusha
shlb
and
mov
cli
ret
popf
sbb
push
mov
and
outsl
dec
push
push
pop
rcr
and
arpl
jbe
push
pusha
addr16
iret
pusha
sbb
outsb
filds
pcmpgtb
mov
adc
mov
roll
lea
movsl
hlt
xchg
adc
in
mov
adc
ljmp
sahf
fcomp
jp
test
data16
adc
jae
lret
jmp
adc
and
mov
fcompl
and
stos
nop
lret
pop
out
add
jle
sti
xlat
out
call
sub
add
into
xchg
lds
mov
enter
arpl
jecxz
push
cmp
and
notl
xchg
pop
add
ja
and
in
int3
add
xlat
pop
je
add
outsl
xor
push
sub
flds
adc
cmp
jmp
cmp
inc
aad
mov
and
push
repnz
sbb
and
aaa
jecxz
loop
mov
test
shll
insb
sub
fwait
imul
push
push
push
push
das
push
push
call
mov
jmp
out
cmp
mov
or
push
cmp
add
inc
jge
jae
rcll
popf
outsl
repz
jmp
hlt
iret
aam
adc
mov
mov
or
mov
jns
xor
lahf
adc
lcall
sub
push
xchg
test
repz
das
hlt
call
cli
ds
and
pop
xchg
ret
mov
lahf
pop
call
mov
in
add
andb
fidivl
mov
xchg
orb
out
scas
push
fmul
call
xchg
mov
adc
xor
mov
jecxz
mov
mov
mov
cld
pop
or
lock
das
ret
adc
ret
mov
sahf
dec
lods
enter
push
jle
es
add
loop
wbinvd
test
and
xor
ret
pop
ret
pusha
mov
adc
fcompl
scas
fiaddl
push
call
mov
loopne
sub
clc
push
adc
dec
arpl
js
fistpll
push
shlb
push
out
leave
mov
mov
ds
and
jge
pop
fnstenv
cmpb
iret
js
pop
pop
inc
iret
add
mov
or
or
adc
leave
incl
push
or
pop
sbb
je
push
les
mov
fsubl
jb
inc
fwait
outsl
or
repz
fs
ret
movsl
call
mov
mov
repnz
mov
push
fsincos
es
call
add
or
stc
cmp
movsl
sub
add
jl
fidivrl
idivb
call
mov
js
cwtl
je
sub
mov
repnz
inc
adc
push
cmpsb
push
and
push
aad
or
call
mov
lret
sbb
enter
cmc
cmp
mov
mov
rclb
dec
insb
push
outsb
or
adc
xchg
mov
sti
imul
pop
aam
jns
call
jnp
ljmp
xor
lcall
data16
inc
je
jae
xor
add
add
push
push
add
add
push
add
add
add
insb
dec
inc
imul
add
add
inc
add
add
add
xor
dec
dec
add
jno
jns
add
add
push
add
add
add
add
inc
add
add
js
add
cmp
push
je
add
add
js
add
add
add
add
add
push
xor
inc
add
jo
add
xor
push
mov
in
in
in
test
add
or
ret
xchg
mov
movsb
xorb
fdivs
fists
dec
mov
or
das
nop
insb
cmp
xor
cld
xor
mov
lahf
add
add
add
stos
scas
fdivs
test
out
hlt
jb
jle
or
int3
pop
and
pop
xchg
int
xchg
cwtl
incb
xor
mov
loope
lcall
call
hlt
pop
addb
nop
add
repnz
enter
stc
roll
mov
rol
scas
scas
imul
arpl
push
test
sahf
sti
shl
test
xchg
mov
sub
loopne
clc
aad
add
arpl
mov
jns
icebp
gs
in
dec
push
and
jecxz
sbb
out
repz
mov
lahf
push
cmc
test
push
hlt
jle
push
out
pop
adc
or
es
clc
cmp
or
loopne
out
adc
add
xor
inc
sbb
jl
mov
sbb
mov
cmp
mov
push
jmp
pand
rcll
imull
dec
or
shll
icebp
jge
std
lds
push
cmpsl
jge
dec
in
and
dec
or
in
into
mov
sbb
sub
xor
cli
add
stos
jmp
push
xor
xchg
jne
lahf
int3
das
out
xor
cmp
cmp
fcomip
jmp
mov
xchg
mov
and
pop
push
mov
dec
push
lods
and
pushf
loope
in
ds
loopne
cmp
or
add
pop
bound
shr
pop
or
mov
icebp
push
mov
addr16
mov
jb
sahf
call
jne
js
decl
sub
cmp
je
xchg
fbstp
mov
test
lret
push
or
dec
ss
adc
int3
stos
add
sbb
add
jne
pop
mov
je
xlat
mov
and
fimull
fstpt
and
mov
call
shll
push
sbb
mov
pop
add
lods
fstp
ds
mov
cld
lea
adc
mov
mov
mov
sub
aad
cltd
or
mov
xchg
cltd
ret
ficoml
enter
mov
pop
dec
cmp
fcmovnb
ja
cwtl
bnd
jp
xchg
imul
iret
imul
push
cmpl
aas
dec
pop
test
mov
pop
mov
lahf
push
das
gs
pop
pop
pop
pop
cmp
adc
insl
push
iret
orb
add
movsl
test
pop
xchg
int3
addr16
mov
cmp
into
pop
cltd
xchg
adc
lock
mov
movsb
daa
cmp
sahf
xor
mov
int3
fnstsw
popf
lahf
mov
mov
adc
adc
jnp
push
cmc
xchg
mov
mov
insl
mov
xchg
fildll
ficoml
jnp
ja
jle
sub
jns
add
push
xchg
and
mov
or
rcrl
mov
cmp
test
scas
fimull
lcall
xchg
jb
daa
shr
or
orb
dec
ljmp
and
pusha
enter
lahf
mov
jne
adc
rorb
fistl
add
pop
pop
push
mov
mov
cmp
shll
cmpsb
adc
pop
inc
rcrb
mov
adc
jp
aam
in
test
mov
unpcklps
cmp
jle
faddl
xchg
outsl
shll
insb
rcrl
dec
bound
push
push
movsb
scas
cmp
jne
fldcw
mov
call
mov
mov
call
add
push
dec
ja
filds
push
mov
loopne
sbb
insl
or
sub
dec
xchg
jp
call
push
subb
gs
add
loop
sbb
pop
gs
sbb
sbb
pop
and
xchg
iret
stc
add
mov
stos
mov
movsl
aas
pop
pop
and
cmp
rclb
push
jae
add
lret
jl
pop
push
or
cli
and
call
mov
sub
mov
jo
mov
imulb
pusha
jbe
push
pop
sbb
lods
mov
inc
mov
cmp
push
mov
xchg
pushf
add
inc
leave
dec
scas
arpl
pop
iret
negl
gs
adc
dec
or
outsl
jmp
cmpsl
adc
outsl
negb
rcll
push
dec
lahf
movsb
push
sub
add
cld
jne
movsl
test
or
pop
pop
or
sbb
sbb
xor
or
stos
movsl
lods
push
aam
addr16
fbld
or
ss
add
or
je
daa
test
in
sbb
sub
xchg
mov
jl
jae
or
pop
shlb
push
mov
call
sti
outsl
push
push
cmpsl
pop
int3
es
out
pop
int
ljmp
mov
das
cmpsl
test
xorl
mov
add
stos
cwtl
push
jno
leave
push
add
sbb
xor
lods
dec
inc
inc
andl
or
push
aad
push
test
iret
pop
stos
mov
mov
inc
jl
outsl
ja
cmp
mov
out
outsl
dec
xor
sub
sub
sub
jg
push
movsl
push
std
xchg
xor
push
pop
cmp
fists
adc
outsl
dec
push
cmp
or
and
mov
mov
xor
push
or
mov
outsb
stos
push
lds
and
iret
lret
adc
adc
pop
jae
mov
and
sbb
jno
lock
dec
inc
push
or
xchg
push
mov
lea
shlb
inc
insl
or
pop
repnz
aad
cmpl
mov
outsb
jmp
mov
push
shrb
aas
in
jmp
sub
cmp
cmp
gs
xchg
or
in
js
in
int3
cld
leave
ret
pop
xchg
add
shll
stos
xor
jnp
jmp
dec
pop
mov
or
dec
imul
hlt
mov
adc
push
push
mov
nop
out
jmp
hlt
cmp
ud1
mov
cmp
push
mov
fistpl
fsubl
mov
or
in
and
outsb
clc
or
movsl
add
outsl
cwtl
push
cmp
and
xchg
mov
mov
mov
mov
pop
out
xor
and
jl
mov
mov
mov
cmp
sbb
inc
in
call
js
hlt
xor
cmp
jp
in
and
mov
imul
and
xchg
and
sti
stos
outsb
xor
cmp
cltd
cmp
or
cmp
mov
pop
emms
sahf
cmp
and
out
and
je
outsl
lahf
or
mov
test
mov
jns
pop
xchg
cmp
movl
ficompl
pop
push
cmpsb
iret
lods
and
cmp
out
xor
aas
or
mov
mov
and
push
or
mov
mov
and
or
mov
adc
dec
xor
and
cmp
pusha
stos
jge
and
jns
sub
stos
outsb
int3
or
mov
outsl
mov
insb
mov
sbb
jg
mov
bsf
daa
mov
sbb
mov
test
cmp
adc
mov
push
or
arpl
imul
lock
movsl
mov
test
mov
mov
movups
mov
aas
clc
xor
and
movsl
mov
test
dec
cmp
inc
or
es
mov
pop
in
mov
jo
mov
inc
or
je
into
jg
push
daa
test
xor
and
cmp
sti
stc
xor
je
scas
nop
mov
shl
das
push
inc
pushf
sub
and
pop
cmovns
enter
fsubrs
cmp
loopne
in
push
mov
mov
lahf
fsubs
xchg
sbb
pop
int3
cmpsl
and
mov
cmp
test
and
ss
push
cmp
sarl
xchg
lock
or
mov
mov
js
bound
call
xor
pop
mov
lcall
dec
add
cld
clc
inc
add
fs
stc
jmp
call
inc
pop
fcom
jbe
and
add
xchg
dec
cld
xlat
mov
lea
lock
push
or
adc
xor
or
xor
flds
cmp
push
bound
push
outsl
mov
imul
leave
or
inc
jae
fmuls
mov
add
fildl
ja
ret
or
scas
dec
xor
pusha
jne
or
push
sarl
pop
jmp
fcomps
mov
sti
cmp
je
out
or
lret
stos
dec
xchg
movsl
xor
sub
mov
jne
push
cld
pop
mov
ficomps
xchg
movsb
mov
sbb
pop
dec
jno
clc
int3
out
test
or
fnstcw
cmp
lret
mov
data16
lock
xchg
out
dec
je
mov
orps
jmp
popa
jge
xor
push
adcb
call
hlt
inc
lds
or
push
push
xor
mov
and
mov
dec
nop
push
pop
jge
or
dec
adc
int
sub
fcmovnu
shrl
jno
adc
mov
pop
movsl
adc
cmp
cld
stos
push
into
jmp
adc
fnsave
pop
aaa
mov
jmp
adc
pop
repz
xchg
outsl
push
outsl
pop
mov
gs
call
outsl
adc
push
adc
ljmp
inc
jb
daa
in
add
inc
xor
xor
test
add
cmp
jnp
sbb
ss
aam
xor
shll
pop
aam
test
sarl
sub
jmp
adc
es
lock
and
or
fsubp
in
mov
push
push
or
add
pop
cmp
dec
inc
adc
jl
and
cli
inc
sbb
or
mov
cmc
xchg
imul
push
xchg
aam
nop
sti
sbb
add
jmp
popf
add
push
outsb
fcoml
inc
adc
lret
mov
jmp
insl
inc
add
movsl
and
fbld
out
sti
or
add
or
add
fisubl
mov
or
loop
fxam
jmp
in
test
fdivr
hlt
dec
xor
jmp
lock
mov
jecxz
sbb
push
leave
jne
shrl
or
jp
push
shll
dec
or
fisttps
inc
insb
push
fidivrl
push
imul
insb
jmp
jbe
out
insl
sbb
jge
cs
movsl
aad
or
loopne
mov
into
lcall
pop
popl
dec
lods
add
shll
int
lds
sub
test
mov
sub
test
sub
ljmp
repnz
add
daa
mov
and
lods
push
frstor
cwtl
pusha
or
mov
push
arpl
orl
lods
testl
sbb
jns
adc
pusha
cwtl
push
dec
jbe
test
adc
dec
sbb
jo
ljmp
jnp
or
ror
cmp
out
jo,pt
push
dec
jne
jp
test
add
aaa
nop
outsl
adc
sub
fsubl
cmp
sar
cmp
cmc
adc
shlb
addb
dec
aas
call
push
or
sarb
push
call
cmp
jl
leave
call
cmp
lods
mov
adc
cmp
inc
xor
loopne
cs
stos
es
fstl
or
aas
pop
xchg
dec
lods
rorb
sbb
pop
dec
pop
mov
pop
cli
xchg
in
mov
loopne
call
in
add
mov
loopne
mov
pop
push
sub
xchg
add
sahf
and
mov
dec
cld
mov
fisubs
dec
add
jae
pop
cs
pop
or
push
ss
mov
pop
mov
scas
sbb
cmp
mov
cld
outsl
pop
mov
mov
in
mov
std
data16
jl
js
adcl
pop
test
pop
push
andb
arpl
and
pop
xchg
cli
adc
movsl
rcrb
cli
sbb
pop
lcall
push
insb
cld
pop
xor
lcall
or
mov
mov
mov
jne
loope
mov
cwtl
push
scas
sub
mov
xor
mov
cli
sub
mov
mov
inc
or
sti
inc
inc
movsb
xor
popf
bound
add
pop
cld
sub
rcrl
inc
mov
test
push
fs
jge
inc
xorb
daa
sub
aas
fidivl
sub
and
mov
data16
inc
mov
je
push
xor
fsubrl
sub
jmp
cmpsb
push
rcrl
repnz
or
gs
pop
test
rcll
pop
mov
mov
jmp
push
add
push
jmp
inc
push
push
dec
xchg
pop
jmp
mov
dec
or
dec
inc
fistpl
mov
cmp
je
xor
fldenv
mov
fwait
movsb
push
jne
cmp
sub
adc
push
mov
dec
stos
pop
ret
xor
hlt
jl
in
loopne
pop
cltd
imul
test
pop
or
aam
or
mov
pop
jnp
cmp
movsb
mov
std
inc
loopne
pop
call
mov
jg
rcll
filds
adc
mov
imul
jge
jl
rcl
cmpsl
js
add
fildl
iret
movsb
pop
xor
mov
repz
xchg
and
fwait
clc
imul
popa
cmp
clc
rorl
push
jge
imul
or
push
add
dec
pop
mov
fcoml
push
add
xchg
clc
test
add
hlt
sbb
loope
repz
jl
pusha
adc
mov
pushl
or
negl
or
pop
test
and
or
push
shrl
popf
enter
test
scas
cmpsl
jmp
mov
adc
jge
push
mov
jne
push
adc
hlt
pop
inc
popf
mov
sbb
inc
cltd
lcall
or
les
sbbl
call
pop
xchg
nop
mov
mov
mov
add
div
test
imul
cmp
pusha
ja
sahf
cli
sti
and
push
dec
push
dec
clc
add
inc
add
cmpsl
inc
jg
mov
leave
fsubl
bound
dec
fs
push
shufps
inc
push
mov
and
cmpsb
jmp
pop
jnp
fwait
or
cmp
lods
das
add
lahf
and
sub
into
pop
push
push
mov
outsl
mov
pop
xor
xorb
fildll
imul
sub
insb
je
data16
loop
js
je
repnz
and
cltd
call
adc
or
pushf
mov
inc
dec
sbb
xchg
movsl
ja
mov
arpl
int3
fwait
out
pop
adc
dec
inc
inc
gs
or
lcall
or
add
lcall
icebp
inc
fnstenv
mov
push
lcall
mov
sarl
in
push
mov
add
pushf
loope
fbstp
dec
cmp
cmp
mov
jo
pop
mov
push
dec
pop
jg
sub
jmp
call
mov
pop
push
ja
ja
push
jo
mov
ficompl
cmp
sbb
add
dec
push
pop
push
mov
jbe
movsl
pop
cs
mov
sarl
inc
sbb
mov
cmp
xchg
fildll
push
inc
sbb
std
arpl
cli
leave
lcall
or
push
or
out
loopne
enter
adc
or
inc
imul
push
cmp
cwtl
jmp
repnz
inc
xchg
push
aas
faddl
es
xor
or
imul
dec
jae
xchg
rcrb
and
push
push
dec
cmc
aas
jge
jnp
dec
jae
ljmp
mov
push
cmp
shrb
js
imul
jnp
and
push
ficoml
cmp
and
addr16
movb
insl
mov
popa
mull
push
adcl
call
out
xlat
aas
jo
add
xor
inc
mov
xchg
mov
scas
ds
add
cld
or
lahf
dec
pop
mov
mov
cltd
xchg
mov
add
mov
push
cmp
iret
xchg
test
loope
aaa
rcrl
jnp
push
pop
pop
or
loope
ja
roll
mov
jb
inc
les
pop
ja
sub
ret
test
dec
mov
push
inc
lret
inc
lahf
push
inc
or
jo
mov
jcxz
sub
push
call
mov
ds
cmp
loope
jb
push
cmp
push
in
arpl
jne
jo
out
call
mov
push
ljmp
mov
in
in
jns
xchg
push
push
mov
adc
fidivrl
inc
mov
je
cmp
lahf
aaa
dec
cmc
or
cltd
clc
xchg
outsb
add
mov
les
mov
sbb
ret
mov
sbb
fs
cmp
fidivs
and
xor
jl
dec
and
lcall
das
outsl
or
imul
lock
and
mov
xchg
pop
xchg
jno
call
xchg
mov
cmp
test
mov
inc
imul
lahf
or
mov
sahf
in
cmp
shlb
mov
xchg
test
movsb
mov
pushf
call
cmp
in
adc
cmovg
pop
push
lcall
popf
jbe
xchg
sahf
hlt
dec
sbb
push
add
mov
iret
jp
xchg
inc
jl
imul
outsb
pop
fwait
cli
or
movsb
xchg
lods
cld
xchg
cmp
dec
xchg
add
xchg
jmp
aad
in
cltd
popa
hlt
addl
fistl
mov
dec
enter
addr16
adc
inc
je
popa
lahf
or
int3
dec
cmpl
adc
or
clc
pop
xchg
das
cmp
jb
add
jne
in
call
inc
mov
add
cmpl
inc
mov
mov
lock
rorl
jecxz
dec
lea
sbb
mov
sbb
cmp
cwtl
adc
outsl
call
cmc
dec
fisubl
popf
adc
sbb
mov
adc
or
xchg
fs
shlb
js
xorl
aas
cmp
xor
fstl
push
mov
xor
outsl
bound
aas
sbb
hlt
dec
cmpb
pop
fbstp
je
mov
lods
mov
mov
pushf
popf
dec
pop
lret
xchg
addb
cmp
dec
and
inc
pop
shll
inc
in
call
mov
add
push
inc
pop
mov
xor
lock
or
sub
add
mov
pop
dec
xchg
pop
std
jmp
inc
popl
lods
mov
call
cmp
pop
enter
pop
jne
cmp
mov
push
repz
jl
idivb
sub
push
gs
es
into
sbb
inc
or
jb
jle
sub
xor
mov
mov
pop
iret
iret
push
dec
repnz
add
sbb
pop
call
cmp
fnstsw
mov
and
fnsave
test
xchg
jge
cmc
int3
popa
mov
or
pop
mov
sub
cmp
and
data16
jp
xchg
xorl
dec
mov
xor
xchg
mov
test
mov
or
inc
mov
data16
test
fiadds
lods
lret
add
dec
int3
pushf
push
cld
mov
pop
shrb
mov
and
mov
gs
or
dec
adc
mulb
and
mov
cwtl
cmp
andb
in
jne
mov
xchg
int3
scas
cmpb
cmpl
jecxz
xchg
test
hlt
into
push
lahf
mov
jnp
cmp
sbb
cmpsb
outsl
jno
dec
scas
jmp
fmuls
adc
add
rclb
sbb
lahf
loop
ss
call
rcr
and
bound
xorl
mov
outsb
out
jo
data16
scas
data16
movsl
jg
mov
sti
mov
push
iret
ja
sti
dec
ret
jbe
and
push
and
dec
push
shll
rorl
out
dec
lods
xchg
push
popa
arpl
push
cmp
int
pop
pop
xchg
fldl
imul
inc
mov
movsl
fimuls
dec
sub
dec
mov
inc
sti
jl
ss
cli
arpl
ret
bound
cmpsl
out
push
lahf
or
nop
cmp
outsl
push
in
pop
pop
xchg
dec
jbe
mov
pushf
rorl
mov
sub
lock
lret
test
pushf
cltd
sub
sub
mov
fucomip
mov
out
and
add
add
mov
je
add
retw
out
or
push
pop
pop
add
imul
jle
popf
iret
cmp
or
inc
cmp
mov
xchg
and
movsb
inc
dec
arpl
lods
cmp
inc
jns
sbbl
fwait
or
aad
or
out
repnz
out
insb
call
in
mov
sub
xchg
aam
pop
sbb
cmp
mov
xchg
popa
jg
or
xchg
mov
sub
outsb
leave
jl
out
push
mov
sahf
inc
pop
lcall
xchg
and
cmp
dec
pop
lss
scas
or
mov
xchg
lock
add
aas
movsl
loop
leave
ret
adc
hlt
test
shll
mov
popa
cmp
addr16
cmpsl
and
push
movsb
fmuls
or
mov
xchg
or
mov
popf
cmp
gs
ret
icebp
test
or
inc
jmp
test
push
sbb
jl
clc
lock
or
xchg
and
or
test
mov
or
and
mov
push
mov
push
jmp
jnp
push
call
mov
jmp
jle
sub
pop
call
cmpl
repz
push
negb
jbe
call
lahf
fcomp
cmpsl
push
sti
inc
mov
popa
test
enter
or
fucomp
inc
into
in
lods
stos
jg
inc
inc
xchg
dec
jbe
je
enter
jge
jb
or
sbb
lahf
add
dec
test
enter
enter
pop
aam
aad
mov
lcall
test
jne
popa
ret
fiaddl
std
jno
addr16
sub
pop
adc
xor
push
shrb
xchg
mov
jmp
fisttps
mov
sub
sub
push
sub
jge
jg
and
sub
jno
call
adcb
sbb
ja
dec
pop
ret
stos
and
sar
dec
add
fs
push
pop
dec
cmp
aad
xlat
clc
sub
sub
sbb
lods
mov
or
lds
adc
aad
gs
ds
lahf
stos
jb
inc
in
clc
sub
je
sub
jo
aam
pop
mov
jge
adc
lds
pop
adc
jmp
insl
dec
cmp
fnstenv
jno,pt
pop
cltd
mov
rcll
pop
sbbl
clc
loope
cmp
cmpsl
loope
test
outsb
push
dec
aaa
jae
cmp
adc
pop
ja
dec
or
adc
xor
sahf
insb
pop
js
dec
inc
cltd
jp
mov
dec
xchg
xchg
test
imul
call
insb
lcall
inc
pop
xor
push
shl
and
mov
call
adc
mov
cmpxchg
out
mov
cmp
ja
popa
adcb
mov
sbb
pop
cmp
xchg
adc
orb
pop
cmp
mov
sbb
and
out
push
cmpl
repnz
mov
inc
cmp
jle
pushf
add
adc
lahf
aad
inc
mov
cmpsb
inc
push
sbb
sbb
jne
or
bound
in
es
call
out
lds
add
lahf
or
ljmp
adc
jne
mov
mov
fstpl
das
adc
jle
jne
jb
imul
fucomp
xchg
rorb
mov
movsl
sub
call
push
mov
aad
mov
push
scas
call
mov
xor
mov
push
hlt
xor
aas
sbb
rorl
or
mov
jb
mov
add
push
clc
aas
xchg
inc
mov
mov
pop
inc
xchg
cmp
cmp
mov
dec
fs
in
dec
leave
rcrb
es
rolb
cltd
pop
cmp
js
or
cmc
sti
lods
mov
xor
and
cmc
jle
and
inc
jno
jle
add
popa
es
ds
mov
jmp
outsb
dec
aas
je
sub
shll
cmpsb
mov
lock
or
sbb
aas
leave
push
mov
cltd
ret
faddl
mov
mov
cmp
or
pop
pop
aas
cld
or
add
sub
fsubrl
push
mov
call
jle
inc
or
dec
add
xchg
pop
mov
ss
or
mov
jp
push
mov
mov
ljmp
cmp
loop
cltd
sbb
mov
dec
sub
aad
lds
inc
mov
mov
nop
fsubrl
add
std
and
dec
cmp
add
mov
mov
popf
jp
xlat
lret
cwtl
push
ret
out
ds
cli
int
adc
roll
mov
adc
jmp
shll
call
push
movsb
or
jmp
mov
mov
leave
dec
lods
loop
fs
adc
pop
sbb
jmp
scas
jle
or
je
iret
test
cmp
aad
popa
and
add
data16
pop
mov
mov
pop
jmp
insb
xchg
sbb
mov
call
cwtl
out
and
dec
adc
decl
loopne
loopne
push
ret
shr
cmp
cmp
rorl
pop
jp
pop
imul
test
inc
push
iret
xchg
xchg
adc
dec
test
ret
xor
int
add
sbb
cli
or
xor
cmp
jmp
js
sbb
push
cmp
icebp
add
movsl
cmp
dec
sbb
dec
or
mov
push
sbb
jp
scas
pop
cld
xor
push
je
xchg
mov
movl
inc
mov
sti
sub
xchg
cmpsb
outsb
adc
popa
pop
lock
add
push
jb
push
or
movsl
call
es
xor
jb
xor
or
xchg
jne
sbb
add
push
jb
imul
cmpsl
or
cmp
das
pop
xchg
dec
xchg
sub
sbb
mov
mov
push
popa
fsubp
or
lock
or
jle
push
inc
jns
aam
push
sbb
dec
call
or
pop
add
jb
sarl
mov
mov
lret
inc
jns,pt
lahf
in
xchg
cmp
mov
pop
cmp
jne
and
test
call
pop
pop
dec
push
das
push
outsl
mov
dec
das
push
call
and
push
mov
or
movsb
mov
pop
movl
xchg
mov
add
imul
push
add
add
jb
add
add
add
insb
addr16
add
add
add
add
insb
add
add
jae
add
add
arpl
add
add
inc
add
add
imul
add
jbe
cmp
add
dec
add
add
xor
add
add
dec
data16
cmp
dec
xor
jns
add
insb
ja
add
push
bound
add
addr16
mov
mov
mov
das
sbb
mov
bswap
std
mov
push
dec
int3
test
pop
gs
mov
cmp
xor
test
cmp
sbb
mulb
dec
add
jns
stos
and
sbb
int
cmpb
iret
stc
cmp
insl
adc
push
stos
adc
push
aam
mov
mov
mov
test
xor
bound
mov
mov
cmp
js
movsl
jo
aad
cmp
push
in
push
dec
mov
dec
cmp
jne
ds
cltd
invd
cmpsl
pop
lahf
pop
jmp
enter
cmc
mov
lahf
add
mov
mov
lods
daa
adc
or
xchg
sub
dec
lock
and
mov
jl
xor
xchg
cmp
test
outsl
add
pop
test
test
insl
es
cmc
cwtl
test
mov
add
aas
dec
adc
mov
test
ja
push
out
and
and
jmp
cmpsl
les
mov
mov
int
arpl
mov
dec
loopne
mov
inc
dec
cmp
ret
jne
test
mov
test
fcoml
add
dec
jg
and
and
push
inc
sub
aas
pusha
dec
popa
inc
fists
mov
xor
imul
mov
repz
mov
in
filds
into
and
movzbl
mov
sbb
and
or
addr16
std
mov
or
mov
or
bound
inc
sub
and
pop
or
mov
sbb
aaa
cmp
and
jmp
cmp
outsl
xor
fsubs
push
enter
xchg
dec
les
xor
imul
pop
cmp
ret
sbb
and
test
fdivl
sub
aaa
or
insb
shl
fsubl
adc
fcomip
mov
cmp
gs
js
push
add
and
mov
xlat
inc
mov
cwtl
addr16
dec
std
mov
or
sub
std
gs
jl
xor
ss
or
rorl
cmpsl
and
cmp
pop
mov
mov
mov
ja
push
jle
imul
rcrb
jg
or
dec
jl
cmp
lock
jno
sbb
xchg
add
or
pop
loope
add
jecxz
cld
jmp
xor
pop
lret
mov
mov
test
and
sbb
testb
or
fs
cmpsl
out
mov
clc
xchg
inc
addr16
mov
push
cmp
nop
test
xor
sub
bound
push
jno
mov
aas
js
jbe
gs
push
out
in
pop
mov
jmp
fmul
mov
inc
mov
bound
sahf
fs
pushf
or
mov
lret
out
ret
mov
or
pop
out
jno
inc
movsl
push
imul
cwtl
add
or
cmp
shlb
data16
paddb
sub
jmp
imul
js
mov
out
pop
icebp
call
imul
jp
inc
add
daa
pop
jne
lcall
jbe
push
add
cmp
mov
push
leave
sti
xor
lahf
leave
outsb
mov
subl
push
add
cmp
test
xchg
out
pop
push
movsb
pop
xor
xor
mov
pushf
arpl
popf
add
mov
cmp
mov
cld
scas
dec
push
dec
and
insl
xchg
xor
insb
mov
jnp
stos
mov
jmp
mov
cmpsl
pop
imul
or
cltd
cmp
cmp
push
lods
cmp
push
test
or
cmp
ds
jmp
aad
leave
andb
xor
movsl
mov
cmp
cmp
icebp
cmp
cmp
jmp
daa
icebp
add
add
mov
cmp
or
cmp
mov
push
insl
lret
movsb
jno
pop
cli
or
add
out
and
ss
cmp
ljmp
pop
inc
and
and
ss
lods
mov
cmp
mov
test
jmp
pop
punpckhbw
and
es
adc
or
dec
inc
adc
sub
cmp
jl
das
ds
sbb
cmp
outsl
cmp
scas
jmp
mov
rorb
ds
adc
out
shlb
outsl
sub
movsw
sbb
in
dec
imul
iret
jo
imul
xchg
stc
loop
mov
jno
inc
xor
xchg
jns
insl
sub
push
insl
or
dec
call
inc
insl
sub
jmp
or
xor
mov
sbb
mov
mov
outsl
jns
sbb
outsl
aaa
xchg
clc
mov
outsl
jnp
test
dec
adc
call
cmp
push
push
xor
mov
jge
xor
outsl
out
shlb
mov
clc
adc
nop
and
out
adc
lahf
sub
cmp
test
or
cmc
pushf
mov
lcall
mov
loopne
add
inc
or
out
cmp
jne
jo
pop
push
mov
pushf
sub
and
adc
imul
jno
out
xor
and
mov
loope
add
cmp
addr16
dec
and
jl
das
or
lcall
js
and
mov
je
adc
and
mov
lds
mov
fcompl
call
mov
sub
and
mov
xor
or
and
fsubr
sbb
fwait
jb
mov
add
adc
popf
cmc
mov
jl
cmp
lds
add
xchg
minps
sarb
popa
jne
jae
jmp
mov
mov
lock
or
aas
loope
or
cltd
adc
adc
cmp
mov
dec
pop
je
jnp
mov
cmp
jmp
test
push
in
or
shrb
aaa
mov
inc
and
xor
test
jecxz
cmpb
dec
mov
test
cmp
addr16
test
cmp
ss
add
mov
aas
xchg
jecxz
aad
sub
ja
jecxz
jmp
jecxz
loope
subb
mov
mov
mov
mov
cmp
adc
cmp
loop
aad
imul
inc
test
xor
mov
cmp
fwait
loop
mov
in
sbb
imulb
gs
imul
shrb
mov
jno
loopne
das
cmpb
or
addb
and
add
pop
or
adc
les
movsl
leave
xor
loope
sbb
int3
mov
stos
call
test
in
jg
sub
or
in
jno
sub
pop
mov
xchg
pop
adc
and
jmp
sub
gs
jmp
data16
repz
and
or
add
xlat
jp
push
mov
or
rcr
cmp
xor
push
inc
push
fstpt
mov
pop
sbb
mov
mov
popa
and
in
ret
dec
lods
pop
cmp
cltd
in
dec
mov
gs
fists
xor
test
cmp
and
adc
add
pop
cmp
fistps
push
loop
jge
add
test
shlb
insl
cmp
mov
in
test
outsl
shrl
imul
dec
inc
mov
aas
xor
mov
jge
cmp
test
insb
push
in
cmp
jge
test
sbb
push
daa
in
rorb
mov
imul
adc
movsl
popf
inc
mov
test
mov
mov
add
adc
sbb
lahf
push
scas
sbb
push
push
fstps
mov
test
jmp
cmp
jnp
movsb
clc
ret
fdivr
push
xchg
call
mov
mov
out
in
push
cltd
in
movd
fucom
and
dec
rcrl
cmp
fmul
icebp
mov
test
mov
pusha
fisttpll
lahf
xor
gs
data16
mov
paddusb
mov
enter
cmp
lea
mov
ds
mov
dec
jne
mov
idiv
sbb
jnp
shlb
jl
cmp
add
test
fistpl
cmp
repz
mov
and
movsl
hlt
frstor
stc
adc
or
push
cmp
addl
cltd
in
jae
mov
call
jmp
adc
les
mov
outsb
ror
nop
cmp
sbb
adc
js
movsl
subl
adc
gs
jl
pop
mov
aas
int3
pusha
sub
in
or
mov
inc
dec
movsb
xchg
cmpsl
aas
pop
outsb
mov
aam
mov
inc
fcoml
push
cwtl
icebp
pop
cmpl
and
movsb
scas
or
lds
sbbl
test
popa
call
or
and
xor
push
mov
and
mov
mov
mov
test
fsubs
cmpsl
jo
cmp
outsb
sbb
adc
addb
jmp
or
xor
orl
test
xlat
add
in
test
outsl
insl
lahf
xor
js
mov
mov
lahf
dec
lock
mov
fstpt
call
xchg
les
lods
cmp
sbb
mov
or
pop
outsl
mov
or
aad
mov
scas
adc
mov
xchg
and
inc
push
add
test
lods
cmp
and
xor
mov
inc
and
sbb
cmp
test
dec
nop
xchg
pop
call
ds
adcl
fadd
push
scas
mov
pop
js
jno
xor
inc
jbe
mov
cmp
sbb
mov
mov
or
mov
jnp
or
sub
clc
aad
pop
mov
xchg
adc
movsl
add
xor
cmpsl
fsubr
sbb
push
mov
in
iret
hlt
mov
and
inc
mov
enter
add
push
xor
fs
adc
dec
mov
mov
push
jb
cmp
xchg
add
add
and
ds
mov
mov
shlb
mov
pop
and
mov
and
gs
imul
das
cli
mov
xor
mov
and
mov
push
cmp
sbb
lock
das
lret
vmread
shrb
jp
pop
mov
cmp
xor
inc
and
pushf
sub
fwait
cmp
imul
movsb
cs
cltd
das
les
stos
imul
fisubl
and
cmp
xchg
das
jb
into
imul
imul
xchg
sub
cld
or
out
pop
cld
push
jnp
cmp
mov
ret
or
je
fs
movsb
push
aas
inc
or
cli
lods
in
mov
imul
stos
or
movd
and
hlt
bound
in
dec
mov
je
and
imul
loopne
lock
mov
jl
mov
lods
sub
mov
add
gs
mov
nop
dec
xor
inc
gs
mov
loopne
movsb
mov
mov
or
cmp
sub
dec
inc
inc
cmp
movhps
jae
adc
add
pop
xchg
pop
dec
and
or
fisttpll
or
arpl
and
dec
push
enter
mov
dec
sub
data16
adcb
lahf
ss
and
test
cmp
in
and
pop
push
pusha
das
xor
test
dec
pop
or
mov
push
popf
cmp
cmp
daa
push
cld
xor
add
aaa
idivb
mov
stos
cmp
outsb
dec
jne
mov
cld
add
out
mov
lods
mov
mov
push
add
xchg
sub
arpl
mov
push
movsl
xor
sti
call
sub
mov
cmp
call
in
rcrb
shr
arpl
insb
and
sbb
sahf
test
repnz
call
imul
lcall
mov
fwait
mov
ss
jb
xor
add
xchg
adc
xor
adc
or
xor
mov
adc
push
mov
aas
lock
mov
or
lret
lods
insb
cmp
jne
xchg
adc
mov
pop
mov
out
stc
inc
aas
sub
sti
outsl
or
add
dec
cmp
rorb
ret
sub
outsb
clc
rol
lea
cmp
lods
add
jecxz
fldl
push
mov
das
test
cmp
cli
xor
lcall
int
insl
imul
jae
add
gs
pop
sub
add
lods
or
mov
add
fdivr
scas
mov
mov
imul
insb
mov
ret
mov
add
cmp
lods
dec
int
stc
mov
pop
mov
arpl
pop
test
popf
sub
lods
xor
push
scas
sub
cld
gs
or
sbb
mov
sub
xchg
mov
adc
push
push
cmp
mov
sub
cmp
and
lahf
push
mov
stos
mov
lea
xchg
sbb
clc
in
and
shr
lea
pop
xor
jno
cmc
dec
pop
mov
add
sbb
ss
mov
sub
andl
pop
cmp
ja
dec
sahf
pop
mov
jecxz
push
push
dec
xor
and
add
aam
push
imul
adc
adc
dec
add
pop
leave
xchg
or
pusha
sbb
add
pop
xchg
loopne
or
mov
add
jle
cmc
lcall
xchg
sahf
xor
mov
adc
xor
mov
insl
dec
dec
mov
out
or
jge
push
aaa
cwtl
add
adc
mov
mov
stos
rcr
mov
cmp
lods
sti
loope
push
add
push
xlat
insl
xor
mov
in
dec
stos
mov
or
mov
add
mov
inc
add
das
pop
adc
cld
and
cli
jmp
pop
stc
and
lods
popa
sub
sti
insb
sub
test
into
inc
sub
stos
add
cmp
dec
incl
push
mov
das
add
lods
push
cmp
or
mov
andb
mov
add
jmp
fcmovnu
sub
mov
cmpsl
sub
inc
and
shll
cmp
xchg
iret
movsl
cmpsl
and
call
pushf
jle
scas
cmp
dec
je
add
and
fs
cltd
add
sbb
add
cmp
xor
sub
pop
dec
ret
add
orl
icebp
xchg
aad
fnstsw
add
lock
add
and
xchg
cs
push
push
add
jecxz
ret
push
add
mov
and
fiaddl
xchg
lret
decl
cmpl
add
push
popf
cli
xchg
fistpll
xor
sub
pop
xor
fstl
iret
test
ret
mov
repz
xor
iret
mov
add
add
out
adc
pop
push
enter
add
icebp
push
jg
xor
std
popf
sbb
inc
lods
xadd
adc
mov
xchg
adc
lcall
shr
or
rcll
cvtpi2ps
dec
add
rcr
add
leave
js
sbbb
pop
movsl
test
es
rcpps
popa
fcoml
jne
arpl
and
lds
and
push
fidivrl
std
xchg
popa
adc
sub
mov
sub
loop
nop
adc
ljmp
cmpsb
ds
repnz
xchg
mul
insl
add
add
cld
lahf
fs
pop
cmp
filds
mov
mov
jne
cmp
mov
aas
ret
fwait
rorl
fdivr
ja
push
cmp
dec
je
sbbb
mov
add
sbb
les
andb
jb
inc
mov
insl
test
sub
ret
ja
mov
jg
orl
lret
orb
lods
dec
xchg
inc
out
test
out
test
sbbb
sub
sub
cmp
sub
shlb
test
sbb
cltd
mov
cmp
nop
sub
jle
or
xorl
lods
push
data16
xor
or
mov
mov
insl
cmp
gs
iret
jmp
test
sbb
sub
mov
xchg
insb
paddb
push
psubsb
or
xchg
dec
jbe
xchg
adc
mov
faddp
das
push
xchg
sahf
pop
jp
add
enter
das
add
push
mov
mov
in
or
cmp
cmp
sahf
add
mov
jno
add
sbb
adc
xlat
test
sbb
mull
cmp
fcmovnu
and
push
ret
mov
stos
fcmovnu
pop
pop
jle
cli
add
fldcw
xor
loopne
lahf
pop
xchg
fimuls
xlat
and
fbld
int
add
dec
sub
mov
orb
icebp
ret
xor
out
or
rolb
fwait
scas
xor
inc
int3
add
adc
mov
mov
sbb
mov
dec
pop
mov
mov
sbb
fnstenv
xchg
aaa
or
add
lods
daa
jb
int
fdivs
lea
and
dec
mov
adc
add
in
jmp
inc
sbb
or
jbe
lcall
out
add
insl
sub
add
sti
jp
xlat
clc
enter
cmp
repz
push
dec
mov
sbb
push
mov
cmp
and
and
lea
add
mov
rcrb
add
jge
or
sub
int3
sub
outsl
clc
jb
adc
out
test
and
mov
or
int
add
adc
ror
fcom
sub
mov
out
lret
fildl
and
mov
cld
lea
fcoms
pop
daa
repnz
jns
out
pop
cmp
loopne
popa
pop
shr
jnp
xor
enter
add
cmp
push
sbb
fstpt
loopne
add
cwtl
mov
adc
add
lret
jb
push
pop
cmp
bound
das
pop
mov
pop
in
sub
cmp
loope
and
pop
cmp
jmp
sub
aad
pop
push
mov
lods
lods
push
dec
push
frstor
rcrl
and
lods
mov
test
sbb
fsubs
lcall
pop
cmc
test
sub
jl
add
js
shlb
push
xlat
arpl
add
push
xchg
add
bnd
xchg
inc
shrl
add
not
sub
add
fcompl
add
shrb
sub
cmc
inc
daa
push
mov
scas
shll
mov
pop
xchg
pop
ret
push
adc
ljmp
pop
mov
dec
bnd
mov
cmp
lods
mov
cmp
lock
or
int3
insb
jo,pn
bnd
sub
je
add
hlt
cwtl
mov
xchg
jns
test
int
push
fiaddl
dec
mov
in
jnp
cmp
icebp
add
std
adc
and
push
nop
push
lds
fcoml
adc
add
adc
sarl
add
jl
push
aad
pop
add
loopne
gs
je
pop
add
outsl
in
sbb
icebp
fwait
str
repnz
add
cltd
lods
movsl
add
add
lock
test
addr16
arpl
je
cltd
out
lea
jmp
in
insb
cmp
sub
dec
dec
scas
sbb
cmc
xchg
or
xlat
jbe
sbb
push
dec
cmc
inc
flds
or
push
popf
lahf
dec
mov
mov
xchg
sub
clc
pop
stos
sub
in
popf
xor
push
pop
sti
add
and
pop
xchg
xchg
insb
mov
mov
test
adc
mov
loopne
sbb
cmp
jo
and
out
mov
sub
lods
pop
add
outsl
xchg
dec
or
negl
add
xchg
sar
and
lods
push
inc
xchg
and
cmc
mov
inc
cmp
push
out
divl
cmp
mov
pop
rclb
je
testb
lods
dec
jo
jae
pushf
xchg
cmc
sub
push
fildl
or
sbb
inc
daa
mov
dec
fnstenv
in
add
and
loope
and
add
inc
aam
fidivrl
xchg
mov
and
push
int
sub
jmp
jp
lods
xor
in
lea
and
sub
aad
call
jno
rcrl
sar
jbe
jmp
rclb
or
pop
mov
mov
sahf
aas
gs
push
test
add
xchg
daa
fcomp
popa
aas
repnz
movsb
push
xchg
stos
adc
inc
and
into
xchg
and
frstor
push
pop
aad
movsb
xorl
aad
repnz
mov
stos
add
inc
fnstsw
ret
lea
loopne
scas
pop
push
add
add
xchg
call
inc
or
mov
fsubr
shll
mov
mov
repnz
mov
xor
add
pop
pop
push
and
arpl
bound
lea
stc
cmp
popf
das
lret
add
fsts
add
push
add
mov
ds
cli
mov
daa
daa
test
pop
testb
jo
in
call
popf
arpl
jle
cmp
xchg
arpl
or
lods
push
shr
in
hlt
cld
cmp
lahf
sbb
fwait
sbb
pop
sub
add
iret
das
fnstsw
aad
and
push
icebp
inc
shrl
push
push
sub
and
mov
imul
outsl
xor
sub
daa
insl
push
xchg
cmp
testb
xchg
repnz
xlat
fwait
lea
in
cmpsl
add
loopne
or
pushf
jns
mov
in
daa
mov
lods
in
sub
fxch
pop
movsl
and
lods
pusha
cld
imul
movl
jno
or
rolb
imul
add
pop
cmp
inc
and
cmp
loopne
test
icebp
inc
push
cmp
scas
xchg
mov
add
jmp
adcl
aam
xchg
add
sub
in
and
out
lea
pop
loop
mov
test
cwtl
sbbl
and
outsl
push
fucomp
xor
sub
push
sub
rcl
mov
add
clc
gs
jns
cmc
and
in
out
outsb
int3
add
ja,pt
mov
imul
sub
inc
lahf
or
lods
insl
mov
pop
push
aad
sbb
sub
dec
jle
shrl
das
xchg
add
call
lds
xor
cmp
loop
imull
and
arpl
inc
push
stos
popl
mov
sbb
adc
in
fcmovu
add
lds
cs
bnd
xor
mov
into
pusha
arpl
faddl
xor
jnp
lods
icebp
frstor
cmc
dec
pop
adc
inc
and
test
in
push
cld
pushf
add
pop
jnp
add
mov
mov
and
loop
sbb
insl
imul
repz
and
pop
or
cs
or
adc
jne
push
push
inc
es
pusha
sti
inc
mov
lea
cmp
repz
inc
xor
pop
cmp
push
mov
out
nop
adc
stc
jb
sahf
popa
insl
test
cmovno
xchg
dec
imul
xor
push
fs
psubusb
cmp
cwtl
jg
add
daa
pop
sbb
shrb
nop
xchg
fmull
sarl
stos
es
andl
sti
add
xor
dec
xor
and
xor
test
add
inc
push
repz
jno
add
scas
mov
fnstcw
or
into
add
mov
mov
add
adc
addr16
ja
jne
mov
fs
aaa
unpckhps
push
push
push
shll
dec
outsl
sbb
lods
les
mov
cmpsb
inc
scas
push
adc
movsl
add
jo
xchg
add
and
lret
test
insl
int
call
or
rcl
mov
leave
jo
sbb
in
mov
or
ret
add
icebp
mov
dec
lea
dec
in
je
or
pop
sub
push
cs
mov
cld
dec
aas
adc
mov
leave
xchg
je
xor
and
orb
out
xlat
movsl
push
enter
scas
mov
jns
lds
push
xchg
sbb
in
mov
lods
test
test
aaa
sub
jbe
cwtl
lcall
push
cmp
jb
add
frstor
jno
xor
insl
sbb
or
scas
adc
and
rclb
scas
fisubl
mov
cli
sbb
dec
push
mov
mov
test
cmp
int
lcall
bnd
ror
testb
sahf
adc
mov
push
xchg
sub
repnz
add
sub
fstl
adc
add
movsl
clc
sub
or
loopne
lods
dec
iret
lea
aam
int3
pop
bound
jge
push
cmc
jl
lea
cmp
and
movsl
push
movsl
mov
or
insb
add
outsl
pop
mov
add
adc
push
xchg
push
sbb
in
aad
inc
test
mov
add
pop
test
ljmp
sub
stos
adc
mov
mov
popa
movsl
fs
sbbb
add
push
dec
les
jns
push
add
bound
insb
rcrb
ret
push
adc
add
sub
stc
loop
vpshaw
addl
push
push
leave
jne
aas
das
cltd
fidivrs
push
lods
mov
jecxz
xchg
test
cmp
push
lret
int3
cmpsl
pop
hlt
mov
jge
cltd
sarl
adc
insb
out
movsl
adc
mov
sub
or
imul
cmp
push
or
jge
shll
pop
add
fwait
pop
xor
pop
add
arpl
jmp
idivl
push
fs
pop
jle
loopne
je
std
shrl
je
mov
xor
push
lret
fs
dec
das
or
inc
lret
sahf
jge
xchg
ret
push
lds
and
dec
stos
cltd
dec
lea
add
add
into
arpl
fmuls
or
pop
xchg
outsb
scas
in
fwait
jb
mov
daa
lods
adc
out
int3
int
imul
and
sub
mov
dec
add
xchg
sub
fnstenv
mov
das
sub
mov
push
pop
cmp
push
push
cmpsb
push
lods
push
addl
sub
fstpt
xchg
int
jbe
adc
and
ret
mov
adc
imul
mov
pop
jne
iret
sub
stos
cmp
dec
sub
int3
push
or
frstor
lret
mov
mov
ficoml
jne
xor
and
jo
pushf
pushl
testb
gs
xor
xor
add
push
jb
add
ja
pop
add
gs
add
add
add
dec
add
add
pop
dec
js
add
dec
push
pop
inc
inc
push
add
add
addr16
xor
add
inc
aaa
add
add
push
add
add
arpl
add
jbe
inc
jbe
dec
add
push
ja
js
cmp
add
arpl
add
add
add
jb
add
add
add
add
push
add
add
jne
imul
add
cmp
sbb
jg
adc
iret
xchg
push
ds
call
push
fcoms
andl
mov
lret
lods
movl
mov
rcl
call
shrb
xor
jl
sub
leave
mov
mov
iretw
cs
cltd
lahf
aas
xor
data16
sub
inc
popf
gs
xchg
movaps
inc
dec
dec
jmp
aas
mov
mov
push
mov
jge
cmc
pop
mov
cmp
data16
lret
mov
adc
daa
jp
lret
xor
dec
or
or
enter
jns
ret
pop
nop
imul
lods
icebp
lds
or
movsl
xlat
sub
jg
mov
cmp
sub
add
fdivrs
pop
push
fs
or
or
rorl
sahf
sbb
mov
cmp
jbe
mov
push
or
and
in
xchg
inc
je
jno
lahf
sub
inc
push
mov
mov
inc
rcrl
sub
mov
call
jge
push
mov
sbb
xchg
test
call
or
or
add
push
push
call
rorl
ds
loopne
push
xchg
or
lea
inc
cmp
test
push
xor
dec
add
mov
gs
mov
push
sar
or
outsl
pop
sub
ret
jmp
shlb
xchg
dec
pop
call
call
pop
mov
sbb
enter
mov
outsl
or
fisubs
test
arpl
or
aaa
mov
aas
icebp
shrl
sbb
xchg
rcrl
add
int3
lcall
call
sbb
aas
jg
call
test
xchg
cwtl
push
mov
insb
adc
pop
xchg
jp
cltd
dec
and
add
add
inc
movsb
xor
in
sub
popa
je
jo
imul
jo
add
sar
jmp
mov
mov
lahf
jmp
push
les
mov
outsl
clc
pop
or
je
ret
cltd
call
xchg
xchg
lret
stc
gs
cltd
mov
sub
and
mov
jne
push
adc
or
cmpsb
mov
adc
cmpsl
pop
cmp
imul
xlat
or
les
test
mov
gs
call
ja
jecxz
or
lcall
pop
cmp
call
dec
movsb
movsl
insl
sub
jb
addr16
das
jmp
mov
sbb
cmp
test
or
adc
mov
or
pop
add
push
pop
jo
aad
out
cmp
lods
mov
pop
jle
or
out
xchg
or
fs
lret
jle
insb
jo
adc
pop
dec
inc
push
fwait
push
movsl
leave
dec
int
iret
int3
jl
test
xchg
rclb
and
adc
adc
cmp
and
push
jmp
pop
sbb
jae
cmp
jl
fsubp
add
fnstcw
sbb
and
jmp
jmp
or
hlt
mov
mov
mov
xchg
das
je
popf
es
das
inc
adc
push
rcrb
xchg
sbb
dec
dec
ds
je
mov
pop
mov
movsb
xchg
sub
sub
shlb
jmp
lock
mov
mul
xchg
sub
mov
adc
push
mov
jecxz
cwtl
push
cmpsl
outsl
jg
das
adc
mov
mov
mov
fsin
pop
cld
movsl
push
in
and
pop
push
movsb
subb
ja
cli
insl
movsb
xor
push
or
imul
test
jno
xchg
fbstp
or
loope
lret
in
cmp
xchg
addr16
cmc
jmp
push
mov
add
inc
test
jl
dec
in
mov
orb
outsl
or
add
and
and
add
test
addb
pop
das
dec
pop
pop
mov
ret
mov
sub
fistpll
scas
sub
or
sub
pop
pop
add
enter
or
cmpsl
in
sbb
pop
add
inc
sub
pop
fucomi
xchg
mov
call
pop
push
push
mov
or
xchg
cmp
into
lcall
mov
lahf
icebp
jl
in
out
and
xchg
push
test
hlt
jmp
lret
fimull
mov
jo
inc
ds
arpl
add
data16
ds
adc
xor
cwtl
jmp
insl
mov
push
sahf
sub
or
je
jecxz
fdivrs
jns
testb
add
jmp
mov
aas
mov
movsl
add
add
out
out
leave
jge
outsl
in
xchg
jle
mov
adc
xor
pop
imul
xchg
xor
xchg
fldcw
shr
cld
xchg
pop
hlt
dec
mov
das
add
jge
call
xchg
loop
push
jns
dec
mov
icebp
loope
or
int
jmp
insl
jmp
mov
es
pop
jne
jge
or
cmc
in
cmpsl
gs
jmp
fdivrl
cmp
dec
dec
adc
mov
dec
push
call
sub
mov
sub
mov
jg
outsl
call
sbb
aam
mov
test
in
jne
insb
sub
cmp
adc
or
iret
jmp
mov
cvtpi2ps
push
clc
subps
outsb
sti
push
pop
mov
inc
out
dec
xchg
pop
xor
call
mov
push
into
pop
lods
inc
adc
lods
xchg
fwait
xor
xchg
into
cmpsl
jae
adc
test
pop
lret
mov
inc
sbb
icebp
mov
inc
or
daa
push
add
sbb
xlat
xchg
pop
or
stc
xchg
xchg
pop
xor
adc
int
ja
or
jno
inc
adc
mov
dec
pop
out
dec
pop
ret
xchg
xor
sbb
cmpsb
push
pop
adc
int
pop
sub
sub
xchg
and
mov
std
or
iret
add
jg
xor
enter
cmp
xchg
idivb
xchg
out
bound
call
cld
mov
or
or
mov
ficompl
xor
push
pop
jl
dec
dec
mov
test
scas
pop
sub
mov
sub
bound
adc
pop
mov
dec
leave
cmpsl
sbb
fldl
nop
jae
jge
add
imul
mov
push
inc
aaa
nop
cmp
sbb
add
mov
push
cwtl
jb
push
mov
or
jge
push
lea
mov
and
or
mov
call
aad
fadds
push
in
mov
adc
xor
cmp
mov
repnz
or
aad
mov
sbb
aam
push
fcoml
sbb
or
leave
sti
jae
jmp
mov
fdivrs
lret
adc
es
je
clc
sub
imul
mov
mov
das
call
sbb
pop
mov
dec
inc
pop
mov
cmp
lea
aas
mov
ret
test
cmpsl
fcmovnbe
or
arpl
je
adc
movsb
jmp
rcrb
add
mov
stos
repz
sub
jle
cmp
push
adc
lods
loopne
movb
or
add
push
call
aad
cs
lret
sar
ficompl
sub
mov
pop
popa
mov
out
and
jno
cltd
sbb
or
add
sbb
or
mov
mov
add
or
repnz
sub
rorb
call
xor
mov
jmp
lds
sub
pop
pop
repnz
mov
fidivs
cmp
cld
dec
test
push
push
hlt
cmp
ret
ljmp
addr16
push
in
cwtl
jecxz
data16
pop
bnd
jbe
mov
inc
aas
and
xchg
ja
xchg
push
add
jns
je
adc
inc
cmp
or
dec
repz
or
and
in
insb
addr16
dec
daa
outsl
inc
idivb
push
adc
cmp
xchg
cmp
cmp
jge
sub
dec
sbb
out
inc
aas
pop
andl
dec
or
push
and
insb
mov
add
mov
sub
insl
cmp
jne
in
or
push
ret
push
enter
test
jle
adc
outsl
dec
inc
cmp
cmp
pop
add
jae
mov
jge
mov
push
add
repz
pop
jp
mov
sub
push
push
xchg
xlat
imul
rcll
push
push
xlat
stos
sbb
rolb
in
aam
lahf
mov
jg
mov
adc
ljmp
mov
test
push
adc
movsl
mov
adc
pop
aas
inc
or
bnd
cmp
sub
sub
cmp
rolb
sub
nop
push
aaa
jg
jge
jg
dec
push
shlb
je
inc
add
repz
jb
push
mov
and
test
sub
pop
add
add
cmp
dec
cmpsl
jle
fmuls
aaa
push
rol
out
cmp
iret
cmp
pop
fs
xchg
sub
orl
gs
faddl
mov
psubusw
cmp
cli
int3
stos
push
xchg
cli
in
push
mov
cmp
add
adc
aas
shl
push
test
mov
ret
aaa
jmp
mov
cmc
mov
mov
inc
popa
test
pcmpeqb
mov
mov
lea
sub
jbe
add
imul
in
push
mov
sar
sti
gs
ss
dec
push
movsb
add
pop
pop
mov
dec
add
or
or
imul
rol
jmp
or
add
js
jbe
mov
mov
push
mov
sub
lock
add
outsb
or
xor
repnz
outsb
daa
jne
sbb
xchg
sbb
and
add
adc
imul
daa
aas
in
or
mov
lret
pop
xchg
repz
in
push
add
cmp
popa
insb
mov
cmp
mov
mov
aam
pushf
in
and
movsl
xchg
jno
fsub
lods
dec
fmuls
xor
jmp
imul
sahf
imul
xor
loop
fbld
bound
dec
cmp
arpl
adc
jmp
movsl
loopne
push
add
fbstp
push
or
pop
fsts
stos
mov
or
ja
push
dec
add
dec
jbe
call
lock
cmp
es
shrl
jp
or
mov
psubb
fistl
sub
bound
push
cmc
and
jl
fsubl
xchg
mov
flds
push
lock
pop
pop
lock
daa
or
pop
fsts
addb
push
jns
push
nop
jnp
leave
push
jbe
ret
or
xchg
pop
packuswb
iret
inc
cmpsb
ficoms
cmpsb
and
xchg
lcall
cmp
pop
lea
sub
call
sub
stos
rorb
mov
and
cmpsb
bnd
cmp
mov
popa
cmp
xor
or
das
nop
push
into
mov
add
jp
aam
push
jae
ja
lret
movl
lcall
dec
sbb
call
mov
xor
push
or
sub
jbe
mov
inc
and
pop
stc
faddl
out
movsl
aam
and
or
pop
jp
mull
aam
cmpsb
icebp
movsl
aam
sarb
in
outsb
mov
inc
loop
xchg
add
pop
movsl
je
imul
sbb
jo
push
shufps
stos
cltd
in
pop
sbb
dec
or
insb
sbb
repz
iret
mov
push
mov
cmp
sbb
sbb
sub
mov
cwtl
xlat
mov
add
adc
int
repz
popa
push
in
rcrb
sbb
aad
rolb
test
js
sbb
push
pop
outsl
scas
imul
or
je
or
xor
icebp
pop
cmp
je
incl
xchg
xchg
jg
xor
test
push
cmpl
jecxz
arpl
push
mov
adc
cltd
mov
jo
dec
outsb
out
jl
pushf
imul
adc
mov
mov
call
xor
or
jge
mov
xor
out
sbb
inc
jne
push
mov
shl
mov
mov
mov
repnz
jle
clc
xor
scas
pop
xchg
mov
mov
or
sarb
insl
xchg
testl
sar
jecxz
sub
subb
xchg
psrad
mov
mov
iret
mov
aas
jb
bound
js
dec
in
mov
jp
ud0
inc
je
aas
sbb
or
sbb
mov
mov
repnz
and
xor
aas
xchg
or
hlt
or
je
lea
push
imull
xor
call
push
movsb
aam
aam
cmp
cmpsb
call
cmpb
sbb
imul
mov
inc
lret
and
cmc
lock
fsubr
add
mov
enter
andnps
outsb
sub
or
or
es
sti
push
pop
mov
jns
in
sub
or
icebp
outsl
sub
imul
sub
xchg
fwait
addr16
in
push
cmp
pusha
movsb
pop
imul
inc
dec
add
lock
jge
or
test
jge
mov
and
cmp
or
xchg
xchg
xlat
lock
fsubs
scas
add
push
push
inc
les
subl
sahf
jmp
inc
push
pop
sti
jmp
sbb
cmp
shll
loop
loope
test
adc
je
incl
push
push
and
out
mov
mov
adc
les
inc
push
dec
adc
arpl
lds
lahf
aam
jmp
push
push
mov
push
mov
xchg
pop
sub
in
faddl
push
mov
mov
jae
data16
cmp
inc
stos
movsl
jl
iret
stos
sbb
dec
and
push
rcll
inc
and
pop
push
movsb
or
out
ja
or
push
pop
or
mov
test
fnstsw
cmpsl
pop
aad
or
aaa
pop
jo
popf
mov
mov
jne
rolb
push
mov
mov
rcr
call
inc
xchg
lret
pop
sbb
aam
mov
aas
xor
fisttpl
retw
jmp
push
call
jl
mov
mov
inc
jb
dec
aas
je
xchg
ljmp
xchg
mov
clc
push
aas
sbb
into
mov
jnp
movb
xchg
dec
dec
add
mov
pop
inc
sti
aas
push
pop
xchg
iret
ret
push
fs
jno
push
add
ss
xchg
jp
fstpl
and
jb
push
mov
and
stc
xchg
fidivrl
xchg
push
sub
aam
scas
push
xchg
xchg
fmuls
sbb
inc
mov
xlat
add
ficoms
jns
cmc
xchg
aad
cltd
out
addr16
jb
xor
test
das
es
call
inc
mov
pop
aas
lock
popl
jbe
rorb
mov
pop
mov
dec
popf
jne
lea
jb
arpl
cmp
in
cmp
filds
or
mov
xchg
xchg
add
fdiv
pop
out
imul
sub
push
imul
push
ljmp
aad
pop
popf
jmp
rcrl
iret
jp
pop
inc
xlat
enter
pop
or
pusha
inc
ljmp
hlt
ja
mov
stc
cltd
dec
inc
sbb
push
push
ret
popa
ds
call
jns
leave
cli
xorb
cltd
in
int
mov
nop
out
stc
shl
adc
and
xchg
xchg
jae
jg
and
push
aad
es
mov
push
call
andl
pop
test
ljmp
aam
imul
sbb
rorb
sbb
push
adc
pop
sbb
movl
mov
pop
mov
in
scas
mov
xor
ja
jbe
es
dec
sbbl
xchg
jmp
in
cmp
cmp
pop
adc
aas
or
push
inc
dec
jno
out
daa
sarl
or
scas
aas
call
inc
hlt
loope
js
mov
mov
push
shrl
aad
dec
inc
rolb
js
lcall
shl
sti
sub
enter
mov
pop
es
push
cmp
jne,pt
mov
push
int3
adc
xchg
scas
pop
jl
push
dec
rolb
dec
aam
adc
lcall
xor
sbb
popa
fsubl
sbb
daa
call
ret
xor
inc
clc
add
jbe
gs
clc
andl
loopne
fmulp
pushf
dec
mul
push
dec
add
pop
mov
pop
adc
je
shrl
movsb
xchg
pop
mov
je
out
aad
sub
adc
inc
rorl
or
shll
mov
push
push
pop
ljmp
or
loope
or
push
mov
push
mov
orb
mov
das
jae
or
pop
repz
jg
enter
inc
stc
mov
or
pop
mov
sub
cmpsl
sti
push
mov
mov
mov
mov
movsb
xchg
shrd
scas
dec
enter
push
push
shll
inc
rcll
mov
and
sub
and
xor
addl
adc
xchg
nop
pause
shrl
subl
push
cmp
xchg
mov
mov
clc
xor
mov
jbe
incb
out
add
sbb
rclb
mov
cmp
push
pop
cmpl
adc
add
js
sub
and
add
cli
xchg
jno
outsl
and
jle
pop
in
pop
es
aaa
call
mov
movsb
movsl
mov
pop
push
test
movsb
stos
cmp
sub
xor
mov
xchg
push
das
sub
and
lcall
test
jbe
cmp
or
mov
pusha
cli
scas
call
in
incb
pop
mov
mov
push
cwtl
hlt
and
in
mov
push
jg
xchg
sar
adc
push
call
jp
jo
leave
or
enter
in
subb
mov
into
inc
push
popa
or
movsb
into
xor
cmp
dec
mov
repz
dec
call
nop
mov
and
pop
call
imul
pop
into
repz
fidivrl
cmp
sub
stos
add
and
cmp
inc
mov
in
idivl
sbb
gs
fimull
mov
mov
mov
mov
and
clc
jno
mov
or
fmul
outsl
loopne
jp
jle
mov
and
push
je
iret
mov
testb
sar
lret
mov
arpl
enter
ret
pop
inc
push
sbbb
mov
add
push
pop
pop
call
daa
push
cld
pop
arpl
mov
inc
into
sbb
inc
call
stc
or
or
in
insl
cltd
cld
addr16
cmpsl
dec
shl
add
pop
outsl
insl
jnp
test
mov
clc
jb
xchg
fwait
pop
mov
dec
inc
push
dec
push
dec
jb
push
sub
rorb
aam
call
cwtl
lds
adc
mov
mov
push
push
pop
stc
mov
test
jl
add
mov
pop
add
dec
mov
mov
je
xchg
or
cmp
inc
iret
into
mov
xchg
xchg
dec
xchg
jo
out
mov
add
daa
lcall
arpl
sub
ja
nop
std
mov
xor
dec
test
fprem1
hlt
mov
sarb
mov
cmp
ret
xchg
not
jne
cmp
mov
and
roll
call
mov
scas
dec
xchg
movsl
and
xor
sub
rcrb
pop
cmpsw
inc
add
outsl
jmp
push
scas
mov
call
jge
es
pop
adc
call
inc
mov
mov
cmc
push
das
scas
call
imul
sub
cmp
je
es
add
dec
shll
sbb
sbb
jge
or
je
xchg
adc
call
pop
imul
rorl
inc
fcom
call
cs
dec
test
std
orl
bound
add
jge
and
js
mov
stos
and
cmp
call
fnstenv
dec
add
xchg
mov
movsb
mov
push
mov
pop
adc
popf
stc
je
dec
push
mov
jle
insl
xor
sub
cmp
jbe
cmpl
mov
outsb
ja
push
adc
into
dec
add
mov
xor
and
push
inc
or
loop
cs
or
call
pop
xor
jne
or
mov
or
dec
pop
aad
mov
xor
xor
push
push
inc
hlt
mov
and
adc
xor
jae
jnp
dec
and
dec
push
aas
sub
icebp
fsts
outsl
iret
call
or
jnp
mov
loopne
mov
dec
or
shll
shll
test
testl
adc
xchg
jb
push
inc
dec
jecxz
push
xchg
and
lret
dec
push
in
or
cmp
cmp
outsl
jmp
mov
adc
xor
jmp
call
pop
out
push
dec
dec
es
sbb
or
sub
push
lock
push
shlb
dec
xor
inc
andb
jmp
mov
add
mov
fsubrs
pop
movsb
inc
or
or
lret
mov
inc
xor
enter
test
pop
xchg
shr
sbb
imul
xor
fnstsw
mov
add
arpl
and
in
fwait
lock
jae
jp
mov
fsubl
and
xor
testl
jmp
pop
in
out
sbb
testl
imul
scas
call
lea
mov
inc
fidivrl
pop
push
push
mov
pop
insb
pop
cmp
clc
jne
call
clc
cmp
and
jle
jp
fnstcw
movsb
cmp
sub
mov
lods
push
xchg
movsb
adc
pop
push
out
in
mov
imulb
mov
pop
add
pop
data16
or
pop
imul
or
aaa
jmp
in
dec
push
sub
pop
or
loope
aas
fsubs
je
outsl
fnstenv
pop
call
adc
xchg
dec
adc
cmp
dec
icebp
pop
mov
or
repnz
xor
push
mov
stc
aad
cld
bound
add
sub
je
outsb
addr16
imul
sahf
xchg
pushf
inc
cmp
jl
jmp
nop
ljmp
or
outsb
repnz
imul
lods
adc
sub
sub
xchg
cld
jae
or
popf
jp
cmpsb
in
dec
in
jb
or
std
roll
mov
outsb
in
out
pop
add
aaa
iret
add
imul
sub
pop
or
pop
jl
out
mov
wbinvd
add
sbb
xchg
rcrb
mov
sbb
lea
jle
jnp
push
jns
or
and
popl
and
and
add
mov
push
negl
mov
daa
inc
movb
cmp
rorl
fldenv
imul
pop
lcall
push
or
pop
je
lcall
jge
daa
push
pop
push
xor
cld
mov
jl
and
in
sbb
cmpsb
out
enter
xchg
addr16
call
xchg
call
ret
fstp
sti
cmp
shll
lcall
addr16
mov
adc
out
cmp
outsl
mov
jp
enter
or
push
pushf
js
pop
iret
enter
mov
adc
jecxz
test
test
jnp
or
inc
jb
fistps
xchg
test
or
stc
or
in
iret
cmpsl
ja
inc
enter
xchg
outsl
or
xlat
pop
mov
cld
pushf
and
push
fldt
adc
leave
or
sti
scas
scas
adc
jb
inc
mov
push
es
cmp
pop
aam
jg
shlb
push
in
dec
cmp
shl
dec
fwait
mov
fcoms
mov
daa
add
push
imul
movsb
sbb
mov
push
fistpll
aas
andl
movsl
push
or
in
bound
mov
out
add
push
pop
pop
repnz
mov
insl
enter
jbe
mov
gs
mov
jmp
xchg
out
outsl
lods
popa
fwait
lock
mov
es
arpl
push
mov
movsb
std
push
mov
negb
pop
push
inc
sbb
in
call
dec
pop
or
loop
leave
xor
add
dec
jb
inc
cmp
jl
iret
mov
pop
pcmpeqw
andl
mov
stc
out
sbb
dec
xor
nop
call
lods
inc
add
mov
testl
sahf
lea
aad
arpl
pop
adc
jmp
imul
or
rorb
loop
push
es
rorl
je
cld
cmc
cmpb
jne
push
out
rcrl
xchg
in
push
jl
nop
inc
testl
pop
and
in
call
jg
movsb
into
call
jecxz
fimull
dec
clc
mov
push
outsb
test
push
jg
jecxz
jmp
jmp
es
add
jb
cmp
ficoms
js
ficoml
call
jae
xchg
sub
jl
mov
add
mov
or
mov
xchg
les
ror
aas
jle
add
xor
pop
xchg
push
mov
or
mov
sub
sbb
sub
call
fs
aas
in
std
xor
mov
hlt
add
shlb
cmpsl
stos
cld
jb
dec
lea
rclb
ret
bound
dec
pop
or
or
push
jl
lock
mov
dec
stos
lret
add
mov
pushf
xor
popa
inc
sub
jnp
mov
or
movsb
push
popa
hlt
or
pop
into
pop
icebp
callw
sahf
mov
inc
nop
xor
cmp
jl
add
int
call
mov
stc
call
pop
lea
inc
bound
popa
jb
mov
cld
jge
and
icebp
pop
iret
jecxz
fcmovb
and
xchg
popa
jle
mov
les
js
push
fisubl
hlt
jmp
aam
dec
add
jl
insb
push
mov
add
sbb
jg
std
add
sub
call
push
mov
jg
cmp
incl
lret
out
jb
fistps
lods
inc
pop
cwtl
cld
in
pop
mov
insb
scas
call
jle
mov
andb
das
iret
mov
xor
sarb
es
loope
out
sti
add
jl
cmp
movl
clc
sbb
push
pop
dec
pusha
push
push
out
push
mov
lock
call
inc
in
fwait
call
lret
pop
loope
pop
jne
cmp
add
or
mov
xchg
mov
je
or
movl
ret
jbe
into
xor
scas
inc
cmp
jb
mov
add
mov
pop
jmp
or
push
repz
andb
and
xchg
mov
pop
or
enter
and
aas
add
jle
mov
and
pop
adc
rclb
out
divl
insl
lods
hlt
lea
cmp
loope
add
or
pop
aam
fsub
and
pop
dec
add
outsb
jbe
jae
add
add
add
jns
add
add
inc
add
add
js
add
add
outsb
add
inc
dec
add
add
add
add
add
outsl
add
add
add
js
xor
push
add
add
insl
push
jbe
imul
pop
add
push
js
inc
add
add
add
add
add
add
push
add
js
inc
dec
push
cmp
call
push
mov
xor
test
adc
push
push
call
insl
mov
pop
fldenv
out
pop
shrl
andb
xchg
xchg
or
stos
and
int3
mov
mov
js
jg
adc
xchg
nop
push
add
outsl
sub
outsl
loop
sti
in
mov
adc
inc
neg
incb
and
outsb
mov
mov
adc
rcrb
lea
sahf
orb
fcmovnu
dec
mov
outsb
sub
rclb
mov
mov
roll
mov
ror
call
push
mov
ds
mov
mov
lock
push
rcrl
je
xadd
shl
orl
leave
decl
or
mov
xor
lods
jno
lea
pop
mov
dec
mov
fcomps
nop
arpl
jno
sub
pop
jne
push
fwait
mov
jae
inc
push
stos
cli
xor
push
es
push
movsl
imul
je
pop
lods
mov
pushf
push
mov
dec
push
outsb
pop
sub
mov
mov
negl
xorb
xchg
daa
test
inc
scas
xchg
mov
lea
aas
sub
es
add
mov
call
daa
insb
ds
leave
data16
xor
sub
cmp
jne
sub
int3
rorb
sbb
cmp
dec
es
mov
lea
xor
jmp
or
cmp
orb
in
lds
cmpsl
idivb
fstpl
pop
movsb
xor
sub
call
es
push
push
addr16
sar
rolb
xchg
jns
jl
push
imul
movl
dec
in
cmp
cmp
mov
push
pop
mov
mov
test
push
les
filds
scas
adc
sub
gs
call
lds
xlat
pop
loope
js
jne
mov
mov
mov
mov
outsl
movsb
inc
xchg
cmp
xchg
or
fistl
mov
push
push
add
fsubr
call
gs
repz
cmp
pop
ds
xchg
in
mov
dec
popf
lcall
xlat
lcall
mov
mov
push
or
cmpsb
cmp
clc
addr16
aam
add
jg
repnz
lds
or
pop
shll
jmp
insl
cmp
je
mov
fmull
push
or
div
push
and
mov
xor
in
push
cwtl
jns
gs
adc
lock
add
and
stos
cs
cmp
jne
sbb
daa
adc
jg
jecxz
call
push
lret
testb
jo
dec
cltd
mov
jecxz
push
rorb
int3
js
faddp
ror
testb
in
outsl
movsb
xor
hlt
hlt
push
jno
xor
and
push
movsb
add
pushf
nop
xor
movsl
push
jnp
pop
adc
outsb
push
leave
xchg
adc
add
and
ret
push
dec
dec
or
cmp
cmpsb
mov
pop
outsl
push
in
je
and
jmp
fsubrl
or
jl
mov
push
test
fidivrs
int3
xchg
fsubl
in
cli
add
repz
imul
lea
mov
mov
dec
rcrb
xor
aad
call
rolb
inc
mov
enter
sbbl
in
xor
xor
movb
or
rol
cld
cmp
fcomps
lea
inc
lods
pop
inc
shr
sarl
das
shll
adcb
jmp
js
sbb
add
loope
int3
push
or
adc
or
dec
js
lcall
push
or
sarb
jg
pushf
shll
fnstenv
rcll
mov
andl
pop
popf
fiaddl
jle
xor
and
adc
jg
roll
add
inc
jmp
xchg
enter
cmp
int3
push
xchg
push
cld
nop
out
mov
test
pop
roll
and
sar
cmp
cmpsb
call
in
mov
cli
nop
jbe
jl
push
lea
add
stc
and
and
push
cltd
cmp
imul
clc
mov
dec
in
sbb
test
or
push
scas
dec
pop
sbb
ret
out
jmp
aas
dec
pop
dec
jae
adc
scas
xchg
pop
aam
pop
mov
div
sbb
ja
push
pop
push
mov
add
outsl
push
mov
mov
sub
push
push
loopne
mov
orb
in
lret
or
or
mov
neg
sbb
popf
pop
das
and
cmp
je
jge
es
call
imul
mov
jg
mov
mov
inc
sbb
es
cmp
jne
or
pop
jbe
sub
movsb
dec
shll
outsb
aam
mov
pop
add
cmp
call
xor
push
mov
mov
adc
enter
xchg
jmp
push
ret
daa
pushf
and
into
fldl
loopne
jg
xor
push
mov
es
inc
pop
cmp
jo
outsl
das
test
scas
and
outsb
jl
dec
dec
sbb
mov
arpl
xchg
int
or
daa
adc
or
je
scas
jae
jns
inc
fs
icebp
sub
xchg
aaa
aam
mov
aaa
xchg
mov
add
out
push
mov
add
mov
sub
xchg
sahf
cli
aas
pushf
xchg
push
xor
jne
or
inc
cmp
loop
mov
inc
cs
push
repnz
push
or
js
rolb
loopne
movsb
das
call
loopne
lret
shlb
jnp
std
mov
ljmp
dec
push
xchg
aas
nop
dec
inc
rorl
lcall
cmp
xor
jo
mov
rorb
pop
stc
bound
xor
nop
ds
js
push
xchg
push
sub
jp
inc
psubusb
xor
jb
mov
fmuls
mov
sub
mov
push
mov
cs
clc
fwait
push
cmovno
or
sub
cmp
xchg
dec
incb
add
cmp
lret
mov
das
inc
add
sarb
xchg
pop
hlt
dec
ds
add
xchg
movsl
mov
push
mov
lods
aas
sbb
hlt
les
sbb
call
xchg
pop
sbb
jmp
out
pushf
lahf
jg
mov
icebp
ret
push
into
cmpsl
jmp
in
mov
call
iret
cmp
push
cmpsl
pop
sbb
cmpl
subl
cli
sbb
stos
xchg
cmp
pop
push
pop
mov
loopne
pop
sbb
ds
sub
push
dec
inc
or
cmp
xor
or
and
into
rcll
lds
mov
jecxz
sbb
xor
cmp
and
sub
out
fsubs
scas
pop
or
inc
cmp
inc
push
pop
jg
lock
test
pop
xchg
add
pop
pusha
hlt
out
divb
leave
scas
aas
adc
ret
dec
repz
jns
mov
push
aad
pushf
xchg
out
adc
and
mov
je
pavgb
xor
push
inc
mov
xor
clc
mov
xchg
add
call
jno
addr16
imul
jmp
add
icebp
cmp
add
insl
aaa
and
in
dec
mov
or
jo
jb
pop
xor
mov
add
fwait
push
clc
aam
mov
pop
pop
fmuls
cmc
pushf
popf
sbb
jle
cmpsb
mov
fdiv
push
lahf
sub
leave
neg
mov
ret
push
sbb
xor
pop
add
push
mov
adc
mov
pop
mov
repz
and
aas
mov
hlt
int3
xor
in
mov
mov
pushf
iret
sbb
mov
lods
mov
repz
sub
pop
adc
in
movsb
mov
fsubrs
mov
sbb
sbb
sub
lock
or
mov
push
jg
push
sbb
inc
dec
push
and
add
xchg
cld
ljmp
imul
mov
dec
sub
sbb
and
push
push
imul
push
sub
int3
loop
decl
push
ficoml
cmp
push
ret
insl
mov
jo
fdivs
dec
iret
sub
pop
mov
mov
outsl
popf
pop
in
push
xor
push
jle
aam
mov
adc
and
or
imul
fistps
inc
and
jmp
mov
dec
pop
cld
pop
outsl
sub
or
jnp
jg
ret
jmp
mov
daa
cli
xor
cwtl
fwait
pusha
in
call
fstpt
lods
sub
mov
scas
cmp
mov
and
mov
in
std
pop
call
jnp
orl
sbb
sbb
inc
lret
sbb
add
inc
mov
and
cmc
push
fadds
adc
negb
xchg
adc
outsl
and
add
cli
imul
inc
mov
sbb
mov
mov
or
xchg
sub
push
mov
cltd
ja
fisubrs
xchg
push
cmp
scas
add
inc
addr16
mov
psubsb
sbbb
and
nop
or
shll
adc
push
xor
dec
mov
test
pop
je
mov
call
loop
das
cmp
mov
shl
dec
jmp
jmp
xlat
loopne
push
inc
imul
outsl
mov
xchg
mov
dec
xorb
std
inc
or
test
sarb
ret
gs
test
sub
call
jne
in
test
je
add
pop
push
pushl
jb
adc
adc
fbstp
stc
les
sbb
nop
push
sub
jb
lods
js
xchg
cvtps2pd
jo
mov
into
daa
sbb
push
scas
inc
sbb
movaps
lret
jle
ljmp
fsubs
pop
cmp
sub
jns
gs
or
add
shll
sbbl
lock
or
and
sbb
repz
or
stc
or
pop
jmp
mov
jbe
push
mov
outsl
push
popl
mov
imul
xchg
pop
outsl
add
test
in
mov
add
cmp
xor
outsb
lock
xor
and
or
pop
and
notl
fstps
xor
push
push
test
out
imul
inc
jo
in
mov
push
into
xchg
js
or
in
cld
and
adc
and
add
insl
xchg
adc
jno
cmpsl
cmpsb
lock
rcll
cs
arpl
adc
cmpsb
mov
lret
aam
and
pop
push
lock
call
and
mov
outsb
hlt
pushf
repnz
and
test
orl
add
enter
in
jecxz
fcoml
pop
jmp
bound
mov
and
sub
fnsave
mov
and
outsl
and
lock
lock
mov
lock
push
adc
fisubs
movl
add
and
movsb
sbb
and
cmp
fmull
or
in
cwtl
push
xchg
or
sub
and
sub
xchg
mov
jns
in
or
cmp
inc
rorl
mov
mov
pop
imul
cmp
in
shll
push
fdivs
mov
cmpsb
adc
or
mov
pushf
lock
add
sub
cltd
pop
outsb
jne
insl
aaa
sbb
mov
mov
aas
shr
cltd
adc
add
adc
rcl
cmp
inc
call
pop
dec
inc
dec
and
out
pop
adc
andb
sub
pop
call
sub
dec
jmp
push
and
xor
fstp
push
movsb
ljmp
xor
iret
fstpt
outsl
cmp
test
fbld
addr16
ret
mov
inc
rorl
ret
pop
jo
mov
jg
sti
sbb
pop
imul
test
mov
movsl
inc
sti
lcall
inc
arpl
mov
sub
aaa
sbb
push
bound
lods
xchg
xchg
aad
sbb
movsl
cmp
sub
in
adcl
mov
je
sub
xchg
mov
loope
daa
dec
addl
out
or
fisubl
lock
movsb
iret
and
test
outsl
je
fistpll
dec
hlt
aas
jo
xchg
icebp
stos
roll
aam
in
xor
sbbb
cs
jp
push
cmc
mov
je
inc
cmp
inc
mov
arpl
push
fistpl
mov
adc
push
enter
cltd
test
pop
lds
fidivl
icebp
cmp
jmp
and
test
mov
add
iret
mov
push
mov
xchg
push
andb
in
jmp
adc
sub
pop
call
xor
shll
jno
pop
xor
xor
pop
xchg
cmp
xchg
test
jecxz
out
bound
cmp
in
dec
cmp
stos
cmp
cltd
imul
jecxz
mov
xor
jmp
leave
addr16
or
mov
mov
or
inc
dec
aaa
cmp
push
jg
jmp
jle
cmp
dec
insb
cld
add
insb
daa
cmp
sbb
pop
int3
pop
mov
nop
bound
nop
fildll
pop
and
dec
mov
out
pushf
cmp
enter
fs
mov
test
cmp
jle
movsl
dec
clc
gs
dec
jmp
fcoml
sarb
outsl
jle
ljmp
mov
movl
cmp
dec
push
hlt
cmp
out
loop
or
pushf
ret
adc
add
jno
jo
aaa
fstpt
sbb
cmp
mov
or
jae
and
cmp
jg
dec
in
mov
pop
jg
push
fisubs
add
jb
es
in
lahf
ss
jmp
negl
xchg
sbb
sub
pop
pop
fimuls
xor
sbb
pusha
outsl
inc
cmp
cmp
fstps
test
jmp
add
inc
call
jmp
xchg
mov
lahf
inc
gs
sub
push
sti
movsl
ja
sbb
hlt
repz
cwtl
aaa
mov
pop
mov
mov
mov
je
xor
mov
movb
mov
xchg
popa
mov
pusha
mov
push
scas
aas
mov
stc
ficoms
adc
test
xor
dec
mov
jg
es
orl
mov
int
enter
ss
and
sbb
mov
xor
jo
inc
mov
jne
pop
scas
stc
jbe
sbb
hlt
xchg
dec
ja
add
pop
dec
jno
out
sbb
ret
insl
ja
pop
je
adc
push
jne
out
aas
sbb
adc
in
movsl
add
xor
and
sahf
push
add
daa
call
adc
popf
mov
dec
pop
fadds
enter
or
xor
dec
dec
bound
sarb
mov
jp
xchg
xor
mov
push
jmp
adc
jle
shll
push
cmpsl
pop
add
cmp
pop
in
xchg
mov
incl
xchg
adc
es
mov
xor
addr16
dec
cmpsb
call
vpcmpgtb
sbb
xchg
lahf
icebp
sub
cmpb
sub
push
scas
push
call
out
or
xchg
es
lcall
mov
lods
pop
les
call
dec
in
pushf
add
scas
rcrl
xchg
hlt
filds
sub
fsts
sub
lods
xor
out
push
xor
cmp
dec
hlt
pusha
and
je
add
test
pop
sbb
adcl
data16
xor
in
lcall
dec
add
push
jo
aaa
icebp
lret
iret
rol
cmp
mov
push
enter
inc
cmp
inc
lcall
pop
fucomi
or
pop
int3
cmc
dec
cmp
and
mov
cld
push
mov
test
sbb
sbb
cmc
xor
shlb
mov
sub
movsl
lods
and
xchg
fcmovb
imul
pop
outsb
jmp
nop
out
outsl
add
mov
jge
or
push
jp
mov
or
or
push
adc
loopne
push
sbb
das
adc
mov
call
adc
stos
inc
push
xchg
lahf
dec
test
imul
scas
jb
add
outsl
pushf
mov
add
mov
xor
add
jb
icebp
fwait
inc
ljmp
mov
fimull
sub
sub
adc
nop
jmp
cmp
lret
jge
push
xor
fcomps
subb
loop
inc
and
fwait
xchg
or
nop
jns
sub
ret
je
rcrb
xchg
dec
push
movsb
gs
imul
jmp
cmp
test
push
lahf
int
mov
mov
push
sub
push
gs
fstl
je
rcrl
mov
add
js
and
sbb
fs
aam
rorl
loop
int3
mov
cmpsl
mov
mov
mov
cmp
mov
clc
ret
or
and
mov
mov
into
or
iret
and
or
in
push
call
icebp
sub
fstps
dec
xor
leave
adc
jmp
sub
sub
mov
lret
dec
cwtl
xchg
fucomi
aas
push
dec
jnp
je
push
adc
test
es
or
mov
in
cmp
xlat
pop
ficoms
stc
or
jmp
popf
mov
std
and
movsl
aas
adc
test
loope,pt
sbb
call
test
nop
and
push
inc
xor
adc
fs
jge
xor
pop
mov
cmp
cmc
test
enter
lock
iret
pop
icebp
dec
jg
inc
jecxz
add
push
inc
cmpsl
call
dec
aaa
xor
shlb
cmpsl
addl
cmpsb
push
push
mov
ja
rorl
pop
jp
mov
stos
ret
sbb
scas
or
or
jmp
in
lahf
sbb
sub
es
call
das
xorb
out
roll
out
push
xor
xchg
lahf
mov
ja
cld
xor
dec
add
push
movl
pop
mov
jmp
pop
out
movsl
movnti
call
jbe
sbb
xchg
test
rorl
and
add
aas
test
pop
icebp
xor
or
lret
lock
push
adc
stos
es
das
mov
or
inc
adc
or
jae
push
iret
aas
lods
sbb
xor
cmp
mov
mov
and
call
and
adc
push
cwtl
push
and
rcrl
xor
call
addr16
or
or
aas
sbb
loopne
pusha
push
jmp
in
data16
lods
arpl
scas
call
pop
neg
push
jae
roll
push
lahf
icebp
in
test
movl
in
sub
xchg
cli
andb
pop
mov
scas
daa
mov
cwtl
jecxz
xchg
cld
fs
jmp
test
dec
mov
cltd
jbe
test
stos
lret
pusha
cmpsl
jb
mov
mov
pop
and
dec
or
mov
push
mov
das
out
or
push
js
inc
nop
call
out
xchg
pushaw
push
mov
inc
in
xchg
add
aas
lock
fsubl
push
xchg
xchg
mov
pop
test
popa
clc
repz
ja
popa
cmp
dec
sbb
nop
jns
test
sbb
push
jge
mov
sahf
pop
std
ss
fmuls
repnz
mov
mov
xlat
pop
ds
pop
sub
mov
ja
adc
in
adc
adc
adc
iret
lock
lahf
les
aas
call
imull
ja
fwait
imul
mov
push
cmp
outsb
es
or
or
call
cmpb
lahf
and
lea
scas
mov
outsb
adc
sti
xchg
aas
call
mov
pop
adc
mov
ret
cld
test
inc
pand
filds
jne
sub
xor
mov
call
cmp
pop
arpl
sbb
ja
shll
call
pop
lock
in
add
call
aas
mov
mov
lods
push
add
stos
es
cmc
lock
sub
stc
arpl
add
dec
inc
push
repz
xchg
enter
cmp
adc
jp
inc
cmp
enter
imul
sbbb
add
dec
ja
js
in
or
lret
xchg
arpl
pop
icebp
lret
mov
xor
sahf
or
push
add
je
or
and
lock
and
jg
cmp
dec
jl
pop
call
or
into
adc
lahf
mov
jbe
or
test
je
sbb
movsl
xor
mov
cmc
push
call
or
es
xchg
fsubrs
xorb
xor
pop
pop
push
xchg
add
fs
js
jecxz
js
repnz
fucomi
mov
aaa
and
add
test
orb
jae
mov
loop
push
push
icebp
in
scas
cmpsl
out
call
out
sti
sbb
ret
aad
add
or
jmp
adc
lock
test
out
mov
hlt
mov
movb
sub
jo
push
rclb
mov
push
mov
sbb
int3
mov
or
inc
fsubs
jnp
sub
in
push
xor
outsl
roll
xor
rcrb
or
mov
es
ret
xchg
cmpsb
jno
aad
lds
mov
push
sti
push
jg
sar
xchg
lret
lock
test
jno
nop
cmp
add
push
mov
dec
imul
jno
lds
pop
loope
fldcw
lcall
or
ret
bound
sbb
mov
mov
out
cwtl
into
jp
js
arpl
xchg
iret
mov
es
fldenv
shrl
add
stos
add
jp
icebp
dec
sub
mov
flds
and
imul
add
fistpl
cli
lea
sahf
mov
call
jge
arpl
movsl
fiadds
jo
or
add
cmp
mov
outsl
add
or
lock
test
test
sbb
and
xchg
pop
push
push
push
jbe
lea
push
ret
mov
xor
push
xlat
call
sbb
sub
shlb
adc
jge
data16
das
in
or
imul
rorl
js
scas
mov
movsl
inc
mov
sbb
jne
jbe
jmp
pop
testl
lods
cmp
in
mov
out
call
ret
dec
int3
or
add
pop
sub
or
cld
mov
les
shrb
gs
mov
mov
cmpl
cwtl
xchg
and
push
xor
es
and
pushf
shlb
lret
mov
sub
fcomps
jmp
daa
dec
dec
or
adc
int3
sub
push
push
movl
pop
dec
insb
cmp
push
jb
xchg
bound
lea
jb
sub
sub
in
sbb
lock
cmp
xchg
adc
mov
mov
xor
cmp
cmp
call
add
ljmp
les
jo
outsb
iret
or
in
in
insb
and
imul
enter
mov
or
xchg
xchg
push
fistl
adc
lock
arpl
sbb
xchg
les
jge
cmpsl
jne
lock
lds
ret
lods
movsl
adcb
fs
call
repnz
cmp
in
psubsb
mov
pop
sbbb
add
loopne
popa
add
add
fxch
nop
inc
movups
jnp
mov
cld
sti
sub
sub
insb
aad
adc
mov
into
faddl
call
add
in
fneni(8087
fldcw
loopne
insl
sbb
mov
ret
or
dec
adc
enter
jne
or
mul
jle
push
push
and
aam
outsl
leave
daa
adc
aaa
rcrl
fs
xor
cmp
inc
jae
pop
daa
and
ljmp
loope
fld1
fsubrs
cmp
fldcw
mov
mov
dec
pop
orl
sub
cwtl
cmpsl
jp
gs
sub
pushf
pop
add
mov
mov
cmp
jo
rcl
push
jne
stos
pop
call
mov
scas
pop
repnz
xor
xchg
lea
xchg
in
mov
test
jmp
adc
cld
push
out
sarl
mov
cmp
in
out
cmpb
cmp
mov
xchg
ret
int3
push
cmp
xor
ds
stos
test
jbe
and
shlb
lods
test
lods
cmp
movzwl
aam
jmp
jne
jl
add
cmc
push
or
xor
js
lret
es
sub
ret
xchg
sub
test
push
push
call
cmp
incl
movsb
mov
sub
xor
and
daa
pusha
add
add
jg
adc
insl
or
inc
or
mov
xor
dec
shlb
lea
push
push
sbb
or
push
push
jg
movsb
push
mov
addr16
jb
call
inc
xchg
andb
dec
popf
lret
lods
adc
push
mov
push
xlat
dec
mov
push
mov
jnp
rcl
and
js
out
xor
and
push
aas
or
mov
cmpl
ret
or
jl
push
sbb
in
mov
sub
push
sti
and
mov
adc
loope
push
push
ja
arpl
mov
jno
push
gs
cmp
pop
sbb
es
daa
lea
xlat
in
lock
mov
mov
out
push
push
lods
sbb
xchg
cmp
daa
movsl
jae
fmull
jp
addr16
data16
in
incl
pop
je
and
xor
fimuls
push
cmp
insl
cmp
cmc
movl
xor
frndint
mov
sub
or
ficoml
lea
jae
jns
enter
shlb
or
mov
push
or
mov
push
inc
inc
clc
xor
mov
out
mov
mov
mov
or
aad
inc
stos
movsl
leave
clc
ja
arpl
aam
ret
jge
jp
fnstenv
sti
rcll
jge
or
jmp
aas
pop
iret
jne
into
cmpsb
and
and
mov
ljmp
int3
mov
mov
cmp
dec
mov
mov
adc
or
test
xor
data16
arpl
mov
push
es
sbb
popl
in
xchg
ja
mov
xor
shlb
cmc
mull
add
cmp
and
int
sub
fsubs
dec
test
or
stos
gs
sbb
shrl
push
and
sub
pop
aam
stos
adc
les
xor
add
pop
dec
mov
jp
ja
add
add
add
dec
push
dec
add
add
add
outsl
add
add
add
xor
add
push
pop
dec
pop
je
add
inc
add
add
imul
add
push
cmp
dec
xor
add
add
add
push
dec
pop
add
add
add
push
xor
add
add
outsb
inc
dec
fs
add
add
push
add
push
cmp
dec
add
add
push
aaa
js
add
push
add
add
inc
cmp
enter
sub
mov
test
mov
push
inc
lea
adc
inc
popa
es
xor
add
inc
repnz
pop
jl
mov
insl
xchg
inc
or
nop
stc
orb
mov
rcll
int3
mov
fistpl
fnstcw
ficoms
iret
call
jbe
xlat
je
add
sub
aas
sar
andl
lock
ss
xlat
sar
leave
xor
mov
arpl
cmpl
ret
mov
jmp
push
xchg
add
inc
xchg
insl
dec
leave
add
dec
pop
int
or
mov
push
or
gs
mov
dec
jns
js
lea
out
push
push
push
and
loope
add
cmp
les
add
jbe,pt
out
pop
push
cmpl
adc
in
push
dec
jl
dec
sub
ret
js
test
and
jbe
mov
mov
lea
enter
mov
mov
cld
inc
jmp
mov
scas
rcll
pop
out
clc
xchg
enter
fwait
pusha
into
mov
add
or
test
ja
push
cmp
mov
cltd
xchg
imul
sarl
xor
aad
cltd
xchg
call
dec
in
add
or
push
xor
pop
cmp
push
test
inc
je
jnp
inc
test
cmp
and
sbb
loop
iret
and
push
xlat
adc
and
std
loop
xor
cmp
adc
movsl
rclb
shrb
test
push
dec
adc
fdivrl
add
cmp
scas
cltd
xor
outsb
cmp
cmp
dec
jno
dec
pop
mov
push
movsl
dec
ret
mov
push
cld
imul
fisttps
or
pop
or
lcall
inc
sbb
mov
add
insl
scas
mov
fwait
push
cmp
int3
jno
iret
cmpsb
lock
pop
or
adc
sbbl
mov
test
push
cmp
sub
rcrb
lock
xchg
jg
fnsave
dec
pop
cli
aas
sub
cli
jp
xchg
cmove
inc
daa
leave
mov
mov
and
add
aas
add
ud2
mov
sbb
cld
and
dec
jo
dec
adc
in
xchg
jns
push
jge
mov
fldl
loope
imul
jne,pt
sahf
mov
add
and
test
test
out
fwait
mov
clc
lahf
mov
xchg
test
xlat
rorl
fcmovbe
sub
orb
and
imul
inc
addr16
daa
ds
lahf
mov
lret
sub
negl
mov
add
cmp
in
dec
inc
add
imul
addr16
fdiv
cmpb
imulb
jge
ret
ds
lahf
sahf
movsl
adc
mov
aaa
stc
jg
das
jne
lea
jge
mov
scas
adc
sbb
inc
imul
cmp
inc
add
add
add
inc
push
or
clc
and
roll
sub
push
dec
mov
adc
in
pop
or
or
jp
push
movsb
dec
lock
rclb
outsl
inc
xchg
mov
ds
or
mov
mov
mov
int3
cmp
xlat
xor
in
jle
xor
mov
in
inc
add
dec
dec
cmpsb
push
sbb
inc
mov
leave
jno
dec
lea
roll
dec
and
movsb
mov
or
sub
ret
dec
cmc
jecxz
cmpsl
fs
or
pusha
hlt
ret
lahf
js
mov
in
push
loop
push
outsl
sub
or
adc
shlb
or
jmp
push
mov
jle
nop
jbe
sub
pop
sbb
int
pop
into
adc
add
push
test
mov
mov
into
cmpsl
cmpl
arpl
je
add
pop
lods
push
push
adc
push
hlt
sub
scas
out
cmp
xorl
and
mov
insb
das
cli
ret
xor
lcall
mov
cmp
call
sbb
leave
loopne
imul
movsl
mov
lock
mov
call
test
data16
sbb
test
pshufw
cmc
testl
loopne
add
push
nop
fdiv
and
dec
enter
dec
hlt
gs
aaa
aas
jp
push
xchg
in
sub
xor
dec
push
fwait
lret
sub
ds
aam
fs
adc
lods
daa
call
mul
jl
add
mov
mov
dec
push
add
push
and
push
int
out
sub
fistl
mov
xchg
xchg
into
icebp
xchg
or
outsb
pop
push
cmpsb
push
inc
mov
add
and
stos
mov
mov
mov
sub
sub
data16
jne
push
cmp
and
push
cmp
fdivrl
jg
fisubrs
xlat
sub
mov
les
ds
shrl
xchg
movsb
sub
aad
mov
cmpsl
mov
cld
push
dec
fcomps
lock
fwait
xchg
shlb
jb
test
mov
pop
insl
jb
nop
ds
es
out
pop
push
movsl
popf
pop
push
xor
jl
dec
rclb
jge
aam
xchg
js
jb
shr
iret
sbb
stos
sbb
repnz
fcmovnbe
in
push
add
push
cmp
test
or
jl
daa
movsl
jl
outsb
jo
adc
rorb
fs
pop
sub
stc
add
mov
mov
inc
push
out
xchg
add
outsl
js
iret
orb
mov
cmp
orb
test
mov
push
out
mov
cmp
or
es
jle
out
pop
outsl
lods
and
jg
push
xchg
push
js
stc
sub
xor
sub
cltd
aam
mov
fadds
jne
jl
in
cli
call
jmp
push
sub
call
jg
mov
sbb
push
and
pop
jecxz
mov
into
dec
pop
ret
or
sarl
xor
cmpsb
cmp
cld
push
lods
add
add
imul
out
jbe
ret
loop
jb
and
pusha
imul
rcrb
data16
dec
popa
popfw
jl
fs
xchg
push
push
push
ljmp
add
imul
or
and
loope
mov
daa
mov
fsubl
mov
dec
add
adc
cmpsb
outsl
and
shll
lahf
mov
push
mov
sahf
into
cmp
test
mov
loop
pushf
and
sbb
ret
mov
mov
dec
jle
xor
test
shll
pop
and
mov
nop
jbe
push
pop
jl
pusha
idiv
sbb
lea
rcl
divb
xchg
repz
push
push
pop
jl,pt
inc
rol
les
mov
mov
fdivrs
inc
and
sbb
mov
imul
jp
xlat
outsb
jp
jmp
movsb
loope
add
fsubrs
shr
mov
sub
add
adc
fidivs
or
lea
push
cmp
lret
adc
imul
mov
adc
call
movl
mov
out
mov
xchg
outsl
cmp
fildll
in
popa
sbb
mov
add
pop
jmp
fdivrs
jmp
imul
mov
or
dec
stos
cmp
adc
jne
fldl
mov
mov
mov
pop
cmpsb
sub
int3
sbb
push
movups
xor
lock
jg
pop
cmp
pop
mov
add
mov
pusha
jl
and
sbb
and
or
imul
sbb
xor
lock
hlt
insb
daa
bsf
add
test
fildl
pop
orb
repnz
mov
xor
sub
nop
pushf
adc
shlb
cli
fistpll
and
sbb
stc
popf
push
nop
cld
mov
cmp
and
cmp
arpl
shll
test
pop
mov
jge
mov
add
mov
mov
dec
and
lds
ret
fs
aad
mov
outsl
outsl
and
cmp
iret
mov
clc
sbb
sbb
imul
or
arpl
jle
cmp
push
out
jmp
lret
pushl
cmp
ret
test
sarb
cmp
mov
outsl
shll
or
mov
cs
testb
ja
aas
rol
into
shll
clc
cmp
inc
repnz
inc
je
xchg
mov
clc
fsts
arpl
inc
mov
add
push
push
cmpb
iret
adc
cmp
rcrl
cmp
mov
jl
imul
mov
cmp
and
push
aam
movsb
sbb
mov
jmp
inc
filds
inc
push
cwtl
push
call
int
push
mov
jmp
adc
mov
push
mov
cli
sub
out
test
mov
push
jg
mov
sub
lea
jmp
loope
add
mov
lea
in
push
sbb
lret
fistpl
cwtl
push
je
or
popa
pop
insl
mov
pop
test
ds
push
mov
sbb
sbb
jle
subl
sub
movsb
mov
rclb
fdivrl
adc
aaa
xchg
push
cwtl
sbb
mov
pushf
stc
mov
dec
push
lea
jg
in
enter
mov
sbb
out
fs
cmp
mov
int
stc
jae
dec
mov
cmp
je
lds
jmp
aam
mov
jae
xor
add
inc
jmp
jb
sbb
xorb
push
jmp
pop
ss
or
xchg
andb
sub
cmpsb
sbb
add
loope
or
out
rcrl
mov
or
cwtl
popa
cltd
mov
fwait
int
jmp
cmpsl
push
test
add
pop
mov
cmpsb
lret
cli
cmp
push
shrl
push
push
sbb
sbb
sbb
sarb
cmp
xchg
push
ja
mov
jmp
sbb
cmp
push
inc
movsl
push
mov
xchg
jns
in
jecxz
movsl
nop
sbb
sti
popa
push
and
mov
jne
or
out
cltd
cmp
push
mov
push
xchg
leave
int
je
orb
jne
lods
add
xchg
rcrb
daa
andl
popl
out
pop
or
lods
or
push
es
outsb
jns
push
push
sbb
jmp
pop
movb
mov
xor
add
movsl
adc
aad
mov
dec
jp
cmp
cld
clc
daa
inc
shr
repz
sbb
jo
test
sbbb
adcb
movsl
pop
loopne
push
cmp
mov
adc
out
out
es
pop
or
sbb
notl
lods
mov
into
jl
mov
add
cmc
orps
jle
dec
call
pop
sbb
testl
sbb
inc
shl
jnp
addr16
lock
rorl
mov
dec
andb
pusha
in
mov
inc
push
or
dec
sub
in
fsubr
xlat
push
cwtl
push
out
or
cmp
mov
mov
les
or
rcr
enter
xchg
mov
add
push
call
dec
fadds
sbb
cmp
sbb
sti
sbb
sbb
jne
ret
dec
inc
les
stc
xchg
or
add
mov
dec
hlt
ds
mov
jae
dec
iret
pop
nop
jne
cmp
iret
xchg
and
xchg
out
imul
and
in
mov
mov
push
sub
call
mov
cmp
addr16
hlt
mov
xor
and
or
jo
ret
cmp
pop
mov
call
mov
outsl
pop
aad
outsb
push
data16
and
lock
sub
and
push
hlt
lahf
ja
sbb
or
push
sbb
push
cld
xchg
pop
ljmp
popa
push
pop
repnz
fisubl
mov
lods
push
xor
adc
push
jl
ja
or
mov
and
lock
mov
pop
sub
jno
sub
test
xchg
sub
sub
test
add
sub
out
pop
add
xorl
shrb
mov
jmp
lods
mov
or
or
push
mov
dec
lods
test
jae
lods
jmp
push
jae
call
add
test
pushf
jmp
cmp
mov
call
cwtl
imul
jnp
aas
mov
outsl
and
cmp
bound
cmp
cmp
add
and
cmp
nop
dec
and
adc
jge
or
mov
js
in
jne
clc
mov
push
or
adc
jmp
cmp
sub
jmp
or
jne
call
push
shll
sub
outsl
jno
stos
ja
inc
mov
jle
in
inc
jns
std
jecxz
stos
ret
ja
dec
jmp
fdivs
push
push
xchg
imul
and
dec
push
xchg
scas
std
fcoml
xchg
mov
loopne
dec
adc
push
push
add
dec
sub
xor
movsl
rcll
sbb
bound
mov
and
int
push
or
xchg
insl
pop
pop
jmp
test
inc
cmp
and
xchg
adc
push
or
push
dec
je
je
dec
lods
inc
add
cwtl
dec
movsl
or
pop
push
lret
adc
mov
call
pop
aas
imul
sbb
xor
imul
jbe
gs
add
in
push
inc
hlt
add
xor
lret
mov
das
adc
das
or
cmp
xchg
and
adc
ljmp
mov
dec
mov
and
rolb
daa
jo
call
sub
push
mov
fcoms
xchg
test
add
test
imul
aas
test
pushl
orl
insl
movsl
sbb
test
xor
pop
sub
pop
ret
out
sbb
cmpb
imul
pop
or
dec
ja
dec
sahf
jmp
push
outsb
push
fcompl
aaa
bound
movsl
movsl
call
in
in
push
les
mov
mull
fnclex
push
cmp
movsl
ljmp
into
and
adc
cs
clc
lea
dec
in
rcrl
cli
imul
add
pop
or
cld
mov
jmp
mov
mov
push
lret
lock
push
adc
movsb
fbstp
rolb
mov
xor
rclb
push
out
and
and
or
ficoms
xor
push
push
mov
cmp
mov
inc
int
push
mov
ljmp
sub
call
dec
inc
int
push
addl
or
inc
popa
cmp
outsl
int
sbb
es
fidivrs
inc
or
fldl
adc
mov
jmp
fistps
sub
inc
cltd
lahf
in
jmp
mov
out
movsl
jne
push
xlat
push
popa
movsl
inc
aam
add
pop
pop
lcall
push
inc
enter
loope
pop
adc
or
pop
fwait
mov
outsl
mov
dec
xchg
in
push
pop
sub
push
push
call
push
pop
aaa
sarl
add
in
movsl
inc
jmp
lods
cwtl
or
xchg
js
imul
xchg
or
inc
mov
ja
sbb
xor
jno
test
sarb
es
call
xchg
push
sahf
inc
cmp
inc
pop
outsb
or
dec
cmp
gs
insb
add
fs
leave
push
or
fstps
jne
aas
cmp
lods
iret
aam
mov
sub
or
shrb
test
xor
jge
call
int
mov
xchg
call
dec
and
and
rorb
loopnew
pop
cmpl
js
adc
push
out
cwtd
cmp
lcall
mov
js
sub
js
push
mov
shll
pop
jbe
in
call
mov
subl
fisubrl
or
idivb
std
lcall
pop
cs
mov
cmpsb
movsl
imul
cmp
adc
mov
data16
pop
pop
mov
addr16
cmpsl
and
pop
pop
cmp
mov
rcrl
subl
ja
mov
in
ljmp
test
ret
stos
pop
jb
sub
int
call
lods
dec
lea
add
add
es
and
test
fdivrp
ret
icebp
outsl
cmp
mov
push
add
mov
add
or
call
add
add
mov
orl
arpl
mov
addr16
pop
dec
or
cmpb
call
or
xor
push
scas
jmp
or
mov
call
push
add
pushf
add
or
sbb
sbb
sub
pop
pop
xor
jae
push
arpl
mov
clc
repnz
xchg
sub
in
cmp
imul
dec
xor
push
cwtl
jle
xchg
pop
lcall
mov
add
mov
and
fists
repz
in
imul
xchg
sbb
outsl
add
inc
loopne
push
daa
inc
movsl
mov
cmpsb
stos
or
enter
das
cmp
ja
and
data16
aaa
jg
enter
incb
shl
divl
mov
cli
cmp
pop
cmp
outsl
xchg
movsb
cwtl
mov
mov
addl
inc
in
push
pop
and
push
push
arpl
xchg
icebp
bound
inc
inc
inc
cli
bound
repz
popa
xchg
icebp
sbb
mov
cmpsl
sub
call
mov
cmp
sub
cmp
xlat
icebp
xchg
adc
xor
shl
pop
add
rorb
negl
mov
lahf
fldl
mov
movsl
xor
loop
pminub
mov
in
adc
inc
hlt
hlt
xchg
test
cmp
fwait
dec
cmp
push
out
arpl
pop
lods
and
jne
mov
movb
fsubrs
addl
mov
das
mov
jae
inc
mov
mov
mov
test
sbb
ss
in
lea
dec
lods
into
fcmovnu
enter
dec
mov
xorl
dec
fs
add
xchg
sbb
into
add
pop
in
movsb
jmp
cli
cmp
in
rorl
lret
pop
push
hlt
mov
mov
mov
mov
mov
lods
call
std
into
mov
test
shll
enter
outsl
jmp
adc
mov
in
test
jmp
jmp
mov
call
push
lret
sub
pop
sub
movsl
cmp
lret
fstps
addr16
pop
aam
push
mov
mov
sti
push
bound
and
pop
lcall
and
pop
lahf
mov
inc
or
xchg
icebp
sarl
add
ret
add
cmp
mov
jg
jp
pop
adc
addb
and
dec
es
mov
negl
push
je
sub
inc
call
incl
mov
jge
xchg
xchg
and
divb
pop
mov
mov
outsb
mov
ret
lret
sahf
and
dec
ret
mov
lahf
out
es
fistps
and
popa
xchg
sahf
mov
ljmp
popf
enter
inc
lds
mov
jo
rcr
xchg
adcl
cld
cltd
inc
mov
in
pop
lods
adc
test
push
out
sbb
jmp
jmp
repz
das
scas
in
cld
movsb
jnp
cld
add
test
imul
xchg
lret
jl
mov
mov
ja
jb
mov
lcall
je
rolb
or
sbb
push
das
mov
ja
jb
stos
cmp
sbb
mov
sbb
or
inc
shlb
negb
cmp
jne
mov
mov
sbb
sub
aam
xor
mov
sub
cmp
shlb
jb
xchg
adc
es
add
jno
std
mov
lcall
mov
fcomps
inc
or
add
hlt
and
adc
ret
inc
ret
and
pop
mov
jmp
std
jmp
mov
mov
add
mov
cmp
xchg
ljmp
inc
add
imul
test
fisttpll
push
loop
outsl
adc
push
adc
jae
xlat
clc
cs
mov
add
xor
rol
fcomi
xor
movsl
stos
sti
outsb
xchg
fldcw
sub
call
and
cmp
ret
outsb
push
shlb
adc
outsb
mov
add
pop
fabs
in
sbb
push
adcl
add
out
popf
ja
jae
and
in
inc
nop
int3
loop
add
sub
lcall
addb
and
mov
outsl
mov
cld
mov
and
fstpt
lahf
jo
push
or
and
movl
stos
addr16
into
je
popf
cs
pop
mov
adc
rclb
aad
ja
sbb
aas
lods
insl
push
add
lcall
pop
lcall
pop
xlat
ret
jae
mov
ret
mov
sub
xchg
cmp
movsb
xchg
push
pop
pushf
int
data16
jae
fnstsw
mov
xchg
stos
mull
jmp
mov
scas
lock
push
aaa
inc
inc
pop
cli
mov
xor
jne
or
mov
cmp
sbb
inc
imul
in
and
in
repnz
iret
shlb
shl
hlt
sbb
mov
ss
lods
jp
scas
dec
mov
sub
push
dec
pop
or
sbbb
pop
test
jbe
add
daa
push
andl
mov
jl
in
test
lret
lock
jle
popf
loopne
jg
mov
or
cmc
sub
jne
mov
imul
stc
inc
dec
ja
mov
jb
mov
pop
and
inc
adc
jle
les
outsl
mov
dec
dec
mov
sti
pop
movb
cmp
gs
adc
xchg
stc
inc
aad
arpl
test
add
js
sub
popa
jg
call
adc
jle
jae
mov
pushf
adc
adc
add
pusha
sbbb
push
test
arpl
mov
adc
jge
jae
data16
lret
cli
lahf
or
mov
fwait
jle
int3
cltd
jle
js
dec
or
push
fadds
jnp
adcl
jecxz
mov
push
mov
sub
out
mov
sbb
lret
test
jo
shr
pop
or
arpl
mov
je
aaa
andl
popa
clc
dec
adc
int3
cmp
adc
shll
lods
cmc
sub
jg
movsl
pop
out
pop
fdivrs
es
pop
test
add
sub
jge
in
or
out
jae
dec
jmp
movsl
fld
sub
call
and
sbb
call
jmp
scas
enter
sbb
push
jmp
cmc
imul
fistpll
or
outsl
add
enter
inc
jne
adc
push
mov
mov
inc
repnz
pushf
and
nop
stos
mov
and
data16
adc
mov
cmpsb
inc
jb
dec
lock
lock
and
lcall
add
fistps
out
cmp
or
in
mov
add
pop
xor
sti
jle
jb
mov
rcll
fdivs
in
daa
sub
sbb
arpl
test
je
mov
clc
mov
cmc
insb
cli
js
add
push
out
mov
add
adc
cmp
jnp
jg
std
pop
mov
aas
lock
jle
fnstenv
mov
test
imul
mov
push
fwait
mov
jne
fucomi
arpl
pop
shr
cmpsb
or
pop
ds
repz
pop
lods
mov
sahf
in
cmpsb
mov
jnp
pop
add
dec
mov
rcll
push
dec
push
push
loop
fldcw
xchg
xchg
lretw
sbb
loope
xchg
mov
mov
or
cmp
push
cli
sbb
ds
and
cmp
idivl
sbb
jmp
enter
mov
cmpw
imul
sub
mov
cmp
mov
scas
mov
push
cmpsl
fcom
enter
xchg
aaa
add
add
movsl
xchg
shlb
repz
xor
mov
scas
in
or
fucompp
xchg
cmp
leave
data16
addr16
inc
rcrl
aam
cli
jo
lods
cmp
ja
dec
leave
jl
pusha
jmp
lea
mov
adc
inc
adc
sbb
mov
shrb
adc
inc
out
adc
jb
les
sbb
std
mov
sub
inc
push
sbbb
mov
adc
push
popa
into
xor
xchg
mov
cmp
xorb
cmp
jge
out
repnz
aam
ret
stc
jmp
fistps
es
jae
lea
imul
mov
mov
outsb
ret
or
mov
int3
in
and
jnp
out
arpl
fadds
adc
fnsave
out
jno
lods
mov
xchg
xchg
jo
adc
mov
jp
out
or
jg
dec
mov
pop
fnstsw
test
rep
pop
mov
jl
or
stos
hlt
push
adcl
adc
ret
mov
pop
into
and
movsl
aas
or
push
out
mov
fdivrs
or
xchg
mov
dec
sub
pusha
push
es
xor
es
mov
mov
pop
mov
movsb
dec
je
or
clc
imulb
notb
stos
sub
jg
inc
pushf
mov
das
dec
popf
cli
call
dec
xor
es
repnz
mov
call
pop
xchg
iret
mov
xchg
inc
inc
cmpsl
shlb
ss
insb
xchg
cmpsl
add
push
orb
push
stc
das
adc
icebp
inc
mov
xchg
fcoml
mov
add
arpl
or
jl
mov
or
movsl
jne
mov
out
stc
stc
inc
xchg
cmp
int3
or
addr16
mov
pop
cmpsb
mov
jo
adc
xorl
outsl
mov
push
jg
test
rcll
sub
fs
out
pop
jnp
fs
jae
fs
push
and
mov
rcrb
lock
les
fistl
pop
fidivrs
xlat
test
leave
stc
fs
jae
cmp
push
inc
cmp
leave
es
lea
or
repz
inc
adc
sarl
mov
mov
mov
out
mov
arpl
dec
pushl
mov
das
aaa
or
xor
das
scas
js
xor
pop
xchg
aaa
sub
push
test
aas
mov
xchg
idivb
push
cmpsl
test
movsl
cmp
pop
sbb
mov
sbb
lret
rcr
cmpsb
or
mov
or
in
push
cld
or
sbb
cmp
mov
pop
les
lock
stos
pop
roll
inc
les
add
loopne
add
aam
mov
stc
ret
mov
pop
data16
xlat
pop
push
lcall
and
or
mov
out
gs
jne
or
add
loope
stos
pop
mov
push
xchg
xor
mov
or
lea
mov
or
lret
bound
cmpsb
jne
xor
js
imul
dec
inc
xor
insb
add
add
add
inc
push
add
imul
add
push
add
add
add
add
push
add
push
add
jb
addr16
add
data16
add
jno
add
aaa
add
add
add
add
add
ja
xor
add
push
add
add
dec
add
add
data16
push
and
add
and
dec
pop
mov
test
lock
xor
lcall
push
sub
dec
cmp
or
aas
adc
daa
jg
cmp
cmpsb
cli
add
adc
xor
mov
sub
or
sbb
pop
push
rolb
and
pop
and
xchg
pop
mov
mov
decl
test
add
gs
outsl
lret
lahf
mov
or
jb
fs
je
aas
sub
shrl
sbb
call
sub
or
sub
es
mov
push
mov
aam
out
lcall
es
inc
cs
mov
xor
mov
mov
adc
pop
sub
push
xor
out
xor
outsl
or
lods
adc
mov
leave
inc
xor
or
inc
sbb
pop
pop
aam
or
pop
jns
or
dec
mov
mov
mov
push
pusha
mov
movsb
pop
fs
and
outsb
mov
je
mov
js
mov
and
test
enter
int3
and
mov
mov
sub
fsubrl
cmp
mov
and
stos
outsl
mov
in
dec
rorb
cmp
and
stos
outsl
les
cmp
enter
inc
and
stos
outsl
int3
or
cmp
rorb
mov
and
mov
aam
outsl
nop
push
stos
outsb
add
fdivrs
or
loopne
cwtl
cmp
or
and
test
and
or
mov
adc
imul
sbb
lock
stos
outsb
clc
or
mov
and
sub
and
outsb
xor
mov
cmp
pop
xor
and
inc
or
mov
dec
pop
push
stos
outsb
pop
or
mov
pusha
pop
js
and
push
in
dec
jo
mov
and
mov
sbbb
xor
and
mov
nop
pop
test
xchg
and
mov
mov
and
mov
mov
enter
int3
movsl
mov
push
pop
repz
xor
mov
push
shrb
outsb
fmull
mov
in
shlb
and
stos
outsb
in
or
mov
hlt
pop
loopne
clc
and
stos
outsb
cld
or
xchg
or
cmp
lock
or
and
outsb
clc
or
mov
and
add
sbb
or
mov
sub
adc
sub
sbb
mov
cmp
and
cmp
sub
mov
dec
pop
cmp
and
sbb
mov
inc
or
xchg
das
daa
dec
cmp
and
or
cmp
insb
addps
and
or
cmp
ret
movswl
push
push
push
push
push
sub
addb
pushf
or
lods
es
inc
call
cmp
insb
xor
call
insb
and
xor
add
mov
cmc
sub
movsbl
nop
push
add
test
or
sub
add
add
sub
add
push
xchg
cld
lret
add
inc
pushl
insb
push
mov
cmc
shlb
decb
jno
push
mov
enter
fistpl
je
shlb
and
cmp
and
pop
mov
aaa
lcall
add
es
and
mov
sbb
pmaxub
jmp
mov
inc
into
cmpsb
rcrb
mov
sub
fiaddl
and
lds
pop
ret
mov
dec
sbb
js
add
and
iret
sbb
pop
cmp
add
dec
push
and
mov
or
push
cmp
push
adc
ret
mov
dec
xchg
popf
andl
jno
pop
loope
push
pop
and
orl
pop
push
lea
push
in
xchg
jne
outsl
inc
push
mov
hlt
pop
fs
jge
mov
leave
ret
push
out
in
push
push
lea
push
dec
cmp
pop
cmpsb
in
es
lret
xor
call
imul
inc
or
adcl
scas
and
call
mov
mov
lret
scas
dec
or
addl
mov
jae
popa
jbe
mov
sbb
gs
adc
mov
inc
sbb
mov
sbb
sarb
jge
add
test
cmp
fs
sbb
lea
mov
in
push
ljmp
push
jb
gs
jl
mov
cmp
adc
push
push
or
popf
sub
dec
or
sub
sub
or
dec
mov
daa
and
test
popa
fadd
repnz
lods
pushf
xor
xorb
popa
lods
mov
mov
in
dec
and
cs
sbb
sub
aaa
decb
or
mov
mov
cmp
xchg
ljmp
sbb
cmpl
mov
dec
data16
xchg
loopne
scas
add
push
push
add
xor
xor
cmpsl
leave
fcmovnbe
add
pop
pop
mov
push
mov
push
mov
inc
or
shll
adc
dec
pop
imul
leave
xor
push
nop
iret
add
xor
inc
les
fstpt
cmp
lret
mov
mov
cmp
test
jne
mov
pop
in
sbb
rolb
notb
xchg
add
addr16
mov
jo
jmp
push
insb
movsl
mov
mov
or
push
jmp
in
fcomps
mov
addr16
jl
lock
mov
pop
pop
push
call
mov
or
lods
sbb
and
mov
and
leave
cmp
in
call
jmp
std
lds
cmp
je
ljmp
je
sub
gs
leave
mov
pusha
outsl
in
lret
sarb
mov
pop
inc
add
push
out
mov
mov
jne
pop
sti
xchg
mov
mov
decb
dec
push
leave
jle
in
nop
mov
jns
lods
data16
decl
lret
sti
outsl
iret
aas
xor
cmp
pop
aaa
mov
cmp
stos
ljmp
and
call
adc
filds
or
inc
mov
rcrb
mov
lahf
lock
test
add
add
jge
insl
pop
cwtl
sbb
and
xor
lods
popf
or
adc
mov
stc
in
mov
dec
xlat
sbb
bswap
cmpsb
sbb
push
icebp
xor
jns
mov
mov
scas
loopne
push
or
stc
jne
loop
push
cld
sbb
hlt
clc
shrb
xchg
je
data16
dec
inc
sub
jb
inc
and
aaa
cmp
or
jmp
mov
je
mov
pop
pop
jmp
fsubs
popa
in
in
sub
movsb
lea
sbb
decl
dec
push
xor
fs
or
xorl
or
mov
outsl
fimull
sub
lfs
lret
mov
xchg
es
mov
call
sbb
and
call
or
out
mov
mov
mov
or
lock
add
xor
lea
jno
rcrl
dec
push
call
addr16
hlt
sub
sbb
cld
insl
dec
pop
mov
aad
pop
push
sbb
fsubrp
or
mov
loop
call
mov
repz
test
jge
mov
xchg
jl
mov
jae
sti
or
hlt
rorl
rorl
mov
cmp
andb
push
fs
jg
call
mov
sbb
aad
jle
mov
fnstcw
aas
adc
movsl
arpl
int3
rclb
test
cmp
pop
call
and
lock
rcr
jge
icebp
push
hlt
jmp
lock
jno
mov
popf
dec
clc
cli
and
sub
mov
cmp
divl
jne
mov
iret
sbb
and
add
xor
or
push
adc
add
add
mov
mov
push
jne
pop
divl
jno
add
mov
lods
cmp
mov
cmp
mov
jg
in
data16
imul
lea
clc
pop
xor
shrl
xor
lea
stc
mov
adc
aaa
fisubs
aam
xchg
xor
fstpt
ds
mov
jo
sub
es
sbb
or
pop
mov
cmp
cld
cmp
sbb
enter
ja
jl
mov
insb
push
je
push
andl
add
fstpl
or
pushf
lret
mov
dec
ret
xchg
cmp
test
or
lret
jne
scas
divl
cs
push
mov
mov
push
call
out
aam
jne
into
in
jbe
call
sbb
pop
xchg
jp
adc
imulb
int
jo
imul
jmp
orw
ljmp
mov
out
loope
xchg
in
add
xchg
movb
gs
or
ret
ja
add
mov
int
lcall
enter
mov
lret
arpl
or
fadds
test
je
push
push
addr16
fmuls
enter
fsubr
aas
js
adc
cmp
aad
sub
mov
inc
mov
leave
js
push
push
sub
test
jne
cmp
mov
bound
and
imul
push
inc
or
in
repnz
cs
movb
mov
dec
mov
push
test
mov
add
inc
cmp
or
inc
int
fucomip
sbb
cmp
pop
loopne
mov
jno
fs
popa
mov
lock
test
movsl
rcll
push
jecxz
call
in
xor
pop
lea
add
inc
cld
test
cmp
add
test
pop
rcl
push
inc
scas
fsubrp
dec
or
mov
insb
lock
sub
cmpsb
dec
pop
les
sub
inc
in
mov
fmull
cmp
push
push
push
call
in
cmp
aas
push
sub
cmp
out
dec
ljmp
mov
leave
lock
nop
shrb
lods
pop
sbbb
leave
lods
jne
gs
test
sub
xchg
movsl
push
mov
dec
push
es
sahf
call
das
imul
cwtl
movsl
mov
inc
or
mov
add
mov
adc
lret
mov
repz
sbb
int3
inc
and
test
mov
jbe
or
mov
sbb
push
call
add
jae
lret
cli
sbb
test
or
testb
dec
lock
or
xlat
test
mov
lret
sbb
mov
pusha
inc
inc
jge
aam
inc
movsl
jecxz
or
test
fistps
jl
xsave
inc
test
les
stos
dec
fidivs
mov
xor
pushl
adc
push
data16
sbb
dec
sub
or
jle
pop
lock
jne
xor
sbb
lea
into
push
or
jbe
dec
push
jae
fs
dec
ljmp
movsb
test
and
repz
mov
fnstcw
outsl
out
in
cmc
leave
shll
cmp
int
shll
das
mov
inc
lret
jne
cmpsb
push
sub
push
cs
cmp
adcb
xchg
add
inc
xchg
sahf
xor
lods
imul
lahf
cmp
cmp
mov
push
imul
call
adc
cmpsl
popa
das
out
cltd
das
inc
test
dec
clc
fwait
imul
pop
or
pop
sbb
call
sbb
lods
mov
bound
std
mov
call
or
or
and
dec
mov
jmp
ss
mov
push
push
in
xor
jo
push
scas
es
test
jmp
xchg
jle
or
add
xlat
mov
sarl
sbb
pop
rclb
and
out
or
jnp
fisttpl
pop
sbbl
sub
in
lds
or
loop
addb
mov
imul
orl
call
insb
dec
stos
pop
pop
shr
mov
pop
ljmp
push
mov
dec
xor
jl
imul
rcrl
sahf
or
add
jl
hlt
clc
or
lret
data16
or
out
aas
mov
cmpsl
je
sub
jo
cld
testl
dec
mov
out
sub
cmp
add
sbb
arpl
adc
ds
outsl
loopne
mov
ss
push
icebp
pushf
cwtl
pop
or
or
lea
scas
cltd
idiv
push
movsl
push
xchg
out
inc
push
sub
lea
push
stos
outsl
adc
jl
or
and
dec
test
dec
push
fildll
gs
lahf
jmp
jnp
insl
sbb
es
in
inc
mov
pop
bound
pop
pusha
fs
push
mov
sbbb
iret
pop
into
gs
lea
in
ds
xlat
es
jecxz
lahf
jb
mov
movsb
push
sbb
sub
and
icebp
inc
imul
push
call
xchg
sahf
xchg
mov
xor
pop
in
in
inc
movsb
jmp
mov
xchg
sub
fdivr
sbb
push
pop
cmp
aaa
pop
je
jns
sbb
xchg
or
ja
or
mov
mov
mov
je
stos
sub
es
cmp
out
loopne
sbb
mov
aaa
lds
jle
mov
pop
shrl
mov
pop
push
pop
lret
inc
into
mov
pop
pop
or
fdiv
adc
addl
mov
dec
inc
in
and
pop
pop
push
cmpsb
ret
adcb
cmp
ja
pop
hlt
xlat
out
add
aaa
loop
and
rorb
pushf
imul
or
push
mov
out
pop
adc
add
test
mov
jp
arpl
push
adc
inc
or
inc
jecxz
movsb
pop
insl
jmp
lret
adc
add
xchg
in
push
call
or
or
dec
das
mov
imul
adc
test
call
push
cmp
pop
jnp
mov
aam
aad
mov
frstor
test
lods
cmpl
je
mov
iret
mov
lods
xchg
xor
add
mov
or
js
push
out
mov
addr16
mov
adc
sbb
pop
cld
mov
cmpl
je
push
and
dec
xor
fimull
push
call
int3
and
int3
pop
or
jp
lods
lret
pop
call
cmp
push
hlt
mov
in
add
jno
adc
push
cmc
jp
cld
sbb
imul
call
xor
jp
decb
pop
xchg
jmp
les
cmp
leave
inc
inc
dec
rorb
or
cld
ds
popl
rclb
mov
mov
push
movsl
sub
inc
jne
in
pushl
sub
dec
mov
lock
scas
dec
pop
sahf
stos
mov
call
test
aam
out
inc
mov
mov
pop
jle
xor
cltd
add
fwait
push
sub
popf
stos
loopne
and
xor
addr16
cmp
adc
and
shll
cmpsb
sti
insb
adc
mov
xchg
xorb
call
out
ds
cmc
repz
in
aam
scas
inc
enter
daa
add
mov
cmpl
push
mov
loopne
test
jne
out
cmp
cmp
shrl
mov
icebp
lds
jmp
jnp
insb
fucomi
sub
push
xorl
call
mov
add
mov
jno
mov
and
or
insl
sub
push
int3
xchg
xor
cmpl
pushf
popa
cs
decl
stos
outsb
mov
fimuls
daa
adcl
aas
sub
fisttpl
fs
bound
cltd
cmc
mov
jns
push
pop
int3
jae
addl
iret
or
sub
pop
inc
dec
mov
or
call
gs
or
jnp
popa
popa
jns
fcomps
mov
dec
cmp
cmp
mov
cmpsb
ja
sbb
movsb
bound
pop
mov
jle
movsb
shll
jmp
out
shll
jp
dec
pushf
jb
loopne
es
and
xchg
or
ljmp
test
outsl
mov
test
mov
adc
lea
les
mov
jge
cmpsb
loopne
bound
lds
adc
xchg
mov
mov
adc
test
inc
cmp
mov
mov
cmpsb
or
mov
sbb
cld
jmp
lahf
loope
xor
sahf
pop
ds
enter
loopne
sub
stc
es
mov
lock
in
jmp
arpl
mov
add
test
std
pushf
mov
push
mov
jge
and
push
and
and
ss
ljmp
iret
xchg
mov
les
out
pop
push
xchg
xchg
push
insb
std
push
call
cli
addr16
pop
and
lret
adc
jl
xor
movl
ds
bound
imull
mov
aas
cmp
stos
std
xor
jmp
cmp
mov
sub
push
pop
ja
or
fsub
jl
icebp
jnp
mov
push
push
jne
or
inc
scas
mov
es
call
mov
adc
inc
or
sub
out
out
scas
cmp
lock
mov
gs
aam
mov
jle
lret
add
dec
push
sbb
and
and
popf
cmp
fmull
mov
stos
add
out
mov
cld
loope
push
rclb
mov
test
mov
shl
out
addr16
inc
cmp
and
mov
mov
test
cmp
and
mov
cmp
faddl
test
xchg
call
outsb
push
das
add
jne
orb
jmp
shrl
pushf
pop
xor
bound
punpcklwd
mov
sti
sub
mov
jl
cmp
je
sbbl
fstl
inc
add
cmp
jb
xchg
roll
in
bound
inc
push
add
ss
cmp
and
dec
or
lods
test
je
call
nop
mov
push
sbb
and
and
mov
fsubs
jmp
cmp
or
rcl
or
xor
popa
xor
mov
dec
das
jnp
mov
je
out
rcrb
push
jge
mov
outsl
loop
push
ret
xor
sbb
daa
imul
mov
fmul
adcb
fisttpl
arpl
or
cmp
or
test
xor
out
add
mov
insb
dec
mov
insl
ja
cmpsb
ja
mov
rcrb
loope
xchg
cmp
jne
aaa
pop
adc
pop
fistps
sbb
push
idivl
popf
push
dec
inc
cmp
test
lret
adc
push
pop
fcoml
sbb
or
in
lcall
aad
scas
call
arpl
or
in
pop
out
or
sarb
sysenter
mov
push
add
out
pop
subl
sbb
pop
les
cwtl
enter
addr16
imul
or
mov
into
and
jne
push
or
es
xchg
cmp
inc
and
clc
aas
add
push
add
std
push
wbinvd
sbb
jmp
lea
mov
or
repz
in
mov
add
sbb
ljmpw
pop
lret
xor
adc
xchg
iret
mov
insb
insl
xchg
fnstsw
fucomp
out
cmp
int3
rorb
inc
xor
jb
lods
shrb
roll
or
cmc
pushl
dec
or
mov
cmp
shll
je
xor
sbb
cmp
sahf
push
aas
fists
test
or
flds
jne
and
mov
pop
cs
jmp
mov
popf
and
pop
adc
imul
scas
add
js
or
shrb
and
loope
pop
pop
bound
pushf
fsubl
popf
cmp
jl
push
xchg
mov
sub
les
in
sub
jne
add
pop
mov
jno
jmp
iret
stos
popa
call
inc
je
pop
mov
inc
push
mov
mov
movsb
or
push
adc
cmp
clc
adc
shlb
push
mov
test
je
and
enter
dec
push
jge
or
jbe
push
push
or
adc
mov
enter
push
mov
mov
or
jl
inc
das
loope
pushl
jl
bound
add
mov
mov
repz
cmp
dec
xor
add
xchg
push
push
and
mov
call
jns
nop
ss
or
sub
add
flds
andl
dec
cwtl
lcall
lods
jmp
mov
mov
add
clc
mov
insb
sub
and
and
and
adc
or
or
loop
xchg
popa
mov
popf
xor
in
or
mov
lcall
dec
insb
add
push
cmp
lahf
and
call
aaa
into
call
dec
pop
mov
cmp
add
cs
jo
xchg
addr16
dec
gs
repnz
push
push
clc
inc
movsb
dec
mov
cwtl
xor
mov
dec
call
je
cmp
enter
and
loopne
test
adc
add
jmp
mov
and
adc
and
adc
nop
es
fsubr
sub
add
cmpl
ret
jg
sub
lcall
add
mov
enter
jnp
out
inc
push
data16
jae
fisubs
insb
scas
pop
int
add
add
addr16
dec
mov
jne
push
cmp
dec
mov
test
pop
test
pop
pop
xchg
pop
out
mov
push
add
pop
push
shlb
movsb
and
out
popa
add
pop
pop
push
or
or
decl
or
sub
sbb
aam
and
jne
rep
xchg
mov
adc
or
aam
jmp
rclb
outsb
pop
xchg
add
adc
sub
sarl
mov
pop
das
addr16
insb
fmuls
adc
je
gs
jns
sbb
cmp
nop
pop
sbb
pop
loopne
cmp
scas
rorb
inc
icebp
pop
sub
je
xor
jne
repz
jmp
sbb
jno
int3
cmp
enter
adc
dec
mov
xchg
mov
and
addr16
xchg
movsb
jle
out
cmpsb
js
sbb
sbb
cmpsb
mov
push
mov
jns
ljmp
out
fdivrl
sbb
int3
inc
in
jecxz
lahf
push
test
int3
frstor
mov
mov
fcompl
cmp
pop
into
mov
fmull
out
sub
add
jecxz
fidivrl
iret
push
mov
jmp
daa
data16
push
inc
popf
inc
scas
insl
or
hlt
aam
out
sub
sbb
mov
into
lds
fdivrs
ret
pop
jmp
mov
cwtl
sub
push
push
push
aas
pop
lock
cld
push
lods
push
imul
imul
cld
fucomi
out
scas
push
daa
mov
xor
stos
push
push
push
xor
adc
inc
popa
push
cmp
inc
aad
jg
inc
mov
test
adc
call
mov
loopne
mov
jmp
call
enter
arpl
push
inc
xor
adc
sahf
mov
mov
push
aad
mov
jne
mov
xchg
repz
jae
xchg
push
jecxz
sbb
xor
or
iret
shl
and
mov
cmp
lret
adc
test
scas
sbb
sub
push
push
mov
int
mov
int3
mov
loopne
std
pop
adc
dec
rcl
fstps
es
aad
fidivrl
repz
inc
mov
push
dec
loope
ljmp
or
xchg
lock
pop
xchg
sub
cmp
in
or
call
mov
cmpsl
leave
rcrb
xchg
aam
sub
and
dec
or
aam
dec
sub
inc
fisttpll
fnstcw
call
fadds
cld
pushf
scas
inc
insb
mov
pop
add
xor
inc
leave
mov
outsl
xchg
call
mov
enter
aas
std
mov
fmull
jns
inc
push
dec
cld
mov
fdivrl
in
nopl
add
sub
mov
popf
jns
ds
inc
dec
jne,pt
lahf
or
and
aas
ss
ret
rorl
xchg
dec
call
jno
lock
in
xor
lds
loopnew
adc
xor
subb
in
call
rolb
lods
mov
or
mov
int
aam
xchg
mov
sbb
outsb
jl
imul
xlat
aas
mov
and
test
inc
movsl
icebp
or
dec
enter
jno
lret
testl
push
adcl
out
aad
stos
out
data16
andl
dec
test
clc
lcall
adc
lods
shlb
jo
sbb
out
mov
setne
push
add
or
iret
xchg
insl
movb
insb
inc
add
cld
aas
scas
jne
mov
pop
xchg
insl
cli
xchg
cmp
dec
jne
dec
iret
add
ret
jmp
mov
arpl
dec
and
call
lret
inc
mov
mov
movsl
pop
out
sbb
clc
stos
mov
cmovno
mov
mov
add
shlb
cmc
in
inc
and
add
data16
or
das
pop
fmulp
rclb
dec
or
enter
push
pop
push
jb
rol
or
and
call
into
jecxz
bound
nop
push
mov
add
pop
arpl
pop
stos
jecxz
insl
jmp
push
jnp
or
cmp
push
aad
inc
push
aas
pop
jecxz
popa
xchg
or
flds
or
push
aam
push
push
aas
jbe
idivb
clc
mov
mov
push
or
sbb
sub
mov
xchg
cmp
adc
dec
dec
in
hlt
pop
push
mov
xor
add
inc
or
and
sbb
roll
test
mov
xor
stos
in
sbb
inc
and
pop
data16
sbb
in
mov
lea
inc
shrb
enter
cwtl
pushf
lods
mov
sub
jmp
add
adc
in
rcr
xchg
mov
dec
pop
addr16
fmuls
jle
mov
pop
mov
xchg
mov
push
jmp
xchg
les
mov
leave
clc
addr16
xchg
and
mov
outsl
mov
call
incl
leave
jno
xchg
test
mov
mov
nop
call
xchg
xchg
stos
sub
xorl
out
mov
dec
dec
push
aaa
shrb
xchg
rcl
jge
fsubr
adc
cmp
lea
add
jo
add
inc
add
xor
jno
jae
jne
add
add
insl
jne
insb
jae
push
inc
add
push
add
add
add
add
add
add
cmp
add
add
dec
xor
add
pop
inc
push
ja
bound
jns
add
outsl
add
add
add
add
push
add
add
add
add
push
add
xor
add
xor
add
data16
inc
add
insl
pop
sub
adc
arpl
or
dec
push
jae
pop
test
rolb
mov
call
sbb
stos
hlt
and
add
mov
test
ret
sbb
ret
ja
mov
cmpsb
jb
divb
pop
repz
jne
jecxz
or
jnp
jns
pop
fwait
cmpb
inc
cmp
ss
cmp
mov
sbb
insl
insb
jo
je
ds
js
bound
cmpl
movl
fistl
call
mov
out
lods
sub
xor
movsb
pop
jnp
sub
xor
call
mov
adcb
in
dec
les
push
fdivrs
les
adc
push
xor
pop
xchg
sbb
pcmpgtd
and
add
cmp
jae
mov
shlb
shrl
cmp
dec
and
or
leave
xchg
push
or
lret
xchg
add
dec
cld
hlt
loopne
sub
stc
outsb
lods
pop
push
or
mov
sbb
stos
icebp
mov
push
jmp
stos
ret
adc
xchg
sub
adc
sbb
jne
mov
loope
cmp
sbb
je
mov
sub
fildl
ret
dec
popf
adc
mov
call
scas
cmp
test
xchg
addl
sub
mov
jmp
iret
mov
outsb
mov
xor
aas
rcrl
adc
popf
cmp
sub
mov
loopne
or
sub
cmp
shll
jbe
enter
mov
sbb
je
jge
jns
and
jl
popf
gs
je
or
cmp
jmp
add
xchg
push
or
out
pop
pop
dec
movl
rcr
testl
push
sbb
adc
cld
sub
jmp
sbb
mov
mov
imul
add
jle
mov
and
lahf
pop
xor
das
add
add
or
leave
xchg
sub
fld
sti
or
ret
adc
das
leave
outsl
or
mov
test
cmp
scas
mov
and
call
adc
ret
jg
out
lock
aad
pop
and
xchg
adc
xor
xor
leave
adcl
lea
lret
mov
daa
je
mov
cmp
fldl
sbb
shlb
fsubl
ret
cmp
js
cs
call
mov
sub
aad
hlt
sub
in
xlat
mov
pop
xlat
jg
xor
push
cli
mov
js
test
cld
insb
call
jecxz
je
mov
out
inc
cld
sub
call
xchg
push
or
mov
sar
divb
sbb
xor
imul
je
in
inc
es
imul
or
outsb
add
mov
out
addr16
sbb
pop
roll
test
xchg
movsl
dec
ljmp
cmp
mov
xor
sbb
dec
aam
cmp
push
cmp
fimull
adc
mov
cmp
push
add
push
popl
cmp
out
adc
iret
add
add
mov
cld
cmc
movb
shlb
cmp
pop
inc
aaa
imul
aad
add
bound
int3
mov
insb
test
cld
imul
outsl
arpl
push
mov
fsubs
mov
push
leave
cmp
arpl
mov
mov
test
mov
jnp
aaa
cmp
push
iret
gs
es
test
mov
cmp
fimull
cmp
xchg
test
hlt
aad
or
mov
lods
leave
ljmp
test
rorl
test
or
mov
or
jb
dec
jmp
out
sbb
decl
ja
add
pop
outsl
mov
mov
xchg
mov
add
jg
pushf
lods
push
dec
xor
pusha
sbb
imul
mov
mov
mov
and
mov
jecxz
or
addr16
test
test
pop
add
js
jbe
push
cltd
insb
iret
cmp
insb
setp
mov
push
movsl
push
dec
push
or
mov
inc
mov
data16
clc
mov
inc
xor
or
popa
outsl
jbe
or
out
pop
and
js
mov
or
or
lods
lock
add
mov
das
or
adc
iret
or
enter
mov
mov
dec
ret
dec
cwtl
mov
bound
shl
mov
mov
out
outsl
mov
insb
test
mov
add
cltd
ja
mov
sub
fcompl
cmp
push
jmp
cwtl
out
jecxz
sub
add
je
sbb
sbb
pop
fwait
mov
jl
inc
cmp
cmp
jne
ficompl
shl
sarb
pop
test
sti
and
je
imul
imul
cld
mov
push
ret
and
or
cltd
testl
repz
push
mov
test
push
int3
movsl
add
pop
jne
data16
xchg
sub
rcr
in
lock
mov
mov
sub
push
inc
rorl
and
dec
jle
jne
shll
mov
negb
pop
ljmp
cmp
pop
sbbl
cmp
cmp
sahf
call
pop
std
sub
sbb
lahf
or
mov
in
fidivrs
dec
out
data16
xlat
aad
xchg
sbb
roll
cmp
or
jno
inc
cwtl
pop
and
hlt
mov
mov
mov
push
icebp
jmp
xor
jbe
iret
scas
dec
das
add
adc
inc
leave
shll
movsl
js
xor
jne
sbb
lahf
push
jg
ds
cmp
hlt
daa
mov
pop
cmp
pop
leave
bound
add
in
ret
pop
mov
pop
inc
jge
mov
call
rolb
sub
or
hlt
stos
dec
aas
add
repz
cld
mov
mov
pop
jmp
mov
push
push
add
mov
jmp
cmpsb
push
cmc
mov
int3
or
pop
add
sti
xor
jg
cmp
ds
sub
fisttps
nop
fdivp
push
out
int3
xor
jno
or
lock
jbe
mov
jmp
jp
lock
mov
les
mov
ja
mov
inc
test
cmp
fcoms
push
mov
shrl
inc
jbe
jmp
pushf
adc
in
es
sub
xchg
mov
ljmp
or
push
aad
pushf
pop
mov
pop
cmc
push
sbb
call
sqrtps
mov
es
jge
fwait
aas
mov
mov
sub
and
inc
repnz
cmp
loopne
pop
sbb
mov
shl
sbb
xchg
add
imul
gs
add
daa
sbb
push
fwait
push
sub
xchg
sbb
mov
popa
es
imul
call
addr16
rcll
jecxz
outsb
inc
adcl
je
popa
mov
or
cmp
scas
cmp
addr16
fs
orb
shll
insl
or
es
sarb
shr
xchg
mov
and
psubusb
sarb
lods
shlb
fwait
mov
jnp
call
loope
pusha
shll
or
jne
dec
inc
call
lea
or
jmp
pushf
xlat
lret
aas
shrb
mov
imul
arpl
gs
pop
pop
ret
jns
dec
xor
push
push
fsubl
mov
cmc
mov
call
std
cmpsb
push
xor
cmp
clc
inc
lret
cmp
mov
stos
scas
aaa
jae
aad
leave
pushf
aam
sbb
jae
rcl
loop
jbe,pn
mov
shll
pushf
jnp
out
in
call
pop
gs
or
test
test
std
cld
adc
cld
lods
jae
scas
cmp
into
pushfw
ret
das
mov
jmp
jne
mov
out
mov
mov
jbe
lcall
pop
mov
ret
cmp
pop
test
les
mov
pushf
lret
out
and
mov
lcall
pop
pop
pop
xchg
in
es
mov
pop
add
hlt
jl
or
je
or
jbe
pop
or
xchg
lahf
push
add
mov
loope
pop
out
add
adc
xchg
ds
pop
pop
ret
decl
fwait
out
jg
dec
and
lock
dec
cmp
mov
test
jl
add
jmp
mov
aam
mov
test
mov
lds
pcmpgtb
mov
cmpb
cmp
mov
cmp
sbb
test
shll
sbb
add
mov
or
dec
dec
inc
pop
adc
ds
xchg
pop
iret
in
sub
sub
and
mov
or
inc
or
jb
aas
push
mov
das
mov
pop
je
test
adc
xchg
cmp
mov
in
imul
outsl
popa
lret
outsl
xchg
ret
cmp
cmp
mov
sbb
out
subl
jl
call
lds
movsl
in
jmp
movsb
push
jmp
mov
data16
and
sub
or
sbb
pop
xor
sbbb
addl
adc
adc
add
push
mov
and
aas
add
inc
mov
aaa
and
and
es
shlb
ds
call
mov
lcall
fmuls
xchg
adc
sub
mov
add
fbstp
shl
mov
push
pop
sbb
call
cmp
arpl
icebp
sbb
je
stos
andl
ss
or
cmp
es
jge
mov
or
inc
iret
mov
jbe
sarb
or
cli
jg
cmpsb
es
lret
xor
stc
add
cli
sarl
mov
lods
es
call
or
mov
or
scas
pop
int3
mov
notb
es
sarl
lea
mov
adc
sbb
mov
and
pop
add
imul
mov
xchg
sbb
jg
lea
adc
push
iret
iret
jb
pop
xchg
inc
xchg
add
xorb
sub
pop
sbb
pop
add
dec
xchg
mov
add
sbb
push
aad
nop
and
das
test
sub
pop
prefetchwt1
or
repz
rol
popf
arpl
addr16
cmpsl
shll
add
rorb
hlt
mov
add
add
or
shll
popf
rorb
cmp
mov
jae
adcb
shl
mov
iret
clc
call
mov
aaa
out
call
cmpsb
es
lock
adc
adc
call
jb
inc
nop
dec
pop
mov
imul
push
add
push
push
call
cmp
mov
fdivl
or
mov
loop
cwtl
or
pop
int
rclb
add
adc
dec
hlt
std
insl
or
fistpll
test
jge
nop
cmc
pushf
mov
lock
fnstsw
and
inc
jmp
int
xchg
aaa
andl
xchg
lods
sbb
jmp
psubw
cmp
push
mov
je
lock
pop
jmp
mov
scas
je
mov
and
mov
call
pop
add
call
das
mov
lods
and
xor
cmp
stos
inc
cmp
pop
push
bound
jp
int
je
aad
lds
cmp
aas
andw
push
mov
pop
aas
iret
insb
in
loope
call
pop
imul
in
inc
incl
mov
out
jmp
shll
call
ficompl
mov
pop
xor
repz
ss
iret
sbb
jle
mov
movsb
in
jnp
sbb
lahf
mov
push
xchg
in
ret
cmp
mov
adc
loop
pop
popf
mov
in
mov
das
cmpsb
popf
xchg
adc
lret
dec
in
out
mov
inc
add
cli
aas
pop
inc
out
mov
sub
xchg
sti
xchg
mov
mov
out
js
iret
add
cmp
nop
mov
jo
jmp
add
imul
sub
push
movsl
notb
add
insb
pop
push
lods
fimuls
outsl
ja
sti
in
mov
mov
push
dec
ret
or
push
loopne
sub
sbb
and
shl
movsb
mov
inc
mov
mov
sub
pop
sbb
mov
sub
jg
in
inc
jb
je
and
testl
push
mov
aam
aaa
fs
incl
xchg
sbb
xor
pop
jnp
fnstsw
rolb
ljmp
jnp
jg
bound
sahf
nop
scas
call
mov
push
ret
test
cld
add
enter
hlt
cli
mov
insb
jnp
loopne
add
out
je
jg,pt
test
call
call
lea
movsl
std
subb
pop
out
js
push
jne
ds
jl
imul
scas
pop
jle
imul
inc
dec
add
jl
inc
imul
or
pop
movsb
idivl
add
ss
ficoms
dec
iret
mov
loopne
mov
repz
jnp
adc
sbbl
setne
push
stos
and
push
xchg
rorb
int3
add
jnp
clc
mov
xchg
test
add
mov
es
push
imulb
cmp
lcall
mov
and
push
outsb
push
daa
dec
xlat
lea
fisubl
orb
movsl
aad
int3
xlat
xchg
add
push
into
aas
push
push
dec
adc
ds
mov
incb
push
int
call
mov
pusha
iret
jne
lods
mov
fldt
lea
cmpsl
repnz
mov
repnz
mov
es
fisttps
js
xor
test
les
sub
mov
push
cwtl
scas
push
cmp
and
mov
es
dec
cmp
jg
leave
mov
sbb
fucom
push
rorb
and
sub
lret
push
iret
ja
fcmove
cmp
mov
mov
imul
sub
lret
cmp
int3
push
mov
sbb
cmpsl
insl
aas
mov
arpl
js
cmpl
dec
fisttpl
pop
pop
fisubl
in
sub
fiadds
nop
sbb
dec
aam
fwait
or
inc
adc
xchg
mov
in
jns
dec
mov
sbb
cld
jbe
enter
inc
fildl
inc
or
pop
std
push
push
add
push
ss
and
pusha
daa
push
or
push
cmp
push
push
adc
je
push
mov
or
sub
das
or
into
pop
jo
ljmp
repz
and
cli
cmp
mov
sbb
mov
aas
stc
ret
sbb
pop
pop
movsb
pop
mov
fsubs
push
enter
outsl
outsl
push
jns
enter
fidivs
xchg
pop
fsubs
sub
pop
and
mov
outsb
jecxz
add
sahf
out
daa
pop
jp
add
rcr
xor
mov
xor
cmp
icebp
sub
outsl
push
movaps
mov
jl
mov
and
add
add
loope
call
ljmp
mov
pushf
lock
mov
pushaw
js
cltd
imul
fwait
leave
mov
lahf
out
mov
lods
call
loope
jmp
lcall
fisubrl
ds
pop
ffree
enter
fmull
mov
ss
pop
cmp
jl
es
pop
push
jp
and
mov
roll
push
jae
and
dec
inc
or
xor
popa
lock
outsb
push
cmpsb
inc
rorl
or
shr
je
jnp
in
scas
sub
mov
cmpsl
jns
or
mov
movsb
imul
addr16
call
jne
mov
es
mov
repnz
rorl
cmpsl
pop
add
pop
mov
sub
cmc
call
lret
fndisi(8087
outsl
out
jb
dec
popa
ljmp
lds
add
into
sti
push
hlt
dec
cmp
call
inc
and
movsl
push
leave
adc
adc
dec
xchg
int3
out
test
or
mov
imull
sbb
insl
or
daa
and
lds
inc
pop
test
loop
mov
push
out
mov
pop
jns
fimull
mov
test
push
scas
gs
and
dec
adc
cmp
clc
xchg
cld
lret
cltd
cli
test
cmpsb
push
add
and
movsb
and
dec
jp
jl
clc
sbb
dec
jl
test
dec
and
jb
cmpsb
jmp
hlt
and
jb
xchg
xchg
add
sub
pop
or
mov
nop
call
or
pop
lcall
sti
cld
mov
repnz
lret
call
mov
or
xchg
movsl
adc
inc
leave
fcoml
bound
aam
pop
xor
test
mov
or
jmp
sbb
xor
shlb
cmpsb
dec
jbe
pop
jmp
sbb
or
add
sub
loop
ds
pop
dec
cmc
mov
mov
jge
mov
data16
ret
movsb
pop
dec
pop
add
imul
fisttpl
cli
mov
and
mov
jbe
xchg
mov
push
out
iret
inc
add
sahf
imul
mov
pop
dec
fsubr
shll
pop
jb
adc
dec
cmpsl
scas
cli
daa
test
sub
add
pusha
aaa
lret
cmp
cli
xchg
add
inc
sarb
setns
in
popf
add
call
xchg
jb
cld
fcomps
sbb
pop
adcl
adc
fxam
rolb
and
hlt
xor
pop
imul
push
jge
and
jo
aad
sar
ret
push
movl
mov
pop
popa
xchg
mov
push
arpl
xor
xchg
mov
jae
or
and
push
jne
mov
nop
test
mov
decl
lahf
aas
and
xor
lret
jge
neg
mov
sub
add
xchg
iret
ljmp
pop
jo
mov
movsb
setne
popf
pop
popa
enter
push
add
enter
dec
inc
lcall
mov
pop
test
cmp
and
shrb
cmp
add
outsb
dec
decb
cmp
and
and
fdivrl
push
call
jmp
in
je
daa
lock
adc
or
or
rclb
pop
fcoms
imul
outsl
xor
inc
dec
inc
addr16
xor
sub
out
in
call
mov
push
pop
notl
cmp
dec
shl
mov
das
sarb
add
call
fistl
dec
outsb
js
xchg
outsl
shl
mov
arpl
les
adc
jmp
xchg
add
aaa
or
xor
or
arpl
and
pop
pop
sub
daa
data16
aam
push
mov
xchg
xchg
mov
test
push
repz
ljmp
lock
and
outsl
mov
and
pop
cmpsb
jns
mov
cmp
add
jnp
test
imul
xchg
in
cmc
in
push
mov
adc
loopne
sbb
jnp
aas
rolb
xchg
pushf
stc
popa
call
addl
sbb
mov
pop
insl
sub
sbbl
or
lock
scas
mov
dec
jne
clc
aad
lcall
es
cmp
outsl
mov
les
pop
jg
push
push
in
js
xchg
mov
pushf
cmp
sub
add
call
sbbb
mov
popf
push
push
xchg
bound
fisubs
dec
add
mov
inc
pop
std
ja
shlb
push
aas
mov
push
xor
sub
mov
lea
cmp
cmp
push
int3
or
frstor
mov
mov
inc
cmp
jge
movsb
or
dec
adc
iret
mov
addr16
mov
xor
sub
repz
jmp
int
andl
aad
sbb
mov
or
call
inc
push
es
or
xchg
jecxz,pt
cmpsl
push
ds
push
sbb
pop
aas
push
repz
pop
mov
jno
loope
movsl
insb
js
repz
inc
scas
mulb
mov
loop
mov
cld
mov
and
pop
mov
sub
xchg
sub
das
mov
mov
sbb
rcrl
roll
mov
call
addl
xor
add
mov
outsl
cld
jecxz,pt
mov
sub
out
fwait
mov
scas
outsb
adc
jno
push
inc
add
call
fnstenv
or
shr
mov
repz
cmpsb
out
repz
adc
dec
addr16
jbe
dec
push
mov
fdivr
aaa
movsb
jmp
xchg
add
sbb
aad
retw
inc
sbb
lret
insb
push
addr16
fsubrl
addr16
andl
movl
adc
arpl
lcall
test
ja
popf
mov
rep
leavew
stos
cwtl
sub
mov
fmuls
cmove
jmp
stos
cmp
je,pt
push
imul
mov
loop
lock
push
inc
push
call
inc
mov
stos
call
cmp
cmp
mov
insb
iret
test
dec
stc
popf
ret
sub
pop
frstor
call
and
adc
jl
mov
and
mov
insl
out
mov
ds
mov
xor
imul
frndint
fsubl
cmp
lds
xchg
sahf
lret
jg
pop
sub
jl
cmpb
or
xchg
or
imul
fimuls
mov
or
jg
call
lret
inc
pop
mov
adc
push
shrw
xchg
addr16
cmpsb
in
pop
lds
mov
xchg
dec
insb
lds
out
mov
mov
andl
jmp
sbb
mov
arpl
jl
fs
adc
popa
fnstsw
pop
out
in
loop
sbb
lods
ret
int3
pcmpeqb
insb
add
pop
int3
dec
push
pusha
aaa
int
mov
cmp
adc
inc
push
fiaddl
test
add
or
inc
xor
push
adc
jbe
sbb
test
mov
outsl
orb
or
aas
inc
adc
out
pop
inc
insl
add
mov
gs
aaa
int
imul
sub
loopne
pop
into
stos
popa
sub
aas
adc
bound
inc
outsl
pop
jno
out
incb
mov
inc
cmpsb
and
movsl
ja
sti
pop
cmp
lods
test
call
gs
cmpb
sub
or
inc
fidivs
xchg
addr16
jl
push
inc
cld
sub
sub
lock
addr16
pop
fs
lea
fdivrs
jne
mov
lock
sbb
fwait
data16
sbb
iret
call
pop
daa
push
sub
repnz
add
add
and
sbbl
mov
push
push
mov
jl
cmp
out
mov
sbb
add
push
lahf
mov
add
fisttpl
sbb
xchg
imul
sub
pop
sub
arpl
shl
and
mov
or
push
xorb
jg
sarl
fbld
sbb
insl
fistps
sarb
fists
movsb
popa
or
int3
or
pop
xchg
ret
cli
test
xorl
enter
mov
or
and
roll
ficomps
in
scas
mov
and
dec
xor
js
lock
decb
sub
lods
bound
or
cmp
mov
add
push
adc
add
lods
stc
in
inc
dec
std
out
lret
jne
loop
rclb
xor
aas
mov
daa
cmp
pop
push
or
int3
xor
xor
ds
and
ds
inc
add
jno
add
nop
add
push
pushf
inc
push
mov
cmc
adc
cmp
jmp
mov
into
add
pop
out
pop
push
ja
out
mov
cmp
add
clc
lock
sarb
push
sti
je
mov
dec
or
add
dec
pop
push
cli
movlps
add
push
mov
lret
insb
outsb
xchg
xlat
call
mov
dec
push
dec
pop
dec
xchg
mov
out
gs
lret
pop
push
mov
xchg
lcall
xor
or
cmp
ret
cmp
mov
testb
and
mov
sti
dec
aam
or
cmpsl
jnp
int3
push
push
pop
outsl
es
dec
dec
pushf
pusha
fwait
push
iret
mov
jl
mov
mov
sub
xchg
push
mov
outsl
mov
jl
aas
xchg
mov
cmp
pop
cmp
or
push
lds
lock
xchg
inc
jl
mov
js
inc
push
bound
aad
call
repz
daa
cmc
jecxz
sub
mov
insb
push
call
mov
add
inc
sbb
pop
xor
push
pop
push
fs
inc
repnz
pusha
sbb
loop
mov
inc
sahf
push
movsb
dec
push
out
sbb
pop
push
or
jnp
add
lods
mov
into
mov
lock
add
mov
sub
mov
sub
rcll
mov
outsl
les
mov
sbb
pop
sub
xorl
je
fcomps
mov
inc
sub
mov
es
push
and
in
cmpsb
data16
imul
js
push
and
mov
adc
inc
jge
pop
out
out
sbb
leave
test
xchg
pop
mov
stos
mov
or
inc
cmpsl
inc
in
xchg
subl
bound
scas
dec
mov
repz
add
mov
dec
jge
pop
and
adc
cmp
sarl
lock
sti
movsl
mov
and
mov
xor
fisubrs
and
call
inc
movsb
icebp
and
pop
mov
adc
inc
cmp
ljmp
lock
lret
push
xchg
mov
jg
push
jmp
inc
pop
add
mov
dec
fcmove
incb
mov
mov
or
call
cmp
call
in
addb
les
adc
push
call
jecxz
das
and
fldt
jg
cmp
and
xor
test
xchg
mov
imul
mov
add
cmp
je
cli
or
cmp
stc
jb
xor
sbb
inc
aas
sub
movsb
aam
outsl
pop
jg
movsl
insl
sub
ds
jl
dec
mov
shrb
xor
je
xor
call
sbb
pop
fisubrl
jae
fwait
jg
push
call
fucomp
or
cmp
pop
lret
jne
xor
call
and
add
xor
pop
xchg
jo
sub
mov
dec
and
xchg
mov
xor
outsb
stc
test
outsb
inc
cmp
inc
xor
data16
or
push
pop
lea
cwtl
cmp
decb
push
pop
cmp
leave
and
call
rcrl
fisubs
xlat
sti
adc
jno
add
dec
add
add
add
imul
add
jo
add
add
add
push
dec
add
xor
add
jp
jne
xor
add
push
jae
imul
pop
add
dec
add
jo
popa
dec
add
add
add
add
aaa
add
add
add
add
jbe
add
inc
add
push
je
push
add
push
xor
jne
dec
add
add
push
jg
fimuls
test
sahf
in
jbe
pop
ds
sarb
out
sub
push
movsb
jbe
xor
gs
xor
outsl
and
mov
push
shrl
or
cmp
jecxz
mov
xor
sbb
and
andb
sti
sbb
test
mov
hlt
jbe
sahf
in
mov
mov
mov
insb
scas
bound
jg
sub
push
or
in
daa
clc
gs
sbb
sahf
nop
adc
lods
sbbb
xor
cmpsb
sbb
fstl
call
stos
test
inc
shl
shlb
arpl
mov
inc
das
add
adc
cltd
xchg
or
cwtl
jp
pop
clc
inc
lea
mov
jle
xchg
lret
xchg
or
adc
ret
xor
iret
xor
sbb
iret
ds
imul
sub
dec
int3
aaa
movsl
cmp
xor
inc
jae
nop
and
aad
cli
sub
cwtl
cmp
movsl
push
or
add
pop
addb
cmp
sub
sub
pop
inc
jmp
sub
push
inc
cmp
lret
adc
mov
cmp
sub
mov
fnstsw
fstpt
cmp
pop
cwtl
push
xchg
xchg
or
xchg
jno
and
jb
xchg
in
mov
cld
or
push
ds
xchg
sbb
push
sub
hlt
pop
cs
add
pusha
dec
jae
stc
inc
fisttpl
sub
out
mov
int3
cs
inc
test
mov
pop
jp
jl
fldl2e
jge
or
and
ret
and
mov
xor
fdivl
aad
imul
sub
xchg
ret
jmp
enter
push
inc
iret
xor
push
pop
add
xchg
cmp
cmp
pop
xor
jns
pop
sub
mov
aam
push
pushf
mov
mov
mov
and
adc
sub
xor
jmp
xor
pop
xor
mov
dec
les
xchg
movsl
sub
leave
sub
sti
fldcw
xor
add
or
sti
outsb
xor
and
mov
push
adc
in
pop
or
mov
mov
leave
xor
in
cli
mov
les
mov
pop
in
jecxz
fistpll
rcr
fidivs
ret
rcll
dec
adc
lret
and
dec
cld
dec
adc
fstpt
lret
cld
mov
sbb
or
sti
jno
pop
outsl
adc
fcoms
faddp
insb
push
ds
fstp
rolb
movsl
xor
je
daa
mov
std
and
cld
push
cmp
and
fsubrl
mov
or
jns
insl
xchg
test
mov
fisttps
adc
push
sub
mov
addr16
mov
xchg
in
data16
and
xor
movsl
nop
push
dec
mov
les
fldl
adc
call
dec
js
jae
lock
shlb
mov
incb
repnz
hlt
popa
testl
and
jae
mov
insb
jb
and
cmpsb
push
xchg
inc
sti
ret
in
pop
and
ss
bnd
pop
test
clc
push
and
inc
mov
cmc
movsb
mov
sbb
or
je
sahf
mov
ja
es
repnz
inc
push
test
mov
inc
mov
arpl
orb
dec
mov
pop
mov
out
push
std
add
or
and
jb
stos
or
push
rcrb
cmpsb
sub
je
fcomps
lock
and
jmp
rcrb
repz
jne
leave
es
shlb
dec
pop
mov
sub
loop
sbb
fs
jle
fldcw
test
sbb
mov
add
popa
xchg
and
and
fnstcw
lds
sbb
jbe
jmp
push
jle
scas
and
ja
jnp
fs
adc
dec
sbb
repnz
fcompl
iret
jns
rcr
out
out
xor
fs
cmp
scas
lods
cmp
push
in
xchg
mov
enter
add
lock
fmull
jmp
mov
fcomi
movsb
mov
jg
dec
mov
mov
push
sub
mov
iret
dec
aaa
popa
mov
bound
test
add
lds
mov
and
cltd
in
outsl
clc
xlat
dec
setg
fiaddl
fs
bound
out
stos
clc
sub
lods
fildl
jae
out
test
adc
mov
call
mov
sbbl
mov
mov
lret
pop
jbe
fisttpl
mov
or
test
sub
add
adc
mov
cmp
sub
mov
shrb
lock
js
rorb
push
subb
mov
add
sbb
mov
cmp
je
pop
loopne
xor
inc
sbb
jno
aam
shr
dec
xchg
pop
stos
pop
scas
pop
cmpsl
or
inc
or
add
lret
call
in
inc
xorl
ljmp
test
imul
push
popa
adc
in
dec
fadds
xor
mov
movsl
aam
movzbl
dec
lock
cmp
pop
sub
loopne
aam
push
add
adc
arpl
push
jmp
mov
fists
cwtl
xor
mov
jge,pn
scas
cli
movsb
clc
jb
pushf
cmp
xchg
insl
fnstcw
add
or
cli
and
enter
xor
cmp
scas
pop
ret
data16
fcomps
insl
je
mov
push
or
aam
jmp
repz
mov
rclb
call
push
xchg
out
and
cli
dec
mov
icebp
pop
pop
jns
sub
or
mov
mov
enter
sbb
mov
data16
mov
push
neg
pop
pop
xchg
fiadds
xor
out
inc
sub
shll
aad
addr16
lret
sahf
add
cmpsb
jne
push
lods
loop
pop
jo
call
pop
mov
test
test
in
push
orl
mov
sub
imul
ret
insb
rcll
loopne
xchg
lahf
mov
pop
jge
mov
jl
imul
xchg
jbe
xchg
iret
push
call
adc
movsl
cmp
push
sahf
std
popa
pushf
inc
mov
mov
cmp
sbbb
cmp
mov
mov
daa
int
call
imul
aad
adc
mov
stos
add
lret
sbb
push
test
mov
jb
orl
dec
je
add
ds
xchg
mov
sub
dec
std
mov
ret
cmp
fwait
or
sub
mov
dec
incb
in
adcl
sub
pop
je
jmp
rclb
stos
mov
push
cmp
js,pt
mov
or
pop
dec
in
cmpb
push
mov
ret
jmp
jb
jp,pt
jecxz
stos
es
and
dec
ret
mov
rolb
cmp
jmp
dec
mov
mov
xadd
movsb
mov
jp
hlt
loopne
or
add
rorl
subb
lret
lods
cmp
push
sbb
pop
mov
xchg
incl
pusha
add
imul
hlt
nop
push
sub
push
add
xchg
addr16
push
pushf
push
mov
xchg
insb
iret
mov
cmp
push
ds
sbb
outsb
push
push
mov
mov
or
fidivrl
push
je
arpl
xorl
inc
push
std
call
in
inc
add
or
addl
pop
cld
mov
push
mov
sub
stos
call
dec
lea
add
loopne
push
aam
xor
push
mov
mov
pop
jno
fldln2
jnp
jo
shrb
addr16
pop
push
pop
and
push
add
dec
add
pop
movsb
in
aad
mov
cmpsb
stos
add
popf
in
mov
pop
movsb
mov
inc
iret
clc
xchg
and
outsb
faddl
inc
fsubl
flds
xor
push
and
xor
sbb
mov
lcall
pop
in
jbe
sarl
and
outsl
mov
sbb
add
iret
mov
cmp
and
sbb
daa
add
or
add
xchg
ret
frstor
add
aad
or
cmp
push
jmp
outsl
mov
inc
mov
lock
xor
inc
mov
dec
movsl
int3
cmp
ret
xor
or
std
inc
ret
into
ljmp
inc
mov
push
fsubs
inc
and
movsl
cmp
inc
js
movsl
inc
mov
add
push
cmp
fimull
push
fisttpl
mov
xchg
cmp
jmp
cmpsb
sbb
inc
mov
inc
ret
iret
sub
adc
inc
ret
es
mov
sarl
mov
fs
js
sahf
cli
lret
or
shr
mov
adc
ret
xchg
dec
adc
push
test
jp
lods
mov
fwait
lods
and
and
mov
insb
int3
sbb
xchg
daa
or
jnp
jg
cmp
push
stos
xor
jl
fisubrs
sti
xor
call
adc
or
rorb
and
mov
aam
mov
push
push
xchg
mov
je
aad
mov
push
incl
js
cmp
les
pop
sub
mov
pop
and
adc
jl
fidivl
outsb
outsb
fdivrs
dec
ret
iret
mov
push
jl
fbld
xchg
insb
and
sub
mov
mov
adc
cmp
les
add
jl
push
pop
in
aaa
push
mov
fisubs
inc
shlb
popa
mov
aaa
movsb
xor
dec
push
mov
outsb
lret
jnp
dec
call
pop
or
test
test
mov
ret
cmc
aam
js
sbb
cwtl
mov
dec
mov
popa
push
sub
pop
sub
add
inc
fistpl
cmp
lcall
int
lods
and
fdivrl
sub
add
push
push
sbb
jne
lods
add
xor
xchg
lds
jne
cmp
mov
icebp
pop
jmp
or
xor
out
lret
call
outsl
aaa
fisttps
das
jmp
fsubl
fs
rcr
jbe
fisubrs
gs
pop
daa
mov
loope
push
mov
pop
fbstp
dec
ds
inc
mov
movsl
jbe
sbb
in
movl
sub
loope
xchg
les
jae
incl
jo
dec
movsl
push
clc
aas
lret
or
lcall
pop
nop
nop
arpl
sbb
jnp
push
inc
push
cmpsb
pop
stc
rorl
sub
mov
inc
cmpsl
addb
shr
icebp
sbb
mov
lock
repnz
add
pop
addr16
add
lea
mov
sahf
sbb
sbbl
xor
adc
lret
push
mov
or
sbb
mov
lea
ja
out
sub
dec
adc
mov
mov
shl
add
adcl
inc
adc
mov
aad
sti
mov
add
cmp
or
fdivrl
fidivs
dec
xorb
cmp
call
mov
cmpsb
repnz
mov
into
pop
or
aaa
loope
ja
dec
call
pop
pop
fcoml
addb
shrb
xchg
sahf
shlb
lods
sbb
push
and
lret
ljmp
addr16
sarl
pop
movsb
and
lods
jmp
fmuls
add
enter
push
jo
dec
dec
cmc
dec
push
into
cli
es
jnp
dec
call
jbe
cwtl
xchg
mov
adc
jno
pop
rclb
sub
mov
mov
sub
xlat
inc
or
shll
push
mov
insb
into
xchg
mov
adc
aam
loope
push
cmc
and
push
pusha
pushf
fcom
push
cwtl
popa
xchg
es
and
push
cli
mov
imul
mov
sbb
xor
xchg
cmc
mov
inc
fimull
addr16
pop
and
fadd
pop
cmp
cmpl
inc
clc
dec
aas
or
ds
mov
sub
mov
out
mov
fsubrs
cli
setae
lret
sahf
mov
cmp
aad
in
ret
and
not
les
rcll
add
pop
js
push
sbb
sbb
aad
loop
sti
scas
and
stos
sbb
dec
mov
das
call
adc
or
dec
inc
jb
nop
lret
pushf
sbb
xchg
insl
sti
adc
popf
aad
iret
mov
pop
gs
cmp
mov
shr
cmp
int3
adc
enter
rcrl
push
rclb
sub
add
push
test
dec
or
push
into
mov
push
hlt
jmp
rorb
arpl
das
mov
adc
call
add
pop
push
test
mov
push
cld
mov
fbstp
dec
ret
pop
test
les
cmc
and
stc
imul
shrl
or
inc
out
out
sub
mov
call
dec
jle
mov
adc
test
cmpsl
lret
sub
sbb
fisttpl
std
mov
cmp
sbb
jle
xchg
sub
or
push
add
aas
jo
sbb
xchg
pop
mov
roll
mov
aam
push
ret
or
cmp
subb
movsb
scas
aad
mov
and
inc
pop
jbe
mov
jle
mov
adc
orl
pop
mov
mov
or
mov
loopne
xchg
or
sarb
ss
imul
shrb
ljmp
sub
and
nop
imul
out
cld
stc
add
sbb
cs
or
and
call
jno
std
pop
iret
test
sti
cmp
fldl
or
dec
jno
in
sbb
rorl
push
or
rcrb
xorb
cmp
cmpsb
sbb
cltd
insl
imul
fists
jae
xchg
or
mov
sub
and
mov
mov
test
xchg
jl
mov
sub
mov
dec
inc
gs
cmp
bound
dec
jae
es
sbb
xor
call
daa
cmp
cmp
addr16
fdivrl
je
shll
mov
sbb
or
jge
stc
cmp
leave
sarb
ret
or
or
arpl
ret
loopne
push
pop
pop
es
adc
push
cmp
mov
iret
jge
mov
mov
or
and
iret
xchg
inc
mov
mov
insl
jecxz
cmpsb
cli
into
add
add
ret
enter
das
arpl
gs
psubb
gs
mov
jo
ret
in
fsubrl
inc
add
ror
jb
lock
and
adc
mov
and
loope
push
arpl
les
movsb
insb
add
sti
shl
cltd
xchg
test
push
mov
jp
mov
test
mov
in
out
psraw
jl
jmp
and
mov
or
xchg
aaa
loopne
in
enter
dec
in
ja
pop
aaa
out
stc
xchg
imul
cmp
stos
fs
jns
rorb
xchg
or
xchg
addr16
jmp
add
pop
xchg
arpl
mov
movsl
sbb
sbb
jge
in
adc
fcompl
inc
jg
out
mov
pop
and
arpl
jmp
shr
out
jg
icebp
cmpsb
in
cmpsb
jne
repz
loop
or
and
or
add
inc
mov
lahf
mov
mov
cli
inc
loope
hlt
punpcklbw
pmaxub
in
clc
mov
sub
ret
xlat
xlat
arpl
dec
cli
xlat
outsl
lods
dec
sbb
outsl
inc
addr16
call
cmp
mov
or
and
clc
rcl
mov
shrl
pop
mov
xlat
cli
mov
insb
ljmp
shll
inc
cmp
fmull
fisubl
sbb
loop
and
sbb
rorl
imul
daa
xor
adc
ret
clc
xor
in
dec
and
and
adc
sub
mov
cmp
aaa
call
addr16
lock
shrl
out
jmp
xchg
loopne
lds
mov
and
imul
jg
es
add
sub
loopne
add
lds
xchg
dec
add
mov
in
pusha
dec
add
idiv
cmp
pop
cmpsb
add
push
arpl
in
loope
daa
mov
push
ficomps
iret
shl
cld
pop
jg
mov
imul
fstpl
ret
maskmovq
or
test
call
sub
sbbl
push
insb
repnz
xor
insl
xchg
aad
and
fidivl
int
sub
mov
cli
daa
mov
shrb
aam
leave
addl
adc
in
sarb
and
int3
lea
sbb
das
or
sbb
mov
add
out
xor
scas
in
cmp
cld
push
mov
in
test
icebp
push
aas
iret
nop
idiv
cmp
adc
pop
or
dec
jp
int3
mov
push
xchg
pop
fcmovu
pop
pop
out
cltd
mov
hlt
jl
adc
sub
jbe
sub
and
sbb
gs
lods
les
call
adc
mov
or
jno
xchg
out
inc
and
lret
scas
insl
sbb
scas
sti
add
insb
ret
aas
into
sbb
or
inc
pop
imul
or
inc
scas
or
nop
or
notb
jge
hlt
adc
test
cld
or
and
xchg
stos
adc
adc
jo
jl
pop
cmp
cmc
loope
lahf
push
inc
xor
pusha
pop
and
mov
cmp
and
call
add
xor
fucomi
call
cwtl
test
lret
fs
dec
stos
shrl
cmp
xchg
push
mov
xchg
push
mov
add
sub
xchg
int3
push
or
dec
in
dec
lret
mov
pop
daa
aas
call
add
outsl
xchg
loope
pop
call
inc
test
pop
popa
jg
push
or
ret
mov
push
cmp
sub
out
call
xor
jb
push
mov
test
fwait
xor
gs
lcall
hlt
test
dec
aam
dec
jle
outsl
and
lock
loopne
sub
xor
mov
insl
add
fisubl
out
pop
mov
xchg
fistl
cli
imul
mov
adc
dec
mov
sbb
jle
pushf
cmp
mov
cltd
jle
xchg
out
sti
loopne
sub
dec
add
add
mov
fiadds
shlb
insl
push
or
fchs
cmc
popa
dec
adc
movsb
sub
insl
cmp
gs
lds
or
xchg
mov
shrb
xlat
sub
sbb
movsl
mov
push
enter
mov
dec
test
cltd
je
inc
sub
inc
pushf
pop
dec
scas
mov
mov
xor
jae
adc
call
jmp
xchg
sbb
mov
adc
add
sti
push
xchg
and
hlt
pop
lret
sti
push
xor
push
arpl
or
cmpsl
js
add
scas
scas
dec
sub
jmp
xor
pcmpgtd
loop
mov
adcb
pop
hlt
push
or
scas
repz
lock
outsb
leave
add
add
enter
jge
jne
jo
mov
add
inc
cs
mov
call
jp
lock
movsl
mov
adc
scas
pop
cmp
icebp
aas
sub
addb
ja
mov
cmc
pop
inc
sub
jns
dec
jo
cli
outsl
add
enter
idivl
dec
pop
sti
dec
sub
int3
push
adc
xor
add
and
xor
ljmp
jmp
add
add
ljmp
imul
add
test
jl
adc
push
dec
scas
stos
out
cmpsb
incb
das
lea
sub
pop
in
pushf
inc
pop
lods
sub
stos
sub
add
dec
rcl
cmpxchg
and
fcompp
aas
mov
cs
push
movzbl
sbb
in
decb
pop
pop
je
mov
xchg
mulb
sub
call
push
cld
in
xor
insl
sbb
addb
js
dec
jle
jge
es
pop
add
xchg
fadd
push
js
push
lahf
or
pusha
in
les
daa
fs
and
or
cmp
orb
cmp
and
or
cmp
nop
je
movsl
ret
mov
sub
push
mov
push
testb
pop
scas
push
mov
js
jmp
cmp
dec
into
mov
icebp
fldcw
inc
pop
leave
mov
pop
cmp
test
hlt
pop
dec
push
cmp
add
lods
push
pop
pop
dec
mov
pop
hlt
cmp
cld
shl
mov
orb
push
out
insl
scas
mov
inc
mov
and
xchg
mov
rcl
ucomiss
mov
jb
and
cwtl
aaa
pop
adc
out
ss
mov
shlb
mov
stos
shl
stos
movsl
insb
xchg
push
adc
adc
add
cmpsl
into
sbb
mov
xorb
das
ficompl
cwtl
call
hlt
push
aad
mov
nop
mov
arpl
lods
popf
jle
imul
cld
mov
mov
popa
pop
jne
fmuls
mov
xchg
scas
xchg
push
fs
xchg
repnz
mov
or
and
push
sub
sub
mov
cld
lods
mov
pop
popf
sub
push
pop
add
mov
push
and
xchg
xchg
dec
xor
call
adc
fiaddl
push
mov
push
inc
cmp
push
fsubl
mov
cmp
cmpsb
pop
in
push
jp
int3
xlat
mov
dec
bound
pop
cmp
lea
jne
lods
subb
dec
mov
push
or
push
and
push
xchg
aad
lret
fcomip
inc
and
mov
mov
xor
push
cmp
dec
movsl
adc
call
ds
ds
sbb
in
mov
test
test
adc
outsb
jb
xchg
jp
xor
shl
add
inc
mov
sbb
dec
fs
jl
mov
stos
shlb
iret
ss
test
test
push
ret
add
pop
cmpsb
mov
adc
mov
pusha
pop
addb
int3
ret
inc
mov
movsb
dec
push
xchg
and
mov
sub
xchg
test
pusha
les
insl
leave
aam
push
fildl
in
push
pushf
imul
jns
pop
aas
push
push
jge
lcall
idiv
ljmp
jle
sub
mov
sarl
std
push
ds
push
std
fldt
mov
test
decl
dec
jne
mov
jmp
lods
xchg
loope
xor
or
shrb
cmpsl
mov
mov
push
shrb
inc
add
mov
lock
inc
cmpsb
xor
push
or
pop
pop
jge
mov
stc
jg
in
push
popa
xchg
call
into
movsb
sub
rcrb
call
adc
fsub
and
push
cmpl
xor
or
lea
adc
ljmp
lret
std
mov
sub
cmp
sbb
repz
add
xchg
add
aas
in
jmp
and
aas
mov
mov
pop
push
xchg
cmp
in
mov
mov
jo
in
jl
fs
fadd
jae
xor
push
int3
movsl
sbb
call
jge
sahf
cltd
mov
or
xlat
dec
inc
jne
add
lea
push
clc
imul
push
mov
stos
lods
jl
lea
xchg
jg
and
sbb
icebp
mov
jb
mov
ja
jo
aaa
stc
mov
lret
out
cmpsl
rolb
clc
dec
inc
xchg
testb
jge
xchg
push
decl
mov
clc
lret
dec
mov
mov
xchg
inc
movsl
nop
inc
out
sbb
adc
sbbb
mov
ja
add
mov
jns
jne
xor
pop
mov
popa
movsl
xchg
pop
add
enter
mov
adc
dec
push
leave
add
lret
pop
sub
in
call
mov
lock
fwait
inc
imul
inc
daa
and
fwait
or
xor
sahf
mov
xlat
mov
orl
test
or
pop
js
push
inc
jle
and
cmp
xchg
adc
nop
decb
push
test
das
jmp
or
push
mov
iret
popl
pop
daa
cmpsb
clc
push
movsl
jl
pusha
fcoml
movsl
or
int
push
pop
add
jp
push
mov
xlat
pop
inc
mov
lret
jg
movb
pop
sub
ja
in
xor
dec
aam
pop
ret
pop
shll
cmpsl
mov
repz
adc
lds
pop
mov
mov
inc
mov
cmp
call
sysexit
cld
pop
push
rolb
in
js
jae
dec
mov
mov
cmpsl
cmp
jle
or
popa
and
les
jl
insl
mov
jg
cmp
add
sub
mov
lahf
insb
or
shll
add
mov
addr16
shl
int3
dec
xor
xchg
mov
adc
mov
jl
loopne
rolb
pushl
lds
and
pop
jge
clc
xor
outsl
and
adc
scas
loop
ror
jno
mov
dec
mov
push
nop
jmp
lcall
xor
call
fs
cmp
sbb
in
aad
call
xchg
xchg
push
idivb
stos
cwtl
lds
call
xchg
scas
xor
hlt
rolb
dec
push
adc
ds
push
push
fimuls
scas
call
cwtl
sbb
inc
inc
test
jecxz
je
or
jg
mov
arpl
fcmovb
mov
ror
loope
mov
push
push
das
add
pop
call
pop
and
push
mov
cmpsl
pop
vunpcklps
mov
stos
lcall
jbe
outsl
sti
sub
test
pop
jle
or
cmpsb
cmp
dec
out
sbb
test
data16
push
push
mov
test
jbe
mov
iret
mov
js
iret
jae
dec
repz
mov
jnp
inc
push
fidivrs
inc
stos
push
jb
adc
mov
dec
mov
inc
nop
push
sbb
test
dec
ret
pop
mov
dec
in
sbb
jg
icebp
inc
mov
mov
lahf
hlt
inc
imul
or
push
popf
clc
fcoml
pop
pop
xchg
ljmp
cltd
mov
inc
stos
lret
and
sbb
leave
call
xor
call
das
or
imul
test
jbe
push
lods
mov
notb
sbb
pushf
jp
push
mov
ljmp
lret
or
dec
dec
jno
popf
push
jge
lods
mov
xor
add
cmp
cmp
sbbb
cltd
push
xchg
int3
jmp
or
push
mov
pop
fdivrp
add
arpl
adc
jb
into
mov
mov
popf
dec
call
xchg
js
in
setne
subl
jnp
mov
adc
push
test
lret
cmp
lock
add
outsb
add
add
xor
push
add
insl
add
add
add
add
add
add
add
add
pop
add
push
push
inc
inc
pop
add
add
push
cmp
add
add
pop
add
add
add
add
aaa
push
add
add
add
add
add
add
xor
add
dec
dec
add
add
add
add
jo
push
add
dec
add
xor
xor
data16
jo
add
cltd
and
ja
std
popa
push
jno
das
sub
pop
insl
mov
outsb
add
movsl
xor
bound
mov
push
shr
sahf
sub
fdiv
jp
out
in
sbb
or
ret
sbb
fnsave
add
lods
frstpm(287
mov
or
jns
insl
push
in
pop
fsts
sub
shrb
movsl
add
das
sbb
fiadds
push
xchg
jg
xlat
int3
sub
sub
movsl
inc
hlt
mov
mov
arpl
push
or
popa
repnz
sub
cli
cmpsb
loope
add
add
pop
and
xor
xlat
push
mov
dec
daa
stos
mov
and
vpcmpeqd
mov
mov
sub
adc
push
es
movsb
and
pop
lahf
add
add
out
adc
mov
add
and
and
outsl
add
add
push
add
fldcw
jecxz
sbb
dec
pop
es
jg
pushf
sub
jae
insl
dec
lret
popa
sub
sub
or
xor
push
jg
and
cmp
adc
and
cmp
shrb
and
leave
mov
dec
jb
inc
fimull
cmc
test
cs
lds
cmpb
push
cwtl
push
shll
fdivs
push
subl
test
daa
mov
int3
jmp
add
jmp
xrelease
push
add
stos
repnz
add
sub
andb
add
shl
aaa
add
dec
out
inc
fstpt
add
inc
mov
fisttpll
sar
in
inc
popf
or
sti
lock
jmp
pop
repnz
add
cltd
adc
es
in
fnstsw
push
mov
mov
push
and
sbbb
mov
add
int
dec
xchg
jbe
dec
push
sbb
sbb
push
mov
sahf
dec
sub
in
adc
jns
adcl
cld
cmp
mov
inc
aad
insb
mov
add
adc
add
mov
daa
rcr
add
fidivrl
int3
cmp
cmp
ljmp
test
ret
gs
ja
mov
add
fiadds
and
push
in
xor
or
jns
jmp
sub
call
mov
out
push
jno
add
jns
and
cld
mov
xchg
mov
popa
add
je
int3
inc
icebp
fildll
sbb
mov
jne
xchg
xchg
xor
jp
out
jmp
pop
imul
stos
add
test
shlb
add
mov
and
xchg
adc
clc
outsl
repz
shll
xchg
jbe
pop
add
imul
dec
dec
mov
push
and
dec
sub
std
mov
sub
inc
sbb
mov
dec
adc
daa
repz
mov
push
les
add
sub
xchg
faddl
push
xchg
es
sar
arpl
std
std
push
xchg
push
add
xchg
ja
out
xor
add
xchg
pop
add
mov
jge
adc
daa
std
int3
mov
sahf
icebp
xor
lods
fbstp
sbb
sbb
push
add
sti
loope
adc
cmp
sbb
sub
or
inc
fmul
add
cmpsl
or
jp
push
lret
dec
pushf
mov
shrb
repz
jle
lds
test
insl
dec
fnstsw
dec
xchg
cwtl
dec
add
cmpsl
add
add
ficoms
outsb
mov
mov
ds
loope
push
sub
push
mov
jecxz
scas
das
adc
insl
mov
inc
adc
movsl
pop
and
loopne
stos
add
fsqrt
fildl
mov
sbb
pop
sub
imul
das
loopne
sub
sbb
add
push
push
cmp
ljmp
add
fwait
dec
mov
das
xor
into
sbb
mov
test
add
sbb
pop
add
jb
loope
jp
mov
in
imul
xlat
lcall
cmpsl
push
add
mov
fs
pusha
inc
xchg
scas
mov
ljmp
mov
add
xchg
sar
add
test
fisttpll
add
lods
pop
pop
add
lds
bound
hlt
push
test
mov
fs
adc
sti
dec
movsl
add
in
cmp
lahf
xor
push
adc
xor
lret
divb
dec
jge
leave
mov
add
movsb
in
testl
jecxz
lea
stc
repnz
add
cmp
mov
push
mov
ljmp
and
movsb
rcrb
les
cmpsl
sbb
jp
popa
push
jae
sub
outsl
ja
lock
int3
xchg
inc
lods
add
jge
sub
inc
push
mov
test
clc
cli
or
xor
sbb
and
sub
mov
dec
push
movsb
pusha
aas
je
andb
lods
bsf
in
movsb
hlt
cmp
xor
push
or
mov
lock
movsl
add
lods
or
adc
sbb
and
sub
inc
imul
or
gs
insb
imul
call
aaa
xadd
fsubl
imul
sbb
and
sub
movsb
dec
aas
push
or
mov
mov
or
imul
in
or
gs
movsl
add
cmp
unpcklps
and
sub
sub
xor
cmp
inc
cmovl
pop
movsb
fs
jo
js
cmpb
movsb
pushf
aas
test
mov
les
in
cld
cmp
cmp
adc
inc
gs
mov
jl
movsb
xchg
aas
mov
enter
lock
insl
cmp
movsb
sub
inc
or
mov
mov
movsb
fdivrs
lock
add
dec
dec
and
gs
mov
js
movsb
movsb
aas
mov
enter
in
paddb
xor
dec
aas
or
mov
fsubs
sub
dec
imul
pushf
gs
les
aam
in
cmpsb
scas
aas
dec
les
gs
cmp
dec
imul
or
pavgb
sub
push
les
and
xor
or
pusha
mov
test
movsb
int3
aas
fmull
in
gs
movsl
or
sbb
sub
dec
movsb
pop
aas
insb
or
mov
fdiv
movsl
or
hlt
and
aas
dec
or
mov
test
movsb
int3
aas
call
and
xor
dec
aas
or
cmpb
movsb
aam
in
hlt
imul
push
movsb
push
aas
or
mov
mov
call
inc
fsub
and
mov
push
pop
movsb
insb
aas
js
test
mov
mov
movsb
fdivrs
in
or
imul
movsb
in
inc
mov
mov
or
lock
add
cmp
push
insb
movsb
jl
mov
mov
imul
test
subps
mov
gs
in
lock
dec
das
adc
and
mov
pop
movsb
insb
aas
js
xchg
lods
mov
int3
movsb
aam
fmuls
loopne
in
mov
test
and
imul
or
mov
mov
rorb
fsubs
mov
xor
cmp
dec
or
bswap
imul
lock
cmp
sub
mov
aas
pusha
or
js
mov
cwtl
imul
mov
adc
or
imul
cmpsl
push
popf
dec
or
xor
and
sbb
daa
sbb
in
aad
adc
sub
sub
and
mov
add
aaa
cmp
mov
jge
imul
dec
insb
jno
das
in
fwait
inc
xorb
or
gs
mov
mov
orl
sbb
pop
or
or
bound
lret
arpl
aas
out
clts
sub
imul
out
jne
shl
outsb
mov
cmp
mov
and
sbb
ret
lods
les
popl
sbb
mov
dec
sbb
imul
cmp
imul
ds
cvttpd2dq
xchg
imul
push
xchg
imul
mov
gs
into
sub
pushf
setbe
and
and
shlb
sub
lret
es
adc
add
enter
xchg
in
mov
push
popa
stc
and
or
sub
into
xchg
or
lods
dec
popa
push
or
out
int
or
loop
outsb
mov
sbb
xor
push
pop
test
dec
jnp
cmp
xor
and
aaa
mov
aas
add
fdivrl
sub
rclb
mov
lods
stos
pop
lcall
je
cmp
xor
pusha
or
or
ret
jmp
sbbl
sub
scas
cmp
push
stc
leave
shrb
add
stc
cmp
js
or
in
lods
clc
cmpsb
and
pop
mov
decb
test
mov
out
cmpb
adc
cmp
imulb
cmp
inc
sub
xchg
sbb
ds
daa
jno
xchg
push
add
jecxz
pushf
movsl
sbb
repz
add
filds
popa
std
cmp
push
dec
pop
pop
cmp
or
jno
jp
andl
xchg
cmp
cmpsl
adc
xor
mov
leave
aas
invd
rcrl
sub
pop
inc
test
in
in
and
jnp
adc
xchg
add
push
iret
pop
sbb
in
mov
imul
jne
pop
adc
push
je
jl
push
mov
enter
das
and
xor
movsb
add
enter
adc
fdivl
or
xchg
leave
clc
pop
daa
test
cmp
sbb
add
mov
and
add
inc
pop
jge
mov
push
xor
fs
adc
faddl
xor
js
jp
popf
add
xor
imul
aas
enter
sarb
loopne
push
aas
call
adc
cld
pop
popf
sub
cwtl
pop
inc
popf
push
sub
push
xor
xor
cmp
in
mov
pop
push
or
addr16
dec
test
add
cmp
xchg
mov
mov
mov
gs
leave
loopne
call
mov
xor
push
xor
push
aaa
sbb
lea
cmp
cwtl
sbb
and
dec
push
sub
jl
sbb
xchg
iret
sbb
iret
sbb
gs
jo
shlb
mov
mov
mov
inc
mov
or
mov
inc
je
jbe
nopl
imul
rolb
jle
inc
jns
mov
enter
clc
pop
pop
add
adc
pusha
rep
sbb
mov
outsb
xor
mov
outsb
dec
in
rep
pop
std
mov
jo
imul
test
aas
push
sbb
int
test
in
sbb
mov
fsubs
insl
adc
add
in
repz
or
leave
pusha
inc
push
push
mov
nop
filds
push
cmp
mov
aas
adc
aaa
gs
sbb
imul
adc
aaa
imul
pushf
add
sbb
jne
mov
xor
movsl
dec
leave
pop
gs
punpckhwd
xor
cmp
pop
jne
movups
cmp
in
enter
les
aas
add
aam
faddl
pop
pmulhuw
in
mov
paddw
add
je
xor
mov
daa
aas
adc
xor
xor
xor
adc
sbb
pop
xor
imul
xor
cmp
inc
sbb
popa
add
mov
cld
and
pop
dec
shll
shlb
sbb
jecxz
jmp
push
aas
repz
sbb
cld
xor
aas
add
push
nopl
and
xor
push
cmp
xchg
pop
imul
popa
dec
mov
jbe
movsb
cmpb
or
clts
push
lods
ja
adc
sarl
ljmp
movsl
xchg
call
stc
and
push
aad
push
adc
and
and
movsl
call
adc
popa
gs
push
ss
leave
jo
js
add
test
mov
adc
aas
push
or
mov
and
call
hlt
or
dec
or
mov
sbb
movsl
and
sub
and
mov
push
xor
arpl
add
orb
mov
gs
push
gs
push
push
sarb
popf
push
call
push
push
imul
push
movsl
mov
pop
jmp
insl
xor
sahf
xchg
adc
mov
push
add
insb
leave
mov
add
loopne
xchg
cmp
sub
and
mov
call
mov
mov
mov
mov
imul
sub
push
adc
inc
xor
or
inc
addps
push
jns
jg
pop
in
repz
add
mov
shl
push
lsl
xchg
in
loopne
and
iret
imul
cld
sbb
pusha
mov
sub
add
je
ss
leave
add
repz
lods
add
and
sbb
nop
add
movsb
push
push
sbb
int3
xchg
test
and
rclb
mov
movups
and
push
lret
fstl
mov
sub
sysexit
imul
pushf
pop
push
add
leave
inc
add
jns
lods
test
popf
iret
push
cmp
xorl
call
mov
in
in
mov
mov
syscall
add
inc
add
inc
push
sub
cmp
sub
jne
lock
add
jmp
leave
nop
adc
leave
test
nop
mov
mov
pop
aad
mov
in
adc
xor
and
sbb
iret
inc
movsl
push
adc
call
dec
mov
cmp
nop
sbb
pop
mov
sub
rolb
push
mov
add
xchg
rorb
add
js
movsl
jnp
fsubrs
and
xor
cmpsl
mov
xor
jge
iret
sbb
pusha
and
or
in
mov
push
add
sub
sub
mov
je
cmp
sub
cmp
push
jb
pusha
popa
adc
and
add
inc
insl
push
mov
sbb
mov
rcrb
mov
dec
ljmp
syscall
adc
push
inc
mov
das
imul
or
pop
xor
cmp
push
jmp
js
xor
mov
dec
mov
add
fwait
pop
movsb
xchg
mov
popa
and
lret
shll
in
dec
out
gs
and
mov
out
adc
adc
ljmp
adc
cmp
push
or
gs
lea
pop
cmpl
mov
add
cwtl
std
pop
push
lock
mov
sbb
enter
movsl
mov
mov
stos
mov
adc
enter
lar
fistpll
add
lcall
dec
inc
add
jno
js
mov
mov
add
shl
jle
sbb
int3
out
mov
adc
call
mov
add
add
sub
jmp
cmpl
xchg
push
mov
enter
insb
add
mov
jge
ljmp
in
or
iret
cmp
cmp
out
sbb
enter
cwtl
mov
xor
fisubrl
push
dec
or
xchg
dec
clc
sbbb
leave
leave
stos
and
mov
add
push
jns
cmpsl
jne
dec
insb
movsb
xor
mov
mov
movsb
sbb
lret
ror
sbb
bound
xor
mov
ss
pop
roll
inc
add
push
push
push
cmp
and
cmp
dec
pop
pop
pusha
add
jle
or
dec
rolb
mov
lods
adc
enter
xor
push
mov
mov
mov
fisubs
push
mov
mov
lahf
jae
jne
cmp
jns
aas
dec
or
push
adc
cmpsl
test
mov
adc
in
mov
push
in
mov
sbb
add
mov
lods
jno
jge
sbb
outsl
jne
dec
sbb
gs
jo
add
js
jns
cmpb
mov
mov
push
jle
sbb
maskmovq
imull
or
adc
pop
jl
ja
in
orl
jge
push
cmp
fs
aas
cwtl
sbb
adc
aaa
sbb
adc
aaa
add
rcrl
leave
mov
pop
fsubl
push
push
push
lock
js
add
stos
cmp
xchg
sbb
mov
leave
inc
jg
cmc
movsb
sbb
push
iret
fprem1
jne
andb
adc
popa
and
add
mov
add
mov
and
adc
iret
ljmp
cmc
mov
imul
gs
int3
or
je
ss
push
pop
ss
leave
add
repz
test
push
push
ljmp
popf
iret
loope
push
cmpsb
mov
cmp
push
bswap
imul
and
and
cmp
adcb
or
lods
add
and
mov
je
push
xor
add
bound
in
sti
push
push
mov
mov
cmc
ds
dec
add
xor
enter
lods
leave
fidivrl
mov
ds
cmc
bnd
jge
jg
and
jg
pop
mov
mov
mov
push
cmpsb
aad
rolb
andl
fdivl
fdivl
iret
push
fdivrs
pop
cld
jmp
sbb
movsb
xor
dec
adc
cmp
in
inc
mov
adcb
jns
push
movsl
movsb
leave
mov
push
cmpsl
int
inc
ja
in
lret
pop
add
sbb
xor
mov
sub
faddl
add
inc
sbb
mov
adc
add
adc
movsb
cwtl
pop
or
mov
xor
test
iret
xchg
cmp
out
mov
pusha
ja
out
add
xchg
xor
test
lods
mov
sbb
xor
mov
jg
add
cld
in
repz
and
mov
and
mov
push
cmp
jge
adc
cmc
mov
cmp
je
aad
iret
mov
cmp
push
push
ja
out
jne
js
in
enter
test
sbb
xchg
std
in
and
hlt
imul
and
xor
adc
insl
xor
iret
pop
adc
xor
push
lar
filds
push
mov
mov
sbb
repnz
cmp
add
imul
add
loopne
xor
sub
mov
or
add
or
test
jp
in
or
lahf
test
inc
imul
xchg
jmp
add
mov
stos
mov
add
mov
notl
jmp
sub
je
jae
jb
xchg
popaw
jne
insb
pop
dec
xor
dec
sbb
xor
imul
jb
arpl
mov
jg
aas
dec
outsl
rclb
push
and
add
and
outsl
outsb
xor
cmpb
dec
jne
ret
adc
imul
test
inc
lods
arpl
out
outsb
push
pushf
fimuls
lcall
imul
popa
fs
outsb
jl
cmp
pop
outsl
jecxz
popf
add
arpl
test
dec
imul
je
inc
jns
fsts
push
pop
fs
int
inc
insb
inc
aad
outsb
push
out
int3
and
cmc
mov
push
push
sbb
adc
pop
xor
push
dec
jns
jmp
mov
jne
jg
dec
or
jae
repz
les
mov
dec
xor
sub
mov
jno
cmp
and
sub
xchg
xor
dec
sar
fwait
aam
sarl
sbb
insl
cmp
add
imul
leave
mov
and
cmp
jp
mov
mov
les
pop
ss
in
cmp
jbe
add
dec
aaa
push
rorb
dec
lds
adc
ss
mov
xchg
outsw
cmp
pop
and
pshufw
dec
inc
push
dec
mov
test
xor
repz
stos
dec
inc
popa
jo
daa
push
jecxz
push
mov
jl
and
add
pop
mulb
mov
xchg
add
gs
inc
pop
insb
jo
dec
data16
test
adc
jae
mov
lds
lds
scas
lcall
jl
push
int3
arpl
xchg
mov
out
sbb
or
cli
nop
jno
xor
insb
dec
push
aad
pop
ror
fidivrs
gs
push
addr16
adc
imul
imul
xchg
push
enter
rcll
gs
mov
or
add
es
mov
out
push
outsl
sub
add
inc
or
mov
dec
imul
adc
inc
pop
push
push
push
dec
or
xor
aas
arpl
push
add
or
aas
insl
jle
xsha1
cmpsb
or
ljmp
rcll
inc
outsl
std
cmp
inc
inc
push
jnp
ja
jmp
mov
enter
sbb
inc
push
maskmovq
testl
or
notb
rorl
in
daa
stos
cmpsl
push
add
mov
rcrl
pop
mov
xchg
enter
inc
inc
dec
push
cld
inc
incb
add
pop
sub
fs
jle
inc
lea
pop
pop
dec
jge,pn
add
dec
mov
pop
fmull
xor
scas
popa
push
aas
dec
outsl
and
ja
es
insb
and
sarb
pop
sub
test
and
jno
mov
inc
inc
jl
aam
xor
test
in
aam
es
jnp
stc
fnop
and
adc
ja
ja
mov
sub
call
pop
popa
test
xor
rcl
push
out
arpl
gs
ljmp
mov
xchg
aas
inc
ljmp
dec
xor
pop
inc
sbb
jbe
xor
lods
jnp
emms
shlb
pop
inc
shll
mov
xchg
popa
gs
pusha
adc
xor
or
test
pop
mov
frstor
jne
add
push
mov
scas
or
xor
nop
scas
push
fdivr
stos
mov
mov
js
in
aaa
cld
add
gs
cmp
stos
aaa
mov
popa
pop
test
mov
dec
aas
popa
je
js
xchg
inc
arpl
cmpsb
movsl
nop
sub
sub
inc
pop
jae
je
add
or
pop
dec
mov
imul
mov
aaa
cmp
xchg
iret
pop
dec
inc
push
push
xor
daa
shll
adc
sar
sub
jo
jne
gs
pop
pop
jp
xchg
gs
mov
xlat
and
add
pop
xchg
cmpsl
fidivl
and
jb
dec
xchg
or
push
mov
dec
loope
pop
cli
daa
ljmp
mov
jae
ja
add
mov
push
pop
add
hlt
mov
mov
dec
inc
es
mov
ja
inc
mov
loop
add
jns
ja
fwait
jns
stc
xor
outsl
dec
mov
jns
sahf
mov
jns
aas
pop
movsb
dec
and
mov
scas
cli
nop
or
xor
cmc
pusha
add
testb
setae
sbb
out
adc
imul
mov
mov
ds
or
dec
dec
mov
fdecstp
adc
sahf
sub
mov
arpl
push
mov
push
imul
and
mov
das
test
js
add
sbb
push
pop
jg
xchg
outsb
iret
in
cmp
fs
inc
gs
push
pop
dec
add
push
adc
ss
cs
arpl
pop
or
cmp
jp
pop
and
ss
js
mov
out
cmp
mov
add
xor
mov
pop
and
cltd
icebp
dec
nop
ror
je
dec
stc
pop
mov
arpl
jns
fnstenv
or
repz
movb
push
icebp
popf
data16
int
xchg
sub
inc
arpl
aaa
adc
fs
test
mov
and
inc
dec
cmovns
filds
jo
jl
in
pop
mov
mov
jge
es
cmp
aad
daa
repnz
cmp
add
jp
scas
lds
mov
mov
int
mov
or
push
pop
cmp
push
jne
cltd
negb
arpl
imul
push
outsl
push
push
jae
dec
push
or
ret
nop
outsw
push
xor
sbb
mov
rorl
shll
cltd
pop
add
int
stc
add
sbb
and
mov
jb
sub
lgdtl
cmpl
ss
push
popf
pop
fs
or
pop
data16
jmp
fs
sub
xchg
or
cmp
mov
and
push
sub
push
dec
dec
arpl
xchg
sbb
mov
xor
inc
in
hlt
jg
jl
mov
insl
lcall
mov
or
adc
add
mov
sbb
xor
sub
push
insb
pop
adc
xchg
adc
cmp
ja,pn
and
xor
lods
adc
mov
imul
repnz
adc
pop
imul
or
imul
lea
sub
and
mov
insl
jbe
movsb
xchg
cmp
ja
aad
mov
ss
or
insl
and
ljmp
or
flds
push
xor
andb
or
sbb
idivl
pop
insb
jecxz
outsb
and
adc
hlt
sbb
cmp
das
arpl
mov
mov
or
xor
mov
inc
mov
pop
sbb
addb
push
and
pop
and
adc
cmp
dec
jo
sub
push
push
je
outsl
adc
push
sub
arpl
hlt
sub
and
ja
cmp
bound
ljmp
inc
sub
inc
or
inc
test
nop
and
cmp
hlt
sub
inc
mov
cmp
pop
insl
cmp
xor
das
xor
cmp
das
cld
sub
dec
repnz
std
pop
cmpb
jg
cmp
xor
mov
cs
jb
ljmp
bound
dec
cmpsl
inc
sbb
in
and
subl
fdivrp
imul
xor
ss
adc
cwtl
ds
addb
mov
sub
ds
add
mov
enter
cmp
xchg
popf
int
xor
js
and
xor
sub
daa
and
and
xor
xor
nop
xchg
inc
daa
or
push
push
push
push
sbbb
cmp
cmp
xor
and
or
jno
daa
aas
and
daa
or
call
idivb
add
outsl
jns
push
nop
inc
fmulp
out
adc
xor
xor
xchg
mov
add
or
popa
push
aad
mov
and
or
sbb
negl
sub
rcrb
add
jns
inc
xor
inc
add
add
add
add
add
add
add
dec
add
add
add
add
add
ss
pop
add
add
add
add
jno
add
add
add
add
add
add
inc
push
add
xor
add
add
add
add
add
add
je
add
xor
add
add
insl
add
outsl
add
add
jno
ljmp
sbb
in
sbbl
les
lock
movsb
cmp
mov
add
add
inc
rcrl
cwtl
mov
leave
cmp
addr16
or
ret
xchg
sar
dec
push
lret
test
or
or
mov
decb
or
hlt
xchg
ret
ja
mov
push
dec
mov
aas
push
fsubr
add
adc
iret
clc
and
std
mov
push
loop
push
jo
sub
gs
jmp
cmpsl
mov
jge
rep
dec
std
dec
outsb
movsb
icebp
lahf
test
jo
in
orb
loopne
cld
inc
arpl
data16
les
imul
jae
lahf
push
cmpsb
fcmovu
cmp
push
jecxz
es
jb
fsubr
dec
adc
in
out
sub
xor
push
push
pop
cmp
mov
shlb
xchg
or
adc
stos
in
mov
cmp
pop
nop
adc
scas
jg
shlb
adc
mov
es
out
jbe
dec
aam
push
call
call
ljmp
and
adc
mov
movsb
dec
push
xchg
inc
sbb
lea
sahf
jecxz
scas
mov
mov
call
pop
ret
cmc
ret
scas
mov
subl
movsb
mov
stos
icebp
sub
sbb
sbb
xor
aas
call
mov
lods
es
mov
fcompl
loopne
out
inc
cmp
sub
or
enter
or
loope
jge
pop
or
icebp
sub
into
mov
xchg
inc
and
xor
ret
pushf
fisubrs
xchg
dec
push
out
shr
xor
dec
pop
xor
push
sbbb
jae
or
inc
mov
test
and
in
dec
push
push
push
push
or
push
sub
fwait
call
mov
int
sbb
sub
sbb
xchg
shll
icebp
pop
mov
sbb
inc
lock
push
dec
out
cmp
setbe
dec
fisttps
aad
shl
test
xchg
and
ret
jo
cmp
xlat
mov
sub
and
repnz
or
mov
cmp
test
filds
jle
gs
adc
sti
jns
xchg
rorl
outsl
cmp
cmp
mov
pop
pop
mov
or
test
sti
lock
cltd
dec
push
lds
call
movsl
adc
push
test
and
les
loope
mov
adc
insb
ljmp
lcall
jo
inc
incl
dec
mov
dec
cmp
icebp
jae
add
add
push
shrb
sbb
orl
jbe
daa
je
push
rclb
sbb
xchg
mov
push
sbb
repnz
jmp
lcall
out
lock
inc
pop
push
pop
inc
mov
xchg
push
test
xor
test
popf
fistpll
or
jmp
out
mov
stc
adc
jmp
les
sub
aam
push
cmc
sbb
test
test
pop
ret
mov
dec
xchg
add
xchg
aam
leave
add
push
movsb
push
fmul
jecxz
mov
add
jle
movsb
ret
inc
popf
push
call
add
dec
or
push
leave
movsl
xchg
jle
jp
aas
test
xchg
aas
outsl
jno
sbb
scas
jge
lods
repz
add
mov
int3
test
and
mov
mov
add
insb
dec
push
push
mov
xor
add
mov
cwtl
sub
enter
mov
jb
sti
adc
cmp
mov
mov
fcomi
mov
cmp
bswap
push
shlb
jmp
mov
inc
in
or
insb
ret
push
lods
jae
or
mov
adc
jl
pop
xor
or
gs
mov
mov
and
enter
call
stos
jo
outsl
mov
rorb
inc
or
test
je
scas
or
pop
leave
rclb
popf
dec
inc
pop
mov
cltd
std
or
and
inc
adcl
in
aam
imul
sti
push
mov
adc
xchg
loop
jp
push
js
test
mov
lea
push
je,pt
icebp
mov
pop
mov
imul
daa
cmp
mov
dec
add
decl
pop
call
das
add
je
sub
pop
call
repz
nop
arpl
out
movsl
mov
call
or
jns
addr16
jmp
movsb
pop
sbb
push
es
jb
push
inc
xor
mov
fwait
ja
cmp
nop
imul
jns
outsl
cmp
push
and
add
ja
xchg
imul
jo
mov
dec
cmp
mov
cltd
jmp
jb
fcmovnbe
cmp
push
and
test
cmp
cmovo
adc
add
inc
ds
and
cmp
mov
cmp
mov
xor
movb
mov
ret
mov
outsl
jbe
mov
nopl
in
or
das
idiv
mov
xor
jp
cli
and
push
pop
push
je,pt
add
pmaxsw
dec
push
and
push
inc
insl
jbe
cmp
sti
jl
sarb
add
or
xrelease
jbe
sbb
fsts
jnp
adc
std
or
stc
mov
addr16
or
mov
sub
gs
ja
mov
incl
pop
ss
dec
mov
clc
and
add
cmp
dec
fdiv
insb
imul
or
icebp
mov
out
fwait
iret
and
enter
jae
cld
lcall
jb
divb
into
inc
aam
ja
or
std
sbb
mov
lahf
jbe
mov
xchg
cmp
mov
adc
and
enter
mov
test
cli
sbb
out
ret
iret
ja
repnz
pop
cmp
xchg
add
clc
mov
hlt
mov
mov
inc
jle
cmp
or
mov
imul
stos
and
test
jnp
push
jge
dec
cmpsb
xlat
mov
pop
daa
mov
sub
xchg
lea
cmpsl
cld
scas
or
sbb
stos
jb
test
xor
mov
flds
test
je
and
lock
sbb
or
jmp
xor
jbe
lea
sub
scas
mov
test
push
or
jmp
mov
outsl
cmp
sub
pop
ljmp
jg
out
or
mov
scas
pop
jmp
add
enter
xor
subb
dec
add
push
inc
inc
add
lds
repnz
icebp
dec
mov
test
push
xchg
mov
inc
call
dec
xchg
and
dec
and
mov
pop
subb
push
sbbb
or
inc
mov
xlat
loop
idivb
xchg
jmp
adc
and
xchg
jle
sub
jmp
jmp
es
aaa
inc
call
adc
mov
lahf
js
mov
andl
or
pop
repz
cld
in
push
sub
ret
pusha
xchg
les
inc
nop
push
sub
xchg
call
rolb
push
add
mov
mov
js
inc
pop
stos
xchg
lds
push
repz
aas
aas
into
dec
lods
cmpsl
adc
or
pop
inc
jo
add
cmpsl
push
push
xchg
or
and
mov
mov
incl
jns
clc
or
lods
push
push
call
push
nop
ja
dec
addr16
stos
or
movsl
or
jl
sub
ja
data16
push
call
mov
sbb
je
jl
in
mov
mov
clc
test
adc
call
sbbl
and
stos
add
mov
lret
data16
dec
lods
inc
dec
ljmp
je
lret
mov
or
inc
fsub
and
mov
scas
aas
mov
in
mov
sub
jo
adc
push
add
repz
pop
pop
out
popa
push
mov
pop
pop
or
gs
mov
add
je
mov
xchg
push
in
shll
roll
or
push
or
cmp
sub
mov
jb
xorb
mov
or
and
test
inc
inc
xor
cli
pop
dec
sbb
jmp
add
aaa
repnz
mov
push
mov
jp
adcl
movsb
jns
lret
dec
or
mov
lea
sbb
or
or
jne
sbb
pop
in
ret
gs
or
nop
inc
pop
add
pop
les
lods
inc
and
sbb
mov
sbbl
push
push
push
push
aas
call
push
mov
push
mov
push
xor
push
jns
aas
mov
dec
or
lea
jbe
mov
mov
add
push
daa
or
cli
lret
cmp
mov
call
int
aad
mov
push
push
push
call
xchg
ret
repnz
pop
mov
pop
outsb
es
xchg
call
add
fdivs
cwtl
xchg
pop
mov
adc
jg
ret
jb
sub
push
cli
lods
cli
inc
sbb
inc
pop
call
mov
daa
adc
es
pop
xchg
cli
jne
push
or
dec
cwtl
mov
outsb
push
push
dec
sub
xchg
test
sbb
addr16
sbb
aad
mov
xchg
jo
repnz
out
mov
xchg
shr
pop
movsb
push
push
inc
sahf
inc
aas
call
push
loope
test
movsb
lret
aam
inc
and
scas
addr16
inc
mov
mov
sahf
loop
test
rorb
loopne
or
push
fistpll
xlat
adc
sub
xchg
or
inc
inc
jnp
sahf
or
enter
mov
jl
daa
or
push
je
movsl
push
lret
movsb
shlb
mov
stos
sets
xchg
mov
ret
adc
enter
dec
call
lret
fildl
jg
fidivrs
data16
in
pushf
and
call
popf
int3
pop
add
sub
jbe
jmp
rcll
mov
jno
cmpsl
cpuid
into
or
pop
or
stc
mov
xchg
mov
mov
push
and
mov
lods
aas
pushf
js
xchg
enter
push
int3
nop
movsb
out
jp
mov
jl
add
out
fcompl
push
pop
xor
scas
xchg
outsb
pop
mov
das
mov
rcll
test
mov
int3
push
aad
mov
addb
lods
pop
call
mov
push
cmp
std
popa
cmp
mov
dec
cmp
inc
and
adc
or
sbb
movsb
mov
insb
cmp
push
xchg
jno
out
push
test
inc
fdivs
clc
leave
aas
je
cmp
or
inc
xchg
mov
movsb
add
jge
aam
xor
aaa
leave
fcomps
sbb
inc
or
outsl
xchg
jp
lock
test
push
fildll
sub
cmp
test
jmp
aam
pop
pop
mov
cld
cmpsl
pop
jmp
push
sbb
cmp
mov
aas
test
ds
pop
ds
or
nop
push
mov
movsl
jnp
inc
in
jb
cwtl
popa
imul
sub
cmpb
jns
or
jbe
clc
outsl
jo
mov
gs
aaa
psllq
lock
push
push
in
adc
call
lods
jmp
call
and
ret
push
push
fidivrs
outsb
add
jmp
les
and
pop
loope
mov
cmp
cmp
data16
shl
lret
push
movhps
paddw
es
sti
mov
jb
inc
pusha
mov
stos
scas
lds
cmpsl
sub
pop
nop
add
out
dec
bnd
in
or
push
cltd
mov
sti
or
mov
int
mov
imul
mov
fsubrs
lock
in
jo
pop
mov
fisttpl
sti
and
icebp
in
cmpsl
call
hlt
add
push
test
sahf
or
cmp
push
adc
call
test
shll
call
data16
pop
or
pop
add
mov
outsw
adc
push
clc
call
cli
ret
gs
cmp
jb
cmp
outsb
icebp
data16
mov
sahf
movsl
jl
inc
fnstenv
sub
lea
ret
shrl
leave
inc
jecxz
cmp
push
gs
mov
rorb
mov
or
pop
push
sub
or
daa
lods
data16
bswap
sub
lret
lds
je
and
pushl
mov
int3
push
mov
pop
jne
xchg
jmp
fisttpl
push
push
decl
sbb
gs
push
mov
mov
mov
jle
sbb
or
call
clc
xchg
lret
mov
dec
push
call
xchg
fisttps
rorl
cli
subl
repnz
fists
sti
scas
cmp
adc
in
pmulhw
call
aas
std
jmp
fcoms
enter
data16
mov
inc
ljmp
enter
add
xchg
or
xchg
loop
dec
cltd
loop
incb
popf
call
push
push
fnsave
call
mov
rorb
add
pop
adc
sub
call
inc
dec
test
out
outsl
xchg
xor
mov
push
push
in
push
dec
or
adc
jl
popa
ljmp
pop
dec
imul
sub
dec
xchg
stos
push
sub
andw
test
ja
sbb
mov
imul
or
aam
fmull
test
add
test
inc
test
mov
or
in
sub
pop
daa
push
aam
fstl
nop
mov
add
je
and
stos
outsl
les
mov
cmp
cwtl
shll
fnstenv
dec
dec
data16
and
mov
xchg
cmp
sbb
ja
icebp
enter
leave
aas
iret
xor
fdivp
es
mov
xor
jne
fwait
out
push
pushf
jno
push
addr16
dec
cwtl
rcrb
xchg
xor
pop
ret
fimull
lahf
pusha
mov
xor
in
xchg
push
pop
daa
and
cmp
push
pop
outsl
stos
es
fcoms
outsl
imul
std
mov
mov
fisttpl
mov
es
xlat
out
jge
test
pop
mov
aam
bound
xchg
outsb
iret
dec
mov
mov
push
leave
test
add
mov
cmc
dec
out
jbe
pop
adc
jp
sub
mov
xor
fs
inc
fldl
cmpsl
out
call
cltd
imul
ror
sbb
movsl
imul
mov
jmp
xchg
lock
mov
sbb
divb
arpl
std
out
pop
test
je
data16
loopne
inc
or
push
fs
sbbl
sbb
dec
or
pop
inc
clc
fsubrl
jge
cmpsb
mov
dec
xor
sub
test
call
enter
into
cmp
ret
or
and
sarl
retw
or
jl
push
mov
sbb
jp
push
movsb
xchg
inc
ljmp
ficoml
arpl
sub
shll
sti
sub
sbb
push
ljmpw
mov
pop
sbb
push
sbb
popa
xor
mov
bndldx
cmp
das
mov
subl
rclb
mov
in
xchg
dec
sbb
xchg
jg
cli
cld
push
gs
shlb
movsb
je
xor
addr16
push
out
and
cmpsb
pop
jae
mov
mov
es
sub
or
jl
insb
and
cmp
or
or
adcl
xchg
pop
mov
mov
xor
or
and
cmp
and
stos
movsl
shlb
sbb
jl
sarb
adc
or
mov
aaa
or
cmp
outsl
lock
mov
jl
daa
movsl
or
sbb
cmp
shufps
out
imul
mov
jp
rcl
mov
loopne,pn
and
mov
push
sti
insl
mov
pop
ret
mov
aaa
fs
pop
call
adc
movsb
ret
loope
push
aas
out
imul
mov
mov
and
ja
outsb
orb
mov
outsl
mov
stos
add
imul
cmp
cmp
inc
int3
dec
xchg
pop
mov
hlt
sbb
push
movsb
add
rcl
movsb
lea
push
add
xchg
das
xor
cmp
fisubrs
adc
retw
or
add
mov
push
ljmp
popf
test
fdivr
ror
shrl
or
push
lods
movb
imul
pop
mov
push
popf
add
int3
jbe
xchg
jo
in
jg
inc
aas
push
js
hlt
dec
sub
sti
push
icebp
and
cmp
lret
iret
out
push
imul
mov
xor
pop
imul
xchg
cmpsb
out
call
pusha
mov
inc
shrb
subl
lahf
xor
sub
mov
int3
xlat
add
add
mov
pop
iret
mov
jb
cmp
or
cmp
arpl
fstl
push
or
mov
fsts
imul
inc
cmp
call
mov
lahf
ljmp
jge
fidivrs
adc
mov
sub
stos
fnstsw
divb
or
mov
data16
push
inc
xchg
jg
ret
dec
push
aam
xchg
dec
cmp
jne
insb
and
cmp
arpl
push
add
jmp
fsubs
cmp
pop
ds
cmp
add
gs
aaa
or
mov
outsl
mov
gs
ds
mov
daa
mov
and
push
cmp
jb
xorl
lods
pop
jle
out
push
mov
add
and
xchg
out
mov
mov
mov
cmp
add
out
bound
repz
cmp
inc
sbb
and
daa
or
xlat
or
fwait
sub
jno
jmp
xchg
sbb
cmc
mov
add
cmpl
inc
xorl
stos
add
cmpsb
ds
test
fs
lahf
cmp
fisubrl
test
cmpsb
inc
cmp
jne
add
jns
push
and
negl
jl
jg
or
jp
dec
or
jne
cmp
xchg
sub
xchg
insl
repz
in
and
pop
sub
call
mov
cmp
cmp
imull
add
pop
xchg
push
push
fstpt
jmp
add
jmp
pop
pushf
adc
add
mov
mov
cltd
call
ret
mov
ja
lret
shll
nop
mov
or
idivb
sahf
xchg
call
add
mov
call
inc
cmpsb
rcrb
add
xchg
lds
outsl
in
pop
or
xchg
and
xor
rolb
jns
push
es
cmp
xor
push
les
int
cwtl
fistps
shll
popf
fidivl
je
stos
dec
dec
sub
cmp
jecxz
and
js
xlat
inc
dec
fsubrp
das
nop
notl
leave
sbb
inc
js
fstps
test
xchg
pop
movsw
in
jns
pop
shlb
iret
ja
mov
push
shlb
or
and
or
ljmp
jns
outsl
testl
mov
scas
inc
iret
jb
aas
add
in
push
jne
jae
mov
fmul
jae
je
mov
out
pop
js
push
mov
rcrb
dec
gs
out
lea
cli
int
hlt
insb
xor
sbb
xchg
fisubrs
xor
mov
das
sub
stos
call
dec
push
mov
popa
and
call
pop
inc
dec
jmp
aaa
push
loope
outsl
ss
and
outsb
lcall
lods
dec
shlb
or
into
push
rol
movsl
into
mov
sbb
cld
push
fs
test
mov
in
addr16
sbb
das
adc
pop
pop
and
or
add
adc
pop
fs
adc
int3
add
out
jmp
aad
or
popa
mov
jbe
sti
mov
or
pushl
int3
call
adc
jns
rorl
jecxz
and
or
movsb
shll
inc
mov
pop
mov
mov
dec
push
push
mov
mov
lods
sub
in
lcall
mov
data16
out
push
loopne
test
and
addl
inc
xchg
sbb
in
inc
fs
sub
inc
ljmp
inc
add
cmp
insb
or
push
test
roll
ja
sbb
pop
xor
xchg
icebp
add
mov
xchg
dec
and
and
aaa
cmpb
addr16
sbb
imul
mov
jne
add
push
aaa
mov
or
pushf
or
jg
xchg
mov
sbb
repz
pop
sbb
xor
jnp
adcl
pushf
jmp
test
faddl
mov
and
cmc
mov
jo
fildl
outsl
movl
mov
jns
or
mov
cmpsl
jae
mov
jge
dec
lock
lods
push
xor
icebp
movb
test
dec
fidivrs
call
call
cmp
aad
mov
xchg
xchg
pop
xchg
mov
fdivr
lds
shlb
and
sbb
mov
gs
pop
mov
pop
hlt
push
add
mov
aas
mov
addr16
add
xor
pop
fsubrs
adc
sahf
cltd
jne
add
into
or
dec
or
ror
inc
out
jbe
nop
bound
dec
jns
xchg
nop
xchg
mov
cmp
aas
mov
cmpsl
adc
ret
scas
into
lock
sub
pop
cmp
pop
fidivrl
shl
mov
fsubrl
jb
push
xchg
sbb
aam
cmp
hlt
ja
dec
dec
mov
mov
and
out
adcl
and
mov
cmp
movsb
aas
xor
push
pushf
and
cmp
add
and
dec
add
push
lock
insb
ret
ljmp
xchg
xchg
cmp
sbb
fnstenv
jle
jae
aad
xchg
out
dec
ficoms
mov
out
sub
pop
jb
imul
sub
mov
in
clc
adc
pusha
lods
ret
mov
inc
xchg
cmpsb
pop
jp
dec
repnz
call
cmpsl
popf
popl
ljmp
cmp
xor
cmp
dec
cmpsb
fmuls
mov
and
out
call
dec
jle
add
lock
or
adc
lods
and
jns
shlb
test
adc
mov
mov
les
int3
mov
pop
mov
add
andl
jns
jg
sub
xchg
mov
adc
push
pop
fldenv
dec
insl
xchg
test
pop
nop
jns
xchg
jecxz
popa
mov
pop
xchg
inc
jno
add
setbe
mov
lock
xchg
mov
push
mov
out
sbb
and
dec
pop
inc
fdivrl
sarb
jmp
sbb
pushf
ja
xchg
dec
lea
add
in
mov
xchg
cld
and
pop
pushf
fiadds
fnstsw
enter
mov
ficompl
mov
dec
rcl
and
mov
inc
and
jl
pop
and
cmp
inc
sahf
js
subl
xchg
adc
sub
in
pop
jb
in
clc
cwtl
aam
int3
cmp
mov
pop
repz
and
daa
add
push
mov
jno
xchg
mov
fcompl
sub
cld
inc
cltd
inc
adc
scas
call
mov
mov
outsb
stos
add
adc
push
mov
loope
adc
push
xchg
in
mov
push
or
xchg
das
and
push
rorb
or
cmp
cmpb
test
movsb
in
or
mov
fldcw
repnz
or
rclb
sbb
cmpl
in
mov
nop
jno
push
repnz
pop
xchg
add
dec
int
xchg
and
push
je
jne
insb
mov
out
loop
sarb
loopne
push
xchg
push
sti
or
orl
jb
lcall
lods
std
fldl
int3
sub
je
fdivrl
fidivrl
dec
mov
sub
int
insb
and
ret
push
arpl
inc
hlt
xor
shl
adc
cmp
mov
mov
imul
sub
test
lea
outsl
sub
mov
cmp
jl
fadds
out
or
mov
clc
xor
adc
cmp
test
and
mov
ja
movsb
test
or
add
xchg
gs
mov
in
int
call
or
enter
stc
shrl
xchg
cmc
fsub
mov
enter
aam
out
mov
cli
add
or
or
lea
sub
test
xchg
arpl
call
sahf
jle
jo
jp
daa
mov
fdivrl
mov
loop
cmp
addb
mov
lahf
inc
inc
stc
int3
aas
mov
hlt
insb
into
aaa
mov
or
jge
outsl
iret
push
bound
insl
push
xor
ret
sarl
fsubl
or
pop
xchg
xchg
pop
out
incb
shrb
jns
xchg
in
xor
xor
loop
cltd
add
mov
or
addr16
cmpsl
in
push
out
mov
scas
fsubs
add
jno
les
mov
inc
bt
jl
fcmovnu
add
rcll
adc
jmp
inc
push
push
sahf
lds
dec
cmc
bound
push
lcall
cli
in
adc
insb
aas
aam
loop
inc
xchg
add
mov
or
fisttps
movsl
lea
jp
mov
scas
mov
pop
sbb
outsb
or
aam
aad
jg
cmc
mov
jae
mov
scas
stos
xor
enter
pop
aas
xor
mov
sub
pop
pusha
mov
jge
jne
xchg
sub
mov
push
push
rorb
in
pop
xlat
cmpsb
sahf
pop
push
add
sub
sbb
lea
addr16
gs
mov
cwtl
add
or
fidivrs
lods
xor
adc
inc
test
and
hlt
mov
ss
cmovne
jle
ret
outsb
lock
inc
push
inc
and
push
mov
mov
adc
inc
mov
aas
and
or
jge
fcompl
inc
push
popf
data16
pop
and
adc
mov
aaa
add
pop
popf
jne
lods
insl
mov
std
shr
sti
jecxz
push
xchg
orb
inc
mov
rolb
fsubrl
es
loop
leave
xor
sub
fisttps
imul
mov
xor
je
and
aam
mov
push
pushf
loopne
mov
out
cmp
fildll
hlt
fcomp
les
mov
sbbb
movsb
mov
fcmovu
pop
loope
movb
or
out
or
push
add
and
inc
std
es
or
push
fwait
sar
cmp
aam
cmpsb
dec
les
pop
mov
adc
mov
jae
test
jmp
dec
es
sub
mov
xor
add
add
push
add
xor
add
add
jb
dec
xor
xor
add
add
add
xor
push
add
inc
add
add
inc
add
add
xor
add
add
js
add
add
push
push
xor
je
dec
add
cmp
inc
push
add
xor
xor
add
add
add
bound
add
push
xor
add
add
xor
add
ja
mov
decb
fdivrs
inc
inc
incb
push
add
movups
fbld
call
sub
sbb
repz
pop
dec
aad
push
gs
inc
fdivrs
and
je
add
call
cmp
or
daa
cld
popf
das
xor
cmpb
mov
sub
and
test
pushf
cwtl
add
cltd
test
js
enter
push
call
faddl
rcrl
aam
mov
test
or
and
jne
enter
lahf
rcrl
mov
xor
mov
mov
icebp
aas
call
sub
mov
jae
cmp
jmp
hlt
addr16
out
divb
mov
test
mov
out
sbb
inc
pop
xor
or
cmp
inc
push
mov
mov
jo
xchg
mov
and
pop
out
add
xor
in
data16
jns
int
fisubl
outsl
push
into
fidivs
jge
push
andl
stos
push
xchg
jle
ja
inc
push
and
cmp
dec
mov
jbe
mov
mov
insl
jge
add
lret
je,pt
jmp
jecxz
adc
jns
add
insl
rcll
adc
cmp
inc
xchg
mov
sub
sbb
xchg
stc
cmp
jmp
cld
fsubr
jge
push
mov
dec
jg
xlat
out
call
jecxz,pt
push
or
xchg
inc
pop
jns
clc
mov
cmp
into
pop
bound
aaa
cmp
and
test
fucomip
gs
jb
mov
in
pop
mov
lock
mov
lret
lods
xor
xchg
into
inc
add
js
add
out
mov
push
jmp
decb
push
adc
outsb
imul
pushf
int3
add
ds
test
pop
jmp
cmpsb
add
or
and
mov
cmp
xor
mov
push
mov
jle
rclb
push
nop
into
addr16
sbb
push
shl
adc
cmp
mov
popa
or
inc
or
or
mov
aam
mov
outsl
push
adc
call
popf
dec
adc
je
das
pop
shr
sub
lock
mov
push
xor
and
lods
mov
loopne
call
cmp
and
dec
js
outsl
lock
lret
or
pop
sbb
sarl
sbb
sbb
les
out
repz
lea
sbb
push
push
rcrl
push
sub
in
inc
out
outsb
jmp
sbb
aam
fsubrl
lahf
cmpsl
leave
xor
or
xor
adc
mov
test
int3
push
xlat
add
repz
rorl
xor
in
lret
jo
jmp
mov
push
push
add
jns
in
lahf
enter
jb
mov
xor
jge
cld
movsb
dec
test
sbbb
push
call
addr16
xlat
mov
sbb
jmp
mov
inc
jmp
mov
add
push
adc
cwtl
setl
jg
pop
dec
sti
rorb
sub
call
dec
pusha
int
repnz
scas
inc
add
ja
pop
dec
movsl
cmp
xor
jecxz
or
cmpsb
mov
arpl
mov
outsl
decb
sbb
fisubrs
pop
push
stos
call
jnp
dec
sbb
mov
xchg
call
addr16
mov
xchg
jmp
jno
int3
lods
xchg
and
or
aam
arpl
pop
arpl
adc
lea
push
pop
and
jg
es
add
ret
push
push
mov
leave
mov
testl
and
sub
add
shll
call
inc
sahf
imul
add
lods
or
sub
scas
inc
adc
xchg
jg
mov
mov
aas
adc
inc
pop
call
and
in
cmpsb
cmp
or
enter
cli
and
push
dec
mov
jle
leave
mov
xor
add
in
aad
push
jg
cmp
and
sub
iret
notb
sub
nop
cwtl
mov
mov
in
call
iret
and
dec
sahf
test
cmpsb
fdivl
das
mov
mov
adc
lret
dec
pop
das
inc
ret
call
pop
ljmp
mov
add
cmp
sub
decb
test
movsl
and
add
js
enter
imul
jae
dec
and
leavew
fsin
sub
pop
mov
or
shrb
add
fsubs
cmp
jg
dec
pop
movsb
sub
adc
mov
cmp
cmp
jno
mov
adc
or
mov
mov
das
push
mov
xchg
lds
fdivrs
pusha
add
mov
jmp
mov
aaa
sub
jae
adc
and
sbb
dec
imul
push
call
inc
or
shll
pushf
mov
dec
out
adc
cwtl
fisubrl
add
lret
movsl
icebp
pop
cwtl
cmpsl
lock
shrl
int3
addr16
mov
pop
ljmp
mov
ror
add
in
dec
add
rcrl
push
and
pop
adc
push
loope
je
mov
mov
and
cmpsw
mov
or
cmp
jne
mov
xor
xor
or
aas
sar
setl
fcoml
jl
test
out
sub
je
cmp
hlt
jne
leave
addr16
inc
loopne
test
mov
js
std
outsl
mov
and
cmp
arpl
in
cmp
jnp
jns
movsb
dec
cmpsl
cmp
in
jne
mov
in
mov
add
pop
data16
dec
mov
pop
lods
cmp
aas
jnp
icebp
adc
pop
insb
popa
loopne
and
sbb
mov
mov
mov
mov
mov
or
mov
lock
dec
pushf
cltd
inc
fs
mov
cmp
cmp
gs
test
insb
sub
ja
cmc
inc
pop
outsl
and
aam
push
mov
inc
daa
shll
ds
push
in
xor
data16
cmp
mov
seta
int3
cmp
mov
add
lock
xchg
repz
pop
mov
test
pushf
push
pop
es
xchg
inc
sbb
lds
jo
push
or
aas
lock
mov
push
sbb
outsl
and
and
pop
or
and
lock
xchg
into
pop
bound
cmp
out
push
aas
test
mov
mov
add
mov
in
mov
lea
fistpl
xchg
inc
sub
adc
aas
adc
xchg
sbb
bound
xchg
movsb
shrl
test
dec
popf
scas
xchg
gs
lock
or
es
ss
test
fcmovnb
jbe
sbb
test
pushf
mov
xchg
cmp
xchg
das
stos
mov
sub
fisubl
pop
insl
jge
adc
pop
loopne
hlt
roll
mov
lock
movsb
inc
shr
and
inc
jmp
inc
es
dec
leave
or
int
ret
into
cs
fsubr
or
leave
movsl
or
sti
mov
hlt
rorl
mov
ret
mov
cmp
jae
cmp
imul
test
jns
jmp
fwait
push
popa
push
push
in
inc
or
fmul
jle
lea
shrb
hlt
adc
shld
sbb
ret
xchg
jecxz
xor
push
stc
inc
mov
and
or
xor
xchg
cmp
pop
adc
testl
push
push
dec
xor
pop
fnstcw
jle
push
lea
mov
call
pop
xchg
in
pop
push
rcrl
pop
idiv
inc
xchg
push
and
ret
int
fnstcw
jne
fidivrs
call
arpl
lods
js
xchg
mov
in
sahf
cmp
out
cltd
mov
add
icebp
adc
setg
in
mov
rcll
cmpsb
sbb
jnp
leave
aam
call
xor
dec
sbb
aaa
jg
add
icebp
and
or
sbb
repz
push
out
out
and
lock
sub
push
ds
in
jns
dec
mov
es
or
adc
inc
sbb
outsl
cmp
pop
je
mov
stos
mov
push
xorb
jne
sub
loop
nop
test
or
xor
scas
popa
test
add
add
ss
movzwl
sub
dec
mov
std
push
push
notl
add
xchg
push
fs
leave
ja
fisubrs
mov
pop
inc
push
add
cmp
daa
xor
je
stc
arpl
push
push
xor
movsw
popa
inc
in
pop
xchg
call
inc
dec
mov
xchg
pop
shrl
mov
mov
lods
adc
jnp
adc
je
loopew
mov
pusha
dec
push
movb
sub
fcmove
test
jg
xchg
callw
pop
loop
mov
cmp
roll
into
cwtl
scas
pop
fcoml
enter
bound
fs
in
push
mov
and
fiadds
popf
mov
clc
inc
xchg
je
adc
pop
or
inc
fucompp
das
jne
ljmp
mov
xchg
pusha
stos
sti
mov
cmc
jb
in
roll
gs
dec
mov
insl
cld
loope
scas
imul
pop
sbb
es
fisttpl
mov
push
mov
or
xor
pop
add
pop
lods
in
mov
daa
jbe
dec
lods
sub
es
pusha
call
and
aad
sti
es
mul
cmpb
lock
sub
call
mov
inc
dec
mov
inc
pop
mov
mov
push
aam
popa
mov
mov
add
ljmp
in
or
mov
sti
stos
inc
sub
cs
mov
sub
int
xor
orb
add
imul
xchg
sbb
cmp
orl
or
mov
sbb
fs
or
sbb
out
shll
popa
pusha
test
mov
and
push
clc
scas
in
mov
in
mov
push
imul
xorl
add
shrb
popa
xchg
push
test
test
iret
sarb
imul
xlat
sti
or
jnp,pt
pushl
in
fmuls
call
mov
or
or
pop
and
adc
cmc
jl
mov
inc
push
insl
cwtl
adc
test
leave
and
scas
aaa
es
imul
xchg
pop
fwait
inc
and
inc
mov
into
or
add
dec
lods
shrl
testb
xor
punpckhwd
insb
and
mov
daa
add
xor
push
lock
mov
jge
push
mov
js
mov
shrl
lods
int3
das
test
mov
mov
enter
add
pop
or
in
mov
mov
loopne
insl
in
push
jne
fstpt
fdivrl
rcrb
inc
push
fmul
jge
xchg
adc
aam
lret
pop
test
and
aaa
or
scas
or
roll
out
or
cmp
cltd
xor
jge
pop
mov
or
dec
jbe
cmc
enter
cmp
sbb
push
call
mov
jle
jnp
mov
sarl
std
idiv
sub
and
push
call
push
dec
cmp
add
sub
xchg
stos
cmp
add
pushl
sub
sub
lret
add
sbb
daa
movsb
sub
call
add
aas
pusha
push
cmp
mov
mov
and
add
imull
adc
jge
inc
adc
jmp
loope
sub
pop
and
jne
dec
mov
lahf
mov
lahf
add
jecxz
in
jns
leave
out
cmp
jmp
test
dec
imul
and
lods
fiadds
bsf
inc
push
ljmp
decl
xor
xor
xor
mov
call
ja
mov
insl
mov
jmp
inc
adc
cmp
sub
fldl
add
mov
bnd
or
int3
lret
arpl
jbe
xchg
xor
add
or
int3
cmp
jo
jo
ffreep
in
xchg
fucomi
or
sbb
lea
inc
xor
ret
cltd
movsl
scas
aas
cld
hlt
mov
icebp
test
sbb
lds
fldt
enter
xchg
add
rclb
call
lcall
lods
aaa
pop
xor
mov
xor
jmp
daa
add
sub
inc
and
scas
fisubrs
scas
gs
ud2
test
mov
cmp
mov
add
add
insl
in
call
push
and
les
jmp
mov
mov
mov
push
xlat
lret
push
or
mov
mov
mov
mov
push
outsb
mov
or
sbb
xchg
fistpll
test
pop
jmp
or
jle
push
lahf
call
mov
mov
scas
or
add
fdivl
xchg
push
ja
mov
mov
cwtl
adc
out
dec
insl
push
sbb
inc
jne
cmp
adc
mov
adc
notb
adc
jl
cmp
add
xchg
cmp
out
jl
pop
cmp
imul
lret
push
movsb
inc
imul
mov
enter
loopne
xchg
xor
cmp
add
daa
push
inc
add
aaa
int3
dec
xor
jo
xor
add
mov
or
sub
mov
add
fcomps
sbb
xchg
mov
adc
add
jne
pop
mov
xchg
cmp
or
arpl
jne
clc
test
aad
mov
jge
jns
aam
and
fdivrs
movsl
inc
push
push
add
jl
mov
out
jl
into
xchg
pop
jp
mov
dec
mov
test
call
fs
dec
xor
je
dec
in
xor
movsl
notb
movsb
mov
push
xor
push
jne
arpl
sbb
mov
adc
pop
cmp
xor
pop
icebp
scas
aas
sar
call
mov
aam
or
mov
sbb
mov
cmp
int
test
inc
dec
mov
mov
clc
push
add
adc
outsl
es
jne
add
out
scas
fisttpll
aas
xchg
in
andb
dec
fdivrs
test
adc
pusha
cmp
aaa
mov
add
xor
fildll
in
in
and
xchg
push
test
mov
or
insl
xchg
mov
pop
inc
outsl
ds
mov
into
mov
cmp
sub
imul
aam
mov
cmc
call
push
test
inc
cmpsb
pushf
pop
and
mov
push
stos
in
adc
xchg
cmp
adc
shl
or
or
or
ds
sub
and
outsl
imulb
and
shl
mov
push
ret
stos
loopne
jno
jmp
push
sahf
cmp
pop
or
xchg
enter
adc
push
or
and
adc
jecxz
push
or
mov
and
call
mov
adc
jge
push
insb
dec
lcall
insb
jne
test
jbe
cmp
push
data16
loope
decl
jg
sub
cmp
pop
add
ljmp
call
dec
lret
sbb
lds
add
nop
divb
jne
mov
fsubs
add
mov
insb
sti
sub
popf
aaa
jge
clc
jno
jg
cld
je
pop
xchg
cmp
jmp
imul
jmp
dec
scas
mov
push
jmp
stos
cld
mov
cmp
addr16
mov
movsl
cmp
sbb
sub
in
les
adc
jecxz
xchg
lea
gs
jae
lds
adc
iret
jl
and
fldenv
gs
mov
ja
inc
cmp
jne
ficompl
bound
popa
cmp
insl
push
or
mov
jle
add
in
adc
mov
push
imul
popa
jl
pop
pop
lods
lea
clc
jmp
dec
mov
or
jge
call
add
jl
jge
xchg
daa
arpl
xchg
scas
jmp
push
aas
ret
mov
and
inc
stc
in
subb
mov
nop
imul
adc
fwait
xchg
push
sarb
sub
mov
leave
movsb
cli
repnz
icebp
std
mov
bound
lret
out
dec
cmpb
sarb
sbb
arpl
lods
push
aaa
call
in
or
or
add
pop
mov
cmp
jge
push
mov
mov
sub
adc
push
jmp
jmp
cwtl
sub
push
xchg
xchg
and
cmp
popw
loopne
imul
inc
fiaddl
mov
inc
ja
js
cmp
js
push
popf
lock
nop
fwait
inc
dec
or
add
cwtl
cmp
adc
add
xor
dec
repz
cmp
loopne
cmp
lcall
mov
je
test
das
fidivl
and
mov
xor
xorl
fmull
sub
fwait
dec
es
xlat
pop
add
cmpl
jb
inc
and
scas
and
xor
je
jae
pop
mov
add
les
cmpb
cmp
push
mov
sub
call
jae
push
xor
in
xchg
call
xor
mov
test
cltd
daa
pop
es
jmp
jmp
dec
jle
imul
jne
push
lock
dec
gs
mov
lock
push
push
aas
je
std
mov
dec
in
aad
add
inc
mov
insl
push
fld1
sub
fdiv
fstpl
fistpl
sub
xchg
or
pop
call
xchg
stos
adc
hlt
lods
mov
or
and
outsl
les
push
fwait
or
aas
adc
jb
unpckhps
inc
xor
out
dec
lods
mov
and
into
xchg
out
test
fwait
in
mov
sub
jge
cmpsb
sbb
lods
hlt
fsubrl
dec
sub
push
xlat
andl
add
pop
mov
sbb
and
jae
or
fldl
je
dec
imul
inc
jns
sbb
add
cmp
jl
add
pusha
mov
sbb
and
test
loope
int3
mov
aad
xchg
movsl
rclb
jmp
stos
fidivrl
int
pop
mov
push
movsb
lock
outsl
dec
jmp
cmp
jge
leave
popa
inc
mov
bound
mov
xor
bound
insl
imul
mov
in
cli
shrl
jo
inc
sub
inc
out
jge
mov
push
popa
imul
sub
call
and
orb
pop
arpl
rcrl
adc
pop
mov
push
and
xor
stos
ds
xchg
ret
loope
call
or
mov
loop
loop
adc
mov
arpl
aad
mov
out
jo
inc
pop
mov
test
add
mov
leave
and
mov
xchg
ds
xchg
adc
mov
sbb
fimull
mov
push
jg
arpl
test
mov
sti
mov
jecxz
mov
mov
pop
xor
xchg
in
jno
pop
fs
icebp
and
mov
push
or
addr16
shll
sbb
mov
xor
sti
and
xor
xor
lahf
je
int3
das
das
int
inc
cmpsl
pop
and
mov
fs
jle
mov
cmp
mov
cmp
aam
in
scas
push
lcall
jbe
dec
popa
insl
or
sub
xchg
mov
push
stos
outsl
int
dec
jg
inc
out
push
mov
push
cmc
psubsb
inc
sbb
fisubrl
add
mov
test
or
call
gs
mov
int3
lret
pop
add
inc
arpl
popf
or
sbb
pop
cmp
or
push
stos
in
fucomip
add
mov
inc
add
repnz
add
enter
push
inc
movsl
jnp
or
es
push
xchg
adc
pop
stc
mov
mov
aam
inc
xchg
xchg
insl
mov
mov
loopne
inc
dec
ret
cmp
or
scas
loopne
add
es
xchg
push
dec
jmp
fisubl
and
enter
mov
adc
ljmp
fs
in
fnstsw
in
cmpl
test
or
stos
or
mov
orb
sub
add
les
bound
mov
sbb
imul
mov
test
xchg
add
imul
mov
repnz
clc
and
aas
mov
insb
cmp
lea
sbb
xchg
add
fwait
mov
jb
outsl
pop
mov
or
jle
jp
test
cmc
dec
lret
fbld
cmp
cmpsl
cmp
sub
mov
nop
add
inc
xor
add
cmp
aad
mov
jnp
movsb
jp
sub
repz
lock
xor
int3
lea
push
nop
sbb
cmp
mov
aas
rcrl
jno
imul
cmp
lahf
repz
push
xchg
push
in
out
or
or
add
mov
mov
or
rcll
call
cltd
and
jl
cltd
inc
pop
cli
cmpl
negb
push
es
insb
call
stc
addr16
inc
test
in
scas
movsb
mov
jo
pop
popa
and
or
gs
loope
mov
lret
iret
lds
mov
cmp
xchg
jbe
sahf
adc
push
sub
out
fdivs
inc
lea
mov
xchg
and
test
fsubrl
sarb
mov
and
clc
repz
or
es
xor
mov
cmp
cmp
je
imul
repnz
idivb
fcompl
test
je
or
out
mov
lret
in
pop
insl
mov
fldt
xchg
add
cli
mov
ss
stos
filds
out
sbb
arpl
fldl
insl
cmp
mov
xor
pushf
mov
call
pop
xchg
push
pop
enter
rorb
in
icebp
fs
pop
lcall
rorb
xchg
test
test
rcrl
sbb
sbb
in
xchg
mov
fistps
call
adc
adc
fwait
icebp
fidivrl
nop
int3
adc
imul
out
idiv
outsl
push
mov
loope
cmp
aas
loopne
add
cwtl
int3
push
dec
ficoms
adc
and
jne
dec
lea
in
dec
push
pop
cwtl
loopne
mov
cmp
xchg
push
add
movsb
loopne
dec
out
or
xchg
push
les
dec
jp
push
inc
pop
pusha
icebp
sub
imul
ret
addr16
pop
mov
leave
test
dec
enter
mov
push
std
mov
pushf
or
jge
pcmpeqw
test
push
jbe
fsubp
jb
sbb
jno
fs
in
jle
cld
fldenv
fistpl
scas
xor
out
test
lcall
adc
testb
jl
gs
ds
push
sarb
fs
xchg
and
sbb
jns
andl
cmp
xor
add
mov
jnp
mov
arpl
jne
pop
cmp
dec
movsl
dec
iret
aam
xchg
popf
jl
xlat
das
aam
mov
in
daa
test
adc
or
out
pop
ja
popf
push
data16
cmpsb
jp
iret
sbb
lock
imul
cmp
lret
frstor
adc
lret
mov
imul
imul
jmp
add
out
dec
jne
lods
loopne
mov
push
mov
shll
xlat
push
push
push
mov
sbb
or
scas
jecxz
rcl
in
or
call
xchg
or
out
dec
loop
clc
mov
cltd
lock
inc
lcall
cmp
cmpsb
add
daa
lds
je
adc
inc
adc
mov
andl
out
jns
lea
std
jnp
jge
popf
mov
add
int3
cmp
pop
leave
je
ret
loope
roll
aad
mov
fwait
jle
lahf
mov
call
lock
push
jne
adc
stc
mov
mov
sub
push
push
push
sbb
lret
loope
and
mov
sub
je
xor
lods
xor
sete
inc
mulb
fcomps
shlb
push
mov
xor
in
clc
add
je
stos
inc
lea
mov
out
outsb
jge
push
fists
xlat
or
andb
outsb
test
mov
in
add
dec
leave
mov
fidivl
lret
test
int3
sbb
cmp
imul
pop
xor
push
ja,pt
cs
jb
push
call
outsl
aaa
in
xchg
add
pushl
dec
mov
inc
cli
mov
inc
push
lcall
pop
pop
lods
and
pop
stc
lock
ja
hlt
mov
push
iret
enter
rolb
popf
xchg
cmpsl
call
adc
mov
cmp
xchg
add
add
scas
jne
cltd
imul
mov
stos
cwtl
push
sbb
push
in
dec
cld
mov
jmp
stos
adc
add
frstor
fcomp
test
mov
test
pop
pop
rol
push
adc
push
adc
es
push
and
sbb
pop
insl
or
jb
jg
add
fdivl
push
pop
pop
repz
xchg
scas
fadds
push
mov
repnz
inc
push
shlb
xor
push
xlat
jbe
xor
gs
cmp
mov
ret
jbe
lds
xchg
cmpsb
stos
imul
stc
dec
and
scas
leave
ret
into
mov
cmp
call
sbb
add
outsl
loopne
or
jno
ja
push
call
jge
sub
adc
lods
clc
push
mov
add
inc
add
and
movsb
adc
xor
adc
gs
add
jecxz
sub
movsl
imul
push
push
push
outsb
call
lret
pushl
pop
dec
insl
push
cmp
ss
testb
loopne
inc
lods
iret
add
or
jne
add
push
push
call
gs
imul
or
ja
call
fcompl
enter
push
cmovle
sub
mov
orb
xchg
fdivrl
or
sbbl
cltd
into
jge
loope
les
les
jns
decl
jbe
imul
shlb
cmpl
jne
sarl
add
int3
rcl
push
push
adc
js
fildll
out
jmp
ret
mov
js
pop
adc
jle
fstpl
test
xchg
out
add
lock
dec
sbb
pop
ret
push
and
mov
mov
mov
mov
fwait
shrd
mov
inc
inc
aas
push
add
pop
in
mov
aas
je
aaa
movsl
push
outsb
inc
repz
or
push
jmp
mov
jge
add
imul
add
add
testl
sub
aam
mov
xchg
int
sub
out
mov
pop
sbb
cmp
loope
or
mov
sar
dec
cli
fldl
lcall
mov
sub
or
pop
roll
add
mov
sahf
sbb
sahf
in
or
movb
pop
add
mov
fistpll
cwtl
testb
jmp
pusha
mov
fidivrs
xor
ficoms
xor
testb
adc
mov
in
stc
adc
xchg
fisubrl
mov
mov
fistpll
cld
fiaddl
mov
jb
jg
gs
sub
xchg
shrl
adc
out
xchg
inc
sahf
mov
cmpsb
popf
mov
ficoml
jne
push
ja
fisubs
xor
adc
icebp
xchg
jp
mov
in
mov
adc
mov
in
xchg
mov
in
js
fimuls
xor
inc
fmulp
xor
repz
xor
adc
mov
adc
and
adc
jg
std
or
ja
jecxz
mov
jne
stos
jns
cmp
adc
dec
pop
fimuls
push
adc
loopne
mov
fimuls
xor
xchg
mov
sahf
sbb
rol
int3
xor
fsubp
rorb
mov
inc
aam
rorb
cmp
aad
shrb
mov
or
or
out
and
mov
out
or
pop
or
xchg
aas
jno
cld
imul
jmp
faddl
lret
mov
xchg
adc
mov
adc
adc
pushf
lods
mov
aaa
or
dec
rcrl
jo
adc
adc
mov
ss
xchg
movsl
mov
cmp
shlb
mov
adc
xchg
adc
mov
sub
xor
mov
mov
adc
int
adc
add
or
mov
imul
jo
adc
mov
add
arpl
adc
sub
adc
lea
and
ficoms
fimuls
xor
pusha
fisubs
int
dec
adc
cmpsb
jb
mov
cld
add
dec
mov
mov
adc
push
xor
sbb
mov
push
fimuls
push
std
add
adc
inc
mov
adc
scas
xor
cmp
xor
pusha
fimuls
inc
imul
mov
adc
mov
xor
aaa
loop
sbb
inc
adc
aam
mov
pop
add
insl
filds
or
jae
xchg
cmp
lcall
enter
adc
xchg
pop
sahf
arpl
adc
adc
cmp
or
dec
filds
mov
adc
jg
adc
hlt
or
clc
fists
inc
imul
cmp
movsb
mov
ss
arpl
call
pop
imul
loope
in
test
lret
adc
xor
adc
adc
or
add
mov
jge
mov
adc
leave
lods
xor
adc
sub
adc
dec
cmp
fisubs
lea
fimuls
xor
xchg
rolb
outsb
adc
and
mov
fsubr
or
adc
mov
adc
add
test
xor
adc
mov
pop
aad
aaa
ffree
mov
adc
lock
fimuls
xor
adc
mov
adc
mov
jecxz
mov
xor
cld
xor
or
mov
dec
aaa
sti
xor
loopne
mov
adc
xlat
xor
int
mov
jle
mov
shlb
mov
xor
pushf
mov
adc
loop
gs
mov
adc
xchg
aam
mov
jecxz
mov
sbb
mov
insb
imul
add
rcrl
adc
mov
movsb
or
or
xchg
aaa
movsl
or
dec
ss
in
cmp
aaa
or
or
fiadds
xor
dec
loope
pop
adc
adc
out
xor
adc
mov
sahf
in
push
clc
fists
and
mov
clc
pop
imul
ss
fistpll
fiadds
jmp
faddl
insb
lret
fimuls
xor
sub
jmp
fstl
fimuls
cmp
pusha
mov
fimuls
scas
adc
mov
adc
or
adc
test
ss
fdivl
adc
mov
adc
push
push
adc
test
pandn
xor
adc
inc
hlt
jle
je
push
and
fimuls
jg
fdivs
xor
cmp
fimuls
jp
mov
mov
jne
jg
std
or
fwait
adc
daa
pop
fisubrs
mov
test
mov
repnz
adc
mov
fimuls
adc
mov
mov
mov
cld
or
ss
mov
adc
fwait
xlat
jo
mov
js
gs
mov
sub
mov
inc
fimuls
mov
add
adc
mov
jne
xchg
mov
adc
xchg
aam
mov
loope
mov
sbb
lods
xor
push
aaa
mov
imul
inc
sahf
or
push
cs
xor
xchg
fsubrs
fldt
dec
fisttps
inc
mov
and
adc
adc
xor
xchg
adc
fimuls
push
test
mov
pop
decb
xor
in
mov
pushf
push
mov
gs
xor
aas
mov
mov
pop
decb
xor
lods
jnp
xor
rcl
xor
mov
mov
divl
mov
pop
decb
xor
inc
enter
faddl
xor
push
imul
cmp
fimuls
jmp
fldl
xor
fimuls
lret
pop
faddl
negl
mov
or
in
or
mov
pushf
in
ss
and
push
adc
popa
jb
or
and
sahf
xchg
mov
fimuls
xor
fiadds
loopne
notl
fimuls
xor
enter
and
xor
sti
test
insb
adc
mov
adc
jne
xor
xchg
roll
mov
fimuls
xor
adc
mov
and
xor
adc
mov
cld
cmp
push
adc
fimuls
xor
pop
lahf
push
xor
adc
mov
adc
xchg
mov
and
xor
sbb
or
fimuls
daa
xchg
pop
push
inc
cltd
out
xor
insb
mov
push
pop
sbb
mov
out
dec
fldl
mov
popf
hlt
into
inc
in
mov
xor
sti
roll
adc
xchg
je
cmp
pop
fcompl
ss
mov
pop
pusha
shrb
pusha
mov
xchg
shlb
ss
jg
xchg
shlb
jnp
scas
push
or
xchg
adc
or
jmp
mov
adc
sub
enter
adc
dec
mov
xchg
sub
ror
xchg
sahf
in
jmp
fldl
cmc
xchg
into
fdivrs
ficoms
cmp
inc
cwtl
mov
test
xchg
mov
or
adc
mov
pushf
imul
push
sbb
sub
lret
xor
xchg
enter
adc
repnz
adc
xchg
adc
adc
mov
mov
or
adcb
std
cmp
pop
imul
adc
xchg
in
adc
fs
sahf
imul
fldl
inc
sahf
imul
push
xchg
mov
bound
popf
imul
adc
jno
adc
xchg
cld
sbb
jmp
fldl
aaa
add
andl
loope
cmp
add
push
int
mov
pop
fimuls
ss
mov
add
fdivrp
aaa
in
scas
fmuls
fldl
mov
dec
xchg
adc
imul
add
imul
push
add
add
add
in
push
out
adc
add
add
add
testl
movsb
pop
cmpsl
add
add
pushl
arpl
add
add
add
repnz
rolb
add
adc
add
add
inc
add
push
add
pop
add
ja
add
add
add
add
jb
jae
dec
add
add
add
or
jmp
int
add
mov
add
add
inc
jbe
add
add
add
add
add
jb
dec
pop
add
add
push
cmp
add
imul
add
add
aaa
outsl
add
add
inc
pop
add
inc
add
inc
add
push
add
add
add
push
add
dec
add
add
add
push
add
add
dec
add
dec
add
cwtl
add
add
inc
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
gs
je
inc
jbe
outsb
je
add
push
imul
insb
insb
outsl
arpl
add
inc
jb
popa
je
inc
imul
imul
jae
add
gs
je
push
push
add
movsl
add
add
add
inc
gs
gs
inc
outsl
insb
outsl
jb
add
je
imul
outsl
jb
add
gs
je
inc
dec
inc
imul
add
add
add
add
inc
gs
imul
add
push
push
dec
outsl
je
data16
arpl
push
add
inc
jb
addr16
jne
jb
inc
imul
add
add
add
inc
gs
jb
jns
arpl
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
dec
gs
popa
addr16
outsl
js
add
inc
gs
gs
dec
outsb
jne
add
popa
jb
jo
gs
add
inc
push
outsb
jne
je
insl
add
inc
gs
jb
jns
imul
push
outsb
push
imul
outsl
outsl
imul
add
push
imul
jae
bound
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
inc
gs
imul
outsl
arpl
add
insb
insb
push
imul
outsl
arpl
add
jb
insb
insb
push
imul
dec
jo
outsb
dec
arpl
add
inc
insl
jo
jns
insb
imul
add
inc
jb
popa
je
dec
outsb
jne
add
je
arpl
insb
insb
push
popa
outsb
add
dec
outsl
popa
fs
je
imul
outsl
jae
push
jne
je
gs
popa
add
dec
outsb
data16
popa
je
push
arpl
inc
outsb
jne
push
push
push
imul
add
fs
popa
imul
jae
popa
addr16
gs
add
gs
je
dec
arpl
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
inc
insb
imul
arpl
outsb
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
inc
outsb
jne
inc
push
imul
add
je
gs
je
jo
imul
dec
imul
add
inc
gs
imul
inc
jb
ja
arpl
add
push
gs
imul
jae
add
je
jne
dec
outsb
jne
add
je
outsb
jne
add
je
arpl
dec
outsb
outsw
add
inc
gs
inc
dec
inc
push
jb
arpl
add
je
jne
jae
jb
add
je
gs
je
je
add
inc
gs
arpl
insb
insb
push
outsl
jae
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
je
imul
jb
popa
fs
jb
arpl
jae
add
dec
outsb
jbe
insb
imul
je
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
outsb
fs
gs
popa
addr16
add
inc
gs
outsl
jo
imul
inc
imul
add
push
gs
popa
jb
outsb
je
add
insl
push
outsl
inc
push
add
ja
outsb
imul
arpl
add
je
outsb
jne
je
insl
dec
inc
add
inc
jb
popa
je
push
imul
inc
add
inc
gs
gs
popa
insl
gs
gs
inc
add
push
gs
gs
jae
inc
popa
jo
jne
add
inc
outsb
popa
bound
imul
push
gs
arpl
gs
imul
inc
gs
imul
js
inc
add
inc
fs
jae
push
imul
arpl
add
dec
outsb
je
jb
arpl
arpl
push
gs
outsl
jbe
dec
outsb
jne
add
outsb
outsl
ja
jb
insl
push
outsl
imul
inc
imul
jae
popa
addr16
add
dec
outsl
popa
fs
arpl
inc
add
push
je
outsb
push
arpl
push
imul
outsb
outsl
ja
gs
popa
addr16
add
inc
jb
ja
gs
inc
add
inc
push
ja
jb
add
dec
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
inc
add
inc
imul
dec
gs
popa
addr16
add
add
add
push
inc
add
dec
add
push
pop
xchg
dec
loopne
sidtl
add
add
add
add
add
add
adc
add
push
add
add
inc
add
adc
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
add
adc
add
mov
add
add
add
add
pusha
add
int3
jnp
add
push
add
pop
add
add
je
js
add
add
adc
add
add
add
add
and
add
jb
popa
je
add
testl
add
add
add
add
fs
je
add
add
std
add
add
add
into
add
add
add
add
jb,pn
jb
add
add
addb
add
add
jl
add
sbb
add
add
rolb
add
add
add
add
push
add
inc
xchg
adc
rcll
cs
fs
rorl
popa
inc
loope
pop
jmp
inc
push
imul
popf
mov
cmp
rclb
add
xchg
mov
dec
push
jl
lock
fdivrs
lock
mov
cmp
mov
ss
outsl
js
sbb
pop
dec
rcll
rcrb
sbb
ja
addr16
rolb
lahf
inc
ds
xchg
orb
imul
lock
mov
adc
add
movb
movsl
pop
insb
mov
mov
mov
ja
lret
xchg
adcl
jb
mov
mov
push
pop
inc
js
mov
ljmp
scas
imul
inc
gs
sbb
iret
cmp
loopne
out
inc
xchg
sbb
bound
out
in
push
aad
in
outsb
in
arpl
addr16
cmp
jo
sbb
mov
mov
jle
in
xchg
xchg
pop
pop
scas
mov
xor
push
fbld
sbb
push
mov
or
lahf
mov
mov
movsb
and
cmp
clc
inc
imul
cli
in
test
repnz
xchg
lock
je
or
or
cwtl
mov
subb
mov
jno
xchg
add
jno
or
shll
addr16
ds
jae
sub
jle
call
push
mov
movsl
dec
sbb
lret
adcb
xor
and
rcrl
or
and
and
stc
fadds
movsb
sbb
mov
and
cmp
sbb
mov
inc
dec
adc
and
shrl
xor
pop
rorl
add
loop
mov
pop
pop
je
je
mov
push
mov
pop
dec
cmp
fwait
mov
cli
push
fstl
addr16
cld
in
out
hlt
sbb
and
cli
inc
aaa
lret
loope
inc
adc
push
in
xchg
pop
push
es
jl
sub
jp
dec
push
dec
or
adc
lds
xchg
imul
pop
repz
xchg
and
xor
cld
push
cld
cli
test
ja
jmp
test
cmp
xor
or
mov
cwtl
adc
movsl
mov
push
push
adc
leave
idivl
sub
xchg
stos
loope
jnp
push
fdivl
mov
adc
cld
and
mov
jg
bound
and
sbb
in
lret
or
lret
or
inc
std
call
push
cmc
pop
ss
push
jle
sahf
push
adc
scas
popf
shrb
sahf
xchg
mov
xchg
cmp
sub
mov
dec
cmc
mov
jne
or
in
push
inc
pop
mov
fcomi
xchg
xchg
dec
sub
mov
pop
jo
aam
lods
loope
cwtl
lahf
inc
jo
jp
xchg
mov
xchg
mov
xchg
cmp
jmp
dec
inc
gs
ljmp
mov
movsb
mov
add
aad
ljmp
dec
mov
pushf
push
int
arpl
push
aaa
pop
inc
push
push
out
cmp
push
add
clc
aas
inc
mov
push
xchg
push
outsb
jp
sub
inc
or
adc
int
xchg
lods
sub
fdivrp
fcmove
dec
push
sbb
adcb
lret
or
bound
aam
jg
or
mov
jmp
or
dec
je
mov
fdivs
pop
daa
inc
dec
mov
dec
pop
rorb
leave
std
rcl
cmp
mov
xchg
lcall
add
popf
cld
xchg
mov
hlt
and
adc
icebp
outsl
sahf
inc
lret
mov
inc
pop
test
mov
inc
and
jnp
adc
imul
ret
xchg
js
sub
push
pusha
fwait
mov
lock
lea
sahf
andl
push
xchg
lods
clc
lcall
cmp
pop
and
mov
mov
hlt
pop
or
fs
fiadds
and
xchg
mov
sub
pop
testb
mov
cld
adc
fsubl
leave
adc
sbb
imul
js
in
xchg
mov
cltd
mov
add
xor
sbb
cli
nop
popf
ds
mov
lods
xchg
xlat
push
das
subl
stc
fcmovne
rolb
xor
enter
mov
std
pop
out
mov
into
std
lret
cmpsb
addr16
jp
mov
rolb
std
cmpsl
ret
rcrl
pusha
adc
testb
and
mov
scas
pop
sub
mov
sbb
or
data16
cwtl
outsb
inc
sub
jbe
clc
cld
das
add
sbb
or
lea
lcall
pop
or
nop
dec
push
jmp
nop
mov
outsb
add
sub
aaa
or
in
fnsave
sub
pop
fsubrs
sti
mov
sbb
and
fwait
sbb
pop
mov
adc
push
movsl
pop
mov
int3
xor
jae
loop
arpl
out
pop
scas
jnp
test
cmpsb
push
ret
jg
dec
push
hlt
pop
in
and
inc
pop
loope
fcompl
mov
in
adc
call
roll
add
ret
in
sarb
js
cmp
add
jae
std
jecxz
dec
out
xchg
dec
ja
and
inc
mov
inc
rcrl
sub
cld
arpl
jg
fistpl
pop
dec
sbb
inc
loope
scas
addb
xor
imul
fisubrs
mov
arpl
jnp
mov
repz
and
aaa
test
ficomps
data16
inc
in
jbe
lcall
sbb
repnz
sbb
sbb
mov
cmp
mov
lret
mov
je
mov
xchg
cld
aad
mov
jnp
les
or
es
lahf
add
bound
cmpsb
icebp
das
mov
aas
xlat
loopne
clc
xor
xor
jmp
add
xor
in
in
inc
jno
jae
jns
mov
and
pop
pop
cltd
mov
shlb
adc
jp
enter
in
out
sbbl
out
pop
xchg
and
xor
mov
mov
cmp
xlat
jge
xchg
inc
test
xchg
lahf
js
mov
insl
lods
movsb
jmp
movsl
add
mov
popf
pop
mov
and
xor
testb
pop
push
aad
bsf
ret
xchg
push
subl
fiadds
fisubrs
jg
xor
fs
iret
repz
mov
inc
das
pop
xchg
add
inc
mov
aam
inc
stos
add
jmp
cltd
pop
or
jae
cmp
clc
iret
aam
repz
cmovp
mov
sahf
iret
inc
sbb
outsl
xchg
mov
in
mov
hlt
cltd
add
xchg
mov
xor
jmp
mov
clc
add
add
jge
paddd
sbb
sahf
xlat
cmp
sbb
sahf
out
loopne
int
sub
call
sub
shrb
fsubs
sarl
repz
fiaddl
pusha
icebp
fxch
loop
lea
adc
lahf
mov
fdivs
jno
shll
shl
xor
aam
sbb
or
mov
mov
cmp
sub
pop
pop
mov
jmp
jo
jbe
push
cmp
mov
xchg
xcrypt-ctr
cmpsl
popf
jae
ss
push
and
mov
xchg
push
test
icebp
jo
ror
sub
xchg
mov
and
cmpsl
mov
mov
es
cmpl
dec
mov
inc
into
fistl
fsub
push
lds
xchg
aad
pop
fcomp
sbb
aad
mov
lock
aam
sbb
outsl
test
cmp
mov
das
arpl
adc
jns
sbbl
clc
les
sahf
mov
cli
lahf
loopne
dec
mov
sub
pusha
test
je
divb
aas
loopne
push
adc
and
cmp
sbb
roll
int
jne
dec
scas
inc
mov
push
xchg
lds
test
mov
mov
out
es
dec
insb
mov
fidivl
xor
sbb
or
pop
mov
adc
out
dec
xor
pop
insl
or
mov
or
decl
aad
lock
roll
js
ficompl
sarb
add
cmpsb
cltd
add
inc
mov
cld
popf
or
cmc
ret
jbe
dec
cmp
mov
sbb
lret
in
stos
outsl
in
imull
ret
mov
mov
jnp
jo
push
sub
sbb
cmp
jns
mov
dec
sbb
xchg
sbb
jo
lds
push
and
aas
push
push
and
adc
cmc
clc
enter
mov
cmpsb
sahf
fnsave
xchg
popf
add
nopl
shlb
or
std
cmpsl
and
lods
sub
adc
lds
hlt
jle
negb
fstl
mov
pusha
pusha
dec
push
push
jl
fcmovb
pop
lret
and
pop
out
cmp
mov
in
mov
sub
rdpmc
aaa
ret
jbe
xchg
cli
pop
push
push
outsl
sbb
xchg
dec
iret
sarl
lods
jmp
shrl
xchg
fbld
mov
or
inc
testl
xchg
fnstcw
cwtl
outsl
mov
popa
xchg
xchg
inc
pushl
scas
cwtl
xchg
mov
ljmp
xor
xchg
pop
push
jno
or
scas
dec
push
sbb
jno
lret
mov
addb
sub
ds
and
std
jb
dec
pop
and
mov
push
jge
je
pop
mov
cmpl
icebp
outsl
and
and
sub
mov
xorl
xchg
jo
mov
dec
adc
stos
xchg
mov
lahf
xor
xor
sbbb
outsl
mov
xlat
loopne
mov
cmp
dec
mov
or
add
mov
and
mov
sub
out
xor
xor
mov
cmp
pop
xchg
imul
scas
cmp
sbb
mov
adc
lret
xchg
xchg
jg
notl
lods
ja
mov
add
int3
mov
xchg
fwait
pop
fdivs
lock
or
lret
sub
fnstsw
and
cmp
adc
stos
pop
aam
push
int3
fidivrs
cmp
xor
mov
in
stos
xlat
inc
dec
lods
inc
loop
push
cmp
outsb
ret
push
jmp
push
adc
idivb
add
inc
pop
jno
xchg
mov
sbb
jns
cmp
rcl
inc
lret
icebp
sub
fs
jb
cmp
cmp
cld
xorl
ds
push
ficomps
pop
cmp
imul
loop
loopne
test
push
mov
sti
call
std
or
sbb
adc
imul
fistpl
mov
subb
cs
pop
jne
xor
fimuls
loopne
iret
aad
pop
je
repnz
xchg
outsb
xchg
std
pop
push
imul
ljmp
ljmp
ret
adc
sub
shl
xor
sbb
xor
and
adc
push
xlat
or
inc
adc
aas
dec
mov
in
and
sbb
sbb
mov
std
mov
xlat
shlb
cli
rolb
mov
in
in
pushl
xor
repz
loop
addr16
jno
mov
in
test
xchg
dec
lcall
jne
xor
outsl
out
insb
add
sbb
insb
outsl
jb
push
sub
cmpsl
jbe
push
cmpsb
add
lock
ret
jbe
in
std
add
mov
mov
repnz
inc
cmp
xor
add
lods
fcomps
icebp
nop
sti
push
aad
jno
jno
pop
add
cmp
fwait
adc
popa
mov
or
daa
mov
inc
shll
jmp
push
loop
jge
lret
out
mov
ds
out
popf
popa
shl
mov
sub
outsb
std
loop
or
inc
mov
inc
mov
es
pop
xor
push
mov
push
lods
add
mov
push
int3
push
inc
push
sub
ljmp
sbb
and
xor
push
pop
inc
xorb
and
mov
push
inc
mov
les
mov
lds
cmp
nop
jnp
fimuls
mov
pop
pop
lods
inc
or
pop
lds
pop
push
pop
and
and
lds
mov
xor
or
stos
jae
push
mov
int
enter
andl
mov
mov
xchg
lea
push
lods
add
shll
lret
xorl
mov
aas
jmp
daa
jbe
icebp
push
stos
jmp
addb
pop
add
in
xchg
lea
push
cs
jge
add
and
fildl
into
ljmp
pop
scas
fwait
movsb
in
pop
add
add
add
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
