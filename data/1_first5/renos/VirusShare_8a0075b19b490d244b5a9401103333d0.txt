jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
bound
bound
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
call
cmp
ja
lea
mov
lea
lea
mov
mov
xchg
inc
dec
mov
lea
xchg
dec
xchg
jmp
mov
lea
lea
inc
dec
inc
call
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
call
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
movl
pushl
pushl
mov
push
call
mov
pop
ret
mov
push
mov
add
movl
pushl
pushl
mov
push
call
call
call
call
movl
pushl
pushl
mov
push
call
call
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
lea
push
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
movl
pushl
pushl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
mov
cmp
je
call
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
mov
xor
divl
test
jne
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jae
lea
xchg
lea
mov
mov
mov
inc
mov
lea
dec
dec
mov
mov
mov
mov
xchg
lea
dec
dec
mov
cmp
je
jmp
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
push
mov
push
call
mov
mov
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
cmp
ja
lea
mov
lea
lea
mov
mov
xchg
inc
dec
mov
lea
xchg
dec
xchg
jmp
mov
lea
lea
inc
dec
inc
mov
cmp
je
jmp
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
call
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
mov
sub
mov
mov
mov
mov
lea
lea
lea
mov
mov
inc
inc
dec
dec
jne
mov
xchg
mov
mov
mov
mov
mov
inc
inc
push
mov
mov
xor
call
mov
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
mov
mov
mov
call
cmp
jae
lea
xchg
lea
mov
mov
mov
inc
mov
lea
dec
dec
mov
mov
mov
mov
xchg
lea
dec
dec
push
mov
mov
xor
call
mov
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
lea
mov
push
mov
jmp
mov
mov
mov
lea
lea
lea
mov
mov
inc
inc
dec
dec
jne
mov
xchg
mov
mov
mov
mov
mov
inc
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
ja
lea
mov
lea
lea
mov
mov
xchg
inc
dec
mov
lea
xchg
dec
xchg
jmp
mov
lea
lea
inc
dec
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
mov
sub
add
add
mov
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
call
push
call
mov
cmp
jae
lea
xchg
lea
mov
mov
mov
inc
mov
lea
dec
dec
mov
mov
mov
mov
xchg
lea
dec
dec
mov
call
mov
mov
mov
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
inc
inc
dec
dec
jne
mov
xchg
mov
mov
mov
mov
mov
inc
inc
mov
mov
movl
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
mov
pop
ret
lea
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
cmp
mov
mov
in
mov
call
in
mov
mov
mov
xchg
mov
mov
in
mov
movsb
in
mov
imul
int3
inc
xor
test
insb
mov
inc
xor
mov
insb
mov
inc
xor
add
insb
mov
inc
xor
out
cmp
mov
inc
xor
in
imul
int3
inc
xor
shrl
insb
mov
inc
xor
leave
imul
mov
inc
xor
iret
std
or
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
int3
adc
ret
jl
int3
int3
adc
inc
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
jl
int3
int
out
cmp
int3
int3
inc
ss
or
xor
mov
inc
xor
or
ss
lahf
xor
jl
int3
cmp
int3
mov
or
inc
sub
or
les
mov
cmp
int3
int3
outsb
les
std
or
ret
jl
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
outsb
ret
jl
int3
std
or
les
inc
dec
enter
inc
aaa
std
or
ret
jl
int3
inc
dec
enter
std
push
inc
ffreep
jl
int3
inc
dec
enter
std
or
ret
jl
int3
inc
lahf
aaa
inc
pop
enter
std
or
les
leave
orb
int3
std
push
inc
ffreep
jl
int3
leave
sbbb
mov
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
ja
lea
mov
lea
lea
mov
mov
xchg
inc
dec
mov
lea
xchg
dec
xchg
jmp
mov
lea
lea
inc
dec
inc
movl
mov
mov
mov
lea
lea
lea
mov
mov
inc
inc
dec
dec
jne
mov
xchg
mov
mov
mov
mov
mov
inc
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
mov
mov
call
mov
cmpl
je
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
mov
cmp
je
mov
subb
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
mov
xorb
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
incl
mov
cmp
jne
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
mov
call
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
movb
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
mov
mov
pop
ret
mov
push
mov
add
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
mov
mov
mov
lea
lea
lea
mov
mov
inc
inc
dec
dec
jne
mov
xchg
mov
mov
mov
mov
mov
inc
inc
call
test
jne
mov
jmp
movw
cmp
jae
lea
xchg
lea
mov
mov
mov
inc
mov
lea
dec
dec
mov
mov
mov
mov
xchg
lea
dec
dec
call
lea
mov
pop
ret
push
mov
add
mov
lea
cmp
jge
lea
mov
lea
lea
mov
inc
dec
xchg
mov
mov
mov
lea
dec
inc
dec
lea
xchg
mov
dec
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
movl
pushl
pushl
mov
push
call
lea
push
call
call
call
cmp
jbe
lea
lea
mov
mov
mov
xchg
xchg
mov
mov
xchg
xchg
mov
mov
lea
lea
lea
push
call
call
movl
pushl
pushl
mov
push
call
call
call
call
lea
push
call
call
call
cmp
jl
xchg
lea
cmp
jns
lea
mov
lea
mov
xchg
mov
mov
xchg
dec
inc
dec
lea
mov
mov
dec
dec
lea
push
call
cmp
ja
lea
mov
lea
lea
mov
mov
xchg
inc
dec
mov
lea
xchg
dec
xchg
jmp
mov
lea
lea
inc
dec
inc
call
lea
push
call
lea
push
call
lea
push
call
cmp
ja
lea
mov
lea
lea
mov
mov
xchg
inc
dec
mov
lea
xchg
dec
xchg
jmp
mov
lea
lea
inc
dec
inc
movl
pushl
pushl
mov
push
call
call
movl
pushl
pushl
mov
push
call
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
push
call
mov
call
mov
mov
mov
lea
lea
lea
mov
mov
inc
inc
dec
dec
jne
mov
xchg
mov
mov
mov
mov
mov
inc
inc
mov
pop
ret
jne
je
jae
fs
insb
and
add
in
add
lea
push
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
call
movl
pushl
pushl
mov
push
call
call
call
call
call
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
call
call
call
movl
pushl
pushl
mov
push
call
movl
pushl
pushl
mov
push
call
call
cmp
jae
lea
xchg
lea
mov
mov
mov
inc
mov
lea
dec
dec
mov
mov
mov
mov
xchg
lea
dec
dec
lea
push
call
lea
push
call
cmp
jl
cmp
jno
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
xchg
mov
mov
inc
lea
push
call
call
mov
pop
ret
subl
jae
mov
cmp
js
mov
mov
lea
dec
inc
mov
lea
dec
inc
lea
lea
lea
mov
mov
lea
mov
jmp
lea
inc
inc
mov
mov
mov
lea
call
cmp
jnp
lea
lea
mov
inc
mov
lea
xchg
mov
mov
lea
lea
mov
mov
mov
mov
inc
dec
dec
ret
mov
ret
lea
push
ss
ficomps
xchg
filds
adc
push
xchg
stc
ret
jp
aam
pop
cli
or
pop
add
add
insl
rclb
data16
roll
int3
and
out
jb
add
add
ret
int
add
add
add
dec
sbb
fsts
scas
neg
adc
mov
add
hlt
sub
outsb
nop
mov
push
stos
movsb
inc
out
add
jmp
and
add
add
xchg
xor
aaa
add
mov
add
fwait
push
mov
repnz
sbb
stc
add
stos
lcall
push
xor
add
ret
test
xor
icebp
lods
jp
push
xchg
pop
xchg
inc
aad
movsl
add
sub
cltd
mov
push
add
xor
or
sti
loopne
add
movsb
sarb
or
loopne
jbe
add
in
sub
stc
sbb
sbb
inc
inc
add
add
ja
xorb
mov
add
or
add
outsl
iret
add
add
nop
add
int3
nop
out
pushf
insl
addr16
add
adc
or
pop
shrb
inc
add
mov
cmc
dec
and
inc
loop
sub
out
insb
add
adc
mov
add
add
mov
or
sti
cmp
popf
add
add
add
mov
repz
add
adc
test
dec
or
insb
add
xor
cmp
add
and
sbb
loope
add
add
insl
xor
fcmovnu
push
rorb
notb
sti
enter
add
dec
mov
add
cmpsl
ja
add
inc
loop
adc
push
dec
add
sbb
dec
iret
inc
mov
add
add
faddl
add
test
sbb
mov
inc
add
pop
jae
push
add
mov
pop
jmp
jmp
mov
add
shll
aas
jg
int
int3
xor
add
scas
add
sbb
push
rcll
loopne
add
jnp
fldt
add
dec
cmp
add
pop
movb
add
add
add
cmp
xchg
add
mov
dec
ret
xchg
outsb
adc
inc
add
js
xchg
push
ss
push
fists
es
pop
add
dec
sahf
movsb
daa
lcall
add
cwtl
sahf
add
ret
lods
mov
lret
pusha
add
mov
push
movsl
add
adc
add
add
mov
adc
add
out
add
inc
adc
lods
pop
popf
add
add
jbe
add
movsl
add
ret
adc
xor
mov
imul
add
or
sub
add
mov
lahf
mov
add
je
fisubrs
xor
add
or
add
lcall
int3
adc
pop
jmp
mov
sub
push
fistpl
cmpsb
imul
jp
pop
daa
mov
add
mov
jle
arpl
daa
or
add
add
mov
adc
stos
add
inc
mov
mov
js
add
add
popf
push
mov
fstpt
add
push
add
lods
stos
add
out
jns
fsubr
ja
mov
or
add
mov
dec
dec
cmp
mov
add
xchg
rcrl
je
xor
clc
adc
addr16
pop
add
xchg
adc
and
test
add
adc
mov
lcall
pop
jo
data16
jbe
xchg
das
cmpsb
out
xchg
outsl
push
sbb
pop
ficoml
dec
loope
std
data16
jbe
cmp
imul
push
cmp
cmpsb
repnz
dec
inc
pop
sbb
mov
imul
add
pop
nop
ss
mov
stc
pop
push
fnstsw
lcall
in
insb
mov
out
outsb
jbe
adcl
insb
jnp
mov
cmp
mov
imul
mov
cmp
int
dec
pop
fcoms
in
testl
add
fstpt
scas
sbb
xchg
test
sub
outsl
enter
pop
xchg
mov
fs
add
outsl
outsb
xor
push
jo
jge
sub
movl
lock
repnz
mov
cmc
xchg
mov
pop
pop
sub
iret
adc
cmpsl
adc
jmp
add
or
sub
mov
push
and
xlat
leave
fcoml
mov
xchg
sti
ljmp
gs
cli
nop
std
bound
inc
xor
hlt
dec
test
mov
test
popa
call
dec
cld
sbb
adc
outsb
pushf
aaa
and
out
scas
cs
xchg
aad
xor
int
hlt
aam
jb
inc
jb
shll
fnsave
add
inc
lea
jg
mov
jg
mov
push
jp
popa
out
dec
mov
js
pop
out
add
lock
fsts
mov
mov
arpl
sbb
ret
adc
mull
sbb
cld
adc
dec
lret
sub
shll
mov
shlb
jno
add
sub
xchg
and
ret
imul
je
arpl
les
cmc
fisubl
popa
jl
fsubrs
dec
fistpll
xlat
adc
push
xchg
xchg
cld
cmove
pop
add
sbbb
sbb
xor
test
sub
frstor
jecxz
xchg
ret
mov
aas
inc
nop
pop
inc
insl
fldcw
cmpsl
lods
adcl
mov
insb
jb
mov
adc
mov
and
fs
enter
das
daa
mov
lcall
daa
mov
or
jnp
fwait
push
gs
push
js
addl
aaa
test
jns
push
cmc
in
pop
cmpsl
xchg
xchg
popf
ss
pop
cmp
add
and
jp
jge
mov
cmc
cmc
mov
jmp
das
pushl
js
pusha
pop
mov
fbstp
or
xchg
repz
subl
shrl
outsb
and
push
imul
cmc
and
push
insb
cmp
jge
inc
inc
fidivrs
ds
in
mov
or
cmp
ret
add
aas
es
cli
fwait
mov
and
push
cmp
stc
popf
lea
dec
inc
bt
fcmovbe
subb
adc
lea
imul
scas
mov
and
rcl
stc
mov
pop
jnp
leave
cld
testb
daa
cmpsl
inc
addb
inc
shrb
cmp
cmp
sub
out
pop
inc
pop
mov
inc
lret
mov
insl
ret
xchg
xchg
and
cmp
movsb
add
and
xor
jge
test
enter
daa
out
xchg
mov
cmp
dec
pop
jl
in
dec
in
pop
push
aad
lahf
xor
fimuls
test
push
push
test
push
fs
xor
cmpsb
push
jns
push
mov
in
sbb
push
jmp
loope
sub
sub
punpckhwd
dec
sub
pop
cmp
movsl
pop
inc
adc
cmp
jae
outsl
andb
sbb
xor
dec
xor
or
ljmp
push
cltd
pop
iret
stos
lcall
neg
pop
outsl
add
jnp
out
fsts
loope
cmp
sub
add
mov
sub
mov
fidivs
push
sbb
and
int
aaa
push
fmuls
and
or
lret
xchg
shll
mov
mov
mov
mov
cmpsl
mov
push
fs
testl
lods
sub
cmp
subb
pop
xor
xor
cmp
or
pop
sbb
lods
cmpsl
mov
loopne
fdivl
inc
movsl
adc
js
xchg
fstl
adc
inc
arpl
jne
into
stos
inc
jbe
xor
ret
dec
add
sub
or
in
icebp
pusha
sti
cltd
mov
dec
gs
dec
nop
fdivs
fmull
stos
inc
inc
inc
js
fsts
mov
std
xchg
sbb
notb
sub
add
arpl
pushf
loop
sub
push
fldcw
inc
loopne
mov
jb
inc
dec
dec
cmp
je
sbb
inc
movb
xchg
pop
push
fdivl
loop
sbb
cmpsl
jne
fcmovnbe
je
pop
xchg
int
inc
in
cmpsl
lock
pop
imulb
aas
lret
jo
popa
mov
dec
inc
cwtl
shll
fs
mov
dec
and
push
mov
mov
in
cld
aas
incl
pushf
daa
test
das
cwtl
push
mov
out
xor
rcl
lods
and
outsl
xor
pop
ret
clc
xor
es
sbb
jl
clc
jp
adc
push
stos
add
mov
shll
outsl
out
bt
cltd
add
test
loop
stos
mov
inc
ficoms
out
es
loopne
test
sub
mov
rcll
movsl
lods
stos
jb
sub
xchg
lock
add
jne
lcall
bound
ss
or
getsec
xor
imul
mov
dec
das
and
pop
ljmp
dec
mov
repz
sbb
push
sbb
pop
add
xor
loope
xor
loopne
in
ljmp
dec
xchg
inc
mov
add
and
orb
mov
mov
mov
out
mov
popa
dec
pop
sbb
je
mov
neg
mov
mov
xchg
mov
movsb
stos
out
or
movsb
mov
test
mov
and
mov
cmpsl
cmc
loopne
icebp
jmp
pop
in
push
lahf
adc
das
iret
lcall
pop
scas
jl
inc
add
cltd
mov
call
repz
mov
shrb
jle
inc
mov
movsl
xchg
or
mov
imul
scas
add
shr
jl
bound
jae
xchg
hlt
lahf
sbb
cld
inc
test
jbe
test
ja
aaa
clc
mov
test
les
cld
int3
pushf
stc
fs
outsl
mov
and
jo
daa
pop
scas
test
cmp
cmp
jmp
movsb
mov
jbe
cmpb
sbb
push
push
jp
out
fidivrl
in
outsb
jno
add
aad
and
xor
xor
jns
cmpsl
lahf
xchg
les
adc
test
sarl
inc
rorb
cmpsb
in
je
in
cmp
mov
pop
pop
mov
push
push
and
sub
jl
cmp
add
ds
movsl
popa
mov
rcrb
rcrb
adc
sbb
sbb
jmp
lods
iret
cld
sahf
pop
fsubp
shrl
imul
push
ret
fadd
adc
cmp
cltd
adc
push
mov
jg
mov
fists
mov
pop
or
inc
mov
es
int
add
add
mov
cmp
rorl
rorb
xor
test
sbb
pusha
dec
imull
mov
loop
mov
pcmpgtb
xchg
push
ss
xchg
cmp
jge
and
cli
adc
ret
les
or
sub
and
xor
jg
push
pop
data16
push
jmp
imul
and
loop
pop
jmp
out
inc
cmp
push
mov
pop
popa
push
sti
dec
sub
andl
adc
dec
dec
inc
or
fxch
pop
ret
xchg
repz
xchg
loopne
or
movsb
lods
addr16
dec
fldl
adc
sti
sub
xorb
jl
inc
sti
sti
cmp
jb
je
dec
scas
repz
je
mov
jecxz
and
movb
dec
lea
cwtl
push
mov
and
adc
dec
xchg
jb
fildl
xor
imul
int3
and
push
mov
lock
aam
push
roll
xchg
sbb
push
sub
dec
sbb
adc
jle
dec
icebp
mov
pop
lret
or
mov
pop
push
mov
push
outsb
shlb
sbb
aam
mov
mov
scas
or
xor
je
ja
sbb
fldt
adc
notb
mov
in
nop
push
dec
dec
iret
lar
and
jle
cltd
aaa
xchg
sub
icebp
mov
sbb
test
or
testb
in
hlt
push
pop
cwtl
mov
stos
popa
fs
xchg
aaa
popa
inc
add
mov
stc
cmc
mov
or
adc
mov
daa
pop
jb
xchg
loope
pop
movsl
mov
ja
push
mov
les
or
mov
push
mov
sbb
imul
enter
or
in
rcrl
xchg
xor
lock
cmp
mov
sti
imul
mov
pop
mov
mov
fs
lret
dec
jns
fcomip
mov
jmp
mov
orl
out
mov
sub
in
outsb
push
out
sub
pop
pop
dec
and
inc
push
jnp
push
add
cmp
push
adc
or
iret
stc
mov
loop
push
pop
in
das
inc
adc
les
push
pop
push
ret
popf
fisttpl
jbe
or
adc
arpl
fcompl
testb
data16
sub
int3
pop
rorb
popf
mov
mov
sbb
ljmp
inc
mov
xchg
or
je
add
mov
cmp
iret
push
mov
pop
rcl
int3
xchg
jnp
sahf
ficomps
xchg
lds
testb
int
inc
cmp
jne
sub
ret
jge
jle
enter
daa
in
lds
sbb
xor
fcmovu
jl
mov
dec
ret
pop
into
push
fwait
push
js
pop
mov
jae
sbb
pop
fwait
test
pushf
loope
inc
dec
sub
in
in
and
out
js
pop
xchg
pop
xchg
mov
adc
ljmp
lods
pushf
dec
mov
addb
xor
sti
addb
dec
add
lret
xchg
mov
jo
pop
add
adc
lcall
jne
insl
mov
sub
xchg
outsb
lahf
sbb
adc
outsl
jge
jg
push
add
push
enter
mov
push
sub
and
leave
mov
fadds
push
push
lret
std
shll
mov
sahf
cltd
rolb
mov
test
cmp
mov
mov
xor
cmp
js
arpl
out
cli
inc
sbb
dec
cmpsb
jmp
sub
or
inc
adc
cmc
jmp
adc
sbb
jns
test
adc
jnp
adc
call
insb
data16
ljmp
add
loope
xchg
add
xchg
addr16
notl
xor
dec
nop
mov
push
dec
test
cld
flds
mov
adc
nop
jl
mov
call
int3
adc
adc
frstor
jmp
mov
sbb
aad
xor
push
aas
sarl
dec
jb
fildl
dec
sub
nop
lcall
or
adc
xchg
cmpsl
sub
es
ret
inc
mov
pop
fdivrs
inc
repz
lds
std
mov
mov
out
jmp
cmp
mul
xchg
pop
std
sti
mov
dec
pop
lods
mov
mov
popa
xchg
cs
xchg
ja
lret
jp
popa
mov
fbld
sub
xchg
ljmp
xor
shlb
inc
inc
insl
sbb
cwtl
xchg
mov
mov
popa
rcll
mov
xor
and
aas
loope
xchg
adc
test
insl
mov
mov
aad
fstpl
aaa
dec
test
jl
xchg
loop
mov
test
inc
xchg
inc
stos
push
test
out
shlb
xchg
jle
jns
std
or
lcall
sub
mov
mov
sub
jmp
pusha
push
push
ja
and
sub
loop
or
shlb
fwait
loope
xchg
push
popa
out
mov
mov
dec
stos
out
aam
jg
pop
int
jge
or
xchg
sbbl
mov
testb
jp
aas
lock
mov
fnstsw
in
aaa
jne
or
call
pop
call
jmp
push
xchg
sbb
lret
out
sarb
sub
pop
cmpsb
ss
mov
loop
cmpsl
add
jnp
andl
in
test
ror
pop
es
ret
mov
jecxz
inc
sbb
mov
push
test
or
fstl
jle
in
addr16
sbb
mov
scas
leave
xor
shlb
push
mov
adc
leave
popa
and
xor
jne
inc
mov
jg
ja
sbb
jae
aaa
jbe
repnz
pop
addb
mov
loop
int
rcr
sub
lds
lcall
in
jne
and
inc
cmp
sbb
push
jecxz
add
push
scas
enter
daa
in
cmp
dec
mov
jno
xlat
and
sub
jp
xor
jp
jle
xor
scas
loopne
lahf
cmp
js
jecxz
mov
push
addr16
js
ficoms
into
in
or
gs
xchg
jp
loop
push
cmp
cmp
sar
cmp
in
ds
pop
mov
outsl
mov
pop
nop
dec
adc
or
xchg
xor
pop
push
pop
sub
xor
pushf
dec
cmp
dec
sub
jns
push
jo
ret
rorl
sub
sub
dec
jp
and
and
call
cmp
mov
push
lret
out
aam
js
pop
push
sub
sub
xor
cmp
fwait
pop
lret
sub
aaa
push
scas
mov
and
stc
pushf
sbbl
push
add
outsl
inc
movsl
fwait
loop
orl
cmpsl
test
adc
shl
cmp
jae
dec
out
adc
cli
ja
pop
xor
lods
arpl
cvtps2pi
outsb
arpl
cmc
mov
into
loopne
orb
clc
and
imul
jno
and
data16
lods
in
push
cmp
lods
sub
test
mov
xor
pop
outsb
cld
lea
pop
ljmp
jne
inc
jg
jb
aaa
arpl
repz
pop
sbb
lcall
pop
inc
push
push
adc
mov
cmpsb
shrb
jnp
cmp
rcll
inc
xor
mov
jo
aaa
jb
ja
dec
popf
add
je
push
jecxz
or
xor
mov
mov
adc
cmpl
add
jnp
sbb
push
sbb
or
mov
fdivl
mov
ljmp
mulb
or
std
mov
pop
enter
test
cmp
ja
jmp
dec
mov
test
mov
dec
fs
rorb
sub
aam
sbb
ret
movsl
cmpb
call
das
xchg
cmc
rolb
dec
inc
popa
fdivrs
mov
mov
repz
std
push
add
xadd
movsb
lock
add
aam
jo
mov
fnstsw
cmp
flds
mov
rcrl
inc
pop
stos
aas
push
out
xor
add
jb
pushl
sbb
mov
fwait
ljmp
jg
sbb
fs
pop
sbb
test
inc
adcl
fwait
adc
gs
inc
aas
jns
mov
scas
out
jns
jns
push
ret
in
lcall
pop
call
add
icebp
lcall
xchg
xchg
jp
mov
imul
mov
sahf
or
stos
mov
fbstp
xor
loope
fs
pop
add
subl
out
pusha
shrl
dec
pop
push
gs
stos
xlat
mov
mov
push
xchg
jb
jle
or
in
push
adc
push
mov
mov
xor
or
mov
inc
es
jae
lahf
xchg
push
dec
repnz
pop
add
or
ficompl
sub
sbb
testb
dec
les
testl
jge
aas
fwait
mov
arpl
loope
fmul
cmp
adcb
xchg
cmovbe
imul
aaa
xor
mov
add
sub
cld
outsb
inc
fmulp
nop
or
mov
into
jge
lret
je
and
xor
add
jmp
das
roll
cld
add
jge
pop
repz
daa
jecxz
sub
jle
sub
clc
mov
push
jle
dec
mov
out
shlb
rorb
pop
push
int3
push
mov
gs
xor
xor
repnz
lods
pop
adc
shlb
and
ljmp
push
xor
in
lea
lods
xchg
rcrl
inc
jo
add
push
sti
xor
rcl
mov
pop
push
mov
pop
sbb
pop
lret
or
lcall
add
ret
icebp
adc
aaa
push
daa
outsb
gs
adc
movsl
dec
mov
xchg
mov
std
xchg
xor
and
xchg
cmp
xchg
lds
fdivr
pop
mov
add
xchg
adc
mov
xor
sub
add
test
lcall
aaa
mov
xor
ficoms
cli
inc
xchg
ss
call
xchg
out
mov
sub
cli
aad
cmp
test
or
inc
outsl
into
cmp
xor
loop
loopne
aaa
inc
pop
ret
jle
adc
or
imul
xor
mov
out
mov
push
lods
int3
mov
sbb
add
dec
sub
lds
pop
xor
popf
xorb
xchg
xlat
les
shlb
inc
xor
inc
xchg
push
adc
outsb
les
aam
rep
sbb
sbb
adc
or
pop
stc
mov
pushf
mov
xlat
jmp
pop
lahf
fisubrs
adc
gs
aas
psubsb
lea
dec
adc
into
je
addr16
jecxz
mov
mov
xchg
fists
mov
add
scas
out
loop
push
inc
xor
xor
xchg
or
or
push
mov
addr16
sbb
mov
pop
and
js
insl
or
sahf
std
dec
clc
inc
dec
or
out
mov
test
jmp
loop
pop
rorl
mov
notl
scas
addr16
imul
pop
dec
xchg
sub
and
pop
push
sub
xor
sbb
insl
out
addr16
data16
call
ljmp
std
lods
pop
popa
in
mov
jp
mov
push
outsl
nopl
add
push
cld
test
dec
mov
push
jp
jb
sbb
push
sbb
or
sbb
cmovo
repnz
adc
cltd
shl
stos
cs
out
xchg
rol
or
jmp
xor
insb
call
ss
xor
sarl
or
mov
xchg
fwait
mov
pop
push
sub
dec
mov
or
fdiv
fwait
aas
outsl
pop
push
cmpsl
test
add
sahf
inc
xchg
xchg
data16
adcl
in
jl
xchg
and
mov
in
sti
mov
in
inc
std
addr16
sub
jp
cltd
push
mov
mov
rorl
stos
pop
or
pusha
push
stc
test
push
or
xchg
mov
inc
jmp
ljmp
out
arpl
pop
sub
xchg
mov
stos
mov
out
aad
and
xor
sub
jle
pusha
inc
in
popl
adc
addr16
ret
adc
inc
xor
jae
sub
or
iret
push
mov
ficoml
hlt
xchg
push
xor
imul
mov
push
ds
pushf
mov
mov
leave
dec
sbb
hlt
lret
push
dec
arpl
cli
inc
xchg
xchg
xchg
movsl
mov
or
mov
int3
dec
lea
sub
sahf
fisubrs
ffreep
inc
cltd
mov
adc
ja
and
sbb
push
adc
dec
or
sbb
and
loop
cmpb
addr16
jl
mov
dec
adc
push
inc
sub
scas
shll
and
shll
mov
shrl
std
adc
cld
sub
cmpsb
stc
ds
fnstcw
add
fcoms
push
and
loope
sbb
mov
cmp
mov
ror
shll
dec
nop
lea
js
rolb
adc
andl
xchg
jg
pop
dec
push
lcall
stos
fsubrl
out
es
jg
enter
mov
cmpsb
add
loop
es
mov
hlt
jb
int
test
jle
pusha
and
orl
test
bound
gs
cmp
pop
xor
inc
in
cmpsb
xor
push
imul
and
lret
stc
hlt
pushf
fs
push
push
ss
fsts
cmp
imul
cs
frstor
in
shll
stos
cmp
adc
ja
sbb
out
cmc
inc
sbb
pop
loop
adc
sahf
and
and
fidivrl
inc
mov
cmp
lods
mov
add
mov
mov
sub
xchg
or
dec
sti
add
mov
mov
push
gs
cmpsl
loop
pop
out
dec
mov
outsl
fldenv
jmp
repz
xor
in
out
nop
push
das
dec
iret
mov
adc
mov
jmp
fiaddl
aad
mov
xor
scas
les
jb
dec
jns
mov
loope
stc
test
jbe
clc
mov
cwtl
add
mov
mov
out
in
ds
and
ret
pop
rorl
inc
mov
xor
lcall
mov
add
and
imulb
dec
dec
or
xor
out
sar
push
loop
lret
in
mov
dec
pop
mov
mov
push
sub
sub
ret
ret
pop
push
es
adc
clc
mov
subl
push
jns
lods
ret
or
mov
popf
jo
and
mov
aad
jle
roll
lret
cltd
adc
fldl
dec
call
xchg
inc
fisttpll
dec
incl
mov
or
pop
inc
sub
js
stc
aam
xchg
push
add
add
lret
push
sbb
aad
lods
or
add
popf
push
sbb
xor
dec
pop
xchg
mov
ja
push
add
sub
inc
mov
mov
fwait
outsb
lock
dec
repz
or
sub
adc
mov
daa
jb
xorb
mov
cmp
out
mov
inc
sbb
jp
push
mov
cmp
pop
mov
andl
dec
mov
jo
and
push
pusha
mov
ljmp
pop
sbb
addl
jo
daa
or
push
jecxz
mov
in
inc
es
mov
mov
mov
cmp
jne
pop
ret
les
dec
jns
cmp
dec
jae
testb
into
lret
pop
popf
ja
dec
push
or
cmp
add
push
push
sbb
inc
sahf
imul
dec
scas
xacquire
shlb
jge
push
repnz
adc
hlt
push
sbb
xchg
inc
xchg
cwtl
add
pusha
ret
mov
std
or
repnz
int3
xor
aad
pop
psubusb
adc
jo
notl
scas
mov
and
mov
cmp
aad
inc
xchg
int
movsl
shlb
push
jge
and
daa
loope
xor
in
fwait
jno
movsl
fs
ret
jg
xchg
daa
pop
stc
xor
sub
lahf
cltd
mov
push
pop
fidivs
test
enter
mov
cmpsb
jl
push
in
shlb
js
mov
xchg
push
jecxz
loope
pop
mov
stc
or
cmp
mov
das
adc
test
les
rcrl
sbb
sub
test
pop
mov
ja
pop
leave
dec
es
and
sbb
and
lcall
fldt
jg
test
mov
push
hlt
mov
mov
pop
cmp
movsl
add
push
xor
fs
testl
jg
mov
jmp
sbb
hlt
or
xor
xor
outsl
loope
or
pop
in
jge
inc
fs
dec
jg
cwtl
or
jnp
push
je
mov
out
cmpsl
aam
adc
mov
test
pop
cmp
push
xchg
or
aam
pop
mov
push
pop
add
adc
imul
sub
add
push
mov
lods
lcall
xlat
xorb
ja
pushf
in
jae
lret
push
andl
cmpsb
nop
cli
cmpsl
fimull
bound
rclb
push
push
repz
mov
xchg
scas
dec
ss
or
pop
pop
popf
sbb
imul
in
mov
jo
outsb
movsb
lret
nop
aad
add
inc
orb
aas
dec
movsl
fbstp
or
je
cmp
or
mov
adc
jo
cwtl
mov
push
mov
jle
sub
lret
fcomi
jno
pop
mov
inc
movq
das
jns
scas
mov
lret
lock
and
fwait
enter
sub
out
sbb
std
xchg
cmc
in
add
lods
cmpsl
loopne
or
mov
pop
loopne
ss
jmp
mov
test
rcrl
aam
enter
xor
es
sub
test
adcb
jge
popa
sbb
test
mov
or
push
xchg
jl
paddusw
roll
fnstsw
dec
test
add
add
fsubrs
or
sbb
shll
pop
push
stos
or
fldz
pop
fcompl
lcall
call
cmpsb
xor
pop
insb
or
mov
xor
dec
cmp
ss
cmp
cli
hlt
pop
dec
cmpsb
data16
insb
jl
jno
flds
jno
or
xor
push
in
xor
mov
mov
out
push
jbe
bound
mov
in
jl,pt
mov
push
fnstsw
loop
add
xchg
inc
jp
leave
mov
pushf
sarl
push
dec
jno
bound
jmp
pusha
push
mov
fists
mov
jmp
subb
push
mov
out
sub
or
call
stos
xchg
rolb
add
aam
or
ss
out
in
add
mov
ret
sti
pop
clc
pop
das
inc
inc
dec
pushl
or
xchg
out
popf
sahf
mov
test
fidivrl
mov
sbb
sub
scas
push
mov
dec
and
cmpsw
mov
pop
jo
leave
cmp
jg
arpl
adc
sbb
pop
sub
jb
rorb
repz
add
cmc
int3
push
iret
pop
pop
mov
repnz
lods
jo
sub
lods
mov
int
shl
lods
push
mov
cmp
out
mov
enter
daa
loopne
das
cmp
in
stc
jno
xor
xlat
mov
add
or
cmp
pop
cli
lahf
mov
scas
test
xchg
fnstcw
inc
sbb
cmpsb
lcall
in
cmpsl
stos
mov
inc
loope
shrb
push
and
sub
sub
jno
cmp
push
pop
ds
mov
movsl
mov
sarb
sub
out
add
out
addl
stc
xor
cmpsl
out
popa
jg
pop
enter
mov
rolb
dec
mov
loope
int3
loop
les
sub
std
outsb
mov
lods
xor
dec
jg
sub
mov
aad
and
fwait
int
mov
fsubrs
push
push
testl
rol
xchg
sub
mov
push
sbb
lods
inc
test
xor
mov
jne
xor
fwait
roll
int3
xorb
mov
gs
loope
cli
inc
call
xor
stc
cmp
insb
fmull
sub
into
loop
popa
cmc
into
mov
adc
lahf
data16
imul
push
add
and
lods
sbbl
or
push
dec
je
mov
fdivr
bound
jmp
lods
xorl
dec
test
testl
sub
les
repz
inc
xchg
jb
repnz
xchg
pop
adc
mov
insl
jmp
push
dec
cs
lret
out
scas
loopne
popf
cmpb
xchg
aaa
dec
jns
pop
je
adc
sbb
xchg
push
inc
cwtl
js
mov
xchg
outsl
dec
adc
fcmovnu
and
pop
pop
pop
add
lock
test
mov
or
and
movsl
adc
pop
add
xor
std
ds
repnz
mov
xchg
icebp
xchg
inc
xor
insb
mov
dec
mov
or
mov
xchg
fstpl
enter
cwtl
in
sub
repz
aam
incl
rorl
fwait
and
clc
pop
add
xchg
icebp
push
aam
idiv
popa
xor
mov
cltd
sarl
out
pop
jo
jecxz
ja
psraw
push
insb
pop
or
cmp
mov
cltd
sbbl
mov
xchg
orps
push
rcr
and
test
pop
mov
sbb
jns
shl
insb
into
pop
lcall
out
mov
sub
pushl
jg
or
pop
xor
lock
mov
repnz
dec
add
jno
pop
sub
adc
inc
fildll
test
int3
ds
nop
sbb
scas
int3
add
das
test
bound
adc
jns
sti
in
sbb
xchg
push
cwtl
mov
mov
ffree
nop
addr16
nop
lret
out
mov
inc
idivl
js
dec
push
dec
adc
pusha
out
sub
fildll
push
sub
dec
cmp
movsl
repz
es
sub
inc
mov
add
or
leave
and
and
insb
xchg
jo
jnp
loope
jle
sbb
in
push
ret
ss
iret
xor
ret
jmp
inc
push
mov
jae
pop
aas
push
push
jne
popf
push
pop
xchg
dec
fisubrl
adc
in
or
dec
lds
adc
mov
scas
cmc
xor
mov
stos
hlt
lods
xor
mov
add
or
test
aaa
xor
or
fistpl
pop
mov
xchg
xchg
xorl
fisubrl
aas
std
mov
movsb
pop
test
lods
jbe
imul
adc
push
sti
lret
dec
daa
fisttps
cmp
pop
jno
jecxz
jl
push
mov
pop
xchg
lret
xchg
mov
and
aam
push
add
jge
stos
outsl
movsl
push
pop
cmp
inc
test
cwtl
dec
in
mov
fnstcw
popa
sbb
push
push
sub
stos
ja
push
es
fbld
pop
push
cld
imul
cmp
sub
add
push
mov
xchg
push
hlt
and
negl
inc
push
pop
cmpsb
xchg
lcall
push
fsubrl
sub
outsb
icebp
nop
or
adcb
out
jg
shr
mov
vmwrite
pop
mov
testl
xor
dec
testl
add
sub
mov
in
icebp
sbb
or
sahf
popa
pop
lret
fs
outsl
lahf
int3
fsub
cmpl
fs
or
lds
pop
or
pop
into
clc
out
lahf
loopne
jbe
insl
xor
sti
cmp
push
pop
or
xchg
sbb
sub
pop
in
pop
mov
imul
dec
add
loope
retw
popa
mov
cmp
xlat
add
sub
cmpsl
mov
dec
inc
daa
sti
adc
sbb
test
nop
mov
in
jecxz
xchg
inc
fisubrs
inc
les
mov
out
xchg
xchg
xor
out
call
rcrb
push
outsb
adc
testl
cs
mov
inc
mov
jb
jb
mov
dec
lock
je
lock
jecxz
pop
dec
sbb
push
lea
rcl
mov
in
mov
out
mov
daa
dec
decl
pop
stos
push
inc
sbb
pop
data16
aaa
loope
mov
cmp
mov
testb
adc
orb
andb
addr16
imul
cld
xchg
shrb
ficomps
push
addr16
cld
mov
out
loopne
imul
sub
push
ss
mov
ret
jo
aas
es
inc
repnz
addb
xchg
xor
xchg
popa
dec
movsb
dec
lods
add
inc
mov
push
dec
sbb
inc
dec
aaa
setnp
jp
add
cltd
mov
repnz
mov
sbb
fldl
lcall
push
out
dec
sbb
pop
mov
dec
aam
pop
inc
cmp
stos
ljmp
xchg
sub
xor
lahf
cmpsb
jne
push
lds
or
sarb
lret
xchg
mov
or
inc
ja
sub
jbe
push
or
fadds
push
xor
ss
and
out
push
xchg
jmp
jns
xor
push
xchg
pop
dec
xor
scas
fs
mov
cmpb
mov
sysexit
mov
rorb
dec
aaa
fdivl
pusha
mov
adc
inc
jl
xorl
out
cli
jbe
fsubl
mov
mov
push
jne
xor
lahf
insb
decl
mov
in
or
push
scas
sbb
xchg
sbb
ret
mov
inc
pop
jno
jae
clc
push
push
pop
js
popf
in
sbb
mov
cmpsl
popf
ficompl
cs
xchg
les
sbb
jb
imul
xchg
scas
sbb
push
pop
outsl
mov
mov
add
push
hlt
idivl
arpl
cmp
nop
or
xchg
inc
lods
aaa
lock
xchg
je
invlpg
int3
hlt
pusha
push
pop
out
adc
sti
jp
lds
aam
or
andb
jno
cmp
mov
push
push
mov
lds
hlt
xchg
enter
daa
fisubrs
jno
mov
orb
int
rcrb
mov
push
stos
adc
aad
lret
test
sub
roll
sahf
cmpsb
add
push
adc
push
into
push
push
loope
add
cmp
clc
ds
pop
out
cltd
xor
shlb
lock
orb
sbb
add
fidivs
arpl
das
pop
push
sub
sub
mov
lcall
jmp
sbb
es
and
jp
adc
sub
imul
aad
mov
mov
sbb
int
orb
mov
mov
push
mov
out
sbb
cmp
sahf
add
xlat
test
pusha
xor
adc
outsl
jle
fwait
loop
incl
mov
out
adc
pop
jb
add
sahf
mov
push
out
loope
cli
test
ret
sarb
adc
into
test
xor
pop
out
loopne
ljmp
ljmp
adc
or
inc
out
cmc
lods
dec
dec
cmp
pop
cmp
aaa
test
in
mov
push
incb
cmp
jmp
nop
mov
fs
inc
jae
inc
icebp
xor
flds
jbe
mov
test
clc
movsb
cmp
jl
adc
inc
add
pop
js
sbb
jo
loope
in
movsb
jmp
jb
cs
vhsubpd
imul
pop
or
pop
decl
dec
je
and
jecxz
jb
push
fists
cwtl
out
fdivrl
mov
cwtd
mov
mov
ljmp
pop
dec
enter
sub
gs
push
neg
mov
lock
add
mov
sar
pop
add
mov
pop
addr16
hlt
mov
cmpsl
mov
inc
lock
ret
lret
sbb
mov
push
lock
js
mov
push
aaa
dec
sarb
movsl
subl
push
imul
es
lods
push
insl
imul
pushf
xchg
outsl
cmp
jae
mov
bound
scas
mov
sub
adc
and
psubd
add
arpl
out
sbb
enter
push
repz
test
xchg
sbb
pop
push
pop
lock
stos
out
test
push
add
repnz
xor
or
or
mov
cmpsb
mov
aas
jo
dec
into
in
movsb
pop
jge
in
pop
int3
popa
dec
dec
aam
inc
or
ljmp
movsl
mov
mov
mov
in
stos
sub
jns
sbb
scas
aad
xchg
lods
ds
mov
int
mov
rorl
addr16
dec
adc
insl
cmpb
xor
pop
jp
inc
mov
pusha
and
mov
xchg
shrl
or
cmp
es
loope
push
add
pop
out
inc
shrl
push
push
fistps
mov
lock
dec
xchg
or
pop
jnp
xor
jle
push
pop
in
and
adc
cmp
iret
icebp
into
movsl
ret
stos
pop
popf
ja
inc
push
test
xchg
popf
adc
xchg
inc
add
outsl
xor
cmp
push
imul
je
mov
cltd
mov
push
pushf
mov
mov
sahf
das
arpl
cmp
dec
and
sbb
aaa
scas
sbb
xchg
push
int3
sub
push
sbbb
push
ljmp
cmp
add
sbb
cmp
movsb
jno
sti
push
mov
rol
pusha
add
enter
daa
fstl
in
jno
mov
jl
cmp
push
mov
cmp
in
adc
adc
cmc
leave
test
hlt
divl
shll
mov
in
pop
popf
jmp
sub
pop
pop
inc
push
cltd
je
insl
xchg
xchg
sub
cltd
cmc
cmp
lds
mov
and
rorb
pusha
mov
sub
sbbb
dec
sbb
lret
movsl
xor
test
stos
pop
out
pop
cmp
sbb
pop
lds
mov
fadd
or
dec
outsb
mov
stc
adc
inc
sahf
outsb
jg
sub
lret
mov
pop
nop
mov
xor
push
inc
clc
and
add
fcomps
xor
jg
rcrl
mov
das
enter
lcall
xchg
outsl
pop
clc
fsub
test
cmpsb
pop
fs
lock
sar
ss
cmp
push
out
xor
mov
xchg
into
xor
mov
ja
mov
mov
or
repnz
inc
pop
jge
xor
imul
cmpsl
scas
add
lds
lods
ss
cmp
repnz
jle
add
stos
sub
mov
pop
sbb
outsl
jg
arpl
andl
int
xchg
dec
mov
sub
les
repz
jne
mov
or
call
les
pop
sub
add
pop
sub
ret
xor
aad
wrmsr
inc
out
push
sub
leave
dec
and
dec
fsubp
mov
call
into
in
and
sti
inc
pop
cwtl
test
insl
repz
std
sbb
lcall
lock
inc
sub
push
das
cmc
push
dec
mov
cmpsl
aaa
out
and
mov
add
std
xor
xor
dec
fsubr
icebp
sbb
push
in
js
lret
repnz
out
mov
mov
and
push
lret
add
movsb
ret
mov
es
mov
insl
push
in
test
enter
scas
outsl
sub
out
mov
lret
fidivrl
mov
dec
stc
mov
std
outsl
sub
pop
lcall
es
stc
or
xchg
push
fstl
xor
add
insl
sbb
aaa
cld
push
push
pop
fwait
push
mov
call
push
or
aad
in
call
and
or
stos
cmp
int3
dec
mov
inc
pop
and
pop
cmp
inc
ja
repz
dec
cmp
aas
orb
aas
fwait
pop
repnz
add
rorb
out
int3
repz
stos
in
mov
xchg
sti
ja
mov
mov
or
jb
addr16
xor
mov
mov
adc
mov
rorl
rclb
or
fwait
xchg
cmpsb
xchg
jmp
lods
xchg
ja
push
enter
std
push
sub
negl
test
repnz
pop
andl
jle
arpl
lds
sti
iret
push
mov
pop
aam
mov
jae
mov
push
popf
popf
cmp
xchg
push
test
test
xchg
jb
pushf
sbb
or
scas
loope
push
sar
xor
test
cmp
sbb
hlt
lea
arpl
cmc
test
adcb
pop
addl
or
movl
lret
pop
inc
xchg
lds
test
aaa
mov
fisubl
clc
mulb
cmp
sbb
push
out
lock
jbe
fwait
lock
notb
fdivr
mov
jno
into
or
test
movsl
inc
push
xchg
aaa
xor
xchg
jno
jnp
test
nop
testl
inc
push
pop
mov
in
inc
mov
js
xor
pop
into
cmp
push
or
test
sub
dec
push
cmp
cmpb
outsl
movsl
cmpsl
js
shr
test
xorb
mov
add
test
insl
out
pop
movsb
mov
je
ret
pop
inc
xchg
push
sub
inc
fdivl
mov
shl
outsb
sbb
lret
xor
andb
jg
fidivrs
mov
cli
fldenv
lock
push
inc
lahf
vpunpckhbw
adc
jns
lret
repz
loope
movsl
mov
sbb
cltd
sahf
dec
pop
inc
test
sub
out
push
outsl
cmp
mov
cmp
xor
adc
mov
jecxz
and
loopne
mov
mov
mov
aaa
out
icebp
jecxz
cvttps2pi
xor
ljmp
out
mov
cmc
ljmp
pop
pushf
push
ljmp
clc
mov
add
sub
adc
sub
in
in
mov
jg
push
das
xchg
int3
nop
inc
xor
dec
add
in
inc
pop
pop
rcr
out
sub
les
test
push
call
sbb
jb
ljmp
and
push
push
pushf
cmp
insb
jmp
daa
cs
dec
cmp
or
inc
or
pop
aas
push
mov
mov
and
and
jb
bound
cwtl
lods
and
mov
ja
jne
pop
dec
rcr
fcmovnu
shl
pop
xchg
pop
add
inc
cli
lock
ljmp
fdivrs
and
adc
xchg
out
dec
idivb
repz
fiaddl
cmpsl
fildl
mov
lock
sbb
pop
lret
popa
je
mov
addr16
mov
inc
popf
mov
sub
into
aam
and
ret
sbb
insl
aaa
clc
pop
clc
add
adcb
in
popa
nop
adc
lods
inc
pop
sbb
outsl
mov
push
fcomps
sub
cmp
arpl
pop
and
mov
dec
mov
push
cmp
ja
dec
test
jge
xchg
xor
rcll
adc
adc
dec
dec
ds
std
sub
add
subb
loop
push
cmp
mov
sub
pushf
push
push
ja
lahf
push
inc
cmp
test
sbb
lcall
lcall
xchg
pop
jns
pop
sahf
in
fimuls
dec
cmc
pop
mov
mov
mov
leave
sub
cmp
sub
inc
dec
jmp
ret
dec
stos
mov
cmp
cmc
pusha
pop
fbld
fildll
jae
xchg
jns
loope
sub
xor
and
mov
lea
sub
xor
push
pop
dec
rsm
fidivrl
and
jecxz
inc
lret
jbe
lods
jle
fs
int3
add
scas
lea
ret
mov
repz
jle
shll
pop
lret
push
pusha
cmp
popf
popa
std
js
xor
clc
fidivl
lgs
xchg
adc
imul
mov
rclb
pop
mov
sti
adc
leave
nop
cmp
hlt
fcoms
arpl
aaa
fiadds
inc
cmp
ret
aaa
sub
insb
je
inc
pop
int3
mov
negl
push
lret
fsubp
frstor
jo
push
fsubrs
mov
jmp
movsb
xchg
push
jbe
call
push
enter
daa
cmp
test
jno
push
mov
push
dec
sbb
push
jns
inc
xor
and
lea
mov
enter
lret
and
mov
ss
sub
aaa
pop
or
sub
loope
and
or
add
add
push
movsl
scas
xor
lds
clc
addb
sbb
adc
add
xchg
dec
xor
push
int3
xor
enter
lds
out
movb
test
lcall
out
sbb
jl
jge
insb
adc
jge
fidivrl
xchg
fidivl
push
sbb
jp
push
inc
mov
cmp
shlb
hlt
idiv
data16
test
mov
insl
sbb
xchg
incb
dec
stos
aaa
outsl
sbb
loop
sti
outsb
stc
iret
fsubs
rclb
int
sarl
inc
mov
sbb
mov
jns
xor
inc
xor
push
into
into
push
outsb
xchg
mov
mov
sub
adc
xchg
imul
mov
test
push
test
xlat
cld
lods
mov
mov
cmc
inc
mov
int
jge
test
js
nop
sbb
or
test
inc
sub
stos
fldenv
enter
mov
icebp
xchg
inc
adc
cmc
mov
mov
pop
xchg
daa
pop
adc
dec
pushf
out
in
jmp
scas
in
testb
inc
and
in
pop
cmp
jecxz
int3
jnp
je
mov
rol
daa
jmp
leave
sbb
pop
jb
mov
pop
aas
mov
and
or
dec
stos
clc
push
fisttpl
decl
ss
mov
lock
shrb
mov
aad
push
addl
mov
and
sarb
in
lret
testb
scas
dec
in
inc
cmpsl
dec
mov
jl
cld
inc
sbbl
mov
jne
mov
arpl
mov
sub
inc
fs
std
dec
ret
lods
rcll
push
out
clc
rorl
ljmp
call
mov
xchg
jne
and
mov
jg
pop
sbb
cltd
xchg
dec
jl
data16
push
xchg
mov
fstpl
mov
xchg
aad
sbb
fincstp
pop
icebp
in
stos
cmpsb
ljmp
inc
data16
or
data16
in
or
adc
xor
add
push
jle
xchg
dec
add
xchg
pop
scas
jp
ja
iret
test
inc
sar
jl
push
sbb
mov
mov
mov
iret
iret
mov
aas
sub
mov
add
mov
popa
fstl
jb
pushf
mov
les
cmp
fnstsw
and
sbb
in
pusha
mov
popa
jne
clc
les
mov
mov
jmp
inc
and
xorl
out
rcrb
sub
insl
inc
leave
push
pushf
cmp
leave
xor
test
jle
pop
sahf
in
pop
adc
or
ret
fistpl
push
xor
jae
pop
jp
and
das
popf
mov
push
inc
adcb
insb
xor
cmp
mov
scas
cmpsl
stos
push
push
jbe
mov
mov
dec
pushf
lods
leave
pop
test
hlt
and
jae
test
cmpl
in
jg
or
in
add
cwtl
bswap
mov
fimuls
xchg
stos
jo
sti
or
push
dec
jge
jno
push
push
lea
jbe
test
jae
loop
ljmp
pop
push
jno
jae
jl
inc
mov
mov
xchg
mov
push
mov
test
push
or
inc
je
push
cmpsb
adc
inc
js
movsb
clc
pop
dec
mov
jecxz
mov
inc
sub
xor
imul
insl
xor
shlb
cmp
pop
out
sbb
test
add
cmc
xor
push
inc
pop
mov
mov
push
pop
pop
inc
push
les
loop
fadd
dec
je
sahf
js
outsb
loopne
adc
cwtl
push
mov
mov
imulb
mov
test
push
shrb
int
push
aam
mov
mov
lret
mov
sbb
into
jns
iret
mov
add
movsb
pop
jbe
cli
push
hlt
loop
or
ja
adc
mov
ss
mov
mov
xchg
mov
jp
xor
dec
adc
les
repz
js
xor
ret
adc
pop
fimull
adc
pop
shrb
daa
adc
js
add
lods
mov
cmp
rolb
mov
pusha
xchg
sahf
sti
jl
mov
xlat
outsl
sbb
mov
pop
ret
pop
or
mov
repz
xchg
add
cmp
push
jae
pop
inc
fbld
adc
push
pushf
xchg
scas
push
cs
les
aas
fnstenv
cmpsb
cmp
dec
inc
mov
mov
jno
pusha
sub
sub
xor
cwtl
fcmove
mov
mov
push
xor
dec
xchg
in
fstpt
out
mov
inc
shl
lock
mov
int3
data16
ret
xor
insb
test
pop
std
sub
dec
loopne
cmpsl
fldenv
mov
icebp
sahf
repz
outsb
ret
xor
aas
sbb
mov
mov
out
mov
adcb
rorb
fidivrl
aam
sub
ret
cmp
es
adc
clc
jns
out
xchg
imul
popa
mov
adc
mov
mov
adc
push
mov
pcmpeqd
add
lds
jno
js
xchg
notb
xor
jno
cmpsl
test
sbb
pop
roll
cmc
jp
pushf
loop
stos
xchg
ja
out
adc
adc
es
ljmp
xor
insl
xchg
insl
or
in
cld
fwait
bound
dec
fsubrl
push
cmp
jns
ja
subl
imul
fwait
out
imul
cwtl
sub
sar
push
out
imul
pop
jns
sbb
bound
mov
dec
mov
mov
dec
xchg
jle
mov
es
mov
sti
fadd
dec
cmpsb
in
xorl
or
mov
fildll
sbb
pop
and
xchg
or
add
pop
jp
mov
fistl
xchg
and
in
jnp
pushl
in
jo
adc
inc
iret
insl
shrb
fadds
jns
jmp
xchg
push
mov
push
out
lcall
ja
inc
add
sbb
out
mov
scas
or
push
mov
mul
mov
mov
mov
sbb
xchg
inc
lods
sbb
or
cmp
jge
xor
bound
outsl
testl
shlb
sub
lds
imul
dec
mov
push
and
arpl
out
jbe
fimuls
enter
daa
cmp
jno
cld
pushf
jl
hlt
repnz
negl
xor
pop
js
lahf
xchg
adc
push
hlt
dec
test
push
push
and
inc
add
in
clc
pop
aaa
js
cmp
pop
mov
subb
loopne
leave
inc
dec
sub
addr16
cmp
xchg
cmpl
xchg
inc
movsl
mov
imul
imul
loopw
add
stos
add
outsb
or
mov
add
jno
in
cmp
rorl
lcall
dec
fdivl
xchg
sub
push
call
xorb
in
mov
rcrl
dec
fsubs
sbb
dec
mov
popf
jg
fadds
sub
jp
imul
inc
shll
sbb
mov
jbe
add
sbb
outsl
fnstcw
loop
push
data16
xor
and
adc
fcoms
cmp
cmp
das
out
out
cli
test
xchg
xor
cltd
cmp
xor
xor
inc
into
pop
adc
aas
scas
pop
loopne
xchg
inc
pop
stc
lret
jne
or
imul
data16
add
shlb
mov
rclb
inc
xlat
jp
test
jbe
cli
mov
lret
mov
ds
out
shlb
gs
dec
nop
shlb
inc
inc
push
and
jle
repz
xchg
mov
shr
jecxz
mov
rcr
pop
testl
pushf
cmp
xchg
jmp
test
pop
aad
pop
out
pop
fdivrs
jb
mov
dec
mov
push
in
and
sub
push
mov
mov
mov
mov
flds
andl
iret
inc
inc
lret
sbb
das
jno
xchg
cmpl
roll
in
std
iret
mov
cmpsl
fcomp
les
jne
fdivr
cltd
fxch
lret
scas
adc
mov
mov
nopl
adc
icebp
adc
aam
scas
mov
es
lea
clc
mov
rclb
mov
repnz
aad
push
lods
xchg
or
fadd
and
imul
negl
jl
leave
mov
in
push
sbb
fucomp
or
test
out
xchg
loopne
sbb
xchg
pop
xor
pop
inc
mov
stos
test
mov
xchg
rolb
pushf
add
aas
decl
xor
sarb
mov
mov
mov
dec
cltd
inc
dec
shll
mov
dec
or
or
scas
sub
add
in
cmp
dec
push
sub
aas
jmp
mov
xchg
aaa
add
in
cltd
ret
mov
in
jp
mov
lret
inc
mov
mov
in
mov
mov
and
pusha
sub
fisttps
pop
inc
jmp
fdivr
aad
mov
out
jae
sub
jecxz
or
jnp
stos
das
mov
and
jg
jnp
pop
and
add
push
in
jge
adc
jae
int3
lcall
mov
xchg
out
sub
ret
or
popf
jecxz
push
sbb
ficoml
lcall
sub
scas
insl
call
push
add
in
shlb
mov
hlt
dec
dec
leave
cmc
jb
hlt
mov
xchg
push
inc
scas
xor
sbb
out
aaa
push
push
or
mov
add
jp
int3
jbe
inc
pop
add
fmulp
aam
lds
mov
and
cmp
out
movsb
sub
pop
push
sub
das
jbe
mov
test
enter
daa
fadd
loopne
scas
sbb
das
je
dec
data16
push
and
xchg
repz
pop
lahf
mov
push
push
in
test
jmp
pop
inc
xchg
sbb
cmpsb
pop
lock
in
filds
jne
push
gs
pop
lret
push
into
out
loope
mov
cmp
lods
mov
ret
mov
leave
popl
sti
cmpb
sbb
mov
xor
lea
pop
add
sub
sysret
inc
xchg
sub
test
fcompl
pop
sub
outsb
cmpsb
mulb
adc
into
fdivrl
mov
mov
inc
mov
pop
xor
sub
scas
push
push
ret
cmpsb
int
lds
add
imul
sbb
mov
out
sub
rcll
pop
hlt
jne
mov
int3
jg
in
pop
pusha
fs
scas
adc
js
lcall
mov
pop
ret
out
inc
pusha
cli
fistpl
mov
in
or
push
in
push
iret
movsl
loopne
and
sbb
adc
jb
imul
test
add
mov
loope
mov
mov
xlat
mov
add
inc
dec
out
in
ss
sti
ficoml
xor
mov
dec
jl
movsl
inc
arpl
sbb
pause
sbb
xchg
mov
mov
pop
clc
lock
aas
out
stos
push
adc
cli
pushf
out
pop
jmp
int
cs
or
lods
inc
jne
insb
aas
in
sub
push
xchg
mov
sub
je
inc
adc
xchg
pop
xor
lds
push
cmp
mov
and
shrl
dec
insb
cmp
cwtl
sbb
inc
into
push
cmp
push
mov
out
or
mov
adc
rorb
testb
std
jbe
mov
ficoml
cmpsl
xlat
adc
mov
dec
dec
fs
sbb
inc
mov
fdiv
xor
rcrb
sub
repnz
aam
test
pop
lahf
js
fldcw
xor
out
jno
xchg
jmp
adc
lods
icebp
push
xchg
mov
sti
push
andl
xor
sbb
mov
cmp
dec
sub
in
fstl
mov
cmp
mov
mov
scas
xchg
adc
stos
jae
add
xlat
add
xchg
sbb
add
ljmp
xchg
sub
das
add
xor
lret
xor
pop
dec
cmp
popf
pop
fbstp
jmp
dec
cld
addr16
stos
jg
mov
rcrl
test
in
add
xchg
inc
enter
lock
xchg
xchg
xchg
mov
mov
or
aaa
add
jp
push
leave
mov
xchg
cmpl
insl
sub
les
fbld
cwtl
test
add
push
mov
cltd
jb
sub
push
push
ds
pop
out
stos
mov
inc
jecxz
in
arpl
xor
jle
icebp
cltd
in
out
xchg
adc
and
push
pop
out
jbe
stos
int3
jge
clc
pushf
cmp
insb
cmp
popf
std
dec
pop
push
decl
loop
and
xorb
pop
scas
rclb
xor
sbbb
mov
outsl
repnz
jo
leave
insb
into
mov
add
lcall
rclb
scas
mov
aaa
sub
incb
popf
and
popa
jne
pop
xor
ret
fs
lds
add
jb
scas
aas
lahf
xchg
and
push
jmp
movsb
mov
push
jp
inc
jbe
movsl
pop
jge
shld
roll
sbb
cmp
or
or
xor
adc
mov
and
popf
push
push
lcall
push
mov
sbb
and
call
in
mov
lea
sti
pop
or
push
ret
idiv
mov
daa
inc
sti
cmp
jbe
lea
rcl
imul
adcb
dec
add
adc
xor
and
insb
jo
fucomi
xchg
mov
fsub
push
fcmovnbe
mov
sub
xchg
outsb
or
sub
ja
sti
pushf
mov
mov
push
ss
lret
cmp
push
push
scas
jecxz
imul
fdivrs
add
jne
and
loop
bound
test
jns
addb
fists
loop
jp
stc
mov
pop
adc
scas
repnz
cmp
xor
repz
pop
in
cli
push
mov
xor
les
test
or
je
into
fldl
jge
xchg
sub
fsubs
scas
lret
jne
add
inc
add
jmp
lods
mov
lcall
pop
jecxz
mov
mov
sbb
gs
lods
jmp
dec
fcmovnbe
loopne
jbe
flds
popf
add
pop
mov
xchg
dec
decb
xchg
fdivrs
call
mov
ds
adc
stc
adc
xchg
jle
jmp
mov
sbbb
inc
nop
adc
aas
addl
jno
push
dec
test
fdivs
in
sahf
mov
lea
js
or
mov
push
mov
sbb
dec
push
movsb
sbb
push
pop
pop
ret
inc
push
sbb
stos
lods
pop
das
das
clc
loope
mov
pop
in
stc
mov
mov
lea
cmp
sbb
adc
roll
jnp
push
icebp
and
sub
out
add
mov
lock
fstpt
pop
cmc
rolb
stos
ljmp
mov
ret
call
inc
es
mov
jp
xchg
sub
pusha
popa
add
nop
mov
push
ficomps
and
pop
mov
setae
add
rorl
xchg
add
mov
icebp
sub
ljmp
sbb
xchg
cli
rcrl
scas
pop
roll
pop
or
stos
bound
notb
ja
sbb
dec
mov
pop
or
pop
mov
xchg
dec
lahf
clc
cmp
lcall
dec
out
lret
sbb
sub
push
fwait
jae
xor
add
loop
dec
out
push
mov
bound
bound
mov
in
mov
xchg
aad
lock
ja
mov
mov
in
addr16
sub
es
jle
mov
dec
gs
dec
fwait
or
jnp
pusha
bound
cwtl
ffreep
jge
xchg
cwtl
or
cld
jbe
xchg
outsb
sub
out
out
sub
pop
add
cwtl
xlat
popf
stos
adc
or
insb
push
sbb
jnp
fs
jle
mov
in
ret
inc
adc
cmp
iret
mov
dec
ret
imul
sub
sub
push
adcl
fisubs
popf
and
sbb
xchg
push
filds
mov
and
call
rcr
scas
xor
push
xchg
cltd
lret
rcrb
and
lcall
hlt
dec
bound
arpl
jle
inc
mov
xchg
imul
ret
jns
add
dec
int3
dec
enter
mov
push
cwtl
arpl
jo
insl
xor
push
xchg
cmp
add
ds
enter
lods
jge
pop
ret
enter
daa
inc
or
adc
outsl
idivl
xchg
dec
inc
js
push
call
leave
cmpsl
and
pop
lds
insl
mov
test
andl
cmpsb
sbb
lcall
pop
dec
call
add
push
mov
sub
rep
cmp
mov
movsl
shll
xchg
pop
jo
andb
add
jbe
fistpl
fcompl
jae
sub
push
pop
ds
lcall
xor
jb
into
sub
aas
outsb
insb
adc
in
addb
mov
pop
fimull
add
aam
push
or
pop
fdivs
maskmovq
divl
loope
sarl
mov
testb
mov
sahf
sbb
ja
lcall
outsl
jbe
sub
stc
pop
in
ret
fs
pushf
int3
adc
in
and
sbb
mov
pop
cli
inc
xchg
in
test
lret
rorb
addb
shrb
loopne
jg
pop
push
fs
adc
leave
mov
aam
pusha
add
cmp
lods
xchg
test
sub
ja
mov
or
repnz
cmp
pop
mov
repz
nop
arpl
xchg
dec
cmp
pop
fnstcw
insb
les
lea
sbb
push
aad
cmp
movb
sbb
pushf
cmp
popa
sbb
in
arpl
mov
cli
inc
stos
dec
sarb
push
les
dec
pop
sub
jecxz
ret
btc
cli
add
or
mov
std
rorl
or
notb
pop
gs
das
lock
mov
das
push
sub
lcall
adc
not
ljmp
int3
fcompl
cmpsl
aad
jl
scas
pop
fdiv
cli
ss
cld
sbb
lret
sti
xchg
mov
fsts
mov
das
imul
lcall
ja
pop
fists
insl
mov
push
imul
sbb
test
les
mov
cli
pop
lock
rcrl
popf
pop
fidivs
popa
fs
popa
int3
xchg
test
add
jge
push
sbb
lret
dec
sbb
sbb
popf
adc
jns
xchg
push
jge
jmp
pop
and
sbb
dec
test
push
mov
dec
push
clc
addps
scas
ja
jp
dec
loop
bound
rorb
popf
dec
add
out
lret
pop
push
xor
in
cmpsb
clc
mov
clc
in
fisubl
mov
pop
repnz
stos
sahf
out
addr16
repz
mov
mov
mov
mov
pop
dec
xor
andb
neg
in
xchg
repz
cmpl
add
lahf
int
sub
xchg
inc
inc
push
xlat
dec
push
stos
mov
adc
add
or
sbb
push
jno
push
lock
cld
push
adc
push
hlt
ret
rcrl
xchg
adc
rcr
jae
push
mov
repnz
arpl
adc
sbb
outsl
fisubrl
lea
xchg
mov
imul
cmp
pusha
sub
mov
sti
pop
repnz
push
out
pop
jno
hlt
lcall
inc
mov
repz
aaa
cmpsl
iret
cmp
std
leave
add
fstps
pop
mov
or
mov
xor
pop
sub
scas
std
or
and
scas
clc
cmp
aad
sbb
cmpsb
jbe
cmp
cwtl
mov
leave
cltd
dec
daa
aad
adc
dec
or
out
dec
jl
in
pop
dec
mov
sbb
lret
jecxz
xor
les
bound
inc
in
test
dec
push
pop
inc
aas
jbe
cmpsb
mov
push
popa
js
pop
cld
pop
xchg
inc
push
lds
and
je
cmp
and
out
xchg
and
pop
xorb
jle
and
cwtl
xor
dec
mov
sub
sub
pop
mov
inc
push
push
mov
iret
sub
ja
iret
xchg
notb
pop
mov
mov
repnz
mov
popf
and
lods
push
pop
loopne
int
in
scas
fdivs
sbb
divl
mov
pop
sarl
adc
popf
mov
xchg
test
sahf
mov
add
xor
mov
inc
push
loop
jno
stc
adc
adc
arpl
mov
mov
mov
out
addr16
je
pushl
mov
cld
inc
or
fimuls
mov
mov
pop
jne
test
push
sbb
out
stos
mov
lahf
gs
add
dec
sbb
mov
xlat
jbe
dec
sub
pop
mov
ja
mov
jnp
xchg
gs
push
push
nop
ds
lock
cltd
jle
inc
pushf
pop
jl
jo
das
repz
lods
xchg
shrl
rcrb
iret
mov
nop
pop
ret
add
adc
mov
jmp
shrl
dec
mov
fs
pushf
les
shll
icebp
add
je
mov
xchg
cmp
xor
cmpl
pop
mov
and
adcl
sbb
pop
or
lds
push
out
popa
lret
in
gs
pop
test
mov
sub
std
imul
cmpsl
aam
inc
mov
shll
cld
inc
jp
lret
push
outsb
mov
push
mov
sbb
adc
aam
add
ret
push
loope
es
iret
stc
insl
mov
clc
mov
mov
cmc
popa
xor
icebp
lods
xor
lea
fs
pop
ror
push
aad
mov
add
inc
rcrb
test
cmp
xchg
setnp
push
adc
mov
dec
test
xor
xchg
and
cli
shll
iret
stos
inc
mov
out
add
mov
lods
jmp
decl
adc
xor
xchg
pop
adc
xchg
pop
ja
shll
pop
pushf
ds
iret
push
fwait
shrl
nopl
ret
mov
ret
mov
les
bound
or
in
push
cs
jae
loop
add
add
cmpsb
addr16
sahf
jp
rcrb
daa
ret
lock
mov
xchg
push
dec
adc
adc
outsl
filds
xchg
lea
ljmp
or
imul
loop
xor
push
push
inc
sti
stos
sti
pop
mov
pop
add
insb
sub
jl
jle
sbb
in
cltd
sub
lods
test
iret
dec
in
dec
ret
pop
mov
inc
lret
fisttps
push
mov
int
jb
in
lea
imul
arpl
sub
mov
sbb
aaa
scas
stc
sbb
rcl
sbb
inc
sbb
leave
sarl
cmpsl
arpl
inc
mov
dec
xchg
fisttps
sbb
repnz
add
lret
ljmp
pop
lret
aam
cmpsb
push
ret
jo
sahf
and
nop
sub
mul
movsb
push
or
push
addr16
jbe
mov
jge
fwait
xor
aam
popf
cmp
inc
jno
les
fstpt
push
scas
jbe
xor
pop
cmp
adc
dec
out
push
pop
or
cmpsb
and
push
in
jnp
ss
or
xchg
fildll
aam
loope
adc
cmp
mov
movsl
fistpll
scas
rol
jnp
popl
in
jl
jp
push
add
es
xor
or
test
pushf
sub
mov
cmp
adc
test
push
rcr
enter
cmp
xchg
adc
cmp
cmpl
shlb
dec
jl
mov
add
and
lahf
push
pop
daa
aas
int
ret
in
inc
mov
lret
test
mov
add
jmp
lods
xor
sbb
loop
mov
and
movlps
aad
cmp
and
out
shll
cmpsl
inc
cmp
cmp
add
pop
cmp
into
xchg
fs
and
mov
pop
xchg
mov
sub
fldcw
das
mov
add
jmp
mov
push
daa
mov
popa
sub
notb
loop
es
xchg
cmp
sahf
push
push
add
nop
sbb
dec
clc
pop
sbb
scas
sub
pop
shlb
fs
xchg
lock
sbb
dec
add
cmp
xchg
adc
int3
and
add
mov
inc
inc
cmp
out
aas
pusha
jns
jb
int3
call
je
cmp
adc
cmp
mov
cmp
mov
inc
fisubrs
jmp
dec
subl
movsb
fcomps
fsubl
lock
mov
lea
lcall
notb
sar
adc
js
ret
cmpsl
shrl
xchg
mov
test
push
cld
jo
test
lahf
mov
ret
das
outsb
pop
cmp
push
jl
stc
sub
shrb
aam
sub
es
das
insl
outsl
pop
imul
in
shr
jg
popa
dec
insb
in
lods
popf
and
mov
xchg
lods
and
mov
cmpxchg
add
popa
jp
adc
adc
push
out
jns
xchg
sub
rorl
fcompl
sti
stos
das
fnstcw
out
arpl
adcb
xchg
fwait
jmp
xchg
dec
xor
rorl
or
fbstp
pop
fwait
mov
pop
push
pusha
dec
aam
adc
xchg
push
ja
enter
addb
and
jae
hlt
fwait
add
push
xor
or
mov
hlt
loop
mov
push
gs
mov
lret
xchg
ret
mov
mov
mov
mov
cwtl
sub
gs
mov
sbb
mov
fdivl
jne
clc
loope
xor
fbld
mov
xchg
adc
xchg
iret
pop
add
movsl
clc
pop
sub
or
jl
outsb
fidivs
and
xor
insb
cwtl
cmp
sub
mov
inc
adc
lret
cmp
pop
ret
mov
lahf
jae
sbb
push
js
xchg
popf
cltd
fmulp
push
sti
fs
iret
lods
fwait
xchg
orl
push
imul
icebp
scas
pop
add
shr
sti
mov
xchg
or
push
hlt
xor
arpl
std
inc
mov
nop
mov
aaa
and
and
and
or
xor
lds
aam
scas
mov
fdivrl
fildll
cmp
mov
addr16
daa
rcr
movsb
cmp
and
hlt
dec
xchg
aaa
jp
xchg
std
mov
and
imul
push
out
test
loop
repz
pop
pop
cmp
bound
addr16
add
cwtl
aad
push
push
daa
sub
repz
cmp
push
pop
movsl
out
rcrb
subb
mov
scas
add
aam
xor
imul
ret
loopne
sub
mov
pop
mov
jnp
push
aaa
adc
fdivl
shrl
daa
xchg
inc
outsb
xchg
imul
jg
jecxz
mov
ret
lahf
mov
sarb
jecxz
daa
and
lcall
jl
fsubrs
fs
lret
mov
mov
inc
pushf
sbb
lret
jae
add
imul
push
push
outsl
adc
mov
stc
jg
daa
fs
notl
ljmp
cmp
push
ds
mov
idiv
fidivl
xor
inc
cmp
fldt
or
pop
popf
into
imul
sub
add
inc
pop
mov
pop
adc
ss
adc
add
jmp
lods
cmp
jecxz
sub
cwtl
xlat
hlt
das
dec
sub
insl
jnp
mov
pop
sub
inc
shlb
shrl
or
push
dec
push
cmp
inc
ret
mov
xchg
pop
sub
sub
imulb
mov
xchg
push
adc
aad
jmp
std
lcall
or
inc
cld
jbe
aas
call
dec
dec
test
je
or
aas
sti
add
imull
mov
or
push
add
nop
arpl
xor
pop
dec
mov
inc
jno
add
pop
aaa
or
stos
jecxz
mov
int
pop
and
std
dec
rcrl
mov
cltd
add
std
mov
mov
cmpsl
shl
push
mov
jg
outsl
cld
fwait
ret
dec
clc
adc
mov
jmp
dec
dec
sub
mov
fisubs
push
outsb
in
push
arpl
xchg
and
pushf
ljmp
sbb
or
cmpb
xchg
and
mov
xchg
lfs
cltd
dec
jp
test
cmp
jmp
test
push
movl
bound
stos
push
ret
push
lock
jl
xor
jecxz
mov
lock
xor
pop
pop
xor
std
das
mov
pusha
mov
cmp
pop
xchg
cmp
inc
mov
fwait
fwait
das
in
push
xlat
mov
add
dec
cmp
andb
pop
push
and
cmpsl
inc
sub
mov
fnstcw
pushf
cmpsb
scas
xor
jp
lods
pop
mov
xchg
push
mov
add
test
jne
movsb
pusha
into
subb
into
xchg
in
adc
fmuls
xor
out
cmp
sub
inc
add
stos
loope
inc
and
mov
xchg
jnp
mov
mov
adc
pusha
iret
push
lods
jecxz
dec
out
pop
cli
int3
imul
jae
out
push
cmp
in
sarb
jp
clc
fiaddl
scas
in
sbb
scas
lods
imul
dec
scas
mov
push
cmp
mov
out
adc
mov
push
xchg
arpl
cmp
or
push
pop
jg
in
fisttpll
fadd
fiaddl
nop
jge
int3
clc
pop
cs
sbb
sub
lds
stc
scas
lcall
cmp
push
lret
mov
int3
jbe
add
jge
insb
or
shlb
cmp
dec
push
jno
stos
adc
pop
dec
add
movsb
xor
xchg
lods
pop
lahf
push
add
mov
or
push
lods
add
cmpsb
sub
push
in
dec
stos
lret
xchg
push
loope
sub
repnz
dec
mov
sarb
data16
ds
xor
rcrl
call
xchg
xor
jae
or
pop
ljmp
pop
cmp
in
push
mov
sub
pusha
mov
adc
jo
and
mov
stc
insl
mov
iret
leave
and
adc
int
sbb
mov
nop
lret
jecxz
aad
lret
pop
inc
sbb
lods
sahf
test
cmp
xor
outsl
repnz
inc
loop
jmp
cli
fs
notl
cmp
ss
add
sbb
movntq
aam
xor
adc
mov
or
hlt
cmc
mov
pop
loopne
sub
pop
sarb
imul
pop
aaa
add
movsb
das
pushw
inc
lods
and
inc
cmp
and
xor
sub
mov
sti
hlt
daa
inc
in
cmc
gs
nop
iret
pop
dec
dec
mov
rolb
loop
adc
sti
cmpsb
repz
popa
xchg
sbb
adc
inc
jg
cmp
ficompl
in
adc
pop
jmp
mov
adc
sub
jl
sahf
scas
sbb
pop
gs
sti
fcoms
je
xor
jmp
xchg
lea
popa
cwtl
mov
adc
mov
js
sbbl
push
cmpl
cmovb
jb
shrb
sub
mov
mov
rcl
lods
adc
fcompl
inc
dec
mov
dec
jo
jp
inc
icebp
push
mov
cli
lret
mov
fmull
addb
pop
jp
rcl
and
daa
sub
jb
ret
mov
es
and
cmp
dec
or
ljmp
repnz
jae
icebp
mov
int
insb
and
mov
outsb
sbb
cltd
addl
mov
cmp
insl
roll
cwtl
subb
les
sbb
mov
or
insl
stos
or
stos
notl
pop
jmp
or
add
and
mov
arpl
mov
aas
bound
mov
dec
scas
dec
mov
or
pop
negb
jp
imul
xchg
lods
out
popa
ljmp
adc
movsl
in
mov
test
int
mov
xchg
and
jl
jp
test
mov
xor
push
mov
in
mov
jmp
dec
fbld
inc
xchg
mov
pop
jmp
roll
ja
jno
stos
repz
mov
roll
push
cmpsl
jmp
insb
outsb
and
jnp
pop
sbb
fildl
in
leave
call
iret
gs
sti
ret
adc
jle
inc
in
out
jae
repz
push
xlat
hlt
popf
out
fisubrs
fcmovb
inc
stc
imul
xchg
das
je
sbb
add
imul
das
scas
and
sub
gs
and
jp
insl
pop
adc
cmp
hlt
mov
sub
cwtl
push
sbb
sahf
outsb
aaa
mov
sbb
add
cld
in
int3
jecxz
and
push
mov
inc
scas
lds
daa
loope
and
scas
jns
clc
and
mov
loopne
lcall
sub
fcoms
enter
daa
roll
imul
and
push
push
out
xor
xor
cli
push
mov
add
xor
test
cmpsb
lods
jnp
in
xor
mov
push
cmp
loope
jo
sub
ret
pop
jp
ds
adc
movsl
hlt
bnd
inc
mov
add
arpl
sub
xor
xchg
ja
into
mov
arpl
mov
loop
ret
push
in
js
leave
mov
sub
adc
mov
mov
arpl
mov
or
xchg
aad
push
gs
int
lcall
jb
pop
lret
push
shrl
mov
dec
jg
dec
ficomps
test
pop
jl
rorl
loop
iret
xor
in
push
or
adc
push
aam
jle
in
adc
push
out
daa
sahf
cli
inc
sub
xor
shll
xchg
stos
or
rcr
ja
mov
pop
icebp
pop
data16
xchg
dec
adc
movsb
ja
mov
pop
pushf
lods
or
aas
xlat
jb
pop
sub
ljmp
and
jnp
mov
cmp
gs
mov
nop
stos
movsl
jns
adc
aad
icebp
cmpsb
push
repz
fsts
jnp
or
mov
popf
pop
pop
clc
clc
adc
jecxz
pushf
xchg
js
jmp
cmp
cs
sub
sbb
cmp
cmp
xchg
pop
dec
jb
shll
jecxz
in
movb
iret
ss
cwtl
insl
testl
xor
jge
fndisi(8087
aam
pop
xchg
inc
lret
inc
jg
out
int
stos
das
imul
mov
cmp
negb
scas
cmp
pop
and
mov
lcall
mov
sub
pop
push
mov
cmpsb
mov
jnp
mov
cltd
in
inc
shl
push
jb
test
xchg
cld
ret
inc
fwait
icebp
outsb
push
inc
insl
and
mov
xchg
mov
je
popa
lea
lods
in
mov
lock
and
inc
lret
int
xchg
add
xchg
jp
push
xor
or
cli
roll
stos
test
pushf
ja
rcll
aas
mov
stos
cld
out
mov
enter
push
add
add
incl
xorb
in
fisttpl
jo
iret
xor
ret
fsubl
shlw
dec
or
pop
cld
jno
ja
or
dec
mov
sub
or
das
mov
lea
adc
mov
add
xlat
xor
and
mov
fisttps
adc
xchg
xchg
cmp
jp
push
loopne
cmp
mov
loop
mov
jne
clc
jnp
add
or
orb
xchg
mov
jbe
insb
pop
xchg
xor
xor
cs
jecxz
jle
lds
adc
stos
cltd
push
and
cs
jae
sti
fcmovb
jle
pop
pushf
in
notb
sbb
iret
les
ret
cmp
roll
inc
idivl
movsl
jae
inc
popf
push
shll
popf
push
and
lret
mov
rcll
ljmp
scas
test
push
cmp
rol
aas
cwtl
js
or
call
leave
lods
cmpsb
hlt
adc
adcb
or
lret
jne
aaa
bound
mov
mov
sahf
test
sbb
add
loope
jnp
cmp
fsubl
cmp
push
mov
and
jge
int
enter
daa
rcrb
repz
xor
and
xchg
dec
jle
cmp
xor
lret
jo
lahf
test
popa
push
pop
repz
push
inc
inc
mov
pop
imul
pop
js
xchg
pop
ret
push
sbb
cwtl
xlat
lods
sub
push
fidivrs
or
movsl
sti
clc
xchg
cs
jo
cld
mov
mov
push
ret
pop
xchg
xor
fwait
sbbl
pop
mov
cmp
lcall
clc
fdivl
sub
inc
outsl
outsb
mov
pop
and
cmpsb
sbb
lahf
mov
add
mov
cmpsb
push
mov
jmp
and
push
add
divl
cmpsb
push
lret
cmp
mov
xor
sahf
out
push
test
jbe
xor
jg
outsl
mov
xchg
and
stc
movsb
add
subl
xlat
sub
and
and
sbb
out
mov
popa
xor
test
cmp
pop
fimuls
sbb
into
adc
mov
shll
pop
adc
push
adc
imul
xchg
jo
cwtl
lods
icebp
pop
cmp
add
xorl
es
push
and
sub
mov
nop
test
rorb
hlt
push
inc
sti
jne
flds
movsl
and
xchg
mov
int
call
aaa
test
pop
inc
mov
dec
pushf
aas
or
jmp
jge
cs
push
inc
aad
movsb
nop
inc
dec
push
in
fdiv
inc
jb
inc
push
jmp
je
jecxz
cmpsl
pop
dec
sti
iret
lea
adc
test
mov
sbb
add
adc
pop
aaa
sti
into
inc
push
sbbl
jo
das
dec
mov
jb
repnz
mov
frstor
dec
mov
xor
scas
xor
dec
scas
ret
iret
jl
mov
add
pop
cld
sbb
or
xchg
inc
or
adc
stc
mov
mov
mov
add
sub
ret
shl
dec
es
adc
insl
or
cld
clc
jecxz
xchg
loope
jne
mov
js
lods
dec
push
mov
adc
and
sbb
xor
sub
jle
and
xchg
cltd
icebp
jle
test
push
mov
call
push
repz
dec
push
in
jne
and
ja
sbb
or
addr16
dec
dec
inc
stos
jmp
mov
out
sub
xchg
add
jl
mov
movsb
pop
or
mov
push
mov
imul
dec
ja
in
dec
xchg
aaa
cmp
or
flds
push
shrb
add
pop
xor
pop
sbb
push
add
cmp
in
movsl
stos
xchg
decb
mov
loop
addr16
jo
jp
mov
xchg
mov
push
outsl
sub
mov
jne
imul
jbe
fistps
fists
xchg
sti
xchg
mov
out
mov
cmpsb
mov
push
stos
cmp
and
push
jmp
jle
lret
and
mov
and
test
sbb
lahf
int3
pop
inc
add
xor
push
test
or
hlt
cmp
inc
idivl
ficompl
push
adc
scas
call
inc
clc
rcrb
mov
fucomip
aad
and
lods
hlt
pop
cmp
arpl
subb
ljmp
aaa
and
nop
or
gs
mov
adcb
xor
dec
in
jo
jne
scas
aaa
cmpsb
push
and
arpl
dec
mov
movsb
or
lock
fists
enter
daa
iret
cmp
jp
stos
jno
adc
mov
arpl
cltd
orb
mov
std
and
or
xor
test
push
out
inc
cltd
pop
cmp
in
incb
jge
add
push
lods
test
scas
bound
jg
repz
jl
movsl
add
rorb
add
pop
sub
sbb
aam
xor
push
sub
sahf
inc
lcall
sub
sub
pop
xchg
outsb
and
mov
rcrl
mov
aam
mov
cmc
and
push
imul
mov
rcrl
div
ret
pop
lret
int
lcall
sbb
fildll
test
dec
xor
ljmp
pop
cwtl
lods
fs
xor
adc
std
shll
cmc
nop
and
or
pop
cli
cmpsb
out
and
mov
dec
or
je
cmc
add
mov
and
inc
loop
imul
mov
lods
fdivrs
adc
call
lock
ljmp
hlt
and
stc
enter
sbb
dec
push
push
and
cmp
pusha
in
push
dec
shl
das
inc
push
dec
mov
mov
stc
imul
ljmp
xchg
int
leave
leave
sub
mov
adc
sub
mov
test
jmp
test
aad
cmc
adc
push
sbb
jb
and
je
xchg
add
dec
jecxz
lea
into
cmp
mov
jbe
dec
scas
mov
dec
pop
fisubl
lock
das
daa
paddusb
test
jnp
rcrl
sub
std
push
sub
pusha
cmpsl
into
pop
ja
adc
xchg
cld
inc
inc
mov
add
dec
mov
enter
xchg
sbb
xlat
mov
popa
sub
scas
ret
pusha
nop
shll
je
mov
repnz
mov
add
ljmp
mov
mov
push
mov
outsl
fsubs
negl
popa
jnp
jmp
jae
test
adc
imul
push
mov
pop
fnsave
jnp
lock
testb
sbb
add
jle
cmc
gs
stos
fimull
mov
dec
or
xor
nop
imul
xor
mov
xchg
dec
xlat
jecxz
pop
jb
bnd
inc
in
xchg
push
inc
out
xor
push
push
fwait
jmp
scas
push
arpl
popa
mov
pop
aaa
out
sarl
rclb
aaa
loope
in
pop
out
xchg
dec
jle
mov
imul
xor
shll
mov
in
hlt
mov
rolb
jne
inc
lods
pusha
cmp
fistpll
bnd
mov
lahf
xchg
testb
xor
mov
xor
mov
and
scas
clc
jnp
and
jle
das
mov
daa
jl
adc
lret
cli
iret
sbbb
xchg
addr16
imul
jae
mov
push
inc
inc
insb
popf
pop
sbb
cmp
iret
dec
test
mov
inc
in
push
imul
mov
shlb
mov
xor
ss
fsts
arpl
and
cs
sbb
push
aaa
loopne
mov
add
dec
cmpsl
int3
movsb
das
sbb
inc
rcr
sub
jne
xor
arpl
add
cmp
leave
enter
xchg
jbe
adc
jge
mov
sbb
cmp
and
pop
dec
mov
in
push
xor
add
push
add
add
inc
sub
lods
in
in
fnstcw
xlat
popf
pop
inc
add
push
xchg
loope
adc
sub
cs
cmp
iret
ds
or
lret
shl
mov
jmp
cmp
cmpsl
sbb
stos
out
add
es
push
xchg
pop
out
pop
xchg
pop
ss
xor
fcmovnu
and
dec
xchg
lret
sub
xor
outsb
test
cmp
xchg
push
mov
sbb
jecxz
pop
push
popa
and
sahf
fldl
outsb
push
cmp
or
fmuls
int3
imull
and
mov
dec
sbb
dec
ljmp
out
call
ds
loop
mov
sbb
mov
ss
add
add
and
fldenv
xor
test
into
fdivrs
cmc
int3
xchg
dec
loopne
adc
pop
dec
push
mov
imul
dec
dec
data16
xor
mov
fwait
add
das
mov
outsl
mov
fs
sti
mov
mov
jo
out
sub
cmp
push
inc
and
fyl2x
cmc
outsl
les
mov
addr16
sub
ljmp
imul
adc
test
push
clc
cs
test
aad
stos
movsl
inc
xor
aas
sbb
jb
xor
dec
xlat
mov
dec
or
jecxz
adc
lea
mov
mov
mov
mov
repnz
dec
lcall
pop
jge
test
lock
mov
pusha
lret
mov
shr
mov
cmp
or
dec
movsb
add
cmpsl
int
jl
inc
dec
and
mov
cmp
jb
mov
mov
or
mov
mov
mov
imulb
enter
sub
cmc
fld
out
jo
es
insl
insl
fsts
clc
cmp
mov
ljmp
jl
pop
add
pop
mov
lea
mov
ljmp
cltd
pop
or
cmc
push
leave
mov
aad
push
jns
push
fstpl
xchg
mov
fst
adc
push
cld
stos
leave
lret
mov
fcoms
push
inc
jmp
in
fwait
xor
xor
xor
arpl
mov
outsl
mov
je
sub
sub
dec
jp
fadds
psubd
sarb
push
push
lock
add
adc
sub
jns
insl
mov
xchg
pushf
mov
mov
icebp
jno
mov
or
je
jp
pushf
sub
sbb
push
insl
dec
dec
sbb
jne
jl
pusha
aad
cmp
fisttpll
jmp
xchg
stos
loop
mov
shl
mov
jmp
xor
test
iret
jge
stos
and
push
insb
sbb
push
jnp
in
mov
orb
adc
push
inc
ret
lds
stos
inc
inc
sbb
int
push
sar
push
or
dec
popf
subl
ljmp
fiaddl
sub
xchg
mov
push
sbb
mov
scas
scas
idivl
adc
lods
mov
test
mov
hlt
repnz
inc
sarb
lods
or
cld
je
aaa
lahf
test
add
imulb
push
ret
sub
into
insb
mov
jo
mov
stc
and
jp
movsb
and
push
nop
stos
adc
jge
or
cli
daa
int
inc
cmp
sbb
sahf
pop
sarb
cmp
bound
xor
pushf
sub
lahf
add
rorb
or
rclb
inc
mov
mov
in
int3
or
fistpl
pop
jg
pop
push
lock
loope
in
sub
push
sub
adc
enter
mov
sarb
adc
orb
sbb
xchg
push
add
int3
pusha
xor
mov
fidivrl
outsb
pop
lods
shrb
test
test
lcall
jae
jne
jae
rcl
outsb
out
jo
xorl
xor
mov
adc
mov
pop
sti
and
imul
int
mov
fmuls
mov
imull
jae
repz
ror
enter
adc
xor
in
pop
push
xchg
inc
pop
into
outsl
dec
xchg
loopne
fldcw
stc
leave
mov
fs
xchg
les
ss
in
cmp
add
jle
lods
daa
lods
cli
or
fdivl
je
jnp
xor
or
iret
into
mov
mov
pop
insl
add
inc
imul
sbb
xor
cmpsb
je
cmp
jns
sub
push
test
in
iret
and
pop
pop
xchg
rcrb
xor
les
sarl
fldcw
mov
sbb
cmp
xchg
jmp
fwait
sbb
cmpsl
aad
mov
pop
pop
pop
das
or
aaa
movsl
push
pushf
inc
scas
addr16
loope
cs
ret
call
xor
mov
sahf
in
aas
mov
jnp
dec
dec
pop
out
cwtl
rcll
xor
xchg
push
comiss
pop
imulb
stc
imul
test
fistpl
aam
inc
fwait
sbb
or
in
mov
pop
rcl
and
mov
shll
test
imulb
je
std
mov
add
mov
mov
jle
popf
jnp
lret
loop
fimuls
cmp
pop
adc
shlb
aam
push
es
bound
jnp
clc
js
jl
sahf
add
push
xchg
int3
popa
jmp
adc
mov
jl
sub
push
lods
mov
or
pop
fstpl
test
pop
inc
mov
es
ffree
and
xchg
jno
sbb
inc
shrl
pop
dec
adc
stos
mov
cwtl
mov
es
sbbb
movsb
add
cmc
xor
inc
andb
int
dec
movsl
push
lret
add
ja
out
dec
insl
pop
incb
stc
lds
into
push
fwait
dec
gs
push
test
imul
cmpl
and
jns
sahf
jno
jmp
sub
mov
out
jbe
insl
scas
mov
addr16
push
es
mov
jo
mov
sahf
out
es
sub
sbb
mov
bnd
pop
mov
addl
out
push
xchg
sub
cmpsl
adc
push
push
xchg
in
xchg
imul
addb
mov
je
movsl
aad
in
xchg
pop
adc
inc
mov
nop
mov
and
xor
xor
push
int
ficompl
and
inc
je
xor
mov
pop
xchg
loop
mov
imul
push
pop
imulb
shrb
cld
repnz
leave
mov
hlt
cmp
test
rol
dec
or
mov
aas
aaa
pop
push
mov
add
xchg
adc
jp
nop
pop
xor
js
mov
out
hlt
scas
aam
mov
cmp
ret
push
dec
push
fbstp
stos
jge
inc
enter
daa
int3
stos
loopne
adc
or
jl
push
mov
push
pop
lock
aaa
out
lahf
and
daa
push
stos
fidivl
push
outsl
shr
inc
loope
cmpsb
cmp
mov
js
js
pop
mov
mov
outsb
sub
inc
imul
push
aas
movsl
pop
stc
hlt
rcrb
mov
andb
sbb
and
xor
daa
cmpsb
popf
add
pop
aam
push
and
or
xor
push
lcall
fsubl
inc
sub
mov
push
outsb
dec
fnstsw
adc
adc
jne
dec
andl
lock
mov
push
je
xchg
int
jge
fadd
jge
imull
clc
dec
rcrl
mov
push
sbb
pop
sahf
jp
pop
test
test
xor
repnz
loop
push
xorb
scas
test
ss
inc
pop
mov
pop
mov
cli
aas
pop
xor
dec
push
scas
or
movsl
ror
sahf
test
cmc
pop
rclb
pop
mov
shrb
cmp
ret
add
pop
xchg
lods
movb
mov
sub
add
cmp
sti
push
dec
repnz
mov
add
negb
lock
inc
inc
clc
fstps
xor
sub
lcall
data16
and
pushf
xor
mov
mov
jl
jmp
out
or
scas
aad
inc
lods
inc
mov
scas
push
jb
testl
je
in
fwait
jecxz
jg
push
push
mov
adc
addr16
les
sbbl
and
into
push
fcmovne
jne
pop
ret
pop
xchg
sbb
xchg
sub
das
les
ja
icebp
loope
mov
repnz
adc
xchg
and
outsb
cmp
dec
outsl
sbb
lcall
mov
pusha
aaa
sar
enter
push
pop
or
mov
and
mov
xor
pop
rclb
je
jl
repnz
das
aas
ret
or
movsl
ret
insl
cmpsl
out
clc
mov
adc
mov
stos
popa
add
add
je
mov
fwait
dec
inc
push
mov
push
int
add
cltd
int
pop
test
add
push
call
fucom
orl
popa
jne
xchg
sbb
lahf
in
ret
aaa
mov
mulb
cli
out
jnp
inc
xchg
insl
mov
add
aam
xor
enter
outsb
xor
jb
mov
jne
adc
or
mov
mov
jnp
dec
pusha
jg
inc
stos
push
add
fwait
js
mov
dec
cmpl
fwait
loope
bound
jae
in
addr16
ljmp
adc
xor
jns
hlt
sub
pop
dec
popf
mov
call
js
or
jl
jne
push
addr16
or
sbb
cmc
fsts
cltd
push
pop
xchg
daa
push
cmp
mov
and
push
push
dec
xor
stos
push
loop
and
aam
insb
lock
jnp
lret
push
jle
push
adc
cmp
sbb
pop
imul
lahf
dec
ffreep
shr
mov
sbb
jae
push
nop
les
sarl
sbb
fsub
fisubl
scas
xchg
cmp
or
dec
pop
imul
push
rol
popa
mov
sub
push
leave
add
shl
pop
in
arpl
js
inc
shrb
mov
fidivl
sbb
fildl
add
add
pop
adc
adc
xchg
lds
push
jo
push
sbb
mov
data16
rclb
movsb
aaa
cwtl
push
push
cs
jbe
pop
in
push
push
aaa
enter
daa
lret
xlat
jae
inc
sub
jno
cmp
jl
push
jg
or
inc
push
test
jle
and
mov
lahf
inc
sub
push
jle
and
cmp
cmc
cmpsb
mov
mov
cmp
push
add
or
jg
sub
cld
cmp
imul
mov
xchg
shlb
cmp
jne
out
sbb
popl
adc
xor
ficoms
pop
sti
mov
lahf
jmp
pop
mov
pop
lcall
leave
fmul
inc
test
lahf
pop
jnp
lods
in
adc
sub
xor
mov
and
jnp
cmp
and
lret
inc
push
ja
cld
int
push
sbb
fsubp
imul
bound
shl
mov
sbb
out
scas
fwait
xor
sti
outsl
or
loop
je
stc
aaa
pop
push
cmp
aaa
add
add
stos
mov
mov
cmp
je
or
popf
into
orl
fcoms
mov
imul
xchg
add
xchg
cmp
pop
iret
xlat
in
mov
sub
inc
cmpsb
mov
movsl
lret
mov
push
jmp
leave
addr16
int3
insb
xor
into
testl
fwait
dec
les
lea
xchg
jno
jp
mov
add
pop
roll
adc
fnsave
xchg
inc
mov
cli
dec
ret
aam
aad
and
inc
aam
les
mul
arpl
cmpsb
inc
dec
cmp
out
je
pop
or
push
or
cmp
dec
cwtl
iret
insl
mov
jbe
outsb
cmpl
loope
pop
ror
inc
test
or
das
mov
int3
add
test
dec
and
cmp
divb
imull
cmpsl
lret
mov
aaa
lret
repz
lret
rorb
mov
jno
mov
push
mov
out
loope
jae
and
pop
dec
fcmovb
pushf
stos
clc
subb
out
hlt
inc
xchg
sbb
push
ljmp
lcall
pop
daa
mov
mov
scas
scas
sysret
dec
jno
jg
jge
add
testl
xchg
fisttpll
leave
repnz
out
push
xchg
in
xor
rcrl
outsl
ficompl
inc
stos
xchg
cltd
xor
fisubs
jnp
mov
dec
in
dec
dec
out
or
pushf
cmpsb
xor
idivl
imul
loop
js
rorb
mov
mov
dec
jmp
dec
push
push
call
or
xchg
ficomps
out
mov
add
es
xchg
bound
out
jns
in
shl
sub
xchg
mov
scas
mov
inc
mov
mov
fisubs
pop
les
ss
lea
mov
dec
repz
jne
test
cmpsb
inc
fistpll
das
test
nop
jb
xchg
repnz
stos
out
test
sub
sbb
push
jge
jns
xchg
and
dec
xor
clc
jnp
loope
jle
dec
in
cmp
cmp
iret
decb
ret
iret
pop
mov
lret
inc
cmp
cmpsl
jae
clc
push
push
xlat
mov
push
jb
jns
sbb
cmp
in
imul
jb
mov
push
out
repnz
sub
jle
add
ja
jno
shl
adc
fidivrl
pop
inc
fnstenv
cmp
sub
stos
or
jo
mov
dec
bound
pop
xchg
loope
fidivs
insl
and
scas
xchg
insb
fbld
dec
xor
aad
ret
push
jge
and
pop
scas
jge
push
dec
enter
daa
lret
cmp
shll
loope
jl
push
dec
js
aad
mov
outsl
and
mov
bound
nop
push
push
xchg
test
add
cmp
cmpsb
inc
cmp
mov
pop
cmp
cmp
sbb
loope
ss
sub
lods
xchg
cmp
push
hlt
ds
das
lret
push
test
push
js
ss
orb
inc
add
mov
xor
out
pop
and
sub
inc
push
pop
xor
dec
lcall
adc
jbe
sub
fisubs
pop
lea
dec
push
outsb
jg
sub
mov
sti
mov
mov
sbb
and
rolb
fstps
fdivrs
sarl
imull
mov
inc
mov
in
or
mov
scas
mov
xor
outsl
ljmp
stc
out
and
push
adc
mov
lods
mov
jae
out
push
sub
movsl
sub
xchg
cmp
shll
fs
cmc
call
mov
sub
daa
imul
fldenv
and
adc
xlat
sub
sub
inc
leave
mov
adc
sti
insb
jne
cld
add
nop
cmpsl
jle
dec
scas
shrb
fxch
sbb
les
test
xchg
xor
or
sbb
mov
adc
mov
inc
lret
jmp
lret
or
inc
out
sub
xchg
and
jb
mov
je
and
jecxz
sbb
lea
pop
xchg
mov
in
mov
cmp
inc
push
push
fldt
adc
or
inc
xor
lock
decb
sbb
mov
cmp
xchg
and
jnp
shll
div
leave
cwtl
fimull
js
cmpsl
leave
jb
mov
push
sbbl
das
and
jge
xchg
mov
add
and
aam
mov
cmp
add
insl
jne
imul
adc
ljmp
pop
lods
lret
sub
mov
in
andl
data16
add
aam
test
inc
dec
mov
mov
push
test
fnsave
cld
sub
jno
adc
xorl
pop
dec
dec
sbb
inc
xchg
pop
xchg
sti
or
lcall
lahf
xor
xchg
xor
rorb
add
or
dec
fisubrl
pop
sbb
fimull
fisttpl
cwtl
fwait
mov
jmp
mov
cs
pop
test
fdivrs
or
mov
xchg
fdivs
inc
mov
lcall
outsl
imulb
sub
mov
inc
lods
mov
jmp
repnz
stos
mov
pusha
inc
jp
fistps
mov
dec
pop
xor
xchg
rclb
cmp
out
ljmp
sub
pop
imul
lret
imulb
stos
in
ljmp
aad
jnp
mov
scas
in
and
iret
pop
push
lret
ret
jmp
jmp
mov
or
push
pop
insb
popf
pop
mov
faddl
sbb
sub
xchg
pop
cwtl
imul
scas
cmp
sub
sub
out
mov
ror
je
out
adc
hlt
push
in
arpl
dec
outsl
inc
fcompl
out
push
adc
aaa
fwait
shlb
adc
filds
int3
cmp
pop
ret
ficomps
push
lds
movsl
jo
aas
lcall
in
test
movsb
dec
sbb
int3
insb
jae
push
sarl
lea
inc
cmp
test
mov
scas
dec
out
push
push
outsl
scas
scas
xor
or
dec
push
and
clc
test
rorb
mov
les
in
push
ds
jnp
mov
test
cltd
pop
sub
push
jecxz
rcrb
ja,pt
dec
movsl
sub
sub
sub
jbe
xchg
sbb
sbbb
dec
add
lods
xchg
xor
dec
out
mov
sub
adcl
pop
lret
popf
add
fsubrs
jge
dec
outsb
jae
fcoml
arpl
jg
sub
mov
push
xchg
mov
mov
sbb
and
sbb
int
mov
fdiv
pop
sub
lret
jo
and
jmp
sbb
testb
arpl
test
or
outsl
leave
sbb
dec
stc
movsl
xchg
out
fs
lret
loop
add
xchg
in
cmp
in
pop
pusha
out
addr16
fsubs
dec
xor
jno
cmp
loop
or
mov
into
inc
jo
cmc
scas
lcall
jmp
sti
push
imul
adc
add
lods
inc
adc
cmp
push
push
sub
pop
cmpsb
in
jnp
cmp
mov
pop
movsl
lret
gs
fwait
popf
nop
andb
addb
les
ret
repz
mov
sbb
xchg
dec
or
mov
xchg
pop
daa
cmpsb
sub
xchg
cmpsb
lahf
pushf
in
and
movsl
cs
mov
aad
adc
aas
xor
mov
inc
je
cmp
jo
xchg
pop
xlat
loopne
pop
sbb
cwtl
inc
xor
lods
mov
subl
push
dec
pop
lods
mov
mov
movsl
push
mov
popa
dec
mov
mov
xchg
adc
shll
inc
divb
jns
std
aas
mov
dec
mov
call
mov
in
jns
dec
fdivrl
mov
jg
cmpl
push
pop
xchg
xchg
lea
mov
mov
push
ret
mov
adc
adc
mov
inc
ljmp
lods
lods
xchg
cmpsl
outsb
imul
jns
push
sbb
in
lds
add
mov
shll
dec
iret
outsb
fstpl
test
popf
push
sbb
jno
negl
stos
je
xchg
movsb
jge
xchg
inc
dec
and
icebp
hlt
jne
cld
dec
xchg
xor
pop
out
sub
mov
jle
stc
dec
inc
cld
dec
pop
aam
mov
push
icebp
dec
cmp
xchg
inc
jo
aad
mov
in
push
xor
adc
ss
cmp
add
andb
adc
mov
lret
mov
push
mov
test
cmp
fidivrl
std
mov
xor
jle
pusha
fadd
neg
js
push
xchg
and
sub
mov
loopne
mov
inc
mov
or
pop
stos
pop
jge
and
mov
jae
jae
adc
xchg
mov
adc
mov
mov
or
pop
and
aaa
jae
or
fstps
popf
inc
data16
jo
sub
cmpb
xchg
ds
sub
and
push
inc
je
int3
rclb
or
and
jecxz
or
imul
mov
or
mov
pop
pusha
or
inc
add
and
es
stc
pop
icebp
leave
loop
std
cs
mov
push
scas
push
or
je
mov
movsb
fcomps
push
sbb
mov
enter
daa
enter
filds
std
jl
push
jbe
push
cmpsb
push
push
mov
xor
mov
sub
push
testl
fists
rolb
mov
dec
in
dec
mov
js
test
pop
push
dec
loope
and
sub
arpl
ds
rolb
into
sbb
scas
jmp
adc
xor
test
fldt
adc
mov
push
hlt
xchg
adc
int3
xor
shrl
lods
mov
out
test
dec
das
cmp
jecxz
dec
mov
je
and
push
int
cmp
sub
lret
sarl
lock
in
call
xor
or
outsl
test
cmp
mov
cmpsl
in
fcmovnu
mov
dec
sbb
ss
cmp
out
sub
cli
or
stos
xor
fsubr
or
lock
jbe
pop
loopne
lret
sbbb
mov
or
jo
jp
add
fs
add
cmp
mov
cmp
fs
sub
push
mov
out
jl
lret
incb
cli
gs
lcall
insb
out
inc
xchg
fnstcw
add
add
xchg
mov
sahf
out
call
das
mov
pop
fiaddl
stos
pushf
xchg
push
jmp
sub
cs
xchg
sti
aad
push
mov
mov
push
jb
in
dec
mov
cmpsl
mov
pusha
jmp
lea
jb
add
out
mov
pop
jnp
dec
repnz
dec
sbb
xchg
mov
dec
inc
ds
pop
lock
es
inc
mov
mov
stos
xchg
pusha
and
cli
psrlq
sub
out
out
rorl
stos
les
js
xor
mov
push
mov
or
scas
sub
dec
mov
mov
mov
sub
pusha
xor
aam
xchg
ret
dec
dec
clc
or
insl
inc
fidivrl
clc
lahf
push
pushf
xchg
fsts
imul
push
dec
push
popa
pop
push
push
lods
mov
lahf
dec
mov
mov
repz
hlt
scas
dec
mov
loop
mov
adc
test
fistl
or
sti
test
shll
outsl
add
sbb
cltd
rcrl
in
mov
stos
arpl
pop
pop
xchg
xchg
mov
push
lcall
mov
or
jg
mov
cmpl
pop
fidivl
push
cmpsb
dec
sub
movsl
inc
pop
movsl
inc
or
clc
data16
xor
imul
adc
sar
mov
pop
scas
out
pop
cmp
jns
cs
mov
xchg
cmpsl
pusha
mov
gs
daa
loopne
jp
and
mov
xor
mov
leave
push
dec
pushf
stos
inc
jne
adc
pusha
ja
inc
fists
and
adcb
push
out
or
sub
into
mov
push
dec
lret
stos
rol
shll
inc
test
jnp
mov
cwtl
in
pop
dec
adc
add
sbb
ret
push
push
cmpsb
imul
jae
sbb
push
pushf
movl
int3
ffreep
inc
out
jb
fidivl
stc
or
in
mov
fsubrl
mov
mov
mov
gs
fsubl
cld
arpl
sub
inc
loop
mov
sbb
push
aaa
sbb
or
js
or
add
pop
and
xchg
fisubs
cli
push
scas
das
lods
xchg
and
sti
sub
push
xor
push
push
stos
jbe
sbb
mov
jae
daa
mov
cmp
mov
jno
cmpsl
fdivrs
dec
dec
lds
push
xor
aad
and
mov
lea
or
jg
mov
adc
in
in
ss
js
cmpsl
movsl
pop
stc
dec
pop
push
cltd
aaa
loope
lret
addr16
jl
cmp
shll
cmp
popa
shl
xchg
mov
push
xor
add
jge
inc
xchg
add
xchg
inc
xor
popa
movsl
insb
mov
pop
xchg
mov
or
scas
lcall
dec
dec
cmpsl
fdivl
lock
add
sbbb
sub
sbb
jmp
mov
mov
xor
shlb
inc
int
movsb
mov
insb
sub
lret
arpl
push
mov
out
sbb
sahf
test
mov
xor
loopne
xchg
jle
dec
repz
stc
adc
fs
sub
sahf
pop
and
or
mov
mov
in
xchg
out
pop
sub
sub
jle
mov
or
mov
or
rcrb
daa
jp
adc
clc
cmpsb
imul
jnp
push
cmpsl
dec
or
idivl
in
insl
or
call
mov
int
imul
jns
dec
movl
cmp
dec
lret
idivl
cmpsb
cmp
fnstenv
jnp
pop
popa
push
repz
dec
mov
jge
outsb
sbb
mov
pop
lea
sahf
adc
inc
pushf
inc
pop
cmpsl
jmp
push
pusha
cs
popa
aad
mov
inc
and
aas
jae
bnd
imul
sbb
je
addr16
arpl
aad
jecxz
mov
jne
mov
aad
fmuls
dec
pop
shrl
inc
sti
inc
lock
push
aad
pop
es
mov
popa
jne
and
aaa
in
rcll
scas
xor
mov
add
andl
or
stos
dec
test
cld
lahf
add
lret
jl
jo
es
mov
mov
iret
xchg
in
xor
rcl
dec
std
or
fadds
mov
insl
sub
cmp
ljmp
aam
or
test
dec
add
rclb
cmpb
jl
add
push
dec
cltd
loopne
mov
inc
and
jecxz
mov
into
out
pushf
clc
xchg
adc
lcall
pop
dec
sti
imul
sar
call
cmp
xchg
inc
pop
or
push
les
imul
test
dec
bswap
aas
pop
dec
cmp
ja
shr
dec
pop
stos
js
sahf
dec
or
push
fcompl
jnp
movl
div
pop
bound
ss
sub
lds
cmp
push
cmp
or
dec
rcrb
fucomi
mov
pop
and
pushf
fisttpl
sbb
pusha
adc
mov
jmp
push
lds
pushf
xchg
pop
out
mov
xor
mov
add
pop
mov
jnp
fistps
ja
shl
xor
adc
subl
pop
mov
inc
gs
pop
stos
into
popf
xchg
sahf
dec
push
outsb
jecxz
push
xchg
in
sub
imul
mov
push
add
rorb
mov
lret
leave
push
in
hlt
jmp
and
orb
sbb
pop
or
cmp
movsb
mov
int3
cld
xchg
in
pop
dec
ret
inc
ret
or
scas
push
and
cmp
aad
push
mov
ljmp
jle
jae
je
cmp
mov
fsubrl
dec
xor
movsl
push
sbb
test
lahf
fidivrs
out
push
popf
dec
loope
lret
push
xor
inc
mov
lds
in
sbb
cmp
cmp
push
adcl
cmp
pop
lds
loopne
lds
mov
filds
jl
cmpsl
add
xchg
xor
insb
push
das
xor
icebp
sub
sbb
lcall
loope
and
lret
outsb
pushf
dec
dec
adc
mov
sbb
mov
mov
pop
jl
shll
mov
push
inc
and
addr16
push
xchg
fcmovu
daa
outsb
scas
mull
pusha
dec
shr
xchg
pop
or
or
outsl
insw
shl
ficoms
stc
lret
fs
add
adc
cmp
ss
mov
cmp
movsl
shll
jno
mov
push
mov
pop
or
sbb
lock
xor
add
loopne
test
pop
inc
inc
jmp
imul
pop
add
push
fsubl
and
mull
cmp
and
inc
sub
pop
mov
mov
cld
xlat
decb
les
nop
adc
enter
xor
test
test
repz
push
xchg
inc
inc
outsb
sbb
add
addr16
sub
loope
adc
xor
inc
inc
cs
imul
ds
jb
push
or
pavgw
outsl
pushf
lea
in
cwtl
jbe
mov
pop
rorb
out
dec
repnz
push
jp
pop
xchg
jg
inc
dec
xor
das
lcall
sbb
push
and
leave
dec
shll
mov
add
fdivr
xor
mov
sub
cmpsl
lds
mov
push
popa
cld
lret
lret
jmp
lds
rcr
mov
out
and
push
add
inc
sbb
addr16
xchg
cmp
clc
adc
mov
ljmp
xchg
dec
cs
lds
and
add
dec
add
dec
mov
fistl
mov
and
insl
cmpsb
or
dec
iret
sub
pop
clc
xchg
stos
inc
inc
aad
int
ja
pop
push
add
fldl2t
adc
jmp
cwtl
dec
xor
jge
mov
xchg
rcrl
enter
stos
dec
adc
cmp
xor
or
xchg
jmp
pusha
add
in
fcmovne
out
aad
sbb
sub
sub
jecxz
in
loop
xchg
adc
push
mov
orl
pop
or
and
jp
inc
mov
mov
cmpsl
xchg
jae
bound
jne
bound
lods
or
lea
fwait
mov
jmp
subl
jno
iret
in
sub
inc
clc
scas
push
scas
add
jo
jecxz
jb
std
jnp
leave
mov
in
lods
mov
add
xchg
ret
test
les
jae
push
std
push
and
push
popf
mov
rorb
in
xlat
pminub
mov
shrb
pusha
fs
dec
cmp
cmc
pop
shrb
mov
sbb
enter
in
arpl
cmp
or
aam
ljmp
in
mov
int3
out
std
pop
jle
js
out
jl
mov
scas
in
xchg
pop
and
cmp
push
or
jbe
xor
jge
xchg
hlt
enter
daa
lds
sub
xor
into
dec
mov
jno
xor
je
gs
std
dec
adc
shll
cmp
cmpsb
ror
mov
js
pop
stc
pop
ja
cltd
push
sbb
loope
lea
sub
sub
cmp
loope
dec
add
adc
and
sbb
int3
std
xor
sub
in
fwait
sub
rcrl
int
push
stc
and
fmul
popf
dec
sub
pop
pop
outsb
decl
push
or
insb
jg
push
lea
dec
mov
mov
jno
and
and
mov
jo
loop
add
lret
mov
subb
lock
stos
and
out
insl
test
enter
in
loop
push
stc
xorl
dec
ss
add
cmp
fmul
sti
out
out
cli
movsb
jmp
sub
adc
scas
jne
fbstp
into
shll
push
cmc
lret
jne
loopne
mov
pop
gs
jmp
imul
scas
add
mov
adc
sbb
bound
xlat
mov
jb
mov
daa
movsl
mov
xlat
inc
fwait
stos
mov
leave
nop
out
add
inc
int3
mov
mov
repz
leave
les
dec
lahf
lret
or
lods
and
pop
repz
push
adc
out
pushf
cwtl
fmull
xchg
lock
js
inc
aad
sahf
sbb
cs
aas
mov
cmp
inc
push
cmp
push
sbb
je
jecxz
jecxz
pop
ljmp
imul
xor
mov
mov
addl
mov
sub
inc
shr
sub
adc
sub
fstl
sbb
iret
and
and
scas
out
scas
jp
testb
std
fcmovnu
popa
dec
ja
inc
cmpsl
les
mov
inc
das
push
cld
cmc
jl
lret
pop
inc
aas
mov
pop
dec
mov
js
mov
or
mov
aam
into
add
dec
mov
xchg
push
daa
insl
clc
ret
push
ljmp
scas
lea
popa
mov
cmp
mov
int3
xor
push
test
inc
stos
insb
add
jne
cltd
dec
cmp
test
sbb
push
into
lock
sbb
test
jmp
xchg
mov
mov
pop
mov
jecxz
out
xor
push
add
mov
xor
rorl
mov
xor
sti
cld
mov
mov
push
pop
shr
ja
pop
fmull
nopl
push
push
or
into
push
fwait
rcrl
add
dec
cmp
out
mov
bound
xor
in
popf
lcall
and
or
cltd
addr16
xchg
jp
gs
xchg
pop
xchg
mov
push
dec
jmp
inc
sarl
scas
and
dec
mov
cmp
pop
mov
xchg
mov
cmp
mov
add
mov
push
call
loope
xchg
pop
insb
pushf
jle
mov
mov
adc
iret
cmp
movsl
pop
cld
leave
cmc
inc
jnp
mov
push
rcll
popf
loop
xor
cmpsl
insb
inc
insb
push
fstp
dec
pop
cltd
xchg
lcall
imul
scas
sub
jge
nop
pusha
mov
sbbl
bnd
and
inc
push
loopne
xchg
ja
arpl
pop
inc
jmp
hlt
or
push
in
or
data16
shlb
pop
pop
lods
lret
mov
xorl
dec
scas
int3
adc
rclb
add
push
push
cwtl
add
gs
sahf
enter
daa
les
test
mov
jl
pop
loope
adc
push
fiadds
add
jne
sete
sbb
jecxz
inc
imul
push
ja
inc
mov
inc
dec
in
jmp
jmp
out
sbb
pop
mov
aas
push
imul
movsb
addr16
shll
cmp
dec
ds
movsl
dec
mov
repz
jo
faddl
ljmp
xor
rcl
mov
pop
pop
or
lcall
fwait
insb
lcall
add
js
dec
sub
fucomp
outsb
bound
ds
jbe
enter
in
mov
mov
sbb
pop
subl
int
cmp
fcomps
adc
rcll
sub
sbb
ret
xchg
les
jbe
stos
outsl
and
arpl
add
test
fs
jp
adc
fnstenv
mov
fwait
push
out
xchg
stc
cli
xlat
js
xor
cmpsl
into
cmp
hlt
lcall
ja
cmc
xchg
data16
adc
ljmp
push
lahf
and
mov
add
or
xchg
pop
fsubrs
popf
dec
and
movsl
xor
imul
das
aam
xchg
dec
and
nop
leave
lea
inc
mov
les
insl
push
xchg
sbb
cli
test
adc
mov
pushf
inc
pop
je
andl
xchg
es
cmp
inc
xchg
shrl
push
jecxz
jb
and
dec
jge
int
cmp
cmp
insb
ret
pop
lea
cli
mov
xor
push
mov
popf
mov
fildl
pop
fcmovnbe
and
lock
pop
das
das
mov
out
mov
dec
call
mov
std
andb
ret
clc
and
icebp
sbb
dec
lret
leave
dec
int3
mov
sub
mov
sub
mov
lods
push
std
sub
and
lods
xor
lcall
sub
push
xchg
aad
ljmp
pop
lods
dec
mov
fidivrs
rcrl
popf
push
dec
push
add
setns
repz
push
pop
jo
fstpl
popf
mov
xchg
and
mov
add
jnp
mov
imul
dec
adcl
mov
call
adc
and
jns
xor
int3
loopne
pop
adc
movsl
dec
inc
cmp
jnp
insl
ja
imul
arpl
mov
lock
xor
fs
add
mov
pusha
pop
bound
push
jns
sub
int3
stos
int3
xchg
mov
and
dec
mov
or
lods
and
jp
cmp
outsb
mov
mov
test
xor
sbb
jbe
test
dec
lcall
sub
xchg
jg
mov
aad
jb
cmp
mov
movsb
mov
and
and
jnp
call
dec
in
lret
dec
adc
iret
xchg
shrb
push
jae
inc
xchg
jae
cltd
int3
push
test
adc
mov
dec
es
out
xchg
icebp
hlt
sbb
imul
sti
inc
jecxz
mov
mov
sahf
lret
pop
scas
jae
ret
add
mov
pop
xor
sbb
inc
out
add
or
dec
push
adc
or
lods
adc
pop
fdiv
mov
sub
out
popf
fdivs
jo
fiaddl
and
dec
cmp
iret
jno
popl
jbe
push
add
sbb
enter
daa
ret
iret
mov
jno
push
inc
jl
inc
mov
push
rorl
xor
stos
add
push
push
inc
jl
scas
inc
aas
push
xchg
or
cmpsb
jecxz,pn
rcrb
mov
cmc
cmpsl
mov
loope
fbld
sub
sub
ljmp
movsl
push
rol
rorb
sub
or
notl
xor
and
enter
pop
sub
mov
stos
clc
icebp
lcall
fsubl
pop
push
pop
and
outsb
lds
adc
add
jge
mov
mov
mov
cmp
xchg
adc
and
cmp
xor
ja
sahf
fcomps
xchg
mul
pusha
icebp
lret
call
mov
sahf
movsl
sahf
xor
repz
xor
stos
and
loop
mov
stc
out
mov
arpl
fisubrl
sbb
mov
std
push
out
mov
hlt
xor
push
sub
or
mov
loope
mov
push
pop
mov
fs
imul
jne
xchg
std
add
and
lods
lods
mov
stos
xlat
in
int
pop
adc
mov
std
lea
xor
jnp
gs
rclb
popa
enter
inc
jae
mov
repz
xchg
mov
sbb
jne
inc
stos
sbb
pop
pop
jo
adc
scas
addr16
pushf
pop
cs
in
cli
cmp
inc
lods
mov
cmp
jb
jo
dec
hlt
outsb
and
or
lret
outsl
sbb
lea
cli
cwtl
cmpsl
imul
push
or
pop
dec
mov
stc
pop
jle
xor
lock
faddl
das
fwait
adc
mov
aad
ja
dec
push
inc
test
dec
std
sub
dec
insl
ret
mov
out
jo
cld
dec
inc
adc
cmp
pop
mov
lock
loope
sarb
imul
and
aam
lock
adc
jecxz
cwtl
xor
jl
clc
movb
ljmp
pusha
lods
mov
push
jp
fisubrl
cmp
ud0
push
add
fs
repnz
jecxz
pop
ljmp
inc
add
mov
mov
sbb
xor
pop
stc
and
xor
imul
setne
or
add
stos
inc
xor
jl
or
xor
icebp
pop
mov
nop
jnp
dec
stos
and
pop
ss
xlat
ja
stc
dec
dec
jmp
add
cli
aam
or
push
fwait
pop
push
inc
push
pop
mov
pushf
mov
das
xor
jb
frstor
sbbl
rorl
push
rclb
mov
mov
dec
push
hlt
and
jp
rorb
imulb
cmp
pop
dec
jne
lret
sub
fbstp
nop
dec
xchg
adc
adc
dec
pop
bound
je
out
adc
sub
cmc
jae
push
test
push
stos
adc
sbb
jnp
push
pop
jle
inc
and
jnp
push
adc
ret
ret
cld
pop
push
push
inc
xchg
push
cltd
jae
mov
stos
popf
xor
ret
inc
push
fcmovu
mov
call
inc
sub
scas
out
inc
test
arpl
sarb
xor
insb
jle
das
dec
hlt
sub
ret
inc
icebp
adc
or
add
rcr
or
add
int3
test
rcrl
jecxz
fmulp
pop
fld
and
test
jne
push
and
test
mov
mov
pop
jge
ss
adc
ret
cmp
cs
jl
sti
pop
dec
lock
movsb
aad
or
and
mov
jmp
push
push
pop
in
and
fdivrl
pop
cmpsb
pop
scas
in
mov
dec
ss
xor
add
into
es
ds
sub
stos
cmp
adc
shrb
scas
mov
andb
push
sbb
adc
xchg
pop
xor
inc
movsl
cmp
sub
cs
lcall
icebp
fmul
jns
sub
das
mov
sub
dec
adc
and
jg
cltd
inc
mov
pushf
mov
arpl
push
xchg
mov
pop
fcoms
dec
sub
lret
or
inc
stos
jg
cmpl
cmp
jo
es
xor
mov
loop
insb
loop
mov
cld
fs
mov
ss
loop
cmp
leave
repz
mov
xchg
xor
sti
stc
or
nop
into
jl
in
cmc
and
dec
push
sbbb
mov
incb
out
imul
add
mov
xchg
lods
xchg
cmc
popa
cmp
lret
and
push
mov
push
ret
adc
xlat
gs
fistl
cmpsb
test
flds
or
repz
adc
sbb
lock
stc
sub
pop
or
imul
push
pop
pushf
cltd
xlat
xlat
jmp
cwtl
imull
mov
mov
xlat
aas
mov
test
adc
rcll
jecxz
jmp
jb
jle
fadd
ret
cwtl
bound
sub
lret
shl
sahf
mov
mov
xchg
inc
push
jno
das
jp
mov
scas
das
cmpl
pushf
sub
std
rcr
and
cmpsl
rcrl
icebp
movb
jbe
test
mov
rcl
xchg
xor
pop
push
adc
push
jo
sub
sbb
aam
decl
scas
jg
sbb
insl
lods
scas
xbegin
push
sub
pop
shlb
fisttpl
lods
and
mov
mov
loope
ret
push
push
int
divps
mov
jns
js
out
es
push
popf
movzwl
insl
dec
dec
test
cmp
xchg
negl
sbb
aas
pop
movsb
add
stos
std
pop
or
pop
xorl
add
dec
clc
xor
ljmp
jge
popl
adc
fcompl
lret
add
inc
xchg
dec
js
stc
pop
das
fwait
dec
push
js
stos
xchg
mov
leave
in
out
push
push
mov
jnp
loop
and
push
jmp
mov
lods
aaa
mov
inc
push
addr16
jbe
push
sti
inc
mov
push
xor
psllw
mov
pusha
sbb
pop
fists
popa
xchg
out
sbb
aas
cmp
xchg
adc
scas
out
or
pop
enter
lds
push
ret
test
stos
test
aad
int3
lds
push
mov
jnp
sbb
jle
push
sbb
cmpb
in
cmp
pushf
ret
xchg
pop
mov
xchg
add
lock
cs
popf
push
rcll
mov
ljmp
fnstenv
out
mov
fldcw
gs
push
rcl
out
mov
imul
cmp
jbe
fwait
arpl
add
or
sarb
xchg
test
sti
or
add
loope
pop
cmp
xor
stos
lahf
inc
jo
add
and
jmp
push
testl
push
inc
scas
jnp
cs
jge
xor
dec
daa
shl
cmp
jno
add
mov
push
xchg
xor
loopne
xor
mov
xor
inc
imul
cmpsb
fsubl
in
mov
rcrb
out
add
xchg
movsb
loope
ror
pop
jns
cmp
sbb
push
push
rolb
lock
jecxz
xorb
adc
popl
pushf
xor
sahf
lods
jg
pop
add
or
test
nopl
xor
jns
lret
sub
std
outsb
mov
data16
xlat
jg
mov
in
and
mov
cmpsb
xor
xchg
test
int
sarl
mull
and
rcr
inc
mov
mov
data16
sbb
xor
in
adc
stc
pop
sbb
test
pop
adc
jns
lahf
adc
cmp
les
out
cmpsl
jmp
jo
sub
cmp
mov
mov
cmc
out
cmp
out
stos
pop
loope
or
rcl
mov
adc
and
scas
shrb
jp
fdivrs
dec
gs
bound
mov
rol
add
xchg
push
mov
aaa
push
mov
xchg
sub
add
aaa
mov
les
icebp
xor
jmp
daa
call
test
mov
mov
imul
pop
lcall
imul
xor
jb
stos
and
push
mov
sbb
adc
call
daa
stos
lea
std
push
cwtl
sbb
subb
bound
jae
mov
pop
js
out
scas
add
jge
in
das
pop
pop
sbb
stos
daa
mov
shr
inc
imul
inc
sbb
ja
lcall
mov
mov
popf
inc
adc
lret
push
or
mov
push
mov
idivl
mov
mov
xchg
shlb
mov
aam
bound
es
fxch
insl
xchg
cmp
fwait
xchg
xchg
shlb
ljmp
lds
fs
sub
bsr
pop
add
adc
test
add
or
and
stos
jns
xchg
inc
loope
int3
mov
xor
stos
stos
in
push
movsb
out
mov
insl
or
leave
in
push
jmp
jg
loopne
inc
xor
cmp
mov
xchg
inc
popf
dec
jns
add
cmp
scas
dec
roll
inc
sub
mov
sub
mov
add
mov
dec
out
xor
lods
bound
iret
push
jns
in
iret
stos
xchg
lahf
xchg
adc
mov
inc
sbb
addr16
jno
mov
stos
mov
push
out
mov
rcr
inc
dec
shll
shlb
lds
fbstp
outsb
xchg
mov
mov
cmp
pop
ja
sub
imul
stos
mull
and
mov
out
jmp
adc
lret
gs
out
adc
or
call
pop
fadds
inc
cmpsl
sub
jae
addb
icebp
jle
popf
jle
pushw
jg
push
mov
rcrb
or
loope
scas
mov
and
lods
cmc
loopne
out
leave
pop
mov
mov
adc
rorl
arpl
jecxz
notl
lret
sbb
out
aaa
push
scas
xlat
or
push
ret
add
call
ret
or
ficoms
cltd
jp
sub
cld
and
cmp
add
xor
push
push
xchg
jmp
push
jge
sbb
pusha
pop
add
ror
cmp
and
or
stc
dec
into
mov
adc
jnp
sbb
adc
test
repz
inc
cli
out
cmpsb
pop
lods
movsl
in
xchg
add
fcmove
jecxz
mov
stos
push
mov
loope
imul
ds
jmp
fiadds
in
mov
addb
sbb
or
test
movsl
inc
pusha
shll
sub
mov
pop
sub
scas
lcall
xor
and
insl
sub
nop
movsb
outsb
out
pop
mov
adcb
jg
fcoml
mov
and
xchg
in
push
cwtl
fcomi
int
jbe
fmuls
bound
lret
pop
shll
mov
sbb
add
test
dec
xor
xchg
fldcw
js
loop
and
dec
movsb
xor
movl
pop
cmp
mov
popa
xchg
mov
es
bound
or
daa
cli
into
inc
aas
pop
cmc
scas
adc
pop
add
adc
popf
adc
inc
aaa
add
or
data16
adc
jno
mov
sbb
out
in
mov
jno
pop
inc
stc
lea
dec
fidivl
repz
les
jae
shlb
sbb
out
sub
daa
jo
pop
jb
pop
adc
mov
xor
addr16
xor
iret
cwtl
movsb
inc
std
and
lods
jb
xchg
rorb
aas
iret
je
fdecstp
jecxz
cwtl
js
jl
cmpsb
sbb
cwtl
fcom
pop
mov
jge
mov
pop
filds
je
fildl
adc
pop
addr16
or
pop
xor
fcom
pop
das
cmp
mov
jbe
psrlq
mov
cmp
push
lahf
or
cmpsl
mov
les
je
xor
int3
daa
adc
test
xchg
adcb
pop
test
jp
clc
pop
xchg
adc
pusha
aam
sbb
ret
rcrl
jnp
stc
clc
ja
cs
sar
cltd
ljmp
or
mov
mov
out
and
sbb
inc
add
cmc
cltd
popa
mov
je
mov
and
fnstsw
dec
and
addr16
or
jg
aas
rcl
pop
and
call
out
pop
test
xchg
shll
add
sbb
je
fcmovne
bound
push
jmp
xor
pop
das
mov
cltd
push
rorl
cli
pop
addr16
mov
rcrb
stc
inc
mov
pop
cmp
lock
aad
clc
sub
repz
jo
inc
jns
arpl
xchg
out
cmp
mov
cmp
push
stos
jp
divb
ja
push
mov
cs
mov
dec
jne
mov
pusha
dec
sarb
mov
xchg
lea
sub
repz
addl
mov
aad
mov
cmpsb
and
stos
push
pop
and
movsl
pusha
insb
hlt
cmp
test
jl
in
mov
adc
jb
ret
test
andb
pusha
pop
xchg
push
mov
mov
push
out
fstp
lret
push
popa
xchg
dec
dec
addr16
pop
cmc
imul
and
repz
iret
rorb
mov
pavgb
hlt
or
lea
dec
dec
inc
cli
add
or
ss
add
add
out
cmpsb
int3
imul
dec
fidivrs
idivb
daa
mov
and
scas
loopne
mov
addr16
mov
lret
fisubrs
daa
mov
addb
ds
jl
sbb
dec
cmp
scas
mov
push
mov
lahf
mov
xor
mov
cltd
push
mov
and
loop
xor
outsb
hlt
or
adc
inc
in
push
test
pop
xor
sub
sbb
out
ds
movsb
movsl
jb
mov
dec
ds
sbbb
sbb
cmpsl
sub
sub
pop
iret
out
sub
arpl
cmpsl
xchg
jb
pop
imul
fmul
leave
lock
out
outsb
push
jge
adc
jno
mov
jecxz
mov
test
or
mov
push
test
adc
dec
fadds
mul
mov
out
or
daa
mov
sbb
mov
sahf
shrl
xor
or
jecxz
dec
stc
lret
and
fs
adc
cmp
mov
lahf
pop
cli
bound
cmp
mov
inc
into
and
testb
sbb
lds
dec
imul
sub
adc
mov
xor
rolb
cmp
push
mov
loopne
mov
mov
test
and
gs
and
cmp
ret
or
inc
sub
les
pushf
mov
cmp
cmpsb
ficompl
pop
or
stc
add
pushf
lcall
cs
aad
sub
sbb
and
mov
dec
ror
adc
add
push
sbb
jnp
daa
lea
lret
lock
add
nop
pop
in
pop
ljmp
or
jg
std
push
lock
push
mov
sbb
push
rorl
cmp
out
dec
pop
test
add
dec
movsb
or
test
xchg
inc
lcall
insl
mov
sub
aam
aam
and
push
jns
movsb
push
lock
bound
movsb
xchg
adc
pop
popa
sub
das
mov
xchg
mov
cmpsl
jmp
or
arpl
mov
mov
jne
push
out
popa
fucom
jle
test
mov
sbb
mov
shrl
jnp
movsl
nop
pop
stos
lret
out
xor
xchg
or
add
imul
or
loope
xor
into
loop
stos
and
dec
inc
mov
ss
pusha
nop
dec
mov
mov
xorl
mov
icebp
cmp
xchg
lahf
jns
jg
icebp
mov
or
adc
sub
mov
and
xchg
cmp
dec
cmpb
jle
addr16
push
adc
in
mov
lret
mov
mov
dec
xchg
fdiv
jne
into
iret
pusha
ljmp
xchg
pusha
mov
push
xchg
jbe
arpl
fs
adc
loope
mov
stos
fucom
mov
insb
pop
cmpsb
jnp
popf
inc
jle
and
jle
lock
jb
pushf
ret
aas
pop
inc
pop
pop
inc
mov
jb
push
ja
dec
popf
int3
pop
mov
pop
shlb
inc
negw
xchg
movsb
mov
les
jno
scas
jnp
fistl
sbb
mov
bound
xor
or
jno
push
leave
jno
mov
cmp
loop
or
icebp
jl
aaa
shrb
add
int3
push
mov
movl
lds
jp
loope
push
scas
push
inc
int
xor
jne
and
sub
test
lods
enter
daa
mov
push
jno
xchg
push
jl
and
dec
lods
bound
xor
xorb
pop
ja
and
push
xor
bound
inc
sbb
mov
push
push
fwait
mov
push
or
loope
and
lcall
ds
loopne
movsl
jns
xor
subb
xor
mov
out
xor
test
inc
adcl
fiadds
lcall
inc
fdivrl
add
ret
outsb
mov
outsb
adc
mov
lea
das
gs
fbld
mov
jmp
loop
sahf
in
int
insl
adc
jmp
negl
mov
sub
popa
pop
sahf
fs
ret
test
shlb
cwtl
aas
xchg
outsl
pop
pushf
out
jbe
test
sbbb
adc
dec
ss
cmpsl
loope
mov
adc
popf
popa
dec
cli
or
xor
testl
or
cmc
cmp
loopne
cmp
push
adc
ja
and
js
pop
arpl
data16
lods
das
lds
ljmp
mov
xchg
push
cli
mov
adc
dec
sti
mov
popl
nop
jmp
ds
and
cmp
jae
fldenv
push
repz
fsubrs
pop
jge
sbb
fcoml
lods
pop
fsubrs
adc
dec
pushf
inc
mov
add
aad
pop
inc
inc
xor
aas
or
mov
dec
inc
in
std
in
jmp
adc
lahf
fmuls
dec
push
xor
int
insb
andl
pop
or
pop
or
pop
lods
mov
lret
mov
mov
shlb
sbb
and
fdecstp
sbb
aam
insb
hlt
mov
push
push
in
cmpsl
mov
int3
mov
cld
and
push
lret
arpl
xlat
mov
icebp
jp
jge,pn
out
dec
rcrb
pop
sub
outsb
subb
fistps
insl
dec
arpl
clc
in
sub
ljmp
fsubrl
mov
bound
xorb
fimull
jbe
lret
cltd
iret
scas
js
movsl
outsl
sbb
push
test
pop
inc
test
mov
xchg
fcompl
in
stos
roll
mov
pop
out
in
xchg
xchg
dec
in
addb
lret
shl
dec
xor
jl
xor
cwtl
pushf
mov
lahf
shl
dec
scas
sbb
pop
fisttpll
push
dec
stos
adc
movsl
addr16
fwait
or
push
push
cmp
mov
div
out
int
sbb
inc
add
pop
cmp
push
out
xchg
mov
lret
mov
push
dec
mov
xor
xchg
jp
lock
mov
cmp
mov
pop
int
dec
jp
mov
and
pusha
test
mov
int
mov
xor
jmp
inc
xchg
andl
mov
sbb
pop
push
mov
xor
push
mov
jnp
cmpsb
inc
jle
mov
push
iret
rcr
in
fcmove
adc
ficomps
inc
enter
dec
nop
push
cmp
jbe
repz
push
in
jle
xor
lods
xchg
sti
push
jle
fwait
dec
sub
pop
sub
cmpl
out
xor
xchg
leave
xor
hlt
mov
jns
inc
add
arpl
lods
push
add
icebp
jno
fs
add
stos
int3
aas
add
stc
fdivrp
xchg
frstor
jo
inc
pop
scas
in
inc
and
insb
enter
xchg
xor
jbe
stos
pop
jge
sbb
enter
daa
mov
aas
cwtl
jno
or
jl
add
dec
sbb
and
adc
push
lahf
cmc
push
lds
mov
test
push
push
addl
cmp
cwtl
js
popa
outsl
pop
outsl
stos
imulb
dec
iret
loope
ss
sub
pop
aaa
cmp
nop
sbb
stos
shrb
pop
cmpb
sbb
jns
sub
outsl
xor
ret
or
popa
pop
sbb
dec
adc
movsl
std
pop
lcall
hlt
fsubl
loope
outsb
pop
inc
fcoml
cmpsl
and
jg
pop
xchg
mov
pop
mov
mov
fdivl
push
mov
mov
shl
pop
pop
fmul
and
sarl
jns
sbb
cli
sahf
pop
arpl
repz
outsl
cmp
addr16
stc
cmp
jae
mov
sub
cmp
mov
pop
out
cmpsl
pop
cli
cmp
sahf
xor
aas
xor
or
or
stos
into
jmp
int
add
fneni(8087
push
ljmp
sbb
repnz
adc
mov
adc
sub
lods
push
jae
cmp
lcall
or
mov
jg
imul
xor
sub
nop
movb
inc
fs
mov
int
push
gs
add
xchg
xchg
call
movsb
addr16
pop
mov
lcall
add
cs
or
aad
js
inc
dec
ja
aas
test
nop
sub
sarl
jecxz
nop
movb
sub
outsb
test
cli
pop
cmpl
xor
pop
push
mov
inc
or
iret
das
aad
mov
mov
iret
mov
pop
stos
cmpsb
shll
dec
data16
mov
adc
rorb
imul
pop
inc
icebp
stc
xchg
mov
dec
jle
lret
rclb
mov
mov
add
dec
lret
sub
add
cmp
cmp
stos
fwait
dec
insl
xor
sar
sub
xchg
mov
shll
dec
lods
cmp
mov
lods
cmp
push
pop
or
add
sub
mov
lret
push
mov
insb
mov
fnsave
adc
ja
in
sbb
cmp
pop
sti
mov
pop
out
dec
scas
mov
xor
cwtl
repz
ljmp
jnp
or
enter
mov
pop
cmp
rcrb
mov
mov
das
or
int
fwait
cmp
aaa
push
fxch
movl
lods
inc
xchg
bound
stc
jns
lret
cltd
inc
rclb
dec
push
xor
or
xor
sbb
and
push
scas
or
clc
and
mov
rol
jne
daa
cmpsl
pusha
and
fucomip
add
xchg
push
add
xchg
or
std
xorl
je
push
dec
sub
push
pop
sub
cmp
and
test
xor
je
jle
inc
mov
movsl
add
xor
fxch
xor
sub
mov
pop
inc
ror
add
jno
push
std
jno
popf
sbb
sub
sub
movsb
addr16
pop
add
inc
call
imul
push
enter
pop
ss
js
xor
or
mov
stc
fwait
push
in
flds
inc
add
jp
addr16
sbb
int3
sub
and
mov
fisubs
sub
inc
sub
pop
leave
cwtl
cmp
jg
pop
in
add
jp
jbe
add
jge
mov
dec
or
cmp
test
in
idivl
mov
push
imulb
popf
xor
out
sub
fcomi
in
test
pop
mov
cmpsb
imul
and
sti
js
mov
mov
loope
insl
test
cmp
adc
rorb
cmpsb
adcb
imul
je
int
call
sub
cmpsl
loopne
and
imul
rorb
clc
outsb
jp
jmp
cmp
les
rclb
mov
int
mov
mov
movsb
mov
aad
jne
jl
sbb
clc
push
ror
orb
in
stos
imul
icebp
je
dec
cmp
sbb
push
loop
nop
sar
jg
fs
outsb
xchg
adc
fcoms
ss
cmp
stos
fcmovnbe
out
jno
cli
outsl
xchg
sbb
cmp
out
cmp
jl
into
into
inc
fdiv
lret
loopne
stos
movsb
pop
jl
push
adc
icebp
in
push
xlat
jb
jb
mov
jp
mov
lods
std
add
cmp
sub
popf
xchg
test
mov
ljmp
out
jmp
push
rcll
loopne
lods
inc
ja
push
fxch
push
pop
fdivrs
repz
cmp
sbb
sarb
and
jnp
ds
cmp
hlt
inc
pushf
fwait
sub
jmp
xchg
out
cs
sbb
jmp
flds
mov
xorl
dec
or
or
xor
adc
les
cmp
mov
rol
and
jecxz
repz
add
icebp
out
lock
movsl
das
mov
dec
mov
ds
in
mov
mov
mov
data16
fsubl
cld
js
add
mov
loopne
mov
loopne
mov
and
sti
rolb
sub
push
mov
ret
std
cmpsb
jl
sub
xchg
fs
arpl
xor
ljmp
add
movsl
xchg
mov
iret
adc
push
cmp
mov
cltd
cmp
jecxz
mov
daa
adcb
fstl
test
adc
xchg
in
sbb
dec
shll
lea
cmpsb
xchg
repnz
xchg
dec
out
stos
stc
ds
fnsave
add
decl
dec
add
daa
mov
or
popf
inc
xor
es
xlat
sub
dec
jl
jecxz
push
daa
xor
push
scas
dec
nop
push
popf
inc
sbb
and
pop
add
jl
rolb
jnp
addr16
mov
jae
out
inc
jns
fisubs
xchg
sub
fidivl
test
dec
sbb
jp
and
mov
xchg
jo
mov
inc
es
inc
mov
cmp
mov
ja
xchg
pop
jmp
xlat
push
add
ss
pop
xchg
xchg
rcr
push
cmp
jmp
loopne
mov
push
ret
jle
enter
jecxz
adc
dec
sbb
push
add
add
mov
inc
fiadds
push
jae
push
inc
push
rclb
inc
subb
nop
xor
dec
ficoml
out
sbb
mov
jae
test
btrl
add
pop
hlt
repnz
std
mov
hlt
cmp
arpl
inc
adc
and
or
jno
int3
adc
fcomp
inc
adc
aad
clc
jo
pop
je
mov
pop
push
cmp
jo
push
push
or
jge
loope
enter
daa
mov
lret
es
imul
stc
inc
mov
fsts
dec
and
mov
loop
addr16
mov
in
inc
lds
in
or
pop
in
and
loope
enter
inc
sarl
pop
mov
popa
aas
xchg
movsl
mov
sbb
andb
leave
add
xchg
in
xor
lcall
dec
xchg
xchg
pop
mov
mov
push
pop
into
fdivrl
test
jmp
outsb
fstp
int3
adc
fnsave
es
lret
shr
fs
jmp
mov
mov
addl
pop
ja
scas
or
imul
or
mov
adc
sbb
push
imul
sti
outsl
and
stc
cmpsl
out
fs
ss
out
fsubrs
sub
lcall
xor
cmpsl
dec
or
sub
xchg
jno
loopne
jg
pop
fwait
adc
ret
cli
or
adc
fdivrs
add
push
data16
rolb
in
pushf
cmp
mov
sub
out
mov
push
push
dec
sti
lods
pop
inc
decb
movsl
sub
mov
jb
jl
insb
dec
aas
hlt
cltd
inc
mov
ret
pop
popf
repz
xchg
mov
test
dec
push
in
mov
fisttpll
push
jecxz
pushf
inc
sbb
arpl
push
lcall
test
mov
jb
cmp
dec
lods
push
je
add
movb
mov
mov
push
push
mov
jmp
pop
fucomi
jmp
inc
sbb
int
xchg
test
mov
cmc
jmp
mov
lds
mul
mov
lea
int
cmpsl
mov
lahf
push
icebp
cmpsl
pop
pushf
cld
mov
xor
mov
inc
cmp
mov
inc
cmp
rclb
inc
add
jecxz
test
iret
xchg
mov
es
pop
insl
incb
cs
sahf
sbb
xchg
or
and
sub
into
popa
xchg
lods
adc
mov
repnz
push
push
adc
maskmovq
testl
test
sbb
xchg
inc
pop
push
repnz
jle
loopne
mov
int
loop
fs
cmp
pop
push
cmp
stos
xchg
out
push
cmp
xchg
and
push
add
insb
ljmp
scas
out
stos
and
xor
in
iret
mov
test
mov
pop
push
adc
ja
pop
rorb
or
or
adc
cmp
pop
ret
fwait
and
out
push
stos
bound
push
jns
xchg
add
scas
repnz
shlb
inc
mov
and
out
sbb
jp
dec
dec
mov
popa
cmpsl
mov
insb
movsl
jmp
and
fsubs
rorl
sub
push
xchg
lods
adc
add
xchg
mov
icebp
pop
out
subb
stc
mov
jl
inc
stos
test
int3
push
insb
or
pop
jle
je,pt
mov
and
ljmp
ret
negb
cmp
jae
cmpl
push
bound
fimull
repnz
add
and
imul
scas
pop
ja
push
push
or
mov
mov
cs
push
mov
out
cmp
cmpl
arpl
mov
push
or
fldl
aaa
int3
xlat
dec
or
sub
pop
and
fsubp
inc
lock
jo
xchg
scas
cmpb
cmp
out
jb
sub
jbe
adc
enter
daa
mov
pop
inc
jno
dec
mov
cmp
jg
mov
sbb
lahf
push
clc
imul
lcall
push
inc
push
cmpsb
jno
or
ret
nop
