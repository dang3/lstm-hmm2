jmp
mov
jmp
mov
jmp
mov
popa
cmp
xor
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
xor
xor
xor
xor
add
add
ss
xor
cmp
add
add
xor
xor
aaa
xor
xor
add
cmp
cmp
xor
add
add
xor
xor
xor
add
ss
cmp
xor
add
add
xor
xor
cmp
cmp
cmp
xor
xor
aaa
cmp
xor
xor
cmp
add
xor
xor
xor
add
xor
cmp
cmp
add
xor
xor
xor
cmp
add
cmp
xor
xor
aaa
cmp
add
push
mov
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
add
ss
xor
cmp
add
xor
xor
aaa
xor
add
cmp
xor
xor
xor
add
add
xor
cmp
xor
add
xor
xor
add
xor
xor
xor
add
xor
aaa
xor
xor
xor
xor
xor
cmp
add
aaa
cmp
cmp
xor
xor
cmp
ss
xor
cmp
xor
xor
add
add
xor
xor
cmp
add
xor
xor
xor
add
cmp
aaa
xor
xor
add
xor
cmp
xor
xor
add
ret
lea
push
mov
add
mov
mov
cmp
jbe
lea
lea
cmp
js
inc
inc
mov
lea
xchg
mov
lea
xchg
lea
mov
inc
dec
jne
mov
mov
mov
cmp
je
jmp
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
mov
xor
divl
test
jne
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
mov
cmp
jl
mov
xchg
lea
mov
mov
mov
inc
mov
mov
mov
mov
mov
dec
jne
inc
dec
dec
mov
cmp
je
jmp
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
mov
cmp
je
jmp
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
cmp
je
jmp
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
mov
sub
mov
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
push
mov
mov
xor
call
mov
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
mov
call
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
push
mov
mov
xor
call
mov
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
mov
mov
cmp
jbe
lea
lea
cmp
js
inc
inc
mov
lea
xchg
mov
lea
xchg
lea
mov
inc
dec
jne
mov
mov
mov
mov
push
add
jmp
mov
mov
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
lea
mov
push
mov
jmp
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
mov
cmp
jl
mov
xchg
lea
mov
mov
mov
inc
mov
mov
mov
mov
mov
dec
jne
inc
dec
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jbe
lea
lea
cmp
js
inc
inc
mov
lea
xchg
mov
lea
xchg
lea
mov
inc
dec
jne
mov
mov
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
mov
mov
movl
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
jge
push
pop
or
cmp
pop
inc
cmp
pop
sub
pop
xor
cmp
pop
dec
cmp
pop
push
cmp
pop
mov
cmp
out
add
iret
cmp
out
add
sarl
out
add
idivl
out
add
sti
cmp
out
add
mov
cmp
out
add
mov
cmp
out
add
out
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
mov
mov
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
daa
pop
pop
pop
fstpl
push
daa
pop
pop
pop
fstpl
pop
sub
mov
lock
xchg
daa
pop
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
daa
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
pop
pop
lahf
pop
out
sub
mov
out
lahf
xchg
daa
pop
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
daa
pop
pop
push
cmp
pop
pop
pop
mov
sub
mov
daa
pop
pop
sub
mov
pop
and
mov
daa
pop
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
daa
pop
pop
mov
pop
lahf
pop
repnz
mov
daa
pop
pop
mov
pop
sub
mov
pop
lahf
cltd
and
pop
pop
sub
mov
daa
pop
pop
mov
and
pop
pop
sub
mov
daa
pop
pop
and
xchg
and
pop
pop
sub
mov
pop
and
mov
daa
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
pop
pop
sub
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
cmp
jl
mov
xchg
lea
mov
mov
mov
inc
mov
mov
mov
mov
mov
dec
jne
inc
dec
dec
push
call
mov
lea
mov
subl
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
mov
mov
call
mov
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
mov
mov
call
mov
cmpl
je
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
lea
push
push
mov
sub
push
mov
push
call
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
mov
cmp
je
mov
subb
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
xor
add
mov
xor
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
incl
mov
cmp
jne
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
mov
call
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
mov
push
mov
push
call
cmpl
je
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
cmp
jbe
lea
lea
cmp
js
inc
inc
mov
lea
xchg
mov
lea
xchg
lea
mov
inc
dec
jne
mov
mov
push
mov
pushl
xchg
push
jmp
mov
mov
cmp
jl
mov
xchg
lea
mov
mov
mov
inc
mov
mov
mov
mov
mov
dec
jne
inc
dec
dec
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
push
mov
add
cmp
jbe
lea
lea
cmp
js
inc
inc
mov
lea
xchg
mov
lea
xchg
lea
mov
inc
dec
jne
mov
mov
movb
mov
mov
mov
add
mov
xor
add
cmp
jne
pushl
push
jmp
add
sub
cmp
jne
cmp
jbe
lea
lea
cmp
js
inc
inc
mov
lea
xchg
mov
lea
xchg
lea
mov
inc
dec
jne
mov
mov
cmpb
jne
movb
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
push
push
push
call
mov
mov
mov
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
jmp
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
movb
cmp
jnp
xchg
lea
xchg
mov
dec
dec
inc
xchg
mov
mov
xchg
inc
xchg
mov
mov
mov
mov
mov
mov
pop
ret
popa
jo
ja
jp
arpl
and
push
mov
add
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
call
test
jne
mov
jmp
movw
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
call
lea
mov
pop
ret
push
mov
add
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
call
call
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
push
push
push
call
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
call
call
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
cmp
jbe
xchg
mov
mov
mov
mov
lea
mov
inc
inc
inc
lea
lea
mov
mov
mov
mov
dec
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
cmp
jns
mov
mov
lea
lea
xchg
mov
mov
xchg
xchg
jmp
mov
xchg
inc
inc
lea
mov
inc
dec
jne
inc
mov
pop
ret
add
xor
ss
xor
xor
add
xor
xor
xor
xor
xor
add
xor
cmp
cmp
xor
xor
xor
cmp
xor
cmp
xor
xor
add
xor
xor
aaa
xor
xor
xor
xor
xor
xor
add
add
xor
cmp
cmp
ss
add
xor
xor
xor
add
xor
aaa
xor
xor
add
xor
cmp
cmp
add
xor
xor
cmp
add
xor
ss
add
xor
xor
xor
add
xor
xor
add
xor
cmp
add
popa
jo
ja
jp
arpl
add
push
mov
add
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jne
xchg
mov
mov
mov
mov
mov
mov
lea
inc
dec
jne
mov
lea
mov
lea
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
movl
mov
push
mov
push
mov
push
call
call
xchg
xchg
mov
cmp
jle
mov
mov
mov
dec
dec
mov
lea
lea
mov
lea
mov
mov
xchg
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
cmp
jl
mov
xchg
lea
mov
mov
mov
inc
mov
mov
mov
mov
mov
dec
jne
inc
dec
dec
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
pop
ret
add
xor
aaa
xor
cmp
cmp
xor
add
cmp
cmp
add
xor
xor
xor
xor
xor
add
cmp
ss
xor
xor
xor
xor
add
xor
xor
cmp
xor
add
aaa
xor
cmp
add
cmp
cmp
cmp
aaa
add
add
cmp
xor
xor
add
xor
ss
xor
xor
aaa
xor
xor
xor
add
cmp
xor
xor
xor
add
cmp
ss
xor
aaa
add
add
xor
xor
xor
add
xor
xor
xor
aaa
xor
cmp
xor
xor
cmp
add
add
xor
xor
cmp
add
aaa
xor
cmp
aaa
cmp
add
add
xor
xor
add
add
add
jae
mov
cmp
jne
xchg
mov
inc
mov
mov
inc
inc
lea
lea
mov
mov
mov
xchg
jmp
xchg
jmp
inc
inc
mov
inc
inc
mov
mov
lea
call
cmp
jbe
mov
xchg
xchg
inc
dec
je
lea
mov
lea
mov
inc
inc
mov
mov
xchg
xchg
mov
dec
jne
dec
inc
dec
ret
ret
lea
or
sahf
fiadds
inc
add
jecxz
mov
sub
ss
addl
in
add
add
movl
add
ljmp
cltd
add
outsb
or
sbb
add
in
cld
icebp
clc
mov
add
loop
inc
loopne
adcb
aaa
sbb
push
add
add
rolb
add
mov
add
arpl
rorb
adc
out
pop
in
mov
push
add
outsb
xchg
push
ret
das
add
out
test
adc
jb
add
mov
lock
jno
add
add
mull
mov
jg
pop
add
mov
add
stos
add
sub
jnp
hlt
dec
sahf
cmp
xchg
out
dec
imul
pop
je
sti
xchg
mov
push
add
dec
mov
add
pop
notb
pusha
out
leave
add
xchg
add
cmp
test
cs
lock
in
sub
clc
js
or
sti
lea
lahf
add
inc
in
xchg
xor
shl
push
push
ret
dec
cmp
frstor
enter
repnz
add
mov
xchg
add
adc
sub
add
adc
and
sub
adc
cmp
add
outsl
mov
add
loop
add
mov
add
das
sub
xor
sahf
int
fcompl
repz
icebp
add
ret
xchg
je
add
mov
mov
lods
mov
in
adc
add
jl
in
pop
add
cmpsb
stos
scas
sub
arpl
loope
lods
pop
jmp
js
or
jns
sarl
mov
jl
push
xchg
outsl
sub
sub
adc
sbb
inc
add
das
hlt
shrl
push
mov
push
inc
hlt
test
jmp
jl
add
or
pop
test
or
add
add
popa
sub
add
loopne
pop
loopne
cs
rolb
mov
sbb
mov
add
add
or
xchg
sub
cmp
add
add
sbb
pop
xchg
cli
push
mov
xor
inc
stos
int3
cmpsl
scas
add
jb
push
add
mov
cwtl
fimull
add
repz
jb
cmp
arpl
or
ret
add
inc
add
add
repz
push
push
push
add
jmp
add
dec
jp
jns
lahf
mov
add
test
add
js
xor
popa
xchg
clc
mov
add
out
pop
jns,pn
add
aad
in
push
xor
pop
adc
dec
push
inc
daa
mov
jmp
cmc
mov
add
rcl
fbstp
sbb
faddl
mov
add
movl
add
add
cmp
outsb
lods
rcl
add
int3
inc
or
jmp
imul
enter
je
add
jne
sahf
scas
push
mov
or
pop
dec
jge
loopne
scas
div
add
fwait
mov
iret
add
add
mov
jns
sbb
ja
fwait
adc
insl
add
add
in
push
mov
mov
add
ret
push
in
xchg
out
or
out
mov
xlat
add
shlb
add
pop
mov
mov
jge
add
lret
add
add
fstpt
imul
add
rcrb
test
in
test
cmp
add
sbb
pop
or
or
xchg
fadd
xor
fnsave
and
sbb
in
jle
inc
mov
fiadds
cmpsl
jle
movsb
inc
adc
mov
add
fiadds
mov
mov
fildl
int3
mov
fstpt
loopne
jg
movsl
inc
scas
jmp
jle
xor
test
and
mov
shll
fisubrl
ss
ss
stc
cmpsl
mov
xor
test
lcall
arpl
std
insl
inc
mov
sub
mov
out
ret
rclb
xor
ret
cmp
js
mov
enter
sbb
test
pusha
lods
push
out
mov
pop
les
push
movsb
testl
cltd
sbb
stos
test
adc
and
sub
repz
test
inc
dec
xchg
outsl
sbb
popl
pop
mov
stos
push
lea
aaa
fldcw
stc
pop
ljmp
mov
sub
psrlw
mov
mov
xchg
dec
sbb
aas
inc
je
jns
or
mov
inc
ja
xchg
or
rcl
fwait
and
jle
or
cwtl
mov
int3
lods
out
pop
jno
bound
jns
jns
pop
sbb
push
dec
add
fwait
mov
mov
adc
jb
jp
xorl
mov
adc
jne
call
pusha
daa
lahf
popa
filds
std
jmp
add
out
std
shr
out
mov
sub
jle
cli
push
cmp
inc
stos
add
int3
and
lret
sarb
inc
pop
jle
decl
enter
jnp
add
or
ret
in
sbb
inc
or
jecxz
int3
mov
inc
push
fisttps
fisubl
adcl
das
fsts
scas
xor
cmc
push
sub
adc
loop
test
cmpsl
movsb
push
leave
dec
mov
lds
sti
xor
stos
jo
xchg
xchg
jbe
push
gs
aaa
or
add
dec
int3
shrl
adc
rcr
rolb
vunpcklpd
scas
pop
lods
nop
and
outsb
xchg
cmp
shlb
cld
mov
jge
push
ja
xor
daa
mov
pop
cmp
jmp
sbb
jl
cmpsl
lahf
dec
mov
xchg
push
gs
xor
out
nop
cmp
cli
mov
test
push
inc
outsl
inc
add
loopne
cli
xchg
in
cmpsb
int
js
and
pop
jmp
jp
loope
sahf
sub
dec
mov
ds
imul
rclb
cmp
icebp
jmp
sbb
outsl
add
in
add
pop
pop
repz
pop
lahf
inc
mov
push
mov
sub
dec
add
adc
dec
jl
jg
inc
pop
mov
adc
pop
dec
bound
sbb
ret
int
mov
add
fsubrs
lret
call
mov
sbb
repz
leave
xor
or
loop
ss
stc
subl
adc
popa
sarb
daa
adc
xchg
shll
outsb
es
xor
rorb
icebp
jae
into
cmp
into
clc
loopne
roll
pop
mov
adc
jo
imul
adc
inc
adc
cmp
daa
lods
sbbb
fmuls
stc
mov
add
pop
xchg
ret
sbb
outsl
pusha
nop
call
cmovs
in
add
psllq
std
pop
xchg
lods
sar
jno
sub
cmp
inc
sahf
hlt
popa
pop
mov
xchg
jmp
lds
loop
dec
aad
lods
inc
lock
ret
aas
arpl
in
dec
mov
shl
fmulp
xchg
jge
lea
push
cwtl
imul
call
inc
xchg
mov
int
cmpsl
outsl
rcrb
cmp
sbb
lock
pop
mov
rcll
and
or
roll
in
imul
mov
std
std
mov
mov
xor
fistpl
aad
add
cld
dec
mov
mov
shll
cmp
sbb
shlb
mov
aam
and
ret
enter
mov
or
mov
jne
clc
xlat
popa
jecxz
clc
lods
mov
push
ja
jle
add
cs
xor
movsb
popa
add
rclb
dec
mov
pop
and
dec
pop
fstpl
sbb
test
dec
inc
xchg
fdivrl
lret
shl
lret
sub
std
aas
adc
lcall
add
aam
ljmp
mov
or
and
and
xchg
call
ja
and
dec
dec
xchg
xchg
mov
pushf
fwait
push
cmp
testb
inc
push
out
out
jnp
lds
jns
movsb
sub
fistpl
test
pop
or
test
addr16
xchg
mov
js
mov
mov
sahf
mov
movsl
testb
cmp
ss
pusha
ret
fbld
out
push
jmp
into
cmp
jl
cltd
sub
mov
push
stos
jne
cmc
and
push
int3
insb
mov
es
lods
pop
jle
inc
jl
iret
push
adc
or
mov
jb
sbb
gs
push
loopne
popf
add
xchg
push
pop
mov
mov
pop
rcr
sbb
mov
or
jb
lods
sar
jae
xor
repnz
jge
leave
ret
jle,pt
scas
lds
push
adc
adc
test
loopne
enter
insb
loope
add
add
pop
aas
pop
mov
lds
popa
jo
mov
scas
pop
mov
lret
cmp
dec
sub
fidivrs
or
enter
daa
mov
repnz
cmp
out
lret
add
repnz
and
gs
dec
or
mov
lahf
into
jle
push
int
stos
test
loope
imul
shll
lea
pop
pop
sub
push
sub
jp
cmp
hlt
sarl
adc
mov
shrb
mov
xchg
add
mov
and
pop
cmp
pop
jp,pn
sub
push
rcrb
pop
push
mov
cmp
outsb
int3
stos
hlt
adc
fs
jg
mov
mov
test
bound
insb
push
mov
inc
int
dec
mov
notl
jmp
ja
xchg
xchg
sbb
and
jp
dec
xor
mov
mov
cwtl
stc
cmp
mov
mov
adc
lea
dec
cli
mov
ds
cmp
lret
pop
or
outsl
into
and
cmc
je
adc
or
pop
ss
fsubr
aaa
adc
jnp
add
add
lods
xchg
cmp
xor
sub
push
mov
insb
dec
lock
sbb
aaa
mov
jbe
nop
ret
add
or
int
fstps
push
cltd
les
adc
xchg
jo
sbb
mov
ret
sbb
xchg
pushf
popf
gs
jmp
icebp
mov
aad
jnp
inc
or
dec
aas
add
jp
fisttpl
lea
inc
lea
mov
gs
push
sbb
pop
dec
fcmovnbe
out
push
inc
mov
aaa
adc
out
cli
pop
mov
mov
push
and
fucomi
rcll
mov
xor
pusha
std
movsb
lret
je
sub
sbb
push
cwtl
push
icebp
fcmovbe
inc
cld
jp
cwtl
lret
mov
mov
mov
mov
fiadds
add
mov
mov
and
push
rolb
lret
or
clc
xchg
inc
cmp
ljmp
jbe
daa
inc
or
mov
jo
push
pop
xor
add
or
cltd
xchg
test
jns
mov
lret
roll
inc
adc
test
jmp
xchg
test
sarl
or
stos
xor
dec
out
std
jmp
xchg
xchg
popl
repnz
dec
push
xchg
xor
repz
or
mov
stos
mov
mov
sahf
dec
out
scas
pop
mov
ja
arpl
inc
sub
inc
movsl
push
or
pusha
pop
fwait
subb
dec
or
add
popf
lret
mov
bound
push
jns
xchg
add
inc
sub
and
imul
pop
popf
addr16
and
mov
xchg
fcmovb
dec
xchg
arpl
jne
shll
pusha
pop
adc
lds
aaa
xchg
lret
push
dec
jmp
cltd
iret
lea
jmp
cmc
sub
hlt
movsl
push
mov
dec
stos
call
js
insb
and
inc
jnp
jne
lret
in
jg
adc
fsubp
iret
leave
wrmsr
ret
xchg
pop
xor
xchg
or
jbe
xor
push
ja
popf
sub
and
jae
leave
int
xchg
mov
cli
sbb
inc
ljmp
xor
scas
negb
push
push
mov
mov
mov
dec
mov
hlt
cli
inc
push
arpl
and
sbb
and
pop
out
add
cmpsb
mov
ficoms
ds
jo
inc
push
scas
fstl
push
and
mov
movsb
sub
push
clc
add
jbe
mov
jge
jg
enter
daa
mov
pop
cmp
adc
scas
dec
xchg
jle
push
sub
inc
xor
and
adc
push
mov
int3
push
push
lods
inc
scas
inc
pop
lcall
je
cmp
pop
clc
pop
addr16
xchg
push
jge
loope
loope
sub
jl
cmp
xor
movsl
mov
int3
orl
and
andl
xor
outsl
push
pop
push
in
sub
shl
pop
popf
jmp
lcall
pop
fdivrl
or
sub
pusha
outsb
das
test
movsb
cmpb
jg
fiadds
ret
mov
and
and
mov
push
mov
mov
xchg
notl
jmp
shl
xlat
mov
dec
sbb
add
test
xor
in
xor
sub
test
adc
es
xor
cmp
mov
add
aam
mov
cmp
jl
or
fimuls
add
pushf
loopne
pop
out
push
stos
loope
mov
pop
imul
cmp
arpl
in
lods
dec
push
jmp
xlat
push
jno
sub
sbb
xlat
inc
je
je
fstl
jns
test
jmp
repz
clc
cmpsl
xchg
xor
dec
sbb
das
jmp
pushf
pop
ret
inc
and
pop
out
mov
jmp
loope
cs
sahf
aad
hlt
lea
cli
dec
aas
mov
sub
sarl
je
loop
jecxz
xchg
jbe
cltd
imul
cwtl
loope
mov
pop
dec
jbe
jbe
and
fildl
adc
cmpsl
lock
das
int
iret
mov
aas
jle
and
add
rcrl
mov
xor
aad
cmpsl
mov
or
mov
xchg
cld
movsl
cltd
or
mov
sbb
jno
cmp
std
push
pop
rorb
push
sub
lods
and
add
inc
and
ret
insl
push
mov
xchg
xchg
insl
ljmp
dec
lods
xchg
sub
mov
les
inc
push
xor
push
sbb
and
cltd
mov
stos
mov
push
test
test
sbb
cmpsb
sbb
lods
cltd
rcll
and
and
shr
pusha
jecxz
xchg
into
and
or
daa
in
xor
or
xor
dec
mov
mov
ljmp
mov
pop
dec
xor
adc
call
arpl
push
icebp
aaa
les
clc
push
lret
imul
int
push
in
aas
jns
push
dec
clc
mov
out
mov
or
pushf
addr16
jmp
out
adc
pop
incl
mov
aam
dec
jne
mov
pusha
clc
out
xchg
pop
xchg
sahf
jno
jmp
fs
subl
sbb
das
jnp
push
idivb
mulb
testl
fnstcw
les
in
pushf
cmp
iret
sub
ret
sbbb
jmp
sub
jnp
inc
and
adc
lret
xchg
sub
pop
stos
mov
jl
mov
sbb
xchg
es
inc
scas
pop
psrlw
xlat
cmpsb
shlb
fnstsw
mov
sub
arpl
int3
inc
sbb
or
aas
rcl
inc
ret
push
lahf
in
inc
cmpl
pop
popf
lahf
int3
fidivrs
in
jo
jecxz
scas
mov
jae
fwait
das
fldenv
outsl
pop
jbe
xchg
pop
adc
and
jbe
mov
push
cmp
mov
and
jl
sbb
dec
add
cld
push
push
cmp
into
and
and
push
jae
dec
test
ja
jmp
scas
ror
adcl
dec
inc
js
push
jae
cmpsb
xor
or
movsl
sub
push
ret
cmp
outsb
and
movsl
mov
adc
subb
pusha
sbb
sti
add
add
xor
inc
in
mov
jl
sub
lods
int
pop
sbb
mov
or
out
sub
das
sub
incb
outsb
xchg
lcall
lcall
mov
adc
xor
and
clc
push
mov
adc
fmuls
fwait
notl
sbb
mov
add
leave
cmpsl
stos
sahf
ret
test
push
outsl
adc
mov
xor
sbb
test
sbb
mov
sti
adc
lret
dec
mov
adcl
cli
pop
ss
cmp
add
or
mov
sub
loopne
mov
xchg
adc
push
cwtl
adc
dec
ss
lods
fisubs
cmp
lods
xor
sub
cmp
in
inc
adc
sti
jbe
sub
gs
in
nop
jns
jae
fcomps
lods
inc
flds
sbb
lea
out
cltd
call
sbb
mov
adc
adc
jae
jne
or
aad
shrb
inc
inc
mov
sub
push
je
faddp
jecxz
rclb
lea
cwtl
pushf
jnp
mov
test
mov
sbb
js
out
xor
inc
pop
or
inc
lret
lock
insb
das
lods
jo
mov
testb
shr
mov
mov
dec
and
cmpsl
mov
mov
icebp
mov
cld
rclb
lret
mov
roll
aam
mov
sbb
inc
rcr
push
dec
sub
inc
jne
jae
inc
cmp
insl
dec
pop
iret
clc
cmp
rcll
push
clc
popa
sub
loopne
std
jmp
mov
out
cmp
adc
cmp
xor
cmp
test
cs
mov
jo
push
inc
xchg
dec
fisttpll
loop
xchg
and
jecxz
add
jmp
jno
and
stos
jns
aaa
xchg
adc
adc
xor
add
xor
pop
xchg
mov
xor
ja
ja
dec
sub
inc
sarl
or
inc
jb
loopne
push
push
xchg
pop
into
add
push
sbb
push
shll
iret
pop
jns
push
ret
mov
xchg
mov
ds
mov
je
adc
pop
jp
xchg
ss
cli
mov
jne
ljmp
xor
filds
sub
jmp
das
repz
pop
out
adc
sub
push
insb
push
xor
imulb
and
mov
lcall
int3
push
in
sbb
adc
xchg
cld
ret
gs
mov
hlt
adc
sub
push
fadds
stos
popf
jns
add
inc
push
das
lods
hlt
xchg
popa
pop
and
dec
rol
jmp
outsl
scas
mov
out
rorb
mov
repz
or
sub
lock
in
scas
inc
push
imul
cs
scas
sbb
pop
mov
add
or
add
aaa
xchg
int3
insl
jo
pop
int3
or
ficomps
lds
cltd
aas
scas
fwait
nop
inc
and
lea
push
xchg
sbb
arpl
mov
daa
mov
les
push
cmpsl
inc
jno
add
jl
inc
sub
pop
mov
xor
pop
xlat
add
inc
in
push
test
inc
rolb
sub
in
inc
jmp
cmp
in
cmp
push
data16
mov
sub
sti
cmp
ficoml
jns,pt
icebp
movsl
mov
sar
imul
cmp
cld
cwtl
add
das
cmp
sub
mov
pop
mov
pop
add
lcall
addr16
stos
je
pop
test
adc
mov
mov
push
mov
mov
xchg
test
cmpsb
loope
mov
inc
add
push
mov
dec
movsb
fmuls
pop
fs
mov
pop
mov
mov
arpl
clc
ret
gs
roll
cmpl
pop
stc
pop
out
in
fs
mov
adc
xchg
out
dec
rclb
cmp
jle
into
out
jno
cli
cmp
bound
pop
or
lods
pop
add
leave
ret
cmpsl
cmc
leave
leave
mov
pop
xchg
push
imul
push
aaa
lods
sbb
loopne
mov
jb
mov
jmp
lods
scas
mov
and
gs
arpl
dec
aaa
jns
inc
and
sub
repz
mov
or
inc
mov
lcall
adc
movsb
xor
bound
stos
aad
adc
inc
pop
aam
aas
fists
jb
push
scas
dec
fs
je
das
or
mov
and
push
cwtl
push
popa
cmp
ds
movsb
inc
das
dec
arpl
imul
mov
std
das
mov
jmp
dec
test
test
sarl
xchg
dec
std
cltd
dec
sbb
leave
in
cmpsl
dec
inc
icebp
pop
inc
dec
cld
sti
loope
lret
sub
xchg
mov
ret
fwait
mov
cmpsl
xchg
pop
cmp
xchg
sub
pop
jns
add
sub
enter
ss
jg
jbe
sahf
xchg
add
out
les
lods
lods
push
lret
inc
mov
dec
push
orl
inc
filds
cltd
sub
aad
push
push
sbb
push
or
pop
fnsave
cmp
xchg
inc
or
roll
negb
pop
stos
icebp
movsl
out
es
cmp
inc
dec
and
cmpsb
xor
sub
or
mov
mov
rclb
sbb
pop
out
sbb
inc
int3
dec
sbb
inc
push
dec
or
out
sub
aaa
jno
add
scas
fisttps
adc
jns
das
in
xor
xchg
icebp
int3
insb
mov
add
mov
cld
adc
jp,pt
pop
in
mov
ror
mov
in
es
cmp
cmp
pusha
rorb
and
aaa
xchg
inc
ret
sub
mov
cmpb
subl
loope
push
je
push
stos
inc
add
and
sub
cwtl
jle
loope
in
add
ret
iret
out
dec
ret
outsl
pop
fidivl
inc
inc
and
jecxz
fwait
push
fwait
repz
mov
adc
inc
pop
cmpsl
sub
xchg
mov
mov
aaa
scas
pop
aam
push
mov
shrb
mov
inc
jmp
leave
lahf
movsb
pushf
hlt
dec
inc
and
jae
mov
sbb
les
pop
or
sub
stos
int3
pop
xchg
mov
sti
aaa
rcr
fadd
lds
fldt
push
pop
lahf
cmp
pop
movsb
lret
push
in
xorl
cmpl
stos
dec
daa
mov
popf
cmp
out
jno
pop
or
dec
loopne
ret
push
aam
je
dec
lahf
and
lcall
sbb
test
or
fnstenv
mov
mov
js
or
pop
and
shrl
fsubp
dec
push
fwait
sub
js
cmp
jl
movsl
int
jl
fcom
lahf
push
test
sbb
xor
xor
push
into
imul
pop
lret
sub
les
push
outsb
sub
pop
mov
test
outsb
pop
pop
aam
add
mov
in
mov
dec
adc
mov
rorb
and
test
ret
int
push
sahf
notl
jmp
sbb
mov
mov
xchg
push
out
outsl
shlb
stc
push
sbb
adc
pop
imul
rol
cmp
jns
loop
xchg
arpl
cli
insl
les
and
push
or
push
nop
ret
sti
mov
pop
mov
inc
adc
mov
iret
adc
push
add
push
cmpsb
lods
add
repz
xlat
cmpsb
xlat
adc
sub
test
xchg
in
sbb
stos
sti
aam
jle
inc
pop
push
gs
jp
nop
das
push
cmp
inc
xor
stc
in
les
pushf
repz
jo
xchg
jl
inc
sbb
mov
pop
add
adc
pushf
dec
or
jmp
dec
ret
std
sub
mov
and
fcomip
aas
jle
xchg
jb
adc
dec
fisttpl
fs
push
rol
mov
stos
inc
cwtl
adc
inc
mov
mov
and
dec
dec
xchg
xchg
cwtl
repnz
push
and
fsub
scas
lock
adc
push
outsl
mov
lea
rorl
push
std
inc
cmpsb
stos
dec
sbb
mov
mov
insb
mov
ss
xchg
cld
es
xchg
in
mov
bound
push
pop
pop
loop
rolb
fildl
ret
xchg
push
es
jge
insl
sbb
adc
xchg
inc
mov
ljmp
and
aam
mov
push
fsubrs
xchg
add
dec
divl
cltd
arpl
jg
fisubs
push
fstp
fildll
test
sub
sbb
rcl
cltd
or
pop
push
xchg
stos
in
push
shr
mov
jge
pop
popf
test
xor
jo
fpatan
mov
mov
ret
mov
xchg
pop
mov
lcall
add
or
jo
fidivrl
add
or
push
bound
fsubp
xchg
daa
mov
sub
lea
or
fcomip
addr16
jnp
xchg
es
repnz
mov
push
pop
adc
jae
jne
and
pusha
leave
loop
filds
push
xchg
pop
mov
jg
lds
adcl
out
push
es
loopne
cmp
stos
mov
add
cmp
test
jnp
and
stc
in
dec
push
iret
inc
xchg
sbb
mov
cmpsl
jbe
dec
mov
jp
pop
pop
fcomps
pop
in
inc
fldpi
pminub
shrl
sbb
adc
push
aad
add
mov
cltd
enter
pop
test
arpl
pushf
inc
and
in
or
jo
mov
adcl
pop
adc
int3
inc
mov
pop
sub
test
mov
cmp
scas
pop
sbb
and
xor
movsb
push
cli
mov
xor
jae
pop
sub
jge
and
daa
mov
sarb
je
jmp
jl
add
dec
dec
rorb
sub
in
and
xor
in
mov
sub
push
inc
pop
int3
cmpsb
or
sbb
adc
adc
mov
add
repz
popa
adc
push
ds
xchg
cmp
mov
fisttps
arpl
data16
xchg
xor
mov
adc
jns
sub
imul
push
fsubrl
in
sub
fisubs
outsb
mov
idivb
jg
inc
outsb
mov
cmp
mov
lods
and
addr16
lds
mov
mov
fdivrs
clc
notl
mov
rorl
push
mov
mov
test
insl
aas
outsl
mov
loop,pn
mov
stc
int
insb
fs
mov
inc
ss
inc
mov
mov
out
fstps
mov
iret
cli
cmp
mov
mov
xchg
into
cmpsl
movsb
cmc
push
pop
iret
loopne
push
repz
rcll
and
add
pop
imul
stos
lds
mov
lods
ljmp
xlat
push
jb
sub
xor
in
andl
orl
mov
jne
nop
or
dec
cmc
inc
mov
bound
les
xchg
repz
test
pop
pop
jae
sbb
xor
cwtl
pop
sub
adc
inc
or
inc
dec
stc
cs
in
aad
shl
xchg
stos
aas
sbb
or
dec
push
je
lret
mov
fsubrs
dec
movsl
mov
lea
call
fisttpll
sarb
pop
fcmovnb
in
rcrb
arpl
inc
pop
push
lock
mov
arpl
rcr
cli
add
jg
sbb
out
add
cmpsl
mov
inc
mov
or
jp
lret
push
test
test
divl
fldl
pop
jns
and
push
xchg
pop
sub
or
ret
and
jnp
into
dec
mov
clc
in
adc
sbbb
popa
insl
cmpsl
lods
ds
mov
push
add
and
mov
loopne
add
ficompl
xor
in
mov
out
push
nop
repz
dec
lret
stos
in
fmuls
xchg
shl
jmp
pop
pushl
stos
fmull
shr
dec
inc
xchg
ljmp
jmp
xchg
lods
xor
loop
xor
xchg
mov
fisttpl
pop
out
pop
pop
add
dec
add
orb
push
insl
loopne
push
jge
mov
mov
cmpsb
cwtl
out
and
gs
int3
es
jb
xchg
pop
bound
mov
add
bnd
adc
mov
ss
mov
ret
dec
add
cmp
pusha
or
pusha
add
xchg
ljmp
xchg
nop
sahf
scas
and
cmc
out
mov
inc
mov
repnz
push
and
iret
insb
cmp
lcall
clc
sti
adc
cmp
ret
mov
inc
push
ja
jae
ror
push
and
push
pop
mov
fimull
mov
sub
imul
push
push
sbb
int
lahf
xor
or
in
fnstcw
hlt
jno
mov
inc
daa
mov
push
sbb
cmpsl
xor
inc
lea
or
mov
add
push
iret
pop
pop
loopne
fiadds
out
mov
xor
scas
cmp
fisubs
cmp
mov
movsb
loopne
sub
jbe
hlt
mov
mov
or
mov
dec
cmp
jl
jl
movsb
mov
mov
adc
xor
sub
lahf
mov
test
mov
add
mov
mov
mov
sub
mov
push
and
js
add
cmp
nop
mov
loop
sahf
movsl
fistpl
movsb
rorb
push
and
mov
mov
mov
xor
sub
xchg
mov
push
sbb
add
aam
call
outsb
push
call
push
addb
push
jg
test
mov
push
loope
or
sub
mov
push
enter
sbb
and
notl
push
mov
jp
cmpsl
shl
in
mov
loope
sbb
aad
test
add
loop
and
cli
fs
sti
adc
sub
cmp
outsl
xchg
in
out
roll
shll
jmp
iret
and
sbb
cli
iret
mov
jb
xchg
push
loopne
loopne
add
pop
lock
adc
or
pop
adc
fnstcw
data16
or
cmp
call
xchg
cmp
sub
mov
mov
out
adcl
decb
aam
nop
in
testl
sbbb
arpl
repz
into
adc
xchg
adc
cwtl
pop
mov
jmp
pushf
lahf
push
push
das
or
sbb
aas
das
rolb
xor
mov
ss
leave
cmp
jecxz
jp
test
decb
mov
pusha
mov
xor
dec
and
mov
lock
pop
xchg
cltd
pushf
inc
out
xchg
lock
jnp
sub
mov
es
ret
std
mov
pop
dec
push
fdivl
cmpsl
scas
into
pusha
mov
in
xor
jl
ror
jne
sbb
lock
aad
js
pusha
pop
cwtl
test
shrb
addr16
sub
dec
ret
mov
cli
es
mov
clc
daa
movsl
mov
roll
ljmp
mov
test
xor
and
jl
insl
into
lar
xchg
test
xchg
push
push
movsl
jae
sub
mov
scas
inc
rcl
inc
out
in
pop
stos
cmp
stos
lret
les
dec
add
xchg
xor
add
out
or
dec
or
je
xor
call
out
leave
in
push
dec
push
aaa
push
pop
pop
dec
ja,pn
into
jl
hlt
jg
inc
das
popf
icebp
or
lock
fwait
pushf
test
cwtl
add
mov
outsl
mov
lret
jns
xchg
aad
test
ret
xchg
fimuls
or
in
fwait
pop
addr16
jp
ljmp
daa
fcom
mov
das
mov
in
jne
cmpsb
scas
pusha
incl
fistpll
gs
mov
mov
xchg
pop
sub
out
fnstenv
sub
push
push
enter
test
push
insb
movsb
mov
xor
fsubs
in
or
iret
add
ret
pop
pop
jg
fs
bound
je
in
mov
push
xlat
add
fcomi
xchg
mov
scas
subl
mov
push
arpl
cli
sarb
lcall
stos
and
arpl
incl
imul
out
inc
aaa
add
stos
or
enter
jp
int3
sbb
and
mov
fsubrp
ud2
lds
adc
cmp
and
ret
cs
cwtl
movsb
imul
jbe
xor
jge
dec
push
enter
daa
scas
int
cmp
scas
mov
in
pop
jl
sbb
jns
push
jge
out
xor
pop
sbb
push
xchg
arpl
test
outsb
sbb
cmpsb
adc
xchg
js
out
pop
loope
push
push
push
loope
pop
pop
sub
call
lea
add
add
dec
cmp
orb
xor
xor
mov
sbbb
into
sub
arpl
lcall
mov
jg
nop
sub
dec
sbb
adc
and
jg
divps
sbbb
and
loopne
int
sbb
fdiv
and
not
in
lret
add
mov
hlt
pusha
sbb
int
sub
and
in
outsl
icebp
outsl
outsl
sbb
cmp
outsb
fildll
adc
cmp
ss
adcl
rorb
mov
cli
push
pusha
fnsave
cmpsb
lahf
pop
cmp
pop
testb
jg
into
push
pop
inc
cmc
in
pop
loopne
enter
pop
xchg
adc
add
xchg
add
hlt
pop
lods
mov
and
dec
sub
mov
pop
jo
sti
loope
or
lods
insb
jmp
add
xlat
nop
shlb
inc
outsb
or
lcall
repz
sbb
test
fidivrl
xchg
clc
aaa
pop
push
insb
sub
imul
cmp
cli
cmp
aad
add
enter
pop
loop
jb
xchg
xchg
dec
inc
push
fwait
je
mov
jnp
stos
or
jae
inc
shrb
testb
lret
pop
dec
btr
pop
loope
pop
cmp
testl
add
sbb
mov
and
icebp
sarl
testb
daa
dec
or
movsl
cmpsl
scas
sub
sbb
mov
bound
in
mov
mov
mov
pop
mov
loope
sti
insb
or
ja
arpl
push
dec
sub
inc
hlt
pushf
es
inc
insl
rclb
sbb
xchg
add
pop
ljmp
mov
adc
cmc
mov
xchg
pop
ja
data16
imul
cltd
or
stos
test
test
push
push
lret
data16
popa
test
push
xchg
call
mov
pop
push
aad
stos
mov
mov
xchg
js
dec
add
gs
or
stos
jl
xchg
popf
sti
mov
int3
mov
dec
mov
nop
pop
shlb
ja
scas
xchg
dec
out
xor
mov
clc
fwait
lret
ss
ret
push
jecxz
out
pusha
cmpsb
mov
mov
dec
bound
inc
jns
cli
pop
in
add
xchg
sub
fwait
sbb
call
and
jp
add
adc
fs
mov
cmpb
leave
cld
cs
lcall
xchg
nop
jge
xchg
mov
xchg
addl
out
insb
add
mov
jo
sub
and
xchg
loope
cmp
jle
mov
mov
roll
faddl
ret
loopne
mov
mov
pop
jae
inc
outsl
push
cmpsl
inc
add
iret
rorl
push
rcll
xchg
adc
ret
sbb
cld
mov
xchg
add
stos
int
push
stos
push
sti
rcl
add
xchg
cwtl
loopne
jnp
jne
pop
call
hlt
inc
sub
pop
mov
mov
or
add
lods
add
in
int3
add
ljmp
mov
lds
push
scas
scas
testb
cmp
std
jl
notb
and
jno
or
js
push
mov
daa
scas
out
loopne
or
cmpb
popa
dec
dec
pushf
jnp
push
pusha
mov
xor
popa
jno
lahf
addr16
push
andl
cmp
cmpsb
xchg
sub
lds
js
pop
adcl
pushf
jae
lret
loope
ss
mov
cmp
pushf
sub
movsl
jmp
push
fimuls
pushf
scas
add
movsb
jae
add
add
ja
daa
pop
retw
inc
sub
jb
lcall
mov
sub
sub
inc
rcll
cmp
sarl
mov
pop
das
xchg
mov
push
jns
into
pop
adc
fsubrs
psraw
pusha
sub
adc
insb
mov
fsubrl
jecxz
xchg
sahf
xchg
mov
push
xor
mov
dec
in
loop
hlt
jbe
repnz
fs
jnp
adc
dec
ss
push
pop
cmp
gs
in
cli
cmp
xor
push
bnd
cmp
sub
addr16
mov
adc
push
nop
loop
adc
cltd
mov
dec
push
pop
data16
inc
mov
lahf
in
cmp
pop
xor
movl
in
les
cmp
mov
ror
push
or
and
xchg
cmp
pop
jns
rcr
or
jb
mov
xchg
mov
sbb
mov
mov
adc
adc
adc
dec
push
pushf
cmc
bnd
or
filds
inc
jecxz
pop
aas
cli
mov
dec
mov
and
lcall
jmp
jb
decb
mov
xchg
sbb
fisttpl
enter
arpl
pop
mov
sub
das
out
daa
mov
inc
inc
gs
cmp
dec
cmpsl
push
std
fadd
into
dec
add
into
cmpsl
lods
adc
mov
xchg
sbb
cld
rclb
lret
push
out
mov
mov
mov
jle
ror
cmpsb
in
sub
fwait
aam
jmp
push
es
outsl
insl
mov
mov
ljmp
sbb
jg
or
mov
insl
orb
lret
add
adc
test
pop
mov
shll
fs
in
cmp
push
fdivr
sbb
popa
repz
add
stos
test
push
adc
mov
movsl
or
xor
test
mov
iret
ljmp
lea
stos
dec
fidivrl
xchg
add
or
rclb
cs
add
jne
stos
out
mov
push
daa
in
dec
add
cmp
or
cmpsl
mov
out
jp
int
mov
mov
push
pop
dec
stos
ret
nop
mov
pusha
xor
add
xchg
arpl
xchg
xchg
icebp
cmp
jbe
pop
je
sub
int3
jg
push
scas
ja
stos
add
and
inc
or
jle
xchg
adc
push
pop
adc
or
inc
ret
jle
in
shll
js
dec
jae
fisubs
popf
arpl
push
aad
fisubl
push
xchg
imul
sbb
push
subl
outsb
dec
push
icebp
jne
shl
dec
mov
in
push
repnz
hlt
push
push
mov
int3
push
inc
xor
dec
or
pop
es
or
pop
fldl
arpl
int3
out
lods
iret
pop
out
pop
fisubrs
dec
outsl
lds
js
jo
sub
aad
lods
and
pop
jecxz
pushf
xor
jo
push
jbe
or
add
daa
lods
xchg
fnstcw
inc
in
mov
jl
jge
dec
or
push
inc
jno
xor
cld
cwtl
dec
lahf
in
jne
cmp
push
test
add
jl
xchg
fbld
lods
dec
lret
js
pop
js
pop
push
cmc
push
test
mov
mov
ds
arpl
movsl
lock
ds
stc
xor
subb
xchg
daa
xor
add
dec
cmp
pop
lea
sub
fidivs
pop
xchg
daa
cli
lcall
icebp
inc
inc
sub
in
adc
push
popf
jb
adc
mov
jo
dec
mov
mov
and
push
pop
int
push
adc
push
push
lret
jp
test
in
lret
sbb
jp
sahf
aaa
imull
test
cmp
xor
les
cmp
and
test
insb
lds
movsb
mov
insb
cmp
pusha
daa
add
cli
insb
div
xor
cmp
aad
or
push
into
sbb
std
cmc
jae
call
pop
dec
mov
imul
popa
fbld
add
lods
xchg
mov
ljmp
sub
lods
test
das
leave
aad
aas
bound
repz
dec
adc
nop
jbe
mov
inc
xchg
sbb
les
clc
repz
xchg
xchg
dec
les
notl
call
xchg
mov
mov
pop
xor
pushf
mov
lock
sarb
adc
incl
inc
jg
cltd
aas
xchg
jb
lock
dec
lea
jecxz
add
cmp
lea
stc
cwtl
mov
inc
sbb
cs
in
jge
pop
pop
xor
inc
jnp
add
cltd
bound
mov
test
sbb
pop
add
testb
lds
pushf
pop
cmpsl
lods
ja
mov
imul
lcall
int3
sahf
mov
aad
mov
cmc
outsl
ret
adc
sub
aam
fndisi(8087
ret
pop
stc
or
fimull
push
clc
fcomp
rcll
mov
popa
leave
and
ljmp
mov
je
mov
movaps
adc
pusha
cli
shll
pushf
jb
frstor
jns
xchg
push
aaa
sbb
inc
push
rorl
pop
stos
or
cwtl
jnp
out
js
adcl
pop
cmpsb
jmp
fbstp
add
mov
xor
add
mov
rclb
add
xchg
popa
ja
stc
scas
dec
int
jnp
hlt
insl
rorl
push
fwait
sub
jg
std
mov
and
out
pushf
icebp
clc
bound
mov
in
in
xchg
lret
test
mov
and
dec
add
dec
addr16
sti
jp
int3
jle
mov
lea
dec
clc
mov
pusha
shrb
mov
xchg
ss
inc
jmp
mov
lds
sub
pop
cmc
fstl
pmulhuw
scas
xchg
jnp
rorl
adc
insb
loop
and
mov
sbb
cmp
adcl
jae
rorb
sub
mov
inc
push
mov
xchg
ret
sbb
adc
scas
jno
aaa
push
cmp
rorb
pop
mov
cmp
cs
imul
arpl
xor
pop
into
fdivs
ds
push
or
mov
add
and
test
popa
xchg
push
lds
cmc
scas
mov
ljmp
or
into
push
mov
mov
add
cld
mov
daa
lods
mov
divb
sbb
jl
insl
nop
dec
jp
das
push
es
xor
xchg
aam
lahf
add
pop
push
or
test
iret
je
inc
test
fwait
push
add
jbe
xchg
sahf
mov
push
fadds
aam
cmp
int
cmp
insl
lea
cli
pop
push
pop
sub
add
sti
sbb
in
stc
add
mov
jecxz
std
movsb
cmp
mov
hlt
pop
adc
xor
mov
push
pop
faddl
movsl
scas
outsb
stos
jne
adc
jb
pop
jg
pop
into
mov
xlat
orl
adc
and
sub
push
aam
cld
int
int3
xlat
fsubs
lret
lock
sbb
icebp
test
fidivrl
xchg
test
pop
popf
xor
or
or
imul
pusha
ret
mov
adc
mov
mov
mov
into
out
jecxz
cli
lahf
dec
je
sub
lods
cmp
cli
mov
mov
or
decb
pusha
cmc
cmp
add
popf
mov
pop
insb
out
adc
and
push
imul
addb
stc
pop
data16
and
and
lea
lods
enter
dec
ds
lcall
push
data16
sbb
movsl
nop
push
movsb
cmp
rorb
nop
fnstcw
test
lahf
repz
sahf
xchg
push
test
sbbb
pop
outsb
jg
adc
inc
pushf
dec
fiadds
jmp
xor
and
jecxz
pop
int3
std
inc
sbb
popf
aas
cmp
bound
jmp
dec
movsl
inc
lods
je
xchg
xor
and
mov
rorb
je
xchg
mov
mov
add
inc
add
lods
or
cs
add
or
hlt
scas
lods
das
movsb
out
mov
scas
divl
pop
icebp
shll
cmp
into
fstps
sub
jp
cli
scas
push
cmpsl
stos
bound
mov
inc
aam
cld
sub
fmul
xor
loopne
pop
jns
mov
aas
lds
adc
clc
shlb
sub
aam
and
es
and
xchg
clc
clc
adc
jbe
jmp
sub
lods
push
mov
mov
decl
test
add
add
inc
adc
test
lret
cmpsb
loop
pop
hlt
mov
test
fsubrp
xchg
outsl
sbb
shlw
xchg
mov
xchg
out
fstpt
xchg
dec
pop
jg
add
push
cmp
or
mov
mov
aad
sahf
dec
in
jl
pop
add
xchg
dec
rol
inc
mov
insb
or
loopne
fwait
pop
jbe
push
lods
mov
sub
jnp
icebp
bound
cmp
jns
or
in
rol
xchg
sbb
push
mov
adc
mov
flds
or
cli
sbb
jg
mov
movsl
ss
in
or
dec
jo
daa
jne
pop
mov
imul
push
xchg
or
mov
jns
mov
xchg
and
sbb
inc
inc
mov
sub
cli
pop
and
pop
jg
push
sbb
jnp
xchg
jle
and
ja
mov
dec
push
ret
rcrb
stc
inc
mov
push
lock
mov
inc
testl
fcmovb
dec
jl
sbb
sbb
fstl
scas
aam
push
jg
pop
shlb
repnz
mov
leave
loopne
ljmp
mov
inc
ss
xchg
or
rorb
push
aaa
std
and
or
ret
scas
add
mov
pop
inc
jmp
fidivs
lds
dec
jo
sbb
scas
xchg
pop
or
sbb
ja
or
sbb
and
jbe
scas
pop
jge
dec
dec
notl
xlat
cmp
sbb
jl
xor
jmp
lret
out
jo
mov
xor
lahf
and
pop
push
ficomps
cwtl
test
lcall
cmpsb
push
xor
cmp
daa
bound
fldl
push
mov
out
mov
cmpl
xchg
imul
xchg
jmp
aad
cs
mov
scas
adc
add
add
outsl
dec
xor
pusha
or
adc
pop
xchg
push
lcallw
iret
mov
mov
outsb
or
lret
mov
dec
jno
add
sti
mov
lock
in
cli
and
jle
xlat
xchg
sub
pop
es
loopne
inc
test
jnp
rcl
js
mov
sub
sahf
jge
sbb
pop
fisubrs
jg
loop
xor
stc
pop
xor
fs
ss
je
cmp
push
pop
je
mov
cli
rcrb
add
jbe
jmp
in
into
loope
pop
cmc
add
test
daa
mov
repz
imul
popl
stc
aam
pop
loop
lods
push
pop
dec
cmp
mov
sub
cltd
sahf
mov
add
add
pop
and
dec
das
or
inc
mov
add
les
rorb
roll
clc
sbb
std
mov
xchg
pop
ja
and
adc
push
pushf
notb
inc
jmp
pop
cmp
xchg
pop
inc
xor
adc
xlat
lods
or
sbb
je
addl
lea
mov
addr16
pop
mov
lods
add
pop
xchg
add
sti
fcmovnu
stc
jp
icebp
in
inc
mov
sbb
dec
jle
mov
gs
fsubl
mov
jnp
shrl
pop
dec
cmc
push
jbe
stos
rorl
icebp
pop
out
cld
push
and
mov
sbb
rorl
mov
xor
rolb
add
aam
mov
inc
es
insw
outsb
je
clc
dec
bound
pop
push
out
popa
notl
lods
shr
mov
and
arpl
add
movntq
cltd
in
or
fistl
ljmp
cmp
push
ror
xchg
sbb
jo
sar
sbb
pop
add
mov
xchg
xchg
push
inc
add
inc
lcall
pop
sti
or
in
push
xor
mov
rolb
push
enter
push
imul
sbb
inc
and
add
dec
jbe
add
xchg
or
bound
add
in
adc
dec
mov
jne
mov
aam
andb
es
out
mov
rcrl
pop
scas
jns
push
inc
aas
jne
aas
mov
push
xchg
jle
sbb
push
jmp
push
shrl
inc
jl
out
inc
push
sub
jge
lret
int3
or
fldenv
insb
mov
sub
in
cmp
iret
fmulp
cld
ret
ret
pop
xchg
out
xchg
inc
cltd
pop
scas
jae
push
daa
push
mov
ljmp
aad
inc
push
cmp
push
sti
sbb
jnp
imul
scas
aaa
pop
or
movb
rolb
mov
fiadds
or
xor
arpl
popf
stos
or
fldenv
mov
test
int3
mov
push
pop
jae
ficoms
lret
int3
add
scas
jb
sti
and
lods
leave
movsb
and
fdivl
xor
enter
daa
stos
lcall
add
dec
jl
leave
decb
sub
inc
xor
int
addr16
inc
cmp
push
mov
sub
gs
loop
inc
fmulp
cmpsb
mov
sbb
pop
sbb
lods
push
push
sbb
add
sub
xor
mov
sahf
movsl
add
or
in
sub
add
xor
add
xchg
inc
xor
adc
adcl
sub
pop
adc
lcall
push
ret
adc
outsb
jo
icebp
adc
test
test
out
push
fs
push
pop
mov
sub
xor
ficoms
fiadds
adc
xchg
fcomps
mov
inc
shrl
mov
sub
test
int3
mov
outsl
lret
loop
add
into
jle
fs
sarl
out
pop
dec
mov
movsb
out
addl
push
pop
xor
sbb
cmp
rorl
les
cmc
enter
ror
mov
adc
out
and
mov
mov
data16
lods
cmp
push
fwait
loope
xlat
or
shrl
sbb
xchg
in
jo
js
dec
std
push
pop
rcrb
nop
pop
mov
dec
mov
jecxz
lods
add
les
pop
add
insb
cmp
adc
daa
pop
aam
inc
adc
inc
jmp
mov
mov
inc
dec
or
jb
jle
dec
xchg
movsl
les
jne
inc
out
xchg
mov
outsb
push
cwtl
ljmp
mov
dec
pop
xor
lret
jns
or
jge
adc
fwait
lock
xorl
lods
jle
ja
pop
mov
push
aad
notb
std
js
loope
lock
pop
cmpsl
test
pop
ret
icebp
out
sbb
out
lret
mov
mov
scas
mov
lcall
pop
push
pop
lahf
rcrb
xchg
sub
dec
fwait
dec
aam
lods
dec
ret
or
arpl
fdivrp
mov
xchg
cmp
ljmp
push
sub
pop
mov
inc
repnz
sahf
sbb
inc
mov
add
pop
pop
cltd
sbb
mov
pushf
xchg
push
in
jge
adc
gs
xchg
popf
sbb
xchg
rcll
adc
sbb
mov
mov
add
out
mov
xor
into
or
adc
mov
fistl
dec
mov
push
inc
ja
enter
and
inc
mov
push
iret
fwait
mov
add
repnz
xchg
out
cmp
mov
in
stos
mov
inc
dec
xchg
mov
iret
scas
pop
or
pop
add
mov
add
sub
mov
jne
mov
pusha
mov
jecxz
xchg
scas
rcrb
sbb
cmp
dec
sub
mov
lock
imul
jnp
cmp
outsb
sbbl
cmp
jne
inc
iret
cmp
out
pop
leave
inc
lahf
inc
movsb
jp
jae
mov
popf
incl
ljmp
dec
gs
rcrl
aad
repz
in
xor
scas
lcall
rcrb
inc
imul
into
add
hlt
jle
mov
inc
cmp
mov
sbb
data16
jnp
lods
or
stc
mov
mov
adc
mov
xor
lds
imul
loope
and
inc
cmp
mov
push
lods
mov
jbe
mov
enter
daa
test
aad
jno
xchg
adc
pop
dec
movl
or
push
mov
sub
xor
sub
lock
and
fucomip
dec
push
bound
inc
ss
pop
dec
jno
or
stc
sub
and
push
xlat
inc
push
movsl
or
rorb
lods
cmp
and
mov
mov
pop
or
ds
mov
inc
xor
pop
sub
sub
ret
push
pop
xchg
and
and
faddl
out
outsb
shl
std
adc
ret
or
xchg
mov
fcmove
mov
mov
mov
cmpsb
push
frstor
mov
push
lods
loopne
dec
je
lret
jg
add
js
jbe
pop
sbb
out
enter
sbb
addps
outsl
test
or
stc
test
fs
sub
loopne
pop
ss
push
cmp
dec
push
adc
mov
adc
cmp
xor
bound
or
mov
into
cmpsl
push
cmc
adc
aas
pop
leave
mov
scas
imul
add
pop
insl
gs
add
pop
mov
sub
push
scas
mov
fldt
sti
sti
mov
xchg
gs
adc
in
sbb
inc
loopne
pushf
ftst
cmpsb
test
test
cs
xchg
push
sbb
repz
jns
nop
and
jae
pop
pushf
dec
cmc
ljmp
imul
xor
inc
push
ret
aas
adc
adc
mov
jecxz
sbb
mov
or
mov
xchg
mov
rcrb
xchg
dec
xor
cmp
das
pop
or
push
inc
xchg
mov
lock
xchg
int
or
pushf
and
pop
mov
push
dec
sbb
std
pop
in
jb
jmp
insb
cmpsl
test
pop
mov
lds
cld
test
fcom
mov
aaa
test
mov
in
jno
lock
rcll
inc
xchg
lcall
xor
es
or
jle
clc
jp
arpl
inc
call
pop
lods
xchg
int
mov
push
pop
adc
jns
fisttpl
movsl
mov
lcall
mov
add
fnstsw
pop
test
xchg
rcrb
sbb
pop
pop
push
int
stos
push
daa
out
out
add
gs
and
add
cmpsl
fdivl
xorl
or
xor
shll
rcl
dec
and
push
pop
xor
xchg
ja
rcl
cltd
filds
push
jl
or
inc
jg
in
rcrl
xchg
mov
leave
mov
loope
out
sbb
mov
loop
in
xchg
or
mov
mov
lret
or
jp
rcll
mov
cmp
aas
jne
cmp
cmp
and
xchg
orb
xchg
call
inc
push
cmpsb
subl
xchg
mov
ljmp
and
test
insb
xchg
or
insl
jle
and
in
jno
adc
enter
push
ret
sbbl
out
inc
jae
out
cmp
cmp
popf
es
pop
push
push
mov
loopne
dec
xchg
push
jl
sbb
xor
imul
xor
push
push
in
shlb
mov
test
hlt
leave
mov
fsubrs
jp
aas
frstor
sbb
xor
xor
add
jmp
pop
shll
lods
ficomps
mov
dec
ljmp
int3
adc
cmp
fdivr
movsb
cmp
inc
push
sti
and
jge
imul
test
add
aas
shll
mov
push
jl
jbe
dec
ss
jecxz
mov
insl
xor
add
xchg
push
push
xchg
test
sti
das
stos
inc
bound
cmpsb
cmpsl
push
inc
in
das
outsl
xor
sub
push
sahf
jnp
xor
sub
ljmp
cli
sbb
cmp
data16
aam
fildl
out
mov
xor
dec
leave
pop
push
bound
pop
adc
lcall
fsubrl
lock
ss
insb
adc
ficomps
divb
ret
dec
xorl
enter
aam
push
mov
adc
testl
and
popa
mov
sbb
jne
sahf
ljmpw
repz
dec
outsl
mov
xchg
loop
inc
and
cmp
jne
cmp
mov
sub
sbb
xchg
stos
cli
imul
push
mov
into
mov
cmc
push
neg
loopne
pop
or
adc
imul
nop
add
xchg
push
lods
or
mov
adc
mov
add
mov
inc
and
jmp
gs
adc
dec
movsl
cmp
shl
fstps
out
mov
mov
adc
pusha
inc
cmp
sbb
outsb
imul
pop
cmp
add
lret
pushf
mull
cs
leave
mov
ja
icebp
inc
test
xchg
loopne
dec
adcl
mov
sbb
pusha
push
aam
scas
lcall
jl
into
fldt
cmp
xchg
rolb
ret
pusha
test
das
and
leave
mov
jle
cli
shll
scas
mov
dec
out
push
cmpsl
cmpsl
ss
mov
pushf
negl
aam
push
lret
in
push
in
mov
into
pop
mov
nop
popa
sub
rolb
cmp
or
loopne
ja
sub
es
sbb
call
notb
mov
jge
cmp
push
lods
add
mov
mov
push
push
test
add
aaa
add
inc
mov
xchg
divb
mov
mov
arpl
jb
lods
cmp
xchg
or
inc
cli
enter
sub
loope
inc
cld
fsubr
addr16
push
xchg
imul
xor
sbb
mov
loope
gs
mov
loope
out
dec
or
dec
mov
inc
out
sbb
movnti
cmp
add
xchg
orb
outsb
xchg
bound
bound
cmp
add
xlat
xchg
push
subl
lret
pop
hlt
mov
lds
cmp
test
repnz
inc
mov
test
push
xchg
dec
and
xlat
call
out
push
mov
jmp
mov
addb
and
leave
mov
sub
out
xor
jl
and
cmp
mov
jle
mov
in
mov
aam
sti
insb
fcmovb
jl
lcall
mov
xchg
push
cld
dec
sub
sub
loopne
iret
hlt
sti
ficoml
sub
dec
dec
in
imul
mov
push
fwait
adc
stc
mov
xlat
cltd
cli
leave
mov
mov
sbb
inc
sub
or
mov
jg
or
mov
dec
pop
add
lds
divb
ds
scas
btc
cmp
jmp
fs
dec
add
jbe
imul
int3
mov
cmp
shlb
test
jl
mov
dec
movsl
cld
xor
xor
sahf
sub
lds
sub
cmp
push
lock
loope
cmpsb
sub
out
push
mov
je
fldenv
out
push
jbe
inc
jo
sub
test
cmp
test
shld
inc
rolb
push
xor
andb
mov
and
lock
fmull
sbb
inc
in
sub
cs
cmp
lcall
adc
xlat
mov
sub
nop
adc
cwtl
insb
adc
stc
cmp
jne
dec
mov
mov
mov
xor
jecxz
bswap
mov
jp
test
imul
xor
mov
sbb
and
or
mov
arpl
push
xor
lcall
stos
scas
hlt
stc
repz
fs
repz
adc
push
ss
movsl
mov
inc
out
out
sar
cli
sahf
cltd
xor
pop
jle
cmp
and
or
mov
into
insl
dec
repnz
sbb
mov
pop
adc
popf
mov
adc
push
iret
add
adc
lods
lock
dec
cpuid
xlat
enter
in
loop
mov
mov
mov
pop
jl
inc
adc
cmpsl
nop
cwtl
loope
dec
stos
xor
sbb
push
fldln2
les
lcall
loope
aaa
call
mov
out
pop
in
pop
fcoml
and
jmp
fs
adc
inc
mov
mov
jb
loopne
dec
clc
cmpl
ret
popf
lea
sub
mov
lahf
pop
dec
addr16
xchg
push
negb
pusha
repz
movsl
xor
lock
jae
mov
inc
outsb
xchg
sbbl
icebp
or
std
insl
cmp
cmpsl
cmpsb
mov
mov
jae
aas
cld
jmp
pop
lret
pop
xchg
mov
sub
jmp
scas
pop
scas
push
rclb
jne
aam
jo
ret
mov
dec
arpl
sbb
cmp
add
sub
popa
push
jae
lods
insb
add
mov
sahf
jo
push
das
fsubs
add
test
cltd
shrb
mov
or
fisttpll
xchg
into
hlt
dec
sbb
cmp
rcll
loopne
lods
push
stos
xor
repnz
mov
ret
ss
sbb
xor
push
fimuls
imulb
xor
pop
and
xchg
sub
out
fnsave
pop
stos
lret
sub
dec
jg
int3
inc
jle
test
lods
dec
fwait
inc
xor
push
fcmovnu
or
daa
mov
mov
aaa
and
pusha
cwtl
cmc
pop
jge
iret
dec
xor
xchg
movsl
adc
mov
mov
mov
rolb
addr16
mov
jp
mov
mov
cwtl
jne
stos
push
mov
sbb
popf
dec
fistpll
aas
jne
ret
xchg
pusha
jb
out
fists
mov
xchg
jle
mov
lods
pop
into
sub
imul
mov
movsl
push
andb
nop
fldt
adc
daa
jle
ss
in
aaa
popa
adc
push
adc
pop
pushl
ret
sbb
or
inc
jae
lahf
ret
push
mov
test
push
dec
in
fiaddl
lret
xchg
int3
clc
mov
clc
cmp
imul
in
scas
ret
cmp
loop
popa
shrb
mov
sub
push
hlt
pop
or
xchg
mov
or
jns
jl
mov
nop
jb
test
int3
pop
into
dec
pop
das
sbb
fisubs
cs
jo
clc
cmp
cli
jmp
cmp
popa
mov
cltd
and
jbe
mov
mov
daa
cmpsb
xchg
cmp
cmp
jb
dec
adc
inc
push
js
enter
adc
cmp
xchg
lahf
mov
shrl
push
xchg
add
mov
std
in
jl
fdivrs
outsl
push
mov
outsl
sub
icebp
adc
mov
scas
jae
and
pop
rcrb
pop
xchg
fs
xorb
sbb
add
bound
xor
xlat
inc
pop
sahf
or
sub
pop
pop
push
mov
push
adcb
faddl
or
outsb
cld
loope
adc
adc
inc
jg
push
xchg
mov
and
and
sbb
push
out
inc
mov
xchg
loope
xchg
sub
shlb
sahf
lods
imull
ljmp
outsl
inc
sbb
loop
push
mov
fs
xor
ss
inc
cmp
cmp
repz
shrl
jecxz
xor
cmp
jne
push
xor
aas
ss
pop
es
adc
ljmp
in
roll
les
hlt
data16
std
adc
xchg
xlat
pop
jg
sub
mov
in
sbb
mov
or
gs
pop
repnz
jae
cs
or
outsl
inc
sbb
inc
and
xchg
mov
loop
call
or
mov
cltd
pushf
dec
adc
test
bnd
iret
aad
lock
mov
cmp
push
adc
dec
outsl
adc
jecxz
aaa
jne
sbb
cmpsl
sub
xchg
mov
dec
dec
push
movl
inc
sub
loop
push
sbb
jbe
ret
dec
or
xchg
xchg
mov
mulb
jecxz
adc
loope
faddl
cmpsl
movsl
mov
cs
dec
popa
sar
sub
lret
lret
cltd
mov
mov
in
arpl
into
ja
shlb
out
es
adc
jbe
movsl
ret
inc
jmp
dec
insl
icebp
cmp
clc
jne
and
fwait
nop
and
push
or
hlt
mov
movsl
nop
or
push
ret
add
stc
sub
test
mov
push
icebp
xorb
mov
shrl
or
shrl
ja
stos
and
or
xchg
notl
add
dec
dec
xor
cli
or
xchg
xor
rorl
test
xchg
add
dec
push
popf
mov
ja
mov
pop
inc
adc
pop
fwait
jb
add
jle
pushf
add
dec
add
out
mov
movsl
bound
jl
in
dec
sub
push
outsl
mov
mov
xchg
push
jp
jbe
mov
push
and
dec
ret
jne
popf
inc
pusha
or
add
jmp
dec
lods
mov
or
sbb
das
add
dec
mov
movsb
pop
jmp
stos
sbb
mov
jnp
xchg
mov
cli
scas
aam
inc
xor
adc
cmp
iret
mov
mov
pop
movsl
in
and
fs
pop
scas
push
addb
push
int
xor
xchg
and
fcomps
sti
aaa
imul
or
sub
mov
enter
rorl
leave
stos
mov
ljmp
and
or
xor
sub
or
clc
loope
inc
mov
pop
pop
cmp
fiadds
out
outsl
mov
jo
or
hlt
jno
push
icebp
sbb
fstps
push
call
and
call
loop
daa
movsl
dec
mov
fdivr
xlat
jno
adc
shrb
dec
addl
xor
aam
rcrb
lds
mov
outsb
pop
inc
pavgw
in
xlat
js
popa
popf
pop
push
mov
aad
lock
xor
or
sbb
movsl
sub
decl
inc
out
sbb
sub
xor
push
push
dec
je
lds
aam
lea
lcall
xchg
fsubrl
dec
adc
pop
jecxz
fwait
mov
subb
or
clc
xchg
mov
or
mov
les
mov
cmc
int3
and
xchg
mov
adc
inc
cwtl
testl
add
pusha
mov
sbb
in
pop
test
lret
sub
imul
popa
nop
xor
fadd
and
sbb
lds
repz
xchg
cmp
out
cltd
je
add
lock
cmpb
pushf
or
push
cs
stos
lock
fcmovb
jle
inc
int3
int3
adc
push
imul
mov
add
outsl
data16
in
mov
adc
xlat
inc
cmc
pop
sub
aas
mov
jp
xchg
mov
xor
or
mov
mov
nop
dec
mov
sub
sub
xchg
fld
fwait
dec
aad
pushf
repz
jbe
arpl
sub
fists
mov
mov
adc
je
pushf
clc
stos
push
jmp
add
aad
test
jns
xchg
push
ja
cmpsl
jp
dec
out
or
cmp
mov
leave
or
sbbl
xchg
movsl
js
push
or
mov
cld
lods
dec
cmp
xchg
push
pop
cwtl
iret
sbb
cmp
lock
adc
mov
in
adc
pop
cli
cltd
rorl
push
aam
mov
repz
movsb
aas
mov
and
push
pushf
fmul
cmp
mov
mov
adc
mov
in
mov
sub
inc
push
ret
lods
lds
repnz
repnz
fadds
clc
mov
add
push
xchg
lods
inc
sbbl
inc
icebp
mov
and
in
push
mov
imul
mov
test
test
push
mov
fstp
loop
test
aad
xchg
lahf
test
roll
rcrl
scas
stos
adc
xor
nop
stc
out
ds
mov
popa
xchg
xor
addr16
mov
test
mov
jl
ja
loope
xlat
cmovno
in
mov
ret
xor
fdivrp
out
xchg
push
test
sbb
out
in
mov
mov
push
mov
mov
jns
add
imul
fdivs
add
add
testb
jne
fcoml
aad
xchg
into
mov
jmp
sbbl
jg
xor
outsb
push
out
xor
or
cmp
mov
stos
in
lea
mov
xor
mov
adc
jb
inc
fisttpl
enter
inc
push
inc
into
fwait
popf
ret
push
dec
push
stos
fisubrl
and
dec
xchg
sub
in
inc
loop
mov
sbb
stos
out
jecxz
movsl
mov
rolb
add
cmc
arpl
mov
dec
int
or
out
fildl
aaa
outsb
mov
add
jo
pop
lea
fsubrp
orl
pop
test
popa
and
xor
movsb
fs
push
aaa
xor
jbe
mov
mov
aam
xlat
daa
movsb
xchg
ret
cmp
lret
or
mov
push
push
ds
xor
outsl
subl
mov
movl
sahf
dec
jmp
mov
pop
in
lret
cli
js,pt
fwait
inc
pop
xchg
in
push
movsb
shl
mov
adc
cmp
jns
xchg
cmp
sar
lahf
push
xchg
mov
pop
sub
insl
and
inc
pusha
xor
adc
adc
inc
cwtl
sub
pop
or
xchg
lcall
loopne
fcoms
popa
sub
dec
into
outsb
ret
adc
dec
pushf
jg
mov
mov
lcall
test
or
cmp
fs
xchg
std
test
testl
mov
sub
mov
aam
test
jg
xor
adc
outsl
add
mov
stc
sbb
jp
imul
ss
mov
xor
cmp
imul
or
xchg
or
jb
fwait
loopne
arpl
pop
fs
adc
rol
jp
in
loop
and
xor
lods
movsl
inc
test
std
jo
xlat
test
add
inc
cld
dec
mov
repnz
lahf
sti
data16
gs
shll
enter
aas
fisttpl
divl
loopne
jge
pushf
cmp
es
cmpsl
sbb
pop
jae
or
mov
es
mov
hlt
pusha
cs
or
inc
icebp
scas
nop
aas
xor
pop
jb
adc
gs
inc
xor
fwait
repz
int3
insl
fisttpl
dec
aaa
ret
je
mov
insb
cmpl
push
int3
pop
cmp
inc
cmp
cltd
lock
loope
das
pushf
pop
push
mov
frstors
mov
rcr
mov
std
bound
dec
rclb
sbb
movsb
mov
icebp
clc
pop
ret
xchg
jno
test
xor
mov
popf
xchg
mov
or
in
rorb
jecxz
or
push
ret
gs
es
xchg
sub
clc
jmp
push
xchg
mov
dec
ljmp
sbb
mov
mov
mov
sbb
jo
jg
cltd
gs
addb
insb
push
ja
pop
jecxz
test
fiaddl
dec
mov
not
pop
paddsb
fwait
stos
push
inc
out
repz
xchg
test
divl
xor
mov
or
or
pmaddwd
in
adc
enter
mov
ja
push
jns
pop
pop
adc
js
or
jg
fwait
ror
sub
les
add
add
imul
scas
test
jns
rorl
pusha
add
sub
push
or
ljmp
dec
je
mov
mov
dec
mov
out
push
jg
pusha
inc
sbb
fcomip
stos
and
xor
push
subl
mov
sub
sbb
push
push
and
std
dec
and
push
insb
test
fidivrs
mov
jle
jle
in
dec
into
adc
into
movsb
ret
out
adc
jae
movsl
jle
or
cmpsb
push
lret
into
pushf
ficompl
xor
stc
cli
xchg
imul
imul
out
mov
and
cmp
cwtl
insb
mov
arpl
sub
cs
stos
mov
aaa
cmc
sbb
dec
shrl
sbb
int3
out
mov
push
jo
lahf
xor
and
mov
out
popl
jbe
imul
iret
dec
sub
mov
dec
fdivs
das
dec
jl
and
dec
popa
push
xor
xor
or
lahf
sbb
cmpsb
push
jbe
in
pop
push
repnz
cmpsb
ss
and
mov
pop
aad
sub
daa
mov
mov
xor
ds
jbe
shrb
mov
subb
sbb
inc
dec
add
mov
xor
push
cltd
fmuls
jo
xlat
hlt
xchg
pop
mov
xchg
push
xchg
and
xorl
sub
adc
outsb
and
push
filds
inc
and
cwtl
pop
fmull
repz
test
inc
sub
out
mov
sub
mov
mov
lret
into
rorl
enter
inc
sahf
xchg
mov
test
push
xor
adc
outsl
jecxz
mov
imull
stc
iret
jns
repnz
adc
push
jle
xorb
xorb
push
mov
lea
popf
jo
into
stc
mov
mov
adc
add
adc
test
push
add
cld
data16
pop
lods
mov
sub
cmp
les
sub
loope
in
pop
xor
cmp
push
lret
pop
xor
nop
add
lret
lahf
cltd
inc
push
lahf
mov
cs
pop
jmp
fdivp
imul
sbb
aad
jo
mov
sahf
pop
mov
in
les
lods
pop
cs
in
loope
fiaddl
inc
or
jle
iret
add
dec
aam
and
out
lcall
inc
mov
lea
