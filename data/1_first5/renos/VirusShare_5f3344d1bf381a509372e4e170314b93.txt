incl
push
add
in
pop
lock
cmp
jns
sti
call
mov
xchg
lea
inc
cmp
jp
xchg
int
jge
mov
adc
dec
mov
mov
mov
mov
lea
mov
lea
inc
mov
dec
inc
cmp
mov
jnp
mov
data16
into
in
rcll
xor
idiv
jnp
in
mov
mov
int3
in
fcom
into
sbb
push
mov
dec
xchg
mov
cld
inc
mov
lea
inc
mov
out
mov
mov
mov
decb
pop
hlt
jne
mov
lea
inc
mov
jle
and
in
lcall
xchg
inc
sub
xchg
lock
cmp
jbe
dec
mov
out
out
mov
inc
inc
lea
dec
dec
cmp
push
inc
clc
jg
sti
mov
xchg
inc
dec
into
lock
mov
loopne
lock
push
pop
dec
mov
cmp
add
push
cmp
fdivrl
nop
jno
and
dec
dec
cmp
adc
daa
test
push
das
xor
pop
sbb
mov
mov
out
mov
aaa
mov
loop
clc
mov
mov
mov
mov
xchg
insl
call
test
mov
idivl
push
add
call
sub
pop
loopne
movb
xor
clc
dec
xchg
loop
fdivrl
jp
mov
or
lea
out
loop
inc
xchg
shrl
insb
nop
sbb
dec
loopne
xchg
jl
jg
clc
or
aaa
int
mov
cld
roll
push
pusha
cmp
push
or
cmpsl
mov
adc
mov
push
inc
mov
push
mov
add
adc
cmp
testb
push
sbb
xchg
cmp
mov
mov
dec
dec
mov
inc
psubq
cwtl
dec
jp
mov
cmp
push
pop
loop
ret
push
jl
fstps
hlt
mov
push
lock
pop
jecxz
cltd
mov
inc
inc
dec
cmp
sbb
pop
mov
mov
decl
std
mov
mov
inc
inc
inc
cmp
jbe
lock
in
std
add
pop
mov
sbb
ja
inc
pushl
jl
jb
cmp
sbb
push
sbb
mov
mov
jg
push
push
fstpt
sbb
dec
mov
and
mov
jmp
je
mov
cs
rorb
fcomip
pop
inc
pusha
dec
sbb
jmp
mov
push
call
pop
cmp
stc
int3
fmull
fcom
rcrb
xor
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
popf
pushf
pushf
or
cld
jb
jb
hlt
lock
leave
in
jbe
call
dec
leave
leave
leave
leave
push
movsb
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
shl
int
push
mov
add
inc
in
push
lods
lds
cmp
sbb
clc
pop
pop
pop
ret
aas
int
shr
mov
mov
fdiv
jg
incb
test
add
sbb
test
jb
jg
inc
mov
xor
add
rorb
cmp
or
xchg
scas
sbb
je
repnz
mov
and
xor
mov
pop
sti
fbstp
and
xor
jle
pop
aas
lock
lock
add
dec
cwtl
add
js
mov
sub
add
pop
out
fbstp
repz
jne
mov
mov
xlat
fidivrs
fisttpll
stc
adc
cld
out
mov
mov
add
add
cld
add
push
lock
mov
add
push
lea
lea
lock
jge
negl
or
adc
loope
lcall
add
sub
cmp
loop
clc
imull
imul
push
mov
pop
pop
cmc
sub
pop
sub
pop
sub
sbb
mov
add
scas
pop
push
aad
xchg
bound
adc
add
mov
std
addr16
in
push
sub
jae
in
mov
push
mov
xchg
and
fisttpll
scas
es
fcmovu
outsl
mov
shll
and
adc
adc
loop
and
jg
stos
jno
and
jle
in
mov
mov
enter
aas
jae
xchg
aad
push
jge
cs
and
scas
pop
je
fs
mov
mov
pop
outsb
pop
in
jle
addr16
in
shl
pop
ss
mov
xor
sub
sub
std
xlat
cmpsb
or
in
cmpsb
jg
lahf
std
cmpsl
and
pop
mov
lea
loop
mov
and
test
out
jle
loop
jecxz
orb
test
jl
fisttps
sub
dec
mov
pusha
lahf
and
aam
shll
stos
sbb
lcall
lret
mov
push
push
pop
sti
mov
add
int3
pop
and
sub
stc
xor
loop
cli
into
bound
pusha
loopne
sub
dec
mul
xor
push
xor
loop
aaa
imul
addb
sbb
add
dec
mov
fists
ss
jne
xor
aad
push
dec
imul
pop
es
lcall
mov
repnz
cmp
in
sbb
lods
movsb
iret
faddl
mov
dec
sub
sub
mov
bound
loope
shl
jl
and
popf
push
movsl
mov
adc
outsb
and
cmpsb
shrb
mov
out
push
mov
pop
push
scas
mov
sub
cs
sbb
xor
neg
outsb
jo
imul
lret
mov
jle
loop
in
mov
adc
lcall
cmp
push
jp
xor
cmp
data16
inc
and
dec
cmpsb
push
adc
or
mov
ret
jg
cmpsb
pushf
scas
and
sub
test
nop
jp
push
jne
hlt
loop
pop
mov
xchg
je
pushf
sub
sub
out
xchg
fsubrs
in
bound
stos
pop
pop
jns
jecxz
out
sub
in
pop
aad
or
mov
cmc
sbb
mov
adc
addb
mov
mov
jecxz
int3
mov
and
jecxz
xor
ds
imul
out
stos
and
dec
scas
sub
pop
inc
dec
cmpsb
inc
mov
cmpb
add
ret
lea
jg
xor
ret
sbb
divl
test
jne
push
daa
inc
iret
adcb
insl
clc
jmp
call
sahf
add
push
call
sar
rolb
or
push
clc
movzwl
dec
test
jecxz
in
jp
add
in
movl
or
mov
inc
ret
sbb
mov
fistpl
sti
add
cmp
jbe
inc
jmp
imul
pop
cmpl
je
pop
or
xchg
add
and
push
nop
and
cmp
jle
adc
nop
add
iret
insb
shll
inc
dec
rcll
add
and
sbb
or
sub
dec
jg
sti
in
jne
ret
dec
outsl
popa
fs
imul
stc
decl
outsb
push
push
outsb
insl
popa
jo
imul
ja
inc
imul
popa
insb
inc
insb
insb
outsl
arpl
push
icebp
out
push
pop
bound
mov
mov
ja
mov
or
notb
push
mov
pushf
mov
call
hlt
lods
add
lcall
xor
cmp
jp
inc
lea
lea
icebp
mov
andl
sbb
add
gs
ja
xchg
data16
xchg
lock
xor
jnp
xor
adc
xor
mov
dec
or
mov
lea
mov
sbb
lea
mov
jge
jg
pop
cmc
inc
mov
fdivp
dec
mov
mov
inc
cld
fistpll
bound
out
add
mov
inc
inc
inc
or
test
cld
sbb
sbb
push
inc
das
sbb
push
in
lea
push
dec
xchg
sbb
push
dec
mov
pop
push
in
inc
cli
mov
das
shlb
les
jbe
sbb
xor
xchg
mov
sar
or
insl
in
adc
jnp
lods
xor
fmulp
aaa
jl
inc
inc
xchg
ret
pop
jmp
or
xor
stos
shll
jo
mov
je
sbb
dec
dec
lea
mov
dec
pushw
push
loope
ret
incl
xor
mov
mov
jbe
cmpb
mov
mov
adc
rorb
adc
pop
or
cmp
push
hlt
push
cmc
inc
add
rolb
fs
xchg
shl
mov
in
call
sub
mov
and
subl
or
add
aam
rcl
aam
push
fadds
hlt
cmp
loopne
xor
shlb
add
shlb
cs
mov
xchg
add
mov
les
sbb
add
enter
sbb
adc
push
test
scas
rcrb
je
mov
mov
imulb
ja
lea
pop
fistps
pop
jae
out
or
stos
sbb
and
xchg
inc
dec
in
pop
cmc
sub
jp
cmp
dec
dec
cmp
fcoms
jl
js
dec
inc
mov
xchg
jae
cmpsb
push
scas
aad
outsb
js
cmpb
pop
ljmp
add
jecxz
outsb
aad
adc
insb
mov
mov
xor
push
push
daa
lock
jge
lock
std
push
mov
arpl
xor
mov
jo
inc
cmpsb
test
repnz
sbb
inc
in
mov
mov
sar
les
dec
mov
popf
inc
pop
js
rcl
mov
xchg
adc
sbb
fadds
pop
push
cld
cmp
jns
cld
mov
clc
mov
pop
shrl
cld
out
or
inc
lea
in
mov
cld
cmp
jbe
inc
lock
pop
mov
mov
dec
testl
sbb
bound
sbb
inc
adc
repnz
jb
mov
adc
push
jno
or
js
cmp
cmp
xor
sahf
ret
push
mov
push
inc
daa
dec
dec
inc
dec
and
add
or
xor
cmp
xor
iret
fnstenv
xor
push
xor
xor
aaa
xor
xor
cmp
aaa
add
lcall
push
into
gs
jb
arpl
fs
sub
icebp
gs
add
and
cmp
les
insb
pushl
dec
movaps
cld
sub
fsubrs
sub
push
add
add
int3
lahf
push
or
cmpl
mov
push
mov
inc
and
add
dec
jne
loop
pop
popa
clc
and
stos
dec
ja
mov
add
or
popf
mov
stos
adc
add
add
and
push
mov
mov
cmpsl
cld
les
sahf
or
dec
xor
sub
incl
jg
mov
mov
adc
testl
or
or
mov
iret
lods
add
and
enter
test
sub
lcall
xchg
out
rcll
inc
sub
xorb
xchg
arpl
loopne
cmp
add
cmp
test
pop
or
inc
mov
mov
daa
inc
mov
dec
movsb
cmp
and
or
daa
xchg
les
push
dec
and
daa
cld
inc
cld
push
or
hlt
add
mov
rorb
mov
cmp
and
pop
mov
adc
ret
ret
xchg
lock
aam
lock
inc
cld
inc
xor
adc
and
lock
jl
mov
test
inc
and
pop
and
and
and
and
sub
shrl
lock
lret
push
loopne
adc
inc
mov
dec
xor
lods
pop
add
fidivs
je
pop
fisubs
mov
cmp
and
fistps
decl
jne
add
push
cld
mov
popf
or
push
imul
add
adc
outsl
pop
call
shll
adc
rorl
xorl
addb
cmp
sbb
movsl
repnz
lods
in
and
orb
push
lock
fisubl
shr
ja,pt
push
and
test
mov
icebp
mov
and
xchg
lret
test
add
hlt
or
fadds
mov
cs
pushf
cwtl
hlt
add
mov
out
jge
leave
push
popf
aad
or
add
pop
add
enter
mov
add
add
cs
lahf
out
fs
insb
pop
add
gs
and
ss
stc
outsb
sbb
fs
add
jg
js
push
pop
popa
jb
jge
fs
jb
jl
imul
mov
ljmp
add
dec
popa
outsb
insb
dec
outsb
jl
jns
addr16
insb
fs
jae
jo
imul
dec
outsl
jp
imul
bound
dec
outsl
jnp
dec
and
scas
std
outsl
outsb
pop
jl
inc
addr16
inc
gs
outsb
add
rcl
push
pop
aas
mov
cmpsb
add
lds
mov
pop
ret
aaa
or
loopne
pop
lods
sub
xchg
inc
mov
xorb
add
push
lods
lock
dec
loopne
jno
push
adc
fnstsw
push
fdivl
push
add
pop
add
inc
mov
ret
push
ret
insb
or
push
movsl
and
mov
pop
sub
sbb
int3
mov
adc
pop
dec
testl
mov
hlt
add
call
pop
jno
jl
ds
sbb
or
add
or
pop
cmpl
jle
jne
mov
mov
jns
call
lods
jmp
je
cmp
shrl
pop
sbb
out
lods
push
sub
add
inc
imul
mov
paddw
aaa
js
dec
call
inc
roll
push
push
lods
or
or
jmp
ret
addr16
mov
outsb
icebp
adc
fdivrs
inc
adc
xor
jnp
pop
and
jmp
test
or
int3
mov
mov
push
mov
or
mov
and
loope
or
cmp
xor
cmp
addb
cmp
xor
cmp
xor
popa
jl
shrb
andb
into
inc
adc
incl
movsb
addb
adc
add
test
in
sbbl
popa
and
add
aaa
inc
xchg
add
movb
cmp
roll
shll
jne
jbe
cmp
push
je
xor
rcrb
mov
dec
or
clc
fnstenv
add
ds
lods
hlt
xor
adc
add
mov
subl
adc
add
sbbb
mov
test
popa
xchg
xor
subb
jbe
jl
or
cld
add
push
jg
add
jp
fs
add
cmp
iret
and
and
cmp
sub
hlt
dec
fisubs
push
ljmp
inc
and
adc
adc
sub
fdivrs
out
and
cs
push
decb
or
inc
add
shlb
cli
in
test
mov
call
nop
add
xchg
imul
adc
cmpw
ja
mov
jnp
test
jne
mov
cmp
repz
fmull
mov
add
or
jl
push
aaa
adc
popl
insb
cmp
mov
or
add
mov
bound
jo
in
sahf
in
inc
add
ret
and
nop
sbb
stc
push
sahf
xchg
je
loope
nop
fsubs
and
mov
mov
push
pop
pushf
or
mov
les
mov
add
cmp
cmp
xor
repnz
imul
inc
es
xor
xor
xor
lods
mov
data16
cmp
push
cmp
xor
xor
inc
pop
out
aas
clc
xchg
adc
xor
adc
fs
adc
sub
lds
outsl
inc
pop
add
mov
mov
inc
test
sbb
mov
icebp
orb
mov
push
ret
pop
loope
call
lds
pop
pusha
xchg
lcall
cld
pop
jns
pop
adc
sub
mov
push
icebp
push
sbb
inc
sub
adc
fildll
dec
dec
inc
mov
dec
mov
cmp
add
xchg
mov
push
ret
shlb
mov
dec
dec
into
jg
dec
inc
mov
in
daa
mov
mov
in
add
add
add
inc
dec
push
mov
ja
lds
pop
mov
ja
inc
fdiv
andl
out
cmp
sbb
mov
inc
out
dec
addb
push
inc
xchg
sub
lds
rorb
dec
xchg
repnz
sbb
sbb
into
in
dec
add
aam
mov
adc
orl
jp
xchg
xchg
in
mov
jmp
data16
dec
mov
out
js
jo
std
cmpsl
inc
dec
dec
mov
xor
mov
iret
clc
push
mov
mov
inc
inc
clc
mov
stos
cs
fdivrl
xor
je
sbb
lock
jge
pop
in
adc
ret
mov
lea
adc
pop
in
push
jae
dec
or
dec
cmp
jns
dec
or
xchg
cmp
pop
pushf
fdivr
jne
popa
inc
adc
ss
adc
adc
mov
push
aas
das
push
leave
shll
cmp
mov
dec
inc
inc
mov
in
jnp
mov
dec
push
cmp
jle
test
mov
les
ljmp
notl
xchg
push
dec
push
dec
dec
lea
and
cmp
je
push
mov
mov
add
push
std
call
pusha
clc
inc
cmp
push
subb
jae
mov
inc
adc
jge
and
mov
popl
cmp
xchg
hlt
adc
test
jge
mov
mov
mov
dec
mov
rorl
and
xchg
inc
mov
out
mov
bound
push
jge
ja
nop
call
cmp
clc
in
cmp
inc
mov
mov
inc
mov
es
mov
popa
or
dec
fmuls
ret
push
mov
jmp
daa
or
js
or
and
dec
popa
xor
jne
adc
sbb
std
and
adc
dec
test
add
icebp
xchg
and
add
sub
dec
cld
mov
push
inc
push
dec
or
int3
call
or
sub
add
cmpsb
add
testl
push
push
or
mov
push
cmp
lcall
div
adc
dec
jmp
or
in
mov
hlt
test
add
add
in
js
xor
pop
lock
pop
add
push
mov
rcrb
pop
insl
xchg
in
inc
inc
mov
inc
popa
mov
add
mov
rolb
enter
push
je
and
movsb
call
ljmp
add
mov
xchg
mov
mov
lea
cmp
pop
pop
outsl
adc
dec
pop
in
sbb
mov
aam
jl
insb
mov
dec
mov
icebp
aas
jb
lods
lock
sbb
mov
in
jle
mov
lahf
cmc
aas
in
stos
inc
cmp
or
ds
inc
mov
jge
call
lea
mov
push
mov
cmp
jnp
mov
xchg
sbb
mov
mov
xchg
cld
dec
int
stos
or
mov
mov
mov
lock
push
xor
addr16
inc
xchg
ja
pushl
xor
cmp
xor
cmp
xor
add
add
ljmp
xor
xor
xor
xor
aas
in
add
and
adc
pusha
out
push
lret
dec
dec
add
hlt
jg
cmp
popa
fdivrl
pop
add
add
inc
inc
cmp
inc
mov
add
arpl
stos
sbb
cmpsl
add
mov
jge
add
add
daa
jle
sti
insb
or
daa
fadds
add
lahf
or
daa
movsl
mov
adc
add
mov
and
add
sub
add
std
mov
or
cs
or
dec
add
push
jle
pop
add
push
add
or
add
inc
or
dec
add
mov
sbb
inc
pop
push
push
cs
or
push
lret
mov
dec
inc
sub
sub
add
lods
add
sub
xchg
fisttpl
adc
add
out
dec
std
ficompl
add
add
jnp
add
addl
into
cmp
push
sub
add
dec
or
out
addr16
pop
add
xor
stos
push
sub
imul
jge
ret
add
inc
mov
add
idivb
add
shll
inc
mov
lea
pop
xchg
add
es
adc
push
out
insl
pusha
push
or
es
mov
and
xor
ret
cmpsl
out
aad
or
sbb
jge
daa
or
inc
xor
jae
mov
pop
daa
xchg
xchg
cmp
and
addr16
aaa
dec
sbb
mov
xchg
xchg
ret
aas
andnps
fdivs
popf
sbb
sub
add
orl
jmp
imul
push
add
push
xor
mov
daa
shll
jge
pop
test
inc
or
dec
push
inc
and
stc
outsb
mov
fiaddl
dec
imul
pop
add
ja
inc
xor
jnp
add
jno
push
out
call
repz
push
imul
or
pop
bound
insl
insl
xor
arpl
popa
jecxz
loope
bound
and
sti
mov
or
pusha
jns
leave
stos
pusha
push
lods
inc
inc
add
push
pusha
jno
jecxz
sbb
push
and
pop
cmp
lods
mov
imul
sub
dec
and
add
into
add
mov
lods
arpl
add
fs
adc
test
scas
imul
xlat
and
rorl
out
stos
aas
jle
in
add
aaa
iret
aam
stc
adc
sahf
data16
in
jne
sub
fbld
aaa
call
mov
jno
lods
popa
ja
add
add
add
pop
cmp
stc
and
add
incb
jns
in
inc
lods
add
testl
out
xchg
xchg
jmp
push
scas
sub
mov
out
insl
out
lods
adc
xor
add
sti
sub
dec
xchg
sub
imul
sahf
dec
lahf
fs
nop
inc
jo
inc
lock
es
push
inc
out
inc
fidivrs
dec
incb
push
mov
sub
and
inc
lock
cmp
fbld
daa
sbb
cmp
dec
imul
into
ja
add
das
mov
int
es
sbb
bsr
or
mov
mov
pop
sbb
pop
sub
cmp
push
cmp
cmpl
cld
into
xorl
jae
jg
pop
mov
pop
jnp
mov
outsl
xchg
dec
inc
shll
test
mov
ret
xchg
test
shll
lods
add
jmp
dec
jnp
cwtl
rep
cmp
test
or
iret
ljmp
fisttps
loopne
adc
aas
fstpt
test
mov
push
outsl
shrb
aaa
outsb
pop
xor
imul
fwait
sbb
inc
push
adc
add
dec
arpl
mov
mov
jnp
cmp
sbb
mov
jge
mov
fld
lods
cmp
and
mov
pop
sbb
xor
outsl
dec
dec
scas
inc
sub
sub
js
lods
mov
addr16
aad
dec
pop
cmp
scas
enter
inc
popf
mov
scas
sbb
xchg
out
and
test
jbe
fucomi
imul
sbb
jae
mov
adc
lahf
iret
roll
cmp
movsb
sbb
fistps
or
rcr
shll
inc
repnz
or
addr16
and
add
sbb
cs
je
minps
sbb
scas
mov
and
pusha
popa
addr16
push
pop
mov
sbb
add
movsb
fldl
gs
int
ja
imul
mov
sbb
lret
roll
pop
shr
fistpl
and
aas
sub
mov
cmp
or
cltd
pop
push
sbb
or
mov
or
fildll
outsl
add
xchg
scas
cmpsl
jae
repnz
mov
mov
jg
adc
ret
inc
pop
add
out
jl
xchg
movq
in
fmuls
daa
pop
pushl
jno
dec
fldt
adc
call
or
mov
xor
mov
xor
loopne
sti
arpl
mov
shrl
dec
xchg
stos
jo
flds
lahf
mov
cmp
jns
out
cmp
add
and
notl
cli
idiv
outsl
inc
icebp
jo
fildl
into
icebp
xchg
inc
and
ret
cmovg
push
mov
fwait
sub
mov
scas
or
dec
push
imul
and
dec
cmp
inc
aaa
imul
adc
cmpsl
das
data16
loopne
imul
jno
jle
dec
or
mov
out
adc
mov
loope
add
fwait
es
and
in
lea
jmp
repz
fmull
ret
ja
scas
sub
std
pop
sarl
mov
sti
or
mov
mov
xchg
dec
or
adc
fstl
loope
xor
pop
jno
packuswb
sbb
mov
dec
ja
mov
or
mov
mov
sbbl
js
ret
push
cltd
sub
inc
pop
sub
insb
xchg
andl
loope
scas
cmp
xor
fwait
xchg
or
inc
mov
fidivl
dec
mov
xchg
jmp
inc
ret
je
lahf
mov
or
fdivl
repz
mov
decl
imul
insl
sti
daa
call
dec
adc
push
xchg
xlat
pop
iret
in
fisttps
lret
jb
mov
or
ljmp
jge
pop
jnp
inc
sbb
idivl
pop
pop
mov
fidivrl
mov
mov
adc
or
jecxz
inc
jmp
mov
sti
outsb
mov
test
sub
or
jnp
mov
add
adc
imul
or
xchg
mov
sbb
sub
xor
sahf
pop
test
mov
inc
mov
cmp
and
lret
xor
pop
push
sbb
push
add
sbb
mov
xchg
nop
sbb
repz
je
add
sub
inc
inc
mov
fcom
or
test
daa
outsb
push
add
jle
jnp
mov
jle
nop
sub
cmp
insb
rcll
pop
add
fldcw
add
ss
or
and
mov
inc
aaa
shrb
push
outsb
sub
fstps
imul
add
ja
dec
fsubs
and
ficomps
add
jae
and
cmp
std
hlt
in
push
or
add
sub
jle
das
or
mov
add
sub
mov
add
jl
sub
mull
cmc
repnz
mov
sub
or
mov
add
fdivs
mov
add
mov
ret
mov
shrb
ja
and
mov
movsb
mov
jne
jnp
push
int3
popa
jg
lods
rolb
in
jne
mov
outsb
xchg
xchg
push
or
cmovb
sbbl
xchg
loope
xor
js
nop
jns
push
dec
stos
push
enter
loope
pop
orl
jl
jb
enter
int3
imul
mov
lcall
int3
cmp
add
gs
cmp
push
sahf
add
dec
dec
fdivrs
mov
lret
fmuls
push
dec
xchg
push
daa
inc
mov
pop
ja
pop
add
lret
movsb
cmp
push
addb
mov
stos
ljmp
scas
bound
mov
adc
outsb
inc
sbb
cmpb
mov
loopne
push
cmpsl
addr16
inc
clc
shlb
inc
sbb
and
daa
lods
push
arpl
jbe
cmpb
add
add
or
adc
insl
clc
cmpsb
out
adc
add
inc
push
mov
sbb
sub
loope
icebp
imulb
and
mov
fadd
mov
pusha
sbb
scas
cmp
ja
adc
insl
popf
inc
ret
in
push
in
pop
sbb
pop
add
add
xor
mov
inc
cmp
mov
pop
cmp
popl
mov
push
test
sbb
jae
ljmp
repnz
daa
pop
mov
cmp
cmp
ja
and
scas
test
add
inc
jno
ljmp
push
fdivr
jo
mov
movsb
jecxz
cmp
je
lds
daa
jne
and
lea
or
mov
mov
pusha
out
movsl
sub
lods
stos
pop
pop
ficompl
adc
adc
inc
cmc
push
jge
xchg
out
lods
fs
xchg
mov
push
fdiv
popf
mov
xchg
incl
test
loopne
lahf
or
in
insb
cmpsb
aam
loope
inc
in
lock
jmp
push
adc
cmpsb
jg
sbb
stos
int3
jl
dec
outsl
movsb
loop
add
cmp
push
inc
iret
jb
sbb
inc
and
addr16
into
rorl
adc
sbb
lods
iret
fists
add
or
push
loopne
dec
int3
push
add
into
in
scas
adc
push
insl
cld
pop
aam
cmpsl
push
sub
adc
inc
push
fnstsw
lock
cmp
push
and
mov
push
les
xchg
mov
shll
and
xchg
roll
test
add
push
out
ja
outsl
mov
mul
mov
jmp
and
enter
subl
xlat
inc
xor
popf
ds
out
call
sub
gs
gs
add
outsl
fnstenv
ja
add
out
add
and
scas
roll
add
out
jmp
xor
test
add
cmpl
inc
pop
scas
add
or
outsl
push
mov
ds
leave
sub
insl
ja
inc
icebp
jge
lock
and
es
add
pop
adc
lcall
pop
jnp
jl
push
cwtl
and
mov
stos
mov
ja
sub
into
mul
mov
testl
dec
mov
jnp
add
cmp
iret
div
in
xchg
cmp
jbe
add
lahf
push
jp
add
std
pusha
movsl
jnp
iret
lret
mov
lock
std
lds
sbb
sub
sbb
js
xchg
and
lahf
faddl
and
jo
popf
inc
cwtl
jge
hlt
mov
pop
test
pop
fldt
lcall
sbb
sbb
add
push
fstpt
je
cmpsb
fildl
mov
sub
pop
shll
test
lods
clc
lret
imul
xchg
shrd
icebp
jecxz
sub
inc
cmc
xlat
pop
push
cmp
sub
push
mov
jae
mov
xchg
add
in
jmp
loop
daa
add
data16
mov
insb
nop
call
aaa
das
adc
idivl
jae
add
add
sarb
popa
ret
add
fwait
cs
mov
ds
jp
and
jnp
cmpsl
cmp
cmp
or
sahf
or
outsl
jmp
add
adc
adc
loope
adc
jnp
outsb
js
adc
jns
lds
push
mov
imul
and
jbe
outsb
call
jmp
sbb
pop
pop
fidivrl
sbb
pop
pop
out
shrb
mov
xchg
mov
or
fsts
bound
pusha
jmp
ror
dec
inc
inc
jns
jmp
jo
cmpsl
mov
add
or
jo
push
pushf
lea
je
addr16
dec
pop
mov
pop
xchg
call
fisubs
leave
pushf
mov
std
adc
sub
inc
imull
pop
jne
fildll
mov
jno
sub
pushf
mov
adc
pop
xor
mov
mov
jmp
in
jge
mov
jo
mov
pop
sti
xchg
mov
fisubrs
xor
adc
ja
sub
or
jecxz
movsb
sahf
mov
ljmp
cmpsb
lods
sub
lret
aam
icebp
or
mov
filds
push
testw
adc
sub
cmp
es
sub
popa
xchg
iret
fistpl
sbb
pusha
fiaddl
outsl
add
xor
jp
popf
cmp
imul
sbb
adc
cmp
jne
fnstenv
inc
cmp
movsl
dec
pop
jb
jmp
mov
push
jo
dec
jnp
sbb
addr16
pop
sub
jge
pop
sub
jnp
outsb
jbe
mov
jns
imul
stos
inc
es
cmp
inc
and
aad
mov
inc
out
inc
js
or
movsb
insl
add
clc
adcb
mov
lret
js
add
testl
dec
pop
inc
icebp
mov
xor
push
das
mov
or
and
sbb
push
cs
icebp
sub
outsb
and
and
inc
call
sbb
popf
adc
inc
mov
lahf
les
loopne
scas
pop
test
sbb
push
imul
ljmp
pop
les
add
xchg
mov
sub
push
or
push
add
mov
addr16
cltd
popa
mov
popf
jns
lahf
push
fs
push
leave
clc
rclb
clc
loope
or
adc
movhps
daa
movsl
ret
fsubrs
pushf
test
adc
jns
push
call
inc
and
testb
xor
xlat
push
xor
lods
outsl
shrb
sub
ljmp
xchg
sbbb
jmp
scas
xor
sub
add
add
xlat
sub
inc
cmp
shl
test
mov
cld
adc
mov
cmpsb
add
scas
pop
lods
out
sub
push
dec
out
dec
imul
sahf
add
xor
mov
adcb
mov
iret
push
lahf
dec
or
jno
push
lods
scas
mov
int
push
xchg
push
in
jbe
in
inc
jge
add
dec
jle
sub
lock
dec
in
adc
jmp
jg
xchg
push
lret
add
sub
in
test
add
insb
add
es
xor
mov
mov
add
inc
mov
add
ljmp
nop
call
addr16
push
lock
mov
sub
adc
testl
imul
cmpsl
inc
dec
add
or
ret
test
and
pop
cmp
aas
mov
in
adc
dec
or
sbb
xor
ror
iret
lods
inc
iret
xchg
dec
iret
inc
cmp
add
xsavec
mov
clc
xchg
arpl
ja
xor
sub
and
and
clc
push
fcmovne
dec
popf
rcrb
add
movsl
cmc
cltd
icebp
pop
adc
add
lcall
je
mov
mov
or
inc
jb
jecxz
jns
and
in
inc
push
aad
jg
dec
and
inc
js
fmull
add
je
jmp
dec
jle
in
ds
jge
cmpsb
jp
mov
lods
adc
jp
xchg
repz
lods
lds
and
das
mov
sbb
loopne
cmp
inc
inc
pop
cmp
sarl
cs
dec
sub
sbb
jecxz
iret
adc
pop
or
xchg
test
push
shll
idiv
dec
pop
sbb
push
push
iret
jnp
addr16
xor
push
add
cmpsl
pop
fimull
ja
test
add
jo
pop
cmp
insl
push
sbb
outsb
daa
aaa
ret
scas
daa
sub
mov
into
or
inc
lods
enter
cmp
inc
and
notb
std
dec
or
mov
cltd
mov
add
add
mov
xchg
cmpsb
les
sbb
decl
mov
mov
mov
inc
add
dec
or
in
movsb
add
inc
dec
data16
or
and
in
inc
adc
out
push
cli
sub
pushf
mov
add
mov
xor
dec
adc
shl
lret
lahf
cmp
rcll
out
lods
sbb
ja
out
pop
inc
nop
aam
in
adc
lock
add
sbb
sbb
mov
mov
mov
inc
fsubrs
pop
movsl
test
push
pop
call
mov
mov
pusha
and
jne
mov
mov
xchg
pop
mov
pop
add
mov
mov
je
dec
cmp
adc
mov
and
lds
cmpsl
xchg
fists
xor
sbb
push
in
mov
dec
fsubs
into
in
cmpb
pshufw
cmp
out
sbb
cmp
dec
bound
cltd
rcll
sub
mov
dec
ds
daa
jns
push
mov
or
xor
negl
push
jns
adc
jnp
ret
pop
js
push
sbb
mov
call
or
imul
push
sbb
pushf
lods
lock
out
loop
imull
or
cmpsb
jp
jae
insb
loopne
out
mov
cmp
pop
sbbl
push
clc
pop
add
mov
rclb
dec
rcll
xorl
mov
pop
loope
mov
lcall
loope
idiv
xor
lods
mov
cmpsb
mov
or
mov
in
out
xchg
push
out
ss
in
mov
sub
adc
or
mov
mov
loope
js
scas
and
push
push
mov
fidivl
inc
movsl
cmp
hlt
adc
or
clc
daa
adcl
cmp
dec
loop
and
push
sbb
std
dec
and
js
loopne
dec
fadds
sbb
popf
mov
cmp
lret
enter
and
in
xchg
and
cmp
int3
add
xchg
in
mov
inc
insb
jns
cli
dec
or
loope
sbb
cmp
xor
lock
int3
sub
rclb
jecxz
mov
mov
xor
sbbb
xor
pop
std
pop
fistpl
out
sbb
inc
xor
push
or
cmp
push
in
aad
adcb
popa
xor
add
call
jns
cmp
cmpsb
inc
jmp
lock
roll
gs
je
mov
scas
mov
shl
add
sahf
sub
shll
clc
icebp
stos
movl
push
jge,pt
mov
scas
cmp
les
popa
test
xchg
paddb
xchg
sahf
sbb
jle
out
mov
xor
fs
mov
dec
push
test
test
adc
xor
mov
icebp
or
mul
jg
jno
loope
lcall
rcl
jle
add
subb
outsb
and
clc
sbb
gs
rcrl
add
mov
mov
xor
adc
xor
mov
clc
mov
mov
pop
je
pop
lret
xchg
or
or
test
push
cmp
push
andb
cmp
jecxz
xchg
test
push
add
sub
movsl
cmp
jnp
cli
add
sub
mov
push
add
cltd
mov
pop
adc
pop
ss
cwtl
ja
or
pop
cmc
test
leave
xor
add
sub
dec
add
fistl
scas
cmp
nop
pop
ret
fs
and
push
sbbl
cmp
sbb
jo
test
bound
mov
adc
ja
or
adc
sub
lods
and
sub
mov
bound
mov
loop
pusha
filds
lods
mov
sbb
mov
sub
jp
jb
ja
inc
cmp
out
add
mov
addr16
mov
in
insb
je
lods
dec
fwait
cld
add
pop
sbb
stos
inc
ja
ret
or
adcb
jnp
enter
lds
push
pop
mov
inc
push
adc
ds
loop
cmp
scas
jp
movsl
cmpsl
cmp
inc
loopne
adc
test
arpl
das
mov
pop
daa
and
adc
outsb
add
push
mov
add
and
aas
clc
rorb
pop
lea
add
les
bound
push
fidivrs
or
popf
mov
push
es
nop
mov
jne
aas
pop
out
mov
movsb
sub
xlat
push
sbb
in
xchg
cmpsb
test
pop
insb
stc
xchg
rclb
cmpsb
and
jno
cmpsl
or
mov
jne
aam
loopne
loopne
xor
jmp
jle
add
add
lcall
loop
sub
mov
fidivrs
mov
pop
mov
test
aad
lds
adc
lret
scas
sub
ret
xchg
pop
sub
adc
adc
pop
inc
sbb
adc
popa
sarl
int
aaa
out
push
cmp
or
imul
cmp
jnp
adc
icebp
lods
sbb
inc
sub
stos
pop
cmpsl
scas
dec
xchg
dec
loopne
mov
ss
or
in
jl
adc
lods
and
pushf
pop
cmp
call
add
lods
jnp
mov
loopne
rol
jno
pop
sub
jl
cmp
push
je
xorl
sbb
push
outsb
inc
stos
pop
push
adc
cwtl
xchg
fdiv
rorl
xchg
push
and
mov
or
mov
dec
lods
jp
cmp
push
loope
xchg
mov
aas
inc
andb
or
fmul
jb
mov
sbb
bound
mov
inc
clc
add
xchg
cmpsl
bnd
mov
pop
or
clc
and
dec
cmp
or
outsl
loopne
imul
add
andb
add
dec
mov
or
imul
iret
shll
and
inc
mov
mov
or
jbe
in
inc
mov
test
sbb
cmp
scas
imul
repnz
or
rolb
movl
pop
scas
sbb
jbe
add
xchg
inc
ljmp
xor
cmp
sbb
jno
push
mov
or
ja
into
xchg
push
js
inc
or
rorb
mull
mov
rol
xchg
add
dec
mov
sbb
test
cmp
mov
add
daa
xlat
hlt
stos
pop
pop
lret
in
push
xchg
dec
daa
loope
cltd
movsb
add
imul
ds
ljmp
test
dec
imul
cmp
popf
ffree
imul
mov
xchg
mov
movsl
ret
sbb
ret
and
cmp
dec
mov
in
ret
and
jle
outsb
das
sbb
lods
arpl
add
out
inc
fwait
mov
sbb
stos
push
xor
addb
fidivrs
outsl
xchg
test
jmp
add
pop
imul
loopne
xor
out
jg
push
xor
arpl
xchg
in
pop
jne
and
jae
sbb
aas
xorb
push
push
push
push
call
or
pop
and
xlat
lcall
mov
inc
inc
shrl
add
cmp
sbb
cmpsl
cmp
shlb
pop
frstor
cmp
cs
push
lds
mov
dec
fsub
rcrl
movsl
mov
imul
gs
shlb
jle
jb
dec
adc
dec
and
or
mov
lss
mov
mov
pop
clc
popf
out
addr16
lock
test
insl
ret
sarb
pop
iret
add
mov
fidivrs
inc
movsl
pusha
hlt
add
bnd
mov
ljmp
bound
mov
aaa
add
pop
jge
popa
pop
lahf
sbb
xchg
adc
pop
add
add
popa
bound
data16
fdivl
nop
adc
xchg
dec
pop
jbe
lock
sbb
std
into
add
jecxz
fnstenv
inc
or
xor
iret
cwtl
testb
cmc
test
cmc
orl
adc
fcoms
iret
mov
xor
shrb
dec
inc
jno
insl
movl
mov
mov
ret
stos
rcrl
jno
movsl
xor
add
ss
lahf
jo
mov
sbb
mulb
adc
add
dec
push
jecxz
icebp
sbb
mov
fiaddl
sbb
addr16
xor
sub
pop
sbb
pop
ret
push
sbb
rcrl
nop
arpl
xchg
sahf
xchg
lods
or
mov
and
outsb
jg
adc
jge
pop
sbb
adc
mov
lcall
bound
mov
movsb
data16
scas
insb
mov
insl
sbb
sub
or
lds
ss
insl
dec
insb
lods
in
in
in
rcl
mov
jecxz
aam
pop
dec
js
sbb
pop
pop
mov
mov
jmp
push
sub
or
lods
into
xchg
mov
js
fidivrs
pop
fnsave
aam
iret
outsb
add
ret
js
jno
pop
jle
mov
repz
call
sbb
pop
sbb
mov
int
mov
jbe
sahf
mov
cmc
cwtl
testb
cmp
add
fcmovne
pop
cwtl
pusha
xchg
lock
push
adc
push
arpl
push
in
out
mov
xor
pop
inc
mov
ret
adc
stos
jle
in
xchg
orb
cmp
jae
ja
movsl
and
jmp
mov
fisttps
pop
sub
outsl
movsl
sbb
mov
mov
in
decl
icebp
xorl
mov
push
push
out
sbb
adc
iret
cmp
mov
adc
adc
add
out
and
mov
imul
fistps
cmpsl
in
push
clc
push
aad
add
xor
jl
add
cmc
hlt
dec
xchg
sub
ret
ret
fsubs
jnp
sub
push
sbb
es
shrl
sub
mov
cli
insl
mov
lret
and
outsl
es
push
cmpsl
inc
pop
aam
sbb
ljmp
inc
add
and
shl
push
mov
cmpl
arpl
cmpb
xor
push
or
cmp
jl
or
ret
arpl
idivl
jmp
xchg
iret
jmp
lods
jp
andb
outsb
and
ja
mov
dec
sbb
es
mov
outsb
loopne
in
shlb
mov
add
in
add
or
jg
sbbl
push
ficompl
add
fildl
pop
fisubl
lret
andb
mov
jo
push
add
pop
sti
sarl
and
je
cwtl
push
mov
inc
or
and
and
js
cwtl
and
shll
add
test
jp
out
addb
ret
pop
pop
add
or
mov
jge
bts
cmp
pop
and
out
adc
jb
push
cmc
mov
cmp
mov
dec
xchg
pop
sbb
mov
inc
lock
std
push
push
add
mov
repnz
stos
aaa
dec
dec
jne
inc
mov
inc
out
sub
and
ret
loopne
rorb
hlt
lock
or
inc
inc
loope
rclb
lock
dec
inc
sbb
jl
jecxz
imul
xor
lfs
das
mov
push
mov
xchg
pop
xchg
sub
push
out
xchg
cwtl
js
or
mov
subl
push
push
sub
add
call
sbb
inc
and
dec
cltd
push
mov
push
loope
jmp
inc
mov
ljmp
sub
push
rcrb
push
rcrl
sub
scas
xor
mov
dec
cwtl
sbb
inc
pop
mov
pop
xor
add
sbbl
repnz
orl
and
mov
aaa
daa
adc
pop
xchg
jnp
sbb
sbb
lcall
jle
es
or
push
mov
inc
pop
imul
xchg
gs
push
xorl
pop
pop
push
xor
jp
or
cs
or
dec
cmp
mov
rcll
out
xor
rclb
in
rorb
mov
push
push
fbld
out
sub
push
xor
fcmovbe
roll
sub
sub
ret
enter
frstpm(287
add
jo
adc
add
imul
test
inc
je
movsl
int3
pop
jg
jl
add
sti
push
and
push
wbinvd
push
icebp
enter
dec
add
loop
or
cmp
lods
sbb
inc
cwtl
jl
mov
pop
inc
and
jo
add
jno
mov
jp
mov
mov
jo
jne
ret
push
shl
jecxz
inc
sub
loope
pop
add
mov
call
mov
ret
les
cmp
xor
add
addb
push
xlat
cmpl
aas
repz
cmp
cmp
dec
das
push
test
ja
cmp
rolb
ja
aad
pop
cs
stos
into
daa
scas
push
mov
subb
data16
ljmp
inc
mov
out
lods
sub
xor
pop
push
in
push
scas
dec
pop
sbb
adc
loope
adc
inc
stos
inc
sarl
in
push
add
movsb
test
test
addb
xchg
scas
push
iret
or
pop
push
jp
pop
jmp
cmpb
in
jg
lods
and
sub
xor
push
mov
roll
mov
test
iret
sbbb
mov
xor
sbb
sub
shll
aaa
lods
jp
lock
roll
testl
mov
inc
ss
hlt
inc
out
cmp
stos
jae
push
xor
aas
sbb
or
loope
int3
pop
pushf
test
loopne
adc
push
and
inc
add
test
sub
mov
mov
fsubl
test
ficompl
adc
push
sbb
push
pop
fmuls
imul
add
lods
lea
jo
inc
cmp
inc
pop
push
lods
add
mov
jle
push
in
add
add
push
sub
sub
adc
rolb
adc
hlt
push
push
mov
mov
push
mov
xor
cmp
rolb
push
jmp
test
jne
or
enter
mov
stos
or
in
pop
iret
push
clc
sub
mov
xor
mov
shlb
scas
add
int3
and
pop
loope,pn
es
pop
xor
and
pop
dec
xor
cli
adc
rorl
es
mov
stc
jle
mov
and
xor
inc
or
add
or
pop
mov
out
push
inc
add
lds
mov
rclb
shrl
stos
addr16
push
push
jmp
push
outsl
xchg
xor
and
dec
jle
xchg
mov
fbld
xor
cli
xor
xchg
mov
outsb
popa
out
add
lods
xchg
sarb
pop
cmp
mov
test
cmp
in
movsb
push
pop
mov
cmp
cmp
push
cmpl
xchg
inc
fwait
add
jge
inc
in
gs
add
cmp
scas
daa
dec
test
outsb
xchg
and
add
pusha
push
xchg
popa
aad
or
in
sbb
arpl
push
mov
cmp
add
adc
sarl
pop
or
inc
cmpsb
cmp
pop
stos
adc
ret
xchg
mov
daa
push
aad
mov
cmpsl
stos
push
sbb
mov
and
ja
push
ret
aas
mov
and
adc
mov
das
cmp
loopne
mov
xor
pop
jns
adc
jge
jno
ror
sbb
imul
or
and
or
sbb
cmp
rorl
add
loope
fldt
rorl
les
push
sbb
movsl
sbb
dec
into
sbb
vpcomuq
mov
sbb
add
push
das
loopne
stos
sahf
rolb
pop
jmp
int
add
and
scas
sbb
mov
cmpb
arpl
shrb
jmp
or
push
repz
orl
sbb
inc
mov
cmc
data16
aad
mov
and
push
lret
push
fxch
insb
dec
mov
ffreep
jo
inc
scas
lret
arpl
jl
dec
and
jns
testb
dec
cmpsl
and
jl
movsb
pop
rcl
clc
push
imulb
daa
into
lahf
mov
addr16
jbe
test
cltd
arpl
int
sahf
aaa
mov
sbb
inc
add
inc
sub
cmp
pop
dec
imul
idiv
push
shr
xchg
insb
jnp
repnz
in
mov
xchg
and
sub
lods
insb
mov
das
sub
jle
add
cmp
sbb
je
test
cld
xor
leave
push
cmpb
pop
mov
xor
fsubrs
adc
js
cmp
js
cmp
movb
jo
popa
pop
pop
push
jmp
mov
scas
das
das
sarl
xchg
loope
out
daa
daa
cltd
cmpsl
out
insb
or
test
xchg
add
ret
add
xorb
xlat
aam
sbb
jle
addb
mov
stos
push
imul
daa
iret
cmp
sbb
jnp
fisttpll
call
lock
mov
jmp
add
push
ljmp
add
fsubl
jge
loopne
sbb
int
iret
scas
adc
andl
lock
movsb
shr
cmpsb
jmp
das
loopne
pop
sbb
mov
or
ss
stos
pop
xchg
adc
mov
lods
in
pop
or
jecxz
cmp
pop
sub
pop
cmp
iret
les
add
and
js
data16
xchg
push
push
sub
dec
xchg
inc
test
xor
jbe
test
inc
xchg
xchg
jbe
xor
out
xor
mov
push
lret
mov
hlt
movsb
sbb
mov
and
pinsrw
mov
lds
pop
jbe
arpl
push
push
aas
cmpsl
inc
or
iret
add
icebp
into
fldenv
cmp
int
ja
add
inc
sbb
sbbl
gs
sbb
inc
pop
js
lods
fimuls
mov
ret
lret
mov
ret
dec
lret
pop
js
mov
push
cld
scas
adc
xchg
sahf
jp
scas
mov
sub
lea
ds
adc
adc
subl
dec
movsl
mov
or
xchg
mov
lods
adc
daa
mov
cmpsb
notb
scas
loopne
sbb
xchg
and
in
je
cmp
cmp
mov
cmp
outsl
lock
adcl
mov
loop
push
xchg
bswap
loopne
sbb
ljmp
jns
lds
movsb
pop
test
rolb
pop
aad
lods
add
lods
dec
cltd
ds
lods
ja
push
xor
les
cmp
xlat
in
jo,pt
and
inc
mov
jnp
cmp
mov
add
adc
scas
push
mov
cmpsb
aam
xlat
arpl
fstp
mov
mov
rol
push
cmp
adc
adc
xor
add
outsl
and
jp
mov
or
push
lcall
xor
xchg
frndint
sub
cmp
scas
aaa
mov
rol
jne
push
push
add
pop
dec
push
in
pop
xor
dec
cmp
in
add
loope
cmp
push
cmp
aaa
loopne
rcrl
fucom
add
sbb
push
call
xchg
sbb
fidivrl
adc
repnz
stos
push
scas
cmpsl
test
mov
or
xlat
mov
cmp
jb
daa
popa
mov
daa
jne
jecxz
add
push
inc
cmpsl
inc
imul
cld
sub
enter
lds
pop
dec
and
xor
inc
fadds
outsl
ljmp
rorb
imul
cmp
ret
incb
in
adc
iret
jle
cmpsb
inc
and
sbb
sbb
mov
mov
xor
inc
push
sub
dec
sub
and
out
lods
dec
cwtl
xchg
cltd
add
and
fmull
sbb
push
test
pop
scas
aaa
jo
ret
hlt
inc
jae
jae
add
daa
inc
or
ret
dec
test
jecxz
xchg
and
pop
inc
add
pop
outsl
cmc
shlb
daa
stos
jns
inc
pop
and
add
mov
pop
push
addl
ja
insl
add
movsb
fxch
or
adc
pop
sub
pop
cmpsb
lret
cmp
xor
sbb
add
dec
push
xchg
ret
fadd
lods
pop
mov
stos
out
mov
sahf
hlt
fbstp
lret
cmpsb
or
lods
sub
inc
or
pop
fimull
ja
cmp
lods
stc
cmp
out
dec
push
cmp
pop
iret
bound
in
adcl
sbb
aaa
cmc
das
xor
dec
or
addb
jg
cmp
das
add
pop
ret
pop
testl
add
repz
shl
sbb
add
ret
jae
add
jl
cltd
dec
dec
dec
mov
jle
je
push
and
add
inc
push
and
mov
xchg
dec
xor
or
cmp
xor
lret
add
test
subb
fldl
enter
add
ret
mov
add
jl
movsb
add
loope
jnp
idiv
pop
mov
dec
repnz
sub
ss
xchg
cld
or
je
movsl
sbb
cmp
sub
sbb
jl
sbb
cli
ret
add
mov
mov
adc
inc
xchg
and
mov
push
mov
popa
cmp
adc
mov
lret
jle
xchg
pop
enter
sti
sub
mov
shlb
mov
inc
out
setg
popa
sbb
cmp
push
ffreep
jno
cmp
mov
lahf
cmpsl
fmul
inc
js
stos
or
sub
xor
outsl
das
lods
and
shlb
and
test
jle
and
xor
or
push
dec
jne
nop
dec
fs
sub
fmull
filds
shll
jo
ret
adc
stc
cmp
lret
cmc
pusha
lods
movsb
out
push
inc
ret
pop
sub
arpl
sub
pop
movl
mov
adc
aaa
push
out
and
cs
mov
or
cmp
and
imul
mov
iret
dec
mov
repz
mov
cvttps2pi
push
rcrl
xchg
jle
or
sub
add
lods
and
and
dec
adc
fs
aaa
movb
adc
clc
push
or
jne
xor
mov
dec
inc
das
test
xchg
jmp
shlb
in
pop
pop
mov
xor
jecxz
cmp
out
pop
add
add
js,pt
mov
stos
cmp
dec
test
shrl
int
sub
jle
inc
and
ds
scas
incl
mov
dec
out
cmc
shll
and
xchg
push
cmpb
push
inc
adc
sub
jecxz
adcl
cli
insb
jns
xlat
push
sbb
push
pop
sbb
stos
xchg
call
pop
test
add
pop
fdivs
add
adc
sub
idiv
adc
adc
jp
arpl
adc
or
out
dec
sub
jle
aas
push
xor
lods
mov
sub
and
lret
or
sbb
cmpsl
lods
pop
sbb
loop
pop
arpl
out
movsl
aas
inc
mov
or
mov
loope
and
pop
aam
sub
xchg
js
lahf
aas
imul
jecxz
sub
test
sahf
pop
out
jmp
pop
sub
mov
adcb
add
adc
add
push
filds
dec
xor
shll
mov
orb
jnp
xor
mov
das
ret
fmulp
clc
ds
add
loope
jp
jl
inc
pop
insb
adc
in
add
pop
mov
add
loopne
sbb
cmp
xchg
loopne
popa
stc
or
into
inc
sbb
inc
js
xchg
pop
notl
jecxz
rcr
jg
push
es
fs
outsb
popaw
mov
jns
add
push
fisubl
and
pop
out
xor
inc
lods
inc
mov
jmp
imul
popa
xor
pop
scas
icebp
movsb
xchg
pop
sbb
insl
or
jno
push
adc
mov
inc
fs
fnstcw
mov
rolb
outsl
inc
js
or
scas
adc
lock
or
sbb
mov
daa
pop
push
cmpsl
pop
nop
xor
xchg
shll
push
call
stos
je
fisttps
mov
push
inc
add
ret
pop
cli
mov
push
lret
sub
xchg
sbb
movsb
ret
jnp
or
or
orb
jo
xchg
cmp
test
adc
add
mov
inc
sub
cltd
mov
add
orl
dec
movsb
add
movsl
push
jo
push
ret
enter
cmpsl
or
xlat
jnp
daa
mov
jns
lods
jnp
jg
roll
je
lock
and
sub
lds
or
push
orb
ja
push
jnp
dec
mov
add
fsubl
test
lret
test
and
bound
jge
test
rcll
dec
loopne
and
pop
stos
sbb
sbb
test
push
dec
cmp
xchg
jne
cmp
stc
iret
addr16
lock
jns
test
dec
sub
lods
sub
inc
pop
mov
and
jp
lods
shrl
inc
fcoms
shl
xchg
shlb
rclb
push
jno
sub
inc
jmp
jecxz
add
jbe
push
rorl
or
and
fwait
xorl
roll
mov
dec
stos
pusha
inc
add
dec
cmp
xor
cli
pop
push
xorl
and
js
push
pop
hlt
into
nop
daa
mov
adc
and
gs
mov
jo
inc
xchg
lock
sbb
ds
xlat
into
inc
sub
cmp
push
xor
pop
inc
in
clc
clc
xor
cmp
push
xchg
inc
add
mov
call
popa
test
pop
xlat
loop
fwait
or
xor
lret
cmp
aaa
mov
mov
push
cmpsl
adc
ret
loop
mov
add
icebp
inc
popl
cmpsb
sub
retw
cmp
xor
push
clc
xchg
mov
cmp
stos
inc
or
sub
or
inc
mulb
xor
and
inc
xlat
pop
cmpsl
pop
pop
fwait
and
push
add
add
out
fdivrp
icebp
add
cld
movsl
js
adc
scas
mov
pusha
loop,pn
mov
mov
minps
es
clc
loopne
xchg
push
inc
outsl
orl
cwtl
clc
push
add
dec
xchg
push
rcrb
xor
nop
adc
jge
lock
inc
rorl
gs
jne
inc
dec
shlb
inc
pop
fsubl
mov
outsb
pushf
fcoms
je
loope
pop
sbb
aad
dec
pop
loope
sub
add
inc
lods
in
xor
loopne
push
iret
push
xchg
mov
fs
pop
popa
cmp
mov
jns
mov
cmpsl
add
loope,pt
imul
aam
jbe
push
jbe
and
and
imul
mov
lahf
or
ret
popf
insb
add
or
or
daa
jne
push
xchg
aaa
jno
arpl
repz
push
jl
lods
adc
adc
movsb
sbb
imul
or
xor
mov
test
test
or
bound
test
sub
add
fistps
or
ja
mov
adc
pushf
cmp
jo
es
test
jp
pop
cmpsl
sub
push
and
inc
bound
aaa
dec
shlb
repnz
sbb
sarb
int3
cmc
addr16
or
arpl
incb
lock
xchg
xchg
leave
scas
cld
xchg
aad
mov
pop
push
add
movsl
out
jle
cmc
aad
icebp
push
push
filds
cmpsl
mov
mov
and
aam
adc
movsl
fcoml
les
stos
ljmp
icebp
fwait
hlt
push
sub
pop
push
cmp
pop
jb
movsl
sub
cltd
inc
and
cltd
js
addl
mov
mov
and
out
or
or
dec
lcall
mov
jp
cmpsl
insb
pop
jecxz
or
xorl
leave
adc
rcl
loope
data16
sbb
scas
leave
cmpsl
add
js
sub
jno
dec
test
or
pop
jns
andb
inc
insb
mov
loopne
mov
lock
aam
js
movb
cmp
push
sbb
fldenv
adc
aaa
inc
xchg
mov
lock
scas
xchg
notl
cmp
repz
xchg
fbstp
fmull
shll
pop
cmp
or
sahf
mov
adc
mov
sub
adc
sbb
movsl
jno,pt
sbb
cmp
fcomps
rorl
test
mov
lods
and
jo
in
scas
ds
and
ljmp
jae
dec
mov
pop
push
sbb
cmp
sbb
jno
sbb
mov
push
ret
inc
add
inc
or
mov
aaa
adc
inc
cmp
dec
cli
lods
jmp
icebp
mov
pop
sub
loopne
es
ret
adc
daa
enter
pop
js
dec
add
cmp
ja
shlb
sub
or
mov
xor
stos
mov
cltd
scas
jo
mov
push
lods
jo
cmc
jb
pop
or
mov
flds
js
pop
xchg
push
cmpsl
fs
inc
sub
test
cmp
adc
mov
jp
pop
popa
aad
dec
stos
xchg
addr16
add
push
push
add
inc
rcrl
jno
add
mov
xor
shrb
aaa
mov
test
cmp
jo
aam
sub
std
cltd
and
iret
das
imul
and
sbb
jne
pusha
mov
sbb
mov
mov
roll
loopne
dec
pusha
pop
das
cs
dec
daa
inc
faddp
add
das
mov
mov
push
sbb
sbb
add
test
push
push
loop
andl
mov
xchg
fisubrl
push
push
out
movsb
inc
adcl
jno
movhps
out
sub
push
xor
fwait
rorb
roll
xchg
xor
cmc
mov
mov
cmpb
cmp
add
popf
xchg
push
mov
ret
sbb
in
sbb
movsl
mov
xor
sub
or
call
sbb
add
adc
js
imul
adc
cmc
push
jp
and
js
arpl
fsubl
sub
jae
out
fsubr
or
adc
insl
xstore-rng
cmpsl
add
loop
call
and
xlat
mov
sbb
add
pop
lahf
test
jnp
inc
jnp
jbe
mov
cmpl
cltd
lds
out
dec
pop
push
pop
pop
push
xchg
inc
fidivl
inc
aad
jo
push
arpl
in
sub
test
pop
ss
stos
aaa
outsl
sahf
push
mov
adcl
dec
rcrb
pop
push
ret
xor
and
fistl
jo
xor
xchg
lods
and
jl
call
ficomps
rolb
add
sub
and
pop
ja
cmpsl
mov
mov
and
xor
rorl
add
loopne
pop
outsl
xchg
das
jne
cmp
cmp
or
pop
push
adc
sbb
cmc
mull
test
xor
and
subb
popa
and
xor
dec
ret
test
adc
andb
and
push
dec
push
inc
xchg
sub
or
jo
sub
and
testb
sub
rclb
jmp
push
icebp
and
sbb
mov
add
jle
xchg
push
xchg
scas
ja
divl
ficomps
mov
in
outsb
and
dec
jecxz
xor
sbb
loopne
mov
lods
add
sub
fcoms
sub
xor
inc
xchg
cli
sbb
sub
jp
jae
pop
push
insb
mov
fistpl
xchg
pop
jb
popf
dec
mov
or
insb
lods
rcrl
push
mov
jle
adc
dec
jmp
leave
jp
inc
or
add
test
sub
clc
jo
pop
popf
push
filds
xor
push
adc
sub
push
inc
sbb
cmp
ss
lock
push
mov
insl
lea
bound
dec
pop
pop
jo
lret
rolb
xor
sar
mov
xor
add
cmp
daa
jo
scas
xchg
mov
inc
jge
dec
arpl
inc
rorl
test
inc
rolb
add
jns
ja
jle
cmp
aad
jle
popf
test
and
dec
or
cmp
mov
xchg
or
sahf
popa
inc
lods
ds
add
xchg
jo
jb
pop
lods
adc
inc
and
pop
lahf
mov
pop
jb
aad
je
sub
arpl
mov
dec
and
andl
sahf
movb
loop
sub
sti
xor
jbe
sbb
outsl
loope
xchg
mov
xor
out
je
das
test
das
cwtl
jp
aaa
jne
mov
sbb
xor
test
xchg
jo
lock
xchg
sbb
dec
shl
adc
add
pop
mov
or
les
scas
arpl
dec
rolb
sar
and
pop
add
jo
xchg
adc
mov
rorl
add
lcall
pop
lods
fidivrs
mov
xor
clc
imul
lods
scas
pop
movsl
jnp
add
loopw
mov
scas
inc
loopne
enter
pop
adc
pop
sub
vmulss
xchg
inc
pop
mov
add
mov
inc
inc
jnp
test
mov
test
mov
pusha
xlat
movsb
pop
insb
sbb
lods
add
and
sahf
xor
push
mov
and
loop
cwtl
xor
xchg
ret
mov
and
sbb
mov
mov
roll
and
repnz
pop
inc
pop
push
js
je
mov
loopne
vrcpss
es
mov
ljmp
jl
ss
mov
roll
xchg
push
scas
add
adc
aaa
push
or
push
inc
sbb
out
mov
mov
add
decb
enter
out
sbb
bound
jle
xlat
pop
mov
dec
ljmp
inc
jno
mov
loop
pop
and
loope
test
sbb
mov
push
and
jg
imul
cwtl
and
pusha
stos
jnp
xchg
outsb
in
test
clc
fmul
shlb
fldl
mov
jmp
dec
fldenv
add
clc
pushf
and
loopne
push
xor
rorl
enter
ljmp
insb
adc
xor
je
xchg
les
xor
es
pop
aam
push
call
rcl
jp
pop
mov
popa
jecxz
nop
pop
pop
jecxz
inc
ja
jne
cs
jb
add
pop
cmp
rorl
or
cmp
push
adcl
sub
mov
sub
add
out
pop
js
jns
pop
ret
fadd
push
cmp
xorl
sbb
rolb
or
test
xchg
push
inc
imul
push
std
test
arpl
je
jecxz
xor
push
jno
adc
jle
js
cmp
stos
test
test
in
sbb
and
adc
scas
cmp
dec
mov
jb
clc
mov
adc
sbb
add
adc
pusha
movsl
mov
adc
insb
xchg
repnz
add
mov
push
inc
in
bound
test
ds
repz
mov
daa
or
sbb
out
stc
inc
mov
pop
ret
lret
mov
cmp
repz
scas
out
push
xor
lret
dec
mov
in
sub
rclb
mov
xchg
and
mov
push
mov
arpl
or
push
movsl
imul
cmp
inc
mov
mov
sbb
je
sbb
mov
mov
adc
fwait
popa
mov
sub
sbb
sub
inc
adc
xchg
xchg
inc
sbb
outsb
mov
mov
nop
lods
aam
dec
flds
sbb
arpl
ficompl
stos
cmpsl
aas
mov
inc
arpl
sbb
mov
outsb
push
and
jnp
fmuls
fmuls
add
ja
or
pop
test
push
lahf
xchg
sbb
pop
or
sbb
je
cmp
xchg
sub
scas
ljmp
adc
adc
mov
cmp
mov
mov
sub
mov
mov
jmp
jecxz
aad
inc
out
insb
cmp
mov
subl
movsb
int
movsl
sbb
jmp
sarb
mov
stos
dec
push
jle
pop
je
dec
cmp
add
pushf
inc
outsl
or
fdivrs
outsb
pop
push
sahf
jnp
cmp
or
push
test
or
pop
out
dec
dec
jp
ret
iret
xlat
paddsw
pop
mov
fisubrl
stc
out
mov
into
add
sub
cmp
adc
pop
add
and
push
push
mov
insb
xor
shrl
imul
adc
addr16
scas
pop
inc
ret
mov
inc
adc
out
rclb
das
mov
aam
stos
outsb
adc
mov
add
fiadds
mov
cli
adc
cmp
inc
jbe
mov
ss
mov
jo
ja
cmp
or
add
mov
mov
push
add
pop
les
cmc
lock
pop
call
mov
mov
test
jb
pop
movsb
add
loopne
dec
jp
add
test
adc
sub
ret
fistpll
sub
jmp
pop
ds
aam
jecxz
xor
stos
jne
jae
inc
stos
out
adc
sbb
fmuls
int3
out
sbb
sbb
outsb
xor
sbb
js
sbb
cwtl
push
or
xor
sub
jmp
vpcomb
lret
mov
imul
mov
rolb
push
aaa
and
shl
pop
fidivl
jae
outsl
pop
jmp
out
sub
lods
rcll
cli
push
enterw
push
punpcklwd
adc
fs
test
cmp
ret
and
mov
pop
push
cmp
adc
out
pusha
jo
lock
in
faddp
push
loop
loope
pop
lods
jle
mov
jbe
ret
daa
or
in
and
ds
das
push
popf
or
xchg
mov
loope
xlat
sar
mov
ja
sahf
hlt
lods
pop
fstpt
in
hlt
subb
ja
or
adc
sbb
je
lods
push
shrb
add
push
rolb
sub
mov
mov
stos
add
movnti
sbbl
imul
lock
das
movsb
inc
lret
cmp
in
call
ja
fmull
lahf
jns
add
mov
lea
addr16
imul
push
mov
adcl
ret
shrb
sub
and
imul
in
int
push
add
fs
sub
push
adc
dec
push
sbb
xor
push
test
pop
mov
mov
or
xchg
mov
inc
subl
lret
mov
mov
stc
mov
xlat
ja
and
jecxz
adc
test
ds
lea
sub
insb
lea
sbb
mov
mov
push
sbb
mov
add
inc
fs
daa
mov
shll
mov
loop
or
cli
rolb
and
xorl
pop
xchg
cmpsb
pop
enter
push
rcrb
and
ret
cmp
push
add
mov
push
jmp
repnz
push
push
or
jb
push
loopne
shrb
sbb
pusha
mov
jne,pn
dec
dec
dec
rorl
cmpl
sbb
nop
cmc
lret
into
data16
add
jge
movsl
xor
aam
xchg
jb
pop
adc
adc
popf
mov
pusha
xchg
ss
ds
pop
rcr
int3
movsb
scas
xor
iret
in
insb
add
or
push
lods
push
inc
cs
xor
xchg
pop
hlt
bnd
lcall
mov
les
cmp
dec
insw
xchg
subl
xchg
popa
outsb
cmc
sbb
mov
cmpsb
add
xchg
mov
add
test
mov
adc
dec
adc
cmpsl
movsl
inc
mov
imul
loopne
in
push
dec
and
daa
cmpsl
sub
jo
iret
mov
pop
pushf
sbb
adc
addr16
mov
jp
mov
jns
paddb
mov
cmpsl
jmp
adc
loope
jbe
lock
mov
mov
popa
xor
movsb
ret
popf
xchg
jb
push
cmp
inc
insb
lods
add
mov
pop
push
sub
sub
loope
adc
push
scas
cmp
xchg
push
leave
sub
inc
add
enter
ja
dec
pop
loop
or
jle
mov
jns
and
movsb
sub
mov
xchg
ss
inc
dec
das
sbb
adc
sub
inc
push
aas
push
lea
push
and
push
add
inc
jmp
sbb
mov
sbb
je
test
sbb
pop
aad
iret
and
mov
xchg
dec
pop
dec
sar
cmp
cmp
and
sarl
xchg
inc
pop
push
addb
jno
in
add
mov
jge
pop
mov
xor
test
push
adc
cmp
mov
xchg
call
mov
aam
lcall
push
cmp
je
popf
and
enter
xchg
dec
loop
mov
add
cmp
jno
ret
roll
les
cmc
adc
add
push
sub
test
lret
dec
push
das
movsb
outsb
mov
sub
push
pop
push
popl
into
in
in
sub
jmp
inc
jo
cmp
out
xor
xchg
dec
and
jnp
dec
sarb
in
sbb
movsb
ret
mov
jae
push
push
fstpl
sub
daa
cmp
mov
imul
add
xor
fwait
cmc
cmp
mov
or
mov
repz
stos
rol
loope
push
pop
hlt
inc
add
imul
dec
fld
cmp
aad
jno
cwtl
test
sbb
and
jns
inc
mov
or
mov
aad
ficompl
into
jmp
dec
inc
rorb
sbb
sbb
stc
xor
sub
mov
cmp
inc
pop
or
aaa
add
fsub
das
add
ret
fistpl
xchg
cmp
add
test
push
mov
pop
addl
inc
jg
push
in
pop
mov
xor
add
test
sbb
or
and
adc
xchg
adc
aad
cmp
sbb
je
sbb
push
adcl
insl
test
sbb
cmp
and
enter
push
insb
fldenv
and
js
outsb
xchg
or
or
xor
push
movsb
inc
sbb
ds
iret
ret
aad
out
fadds
or
les
push
ret
insl
cmp
add
jmp
sbb
adc
popl
aas
out
lock
add
adc
cmpsl
mov
dec
mov
mov
lret
cmpsb
insl
lods
dec
add
test
sbb
inc
dec
pop
cmp
paddq
jg
dec
pop
test
sub
loope
cmp
mov
stos
fwait
adc
inc
mov
in
andl
jbe
iret
cmp
jle
aaa
or
mov
xor
mov
mov
je
sbb
rorl
and
push
or
xlat
sti
push
push
sbb
or
sub
std
and
sbb
jmp
adcl
cmp
fucom
fistps
pop
xor
scas
add
xchg
jae
mov
jnp
das
inc
fcomp
popf
sbb
add
ret
lods
sti
loope
sbb
mov
arpl
or
mov
mov
pusha
xor
leave
xchg
not
ret
add
lods
jnp
movsb
dec
add
sar
adc
xor
mov
sbb
xor
bound
loope
rclb
mov
movsl
es
loopne
adc
sbb
add
cmpsb
add
test
pop
je
fldl
inc
sbb
into
push
add
rcrl
test
out
repz
outsl
inc
add
add
les
enter
cmp
and
iret
cmpsb
pushf
popf
mov
add
gs
jno
xchg
sub
xchg
add
jbe
out
scas
pop
or
mov
sbb
std
push
cmp
sub
add
es
jl
lret
jne
and
add
and
ret
inc
orl
movsb
rol
daa
pop
ret
fiadds
loope
sarb
jl
popa
pop
inc
push
pop
jl
cmp
sbb
inc
and
add
lret
lods
fistps
pop
mov
clc
adc
dec
xchg
fiaddl
and
fs
mov
push
add
or
popa
movl
ss
repnz
lcall
push
and
cmp
cltd
sbb
notb
cmc
outsb
ret
push
cmp
dec
dec
push
mov
lret
subb
push
call
sub
cmp
sbb
addr16
insb
xor
xor
mov
mov
daa
shll
imul
push
in
dec
xor
lods
icebp
mov
sub
data16
arpl
pusha
fwait
lock
and
xor
mov
rclb
xchg
xchg
xor
stos
and
or
push
mov
movsb
andb
lret
cmpsl
shlb
cmp
scas
int
out
pop
cmp
int3
inc
repz
arpl
add
fwait
jmp
adc
or
shlb
mov
loope
arpl
push
fwait
xor
sub
adc
jle
xor
xor
xor
aas
cmp
mov
ret
sub
shrb
adc
jno
stos
fldl
cltd
inc
pop
push
imul
clc
adcl
into
faddl
je
or
fwait
es
xchg
or
jo
enter
mov
ficoml
add
mov
mov
inc
roll
shll
loopne
sbb
bound
loopne
dec
loopne
inc
das
xchg
out
inc
cmpsb
cmp
and
sbb
mov
inc
and
mov
xlat
js
je
or
sub
imul
mov
iret
jp
test
dec
sub
or
cmc
mov
test
lcall
jb
inc
sti
mov
adc
mov
and
xchg
mov
jg
lods
call
fldt
and
and
orb
in
popa
mov
mov
push
adc
xor
into
jp
inc
adc
divl
loope
fld
int
xchg
dec
in
or
mov
fadds
or
push
push
pop
jb
mov
nop
mov
dec
pop
loopne
iret
and
fcmovb
or
and
popf
in
arpl
sarl
shr
ljmp
inc
or
fcmovnbe
mov
fsubl
sub
xchg
unpcklps
add
push
cld
push
or
ljmp
cmp
lock
xor
push
pop
push
hlt
fcompl
sbb
mov
add
xor
pop
ret
xor
enter
iret
les
call
sahf
test
mov
out
iret
lock
daa
pop
lret
mov
loopne
test
mov
shll
es
loopne
dec
lods
add
push
test
add
mov
rorb
mov
mov
int3
adc
pop
adcb
sahf
rorb
pop
jl
mov
sub
pop
negb
sbb
outsl
test
add
jg
fisttpll
lcall
mov
cmp
xor
push
in
icebp
cs
inc
mov
xor
cmp
loopne
out
fldcw
cmp
lods
mov
and
push
das
cmp
mov
sbbl
rcll
test
fwait
push
aaa
jbe
aam
and
ret
scas
cmp
lret
seta
adc
xchg
decl
clc
mov
js
sbb
cmpsb
mov
mov
sarb
xchg
xorb
sahf
cmp
sbb
xor
in
lret
popf
pop
add
call
scas
dec
fisubl
xlat
sbb
mov
bound
add
test
ss
add
movsl
or
iret
lret
jb
adc
incl
fdivl
add
inc
and
orb
mov
sbb
pop
insb
mov
pop
shrb
enter
cmp
push
shlb
fcmovbe
or
dec
fldl
sbb
pop
sbb
lea
xchg
xlat
sbb
mov
addr16
sbbl
xor
add
lret
icebp
add
mov
sub
cmp
testb
inc
data16
mov
jne
repnz
and
adc
andl
cmp
out
leave
or
outsl
dec
add
add
sub
cmp
push
sub
xor
and
lods
int3
imul
movl
arpl
scas
scas
cmp
fcomp
mov
lock
aam
das
push
or
lods
add
or
push
aam
pop
push
pop
scas
sub
inc
cmp
lock
pop
push
xor
scas
xchg
inc
jle
test
stc
push
adc
adcb
enter
fnsave
add
shlb
add
xor
jo
xlat
jno
cmp
notl
repz
lret
inc
pop
pop
or
pop
inc
mov
adc
loope
js
sbb
movsl
push
add
push
mov
lret
mov
sbb
pop
dec
mull
pusha
aad
idiv
inc
jae
cmp
out
dec
ljmp
faddp
out
inc
or
or
cmpsl
or
jecxz
test
mov
hlt
rcrb
cmp
stos
repz
popa
lock
shlb
cmp
or
and
dec
ret
ud2
adc
ja
aam
add
xor
mov
mov
push
dec
mov
fisttpl
movsb
inc
xor
popa
je
loope
orl
lods
nop
sahf
xlat
jns
ficomps
pop
iret
hlt
add
je
or
and
xchg
movsb
sbb
add
xchg
fdiv
mov
cld
daa
insl
js
ss
lods
jp
or
clc
add
sbb
pop
and
or
pop
adc
paddsb
push
add
dec
sahf
sar
cmpsb
xchg
arpl
scas
xchg
fisttpll
and
or
notl
mov
xchg
sbb
sbb
jns
sbb
adc
pop
push
jae
dec
loope
jno
pop
mov
dec
mov
pop
stc
push
aam
adc
mov
push
mov
mov
negb
sub
mov
jmp
mov
adc
push
add
data16
jno
sbb
jno
jae
xchg
or
aaa
in
hlt
sbb
mov
jmp
neg
sbbl
mov
mov
add
push
pop
es
xor
ret
test
add
and
xchg
in
sub
ss
adc
andb
rcrb
mov
mov
ret
add
sbb
aam
movsb
movl
xor
push
jns
xchg
gs
or
loopne
ss
mov
and
sub
pop
enter
mov
lods
call
lods
addl
aaa
data16
push
mov
insl
mov
pmulhw
sbb
into
cli
jno
xchg
add
sub
int3
adcl
clc
add
or
sbb
mov
mov
mov
mov
cmp
sub
rorl
pop
mov
cs
nop
xor
fdivs
xchg
shlb
js
mov
sti
movsl
out
add
ja
out
cmp
clc
inc
push
add
orl
call
xor
sub
and
xchg
test
jo
pop
les
inc
or
fldcw
call
jle
xor
stos
push
ret
mov
xor
jecxz
iret
inc
cmp
jmp
inc
adc
test
jmp
mov
add
loopne
in
sub
imul
push
loopne
jo
loopne
sti
inc
mov
aad
inc
pop
es
dec
lods
sub
pop
inc
test
pop
xchg
mov
push
dec
daa
xchg
pop
push
add
xchg
mov
dec
xchg
js
or
xor
inc
lret
cmp
shrb
jae
loop
add
and
push
or
push
xor
sbb
fsubs
and
inc
enter
add
test
dec
add
inc
push
lods
decl
cmp
xor
repz
stc
test
adc
sbb
out
adcb
in
xchg
dec
cmp
outsl
xchg
icebp
jne
push
stos
sbb
cmp
add
add
fldenv
mov
mov
add
popf
stos
and
insl
dec
and
lcall
push
sbbb
push
sub
push
or
lret
pop
add
bound
ret
scas
push
add
and
stc
sbb
add
and
daa
add
sub
std
rclb
adc
mov
in
dec
xor
sbb
mov
cmp
sub
shrb
psubusb
sar
add
sub
add
fisttps
test
xorb
je
inc
xor
mov
fdivrl
mov
jbe
nop
lret
mov
jmp
jmp
and
js
aas
mov
push
push
jmp
push
mov
mov
add
ret
jl
loope,pn
insl
daa
int
inc
jnp
pop
ret
dec
fcom
inc
push
lahf
test
mov
fildll
inc
cmp
push
clc
data16
lret
and
fldl
test
jno
in
inc
hlt
leave
shrb
sub
or
push
mov
xchg
dec
mov
gs
adc
pop
pop
jno
lock
js,pt
jg
pop
xchg
fs
stos
add
pop
popa
and
xor
popa
lret
or
mov
add
mov
inc
shrb
lds
mov
lods
roll
add
aas
lods
add
ljmp
pop
add
push
loop
or
fldenv
add
push
adc
pop
pop
adc
xchg
int3
test
mov
fisttps
in
loope
xorb
xor
dec
loop
jno
add
dec
sub
push
add
or
fsubs
ficompl
orb
fsubrs
mov
lcall
and
mov
test
sub
sbb
push
inc
sbb
sbb
and
mov
shrb
mov
scas
sbb
cltd
out
daa
push
cmp
push
lea
hlt
xchg
xlat
sbb
mov
and
int3
push
outsb
jl
mov
sub
ret
test
orps
jmp
cs
jl
pop
bound
inc
jnp
cli
sub
push
xchg
sub
icebp
add
je
xor
iret
aad
rorl
jbe,pn
push
nop
add
push
and
cmp
sbb
je
jne
or
push
mov
sub
jge
cli
cmp
adc
adc
cmp
idiv
cmp
out
jbe
es
rcrb
cmp
mov
js
sbb
push
cmpb
repnz
cmp
add
mov
je
sbb
push
cld
sub
fwait
addr16
inc
push
inc
and
cmp
adc
jnp
clc
xor
mov
sahf
sbb
dec
sbb
mov
or
push
lock
add
add
mov
adc
test
mov
fildl
adc
sub
pushf
scas
mov
lods
xor
lcall
fimull
and
mov
ss
xor
add
cmp
adc
inc
stos
call
pushf
notb
push
pop
push
mov
imul
push
test
and
in
aad
loopne
setb
inc
stos
rclb
lcall
test
push
xor
add
pop
shll
orb
and
mov
in
outsb
lcall
iret
dec
pop
rcl
cli
lahf
test
pop
add
sub
inc
lret
popf
and
mov
jmp
adc
add
shll
js
push
jg
cmpsb
mov
xorl
out
and
adc
popa
pop
sahf
in
repnz
sbb
cmc
stos
xor
add
subb
mov
sti
and
repz
jo
sbb
xchg
repz
cmc
adc
fildl
out
ret
cmp
rcr
xchg
or
pop
pop
scas
insb
dec
out
or
ss
mov
jbe
xchg
pop
ret
insb
aam
sbbb
loopne
mov
fstps
arpl
mov
stos
je
push
xlat
call
cltd
loopne
fisubs
pop
fwait
pop
sbb
pushf
into
lcall
pop
dec
sub
popl
mov
out
jbe
xor
inc
scas
inc
add
add
add
jle
loope
movsl
jo
xor
scas
es
andl
inc
push
loop
cmpsl
jbe
in
jge
or
push
das
leave
mov
fadds
lods
out
or
jge
stos
repz
jecxz
std
jbe
mov
daa
pop
pop
xchg
pop
out
mov
push
xchg
sbb
pusha
gs
test
jbe
addl
aas
test
sub
pop
je
add
or
cmc
iret
xchg
xlat
sbb
and
sti
xor
ss
cmp
sbb
cmp
adc
push
aas
stos
and
push
push
adc
jo
push
xchg
jp
outsb
jns
or
and
pop
imul
scas
sbb
sahf
xor
lock
mov
xchg
test
loop
sub
pop
iret
inc
push
clc
or
jmp
add
or
leave
ret
add
sahf
cmp
pop
mov
dec
or
mov
add
enter
jmp
add
lods
fldcw
push
cmc
add
jo
into
xchg
and
fwait
es
cs
ret
cmp
out
cs
cmp
push
add
pop
test
bound
out
lahf
inc
mov
adc
push
mov
sub
or
push
fmuls
lds
push
mov
jns,pn
out
pop
mov
and
fwait
ret
push
data16
arpl
insb
add
bound
fsubl
arpl
cltd
push
hlt
pop
push
mov
jecxz
sbb
adc
xor
mov
arpl
dec
cmp
xor
jl
inc
add
pushf
mov
fdivrl
jo
imul
stc
shrb
pop
inc
dec
ret
pushf
and
jmp
fisubrs
inc
and
inc
and
cmp
mov
addl
jp
sub
test
xchg
xlat
repnz
add
sar
cmp
addb
mov
xlat
lock
rclb
pop
sub
and
enter
or
sbb
push
enter
adc
adc
add
mov
js
scas
rcll
xchg
push
sbb
mov
mov
and
fwait
sub
daa
lods
mov
insl
movsl
dec
mov
mov
push
sub
jge
lods
shl
sub
loope
imul
popf
inc
add
pop
rcrl
iret
rclb
lods
cmpsb
lahf
in
jg
jmp
push
add
mov
rolb
icebp
or
loope
and
scas
mov
aaa
lret
add
mov
imul
cmp
pop
xchg
jae
inc
xor
popa
fdivl
iret
rclb
out
or
jnp
inc
adc
sub
nop
add
iret
sbb
xchg
add
inc
testb
ja
pop
aaa
add
or
popf
enter
add
adc
loope
push
sbb
mov
add
imul
add
adcl
jecxz
je
cmp
out
lods
sub
pop
loopne
or
mov
orl
mov
mov
bound
shl
popf
and
jns
inc
xlat
ret
rep
xor
push
inc
cmp
fwait
outsl
clc
mov
pusha
mov
xchg
push
or
xchg
jbe
and
push
inc
ljmp
xchg
in
pop
lds
popa
sbb
mov
jmp
and
mov
aam
mov
push
sahf
jno
jg
test
loope
pop
cli
or
loop
sub
or
das
jmp
pop
push
cmp
dec
rolb
inc
test
sti
push
ljmp
or
shrb
mov
out
daa
jb
adc
shlb
push
sbbl
mov
rorb
sub
xchg
ret
sub
cmpsl
cmpsl
roll
pusha
enter
gs
fldt
adc
add
pushf
and
ret
mov
pusha
add
cmp
sub
arpl
sbb
jl
call
mov
leave
and
out
add
adc
clts
pop
filds
cwtl
or
scas
cmp
xchg
xchg
bound
iret
jb
mov
cli
sub
sub
and
push
and
fsubs
cmp
mov
or
dec
jp
repz
and
loope
pop
nop
mov
cli
add
loop
jmp
jns
xchg
dec
scas
adc
add
bound
or
loope
cmpl
add
add
sub
pop
lock
dec
insl
dec
std
pop
xchg
xor
scas
addr16
dec
lods
es
cli
pop
aad
lea
dec
gs
lsl
sub
repnz
pop
rcrb
arpl
pop
jle
lds
dec
push
xchg
push
mov
mov
inc
aas
and
sbb
cmp
inc
movsl
add
sub
scas
sbb
cltd
push
jecxz
mov
dec
dec
lahf
ljmp
dec
or
dec
and
rcrb
cmp
xor
pop
push
stos
jae
mov
dec
sub
lock
cs
sub
fs
scas
sbb
mov
gs
mov
push
roll
or
popaw
es
shll
sbb
cmp
addr16
inc
popa
mov
sbb
sbb
cmpsl
push
insl
add
mov
adc
fs
or
jno
inc
mov
or
sti
sub
mov
xor
aam
int3
mov
mov
add
push
or
push
pop
mov
daa
xorl
add
imul
inc
xchg
nop
dec
test
pop
es
mov
pushf
loopne
jns
pushf
in
xchg
ret
ficoms
popf
test
or
scas
mov
dec
adc
sub
lcall
xor
jecxz
sub
push
jl
jno
jmp
fmuls
dec
push
cmpsb
popa
xchg
mov
insl
fldcw
mov
jl
aad
int3
inc
or
add
sub
inc
pushf
xor
es
aam
jmp
imul
fisttpl
dec
subps
jne
inc
fisttpll
lret
jae
or
mov
loopne
mov
aad
and
cmp
incb
mov
pop
cmovbe
pusha
xor
xorb
or
testl
sbb
jmp
sbb
sub
sub
loope
out
shll
outsl
adc
dec
pop
lds
jns
adc
jns
daa
mov
and
xchg
and
mov
icebp
mov
cmp
add
xor
mov
cmp
test
imul
arpl
loopne
arpl
jno
lods
test
andl
ljmp
vaesdec
xor
dec
es
clc
push
mov
inc
movsb
shll
sbb
xor
adc
push
pop
and
xchg
aaa
xorl
das
push
xor
pop
je
push
sahf
fs
pop
call
push
add
xor
aaa
inc
outsl
pop
insb
bound
js
cmpsb
jbe
daa
add
cmc
or
mov
xchg
lret
add
sub
sub
adc
pop
mov
das
mov
es
inc
insl
test
or
or
mov
xor
sub
add
js
mov
iret
in
les
iret
sbb
test
mov
lahf
sub
out
bound
rorb
daa
mov
xchg
push
adc
adc
iret
and
and
xor
xlat
add
hlt
adc
imull
ljmp
mov
or
or
cmp
stos
mov
pop
pop
test
push
enter
mov
pop
add
lret
pushf
and
testb
add
pop
mov
es
imul
rcrb
xlat
pop
cmp
or
and
sub
add
imul
push
lds
inc
movsb
cmp
jbe
iret
inc
test
adcb
inc
dec
inc
loope
or
mov
adc
or
movl
and
xlat
inc
pop
stc
jne
stc
cmpsl
lock
outsl
iret
enter
add
push
xchg
test
adc
cmpsl
adc
roll
dec
popa
pop
fstpt
dec
jo
cmp
sarl
mov
xchg
dec
add
pop
push
and
movsb
sar
adc
xchg
mov
push
in
pop
mov
ja
sbb
push
test
or
mulb
cld
or
sbb
pop
ret
rcrb
mov
test
cmpsl
xchg
je
jbe
sub
loopne
js
or
lods
cmpsl
aam
leave
pop
movsb
mov
ss
mov
mov
aam
dec
es
and
jg
lret
pop
aaa
or
mov
jmp
adc
test
adc
das
or
sbb
add
mov
into
movhps
add
clc
ss
inc
sub
xchg
rcrb
jmp
ss
add
push
les
mov
stc
fwait
push
xchg
loope
lock
fadds
nop
jns
aam
popa
imul
dec
adc
popa
cmpsb
xchg
mov
lds
jge
jbe
pop
and
test
sbb
mov
mov
ds
dec
rol
mov
mov
adc
cmovl
adc
push
in
jl
pop
or
adc
cmp
lock
icebp
jnp
mov
dec
movsl
dec
paddd
xor
and
pusha
and
pop
bound
xchg
push
xchg
cmp
jge
jecxz
dec
outsl
dec
gs
xchg
add
incl
push
mov
adc
roll
sbb
imul
test
out
fisubrl
and
adc
test
das
add
out
add
cmpsl
push
into
call
dec
fcoms
mov
cmp
test
add
rclb
or
xor
rorl
dec
xchg
enter
fs
or
std
cmpsl
jecxz
pop
inc
rclb
ss
ret
add
mov
pop
or
add
loopne
mov
imul
jecxz
lds
iret
pop
scas
add
xorl
dec
xor
mov
out
rcrb
sbb
scas
push
add
sub
sbbl
mov
iret
mov
iret
lods
stos
loope
pop
fldcw
cmc
and
cmp
and
jg
fsubs
js
ja,pt
sbb
xor
add
dec
pop
push
cltd
stos
test
pop
fisubrs
outsb
mov
dec
inc
pop
inc
sub
pop
pop
rcll
popl
inc
or
dec
inc
mov
bnd
and
xchg
dec
cmp
or
inc
pop
mov
push
pop
add
shl
dec
mov
jle
daa
int
jnp
cmp
xor
mov
fwait
xchg
inc
aad
cs
ret
rolb
adc
add
sbb
mov
inc
cli
cmp
incl
orb
js
sbb
sub
xor
lret
pop
push
mov
cmp
add
test
sbb
xchg
ret
ss
and
push
sbb
push
out
sbb
bound
aaa
repz
jg
cmc
dec
gs
xchg
int3
shlb
mov
mul
inc
jb
out
pushl
mov
out
ss
loopne
sbb
aam
add
xchg
and
ss
mov
jbe
shll
and
test
and
cltd
add
out
inc
bound
icebp
rorl
xor
jbe
das
dec
mov
repz
out
aaa
mov
add
test
sbb
adc
adc
fildl
lods
sarb
mov
push
add
out
fisubrl
mov
sub
ror
sub
out
add
fldl
mov
and
pop
dec
dec
xor
jbe
xor
aaa
adc
jo
subb
inc
push
xchg
dec
sub
std
shr
inc
rolb
loop
sub
pop
or
sub
mov
cmpsb
addl
mov
add
arpl
xlat
lds
aam
inc
push
dec
xor
adc
mov
into
jp
add
loopne
push
sub
pop
scas
xchg
scas
add
scas
xor
push
push
dec
fildl
cmpsb
xor
xor
add
out
push
xor
pushf
pop
dec
iret
fiadds
addr16
add
sub
or
aas
popl
add
jbe
aaa
mov
jae
fidivrl
pminsw
ret
cli
ja
xor
xor
xor
or
iret
shlb
scas
jl
jo
cld
outsb
popa
add
inc
cmc
jo
push
adc
shll
cmp
and
pushf
sbb
arpl
mov
daa
xlat
fsubs
sbb
inc
xor
xchg
mov
cmp
cs
xor
mov
ror
adc
mov
imull
adc
jns
aas
add
cwtl
ret
mov
mov
xor
cmp
aam
jmp
incl
fwait
lcall
push
cltd
add
pushf
pusha
out
xor
movsl
call
stos
lods
test
stc
lock
sbb
add
mov
nop
jo
imul
cltd
pop
stos
ja
dec
lcall
popf
adc
cmp
int
les
out
jns
daa
aam
mov
fadds
test
sub
sbb
inc
lods
cmp
mov
inc
xchg
es
shrb
push
add
mov
add
jno
clc
nop
test
add
lds
repz
and
ret
cmp
jb
cmp
push
push
add
js
es
push
addl
xlat
outsl
sub
bound
sbb
pusha
sub
loop
add
sbb
dec
stos
out
sub
rcl
xor
addl
loope
mov
js
jae
hlt
sti
test
push
iret
ret
pop
or
popa
mov
or
add
mov
sub
cmp
mov
push
ret
in
mov
lock
data16
push
sbb
jmp
movlps
cmp
adc
adc
mov
ljmp
pop
pop
loopne
jl
push
sub
mov
push
test
push
jecxz
loopne
cmp
xor
js
rolb
jle
inc
push
add
dec
push
mov
mov
mov
cmpb
iret
daa
xchg
pusha
cwtl
mov
loop
pop
push
test
and
cmpsb
into
test
add
scas
daa
sub
ds
mov
sahf
mov
mov
mov
ds
inc
sub
clc
jo
scas
stc
iret
lret
inc
sub
push
inc
and
pop
xor
add
je
ds
imul
pop
test
rcrb
lret
incl
mov
fisubrs
mov
pop
adc
xchg
or
and
or
sbb
mov
or
movsl
xor
in
add
inc
test
xchg
pop
push
imul
jecxz
jne
pop
nop
add
mov
aam
add
loop
mov
test
add
fs
jns
dec
and
jmp
adcl
mov
lret
push
mov
xor
cli
mov
loopne
icebp
add
xor
pop
pushf
xchg
inc
push
sbb
int
push
mov
push
xor
shll
add
insl
in
pop
inc
pusha
orl
dec
mov
sbb
rorl
xor
dec
lods
cmp
in
ja
imul
js
xor
call
inc
cs
lods
fstpt
sub
sub
jle
orl
test
ljmp
filds
pop
subl
jmp
das
test
or
xchg
and
adc
and
and
mov
outsb
mov
cmc
popa
cmp
aam
int3
sub
aaa
int
call
xlat
addl
and
mov
adc
pop
int
mov
and
das
ret
mov
pop
shlb
add
jbe
push
mov
inc
mov
test
mov
mov
das
push
and
add
ja
adc
rcr
dec
push
push
lods
inc
mov
sbb
roll
stos
stos
jg
and
movsl
aad
push
push
ja
call
test
jbe
xor
xchg
inc
adc
loope
cli
cmp
jo
push
xchg
mov
rcll
adc
arpl
xor
push
into
jb
mov
mov
sbb
push
mov
leave
sub
push
cmp
push
xchg
rcrl
pop
jecxz
mov
scas
nop
cmp
cmpsl
jg
xchg
adcl
sbb
adc
pop
and
leave
xlat
or
add
bound
fisttps
les
sbb
or
lahf
flds
mov
test
aad
cmp
daa
imul
movsb
xor
fadd
outsb
pusha
mov
bound
ja
stc
push
sbb
mov
lock
in
and
mov
into
and
add
addb
cmpsb
adc
out
cmc
out
enter
nop
sub
and
out
push
or
sub
clc
add
cld
push
ficoml
add
mov
pop
or
jbe
gs
dec
mov
jno
push
adc
jge
xchg
ds
sbb
in
push
test
scas
jl
pop
cmp
lods
and
shrl
insl
pop
lods
inc
cmp
pusha
adc
or
andl
cmp
mov
and
sbb
adcl
leave
xor
testb
cmp
dec
and
js
in
nop
pop
rorb
jbe
aam
lock
cmp
jbe
xor
mov
mov
out
pop
dec
add
sbb
mov
lods
andl
mov
dec
aad
femms
jno
pop
dec
cmpsl
jns
in
or
addl
and
add
test
pop
xchg
ss
repz
out
sbbl
ret
jp
pop
mov
popa
mov
mov
xchg
xor
dec
inc
mov
xor
ret
pop
push
fadds
ljmp
fcom
test
mov
sub
jl
jmp
rorb
out
dec
jne
or
adc
mov
xor
cmovge
outsl
mov
dec
hlt
and
insb
mov
push
gs
neg
pop
test
inc
adc
lahf
add
nop
or
add
sbb
sub
lods
movsb
xor
mov
rorb
add
testl
out
idivl
or
pusha
pusha
add
mov
dec
xor
pop
push
or
mov
adc
pop
fldt
mov
cs
loope
mov
bnd
add
inc
popa
fneni(8087
outsl
fs
scas
das
stos
test
pop
test
ret
sbb
lret
jne
jnp
mov
fstpt
mov
push
and
inc
mov
bound
lods
add
push
add
inc
sbb
mov
cmp
roll
popa
sbb
test
lcall
imul
xor
inc
pop
icebp
and
push
insl
xor
out
or
pop
lock
lock
sub
adc
imull
das
push
fmull
aaa
sbb
fnstenv
dec
or
push
add
xor
or
jmp
or
out
sub
sarb
movsb
insb
inc
push
movsb
insb
and
ja
iret
adc
stos
mov
adc
ja
ficomps
add
das
stos
push
out
mov
xor
addr16
xor
rolb
bound
push
push
aaa
lret
adcb
imul
ljmp
adc
sbb
push
sarl
loopne
popa
pusha
adc
pop
lret
pop
jl
push
add
fs
push
and
pop
jns
push
les
mov
jo
aas
aad
rcr
es
lock
subb
cmpsb
pop
imul
inc
sub
inc
xor
push
rolb
bound
pop
pushf
lret
sbb
ret
scas
sub
adc
stos
pop
sti
cwtl
sbb
idivl
jo
jmp
add
repz
push
sti
add
lock
iret
jne
xlat
inc
mov
shrl
sbb
call
jecxz
insb
aam
fnstenv
lods
adc
pop
js
and
int3
and
pusha
lahf
ja
arpl
mov
into
jb
testl
out
imul
xor
jge
mov
push
jp
mov
lods
inc
pop
add
cltd
addr16
push
add
mov
subl
lods
fs
or
lods
push
shll
adc
into
scas
xorb
add
cmp
add
or
rcrl
stc
lock
dec
jnp
js
push
and
lcall
into
ret
stos
jnp
push
aas
mov
test
ljmp
inc
and
fs
es
or
fwait
jp
xor
sbb
cld
lods
add
sub
dec
or
cmpsb
cmp
js
mov
fstpt
jecxz
loopne
inc
pop
sub
testb
outsb
or
sub
lock
data16
insb
into
test
js
and
adcl
imul
mov
or
in
pop
cmp
hlt
cmp
ds
push
inc
arpl
or
pop
pop
bound
mov
jnp
add
stc
cmp
add
cmp
xlat
jnp
cmpsl
dec
cwtl
and
add
add
imul
cmp
lods
cs
aad
or
cwtl
or
add
add
andl
aas
and
shl
adcb
mov
pusha
sar
out
cs
inc
adc
cmpsl
out
rcl
jnp
cmp
add
scas
pusha
adc
push
or
adc
dec
test
cmpps
xchg
sarl
xor
jle
adc
iret
scas
fisttpll
sub
xchg
rcl
xchg
je
ja
add
and
mov
dec
fsubrl
pushf
jo
fstpl
push
movb
and
push
jb
dec
inc
jecxz
pushf
and
ret
in
add
mov
mov
in
loopne
dec
jb
mov
jmp
cld
repz
lcall
cmp
cmp
sub
add
addb
push
pop
sub
mov
adc
add
push
pop
cwtl
sbbb
push
adc
aaa
fisttpl
adc
repz
jle
mov
adc
sahf
inc
xchg
pop
cmp
mov
lods
push
xchg
lret
sbb
and
xchg
lds
pop
add
fldenv
jo
and
imull
push
inc
push
cs
sub
lock
dec
jo
mov
imul
imul
outsb
jnp
test
push
mov
jmp
in
push
mov
rolb
or
orl
adc
daa
pusha
xor
pop
test
add
rcrl
pop
push
cmpsb
or
pop
inc
and
in
pop
faddl
lahf
iret
cmp
in
adc
mov
pop
lahf
mov
mov
nop
js
sbb
mov
shll
or
ja
dec
mov
clc
cmp
stos
jg
icebp
sbb
adc
out
jo
hlt
fsubs
hlt
jmp
push
mov
scas
call
ret
dec
cwtl
xchg
dec
int3
idivb
mov
push
push
push
stc
fisubrl
movsb
and
andl
cld
add
add
push
sahf
xor
decl
sub
fsubr
push
add
pop
out
push
and
inc
mov
cmpsb
push
mov
mov
sub
adcl
iret
cmpsl
push
lock
or
imulb
iret
and
cmp
ret
xlat
lret
push
inc
xchg
sbb
daa
push
xchg
rol
jb
rcrb
subl
rcrb
bound
fcomp
jl
add
push
out
in
push
int3
sbb
sub
jg
in
jbe
icebp
add
add
mov
insb
inc
xchg
sub
std
enter
test
add
cmp
sub
daa
and
popl
add
ja
add
ret
loopne
sub
xchg
stc
idivb
mov
add
mov
sbb
cli
inc
sbb
mov
mov
jmp
add
fs
popf
dec
sbb
rolb
or
outsl
cmp
sbb
jge
ja
dec
icebp
xor
push
inc
mov
cmp
add
xor
ss
mov
sub
aaa
push
pop
addl
lock
iret
sub
sbb
sbb
mov
sub
das
movsb
loopne
loopne
call
mov
sbb
mov
mov
pop
xchg
fs
dec
mov
mul
mov
mov
xchg
jno
and
push
mov
outsl
inc
outsb
mov
or
or
movb
mov
fmulp
mov
push
sbb
mov
mov
cmovl
mov
es
xor
add
push
fmuls
popf
jp
push
jno
dec
and
andl
mov
jno
dec
push
cmp
jl
ds
adc
adc
push
pop
jl
sbb
daa
mov
adc
sub
adc
ss
stc
add
loopne
mov
add
lcall
mov
ljmp
cmpsb
xchg
repnz
into
inc
mov
push
ss
cwtl
mov
cmp
es
jae
leave
sti
mov
test
test
jle
outsb
icebp
mov
cmp
xchg
stos
push
and
test
fstpt
pop
js
in
sahf
movsl
mov
rclb
jl
jae
scas
lods
outsb
in
dec
lods
mov
ffreep
filds
cmp
dec
or
dec
dec
add
out
hlt
cmp
cmp
adc
mov
in
dec
decl
mov
loopne
incl
xor
and
or
jecxz
cmp
std
xchg
push
ss
and
mov
mov
xchg
insb
movsl
pop
rcll
sub
mov
subl
out
repz
loop
xlat
aam
sub
inc
pop
addb
stos
and
push
push
loop
out
lods
add
push
pushl
cmc
idivl
ret
enter
mov
cmp
rorb
dec
aad
add
sub
add
xor
add
std
mov
pop
jne
inc
fsubrs
xchg
pusha
mov
and
mov
xor
mov
mov
push
iret
dec
mull
jle
mov
adcb
je
filds
rolb
ret
movsb
pop
dec
into
mov
xorb
lock
or
push
ljmp
add
dec
cmp
add
dec
sbb
cmp
in
iret
xchg
insl
rcrb
and
mov
test
mov
push
cmpsb
out
pshufw
push
xchg
das
jnp
scas
jl
sbb
stos
pop
xor
inc
inc
imul
push
dec
movups
shrl
jb
dec
out
add
test
out
scas
pop
lods
adc
sbb
pushf
or
insl
out
call
and
sub
pop
cmp
in
push
and
add
aad
sbb
jp
fisubrl
cld
neg
scas
push
loop
lods
insl
mov
or
in
call
push
sub
scas
js
gs
fidivs
xorb
fiadds
das
xor
xchg
arpl
rcl
inc
and
cld
stos
xor
mov
jle
cmp
or
push
and
mov
xchg
xor
push
or
lret
xlat
lds
mov
orl
or
add
mov
mov
int3
add
enter
ss
inc
push
xchg
xor
sub
lahf
or
loopne
or
scas
cmp
xchg
jb
addl
outsb
jecxz
into
cld
mov
int3
or
dec
addr16
add
ficomps
mov
sbb
mov
shr
int3
xchg
cmp
cmp
addl
add
push
adc
xchg
loopne
movsl
stos
jb
fsubl
sti
mov
add
or
push
fistpll
ds
or
xchg
push
mov
fldt
scas
popa
push
insl
pushf
cmp
jmp
cmpl
out
pop
lcall
jae
mov
lods
inc
int
adc
add
and
ja
notl
arpl
push
iret
sub
in
stos
mov
fldt
adc
sbb
jp,pt
jo
cld
lds
aad
push
dec
lds
out
dec
push
js
xchg
sub
jne
fistl
pop
add
and
push
adc
or
push
adc
mov
lock
sub
arpl
pop
test
out
mov
fisttpll
push
cmpsb
aam
lcall
daa
movsb
push
out
jl
int3
dec
cmpsb
xchg
adcb
in
sbb
and
jb
popa
loop
sbbb
push
into
fists
into
movsb
and
jmp
sub
mov
pusha
push
and
xor
pop
xchg
and
sbb
sub
ljmp
push
pop
sti
and
out
add
sbb
pushf
and
mov
inc
fdivr
hlt
adc
xor
std
inc
add
dec
or
jbe
mov
add
mov
pop
fists
je
fidivrs
arpl
fdivs
push
test
inc
adc
xchg
loopne
das
add
iret
and
icebp
sahf
daa
fimuls
rcpps
repnz
addr16
mov
sub
aaa
or
xor
sbbb
jo
fs
cmp
or
push
inc
lea
xchg
leave
ss
into
rolb
mov
lods
inc
ret
bound
dec
cld
sbb
divl
nop
pop
mov
cmp
and
repz
add
orl
cmp
loopne
sbbl
ss
jno
mov
sub
push
clc
rolb
mov
fs
push
xlat
adc
sbbl
fdivrs
push
mov
mul
xor
cmp
or
jl
cmpl
fsubl
fcomps
push
es
push
and
jne
clc
sbb
ss
dec
js
add
inc
enter
dec
pop
pop
dec
cs
lds
scas
mov
sub
mov
mov
lods
fdivrl
or
mov
faddl
push
jo,pt
shlb
lahf
fadds
push
fistps
loopne
xchg
add
ss
int
nopl
cmp
movsb
enter
pushf
sbb
pop
mov
lods
movsb
jg
das
jle
lods
add
or
stos
sbb
jp
cmp
in
test
adc
imul
jmp
and
mov
push
es
xchg
or
xchg
repnz
rorb
lods
push
jns
and
or
or
inc
sbb
ffreep
aaa
push
fists
or
pusha
jle
mov
xor
les
scas
add
and
add
sbb
jno
jo
cmp
xor
sub
fistpl
lret
int3
xor
and
lods
icebp
push
mov
cmp
arpl
jp
loope
push
stc
lcall
pop
aaa
adc
pop
or
in
imul
or
inc
sbb
imul
in
jb
push
testl
mov
cmpl
out
nop
out
add
and
jge
jle
push
das
inc
nop
xchg
or
add
push
daa
loope
shlb
sbb
xchg
mov
sbb
shrl
ljmp
ret
push
pop
adc
int
shr
dec
push
push
rcrb
sub
jbe
sar
ret
push
das
jno
loope
cmp
push
aad
and
int3
push
inc
push
aam
shl
dec
sub
scas
push
cmpsb
loope
or
push
adc
int3
pusha
ret
xor
jns
shlb
sub
xchg
add
push
loopne
pop
cmpsl
xchg
push
or
mov
xor
cmp
in
mov
arpl
incb
pop
pop
pusha
push
iret
mov
aam
iret
pop
jne
aad
sub
loop
dec
and
add
sti
aam
jp
stc
and
push
imul
in
stos
add
sbb
or
enter
lcall
test
mov
mov
jno
js
test
sbb
je
outsb
and
das
bound
lock
push
and
pmaxub
movsb
addr16
jmp
jle
outsl
xchg
outsl
adc
jmp
add
xor
sub
mov
mov
into
add
jle
mov
arpl
xor
enter
les
shrb
add
pop
aad
sbb
sbb
mov
adc
mov
inc
cmp
and
cmp
adc
das
jp
pop
dec
aas
jp
ficoml
add
je
dec
pop
adc
iret
and
fcoml
adc
aam
sar
scas
xchg
ret
pop
fwait
rorb
outsb
outsb
frstor
outsl
xlat
loopne
jo
jp
adc
enter
aas
add
cmp
dec
push
in
pop
sbb
push
sbb
aas
rolb
mov
xchg
sbb
push
xor
loop
xor
pushf
xchg
lahf
es
xlat
pop
and
push
add
jno
sbb
fadds
dec
pop
sbb
dec
push
or
and
int3
popf
roll
add
inc
jge
jmp
in
mov
inc
jl
adc
add
mov
roll
cld
out
add
mov
fs
in
push
jne
mov
addl
shlb
and
inc
loope
xlat
stos
add
sbbl
loope
lahf
xchg
rolb
dec
out
push
sbb
mov
jbe
fucom
inc
andb
js
push
push
cmp
pop
rcr
pop
hlt
test
sbb
pop
mov
stos
int3
or
fidivs
shll
ds
bound
ja
fmull
lods
dec
into
shl
in
push
mov
xchg
fcmovb
ja
push
add
nop
fcomps
xor
mov
sahf
or
add
mov
push
into
lcall
iret
loop
lds
fiadds
add
xchg
mov
and
bound
insb
jl
sbb
jle
jb
loop
push
mov
mov
or
gs
xor
in
loop
and
sub
pop
mov
adc
loopne
push
push
xchg
cmp
adc
into
xchg
imulb
scas
or
cmp
xor
fisttpl
loop
test
sub
ss
xor
mov
repz
pop
test
jp
sbbl
gs
jmp
in
cs
mov
imul
inc
push
cltd
mov
pop
pushf
xor
push
imul
cwtl
test
dec
mov
jo
cmp
push
mov
pusha
push
maskmovq
enter
inc
or
pop
divl
jne
fcoml
test
xlat
es
sbbb
enter
sub
pop
fdiv
mov
call
iret
fsts
outsl
push
sbb
jnp
mov
mov
es
shl
add
out
xchg
imul
pop
addr16
jmp
jp
add
push
add
cmp
daa
xchg
and
sbb
cmp
or
xchg
popf
adc
sbb
stos
jae
in
test
adc
call
and
fistps
in
rolb
cs
test
movsl
and
test
inc
sub
xchg
jmp
sarl
ret
mov
push
cmp
push
stos
out
insl
and
mov
out
push
xor
loop
rolb
rclb
mov
xor
push
mov
cs
mov
aas
or
mov
or
arpl
sbbl
xor
or
xor
dec
xlat
int
sbb
loope
dec
sti
rclb
and
int
adc
or
dec
fsts
mov
xchg
movsl
out
xor
shr
dec
test
cmc
fsubrl
in
pop
push
or
dec
loopne
bndstx
jg
loope
lret
icebp
add
xchg
inc
movsb
add
inc
or
imul
jle
mov
scas
loope
das
js
push
sub
inc
and
js
mov
cmc
mov
xchg
ss
add
pop
stos
data16
test
inc
enter
jns
push
or
aaa
aas
or
mov
adc
negl
mov
dec
push
daa
push
lahf
mov
stos
ja
je
mov
mov
mov
aaa
sub
or
iret
stc
xchg
popa
cmc
loope
fxch
xchg
cmp
xor
loope
test
push
push
out
stos
test
xor
jge
cli
adc
sbb
push
jne
adc
or
sbb
sbb
lret
stos
insb
cmp
mov
ljmp
loopne
dec
or
out
mov
ds
int
xchg
or
les
pop
je
adc
cmp
mov
jle
dec
xor
je
lock
mov
bound
push
pop
mov
mov
push
mov
add
les
test
test
cmpsb
mov
dec
popa
mov
mov
test
pusha
pop
rclb
or
xchg
mov
dec
pop
jge
into
mov
mov
adcl
sbb
addr16
add
or
jns
push
addr16
add
arpl
imull
ret
push
pop
push
daa
sub
push
es
push
pop
sub
or
fnsave
add
ret
in
jmp
add
test
xor
add
xor
mov
shlb
xor
add
sub
pusha
jge
sahf
iret
jp
lock
test
pop
jg
shlb
int
dec
mov
mov
dec
xchg
cmpl
in
mov
int3
inc
cmp
fistpll
jo
dec
lret
cmp
sub
arpl
mov
push
out
and
jno
mov
fnsave
pop
das
mov
inc
cmc
jecxz
popa
adc
mov
sub
loop
fwait
dec
das
sbb
mov
test
cwtl
mov
add
jo
push
pushf
stos
push
mov
mov
addr16
pop
daa
add
scas
mov
xchg
pop
pop
and
add
mov
bound
push
inc
add
fcomi
lods
aas
arpl
out
dec
pop
test
ds
jno
pusha
mov
inc
push
add
inc
push
and
sbb
cmp
mov
push
roll
je
jecxz
mov
xchg
test
sbbb
cmp
add
cmp
xchg
adc
mov
adc
dec
adc
pop
pop
adc
add
mov
cs
gs
and
sub
xchg
adc
jmp
mov
loopne
push
xchg
inc
jge
stc
add
lahf
and
test
andl
add
jo
mov
and
dec
and
sbb
jnp
pusha
lock
dec
mov
and
pop
adc
faddp
sub
xor
pop
stos
jge
ret
sub
jg
mov
push
test
test
movsb
cmp
imul
mov
lods
into
enter
adc
jno
cs
pop
push
mov
xor
pop
mul
add
mov
pusha
xchg
das
push
and
dec
jo
test
or
xchg
shlb
and
imul
or
fneni(8087
loopne
dec
mov
jae
inc
and
shlb
sbb
push
sub
adc
pop
test
ja
add
xor
adc
mov
jecxz
add
sub
daa
popa
sub
jmp
adc
ret
mov
roll
test
and
imul
popf
scas
mov
mov
xchg
adc
mov
or
adc
div
mov
jnp
mov
scas
push
testb
cmp
jnp
sarb
rcrb
cmpsl
xchg
cmp
add
scas
xor
and
mov
pop
test
cmp
aad
mov
sub
mov
and
or
cmp
inc
sbbl
xchg
jge
arpl
add
xchg
mov
and
test
out
mov
js
lret
outsl
add
gs
repnz
lret
dec
add
iret
sahf
popf
daa
testl
or
cs
in
add
jns
inc
or
into
cmpsl
sbb
ja
add
ja
lret
inc
inc
add
mull
int
je,pt
and
shrl
test
cs
and
out
and
xor
arpl
inc
popa
jle
out
push
dec
or
cmp
or
mov
mov
pop
xorl
pop
mov
xchg
jb
jbe
ret
popa
pop
add
add
and
fbld
dec
cmpsl
mov
das
push
or
arpl
mov
addb
mov
pop
nop
addr16
jecxz
xchg
mov
jae
mov
and
int3
adc
and
hlt
inc
data16
add
and
rclb
sub
add
inc
arpl
add
fldenv
enter
pop
pop
push
pop
xor
xor
rcrb
pop
sub
inc
inc
jnp
inc
lods
and
xor
mov
lea
scas
jnp,pn
xchg
mov
loop
out
add
iret
push
and
add
inc
pop
mov
clc
sbb
pop
pop
mov
inc
clc
jbe
xchg
scas
repz
mov
xchg
mov
push
adc
mov
or
fdivs
pop
jb
pop
ja
loopne
adc
pop
sarb
fnstcw
frstor
fmuls
sub
mov
fnstcw
hlt
add
adc
cmpsl
xchg
jecxz
mov
jne
ds
aam
sbb
mov
push
je
xchg
inc
xor
pusha
dec
jge
aas
or
insl
popa
jp
test
jne
mov
hlt
mov
lock
adcb
mov
iret
mov
jecxz
dec
add
xchg
rcrb
cmc
fs
xor
lea
jbe
je
adc
imul
and
rcl
inc
jb
jb
hlt
xchg
xchg
js
stos
and
adc
aam
adc
pop
jns
sub
out
adc
inc
dec
rol
imull
lods
out
fstps
test
push
push
loop
push
jo
xchg
rol
loope
outsl
xor
mov
out
lret
popl
lea
push
push
inc
add
jmp
je
and
jo
mov
cmp
lcall
test
aad
inc
add
cmp
dec
stos
jmp
cli
stos
pop
lret
fs
insl
in
into
fldt
js
pop
jg
inc
imul
adc
fstp
je
push
ss
les
pop
pushf
xor
sub
mov
mov
or
xor
mov
test
andl
sub
push
into
push
les
jp
sbbl
stc
pop
inc
inc
mov
inc
loop
add
pop
sbb
call
xchg
pop
jg
sub
or
add
fcoml
cmc
cmp
imul
or
rclb
fwait
jne
xchg
inc
shlb
mov
ficomps
subl
jbe
iret
pop
push
cmp
cmp
xor
jo
sbb
dec
bound
jae
add
pop
inc
xor
inc
shrb
sub
jecxz
pusha
test
pop
push
inc
adc
sub
inc
add
dec
mov
inc
ret
popa
fstpl
clc
and
sub
and
shrb
dec
cmp
pusha
ret
mov
add
stos
sbb
fs
sub
and
fcomps
mov
cmp
rcrl
pop
jecxz
clc
cmc
ret
lods
inc
adc
out
das
mov
ljmp
xor
ret
jae
jnp
jo
jne
jns
sbb
mov
mov
divl
loope
into
cmp
and
int
out
jg
jge
dec
les
pop
in
mov
popa
and
sub
sub
jecxz
lcall
sbb
mov
sbb
mov
lret
mov
fdivrs
push
orl
or
loope
jo
xor
sarl
xor
jo
js
xor
test
not
mov
mov
fs
cmpsl
add
sub
push
inc
push
add
dec
or
mov
add
adc
push
mov
js
fisubrs
mov
cmp
and
cmp
add
subl
loop
movb
jb
add
sub
ljmp
ss
inc
leave
cld
xor
nop
pusha
jne
insl
mov
sub
jns
adc
in
mov
mov
mov
loope
mov
aaa
push
mov
sbb
jle
ror
jecxz
lahf
adc
sub
sbb
xor
push
sbb
xor
jno
xor
lahf
in
shr
lahf
popf
mov
arpl
js
add
repnz
push
inc
sbb
jno
sbb
add
iret
jmp
scas
inc
sub
aam
pop
aam
jmp
shll
push
lret
adc
xor
lcall
rolb
aad
ret
dec
add
adc
lcall
mov
pushf
sbbb
sbbb
cmp
test
icebp
adc
js
fs
adc
sbb
xor
mov
sbb
dec
add
xor
cmpsb
and
push
and
std
push
lahf
fdivs
iret
cmp
adc
mov
inc
or
push
xor
rcrl
fmuls
in
sbb
sti
sub
lcall
cmp
mov
mov
filds
sub
clc
sbb
adc
pop
add
fucom
mov
adcb
iret
sub
cmp
mov
call
inc
xlat
clc
in
subb
jecxz
pop
ret
dec
jecxz
outsl
sbb
cs
insl
cmp
sbb
rolb
sbb
pop
fwait
loope
adc
inc
lea
mov
daa
lds
push
lds
daa
scas
sub
xchg
push
loopne
dec
pop
arpl
mov
push
push
jmp
sub
sub
or
fnstcw
mov
inc
xlat
es
inc
xchg
inc
sbbl
test
orl
jmp
xchg
faddl
push
pop
sahf
out
sbb
mov
mov
sub
pop
and
lock
out
xchg
push
mov
or
or
pop
cwtl
frstor
add
jne
xchg
and
dec
enter
add
jb
jp
aam
test
cld
lcall
movsb
jbe
in
das
lahf
xor
xor
cmp
or
cmp
adc
xor
repz
andb
cld
sub
cmp
ja
and
fadd
das
mov
jb
fsts
in
pop
mov
or
xchg
dec
fs
or
xor
lods
in
mov
push
push
fnstenv
mov
out
inc
xor
pop
sub
push
ror
arpl
jno
sub
sbb
push
sbb
shl
add
mov
rol
and
inc
fwait
or
cmp
repnz
out
iret
test
daa
mov
dec
lods
addb
push
es
and
xor
insl
jg
sub
fsub
movsb
pop
das
and
stc
pop
fstpl
scas
mov
add
lret
ljmp
cmpsl
sbb
xor
xor
outsl
mov
pop
add
in
add
imul
sbb
lods
fs
dec
sbb
loope
xor
sahf
nop
pop
push
push
or
dec
sbb
push
push
mov
fiaddl
xor
push
sub
sbb
mov
mov
pop
dec
aad
clc
mov
idivl
dec
inc
mov
mov
rcrb
inc
xchg
adc
subl
dec
je
or
roll
push
fmul
xchg
jns
cmpsb
nop
add
push
adc
pop
push
xchg
rclb
mov
cmpsl
add
jb
clc
ret
fiaddl
jmp
test
sysret
xchg
or
xchg
bound
jmp
xlat
sub
push
aaa
push
cmp
in
jns
cmpb
fdivs
cmp
rcrl
je
or
cmp
dec
cmp
ret
inc
pop
pop
and
jno
pop
dec
add
test
dec
aaa
test
mov
pop
or
fcmovu
inc
in
and
pusha
cmp
adc
dec
add
mov
push
icebp
xchg
cwtl
or
std
sub
fbld
das
in
and
fdivr
jo
cmp
xor
es
mov
push
mov
or
cwtl
loop
daa
enter
popf
fsubrl
lret
xchg
push
sbb
js
mov
cmp
add
mov
jle
sbb
lods
stos
xlat
xchg
or
xor
xchg
or
imul
xchg
out
inc
pop
loopne
cmp
push
fcmovu
fsts
xlat
jge
and
outsl
je
add
loopne
outsl
ja
aad
js
add
cmpsl
adcl
inc
call
mov
popa
out
iret
jle
mov
lods
or
ror
mov
les
iret
enter
xchg
cmp
daa
lret
mov
and
sub
cmp
dec
cmpsb
and
push
mov
xchg
mov
and
je
pop
xor
cmc
pop
fistps
in
add
mov
pusha
cmp
xlat
lret
loopne
adc
sub
idivb
fcoms
test
je
pop
push
outsl
fidivrs
add
jb
push
add
mov
adc
jo
pusha
adc
aas
sbb
xor
or
and
xchg
pop
jns
cmp
jo
xor
cmp
add
mov
popf
adc
icebp
xchg
scas
iret
xor
mov
lds
pop
or
mov
pop
mov
call
jno
aaa
int3
stos
push
insb
jp
ja
sbb
inc
pop
mov
lahf
aam
pop
pushf
dec
and
daa
faddl
lea
push
jmp
stos
mov
cli
js
insb
idivb
test
int3
push
popa
scas
test
pop
push
cmp
mov
and
in
icebp
and
insb
adc
jl
jo
dec
xor
daa
aam
sbb
mov
xchg
mov
jo
sub
les
out
mov
inc
and
aas
roll
push
cmp
fcomps
rorb
rol
out
faddp
pushf
add
addr16
mov
inc
jo
arpl
xor
nop
dec
xchg
mov
loope
push
lcall
mov
sub
mov
push
inc
ss
or
lods
daa
lahf
ds
mov
and
sub
scas
rclb
cmpsl
fildl
lahf
jno
notl
ja
dec
dec
sbb
in
add
dec
lahf
or
outsl
sbb
jg
xchg
mov
cltd
pop
test
mov
dec
sbb
cmpsb
pop
sbb
fnstenv
insb
sbb
add
into
sbb
ret
fs
cmpsl
xor
jo
mov
dec
movsb
loopne
dec
pop
cmp
inc
stos
push
sahf
add
js
add
xor
aad
shrl
dec
and
cltd
icebp
xor
inc
in
inc
dec
imul
mov
or
out
loope
xchg
pop
and
scas
pop
gs
mov
iret
mov
lock
fiaddl
loopne
jbe
add
mov
cli
ss
push
bound
push
js
loopne
sub
add
and
test
cmpl
fadds
test
sbb
cltd
mov
dec
incl
insb
cmpsb
movsl
add
jl
js
sub
rorl
mov
cmp
daa
rcrl
or
das
add
inc
idiv
int3
ss
push
ret
or
das
mov
and
xor
sbb
push
sub
push
je
gs
orb
push
cltd
in
and
xor
call
fcoml
in
and
rolb
ret
es
into
mov
rcrl
pop
lret
mov
fdivrs
mov
shlb
pop
jne
mov
cmp
or
popa
mov
sbb
xlat
dec
es
add
fs
sbb
fisttpl
repnz
jo
sbb
pushl
cmp
inc
dec
daa
movsl
or
dec
lea
mov
rcrb
mov
and
ret
sub
cltd
sbb
lods
es
adc
adc
stos
pusha
xor
cmp
std
jg
or
fists
cmp
adc
lahf
in
mov
push
push
sub
ljmp
xchg
pop
lods
xchg
lock
or
shrb
dec
xchg
js
mov
xlat
mov
add
and
mov
andl
sbb
or
ret
dec
mov
fs
push
loop
push
je
xchg
xor
add
insl
insl
jo
sub
and
or
outsl
outsl
int3
imul
sbb
and
add
pop
je
shl
sub
jle
jno
jno
jecxz
rcr
push
or
jecxz
mov
push
call
jo
das
sti
scas
cltd
and
and
pop
int3
cmc
loop
xchg
cmp
add
mov
mov
or
push
inc
outsl
adc
mov
gs
sbb
out
int
xor
or
mul
or
mov
adc
jl
mov
rolb
ss
sub
addl
lods
sbb
xchg
jecxz
lods
jmp
add
fdiv
xor
js
xchg
or
rcll
into
pop
add
cwtl
sub
daa
aas
jne
cmp
mov
fcoml
add
fcompl
mov
push
movb
xor
ret
lock
pushf
and
add
jge
add
jmp
mov
fnstcw
adc
insb
mov
mov
pop
arpl
jmp
jae
fcoms
dec
fimuls
loopne
or
loope
xlat
stc
cwtl
rolb
out
or
jae
push
jne
fyl2x
sbbl
stos
pop
jle
cmp
sbb
cmp
push
xchg
or
lock
outsb
rcrb
sub
mov
sbb
xchg
and
adc
fwait
jns
jl
sbb
adc
mov
sbb
int3
inc
inc
add
shll
sbb
lods
inc
mov
insl
mov
sub
mov
repnz
or
fadd
xor
and
pop
adc
hlt
sbb
add
and
push
pop
or
dec
cmp
adc
xor
jle
daa
orl
and
andl
adc
adc
jo
call
mov
xchg
and
in
mov
or
dec
and
or
rolb
cmpsl
mov
mov
sbb
aad
call
fistps
fcoms
add
push
adc
cmp
dec
dec
push
cmp
mov
xor
enter
fdivl
das
mov
cwtl
sbb
rcll
scas
or
dec
movsl
mov
rorb
lahf
push
lock
xor
xor
bound
ss
xchg
rolb
nop
loopne
cli
or
daa
cs
xorb
ffree
mov
cmp
inc
dec
int
lods
enter
adc
popf
add
and
xor
inc
adc
lret
insb
mov
jmp
inc
sarl
xor
es
loope
stos
js
adc
ret
adc
out
sub
xor
and
jnp
fistpl
xchg
in
add
cli
jle
and
mov
mov
or
sbb
insb
jp
mov
sub
imul
pop
dec
inc
ss
adc
cmpsb
cmp
fsub
mov
adc
adc
xor
rol
push
into
xor
jbe
jo
lock
jbe
je
cs
stos
iret
mov
mov
gs
cmp
jns
push
inc
sub
xchg
xorl
mov
fdivl
bound
cld
push
pop
das
bound
cwtl
cld
add
pop
jo
mov
push
rsqrtps
in
and
add
cmpsb
or
xlat
push
inc
movsl
in
push
or
add
sub
inc
lods
shlb
movsl
pop
or
or
push
xchg
mov
push
cli
insl
push
add
cmova
icebp
leave
adc
mov
add
adc
int
out
adc
dec
dec
icebp
iret
pop
loopw
js
dec
das
out
lods
popa
fcoms
jmp
sarb
data16
or
dec
push
std
arpl
and
mov
add
scas
inc
mov
imul
mov
xor
rclb
aaa
cltd
mov
xchg
call
or
je
shll
repz
inc
inc
imul
jb
movhps
adc
cmp
lods
cmc
push
dec
psraw
out
and
shrl
les
or
es
cmpl
rcrl
or
sbb
pushf
add
test
bswap
stos
add
add
xchg
pop
mov
sub
addl
pop
add
add
lods
sbb
lret
data16
fwait
mov
orl
xor
lahf
into
xor
into
mov
dec
sub
mov
mov
xchg
bound
xchg
fdivrs
sbb
push
jecxz
sar
enter
addb
rolb
imul
sub
pop
out
and
push
lds
and
push
ljmp
loopne
push
lods
inc
xchg
dec
test
out
and
cmc
pop
scas
mov
lret
add
or
lea
rcr
in
psubusb
inc
fcomip
sub
out
pop
sbb
pop
add
xchg
popf
or
xchg
push
enter
adc
pop
outsb
mov
adcb
aad
mov
ja
sub
outsl
cli
mov
xchg
rclb
orl
dec
xor
add
add
jno
das
lods
je
lods
adc
pand
jno
pop
pop
jns
je
inc
test
test
add
cmp
dec
popa
mov
in
mov
out
push
push
aaa
push
scas
sub
movsl
bound
push
sbb
push
fwait
sub
clc
fdivrl
cmp
sub
into
jecxz
cmc
cmp
mov
stos
xor
fcomps
pop
push
and
lock
push
je
mov
loope
xchg
add
sbb
sub
in
mov
push
scas
xchg
mov
in
lret
xchg
cmp
pushf
pop
cmp
or
sbb
push
sbb
push
xchg
rclb
jmp
loopne
jno
lock
mov
orl
je
dec
cmp
cmpsl
sbb
adc
jg
or
repnz
add
das
ret
add
roll
mov
inc
lea
cld
dec
stos
adc
add
test
sub
sbb
mov
lds
mov
dec
xor
xchg
sbb
jns
jnp
add
fwait
cltd
xor
cmpsl
sahf
test
xchg
inc
loope
sub
push
shrl
sub
cs
fwait
imul
xchg
or
fwait
scas
jb
rorb
cmp
xlat
cmpsb
add
sub
cld
test
rolb
adc
ret
ljmp
movsb
xor
testl
lods
cmp
sub
in
inc
and
sub
frstor
mov
and
inc
shlb
andb
push
mov
mov
rcrl
insl
imul
mov
test
mov
aam
ja
and
push
sub
ret
inc
inc
inc
sub
mov
lahf
add
xor
xor
xchg
out
add
or
test
adc
xor
jno
pop
sbb
jb
or
xor
xchg
shlb
or
xlat
aam
cmp
dec
sub
add
add
filds
mov
dec
in
inc
imul
and
fcomp
pop
jbe
das
repnz
push
pop
cmp
mov
mov
jno
ss
test
sbb
ja
mov
xor
mov
xchg
repz
lea
mov
cli
testl
mov
cs
out
aam
lcall
mov
movsl
cmp
popa
mov
inc
mov
inc
mov
popa
adc
adc
daa
scas
push
cmp
add
loope
sub
loopne
inc
int
je
sub
push
faddl
outsl
sub
mov
daa
and
pop
inc
lods
inc
lods
pop
je
lods
mov
loopne
add
mov
mov
xchg
or
xor
scas
mov
lock
push
mov
push
cmp
xlat
lods
popf
jle
mov
and
shlb
add
or
sub
sarb
jle
addb
pop
stc
push
movsb
xor
ljmp
repnz
ret
inc
add
adc
stos
pop
addr16
push
clc
sbb
pop
iret
xchg
jp
pop
jb
jge
insb
sti
lret
mov
jno
xorb
sbb
les
les
push
sti
xchg
xchg
aad
js
add
cmpsl
stos
jne
adc
notl
rcr
jbe
jnp
aam
lds
mov
or
sub
shrb
aam
fistpl
fsubrs
in
jecxz
add
mov
movsb
add
daa
fwait
pop
sarl
mov
add
ret
sarl
and
xor
daa
scas
clc
xchg
xchg
mov
sbb
insb
sahf
shrb
add
addb
ret
pop
inc
cmpl
sbb
cld
fwait
jo
arpl
imulb
imul
sbb
push
fwait
lds
fwait
pop
sbb
fwait
add
mov
sub
daa
cmp
in
les
pop
pusha
or
cmp
cmpsb
sahf
xchg
les
and
ret
or
jmp
addb
or
or
add
mov
cmp
pop
adc
pop
push
cld
stos
push
push
or
sub
lret
fcmovnbe
popf
mov
sub
les
cmpsb
test
sub
inc
jl
sub
pop
nop
mov
push
jae
sbbb
add
push
jge
push
scas
adc
inc
fmuls
sbb
das
outsb
push
das
iret
dec
aam
adc
adc
dec
jno
pop
sahf
pop
mov
sub
cmp
movsb
sti
mov
xor
insl
popf
mov
fildl
roll
dec
cmp
lret
push
dec
jns
stc
jmp
push
out
sbb
add
pop
int3
sbb
xchg
call
lea
and
jne
mov
add
scas
inc
push
outsb
or
sar
mov
and
jg
mov
mov
stc
and
pop
fwait
cmc
or
dec
add
rcll
mov
pop
adc
xchg
es
ror
int
dec
mov
adc
or
push
sbb
enter
and
popa
push
push
push
adc
sub
out
sbb
fistpll
or
sbb
push
xor
in
shrl
movsl
mov
or
stos
mov
push
sbb
shrl
insb
sub
fsubs
mov
push
lock
xorb
mov
sahf
sub
lods
or
jp
fstpt
adcb
lods
sti
int3
sub
mov
rcrl
sub
sbb
lcall
push
fmulp
jns
loopne
mov
scas
imul
and
mov
pavgb
adc
mov
popa
test
xchg
iret
push
sbb
pop
outsb
and
int3
xchg
andb
stc
testb
push
xor
rcll
ds
xorb
push
push
push
pop
jmp
sub
mov
insl
adc
xor
addl
jle
ret
xor
scas
pop
sbb
push
sub
js
pop
push
add
pop
clc
sub
mov
ljmp
sub
ss
inc
push
mov
out
popa
pop
adc
movsb
pop
outsl
mov
or
lods
pop
pusha
xlat
fidivs
ds
sub
sub
pushf
mov
push
bound
fisubrl
lods
das
movsb
pop
andb
jae
mov
sbb
push
mov
jns
cmpsb
adc
cmpsl
add
aam
ljmp
out
out
jne
daa
pop
cmpsl
push
je
mov
lcall
pop
into
mov
and
push
je
jne
scas
pop
dec
shlb
mov
outsb
inc
adc
pop
test
push
mov
sbb
or
movb
mov
lret
enter
xchg
daa
mov
mov
jnp
add
add
aaa
in
push
lret
inc
outsl
mov
pop
sahf
pop
add
jecxz
shl
popf
dec
nop
lret
movsb
cli
test
insl
and
jne
adc
repnz
cmc
cmp
xchg
add
mov
js
ficomps
sti
cmp
mov
loopne
push
inc
aam
hlt
push
pop
xchg
mov
mov
push
or
dec
mov
cmp
in
jb
cltd
into
je
add
adc
aam
mov
lods
push
add
das
int3
add
xor
test
in
iret
sahf
sub
insl
loope
ja
adc
mov
push
lds
aam
add
rcrb
and
dec
stos
andb
je
or
dec
push
mov
mov
mov
adc
push
lods
dec
dec
lea
sub
and
pusha
lock
stos
inc
adc
pop
xor
inc
addl
sbb
cmp
cmpsb
xchg
filds
xchg
sub
add
xchg
lahf
xchg
ss
add
add
adc
mov
mov
gs
pop
add
add
or
sub
sarb
add
pop
adc
mov
add
push
or
lcall
and
add
dec
orl
rclb
orb
jecxz
add
loopne
or
add
and
xchg
or
or
sarb
push
mov
dec
add
sbb
inc
add
sbb
add
push
es
pop
sbb
sbb
addb
push
sub
add
imul
sbb
sbb
add
push
and
push
subb
ds
and
and
add
or
xchg
and
outsb
inc
sbb
add
push
lret
js
cltd
and
and
daa
test
addb
or
cmp
and
add
push
es
pop
pop
sbb
js
addb
loopne
jnp
cs
dec
add
shl
sub
mov
popa
sbb
sub
or
es
out
test
and
add
cmp
test
pushf
mov
adc
pop
dec
push
pop
and
sub
popa
rclb
dec
in
scas
jmp
out
inc
nop
push
arpl
cmp
pusha
push
mov
outsb
sbb
pop
cmc
outsl
or
ret
add
cmp
sbb
or
fsubp
fldl
push
mov
fdivl
pop
xor
add
mov
scas
clc
repz
add
lcall
pop
lea
sub
and
pop
cmp
rolb
inc
mov
aaa
pop
cmp
xchg
mov
popl
and
in
add
ficoms
pop
mov
rolb
sbb
push
mov
sbb
insl
xor
dec
mov
sbb
out
sub
out
push
in
push
add
orb
add
cld
mov
cmp
test
das
mov
ja
sbb
lock
add
add
cld
push
cld
iret
jecxz
xor
pop
add
mov
mov
add
xor
jle
sub
jle
sub
int3
cs
xor
mov
sub
std
pushf
fs
loopne
sbb
ret
xchg
add
incb
push
adcl
push
lret
sbb
repnz
shll
iret
push
stos
les
push
sub
sub
cmp
icebp
lret
mov
call
mov
dec
mov
adc
jge
movsb
xor
push
negb
push
fcoml
dec
mov
push
push
xor
push
xchg
pop
sub
pop
inc
inc
enter
mov
lods
daa
lahf
add
out
adc
rcrl
shlb
adc
cmp
pop
jecxz
inc
cmpsb
push
pop
repnz
pop
mov
ja
in
xchg
incb
xor
jbe
adc
movsl
ja
dec
scas
es
push
cmp
lea
dec
mov
outsb
inc
jle
jne
dec
adc
scas
mov
cmp
add
addb
and
popa
xchg
xchg
mov
inc
add
mov
jle
xchg
es
pusha
cmp
stos
lock
lods
ret
mov
jb
inc
pop
ret
xor
es
arpl
mov
mov
cmc
stos
adc
mov
mov
jno
inc
cmp
jno
push
adc
popa
push
mov
push
sbb
bound
jle
movsl
add
fcmovu
shrd
fists
xorl
mov
lods
push
inc
ja
fidivs
fisubl
and
stos
mov
pop
jg
mov
scas
test
and
pop
sbb
fwait
je
jno
jne
add
sbb
inc
pop
push
repnz
rcrb
fadds
mov
iret
inc
jg
lock
pop
jb
rolb
adc
push
test
cld
es
sbb
lds
imul
cmp
xor
je
pop
pop
jns
loopne
outsl
add
dec
gs
sbb
adc
clc
nop
loop
mov
xor
int
cmp
movsb
mov
pop
leave
push
xchg
and
push
fbld
pop
pusha
rcrl
cmp
dec
jo
cmpsb
mov
pop
lock
js
pop
popa
loopne
sbb
pop
add
jg
ret
js
cmpl
pushf
mov
xchg
xchg
sub
mov
inc
push
add
xor
ljmp
pop
sbb
test
jbe
jno
clc
mov
sbb
shl
sbb
push
bound
and
notb
mov
and
jnp
push
adc
test
jns
mov
inc
xor
xlat
test
add
roll
jbe
outsb
gs
adc
lret
cmpsl
movsb
rcl
xchg
outsb
push
fcompl
pusha
xor
popa
mov
addb
xor
jp
addr16
clc
roll
std
add
sbb
out
pop
cwtl
je
sbb
sub
and
mov
add
jecxz
or
and
pop
movsb
out
imul
das
xor
dec
in
push
shll
outsb
cmp
pop
add
add
jge
pop
inc
inc
add
cmpsl
inc
mov
jmp
cmpsl
leave
xchg
xchg
and
lods
inc
push
mov
mov
mov
iret
cmp
sbb
roll
cmp
jg
cld
lods
add
sti
cltd
fidivs
loop
js
jno,pt
xchg
imul
pusha
imul
or
mov
xchg
mov
and
and
adc
dec
and
fwait
insl
mov
test
sysret
jge
lret
sbb
or
ljmp
pop
outsb
nop
sbb
jmp
jno
ret
inc
or
and
sbb
test
mov
push
adcb
mov
and
and
pop
cmpsl
shl
add
add
and
jmp
out
and
and
lahf
inc
and
xchg
loopne
and
add
cmp
cmp
lret
and
cmp
mov
sub
fstl
pusha
adc
and
lds
lahf
add
or
mov
cmp
and
iret
xor
mov
icebp
xchg
dec
xchg
mov
or
insl
movsb
aaa
pop
inc
pusha
lods
inc
inc
movsb
hlt
jmp
or
enter
lods
lds
jbe
xchg
cmp
push
iret
negl
pop
stos
dec
or
push
fbld
push
cmp
and
into
shlb
xchg
jno
dec
push
add
pop
mov
and
decb
fmull
fiadds
sbb
mov
fs
add
pop
sbb
out
lods
mov
lods
je
inc
sub
addb
pop
jp
or
lods
loop
xor
xlat
and
or
pop
lea
ja
add
out
push
out
add
scas
aam
add
pop
test
jno
out
out
sbbl
ja
or
pop
pop
add
popa
or
cmp
jns
jle
mov
or
add
je
add
add
push
hlt
sbb
jle
add
add
add
rorl
testl
pop
add
aaa
into
fnstsw
push
nop
adc
stc
dec
in
loopne
add
or
icebp
jno
push
sbb
loopne
jge
aaa
push
pop
jae
cmp
mov
or
movsl
jb
out
or
add
xor
jns
test
add
and
pop
xchg
xor
daa
mov
or
lods
sub
ret
pop
mov
shll
gs
fsub
mov
cmp
enter
add
push
ret
clc
push
ret
fmull
cmp
stos
lds
fwait
and
dec
test
loopne
popl
cmp
outsb
fmul
dec
add
add
popf
das
lea
lock
enter
add
int3
fistpl
push
sub
mov
roll
dec
push
sbb
fidivs
shlb
loopne
arpl
or
inc
lret
mov
in
lock
jno
loope
add
mov
add
pop
or
and
cltd
scas
push
shlb
push
ja
push
sbb
sub
out
fmuls
push
and
xchg
xor
mov
cmp
pop
mov
mov
push
inc
cmp
fcompl
mov
pop
or
sbb
sub
bound
xchg
and
into
xchg
push
xor
into
mov
add
xchg
xchg
jne
and
test
fwait
jne
mov
ja
jbe
xchg
mov
pop
lea
insl
add
insb
xor
sar
popa
test
xor
enter
cmpsb
addr16
outsb
pop
mov
sbb
xor
loopne
fistl
sti
repnz
sbb
add
add
mov
js
mov
fisubs
adc
pop
aam
je
inc
shl
jno
loopne
add
mov
push
or
pusha
adc
xor
add
cmp
add
movsl
cmp
xor
rcll
aam
sub
pushf
inc
hlt
pop
adc
fsubr
push
mov
jns
add
dec
pop
shlb
sub
xor
or
sbb
jle
xchg
mov
add
popl
lret
fmuls
xchg
or
and
add
popa
push
mov
test
das
jae
dec
cmp
and
je
mov
sbb
sahf
popf
int
xor
mov
cwtl
insb
xor
push
ljmp
or
mov
push
inc
mov
inc
dec
sub
test
cmp
jno
gs
mov
sub
mov
dec
pushf
rcrl
mov
imul
daa
and
jecxz
xchg
gs
xor
sarb
std
xchg
add
movsb
mov
mov
fnstcw
or
lahf
popa
xchg
repnz
imul
loopne
xchg
cmp
lea
addl
adc
mov
jb
divl
outsb
xchg
cmp
vcvtsi2ssl
popf
loope
push
push
add
ds
adc
push
mov
mov
mov
push
inc
outsl
and
xchg
loopne
push
sbb
loop
push
jns
fldt
icebp
sbb
in
ja
fisubs
push
icebp
push
cmpsb
ret
test
add
sti
push
mov
cmpb
rcrl
jno
cmp
imull
mov
call
push
shll
push
or
push
push
cmp
add
adcb
nop
sbb
cli
add
sbb
pop
mov
aaa
add
pop
jge
loopne
pop
repz
cmp
addr16
into
out
push
push
pusha
aad
hlt
fwait
mov
pusha
pusha
andb
jo
cmp
fwait
mov
xor
add
popa
sahf
mov
jnp
movsb
out
and
adc
push
xchg
call
sbb
ffree
mov
xchg
pop
or
imul
add
pop
push
das
ret
push
lods
arpl
sbb
inc
shlb
out
and
xor
and
xchg
mov
sbb
mov
outsl
in
xorl
mov
xchg
pusha
fidivs
faddl
loopne
sbb
cmp
push
and
mov
std
pop
push
add
add
adc
sarl
xor
mov
test
cmp
es
add
ss
fwait
sbb
push
pop
adc
xchg
cltd
sub
sbb
add
mov
sub
in
or
or
or
inc
scas
movsl
push
adc
fbld
push
inc
inc
std
je
mov
mov
pop
andb
push
popf
addl
mov
mov
pusha
adc
sbb
js,pt
stos
pop
or
imul
movsl
sub
call
loop
pop
sub
and
sub
xchg
cmp
sbb
cmpsl
pop
dec
jecxz
and
push
rorl
dec
add
jo
sbb
xor
test
rcr
shlb
add
or
lret
daa
aad
pop
arpl
out
jnp
and
lods
jle
dec
cs
adc
aad
mov
testb
lret
sbb
mov
mov
in
cli
jne
xor
sbb
test
sbb
add
test
and
xor
xchg
inc
dec
in
cmpb
iret
sub
mov
ficomps
in
lahf
lea
sbb
loop
test
jns
cmp
shrl
sbb
mov
sete
loopne
mov
lods
dec
xchg
comiss
sub
mov
test
jns
lods
dec
aam
mov
jp
sbb
sub
xchg
pop
out
mov
nop
xor
sub
cltd
movsb
ja
in
mov
test
ja
jle
jbe
xchg
nop
sbb
and
fmuls
cld
scas
xchg
xchg
sbb
mov
mov
pop
push
pop
or
lods
out
out
ror
xchg
frstor
sub
cwtl
shlb
mov
dec
xor
iret
and
pop
mov
imul
xchg
jb
pop
xchg
jl
inc
inc
sub
pop
movb
adc
lcall
push
pop
sub
xchg
and
fistpll
inc
fisubrl
rcr
push
mov
sub
mov
outsl
clc
pop
add
push
rcrl
jo
pop
dec
sbb
pop
loopne
cli
ss
fxch
das
jae
sbb
jno
fnstcw
fyl2xp1
ss
and
scas
repz
cmpsl
add
clc
loope
js
pushl
mov
nop
adc
push
jb
xchg
jp
data16
xor
rcrb
inc
xor
mov
es
icebp
add
aas
push
or
or
rcrl
sarb
push
sbb
or
pop
bound
inc
into
xchg
aam
cmp
adc
push
aaa
mov
roll
jno
sbb
and
arpl
leave
es
push
pop
inc
shlb
xchg
cmc
ja
inc
xchg
in
or
adc
clc
sbb
add
lods
jo
call
aad
jmp
sbb
ficoml
int
nop
mov
jno
fisttps
cmp
sbb
divb
stos
dec
out
xlat
adcl
fsubrs
addb
sbb
subb
sar
xor
fs
inc
xor
insl
sub
mov
repz
cmpsb
mov
ret
iret
inc
add
mov
add
jl
subl
rcr
rcrb
popa
pop
xchg
imul
mov
push
dec
and
add
loope
rolb
or
xor
push
add
mov
mov
sti
push
lods
loopne
sbb
jle
enter
sub
into
mov
aas
out
push
mov
mov
test
icebp
or
fldl
add
popa
add
movsb
mov
fwait
sbb
test
and
jbe
cmc
lret
push
sub
sbb
jnp
sub
lock
in
lods
gs
push
je
js
push
sub
aam
cmpsb
ret
cltd
insl
out
jmp
and
and
mov
push
pop
jg
mov
add
dec
popf
cmp
iret
leave
test
inc
cltd
in
mov
jmp
dec
adc
imul
inc
inc
and
fnstsw
int3
sbb
jg
outsl
jecxz
dec
dec
pop
sbb
xor
xorl
fwait
sbb
xor
xor
mov
ret
je
ds
filds
jns
cwtl
adc
mov
mov
jnp
les
loope
jle
inc
lea
or
stc
add
sbb
xor
adc
cmp
ljmp
push
and
fwait
sbb
mov
cwtl
and
pop
icebp
jns
adc
out
les
loop
insl
das
xor
adc
loop
pusha
outsb
shll
inc
imul
jne
sbb
mov
or
push
pusha
in
mov
ljmp
sbb
inc
pop
sahf
es
mov
lcall
and
xlat
mov
iret
pushf
in
push
mov
pop
cmp
add
jo
push
mov
xchg
sqrtps
movsb
icebp
jl
lods
or
push
mov
or
cmpsb
push
pusha
in
cmp
push
cmp
outsl
cmp
bound
dec
cltd
mov
lret
sub
mov
ret
lock
enter
icebp
jmp
push
stos
lods
sbb
addl
mov
sbb
sti
aaa
add
mov
js
cmp
add
dec
and
pop
mov
add
push
or
or
add
xchg
stos
insb
jecxz
sub
test
test
mov
sahf
inc
mov
xchg
cmpsl
mov
adc
adc
mov
sub
jl
daa
movb
jno
cmp
mov
imul
push
fmuls
rclb
pop
mov
sbb
inc
add
jns
jno
push
dec
fisttps
nop
sub
leave
test
push
fists
addr16
xor
mov
and
and
faddl
mov
pop
inc
in
mov
jl
and
sub
out
adc
icebp
xor
popa
inc
dec
dec
xor
ret
cmpb
inc
std
mov
rclb
pop
mov
xor
sarb
add
jmp
cwtl
ret
popa
nop
icebp
add
aam
shlb
loopne
push
xchg
jp
push
sub
pop
sub
mov
out
mov
loope
loope
push
push
lock
aas
fsubs
sbb
es
fs
test
mov
loope
xor
fnstenv
add
insb
mov
add
les
jmp
icebp
mov
push
adc
jle
or
dec
push
dec
or
dec
adc
fldl
test
adc
enter
sub
fiadds
jmp
and
outsl
iret
nop
mov
lret
out
outsl
lcall
and
ret
aam
lret
and
sub
mov
xor
xorl
jo
cld
dec
xchg
adc
sub
mov
mov
ds
sahf
pop
or
addl
add
pop
mov
push
xor
adc
pop
add
into
arpl
adc
mov
arpl
cmp
or
mov
dec
pop
mov
dec
add
or
loope
xlat
and
adc
cmp
mov
sub
dec
pop
add
ljmp
xchg
popa
or
inc
std
jmp
dec
cmpsl
jo
jp
add
cmp
adc
jbe
mov
loope
or
cmp
push
pop
imul
test
dec
mov
adc
cs
mov
and
leave
jmp
cltd
outsl
xor
sub
mov
stc
xchg
sub
test
loop
sub
inc
push
movsb
add
adc
cmp
scas
fstpt
dec
add
dec
cwtl
add
jnp
push
clc
ja
fidivrl
mov
push
dec
out
cwtl
add
shlb
cmp
fisttps
pusha
pop
jb
iret
push
out
insb
movsb
popa
mov
sbbb
ja
inc
jmp
cs
cmp
dec
xchg
ret
mov
iret
lods
gs
cwtl
push
and
pusha
xlat
xchg
jno
mov
rcll
jg
sbb
adc
cmp
adc
out
shl
or
out
pop
lock
cmpsl
adc
iret
mov
cmpsl
sub
jmp
and
ror
sahf
popa
and
out
out
mov
sub
jmp
add
mov
cmp
dec
frstor
sbb
mov
test
fadds
cwtl
pusha
inc
sub
call
jge
inc
rorb
call
adc
not
sbb
bswap
ficompl
xchg
jb
and
int3
add
sub
and
mov
lods
sbb
push
push
push
jecxz
sbb
push
mov
rcll
movsb
lods
push
or
das
rclb
fcoms
and
mov
pop
je
sbb
pop
insl
pop
lods
and
and
mov
lock
lret
mov
loopne
test
xchg
add
xchg
or
jp
aad
jns
adc
sbbb
mov
pop
add
inc
imul
or
ljmp
dec
or
xor
mov
sub
mov
mov
mov
das
ljmp
cmp
adc
fcoms
and
or
dec
xor
lret
jo
ret
cmp
push
shlb
mul
data16
jle
rcr
jno
rolb
cmp
mov
sarl
push
pop
in
mov
push
leave
aaa
inc
lods
out
inc
adc
cmc
sbb
push
dec
or
add
out
push
or
jno
cs
stos
push
scas
test
mov
cmp
cwtl
add
add
and
loop
cs
push
mov
ret
mov
sbbb
das
loop
mov
jns
xor
int3
ret
stos
cmp
lods
push
xor
test
sbb
mov
insl
outsb
adc
sbb
inc
inc
add
stos
and
aaa
adc
cli
sbb
test
dec
mov
or
loop
mov
js
xchg
orl
fmul
mov
push
in
add
adc
push
ret
sub
pop
sbb
add
or
jle
imul
cmpsb
sub
pop
cmp
shlb
sbb
mov
xchg
xchg
scas
insb
pop
dec
pusha
ja
push
addr16
pop
inc
into
lret
std
loopne
jmp
rorb
outsb
mov
sub
pusha
push
sub
fucom
xor
shl
jg
push
add
xchg
lock
enter
in
bound
cltd
das
jae
shl
cwtl
sub
into
sub
xor
push
iret
pcmpeqd
shl
xor
push
xchg
jg
mov
fsubp
push
push
mov
incb
push
popa
mov
js
inc
mov
jns
push
xchg
shl
or
mov
adc
cmc
idivl
in
lcall
add
sahf
and
in
push
push
in
loop
sarb
iret
int
xlat
test
push
leave
adc
add
adc
fs
mov
cmpsl
int3
enter
jo
test
mov
xor
in
jecxz
push
mov
push
das
mov
lea
pop
loopne
test
or
pop
inc
test
jno
in
push
js
jbe
iret
je
dec
lea
xor
adc
lea
lcall
int3
das
cmpsl
and
pop
xor
xchg
adc
add
outsl
and
movsl
cmp
pop
insl
insb
inc
add
xchg
xor
dec
shufps
xchg
str
ja
rolb
adcl
pop
inc
or
and
inc
and
movsl
mov
mov
xchg
int
adc
push
addb
lret
adc
push
xchg
xor
sarl
imul
cltd
mov
add
and
add
sahf
sub
repz
push
cmpsb
sbb
imul
and
add
or
sub
adc
fstp
nop
jnp
in
lahf
sbbl
inc
shlb
pusha
jp
clc
mov
into
sbb
ja
bnd
or
fidivs
add
mov
jbe
cli
cmpsb
rorb
add
aad
aas
sti
or
xor
mov
lods
rorl
in
or
repnz
or
jno
add
sub
ja
imul
push
and
cmp
aam
popf
sub
cltd
shlb
jmp
or
ss
or
in
lock
addr16
sub
and
lcall
add
loope
icebp
jbe
inc
rorl
fidivs
aam
outsb
bswap
lock
or
add
jmp
xchg
je
and
clc
in
nop
pop
les
lods
add
lcall
sahf
mov
jae
add
ja
jg
movsl
mov
clc
mov
cs
incl
pusha
adc
pusha
in
dec
mov
pop
mov
pop
rclb
push
ja
xorb
adc
pusha
and
adc
and
pop
inc
fmul
daa
shlb
shll
xchg
adc
call
pop
mov
add
add
pop
lret
cmp
xor
and
xor
jge
push
sbb
jmp
lods
loop
sub
movsb
ljmp
stos
lds
mov
mov
sti
xchg
js
lods
sarl
ret
jp
int
and
push
lret
push
or
sbb
stos
loopne
lret
add
in
cmpsb
testb
dec
sbb
pop
dec
testb
xlat
add
divb
test
jmp
adc
mov
rol
lcall
or
xchg
fdivl
jecxz
outsl
pusha
xlat
outsb
jecxz
inc
push
push
fisubrl
inc
cmp
jae
insb
loopne
pop
cmp
xchg
shrl
push
call
or
leave
jge
pop
ja
imul
push
push
push
sbb
inc
sub
jg
or
stos
dec
lds
lcall
es
mov
frstor
add
sub
xchg
jmp
sub
sub
jle
lret
dec
out
movsb
pop
xchg
out
and
inc
xchg
repnz
pushf
test
jo
inc
pop
mov
movsl
xchg
stos
test
test
push
enter
and
xor
clc
fisubrl
rorl
pop
sbb
jp
add
lds
lods
imul
push
outsb
jle
mov
push
push
inc
sub
faddl
mov
xchg
pop
clc
inc
lods
fs
mov
ja
addr16
mov
push
mov
xor
mov
ds
bound
adcl
cmp
add
jnp
pop
xor
iret
ds
xchg
fiaddl
push
xchg
inc
aas
or
adcb
xchg
mov
jmp
je
pusha
popa
push
ds
mov
cltd
pop
ds
sbb
fcom
xchg
inc
inc
imul
stc
mov
add
xchg
mov
push
pusha
cwtl
pop
dec
das
pop
push
sbb
dec
cmpsl
xor
js
pop
push
xchg
test
cld
push
mov
mov
das
push
or
imul
mov
pop
test
or
and
rclb
jno
xchg
push
cli
test
push
adc
gs
cmp
in
call
mov
push
clc
lods
xchg
fs
lods
push
ret
mov
fstpt
cld
rorl
xchg
or
call
subb
popf
push
cmp
pop
lods
scas
popa
jge
or
add
rol
xchg
movsb
and
movsl
lods
push
iret
in
add
rcl
and
out
movsl
mov
addb
ficoms
sahf
cmp
push
nop
mov
shll
shrl
scas
repz
divb
lcall
dec
push
fsubrl
lods
and
rcl
ret
jne
mull
and
pop
fdivl
addr16
adc
mov
and
test
adc
dec
pop
insl
mov
cmp
push
nop
inc
xor
add
scas
pusha
std
jb
xor
bound
in
sub
cmp
mov
iret
and
pop
cmpsb
shl
dec
cmp
jbe
and
xlat
push
mov
lcall
dec
adc
pop
fldl
sub
es
aaa
jne
xchg
negb
or
stos
sbb
jb
mov
daa
sub
or
leave
push
xchg
jno
add
or
ret
add
jne
xor
das
popa
sub
push
nop
int3
scas
adc
inc
jl
dec
mov
push
lods
lock
pop
fwait
sub
adc
dec
fucomp
jb
sub
dec
addl
mov
cmpsb
or
or
inc
or
sub
xchg
sbb
lahf
testl
imul
jno
cs
pop
outsb
add
or
push
or
mov
xchg
xor
adcl
testl
fsubl
cmpl
lods
pop
jno
jno
add
push
sbb
xchg
shl
mov
out
or
andb
cmp
rcrl
cmp
inc
mov
xchg
pop
dec
js
mov
insl
addl
idivl
in
adc
mov
loopne
shrl
jg
jns
andb
lods
in
cmpsl
aaa
daa
push
mov
lds
jnp
inc
adc
fwait
xchg
enter
or
mov
loopne
xor
xchg
cmp
add
mov
sub
jnp
add
add
mov
arpl
xchg
orl
fildll
sbb
and
cmp
add
adc
jae
jle
outsl
xchg
pusha
sbb
cmp
xchg
mov
adc
xchg
daa
sahf
add
fcmovnbe
movsl
pusha
xchg
xor
mov
push
bound
inc
jmp
and
sub
roll
add
rcr
sub
pop
addl
adc
scas
mov
mov
test
mov
and
mov
sub
fildll
faddl
test
pop
lds
dec
movsl
xchg
es
dec
sub
or
dec
add
shll
lahf
outsb
mov
repz
or
dec
lods
test
das
pushf
add
addr16
push
addb
add
push
sbb
adc
scas
notb
push
andl
pusha
push
mov
sub
movsb
push
pusha
rorb
in
mov
xchg
mov
lock
xchg
and
icebp
and
mov
inc
push
sbb
aas
add
movsb
inc
mov
xor
adc
sbb
jmp
int3
jmp
adc
xor
xchg
push
test
test
pusha
stos
sub
repz
cmp
in
and
stos
xor
or
je
mov
cmp
and
inc
insl
adc
call
push
iret
mov
jecxz
mov
mov
aad
mov
sub
xor
inc
or
mov
xchg
inc
add
imul
dec
iret
adc
add
subb
mov
mov
pop
out
push
iret
push
pop
or
out
pop
dec
cmpsb
pop
inc
icebp
jo
adc
adc
sar
les
das
fisubrs
cmc
xchg
xchg
adc
pop
lea
sbb
adc
xor
dec
xor
sub
sbb
imul
inc
dec
icebp
cwtl
pop
shlb
fistpll
fcomps
daa
andb
pop
or
es
insl
xchg
fnstenv
ret
xchg
repnz
enter
mov
fstl
xchg
xchg
adc
add
stos
insl
pop
add
mov
sbb
sbb
push
iret
mov
xchg
leave
mov
add
or
sub
movsb
stos
sbb
mov
sahf
loopne
mov
push
mov
xchg
mov
sbb
jbe
and
mov
inc
push
jg
sbb
and
xchg
dec
cmp
jo
icebp
adc
or
sbb
push
and
imul
mov
nop
fidivl
add
out
sbb
mov
fs
outsb
lods
mov
ljmp
mov
scas
xchg
nop
mov
dec
sub
jmp
sub
mov
mov
jb
adc
mov
jne
daa
bound
pop
icebp
xchg
outsl
test
movsl
and
push
jp
jp
sbb
xorl
add
out
testw
sbb
xlat
sbb
dec
movsbl
pop
mov
xchg
les
cmp
rcr
push
mov
mov
sub
xor
lock
mov
mov
pop
lods
and
sub
dec
popf
int
mov
mov
ret
dec
and
stos
pop
sbb
out
mov
test
push
sbb
or
jae
push
psubsw
jo
sbb
cmpsb
gs
add
mov
js
sub
push
je
je
push
cmp
or
mov
pop
sbb
vmulss
pop
push
pop
push
in
xor
fisubl
int
ret
xor
cmp
loop
xchg
test
inc
pop
xchg
in
cmp
push
sbb
stos
or
notb
dec
mov
bound
mov
xchg
test
pop
adc
sub
mov
pop
fs
loope
das
lcall
mov
cmp
lods
pop
add
cmp
add
mov
cmpsl
dec
cmp
xchg
dec
inc
inc
pop
adc
ret
push
or
test
sbb
jg
fldcw
and
fiadds
mov
loope
pop
push
push
out
add
adc
pop
xchg
jnp
shlb
pop
pop
repnz
push
jp
aaa
push
das
inc
sub
and
ja
push
mov
jne
jo
inc
mov
sub
sarb
mov
add
dec
pop
lcall
mov
pop
cmp
lock
mov
outsb
sbb
xlat
mov
push
pop
fucomp
sbb
arpl
or
xchg
xchg
nop
sub
outsb
xorl
leave
iret
mov
ss
daa
jecxz
loopne
imul
pop
and
pop
push
jmp
mov
pop
xor
into
repnz
cld
mov
ret
add
pop
add
imul
dec
sti
cmp
and
add
mov
dec
xchg
sub
sub
pop
dec
stos
mov
sub
and
lcall
adc
mov
pavgb
hlt
loope
sbb
ja
divl
ret
leave
sahf
inc
xor
push
addb
sbb
dec
into
cmp
fdivs
les
push
jp
icebp
cmpsb
test
jecxz
js
ss
pop
shll
test
dec
aad
pop
sub
lock
daa
xchg
mov
dec
ret
mov
cmp
xchg
inc
jno
arpl
scas
and
test
xchg
or
inc
or
dec
sbb
or
addb
cmc
push
imul
pop
insb
inc
xchg
jnp
in
mov
xchg
je
faddl
gs
cmp
inc
out
stos
lock
addb
sub
push
push
add
test
ss
xchg
test
mov
es
cwtl
inc
int3
ds
sbb
shr
lods
cmpsb
je
into
lock
xchg
or
clc
push
sub
sbb
orl
mov
test
aad
pop
fwait
lahf
mov
push
push
xchg
jae
mov
jo
or
cmp
out
js
sub
outsl
push
jp
add
and
inc
xchg
push
ret
cmp
lret
dec
pop
adc
push
add
das
mov
jg
das
inc
call
mov
test
dec
and
outsl
push
aas
mov
icebp
pushf
cwtl
add
fs
jnp
or
xor
inc
sub
shll
adc
addb
mov
push
add
xor
inc
test
inc
jbe
icebp
outsl
pop
mov
mov
add
adc
xchg
xlat
stc
push
mov
testl
insb
pusha
mov
and
push
andb
or
mov
mov
push
lds
addr16
xchg
nop
jb
mov
xchg
out
rcrb
test
mov
fisubrl
push
sti
incl
xor
movsb
imul
addr16
imul
lahf
cltd
aam
pop
pusha
mov
and
lcall
inc
stos
stos
add
dec
xor
lret
ret
orb
ret
sahf
mov
lea
mov
cmp
jg
adc
push
cli
xor
xor
ret
out
cwtl
iret
jge
mov
bound
jp
call
sbb
mov
js
xor
dec
sub
sub
aaa
mov
and
sbb
nop
icebp
cs
int
cmp
ret
cmp
xor
lds
push
or
addr16
lds
xchg
loopne
pusha
cmpsl
popa
rclb
push
cltd
adc
jne
mov
mov
push
push
addl
mov
leave
aam
sbb
ret
jle
sbb
rcrb
cmpl
insl
and
lods
lahf
sbb
std
out
inc
or
xor
lods
add
pop
mov
xor
aaa
jp
cmc
sarb
add
sub
inc
jmp
add
mov
fisubrs
cmpl
add
call
jge
add
fcmove
movsl
je
cmp
fnstcw
adc
lahf
loope
loopne
out
mov
lods
push
outsl
mov
jecxz
int3
fistpl
lea
enter
mov
push
add
push
push
and
add
out
and
cli
adc
das
push
cmp
xchg
fimull
cmp
js
push
lods
iret
push
sbb
js
dec
mov
dec
sbb
in
cmc
andl
scas
mov
lods
sub
decb
sub
add
imulb
sub
cwtl
sub
sub
dec
sahf
cmpb
daa
mov
push
icebp
lds
or
outsl
pusha
inc
jno
inc
mov
stos
xchg
mov
push
lods
xchg
adc
sbb
mov
mov
pop
or
adc
add
push
rcrb
sbbb
leave
daa
mov
cmp
jp
adc
or
mov
sbb
inc
or
cmc
addl
pop
es
lret
or
into
jle
test
push
insl
or
jmp
pushf
sbb
stos
ss
push
xorl
push
push
push
cmp
mov
insb
xor
loopne
mov
xor
xchg
ds
and
jge
push
ret
adc
xor
loope
int
xchg
fisttps
adc
xchg
pop
ja
push
out
daa
rolb
in
ficomps
cmp
adc
dec
add
add
add
orl
movsl
fs
popa
cmc
dec
sbb
cmp
and
and
ds
adc
pand
push
jo
add
mov
test
call
aad
add
or
jne
in
fcmovnu
jle
rcrl
stos
pop
shrl
scas
mov
cli
mov
sbb
test
or
inc
mov
rolb
test
lret
xor
jo
sbb
test
cmp
push
pop
outsl
inc
scas
outsl
jns
xchg
pop
call
ret
and
sbb
adc
ja,pn
xchg
sub
cmp
xorl
mov
push
ljmp
add
arpl
adc
jo
test
iret
sub
pop
pop
out
cmp
out
mov
iret
nop
xor
inc
push
es
mov
add
arpl
ficoml
adc
dec
push
shl
cmpsl
sar
sbb
inc
cmp
xchg
pop
pop
or
and
movd
fs
sbb
fwait
repz
in
add
fsubrl
xor
loopne
movb
icebp
outsb
dec
add
test
inc
xor
push
or
sbb
movsb
adc
or
sub
insl
cmpsb
ss
into
sub
and
dec
add
xchg
add
or
xor
shrb
mov
rcrl
mov
outsl
pop
pop
cmpsb
mov
test
xchg
cmpsb
xchg
push
push
lea
shll
fadds
or
jl
xlat
sahf
iret
inc
shlb
into
pop
das
movsl
iret
in
pop
sub
int3
leave
ja
mov
out
repz
pop
mov
cld
sti
dec
test
and
pop
in
add
roll
or
or
sahf
test
aam
das
push
out
push
negb
sar
and
mov
orl
inc
outsb
mov
jae
icebp
mov
sarb
mov
lret
fsubs
mov
dec
test
sub
popa
repz
mov
sbb
call
filds
sbb
cwtl
les
lock
adc
out
cmpsb
addl
inc
dec
sbb
movsb
ds
inc
test
dec
sub
test
and
inc
aaa
pop
lods
das
andl
lahf
test
movsl
fnsave
add
cmp
test
push
shr
sub
fimull
pop
xchg
and
sbbl
popa
and
add
in
test
pusha
aaa
jno
pop
pop
inc
arpl
mov
push
mov
add
add
inc
sbb
dec
sub
rol
or
fs
enter
cmp
test
xchg
push
and
mov
inc
xor
loope
adc
xchg
clc
dec
cmp
jno
iret
fiadds
xchg
cmp
pop
sbb
add
xor
pop
inc
repnz
mov
lea
jmp
mov
xchg
dec
mov
mov
jne
cmp
pmulhuw
rorl
dec
clc
popf
bound
shrb
int3
jmp
mov
inc
sbb
rorl
pop
mov
sub
fwait
xor
or
ret
mov
popa
in
add
test
add
icebp
xlat
pop
lock
push
fisttpl
and
rolb
ljmp
mov
xchg
pop
ucomiss
xchg
mov
movsl
adc
cmp
push
sub
or
inc
loop
pop
mov
xchg
xchg
adc
inc
push
mov
cmp
cs
push
or
xchg
push
sbb
and
add
add
push
dec
es
push
and
stc
out
jp
in
cmp
les
cmp
adc
add
adc
movzbl
or
roll
fsts
and
cmp
stos
add
pop
rcrb
or
cmp
push
mov
in
push
push
adc
rolb
jno
jge
adc
add
fcoms
inc
jp
ss
mov
negl
jbe
mov
or
lds
or
jne
xor
mov
xor
sarb
lods
adc
lea
sub
and
lahf
jne
es
push
ret
ret
pushf
xor
add
lret
jo
and
sbb
in
in
mov
mov
xor
and
xchg
rolb
jle
in
xchg
mov
pop
or
add
loopne
xor
arpl
ret
in
nop
adc
mov
xchg
and
jl
adc
sbb
adc
aaa
aam
xor
ret
inc
and
fmull
mov
cmp
sub
jnp
xchg
sbb
out
fs
mov
xchg
cli
sbb
insl
cmp
mov
in
add
sub
data16
and
mov
jmp
sub
push
sti
cltd
or
xchg
rolb
push
pop
aaa
mov
cld
add
push
inc
or
ss
inc
mov
scas
push
lahf
inc
jecxz
xor
sub
iret
inc
out
shll
xlat
aam
dec
push
fistps
jmp
in
ret
fst
lret
mov
daa
adc
xchg
inc
jg
dec
jg
das
movl
loope
jg
fildl
and
mov
ret
loope
inc
mov
outsb
arpl
inc
mov
mov
sbb
mov
pop
xchg
push
cmp
or
add
cmp
sahf
jno
lds
ficoml
xchg
mov
inc
xchg
adcb
push
sbb
sbb
xchg
xor
sbb
sbb
pop
popa
in
roll
add
sub
jns
add
pop
scas
and
and
inc
mov
call
xchg
add
dec
shlb
aaa
cwtl
mov
cmpsl
insb
rolb
sarb
pop
cmp
insl
cmpsl
push
daa
or
sbb
jb
imul
pop
jl
clc
pop
fs
adc
mov
sbb
iret
push
imul
add
inc
or
mov
xorl
test
mov
add
sbb
test
popa
mov
les
jle
dec
cli
dec
push
xor
sbb
arpl
push
mov
mov
lods
push
insl
push
fnstenv
jae
cltd
stos
pop
imul
sub
ret
aam
sbb
pop
orb
into
push
andb
test
sub
call
lds
xchg
xchg
sbb
sbb
test
pop
lock
and
push
fs
pop
sbb
in
xchg
shrl
jl
dec
gs
pop
mov
jge
andb
sarb
ds
fld
out
rolb
mov
outsl
jns
nop
js
popf
and
aad
mov
insl
lea
mov
in
in
mov
mov
inc
dec
or
test
lds
and
pop
das
dec
xor
cs
sub
jl
ret
dec
fcmovnb
push
ds
gs
cmp
ss
cmp
cwtl
add
les
mov
and
or
jg
cli
adc
adc
int3
mov
inc
add
enter
jg
jl
dec
add
cli
or
sub
imul
ds
adc
sbb
jae
stc
jecxz
dec
inc
and
jno
loopne
dec
loopne
js
lods
pusha
dec
fwait
scas
popa
sti
and
popa
jnp
mov
je
jg
or
fsubs
inc
sub
adc
jnp
dec
pusha
rorb
cmc
cmp
pusha
or
stos
icebp
adc
in
mov
popl
mov
xchg
jne
out
arpl
iret
int3
inc
xor
push
adc
cmpsl
shll
cmp
or
sbb
and
xchg
sahf
pop
ss
jae
rcl
mov
xor
adcb
stos
sti
lea
and
mov
mov
add
mov
dec
sbb
mov
test
or
inc
adc
xchg
fs
add
and
mov
pop
test
mov
xchg
pusha
movl
clc
popa
and
or
ror
lock
sti
in
pop
ret
mov
push
mov
push
adcl
push
cmpl
pop
or
and
sub
andl
inc
jns
lea
pusha
mov
mov
loopne
js
adc
gs
pushf
or
outsl
mov
dec
arpl
cld
icebp
test
push
dec
mov
out
mov
mov
std
push
pop
cmpb
sahf
pusha
scas
mov
adc
fld
inc
orl
push
mov
mov
mov
mov
das
add
jmp
xchg
testb
mov
rorb
test
dec
mov
shrb
fstpl
imul
cs
pop
rorl
inc
js
lret
ficomps
cmp
and
mov
mov
xor
dec
clc
mov
mov
mov
add
sub
pop
inc
sub
add
mov
inc
aas
pop
push
sbb
addr16
std
mov
mov
lahf
mov
inc
push
into
ja
xor
push
out
ljmp
imul
adc
sbb
loopne
imul
ljmp
ret
xchg
stos
xchg
push
out
jo
mov
aad
dec
adc
movsb
xor
mov
addb
jae
mov
push
popa
sbb
xchg
sahf
rcrb
es
fld
cmpsl
sub
mov
lods
and
mov
xchg
sbb
insl
cld
jno
hlt
lret
shll
mov
and
add
in
addb
rcrb
pop
adc
xor
sbb
push
mov
lods
mov
nop
lock
inc
jmp
adc
aaa
pop
addb
sahf
and
xlat
jo
scas
jo
adc
loope
pop
cltd
adc
dec
and
in
idivb
adc
je
sbb
dec
pop
pop
clc
imul
push
cmp
orb
push
adc
out
dec
imul
pop
xchg
cmp
pop
dec
outsb
jmp
rorl
fadds
pop
adc
sbb
lea
jge
movb
pextrw
pop
cmp
mov
popf
sar
cs
cmp
fists
cmp
dec
lods
mov
and
nop
sbb
add
iret
sub
icebp
popa
fs
xor
xchg
jnp
or
jbe
sti
js
fstl
add
mov
inc
aad
pop
and
xchg
cmp
iret
lret
ret
fcomps
sbb
imul
xchg
pop
iret
jns
insb
mov
or
mov
sub
cmp
lahf
jg
stos
cmp
add
add
pop
and
jmp
pop
inc
mov
xor
out
scas
xlat
js
add
xchg
sbb
dec
mov
pop
lret
add
add
test
insl
imul
lea
addr16
mov
divl
out
rol
push
fildll
lret
ljmp
mov
mov
jle
sub
pop
and
arpl
cmp
add
cmp
mov
xchg
daa
mov
push
jp
and
jns
add
comiss
sub
loopne
cli
call
addb
dec
mov
or
mov
jno
add
fwait
xor
daa
scas
mov
aad
rcrb
mov
xor
xchg
popa
inc
push
lret
jo
push
sbb
adc
xor
fcoml
js
ror
mov
loope
pusha
adc
test
adc
orb
lret
hlt
pop
aaa
mov
cwtl
add
push
nop
hlt
adc
inc
sbb
cmp
or
insl
mov
ss
fdiv
data16
in
mov
test
dec
mov
push
adc
std
into
sahf
xchg
les
cmp
rorl
pusha
sbb
xor
or
into
iret
dec
icebp
push
push
sbb
mov
mov
adc
dec
aam
insl
fsubl
lret
lea
lret
or
add
add
nop
in
das
dec
or
xor
adc
and
mov
sub
xchg
mov
test
dec
frstor
xor
cli
pop
or
andl
or
dec
lock
pop
lock
icebp
and
stos
sub
push
xchg
jge
mov
sbb
fisttps
movsl
out
mov
fsubrs
inc
into
jbe
iret
adc
stc
and
sbb
cwtl
rol
mov
xchg
mov
and
sahf
movzbl
push
in
push
inc
xchg
xchg
pop
js
js
add
push
inc
jl
push
es
ret
pop
cmpl
ret
pop
cmp
sub
xchg
xchg
lea
or
add
aaa
sbb
mov
xor
iret
xchg
je
push
adc
mov
enter
rcrl
xlat
sub
test
repnz
mov
aam
add
sub
imul
insl
fisubrl
add
insb
jecxz
sub
jb
bound
pop
push
aam
in
inc
mov
sub
xchg
fnstcw
xchg
jle
iret
sub
inc
mov
cmpsl
lock
pop
cmp
cmp
push
xchg
push
in
pop
pop
clc
inc
sbb
es
pop
sbb
adc
sbb
mov
lods
mov
dec
jbe
jo
test
push
mov
add
or
inc
mov
shll
pop
sub
test
stos
sbb
cmp
cmc
mov
sbb
dec
dec
sub
lods
nop
loope
sbb
adc
mov
adc
push
sub
lods
les
pop
andb
pushf
push
push
cmp
js
popf
adc
outsb
and
shrb
cmp
fidivrl
jnp
xchg
add
or
sub
xchg
imul
adc
pop
push
ljmp
push
sbb
or
pop
mov
pop
iret
xor
inc
sub
push
jbe
push
dec
or
test
sub
inc
es
mov
gs
pushf
mov
inc
fs
cmp
out
push
adc
pusha
in
loope
ret
fdivs
inc
fcoms
dec
push
add
mov
add
sub
cmpsl
les
daa
nop
adc
and
jl
add
mov
aad
mov
push
dec
push
mov
jo
outsb
or
or
shll
mov
add
cmpsb
pusha
cmc
mov
fstpt
xor
lret
fs
push
pmaxub
jbe
inc
cli
add
lods
xor
mov
add
sti
adc
imul
jae
into
push
mov
rol
dec
pop
add
dec
test
movsb
daa
stc
call
inc
xchg
xor
cmpsl
sbb
stos
subb
inc
loopne
xchg
jb
jne
dec
add
cmc
xlat
outsl
sbb
stos
add
cltd
push
xchg
or
in
mov
and
negl
das
dec
add
inc
in
addb
jno
lcall
sbb
sarb
dec
mov
ds
pusha
and
jp
sub
lret
cli
mov
or
adc
or
push
outsb
sbb
enter
les
pusha
dec
pop
cmp
cmp
test
adcb
mov
mov
clc
movsb
jp
loopne
add
xchg
idivl
popf
and
mov
pop
and
rcll
dec
push
xor
data16
push
cmpl
aas
lret
es
or
jnp
cltd
jge
icebp
mov
sub
add
imul
and
cmpsb
adc
pop
lods
dec
or
test
inc
or
daa
pop
xchg
pop
adc
or
push
pop
iret
hlt
aad
cmpsb
call
push
jg
cmpsl
mov
sub
or
pop
mov
jmp
dec
aam
adc
mov
push
add
icebp
mov
rcrb
mov
dec
mov
icebp
push
addl
cmp
addr16
push
push
mov
jo
push
and
mov
mov
sbb
xor
cmp
loopne
movsb
pop
pop
das
and
sub
gs
fdivp
fs
scas
lock
dec
xor
pop
call
pop
jmp
sahf
insw
push
test
mov
xchg
rcll
dec
int
sub
loopne
test
pop
int
push
sahf
loope
jg
jg
jle
mov
ja
jge
add
sub
das
and
dec
int3
mov
mov
adc
movsb
sbb
xlat
add
push
xchg
aaa
pop
ljmp
mov
and
add
andb
xchg
jge
dec
movsb
dec
pop
dec
jo
repz
mov
js
les
xchg
cmp
xchg
ja
jbe
jge
lret
xchg
clc
xchg
lret
jle
jmp
lock
jnp
add
inc
jle
sahf
pop
andb
xchg
in
je
cmc
inc
ss
jecxz
loope
inc
sub
or
mov
insb
and
xor
leave
dec
popa
mov
outsl
aad
ss
mov
sarb
xor
movsl
lods
mov
and
sbb
insl
shr
loope
push
cmp
scas
arpl
xor
ret
adc
jecxz
sbb
xchg
mov
sbb
cmpb
add
mov
mov
daa
ret
or
add
out
xchg
or
movsl
mov
and
mov
pop
hlt
pop
ljmp
lods
movsl
add
cli
movsl
leave
cli
andl
call
push
cmp
inc
pop
bound
xchg
les
push
or
sub
jbe
imul
or
js
arpl
or
iret
lahf
push
frstor
stos
out
mov
in
lods
cmpb
cmp
push
pop
sahf
adc
out
xlat
xor
cwtl
scas
or
cmp
jecxz
lahf
test
lds
push
lods
pop
bt
loop
aam
jg
add
adc
add
repz
loopne
lock
insl
or
shlb
lock
js
sarl
mov
mov
inc
adc
mull
pop
or
test
mov
mov
xor
sbb
adc
sub
add
ss
pop
cmpsb
daa
sbb
xlat
xor
lods
push
lods
and
inc
sarb
rorb
stc
fisttpl
clc
push
jnp
inc
shlb
mov
leave
stos
inc
fs
movb
les
add
sbb
add
imul
imul
and
adc
dec
shrl
pop
add
jl
xlat
or
cmp
popa
dec
ret
test
mov
mov
aaa
xchg
pop
fcomps
shlb
dec
pop
cld
popa
xchg
sbb
mov
popa
jnp
idivb
imul
mov
adc
std
pop
stos
imul
popf
in
pusha
mov
roll
movsb
lahf
and
loope
and
imul
jge
cmovp
sbb
lods
ficomps
idivl
lods
fdivs
cmp
jmp
sub
sub
aad
rcl
dec
fidivs
mov
scas
imul
test
or
inc
pop
fsubrs
std
ljmp
cld
jecxz
jp
pop
outsl
int
movsb
dec
inc
es
cmp
lds
cmc
inc
inc
fsubrl
in
pop
sub
and
jp
fucom
fs
xchg
stc
sbb
push
loopne
sbb
and
add
movsl
mov
inc
and
out
mov
fstl
push
push
and
loopne
scas
enter
es
aas
adc
cmp
adc
and
mov
test
sub
jmp
mov
cmpsl
pop
mov
repnz
xchg
cmc
ret
dec
shlb
inc
icebp
push
jge
sub
add
jp
jmp
addl
xchg
jp
cmp
add
ss
or
add
inc
lahf
into
cltd
nop
jnp
xchg
mov
or
push
rclb
call
inc
dec
sub
push
xchg
cmp
lret
cmp
sbb
fld
push
mov
mov
cwtl
xor
sub
movsl
xor
add
jne
scas
xchg
xchg
jecxz
mov
fwait
out
dec
push
mov
scas
push
insb
xchg
pop
push
jnp
data16
fcoml
sbb
mov
ficomps
pop
repz
sti
adc
xchg
push
cmpsl
rcll
lods
clc
test
xchg
jg
adc
iret
adc
dec
add
jl
das
enter
jae
mov
dec
lea
cmp
cmp
inc
in
lods
outsb
xchg
nop
or
add
cmp
sbbl
fnstsw
test
mov
mov
cmovl
int3
sub
sub
adc
rcl
and
out
add
mov
js
xlat
int
les
fcoml
push
sarb
stos
lods
andb
xor
sub
xor
sub
out
clc
jmp
add
out
cmpsb
ret
mov
decl
dec
dec
pop
fnsave
pop
cmp
dec
pusha
mov
sub
icebp
aam
pop
and
adc
sub
insl
jns
testb
cmp
xchg
dec
out
dec
ffreep
mov
rcll
sbb
jmp
repz
outsb
es
add
jne
test
lret
or
mov
jmp
iret
adc
xchg
push
add
ljmp
loope
shll
jge
jle
sub
loope
rcrb
or
jge
mov
sbb
or
sub
fcoml
xorl
insl
inc
sti
sub
lods
mov
cmc
sub
push
and
sbb
dec
lret
mov
xchg
mov
xlat
addb
jb
cmp
dec
addb
or
bound
mov
xlat
imul
rcrl
xor
outsb
in
or
subl
fcos
push
je
mov
adc
and
sub
jbe
dec
jge
cmp
jle
adc
and
sbb
add
add
pop
das
icebp
mov
mov
xlat
into
frstor
add
int3
dec
xchg
push
shr
or
mov
sub
movsb
jne
xor
fisubl
addb
jnp
push
popa
mov
sub
mov
pop
xor
test
insb
in
fnstenv
bound
sbb
rclb
adc
pop
rolb
insl
jle
lock
xchg
lahf
es
dec
bound
ss
lea
in
add
sbb
adc
lods
outsb
hlt
mov
out
mov
or
in
ja
add
pop
and
mov
ret
sub
mov
aaa
lods
adc
cmp
psrld
test
rorl
pop
inc
adc
enter
rolb
add
sub
cltd
cmp
pop
shll
sbb
mov
vaddss
jo
stc
stos
sbb
iret
jg
mov
pop
add
pop
pop
roll
or
insb
cwtl
es
inc
inc
cmpsb
push
movl
cmp
arpl
and
mov
or
mov
jno
aas
pop
rcrb
jae
scas
outsb
ret
loopne
movsl
test
xor
cmp
dec
sub
dec
mov
mov
jno
dec
hlt
and
mov
gs
xor
loope
add
mov
push
adc
bound
add
call
cmpsl
pop
pop
addr16
stc
adc
cs
loopne
mov
mov
pop
add
popa
mov
sti
es
stos
stc
jecxz
jmp
push
mov
inc
xchg
sub
ficoms
mov
mov
test
dec
cmc
push
xlat
outsl
test
push
popa
ret
repz
les
arpl
mov
lcall
adc
popa
jmp
movsl
jb
push
xchg
xor
adc
pop
imulb
xchg
test
mov
les
xchg
ds
jae
sub
es
ret
iret
lods
dec
aaa
cs
aam
cmp
dec
mov
sub
out
push
mov
pop
cs
inc
add
xchg
sub
mov
in
movsl
push
adc
rorl
and
inc
mov
xor
movsl
pop
add
sub
jg
mov
inc
push
out
jo
mov
hlt
movsl
mov
inc
or
cmp
fisubl
add
sahf
fwait
mov
faddl
iret
add
aas
add
push
adc
inc
xchg
pusha
loop
out
aas
or
or
xor
add
sbb
or
aad
jmp
pop
push
add
pop
mov
cs
push
repz
inc
stos
adc
lret
js
add
shrl
add
flds
sub
inc
sub
ljmp
inc
pop
sbb
pop
inc
ret
cmc
outsl
outsl
dec
xor
xchg
mov
cmp
dec
mov
add
cmp
insb
cmp
mov
ljmp
stos
dec
jl
or
pop
mov
imul
stc
jae
sbb
in
add
xlat
push
jmp
adc
sti
jmp
testb
repz
xchg
mov
scas
adcb
xor
fprem
test
lcall
daa
xchg
add
int3
pop
call
and
mov
adc
push
mov
inc
test
aas
jb
fistpl
jo
push
in
stos
mov
jb
push
sbb
int3
cmpsl
dec
stos
mov
test
push
push
cmpsl
ljmp
and
enter
xor
filds
add
ficompl
call
push
xchg
mov
sub
inc
imul
outsb
lret
sbb
js
jbe
jnp
loopne
xchg
inc
lahf
sub
xchg
das
ljmp
push
xchg
out
cmp
movb
std
stos
xor
scas
in
jno
add
jo
adc
ss
cmpsl
shlb
jmp
add
mov
es
das
iret
ret
push
xor
xchg
mov
sub
mov
bswap
mov
arpl
mov
push
sbb
dec
iret
xchg
clc
rol
sti
dec
inc
jno
xor
mov
cmpsl
cmpb
test
mov
xorl
lods
pop
sbb
lahf
pop
out
xor
out
pop
cmp
gs
pop
jp
cmpsb
inc
and
bound
sbb
sub
add
flds
bound
push
pop
add
mov
or
jmp
sub
push
shrl
dec
pop
sub
jecxz
addr16
add
or
xor
sbb
pushw
sub
gs
inc
cmp
es
in
xchg
dec
and
push
mov
mov
and
xor
incb
test
dec
adcl
mov
stos
and
mov
dec
mov
mov
xor
adcl
je
movsb
push
fisubrl
ret
scas
push
stos
push
mov
pop
movsb
add
xchg
dec
dec
lods
nop
inc
ret
or
stos
dec
jmp
xchg
aam
or
inc
jle
xor
sti
jmp
js
and
clc
daa
xor
cmp
nop
in
xchg
fxch
mov
cs
roll
rclb
insb
sub
push
sbb
inc
test
imul
imul
pop
out
daa
scas
jne
out
xchg
iret
add
pop
insb
ljmp
dec
dec
mov
xchg
mov
xchg
sbb
add
add
fdivrl
xorl
inc
push
or
and
ss
or
jne
pop
mov
ret
dec
mov
ret
shrl
scas
daa
pop
mov
ret
hlt
call
jb
lret
out
sbb
mov
dec
imul
popa
pop
shlb
pop
cmpsb
jge
xchg
hlt
fstps
aam
mov
cmp
lods
dec
sbb
adcl
popf
or
sub
sbb
adcb
and
test
daa
cs
dec
mov
pop
sub
rorb
cmp
aam
lret
jo
lock
mov
inc
test
pop
push
push
add
mov
orl
push
push
add
aam
scas
out
aam
and
iret
imul
xor
xchg
incb
push
sub
mov
xor
jbe
stos
dec
mov
jne
mov
sbb
andl
repnz
xchg
scas
dec
jne
imul
cmp
mov
pop
call
lahf
mov
es
rorl
into
ret
in
inc
test
test
push
push
leave
add
xchg
aaa
inc
push
iret
xor
lcall
sbb
fcoms
fwait
ds
inc
in
add
xchg
outsl
push
pop
pop
pop
outsl
subl
add
or
push
mov
mov
std
sbb
dec
es
mov
jge
and
jo
ja
mov
pop
adc
inc
or
jge
daa
lcall
sub
lds
pop
dec
add
pop
dec
jl
repnz
es
adc
xchg
xor
in
xchg
and
mov
pop
or
popa
arpl
mov
and
int
add
lods
adc
dec
sbb
int
mov
sti
mov
xchg
pop
hlt
xor
push
ret
or
and
xchg
sub
and
enter
sub
test
jae
out
sbb
andb
rcrb
pop
mov
jle
ds
add
xchg
js
push
sbb
xlat
xchg
orb
cmc
stos
cmc
xor
sahf
xchg
loopne
test
pop
aad
mov
loope
adc
mov
jecxz
push
pop
push
gs
lea
pop
in
dec
mov
xchg
cmp
adc
insb
adc
fldl2e
pop
in
cmp
jb
and
add
daa
mov
mov
test
mov
add
bound
lea
xor
sub
inc
cmp
in
sbb
xchg
repz
stos
pop
pop
ret
adc
addl
or
add
imul
pop
out
sub
mov
fisttpll
lea
cmp
test
add
pop
xchg
mov
sub
xchg
inc
push
cs
out
xchg
or
inc
into
stos
adc
sub
aam
pop
pop
mov
jo
aas
cmp
ljmp
pop
or
or
inc
xor
sub
rorl
dec
stos
pushf
sbb
nop
out
sub
sub
cmp
add
xchg
and
push
jp
js
fs
cli
or
das
xchg
dec
sbb
subl
lods
jnp
pushf
dec
js
and
xor
and
enter
mov
cmp
sbb
xchg
addb
seto
jbe
and
test
sbb
fadds
test
push
and
pop
xor
es
cmp
jb
aaa
subb
mov
lds
xchg
andb
mov
in
mov
rolb
inc
je
xchg
fidivs
mov
and
pop
and
xor
xlat
xor
dec
addr16
or
or
addr16
push
sub
popa
ljmp
imul
inc
adc
mov
inc
mov
pop
xor
mov
rcll
cmpsl
in
sub
sti
adc
aam
mov
sub
cmp
outsl
mov
pop
mov
jns
subl
or
pop
test
sbbb
outsb
push
pop
jp
cmpsl
pop
iret
into
push
or
mov
pop
inc
jae
pop
adc
adc
xchg
xchg
fnsave
xor
xor
sub
iret
sbb
cmp
cmp
mov
addb
pop
or
arpl
pop
in
jb
das
inc
inc
das
inc
mov
lea
out
ret
inc
jno
mov
std
dec
pop
mov
add
push
jns
mov
ret
test
les
call
ja
movsl
mov
mov
fnsave
xor
xchg
movsb
push
std
add
daa
pop
or
fldcw
mov
xor
loop
outsl
lods
out
push
xor
fsubrp
adc
xchg
mov
insb
pop
and
into
or
sub
loop
test
add
add
sbb
cli
add
shl
and
add
loopne
lret
or
fistl
sti
xchg
sarb
lods
jp
fwait
es
dec
fwait
insb
lods
push
in
sub
iret
aaa
push
inc
or
or
adc
push
insl
xlat
and
cmc
xor
push
xor
sarb
jno
push
pushf
sub
add
fldcw
call
out
pop
fs
pop
mov
bound
pop
jmp
xchg
push
mov
daa
xor
push
and
xchg
outsl
test
push
stc
in
xchg
push
imul
push
push
lret
add
sub
dec
loop
sub
sub
dec
aam
cmpsb
or
pop
pop
fidivl
push
and
call
jp
cmpsb
mov
cli
mov
add
imul
cwtl
push
jg
mov
sbb
out
test
es
insb
add
inc
pop
pop
testb
movsb
dec
pop
out
rcll
fbstp
loope
push
daa
and
mov
mov
and
pop
sub
repnz
mov
idiv
lods
cpuid
int3
xchg
inc
mov
shlb
iret
negb
addr16
in
dec
push
add
dec
inc
cmpsl
loope
lods
sub
popa
aad
cltd
lods
std
faddl
pusha
icebp
sub
mov
jae,pn
mov
scas
cmp
sub
enter
mov
lcall
xchg
xlat
adc
xor
sbb
sub
dec
js
rcl
jne
icebp
pop
test
mov
movsl
pop
cmp
add
jne
push
adc
pop
add
or
xchg
push
pop
outsl
or
arpl
call
adc
push
popa
fidivs
mov
bound
fcmovu
jecxz
cmp
call
mull
jmp
cmpsl
pop
and
shrb
int3
rcr
inc
mov
xchg
cmp
hlt
inc
pop
in
adc
jecxz
mov
cld
daa
pop
adc
jo
add
jnp
loopne
mov
pop
pop
add
jno
lods
call
rcrb
add
jbe
inc
push
push
jb
rolb
sbb
jo
test
mov
jae
addr16
sbb
jle
sbb
cs
xchg
rcl
or
sbb
add
sub
cmc
xlat
inc
sbb
shll
sub
dec
ret
push
mov
aas
shr
pop
pop
or
cmpsl
adc
xchg
add
lret
imul
pop
mov
cmp
data16
adc
clc
ret
fnstenv
pop
xchg
sbb
push
das
into
sbb
fneni(8087
sbb
arpl
iret
add
mov
test
stos
loop
xor
dec
inc
inc
push
jl
loopne
insl
mov
or
adc
mov
xor
movsl
pop
shl
out
arpl
filds
int
nop
lds
lods
add
loopne
xor
ficompl
sti
in
jns
mov
insl
jge
rcrl
inc
leave
imul
add
ret
push
jge
ds
pop
in
scas
test
inc
mov
or
aaa
add
rorb
jno
rdpmc
cmp
sbb
cmp
xor
xchg
jae
fisttpl
daa
shrl
repnz
inc
in
or
lret
nop
dec
pop
dec
sub
sbb
dec
dec
lds
xorl
xchg
pop
sbb
fldt
xor
inc
cli
bnd
movsl
dec
sub
adc
sahf
repz
filds
xchg
lret
loope
cmp
test
pusha
orl
xchg
xchg
inc
sbb
jb
lock
sub
stos
mov
mov
push
fnsave
inc
insb
ffreep
adc
sbb
dec
jp
jnp
dec
jl
mov
mov
subl
rorb
xchg
int3
pushf
and
in
or
push
and
enter
daa
cmp
repz
xor
or
aad
mov
enter
sub
inc
xchg
adc
shlb
cmp
rorl
mov
pop
outsb
push
xchg
loopne
jnp
lock
daa
lret
ret
dec
cs
sub
cs
loop
mov
mov
sbb
scas
sarb
pop
add
pop
jbe
push
repnz
xchg
adc
or
jns
hlt
adc
ret
cmp
jecxz
mov
pop
mov
inc
cli
lds
sub
ja
mov
add
push
test
jecxz
mov
ja
jmp
pop
mov
dec
jb
in
imul
pop
push
das
jne
sbb
xchg
cmp
cmp
push
cmp
cwtl
pusha
xor
rolb
bound
sbb
or
into
popf
insl
das
add
add
sbb
mov
fs
lcall
jecxz
outsl
push
inc
xchg
pop
sbb
jl
stos
add
adc
jnp
add
aas
add
add
stos
sti
xchg
mull
xchg
mov
aam
popa
sbb
pop
insl
hlt
add
cmp
jecxz
adc
mov
fcmovu
pusha
mov
dec
pop
and
push
push
pop
iret
into
cmp
add
and
or
das
pop
inc
outsl
dec
aaa
pop
stos
xchg
and
inc
push
mov
push
lahf
xorl
inc
cmp
push
jp
jne,pn
add
sub
mov
adc
pusha
jae
mov
push
cltd
xchg
mov
mov
mov
jg
and
loop
aas
roll
xchg
sahf
iret
les
fs
iret
pop
xor
jl
mov
inc
add
dec
lahf
fisubrs
xor
add
popf
in
es
sbbb
hlt
adc
adc
push
push
xor
add
stos
push
dec
push
mov
or
ja
mov
dec
or
cmpsb
sub
xor
or
sub
xor
sub
xor
repz
lret
mov
xchg
into
add
call
addb
dec
in
leave
loopne
iret
shrb
or
pop
and
sub
push
imul
jae
or
push
ret
shl
or
stos
cltd
pop
lahf
push
mov
sarl
xchg
mov
stc
loope
sub
pop
enter
sbb
xchg
hlt
cmp
cmp
push
xor
jo
rorl
add
jge
lods
lret
dec
pop
ja
push
imul
int3
push
or
dec
mov
jle
inc
or
xor
sub
fldenv
mov
mov
out
psrlw
mov
add
ss
rorl
dec
test
cwtl
out
mov
push
cmpsb
icebp
mov
inc
int
pop
xor
push
add
inc
imul
arpl
mov
stos
inc
mov
arpl
mov
js
sub
adc
adc
and
add
push
inc
xor
adcb
mov
ss
das
and
pusha
mov
punpckhbw
mov
mov
dec
stos
and
xchg
mov
dec
scas
int3
loopne
sub
lock
js
fisttpll
mov
cs
cs
sbb
ds
gs
lock
xor
add
inc
and
sbb
jecxz
mov
jno
out
test
mov
gs
mov
popa
shll
addr16
add
rcrl
je
std
ror
lahf
cmp
outsl
inc
xchg
add
or
adcl
cld
xor
push
std
ds
sbb
jnp
cmp
and
sub
aaa
push
add
dec
in
std
mov
jmp
fcmovnb
fisubl
shll
out
dec
sub
add
dec
mov
or
sahf
pop
dec
pop
push
push
sbb
mov
movsl
dec
xorb
jmp
dec
mov
lods
xlat
imul
cmpl
mov
fdivrs
outsl
push
js
pop
dec
inc
mov
mov
sub
nop
rolb
ljmp
pop
jmp
pop
push
push
dec
fsubrl
lods
imul
je
sbb
or
outsb
fwait
jge
add
add
cmpsb
jecxz
jge
cwtl
mov
aaa
lds
cld
and
ss
fstpt
and
movsb
cmp
dec
or
pop
xchg
cmp
or
movsb
int
push
sbb
jge
pop
int3
imul
and
sub
mov
mov
mov
sbb
test
mov
loopne
lea
std
pop
pop
xor
scas
sbb
push
mov
push
cmp
stos
adc
lea
test
or
mov
iret
dec
dec
dec
in
js
pop
adc
jle
push
aam
das
push
out
lea
jae
rorb
jne
lods
jecxz
ja
pop
adc
dec
mov
pushf
cmp
popf
test
movsl
lret
dec
add
jno
push
add
jno
dec
sub
inc
test
mov
xchg
inc
int3
xchg
sub
or
dec
arpl
cmp
das
xor
loope
test
add
xchg
xor
mov
test
loope
sub
cwtl
testl
gs
aam
scas
adc
xchg
add
inc
or
mov
imul
or
xor
mov
ffree
push
xor
mov
movsb
cltd
rorl
sub
shr
fdivrs
sbb
mov
cmp
inc
pusha
adc
fs
xor
jae
movsb
xchg
ret
cmp
cmpsb
and
lret
jno
jg
push
or
and
out
adc
or
sub
cmp
sub
push
and
daa
es
jp
mov
sub
and
sbb
fldpi
dec
or
mov
xchg
add
test
inc
mov
out
movlps
repnz
add
push
pop
nop
loope
sub
lcall
pop
cmp
out
sub
pop
add
and
sub
inc
xchg
iret
popa
add
inc
or
rol
mov
addr16
cmc
add
test
push
mov
xor
jecxz
icebp
syscall
and
jne
in
xchg
addb
or
adc
sahf
inc
push
and
cli
insb
or
jp
movsb
add
push
imul
jmp
jae
and
outsb
mov
scas
mov
jo
dec
cwtl
adc
setae
pop
inc
inc
bound
pop
add
add
dec
sbb
dec
les
mov
jecxz
jmp
fmuls
jnp
out
neg
adc
mov
xlat
icebp
aad
insl
add
inc
add
js
add
push
xor
mov
push
fisubrl
loope
je
imul
gs
sbb
adc
and
mov
inc
push
daa
test
mov
push
mov
pop
mov
ljmp
pop
or
jno
jmp
mov
jne
mov
add
pop
add
mov
cmc
mov
decl
and
push
out
lods
adc
sbb
shlb
je
fyl2xp1
sub
out
xchg
ds
add
gs
xchg
or
popa
and
push
jnp
adc
push
and
sbbl
mov
clc
lret
in
jp
pop
decl
movb
push
and
dec
sub
push
repz
sar
js
jp
mov
std
call
fdivp
sub
and
in
cmp
or
jecxz
imull
sti
out
ja
aaa
mov
lret
xor
xchg
pop
cltd
or
mov
outsl
jecxz
imul
test
lods
fcmovnb
in
sub
loope
push
mov
cmp
ret
out
test
jmp
test
cmp
in
pop
xor
push
out
add
mov
test
les
push
and
fwait
sub
nop
ljmp
ljmp
mov
enter
dec
add
inc
pop
mov
and
bound
and
sbb
es
or
jns
or
out
test
cmp
aas
push
sub
sub
cmpsb
out
push
xlat
sub
fisubs
pusha
xchg
scas
aad
sarb
scas
and
add
repnz
mov
int3
bound
add
js
or
in
fistpll
movsb
push
add
dec
lret
jns
pop
stos
sti
sbb
push
or
mov
adc
aaa
sub
ja
dec
push
repz
inc
daa
or
jge
mov
or
inc
fdivs
xor
subb
xor
sbb
inc
mov
adc
leave
mov
pop
add
sbb
xchg
cmp
pop
inc
int3
inc
dec
test
repz
fwait
push
pop
sub
mov
fwait
inc
jge
xor
xor
aaa
hlt
dec
lahf
jmp
imul
fmull
add
push
add
cmp
daa
xor
imul
ret
pop
fadds
mov
es
imul
add
fsts
leave
and
push
push
push
and
dec
pop
fcmove
nop
fmulp
mov
add
xchg
pop
pop
and
sub
dec
xchg
adc
inc
sub
xchg
xor
addb
push
dec
lret
fwait
xchg
xchg
sbb
test
iret
into
leave
add
insb
fists
adc
es
mov
loopne
xchg
add
pop
sarl
addl
rcrl
lret
jle
xor
arpl
dec
mov
sub
inc
lret
jno
mov
sbb
xchg
leave
dec
shrl
cs
les
pusha
and
sahf
pop
xorl
sti
jbe
dec
gs
xchg
ja
pushw
fchs
clc
dec
cmp
jg
or
sbb
cmc
adc
call
mov
and
push
mov
popa
add
pop
and
call
inc
or
inc
in
sbb
xor
mov
idivl
sub
fsubrs
ret
mov
and
mov
cmp
iret
shll
inc
mov
sbb
or
lods
call
aam
addr16
jne
mov
repnz
cltd
lcall
cltd
scas
or
fldcw
test
iret
push
inc
dec
daa
xchg
arpl
shrb
push
jnp
or
daa
std
or
cmp
dec
xchg
shlb
test
jne
loopne
jne
add
rclb
xor
or
mov
xchg
mov
in
lret
adc
push
call
psubsw
or
inc
cmp
xchg
dec
lret
leave
push
sbb
popf
jp
push
popf
jmp
clc
inc
or
stos
ss
adc
jno
mov
push
add
aam
dec
or
leave
cmp
mov
jmp
add
jns
cmp
fs
xchg
fwait
add
inc
daa
jbe
jae
ret
cmc
add
movsl
cmp
push
fildll
ret
lea
and
push
jne
mov
inc
mov
or
int
cmp
inc
sbb
mov
xor
sbbl
inc
pop
je
sub
xchg
sub
add
add
sub
xchg
lods
ret
and
out
or
out
adc
xchg
mov
xchg
popf
and
fisubl
mov
mov
or
cmpsb
push
mov
dec
icebp
lods
push
add
gs
jecxz
pop
mov
add
insb
movsl
xchg
cmp
lret
pop
sbb
int3
ds
add
sarl
xchg
adc
add
pop
push
push
sub
mov
mov
fcoms
xchg
dec
adc
mov
jb
fimull
add
fdivs
cmc
jo
repz
and
lahf
lods
pop
push
fs
mov
inc
lds
ret
mov
jb
int
int3
dec
call
jge
addl
mov
jl
push
in
xchg
cmp
sub
popf
mov
pop
lea
xchg
mov
inc
add
inc
mov
inc
icebp
mov
adcl
shlb
mov
cmp
fcompl
pop
hlt
inc
push
xchg
iret
inc
pushf
mov
sub
mov
xor
test
push
shlb
pop
dec
dec
inc
imul
adc
jo
ljmp
push
inc
flds
sarb
cmp
adc
lods
ret
lock
xchg
adcl
xchg
adc
daa
fadd
inc
rorb
shlb
mov
mov
cli
jp
dec
cli
mov
dec
jne
loopne
mov
xchg
out
cltd
adc
faddl
or
mov
mov
push
cmpsb
mov
inc
mov
add
fs
pushf
xor
iret
or
cmp
add
rorb
sub
shrb
js
lcall
test
js
mov
sbb
adc
add
or
pop
xchg
leave
in
ret
hlt
sub
and
inc
mov
inc
test
das
jno
in
gs
xor
aas
nop
jo
pusha
aas
out
xchg
pop
iret
mov
sub
dec
addr16
xor
shl
pop
pop
inc
sub
cmp
fldt
mov
dec
loopne
cltd
testb
or
or
cmp
or
inc
outsl
jne
sub
mov
jo
popa
and
clc
xchg
push
sbb
dec
clc
inc
aad
add
fs
daa
sbb
mov
lcall
push
jge
arpl
pop
movsl
mov
pop
ss
inc
xor
mov
xchg
push
adc
jle
aaa
or
lock
and
je
sub
xor
out
add
jl
xchg
call
add
jnp
subl
mov
adc
mov
and
jp
xor
lods
pop
inc
daa
dec
icebp
xchg
dec
add
cltd
in
out
repnz
daa
sar
sahf
push
xchg
movsl
add
sbb
icebp
or
mov
xchg
cli
inc
pop
jno
xchg
and
push
jle
rorb
aad
fsubrs
loopne
sbb
dec
fbld
mov
lods
push
addb
das
xchg
or
sub
rclb
pop
jne
sub
stos
es
ss
test
sub
and
xor
call
data16
add
adc
sbb
jne
sbb
inc
out
ljmp
iret
dec
jnp
roll
cmc
sub
sbb
adc
cmp
mov
mov
popa
outsl
push
sbb
mov
fadds
sub
cmc
pop
andb
add
sub
pop
mov
jg
sbb
mov
add
mov
jne
les
jmp
pop
bound
jecxz
gs
adc
or
add
std
pushf
data16
add
orl
das
imul
lret
xchg
mov
add
pusha
popf
outsl
or
iret
add
push
sbb
jmp
push
and
clc
pop
mov
jns
xor
push
xchg
icebp
push
add
jo
insl
loope
outsb
or
dec
cmpsl
ss
mov
adc
js
jecxz
cwtl
es
sbbb
xchg
popf
rcrl
test
pop
aas
inc
sub
sub
pop
rolb
pop
add
test
sub
cmp
mov
scas
pop
and
xor
adc
cmp
xlat
sub
sahf
addb
fucomi
adc
adc
xchg
dec
cmp
rcrl
les
mov
dec
ret
int3
and
push
fcoms
dec
int3
dec
jmp
jl
sub
add
sub
inc
cmpsl
jg
lods
jo
not
jecxz
jae
icebp
mov
mov
push
or
lock
pop
bound
ljmp
adc
jb
ljmp
rclb
lock
wrmsr
shrb
loop
stos
shlb
call
push
popf
xchg
mov
xchg
mov
jmp
iret
stc
ljmp
outsl
xchg
mov
add
sub
ret
jbe
addb
pusha
sbb
add
add
cmpsb
push
mov
cltd
clc
ljmp
xchg
shlb
push
loope
mov
sbbl
jge
jns
popa
repz
icebp
and
and
cmp
mov
bound
stos
and
shr
out
sti
cmc
sti
rorb
adc
ss
add
inc
rclb
mov
in
or
stos
xchg
ret
mov
and
mov
mov
cmpl
ss
xchg
pop
stos
pop
push
aam
bndldx
adc
and
jecxz
dec
fs
adc
pop
xchg
int
add
nop
mov
rol
outsb
fs
lahf
les
sbb
inc
mov
adc
stos
push
fs
xlat
movsb
mov
std
lret
xor
leave
xchg
call
shll
sub
xorb
cmp
mov
mov
mov
push
and
mov
lahf
and
cmp
push
sti
lret
das
pop
xchg
mov
xor
lret
fsubrl
dec
pop
sbb
pop
mov
adc
lret
xchg
jle
add
les
fldenv
cmp
mov
scas
insl
jnp
jb
add
jne
popa
loopne
add
divl
movsl
lea
mov
rorb
pop
xor
sub
gs
lahf
leave
mov
dec
push
xlat
xor
mov
dec
je
call
dec
and
add
cmpsb
add
inc
filds
fpatan
dec
nop
inc
add
push
add
fiadds
pop
aas
mov
dec
loope
jb
sbb
mov
cld
xor
sub
pop
mov
sbb
pop
lods
pusha
fmuls
fidivl
je
jb
cmp
add
out
mov
mov
mov
inc
cwtl
stc
sub
js
adc
push
jne
mov
xchg
dec
lods
cmpl
lds
adc
ja
shlb
push
js
pop
fists
dec
push
mov
rorb
imul
je
and
pop
sbb
imul
in
inc
nop
sbb
enter
rcl
xor
mov
mov
dec
inc
inc
or
mov
add
xor
inc
jno
xchg
nop
shlb
and
fs
mov
cmp
pop
push
sub
add
repz
add
xchg
filds
jnp
dec
pop
adc
and
mov
fs
mov
add
dec
outsb
jae
or
mov
mulps
bound
dec
jno
popa
and
pop
loope
mov
mov
or
insl
arpl
jnp
mov
subl
loop
sbb
sarb
lahf
inc
mov
push
mov
outsb
mov
dec
movsl
xor
xchg
test
xor
push
pop
rcll
andl
jl
jecxz
xchg
dec
ss
adc
jno
fimull
rcrl
jno
inc
imul
andl
xchg
loope
insl
arpl
in
xor
daa
fs
xlat
xchg
xorb
dec
andb
out
cmp
dec
xchg
outsb
pop
lock
xor
xor
mov
or
push
inc
add
and
jle
je
loopne
adc
gs
dec
nop
pop
and
inc
inc
add
sbb
dec
push
ds
dec
jae
inc
mov
cmp
sbb
adc
push
lea
sbb
rclb
jbe
mov
pop
dec
loope
mov
fldenv
aaa
ss
mov
or
and
mov
and
pop
or
mov
loope
mov
inc
xchg
aaa
push
inc
dec
jecxz
pusha
shl
and
into
mov
loopne
add
add
ds
nop
rolb
imul
push
and
pcmpgtb
inc
loopne
dec
aas
adc
sbb
dec
pop
jne
push
add
inc
mov
gs
inc
add
adc
pop
inc
incl
inc
aam
ja
jo
or
sub
les
mov
lods
dec
test
or
ja
mov
adc
ja
inc
sub
sbb
lds
sbb
fwait
data16
xor
test
mov
pop
and
and
fcmovb
pop
sbb
inc
aam
in
roll
mov
test
mov
insb
add
jmp
ficoms
adc
out
mov
dec
aas
jbe
cs
dec
xor
es
xor
inc
insb
stc
sub
enter
imul
pop
dec
imul
jno
push
clc
scas
pop
out
cmpsl
test
push
push
shlb
test
push
mov
outsl
rcrl
insl
pop
mov
dec
test
adc
fwait
movsb
lret
sahf
push
andl
nop
inc
sbb
test
or
lods
mov
and
hlt
or
or
xchg
mov
pop
xchg
xor
arpl
scas
sbb
add
sbb
dec
sbb
push
call
rcll
add
xchg
fnop
and
inc
sub
cmp
or
xor
pop
cmp
or
testb
nop
jmp
pop
repnz
popf
pusha
je
dec
xor
dec
sbb
je
inc
add
mov
in
rorb
mov
mov
mov
pop
pop
xor
test
mov
pop
gs
mov
jnp
pushf
lea
pop
shlb
pop
insb
insl
scas
leave
pop
inc
ret
or
clc
push
cmpl
test
xchg
add
jno
push
scas
jno
movsl
subl
mov
ja
mov
sahf
adc
adc
or
dec
stos
fwait
and
xorb
inc
mov
sub
rcl
gs
adc
pop
sub
mov
shll
add
mov
cmpsl
outsl
xchg
pop
jmp
mov
sub
cmp
negb
adc
ret
out
jo
scas
jge
xlat
cltd
adcl
xchg
jo
lods
mov
cmpsl
sbb
fisubl
jge
and
scas
sbb
and
inc
dec
fwait
jecxz
add
mov
insb
inc
jno
inc
jp
mov
jae
lahf
push
lods
or
fiaddl
sub
and
or
je
push
inc
lcall
inc
sub
xchg
loopne
sub
ret
jo
shl
test
sbb
jo
subb
shlb
or
sbb
push
lods
lret
add
sbb
add
pop
icebp
xor
test
cwtl
mov
push
daa
fldl
imul
sbb
ret
sbb
ret
sbb
lea
cld
xchg
pop
and
xchg
hlt
lods
inc
bswap
or
mov
mov
jle
xchg
aam
sarb
ja
iret
jle
adc
and
xorl
ljmp
dec
pop
fs
mov
cmp
ret
ja
iret
jnp
and
imul
cmp
lds
cmp
mov
sbb
pop
adc
js
xchg
pop
movsl
mov
dec
testb
jle
mov
mov
dec
inc
cmp
adc
jne
lods
arpl
ret
mov
sbbb
xlat
mov
lods
test
push
cmp
xlat
insb
loopne
bswap
sub
nop
loop
iret
sbbl
mov
call
in
sti
and
imul
cmp
cltd
mov
pop
test
xchg
adc
inc
sbb
or
or
mov
jae
mov
divl
and
mov
jns
cmpl
loopne
pop
pop
out
mov
cmp
sub
inc
es
lret
outsl
ljmp
dec
add
mov
xchg
mov
sbb
sbb
call
icebp
and
imul
mov
inc
cmp
xchg
outsb
fldenv
xor
adc
sub
adcl
mov
popa
and
fsubrs
push
mov
add
mov
and
inc
loopne
sbb
pop
stc
dec
aas
mov
or
dec
aas
in
pop
adc
xor
rcll
loopne
push
pop
pop
aas
fs
loop
xchg
sub
push
add
adc
mov
and
adc
sbb
sub
lock
shlb
mov
dec
add
rclb
stos
mov
xchg
cmp
mov
sbb
pop
pop
add
outsb
add
jge
or
push
inc
add
or
test
decb
pop
push
insb
or
outsl
sub
adc
mov
xchg
xor
lods
sbb
test
or
adc
adc
pop
xchg
fwait
and
sub
push
ss
xor
mov
rclb
push
cmp
adc
popf
or
stos
adcl
mov
in
mov
in
pop
mov
adc
push
xlat
das
imul
scas
outsb
sbb
fisttpll
sbb
movsl
cmpsl
scas
or
outsl
loopne
test
and
stos
rcrl
loopne
xor
testb
aam
dec
inc
std
or
ret
sti
dec
pop
cltd
jl
cmp
cmp
lds
adc
loopne
stos
push
int
daa
pop
dec
sub
inc
dec
lret
shrl
sbb
jno
inc
and
lret
sub
gs
cmp
mov
mov
sub
jecxz
pop
mov
add
ljmp
mov
shr
inc
dec
jae
hlt
xchg
add
push
dec
and
push
loop
pop
sub
test
sbb
dec
xor
add
cmp
je
inc
lcall
out
insl
xchg
pushf
add
xor
lods
jns
push
mov
ror
gs
push
dec
call
ss
bound
outsl
xchg
jne
mov
mov
add
stc
add
mov
hlt
push
cmp
dec
push
or
ds
shlb
jae
xor
daa
sbb
fstpl
add
pop
mov
popf
outsb
dec
loope
jnp
loop
inc
loop
fadd
jge
xchg
fidivrs
jo
aas
inc
xor
loope
push
outsb
dec
andb
lods
add
or
out
or
ret
in
ret
add
inc
clc
and
popf
cltd
add
push
js
sti
wrmsr
js
or
roll
cmp
nop
push
mov
pop
sub
dec
or
add
adc
movsl
call
pop
ficomps
stos
cmp
mov
leave
loopne
movsl
subl
mov
and
xchg
dec
movsb
scas
pop
mov
lods
add
call
loopne
cmpsl
and
lock
in
pop
xchg
rol
jno
adc
dec
push
push
and
xor
or
je
mov
dec
add
mov
sbb
adcb
shl
sbb
inc
pushf
ljmp
mov
cld
adc
and
add
insl
iret
and
cmp
rolb
lods
adc
sbb
and
test
or
or
add
repz
es
jle
int
movsb
loopne
lods
xor
pop
cmp
adc
xchg
lods
fbstp
xlat
xchg
fiadds
scas
cltd
in
add
push
push
mov
pop
enter
cmc
testl
push
imul
pop
push
in
adc
sti
dec
js
les
es
mov
stc
xor
stos
test
pop
stos
pusha
push
cmp
loopne
cmc
daa
xor
inc
xchg
ss
and
stos
insl
cmp
pop
mov
and
sbb
outsb
jo
sub
stos
xchg
add
js
jbe
jo
adc
xchg
and
dec
push
xchg
pushf
ret
je
std
push
mov
mov
dec
sahf
add
mov
test
jno,pn
ds
mov
ret
push
sbb
orb
daa
adc
jo
jns
sub
js
jae
js
push
iret
leave
lods
shrl
dec
lods
xorl
dec
or
adc
or
imul
mov
aaa
or
rorb
push
pusha
push
add
loop
adc
push
add
iret
jg
adc
push
loope
jns
add
mov
mov
xorb
xor
jns
inc
fildll
pop
dec
mov
movsl
adc
cmp
in
mov
ret
or
jne,pt
lret
inc
popa
cwtl
and
dec
je
push
xchg
addl
int3
jns
inc
cmp
adcb
cmpsl
lea
mov
loopne
xchg
mov
pusha
subl
das
mov
orb
out
cmp
lock
fstps
jmp
rol
xlat
lret
dec
mov
lret
int
pop
sub
orl
pop
xor
mov
dec
test
rcrl
xor
pop
adc
loop
mov
imul
es
and
dec
mov
test
ja
fstl
ljmp
enter
mov
sub
push
add
push
add
in
and
jbe
add
xchg
or
cmpsl
mov
add
bound
cmpsl
test
dec
outsb
popa
vminss
adc
mov
dec
sub
rclb
scas
cmc
insl
xor
fcoms
and
dec
jl
mov
and
push
sbb
sub
add
mov
fcoms
sbb
add
stos
pusha
rclb
inc
mov
sbb
sbbb
mov
les
loopne
or
jo
ljmp
inc
push
js
jp
cmp
movsb
push
push
pop
push
loopne
scas
dec
je
cmp
iret
sub
adc
or
pop
sti
lods
aaa
movsl
adc
aaa
push
andl
fisttps
test
adc
outsl
and
pop
int
xchg
mov
cmpsl
repz
push
in
aas
sub
nop
sbbl
test
push
orb
adc
add
inc
cmp
movsl
pop
shr
mov
jo
mov
push
rclb
xchg
jno
push
jnp
sbb
mov
adc
out
outsb
bound
adc
jo
pop
mov
sbb
int3
iret
mov
loopne
lds
cmp
fmull
and
fstps
mov
jnp
mov
add
das
pop
inc
mov
inc
xor
and
xchg
fsubrl
mov
in
pop
cmpb
jp
nop
xchg
xorb
pop
loopne
addr16
xor
test
xchg
add
addr16
xchg
fsubrs
stos
hlt
and
fdivrs
inc
adc
xchg
mov
xchg
aad
fs
aam
sbb
hlt
push
mov
lret
add
push
mov
es
insl
add
subl
mov
mov
test
test
pop
or
or
sbb
shlb
nop
push
cmc
mov
stos
stos
call
pusha
xchg
jecxz
xchg
cmp
cltd
sbb
icebp
pop
jg
fmuls
pop
and
mov
jle
cwtl
mov
mov
pop
loope
es
mov
movsb
mov
gs
and
xchg
cmp
fwait
xchg
out
lahf
iret
mov
mov
xchg
xchg
add
hlt
xor
pop
and
lcall
push
leave
inc
and
je
cmp
adc
xchg
push
xor
mov
add
xchg
add
pop
jne
stos
xchg
dec
push
pusha
rorl
ret
mov
call
cmp
push
dec
cwtl
push
cmp
mov
loope
gs
dec
dec
push
mov
pop
or
lcall
test
and
push
add
xor
pop
and
cwtl
sub
and
aas
and
pop
xor
add
sbb
mov
xlat
mov
xchg
mov
stos
xchg
mov
outsl
jmp
add
sbb
push
push
mov
jo
mov
and
lea
dec
ret
jp
fstps
scas
ja
push
dec
push
pusha
lods
pop
pop
call
jno
xchg
cmp
and
sbb
sbb
ss
cmp
push
or
outsb
gs
shrb
push
popl
push
lret
xchg
loopne
push
test
gs
dec
loopne
mov
outsl
das
ror
imul
notl
je
adc
js
jg
mov
push
or
orb
or
sbb
xchg
dec
add
xchg
or
pop
aaa
dec
adc
add
mov
pop
test
das
movsb
sbb
xchg
test
mov
xchg
pusha
std
fwait
adcl
add
js
dec
or
lret
fsubs
add
test
adc
sbb
push
insl
stos
or
loop
mov
test
inc
sbb
mov
movsl
rorl
movsb
xchg
enter
and
mov
inc
test
test
test
or
rcrl
shr
popa
mov
or
ja
js
add
xchg
sbbb
roll
xor
xor
dec
cmc
dec
leave
add
adc
xchg
inc
and
adc
add
jno
inc
jns
sbb
push
jo
adc
push
adc
or
sahf
sbb
add
sti
add
cwtl
mov
mov
mov
stos
cmp
scas
in
ret
add
loopne
int3
out
sub
mov
dec
mov
xchg
xor
ret
mov
xchg
mov
call
mov
xor
lock
or
loopne
sub
nop
fstpl
mov
cmpl
xor
cmp
sti
and
jb
add
xchg
jle
jb
mov
out
sub
cmpsl
adc
add
xchg
sub
inc
lahf
jo
sbb
movsl
dec
jmp
test
dec
and
xchg
xchg
mov
mov
addr16
sar
fwait
sar
xchg
cmp
es
dec
stc
pop
sub
and
adc
mov
js
inc
and
mov
ret
les
shll
lods
aad
adc
lods
rcrb
rcrl
cmp
mov
loopne
cli
popf
adc
testb
sub
shrb
inc
push
or
shrb
insb
dec
pop
adc
mov
push
es
sbb
fs
xlat
inc
or
adcb
lahf
cmpsb
mov
bound
cmpsl
jnp
dec
mov
shlb
call
xor
xchg
mov
mov
mov
adc
sub
jb
mov
mov
in
jge
fbld
fwait
add
lds
loope
dec
xchg
sub
or
arpl
shlb
inc
loopne
fdivl
pop
sbb
push
arpl
fcom
pop
out
add
adc
in
adc
imul
inc
cmpsl
popf
add
iret
mov
adc
mov
inc
loop
lcall
inc
flds
adc
push
out
fidivs
dec
lahf
nop
adc
xchg
sbbb
scas
test
mov
mov
push
cmp
xlat
adc
mov
xchg
cs
mov
xchg
cmp
xor
or
push
xchg
mov
and
insb
pop
cwtl
inc
mov
xchg
add
inc
out
ret
xchg
pop
adc
rcl
rorl
in
stos
cmp
cmp
or
or
push
push
and
xchg
push
imul
pop
pop
roll
cltd
dec
jbe
clc
cmp
mov
jge
xchg
mov
roll
loopne
cmp
xor
sbb
adc
add
call
cmp
sub
inc
jl
fcomps
push
xchg
xchg
xchg
movb
push
stos
pop
nop
jns
or
add
fisttpll
test
xchg
cmp
pop
test
jo
or
ja
fiadds
fldcw
ret
je
mov
out
clc
xchg
pop
cmc
cld
pop
sti
clc
pushf
add
sub
test
sbb
or
cmp
gs
test
mov
sbb
and
push
inc
pop
stos
sbbb
xchg
inc
push
adc
fldt
aam
jo
fnstenv
ror
inc
jne
push
adc
jne
or
sub
popa
pop
arpl
cmp
mov
ds
add
inc
je
pop
punpckhwd
cwtl
and
bound
sub
mov
test
xchg
add
fwait
pop
ss
xchg
xchg
mov
sub
dec
xor
push
xchg
or
or
movsl
sahf
cmp
xor
cmp
insb
aam
dec
jp
lock
mov
repnz
loop
loopne
cmc
lods
shlb
push
and
les
push
sub
call
inc
sub
out
sbb
les
test
add
xchg
push
push
or
jo
add
roll
cmpsb
inc
pcmpeqd
addl
outsb
mov
iret
pop
dec
clc
pop
adcl
or
stc
sbb
add
cmp
and
shlb
in
adc
dec
aaa
add
test
jge
jne
pop
mov
mov
cmpsl
or
imul
cwtl
add
dec
xchg
jmp
add
inc
addr16
and
pcmpeqd
cmpsl
or
cmp
test
pop
aaa
push
sub
push
pusha
mov
sbb
cli
cli
imul
lods
out
in
in
fisttps
mov
fdivl
divb
iret
add
loope
or
es
pop
stos
imul
mov
jl
loope
adc
and
add
jge
orb
insl
jns
mov
aam
dec
sahf
enter
jne
ret
sbb
pop
rcrb
movsb
jb
pop
inc
cmp
scas
filds
xor
add
loopne
int
jl
test
jbe
cltd
js
faddp
mov
sbb
scas
out
les
cmpsl
cmp
inc
lea
pusha
bound
lods
ljmp
pusha
imul
sub
pop
mov
setno
in
shrb
call
mov
int3
into
fdiv
add
add
lea
or
enter
js
inc
pop
loope
pop
or
iret
and
iret
cmpl
daa
push
sbb
in
cmp
sti
out
push
and
paddusw
jo
arpl
mov
mov
add
inc
mov
rclb
xor
cmpsl
mov
pop
mov
ja
out
inc
add
stos
fnstenv
stos
lea
adc
popf
fwait
adc
loopne
cmp
insb
mov
jne
data16
fldenv
out
lods
cmp
je
cli
mov
xchg
push
es
push
push
push
push
inc
adc
es
xchg
push
adc
xor
ss
insl
cmp
or
scas
iret
cmp
or
dec
mov
nop
push
mov
arpl
xchg
lea
fimuls
stos
sbb
fcomps
mov
push
dec
adc
or
popf
and
dec
push
rcr
stos
dec
pop
push
pop
dec
xor
iret
and
lcall
dec
add
xchg
cwtl
or
dec
dec
out
add
mov
pop
adc
rorb
dec
scas
mov
xor
sbb
push
sbb
or
ss
adc
pop
or
jle
lahf
ror
loop
pop
inc
shll
cmp
jl
push
dec
mov
stc
xor
or
push
scas
or
or
call
inc
xchg
inc
add
insl
ja
inc
fwait
push
hlt
push
pop
stc
adc
mov
movsb
dec
cmpsl
addb
and
iret
pop
repnz
or
push
into
sbb
jle
xchg
sbb
cltd
xor
cmp
int3
test
adc
inc
add
les
and
popf
loop
in
add
adc
sbb
add
into
mov
dec
pop
push
or
movsb
adc
mov
je
sti
sbb
add
xchg
push
and
adc
adc
popa
test
ljmp
adc
jne
jge
sarl
adc
inc
ljmp
and
pop
in
outsb
or
lahf
adc
rolb
add
mov
ss
jno
rorb
or
mov
and
test
testl
and
insb
popa
cmpb
test
enter
add
negb
enter
push
jp
mov
push
sub
jg
inc
xor
ljmp
adc
jp
cmp
sbb
std
idivl
lret
adc
mov
call
lods
mov
inc
fidivs
fimuls
xchg
jg
mov
fsubrl
and
pop
sub
pop
pop
sbb
jno
jbe
or
jge
cmpsb
sti
dec
cli
sbb
add
ret
xor
pop
je
xchg
xchg
test
xor
movsb
jmp
aam
xchg
and
das
sbb
inc
mov
xchg
add
pop
lcall
jmp
cmp
imul
inc
call
movsb
rcrb
mov
scas
jg
jo
mov
subb
xchg
jno
in
sbb
xchg
add
daa
or
cmpsb
or
stos
cwtl
popf
rol
cmp
gs
orb
outsl
push
outsb
jno
inc
call
pop
and
xor
sahf
lods
push
push
popa
push
insl
sbb
clc
icebp
jno
loop
sarl
or
and
jle
adc
xor
fnstsw
orl
add
lea
mov
out
lods
cmp
inc
sbb
xchg
mov
cmpb
mov
inc
push
sbb
push
dec
mov
jle
xchg
jle
hlt
push
adcl
add
sbb
jno
xlat
aad
xchg
sbb
stos
ss
adc
xchg
push
iret
int3
pusha
add
jecxz
mov
or
mov
andb
add
aad
jecxz
cmc
sub
push
cmpsl
repz
es
jno
mov
xchg
pop
ja
pop
or
sbb
fadds
shr
test
and
int
js
jg
xchg
cltd
lock
mov
or
fisubrl
inc
shr
cmpl
inc
ljmp
cmpb
popa
aas
mov
add
pusha
scas
cmpsb
mov
and
js
in
int
dec
mov
xchg
adcb
add
and
adc
fndisi(8087
inc
sbb
pop
pushf
adc
insl
xchg
mov
mov
inc
fwait
ja
xchg
push
sbb
fildll
dec
fdiv
jne
push
jne
fs
adc
rcrl
push
mov
das
js
fsubs
add
int
sbb
dec
movsb
addr16
adc
inc
jbe
or
dec
js
mov
inc
add
add
rorl
loope
sub
lock
iret
push
adc
out
cmp
xchg
xchg
movsl
cmp
xchg
jbe
sbbl
into
cmp
add
fnclex
pop
data16
fwait
sbbl
outsl
aas
iret
mov
adc
lahf
sub
sbb
add
xor
xor
daa
or
add
imul
je
mov
push
add
cmpsl
ret
jg
shlb
fdivrs
fisttpl
cmpl
shl
aaa
mov
xor
push
and
test
jo
inc
shll
mull
push
iret
cwtl
fisttps
test
jnp
dec
jo
jo
dec
xchg
pop
mov
sbb
stos
aaa
jno
icebp
addl
stos
imul
orl
mov
insb
sbb
mov
jae
or
xor
cltd
mov
in
mov
xor
lea
or
adc
jo
adc
out
jle
xor
fsubl
jecxz
roll
mov
jb
mov
outsb
repnz
nop
rclb
cmpsl
cmpsl
sub
sbb
fsubs
cmpsl
mov
cmp
sub
dec
std
hlt
pop
jg
push
jg
xor
inc
mov
pop
mov
and
call
or
jb
pop
mov
dec
cmp
inc
add
dec
xchg
dec
xor
adc
mov
pop
stos
lahf
mov
imul
fldl
mov
add
jo
test
mov
fsubrl
xchg
adc
ret
adc
arpl
pop
call
add
lds
mov
cld
and
and
and
fmull
adc
push
cmp
and
adc
mov
lock
push
xchg
clc
sahf
push
sbb
sahf
ret
pop
dec
xchg
adc
sbb
inc
stos
movsl
jno
adc
repnz
xor
cmc
orl
add
arpl
pop
cld
inc
fldcw
mov
jp
lods
adc
mov
jno
adc
adc
xor
xor
iret
and
and
sub
repz
or
or
adc
aas
mov
pop
movsb
inc
sub
mov
or
push
bound
cmpsb
or
fadd
or
out
mov
cmc
xchg
jp
mov
push
push
loopne
lahf
rcrb
or
lock
ja
movsl
fsubr
inc
or
mov
pusha
mov
loopne
jnp
pop
es
mov
cs
inc
push
sub
push
sbb
iret
outsb
jo
imul
stc
push
hlt
cmpsb
push
loopne
push
mov
add
and
test
jmp
jbe
mov
mov
dec
pop
es
jne
sub
mov
xor
adcb
lds
mov
imul
mov
and
xor
lods
fistps
mov
xor
cmp
jb
push
fidivrl
das
jns
and
rcr
dec
xchg
das
or
lods
adc
rclb
rcrb
dec
or
sub
fimull
shrb
fdiv
cmc
xor
and
ja
pop
mov
mov
jno
ss
pusha
cmp
jmp
add
cwtl
or
xor
loopne
cs
push
xor
rolb
mov
lods
test
das
adc
test
push
mov
fdivrl
sbb
scas
xor
xchg
sarb
jecxz
pop
and
rolb
sahf
lock
xor
loop
fnstenv
loopne
mov
gs
adc
dec
push
aad
sub
sub
fcomps
pop
adc
decl
adc
lods
and
dec
sbb
jnp
inc
andb
nop
and
ret
cmc
test
lods
dec
pop
imul
mov
jno
adc
dec
push
jbe
popf
fcmovnbe
es
xor
cmp
aas
cmp
xchg
push
je
sbb
xchg
pop
outsl
add
cwtl
push
sbb
cmp
aad
cmpsb
dec
and
fisttpl
sub
dec
movsl
mov
dec
leave
pop
call
dec
fcoml
cltd
mov
jo
mov
sub
sbb
bound
push
ja
push
push
cmp
or
loope
mov
rclb
adc
push
cli
lret
add
sbb
es
shlb
lods
es
dec
push
and
add
orl
pop
xor
push
scas
lods
xor
fs
cmp
xchg
mov
mov
sub
xor
insb
push
lods
sub
mov
add
je
shll
and
inc
adcb
adc
and
xchg
mov
add
test
or
xchg
adc
mov
test
sub
adc
pop
add
movsb
inc
xor
or
shr
into
pop
inc
je
fbld
mov
push
inc
pop
add
xlat
aaa
imul
push
lds
rclb
shlb
int3
lret
sbb
pop
int
pop
sub
adc
xchg
push
sub
and
mov
fs
lock
cmp
call
jo
xor
sbb
and
popa
nop
sub
test
nop
fildl
loop
inc
jmp
and
mov
adc
pop
ja
mov
jne
push
or
lea
jne
in
or
and
test
inc
pop
std
subb
sbb
xor
inc
addb
xchg
orb
pcmpeqw
dec
addb
mov
mov
movsb
enter
insl
imul
loopne
pop
sbb
pop
sub
imul
inc
repnz
add
aaa
repnz
jnp
or
xor
iret
movsb
addb
add
js
add
dec
dec
jp
in
sbb
add
lock
dec
aam
jmp
add
sbb
jp
clc
or
pop
insl
test
and
sub
das
and
dec
mov
stc
ja
mov
iret
xchg
popa
pop
xor
inc
ljmp
or
fs
jns
sbb
xchg
xchg
stos
and
inc
cmc
pusha
or
out
lds
sub
push
dec
sub
or
ret
hlt
add
adc
pop
incb
mov
ret
or
fwait
int3
xchg
cmp
std
hlt
cmp
lea
jne
in
sar
add
aaa
and
aam
adc
sbb
ffreep
lods
subb
pop
pop
int
jp
cmp
movsb
arpl
push
dec
enter
aaa
jge
loopne
ficomps
insb
test
rcrl
pusha
or
and
popf
sahf
dec
mov
cld
nop
lock
sub
mov
mov
pop
nop
lret
les
cmc
dec
es
dec
pop
loop
mov
xor
inc
andl
pusha
add
jnp
add
add
movsb
je
imul
popa
jae
xor
cs
hlt
stos
sarb
enter
dec
stos
push
mov
add
dec
push
clc
nop
mulb
mov
xor
push
push
in
inc
mov
push
stos
rcrl
idivb
imul
mov
and
sbb
xorl
notb
push
pop
cld
pop
push
popa
jb
faddp
or
mov
adc
addr16
out
xchg
or
push
bound
mull
notb
mov
cs
imul
adc
mov
das
or
sbb
je
shlb
scas
cld
out
xchg
das
hlt
mov
or
das
sub
sbb
sub
mov
fs
push
inc
pop
mov
je
sbb
je
push
shlb
scas
test
je
call
movsb
and
add
pop
test
pop
xchg
fstl
inc
rclb
das
xchg
enter
xor
add
es
imul
in
inc
add
cmp
loopne
add
test
stc
clc
faddl
mov
call
das
dec
push
push
inc
sarb
pop
ss
or
adc
xchg
shlb
in
xor
rcrb
imul
in
jp
jecxz
movsb
mov
xor
in
push
lcall
inc
inc
or
xchg
inc
imulb
orb
popa
jo
leave
in
faddl
out
add
push
cmp
xchg
or
push
add
inc
cmp
xor
jmp
lods
lods
xor
xor
outsb
dec
imul
in
xor
ds
clc
jne
sbb
xchg
lret
dec
nopl
movsl
loop
sarl
or
pop
add
dec
sub
lea
call
push
scas
fildl
xchg
mov
mov
or
pop
lods
push
ret
xor
arpl
hlt
shlb
cmp
cs
mov
arpl
and
ud1
xchg
fcmovnbe
inc
test
test
int
push
push
frstor
add
sub
push
adc
pop
or
mov
sbb
shl
adc
push
clc
add
int3
sbb
xchg
imul
mov
mov
sarb
mov
and
inc
xchg
call
ja
jnp
outsb
sub
icebp
andl
incl
test
or
into
aaa
sbb
or
sbb
xchg
and
add
jp
clc
mov
lock
iret
lret
push
dec
sbb
lods
insb
pop
push
pop
and
loop
push
rorb
lock
inc
lods
fs
movsb
or
push
push
jb
cmp
push
nop
push
ror
es
sbb
pslld
into
stc
jo
jo
lcall
cmp
daa
fdivs
aaa
frstor
subb
mov
mov
lret
icebp
cmp
ljmp
push
add
pop
lods
in
mov
xchg
std
push
ss
add
pop
mov
lcall
xlat
out
out
mov
adc
xor
xchg
xchg
add
adc
dec
mov
add
mov
mov
pusha
add
fs
lock
sub
pop
mov
push
dec
mov
pusha
dec
in
int3
push
fisubrs
push
add
icebp
push
xchg
lret
iret
mov
add
adc
nop
jmp
dec
inc
dec
sub
arpl
add
inc
dec
pop
ret
or
clc
jo
cmpsl
cs
out
outsl
mov
sahf
xchg
xchg
nop
push
cs
push
cmpsb
add
add
add
mov
out
and
sub
gs
and
push
arpl
shrl
xlat
push
dec
push
push
pushf
lahf
inc
sarl
mov
fdivs
inc
je
jp
add
pop
rcrl
sub
or
push
xchg
daa
fistpll
pcmpeqd
roll
mov
addr16
pop
out
mov
or
popa
mov
outsb
dec
mov
pop
mov
popf
movsb
shlb
mov
imul
lods
cli
popf
pop
adc
movsl
xor
xchg
mov
jbe
and
repnz
roll
inc
cmc
inc
push
add
pop
or
or
into
dec
dec
dec
xor
inc
sub
cmp
xchg
sbb
and
mov
xchg
ret
pop
dec
dec
arpl
lret
stos
push
dec
cmp
lds
inc
mov
mov
push
sbb
adc
adc
test
add
pop
jo
movsb
cli
add
mov
into
mov
lea
test
xchg
loope
sbb
adc
xchg
rclb
fucomp
dec
clc
cwtl
ja
aaa
push
sti
xchg
or
setge
outsb
adc
clc
dec
cmp
lahf
fiaddl
xchg
jnp
jecxz
mov
cld
cmp
sbb
mov
std
stos
sbb
add
fadd
les
jecxz
sti
sbb
movsl
add
rorl
in
inc
das
lcall
mov
subb
dec
push
jmp
js
cmp
sbb
sub
je
insb
pop
mov
cmp
faddp
data16
sbb
xlat
push
mov
movsb
shll
or
fcomps
jmp
mov
iret
fstps
dec
aad
pop
mov
rorl
push
enter
mov
sub
dec
jae
fstpt
mov
push
iret
lods
xlat
stos
pop
mov
and
jg
fsts
pop
sbb
das
push
lea
and
fcom
inc
js
into
int3
push
pop
sbb
xchg
mov
sbb
xor
jnp
xor
out
add
sti
adc
and
mov
adc
cmp
push
lahf
pusha
sub
jne
add
or
lcall
add
xor
push
sbbb
pop
or
gs
andb
test
jo
lock
ds
jne
ds
inc
dec
pusha
xchg
adc
and
sbb
add
or
cmp
pop
add
and
or
mov
add
push
out
adc
js
daa
mov
fiaddl
mov
sub
xchg
push
sbb
fcoms
sahf
xlat
sbb
and
xchg
xor
push
push
add
push
dec
xchg
mov
pop
adc
iret
cmc
lods
lods
fwait
jp
xchg
adc
pop
js
sahf
loopne
scas
inc
scas
inc
jmp
xchg
lds
add
pop
popa
push
out
push
inc
push
test
out
insl
pop
sbb
inc
pop
mov
add
jns
sub
dec
mov
aad
mov
js
loope
sahf
ss
pop
add
jnp
xlat
pusha
inc
stos
rcl
into
push
sarl
insl
int
add
mov
pop
add
popa
ret
adcb
adc
sbb
incl
dec
and
iret
addb
insl
filds
scas
xlat
push
inc
fldenv
fldcw
adc
add
adc
outsb
cmp
movsb
je
shr
cmp
movsb
cli
pop
lock
lds
ja
lahf
or
mov
mov
or
mov
xchg
cwtl
smsw
leave
popa
push
scas
xor
ficoml
pop
jmp
inc
jge
loope
jno
sbb
mov
xchg
cs
pop
je
in
push
lcall
subb
outsb
push
loope
pop
jp
js
xchg
ja
sub
inc
add
insb
mov
ret
cmp
mov
movsb
iret
rclb
inc
dec
ret
cmp
pop
daa
sbb
jg
cmpsb
add
mov
pop
loopne
je
mov
mov
ret
mov
mull
jo
jae
loope
pusha
insb
ljmp
arpl
arpl
sbb
pop
fld
shlb
jae
mov
cmp
sbb
or
dec
js
fwait
or
mov
cmp
popa
and
cmp
cmc
mov
out
divl
aas
inc
movsl
dec
xor
lahf
and
mov
and
in
add
add
fdivs
mov
out
jmp
mov
mov
negl
loopne
icebp
mov
mov
mov
movsl
mov
mov
inc
jle
insb
mov
inc
xchg
ja
add
inc
inc
cmp
and
lcall
or
into
mov
shll
xchg
mov
pushf
cmp
lock
inc
aas
out
or
adc
gs
dec
out
cmp
and
push
loope
loopne
xor
aam
mov
clc
gs
adc
xchg
adc
xor
and
movsb
outsl
mov
lahf
lahf
pop
sbb
xchg
fdivr
or
inc
add
adc
fstpt
xor
scas
xchg
stos
jb
aam
inc
cmp
addr16
jns
add
rolb
mov
and
ja
test
sti
inc
push
add
lds
jmp
test
lock
arpl
and
jne
es
jle
xchg
fstpt
and
push
inc
imul
cmp
sbb
imul
xchg
xor
xchg
ljmp
clc
daa
ret
adc
xlat
add
push
int3
mov
add
enter
fs
xchg
lcall
jbe
leave
push
xchg
hlt
sub
cmp
mov
add
dec
sub
adc
popf
xchg
jb
cld
lds
shr
sbb
push
rorl
fmuls
or
imull
inc
loop
or
push
cwtl
push
cmp
adc
jae
fcomps
sarl
stos
pop
lret
and
mov
dec
or
dec
daa
andb
sahf
sti
pop
push
push
enter
inc
jl
lods
or
xor
push
xchg
sub
mov
and
mov
adc
nop
mov
fwait
and
inc
xchg
lret
jo
pop
xlat
xchg
xor
cmpsb
inc
ret
jmp
dec
or
mov
shll
test
lock
push
cmp
aas
dec
sti
dec
sub
pop
sbb
rcl
rorb
add
jecxz
xchg
xchg
dec
dec
sub
daa
sarl
mov
pusha
mov
test
imul
test
sbb
test
inc
cmpsl
in
or
jo
imul
lds
movb
fwait
popa
fs
imul
mov
push
ret
sub
ror
daa
lods
cmp
pop
inc
pop
jmp
push
xchg
cmp
je
ret
or
mov
sub
ja
inc
stos
es
push
dec
xchg
or
hlt
les
lock
clc
add
mov
xchg
sarb
jo
pusha
movsl
ffree
std
xor
adc
mov
sub
add
movsb
insl
or
mov
jle
xchg
xor
xor
inc
jp
inc
daa
adc
nop
or
movl
mov
adc
mov
addb
rcl
sbb
pop
sub
and
push
jnp
mov
test
test
xchg
in
xor
add
cmp
dec
xchg
shll
xlat
jo
lods
xchg
push
jns
int3
mov
mov
push
mov
sub
xor
bound
call
adc
push
inc
aas
add
pop
jmp
lea
inc
sub
ret
inc
sbb
pop
add
add
js
dec
ds
dec
je
xchg
push
xorl
sbb
sbb
jnp
push
popa
test
daa
sub
cmp
test
dec
pop
stos
pop
xor
loope
insl
pop
sub
sbb
pop
lcall
mov
mov
adc
mulb
sub
shll
lahf
adc
xchg
imul
subl
xor
jnp
pop
xchg
pop
lret
xor
adc
push
bound
sub
sbb
push
mov
cli
movsb
sub
jnp
stos
fsubs
add
imull
sub
push
popa
rcrl
test
nop
or
shlb
testl
push
mov
cmp
iret
push
or
ret
dec
push
dec
sub
cmp
cmp
or
or
lock
push
push
lret
data16
adc
jecxz
in
xchg
push
mov
lods
rcll
ret
add
fcomi
jbe
sbb
and
in
jnp
add
push
rcrl
mov
add
or
jno
int
lds
jmp
mov
sbb
enter
push
or
jmp
lods
jl
jne
cltd
inc
mov
pop
jae
jl
sarb
cmp
jno
or
or
cmc
sub
inc
and
es
or
jle
dec
sbb
pop
push
inc
js
pop
das
and
and
rolb
xchg
jge
adc
jno
jmp
imul
aas
pop
les
pop
jecxz
nop
jp
mov
cmp
and
add
fwait
lods
stc
pop
imulb
dec
cmp
popf
xor
cmp
sbb
adc
ds
sbb
inc
or
xchg
or
sub
sbb
or
xchg
lock
xchg
and
jg
jp
add
int3
fadds
repz
int3
pop
dec
insl
and
and
adc
stos
pop
xchg
mov
test
pusha
sub
ja
into
ret
adc
or
or
ljmp
sbb
ret
or
mov
pop
adc
sub
shrb
imul
jle
mov
imul
rolb
add
or
mov
mov
movsl
ds
sbb
mov
mov
mov
or
imul
push
mov
mov
mov
lret
cmp
mov
sbb
mov
xor
sub
or
or
jmp
xchg
mov
aaa
sub
adc
sbb
iret
jle
insl
pop
pop
xchg
or
rcl
mov
mov
stos
insb
fwait
ret
sub
mov
mov
inc
and
andb
and
test
xor
mov
jg
push
outsb
mov
xor
pop
xchg
test
pop
popf
leave
rorb
shlb
mov
jg
jg
into
adc
mov
adc
mov
jno
inc
test
lods
xor
fdivrl
push
xor
mov
ss
iret
filds
xor
xor
jg
inc
xor
inc
and
dec
add
ret
push
icebp
jmp
popa
add
lods
in
xchg
xor
and
sub
cmp
jo
mov
push
jne
dec
aaa
sbb
mov
push
test
cmp
mov
out
mov
idivl
pop
xchg
dec
mov
add
repz
inc
push
mov
rcl
test
fiadds
sub
cmp
cmpsl
les
mov
push
dec
xchg
test
or
jo
mov
outsb
mov
sub
aad
iret
mov
cmp
lret
ja
rcll
testb
and
fcomip
je
push
cmp
inc
rcll
adc
add
dec
pop
stos
xchg
int
push
adc
and
push
cmp
pop
jle
or
push
pop
test
add
add
std
jg
add
lock
sub
adc
insb
jl
xor
sbb
jmp
and
sub
mov
and
cmc
pushf
sbb
mov
das
stos
inc
xchg
ret
shl
cmp
arpl
ffree
pop
in
dec
stc
lret
mov
sub
jb
sub
mov
iret
sub
inc
das
je
rcrb
push
iret
add
and
insb
and
andl
fcompl
xchg
jp
xchg
push
add
pop
test
cmpsb
jp
mov
pop
pop
adc
sub
pop
mov
sub
dec
mov
cmp
push
bnd
push
repz
mov
fcomi
xchg
into
mov
adc
push
adc
mov
xor
stos
or
out
movsb
sub
push
fbld
test
inc
lock
insb
lret
xor
sub
or
inc
test
sub
aas
loope
xor
jge
test
nop
pop
dec
call
inc
adc
or
std
xchg
stos
mov
add
and
outsl
push
xchg
aaa
ja
push
or
inc
push
and
imulb
icebp
aas
mov
outsl
xor
pop
inc
lahf
arpl
sahf
xor
das
cmp
test
stos
push
out
enter
mov
inc
pusha
add
xchg
cmpb
pop
jmp
repnz
lods
lea
xor
arpl
and
mov
aas
clc
mov
lret
aam
push
jle
add
sub
jbe
xor
mov
popa
mov
fnstenv
call
inc
insb
nop
scas
outsl
arpl
arpl
add
xor
xchg
mov
mov
jmp
scas
insb
xorl
inc
imul
pop
jns
xor
or
inc
adc
dec
inc
xor
xor
add
push
cmp
sbb
dec
cmp
inc
and
sub
add
fstl
push
fistpll
push
in
loope
and
dec
pusha
jmp
das
roll
rcrb
jne
add
push
movsb
push
dec
xchg
sub
jmp
cmp
mov
arpl
cmpsl
add
and
insl
jns
add
xor
mov
adc
cmc
adc
pop
xchg
or
xchg
test
scas
push
jp
xor
fstp
xchg
sarb
mov
mov
aad
pop
or
push
mov
loope
mov
pop
mov
mov
mov
faddl
xor
arpl
sub
cmp
sarb
sub
push
inc
cmp
push
dec
ja
sbb
adc
add
out
nop
push
pop
or
pop
add
sub
jl
mov
test
ret
fdivl
add
inc
inc
add
xor
mov
xchg
lods
shlb
jo
sub
xor
or
jne
dec
dec
push
mov
sahf
scas
lret
bound
pop
sahf
add
add
pushf
mov
or
adc
out
adc
add
clc
mov
jo
lea
sbbl
push
movsl
rolb
movsl
fwait
pushf
sbbb
xchg
jo
fsubr
cltd
lcall
dec
cmp
cmp
bound
movb
fs
jne
xor
lahf
and
gs
jbe
adc
outsl
pop
imul
sub
arpl
mov
adc
xchg
inc
lea
or
incl
mov
cmp
test
sti
insb
scas
mov
insl
inc
inc
adc
add
lock
xor
out
jmp
imul
clc
imul
sub
adcl
ret
insl
xor
mov
xchg
daa
and
add
out
stos
mov
test
nop
add
jmp
mov
mov
push
xor
imul
mov
sbb
jae
loopne
mov
inc
sub
adc
lahf
sarb
and
es
loop
push
test
arpl
push
stc
cmp
fldcw
or
into
mov
and
das
sbb
movsl
stc
inc
and
movsb
push
xlat
test
inc
sbbl
mov
subl
mov
movsl
inc
mov
sub
ljmp
insl
xchg
inc
xorl
cwtl
rolb
or
mov
xor
aaa
int3
push
sbb
add
add
lea
sbb
das
add
mov
or
xchg
mov
or
add
and
mov
jmp
inc
add
sbb
aaa
loope
in
mov
pop
add
data16
movhps
rcr
outsb
mov
mov
xchg
xlat
and
dec
aas
scas
scas
sbb
add
mov
sbb
mov
sahf
sbb
subb
mov
cwtl
loopne
sbb
lods
adc
mov
aaa
es
xlat
sbb
out
jnp
pop
add
jecxz
push
or
push
arpl
add
or
cmpsb
mov
jo
loopne
ret
jns
iret
fcomps
out
push
ret
rcr
mov
test
repz
sub
push
jecxz
int3
ss
push
cmpl
dec
jno
jp
arpl
mov
adc
cld
sub
jg
sbb
lea
sahf
outsl
nop
aaa
lock
push
pop
or
sbb
daa
les
repz
add
pop
ret
adc
adc
lods
cmp
mov
dec
xchg
push
js
test
mov
dec
int
jne
inc
hlt
mov
jne
sub
lock
pop
cmp
sahf
popa
adc
les
xchg
add
lods
xchg
js
sbb
pop
imul
shll
pop
sub
and
rorb
or
xor
push
push
adc
jp
insl
addl
sub
subps
lret
mov
cld
jno
inc
gs
iret
js
fldcw
jmp
or
pushl
or
push
sub
cmpsb
jo
inc
mov
or
xchg
cld
aaa
sub
ss
pusha
dec
cmp
sahf
popa
lock
cs
mov
popa
mov
push
in
sub
push
addr16
push
inc
mov
loop
cli
and
add
shrb
adc
test
jae
je
ret
jl
ss
sub
inc
adc
and
xchg
cs
ds
mov
jo
add
js
ds
mov
mov
cmp
xchg
cmp
and
mov
pop
jae
mov
inc
shrl
and
fnsave
mov
inc
adc
inc
pop
aas
jl
ja
out
inc
cltd
das
inc
or
jecxz
aas
loopne
lods
addl
push
add
push
mov
fcmovbe
mov
into
mov
aas
movb
cmp
add
sub
enter
ja
insl
insb
daa
ss
aaa
jl
das
imul
pop
mov
clc
es
sub
lods
outsb
and
inc
xor
enter
loope
scas
fcompl
push
dec
stos
je
stos
aam
or
leave
cwtl
dec
cmp
popf
inc
popa
jnp
arpl
add
or
xchg
lock
or
jmp
cmp
cmpsl
test
xchg
mov
cld
inc
jo
lahf
pop
mov
add
and
and
call
or
and
nop
mov
js
pop
or
and
add
xchg
cmp
sub
mov
pop
push
andl
cmpsl
xchg
mov
push
cmp
sub
test
cmp
add
xchg
rcll
lods
out
dec
inc
fwait
inc
movsl
into
add
add
hlt
xlat
mulb
push
xor
ja
lcall
xor
jl
adc
icebp
pop
adc
jle
add
imul
sahf
shll
fcomps
jno
repz
into
shlb
and
mov
xchg
pusha
or
popa
dec
jns
loope
cmp
add
pop
jbe
and
xor
cwtl
or
mov
mov
dec
lods
sub
xor
pop
and
xchg
xorb
mov
xlat
dec
aad
in
xchg
add
mov
sarb
jno
xor
js
lahf
cmp
mov
fdivrs
or
daa
or
cli
push
pop
or
arpl
sbb
cmp
xor
jp
jle
jecxz
arpl
scas
add
scas
adc
dec
pop
mov
and
adc
cmp
pop
test
jne
push
sbb
jbe
cmc
inc
sbb
loope
lods
adc
aam
out
repz
or
popa
adc
pop
or
inc
cmp
or
or
push
aaa
pop
jl
adc
inc
outsb
jne
mov
add
jl
mov
add
xor
dec
std
jae
js
sub
add
shll
mov
bound
cmp
in
das
pop
inc
mov
xchg
bound
and
fadds
push
cs
sbbl
lcall
test
dec
loopne,pt
push
inc
jo
adc
inc
xor
icebp
movsb
dec
daa
cmp
adc
dec
out
or
mov
adc
mov
rcrb
pop
mov
loop
xor
push
xchg
lods
pop
push
push
and
gs
pop
mov
popa
inc
ret
add
xorb
imul
pushf
cmp
add
xchg
into
mov
inc
roll
ja
inc
jp
decl
aaa
sub
mov
cmp
popa
xchg
sbb
dec
or
lret
jl
push
or
dec
popf
sahf
and
mov
test
push
and
shl
xchg
test
mov
loope
mov
shlb
scas
addb
or
test
scas
or
ret
xchg
jge
add
cltd
push
js
xor
arpl
leave
pop
add
jbe
xchg
clc
dec
rolb
ret
jle
jl
mov
adc
or
das
loopne
mov
push
xchg
inc
iret
cmp
xchg
mov
mov
loopne
hlt
mov
mov
and
out
push
out
ss
xchg
xor
push
and
out
add
call
loopne
mov
mov
xlat
push
notl
adc
loopne
dec
hlt
push
jp
es
add
loope
call
jmp
out
add
pusha
add
loop
mov
xor
add
out
popa
cld
or
loop
pop
push
rolb
add
sbb
add
and
push
sbb
push
inc
fwait
xor
pop
sub
nop
int3
rol
insb
and
push
lcall
xlat
sbb
add
or
fmuls
ss
jne
jg
ret
in
or
rcrb
pop
addl
jo
add
mov
mov
dec
es
jg
sbb
fsubrl
popf
fdivrp
negl
ret
pop
addb
add
popa
push
cmp
lods
mov
add
xchg
dec
add
mov
outsl
push
jl
mov
jp
and
mov
or
lahf
add
pop
ja
hlt
call
and
lods
and
sbb
inc
roll
inc
add
in
inc
imul
jle
mov
clc
pop
inc
add
into
pop
sub
ret
pop
xor
mov
cwtl
dec
push
add
repz
xchg
adc
jo
sbb
jns
sbb
cmp
mov
jne
addl
rcll
pop
jo
popf
negl
add
jge
cli
cwtl
roll
pusha
mov
adc
add
aaa
je
hlt
subb
fdivrs
inc
adc
mov
jecxz
imul
mov
gs
or
leave
lahf
les
fisubrl
fcom
or
or
dec
jmp
loope
adc
dec
rolb
fistps
push
or
xor
bound
fisubl
push
cmp
packuswb
ret
jno
pop
rcrl
xchg
xor
mov
push
cmp
cmp
sbbl
das
xchg
aas
inc
insb
cli
sub
push
and
daa
or
push
jecxz
and
jb
addr16
sbb
pop
fdivs
loop
cmp
adc
or
mov
sbb
sbb
or
dec
cmc
xor
mov
mov
inc
movsb
cmp
or
mov
xchg
sbb
and
cs
stc
mov
dec
test
adc
loopne
add
daa
lahf
fiadds
xor
adc
aaa
mov
addr16
jo
pop
mov
adc
mov
stos
popf
mov
mov
dec
xor
je
lods
and
decl
xorw
orb
adc
testl
mov
xor
fstps
insl
loopne
push
std
sbb
push
push
or
jae
lahf
jl
andl
fdivr
push
arpl
iret
lock
movsl
jb
enter
imul
or
or
xchg
adc
int3
mov
jmp
xor
or
in
jo
add
dec
sub
ret
subb
imul
push
adc
jne
les
or
add
inc
jg
scas
scas
jo
test
mov
add
jno
nop
xor
sbb
inc
rcll
cmp
mov
jle
mov
enter
and
mov
shlb
mov
pop
dec
add
sbb
push
scas
or
ja
sub
adc
or
fmuls
lahf
xchg
mov
pop
push
dec
adc
pop
mov
ret
outsl
and
xor
or
inc
mov
std
xor
dec
js
rcll
or
xchg
sub
sti
xlat
inc
lcall
ja
xchg
xchg
cmpsl
mov
xorl
call
sbb
jmp
ret
xchg
loope
test
mov
fucom
mov
or
cmp
adc
mov
xor
push
test
inc
mov
xor
js
xlat
add
mov
push
mov
jp
xchg
dec
aaa
shl
and
movsb
sarl
or
dec
cmp
js
stc
or
adc
push
fadds
pminub
mov
test
adc
jg
and
push
lods
leave
mov
or
push
cmc
push
inc
push
pop
jb
xchg
in
jns
ljmp
clc
pusha
ret
je
add
xorl
lods
adc
lods
mov
inc
and
stos
mov
push
cmc
push
add
push
jle
adc
dec
das
pop
inc
pop
loopne
mov
xchg
lods
xchg
insl
or
enter
xor
les
and
push
push
mov
mov
test
cmp
mov
jnp
mov
es
or
fstp
call
rorb
add
stc
add
push
dec
xor
rcrl
cmp
aas
sbbb
dec
pop
mov
and
mov
icebp
adc
mov
xor
push
add
add
fstpl
daa
movsl
movsb
push
scas
in
pop
or
in
ds
andl
inc
popf
loopne
pop
xor
sbb
add
ljmp
fildl
adc
mov
xchg
or
xor
leave
pop
out
add
lahf
xor
and
pop
arpl
adc
scas
push
movsl
fst
sub
mov
lds
jmp
scas
and
imul
xchg
dec
testb
popl
fldt
inc
cmpb
inc
add
popa
and
in
xorb
arpl
xchg
add
jmp
loopne
pop
aam
movsl
out
call
cmp
jmp
imul
inc
outsl
mov
cli
fs
test
in
jbe
aad
shl
dec
and
adc
add
rcrb
xor
sbb
add
cmp
push
rolb
cmp
ja
jp
adc
jmp
fnstenv
repz
lods
sbb
lds
leave
hlt
add
dec
mov
lock
jg
push
cmp
xchg
fidivrs
xchg
adc
adc
in
test
fmuls
inc
subl
gs
imul
mov
or
push
mov
outsl
add
adc
jo
leave
sarw
add
std
mov
leave
cmp
imul
add
or
or
imul
add
jns
mov
add
pop
push
mov
dec
std
sbb
xchg
push
xlat
loop
mov
movsb
or
test
xor
ja
mov
xlat
cmp
aaa
xchg
inc
inc
sbb
and
stos
lock
lods
in
insl
inc
sbb
pop
ret
jmp
and
sbb
and
dec
out
jmp
hlt
aad
rolb
xor
push
popa
xchg
aaa
jl
push
add
test
sub
push
and
cs
in
dec
xchg
aad
and
test
js
outsb
shl
sbb
das
jo
call
test
fnstenv
jno
xor
mov
push
pusha
flds
mov
jb
xchg
dec
mov
jl
add
icebp
nop
adc
dec
and
and
divl
in
shlb
sbb
inc
add
adc
popa
xor
les
or
sbb
dec
cmp
push
lock
daa
sbb
inc
sahf
cmpsl
pop
cmp
jmp
pop
fs
addr16
popf
xor
ficompl
inc
mov
iret
out
sbb
add
aas
mov
xor
add
fdivs
outsb
push
push
daa
mov
loopne
test
sbb
inc
sbb
mov
cld
movsl
jno
and
mov
push
inc
pop
sub
clc
test
mov
dec
mov
fnstsw
jmp
or
sti
jecxz
nop
out
loop
inc
mov
scas
stos
push
jo
fldt
repz
push
xchg
outsl
andb
push
fwait
dec
mov
cmp
insl
and
dec
outsl
mov
add
xchg
mov
leave
add
notl
repz
push
dec
movsl
rcl
popf
enter
mov
mov
out
and
dec
jno
inc
gs
testb
xchg
std
scas
or
fwait
dec
popf
or
sub
pop
dec
mov
adc
or
cmp
cmc
hlt
inc
test
adc
jnp
popf
xorb
sbb
jl
jo
fldenv
mov
sbb
dec
push
lods
subl
mov
inc
add
fsubrl
jle
scas
andb
mov
cmp
push
fidivrs
fisubrs
loope
xor
ljmp
fwait
xchg
pop
sub
push
cmp
fsubl
jo
pop
out
out
pop
push
push
mov
jae
bnd
repz
mov
or
cltd
outsb
lea
dec
add
add
adc
orb
xlat
xlat
fildll
and
adc
sub
sbb
mov
and
xor
outsl
sbb
jb
xor
pop
flds
sbb
jnp
adc
adc
xlat
cmp
flds
pop
sub
sub
sbb
fidivs
ss
adc
jmp
mov
out
cmp
fs
arpl
push
pop
dec
mov
sarl
add
sahf
mov
in
or
jnp
inc
push
inc
hlt
xor
mov
sub
cmp
and
and
jae
mov
cmpsl
mov
jl
stos
cs
and
dec
cltd
out
sub
lock
inc
mov
dec
mov
jmp
xor
push
out
pop
repz
decl
xor
sub
loopne
test
lret
out
mov
imul
add
bound
mov
inc
or
adc
sbb
dec
movsl
mov
push
sbb
sarb
fstpt
scas
push
add
imull
call
setne
in
xorb
inc
jecxz
mov
sti
mov
inc
test
and
ret
xor
popa
bound
sbb
or
xchg
jg
push
add
mov
or
cmpsb
out
mov
push
mov
es
adc
movsb
jp
push
dec
adc
rcl
mov
loopne
cld
cwtl
je
sub
loope
inc
rcr
not
movsb
sub
adc
stos
subb
xor
or
push
mov
lock
sti
push
cmc
or
mov
jmp
adc
flds
adc
cli
inc
adc
pop
int
mov
enter
cltd
mov
sbb
mov
sub
xchg
inc
add
and
stos
ret
add
das
and
add
scas
and
lods
daa
out
pop
add
inc
mov
cmp
test
mov
mov
pop
mov
add
int
mov
push
or
sbb
add
sti
jnp
jo
or
dec
sub
cmp
inc
jl
add
mov
mov
les
add
adc
cmp
int3
sbb
ficompl
jl
sbb
add
ljmp
push
or
pop
cmp
fcompl
push
cmp
test
dec
adc
jne
mov
hlt
je
pop
aam
xchg
jo
lods
mov
add
gs
jl
int
sub
cmp
xchg
sub
or
inc
sbb
cmp
jg
andb
add
test
jo
cmp
aas
xchg
mov
xchg
inc
sbb
outsb
imul
pop
adc
call
fucomi
loopne
inc
iret
pop
and
add
clc
inc
clc
sbb
push
mov
mov
or
push
jno
aaa
mov
jno
in
add
pop
sub
popa
jns
add
outsl
jo
outsb
xor
sbb
movsb
push
jae
imul
shlb
dec
jmp
push
xorb
inc
psrlq
ja
mov
add
fsubs
ret
shll
dec
lds
es
sub
add
and
out
adc
xor
js
int3
mov
cmp
lods
jo
push
sti
xor
dec
idivl
int3
xor
int3
repnz
xchg
add
ss
outsb
add
add
mov
cmp
adc
add
loope
mov
js
push
adc
jp
test
cmp
fs
dec
adc
out
add
or
xchg
add
das
mov
push
aam
mov
cmpsl
adcb
add
mov
inc
and
arpl
js
jmp
or
xor
je
push
lods
sub
sub
addb
sbb
pop
test
mov
mov
add
jle
outsb
jbe
push
xor
scas
push
add
add
add
test
cmp
test
int3
mov
aam
dec
jns
negb
mov
in
xor
dec
adc
testl
call
cmp
lods
std
rcll
mov
ret
orb
pop
movsl
add
adc
ds
out
sub
add
lods
add
and
adc
mov
movsb
cmp
aaa
push
arpl
push
add
inc
pop
scas
ja
add
shlb
flds
insl
adc
sbb
push
out
insl
and
call
pop
xor
push
outsl
sbb
xchg
daa
add
daa
add
mov
out
jl
xor
lcall
lods
xchg
pop
add
sarb
imul
movzwl
bnd
loopne
stos
in
mov
sbb
loope
cwtl
add
int3
rcll
outsb
scas
cwtl
add
imul
cwtl
pusha
xor
sahf
dec
jmp
mov
or
mov
test
mov
add
add
add
adc
add
mov
cltd
cs
dec
inc
add
add
sbbb
ficoml
pop
xor
add
jns
lock
jo
js
xorb
xor
mov
adc
lods
shrb
jo
data16
jae
loopne
les
jo
lock
aam
sub
pop
adc
fstps
leave
icebp
jbe
xorb
xchg
dec
add
jp
xlat
scas
or
cmpb
jo
rcll
scas
push
daa
add
xor
lods
inc
pop
pop
gs
xchg
shrl
cmp
lret
mov
sbb
push
and
ss
fildll
xchg
push
or
ret
mov
outsb
or
mov
mov
scas
lds
xlat
pusha
adc
movsl
mov
sbb
dec
adc
mov
and
sub
pop
add
fstpt
and
mov
das
clc
and
adc
movsl
push
andb
pop
dec
test
dec
clc
dec
add
add
stos
stos
sub
test
pop
les
or
push
pop
test
sub
add
add
rcrb
outsl
fwait
mov
push
bound
sub
popf
pop
sub
nop
sub
rolb
xchg
cs
fiadds
int3
sbb
loopne
fldt
or
jmp
stos
lods
insl
scas
into
adc
and
stos
test
add
add
xor
addb
mov
aas
or
mov
xchg
add
and
lock
dec
addb
push
pop
add
lock
dec
stos
out
ja
jns
fstps
imulb
orl
jl
es
add
cmp
ficompl
mov
add
sub
adc
sbb
push
add
mov
xor
sbb
pop
xchg
int3
and
ret
or
push
sbb
out
pop
add
sub
adc
mov
pop
and
dec
mov
xor
leave
addl
pop
imul
add
xchg
pop
pusha
sbb
cmp
add
lods
push
inc
aas
jae
pop
add
dec
and
sbb
aad
aaa
jns
inc
push
cmp
aaa
push
mov
movsl
fs
sbb
mov
sbb
pusha
dec
int
negl
pop
subl
sbb
mov
mov
xchg
xor
xchg
sahf
pop
add
ret
dec
lock
mov
out
es
adc
mov
adc
mov
adc
arpl
add
sbb
push
cmp
inc
inc
jl
inc
dec
pop
inc
pop
or
loopne
push
push
dec
loope
sub
insl
xor
je
cwtl
cmpsl
popf
fiadds
addl
aaa
cmp
sbb
adc
cmp
inc
push
jne
add
roll
inc
xchg
cmp
adc
push
inc
cmp
outsl
in
lods
mov
add
adc
mov
or
aam
mov
daa
ljmp
add
pusha
adc
imul
jle
and
add
add
push
imul
or
adc
add
cmpsl
repz
sub
push
out
faddl
mov
push
imul
add
sub
rorb
sarb
loopne
add
pop
add
or
sbb
jbe
jl
inc
in
add
pusha
sbb
out
jp
shr
aaa
push
gs
andl
add
clc
xorl
or
int3
imul
add
subl
cmp
and
mov
lcall
xchg
or
xor
xchg
pop
or
test
lret
add
cmp
xchg
add
mov
push
sub
adc
xchg
push
mov
bswap
stc
add
iret
lea
or
sub
sbb
es
sub
jmp
popf
lods
dec
lds
push
sub
inc
push
or
popa
lods
and
mov
mov
push
sbb
pusha
outsb
pop
aas
add
rorb
jae
lods
adc
cmpb
ja
mulb
add
sbb
je
push
add
jl
push
test
mov
stos
test
or
mov
loopne
add
cmpsl
xor
mov
popf
mov
rorb
push
imul
cmc
out
and
xchg
sti
stc
movsb
addb
addr16
add
inc
js
sub
adc
add
or
fldenv
cmp
fwait
dec
bound
int3
test
xchg
decb
mov
pop
fs
les
pushf
xchg
sub
push
mov
int
ja
add
inc
sarb
ret
mov
cmp
adc
pusha
dec
jno
and
dec
addr16
int3
insl
sub
pop
sbb
fwait
nop
into
adc
aad
push
iret
xchg
push
pop
mov
shlb
inc
iret
sbb
hlt
fnstenv
jbe
jp
xlat
pop
add
mov
add
fstl
and
jo
test
adc
cmpsl
rcr
dec
and
mov
imul
sub
insl
mov
push
sbb
lret
scas
and
xor
mov
xor
cmp
clc
inc
fsubs
adc
aas
or
jecxz
push
jnp,pn
push
rcrl
stos
es
pop
ret
pop
imul
pop
push
imul
sarb
in
outsb
iret
ss
mov
jbe
xchg
hlt
lds
jge
sbb
push
in
and
or
ret
adc
jo
inc
push
adc
push
jns
push
or
outsl
pop
cmp
mov
sbb
aas
sarb
cli
push
dec
addr16
enter
in
das
xorb
push
ffreep
mov
jo
fmul
roll
and
fstps
xchg
and
test
iret
jae
fmull
sbb
sub
leave
imul
cmpsb
pop
push
jge
add
cmpsl
mov
adcl
cs
sbb
adc
jb
fcmovb
inc
xor
nop
negb
insl
dec
mov
hlt
in
xchg
push
leave
ljmp
push
mov
inc
aad
xor
cwtl
mov
shr
imul
mov
test
sbb
shlb
xchg
or
jl
jno
imul
add
je
imul
push
sbb
and
imul
push
and
pop
add
dec
push
xor
cmpsb
mov
jne
mov
ret
xchg
outsl
dec
or
pusha
lcall
ret
es
mov
or
lods
loopne
sub
in
dec
or
fcmovnb
sub
arpl
push
mov
jg
add
mov
mov
xchg
pop
ret
xchg
sahf
mov
ret
jp
popa
xchg
shlb
leave
push
xchg
dec
pop
loop
dec
shrb
sbb
lcall
aaa
jne
addl
or
pop
ret
push
mov
ja
or
add
je
jae
outsl
imul
mov
or
cmp
xor
dec
push
js
dec
add
and
adc
lret
fisubrs
scas
xor
inc
cltd
mov
or
das
repnz
cs
lret
mov
sbb
fwait
lods
inc
pop
lods
fcoml
lcall
and
mov
out
push
jl
add
lea
push
lock
sub
pop
xchg
adc
fistl
rcll
push
shlb
add
xchg
test
jne
inc
add
popf
push
arpl
ret
or
fldl
sti
jnp
iret
or
pop
sub
mov
and
adc
mov
pop
stos
add
ret
lods
repnz
add
fldt
jmp
adc
dec
movsb
pop
sub
push
clc
xor
push
lret
ljmp
and
push
xlat
pop
and
push
test
sub
cmp
push
sarb
enter
and
or
xchg
test
imul
pop
sbb
add
adc
lcall
shll
les
sub
sbb
fisttpll
sub
mov
in
mov
cmpsb
mov
xchg
xchg
andl
mov
inc
xchg
add
dec
add
mov
rcr
pop
lds
adc
imul
dec
mov
push
jns
addr16
pop
movsb
mov
roll
mov
dec
sub
jecxz
mov
inc
pop
mov
or
adc
mov
cwtl
insb
js
fld
pop
pop
jecxz
fcomps
or
js
dec
shll
and
mov
nop
movsl
mov
outsb
push
ja
jmp
xor
inc
out
into
jp
push
mov
lods
or
cmc
mov
sub
lret
std
cmpsb
clc
and
jae
sub
add
daa
jge
jb
nop
pop
ret
push
popf
in
mov
icebp
push
add
ret
jo
jno
jge
xor
inc
and
adc
movb
pop
pop
sbb
imul
xor
xchg
jp
pop
xor
pop
rorl
push
mov
daa
imul
popa
add
aas
pop
mov
and
add
jb
inc
and
aad
cmp
xchg
mov
dec
sub
and
dec
jp
inc
pushf
cltd
rcl
and
mov
pop
inc
inc
push
into
enter
in
sbb
insl
insb
orb
add
push
inc
nop
es
popa
xchg
add
push
mov
xor
mov
cs
add
jno
stos
pop
out
adc
sub
add
jecxz
xchg
pop
push
stos
mov
adc
lea
mov
sahf
pop
xor
lds
pop
mov
sahf
sti
mov
les
hlt
or
pop
mov
sti
jl
fisttps
rclb
and
sarl
jbe
sub
mov
inc
dec
inc
sbb
sarl
test
movb
sub
cmpsb
dec
sbb
adc
inc
loopne
ret
add
mov
add
jno
loope
adc
add
aaa
mov
xor
jmp
xor
xchg
jno
movsb
add
or
dec
mov
or
and
or
add
scas
sub
xchg
dec
dec
jns
xchg
andl
aam
rclb
js
push
dec
and
pop
popa
rorl
sbb
stos
sbb
outsb
clc
sub
mov
or
or
in
or
add
nop
add
xor
pop
jle
add
xor
sub
jecxz
jno
sbb
imul
push
sub
nop
mov
dec
divl
or
ficoml
dec
cmp
dec
sub
bt
mov
sahf
cli
mov
mov
imul
popa
cltd
cmp
orb
xchg
sbb
fstpt
iret
mov
mov
cmpsb
add
jle
push
push
iret
lock
push
mov
sub
xor
xor
jae
mov
jo
addl
push
pop
ret
in
or
dec
js
shll
fstpl
jo
jae
pop
aam
cmpb
adc
icebp
sar
push
dec
or
and
aas
or
aam
jl
pusha
andb
or
inc
popf
sub
jp
push
jle
lods
stc
mov
push
clc
and
xchg
lret
fs
cld
dec
pop
loope
lods
xchg
iret
into
outsb
jno
test
mov
lds
xchg
and
cmp
mov
jecxz
add
or
pop
das
sbb
add
cmp
adc
inc
pop
mov
xchg
or
push
out
fldt
aaa
pop
pop
pusha
dec
cli
xorl
in
jbe
xchg
jo
lahf
test
rolb
cmpsl
adc
xor
mov
nop
jns
push
pop
scas
movsl
sub
and
repz
mov
push
in
rol
shrl
ja
daa
mov
shr
xchg
add
push
push
fldt
cmc
mov
test
cld
and
out
adc
xchg
pop
mov
adc
in
loope
dec
adc
mov
inc
add
lods
push
hlt
cmpsl
popa
or
add
xchg
inc
push
dec
subl
cmp
push
mov
mov
push
and
jno
es
int
rcll
rorb
stos
xchg
fwait
sahf
xchg
mov
mov
xor
and
cli
nop
dec
addr16
test
sbb
clc
lahf
les
sbbl
inc
or
pop
mov
mov
mov
out
jo
sahf
add
cmpl
pop
dec
mov
xor
xor
and
or
mull
ret
xchg
sbb
pusha
add
cmc
xchg
mov
ret
xorb
pop
out
test
xchg
add
out
cld
pop
rcrb
xchg
sti
adc
dec
sbb
daa
pushf
jmp
ljmp
xchg
xchg
aas
das
jmp
cmp
loope
cwtl
sub
popf
mov
fdivs
pop
lods
iret
int3
lret
add
sub
js
sub
dec
shlb
rorl
lahf
fistps
in
aad
mov
aas
mov
cmpsl
popf
mov
int3
clc
shl
pop
push
push
out
enter
jecxz
adc
insb
mov
jmp
pop
cmp
gs
shrb
push
cltd
aad
add
stc
pop
push
add
loop
push
fs
cmp
out
jo
popl
in
mov
and
push
dec
sub
orb
dec
jo
adc
fiadds
jne
push
and
test
es
sub
je
test
dec
sbb
enter
insb
cmpsl
and
dec
pop
or
sbb
shr
mov
dec
cmpsb
pop
addl
sbb
inc
or
sub
enter
or
and
stos
adcl
cmp
jo
out
pop
es
popf
sub
subl
ja
adc
mov
add
rcll
or
das
sbb
add
dec
xchg
jne
mov
mov
add
aad
xor
lea
and
adc
add
dec
cmp
inc
mov
add
sub
cmp
sbb
inc
xchg
adc
mov
adcb
xchg
pop
fwait
jp
loop
push
mov
push
add
adc
inc
and
and
push
pop
stos
test
lods
out
cmp
lcall
frstor
pop
shlb
push
out
mov
jmp
xchg
es
in
add
arpl
out
fimull
cmp
cmp
ficoms
and
bound
jne
dec
pop
or
stos
call
lea
cmp
add
test
bound
adc
sbb
add
iret
mov
or
sub
xor
popf
pop
idivl
imul
mov
push
sub
lock
arpl
outsl
fs
adc
and
cmovp
sarl
mov
mov
adc
xor
sbb
or
and
adc
jb
aas
jle
insb
mov
jns
inc
ljmp
outsl
sub
bound
inc
mov
popf
adc
cwtl
add
sbb
mov
stc
jle
out
movsb
xor
push
sub
bound
nop
je
push
aaa
mov
mov
repnz
idivl
sbb
fsts
je
in
sub
ret
ja
xor
add
movsb
loope
pop
sbbl
rorb
std
popa
push
and
into
ss
push
xchg
push
cwtl
fildl
sub
test
out
push
sub
pop
icebp
jae
mov
bound
hlt
popa
test
xchg
jb
inc
call
dec
sahf
add
je
or
jp
cmpsl
xchg
push
jb
push
add
stos
roll
ss
push
and
shll
push
xor
sbb
add
push
xor
sbb
and
pushf
fstpt
lds
fists
mov
daa
loope
add
lret
or
mov
sbb
cli
es
loopne
sbb
push
adc
ss
mov
clc
or
add
push
sbb
xor
aas
push
and
and
mov
jo
lock
sti
jo
dec
bound
gs
test
pop
inc
popa
and
lahf
inc
xor
aad
pushf
daa
sbb
in
and
push
xor
cmpsb
xor
ljmp
pop
mov
je
iret
pushf
repnz
mov
dec
push
add
xchg
movsl
js
ret
push
fdivrs
sub
sub
sbb
repz
xor
adc
add
roll
js
fs
enter
push
pop
push
pop
iret
cmp
scas
std
mov
mov
es
imul
mov
fbld
xor
jno
int3
and
cmp
inc
push
popa
add
mov
push
aam
jp
das
dec
push
les
push
push
mov
les
mov
movsl
push
orb
mov
xlat
jno
lds
sub
or
test
mov
cs
daa
sbb
es
in
cwtl
lock
inc
or
aaa
jg
push
pop
jmp
ret
icebp
nop
ljmp
or
adc
pop
fsubrs
and
inc
ja
lds
pop
leave
push
mov
sbb
fisubrs
or
insb
movsl
dec
pop
add
cmp
mov
add
xor
fs
aas
aad
popa
jp
xchg
fdivs
xchg
fs
inc
inc
and
mov
imul
jbe
leave
mov
pop
push
icebp
add
xchg
and
push
push
add
adc
add
aaa
add
popf
hlt
icebp
xor
je
mov
xor
stos
push
pop
jmp
inc
sbb
inc
pop
dec
xor
loope
outsl
sbb
ret
pop
mov
adc
adc
and
sub
sti
inc
mov
add
es
lods
and
inc
pop
stos
sbb
dec
shlb
shlb
sub
mov
push
rorl
dec
dec
cmp
xor
inc
rcl
mov
or
sbb
cmc
imul
roll
pop
out
mov
iret
xchg
push
mov
xor
out
sbb
mov
sbbb
push
mov
and
jbe
add
mov
fnstcw
ja
out
and
add
fs
mov
fstl
fdivl
push
jo
add
pop
ljmp
mov
fnstsw
imul
ret
adc
xchg
ljmp
fldt
add
push
movsb
lret
dec
cmp
jge
and
mov
xchg
or
and
push
movsb
lods
inc
push
pop
imul
mov
push
adc
jbe
mov
rol
sub
fstpt
imul
rorb
jo
pop
xchg
jb
xchg
and
mov
or
sbb
mov
stos
clc
xor
popa
cmp
sub
leave
add
incl
ds
add
or
lret
adc
add
xchg
xchg
lods
mov
xchg
jns
mov
mov
mov
adc
push
push
ret
call
arpl
cs
cmp
dec
cmc
rcr
sbb
mov
xchg
push
mov
das
inc
pop
jmpw
fnstsw
mov
dec
xor
or
mov
into
jae
pop
inc
roll
inc
imul
adc
adc
add
popa
push
pusha
call
pushf
popa
mov
add
cltd
jno
mov
mov
notb
sub
adc
push
mov
lret
je
sub
nop
add
mov
enter
push
cwtl
dec
push
cwtl
xor
push
sbb
xchg
sub
adc
pop
mov
or
arpl
es
adc
or
and
inc
mov
rcrl
cwtl
je
dec
or
out
imul
adcb
mov
sbb
aam
or
lcall
cmp
filds
ja
ss
lahf
add
mov
or
out
mov
or
or
imul
and
mov
mov
js
imul
add
add
mov
xor
dec
xor
adcl
iret
shr
push
lods
cltd
sub
out
les
pushf
fmull
or
sub
jbe
pop
push
push
jecxz
std
xor
mov
jg
push
jge
mov
jl
rcrb
sub
test
adcl
cwtl
adc
push
mov
xchg
inc
mov
mov
aam
push
fdivrs
into
cli
int
sarl
data16
lret
sti
daa
aaa
xchg
ja
insl
lret
popf
pop
jo
pop
add
cmc
mov
mov
pusha
loopne
into
jmp
and
cmp
or
stos
insb
mov
or
shr
inc
ljmp
aaa
pop
adc
aam
les
mov
mov
and
aam
sarw
addl
aam
jno
in
imul
xchg
ds
inc
add
xchg
push
sahf
mov
inc
popf
push
xor
cltd
sahf
mov
mov
xchg
xchg
sti
jno
xchg
or
or
lds
add
dec
mov
stos
roll
cmp
ljmp
dec
iret
xchg
fwait
dec
fdivs
xchg
cmpb
dec
mov
add
or
add
adc
add
pop
jo
fs
imul
adc
out
xchg
or
xchg
pop
or
iret
xlat
and
out
cld
out
xor
fsts
es
lds
rclb
push
xchg
ljmp
mov
sbb
and
cmp
mov
pop
ret
lds
fidivrs
jbe,pn
sti
test
js
sbb
ljmp
push
cmp
loope
ffree
mov
icebp
adc
push
leave
mov
fsubrl
outsl
mov
sub
stc
arpl
push
mov
sub
jns
cmp
jle
fadd
arpl
mov
shll
cmpsb
icebp
mov
push
mov
test
shrl
int3
xchg
jnp
imul
push
scas
out
adc
test
sub
rolb
and
sbb
rorb
mov
pop
cmp
lods
aam
mov
test
pop
or
dec
sub
subl
dec
sbb
adc
adc
xor
test
mov
ja
push
xchg
ret
add
mov
sub
addb
lahf
fldt
lea
ret
or
push
xlat
cmp
aad
into
movb
popf
or
push
xchg
pop
icebp
or
xchg
inc
jle
pusha
lds
mov
xor
fsubl
adc
sub
aam
or
add
add
mov
and
xchg
and
jle
jnp
cmc
out
test
or
mov
jp
aad
sbb
movsl
loope
daa
icebp
popa
aaa
lcall
cltd
adc
popa
xchg
xchg
rorl
add
imul
push
add
xchg
mov
dec
or
mov
cwtl
ret
adc
int
inc
inc
or
xor
rolb
push
fs
orl
jno
fcoml
cmc
and
push
mov
sti
das
push
pop
loope
jp
xchg
mov
sub
push
fcoms
sub
mov
mov
lret
sub
pushf
cwtl
xlat
inc
pop
outsb
sub
jnp
icebp
push
sbb
sbb
cmp
sub
or
xchg
push
push
cmc
push
dec
pop
pop
jne
cmp
daa
or
cmp
pop
add
in
xor
xlat
out
add
add
sbb
add
pop
dec
ljmp
push
lock
pop
add
mov
jnp
js
and
adc
movsl
xchg
aam
mov
rclb
inc
jbe
sbb
stos
push
pusha
adc
lock
ret
scas
and
and
roll
mov
mov
adc
sbb
in
add
fisttpll
fiaddl
jmp
push
enter
cmc
test
and
sarb
adc
pop
pop
and
rcr
adcl
or
std
loop
and
mov
add
pusha
cmpb
popa
or
hlt
mov
insb
imul
pop
in
mov
mov
adc
aaa
inc
sbb
sbb
das
repnz
jo
aas
cmp
xorl
cltd
jae
bound
adc
add
xchg
movb
cmp
lock
sub
or
aas
movsb
jg
add
ror
inc
sub
xchg
cmp
sub
dec
push
scas
mov
push
sub
lret
icebp
jno
or
fbstp
pop
mov
xor
stos
insb
mov
aas
adc
hlt
shlb
jle
push
sbb
movsl
sqrtps
cmp
dec
jecxz
sub
add
ret
popa
fisttpll
cmp
sbb
sub
dec
js
sahf
movsl
testl
mov
pop
or
inc
je
adc
sbb
jb
pusha
pusha
bound
mov
in
jo
cli
and
adc
push
mov
push
dec
ret
fxch
add
repz
pop
xchg
adc
imul
sub
pop
test
inc
inc
fwait
sub
xor
cltd
rolb
sbb
in
cwtl
mov
or
imul
test
or
addr16
xor
les
jmp
fisttpl
adc
xchg
jl
adc
scas
add
xchg
adc
mov
xchg
fisubl
cmpsl
sub
in
lahf
outsb
pop
mov
or
xchg
inc
xchg
or
dec
hlt
std
mov
jo
les
dec
inc
xor
push
cmp
add
adcl
aad
les
cmp
jne
fdiv
mov
es
and
mov
les
arpl
icebp
sub
js
sbb
lods
ds
std
daa
pusha
arpl
inc
stc
test
inc
test
pusha
fnstcw
mov
and
dec
add
add
dec
pop
iret
dec
out
mov
push
dec
cmpsl
pop
mov
outsl
enter
clc
aam
push
push
into
call
jns
leave
sub
sarl
push
adc
dec
xchg
in
icebp
push
inc
rclb
dec
cmp
xchg
leave
gs
fldt
push
cmp
cmc
int3
das
sub
sub
xchg
adc
push
loopne
test
imul
dec
mov
addl
jmp
and
or
mov
les
jno
out
xchg
add
xchg
sbb
or
add
mov
sub
js
dec
test
cltd
jle
and
cmp
push
pushf
or
push
nop
hlt
mov
fsubrs
or
xor
inc
push
sbb
jae
xor
in
sub
loopne
add
cmp
adc
pop
add
pop
out
shrb
or
mov
mov
loopne
dec
les
xor
inc
add
mov
sub
xor
mov
jne
push
mov
daa
aas
lret
add
imul
rcr
inc
enter
fisubrs
out
mov
push
add
push
pop
cmp
imul
movsb
push
mov
or
out
inc
lret
inc
lods
pop
sbb
pop
dec
in
and
inc
or
ja
outsb
push
loop
push
dec
test
xor
subl
pop
ss
sub
cmpsl
shlb
sarl
add
push
imulb
ret
lcall
and
push
faddl
cmpsl
pop
sub
loope
popf
cmpsb
xor
fwait
setnp
mov
cwtl
or
inc
adc
jmp
dec
aam
inc
repnz
lahf
movsb
and
xor
jmp
push
stc
jecxz
adc
adc
lods
inc
inc
xchg
ffree
lret
bound
add
ret
mov
mov
inc
jns
test
push
jo
xchg
inc
fistpl
xchg
sub
fmuls
shrb
sbb
push
push
mov
jo
jg
xchg
ret
mov
jmp
ret
mov
pushf
nop
inc
cmp
or
pop
xchg
icebp
iret
xlat
jno
sub
lcall
es
int3
not
lods
js
mov
std
ljmp
push
xchg
loopne
sar
mov
inc
lods
push
sbb
fildll
add
imul
push
aas
mov
pop
cmp
in
js
mov
jne
mov
insl
xor
pop
and
in
les
adc
popf
inc
pop
cmp
rcll
rclb
xchg
pop
mov
fs
cli
cmp
mov
les
and
es
adcl
das
add
and
dec
mov
inc
jp
in
out
and
loopne
push
mov
aaa
mov
and
pop
add
push
cwtl
adc
jnp
cmp
lret
add
jno
push
iret
addl
outsl
sbb
xor
addl
mov
pop
pop
test
aad
test
out
adc
cs
imul
mov
sbb
jl
or
xchg
jmp
mov
xchg
shll
add
arpl
movsl
fsubs
and
js
add
cs
fldl
int
jl
xor
mov
add
arpl
shll
inc
je
das
jae
cmpsb
and
arpl
sub
daa
add
sbb
adc
and
daa
sub
fadds
push
sbb
sbb
xchg
push
sahf
xchg
fwait
aas
and
or
adc
daa
jns
add
dec
jno
sub
in
pop
in
push
jbe
lahf
stos
dec
aam
xor
call
xor
fwait
outsl
iret
xor
add
mov
or
add
out
dec
sbb
dec
mov
add
lret
lret
jmp
add
rol
mov
sub
add
lods
pop
jns
dec
inc
inc
stos
or
pop
loopne
push
pushf
xor
sbb
or
addr16
scas
ds
clc
orb
and
jno
xlat
popa
or
cld
jecxz
inc
loope
out
xlat
sbb
fists
in
xchg
movsl
mov
sbb
mov
dec
jmp
frstor
xorb
add
clc
jae
xor
je
fsubs
mov
xor
adc
fdivrs
jo
mov
dec
mov
jo
mov
pop
cs
scas
cmp
xchg
inc
mov
insl
push
int
pop
jbe
cld
add
mov
xchg
adc
push
sub
and
inc
clc
test
aas
xor
mov
mov
ss
loopne
add
inc
stos
sub
test
fs
orl
pop
fs
ret
mov
inc
iret
dec
hlt
test
out
pop
sbbb
or
lret
les
lret
push
cmp
xlat
inc
mov
subl
test
push
xchg
mov
push
std
daa
mov
std
data16
popf
pop
and
jb
ret
arpl
mov
add
adc
push
or
loope
xchg
push
push
sbb
dec
xchg
jno
adc
icebp
mov
lea
or
pop
and
cmp
lock
shlb
and
rcr
bound
and
pop
mov
je
test
pop
sbb
sub
out
shl
and
xor
sbb
cmp
mov
push
dec
int
pop
xorb
jnp
add
or
mov
icebp
adc
loop
addr16
imul
push
add
lcall
xorl
sub
sbb
and
pop
adc
ja
xchg
or
stos
sub
push
or
dec
lods
pop
and
movsb
idiv
add
int3
add
in
push
mov
mov
lods
push
push
pop
sub
out
fs
pop
pop
ficomps
loope
loop
and
add
adc
and
imul
adc
add
push
push
dec
loopne
or
out
dec
out
fistl
lock
push
sub
dec
loope
call
scas
mov
test
inc
mul
push
or
push
mov
inc
jbe
subl
repnz
leave
or
shlb
mov
jo
pop
aaa
mov
inc
ljmp
cmp
pop
push
cmp
out
xchg
fidivrs
lods
jge
cltd
adc
and
push
inc
cmp
fmull
mov
xlat
jb
clc
push
jp
testb
lods
add
adcl
lret
xchg
push
lret
push
mov
sub
mov
fidivrs
pop
fbld
loop
adc
or
movsb
movsb
lock
dec
sbb
dec
stos
pop
cwtl
test
push
push
add
outsb
jno
out
push
cmp
xchg
daa
mov
pop
shrb
mov
iret
inc
jmp
iret
movsl
jno
mov
and
pop
or
iret
imul
cmpsl
stos
and
or
lock
add
push
sub
fwait
adc
dec
popf
and
andl
test
and
pop
ret
pop
and
xorl
add
mov
imul
mov
push
dec
sti
add
inc
adc
adc
jmp
aaa
int
push
mov
adcl
es
insb
loopne
das
dec
push
cmc
add
sahf
sub
pop
mov
imul
lods
in
mov
andl
mov
fiaddl
syscall
or
or
and
add
or
xchg
sub
cmove
pushf
xchg
mov
inc
outsb
push
movsl
int
add
push
and
addl
pusha
insl
or
add
pop
jae
nop
rolb
xchg
loopne
imul
pop
pop
int
jno
mov
add
lods
jb
add
ficompl
sub
ljmp
push
adc
add
xor
das
push
and
rorl
mov
sahf
imul
imul
mov
add
xlat
xchg
sahf
mov
std
mov
adcb
sbb
sbbl
xor
imul
push
add
jg
and
add
inc
jg
sub
sub
mov
pop
jne
gs
cmp
mov
inc
and
xchg
sbb
xor
int3
dec
ljmp
or
mov
sub
or
addl
xor
ret
inc
lret
adc
xchg
frstor
dec
les
sub
dec
push
sub
mov
sub
scas
pop
push
ja
sbb
nop
sub
pop
cmpsl
or
and
and
inc
cmp
fmull
push
xor
sub
or
add
dec
leave
insl
cmp
out
dec
inc
push
dec
sarb
popa
mov
scas
outsl
mov
add
pop
scas
rcll
sub
outsl
out
or
dec
adc
fnstcw
lock
cmp
dec
gs
lahf
mov
mov
fstl
pop
call
outsb
pop
nop
push
ret
xor
push
add
add
add
sbb
sbb
mov
push
xlat
dec
stos
xor
mov
mov
xor
ja
add
push
dec
and
rcrl
or
movsl
mov
fcoms
xchg
dec
pusha
and
out
imul
add
scas
xchg
scas
or
outsl
xchg
movsl
cmc
cmc
add
mov
adc
stc
movsl
nop
rclb
fucomi
and
cmpsl
hlt
lds
xchg
es
mov
add
out
cltd
lds
mov
shrb
lock
aas
jle
add
sub
subl
pushf
or
push
aad
dec
pusha
mov
out
mov
lods
ss
or
ljmp
adcl
pop
sub
cmp
adcb
and
sarb
mov
mov
lahf
mov
xchg
testl
pop
cld
adc
mov
jo
or
movsl
lea
mov
add
pusha
popa
xchg
cld
add
aaa
fldt
ret
mov
ss
jl
enter
jecxz
adc
js
add
xor
ds
add
pop
ret
shll
xchg
mov
in
add
loopne
lds
aas
cmc
pop
and
les
stos
fldenv
pop
inc
in
sub
mov
cmp
pop
xchg
pushf
lcall
push
loopne
ret
shll
or
add
dec
jbe
and
xchg
push
sbbb
and
mov
pop
adc
repz
dec
loopne
mov
xor
stos
xor
mov
sub
ss
jl
loopne
popa
daa
sub
test
dec
ret
fstps
mov
sub
mov
or
inc
sub
adc
test
int3
ret
pushf
dec
dec
sbb
cmp
xor
sub
out
mov
and
add
adc
stos
or
fadds
sbb
xor
xchg
clc
dec
mov
ret
cmp
roll
dec
jecxz
mov
dec
mov
insb
jne
and
in
imul
fwait
dec
pop
or
frstor
cmp
push
in
cli
sub
movsb
fstpt
add
and
cmp
lahf
push
mov
es
dec
inc
out
ret
testb
movsb
push
push
push
clc
mov
sbb
cmp
in
cmpsl
and
pop
notl
or
sub
scas
cmpsl
aad
jge
and
movsb
mov
xchg
push
stos
xchg
mov
jle
mov
fs
and
cmpsl
loope
xor
jb
rcrl
sbb
hlt
repnz
out
mov
imul
or
dec
mov
jnp
push
sbb
and
pop
sbb
mov
cli
dec
cmp
lods
pop
push
inc
out
and
cmp
and
sbbl
pop
sbb
mov
mov
mov
arpl
inc
push
loopne
xor
fbld
addb
push
sub
test
stos
xor
adc
popa
aas
ds
dec
jge
fdivrs
xchg
js
inc
test
adc
or
mov
push
es
jnp
or
loope
es
arpl
ja
add
shll
scas
rolb
jae
cmp
add
sbb
movsb
pop
push
jb
subb
or
enter
jnp
sbb
pusha
add
pop
jae
pusha
inc
dec
fldl
inc
add
ret
add
in
sbb
xchg
int3
cmp
stc
icebp
inc
sbbb
cmp
jp
addb
and
movsl
sbb
les
sub
or
dec
loopne
adc
test
rcl
mov
mov
orl
insl
push
sbb
or
xor
lock
leave
les
pop
cltd
inc
and
xorb
push
mov
out
add
out
and
fcompl
or
jne
lods
imul
stos
test
sti
add
add
scas
or
popf
jl
inc
lret
loopne
jge
add
xchg
fbld
addr16
cltd
rorb
inc
jecxz
pop
outsl
dec
pusha
xorl
and
imul
push
inc
push
scas
shll
addr16
mov
enter
xor
ror
cmc
pop
sbb
adc
es
imul
loopne
cmp
scas
xor
add
push
pop
insl
cwtl
inc
mov
int
adc
int
pop
adc
mov
xchg
insl
sub
jo
ds
pusha
popa
gs
outsl
mov
and
outsb
fisttpll
push
mov
mov
dec
mov
xor
outsl
fmull
pusha
out
push
inc
mov
cmpsl
hlt
adc
sbb
add
or
push
push
add
add
add
xor
cmp
loopne
fs
pop
add
xlat
and
mov
dec
mov
push
add
rorb
xor
xchg
inc
adc
and
iret
push
fsts
je
scas
jbe,pt
mov
and
inc
dec
shl
inc
push
jno
dec
rorb
pusha
jge
nop
mov
testb
shl
cltd
outsl
mov
mov
mov
ficoms
push
dec
pop
pop
ja
pop
insb
mov
add
stos
fcomps
sbb
sahf
movsl
cmpsb
bound
cmc
or
sbb
dec
dec
add
test
out
cwtl
rcl
shlb
notb
jl
sbb
mov
xchg
mov
dec
cmp
icebp
inc
pusha
imul
sub
add
push
and
adc
incb
insl
es
and
sub
xchg
pop
add
sub
mov
lods
inc
lods
xchg
daa
inc
sub
and
ja
cwtl
and
ret
dec
mov
lahf
cmp
and
in
jae
roll
daa
pop
xor
popa
mov
pusha
mov
mov
fwait
or
add
add
ljmp
cmp
nop
cmp
out
add
add
and
push
inc
push
pop
lret
mov
add
inc
dec
pop
dec
nop
rol
sbb
add
pop
push
jo
add
xchg
and
xor
imul
pusha
mov
dec
push
sub
inc
test
orl
add
cmp
jbe
jno
jl
inc
adc
bound
into
icebp
lock
mov
xor
fidivrl
daa
adc
out
add
xchg
es
sbb
lahf
loopne
test
rcl
js
add
xchg
dec
pop
sbb
enter
jnp
aam
push
lcall
and
insl
out
mov
pop
lahf
and
test
or
xchg
test
rorb
lcall
and
add
mov
xlat
pop
mov
int3
mov
dec
bound
inc
and
inc
inc
sub
test
push
sarl
daa
dec
movsb
dec
sbb
pusha
movsl
dec
iret
cwtl
ret
or
inc
sub
xor
insl
mov
jge
cmc
xchg
imul
jae
fwait
gs
mov
and
sbb
psubw
sarl
cmpl
add
and
imul
jle
mov
xchg
adc
fnsave
jge
dec
mov
push
mov
stc
dec
jle
dec
lds
hlt
pop
xchg
add
loop
test
pushf
xchg
jecxz
sbb
pop
jle
cmp
lock
addl
mov
mov
push
bound
lahf
push
add
push
xchg
mov
pop
mov
inc
and
push
rolb
sbb
fistps
pop
and
roll
pop
dec
jno
push
scas
mov
pop
adc
movsb
lahf
xor
lret
xor
xchg
mov
and
pop
imul
rorl
add
pop
dec
ljmp
sbb
and
fistl
add
in
sub
ficoml
add
and
fstps
jnp
jl
or
xchg
pusha
inc
mov
mov
xor
inc
int3
add
fwait
mov
daa
jecxz
xchg
xchg
push
shlb
xor
or
mov
adc
sub
adc
and
and
out
daa
mov
fwait
gs
xor
andb
mov
and
push
jne
movsb
jns
inc
add
xor
add
das
sbb
out
iret
das
sub
cmp
sbbb
dec
mov
add
mov
inc
push
test
imul
sub
dec
dec
xor
hlt
pop
xchg
pop
sarl
push
xor
mov
shll
jmp
xchg
scas
sbb
xchg
sub
inc
adc
rorb
js
imul
aaa
int
std
out
sub
test
test
mov
test
and
dec
aas
test
pushf
dec
sub
in
push
xor
dec
adc
inc
inc
mov
push
sbb
xchg
adc
roll
xchg
cmp
dec
pop
cmp
into
call
add
inc
test
loope
cmc
rclb
adc
insl
loopne
add
subl
stos
mov
clc
pop
rcrb
and
stos
cmp
rcl
mov
test
js
cmp
xchg
sbb
jle
stc
inc
movl
sub
xchg
or
cli
test
or
push
adc
push
rcr
ja
and
sbb
xchg
jo
shlb
push
cwtl
add
repz
cmp
xor
add
push
mov
pop
xchg
push
test
or
or
fmul
out
popa
sub
cmp
aam
sarb
add
inc
mov
call
or
syscall
xchg
jle
mov
add
popa
pop
bound
aas
iret
mov
cmp
in
lret
sti
jl
mov
pushf
jo
inc
sub
adc
stos
push
sbb
dec
bound
jnp
rclb
inc
jns
int3
cwtl
pop
shlb
dec
xchg
jbe
push
mov
pusha
fbld
adc
arpl
add
xchg
nop
loopne
gs
mov
mov
std
rol
and
push
leave
cltd
ret
iret
insl
jmp
inc
sub
in
cltd
xchg
adc
add
sbb
fidivrs
dec
pop
xor
cltd
add
sbb
insl
iret
xchg
ret
mov
push
fnstsw
add
test
cli
xchg
adc
dec
cmp
xchg
xor
xchg
sub
ror
pop
pop
insl
xlat
rclb
adc
addr16
pop
or
mov
jno
rcll
gs
add
xchg
and
xor
cwtl
cwtl
inc
jge
test
push
loopne
adc
add
xchg
adc
push
or
das
add
push
aaa
adcb
scas
loopne
sbb
data16
mov
dec
lea
sub
rolb
inc
mov
xor
cmp
mov
mov
int3
lret
aad
xlat
aam
ret
xchg
ds
mov
fs
adc
mov
sbb
icebp
popa
mov
xor
inc
icebp
dec
pop
fdivrl
inc
push
dec
out
push
push
jmp
adc
lea
or
sub
pop
inc
or
test
mov
push
cmp
imul
mov
lock
and
xor
mov
nop
aam
or
pop
fsts
aam
enter
shll
cmp
les
sbb
pop
mov
popf
scas
push
loopne
adc
adc
sbb
jae
jl
mov
or
loope
or
inc
or
dec
lea
sub
mov
addr16
rcr
jb
sub
inc
dec
inc
js
adc
inc
pusha
pop
and
movsb
scas
fcmovnu
sbb
or
cld
je
stc
outsb
inc
dec
and
pop
loope
add
push
push
adc
stos
pop
aaa
outsl
cmc
imulb
xchg
push
lods
mov
scas
test
test
adc
add
in
fcompl
push
lods
adc
mov
mov
jl
xlat
xor
push
mov
pop
or
adc
imul
xlat
fcomp
xchg
ja
jbe
je
jns
mov
shlb
push
int3
fadds
and
je
stos
inc
sub
add
scas
xorl
and
dec
gs
fnstcw
mov
loope
rclb
dec
lock
cmpb
sbb
mov
adc
aaa
pop
mov
cmp
xchg
jl
pop
push
jecxz
add
sbb
je
test
in
add
fsubl
dec
loop
in
rcll
fisttps
imul
cltd
adc
or
push
lret
xchg
ljmp
cmp
fcmovne
fst
xor
jnp
ret
adc
ret
scas
fldl
xchg
nop
mov
xchg
mov
jae
xchg
inc
adc
jnp
jnp
sub
je
dec
ja
jnp
leave
mov
xchg
lret
add
and
daa
div
in
jl
lock
mov
mov
or
imul
repz
push
ret
jmp
jecxz
cmp
sbb
and
mov
xchg
add
pop
daa
jo
or
pop
xor
pop
dec
pop
xchg
inc
sub
aaa
jg
fwait
adc
mov
add
insl
int
adc
and
ljmp
mov
push
jl
xchg
xchg
adc
add
mov
push
or
les
icebp
daa
xchg
add
adc
dec
pusha
loope
pop
push
clc
push
or
mov
lods
inc
or
push
pop
inc
movaps
je
push
pop
loope
loopne
into
add
addr16
iret
pop
pusha
and
out
sbb
test
dec
xchg
lret
cmpb
lds
stos
movsl
filds
mov
test
aad
popa
pushf
ja
jp
ret
mov
and
push
cs
pusha
pop
xchg
inc
add
or
test
jnp
incb
xchg
and
das
jo
das
lea
mov
mov
add
push
mov
inc
andb
jae
xlat
je
jae
push
cwtl
adc
cmp
arpl
mov
xlat
push
addb
nop
rcrb
divl
icebp
inc
add
pop
and
cmp
loop
das
les
hlt
inc
or
xor
mov
outsb
pop
cmp
mov
jmp
shl
iret
inc
cld
and
cwtl
mov
rorb
mov
jp
insl
and
adc
or
xchg
xor
push
pop
shrl
mov
imul
mov
hlt
and
push
outsb
dec
mov
inc
ret
ja
pusha
cs
push
jbe
cmp
test
insl
mov
cmpsb
adc
dec
bound
mov
pop
xchg
fcmovne
inc
aas
add
or
ret
lds
mov
adc
test
out
push
es
andb
adc
inc
xlat
rolb
push
mov
jmp
mov
cmpsl
pop
stos
pop
and
mov
and
mov
flds
xorl
jg
jne
mov
cmp
nop
mov
fldenv
push
inc
and
and
loope
sbb
test
jbe
mov
jl
xchg
inc
and
pop
xor
iret
insl
add
mov
iret
xchg
sub
lahf
stos
push
adc
int3
dec
sbb
lret
jno
or
cltd
test
inc
sub
and
or
test
stos
jle
mov
stc
in
int3
shl
mov
cmpl
or
xor
nop
es
in
pop
jle
cmpsl
movsl
cmp
inc
cld
outsb
xor
sub
movl
add
pop
xor
inc
add
repnz
push
pop
and
das
or
dec
and
mov
lock
adc
mov
mov
adcb
dec
xor
xchg
std
or
icebp
dec
sbb
std
mov
jno
inc
xchg
dec
out
adc
xor
scas
daa
fiadds
movsb
das
mov
test
pop
lods
ss
lret
fadd
inc
mov
outsl
inc
jg
sahf
shlb
mov
aas
xchg
in
add
movl
enter
add
jl
sar
loopne
adc
je
xchg
mov
je
testl
and
add
jns
sbb
popa
fimuls
inc
popf
push
push
xor
adc
push
pop
push
lock
mov
imul
and
and
addb
movsl
test
pop
inc
or
pop
fstps
push
cli
aas
lret
mov
add
imul
sub
hlt
test
jecxz
mov
nop
mov
xor
or
sbbl
test
sub
inc
ja
cmc
cmp
mov
stos
and
adc
les
adc
adc
pop
mov
cld
mov
xchg
cs
sub
xchg
push
xchg
clc
mov
mov
into
dec
iret
mov
and
pop
lcall
pop
add
and
sub
jmp
lret
or
loopne
aad
inc
or
je
cli
adc
jno
mov
ret
sub
mov
sub
pusha
xchg
mov
into
inc
push
enter
jae
dec
iret
fiadds
into
sub
sbb
and
nop
mov
push
add
sahf
cmc
clc
pop
ds
mov
adc
movsb
adc
jns
pushf
adc
insl
sbbb
sbb
sub
or
pop
cwtl
push
lods
jnp
add
rorb
sub
mov
ret
cli
loope
sub
fildll
jmp
adc
dec
out
inc
arpl
pusha
push
dec
sub
or
sbb
pop
shll
inc
sysenter
pop
insb
adc
xor
sub
and
pop
iret
xchg
insl
and
xor
fcmovnb
push
leave
fcoms
or
sar
arpl
outsb
fwait
or
imul
loop
inc
inc
ja
dec
adc
adc
push
sti
es
andb
jge
jnp
insl
and
jno
daa
pushf
icebp
mov
ret
shrl
inc
ljmp
test
lods
out
cmc
and
add
push
rorl
jmp
and
dec
lock
push
inc
add
je
push
sbb
test
cmp
jbe
mov
cmp
add
jg
adc
insb
jo
sqrtps
inc
and
imul
adc
rclb
sbb
fistpl
or
loopne
push
pop
daa
es
scas
sbb
sbb
gs
fimull
jae
jnp
ret
cmp
pop
insl
rcrb
test
lock
movsl
test
jae
xchg
sub
mov
dec
cmp
sbb
add
mov
les
test
dec
loope
fchs
rol
stos
ja
pop
xor
popa
test
shrl
jecxz
xchg
adc
push
xor
and
and
sub
dec
push
inc
imul
inc
sbb
xchg
sbb
fsubrs
daa
cmpsl
xchg
movsb
das
cltd
push
mov
adc
and
arpl
adc
pop
imul
or
sbb
mov
jne
inc
mov
push
mov
addl
les
inc
inc
add
fisubl
and
dec
loopne
in
dec
sti
xchg
mov
sbb
shlb
xchg
add
js
add
aaa
xchg
cmpsb
push
lret
pop
cmp
rcl
or
cmp
sbb
inc
adc
mov
les
movsl
rcll
js
mov
inc
popf
and
hlt
dec
jp
or
sarb
addr16
fadds
pop
test
adc
and
inc
test
lods
cmp
fwait
dec
and
pop
and
adc
sbb
addr16
cmp
add
imul
lea
shll
cmp
cmpb
lret
push
in
xchg
nop
mov
cmp
aaa
cltd
sub
inc
push
dec
cmp
xchg
adc
add
loop
test
cmp
dec
in
aam
cmp
cmc
dec
nopl
call
pop
mov
and
popf
int3
mov
cwtl
mov
push
push
adc
mov
add
inc
xchg
push
xchg
arpl
xchg
iret
cltd
mov
xchg
and
loope
mov
rolb
jb
dec
mov
leave
popa
lds
sub
inc
dec
lock
stos
clc
pop
dec
es
mov
in
push
cmp
sub
out
sbb
addr16
out
mov
std
test
mov
add
lret
lret
xor
jmp
movsb
push
icebp
rclb
dec
push
push
mov
jecxz
xor
jmp
pushl
and
fstpt
scas
jb
in
shlb
xor
stc
dec
xorb
xchg
stc
movsl
popa
les
xchg
inc
call
jne
add
lock
adc
orl
ja
inc
or
notl
es
ret
push
daa
imul
or
and
or
push
sbb
xlat
push
loop
jle
test
fucomip
dec
rorb
push
pop
jo
pop
or
dec
mov
sbb
rorb
add
lock
adc
push
je
dec
movsb
lock
xchg
push
mov
push
inc
mul
mov
and
xor
lods
sbb
mov
cli
pusha
cwtl
xchg
gs
std
clc
cli
mov
mov
add
sahf
push
movsb
sti
mov
cmp
bound
xor
add
lret
les
enter
ja
adc
iret
out
lret
aam
aad
mov
scas
mov
and
lea
jmp
xchg
sub
lds
push
sahf
dec
add
mov
adc
and
outsb
jmp
add
and
stos
xlat
add
test
jg
xchg
aas
mov
add
loope
mov
xor
es
adc
sbb
mov
sub
mov
iret
or
sub
aad
ret
mov
ljmp
jb
stos
movsl
arpl
lds
inc
fildl
ljmp
sub
mov
xchg
cmp
dec
test
cmp
ja
mov
out
or
cwtl
fs
cmp
adc
fwait
ret
jnp
or
adc
lcall
popa
add
sbb
gs
stc
sbb
push
mov
jle
push
cwtl
mov
pop
mov
mov
stos
push
faddl
sarb
cmp
sbbb
arpl
mov
push
leave
cmp
xchg
pop
cmp
pop
fisubrl
cs
add
dec
jnp
inc
xor
movsl
mov
dec
pop
jno
insl
adc
and
and
pop
jg
fdivs
dec
retw
or
mov
mov
add
lock
repz
cli
push
xchg
addb
push
dec
adc
sub
addl
add
push
sbb
sbb
add
add
sbb
and
daa
lahf
or
loopne
inc
in
add
lds
and
inc
lock
fmul
jecxz
cmp
cltd
mov
push
inc
sub
xor
fists
push
pop
sub
popa
adcl
pop
or
xorl
fidivrs
pop
sub
ljmp
scas
sbb
mov
iret
cmp
and
rorb
lahf
jnp
cs
inc
push
imul
out
rclb
mov
lcall
jle
xor
pop
pop
jnp
repz
mulb
mov
or
sub
jnp
loop
fbld
iret
mov
sbbl
pop
scas
cmp
addr16
adc
pop
lret
iret
sbb
test
movsb
mov
shl
add
dec
jge
xor
mull
push
data16
adc
cltd
fs
cmpsb
add
es
dec
popf
xlat
xchg
jb
pusha
add
mov
lret
add
add
xlat
inc
repz
rolb
inc
sbb
sbb
push
pop
lret
sbb
add
inc
adc
xchg
stos
pusha
movsl
lods
or
xchg
dec
imul
jbe
movl
inc
add
push
mov
clc
mov
inc
xor
xchg
mov
pop
cmc
jge
shlb
and
push
leave
adcl
cmc
popa
push
dec
lret
xor
mov
inc
mov
xchg
add
cwtl
cmp
xor
lret
fnstcw
dec
test
or
inc
adc
inc
jp
repz
imul
sbb
and
inc
jb
jbe
rcl
hlt
pop
orl
mov
movsb
ds
iret
xchg
mov
int
inc
mov
cmp
inc
or
push
inc
mov
pop
movsl
mov
sub
xchg
sbb
mov
cmpsl
gs
outsb
mov
xor
fisubs
dec
adc
mov
mov
popf
sbb
add
xchg
xchg
mov
andl
xor
add
jmp
xor
jl
bound
or
or
jp
hlt
inc
loop
dec
push
xor
inc
mov
mov
pop
sub
mov
xchg
jge
xor
jle
mov
xor
loope
add
xor
fldenv
pop
add
scas
cmp
sbb
cmp
dec
dec
pusha
test
mov
cmpsl
cmc
or
xchg
loop
add
push
or
push
inc
push
dec
or
cs
xchg
sbb
dec
and
or
xchg
cmpsl
push
bound
mov
cltd
cmp
and
fldcw
mov
mov
pop
orl
adc
into
iret
loopne
add
sbb
sbbb
and
push
jg
mov
and
gs
das
jne
jno
pop
in
mov
mov
fsubrl
and
addr16
mov
mov
adc
les
dec
cmp
stos
test
dec
inc
fbstp
adc
adc
xchg
push
cltd
adc
flds
inc
mov
popa
es
popf
add
xchg
adc
lahf
xchg
movsl
and
push
pop
popf
mov
add
push
adc
lods
pop
jae
jb
cmpsl
push
jno
stc
mov
pop
mov
jns
xorl
push
test
or
sub
mov
add
sub
xchg
jmp
pop
int
add
pop
test
pop
pop
or
bound
mov
xchg
lds
bnd
insl
lret
add
or
sbb
pop
dec
iret
mov
sbbl
rorb
jecxz
push
pop
add
mov
sbb
insb
mov
add
fstl
mov
and
or
push
and
or
jecxz
pusha
mov
adc
ret
push
push
icebp
icebp
push
cwtl
jl
cld
psubsw
pop
push
adc
orw
mov
mov
js
push
mov
add
lock
mov
sti
aam
adc
fcmovbe
inc
sbb
xor
xchg
shll
push
insb
add
and
inc
js
add
ss
pop
lods
dec
andb
jno
mov
inc
xchg
cmpsl
add
push
add
popa
mov
sbb
fcmovne
and
sbb
les
mov
jae
sahf
push
adc
or
jnp
decb
addl
xchg
adc
xchg
aad
mov
jbe
arpl
ficompl
jge
les
xor
dec
fistps
js
jge
cld
sub
pop
ja
push
xlat
or
stos
and
xor
scas
data16
inc
push
fldl
icebp
test
push
loopne
and
lea
stos
outsb
sbb
jecxz
pop
xor
lods
push
add
dec
sbb
mov
jl
fists
sub
inc
loopne
jecxz
inc
icebp
mov
or
mov
xchg
scas
add
dec
mov
or
ret
lods
or
call
icebp
jmp
subl
mov
push
fldenv
mov
adc
pusha
mov
add
xor
insb
lods
mov
sub
add
or
jo
and
push
and
stc
rcrb
cmp
push
lcall
push
push
repz
sub
in
or
hlt
add
mov
push
roll
cmpsl
rcr
mov
xchg
flds
insl
dec
sbb
xor
add
adc
lock
repz
cwtl
cwtl
sbb
es
clc
paddusb
rep
nop
dec
and
cmpsl
sub
cmpsl
aam
push
in
push
xchg
jecxz
leave
sbb
sub
pop
or
icebp
push
push
pop
xor
add
or
lret
aam
dec
and
incl
mov
fldenv
add
arpl
add
inc
mov
arpl
or
subb
cmp
mov
lahf
push
pop
adc
out
repz
pusha
pop
push
dec
sbb
dec
xor
mov
mov
mov
mov
add
movmskps
mov
lods
pusha
jl
xchg
mov
mov
icebp
sbb
xchg
adc
cmpsl
xor
jo
mov
push
repz
pop
mov
dec
xor
or
iret
xor
daa
jmp
inc
xor
sub
adc
lcall
xchg
cwtl
push
aaa
xor
inc
adc
hlt
dec
adc
or
orl
rcrb
pop
sbb
adc
jge
repz
xchg
test
cmp
in
sub
mov
test
insb
sbb
xchg
lcall
push
ja
push
adc
mov
dec
pop
add
imul
movsb
jbe
ret
xor
xor
and
jo
push
nop
adc
push
and
xor
add
dec
movsl
sbb
out
jge
js
jns
add
pop
push
pop
cmp
adc
inc
arpl
xor
cmp
adc
sbb
xchg
sbb
stos
int
mov
inc
mov
cmp
dec
stc
mov
cmp
pusha
mov
popf
pop
cmpb
xor
in
mov
sub
lahf
push
enter
stc
add
and
pop
or
popf
es
and
cmp
cmp
pop
inc
mov
subl
lods
cmp
push
scas
xchg
test
pop
and
andl
outsb
arpl
push
dec
fldenv
imulb
cmc
xor
jle
shlb
jo
xorl
adc
sub
mov
sbb
pop
aaa
push
pop
adc
add
ret
aad
orl
sub
add
sbb
or
shll
fwait
jl
fisubl
out
or
push
frstor
mov
jnp
stos
repz
cmp
out
add
mov
test
aad
pop
and
lret
sbb
cwtl
pop
stos
xor
pop
inc
pop
aad
imul
les
movsb
inc
andl
ljmp
add
xchg
inc
pushaw
aaa
push
daa
popa
add
fmuls
mov
dec
test
mov
push
push
jle
dec
cmp
xchg
mov
mov
and
std
mov
dec
aaa
xlat
repnz
xchg
test
nop
xchg
stos
imul
and
or
cmp
pushf
jp
jge
loopne,pn
lret
loope
ror
dec
inc
adc
das
fsts
pop
mov
sbb
jg
fists
jp
pop
sbb
pop
popa
test
xchg
jbe
mov
ret
lahf
jmp
add
testl
shl
mov
or
sti
mov
jo
cmp
sub
push
or
aam
mov
dec
outsl
ds
jge
cltd
adcb
push
cmp
outsw
fs
sub
ja
cmp
mov
daa
cmp
les
sub
mov
and
adc
por
add
push
iret
mov
inc
test
xchg
pop
adc
and
mov
add
xor
pop
adc
add
int3
data16
xor
mov
jo
rolb
push
popa
mov
mov
pop
add
cwtl
or
xchg
into
jp
lret
mov
push
adc
test
inc
dec
jo
hlt
hlt
sub
jg
and
mov
dec
add
xor
and
jns
mov
xorb
outsb
sub
dec
es
flds
jp
orl
lret
and
testl
es
rcll
push
xor
test
or
cltd
push
lahf
ret
pop
dec
daa
movsl
inc
jnp
xchg
jno
arpl
cmp
or
imul
add
stc
insb
dec
or
add
fcompl
jne
nop
loopne
inc
pop
stos
sub
add
mov
inc
imul
add
or
gs
jl
in
fisubrl
sbb
push
xor
jmp
pusha
mov
jmp
jge
mov
or
shrb
jno
xchg
hlt
push
in
movaps
sub
jp
pop
scas
jle
jle
mov
jo
lock
cmp
and
ss
gs
loopne
imul
inc
imul
loopne
sub
outsb
je
jno
sbb
adcb
push
data16
int
jbe
andl
int3
xor
hlt
icebp
rorb
or
xor
in
ljmp
inc
add
or
jno
imul
jp
test
xchg
stos
mov
loope
orl
sarl
fistpll
scas
popa
sbb
jle
jnp
mov
or
xor
les
outsl
mov
dec
aam
push
add
pushf
daa
jo
pop
inc
mov
and
out
mov
adc
cmpsl
and
jmp
add
je
fistl
dec
test
ds
sbb
lret
adc
add
mov
sub
arpl
mov
push
mov
or
dec
lods
in
sbb
call
jecxz
imul
jecxz
movsl
pop
mov
inc
in
pop
loopne
push
xchg
hlt
jmp
addr16
clc
mov
mov
xor
xchg
dec
adc
mov
cmp
shlb
jbe
inc
xchg
std
mov
pop
cmpsb
add
jmp
lods
cld
sub
iret
shr
and
pop
and
sub
mov
pushf
adc
inc
lahf
push
inc
sub
inc
jmp
ds
inc
xor
pop
xchg
fdivrs
outsl
in
test
xor
add
push
push
js
and
mov
sub
stc
int3
mov
push
pop
cltd
mov
jmp
ret
or
or
jmp
sub
pop
js
jmp
xchg
or
pop
pusha
idivl
aad
xchg
push
ds
shlb
xchg
ret
push
jecxz
push
push
rcll
lds
mov
adc
or
cmp
nop
jnp
sbb
icebp
stos
and
inc
pusha
inc
stos
dec
loopne
mov
sub
xchg
xor
jmp
subl
rolb
in
lret
fldt
or
lock
cmp
mov
sbb
jo
cmpsb
adc
dec
out
mov
jnp
movsb
test
jne
jno
bound
push
popa
add
sarl
jmp
inc
pop
sub
or
mov
sbb
push
dec
dec
and
mov
xor
stos
inc
lock
jmp
mov
stos
dec
loop
cmp
add
mov
pop
imul
cmp
sub
les
scas
sub
iret
filds
or
cld
das
loopne
ss
push
rcrb
jg
sbb
cmp
movaps
mov
add
aad
ljmp
in
and
mov
add
or
adc
roll
xchg
adc
xor
add
pop
pop
add
gs
sahf
xchg
jnp
lods
fadds
jle
shl
add
je
lahf
xor
adc
hlt
rol
adc
jp
test
enter
nop
sbb
pop
dec
jge
dec
mov
mov
xor
sub
sarl
sub
out
lea
in
scas
dec
mov
or
inc
jne
sbb
inc
das
mov
sub
jle
loopne
mov
incl
rsqrtps
push
jle
xchg
add
add
orl
add
push
pop
jle
loopne
sbb
push
rclb
lods
sbb
jb
nop
fimuls
sbb
xchg
inc
frstor
loope
test
das
mov
pop
popa
add
daa
pop
push
repnz
xchg
scas
push
movsb
sub
loope
in
xchg
sub
je
movsb
jmp
mov
add
mov
xchg
scas
stos
jl
sub
cmp
test
ljmp
jecxz
iret
je
stos
fwait
shll
bound
scas
scas
mov
bound
pop
cmp
push
xlat
xor
cli
jg
rol
jecxz
out
rorb
scas
mov
jecxz
daa
sub
lcall
pop
and
add
mov
push
inc
popl
loope
aam
rol
sub
push
js
jnp
movsb
popf
imul
inc
data16
loope
jns
dec
rcrb
ljmp
pop
outsl
mov
pop
jo
mov
add
or
shl
in
add
mov
jp
addb
int3
dec
add
sbbl
inc
pop
cmpsl
mov
ljmp
pop
dec
sbb
jl
fcmovb
or
jo
pop
cmpsl
mov
cmp
ja
push
cmp
jmp
hlt
and
sub
cmp
and
sub
push
xor
push
mov
push
adc
adc
int
push
pop
lret
orb
clts
popa
or
movsl
dec
imul
test
test
int
faddl
mov
imul
je
popf
add
pop
cmc
sbb
jecxz
and
inc
cmc
push
scas
fwait
cmp
mov
or
push
pusha
arpl
aam
mov
dec
test
xchg
add
push
pusha
scas
cmpsb
adc
push
lret
add
mov
iret
sbb
dec
cmp
sbb
inc
sbb
mov
jo
or
sub
fsubl
jae
hlt
call
push
sbb
mov
lcall
sub
and
out
imul
cmp
out
imul
ret
scas
addl
loop
dec
ljmp
jmp
loop
loopne
lea
data16
cmpsb
xor
and
cmpsb
mov
jae
sbb
push
mov
mov
lds
pop
jo
mov
and
das
popa
sub
aam
xchg
stos
push
jae
fyl2xp1
xchg
addr16
jo
or
arpl
adc
mov
adc
push
and
ss
pop
je
popa
arpl
push
int
jo
int
js
add
movaps
push
repnz
push
out
lods
repnz
sbb
mov
jne
cwtl
dec
mov
cmpsb
movsl
pop
ret
fistpl
out
dec
mov
or
rcll
mov
sbb
push
sub
xchg
adc
adc
lcall
rcr
lret
dec
and
es
inc
cmp
push
sub
inc
or
inc
inc
or
adc
adc
scas
push
lcall
mull
sub
outsl
sbbl
sbb
and
fistps
mov
dec
out
sub
nop
jp
js
push
mov
lea
rcr
jns
add
int3
stc
outsb
in
iret
cmp
add
or
pushf
cmpsl
sarb
cmpsb
push
add
loopne
mov
add
rdtsc
rorb
mov
sub
push
inc
imul
daa
inc
aad
add
jb
je
xchg
fiadds
sbb
lea
outsl
dec
and
and
adc
jg
neg
adc
inc
jg
push
insb
sub
or
addr16
mov
nop
sbb
addr16
xchg
ds
gs
clc
push
xchg
push
sub
dec
or
mov
lcall
pop
jne
hlt
xchg
jb
sub
xlat
cmp
dec
mov
xor
shl
sbb
jle
cmc
rclb
sti
add
daa
push
aam
jno
pop
adc
les
pusha
iret
or
dec
outsb
or
leave
cwtl
xchg
shl
insb
shll
xchg
cltd
movsb
add
adc
dec
mov
or
out
testl
add
cmp
jnp
cltd
mov
mov
mov
xchg
dec
push
pushl
loopne
negl
nop
push
xor
adc
pmaxsw
push
xchg
dec
out
xor
and
lret
or
dec
lods
add
fldenv
and
fimull
and
push
sbb
xchg
insb
sbb
cmpsb
xor
jmp
pop
lods
push
push
mov
cmc
movsb
jo
or
test
lods
pop
push
mov
inc
iret
scas
dec
or
cwtl
stc
mov
push
orb
leave
or
inc
rcrl
jecxz
fdivl
mov
shrb
int3
sub
js
or
push
mov
loopne
mov
mov
rcll
cli
xlat
aas
mov
dec
sub
sahf
test
fbld
dec
call
lret
cmpsl
shl
ret
jecxz
iret
imul
rolb
mov
sbb
insb
enter
inc
outsb
dec
jecxz
hlt
pop
sub
es
jno
sub
fdivs
mov
int3
xchg
inc
xor
test
fcomps
sub
and
and
lods
and
push
add
shll
out
inc
mov
js
push
mov
jo
xchg
xlat
iret
sbb
dec
call
add
int3
lret
mov
out
stos
popa
rclb
xchg
std
push
jp
push
mov
xorl
fadds
daa
mov
sbb
sbb
stos
mov
jl
push
lods
inc
leave
jae
enter
dec
adc
lret
out
das
and
and
pop
adc
divl
les
lods
test
pop
movsb
lcall
jecxz
adc
pusha
jo
cs
aaa
pusha
lret
imul
loopne
sub
aaa
dec
shrl
ficompl
push
or
push
push
aaa
mov
test
dec
push
mov
fwait
pop
loopne
mov
cmp
pop
pop
lahf
xchg
lock
int3
sahf
sbb
fisttpll
mov
int
andl
subl
add
in
and
pop
and
shlb
mov
xor
inc
ret
mov
test
mov
aaa
rclb
sbb
mov
adc
hlt
dec
call
add
mov
sub
xchg
rorl
pop
imul
dec
push
bound
movsl
ret
inc
and
jmp
rorb
testl
rolb
jmp
rcll
in
pop
mov
addb
scas
inc
lret
shll
sbb
fs
insl
mov
or
in
push
cli
or
xchg
iret
lcall
cli
and
adc
jg
and
ret
pop
js
jns
push
adc
sub
mov
mov
iret
mov
sbb
add
jmp
notl
adc
push
sub
cmp
jno
xchg
xchg
ljmp
jle
pop
mov
movsl
xchg
xor
jns
movsb
jle
cmp
mov
call
jb
ret
lea
sti
pop
add
sub
sbb
jle
notl
out
xlat
out
mov
cs
cmp
and
jmp
orl
gs
dec
sti
add
and
dec
jl
or
jge
sbb
test
test
sub
or
dec
dec
add
jp
mov
scas
mov
sti
push
mov
xchg
cld
and
mov
cltd
sub
sub
push
stc
adc
add
pop
add
roll
mov
or
and
jae
adc
push
xchg
fimuls
addb
push
add
fldenv
add
cmp
inc
push
movsl
xlat
adc
ja
sub
das
xchg
xchg
popa
mov
push
lahf
mov
cmpsl
sub
insb
bound
push
js
push
push
xchg
mov
adc
test
fisubl
pop
jo
sti
sub
fcmovnb
outsb
popf
bound
sbb
arpl
adc
ljmp
popf
xlat
xchg
shl
xchg
inc
add
stos
cmp
xor
pop
cmpsl
xchg
cmp
xor
pop
and
add
pop
iret
and
daa
add
dec
mov
lods
sub
push
cltd
xor
and
lret
jmp
or
mov
jae
and
mov
nop
xlat
pusha
mov
or
xor
sbb
dec
xchg
pop
cmp
jo
sti
add
bswap
mov
cmp
inc
cld
cld
hlt
push
push
xor
lods
xchg
xor
inc
aaa
ficoml
aaa
in
cmp
pop
cmc
jae
movl
cld
out
push
aaa
sbb
sub
bound
ffree
outsb
lods
adc
es
les
loopne
shrb
adc
ret
or
js
rorl
xor
call
and
or
sub
sbb
fildll
add
aas
inc
inc
outsl
scas
xor
ret
mov
push
andb
popf
jo
or
mov
leave
les
xchg
fwait
add
dec
dec
inc
loopne
jno
xchg
xchg
xlat
adc
outsl
adc
add
mov
cmp
andl
mov
rcll
xor
pop
ret
sbb
loope
jno
sub
mov
and
mov
add
sub
sub
jo
pusha
xor
and
es
jae
jmp
outsb
adc
ds
add
jg
enter
sub
pop
mov
fidivrs
cmp
sahf
jl
popa
jne
pop
shlb
or
mov
xchg
xor
jnp
leave
pop
push
add
adc
pusha
pop
lret
push
insl
mov
adc
xchg
push
stc
add
cmp
cmp
xor
ds
aad
pop
dec
mov
sub
js
jno
es
shrb
push
mov
pop
mov
add
ret
lcall
jle
daa
mov
add
mov
xchg
push
arpl
daa
dec
cltd
fsubrs
add
pop
or
xor
dec
dec
lcall
or
cmpsl
cmpsb
inc
add
jbe
or
mov
movsl
and
mov
add
int
imulb
test
jg
cmp
mov
pop
xor
scas
or
xor
ja
fisttps
adc
inc
push
push
les
push
pop
add
add
sbb
push
mov
ds
cmp
and
dec
or
shll
add
mov
jo
daa
mov
ret
add
loope
xor
and
jmp
shrl
or
cltd
push
xchg
add
popa
test
xchg
test
inc
lods
cltd
sahf
das
and
mov
lods
les
and
xor
sahf
sbb
lcall
cltd
add
or
mov
divb
push
fiadds
jo
daa
jo
mov
push
and
lods
add
je
mov
or
invlpga
js
movsb
pushf
xor
add
xchg
imul
lds
lods
ds
fstl
dec
add
mov
xlat
test
xchg
fisubs
shll
fs
add
bound
std
mov
pushf
push
pop
ret
xor
sbb
xchg
adc
sbb
fwait
and
xor
scas
dec
jnp
fwait
lods
jge
out
jnp
or
inc
add
shl
push
dec
jge
shr
cmp
das
xor
push
add
stc
in
mov
sbb
or
jg
add
shrb
jne
xchg
xchg
add
add
pusha
xchg
mov
push
xchg
int3
int
add
adc
adcb
stos
xchg
push
subl
mov
popl
lods
les
add
mov
push
jo
lcall
loope
cmp
in
sbb
sub
adcb
popa
pcmpeqb
sti
cltd
xchg
mov
cmp
pusha
fcoms
testl
andb
pop
mov
sub
or
add
xchg
adcb
dec
mov
popa
mov
addl
dec
add
inc
shlb
and
pop
sbb
mov
jnp
sub
xor
mov
push
sub
sbb
and
mov
mov
shrb
sub
daa
imul
mov
popf
inc
sbb
xchg
roll
xor
clc
mov
mov
rcll
inc
loope
adc
cmp
in
es
push
in
sub
int
in
mov
add
lock
sbb
push
xor
add
xchg
lods
cs
ret
pop
jp
lods
adc
sub
dec
loope,pt
nop
andl
or
notb
pop
shlb
add
mov
dec
mov
mov
ret
sbb
push
ja
dec
fadds
add
inc
add
add
add
pop
jg
jle
bound
lds
sub
sub
cmpsl
orl
pop
sbb
pop
pop
imul
add
sahf
push
cltd
loopne
iret
popf
xchg
cwtl
push
xlat
pop
or
adc
pop
lods
inc
dec
fs
pop
addb
mov
jae
rcr
add
fstpt
clc
js
jl
stos
jo
rcll
mov
and
hlt
mov
jo
mov
mov
pop
and
xchg
stos
cmp
into
lea
xchg
mov
jecxz
pusha
xchg
xor
or
push
jb
add
add
and
ret
xchg
popa
das
dec
aas
fldl
mov
scas
dec
pop
fcompl
adc
xor
xor
xor
imul
xchg
icebp
or
fwait
lods
jo
in
xor
test
adc
pusha
dec
daa
or
mov
mov
lock
mov
lahf
in
or
xchg
inc
and
mov
mov
insl
fidivl
dec
add
aam
test
ret
outsb
push
push
cwtl
mov
add
mov
repnz
bound
es
es
cmovne
sub
inc
pop
mov
das
enter
push
das
pop
sti
push
xchg
push
add
pop
adc
adc
or
pop
pop
cmp
add
adc
in
xor
test
cmp
inc
dec
pop
repz
neg
or
cmpsl
cmp
fildl
pop
mov
push
pop
daa
test
test
and
shr
lods
xchg
xor
mov
inc
es
add
out
lret
js
xchg
ret
mov
sub
add
add
fmuls
adc
movsl
push
xor
dec
lods
cwtl
inc
sbb
movsb
test
jp
cltd
jl
mov
xor
pop
xchg
cmp
scas
mov
scas
shrl
loope
fidivl
inc
and
xchg
adc
nop
xchg
add
in
adcb
xchg
mov
pop
lea
sbb
fs
sbb
xchg
jne
pop
jg
sarb
sub
imul
inc
push
and
cmp
sub
mov
shll
aas
in
fdivl
outsl
pusha
add
xor
mov
cmp
xchg
dec
add
jns
shrl
sbb
add
cwtl
les
test
ja
cmp
adc
jbe
out
imul
fstp
sub
inc
dec
int3
push
pusha
jp
ret
xchg
popa
and
cltd
inc
inc
mov
push
ret
mov
stos
jecxz
nop
rcr
jle
jbe
pop
cwtl
nop
inc
add
jmp
xchg
les
add
repnz
dec
adc
add
lods
xor
sarl
jns
xor
sub
cmp
mov
or
inc
ss
xchg
int3
loope
loopne
pop
test
push
add
jp
daa
dec
in
adc
dec
mov
push
and
mov
mov
pop
dec
push
and
adc
test
and
in
xchg
shll
inc
and
and
jle
rorl
test
push
mov
orl
cli
xchg
lret
lret
fldl
rolb
pushf
mov
add
mov
adc
lahf
add
jecxz
xor
xor
js
stos
add
sub
sub
add
dec
movl
pop
push
lcall
cmp
xor
jg
jb
dec
bound
push
aaa
pop
xlat
cmpsl
psubsw
mov
cmpsb
adc
pop
push
aas
mov
add
stos
lahf
je
shll
movsl
sub
leave
mov
push
sbb
push
mov
out
outsl
jo
test
push
ret
test
test
and
xor
jle
adc
insb
data16
call
rorl
dec
sbb
cli
xchg
rolb
add
mov
sbb
or
out
addr16
or
js
arpl
sub
fcoms
and
xchg
mov
inc
bound
and
es
outsl
mov
add
sbb
lret
jge
xor
pop
cmpsl
leave
mov
pop
pop
and
sbb
push
inc
outsl
mov
sub
jbe
punpcklwd
imulb
adc
dec
lcall
jle
cld
push
ss
cmp
xor
shrb
bound
pop
pop
xor
addr16
jp
loop
push
pop
mov
or
dec
leave
fmull
lahf
mov
arpl
fstpl
inc
jae
iret
xor
mov
sub
xchg
add
rcll
add
jnp
push
stos
mov
add
jecxz
add
mov
lds
test
lds
dec
iret
pop
pop
cwtl
cwtl
push
insb
cmp
sub
add
icebp
xlat
push
and
movsb
mov
imul
jne
mov
push
lcall
sbb
dec
popa
add
mov
sbb
inc
add
mov
add
icebp
sub
sub
repz
add
xchg
add
jno
pop
or
lret
out
rolb
js
dec
adc
sub
pop
fdivs
push
pop
or
push
xor
sub
mov
add
mov
adc
pop
arpl
addl
ljmp
insb
mov
add
or
cli
mov
lock
sub
es
loope
xlat
push
sarb
mov
add
lods
ret
orl
daa
add
push
or
je
test
dec
sub
outsl
mov
icebp
jns
jnp
sbb
cmp
cmp
mov
push
adc
add
mov
jp
js
notl
add
xor
dec
mov
arpl
inc
pusha
add
ret
mov
cmp
sbb
je
loop
jmp
mov
shrd
xchg
js
movsb
arpl
dec
mov
and
xor
ret
pop
pushf
aad
andb
insl
mov
dec
push
sub
adc
rolb
aas
add
cmpsb
ja
lea
push
jne
inc
pop
xchg
fs
sub
jecxz
adc
mov
dec
jp
call
cs
fwait
test
mov
js
mov
lock
flds
dec
ja
punpckhdq
lret
lcall
add
iret
adc
pop
dec
mov
sti
clc
add
dec
pop
cmp
and
cmpsl
sub
xlat
int3
hlt
sub
mov
or
xchg
lret
push
jb
add
mov
and
adc
jo
sub
sbb
jl
ret
mov
push
or
lea
cmp
cmpsb
push
andb
xor
or
sbb
push
mov
add
lcall
inc
inc
fwait
les
imul
mov
fs
dec
xchg
pop
or
inc
inc
mov
scas
inc
insl
dec
adc
popa
imul
add
pop
dec
jns
cmp
and
pop
and
daa
test
fsubrs
orl
inc
sub
lods
xchg
pop
xor
cli
ja
cs
inc
rcll
test
jno
dec
or
add
mov
inc
xor
pop
add
daa
xorb
icebp
jo
and
jne
mov
cld
sub
popf
xchg
xchg
cmc
xor
xchg
inc
jmp
adc
fcmovu
das
jne
enter
pop
xor
push
mov
inc
xor
sub
cmp
sbbl
or
andb
cmp
out
imul
and
xorb
mov
jbe
mov
negb
xchg
fmuls
movsb
aad
mov
mov
adc
xchg
repnz
or
push
cmp
cmp
in
cmp
iret
cmpl
movsl
add
arpl
ret
dec
aam
lods
outsl
mov
ja
dec
and
pop
aas
jecxz
or
pop
les
and
movb
and
or
pop
mov
dec
inc
cmpsl
les
es
sub
jp
push
inc
outsl
lret
xchg
or
or
lret
rcrb
cmp
mov
iret
xchg
xchg
aad
xor
mov
add
das
push
pop
xor
xchg
sub
jae
dec
sbb
add
jp
or
imul
in
add
cltd
adc
outsb
loopne
mull
ds
adc
scas
pop
mov
std
pop
sub
adc
leave
loopne
xor
or
mov
mov
jbe
out
hlt
sub
pop
sub
xchg
add
call
lret
mov
mov
aaa
aad
pop
fbstp
lock
or
push
jecxz
jge
mov
hlt
pop
adc
gs
adc
ljmp
movsl
sbb
sbb
or
push
lahf
and
test
and
add
xchg
add
inc
out
add
add
mov
int
or
and
ret
hlt
loopne
mov
xchg
fsubs
ret
mov
dec
test
jle
add
pop
add
scas
and
mov
sbb
or
in
jmp
aam
sbb
mov
or
sbb
inc
aad
lahf
or
ds
mov
aas
pop
mov
xor
test
dec
mov
nop
add
out
xorb
mov
lea
aas
adc
loopne
out
mov
std
aaa
sub
jns
rolb
add
add
xchg
test
push
sub
imul
mov
loope
sbb
inc
daa
jecxz
mov
lds
mov
and
cmp
dec
jl
mov
fwait
imul
cmp
or
clc
inc
ja
push
adc
dec
lods
fucom
push
pop
loop
loop
push
xchg
inc
cmp
push
sub
fwait
aam
outsl
cmp
jae
pop
xor
dec
dec
mov
cmpsb
push
scas
mov
insl
sbb
and
rcl
mov
xchg
int
dec
in
and
sbb
rorb
mov
xchg
adc
jge
sarb
pop
push
inc
mov
sub
mov
aad
pop
ja
push
add
sub
add
cwtl
mov
mov
sbb
mov
adc
xor
jg
push
andb
test
cltd
lret
and
test
cltd
sub
jmp
xchg
test
mov
or
test
es
mov
sbb
or
adc
jle
loope
fadds
sub
test
filds
test
and
mov
adc
adc
mov
stc
enter
or
xchg
jno
xchg
inc
das
lret
add
jp
and
popf
adc
mov
dec
pop
mov
jo
scas
iret
sar
movsl
scas
mov
jne
sub
cs
xchg
add
mov
push
test
and
jge
or
or
subl
lods
iret
pusha
sbbb
popa
sub
lea
add
push
or
ret
je
and
popa
xchg
repnz
add
daa
test
inc
out
sbb
add
sbb
sbb
fimull
into
inc
push
rol
test
mov
cmp
mov
out
xchg
sar
les
add
jg
sbb
push
js
sub
test
lahf
popf
or
lods
and
sub
jo
jmp
push
es
fimull
movsl
pusha
sub
flds
daa
xor
popa
pop
sub
test
loope,pn
jecxz
adc
fbld
pop
pop
push
test
push
adc
and
adc
insl
or
push
mov
popa
add
or
fnstcw
shrl
push
fadds
mov
shlb
and
add
or
insl
pop
sbb
adc
jge
inc
dec
loope
adc
fs
fstps
add
jo
adc
insl
lods
adc
fwait
ret
add
lods
daa
adc
dec
and
adc
add
push
out
xchg
adc
in
rol
xchg
ds
adc
adc
add
xchg
sub
or
mov
or
and
add
mov
adc
jae
das
add
sub
je
repnz
ss
movsl
inc
inc
sbb
cwtl
dec
xor
adc
lock
fstps
mov
mov
mov
push
stc
add
popl
nop
sub
cltd
and
xor
insl
lods
pop
insl
mov
add
dec
mov
or
push
pop
mov
sbb
cmpsb
mov
cmc
jne
call
test
das
andb
imul
push
or
lods
dec
xor
add
movsb
pop
mov
cmp
pop
dec
mov
inc
cwtl
fbld
inc
rcl
jl
es
and
sarl
add
dec
je
xrelease
mov
movsl
divl
add
mov
and
or
jns
or
jns
xchg
movsl
mov
add
and
repnz
mov
out
add
add
test
enter
std
cwtl
add
and
add
insb
cmpsl
add
dec
xchg
sbb
test
xor
out
push
mov
sub
aad
jecxz
stos
add
dec
xchg
adc
adc
mov
and
xchg
repz
js
icebp
andb
out
iret
adc
pop
add
jg
push
push
xchg
jns
test
test
das
aad
dec
dec
movsb
sub
in
sub
or
scas
lods
cmp
ja
sub
lock
js
dec
dec
lea
out
popa
mov
fdivp
int3
xor
lock
xchg
jne
shll
nop
mov
dec
dec
popa
popa
dec
mov
sub
or
ja
roll
dec
mov
roll
das
add
testb
adc
out
cmpsl
and
and
push
add
add
loopne
and
sbb
sbbl
or
mov
in
push
scas
add
ss
cmp
div
rorl
lods
adc
ljmp
scas
or
lock
pop
call
daa
test
add
dec
add
or
popa
rorl
int3
es
call
pop
mov
test
outsb
add
mov
pop
or
add
out
ret
mov
rol
mov
mov
xor
xor
cwtl
mov
clc
inc
outsb
inc
daa
sbb
adc
adc
adc
jne
pop
and
add
ficoms
push
pop
mov
lods
and
jo
and
in
push
les
lret
inc
and
jbe
mov
daa
mov
xor
or
test
arpl
push
or
add
lock
pop
scas
jno
add
sub
gs
mov
mov
addl
inc
mov
jo
aad
pop
push
out
push
in
sbbb
pop
add
add
iret
jbe
xor
mov
cmp
movb
lahf
mov
test
test
add
mov
or
addb
or
add
xchg
je
or
js
add
ss
and
sti
push
popa
sub
jmp
add
mov
subb
mov
loope
popf
ret
cltd
daa
or
nop
repnz
pusha
jns
xor
mov
lret
sbb
popf
adcb
iret
mov
sub
mov
dec
dec
xchg
int3
and
push
outsl
pusha
push
add
rorl
pop
sbb
scas
pop
fsubrs
xor
sbb
inc
into
test
dec
push
roll
sub
cmc
push
inc
jecxz
pop
js
loope
cmpsl
rorl
or
in
test
in
test
imul
repnz
addb
lock
repz
ret
loope
hlt
shll
jbe
push
cmp
pop
dec
bnd
adc
rol
cmp
inc
add
add
push
jbe
jne
pop
dec
lods
shll
sbb
shr
hlt
push
aaa
popl
adc
pusha
aad
inc
call
cmpsl
adc
nop
inc
and
das
jecxz
icebp
jo
xchg
les
or
or
push
les
inc
push
dec
jecxz
xor
mov
sti
loope
mov
popf
jo
dec
dec
shrl
push
add
sub
adc
jle
test
dec
fcmovne
addr16
xor
adc
jnp
adc
cmc
jl
test
inc
or
push
enter
add
pop
test
in
adc
mov
jo
mov
aaa
sahf
mov
fildll
and
sub
push
dec
cmp
adc
pop
push
dec
jnp
push
sbb
add
lds
push
push
les
mov
test
sub
add
and
enter
mov
xchg
ret
lahf
or
mov
adc
cmp
xor
loope
test
cld
add
cs
pusha
xor
orb
loope
inc
jecxz
adc
loope
arpl
mov
lods
popa
popa
xor
mov
imul
add
rolb
cmpsb
jo
add
jb
xor
jp
add
push
push
js
push
xchg
push
inc
mov
rcrl
lahf
out
shl
and
sbb
sub
repnz
push
add
inc
loope
mov
add
leave
rcrb
lret
lahf
cmp
push
xchg
pushf
jb
xchg
call
add
cli
pusha
ljmp
mov
jo
xchg
incl
add
imul
mov
dec
sbb
cmpsl
or
dec
dec
xor
sub
aad
xchg
daa
test
push
rorb
mov
cmp
dec
push
push
out
rcll
pop
push
xchg
je
ljmp
push
xor
scas
daa
dec
popl
pushf
sbb
in
in
and
das
push
mov
mov
ret
mov
cmp
adc
inc
add
ret
shll
inc
das
aas
pop
in
or
xchg
adc
dec
aad
fstl
lahf
push
or
aam
lea
xchg
gs
ds
add
add
test
push
out
dec
cmpsl
push
push
lods
add
sbb
mov
aad
adc
ret
in
ret
add
cmpl
lret
xor
jmp
push
out
sub
pusha
incb
xchg
add
and
test
jmp
adc
imul
rolb
popa
insb
add
shrl
push
ja
popa
insb
imul
xchg
and
inc
ss
sub
pop
inc
into
mov
pusha
jnp
or
adc
pushf
insb
insb
or
add
add
adc
inc
popl
fisttpl
lods
mov
fwait
ret
pop
jo
mov
call
jo
dec
pop
and
pop
inc
in
test
andl
push
add
mov
test
cld
push
adc
push
mov
loope
push
cmpsl
adc
das
popf
shll
std
cmp
fsubl
pop
or
fs
rcrl
ret
xor
rol
neg
andl
add
loope
xchg
shrb
push
add
test
add
test
loope
outsb
aam
jl
mov
and
lahf
dec
mov
movsb
xchg
leave
mov
mov
xor
cmp
sbb
pop
sbb
icebp
mov
ret
sbb
jno
fwait
daa
jae
loopne
xchg
xchg
pop
jne
stos
cmc
js
or
xor
gs
xchg
loope
sbb
mov
arpl
push
popf
lcall
xchg
xchg
mov
xchg
sbb
add
sbb
pop
cmp
sub
jb
fcom
mov
fistl
pop
cmp
or
and
cmp
nop
cmp
pop
adc
movsl
stos
jl
divb
nop
fcompl
jns
xor
sbb
lret
enter
mov
jecxz,pn
and
fsubs
lods
mov
aaa
xor
sbb
in
adc
mov
cwtl
mov
add
lods
push
out
add
dec
sub
arpl
xchg
daa
push
xchg
dec
js
lods
movsl
lret
add
dec
xor
movsl
shll
ret
push
push
push
rorb
pusha
popa
mov
pushf
int3
mov
sub
mov
add
pop
shlb
inc
push
jbe
pop
lods
in
sbb
dec
movsl
add
sti
inc
push
push
js
aam
fwait
sub
push
test
or
adc
ss
aaa
ret
sahf
test
mov
icebp
sub
and
push
into
and
shrb
mov
arpl
imul
fsubrs
or
or
daa
rorb
dec
out
mov
fisttpll
xchg
add
lret
test
adc
imul
pop
or
fwait
pop
test
rcrb
adc
add
inc
and
jns
clc
xchg
xchg
fidivl
xchg
sbb
mov
or
leave
dec
sti
adc
push
dec
or
cmpsl
or
add
mov
add
popa
repnz
lods
add
or
xchg
adc
push
outsb
lret
daa
and
add
mov
jno
mov
rol
mov
xchg
jmp
and
mov
mov
sub
or
test
xor
xchg
icebp
or
les
jne
mov
mov
sbb
cmp
lret
nop
jnp
cltd
ja
ja
fldt
jns
dec
dec
push
insl
out
test
mov
aas
pusha
arpl
add
test
cmpsl
lcall
and
mov
pop
push
mov
add
dec
sbb
push
mov
mov
ss
inc
test
and
adc
mov
sbb
inc
ret
adc
jecxz
fidivrl
test
sbb
adc
idiv
popa
sbb
add
lahf
dec
push
or
outsb
or
adc
cmp
outsl
aas
add
and
cmp
mov
sbb
and
arpl
sub
pop
cmp
sub
or
or
sub
and
cwtl
dec
ret
jno
hlt
shll
ret
test
inc
push
insl
inc
mov
mov
sub
push
and
pop
sbb
loopne
pop
dec
scas
sbb
ja
insb
test
push
mov
adc
lret
push
or
fnstenv
sbb
sub
sub
xor
push
jb
insb
bound
push
or
das
shll
dec
pop
insl
add
and
ja
and
inc
add
and
clc
or
out
jmp
jno
mov
mov
bound
sbb
test
xchg
pop
and
dec
xchg
loope
jne
aas
mov
mov
or
cmp
inc
xchg
lods
je
sbb
mov
addr16
push
sahf
loop
ja
aaa
aaa
shlb
and
jo
sub
lods
arpl
addr16
es
add
dec
xchg
jbe
and
enter
out
push
cmp
pusha
jmp
mov
and
pop
fbld
sbb
adc
or
adc
xchg
enter
mov
pop
lds
add
jno
fs
inc
movsw
xorb
cmp
sbb
les
add
jl
adc
inc
pop
or
addr16
mov
dec
fdivs
sbb
xchg
cmp
test
xlat
mov
xor
fnsave
sub
sar
inc
or
pop
loop
xor
arpl
in
push
xchg
dec
loope
bound
pop
lcall
add
push
rcrb
mov
inc
cmp
cmp
inc
cmc
call
icebp
and
nop
pusha
int
pushaw
or
icebp
dec
arpl
sub
and
shrl
ss
mov
adc
cmpsl
scas
out
adc
inc
xchg
cltd
cmpsl
mov
mov
ja
inc
or
and
mov
mov
dec
add
icebp
push
dec
xchg
dec
pop
roll
mov
and
adc
lods
push
loopne
or
inc
cltd
ret
or
add
popf
es
xchg
xchg
xchg
push
or
cmpl
push
iret
inc
imul
es
test
js
cmpsb
mov
cmp
enter
int3
sbb
add
fdivr
mov
fnsave
pushf
dec
hlt
mov
arpl
dec
inc
inc
mov
xor
cmpsb
popa
in
scas
sbb
loop
cmp
adc
and
es
adc
sbb
and
les
adc
jecxz
pop
adc
sbb
and
daa
inc
leave
and
adc
test
jle
jmp
iret
pop
fstp
push
mov
out
sub
xor
dec
dec
fucom
jno
loope
es
xchg
ljmp
popa
rcl
sbb
icebp
sub
or
pop
or
pop
bound
sbb
inc
sub
popa
cmpsl
sti
les
les
inc
pop
mov
fsubl
dec
sub
cli
pop
es
lock
dec
mov
push
sbb
mov
push
and
jo
mov
inc
stos
adc
insl
cmpsl
push
jle
in
pop
es
fs
xchg
add
adc
mov
pop
mov
push
add
roll
jecxz
out
insb
in
cmp
pop
xchg
cmc
and
sbb
adc
mov
ficoml
mull
cmp
xor
xchg
imul
xchg
clc
lret
test
add
psrlw
inc
daa
test
leave
pop
test
push
fdivrl
adc
sub
mov
clc
add
loop
adc
mov
mov
insb
jno
aaa
hlt
nop
add
push
mov
sbb
push
mov
add
inc
jnp
or
das
jnp
ret
xchg
repnz
rcr
xchg
loope
sub
dec
punpckhwd
lods
in
pop
lock
mov
nop
daa
cmp
mov
ja
sub
xor
xlat
cs
pusha
push
fisttpll
sbb
cmp
xor
xlat
cmp
dec
test
pop
pop
inc
js
dec
sbb
mov
daa
inc
jle
cmp
sub
and
add
xchg
cmpsl
test
jmp
xchg
mov
das
add
ja
mov
flds
xchg
movsl
jbe
mov
imul
das
jbe
idivl
int
jno
dec
arpl
xor
add
daa
push
sbb
sbb
les
rorb
pop
das
insb
filds
and
or
roll
arpl
daa
les
in
out
mov
pop
push
xchg
ss
jbe
sub
mov
outsb
inc
lods
xchg
and
and
andb
push
push
jp
enter
sbb
fistl
add
outsb
repz
cmpsb
dec
xor
enter
sbb
inc
cmp
adc
mov
jp
inc
pusha
movsb
sbb
dec
sub
mov
mov
shr
je
test
test
mov
test
push
stos
imul
cs
adc
pop
dec
and
add
xchg
mov
pop
sahf
das
push
sbb
adc
cmp
and
mov
sahf
ret
clc
insb
adc
xor
lcall
dec
popf
pop
or
or
sub
fcomps
int3
mov
adc
mov
and
push
roll
ret
push
add
hlt
ss
sub
add
sbb
mov
inc
and
lret
or
sub
mov
mov
sub
int3
or
ljmp
mov
pop
lahf
push
pop
pusha
xchg
add
and
scas
adc
mov
adc
sbb
ret
les
and
pop
adc
pop
adc
xchg
inc
outsb
ds
inc
loopne
and
stos
add
and
loop
mov
idivb
aam
push
dec
roll
jge
push
jbe
cs
aas
mov
sbb
mov
imul
add
push
pusha
aaa
inc
inc
adc
movsb
pop
add
add
add
xor
sub
xchg
pop
jo
xchg
pop
ret
push
rolb
pop
pop
push
sbb
add
aad
inc
xchg
push
in
and
sub
inc
sub
jecxz
sub
es
lock
lea
pushf
imulb
insl
ss
fcomip
and
movsl
mov
and
adc
pop
insb
jg
cmp
out
sahf
andb
in
aad
mov
test
mov
push
or
addr16
and
or
inc
lea
mov
add
push
lret
sbb
push
mov
mov
and
add
stc
pop
cmc
sar
push
add
leave
daa
roll
or
ret
es
test
adc
add
cmp
adc
loop
dec
pop
xchg
adc
add
setbe
test
lods
xor
ss
inc
vcvtsd2ss
pusha
xor
xchg
out
xor
cwtl
sbb
fcom
dec
cmp
loopne
outsb
mov
mov
sbb
jno
mov
pop
pop
cmp
sbb
adc
sub
sbb
fmuls
or
or
pop
inc
dec
test
cltd
mov
inc
jno
iret
aam
sub
adc
daa
popa
movsl
pop
xor
xor
and
or
cmp
xor
push
inc
mov
dec
or
mov
jle
dec
xor
je
xor
imul
dec
jecxz
je
pop
push
mov
adc
mov
dec
out
test
lods
jb
bound
or
mov
push
movsb
xchg
or
xchg
push
adcl
dec
subb
pop
inc
cmp
cmp
aas
or
roll
int3
or
idivl
or
stos
or
push
shrb
cmp
sbb
sbb
xchg
pop
xor
push
sub
cmp
dec
cli
adc
push
xor
ljmp
in
jnp
xchg
in
bound
dec
outsl
cmp
add
cs
jg
ret
xor
loop
push
repnz
stos
pop
adc
or
inc
push
dec
fs
or
add
mov
xor
push
push
jb
cmp
jmp
or
outsb
adc
mov
lcall
cmpsl
and
xor
enter
push
jae
cmpsb
es
push
jno
mov
push
mov
mov
or
sub
pop
sub
jno
sbb
adc
and
xchg
mov
mov
inc
sub
je
fiadds
sahf
popa
data16
adc
push
or
xchg
insl
sub
xchg
js
es
in
mov
fstps
pop
loopne
sbb
aaa
mov
push
aam
icebp
jmp
mov
xor
and
fwait
fldl
pop
jb
push
xor
pusha
test
es
fisttps
mov
jmp
sbb
push
sbb
lods
popa
enter
jo
and
lods
outsb
pop
pop
in
xchg
adc
fs
shl
xchg
cmc
and
dec
fdivl
dec
lods
fstl
and
loope
nop
jns
jns
aam
mov
jg
mov
lds
loop
sarl
lahf
inc
push
fmuls
adc
verr
aam
mov
cvttps2pi
jae
and
test
mov
mov
mov
push
cwtl
enter
push
push
out
sbb
rcrb
stos
adc
push
add
enter
mov
fwait
test
and
fildl
aas
pop
pop
push
lds
jle
cwtl
cmp
popf
call
icebp
or
adc
es
and
psadbw
push
fwait
xchg
ret
arpl
daa
je
pusha
test
mov
movsb
in
add
icebp
rcll
sub
push
fadds
push
jns
cmc
mov
sub
xor
pop
xlat
imul
imul
lods
adc
fs
jns
add
inc
ja
imul
lret
xor
cmp
shll
shlb
xchg
fidivrs
and
mov
sti
frstor
cmp
mov
and
imul
pop
jns
fldcw
test
xchg
and
xchg
add
iret
dec
push
push
and
cmp
lods
add
or
fmuls
cmpsb
push
daa
inc
lods
adc
xchg
mov
push
popf
sub
and
cmp
outsb
inc
insl
les
adc
adc
movsb
push
out
ror
int
pop
dec
sbb
and
mov
fisubrl
sub
js
xchg
adc
inc
mov
repnz
je
mov
adc
jnp
stc
out
xchg
xor
lcall
into
jmp
ret
or
jmp
mov
and
add
or
daa
jne
xchg
sbb
shll
das
sub
dec
pop
push
sbb
cltd
jnp
adc
in
sub
lods
add
imul
dec
jp
adc
add
outsb
pop
sub
daa
jl
pop
test
jbe
inc
or
test
or
push
sub
push
xchg
xchg
mov
xor
and
fwait
popa
dec
mov
aaa
mov
jle
lods
push
cwtl
add
lods
fwait
adc
dec
sub
push
stos
inc
xchg
outsb
inc
inc
sbb
adc
add
loope
stos
or
and
sti
ret
sub
push
xchg
ret
add
cltd
add
cmp
mov
pop
pop
dec
ss
enter
pop
call
in
lods
xor
test
add
inc
ret
jbe
ret
dec
cmp
pushf
ret
cwtl
test
or
dec
cmp
rcrb
add
push
sti
out
aam
dec
mov
lods
lods
adc
xor
push
adc
iret
cmp
stos
cmp
dec
and
lods
push
ret
outsl
js
ljmp
xlat
in
mov
mov
pop
xchg
ret
test
je
ja
shrl
cmp
mov
loop
dec
js
popa
scas
lahf
mov
insl
data16
aad
rcll
push
pusha
addb
mov
xor
adc
lea
pop
add
jo
sbb
daa
ss
sbbl
mov
iret
test
sbb
inc
test
xor
cmpsl
jb
cmp
mov
lahf
imul
aaa
or
sahf
ss
and
inc
mov
add
xlat
adc
jne
fstl
aam
inc
scas
dec
inc
adc
hlt
pop
or
scas
jne
dec
sub
aam
jle
ret
xchg
cmp
test
sbbb
fisttpl
mov
xor
mov
pop
sti
arpl
or
push
xor
push
lret
test
mov
test
xor
rcrl
nop
aaa
test
add
mov
cmp
push
pop
mov
adc
outsl
lahf
daa
test
xchg
xchg
jmp
or
pop
mov
sbb
jae
pop
fnstenv
pop
adc
fld
sbb
lea
ljmp
or
or
das
cmc
add
dec
xchg
jno
movsb
add
or
loope
stos
push
cmp
push
adc
clc
or
loopne
push
sbb
insl
and
mov
mov
sbb
in
dec
movsb
mov
inc
sbb
roll
mov
push
sti
iret
mov
js
cmp
call
add
shll
push
pusha
and
adc
mov
sbb
repz
mov
andb
or
add
pushl
les
xchg
inc
jecxz
adc
mov
sbb
dec
aam
in
cmpsl
gs
jge
lods
bnd
sub
pop
push
fbstp
sbb
lods
es
inc
iret
xor
and
push
gs
inc
arpl
loope
movsl
or
add
ja
loopne
fimuls
fidivl
enter
sti
popf
movsl
add
pop
mov
or
fs
test
inc
sbb
cmp
jmp
in
cwtl
nop
mov
adc
arpl
lcall
adc
add
and
hlt
sbb
test
sub
out
jns
sbb
push
lret
xchg
inc
dec
dec
inc
jbe
scas
and
leave
and
mov
popa
or
vmaxpd
es
sub
movsb
lock
push
push
call
sub
lods
lret
out
add
pop
ret
ficoms
jbe
jae
loopne
pop
sbb
sbb
jle
aaa
fidivs
mov
out
and
les
sbb
xor
push
fcomps
clc
dec
jmp
xchg
inc
mov
ror
inc
iret
cmp
sub
divb
xor
pusha
enter
movsl
orl
pop
mov
jnp
addr16
xchg
add
and
fnstcw
adc
cltd
jnp
jo
fdivl
cmpl
add
push
inc
push
cmpl
xchg
loopne
faddp
fwait
jo
fsubs
test
loopew
adc
test
sbb
scas
es
push
imul
mov
and
and
dec
sub
lods
add
les
aas
stos
mov
test
loop
sbb
xchg
flds
lock
xchg
clc
stos
push
mov
dec
jp
jmp
push
or
out
jne
inc
mov
lret
addr16
jp
push
shll
mov
jge
push
and
sahf
pop
mov
sahf
and
out
ficoms
push
pop
in
add
test
mov
or
dec
ret
xor
cmp
adc
cmp
popa
sub
and
shll
in
call
xchg
pop
cmp
adc
xor
pop
sub
cmp
faddl
push
imul
add
push
cmp
outsl
add
add
lock
iret
out
orb
or
add
jecxz
push
jbe
add
xor
sbb
add
sbb
das
and
mov
fstl
mov
add
adc
sub
lahf
and
push
dec
or
and
mov
pop
hlt
xor
lcall
pop
jl
out
inc
ret
lds
xor
cs
dec
loopne
sub
inc
sarl
xchg
xor
iret
xor
adcb
inc
aas
fnstcw
rorb
add
adc
inc
xlat
and
cmp
out
out
push
test
cmp
or
addr16
les
psrlq
xchg
push
or
sub
ret
sbb
cmp
sub
add
mov
push
movsb
pop
pop
mov
imul
adc
sbb
dec
aaa
je
fcmovne
cmp
add
pop
cmpsb
loope
pop
add
ds
in
and
out
mov
jle
imulb
inc
mov
jp
filds
inc
incb
jns
inc
pop
or
std
ja
adc
ret
imul
cmpsb
add
test
push
add
mov
inc
or
mov
adc
push
test
js
lods
pop
std
jg
sbb
xchg
pop
dec
push
sbb
cltd
cmp
mov
sub
fsubs
lcall
outsb
nop
push
or
test
sub
lds
mov
jo
cmp
mov
nop
iret
push
push
mov
xchg
xchg
cmpsb
add
shlb
add
add
push
loope
rorl
and
mov
xchg
lea
mov
lock
enter
and
add
push
pusha
fbld
loopne
clc
add
test
and
popa
mov
nop
loopne
lods
jmp
mov
pop
sub
arpl
aam
aas
cmp
and
adc
pop
sbb
testl
adc
scas
or
inc
xor
fistps
adc
or
sub
and
mov
loopne
stos
stos
push
cld
push
pop
add
mov
and
out
or
testl
add
sub
cmpsl
leave
in
lcall
packsswb
aaa
movsb
sub
lods
lret
jge
orl
daa
insb
fiaddl
sub
sbb
add
shl
stos
sub
inc
jb
mov
sbb
mov
fiadds
in
sub
testl
or
or
out
subb
add
ja
xchg
mov
push
clc
gs
push
push
xchg
adc
xchg
inc
aas
add
iret
jmp
xor
pop
aam
jo
lods
cmp
in
out
loopne
dec
cmp
add
push
xchg
pusha
sbb
pop
ret
fwait
sub
cmp
add
ret
push
cmp
sbb
or
fwait
scas
pop
or
rorl
xchg
aam
rolb
test
sub
pop
push
fdivs
addr16
testb
sahf
out
xchg
gs
shl
or
inc
sbb
clc
call
jo
mov
aam
lret
and
add
mov
xchg
iret
add
testl
stc
loope
and
dec
arpl
je
sbb
stc
dec
imul
popa
je
jmpw
add
adc
mov
and
add
aam
ret
roll
pop
sti
out
jl
fld
lret
sub
mov
sbb
neg
pop
stos
ret
push
roll
push
pandn
mov
pushf
test
push
lods
dec
sbbl
nop
inc
fs
xor
sahf
testl
sbb
outsb
cmp
clc
in
cmp
ret
les
popa
aad
fwait
xchg
cmp
dec
and
outsl
shlb
loopne
sahf
out
into
push
mov
scas
xor
jb
int3
stos
cmp
pop
fiaddl
rol
sar
notrack
and
mov
pop
dec
mov
shlb
loopne
ss
add
add
mov
shrl
test
sub
iret
lock
cmovb
add
adcl
mov
loopne
scas
loopne
hlt
ret
add
mov
das
lods
ret
push
lds
js
adc
adc
mov
sbbl
pop
jl
test
cmp
lahf
outsb
or
negl
inc
add
cmp
ljmp
ret
dec
mov
adc
xchg
fs
popa
mov
ss
in
add
add
jl
out
pop
xor
ret
and
rolb
xchg
inc
pop
adcl
mov
js
xor
cld
jmp
aas
lea
xchg
addr16
xor
cs
aas
and
in
add
fistpll
loopne
push
movl
jbe
add
add
xor
ficomps
xor
push
push
shll
and
sub
sbb
cld
add
scas
push
pop
sbb
stos
mov
add
adc
int
mov
hlt
jp
flds
push
jge
pop
cmp
inc
sub
and
out
scas
xor
inc
ret
stos
add
icebp
mov
stos
add
dec
in
dec
pop
mov
fiadds
jge
pusha
mov
xor
repnz
lock
aaa
ljmp
in
push
adc
movsl
sti
and
fiadds
into
fdivrp
xor
cs
push
pop
push
jb
hlt
add
sahf
mov
xlat
stc
es
inc
jne
movsb
cwtl
dec
lods
cs
pusha
and
adc
movsb
dec
ljmp
pop
mov
push
pop
ficoml
inc
rorl
scas
rcl
test
sub
aad
or
add
add
jp
faddp
cmpsb
mov
popa
push
add
aad
in
into
loope
jp
imul
fcmovnb
clc
add
scas
les
add
sbb
shr
push
ja
jo
push
cmc
push
outsb
and
dec
hlt
push
and
notb
push
jo
xlat
jmp
sbb
sbb
loope
js
push
cmp
inc
popl
cmp
pop
or
fdiv
and
xchg
call
push
test
clc
cltd
pop
mov
fidivl
dec
data16
pop
push
stos
mov
sahf
out
out
out
mov
or
jb
mov
dec
cmp
rclb
call
mov
inc
es
bound
cmp
aas
cmp
ss
inc
dec
mov
mov
ret
enter
cmp
andl
adc
les
mov
mov
popa
jo
das
fbld
push
lret
add
lods
mov
mov
sbbb
mov
syscall
cld
add
mov
shrb
pop
mov
leave
inc
or
or
test
iret
sti
dec
lds
xchg
pop
outsl
mov
clc
inc
rcrb
xchg
les
mov
jecxz
ret
or
cmp
push
mov
es
jl
jo
adc
outsb
call
pop
in
xchg
pop
mov
mov
cltd
dec
adc
and
filds
mov
dec
xor
push
lods
mov
mov
xor
fdivrp
imul
inc
pushf
sub
test
lock
fldl
adc
and
mov
loopne
pop
rcrl
insl
add
scas
adc
out
fsubs
fisubs
fnstsw
jo,pt
dec
cmpl
and
cmp
insl
add
add
sti
adcb
and
lock
loope
lret
inc
ret
cmp
popa
test
mov
sub
mov
cmp
cld
loop
loope
je
loopne
fs
inc
loopne
pop
aaa
aaa
jl
and
mov
je
int
lods
adc
negb
push
loopne
push
pop
xor
sbb
lds
cmp
pop
lret
add
pop
sarl
xor
lcall
dec
std
les
xor
test
and
packsswb
cltd
xorl
outsl
or
and
hlt
fsubrl
jb
neg
js
adc
jecxz
add
push
loop
stc
mov
out
or
cmp
mov
addr16
push
add
jns
dec
repz
fsubrl
jo
inc
insb
pushf
shrl
ss
xor
aaa
insb
aaa
push
add
pop
and
int3
or
je
cmp
cltd
dec
pop
dec
cmp
sub
adc
add
and
sub
hlt
clc
xchg
mov
dec
push
int3
loopne
or
pop
sti
sbb
jle
fwait
xchg
cltd
les
and
sti
into
cs
nop
xor
cli
mov
jecxz
adc
jmp
loope
sub
icebp
clc
orl
imul
in
lret
xchg
dec
adc
mov
or
push
xchg
test
and
jb
mov
add
push
push
lods
leave
add
xchg
jo
cltd
rolb
lds
push
cmp
out
scas
mov
mov
add
call
enter
or
mov
out
inc
add
outsl
jg
add
sub
or
or
pop
outsl
fcmove
loope
sbb
fs
fldl
jmp
or
ret
mov
jecxz
aad
out
ret
sub
stos
jae
pop
repz
fbld
sub
dec
adcl
negb
fsub
xor
and
and
sbb
ret
out
addr16
lock
mov
ret
push
sbb
je
add
fistps
ret
andb
addl
js
lret
sub
lcall
pop
lods
mov
cmp
sbb
jge
jns
cmp
adc
aad
arpl
jg
jno
mov
pop
mov
add
test
shlb
push
enter
sub
or
adc
sarb
push
loope
mov
xor
dec
dec
dec
lcall
push
lahf
mov
fsubrs
sub
stos
xchg
icebp
fs
shl
jnp
repz
faddl
ljmp
aaa
mov
or
mov
repz
sub
add
sub
mov
insb
adc
dec
lahf
jno
dec
adc
shrb
enter
lods
dec
or
negb
mov
push
or
jno
std
or
ss
inc
or
cmpl
jno
popa
lret
sbb
lret
filds
cmpsb
ret
lcall
mov
shl
addb
xor
test
lret
xchg
lret
mov
mov
sub
lcall
add
sub
divl
gs
jle
push
int3
xchg
inc
inc
mov
cmp
xchg
xchg
adc
xor
lcall
or
jae
add
out
pusha
cli
dec
shll
filds
adc
and
jg
and
push
or
xlat
xchg
and
and
roll
xor
mov
mov
pop
fwait
ret
lret
inc
adc
ljmp
jne
lock
adc
std
push
scas
out
mov
and
inc
xchg
jp
mov
arpl
cmp
push
mov
mov
test
rcll
dec
testl
pop
cmp
sub
daa
repz
hlt
mov
mov
xchg
add
pop
cmpsb
shlb
pop
xlat
mov
sar
sub
shrl
mov
and
sub
mov
jge
iret
jp
and
mov
cmpsl
das
xchg
push
lcall
sbb
add
xor
add
add
xchg
push
leave
movl
test
test
pop
sub
imulb
lret
mov
jecxz
xor
fwait
push
lret
push
and
dec
in
cmp
rcll
sbbb
adc
and
mov
or
adc
lods
jecxz
movsl
pop
je
movsl
sub
loopne
movsl
add
ret
mov
enter
adc
sub
xor
into
jno
fdiv
push
jo
loope
mov
mov
push
sbb
clc
inc
pop
fwait
nop
pushf
cmc
lock
out
xor
mov
lds
in
in
aad
movsb
test
xlat
and
mov
jns
sub
dec
sbb
stos
call
xor
hlt
mov
negb
and
adc
push
sbb
and
add
mov
aaa
es
and
adc
orl
cld
lret
sbb
addb
inc
xchg
dec
popa
sub
addl
mov
aas
cmpsb
sbb
loopne
dec
or
fadds
sub
mov
pop
jae
xchg
mov
mov
add
push
loopne
pop
sub
adc
xchg
mov
dec
or
adc
movsb
imul
dec
and
cld
jns
push
or
or
dec
cld
sbb
sysret
movsb
in
fadds
mov
add
add
dec
insl
cwtl
pop
movsl
lock
sub
outsl
mov
es
adc
sarb
rclb
inc
and
mov
int
xor
sbb
js
in
pop
or
fcompl
shll
lods
and
das
or
pop
mov
jmp
inc
add
and
popa
test
sbb
cmp
inc
push
mov
mov
aaa
mov
sbb
push
add
fldcw
nop
aaa
lock
jno
and
es
cmp
les
cmpb
or
enter
adc
mov
push
je
dec
ja
movsb
inc
cmp
das
xor
mov
popa
xorl
xor
push
pushf
jl
sbb
pushl
fisubrs
lea
pop
inc
push
add
add
jle
aad
pop
mov
push
jae
cmp
adc
sub
and
jmp
push
enter
and
mov
std
in
xor
rorb
cmp
rcll
mov
add
call
xchg
in
loope
or
fwait
stos
movsb
add
cltd
arpl
imul
jo
iret
ss
jle
adc
add
test
xchg
test
and
leave
sbb
xchg
shrb
xor
push
movl
dec
dec
iret
and
adc
mov
fsubrs
jbe
cmpsl
arpl
lds
and
aaa
scas
add
loopne
mov
xchg
push
imul
xor
jno
arpl
dec
cmp
sub
dec
xor
mov
pop
jmp
add
lahf
adc
push
or
mov
out
loopne
add
ret
xchg
mov
cmp
int3
dec
and
insl
mov
cs
flds
add
mov
dec
mov
cli
sub
cs
sbb
test
ds
and
orb
or
inc
xchg
add
rcll
rcr
sub
inc
roll
dec
dec
and
sbb
push
and
imul
iret
xchg
fsubp
inc
push
cmp
cmp
dec
rcrb
jge
pusha
addr16
pop
mov
test
fsubl
sub
cmp
add
push
and
mov
or
push
jns
cmp
sbb
mov
cs
stc
loop
test
adc
add
cs
push
sub
arpl
andl
out
movsl
pop
mov
inc
mov
imul
inc
movsb
lock
std
es
mov
gs
jo
add
lea
fstl
fisubl
out
dec
ret
sub
pop
or
not
rcrl
ljmp
dec
test
nop
daa
pop
jge
cmp
and
inc
rorl
je
pusha
dec
repz
in
nop
gs
jmp
loope,pn
lret
rcrb
movb
sub
push
jmp
cmp
add
add
xorb
or
xchg
pop
or
gs
rol
xor
pushf
mov
xorb
add
ret
mov
stos
in
pop
pusha
adc
push
cmpsl
and
cmp
js
cs
inc
mov
xchg
cli
xchg
loope
in
dec
pop
ss
mov
inc
add
pushf
inc
pushf
sbb
adc
sbb
push
mov
mov
jl
addr16
adcb
push
andb
int3
jns
out
add
addr16
pop
fidivrl
sbb
call
rorb
iret
dec
cwtl
pop
mov
xor
fldl
inc
push
imul
jl
cmp
jne
test
ret
out
into
mov
xchg
sub
inc
and
push
mov
arpl
ret
and
adc
ret
xor
mov
popa
inc
stc
dec
cmp
fistl
mov
and
sub
clc
faddl
and
xchg
xor
inc
add
mov
xchg
pop
mov
or
mov
push
xor
addr16
sub
test
xchg
sub
sub
or
jo
idivl
adc
xchg
jno
rcll
mov
xor
cld
adc
mov
fbstp
sub
and
adc
aam
sbb
or
xor
lock
and
adc
adc
nop
cs
jo
out
pop
daa
mov
dec
popa
iret
xchg
inc
or
stc
test
ret
daa
inc
std
and
and
dec
push
push
out
es
idivl
pop
sub
sbb
fcoms
fcoms
adc
pusha
add
aas
sub
pop
adc
push
pop
jl
fwait
mov
dec
jp
cwtl
and
push
xor
adcl
aaa
add
movsl
loope
or
stc
sysret
mov
sub
cwtl
mov
cmp
and
inc
test
insl
adc
scas
movsb
jno
add
stos
cltd
add
adc
test
add
adc
loopne
popa
sbb
push
xor
adc
pop
inc
sbb
call
xor
les
pop
add
faddp
mov
inc
icebp
adc
lea
add
filds
jle
int3
fcmovnbe
mov
je
ret
add
mov
inc
mov
sbb
jle
adc
icebp
pop
ret
stos
fs
jp
mov
cmp
mov
xchg
ds
pop
mov
cmp
popa
jne
shlb
rorl
pop
negl
pop
inc
loop
mov
ret
cli
pop
inc
add
bound
jno
lret
or
jge
fnstenv
imul
dec
sub
sbb
and
inc
fsubr
xor
pop
scas
and
fldl
addr16
sbb
jb
pop
sbbb
jecxz
jp
mov
mov
movsl
adc
stos
dec
aad
or
add
or
sbb
mov
inc
repz
hlt
sub
push
mov
pusha
pop
call
jae
or
pop
cmp
jnp
cmp
addl
leave
icebp
add
adcb
xchg
adc
stos
in
jmp
fdivrs
cmp
mov
cli
es
icebp
jbe
mov
pop
mov
mov
jl
add
adc
mov
or
sbb
and
mov
popa
scas
decl
mov
imul
mov
jle
rcrl
xlat
push
fcomi
test
rcrb
sub
dec
imul
movlps
or
add
inc
push
or
dec
in
cmp
fmull
jge
mov
popa
mov
pop
arpl
and
imul
push
les
xchg
nop
mov
je
fwait
into
cmp
pop
xchg
nop
mov
cmp
mov
sub
movsl
dec
jmp
push
inc
or
jmp
js
fsubr
xchg
push
xlat
fs
scas
push
or
je
ret
push
sbb
mov
sbb
jne
jmp
or
mov
adc
add
fcomp
test
pop
nop
xorb
cmp
mov
cltd
adc
inc
or
in
dec
xchg
icebp
xor
sub
add
pop
dec
inc
mov
je
cmp
jo
aad
cmp
fwait
mov
dec
push
xchg
sub
inc
ljmp
cmp
dec
cltd
imul
xchg
adc
sub
pop
mov
xchg
lret
add
dec
adc
mov
nop
cmp
stos
les
jne
test
add
shrl
lcall
cmpl
fbld
sub
push
mov
out
sbbb
aam
xor
bswap
cmp
lods
mov
filds
push
loope
dec
mov
mov
outsb
call
sbb
icebp
clc
adc
or
pop
subl
shll
mov
ljmp
cmp
xchg
lret
fbstp
arpl
add
dec
or
sub
sti
pop
inc
xchg
push
push
imul
adc
ds
loopne
cwtl
es
push
call
int3
ljmp
adc
mov
rcl
mov
nop
inc
iret
jmp
test
popf
dec
push
dec
es
jle
inc
xorb
add
aam
pop
cmp
add
pop
ja
cld
push
push
dec
loop
in
lret
add
rol
scas
aaa
addl
and
nop
jnp
xor
lods
xchg
and
in
movsl
das
or
xor
sbb
lret
xchg
push
adc
fwait
das
xchg
add
divb
push
jne
mov
popa
mov
fisubrs
sbb
adc
push
addr16
push
addb
in
xchg
sub
enter
test
add
subl
dec
cmp
sub
add
ret
add
iret
dec
jmp
rcll
or
add
jmp
and
fmul
adc
insb
xchg
mov
cmpsl
xchg
sbb
mov
inc
dec
aam
movsb
or
mov
cmc
add
dec
js
cmpsl
sbb
xor
lahf
frstpm(287
scas
popa
xor
and
arpl
aam
sub
inc
mov
xchg
fs
and
ja
mov
pop
mov
add
fnstcw
pushf
repnz
mov
push
jmp
add
xchg
push
daa
xchg
fcomi
fucom
popa
out
xchg
mov
pusha
fwait
sub
bound
sbb
adc
and
test
shrl
cs
insl
jo
std
aas
inc
aas
ret
jnp
orl
aam
popa
fidivrl
scas
in
add
imul
jmp
dec
jns
fnstcw
ss
lcall
nop
or
pop
aam
mov
fnstsw
jo
cmp
sub
sub
pop
mov
dec
fsubrs
push
fisttps
xchg
clc
add
add
int
sbb
js
js
or
adc
aaa
push
jle
cmpb
mov
xchg
inc
mov
lcall
dec
ja
hlt
sbb
pusha
test
popa
test
push
testl
addl
out
pop
rcrl
xlat
fnstsw
add
cld
inc
fistpll
jecxz
and
mov
sub
ja
cltd
dec
out
cmp
insb
std
sbb
data16
push
stc
das
push
mov
mov
hlt
ss
es
xchg
and
pusha
jb
ret
add
rcrl
loopne
aas
mov
mov
add
xchg
rclb
sti
cmp
or
fdivrs
xor
lret
das
sub
rorb
or
mov
aaa
adc
lds
lds
lock
xor
mov
test
or
es
sbb
out
sti
add
mov
fistps
mov
dec
and
pop
sub
jp
je
pop
xchg
scas
pop
xlat
arpl
adc
push
imul
mov
in
inc
loopne
lds
push
pop
mov
push
mov
mov
pop
dec
shlb
mov
pop
lock
test
ljmp
sub
out
adc
rolb
loope
aam
or
xbegin
jmp
push
xor
push
in
push
push
aas
pop
jmp
jne
push
pop
mov
ja
aam
test
pop
and
inc
add
jo
or
test
cmp
addb
jo
inc
enter
adc
jp
cmp
aam
jbe
mov
adc
and
test
sub
aas
sbb
lahf
es
cmp
and
inc
mov
pop
inc
or
outsb
add
push
fucomi
in
aad
mov
mov
leave
loopne
jnp
add
scas
add
or
scas
rol
jnp
movsb
lret
mov
add
jp
xchg
inc
outsl
into
je
out
jbe
sub
mov
pop
sub
mov
ret
push
in
cmc
push
mov
cmp
xor
sub
fildl
adc
mov
daa
mov
push
in
and
mov
and
dec
push
icebp
jae
and
mov
or
jmp
test
adc
or
push
add
jle
add
inc
stos
js
rolb
loope
shrl
mov
lret
ja
sti
clc
pop
lahf
cmp
scas
add
movsb
jae
aam
mov
sbb
test
inc
mulb
inc
scas
icebp
clc
es
jmp
fnstsw
pop
add
or
jbe
sbb
rsm
mov
mov
cwtl
push
or
cld
or
xchg
pop
mov
jae
inc
xlat
and
jno
clc
inc
xchg
jo
sbb
insb
pop
sbb
loop
and
or
or
fwait
adc
inc
ror
pop
push
dec
lahf
jge
and
push
ret
sbb
xchg
xchg
pop
sbb
inc
popa
daa
mov
pop
and
ret
sti
sub
dec
jmp
fbld
xor
xchg
push
adc
inc
add
fists
and
adc
add
pop
mov
adc
out
mov
xor
pmaxsw
loop
call
lea
lea
ja
push
add
push
or
arpl
frstor
repz
mov
pop
and
aam
adc
sahf
inc
adc
push
repnz
dec
arpl
inc
enter
loope
push
add
out
inc
fdivrs
inc
push
mov
lods
xchg
lfs
adc
fimull
test
dec
popa
cwtl
bound
xor
cmp
sarl
xor
shlb
mov
insl
roll
sbb
dec
dec
inc
add
push
enter
enter
dec
scas
sbb
jp
adc
xor
mov
pusha
mov
jb
jl
loop
cmc
movsl
iret
fstps
cmp
adc
hlt
inc
ja
das
fmuls
or
inc
aad
jo
or
dec
mov
add
inc
and
jmp
add
insw
test
mov
ss
test
sbb
dec
movsb
jae
loopne
scas
fs
popa
call
daa
ds
inc
mov
cltd
shrb
incl
add
fsubl
ret
push
push
loopne
jecxz
xchg
aam
pusha
in
xchg
add
mov
in
icebp
roll
push
or
clc
loope
dec
imul
outsl
xor
stos
sub
fs
clc
ss
push
ds
add
pop
add
sub
xor
lret
ds
mov
mov
fwait
repnz
adc
cs
insl
fistpll
movb
ret
jmp
sbb
movsl
hlt
andl
inc
xor
subl
mov
aaa
xchg
stc
mov
adc
nop
ss
daa
lea
push
or
shrl
test
add
fisttpl
cmpsl
sub
sub
mov
je
xor
push
xor
and
and
int3
icebp
test
pop
dec
fcomps
push
jp
jle
aam
or
push
shl
test
push
xchg
movsb
js
pop
enter
mov
out
jno
rorb
mov
xor
sub
les
push
call
cmp
out
pop
shrb
add
lods
data16
loopne
rcrl
test
sub
sbb
rcll
sbb
and
lods
mov
xor
xchg
cmp
aaa
or
inc
jp
mov
jno
sbb
xor
cmp
mov
push
std
push
pop
sbb
fcmove
inc
and
call
sbb
fisttps
call
xchg
push
ss
insb
loopne
ss
int3
lahf
and
or
dec
andb
add
jge
repz
dec
pop
jg
jmp
xchg
popa
mov
cmp
hlt
add
sbb
push
lods
popf
add
cmp
or
lahf
mov
cmp
cmpl
lret
pop
add
mov
daa
adc
rcrb
mov
add
inc
pop
sub
dec
add
pop
add
jne
and
mov
dec
mov
mov
mov
pusha
imul
pop
jge
das
in
loope
lea
pop
or
xchg
push
lock
inc
mov
fsubs
push
add
daa
adc
sbb
add
mov
aaa
test
ret
dec
cmpsl
lahf
and
mov
xchg
int3
rcll
aas
push
pop
add
lds
jno
sub
mov
add
and
popa
push
test
add
inc
mov
cmp
add
roll
jae
leave
add
push
jno
and
xor
xor
nop
sti
popa
gs
jg
inc
jl
add
mov
sbb
repnz
scas
test
and
test
sub
push
jnp
adc
jns
cmp
push
add
ja
xor
push
shlb
xchg
lods
or
sti
loopne
push
mov
incb
ja
or
ret
mov
push
mov
std
xor
push
nop
xorb
cld
js
notl
popa
add
dec
cwtl
inc
adc
das
aaa
int
xor
movntps
testb
int
loop
add
cmp
addr16
aaa
insl
lea
jle
lods
outsb
lods
iret
sub
push
mov
add
int3
movsb
dec
add
rol
xor
jecxz
add
ret
popf
mov
sbb
das
into
out
aaa
negb
push
push
xor
push
sub
test
repnz
adc
aaa
or
lock
stos
sub
push
lcall
dec
and
subl
cmp
out
dec
pop
sbb
in
and
xchg
fs
js
daa
mov
mov
push
je
and
inc
mov
xchg
ljmp
add
xchg
fsubrl
xchg
xchg
test
pop
fldt
add
iret
mov
out
xchg
lahf
js
mov
jbe
xor
popf
inc
dec
mov
or
inc
or
dec
es
and
pop
icebp
ja
pop
push
push
push
or
cmp
loope
xor
out
out
jo
sub
repz
nop
orb
fsubrs
add
popf
std
gs
stc
or
loope
fsubl
push
dec
mov
pop
adc
enter
mov
loop
inc
mov
mov
jae
inc
sbb
push
or
sub
stos
popa
push
add
cmc
pushf
pop
add
add
and
or
popa
xor
gs
or
lcall
fcom
les
and
loopne
pop
mov
orl
addl
and
mov
mov
xor
int3
jno
dec
shrb
push
popa
dec
mov
fwait
jmp
add
push
jg
mov
and
jp
mov
lods
xlat
std
add
dec
jb
ret
fs
stc
sbb
inc
add
inc
adc
popa
cmp
xor
subl
pop
popa
fcoms
cmp
insl
aad
pop
pop
subl
or
js
imul
sub
push
or
or
inc
sbb
in
or
xchg
outsl
sbb
mov
test
in
add
mov
pop
jmp
fsubr
adc
sub
sti
mov
mov
inc
sub
cmc
adc
inc
jbe
shlb
and
mov
mov
add
xorb
bound
mov
cwtl
push
fcmovb
sbb
jno
inc
xchg
cs
test
std
dec
or
hlt
cmpsb
aam
nop
xchg
push
shlb
mov
daa
js
push
pop
lods
into
add
dec
pop
push
inc
sbb
loopne
test
cmp
mov
xlat
dec
adc
mov
push
dec
in
dec
mov
xor
stos
jl
jle
jno
push
out
sbb
fldcw
cli
or
inc
inc
push
or
ret
test
out
mov
mov
bound
xlat
push
shrl
push
aas
and
lret
pusha
movsl
add
iret
xor
push
adc
dec
or
adc
mov
roll
fistpl
outsl
or
push
cmp
mov
dec
aam
sbb
nop
dec
jmp
lods
add
mov
popa
add
add
push
mov
insl
imul
cmp
and
bnd
stos
sub
xchg
mov
rcll
xchg
js
add
push
in
add
pop
and
das
or
fcoml
add
movb
sub
add
pop
inc
jmp
push
sbb
dec
and
xlat
add
push
roll
les
aas
sub
dec
sbb
adc
sbb
xor
rolb
cs
xchg
aaa
xchg
sub
shlb
lcall
mov
or
dec
js
lods
push
loope
mov
xchg
js
jo
sbb
pop
shrb
insl
call
xor
push
adc
addr16
nop
je
movsb
add
cmp
adc
dec
aam
les
in
inc
and
lcall
pop
and
lods
das
lods
int
test
fstpt
cmpsl
mov
mov
sub
shll
rolb
dec
jb
pusha
test
mov
mov
icebp
sub
jg
sbb
je
popa
fnstsw
lock
rclb
jge
or
jp
ja
xchg
das
inc
adc
inc
popf
jne
pusha
movsl
mov
jbe
xchg
adc
lods
xlat
addl
jl
scas
push
mov
int3
sbb
mov
add
mov
lds
pushf
xchg
fistpll
outsb
movsb
rcrb
xor
sub
add
push
dec
dec
movsl
pop
cmpsl
lcall
aam
pusha
xchg
dec
inc
or
les
fmull
outsl
push
movsb
xor
sub
mov
add
aam
mov
cmp
or
jecxz
cltd
fucomi
push
mov
mov
fabs
dec
sbb
arpl
ja
inc
dec
cmpl
je
sub
sbb
mov
pop
lcall
into
inc
clc
movsb
in
jl
jb
jl
mov
lahf
int
xor
mov
fwait
push
imul
and
mov
mov
addr16
push
aam
sbb
cmp
push
inc
les
fwait
pop
ljmp
clc
push
test
int3
outsl
mov
rorb
lret
je
push
dec
data16
pop
add
mov
mov
xchg
and
lea
dec
cmp
aaa
out
sub
lea
jno
test
cld
imul
fldl
fs
cmp
movsl
test
stos
add
nop
mov
cmp
jo
fwait
mov
movsl
jno
inc
sbb
mov
andl
dec
dec
int
dec
xchg
fiaddl
xchg
aaa
in
mov
pop
insl
popa
push
dec
pop
dec
pop
or
sbb
or
gs
dec
push
cmpsl
inc
ja
inc
and
adc
pusha
xor
adc
fcomps
cmp
aam
mov
rclb
popa
xor
adc
add
in
lods
push
inc
cld
cmpsl
or
or
adcl
sbb
and
add
xchg
inc
and
mov
and
scas
adc
icebp
mov
or
or
dec
lea
and
dec
repz
dec
stos
inc
push
or
mov
push
sbb
je
push
sub
mov
jnp
addr16
pop
daa
dec
inc
add
push
das
ljmp
and
arpl
pusha
add
sbb
push
inc
sub
dec
or
xchg
sbb
push
add
fisttpll
jmp
lret
leave
mov
mov
cmp
stc
cld
sub
mov
and
push
push
ja
daa
js
or
imul
mov
scas
mov
cmpl
add
xor
xchg
push
popa
pop
pop
add
cmp
mov
shrb
test
rorl
jno
inc
push
pop
addr16
mov
jl
mov
cmp
jnp
mov
mov
pop
dec
cmpsl
inc
push
mov
mov
or
dec
popa
pop
lods
rclb
jle
mov
daa
push
push
call
mov
or
sbb
loopne
adc
or
or
mov
sub
mov
sbb
adc
mov
and
pusha
les
mov
pop
sbb
xor
andl
xchg
pusha
sbb
and
fs
mov
or
jbe
out
popa
cmpsl
or
mov
adc
or
das
scas
sub
sub
mov
pop
and
mov
in
fdivrs
stos
jmp
stos
shlb
sbb
fcmovnbe
aad
std
pop
dec
lret
push
inc
mov
shlb
inc
add
fs
orb
add
adc
test
inc
adc
inc
mov
lods
dec
jmp
and
pop
rcl
or
rcrb
lods
dec
pop
jmp
inc
cmpsb
test
add
pop
sbb
lcall
dec
adc
dec
mov
jl
sub
arpl
loop
xor
cli
aam
and
mov
call
test
mov
sti
aam
das
test
sbb
mov
ss
cmp
and
xchg
out
cmpb
adcb
pusha
and
adc
xchg
sbb
fwait
and
mov
lahf
push
push
or
or
sub
orb
popf
sbb
push
js
push
aam
scas
aad
xor
mov
pop
adc
das
mov
cmp
and
arpl
adc
jnp
ret
cmpsb
mov
lcall
pop
pop
out
rorl
in
sahf
pop
pop
mov
jo
movsl
cmp
test
sbb
pusha
and
push
sub
adc
fadds
dec
jmp
or
loope
popa
inc
iret
scas
lds
ret
fimull
mov
les
mov
add
push
ret
sbb
cmp
adc
pop
nop
cltd
iret
or
xor
stc
and
fdivrp
add
jne
or
sbb
lock
add
add
filds
inc
push
push
movsl
ds
in
xchg
inc
mov
mov
inc
add
out
xchg
fmul
call
pop
int
test
inc
mov
add
test
xor
mov
rcl
add
cmp
addr16
dec
fcoms
into
inc
sub
addr16
xchg
adc
scas
int
fisttps
jnp
cmc
dec
cmpsb
and
pop
fwait
add
rcrb
push
fidivrl
adc
addr16
sbb
dec
out
xchg
addb
adc
inc
jecxz
xchg
shlb
or
mov
pop
movsl
xor
aad
xchg
sarb
mov
das
and
add
add
stos
outsl
fninit
nop
andb
in
jo
in
jge
sbb
xor
mov
popa
or
test
ss
scas
pop
xor
iret
aas
int
add
adc
inc
push
push
inc
ret
cmp
in
mov
ja
sub
adc
xor
xor
or
nop
jns
addl
test
pop
mov
out
aaa
mov
aas
pop
jp
sub
pushf
inc
mov
jo
and
xor
cs
ja
or
scas
jnp
xor
scas
xchg
shlb
adc
push
ss
lcall
lock
fwait
cmpsl
iret
cmp
ret
push
lds
dec
and
mov
add
and
cmc
mov
adc
insb
aam
fildl
insb
test
push
mov
fiaddl
add
sti
sbb
insb
push
fiaddl
test
clc
push
add
out
xchg
jecxz
ds
mov
repz
sub
movzbl
lret
ret
repz
icebp
sbb
xor
aad
or
clc
mov
addr16
cmp
lahf
hlt
mov
push
clc
cmpsl
sub
test
xchg
or
scas
pop
dec
daa
or
sub
loopnew
mov
jmp
dec
mov
cmp
addr16
orb
push
mov
iret
xor
pop
mov
xor
mov
push
ljmp
inc
mov
daa
popa
insb
das
mov
xor
pusha
cmp
pop
aad
mov
ret
jae
dec
lcall
fsqrt
add
and
lods
fisubl
fdiv
or
cmp
cmp
mov
and
mov
inc
inc
and
sbb
and
adc
fwait
dec
lods
xchg
mov
jb
add
sbb
push
sub
jbe
cmpb
bound
cs
pop
inc
insl
and
aam
enter
xor
xchg
xchg
add
push
sbb
into
pop
xor
ja
mov
pushf
arpl
loope
ret
loopne
aaa
push
fwait
les
mov
fs
cmp
ret
dec
rorb
and
adc
xor
sub
arpl
pop
inc
scas
and
mov
int
scas
xor
pushf
jns
jb
sar
popa
loope
ffreep
xchg
or
dec
dec
xor
mov
out
popa
arpl
cmp
call
dec
and
inc
cmp
mov
cmp
adc
and
mov
inc
push
in
xchg
or
xor
lock
incl
out
outsb
and
pop
jae
outsb
movsl
fs
aam
jno
mov
lods
ss
mov
jns
pop
stos
fcmovnu
or
subl
mov
icebp
jne
inc
pavgb
xor
push
fisttpl
add
add
scas
fnstenv
and
sbb
ret
dec
sbb
das
xor
sub
add
jnp
cmp
mov
bound
outsb
and
cmp
or
rcll
push
sbb
adc
dec
test
or
addl
mov
inc
push
push
xchg
mov
or
stos
dec
dec
pop
in
sbb
rcl
gs
and
int
add
orl
enter
dec
sub
mov
xor
pusha
jo
push
andl
clc
add
test
xor
lods
dec
cmp
sbb
leave
in
js
xchg
scas
outsl
adc
js
push
fnsave
mov
les
push
and
and
dec
movb
pop
adc
xchg
xor
and
popf
fistl
mov
mov
mov
dec
inc
lcall
push
cmpsl
sbb
repnz
cltd
test
outsl
add
pop
arpl
pop
xchg
fmull
stos
fucomp
push
sub
iret
leave
sarl
adc
lock
outsb
test
inc
jmp
sbb
mov
outsl
mov
aaa
lock
popf
push
add
jmp
loopne
mov
adc
mov
cmpsb
ja
add
dec
add
xor
dec
dec
push
sbb
mov
movsl
xlat
pushf
xorb
cmpsl
popa
sbb
lods
scas
aas
and
pop
push
stc
jne
call
or
adc
or
push
call
es
mov
adc
add
cmp
and
nop
mov
add
lea
add
cmpb
mull
aaa
mov
pop
jecxz
mov
and
jne
or
cmpsl
add
test
xor
jl
pop
add
bound
pusha
call
iret
sub
dec
jb
jecxz
and
lods
xchg
push
dec
cwtl
fucom
inc
cmp
sub
push
xor
mov
rcrb
cmp
repnz
inc
add
ljmp
shlb
sbb
sub
call
movsl
je
adc
xchg
push
fcomps
cmp
xchg
nop
sbb
call
sbb
shrb
pusha
jmp
imull
aas
jne
cmc
jb,pn
push
or
add
jge
lahf
push
inc
adc
aaa
fbstp
or
repz
scas
and
lods
mov
push
je
push
jmp
sbb
xchg
adc
add
inc
mov
add
out
sub
mov
push
mov
jmp
inc
sbb
cmc
add
imul
sahf
jl
sub
mov
movsl
cli
movsl
sub
je
sub
push
push
mov
jnp
xchg
sub
mov
shlb
cmc
shlb
jmp
lds
jne
cltd
icebp
ljmp
lods
adc
or
push
ucomiss
rorl
sahf
movsb
arpl
loopne
add
cmp
dec
lret
imul
out
out
cmpsl
push
fwait
shlb
addb
pop
enter
test
out
or
aam
addb
sub
stos
orb
nop
dec
inc
push
add
push
sahf
movsb
insb
adc
arpl
push
hlt
insb
ret
or
add
pushf
or
jo
jecxz
das
dec
orl
and
push
add
push
add
add
pop
mov
xlat
pop
add
sbb
inc
rolb
lahf
pop
mov
push
cmpsb
cmp
sbbb
mov
pop
mov
inc
iret
mov
xchg
pop
push
roll
hlt
or
sub
shl
xchg
and
push
pusha
sbb
inc
inc
push
xor
push
mov
loopne
adc
xor
cltd
jmp
daa
or
add
or
and
inc
xor
setne
test
xchg
mov
rcrb
xorb
jns
rorb
add
mov
jo
aaa
js
out
push
push
test
add
dec
or
cwtl
xchg
subl
lds
inc
lret
sub
sub
dec
inc
xor
scas
adc
fistl
cmp
pop
pop
add
xchg
popa
jb
mov
lcall
mov
lahf
mov
jg
lahf
xchg
xor
fwait
and
dec
inc
inc
xor
adc
xchg
pop
daa
sub
adcl
mov
inc
jno
xor
mov
jp
cmp
sub
test
sbb
jecxz
sub
pop
xchg
push
jle
dec
imul
xor
and
dec
rcll
xor
icebp
movsl
ljmp
push
fs
imul
or
jecxz
test
jo
insb
in
pop
cmp
rclb
cmp
daa
ret
scas
aaa
push
cmp
fimull
cmp
push
mov
ja
and
lods
push
call
add
fldenv
movl
jmp
fiaddl
mov
sbb
lahf
data16
inc
jns
or
xchg
jle
mov
sbb
mov
lea
test
pop
rorb
popf
jo,pn
sub
fs
push
push
in
mov
inc
and
xor
imul
xchg
and
mov
dec
jne
xchg
outsb
add
sbb
jl
inc
jecxz
or
xor
push
jp
test
dec
popa
inc
add
xchg
mov
icebp
mov
rorb
loop
and
cli
or
xchg
sbb
xor
outsb
pop
sub
jne
mov
adc
iret
xchg
mov
popa
xor
fmull
cltd
dec
xlat
test
aad
pop
jnp
mov
ja
inc
rcrb
cwtl
dec
pop
loopne
testl
lods
inc
and
hlt
ds
gs
insl
repz
or
in
in
lea
pop
es
mov
ja
jb
stc
jle
and
adcl
ret
lods
pop
mov
es
into
ja
cmpps
rolb
jg
pop
insb
ja
sub
sbb
orl
test
inc
dec
inc
sub
shll
roll
aas
push
pop
xor
lret
test
pop
stos
inc
mov
or
add
add
adc
stc
adcb
or
add
sub
aaa
aam
ss
pop
sbb
push
daa
test
adc
adc
ljmp
adc
xchg
mov
sbb
cs
dec
nop
sbb
jb
push
jg
addr16
add
ss
fistpl
movsb
popa
adc
fdivs
inc
mov
cli
fimull
test
into
ret
and
add
sub
inc
push
pop
adc
js
xor
push
fstpl
push
adc
iret
and
shll
cmp
push
cmp
aad
and
sbb
stos
pop
jmp
pop
rcr
loopew
test
repz
sbb
adc
leave
push
movl
inc
inc
loopne
enter
daa
push
ljmp
aam
pop
mov
inc
popa
iret
or
adc
in
loop
push
imul
xor
xchg
push
lcall
jns
add
mov
push
sbb
push
movq
shrl
add
add
inc
xor
cmp
sub
sbb
movsb
add
shrl
in
lret
push
cs
lret
pop
leave
inc
xlat
test
pop
mov
aam
rcrb
or
xor
cmp
orb
call
mov
jnp
xchg
rcrb
push
ret
je
je
mov
cmp
repz
int
push
cmp
pavgb
or
and
or
mov
dec
test
aam
scas
imul
mov
and
pop
int
jbe
xchg
push
fidivl
sub
je
push
jle
fs
push
sahf
jg
test
add
lock
lds
push
outsb
insb
pusha
mov
jg
lea
lea
prefetch
lahf
popa
gs
addr16
mov
sbbb
push
mov
sbbb
in
xchg
dec
dec
or
aaa
iret
jp
xchg
add
pop
xor
imul
xlat
addb
mov
addl
imul
cmp
adc
insl
inc
ja
rorb
and
dec
mov
ret
jno
and
in
inc
cmp
outsb
das
cmp
jb
dec
je
fmuls
sbb
mov
jle
scas
and
sub
loopne
or
xchg
movsl
lea
sub
sbb
xor
mov
idiv
movsb
or
pop
and
jnp
inc
xor
outsb
push
lret
cmp
es
mov
push
add
imul
arpl
pushf
jmp
add
or
leave
xchg
das
xor
bound
ja
lds
xor
add
cmp
or
add
loopne
ss
push
push
pop
lahf
test
inc
mov
cmp
jmp
int3
addr16
test
call
jo
arpl
imul
sbb
add
sbb
xchg
call
mov
popf
hlt
xchg
arpl
ret
fneni(8087
lock
nop
fsubrs
aad
dec
orl
jp
xor
xor
push
inc
sub
pop
popf
hlt
test
sbb
inc
lock
rorl
imul
mov
mov
in
or
iret
in
lret
pop
bound
mov
or
enter
data16
and
adc
inc
subb
jns
pusha
outsb
lret
push
insl
mov
adc
or
stos
cmp
repz
inc
roll
iret
sbb
adc
mov
cmp
test
jne
call
insb
mov
xchg
mov
and
pop
movsl
pop
sbb
lods
in
lods
loop
lods
pop
inc
add
cmp
cmp
fisubrs
lea
sbb
adc
loope
or
dec
fs
shlb
adc
rclb
loop
mov
into
jns
adc
popa
mov
jmp
leave
in
test
push
jnp
xchg
es
xchg
cmp
push
cmpsb
sarb
sbbl
dec
femms
popa
daa
subb
imul
mov
dec
mov
sub
push
adc
xchg
cs
js
int
pop
add
add
icebp
adc
pop
cmp
enter
inc
or
add
xchg
cmp
pop
aad
adc
add
stos
int
sbbl
packsswb
lret
and
sbb
add
ja
xor
pop
push
loopne
movsb
push
lea
clc
shl
pop
add
clc
jle
dec
cmp
int3
inc
sets
movsb
insl
jmp
dec
aad
add
int3
add
lods
xor
xchg
jno
xchg
lret
dec
add
adc
adc
je
test
jge
lea
adc
les
test
jne
imul
sbb
rorl
and
pushf
pop
das
jge
filds
lret
inc
shl
rcl
sahf
cltd
testb
test
push
loop
push
les
mov
xchg
push
lds
inc
ret
mov
cmp
mov
call
aam
pop
sub
pop
int
xchg
mov
out
inc
mov
pop
dec
cwtl
imul
into
rcl
mov
mov
adc
sbb
and
inc
jae
nop
test
insl
jecxz
add
bts
pop
xchg
icebp
xor
xlat
mov
sbb
pop
in
pop
call
sub
and
dec
add
aas
push
sbbb
mov
pusha
mov
push
and
mov
push
dec
fnstsw
das
lret
jnp
addl
js
mov
mov
jmp
outsl
adc
aaa
sub
rolb
xchg
adc
lcall
pop
xchg
xchg
iret
mov
je
lahf
mov
int3
call
jns
aas
jno
or
jbe
pop
pop
xor
shlb
cmp
in
inc
dec
or
adc
movsb
push
sarl
sbbb
test
loopne
mul
mov
out
pop
insb
pop
push
shrb
xchg
dec
or
push
inc
in
in
cmp
mov
adc
sbb
adc
or
sarl
and
testl
push
xor
lea
data16
arpl
xor
shlb
xor
shlb
add
add
stc
pop
cltd
ret
enter
scas
hlt
jno
or
in
dec
pusha
push
sbbl
mov
pop
push
push
clc
dec
jecxz
jecxz
xchg
add
insl
cmp
mov
sbb
loop
mov
jb
mov
add
and
test
flds
shll
or
sti
repz
rcll
dec
inc
cmp
xor
or
push
stos
push
ret
daa
add
and
push
xchg
add
or
test
daa
push
enter
cmpsl
ja
popa
iret
shlb
adc
outsl
fldenv
jmp
or
pop
mov
outsl
mov
mov
cmpsl
int3
push
mov
xor
loope
test
add
iret
divb
out
add
add
movsl
and
xor
mov
inc
es
fwait
minps
mov
insb
lcall
aam
sbb
inc
cmp
cmc
test
idiv
or
or
mov
dec
or
sub
lods
lds
inc
add
cmp
jl
andl
psubb
test
pop
data16
push
cmc
mov
sbb
jl
test
and
add
pop
jecxz
loope
mov
xor
pmaddwd
icebp
mov
les
ds
push
sarl
testl
inc
aam
and
jns
sbb
adc
or
inc
jmp
lcall
jecxz
cltd
pop
ficoml
fidivrs
add
popa
push
shll
fwait
lahf
test
inc
inc
push
mov
push
or
test
inc
dec
jae
mov
adc
test
xchg
aam
rcl
inc
dec
add
imul
arpl
and
jno
sbb
pop
sbb
xor
and
aad
push
lds
fisubl
dec
adc
in
test
mov
jmp
movsl
orl
push
fsub
xchg
hlt
pusha
jo
mov
das
mov
jb
push
subb
dec
scas
xor
dec
scas
das
jp
push
arpl
inc
inc
inc
xchg
loop
inc
shrb
jo
mov
sub
xchg
js
insl
sub
xor
out
lock
adc
stc
dec
cwtl
push
loop
call
btc
mov
into
mov
in
adc
adc
or
jge,pn
arpl
daa
lock
lock
adc
bound
or
sub
movsb
sti
inc
dec
xlat
and
cli
call
add
push
add
inc
jne
cmp
hlt
fldenv
push
inc
cmpsl
fsubrs
adc
push
jae
jbe
mov
jmp
cmpsl
push
lcall
mov
push
mov
xor
les
dec
rcrb
xchg
adc
shrl
jle
jl
adc
sub
daa
ds
sbb
nop
arpl
bound
dec
adc
mov
sbb
mov
shl
mov
dec
adc
sub
ss
das
xor
ror
aas
inc
xchg
inc
push
jae
sub
lods
cmpsb
leave
mov
mov
sub
push
dec
and
pop
fistpl
mov
inc
mov
xor
test
cli
xchg
push
call
icebp
push
es
jo
mov
adc
adc
js
mov
pop
push
lret
int3
scas
mov
xchg
testb
aam
js
xor
scas
jbe
addr16
in
add
lret
cmpsl
add
das
cmpsl
enter
add
push
es
add
aaa
fiaddl
aad
test
jecxz
inc
imul
inc
xchg
cmpsl
cld
push
stc
jle
xor
pop
inc
movsl
inc
xchg
rolb
xor
clc
repz
pop
ljmp
movl
daa
add
mov
push
rol
ficoml
insl
push
mov
xchg
test
rolb
ljmp
bound
adc
lret
nop
mov
shlb
mov
mov
sbb
xchg
push
add
jnp
xor
movsl
adc
adc
add
test
sbb
sbb
xor
push
adc
inc
mov
lea
inc
inc
mov
mov
ror
cmpsl
xor
popa
push
mov
xor
fsubp
pop
insl
jbe
mov
loopne
icebp
push
jb
dec
adc
fmuls
imul
mov
xchg
xor
lds
xor
and
iret
xor
inc
xchg
add
jno
add
mov
daa
outsb
dec
popa
adc
add
or
push
sub
les
pop
into
addr16
push
iret
and
add
popf
mov
xor
in
into
mov
in
or
aas
and
out
xchg
sub
inc
iret
aam
push
add
out
les
aas
pusha
xchg
sub
dec
dec
aas
pop
enter
ljmp
aam
mov
js
cmp
jle
popa
mov
mov
xor
jp
test
jecxz
fwait
mov
dec
sbb
mov
add
jle
mov
sbb
add
and
inc
pop
in
add
and
jg
movsb
outsl
push
pop
rcpps
pop
ds
in
lea
cmp
push
fiaddl
rclb
gs
enter
movsb
push
add
inc
xor
das
push
lret
jno
cltd
sub
rol
inc
ror
dec
xchg
add
outsl
mov
movsb
ret
icebp
push
cmp
lock
hlt
dec
fwait
xor
pop
mov
add
nop
enter
dec
sbb
ss
mov
and
xor
cmpl
xor
mov
pop
add
or
outsl
sbb
sub
pop
test
daa
lods
jae
jne
movsl
sbb
adc
test
je
je
pop
test
jns
mov
stos
and
xor
mov
or
std
and
push
inc
sub
or
pop
xor
in
lock
push
sub
test
fwait
out
testl
add
add
sbb
sub
in
imul
imul
jmp
add
and
jl
call
cmpb
test
xchg
pop
or
cmp
sub
mov
cmp
cmp
fstp
cmp
int3
inc
loope
xor
pop
sbbb
jmp
push
xor
pusha
jl
fsin
ret
in
movsb
and
add
mov
add
inc
inc
pcmpgtb
add
mov
push
pop
or
fdivrs
sbb
xchg
push
add
mov
in
or
ret
jecxz
cmc
hlt
adc
jecxz
shlb
add
add
stc
shr
clc
add
std
or
inc
nop
js
push
sbb
lahf
mov
mov
imul
loop
mov
rcl
mov
dec
pop
fnstcw
add
jno
jp
mov
hlt
add
das
gs
cmp
pusha
pop
mov
mov
jnp
xor
xchg
jns
add
add
dec
jmp
adc
mov
mov
es
adcl
lret
mov
add
pop
sarb
addr16
and
xor
mov
adc
inc
add
pop
cmpl
prefetch
test
cmp
lods
push
xchg
cmp
dec
push
insb
lds
insb
in
adc
adc
and
xor
cvtps2pi
fs
or
sti
into
outsl
pop
and
pop
ss
and
add
xchg
mov
or
sub
push
dec
add
es
inc
cmp
scas
sub
fmuls
add
adc
test
sub
or
mov
mov
mov
shrb
lds
jge
push
inc
xor
or
test
subl
dec
sbb
icebp
pop
mov
ja
pop
stc
addb
mov
dec
aam
insb
adc
xor
mov
inc
aad
dec
push
popa
movsl
icebp
in
rcl
in
jle
daa
mov
pop
sbb
mov
fs
daa
jbe
sub
out
sbbl
sbb
push
push
xor
pop
sbb
outsb
pop
dec
xchg
sub
sbb
sbb
scas
push
add
xor
mov
xchg
add
out
int3
sbb
adc
cmp
sbb
pop
scas
outsb
jbe
add
or
sbb
adc
pop
mov
sahf
mov
stos
sbb
inc
and
inc
rorb
in
cmp
bound
jmp
xchg
pusha
rcll
addb
adc
jno
cmc
cmp
mov
fadds
jne
jns
jns
fmull
out
mov
adc
jmp
adc
jl
sbb
bound
adc
xor
test
arpl
add
arpl
or
push
daa
mov
xor
mov
popa
jecxz
ret
popf
or
inc
enter
mov
mov
rclb
daa
imul
inc
punpcklbw
cmp
fldt
shll
inc
and
push
fldt
push
mov
pop
xchg
jnp
mov
scas
jne
outsb
ret
xchg
lds
xchg
jns
xor
pop
push
je
sub
dec
xor
mov
movb
pop
fildll
adc
mov
int3
mov
les
push
add
orl
xchg
inc
inc
adc
xor
dec
cmp
and
xor
ret
add
pusha
test
and
add
or
sub
adc
sbb
sub
mov
add
in
mov
mov
ja
or
jbe
jge
popa
sbb
adc
push
movups
add
mov
loopw
outsl
xchg
or
push
imul
sbb
imul
lods
pop
in
mov
adc
into
xchg
mov
pop
jmp
adcb
mov
daa
mov
fisttpl
arpl
pop
lahf
adc
rorb
add
sub
add
xor
orl
and
in
add
enter
add
adc
xlat
push
adc
repz
cmp
add
add
sbb
adc
add
into
data16
add
enter
push
pop
fldt
sbb
outsl
mov
xchg
dec
bt
or
lds
sub
cmp
jns
outsb
lock
push
xor
test
sbb
dec
sub
scas
mov
dec
stc
sbb
orl
inc
sub
sbb
bswap
add
sbb
inc
add
mov
pop
mov
lods
and
push
int3
push
ret
js
addr16
or
pop
aaa
xchg
add
adc
push
test
mov
pop
push
mov
adc
cmpsb
mov
cs
cmp
fst
add
ficoml
lea
daa
lret
js
fs
and
mov
pusha
and
movb
mov
pusha
js
add
insl
xor
aaa
scas
push
ret
jo
mov
dec
xchg
inc
jl
sarb
into
sbb
in
mov
fiadds
icebp
sbb
mov
push
dec
and
popa
or
pop
mov
mov
jle
mov
addr16
mov
push
ret
iret
mov
xchg
es
je
mov
xchg
and
dec
outsb
shl
lahf
subb
jg
iret
stc
sbb
inc
pop
fs
test
sub
inc
and
ret
push
jmp
add
icebp
inc
inc
add
add
insl
lods
sbb
mov
je
gs
cmp
pop
mov
and
pusha
mov
fwait
dec
imul
pop
inc
add
adc
cmp
lea
mulb
pop
sbb
sub
mov
dec
outsb
mov
xchg
cld
aaa
xor
inc
jns
push
pop
mov
and
pop
jb
rorb
out
movsl
test
shrb
les
pop
fcom
je
xchg
adc
pop
and
inc
xor
lods
and
push
add
or
fs
daa
mov
stc
pop
pop
pop
shrb
fwait
push
add
mov
imul
adc
dec
xor
push
sbb
sbb
push
rcr
scas
xor
and
add
iret
popa
mov
test
mov
es
mov
sub
add
cli
ljmp
add
leave
add
fmul
insl
loopne
and
lret
add
jmp
push
mov
std
enter
jno
bound
xchg
sahf
or
fnstcw
pop
bound
dec
outsb
ds
cmp
jp
sub
imul
mov
movsb
leave
fmuls
xchg
fwait
and
je
wbinvd
stos
pop
loope
test
sub
sub
cmovae
mov
in
data16
and
test
mov
repz
inc
fldt
push
mov
xor
cs
fabs
cmp
inc
mov
xchg
xor
or
jle
sub
ret
inc
xchg
mov
movsl
push
pop
jb
jns
add
subb
ss
movsb
sbb
jl
test
inc
aad
mov
mov
mov
std
push
xor
mov
scas
and
add
adc
xor
in
and
clc
xor
aaa
xchg
sub
and
sbb
mov
dec
sbbb
fldenv
sbb
ja
repnz
mov
mov
insb
jmp
inc
push
pop
xchg
iret
push
in
xchg
xchg
fidivs
sbb
int3
push
fisubrs
es
cmpsl
pop
imul
pop
adc
stos
jno
movsl
push
jmp
mov
idivl
lods
push
xor
sbb
aas
adc
mov
xor
loopne
adc
xchg
mov
xchg
mov
add
mov
hlt
and
cs
fdivrl
stos
cmpsl
sub
xchg
stc
out
push
xchg
sub
jnp
insl
in
gs
maskmovq
notl
mov
jmp
adc
adc
and
adc
ss
dec
adcb
lods
adc
ja
aad
jp
int3
lahf
sub
jnp
dec
inc
arpl
fcmovnbe
fwait
outsb
pop
sub
pop
sbb
sti
adc
pop
pop
lcall
je
pop
lcall
add
adc
test
addb
jne
sbb
xor
mov
mov
add
sbb
int
arpl
das
jecxz
or
mov
and
and
inc
sub
inc
pop
mov
out
cmpsb
push
dec
fdivrs
addr16
sbb
arpl
add
add
mov
addr16
mov
rorl
push
pop
xlat
js
in
xchg
int
dec
addr16
push
enter
mov
push
lcall
add
pop
dec
icebp
ds
or
cs
nop
push
rcrb
jmp
xorb
roll
or
sbbb
jl
cmpsl
sbb
pop
daa
dec
lock
sub
and
movsb
sub
lret
sbb
or
ffreep
outsb
daa
and
das
sbb
cmp
sub
push
sub
pop
popa
push
outsb
mov
shrl
in
adc
xor
or
aas
mov
mov
test
lret
in
jnp
dec
or
xsave
test
in
or
divb
gs
out
pop
xor
jecxz
popa
jmp
testb
xor
and
or
cs
cmp
mov
cmp
or
pop
sahf
data16
sbb
rcrb
push
mov
sub
inc
in
push
mov
outsl
pop
lock
cmp
dec
enter
rolb
add
adc
add
mov
jae
nop
lea
addb
nop
mov
arpl
jo
gs
shrb
cmp
ret
lock
pop
push
dec
sbb
dec
ja
add
movsl
dec
xchg
mov
add
mov
xor
push
std
dec
jbe
out
sbb
jno
xchg
sahf
mov
inc
sub
loopne
pop
dec
lea
fsubrs
or
xorl
lret
sub
mov
mov
or
data16
stos
shrb
aaa
and
sbb
xor
or
lods
movsb
push
xchg
push
pop
dec
jmp
es
mov
push
fldcw
roll
and
pop
test
inc
or
add
mov
cmp
mov
cltd
cmp
cld
sbb
iret
ret
in
sbb
insl
xchg
stos
test
inc
push
loopne
sbb
xor
ds
lods
push
ss
cmp
mov
lods
or
adc
mov
pop
xchg
pop
jo
rcrb
xor
lods
add
insb
sub
lods
and
xchg
stos
std
jecxz
jno
dec
or
call
xchg
mov
xor
ret
rorb
mov
xchg
pop
loope
cvttps2pi
xchg
jo
pop
dec
movsb
push
dec
test
cmpsb
mov
jecxz
sub
push
cltd
push
subb
aas
or
mov
stos
jp
add
imul
lahf
fs
test
ret
jno
push
movsl
sbb
adc
jmp
in
insb
dec
push
ljmp
add
add
outsl
jne
popa
ss
out
in
jmp
iret
fs
sbb
dec
jmp
test
je
fisttpl
loopne
push
or
pop
nop
push
lods
push
inc
mov
push
push
dec
add
or
daa
xchg
pop
mov
inc
gs
pop
and
push
mov
repz
cmp
popf
xlat
loop
adc
data16
fwait
mov
pop
or
push
sub
insl
dec
pusha
and
sub
or
es
fsubrs
push
push
outsl
dec
cmpsl
and
add
insl
xor
dec
push
cmp
inc
dec
test
ret
add
xchg
fsubs
push
ja
mov
fistpll
adc
cltd
xchg
inc
cmc
xor
inc
out
popa
std
pop
add
mov
or
adc
cld
lock
test
lea
add
rcr
sbb
ss
dec
adc
pop
pop
xrelease
jno
jg
es
fisttps
sub
adcl
xchg
push
movsl
pop
aad
arpl
lods
cmpb
adc
lods
jge
fs
lock
or
shrb
lea
mov
xchg
dec
cmp
inc
ja
js
inc
sbb
outsl
add
incl
lods
sub
mov
jns
mov
imul
in
jmp
jo
and
mov
xchg
fsts
aaa
addl
js
pop
cltd
xor
or
dec
and
and
ret
jbe
sbb
int3
add
in
push
rclb
jno
jo
inc
or
jb
sbb
pop
ss
ljmp
inc
mov
mov
aam
les
lock
into
push
in
cmpsl
icebp
xor
call
pop
cwtl
sbb
ss
mov
pop
adc
pop
cmp
xchg
push
pop
aam
into
rolb
mov
add
mov
add
lcall
adc
or
je
lods
stc
sbb
add
lock
fsubrs
test
clc
or
xchg
test
bndldx
sbb
cltd
sbb
loope
push
lea
sahf
pop
adc
decl
mov
and
iret
ret
loopne
out
lds
cmp
xchg
ret
cmp
or
in
or
andl
mov
jbe
jo
xor
pushf
sub
mov
push
adc
mov
mov
std
fisttpll
mov
in
mov
jle
scas
dec
movsl
imul
sub
xchg
add
ret
add
xchg
push
fsubl
xor
iret
or
cmp
jns
jge
pushf
push
xchg
mov
loopne
pusha
pop
add
sbb
push
mov
mov
cli
pop
dec
outsl
cmp
fisubrl
in
cmp
sti
les
in
adc
sub
int3
ss
mov
rclb
lret
lahf
xor
and
sbb
add
rorb
sub
and
jmpw
daa
stos
pushf
outsb
adc
adc
mov
add
add
loopne
les
cmpsl
popa
out
jo
mov
push
imul
aad
and
sub
xlat
mov
push
test
mov
or
shlb
sub
push
sub
lcall
iret
lock
sarb
adc
and
adc
inc
cmp
xor
fistl
es
pop
or
add
add
shlb
dec
dec
add
lea
repz
cwtl
mov
lcallw
adc
scas
mov
push
mov
pop
iret
jo
nop
pop
cmpsl
aad
or
dec
or
cmp
cld
mov
aam
pop
xchg
jmp
into
lock
xor
nop
mov
mov
lret
clc
pop
dec
dec
adc
sbb
pop
aaa
pop
adc
inc
or
test
jno
hlt
cmc
jg
movsl
xchg
add
pop
mov
loope
adc
fiadds
test
dec
inc
push
mov
and
add
add
inc
xchg
inc
add
add
and
sub
sub
inc
and
sub
ljmp
cmp
mov
sub
xor
add
sub
nop
lods
fbstp
push
aaa
sub
les
jo
or
subl
repz
sub
fldl
sub
push
mov
xchg
jge
fscale
add
dec
or
fsubs
add
ret
xchg
js
jo
dec
mov
arpl
imul
notl
jo
dec
mov
sbb
jge
push
pusha
mov
xchg
mov
leave
xchg
mov
jg
stos
sub
xor
adc
sub
mov
aam
mov
or
jno
mov
sub
inc
mov
lds
inc
sbb
les
mov
push
cmp
imul
scas
mov
add
aam
jp
jo
cmpsl
in
sub
mov
sub
inc
jecxz
mov
cmpsl
pop
ja
sarb
pop
test
pop
xchg
adc
in
cmp
sub
cmp
lods
lock
or
jnp
cmpsl
and
dec
xchg
push
outsb
mov
push
jecxz
das
ljmp
jns
mov
clc
jno
out
add
fisubs
popa
inc
pop
and
dec
add
aad
xchg
xor
mov
cmc
call
xor
test
mov
out
adc
dec
dec
mov
aaa
cltd
ja
pop
sub
mov
in
xor
push
loopne
dec
icebp
das
pop
jne
stos
or
dec
arpl
inc
mov
movb
fstpt
fst
lds
les
mov
push
push
icebp
test
xchg
fildl
adc
add
xlat
xchg
loope
add
int3
xchg
lods
add
das
imul
or
fs
fsubs
cwtl
sti
or
movsl
sbb
add
roll
push
xor
gs
add
mov
insb
pop
mov
outsl
mov
sub
scas
add
arpl
gs
and
fwait
insb
cmpsb
and
add
nop
push
xchg
lock
cltd
shrb
sub
cmp
lds
iret
shl
mov
data16
inc
jge
inc
das
mov
sbb
pop
mov
roll
and
dec
sub
mov
fnstenv
add
sbb
and
nop
test
pop
popa
sbb
sub
dec
pop
pop
lea
fnstcw
pop
dec
or
cmpsb
dec
mov
adc
sub
push
jns
fsubs
iret
and
outsl
jo
adcb
dec
push
ret
xor
push
jb
adc
les
test
add
enter
mov
mov
jmp
hlt
pop
jecxz
and
test
add
mov
ja
shll
pop
dec
add
push
xchg
inc
and
sbb
rcrl
push
cmpb
and
push
xchg
data16
mov
xorb
push
push
bound
sub
dec
movsl
arpl
add
shrl
push
mov
popa
add
cli
mov
mov
cltd
jnp
loop
xchg
push
pop
jmp
fldl
and
jg
icebp
dec
push
sbb
adc
xor
xor
cmp
lods
imul
xchg
sbb
rclb
inc
ljmp
ret
cmp
loop
push
mov
inc
add
adc
ficompl
nop
jmp
xlat
movsl
and
pusha
cltd
js
out
ret
mov
enter
lret
sbb
les
dec
js
push
fsubrs
add
sub
jo
nop
rclb
adc
sub
loope
arpl
push
daa
push
iret
cltd
nop
push
push
mov
mov
inc
cmp
nop
bound
dec
sub
lea
hlt
insl
imul
and
and
outsb
lock
push
shlb
das
xorl
add
outsb
and
mov
out
and
cmp
fs
lahf
test
pop
mov
or
orb
scas
dec
or
inc
fs
loop
rcrb
sbb
lcall
rcl
mov
jl
add
sub
icebp
push
std
insl
std
xchg
addr16
sub
mov
adc
xchg
movb
jmp
sarb
jp
out
iret
mov
dec
out
ret
pandn
push
add
adc
sbb
outsl
and
jno
test
pushl
xchg
dec
les
sbb
cmp
pop
and
xorl
xlat
jbe,pt
nop
adc
lret
imul
lret
add
cmp
subl
push
push
and
xchg
cmp
repnz
sub
movsl
dec
xchg
orl
push
das
aad
mov
sbb
sub
lock
rcrb
mov
mov
mov
push
sbb
mov
test
addl
dec
mov
cmp
arpl
pop
adc
lock
je
outsl
sahf
mov
int
push
add
xchg
and
cld
add
or
fists
movsb
out
push
orb
xchg
or
in
or
aad
push
subl
and
andb
mov
or
or
inc
jmp
xchg
jb
mov
pop
daa
mov
enter
loope
jge
popa
xlat
imul
add
jmp
mov
clc
sbb
bound
sub
jp
aas
aaa
and
ss
es
dec
jmp
movb
mov
in
cmpb
dec
sarl
daa
mov
stos
xorl
push
push
pushf
sub
insl
cs
dec
fisttps
mov
cmc
mov
mov
inc
jge
jmp
out
jne
xorb
ret
nop
xchg
xchg
ds
xor
xchg
and
pop
mov
cltd
loop
out
pop
mov
iret
lahf
cwtl
aaa
adcl
test
add
mov
xlat
xor
lock
push
push
std
lock
or
in
push
cmp
adc
stos
iret
adc
xchg
ret
gs
mov
pop
mov
cmc
push
ret
cmc
ds
mov
pop
adc
xor
into
out
xchg
loope
subb
mov
cmp
mov
imul
cmp
cmp
xchg
pop
test
loop
lods
or
enter
cwtl
dec
movsb
xor
pop
or
adc
mov
pop
push
add
pop
cmpsl
sarb
sbb
icebp
push
sub
int
stos
adc
xorl
pop
jo
sub
mov
cmp
ss
rclb
push
in
xor
sub
shrl
loop
sub
inc
dec
push
pop
icebp
movsb
test
or
inc
sbb
lret
notl
mov
mov
jno
movsl
loop
cmp
sbb
adc
bound
sbb
pop
rdpmc
mov
add
sbb
mov
and
add
fisttpll
cmp
scas
and
pusha
ret
push
rolb
cwtl
xchg
cmpsl
or
jno
and
dec
subl
adc
mov
pushf
xor
sbb
daa
xor
adc
pop
shll
and
add
rolb
mov
sahf
add
lahf
push
ja
outsl
mov
das
inc
inc
pop
clc
jnp
out
rcrb
dec
frstor
rcrl
adc
sub
je
xor
jo
and
pcmpeqw
nop
ret
jmp
cmp
jne
and
js
add
arpl
add
sub
mov
jmp
push
pop
lret
xor
cli
arpl
mov
jmp
idivb
sub
fildl
out
loop
sti
dec
and
sti
popa
dec
aas
addr16
les
loope
sub
xor
inc
or
and
add
out
mov
jmp
or
jnp
lods
and
sub
arpl
pop
shrb
sbb
fbstp
inc
les
and
les
movsl
js
popl
mov
das
push
pop
and
mov
daa
lea
scas
jo
mov
cmp
jbe
fists
push
pop
pop
or
jne
mov
addl
xor
xchg
shll
or
jno
add
stos
and
adc
cmp
stos
les
imul
rcl
out
sub
rclb
or
add
lea
ss
add
add
iret
and
movsl
dec
lods
adc
test
xor
pop
and
bound
jle
fidivrl
pop
out
mov
xchg
inc
mov
aaa
add
ss
mov
adc
xor
cmp
xor
or
enter
aas
dec
ret
jne
daa
cmpsl
iret
pop
dec
push
xor
push
sbb
jg
iret
in
pop
mov
es
fidivrl
push
outsl
jbe
shll
out
rcll
add
jmp
in
add
xchg
or
cmp
loop
mov
ljmp
add
inc
jbe
scas
or
mov
mov
mov
fbstp
pop
or
call
aam
dec
push
nop
xlat
mov
mov
shl
sbb
sbb
mov
push
jp
xchg
rolb
pushf
mov
pop
mov
inc
pop
push
outsb
movl
mov
icebp
or
sti
test
and
push
push
cmc
mov
out
xor
scas
mov
push
adc
std
mov
dec
imul
ret
and
shlb
pusha
mov
add
inc
iret
cmpsb
cltd
dec
sbb
subb
bound
into
sarb
leave
fcoms
add
daa
add
cmpsl
stos
push
push
sub
ret
movsl
addl
sub
pop
pusha
mov
fdiv
sub
js
enter
dec
movsb
mov
lock
je
adc
subb
cmpsl
mov
add
xchg
jno
in
jo
adc
loopne
insb
xchg
and
push
cmc
pop
test
dec
inc
insl
lea
cmp
mov
and
mov
mov
dec
add
inc
fmull
mov
adcl
push
lcall
xchg
aas
cmpsb
pop
cmp
dec
inc
push
dec
out
lret
pop
enter
jo
fcomp
mov
imul
sub
jge
shlb
push
sub
xchg
jmp
hlt
shlb
mov
les
rolb
or
inc
das
lcall
add
dec
adc
mov
shrb
lret
out
aas
leave
xor
jnp
lods
mov
shlb
hlt
sti
cmp
jnp
jae
aaa
push
sub
inc
testb
sti
es
push
int
ljmp
shl
dec
mov
or
mov
rcr
ss
cs
and
push
sub
jo
push
cmpsb
sbb
push
es
and
cli
mov
imul
movsb
iret
cltd
adc
loopne
push
push
adc
mov
adc
xor
and
jno
mov
xor
cmp
fimull
pop
push
cmpsl
fisubs
push
pop
loop
sub
test
inc
in
int
addr16
inc
add
popa
vmread
and
dec
xchg
dec
lahf
in
inc
movsb
stc
testl
mov
clc
popa
push
xchg
adc
clc
cvtps2pd
dec
sbb
es
cli
sub
loopne
mov
cmp
int3
jge
inc
sub
fisubrs
jnp
scas
das
loop
xchg
lock
and
test
iret
stc
push
push
and
xchg
mov
lock
cli
mov
out
mov
inc
shlb
dec
xchg
sbb
sti
movsb
mov
mov
add
mov
fs
xlat
mov
add
and
xor
sbb
cmp
nop
xchg
lods
sbb
add
or
xchg
xlat
add
insl
lea
mov
in
rclb
inc
testl
stos
cmp
rcrb
sbb
jae
or
add
cmpsl
xor
cmp
xor
cmp
aad
mul
iret
sbbl
divl
ss
and
mov
rep
mov
inc
ja
fcompl
hlt
jg
jno
je
push
inc
pop
arpl
mov
mov
mov
ret
adc
nop
scas
ja
dec
xor
movb
lret
stos
dec
daa
fisubrl
sti
push
push
fwait
aad
inc
lahf
shll
xchg
roll
pop
xchg
and
pop
jnp
sti
push
iret
and
mov
mul
push
scas
jae
inc
insb
test
lock
sbb
iret
mov
cmpsb
nop
inc
cmc
insb
movsb
push
adc
sbb
fs
sub
dec
cli
mov
xor
popa
dec
fistps
dec
add
loop
stos
or
sub
scas
push
sbb
pop
dec
and
or
add
dec
ror
pop
add
and
andb
xorb
xor
pop
adc
push
das
mov
push
sahf
dec
fwait
pop
xlat
xchg
inc
aas
sub
dec
push
dec
gs
push
in
lcall
mov
clc
and
mov
out
pop
add
sarl
enter
push
add
sbb
cmp
pushf
cmp
add
and
xlat
test
movl
cli
addr16
adcb
sbb
sub
ret
cwtl
lcall
inc
cmp
pop
psubd
rclb
sbb
mov
repnz
or
and
movsb
xor
or
ret
cmp
dec
pop
mov
mov
nop
lods
mov
push
leave
adc
or
lret
cmp
jbe
and
fadd
adc
int3
mov
fld
sub
push
inc
daa
add
jo
shrl
push
iret
xchg
pop
stc
mov
xor
test
add
lock
mov
adc
shl
sub
cmpsb
fisubs
sub
popa
sbb
loop
int3
cmp
sbb
ss
push
add
push
rol
shrb
int3
jge
mov
sbb
daa
addl
arpl
sub
lods
test
test
sbb
das
mov
pop
or
mov
jae
addr16
xor
and
xor
out
fimuls
vmovss
adc
out
mov
fsubrp
orb
pop
mov
rorl
adc
mov
dec
inc
push
jp
movsb
mull
imulb
out
or
mov
in
mov
orl
shr
imulb
mov
add
xchg
pusha
ja
push
push
and
repz
sahf
xor
or
sbb
pop
fnstcw
add
add
add
pop
lret
fisubl
inc
popa
sti
scas
jno
mov
dec
dec
and
mov
js
xor
fsub
mov
outsl
sahf
or
or
movsb
out
pop
add
dec
sti
sbb
mov
lahf
mov
outsb
jge
mov
inc
test
shrb
fcomps
test
add
cld
mov
das
aam
into
cmpb
jnp
mov
lret
lret
into
in
pusha
cmp
das
and
daa
mov
xchg
pop
mov
into
rclb
jbe
lahf
into
mov
cmp
test
scas
inc
shl
jmp
add
lods
inc
or
cltd
push
movsb
ror
xor
and
rcrb
sbb
ja
testl
pop
dec
xlat
pop
mov
or
jecxz
mov
sbb
sbb
ret
mov
inc
outsb
cmp
lods
lock
gs
xor
in
xor
xlat
pop
add
ss
shr
movsb
lahf
dec
outsl
scas
cmp
and
mov
add
add
mov
push
push
ds
mov
fiadds
rorl
add
pop
inc
mov
mov
mov
dec
outsl
sbb
shl
pusha
cmp
mov
jno
ja
rorl
jne
xchg
daa
rcr
fsubrs
add
aam
push
popf
loope
jp
add
stos
rcrl
pusha
rol
add
jmp
xor
ret
inc
mov
inc
aas
add
push
fildl
sbb
or
inc
data16
fimull
mov
aad
mov
lods
push
jecxz
sbb
sbbl
popf
add
push
and
dec
bound
xchg
xchg
add
ljmp
lahf
iret
add
out
imul
jmp
or
dec
cmpsl
into
xchg
jo
push
lods
pop
arpl
push
data16
sub
fcmovnb
or
xlat
xor
jl
int3
adc
test
lret
testb
sti
test
pop
idivl
movsl
fs
movsl
stos
mov
push
push
mov
out
cli
inc
jl
xchg
insl
enter
data16
adc
aaa
push
loopne
jo
ja
jle
sub
ljmp
imul
dec
or
mov
ret
sbb
insl
pop
inc
outsb
lahf
subb
mov
xchg
imul
sbb
gs
in
adc
jge
jnp
add
sarl
iret
dec
in
push
in
pop
fidivrl
xor
inc
cmp
arpl
test
mov
andl
scas
mov
sbb
and
or
mov
in
and
push
mov
scas
mov
mov
xchg
jp
push
loop
imul
adc
imul
jmp
sbb
ss
or
dec
cli
ljmp
add
add
jp
idivb
dec
jne
sbb
jg
call
cmp
push
test
xchg
push
xchg
fcmovbe
mov
add
popa
cmp
popa
clc
and
out
pop
sbbl
movsl
inc
rcr
cld
adc
or
jp
add
call
jp
shll
jl
adc
mov
push
into
fs
add
loopne
jbe
scas
pop
sub
daa
mov
push
push
pop
dec
jnp
add
pop
xchg
out
mov
test
lahf
xorl
out
pop
lods
xor
outsl
ret
repz
nop
or
xlat
ret
cs
repnz
out
jmp
rcr
ret
or
ds
popa
lcall
rcll
bound
iret
in
jb
xchg
cltd
fs
in
xchg
add
mov
fcmovne
or
sub
pop
xchg
pop
push
add
in
sub
fiadds
inc
xor
sbb
repnz
add
movsb
iret
pop
icebp
sbb
jno
cmc
jmp
xchg
add
jecxz
xchg
pop
mov
cmpl
mov
imul
dec
sbb
sub
jecxz
aam
roll
in
mov
add
pop
outsb
jl
pop
pcmpgtw
out
into
lret
inc
imul
imul
sbb
cltd
sbb
and
ds
push
mov
jb
cld
mov
cmpb
sti
push
data16
mov
aaa
push
leave
and
sqrtps
and
loop
inc
adcl
cmpsb
push
cmp
inc
dec
pop
sbb
cltd
jp
icebp
mov
fnstcw
in
stos
iret
mov
ficoms
push
add
aas
les
push
inc
jmp
jg
je
clc
imul
incl
insb
pop
cmp
fstl
jle
lcall
filds
push
mov
xchg
cwtl
aad
js
inc
add
sub
leave
lods
inc
or
xadd
cmp
and
movb
add
xlat
negl
into
js
jge
push
fisttpll
jbe
mov
pop
inc
adc
add
je
sub
lods
xlat
inc
jae
sbbl
call
cmp
add
xlat
into
sbb
push
jo
mov
or
mov
mov
jb
pusha
jmp
mov
add
movl
ljmp
add
xchg
js
in
aaa
aaa
jne
je
xchg
or
sub
out
sub
mov
jg
enter
and
scas
dec
xchg
dec
sar
enter
std
mov
jne
loope
imull
loop
fstl
fcoml
sbb
inc
shr
adcl
outsl
jno
pop
aas
cmp
add
and
ss
cmp
jg
jecxz
icebp
push
fmul
add
jnp
sbb
mov
pop
cli
sbb
and
mov
inc
pop
aaa
sbb
js
inc
pop
je
or
jno
pop
push
rcll
cmc
test
push
push
js
mov
pop
inc
sub
loope
mov
loop
test
or
ja
into
jmp
lods
roll
imul
lds
push
iret
je
ljmp
pop
aaa
jae
movsb
mov
out
cmp
mov
mov
aad
aam
lods
and
stc
sub
pop
cltd
movsl
add
cltd
rolb
mov
cmpsl
clc
cmp
into
push
push
pop
mov
fiadds
mov
cltd
sbbl
repnz
mov
mov
pop
leave
lret
mov
das
add
adc
scas
mov
mov
lods
ss
and
test
xchg
inc
jb
ret
ror
push
pop
cltd
xlat
fnstenv
loop
call
popa
scas
inc
inc
mov
in
jae
ret
sbb
je
xchg
fnstsw
in
lods
mov
sbb
or
movsb
xor
mov
out
int
add
mov
or
stos
add
push
jge
popf
shlb
dec
inc
jnp
mov
xchg
lret
xchg
sahf
mov
lods
lea
ds
add
add
aam
sub
ljmp
jecxz
test
enter
push
sbb
or
stos
mov
ret
sub
push
and
xchg
repnz
cli
inc
push
jae
movsb
rorl
lret
test
or
pmovmskb
rcrb
and
sub
mov
cmp
cwtl
push
mov
mov
jbe
xor
jmp
pop
push
xchg
xor
movsl
insb
lcall
push
pop
int
lock
js
shrb
adc
out
add
out
jmp
rcrb
int3
daa
fsubl
enter
push
mov
clc
into
sub
push
sarb
mov
mov
addb
insl
mov
loop
test
inc
mov
mov
pop
push
pop
pop
pop
or
cmp
into
push
insb
xlat
mov
movsl
push
out
shll
xor
ss
les
out
mov
addr16
xor
aaa
insb
and
sbb
fs
xor
mov
inc
mov
pop
clc
xchg
cmp
movsl
jmp
fildl
into
popf
add
ds
out
pusha
sbb
pop
out
shrl
loopne
test
sahf
mov
add
adc
pop
decl
cwtl
push
jle
push
add
js
arpl
arpl
cmp
inc
xor
pop
icebp
scas
sub
jno
ficomps
xorl
ljmp
jb
roll
adc
cmp
gs
call
sbb
imul
int3
jl
or
inc
pop
mov
std
adc
into
cmp
fs
fdivs
sub
out
movsl
movb
or
push
xchg
lcall
dec
popa
clc
xor
add
sub
fadd
sub
out
into
pop
push
mulb
pop
jo
mov
sbb
jb
add
hlt
pop
test
mov
jne
xchg
lods
in
ljmp
into
push
pop
lret
dec
jne
add
ret
das
dec
dec
sub
and
das
jge
je
in
mov
jnp
call
les
popf
or
push
sub
scas
mov
into
sbb
add
dec
jo
mov
clc
push
fistl
iret
push
and
sub
mov
repz
ds
sub
and
pushf
mov
xor
fsubrl
mov
pop
ret
jbe
push
xor
jns
loope
sub
push
fsub
call
aad
jl
mov
push
mov
mov
dec
xchg
cmpsl
xor
mov
jp
insb
mov
pop
xor
mov
mov
jecxz
in
fnsave
push
pop
stos
fwait
cs
jnp
cwtl
in
je
jl
inc
into
rclb
add
adcl
ljmp
add
mov
aaa
outsb
out
ss
mov
sahf
mov
movsl
mov
dec
cwtl
neg
negb
jnp
cmp
negl
flds
jo
add
inc
sub
mov
testb
cs
mov
xor
pop
lock
add
call
and
loopne
push
jnp
hlt
mov
mov
pop
stc
pop
ja
or
test
inc
cmpsb
rcrl
mov
inc
imul
xchg
jge
aaa
add
insl
nop
sbbl
xchg
jnp
movq
xchg
gs
jle
mov
js
xchg
push
mov
cmp
adc
aaa
xor
mov
xchg
push
iret
iret
jae
lods
push
mov
jp
dec
fisttpl
adc
repnz
rcll
jns
test
lret
fdivr
adc
inc
inc
inc
or
or
fildl
pop
neg
xor
out
lret
mov
and
imull
mov
sub
inc
add
dec
addl
ss
xchg
jmp
sub
fldl
aam
mov
mov
test
pop
adc
ficoml
adc
js
and
cmp
addr16
sub
sub
inc
icebp
sub
and
daa
xor
cmc
aaa
test
test
rorl
mull
scas
paddsb
bound
rcrl
mov
ret
ja
dec
pusha
push
imul
cmova
js
push
jmp
mov
lods
xor
sbb
and
int
sbb
sub
ds
shll
aas
int3
inc
iret
xor
mov
aaa
dec
pop
jmp
cmp
dec
ja
into
cmp
lods
jb
leave
ret
in
fadd
xlat
lahf
das
inc
add
lods
imul
mov
pop
lret
jge
mov
outsl
xlat
inc
ret
lcall
mov
outsb
subl
dec
fwait
gs
or
cmp
mov
mov
ss
pop
ret
push
dec
rol
cmp
cmp
icebp
movl
add
loopne
fsubr
inc
test
xchg
add
add
inc
sbb
testb
sbb
inc
push
cltd
stos
fnsave
dec
inc
sub
add
add
scas
adc
imul
and
aaa
mov
std
les
jecxz
adc
clc
ret
popa
mov
stos
sbb
xchg
neg
out
ret
fistpl
fldenv
filds
outsl
dec
and
nop
mov
mov
xor
lock
mov
ja
xor
iret
insl
int3
add
inc
add
fdivrl
inc
rcrl
fadds
negl
jge
push
loope
insl
adcb
jno
negb
push
inc
sbb
insl
mov
mov
and
xlat
repz
fucomip
inc
jl
add
fbld
shl
inc
dec
lds
test
push
push
mov
jne
out
push
mov
add
push
xchg
lds
fmul
push
xchg
into
ret
inc
ja
jecxz
fsubp
mov
sbb
les
dec
cmc
popa
lods
adc
add
addr16
pop
shrl
fdivs
xlat
pop
mov
jo
lret
xchg
jecxz
lods
pop
movl
out
xlat
insl
int
push
mov
jecxz
mov
movsl
xor
mov
or
addr16
loope
int
jae
inc
mov
inc
fdivs
fmuls
cli
xor
xor
popf
notl
pop
stc
jae
adcl
sub
rorl
insl
fcomi
or
js
xorl
xorb
jmp
inc
test
xchg
sbb
orb
pop
xor
dec
push
mov
xchg
arpl
xor
xor
pop
movsb
lahf
das
inc
or
sahf
cmpsl
mov
into
dec
add
or
xchg
xor
add
loopne
jmp
add
ret
or
jle
adc
pop
dec
push
add
add
out
xorb
adc
lahf
test
or
push
test
ja
add
adc
sbb
ss
into
mov
into
pop
call
jecxz
lods
xchg
aaa
inc
sbb
mov
fsts
cmp
mov
scas
xchg
bound
in
push
jge
int
pusha
and
inc
addb
pop
adc
pop
xchg
imulb
sbb
cmp
add
cmp
add
jp
sbb
push
jno
dec
js
in
out
fstpt
mov
outsb
mov
int
mov
dec
js
imul
xchg
fwait
add
mov
in
ljmp
test
loop
xchg
nop
pop
fwait
stc
inc
add
xchg
xchg
jecxz
pop
or
push
insb
dec
inc
pop
cmpsl
inc
jbe
fildl
pop
test
fisubrl
sarl
adc
pop
sbb
jbe
mov
int
loop
ret
mov
ds
adc
xchg
sbb
outsb
and
loope
push
pop
adc
test
jnp
add
iret
mul
scas
adc
jg
xor
cmp
loope
out
in
pop
rcrb
das
dec
or
ret
mov
jbe
jo
pop
lahf
xchg
fstpt
add
int3
cmc
rclb
xlat
push
aaa
add
movsl
jnp
cmp
mov
push
mov
xor
gs
cmp
or
out
pop
std
popa
arpl
imul
std
pop
add
pop
bound
cmpsl
stc
add
sbb
sub
pop
lock
sbb
fwait
sahf
or
popa
inc
mov
or
xor
js
inc
xchg
dec
test
xchg
ja
or
cltd
loope
sarb
mov
mov
or
mov
add
jmp
jnp
sahf
dec
scas
push
mov
repz
pop
xchg
sbb
cmp
pop
cmpsb
xlat
push
mov
mov
and
add
xchg
jb
mov
cmp
lock
or
mov
add
mov
ja
jno
aaa
lods
sbb
xor
iret
aad
call
cmp
xorl
xchg
dec
sbb
cmpsb
or
ret
out
or
cltd
sbb
js
adc
dec
sbb
adcl
cmpsl
iret
fidivs
xor
mov
inc
fimull
ficomps
into
cltd
adc
adc
add
inc
mov
sti
sub
xchg
cmp
dec
sahf
lock
pushf
dec
jnp
into
cmp
int3
int3
xor
lret
mov
inc
leave
stos
lahf
fcmovu
sbb
pusha
dec
jmp
dec
mov
movsl
jb
loope
mov
lea
stc
insl
stos
arpl
insw
shlb
cmpb
into
addr16
dec
cltd
sbbb
mov
aas
test
xchg
bound
pusha
add
sub
js
bound
sti
orl
ja
dec
nop
sarl
insl
push
out
xchg
and
mov
or
dec
adc
loope
pop
les
ret
mov
push
outsb
or
sbb
mov
inc
and
dec
mov
scas
out
outsb
ja
mov
cwtl
popa
test
lea
repz
sbb
push
jmp
adc
sbb
cltd
dec
hlt
adc
std
aad
cld
aaa
dec
push
mov
movsl
and
adc
sbb
dec
pop
iret
dec
rolb
pop
hlt
cld
push
mov
mov
xchg
insl
jne
cltd
jbe
xchg
aaa
test
mov
lods
aam
divps
pop
pop
fwait
cmp
sti
imull
ficompl
inc
push
dec
lods
cmp
mov
clc
add
push
nop
sarl
and
jae
mov
adc
in
out
inc
cld
das
jbe
pushf
pusha
sbb
or
mov
aaa
test
mov
push
shl
sar
push
inc
ss
outsl
lahf
outsl
add
out
mov
sub
popa
pop
sar
sti
in
add
cmp
pop
adcl
test
mov
out
or
fsts
iret
lahf
jecxz
add
testb
or
sub
mov
jns
in
sub
xchg
sub
sbb
das
mov
sbb
js
or
jge
shrb
mov
je
dec
cmp
scas
xchg
std
das
adc
outsl
and
mov
test
jo
mov
xor
jbe
cmpsl
rorb
xchg
lea
or
das
mov
push
into
mov
mov
shlb
xor
dec
test
jmp
rorl
fisubs
cmp
aaa
ret
std
loopne
dec
addr16
ja
cltd
mov
inc
mov
ljmp
fisubrl
xchg
insl
pop
dec
adc
scas
aaa
inc
dec
pop
insb
lret
pop
andl
mov
or
daa
push
rorl
sahf
out
jno
rorb
lcall
int
out
in
std
or
mov
push
inc
push
and
mov
push
mov
out
negl
aas
lret
sahf
and
shr
jge
cmp
sub
push
insl
jge
out
jg
rorl
or
test
pop
mov
arpl
mov
or
cmp
and
pop
jp
add
push
xor
stos
daa
pop
mov
sti
scas
or
or
mov
inc
add
mov
mov
cmp
fsubl
or
push
mov
push
das
addr16
pop
adc
or
add
outsb
outsb
das
cmp
add
fisubs
gs
lret
movsl
pop
or
pop
fnsave
sub
aad
add
push
jne
or
sbbb
xor
or
daa
imul
adc
mov
pop
push
adc
in
or
add
inc
stc
push
daa
psrlq
test
mov
cmpsb
orl
push
cmpsb
jmp
cmpsb
and
cmp
push
cmp
test
scas
inc
or
divl
scas
inc
int
icebp
scas
and
jbe
xlat
int
popf
sbb
scas
loope
add
pop
mull
pop
or
cmc
pop
push
jmp
or
add
notl
inc
and
leave
add
loopne
adc
push
pop
push
pop
jmp
add
inc
add
xor
daa
popa
cmp
fisttpll
add
jge
or
push
mov
lods
jb
mov
pop
inc
stos
inc
jmp
icebp
stc
mov
mov
out
jge
or
lods
mov
xchg
sub
xor
cmpsl
mov
movsl
mov
cmpsl
cwtl
pop
or
xor
xor
push
mov
sbb
mov
or
jmp
ret
adc
or
ret
out
or
or
sub
scas
inc
adc
xchg
mov
jne
sub
mov
xor
xor
jmp
adc
sbb
rcrb
and
pushl
daa
mov
or
cmp
pop
and
xchg
ss
jne
sub
add
push
into
cmp
sub
aas
fisubs
xor
mov
loopne
lcall
xchg
mov
xor
add
sub
mov
mov
lds
push
sub
pop
or
xor
fwait
mov
pop
imul
nop
ror
imul
cwtl
das
clc
pushf
push
dec
adc
mov
mov
insb
and
out
mov
ret
jnp
mov
inc
add
inc
popa
xlat
add
mov
mov
mov
push
pop
sbb
jne
hlt
dec
aas
xor
addl
pop
clc
xor
add
nop
sarb
jle
mov
inc
push
das
dec
jne
mov
in
js
nop
fs
mov
jl
add
mov
jbe
pop
scas
pusha
sbbb
cmp
ret
xor
incb
dec
test
cmpb
cli
lock
mov
aad
xor
sub
add
lret
add
cmp
mov
loope
adcb
sbb
ret
mov
in
jnp
andl
push
cli
ss
faddl
stos
pop
jae
imul
jecxz
test
movsb
subb
jle
pop
jo
and
cli
mov
mov
jns
cmc
sub
roll
add
cltd
insb
subb
scas
clc
jp
cmpsb
test
sbb
dec
adc
je
imulb
aam
dec
enter
add
push
lret
add
mov
fsubs
mov
scas
mov
dec
mov
push
dec
push
lods
ss
adc
aam
mov
jnp
push
xchg
pushf
cmpsb
mov
movsl
imul
push
sti
clc
push
dec
call
push
pop
cld
adc
iret
mov
xchg
add
and
push
mov
in
not
jle
add
jo
fwait
mov
mov
or
js
add
cmp
push
outsl
fdivrs
sbb
add
ds
dec
pop
pusha
in
or
pop
xchg
nop
test
mov
repnz
dec
les
inc
js
into
adc
inc
lahf
out
cmp
xorb
mov
mull
je
in
shl
cmp
add
jns
or
or
inc
push
pop
lock
sub
ficompl
and
push
adc
int
icebp
pop
loope
sbb
ds
add
aaa
or
add
rcrb
out
lret
out
add
addb
andb
add
adc
inc
pushf
pop
pop
xchg
xor
scas
mov
mov
pushf
and
in
xchg
stos
cltd
add
and
jp
xor
mov
mov
lods
out
xchg
xchg
adc
xchg
cmp
dec
mov
mov
mov
or
cmpsb
icebp
add
stos
test
sbb
cwtl
push
mov
data16
push
inc
leave
mov
sbb
nop
push
jle
ss
faddl
dec
inc
inc
movsb
adc
jno
jb
xchg
pusha
fstl
psrld
aas
cmpsb
insl
sub
xchg
ficoms
mov
jne
dec
pop
or
push
sub
cmc
je
jge
sbb
js
mov
loope
sub
xor
xor
push
mov
jbe
push
aas
mov
xchg
mull
out
adc
add
mov
cmp
mov
cmpsb
loope
movsb
ss
push
out
shr
mov
data16
sub
dec
fs
pop
aas
fldt
test
push
ucomiss
outsb
dec
dec
push
xor
adc
jge
xor
and
jnp
stos
push
insl
ss
sub
je
leave
test
dec
in
add
push
add
pop
lcall
xor
cmp
adc
dec
mov
inc
push
pushf
mov
sub
sbb
cmpsb
shrb
aas
je
jne
fisubrs
jbe
jle
add
pop
mov
arpl
mov
out
add
sbb
stos
jg
lcall
arpl
pop
and
pop
fdivl
repnz
fwait
movsl
xor
sti
int
xchg
loop
out
js
pop
fdivrs
lret
movsl
sub
sub
ds
loopne
xchg
adc
pop
scas
dec
mov
fidivs
enter
and
add
rcrb
mov
jp
add
fisubrs
sub
pop
lds
or
push
xchg
mov
outsb
xor
stos
in
pop
andb
mov
in
mov
loop
sbb
mov
lock
inc
mov
lret
rcll
fcomip
ret
jle
into
test
lods
xchg
dec
cs
cwtl
lods
ss
push
cmp
lock
sub
movsb
mov
js
jbe
movsb
jle
dec
or
sti
or
or
pop
adc
scas
shr
out
inc
shlb
popf
cmp
adc
aaa
xchg
roll
hlt
out
sub
cmp
adc
test
arpl
adc
mov
inc
xor
pop
insl
inc
jnp
pop
mov
dec
push
mov
cmp
dec
push
insl
lret
inc
xor
out
shlb
cmp
mov
sbb
inc
xchg
or
stos
insb
mov
sub
fimull
std
dec
scas
sub
insb
stc
aam
adc
gs
loop,pt
push
fucom
push
mov
sbb
xchg
lret
pop
mov
repnz
out
xchg
sub
ss
or
repnz
pop
push
add
scas
adc
cwtl
add
lds
js
loopne
inc
add
scas
out
fidivrs
and
sarl
sahf
jmp
data16
jno
loope
sub
push
mov
push
xchg
jle
pop
mov
pop
xchg
int
pop
mov
add
mov
lock
xchg
adc
outsb
mov
jno
fcomps
shlb
cmp
mov
push
out
and
and
jmp
pop
lock
js
movsb
fiadds
out
mov
repz
jnp
jl
in
daa
cmp
add
add
call
pushf
outsl
jbe
lock
cli
push
add
mov
testb
mov
add
test
shlb
xchg
xor
adc
inc
inc
sub
ja
sbb
js
or
inc
inc
mov
jnp
daa
sub
jp
sbb
lret
cmp
or
negb
or
test
cltd
test
jp
mov
aad
adc
movsb
sub
add
xchg
test
loope
stos
adc
add
repnz
test
js
jmp
mov
lret
inc
push
stos
movsb
inc
cmp
js
popa
idivl
outsb
movsb
mov
loopne
rolb
aam
sbb
shr
scas
enter
js,pn
adc
shl
push
pop
jb
scas
fcomp
ret
or
add
mov
lcall
incl
sbb
jmp
cmp
mov
sbb
mov
xor
jo
ljmp
push
sbb
xor
mov
push
mov
js
sbb
lods
int3
loopne
pop
and
push
shrb
inc
mov
push
pop
cmpsl
push
push
push
pop
xchg
mov
insb
test
mov
js
lods
decb
cli
cmp
inc
fdivrs
js
push
jne
insl
loop
bound
nop
mov
arpl
dec
xor
mov
mov
mov
outsl
cli
mov
jg
movsb
push
test
dec
test
aad
insb
dec
lret
in
test
fcom
and
aas
inc
movsb
ss
call
aaa
jne
or
sbb
outsb
pop
add
push
xor
out
push
pusha
pushw
jnp
xor
hlt
adc
in
push
loop
and
cs
pop
cmp
ds
ret
xchg
pop
lret
pcmpeqd
bswap
lret
ljmp
jecxz
cli
aaa
cmpl
lcall
andb
jecxz
pop
cmp
fstpl
push
adc
cmp
jecxz
sbb
sarl
xchg
shl
or
fldl
add
pop
bound
dec
push
jle
mov
mov
push
xor
mov
stos
test
xor
lods
lods
es
hlt
icebp
inc
inc
cmc
rcrb
cmp
inc
pop
in
hlt
jb
push
decb
sbb
jmp
add
cmp
push
push
ret
es
pop
mov
hlt
sbb
fiadds
icebp
in
add
pop
pop
mov
insb
mov
ljmp
call
cmp
data16
mov
rclb
outsl
ret
xor
outsb
dec
xchg
adc
push
in
adc
jb
in
jge
fisttps
pop
repz
sbb
lock
clc
pop
adc
push
fbstp
mov
sub
inc
sub
popa
and
jmp
add
xor
fcomps
mov
mov
xchg
xor
outsb
cmpb
fwait
sub
mov
nop
sbb
xor
test
movsb
mov
and
dec
sbb
shl
adc
jp
pop
xor
in
cmp
mov
iret
and
xor
cmpsb
xor
or
mov
mov
add
mov
mov
mov
idivb
mov
mov
cmp
or
hlt
fwait
mov
bound
jne
push
pop
movsb
jge
pop
in
pop
aam
mov
mov
cwtl
or
push
pop
movlps
dec
add
add
xchg
ret
push
pop
dec
clc
cs
fisttpl
mov
push
cs
inc
ret
inc
sahf
push
bound
loopne
xchg
xor
imulb
add
cmc
fdivs
imull
insb
inc
push
ss
cmp
dec
ds
out
mov
les
sbb
loopne
add
cmp
push
cld
push
mov
and
arpl
xor
xorb
js
adc
mov
xor
push
pop
adc
ficompl
out
cltd
jbe
loopne
fmull
lods
mov
and
fdiv
ret
aam
push
jle
cmp
scas
adc
subl
fucomi
aaa
cs
jecxz
mov
testl
push
or
cmp
sbb
mov
in
push
rol
in
cmp
xchg
fbld
jno
pop
sub
clc
mov
ja
add
cmp
call
pusha
adc
pop
mov
jl
pop
push
lock
add
rorb
loop
mov
mov
mov
ljmp
daa
push
insb
pop
cmp
es
mov
cmp
stos
in
inc
ret
std
aaa
or
cli
insl
pop
xlat
mov
cmp
ljmp
cmp
add
fcmovnbe
push
clc
sbb
mov
sub
shl
pop
out
sbb
aam
leave
clc
leave
add
xor
mov
adc
pushf
ljmp
jo
xor
mov
pop
aad
and
add
xor
push
pop
ret
push
or
xor
aam
pusha
or
push
jae
faddl
or
pop
push
cld
push
pop
or
mov
dec
loope
shlb
xchg
rcrl
fwait
cmp
xchg
lods
or
out
cmp
clc
loope
popf
adc
lret
movsl
mov
mov
fwait
ss
xor
xchg
aaa
fimull
jno
mov
mov
fucomp
es
jmp
sub
cli
push
fdiv
lock
mov
lock
cwtl
cmpsl
pop
loope
mov
testb
add
jl
inc
jle
cld
mov
addl
test
push
sti
pusha
cmp
push
sbb
pop
or
enter
int3
ret
push
sbb
cli
inc
mov
xor
ljmp
and
adc
scas
std
mov
add
enter
mov
and
pop
xchg
ds
ss
push
ret
mov
mov
and
loopne
mov
insb
or
xchg
adc
inc
mov
cmpsl
xchg
pop
and
shrb
adc
add
adc
imul
adc
xor
mov
mov
push
cmp
cmp
and
leave
mov
push
fwait
and
mov
arpl
mov
ss
mov
add
xchg
jbe
mov
xor
pop
cmpsb
int3
bound
mov
fisttpl
stc
or
scas
mov
mov
push
jae
scas
ret
in
inc
mov
es
test
adc
loop
or
mov
dec
push
faddl
cmp
sbb
jge
jne
or
add
xchg
xchg
push
push
mov
cmp
cmpb
gs
dec
cmp
add
jno
and
add
movb
test
lcall
leave
add
insl
je
push
ret
jecxz
ret
cmp
movl
in
sbb
ficoml
in
cmp
mov
stc
sahf
xchg
lods
std
dec
pop
je
xchg
rorb
pop
int3
adc
fisubl
popa
movsl
in
jmp
mov
mul
lahf
adc
fisubrs
ficoml
in
jl
cmpsb
scas
mov
mov
cmc
mov
enter
jne
adc
mov
rcrb
lea
push
fdivs
aam
xlat
adc
cmp
pushfw
loope
out
shl
mov
xchg
xor
jmp
mov
insl
es
jne
aam
mov
or
xchg
cld
and
cmp
sbb
cmpb
test
shr
adc
les
mov
fwait
push
adc
pop
aam
lahf
je
scas
add
stc
cmp
xor
in
mov
mov
jmp
out
cmpsl
adc
addb
lret
xchg
std
push
pop
mov
jo
sahf
sub
je
jbe
and
dec
push
cmp
jne
mov
rcl
in
add
ror
shlb
orl
bnd
out
in
push
cli
mov
lock
mov
fadds
ret
push
js
fsubs
mov
cli
out
mov
in
jbe
pop
mov
dec
fidivl
push
cld
ljmp
mov
inc
mov
add
pop
cmc
add
outsl
push
mulps
push
mov
sbb
pop
mov
xchg
std
es
or
jbe
fistpl
sar
cmp
mov
add
test
imul
ret
inc
rolb
jp
dec
shl
xor
push
add
test
shll
xchg
ret
xor
outsb
or
sbb
or
jo
sahf
movl
test
cmp
sti
ficoml
in
and
adc
xchg
pop
scas
inc
xchg
adc
mov
mov
mov
push
stos
mov
out
lret
cmc
inc
jmp
andb
stos
out
sbb
add
mov
add
push
lods
pop
xchg
daa
pop
aaa
sbb
dec
cmp
jno
stos
and
mov
roll
fmuls
dec
pop
ret
push
and
lret
rcrb
aad
jmp
scas
push
jge
pop
notb
popl
push
scas
xchg
xchg
loopne
inc
andl
cmc
mov
jmp
or
aas
in
push
in
jecxz
add
jg
sbb
es
out
rorb
pop
insb
lea
shlb
jl
inc
fstpt
out
cmp
lea
ss
daa
xchg
adc
cmpsb
add
lret
test
push
pop
mov
jo
dec
push
jne
mov
xchg
sub
ds
sub
cli
leave
cmpsb
gs
data16
xchg
std
iret
rcrl
jp
jns
mov
lret
inc
pop
mov
stos
mov
lods
sub
sub
call
jp
cmp
dec
xor
mov
mov
idiv
jbe
das
in
stos
mov
xorl
pop
popa
mov
jne
sbb
dec
js
test
enter
pop
lret
out
sub
lods
mov
pop
add
jp
lock
xor
int3
mov
or
and
mov
or
movsl
sbb
push
data16
ljmp
sub
imul
sub
add
icebp
outsb
mov
mov
cmp
jns
inc
clc
cli
sbb
xor
add
jno
mov
not
sub
and
dec
daa
loope
push
push
and
in
rclb
adc
out
es
mov
sbb
outsb
popf
test
cli
add
jbe
jo
mov
xorl
shll
cmp
fdivr
mov
filds
sub
xor
les
std
lahf
sub
shrl
push
or
outsb
xchg
testl
inc
lds
mov
mov
test
popa
stos
inc
add
xorl
lcall
insl
shlb
dec
cwtl
xchg
xlat
hlt
imul
test
mov
sub
and
inc
and
out
cltd
flds
jmp
fstpt
push
inc
sbb
cmp
xchg
out
dec
je
cwtl
sbbl
jp
adc
mov
imulb
and
scas
inc
or
xchg
and
rcll
and
dec
in
call
xchg
adc
push
add
or
and
sub
add
xor
mulb
adc
sub
imul
roll
test
pusha
jl
imul
pop
imul
and
adc
and
ds
mov
push
jb
mov
adc
and
cmp
in
pop
inc
aam
mov
or
adc
js
push
add
cmp
xor
mov
pop
cmp
insl
and
add
jns
into
fisubl
mov
inc
mov
ds
call
in
mov
sbb
xor
or
push
cmc
sbb
icebp
cwtl
add
test
data16
fstps
or
push
or
cmc
inc
xorb
scas
mov
mov
in
cli
fldl
pop
mov
dec
jb
xor
adc
js
outsl
ret
jle
or
pop
cmp
add
mov
pop
cli
mov
jl
loop
pop
mov
mov
xlat
or
dec
adc
rorl
sarb
dec
jb
ret
add
push
mov
rcl
inc
mov
mov
fisubrl
jp
inc
aaa
pop
xor
xchg
xchg
pusha
jmp
xchg
push
xchg
lods
js
rolb
jp
add
xchg
aas
mov
shlb
orb
and
sbb
pop
mov
xor
mov
adc
aad
cmp
add
into
cmp
fwait
jne
fldt
stos
xor
imul
mov
jmp
outsl
add
cmp
sahf
add
cwtl
jne
out
inc
dec
sbb
imul
add
loop
pop
mov
test
add
dec
add
hlt
mov
mov
jbe
outsb
inc
or
xlat
cli
mov
mov
popl
aas
gs
or
fwait
dec
icebp
dec
mov
dec
mov
jne
jl
mov
sub
call
es
js
addl
cltd
out
mov
dec
dec
mov
add
jge
add
jp
repz
xlat
aaa
out
add
push
lahf
aam
aam
bound
mov
mov
add
ljmp
pop
dec
fmuls
fwait
inc
sub
js
enter
fildll
xor
xor
jbe
push
jmp
ja
jb
daa
aas
out
and
lcall
dec
xor
pushf
out
movsl
mov
add
clc
cli
jl
inc
add
add
loope
aaa
sti
adcb
xor
sbb
cmp
jl
in
aas
je
jge
or
lret
mov
ret
or
mov
mov
pop
pop
setne
cs
cwtl
subb
or
xchg
and
cmp
loope
add
xor
enter
mov
and
ljmp
sub
outsb
test
imul
insb
xchg
arpl
decl
adc
scas
int
or
jl
xchg
ds
repz
adc
bound
pushf
xor
jb
xor
add
fdivl
push
mov
lret
fadds
fucomi
call
fmull
daa
aas
test
or
mov
push
adcb
mov
aas
out
arpl
in
mov
loop
jge
sbb
dec
movsb
xchg
push
ja
not
inc
sbb
inc
xchg
sub
mov
lods
or
aas
lea
push
and
cmp
rcrb
jle
fisubl
mov
in
cmpl
das
fcmovnu
pop
sahf
daa
xor
mov
push
rorl
xor
popa
jno
je
aam
jle
in
clc
rolb
dec
or
fwait
xchg
adcl
test
mov
das
add
inc
out
repz
or
pusha
vmovaps
xchg
mov
dec
das
and
sbb
fs
mov
rcll
pop
and
loop
mov
cmp
xchg
jp
data16
mov
rclb
test
mov
mov
push
subb
cld
mov
and
xchg
sbb
stos
mov
andb
daa
and
and
mov
adcl
sbb
jnp
and
sbb
cmpsl
ret
shrl
push
and
fwait
sbb
ds
ds
cmp
pop
scas
pop
ss
inc
dec
mov
cs
push
mull
dec
cli
xorl
imul
lret
out
daa
and
and
mov
and
push
imul
adc
pop
cmp
or
sub
cwtl
cld
or
mov
xor
mov
jl
jge
sub
mov
pop
lret
sbb
jne
xor
shrb
stc
push
mov
xor
dec
js
cmp
jnp
push
into
mov
sbb
aam
xchg
mov
lods
sub
sbb
mov
std
stos
sub
cmp
mov
sbb
lods
inc
mov
ja
push
xor
and
inc
int
cmp
or
ds
fnclex
popa
fs
sub
int
xchg
xchg
cld
adc
out
mov
mov
add
movsb
push
sub
js
insl
push
mov
ds
and
ljmp
lcall
push
xor
mov
and
xor
or
lods
and
or
pop
imul
call
loopne
or
into
popf
cmpsb
sub
mov
push
cs
sbb
out
loopne
sub
aam
jae
idivb
jmp
lret
stos
bound
faddp
mov
inc
lret
stos
jb
fcoml
jl
xchg
aaa
and
push
daa
adc
sahf
dec
pop
addl
insb
test
xor
sub
mov
insb
je
out
test
adc
or
divl
mov
insb
sti
dec
jb
push
cmc
std
inc
cmpsb
testb
cmp
outsb
dec
push
shll
das
aad
hlt
adc
push
mov
lret
mov
or
sbb
das
sbb
add
into
push
rorb
in
ret
or
and
inc
mov
mov
or
mov
add
or
fwait
mov
int
adc
or
lcall
vminps
mov
or
pop
pop
repnz
cmp
cltd
in
in
or
lock
inc
repnz
jb
dec
add
mov
push
lods
push
lds
xor
cmp
jbe
out
stos
jecxz
insl
pop
movsl
sub
jecxz
sbb
sub
push
arpl
adc
shll
mov
push
pop
xor
inc
ss
in
out
fcmovnu
orl
xchg
pop
mov
sbb
xchg
mov
lds
nop
cmp
cld
movsb
jle
setbe
mov
rcrb
inc
enter
les
rorl
test
lcall
in
push
clc
out
daa
push
fsubrl
fsubrs
mov
mov
ss
das
xchg
les
adc
rcl
aas
je
pop
cltd
add
faddp
add
movsl
push
or
bnd
sarb
or
or
ret
enter
pop
gs
inc
call
outsb
fs
push
icebp
inc
loope
pop
sbb
push
dec
mov
lock
xchg
mov
jecxz
test
pop
mov
outsb
push
fcomps
push
xchg
pop
jno
mov
sbb
sub
push
das
lock
or
rolb
aaa
call
xchg
xchg
mov
bound
mov
int
push
fistpl
rorb
xor
push
in
mov
call
push
dec
jle
shr
dec
xchg
aad
mov
cs
sbb
add
dec
mov
shll
add
jg
decl
out
sar
es
aaa
pop
add
jecxz
int
loope
cli
nop
push
pop
ds
xor
hlt
push
push
jo
mov
xor
push
arpl
pop
sbb
ret
pop
insl
outsl
pop
lods
cli
and
test
adc
inc
test
jl
in
lock
adc
mov
mov
lret
outsb
sahf
fsub
sbbb
push
icebp
lret
shlb
mulb
inc
mov
or
outsl
xchg
push
std
sub
test
cmpb
lret
mov
xor
and
push
jge
sub
pop
cmpb
shrb
fwait
lods
cmp
fistps
lcall
scas
mov
and
cmpsb
inc
pop
cmp
xchg
add
sub
mov
push
and
cmpsl
int
adc
jl
mov
sub
outsl
mov
xchg
pushf
cmp
stos
into
mov
cwtl
les
movsb
mov
xchg
add
mov
inc
sti
ljmp
dec
rcll
push
mov
repnz
insb
inc
mov
sub
mov
cld
in
js
inc
insb
sub
add
cs
add
pop
mov
ret
fnstenv
test
int3
sbb
int
popa
mov
jo
inc
cmp
decb
sbb
negb
je
mov
inc
daa
fisubs
push
pop
sub
sbb
je
jl
rclb
outsb
out
ret
arpl
subb
loopne
and
fmuls
jl
out
add
aas
pop
pop
and
subl
rcll
xchg
imul
or
mov
add
push
jge
xchg
dec
adc
jbe
lock
inc
mov
js
mov
pop
or
loop
mov
mov
pop
sbb
subl
ret
movsb
call
sub
cmpb
push
clc
jmp
xchg
dec
mov
in
ret
inc
in
lcall
jl
jl
add
or
push
dec
mov
mov
icebp
or
add
imul
stos
lcall
inc
clc
xor
mov
pop
out
mov
fisubl
push
push
mov
outsb
cmp
das
push
sub
pop
mov
sbb
jle
mov
ret
xchg
xchg
or
lahf
and
notl
inc
mov
cmp
pop
xlat
push
out
mov
push
add
or
fists
or
sahf
out
lods
jnp
add
or
cmp
fildll
sub
add
or
fwait
sbb
daa
rorb
adc
outsl
ds
sti
daa
ja
jnp
cmp
push
dec
iret
mov
inc
cmpsl
push
cmpb
mov
or
mov
jne
mov
jmp
repz
sub
mov
stos
repz
add
add
adc
sti
cmpl
adc
sbb
xchg
outsl
ja
jg
inc
dec
arpl
in
mov
mov
or
or
push
aaa
add
dec
movsl
mov
add
aaa
sti
mov
mov
fwait
or
xorb
and
out
jne
cmovbe
or
stos
jl
scas
cs
sub
mov
out
jo,pn
aaa
repz
or
fs
push
insb
movsl
mov
adc
cli
sbb
add
into
inc
sbb
and
push
or
or
mov
xor
xor
or
sbb
push
daa
arpl
jg
leave
or
cmp
lahf
mulb
lods
out
jg
or
pop
xlat
or
or
aas
or
adc
or
outsl
popf
mov
or
mov
pop
out
dec
sub
cmp
jmp
incl
or
sti
lods
fisttpl
inc
pop
or
push
xchg
jae
pop
imull
or
xchg
fstl
call
add
lret
jns
loope
and
and
lret
push
or
mov
stos
test
or
or
arpl
or
push
fistps
xor
mov
and
sarb
popf
jg
or
scas
mov
mov
sti
das
fisttps
aas
pop
leave
or
cmp
mov
mov
xlat
std
mov
sbb
and
fidivrs
add
popa
daa
add
lret
lock
pop
orl
dec
pop
cmp
cmp
cmpsl
mov
xchg
jecxz
sti
mov
jne
rorl
sbb
sub
add
cmp
or
and
addr16
inc
or
aaa
dec
sbb
push
push
cs
cmp
test
sti
sub
lret
xor
pop
aaa
or
ss
inc
lcall
stos
daa
mov
pop
mov
xchg
and
fwait
and
arpl
or
das
sti
int
xchg
push
inc
cli
pushf
adc
outsb
sbb
jnp
pop
cmp
and
lods
insl
sbb
aaa
div
test
adc
adc
adc
xchg
lret
data16
adc
inc
jnp
push
cmpsl
mov
push
adc
jle
in
mov
adc
adc
ja
jo
or
in
sbb
popf
roll
adc
push
or
xlat
cmp
pop
add
pop
adc
jbe
jnp
adcl
dec
into
adc
cmp
sbb
mov
ret
or
push
jo
cmpsl
adc
out
push
ds
or
xor
and
adc
fisttps
cmc
imul
imul
popf
jl
scas
mov
mov
scas
jnp
xchg
cmp
inc
adc
jnp
xor
sub
fcomip
cmp
ja
xor
dec
pop
add
or
xchg
jae
mov
ret
sub
pop
pop
lea
push
xchg
push
add
pop
push
xchg
add
push
outsl
sbb
cmp
push
gs
daa
lret
xor
filds
data16
adc
leave
insb
outsl
aas
ja
or
stc
xor
xchg
sub
jecxz
repz
out
inc
sub
sub
jmp
xchg
or
shlb
or
add
and
fadds
cmp
nop
stc
xlat
jne
or
push
sbb
xchg
xchg
or
jbe
add
and
jne
push
jo
out
and
je
cmp
cmpsb
test
leave
gs
jbe
or
je
fdiv
adc
int3
lcall
test
fisttpll
in
or
push
and
in
je
fmul
fiaddl
xor
data16
repnz
sub
xchg
mov
cltd
and
add
add
sub
imul
pop
jmp
out
das
arpl
popa
pop
xor
add
cmpl
fsub
jl
loope
fwait
data16
pop
or
addr16
sbb
or
lea
sbb
or
or
jge
mov
out
push
aas
mov
shrb
sub
mov
ljmp
jp
push
inc
and
aas
je
push
dec
cmp
decl
cmc
mov
mov
mov
pop
or
lods
ret
rcr
add
enter
xor
or
or
testb
cmp
mov
scas
or
sti
fdivrl
add
add
out
sti
jne
adc
jge
push
mov
cli
mov
push
lods
mov
insb
jbe
jge
jb
sub
pop
mov
jns
testl
cmp
ljmp
add
pop
inc
sbbb
mov
cwtl
adc
adc
insb
es
cmc
into
sub
add
inc
cmpsb
sub
xchg
add
sub
fdivs
sbb
popf
mov
data16
cmp
imul
leave
test
sbb
in
popa
xchg
push
sbb
jno
inc
lods
imulb
mov
frstor
test
inc
idivl
insl
cs
jp
pop
xor
lcall
xor
shlb
lds
scas
xchg
mov
xchg
popf
cmp
sub
mov
or
sub
flds
sarl
add
or
mov
xor
inc
or
pop
aas
or
lea
loope
in
lock
fisubs
test
iret
dec
dec
xor
mov
pop
push
sub
add
mov
jecxz
mov
add
add
scas
xchg
in
jle
mov
mov
pop
add
loopne
mov
nop
lret
sub
push
mov
add
push
sbb
adc
or
fdivr
xchg
xor
movsb
cmp
adc
fdivs
xlat
lods
rolb
into
cltd
jmp
sbb
fsubrs
sbb
rcrb
ret
jb
in
fisubs
add
inc
adc
mov
psrlw
inc
mov
adc
jmp
xchg
mov
test
bound
cmp
push
jecxz
bound
lods
stos
cmp
movsl
sub
inc
aaa
mov
dec
popa
mov
ljmp
jo
aaa
stos
jo
aaa
pop
pop
jnp
cmpsb
and
ds
inc
outsb
adcl
add
stos
fnsave
jl
xlat
xchg
gs
les
mov
pop
call
jno
mov
test
jo
cs
outsl
gs
outsb
or
loopne
notb
es
pop
fwait
cmpsb
inc
lods
callw
pusha
lahf
add
test
rcrl
mov
sbb
and
sub
pop
cmp
outsb
or
loop
jnp
jecxz
ss
insb
xor
scas
pop
ret
fldt
adc
inc
rcrb
xorb
or
jmp
xchg
jae
cwtl
pop
mov
add
sub
shll
or
mov
ret
cmpsl
and
imul
adc
mov
and
jg
outsl
add
jne
stos
and
mov
popa
jo
sub
and
outsl
sub
daa
fldl
lock
fwait
gs
data16
in
loop
sbb
xchg
sub
pop
jbe
adc
mov
xor
test
dec
push
insb
lods
in
add
mov
push
aaa
or
aas
js
mov
xor
pop
fbld
adc
movsb
xor
adc
xor
pusha
sbb
jne
jnp
ja
sbb
push
jns
fs
cmc
insb
js
fcomps
mov
das
add
mov
mov
stos
add
cmp
add
add
xchg
pxor
xchg
stos
xchg
sub
push
sarl
xchg
or
lock
outsl
mov
sti
push
daa
sbbb
fstpl
ret
cmpsl
mov
lret
mov
xchg
outsl
fbstp
inc
add
aaa
faddp
stos
ja
dec
adc
cltd
dec
xor
cmp
insb
stos
mov
leave
jne
fimuls
push
xchg
cmpsl
les
jno
les
cmp
and
xchg
rcl
pavgw
aaa
add
pop
jge
mov
int3
mov
pop
xor
mov
jns
and
and
xchg
daa
and
fwait
sarl
arpl
adc
adc
sub
lret
lock
sub
pop
sub
insw
cli
imul
aas
sbb
pop
mov
mov
add
pop
daa
fldl
or
mov
jb
lods
fisttpll
or
ja
out
mov
imul
add
dec
movsl
push
sbb
jnp
roll
das
sbb
cmpb
outsl
and
insb
dec
cmp
mov
popa
pop
push
push
xchg
xor
cs
adc
inc
dec
pop
inc
add
cmp
jne
call
out
mov
enter
mov
sub
sbb
pop
lock
popf
adc
and
fldl
xchg
ja
scas
and
cli
adc
call
sbb
jae
push
insl
add
fistl
bound
xor
push
daa
push
fcoml
lock
push
xchg
jae
movsb
les
data16
xor
pop
push
loope
pop
popa
pusha
mov
gs
outsl
insb
pop
adcl
mov
inc
scas
pop
les
movsl
pop
push
xorb
mov
pop
jecxz
insb
jne
sbb
roll
mov
push
xchg
adc
or
insl
sub
lret
mov
xchg
sub
or
ret
pop
inc
lret
mov
testb
rcll
ja
xor
daa
jl
mov
jnp
cmp
sbb
mov
sbb
cmp
and
push
dec
mov
add
and
mov
insl
pop
sbb
sub
xor
daa
repz
cmpsl
adc
sub
or
popf
mov
or
std
pop
daa
mov
inc
ss
fucomp
jmp
xor
mov
jmp
or
sbb
jp,pt
sbb
jp
in
int3
mov
push
imul
cmp
adc
ja
ds
imul
add
jmp
mov
mov
jg
aaa
and
fsubr
and
std
push
xchg
xor
sub
loope
enter
and
ret
mov
lahf
imul
pop
insl
sbb
mov
dec
dec
cmp
imul
cs
dec
add
mov
mov
ja
fldt
mov
pop
pop
imul
bound
outsl
popf
outsl
sub
stos
fisubrl
jecxz
les
addl
push
xor
lahf
sbb
add
add
mov
hlt
add
lea
mov
pop
adc
arpl
lock
icebp
out
leave
jae
mov
scas
inc
out
xlat
pusha
es
in
clc
ret
push
adc
sub
and
arpl
push
test
pop
sub
xorb
sbb
add
pop
shlb
jnp
iret
subl
xlat
fisubl
inc
and
mov
jo
cmp
xchg
scas
insb
pop
stos
rorb
mov
jne
push
outsl
addr16
roll
pop
mov
or
adc
testl
xchg
mov
mov
loopne
inc
xlat
sub
popf
and
or
addl
iret
adc
mov
push
sub
jno
xrelease
scas
mov
rcl
adc
sbb
push
xchg
pop
xchg
mov
pop
jbe
aaa
ret
popa
dec
or
inc
xchg
add
loope
add
das
mov
mov
insl
mov
flds
into
mov
sbb
jmp
cld
jbe
adc
fbld
sbb
or
xor
push
call
iret
xchg
in
push
and
mov
mov
je
in
fcom
inc
jae
cmc
adc
and
sbb
adc
adcl
rorb
scas
mov
mov
inc
fdivrs
aas
out
outsl
in
vmwrite
loope
xor
or
jl
push
fwait
daa
mov
daa
mov
dec
pop
ss
iret
pcmpeqb
mov
out
icebp
mov
cmp
gs
out
scas
aad
jg
subb
dec
fldl
xor
jmp
out
fiadds
jg
mov
subb
and
aam
xchg
pop
dec
mov
out
je
test
insb
push
fsubrl
pop
adc
pop
adc
mov
sub
sub
cmp
xchg
rcrl
jne
lcall
adc
jne
jmp
inc
imul
je
insl
pop
inc
mov
movsl
out
sbb
jg
jp
mov
jae
mov
sub
imul
xchg
out
rcll
fwait
test
inc
jp
fcmovb
mov
add
outsb
mov
cltd
rol
adc
pop
lret
imul
lds
sub
jg
insb
and
and
in
je
cltd
nop
mov
jae
cmpb
jmp
pop
add
lods
xchg
imul
cmp
xchg
imul
sub
cmpb
sub
and
ret
inc
mov
fimuls
insl
addl
ret
pusha
pushf
add
dec
mov
pop
and
dec
int
ja
jno
add
ja
lcall
sbb
mov
inc
sahf
mov
and
imull
or
shr
es
scas
scas
test
mov
mov
mov
lock
cld
xor
adc
dec
and
js
jo
xchg
and
and
pop
and
and
outsl
adc
addr16
dec
ficompl
mov
or
xorl
or
call
aaa
jne
jecxz
stos
push
movsl
aad
inc
push
mov
in
jae
pop
jle
inc
mov
xor
in
and
or
pop
out
mov
add
lock
fst
in
stos
nop
push
mov
sbb
std
mov
xchg
pop
jecxz
leave
sbb
lahf
mov
cmp
xlat
xor
and
jno
push
or
xchg
cmpsl
rorl
mov
icebp
jnp
lahf
icebp
mov
dec
cmp
jns
inc
dec
add
out
ret
test
mov
lea
inc
pop
sub
orb
or
and
idivl
pop
mov
jne
popf
arpl
out
or
ret
jo
stc
mov
js
lds
jnp
arpl
sbb
jle
cmp
imul
jae
cmp
xchg
sar
add
out
insl
adc
fwait
pop
lea
ret
fnstcw
jmp
test
or
and
mov
ja
inc
add
fnsave
adc
mov
inc
daa
pop
in
lret
fcoml
je
or
xor
pop
shr
push
mov
gs
xlat
sti
and
ret
jns
js
inc
adc
rorl
jo
out
cs
adc
and
shrl
and
int3
cmp
fsubs
inc
or
pop
xor
or
dec
push
leave
dec
ljmp
xor
std
add
mov
ja
mov
jg
out
sti
ja
pop
movsl
xor
dec
pop
dec
and
js
fldl
pop
cmpsl
sbb
jg
scas
sub
xor
sub
test
pop
xor
inc
cltd
inc
loope
shrb
xor
getsec
jl
inc
or
test
cmp
and
lret
add
mov
and
outsb
lds
dec
das
in
or
xchg
xor
mov
fwait
pushf
xchg
jb
push
mov
movsl
jl
and
jl
add
or
rcrb
add
es
loop
orl
arpl
inc
in
add
rclb
and
and
sbb
jl
push
add
testl
and
xchg
rolb
insb
scas
in
pop
and
lahf
mul
mov
out
sub
nop
sub
aas
jnp
mov
loopne
test
dec
ret
sub
add
test
add
loope
sbb
jb
and
jbe
inc
fldt
and
pop
and
add
mov
mov
sbb
pop
cmc
mov
das
sbb
popa
outsl
roll
and
mov
add
cmp
push
push
add
cmp
adc
cmp
scas
jb
mov
jnp
imul
add
das
mov
dec
mov
mov
mov
bound
jp
test
sti
push
jl
shl
lahf
and
popf
out
es
pop
mov
test
es
adc
and
xor
inc
shll
loop
xor
sbb
or
fsubs
addl
mov
sbb
adc
sbb
add
jp
xchg
mov
push
mov
pop
add
sbb
fsubs
inc
or
mov
fimuls
xchg
orl
dec
movsb
adc
adc
scas
mov
aad
add
mov
sbb
dec
aaa
jns
push
mov
fstl
mov
jae
lds
push
mov
inc
loopne
dec
loope
push
loopne
dec
xor
add
add
in
shr
pop
je
stos
loope
adcl
inc
stc
jge
call
scas
fwait
mov
loop
popa
mov
xchg
push
dec
js
or
mov
std
jmp
mov
mov
ret
aaa
adc
or
pop
push
movsb
sti
mov
cltd
pop
repz
in
popf
sti
sbb
out
ror
enter
mov
cmp
mov
fcoms
mov
sbb
adc
movsl
sti
sbb
das
orb
jo
sub
sbb
push
shrl
fmul
jb
shll
inc
insl
sub
jne
out
sub
and
adc
inc
and
fwait
mov
sbb
data16
xlat
and
mov
jmp
addr16
test
hlt
outsl
inc
arpl
and
mov
or
sbb
das
in
das
inc
pushf
insb
sbb
clc
xchg
sub
fwait
ljmp
iret
and
push
xor
rcrl
sub
sub
in
lcall
or
je
int3
inc
in
movsb
pop
rolb
inc
rorl
push
mov
and
jne
lods
jp
push
xchg
inc
xchg
mov
lods
mov
xlat
pop
inc
xorb
insl
xchg
and
cltd
mov
aas
mov
cmc
pop
cmpsl
xchg
adc
cmc
fwait
inc
push
push
cs
xchg
inc
xchg
mov
mov
sbb
jbe
push
mov
mov
xchg
jle
inc
rcll
dec
add
ss
cmp
sbb
pop
lea
ja
mov
fstpt
test
std
aas
sub
jg
movsl
fimull
and
je
sbb
inc
inc
pop
in
sbb
xor
mov
sub
mov
pop
sub
push
adc
and
movsl
xchg
or
aaa
mov
out
inc
loop
or
mov
aas
inc
xchg
mov
inc
push
mov
push
jnp
out
arpl
inc
orl
scas
ja
mov
push
out
mov
xchg
ficoml
sub
dec
test
in
adcb
adc
fistpll
inc
outsl
call
out
stc
clc
nop
pusha
rolb
jo
sbb
sti
add
ret
sbb
lret
adc
rcrb
scas
fldcw
dec
jo
dec
add
insl
xlat
and
jmp
adc
outsl
or
cmp
add
popa
or
mov
sub
sbb
pop
mov
push
out
scas
addr16
loop
pop
mov
inc
shrb
mov
push
out
out
sarl
inc
stos
lods
push
mov
sub
lea
adc
pop
ja
mov
adc
fistl
lret
push
mov
pop
sub
xor
mov
inc
pop
pop
es
mov
and
outsb
ret
in
add
pop
dec
fstps
das
ret
sbb
dec
push
xchg
and
cmp
bnd
dec
add
inc
cmp
in
jno
ret
adc
sub
pop
aas
sub
and
and
pop
frstor
inc
test
shrl
add
cmpsb
push
imul
ret
stos
mov
pop
inc
sbb
mov
xor
push
pop
adc
lods
jecxz
sub
add
cmc
frstor
test
aam
fwait
scas
sub
xchg
inc
push
lods
push
scas
sbb
popa
ja
push
sub
pop
cmp
sbb
mov
aas
push
sub
les
mov
out
sub
das
sbb
sbb
icebp
cli
inc
cmp
adc
fsts
nop
popa
rolb
cmp
std
inc
push
rol
xor
test
dec
sbb
inc
and
or
outsb
outsl
fidivrl
jge
mov
aaa
movsl
fwait
pop
cmpsb
dec
adc
mov
sbb
sbbl
shlb
add
pop
in
dec
movl
xlat
je
mov
sti
add
mov
inc
jbe
test
and
cmpsb
jne
cmp
das
sub
sub
shrl
xchg
movl
or
inc
pop
or
or
pusha
lea
push
jge
out
add
and
shrl
leave
xor
jbe
jnp
das
jae
in
test
dec
push
or
dec
or
shll
pop
aaa
and
pop
jne
addl
mov
sub
push
fwait
out
mov
cmc
sti
decl
push
inc
loopne
xlat
inc
jo
jno
add
mov
add
cmp
add
add
aaa
add
mov
pop
jp
push
roll
sub
add
xchg
gs
sahf
sbb
sbb
dec
sbb
movsb
outsl
add
and
jl
dec
fs
cmp
sbb
aaa
shll
inc
add
inc
inc
out
jb
jo
or
adc
mov
or
ljmp
jno
pop
mov
mov
sbb
mov
test
cmc
sbb
outsb
xor
dec
pop
dec
adc
mov
or
in
ja
fwait
pop
ja
lahf
call
add
in
imul
test
test
aaa
pop
or
mov
sbb
sbb
xchg
cmp
es
cmpl
in
xchg
cmp
mulb
aaa
pop
sbb
cs
loopne
or
ss
inc
js
xchg
jg
jge
sub
add
inc
or
jmp
jne
fcompl
mov
in
sub
cmp
dec
pop
nop
out
push
movsl
xchg
sbb
sahf
cmp
lds
das
push
push
and
add
mov
aaa
jecxz
xchg
lret
pop
aaa
xlat
dec
pop
shrl
shll
mov
add
out
adc
push
pop
int
sbb
xchg
jbe
add
ja
test
arpl
ss
pop
and
fildl
pop
adc
inc
sub
arpl
dec
lds
shll
or
push
sub
jae
popf
pop
add
pop
sub
pushf
mov
inc
clc
das
es
lea
imul
scas
repnz
pop
adc
mov
fdivl
jne
bound
sub
cmpsl
fiadds
orl
sbb
movsl
xlat
mov
fbld
dec
pop
cmp
lea
popf
pop
ret
jbe
xor
ss
punpckhwd
jno
mov
push
mov
sbb
add
ss
xor
inc
jge
jns
lret
dec
adc
jb
rcl
lea
xor
xor
sub
ljmp
in
inc
xchg
jnp
pop
sub
std
xor
sub
xor
jno
add
xlat
int
ja
das
and
sarb
imul
ss
jnp
or
mov
insl
daa
jp
negb
xchg
add
scas
sbb
scas
or
shlb
jo
popa
add
and
imul
subb
adc
jo
ret
cli
xor
into
popf
in
shl
shlb
pop
loopne
loope
xor
sub
jnp
push
xor
in
cmp
xchg
add
jbe
imul
xor
sbb
sbb
lret
outsb
cmp
lahf
imul
imul
daa
xchg
xchg
mov
dec
push
imul
xchg
sub
cmp
clc
movsl
mov
mov
xlat
adc
repz
mov
lahf
jmp
adc
xorl
pop
or
popf
and
pop
xor
les
out
xchg
stc
sub
test
sbb
lds
je
sar
or
xchg
dec
mov
inc
mov
aad
mov
sti
xlat
shrb
push
imul
xorb
xor
mov
test
jae
jno
xor
xchg
pop
cmp
push
sbb
rorb
repz
pushf
push
sub
push
pop
adc
xchg
pusha
movl
cmc
ret
pop
dec
inc
push
or
push
call
cmp
xchg
pop
test
cmp
mov
cmovno
cmpsl
cmpsl
test
mov
jb
das
sbb
inc
dec
xor
shlb
push
mov
push
pop
inc
movsl
jecxz
xor
or
xchg
pop
xchg
lock
xor
nop
sbb
out
sbb
dec
or
sub
mov
les
sarl
fistps
aaa
test
fldenv
xor
fisttps
xor
mov
shrb
push
or
stos
mov
popa
outsl
adc
lods
loop
xchg
xor
lods
xchg
shll
jmp
leave
and
jmp
jnp
dec
call
les
push
xor
je
rcll
sub
xor
jle
inc
and
push
push
lds
cmp
lods
sahf
sub
aaa
adc
push
and
filds
push
call
je
outsl
pop
mov
mov
push
mov
fdivl
loopne,pt
repz
fcmovnb
imul
flds
mov
popa
mov
cmpsb
inc
gs
mov
or
mov
sbb
and
nop
and
xor
addl
sbb
lods
mov
inc
adc
dec
or
dec
push
add
enter
push
pop
aaa
dec
inc
in
notl
mov
loope
call
rcrl
or
sub
push
decl
outsl
pop
push
dec
push
add
fisttpll
popf
or
cmp
or
sbb
test
inc
push
stc
mov
jno
lods
das
inc
ret
dec
inc
sub
xor
out
stos
movsb
dec
or
loope
out
inc
sub
data16
lods
jb
movsl
std
or
mov
dec
pop
gs
sub
inc
inc
ljmp
incb
add
pop
aad
sub
adc
btc
inc
dec
or
or
loope
imul
lahf
jge
push
xor
or
pop
cmp
pop
mov
pop
das
push
psubw
out
imull
add
testl
or
add
loope
ret
in
cmp
ret
xchg
sub
jmp
das
ja
int
scas
icebp
add
dec
ja
ss
or
mov
stos
mov
inc
ja
daa
mov
sti
mov
cmp
sub
pop
and
pop
and
leave
pop
in
or
repz
pavgw
cmp
sbb
popa
pop
dec
test
fbstp
jge
dec
push
pop
cmpsl
repz
mov
scas
addl
js
paddusb
push
js
sub
and
lret
and
test
dec
imul
and
data16
int
daa
mov
jmp
cmp
outsl
scas
adc
pop
imul
push
jge
jmp
pop
mull
scas
jb
inc
push
cmp
inc
inc
push
dec
and
mov
imul
es
scas
push
arpl
jp
test
dec
dec
add
inc
imul
ret
in
sbb
jge
add
add
inc
clc
and
adcb
in
outsb
scas
or
iret
shll
pop
orb
xor
or
inc
scas
push
dec
inc
mov
sti
inc
inc
push
inc
push
xchg
xor
push
inc
orb
iret
mov
inc
out
push
add
mov
or
push
js
push
xor
data16
mov
push
push
adc
jae
push
inc
inc
nop
jg
mov
daa
push
add
dec
gs
push
inc
jae
fdivp
sti
jo
inc
inc
fs
inc
push
bound
lock
push
aam
xor
aam
bound
inc
and
inc
pusha
cs
mov
cmp
xchg
inc
add
mov
inc
sub
rcrl
pop
push
push
mov
test
andb
push
push
push
pop
into
cltd
loop
adc
sbb
aaa
inc
imul
jo
jno
je
jl
daa
clc
push
add
movnti
push
push
test
orb
mov
dec
push
pop
xchg
fmuls
outsl
mov
fcoms
push
iret
popa
or
pop
jae
pusha
xchg
mov
pop
jnp
pop
out
push
push
sbb
into
push
add
ja
negl
sub
and
mov
hlt
push
push
mov
je
add
dec
mov
sub
cs
mov
outsb
push
gs
fwait
mov
jne
pushf
inc
gs
dec
subb
sub
push
test
int
ja,pt
push
adc
push
outsb
fldl
data16
les
imul
ret
mov
adc
jge
daa
addr16
mov
push
ret
inc
lcall
es
in
dec
push
out
mov
subb
pop
push
jnp
mov
mov
dec
push
pop
mov
or
das
test
inc
dec
out
add
push
push
or
in
mov
pop
imul
adc
inc
rclb
add
and
fcompl
xchg
cmp
je
sub
sbb
push
cmp
jmp
push
mov
fwait
cwtl
bound
test
ja
out
xor
fimuls
pop
and
dec
sub
push
push
dec
and
cmp
jb
xchg
xchg
or
jno
and
je
jno
lock
push
and
pop
dec
or
loop
js
into
push
cmp
jno
fnstcw
cmp
lret
sub
insb
cmp
scas
or
cs
es
push
pop
shl
imul
das
add
xchg
mulb
lds
lahf
push
fcmovnb
pushf
insb
arpl
xchg
fs
dec
or
daa
mulb
or
dec
adc
imul
inc
je
mov
mov
sub
xor
mov
sbb
or
daa
fisubl
push
loopne
popf
cli
push
call
aad
lock
dec
inc
xchg
dec
insb
data16
clc
sub
inc
fs
push
jae
add
mov
sbb
push
stos
ret
mov
inc
and
jl
sbb
fwait
dec
int3
xchg
add
hlt
pop
push
int
fdivl
inc
dec
push
push
jbe
arpl
inc
push
addr16
jo
dec
inc
out
sti
push
pop
xchg
lods
cmp
jbe
xchg
sbb
bnd
and
pushf
mov
insl
jecxz
out
arpl
sbb
in
push
outsl
mov
out
inc
and
mov
cmp
gs
jl
arpl
inc
mov
imulb
enter
aad
adc
inc
xor
outsb
sub
call
jle
jge
inc
add
inc
addl
call
or
aaa
add
data16
mov
imul
test
sti
jo
lods
dec
addr16
insb
in
xor
jb
ljmp
lods
inc
shr
mov
in
push
and
fnstenv
clc
cmp
or
jno
inc
outsb
or
sarl
sbb
js
addr16
sub
rolb
aam
repnz
mov
out
scas
push
add
mov
xchg
call
les
outsb
add
sbb
pop
loopne
ret
push
fsubs
mov
js
jecxz
jecxz
popa
dec
ret
lret
fxch
mov
or
hlt
addr16
sbb
out
add
outsb
ds
cmove
sbbl
test
mov
aad
mov
adc
cmp
cli
repnz
cmp
or
scas
cli
push
push
adc
push
shll
add
and
add
xor
in
or
pop
sbb
ljmp
lcall
push
pop
icebp
out
sbb
das
fdivrp
mov
or
sti
loopne
dec
sub
ret
add
daa
pop
add
addr16
and
or
roll
cmp
and
lea
pop
push
xor
sbb
or
jb
push
or
sbb
inc
ja
jge
jmp
push
cs
sti
imul
jg
sbb
add
sar
push
cmp
icebp
jo
cmp
sbb
cmp
adc
mov
jmp
inc
add
mov
and
imul
xchg
jmp
add
add
lcall
mov
push
sti
dec
stc
add
mov
sti
std
sti
xchg
and
push
push
push
insb
inc
cmp
repnz
add
fdivs
jecxz
or
jmp
add
je
sti
pmaxsw
sbb
outsb
clc
inc
sbb
loope
loope
in
xchg
pusha
mov
dec
sahf
push
fs
xlat
inc
clc
bound
arpl
sbb
lret
inc
pop
repz
arpl
in
int
or
shlb
jecxz
pop
inc
retw
dec
lea
jbe
xchg
or
dec
cmp
fadds
rclb
pop
outsl
aaa
cmp
dec
loop
push
popf
mov
lcall
add
inc
cmp
push
xor
push
mov
idivl
gs
fadds
or
push
and
pop
test
push
push
insb
into
js
js
cmp
rol
cs
loopne
or
dec
rcrb
outsl
mov
cmp
addl
stos
cs
pop
subl
adc
and
push
addr16
mov
js
sbb
and
or
pusha
push
xchg
mov
das
fwait
sub
arpl
adc
cmp
add
arpl
arpl
js
jp
jecxz
fidivs
lds
pop
lods
ret
aas
pusha
cmp
jne
pusha
cmp
subb
mov
add
sarl
fsubl
testb
inc
cmpsb
pop
mov
pop
pusha
xchg
adc
lods
pop
jno
sbb
movb
inc
mul
or
dec
jge
add
mov
mov
jmp
shll
and
add
and
dec
xor
xorb
lock
sub
xchg
jl
add
imul
das
mov
daa
out
dec
mov
arpl
cmpsb
sub
aam
add
push
sbb
ret
adc
mov
xor
xchg
imul
add
cmc
push
movsb
sbbb
adc
mov
testl
jge
les
cmp
test
pop
popl
add
pop
dec
test
fadds
adc
sub
cmp
repz
pop
bound
jl
add
push
add
inc
jne
inc
mov
fisttpl
sub
mov
pusha
adc
jnp
test
add
pop
lea
jb
push
bound
dec
xchg
sbb
js
or
adc
pop
push
arpl
loope
add
dec
loope
jb
jo
rcr
or
outsb
add
out
adc
pop
lret
loope
or
sbb
std
dec
push
or
mov
pushf
icebp
cmp
lret
rcrl
dec
dec
jno
cmp
ja
ja
jbe
les
add
stc
dec
repnz
add
mov
pusha
xor
repz
in
in
add
pop
xchg
jmp
hlt
loopne
sbb
jne
cmpsb
addr16
jb
into
cmp
pop
nop
scas
test
mov
cmc
jo
or
addr16
cmp
cltd
js
imul
push
cwtl
xchg
clc
mov
add
pop
sbb
sbb
dec
jns
adc
ja
and
cmc
jecxz
loop
outsb
push
inc
in
or
rorl
jg
sbb
arpl
inc
adc
jcxz
inc
int3
ja
cmp
xorb
add
in
ret
and
fstpt
inc
jbe
iret
pop
or
push
bound
jne
jo
inc
ja
cmpsb
sub
pop
pop
idiv
pop
loopne
mov
pop
dec
xchg
sbb
dec
xor
push
pop
aam
push
sbb
push
push
jne
inc
lret
test
add
cs
inc
pop
inc
lods
inc
lock
sbb
mov
scas
bound
bound
ret
arpl
imul
test
lea
movb
je
call
inc
adc
icebp
xor
mov
sub
xor
lods
jmp
sbb
inc
cmpsl
xor
scas
stos
jle
sbb
or
inc
aas
add
ret
or
pop
mov
inc
pop
icebp
pop
les
rolb
sub
addr16
jae
push
cs
jg
cltd
add
daa
push
xor
pop
cmp
dec
subl
xor
jno
lea
push
pop
and
icebp
push
push
jle
lea
sarb
mov
pop
sub
ret
repnz
faddl
lret
hlt
dec
cmp
fiaddl
inc
push
roll
or
mov
aad
sbb
outsl
sbb
out
add
jmp
ja
je
push
add
push
js
test
sbb
js
lods
sarb
inc
inc
addl
add
add
sub
jns
ja
out
call
jge
inc
pop
popa
aam
mov
push
fsts
pop
cmc
jmp
leave
pop
push
addr16
adc
repz
cmp
cmp
xchg
inc
sti
jne
jbe
and
pop
push
lock
repz
ja
js
push
jo
sbb
or
rorl
add
rcrl
enter
add
or
jg
addl
and
or
add
cmpsl
out
mov
jno
mov
outsl
std
sti
inc
stos
icebp
ds
popa
and
add
outsl
mov
int
movsb
xchg
bound
sub
push
mov
and
pop
cltd
jmp
mov
filds
mov
mov
lods
xorb
imul
or
adc
mov
inc
divb
jmp
or
ja
jmp
cmpsl
xor
popf
stc
test
cmpsl
std
push
sbb
add
adc
sub
insl
jecxz
cmp
sub
push
rcrb
and
push
adc
cltd
dec
stc
dec
inc
dec
cmp
js
pop
pop
add
xor
cmp
push
cmp
push
in
shr
loopne
inc
inc
push
push
inc
lods
xlat
and
xchg
dec
mov
mov
cmp
push
pop
sbb
scas
jle
push
cs
inc
and
xor
lret
ljmp
negl
cli
inc
mov
push
or
daa
rolb
into
fwait
inc
rcrb
rolb
dec
dec
dec
iret
dec
out
test
push
jno
mov
loope
xor
sub
inc
or
sbb
pusha
pop
lcall
sbb
add
roll
xchg
xchg
aaa
and
lock
inc
inc
and
sbb
dec
push
jo
nop
pushf
pop
idivl
sub
test
and
mov
mov
xchg
cmp
pop
push
inc
jl
inc
loopne
mov
cmc
repnz
xchg
cs
or
cwtl
pop
shrb
test
dec
dec
push
dec
cli
call
es
dec
jl
add
pusha
fs
xor
addb
or
push
test
dec
mov
adc
inc
loopne
xor
shll
imul
cmp
movsb
ret
inc
push
mov
mov
int
filds
outsl
daa
jg
pusha
popa
sbb
mov
jge
and
addl
dec
sarb
push
inc
insb
pop
js
lods
dec
mov
or
dec
insb
adc
fidivrs
adc
dec
push
push
push
push
push
lcall
dec
cld
mov
xor
push
jnp
push
mov
inc
adc
jp
xlat
add
dec
fiadds
dec
dec
push
or
jge
in
call
add
jno
ss
push
adc
nop
imul
orl
jo
mov
outsb
jp
lock
nop
mov
inc
mov
push
lods
outsb
push
jo
dec
adc
imul
pop
mov
mov
inc
push
or
push
dec
sub
push
stos
xchg
push
stos
pop
shlb
inc
sub
push
adc
lds
lods
pop
mov
shrb
test
or
insb
or
lea
mov
movsl
add
push
mov
lea
and
leave
insl
push
inc
orl
notl
stc
popf
pusha
mov
popf
mov
lock
aaa
addr16
mov
pop
fs
and
or
cmp
sbb
lock
sbb
sbb
sbb
dec
or
pushf
push
mov
and
lods
out
outsb
out
cmp
push
pop
adc
add
or
add
or
add
adc
dec
mov
inc
mov
mov
mov
dec
or
add
aas
test
mov
cmp
gs
dec
sub
iret
mov
or
inc
or
pop
mov
imul
inc
rcl
xor
jno
dec
sbb
testl
pop
and
sbb
imul
add
sub
ret
jmp
mov
js
bound
add
or
sub
repnz
sbb
loop
std
or
jno
push
leave
dec
mov
xor
add
adc
sbb
pop
cli
dec
and
jns
imul
inc
out
mov
daa
push
dec
sbb
or
or
cmp
daa
dec
add
mov
inc
fsubs
and
and
mov
mov
movsl
aad
push
push
out
mov
add
pushf
pushf
xor
cs
aad
cmp
js
das
add
sub
adc
ret
add
xchg
ds
pusha
icebp
mov
ljmp
xor
popa
mov
cmp
out
lea
inc
jns
mov
into
mov
js
inc
mov
pop
outsl
push
inc
test
shlb
push
out
out
xchg
push
rorb
or
out
call
and
mov
dec
xor
faddp
stos
xor
scas
mov
or
cs
jbe
pop
adc
sub
dec
push
xchg
sub
and
in
bound
add
push
and
mov
fldl
push
mov
pop
mov
cli
push
ljmp
pop
push
push
inc
sbb
cli
daa
or
addb
js
sbb
addb
push
cwtl
sbb
sub
push
jle
insl
in
mov
std
pop
push
adc
adc
cli
xchg
add
jb
outsb
cmp
sub
or
pusha
push
inc
push
or
call
std
lcall
push
xor
push
iret
mov
mulb
sub
or
xchg
mov
lcall
pop
repz
push
push
jmp
and
sub
jno
int3
pop
orb
imul
sbb
aaa
and
push
or
mul
jno
inc
lock
inc
xor
mov
xchg
ret
inc
pop
lods
jecxz
adc
int3
outsl
adc
xchg
add
add
dec
cmp
cmpsl
in
pop
add
pop
test
cmpsl
lret
dec
scas
dec
in
cmp
inc
lret
les
jbe
popf
mov
lea
jns
sub
add
and
dec
and
jbe,pt
sbb
adc
pop
jb
aas
shlb
pop
pop
in
les
sbb
sbb
rcpps
add
dec
cmpsl
jo
imul
jle
test
dec
test
iret
popf
xor
ds
push
aam
sub
dec
in
mov
das
call
addr16
in
or
daa
and
daa
jb
dec
push
push
inc
aaa
loop
cmp
pop
dec
bound
jbe
push
cld
aaa
in
push
pusha
ja
lcall
insb
fldt
cmp
es
push
push
jmp
fcomi
mov
iret
stos
bsr
fcmovb
das
mov
push
mov
cmp
mov
cmpsl
in
scas
shrb
jmp
push
hlt
stc
and
das
adcl
add
sub
and
aas
es
dec
enter
xor
pop
fstps
rcrl
cs
push
inc
push
pushf
xor
lock
fcmovb
pop
movsb
inc
scas
pop
loopne
pop
cmp
sub
sbbb
add
mov
mov
insl
xor
ss
cmp
inc
out
jbe
out
dec
dec
aaa
push
pop
pop
push
pusha
jbe,pn
pusha
xlat
aaa
imul
outsl
ja
cmp
jns
jbe
xchg
aaa
or
push
cwtl
imul
sub
shlb
xchg
mov
stos
scas
push
adc
nop
push
inc
jne
cmp
or
sub
or
or
mov
inc
push
insb
push
adc
aas
inc
in
in
add
je
insb
outsb
inc
std
xor
mov
arpl
adc
push
rcrb
add
push
sbb
sbb
push
jns
gs
push
imul
adc
outsb
addr16
jns
gs
js
testb
outsl
fs
dec
popa
outsb
or
mov
inc
inc
jne
cmp
divl
fs
sbb
test
inc
outsb
jne
inc
outsl
jb
popa
je
push
and
addl
sub
mov
movsl
sbb
inc
outsl
insl
jo
je
push
xchg
outsl
outsb
push
jp
das
inc
adc
pushf
sbb
and
daa
and
into
pop
xor
imul
or
lahf
ror
lock
cmpsl
lods
xchg
stc
rclb
addr16
outsb
or
iret
in
lahf
dec
gs
sbb
jne
stos
push
dec
or
push
cltd
or
sbb
push
fisubl
insb
out
loopne
jle
and
arpl
ret
fsts
mov
inc
fildl
inc
jae
pop
arpl
cmp
lods
repnz
mov
push
push
jns
dec
out
fsubrs
push
jbe
arpl
xor
ja
cmpb
loopne
cmp
push
xor
outsl
ja
loop
pop
divb
adc
outsb
sub
mov
mov
lret
loop
and
popa
jae
aam
mov
push
sbb
push
scas
cmp
adc
gs
cmp
je
jle
pop
push
arpl
insb
insb
dec
outsb
outsw
push
hlt
inc
outsl
js
psubq
pop
sti
push
int3
xchg
jno
enter
cmpsl
insl
fstps
mov
shlb
mov
jl
imul
and
push
gs
movsb
sbb
outsl
jns
cs
cltd
loope
push
push
pop
mov
mov
jb
sub
mov
je
sub
xor
jns
lock
push
push
imul
add
dec
add
or
lock
lock
lock
testl
cmc
fbstp
ficomps
aam
push
add
lock
add
push
outsl
in
in
fcomi
mov
lock
add
repnz
paddd
mov
add
lock
push
add
or
aam
lock
fsub
fidivl
cs
mov
sbb
push
mov
inc
popa
add
stc
inc
add
adc
lock
mov
add
pop
inc
sub
add
sbb
push
add
daa
and
adc
sbbb
pop
add
nop/reserved
push
cmp
imul
ret
sarb
cmp
jle
enter
add
inc
dec
inc
inc
enter
mov
push
add
push
mov
inc
inc
push
inc
lods
sbb
mulb
testl
inc
push
push
and
push
cs
add
mov
shrb
fs
popa
add
rorb
add
gs
inc
fimuls
aaa
shrl
dec
add
jae
dec
jbe
outsb
fwait
and
mov
push
dec
xchg
test
and
add
add
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
