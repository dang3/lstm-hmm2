jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
ss
popa
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
push
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
lea
push
call
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
lea
push
call
lea
push
call
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
lea
push
lea
push
call
lea
push
call
mov
pop
ret
nop
push
mov
add
lea
push
call
call
lea
push
call
lea
push
call
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
lea
push
lea
push
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
call
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
lea
push
call
lea
push
call
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
push
call
call
lea
push
lea
push
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
mov
cmp
je
call
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
xor
divl
test
jne
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
mov
cmp
je
jmp
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
mov
cmp
je
jmp
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
sub
mov
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
push
mov
mov
xor
call
mov
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
mov
mov
mov
call
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
push
mov
mov
xor
call
mov
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
mov
push
mov
jmp
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
sub
add
add
mov
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
call
push
call
mov
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
mov
mov
call
mov
mov
mov
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
mov
mov
movl
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
pop
ret
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
shll
ljmp
stos
mov
mov
mov
mov
int3
int3
mov
stos
test
mov
ror
mov
stos
test
mov
shrb
scas
cmpsl
test
int3
xchg
scas
rcrb
mov
int3
movsl
scas
mov
ljmp
int3
movsl
int3
scas
int3
mov
int3
test
std
int3
dec
ljmp
int3
int3
int3
int3
int3
lahf
inc
sub
xor
cmp
or
cmp
lock
ss
mov
stos
in
mov
mov
in
mov
in
mov
clc
in
mov
xchg
in
mov
pushf
in
mov
xchg
in
mov
mov
mov
imul
xor
test
test
int3
inc
xor
mov
test
int3
inc
xor
add
test
int3
inc
xor
out
test
int3
inc
xor
in
imul
and
int3
inc
xor
leave
imul
and
xor
xor
xchg
xchg
or
inc
add
inc
adc
or
mov
or
inc
sub
add
pop
inc
popl
sbb
inc
mov
pushf
inc
popl
popl
pushf
mov
add
mov
inc
vpmacssdqh
add
mov
pushf
inc
popl
pushf
xchg
inc
vpmacssdqh
inc
iret
cld
int3
int3
int3
inc
xchg
inc
test
inc
clc
int
sub
cmp
cmp
dec
int3
int3
int3
inc
adc
adc
mov
int3
leave
push
sbb
adc
int3
int
sub
and
or
int3
cmpsb
int3
cmpsb
int3
inc
and
enter
pushf
inc
popl
pushf
add
and
mov
cmp
push
pop
int3
int3
int3
inc
and
int3
rcl
and
int
sub
xor
and
fmul
vpmacssdqh
mov
int
sub
xor
and
fmul
vpmacssdqh
mov
dec
rcr
xor
out
cmp
int3
int3
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
and
inc
lahf
xor
into
inc
sbb
sbb
or
pushf
inc
and
inc
popl
pushf
hlt
inc
lahf
sub
into
dec
sub
dec
xor
inc
xor
int3
mov
loopne
and
enter
idivl
cmp
inc
cmp
mov
int
sub
xor
popl
inc
adc
int3
cmpsb
faddl
add
or
pushf
inc
popl
pushf
xchg
movsb
int3
dec
int3
int3
cmpsb
int3
inc
popl
popl
pushf
mov
int3
cmpsb
int3
inc
pop
pushf
inc
popl
pushf
mov
scas
inc
inc
push
lock
cmp
cmp
ss
sub
cmp
cmp
or
cs
das
xchg
push
ror
or
inc
sub
enter
sti
adc
cmpsl
int3
int3
int3
mov
mov
int3
int3
mov
xchg
int3
int3
int3
mov
jl
and
int3
int3
int3
fmull
and
int3
int3
jecxz
mov
int3
int3
and
rolb
test
sub
push
int3
test
dec
cmp
mov
ror
mov
and
lret
mov
cmp
int3
push
mov
fcompl
or
sub
cmp
fildl
and
cmp
cmp
push
int3
inc
mov
inc
ss
adc
cmp
cmp
or
push
cmp
cmp
jecxz
inc
and
dec
adc
cmp
inc
cmp
iret
les
ret
mov
xor
xor
pop
enter
cmp
int3
mov
int3
inc
cmp
cmp
cmp
xor
leave
push
inc
int3
int3
int3
adc
inc
ss
lahf
cmp
into
std
push
inc
lahf
xor
cmp
cmp
ss
testb
ss
cmp
int3
mov
int3
adc
inc
ss
push
inc
lahf
xor
xor
cmp
int
std
push
inc
lahf
xor
mov
out
cmp
int3
int3
inc
ss
or
xor
int3
inc
xor
or
ss
lahf
xor
mov
xor
mov
or
inc
sub
or
les
int3
int3
int3
outsb
les
ret
mov
inc
ffreep
mov
pop
enter
int
out
cmp
int3
int3
outsb
ret
mov
insb
les
mov
aaa
std
or
ret
mov
enter
std
push
inc
ffreep
mov
enter
std
or
ret
mov
aaa
inc
pop
enter
std
or
les
enter
std
push
inc
ffreep
mov
pop
enter
int
out
cmp
int3
int3
inc
aaa
std
or
aaa
inc
dec
enter
decb
inc
cmp
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jp
mov
mov
mov
inc
dec
dec
mov
lea
mov
dec
mov
lea
mov
lea
lea
mov
inc
inc
movl
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
push
call
mov
call
mov
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
movl
lea
push
push
mov
sub
push
mov
push
call
mov
mov
call
mov
cmpl
je
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
mov
mov
call
mov
cmpl
je
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
cmp
je
mov
subb
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
xorb
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
incl
mov
cmp
jne
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
call
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
push
mov
push
call
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
mov
mov
mov
xor
add
mov
cmp
jne
call
add
cmp
jne
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
movb
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
mov
mov
pop
ret
lea
push
mov
add
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
call
test
jne
mov
jmp
movw
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
call
lea
mov
pop
ret
mov
push
mov
add
mov
lea
xchg
mov
mov
mov
mov
mov
mov
lea
dec
je
mov
dec
dec
mov
xchg
mov
mov
mov
mov
xchg
mov
lea
dec
inc
dec
jne
mov
mov
mov
xchg
mov
xchg
mov
dec
lea
push
call
call
lea
push
call
call
lea
push
call
lea
push
call
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
lea
push
lea
push
call
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
lea
push
call
lea
push
lea
push
call
call
lea
push
lea
push
call
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
lea
xchg
lea
lea
xchg
xchg
mov
mov
mov
mov
lea
dec
dec
inc
dec
je
lea
mov
dec
inc
inc
lea
push
lea
push
call
lea
push
lea
push
call
mov
mov
xchg
lea
xchg
xchg
xchg
mov
mov
mov
dec
jne
xchg
mov
mov
dec
dec
lea
push
lea
push
call
lea
push
lea
push
call
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
push
push
push
call
mov
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
mov
pop
ret
add
add
cs
jae
jae
gs
xor
pop
jne
je
jae
fs
insb
and
add
in
add
lea
push
lea
push
call
lea
push
lea
push
call
lea
push
call
lea
push
call
call
lea
push
call
lea
push
call
lea
push
lea
push
call
lea
push
lea
push
call
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
lea
push
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
lea
push
lea
push
call
mov
xchg
xchg
jmp
dec
dec
inc
xchg
mov
mov
dec
jne
lea
mov
mov
lea
mov
mov
lea
inc
dec
lea
push
lea
push
call
lea
push
lea
push
call
call
lea
push
call
call
mov
lea
xchg
dec
inc
dec
jne
xchg
mov
xchg
lea
mov
lea
mov
mov
xchg
xchg
xchg
mov
inc
dec
lea
push
lea
push
call
mov
pop
ret
lea
addl
jne
mov
cmp
ja
mov
xchg
jmp
lea
mov
dec
mov
mov
lea
xchg
inc
lea
inc
dec
mov
lea
lea
xchg
mov
inc
mov
mov
mov
lea
call
cmp
jp
lea
mov
mov
xchg
lea
mov
xchg
mov
mov
dec
mov
xchg
lea
mov
mov
xchg
ret
lea
ret
lea
fldenv
add
cltd
aam
add
sbb
rorl
shrl
xchg
insl
add
aas
ja
add
iret
movsl
add
xchg
cmp
test
add
mov
add
add
add
pop
fisubrs
loopne
lcall
jl
push
mov
add
add
roll
xor
add
sbb
jne
decb
flds
push
faddl
dec
push
add
idivl
scas
cltd
inc
dec
jb
add
push
add
clc
jnp
lds
dec
pop
ss
add
mov
lcall
add
mov
cmc
xchg
add
mov
add
pop
add
add
add
cmp
add
mov
add
xor
repnz
push
rcr
in
lods
add
sbb
add
xchg
jecxz
xchg
enter
cmp
add
add
clc
add
bswap
add
leave
add
cmp
add
das
int3
movsb
sarb
mov
mov
icebp
push
mov
add
sub
add
add
sbb
mov
insl
add
dec
add
xchg
rcrb
add
xor
push
jg
add
test
cmpb
push
xchg
pushf
mov
add
imul
test
and
loope
inc
add
sub
sahf
imul
add
sarb
pop
jb
lods
add
movsl
add
pop
push
add
insb
mov
out
push
add
push
in
add
push
rorb
mov
add
leave
add
dec
in
ret
dec
mov
add
lods
add
mov
sbb
add
mov
aam
loopne
mov
and
mov
or
into
dec
add
push
shlb
add
pop
mov
inc
pop
pop
mov
shlb
scas
fs
add
mov
aam
es
inc
add
add
add
rorl
push
cld
mov
dec
pop
cli
add
mov
add
add
pusha
xor
cmpsb
mov
pop
flds
test
ret
inc
add
xor
fs
pop
lret
jl
add
pop
inc
push
clc
fiadds
inc
add
mov
xchg
or
scas
rclb
dec
add
sbb
mov
xor
loop
add
negb
fwait
inc
cmc
test
add
aas
add
out
int3
mov
add
fsubl
add
or
mov
xchg
nop
loopne
add
out
and
add
add
ja
add
push
add
push
into
add
imul
add
push
xchg
jmp
pop
sti
cmp
mov
or
ror
add
incb
pop
stc
mov
add
addl
xlat
cs
mov
push
loop
test
cmp
xchg
or
lret
add
push
cmp
mov
or
pop
add
hlt
pop
aad
flds
stos
jb
cs
ja
add
loopne
add
mov
dec
and
dec
in
flds
add
sar
shrb
sub
repz
lea
add
hlt
aas
dec
fsubrs
push
mov
pop
sbb
test
add
pushf
mov
insl
js
and
add
add
fdivrp
add
insb
sbb
push
dec
lods
lea
sub
pop
pop
iret
dec
add
xchg
add
in
fldt
pop
add
movsl
cld
and
add
pop
add
jae
push
lods
add
add
xchg
or
xor
add
pop
lcall
aam
hlt
popa
lea
and
add
test
andb
fstpt
pop
les
stos
int
mov
mov
push
mov
mov
fcomps
inc
divl
cs
roll
loop
lcall
cmc
mov
push
fsub
mov
dec
jmp
add
add
lock
mov
mov
sub
repz
mov
sti
rolb
stos
mov
popf
loopne
add
nop
sbb
adc
out
pop
imul
pop
repz
sub
and
in
xlat
xor
pop
sub
or
mov
push
or
jmp
shlb
mov
mov
nop
add
das
xor
jnp
sahf
flds
inc
mov
jecxz
jp
enter
mov
dec
call
mov
push
pop
ret
adc
pop
adc
nop
shlb
pop
mov
dec
inc
xchg
inc
int
xor
pop
dec
jp
ss
dec
imul
adc
lret
mul
das
popa
std
cs
cwtl
test
in
mov
pushf
jne
aaa
and
orl
movsb
mov
adc
les
nop
in
lock
cltd
das
enter
and
outsl
hlt
and
lahf
sbb
push
pop
pushf
es
inc
insl
mov
bound
cld
pop
cmpsl
dec
mov
pusha
divb
cld
pushf
jbe
mov
xchg
xor
and
cwtl
xchg
jnp
cmp
sub
sub
aam
insl
xorb
add
xchg
sub
inc
mov
mov
cmp
jo
lods
leave
fwait
pop
stos
imul
out
outsl
mov
call
shrd
cltd
jno
sbb
and
dec
lock
loope
cmc
rcl
xchg
bound
shl
fnstenv
lret
fwait
cmp
jb
inc
pop
sti
add
mov
mov
and
jno
sub
or
ja
push
xchg
jle
dec
mov
rorb
aaa
push
stos
ja
push
add
adc
inc
inc
iret
fildll
mov
jb
dec
add
jae
mov
imul
jge
ljmp
in
out
adcl
or
or
sti
mov
or
cmp
inc
stos
jnp
sub
jle
aaa
or
mov
add
xchg
fucom
sub
mov
xchg
jae
mov
mov
inc
mov
roll
and
fdivl
les
inc
imul
scas
push
adc
jae
push
iret
mov
lahf
int
pop
push
in
inc
andb
paddusb
or
je
testb
push
ficompl
shl
xchg
pop
add
pop
sub
fimuls
filds
leave
in
aam
ficompl
ret
repnz
xor
hlt
fcompl
push
jb
or
frstor
push
jnp
aaa
mov
jne
add
sbb
int3
cmp
xchg
dec
int
mov
popf
out
cmp
push
scas
mov
or
out
mov
movsb
mov
inc
sbb
cmpsb
xor
pop
enter
daa
dec
inc
popa
cmp
adc
jno
call
pop
cmp
aas
mov
movsl
adcb
lahf
inc
add
mov
pop
fwait
jbe
push
mov
xor
push
aam
in
xlat
js
mov
test
loope
pop
mov
sub
pusha
outsb
mov
addr16
sub
fninit
add
or
aad
and
imul
and
mov
aaa
ljmp
adc
std
sbb
sahf
adc
stc
test
pop
mov
inc
jmp
lds
and
inc
adc
push
push
dec
sub
in
and
jo
adc
lea
rcrl
jp
adc
mov
into
jne
dec
cmc
test
jae
or
out
loop
pushf
xor
fcmovnu
push
mov
add
xchg
data16
aam
pop
sbb
mov
sub
movsl
mov
cmp
cltd
pop
sti
sub
mov
loopne
inc
jb
scas
les
imul
popf
dec
repz
mov
xchg
in
cmp
cmp
or
je
mov
in
jns
in
jmp
enter
nop
cli
aad
lds
loopne
xor
and
inc
mov
neg
cmp
jno
xchg
mov
lret
inc
lret
lea
mov
ss
pop
jne
imul
xchg
aas
pushf
push
inc
fstpt
push
cmp
inc
addl
or
sti
ja
jb
data16
jl
je
mov
rcrl
punpckhwd
and
sub
cwtl
arpl
mov
fistl
mov
lods
ror
test
mov
mov
adc
cmpsl
mov
mov
sub
addr16
cmp
ret
loopne
es
out
insl
jb
push
dec
sub
pusha
cmpsl
dec
loopew
xchg
loopne
icebp
pop
cs
aam
mov
mov
out
and
xor
mov
sbb
cmpsl
aam
cmp
sti
dec
push
cmpsb
cmp
repnz
cmp
gs
mov
jo
popa
cmp
sub
shr
lods
xchg
sbb
addr16
ja
adc
or
xor
test
push
mov
in
les
dec
push
inc
mov
xchg
add
cmpb
ds
fwait
imul
push
jecxz
pop
add
iret
push
push
inc
pop
jl
jle
js
fiadds
ficoms
push
out
mov
repnz
cmpsl
ja
scas
and
inc
add
enter
test
dec
out
pop
jne
shll
out
jle
or
jns
sub
push
pop
dec
andl
sub
or
and
mov
and
mov
flds
jle
pushf
in
cmpsl
sub
fistpll
jp
xchg
mov
jg
xor
inc
xchg
inc
fcoms
push
movl
dec
mov
adc
or
and
xchg
insb
das
popa
push
imul
data16
lret
in
push
dec
xchg
jmp
iret
add
rcrb
sub
inc
arpl
xchg
mov
or
out
inc
std
inc
negb
movsl
xchg
mov
ja
sarb
pop
push
movsb
jnp
stos
add
lds
pop
shl
xchg
mov
mov
mov
sbb
or
fsubs
jge
mov
mov
or
jae
insb
pop
jo
and
ret
lahf
jl
cmpb
xor
mov
lods
scas
xchg
je
and
mov
push
mov
cmpsb
mov
aam
gs
enter
daa
dec
call
outsl
jno
std
into
jl
xchg
int3
cmp
jne
ds
or
movsl
mov
and
in
rclb
test
push
pop
cmp
sti
xchg
and
pop
push
cld
idivl
mov
pop
shrb
loope
or
sub
pusha
jmp
push
testl
mov
data16
cmp
cmpb
add
daa
cmc
and
push
push
out
xor
mov
popf
sub
fwait
jmp
push
push
and
sbb
shl
test
push
sbbb
adc
push
mov
mov
in
mov
ss
int3
pop
fmul
xchg
imull
shll
lret
pop
shll
scas
or
lret
or
cmc
dec
and
push
cmp
loop
sbb
jnp
sbb
sbb
lods
aas
cmpsb
hlt
mov
lods
adc
pop
push
cli
xor
xchg
sub
xor
lock
gs
sub
xchg
mov
imul
daa
xor
scas
ds
test
and
iret
hlt
xlat
scas
dec
cmp
out
jo
lods
and
in
in
xchg
movsl
jge,pn
or
insl
jp
nop
mov
adc
inc
mov
jge
les
out
into
pushf
iret
lea
aas
mov
xchg
dec
mov
pusha
jl
adc
dec
mov
inc
xchg
jne
inc
add
sub
lcall
dec
push
outsb
adc
das
shrl
iret
imulb
inc
std
jl
sbb
aas
sahf
mov
sbb
stos
cmovl
mov
mov
push
mov
jmp
das
xchg
pop
mov
loopne
inc
and
ja,pn
outsl
test
insl
pop
xor
dec
and
pop
cmpsl
dec
lret
jle
icebp
xor
cld
repnz
sarb
fnstcw
and
into
mov
jg
out
addr16
sub
ret
ds
fdivs
stc
mov
push
clc
mov
mov
ljmp
and
mov
out
xor
aaa
push
or
punpckhdq
cld
cltd
fists
in
jne
mov
dec
das
cmp
mov
mov
xchg
lds
rcll
and
fwait
lcall
add
ljmp
xor
jbe
or
fidivs
add
cmc
mov
outsl
addr16
lods
fwait
lods
ja
xchg
inc
dec
cli
or
or
sbb
dec
lret
jne
or
mov
stos
enter
add
adc
jns
mov
in
pop
jns
xor
out
ja
sub
add
adc
push
add
mov
mov
sbb
mulb
pusha
push
mov
fistps
pusha
xchg
cmpl
jmp
adc
push
mov
and
dec
sub
mov
int3
jo
lcall
scas
cs
lods
adc
shll
nop
mov
sub
sbb
imul
xchg
arpl
push
popf
inc
jne
movsl
fiaddl
test
imul
pop
xchg
push
fimuls
into
vandps
rclb
jnp
imul
xchg
inc
sbb
jb
mov
adc
jge
push
or
lahf
aaa
pop
jno
or
or
int3
psubsb
dec
stos
in
push
arpl
xor
or
stos
scas
jne
push
and
inc
into
movsb
mov
cs
cmp
in
in
dec
sub
and
daa
dec
or
mov
jl
das
sub
xchg
jo
imul
and
jl
pop
pop
mov
mov
push
and
jmp
mov
js
pop
sub
aaa
test
push
fsub
pop
fdivl
aad
jl
inc
xchg
inc
outsb
addr16
jecxz
add
cltd
into
xor
jnp
adc
int
and
cmpsl
push
icebp
movsl
inc
int
out
sub
scas
fs
xor
jge
push
sarl
fdiv
jmp
jmp
test
jne
xorb
jg
and
fimull
mov
shll
lea
inc
fldt
sti
push
cmp
mov
sbb
out
testb
enter
xlat
sub
sub
imul
ja
ret
inc
js
int
lods
loop
rcrl
dec
stc
mov
cli
add
jo
jns
aaa
lods
es
mov
mov
cli
mov
sub
cmp
addr16
fistpll
adc
gs
ret
loopne
or
pop
in
and
jne
imul
add
loope
imul
cmp
mov
jecxz
pop
test
sbb
dec
sarl
jmp
and
loopne,pn
adc
mov
ljmp
or
push
fldcw
sbb
jecxz
sbbb
shrl
jmp
and
daa
iret
mov
xor
inc
pop
adc
add
fistpl
cmpl
push
scas
inc
aas
cmp
dec
jb
rcll
add
sbb
mov
mov
mov
stos
jno
std
and
jle
lret
add
into
dec
jp
add
repnz
mov
dec
xor
mov
cmp
mov
out
pop
ret
test
es
mov
insl
inc
fwait
fs
pop
cmp
and
or
movsl
mov
cld
mov
adc
fsubs
xchg
xor
out
sub
lret
mov
push
mov
bound
clc
clc
jno
xchg
push
das
aad
xchg
adc
xor
cmp
xor
cwtl
and
dec
push
sub
or
add
add
test
pushf
cmp
repnz
test
and
or
sbb
xlat
pop
shr
cmp
pop
lret
in
fwait
leave
dec
cltd
push
sub
popf
fisubrl
incl
cmp
xor
push
or
fisubrl
xor
loop
xchg
imul
mov
push
sti
push
dec
in
je
inc
xchg
xor
or
inc
mov
push
repz
dec
lods
lahf
push
jne
stos
mov
lock
bound
out
in
cmp
out
jb
sub
decb
call
jp
rcll
pop
enter
fildll
popf
or
in
inc
push
pusha
lock
cmp
xchg
push
mov
inc
xchg
fcoml
mov
popf
sub
mov
mov
stos
adc
push
and
subb
imul
scas
xchg
sbb
push
fadd
and
add
dec
iret
rorb
pop
les
cs
mov
lret
push
and
lahf
and
push
hlt
call
xchg
std
sub
pop
mov
sbb
lds
mov
mov
pop
mov
es
mov
test
sbb
sbb
ss
aaa
fdivrp
mov
or
jne
lcall
dec
sbb
rorb
inc
stos
sub
addr16
test
xchg
repz
mov
inc
hlt
icebp
cmpsb
mov
test
daa
dec
mov
cmp
xchg
jne
mov
push
cmp
adc
mov
movsl
xchg
sub
lahf
movsb
iret
pop
push
sub
test
out
and
jno
movsb
sbb
not
js
push
test
ds
push
jne
loope
shll
inc
ja
sub
stc
outsb
lret
adc
sbb
clc
dec
faddl
mov
sbb
enter
int3
xchg
push
hlt
mov
pop
movsb
leave
xor
mov
sub
sbb
fsubl
pop
stc
sahf
cli
outsb
std
test
or
push
adc
mov
dec
fisttpll
jo
outsl
adc
push
mov
fadds
xchg
imull
push
inc
rcr
in
aad
stos
or
pop
into
push
jbe
cmc
ficompl
xor
push
outsl
lods
in
loop
mov
pop
fs
mov
data16
jnp
lods
or
adc
mov
xor
mov
xor
ss
lcall
aad
adc
lea
iret
mov
inc
aaa
jg
les
xchg
cs
sbb
inc
fildll
sub
inc
mov
mov
js
cs
fisttps
sti
adc
jno
and
jo
je
mov
stc
les
bound
aam
scas
lea
outsb
call
mov
or
mov
adc
aaa
pushf
imul
fisttpl
pop
inc
pop
sub
or
aas
fmuls
aad
cmpb
inc
cmp
ja
push
enter
les
cwtl
xchg
add
mov
mov
andl
sahf
lret
rcr
test
lods
xor
lock
enter
or
dec
inc
jmp
or
sahf
es
and
out
dec
sbb
xor
sub
jmp
loopne
mov
dec
out
mov
pop
lea
mov
mov
mov
xchg
ja
sub
cmp
nop
mov
pop
out
fistl
dec
mov
clc
xor
sbb
or
pop
popa
cmpb
daa
push
mov
xchg
in
call
movaps
lods
cltd
dec
das
iret
test
dec
push
xchg
dec
or
test
out
ja
repz
sbb
dec
inc
pop
jbe
fwait
fwait
clc
mov
loop
and
cmpsl
add
out
sub
lahf
scas
test
ja
aad
inc
jge
xor
adc
xchg
mov
fistpl
xchg
or
pop
and
inc
dec
loopne
mov
or
cmp
dec
nop
dec
mov
mov
cmp
bound
and
ret
test
adcl
out
loop
sub
stc
add
stos
adc
mov
inc
bound
out
and
test
pusha
mov
mov
sbb
sti
jae
mov
popf
push
jg
mov
int
push
stos
xchg
mov
insb
jo
out
add
hlt
and
push
pop
jne
adc
xchg
in
pop
mov
ret
loop
sti
mov
push
arpl
sbb
or
pusha
out
inc
jae
daa
aas
insb
xchg
mov
lahf
mov
ficoms
aas
rolb
mov
stos
dec
into
leave
xorb
push
scas
testl
sahf
push
sbb
aaa
popf
push
insl
or
jo
add
lahf
cmp
in
dec
mov
xor
ret
scas
xor
lret
cmp
pop
dec
inc
push
incl
sbb
sbb
in
pop
jno
daa
dec
jecxz
cmp
pop
dec
jno
adc
jl
jecxz
cmp
mov
ds
mov
sahf
and
push
rclb
push
push
fildll
mov
adc
pop
jnp
jne
sar
jno
jge
xchg
fnstenv
sub
inc
inc
sub
and
outsb
sub
xor
shl
xchg
lds
cmc
rcl
sbb
pop
nop
add
push
mov
outsl
pop
or
int
mov
sub
jns
pop
xor
les
outsl
mov
dec
adc
sbb
popf
sub
subb
mov
mov
stos
loop
mov
push
push
ss
pop
fadds
clc
push
imull
lret
mov
mov
cmpsb
adc
into
add
das
cmc
mov
jmp
int
jg
push
fs
and
data16
and
jbe
dec
out
dec
arpl
repnz
jne
or
popa
pop
sarb
js
loopne
pop
push
pop
sub
sbb
adc
mov
or
in
sbb
xorb
sub
in
icebp
and
nop
test
cmpsb
loope
aad
repnz
dec
iret
or
inc
fiaddl
fsts
and
jecxz
xchg
mov
fs
xor
inc
clc
sub
gs
pushf
push
xchg
push
fstpt
adc
inc
sub
inc
push
leave
adc
ja
aaa
jb
jmp
dec
mov
jg
rcll
mov
std
jno
repnz
dec
pop
xchg
mov
decb
cmp
sbb
lret
inc
loope
mov
sbbl
add
pop
mov
std
cli
or
sbb
jle
add
insl
push
adc
outsl
cmpsl
dec
or
pop
xchg
push
icebp
mov
mov
mov
inc
test
mov
shll
shlb
jb
repz
lahf
stos
xchg
inc
mov
add
outsb
into
test
ljmp
out
loopne
mov
out
pop
xor
push
jecxz
ja
mov
cltd
test
outsl
mov
clc
pusha
adc
test
push
push
dec
add
rcrb
inc
fwait
daa
mov
aam
stos
out
add
dec
mov
xor
xsha1
cmpsb
or
cwtl
push
xchg
or
mov
rolb
cmp
inc
pop
shlb
push
cld
dec
shrl
inc
ret
or
or
mov
jno
dec
jae
in
jne
adc
mov
push
jmp
leave
fdivrl
xchg
xor
in
imul
rol
sub
hlt
mov
jp
in
adc
or
rclb
xchg
add
jle
mov
or
es
fistpll
dec
inc
jmp
jb
mov
ja
push
rcll
mov
or
fsubrs
jge
hlt
insb
fisttpl
cmp
inc
push
scas
push
push
in
data16
adc
mov
pop
xor
test
jno
pop
adc
pop
nop
into
or
fildl
inc
repnz
ficompl
pop
inc
sbb
mov
mov
aaa
sbb
lds
shlb
mov
push
and
mull
hlt
push
pop
push
std
mov
jbe
pop
mov
inc
push
lock
xchg
sbb
lock
add
sbb
int3
shlb
dec
clc
push
pop
push
or
or
jo
stos
pop
scas
adc
lods
and
sbb
cmp
adc
inc
icebp
jl
in
out
cmpsb
rcr
in
add
xchg
enter
daa
dec
xchg
jmp
stc
jno
jno
mov
fwait
cmp
sbb
movsl
movsl
addb
mov
push
rorl
cmp
outsb
and
push
test
xor
or
inc
pop
mov
inc
mov
mov
lock
loope
sub
shrb
push
or
outsb
nop
imul
faddl
rcl
and
orb
mov
add
mov
std
push
cli
mov
int
je
sub
mov
daa
inc
test
scas
cmp
mul
sbb
xchg
mov
inc
fsubrl
outsb
mov
enter
mov
jmp
jae
lret
out
push
mov
into
les
fdivrs
add
dec
mov
rorl
push
or
bswap
in
and
push
fcoms
outsl
push
pop
loop
sub
stc
outsb
insl
push
fs
dec
scas
add
les
inc
pop
lods
lret
fisttpll
cli
and
div
cmp
rcrl
sti
in
cwtl
movsb
jl
push
gs
scas
cltd
loopne
xchg
pop
dec
dec
pop
adc
iret
cmp
add
int3
repz
xchg
mov
push
or
pop
cmp
mov
jb
or
in
nop
push
pop
jmp
insb
cs
or
mov
loop
daa
test
dec
cs
jl
in
pop
out
dec
mov
cmp
loope
push
lea
fildll
mov
pop
pop
hlt
out
insl
adc
xchg
fldt
out
mov
inc
outsl
hlt
das
aas
push
jg
jb
iret
and
xor
shll
fs
or
push
mov
xor
add
lret
scas
add
mov
cmc
sbb
lret
das
add
mov
mov
cmp
ret
stos
scas
xor
add
insl
cmc
daa
pop
dec
adc
in
xchg
out
icebp
mov
cld
sahf
pop
mov
gs
and
cmp
sbb
repnz
popa
sub
inc
pop
aam
sbb
add
xor
xchg
fldt
popa
scas
cmp
stos
add
and
xchg
jnp
add
out
cli
add
leave
cltd
mov
dec
and
test
xchg
jmp
lods
test
jne
xchg
mov
jbe
icebp
loope
pop
int3
push
fwait
push
mov
and
xor
add
mov
xor
scas
test
sub
es
pop
movsb
mov
loop
mov
ja
dec
jbe
lock
lds
mov
cmp
jns
jne
ffreep
mov
sbb
bound
jns
push
hlt
in
and
outsl
int
out
sbb
repz
scas
in
test
xchg
mov
fwait
sarl
arpl
loop
in
rcrb
mov
xchg
iret
popa
sbb
pop
cltd
and
movsl
mov
popf
lahf
pop
mov
dec
mov
xchg
xchg
pop
cmp
xchg
imul
sbb
lods
jmp
adc
xchg
add
aas
cwtl
pop
imul
add
jbe
or
push
cmp
inc
jno
push
fimull
mov
sbb
scas
in
pop
inc
xlat
pmaxub
add
sarb
in
loop
push
adc
leave
outsb
mov
sbb
dec
pusha
cmp
rorb
push
lods
orb
cmpsb
add
pop
mov
inc
dec
cmpsl
test
out
sti
mov
js
gs
icebp
dec
mov
cmp
sbbl
jae
out
inc
or
es
daa
dec
leave
sarl
sub
push
jno
adc
cmp
xor
testl
jecxz
add
jbe
movsb
scas
or
push
icebp
divl
fimuls
dec
fstps
sbb
inc
sbb
push
mov
clc
sub
dec
sbb
std
mov
ja
pop
in
dec
shrb
aam
sbbb
sbb
xchg
add
scas
inc
and
stc
fmul
lea
movb
iret
mov
push
sbb
mov
jecxz
mov
and
int
sub
lret
dec
mov
adc
push
mov
pop
ss
mov
cmp
jbe
push
imul
mov
lret
cmpsb
shll
or
cmp
insl
xor
fcoml
loop
mov
stc
and
or
add
push
shrd
mov
mov
out
repz
pop
fadds
leave
jp
pop
hlt
mov
fwait
aam
lahf
adc
dec
mov
pop
imul
adc
xchg
jne
mov
xchg
dec
xchg
ja
pop
sbb
notb
xlat
ljmp
mov
sti
je
jmp
or
cs
ret
shl
ret
into
xchg
dec
lea
add
sub
flds
and
fnsave
call
xor
mov
adc
sbbl
push
lds
push
std
inc
mov
add
mov
dec
jb
out
dec
stos
sarl
inc
pop
clc
shl
in
divb
mov
cwtl
mov
daa
push
mov
add
subl
inc
add
push
cmp
mov
popf
mov
dec
jb
and
ret
les
jae
daa
and
rcl
ret
cmp
test
insl
fcompl
inc
dec
or
add
mov
xor
leave
insl
dec
mov
mov
and
aad
sbb
adc
lcall
mov
jno
lds
enter
fdivrl
clc
in
jae
sbb
ljmp
mov
stos
hlt
mov
cltd
xchg
ret
push
cltd
lcall
and
cmpsl
js
lods
call
push
xchg
out
dec
rcrl
push
pop
adc
mov
dec
popa
sub
ss
test
push
mov
add
jno
jl
sahf
xor
repnz
lahf
movsb
xchg
cmpsl
sub
mov
mov
movsl
pop
push
icebp
pop
ja
ret
mov
ds
or
jp
fiaddl
test
call
push
pop
mov
and
jle
out
out
jns
adc
cmp
ljmp
call
and
cmovg
fdivl
je
jnp,pt
jnp
jle
pushl
in
sbb
fs
lret
mov
sti
fwait
xchg
or
jb
cltd
pop
xchg
push
pop
push
sbb
and
and
mov
xchg
stos
sbb
mov
cmpsb
imul
hlt
fcmove
adc
cs
cmp
ds
in
mov
xor
test
pop
ror
or
sarl
sub
add
cmp
pop
jno
mov
lds
rclb
leave
in
insb
hlt
jmp
jp
jbe
mov
mov
and
xchg
or
dec
inc
add
jp
int3
cmpsb
ss
rorl
cmp
jo
mov
jns
hlt
mov
cmc
movsb
pop
sbb
inc
add
cs
iret
iret
add
or
dec
daa
dec
addb
push
outsb
mov
les
call
push
ds
andl
and
ja
ja
jne
pop
push
pop
push
sbb
rdpmc
lods
into
mov
sub
in
lock
cmp
pop
push
cmp
rclb
subl
leave
sub
sub
outsb
push
cmp
adc
xchg
je
push
subb
sbb
clc
push
and
dec
int
lcall
mov
ret
lcall
cld
fmull
sbb
sbb
cmp
movsl
jg
or
mov
or
mov
adc
adc
mov
cmp
xor
bswap
xor
jbe
cmp
xor
adc
popa
into
stos
mov
sahf
xor
test
loop
imul
fsubr
pcmpgtb
lds
inc
iret
mov
fisubl
lods
test
xchg
sub
cli
mov
jo
mov
pop
sti
dec
aam
inc
test
out
loopne
push
mov
adc
add
inc
jmp
add
nop
xchg
cmp
dec
sbb
xor
sub
out
in
scas
sub
cs
mov
dec
nop
fldl
sub
and
insb
into
fnstcw
out
and
decl
push
out
testl
scas
push
stc
pop
pop
sti
and
push
out
pushf
pop
cmpsl
rcr
or
ja
iret
movsl
sbb
inc
movsl
xchg
jb
xor
je
enter
and
idiv
cltd
gs
jmpw
adcb
mov
xchg
rorl
lret
lea
mov
enter
orb
mov
pop
mov
sahf
mov
aam
mov
mov
push
in
cmpsl
inc
lock
mov
cmp
mov
mov
stos
and
mov
pop
xor
xchg
fcomp
push
aam
hlt
out
xchg
jmp
data16
xor
pop
das
or
pop
aas
ljmp
clc
lods
and
xchg
jge
or
push
je
mov
movsb
cmpsb
pop
add
mov
or
mov
add
dec
sub
push
int
repz
dec
sbb
addr16
lahf
add
pop
and
fwait
mov
push
add
mov
lcall
scas
or
ret
jl
or
outsl
or
and
idiv
jns
jmp
adc
addps
dec
lods
sbb
inc
xchg
decb
imul
jne
mov
call
bound
jne
in
stos
sbb
out
sub
sub
in
and
imul
fnstcw
xchg
xchg
mov
mov
adc
in
into
push
pusha
mull
xchg
jne
out
jmp
shll
bound
sbb
mov
mov
leave
jbe
stos
push
sbb
sbb
and
mov
lret
rcll
sbb
dec
sub
iret
fwait
stos
loopne
pushf
mov
or
fidivrl
arpl
sahf
adc
mov
fnstcw
outsl
ds
mov
outsb
xchg
adc
push
xor
mov
lods
mov
ljmp
and
test
imull
mov
xor
pop
push
ljmp
jge
cltd
xor
fisubrs
ds
lods
out
lea
int3
xchg
cmc
testl
cmc
xorb
loop
scas
scas
sub
and
clc
push
movsb
jecxz
js
xchg
shll
dec
rcrb
in
mov
mov
daa
inc
mov
push
jno
jg
jl
cmp
cmp
sub
movsl
mov
mov
dec
xchg
mov
push
push
sbb
adc
jl
pop
in
repnz
pop
pop
popa
js
addb
jbe
push
outsl
lret
scas
lea
outsb
mov
cmp
shlb
movsb
shr
inc
addb
sbb
lea
and
fmull
sub
js
das
out
lcall
hlt
fdiv
push
cwtl
sbb
lods
pop
sahf
sub
aad
sbb
sub
adc
mov
in
mov
rol
push
jnp
lea
mov
fsubr
inc
nop
imull
lahf
lret
insl
rcl
lret
mov
or
xor
xor
push
outsl
pop
cmc
ss
pop
xor
xchg
movsl
inc
fs
testb
cmp
mov
subl
cmpsl
jo
es
mov
xor
fmuls
mov
mov
stc
xchg
idiv
in
call
loopne
cmp
pop
cmpsl
xchg
inc
adc
mov
icebp
mov
inc
repz
add
xchg
std
out
sbb
insb
jnp
push
loopne
mov
sarl
jmp
xor
aad
pop
stc
nop
mov
xor
inc
es
fptan
imull
loop
jecxz
mov
jle
push
fcmovb
call
cs
ficomps
psubb
rcll
sahf
push
pop
jb
rolb
into
imul
mov
repz
push
jb
mov
dec
cwtl
clc
mov
rcll
xor
or
out
mov
popa
test
sbbl
movsb
lret
cld
clc
popa
mov
mov
loope
lahf
mov
out
mov
sub
sub
pop
sbb
insl
stos
mov
clc
cmpsl
inc
out
push
mov
adc
cld
pop
xchg
xchg
mov
into
in
mov
mov
dec
xor
shlb
fwait
call
lret
pop
sahf
mov
shrb
dec
and
add
pop
xchg
cwtl
into
cwtl
ljmp
test
mov
cs
shrb
fsubr
ljmp
push
dec
sub
lsl
sbb
dec
jge
cltd
pusha
sub
test
and
mov
add
pop
dec
cs
test
push
push
xchg
leave
sbb
rol
shl
lret
jbe
int
dec
fwait
jecxz
mov
sti
inc
pop
add
cmpsl
adcb
aaa
mov
push
or
xor
test
inc
or
mov
fnstenv
pop
lret
ja
cmp
aaa
inc
push
sahf
out
or
xchg
mov
out
jne
xchg
divb
jbe
sub
ret
jns
jle
in
mov
and
fildl
or
xchg
jp
nop
das
mov
mov
mov
push
add
jle
adc
pop
pusha
xchg
adc
fbstp
pop
or
in
lods
sti
xchg
sahf
cmpsb
dec
jae
movl
popf
adc
xchg
mov
or
arpl
flds
push
xchg
mov
scas
jecxz
movsb
push
cmpb
iret
cli
mov
push
pop
push
jmp
inc
in
sbb
rorb
gs
or
movl
movsl
xchg
insb
ret
xchg
sbb
jl
pop
iret
and
inc
mov
out
ret
repnz
inc
aaa
leave
rorl
push
cmp
jbe
call
add
cltd
dec
add
pop
add
mov
insb
mov
dec
mov
lock
cwtl
loopne
xor
mov
scas
mov
out
cmp
xchg
cmp
and
icebp
cmpsb
int
js
popf
dec
push
in
mov
inc
addb
pushl
sbb
pop
mov
xor
pop
cli
mov
push
sbb
lcall
dec
mov
and
js
adc
mov
push
mov
xchg
aas
sub
fwait
pop
sub
pop
fsubrl
flds
sarb
mov
sbb
repz
mov
and
jnp
int
push
jmp
xchg
sbb
push
and
fistps
sti
cmp
sahf
int3
es
test
add
jg
push
jno
mov
mov
xor
push
rcrb
adc
sub
pop
fsubs
outsl
mov
sbb
shrl
mov
mov
into
jo
mov
test
xor
cwtl
outsl
out
pop
loop
jp
stc
dec
add
fs
ja
adc
out
dec
pop
cli
icebp
out
ds
push
jae
loopne
js
test
mov
or
loopne
xor
popa
pop
adc
lret
loop
call
inc
pop
repz
sbb
clc
sbb
cmpsl
jle
xlat
cmpsl
jo
sub
dec
mov
cmp
or
and
cmp
aad
xor
nop
xchg
mov
dec
stos
inc
faddl
mov
fldcw
pop
cmp
ljmp
out
jle
mov
mul
lods
cmp
rcl
adc
stc
jmp
insl
addb
pop
pop
adc
and
inc
fldt
aas
xchg
cltd
jb
fs
cmp
and
gs
testb
cltd
cwtl
test
mov
inc
lahf
mov
sahf
insb
dec
jb
mov
imul
mov
push
mov
loop
lock
jle
jp
jecxz
dec
mov
mov
inc
ret
out
add
mov
dec
cld
gs
cmpsl
inc
jb
mov
ljmp
mov
icebp
test
mov
pop
outsb
mov
dec
sub
add
aam
sbb
jle
adc
mov
push
mov
adc
ljmp
cmp
stos
roll
xchg
xchg
mov
mov
add
dec
cltd
xchg
in
test
rolb
pop
mov
dec
imulb
test
jae
xchg
icebp
pop
sbb
inc
lods
rorl
outsb
pop
js
and
sahf
inc
ret
pop
addb
inc
lcall
adc
or
pop
lds
jno
aam
jle
adc
test
xchg
ja
inc
gs
mov
repz
jns
mov
xchg
orl
inc
jne
repnz
push
punpckldq
sub
ss
subl
mov
or
imull
movsl
scas
mov
mov
add
jnp
in
lcall
pop
mov
fists
xchg
sbb
xchg
jmp
imul
pop
push
mov
shrb
les
push
inc
pop
mov
and
sub
insb
repnz
popf
mov
fistl
lock
pop
rcll
pop
inc
dec
addb
arpl
xchg
and
inc
lret
insl
mov
add
ret
aaa
push
sbb
mov
in
data16
loope
setno
call
popa
jae
popf
adc
dec
jo
hlt
lret
push
mov
jbe
sub
data16
aaa
pop
daa
or
lcall
and
insb
xor
in
ret
adc
mov
adc
shlb
push
addr16
test
ror
stc
ret
inc
lds
jno
or
jl
loopne
cmp
pop
andl
and
inc
lahf
jge
adcb
pop
test
jl
mov
sbb
mov
jo
js
cmp
negl
loope
test
sub
sbb
sub
pop
push
xchg
xchg
sbb
and
push
add
into
cwtl
and
movsl
fwait
push
or
ret
mov
ss
inc
fmull
out
sub
dec
test
jp
orb
jg
sub
call
mov
adc
adc
std
cmp
bound
mul
mov
lret
xchg
roll
das
mov
fwait
or
lods
into
push
cmc
aaa
cmc
dec
add
adc
loopne
loop
iret
in
stc
add
dec
fs
push
adc
xchg
and
lods
pop
xchg
test
and
cli
and
pop
xor
push
sti
push
imul
ljmp
pop
in
scas
adc
inc
test
iret
ret
jmp
xchg
adcl
cmp
leave
repz
out
cld
sub
cmp
mov
cmpsl
push
push
jmp
xor
cs
rep
aad
insl
popa
nop
outsb
sub
mov
dec
fs
pusha
mov
dec
jecxz
repz
jmp
dec
call
sub
sbbl
jg
pushf
sbb
enter
xor
pop
and
fldenv
aas
xor
sti
jb
dec
add
xchg
loopne
das
outsb
mov
std
pop
fbstp
mov
ret
mov
stos
pop
mov
pop
rorb
addr16
fcmovb
xchg
mov
mov
mov
xchg
pop
push
pop
jne
mov
aas
jo
ret
jbe
out
adc
mov
loop
dec
testl
mov
roll
cld
jne
and
adc
xchg
and
inc
dec
and
lea
rcrb
inc
sub
xor
aam
mov
js
clc
rol
in
push
jns
ljmp
sub
cmpsb
mov
xchg
fimuls
test
add
cmpsb
cltd
into
inc
incb
xchg
test
pop
xchg
stc
test
gs
xchg
sbb
xor
or
inc
xor
add
push
nop
clc
push
xchg
xor
je
mov
cli
lahf
mov
popf
xchg
mov
inc
add
ja
leave
rorl
and
inc
dec
lea
mov
dec
lods
dec
lds
imul
fsubrp
bound
outsb
mov
in
fidivrs
cmpl
pop
out
sahf
mov
or
sti
xchg
movsb
xchg
cltd
jp
sbb
mov
scas
lcall
in
cmp
pusha
enter
je
sub
rcll
xchg
mov
jmp
sahf
push
xchg
shlb
pop
jnp
insb
pop
popa
cli
imul
push
adc
mov
iret
mov
test
jl
jl
sti
push
xlat
arpl
inc
or
mov
sbb
fcmove
push
mov
sbb
rorl
sub
rcrl
rolb
jb
add
repnz
leave
shl
hlt
adc
mov
das
in
sbb
inc
in
iret
inc
or
in
ret
int3
push
sub
dec
xchg
roll
push
pop
xchg
shll
aas
int
scas
dec
lea
and
fwait
cmp
bound
ds
push
in
imul
hlt
sub
inc
mov
cmp
scas
adc
lods
mov
cmp
int
movsl
iret
call
push
lahf
pushf
clc
movsl
push
ret
out
sub
inc
fldenv
jmp
into
xchg
jg
js
repz
ss
push
inc
xor
sub
jo
cwtl
repnz
test
popa
outsb
loop
hlt
adc
repnz
lock
cmpb
sbb
jmp
pop
push
adc
or
in
int
cwtl
jne
jl
mov
lcall
je
clc
cmp
pop
cmpsb
xor
adc
test
test
jg
inc
out
mov
or
mov
mov
lods
ss
push
movsl
cmp
sbb
jle
lret
and
xchg
aas
orb
loope
ss
int
adc
push
xor
sbb
outsl
movsb
pop
xchg
loop
pop
or
mov
mov
adc
js
lods
inc
add
mov
cli
push
cs
xor
push
lock
push
jnp
decb
fs
sub
push
pop
add
sub
imul
xchg
pushf
repz
pop
xchg
inc
lcall
sbb
loope
sub
nop
mov
adc
insb
jmp
test
cs
mov
add
push
je
fsts
mov
jecxz
repz
and
lea
mov
and
sbbb
ret
lods
push
pop
pop
test
inc
sub
fwait
in
aas
sarb
fwait
jb
addr16
std
sbb
mov
mov
loop
add
mov
xchg
rorb
sbb
mov
lret
dec
rcl
mov
js
in
scas
lock
lds
mov
push
mov
and
test
ds
daa
fs
pop
dec
push
repnz
mov
mov
cwtl
xchg
mov
mov
aaa
cmp
fdivl
adc
lods
jecxz
shrb
xor
mov
mov
sub
and
xchg
lods
xor
lahf
fcompl
clc
or
sub
mov
adc
xchg
stos
lahf
or
adc
xchg
xchg
and
sbb
mov
ret
clc
lods
cltd
add
hlt
or
cwtl
test
jmp
push
sbb
dec
push
sar
stc
xor
mov
push
in
pop
add
clc
mov
xchg
in
std
xor
out
or
mov
sbb
imull
adc
mov
jb
js
dec
inc
jecxz
hlt
or
mov
call
cmpxchg
xchg
add
adc
into
xchg
lret
jo
in
in
and
out
scas
mov
mov
xchg
andl
out
push
mov
push
push
mov
pop
or
jle
fstl
pusha
arpl
or
xchg
push
js
shrl
jmp
lcall
adc
sub
xchg
popf
mov
mov
lds
stos
push
cmp
and
in
in
enter
jnp
pop
scas
or
cmp
cmp
mov
ror
pop
or
ret
pop
mov
mov
cltd
arpl
in
outsb
inc
outsb
pop
push
ds
subl
and
sbb
fidivrl
cld
xchg
jno
pop
sbb
mov
pop
fisubrs
rcrb
pop
mov
inc
dec
or
cmp
ret
jg
push
es
and
adc
jge
sbb
aaa
xchg
cld
mov
xchg
sub
add
arpl
add
gs
inc
pop
xor
lcall
and
push
cmp
push
movsb
cmovbe
int
pusha
cmpsb
push
int3
aaa
in
push
mov
js
inc
fistpl
test
mov
cmp
lret
jmp
movsl
add
lahf
mov
lret
das
bound
in
mov
test
pushf
js
inc
mov
push
inc
outsb
loope
xlat
or
add
xchg
out
outsb
inc
in
unpckhps
andb
int
test
fidivl
mov
push
push
and
inc
xchg
push
movups
sub
les
sub
or
icebp
push
daa
mov
stc
sbb
pusha
mov
pop
arpl
jg
pop
xorl
pop
fnstenv
loopne
ss
mov
fcmovu
fmul
aam
fs
or
cs
jg
sbb
pop
into
sbb
lods
xor
shrl
faddl
stc
outsl
call
sbb
adc
lods
sub
aam
dec
mov
out
dec
jb
mov
xor
ds
pop
push
sti
mov
cli
jno
add
and
loopne
xchg
xchg
pop
and
enter
adc
outsl
and
or
sbb
pop
sbb
xlat
fildll
mov
jge
or
repnz
aad
or
nop
and
cs
pushf
push
inc
jb
sbb
or
les
testl
out
js
icebp
dec
loope
cmc
xlat
dec
sub
xor
gs
adc
add
fcomi
ss
popf
xor
je
inc
sub
jnp
outsl
xchg
xchg
jb
mov
dec
je
loopne
push
shl
ror
dec
xor
dec
push
mov
cwtl
daa
add
lock
dec
int
xor
push
mov
cmp
mov
ljmp
inc
jnp
sbb
sub
push
aaa
pushf
ret
xchg
mov
es
pop
insl
inc
pushf
push
dec
in
stc
cmpsl
inc
adc
icebp
outsl
dec
cmp
jle
inc
mov
mov
pop
xchg
or
pop
lret
jl
sar
lret
dec
sub
push
mov
push
pop
ret
cs
inc
insb
clc
inc
pusha
mov
adc
in
popa
dec
loop
lods
cmp
stos
mov
out
jbe
stos
xchg
insb
pop
leave
push
mov
movsl
xchg
add
in
test
mov
mov
adc
dec
sub
xchg
and
out
jno
push
push
fistps
jmp
push
xchg
cmp
adc
sbb
xchg
bound
or
fs
xchg
into
xchg
cmp
iret
mov
mov
lds
bound
pop
imul
rorb
inc
aaa
mov
dec
mov
mov
pop
cmp
repnz
popa
jmp
xor
xlat
dec
roll
fdivs
fsubrs
int3
mov
out
jp
jne
mov
lret
jbe
aam
or
mov
in
pop
jnp
xchg
outsb
fbstp
mov
jmp
lret
jae
push
inc
push
jmp
negl
jne
push
push
add
cmp
xchg
add
icebp
insb
xor
fildll
movsl
ret
scas
outsl
push
ret
push
sahf
xor
adc
cs
ret
iret
pop
ljmp
arpl
shlb
jo
or
mov
mov
fidivl
sbb
xchg
enter
les
pop
mov
fimuls
pop
lds
stc
mov
xchg
mov
leave
scas
repnz
stos
mov
jmp
imul
sbb
lods
js
mov
incb
cmp
int3
sub
dec
jo
inc
push
and
jne
nop
jo
int
scas
or
les
sbb
movsb
lcall
cmpsb
fldcw
enter
daa
inc
lods
mov
xchg
arpl
jl
lea
sbb
inc
movsl
fldl
mov
push
imul
hlt
push
fisttpll
xor
stc
mov
dec
push
js
and
push
cld
fsub
pop
ss
sub
cltd
mov
outsb
test
lods
adc
test
xor
scas
testl
add
cwtl
loopne
idiv
clts
adc
int
outsl
das
sub
sbb
stos
and
mov
fmull
sbb
mov
test
mov
out
or
clc
mov
add
mov
cmp
xchg
mull
sahf
adc
in
sub
mov
out
fimuls
lods
xchg
bswap
cld
shrb
add
xor
loop,pt
or
fs
sub
mov
jg
lods
adc
in
out
std
add
mov
jbe
cmp
or
sti
fs
xchg
cmp
loopne
fcoml
inc
mov
push
imul
xor
add
inc
arpl
xchg
and
mov
push
or
call
cs
mov
shll
incl
cmp
sar
test
icebp
flds
mov
jecxz
mov
mov
jo
loopne
test
std
push
adc
pushf
sbb
rcr
xchg
inc
call
sbb
fidivl
cmp
jmp
sub
lret
pop
insb
testb
cwtl
loop
fs
testl
dec
jns
dec
push
jge
lret
daa
aaa
dec
mov
roll
das
cli
adc
das
adc
arpl
sbb
es
call
enter
sub
mov
inc
pop
aam
idiv
nop
mov
jge
in
and
adc
into
pop
ljmp
sub
pusha
add
sbb
mov
clc
orl
popa
rolw
mov
and
mov
jne
xchg
jbe
pmaxub
add
sub
push
mov
adc
xchg
test
mov
xchg
addr16
sbb
int3
cmpsl
pop
and
ds
into
cmp
add
or
aad
inc
xor
adc
xor
or
xchg
rcrb
mov
sub
pop
jno
shll
js
dec
pop
xorb
adc
dec
mov
adc
dec
outsb
pop
je
test
mov
mov
out
shll
hlt
je
jns
inc
inc
in
push
repnz
adc
pop
sub
xchg
or
jg
addr16
jp
mov
mov
stos
push
mov
mov
jnp
in
sub
or
addr16
cmp
movsb
cld
push
scas
mov
gs
inc
push
mov
and
insb
sahf
cmp
pop
xorl
in
in
insl
addr16
iret
aad
loope
push
and
inc
sbb
push
arpl
cld
daa
inc
je
jno
or
ss
imul
xor
or
pop
mov
rol
popl
push
sub
mov
jmp
data16
hlt
testb
les
mov
sbb
das
aaa
adc
jae
jnp
mov
pop
mov
lcall
ret
sysexit
pop
cmpsl
jo
insb
shrb
out
cmp
mov
enter
mov
in
and
pop
enter
daa
inc
add
lret
cmp
fdivrs
cmp
call
push
movsl
in
mov
lahf
stc
dec
fwait
push
cmp
mov
sbb
xchg
jle
and
add
sbb
repz
shll
jno
jl
fldcw
sbb
adc
adc
sbbl
xorb
mov
jg
pop
and
bound
int
xor
sub
pop
xchg
pop
sub
xor
aad
mov
stc
xchg
dec
sbb
orl
sub
cmp
jg
xchg
or
movsb
je
mov
test
adc
stos
lret
ss
xchg
repz
dec
mov
mul
repz
xlat
ja
rcrl
out
sbb
or
jg
into
fucomip
fdiv
and
xor
out
outsl
inc
call
xchg
stc
frstor
fs
addb
push
dec
popfw
xor
inc
aaa
inc
out
xor
cli
lock
or
cmp
int
sti
adc
mov
xchg
gs
xor
cmp
pop
popa
lcall
mov
add
test
pusha
fstpl
into
mov
jne
mov
pop
mov
jmp
fwait
push
test
aad
cmp
nop
fcmove
rorl
and
fmull
cmp
fadd
and
jecxz
mov
cmc
test
lea
cld
and
sub
jae
aas
dec
pop
adc
add
pushf
les
fistl
daa
pop
inc
lods
mov
lahf
mov
cld
fstpt
lods
push
pop
jb
icebp
xchg
dec
std
mov
pushf
out
insb
shrl
cmp
iret
inc
push
std
testl
mov
insl
loop
je
jle
loop
cmpsb
dec
or
dec
lret
xchg
addr16
xchg
les
std
adcb
pop
out
sub
jp
imul
mov
pop
es
ja
insl
adc
and
dec
or
pop
addl
sbb
out
and
mov
push
pop
negl
or
mov
cltd
fwait
inc
aam
ret
stos
mov
fistpl
loopne
push
clc
mov
outsb
ljmp
in
push
arpl
out
cmp
xchg
cli
mov
mov
add
sbb
test
js
or
enter
les
push
std
test
xrelease
leave
sbb
roll
insb
cld
pop
iret
test
pop
push
int
xor
dec
das
jb
je
xor
xchg
fimull
pusha
rclb
iret
fnstcw
mov
xchg
loope
rcrl
sub
xlat
ja
adc
dec
push
pop
jecxz
test
jbe
fs
mov
dec
push
jle
jne
xchg
loop
xor
cmp
mov
mov
jns
es
in
adc
xorl
out
xchg
pop
sub
ret
addr16
jp
mov
je
int3
cmp
add
cmp
or
gs
imul
and
xchg
pusha
mov
adc
and
jno
and
data16
sbbb
arpl
jl
or
jmp
dec
and
jbe
sub
icebp
adc
mov
ret
pop
pop
into
xchg
inc
daa
scas
lods
arpl
push
inc
ja
mov
jae
xlat
push
call
mov
xchg
jbe
loop
sbb
pop
jmp
or
lds
xchg
std
mov
cmp
leave
leave
popf
jge
hlt
inc
sub
push
adc
ret
jbe
push
jge,pt
pop
mov
sti
sub
aaa
rcrb
sbb
scas
lahf
inc
int3
pop
adc
push
ljmp
jo
push
mov
and
jecxz
mov
or
sti
test
pop
daa
push
daa
inc
fucompp
cmp
out
jno
in
jl
jns
cmp
fidivrs
xor
cmpsb
movsl
jmp
cltd
and
sarl
sbb
push
setbe
test
jae
cmp
and
cmc
mov
sub
pop
xor
add
xchg
loope
pusha
xor
nop
or
outsb
outsb
xchg
cs
pop
out
je
insb
dec
mov
sbb
in
mov
shll
cmp
int
cwtl
sub
mov
test
pusha
lcall
fsubl
and
sahf
or
call
fdivl
sbb
add
jbe
bound
jne
adc
dec
mov
lret
dec
shl
fmull
sub
into
ret
cmc
mov
aad
and
rolb
fbld
xchg
add
push
loope
loope
insb
mov
push
or
pop
in
sbb
and
aam
fistpll
cmp
sti
ret
fidivl
cwtl
loopne
stos
xchg
pop
cmpb
and
scas
imul
pop
xchg
xchg
das
xchg
cmp
out
pop
xlat
and
push
sub
jae
mov
mov
pop
pushf
cs
inc
aad
push
jne
in
mov
stos
mov
rol
mov
out
clc
cmp
lea
sti
lret
in
mov
cmp
adc
cmp
outsl
hlt
lret
jae
pop
out
daa
inc
testb
jge
push
aas
dec
mov
ljmp
cli
mov
mov
add
std
sahf
sahf
stos
cwtl
pop
outsb
ds
push
jmp
dec
hlt
xchg
dec
lret
add
xor
add
sbb
mov
cs
and
xlat
popa
ret
inc
mov
mov
loopne
dec
fmulp
cmp
nop
stc
push
icebp
hlt
cmp
mov
ret
push
mov
mov
sub
sarb
sub
jp
mov
mov
add
clc
mull
imul
insl
cmp
popa
xchg
and
lods
jns
sub
lahf
adc
inc
add
dec
and
shlb
loope
daa
test
dec
mov
sbb
xor
sahf
aaa
test
enter
cmp
rcll
dec
pop
jp
and
jo
je
js
inc
add
call
imul
addr16
adc
xchg
outsb
cmc
mov
mov
out
test
sub
dec
inc
in
sahf
inc
aas
fstps
dec
mov
shrl
xor
sub
inc
inc
mov
and
out
jnp
bound
sub
jo
mov
addl
sbb
mov
fildl
mov
ds
sbb
jle
jmp
inc
pusha
iret
dec
push
fisttps
shl
xchg
or
dec
or
or
popf
and
jge
push
shrl
ljmp
insb
je
ja
aaa
mov
scas
cwtl
fiadds
push
jae
bound
and
daa
iret
xchg
lods
add
popl
push
inc
xor
push
inc
jp
mov
fidivrl
push
addr16
fimull
push
xchg
int
jmp
lds
in
cmp
lds
out
rorb
pop
repnz
and
mov
mov
push
bound
jbe
push
jle
jb
cmpsl
sbb
xlat
popa
in
add
lods
int3
jmp
and
push
int
enter
jo
in
scas
cmpsl
das
das
and
xor
adc
inc
or
cmpsb
bound
scas
in
out
adc
daa
aas
aaa
loope
sub
loop
jnp
mov
ds
in
push
movsl
repnz
and
xchg
mov
inc
bound
ds
cmp
add
imul
inc
fists
jno
push
push
pop
xor
lahf
sub
sub
dec
inc
sub
shrl
or
in
dec
sarb
push
gs
lret
stc
mov
jge
les
mov
sbb
xchg
pop
daa
sub
lret
daa
loop
lcall
xchg
dec
fwait
push
sahf
inc
pop
cmp
icebp
stos
sarb
fisttps
add
push
mov
jmp
adc
push
movsl
cmp
les
int3
lret
inc
rorl
mov
stc
cltd
xlat
into
movsl
and
cmc
cmc
test
xor
add
stc
dec
imul
ds
roll
dec
daa
mov
mov
lcall
push
sub
push
sbb
cmp
int3
ret
inc
imul
adc
add
pop
lahf
data16
notl
imul
push
xchg
xchg
adc
imul
inc
mov
xlat
pusha
add
sub
shr
sub
dec
jmp
addr16
cs
push
out
xchg
stc
ret
xchg
add
inc
mov
popa
aaa
les
dec
sbb
xchg
fs
sti
pusha
jge
loope
jl
es
pop
movsl
cld
mov
jns
movsb
pushf
sbb
pop
mov
inc
cwtl
neg
aas
jmp
int
mov
je
je
pop
rcl
or
notb
stos
std
inc
xlat
dec
cwtl
adc
jo
pop
mov
enter
fmull
imul
mov
mov
sahf
dec
lock
ss
xchg
mov
mov
and
mov
ret
rorb
insl
loop
push
dec
je
ja,pt
mov
lret
jnp
cld
ja
cwtl
mov
out
inc
and
jecxz
push
pop
inc
or
dec
stos
sub
test
mov
test
push
data16
push
clc
xor
pminsw
out
popa
stos
jle
lods
in
test
dec
andb
lods
dec
push
daa
xchg
out
psubq
add
aad
cltd
sbb
test
mov
sbb
orl
mov
and
addl
and
or
adc
adc
and
jg
adc
xor
or
xor
jo
xchg
mov
lret
dec
mov
mov
lret
icebp
dec
aaa
xor
or
inc
xchg
mov
mov
push
jne
pop
in
ljmp
bound
aam
in
and
adcl
sub
mov
fstpt
jo
out
and
and
rcrb
pop
pushf
jae
push
sbb
cmp
xchg
loopne
sub
movsb
adc
push
jae
and
ret
fisttps
mov
add
sub
xchg
inc
mov
sahf
imul
inc
scas
sti
dec
inc
push
mov
adc
repnz
inc
mov
inc
cmp
adc
or
lahf
lret
test
ret
sbb
xchg
and
mov
pop
inc
cmpsl
pop
faddl
shlb
mov
loop
dec
leave
mov
fistl
sbb
nop
jge
mov
jno
xorb
cwtl
and
push
xchg
mov
int3
aam
stc
dec
sub
push
push
mov
inc
xor
popa
mov
jb
mov
jne
cmc
stc
movsb
mov
adc
aad
stos
enter
daa
sbb
cmp
shll
push
jl
mov
cmp
add
movsl
stc
pusha
push
and
addr16
lahf
push
mov
popa
test
or
pop
xor
xchg
pop
jbe
adc
je
pop
mov
sub
loope
sbb
sub
fldt
je
adc
adc
jne
sub
sti
sbb
out
and
xorl
ret
lock
int3
xor
pop
decb
lcall
add
cli
pop
negb
jae
mov
in
lock
lcall
or
inc
jg
or
push
movsl
and
or
lret
mov
mov
call
daa
adc
jg
mov
pop
or
push
shll
lret
mov
int
into
mov
aam
mov
sub
outsl
ficoms
fdivrp
add
inc
fs
cli
out
fdiv
xor
std
aas
lods
scas
fs
mov
in
push
cli
mov
xor
lea
jnp
and
sbb
sbb
pop
mov
addl
repz
mov
fdivrs
jmp
cmp
aas
xlat
lahf
xchg
sub
test
mov
xchg
add
popf
jae
lods
mov
sbb
mov
sbb
fabs
nop
test
jecxz
xchg
cld
or
pop
mov
movsl
pop
es
pop
fs
adc
sbb
wbinvd
fcmovnu
outsl
sub
push
inc
add
push
inc
mov
ljmp
dec
xchg
dec
movsl
dec
je
psllq
pop
sbb
cwtl
out
std
in
repz
das
ljmp
cmpsl
xchg
xchg
dec
lret
lret
jecxz
insl
mov
add
das
jbe
push
mov
push
out
shll
push
pop
lods
inc
cmpsl
fisubrl
leave
orb
lea
cmp
add
mov
leave
aad
lods
inc
ljmp
insl
test
data16
rcrb
movsl
scas
sub
mov
out
jecxz
mov
cmc
add
cld
xor
mov
mov
ljmp
mov
stos
cmp
out
gs
xchg
iret
cmp
push
add
xor
pop
or
add
push
cltd
dec
mov
test
loopne
xchg
scas
call
test
das
ds
sbb
jns
add
mov
fwait
mov
inc
push
mov
insb
add
lcall
xor
sbb
or
mov
xor
mov
push
pop
pop
daa
fwait
ja
out
jns
sub
add
or
fstps
lahf
rorb
dec
cli
cmpsl
mov
mov
loopne
out
dec
mov
jo
fisubs
lcall
popl
or
pop
xchg
jp
movsl
jno
clc
xchg
xchg
mov
js
int
xor
sbb
push
xor
xchg
fisttps
fstl
fwait
test
jae
addl
jae
out
mov
aas
lea
rolb
cld
insb
dec
hlt
push
imul
addr16
add
xor
fstps
lret
iret
push
push
jb
pop
jo
pop
std
gs
dec
gs
sbb
xchg
mov
push
xlat
rcr
xchg
jnp
sbb
fwait
xor
fidivrs
xor
inc
int
rol
push
mov
xor
pushf
push
hlt
and
sub
add
jbe
cmpsl
movsl
jge
pop
dec
sbb
inc
aaa
paddusw
inc
cli
sub
jae
jne
mov
insb
scas
push
xchg
push
jb
repnz
fbstp
lods
pop
scas
gs
mov
cmp
xchg
ja
cmpsb
push
cltd
ret
cmp
daa
cmp
je
jno
jecxz
jl
xchg
mov
ds
movsb
mov
and
dec
jg
jne
lds
xor
scas
push
aam
cmp
xchg
cmc
add
mov
popf
fldenv
or
nop
pop
out
subb
and
sub
daa
sub
movsl
out
outsb
xchg
shr
adc
out
fs
cmp
dec
sbb
pop
push
add
into
fisubl
inc
mov
push
and
int
push
sub
fld
add
and
or
push
xor
les
mov
nop
pop
test
repz
dec
jg
cmp
mov
pop
dec
mov
jge
adc
dec
ss
sarb
cmp
sub
fidivs
lret
jecxz
mov
adc
imul
cmpl
jae
outsl
mov
int3
lret
add
fs
stos
test
imul
test
lods
xchg
adc
out
xor
xor
cmp
sbb
sti
iret
pop
mov
inc
adc
and
inc
loopne
jae
pop
fldl
adc
pop
sbb
daa
cmpb
in
ljmp
nop
mov
mov
test
sub
mov
fldpi
mov
adc
rcl
dec
icebp
nop
inc
lods
jns
add
fstp
sbb
dec
insl
test
movsb
arpl
movb
lea
fwait
call
and
sahf
pop
or
adc
xchg
addr16
sarb
add
mov
repnz
sub
push
pop
inc
dec
jnp,pt
je
pop
lahf
shll
add
mov
mov
jo
mov
mov
dec
mov
stos
lret
push
cltd
jbe
test
ss
sbb
das
push
out
mov
pop
movsb
and
insb
daa
ret
out
adc
sub
ljmp
sub
iret
int3
mov
mov
jns
sub
int
push
mov
sub
mov
sbb
aaa
shl
shrb
aam
xchg
shlb
in
leave
and
mov
cltd
clc
test
inc
xchg
push
ret
mov
pop
cmpsl
popa
fldenv
stos
sub
mov
enter
push
cs
push
fnsave
add
xor
cltd
xchg
test
xor
adc
and
xchg
dec
xchg
mov
push
xchg
sbb
add
pop
push
mov
pop
fwait
mov
testb
mov
test
lock
xor
or
test
sti
push
fcoml
int3
iret
xchg
mov
sbb
bound
xchg
lock
sbb
ljmp
push
stos
repnz
fstpl
mov
out
sub
call
jns
adc
in
cmpl
mov
adc
ljmp
or
addr16
outsl
mov
and
inc
jnp
cwtl
jle,pn
mov
in
xor
pusha
mov
sbb
xchg
xchg
push
jmp
mov
mov
popf
lcall
push
jle
je
inc
mov
and
xor
imul
push
dec
lcall
mov
rol
xchg
pop
xor
repz
push
dec
stc
arpl
sahf
inc
andl
wbinvd
sbb
and
inc
in
cmp
fs
je
shlb
pop
pop
movsl
out
pop
fisubs
xorb
push
xor
mov
mov
leave
jns
pushf
hlt
insl
sti
pop
push
dec
outsb
jbe
add
jge
mov
aaa
into
movsl
cltd
or
adc
add
xchg
scas
int3
stos
rcrl
or
js
mov
mov
scas
inc
hlt
out
and
scas
cld
cmp
lcall
jge
cmpsb
jmp
scas
in
mov
inc
pop
daa
cmp
cmpb
pusha
mov
sbbb
arpl
cmp
cmp
ds
test
cmc
lahf
xchg
and
push
pop
jge
test
lahf
cwtl
xor
scas
dec
pop
arpl
or
pop
sarb
add
ret
insl
cmp
and
outsb
cli
and
ror
or
adcb
xor
and
call
and
loop
and
dec
int
push
jp
push
and
lcall
sub
push
pop
test
shr
mov
test
pusha
add
inc
outsb
mov
mov
pop
xor
dec
and
outsb
pop
sub
mov
cld
fdiv
add
negl
or
call
or
push
into
dec
adc
cmc
dec
mov
into
and
outsl
pushf
lret
adc
stc
jo
cmpsb
fildll
js
sub
lods
jge
xlat
mov
xchg
push
out
std
dec
cli
out
inc
clc
xor
cmp
pop
sti
jle
fwait
popw
adc
mov
loopne
xor
pop
cld
ss
adc
inc
imul
iret
pop
xchg
pop
adc
sbb
cmc
jb
xlat
sbb
lods
mov
dec
mov
inc
jmp
xlat
pop
jae,pn
pop
aad
add
mov
inc
testl
pop
cld
xlat
jecxz
sbbl
xchg
fmuls
push
ja
mov
dec
mov
pushf
sbb
fstpt
stos
pop
jae
inc
inc
adc
jge
jmp
jae
jb
xchg
les
hlt
mov
shl
lods
shl
cltd
sar
cmp
xor
inc
mov
test
aad
arpl
das
lret
rol
mov
jge
sbb
add
clc
iret
das
xor
add
mov
inc
dec
ret
jge
mov
lods
or
insl
xchg
mov
dec
lret
cmpsl
cmp
inc
mov
push
sbb
cld
clc
sub
mov
dec
outsl
test
mov
movsb
sbb
rol
xor
sub
aam
popf
stos
mov
pop
cltd
push
scas
or
fst
cmc
adc
xchg
dec
sbb
cmp
or
insl
mov
ret
lods
out
sub
lea
arpl
sbb
add
jl
mov
in
mov
and
jecxz
test
out
xchg
adc
shll
fs
push
cld
js
add
rorb
add
cmpsl
js
or
enter
push
pusha
mov
andb
roll
ja
ret
adc
inc
fwait
aaa
ja
sti
js
mov
sub
xchg
cs
mov
out
xlat
out
or
lcall
es
in
xor
inc
inc
inc
out
jp
sub
test
repz
jp
fmuls
mov
mov
sub
in
xchg
cli
pusha
cmp
xor
mov
mov
mov
xchg
push
dec
dec
jae
or
push
inc
push
into
popf
roll
adc
pop
push
mov
ds
and
loop
and
imul
scas
and
es
jb
iret
jg
mov
imul
xorl
xchg
dec
push
arpl
xchg
sub
sbb
fisubrl
aam
cmp
les
pop
shl
push
mov
fildl
leave
lock
hlt
mov
cld
push
jbe
into
xchg
jge
loope
sbb
repnz
add
xorb
lds
subb
jb
stos
scas
and
xchg
cmp
xchg
movsb
addr16
inc
inc
enter
cmpb
scas
or
loopne
daa
cmp
mov
jno
inc
lds
xor
loop
inc
loope,pt
insb
movsl
push
jecxz
and
pop
and
cs
ds
push
sbb
xor
pushf
pop
jmp
cld
js
subl
jae
adc
sti
mov
movsl
sub
scas
hlt
outsb
pop
push
jp
movsl
ret
inc
fildll
sbb
ljmp
jo
push
daa
cmp
sub
adc
and
negb
mov
sti
popf
in
add
cmc
sahf
int
adc
pop
jnp
jg
movsl
or
outsb
adc
adc
push
ss
idivb
mov
jns
pop
lret
mov
shl
decl
dec
into
xor
ret
add
xor
aas
push
outsl
jnp
mov
scas
push
stc
daa
cs
fs
pop
add
fnstsw
lods
sbb
out
dec
loop
and
xchg
cmp
mov
inc
decb
leave
xchg
loopne
or
sbb
cmp
inc
add
adc
mov
fistl
push
inc
stos
cmp
xchg
xlat
pop
popa
xor
jo
and
aad
scas
jmp
das
inc
cs
cmpsl
push
aad
rcll
mov
sub
les
sub
ret
movb
or
int
ret
insb
mov
rcrl
pushf
outsb
mov
imul
pop
push
mov
pop
inc
add
cmpsl
aas
addr16
mov
add
adc
je
and
roll
mov
std
loope
hlt
cwtl
incl
push
mov
or
mov
sub
dec
mov
lret
xor
out
jecxz
lock
sbb
das
adc
mov
jne
mov
ret
or
inc
xor
insl
jle
std
dec
lds
imul
daa
out
aad
and
fistpll
jb
scas
and
dec
leave
pusha
pop
ret
aad
rclb
stos
dec
aam
clc
add
pop
je
push
jb
lahf
jp
clc
push
repnz
xchg
mov
mov
pop
fsubrl
or
out
mov
xchg
movsb
ds
push
xchg
es
add
clc
cltd
hlt
push
mov
mov
xchg
push
insb
dec
arpl
push
test
mov
mov
rorl
sbb
pop
rorl
fwait
pop
mov
push
lahf
out
flds
jmp
inc
ljmp
jecxz
xor
je
or
dec
xchg
xor
lea
xchg
stc
xchg
or
stos
pop
std
pop
mov
fdivl
jb
dec
add
inc
xor
xor
in
test
dec
mov
mov
jb
ljmp
jns
fbstp
in
xor
adc
lcall
mov
or
out
cmp
xorb
movsb
push
jnp
jg
jle
stos
xchg
in
pop
inc
pusha
pop
and
stos
or
xchg
sub
add
subb
jae
xor
push
add
popf
call
xchg
push
cld
and
stos
sub
aaa
insb
mov
sti
imul
movsb
scas
xchg
adc
iret
outsb
sarl
pop
mov
adc
arpl
roll
mov
mov
in
loop
push
fcmove
pop
cmp
sbb
sub
add
fisubs
ret
xchg
adc
adc
lret
repnz
dec
leave
addr16
hlt
add
in
into
bnd
psrlq
sbb
sbb
xor
dec
ret
js
and
add
jecxz
int3
addb
dec
call
cmp
xor
int
cmp
incb
stc
cmp
jbe
movsb
repnz
aam
xor
jno
sbb
ret
daa
cmp
in
sub
jno
mov
cmp
fbstp
movsl
adc
jge
lahf
rclb
push
test
xor
rol
out
pop
adc
push
js
add
scas
push
pop
shl
adc
mov
sub
fld
outsb
shlb
rolb
mov
ja
nop
mov
add
js
and
jae
sub
int
push
sub
pusha
pop
mov
mov
push
ss
cmpsb
mov
sbb
stos
jae
jo
mov
cmpb
jg
loope
mov
mov
in
mov
mov
cmpsb
adc
into
mov
hlt
mov
xor
imul
negl
mov
jo
jge
mov
pop
jge
or
add
adc
mov
fcomp
enter
insl
outsl
pop
bt
inc
in
stc
fidivrs
andb
add
fstpl
xor
push
out
sbb
stos
xor
hlt
mov
in
and
fdivl
je
lods
add
gs
inc
lcall
sub
imul
repz
and
xchg
in
dec
sbb
imul
sub
orl
in
inc
aad
jmp
dec
add
cmp
aad
stc
stos
mov
dec
push
je
inc
sbb
mov
les
sub
or
add
dec
mov
mov
or
sub
and
cwtl
add
push
mov
pop
inc
mov
push
imul
dec
mov
sub
rcll
push
std
mov
cwtl
mov
sbb
jp
add
push
dec
jbe
outsb
lret
lahf
push
mov
outsl
add
jp
push
das
repnz
pop
push
mov
cmp
jl
fwait
xlat
lods
es
adc
jbe
dec
rolb
cmpsl
cmp
mov
in
cld
dec
fiaddl
push
ror
and
ljmp
shrb
and
aam
cmpsl
mov
sarb
xor
in
clc
pop
mov
shr
pop
xlat
dec
popa
push
insb
dec
lods
sti
jb
stos
cmc
sbb
out
icebp
stc
push
xchg
jmp
add
std
stos
add
lcall
push
test
push
xchg
sbb
dec
lret
test
in
mov
loope
mov
shll
pusha
pop
jl
and
inc
pop
js
mov
pop
hlt
dec
mov
out
or
cmpsb
add
xchg
cmp
mov
dec
stos
in
ja
cmpsb
dec
dec
testb
inc
leave
ds
or
push
dec
dec
xchg
int3
jne
stos
mov
leave
and
bound
cmp
sbbl
out
xor
aad
lahf
dec
dec
addr16
xchg
sarl
mov
mov
xor
leave
jle
adc
in
andl
mov
xchg
ljmp
jmp
in
jg
jae
mov
sbb
mov
push
cmp
lret
in
and
or
imul
scas
ljmp
adc
test
int
inc
ret
push
pop
int3
inc
je
out
pop
fstpl
or
push
add
inc
popa
push
push
fidivrl
and
imul
lds
int
sub
movsl
mov
orl
daa
push
cmp
jp
mov
jge
cmp
sbb
test
or
or
adc
stc
int3
imul
push
mov
pop
mov
jo
das
mov
and
cld
movsb
jge
sbb
arpl
pop
cmpsb
je
in
pop
push
or
mov
cmp
cmp
jno
cs
cmp
int3
ds
test
movsl
sbb
out
cmp
add
mov
aad
stc
push
add
pop
xor
pop
xchg
xchg
sub
js
sbb
push
adc
sub
dec
sub
push
cmp
in
enter
iret
call
pop
jo
popl
lods
ss
jo
add
scas
lret
and
loope
sub
dec
clc
sub
stos
lret
inc
les
lea
jecxz
push
xchg
inc
sbb
or
gs
pop
adcb
xorb
push
cmp
jo
dec
ss
je
cmp
mov
aas
lret
inc
rcll
mov
push
into
negl
inc
xor
mov
outsl
cmp
xchg
stc
xchg
out
xorb
data16
push
lods
xor
jmp
sbb
cli
mov
push
xor
push
fstpt
cmpsl
stos
sti
mov
xchg
sbb
ds
in
pop
pop
sub
jmp
lds
push
inc
dec
repz
rcrb
push
inc
sub
mov
in
stos
jnp
jmp
sub
pushf
or
aad
xchg
loop
mov
repnz
jge
inc
inc
xor
add
jns
mov
loopne
dec
or
mov
scas
and
cmp
add
pushf
sbb
pop
fcmovne
int3
repz
pop
or
inc
cmp
jns
movsl
jmp
push
dec
sbb
sbb
jbe
jecxz
add
out
dec
std
das
ffreep
cwtl
jne
cs
mov
mov
incl
popa
cmc
mov
push
jecxz
mov
sub
clc
lock
dec
das
shll
mov
jecxz
ja
ret
lret
sub
cmp
dec
lods
jne
mov
add
vpmullw
cmp
jns
mov
pop
std
dec
mov
mov
cmp
pop
add
cmp
jnp
aam
test
jge
clc
mov
fisttpll
clc
xchg
push
xor
or
ljmp
push
lods
pushw
test
out
push
and
push
dec
call
aaa
add
ret
mov
test
mov
cs
xchg
dec
xor
and
in
mov
pop
daa
fcmovbe
fwait
jne
test
add
and
lret
bound
xor
inc
cmp
adc
xchg
xchg
loop
mov
dec
lods
mov
add
ja
cmp
dec
jmp
clc
add
push
cli
mov
mov
dec
imul
add
test
jbe
pop
subl
in
xor
pop
out
inc
arpl
lcall
jp
imul
jnp
jbe
jle
jno
in
push
sbb
push
stos
fucomip
or
xchg
sar
sub
dec
xchg
xchg
mov
push
ds
mov
popf
ss
mov
jp
ljmp
sbb
insb
popa
jle
imul
in
dec
fnstenv
push
fs
das
adc
xchg
ret
xchg
pop
adc
mov
inc
adc
stos
loop
push
loopne
pop
fidivl
xor
sbb
outsl
push
pop
popa
mov
fisubrs
mov
mov
aam
leave
push
dec
lret
hlt
cltd
or
push
mov
jbe
out
ret
cmp
xorl
lock
or
jg
add
adc
push
test
push
add
jmp
jo
adcl
cmp
es
or
ret
cmpsb
neg
fsubrp
aas
jle
enter
daa
cmp
scas
cmp
pop
mov
cmp
fcompl
ds
pop
mov
roll
rcrb
movsb
pop
test
lret
dec
jnp
popf
sbb
pop
add
xor
and
sub
add
rcrb
sub
mov
sub
jnp
outsb
xchg
add
ss
fs
dec
sbb
into
cmc
add
cmp
mov
test
xor
adc
adc
sub
sub
mov
mov
push
sbb
inc
popf
test
shlb
jg
mov
rorl
pusha
cmpsb
ss
lret
xor
loope
mov
cltd
sub
lret
xadd
jmp
dec
into
ficompl
cmc
data16
xor
or
outsl
sbb
loop
movsb
add
dec
cmp
or
mov
data16
lods
sbb
loopne
pop
adc
iret
cli
mov
cmp
cmp
fdivrl
sti
cmp
daa
repnz
fwait
loopne
stos
pop
js
push
adc
les
add
lock
sbb
loope
or
sbb
add
mov
push
neg
jmp
iret
ljmp
jmp
dec
aad
loop
nop
lea
dec
fmull
testl
and
jecxz
stos
sub
adc
or
call
lahf
pop
ljmp
sbb
neg
clc
les
inc
cs
inc
push
pop
movsl
aas
inc
outsb
out
jb
xchg
dec
xchg
inc
mov
aas
sub
cmp
sub
std
push
lods
cwtl
xor
test
push
dec
xorl
or
mov
imul
lock
movsb
das
mov
nop
mov
lcall
ret
mov
fstl
insl
xor
ret
mov
cmpsl
aaa
rcrb
sub
dec
icebp
lods
aas
out
movsb
fcmovbe
mov
fildl
or
and
push
pop
and
rcl
adc
push
sub
push
aam
add
mov
push
and
lcall
iret
adc
dec
adc
add
cli
lods
sarl
stos
sarl
out
mov
xchg
xchg
jns
ficoml
out
sete
cltd
cltd
cmp
addr16
fadds
cwtl
imul
fbld
rcrl
xchg
jp
rorl
pop
enter
xchg
fwait
movsb
popa
out
mov
mov
cmp
jb
or
jl
repz
in
xor
aad
xchg
out
or
mov
arpl
ja
cltd
or
mov
add
test
mov
gs
dec
mov
jne
in
shll
xchg
bound
loope
in
xor
out
shrb
xchg
lret
sti
addr16
dec
add
lods
lods
mov
and
fidivrs
sbb
in
decl
filds
xchg
mov
movsl
mov
fs
addl
jae
dec
jb
dec
adc
popf
pop
xchg
es
mov
and
insb
int3
loop
imul
stos
push
stos
adcl
or
ret
or
inc
loope
inc
mov
mov
or
cld
and
sub
xchg
test
sbb
dec
push
pop
nop
or
push
inc
test
jno
add
leave
push
repnz
mov
dec
hlt
in
mov
fcmovu
pop
jbe
mov
jge
and
sbb
dec
push
or
sbb
int3
inc
test
in
or
pushf
sarl
lahf
ss
mov
cmp
repz
cmp
enter
daa
aaa
scas
xor
ret
jno
lods
fnstsw
fwait
cmp
lods
jo
sub
lahf
lahf
das
pop
add
jp
push
test
xchg
lret
xorb
and
sbb
push
pop
xchg
js
add
pop
imul
loope
xchg
shrb
addr16
repnz
jmp
fidivs
pop
add
xorb
sbb
push
pop
and
sub
int
mov
das
pop
pop
fisubrs
push
cmp
and
cmpsl
loopne
sbb
test
fwait
or
cmp
mov
inc
loopne
dec
dec
loopne
xchg
adc
mov
cmp
pushf
out
fincstp
pop
test
add
inc
repnz
mov
inc
into
mov
mov
and
adc
stc
add
stc
fs
mov
add
adc
mov
lods
add
imul
stos
sahf
cli
out
push
xor
in
cmp
in
sti
jmp
xchg
dec
std
jae
je
dec
pop
xchg
aaa
adc
push
loopne
jmp
sahf
mov
icebp
pop
xor
sbb
sbb
pop
add
sub
xchg
mov
addl
bound
cltd
aad
xchg
movsl
nop
push
pop
test
rcrl
mov
jecxz
pop
xchg
adc
jl
lds
xor
mov
push
xchg
ljmp
jb
sahf
adcl
inc
mov
movl
testb
cs
or
divl
adc
popa
imulb
jl
jge
mov
push
int
or
repz
lret
in
pop
sahf
mov
lcall
mov
das
iret
pushf
mov
push
pop
popa
and
jno
ret
dec
add
es
or
movl
mov
andl
mov
decb
mov
mov
loop
shl
sub
sub
fucomi
aam
stos
xor
jle
arpl
lcall
xchg
mov
cmpsl
ljmp
out
cmp
xchg
stos
ret
out
sbb
rorb
push
stc
in
rep
add
cltd
rorb
scas
mov
xor
mov
add
test
dec
pop
xchg
clc
sbb
aas
shll
cmpsb
pop
jge
or
sub
add
push
in
ljmp
outsb
fisttpl
push
int
xor
ljmp
pop
mov
fstpl
sahf
mov
mov
lahf
jmp
or
push
jnp
das
gs
jne
and
mov
jno
out
data16
bound
fwait
jns
sub
in
xchg
orl
out
mov
sub
nop
out
addr16
imul
fsts
add
jle
jle
or
pusha
inc
popf
push
fbld
sbb
push
jmp
dec
inc
divl
test
xor
popf
test
mov
clc
lret
cmc
pop
pop
and
cmc
insb
aaa
sbb
imul
pop
push
repnz
adc
mov
pop
ret
jmp
jle
scas
inc
xchg
mov
xchg
inc
xchg
mov
pop
push
xchg
ficoml
call
dec
pop
mov
dec
int
clc
ret
pop
sarb
mov
jp
in
leave
inc
movsb
sub
das
or
sbb
pushf
cmp
push
out
xchg
sbb
sub
dec
jne,pn
in
insb
sbb
int3
sub
test
mov
xor
cmp
scas
jle
xchg
and
push
cmp
mov
inc
adc
add
or
popf
stos
daa
ss
cmp
lods
or
and
jl
iret
cmp
je
nop
das
pop
movsl
xor
fsubs
or
mov
push
dec
jo
test
popa
mov
stc
fisttps
jmp
scas
xlat
jbe
test
pop
pop
test
mov
mov
jb
outsb
mov
iret
sub
psubsw
in
mov
and
lret
loop
sbb
add
dec
stos
and
or
xor
sub
push
pop
sahf
out
sub
xchg
repnz
inc
inc
sbb
dec
ret
rcl
test
jecxz
and
dec
jg
imul
mov
daa
cmpsb
mov
xor
test
pop
add
add
sbb
pop
stos
cwtl
lret
dec
rcr
dec
mov
movsl
mov
loopne
mov
mov
and
xor
repz
and
stc
mov
scas
mov
ds
out
rorb
lea
cli
and
mov
sti
cwtl
mov
inc
gs
add
loopne
pop
jge
mov
xchg
adc
sub
adc
adc
orb
cli
dec
xchg
lock
sbb
push
xchg
push
xlat
xchg
mov
sub
xchg
xchg
in
in
data16
arpl
aad
test
xor
lcall
fstps
cmp
jecxz
fdivs
push
sub
jl
xor
gs
popf
add
lock
mov
mov
in
sbb
add
pop
inc
cmpsl
lea
jp
inc
mov
ss
cmp
je
xorl
mov
sbb
cwtl
cmpsb
or
mov
nop
push
mov
clc
in
pop
mov
lret
pop
in
mov
push
cli
lock
cmp
outsb
test
mov
or
and
inc
in
xlat
inc
dec
es
stos
scas
dec
lods
mov
cmpsl
xor
inc
fdiv
pop
sub
cli
sub
mov
and
and
push
cmc
jp
pop
scas
rcl
mov
push
sub
cmpl
and
adc
ffree
jo
clc
inc
mov
xchg
xor
or
lods
cmpsl
fsubs
mov
pop
out
jge
lret
xchg
pop
mov
test
push
inc
pusha
add
mov
test
in
mov
test
aaa
dec
dec
data16
jae
incb
std
das
jae
mov
jmp
push
into
mov
mov
in
decl
push
or
inc
xor
push
xor
test
shll
imul
ja
add
inc
and
cmp
mov
or
dec
adc
divl
mov
cmpsl
out
inc
loop
fcom
out
xchg
push
pop
in
sub
sbbl
mov
pop
out
sbb
mov
out
cmp
mov
and
mov
lock
mov
dec
inc
repnz
or
jae
inc
stos
std
xchg
dec
rcrb
jmp
sbb
jp
testb
push
ror
inc
popf
stos
adc
push
aaa
mov
ljmp
daa
je
lea
jo
cmp
adc
pop
push
ret
popa
pop
mov
iret
inc
mov
lods
cwtl
inc
cwtl
xchg
xor
repnz
es
pop
or
xchg
xor
xchg
pop
out
or
ficoms
or
rcrb
lcall
shl
jp
inc
push
js
jne
shlb
and
sbb
push
aaa
pop
xchg
dec
or
jno
add
movsb
jo
pop
decb
push
stos
dec
je
sub
shll
subl
fs
movsb
test
sbb
hlt
push
sub
test
xor
stc
jno
mov
outsl
cmp
mov
lods
movsl
cmp
and
dec
push
and
test
sub
add
or
into
mov
inc
mov
jecxz
jnp
out
ja
test
jmp
fstl
lods
sub
or
adc
mov
add
mov
iret
icebp
and
pop
xchg
int
mov
ljmp
int
push
jmp
jns
sbb
loop
sahf
lahf
test
cmp
addr16
inc
and
cmp
add
mov
inc
cmp
adc
lret
pop
shll
mov
rcl
dec
adc
cmc
mov
xchg
outsl
mov
test
stc
jno
xlat
lods
decl
jecxz
cmp
fisubl
mov
shl
adc
sbb
xor
dec
cmp
jae
sti
inc
inc
sbb
pop
stc
mov
outsl
add
pop
aad
xor
imul
sahf
repz
lcall
aas
rcrl
ljmp
jmp
js
push
pop
jmp
push
dec
sub
push
aad
and
dec
stc
add
aam
rorb
mov
sbb
mov
sbb
and
scas
push
sbb
fwait
pop
mov
add
pushf
enter
test
pop
call
jno
inc
cmpsb
mov
and
jb
pusha
push
dec
divb
and
and
repz
adc
repz
pop
std
lret
or
cwtl
popa
leave
cmp
fcom
cwtl
xor
inc
in
lret
mov
jp
inc
jg
das
dec
cmp
mov
out
push
out
inc
jge
insl
call
xchg
lcall
jne
icebp
xor
and
mov
inc
cld
aas
and
icebp
push
popa
pop
jge
jno
mov
test
adc
sub
add
cmpsl
fucomp
dec
cmpsl
clc
andb
push
or
adc
lods
adc
std
stos
mov
inc
pop
xchg
dec
rcrb
pop
xchg
cmpxchg
add
and
test
test
xchg
rcl
dec
int
jl
out
sbb
xchg
sbb
fsub
pop
shll
xor
add
jno
xchg
add
clc
aas
call
mov
lds
adc
shrl
cs
lock
adc
dec
mov
pop
inc
mov
repz
pushf
shll
mov
es
and
bound
sarl
cmpsl
adc
jno
lcall
test
or
aaa
ss
scas
mov
aam
mov
lahf
xchg
dec
jle
outsb
lret
sub
pusha
js
test
fs
cmp
dec
aas
xor
ret
mov
popf
shrb
cmpsb
push
jbe
push
stos
fucomi
jg
ja
sbb
insl
imul
fptan
sbb
addb
mov
add
add
les
arpl
into
or
insl
test
inc
fadd
aaa
dec
pop
xchg
mov
sbb
into
fwait
pop
sbb
sub
ret
shlb
div
and
cmp
xor
dec
push
push
sbb
sbb
jge
das
inc
sbb
jnp
or
sub
ret
int3
add
dec
sbbb
xor
out
xchg
jnp
cmp
xor
cmp
xor
or
inc
jo
add
gs
fisttpl
add
movsb
pop
inc
daa
xor
jbe
pop
adc
jl
xchg
sub
stos
mov
popa
movsl
aas
imul
lahf
mov
push
repz
test
testl
gs
push
aaa
cmp
sub
cwtl
fmuls
pushf
sub
scas
sub
cwtl
adc
mov
mov
mov
sbb
scas
or
and
in
push
cmp
mov
add
js
sub
add
pushf
sahf
rcrl
inc
xchg
jmp
sbb
ds
inc
fiadds
sbb
cmp
mov
nop
in
scas
repnz
mov
iret
ljmp
pop
push
cmp
int
cmp
xchg
cmp
lret
test
mov
mov
or
jecxz
cmc
andb
xor
cmp
loop
xchg
and
sub
repz
movsb
lods
add
mov
inc
jo
lods
mov
mov
adc
lods
cli
xchg
xor
jnp
cmp
clc
test
notb
jl
popa
ds
loopne
or
hlt
addr16
or
scas
imul
push
repz
addr16
jbe
xchg
int
xlat
adc
loopne
mov
ret
jmp
push
cmp
mov
sbb
mov
hlt
xchg
dec
pop
bound
flds
movsl
cmpsb
les
adc
sbb
mov
call
fwait
icebp
repnz
push
sbb
cmpsb
pushf
jae
rcr
dec
negb
jle
inc
dec
int
inc
shrl
test
jb
mov
out
je
es
shrl
cmc
divb
sbbl
push
adc
sbb
jl
movsl
popa
xlat
mov
push
orl
mov
jle
push
dec
hlt
lock
sub
mov
jbe
aaa
and
loop
ret
cmc
mov
es
insl
iret
sbb
dec
mov
aam
mov
or
pop
mov
loopnew
and
mov
pop
pushf
push
mov
sub
insl
aam
mov
rcll
imul
xchg
inc
push
xchg
lea
jp
out
inc
xor
xchg
xchg
inc
scas
push
nop
stos
push
movups
lods
add
pop
test
xchg
std
xchg
das
test
loop
xchg
jl
sbb
mov
imul
jle
mov
push
adc
dec
add
test
adc
xor
or
or
pop
xor
and
int
mov
push
scas
mov
stos
dec
ja
mov
dec
test
jb
push
mov
or
sbb
mov
ret
fsubs
lods
jne
and
mov
dec
xor
add
push
jns
fsubrl
cld
jne
cmpl
fldt
xorl
je
pop
lods
iret
mov
dec
inc
jle
nop
gs
stos
out
pusha
adc
cmpsb
filds
mov
pop
xchg
scas
cli
xchg
jae
leave
mov
pop
push
and
mov
mov
jbe
dec
inc
dec
and
mov
xor
adc
loopew
iret
pop
adc
sbb
pop
and
test
mov
add
or
call
add
scas
sbb
sbb
negl
pop
dec
sbb
fmull
lds
add
mov
jae
sub
test
inc
hlt
adc
jbe
mov
sbb
ret
call
jl
pop
in
cmpsb
int3
in
mov
push
jno
dec
xor
dec
dec
outsl
scas
sbb
pop
and
adc
cmp
xchg
mull
lods
montmul
cmpsb
xchg
in
ret
enter
daa
xor
aas
cmp
push
pop
jl
mov
cmp
insb
ds
insl
movsl
inc
ret
mov
cmpsb
outsl
lahf
stos
mov
add
ret
xor
push
cltd
pop
and
xchg
js
lds
pop
gs
out
or
loope
test
sub
xchg
xchg
xchg
outsb
jne
push
adc
jge
adc
mov
inc
push
add
xlat
sbb
xlat
cwtl
cwtl
push
aas
pusha
mov
addr16
mov
cmpsl
pop
jl
sbb
lcall
aam
push
arpl
js
sbb
jmp
xorb
dec
mov
adc
mov
or
ss
in
cmp
mov
notl
lret
sbb
sahf
sbb
enter
sub
addr16
dec
mov
xor
ljmp
inc
nop
mov
fs
add
push
data16
jns
lods
pushf
mov
jbe
out
dec
mov
mov
gs
cmp
push
mov
movsl
test
dec
gs
jge
pop
adc
and
cmp
mov
popf
xchg
cmp
out
lea
lret
xlat
push
jecxz
sub
adc
mov
sub
jle
cs
or
aad
inc
inc
nop
aam
adc
ret
mov
loopne
les
cwtl
sub
pop
cltd
lea
dec
call
sbb
mov
adc
fdivrl
jecxz
xchg
pop
fcoms
rorl
aas
pop
inc
xchg
jb
dec
aaa
dec
in
pop
je
jbe
sarl
sub
sbb
or
adc
andl
inc
lret
test
inc
mov
enter
fdiv
imul
sub
mov
sub
mov
ret
test
dec
insl
mov
insb
dec
popf
push
mov
mov
fists
hlt
mov
mov
mov
daa
data16
pop
mov
leave
daa
sub
dec
cmpsl
aam
sahf
arpl
mov
jmp
testb
ljmp
inc
lods
call
jecxz
out
cmpsb
adc
fsubl
clc
push
imul
add
cmp
test
jmp
xchg
jecxz
fwait
pop
xchg
test
cmp
sbb
xchg
rol
out
pop
sub
fistpl
mov
mov
push
xlat
add
pop
sub
xor
mov
xchg
jno
cmpsb
mov
push
xor
pop
push
sbb
adcb
fwait
aaa
or
inc
push
or
mov
dec
mov
out
mov
movd
loop
andl
mov
in
sbb
dec
add
out
or
sub
jl
sbb
xchg
adc
mov
test
mov
std
mov
repz
nop
bound
pop
sbb
xchg
les
jmp
jp
jae
adc
inc
rcrb
and
mov
stos
rorl
add
insb
jecxz
mov
fs
scas
lahf
mov
push
push
xchg
adc
in
data16
ret
xor
cmp
inc
rorl
ret
inc
mov
popa
pushf
push
fcmovb
leave
fisubl
test
sbb
cmc
mov
fidivrs
lds
pop
shr
mov
cs
repnz
out
leave
pop
or
hlt
pop
aas
push
gs
or
imul
sbb
fstps
or
test
fsubr
inc
dec
pusha
mov
cmp
movsl
adc
and
xchg
pop
movsb
dec
xchg
jns
dec
pop
mov
test
imul
jno
pop
cmpsb
jl
mov
cmp
dec
push
sbb
out
dec
sbbl
lahf
lret
push
cltd
ja
test
lea
dec
xor
jmp
outsb
pop
dec
fcompl
pop
movsb
call
xor
lret
sub
adc
sub
outsb
outsb
fdivrs
rcrb
inc
sahf
dec
mov
dec
js
add
pop
pop
and
daa
push
inc
bswap
int
gs
sub
orb
out
xor
fdivr
adc
popf
sahf
mov
test
mov
adcb
jg
dec
and
popf
aas
std
mov
lcall
or
imul
adc
xchg
lret
movsb
shll
int
pushf
out
loope
sub
cld
cmc
adc
loope
push
mov
in
stc
xchg
sahf
mov
add
divl
lods
adcl
stc
lods
jecxz
adc
lahf
xor
jg
sti
push
andl
outsl
or
pop
xor
imul
xor
lret
xchg
cld
imul
mov
loope
inc
aaa
adc
movsl
sub
jns
xor
in
cwtl
cmp
jmp
mov
jne
xor
dec
nop
scas
les
push
daa
add
push
insb
fnstenv
cmp
jecxz
pusha
ds
and
push
call
cltd
jb
pop
mov
das
test
fistl
stos
cwtl
pop
shll
push
inc
imull
aas
fisttpll
jb
push
aas
dec
pop
out
and
dec
rorl
dec
idivb
and
and
mov
bound
into
jmp
lret
pop
sahf
mov
out
loop
cwtl
lock
rolb
jg
mov
in
shll
es
xor
insl
popf
sbb
jmp
mov
mov
fs
cmpsb
mov
sarb
shl
aad
ret
pop
fimull
add
add
fwait
sub
andl
push
dec
mov
pop
cmp
daa
xchg
ret
stos
aas
ljmp
mov
stos
insl
adc
out
or
cs
and
push
inc
test
add
aas
dec
cltd
jecxz
mov
test
inc
mov
dec
add
test
sub
sbb
or
pop
aam
cmp
push
pop
std
add
fisubrs
xor
ja
or
ljmp
shll
lods
dec
repnz
and
ja
aam
dec
mov
mov
sub
mov
mov
jne
adc
mov
mov
shl
bound
jns,pt
xor
in
movlps
mov
sub
ja
fisubl
aam
pop
add
mov
enter
and
test
lods
movsb
in
fptan
pusha
dec
xor
xchg
xchg
jne
jmp
inc
outsb
fs
mov
aaa
popf
inc
ret
fidivrs
xor
inc
and
adc
addb
mov
sbb
fisubl
pop
xchg
insb
sbb
int3
leave
dec
arpl
mov
pop
or
fisubs
inc
pop
add
xchg
xchg
xchg
sbb
xor
stos
cmp
fisubs
test
lds
sbb
mov
sbb
test
xchg
mov
mov
daa
xor
jge
aas
ficompl
lock
inc
aaa
add
or
fxch
ret
loope
dec
iret
jno
push
aaa
push
adc
inc
jl
jo
repnz
fldenv
xchg
inc
cmp
movsb
aad
lds
dec
shlb
nop
mov
enter
daa
xor
cmp
out
mov
jl
cmp
push
sbb
adc
lahf
jmp
sti
xor
lea
xor
inc
fildll
pop
jno
dec
js
popf
out
pop
jecxz
bound
mov
pusha
sub
popa
jp
rclb
outsb
cmp
insl
shlb
inc
orl
cmc
mov
add
das
dec
and
lret
inc
xor
xor
aaa
fs
sbb
daa
lcall
inc
fsubrl
mov
test
jl
jg
scas
mov
mov
loopne
pop
jge
adc
aas
fdivs
dec
push
aam
faddp
in
mov
not
outsl
inc
lret
jbe
int3
subl
js
or
push
mov
cmc
xlat
or
xor
xchg
daa
call
fmuls
lds
call
lea
adc
fidivs
js
fdivrs
xorb
out
cmp
add
loopne
mov
fists
addl
repz
rorl
or
sbb
jle
lret
xlat
shr
sub
out
lea
in
add
jmp
mov
push
nop
mov
sub
addr16
enter
lods
inc
push
ror
and
insb
jbe
and
mov
lahf
sbb
pop
outsl
movsb
inc
adc
xchg
fildl
lock
je
int3
inc
fbstp
sub
mov
aas
popf
jle
jb
push
sub
je
je
adc
idiv
aam
std
addr16
cwtl
dec
mov
mov
stc
fisttps
push
repz
mov
ss
mov
andl
leave
dec
or
fwait
mov
ret
mov
clc
insl
test
xchg
fdivrs
mov
out
cld
shl
cmc
mov
rolb
fdivrs
jl
stc
in
out
aad
xchg
sub
pop
iret
aam
nop
pop
mov
or
adc
jne
test
mov
sub
xor
lods
mov
add
xchg
push
xor
cvtps2pi
stos
cltd
sbb
mov
mov
and
inc
popl
imul
xchg
lret
inc
je
jo
mov
fwait
in
jno
push
std
std
push
add
stc
adc
jmp
xor
jl
or
dec
xor
dec
mov
mov
cli
adc
pop
fsubl
cmp
dec
cmpl
sub
cmpl
in
out
mov
int
jns
push
shl
popf
pop
out
data16
out
in
sub
jb
sub
mov
mov
or
jl
fwait
jnp
hlt
aaa
jle
stos
test
jns
adc
pop
ss
lods
mov
push
ss
adc
in
push
mov
jmp
scas
push
jb
insl
stos
cmpsl
jge
and
sbb
insb
mov
adc
pushf
cltd
xchg
clc
aam
iret
and
test
push
addr16
pop
enter
xlat
sahf
fwait
arpl
imul
cmpsl
xor
or
pop
lret
fmul
leave
fcmove
lods
pushf
xchg
out
dec
sbb
insb
xor
icebp
daa
faddp
arpl
lds
inc
pushf
rcrb
xchg
mov
insb
aad
leave
or
out
sti
push
add
in
cmp
sbb
inc
mov
sahf
push
test
push
jmp
es
ds
pop
push
sbb
xor
pop
in
scas
mov
fnstsw
cmp
cmpl
push
shll
ja
cltd
enter
daa
xor
lcall
sbb
cmp
add
movsl
pop
sub
stos
sub
adcb
out
test
push
and
je
jno
mov
js
call
and
fs
cltd
loope
icebp
gs
xchg
sub
outsb
sahf
dec
push
adc
push
faddl
test
sbb
pop
movsb
and
icebp
push
dec
leave
mov
sub
xorl
cwtl
sub
lcall
lods
fcoml
sbb
pop
outsb
test
push
addb
stc
mov
shrl
mov
mov
mov
adc
dec
aaa
ss
cmp
cmp
mov
mov
lret
mov
mov
add
cmc
sahf
int
xor
xchg
sti
outsl
adc
loop
rcr
add
jns
arpl
add
dec
jns
push
repz
out
aam
out
lods
in
push
dec
push
cmp
push
cmp
mov
test
or
mov
loopne
push
or
loopne
adc
imul
loope
repz
and
cmp
mov
sub
pop
mov
outsb
cltd
pop
jmp
jle
cs
push
aad
pop
push
nop
gs
dec
aam
cmp
pop
sub
fmull
jecxz
mov
fmull
push
xchg
fadd
xchg
add
and
xchg
xchg
add
pop
mov
popf
clc
inc
and
inc
sub
and
dec
dec
sahf
bound
push
shrl
fsubs
std
push
or
or
and
xchg
mov
and
mov
mov
mov
lock
mov
push
es
pop
arpl
roll
insl
imul
cmpsl
das
sub
mov
fs
aad
cld
sti
push
adcl
clc
adc
clc
mov
pop
sbb
xor
test
dec
sub
fstps
mov
or
push
sarl
test
xchg
inc
std
mov
popa
add
or
mov
out
iret
addr16
xchg
mov
or
lods
xchg
jl
out
cltd
push
int
test
xorl
dec
loopne
dec
shlb
test
shrb
das
xor
rol
test
hlt
cmp
mov
add
call
xor
pop
cmp
lret
xchg
pop
ljmp
fsub
mov
ja
pop
push
dec
je
scas
inc
scas
shlb
mov
aad
adcb
out
jg
dec
bound
jb
loopne
sub
sub
lea
xchg
or
sub
insl
fcmovnb
addr16
mov
push
mov
or
das
in
xchg
sub
xchg
cmp
call
xchg
cmp
fisubrl
xchg
arpl
mov
push
xlat
sti
popf
xchg
repz
mov
arpl
ljmp
imul
dec
scas
enter
jecxz
mov
iret
xorl
pop
mov
shlb
pop
cmp
or
aam
inc
push
sbb
fidivrl
jmp
cmp
out
pop
or
push
ficoms
sarb
sarb
mov
adc
hlt
cmp
cmp
jbe
vhsubps
push
pop
aaa
add
incl
mov
mov
cltd
dec
fimuls
sub
xor
mov
ret
cmp
aam
scas
jno
movsb
jmp
hlt
inc
stc
jge
xchg
outsb
out
in
pop
add
mov
das
daa
in
pop
pop
shll
inc
xor
cmp
aad
test
movsl
bound
and
xchg
lahf
daa
es
test
out
mov
xlat
xor
popa
pop
mov
movb
popa
fs
xlat
xor
paddw
sub
pop
outsb
add
xor
jmp
nopl
in
repnz
add
xlat
push
and
or
int
add
popa
sub
fimull
push
repz
fdivr
and
jge
jno
outsb
test
insb
outsl
jg
jns
mov
and
mov
sbbl
ss
push
cmp
je
mov
push
daa
or
in
scas
sar
jbe
je
xor
jmp
imul
insl
lahf
jmp
loop
mov
stc
mov
movb
shll
mov
mov
mov
push
sub
cli
xchg
or
sti
popa
mov
shll
and
je
daa
inc
push
imul
xchg
lahf
repz
in
adc
inc
stos
lods
sbb
hlt
test
xlat
push
add
sub
fimull
in
flds
loope
jp
enter
mov
dec
xor
out
mov
fstps
xor
sbb
jbe
push
sub
fucomip
xchg
pop
sub
push
adc
adc
sahf
sub
fistpl
movb
dec
or
jmp
imul
stc
pop
xor
mov
jnp
ret
pop
movsb
mov
rep
mov
adcb
fs
mov
jno
mov
fwait
push
lock
sub
or
and
cs
ret
shlb
push
clc
pop
insl
push
into
xor
repnz
xchg
icebp
cmp
jb
daa
fcmovb
mov
push
mov
cltd
mov
aaa
mov
out
idiv
jge
rcl
lcall
sahf
fst
xor
clc
loop
fwait
xchg
sub
ljmp
hlt
lods
xchg
lods
sti
stos
cmp
mov
xor
sbb
xlat
pusha
loopne
jmp
jl
adc
fs
push
and
dec
movsl
jno
aaa
lock
test
imul
sbb
rol
rcrl
lods
dec
pop
aad
cmp
inc
xlat
fldl
das
adc
inc
xor
and
or
gs
lods
pop
jp
jbe
push
mov
push
inc
add
mov
inc
dec
addr16
inc
inc
hlt
das
or
lds
and
out
inc
and
jne
ljmp
pop
dec
andb
adc
in
ljmp
adc
pop
sub
push
sti
sub
mov
decl
shl
les
cmp
in
or
pusha
sbb
jae
push
mov
adc
xchg
xchg
cmpsb
adc
jae
loop
push
daa
lcall
adc
stos
push
lock
stos
lea
and
lds
imul
call
push
sub
adc
and
jmp
inc
in
inc
popf
arpl
xchg
in
inc
lods
add
or
dec
push
mov
fisubrl
xchg
mov
xchg
jnp
sbb
xor
pop
aaa
stos
xchg
or
or
push
push
jns
stos
inc
push
repnz
hlt
xchg
add
bound
jge
push
jno
and
data16
out
test
icebp
push
loopne
or
adc
ds
adc
add
movsb
jbe
cmp
mov
xchg
in
inc
adc
daa
cs
push
cmp
fdivrs
cmp
mov
test
movsl
movsl
imul
lahf
inc
xchg
inc
push
in
push
jb
pop
push
mov
push
pop
jns
out
adc
cmp
pop
mov
stc
or
es
sub
dec
pop
sub
xchg
sub
adc
les
sbb
push
sbbb
sbb
and
push
test
loopne
dec
push
fcmove
push
test
pop
xchg
or
lcall
push
fsubrl
pop
add
adc
hlt
test
enter
adcb
repnz
mov
stos
mov
jns
push
mov
pop
repz
sub
lret
subl
lret
js
xchg
xor
or
into
mov
jnp
xor
mov
lret
loop
nop
outsb
stc
jb
mov
jns
mov
int3
jl
lods
pop
and
dec
jo
or
jl
xor
adc
cmp
jnp
sti
adc
mov
loopne
lock
pop
scas
xor
adc
out
loop
adc
sti
adc
mov
lret
cmpsl
and
das
sbb
xlat
sub
jp
mov
in
inc
dec
xchg
jmp
push
ret
cs
xchg
aad
arpl
sbb
xchg
loopne
inc
add
sub
push
movsb
add
repnz
repz
sub
cs
mov
call
xchg
movsb
dec
pop
mov
adc
outsl
pushf
jne
xor
into
xchg
push
pop
pop
in
inc
je
sbb
arpl
jb
and
dec
aaa
fnsave
je
hlt
or
dec
jge
test
mov
cwtl
jle
inc
mov
ss
mov
imul
addr16
mov
ss
cmp
lock
mov
dec
mov
mov
cs
and
insl
cmp
leave
dec
test
pop
cmpsl
sub
test
icebp
adc
cld
push
mov
mov
in
lea
pop
push
test
rorb
lcall
jo
mov
loop
push
pop
cmp
dec
xor
sbb
pop
sub
add
xor
inc
lods
jmp
stos
sub
xchg
mov
inc
push
mov
and
dec
jle
add
pop
add
aad
repz
dec
fimuls
test
cmpsl
and
aad
in
xchg
and
es
cmp
fwait
jp
cmp
out
ja
idivb
movsb
incl
mov
xor
std
or
outsb
lret
xchg
cld
adc
mov
mov
mov
or
dec
xor
inc
or
fnstsw
aas
or
xchg
cli
mov
dec
jne
movsl
lret
mov
adc
aaa
bound
stos
jns
mov
in
xor
adcl
and
xchg
or
jne
lea
xchg
mov
scas
fstpt
test
bound
in
in
pusha
mov
cwtl
fistpll
pop
imul
or
jae
cmpb
shl
popf
jecxz
mov
push
das
icebp
in
add
lods
insb
cli
pop
dec
imul
notl
mov
ss
inc
pushf
aaa
ret
fstps
cltd
mov
clc
adc
or
xchg
test
lret
inc
push
aas
pusha
xchg
and
lret
push
and
data16
stos
fisubrs
inc
out
shlb
mov
gs
jbe
jb
xor
rorb
push
lock
jbe
fwait
inc
jge
and
fadd
xorb
dec
aam
ja
inc
add
sub
dec
mov
xchg
ret
xchg
jae
bound
jo
xor
scas
push
out
and
pop
cmp
xlat
movsb
add
flds
rcrb
sub
bswap
subl
jo
rclb
jl
hlt
lock
ds
cmpsb
jb
jo
mov
jl
rcrb
adc
push
test
loope
addb
mov
lods
xor
mov
dec
mov
loope
jg
sub
out
movsl
sub
mov
outsb
movl
rcrb
cli
dec
subb
and
pop
and
pop
iret
frstor
xor
push
push
inc
adc
rcll
mov
ss
adc
xchg
fcoms
sub
fcoml
push
sbb
jp
test
lods
dec
jg
push
cmp
lock
xchg
adc
dec
cmp
ljmp
lret
dec
shrl
icebp
mov
fmull
pop
arpl
fwait
orb
and
imull
int
loop
lds
sub
cwtl
fs
add
fnstenvs
jg
push
adc
loopne
shl
or
idiv
in
and
cmp
int
sti
mov
loop
gs
xlat
and
sbb
pop
int
pop
adc
iret
jo
pop
mov
adc
pop
repz
ss
lret
pop
sub
ja
in
push
cwtl
xlat
into
sub
sub
subl
jmp
bound
inc
pop
pop
aad
cld
pop
nop
imulb
cltd
inc
adc
cwtl
mov
mov
xor
stc
call
adc
jns
cmp
pop
adc
mov
mulb
add
addb
sbb
shlb
jb
jmp
dec
scas
repnz
js
xchg
in
testb
outsl
std
add
lods
cwtl
cmp
orl
popf
mov
adc
inc
inc
or
mov
inc
outsl
lock
pop
das
inc
xchg
jb
mov
out
and
gs
ret
fidivrs
es
sar
and
pop
cmpsl
sub
pop
mov
jmp
adc
mov
pop
int
and
leave
arpl
jne
in
shlb
push
xchg
sub
sub
aam
arpl
push
sbb
dec
frstor
inc
out
clc
pop
mov
adc
notb
popa
dec
push
imul
movsb
out
clc
push
rcll
lea
adc
test
sub
loopne
nop
mov
push
mov
dec
add
js
xchg
sbb
adc
dec
pop
sub
pushf
fwait
test
sbb
jge
inc
add
mov
xor
lret
xor
lret
pop
xchg
dec
or
cld
xor
int
push
enter
xor
dec
dec
xor
or
cmp
push
dec
or
ret
xor
sbb
arpl
aam
jns
cmp
dec
andl
pop
sub
pop
lret
cmc
mov
push
jp
clc
cmp
sub
adc
daa
mov
xchg
and
pusha
push
mov
rcll
out
xchg
cmp
test
bound
push
lods
jnp
popf
or
mov
outsb
mov
jae
jp
das
std
loopne
gs
imul
hlt
scas
icebp
in
push
mov
fmull
ret
adc
pop
inc
add
mov
inc
mov
pop
or
inc
sub
inc
aam
adc
xchg
dec
imul
dec
adc
xchg
jb
ficoms
fld
ds
rorb
xor
and
jmp
ror
aas
xor
jge
aam
sbb
push
sub
push
je
jp
loope
pop
and
jge
push
cmpsb
inc
mov
jo
jne
scas
xor
sti
and
sbb
movsb
mov
inc
cmpsb
push
out
sbb
in
adc
adc
jl
adc
sub
int
repz
jbe
aad
jmp
adc
inc
cmp
inc
ds
mov
movsl
ja
andl
movsb
pop
lahf
test
push
mov
mov
inc
xor
jge
jno
xor
sub
fcomps
test
loope
testb
fs
sub
xchg
xchg
fldenv
adc
jp
lret
fdiv
repz
sbb
dec
mov
push
push
lods
movsl
int
lret
add
mov
lcall
mov
add
or
pop
ret
dec
test
pop
xor
mov
mov
push
push
mov
mov
rcr
cmp
ss
pop
adc
movsl
outsb
testl
add
xchg
or
push
adc
jle
push
cmc
mov
cmp
mov
es
loopne
ljmp
cli
mov
lods
in
loop
mov
adc
out
mov
cmp
stos
mov
pop
sti
outsb
mov
movsb
gs
cmpsb
loopne
pop
in
cwtl
push
adc
lods
or
mov
rep
sub
xchg
mov
stc
sbb
movsl
push
and
or
adc
mov
sbb
jmp
ss
mov
stc
arpl
push
aad
inc
daa
out
fnstcw
lea
xor
jbe
xor
call
xchg
push
lods
pop
out
ljmp
lret
adc
jb
mov
mov
pop
aas
mov
out
dec
and
fsub
shl
xchg
cmp
dec
insl
mov
stos
inc
lods
cwtl
hlt
js
mov
inc
lret
mov
xchg
addl
xchg
lret
mov
data16
lods
jl
je
jmp
and
std
mov
cs
inc
and
jle
ret
insl
arpl
es
push
insl
pop
subl
outsl
les
mov
mov
cld
test
sti
mov
jg
mov
mov
xchg
mov
hlt
icebp
or
fdivrl
call
mov
enter
xchg
fldl
mov
xchg
cmp
pop
outsl
popa
pusha
pop
lods
aad
add
out
pop
xchg
int
call
invd
jne
add
cltd
sub
lds
xchg
rorb
pop
test
ficoms
sbb
ljmp
dec
arpl
sub
inc
add
xorb
jg
in
xor
popf
jno
and
xor
jl
xchg
lcall
mov
orl
sahf
into
dec
inc
shl
inc
or
xlat
or
mov
mov
add
lock
sahf
inc
xor
sti
fdiv
bound
xchg
dec
in
mov
mov
sub
pop
inc
jns
mov
mov
stos
xchg
push
adc
jnp
fs
jle
call
cmp
fistpll
leave
xchg
mov
rcll
mov
push
jo
cltd
popf
xor
mov
lods
movsl
sbb
inc
iret
mov
shrb
pop
imul
inc
scas
push
outsb
je
lcall
lods
iret
call
pop
fildl
fwait
inc
push
mov
arpl
into
dec
inc
mov
mov
out
push
push
je
fiaddl
mov
sbb
adc
xchg
hlt
pop
mov
lds
shlb
sbb
or
or
pusha
data16
hlt
push
add
jo
cmpl
test
pop
or
cmp
int3
inc
psubq
int3
cmc
push
mov
or
and
mov
adc
nop
cmp
or
inc
xor
call
adc
ja
jmp
cmp
movsb
dec
jno
outsb
je
ds
inc
adc
push
and
ljmp
push
pop
mov
xor
sub
inc
xor
pop
pop
outsb
data16
pop
jns
pop
inc
lahf
push
xchg
sub
scas
fisubrs
cmp
xor
push
lock
push
hlt
sbb
leave
jecxz
add
pop
cmp
dec
rcll
push
mov
int
and
sub
and
adc
ljmp
sub
lock
addl
iret
aas
push
mov
jne
mov
jp
mov
mov
adc
jg
ss
inc
cmp
pusha
dec
xor
dec
pop
lret
mov
mov
fs
movsl
push
xchg
popa
dec
cmc
subl
outsl
imul
stc
xchg
mov
sub
jns
push
data16
xchg
mov
push
ret
out
dec
in
push
mov
xor
jmp
sti
sbb
or
sbb
loopne
repnz
adc
inc
imul
mov
repz
lock
push
push
mov
cmp
pop
data16
dec
gs
and
push
jmp
into
int3
cs
outsb
scas
aad
pop
enter
mov
push
jp
cmp
inc
fdecstp
leave
test
adc
push
aaa
test
repz
adc
mov
adcb
pop
or
inc
cmc
ret
inc
or
dec
aas
push
xchg
ss
push
mov
pushf
or
push
leave
fst
xor
mov
std
push
dec
ficompl
pop
push
in
push
cmp
sbb
jbe
lret
and
inc
mov
cmpsl
mov
jp
lock
mov
bound
in
pop
and
in
inc
ret
cld
push
es
pop
dec
insl
out
xor
jne
mulb
mov
cmp
cld
rcrl
mov
add
xchg
mov
mov
movsl
rol
sub
shr
outsb
aam
inc
xlat
mov
and
push
mov
in
add
into
adc
dec
ljmp
imulb
mov
je
adc
mov
inc
hlt
lahf
packuswb
add
das
cltd
fs
test
cmp
ret
inc
aaa
dec
rol
or
push
push
xor
jp
inc
pop
xorl
pop
push
iret
stc
rolb
fwait
or
xchg
xor
fimull
or
sbbb
push
mov
mov
mov
ja,pt
ja
mov
xor
cmp
or
add
testl
sub
pxor
mov
out
jns
mov
in
cld
and
and
sub
push
dec
mov
mov
cmc
jp
adc
mov
jne
stc
jle
popf
push
in
enter
in
fistps
in
jmp
rcr
fcomi
cmpsl
push
xor
jg
std
cli
adc
inc
sub
and
popf
insb
cmp
imul
mov
mov
dec
push
inc
xor
adc
fdivrs
iret
pop
pop
mov
pop
adc
js
cmp
inc
mov
xchg
adc
inc
rclb
cli
roll
lock
pop
sbb
mov
pop
repz
and
xchg
int
lds
rol
xor
pop
andl
push
fstl
xor
mov
fs
out
sbb
out
pop
or
rolb
test
sbb
xor
rorl
scas
push
insb
mov
jo
ss
repnz
in
dec
cmp
sbb
pop
mov
and
jb
loope
or
sub
popa
cmp
mov
jl
inc
je
orl
push
movsl
test
gs
ret
push
xor
test
in
cs
cmpsb
mov
pop
andb
pop
pushf
addb
pop
std
loope
push
lret
sub
out
test
outsb
lock
cmp
shlb
std
iret
xchg
clc
adc
sbb
cmp
jl
push
and
sub
pop
xlat
sahf
int
popa
arpl
cli
imul
xchg
stc
pop
lcall
sub
sbb
mov
sti
test
mov
outsb
mov
rorb
data16
adc
and
ss
adc
sbb
repnz
mov
shr
cmp
or
into
inc
out
ds
dec
xchg
outsl
dec
insl
out
loop
sahf
cmp
add
movsl
sbb
test
xor
lods
mov
sub
out
pop
cmp
test
xor
xchg
cmp
mov
pop
fcoml
loopne
sbb
sub
jecxz
in
jecxz
adc
adc
repz
add
xchg
adc
mov
cmp
inc
mov
sub
imul
lock
adc
dec
sub
imul
stc
nop
xchg
cli
dec
push
fiaddl
sub
daa
jne
shll
cmp
lea
in
jnp
clc
fcmovne
xchg
push
fistps
and
pushf
shlb
pushf
and
fisttpl
loop
inc
nop
fcoml
iret
xchg
dec
aas
notb
jb
jns
dec
adc
jl
pop
or
xlat
not
outsl
pop
std
clc
cmp
mov
imul
xorl
into
lret
rcll
sbb
das
loop
xchg
mov
pushf
inc
xchg
and
lods
sbb
mov
insl
es
adc
in
jo
lahf
cmpsl
sub
mov
repnz
cli
cld
pushf
aam
pop
sti
fwait
mov
or
mov
rolb
sub
inc
aaa
aam
xor
mov
mov
push
fstl
and
mov
mov
popa
mov
dec
stos
in
cld
out
and
rcll
push
or
jb
imul
gs
xchg
orl
gs
xchg
imul
popa
sbbb
mov
pop
sub
mov
jb
rolb
std
inc
mov
dec
push
or
cmp
cs
cmp
add
ret
pop
stc
xor
movsl
dec
es
ret
mov
cmp
dec
inc
sbb
cmc
jb
sub
scas
mov
cmpl
mov
sub
daa
sub
push
and
mov
mov
or
dec
addr16
cmp
sub
inc
mov
and
repz
inc
xchg
in
xor
pusha
and
xchg
out
cli
xchg
popf
pop
xchg
lahf
jae
divb
jae
jg
lock
sub
stos
int3
dec
push
and
insb
cmpsb
push
daa
imul
ss
sbb
push
lea
rcll
jae
iret
mov
roll
push
xchg
inc
and
mov
sahf
jg
mov
cmp
push
push
mov
cmp
ja
popa
pop
and
fidivrs
xor
gs
push
mov
mov
or
dec
imul
push
sub
add
mov
or
enter
sti
adcl
inc
test
aas
lret
or
imul
dec
sbb
jo
mov
scas
shrl
and
and
mov
sub
jb
cmpsb
movsb
enter
daa
sub
jno
fcompl
cmp
cltd
sub
push
xchg
call
in
push
add
or
mov
sbb
mov
pop
lods
pop
test
pop
rcll
fildl
push
push
loope
xor
sub
xlat
aas
outsb
push
inc
jl
pushl
push
cmc
ljmp
jnp
ficompl
aaa
xor
add
scas
mov
push
pop
lcall
jne
bound
adc
push
push
std
pop
mov
add
lcall
push
inc
jg
cmp
mov
dec
or
mov
jns
pusha
or
cmp
nop
rcr
int3
push
test
xchg
xchg
roll
or
cli
sub
lsl
popl
jnp
add
repz
xor
add
les
lods
mov
xchg
in
or
push
xor
inc
pop
cmp
pop
jno
jnp
lcall
jmp
loopne
push
pop
pop
dec
dec
movsl
adc
pop
inc
imul
mov
ret
xchg
xlat
ficomps
push
mov
cmp
xchg
pop
in
pop
subb
dec
test
int3
dec
xor
nop
leave
arpl
bound
fldenv
les
repnz
jecxz
pop
hlt
cmp
xchg
sbb
adc
jns
repz
mov
das
pop
pop
mov
dec
inc
pop
test
ljmp
jb
adc
dec
mov
dec
rcl
cs
notb
lahf
jne
lahf
or
mov
aas
push
mov
enter
or
adc
mov
es
inc
jecxz
test
jp
mov
insb
and
ret
pusha
ret
sbb
shrl
cmp
cmpsl
sub
dec
icebp
inc
into
cmp
sub
mov
call
push
mov
icebp
test
sub
cmp
mov
sahf
imul
sub
mov
ret
cli
pop
sub
movsl
adc
lods
push
sub
test
jge
mov
xor
add
outsb
les
fiaddl
xchg
into
dec
mov
xchg
xchg
sbb
adc
push
shrl
mov
fwait
sub
adc
aad
add
add
lcall
xor
out
loope
mov
xor
mov
xchg
sbb
mov
daa
ja
cli
popf
dec
sbb
cmpsb
inc
shlb
dec
mov
sti
lods
jne
cmpxchg
jae
dec
sbb
loope
xchg
in
jge
sbb
pop
out
cltd
mov
dec
and
mov
jp
cld
sbb
aam
and
shll
jle
in
in
pop
pusha
mov
dec
push
xchg
add
jmp
push
xchg
sub
popf
cmpsb
sub
jae
jge
push
cld
stos
aas
popa
andb
sbb
jbe
mov
mov
jge
sbb
aam
notb
shlb
jle
sbb
dec
ret
jne
cmp
inc
das
pop
push
arpl
into
inc
mov
leave
push
push
shlb
lds
and
pop
push
xor
fstl
jo
neg
or
add
imul
dec
ror
push
jnp
pop
jbe
and
sbb
pushf
jne
ss
push
add
or
sahf
dec
mov
aam
xor
loopne
xor
scas
mov
and
cmp
dec
xchg
enter
push
add
scas
sub
enter
daa
sub
pop
cmp
dec
adc
mov
out
jp,pt
test
sbbl
add
push
xlat
sarl
aad
push
jnp
cmp
lea
mov
pop
sarb
insl
pop
sbb
and
dec
adcb
mov
sbb
inc
sub
shl
push
adc
push
or
orb
xchg
add
jns
and
push
pusha
roll
aam
pop
sub
scas
fwait
pop
nop
or
in
mov
push
push
sbb
fsubrl
inc
sahf
out
jl
pop
sbb
sbbb
jg
mov
movsb
mov
inc
mov
ds
adc
mov
loope
xchg
imul
rcrl
xchg
mov
xchg
or
in
test
cli
ds
jecxz
xor
push
push
outsl
or
loop
fldl
stc
mov
repnz
add
push
adc
xchg
out
or
mov
pop
mov
out
sti
sub
xchg
and
ds
lods
loopne
test
pop
push
aas
lea
test
or
loopne
into
xchg
lcall
cmp
cwtl
sub
lea
mov
cmp
jmp
sbb
das
lods
jg
cmp
out
jge
jae
xchg
fstps
adc
jecxz
int3
stos
movb
into
add
call
out
pop
mov
jecxz
pushf
ja
out
fucomi
addr16
lcall
add
fadds
jb
fcoml
je
xchg
sbb
negb
cltd
std
inc
mov
int
cltd
lcall
mov
clc
out
insl
push
push
mov
fcomp
mov
cmp
lock
inc
das
mov
mov
dec
and
sub
ret
test
movsl
ret
insl
mov
sbbl
daa
nop
je
pop
mov
cld
push
sbb
dec
mov
pop
ret
rolb
popw
adc
push
sub
or
mov
jmp
nop
fucom
xchg
and
xchg
cmp
push
ljmp
cmc
lods
adcl
out
out
mov
push
aam
xchg
je
sahf
inc
cltd
or
test
sahf
lcall
mov
test
iret
decb
sbb
in
sarl
fstps
pop
fwait
xchg
adc
push
mov
cmp
in
sbb
sti
mov
orl
std
jae
and
fbstp
adc
pop
outsl
outsl
jecxz
jmp
pop
sbb
iret
sub
push
out
mov
pop
mov
jl
es
cmp
mov
mov
out
ja
cwtl
dec
cmpb
test
js
or
push
xchg
sbb
adc
jb
adc
lcall
mov
in
das
es
push
cmp
fcomip
adc
xchg
aad
sub
aad
pop
xchg
xor
jae
mov
popf
int
cs
test
daa
jo
mov
leave
imul
jbe
sbb
adc
mov
ret
loope
mov
and
andl
sahf
int
cmpb
push
dec
push
adc
adc
xchg
cmc
cmp
fcompl
int
fiadds
fiaddl
mov
push
xchg
repnz
cmp
mov
xchg
out
push
lret
jbe
lcall
sbb
addr16
jns
jb
sub
and
icebp
adc
push
adc
sahf
jo
in
dec
scas
popl
out
and
out
push
movsb
inc
popa
enter
ja
stos
mov
ror
mov
lahf
clc
cmp
sub
jno
ficoml
cmp
das
push
cli
lahf
pop
out
mov
stos
dec
mov
push
inc
js
xor
dec
stos
mov
mov
xchg
pop
pop
pop
inc
push
sbb
fisubrl
sbb
sub
cld
dec
adc
rcrl
andb
inc
add
xchg
lcall
jl
int
jno
sub
jp
inc
lcall
jne
push
imul
lods
push
ljmp
xor
cmpb
jg
inc
ret
push
cmpsl
mov
push
adc
movsb
repnz
mov
push
fmuls
testl
dec
shll
jne
popa
mov
stos
cmc
popf
sub
outsl
out
or
stc
jae
dec
fs
mov
add
inc
loop
jo
fisttpll
push
stos
add
push
lds
ficoms
cmp
sbb
incb
lock
or
sbb
mov
add
adc
adc
xor
popa
aas
loop
int3
outsb
push
xlat
dec
push
imul
sub
lret
dec
jmp
adc
xchg
pushl
ds
push
jmp
sub
inc
xchg
mov
aas
test
jecxz
sub
inc
adc
lea
dec
lcall
vmovupd
pusha
jecxz
pop
ficompl
arpl
inc
and
push
aas
shll
and
je
rcrb
popf
pop
idiv
in
push
daa
cwtl
fsave
pop
jns
mov
ffree
cmpl
and
faddl
mov
dec
jne
outsl
cltd
cmp
cmp
push
das
jg
cmp
shll
mov
push
ret
cmp
adc
insl
mov
dec
popa
jp
cmpsl
packuswb
repz
fwait
cld
jg
out
gs
dec
and
imul
pop
das
xchg
add
adc
out
sub
clc
sbb
scas
sbb
fisttpll
ljmp
js
cmp
test
sub
shrl
lods
in
xchg
aam
mov
mov
xchg
xor
pop
push
scas
loopne
jecxz
hlt
add
repz
mov
xor
outsl
xchg
stos
sbb
outsl
rcl
idiv
pop
sub
shll
xchg
add
pop
inc
add
lcall
or
and
jbe
mov
mov
xor
ljmp
jle
inc
adc
mov
jecxz
jne
mov
mov
addr16
push
push
bound
fstpt
aad
in
dec
movsl
cmp
and
in
xchg
or
push
xchg
cmp
lods
mov
xor
aaa
jle
cli
loop
mov
es
push
fildll
test
adc
int3
dec
repz
fcomip
jae
inc
sub
aas
add
popf
hlt
fidivrl
call
mov
movsl
insb
out
add
push
arpl
bound
adc
dec
popa
ret
mov
out
rcl
inc
inc
std
enter
addl
jb
jmp
xchg
lds
mov
xchg
dec
push
push
js
fstps
sub
lds
xchg
shrb
sub
stos
scas
aad
mov
lahf
hlt
fists
push
sbb
imul
or
stc
jg
aaa
cmp
or
fiaddl
add
cmp
fsubl
sub
clc
jl
xor
jmp
aaa
and
in
cmp
enter
inc
pop
cmpsb
sub
stos
inc
enter
daa
es
cmp
mov
cmp
icebp
lock
mov
lods
popf
lahf
jp,pt
push
jge
add
adc
and
bts
pop
lcall
loop
or
fidivs
sub
inc
inc
adc
pushf
clc
sbb
mov
in
fdivr
xchg
add
or
push
data16
sbb
mov
inc
scas
pop
mov
mov
push
add
jns
sahf
sub
push
test
movl
pop
sub
jp
xchg
jmp
mov
xor
inc
cmp
pop
pop
sbb
pop
out
lret
nop
rorl
mov
dec
pop
into
rcl
sahf
cmc
rorl
outsl
and
loop
in
sub
sub
push
add
data16
xor
lods
push
adcb
dec
mov
add
push
adc
mov
and
sti
mov
push
xchg
das
loopne
test
adc
cmp
fs
xlat
xchg
and
push
mov
je
xchg
cvtpi2ps
orb
pushf
sub
gs
inc
jo
test
imul
lret
or
out
les
in
jecxz
js
movb
lea
ja
enter
or
add
and
pop
jne
testl
or
aas
jb
test
dec
out
js
je
data16
shrb
mul
in
std
xchg
ror
cwtl
push
inc
mov
pop
fmull
or
push
pop
lret
dec
dec
push
mov
lods
and
xchg
int3
push
das
pop
repnz
js
icebp
and
cld
aad
push
es
jmp
jno
pop
dec
pop
add
sti
mov
lret
cld
stos
in
sub
push
outsb
xchg
and
push
outsl
jge
dec
mov
and
cmpsb
add
mov
f2xm1
push
jno
rcr
xor
or
cmc
sbb
xchg
mov
and
sbb
ljmp
stos
mov
and
adc
movsl
cmovb
test
sub
imul
dec
lcall
int
ljmp
bound
fsubrs
xchg
fadds
and
mov
or
dec
mov
xchg
je
lahf
mov
dec
test
pop
out
pop
in
xchg
ja
stc
decl
push
jae
xchg
jbe
or
idivl
dec
inc
lds
mov
xor
out
xor
xor
in
xor
hlt
out
xor
sub
cmp
pop
test
jp
mov
dec
mov
loopne
mov
jae
in
mov
add
xor
jmp
leave
mov
jae
push
push
add
mov
mov
daa
and
stos
cwtl
shlb
shrb
popf
imul
scas
cmpsb
movsb
cli
push
test
stos
repz
cmp
sbb
and
rolb
arpl
xchg
mov
push
dec
push
dec
jae
fidivrl
fistl
and
jmp
fimuls
faddp
pop
pop
out
adcl
repnz
sti
inc
leave
sub
xor
adc
push
push
sti
jge
cmpsl
dec
sbb
cli
or
popa
cmp
fwait
lods
ret
or
dec
add
outsl
xor
inc
jbe
scas
dec
sbb
or
idivb
inc
fs
cmpsb
mov
pop
in
fs
pop
daa
and
test
imul
cmp
imul
cmpsl
cmc
movsl
test
xchg
and
lahf
pop
or
push
push
add
and
je
fdiv
shll
cli
or
rcrb
enter
icebp
js
inc
inc
pop
xlat
test
push
mov
stos
sub
lret
cltd
cmp
adc
ja
mov
add
ret
sbb
test
add
iret
sahf
and
outsb
int
lock
out
or
pop
push
pop
and
fwait
sbb
xor
repz
mov
scas
int
jg
popa
adc
test
pop
mov
mov
push
ss
stc
cmp
ret
test
es
shl
sbb
cmpsl
sub
mov
dec
cmc
sub
mov
sti
pop
movsb
outsl
movsl
sbb
loop
ret
loope
add
aam
rorl
mov
mov
jae
cli
test
push
cmp
es
aaa
and
mov
gs
loopne
adc
adc
xlat
imul
mov
xchg
jecxz
xlat
sbb
inc
jno
xlat
outsb
stos
sub
xchg
mov
pop
fs
jno
cs
sub
int3
ss
into
sub
inc
lods
es
inc
popa
cmp
push
data16
or
mov
dec
jge
lea
fcomps
or
cmp
or
pushf
js
mov
jne
sub
rcrl
inc
push
sbb
aas
adc
jb,pt
jbe
dec
data16
xchg
je
dec
pop
rorl
mov
and
cmp
cwtl
adc
mov
ret
or
andl
ss
mov
push
adc
std
cmp
icebp
movsb
pop
das
cmp
pop
inc
mov
lahf
popa
rol
push
das
sub
jb
test
mov
cmpsl
and
and
mov
adc
mov
sub
lock
insl
mov
sarb
mov
ror
mov
leave
rcll
or
pop
inc
outsb
clc
xor
inc
xchg
mulb
cmp
dec
adc
add
out
adc
xchg
mov
test
loop
sar
inc
cltd
scas
pop
pushf
test
repnz
push
out
cmp
aam
xchg
sbb
ret
stc
roll
mov
mov
mov
add
fmul
and
sbb
jle
fs
mov
xchg
ret
fs
mov
cmp
mov
add
dec
in
mov
sub
or
cmp
push
jne
lret
sub
or
adc
jecxz
fwait
mov
nop
in
jo
sbbl
sub
xor
sub
ss
push
jp
inc
and
divl
push
subb
jnp
nop
jle
loopne
in
sbb
pusha
sub
fists
xchg
dec
jp
jmp
xchg
fistl
mov
and
lds
lds
pop
into
inc
push
data16
or
out
insb
mov
mov
scas
or
test
fcoms
adc
lods
iret
cwtl
jns
ret
dec
pop
pop
cmp
pop
xor
xchg
dec
out
inc
lret
inc
lret
loop
push
int3
imul
sub
stos
xchg
cli
sbb
or
xchg
jbe
imul
lret
loopne
shl
push
jge
leave
mov
and
push
mov
divb
dec
cmp
sbb
out
aaa
mov
or
pop
test
xor
dec
jb
sub
mov
jns
jo
pop
jo
sub
inc
and
lock
movsb
in
pop
inc
push
lret
cmpsb
xor
out
dec
mov
les
and
test
mov
jno
fs
jl
ss
fwait
lret
push
push
sbb
out
push
js
jl
pusha
push
and
dec
test
cmpsl
mov
xor
sbb
xchg
push
movsb
pop
insb
movsb
dec
js
jp
pop
push
push
outsl
push
loope
mov
hlt
sub
mov
adc
push
out
pop
shlb
sbb
mov
dec
mov
add
jmp
xor
int
test
fsubl
pop
mov
lcall
sbb
iret
sbb
int3
or
js
rolb
sub
test
lds
push
mov
in
adc
mov
ss
outsl
cmp
jge
mov
test
and
pop
mov
shll
mov
ret
xchg
sbb
xor
xchg
outsl
test
test
stc
cwtl
cmp
add
xchg
data16
pop
lods
and
push
pop
out
popf
lcall
stc
mov
sti
out
cmp
rorl
loopne
mov
pop
in
fists
cmp
mov
mov
movsl
adc
push
in
sbb
mov
sbb
jge
out
xlat
add
inc
mov
in
jb
sub
gs
cs
hlt
popa
nop
test
dec
inc
inc
mov
cmp
les
and
sbb
adc
mov
mov
rcll
cmpsb
mov
pushf
and
in
xor
inc
jno
pop
aas
mov
jb,pt
adc
dec
fldl
clc
rcrl
xchg
mulb
push
std
loop
std
cwtl
int3
iret
mov
sub
inc
cmp
xchg
mov
sub
jns
les
sahf
lock
xchg
shrb
call
and
sub
mov
in
in
es
mov
insl
aas
ljmp
and
icebp
js
pop
cld
add
movsb
mov
xchg
ret
xor
adc
mov
add
mov
sub
mov
push
mull
pusha
clc
imul
ljmp
lods
sub
jmp
mov
add
cmp
add
popf
add
fidivl
inc
mov
mov
insl
add
dec
movsb
sbb
jns
lret
push
pop
sbb
movsb
inc
pop
les
push
popa
sbb
inc
test
add
pop
inc
mov
ja
push
or
das
xchg
xlat
loope
adc
lahf
mov
mulb
pop
pop
shrb
ja
mov
ret
lods
mov
add
mov
mov
dec
jne
insb
ret
js
repz
bound
inc
mov
inc
ftst
lods
subl
jne
cltd
mov
or
rcll
jp
xchg
inc
mov
dec
jo
stos
pop
sub
xorb
rolb
aam
in
ret
push
fbstp
mov
jmp
pop
push
addr16
inc
xchg
push
mov
sub
lcall
stos
jle
mov
outsl
mov
repz
scas
insb
add
push
aaa
sub
adc
mov
popf
ret
jbe
xchg
popa
repnz
dec
or
outsb
filds
pop
fisttpll
cwtl
lcall
fists
xchg
push
push
stc
sbb
xor
fimuls
dec
mov
jle
std
mov
mov
shrb
rorb
jbe
cld
popa
jge
xor
sub
aaa
jne
sub
add
jbe
int3
popf
push
sub
loope
pop
push
mov
xor
test
xor
je
outsl
divl
lods
jne
cmpsb
mov
je
xor
fldenv
and
cli
jno
test
jl
lcall
sub
mov
mov
lahf
fwait
xor
testb
jb
inc
xor
call
js
dec
push
pop
push
mov
xchg
loope
jp
sub
leave
stos
sub
cwtl
outsb
movsl
shrb
addb
addl
filds
outsl
mov
int
fldcw
push
hlt
sub
or
lcall
das
faddl
out
loop
push
xor
mov
jg
mov
mov
fcoms
mov
pop
inc
adc
or
stc
sub
cmp
cmp
cmp
push
cmpsb
push
rorl
xor
mov
mov
mov
aas
in
outsl
arpl
pop
loop
or
stc
dec
ljmp
jb
sub
divw
lds
add
cli
ljmp
cmp
test
sti
xchg
add
rorl
in
loopne
xor
and
or
push
lods
into
rclb
inc
aam
imul
cmp
out
sub
mov
mov
jmp
sbb
sbb
pop
jne
nop
test
dec
cmpsl
call
fldcw
cwtl
cmpsb
jecxz
stc
iret
dec
mov
xchg
call
or
lret
pop
cmp
adc
add
mov
fcmovnbe
cld
mov
adc
inc
movsl
incl
jne
aas
dec
jmp
jb
loopne
dec
push
add
add
lods
xchg
mov
test
mov
pop
mov
sbb
mov
shl
xchg
lahf
enter
mov
cwtl
lock
xchg
xchg
xorb
xchg
hlt
das
sti
call
mov
popf
pop
cmpsb
and
sub
ret
je
js
lods
insl
es
adc
and
loopne
push
cmp
dec
jecxz
cld
sub
cmp
mov
cmp
mov
stos
loopne
rcrb
sub
jmp
mov
ja
push
mov
es
clc
cmpsb
cmpsl
xchg
xchg
je
xor
je
jmp
das
cwtl
in
or
outsb
xchg
fucomi
cmpsl
push
xchg
dec
in
push
sbb
mov
add
jmp
cltd
sbb
sbb
pop
arpl
or
ja
xchg
jae
xchg
les
inc
xor
xor
jg
ja
out
sub
jae
push
call
cli
xchg
ret
or
xchg
xor
jl
xchg
popa
arpl
mov
cli
push
mov
push
popf
pushl
pushf
inc
dec
lret
push
pop
inc
pop
jg
or
inc
ljmp
and
jne
jae
mov
add
out
rcrb
sbb
jns
pusha
cmp
aaa
loope
cmpl
mov
cmp
sub
sub
sub
xor
jp
pushf
mov
mov
in
aaa
bound
xchg
out
fildl
scas
pusha
pop
test
rclb
pusha
push
jae
rclb
nop
add
aad
pushf
push
in
adc
icebp
xchg
xchg
and
imul
iret
sbb
inc
adc
out
iret
push
mov
pop
lret
inc
jno
mov
aam
inc
shl
pop
or
adc
mov
ficoml
mov
sbb
jo
pop
imul
mov
insl
rcrb
add
negb
test
and
or
push
push
outsb
jbe
sbb
stc
sbb
dec
aaa
xor
aas
or
addr16
add
push
int3
mov
pop
push
test
cltd
jo
pop
inc
scas
ljmp
cmp
iret
andb
mov
cmp
in
sbb
enter
daa
and
cmp
sub
jno
lret
rcl
cmp
sar
ds
cmpb
sbbl
lahf
mov
adc
test
cmp
or
lds
outsb
enter
adcb
sbb
push
sub
loope
pop
fsubrl
xchg
sub
adc
repz
or
mov
xchg
sbb
sbb
and
and
int
pop
adc
rclb
pop
mov
dec
push
pop
jne
fsubrl
inc
sbbl
jle
addb
clc
jg
sub
imul
mov
cs
adc
push
rcr
cmp
add
popf
lret
aad
movsl
xchg
scas
mov
or
jge
sbbb
dec
pop
outsl
inc
sbb
loop
jnp
stc
push
push
fs
push
sub
addb
lods
repz
mov
jge
cli
sbb
jno
cmp
icebp
cmc
sti
inc
sbb
hlt
pop
fistps
sbb
jle
adc
loopne
imul
hlt
xchg
sub
jns
and
push
cmp
dec
inc
xlat
sub
sub
aas
in
dec
jmp
rcrl
aad
pop
mov
dec
push
lea
inc
in
sbb
in
adc
jbe
pop
jecxz
add
lea
scas
popf
call
mov
mov
pushf
jns
jp
add
pop
pop
add
inc
cmpsl
rol
out
jb,pt
in
dec
lret
es
sar
call
lret
scas
out
inc
mov
mov
jle
loope
jno
sub
jle
insl
lret
pop
add
pop
mov
dec
mov
add
lock
push
out
mull
mov
ret
add
popf
insl
or
stc
cmp
mov
inc
icebp
cmp
cld
push
jle
mov
fucom
aam
inc
push
jp
jb
dec
pop
lret
shlb
jo
sub
jp
mov
xor
push
jge
pop
out
stos
clc
loope
sbb
ljmp
pop
lods
add
popf
out
cmp
inc
push
notb
dec
add
xor
push
je
test
pop
mov
jae
or
test
mov
loop
stc
cmc
dec
rorl
test
cmc
push
mov
add
mov
pushl
sbb
dec
xor
jne
xchg
mov
popa
mov
jb
mov
sar
push
ja
xor
mov
je
or
push
ja
ret
add
into
aam
jne
fisubs
out
mov
fisubs
daa
pop
jns
sbb
in
pop
xchg
mov
and
or
mov
jp
push
mov
jl
cli
mov
pushf
mov
jle
loopne
in
mov
mov
lret
xorb
dec
mov
push
push
mov
cmp
adc
or
sub
out
insb
incb
mov
cmp
mov
repnz
int
xor
mov
outsb
ret
insb
pop
add
lcall
test
in
and
inc
dec
insl
out
inc
orl
cmp
iret
add
ficoms
jmp
shlb
repnz
cmp
leave
push
adc
push
push
movsb
lods
fdivl
mov
jge
dec
negl
mov
mov
lret
add
iret
hlt
int3
jae
xchg
dec
mov
fisttps
mov
pop
scas
leave
xor
and
ret
cmp
mov
sub
add
in
inc
mov
push
cmp
lcall
fiadds
test
popa
outsl
or
movsl
rcrb
fldcw
push
pushf
fsubr
test
or
adc
ss
mov
fidivs
pop
loope
les
mov
add
push
loope,pt
pop
addr16
sbb
push
outsb
imul
adc
jecxz
and
adcb
fistps
out
adc
iret
and
fwait
clts
jne
das
int
popf
je
dec
dec
movb
jnp
lcall
and
sbb
sub
or
mov
data16
clc
ljmp
push
stc
adc
aam
ss
sub
scas
loop
test
mulb
mov
testl
aas
test
jl
addr16
outsl
and
loop
and
mov
xor
add
push
xchg
mov
mov
movsb
mov
out
xor
mov
outsb
cmp
xor
sti
repz
pop
and
gs
aad
or
pop
inc
fisubrs
imul
fimuls
xchg
out
mov
cmp
data16
ret
sub
mov
mov
mov
dec
jmp
fxch
cs
jle
call
enter
xor
pop
fstps
jae
sbbl
ret
push
lds
call
or
in
pop
lahf
fistl
stos
or
and
sub
xor
pop
movsb
and
inc
dec
shrb
inc
ret
aas
lea
hlt
dec
inc
in
mov
rorl
leave
imulb
imul
std
add
mov
test
aam
jno
imul
mov
inc
mov
add
das
mov
lcall
lret
aas
cltd
ret
xchg
jmp
or
add
inc
push
and
icebp
std
mov
cld
xor
mov
add
push
and
or
push
pop
rolb
sbb
aam
pop
gs
xor
neg
hlt
pushf
jecxz
sbb
sub
pop
das
lds
lret
bound
xor
out
pushf
ret
fiaddl
push
rcrl
sbb
stos
loope
mov
std
test
mov
jbe
ss
fnstenv
scas
xchg
dec
sbb
lcall
in
push
sub
jmp
outsl
call
xor
decb
inc
iret
sub
ret
loopne
pushl
mov
pop
mov
pop
mov
ss
dec
jo
mov
ret
mov
les
dec
mov
cmp
lods
cli
mov
dec
imul
nop
imul
in
mov
sub
sub
and
cmp
pop
mov
imul
dec
out
das
jle
sbb
or
bound
out
enter
jmp
rol
jae
scas
push
rcl
popfw
fisubrs
mov
in
stos
xlat
inc
sahf
and
xchg
insb
imul
scas
xchg
xor
or
jg
test
push
iret
adc
or
pop
cmp
frstor
insb
loop
xlat
jo
or
or
xchg
inc
enter
clc
test
xchg
push
in
sbb
mov
je
fdivp
mov
sbb
iret
testb
cmp
pushf
mov
leave
jge
sub
mov
push
jbe
mov
mov
aaa
mov
add
into
inc
movsl
add
sti
or
mov
push
dec
add
jge
adc
or
pop
and
inc
iret
cmp
aaa
movsb
adc
add
cmpsb
aas
lcall
inc
notl
cmp
jno
mov
jns
push
in
lock
sbbb
pop
xchg
lahf
clc
adc
push
outsl
rcrb
push
shr
mov
mov
leave
aad
mov
imul
xchg
mov
loope
cmpl
inc
repnz
outsb
into
add
jle
rcl
mov
test
es
ljmp
push
js
stos
int
ret
jae
enter
mov
popf
lcall
dec
faddl
movsb
sbb
rcrb
incb
cmp
movsb
imul
adc
mov
inc
mov
leave
icebp
adc
and
cmc
clc
dec
fsubrs
testl
rcl
mov
or
ss
and
cmc
push
cli
sub
outsl
add
std
loop
cli
js
je
mov
add
inc
test
lahf
push
outsl
out
insb
xor
addl
cmp
dec
pop
sti
mov
xlat
andl
std
cwtl
pop
pusha
inc
fists
test
jnp
es
add
pop
adc
xchg
mov
mov
cmp
repnz
add
sub
mov
leave
jmp
fst
cs
lock
push
or
or
ret
std
lock
in
pop
stc
adc
cmp
movl
xchg
pushf
iret
sub
pop
inc
xchg
mov
inc
fstl
sub
xchg
je
les
lcall
std
jle
or
xchg
add
icebp
sbbl
add
in
fisttpll
loopne
test
mov
add
mov
push
dec
lock
and
sub
insl
fstpt
dec
imul
clc
xor
aam
dec
cld
lods
ds
mov
dec
xchg
cmpsl
mov
or
fcomps
sub
fs
xchg
sub
add
imul
xor
or
int
fsubs
test
lods
fstps
stos
cmp
popa
xchg
and
fiaddl
xor
cltd
shl
test
sahf
mov
jns
adc
lret
nop
test
mov
cli
sbb
add
aaa
fisubrl
fcmovu
sub
sarb
loop
les
dec
xor
mov
inc
xchg
dec
fbld
arpl
push
pop
inc
jne
ja
jecxz
dec
movsb
sub
int3
outsb
or
push
insb
mov
adc
jne
fbld
out
mov
outsl
ja
bound
mov
in
subb
push
out
movsb
xchg
sub
sbb
fwait
mov
popf
jmp
outsb
mov
cli
lock
jle
dec
xor
lock
jns
das
fucomip
aad
xchg
insl
mov
jmp
mov
dec
push
xchg
arpl
popf
add
in
push
mov
stos
sti
and
adc
imul
pop
scas
clc
sub
adc
mov
jg
outsl
outsb
or
arpl
sahf
push
or
test
fisubrl
mov
sbb
and
ficomps
xlat
int
ljmp
repnz
pop
leave
hlt
out
hlt
in
imul
jbe
cmp
sbb
mov
or
ret
and
fiaddl
popf
xor
xor
lock
scas
xchg
and
mov
movsb
fwait
int
inc
jmp
movsb
in
into
lock
cmp
inc
daa
pop
pop
insl
cmp
jo
jl
jae
cmp
and
movsl
rcl
mov
lahf
pop
mov
mov
push
sahf
dec
xor
jne
fs
into
pop
das
int3
imul
les
push
pop
xor
or
loope
into
push
sub
mov
sub
leave
add
mul
adc
cltd
mov
stos
and
and
pop
adc
pop
movsb
push
jnp
hlt
int
int3
jle
inc
cli
ss
pop
shl
lcall
sub
scas
mov
sbb
mov
sbb
and
inc
adc
fs
shlb
scas
daa
ss
js
fsubs
inc
and
lret
rol
push
sub
sub
add
pop
in
xor
aas
test
ret
pop
test
fs
out
popl
sub
pusha
bound
lcall
cli
mov
fbstp
xchg
xor
cmp
xor
pop
or
hlt
jne
loopne
add
adc
movsb
imul
mov
xchg
jne
xchg
sbb
movsb
pop
arpl
inc
or
sub
inc
mov
mov
mov
mov
pushf
aad
nop
lock
in
dec
and
jne
mov
sti
les
mov
pop
mov
and
inc
inc
outsb
movl
mov
adc
ficompl
aad
pop
ljmp
inc
clc
sbb
jb
es
xor
je
movsb
or
jmp
arpl
cwtl
jae
data16
jle
mov
sub
aas
cmp
lret
push
fiaddl
mov
and
mov
xchg
mov
das
ja
lret
sbb
mov
loope
pushf
ret
mov
cmp
insl
ret
dec
cmp
pop
cmpsl
push
xchg
jno
and
dec
cld
xlat
pop
sarl
ret
and
inc
dec
mov
daa
insl
jo
stos
movsl
add
addr16
aam
push
lods
mov
add
fldl
stos
clc
xchg
rorb
inc
inc
popa
mov
lods
inc
andl
sub
das
out
bound
aas
push
xchg
out
fstpt
jb
clc
movsb
ret
jbe
mov
jl
rorl
mov
inc
lcall
mov
pop
test
xchg
push
jae
lea
fbstp
call
xchg
or
sbb
xor
pop
cli
xchg
popf
nop
cmc
mov
xchg
mov
add
push
dec
xchg
out
gs
mov
popf
or
inc
xor
adc
adc
mov
xchg
mov
loop
out
dec
mov
bound
sub
arpl
mov
inc
js
sub
sbb
cmp
sbb
rol
test
xorb
jle
jae
in
jl
pusha
lret
fisttps
shlb
pop
and
test
jae
lahf
loope
push
data16
shll
loopne
mov
mov
inc
ljmp
xor
pop
pop
xchg
push
lcall
iret
shrb
ret
dec
pop
cmpsb
lret
cmpsl
inc
popf
mov
arpl
adc
inc
ffree
les
fimull
adc
xchg
add
mov
shrb
mov
cmp
cli
rolb
or
inc
leave
sbb
hlt
aaa
je
push
xchg
cmpsl
xor
sub
jge
sbb
sti
aaa
xor
sub
mov
sbb
mov
in
or
push
push
adc
xor
rorl
pop
or
cmp
mulb
mov
in
mov
insb
enter
daa
push
js
cmp
inc
call
cmp
push
stc
movsl
fldenv
and
arpl
push
adc
or
imul
adc
daa
stc
in
pop
push
mov
js
cld
mov
push
adc
xchg
cmp
iret
sub
fs
outsb
xchg
loopne
adc
je
scas
orb
xchg
cmp
add
push
and
movsl
mov
jle
aaa
int
mov
xlat
pop
xchg
lcall
sub
sbb
sbb
mov
test
jg
mov
js
jmp
mov
adc
sub
dec
jmp
and
fists
incl
roll
je
psrlq
dec
jnp
into
call
daa
sub
js
stos
outsl
mov
dec
xor
loop
fs
iret
add
inc
lods
loope
mov
insb
jg
jmp
adc
sti
add
cmpsl
incb
fcoml
pop
sahf
push
int
sub
xor
adc
repz
cmp
rcrb
fildll
jnp
jg
push
ja
or
in
hlt
adc
jmp
xor
or
xlat
enter
mov
inc
in
inc
xor
fld
mov
les
leave
daa
pop
mov
jmp
mov
in
lock
mov
cmpsb
sahf
pushf
and
mov
pop
lea
inc
in
inc
inc
adc
test
stc
enter
mov
sarl
loop
idiv
mov
enter
gs
mov
sbbb
xchg
dec
sub
clc
lret
ret
in
add
imul
mov
xchg
mov
xor
dec
ret
aas
jmp
pop
imul
test
sub
sarl
cmp
cld
add
mov
imul
out
inc
lcall
pop
inc
fcmovnbe
dec
std
lahf
mov
iret
mov
mov
imul
inc
xchg
scas
mov
ljmp
or
scas
jp
stos
sbb
out
lds
stc
push
bound
enter
rcrl
test
nop
mov
jg
cmpsl
dec
push
cmpsb
cmp
vpsrlw
lds
outsl
shl
int3
into
pop
xor
push
negl
push
cld
jbe
mov
inc
pushl
mov
xor
rorl
movsl
xor
xor
mov
daa
mov
pop
mov
cmpsl
outsb
dec
mov
inc
dec
mov
or
push
jo
jg
xchg
dec
pop
and
jne
jno
mov
dec
xor
sub
pop
pop
jns
ja
in
cmp
addl
cmp
mov
sub
addr16
and
mov
int3
dec
mov
pop
inc
cmpl
in
xchg
adc
gs
mov
sub
iretw
jmp
and
xorl
mov
popf
push
divb
mov
pop
push
cld
stos
xor
insb
stos
shll
mov
jp
loope
arpl
cmp
mov
xor
add
mov
int3
testb
arpl
into
faddl
xchg
les
jp
cmp
inc
cmpsl
sbb
push
ret
mov
sbb
adc
pop
push
out
and
fisubrs
lds
mov
inc
mov
xchg
mov
leave
loop
mov
push
loopne
jno
sbb
adc
mov
ret
fcomps
add
sbb
pop
adc
dec
jnp
and
repz
ror
pushl
mov
xchg
and
mov
movsb
mov
addb
lds
pushf
jbe
enter
daa
sbb
mov
aaa
jl
push
adc
fs
ds
test
movsl
loopne
repz
adc
push
call
loopne
push
xor
jb
pushf
ljmp
js
inc
sbb
iret
mov
ljmp
movsl
clc
sub
ret
outsb
idivl
or
dec
rclb
pop
or
sbb
out
add
shlb
and
push
push
adcl
js
cmp
std
pop
add
push
jae
adc
ret
faddl
pop
pop
sahf
out
cmc
test
and
subl
mov
arpl
lcall
ljmp
idivl
push
popa
rcrl
rorb
mov
out
lret
loopne
cmc
arpl
rol
aad
popf
imul
jmp
sbb
add
pop
or
push
lods
jbe
or
cld
xor
cli
sbb
outsl
xor
cmp
jg
sti
scas
push
jmp
mov
test
loopne
inc
push
mov
jl
imul
dec
repz
xchg
sti
ret
mov
cmp
fwait
jmp
sub
push
ret
mov
pop
out
jmp
cmp
aad
mov
nop
cmpsb
cmpsl
gs
loope
loop
inc
push
mov
clc
or
lods
push
test
popa
dec
decl
aaa
push
xor
add
fstps
ss
adc
int
pushf
rclb
jb
in
pop
and
mov
inc
imul
inc
cs
aas
or
jb
add
je
popa
insl
roll
jae,pn
jae
lcall
mov
sbbl
inc
dec
lret
xor
addr16
sbb
and
leave
aaa
call
mov
out
fbld
pop
mov
into
jecxz
mov
insl
nop
inc
aaa
dec
das
in
mov
mov
push
icebp
pop
or
sub
mov
int3
and
jns
inc
pop
gs
movsl
rclb
mov
aam
xor
dec
ret
nop
cmp
clc
or
xchg
out
ljmp
mov
inc
and
sub
xchg
divb
sbb
cltd
sub
das
cltd
data16
jmp
mov
cmp
dec
jne
or
xchg
sbb
mov
pop
fnsetpm(287
mov
cltd
mov
sub
add
out
xor
xchg
xor
inc
sub
mov
cwtl
stos
mov
js
or
push
iret
mov
jge
enter
and
cmp
mov
pop
jb
cmp
rorb
mov
leave
out
or
jecxz
xor
jns
push
test
xchg
aas
es
jnp
sub
push
stos
pop
addr16
clc
jp
mov
mov
pop
mov
add
lds
dec
mov
adc
jb
rcll
lahf
mov
popf
jp
imul
sub
mov
lahf
incb
adc
rclb
scas
and
jne
sub
adc
ror
nop
fmul
ret
pop
pop
adc
push
mov
shll
int
inc
jecxz
adc
cmc
xor
les
push
xchg
mov
jns
es
movsb
pop
test
push
fiadds
movl
call
jb
hlt
int
xchg
push
das
clc
jl
pop
imul
sbb
dec
aaa
scas
std
inc
or
and
int3
or
dec
ljmp
xor
ja
xor
cmp
aas
movsb
cmp
addl
inc
cmpsb
dec
inc
mov
orl
daa
sbb
popf
cmp
daa
sbb
pop
fdivrl
xchg
cmp
push
lcall
test
sub
push
mov
pop
or
xor
xchg
lods
xchg
repz
movsb
sub
xchg
pop
push
cmp
cmp
sub
pop
sub
out
outsb
pop
mov
shrb
in
xorb
sbb
xor
scas
and
decl
test
inc
sub
bound
push
hlt
sbb
in
jecxz
mov
sbb
mov
and
pop
fsub
mov
lods
mov
out
mov
ss
popa
push
xchg
dec
enter
and
lret
shrl
pop
mov
sahf
les
es
into
scas
push
fwait
cmc
sub
loope
cs
aaa
outsl
jl
xor
jl
adc
push
pop
shll
fwait
add
xchg
aas
data16
pop
and
mov
cli
dec
scas
xor
cmp
out
in
sti
pop
mov
sub
xlat
ret
xchg
adc
roll
outsb
sbb
push
xchg
mov
push
mov
pop
xlat
std
lret
pop
jnp
mov
lret
jmp
xchg
ss
aad
out
js
adcl
inc
push
xchg
das
add
les
vshufps
mov
outsl
movl
pop
addr16
jnp
push
fistpl
cld
pop
shl
push
inc
repnz
inc
inc
dec
daa
and
test
leave
jb
cmp
dec
xchg
arpl
je
cmp
cli
idivb
mov
sbb
xor
xchg
and
xorl
xchg
jge
or
cld
push
sbb
adc
std
mov
sahf
fsubs
xorb
es
push
leave
dec
sub
in
cmpsl
sbb
icebp
xor
and
pop
scas
add
scas
xor
and
adc
sbbl
add
shlb
xor
dec
cmp
aam
mov
mov
xor
mov
mov
inc
clc
inc
andl
ljmp
inc
lods
test
inc
stos
mull
mov
cmp
jg
psubb
add
cltd
popf
cltd
pop
test
loopne
xchg
adc
aad
xchg
shl
sub
rcll
cmp
push
pop
or
or
xor
ljmp
cmpsb
xor
ret
or
xor
xor
xchg
mov
mov
enter
cli
imul
jp
dec
jo
cltd
inc
jnp
pop
or
testb
pop
xor
fwait
jne
xchg
in
mov
pop
arpl
jmp
push
mov
jns
std
or
add
or
int
dec
sub
or
addr16
leave
jp
jle
mov
sbb
mov
mov
adc
fcomps
in
fwait
xchg
fildll
out
xchg
mov
insl
add
add
push
mov
dec
mov
popf
mov
stos
push
dec
lret
adc
imul
ret
xchg
mov
outsl
mov
adc
sub
ret
push
sti
pop
dec
mov
jp
sbb
movb
loop
push
mulb
inc
inc
pop
push
fidivl
jb
or
sbb
dec
push
pop
mov
xchg
fisubs
sbb
rclb
mov
cmp
pop
hlt
sbb
inc
jbe
mov
jge
cmc
mov
add
popf
or
cmp
int3
cmc
popf
push
dec
pop
rorl
push
mov
and
scas
add
sarl
mov
movsb
jecxz
inc
and
push
sub
push
dec
daa
shrb
push
inc
pop
jno
pushf
inc
jl
mov
ret
ds
xor
and
sti
lahf
xchg
jl
push
mov
push
push
lret
xor
mov
cmp
shlb
xor
jmp
sub
in
sub
int3
add
adc
add
or
addb
mov
cwtl
sti
and
adc
push
xchg
int
sub
inc
fwait
pop
add
sbb
push
pop
mov
sbb
nop
test
test
mov
mov
fldenv
mov
push
mov
or
mov
mov
adc
add
adc
jle
cmp
mov
rol
aad
rolb
or
mov
cmc
icebp
fnstcw
xor
cmpsl
xchg
loop
inc
inc
insb
fs
add
int
cmovle
lods
inc
pop
jo
xchg
fsubp
cli
dec
insb
cli
cmp
xor
xorl
or
mov
adc
loopne
faddl
adc
es
adc
mov
repz
dec
xchg
addl
mov
cmp
xchg
rorb
xchg
in
xor
insl
push
cs
aad
and
lahf
jnp
inc
push
pop
fldenv
popa
jecxz
test
test
or
sub
jl
pop
rorl
dec
pushf
es
fisttpl
int
jbe
push
inc
jns
xchg
inc
decb
aas
inc
inc
mov
dec
or
shll
mov
test
outsl
std
shl
cwtl
pop
cli
lea
xchg
orl
lret
adc
mov
jbe
lock
lahf
das
repz
mov
push
call
arpl
in
js
es
bound
pop
inc
xchg
dec
and
cmp
mov
pop
mov
sbbl
mov
jb
push
mov
mov
les
inc
sub
aam
xchg
std
mov
int
push
sarb
clc
jle
mov
insb
in
ljmp
xor
lock
adc
out
out
repnz
push
repz
pop
cltd
cltd
aam
repz
xchg
push
xchg
pushf
fisubrs
inc
and
fiadds
jmp
pop
xor
fwait
notl
rolb
outsl
mov
push
push
cmp
or
pop
gs
jbe
xchg
fscale
fidivs
mov
out
ret
pushf
stos
iret
dec
arpl
push
adc
or
test
dec
add
jne
mov
mov
bound
push
jns
xor
stos
xorl
lods
sub
add
xchg
inc
mov
and
mov
gs
jle
jnp
adc
fldenv
outsb
test
mov
psubsw
loope
xorb
lret
scas
adc
arpl
out
popf
enter
lods
outsb
lret
push
fsubrl
stos
mov
les
int
sub
std
imul
scas
out
insl
push
mov
sahf
adc
cmc
add
dec
pop
leave
ret
inc
pop
subb
arpl
xchg
push
inc
jmp
cli
repnz
ret
fisubrl
dec
or
jl
lods
pop
jecxz
jge
cmpsl
rol
push
cmp
mov
mov
fdiv
arpl
cmc
push
int
mov
jge
mov
sbb
sbb
or
jbe
int3
loopne
xchg
dec
enter
pushf
xlat
dec
xor
sub
rcll
cmp
cmp
mov
jle
push
rcrl
push
insl
int3
enter
daa
sbb
cmp
add
jl
fs
cmp
dec
ds
sbbl
lahf
mov
pusha
push
popa
jecxz
test
xchg
push
aaa
xor
jae
xor
pushf
pop
repnz
jae
sbb
lcall
ss
repnz
and
es
push
sub
ja
outsb
and
unpckhps
mov
popl
push
mov
jo
addb
lret
and
sub
mov
int
push
mov
pop
xorb
lcall
pop
faddl
inc
insl
sbb
sarb
sahf
rcr
das
test
movsb
scas
jg
xchg
and
add
and
push
jns
adc
js
ss
stos
cmp
lret
scas
enter
adc
fdivl
rol
pop
ret
mov
icebp
sub
je
mov
xor
cltd
pop
outsl
cmp
aas
loop
push
xchg
stc
mov
xchg
clc
push
repz
stos
mov
subl
cli
mov
lea
leave
out
pushf
cmp
sub
decb
loopne
pop
popa
loopne
inc
xor
adc
xchg
roll
dec
push
repz
pop
xchg
inc
mov
pop
cmp
lret
push
sbb
jnp
subl
push
push
mov
mov
or
fsts
dec
aas
popl
andl
popf
fdivrl
jecxz
shr
push
nop
lea
mov
movl
sbb
shrl
fstpt
sbbl
es
add
sti
aas
out
jp
mov
inc
jmp
or
outsb
shll
testb
std
push
push
mov
mov
mov
dec
and
xchg
add
jg
and
rclb
ficompl
es
shlb
mov
cwtl
data16
jnp
jo
adc
decl
mov
popa
mov
fiadds
sar
pop
xor
mov
jns
shll
ret
ror
push
dec
sub
rcrb
stos
push
push
xchg
arpl
mov
test
ljmp
dec
lods
pop
mov
mov
push
cmpsb
xchg
xchg
lret
gs
movzbl
lds
mov
and
mov
mov
dec
stos
or
xchg
ret
mov
roll
sahf
pop
fcompl
fwait
cmp
add
data16
mov
xor
add
xor
adc
mov
test
mov
test
pop
orb
push
test
out
mov
mov
or
mov
mov
das
in
shl
jns
adc
cmpl
leave
out
gs
lahf
xchg
inc
or
mov
addr16
and
iret
addb
hlt
cmp
psraw
jns
in
loop
pusha
shll
fildll
mov
xchg
dec
cmp
lcall
popf
out
sarb
into
mov
cld
aad
and
mov
scas
imul
lret
mov
js
lods
and
ret
fs
mov
push
andb
movsb
inc
in
jbe
or
data16
lods
inc
inc
and
fcmovu
pusha
push
xchg
mov
in
sbb
fistps
adc
dec
lds
rorb
repnz
mov
hlt
scas
xchg
cmp
out
leave
jbe
lods
mov
cmp
fwait
sbb
std
aaa
jmp
mov
add
ja
dec
aaa
cmp
push
jg
test
mov
push
scas
sar
and
dec
aad
push
out
inc
inc
mov
jo
cmp
ja
sbb
sbb
lret
jl
adc
xchg
add
lahf
shl
and
inc
test
pusha
ja
xor
jecxz
pop
sbb
test
lret
mov
mov
or
imulb
int
loop
cmpl
sarb
xchg
add
cmpsl
test
and
roll
push
int
mov
mov
add
xchg
lcall
mov
sbb
shr
sahf
jae
in
test
cmp
std
push
loopne
push
fwait
dec
mov
pop
mov
cmp
adc
ljmp
sub
idivl
push
fwait
shl
or
or
dec
push
pop
movsl
cmc
jg
pop
xor
pop
subb
sub
xor
std
fs
fildl
xchg
aas
lods
adc
jno
clc
jb
cli
call
addl
sti
imul
das
mov
loopne
shl
cmp
adc
sub
and
adc
cmp
pop
pshufw
adc
xlat
mov
enter
cmp
in
or
xchg
cld
xchg
inc
aad
decb
adc
call
inc
nop
dec
movsb
mov
pop
jecxz
cmp
jo
xlat
dec
xchg
and
std
pop
aaa
lods
imul
into
inc
pushf
jl
test
test
jle
inc
xchg
inc
lcall
jb
lods
dec
cli
daa
leave
je
lret
ret
rcl
testb
std
sysenter
sub
lret
mov
cmpl
pop
lret
out
xor
mov
mov
pop
das
mov
fisubl
ret
repz
and
es
dec
mov
dec
sbb
jns
push
imul
fnstenv
mov
sbb
jmp
mov
loope
jl
popf
mov
xor
scas
aam
inc
or
pop
and
clc
hlt
gs
ljmp
popa
adc
mov
add
mov
pop
xchg
adc
push
test
cmp
add
push
pusha
test
mov
dec
adc
test
incb
inc
test
xchg
xchg
fwait
push
sahf
ficompl
inc
int
add
and
xor
add
cmpsl
or
push
divb
std
ficoms
cmp
mov
fs
imul
jecxz
dec
dec
lret
imul
stos
and
jne
xor
insb
xchg
mov
bound
nop
jns
xchg
or
movsl
je
into
mov
and
cli
add
js
lea
nop
inc
mov
cwtl
xor
insb
xor
in
out
or
addr16
enter
xor
xchg
sbb
jae
into
pusha
push
jmp
lods
cmp
pop
mov
stos
outsl
sub
and
push
push
insb
ror
imul
cld
push
inc
pop
and
add
iret
or
rol
sbb
mov
outsb
addr16
filds
arpl
inc
inc
out
nop
sub
loope
jmp
ficoml
aaa
movsb
sbb
or
mov
fimuls
aad
shlb
mov
xor
inc
leave
xor
xchg
and
leave
data16
push
idivl
rcll
xor
imul
dec
sub
add
sub
mov
outsb
dec
cmpsb
push
sahf
push
bound
xor
jecxz
test
test
or
pop
popf
jb
push
push
loop
push
cs
in
pop
fldt
sbb
mov
out
fisttps
jl
nop
push
cmp
repnz
ds
mov
sbb
xor
push
pop
test
sub
xor
push
mov
ror
js
dec
dec
pop
or
push
add
sub
js
sub
sub
mov
xlat
rclb
loope
cmpb
roll
mov
mov
nop
loope
int
fsubrs
mov
rcrb
les
fcompl
sbb
cmpsb
sahf
push
cwtl
dec
test
arpl
sub
lret
mov
cltd
mov
mov
push
cmp
lahf
or
fcmovb
inc
cmp
inc
aad
idivl
ror
ret
rorl
sub
loop
addr16
cmp
jl
lcall
loop
push
cmp
sub
aam
imul
add
lcall
stc
push
imul
int3
push
sbb
pop
xor
in
lcall
push
loopne
gs
push
pop
pop
repz
adc
xor
repz
xchg
lret
sbb
inc
pop
xor
stc
pop
or
sub
int3
mov
jbe
scas
jmp
clc
cs
xor
nop
in
sarb
mov
dec
rcr
inc
arpl
in
mov
jo
jbe
or
call
jg
push
pop
ljmp
pushf
daa
ja
fcmovnu
or
pop
xchg
sti
inc
push
push
mov
and
pop
jb
xor
je
imulb
adc
xchg
testb
repnz
nop
ret
mov
in
mov
add
lods
out
lret
pop
in
pop
mov
int
sbb
scas
lock
mov
lea
jp
adc
gs
sbb
insl
adc
dec
push
push
and
mov
mov
cld
add
je
cmpsb
ret
dec
mov
xchg
mov
add
loopne
jo
subl
fsub
aam
sbb
mov
xor
push
in
das
fiaddl
ljmp
stos
lods
xor
xchg
pop
jmp
and
pcmpeqb
inc
cltd
jns
adc
dec
xor
dec
js
xchg
test
xor
xchg
push
in
out
add
pop
xor
outsb
fwait
test
xor
call
mov
out
jmp
insl
xor
lods
or
sahf
xor
xor
jnp
adc
pop
jnp
ja
push
jecxz
cmp
mov
or
lods
xor
jne
xchg
addr16
addr16
bound
dec
jns
mov
sti
sbbl
out
lock
sub
cmc
or
ja
mov
xor
pop
push
mov
jb
push
in
pusha
es
pop
adcb
add
mov
xchg
jecxz
pop
jae
inc
pop
push
lods
sub
cmp
jle
push
cltd
and
loop
hlt
and
rcrl
mov
imul
xor
adc
xchg
iret
imul
daa
dec
and
arpl
mov
fmuls
pop
mov
inc
aas
testb
and
sbb
mov
sbb
mov
faddp
push
shrl
ret
mov
xchg
imul
mov
jae
jge
cmp
sbb
mov
push
or
imul
std
mov
mov
mov
push
inc
and
xor
ds
jg
bound
pop
fcompl
movsb
repz
popa
sub
cmpsb
fimull
or
push
push
or
cmp
shlb
js
jb
lcall
ds
cmp
into
xchg
add
jno
xchg
test
mulb
xor
jl
xor
cmc
dec
js
or
push
hlt
shl
aaa
sbb
push
cwtl
sub
repnz
adc
jno
jne
mov
imul
add
sbb
and
ljmp
daa
add
sbb
pop
pop
dec
popa
lcall
jmp
pop
notb
mov
mov
mov
mov
lret
mov
mov
mov
insl
ss
test
idivl
mov
inc
shll
xor
rcrl
sbb
xchg
outsb
xor
pop
pop
outsl
xlat
dec
jle
pop
les
inc
dec
testb
add
jl
lods
loopne
xor
imulb
sbb
cmp
dec
lcall
sub
sub
cmpsb
loopne
testb
out
test
inc
mov
adc
adc
xchg
lea
shll
jne
jl
sbb
cmp
jbe
pushf
aad
mov
loope
cmp
push
jne
cs
aad
cld
sub
sbb
lods
flds
xchg
out
push
shl
fsubp
jg
jae
aad
movsl
lods
mov
sbb
notb
adc
cld
fildl
inc
bound
sahf
pop
inc
xchg
pop
lods
inc
shlb
aas
ret
dec
jb
jo
dec
call
jbe
shll
inc
test
out
pop
add
mov
test
push
in
mov
test
add
stos
lret
int3
insl
bound
fists
cmpsb
das
outsl
sub
mov
xor
jg
sub
xor
insl
cli
jecxz
dec
adc
fnstsw
arpl
push
mov
pop
push
add
sbb
pop
pop
inc
push
rolb
and
pop
pop
lods
aam
inc
push
mov
ficomps
sbb
pop
iret
clc
push
cld
xchg
push
xchg
int3
popa
inc
pop
shrl
xor
mov
pop
xchg
lock
out
fistl
scas
test
xchg
adc
xchg
or
outsl
test
mov
loop
stos
rcll
inc
mov
fisttpll
mov
negl
mov
add
mov
jne
mov
xor
fcmovnb
xor
aam
xchg
adc
test
daa
imul
xor
jno
das
pop
imul
add
dec
popa
sub
cmp
mov
pop
pop
out
inc
test
bound
adc
mov
adc
out
subl
jbe
mov
lret
mov
push
inc
jnp
je
jle
in
or
das
xor
data16
mov
inc
jmp
scas
jl
jae
daa
push
outsl
int3
sbbb
stos
rclb
dec
stos
push
jmp
js
xchg
push
lods
scas
jae
mov
adc
fstl
ret
mov
pop
lds
arpl
movsl
inc
cmc
and
or
xlat
push
aas
inc
mov
int
xchg
mov
in
cmp
cs
push
incb
xor
rcr
clc
mov
repnz
and
mov
push
or
jbe
add
jge
andl
sbb
aaa
sub
dec
add
int3
mov
inc
dec
test
imul
lret
xchg
xor
cltd
in
dec
scas
pop
test
and
fcompl
jle
xor
dec
repz
pop
pop
lock
in
fmuls
enter
daa
push
adc
jno
cld
dec
jl
or
cmp
mov
movsl
adc
jl
imul
pop
test
sarl
sbb
aas
inc
rcrb
cld
cmp
pop
mov
sub
pushf
pop
loope
movb
lcall
adc
dec
dec
popl
test
and
aad
dec
jle
add
lret
mov
push
xchg
sub
int
xor
popw
jle
lret
lcall
into
fdivl
je
sahf
pop
and
dec
addb
fisubrl
mov
jle
adc
stos
add
fdivs
and
lret
xchg
mov
loop
or
cmpsb
ror
hlt
push
cmc
aam
pop
xor
jo
mov
xchg
lcall
add
jmp
mov
out
out
or
cli
orl
mov
lock
and
js
cmp
push
xor
fstpl
pop
or
imul
cld
and
outsb
mov
xchg
push
dec
push
sbb
mov
xlat
ja
in
punpckhdq
mov
call
jmp
and
cs
xchg
xor
jp
repnz
leave
jmp
fnstcw
ds
cli
pop
pop
jecxz
sbb
jbe
mov
call
jge
push
pop
push
sub
adc
inc
pushf
jge
cli
inc
or
fwait
push
inc
sbb
fwait
inc
jmp
ret
push
and
in
dec
pop
mov
je
dec
or
mov
fcomi
adc
std
add
rcrb
sub
inc
xchg
lea
orb
mov
pushf
xchg
mov
xchg
sbb
inc
mov
das
dec
pusha
mov
jae
add
les
es
movsbl
inc
icebp
dec
or
scas
cmpsl
adc
dec
pop
icebp
cmp
pop
mov
mov
adc
sahf
mov
ds
and
push
ds
sub
xorb
ret
mov
mov
aad
clc
movsl
jle
xchg
cmpsl
fnstsw
popa
pop
jnp
lods
pop
push
insb
stos
xchg
shl
out
push
xchg
out
notl
cmp
rdmsr
das
inc
add
inc
out
cltd
out
mov
mov
xchg
es
inc
mov
test
xchg
push
sbb
pop
mov
pop
push
and
sahf
pop
xor
shlb
aaa
ljmp
mov
xor
mov
fnsave
mov
shlb
pusha
xchg
pop
xchg
test
ja
push
jle
and
inc
add
mov
mov
stc
int
jb
xor
push
sbb
and
mov
jns
in
sub
inc
ds
out
dec
sub
jmp
into
addr16
sti
jp
cmc
push
mov
pop
into
mov
rcrb
mov
outsb
xchg
pusha
cmp
scas
pop
xchg
stos
in
into
jmp
jns
pop
jae
sti
mov
xor
cmpsb
popf
mov
inc
push
pop
xchg
stos
enter
inc
jno
insb
add
lcall
dec
js
sbb
jge
sub
ret
or
inc
add
mov
inc
clc
xchg
scas
or
push
and
fisubrl
push
pop
pop
into
nop
sub
divb
lds
push
mov
sub
jbe
hlt
ficoml
jbe
or
fdivs
repnz
out
sub
aas
push
in
or
enter
pop
push
or
xor
hlt
sti
cmp
cmp
cmp
movsb
or
rolb
lods
adc
loopne
jnp
aam
enter
daa
adc
int3
addr16
adc
mov
fdivl
inc
adc
lods
and
daa
lahf
dec
sbb
push
sbb
test
mov
divl
ljmp
pop
mov
adc
inc
inc
cltd
pop
xbegin
xchg
loope
jns
sub
adcl
psubw
adc
daa
pop
insl
popa
xor
sbb
add
rcrb
push
cltd
mov
sub
add
std
je
lcall
vminps
bound
popa
xchg
lret
sbbb
jg
jnp
mov
int3
nop
mov
xchg
push
mov
xchg
jo
mov
xchg
mov
jno
fdivs
popa
divl
in
rcll
mov
mov
into
jecxz
ret
lret
stos
xor
cmpl
mov
ret
call
inc
lods
scas
mov
out
repnz
mov
cld
xor
sti
daa
cld
cmp
cmp
xchg
loopne
jl
pop
mov
dec
adc
rolb
repz
lcall
repnz
xlat
mov
dec
sub
push
repnz
mov
pop
jmp
nop
outsb
cs
ja
cmp
aaa
nop
jle
sub
inc
faddl
les
xchg
icebp
jns
pop
lea
push
call
cld
xchg
add
mov
data16
dec
pop
dec
lea
inc
mov
lods
and
jb
mov
je
jae
sar
pop
inc
notb
pusha
std
stos
pop
cmpsb
cwtl
rol
mov
dec
test
adc
sahf
pop
lret
stos
mov
inc
mov
std
in
mov
cltd
add
lahf
mov
in
ret
inc
cwtl
mov
mov
lea
pop
mov
cmpsl
adc
mov
adc
cld
test
lock
movsb
inc
jne
pushf
xorb
pop
in
shr
mov
or
xchg
popa
mov
testb
xor
clc
loopne
rclb
mov
sarb
jb
shrb
jae
xchg
cs
int
adc
mov
add
das
in
push
jmp
test
xchg
or
lcall
test
mov
cmp
loopne
adc
jae
hlt
push
mov
fwait
adc
xchg
push
ror
das
add
in
mov
insb
xor
or
hlt
push
xor
cli
cmc
xchg
mov
lds
jne
xor
addr16
ja
popf
stc
dec
adc
mov
pop
mov
insb
dec
push
cltd
or
pop
mov
addl
add
gs
lret
cmp
jns
mov
sarl
cmc
out
cmpsl
inc
sub
out
fs
sti
jp
aam
mov
or
xor
lcall
or
pusha
fmuls
filds
xchg
jle
jno
sub
fcoms
cmp
negl
cmpps
jg
stos
cmp
and
out
insl
push
into
imul
cmp
pop
adc
dec
clc
iret
mov
push
ret
xor
stos
scas
inc
or
arpl
cmp
int
cli
inc
mov
inc
scas
xchg
push
push
sbb
ret
mov
ficomps
and
adc
sub
xorb
leave
adc
aam
cmpsl
ficoml
jne
jge,pn
leave
sbb
xchg
shlb
cmpsb
sarl
add
push
fwait
dec
bound
out
out
cld
xorl
push
jns
sbb
push
and
mov
cmp
stos
iret
movsb
xchg
sub
inc
push
push
xor
mov
mov
pop
cmp
push
mov
cmp
xchg
lds
lahf
stos
sub
push
inc
test
push
push
pop
loopne
mov
and
fdivl
test
push
xchg
loop
clc
push
mov
sub
push
sub
cmpsb
outsb
jb
mov
rolb
fcoml
orb
or
add
sub
and
inc
and
loopne
sub
mov
jl
push
lcall
aas
fmull
sbb
pop
popf
sahf
mov
adc
lret
dec
or
cmc
lcall
fdivr
mov
fistpl
ss
add
sub
mov
lret
rol
out
lods
mov
cltd
mov
cmc
bound
xor
pop
pop
outsl
je
cmp
adc
stc
stc
or
add
mov
lods
xchg
rolb
aam
out
pop
or
out
sub
shll
cmp
fisubrs
sti
lret
push
faddp
mov
pop
loopne
pop
clc
pop
aam
mov
imul
lret
add
xchg
pop
lcall
sub
sub
sub
scas
fisubs
and
push
cs
call
sub
nop
pop
jo
dec
cmp
int3
inc
out
push
sub
les
data16
or
jl
fmull
mov
and
push
jl
push
jp
pushf
sarl
fistl
mov
sub
inc
and
mov
mov
data16
aas
in
lret
out
fcom
dec
imul
push
jecxz
cwtl
jl
mov
test
insb
mov
or
insl
andb
pop
sbb
sbb
addr16
stos
lock
idiv
das
or
mov
mov
ficoml
ret
aad
sub
and
mov
xlat
cmpsl
adc
push
div
call
push
adc
bound
mov
and
in
pop
add
jl
dec
sarb
int
cmp
mov
daa
loop
fucomp
jae
clc
sbb
xchg
and
xor
lods
fnsave
dec
out
mov
dec
sub
lds
lock
add
xchg
repz
repnz
popf
mov
dec
adc
cmc
test
shll
mov
mov
pop
fisubrs
push
push
je
mov
or
addr16
movsb
xor
ja
xor
mov
xchg
add
pop
mov
or
lcall
ret
xor
jmp
aad
fimull
mov
mov
xor
enter
mov
in
xchg
sbbl
test
loope
jge
jae
js
add
mov
out
mov
cs
loopne
inc
or
pusha
jae
sbb
arpl
bound
and
mov
ret
mov
popf
fldenv
add
sti
lds
outsb
mov
insb
fmuls
sub
cmpsl
cmp
adc
pushf
mov
out
jmp
pop
add
shlb
std
inc
faddp
or
dec
loop
inc
cmp
jb
jg
mov
pop
sub
imul
insl
mov
shrb
push
outsl
test
repnz
add
mov
aaa
push
testb
jbe
jo
jge
mov
xchg
shrb
cmp
cmp
dec
in
dec
rcl
decb
roll
lock
push
scas
scas
sti
xor
dec
cmp
shrb
cmp
mov
ja
daa
adc
bound
mov
jl
jge
cmp
cmp
ds
jb
movsl
es
cmp
cmp
pop
lahf
mov
cmp
loop
test
and
xor
mov
xor
int3
add
inc
scas
mov
lret
xchg
dec
xor
sub
in
aad
mov
sbb
rcr
mov
pop
xchg
sbb
icebp
enter
fcomps
push
lahf
add
sub
mov
sti
sub
pushf
sbb
scas
fdivl
cli
nop
sahf
inc
lahf
jne
outsl
cld
pop
adcb
repnz
popf
cwtl
mov
xchg
mov
adc
pop
xlat
sub
cmp
call
rcr
and
inc
mov
xor
into
test
nop
mov
popa
xchg
xchg
outsl
push
ss
loop
xorb
and
xor
data16
ljmp
pop
testb
dec
sar
mov
xor
mov
sti
test
incb
loopne
gs
adc
pop
repz
dec
adc
icebp
in
sbb
mov
repz
dec
xchg
cltd
xchg
in
sbb
push
jmp
sub
sub
in
rol
jmp
mov
fs
test
pop
dec
xchg
push
stos
inc
add
push
xchg
jecxz
pop
mov
lea
call
cli
lcall
imul
xor
jle
inc
fcmovnb
filds
mov
mov
cld
inc
cmp
adc
aas
xchg
mov
dec
cld
mov
push
rcrl
push
add
stc
dec
sahf
cwtl
aaa
clc
cmp
push
rol
addl
scas
lret
mov
ljmp
hlt
fdiv
push
aaa
iret
das
jmp
aam
sub
dec
mov
mov
add
test
test
in
std
sub
mov
xchg
mov
pop
pop
mov
ljmp
mov
fwait
xchg
dec
rorb
leave
cmp
pop
cmp
push
ljmp
clc
push
lret
jb
outsl
insb
ljmp
shrb
out
push
mov
push
lret
test
cmovg
add
popf
add
out
test
mov
pop
aas
test
stos
mov
cmp
shll
ja
fwait
outsl
adc
push
pop
or
add
and
xor
jno
or
popf
and
jno
xchg
push
cwtl
mov
mov
call
sti
dec
sti
cmc
arpl
mov
orl
or
cli
fucomip
ret
vcvtps2udq
test
inc
out
mov
or
lret
push
arpl
scas
jmp
mov
fnsave
int
dec
jno
pusha
push
xor
xchg
and
mov
sbb
ret
xchg
fcmovb
push
jae
lea
push
jnp
fstpl
test
lahf
push
aam
inc
stos
and
pusha
and
xchg
bound
loop
scas
incl
adc
mov
add
mov
push
inc
and
cmp
push
add
mov
or
ret
mov
fcmovb
mov
sbb
negl
ljmp
fists
rorb
mov
es
push
leave
cmp
mov
jnp
jbe
rcr
jge
xchg
or
xchg
call
add
pop
push
int3
cmp
xchg
push
mov
mov
jo
lahf
scas
fidivrl
and
dec
cmpb
or
stos
mov
cmpsb
imul
adc
adc
jno
aaa
adc
add
jmp
inc
or
aad
jp
stos
mov
cmp
in
adc
xor
inc
dec
into
pop
sub
push
js
outsb
push
pop
test
push
inc
repnz
push
sub
std
mov
outsb
cmp
xor
mov
stc
mov
xor
push
sbb
jg
add
fiaddl
mov
push
mov
push
pop
sub
int
lcall
sbb
stos
cmpsl
sbb
scas
movsl
test
inc
aad
mov
sub
add
mov
cs
ret
test
jns
sahf
ss
in
mov
fsubs
push
sub
je
mov
mov
dec
and
into
mov
repz
lock
xor
sub
cmp
stc
jbe
xor
inc
add
jecxz
stos
out
lods
arpl
lods
mov
mov
icebp
mov
aaa
xor
fs
and
in
gs
sub
loopne
pop
xchg
pop
adc
adc
dec
in
imul
aaa
rep
lret
push
xchg
pop
inc
jle
xchg
lret
mov
sub
jns
adc
data16
js
cs
xlat
aad
iret
nop
nop
cmovo
dec
div
adc
fsts
mov
rcrb
andb
test
int3
call
jns
std
pop
sbb
jle
les
adc
pop
xor
xchg
inc
cmp
inc
push
adc
aas
fidivs
ret
pop
add
dec
shr
dec
fdiv
sbb
jge
mov
icebp
push
mov
fcmovnu
mov
dec
or
dec
cs
mov
imull
mov
xchg
lock
es
lret
mov
les
and
inc
add
cmp
int3
insl
jge
inc
dec
clc
dec
push
cmpsl
adc
ljmp
inc
jne
sarb
or
andb
out
xlat
shlb
repz
jg
aam
push
mov
lods
add
fnstsw
mov
xchg
mov
and
mov
shrl
xor
imul
cmp
add
and
test
fwait
je
int
cmpsb
xchg
xchg
jl
mov
outsl
jb
sub
movsb
sar
dec
test
mov
sahf
rolb
mov
mov
add
lock
jmp
ret
cmp
xor
stos
rcll
or
pop
jecxz
addl
mov
or
mov
out
xchg
push
jne
stos
bound
mov
xorb
jb
dec
xorl
mov
xlat
add
or
pop
sti
addr16
stos
jp
stos
mov
mov
xor
jle
adc
in
cmp
fbld
mov
bswap
insb
xchg
movsl
daa
outsb
jae
fwait
add
ds
rcrl
sarb
push
adc
fisubs
pushf
sbbl
scas
aam
push
xor
add
movsl
out
ret
sub
shl
inc
sub
cmp
aas
mov
add
xchg
or
ds
inc
cmp
lods
fidivl
xor
jg
and
mov
pop
fiadds
clc
and
mov
jns
jmp
jbe
hlt
push
repz
xchg
xor
jbe
cmpsl
stc
jge
push
clc
sbb
das
aaa
jecxz
pop
or
insb
add
xor
and
rorb
jg
push
xchg
insl
stc
xor
pusha
std
leave
scas
mov
arpl
and
imul
mov
or
adc
cmp
jno
loopne
jl
inc
mov
cwtl
dec
in
lahf
or
movsl
xor
jmp
jo
sub
int3
mov
test
mov
stc
stos
push
push
cmp
push
jl
js
movsl
push
pop
ret
jne
push
insl
xchg
loope
lods
xchg
sub
into
or
inc
out
pop
outsb
fwait
jbe
adc
xchg
mov
dec
addb
sbb
jecxz
xor
push
movsl
rcrb
adc
mov
bnd
add
jge
and
mov
sbb
mov
test
roll
cmc
loope
mov
cmp
push
mov
es
ss
fdivp
cmp
pop
push
sbb
mov
test
addr16
shrl
or
inc
mov
cmc
mov
dec
xor
dec
stc
outsl
adc
sbb
stc
sub
fistpl
add
pop
mov
pop
bound
push
testb
subb
cmp
in
sti
jecxz
or
inc
repnz
gs
movsb
es
jbe
pop
xor
jl
loope
das
imul
jns
repz
dec
xchg
pop
gs
mov
mov
and
dec
fdiv
mov
arpl
cs
mov
pop
pop
out
ljmp
inc
sub
mov
mov
les
imul
test
lea
xor
xbegin
pop
sub
sbb
adc
and
iret
pop
aam
sub
push
sbb
jge
xchg
xor
dec
mov
mov
sarl
es
pop
std
push
std
inc
leave
adc
ret
mov
xorw
dec
sbb
pop
lret
data16
mov
or
movsb
int3
mov
jnp
dec
and
cmp
ret
adcb
scas
setb
xchg
xor
repz
cmpsl
adc
mov
insl
addb
notl
mov
xor
mov
fsts
shlb
fxch
aam
sub
mov
bound
frstor
clc
int3
aaa
pop
xchg
loop
mov
popa
int
xlat
lods
push
fsubrl
push
out
int3
fmuls
push
subl
dec
cltd
cli
ret
jmp
adc
outsb
mov
cmpsb
outsl
sahf
dec
dec
or
test
sbb
sbb
cltd
push
rcll
lahf
pop
filds
push
pop
adc
inc
adc
incl
xor
stos
xor
aaa
jb
out
cmp
adc
les
in
dec
loope
mov
or
fwait
jns
and
fs
loope
dec
jne
mov
je
andb
bound
add
jns
test
dec
addl
out
popf
cld
sub
shlb
addr16
inc
jp
pop
loopne
ret
mov
ljmp
pop
addr16
inc
insb
adc
shlb
xchg
lret
jmp
jo
pop
jae
in
push
push
add
mov
dec
out
jl
sti
faddp
push
push
mov
pop
or
and
pop
push
imul
xor
jl
fcoml
pop
adc
add
cltd
ret
dec
pop
test
inc
inc
aaa
xorb
insl
std
inc
pop
mov
or
mov
sbb
dec
xchg
mov
sub
pop
mov
sbb
lds
mov
sarb
mov
int3
aas
dec
in
inc
movsl
hlt
push
js
push
jecxz
xchg
lock
imull
aaa
mov
je
add
jnp
int3
push
dec
lds
jp
push
jp
insl
xor
mov
or
cmp
cli
push
movsb
shlb
cmpsb
outsl
ret
push
xor
daa
adc
cmp
xchg
cmp
lods
sbb
call
ds
movsl
cmp
or
or
pop
lahf
call
in
mov
sbbl
cmc
pop
mov
pop
js
add
outsl
mov
add
cli
push
dec
enter
cmp
sub
jns
mov
adc
outsb
mov
cmp
aad
push
imul
xchg
xlat
mov
lcall
push
test
push
int
cmp
sub
cmp
js
sbbb
jmp
sbb
arpl
sahf
lods
adc
add
xchg
xchg
lds
mov
mov
add
adc
ss
test
fcomps
mov
lret
rol
mov
sub
pop
scas
mov
push
out
cmc
jle
arpl
jb
subl
adc
pusha
xor
in
lcall
data16
ds
mov
jmp
out
sub
cli
mov
lods
xor
notb
repnz
xchg
mov
push
ds
and
adc
call
mov
fildll
rcll
pop
cmp
dec
outsl
xor
loop
dec
cmp
test
pop
sub
test
mov
into
es
cmp
ja,pn
test
lahf
inc
push
lds
dec
mov
dec
inc
cmp
inc
cmp
cmp
inc
decb
mov
mov
call
ja
and
adc
in
jg
out
fistl
add
inc
inc
aam
inc
lea
sbb
ret
jb
je
sub
rorl
xorb
push
int3
adc
negl
leave
jp
dec
add
sbb
aad
mov
inc
mov
dec
lock
icebp
mov
xor
outsl
and
xorb
xor
add
dec
dec
sub
cmpsl
bswap
sarb
inc
popa
jmp
pop
and
mov
mov
jle
pop
clc
mov
rorb
sbb
iret
aam
mov
push
push
xor
pop
fisttpll
dec
inc
xchg
and
aaa
popa
in
jb
mov
test
das
adc
xchg
xchg
adc
or
pusha
enter
adc
test
out
and
test
popa
xchg
test
scas
int
mov
jnp
popl
cmc
shll
leave
jmp
push
add
inc
add
jmp
fmuls
jmp
xchg
or
jmp
mov
mov
arpl
mov
orb
aam
in
inc
pop
dec
or
inc
cmp
les
jne
sub
mov
inc
pop
out
pop
jne
bound
in
hlt
in
or
adc
aas
out
cmp
sub
int
outsl
jnp
jp
mov
mov
jnp
sub
jle
add
pusha
fbld
cmp
fists
xchg
popf
sbb
std
clc
pop
xchg
cmp
xorl
out
mov
jne
gs
xchg
adc
stos
jp
pop
and
loope
insb
test
sub
ret
popa
lahf
adc
mov
iret
arpl
and
and
inc
sub
inc
or
test
sub
sbb
push
daa
inc
aaa
ljmp
sbb
pop
xchg
icebp
test
enter
mov
call
mov
pop
add
mov
pushf
outsb
cmp
push
jbe
lods
ret
jge
sbb
jmp
mov
icebp
xor
xchg
inc
lods
int3
stc
push
xchg
push
pop
daa
cs
push
testb
pop
mov
cmp
cmpsb
inc
inc
fsts
into
in
fisttps
enter
daa
sysret
jns
mov
sahf
in
jl
push
sarl
imulb
ds
add
inc
xchg
inc
and
dec
and
pop
xchg
test
dec
sti
or
les
imul
lahf
push
gs
int
pop
inc
dec
gs
loopne
loope
lahf
and
mov
pop
mov
adc
dec
loopne
fwait
cmp
subb
sbb
jns
add
fdivrs
and
scas
addb
je
int
addb
test
push
push
sarl
fcompl
mov
sahf
rcrl
popa
addb
call
mov
scas
repnz
dec
lods
mov
jmp
les
xor
xchg
enter
cltd
divl
pop
or
dec
push
test
fidivl
cli
or
fidivrs
xor
lret
mov
int
xor
iret
pop
clc
loop
orb
dec
sbb
add
cwtl
jns
sbb
xchg
mov
mov
out
sub
cli
out
pop
xor
lock
sbb
push
cwtl
decb
shl
lods
jmp
pop
outsl
dec
pusha
adc
mov
repz
daa
call
sbb
push
sub
xlat
xor
sub
xor
cmp
push
fisubrl
mov
adc
mov
cli
fistl
inc
mov
inc
mov
xchg
fst
dec
call
mulb
pop
xor
test
pop
fstpt
outsl
pop
sbb
mov
inc
test
mov
jb
mov
mov
rcr
mov
leave
std
xchg
sbbb
or
mov
repz
out
addr16
lret
inc
add
mov
xchg
mov
ret
add
das
addr16
insl
mov
jmp
pop
mov
mov
or
xor
fwait
dec
jmp
cmpsl
test
icebp
sbb
xchg
xchg
mov
jbe
mull
xrelease
pop
pop
pop
or
sub
jns
aam
imul
stos
scas
and
xchg
xchg
fnsave
hlt
adc
jo
shlb
add
lea
xchg
fdivr
dec
push
aaa
cld
decl
lret
hlt
bound
jae
inc
cltd
push
xchg
inc
mov
lods
test
test
xchg
mov
sbb
mov
cmp
add
mov
jmp
fcom
incl
jmp
or
dec
push
xchg
lds
pop
or
pop
mov
mov
nop
pop
outsb
dec
int
inc
es
ret
rorb
and
mov
xlat
inc
out
movl
jns
clc
in
jl
andl
je
icebp
sub
enter
outsb
cmp
mov
mov
fdivrl
xor
in
in
pusha
pusha
jp
xchg
sbbl
jmp
push
dec
xchg
jae
pop
call
xchg
add
jno
push
shlb
stos
in
or
and
dec
insb
out
sti
subb
jns
mov
push
or
adc
insb
or
xlat
adc
pop
push
mov
dec
arpl
xchg
das
inc
or
cmpsl
xchg
bound
fimull
addr16
sub
pop
pop
mov
fisubrs
sti
lds
push
dec
shlb
or
jb
push
leave
fcmovnu
movsl
hlt
out
inc
push
sub
lret
call
xchg
aaa
and
or
mov
out
int3
in
cltd
dec
cld
mov
push
jnp
fnstenv
nop
jne
push
lods
loopne
inc
in
cmp
push
in
cs
push
das
pop
in
and
aam
daa
push
test
cmp
in
jno
mov
jl
push
stc
cmp
adc
add
inc
hlt
cltd
lahf
es
sbb
sbb
xor
xchg
in
sahf
push
xchg
aam
movb
loopne
xor
cmp
push
daa
movsl
loope
dec
mov
sub
xor
adc
and
jmp
cmpb
add
iret
add
sub
and
ss
scas
jae
int
mov
sub
pop
pop
jbe
es
js
or
negb
adc
sbbb
jg
cwtl
push
mov
mov
mov
pop
mov
dec
jl
mov
mov
js
push
cmp
popl
imul
ror
inc
xor
jno
jle
mov
rcrb
sbb
sub
sub
mov
loop
add
stc
push
dec
jle
fnstenv
add
out
lods
lcall
loop
in
lods
add
sbb
or
fisttpll
fs
lock
sti
imul
inc
inc
bound
clc
lea
pop
leave
inc
imul
sbb
xchg
push
repz
inc
ja
outsl
pop
subl
insb
test
in
movsb
xlat
mov
insl
adc
cs
dec
mov
jnp
fisttpll
lods
stc
inc
popa
jl
fnstenv
lret
mov
jecxz
push
mov
adc
insb
add
pop
call
in
icebp
pushf
aad
std
fldt
fcomp
inc
push
xlat
int
ret
push
mov
jb
into
mov
pop
dec
loop
lea
and
sub
int3
std
cmp
dec
cwtl
fisubs
xchg
mov
ds
repz
fiaddl
mov
dec
mov
adc
fidivs
pop
das
inc
xchg
push
mov
mov
adc
ret
das
sub
es
mov
insl
sbb
dec
in
push
cmpsl
or
mov
icebp
repnz
cld
mov
fnstcw
cltd
add
mov
mov
shrb
mov
mov
mov
scas
jmp
xchg
lahf
pop
shr
outsb
shlb
xchg
imull
dec
mov
xchg
pop
dec
adc
cvtpi2ps
add
mov
andb
ds
jle
mov
xchg
sti
not
push
mov
add
inc
inc
push
mov
stos
clc
icebp
jmp
mov
xor
cli
leave
xor
xlat
stc
xchg
fdivr
push
sbb
clc
mov
insl
lret
dec
add
dec
mov
sub
or
adc
sti
dec
mov
jns
lock
aad
sbb
mov
jns
arpl
sahf
inc
cmc
xor
xor
not
stc
sub
ret
es
insl
jg
jp
lahf
out
mov
ljmp
dec
sti
cmpl
cmp
outsb
inc
jae
adc
mov
xchg
inc
jae
jmp
sar
inc
jae
jp
push
dec
jmp
mov
lods
inc
popf
push
ud1
and
shll
pop
sub
in
sbb
push
int3
adc
jmp
test
ret
mov
inc
pop
ja
arpl
hlt
inc
adc
inc
push
xor
or
js
sub
jge
inc
xor
push
adcl
xchg
ss
rcl
push
mov
lds
test
xor
push
shlb
aad
adc
int3
sbb
xor
add
cmp
int3
iret
and
dec
imul
push
and
es
ds
scas
xor
int
cmp
das
jo
popa
mov
notl
cmpsb
clc
xchg
xchg
in
or
push
enter
daa
or
fidivs
jno
jmp
jl
mov
xor
sub
mov
lahf
inc
and
push
sbb
push
test
in
sub
bound
sbb
sbbb
jl
sbb
pop
mov
and
sub
pop
pop
sub
rolb
adc
ljmp
pop
es
pushf
insl
sbb
stos
incl
rcr
and
add
push
mov
scas
int
shl
jmp
mov
lcall
rcr
mov
dec
sbb
out
sahf
pop
dec
mov
cltd
xchg
dec
xorb
mov
mov
mov
out
inc
mov
add
mov
sti
in
add
insl
ss
mov
fcomi
scas
out
lret
sub
mov
mov
into
sti
jns,pt
roll
xor
or
sbb
ss
and
cmp
xchg
lods
out
mov
in
mov
cli
dec
or
xor
jnp
lahf
jmp
cmp
js
loopne
mov
pop
lods
test
adc
out
adc
clc
shl
mov
lcall
mov
cmp
out
into
xlat
scas
xor
sub
inc
mov
pmaxsw
mov
gs
nop
push
movsl
stc
dec
shll
fldcw
popa
les
cmp
je
or
xchg
in
lea
out
cmp
hlt
lret
fwait
xchg
xchg
adc
sub
mov
pop
inc
fldt
inc
fdivp
jle
stc
jl
jb
adc
or
push
shll
in
imulb
ljmp
jle
mov
adc
mov
cmp
es
vdivpd
and
mov
cmp
lock
mov
and
xor
jae
cmpsl
push
jp
mov
rorl
add
lcall
icebp
stos
mov
leave
aad
cld
fstl
popa
mov
mov
mov
mov
push
std
orl
aam
cld
and
jl
cld
fldl
sub
clc
mov
jle
ljmp
shrl
sub
pop
jle
xchg
data16
addr16
in
popf
xor
mov
roll
cltd
addr16
faddl
test
xchg
mov
add
mov
roll
test
je
lods
xchg
inc
pop
mov
aaa
push
jmp
jl
add
sub
inc
and
xor
pop
into
or
push
xchg
sub
pop
cld
arpl
sub
ja
imul
lods
icebp
mov
push
push
sbb
cmp
mov
into
push
dec
insl
cwtl
xchg
jne
faddl
ds
out
cld
jbe
bound
xchg
jns
xchg
inc
in
pop
pop
addl
dec
sub
mov
inc
pop
jp
push
out
mov
ds
mov
testl
shll
into
mov
xchg
push
out
fucomip
loop
dec
xchg
pushf
push
inc
jae
fsubl
popf
ljmp
push
dec
rcll
and
add
insb
lds
or
adc
scas
push
mov
push
cwtl
pop
mov
iret
andb
pop
test
sbb
ds
int
inc
adc
ds
movsl
cmp
inc
mov
dec
inc
jne
and
or
js
fidivs
addb
xchg
sarb
sbb
aad
jge
stos
push
pop
mov
adc
imul
aaa
sahf
test
inc
add
mov
mov
or
xor
daa
add
adc
pop
and
xchg
cmp
js
inc
xchg
in
cmpsb
jnp
popa
in
repz
cmp
or
repnz
outsl
jno
dec
icebp
jl
sub
ds
xor
in
ja
push
push
jmp
imul
aad
xor
mov
pop
adc
vmread
popa
pop
jmp
push
rorb
loope
sbb
sub
xor
outsb
mov
adc
fcmovbe
xor
mov
cmp
add
lret
and
bound
mov
mov
sbb
mov
je
sub
fcoms
sub
pusha
aas
mov
mov
pop
outsb
test
cmp
push
out
pop
jg
jl
mov
pop
lahf
mov
sahf
mov
add
lret
gs
cmp
add
nop
sub
or
lahf
mov
lret
add
or
lcall
outsl
insb
gs
mov
pop
fs
imul
mov
lods
int
adc
jmp
push
cli
jg
xlat
xor
xlat
fdivr
dec
fstps
testb
jns
inc
loopne
xor
adc
mov
lock
sub
xchg
out
aam
sbb
add
mov
loop
mov
jp
loopne
dec
hlt
addr16
xor
mov
popl
dec
xor
lahf
xchg
sti
les
in
jecxz
out
xchg
xor
lea
jo
call
jae
pusha
pop
dec
and
pushf
sub
fisttpl
dec
inc
bound
inc
stc
clc
add
cwtl
mov
jb
xchg
mov
add
mov
std
imulb
sbb
push
lock
ret
lock
mov
fcmove
xchg
jp
mov
js
mov
and
pop
das
add
add
push
mov
and
lock
dec
mov
es
pop
or
push
test
or
in
jecxz
icebp
mov
repnz
fists
loopne
les
pop
je
rcl
push
insb
mov
mov
ret
lea
aas
inc
push
frstor
lea
xchg
sbb
int
popa
inc
adc
xor
mov
mov
adc
push
enter
call
test
cltd
or
xchg
mov
mov
inc
dec
dec
cmpsl
outsl
test
int
xchg
shrl
ss
fwait
mov
xlat
jno
in
dec
add
je
lcall
arpl
aaa
call
xorl
xor
lahf
insb
es
jecxz
or
push
insb
dec
mov
and
or
xor
add
push
inc
sub
fisttps
mov
adc
out
fcmovnbe
mov
jns
push
push
adcl
es
inc
pop
sub
mov
xchg
mov
push
nop
mov
mov
mov
cmpsb
jle
dec
cwtl
in
and
pusha
dec
fistps
sbb
frndint
aam
bound
jae
subl
popf
adc
inc
push
lea
stos
inc
push
xchg
and
push
lret
insb
xor
jbe
ret
inc
add
ffreep
push
adc
mov
imul
out
inc
outsb
adc
xchg
pop
test
and
xor
inc
outsl
fisubl
das
add
mov
ficoms
lds
and
mov
imul
leave
inc
adc
pusha
push
outsb
or
jbe
sub
sbb
mov
or
les
int3
movsl
sub
dec
dec
push
jmp
push
jo
xlat
or
sti
cmp
cmp
mov
inc
adc
mov
ror
xlat
das
push
daa
or
sbb
leave
jl,pt
outsb
stos
cmp
mov
movsl
pop
and
and
daa
pop
lahf
orl
push
mov
pushf
cwtl
push
jp
daa
xor
inc
mov
adc
js
push
rclb
cmp
ss
dec
xor
sub
sbb
sub
pop
xor
in
dec
mov
mov
inc
pop
and
mov
das
sbb
sbb
and
arpl
push
mov
aas
int
nop
fsubrl
test
repz
movsb
lcall
cld
fmull
ds
sahf
pop
aam
test
rclb
loopne
scas
mov
pop
xchg
adc
adc
cmp
shlb
lret
xchg
shll
jbe
andb
or
xchg
ss
popa
inc
outsl
xor
inc
xor
lds
stc
ja
popa
fs
cmp
pop
mov
lods
mov
xor
ljmp
xor
mov
sti
std
mov
cmpb
pop
jmp
inc
adc
xchg
adc
scas
out
repz
scas
in
mov
ss
inc
add
sub
imulb
add
adc
in
and
cmp
cs
inc
aad
lea
inc
lcall
les
lahf
jecxz
or
xchg
jmp
push
call
repnz
add
adc
cmp
cmp
call
inc
jmp
adc
aas
aaa
ljmp
jl
sub
jmp
div
fdivl
cwtl
psadbw
mov
cs
mov
popf
inc
dec
fwait
shrl
mov
cltd
add
das
or
mov
mov
popa
xor
shrb
into
dec
mov
aad
int3
cmpsl
or
mov
ja
add
xor
dec
mov
loop
jne
pop
jbe
pop
xchg
jmp
shlb
ret
mov
cmpsl
aam
fidivs
out
in
add
clc
cs
ficoml
cmp
and
das
xchg
lods
mov
sbb
push
mov
push
mov
loop
add
inc
pop
test
mov
xchg
jb
test
inc
xrelease
cwtl
mov
rcrl
inc
pop
loope
push
fwait
out
out
das
push
mov
add
rclb
adc
xor
loope
xor
imul
leave
xor
mov
sahf
push
jo
mov
enter
dec
inc
adcb
testb
mov
jae
inc
inc
fbstp
mov
inc
jno
push
loope
in
mov
out
mov
mov
repz
lahf
jp
cmp
mov
push
lock
fsub
subl
fistpll
push
xchg
mov
pop
push
xchg
xor
jecxz
mov
cmp
pop
push
int3
lea
and
movsl
cmp
mov
sub
fisubl
iret
mov
cmpsl
pop
repnz
lds
iret
arpl
push
xor
xchg
jns
sub
and
movsb
jp
pop
lret
shr
pop
sbb
test
pop
rcll
fdivp
subl
mov
mov
les
push
mov
sub
jge
jnp
sbb
mov
sbb
scas
or
aas
mov
nop
outsl
aas
dec
mov
and
pop
jo
sar
rcrb
out
mov
mov
add
movsb
jno
cmpsb
cmpl
enter
daa
or
mov
outsb
ret
xchg
xchg
and
sub
lods
or
lahf
mov
cmp
mov
xchg
xor
inc
popf
arpl
js
push
mov
push
dec
jae
bound
sub
mov
pop
outsb
push
inc
aam
cwtl
outsb
nop
fdivrs
jbe
ds
in
loopne
push
add
mov
imul
testl
pop
jb
or
xchg
pop
sbb
loop
sahf
add
dec
orb
ljmp
bound
mov
or
pushl
test
aad
dec
lods
iret
fdivrs
xor
jmp
or
pop
int
mov
or
inc
imul
sub
insb
xor
xchg
loop
adc
stc
cs
mov
add
daa
movsl
retw
lods
fwait
scas
pop
mov
sub
out
fdivrl
in
lea
cmp
cmp
popf
sub
lods
add
cmp
mov
loopne
outsb
ds
or
push
adc
ret
cwtl
mov
xchg
je
stos
sbb
jnp
mov
sub
or
push
sub
jmp
call
call
nop
out
xchg
dec
out
movsl
popf
inc
lods
movsb
mov
les
add
mov
adc
fsubr
pop
sub
jno
jae
mov
mov
pushf
addl
cmp
lea
aas
es
call
jns
je
ret
shll
divb
ret
std
fmuls
mov
test
stos
or
xchg
or
outsl
lahf
ja
mov
and
lock
stos
das
ret
mov
jl
adc
ret
imul
inc
in
insl
mov
std
dec
shl
cmpsl
or
ret
mov
mov
and
mov
mov
mov
out
sar
dec
stos
sub
dec
xchg
mov
xchg
and
lahf
sub
jne
pusha
clc
imul
dec
ljmp
subb
sub
cmpl
jle
rorb
cmpsb
addr16
cltd
jnp
pop
test
inc
mov
mov
and
xchg
push
push
shll
leave
fcomps
sarb
sub
add
inc
sbb
popf
mov
or
lret
aaa
xor
inc
xchg
and
pop
xchg
dec
popf
ja
mov
movb
lock
movsb
in
sub
or
push
jb
jne
adc
mov
out
mov
cltd
pushf
push
bound
out
in
movsb
mov
das
mov
out
jle
sub
scas
add
mov
jp
sarl
adc
or
pop
jnp
lret
dec
stos
ret
in
xchg
and
sub
fistps
xchg
inc
jmp
std
adc
push
push
push
dec
sbbl
xchg
sub
xor
sub
push
and
insb
push
and
mov
cmpsl
mov
adc
adc
popf
test
mov
inc
test
lret
arpl
and
or
push
push
outsl
inc
xor
xchg
xlat
cltd
and
add
sub
lcall
sarb
mov
adc
movsl
leave
sbb
pop
sbb
or
xlat
jbe
mov
push
sbb
xchg
xchg
fistpl
or
fiadds
int3
jnp
loopne
daa
ret
xor
scas
xor
xor
cmp
scas
mov
je
and
cmp
outsb
mov
inc
xor
cmpsb
add
movsl
in
test
add
int
sub
or
jp
cmp
in
jl
jb
cmp
das
das
ds
mov
insb
inc
sub
dec
add
rorl
push
fs
test
adc
rclb
gs
pop
mov
sbb
loope
adc
sub
xor
fistpll
shrb
mov
sbb
mov
add
mov
and
push
push
mov
out
mov
aad
dec
pop
icebp
scas
inc
lcall
mov
sbb
es
sahf
mov
jns
andb
push
mov
loopne
mov
notl
inc
xor
ss
imul
stos
movsl
ror
call
mov
and
arpl
aaa
into
xchg
sbb
out
xor
outsl
or
add
in
enter
mov
ja
inc
inc
xor
cli
mov
xchg
out
repnz
cli
sbb
sarl
mov
out
pop
pop
ret
mov
pop
sub
inc
imul
mov
repz
or
aaa
mov
jo
mov
dec
xlat
stos
mov
sub
out
mov
fistps
jmp
mov
sub
dec
aad
mov
nop
ret
dec
dec
scas
and
shlb
les
push
push
popf
mov
lea
cmpsb
call
lock
ret
or
adc
push
and
cmc
rcrl
pushf
inc
divl
aas
jne
fnsave
cmp
dec
push
xchg
je
out
call
divb
sub
jg
mov
test
pop
mov
cmp
jno
sbb
movsb
mov
cmp
lock
xchg
mov
inc
mov
shll
es
shl
insl
pushf
pop
pop
dec
lret
aas
sub
test
jae
and
js
mov
dec
fidivl
xchg
gs
shr
jp
int
scas
sub
jge
push
mov
adc
pushf
or
xchg
fiaddl
into
popa
test
lods
jbe
lods
stos
mov
sbb
in
xor
pop
sarl
syscall
icebp
lar
repz
test
mov
mov
mov
test
test
xor
sub
rorl
mov
pop
aaa
fidivl
jne
inc
add
xor
add
cmp
mov
or
dec
xor
jb
xchg
add
jne
mov
adc
inc
ja
xor
inc
mov
aam
int3
sbb
lcall
jne
aas
push
mov
cld
cli
out
js
jns
scas
dec
adc
mov
jl
mov
dec
xor
stos
loop
addr16
and
mov
cmc
insl
mov
mov
push
jle
enter
fists
pusha
sbb
clc
fistpll
loope
jmp
enter
pop
or
push
sbb
popf
xchg
cli
mov
dec
pop
subl
jno
xchg
imul
rclb
sub
adc
pop
sbb
ret
aad
pusha
loop
inc
clc
jge
cmp
inc
pop
shll
or
xchg
ffree
inc
mov
adc
shlb
xchg
jle
arpl
pop
mov
fidivrs
mov
rclb
mov
sbb
movsl
movswl
test
mov
jge
sbb
sbb
or
or
mov
adc
push
xchg
aaa
jg
and
rcrb
nop
icebp
mov
mov
imul
sbb
inc
ret
cmpsb
xchg
in
enter
or
cmp
inc
xchg
jno
and
jl
xor
cmp
in
movsl
jae
push
and
or
stc
push
aaa
cld
push
test
fistl
mov
pop
mov
imul
mov
push
cwtl
fs
pop
jmp
sub
xor
inc
test
out
push
jmp
add
cli
jmp
pop
hlt
sbb
shl
int
je
sub
cmp
jo
inc
lcall
test
or
jnp
pop
sub
push
test
jo
mov
jb
mov
push
pop
mov
jg
mov
push
or
or
lods
cmp
icebp
inc
push
imul
sar
loop
inc
lds
rcrb
es
mov
jecxz
dec
dec
repnz
call
dec
cmpsb
stc
pushf
sbb
fs
xchg
add
xor
enter
imul
cli
dec
dec
scas
xor
mov
cmp
mov
sti
or
incb
mov
loopne
sti
repnz
dec
push
icebp
adc
imul
popf
sbb
sbb
icebp
repnz
xlat
jmp
pop
aaa
mov
es
pop
in
lcall
mov
sbb
mov
and
jnp
ret
xor
mov
adc
call
outsl
ja
pop
sbb
adc
outsb
lcall
lods
fstpl
mov
inc
jle
ret
int
aas
adc
xor
xchg
loope
bound
or
add
pushf
std
es
ljmp
xor
mov
das
inc
dec
pop
push
lret
dec
aam
mov
mov
lock
and
das
sub
mov
ljmp
ret
mov
cli
es
ss
xorl
dec
and
cmpsl
pop
xor
cld
addr16
mov
add
imul
mov
lock
out
shlb
xlat
and
shlb
mov
popf
cmpsb
push
dec
iret
mov
ret
stc
mov
fistpll
imul
xchg
sti
or
push
subl
cmp
inc
aas
xchg
xchg
leave
push
popa
push
xor
lds
fs
add
cmpb
movsl
pop
test
cmpsb
mov
rcrl
dec
call
sub
xchg
mov
push
fwait
je
sti
push
sbb
add
dec
pop
mov
xor
mov
repz
stos
mov
mov
iret
xchg
ja
sub
or
inc
ret
mov
xchg
mov
dec
xchg
dec
fdivl
jne
rcl
mov
sbb
les
mov
dec
in
int
orl
out
mov
sub
movsl
sub
jp
es
push
std
scas
mov
leave
bnd
fnstcw
in
nop
mov
lret
and
xchg
xor
inc
sub
sarl
fdivl
jmp
push
mov
lods
stos
adc
sub
addb
insb
fcoml
mov
push
sti
imul
mov
add
pop
les
pop
xchg
sti
movb
arpl
or
lahf
push
or
or
roll
fiadds
xchg
aad
cmc
sbb
stc
aam
pusha
push
and
loopne
jns
ror
shlb
mov
mov
sbb
sbb
out
hlt
hlt
lock
push
stos
in
adc
jge
ret
sahf
pop
or
pop
adc
add
imul
xor
push
jne
pop
xor
out
clc
stos
scas
outsl
pusha
xchg
and
dec
cmp
jmp
inc
push
cmc
xchg
jbe
jo
ret
imul
jg
cmp
jno
xor
jl
xor
outsb
nop
insl
ds
xor
jle
push
lahf
call
sbb
or
pushf
test
cmpsb
ror
xor
not
lods
arpl
xlat
inc
mov
jge
xor
cmp
push
lret
daa
loope
or
pop
mov
sub
call
and
and
cmp
add
sbb
cwtl
sbb
imul
ret
sbb
int
fdivp
sub
pop
lret
pop
out
lds
lcall
xchg
mov
out
mov
xchg
ret
inc
inc
sbb
repz
jp
mov
xchg
rorb
cmpsl
adc
ss
inc
inc
cmp
lods
icebp
imull
popf
lahf
lret
test
ds
mov
adc
inc
ljmp
jge
cmp
movsl
jne
outsl
insb
repz
cmp
call
add
mov
lods
push
push
insb
mov
cmpsb
inc
out
stos
push
cli
jle
sahf
xor
jge
sti
mov
jge
gs
out
push
loopne
loopne
pop
addr16
add
popa
mov
push
loope
jne
xchg
mov
add
cmp
ja
sub
pop
sub
jl
mov
xchg
fadds
jmp
adc
repnz
nop
js
push
dec
or
out
out
test
mov
cmp
lahf
and
pop
mov
hlt
xlat
call
out
and
mov
subl
pop
xor
and
xor
xorb
mov
and
add
shll
rcl
push
xor
dec
std
int
adc
cmp
pop
sbbl
jg
lret
mov
movsl
lret
xchg
aad
fwait
push
adc
pop
pop
andb
stos
sub
fildl
sbb
insl
push
and
rcrl
mov
rorl
mov
mov
and
lret
movsb
xchg
pop
psubb
jae
mov
cltd
test
mov
lret
push
push
adc
sar
push
int3
xchg
pop
push
in
ljmp
jl
dec
inc
lret
in
out
stos
push
lahf
xchg
adc
push
packsswb
ret
pandn
or
cltd
and
loope
jb
xchg
xchg
std
fisttps
mov
test
cmc
fadds
fidivrl
mov
or
fwait
mov
jo
add
addr16
jp
das
xor
popf
orb
arpl
xor
enter
loopne
mov
imul
ja
lods
or
cmp
movsb
or
xor
js
fimuls
fbstp
mov
push
test
aad
clc
jns
sub
in
loopne
sbb
out
cmp
sub
mov
lret
add
fst
mov
sub
adc
pusha
jle
fisubrs
in
movsl
ljmp
fcoml
lods
jmp
xchg
pop
sbb
jae
mov
lcall
pop
mov
enter
test
js
cltd
or
inc
xchg
imul
scas
mov
sqrtps
out
jno
mov
shl
pop
into
mov
leave
arpl
or
loope
or
xchg
fisubl
dec
notl
fsubs
pop
xor
sbb
lds
cmp
lea
es
or
inc
leave
xchg
ljmp
stc
mov
jbe
mov
mov
aaa
sbb
outsl
add
xchg
addr16
cmp
loop
je
jno
pop
sbb
xor
dec
xor
and
fld
cmp
pop
and
push
shll
pop
pop
mov
mov
inc
xchg
test
jno
imul
and
movsl
and
int
push
push
adc
inc
out
or
pop
push
jno
js
or
aas
outsl
jecxz
pop
decb
call
push
mov
loope
xlat
aaa
sub
jbe
sub
mov
adc
cld
rorl
adcb
sbb
mov
jp
out
push
mov
pop
sub
mov
outsb
xchg
bound
loop
sub
bound
sub
test
xor
jg
test
aaa
inc
mov
sub
mov
adc
adc
das
ds
movsb
mul
pop
push
lret
xor
sub
cltd
or
adc
xor
mov
outsl
cmpsb
loopne
loop
pop
sbb
or
xlat
fs
cli
add
mov
into
and
aaa
lcall
mov
dec
push
cli
mov
mov
cmp
sbb
push
cld
and
mov
fldcw
pop
xchg
dec
adc
jg
imul
xchg
mov
xorb
cmp
insb
xlat
cmpb
fwait
mov
cld
mov
push
cs
push
rcl
push
push
nop
push
scas
push
dec
push
add
or
fldl2t
push
xor
stos
insb
and
fnstsw
or
jl
sbb
inc
xchg
push
insl
pop
add
inc
inc
adc
push
test
push
pop
aad
cmpsb
inc
mov
dec
aas
push
inc
fwait
jb
mov
push
je
das
not
mov
lea
je
xchg
cwtl
mov
repz
jae
mov
out
subl
sbb
mov
divb
notb
ja
mov
les
insl
mov
cmpsl
mov
add
push
xchg
push
cmpsl
add
int
icebp
stos
rcrl
or
mov
mov
shll
bound
rolb
lret
jmp
aam
push
lahf
mov
mov
push
ror
call
clc
push
loop
xchg
xchg
xor
ljmp
pop
lods
mov
scas
stos
add
test
ljmp
add
aaa
mov
lea
mov
push
dec
mov
out
test
push
int3
xchg
icebp
call
or
add
fwait
rcrb
mov
add
lods
jns
sub
or
fstpl
xchg
push
xor
dec
mov
inc
adc
ja
mov
dec
push
xchg
push
inc
jne
jno
lea
out
sbb
inc
mov
mov
pushf
insl
out
adc
jecxz
jns
fadds
in
inc
addl
fs
sub
fwait
jbe
addr16
int3
jp
dec
ss
jns
mov
rcr
jle
xlat
jge
cmpsb
push
test
in
mov
adc
mov
insl
dec
jae
clc
push
push
out
add
mov
pop
jmp
stos
clc
ficomps
insb
mov
insb
imul
scas
push
icebp
jmp
adc
data16
sbb
mov
adcb
add
iret
ret
lock
inc
sub
fldt
jmp
push
fcmovu
push
xchg
or
sbb
test
pop
mov
nop
or
shrb
daa
repnz
out
leave
or
shl
mov
and
jne
jbe
incb
jge
mov
lahf
aaa
xlat
fisttps
outsl
aas
inc
add
ror
daa
sub
dec
jecxz
popf
push
cmp
inc
xor
movsb
cmpl
and
repz
ja
outsl
mulb
cmpsb
adc
or
enter
daa
add
out
lods
jno
ret
mov
add
ds
lods
arpl
mov
sbb
mov
pusha
test
cmp
outsb
xor
and
pop
and
inc
xchg
mov
cltd
push
dec
xor
aad
xchg
sub
aaa
bound
jns
stos
outsb
aas
outsl
clc
adc
xlat
les
push
jno
andb
inc
sbb
or
adc
hlt
and
into
jg
jmp
sbb
lcall
in
or
fisubrl
test
fwait
stos
orb
inc
jg
xchg
cld
mov
adc
mov
data16
adc
rcll
psubusb
mull
movsb
test
add
insb
or
aad
into
adc
cmc
or
mov
pop
loop,pt
mov
stc
shrl
mov
inc
shlb
add
push
lea
out
jb
cli
in
das
xor
cmp
mov
sti
pop
xlat
idiv
jmp
sti
gs
loopne
loopne
in
pop
movsl
mov
repnz
icebp
pop
xchg
inc
inc
test
cmp
jbe
sub
xor
pop
jmp
scas
movsl
cs
aas
pushf
nop
cs
dec
leave
neg
inc
or
jo
and
adc
jecxz
jbe
test
fs
in
push
add
mov
and
outsb
sub
inc
adc
and
ds
aas
icebp
xchg
nop
jb
mov
pop
je
cwtl
and
out
add
std
sbb
adc
mov
aad
inc
add
push
lret
lcall
mov
jns
lock
lock
mov
orps
ret
add
insl
cmp
dec
mov
test
push
mov
cmp
xor
sbb
and
add
pop
dec
push
and
sbb
iret
sub
mov
mov
and
cmp
hlt
xchg
enter
aas
lcall
enter
bound
jo
je
sahf
popf
sbb
inc
lret
ds
add
pusha
mov
mov
leave
test
pop
xor
sbb
inc
popf
xchg
mov
inc
sbb
pop
jecxz
pop
fwait
add
push
add
add
popf
popf
mov
push
pop
or
xor
outsl
inc
xchg
mov
lods
mov
add
push
ja
cmp
mov
rorl
dec
mov
xor
test
mov
stc
pxor
aad
sti
shlb
in
add
out
ljmp
or
pop
and
mov
sarb
xchg
std
les
lods
sti
xor
push
fbstp
jle
scas
adc
jmp
hlt
adc
jae
jp
push
and
xor
push
inc
and
stos
imul
movl
adc
rolb
push
iret
js
cmpsb
ret
dec
pop
cmp
mov
mov
dec
movb
push
or
jge
cmp
mov
push
sbb
mov
xor
lds
out
ret
sub
xchg
repnz
gs
adcl
push
xchg
lahf
ja
movsl
mov
jge
push
in
iret
mov
aaa
xchg
jg
or
push
add
adc
dec
push
out
gs
push
lret
cmpsb
xor
jmp
xchg
scas
or
push
add
adc
imul
inc
fdivl
xchg
addb
or
ljmp
jmp
sahf
jno
aas
leave
jl
jnp
cmp
mov
data16
movsl
dec
add
lahf
pop
inc
sub
arpl
test
pop
mov
mov
cmc
ds
pop
dec
leave
push
js
add
push
sahf
fndisi(8087
in
loope
sub
int
sub
lcall
lods
push
shlb
or
cmpb
cltd
sbb
mov
and
push
sbb
sub
aas
pop
insb
fcompl
nop
xor
fdivrl
repnz
shrb
subb
scas
jg
test
rorb
mov
inc
ss
push
ja
fnstsw
mull
sbb
mov
movsl
lods
mov
mov
mov
into
idivb
cld
xor
aam
loop
ds
js
lahf
fs
pop
xchg
inc
jns
data16
sbb
adc
jecxz
add
pop
sti
das
xor
cmpl
cmp
out
decb
xlat
jl
mov
or
push
push
imul
mov
imul
xchg
sub
mov
cmp
mov
in
jp
and
adc
jmp
sbb
push
nop
or
pop
inc
pop
stc
pop
fsts
push
shl
jecxz
jbe
lods
mov
sub
imul
out
ficoml
xchg
js
sbbl
fildl
and
push
jle
shl
sbb
nop
out
jb
mov
push
je
push
or
test
std
ret
cwtl
sub
xor
pop
fdivrs
sbb
jb
lret
or
mov
xor
movsb
sbbl
cld
ret
les
and
mov
es
dec
jg
pop
xchg
dec
mov
pop
cmpsl
add
test
icebp
pop
lret
test
pusha
xchg
pop
mov
testl
iret
pop
insb
stos
fwait
shr
lret
je
jae
in
leave
cmpsl
mov
fadds
push
push
sahf
leave
fstpl
ss
lret
push
fcoml
popa
imul
lea
stos
pop
imul
xor
xchg
in
jg
mov
fisttpl
cltd
test
sub
xchg
fs
test
leave
sti
xchg
testb
mov
cltd
inc
fwait
xor
dec
push
movsb
cmp
add
mov
aam
xor
jp
or
inc
stc
xchg
repnz
aaa
mov
loop,pt
mov
dec
pop
mov
inc
cmpsb
dec
cmp
inc
mov
aam
mov
cmpsl
push
dec
push
add
inc
out
rcll
bound
push
lcall
into
shl
adc
insl
inc
or
cmp
xor
add
or
jecxz
and
sti
pusha
and
cmc
fists
push
xchg
andl
xchg
mov
inc
sub
call
push
mov
test
xor
fdivp
insb
mov
imul
dec
scas
int3
dec
inc
push
pop
push
fwait
adc
xlat
iret
xlat
and
ret
push
pop
jae
jmp
arpl
pop
and
clc
sub
inc
sub
aad
xor
imul
outsl
pop
sbb
mov
jbe
ficomps
mov
add
mov
push
out
es
in
jge
inc
sbbb
push
enter
mov
push
in
add
jae
dec
rcr
push
add
xchg
jo
pop
in
scas
jmp
xor
cmp
test
iret
test
inc
lea
mov
push
insl
sub
scas
out
daa
add
jle
inc
loopne
jl
pop
arpl
sub
mov
xchg
add
and
jae
lahf
jnp
xor
aas
cmpsb
test
rcrb
xor
mov
mov
mov
inc
pop
xor
mov
loopne
ret
ss
sub
cmc
outsb
add
adc
rorb
lods
mov
dec
pop
xor
add
pop
pop
and
push
int
imul
mov
inc
pop
jmp
aad
int3
sub
fsubl
sbb
dec
int
sahf
jne
dec
test
test
addb
jg
ror
js
push
mov
push
mov
or
ss
mov
cmp
cwtl
jl
mull
add
shr
je
fcoms
mov
into
flds
push
cltd
cld
out
xor
jmp
outsl
inc
push
inc
loop
sti
cmp
push
pop
rclb
xchg
add
hlt
mov
lods
in
push
inc
mov
mov
out
dec
mov
dec
sub
xor
sahf
int
and
push
sti
jne
cmpsl
xor
fldenv
bound
pop
jecxz
jg
imul
imul
jl
xchg
leave
ret
popf
sbb
sbb
xlat
and
pop
sub
sbb
in
cmp
pop
aam
jle
movsb
aad
fsubp
nop
in
cmp
xor
inc
xor
pusha
lret
cmp
scas
stc
scas
lea
jbe
ljmp
adc
or
xchg
and
pop
inc
in
cwtl
imul
aas
lods
jb
or
xor
mov
fs
rorl
addr16
imul
std
mov
xor
mov
pop
xorl
lret
js
arpl
imul
lock
fnstsw
mov
jge
jbe
adc
push
xor
insl
push
testb
jle
add
mov
das
jle
cld
mov
dec
mov
sbb
sub
sbb
or
pop
mov
mov
or
test
rcl
push
sbb
clc
push
out
out
push
subl
aam
mov
lods
clc
lcall
ss
xchg
sub
fcoml
jbe
jge
add
cmp
scas
xadd
rcrb
into
dec
jmp
ljmp
and
sbb
cmpsl
cltd
pop
cmp
ret
push
inc
adc
add
roll
jecxz
and
test
xor
inc
xchg
inc
int
mov
ret
xor
cmp
xor
ja
aam
dec
sub
push
inc
cmp
stos
or
inc
in
mov
enter
divl
mov
mov
lock
out
mov
inc
bound
dec
xchg
jns
mov
in
jb
sbbl
cmp
cwtl
xchg
xchg
mov
add
jae
jp
ret
test
mov
int
in
jle
jnp
in
loope
pusha
mov
mov
xchg
push
out
jmp
mov
jae
dec
repnz
stos
stos
adc
xor
pop
std
stos
push
and
and
mov
insb
repz
and
pop
test
push
and
inc
pusha
ret
lea
adc
cmp
mov
xor
or
jae
cmova
pop
cld
xchg
mov
lds
gs
dec
push
clc
fimuls
outsl
aas
lds
sar
dec
mov
push
xchg
leave
outsl
push
sti
hlt
imul
push
xor
xchg
inc
dec
aaa
adc
adc
add
bswap
call
nop
mov
in
inc
xor
mov
out
scas
lret
and
xor
cmp
inc
mov
inc
sbb
lret
cmpsb
cltd
int
in
stc
mov
enter
daa
add
push
lock
sbb
jmp
fldl2t
insl
lods
push
xchg
test
loopne
lcall
test
popf
add
xor
xchg
jnp
into
pop
lcall
pop
je
popf
push
pop
popa
loope
jl
sub
je
sub
test
adc
push
dec
lret
andb
sbb
fwait
mov
push
sarb
subl
pop
fs
push
xor
push
loopne,pt
fmull
jbe
sbb
fwait
sahf
sbb
test
xchg
andb
jg
fsubr
mov
fdivrs
in
xor
push
adc
jb
pushf
jo
cmp
push
adc
mul
lea
lret
push
roll
or
into
mov
mov
xor
outsl
and
jg
push
in
stc
out
jecxz
pop
and
data16
lods
rorl
cmp
cli
jge
xchg
xor
imul
dec
xlat
clc
sti
and
xchg
push
addl
mov
imul
test
fsts
daa
cmp
lcall
sbb
push
jb
xlat
arpl
sub
stos
pop
mov
test
ds
push
xchg
loope,pn
jbe
addl
dec
out
es
inc
mov
fld
stc
test
sarb
jecxz
inc
je
mov
mov
xor
in
imul
adc
mov
adc
pop
popa
xchg
and
mov
inc
aas
into
fwait
mov
orb
je
leave
int
fdivl
movsl
std
adc
and
mov
pop
orl
aaa
jl
out
mov
xor
cmpsb
lock
das
mov
cmp
xor
sbb
mov
data16
pop
or
in
or
dec
test
xchg
cmpsl
add
mov
icebp
push
push
out
cld
mov
adc
mov
idivb
and
mov
stos
loope
rclb
incl
adcb
push
fnstsw
mov
xchg
xchg
cmpsb
sub
fsub
popa
es
xchg
fisttpll
xchg
jae
mov
setle
cmp
push
negb
mov
xchg
mov
roll
dec
push
lods
out
outsl
nop
and
pop
int3
mov
imul
xor
ljmp
add
xchg
sti
call
or
xor
xchg
nop
xor
mov
mov
in
xor
mov
dec
push
std
xlat
inc
shll
or
test
mov
push
fbstp
ja
mov
mov
out
xchg
pop
daa
bound
xchg
and
push
cmpsl
dec
xor
sub
xchg
jmp
jp
std
sbb
popa
pop
aaa
jnp
daa
jne
inc
addr16
ljmp
xchg
adc
daa
popf
out
jg
lds
cwtl
cmp
outsb
rorb
xchg
mov
push
add
subb
inc
jno
pop
aad
imul
xchg
movsl
sbb
sub
insb
or
into
and
pop
loope
push
inc
das
arpl
mul
or
out
mov
neg
movsl
stc
or
das
negl
jp
sub
vpshuflw
adc
or
test
ret
loopne
mov
and
jbe
fwait
push
jge
pop
fstpl
add
mov
cmp
add
loop
int3
rorl
lds
sti
fnstenv
adc
mov
mov
lods
andb
scas
cmpsb
sbb
lret
in
loopne
add
movsl
popf
cmpsb
daa
add
xchg
cmp
pop
jl
movsb
popf
cmp
or
movsl
movsb
fs
bound
cld
xchg
in
test
push
push
adc
ds
bound
test
pop
mov
iret
push
les
sub
test
outsb
lret
in
mov
rolb
cmpsl
int
in
jae
negb
iret
pushf
nop
add
xor
and
cmp
cli
int
or
lods
jle
pop
jmp
mov
push
xchg
insl
push
fdivrl
iret
fcompl
in
std
mov
in
shlb
adc
adc
mov
loop
push
cmp
mov
je
rcrl
mov
fidivrl
daa
sarb
sbb
jl
std
adc
stc
popf
andl
pop
adc
mov
jnp
loopne
lret
cli
mov
push
xor
pop
pop
cmp
cwtl
sar
lods
jae
ja
loop
je
loopne
loopne
pop
and
push
adc
mov
jmp
adc
cmc
mov
imul
and
sub
cmp
ja
sub
frstor
adc
pop
cs
jle
aad
or
nop
lcall
inc
pop
popa
inc
frndint
cmp
jecxz
movaps
mov
fisttpll
stos
fwait
mov
call
mov
adc
rcr
adc
in
add
dec
inc
das
add
and
aas
insl
cld
repz
inc
es
and
pop
je
addl
std
mov
or
mov
popf
lock
jno
mov
fmuls
mov
clc
and
mov
push
xor
jmp
frstor
xor
ret
jb
ss
add
xchg
add
mov
icebp
fisttpll
cld
loope
pop
mov
pusha
sub
mov
leave
sbbb
dec
jae
pop
cltd
inc
aam
imulb
std
mov
push
mov
orl
ljmp
outsl
lods
into
mov
dec
out
cld
out
push
xchg
mov
clc
paddw
or
jge
in
cltd
push
jge
les
adc
fistpll
mov
rorl
sub
jecxz
or
imul
das
xchg
fwait
mov
pushf
popa
add
or
daa
xor
sub
or
xor
lods
push
xchg
xor
addl
ja
addb
adc
jo
push
lcall
adc
jne
mov
out
jo
mov
jns
aam
in
xor
xorl
lods
out
cmc
les
adcb
pusha
jp
in
sbb
mov
imul
jns
leave
push
and
hlt
jne
fbstp
xchg
jbe
xlat
xchg
and
mov
push
xor
popf
mov
shrb
push
inc
sub
stos
aaa
rcll
and
cmp
subl
cmc
push
in
push
popf
adc
scas
ror
hlt
xchg
sub
loope
cs
sbb
arpl
icebp
add
imul
vaddss
push
sbb
pop
mov
ficoms
sbb
shrb
fidivrl
cld
hlt
and
pop
fcmovnb
hlt
add
cli
jbe
and
jge
inc
jle
mov
dec
js
movsb
add
outsb
lds
dec
push
inc
pop
push
stos
sahf
lea
imul
and
cmp
sbb
pop
dec
cmpsb
lahf
ljmp
mov
lcall
leave
lcall
aaa
add
ds
movsl
stos
stos
mull
mov
mov
push
iret
or
test
xor
mov
in
inc
add
pop
call
mov
pop
repnz
loope
cmpsb
fisubrs
imul
outsb
insl
adc
push
movsl
sub
sub
out
addb
call
and
jl
push
fdivr
in
in
scas
fisubrs
sub
jmp
in
loopne
in
push
fsubl
sbb
mulb
test
adcb
data16
popa
add
mov
lea
pop
lret
and
cmp
leave
negb
popa
mov
push
shll
adc
dec
xchg
cmc
out
push
cld
xor
aad
outsl
loopne
es
insb
dec
stc
push
ret
jae
or
data16
stc
lods
mov
push
and
fucomip
pop
cli
jecxz
pop
xor
sub
cmp
lcall
loopne
push
lock
inc
push
and
in
push
imul
repz
fwait
xchg
adc
push
sbb
leave
cmp
xlat
loope
push
icebp
movups
jle
sbb
jg
adc
aad
cmp
nop
jne
mov
lods
loopne
imul
xor
in
cli
mov
mov
adc
call
addr16
fs
mov
push
adc
push
pop
pushf
das
pop
stc
fildl
out
cmpsl
mov
inc
mov
jo
cmp
popa
pusha
jb
xor
cltd
les
sarl
int3
not
push
es
pop
dec
cld
cwtl
sbb
mov
cwtl
inc
mov
sub
cmpl
dec
pop
lret
lds
mov
xchg
pop
lock
in
das
js
push
mov
mov
mov
mov
popa
lcall
sahf
or
call
stos
icebp
mov
lods
cld
or
fidivrl
sbbl
mov
call
fidivl
sub
sbb
lea
lods
adc
sti
xchg
mov
mov
mov
adc
ljmp
fsubrl
add
xchg
add
fimuls
pop
jns
add
aaa
rolb
or
dec
and
jns
cmpsl
mov
sbb
test
pop
cmp
push
xor
add
and
sar
rcll
xor
and
or
int
xchg
cs
sbb
mov
cmpsl
mov
dec
add
sbb
mov
fimuls
hlt
nop
jne
js
mov
clc
dec
out
dec
jae
fimull
in
xchg
gs
xchg
out
aad
sub
jge
sub
pop
idivb
std
mov
dec
sub
jnp
sarw
or
pusha
jo
flds
jmp
jmp
mov
jnp
popf
in
cmpsl
mov
cmp
imul
and
insb
xor
subl
mov
push
xor
adc
xchg
inc
iret
push
lds
pop
dec
aad
inc
repnz
jb
mov
pop
loope
lcall
inc
daa
ror
fimull
stc
mov
sbb
xchg
push
pop
fdivs
rorb
mov
dec
cli
add
aam
push
hlt
dec
jae
push
and
jbe
and
or
jbe
iret
aaa
push
xchg
and
repz
test
aas
aas
push
lea
popf
jo
sti
iret
scas
addr16
fstps
cmp
arpl
movsb
sti
jle
inc
leave
pop
xchg
cmpsb
and
dec
enter
daa
push
or
ljmp
jl
cmp
out
adc
movsl
mov
inc
and
in
neg
pop
push
mov
adc
cmpsl
mov
les
add
jno
js
push
stc
pop
xor
push
mov
loope
jno
sub
and
sub
out
outsb
xchg
jecxz
adc
stc
or
fadds
cmp
pop
shlb
jecxz
mov
int
cmp
mov
shll
cwtl
or
fmull
pop
sbb
jmp
test
push
push
xorb
cwtl
mov
jae
mov
sub
fldenv
cmp
test
mull
sbb
lret
xor
dec
lret
decb
cmc
mov
gs
ret
aaa
mov
jge
ja
mov
cli
movsl
stc
or
sahf
add
rolb
cli
add
push
cli
push
in
xor
or
mov
mov
push
xor
pop
aad
pop
pop
out
aam
mov
out
imul
xchg
repz
les
xchg
aad
mov
cmp
sbb
sub
mov
jmp
jecxz
or
aad
lret
xchg
nop
push
mov
dec
add
iret
inc
jle
and
push
dec
testl
cmpsl
lea
pop
call
out
xchg
imul
pushf
fiaddl
scas
fldt
sbb
inc
cmp
cmp
out
jns
xor
adc
je
in
xchg
ror
mov
std
add
push
cmpsb
mov
pop
scas
mov
add
dec
lahf
xchg
sbb
xor
sbb
xchg
mov
push
jo
mov
pop
mov
and
es
insl
mov
and
mov
mov
cmp
cmpsb
pop
sbb
ss
cli
mov
pop
shrl
sub
aam
mov
mov
pop
add
es
or
and
sub
mov
inc
aas
lods
movsb
xor
stos
or
out
ret
xchg
dec
mov
sub
add
imul
mov
mov
fdivl
dec
xchg
test
adc
xchg
lret
jb
jns
outsb
insb
call
fwait
sbb
leave
add
aas
cmp
pushl
pop
xor
mov
push
daa
nop
xor
inc
push
xchg
jge
mov
push
pop
adc
bound
in
cmpb
dec
imull
or
inc
and
xlat
sahf
mov
cltd
mov
int
out
cs
aas
jns
cmpl
adcl
movsb
sub
sub
js
fsubl
pop
dec
jp
out
mov
xchg
lcall
lods
gs
push
push
in
pop
int
sub
fucomip
inc
fistl
fs
jecxz
mov
push
push
mov
push
popf
or
idivb
rorb
sbb
dec
fldcw
pop
imul
push
push
jp
test
mov
testl
std
xchg
push
arpl
push
aaa
inc
cmp
push
xor
ljmp
mov
jmp
sbb
movsb
aad
pop
mov
ficomps
mov
shlb
mov
mov
divb
hlt
xchg
std
push
jbe
xchg
sbb
mov
sbb
test
aaa
adc
or
add
and
add
jo
or
and
pop
scas
inc
cli
mov
jb
mov
movsb
xchg
sub
fdivrs
movsl
xlat
xchg
in
xchg
sahf
mov
daa
xlat
mov
sbb
and
cmp
xlat
jl
mov
int
lahf
push
pop
xchg
push
jne
mov
push
leave
xor
xor
pop
fsubrs
nop
addl
xor
push
ds
fidivl
mov
adc
aam
aaa
subb
add
jmp
and
mov
fiadds
dec
int
cmpsb
imul
data16
lcall
out
mov
xchg
xchg
sahf
movsb
and
test
xchg
jg
jb
mov
mov
shlb
sub
ss
lds
aas
sub
neg
cld
jg
jo
in
shl
lods
mov
inc
or
sub
dec
mov
xchg
xor
jg
outsl
sahf
cmovbe
mov
push
stc
ret
mov
das
data16
adc
cmc
dec
jns
fucomp
pop
cli
dec
xchg
adc
dec
or
cmp
roll
loopne
inc
loopne
or
std
sahf
loopne
insl
cmp
ficoml
mov
inc
imul
movsl
repz
lcall
sbb
aas
push
pop
xlat
pop
mov
dec
mov
push
sahf
std
jmp
out
sub
aad
rolb
bound
or
popf
cmp
mov
jne
jecxz
or
lea
mov
gs
pop
sbb
lods
adc
jp
fistpl
push
stos
inc
les
mov
aas
dec
ss
int3
mov
mov
cmp
lods
fcomip
pop
aaa
xchg
std
lods
popf
xchg
cwtl
mov
pop
mov
sbb
mov
cmp
dec
mov
outsb
mov
movsb
mov
repnz
into
mov
ss
imul
leave
add
addr16
mov
mov
cmpsl
std
pop
idivb
bound
arpl
aam
mov
leave
arpl
mov
es
rcr
cltd
xchg
sub
aas
mov
mov
test
jbe
dec
popa
pushf
clc
sub
pop
es
push
lods
push
jle
stc
cmp
and
dec
mov
push
jne
sbb
mov
mov
adc
in
les
fildll
dec
out
rcrb
pop
push
push
xchg
out
rol
ja
pop
nop
cmp
push
jbe
push
add
pop
lcall
shll
xor
or
xchg
int3
outsl
repnz
and
mov
sbb
pop
jae
ljmp
or
rcl
mov
sub
mov
lret
mov
out
or
adc
in
dec
and
jae
daa
lock
sub
jae
xor
pop
ffreep
jp
repnz
or
mov
jle
lock
fdivp
xor
fisttps
sbbb
pop
ret
sbb
add
jp
pusha
popf
xor
mov
lcall
stos
nop
mov
xchg
insb
or
fs
push
inc
pop
push
shll
cltd
xchg
lock
adc
mov
pop
mov
sub
arpl
push
push
inc
inc
xchg
sahf
or
fcmove
mov
ja
fidivl
sbb
sbb
test
pop
ss
fidivrs
popf
inc
lds
scas
test
orb
repnz
mov
stos
hlt
loop
dec
push
shlb
jbe
js
jge
inc
push
in
pop
scas
aaa
iret
mov
or
mov
add
inc
dec
int3
jg
loopne
pop
mov
xor
jl
std
scas
and
notl
movsb
adc
enter
jmp
in
jl
dec
enter
daa
std
cmp
cmp
shll
cltd
sarb
cmp
ds
lods
xchg
movsl
rcl
and
adc
stos
jnp
mov
gs
xor
inc
dec
vminpd
idivb
dec
hlt
pop
scas
cmpsb
mov
jp
loope
jae
sub
adc
sub
loopne
outsb
push
stos
movsb
adc
scas
sbb
cmpb
aad
imul
and
shrb
loope
sub
and
pop
sub
sub
lcall
add
gs
and
sahf
inc
cmp
or
jg
mov
push
mov
mov
adc
ret
push
ss
jg
lret
fdivr
movsb
cmp
lret
scas
sarl
mov
xor
into
sub
mov
xor
outsl
jge
lcall
xor
fs
cld
add
outsb
inc
imul
or
mov
and
pop
cli
jl
push
xor
or
pop
pop
incb
pop
jns
loop
and
xchg
sbb
pop
popf
lret
pop
xlat
cltd
imul
stos
rep
jg
xchg
pop
sbb
sbb
jp
dec
xlat
sahf
mov
mov
in
mov
mov
cmc
aad
sbb
nop
push
mov
addb
add
fdivs
sbb
mov
nop
lea
enter
aad
in
and
lret
in
les
out
and
pop
jmp
inc
dec
pop
loop
mov
pop
jb
sub
dec
pop
xchg
je
stos
mov
addr16
negb
sahf
and
scas
mov
inc
cmp
movsb
inc
lret
adc
repz
mov
inc
das
adc
aad
mov
xchg
ret
scas
mov
es
dec
or
mov
cmp
bound
in
mov
and
fsts
and
mov
lcall
leave
out
cmp
jmp
fnsave
inc
clc
push
adc
xchg
add
push
lods
jp
pop
stos
call
xchg
fcoms
popf
jmp
vmwrite
rcrl
lock
or
xchg
fstpt
test
lahf
int
and
xor
fsubrs
js
cmp
push
fwait
jns
or
sbb
cmpsb
add
jne
in
mov
add
adc
outsl
or
decl
mov
sub
mov
fcomps
push
ja
push
mov
push
push
inc
iret
xor
cmp
dec
popf
xchg
xchg
jne
jmp
fucomp
in
xor
bound
mov
pusha
xorl
out
sub
lret
or
loopne
pop
out
jp
mov
mov
fwait
cmpl
pop
jle
jle
in
repz
pusha
fmuls
fildll
int
inc
cmp
jmp
dec
and
push
cmp
icebp
pusha
mov
jne,pt
stos
add
jg
jne
jecxz
les
scas
sbbl
iret
jo
out
ret
xchg
pop
jno
adc
movb
fmull
push
inc
repnz
movsb
btr
and
mov
xchg
inc
pop
gs
repz
call
rcrb
cmpsl
repnz
inc
test
cmp
pop
push
jb
mov
daa
mov
sbb
push
cld
or
iret
mov
lret
int3
push
outsl
dec
lret
push
ss
xor
xlat
imul
push
fidivrl
and
movsb
pushf
adc
jbe
aam
stos
xchg
test
arpl
imul
cld
and
jns
and
int
cmp
gs
jle,pt
push
movsl
stos
sub
daa
mov
lahf
push
imul
test
pop
inc
cmp
and
test
or
push
push
js
movsb
rcll
lahf
imul
sbb
movsb
stos
xchg
sub
dec
mov
outsb
mov
fidivs
adc
xchg
sbb
cmp
and
and
int
sub
push
pop
and
mov
les
dec
pop
fcoml
mov
sbb
inc
in
test
jo
jg
dec
mov
loop
mov
pop
imul
cs
cmp
mov
push
lret
test
setb
inc
fsubl
into
push
lea
or
loop
mov
outsl
pop
inc
pop
loop
fiaddl
fs
push
sub
mov
push
lock
cmp
xchg
mov
cli
scas
adc
xor
xor
dec
lret
ds
pop
es
adc
mull
loopne
fisttpl
adc
lods
sbb
adc
out
repz
jno
push
rorl
out
add
cmp
push
mov
mov
sub
push
xor
aad
xlat
into
nop
loope
ljmp
leave
test
les
aas
inc
jecxz
pop
mov
les
or
adc
dec
arpl
dec
adc
mov
cld
pop
pop
pop
xor
xor
rolb
inc
test
sbb
dec
jne
jmp
roll
pop
shll
jmp
push
add
sub
repz
imul
testl
test
or
jle
andb
or
cmp
sub
insl
push
out
xor
fdivp
cmpsl
sti
sub
sbb
inc
icebp
adc
cld
mov
out
cli
mov
dec
fwait
shlb
fs
rolb
fs
rcl
mov
getsec
push
outsl
cld
pop
fstl
dec
mov
ljmp
test
jle
out
jmp
xchg
xchg
sbb
lcall
fdiv
rcrl
addr16
xchg
mov
dec
test
lds
mov
sub
shll
and
inc
fwait
test
adc
mov
cmp
add
adc
or
or
fwait
jae
push
or
out
mov
xchg
outsl
pop
ja
xor
inc
pop
sbb
pusha
mov
subb
mov
shlb
bound
arpl
in
push
in
addl
dec
out
fistl
mov
sbb
imul
and
arpl
dec
jnp
adc
cmp
pusha
sti
and
dec
lcall
dec
mov
pop
mov
mov
popf
orl
push
jge
pushf
stos
jbe
adc
xchg
xchg
or
insb
imul
push
push
dec
fcomi
adc
out
iret
iret
cmpsb
inc
aad
pop
sub
push
inc
push
inc
arpl
nop
mov
lahf
cltd
or
rorb
inc
and
fcmovbe
addr16
xchg
jmp
lds
test
int
adc
xchg
aam
push
ja
repnz
pop
out
leave
mov
xor
push
pop
adc
jge
or
aaa
dec
mov
xor
popa
dec
and
push
mov
orb
sbb
inc
fmul
jo
fstl
jecxz
shll
sub
mov
movsb
daa
xchg
loop
add
and
enter
daa
sti
xchg
imul
cld
negb
dec
push
sarb
mov
xor
ds
shlb
jae
push
out
insl
les
sub
xor
rcrb
pop
stos
gs
js
xchg
pop
pop
sub
or
and
push
subb
ljmp
shll
gs
popl
aaa
incl
sbb
jp
pop
mov
push
out
sub
out
inc
mov
pop
jecxz
out
fs
push
lahf
mov
fdivrl
ss
sahf
lea
mov
sbb
or
test
sub
sub
jno
fistpll
jo
aam
sbb
or
dec
inc
or
cmpsb
jno
mov
add
or
inc
into
icebp
jo
cmc
shll
sti
outsl
cmp
jge
outsl
cmp
pop
sti
sub
lea
mov
aad
out
iret
out
dec
push
cli
loop
test
sar
addr16
adcl
dec
pop
push
lock
loopne
scas
or
mov
adc
mov
imul
push
repz
dec
xchg
loope
and
lock
xlat
sbb
ljmp
dec
shr
sbb
cmc
cs
sarb
clc
add
dec
jg
in
lret
flds
pop
les
and
subb
or
jmp
ljmp
xor
adc
fld
fldt
mov
pop
mov
push
inc
les
sarb
xchg
shll
aad
dec
in
out
es
mov
roll
icebp
outsl
std
mov
icebp
pop
mov
cmp
mov
or
dec
add
lock
or
mov
scas
jl
rcr
into
mov
xor
push
xchg
ret
int3
dec
or
lock
insl
ds
mov
test
cmpsl
cli
pop
sarl
out
scas
cld
jecxz
push
mov
xor
jnp
push
xchg
mov
sbbl
sub
test
inc
mov
daa
push
push
xor
sub
xchg
dec
or
mov
lods
push
push
leave
stos
mov
out
dec
pop
xor
push
push
pop
cld
getsec
sbb
add
or
push
mov
dec
xchg
adc
and
test
jle
xchg
mov
sbb
pop
jb
lret
pop
xchg
mov
fwait
xlat
jge
push
pop
sbb
pop
add
lret
mov
push
das
xchg
mov
xor
mov
ja
loop
dec
ret
filds
mov
cmpsb
adcl
jne
rorb
push
jmp
out
stos
je
bound
mov
in
push
mov
out
fildll
outsb
repnz
cmpl
cld
dec
inc
mov
das
adc
jnp
imul
pop
je
in
sbb
pusha
xchg
cmpl
in
dec
out
jmp
loop
lret
sub
test
outsb
mov
mov
lods
dec
test
imul
mov
cs
adc
xor
iret
cs
aas
pop
bound
js
or
push
or
dec
in
pop
inc
mov
inc
cmpsl
xchg
inc
adc
jle
ret
push
sbb
pop
mov
pushf
ja
rcl
insl
mov
out
and
leave
daa
fsubrl
ret
outsb
push
push
lods
loop
jbe
loopne
jge
inc
adc
sbb
jae
or
sbb
xor
dec
test
out
push
cld
jae
xor
lea
scas
ret
and
fs
mov
mov
cmpsb
mov
mov
xor
push
enter
daa
cli
xor
jmp
fstpt
cmp
test
out
movsl
aad
pushf
and
sti
lahf
xchg
fldt
rcrl
push
cmc
testl
cmp
pop
rcrb
jl
insb
pop
insb
push
pop
push
fs
sub
das
sub
outsb
cmpb
or
rolb
mov
clc
bnd
push
movl
mov
push
ljmp
sub
repz
bound
jb
idivb
sub
data16
xor
jne
sahf
jae
cmpb
cmp
mov
fistpl
movsl
or
jbe
or
loope
divb
mov
in
mov
xchg
neg
stos
xor
cmp
add
cmp
clc
mov
in
imul
cwtl
mov
inc
lds
loop
lret
sahf
mov
push
out
add
inc
data16
fwait
adc
or
mov
sub
fstps
cli
adc
ljmp
pushf
lahf
pop
insb
dec
test
addl
icebp
imul
push
repz
pop
sbb
sub
pop
adc
mov
xchg
jno
add
fldpi
sbb
and
stc
testb
xchg
pop
add
or
fnstcw
cmc
les
pop
inc
jecxz
adc
lret
lea
fucomp
or
popa
out
add
ja
adc
mov
mov
pop
and
pop
jns
inc
inc
loopne
addl
adc
jb
stc
insl
dec
arpl
insb
rcll
mulb
std
dec
clc
cli
cwtl
jp
jecxz
jmp
lahf
mov
shl
ret
xchg
call
lret
pop
push
mov
pushf
pop
mov
popa
imul
in
das
mov
pop
mov
in
push
int3
and
xlat
out
pop
jnp
es
int
and
inc
stos
cmpsl
stc
or
js
mov
in
mov
push
pop
push
and
stos
pop
xor
mov
mov
sub
mov
in
cmpsb
test
push
cmc
fisttpl
in
dec
clc
sbb
xchg
mov
ljmp
fsubrs
aam
out
mov
repnz
stos
outsb
notl
xor
setbe
mov
add
test
sub
mov
jmp
mov
test
int3
push
xchg
inc
adc
or
mov
push
add
push
add
loop
decl
cmp
or
mov
pushf
jns
xchg
or
fidivs
adc
cli
pop
or
pushl
push
leave
dec
mov
inc
mov
or
arpl
mov
stos
sub
xor
jne
fnsave
jno
jmp
mov
jl
dec
xchg
jns
jmp
ja
pop
ljmp
jg
inc
or
mov
jp
daa
data16
das
xchg
mov
hlt
test
jle
ffree
in
inc
ds
xor
pop
fisttps
mov
xchg
lods
repnz
xchg
lods
push
xchg
popf
iret
stos
or
sti
xchg
mov
pop
in
and
and
insb
mov
cmp
xchg
sbb
push
fucom
sbb
add
das
jne
add
cltd
mov
imul
ja
or
push
lds
icebp
insl
fidivrl
cmp
repnz
cmp
and
in
xchg
jo
repnz
pop
ror
outsl
das
hlt
push
popf
popf
push
cld
clc
sub
xchg
insl
jge
fs
outsl
mov
or
push
mov
int3
sub
dec
push
ffreep
inc
xor
call
adc
and
pop
cmp
or
cmp
dec
fldenv
sbb
jbe
jge
or
stc
clc
push
cmp
jno
in
jl
aad
cmp
cli
xlat
ds
sbb
clc
sbb
lahf
mov
push
push
xchg
add
test
rcl
xor
pushf
rcrb
aaa
fdivrs
sub
push
jo
loope
daa
imull
loopne
sub
cmpsl
test
rcrb
daa
xchg
pop
shll
or
cld
sbb
mov
and
or
int
and
mov
lcall
repnz
ret
push
jns
sahf
rcll
roll
push
loop
jg
mov
mov
push
mov
xor
leave
fwait
testl
negl
aam
rcl
cmp
push
les
into
mov
jbe
pop
enter
or
loop
mov
push
adc
call
data16
clc
lods
repnz
fisttpl
fdivs
cli
dec
cwtl
xchg
xor
jno
sti
dec
sbb
gs
pop
mov
pop
sbb
xchg
imul
xor
repz
repz
addr16
sbb
data16
xlat
lcall
mov
imul
cs
and
add
nop
jb
cs
cmp
adc
les
in
jecxz
decl
mov
test
orl
loopne
or
arpl
fldenv
fisttpl
repz
dec
xchg
inc
cli
or
gs
lret
jb
push
adc
push
or
mov
mov
pop
mov
out
mov
cwtl
xor
jecxz
mov
rcrb
pop
add
dec
and
js
shl
cwtl
mov
mov
lock
sub
das
xchg
sub
mov
subl
negb
insl
or
pop
dec
jnp
cmpsw
clc
inc
nop
mov
xchg
ss
cmp
mov
js
je
pusha
mov
inc
pop
lret
sbb
std
xchg
adc
aam
fsubl
jne
into
push
mov
sti
enter
xchg
lret
ljmp
sub
movsl
icebp
out
adc
stc
xchg
repnz
push
or
je
cmc
cmpsb
or
adc
sbb
inc
lods
add
icebp
or
test
lods
sub
movsb
ficompl
js
ljmp
test
push
movsl
loope
add
loope
cmp
xor
iret
or
popa
inc
xor
out
xchg
push
mov
mov
fstps
mov
jmp
ja
int
dec
test
fidivs
mov
not
jne
dec
mov
push
in
jns
ljmp
scas
scas
fsub
mov
mov
data16
ret
pop
das
mov
mov
push
iret
mov
mov
cmp
in
rorb
fildll
cs
cs
xchg
js
gs
dec
xchg
push
dec
xchg
xchg
or
push
cmp
or
fsubrs
jecxz
add
scas
or
add
iret
in
jns
ret
push
pop
rclb
inc
aas
jmp
add
or
inc
in
inc
mov
sbb
xchg
out
addl
and
lds
jae
mov
xchg
iret
mov
adc
pop
iret
push
dec
push
dec
jbe
mov
std
sbb
mov
sub
es
xchg
xor
inc
cwtl
enter
dec
and
int
cmp
adc
movsb
enter
mov
adc
pushl
sub
js
cmp
clc
icebp
jge
dec
cmpsb
dec
jno
adc
jl
aad
cmp
sub
movsl
jecxz
repz
pop
and
sbb
test
mov
jo
pop
dec
data16
sbb
and
in
js
aam
pop
ljmp
loope
out
sbb
pop
data16
pushf
mov
outsb
inc
leave
daa
adc
negb
fimull
push
and
inc
add
cmp
dec
add
popf
int
jmp
sub
mov
pop
pusha
xor
jge
repz
movsb
mov
adc
dec
shlb
lods
hlt
rolb
jl
sbb
xchg
cmpsb
push
mov
jge
adc
or
cmp
mov
mov
sbb
shrl
mov
arpl
or
jno
into
lcall
xor
pop
pop
outsl
fcomp
jae
sub
loope
lret
lods
fiaddl
test
data16
mov
lods
fxch
test
xlat
dec
push
cli
jnp
mov
cmp
cmpsb
add
cli
pop
jo
mov
in
add
movsl
xor
mov
adc
imul
cmc
sub
mov
stos
xchg
sub
add
mov
scas
xlat
and
mov
push
mov
adc
jmp
dec
add
mov
mov
nop
dec
cmp
dec
pushf
mov
mov
les
jecxz
das
rol
test
sub
fists
pop
dec
add
pushf
xchg
pop
mov
sbb
inc
adc
push
push
jb
fisttpl
push
and
shl
cltd
add
ljmp
cwtl
lock
mov
push
mov
cwtl
add
or
in
lret
cmp
and
lock
mov
pop
cmpsb
andb
lcall
decb
dec
jbe
cli
cmpsl
idiv
cltd
mov
insb
jne
cld
fs
mov
fwait
nop
or
loopne
std
pop
loopne
add
sarb
add
jo
jbe
inc
or
fnsave
sub
clc
mov
mov
lds
clc
popa
or
jg
xchg
fcomps
xchg
cmp
xchg
cmp
add
sbb
movb
bnd
test
inc
sub
icebp
enter
ret
bound
lahf
xchg
sbb
xor
iret
scas
in
xchg
test
mov
dec
xor
add
cld
jle
dec
movd
mov
fwait
or
fidivs
test
xchg
cmpsb
ret
divb
pusha
dec
in
pop
jg
xchg
or
dec
pushf
cmp
inc
mov
jg
addr16
stc
inc
stos
dec
or
into
jne
pop
cmc
mov
rorl
out
inc
jb
bound
lods
jns
mov
in
push
mov
cmp
pop
sub
push
dec
xor
lret
js
xchg
stc
jae
ret
mov
push
add
jle
mov
pusha
addr16
pop
xchg
gs
or
and
jbe
jae
ds
push
or
jo
sbb
in
push
jns
jl
inc
cmp
dec
insb
mov
imul
scas
jo
push
imul
iret
dec
enter
add
cmove
and
inc
pop
inc
push
pop
dec
or
mov
fisubl
out
ficompl
push
ljmp
les
nop
xor
out
jl
mov
push
push
lcall
jge
dec
dec
sbb
mov
or
adc
add
jle
movsl
cmp
xor
sahf
js
pop
outsb
shlb
ja
xor
movsb
push
jmp
inc
inc
mov
inc
in
out
sahf
enter
daa
imull
cmp
bound
cmp
outsb
ds
mov
and
mov
push
cmp
test
push
jle
xor
enter
fcomps
lcall
sub
lods
push
mov
ljmp
mov
stos
outsb
test
outsl
arpl
shll
popl
mov
sbb
fimuls
and
sub
rep
outsl
int
xchg
into
sub
roll
fistpll
sti
push
sti
scas
inc
fsubl
or
jl
jl
sbb
popf
orb
push
mov
push
xor
push
push
das
ss
mov
pop
popf
enter
test
roll
sub
add
jge
icebp
cmc
in
insl
insl
xor
loopne
mov
insb
loop
mov
stc
ret
pop
sub
jbe
test
data16
push
lods
rcl
mov
outsl
out
stos
inc
cli
scas
push
aam
cs
cmp
mov
sti
test
iret
and
aas
imul
push
mov
xlat
imul
or
jg
mov
sbb
fsubr
xlat
sbb
sbb
cld
and
inc
cltd
in
inc
pop
lcall
push
mov
nop
sub
cmp
inc
push
inc
fldenv
sbb
jecxz
mov
std
lea
add
fisubrs
and
icebp
mov
pushf
xor
test
pop
bound
fadds
dec
and
inc
adc
mov
fwait
inc
dec
enter
dec
shr
inc
pop
cmp
sub
push
pop
cwtl
stos
rclb
sub
mov
dec
imull
mov
mov
lock
stc
lea
dec
xchg
mov
adc
pop
and
push
pop
ret
or
fisubrs
add
cmpsl
idivb
push
mov
inc
fmul
cld
and
mov
outsb
pop
pop
mov
ljmp
sub
fdivr
aam
faddp
mov
xor
push
adc
pop
inc
cwtl
clc
lret
xchg
dec
xor
cmp
dec
lods
cld
sbb
out
fisubl
push
mov
inc
fiaddl
cmp
jg
nop
sbb
lcall
in
jecxz
mov
sub
xchg
fcompl
or
shll
mov
pop
cmp
lcall
idiv
add
ljmp
mov
or
ljmp
cmc
adc
mov
dec
sub
pop
loopne
pop
cmp
ss
leave
sub
sbb
inc
dec
mov
inc
mov
jno
out
pop
ss
push
and
out
es
bound
xlat
pop
in
test
cld
out
adc
sub
push
inc
addr16
jmp
jp
lock
mov
add
jle
sarb
add
vcvtpd2dqy
xchg
cmp
cmp
sbb
mov
push
mov
jae
ja
push
iret
fs
inc
push
mov
mov
ja
and
mov
imul
scas
rcll
rclb
xchg
sbb
stos
sbb
pop
lods
and
dec
arpl
mov
push
mov
jle
aaa
cs
inc
sahf
jbe
ficoml
dec
xchg
pushf
jle
sbb
loope
pop
jg
jnp
mov
mov
mov
shll
test
add
out
pop
fsts
sar
jbe
insl
scas
jge
sbb
sbb
push
xchg
aaa
or
popf
or
mov
in
xchg
push
dec
movsl
cmp
mov
xor
stc
js
scas
ds
and
ret
sti
cmp
mov
pop
repz
mov
xor
pop
daa
imulb
cmp
xlat
xor
and
jb
ds
cmp
movsl
icebp
loop
and
cmp
lahf
push
lock
push
or
ja
push
and
xor
mov
mov
and
pop
push
lret
cs
hlt
sub
mov
or
or
lods
inc
out
loop
and
sub
jle
mov
pop
push
testb
repnz
test
pop
pop
iret
jge
jecxz
push
push
enter
outsb
adc
sahf
mov
add
sub
mov
cmp
mov
cmpsl
aas
adc
mov
cmp
pop
and
not
lcall
cltd
jmp
mov
pop
loop
mov
xor
cmc
mov
sub
mov
mov
loop
sbb
stc
jp
andl
add
jnp
cltd
lods
cmpsl
mov
sbb
aad
sbb
loope
sbb
add
lea
es
clc
mov
loopne
add
adc
in
push
imul
jne
repz
outsb
or
sbb
pop
loope
xlat
push
les
sub
jo
xchg
sbb
in
lods
adc
test
aad
jp
nop
add
pop
inc
adc
fstps
lret
jge
jecxz
pop
test
in
inc
sbb
hlt
mov
je
mov
inc
adc
xor
lcall
nop
jmp
cld
fstpt
dec
add
aas
inc
sub
jb
mov
dec
aas
pop
cmc
je
adc
rcll
loope
std
in
dec
cwtl
data16
jo
out
dec
mov
cs
lret
sbb
dec
mov
adc
lock
jge
das
cs
mov
enter
and
mov
es
mov
dec
insb
hlt
imul
sbb
cld
mov
inc
mov
and
push
fdivr
pop
push
ja
shlb
imul
jle
aam
fldl
mov
lahf
sbb
or
fldl
inc
mov
stos
andl
xor
stos
jno
jl
cmp
iret
jmp
lcall
add
popa
cltd
adc
cmpsb
mov
testl
cmp
mov
loop
pop
call
lret
test
add
xor
decl
cmpsl
fdivl
pop
add
xor
cmp
popa
mov
mov
cmc
fwait
outsl
ja
or
dec
inc
in
push
cmp
out
dec
sar
cmp
mov
shrl
add
cmp
jns
les
sbbl
out
jl
sub
dec
push
jbe
push
and
fwait
int3
mov
xchg
cmp
xchg
mov
or
aas
in
iret
sbb
popf
xchg
filds
pop
dec
jmp
jae
cmc
cmp
xchg
sti
fcomps
xor
mov
dec
js
sub
and
hlt
push
insb
adc
sahf
mov
ss
dec
push
stc
stos
push
adc
lret
iret
or
ret
mov
dec
insb
inc
pusha
xorb
push
mov
inc
pop
xchg
std
or
mov
cltd
inc
sbb
es
repz
xor
pop
scas
push
sub
push
stos
mov
rcrb
mov
lea
leave
jp
outsb
hlt
cmp
addr16
repnz
mov
loope
movl
add
leave
nop
int3
xlat
cmp
dec
rorl
push
imul
jo
pop
dec
scas
sbb
mov
and
adc
aas
jge
inc
lock
mov
jle
imul
cmp
adc
jl
into
dec
cmp
mov
fs
sub
cwtl
mov
push
in
jnp
xor
das
fwait
bound
or
dec
pop
pop
cmpsl
loopne
push
movsl
test
inc
sbb
sub
out
inc
sub
inc
outsb
outsl
in
adc
xchg
popl
pop
adcb
sbb
jge
ret
rcrl
push
stc
sahf
mov
pop
xchg
jg
jno
push
pop
frstor
xchg
cli
mov
add
fistps
fisubrl
xchg
test
in
cmpb
divl
clc
pop
cmp
push
gs
cmp
sarb
notl
arpl
xor
repz
insb
test
cmc
jnp
push
xor
ficoms
loop
lods
and
xor
pop
fs
mov
lea
mov
pop
mov
aam
xchg
adc
mov
cmp
ds
pop
mov
sbb
sbb
inc
pop
xchg
fstpt
cmc
sub
cmpsb
adc
xor
xchg
jae
aas
sbb
push
insb
cld
xlat
xchg
cli
cvtpi2ps
add
mov
pop
js
jmp
into
mov
aad
hlt
fs
fisubs
jge
mov
dec
fsts
pop
iret
jecxz
push
cmp
lea
gs
fcoml
pop
adc
repz
fildl
aad
test
rolb
jp
data16
aas
loope
aas
jb
mov
dec
mov
mov
loopne
xchg
fbld
aaa
std
mov
cwtl
adc
xorl
or
mov
mov
neg
lock
arpl
or
arpl
and
dec
pop
ret
es
add
mov
cmpsl
hlt
dec
mov
icebp
icebp
or
mov
add
jp
jl
in
mov
cmp
xchg
in
enter
das
jmp
push
les
imulb
ljmp
add
xchg
outsb
out
mov
loop
push
jne
add
jno
leave
add
mov
test
std
mov
cli
xchg
loop
lea
test
sti
bound
jo
test
aam
pop
pop
xchg
je
push
xor
pushf
add
dec
jg
ljmp
aaa
adc
mov
jb
adc
ljmp
xchg
adc
mov
loopne
not
push
dec
jne
add
jl
insl
or
cmp
mov
mov
jne
out
cwtl
mov
outsl
xor
in
je
sub
or
dec
arpl
ret
sub
inc
pop
jle
push
mov
jp
sti
int3
mov
dec
mov
jnp
cmp
in
in
std
pusha
cmp
fbld
js
or
xchg
movsb
xor
jae
mov
push
push
push
mov
mov
ss
loopne
fwait
or
and
addb
mov
fwait
scas
cltd
mov
inc
push
movups
iret
push
mov
inc
imul
inc
pop
add
pop
xchg
mov
sub
arpl
xchg
dec
or
sbb
mov
jecxz
stc
xchg
rol
xchg
mov
mov
loopne
xor
icebp
in
cmp
test
push
xchg
aad
insb
jge
pop
loop
jg
push
aaa
xchg
std
or
pop
dec
int3
ret
dec
inc
mov
push
dec
cltd
mov
jo
test
test
xor
test
inc
out
add
fwait
ret
lret
sbb
daa
hlt
std
enter
add
sub
jl
push
mov
ds
sbb
movsl
ljmp
and
pop
lds
mov
add
mov
sub
cltd
add
and
fcmovnbe
js
inc
imul
pop
xor
ja
or
mov
outsb
rcl
mov
mov
sub
bound
ret
subb
sbb
stos
pop
and
gs
shr
sub
sub
pop
pop
jle
lcall
fsubrl
sbb
or
push
test
cmpsb
push
sbb
cmpsl
jg
add
mov
movsl
fimuls
cmp
iret
adc
insb
test
out
notl
out
mov
rol
rorb
inc
lret
pop
push
cmc
inc
aam
xor
sub
push
mov
loop
ja
stc
call
inc
and
xor
xlat
data16
and
jne
adc
rcr
js
inc
cs
mov
lahf
cmp
ret
and
mov
sub
and
in
pop
mov
mov
enter
push
xor
adc
inc
inc
repz
icebp
dec
xchg
ss
inc
sbb
lea
call
mov
addb
mov
add
dec
inc
mov
arpl
bound
sbb
out
inc
dec
lcall
jo
xor
jmp
es
faddl
daa
call
pop
adc
push
mov
adc
add
pushf
xor
xor
test
das
lea
mov
aas
adcb
or
lahf
dec
sub
mov
add
not
xor
inc
mov
xchg
adc
dec
push
adc
fwait
lret
stc
push
mov
aas
sahf
and
pop
ret
in
mov
mov
ss
cs
lds
test
call
dec
bound
cmpsl
repz
mov
enter
adc
jo
inc
test
daa
imul
mov
pop
sbb
jae
in
mov
mov
inc
notl
pop
adc
iret
fdiv
clc
jnp
cmp
xchg
mov
int3
lods
cmp
ss
out
add
cmp
loope
roll
cltd
xor
pop
push
mov
std
adc
dec
hlt
mov
fdivl
and
shrl
movsl
push
test
and
push
aam
xchg
add
push
dec
daa
xor
lahf
aaa
or
push
lods
xor
cmc
adcb
loop
mov
imul
ja
and
dec
push
lcall
mov
es
cwtl
pop
in
jne
push
mov
out
ret
push
cwtl
bound
mov
in
cwtl
cmp
inc
cmpsl
std
sub
inc
xor
addr16
arpl
jp
push
lock
and
mov
push
xor
jle
pop
sub
and
sbb
roll
filds
mov
jmp
outsl
insl
shlb
mov
repz
mov
adc
push
jne
and
and
cltd
insb
cmp
imul
xor
xchg
adc
pop
or
sub
pop
jecxz
pop
inc
jbe
sub
xor
inc
pop
fucomip
or
test
std
inc
sbb
dec
xchg
mov
loop
pop
or
ficomps
add
int3
cmpl
push
xchg
pop
push
adc
jbe
pop
xchg
shrb
push
aaa
inc
cwtl
cmp
test
sbb
pop
int3
lods
add
mov
cmp
xor
popf
jo
pusha
aas
scas
fistl
and
mov
ret
movsb
jg
pop
inc
jge
jb
inc
aad
in
andb
pop
push
inc
daa
repz
cmp
dec
jno
or
repnz
into
popf
ds
lcall
push
xchg
push
or
xor
pop
call
push
pop
js
aam
pop
and
js
loope
out
scas
sub
insl
or
inc
mov
outsb
xor
mov
or
jge
test
rorl
add
fldcw
xchg
fmull
jmp
mov
pop
fistpl
fstps
push
in
sbb
adc
sbb
dec
or
lods
jg
pop
movsl
mov
daa
inc
mov
mov
dec
mov
cmp
dec
sub
notl
mov
loope
sub
pop
jle
mov
out
into
or
cmc
or
xor
inc
daa
outsl
xor
loop
jne
stc
lahf
mov
inc
add
int
xchg
lods
pop
rcr
mov
dec
jp
int
mov
cmp
sbb
sti
gs
lock
aaa
pop
roll
mov
fwait
dec
jne
std
fsubl
repz
out
ret
aas
sarl
ds
xlat
adc
xchg
sub
lods
inc
mov
in
loopne
jmp
cli
xchg
scas
and
aad
adc
dec
ja
dec
inc
bound
mov
sub
adc
fistps
pop
lea
lods
shr
gs
mov
fimull
push
pop
leave
lods
fcoml
dec
adc
pushf
fiadds
shrb
out
and
stos
fnstcw
pop
jmp
orl
or
sarl
insb
idivb
jnp
std
fldenv
push
mov
inc
jns
jle
mov
dec
mov
mov
mov
in
jo
mov
shrb
jb
mov
in
lods
push
and
xchg
ja
inc
aas
scas
es
nop
insl
jbe
in
dec
pop
dec
xchg
cmpsl
repnz
mov
lahf
lret
sar
cmp
icebp
enter
inc
xchg
out
inc
pop
jnp
adc
out
mov
pusha
aam
rorl
jle
push
dec
mov
jge
clc
mov
out
xchg
inc
xchg
push
popa
jg
int3
lods
test
sbb
pushw
xchg
pushf
xor
comiss
cmpsl
cltd
insb
xchg
test
dec
mov
add
scas
dec
pop
mov
test
sbb
xchg
cmp
sbb
xor
roll
int3
out
dec
testl
add
and
jmp
daa
pop
xor
sub
mov
pop
mov
xor
out
sub
repnz
subb
pop
mov
inc
stos
sub
mov
dec
dec
jnp
hlt
jne
sbb
out
in
out
mov
addr16
in
cmp
orl
jns
enter
rclb
or
leave
addr16
xchg
cltd
jp
aad
mov
sbb
cwtl
jnp
test
jle
insl
ja
sub
pusha
outsb
inc
lahf
fbld
xor
clc
into
fs
cmp
fnsave
pop
pop
push
popf
loopne
or
mov
aaa
stos
subl
insb
mov
pusha
fs
pop
push
dec
push
into
fcomp
adc
inc
inc
iret
mov
xchg
mov
inc
orl
mov
popa
xor
push
lcall
xchg
clc
daa
mov
xor
mov
cmp
fidivrs
dec
sbb
aam
add
test
into
xacquire
inc
hlt
sbb
leave
push
and
cmp
cmc
cltd
push
or
rolb
mov
and
cwtl
and
inc
push
adc
xlat
xor
sub
mov
sbb
shlb
jg
cmpsb
leave
jne
in
imul
loopne
repnz
xchg
adc
or
sarl
cmpsl
cmp
je
ds
stc
movsl
or
rcrl
mov
pop
in
popf
test
dec
out
mov
stos
push
sbbl
idivb
jo,pt
loope
shrl
ljmp
cwtl
xchg
movsl
adc
sbb
pop
movsl
out
nop
fwait
push
or
test
cmpsb
shrl
int
aas
xchg
sub
fisubrs
lcall
jno
mov
jg
sahf
dec
add
test
xlat
mov
jg
mov
mov
fisttpll
mov
out
mov
in
push
adc
mov
int3
hlt
xlat
cmp
add
not
leave
lret
icebp
sahf
shl
fisttps
dec
ror
in
push
mov
xor
cmp
ss
lcall
fs
int
data16
pop
lods
inc
dec
xor
sarl
cli
lods
mov
mov
dec
mov
incb
push
loopne
lods
rcrl
and
adc
add
sub
mov
test
xchg
mov
movlps
add
pop
sub
xchg
dec
mov
pop
push
ljmp
cli
or
icebp
mov
nop
outsl
mov
cmp
pusha
fnstenv
loope
jecxz
in
loop
sub
call
pop
xchg
sbb
adc
fcmovnbe
xor
mov
inc
mov
movsb
aas
mov
arpl
dec
sbb
outsb
je
lods
mov
idivb
std
subb
push
imul
mov
pop
cmpl
inc
lret
xlat
cmp
mov
push
pop
das
stos
aaa
les
movsb
add
ret
rorl
xchg
push
push
dec
pop
call
xor
sbb
icebp
jbe
push
cld
data16
insl
or
mov
pop
lcall
sub
jle
aam
and
mov
sti
sbb
fstpl
jle
xchg
cmp
ljmp
jno
adc
mov
sub
cmp
push
push
mov
xor
cltd
mov
pop
cmpsl
mov
add
dec
ret
test
or
xchg
mov
rcr
divl
xchg
jmp
xor
sbb
mov
add
add
sbb
sbb
push
xor
adc
xchg
andb
mov
loope
push
dec
dec
sbb
inc
inc
loope
or
inc
icebp
mov
subps
inc
push
mov
mov
push
in
clc
jns
fbstp
adcl
xchg
aaa
sahf
insb
addr16
inc
xchg
jp
push
pop
mov
cmp
or
jle
jbe
in
fwait
shll
pop
test
adcl
dec
jmp
add
xchg
mov
sahf
fidivrs
popf
pop
int
mov
repz
add
and
insb
push
cmp
imul
and
push
adc
cmp
iret
test
ffreep
in
pop
push
cmp
mov
inc
negl
push
sbb
cltd
xchg
dec
insb
mov
mov
pop
push
rcr
adc
lds
scas
rol
cmpl
cwtl
and
push
sbb
data16
jbe
and
imul
or
mov
inc
in
sbb
dec
lea
push
out
imul
fldt
cmp
sub
xchg
les
inc
fwait
jno
cmpsb
dec
mov
in
push
inc
fs
daa
icebp
xor
mov
jo
bound
or
xchg
js
xor
movsl
adc
std
and
test
lahf
test
jo
test
sbb
xor
adc
xor
xchg
lods
push
pop
mov
sbb
mov
cmp
sub
bound
adc
repz
test
mov
pusha
loope
out
xor
mov
testl
cmc
inc
mov
pop
xchg
fs
loopne
bound
popf
fsubrl
push
sbb
mov
subb
mov
mov
enter
stc
mov
adc
fistpll
sahf
sub
fdivrs
pop
sbb
xor
mov
jle
pop
repz
or
jno
into
iret
ret
and
xchg
mov
push
outsl
icebp
std
ss
or
stc
or
sub
add
adc
leave
lods
sub
cli
out
mov
cli
loopne
mov
cmp
outsb
sti
ret
mov
gs
hlt
loopne
dec
insl
pop
adc
inc
cmp
imul
jb
repz
xor
xlat
sbb
ds
hlt
xlat
xchg
sti
sub
mov
ret
cltd
lods
jmp
ss
je,pn
jns
cmp
inc
nop
dec
rorl
ret
insb
nop
test
jecxz
lock
in
jbe
out
mov
pop
fcomps
fstl
sti
fwait
xor
xor
pusha
fildl
mov
inc
lahf
cltd
cwtl
inc
rcl
cmpsb
aas
pop
es
pop
lea
push
sahf
je
cmpsb
std
rcrl
jo
idivb
push
out
cwtl
or
sub
mov
adcl
xchg
lret
inc
rorb
call
jne
lock
aas
es
mov
sahf
mov
pop
clc
mov
sub
ret
bound
es
and
insl
inc
scas
mov
push
pop
pop
cmpsl
lock
mov
dec
sbb
jge
dec
sahf
sub
cwtl
cmp
pop
mov
lds
leave
pop
pop
aam
ret
in
mov
xor
inc
je
clc
sub
jle
ret
ljmp
sub
jle
fldcw
sub
sbb
loope
push
paddsw
mov
test
mov
push
push
leave
dec
sub
jae
sbb
js
xor
adc
fwait
lods
cmp
dec
add
mov
out
xor
adc
or
and
mov
mov
icebp
std
int3
pop
pushf
push
pushf
ja
sbb
inc
fdivrs
sbb
inc
jne
jne
rorb
movsb
lods
stos
out
pusha
mov
xchg
jns
decl
pop
jl
andl
aam
into
dec
add
xor
mov
jp
jg
mov
orl
sbb
scas
jle
jae
in
dec
dec
pusha
movsb
jg
fbld
aad
jmp
rcrb
jae,pt
lretw
mov
mov
xor
jg
addr16
jns
mov
scas
and
jmp
adc
pop
mov
pop
mov
cmp
arpl
xor
or
sbb
addb
int3
fimull
aam
sbb
push
xchg
pop
cltd
std
or
test
sub
cs
jl
int
xor
add
jbe
pop
add
sbb
dec
aaa
xor
or
cmp
int3
outsb
out
dec
incb
nop
push
fisubrl
int
sti
gs
js
jl
mov
movsb
and
lock
sub
jae
aaa
xchg
daa
lock
lods
cmp
xlat
cmpsl
jno
mov
daa
push
dec
and
movsl
sbb
dec
and
inc
lahf
enter
jmp
sti
test
jecxz
outsb
xor
cmc
adc
pop
pop
add
js
idivb
push
jnp
loope
aaa
movsb
sub
popa
fsubrs
adc
pop
outsb
pop
and
adc
into
xchg
mov
mov
or
jbe
ret
add
pop
jns
les
xor
pop
es
fsub
xchg
pop
pop
or
lcall
or
sbb
mov
sahf
mov
mov
inc
jno
jg
jns
mov
out
mov
pop
mov
pop
pop
adc
sahf
and
push
dec
gs
jns
mov
lret
xchg
shll
sbb
pop
jnp
mov
xor
pop
jg
xor
ljmp
shlb
and
std
add
in
adc
popa
lods
adc
cmp
iret
lods
xor
adc
shll
icebp
jnp
push
and
dec
or
pop
loopne
cli
mov
adc
add
scas
cld
adc
aam
repz
dec
xchg
inc
rcl
sbb
jns
sub
rol
clc
sub
ja
mov
cs
jmp
cli
pop
xlat
adcb
cs
nop
and
xchg
jne
fwait
loop
fldenv
mov
call
sbb
push
and
pop
loop
dec
adc
out
pushf
mov
les
test
in
pop
nop
aas
cld
lret
push
xchg
dec
or
push
repnz
push
inc
testb
adc
into
mov
cwtl
enter
popa
fs
mov
inc
subl
cs
lret
pop
hlt
mov
dec
enter
aam
push
pop
pop
mov
repz
cld
and
xchg
bound
dec
fisubrl
addr16
mov
and
xchg
cld
mov
outsl
mov
lahf
jae
mov
fcomps
in
rcl
aam
mov
or
stos
clc
adc
dec
or
pop
dec
adc
cwtl
imul
adc
pop
sub
mov
outsl
lds
shrb
test
sub
or
inc
test
lahf
inc
xchg
fdiv
roll
sahf
out
faddl
fwait
push
pusha
sbb
aam
dec
inc
int3
push
xor
mov
pop
js
xor
andb
rep
mov
push
cwtl
js
mov
pop
dec
xor
cli
inc
outsl
mov
push
mov
lahf
dec
and
or
ljmp
jecxz
or
jns
les
call
xchg
xor
push
insl
xor
or
cmp
arpl
mov
lret
jle
fs
mov
jb
std
xor
jmp
fwait
movsb
lock
jl
push
and
ds
push
std
int3
mov
jno
xchg
stos
fcmovb
xor
stos
fs
insb
in
fsubrs
add
sahf
push
mov
outsl
jnp
inc
lret
add
and
add
inc
mov
popa
addb
lea
xchg
jecxz
inc
pop
mov
dec
xchg
std
pusha
pop
sbb
sar
pop
enter
sub
imul
ret
ds
outsb
or
cld
ja
push
adc
and
mov
xchg
sti
sbb
mov
orl
adc
int3
pop
xchg
insl
inc
scas
push
mov
mov
cmpsl
scas
push
jne
and
sbbl
stos
push
faddl
and
in
push
mov
pop
daa
out
out
cmp
call
xor
cmp
add
inc
ja
movsl
and
rcrl
rclb
or
scas
push
mov
movsb
sbb
hlt
insl
lret
pop
jg
add
aad
pop
and
push
mov
loope
inc
xor
pop
pop
sub
jbe
outsb
rcr
adc
test
addr16
leave
adc
sbb
fidivrl
push
or
das
sub
in
pop
xlat
mov
mov
fdivrl
mov
sahf
xor
test
push
andb
jg
loope
mov
cmp
mov
xchg
adcb
out
lret
cmpsl
cltd
cmp
xor
int3
notl
pop
and
lods
shll
mov
inc
adc
test
ja
cmc
and
test
scas
cltd
ljmp
and
fs
imul
lods
clc
adc
mov
sub
cli
inc
pop
jb
out
push
cmp
leave
push
sti
and
in
js
gs
addr16
loopne
mov
dec
adc
not
imul
mov
repz
xchg
add
xlat
dec
cmp
pop
sub
in
cltd
mov
fldt
cmp
add
repz
sub
cmpsl
pop
pop
jecxz
aam
jmp
xor
push
clc
scas
xor
pop
xchg
inc
mov
pushf
mov
pop
jle
pop
jp
push
inc
lods
aam
inc
or
aas
fwait
jae
jb
in
dec
orb
mov
in
loope
inc
mov
push
cwtl
orl
and
or
addl
aad
and
inc
mov
mov
and
inc
sahf
mov
mov
icebp
adc
ret
sbbb
es
sbb
or
cmpsl
out
movsl
mov
sti
mov
out
mov
lods
addl
sub
push
sti
fcompl
testl
fcmovbe
xchg
add
mov
or
push
push
neg
xchg
cli
fdivr
mov
cmp
ljmp
mov
stos
cli
ljmp
mov
xchg
outsl
bts
add
dec
sbbl
fdivs
xchg
mov
testl
xchg
loop
sbb
add
fwait
or
add
out
fwait
adc
bound
ret
scas
dec
xor
aaa
or
ss
in
aas
jge
pop
adc
ja
push
stos
dec
daa
mov
push
fidivrl
loopne
and
pop
sbb
or
out
push
inc
xchg
bound
sub
jge
inc
add
out
add
insb
pop
lods
or
push
mov
jnp
jp
cli
aaa
mov
jne
mov
jns
cmpb
loope
inc
into
popf
pusha
fimull
or
fiadds
cwtl
jmp
data16
push
out
pop
popf
jl
sub
mov
cmp
ror
insb
dec
dec
xchg
imul
sbb
ljmp
iret
mov
adc
pop
mulb
inc
arpl
add
or
psrld
xchg
mov
cmpl
loopne
inc
pop
divl
aaa
sbb
adc
imul
leave
mov
inc
ficoms
jbe
jbe
inc
loopne
dec
jge
sbb
and
or
add
xchg
inc
stc
jl
fmull
push
mov
adc
jo
sbb
ss
xchg
and
icebp
movsb
ss
jne
dec
loope
cmpsb
aad
jl
add
xor
daa
out
pop
mov
dec
lods
push
jno
lea
jge
pop
cmp
cltd
lods
movsl
sub
and
fldenv
movsl
xor
push
jns
shlb
xchg
pop
cmpsb
push
js
inc
jecxz
pusha
gs
push
push
adc
out
imul
rcrb
and
pusha
adc
test
cltd
ficompl
sbb
mov
in
or
lods
mov
push
push
xchg
or
sub
sbb
push
jmp
lcall
jns
push
sbb
movsb
clc
sahf
aam
mov
jl
pop
jg
dec
data16
mov
out
mov
jno
adc
jne
cmp
out
pop
adc
iret
cmp
push
cwtl
decl
addb
mov
pop
xor
insl
and
out
mov
xor
xlat
cmp
and
mov
pushw
push
test
fistps
mov
sub
cli
jns
into
xor
inc
jns
shl
xor
adc
push
gs
mov
loopne
xchg
es
outsb
mov
je
rol
xchg
xchg
push
repz
fcoml
xchg
enter
adc
ds
push
xlat
dec
out
sub
sub
mov
add
push
jmp
into
cs
fistpl
fisttpl
dec
push
js
inc
sarl
les
lods
sbb
out
lea
push
call
push
pop
dec
in
add
add
pushf
xor
push
mov
sbb
mov
inc
and
jnp
cld
js
dec
idivl
mov
or
loop
mov
rcrb
and
xlat
and
lret
xchg
xor
xchg
out
cmc
mov
jno,pn
jle
xchg
das
es
mov
xorb
ret
es
inc
daa
insl
stc
or
cmpsl
in
test
out
shlb
push
mov
stc
lods
punpckhdq
push
jo
rorb
xlat
dec
sub
mov
inc
push
sbb
ljmp
testl
popa
repnz
lods
mov
daa
std
out
push
adc
xchg
call
push
jb
mov
add
and
jg
inc
test
push
or
dec
pop
jmp
xchg
push
shlb
pop
inc
movsb
xor
cmpsb
fisubrl
or
incl
movsb
das
xor
push
mov
cmc
mov
xchg
mov
dec
clc
mov
int
ljmp
les
inc
popf
pop
xchg
or
xchg
leave
mov
sbb
pop
jns
rcl
out
mov
push
out
std
sbb
bound
imul
adc
mul
push
or
or
pushfw
addr16
aas
fdivrl
inc
sbb
mov
jno
jle
and
pusha
jne
jae
std
mov
xchg
mov
shll
xchg
xor
or
stos
add
mov
scas
jp
out
sbbb
sub
insb
mov
popf
jae
dec
ljmp
dec
rep
iret
add
pop
sub
fsubrs
arpl
adc
inc
jo
cmp
mov
fisubl
in
sbb
inc
daa
pop
es
insb
lds
aam
xor
mov
repnz
push
sbb
xchg
pusha
imul
insb
cmp
dec
in
sbb
movsl
or
cmpsb
movb
dec
popf
int3
das
inc
mov
push
or
xor
sub
pop
scas
adc
and
movsb
sarl
inc
xlat
jecxz
cmpsb
pop
mov
enter
daa
in
lods
push
andb
mov
jg
cmp
out
mov
test
cmp
mov
js
fsubrs
inc
xchg
mov
jp
mov
js
dec
mov
push
rcll
std
les
sub
out
mov
adc
pop
leave
add
out
mov
dec
add
shlb
and
mov
sbb
sub
lret
pop
aad
lret
sarb
add
adc
push
or
jns
aam
xchg
mov
jg
mov
xchg
mov
movsl
mov
in
test
sbb
mov
testl
outsl
sub
mov
into
pop
sti
aaa
cmc
mov
mov
outsl
insl
inc
loop
stos
add
jmp
imulb
add
movsb
cwtd
pop
jle
or
mov
mov
cli
lods
out
add
xchg
lret
rcll
cmp
xor
lods
gs
sbb
pop
in
cmpsb
adc
inc
xor
xchg
icebp
fpatan
xchg
pushf
push
xchg
mov
mov
aaa
jl
cmp
xchg
push
xlat
mov
sub
lds
outsl
sti
inc
jmp
fiadds
add
aad
into
out
nop
mov
pop
dec
mov
xlat
inc
aam
mov
dec
add
push
jecxz
enter
sub
pop
call
aam
cvtps2pd
inc
cmpsb
adc
aas
pushf
loopne
inc
fstpt
fiadds
inc
sbb
jb
inc
decl
rol
je
iret
sbb
push
jns
test
xor
cwtl
stc
jne
mov
sub
mov
pop
repz
cli
lret
add
jle
test
das
add
mov
and
dec
add
sahf
push
shll
sbb
jo
loopne
or
cmpsl
in
adc
mov
test
sbb
push
sbb
aam
mov
js
mov
pop
xor
inc
pop
sub
xchg
pushl
fdivl
jge
loopne
sub
sbb
xchg
mov
xor
or
test
sub
stos
fsubrs
mov
xchg
inc
test
push
dec
cmp
add
sub
mov
iret
mov
adc
lds
xchg
xchg
cmp
mov
fwait
imul
rolb
and
xchg
fnstenv
inc
sub
pop
shlb
pushf
xchg
or
or
mov
mov
mov
loopne
out
mov
mov
or
cmp
mov
xchg
nop
jne
cmc
out
adc
or
fdiv
jp
ret
cmp
in
out
mov
out
orl
cmp
jbe
push
dec
add
xchg
mov
clc
jg
call
jle
jle
lock
in
in
pusha
adc
jne
sbb
cs
jbe
sbb
ret
xchg
cld
aas
push
jae
push
cmp
insl
lods
jo
lret
mov
cs
stos
xor
out
add
and
jle
push
js
mov
iret
pusha
cs
pop
mov
int3
push
ret
std
packsswb
iret
mov
or
add
mov
ficoml
xchg
add
or
ss
pop
push
jle
ficoms
inc
sti
jmp
mov
js
push
test
rcl
push
incl
jbe
add
negb
push
fcoml
or
jmp
add
add
int3
sbb
dec
mov
addb
jp
xchg
and
mov
xchg
sub
cmpsb
fstpt
enter
daa
in
aad
cmp
and
cmp
jo
ds
mov
aad
xlat
or
lahf
inc
mov
clc
test
imul
adc
in
cmp
cmpl
mov
ficoms
push
add
loope
cmp
sub
aas
dec
sub
rcrb
ljmp
sarb
scas
out
cwtl
dec
push
addb
in
sbb
xchg
add
dec
lret
and
xor
adc
int
mov
mov
push
fidivrl
lcall
ss
aam
sbb
insb
pop
test
lret
mov
mov
dec
jg
das
ss
addr16
mov
sub
adc
je
ss
outsb
sub
fsubs
call
lret
fadd
jg
adc
mov
into
ds
cmc
jp
js
ds
in
outsl
dec
and
loop
adc
stc
mov
cmp
stos
pop
push
lods
lods
faddl
mov
mov
inc
xor
jp
mov
jmp
push
jb
gs
or
fldl
adc
imul
mov
mov
cmp
xchg
int
push
sub
mov
mov
fisubl
jmp
mov
arpl
aad
lret
seto
insl
mov
fnstcw
push
enter
arpl
out
hlt
icebp
jne
bnd
call
push
jne
pop
scas
push
mov
pushf
mov
xor
arpl
adc
sbb
pop
pushf
sti
aas
js
loope
mov
mov
je
imul
push
mov
jno
mov
xorb
cmc
addl
dec
pop
mov
pop
mov
sahf
inc
lock
and
in
adc
mov
xchg
popa
dec
ret
sub
hlt
daa
insl
mov
dec
ljmp
push
sbb
and
and
mov
push
push
jp
mov
fisubrl
pushf
ss
fdivl
clc
jnp
push
lahf
mov
sub
xchg
std
and
ljmp
pop
lods
xchg
test
out
out
sbb
lock
lea
cmp
sub
bswap
dec
test
or
xchg
cltd
in
add
mov
adc
aam
test
mov
cwtl
sbb
dec
mov
fwait
cwtl
shll
add
inc
mov
ljmp
sub
xor
dec
daa
xchg
pop
sbb
mov
mov
mov
inc
jnp
ja
push
sbb
push
out
lret
push
mov
mov
mov
jge
imul
mov
cmp
jns
aas
sbb
adc
fildl
pop
jae
sub
sbb
imul
imull
lock
mov
xchg
jle
mov
in
test
pusha
stos
insb
rcr
sbb
xchg
dec
mov
jmp
sbb
jae
jnp
push
xor
dec
popf
icebp
or
enter
shrb
push
aad
insb
nop
lret
mov
pop
xor
adc
sub
mov
push
call
inc
into
jbe
arpl
rcl
inc
jbe
and
adcb
fiaddl
mov
ficomps
jmp
test
fidivs
lret
shlb
mov
lret
or
leave
and
sbb
sub
mov
jge
xchg
clc
sbb
sbb
aaa
cmp
or
add
xlat
push
int3
add
call
xchg
xor
loop
scas
scas
rcr
lea
pop
lea
movsb
xlat
insl
das
inc
cmc
mov
cmpsb
pop
mov
in
mov
daa
jmp
fidivrs
out
mov
jl
xor
cmp
mov
movsl
movsl
jmp
jb
pop
lahf
arpl
or
test
ficompl
shll
loopne
mov
pop
sbb
ja
sbb
in
loope
xlat
subl
or
mov
aaa
mov
xor
push
rclb
dec
popf
adcb
dec
add
sbb
and
add
mov
pop
std
jge
aas
pop
addb
xchg
lods
lcall
mov
imul
mov
cmc
sahf
mov
push
js
int
imul
mov
mov
pop
lret
rcrl
mov
scas
sub
and
fdiv
or
test
push
mov
loopne
sub
gs
into
and
cmc
inc
pop
add
cltd
jmp
outsl
sub
jp
lahf
mov
stc
push
out
fs
cltd
add
cmp
data16
idivb
xchg
xchg
pop
mov
dec
sbb
adc
xor
aaa
cmp
mov
sti
fldl
jns
xchg
gs
pop
inc
loopne
cltd
test
adc
loop
imul
call
sbbl
or
bound
pusha
sbb
in
inc
movsb
inc
jmp
dec
mov
movb
nop
insb
mov
dec
outsl
in
mov
fnstenv
repnz
jecxz
int3
push
imull
jl
pop
dec
inc
call
rclb
outsl
adc
mov
fistpl
xchg
push
push
faddp
inc
leave
cli
lret
xor
jb
push
dec
pop
out
je
pop
inc
shl
adc
push
std
adc
pop
cwtl
outsl
in
mov
mov
jbe
sbbl
sub
adc
push
mov
ret
or
mov
movsl
cmp
sbb
xor
and
insl
scas
imul
ljmp
icebp
push
jb
cld
xchg
movsl
test
bound
and
mov
dec
and
xchg
aam
ja
mov
aam
push
bound
scas
clc
mov
ljmp
lods
add
loopne
mov
sub
mov
xchg
aam
and
sub
daa
dec
flds
pop
fcoms
cltd
and
bound
call
jmp
xchg
pop
mov
xchg
enter
or
cmp
aam
inc
loop
fwait
jo
push
and
add
pop
xchg
pop
fiadds
or
outsl
xor
push
enter
sbb
fldt
jecxz
movsl
mov
insb
incb
repz
lock
add
xchg
fsubrl
and
loopne
out
lcall
jns
cmp
andb
loopne
cmpsl
sub
adc
test
mov
xor
mov
xor
data16
arpl
push
fistps
push
xchg
sbb
lods
jmp
xchg
dec
push
jae
in
push
repz
cmp
mov
aad
stos
sbb
lahf
insb
sti
repnz
mov
adc
fimull
iret
push
das
add
adc
pop
rolb
jbe
cli
pop
sub
adc
or
sti
jae
inc
xchg
hlt
cmpsb
fidivrl
cmp
mov
sub
push
ss
or
out
andl
xchg
repnz
push
pop
leave
xchg
repz
hlt
jae
sbb
daa
loope
jae
xor
punpcklwd
int
out
aaa
cld
sahf
adc
adc
sbb
push
or
dec
cwtl
cli
mov
sub
sbb
jo
dec
jecxz
mov
lcall
mov
pop
inc
test
shr
mov
or
ljmp
jno
dec
loope
sub
adc
inc
cmp
ds
test
jae
or
lods
jge
icebp
mov
sub
dec
xor
aam
pop
inc
out
and
fdivs
push
jnp
loope
xchg
shrl
cmpsb
int
scas
in
outsb
mov
cmp
lock
push
push
ja
sub
rolb
cmp
sub
push
sbb
push
sbb
inc
int
cmp
sub
flds
lcall
ret
fcoml
cmpsb
out
fisttps
mov
pusha
flds
sub
and
and
mov
aaa
cmp
shll
ss
push
fcomp
jb
test
mov
shrl
fmull
aam
sub
cmc
or
into
xor
pop
pop
outsl
or
dec
loop
cmp
push
xor
rcrb
pop
aad
and
lods
jnp
ret
sub
leave
pop
sar
inc
push
test
cmp
andl
pushf
faddl
adc
adc
mov
xchg
push
adc
pop
test
adc
add
repz
aam
test
fisttpl
mov
mov
mov
outsl
jmp
cmpsb
xchg
cs
push
aad
repnz
nop
inc
sbb
inc
or
push
or
fisubrs
jecxz
mov
cli
aad
rolb
push
sbb
xchg
hlt
adc
pushf
loope
cmp
dec
inc
test
lret
aas
inc
push
ds
inc
fidivrs
mov
mov
dec
into
dec
dec
shr
adc
imul
xchg
sar
mov
pop
shlb
or
lds
out
xchg
lret
dec
insl
push
sbb
popf
mov
das
mov
pop
pop
mov
test
aam
dec
movsb
adc
mov
movsl
dec
xor
cmpl
mov
cmpsl
fidivrs
leave
imull
mov
xchg
dec
xlat
rcrb
push
sub
lea
and
pusha
sbb
leave
mov
xchg
jnp
fsubrp
packssdw
dec
arpl
in
stos
movsl
ret
addr16
loope
xchg
sbb
push
fiadds
jbe
jge
cltd
pop
mov
test
mov
mov
sbb
adc
dec
shrl
xchg
lret
cmp
and
mov
jne
not
addr16
xor
imul
jge
add
cmp
pop
xlat
xor
scas
das
xchg
clc
popa
mov
mov
mov
jb
dec
out
lcall
and
mov
and
jne
test
cmp
jns
test
jl
dec
jns
aam
in
mov
orl
cli
out
scas
and
out
cs
or
outsb
add
jp
jp
mov
dec
clc
mov
in
inc
jle
xadd
push
mov
fistpll
mov
out
mov
jmp
pop
iret
xchg
jae
xchg
inc
push
mov
arpl
clc
cli
dec
push
jmp
ja
mov
and
inc
imul
adcl
stos
adc
mov
ret
add
or
sbb
arpl
mov
lret
cmp
out
inc
adc
fisubrl
movsb
xchg
pop
lahf
xchg
sbb
loop
push
fdivrp
popf
pushf
lds
pop
out
test
bnd
adc
push
movl
jbe
mov
mov
sbb
xor
add
add
lock
int3
and
sqrtps
cwtl
lret
lock
xchg
mov
xchg
cmp
lock
adc
imul
jge
enter
daa
jmp
or
iret
jl
cmp
cmp
les
nop
je
dec
lds
lahf
mov
fidivs
add
std
dec
xor
ljmp
or
sbb
fwait
pop
inc
push
pop
loope
jns
sub
xchg
inc
sub
push
notb
lret
aam
mov
roll
testl
and
fninit
int
pop
dec
sub
sahf
sub
cli
andb
push
fadd
int3
pop
sbb
int3
sbbl
mov
add
jg
mov
and
jno
les
and
ss
dec
mov
fcoms
popf
lret
xchg
in
inc
mov
cmp
int3
cmc
iret
mov
xor
and
int3
push
loop
mov
lds
dec
lock
push
mov
subl
xchg
xchg
out
repnz
cli
js
sub
lock
cmp
and
sti
cmp
inc
mov
sub
lock
or
cmc
adc
unpckhps
mov
adc
mov
repz
xchg
xchg
adc
sbb
push
or
xlat
mov
in
mov
sbb
and
aad
sbb
and
out
dec
sub
jae
fldenv
insb
jmp
loopne
std
cmc
push
lea
mov
rcrb
mov
dec
pushf
mov
je
dec
lods
mov
inc
stos
popf
idivb
push
mov
xchg
dec
dec
mov
rcll
out
scas
std
pop
mov
cwtl
in
jno
lcall
or
pop
mov
mov
adc
mov
xor
inc
push
adc
adc
sarl
xor
ret
in
insl
jl
les
pop
cmpsl
call
mov
icebp
add
jge
mov
test
sub
cmc
fsubrs
pop
mov
adc
add
sub
test
int3
push
call
in
out
add
mov
ljmp
ja
mov
mov
inc
nop
mov
bound
mov
add
fcompl
int3
lods
inc
mov
push
mov
jb
and
aam
shr
loope
pop
xchg
das
insb
fwait
and
imul
pop
ja
add
test
xor
imul
xchg
inc
imul
sub
pop
je
scas
ja
imul
inc
nop
xchg
mov
mov
inc
dec
pop
hlt
int3
jne
pop
daa
mov
out
out
pop
orb
mov
mov
mov
sub
or
jo
xchg
dec
add
pop
mov
mov
xchg
pop
fstpt
lods
fsub
jno
pop
pusha
jl
cmp
cwtl
push
xchg
ret
jmp
sub
xchg
push
jns
negl
xor
and
mov
pop
and
rep
sarl
mov
xchg
aad
adc
aas
mov
test
leave
loop
out
fyl2xp1
arpl
jo
inc
jg
popf
or
icebp
in
ss
nop
inc
and
and
pop
xchg
pop
daa
dec
sbb
push
push
pop
adc
ficomps
call
mov
les
hlt
or
and
sbb
jbe
repnz
jge
mov
sbb
push
aaa
jp
insb
or
push
add
push
aam
jbe
xchg
push
repnz
jo
pop
mov
adc
ret
iret
mov
js
roll
push
cmpsb
out
sbb
outsl
out
enter
daa
call
or
jg
pop
cmp
push
movsl
push
imul
inc
sarl
scas
push
push
xchg
ss
test
cmp
xor
push
dec
nop
sti
pop
nop
or
mov
pusha
sub
pop
loope
xorb
and
mov
inc
outsb
jbe
adc
cmpsb
or
arpl
sbb
loopne
add
jl
and
mov
int
popa
movsl
sub
call
mov
fsubrl
sbb
push
addl
insb
es
sub
mov
into
push
mov
xchg
pop
adc
dec
ss
fdivrl
push
sbb
testl
cwtl
rcr
mov
or
jb
cmc
xchg
xchg
fnsave
stos
jne
outsl
enter
pop
ret
jl
pop
fs
je
out
pop
data16
imul
stos
mov
xor
scas
fwait
cmp
cltd
pop
sti
ljmp
gs
fsub
dec
dec
xchg
sbb
lods
hlt
insb
imul
push
jl
pop
enter
sub
cmp
dec
xlat
leave
cmpsl
icebp
sub
scas
icebp
in
xchg
jmp
test
cmp
mov
nop
std
jns
dec
mov
mov
pop
add
hlt
push
inc
jecxz
push
push
movb
sti
lea
xchg
dec
pop
pop
pop
jp
xor
or
pushf
aaa
inc
adc
pop
out
xorb
icebp
xchg
inc
lds
aas
hlt
jg
jb
xor
rcl
je
and
shl
jle
negb
xchg
jo
push
push
dec
mov
lret
out
andl
xchg
lret
sub
nop
pop
mov
sub
mov
pusha
les
mov
lret
and
rdmsr
ret
imul
insl
arpl
push
cmpsl
out
add
faddl
sahf
mov
lret
jb
and
nop
out
lods
pop
rclb
rolb
jbe
sub
mov
and
mov
ja
push
stos
inc
push
frstor
test
xchg
stc
ss
popa
jl
mov
stos
subl
xchg
test
stos
inc
cmove
add
mov
xlat
and
mov
and
dec
enter
in
sbb
xchg
xchg
out
aas
add
imul
xchg
add
lods
mov
hlt
xor
pop
pusha
or
pop
adc
or
daa
mov
das
sahf
ja
in
dec
int3
xlat
int
daa
mov
or
loop
mov
aaa
test
out
inc
jne
imul
mov
out
aaa
jo
bound
cli
dec
in
subl
push
mov
push
addr16
stos
mov
mov
cmp
mov
inc
aas
push
jle
cmp
jle
pop
pop
mov
mov
int3
xchg
xchg
jp
jmp
repz
push
cmp
sub
outsb
sbb
stos
jb
mov
insb
cmp
xor
lds
mov
xchg
sub
imul
cmp
scas
ret
ds
ja
cld
inc
cli
mov
testl
rcr
push
fcmovbe
push
ficoms
lea
pop
inc
fnstenv
inc
dec
mov
mov
add
mov
pop
push
leave
cld
pop
in
push
cli
dec
push
mov
or
jge
xlat
arpl
dec
cld
aaa
cmp
or
jmp
lcall
in
rorb
aad
add
jo
add
scas
dec
jl
and
fisttpll
inc
xor
adc
push
xor
daa
out
cmp
mov
iret
jno
pop
jl
mov
ds
cmp
and
pusha
xor
push
dec
test
push
sub
or
fistpl
in
cmp
xchg
and
push
jp
loope
stos
test
sub
shrl
aam
adc
adcl
andb
sbb
inc
add
lcall
and
mov
sub
lret
pushf
jne
imul
pop
xchg
add
sahf
dec
and
test
push
sarl
scas
and
mov
lret
push
cmp
clc
jbe
lods
leave
inc
cmp
or
div
or
jae
jb
fmull
sbb
into
lods
inc
cmc
pop
fiaddl
xor
test
loop
das
mov
xor
adc
and
stos
and
lods
xor
mov
stos
mov
xor
loop
sti
cltd
mov
jb
jl
loopne
in
cld
pop
inc
popa
jmp
jg
loope
xchg
rorb
outsl
scas
outsb
xchg
sbb
leave
test
mov
mov
sub
jno
in
mov
pop
jmp
push
xchg
cs
sbb
cltd
ficoms
jmp
xchg
inc
inc
daa
into
fsts
mov
movb
aas
cmc
cmpb
into
xor
dec
adc
rcrl
out
xchg
pop
xchg
dec
addb
jo
loopne
sarl
xchg
dec
ret
xor
cmp
inc
je
fs
shll
jg
negb
imul
add
mov
test
enter
sbb
and
pushf
loop
mov
add
mov
mov
lock
sahf
pop
das
aas
mov
mov
and
enter
sub
insl
dec
lsl
mov
push
mov
mov
sub
aas
cmpsb
cmpl
fdivrp
pop
mov
out
pop
xchg
rcrl
sub
pop
aam
sub
mov
loopne
push
outsb
or
push
clc
jp
es
cmp
ljmp
lods
lods
repnz
out
or
mov
push
outsl
xchg
bt
add
push
cltd
add
cmpsl
mov
and
pop
dec
das
xor
xchg
xchg
out
lahf
sbb
shll
pop
in
int3
and
sbb
pop
add
int3
dec
lcall
sbb
ss
mov
dec
cmp
dec
xor
mov
ljmp
dec
mov
notb
add
enter
sub
loop
mov
jns,pt
push
bound
jae
adc
mov
in
xchg
sub
add
mov
jp
add
or
sti
mov
icebp
in
jle
ret
inc
in
xchg
out
xchg
push
mov
jae
xor
push
pushl
es
mov
sbb
test
cltd
stos
in
mov
insb
cmpsl
fdivrl
lea
