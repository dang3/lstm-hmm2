and
jl
inc
add
or
enter
push
mov
outsl
decl
jge
add
rolb
jg
push
or
add
and
ret
nop
in
or
nop
das
mov
nop
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
loopne
fs
inc
aam
testl
push
push
scas
mov
lea
mov
fsubrp
iret
push
push
add
jne
adc
test
je
or
mov
cs
jmp
add
leave
mov
lea
ljmp
mov
test
jne
call
sbb
cmpxchg
loope
jnp
add
mov
or
pop
pop
push
mov
mov
mov
repnz
mov
mov
ret
nop
outsl
add
sub
mov
ja,pt
jmp
or
dec
hlt
add
test
or
inc
sbb
push
dec
test
jb
insl
sti
in
mov
sbb
add
rorb
add
repz
mov
and
xor
mov
sbb
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
mov
cmp
jmp
pop
jbe
adc
add
das
mov
mov
lock
sbb
mov
faddl
gs
mov
insb
xor
cs
insb
lcall
mov
mov
fucomip
sbb
fistl
clc
mov
aas
cmp
mov
addl
sub
add
les
inc
or
test
jmp
mov
ret
addr16
out
insl
enter
mov
cmp
jp
test
jno
inc
add
mov
cmp
sbb
shl
std
incl
inc
mov
adc
dec
mov
not
fs
push
sar
out
decb
mov
ror
push
jmp
mov
mov
shl
xor
not
cmp
jnp
bound
mov
or
mov
sar
xor
jle
jge
mov
lea
orl
dec
lcall
push
pop
cmp
jne
jnp
mov
and
mov
mov
iret
not
shrd
mov
sbb
cmc
neg
and
xchg
dec
std
fistpl
sbb
rcrl
and
push
mov
pop
shl
xor
mov
das
cld
mov
cli
push
shr
jge
add
dec
dec
dec
jne
mov
pushl
mov
mov
mov
mov
dec
push
js
lsl
mov
ljmp
neg
dec
loope
mov
mov
bts
dec
dec
aam
push
adc
in
dec
loop
mov
lea
mov
lar
imull
cld
in
fisttps
mov
mov
push
popf
cltd
dec
pop
pop
or
call
or
and
xchg
sbb
addl
jns
sbb
cli
ror
xor
dec
fwait
shl
and
aaa
icebp
mov
hlt
adc
movswl
and
mov
mov
inc
pop
ret
jno
add
sbb
xchg
push
in
xchg
mov
mov
add
mov
fsin
push
push
add
in
xchg
lcall
in
lock
clc
fs
std
mov
dec
pusha
jp
mov
mov
jg
mov
rol
jmp
xor
mov
popf
xlat
cmp
mov
clc
xor
dec
js
adc
mov
insl
sti
dec
lea
imul
dec
adc
lret
stos
in
in
aas
ret
mov
sub
sub
lret
xor
mov
xchg
jmp
sub
in
sarl
inc
mov
dec
mov
not
add
mov
xchg
ret
fildll
cli
dec
and
dec
cmp
jo
lea
mov
arpl
fisttps
cli
cs
adc
idivb
or
inc
rcr
cmp
jg
mov
std
cld
mov
roll
push
in
inc
inc
pop
push
mov
cmpsb
lods
hlt
incl
or
lods
in
and
bsf
lock
repnz
fimull
negb
mov
nop
imull
cld
pushl
cmp
jae
mov
ror
inc
mov
mov
jg
out
inc
loopne
lea
mov
inc
xor
icebp
cmp
movb
mov
into
or
xor
lret
imul
dec
xor
call
hlt
mov
push
leave
hlt
dec
pop
cmp
sbb
idivb
or
mov
lea
adc
xchg
sbb
aaa
pop
mov
inc
pop
mov
xor
inc
jmp
inc
lea
or
lea
jge
xchg
lcall
push
xor
inc
mov
clc
imul
pushl
popa
mov
dec
test
jae
mov
sar
ljmp
or
mov
ror
sbb
mov
mov
inc
push
sbb
nop
fmull
roll
push
mov
fcos
jmp
fisttpll
jne
fsub
rclb
fldl
test
iret
mov
jecxz
jp
lea
inc
rcl
or
xor
sub
xor
adc
out
sbb
xchg
ficompl
rorl
or
sbb
inc
test
sub
xor
rorl
sub
xor
ficomps
jecxz
ret
addl
jmp
cmpsb
xadd
add
pop
push
adc
rol
adc
dec
mov
in
jg
jns
shld
inc
dec
add
out
add
adc
jnp
add
pop
stos
rclb
shrb
pop
xchg
pop
pop
movzbl
adc
inc
mov
jecxz
xchg
cld
sahf
lea
ljmp
cmc
jae
dec
adc
mov
pop
sub
idivl
adc
inc
push
mov
stos
xchg
jno
mov
xchg
fimull
leave
and
fcoml
sbb
push
call
in
mov
shll
leave
mov
mov
daa
mov
adc
pop
outsl
push
in
add
cmp
jp
mov
popf
xchg
xchg
testb
push
rcr
dec
inc
sbb
jmp
lock
mov
popf
fisubrl
dec
inc
sub
aad
stos
jmp
fsubrs
test
adc
insl
imul
leave
sbb
inc
inc
xor
push
or
add
push
push
sbb
xor
out
filds
gs
imul
mov
jmp
mov
pop
pop
inc
fsubp
mov
xor
add
mov
ds
psadbw
ss
stos
hlt
cmc
jmp
inc
push
into
daa
loopne
das
mov
out
add
pop
cmp
jb
insb
pop
loope
sub
in
push
das
add
call
mov
mov
pop
mov
inc
mov
mov
movsl
out
and
inc
pop
rolb
mov
mov
mov
int
mov
lret
pusha
add
insb
push
and
std
xlat
or
shl
dec
xor
mov
testb
repnz
xor
sti
inc
out
or
pop
movsbl
push
pop
push
andl
sub
add
jg
lret
jge
mov
test
mov
fisubs
mov
mov
sbb
mov
sbb
inc
add
xchg
pop
dec
mov
insl
loope
push
roll
iret
add
in
cmp
or
sbb
fists
inc
outsl
roll
mov
mov
xchg
repz
push
pop
pop
pop
mov
dec
jne
pop
or
mov
mov
or
mov
push
cmp
or
or
mov
mov
lock
jle
xor
movsb
push
fidivl
cmp
cli
shll
loope
leave
out
decb
jo
adc
xor
ss
test
xchg
scas
pop
cli
sbb
sbb
or
mov
and
sahf
mov
je
dec
inc
mov
and
jmp
cmp
cmp
js
hlt
adc
push
adc
icebp
mov
add
push
dec
and
mov
or
int
inc
mov
mov
bound
cld
cmp
dec
in
mov
mov
push
js
incl
pop
in
jg
call
bound
inc
sarl
xor
cmp
outsl
jg
je
gs
out
push
shl
mov
fisttpll
cmp
jmp
add
push
sbb
dec
decl
mov
mov
add
mov
fistpl
jecxz
xchg
sub
adc
mov
mov
add
jp
add
imul
lret
xor
sbb
idivb
mov
pop
stos
sbb
dec
imul
mov
cli
mov
frstpm(287
sbb
iret
cmp
jl
sub
mov
mov
jnp
sub
add
leave
cmp
iret
push
jmp
testb
jo
or
cmp
stos
icebp
adc
adc
fsub
jnp
xchg
in
sbb
sbb
fmul
shl
cli
clc
jmp
in
xchg
mov
or
or
inc
mov
push
xchg
les
mov
movsb
data16
push
add
enter
mov
add
jg
xor
cmp
cmp
aaa
add
ss
scas
mov
or
add
xor
pop
idivl
add
lret
xchg
hlt
movsb
jge
adc
cmpsl
or
or
and
call
hlt
lea
or
push
inc
pop
adc
xchg
push
flds
mov
stos
xchg
xchg
inc
test
cmpsl
invd
mov
scas
mov
popf
in
loopne
fdivl
and
and
rolb
cmpsl
ss
jne
aad
sub
movb
xchg
push
icebp
jle
sbb
mov
in
cmp
cli
or
fildll
pop
daa
fwait
sbb
xor
sbb
sarb
mov
mov
or
dec
mov
sbb
ret
xor
and
sub
sub
leave
mov
test
aad
hlt
push
dec
inc
mov
and
xor
mov
mov
jecxz
jno
sbb
jmp
add
fists
pop
loopne
inc
aaa
adc
bound
ror
sub
pop
mov
push
sbb
sub
jbe
clc
ja
sbb
fsts
mov
mov
subl
add
push
pop
inc
sub
jecxz
jae
xor
inc
scas
repnz
jg
popf
xlat
sbb
ljmp
mov
es
call
int3
aaa
iret
pop
incb
and
outsl
add
movsl
jo
add
insl
fldl
fadds
je
mov
shll
pop
int3
and
mov
add
mov
sub
jg
push
inc
dec
mov
xlat
scas
adc
dec
out
or
pop
fimull
add
push
jg
icebp
sti
hlt
movsb
push
es
mov
mov
jb
ficoms
negl
das
aaa
hlt
mov
pop
js
add
xor
xor
mov
fistpll
mov
dec
lods
xor
mov
xchg
mov
inc
adc
inc
inc
dec
sbb
xor
add
jae
inc
pop
cli
cs
shlb
loope
or
sbb
or
mov
inc
mov
jne
loope
pop
xor
fiaddl
xchg
loopne
jl
mov
pop
jmp
xor
jno
lock
jo
rcr
sbb
add
imul
xor
rcrl
sbb
aaa
js
mov
out
js
push
pusha
out
add
jl
std
lret
loope
adc
xlat
dec
sti
adc
lea
lret
xor
mov
sbb
add
add
xchg
pop
sub
shll
adc
mov
mov
xchg
sbb
movsb
adc
sub
cmp
loop
test
adc
cmp
mov
and
adc
pusha
mov
out
sti
call
xor
scas
xor
xor
out
push
inc
xor
mov
pop
mov
rep
or
adc
out
add
mov
mov
or
mov
jne
xor
outsb
mov
inc
sti
gs
push
je
pop
or
loopne
dec
hlt
imull
cmp
cmp
xor
lock
out
add
movsb
popa
adc
mov
inc
add
call
sarb
loopne
lods
push
mov
mov
and
mov
sbb
mov
and
rolb
ret
add
and
mov
aaa
nop
loopne
cmp
mov
xor
sbb
add
push
jne
or
mov
add
pop
orl
add
insb
or
je
add
xorb
mov
inc
add
or
addb
adc
jmp
sub
jmp
xchg
xchg
lcall
add
pop
ret
fs
push
mov
das
lret
mov
or
push
popf
out
mov
push
push
pop
aaa
mov
or
push
push
dec
mov
arpl
pop
rol
mov
mov
or
push
icebp
int
mov
adc
test
and
cmp
mov
sub
adc
jnp
pop
sub
subl
and
insl
in
xchg
gs
in
in
cmc
cmp
mov
mov
sub
sub
shlb
sub
pusha
mov
dec
in
sbb
xor
movsb
stc
xchg
fldl
and
sbbb
or
fidivrs
dec
rorl
add
cmpsb
mov
or
lock
clc
adc
ffree
jbe
add
cmpl
mov
xor
adc
lods
cmp
mov
add
gs
outsl
addr16
xchg
and
cmp
je
mov
into
xor
das
adc
fsubr
push
fstps
dec
cld
testb
mov
or
and
xor
sbb
insb
pushf
push
cmc
les
and
dec
sub
sub
cs
pop
adc
into
or
inc
push
test
inc
push
and
pop
push
enter
inc
repnz
pop
out
add
inc
or
call
sbb
adc
cmovbe
in
and
decb
jne
cld
sub
clc
sbb
adc
mov
xchg
xchg
xchg
insl
in
inc
clc
sbb
mov
clc
push
inc
add
movl
subb
dec
jge
mov
or
pop
mov
pop
jmp
pop
xchg
ss
ret
cmp
shl
pop
mov
cld
jne
test
jne
pop
jmp
adc
insl
sbb
and
cmpsl
ja
in
lea
cwtl
push
arpl
xor
inc
push
adc
mov
outsb
aam
inc
test
add
scas
int
mov
or
outsl
cld
popa
pop
lea
jp
add
cmp
leave
in
xlat
jbe
sub
jmp
jl
sbb
lods
add
or
dec
mov
and
or
push
mov
xchg
sub
and
jle
adc
add
push
or
fsubs
fdivs
out
dec
rcll
sbb
sbb
jmp
mov
pop
add
jg
lahf
mov
jnp
push
xchg
cltd
sbb
add
inc
clc
jg
add
out
jb
arpl
fs
jae
add
out
enter
pop
or
clc
jge
adc
push
mov
sub
fsubrs
pop
xchg
fdivrs
imul
xor
sbb
and
pop
jle
pop
and
push
pushf
enter
lret
movsl
dec
ror
add
push
ss
cld
hlt
mov
or
inc
je
or
mov
lods
inc
adc
jg
sub
mov
leave
push
repnz
cmp
call
dec
jle
dec
push
sbb
push
mov
mov
call
sub
push
clc
push
or
test
sub
and
inc
xor
jecxz
sbb
in
scas
dec
lock
inc
cld
fcoms
inc
js
loope
pop
xsha1
cmpsb
or
enter
daa
and
loopne
xor
add
loopne
shll
jnp
mov
inc
mov
movsb
xchg
movsl
mov
outsb
dec
leave
xchg
adc
xadd
ss
jnp
pop
ret
sbb
mov
push
and
testb
loopne
shlb
imul
push
ja
call
daa
and
hlt
dec
xorl
in
cmp
gs
mov
push
pushf
add
fwait
mov
in
nop
scas
orl
mov
pop
xor
push
rol
mov
sbb
dec
sub
inc
mov
fdivrl
mov
sub
int3
pop
push
dec
pop
mov
aam
sbb
jle
adc
pop
lea
testl
add
outsb
add
add
popf
add
je
adc
dec
outsl
popa
fs
imul
and
outsb
push
push
jae
fs
popa
imul
insb
gs
bound
arpl
lcall
jg
insb
outsl
jae
dec
popa
outsb
adc
insl
popa
jo
imul
out
inc
imul
popa
insb
inc
insb
and
push
jnp
rorl
je
cmovbe
sub
insb
dec
outsl
jbe
dec
gs
pusha
jns
loopne
jbe
arpl
pop
je
aas
inc
fs
imul
dec
insb
je
jns
insl
jb
jae
jns
or
rcrb
nop
add
sub
test
adc
out
enter
insb
mov
pop
push
mov
fsubrp
data16
sub
jmp
incb
in
xor
push
inc
in
push
movsb
fsts
xor
lods
insb
xor
xchg
fisttpl
jl
incl
mov
and
pop
sbb
inc
daa
test
jne
jae
cltd
in
jmp
sub
insb
fisttpl
mov
mov
mov
out
xchg
jns
add
add
filds
bound
cmp
xor
jl
imul
add
pop
mov
lds
cld
sahf
inc
push
push
and
adc
dec
je
or
ror
xor
mov
lods
orl
sub
jbe
fistps
sub
add
data16
shlb
loope
dec
and
mov
inc
jb
in
imull
jno
add
outsb
jg
enter
or
push
sub
enter
xchg
test
push
wbinvd
sub
add
mov
and
inc
hlt
dec
or
adcl
or
daa
cmp
xor
xchg
inc
and
sbbl
lds
fisubrs
nop
pop
adc
xor
sbbl
cs
xor
pop
xchg
icebp
mov
js
ss
add
mov
pushf
or
data16
test
push
aaa
divb
push
and
mov
sbb
adc
imul
add
push
mov
sbb
call
outsl
shll
shl
cld
incl
mov
add
cmpw
jb
push
adc
inc
add
add
insb
pop
je
aad
or
subl
mov
push
pop
sub
test
mull
cmp
aas
mov
xchg
inc
and
repnz
adc
push
xor
cmpsl
in
xlat
mov
rolb
movsb
pop
adc
inc
or
push
test
inc
adc
gs
adc
ds
nop
add
or
mov
inc
add
adc
sbb
or
call
aaa
push
enter
inc
pushf
inc
mov
mov
inc
shl
push
jbe
and
pop
or
sbb
in
pusha
adc
sub
pop
nop
cmp
aas
pop
insb
dec
mov
sub
mov
pop
inc
sbb
and
push
and
inc
jnp
inc
adc
sbbb
sub
push
and
cmp
sbb
add
jle
nop
inc
push
fldenv
xchg
popf
scas
das
roll
nop
lret
jnp
jecxz
enter
aaa
adc
out
push
popa
pop
inc
inc
adc
adc
imul
xchg
sbb
mov
adc
or
aam
in
add
test
pop
fcoms
and
inc
xor
in
add
addr16
ja
xor
pop
popf
scas
outsl
in
adc
rcll
dec
pop
out
jns
add
dec
aas
or
in
pop
pop
sbb
add
test
movaps
mov
enter
test
lar
mov
loopne
leave
in
adc
cmc
or
cmc
test
adc
lret
invlpg
mov
es
orb
pop
daa
or
jnp
mov
dec
push
jnp
in
repnz
dec
popw
pop
jge
xor
or
xlat
test
mov
adc
xchg
pop
in
mov
xchg
ficoms
out
xchg
jmp
outsl
jns
mov
xchg
mov
pop
cmp
pop
pop
aad
ss
cmpsl
daa
push
jge
jne
mov
adc
add
and
add
lahf
fwait
mov
insl
or
push
insb
xchg
mov
push
push
pop
adc
or
add
cmc
or
push
lahf
es
push
jae
dec
insb
dec
or
xchg
push
pop
push
stc
add
add
outsb
mov
add
dec
adc
test
outsl
test
add
dec
dec
pop
mov
mov
je
dec
sub
or
sub
sub
shll
rcrb
pop
mov
add
sbb
add
sti
mov
mov
pop
add
push
or
jmp
outsb
pop
cs
add
add
xchg
ljmp
lods
jnp
out
adc
sbb
pop
mov
add
jecxz
inc
xchg
shll
testb
repz
jne
loope
faddl
ja
or
add
adc
and
inc
jnp
xchg
cs
sub
es
and
addr16
ret
insl
imul
addr16
add
aaa
ret
and
cltd
jbe
lods
dec
push
push
adc
and
outsl
inc
dec
add
xor
hlt
add
xchg
jge
lock
pop
hlt
inc
push
outsl
dec
and
adc
or
fwait
lds
push
push
mov
add
pushf
sbb
fmull
mov
mov
inc
pop
push
adc
imul
aaa
fbld
insb
out
jbe
or
daa
rorl
push
inc
inc
cmp
fisttpl
jb
sbb
popa
lret
cmpsb
repnz
add
sahf
xor
sbb
testl
fiadds
into
mov
mov
add
dec
sbb
into
das
inc
cmp
es
in
test
and
xchg
mov
or
or
ret
and
test
ret
sub
add
inc
inc
ret
fiaddl
xchg
mov
add
push
push
mov
iret
add
mov
pop
dec
mov
xor
in
adc
mov
pop
add
sub
dec
insb
and
or
adc
lcall
push
jb
lods
lret
add
jno
dec
fcomp
add
push
fcoms
mov
pop
pushw
iret
mov
sub
xor
pop
test
mov
loopne
lods
mov
test
insl
cmp
psubq
cmp
jl
jmp
push
sbb
out
mov
mov
xchg
pop
mov
lret
xorl
jge
sbb
pop
incl
fs
inc
push
rorl
or
and
repz
cli
xchg
pop
fiaddl
xchg
iret
add
add
fcoms
das
test
fdivs
fdivs
inc
aaa
jnp
cwtl
add
jg
leave
xor
pop
pop
iret
dec
aas
xchg
jl
push
movsb
jecxz
add
jae
sti
cld
stos
pop
add
push
out
add
and
repnz
mov
dec
sub
fcoms
jge
adc
sub
push
add
sub
inc
mov
iret
dec
addl
jecxz
ds
and
xlat
xor
je
mov
in
push
mov
fs
and
faddl
sub
shrl
mov
sub
into
fdivl
mov
hlt
inc
es
xchg
jle
pop
mov
stos
dec
out
js
dec
call
out
in
add
aaa
dec
cmp
fcmovnu
imul
sarl
int3
mov
sbb
xlat
add
mov
mov
pop
inc
xchg
fadd
pusha
cld
ja
scas
add
cmp
insb
fadd
jo
inc
iret
xchg
push
xorl
daa
fwait
xor
lock
out
js
adc
in
nop
pop
es
loope
dec
or
and
daa
sbb
rorl
fstpt
xchg
pop
mov
mov
cmpsl
divl
xchg
test
lea
test
icebp
lds
aam
mov
out
cmpsb
out
call
enter
sub
call
mov
insb
aaa
and
leave
mov
jg
xchg
mov
setg
xor
and
inc
rorb
into
ds
iret
xchg
xor
jne
mov
sbb
sub
in
ret
pop
je
aam
or
jmp
and
clc
or
je
std
pop
pop
pop
bound
push
mov
adc
mov
stos
fstpt
dec
mov
es
dec
mov
adc
cmp
clc
pusha
push
jne
push
outsb
in
imul
cmp
popf
popa
nop
fidivrl
icebp
in
jnp
or
xor
sbb
ret
push
cs
movsb
xor
jae
shrl
xchg
shl
and
inc
mov
in
sub
iret
add
mov
jle
out
jb
sbb
or
sbb
bound
sbb
sbb
or
insl
jnp
mov
inc
out
adc
stos
jbe
mov
push
or
sti
xor
sub
ja
mov
ja
icebp
js
gs
add
adc
mov
ja
cltd
lods
push
dec
ret
add
add
add
add
add
ds
mov
jle
jmp
or
pop
arpl
negl
jb
fldl
jb
gs
imul
inc
lret
ja
cld
mov
out
add
jl
sbb
jmp
je
mov
rcll
inc
in
out
cs
fcom
xor
in
ds
jge
mov
jle
and
xchg
addr16
jmp
adc
lds
repnz
cs
int
lahf
out
push
adc
fisubs
pushw
mov
or
cmp
in
xchg
subl
aaa
int3
push
das
cs
or
addr16
leave
push
adc
cwtl
push
xor
sub
or
xchg
test
xor
sti
add
daa
lahf
fstpt
cmp
mov
sbb
and
inc
cmp
movsl
sahf
cmp
mov
sub
dec
mov
repnz
lods
mov
out
fistl
clc
add
push
bound
imul
cmpsl
popf
jno
popf
lahf
dec
add
dec
daa
cltd
pusha
cmpsl
lods
data16
or
cld
data16
ret
ja
xor
insb
ret
xchg
fisttps
lods
jg
lods
add
repz
imul
ljmp
pop
sarl
cmp
sub
dec
xchg
repnz
ja
xor
in
dec
pop
dec
pop
add
jbe
pop
mov
lods
insb
sti
pop
lods
test
inc
movsl
inc
push
sbb
pop
inc
or
fldenv
insb
jo
xchg
cmp
cmp
sbb
xchg
or
sbb
pop
adc
sub
pusha
mov
cwtl
ror
js
mov
push
dec
inc
jl
imul
je
and
cwtl
xor
jnp
push
popf
in
adc
mov
mov
jl
sbb
subl
push
ja
mov
xor
adc
jb
mov
rorb
add
adc
cmp
or
lds
sub
add
inc
xchg
jecxz
je
ret
cwtl
repz
mov
iret
leave
sub
icebp
sub
push
adc
clc
and
cmpl
push
and
mov
dec
and
pop
xchg
jp
mov
or
or
cmpsb
xchg
scas
xchg
mov
jbe
mov
push
outsl
cmc
mov
testb
pop
js
jl
popf
xchg
aam
mov
out
ss
fucom
and
fbld
xlat
or
cmp
loopne
pop
in
ret
psadbw
jno
aaa
aaa
icebp
nop
test
lock
jp
pop
inc
fsubr
xor
fwait
jo
fisttps
adc
loopne
push
mov
ret
scas
sub
fcomps
ss
or
cmp
mov
clc
out
jle
test
mov
fisubrl
inc
ret
out
jno
add
jbe
gs
pop
jnp
loope
sbbb
xchg
add
sub
push
sbb
movsb
xchg
pop
aaa
dec
dec
movl
mov
dec
and
sbbb
fimuls
mov
hlt
push
cmpsl
ja
or
sbb
fnstcw
adc
fildll
fucom
addr16
inc
xor
fwait
add
and
and
out
pop
mov
cmp
movsb
popa
mov
in
mov
pop
movsb
int3
mov
or
jns
ja
call
inc
mov
xor
push
push
add
insl
outsl
sbb
dec
and
and
push
adc
insb
lea
cli
fsubs
cmp
pusha
xor
fdivs
int
pusha
fstpl
pop
mov
lahf
cwtl
int3
dec
das
das
xchg
inc
xchg
sti
js
or
mov
lea
sub
iret
sti
mov
sub
adc
fsts
andb
roll
push
movsb
jae
cmovne
or
dec
xchg
or
pop
sub
les
pop
daa
cmpsb
sub
outsb
movsb
or
jnp
cltd
pop
mov
scas
mov
stos
adc
fisttpl
mov
jle
push
mov
call
jbe
jl
test
lock
ret
outsl
sbb
jne
push
inc
add
mov
roll
repz
add
pop
pop
outsl
arpl
pop
push
jbe
mov
xor
jae
push
fistpl
je
je
sub
sbb
or
and
push
clc
into
inc
roll
daa
mov
jbe
xchg
jb
pop
in
fisubl
push
mov
push
outsb
xchg
nop
outsb
mov
scas
pusha
mov
mov
jb
xchg
adc
stos
xor
ret
sti
data16
pop
dec
add
out
xor
lahf
dec
dec
out
fisttpll
ret
daa
jbe
mov
in
lock
int
pop
sbb
mov
idivl
sbb
nop
cmp
xor
push
lods
fwait
adc
jmp
xor
movsl
xor
movl
test
scas
bound
mov
xor
or
xor
ret
fistl
sbb
dec
push
clc
or
nop
mov
mov
iret
stos
stc
xor
pop
fsubrs
je
pop
cmp
cmp
sub
add
push
es
aam
arpl
pop
or
ret
pushf
daa
pop
cmp
inc
sti
ds
mov
mov
mov
stc
arpl
push
test
mov
lock
pop
movsl
mov
push
sub
and
fcomps
cmp
pop
jo
push
in
sbb
mov
xchg
lahf
push
inc
pusha
lret
icebp
pop
lock
mov
inc
andb
iret
subl
add
add
and
cmpsl
jno
cli
es
js
cmovle
outsb
jnp
ret
push
lds
data16
push
or
dec
dec
adc
insb
scas
jge
pop
jo
pop
mov
scas
xchg
sbb
daa
mov
lahf
push
aas
repnz
setl
repz
and
sbb
pop
cmp
sub
mov
mov
aam
rclb
pop
rol
push
xchg
mov
jae
cld
dec
pop
sbb
jg
inc
mov
xor
cmp
sarb
int
add
and
cmp
push
add
aad
adc
outsb
xor
loopne
adc
popf
sar
push
and
clc
stos
cmpsb
sbb
add
push
pop
or
in
pop
xchg
sub
xchg
cmp
daa
test
repz
pop
test
pop
psllq
sbb
jbe
incl
movsl
add
movsl
xchg
xor
xchg
addr16
mov
ds
sbb
scas
pop
adc
mov
mov
ss
add
das
or
jb
push
pushf
xlat
aad
xchg
dec
pop
dec
test
pop
jge
fisubrs
jns
test
jno
add
pusha
jae
mov
aaa
add
mov
out
mov
dec
gs
xor
data16
arpl
lods
frstor
shrl
add
pop
scas
sub
mov
pushf
in
jge
scas
fs
out
add
mov
pusha
pop
nop
loopne
xor
insl
sub
test
outsl
aaa
enter
dec
xor
push
popl
push
addr16
add
fidivl
sub
xchg
dec
subl
mov
outsl
dec
test
and
in
push
out
jns
xor
fisubs
sub
popa
and
fcoms
int
mov
aaa
sub
add
sbb
fiadds
pop
mov
test
popa
push
je
and
mov
rcr
imul
in
jb
arpl
dec
and
fidivl
popa
sub
jo
pop
push
add
addr16
das
ret
inc
setae
popf
shlb
mov
jl
xor
and
rcr
shll
pop
faddp
jl
test
pop
pusha
and
scas
pop
enter
fistpl
fstp
movsl
cmp
sbb
jne
fld
and
jmp
jbe
sub
movsl
mov
mov
out
test
sbb
xchg
stc
jl
xchg
cmp
jle
pop
and
jle
mov
cs
loop
jmp
add
push
lahf
lock
inc
push
jmp
bound
ret
testb
sbb
scas
cmpsl
mov
setle
shll
imulb
inc
rcrb
or
insb
xchg
adc
test
and
shll
and
or
cld
jle
mov
daa
sbb
sahf
sahf
cmp
or
test
or
in
into
sbb
inc
ret
lret
subl
pop
sti
dec
xchg
jl
fistps
add
insl
mov
in
sbb
push
dec
xchg
orb
in
ret
call
cmp
stos
dec
gs
sub
test
cmp
rclb
test
cs
fdivp
loopne
dec
addr16
imul
fsubs
test
daa
sti
mov
dec
popa
and
lea
or
iret
xor
nop
movsl
cmp
jo
addl
sbbl
jmp
push
pop
xchg
cmovne
movsb
daa
sub
xor
das
iret
pop
das
repnz
orb
jp
outsb
daa
sarb
sub
sub
and
scas
ss
arpl
fsubrs
and
pop
into
inc
add
out
inc
cmp
mov
loop
jno
fsts
push
push
fstpt
scas
loop
pop
insb
das
daa
inc
lods
es
data16
jo
scas
popf
fadds
pusha
mov
outsb
sub
movsb
fadd
xor
sub
sbb
jbe
xchg
jb
mov
fstp
das
push
sbb
pop
fldt
mov
dec
sbb
loope
cmp
insl
xchg
xchg
ja
lock
and
sbb
pop
push
sub
sbb
or
xchg
cmp
into
fcmovu
lods
xor
roll
push
inc
stos
inc
iret
fs
dec
cli
inc
jle
xchg
sbb
scas
mov
insb
inc
push
xchg
scas
popa
and
ds
push
add
push
push
aas
ds
shlb
int3
mov
push
pop
push
addr16
nop
popf
pop
out
aad
es
fists
xorb
jbe
ja
mov
fisttpl
movsb
add
mov
fisttpll
lcall
inc
mov
stos
jno
cs
das
out
lock
pusha
mov
cmpsl
ss
push
insl
lods
xor
jns
das
int3
sbb
xor
aam
inc
add
fcmovnb
loope
dec
shlb
ss
stos
push
pop
sbb
or
and
test
adc
and
jle
xlat
nop
test
xchg
mov
cmp
cmpsl
test
sub
xlat
adc
xchg
nop
test
mov
dec
cltd
bound
inc
xor
mov
xchg
rcrb
add
lods
or
add
inc
inc
pop
out
stos
sub
shlb
xchg
arpl
cmpsb
add
mov
mov
xchg
and
jne
lods
jo
push
lods
sbb
or
and
addr16
scas
xor
add
and
and
sub
daa
pop
test
push
xchg
pop
aaa
sub
data16
jl
pop
push
mov
loope
mov
sub
and
or
sbb
aaa
pop
popf
ror
dec
cltd
iret
ja
test
testb
jns
test
int3
xchg
lahf
lds
sbb
jno
add
sbb
sub
out
iret
ud1
inc
ret
sbb
mov
idivl
aaa
call
jne
jo
sbb
and
dec
push
out
lds
push
push
xchg
pop
and
test
xor
jle
mov
and
and
out
mov
out
pop
xor
push
out
xor
sub
imul
lea
lret
adc
loope
out
jbe
xor
xor
dec
ficoml
and
or
mov
xor
in
xlat
jbe
cmpsl
mov
addb
mov
popf
or
mov
pop
sub
sbb
mov
ljmp
pusha
cmp
les
push
adc
iret
xchg
repnz
fisttpll
mov
call
inc
mov
dec
mov
pop
imul
add
push
cmp
iret
jmp
jmp
pop
adc
push
movsb
fbld
popa
sub
rcrl
fsubs
fildl
push
mov
ljmp
jnp
movsb
cmp
out
or
out
mov
lods
scas
arpl
call
dec
dec
fisubrl
into
and
pop
xchg
xor
and
and
cld
sbb
inc
xchg
cmp
ret
push
fdivrs
adc
call
or
iret
fst
adc
int
clc
push
movsl
inc
int
xor
jl
jmp
movsl
out
nop
sarl
ja
aam
jno
mov
popf
mov
and
add
or
mov
sub
mov
xlat
xlat
mov
outsl
in
adc
movsl
pop
add
out
es
push
outsb
or
lock
cmp
inc
cs
stos
mov
and
xchg
jge
sub
push
loop
mov
sbb
mov
das
adc
sbb
imul
sbb
sbb
jb
or
xor
sbb
testb
sub
aaa
or
mov
lds
sbb
out
mov
sub
sbb
or
lret
mov
jge
add
add
or
aam
mov
sti
sbb
push
or
sbb
ficoml
sub
or
cwtl
int
mov
imul
inc
add
aas
repnz
clc
add
repz
faddl
pop
adc
int3
inc
pusha
dec
pop
mov
out
xor
dec
jle
popa
jle
and
sbb
and
inc
stos
xor
cmp
cmpsl
jg
adc
pop
pop
loope
rcrl
scas
mov
cmp
jns
or
xchg
into
jb
pop
dec
mov
pop
fdivrs
insl
pop
xlat
rcrb
sbb
push
and
pop
cld
mov
jbe
inc
lret
insl
aad
mov
int
pop
filds
daa
inc
inc
movsl
dec
push
mov
insb
xchg
dec
jmp
pop
jae
dec
hlt
adc
sub
and
push
mov
mov
ret
arpl
pop
dec
push
mov
pop
pop
xor
push
neg
int
push
cmp
hlt
mov
js
das
sub
jbe
sti
mov
andl
push
xor
aaa
das
icebp
stos
cmp
add
out
insl
adc
cmc
nop
push
lods
xor
in
fidivs
ds
movsb
xor
mov
scas
inc
test
das
scas
pop
dec
dec
jge
mov
add
add
insb
ret
sub
mov
into
add
popf
jne
lahf
jg
pop
pop
push
js
jp
mov
mov
negl
rcrb
jno
imul
pop
pushf
jnp
fidivs
inc
push
bound
or
popa
out
out
adc
shlw
ja
mov
push
or
addb
sub
add
jnp
or
ret
outsl
leave
ret
pop
push
lcall
add
fnstcw
pushl
and
fstps
adc
push
addl
xchg
pop
mov
cwtl
xor
jb
ret
insl
mov
test
mov
add
or
mov
and
xor
xchg
mov
or
pop
push
adcl
xchg
int
add
and
sub
pop
mov
jne
lods
dec
das
cmpsl
out
popa
sub
push
leave
adc
scas
or
inc
loopne
and
jmp
popa
mov
and
mov
xor
sub
fstp
daa
or
push
and
inc
fnop
mov
mov
pop
subl
jge
xchg
dec
add
insl
sub
rcrl
push
and
push
es
and
push
aam
sub
mov
sub
mov
mov
into
mov
inc
mov
insb
mov
or
sti
fisubrl
mov
mov
adc
stos
loope
pusha
rorl
shll
ja
lea
dec
je
jle
cmp
pushf
or
mov
mov
push
cmc
pop
dec
sbb
mov
and
add
mov
fildll
repnz
scas
sub
cld
push
loopne
pop
mov
hlt
fidivs
fisubrs
cmp
xor
ret
icebp
mov
mov
adc
dec
fmull
sbb
add
test
inc
xchg
xlat
or
xchg
push
mov
xorl
mov
js
and
and
rorl
xor
daa
mov
scas
cmp
ror
pop
mov
push
or
lds
jecxz
or
sub
or
test
pop
xchg
gs
jno
mov
push
out
aad
inc
add
orl
je
inc
clc
je
cmpl
int3
adc
push
popf
iret
sub
sub
xor
jbe
sti
or
jecxz
aaa
cmp
adc
add
pop
and
xor
test
aas
scas
jo
cmp
aaa
or
lds
push
and
jl
aaa
inc
jbe
bound
icebp
mov
and
jo
or
shl
sub
or
push
mov
and
dec
aaa
xchg
shll
mov
ja
jo
es
frstor
push
sbbb
push
das
dec
mov
adc
in
ret
fldl2e
push
mov
jo
lahf
lea
xlat
iret
push
add
cld
shr
mov
add
lods
and
in
out
add
inc
mov
shll
and
fcom
adc
insl
fists
xchg
fdiv
lret
out
adc
or
mov
and
in
adc
fwait
or
mov
or
adc
push
insb
push
dec
shlb
add
sub
add
ja
xchg
push
insb
arpl
out
or
int3
popa
femms
and
and
idiv
insl
or
pop
and
adc
das
push
adc
xor
sub
inc
imul
outsb
popa
sub
push
aas
add
and
shll
out
jbe
in
sub
xor
add
das
inc
test
stos
sub
sub
and
mov
neg
sub
cmpsb
dec
cmp
xor
jl
sbb
mov
xchg
lods
out
push
aam
mov
ds
and
and
fnstenv
ja
mov
mov
sbb
or
push
pop
push
cmpb
int
or
or
rcr
push
jb
jecxz
lock
enter
sub
pop
inc
add
aaa
sbb
pop
xor
xor
cmp
push
push
roll
add
or
loop
lea
push
mov
xchg
lods
icebp
das
loop
cs
ret
jno
mov
xchg
leave
cmc
scas
jp
push
push
out
adc
dec
adc
adc
and
aaa
sbb
sub
or
mov
dec
push
js
push
push
ds
jp
cs
pusha
mov
adc
cmpb
lcall
and
ret
add
fnstsw
stos
inc
cmp
push
ret
lock
loope
dec
je
add
jle
mov
pushl
pop
xor
ja
in
or
jno
sbb
push
loop
xor
data16
stos
stos
es
push
sbb
fistl
xor
call
dec
aaa
mulb
adc
loopne
push
jno
movsb
push
mov
dec
lds
inc
fistpl
jbe
add
mov
push
scas
sbb
mov
iret
sub
pop
cmpsb
mov
or
lret
outsb
jbe
mov
add
inc
inc
je
int3
enter
outsl
push
push
lcall
in
add
mov
add
xchg
adc
movsb
aas
pop
mov
inc
adc
scas
vmovaps
cltd
push
dec
push
push
inc
sbb
xchg
popf
fwait
add
cmp
pushf
inc
add
jp
pop
mov
test
je
jbe
daa
shrb
xchg
ja
lcall
cltd
pop
sahf
pusha
cmpb
xchg
stos
mov
sub
fisttpl
movsb
sbb
fisubrs
and
ss
sub
je
mov
das
fs
lds
es
pop
xor
jle
faddl
xlat
push
push
xchg
jno
dec
and
mov
negl
jno
adc
dec
or
or
lcall
xor
int3
stc
pop
arpl
push
xchg
fidivrs
mov
pop
push
fadd
push
dec
push
hlt
shl
fstp
xchg
outsl
sbb
in
cmp
mov
sbb
push
mov
xchg
mov
cwtl
clc
notl
les
je
les
cmp
cmp
jmp
ret
mov
test
cmp
setno
jecxz
fistps
adc
dec
xor
in
and
or
fbstp
xchg
adc
in
push
pushf
and
jbe
cwtl
xchg
inc
mov
shll
inc
mov
or
adc
pop
test
add
xor
fnstsw
or
popf
pop
xor
adc
add
pop
insb
or
adc
pop
test
into
in
xlat
lods
inc
and
xorl
leave
cltd
push
jo
in
es
in
fidivs
adc
aas
js
or
adc
push
jmp
scas
adc
fistpll
aam
jp
pusha
fildl
scas
pop
add
imul
sbb
and
push
sbb
imul
xchg
and
dec
addr16
jbe
sub
and
xor
xlat
daa
inc
sub
jns
lods
sbb
xchg
pusha
xchg
stc
iret
cmp
lods
add
xor
jne
adcb
mov
fwait
test
ret
mov
sub
and
xor
sub
ds
push
cmp
and
sub
jl
inc
xor
std
mov
out
scas
jp
add
mov
insl
push
iret
out
shr
je
fcoml
mov
int3
or
nop
adc
adc
movb
ret
aad
insb
stc
loop
mov
incl
loop
cmp
mov
mov
cmp
mov
arpl
ds
negl
add
bound
add
testl
movsb
fs
push
inc
dec
mov
xchg
mov
push
addr16
push
pop
push
les
and
rcrl
push
mov
push
and
add
inc
ljmp
loop
xor
pop
sbb
mov
loope
or
adc
scas
imul
dec
xchg
imul
iret
mov
dec
shll
arpl
sbb
push
xor
dec
mov
inc
out
mov
jmp
int3
ljmp
cmp
iret
stc
roll
pop
pop
push
pusha
mov
stos
pusha
or
ds
add
lea
and
mov
movsb
mov
popf
mov
jo
stos
int
je
mov
add
mov
sbb
ja
push
add
cmp
ss
icebp
inc
fstl
dec
loope
and
bound
sub
mov
shl
into
cmp
inc
ret
addr16
inc
cmpsl
add
sbb
push
jbe
dec
cmp
dec
dec
xchg
jg
add
fildl
add
xor
imull
lock
lcall
xchg
cmp
sub
daa
add
add
push
sbb
pop
or
sahf
test
inc
popf
add
in
shr
fbstp
stos
inc
mov
pavgb
xlat
adc
in
push
cmp
pop
mov
lahf
incb
jecxz
sub
mov
lcall
fistpll
add
or
xor
mov
mov
cmpsl
add
sub
dec
call
mov
and
adc
loope
mov
mov
hlt
bound
int
inc
sbb
pushf
iret
dec
xchg
mov
and
mov
fdivs
sbb
mov
iret
dec
add
or
fwait
pop
mov
adc
fcomip
pop
jb,pn
lcall
mov
add
test
je
sarb
inc
adc
int
and
mov
pop
ret
pop
rorl
out
pop
adc
cmp
stc
insb
bound
inc
das
sub
lods
les
sahf
pop
inc
adc
fdivl
addr16
subl
bound
loopne
adc
pop
imulb
aas
lahf
xor
sbb
aam
add
sbbl
popa
mov
mov
jo
scas
ret
rcrb
hlt
pop
mov
add
sahf
push
xchg
pop
jo
dec
pop
insl
dec
adc
fwait
inc
dec
xor
sbb
rol
mov
icebp
and
bound
das
xchg
mov
add
cmp
pusha
inc
jno
int3
pop
arpl
mov
xor
add
and
push
mov
xchg
lods
es
mov
leave
xchg
stos
daa
call
mov
lds
dec
aad
dec
mov
mov
adc
sbb
push
in
popa
das
jns
or
movsl
mov
xor
daa
push
or
mov
sbb
mov
push
mov
jb
pop
mov
sbb
jl
sub
mov
and
sbb
add
lahf
shrl
inc
jp
arpl
lahf
in
lret
dec
mov
aad
cld
xor
push
das
fldcw
sbb
jne
leave
mov
xchg
fwait
shrl
rep
es
out
fistpl
pop
xchg
xor
jg
fucomip
fdivl
mov
hlt
in
pop
and
add
stc
fs
and
scas
mov
imul
lcall
push
lods
bound
or
notl
xor
ret
mov
aaa
out
loop
mov
jno
ret
xor
add
push
adc
inc
xchg
sbb
int3
inc
pop
cld
loope
dec
leave
loopne
fcompl
sub
xchg
xchg
cli
cmp
pop
dec
in
ja
outsl
jmp
test
sub
lods
mov
addr16
into
inc
adc
ja
and
mov
push
mov
rolb
divb
pop
adc
xor
cmp
push
inc
imul
jbe
add
subl
cmp
clc
les
nop
bound
leave
cmp
pop
jns
jns
xor
add
and
inc
pop
xor
sub
icebp
stos
or
fs
xchg
xchg
push
lret
cltd
lcall
jl
outsl
das
and
stos
adc
cmp
sbb
jle
push
xor
dec
ljmp
mov
dec
sbb
ret
xor
mov
dec
push
xor
lahf
inc
in
add
jne
mov
es
jne
scas
pop
fisttpll
pop
add
pop
xor
arpl
adc
xchg
dec
mov
or
imull
push
add
pop
push
ret
push
ss
ja
xor
scas
hlt
pop
ret
stos
adc
pop
outsb
adc
push
jp
push
in
adc
movsb
pop
repz
inc
hlt
je
xor
call
inc
lods
xor
add
loopne
ficoml
loopne
mov
inc
xor
inc
clc
scas
cmp
int3
and
or
mov
jae
cs
jb
and
xor
outsb
scas
and
xor
pushf
pop
movl
sbb
push
xor
mov
sub
cmp
mov
jbe
jo
pop
es
orb
outsl
div
xor
hlt
pop
jnp
and
test
mov
sbb
fwait
lds
lods
or
pop
mov
sub
push
nop
pushl
loope
aaa
dec
xor
dec
mov
loope
cmpsl
add
cmp
cmp
xor
ret
xor
popa
cltd
xor
xor
in
movsl
xor
rol
fsubs
popa
std
dec
sub
cmp
and
jle
xchg
mov
test
jbe
add
jl
or
push
lret
fwait
cmp
lods
stos
int3
jne
cmpsl
or
pop
ja
add
or
jl
daa
sub
or
bound
and
push
cmp
idivl
xchg
xchg
movsb
adcb
clc
test
fcomps
repz
mov
iret
xchg
inc
fdivs
mov
js
sbb
dec
push
pop
sub
rcll
leave
cmp
dec
inc
ljmp
enter
xor
jp
pop
or
push
mov
addr16
in
test
or
xor
out
xchg
pushf
and
sbbb
xor
pop
loopne
push
mov
and
jp
gs
sbb
jns
inc
xor
fs
push
out
adc
mov
cltd
lock
inc
xlat
iret
mov
jp
leave
adc
mov
out
mov
test
sahf
lock
hlt
les
xor
and
filds
dec
jo
push
cmp
testb
inc
sub
pop
mov
jmp
adc
jle
pop
lods
sub
bswap
push
add
lods
pop
jmp
test
jmp
scas
and
mov
cwtl
mov
jmp
or
subl
adc
inc
arpl
and
push
fldt
aam
adc
inc
jne
cmp
popf
cmp
ja
inc
pop
out
in
shlb
call
setbe
cwtl
mov
outsb
jbe
mov
inc
decb
imul
insl
xor
mov
adc
neg
mov
xor
adc
cltd
or
jnp
sbb
adc
add
mov
pop
inc
outsl
inc
subb
jns
imul
jle
lods
int
and
mov
mov
adc
xchg
roll
mov
mov
fcmovb
lods
sub
and
inc
ja
push
pop
frstor
ss
jnp
and
loope
add
adc
cmp
mov
out
data16
and
pop
mov
jmp
inc
and
lcall
dec
inc
testl
xchg
and
dec
xorl
and
mov
mov
push
cmp
xchg
incl
adc
adc
or
xchg
popf
lret
pop
mov
cwtl
jmp
push
xchg
and
popf
je
jnp
cmpsl
and
pop
test
ficompl
mov
out
or
call
scas
xlat
jg
fildl
test
jge
cs
add
stos
addps
adc
and
xchg
dec
sub
or
push
jmp
and
mov
lret
sbb
sub
sbbl
xchg
scas
int3
mov
xchg
push
xchg
and
xchg
xchg
add
xor
dec
jbe
popa
ss
push
mov
les
aaa
outsl
out
aaa
sti
xchg
jle
jmp
mov
add
mov
xrelease
fcos
pop
fwait
xorl
fs
fldenv
mov
adc
and
mov
outsb
scas
fs
jo
pop
idivl
ret
xchg
dec
shrl
decl
fsubs
jo
out
fildl
dec
pop
mov
and
xlat
fldt
leave
ret
cmpsl
mulps
push
das
daa
add
cmp
loope
sub
xlat
add
arpl
ret
lock
mov
cli
scas
fistpl
int
aas
jnp
jge
cmp
mov
jge
pop
adc
lock
lahf
test
sbb
addr16
sub
or
or
leave
out
sbb
pop
add
testb
cs
push
cmp
pop
and
aaa
sub
into
pop
or
or
mov
ja
or
outsl
arpl
xor
or
outsl
adc
pop
popa
pop
xchg
sbb
pusha
scas
sub
addr16
jae
xchg
and
pop
arpl
push
flds
jnp
into
leave
dec
rcll
add
and
jae
jnp
fstps
inc
cmp
sbb
push
jge
sysret
mov
in
lods
inc
jge
inc
aaa
lds
lcall
sarl
dec
adc
into
jp
addl
cli
pop
xchg
xor
imul
pusha
mov
jo
stos
sub
cmp
mov
scas
cmp
shlb
inc
mov
pop
pushf
sbb
mov
dec
adcl
push
cmpxchg
add
add
mov
out
push
movsb
inc
roll
sub
mov
or
lahf
imul
sbb
test
sbb
or
fstl
sahf
xchg
xor
and
ja
pop
mov
outsb
inc
inc
mov
test
aaa
xor
xlat
mov
sub
ds
mov
movsb
push
mov
mov
add
fnstenv
sub
je
cmp
jo
test
mov
push
mov
les
test
adc
loope
add
add
pop
and
mov
mov
push
std
call
inc
std
cmp
outsl
adc
and
int
xor
and
xor
rcrb
or
mov
stos
mov
mull
push
test
mov
xchg
loope
mov
mov
int3
or
cs
iret
cmp
mov
or
ret
jmp
imulb
mov
or
aad
dec
cs
lods
adc
flds
aam
xor
xor
repz
pop
push
pusha
cmc
jno
sub
sub
lods
lods
adc
dec
mov
mov
sbb
out
adc
in
or
and
pop
std
mov
stos
imul
rol
or
push
js
jo
fs
cmp
sbb
xor
pop
and
sti
or
scas
pop
sbb
pop
sti
jnp
or
popa
orb
adc
imul
les
add
imulb
fdivrs
jnp
jl
jmp
dec
dec
pop
mov
lahf
rclb
xor
and
sub
lret
pop
mov
mov
add
movsb
and
js
push
cmp
cmc
sbb
adc
out
shll
push
daa
fcomps
ss
add
fists
jp
popa
rol
pop
push
or
leave
arpl
dec
cmp
jo
scas
stos
imul
mov
mov
mov
sbb
adc
pop
jecxz
mov
fwait
leave
fstpt
dec
dec
imul
loop
dec
push
pop
cmc
mov
cmc
ss
push
cli
push
loopne
push
out
rcrl
jb
inc
cmpsb
pop
lods
jno
imul
je
inc
daa
test
mov
add
test
outsl
aas
mov
insl
data16
addr16
jnp
rcll
xor
xor
imul
ret
jae
mov
jbe
cmp
push
pop
leave
pop
scas
dec
ja
jo
and
xchg
adc
sub
scas
popa
add
push
jb
push
mov
sub
jg
xchg
mov
add
test
mov
sub
aad
sbbl
mov
or
scas
xchg
fildl
pop
and
ret
aad
loop
xor
rorl
jae
lret
stos
adc
call
add
orb
or
mov
inc
int
and
in
and
aaa
mov
popf
and
pop
popa
js
xchg
stos
inc
push
jo
pop
dec
sub
add
add
aaa
lods
nop
mov
xor
divl
and
inc
cmpb
orl
xlat
adcb
fdivs
dec
sti
add
scas
mov
mov
ret
mull
push
jle
and
xor
add
aad
pop
popf
lea
or
xor
lods
push
in
push
add
loopne
xor
push
mov
push
sub
stc
push
loope
push
pop
xor
mov
push
in
je
daa
jb
push
sub
fisubrl
cli
push
loopne
cmp
mov
and
fsubp
lahf
jl
xlat
jge
and
popa
lods
and
xchg
out
pop
ja
pop
cmpsl
scas
bound
das
pop
xor
addr16
sub
or
lea
pushf
add
mov
shlb
ret
mov
push
test
loopne
and
out
out
das
mov
fsubrs
pop
inc
mov
ret
mov
mov
in
and
ret
adc
lods
lods
adc
xchg
rsm
data16
and
pop
aad
sub
sbb
dec
adc
repnz
sub
fsubs
popa
jmp
and
lock
sahf
test
popa
lods
xor
out
and
jecxz
or
ret
add
pop
pop
imul
push
movsl
lods
inc
push
adc
lret
pop
mov
adcb
jne
push
push
outsl
lods
das
jo
in
sub
add
or
lcall
inc
add
pop
or
fmull
hlt
xchg
minps
push
daa
add
mov
and
rorl
shl
jmp
xchg
add
add
pop
mov
mov
add
mov
push
pop
insb
sbb
mov
inc
adc
sbb
scas
mov
and
es
sbb
lahf
fstl
out
cs
xor
sbb
hlt
hlt
iret
xor
add
cmpsb
lods
fcoms
into
loopne
dec
mov
test
inc
call
xchg
mov
push
ja
adcl
mov
pop
cmc
sub
add
sbb
add
mov
std
dec
add
scas
cmp
or
dec
test
mov
inc
aad
inc
call
sub
jo
and
pusha
push
and
sbbb
pop
dec
mov
dec
neg
inc
xchg
test
gs
push
xchg
xor
and
inc
mov
mov
ljmp
pop
rorb
add
sbbl
xor
add
sti
or
sbb
mov
or
in
lret
fxch
hlt
mov
dec
adc
xor
les
iret
sbb
lcall
cmp
cld
jg
stos
xor
mov
cmp
xchg
fxtract
test
sbb
repnz
iret
aam
push
xor
jne
sbb
stos
and
je
rclb
fdivrs
mov
and
ret
mov
mov
xchg
subl
hlt
push
jl
daa
popa
cmpsl
sub
fsubrs
addr16
insb
mov
pop
xor
loope
daa
cwtl
aaa
fcomps
pop
loop
sub
movsb
out
pusha
push
push
ds
pop
lret
add
daa
pop
mov
or
test
jmp
hlt
cmp
inc
xor
or
or
sub
dec
loop
sbb
shll
mov
or
dec
sub
mov
mov
add
icebp
in
cmp
pop
dec
cmp
or
loopne
les
add
lods
es
push
jge
xor
mov
pop
outsl
jnp
adc
and
and
dec
pop
mov
mov
or
and
aam
add
out
ret
int
je
jo
fimull
insl
lret
stos
arpl
push
inc
pop
pop
xor
out
add
call
std
insb
inc
push
inc
pop
insl
push
ret
subb
cwtl
push
sbb
lcall
pop
outsb
xlat
xlat
pop
aam
lret
inc
pusha
push
inc
add
push
gs
xor
pusha
into
jne
mov
insb
out
jle
imul
std
mov
cmp
jo
iret
jo
pushf
shrb
xchg
lret
ss
mov
sub
xchg
mov
pop
adc
sub
adc
cmpsl
addb
ss
call
ja,pt
outsb
lahf
push
xor
xchg
adc
sbbl
sbb
fldenv
pushf
mov
mov
and
roll
fsubl
test
cs
sbb
in
xchg
and
push
ss
lea
mov
add
push
ds
data16
mov
and
sbb
jno
dec
popa
clc
inc
mov
xor
les
pop
mov
adc
jle
popf
mov
push
jmp
imul
and
push
arpl
cmp
mov
sbb
mov
ljmp
imul
lods
test
xor
xor
divl
jne
les
mov
sub
iret
mov
stos
sbb
into
shrl
cmp
mov
int
push
add
lods
sbb
fcoms
cli
aaa
fldcw
mov
das
xchg
pop
inc
int3
and
arpl
sub
mov
arpl
testb
xor
pop
mov
cmpsb
xor
dec
adcb
add
xor
sbb
mov
dec
push
mov
push
in
cs
lods
push
insl
andps
and
je
mov
dec
popa
out
xchg
inc
enter
dec
mov
mov
push
mov
les
push
push
ljmp
cmpsb
jecxz
pop
xor
jnp
out
push
inc
push
inc
negl
dec
inc
push
js
sub
sub
pushf
jp
dec
inc
and
andl
mov
icebp
sbb
sbb
cmp
inc
mov
or
iret
sub
push
lar
mov
sub
sub
mov
pop
sbb
inc
add
jl
fwait
stos
ss
ret
insl
loope
add
xchg
clc
jae
enter
cmpsb
dec
inc
cwtl
cmp
inc
popf
rorl
mov
xor
push
addr16
imul
imul
mov
ret
and
or
mov
je
testl
xor
fiaddl
xor
adc
sbb
lcall
or
mov
lods
call
cmp
mov
out
pop
cli
or
add
jno
mov
dec
into
adc
xchg
dec
xor
mov
xor
icebp
dec
and
sub
addl
push
jmp
lods
sub
roll
jo
stos
or
popf
jp
jecxz
inc
or
add
cld
dec
daa
scas
jecxz
mov
push
xchg
xchg
sarb
adc
xchg
daa
adc
rorl
daa
jno
add
lods
fwait
jmp
jp
sbb
leave
add
and
sbb
add
loopne
ss
cwtl
inc
sub
cmp
add
or
mov
adc
mov
ret
add
rcll
pop
fwait
xor
xor
shll
jmp
xor
lret
gs
scas
call
xorl
xchg
or
dec
iret
sub
call
push
jno
adc
add
rolb
xchg
push
addl
outsl
ret
pusha
test
test
xor
rolb
adc
gs
icebp
idivb
cld
xchg
mov
adc
lcall
inc
sub
sub
and
push
loopne
shl
js
shrl
sbb
mov
rcll
push
lret
cmpsb
inc
fmuls
xchg
add
mov
and
les
lds
sbb
shll
and
xorb
cmpsb
add
cmpsl
adc
sbbl
xchg
or
cmp
add
add
lret
or
stc
dec
mov
mov
pop
stos
sub
adc
ja
inc
mov
fstp
mov
sub
sub
push
pop
inc
push
dec
not
mov
ljmp
adc
fwait
and
cmpl
cmp
mov
les
cmpsl
and
je
add
add
dec
or
and
mov
es
sub
cmp
dec
stos
andb
rcrl
js
andb
add
bound
daa
jne
xor
addr16
and
inc
sbb
stos
mov
sub
add
and
inc
arpl
or
mov
imul
mov
xor
mov
mov
mov
push
jmp
call
mov
jae
sbb
dec
or
cld
mov
pop
fildl
movsl
adc
xor
dec
adc
mov
cmp
js
jg
or
mov
mov
lods
int
jae
call
inc
sub
lret
cli
or
add
lock
into
adc
lock
adc
aas
es
add
or
sub
adc
inc
movsl
add
outsb
sbb
scas
out
add
out
fsubl
gs
sub
ret
lret
pop
xchg
bnd
mov
xchg
int3
insb
icebp
daa
out
out
sbb
inc
call
xchg
es
xchg
jno
repz
mov
call
adc
mov
pop
loopne
imul
lods
gs
cmp
fmuls
arpl
outsl
inc
and
mov
mov
leave
push
in
pusha
pusha
jl
lock
jmp
sbb
dec
sbb
cmp
sub
pop
sahf
push
push
cmp
adc
aaa
ja
xor
push
adc
mov
iret
call
imul
or
cli
repnz
icebp
mov
jl
pop
sub
out
adc
mov
stc
enter
or
iret
imul
fcomip
sbb
push
or
rcrb
movsl
icebp
add
test
or
adc
shlb
popa
or
aas
pop
lret
cmpsl
mov
int
xchg
cs
push
sarb
lcall
push
sti
lret
inc
xchg
ficompl
cltd
bound
inc
lds
push
and
inc
add
inc
cmpsl
inc
stos
inc
add
xchg
or
rorl
sub
add
pusha
loope
cmp
inc
mov
xchg
xor
out
outsl
xchg
into
and
sub
mov
pop
adcb
pop
sti
bound
lds
nop
sbb
iret
pushf
lock
js
cmp
sbb
pushf
testb
mov
fwait
stc
mov
lret
cli
add
sahf
push
js
pop
aad
sbb
mov
jo
dec
mov
dec
out
lods
pop
out
mov
mov
pop
les
jp
imul
push
sbb
jne
cmp
lods
call
mov
cmp
jmp
push
adc
jmp
in
sbb
cmp
fcoml
lods
mov
aam
add
jle
lods
pop
add
sbb
push
add
push
sbb
ja
fstpt
loopne
scas
xlat
jl
and
pop
cmpb
mov
call
xor
adc
push
shrl
fstpt
add
push
imul
aam
je
call
push
push
xor
jbe
push
push
in
iret
pop
and
mov
in
xchg
sub
aaa
mov
repz
xor
inc
in
lock
ds
outsl
fistpl
daa
and
jb
out
pop
sub
enter
pop
fisttpl
test
hlt
pushf
and
xchg
push
ret
insb
iret
pop
les
call
es
fsubs
adc
add
shrl
mov
mov
stc
add
adc
rcr
les
lds
aas
shll
dec
movb
mov
int
test
cmp
int
lret
ss
inc
subl
in
pop
sub
movsl
scas
adc
aaa
cld
add
push
js
lcall
add
ja
outsl
jae
xchg
jbe
inc
adc
adc
jmp
fnsave
and
adc
jns
jnp
mov
lret
mov
jmp
sub
add
lods
scas
mov
in
pop
or
jle
sub
xchg
sbb
ret
add
lods
shl
jno
cmp
inc
fnstcw
add
mov
lea
inc
inc
add
or
outsb
ret
jno
jnp
pop
mov
mov
inc
sbbl
fldt
sub
nop
and
outsb
in
in
out
jl
fcompl
and
lods
clc
push
cmp
out
sub
and
mov
jge
out
scas
stos
pop
lret
stos
loopne
lcall
sub
xor
clc
push
xor
shl
mov
andl
icebp
repz
es
sbb
jo
push
std
jg
movsb
rcl
cmpsl
in
rcr
mov
push
sub
inc
sbb
js
xchg
repnz
lret
hlt
mov
jns
cmp
sbb
scas
push
cmp
loope,pt
mull
xchg
lds
or
adc
icebp
loope
sub
xor
mov
push
xor
ljmp
test
sub
jbe
push
scas
and
aas
sbb
test
push
mov
or
xchg
ret
inc
cld
add
sub
jge
shlb
dec
xchg
and
insb
es
cmpsb
cs
xor
in
test
inc
push
sbb
add
sbb
aad
jle
iret
insl
int
movsl
push
add
cmc
scas
mov
jne
shrl
pop
cmc
pop
enter
outsl
sub
pmaddwd
cwtl
ss
pop
in
sbb
push
clc
mov
shl
xor
fimuls
out
loope
jmp
add
stos
repz
jo
sub
jo
mov
fsubl
divb
lods
imul
rcrb
es
and
sbb
lock
pop
test
jge
pushf
pusha
sub
repz
lock
stos
loopne
or
insl
xchg
call
sub
pop
lods
xor
add
adc
fists
int3
out
shll
aas
ss
incl
add
jmp
cmp
pop
cld
sub
sub
pop
clc
popa
push
jp
jnp
mov
leave
cmp
inc
xor
push
aaa
add
dec
dec
nop
loope
push
or
sub
dec
inc
pop
subl
push
scas
sub
mov
jl
xchg
fwait
mov
mov
popa
pop
mov
insb
icebp
add
movsb
cmp
pop
sbb
out
push
pop
xchg
pop
xchg
mov
inc
lods
jne
ja
and
cmp
xchg
sbb
dec
dec
nop
out
xor
imul
js
xchg
movsb
dec
push
xchg
dec
mov
add
mov
int3
mov
push
jmp
stos
cwtl
and
mov
cmpsb
ret
decb
pop
es
popa
pop
fldl
aad
dec
aaa
lret
int3
pop
insl
inc
nop
mov
fisubl
jno
xchg
jnp
les
sub
rolb
stos
pop
push
in
or
sarb
dec
xchg
inc
cmp
mov
test
sbb
push
adc
andl
jmp
xchg
xor
into
add
cwtl
dec
cmpsb
push
mov
movsb
add
test
loope
and
push
pop
gs
xchg
addb
xor
jmp
add
xor
enter
sub
fdivrs
jle
lcall
addb
cmp
int
fsubrl
andl
shlb
aam
sub
cmpb
je
push
sahf
addl
popa
xor
out
sub
push
nop
into
cmp
std
pop
cmp
daa
test
mov
xor
push
movsb
and
jle
jl
add
je
fstpt
dec
jp
add
shlb
push
test
jl
cmp
add
lods
dec
orl
pushf
hlt
jge
jle
add
adc
popa
lock
lret
and
adc
xor
lods
inc
and
or
or
push
and
in
push
inc
cmp
out
xchg
and
sbb
das
inc
aam
jl
jo
or
inc
dec
sbb
clc
test
lods
pop
or
adc
dec
add
dec
and
cs
add
pusha
or
cmp
fisubrs
push
mov
dec
aas
loope
push
scas
pusha
insb
nop
lods
pop
aam
xchg
pop
push
xorl
ljmp
lods
and
and
and
push
pushf
je
mov
lods
pusha
aaa
outsl
stos
jns
nop
sub
xor
scas
mov
add
popa
pop
mov
cmp
scas
jns
stos
sub
das
jo
mov
scas
inc
xor
jnp
addb
inc
jo
push
push
xchg
mov
sbb
das
js
push
adc
sub
mov
clc
out
andb
jo
mov
mov
cmp
imul
movsl
jo
int
movsb
jmp
fisttps
push
out
call
sti
push
xchg
lret
jmp
jp
cld
cmp
xchg
cwtl
cwtl
cmp
iret
into
repnz
out
js
mov
inc
sub
stos
adcl
jnp
sbb
dec
push
cmp
sbb
add
mov
out
sbb
test
xchg
std
into
into
push
jmp
testl
push
sub
inc
mov
out
nopl
sti
xchg
inc
sbb
and
mov
jmp
fldcw
fmul
push
jne
lret
ds
sub
dec
xlat
pusha
test
femms
decl
mov
fcomp
sti
cmp
popa
add
jno
jo
fcmovnb
push
lea
es
xchg
xor
inc
sbb
add
add
pop
mov
or
inc
adc
fs
mov
or
dec
sbb
xor
xchg
dec
sbb
pop
fadd
and
test
or
adc
std
cmp
jge
in
enter
mov
gs
jno
lds
jo
push
jne
xor
jae
adc
xchg
sbb
or
add
cmpsl
sub
rorl
mov
and
mov
pop
repz
popa
fldt
sbb
ds
gs
les
into
popf
nop
xor
sub
addr16
ljmp
fstpt
jne
fsts
je
xor
mov
mov
sti
add
pop
fdivrl
jno
push
or
loopne
imul
or
popa
jmp
test
inc
cltd
inc
push
fldcw
dec
arpl
es
sbb
adc
ss
ss
addr16
addr16
out
dec
add
mov
pop
shll
in
and
push
icebp
and
jnp
loopne
and
dec
adc
and
add
ljmp
xchg
mov
daa
ret
ljmp
shl
inc
aaa
loope
push
gs
and
shll
mov
or
and
ds
das
cli
sub
lcall
sti
mov
aaa
sbb
push
inc
push
rol
fdivl
jo
inc
fcoms
or
mov
jno
dec
mov
lret
fwait
jae
test
cwtl
jb
mov
adc
xor
push
call
and
and
pop
xchg
inc
adc
loopne
in
sbb
adc
daa
mov
pop
push
rolb
scas
lds
xor
xchg
ds
inc
mov
es
xor
pusha
mov
add
or
dec
jecxz
and
out
daa
out
call
jno
add
cmp
inc
jge
out
arpl
sub
cmc
and
push
jnp
lock
pop
dec
int3
sub
daa
add
push
popf
iret
lret
sub
pusha
adc
push
negl
push
sti
push
idivl
aaa
test
cmp
mov
push
adc
ds
pop
dec
adc
jmp
adc
add
adc
out
mov
push
adc
adc
aam
outsb
push
out
sbb
andb
cmp
call
jle
cmpsl
loop
jecxz
pop
and
ds
inc
cmp
xor
sub
mov
cmpsl
or
fwait
mov
cmp
rolb
jmp
jne
xor
loopne
sub
ja
add
pop
sahf
inc
dec
out
jns
add
js
mov
call
dec
sbb
or
cmp
das
push
sub
addl
push
adc
arpl
dec
idiv
dec
hlt
insw
xor
cmc
and
xlat
dec
jecxz
lds
out
inc
dec
pop
mov
add
mov
inc
test
xchg
sbb
sti
mov
push
int3
and
adc
jb
mov
pop
mov
imul
add
xor
jp
xlat
je
sbb
or
inc
jmp
pop
add
scas
inc
imul
dec
inc
add
or
push
lods
mov
mov
cmp
jne
cmc
mov
xorb
lcall
mov
mov
adc
ficompl
push
aaa
ja
loopne
arpl
jae
popa
nop
scas
xchg
push
dec
vmptrld
add
lods
and
inc
rorb
ljmp
test
xchg
xlat
and
pop
mov
sbb
dec
test
insb
fucomip
dec
sarb
xchg
lea
lock
inc
jbe
push
in
add
lock
pop
lds
dec
jg
daa
or
xor
dec
movsb
in
str
test
sbbb
sbb
popa
negb
mov
dec
out
cmp
leave
lock
call
xor
xor
lods
push
ss
push
inc
sahf
and
js
inc
jno
cmpl
orb
cli
xor
xchg
inc
jmp
iret
jmp
pop
jl
mov
pop
les
ss
jb
jno
pop
loope
arpl
repnz
icebp
add
in
sbb
jmp
es
aam
inc
cmc
js
mov
cld
rcrl
xchg
shrb
cmp
jns
mov
cmp
test
xchg
jmp
aaa
lock
mov
inc
pop
mov
add
add
mov
enter
or
ss
test
sbb
fucomp
loope
es
in
call
and
xlat
fadds
aas
or
inc
cmp
aas
or
clc
loop
sti
sbb
es
or
adc
outsb
jbe
mov
nop
cmp
test
add
jnp
inc
cmp
adc
test
mov
sub
fldcw
xor
or
xchg
and
adc
dec
lods
fstl
loop
aaa
add
add
or
cmpl
imul
mov
cmp
push
add
or
movsb
daa
sbb
subb
in
add
jg
add
insl
out
adc
cmp
mov
fs
pop
es
cmp
js
daa
pushf
xlat
or
xlat
jno
enter
xchg
es
jge
mov
shrl
push
inc
push
cmp
test
mov
sahf
out
iret
popf
sub
or
popf
and
icebp
into
add
pop
popa
push
aas
arpl
out
xchg
bound
and
test
mov
sahf
sbb
mov
in
adc
push
or
inc
push
cmp
sbb
aam
push
pop
es
aaa
or
arpl
pop
xor
ja
cld
scas
cmp
pop
jg
cmpl
rorb
mov
aam
fucomp
jp
test
push
push
out
ja
add
jae
das
jb
cmc
stc
mov
and
xchg
or
sub
sti
sub
pop
outsl
sbb
das
pop
call
cmp
add
jp
js
inc
fsubrs
xor
add
mov
dec
push
xchg
xor
adc
jg
jo
orl
mov
test
dec
xchg
outsl
mov
sub
lret
sbb
sarb
mov
adc
lcall
cmc
mov
xchg
add
inc
push
adc
imul
imul
or
mov
add
subl
pop
or
shlb
inc
testb
std
xchg
aad
sub
xor
ficompl
push
jo
add
sbb
inc
mov
jp
push
xchg
xchg
xchg
mov
sub
in
fsubl
inc
jbe
mov
dec
add
push
mov
loope
and
and
cmp
in
mov
in
pop
imulb
stos
mov
in
aad
lds
xchg
sbb
or
jns
adc
test
leave
push
shrl
dec
pop
or
das
sti
xchg
push
adc
add
dec
cmp
pop
jmp
add
and
and
pop
out
xor
pushf
adc
scas
inc
icebp
popa
ds
andl
daa
data16
les
sub
test
or
rcll
inc
mov
into
pop
shrb
mov
jnp
sbb
sub
enter
dec
addr16
cmp
into
in
sub
mov
inc
shlb
add
adc
sub
bound
rcrb
pop
ja
clc
jno
test
dec
inc
movsb
or
add
sub
pop
and
sbb
jne
dec
iret
sahf
mov
push
jmp
js
inc
xchg
push
sub
sarb
or
rolb
jp
movl
lcall
mov
add
test
loope
testb
clc
jle
pop
mov
lret
push
sbb
movaps
movsb
repnz
in
test
cmp
add
sbb
fs
xlat
gs
mov
mov
orl
xchg
adc
pop
add
pop
arpl
xchg
cmc
js
pop
sbb
mov
sbb
pusha
sub
mov
cltd
fwait
test
int3
xchg
and
xchg
sub
xchg
sbb
or
xor
mov
and
into
sbb
fistpll
addl
mov
es
sub
mov
mov
or
mov
sahf
rolb
push
setl
cmpb
es
add
add
loope
xor
xor
cmpsl
cmpsb
flds
test
mov
cmp
xchg
stc
cs
push
inc
loopne
sub
lock
add
into
adcl
jl
cld
push
add
mov
add
push
pop
cmp
mov
and
mov
rcl
test
mov
adc
mov
cmpsl
push
sbbb
loope
mov
mov
push
mov
data16
call
sub
aad
xor
movsb
sahf
or
jmp
xor
mov
subl
add
inc
rorb
and
push
dec
stos
dec
add
mov
es
addl
xchg
and
or
sbb
xchg
daa
add
test
outsb
ret
fstps
dec
pusha
pop
cwtl
jns
add
or
lret
insb
add
xchg
jns
adc
andl
inc
dec
loopne
push
push
test
and
cmpsb
mov
cmc
xchg
adc
mov
jge
nop
cmpsb
xchg
shrb
mov
add
sti
sub
loopne
jnp
jne
jle
and
mov
cmp
xor
mov
mov
cs
xchg
mov
lock
cmpsl
jl
iret
add
dec
dec
inc
dec
sbb
inc
mov
push
and
dec
out
cmp
xor
cmp
enter
les
cwtl
xor
push
sbb
scas
sbb
into
arpl
addr16
pop
jmp
xchg
shl
das
nop
ljmp
adc
jmp
push
xchg
push
add
mov
lods
bound
icebp
sbb
cmpsb
pop
or
or
arpl
je
xchg
xor
mov
xor
inc
dec
dec
inc
insb
dec
mov
insb
dec
adc
xor
cli
cmpb
fdivs
mov
jae
and
inc
jg
and
dec
xchg
rcr
pop
add
out
sbb
push
fdivp
stos
lret
pop
and
adc
mov
jmp
daa
cmp
outsb
or
sbb
aad
mov
mov
out
in
push
push
pop
dec
push
out
daa
fwait
xchg
nop
push
dec
ret
loop
push
cmpsb
leave
push
xlat
test
sbb
rcrb
pop
xorb
daa
sub
dec
inc
xor
sbb
cltd
xchg
xor
rorl
stos
add
test
add
test
mov
mov
pop
add
push
and
sbb
pop
add
sub
and
push
add
lcall
jae
testb
dec
jle
sbbb
add
into
push
mov
mov
mov
fwait
test
mov
xchg
dec
inc
adc
pop
out
xchg
lods
jns
pop
mov
loope
stos
nop
push
xchg
xchg
adc
dec
add
test
rorl
into
sahf
js
push
sub
push
cmp
mov
pop
xchg
daa
pop
daa
xchg
add
rclb
stos
xor
xchg
cmpsb
in
adc
adcl
mul
sub
and
movsb
pop
xchg
adc
popa
add
ds
imul
in
pop
or
sub
lahf
pop
add
call
pop
xchg
cmp
inc
push
outsl
lcall
out
lret
imul
aad
ror
movl
mov
mov
inc
hlt
pop
popf
sbb
cmp
cli
xchg
es
jg
or
inc
and
imul
xor
bound
push
inc
inc
nop
sub
inc
mov
adc
pop
stos
fsubs
jmp
mov
dec
xorb
sub
inc
cmp
ret
loopne
addb
adc
cwtl
sub
xor
ja
and
or
and
sbb
jl
pop
adcb
push
sub
cmpsl
andb
mov
inc
adc
push
popf
je
ljmp
inc
mov
lock
test
dec
sbb
dec
shl
push
and
mov
rorl
mov
test
adc
mov
xchg
xor
adc
mov
outsb
cmpsl
outsb
push
jo
scas
push
mov
and
push
adc
int3
bound
add
mov
std
sbb
pop
les
test
pusha
xchg
sub
int3
xchg
and
push
push
bnd
sbb
ret
or
mov
stos
das
dec
and
mov
and
and
adc
sub
aam
ror
js
pop
and
movb
ret
jb
xor
lods
dec
movsb
mov
add
or
test
push
notb
test
adc
adc
push
mov
xor
shrl
data16
adc
cltd
cmp
movsl
insl
sub
cs
mov
movsb
imul
or
out
push
inc
pop
or
xchg
push
dec
cmpl
push
nop
mov
rcrb
xor
out
push
jg
mov
out
cmp
lods
mov
push
bound
xchg
mov
les
iret
jmp
mov
rcrb
or
or
cmp
sbb
sbb
inc
addb
rclb
jo
movsb
sub
popa
sbb
pop
dec
dec
add
loopne
jecxz
adc
repnz
sub
insl
test
call
dec
xchg
adc
mov
jmp
icebp
xor
mov
push
adc
jne
jg
in
inc
ds
xchg
cmp
ss
notb
inc
and
and
jo
mov
mov
mov
pop
and
adc
xchg
adc
sub
cmpsb
jle
sbbb
rolb
adc
inc
je
jb
jns
inc
add
add
movb
rolb
xchg
cmpsl
and
pop
test
mov
mov
cmpsl
movsb
mov
adc
pop
sbb
shll
bound
cmp
or
daa
mov
outsl
xor
lods
andb
mov
mov
xor
dec
dec
jns
aad
stos
sub
push
ficompl
movsb
or
addr16
mov
scas
scas
or
int
jle
dec
xchg
jp
lahf
imul
jp
sti
and
or
cmp
mov
lret
insb
inc
leave
ljmp
fimuls
cmpsb
mov
mov
ret
sub
repnz
or
xchg
fadds
pop
inc
fwait
imul
inc
mov
loope
xchg
fcmovnu
ror
mov
or
mov
andnps
pop
mov
jmp
push
add
add
dec
repz
push
mov
nop
jmp
popf
fcoml
ror
sti
inc
add
mov
test
jmp
stc
es
sti
mov
push
and
ltr
lcall
adc
inc
sbbl
clc
mov
mov
add
mov
iret
and
mov
es
sarl
xor
sbb
dec
push
inc
loope
dec
sub
sub
xor
pop
aad
add
add
test
add
nopl
pusha
mov
mov
adc
call
ret
xchg
inc
outsb
in
add
or
xchg
or
xchg
xor
je
and
and
xor
xchg
test
call
dec
and
stos
addb
push
mov
test
cmp
mov
push
jne
inc
cmp
lock
sub
cmpsb
jb
xor
and
dec
push
or
daa
and
xor
pop
adc
es
pop
cmp
js
jne
and
in
lods
mov
dec
xchg
or
lcall
ret
cs
fildll
mov
pusha
sub
push
jno
in
and
gs
cwtl
shll
mov
out
cmp
das
jl
adc
daa
or
add
add
or
sbb
or
add
adc
mov
push
pushf
cmp
loope
and
adc
sub
lods
and
pop
fsubrl
sbb
rcll
inc
xchg
pusha
out
loopne
stc
cmp
lds
adc
jmp
aad
or
mov
jl
ret
push
pop
xor
daa
jo
cwtl
push
inc
cmp
popa
pop
int3
push
push
add
pushf
mov
movsl
jl
outsb
dec
mov
sti
out
movsb
pusha
adc
mov
mov
or
nop
mov
cmp
pop
popf
cwtl
mov
test
xor
setns
pop
or
push
dec
pop
mov
adcl
dec
nop
xchg
jp
scas
pushf
mov
mov
xchg
lds
push
sbb
and
dec
mov
and
pushf
mov
mov
add
or
pop
adc
lret
or
loopne
leave
add
addr16
and
mov
xchg
add
inc
mov
pop
add
insb
stc
nop
lcall
cmpsb
and
aas
sub
adc
dec
xor
imul
add
and
lock
pop
adc
add
inc
xor
sarb
lret
lcall
add
addl
pusha
cmpsb
std
mov
mov
adc
insb
and
jge
inc
lock
clc
mov
lods
push
sub
and
xchg
mov
mov
lea
xchg
clc
push
aad
loopne
and
pop
xchg
add
lock
loopne
adc
pop
dec
test
dec
inc
or
dec
outsb
sbb
push
add
and
or
stos
mov
and
leave
xchg
popf
mov
mov
data16
push
sub
jbe
ljmp
inc
add
add
in
insb
dec
add
data16
andl
and
in
inc
lahf
jp
add
sub
add
mov
mov
dec
pop
mov
ljmp
sbb
mov
mov
pop
inc
inc
insb
add
cs
xchg
push
xor
adc
fcomps
pop
loop
xchg
or
outsl
es
aam
stos
xchg
add
pop
jne
sar
pop
mov
xchg
mov
sbb
leave
sbb
repnz
inc
das
add
jle
or
aam
adc
das
or
ret
pop
iret
pop
xor
or
mov
sbb
stc
jne
int
loop
or
aas
daa
adc
rorw
jmp
mov
adc
sbb
ficoml
adc
fmuls
or
mov
pop
add
or
or
dec
pop
push
mov
or
mov
cltd
in
popa
test
sahf
mov
lds
cmpsb
ficoml
mov
fidivrs
fstpt
test
and
in
or
sub
or
cltd
movsl
push
aaa
add
or
sub
out
sbb
or
mov
inc
inc
sbb
jb
add
int3
out
fiadds
in
inc
jo
inc
addr16
fistpl
and
xor
dec
adc
push
fisubrs
pop
cld
inc
inc
int
in
or
add
or
or
jb
cmovno
lds
xorb
orb
xchg
add
sbb
pop
and
push
lds
and
cwtl
pop
lods
jge
cmp
add
add
cwtl
xchg
add
inc
js
push
dec
bound
dec
mov
sbb
mov
cmp
cmpsl
add
dec
xor
mov
xrelease
adc
jl
sbb
sbb
mov
xchg
lock
fcoml
iret
sub
cli
ja
jne
pushf
testl
or
cltd
stos
ja
adc
adc
push
cmc
adc
addl
test
mov
lock
push
clc
data16
cwtl
push
dec
push
mov
adc
rclb
stos
sub
ljmp
test
es
and
or
xchg
sub
push
sarl
cmp
push
inc
inc
enter
ja
jne
pop
data16
lea
inc
je
insl
inc
shrb
outsb
or
cld
mov
jp
jle
sub
lret
enter
ficompl
xchg
xor
cmp
xorb
jg
aad
jnp
sbb
icebp
push
rolb
sbb
cmp
and
cs
fisubrl
adc
pop
sbbb
pop
out
sbb
cmp
jg
jecxz
xlat
sbb
roll
ss
prefetch
or
push
repnz
mov
ret
add
dec
sbb
arpl
mov
andl
xlat
jns
testb
jge
dec
and
daa
lcall
pop
and
mov
pop
sub
xchg
ret
push
jne
enter
or
sub
aas
shlb
or
pop
adc
aam
mov
loop
add
push
push
add
into
daa
cli
push
xorl
roll
outsl
loopne
or
push
lret
addr16
ja
lcall
mov
add
out
sahf
imul
pop
je
add
mov
push
dec
push
dec
das
stos
inc
loope
mov
push
test
out
dec
push
mov
add
adc
stc
xchg
push
pushf
add
adc
mov
bound
adc
xchg
mov
fmuls
rcl
push
add
iret
dec
pop
bound
add
pop
push
mov
mov
jecxz
shld
add
test
das
push
inc
cmp
sbb
and
sbb
stc
cbtw
push
xor
into
and
inc
push
push
xchg
push
ret
mov
icebp
in
cmpsl
aam
lods
sub
push
lods
mov
fmull
sub
ljmp
add
fiadds
scas
js
cmp
dec
add
and
or
into
pop
dec
int
inc
dec
into
jl
nop
cmp
pop
scas
jp
mov
cli
pop
shr
fstl
xorl
pop
mov
push
cltd
adcl
lahf
pop
cmp
daa
push
mov
and
in
bound
lods
movb
cld
cli
hlt
xchg
sarb
mov
cmp
pop
fwait
daa
iretw
and
fs
icebp
repz
fstl
push
xchg
cmpsb
flds
aas
les
add
dec
cmp
xchg
jle
lods
sbb
jne
rol
mov
push
addb
or
push
jmp
pop
in
cmp
lods
fidivs
xchg
dec
dec
jmp
mov
outsb
mov
sub
ret
lahf
adc
pop
adcb
xchg
and
dec
mov
pop
les
js
in
mov
fldenv
lret
mov
adc
sbb
xchg
fidivrs
mov
sub
add
sbb
sbb
sbb
mov
jb
int3
or
adc
mov
mov
jb
pop
addl
movl
and
sti
add
enter
jecxz
xor
or
pop
mov
adc
pop
roll
add
adc
les
testb
add
jecxz
add
mov
aam
ret
mov
jno
int
mov
and
add
inc
ret
outsl
test
out
shrl
sub
fdivr
sub
push
arpl
pushf
inc
sub
or
cmp
add
mov
add
mov
dec
mov
fists
xchg
cmp
addb
dec
add
mov
mov
or
jle
testl
mov
out
and
cmp
xor
cs
xchg
add
leave
mov
lcall
les
leave
add
mov
jb
push
push
or
icebp
data16
test
pop
out
arpl
das
dec
sbb
cmpsl
das
push
jmp
loope
cmc
add
movsl
pop
movsl
push
hlt
xchg
scas
movsb
inc
shll
lcall
sbb
iret
push
adc
push
mov
and
call
inc
insb
mov
daa
inc
jecxz
and
inc
pop
pop
mov
mov
mov
pushf
sub
in
or
inc
addr16
out
addb
pop
outsb
filds
or
adc
jle
aad
dec
andb
mov
fisttpl
mov
push
adc
ja
aaa
arpl
test
outsl
aam
push
adc
xchg
mov
cmpsb
push
pop
lods
sub
imul
push
push
loopne
or
in
fstpt
dec
es
insb
call
test
and
cltd
jo
sti
cmp
sti
lret
scas
jp
dec
jg
jge
jb
add
rcl
fisttpl
pop
adc
pop
test
mov
and
cmc
fwait
jp
push
in
int
cmp
sarb
inc
stos
xchg
subb
mov
pusha
daa
das
stos
cmp
inc
pop
dec
or
push
mov
out
mov
jle
sbb
adc
test
cmp
mov
inc
pop
test
add
adc
mov
test
les
subl
mov
sbb
mov
inc
gs
aas
js
rolb
dec
enter
fcomps
xlat
scas
add
add
xchg
add
push
xor
push
int3
cmc
sahf
xchg
mov
mov
push
outsl
lods
fisubl
jmp
divb
mov
mov
inc
sti
je
or
mov
pop
mov
mov
sub
push
xor
cmpsl
mov
adcb
xchg
mov
pop
add
mov
xor
iret
stos
dec
add
adc
imulb
xorb
insb
push
fdivrl
jle
stos
mov
adc
add
enter
sbb
jo
sub
xor
pop
sub
and
rclb
ljmp
outsb
imul
wbinvd
xorb
xor
shll
fwait
xchg
xor
mov
mov
jbe
in
and
mov
scas
pop
jg
add
jge
cmp
mov
or
sbb
leave
shll
lea
jge
xlat
cmpl
or
dec
push
stos
scas
add
xchg
scas
mov
sbb
insb
mov
shll
sub
mov
or
xor
lea
shr
mov
push
leave
push
lcall
add
outsl
addl
jnp
pop
push
push
jno
fildll
sbb
icebp
or
sub
push
sub
insb
inc
lea
divb
sahf
bound
lods
mov
nop
push
sub
mov
xor
inc
les
pop
push
and
pop
loop
inc
adc
cmp
mov
inc
movsl
test
jbe
adc
scas
stos
sbb
rolb
and
inc
sub
xchg
rol
cmp
adc
push
pop
lds
push
and
sbb
xchg
jl
jae
dec
inc
sti
lods
fsubs
jne
ss
inc
xchg
mov
jo
mov
mov
xor
orl
je
fmul
mov
push
fcom
popa
inc
aam
add
jg
test
fldt
xchg
and
dec
xchg
adc
and
test
mov
or
iret
dec
ficoml
daa
stos
or
es
push
push
in
push
adc
sbb
add
sub
adc
xor
pop
cmp
inc
je
iret
adc
xor
jns
dec
xor
and
xorl
es
push
sarl
and
arpl
out
cmp
cmp
incb
out
and
jne
testb
add
and
imul
push
inc
int
or
out
jno
sahf
cmc
mov
jp
das
icebp
icebp
in
xlat
inc
xor
mov
or
mov
je
cmp
add
in
jno
xor
inc
adc
jae
inc
mov
sub
loop
jle
jno
cmp
push
mov
inc
call
adc
fbstp
call
cmp
js
icebp
xorl
xor
cmp
jg
pusha
add
mov
scas
js
xchg
mov
adc
add
insb
sbb
sti
mov
push
add
sarb
push
das
jns
and
aaa
xor
pop
ficoml
dec
mov
flds
jmp
dec
int3
stc
cmp
mov
and
cs
in
fisubs
dec
sub
rcl
test
sbb
pop
jne
cmpsl
mov
inc
adc
stos
mov
add
lret
sub
and
xchg
loopne
xchg
outsb
stos
mov
fbld
out
mov
sbb
aas
es
test
sbb
bound
rolb
sbb
cmp
xlat
mov
cmpsb
sub
lcall
loop
sub
mov
fisttpl
lods
lods
sbb
lods
pop
push
inc
pop
push
jl
push
push
stc
and
jne
fimull
cmpsl
aaa
lock
jno
das
scas
jb
pop
in
std
inc
int3
clc
mov
aas
add
sbb
push
jo
cltd
mov
das
xor
add
out
xor
insl
mull
test
ficomps
or
or
cwtl
adc
xlat
icebp
jge
mov
sub
pop
pop
subb
add
mull
imul
jno
shrb
loope
movsl
fists
push
fstpt
push
inc
sub
and
or
shrb
xchg
test
leave
dec
sbb
xchg
leave
je
inc
cmp
mov
jle
lea
jecxz
test
nop
jns
pop
pop
mov
pop
xor
ficoml
xchg
adc
jecxz
xor
jecxz
sti
jg
das
sbb
dec
add
out
loopne
stos
pusha
mov
scas
gs
mov
gs
add
mov
push
push
adc
sub
adc
test
scas
ror
jge
loopne
and
sahf
jle
pshufw
mov
nop
adc
jae
jbe
sub
repz
lds
sub
daa
xchg
shrb
adc
dec
jmp
int3
mov
jmp
sbb
xor
pop
inc
and
bound
pop
jo
xchg
sbb
repz
mov
sar
sub
outsl
imul
add
mov
sub
add
loopne
insl
mov
push
std
dec
push
jl
mov
popa
pop
hlt
pushw
add
cld
jp
rorl
sub
and
pushf
add
mov
push
imul
gs
xchg
stos
pusha
mov
mov
inc
adc
fistpl
icebp
cmp
lods
in
jns
and
and
push
lahf
add
in
xchg
stos
or
fstps
outsb
xchg
fisttpll
inc
mov
into
or
insb
stc
aaa
scas
fwait
ss
xor
add
sub
or
mov
jo
add
xchg
cmp
adc
fadd
mov
iret
stos
fists
shl
sub
dec
and
cmc
xorb
test
sbb
add
xor
add
in
outsb
adc
adc
rolb
sbb
adc
push
fxch
and
jle
mov
out
pushl
cmpsb
out
xor
fwait
insl
loopne
sbb
aad
test
test
or
orb
push
cmp
mov
es
or
nop
and
mov
jnp
inc
call
ret
push
xchg
test
gs
ret
and
lds
xor
jb
rolb
cmp
push
jae
dec
sarl
dec
or
js
jb
data16
mov
test
cmove
lods
inc
lock
roll
data16
and
mov
jle
add
dec
dec
js
or
lock
fistps
inc
adcl
imul
xchg
xor
xor
push
cwtl
push
mov
sbb
mov
inc
stos
pop
mov
mov
repnz
pusha
jo
add
add
outsl
xchg
push
insl
xchg
insb
int
add
dec
sbb
outsb
ja
ja
pop
or
movsl
adc
sbb
xor
mov
mov
lods
or
pop
push
sub
jl
ret
pop
ljmp
mov
rcll
mov
lcall
dec
pop
adc
mov
push
lock
and
or
daa
xor
sbb
mov
das
push
mov
aad
jo
aam
push
loopne
xlat
pop
mov
into
test
add
aad
clc
adc
jmp
adc
fistpl
push
fdiv
mov
pop
out
in
jle
dec
xchg
shll
hlt
or
loopne
loope
push
movsb
adc
mov
das
mov
xor
movsb
sub
inc
xchg
mov
popa
cmpsl
add
and
pop
pop
mov
aaa
push
imull
mov
scas
add
into
xchg
mov
and
scas
add
sub
mov
outsb
mov
push
ret
je
inc
mov
dec
test
pop
fs
iret
cmp
test
or
jo
add
in
loopne
add
inc
push
cwtl
and
mov
cmp
test
into
insb
add
mov
fs
iret
js
adc
loop
jnp
add
xlat
aaa
shrb
loopne
pop
fsts
popf
jb
loope
and
and
mov
xchg
push
scas
aaa
and
jl
das
xor
add
js
pop
out
shl
lds
fisttps
add
sbb
loopne
in
dec
sub
xchg
adc
inc
mov
bound
cmp
sub
lahf
cli
mov
or
pop
xchg
jge
data16
inc
aas
xor
cmp
repz
add
and
popa
dec
xor
ljmp
test
or
xchg
call
push
loope
ds
xor
movsl
ss
xchg
dec
sbb
arpl
mov
and
or
or
xchg
shrb
int
mov
jecxz
add
pop
xor
mov
jmp
roll
add
loope
sbb
lret
cmc
mov
mov
ret
xchg
push
adc
bound
loopne
or
scas
jmp
lret
push
xor
mov
out
or
and
adc
je
pop
jno
xchg
push
mov
cmp
add
test
cs
clc
clc
add
and
add
mov
cwtl
xchg
mov
sbb
mov
adc
add
dec
mov
scas
inc
cmc
imull
pop
and
jmp
sbb
les
fwait
int3
push
add
add
jl
lret
or
xor
xchg
out
popa
and
hlt
push
pop
loope
lds
pop
lods
mov
or
cmp
pop
aad
and
sub
and
notb
jae
xchg
jae
fidivl
aaa
sub
or
pop
mov
fildl
aaa
rcll
ja
push
jns
add
into
rcr
out
mov
jns
ja
jge
dec
ss
rolb
stos
cmp
or
cmpb
push
fldt
pusha
jo
cwtl
add
xor
ljmp
mov
xorl
inc
mov
add
mov
es
mov
or
and
inc
jnp
andb
jmp
pop
inc
mov
ljmp
sbb
mov
hlt
nop
sti
js
sub
lds
add
sub
mov
mov
cwtl
sarb
lods
inc
les
push
stos
and
jle
pop
adc
pop
lods
inc
loopne
mov
das
push
push
cmp
imul
fcoml
popa
push
and
sbb
add
fisubrl
insl
mov
or
lret
add
int3
rcrb
je
dec
push
in
adc
adc
mov
jo
mov
add
fs
mov
xchg
xor
js
jns
das
pop
adc
daa
cmpsb
mov
std
push
pop
add
push
fcomi
inc
lret
loope
aas
and
xchg
jnp
vmovss
adc
push
pushw
in
pop
loopne
inc
push
push
and
mov
js
sub
push
popa
stos
or
jo
je
int3
mov
mov
pop
xlat
daa
pusha
cmc
call
aam
or
pop
jb
lods
cmp
jae
mov
push
push
int
jns
xlat
sahf
addr16
cmp
pop
int
cmp
add
fcompl
std
xchg
mov
xor
lods
adc
and
mov
cmc
sbb
or
ds
add
ret
or
inc
pop
dec
dec
add
and
mov
data16
sbb
push
sub
xlat
mov
jo
mov
lcall
or
outsb
jg
inc
scas
lods
xchg
iret
add
or
loope
arpl
adc
addb
and
inc
insb
pop
inc
leave
lret
mov
adc
test
mov
mov
dec
adc
add
inc
sarl
js
xlat
add
jo
mov
cmp
insb
jne
sub
out
push
xor
ss
sub
dec
in
sbb
into
push
add
stos
das
inc
mov
inc
push
mov
ficoms
add
xor
inc
jmp
mov
or
aad
and
mov
scas
mov
jno
insl
push
xchg
imul
mov
jmp
scas
add
add
insl
mov
cmp
int3
sub
push
push
and
pusha
das
adc
pop
lret
push
lcall
fcomps
add
mov
mov
test
insl
dec
out
add
ficompl
pop
cli
out
outsb
jae
sub
int3
pop
push
xlat
push
stos
imul
fcomp
dec
and
sub
and
mov
xor
xor
in
jmp
int3
shr
iret
push
ds
push
cmpsb
xchg
pop
jbe
mov
add
mov
push
sti
ret
inc
shlb
inc
push
fnstenv
and
add
shlb
pop
xchg
insl
sbb
js
pop
mov
add
xor
mov
mov
pop
shll
aam
inc
sbb
mov
sar
das
cs
cmp
ficompl
in
push
inc
add
cmp
dec
jp
xor
imul
add
popa
inc
or
cwtl
mov
nop
pop
mov
mov
jg
movsb
mov
punpckldq
iret
pop
dec
mov
jns
outsl
lret
je
shr
jnp
subl
lods
jns
push
outsb
int3
mov
pop
xor
in
xor
or
in
inc
add
push
stc
imul
xchg
cmc
jnp
sbb
out
iret
cli
fwait
cltd
sub
arpl
and
cwtl
das
arpl
outsl
inc
in
in
push
adc
add
vsqrtsd
or
xchg
andb
xlat
bound
sub
mov
add
dec
xchg
dec
push
sub
push
or
sub
sbb
push
ljmp
loopne
insb
sub
js
add
mov
sbb
cmpl
popa
sbb
xchg
mov
xor
das
ret
les
sbbb
push
adc
push
xchg
mov
jo
adc
push
je
cld
insb
rclb
inc
hlt
lret
jbe
loopne
mov
out
fdivr
ret
fs
jns
and
out
shlb
and
out
js
mov
popa
xor
fldt
pop
fs
cmp
inc
pop
push
jg
daa
fisubrs
orb
push
cmp
xchg
add
jo
or
inc
into
sub
decl
pop
inc
xlat
aad
clc
je
push
cmc
scas
jg
inc
js
mov
or
enter
adc
and
cmp
pop
cmp
mov
jae
xor
inc
scas
push
and
and
cmp
mov
mov
adc
addl
or
inc
and
add
push
lock
jle
aaa
push
mov
mov
stos
or
xor
xor
daa
ret
adc
and
ror
mov
cmp
ss
sahf
int3
outsb
rcrb
push
mov
int3
pop
subb
fs
mov
dec
scas
jno
icebp
pop
fdivp
cmp
cmpsl
test
scas
ja
jbe
sub
mov
popf
or
arpl
inc
mov
in
lock
xor
loopne
pushf
cmp
inc
inc
fstpt
insl
xchg
daa
stc
push
gs
inc
adc
xchg
sti
jne
pop
pop
push
mov
cmp
xor
mov
push
bound
dec
jle
sbb
adc
adc
push
jnp
jae
or
lods
adcb
inc
inc
xor
jecxz
ja
in
aam
jno
fpatan
outsl
aas
sbb
jmp
jnp
sub
clc
ret
fwait
inc
test
bound
jbe
je
pop
aad
jle
dec
out
jnp
out
xchg
stos
ret
cmp
mov
pop
jae
pop
loopne
rcpps
push
cmp
movsl
mov
shrl
xchg
jbe
adc
cmp
and
cli
insl
ss
loop
adc
or
push
and
jae
and
fcomps
aas
sbb
fdiv
push
fldenv
add
fs
arpl
push
or
das
push
dec
cmp
es
sub
pop
mov
and
sbb
xor
dec
movsb
and
mov
sbb
and
fcmovu
push
mov
cmp
push
icebp
jmp
xchg
scas
dec
or
add
lods
ss
aaa
pop
test
sti
scas
aam
mov
loopne
adc
xor
adc
das
push
fisubrl
push
cmpsl
in
pop
sub
cli
xchg
ss
cs
mov
aad
gs
push
and
sbb
leave
push
test
ss
sub
push
add
xchg
gs
mov
jae
mov
jg
imul
stos
shl
addl
shlb
stc
dec
inc
and
movsb
inc
fildl
push
push
sub
je
cmp
sbbb
sarl
rol
stos
pop
loop
xor
cli
stos
sti
inc
test
hlt
push
ja
pop
cmp
into
stos
xor
xchg
adc
lods
sub
add
sub
jns
movsl
and
ftst
sbb
sbb
xor
fwait
sbb
sbb
xchg
fmul
pop
test
ja
push
jnp
or
cld
sub
clc
add
scas
xor
cmpsb
lret
mov
push
dec
add
jmp
add
cmp
sub
cwtl
cltd
jne
cmp
test
adc
daa
rorl
je
ret
loopne
hlt
mov
add
inc
or
mov
mov
test
dec
test
je
xchg
mov
add
test
add
lock
xchg
test
arpl
int3
fs
test
mov
pop
aas
lret
jb
mov
outsl
nop
daa
xor
popl
js
inc
mov
push
subb
and
adc
push
jle
imul
loopne
sbb
repz
fcomps
jecxz
jb
or
loope
es
or
cmp
imul
add
inc
jo
dec
inc
mov
int
adc
pop
sub
test
push
daa
sbb
imul
test
stos
inc
in
out
mov
mov
test
roll
jae
pop
mov
insb
lret
push
xor
add
sub
push
or
sub
pop
pop
pop
add
push
mov
and
push
mov
add
mov
xor
aam
push
in
sbbb
rcll
test
push
cmpsl
insl
inc
fdivrl
inc
pop
mov
enter
jmp
insb
xor
fs
sbb
add
pop
out
aaa
nop
xor
sbb
push
inc
push
lods
out
pop
aam
or
daa
or
movsl
in
dec
jp
sbb
add
fwait
sahf
cmpsb
imul
lret
fisubs
push
mov
addr16
lahf
cli
dec
xor
in
mov
mov
jp
mov
and
flds
hlt
inc
adcb
aaa
sub
pop
adc
or
jns
push
leave
pop
lcall
push
or
cmpsb
lret
aam
inc
add
mov
lods
cmc
ja
mov
inc
stos
aaa
pop
or
arpl
sub
mov
adc
sbb
test
fs
xchg
sub
pusha
and
popf
jne
je
inc
adcl
xchg
jb
adc
scas
sbb
xchg
into
mov
xor
pop
test
adc
mov
lret
iret
mov
sub
adc
dec
jg
loop
push
loopne
sbb
test
mov
jnp
test
push
lret
or
add
xchg
add
stos
push
out
add
push
jl
ljmp
iret
sarl
and
push
cs
jno
dec
dec
in
jl
inc
sub
sub
in
add
push
je
sub
shll
lock
pop
mov
pop
dec
push
aam
gs
sub
aaa
or
xchg
cltd
out
dec
flds
sbb
mov
adc
adc
add
or
pop
in
and
xorl
or
lds
xchg
mov
cmp
push
shlb
hlt
ret
fldl
add
addb
inc
mov
lsl
sbb
xlat
add
lods
mov
lock
stos
loopne
cmp
pop
loopne
sbb
cld
adcb
je
sbbl
mov
mov
dec
add
aaa
fs
lds
mov
sbb
and
inc
adc
sub
lret
xor
push
sbb
push
sbb
mov
scas
xor
push
ret
jle
fucomi
iret
xor
add
dec
inc
lods
icebp
les
insb
add
lock
xlat
or
xchg
jbe
inc
sbb
aas
pop
movsl
mov
js
out
push
mov
inc
in
js
dec
stos
push
xchg
inc
loop
adc
xlat
lods
jb
testl
es
pop
mov
inc
mull
xor
mov
mov
addr16
mov
rcrb
push
pop
add
lods
inc
jno
push
test
pop
xor
pop
add
mov
xchg
pop
stos
int
push
mov
jae
les
cltd
fwait
add
pusha
bound
mov
mov
or
push
adc
lret
and
jle
push
test
pop
imul
xchg
jle
out
or
test
cs
add
stos
jp
sub
lret
mov
sub
mulb
fmuls
clc
mov
mov
pop
and
xor
jg
xchg
and
stos
dec
and
daa
cmpsl
iret
mov
call
std
call
in
testl
cmp
jecxz,pn
js
inc
xor
loopne
xorb
imul
add
inc
pop
mov
sbb
push
ss
lcall
dec
in
jne
arpl
mov
jno
push
or
bound
fwait
cmpsb
sarl
sub
mov
aad
fstl
iret
cs
and
ljmp
loope
enter
dec
scas
pop
imul
adcb
mov
in
outsb
fsubp
mov
stos
mov
aaa
add
pop
sub
adc
ret
xor
test
js
addr16
lldt
addr16
je
jge
ret
pop
adc
mov
xchg
xchg
sub
fdivrs
add
call
sbb
in
xchg
hlt
lcall
pop
mov
push
mov
xchg
fisubl
sbb
mov
sbb
or
xchg
pop
cmp
shlb
jno
and
cmpsl
sub
imul
mov
arpl
popa
in
sahf
push
jg
cmp
push
xor
testl
out
adc
dec
inc
cltd
js
rcrb
or
push
out
add
inc
aam
mov
ficoms
adc
loop
push
fbstp
dec
and
push
add
sub
dec
adcl
js
into
jbe
fimuls
inc
mov
inc
jge
test
cld
adc
or
pop
aad
push
sub
sub
jbe
push
popf
aad
pop
aas
aad
mov
push
hlt
pop
sahf
ret
dec
sub
cwtl
mov
ja
push
repz
jb
mov
cmp
push
pop
mov
int3
jge
add
in
in
jae
jbe
add
adc
pusha
push
popa
fdivs
xor
and
push
add
xchg
mov
inc
or
inc
mov
push
aad
popa
sbb
imul
stos
sub
jp
lret
pushf
and
enter
xchg
movsl
sub
mov
mov
movsb
lret
fs
testl
jmp
pop
nop
jecxz
jne
adc
jo
jnp
add
jl
pop
mov
mov
bound
mov
mov
enter
xchg
jg
into
fs
movsl
sub
and
pushf
jb
lock
outsl
out
push
sarb
sbb
xor
sarb
dec
ljmp
inc
cs
or
and
das
lcall
bound
adc
enter
sub
add
jge
je
jb
inc
ficoml
outsl
xlat
les
cmp
imull
and
addr16
jle
sbb
adcb
outsl
pop
dec
add
inc
rcrl
lahf
fstps
es
adc
popl
pop
sub
sub
pop
xor
sub
repz
test
dec
out
adc
dec
sub
push
lcall
cmp
in
xor
adc
mov
xchg
fs
add
rcr
jae
push
push
test
ss
out
xchg
lock
xchg
or
adcl
or
aad
jl
push
imul
adc
lods
push
imul
lahf
sahf
jbe
nop
push
popa
add
add
movsb
data16
jmp
fwait
arpl
cmpsl
sbbb
push
dec
sbb
iretw
ja
cmp
mov
icebp
or
or
jo
sub
mov
aaa
add
sub
pop
insl
dec
insb
push
jb
mov
inc
insb
or
sub
fmull
pop
ja
xor
add
into
jl
pop
lds
cmc
mov
nop
pop
adc
xorb
mov
repz
jle
test
adc
xorl
out
sub
sti
xchg
rolb
pop
inc
adc
add
aaa
scas
test
push
add
jo
mov
and
adc
sarb
imul
fcoms
adc
cs
sbb
sub
repnz
add
sbb
popa
test
mov
popf
pop
dec
fiadds
in
and
das
movsb
scas
sbb
xchg
stos
cltd
mov
xor
push
movsb
push
movsb
or
je
mov
mov
xor
cmp
xlat
xor
ds
xchg
xor
mov
or
sti
dec
mov
setl
ja
inc
addb
ss
lret
adc
jb
addr16
sbb
add
call
movsl
pop
fildll
jo
adc
fdivl
sub
in
in
shll
dec
dec
or
ror
xorb
movsl
pop
sbb
xchg
or
and
adc
push
add
addr16
mov
rorl
sbb
nop
and
cld
scas
fcmovbe
xor
push
andb
adc
loopne
sbb
in
push
sub
fiadds
ficoms
sbb
jge
pop
iret
xor
fisubs
loopne
xchg
imul
das
push
pop
lock
lahf
push
sti
test
jno
lret
adc
mov
mov
pop
fistl
jle
mov
xchg
test
popa
pop
jg
mov
mov
mov
or
add
jmp
daa
or
mov
das
scas
test
push
xor
xchg
je
sbb
fadds
mov
pop
jge
jb
mov
xor
or
push
and
mov
pop
mov
stos
movsl
lds
loopne
add
je
and
xchg
lcall
sub
mov
cwtl
push
rclb
and
or
push
add
mov
push
cmpsl
sub
lock
pushf
jge
not
lock
fisubrl
jecxz
scas
cmp
leave
cmp
inc
xor
xor
sar
jle
push
or
stos
cmp
imul
xlat
das
es
loopne
pshufw
mov
jo
jmp
mov
dec
ret
movsl
xchg
cmp
cmc
sbb
frstor
or
mov
in
push
lea
cmpsl
in
mov
and
dec
lcall
xor
test
adc
adc
sub
lcall
mov
or
ljmp
jne
and
dec
roll
ret
mov
call
je
scas
jg
inc
hlt
and
cmp
mov
and
cwtl
or
sti
or
mov
or
pop
enter
aam
mov
shrb
mov
push
mov
dec
dec
mov
adc
xchg
pop
pop
shlb
push
adc
cmp
xor
jbe
pop
mov
adc
sub
mov
jl
push
inc
xchg
test
cmp
or
ja
push
aaa
sub
inc
adc
into
es
push
mov
sub
loop
push
ror
sub
test
mov
xchg
jp
mov
add
xchg
sbb
lahf
add
push
imul
sbb
push
cmp
js
test
jo
out
adc
dec
fldcw
jns
push
sbb
and
or
mov
lahf
add
in
icebp
adc
xchg
xchg
das
movsl
leave
imul
mov
push
add
jno
push
stc
mov
inc
mov
movsb
movsl
sbbb
leave
cwtl
rclb
lcall
rcll
xchg
aam
shlb
mov
dec
shrl
bound
andl
xchg
popa
adc
stos
popf
lods
in
add
push
das
add
fs
or
inc
mov
fsubs
sub
xchg
jle
bound
inc
mov
movsb
aam
lods
adc
daa
imul
aam
cwtl
adc
inc
lea
andb
pop
imul
mov
in
jo
das
mov
stos
or
in
rclb
xor
leave
mov
ret
and
dec
mov
mov
inc
js,pn
mov
pop
testl
add
xchg
xchg
data16
lcall
aam
sti
lods
daa
or
inc
ja
adc
cs
pop
daa
cmp
push
popf
push
cmp
aam
mov
stc
sub
arpl
sbb
mov
add
in
or
ficoms
jmp
mov
add
ja
lcall
fstps
inc
lds
pop
sbb
pop
sub
nop
add
or
iret
or
push
pop
pop
jb
jmp
sbb
sub
sbbb
fidivl
sub
xor
xchg
mov
jg
inc
mov
sub
inc
cmp
mov
xor
xchg
push
jno
add
push
inc
in
popa
adc
xor
cld
or
std
fiaddl
movsb
andl
jo
movsb
or
jle
add
push
cmp
dec
fildll
add
inc
cmp
and
mov
jo
jo
adc
mov
or
adc
scas
inc
orb
stos
lcall
xor
adc
jb
xchg
shrl
jbe
fsubs
mov
push
sbb
mov
fldcw
sbb
or
in
roll
movsl
sbbl
push
int3
push
into
add
sbb
sahf
insb
adc
jle
adc
je
jo
sbbb
bound
test
mov
jnp
mov
add
xchg
repnz
mov
push
inc
sahf
bound
mov
push
es
divb
mov
adc
inc
push
xchg
ds
fidivrs
sbb
hlt
inc
mov
arpl
ss
dec
sbb
pop
mov
jg
out
iret
adc
fmuls
and
dec
cwtl
je
jl
sbb
fsubrs
push
aad
insb
add
mov
push
bound
hlt
stos
xor
push
sub
ret
sub
aam
xchg
jecxz
mov
cmpl
je,pn
popf
call
in
adc
sarl
orb
add
addl
or
outsl
jle
stos
call
mov
pop
mov
lret
push
iret
xchg
lds
ds
and
sub
fs
andb
mov
inc
rorl
sub
test
add
repnz
jmp
test
adc
dec
int
adc
mov
xor
push
cmp
dec
add
test
add
shll
sbb
dec
adc
into
rclb
jp
or
inc
out
or
testb
nop
orb
adc
call
stos
outsb
es
nop
nop
add
cmp
adc
push
jb
dec
jle
popa
or
sbb
xchg
fmuls
movsl
pop
cmp
mov
int
jno
xor
cmpsl
mov
pop
cmp
emms
dec
movsl
orb
lds
xchg
inc
xor
ss
or
and
add
loop
inc
ss
inc
xchg
insl
cmp
inc
add
mov
insb
arpl
or
idivl
dec
push
sub
icebp
jmp
add
jmp
ljmp
push
xor
xchg
dec
shr
and
lea
out
pop
jmp
mov
sub
adc
pop
test
jae
mov
mov
push
and
mov
outsl
add
les
sbb
cmpsb
xchg
loop
or
mov
into
popf
pop
mov
pusha
stos
xchg
or
inc
rol
push
insl
xchg
jecxz
xor
outsl
stos
jb
inc
sub
inc
fisubl
add
lock
call
jp
adc
mov
bound
aad
push
in
fiadds
mov
and
push
add
xor
mov
xchg
jmp
lret
mov
and
cmc
mov
pop
xor
push
adc
pop
xor
pop
add
clc
repz
imul
mov
movsb
shr
test
mov
insl
xchg
push
cltd
cmp
pop
mov
mov
and
sub
in
push
lock
dec
mov
sti
xchg
gs
adc
cmp
mov
clc
or
ret
jg
lret
mov
mov
push
xchg
mov
fst
lods
sti
pop
test
pop
and
call
jge
mov
cwtl
test
and
andb
or
rorb
rclb
mov
dec
xchg
xchg
fs
mov
pop
and
mov
ret
les
inc
adc
add
sbb
push
jbe
sbb
push
pop
cmp
xchg
mov
or
add
das
int3
mov
dec
cmpsl
popf
mov
adc
pop
rorl
cmp
or
sub
inc
mov
jecxz
mov
int
in
lods
add
into
daa
fcoms
insl
ja
push
inc
int
push
jns
popa
inc
inc
testl
sub
push
scas
add
adc
inc
cmp
adc
popa
and
mov
jbe
orb
push
sbb
sub
inc
int
dec
jno
pop
test
dec
mov
cmp
imul
out
inc
sub
jb
add
sub
fdivrs
lret
andl
push
aaa
nop
stos
mov
push
sub
mov
fildl
and
sub
xorb
cmpsb
inc
mov
sbb
movsb
or
or
add
jns
sbb
mov
cmpsl
or
pop
inc
test
loopne
das
call
xor
and
pop
add
jae
aad
test
add
xchg
sub
daa
and
push
sub
lods
sbb
pusha
mov
shl
imul
or
les
ret
xor
into
xor
andb
jmp
ret
cmp
sti
stos
inc
rorl
lods
jmp
jp
inc
jg
adc
fidivs
dec
gs
dec
push
push
xor
mov
in
leave
pop
or
sbb
lods
inc
mov
dec
push
mov
imul
push
xor
xor
and
lds
mov
xor
fcompl
shll
lea
or
and
jecxz
mov
movsb
xor
daa
add
dec
scas
sbb
movsb
push
inc
outsb
xchg
lods
jmp
xlat
fnstenv
fwait
and
pop
pop
mov
out
add
sbb
mov
aas
test
scas
sbb
rcl
push
movsb
inc
arpl
pushf
ss
lods
cmc
and
cmp
loope
push
xchg
mov
stos
imul
xlat
lret
lods
or
and
test
out
sub
sub
stos
push
mov
ffreep
popa
testl
in
das
and
or
es
add
sub
mov
sbb
mov
mov
stos
jo
sub
daa
pop
jle
cmp
jb
pop
movl
movsb
loope
cmpsb
dec
rcrl
add
movsb
fucomip
subl
mov
lahf
rcrl
inc
mov
mov
adcb
adc
cmp
xchg
insb
mov
inc
jmp
push
cmc
jno
orb
and
fmull
add
adc
in
arpl
pop
and
add
in
mov
xchg
loop
mov
fs
dec
adc
outsb
das
shlb
push
xor
xlat
test
add
mov
fldcw
inc
add
es
inc
sub
cmp
sahf
or
adc
xor
dec
or
adc
shl
or
push
jecxz
pop
adc
iret
jae
mov
xor
jle
stos
mov
xchg
lods
and
sbb
add
outsl
mov
inc
test
dec
ss
popa
aaa
sub
dec
cmpsl
sbb
inc
addr16
aas
pop
xor
mov
mov
icebp
or
inc
out
fsubr
gs
and
xchg
push
or
adc
scas
mov
add
push
lahf
pop
lods
stos
insl
mov
xchg
adcb
xchg
fldenv
xchg
xchg
test
xor
es
scas
sbbb
xorl
aaa
pop
inc
nop
or
addb
add
cld
mov
ret
push
cmpsb
test
inc
fwait
and
out
push
insl
cmp
in
fimull
les
and
xor
mov
and
outsl
cmc
mov
faddp
mul
pushf
and
imul
and
icebp
adc
sbb
push
jo
pusha
popa
ret
popa
pusha
adc
scas
sub
call
pop
push
sub
jg
jle
add
or
push
mov
cmp
mov
loope
push
loopne
fcompl
dec
adc
faddl
push
and
or
gs
jmp
cmp
int3
push
sbb
push
shll
cltd
xlat
mov
add
arpl
adc
cmpsb
xchg
xor
sbb
and
fstps
jge
dec
xchg
add
cli
iret
xchg
push
or
adc
dec
sahf
push
je
loopne
sbb
jge
aam
das
inc
outsl
sarb
out
js
in
movsb
push
test
pop
insb
sub
push
push
scas
arpl
mov
mov
push
pop
adc
add
fisttpll
jl
rorl
or
ja
adc
mov
test
xchg
adc
enter
cmp
test
jl
shll
sub
adc
or
mov
jl
je
outsl
push
pop
dec
pop
fistpll
adc
or
pop
inc
add
loopne,pt
movl
sbb
adc
enter
mov
mov
sbb
test
dec
cpuid
and
mov
outsl
xchg
sbb
push
dec
pop
jl
jp
js
mov
ds
iret
fwait
jnp
adcb
add
and
out
mov
mov
sarl
pop
popf
mov
adc
sub
pop
fildll
std
and
jp
shll
movsl
pop
scas
mov
and
and
push
dec
dec
inc
jg
ja
fmull
call
cmp
sub
sub
repz
add
sti
pop
or
mov
cmpsb
loopne
mov
hlt
add
push
pop
add
xor
sbb
dec
out
pop
sub
mov
dec
das
pushf
mov
cld
sbb
push
add
shr
in
std
inc
push
push
and
add
or
pop
push
sub
adc
hlt
int3
sub
cmp
dec
sub
adc
fnstcw
in
add
jle
pop
sub
push
xchg
aam
jne
inc
test
mov
adc
jae
jp
test
negl
dec
and
stos
and
adc
inc
dec
fildl
shlb
adc
inc
add
sub
lahf
cmpsl
addb
orl
xchg
ss
mov
lock
sub
and
pop
ja
add
nop
sub
mov
loope
movsl
adc
leave
xor
mov
ret
jne
add
pop
mov
cmc
inc
rcl
loopne
ret
out
xor
adc
dec
cmp
clc
jo
mov
jb
xor
inc
es
call
jmp
or
sub
int
aad
out
pop
out
mov
rcl
imul
into
push
pusha
mov
push
xor
dec
push
and
decb
dec
hlt
orb
mov
mov
bound
pop
fldt
push
mov
xchg
and
lcall
add
push
xlat
inc
add
enter
fsubs
ret
adc
pusha
pop
mov
out
aad
jmp
jmp
mov
inc
lods
popa
sbb
add
insb
popf
cmp
cmc
push
add
mov
xchg
xor
inc
sub
push
mov
xchg
jmp
sub
sbb
add
push
xor
sub
test
sbb
es
mov
inc
cmp
ljmp
sub
lret
fucomi
negl
and
adc
in
popa
cmp
sbb
push
shrl
lret
push
ret
and
mov
add
push
bound
and
cmp
in
xor
or
sbb
js
ret
mov
adc
jno
es
ficompl
roll
mov
pop
and
sub
stos
and
push
xchg
dec
addr16
cmp
sbb
push
mov
adc
sbb
and
mov
loope
sub
fprem
sbbb
daa
push
sub
pop
mov
sti
js
pop
imul
mov
mov
and
cmpsb
aam
push
push
in
mov
push
mov
mov
sub
arpl
jl
dec
out
into
sub
sub
adc
in
in
add
mov
ss
cld
bound
push
jg
les
out
or
and
loopne
testb
sub
cli
push
and
mov
pop
scas
cwtl
add
pusha
add
enter
in
ret
ret
add
add
mov
outsb
fwait
popl
add
mov
mov
bound
sbb
push
dec
jge
arpl
cmpsb
movsl
cli
cmp
push
or
or
inc
push
mov
inc
xchg
test
fwait
add
jne
add
sbb
xchg
insl
sti
pop
cmp
out
push
add
lock
in
sub
jl
sub
testb
leave
rcll
clc
and
jno
sub
movsl
and
mov
jb
sub
adc
adc
cmp
hlt
and
cmc
sub
sub
das
xchg
outsb
inc
hlt
jl
fildll
adc
stc
mov
out
mov
fwait
in
mov
out
sub
and
push
in
or
in
sub
lcall
or
loope
adc
add
clc
adc
fsubrl
daa
inc
jno
nop
out
aaa
mov
iret
cwtl
repz
repnz
mov
jbe
out
cs
ror
pop
dec
add
lds
inc
imul
inc
fwait
cmp
lret
xchg
in
ret
jbe
jns
mov
xor
enter
test
sbb
lcall
loopne
and
ret
cmp
cmp
jne
aas
dec
out
lea
xchg
loope
out
dec
pop
dec
movsl
iret
xor
mov
xor
xor
lret
push
loope
loopne
sbb
and
push
and
sub
or
jge
and
sub
cmp
in
fisttpll
js
rol
je
arpl
jne
fisubrs
jne
dec
push
adc
jp
push
aam
in
and
leave
aam
in
push
xchg
cmp
inc
lahf
roll
jns
push
sub
shlb
mov
push
push
scas
sbb
cli
loope
imul
sbb
ss
out
mov
ds
push
push
fdiv
leave
dec
cmpsb
lret
jmp
jno
pusha
dec
xor
xchg
sbb
out
rcrl
push
inc
xchg
add
cmp
fistpll
push
cmp
pop
mov
adc
fsubl
cwtl
mov
mov
inc
mov
cmp
xor
cmp
fyl2x
push
roll
adc
lods
gs
pop
adc
arpl
xor
inc
pusha
les
out
inc
jns
xor
mov
sbb
stos
cmp
bndstx
sub
insb
sub
dec
jle
imul
lock
xlat
in
and
xor
lret
mov
sbb
cwtl
les
popf
push
fidivl
mov
in
sbb
sub
xchg
dec
adc
or
and
out
xor
xor
mov
mov
scas
jl
mov
dec
and
push
enter
xor
xor
sti
aaa
adcb
loope
insb
and
or
das
push
and
xor
shll
sbb
mov
sbb
add
popa
lds
mov
aad
add
dec
scas
sub
cmp
jo
dec
push
sub
sub
pop
sub
imul
push
imul
faddl
imul
jmp
jmp
hlt
in
pop
mov
inc
mov
lds
cs
mov
leave
fwait
dec
gs
ja
aaa
mov
push
into
cmp
and
sahf
adc
push
icebp
add
jbe
sbb
lods
icebp
mov
push
je
xor
notb
push
aam
and
pop
add
loop
sub
ret
sbb
lahf
lret
push
icebp
push
xor
xlat
add
inc
pushf
jp
test
mov
imul
les
rol
in
or
sbb
imul
mov
movsb
js
mov
pop
mov
dec
aam
add
jb
imul
in
loope
roll
add
mov
sbb
int
subl
sub
pop
dec
inc
ret
or
sub
sbb
std
adc
inc
mov
inc
aam
ljmp
adc
unpckhps
sbb
xchg
stos
repz
inc
cmp
pushf
pop
out
mov
inc
inc
pop
cmp
push
es
inc
insb
sbb
and
sub
ja
orb
xor
xor
fdiv
push
sub
rol
push
lret
fwait
cwtl
cltd
or
and
lock
leave
dec
stc
loop
mov
cmp
sahf
sbbl
in
stc
nop
dec
cmp
in
pop
mov
inc
bound
add
ja
or
clc
in
outsl
iret
sbb
push
pop
mov
pop
test
and
rclb
pcmpgtd
jne
int
bound
push
xlat
es
add
mov
js
call
sbb
push
push
jecxz
mov
and
fwait
dec
mov
nop
xor
and
dec
cmpsl
mov
adc
and
shll
subl
arpl
and
inc
movsb
jbe
scas
and
pusha
shlb
sub
aam
test
dec
out
fcmovne
inc
into
mov
adc
xor
repz
xchg
mov
rcll
adc
add
mov
sbb
lods
in
xor
shlb
inc
icebp
and
sub
mov
popa
js
mov
stc
das
push
pop
hlt
fadds
or
add
cmp
mov
cmp
out
jp
mov
jmp
ds
in
popf
fistps
cmp
mov
popa
xchg
jne
xlat
fwait
jno
inc
aas
mov
test
inc
out
inc
jno
mov
cmp
sub
xchg
mov
mov
inc
pop
sub
insb
ljmp
add
dec
mov
add
out
mov
mov
outsl
insl
iret
sub
push
cmp
andb
bound
sbb
or
sub
mov
pop
push
sti
pop
addr16
mov
lock
aad
lds
sahf
sbb
add
loopne
inc
mov
fiaddl
and
daa
or
mov
pop
xlat
pop
cmpb
lahf
mov
mov
add
out
sub
xor
scas
xor
pop
loop
loope
cli
or
or
sub
xchg
pop
push
iret
xor
das
mov
je
pop
ja
push
push
push
dec
inc
hlt
pop
rclb
sti
fimull
xor
add
add
pop
mov
xor
in
daa
inc
mov
cmp
add
insl
pop
adc
aad
inc
enter
in
daa
mov
or
and
and
mov
jmp
sub
xor
nop
or
cmpb
sbb
push
rdtsc
pop
xchg
enter
movsb
jmp
out
out
add
mov
lock
pop
mov
ret
test
xchg
ds
add
push
sub
dec
fwait
insb
push
or
xchg
test
aam
mov
pop
enter
inc
fistpl
ja
scas
iret
pop
and
xor
push
cmp
lods
repz
fdivrs
push
lret
cmp
xchg
add
imul
sbb
pusha
or
test
addr16
and
ficompl
mov
inc
sub
outsl
imul
inc
and
fidivrl
sub
adc
sahf
adc
mov
or
ss
pop
cmp
xchg
or
jmp
test
add
push
xor
mov
mov
hlt
testb
mov
xchg
pushf
imul
adc
cmpsb
inc
sub
lds
inc
nop
and
push
icebp
adc
call
rclb
push
out
or
jns
pop
add
mov
push
push
in
push
lahf
stos
mov
data16
mov
inc
adc
push
inc
mov
and
jmp
add
int
scas
scas
dec
push
xor
into
pop
ret
push
scas
loopne
adc
cmc
lock
or
sub
jns
fstps
or
aam
outsl
aaa
sbb
xor
xor
lods
push
ror
cmpsb
fistpll
sar
mov
xchg
lea
mov
xchg
lods
add
mov
mov
xor
sbb
or
test
mov
shrl
ret
les
imul
jo
sub
pusha
mov
xchg
dec
mov
iret
sbb
mov
test
sbb
push
mov
lret
sub
in
loope
mov
cmpsb
dec
aaa
daa
aam
js
dec
je
out
push
cmp
xor
mov
push
and
and
insl
es
add
mov
mull
pop
divb
dec
cli
sub
iret
inc
insl
xor
xorb
xor
inc
cmp
ljmp
inc
jne
and
mov
test
ja
or
add
es
sub
hlt
test
imul
insl
pop
scas
popa
fadd
shll
mov
xor
sub
add
inc
sbb
iret
cli
das
scas
and
sub
sbb
addb
add
aam
aad
das
aaa
pop
test
xchg
add
mov
or
cmp
push
add
aas
jle
dec
mov
fstl
bound
add
and
mov
movsb
loopne
inc
xlat
mov
push
sbb
aas
cltd
movsl
or
test
adc
in
mov
dec
jae
iret
ds
pop
inc
adc
push
cmc
jle
xchg
inc
mov
mov
arpl
pop
bound
test
dec
cmc
dec
jg
inc
lods
dec
push
xchg
and
imul
fldcw
or
and
rolb
xor
inc
inc
xor
mov
and
xorb
inc
mov
imul
cmp
out
rorl
lock
scas
movsb
sbb
cmp
aam
pushf
and
xor
dec
adc
mov
xor
sbb
loope
xchg
pusha
add
xchg
outsl
or
divb
pop
add
or
cld
mov
xchg
push
push
daa
je
and
sub
sub
cmp
push
cmp
jns
test
or
mov
je
or
push
bound
enter
addb
popa
add
mov
xchg
jne
stos
popa
in
cmp
sbb
adcl
and
push
mov
sbb
add
cmp
inc
das
sub
add
rcr
fs
inc
mov
pop
push
movsb
dec
hlt
movsb
xchg
sub
add
dec
fisubs
ss
test
or
dec
loopne
add
je
adc
inc
fistpl
xor
scas
pusha
and
inc
adc
in
daa
jne
lods
cmp
mov
les
leave
or
dec
xchg
ds
roll
jne
or
or
or
shlb
rorb
push
pushf
or
loope
sub
adc
jns
jnp
push
xchg
adc
iret
jbe
or
xchg
push
mov
gs
inc
jp
or
loop
add
bswap
and
leave
daa
adc
sbb
mov
sub
popf
and
test
push
lea
cmp
mov
xor
dec
and
xchg
add
adc
test
ljmp
sub
ss
add
cmpsb
mov
pop
and
mov
pusha
fldcw
mov
adcl
push
ja
scas
pop
iret
mov
xor
mov
dec
aam
and
loopne
and
mov
add
test
aaa
add
aas
or
add
cmp
int3
adc
or
or
inc
in
lea
jl
add
lods
out
cmp
sbb
and
das
and
out
xor
inc
pop
cmc
in
fnstsw
cwtl
lock
mov
sbb
sbb
es
out
test
mov
loope
mov
add
nop
outsl
in
pop
mov
adc
mov
jmp
call
xchg
or
lret
dec
leave
pop
push
pop
mov
mov
jno
mov
test
fbld
pop
daa
push
pop
shrb
fisttpll
movsl
mov
sub
pmaddwd
jbe
mov
cmp
scas
into
and
pop
jp
add
cmp
xor
rorl
mov
mov
out
repz
and
or
sbbl
cld
lds
pusha
negb
cmp
jge
inc
cmp
add
push
push
mov
mov
dec
imul
xor
fbstp
sbb
cmp
fcomp
add
pop
add
ja
aam
fdivl
push
aam
jge
sbb
jnp
inc
inc
lahf
test
cld
nop
xchg
sub
addb
add
mov
xlat
and
movl
mov
or
mov
sub
dec
jg
cli
jmp
arpl
test
and
jle
clc
lock
or
adc
add
out
mov
or
jge
inc
jne
mov
stos
insl
dec
cmp
xor
add
and
movsb
and
mov
adc
fcoml
push
in
adc
and
mov
fstl
movsb
lret
jno
lahf
xchg
push
jmp
inc
cmp
mov
xor
and
mov
lods
xor
jge
test
sbb
and
or
andb
orl
or
mov
and
test
mov
xlat
andb
movsb
nop
sub
jae
push
pop
test
xchg
xchg
orps
ret
add
fs
aas
inc
mov
ss
popa
adc
mov
pop
mov
push
das
bts
bound
push
jl
sub
adc
fwait
inc
icebp
pop
adc
xchg
out
jp
mov
test
and
das
xorb
jp
int3
and
or
dec
dec
or
add
inc
inc
dec
xor
inc
jmp
sbb
mov
push
mov
addb
xor
jle
xor
sub
test
mov
or
mov
call
and
dec
movb
or
sub
push
push
das
loopne
dec
rol
aaa
pop
repnz
pusha
mov
lods
scas
push
jmp
iret
jge
inc
push
ss
mov
xor
stc
cmpl
xchg
test
aaa
inc
sub
sbbb
add
outsl
xor
loopne
or
adc
arpl
pop
and
cmc
push
cmp
or
pop
int
sub
in
xchg
fldcw
mov
mov
adc
or
lods
dec
mov
mov
adc
les
lds
xchg
sub
data16
or
sub
cld
fs
mov
pop
cmp
daa
addr16
push
xor
test
push
inc
dec
xlat
lods
add
loopne
jmp
or
inc
cmp
scas
and
ret
jo
add
mov
daa
lret
inc
add
sub
or
movsb
dec
push
daa
push
mov
imul
sub
daa
mov
mov
adc
je
add
test
insl
mov
xchg
or
push
xchg
push
nop
lea
adc
xchg
jne
pop
cmc
jns
add
lods
call
into
jle
inc
insb
lods
aas
xchg
aad
lds
jno
and
xor
in
mov
inc
inc
jne
stos
movsl
lret
add
push
and
aaa
push
and
cs
fs
add
mov
inc
and
mov
lcall
mov
lcall
rolb
in
inc
int
fcmovnb
test
push
nop
mov
pop
dec
adc
adc
aaa
ret
add
inc
adc
and
aam
xchg
pop
pusha
les
inc
cmp
mov
or
sub
bound
and
add
stos
dec
sbb
and
and
es
int3
pop
inc
or
outsl
aam
nop
lods
pop
jmp
cmp
pop
das
push
addr16
or
inc
in
scas
call
inc
into
sub
cmp
sub
push
inc
cs
clc
sub
addr16
xchg
inc
mov
push
out
cmp
arpl
lods
and
mov
test
lea
mov
jo
in
ds
shll
add
lods
jo
in
mov
add
cmpsl
xchg
and
divl
rol
mov
adc
cmp
mov
mov
or
add
rorb
outsb
mov
dec
add
pop
inc
xchg
mov
and
add
jge
jp
mov
fwait
xchg
or
or
sub
movsl
add
es
adc
cmpsl
in
addr16
xorb
push
fmul
jne
xor
test
jo
inc
add
and
xchg
xchg
xchg
leave
aas
test
sahf
imul
xor
lret
cmp
adc
movsb
pop
cmpsl
ret
out
sub
clc
lcall
adc
dec
mov
add
lahf
add
sti
push
icebp
lock
and
xchg
adc
mov
in
xchg
adc
aam
ljmp
sub
dec
dec
jne
xchg
and
sub
inc
jns
cmp
out
add
fwait
mov
sbb
popa
cmpsl
aas
jmp
mov
stos
cltd
popa
pop
mov
bound
add
xlat
push
add
push
mov
and
hlt
loopne
inc
filds
aam
out
rcll
mov
jle
iret
cmp
popa
mov
push
cmp
push
lahf
add
mov
mov
pop
and
push
add
xchg
dec
mov
ret
dec
sub
xchg
scas
mov
jmp
push
sbb
fs
sub
push
dec
mov
inc
xor
add
stos
mov
pop
insl
icebp
push
inc
adc
xorb
lock
popa
andl
pop
test
or
test
sub
or
push
daa
icebp
jnp
mov
or
inc
sub
sti
mov
dec
cmp
jle
and
add
outsl
addr16
sbb
loopne
cmp
jae
adc
jecxz
mov
nop
or
in
inc
dec
sub
jecxz
xor
iret
xchg
inc
mov
pop
shl
add
mov
cmpl
xchg
add
ss
add
push
sub
jp
mov
mov
lock
sub
scas
mov
lcall
shlb
inc
mov
mov
add
pop
add
fwait
mov
push
cmp
lcall
adc
and
pop
add
addb
mov
and
cmp
mov
add
js
mov
shrb
pop
add
xchg
les
push
adc
sbb
xchg
inc
xor
add
fidivrl
sahf
sub
stc
daa
stos
add
lods
cmp
sbb
mov
es
cmc
jbe
push
sahf
jle
and
or
addl
inc
add
es
jl
addr16
repnz
add
inc
fimull
sbb
jge
int
and
addb
jbe
xor
or
adc
add
adc
sub
mov
addr16
jge
xor
cmp
cwtl
sbb
cmc
add
push
loop
push
cmp
loopne
cmp
mov
cmp
inc
shl
cmc
mov
jne
xchg
subb
pop
xor
hlt
adc
sub
ja
mov
inc
lret
mov
fcoms
fwait
fwait
sbb
aad
xchg
stos
jo
imul
popl
jo
and
jnp
adc
cmp
xchg
xchg
adc
dec
icebp
test
vcvtsi2sd
adc
push
aad
and
loope
inc
iret
mov
enter
and
push
nop
cmp
jne
arpl
xchg
sbbb
xor
icebp
sub
loopne
stos
lret
pop
es
rcrb
add
test
xor
cmp
cmp
xchg
test
ret
xchg
adc
int
bound
cmc
notl
xchg
sarl
cmp
xor
insl
push
inc
add
je
sbb
jno
into
and
xor
mov
or
mov
cld
add
or
ljmp
aaa
sub
dec
and
stos
call
sub
push
add
repnz
lds
and
shlb
cwtl
xchg
sbb
sbb
mov
jl
dec
jge
mov
and
or
loop
test
das
std
sub
and
stos
je
shlb
or
add
and
cwtl
sub
clc
movsb
cmp
sarb
leave
scas
push
push
adc
adc
gs
and
add
pop
es
aad
sub
mulb
push
inc
mov
test
je,pn
cwtl
add
push
das
jmp
dec
sub
out
stos
xchg
stos
or
xor
sbb
adc
push
xchg
push
cmp
cmp
push
inc
push
je
add
andb
jmp
push
push
addr16
lea
xor
jb
and
mov
fcoms
add
roll
pop
pusha
push
inc
pop
pop
ret
sar
and
scas
xchg
addr16
lock
push
xor
or
add
sahf
cmpsb
mov
icebp
sbb
xchg
or
loope
xor
inc
cmpsl
stos
mov
add
fstps
and
fistl
pop
xchg
mov
inc
adc
fs
xchg
and
add
jle
mov
cs
ja
jmp
lock
fnstsw
jg
iret
scas
or
adc
ret
pop
adc
mov
and
popa
mov
xchg
loope
and
in
sbb
lcall
sbb
or
imul
pop
out
adc
jb
sbb
mov
sbb
inc
adc
ss
gs
cmpsl
pop
sbb
cmp
inc
fcmovnbe
push
adc
jnp
and
adc
fbstp
mov
pop
jae
fcoms
and
jle
add
pusha
sti
xchg
inc
fadd
sub
or
rolb
sahf
mov
into
sbb
jnp
and
js
cmpsw
push
and
jle
and
mov
mov
les
xchg
mov
mov
add
and
in
dec
out
mov
cwtl
push
inc
jae
notb
cmpsb
jo
mov
les
insb
push
xchg
fistpll
lret
ss
or
cmpsl
das
mov
add
sub
or
jle
dec
cmpsl
cmpsb
lea
mov
inc
xlat
adc
sub
fadds
cmpsl
call
sub
test
test
mov
cmp
sub
outsl
cmp
jl
adc
aad
jecxz
jno
jnp
push
xchg
jmp
sbb
movsl
mov
loop
add
pop
mov
adc
push
xlat
sbb
add
adc
add
mov
dec
inc
mov
pop
stos
sbb
jmp
int
sbb
xor
loope
mov
or
jp
fmull
sahf
mov
es
pusha
cmp
mov
xchg
pop
inc
test
out
pop
lea
dec
xchg
sti
fdivrs
into
aaa
iret
and
jno
adc
or
stc
dec
inc
mov
lahf
and
add
cmp
sub
test
in
pop
adc
push
insb
jge
push
inc
and
outsl
sti
iret
test
ror
movsl
adc
push
pop
pop
icebp
dec
cli
into
lahf
stc
loope
lret
add
adc
sub
movsb
inc
test
test
inc
add
or
add
jo
sub
sti
push
lods
or
jb
in
xchg
or
adc
inc
int3
test
jl
xchg
sub
movsb
test
dec
js
mov
imul
das
sub
inc
mov
inc
pop
jmp
adc
pop
add
mov
add
cltd
sub
mov
or
repnz
movsb
and
addr16
loopne
pop
mov
mov
push
mov
push
test
jb
pop
pop
imul
ror
sbb
push
mov
mov
jl
test
addb
inc
mov
inc
push
sar
cmp
aad
fucom
mov
dec
push
testl
pop
imul
sbb
cwtl
bts
into
enter
aad
mov
add
fnsave
push
aad
or
out
into
and
inc
jmp
movsl
fcomi
ret
call
insb
iret
out
adc
addr16
mov
clc
lahf
mov
and
push
or
cmp
xchg
add
push
cmpb
pop
xchg
add
outsb
ss
xchg
adc
out
add
adc
push
cltd
out
aad
jnp
aas
mov
sub
mov
push
adc
jp
mov
sub
pop
push
icebp
pop
pop
scas
adc
sbbl
in
lods
aam
add
adcl
add
std
cmpsb
mov
push
ds
jl
rclb
add
les
xchg
xor
xor
mov
mov
add
mov
add
call
push
pop
shrb
sbb
es
and
cltd
loop
test
mov
out
xchg
cli
outsb
add
jb
dec
test
lret
pop
int
mov
jno,pn
stos
jp
and
stos
sbb
bound
insl
push
add
pop
pop
ja
inc
or
arpl
repz
outsb
and
and
sbb
and
out
dec
aas
add
add
iret
xchg
or
nopl
mov
pop
jno
or
adc
aaa
inc
daa
scas
arpl
xchg
cmp
sub
add
and
je
adc
xor
cmp
xchg
loopne
mov
lea
stc
sub
ret
bound
jle
imull
fstpl
jns
outsb
push
arpl
lds
jp
dec
sbb
pop
jb
push
jbe
pop
or
jnp
aaa
adc
push
aaa
pusha
daa
or
pop
sti
xchg
jno
adc
mov
or
pushf
popf
mov
outsl
addb
adc
pop
rcrb
inc
iret
popf
sbb
or
jecxz
test
and
mov
mov
out
cmp
fimull
ss
js
mov
add
jg
inc
lidtl
les
jns
push
insl
pop
cltd
add
add
movsb
push
or
jae
xor
lret
lods
sbb
test
sbb
jl
in
mov
daa
inc
fcmovb
lods
stos
and
jge
mov
lret
xchg
xchg
xorb
jbe
push
lret
mov
push
push
and
sub
inc
sarl
sbb
cmp
out
push
jp
or
pusha
sbb
sbb
or
inc
fstpt
sub
outsb
popa
out
iret
xor
testb
sub
stos
addr16
inc
scas
xor
or
and
stos
push
jae
and
aad
test
jg
lret
int3
and
loopne
into
mov
push
sub
push
addr16
ret
push
mov
addr16
sub
imul
dec
sub
popa
aad
popa
push
jl
push
iret
jmp
inc
std
or
iret
out
sub
add
dec
inc
mov
sbb
push
dec
sub
xchg
fwait
add
je
push
jp
jecxz
or
dec
inc
stc
add
mov
jae
sub
bound
icebp
lods
mov
and
xor
rcl
sbb
jo
imul
mov
or
adcb
inc
cmc
push
add
jne
sbbb
push
shrl
aad
repz
mov
pop
cmc
pushf
xor
push
pop
dec
fs
popf
add
pop
add
cmp
insl
enter
inc
bound
out
add
in
push
sub
daa
jne
add
mov
xor
and
call
and
pop
cmc
pushf
popa
adc
mov
fs
daa
push
xor
adc
jecxz
loope
and
and
cmp
outsb
sub
and
xchg
mov
add
push
sbb
push
xor
push
add
iret
or
sub
mov
jecxz
cmp
pop
in
dec
loop
dec
dec
bound
xor
or
mov
test
outsl
stos
loope
xchg
sbb
push
sub
adc
adc
xchg
cmpsb
loop
cmp
ret
insb
int3
add
xor
pop
and
test
aaa
ret
iret
mov
mov
dec
repz
xchg
add
ror
or
dec
cmc
xchg
inc
sub
frstor
mov
dec
fisttpl
fwait
inc
js
pop
dec
nop
daa
loop
add
inc
inc
lahf
mov
ss
pop
in
or
dec
insl
je
mov
int
inc
dec
inc
add
mov
lds
pushf
inc
or
pusha
mov
dec
rolb
loope
sbb
xor
aam
enter
test
jecxz
sub
xchg
mov
mov
xor
jge
arpl
inc
test
xchg
pop
mov
mov
stos
daa
adc
mov
bound
fs
adc
rorl
data16
adc
add
fbld
scas
stos
or
xorb
test
add
add
imul
add
sbb
add
mov
popa
das
push
dec
xor
lock
lods
out
loop
sub
xchg
push
mov
pusha
and
push
aaa
jle
cli
and
stos
xor
lock
inc
shll
or
add
jmp
and
andb
je
test
xchg
jns
call
sub
xchg
sbb
daa
stos
lret
pop
adc
jle
and
push
clc
cmpsl
xor
ss
add
bound
add
mov
xchg
stos
outsb
add
scas
sub
jp
ljmp
and
jo
mov
test
push
adc
jle
fistpll
daa
divl
int3
inc
or
out
push
dec
xchg
and
mov
mov
xor
inc
in
loopne
das
mov
lods
mov
xlat
sahf
and
jle
mov
ds
adc
add
fists
and
fsubrs
aaa
lods
mov
sub
sahf
mov
and
das
andb
cmp
aaa
data16
push
inc
iret
mov
movsb
outsl
das
mov
cmp
jle
rcr
into
and
xchg
pushl
add
or
sbb
push
leave
popf
test
and
sub
cmp
sub
andb
or
cmp
scas
jno
fs
cmp
mov
jne
add
inc
and
xchg
in
loopne
mov
fidivl
insb
cmp
sbb
xchg
hlt
adc
sub
ljmp
icebp
pusha
loopne
jo
mov
out
sub
out
stos
insb
jb
insl
fldt
test
and
fisttpll
inc
aaa
mov
ret
outsl
stos
sbb
pop
push
js
fs
and
push
mov
pushf
das
adc
aaa
mov
and
xlat
sbb
inc
ret
mov
push
mov
mov
push
cmp
pop
pop
or
shrl
sbb
shll
xchg
into
push
and
mov
scas
sbb
lret
ss
sbb
push
pop
xchg
enter
pop
test
stos
insb
sti
sbb
das
push
les
jbe
out
lods
repnz
add
mov
add
adc
mov
hlt
mov
cmp
xchg
mov
fdivl
and
cli
push
mov
ss
adc
lods
es
push
lods
aam
add
pop
jae
and
sub
adc
cmp
daa
xor
faddl
add
mov
push
and
add
cld
mov
or
nop
and
cwtl
pop
sahf
xor
mov
adc
jle
xor
inc
mov
ret
ret
add
testl
cmp
push
aam
jmp
sbb
rcl
push
out
test
push
jle
mov
outsb
or
jge
sbb
jno
mov
dec
push
cld
es
add
inc
hlt
pop
fxch
sub
inc
pop
subl
push
xor
add
into
jns
xchg
dec
push
inc
add
cmp
lock
lret
stos
xor
sbb
fisubl
je
mov
out
cmc
mov
loopne
or
sbb
iret
inc
popa
jae
je
push
cmc
mov
loope
add
xchg
cmpsb
icebp
je
mov
push
insl
adc
loope
xor
or
xor
and
or
mull
push
mov
sbb
outsb
lods
cmp
sub
push
xchg
add
loope
mov
idiv
mov
jmp
cmp
addl
daa
and
mov
or
mov
cltd
xchg
and
pop
adc
stos
pusha
xchg
adc
pushf
scas
pop
pop
les
pop
push
inc
mov
popl
lds
outsb
sub
or
das
mov
test
out
fcoml
push
xchg
add
test
sub
test
mov
lock
pop
inc
or
insb
adc
inc
inc
or
xchg
add
dec
mov
dec
js
xor
cmp
xchg
and
mov
js
sbb
xchg
cli
mov
ss
dec
jbe
mulb
mov
adc
fcoms
stos
xlat
icebp
sbb
sbbb
mov
xor
cmp
pop
jmp
pusha
push
xor
jecxz
or
pusha
dec
adc
inc
jns
mov
jne
andb
cmc
shr
pop
push
int3
sbb
pop
rcrb
icebp
int3
push
pop
mov
dec
pop
sub
outsb
and
aaa
push
ret
xchg
aad
outsl
mov
mov
js
push
mov
fnstenv
jo
jmp
fsubrs
test
or
pop
mov
sbb
xchg
and
ret
dec
push
in
loope
stos
dec
sbb
je
push
pop
push
insl
add
xor
mov
add
jp
dec
xchg
pusha
and
adc
xor
cmp
popa
insb
adc
mov
test
cmpsb
mov
out
sbb
xchg
bound
sub
bound
das
mov
ljmp
sbb
shll
movsb
sbb
push
mov
es
xor
mov
jp
push
lods
mov
adc
push
popa
sub
add
mov
sbb
out
loopne
enter
out
fwait
sub
inc
pop
mov
add
out
and
xchg
cmp
sbb
adc
inc
sti
xlat
mov
fidivs
lods
cmp
cs
scas
sub
or
in
cmp
cmp
jbe
push
jno
mov
aam
push
arpl
and
add
sbb
hlt
xor
cmp
mov
add
stos
js
push
push
insb
xor
pop
aam
mov
popf
inc
xor
mov
loopne
jp
mov
mov
adc
mov
rcll
xor
xor
scas
fldt
sbb
mov
mov
aaa
stos
cmp
aaa
es
add
mov
aad
iret
mov
push
rorb
shlb
mov
mov
loope
add
test
mov
stos
loop
and
adc
popf
pushf
js
sub
loopne
movb
jae
and
in
aam
div
pop
ret
mov
jbe
ret
repz
mov
rclb
scas
repz
pop
xor
lock
dec
mov
sbb
outsl
jg
stos
sbb
into
mov
pop
lods
or
sub
loope
cmp
mov
pop
push
jge
sbb
add
lods
xchg
dec
mov
lods
push
adc
push
sbb
adc
adc
mov
push
sub
sub
sub
and
or
adc
movsb
stos
add
push
mov
jl
sbb
inc
mov
inc
cmp
call
adcl
mov
inc
pop
jo
les
lret
xor
cmpsl
pop
add
push
and
jnp
cmp
out
mov
sub
fadds
lret
repnz
xor
aam
inc
adc
sbb
mov
stos
ret
and
mov
xor
add
inc
daa
lds
cmp
lret
mov
inc
dec
and
es
rorb
pop
nop
or
js
push
add
mov
add
sub
dec
push
popl
sbb
arpl
scas
mov
dec
inc
out
sti
mov
xor
add
pop
sti
in
inc
sub
and
fdivl
add
inc
jno
fistl
add
adc
pop
push
pop
xchg
je
inc
jg
add
push
mov
mov
in
inc
mov
jmp
mov
cs
push
lret
mov
test
add
add
add
and
jae
add
push
mov
stos
sbb
inc
dec
sbb
lcall
rorl
sbb
in
arpl
out
add
inc
mov
cpuid
test
xchg
cmp
or
pop
arpl
adc
pop
push
push
aaa
inc
mov
xchg
pop
ret
push
loopne
hlt
or
dec
mov
or
test
lret
lahf
sbb
add
aaa
popa
mov
shlb
pushf
xchg
cmp
and
loope
leave
mov
dec
mov
mov
ficoml
or
pop
idivb
mov
fimull
inc
xchg
out
mov
and
jg
test
pop
std
xor
adcb
mov
xor
adc
lret
dec
mov
and
push
dec
in
xlat
and
sbb
pop
sbb
mov
roll
mov
fldt
push
jle
pop
popa
add
push
sub
insl
sub
mov
mov
add
mov
pop
sub
aas
addl
add
mov
xor
je
scas
mov
leave
inc
cmc
cmp
das
cmp
cmp
mov
mov
push
aam
addb
adc
loope,pt
imul
cld
das
pop
add
js
rcr
inc
test
xor
add
mov
mov
xor
or
push
adc
bound
push
sahf
sbb
and
fadds
push
nop
stos
lret
aad
pusha
sbb
jae
lock
push
out
dec
iret
mov
jnp
popa
js
stos
stc
mov
push
cmp
push
add
pop
inc
cmp
jmp
jg
dec
cmovle
and
cmc
mov
push
ds
addb
lods
movsb
xor
lock
pop
push
test
push
ret
fs
add
in
add
insb
iret
mov
rorl
loop
sub
fs
es
push
mov
dec
mov
or
add
xor
mov
aad
fildl
mov
fistl
dec
push
sub
or
lods
jmp
les
and
or
notl
gs
cmc
mov
xor
mov
cmp
pop
add
sarb
sbb
leave
inc
cmp
xchg
lret
mov
adc
ljmp
ret
pop
int
and
int
fimuls
subb
mov
les
sbb
jl,pn
inc
pop
mov
mov
add
imul
cmp
sbb
sbb
mov
add
mov
daa
xor
mov
fisttpll
inc
stos
in
cmp
clc
addl
pop
inc
test
lret
mov
sub
or
inc
xchg
lcall
nop
push
jge
pop
add
push
push
jb
ret
div
je
sub
sub
popf
ret
les
sbb
mov
andb
pop
cmpsl
push
add
pop
and
add
and
push
mov
jg
sbb
fsubrs
rol
divb
lods
pop
jo
out
adc
adc
mov
jno
sub
push
pusha
cmp
pusha
stos
inc
cltd
mov
and
mov
push
and
rcll
in
pusha
jnp
mov
push
and
jecxz
and
mov
cmp
jge
loope
inc
popa
add
rclb
loopne
cmc
or
xlat
lret
dec
dec
in
mov
sbb
adc
stos
data16
mov
xchg
dec
push
pop
nop
dec
xor
sbb
fstpt
cwtl
push
jne
fldcw
lret
or
mov
add
mov
jnp
in
shlb
out
or
jecxz
addr16
pop
fdivrs
add
addl
ss
int3
mov
int
adc
mov
inc
and
loope
xchg
mov
mov
mov
stos
ljmp
mov
add
pop
xor
adc
stos
fsubs
stos
lea
addb
mov
sbb
push
adc
pop
ret
stos
mov
mov
push
xchg
jo
inc
pusha
jp
and
mov
inc
loop
stos
mov
jg
and
mov
push
js
cmp
sbb
popf
jle
pop
arpl
push
sbb
fs
pop
add
add
dec
cmp
inc
cs
push
mov
and
dec
fiaddl
js
lea
stos
pop
xchg
aaa
out
xor
rclb
fldl
sti
jbe
xchg
sbb
aad
or
sbb
sub
cmp
rclb
movsl
sbb
mov
rcll
mov
and
push
mov
pop
in
js
test
scas
push
dec
or
mov
lcall
flds
cltd
stos
jle
mov
aad
outsb
lock
mov
dec
icebp
fwait
dec
les
aas
push
sbb
iret
icebp
mov
xor
cld
cli
fildl
mov
sub
xchg
ds
mov
iret
nop
sub
adc
in
mov
mov
int
add
sahf
push
add
sti
adc
push
jne
pusha
shr
dec
cmp
lods
aam
mov
mov
xchg
xchg
fsubrp
stos
sarb
jnp
xchg
addb
test
and
repnz
push
sbb
sahf
fdivs
add
sub
cmpsl
fmuls
aad
addl
pop
test
jb
jne
int3
jle
mov
lahf
xor
jge
bound
pop
sub
or
cli
inc
stc
dec
mov
call
or
test
loope
mov
add
mov
mov
and
mov
pushf
lock
and
xchg
stos
cbtw
lcall
or
push
lcall
loop
and
jle
ds
push
call
iret
add
or
fwait
jae
sub
popf
push
and
sbb
and
push
test
fwait
cmp
pushf
mov
popf
pushf
xor
inc
pop
scas
sbb
shll
mov
and
and
and
jmp
cmp
mov
sub
xchg
mov
repz
ljmp
lea
push
lret
lret
xchg
sub
hlt
dec
packuswb
dec
mov
cmp
lods
xchg
shlb
add
and
sbb
or
mov
adc
add
leave
and
in
daa
fcompp
or
in
fadds
stos
mov
add
add
jo
jmp
sbb
repz
or
fiadds
xor
testl
pop
push
lret
or
adc
jae
lahf
lods
pop
xor
shrl
pop
stos
mov
sub
or
test
pop
mov
ds
push
sbb
daa
mov
jmp
xchg
or
sub
dec
cltd
mov
sti
adc
add
sub
in
inc
popf
scas
lock
sar
dec
mov
and
and
sub
mov
movsb
or
sub
xchg
jb
sbb
out
js
in
mov
ss
xor
push
add
mov
pop
push
shrl
sbb
xchg
or
test
data16
xor
mov
push
sbb
loop
adc
bound
mov
bound
je
sahf
call
add
arpl
fsubl
mov
or
dec
mov
xrelease
pcmpgtb
shlb
fldenv
test
dec
aaa
mov
cmp
or
sub
or
ret
out
inc
xchg
lods
jl
leave
mov
inc
js
ss
repz
iret
adc
pop
mov
mov
mov
xchg
cmp
jb
bound
xchg
addr16
add
sbb
xchg
push
dec
adcl
rcll
inc
out
jbe
stos
mov
popa
or
sbb
aad
fimull
aam
mov
mov
in
pop
pop
aad
dec
push
data16
notl
cmc
das
aam
cli
es
sub
inc
jge
lea
adc
dec
sub
cmp
je
aaa
ja
sbb
adc
ret
dec
xchg
cmp
shlb
loop,pn
jo
inc
scas
ja
sub
mov
jno
les
scas
xor
pop
pop
add
mov
jae
xor
sub
test
insb
and
aad
push
push
mov
and
mov
xor
dec
mov
add
movsb
pusha
lock
cmc
icebp
xchg
mov
fstps
lods
xor
testb
sub
addr16
in
mov
ss
push
jns
sbb
insl
xlat
lret
loope
ljmp
mov
shlb
stos
fimuls
mov
pop
xchg
ja
and
xchg
je
mov
sub
and
into
xor
mov
cmpsl
sub
pop
adc
fnstsw
jb
add
sbb
and
mov
xchg
adc
ds
in
lock
xor
push
fbld
js
jp
and
inc
ja
lods
xlat
jle
and
or
mov
mov
lcall
inc
popf
mov
stos
sbb
push
xchg
jnp
stc
icebp
push
stc
dec
mov
xlat
xchg
orl
adcb
testb
ljmp
loopne
push
ffreep
xchg
cmpsb
pop
xchg
icebp
scas
psrad
js
mov
iret
pop
or
daa
and
popf
rcll
jle
mov
or
jmp
lea
jo
mov
mov
js
jnp
mov
call
pop
sub
mov
lds
or
push
out
add
ret
ret
into
rcr
push
add
jecxz
roll
popl
inc
push
mov
xor
fsubrs
push
pop
jo
les
jge
pusha
pop
sub
fadd
aad
inc
int3
and
mov
ficoml
ss
movaps
insb
sbb
mov
cwtl
in
or
or
jnp
lahf
and
mov
loopne
pop
movb
mov
test
mov
pop
sbb
imul
arpl
test
pop
or
insl
mov
int3
lcall
arpl
ljmp
shrl
inc
iret
data16
mov
test
sbb
fmull
dec
enter
jb
outsl
and
push
push
mov
jg
jge
xchg
mov
xor
sub
push
loopne
jne
or
push
adc
call
mov
cld
inc
mov
mov
add
xor
into
clc
mov
fcomps
add
sbb
mov
js
out
push
add
addr16
or
mov
push
or
cli
fdivr
fs
inc
add
cmpsb
popl
mov
inc
add
rcrb
iret
sub
data16
add
fldt
cwtl
sbb
sbb
inc
outsl
pop
xor
daa
add
mov
jne
loop
cmp
fdiv
and
or
outsb
scas
add
push
mov
cmp
jae
in
adc
movsb
pop
push
bound
pop
adc
inc
jmp
pop
inc
adc
fsubrl
or
and
ja
insb
jmp
mov
mov
and
pusha
int3
outsl
repnz
add
or
adc
mov
out
xchg
xchg
negb
cmp
push
mov
xchg
insl
test
xchg
mov
add
xchg
gs
pusha
mov
in
and
mov
stos
mov
cli
push
sti
rcrl
jg
idivl
and
cmpsl
inc
jb
stos
fstps
outsl
inc
lods
mov
fwait
or
xor
mov
mov
shrb
push
cmp
inc
adc
add
mov
loope
sbb
pop
ja
push
das
pop
into
ss
int
xlat
scas
add
xlat
add
or
and
fwait
lods
xor
arpl
filds
xor
mov
mov
pop
into
aaa
mov
xchg
xor
mov
or
mov
movsb
xchg
adc
int3
push
jnp
into
mov
das
push
xchg
insb
push
sti
dec
arpl
inc
xor
int3
cmp
sub
out
lock
rclb
sbb
xchg
in
cmp
add
iret
pop
scas
bound
inc
jmp
rcpps
mov
mov
sub
sbb
add
and
push
and
sbb
jnp
sub
xchg
fwait
push
cmp
xor
pop
mov
je
mov
divl
lods
pop
lods
rcrb
and
or
in
add
aaa
outsl
and
scas
faddl
lcall
sub
jno
sbb
sub
dec
icebp
jo
push
sub
xchg
icebp
dec
test
xchg
loopne
leave
inc
inc
xchg
js
or
sti
pop
xchg
xchg
cmp
je
and
rcrb
scas
push
inc
fnsetpm(287
jbe
mov
das
scas
int3
inc
js
shll
sarb
jno
sti
shlb
enter
xor
xor
inc
cmp
mov
jnp
mov
movsb
inc
pop
jbe
cltd
sbbl
notl
jle
jbe
xor
jle
in
shrb
jo
insb
imul
test
pop
pop
sbb
ljmp
xor
sbb
sbb
sbb
xor
dec
popa
inc
and
mov
and
aas
add
pop
rorb
jg
jmp
bound
movsb
pop
inc
push
xchg
dec
mov
dec
or
sub
adc
popa
repnz
lea
push
xchg
push
push
dec
bound
push
shlb
int3
push
jbe
aas
cs
adc
or
jae
push
xchg
inc
mov
es
fs
movsl
add
jne
or
and
cwtl
jecxz
mov
xor
mov
test
pop
adc
mov
adc
dec
sti
int
jecxz
negb
out
adc
cmpsb
adc
stos
cmpsb
cld
and
andl
pop
inc
inc
jp
xor
xchg
mov
popa
jno
xlat
leave
xchg
loope
cmp
pushf
push
nop
insl
xorb
js
lahf
das
test
xor
lods
add
out
add
sub
add
in
pop
stc
jb
hlt
inc
adc
loopne
int
jb
add
push
ja
in
add
jbe
xchg
xor
xchg
out
add
pusha
xchg
test
lret
pop
pop
xchg
mov
inc
adc
mov
adc
imul
popa
dec
push
or
insl
push
add
out
js
sbb
scas
out
das
into
push
mov
cmpsb
or
popl
xchg
fwait
mov
push
fbstp
std
sub
and
push
movsb
pop
into
clc
add
inc
dec
jb
inc
inc
loopne
mov
cmpsl
imul
and
stos
jg
cmovs
xlat
adc
imul
aam
aad
imul
addb
mov
mov
cmc
xchg
aam
sahf
std
ss
mov
adc
inc
push
lea
int
inc
insb
repz
ds
mov
popf
adcl
or
dec
pusha
push
pop
gs
adc
or
sub
and
aas
popf
iret
aad
aaa
cltd
dec
pop
xchg
inc
in
roll
mov
jne
inc
add
bound
daa
sbb
push
mov
push
fldcw
aam
jne
dec
dec
pop
mov
andb
dec
pop
inc
out
adc
les
aad
add
adc
aaa
xor
sbb
mov
jmp
mov
addr16
pop
clc
mov
nop
addr16
mov
xor
cwtl
inc
lods
jmp
lods
ja
leave
js
dec
insb
xchg
push
sti
fs
popa
dec
mov
sbb
mov
lock
in
pop
das
xchg
inc
push
dec
in
adc
add
sub
sbb
fcom
and
adc
imul
insb
and
rcll
leave
fcomps
rorb
lahf
adc
addb
ror
xchg
cli
push
or
mov
and
jge
pop
inc
dec
and
mov
cmp
mov
jne
pop
push
mov
insb
add
das
jge
jle
inc
dec
sbb
add
mov
dec
inc
xchg
push
sbb
repz
sbb
shlb
xchg
push
leave
push
mov
pop
push
fisttps
pop
xlat
test
into
jp
add
pcmpeqd
lods
push
add
push
fmuls
ljmp
inc
inc
mov
jmp
in
sub
xlat
xchg
sub
xlat
ds
sahf
fs
cmp
xlat
loopne
into
es
iret
cmc
mov
jp
lcall
lret
cmc
das
mov
cld
mov
push
fs
arpl
lods
inc
scas
mov
outsl
push
xor
push
popf
sbb
xchg
xor
outsl
sub
mov
inc
xchg
out
sub
xchg
orb
dec
pop
lahf
jne
lret
mov
roll
xor
imull
das
lahf
push
pop
sub
pop
in
int
pop
pushf
inc
mov
test
or
aas
in
negb
xchg
stc
or
ud0
pop
push
fs
aaa
scas
mov
mov
idivl
sub
mov
push
push
popa
daa
lea
shlb
cmp
outsl
es
adc
add
popa
movntq
addl
mov
push
jne
cmp
pop
sub
mov
bound
in
or
xor
imul
xchg
mov
gs
fs
adc
mov
sub
adc
mov
add
dec
fiadds
fstp
out
enter
sbb
sbb
mov
enter
jge
loop
or
add
sti
add
in
daa
inc
popa
sbb
or
fisttps
jle
or
ds
movl
in
in
inc
enter
and
shll
xor
out
sbb
das
arpl
sti
push
mov
in
int3
xchg
or
push
stos
or
sti
dec
mov
jns
addr16
out
movsb
adc
pop
shll
add
sbb
arpl
add
and
push
roll
cmpsl
xchg
sub
out
mov
mov
and
jnp
mov
xchg
mov
jnp
leave
cwtl
or
xlat
jne
lahf
sbbb
xor
and
call
sub
push
push
mov
popf
movb
pop
fdivrl
addr16
xor
pop
or
imul
inc
insl
cmc
jp
test
or
add
in
sbb
push
fiadds
lods
movsb
cmp
mov
in
cmp
sbb
lds
jecxz
push
int
dec
pop
fcmovbe
sbb
add
add
cltd
mov
pop
xchg
jne
pop
jo
iret
xrelease
sahf
jle
mov
incb
inc
jb
into
call
dec
leave
add
daa
outsb
add
xchg
sti
ljmp
add
or
dec
ja
add
mov
sbb
xchg
inc
mov
les
cld
add
inc
sub
push
add
mov
fs
lds
pop
and
jl
and
int
add
fcmovbe
add
or
cmpsb
mov
xchg
xchg
iret
lcall
fucomi
pop
adcb
or
xchg
std
dec
out
fmull
xchg
inc
inc
dec
push
ss
add
add
fsubrs
or
lods
inc
inc
xchg
mov
shl
inc
add
mov
push
or
or
add
xor
pop
xchg
mov
jle
add
mov
insl
sbb
inc
mov
sbb
inc
shl
fucomip
mov
xchg
xor
pushf
ljmp
pop
push
fcmovnu
aad
dec
xchg
jge
jae
lods
ficompl
dec
sbb
imul
add
mov
pushl
sub
dec
out
cs
fiaddl
mov
icebp
dec
or
jno
sti
pop
mov
add
movsl
test
rolb
lock
mov
icebp
inc
push
adc
mov
add
call
xchg
aaa
pop
pop
ficoms
sbb
popf
sbb
in
mov
test
mov
inc
ret
loopne
sub
filds
jbe
mov
mov
loopne
push
push
cmp
jo
jbe
pop
testb
test
fldt
out
fildl
lcall
mov
sbb
sbb
pop
inc
test
cmp
jg
jno
out
cmp
pop
lret
xchg
iret
add
add
je
out
arpl
or
outsb
cli
pop
jo
xchg
xchg
or
pop
and
mov
inc
in
fidivrs
mov
imulb
sbb
sub
lods
in
pusha
mov
popf
loopne
cmp
or
aad
mov
in
fnsave
mov
cli
jge
mov
xchg
aad
outsb
roll
mov
pop
and
jae
jl
xchg
mov
adc
jne
xchg
xchg
imull
add
inc
jnp
sbb
sub
cmp
inc
mov
pop
je
aaa
sbb
sbb
mov
insl
out
dec
mov
sbb
mov
xor
mov
les
out
inc
mov
inc
mov
ficoms
rcrl
and
shl
push
sub
inc
inc
xchg
popf
push
sbb
loop
xor
scas
jae
push
mov
das
in
sbb
es
jmp
sub
mov
sti
dec
inc
loopne
fcmovnu
sub
dec
jge
mov
data16
mov
xchg
pop
xor
mov
push
test
dec
push
or
xchg
add
pop
mov
int3
or
je
pop
push
test
stc
sub
mov
push
push
sbb
mov
gs
add
das
les
xchg
sbb
adc
das
mov
int
jp
call
outsb
dec
push
lahf
pop
mov
pop
icebp
aad
push
adcl
cli
cmp
pushf
cmp
dec
test
jne
inc
lea
adc
jbe
adcl
sbb
aas
push
popa
fmuls
cs
outsb
mov
ja
pop
rolb
cmpsl
jle
push
jne
iret
jbe
popa
or
mov
in
js
mov
int
mov
or
sbb
loope
xchg
mov
add
mov
push
outsb
ret
pop
gs
xor
pop
xor
mov
mov
pop
insl
adc
jo
cld
mov
testl
cwtl
push
pop
mov
gs
add
aad
clc
sub
movsl
jo
jecxz
mov
mov
fwait
ss
ret
pop
dec
in
aas
mov
lcall
test
outsl
jnp
or
scas
mov
out
xchg
xchg
lods
sbb
mov
insb
xchg
mov
fbstp
jne
add
aam
inc
cmp
mov
and
mov
ja
adc
jb
int3
lods
add
mov
rcrb
jb
fidivl
jo
sbb
mov
aad
adc
insb
arpl
mov
fwait
pusha
fidivs
int3
xor
mov
stos
vunpckhps
pop
test
or
add
or
test
ret
jle
push
das
pushf
xchg
xchg
inc
std
mov
cltd
push
adc
cmp
jmp
adcb
lret
pop
sub
dec
lods
test
pop
push
push
pushf
mov
imul
mov
ret
mov
jle
in
xchg
fcmovnu
push
icebp
mulb
popa
mov
out
sbb
sbb
xchg
jae
xchg
icebp
in
pop
or
in
push
adcb
push
repnz
mov
sub
xor
sub
sbb
jg
sbb
popf
xor
aad
pop
jecxz
add
mov
mov
shlb
xchg
movsb
jns
loopne
mov
mov
andb
sahf
lods
in
xchg
adc
popf
dec
dec
add
mov
cmpsl
lock
and
out
imul
shll
sub
cmp
aaa
mov
fbstp
mov
cmp
fs
leave
scas
faddp
mov
jbe
pop
ds
in
mov
mov
decb
rcll
pop
sbb
loop
jne
sbb
push
and
lds
into
lods
mov
fadds
push
xchg
lcall
dec
insb
ds
stc
mov
fdivr
mov
popf
rolb
call
ret
inc
ret
movsb
adc
fidivl
xchg
cmc
dec
push
and
sub
ljmp
inc
inc
fs
mov
xchg
mov
in
pop
loop
jmp
add
jbe
mov
lods
add
cwtl
adc
fdivs
pop
sbb
cmp
pop
dec
push
nop
fcmovb
add
dec
adc
frstor
test
test
aam
add
mov
adc
mov
inc
stos
sahf
std
mov
aaa
insb
lea
lods
test
push
sbb
clc
nop
je
inc
ret
outsl
push
movsl
mov
outsl
imul
aaa
sahf
inc
je
sbb
mov
jmp
iret
dec
push
xor
jbe
jl
setnp
icebp
insl
nop
mov
and
add
pop
inc
dec
lcall
dec
pusha
in
push
dec
imul
movsl
mov
repnz
xchg
test
outsb
gs
sub
lods
mov
inc
ret
adc
lods
pop
test
fildll
ds
arpl
ds
pop
gs
test
cmp
mov
mov
call
mov
fnsave
fmull
xchg
inc
push
inc
mov
aam
es
in
push
ret
ret
sub
out
sub
shl
pop
sbb
test
sub
lcall
pop
adc
rclb
outsl
dec
sbb
cmc
jmp
mov
mov
rclb
popf
jns
loopne
imul
lahf
bound
jecxz
shll
or
jge
lock
xor
or
sarl
outsb
mov
dec
inc
pushl
sub
or
xor
loopne
mov
cmp
mov
insl
out
or
push
mov
movsb
mov
mull
enter
cmpb
scas
es
push
out
rcrl
insl
roll
push
je
mov
arpl
mov
xor
or
rcrl
mov
addb
add
divb
outsl
fiaddl
inc
add
imul
cmc
mov
movsl
js
push
pushf
lods
mov
int
insl
fldt
jns
cmpsb
imul
jle
bound
andb
pop
int
xor
and
mov
test
jns
and
outsb
xchg
mov
imul
cld
in
test
notb
push
cltd
cli
out
rcrl
rorb
xchg
push
jle
jnp
mov
aam
lds
mov
loopne
jne
cs
dec
jle
lods
add
jl,pn
outsb
adc
and
adc
rorl
mov
sbb
jnp
pop
adc
xchg
scas
lods
aam
rcl
fists
cmp
test
sbb
mov
sbb
fimull
cmp
int3
dec
mov
sbb
push
ja
mov
lds
ss
add
outsl
push
sbb
xchg
ret
mov
hlt
sbb
mov
jl
in
sbb
ss
lock
mov
ja
push
sub
and
and
xor
dec
js
stos
jne
inc
push
push
scas
mov
mov
aas
or
movsb
push
xchg
xorl
mov
ds
cmpsb
xchg
rolb
fwait
adc
js
int3
cmpsl
mov
insb
into
jbe
lahf
adc
fwait
pop
add
xor
iret
std
dec
sbb
mov
push
arpl
mov
push
adc
in
cmp
std
jmp
call
or
sahf
cld
or
and
arpl
lods
fiadds
out
push
faddl
or
xchg
into
xchg
ret
hlt
test
xchg
jg
ljmp
lret
stos
cmp
and
loopne
mov
mov
popf
sbb
daa
mov
out
push
xchg
mov
adc
add
ds
dec
in
daa
adc
inc
jb
add
insb
imull
add
push
imul
mov
cmpsl
movsbl
rcll
inc
pop
add
mov
add
inc
fsts
push
inc
fsubp
inc
add
out
pusha
jmp
arpl
jmp
shrl
idivb
out
adc
mov
cwtl
mov
ret
je
and
hlt
xchg
push
push
insl
xor
pop
xlat
or
push
aad
pop
mov
xchg
add
cld
insl
pop
outsl
push
xor
test
gs
aaa
xchg
lahf
mov
push
or
dec
push
cmp
sbb
idiv
add
adc
jnp
call
cmp
xchg
ss
jae
xchg
xor
sbb
je
sbb
add
jbe
jle
das
fstpt
pop
sbb
jge
xorl
imul
cmp
push
mov
outsb
jl,pn
mov
adc
jno
dec
mov
mov
dec
shll
les
mov
test
add
iret
mov
xchg
sti
scas
int
idivb
popf
sbb
mov
jo
xchg
xor
jb
out
xchg
shlb
lea
lea
jg
mov
outsl
inc
pop
mov
sbb
pusha
pop
js
mov
dec
out
mov
mov
movsb
leave
mov
cli
loop
mov
pop
xor
mov
sarb
imul
xchg
insb
jne
cmp
imul
and
or
rol
in
push
xor
dec
inc
or
lds
test
pop
and
mov
sti
mov
add
or
or
sbb
ja
mov
stc
ficoms
mov
cmp
sbb
mov
add
aas
rcl
mov
cmp
in
xor
call
adc
and
xor
inc
out
rclb
inc
outsb
addb
lods
aad
dec
es
sub
or
fmuls
cld
inc
pushf
or
loop
movsb
or
sub
dec
push
sub
out
test
loope
jmp
mov
xor
jo
movsb
jmp
outsb
mov
inc
fstps
clc
cld
mov
push
xchg
jnp
sbb
rorb
cmp
test
inc
jmp
cmp
lcall
das
daa
xchg
pop
fdivs
adc
je
jmp
adc
mov
mov
push
stos
mov
mov
hlt
je
subb
jo
stos
je
mov
daa
dec
or
sbb
jo
out
movsl
das
insb
or
fisubl
ljmp
cld
or
jge
iret
add
inc
xchg
pop
push
in
rcrl
lock
aam
pop
stos
jb
mov
mov
add
lret
and
lods
push
js
adc
lret
sbb
push
push
imul
call
stos
mov
mov
inc
hlt
xchg
adc
ss
adc
shr
and
adc
or
adc
imul
test
xor
fwait
std
test
mov
mov
mov
adc
mov
sbb
mov
add
fstpt
repnz
and
adc
inc
fnstsw
pop
pop
cmp
repz
lret
cwtl
xchg
je
test
sbb
cltd
in
aam
inc
push
mov
mov
mov
stos
push
jbe
jmp
call
sbbl
fsts
out
mov
insl
cs
jbe
icebp
cmp
and
insb
push
push
js
adc
pop
jnp
out
stos
xor
shr
xor
adc
call
mov
xlat
cmp
inc
cmp
out
pop
xlat
loop
icebp
test
pop
roll
inc
enter
mov
es
int
je
adc
popa
popa
out
nop
scas
mov
push
stc
je
cld
in
mov
test
or
fisttpl
sub
jae
jl
popa
jmp
xor
push
imul
push
add
add
xchg
mov
pop
addb
adc
and
mov
and
test
daa
inc
add
xchg
aad
xchg
add
je
push
jmp
daa
call
icebp
movsl
inc
lea
in
nop
and
add
pop
fwait
daa
imul
inc
or
or
jp
hlt
cmpsb
sbb
inc
lahf
jbe
cli
testb
loop
mov
mov
int
std
cld
xchg
xchg
add
jmp
xchg
sbb
dec
dec
das
movsl
sbb
lret
in
pushf
jne
cmp
mov
js
cli
sbb
xor
xchg
sub
sbb
das
cmp
sbb
mov
jne
pushf
push
pop
sbb
add
rcll
sarb
pop
dec
push
fidivs
hlt
pop
sarb
mov
in
push
fnstsw
adc
mov
lods
or
cmpb
xchg
add
add
pop
jb
sbb
je
jge
mov
dec
cmp
sbb
cwtl
adc
mov
int3
adc
cmp
push
mov
jnp
loop
or
mov
insb
sahf
push
outsb
cmp
orl
or
and
adc
mov
push
add
xor
pushf
adc
jl
outsb
pop
js
jp
lahf
sbb
insl
cmp
insl
icebp
lahf
xchg
or
pop
cmpsl
push
inc
insl
jg
xor
and
fcomps
mov
add
jmp
mov
mov
xchg
dec
push
icebp
loope
rorl
add
std
pop
xlat
rcll
xchg
out
ds
cli
dec
add
add
pop
sbb
in
xor
sub
sbbl
xor
mov
or
and
cmpsb
adc
and
cmp
cmp
jge
popa
pusha
mov
or
xchg
xor
push
int
repnz
ror
popa
lcall
mov
dec
aaa
fs
sub
mov
aaa
mov
xchg
sbb
fwait
sti
arpl
arpl
mov
inc
mov
cltd
enter
cli
inc
ret
das
fstp
insl
adc
mov
push
lret
push
and
dec
dec
in
sbbb
inc
add
xor
pop
jns
out
mov
pop
sbb
cmpsl
adc
pop
mov
mov
adc
hlt
movsb
filds
rcrb
or
xchg
xor
xor
push
fisttpl
or
mov
fidivs
outsb
mov
mov
cmp
pop
cmpsl
jne
pop
mov
mov
cmpsb
cwtl
pop
push
popf
inc
ret
ret
jo
jecxz
adc
scas
pop
fsub
scas
or
and
push
cs
out
ja
stc
mov
mov
jl
into
hlt
movsb
insl
and
lcall
mov
push
mov
fmull
adc
sbb
lea
shrl
in
pop
inc
out
clc
ss
in
sbb
lahf
push
or
idivl
pop
xor
dec
icebp
sub
fldt
loop
test
les
inc
dec
sbb
dec
movsb
or
mov
inc
dec
mov
lret
dec
dec
lock
fcomps
push
dec
add
mov
filds
fldenv
mov
mov
xor
or
fisubrs
ss
sub
sub
ss
push
add
mov
mov
ss
xchg
repnz
bound
or
mov
int
or
add
push
sub
pusha
inc
ret
lods
call
loop
std
ret
scas
outsb
insl
sub
or
cmp
subl
mov
mov
jg
add
xchg
shlb
jne
add
insl
inc
xchg
pop
lea
lods
mov
xchg
inc
fisttpl
xor
push
push
out
fcoml
mov
jp
shll
insl
sub
pop
outsb
mov
js,pt
pop
fsts
insb
jbe
mov
out
and
fisttps
fdivr
jbe
lock
fidivs
sbb
mov
test
pusha
jmp
add
pop
dec
xorl
enter
jmp
cmpsb
sub
es
adc
and
fstps
lcall
imul
jae
mov
and
scas
adc
cmp
inc
mov
mov
pop
neg
pop
inc
push
add
in
and
insl
icebp
clc
or
push
rolb
and
pushf
and
lock
jmp
sub
repz
es
cmp
mov
pusha
dec
aam
test
cltd
pop
cmp
mov
mov
inc
cmpsb
mov
shlb
add
stos
mov
popf
call
dec
dec
xchg
fwait
dec
push
fs
xchg
add
out
push
lcall
xor
cmpsl
mov
adc
cli
lock
fistpll
fcomp
mov
outsl
sbb
jns
push
cmp
inc
pop
pop
js
dec
push
jne
mov
fmuls
xchg
push
jge
adc
mov
mov
pushf
pop
add
or
call
inc
mov
daa
cmp
inc
push
jmp
xchg
jmp
sahf
pop
fidivl
call
scas
insb
test
xchg
imul
lds
mov
pusha
push
imul
leave
repz
pop
fwait
xchg
mov
dec
mov
int
imul
in
mov
shlb
cwtl
jg
jle
clc
sti
jp
add
loopne
pop
sti
add
mov
int3
test
and
fstpl
out
les
xchg
or
cmp
adc
push
insl
push
or
cli
adc
popl
loop
jge
scas
sub
or
gs
aaa
test
cwtl
fidivl
or
pop
sbb
mov
mov
filds
scas
testl
mov
pop
mov
mov
aas
mov
outsb
repz
mov
hlt
sti
lret
or
popa
ljmp
les
popf
mov
and
fstpl
test
inc
adc
jmp
dec
dec
cmp
sbb
test
mov
rol
lods
mov
test
jl
or
xchg
xlat
js
xchg
xor
pusha
loopne
cmc
push
outsl
fisttpl
ds
stos
fdiv
push
or
aam
push
cmpb
addl
ss
or
aam
push
fcmovnu
mov
mov
mov
lods
xchg
push
pop
decl
pop
out
or
push
push
out
pop
or
loop
insl
stos
mov
mov
jle
jp
popf
inc
push
cmp
dec
pop
add
jne
movsb
incl
sbb
fwait
mov
inc
rclb
adcl
or
push
sbb
lret
arpl
xor
or
lcall
cmp
xor
or
bound
push
mov
xor
xor
pusha
movsl
xchg
loopne
insl
xlat
andb
add
xchg
decl
lea
popf
cmpsb
xor
mov
cwtl
out
and
xchg
inc
xor
insl
xchg
loopne
stc
mov
lods
jo
mov
jbe
dec
imul
xchg
lret
cmpsl
cmpsl
jns
rorb
test
mov
in
mov
and
mov
or
repnz
cmp
dec
sbb
nop
jbe
cmp
jg
mov
and
sub
popa
sbb
sbb
jge
test
outsl
dec
aaa
popa
xchg
gs
aam
pop
je
cmp
pusha
movl
mov
mov
fildll
inc
mov
fldcw
arpl
mov
add
popf
cmp
mov
popa
outsl
sub
ret
rcr
cmp
cmp
mov
pushf
pop
aad
icebp
hlt
push
jae
dec
mov
movsl
mov
popl
lea
int3
out
out
sbb
fincstp
push
incl
shrl
cld
cmp
add
adc
int
pop
mov
sbb
pushf
lods
or
xor
arpl
push
in
stc
pop
xor
push
ret
xchg
mov
fsubrs
push
aas
or
orl
xor
scas
dec
mov
mov
xor
pop
jecxz
repz
iret
sub
aas
xor
fbstp
push
add
fdivs
divb
stos
and
and
neg
call
dec
adc
add
xor
arpl
xor
outsb
repz
dec
add
daa
addl
xor
mov
inc
add
fnstsw
or
add
addr16
add
add
lea
repz
ret
sub
idivb
jbe
adc
add
aas
add
add
in
pop
outsl
add
aas
push
aas
and
pop
or
or
dec
sbb
mov
push
es
sub
cmp
ds
insb
out
out
cmp
addr16
jae
xor
dec
and
or
insl
scas
sbb
ds
ds
testb
outsb
lods
xor
adc
or
sti
or
cmp
out
cmp
das
repz
mov
adc
aas
fildl
ljmp
add
repz
add
mov
and
add
adc
add
pop
xchg
sbb
cmpsl
sub
push
sbb
ret
push
xlat
add
push
fcomp
ret
je
sub
add
pop
cmp
outsl
or
ret
sti
into
push
cmpsl
xor
jecxz
xchg
mov
gs
daa
cmp
rorl
add
negb
pop
out
decl
cmp
bound
add
fstp
divl
or
dec
adc
sbb
ret
sbb
or
xchg
mov
cmp
adc
jnp
out
fnstsw
sbb
fstpt
cmp
testl
insb
cmp
add
aaa
pop
mov
jae
jmp
push
xchg
pop
sbb
push
lods
pop
adc
add
mov
add
into
into
into
cmp
or
cmpsl
repnz
movb
mov
mov
popf
aaa
fwait
inc
cmp
roll
mov
xor
pop
mov
push
sahf
xor
jo
or
pop
xor
bound
mov
ss
sbb
getsec
add
jmp
add
test
or
push
pop
pop
mov
ret
mov
imul
in
sub
shll
add
rorl
outsl
fwait
add
cmp
add
add
arpl
add
adc
arpl
lret
adc
fidivs
sbb
nop
push
ja
or
testb
out
inc
jae
outsl
in
out
sub
call
or
pop
in
xlat
add
add
lea
push
jae
dec
lods
imul
pop
mov
mov
add
into
push
js
jecxz
ret
and
out
roll
add
cmp
or
inc
add
add
fadds
xor
mov
mov
xor
pop
call
aaa
or
in
xor
sub
push
call
call
test
cwtl
jbe
pop
xlat
jne
dec
aad
xchg
add
mov
xlat
mov
xchg
sub
sbb
cmp
testl
jbe
fucomp
mov
pop
aas
sbb
fcmovnb
jbe
shrl
mov
add
add
add
lahf
lods
and
lcall
pop
cltd
cmp
js
fldcw
mov
add
xor
pop
push
push
int
add
jbe
push
and
outsb
lods
outsl
pop
das
jecxz
pop
add
xor
dec
mov
ja
add
mov
add
leavew
push
xchg
loopne
cmp
cmp
neg
lcall
fadds
mov
xchg
cld
lds
adc
mull
sub
out
cmpl
into
pop
mov
lret
inc
cmp
pop
xchg
mov
inc
mov
into
ds
fisubl
cs
dec
inc
imulb
pop
sti
aas
outsl
sbb
add
xchg
dec
notb
xor
mov
movsb
cmp
ds
push
add
inc
ret
xor
cmpl
dec
adc
es
sti
movb
rcrb
ds
or
fsubrl
xor
lahf
imul
ret
xchg
shrb
fsubs
addr16
mov
push
jge
es
jnp
imul
and
hlt
adc
aaa
in
sti
or
iret
mov
push
xlat
andb
pop
das
pop
fists
mov
push
sub
mov
or
mov
and
sub
cmp
sub
sub
cmp
popa
mov
bound
bound
inc
sbb
test
push
adc
pop
ret
add
scas
pop
inc
inc
cmpsb
mov
push
aaa
and
dec
or
in
add
ja
rclb
xchg
add
push
push
inc
xor
imul
lret
xchg
popf
pop
out
add
daa
mov
mov
mov
push
call
rcr
call
leave
gs
cmp
pop
dec
xchg
lods
test
push
andb
xor
pop
mov
jmp
sbb
jnp
cmc
imul
mov
dec
clc
fcomps
fdivrs
push
pop
xchg
enter
mov
dec
jb
push
xchg
cmp
out
out
pop
inc
adc
inc
dec
mov
adc
subb
out
xorl
arpl
fcomps
and
in
sbb
test
enter
fdivrs
aaa
adc
es
push
mov
addr16
and
in
mov
rol
movsb
xorb
jbe
push
std
bound
xchg
adc
cli
insl
out
lods
jae
or
sub
xor
fs
or
lea
mov
ss
outsb
insb
repz
dec
es
lds
stos
add
inc
lcall
jo
mov
icebp
loope
dec
mov
jo
add
out
mov
inc
lea
xchg
or
test
imul
ja
push
sbb
xchg
insb
das
ljmpw
pop
jbe
jmp
aad
or
or
sti
loop
mov
sub
adc
or
cmp
and
jo
ljmp
inc
dec
int3
js
cmp
xchg
sbb
sbb
test
pop
in
nop
push
cmpsb
xchg
adc
insb
lods
xor
adc
adc
mov
adc
adcl
inc
ret
add
xchg
xchg
loope
lock
iret
daa
xor
sbb
sahf
popf
cmp
and
jne
mov
scas
pop
or
pop
jae
aas
das
and
push
or
sub
pop
mov
mov
adc
add
push
inc
sub
adc
je
aaa
and
jnp,pn
outsl
dec
push
imul
mov
es
adc
shlb
or
aas
fsubs
lods
adc
movsb
push
xchg
rcl
inc
and
es
lock
and
adc
inc
into
fimuls
and
xchg
cld
push
sahf
and
mov
lret
or
push
dec
and
lods
and
xchg
ret
xchg
icebp
mov
mov
and
inc
jp
cmp
fucomip
mov
aas
es
rcl
iret
or
bound
add
pop
inc
movsl
ljmp
shlb
push
dec
mov
adc
inc
add
jae
or
or
ret
ficomps
dec
cmpsb
or
and
bound
enter
and
pop
into
mov
cmp
and
into
pusha
mov
sub
into
mov
andb
xchg
sbb
cmpb
outsb
sub
or
fsubl
dec
xchg
hlt
cmp
mov
jmp
lock
sbb
cmp
xorl
inc
pop
jbe
inc
sarl
fcomp
xchg
cli
push
mov
sub
jg
das
and
fs
pop
aaa
add
sbb
arpl
cmp
popf
sub
jg
fisubrl
int3
inc
cmp
and
outsl
jp
inc
ds
mov
fbstp
scas
mov
mov
test
xchg
andb
mov
push
and
inc
xchg
push
mov
sbb
or
mov
cltd
and
push
out
adc
mov
arpl
add
sub
addr16
adc
lret
push
inc
movsb
ja
in
xor
out
cmpsl
cmp
in
add
cmc
sbb
xor
sahf
hlt
add
or
ret
and
mov
scas
add
add
and
rcr
fwait
adc
andb
and
cli
imul
xchg
sbb
rcll
sub
push
into
test
mov
or
jl
sbb
and
leave
outsb
pop
lret
loopne
sub
jmp
and
jmp
gs
adc
jbe
aaa
and
xchg
or
mov
leave
sahf
into
sbb
mov
sub
xchg
fimuls
adc
cltd
jnp
cmp
jecxz
pop
and
lea
movsb
nop
and
cmp
push
mov
lds
cmp
add
aad
dec
or
jge
mov
mov
dec
add
and
lahf
cmp
insl
push
mov
sahf
xor
pop
nop
mov
adc
mov
shlb
inc
stos
xor
das
cmp
stos
cltd
adc
ss
inc
lods
ja
mov
aas
pusha
gs
push
int3
jge
add
dec
cmp
push
xchg
sarl
or
or
ss
andl
jl
mov
pop
mov
dec
or
xchg
push
mov
out
in
ja
xchg
push
mov
sbb
leave
movsl
aam
pop
mov
add
cmp
into
sahf
lcall
add
adc
xor
dec
mov
movntps
test
ret
mov
imul
sahf
mov
ficomps
sub
sub
outsl
push
ret
push
push
push
dec
js
mov
je
inc
xchg
icebp
cs
std
dec
imul
sbb
mov
mov
sbb
sbb
insb
mov
push
gs
mov
lahf
cmp
out
lds
imul
popa
adc
fwait
jno
das
bound
and
je
lahf
lahf
js
loop
jecxz
arpl
adc
stos
popa
pop
lcall
divb
mov
cmp
aaa
arpl
addr16
or
add
cld
dec
xor
push
daa
pop
add
ret
sbb
mov
or
cmpsl
cli
mov
in
mov
sbb
push
das
or
in
push
repnz
fistpl
add
xchg
pusha
xor
in
mov
das
sbb
and
rcrl
in
idivl
mov
sub
fbld
add
jne
daa
fbld
xorl
dec
mov
jnp
jne
xor
sti
mov
sbb
pop
fildll
movsb
add
in
or
mull
es
fstl
inc
stos
into
aas
or
jae
daa
sbb
push
mov
iret
mov
cs
add
dec
mov
sbb
mov
sub
sbb
sbb
imul
andl
ret
sti
sub
mov
cmp
add
aas
mov
add
mov
mov
xchg
addl
xchg
in
jge
or
or
or
mov
mov
xor
xor
add
shlb
or
xor
sbb
insb
sub
movsl
pop
push
push
dec
aaa
mov
add
jns
or
xor
inc
jnp
or
rcll
pusha
in
insb
sub
mov
sub
add
lods
sbb
add
jbe
in
and
arpl
mov
outsl
push
jae
pop
imul
arpl
pop
sbb
daa
xor
xchg
mov
and
sarl
dec
les
imul
test
xchg
dec
dec
jge
sbb
filds
push
push
inc
stc
dec
inc
js
push
push
dec
dec
inc
jmp
jb
add
pop
js
inc
mov
dec
push
and
and
and
cmp
xor
mov
push
add
in
outsl
jae
je
adc
inc
or
push
push
jg
fldenv
fisubrs
xor
dec
sbb
pop
jno
jl
pop
inc
dec
cmp
dec
add
inc
jae
pop
in
ja
jns
dec
imul
jp
jno
sbb
sub
andb
cmpb
data16
imul
xchg
and
dec
or
mov
mov
mov
xchg
cld
add
cld
sti
cmp
mov
incl
jg
sti
es
jg
and
or
outsl
outsb
outsb
ja
arpl
jge
mov
and
das
push
push
jge
dec
inc
jns
leave
xchg
jle
nop
fcmovnb
xchg
add
push
jge
mov
cwtl
cltd
push
jl
jle
insb
mov
xchg
cld
add
mov
jo
data16
adc
pushf
outsb
mov
pop
int3
add
push
dec
pop
sbb
push
lea
mov
add
and
ret
in
and
or
addb
insl
xchg
out
clc
pop
dec
sti
jne
mov
xor
add
pop
xor
push
jp
orb
add
js
test
add
bound
pop
outsl
mov
fimull
pop
jge
and
js
scas
leave
jno
adc
sahf
push
push
xchg
test
cwtl
ret
in
push
cltd
cwtl
sbb
sbb
xchg
inc
insl
daa
or
xchg
xchg
das
outsl
stos
jmp
loop
adc
adc
gs
adc
or
es
sub
jge
add
sbb
pop
cwtl
sbb
sbb
mov
mov
or
pusha
cld
sbb
or
adc
xor
ficompl
test
es
cmpsb
push
sbb
pop
in
adc
add
mov
and
sbb
mov
or
xchg
push
ja
arpl
mov
addb
pushf
pop
test
xchg
andl
into
js
push
jge
addr16
push
and
add
lcall
sbb
lahf
dec
popa
push
inc
mul
dec
imul
cmpl
jle
jl
jp
dec
fsubs
incl
addr16
mov
out
add
and
sub
rcrl
sbb
cmp
ja
push
lods
pop
inc
pusha
adc
xor
sbb
or
addr16
jmp
push
insb
mov
iret
or
push
sub
data16
callw
outsb
pop
xchg
addb
dec
testb
shrl
jp
das
dec
xlat
jg
data16
and
out
mov
push
push
push
dec
or
adc
pop
push
adc
or
jb
or
lock
dec
outsb
pop
jbe
loope
or
mov
mov
out
cmc
or
addb
fistl
jl
mov
addl
jmp
adc
xor
insl
jge
sbb
daa
jbe
pop
xlat
and
jne
aam
adc
push
and
jg
test
and
sub
inc
xor
or
nop
mov
add
sbb
sahf
adc
es
cmpsl
ljmp
addb
xor
cwtl
lcall
inc
sub
lods
adc
xor
into
rclb
outsb
aas
inc
pop
iret
dec
das
cmp
and
adc
xor
mov
add
add
or
pop
jno
adc
loope
jne
test
dec
hlt
mov
ret
pop
addr16
insl
mull
dec
es
js
inc
add
xchg
or
adc
popa
inc
push
push
add
adc
pop
popa
dec
insb
xchg
xorb
je
inc
cmp
jecxz
mov
sarb
in
daa
push
fnstenv
inc
test
shll
inc
inc
dec
push
ret
sbb
jmp
adc
push
aaa
mov
lea
push
mov
imul
xor
out
inc
dec
dec
sbb
shlb
add
add
add
arpl
xlat
sti
inc
lcall
push
cltd
es
dec
ja
xor
jge
sti
loope
jns
pop
inc
xchg
fists
jecxz
test
add
pop
shrb
in
leave
pusha
outsb
outsl
into
gs
pop
fcoms
push
jno
xchg
adc
xor
dec
jle
or
mov
lea
add
in
adc
pop
push
inc
xor
dec
and
jbe
sti
add
mov
mov
into
lock
cmp
loope
push
cmp
leave
pop
pop
popa
testb
jae
sub
cmp
daa
mov
mov
jle
jo
jbe
pop
in
xor
popf
add
mov
push
sub
scas
test
ss
dec
xchg
jg
xchg
and
xor
inc
daa
andl
or
daa
addw
push
dec
push
bound
fs
jbe
dec
dec
movsl
sbb
sub
xor
push
adc
sbb
push
and
adc
call
into
inc
fmull
out
call
mov
clc
ljmp
pop
sahf
js
push
and
inc
dec
ret
jb
mov
hlt
dec
sub
jg
lds
adc
push
in
jne
push
andb
and
jbe
pop
dec
mov
es
adc
mov
cmp
js
sbb
daa
movsb
pop
js
push
pop
inc
jae
in
push
inc
pop
dec
pop
pop
sbb
pminub
mov
in
inc
inc
dec
push
stos
mov
push
out
stc
push
add
dec
mov
adc
xor
mov
jnp
mov
es
lret
cmp
loope
lods
mov
xor
pusha
sub
and
bound
in
mov
lcall
mov
popa
push
ja
fwait
test
iret
sub
jb
xor
inc
fildl
push
inc
mov
jae
sub
push
jb
in
jne
sarb
clc
and
jae
dec
fs
sbb
lods
pop
adc
insl
and
cmp
inc
test
shlb
xchg
pop
cmp
cli
int
mov
inc
outsb
inc
cmp
cs
inc
mov
lods
andl
inc
ja
pop
jecxz
and
aas
mov
outsb
push
gs
les
movsb
shll
and
es
sbb
inc
dec
js
fsubrl
mov
es
inc
inc
les
mov
or
jns
into
rcr
out
sahf
mov
jno
mov
test
retw
xor
mov
sub
or
inc
inc
or
pop
push
popa
lcall
dec
lods
nop
lock
push
rclb
push
rcr
insb
bound
imul
adc
or
jbe
mov
ss
cmp
push
push
push
mov
jecxz
js
sbb
frstor
mov
imul
dec
mov
mov
dec
scas
das
push
addr16
sbb
push
loope
addb
xor
push
daa
and
inc
pop
dec
push
push
push
std
adc
fs
mov
divl
mov
adc
pop
xor
xor
mov
nop
jo
lods
cmp
andl
push
insb
adc
shlb
xor
dec
loopne
cld
mov
add
stos
and
mov
jb
xor
adc
arpl
ja
adc
add
mov
insl
push
adc
in
jo
push
lock
xchg
adc
cs
daa
shll
and
cmc
push
punpckhdq
imull
fs
mov
in
push
and
and
push
subl
cmpsb
loope
and
inc
sub
sbbl
cs
inc
add
push
jbe
fstpt
pushf
mov
mov
mov
adc
fmull
nop
push
int
mov
addb
dec
fisttpll
adc
fs
push
jle
add
mov
sbb
out
jge
mov
add
sub
or
ss
dec
cmp
cmp
or
movsb
mov
popa
pop
add
pop
or
sbb
xchg
icebp
test
shlb
mov
cmp
jnp
push
sti
cmp
jne
insb
out
xchg
add
or
or
not
mov
or
lds
cmp
add
iret
pop
jnp
jnp
addr16
aaa
pop
add
adc
sbb
adc
jnp
arpl
lret
cmp
mov
and
jbe
fstl
jns
adc
fnstenv
shrb
or
stos
jne
pop
and
adc
xor
sub
adc
fildl
pop
push
push
pop
adc
mov
pop
push
pushf
ss
and
movsl
mov
sub
pop
push
sub
arpl
dec
pop
and
sbb
ja
stc
xchg
nop
cmpsb
add
negb
or
or
or
sbb
pop
inc
pop
scas
xchg
jne
js
push
jle
or
clc
test
cmp
push
std
and
daa
or
loope
inc
jo
outsb
ss
aas
js,pt
dec
js
dec
pop
jne
push
cltd
addr16
imul
pop
inc
das
adc
push
call
mov
dec
push
jo
push
movsb
test
jae
pop
add
das
cmp
jecxz
push
sahf
and
arpl
inc
inc
sbb
fdivs
les
sub
test
jo
addr16
insb
aaa
sbb
mov
pop
add
stos
scas
cld
inc
jecxz
add
test
or
pop
sti
adc
jae
inc
sbb
sub
fstpt
pop
pop
or
adc
adc
sbb
into
ja
outsb
or
not
jbe
mov
dec
inc
push
or
sbb
aaa
pop
or
push
xor
inc
in
inc
mov
scas
adc
pop
mov
mov
jno
mov
ja
inc
lea
movd
push
mov
faddl
jb
scas
out
loope
push
xlat
dec
cmp
lds
fnstsw
adc
jg
adc
jbe
into
sub
inc
push
adc
mov
out
aad
dec
pop
call
test
pop
or
sbb
mov
adc
xchg
into
push
xor
jo
movups
push
or
mov
push
sub
xor
sbb
int
jae
addr16
pop
pop
pop
jbe
add
hlt
inc
cmpsl
dec
lea
insb
add
rcll
aam
shl
rolb
dec
push
add
mov
mov
sub
xor
jb
test
faddl
mov
rsqrtps
imul
mov
inc
xor
dec
sbbl
data16
testl
push
inc
js
lds
mov
fwait
insl
scas
lea
mov
sbb
sub
and
repz
xor
push
enter
mov
cli
push
jno
pop
rorb
stc
sbb
mov
mov
mov
add
addb
adc
bound
mov
xor
pusha
or
sbb
pushf
push
adc
xchg
xchg
or
ret
sbb
mov
mov
mov
pop
or
pop
ss
pusha
gs
pop
inc
or
and
js
push
ret
add
imul
mov
mov
addr16
push
adc
cmp
enter
add
nop
loop
mov
cmp
bound
mov
inc
add
fadds
add
sub
test
jno
add
adc
inc
pop
add
loop
dec
fcoms
inc
xorps
imul
mov
inc
inc
push
dec
adc
je
cmova
out
jmp
gs
jae
jb
gs
jne
je
inc
dec
inc
adc
add
add
in
dec
outsl
fs
test
arpl
inc
jne
sbb
fnstenv
fisttpll
adc
jo
bound
popa
insl
mov
mov
or
int
push
inc
adc
sbb
dec
cmp
or
outsb
dec
add
or
insb
lahf
pop
fs
imul
outsb
sti
arpl
gs
outsl
aaa
bound
adcl
popf
and
js
addr16
jnp
add
or
outsb
jne
sti
je
xor
push
jb
mov
insb
lea
jns
inc
arpl
dec
outsb
in
or
fnsave
arpl
or
popa
addr16
in
and
ja
outsb
mov
inc
fsubrs
or
inc
outsl
js
imul
xchg
or
jns
out
mov
jb
mov
mov
push
jge
lods
lock
dec
imul
dec
xor
inc
dec
add
add
pop
inc
sub
loopne
popl
add
add
idivl
adcb
pusha
or
ss
add
pop
adc
jnp
ja
cmp
cs
xor
fnstsw
and
sub
stc
add
jo
add
in
jnp
pop
inc
dec
inc
inc
nop
add
ficomps
push
inc
or
loopne
xchg
or
into
sti
loop
dec
jbe
rolb
iret
enter
push
add
fstp
test
shrb
fs
add
pusha
daa
add
lea
inc
fs
cmpsb
movsb
jmp
add
push
pop
ret
jae
cmp
mov
add
mov
add
add
adc
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
