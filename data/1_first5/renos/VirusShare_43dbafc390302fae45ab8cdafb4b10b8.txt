mov
in
call
mov
mov
shl
add
sar
js
rep
or
incl
rep
pop
ret
nop
jmp
mov
pop
jo
xor
and
and
fisttpl
xor
call
std
mov
push
or
test
movsb
pop
pop
ret
lea
add
pushl
or
mov
ret
push
push
add
mov
and
dec
xor
dec
and
mov
jmp
mov
add
mov
sub
shr
sti
mov
jle
mov
mov
and
add
add
jne
mov
add
or
in
idivb
decl
movzwl
add
mov
push
xor
dec
jne
mov
mov
sti
mov
add
ret
jne
pop
pop
pop
pop
ret
xor
test
or
iret
fistps
and
inc
je
xorb
inc
jmp
mov
into
fiadds
jmp
adc
sub
mov
ret
add
adc
jmp
pop
xor
xchg
adc
jmp
sub
repz
mov
loope
mov
add
add
adc
neg
idiv
call
mov
test
je
push
push
or
add
push
push
push
sti
insl
sti
call
inc
aam
jge
add
test
add
lea
mov
push
pop
ss
insl
dec
les
test
adc
cmp
sbb
inc
cmp
add
inc
inc
std
mov
xor
push
and
inc
data16
mov
call
je
and
lea
in
andl
or
es
jg
int
pop
jg
and
lahf
dec
mov
mov
cmp
int3
push
cmp
movb
mov
mov
pop
push
push
hlt
add
add
adc
divl
insb
add
lret
adc
in
lret
std
fsubr
jle
xchg
and
in
in
pushl
or
fmull
clc
add
or
adc
cld
imul
sbb
sbb
cmp
imul
and
mov
sub
mov
adc
sub
add
sbb
jnp
add
aas
insb
mov
ret
ret
or
je
out
mov
dec
adc
jb
inc
mov
movb
loopne
xchg
mov
sbbb
inc
clc
and
add
push
or
cmp
fmuls
pop
or
cmp
daa
decb
jne
or
sub
jle
xchg
fisttpl
xor
inc
clc
sbb
xchg
test
add
lea
xchg
dec
addl
mov
push
sub
shlb
loopne
pop
mov
pop
ret
aaa
inc
dec
push
mov
mov
mov
div
test
jne
or
frstor
rorb
shrb
mov
hlt
mov
push
cld
mov
push
cmp
ret
loopne
add
es
scas
hlt
sbb
jge
push
dec
test
subb
add
scas
jo
mov
add
cmp
jbe
add
movsl
pop
cli
cmpsb
jmp
or
inc
push
or
fistpll
lea
add
push
push
push
cmp
push
sbb
fnstsw
sbb
cmp
xchg
xor
xor
and
adc
test
adc
jg
aas
mov
push
push
ret
inc
gs
jb
arpl
jmp
inc
sti
fs
jae
adc
push
or
mov
mov
mov
rclb
sub
cli
div
mov
mov
mov
or
fdivs
add
push
and
imul
clc
push
insb
popf
call
dec
cmp
push
movl
add
fmuls
sbb
rorl
push
sub
sub
xchg
cmp
push
xor
dec
cmp
xchg
cmp
push
cmp
jl
cmp
xchg
inc
push
push
xor
and
push
add
movsl
stos
xor
mov
adc
xchg
sbb
add
push
pop
ds
cmp
or
sbb
mov
and
xchg
and
xchg
sub
and
sbb
jecxz
sahf
imul
outsb
out
inc
dec
pshufw
sbb
push
jl
inc
jge
adc
adc
fsubr
and
jae
or
inc
dec
jne
lea
fdivl
imul
fs
rolb
dec
adc
mov
cltd
or
mov
adc
cmp
adc
lock
pop
sbb
push
push
push
cmp
fnstenv
mov
pop
mov
aaa
mov
ja
jmp
sbb
dec
es
or
iret
pop
or
lret
pop
push
lea
inc
push
mov
add
xor
and
std
insb
mov
and
push
call
add
ret
sub
ret
adc
jb
gs
xor
cs
insb
push
outsb
call
out
popa
fs
imul
lcall
std
dec
jo
outsb
push
push
popa
imul
std
xchg
ljmp
insb
gs
bound
arpl
outsl
jae
dec
popa
outsb
push
gs
out
mov
jo
imul
jb
jne
insb
inc
cmpsb
pusha
scas
aam
je
jae
je
cmovbe
push
je
dec
outsl
jbe
mov
mulb
gs
pusha
jns
xor
pop
jnp
movsl
dec
scas
dec
popa
inc
outsb
je
jg
push
xchg
mov
into
pop
fsubrl
cmp
mov
ja
lds
or
scas
or
divl
sub
ljmp
jmp
hlt
cmpsl
pop
arpl
push
mov
pop
in
je
xor
mov
cmpb
adc
or
les
leave
pop
andl
adc
jne
jne
test
xorb
mov
mov
inc
inc
sahf
sahf
insl
mov
pop
push
jne
jg
rcr
sbb
int
aaa
cld
jnp
les
push
movl
xor
mov
sbb
insb
xchg
or
shl
add
push
sahf
lds
shrb
xor
mov
paddb
or
xor
or
add
or
mov
int
fcmovu
gs
or
xor
sbb
imul
int3
cld
and
push
sbb
sub
push
mov
adc
lods
fiadds
sbb
mov
ja
outsl
xchg
sbb
gs
je
pop
inc
bswap
das
subl
lret
outsl
testl
add
mov
or
dec
in
dec
sahf
pop
insl
xor
and
into
mov
add
jb
in
pop
pop
add
or
add
or
popa
aas
lock
das
jnp
mov
adc
or
pop
jbe
or
add
enter
adc
loop
clc
mov
addr16
or
cmpsl
adc
or
xchg
stos
add
push
lods
aaa
pop
add
punpcklbw
xor
ss
ja
add
or
mov
and
mov
xchg
push
jns
mov
and
add
daa
add
add
cmp
add
push
addr16
in
ss
jbe
insb
das
add
and
add
add
sbb
push
lahf
es
push
add
add
add
mov
push
dec
in
inc
dec
or
dec
sub
push
push
pop
add
push
ljmp
dec
add
je
dec
sbb
imul
sub
add
incb
pop
xchg
push
pop
int3
cmc
add
add
ds
or
mov
inc
xlat
xor
xchg
add
add
fldt
jmp
or
lahf
or
fcmovnbe
call
daa
xchg
xor
pop
idivb
ljmp
enter
cmc
pop
add
addr16
lcall
cs
add
or
repz
add
out
push
sbb
inc
dec
fwait
and
xor
js
ja,pt
imul
outsw
ja
test
pop
sub
mov
sub
and
and
sbb
ss
add
or
adc
into
popf
cmp
adc
mov
cmpsl
popf
mov
fsts
fs
inc
fldenv
mov
or
aaa
aaa
das
aaa
mov
sub
pop
insl
dec
pop
cmp
test
outsl
and
sarb
cld
add
or
push
sbb
adc
mov
gs
add
xchg
adcb
aam
push
stos
pop
add
mov
mull
aaa
or
pop
mov
cmp
fwait
pop
add
std
jle
inc
add
inc
sbb
sbb
sub
dec
jno
addr16
xlat
fidivl
cmp
cmp
sub
or
testl
push
out
jg
addr16
out
push
push
push
inc
adc
dec
mov
cmp
add
gs
add
pop
adc
pop
fxch
inc
ss
add
mov
or
psrad
mov
xchg
xor
pop
push
ret
movsb
ss
test
mov
sub
add
mov
ja
sub
or
pop
sbb
dec
and
adc
add
mov
add
add
add
mov
fcoms
sbb
in
pop
loopne
iret
mov
xor
jne
or
push
das
add
data16
or
jmp
repz
add
push
mov
fdivp
insl
mov
scas
popa
ret
cmp
mov
push
jo
sub
out
jne
fldl
xchg
fs
iret
lcall
xchg
fildl
add
xor
mulb
or
and
mov
mov
xlat
and
mov
bound
jmp
xlat
jge
add
inc
stos
pop
fs
add
mov
sbb
adc
cld
xchg
adcl
cmpsl
push
faddl
in
insl
jae
adc
jmp
add
pop
lods
in
pop
jo,pn
and
xchg
out
out
and
add
loopne
adc
cmp
jno
iret
lds
pushf
shll
and
inc
push
mov
add
inc
jne
mov
aaa
push
inc
movsb
faddl
mov
fidivl
dec
sub
dec
mov
ja
daa
xor
jmp
jle
adc
fldt
add
jl
add
xor
pop
fdivs
imul
insb
mov
sub
dec
dec
dec
scas
sbb
cmp
adc
xchg
test
pop
js
inc
aas
add
cmp
fwait
inc
loopne
pop
pop
mov
mov
test
ret
in
inc
mov
out
cs
sub
sbb
dec
jge
push
loopne
clc
mov
popa
sub
jne
dec
mov
lock
and
or
in
or
lods
loope
sbb
jg
inc
scas
pop
mov
ja
mov
shlb
jo
sbb
inc
outsl
xor
xchg
out
or
push
clc
stc
adc
inc
fstpt
das
jl
jge
ret
sbb
sub
or
or
sbb
adc
adc
insl
je
mov
jl
sub
dec
sbb
popw
adc
out
or
bound
lods
dec
jge
insb
dec
je
jl
xchg
add
sahf
ja
out
lods
cmc
div
jo
sub
out
jg
aad
je
in
cltd
mov
in
in
cmpb
es
in
push
adc
mov
inc
imul
es
lea
movsb
aaa
fcmovnu
lods
call
and
test
ss
ljmp
fwait
jae
aas
xor
orl
insl
mov
or
add
into
jne
xchg
or
mov
in
or
divl
inc
push
cli
xor
sub
and
pop
pop
in
dec
cmp
cltd
insb
push
rdtsc
add
inc
insl
fidivs
or
mov
add
ja
mov
iret
movsb
inc
sti
daa
shrb
ret
inc
jg
jno
or
sbb
jne
mov
push
jle
test
xchg
inc
add
sub
test
and
adc
in
jle
or
dec
adc
sahf
sub
jbe
addr16
sbb
ljmp
cmp
mov
fidivs
mov
pop
jge
lods
jb
jmp
aas
lds
jl
lret
outsb
insb
pushl
hlt
jl
sbb
cmp
aam
jne
mov
xchg
xchg
or
push
inc
mov
mov
jp
insl
cwtl
mov
mov
jne
mov
and
repz
arpl
jle
jg
iret
pop
ret
icebp
popf
push
push
test
int3
sti
push
ja
fiaddl
iret
lret
xchg
push
lock
lods
push
push
sbb
push
das
or
scas
fst
adc
loope
or
arpl
pop
movsb
pop
sti
push
mov
and
and
inc
jnp
mov
jns
sbb
jmp
es
sub
jl
xor
mov
or
shrb
jl
fists
lahf
and
sub
aam
mov
and
mov
lods
fldl
je
or
dec
ss
ficompl
stc
ja
mov
mov
fistl
jbe
pop
out
fildll
sbb
pusha
cmp
in
mov
push
jo
add
dec
in
stc
ret
add
inc
ja
dec
add
lods
mov
sarl
outsl
jmp
push
dec
dec
add
mov
push
sarl
dec
pushf
adc
dec
add
sub
movsb
xor
sub
adc
rclb
out
dec
dec
sbb
bound
xor
movsb
add
arpl
pop
ret
inc
pop
rolb
xor
inc
into
sbb
xor
add
mov
mov
jecxz
aaa
or
add
jae
dec
int
test
dec
dec
sub
jne
insb
ret
mov
cmp
ret
test
rorl
add
aaa
cmp
inc
jne
out
daa
lea
int
mov
adc
and
lock
mov
add
mov
and
and
push
inc
int3
shl
sub
fistpll
jnp
sub
imul
mov
sub
hlt
gs
xor
cmc
fadd
adc
clc
je
fiaddl
data16
imul
es
mov
inc
fidivrl
aam
or
and
shrb
jg
adcb
test
add
std
mov
push
xlat
popf
push
mov
stos
xor
jnp
xor
sub
rolb
push
int3
in
dec
sbb
jl
jns
insb
push
jle
loopne
ds
sub
out
es
xchg
inc
fsubs
sub
dec
xor
cmpsl
or
insb
xchg
cmp
xchg
stos
out
or
pop
es
cmpsl
mov
sbb
mov
fildl
test
mov
divl
xorl
cmp
testb
test
imul
pop
jle
sahf
xchg
add
into
cmp
xchg
mov
sub
add
dec
mov
xchg
scas
sti
or
mov
push
sbb
pop
mov
iret
push
or
sbb
xor
mov
push
pop
push
sbb
cmp
xor
dec
cmp
and
xor
sar
add
je
iret
dec
push
in
jo
iret
push
gs
clc
add
push
mov
int3
add
xchg
mov
xchg
addl
jge
add
daa
das
adc
dec
mov
rclb
iret
push
sub
fiaddl
add
xchg
push
out
addr16
adc
adc
pop
pop
dec
and
add
sar
cmp
shlb
and
or
inc
dec
push
and
or
lret
xchg
inc
jo
and
jmp
aaa
icebp
scas
push
ret
stos
inc
ja
mov
rcl
jne
out
inc
dec
adc
push
les
pusha
shl
and
fiaddl
cmp
mov
ss
fidivl
or
and
adc
sbb
sbb
and
adc
movsl
xor
push
loopne
sbb
pop
mov
xabort
or
dec
int
mov
jae
imulb
test
cld
lods
lods
or
aaa
pop
dec
rorb
adc
inc
mov
add
pop
popa
jmp
stos
cs
aas
outsb
out
fcompl
mov
in
outsb
xchg
mov
popa
jle
xorps
out
ss
flds
push
push
and
ds
gs
push
mov
mov
mov
ljmp
cmp
or
inc
shlb
and
mov
dec
and
cs
inc
jbe
fld
adc
xchg
mov
popa
xor
and
dec
daa
pop
pop
mov
dec
decb
and
aaa
add
mov
jg
shl
jo
cmp
aaa
jl
bound
and
sub
push
jp
and
lahf
push
or
rcrb
cld
daa
dec
inc
jo
sbb
mov
ja
inc
mov
and
mov
mov
or
rolb
cwtl
jmp
sbbl
sub
scas
jp
pop
xchg
xor
sub
lds
push
fadds
cmp
xchg
sub
or
mov
pmulhw
lods
pop
inc
fsubs
lods
scas
mov
add
add
add
mov
sbb
pop
incb
jno
pop
add
mov
shrl
stos
push
int
sub
sbb
sarl
add
mov
cmp
add
push
scas
ja,pt
shrl
test
lock
iret
imull
jae
cmp
sub
fidivrl
sarl
loopne
mov
pop
hlt
xchg
xchg
fdivrl
push
in
cli
iret
lcall
jnp
sbb
aam
insl
fbstp
xor
jae
cmpsb
and
or
cmp
add
jge
fsts
faddl
mov
dec
shll
lock
sub
movsl
rcll
adc
mull
ljmp
and
or
out
out
imul
sub
lahf
aas
outsl
loop
add
dec
gs
les
cmp
xor
cmpsb
xchg
mov
shr
popa
jp
dec
cmp
push
or
adc
mov
int
test
adc
xor
cmp
sub
adc
add
xchg
adcl
adc
sub
cmpsl
add
rep
fwait
popf
js
jnp
ror
sbb
cmp
add
mov
jne
out
fsubl
mov
or
adc
mov
cmp
pop
add
in
daa
jb
or
rorb
mov
ljmp
inc
jo
int
popf
sub
jns
and
cwtl
icebp
mov
shrb
xchg
cmp
adc
and
iret
andl
jl
and
fstpl
or
iret
mov
lret
iret
inc
mov
addb
cmp
mov
xchg
mov
xor
loop
jge
push
mov
in
sbb
je
jle
xor
inc
xor
push
sbb
jp
cmpsb
xor
sbb
or
jnp,pn
and
and
add
pop
adc
fcmovu
outsl
cmp
stos
and
es
movsb
mov
adc
iret
push
in
add
test
jge
sti
movsb
pop
clc
loop
pop
shlb
stos
adc
dec
loop
movsb
outsl
lods
divb
fsubrp
mov
xor
cmpsl
sbb
add
cmp
test
andb
cs
andl
pop
or
es
mov
sbb
out
std
pop
jae
outsl
insb
pop
daa
fbstp
push
add
ss
add
add
es
jbe
sub
or
sti
jo
dec
sub
mov
jp
push
je
add
adc
rcrl
dec
lock
icebp
cmp
add
xor
scas
popl
stos
or
dec
ud2
negl
filds
push
sub
xchg
out
addr16
andb
roll
xor
inc
sti
cmp
stos
push
and
insl
fucomp
out
add
inc
test
sbb
add
cmp
inc
fcompl
psubusw
rorb
stos
push
pop
fsts
sti
insl
cmc
cmp
mov
push
cli
in
cmc
mov
and
mov
fsubrs
add
adc
jp
dec
rorb
loopne
pop
fldl
xlat
cs
ds
cmp
add
add
push
stos
mov
sbb
aam
jge
out
mov
sbb
push
ja
inc
ret
xor
sub
inc
ficoms
js
mov
xor
cmp
es
pushf
loop
xchg
sbb
add
ret
inc
mov
outsl
bnd
aaa
push
popf
inc
xchg
out
fldln2
ret
mov
inc
jo
jle
data16
dec
xchg
loope
xor
mov
shlb
mov
and
loopne
add
and
lea
sbb
pop
lods
jmp
in
das
xor
dec
xchg
sbb
lods
and
lods
jne
cmp
pushf
ds
add
xor
and
mov
add
in
cmp
iret
adc
das
push
jns
mov
or
mov
or
ret
dec
sub
sub
into
adc
pushf
aam
rorl
pop
sbb
bound
sub
jb
pop
cs
push
xor
fistpl
test
sbb
rcr
mov
and
outsl
es
and
sbb
push
in
movsb
fmuls
ds
adc
inc
fdiv
push
hlt
fnstenv
or
xor
pusha
dec
cmp
xchg
fdivs
bound
negb
or
xor
sub
pop
insl
fisttpll
jle
popa
lcall
adc
fidivrs
adc
stos
jecxz
cmp
and
outsb
fildll
xor
xchg
arpl
das
xor
adc
scas
dec
outsb
mov
push
inc
jne
adc
push
outsb
inc
and
loop
mov
inc
mov
inc
and
pop
js
adc
fadds
pusha
mov
mov
bound
movsl
inc
int
dec
fstps
jg
lods
xor
xor
addr16
xchg
sub
add
fists
fstpt
hlt
and
stos
outsb
or
int
inc
jl
fnstcw
xor
jnp
pop
push
fimuls
and
ret
ss
fwait
test
adc
jle
xor
pop
jle
add
cwtl
sbb
jbe,pt
xchg
adc
fdivl
and
jge
in
das
in
fsts
popa
push
addr16
andl
mov
ficompl
mov
jp
call
stos
jle
fmull
xchg
sbb
xor
jbe
cmp
inc
inc
dec
inc
fldt
nop
mov
push
mov
push
dec
sub
mov
fldcw
scas
pop
mov
pushf
popa
ret
sub
into
imul
inc
out
and
xor
jb
push
inc
mov
mov
adc
imul
mov
mov
out
mov
rorb
push
dec
out
nop
sbb
adc
call
loopne
jnp
xchg
mov
dec
jmp
inc
add
adc
bound
sbb
push
mov
push
ds
cmp
fcoml
pop
insb
jecxz
bound
or
aad
jo
pop
sarb
in
adc
mov
lock
movsl
les
outsb
ss
jno
lcall
subb
fnsave
and
cmp
inc
mov
aad
inc
inc
sub
fadds
inc
les
dec
stos
lock
decl
dec
sbb
push
in
and
and
pop
xchg
std
mov
pop
xor
sbb
mov
add
mov
sbb
pop
sub
fistpll
roll
jp
cmp
push
fcoms
cmpsl
adc
jo
lods
movsl
push
xor
inc
push
cmp
loopne
int
mov
test
sbb
test
jl
push
lcall
sti
push
mov
add
add
pop
sub
mov
or
movsb
push
fcomip
inc
pop
jle
sub
fbld
in
adc
orl
jmp
mov
fisttpl
mov
sahf
arpl
xor
insl
mov
lahf
and
loop
dec
hlt
sbb
clc
pop
out
insl
gs
bound
lahf
pop
lds
rclb
and
inc
push
mov
inc
fdivl
inc
fidivs
js
ss
fldenv
cmp
xchg
or
push
aam
ret
mov
addb
movsl
xor
jo
enter
sub
push
adc
gs
xchg
ret
out
pop
lds
adc
mov
fistpll
sbb
mov
enter
scas
out
shll
dec
mov
xchg
cmp
ss
fstpt
xor
pop
shll
hlt
adc
fisubrs
test
sub
push
movsb
ss
cmp
movsb
pop
scas
add
add
xchg
add
das
insb
mov
mov
push
lods
mov
and
jne
jbe
int
aaa
xchg
adc
push
in
loope
and
mov
pop
and
call
insl
or
or
sbb
adc
or
adc
pusha
outsb
jmp
or
or
ret
xchg
sar
in
pop
mov
xor
stc
add
jnp
loopne
cld
bound
fxch
add
mov
inc
push
lods
sub
lods
mov
and
cmp
movsb
fsubl
sub
repz
jb
pop
jp
divl
jno
ljmp
push
das
xor
popa
and
xlat
jbe
lret
fs
addr16
mov
sbb
sub
arpl
ds
outsl
lret
push
and
fildll
das
into
int
sub
mov
xchg
cmp
mov
mov
test
pop
xor
lcall
dec
insl
push
daa
xor
mov
pop
mov
or
mov
pop
or
jae
pop
cmp
lods
test
pop
sahf
inc
sub
mov
pop
pushf
dec
dec
sub
testl
daa
jo
jo
imul
pop
or
insl
mov
mov
pop
cwtl
pop
xchg
jo
scas
mov
xor
cmp
mov
cltd
cmp
jp
mov
fcomps
scas
mov
or
push
adc
xchg
int
pop
imul
add
xchg
and
sbb
bound
xor
push
loope
pop
pusha
add
sub
fs
push
and
mov
mov
out
xor
fstpl
mov
sub
mov
mov
lcall
xchg
fisubrs
xor
adc
addr16
std
add
jle
loope
aaa
daa
mov
aam
jl
data16
iret
or
aaa
push
mov
popa
mov
add
mov
sub
sub
mov
in
add
xchg
ja
les
icebp
push
arpl
sub
fsubrs
jmp
test
popa
and
add
xchg
inc
cmp
xor
mov
add
xchg
hlt
xor
cmp
jp
push
lods
and
aad
cmc
add
out
or
adc
mov
sub
mov
shlb
scas
cmp
testl
sbb
inc
mov
or
push
cs
lcall
fsubl
push
fwait
pop
adc
inc
jp
fimull
outsb
push
fnstenv
cmp
into
rclb
cmpsl
push
pushf
mov
sbb
aam
xor
push
or
or
pusha
popa
test
es
and
sbb
ja
jne
les
push
sahf
aam
test
mov
ja
lds
push
pop
lret
mov
dec
mov
or
xchg
enter
cmp
sub
pop
add
adc
int
or
cmpb
in
pop
js
sbb
ljmp
adc
lock
adc
sub
daa
dec
testl
cli
xor
movsl
das
mov
sub
daa
cwtl
push
fildll
lds
adc
fs
sub
sub
into
out
or
mov
data16
dec
cmp
xchg
adc
and
rcll
or
mov
popf
push
in
add
sub
into
add
das
sahf
loope
push
pop
mov
mov
or
ds
xchg
xorb
aad
inc
mov
test
pop
fnstenv
mov
cmp
mov
dec
add
adc
or
push
mov
in
inc
rorb
js
nop
mov
or
test
mov
lods
or
inc
xor
inc
cmp
jns
xchg
loopne
sub
lds
mov
aas
testl
adc
inc
mulb
jne
sub
pop
sub
inc
mov
push
mov
data16
or
pushf
cltd
andb
pop
or
inc
sbb
xchg
and
sub
mov
inc
pop
arpl
xor
xchg
cmp
lock
das
pop
hlt
out
lods
cmp
xchg
int
into
rorl
xor
dec
mov
dec
jbe
jb
jp
sbb
mov
shlb
int
rorb
push
mov
add
insb
dec
pop
int
jo
mov
jecxz
mov
inc
mov
loop
clc
add
adc
mov
xorl
pop
test
sbb
dec
cmc
or
enter
xor
pop
xchg
sub
divb
add
mov
and
push
and
dec
out
fwait
adc
xor
cmp
cmpsb
out
lods
push
lret
pop
popf
lock
arpl
push
int3
sub
push
pusha
movsb
or
stos
ficoms
fdivrl
fnstsw
testl
dec
add
push
jae
add
ja
in
fisubrl
push
popa
movsb
in
adc
imul
aaa
xlat
insb
pop
and
push
das
adc
fisubrl
mov
shld
lds
outsb
push
aas
add
cmp
outsb
loop
outsb
push
xor
int3
xor
inc
sub
das
adc
or
loope
int
push
fnstsw
xor
dec
cld
sub
daa
lock
ret
pop
mov
sub
in
leave
add
push
outsl
cld
lcall
mov
out
push
inc
add
jnp
in
push
js
jne
stos
push
add
or
outsl
bnd
or
inc
mov
and
sub
dec
xchg
fcom
inc
mov
ret
fstps
adc
insl
jl
xchg
rcll
jg
loop
jp
fiaddl
in
add
fs
add
imul
fincstp
lea
jl
inc
sub
loop
xchg
ljmp
inc
add
jbe
xchg
sub
mov
push
ljmp
dec
ficompl
fstl
pop
test
inc
adc
add
rcll
lret
lods
rorl
js
inc
mov
pop
into
std
loopne
push
cwtl
bound
inc
sbb
cmp
push
orb
fistl
sti
xorb
es
dec
mov
add
add
add
jno
cltd
bound
cmp
adc
mov
xlat
stos
and
inc
mov
lods
or
jne
add
push
shll
dec
pop
and
fcmovnbe
add
test
daa
mov
push
and
fildl
rcr
dec
push
pop
push
xchg
stos
push
das
ds
push
mov
xor
or
out
jns
xchg
jno
notl
in
dec
and
xor
stos
jecxz
inc
subl
pop
call
adc
cmc
add
mov
scas
push
lret
push
xor
lock
dec
inc
mov
cltd
fdivrl
popf
das
push
cwtl
loop
push
adc
add
mov
std
inc
movsb
cwtl
adcb
push
sub
or
mov
adcl
sbb
scas
add
sbb
lods
mov
stos
sar
sarl
das
jle
cmc
lods
cmp
lret
inc
jb
pop
or
stos
inc
fwait
inc
aad
cmc
pop
int
cmp
sub
pop
test
popf
rcl
in
sbb
js
jp
daa
and
add
clc
lods
push
aas
add
adc
jle
out
cmp
jecxz
lock
fisttpll
push
mov
loopne
inc
mov
hlt
data16
xlat
add
add
inc
sub
faddl
push
sub
adc
int3
or
loope
push
test
pop
jo
adcb
sbbb
leave
loope
dec
inc
cli
inc
scas
jno
sahf
sub
xor
cwtl
cs
or
and
and
fisubl
cmc
xchg
ja
test
jecxz
jno
adc
in
je
mov
adc
aas
cmpsl
loopne
movsb
dec
subb
push
movsb
fs
jnp
fcomps
pop
test
js
subb
shlb
fists
mov
jo
inc
iret
dec
jo
daa
loopne
xor
add
pop
mov
and
hlt
dec
jmp
xor
sbb
shll
lods
rcl
sub
push
scas
xor
or
ds
scas
pop
fstpt
mov
lahf
cmpsb
add
sbb
fidivs
bound
lods
pusha
lods
fcom
aaa
cmp
mov
in
loop
lret
dec
addr16
cld
insl
movsb
js
call
insl
push
mov
loopne
icebp
pop
frstor
rorl
ret
test
loope
sahf
pop
cli
or
inc
dec
daa
cmp
sbb
adc
push
and
inc
hlt
pop
rorb
add
shrl
shll
add
and
inc
ljmp
js
call
xor
push
cmp
push
xor
sub
pop
sub
movsb
adc
ss
aas
iret
ret
add
push
sub
dec
xchg
inc
ja
mov
or
test
sarb
or
add
cmp
jae
jno
mov
add
xlat
xor
or
mov
xor
xor
mov
popf
adc
test
xchg
loop
fmulp
mov
ja
xchg
push
lret
test
pop
xchg
pop
les
mov
mov
pop
repnz
rcrl
add
and
ljmp
lods
mov
or
dec
daa
adc
mov
jno
xor
or
int3
movl
xor
xor
add
mov
cmpsb
push
sub
fmull
jg
dec
je
rolb
lcall
pop
cmpsl
dec
mov
out
xor
leave
aas
adc
lret
aaa
out
jbe
or
fs
ret
push
shll
jle
push
stos
pop
pop
adc
or
push
lret
movsb
sbb
push
sbb
inc
jmp
pop
and
xor
or
call
shlb
dec
sbb
imulb
mov
lret
mov
add
or
ja
push
adc
push
iret
repz
xchg
push
orl
or
lods
es
pop
js
test
adc
fdivrl
cmpsl
pop
mov
and
xchg
mov
jno
stos
adc
lcall
xchg
movsb
pop
adc
fbstp
test
mov
cmp
in
push
sbb
mov
test
lods
sbbl
je
sbb
jmp
adcb
das
loopne
and
je
and
jp
addr16
mov
fsubrp
inc
jge
stos
cld
rolb
mov
sbb
or
shll
inc
add
shrd
and
inc
dec
push
inc
xlat
sub
sti
shrl
aam
jns
out
test
sbb
into
push
decl
icebp
dec
loopne
inc
gs
popa
data16
xor
mov
in
insb
jno
mov
push
add
add
loopne
cmp
aas
adc
pop
inc
pop
pusha
sbb
or
lock
adc
cmp
ljmp
mov
aad
seto
add
sub
add
in
lock
or
or
stos
addr16
sbb
shrd
xchg
jle
jp
cmp
inc
pop
lods
arpl
iret
sbb
pusha
adc
stos
pop
mov
test
popa
pop
sahf
cmp
pop
pushf
add
fcmovnb
int
cmp
add
inc
stos
mov
add
insb
leave
call
mov
mov
jg
pop
loop
in
sub
sbb
xchg
test
xchg
xor
xor
mov
xor
adc
mov
inc
test
mov
inc
aas
test
or
je
adc
add
test
inc
enter
or
pop
jle
add
jle
loopne
xchg
adc
fldl
or
lds
or
mov
add
pop
movsb
sub
stos
push
add
inc
call
mov
inc
dec
loop
mov
ds
sbb
xchg
push
pop
sahf
f2xm1
popa
xchg
lods
imul
fchs
add
xchg
mov
mov
arpl
addl
pop
dec
inc
bound
xor
push
add
and
sbb
loop
dec
subb
aam
xchg
int
movsb
js
fcom
inc
or
dec
and
jmp
rorl
adc
mov
je
stc
pusha
sub
jne
push
test
adc
inc
mov
lods
rorl
xor
shll
js
mov
lahf
mov
mov
jo
in
roll
insl
adc
adc
inc
xchg
mov
fstp
cmc
call
jo
mov
clc
outsb
scas
cmp
inc
xchg
scas
das
and
lret
cmc
insb
sub
andl
ret
imul
cmp
test
sbb
iret
adc
shll
xor
pop
push
sub
inc
add
stos
lret
daa
unpcklps
ret
and
sub
or
add
push
iret
xor
rorl
inc
pop
xchg
inc
push
jo
inc
lods
bound
and
xchg
xor
adc
adc
mov
popa
push
fadd
push
or
adc
inc
inc
mov
insb
pop
inc
push
push
pop
pop
ds
bound
fcoms
adc
sbb
mov
mov
sbb
repz
push
mov
testl
fbld
pop
outsl
jo
jmp
dec
and
pusha
ljmp
jne
mov
es
mov
cltd
mov
adcl
and
into
iret
add
add
sub
aaa
mov
je
sahf
or
andb
jno
push
pusha
add
es
add
movsb
fidivl
fldenv
xchg
inc
mov
mov
cmpsb
aad
test
imul
jl
adc
outsb
adc
in
mov
add
jl
add
lods
test
pushl
scas
or
inc
imul
test
xchg
mov
pop
loop
push
xor
push
pop
stos
jns
adc
test
push
test
sti
xor
and
mov
or
pop
push
inc
add
xchg
sbb
or
ss
pop
push
in
xor
out
ja
js
sbb
push
push
js
push
mov
xor
rep
aaa
inc
and
adc
outsb
xlat
pop
out
in
mov
das
lret
frstor
mov
push
or
jo
insb
adc
or
push
orb
sbb
cmpsb
jo
movsb
test
inc
dec
jnp
xor
je
xor
mov
shll
sbb
push
call
into
xchg
add
add
push
mov
addr16
push
clc
push
enter
mov
xchg
cld
add
jmp
scas
mov
cmp
jmp
call
jbe
sahf
push
int
test
lea
lret
cmp
sbb
inc
dec
xlat
lret
cmp
insl
adc
adc
aaa
aaa
cs
xor
popa
std
fmull
xchg
jg
es
xor
push
ror
add
arpl
inc
shrl
cmpsb
test
inc
dec
adcb
seta
fs
jecxz
sbb
ret
push
sahf
and
je
insb
ficoms
cmpsl
loope
leave
test
or
xchg
dec
and
push
push
mov
push
cmp
cmpsl
mov
sahf
loope
and
mov
add
cmp
aad
shll
inc
pop
or
add
mov
mov
adc
mov
loopne
es
jge
imull
scas
pop
xlat
pop
add
jecxz
pushf
dec
mov
notl
xor
and
and
fldl
mov
xchg
jo
add
cmp
xchg
mov
or
or
sub
fwait
xor
or
and
call
mov
or
inc
pusha
cmp
in
mov
repz
rol
add
aas
pushf
jmp
data16
cltd
ja
arpl
xor
pop
cmc
lods
and
mov
ds
sti
sub
lcall
jg
popa
jo
test
adc
adc
xor
push
jp
enter
fcoml
push
mov
mov
roll
jbe
ret
bound
mov
and
inc
or
jo
cmp
insl
enter
cmpsl
pop
sbb
lret
fnsave
add
out
inc
pop
dec
mov
scas
pop
icebp
xchg
xor
xor
or
loope
jne
and
pusha
adc
lcall
xlat
mov
sub
add
or
add
pop
ds
xchg
mov
sbb
add
add
shll
adc
dec
jb
shll
pop
pop
sbb
leave
aaa
pop
add
dec
pop
sbb
adc
das
add
fcomi
popf
out
adc
sub
pop
daa
bound
out
xlat
cltd
dec
xor
and
push
mov
inc
sbb
pop
in
lods
adc
cmp
addr16
int
pop
cmp
lret
mov
outsl
mov
and
imul
jns
adc
or
ja
pop
int3
jno
adc
cmpsl
or
imul
pop
jae
test
dec
cmp
push
add
out
addr16
filds
in
in
mov
adc
mov
jmp
inc
cs
sbb
mov
inc
testl
pusha
hlt
inc
cmp
out
cmp
adc
arpl
test
stos
divb
outsl
subl
inc
and
fwait
or
pop
enter
sub
adc
jbe
dec
sub
sbb
ret
and
and
mov
inc
iret
stos
pop
aas
out
in
adc
arpl
int
adc
jo
loope
in
fadds
test
out
test
in
inc
movsl
mov
or
push
scas
adc
dec
repnz
stos
dec
sub
fwait
mov
mov
addr16
jbe
out
sbb
mov
dec
inc
or
xchg
sbb
xorl
dec
mov
inc
mov
mov
add
xchg
and
inc
mov
adc
mov
cmp
out
mov
jecxz
mov
adc
dec
xchg
outsb
ret
mov
mov
jae
mull
pop
repz
dec
mulb
in
gs
lods
dec
mov
push
lret
push
cmp
inc
ret
jge
mulb
fmuls
imulb
iret
adc
push
jmp
cmp
cs
cmp
sbb
xchg
jl
ffreep
pop
fisttpl
and
xorl
leave
mov
sbb
adc
sbb
fsubrs
adc
lret
push
cmp
fcomps
mov
cmp
cwtl
sub
ja
aaa
and
sti
add
divb
dec
lods
dec
pop
sti
jp
pop
aas
pop
rclb
jae
pop
mov
adc
das
sub
cmp
pusha
in
int
adcl
ret
push
aaa
add
fcoms
js
mov
pop
push
adc
pusha
out
dec
push
idivb
xor
stos
cwtl
adc
adc
pop
xchg
out
dec
out
pop
sbb
pop
push
insb
add
jb
xchg
sbb
outsl
outsb
fs
sbb
mov
mov
ja
outsl
adc
sub
mov
push
mov
push
add
fsubs
sbb
dec
adc
insb
jnp
dec
seto
mov
adc
or
lcall
lods
jmp
scas
dec
out
sub
push
adc
dec
mov
lcall
mov
pop
sub
mov
push
xchg
insb
in
adc
mov
les
scas
push
das
inc
xor
inc
lcall
lahf
clc
nop
iret
mov
sub
mov
sub
xor
fsubrs
pusha
aad
jbe
shlb
inc
xchg
sets
xor
ljmp
mov
popf
dec
mov
push
lock
ljmp
in
add
add
xchg
aas
cmp
andl
add
fs
or
xlat
push
les
push
loop
inc
adc
outsb
mov
xor
mov
push
xchg
lods
fldcw
jp
sbb
ret
add
and
add
into
add
lcall
adc
mov
adc
jl
xchg
mov
xchg
insl
ja
cltd
cmp
push
outsl
cmp
xor
in
leave
pop
je
jo
jno
xlat
ret
test
mov
mov
jecxz
mov
adc
test
dec
inc
sbb
mov
lcall
test
shrb
and
scas
sbb
fisttps
sti
lock
ret
cmp
frstor
or
cmpsb
aam
mov
popa
sub
jecxz
movsl
fcmovnu
outsb
xor
out
push
jo
inc
fmull
sarb
test
ss
sbb
pop
add
unpckhps
out
push
cmp
jno
or
sub
cmc
dec
test
add
pop
push
dec
lods
std
push
xchg
push
xchg
lret
mov
outsb
outsl
sbb
imul
es
stos
popa
adc
or
shrl
add
test
outsl
jae
cmp
or
push
and
push
negl
or
sbb
dec
lea
imul
pop
loope
lods
push
test
add
xor
sub
and
mov
inc
scas
dec
sahf
jl
fcom
dec
xchg
add
mov
bound
out
add
test
mov
pushf
mov
leave
and
test
andb
std
outsb
or
les
out
jno
clc
and
mov
xorb
pusha
add
mov
ret
cmp
xor
cmp
push
aaa
les
sub
and
or
add
pop
int
stos
sub
out
push
insl
scas
cmp
xchg
jecxz
inc
xchg
push
sbb
add
sbb
mov
add
mov
rcr
cs
lahf
mov
out
aas
ja
adc
pop
ja
cltd
jnp
jae
test
rol
jns
pop
loopne
dec
test
and
lock
xchg
cwtl
jo
bound
inc
dec
iret
dec
jp
in
imul
pushf
addr16
pop
stos
and
push
adc
dec
jo
mov
cmp
sub
xor
push
out
lods
in
adc
in
cmp
pop
push
xor
add
imul
push
mov
rolb
push
sar
pop
push
cs
sbb
adc
popa
bound
jge
das
clc
out
mov
cwtl
fildll
cmpsb
dec
sub
push
fxch
mov
pop
ss
enter
std
fwait
jo
cmp
lds
jae
sarl
push
loopne
mov
gs
xor
ret
sub
xor
jne
rolb
sarl
dec
mov
push
cmp
adc
stos
ds
add
jecxz
imul
scas
jno
jmp
push
out
ljmp
dec
and
add
ja
jae
sar
or
cwtl
sub
fimuls
dec
loope
add
test
lahf
shll
fadd
and
inc
jo
test
cmpsl
push
fldcw
js
daa
mov
out
iret
add
ror
cs
and
xor
push
xor
xchg
sti
shll
popf
add
fcomp
pop
sti
sbb
dec
mov
and
sub
in
aam
shrb
sub
add
js
mov
jle
ret
add
push
cmp
setle
xor
fbstp
aaa
push
iret
and
mov
mov
pop
xor
lea
out
add
push
inc
mov
es
mov
aaa
mov
push
lock
je
pusha
in
push
mov
lds
dec
add
push
outsb
in
sub
or
stos
push
lds
cld
or
shrb
cmp
inc
jo
shll
add
mov
push
mov
cld
jb
or
stos
fsubrl
and
inc
in
sub
and
push
dec
dec
les
push
mov
xor
test
mov
sbb
mov
fs
cltd
sub
xor
mov
cmp
mov
push
sbb
or
add
or
test
loope
cmp
jb
orl
mov
fmuls
cs
decb
pop
imul
sbb
push
fucom
xchg
je
ret
movsb
sbb
sub
lahf
sbb
out
adc
sbb
xor
xchg
stos
lret
add
les
jg
push
cmp
mov
inc
jge
mov
das
cmpsl
push
dec
fisttps
sub
popf
push
rorb
andb
lahf
push
cmp
ret
int3
pop
dec
das
add
bound
call
or
xchg
dec
add
mov
rclb
mov
js
pop
sub
push
mov
sbb
push
scas
add
mov
loopne
js
test
add
mov
adc
ljmp
arpl
daa
jo
movb
add
xchg
dec
or
inc
mov
hlt
or
jp
mov
inc
jns
rorb
loope
dec
aam
popf
std
and
cmp
cmp
sbb
dec
sub
iret
sub
add
cs
pop
or
and
jo
mov
lret
cs
jecxz
cwtl
push
pop
and
mov
popf
pop
sarl
iret
fildl
movsl
add
fldt
pusha
arpl
cmp
sbb
xor
xchg
call
push
sub
add
mov
mov
pop
stos
loop
sbb
cmpl
movsl
sub
xchg
xchg
fdiv
push
cwtl
and
push
mull
pusha
push
daa
sub
jnp
xorb
sbb
aaa
jmp
stos
clc
pop
and
mov
je
add
jge
adc
add
mov
aaa
push
lea
jno
adc
jg
cmp
and
loopne
in
push
sub
lods
out
pop
xchg
mov
xchg
pop
mov
data16
xchg
or
pop
jno
cwtl
jno
ret
jo
xor
rep
push
test
cwtl
mov
jp
dec
frstor
mov
xor
jb
or
shlb
sbb
pop
repz
test
mov
and
mov
pop
and
hlt
loope
dec
xor
jp
adc
pushf
pop
fs
add
iret
inc
pop
in
push
xorb
fimull
push
xor
xor
sub
xchg
arpl
and
aam
sub
cmp
jo
sub
stos
sub
add
adc
cmp
xchg
or
jb
add
imul
stos
and
sub
sbb
mov
bound
xchg
xchg
mov
xchg
xor
xchg
inc
rol
test
pop
or
daa
sub
loope
lock
and
shlb
mov
cmp
ljmp
or
or
sbb
or
leave
xor
add
lds
fsubs
xor
jge
and
popf
add
cwtl
add
cmp
xor
mov
sbb
arpl
xchg
test
add
iret
loop
dec
dec
mov
mov
lret
out
add
inc
orl
xor
or
adc
shll
lods
js
xlat
inc
xor
jbe
xchg
ds
lock
pusha
inc
xor
in
push
push
in
nop
and
stos
cwtl
mov
daa
mov
aas
push
movsl
fldenv
jp
cltd
xchg
stos
xchg
inc
add
dec
std
push
icebp
adc
or
imul
mov
xorl
scas
xchg
mov
jl
mov
mov
push
rorb
test
push
xor
xchg
pop
adc
mov
pop
scas
mov
dec
mov
fstps
mov
jecxz
or
out
jl
inc
scas
jno
pop
jle
shrb
pop
stos
mov
sbb
mov
lods
adcb
out
xor
add
add
lds
clc
shl
es
or
sbb
cmp
lds
das
or
inc
in
inc
sarb
stos
mov
shrb
push
and
push
enter
ss
addr16
jbe
subl
lret
xor
daa
aaa
in
mov
inc
and
add
push
rorl
cwtl
mov
icebp
sti
and
sub
xchg
fwait
mov
addl
cmp
mov
add
test
js
aad
xchg
inc
jns
jae
sub
lds
repnz
jbe
pop
test
cli
push
lcall
or
outsl
jecxz
pop
sti
inc
lahf
cmpsb
mov
adc
mov
xchg
xor
out
jl
adc
popf
test
out
adc
orl
or
push
xor
sub
flds
stos
lcall
mov
mov
pop
xchg
adc
cwtl
lds
aad
lock
sbb
daa
nop/reserved
lods
fs
mov
les
fldenv
cmc
cmp
mov
jle
into
cmp
aad
and
pop
or
stos
test
jle
pop
cmp
push
jle
mov
mov
call
leave
pop
fwait
jnp
jns
imul
inc
mov
std
fisttpll
dec
mov
xor
ret
imul
ret
sbb
dec
enter
adc
xchg
sub
mov
push
xor
int3
jl
sbbb
imul
or
xor
pinsrw
mov
in
and
fsubs
sbb
loope
cmp
pop
cmp
sub
mov
mov
cwtl
pop
sub
pop
cld
into
and
sbb
test
jmp
mov
mov
pop
shrb
sbb
jmp
xchg
pop
cld
test
lods
fwait
mov
aaa
fwait
cmpsb
sahf
jnp
cmp
cmp
inc
aad
mov
cmpsl
aad
mov
pop
inc
inc
mov
jae,pn
cmp
and
cli
add
adc
push
push
shlb
out
sub
stc
fdivs
shlb
mov
stos
jg
stos
bound
inc
mov
sti
add
cmp
test
mull
push
jbe
in
inc
ds
mov
punpckhbw
sahf
push
adc
mov
ja
pop
xor
push
testl
mov
pop
jae
push
push
pusha
jp
filds
movsl
push
ljmp
dec
loope
xor
sar
mov
int3
jge
ljmp
shlb
add
and
iret
sahf
cmp
and
repnz
xor
and
or
call
adc
fdivrs
or
add
iret
sub
inc
jmp
ud0
mov
fwait
cmp
scas
adc
les
out
jae
andl
cmpsl
inc
xchg
xor
test
mov
test
mov
lcall
ret
outsb
mov
sbb
and
inc
cmp
das
and
rcrl
aaa
or
inc
sbb
xchg
push
addb
call
pusha
mov
lods
push
lds
in
test
inc
xor
daa
mov
or
sbb
jnp
lret
imul
add
push
dec
out
icebp
pop
roll
jns
sub
xchg
mov
mov
pop
push
xlat
jo
into
add
dec
add
sbb
and
push
jo
aaa
push
movsb
push
int3
sbb
inc
inc
mov
fidivs
jp
leave
mov
lock
daa
lahf
mov
shr
add
dec
js
xor
xor
sub
jp
andb
arpl
mov
int
or
out
pop
lock
lahf
imul
add
mov
fcomp
sbb
scas
jo
fsts
jo
push
mov
repnz
fsts
jnp
jbe
out
jne
pushf
out
sub
mov
cwtl
push
je
mov
enter
es
cli
adcl
iret
mov
xchg
inc
push
sub
xchg
movsb
pop
divl
inc
in
and
loopne
fsubp
ja
shll
add
loopne
popf
and
daa
aam
xor
cmpsb
or
push
mov
dec
rcrb
xor
imul
dec
sbb
and
cmp
fcmovbe
add
iret
lcall
xlat
jmp
lods
sbb
push
push
das
add
add
jne
in
sub
sbbb
and
inc
in
or
jno
pop
jb
test
dec
push
lock
pop
push
adc
pop
mov
push
fwait
push
cld
push
and
cmpsb
out
call
lret
jmp
or
loopne
or
test
dec
mov
fmull
popa
adc
rolb
push
les
or
fldt
mov
fildll
mov
or
call
aaa
dec
test
dec
or
inc
les
pop
mov
loopne
shll
mov
nop
scas
pop
sbb
and
xchg
pop
inc
pop
ljmp
jne
aas
stc
xchg
add
sub
stos
bound
inc
iret
ja
les
push
ret
sbb
pop
outsb
sub
lods
add
test
sarb
add
out
popa
jo
push
sbb
loopne
sbb
mov
or
xor
testl
jae
xchg
cmp
dec
ficomps
leave
mov
push
jne
ss
jmp
dec
in
adc
sbb
add
push
mulb
push
stos
lea
shrb
add
push
inc
jo
in
out
scas
das
xchg
pop
psubb
or
push
daa
loop
iret
lea
pop
int3
xor
mov
push
push
sbb
sub
jle
pop
dec
popa
das
add
shrb
bound
dec
sub
dec
push
insb
jae
adc
pop
xchg
movsl
sub
adc
movsb
and
mov
fisubrs
sbb
sub
shrb
mov
clc
jnp
sub
push
shrl
or
jbe
mov
jns
xorb
test
loopne
das
push
add
jbe
xlat
mov
or
push
loop
push
cmpsl
ja
or
shll
adc
push
or
mov
push
add
mov
in
add
push
xlat
orb
subl
push
or
or
mov
dec
xchg
jmp
inc
popa
je
arpl
sbb
inc
add
xor
mov
push
xchg
sub
out
adc
addr16
mov
sbb
mov
inc
jbe
sbb
adc
jns
cmp
cmp
leave
xchg
out
sub
sub
sbb
ss
sbb
ja
and
jo
xchg
xchg
mov
daa
pop
pop
xor
dec
xchg
xchg
aaa
lds
jo
mov
pusha
loopne
lock
cmp
outsl
test
loop
loopne
add
jb
and
adc
jns
fwait
jo
xor
shll
lods
adc
sub
mov
mov
stos
jnp
sub
mov
aam
jle
pop
sub
js
ja
jl
fsubr
fildll
sti
pop
clc
and
js
test
mov
pop
push
jle
mov
push
and
pop
daa
pop
add
pop
xchg
jnp
mov
iret
and
sarl
mov
clc
push
in
outsl
xor
pop
lock
fimuls
shlb
addl
fidivl
mov
sub
fcmovne
xor
jnp
fadds
rorb
mov
and
hlt
jecxz
mov
in
scas
xor
test
push
add
or
add
ret
clc
xchg
rcl
lahf
hlt
sbb
call
xorb
jge
fnstenv
iret
push
jge
push
sub
xor
adc
xlat
stos
pop
rol
inc
jo
pusha
add
add
loop
loopne
imul
push
add
pop
jae
xor
cmp
cmp
xor
mov
mov
into
sti
es
outsb
test
jle
rcll
fsubl
stc
scas
shrl
push
cmp
and
insl
int3
test
and
pop
repz
cmp
test
popa
popa
xchg
in
mov
push
or
imul
pop
cmpsl
or
adc
pop
cmpsl
or
xchg
das
jle
xor
sub
lock
js
aas
imul
scas
lret
es
sbb
add
pop
sbb
stos
sbb
xor
outsb
out
cwtl
cmp
fsub
jb
int3
and
lds
mov
pusha
leave
popf
and
outsl
pop
lret
bound
mov
pushl
popf
sub
push
cmp
mov
xchg
xor
add
daa
or
clc
pop
adc
or
cmp
add
aaa
loope
ja
or
loop
sti
das
push
leave
es
pop
mov
cld
xchg
add
pop
cmpsl
ret
mov
or
jb
inc
jp
je
cltd
in
xchg
loope
sub
xchg
add
jmp
xchg
jecxz
sbb
dec
xchg
sub
add
xchg
sbb
mov
mov
ja
mov
xchg
and
sbb
daa
xchg
xchg
dec
xchg
and
pop
rolb
xchg
sbb
xchg
add
jmp
je
sbb
jp
pusha
inc
xchg
jmp
imul
out
sbb
clc
and
push
cmp
es
xorb
or
daa
das
inc
or
das
pop
or
dec
mov
mov
jb
outsb
add
pop
iret
ljmp
test
subl
inc
sub
jno
popf
and
aaa
in
xor
cmp
sub
leave
add
sbb
inc
mov
je
or
jae
das
lea
imul
int
fisubrs
andl
and
push
xor
jp
das
cmpsb
push
sub
je
in
add
dec
je
subl
push
add
push
and
cs
jae
add
jmp
fdivs
pop
jno
into
or
jo
rorb
inc
xor
rcll
je
jno
rolb
jae
xchg
fimull
lds
dec
jbe
test
lds
dec
xchg
add
leave
je
mov
lds
jbe
push
rclb
test
int3
js
rol
hlt
ss
ja
bound
mov
sub
or
ja
dec
xchg
cmp
jns
jp
cmp
fstps
lahf
add
and
jp
jecxz
mov
rorl
int3
pop
das
lret
cmpsb
loopne
xchg
pop
add
cs
inc
pop
outsl
pop
jb
dec
and
andl
jle
push
push
inc
out
jl
rolb
mov
or
sbb
repz
add
adc
adc
stos
cmpsb
arpl
int3
and
cmpsl
push
xor
ja
ljmp
es
inc
dec
stos
pop
in
push
out
les
inc
sub
das
mov
xlat
mov
stc
jle
pop
das
jne
xchg
scas
je
insl
sbb
pop
roll
push
mov
pop
pop
je
shrb
cmp
out
sbb
popa
inc
jecxz
pop
jp
leave
into
xor
jnp
aam
add
xchg
lods
arpl
pusha
pop
lahf
pop
ds
fnstcw
add
inc
aas
mull
xchg
test
hlt
adcb
vfrczss
xchg
push
lods
mov
ret
xor
add
lock
jl
popa
popf
mov
cmp
xor
add
cmp
xchg
jecxz
loop
data16
cwtl
lods
mov
loop
fwait
xor
jecxz
xor
lahf
push
mov
hlt
cmpsw
pop
mov
scas
pop
inc
loopne
daa
adc
les
inc
jbe
sbb
inc
loope
pop
call
fbstp
les
mov
inc
addl
adc
sub
dec
adc
push
mov
pushf
push
mov
adc
lods
xor
pusha
arpl
xchg
inc
xor
xchg
mov
xlat
lahf
cmp
cmp
push
cmp
mov
mov
mov
add
daa
dec
mov
rcrl
imul
mov
cvtps2pi
cltd
sub
cmp
jp
enter
cmp
sub
call
add
mov
mov
or
cmp
mov
adc
test
mov
mov
fbstp
filds
loope
mov
sub
and
and
daa
push
hlt
or
inc
jp
pop
loop
sub
std
loope
cmpsb
lret
cmpsl
mov
pushf
jl
arpl
xchg
testb
cmp
mov
push
xlat
pop
or
subl
test
sbb
mov
loope
add
out
mov
ja
sub
daa
push
dec
ret
outsb
xchg
or
mov
lods
and
mov
call
mov
pop
adc
inc
sub
jne
mov
pop
sub
sbb
and
xlat
push
dec
nop
scas
or
fdivrs
add
stc
jno
push
fdivrl
stos
push
sbbl
out
loop
or
add
stos
aam
mov
sbb
push
sub
addr16
inc
mull
push
adc
inc
sub
nop
mov
jae
or
icebp
bound
rclb
mov
pushf
adc
dec
mov
mov
ret
adc
clc
pop
and
adc
cmc
inc
mov
movb
cmp
repz
inc
out
es
pop
jl
and
testl
cmpsb
lret
mov
repz
mov
jmp
sub
push
int
dec
inc
repz
fmuls
mov
fiaddl
faddp
sub
cmp
or
nop
scas
insl
push
adc
push
hlt
movsb
pusha
mov
push
cmc
push
ficoml
pusha
adc
xor
inc
and
jl
dec
xor
jb
leave
pop
mov
sbb
call
outsl
sbb
sub
xor
jnp
cmc
dec
inc
xor
insb
xlat
xchg
and
pop
jno
lcall
mov
cmp
sub
dec
adc
or
pop
nop
loope
inc
mov
aam
aad
arpl
lret
adc
je
jecxz
inc
xchg
cmc
outsb
push
add
push
inc
out
inc
daa
loop
adc
enter
push
sbb
pop
icebp
adc
mov
inc
push
inc
lods
loopne
lods
xor
mov
xchg
add
add
push
sahf
lods
dec
cmp
movsl
mov
mov
jo
je
jle
sub
out
popa
int3
ds
sbb
lock
xlat
lods
or
int
ret
mov
add
enter
mov
mov
sub
std
dec
adc
lcall
outsb
insb
xchg
mov
sbb
xor
sub
push
aas
cmc
xchg
mov
aas
or
sti
dec
rorb
inc
sbb
xorl
movsb
mov
dec
into
fldcw
sbb
sbb
mov
and
sub
adc
xor
xor
or
mov
cmpsb
and
push
ret
fadds
in
ret
pop
loope
pop
mov
mov
cltd
call
push
inc
inc
mov
cli
sub
inc
or
mov
adc
into
xor
insl
nop
sub
mov
cwtl
fisubrs
andb
test
mov
dec
cmp
imul
xor
mov
dec
sbb
aad
sub
cmp
repnz
scas
cmp
addr16
xchg
mov
je
and
dec
cmp
adc
bound
push
xor
rcr
out
inc
dec
stos
int3
dec
mov
bound
fwait
loop
nopl
and
ret
mov
sbb
sbb
test
lahf
hlt
ja
clc
cmc
mov
jg
xor
fcmovnbe
xchg
popa
lret
loope
lcall
and
xor
push
jb
add
and
fsubrs
orb
push
dec
cmp
loop
adc
pop
adc
scas
xchg
scas
test
mov
push
in
lret
pop
and
inc
cmp
add
cmc
mov
jp
test
mov
inc
movsb
mov
or
test
pop
rorl
pop
int3
int
jg
int
sub
sbb
cmp
int3
movsb
mov
adc
pop
ret
xchg
outsl
xlat
sbb
xchg
popf
daa
push
test
test
mov
xchg
sbb
dec
mov
mov
and
and
lfs
mov
fcomps
mov
dec
out
jge
xor
sub
push
ret
lret
loope
add
adc
rorb
ret
and
int3
jge
sub
lods
call
aad
loop
lcall
movl
jle
add
mov
xchg
adc
in
mov
int3
sub
push
xchg
mov
or
mov
jbe
pop
xor
sbb
insb
mov
int
sub
loop
sbbb
mov
and
clc
mov
adc
pushf
das
mov
jno
mov
mov
cmp
hlt
sub
and
cmp
test
and
cs
mov
sub
rolb
test
daa
xorb
aam
add
ja
outsl
mov
push
or
pushf
pop
icebp
add
sbb
pop
or
movsl
js
xchg
sbb
cmp
sub
mov
cmpsb
xchg
mov
push
clc
mov
test
pop
or
inc
cmp
data16
sti
cli
xor
out
lock
or
shl
loop
sub
inc
jge
xchg
mov
out
inc
leave
les
pop
addb
pop
mov
imul
addr16
scas
jmp
dec
sub
mov
scas
jnp
push
pop
sub
sub
and
lds
jnp
outsb
repnz
into
insl
das
sub
pop
inc
or
mov
adc
dec
rol
and
add
sbb
sbb
movsl
mov
adc
or
sbb
movb
sahf
adc
xor
ljmp
fbld
adc
mov
pop
das
rcl
cmpsl
adc
mov
cmp
loope
mov
jnp
out
test
clc
mov
and
adc
mov
in
mov
ror
adc
jo
mov
mov
and
push
imul
adc
clc
xor
xchg
es
sub
fbstp
pop
dec
bound
sbb
jne
fwait
add
add
add
jne
movsb
cmp
mov
inc
xor
add
arpl
push
ljmp
jno
add
xchg
lods
xchg
lods
fcomi
pop
sub
test
insl
sbb
pushf
int
aas
lods
int
jae
xchg
into
xchg
stos
int
jecxz
push
xchg
mov
cld
or
add
pushf
fistps
loop
cmp
inc
mov
cmp
addr16
adcb
stos
xchg
icebp
or
test
cmp
loope
push
cmp
scas
jb
mov
pop
stos
jne
cli
add
jae
sbb
pusha
imul
fldt
insb
std
mov
cs
add
mov
out
fdivs
fcomp
jbe
sbb
and
sub
fldenv
mov
daa
cmp
sbb
stos
or
or
leave
loopne
icebp
arpl
fadds
cmc
scas
xor
aad
in
and
add
push
sub
out
outsl
cmpsb
shlb
push
or
cmp
or
rorl
dec
push
js
loopne
add
mov
popa
jo
mov
insb
mov
scas
push
add
and
mov
mov
mov
scas
out
cmpsb
cli
and
push
imul
fisubs
or
pop
mov
js
dec
fidivrs
and
cltd
imulb
cmp
shlb
test
je
or
orb
dec
pop
push
add
or
cmpl
shl
mov
or
adc
fs
iret
ret
out
sub
sub
push
lock
inc
sbb
ds
mov
or
into
iret
cmp
icebp
push
mov
cltd
or
outsb
inc
nop
mov
sbb
mov
jle
pop
or
enter
dec
inc
mov
lahf
movsb
and
mov
push
mov
dec
aad
les
pop
add
arpl
ret
jae
pop
mov
inc
loop
fadds
push
push
test
pop
inc
sbb
loope
insb
shlb
xchg
lock
push
dec
and
mov
add
ret
mov
out
sub
loope
push
pop
push
inc
mov
stc
aaa
jno
push
xchg
cltd
rorl
sbb
psubusb
fs
push
lods
jle
add
add
add
fcmovnb
adc
adc
sbb
into
leave
mov
jmp
push
mov
leave
daa
icebp
ror
nop
mov
add
jno
in
mov
dec
out
jo
push
nop
in
xchg
lock
xor
mov
mov
aas
loopne
fadds
or
das
ljmp
negb
jmp
dec
dec
push
jnp
cmp
mov
sub
subb
and
push
mov
ss
pop
aaa
mov
daa
adc
add
arpl
test
or
test
mov
stos
popf
add
fisttpl
roll
shrl
inc
lret
adc
jne
lretw
jge
push
test
dec
mov
add
sbb
mov
daa
rcrb
sti
fimull
into
xchg
ret
sbb
sbb
outsl
iret
lcall
ja
lds
adc
test
inc
cmpsl
int3
es
pop
mov
sub
mov
int3
jae
cltd
dec
adc
movsl
cli
add
sbb
pusha
aad
jnp
rcrb
pop
pop
iret
insl
add
in
lcall
xor
ja
rolb
test
mov
mov
scas
cmc
int
sub
lcall
arpl
mov
adc
inc
xor
sub
cld
mov
and
and
pop
lahf
add
add
lods
cmpsb
pop
sti
xor
fwait
push
adc
sub
subl
or
or
lock
insl
test
sub
jl
inc
pop
inc
cs
movups
pop
xchg
adc
and
xor
das
xchg
mov
daa
bound
add
cmp
rol
in
cltd
dec
add
inc
pop
push
add
pop
fwait
jge
cmp
dec
sbb
xchg
xchg
iret
jl
popf
jp
jp
cmpsb
xlat
rorl
mov
gs
mov
sbb
jmp
aam
add
rclb
mov
ret
push
daa
cmpsb
pop
ret
dec
jle
pop
int
out
mov
stos
bound
pusha
or
mov
pushf
and
dec
pop
in
arpl
pusha
in
cli
add
popa
and
cwtl
cmp
mov
loop
adc
cmpl
cmp
inc
pop
pop
push
push
mov
sbb
add
sysret
aam
inc
test
pop
adc
imul
sbb
sbb
xchg
addb
aam
in
mov
mov
out
imul
mov
and
in
pop
adc
jle
rolb
dec
addr16
imul
scas
and
cmp
popf
sahf
inc
bound
inc
cli
and
and
mov
add
outsb
shrl
mov
arpl
push
push
je
add
std
cs
imul
jmp
arpl
jbe
ljmp
addb
push
std
lods
sub
mov
and
sbb
mov
nop
loope
push
jae
mov
and
into
shrb
sbb
or
mov
imul
movsb
orb
add
jecxz
shlb
popf
lods
xor
add
pop
jo
mov
and
jle
aad
sti
call
inc
xchg
popa
dec
pop
loop
and
fcmovne
mov
jecxz
or
add
push
xchg
xchg
shll
dec
and
in
cmpsl
jle
inc
sub
popf
imul
je
cwtl
sub
sbb
movsb
mov
mov
xorb
stc
mov
jmp
inc
inc
jp
inc
push
sub
dec
test
enter
test
pusha
insb
int3
jp
and
arpl
jb
cmp
inc
lods
xor
cmp
rcr
dec
push
cmp
leave
jb
insl
nop
pop
add
pop
push
push
add
cli
mov
adcb
imul
daa
mulb
sbb
and
pop
mov
mov
jmp
sbb
mov
xchg
push
and
rcl
out
pusha
cwtl
mov
jno
rolb
push
mov
push
mov
and
es
sbb
out
je
imul
dec
cmp
cli
movsb
mov
push
leave
or
adc
shrb
jb
cmc
iret
es
or
pop
inc
adc
jb
loopne
decb
lahf
sbb
mov
pop
icebp
adc
sub
imul
pop
movsb
xchg
sub
push
mov
jne
pop
push
pop
push
or
mov
aas
jmp
loope
pop
jg
outsb
aam
dec
sub
pop
lahf
sub
add
sub
cmp
sbb
test
sbb
jecxz
int
sbb
mov
pop
pop
iret
adc
loopne
mov
mov
fsubrs
push
sub
addb
iret
out
nop
xchg
push
push
sarl
mov
cmpl
inc
dec
inc
or
add
cmpsb
jnp
mov
repz
test
xor
add
add
test
test
or
aaa
add
int3
aad
dec
notb
out
pop
sub
add
arpl
sub
inc
ret
sub
aad
int
loope
addr16
lods
arpl
jmp
jnp
movd
adc
sbb
mov
push
inc
or
inc
idiv
and
xor
clc
mov
mov
mov
test
out
sbb
xchg
adc
fwait
les
dec
in
jp
dec
add
xchg
arpl
xchg
cli
inc
mov
jge
and
pop
jmp
es
and
and
iret
insl
xor
xor
jmp
mov
nop
inc
and
cs
cmp
movsb
in
ss
loop
adc
cmp
push
insb
popa
mov
cmp
push
xor
outsl
mov
sbb
int3
dec
xchg
adc
or
dec
outsb
std
adc
xchg
pop
pop
je
sbb
and
add
cmpsl
jne
iret
sbb
outsb
add
out
and
mov
stos
cmp
xchg
and
lock
aaa
enter
and
ja
orb
leave
leave
xor
call
push
es
ja
xchg
xorb
push
fdivl
add
fnstenv
or
mov
notl
cmpsl
out
push
roll
adc
push
pop
inc
pusha
and
xchg
sbb
leave
lret
and
sbb
shlb
sbbb
lock
jge
cmc
std
adc
outsl
mov
jo
fldt
cmp
vpunpckldq
je
adc
jle
jb
pop
xor
mov
adc
adc
stos
push
mov
mov
loope
xchg
push
test
aam
mov
adc
mov
pusha
push
push
push
push
cwtl
push
mov
jecxz
inc
xchg
mov
dec
jge
in
xor
push
push
popf
shlb
add
stos
mov
dec
outsb
adc
pop
inc
stos
adc
adc
cmpsb
packsswb
add
sub
sub
ss
cmp
and
sti
pop
pop
es
or
es
aaa
jmp
shlb
and
and
xor
dec
and
loopne
xor
sbb
push
aaa
dec
repz
pushf
sub
push
lods
insb
js
sub
mov
fimull
pop
repz
lcall
xchg
push
mov
mov
iret
xor
pop
xor
push
je
inc
arpl
movsb
pusha
or
out
popf
xor
inc
mov
push
lret
test
lcall
xchg
les
outsb
mov
push
jecxz
xor
icebp
or
add
das
addb
andb
cmpsl
mov
inc
xchg
lock
and
incl
push
mov
pop
sub
gs
ret
pop
push
iret
shll
je
sahf
pop
inc
lods
lea
scas
addr16
xor
scas
add
push
pop
scas
in
sub
push
mov
gs
rcrb
add
mov
lds
icebp
jle
xchg
fwait
add
jbe
mov
test
dec
mov
adc
pop
nop
and
jg
movsl
add
cwtl
rolb
jmp
ret
imul
pop
mov
ret
lock
sbb
shll
dec
cmp
add
test
leave
sub
dec
addl
mov
pop
shll
xor
add
fcompl
sbb
or
fistl
jns
pusha
sbb
push
orl
lret
mov
fdivs
dec
mov
sbb
pop
or
aad
adcb
jns
pop
lods
hlt
adcb
mov
arpl
mov
mov
fsubs
inc
add
push
sbb
push
add
adc
inc
outsb
push
push
wbinvd
mov
addr16
pushw
movsl
mov
stos
insb
mov
mov
adc
mov
add
pop
ja
xchg
loop
mov
xchg
shll
push
mov
dec
fimuls
inc
sbb
pop
xchg
pop
push
mov
aam
pop
xchg
mov
in
add
loope
jmp
dec
icebp
sub
fcoms
cmpl
int
rolb
pop
jne
dec
or
loopne
add
outsb
xor
xor
sub
test
mov
in
dec
daa
push
sbb
les
sub
inc
or
out
add
in
je
test
outsb
mov
sbb
fimuls
test
sahf
push
aaa
int3
xchg
in
mov
insb
pop
or
repnz
shlb
jno
inc
stos
js
dec
lahf
xchg
xchg
pop
sub
xchg
popa
js
mov
push
or
movsb
jae
mov
add
inc
push
lock
ret
filds
xchg
add
adc
xor
cli
push
subl
je
insl
dec
inc
and
rcrb
daa
or
add
mov
adc
sub
cmovae
repz
sti
insl
add
push
xchg
dec
add
inc
addr16
inc
psubusw
or
mov
cs
mov
lods
pop
adc
pop
inc
sbb
push
mov
sbb
xor
add
sbb
bound
cwtl
and
xchg
adc
pop
cmp
ds
adc
je
mov
mov
inc
mov
inc
inc
mov
insb
inc
mov
sbb
jae
sbb
inc
inc
jne
and
inc
jbe
jo
sub
outsl
scas
testl
cmp
fcmovbe
pop
les
ficoml
movsb
mov
or
add
inc
sub
cltd
scas
push
fiadds
aas
push
testb
jle
and
bound
add
loope
cwtl
lds
or
lcall
and
xchg
testb
pop
sub
mov
les
dec
into
mov
cmp
cmpsl
mov
test
sbb
add
ret
sub
clc
pop
mov
stos
add
ss
mov
shlb
cmp
pop
call
push
sub
xor
fadds
xorl
xchg
pop
fistps
dec
pushf
jle
xlat
loopne
cmpsl
pop
test
pop
stc
add
add
int3
mov
fsubrl
gs
aam
pop
out
in
in
cmp
das
jecxz
ja
aam
lods
fists
das
repz
aad
push
test
stos
inc
shll
scas
push
iret
sbb
xlat
and
daa
push
xor
inc
ljmp
mov
das
cmp
arpl
xchg
inc
out
cltd
fldenv
stos
dec
and
xor
add
sbb
pop
fcomps
cmpl
jmp
xor
xchg
adc
inc
mov
adc
push
mov
sub
stos
mov
and
xchg
mov
push
fucomi
pop
hlt
movsb
jle
ret
mov
iret
pusha
adc
add
or
mov
xor
inc
sub
push
dec
fbld
sub
aas
popf
stos
push
test
add
mov
inc
aam
sub
add
out
ljmp
inc
dec
add
stos
fidivs
inc
jp
ljmp
scas
imul
add
cltd
test
popa
test
hlt
and
insl
mov
ret
adc
mov
out
adc
test
push
aad
mov
add
stos
jbe
xlat
imul
ret
pop
lret
jo
popa
test
aaa
subl
sub
popf
pop
jo
add
inc
loop
add
in
inc
das
movsl
pusha
mov
lahf
sbb
jle
nop
xor
sub
shlb
xorb
push
cmpsb
addl
orb
enter
imul
push
xchg
out
daa
inc
adc
add
repz
out
cs
movsb
cmp
sub
sub
ficoms
add
xlat
cmpsb
dec
fcoml
lds
mov
mov
jge
and
or
mov
cmpsb
sub
push
vaddsubps
pushf
inc
enter
movsb
call
push
ja
aam
inc
add
mov
mov
addb
mov
mov
inc
fistpll
jnp
scas
aaa
mov
push
into
and
dec
push
mov
jb
sbb
and
int
and
mov
cmp
fstpt
andl
push
jecxz
lds
pop
mov
mul
cltd
cmp
lods
push
outsl
fstps
add
fisubrl
xlat
lds
push
mov
mov
sbb
add
pop
aad
movsb
jb
popf
lds
stc
mov
push
xchg
xor
cmp
xchg
jbe
fnsave
mov
mov
inc
in
adc
lods
adc
test
mov
test
sbbb
dec
mov
rolb
mov
push
test
fsubr
jo
mov
jnp
ss
es
mov
fwait
mov
xchg
lock
sbbl
in
lea
shl
mov
push
aas
bound
aaa
aaa
adc
xchg
arpl
push
and
fsubs
mov
jmp
addr16
mov
scas
add
and
push
popf
in
mov
faddl
sbb
popa
inc
sbb
loope
scas
ss
daa
mov
push
xor
xor
mov
test
cmovae
cmpsb
cmp
and
push
pop
cmp
lahf
mov
mov
in
lret
sub
xchg
pop
or
push
icebp
or
out
ljmp
push
outsl
mov
pop
jo
mov
pop
popa
scas
jae
dec
rclb
arpl
fld1
rorl
pop
aaa
mov
xchg
and
sub
fwait
cmp
insl
in
cmp
jle
push
fwait
dec
ret
outsb
cmpsb
mull
fisubrs
fcompl
mov
and
es
loope
sti
loopne
ret
adc
mov
xchg
jnp
mov
and
out
mov
sub
and
pop
notb
xorl
pop
mov
and
shrb
loop
lcall
pop
xchg
adcb
add
or
xchg
roll
sbb
call
adc
xchg
adc
sti
rclb
xchg
inc
sti
sbb
xchg
addr16
add
xchg
fldl
fistl
pop
lret
sub
mov
xor
sahf
jo
outsl
int3
or
daa
push
rcrb
push
xor
mov
roll
in
cmpsl
push
shlb
pop
jge
hlt
ss
jne
dec
rdtsc
pop
fwait
add
fldt
sub
dec
mov
mov
icebp
pop
loop
and
jl
rclb
lea
mov
jmp
adc
loop
shrb
mov
and
push
int3
mov
aas
push
mov
add
loopne
push
or
push
lahf
pop
jmp
jne
shl
test
add
adc
jae
or
ja
mov
add
je
or
shlb
pop
sub
sbb
cmp
loopne
stos
xchg
jno
pop
sbbb
es
scas
cli
sub
dec
sbb
sahf
cli
cmpsb
fnstenv
pop
adc
xchg
sbb
fiadds
and
xchg
divl
lds
dec
push
dec
adc
loop
mov
ja
jg
cmp
push
adc
cmp
and
cltd
push
jno
and
dec
leave
xchg
je
add
inc
dec
push
fistl
xchg
enter
jge
stos
mov
push
mov
add
sub
mov
dec
dec
mov
and
lcall
cmp
mov
cmc
ret
cli
or
aam
jno
lret
pop
cltd
push
in
fdiv
mov
ds
ss
repz
or
add
jmp
sub
lcall
add
push
hlt
leave
dec
test
mov
add
jle
pop
add
in
sti
test
push
cltd
test
xchg
fcoml
xor
popl
add
pop
arpl
jg
or
push
imull
xor
push
aam
leave
daa
add
dec
push
insb
cmpsb
xlat
add
inc
mov
insl
push
insb
imul
bound
in
les
or
push
pop
ss
icebp
inc
mov
fildll
mov
jle
and
mov
mov
or
jg
add
jb
rcrw
mov
xor
add
div
fldcw
sbb
scas
or
test
frstor
bound
outsl
push
xor
cmc
jne
jbe
bound
ss
inc
add
or
mov
mov
cmp
cmp
xchg
out
pop
scas
fisubrl
testb
lahf
push
sahf
je
or
push
lahf
cmpsl
mov
sub
mov
inc
in
sub
movl
or
cmp
inc
adc
mov
mov
pop
mov
mov
mov
ret
pop
xchg
iret
adc
or
xlat
adc
cmp
testl
or
push
xor
and
add
loopne
test
pusha
sub
loop,pt
xor
cmp
pop
inc
shrl
mov
add
daa
inc
mov
addb
xor
outsb
sub
das
sbb
fsubs
clc
dec
push
pop
addr16
or
aam
in
idivb
mov
sbb
in
insb
xchg
sub
arpl
outsl
out
push
call
dec
ja
mov
dec
stc
and
imul
sbb
js
jae
aas
clc
push
aam
sub
mov
popa
pop
xor
xchg
adc
cmp
xor
cmp
cmpsb
clc
mov
movsl
pusha
inc
cmp
mov
orb
out
mov
xchg
jmp
mov
add
adc
mov
outsl
xchg
stos
out
adc
fistps
arpl
lods
out
add
mov
push
jmp
or
lcall
and
icebp
test
lock
inc
cmp
js
push
or
jne
or
sbb
shr
loope
or
test
inc
movsb
inc
out
hlt
mov
mov
jne
xor
shlb
fsts
in
mov
pop
cmp
mov
push
mov
mov
pop
rolb
jl
jae
es
enter
push
jno
mov
mov
lods
cmp
fcoms
jg
jo
test
and
out
lock
xor
outsl
xor
push
adc
push
add
adc
push
xchg
rcl
mov
out
sub
lret
xchg
inc
shll
and
inc
loop
cmp
mov
xor
mov
mov
hlt
iret
sbb
cmp
and
xor
xor
xchg
dec
test
mov
push
mov
sbb
sbb
mov
cmp
mov
mov
push
and
ret
or
mov
shlb
movsl
dec
push
sti
out
scas
test
inc
xor
jle
ret
add
shlb
inc
mov
push
loopne
mov
ficompl
mov
jns
pop
adc
cs
out
fisttpl
xor
orl
mov
cmpl
dec
xorb
sar
divl
push
lods
jb
jl
mov
movsb
rclb
test
add
test
push
shrb
mov
push
mov
sub
mov
rcrl
sub
jp
cltd
lods
xchg
jnp
lods
insl
clc
repz
movsb
cmc
sub
sti
and
push
das
insb
jo
xchg
bound
inc
iret
add
push
fs
dec
in
arpl
fadds
lds
sbb
fldenv
mov
rorl
xor
mov
outsb
inc
xchg
inc
fcmove
cmp
ja
jnp
pop
sub
fnstcw
cltd
arpl
inc
mov
bound
add
jge
popf
icebp
cmpb
mov
add
fisttps
incl
or
adc
flds
loopne
adc
pop
xor
loope
scas
in
shll
xchg
lods
test
mov
adc
and
sub
cmp
push
cs
enter
xchg
mov
pop
push
add
sub
inc
mov
mov
mov
out
push
icebp
out
mov
adc
jne
test
inc
punpcklwd
addr16
cwtl
inc
insl
adc
dec
out
adc
loopne
shr
or
in
pop
sub
and
std
mov
push
rolb
mov
insl
shl
inc
outsl
pop
ja
xchg
dec
xchg
call
adc
add
das
cmpsb
pop
inc
dec
mov
mov
dec
fildll
adc
leave
push
mov
loop
lds
es
and
cmp
push
lods
and
add
mov
das
xchg
or
imul
out
in
in
aaa
push
in
or
test
mov
sbb
cmp
pop
aad
jmp
xor
xor
pop
loop
cmpsl
inc
daa
lds
cmp
test
hlt
mov
xchg
jnp
adc
pop
test
rcll
adc
cmpsl
sub
push
test
cmp
lds
adc
repz
adc
xor
or
add
loope
adc
jbe
ss
jb
cmpsb
jno
xchg
rcll
loopne
pop
add
bound
ret
add
imul
cmpb
cmp
je
xchg
cld
adc
cmp
xorb
fiaddl
bound
ja
add
mov
mov
add
shl
and
test
popa
and
add
mov
stos
shrl
add
fldcw
jp
iret
push
mov
adc
adc
test
sbb
rcr
or
pop
mov
sbb
cmp
fcompl
xchg
lods
in
in
rolb
gs
movsb
lret
xor
cmpsl
cmp
adc
jo
leave
mov
movl
adc
adc
mov
add
movsb
dec
in
mov
dec
push
and
push
dec
adc
stc
divb
js
sbb
xor
mov
push
cmp
jne
inc
or
mov
dec
ret
mov
fistps
sbb
movsl
adc
stos
jo
andb
hlt
and
movb
jle
and
jno
inc
cmc
adc
push
testl
inc
cmp
inc
xor
in
out
push
cli
add
mov
inc
cmp
stos
sbb
or
sbb
mov
clc
sbb
jno
cld
or
jae
enter
mov
mov
pop
or
jo
outsb
pop
ja
mov
in
fldcw
add
inc
mov
jo
and
xchg
xor
or
cmp
lods
add
ret
je
mov
nop
adc
ja
mov
mov
add
mov
cld
sub
lahf
add
add
stos
dec
mov
outsb
add
hlt
call
xor
mov
xlat
fmull
ja
shl
pusha
in
sub
inc
pop
fadds
hlt
pop
sub
add
add
adc
lods
and
mov
les
clc
les
cs
ficompl
out
ljmp
and
or
outsb
fnsave
call
or
inc
jl
insb
xor
mov
mov
adc
js
loop
iret
push
lods
push
adc
fdiv
or
call
mov
mov
pop
cltd
dec
jne
push
faddl
jecxz
pushw
out
in
scas
in
push
or
je
or
lret
xchg
sbb
add
mov
mov
je
adc
mov
or
sahf
jbe
adc
pusha
les
loope
xchg
mov
xchg
push
xor
jle
xor
adc
xor
cmp
pop
or
add
aad
xchg
mov
js
add
adc
pop
loopew
aas
sub
xlat
dec
dec
pop
mov
xor
mov
inc
xor
push
pushf
jmp
adc
xchg
pop
xchg
jecxz
mov
stc
lods
fsubl
cmp
push
or
jp
pushf
loopne
aas
mov
jno
inc
pop
loopne
movsl
jae
stc
mov
jo
in
push
rcrl
or
in
pop
sarb
push
or
sub
fcomps
sub
fbld
push
and
out
bound
mov
mov
pusha
sub
lds
ret
dec
clc
add
bound
pop
push
test
mov
sub
xlat
sub
inc
xor
call
dec
addl
xchg
sub
dec
mov
adc
xor
pop
add
shl
inc
stos
and
sbb
stos
out
mov
sub
mov
cmpsl
out
fisttpl
repz
xor
sub
cmpsl
sub
mov
mov
test
pushf
call
loopne
mov
cmp
sbbb
mov
xor
inc
add
mov
adcl
and
mov
xor
sahf
mov
adc
mov
mov
add
dec
cwtl
push
aas
push
inc
mov
movsb
add
or
lods
mov
add
dec
ret
adc
iret
fisubl
roll
jle
mov
mull
adc
ret
add
scas
ds
cmp
and
xor
push
insb
pop
push
sbb
mov
add
cli
push
test
sbbl
mov
push
loopne
out
dec
lock
mov
outsl
fdivs
push
and
and
add
push
in
jne
mov
jb
jno
inc
push
inc
sub
in
and
xor
outsl
cmp
add
mov
cs
mov
cmc
push
and
lcall
mov
or
mov
lahf
and
adc
or
cmp
xor
sti
fs
leave
jle
incl
loop
adc
lea
mov
jmp
outsl
cmpsl
mov
push
dec
mov
mov
leave
outsl
or
mulb
inc
lret
std
aam
movsl
ret
cmc
shl
aad
outsl
loope
mov
add
mov
divl
pop
and
pop
cmp
cmpsb
adc
adc
sbb
fistl
mov
pop
add
pop
add
and
pusha
das
dec
and
push
jbe
add
add
push
cwtl
inc
pop
sub
xor
in
add
xlat
dec
aaa
lods
sub
sub
mov
sub
push
lret
and
cmpl
push
inc
or
adc
pop
xor
lds
xlat
in
xchg
btr
lock
dec
and
push
adc
divb
sbb
sbb
xor
jge
ljmp
mov
lods
jge
sub
adc
adc
dec
fisttpll
jo
out
mov
leave
in
das
adc
out
inc
mov
iret
and
fisubl
sbb
mov
das
and
or
loop
mov
lds
clc
mov
inc
add
xchg
out
sbb
and
mov
mov
call
or
xchg
mov
les
and
pop
aaa
or
gs
sti
push
mov
sbb
aam
lods
adc
push
ret
aam
inc
push
and
shll
jle
jae
mov
pushf
push
and
xchg
dec
scas
dec
jle
dec
push
push
nop
mov
push
add
pop
pop
sbb
scas
and
dec
outsl
xchg
imul
push
stos
or
into
sbb
mov
hlt
jb
shrb
or
mov
jecxz
mov
or
and
mov
xor
inc
push
sub
or
sbb
mov
cmpsl
cli
cmp
test
clc
jae
jo
fdivl
imul
les
inc
sbbb
in
mov
xor
mov
mov
daa
push
xchg
insl
adc
xchg
dec
cmpsb
or
adc
sbb
fdivrs
add
add
mov
out
inc
cmp
jecxz
ret
mov
push
pop
addb
xchg
xchg
xchg
lret
lock
push
loope
mov
mov
sahf
mov
adc
sbb
mov
jp
mov
cmp
mov
aas
rorb
push
push
test
xchg
xchg
and
add
sub
xchg
nop
js,pn
cmpsl
mov
mov
addb
inc
adc
fcmovu
das
pop
xchg
loopne
sbb
mov
popa
inc
xchg
clc
jp
lods
loopne
addb
pop
rcll
jle
imul
xchg
mov
add
mov
mov
xor
xor
adc
insb
popl
sub
scas
add
push
rorl
push
mov
and
or
jp
push
leave
js
mov
adc
pop
and
loop
loop
xor
aaa
sti
or
jne
sbb
in
gs
mov
sub
jnp
lock
sbb
rclb
outsb
mov
flds
push
and
lock
data16
insl
jo
fstpt
out
sub
in
fisubl
mov
dec
mov
ds
sbb
dec
xchg
push
loopne
and
add
outsb
xor
mov
mov
outsl
adc
sub
aam
mov
adc
insl
and
cmpsl
add
add
or
pop
xor
leavew
and
sti
icebp
mov
adcl
mov
cmp
mov
mov
xor
dec
stc
es
repnz
xchg
rcrb
int3
mov
rorl
enter
push
push
add
inc
lea
add
lock
push
pop
scas
and
add
mov
stos
xor
ljmp
sbb
je
inc
push
dec
push
push
insb
scas
inc
imul
cwtl
mov
inc
stos
adc
mov
push
insb
test
adc
jle
cmp
shl
std
int
or
jb
scas
jb
ret
and
aam
jb
push
or
or
fwait
add
mov
pop
das
int3
lcall
ret
adc
loopne
daa
xorb
int
inc
sub
mov
xchg
xchg
mov
int
les
and
aam
ljmp
adcb
fldenv
sar
sub
insb
push
ljmp
js
xor
lcall
adc
mov
push
add
out
jno
lods
mov
dec
inc
pushf
mov
cmp
notb
xor
pop
js
push
jg
leave
add
add
or
mov
scas
ja
pop
sub
ds
addr16
out
cmp
mov
or
lret
loopne
add
call
test
jecxz
mov
sub
ss
xchg
dec
mov
aad
call
aad
add
sbb
mov
push
mov
and
pop
adc
sub
push
and
or
dec
orb
and
inc
stos
jp
mov
gs
inc
adc
into
daa
cmc
mov
lahf
xchg
les
dec
cmpsb
inc
jno
mov
imul
in
sti
data16
fildll
adc
dec
and
and
xor
jmp
jmp
push
inc
xchg
xor
pop
sbb
sbb
sbb
jecxz
jmp
jb
loopne
cmp
adc
adc
jmp
ds
dec
lods
inc
or
aad
addr16
xchg
mov
and
ja
mov
cmp
push
cmpsb
add
rcll
cltd
loop
pop
push
add
inc
fs
and
cmp
outsb
jp
fstpt
lahf
mov
jne
shl
jle
js
adc
aas
movsb
add
inc
in
push
sub
mov
icebp
call
jns
shlb
adc
mov
mov
stos
add
out
fadds
push
test
push
mov
stos
in
adcl
data16
mov
xor
add
add
sbb
adc
cmp
xor
lods
mov
push
and
sub
mov
push
nop
jae
xchg
outsl
or
test
sbb
push
mov
daa
pop
rorb
movsb
andb
roll
sbb
add
mov
add
inc
pop
icebp
xchg
sub
mov
das
push
push
pop
aaa
lea
sbb
jmp
push
adc
iret
rolb
mov
popf
scas
into
xor
loope
jne
negb
sbb
int3
add
inc
mov
lods
fiadds
sub
enter
das
push
cmpsl
and
mov
out
inc
pop
test
aaa
push
lds
pop
fwait
das
fldl
ds
sub
mov
pop
xchg
loope
aas
sbb
adc
ljmp
push
jle
cmp
push
out
mov
pop
and
into
rolb
popa
inc
xor
mov
cs
sbbb
fisubl
xchg
cwtl
fsubp
pushl
testb
sbb
push
cmp
cmp
movsl
fistpl
jno
hlt
outsb
push
sub
mov
jne
jno
iret
fwait
aam
push
mov
ret
push
jo
xlat
cwtl
pop
das
outsb
inc
push
mull
xchg
adc
push
mov
int3
adc
add
mov
ds
lods
push
dec
sub
shlb
jecxz
and
scas
jae
or
mov
sbb
push
mov
mov
adc
data16
inc
gs
pusha
pusha
sbb
cmp
inc
xor
pop
dec
and
push
fs
or
das
loope
fidivrl
mov
sbb
mov
ficompl
imul
sub
xchg
pop
xor
and
xchg
add
mov
dec
sbb
andb
inc
mov
cmp
sub
out
push
xor
or
push
pop
in
int3
pop
push
das
stos
imul
test
xlat
iret
ret
or
js
js
add
pop
sub
daa
sbb
pop
dec
inc
sbb
xor
pop
iret
inc
imul
push
lods
sub
push
push
add
cmp
cmpsb
mov
dec
cmp
sbb
push
add
xlat
or
push
pusha
popf
pop
xor
push
scas
shl
mov
pop
shrb
mov
add
leave
imul
pop
jle
or
push
hlt
fisubrs
arpl
mulb
jns
push
pop
lret
out
scas
push
bound
mov
sbb
pop
sub
sub
and
scas
inc
shll
sub
testb
push
fcomi
and
adc
or
mov
pop
icebp
add
sub
sahf
scas
add
aad
xor
arpl
jns
fsts
lock
js
shrb
mov
or
dec
sub
dec
arpl
pop
fs
adc
mov
fisttpl
pop
jmp
movzbl
add
adc
add
lods
add
cmp
mov
adc
adc
adc
ja
call
lods
sub
pop
add
inc
das
or
pushf
mov
int3
add
mov
dec
popf
mov
add
adc
sub
test
push
adcb
pop
dec
push
imul
lods
sbb
hlt
lds
je
jle
scas
xor
jo
lea
popa
mov
divl
dec
outsb
and
add
out
cmp
cs
cltd
ss
leave
adc
int3
sbb
test
imul
neg
mov
mov
cmp
sub
pop
pop
les
dec
pop
add
ljmp
orb
stos
popa
sub
pop
xor
addl
out
testl
xor
mov
mov
popf
push
inc
and
ss
sbb
aaa
and
lea
lods
out
mov
fisttpl
mov
jne
or
jae
cmp
adc
popf
add
and
imul
ss
cld
pop
cmp
xor
dec
xor
or
inc
cs
pop
test
movsl
fildll
adc
inc
adc
adc
loop
jmp
shlb
negl
test
cmp
add
dec
cmpl
sub
fistps
sbb
popa
or
mov
jp
fldcw
jb
inc
jo
push
out
pusha
xchg
js
adc
mov
sbb
js
dec
sar
inc
outsb
inc
dec
fdivrs
lods
jae
cmpsl
lods
sti
push
xor
xchg
cmpsl
and
stos
or
fwait
sub
leave
mov
fs
mov
push
lock
and
ljmp
push
mov
popa
pop
push
xor
or
cs
and
push
ds
rclb
insl
mov
pop
negb
push
sbb
push
xlat
shr
aad
adc
push
int3
int
cmp
sti
push
and
shr
pop
dec
inc
jp
push
fmull
dec
push
repnz
ja
sub
pop
out
repz
repz
or
stos
cmp
push
mov
int
add
loopne
pop
xor
push
push
add
sahf
xlat
adc
xchg
lods
lea
addr16
pop
outsl
push
nop
cmp
and
pusha
mov
adc
inc
fdivl
int3
adc
lea
inc
movsl
add
loope
mov
and
pop
mull
mov
sahf
popf
push
in
push
mov
push
inc
xor
xchg
push
adc
loopne
adc
pop
icebp
ret
mov
imul
xor
test
sbb
ss
lret
jnp
sub
sbb
sbb
push
scas
rcr
adc
lcall
stos
adc
scas
gs
cs
or
lods
jae
add
jno
push
stos
gs
scas
push
pop
pop
imul
insl
rclb
jno
push
test
loopne
jmp
and
scas
sub
jbe
adc
scas
cmpb
xor
fsubl
pop
or
mov
sbb
or
scas
sbb
jno
add
pushf
xor
dec
dec
cmp
xorl
das
dec
pushf
cmp
add
insb
mov
addr16
and
lds
mov
das
pop
in
aaa
call
cwtl
mov
push
mov
lea
movsb
ja
or
rclb
loop
rol
push
ficoms
add
aam
fsubl
adc
es
lea
fs
aaa
push
in
pop
xlat
in
rcrl
push
ss
fucom
ficoms
jno
rcl
push
aaa
push
and
adc
sbb
insb
sbb
sbb
push
out
jae
stos
andb
and
sub
imul
xor
mov
cmp
lahf
or
and
inc
xchg
addr16
test
in
add
add
jae
pop
or
add
pusha
je
jae
dec
in
jp
mov
imul
outsb
stos
xor
push
or
add
push
jmp
dec
or
and
add
sbb
adc
xor
sbb
sbb
mov
mov
xor
das
add
xchg
sbb
pop
xchg
add
inc
push
jecxz
imul
xchg
inc
mov
inc
hlt
pusha
sub
je
or
js
fwait
cmp
and
dec
adc
cwtl
stos
add
pusha
test
scas
mov
mov
xchg
lods
adc
test
push
push
cwtl
mov
pop
std
mov
xchg
mov
insb
jo
and
push
push
iret
jbe
and
aas
mov
lret
les
adc
add
inc
sub
outsb
add
les
dec
jo
dec
add
mov
repz
add
movsl
fmull
adc
inc
aaa
adc
imul
jno
adc
mov
mov
cmp
or
pop
js
loope
out
lock
mov
subl
aas
cmpb
notb
mov
inc
jo
xchg
push
imul
adcb
test
or
insb
imul
xchg
or
int
mov
popa
adc
mov
and
inc
sarb
cwtl
mov
cmp
inc
das
das
inc
scas
popw
aam
into
imul
je
test
xor
pop
mov
pop
pop
and
and
inc
adc
lods
inc
insl
mov
divl
andb
pop
xchg
or
pop
xchg
pop
mov
and
bound
inc
aaa
popf
mulps
jle
mov
add
js
jge
fdivl
ja
and
xchg
and
push
jo
push
aad
add
sub
out
insl
fisttpll
add
push
push
adc
andb
push
lea
push
ja
and
mov
jmp
mov
sub
fimull
dec
ljmp
jp
fs
jl
arpl
inc
or
ret
je
push
rcr
imul
stos
sub
mov
sub
ljmp
icebp
inc
test
push
and
mov
fisttpl
xchg
sub
adc
jbe
jecxz
or
test
je
mov
daa
shll
push
mov
movsl
roll
pop
sar
hlt
add
cwtl
pop
xchg
jecxz
jle
call
arpl
iret
push
jl
aaa
sbb
adc
cmp
inc
mov
add
ss
cmpsb
dec
sub
iret
in
sbb
fildl
pop
xor
mov
pop
jge
popf
fisubrs
mov
xchg
xor
add
add
jno
xor
inc
jne
add
inc
ljmp
adc
out
lea
pushf
into
jbe
jns
pop
push
je
pop
xor
inc
aaa
data16
jnp
inc
stos
lods
xchg
das
pop
lods
iret
or
and
out
cmp
ret
xor
in
sbb
add
xchg
adc
jns
and
and
push
cwtl
pop
fs
sub
sbb
jo
mov
add
into
cmpsl
scas
lcall
xlat
sbb
sbbb
fisttpl
das
push
imulb
loop
popf
lahf
loope
mov
data16
jmp
dec
sbb
shlb
push
leave
inc
int
stos
loope
mov
insb
loope
add
test
out
add
sti
and
mov
andb
cmp
and
cmp
inc
in
xlat
testb
ds
movsw
imul
mov
mov
xchg
add
xor
imulb
xchg
sub
sbbl
jbe
mov
push
xchg
out
gs
push
add
sub
les
dec
adc
xor
mov
add
add
lock
jbe
jne
addl
push
push
test
inc
mov
cmp
repz
pop
inc
les
cmp
sub
push
into
xor
xchg
xchg
frstpm(287
sbb
in
push
addl
cmp
inc
lock
push
dec
pop
or
jbe
mulb
fs
mov
sub
cmp
cwtl
je
add
add
packsswb
cmp
xchg
dec
add
jp
mov
pop
cmp
xlat
adc
jg
mov
test
jbe
inc
or
stos
mov
add
inc
rclb
and
pusha
dec
test
cmc
adc
insb
aad
push
and
imul
test
fucomip
xorl
xlat
test
jo
sti
xor
lds
push
jno
sub
adc
in
inc
fimull
pop
mov
push
jmp
es
dec
shll
xor
jle
sub
lock
xlat
into
jmp
test
adc
movsl
stos
and
fsub
ret
icebp
or
test
inc
in
fdivp
mov
sbb
repz
aas
and
cld
call
jne
in
loopne
mov
fcoms
pop
pop
push
add
push
cmp
and
push
call
cltd
iret
push
pop
outsl
lods
xchg
stos
fcoml
jae
inc
jnp
inc
sbb
inc
fiadds
and
inc
or
xchg
loope
pop
adc
sbb
sbb
loopne
mov
pusha
test
dec
std
add
xchg
cmp
insl
add
ret
mov
inc
movsb
arpl
cld
mov
adc
or
and
mov
shr
pop
inc
mov
testl
das
dec
daa
stos
mov
out
push
cs
xor
add
mov
lahf
je
scas
xchg
mov
or
inc
push
mov
inc
mov
push
add
cwtl
push
lods
push
jbe
arpl
je
xchg
sahf
mov
sub
add
mov
mov
inc
fstpl
jge
fwait
shrb
fwait
cli
inc
arpl
sbb
pop
sub
lods
add
lret
cmpsl
and
mov
loopne
sbb
insb
loop
js
fcmovne
fadds
pushf
aam
inc
inc
dec
mov
inc
je
js
inc
cmp
adc
arpl
xchg
neg
outsl
push
loope
inc
popf
js
fwait
fs
test
mov
in
fsubs
or
pop
cld
stos
and
cwtl
outsl
lds
sbb
ja
cmp
sub
cmp
mov
pop
or
stos
pop
jle
push
cmp
daa
push
movsl
scas
and
fadd
movsl
mov
mov
dec
mov
inc
xor
add
xchg
lods
loop
dec
mov
add
sub
xchg
mov
test
orb
rcr
dec
sub
lods
adc
dec
push
xor
mov
loopne
or
sub
dec
addb
leave
rorb
sbb
movsb
ret
iret
cmp
iret
or
xchg
and
clc
sub
punpckldq
cmc
inc
test
jg
shll
inc
aaa
jecxz
aas
and
je
sbb
sbb
pusha
shll
and
mov
mov
xchg
dec
push
push
adc
ficoms
iret
xchg
mov
movsl
pusha
adc
sbb
jle
sub
add
pop
add
xlat
sarl
addb
negl
inc
xchg
pop
clc
or
lds
inc
filds
or
or
fcompl
mov
add
adc
data16
test
mov
add
pop
lods
or
and
cmp
sbbb
sbb
adc
gs
sbb
adc
cmpsl
push
mov
sub
rcrb
pop
sub
ret
mov
pop
add
cmc
addr16
mov
data16
sub
adc
adc
sbb
push
inc
enter
add
ss
jp
out
out
movsb
daa
pushf
imul
icebp
dec
or
adc
jge
ljmp
js
aad
jmp
in
pop
adc
cli
int
mov
push
inc
dec
push
int3
and
sub
addr16
and
scas
ffree
addr16
inc
bound
push
dec
jae,pt
shll
pop
insb
adc
pop
pop
add
andl
or
imull
push
inc
sbb
jno
loope
add
and
xor
sbb
push
divl
inc
in
push
xor
jns
push
jb
bound
outsl
add
ret
xchg
pop
mov
pop
icebp
xchg
mov
xor
mov
lret
je
adc
push
es
or
sti
inc
into
int3
arpl
jp
xor
cli
insb
push
shll
xor
dec
shr
cld
jno
cmpb
ret
fsubs
subb
cwtl
fisttpll
mov
iret
sbb
dec
sbb
pop
loope
das
pop
addr16
fadds
sti
sbb
sbb
or
mov
pop
fstpl
push
jl
mov
das
pop
int3
dec
xor
pop
mov
push
add
and
sbb
mov
push
push
push
sub
jbe
or
cld
adc
and
mov
adc
or
mov
jb
popf
sub
and
outsl
nop
add
es
aas
adc
sub
mov
leave
add
popa
cmp
xor
clc
sub
or
inc
jbe
push
sub
and
inc
sub
mov
add
pop
add
or
add
ds
jg
xlat
ss
shrl
or
jae
inc
xor
adc
es
pop
sub
push
cs
sbb
adc
incl
inc
mov
in
popf
xor
pop
pop
aad
add
inc
sbb
cli
xchg
mov
sbb
iret
ljmp
push
mov
test
jl
add
cmp
add
push
fstl
es
jnp
push
xor
shrl
push
inc
fisttps
aam
adc
mov
push
ficoml
push
sub
dec
scas
cmp
push
ljmp
mov
stos
xor
outsb
imul
jl
mov
jle
add
mov
arpl
fiadds
or
dec
ret
push
aam
pop
jne
sbb
nop
imul
sbb
push
mov
add
adc
adc
int3
fsubs
pop
jp
dec
xchg
jo
dec
mov
push
mov
or
sbbl
pushf
sub
push
sub
adc
cmp
mov
hlt
mov
dec
sub
cmp
ja
shll
pop
mov
lret
gs
xchg
out
add
mov
std
mov
cmp
fadds
shll
push
and
nop
mov
jle
adc
subl
mov
add
add
sub
cli
aaa
and
pop
pop
sub
jne
mov
and
inc
outsb
cmp
inc
xchg
push
mov
add
inc
test
and
iret
and
fstl
inc
mov
aad
negl
push
incb
and
das
fisubrs
arpl
rcll
dec
jno
das
pushf
jl
subl
inc
faddl
sub
push
imul
jp
mov
test
xor
adc
shrb
aad
or
dec
sub
add
add
cmp
adc
pop
scas
mov
es
adc
call
or
dec
lcall
lods
jge
jge
xor
insb
pop
aaa
es
xchg
push
sub
push
dec
pop
sbb
push
into
int3
cmp
test
lds
inc
ret
xor
nop
push
xchg
pop
cmp
ret
stc
adc
imul
sub
das
aam
pop
cmp
mov
dec
xlat
lds
les
aas
xchg
sub
xlat
sub
sub
push
xor
adc
jno
enter
sti
mov
mov
push
dec
jge
jo
push
iret
dec
fsubrs
daa
test
or
push
mov
test
imul
xchg
call
enter
dec
adc
and
mov
push
popf
es
lds
jnp
insl
jp
clc
or
or
cmp
loope
add
out
popa
sarb
and
in
movsb
cwtl
push
in
stos
sub
test
mov
or
mov
addl
movups
stos
jo
dec
insb
mov
enter
xor
inc
push
fnsave
mulb
lds
adc
and
add
sbb
lea
sub
push
imul
cmp
cltd
sbb
mov
aas
and
outsl
or
cltd
lcall
mov
sti
cmpb
adc
pop
das
test
cmp
lret
pop
andb
adc
popf
mov
mov
push
mov
sbb
mov
add
bound
xor
or
xchg
lcall
jmp
pop
mov
xchg
adc
aaa
lret
dec
mov
sbb
sbb
adc
repnz
sub
add
jmp
pop
lock
insb
xorb
sbb
adc
inc
add
lcall
mov
jle
add
rcl
nop
int
jge
add
mov
ret
mov
shrb
mov
cmp
push
cmp
insb
or
xchg
test
add
dec
mov
shrb
or
mov
inc
and
push
add
and
add
lahf
sbb
aaa
inc
mov
jo
and
sbb
stos
jl
pop
cmp
xchg
lds
cmp
and
jbe
cmp
stos
or
js
int
and
sbb
jnp
cmpsl
clc
mov
popl
push
test
fldenv
in
repnz
push
push
pop
das
cmp
push
icebp
mov
in
scas
jbe
jge
inc
jle
push
ja
ljmp
xchg
fildll
sub
mov
xlat
repz
mov
push
adc
bound
into
add
inc
out
cltd
sbb
add
cmpb
jbe
aas
push
push
adc
fucomip
mov
js
jbe
sti
mov
inc
cwtl
aam
add
js
xor
push
loopne
leave
shlb
shll
or
sbb
sahf
sub
mov
cmpsb
xchg
sbb
add
add
iret
mov
mov
out
cs
cli
ss
das
ds
fdivl
xchg
fnstcw
pop
sbb
sbb
addr16
sbb
or
cmp
pop
jne
mov
push
inc
xchg
xor
pop
daa
out
push
and
pop
ret
mov
test
push
push
adc
jo
popf
push
ret
and
dec
push
addr16
add
aad
mov
cmp
out
pop
or
sbb
or
mov
sbb
and
scas
xchg
js
out
sti
push
lret
push
lret
sbb
push
mov
subb
pop
ss
outsl
push
cmp
inc
mov
pop
mov
sub
icebp
jns
aam
jmp
lret
push
cmpsl
mov
or
call
adc
jnp
pushf
loope
leave
add
mov
iret
lret
dec
inc
xchg
mov
pop
cltd
push
test
mov
dec
sbb
adc
aas
or
cmp
mov
scas
sbb
test
mov
add
jecxz
mov
out
and
daa
pop
das
outsl
mov
lcall
outsl
push
test
jl
inc
fisubrs
and
xchg
ljmp
cmpsl
inc
mov
add
push
outsl
jnp
or
cmp
dec
int
movsb
pop
pusha
mov
shll
sub
xor
popa
std
icebp
cmp
ljmp
add
sub
inc
mov
pop
ds
jmp
inc
stos
xchg
test
mov
dec
insb
addl
nop
int3
and
sub
js
and
shlb
push
dec
inc
mov
sbb
loop
push
pop
lcall
lcall
arpl
out
push
mov
lods
addb
je
mov
push
sub
sbb
cs
xor
stos
push
adc
push
push
sub
dec
and
xor
and
inc
sub
pusha
add
and
xchg
fwait
hlt
bound
xor
loopne
lea
push
sbbl
popa
adc
cmpl
cs
cmp
cmp
mov
adc
imul
cmpsb
mov
cwtl
push
jl
and
add
mov
sub
test
mov
mov
jl
fistl
mov
cmp
rcll
mov
adc
pusha
push
cmp
inc
fadds
inc
mov
push
lods
cmc
cmpsl
es
insl
cmp
sub
cwtl
xor
lock
inc
mov
adc
push
or
or
lock
fwait
sbb
jle
adc
inc
adc
add
xchg
dec
cwtl
stos
push
cs
cmpsl
gs
jne
scas
lcall
mov
inc
xor
mov
lahf
lret
sub
insb
outsb
jo
sti
xchg
adc
btc
bswap
push
xchg
inc
orl
shr
mov
rcll
insl
dec
aad
ficoms
push
push
xor
push
inc
dec
test
push
pusha
in
daa
ret
cmp
push
mov
out
pushf
pop
pop
add
mov
add
jo
xor
lods
adc
bound
push
xchg
inc
inc
clc
add
and
in
cld
jl
je
xor
nop
cmp
inc
popf
sbb
or
pop
inc
mov
orb
ret
and
hlt
lret
push
ja
cmp
xchg
rorl
loop
out
rolb
pop
push
push
das
cmp
scas
mov
dec
dec
dec
fildl
test
inc
cmpb
je
xchg
inc
fstpt
sub
movsb
jbe
rolb
scas
and
pushf
and
bound
inc
cmp
movsb
lea
sbb
pusha
adc
sub
testb
and
subb
sbb
cli
adc
bound
in
inc
andb
mov
inc
js
popf
jbe
dec
sub
xor
fwait
mov
movsb
inc
push
sub
xor
xchg
fdivs
sbb
int3
and
push
sub
mov
sbb
and
inc
dec
sbb
xor
sub
out
pop
push
pusha
mov
sbb
add
in
xchg
shll
cld
fcoms
inc
roll
or
add
insl
adc
push
ljmp
popf
adc
mov
and
sub
cmp
or
ret
push
mov
pop
repnz
pop
das
mov
cmp
cli
xor
repnz
push
je
loop
loopne
shlb
ret
lods
add
jno
mov
adc
xchg
fstl
sarb
dec
adc
add
rcrl
aam
mov
sbb
lret
xchg
int
icebp
inc
rcll
pop
inc
push
adc
push
jle
jns
push
add
mov
push
pop
popa
fs
xor
xor
loopne
aaa
mov
outsl
sbb
test
sbb
cwtl
jns
mov
pop
jae
divb
mov
adc
jne
xchg
push
adc
mov
xor
add
add
xchg
icebp
lcall
ret
pop
sbb
sub
inc
pop
fildl
fcoms
pushf
and
and
adc
pushf
add
lahf
sub
gs
add
or
adc
mov
shll
inc
fcoml
sbb
sbb
popa
push
xchg
loope
out
mov
rcl
jecxz
sbb
divl
or
mov
out
imul
or
idivb
in
mov
nop
mov
fistpll
sti
fcmovnu
mov
loope
adc
aaa
pop
adc
push
pop
inc
mov
cmp
mov
pop
ja
inc
mov
fisttpll
ret
stos
cmpsl
xor
add
adc
mov
xchg
stc
push
cs
popf
dec
popa
sti
mov
jno
lds
dec
mov
add
push
fxch
sub
add
xlat
add
xor
pop
push
pop
iret
or
ss
adc
jecxz
add
adc
inc
inc
xchg
dec
subb
add
out
xor
sbb
and
imul
shl
push
mov
subb
dec
adc
mov
inc
mov
pusha
push
jmp
push
dec
cmp
aaa
adc
or
ss
aas
cmp
sbb
pop
icebp
mov
and
push
inc
pop
mov
ja
mov
scas
xchg
and
bound
pop
loop
daa
into
adc
fiaddl
test
enter
cmpb
inc
pop
sbb
inc
aaa
push
mov
rcrl
js
mov
js
lret
xchg
int
aad
inc
and
sub
inc
pop
test
adc
ss
sbb
dec
lret
addl
and
lds
loopne
inc
jge
and
xor
out
iret
push
add
dec
mov
pop
arpl
cmp
cmpsb
and
add
sahf
andb
mov
push
test
scas
pop
sti
mulb
xor
imul
test
subl
xor
cmpsb
lcall
or
cmp
in
insb
and
arpl
mov
add
push
pop
fldenv
pop
or
jl
mov
mov
add
xor
mov
fcoml
jo
les
mov
add
fldz
cmpsb
push
aas
sbb
arpl
int
mov
mov
dec
add
mov
nop
aam
or
mov
mov
and
mull
mov
mov
lods
fbstp
shr
testb
pop
out
xor
fisubrl
and
adc
sub
cmpsl
cmp
insb
sahf
aam
mov
push
lods
test
sub
inc
les
insl
add
cmp
mov
mov
mov
or
daa
mov
outsl
bound
call
fsts
pop
insb
in
lea
or
sub
or
mov
push
pop
es
in
sub
scas
and
jo
cmc
push
loope
push
cmp
movsl
or
xchg
add
rcrl
fucomp
push
push
xor
iret
aas
sub
or
jecxz
cmp
pop
adc
adc
xchg
add
popa
xor
mov
out
fstpl
test
dec
pop
mov
fists
push
imul
pop
or
inc
inc
and
or
add
mov
add
inc
mulb
daa
jb
out
mov
addb
in
rcrl
or
add
inc
jae,pt
add
dec
push
jmp
aaa
repz
cmpb
loope
les
dec
push
xchg
test
jnp
loope
in
jg
aaa
jno
mov
mov
scas
idivb
jl
pop
add
adc
mov
sbb
push
jp
dec
adc
test
shlb
and
sbb
mov
aas
jne
je
iret
cltd
fmuls
loope
scas
lds
ljmp
push
pop
movlps
push
lods
mov
dec
cltd
test
mov
sub
sub
cli
test
popf
movl
fcomip
jle
and
inc
xchg
stos
inc
adc
jno
fwait
push
adc
mov
xchg
xchg
mov
rclb
cmc
call
sbb
inc
mov
xor
inc
les
or
in
cs
in
lods
adc
fistl
or
orl
int
das
ds
fwait
addb
pop
fildll
in
in
movsb
xchg
das
fwait
loopne
call
lahf
and
nop
lds
dec
inc
int3
xor
sub
leave
and
push
mov
or
sbb
and
lods
imul
mov
stos
push
inc
and
in
pop
cmc
loopne
cmp
out
add
ss
lock
in
sub
pusha
shl
or
push
call
xorb
lods
mov
out
mov
mov
in
outsb
outsl
popl
and
lds
add
sub
or
cld
push
push
push
outsl
sub
push
fstpt
rorb
pop
add
push
rcrb
xor
sbb
mov
add
rolb
push
jl
jb
mov
xor
filds
push
mov
push
out
lock
xor
xchg
mov
pusha
or
push
outsb
sbb
pusha
decl
and
push
jno
stos
sub
test
xor
movsl
lcall
mov
xor
mov
sbb
popa
pop
pop
mov
dec
or
popa
dec
out
dec
or
push
mov
and
add
fmuls
dec
and
mov
xor
stos
pop
mov
jo
or
adc
sbb
mov
fidivrl
imul
push
or
jo
jae
mov
dec
imul
inc
icebp
and
sub
mov
adc
iret
mov
mov
mov
pop
fdivrp
scas
mov
ss
xor
fbld
into
pusha
add
jge
jo
mov
mov
xor
and
shlb
roll
out
xchg
mov
ss
or
jle
pop
in
jo
nop
or
es
jl
ret
out
out
imulb
inc
push
lds
cmp
inc
jp
inc
icebp
jno
push
mov
fmul
sbb
ret
cmp
add
cltd
lock
mov
les
sbb
ja
inc
outsb
push
xchg
bound
shrb
or
in
mov
ss
js
ret
fsubr
and
add
ficoms
pop
and
push
push
cmp
or
mov
pop
push
lcall
pcmpeqd
cmp
mov
cmp
mov
int3
test
and
cmp
push
gs
into
test
mov
and
daa
mov
shl
into
xor
jb
push
hlt
mov
rcll
in
aam
add
lock
test
lret
test
sub
lcall
mov
push
xor
xor
sub
pop
pop
pop
add
mov
rcrb
outsb
sarl
in
fs
cmpsl
and
ret
adc
or
leave
outsl
xlat
mov
cmp
and
jge
pop
rorb
fisubs
pop
push
out
and
dec
lret
jp
out
push
sub
cmp
push
aad
dec
add
in
push
iret
and
dec
add
push
xchg
insl
std
inc
pop
ss
mov
cwtl
ja
fidivrl
xchg
addr16
lods
adc
adc
or
jb
mov
pop
inc
lock
jp
push
vdivps
pop
mov
fwait
bound
pop
and
iret
xlat
scas
push
add
add
ret
inc
mov
mull
or
daa
xor
push
sub
pusha
fnstenv
test
inc
into
addr16
mov
inc
add
ss
jnp
fwait
dec
mov
and
cmp
cmp
adc
sbb
mov
xchg
lea
xchg
icebp
sub
pop
xor
inc
fbld
fldenv
out
clc
es
icebp
lods
data16
and
cmp
loop
mov
popa
stos
jge
je
add
mov
cmpsb
mov
sub
xchg
icebp
dec
sbb
imulb
mov
xlat
lods
and
or
xchg
cwtl
sub
in
out
or
push
pusha
adc
adc
adc
fs
in
pop
sarb
into
shlb
sbb
dec
xor
jnp
sub
pusha
xchg
and
les
push
inc
pushf
fwait
push
sub
icebp
or
adc
add
xlat
push
fildl
sub
ret
lcall
test
push
push
xchg
push
or
ja
inc
mov
add
add
xor
es
cmpsl
add
icebp
jg
std
dec
inc
xor
jo
dec
test
lock
xor
mov
fbstp
fcmovnb
fbstp
lcall
mov
scas
adc
push
mov
mov
jae
and
in
or
arpl
pushf
sub
xor
sbb
pushfw
repz
arpl
jo
bound
xchg
inc
and
je
jp
fcomp
xchg
stc
iret
xchg
mov
aad
jns
cmpsb
leave
adc
hlt
add
sbb
cmp
adc
xor
iret
inc
inc
addb
mov
cmp
into
les
shl
mov
nop
stos
push
jo
daa
pushf
test
pop
int
lcall
xor
xchg
mov
cmp
inc
jnp
mov
les
mov
and
ret
inc
add
data16
lock
push
push
mov
sub
arpl
jge
pop
addl
in
mov
ja
subl
mov
lods
imul
shl
out
imul
ret
jp
shll
dec
dec
sbb
jg
cmp
mov
sbb
xor
xor
xor
sbb
xor
ja
adc
add
sub
inc
pop
das
inc
or
adc
xchg
addl
or
push
in
push
cmovno
xchg
test
and
mov
les
in
and
xchg
xchg
pop
mov
adc
cltd
clc
cwtl
jp
or
add
sarb
aaa
and
or
xchg
mov
and
xlat
out
fucom
in
test
lret
push
inc
test
inc
aad
ret
nop
xor
popa
imul
cs
or
push
push
aaa
popa
out
pushf
xor
arpl
or
xchg
pop
lea
int
adcl
adc
mull
loope
sub
xchg
mov
xchg
adc
dec
std
jl
mov
add
stc
insb
dec
xor
sub
fst
dec
or
push
add
std
mov
inc
mov
in
xchg
in
iret
notl
dec
dec
or
lods
inc
cmp
adc
mov
filds
add
fists
mov
adc
xchg
sbb
cmpl
stc
sarl
xor
clc
ficoms
cwtl
cltd
xor
jbe
sbb
in
rol
inc
mov
sbb
xor
and
or
in
dec
sub
mov
fmuls
add
mov
cwtl
popw
loope
mov
lea
mov
inc
mov
adc
loopne
mov
cmp
xchg
mov
adc
mov
and
loopne
sub
adc
push
push
lds
mov
stc
push
rep
mov
aaa
lds
in
cmp
mov
sti
notl
imul
mov
and
inc
mov
adc
adcb
cs
push
fstps
adc
aad
add
outsb
notb
dec
repz
xor
xor
xor
cmpsl
sbb
fmull
pop
shll
or
aaa
and
icebp
in
push
adc
push
ret
sbb
test
insb
ret
lahf
rcrl
aaa
inc
icebp
loope
lods
sub
shrl
add
scas
mov
in
adc
pop
cmp
lea
lock
test
cmp
pop
adc
in
lcall
inc
pushl
or
mov
loop
lcall
push
lds
dec
filds
mov
jecxz
cmp
movsl
out
adc
push
mov
es
xor
sub
roll
and
shl
rclb
cmp
adc
in
and
ja
movsb
jge
fmul
nop
xor
adc
sbb
test
aad
mov
mov
insl
imull
sub
dec
sub
cmc
movsb
insl
add
nop
jmp
or
cmpsl
mov
pop
pop
push
cld
test
add
push
add
js
mov
pushf
loope
sub
push
xor
inc
or
sarb
xchg
fwait
inc
sub
lods
inc
ret
out
jl
adc
sbb
into
mov
and
in
jno
insl
lds
ss
jae
ja
pop
push
add
push
inc
icebp
xor
in
adc
or
mov
movsb
jmp
jl
jl
inc
inc
mov
mov
loopne
cvtdq2ps
push
out
out
dec
dec
movsb
sub
fcoms
out
jge
out
shll
sti
xor
sub
mov
inc
push
or
inc
push
pop
inc
enter
adc
mov
xorb
shll
into
ss
sub
cmpsl
scas
add
shl
xchg
sub
xchg
das
testl
idivb
mov
xchg
inc
xchg
sub
ds
sub
out
rcrb
lods
xor
push
fs
push
mov
dec
adc
andl
mov
adc
pop
add
add
cmpsl
sbb
call
pop
inc
cvtdq2ps
or
jne
and
or
or
int
cmp
push
adcl
sub
add
xor
call
insb
insb
pop
inc
insl
test
notb
test
negb
xor
add
xchg
imul
add
hlt
push
imul
ja
adc
repnz
pop
inc
loopne
and
push
das
imul
in
adc
inc
roll
pop
iret
lret
push
in
jecxz
adc
sub
movsl
inc
je
sub
add
call
lock
int3
jle
inc
xor
mov
sub
and
lret
ss
stos
out
clc
adc
sbb
test
jg
out
and
cwtl
push
push
clc
das
sbb
cmp
jge
xlat
roll
adc
jl
pop
aas
or
pushf
cmc
lock
movsl
out
bswap
sbb
js
fldcw
and
sbb
sub
and
insl
mov
ret
lcall
dec
xor
inc
test
mov
mov
xchg
mov
add
das
dec
jne
test
xor
inc
lea
mov
test
sub
sbb
insl
scas
inc
fwait
in
fidivl
inc
aaa
push
cmp
mov
dec
sbb
dec
out
adc
inc
scas
xor
push
fsubl
or
mov
jecxz
xor
js
out
push
test
sub
lea
and
es
and
fsubl
xchg
mov
fildl
rcrb
mov
or
add
dec
adc
sbb
jecxz
inc
daa
test
pop
sti
dec
je
movsb
in
fcomps
mov
mov
imul
xor
ljmp
popa
fmuls
xchg
sub
xor
xchg
dec
popf
mov
and
add
xchg
mov
adc
add
out
pop
and
aaa
and
subb
xchg
or
sarl
jb
push
mov
xchg
sahf
filds
lds
popa
jno
dec
mov
loopne
shll
push
adc
cmpb
adc
or
mov
add
mov
pop
add
inc
push
adc
stc
and
scas
mov
cwtl
inc
ja
inc
xchg
mov
push
lock
sbb
or
dec
sub
aad
das
je
sbb
aam
or
or
in
xchg
push
hlt
call
jb
jnp
lods
inc
lods
mov
sbb
lcall
imul
leave
ss
push
push
sti
or
push
and
in
inc
pop
mov
and
adc
inc
mov
test
pop
lock
mov
movsb
push
add
push
and
sbb
add
xchg
add
push
mov
adc
xor
push
push
xlat
inc
icebp
sbb
push
aad
shll
mov
dec
xor
aas
xchg
pop
adc
lock
adc
mov
xlat
setne
adc
out
fisubl
add
lods
jp
mov
push
test
xchg
sbb
or
jnp
setno
int3
scas
call
fsts
pop
inc
addr16
push
sbb
mov
or
jp
jle
clc
arpl
add
adc
nop
push
scas
mov
loopne
addb
call
push
add
punpcklwd
mov
xchg
add
cmp
aaa
xlat
cmp
aad
lods
aas
add
add
ljmp
add
jmp
mov
sub
mov
loop
imul
clc
push
pop
push
scas
jb
fucom
pusha
push
fmull
jbe
and
cli
mov
stos
xchg
add
inc
mov
jmp
pop
adc
mov
or
or
imul
sub
pop
faddl
mov
cmp
adc
stc
mov
cmp
sar
iret
addr16
fmuls
addl
test
int3
add
xorb
inc
xchg
stos
arpl
sub
push
sbb
pop
mov
xchg
cmp
cltd
dec
aad
daa
sub
xlat
and
push
mov
mov
sub
pop
cmp
mov
push
add
mov
imul
mov
lahf
mov
sbb
adc
cwtl
fstpl
hlt
add
int
xor
aas
inc
and
insl
fprem1
roll
das
push
push
jo
ljmp
push
mov
xor
cwtl
xor
imul
sbb
add
mov
test
mov
push
sbb
sub
push
pop
mov
lea
jo
popf
leave
add
lcall
pop
mov
ss
or
push
flds
xor
fmuls
faddl
push
mov
xor
dec
stos
push
imul
sbb
pop
mov
addr16
cmovne
ret
imul
push
sub
xor
mov
cwtl
das
adc
or
inc
push
and
lret
mov
xchg
hlt
sub
movsb
mov
mov
xor
sbb
xlat
push
xchg
test
sbb
pop
test
aam
sbb
mov
aaa
mov
mov
iret
mov
mov
adc
shr
add
popf
mov
data16
mov
sub
push
inc
aaa
mov
push
shrl
cmpsb
or
sub
adc
pop
jnp
or
xor
jb
dec
aam
rclb
mov
pop
cwtl
adc
dec
cli
sbb
fstl
inc
add
inc
push
xchg
insl
fwait
cmp
mov
jns
jne
inc
cld
loopne
ljmp
stos
pop
out
dec
or
imul
or
mov
push
jb
mov
jle
push
mov
add
xor
cli
and
dec
push
rolb
mov
mov
fsubrs
mov
jbe
pop
or
es
pop
cvtps2pi
subb
push
push
xchg
or
das
fisubs
dec
outsb
push
insl
negl
xchg
and
xchg
out
xor
fdivrl
mov
hlt
arpl
lret
popa
adc
mov
imul
pop
xor
shrb
notl
add
mov
sbbl
cmp
push
imul
aam
test
xchg
cmpsl
lahf
sbbb
cmp
xlat
sub
orb
data16
imul
mov
jecxz
sub
leave
out
packsswb
push
bound
sbb
mov
rcrl
inc
pop
jmp
stos
sub
lock
fdivl
sarb
mov
enter
push
mov
sarl
jns
shlb
pop
mov
pop
cmp
daa
data16
imull
xchg
rcrl
lods
cwtl
mov
add
sbb
push
jbe
dec
in
mov
cltd
ficompl
xchg
lods
adc
add
and
pushf
push
stos
addb
push
loopne
and
jno
push
aam
ds
add
jns
fcomps
add
jnp
inc
shll
lds
daa
iret
popf
sub
pop
or
push
int3
sbb
sbb
xlat
ja
fsubp
sub
adc
hlt
push
mov
addr16
andl
popf
jecxz
adc
jp
test
iret
add
cmpsb
push
xor
sbb
movsl
fistpl
les
mov
loope
sbb
jmp
js
mov
inc
loope
into
adc
sbbl
loopne
mov
pushf
push
in
sbb
fmul
mov
divb
dec
shrl
les
bound
jo
sub
mov
sti
jnp
cmp
add
xor
and
insl
or
xor
adc
cwtl
sbb
lods
xchg
or
and
pop
iret
adc
or
or
or
mov
adc
aam
or
lcall
cwtl
adc
je
adc
adc
xor
mov
lods
and
and
inc
dec
adc
fcoml
and
inc
mov
pop
mov
pop
add
lods
sub
xchg
mov
mov
jno
js
jae
or
imul
mov
test
pop
ret
push
scas
ret
out
sub
inc
ret
inc
mov
add
dec
mov
push
fidivl
push
jne
icebp
xchg
ss
push
xchg
mov
shrl
inc
subl
sbb
daa
push
xor
sbb
rdtsc
mov
xor
mov
in
jg
int3
add
lds
and
pushf
pop
push
add
lea
addb
push
cwtl
adc
out
ja
mov
jp
pop
jae
add
enter
clc
addb
push
ret
orl
jg
sbbl
and
loop
movsb
shl
cmp
sbb
and
mov
mov
lods
es
push
adc
ds
or
jo
mov
mov
shr
add
inc
jne
mov
or
fs
lock
push
fwait
or
and
mov
dec
stos
cmpsl
repz
mov
sahf
mov
outsb
pusha
add
and
pusha
sbb
lcall
fisubs
jle
push
rcrl
jbe
insb
test
cwtl
mov
icebp
jb
in
js
sbb
sbb
inc
push
out
jl
pop
inc
adc
jmp
adc
and
es
daa
scas
push
lock
and
cli
in
les
imul
test
cmc
adc
mov
dec
mov
mov
sub
xor
adc
mov
xor
lcall
jno
inc
xor
imul
in
mov
fxch
outsb
mov
lds
add
push
jo
and
aaa
inc
adc
fsubp
sbb
int
test
dec
xchg
mov
dec
jge
movsl
adc
mov
mov
push
adc
pop
push
push
adc
pop
xor
add
add
or
push
shr
adc
cmp
add
dec
ss
mov
pop
ss
lret
mov
je
jb
push
jno
sbb
add
lret
out
js
sbb
adc
insb
adcb
aaa
mov
das
jle
mov
push
ficomps
fwait
rorb
cmpsl
mov
mov
ficomps
pusha
add
and
iret
pushf
testb
shr
jbe
or
and
pop
add
sub
sub
cmpsl
mov
add
or
mov
mov
xor
loop
mov
pusha
mov
adc
mov
daa
stos
and
lret
add
sub
pop
lock
push
gs
dec
push
mov
arpl
sub
fisubl
xor
dec
ret
insb
lret
mov
and
sbb
shl
mov
inc
inc
cwtl
jo
addl
nop
inc
cmpsl
fisubrs
mov
ja
pop
inc
cld
dec
fwait
jne
xor
pushf
lea
call
pop
arpl
or
sbb
add
xchg
test
int
sbb
cli
pusha
movsb
and
xorl
es
mov
aad
test
test
jle
fcoms
divb
dec
add
add
stos
add
inc
js
sbb
popa
xor
inc
aam
sub
mov
ja
inc
shrl
lea
mov
or
sbb
sbb
mov
or
xchg
and
push
add
pop
div
sub
add
push
adc
push
fbstp
sbb
sub
mov
adc
add
or
test
je
push
inc
mov
data16
testb
test
push
cmpsb
in
fsubrs
push
stos
je
ds
xchg
outsl
or
test
or
xchg
cmovno
pop
lret
ret
insb
cmp
add
pop
sub
xor
push
xchg
or
sub
stos
jo
mov
sub
aaa
and
and
mov
loopne
push
negb
iret
adc
inc
jne
xorb
add
in
stos
sub
subb
cmpsl
lods
sub
test
push
je
in
out
test
mov
add
xor
add
push
sbb
mov
pop
sbb
push
adc
addr16
pop
add
sub
xor
int
sbb
pop
popa
push
adcl
push
scas
mov
lret
inc
inc
push
cmp
mov
xchg
add
cmp
sbb
jge
add
jle
call
sbb
inc
inc
dec
sub
incb
mov
scas
js
jmp
dec
sub
aam
mov
dec
cltd
stos
lcall
sbb
movsl
or
push
les
idiv
loop
adc
push
push
mov
daa
dec
fwait
cwtl
push
int3
lods
xor
cmp
sub
pushf
aaa
jl
push
xor
jbe
scas
cmp
adc
mov
push
or
adc
sub
mov
daa
imul
cmpsl
fisubrl
aam
scas
ficompl
fisubrl
pushf
xor
scas
imul
mov
or
nop
mov
push
push
ljmp
rcrl
addl
mov
fmull
add
jbe
xor
and
xchg
push
ror
mov
inc
push
shlb
xchg
xor
mov
xor
addl
add
inc
or
cli
dec
call
cmp
jmp
jae
xor
ljmp
xlat
adcb
inc
fldenv
loop
cltd
adc
mov
data16
lret
or
push
cmp
push
jo
fcomi
pop
mov
push
je
loope
test
cmp
jnp
fmuls
inc
add
jnp
cmpsb
sbb
add
push
shrl
xor
and
mov
mov
xchg
mov
sbb
or
daa
adc
jnp
cwtl
add
popa
sbb
mov
inc
fs
scas
or
loopne
cwtl
xor
or
mov
adc
cmp
push
pop
aad
adc
lods
mov
cmp
icebp
inc
je
enter
or
sti
jmp
mov
sbb
mov
add
cwtl
xchg
bound
sarb
out
movb
js
pusha
push
jo
adc
pop
add
arpl
inc
inc
and
cmpl
adc
stos
pop
pop
add
add
jo
pop
jecxz
jmp
imul
popa
outsb
xchg
xor
jmp
scas
sub
outsb
iret
or
loopne
rcrb
sbb
push
add
pusha
jbe
pop
and
lock
ja
pop
dec
das
int3
lock
popf
das
push
mov
js
dec
clc
add
shlb
push
or
and
mov
fildl
mov
cmpsl
jmp
cmp
sti
sbb
fcmovbe
es
lcall
xchg
or
inc
scas
xchg
inc
sub
add
pop
adc
inc
das
push
test
into
xor
cmp
mov
fcmovbe
xchg
les
cltd
fidivl
mov
loope
mov
push
icebp
fisubl
aaa
cmpsl
pop
cmp
push
xchg
xor
pop
and
outsl
mov
push
inc
and
xchg
sbb
bound
xchg
in
jmp
sbb
loop
out
xor
mov
js
pushf
add
add
sub
cmp
test
gs
and
xchg
movsb
test
xor
adc
stos
out
xchg
aam
pop
std
and
jo
mov
adc
mov
cmpsb
psubsb
subb
jo
and
inc
lds
xchg
inc
rorl
inc
ret
and
sub
push
jge
mov
cmp
xchg
inc
mov
adc
int3
repnz
rclb
add
mov
or
jp
mov
push
gs
jge
and
arpl
shll
push
repz
pop
sti
into
xchg
cmc
call
les
mov
lds
cmp
add
sbb
je
inc
or
add
jp
out
inc
inc
mov
jo
add
add
out
hlt
push
fcomp
dec
inc
sbb
stos
bound
jns
lock
out
ljmp
pop
jp
add
mov
pusha
jno
test
shlb
mov
ds
mov
xchg
enter
or
outsb
sub
dec
adc
adc
cwtl
imul
and
cmpsb
inc
mov
fiaddl
adc
pop
push
nop
imul
clc
ret
add
in
dec
repnz
add
jb
xchg
movsb
dec
xor
aas
cwtl
movsb
mov
imul
gs
jnp
sub
insb
dec
std
flds
or
loopne
insl
mov
xchg
shll
xchg
add
movsl
adc
or
fwait
inc
add
add
cwtl
movsb
pop
sbb
fimull
shll
popa
sbb
xor
mov
mov
test
mov
mov
inc
fldcw
xor
add
out
out
mov
int3
imul
je
mov
imull
adc
adc
xor
pop
jnp
cmp
sub
mov
arpl
pop
sub
addl
jp
jno
loop
sbb
sbb
and
lds
and
or
push
jl
and
ficoms
daa
or
shr
into
xchg
xor
add
pop
rol
fmull
arpl
push
mov
mov
fs
ret
xchg
mov
call
mov
js
jns
push
lret
stos
dec
out
add
sub
xor
test
push
sbb
mov
add
xchg
les
sub
jg
push
cs
lahf
cmp
mov
leave
adc
insl
inc
je
adc
cmp
enter
and
sbb
inc
sahf
add
fiadds
mov
pop
or
cltd
sbb
xor
pmullw
jle
fisubl
sub
stos
or
mov
sbb
mov
push
rsm
pusha
fadds
insb
add
cmp
loop
add
js
fsubrl
sub
jge
loop
and
jl
mov
outsb
or
add
add
daa
mov
stos
or
icebp
mov
mov
movsb
jnp
sahf
adc
push
xor
xor
pop
inc
les
mov
daa
sub
mov
adc
pushf
pop
mov
out
inc
xchg
out
xlat
aad
fisubrs
ret
insl
fstp
out
cmp
fldcw
pop
add
inc
clc
pusha
or
lock
shl
mov
add
mov
mov
cwtl
push
jnp
pop
dec
and
jle
pop
cmp
mov
cmp
addb
push
push
cmp
sbb
shlb
mov
jb
frstor
imul
test
add
xor
and
andb
xor
sub
inc
in
test
push
mov
loopne
fwait
add
and
icebp
xor
sbb
push
jmp
pop
pop
jbe
jp
cmp
cltd
subl
filds
test
xchg
filds
rcl
iret
repnz
iret
xchg
sbb
test
mov
sub
dec
inc
xor
ds
add
jb
push
push
scas
jo
stos
mov
xor
add
cltd
aaa
mov
sub
data16
jns
ret
adcb
push
xor
and
and
sbb
out
adc
mov
mov
loope
mov
sbb
jp
add
pusha
repnz
xchg
aaa
mov
repz
add
sub
pop
mov
bound
aam
add
cmpsb
mov
inc
mov
adc
and
push
loope
inc
add
jo
mov
ljmp
pop
sbb
outsb
push
push
add
or
sub
loopne
xlat
loopne
sbb
xchg
mov
sub
push
and
push
cmc
enter
rorl
scas
rolb
inc
cmp
out
fldl
cmpsb
add
sarl
push
xor
add
add
stos
and
push
xorl
jne
mov
mov
or
xchg
mov
xor
add
pusha
das
inc
pushf
or
mov
mov
add
xor
xchg
and
repz
add
xchg
aaa
pop
pop
push
inc
div
sub
das
scas
pusha
movsl
loopne
push
dec
and
sbb
push
addr16
lods
add
inc
aas
cmp
int3
lret
dec
push
imul
mov
adc
pop
pop
or
fcoms
xor
je
and
push
nop
sbbb
inc
popf
pop
xchg
cmc
stos
add
xchg
push
push
xchg
in
inc
cmp
or
sbb
jecxz
mov
call
popa
adc
ss
lods
sbb
dec
loope
cmp
jne
mov
push
stos
and
shll
mov
fldt
iret
outsb
sub
out
fwait
xorb
fcmovnu
lret
push
xlat
mov
or
fsubrs
jle
lret
or
mov
inc
cltd
andb
fisubl
fbld
test
mov
mov
adc
add
aaa
jne
ss
incl
xor
or
dec
sub
out
adc
jne
mov
shrl
lcall
test
cmp
pop
adc
add
insb
or
sub
dec
shlb
xor
ss
sub
das
mov
add
in
subb
and
adc
cmp
test
cmpsl
jb
aaa
xchg
icebp
mov
adc
cmpsl
jmp
iret
or
les
sahf
mov
fstpt
cmp
test
shl
mulb
mov
clc
out
push
frstor
or
rolb
xchg
bound
push
aad
enter
jo
stos
sahf
dec
inc
mov
mov
subl
xor
dec
in
ficoms
dec
aas
das
push
ret
mov
popa
jp
into
popa
mov
push
out
ret
mov
adc
loope
mov
add
js
into
and
insl
daa
dec
xchg
fcmovnu
mov
mov
fcmovnu
mov
rcl
fidivs
cli
enter
mov
xchg
repnz
push
wbinvd
ds
mov
push
xor
paddw
xchg
push
mov
sbb
shll
push
sbb
inc
ret
repz
aas
dec
cmp
sub
daa
lahf
mov
into
ss
aaa
xlat
and
sarl
call
mov
gs
push
cmc
dec
add
jp
add
sub
test
and
add
inc
or
ss
mov
pop
adc
or
xor
pusha
pop
mov
outsb
sahf
lret
jmp
es
sub
test
push
pop
jp
inc
mov
sub
divb
sbbb
loopne
mov
or
iret
lret
mov
iret
xchg
add
cmp
and
pusha
sub
in
fs
push
lock
xchg
loopne
push
jp
mov
add
and
mov
jl
loop
or
jns
jp
call
aaa
push
out
xchg
les
adcb
adc
mov
into
andb
xor
and
xor
shrb
xchg
popa
adc
ret
stc
cmp
aaa
sub
xor
jl
rol
mov
fcoms
pop
pop
xor
imul
push
andb
push
jno
das
fstl
int
and
pop
rolb
pop
jne
cmp
loopne
and
mov
nop
sbb
in
xor
dec
mov
rolb
das
add
shll
sub
sbbb
mov
or
jb
xchg
jo
and
cmp
dec
sbb
xor
sti
into
repz
enter
inc
mov
inc
addl
push
mov
addb
xchg
adc
js
xor
or
push
push
push
adc
and
mov
add
pop
xchg
rcll
jne
and
leave
call
adc
out
mov
mov
and
fmulp
pop
inc
cmp
int
lods
pop
iret
and
push
jl
lock
jp
mov
sub
push
dec
push
adc
aaa
sub
adc
pop
call
cltd
or
test
and
or
push
fldenv
xor
push
lods
mov
sub
dec
mov
and
lock
adc
mov
jge
jmp
in
xchg
sbb
cmc
stos
xchg
lret
call
inc
test
pop
and
adc
xor
in
shrb
fsubr
pop
and
push
lods
sub
test
pusha
fdivs
sbb
cmpsb
add
pop
test
and
pop
loope
lods
inc
cmp
es
or
pusha
clc
jae
cmp
pop
pop
les
dec
mov
aad
cmpsb
or
xchg
mov
lods
es
jbe
pop
hlt
bound
cmpb
inc
shll
jp
pop
mov
out
mov
movsl
inc
int3
fisubrl
into
stos
pushf
inc
ljmp
in
xchg
inc
lods
jmp
roll
pop
arpl
sub
neg
scas
lock
push
lds
imulb
shlb
inc
ja
xorl
inc
mov
je
sub
inc
inc
mov
sbb
fdivs
jno
add
sbbl
rclb
test
mov
xor
fimull
and
add
movsb
popf
inc
mov
cmp
xor
push
lods
sbb
or
or
or
test
loopne
mov
orb
bound
cmp
pop
fdivl
xchg
jecxz
jnp
mov
pop
inc
pop
inc
push
fadds
cmpsl
std
cmp
loopne
add
push
add
inc
xor
mov
add
jl
or
test
pop
in
add
add
mov
mov
mov
push
pop
mov
or
test
pop
adcl
rcll
pop
int
je
add
pop
ficoml
push
and
es
xchg
xchg
push
sbb
or
ffree
ds
xor
push
mov
sub
mov
mov
xlat
mov
add
out
sbb
call
call
add
leave
rolb
mov
push
sbb
xor
adc
jp
adc
push
andl
scas
in
adc
ja
sub
or
aad
or
pop
inc
les
mov
or
xor
sbb
jb
ljmp
shrl
pop
add
ja
or
test
data16
pop
mov
fucomi
bound
sbb
cli
rcll
out
pop
and
inc
adc
outsl
xor
loopne
sub
aaa
psubd
and
xorb
push
push
les
mov
idivl
mov
dec
lret
ret
leave
mov
and
int3
mov
and
push
jp
mov
sub
add
add
pop
lret
iret
out
xor
push
cld
push
pop
mov
rcrl
adc
rorb
xor
sbb
test
jae
scas
pop
retw
inc
loopne
and
sbb
jecxz
mov
inc
and
xchg
ja
sbb
cs
sbb
leave
jge
sbb
jecxz
push
fildll
ret
add
adc
ja
js
add
sbb
hlt
xor
jp
inc
adc
add
sub
nop
sbb
das
sub
out
sbb
or
dec
in
add
pop
add
aad
ljmp
cmp
repnz
hlt
or
xlat
mov
jne
cs
mov
inc
and
fs
push
pop
fidivs
insb
inc
sbb
push
pop
outsb
inc
insl
outsb
data16
bound
mov
push
xor
sti
dec
arpl
loope
cwtl
inc
movsb
lret
xor
out
jo
add
and
divps
and
xchg
adc
or
and
push
nop
mov
repnz
bound
cmp
adc
xchg
data16
fwait
cld
lahf
loop
dec
leave
sbbb
lods
jp
std
pop
rcrl
in
xchg
and
mov
inc
and
xchg
adc
push
sub
sahf
lret
pop
pop
test
xchg
and
icebp
js
shl
test
test
inc
arpl
das
loopne
add
jmp
mov
inc
icebp
adc
imul
push
call
scas
adc
add
mov
les
or
adc
sbb
and
sbb
fucomi
xchg
mov
xor
xlat
mov
pushf
xor
jle
popl
out
pop
and
dec
and
es
jg
cmp
addb
mov
mov
loopne
mov
stc
or
sub
mov
sbb
pop
cmp
addb
sub
sub
es
cmpsb
mov
pop
mov
sti
inc
mov
adc
sub
jle
and
scas
jle
mov
xchg
adc
insb
xchg
add
and
xor
les
xchg
dec
xor
stos
lods
mov
jnp
jo
or
mov
cmpsb
or
daa
xchg
sub
push
and
push
mov
les
add
add
scas
ret
subb
xchg
pop
cmc
or
push
sub
or
adc
jo
mov
mov
mov
add
and
or
in
add
js
dec
cli
test
pop
add
mov
add
or
push
and
inc
cmpsb
scas
add
sbb
sbb
movsb
inc
lret
or
ja
mov
add
cli
out
or
xchg
je
lahf
add
ss
and
jne
cmc
and
inc
cmp
adc
cld
xlat
push
mov
ja
arpl
and
aaa
and
ret
and
sahf
bound
mov
sbb
jp
or
sub
lds
ss
addb
sbb
out
in
push
fbstp
je
add
orb
and
xchg
sub
push
sub
push
sbb
and
push
push
sbb
icebp
mov
ds
cmp
mov
and
mov
out
jb
jae
cmp
mov
inc
inc
mov
mov
cmp
adc
pop
push
or
sub
mov
push
xchg
arpl
push
xchg
add
mov
in
mov
sub
and
test
mov
and
js
jge
into
push
pop
mov
cmc
pop
adc
loope
dec
adc
shl
icebp
iret
cwtl
and
dec
int
add
add
add
insl
or
xlat
sbb
cld
jnp
dec
push
rol
adc
fs
loope
or
dec
test
addl
xor
cld
mov
xlat
adc
loop
fistl
lock
inc
fcompl
mov
sub
ljmp
or
push
and
fstpt
je
aaa
dec
inc
jbe
je
inc
xor
in
jle
stos
and
popa
add
je
mov
outsb
push
je
push
xchg
frstor
dec
es
add
sbb
icebp
mov
ljmp
push
mov
rol
push
sub
add
dec
cmc
fiaddl
inc
cmp
and
sbb
fstps
mov
pop
mov
in
inc
and
xchg
jle
and
and
adc
mov
push
test
imul
cld
xchg
mov
adc
sub
or
loope
jo
call
addr16
adc
mov
int
cmp
or
push
roll
push
xor
cmp
repz
or
sub
push
test
mov
roll
xchg
add
pop
mov
jle
testb
mov
xchg
or
lret
lret
mov
shl
inc
xor
sub
mov
test
pop
and
fmul
mov
adc
mov
fsubl
add
mov
add
pop
pop
dec
aam
sub
jb
add
outsl
dec
and
and
mov
into
dec
cmpsb
fidivl
push
sbb
cs
sbb
rcl
jp
push
roll
sbb
aaa
icebp
mov
mov
arpl
mov
pop
pop
mov
insb
nop
mov
and
xchg
add
jbe
lcall
lods
inc
lret
mov
add
push
push
push
insl
mov
jo
mov
imul
or
xchg
pop
imulb
inc
jns
ljmp
cmpsl
jg
sbbl
adc
ja
inc
out
cld
inc
adc
add
sbb
or
dec
xorb
jns
test
mov
mov
movsb
pop
mov
jno
xchg
dec
mov
or
dec
std
jbe
addr16
pop
sub
mov
dec
js
push
mov
mov
inc
out
jne
pop
xor
cwtl
inc
test
addb
add
lcall
roll
xor
xor
adc
mov
fwait
mov
pop
cmc
dec
fs
test
or
andb
sti
stos
scas
and
mov
mov
fucomi
jae
mov
inc
in
pop
push
mov
mov
cmc
sbb
lcall
pop
add
push
cmpsl
inc
outsl
xor
cmp
inc
push
cmp
enter
fstps
xor
outsb
adc
add
das
cmp
ficoml
mov
mov
cs
xlat
adc
pop
push
and
inc
into
insl
push
lahf
jnp
iret
loop
rcrl
das
fcomp
and
loope
adc
pop
inc
je
cwtl
push
sbb
push
mov
lock
out
es
mov
add
pop
data16
mov
nop
js
cmpsl
add
daa
es
or
xlat
fistl
fcmovnu
mov
dec
and
in
and
into
push
aaa
mov
or
mov
iret
sub
stos
imul
push
xor
xlat
mov
add
daa
push
mov
stos
sub
lods
jmp
ja
dec
adc
pop
sub
loopne
wbinvd
inc
scas
mov
data16
mov
mov
mov
andb
inc
fisttpl
mov
add
int3
rolb
jle
scas
inc
shrb
inc
dec
dec
les
or
push
int3
inc
dec
cmp
push
mul
dec
jnp
push
or
sub
in
adc
push
push
js
push
mov
rclb
mov
aad
jmp
imul
adc
data16
mov
push
mov
int
push
es
or
push
dec
adc
xlat
lods
int
pop
cmp
mov
cmpsl
sbb
sub
notb
sub
inc
xor
or
sbb
aam
dec
icebp
lock
sbbl
adc
ds
loopne
sub
mov
push
repz
push
es
xor
sbb
shrl
and
xchg
mov
call
cmp
outsb
js
or
inc
sbb
dec
jns
sub
xchg
dec
out
cmp
cmp
dec
inc
mov
shlb
fidivrl
adc
mov
mov
icebp
add
iret
dec
xchg
mov
xor
pusha
xchg
sbb
test
imul
add
xor
outsl
and
cmpsl
rolb
mov
stos
or
outsb
sbb
pop
leave
popa
jmp
lret
sbb
xchg
sbb
push
add
dec
mov
inc
push
imull
cmpl
outsl
rcll
outsl
xlat
xchg
pop
lahf
nop
mov
cmp
push
cmp
cmp
rolb
or
test
add
xchg
push
xchg
lds
mov
mov
jb
dec
cs
xor
mov
adc
sti
inc
std
push
scas
ljmp
inc
fistpll
or
add
popa
or
or
jns
arpl
sets
dec
mov
les
add
rcrb
dec
daa
das
or
jo
sbbl
mov
push
andb
fmuls
shlb
sub
xchg
push
push
lds
mov
daa
push
adc
aad
js
sahf
dec
ja
lcall
push
pop
fistl
ja
jmp
sbb
out
inc
shrl
stos
loopne
mov
pop
add
push
imul
fcomps
inc
jp
sub
stc
and
pop
mov
mov
lods
mov
imul
aad
cmp
and
das
aam
push
or
jp
pop
and
xlat
popa
andb
or
or
inc
add
flds
fisubrs
mov
flds
lcall
push
hlt
andl
aam
out
sbb
inc
xchg
je
sti
add
sbb
adc
inc
je
sub
pop
clc
test
mov
out
leave
add
mov
jnp
sbb
or
adc
and
cmc
out
subb
jno
scas
or
outsb
cmp
mov
mov
sbb
call
lock
fsubs
mov
inc
clc
add
jl
adc
inc
inc
cmp
fcoms
mov
and
xor
shrb
or
inc
sub
loopne
dec
jl
enter
sbb
and
daa
int3
and
sub
cmpsb
xor
inc
scas
shll
or
int3
add
and
mov
cmp
inc
stos
in
add
adc
adcb
mov
push
pop
xor
cmp
cmpsl
fisubl
xchg
or
push
and
jo
mov
or
push
mov
jle
sub
adc
scas
fidivrl
sahf
dec
sub
daa
mov
mull
andb
out
sbb
pop
jo
mov
inc
idivl
cmpb
push
cmp
aas
jge
add
insb
imul
sub
daa
in
sub
xchg
sub
sbb
inc
cmp
out
jae
and
pop
and
pop
xchg
sbb
add
sbb
enter
add
sbb
pushw
sub
fadds
sub
popf
ja
cmc
add
ficomps
mov
mov
pop
xor
sbb
shl
mov
dec
das
add
lret
stc
sbb
test
pop
inc
adc
dec
jmp
negb
jns
cmp
movsb
add
sbb
mov
mov
out
xor
push
push
cwtl
cmp
sbb
outsb
push
mov
ja
sbb
pop
or
lock
out
add
mov
pop
lods
adc
popa
out
mov
pop
dec
cmp
and
out
jbe
push
imul
xchg
push
and
sbb
rol
imul
scas
scas
pop
addr16
dec
ret
cmp
rcrl
out
mov
mov
and
pop
add
or
xchg
pop
and
stos
cltd
into
inc
mov
addb
jp
or
dec
into
rclb
and
fs
add
or
sti
or
sbb
outsl
push
mov
or
scas
mov
jg
add
das
push
sti
data16
mov
dec
jbe
xor
add
or
or
rolb
mov
movsb
outsl
sbb
sub
mov
cmp
adc
sub
pop
insb
test
and
cltd
dec
sbb
js
popf
and
and
pop
in
das
xor
mov
outsl
xor
lcall
sub
cmp
jmp
out
push
xor
popf
lds
fsubrs
shlb
jne
popa
adc
sbb
or
das
sbb
lret
ss
aad
push
or
es
out
sbb
jne
jg
inc
outsb
mov
and
out
mov
es
jecxz
rcrl
push
adc
pop
push
cmp
push
dec
js
lret
or
xor
rcrb
bound
mov
fidivrl
data16
aas
into
cmp
push
inc
lahf
and
mov
out
and
mov
add
repz
adc
xchg
jo
jmp
popf
cmpsb
stos
sub
sub
or
cmp
mov
lods
ret
scas
and
add
xchg
in
jge
and
and
inc
sbb
xor
xchg
insb
fisubrs
test
or
add
gs
outsl
inc
fldl
xorb
mov
inc
jmp
scas
jo
xor
imul
sub
mov
push
sbb
sub
and
js
icebp
stos
repz
mov
mov
jmp
int
icebp
xorl
lock
cmp
xchg
mov
mov
dec
and
xchg
ss
push
aam
mov
xor
mov
cmp
mov
pop
ret
pop
lods
loop
push
mov
inc
push
xchg
testb
sub
fisttpll
cmp
orb
inc
sbb
add
inc
or
test
mov
je
mov
xlat
idivl
add
sarb
outsb
adc
out
hlt
cmp
shll
dec
repz
push
scas
stc
sahf
movsb
lahf
lahf
daa
gs
loopne
pop
push
mov
or
enter
xchg
outsl
add
push
rcrb
lret
cmpsb
add
pop
shr
adc
xor
mov
pop
in
out
shll
rorb
daa
mov
xor
push
xor
shrb
push
mov
inc
ror
mov
dec
xor
ss
lods
xor
addr16
adc
dec
jo
icebp
sbb
fs
fstl
insb
add
pusha
ret
push
add
xor
jns
xchg
mov
lret
jo
jecxz
mov
mov
xor
push
add
xor
cli
xchg
bswap
bound
or
cmp
lds
mov
aaa
mov
lea
and
outsl
pop
imul
jnp
mov
lahf
lahf
mov
mov
loop
stos
mov
mov
cs
mov
xlat
or
loope
fsub
in
xchg
out
nop
ficomps
stos
jecxz
incl
es
push
xor
mov
or
loop
lds
dec
pop
enter
cmpsb
push
push
fwait
add
and
inc
pop
mov
cmc
aam
data16
sbb
sub
pop
pop
ss
je
mov
imull
popa
das
into
leave
mov
lahf
inc
arpl
aam
ret
mov
test
aad
sti
pop
pop
andl
jb
popa
add
imul
pop
bound
mov
jge
or
repnz
in
jne
jg
insl
or
and
fucom
filds
xor
pop
jns
jae
xchg
lods
aaa
add
popa
mov
push
xchg
pop
pusha
dec
bound
pusha
repnz
int
add
add
int3
aad
or
inc
jg
fwait
jl
dec
dec
push
mov
insb
push
push
nop
xor
and
icebp
xchg
dec
movsb
xchg
xor
mov
outsl
and
subl
mov
adc
out
cmp
push
add
andb
jmp
fcomps
or
enter
stc
push
lret
push
pusha
shll
dec
push
and
ficompl
push
popa
push
or
xchg
lods
xchg
arpl
and
adc
xor
stos
and
push
and
and
jns
jo
lock
fcoml
mov
fbld
and
xorl
jmp
cli
adc
movsb
mov
fildl
and
cmpsl
fisubrs
jle
xor
insb
scas
sub
imul
test
shll
push
xor
insb
and
cmp
pop
xchg
addr16
gs
inc
sub
mov
xor
ret
sub
mov
testl
loope
int3
cs
lcall
sub
iret
pusha
xlat
ficoms
mov
mov
mov
or
sbb
mov
je
rorl
daa
ret
sbb
rclb
pop
lcall
enter
push
mulb
inc
ja
in
add
scas
mov
lret
push
popf
adc
xor
adc
test
div
jge
lahf
and
stos
js
xlat
into
dec
aaa
fildl
mov
xchg
or
aaa
ja
xlat
xor
sbb
mov
add
inc
into
std
popa
mov
loope
sbb
mov
in
dec
aas
outsb
int3
cmp
mov
or
xchg
lcall
sbb
cmp
out
outsb
idiv
bound
push
test
push
aas
xchg
ds
push
sbb
ds
pop
pop
pusha
jge,pt
or
add
int
sub
sub
add
xor
or
add
add
push
pop
fnstenv
shll
in
ja
dec
mov
test
sarl
inc
lret
add
enter
or
push
or
mov
push
push
add
xchg
test
pop
fnstenv
nop
or
or
mov
adc
add
loope
scas
mov
mov
push
scas
jnp
jne
inc
sbb
add
sbb
lods
fincstp
insl
or
ds
pop
xlat
mov
sbb
or
mov
aad
sbb
pop
jnp
outsb
add
imul
adc
jae
fisttpl
push
add
pop
ja
iret
jns
push
imul
arpl
in
imul
sahf
mov
ja
add
cmovne
popf
add
jmp
bound
jne
mov
cmpsl
jne
xchg
or
test
imul
sbb
jmp
test
jle
xlat
cmp
out
jae
jae
xlat
jo
pop
xlat
pop
loope
sbb
mov
sub
imul
sahf
loope
insb
and
add
sbb
sbb
dec
add
sbb
fs
sbb
enter
mov
out
repz
or
sbb
cs
dec
jno
add
and
outsl
lods
adc
aas
adc
or
fwait
jo
addl
or
jo
pop
jo
adc
lea
or
adc
jo
aam
xchg
sub
out
sbb
inc
jae
in
inc
icebp
or
jne,pt
cmp
test
inc
push
andb
push
adcb
and
out
push
test
aaa
imull
icebp
adc
and
test
nop
mov
sbb
and
inc
inc
pop
or
add
pop
sbb
mov
add
icebp
call
pop
cmpb
add
adc
xor
ret
sbb
cmp
dec
sbb
jo
es
popw
sub
cmp
enter
add
add
icebp
adc
xchg
push
sub
lods
js
mov
testl
xor
lea
stos
test
rcrb
cmp
pop
mov
cmp
cmp
scas
pop
lock
adc
adc
sarl
mov
fstpt
pop
xchg
add
call
scas
and
leave
xchg
call
popf
dec
and
mov
fiaddl
outsb
call
bound
xchg
inc
add
inc
in
jmp
add
inc
mov
fdivrs
cmpsl
hlt
mov
dec
or
push
cmp
pop
out
inc
xor
shlb
dec
ret
cli
outsl
mov
sets
in
fadds
xchg
dec
jg
cmpsb
jge
daa
subb
aas
mov
inc
push
add
jo
sbb
lods
mov
mov
inc
inc
fmull
fistpll
mov
xorl
xchg
adc
mov
sbb
inc
jg
icebp
bound
cmp
push
xchg
jp
in
push
aam
les
int
iret
sbb
pop
stos
jecxz
fcomi
push
jl
lcall
sub
out
mov
insl
clc
pushl
mov
mov
add
jne
test
ret
push
push
es
mov
mov
sahf
mov
js
aam
xor
xchg
push
and
pop
dec
add
jbe
insl
push
adc
mov
je
outsl
nop
or
jbe
jbe
mov
xor
fucomp
insl
sbb
fmuls
aas
xchg
mov
pop
dec
xchg
sbb
mov
push
adc
push
mov
aaa
dec
sub
dec
je
lds
or
mov
or
mov
testb
adc
inc
insl
cli
pushf
xchg
loopne
mov
sbb
and
push
rolb
sti
outsb
insb
shll
insl
insb
pop
sub
jae
loope
inc
mov
push
xor
pop
sbb
lea
mov
insl
test
xor
push
lods
out
das
or
sbb
mov
in
mov
test
fsubs
push
pop
mov
mov
int
test
mov
cs
shl
xchg
cmp
movsb
xchg
xchg
or
inc
fwait
lds
cmp
imul
les
inc
insb
sub
mov
leave
imul
xorl
inc
add
clc
sbb
in
push
jbe
dec
call
sub
aas
or
push
mov
fisubrl
add
outsb
jge
mov
jmp
pop
out
movsb
lcall
sbb
in
icebp
sub
inc
push
outsl
cli
or
jae
add
stos
mov
or
mov
test
jb
mov
je
in
lahf
or
xchg
ss
cli
jo
push
sub
int
push
pop
mov
push
sbb
ss
sub
movsb
rol
pop
jbe
shl
push
sub
xchg
mov
cmpsb
jbe
sub
pop
fsubl
cmp
outsb
add
outsl
jns
aas
mov
pop
ss
pop
imul
hlt
or
sub
mov
mov
push
jne
popa
xchg
sbb
mov
scas
lea
add
sub
or
sbb
pop
xor
pop
dec
outsl
add
push
cmc
push
pop
pop
ss
fwait
out
pop
mov
aad
je
cmpsl
rcrl
insl
and
clc
dec
int
ljmp
repz
jo
mov
dec
loop
fs
mov
or
sub
jne
pop
loopne
push
lret
lret
xor
adc
ljmp
shll
pop
or
fidivs
call
movb
lods
insl
nop
aam
sti
mov
inc
jo
arpl
in
and
xchg
xor
pushf
mov
dec
lahf
inc
push
ja
in
leave
sbb
or
inc
fwait
and
outsl
mov
sbb
jne
divb
jbe
mov
rcrb
jl
scas
jge
add
stc
push
icebp
jno
lret
int3
pop
loop
rcrb
push
fdivs
pop
or
fnstsw
cmp
mov
ss
ss
ss
push
xor
cmp
mov
testl
lods
sbb
addl
nop
lock
push
pop
cmp
adc
dec
fcmovne
lock
enter
imul
arpl
mov
jae
add
mov
pop
sti
jns
mov
or
lods
cmpsb
pop
or
inc
sbb
jg
imul
xor
or
test
test
jo
jle
xor
divl
fdivs
mov
sbb
or
daa
mov
mov
stos
mov
test
mov
mov
jp
popf
pusha
push
push
sbb
shll
aas
mov
mov
les
mov
jne
aas
aam
jg
mov
imull
addr16
push
or
xchg
out
aaa
or
or
xchg
inc
dec
xor
rcl
into
test
gs
and
pop
xlat
inc
decl
mov
and
into
addb
or
xchg
mov
mov
and
fldz
imul
idivb
pop
lods
nop
push
cmp
mov
outsb
int
mov
insl
fistpl
jno
pop
lds
add
ljmp
repz
roll
sub
xor
jmp
add
cs
ret
mov
mov
mov
pop
cwtl
sub
pop
and
mov
jno
stos
mov
outsl
fistpl
inc
mov
imul
addr16
aas
jae
and
lds
mov
sub
mov
xor
divb
ret
ja
lea
inc
push
fwait
mov
aaa
dec
insb
cmc
mov
mov
int3
outsb
pop
sbb
jle
inc
shrl
lret
std
add
and
jp
sbb
lds
sbbl
adc
sbb
pop
mov
cmp
add
jne
in
call
jns
shlb
cmp
jo
stos
in
mov
add
cmp
insb
rolb
push
sub
ljmp
xor
cltd
in
insl
inc
fstp
inc
fmull
inc
inc
jmp
sbb
enter
insb
std
jp
fstps
jno
mov
scas
hlt
adc
mov
testb
mov
and
call
hlt
add
sub
and
sarl
js
adc
arpl
addr16
leave
fidivs
loope
in
imul
notl
mov
lods
xor
mov
cmpsb
in
or
inc
inc
hlt
repnz
cs
xor
push
pop
lret
lods
mov
mov
jnp
ret
ret
ror
adc
add
push
popa
xor
test
ficoms
je
mov
sub
scas
dec
movsb
xchg
push
imul
out
inc
mov
and
add
adc
mov
loop
push
mov
lds
fwait
lcall
cmp
iret
in
sbb
mov
in
xorb
and
fdiv
jno
aaa
jnp
popa
rclb
push
or
pop
mov
pop
faddl
cmc
jbe
adc
cld
jne
push
sbb
push
push
cmp
divb
insb
and
jo
xchg
jg
add
dec
mov
and
xchg
dec
xchg
fisubrs
sbb
andl
mov
stos
js
push
jb
f2xm1
jae
fidivrl
cmp
fiadds
pop
mov
rcrb
divl
cli
fadds
aam
je
shll
fisubl
insb
cmpsl
dec
arpl
shl
data16
jp
roll
adcb
das
inc
frstor
std
adc
imul
or
dec
push
sub
sub
test
xlat
push
std
cmp
inc
sub
lods
insb
push
loop
fstl
nop
loope
and
sub
adc
xchg
outsb
pushf
inc
sbb
adc
xor
dec
insb
xor
pop
scas
lds
xlat
pusha
lock
lret
mov
es
call
pop
pop
inc
adc
push
pop
jmp
xor
insl
xchg
inc
es
aas
ret
mov
movsl
scas
das
out
fidivrs
loopne
add
add
and
pop
mov
fnstsw
dec
scas
aam
enter
sahf
bound
mov
shll
mov
lds
jge
je
and
popa
mov
mov
ret
pop
in
push
mov
std
jmp
push
add
adc
stc
dec
dec
stos
subl
or
out
sbb
jge
insl
stos
imul
movsl
cltd
add
add
mov
push
adc
js
push
ret
xor
jle
in
outsl
test
iret
in
fucomi
cmp
imul
sbb
add
ss
mov
mov
inc
icebp
add
lahf
ss
jle
pop
pop
pop
mov
das
push
clc
imul
adc
mov
cmp
out
mov
adc
mov
jo
xchg
int
je
lahf
test
data16
inc
mov
push
cmp
testb
cli
inc
adc
xor
fists
outsb
rcrb
imul
add
mov
inc
out
xchg
and
insl
dec
jg
push
xchg
cmp
pop
in
add
jbe
add
and
popa
pop
lahf
lea
and
cld
dec
clc
xorb
lock
pop
push
and
out
pop
pop
dec
inc
mov
push
ret
sbb
push
rcrl
inc
stos
mov
xchg
mov
into
pusha
adc
jmp
cs
mov
rolb
aaa
ret
and
pop
push
je
cmp
inc
inc
out
xchg
adc
mov
mov
mov
jb
mov
push
add
jnp
aas
subl
daa
adc
pusha
or
cs
in
pop
push
shll
dec
loopne
and
insl
into
dec
neg
out
fiaddl
jo
inc
addl
loop
shrl
push
psadbw
outsb
or
das
testl
sti
dec
dec
adc
shlb
push
leave
mov
mov
cmp
aam
test
sti
mov
sub
sub
inc
lret
xchg
jl
cmpsb
testb
and
lock
shll
pop
cmp
daa
cmovb
es
lock
mov
outsb
insl
cltd
cmpps
xchg
xchg
negl
jg
imulb
dec
inc
inc
mov
push
or
ljmp
xlat
bound
mov
sbb
out
jp
lret
punpckldq
pushf
dec
test
jne
mov
les
in
jge
popf
test
or
outsl
jg
dec
push
pop
mov
mov
dec
or
push
cmc
scas
testb
call
pusha
jbe
xchg
xchg
cmp
pusha
aam
sub
fucomi
pop
jno
and
cmp
fwait
test
xor
sbb
mov
adc
xchg
in
push
stc
arpl
pop
add
ret
xchg
jp
cltd
test
sub
adc
test
jg
fcompl
pusha
js
cmp
pop
cmpsl
xor
adc
ss
mov
pop
stos
pop
jns
mov
lds
add
mov
jge
sbb
stos
mov
popf
iret
jg
pop
lods
repnz
dec
scas
jl
imul
push
pop
dec
in
adc
xor
adc
call
je
scas
inc
add
mov
pop
mov
outsl
hlt
fs
roll
fcomi
lock
and
js
popa
jbe
pop
int
sub
dec
mov
movl
jmp
jns
xchg
mov
bound
pusha
lret
mov
std
mov
mov
pop
pop
aas
arpl
xlat
jno
adc
sahf
sbb
or
cmp
pop
jo
push
cmpsl
arpl
mov
int3
cmp
add
pop
inc
add
xchg
sbbl
addr16
rcrl
mov
pop
mov
xchg
mov
pop
je
scas
lods
mov
jmp
mov
dec
test
arpl
addb
push
xor
mov
pop
xchg
mov
jo
fldcw
xor
rcr
mov
bnd
or
lret
ds
fstpl
inc
sub
sub
mov
push
inc
xor
jecxz
fstpt
negb
repnz
orl
xlat
movsl
dec
int3
mov
sbb
lods
in
iret
pop
xor
sahf
inc
add
stc
fs
or
jge
pop
outsl
fildl
lret
add
mov
scas
popf
mov
or
fwait
and
and
mov
xor
incb
cltd
les
dec
cmp
aaa
add
jg
rcll
lea
adc
jae
outsb
insl
xor
jmp
mov
and
inc
mov
adc
adc
insl
sbb
out
sub
add
aam
or
mov
mov
xchg
repz
cs
jecxz
shl
cmpsl
or
jo
push
cwtl
mov
mov
pop
pop
push
arpl
leave
jecxz
inc
lea
pop
mov
push
vpsubsb
inc
pop
mov
push
rclb
dec
adc
dec
ja
sub
jns
jp
js
roll
add
add
in
fwait
imul
sub
or
mov
stc
mov
pop
movsl
sbb
mov
jno
mov
ss
test
daa
sbb
sub
aad
sarb
fs
jle
dec
aas
pop
lods
pop
test
lock
adc
pop
ret
jl
adc
dec
mov
sub
push
pop
push
adc
shrb
ret
aam
add
add
add
add
sarl
out
xor
mov
lea
push
movsl
data16
aam
inc
pop
jge
lea
lcall
divl
pop
out
nop
mov
xchg
push
cmp
pop
cmpsb
mov
and
adc
adc
cwtl
filds
leave
push
pop
rep
mov
imul
fnsave
xor
dec
dec
out
mov
push
pop
add
or
lea
sub
mov
cli
js
loope
cmc
or
icebp
mov
mov
mov
cmp
inc
inc
push
into
cs
mov
mov
das
in
dec
dec
shrb
push
or
in
int
subb
lods
daa
adc
pop
aam
sbb
xchg
sbb
mov
mov
test
sbb
mov
lock
xchg
or
lret
jb
data16
inc
ja
push
daa
dec
loop
fucomi
mov
xor
push
and
mov
js
inc
frstor
adc
pop
xchg
push
daa
fsubrs
roll
les
xorl
loope
fsubs
cwtl
sub
jbe
push
or
pop
ds
mov
ds
data16
ja
insb
push
in
inc
fisttpl
into
aaa
loope
sub
sub
sub
flds
mov
mov
mov
ss
jl
sub
mov
lahf
sti
mov
lods
adc
jns
sahf
mov
or
js
dec
xor
pop
xor
lock
pop
jo
cmp
bound
aaa
xchg
jne
sbb
sub
inc
lods
addl
and
add
mov
add
push
push
mov
push
push
dec
add
fwait
inc
sti
test
filds
push
push
jo
into
sbb
in
data16
je
jmp
xchg
out
cmp
pop
xor
xlat
loopne
mov
xchg
jle
aaa
mulb
push
fbld
jae
adc
fsubrs
addb
lahf
rclb
mov
ret
ss
push
sbb
loope
or
lods
mov
mov
aaa
jge
stos
movsl
das
cmp
mov
jne
pop
je
mov
mov
xor
movsb
popf
and
insl
cmp
add
out
adc
mov
or
dec
ja
xor
lods
push
xlat
or
xor
and
aaa
int
mov
cs
inc
sahf
aaa
stos
gs
jns
mov
adc
sub
mov
imul
std
mov
sbbb
in
mov
lods
jge
lock
add
out
push
mov
sub
jp
roll
fsubrs
es
lods
jno
dec
push
mov
inc
fildl
lds
adc
pop
ljmp
adc
insb
in
xchg
imul
mov
sub
test
push
dec
insl
or
pop
or
mov
sbb
inc
addl
mov
mov
jae
imul
jo
push
sub
pop
decb
outsl
xor
jnp
pop
push
xor
add
add
pop
fcoms
loope
addl
and
nop
pop
pop
adcb
pop
pop
cwtl
xor
icebp
push
adcl
insb
ret
push
pop
cmpsl
adc
repz
enter
fidivl
xchg
push
les
dec
add
xor
rol
inc
lods
in
nop
mov
or
inc
out
fisttpl
dec
push
jns
inc
push
dec
dec
pop
cs
mov
orb
jb
mov
jg
test
filds
mov
inc
repz
xchg
cmp
nop
sbb
notb
mov
outsb
push
sbb
jnp
pop
pop
ss
push
outsl
pop
aas
mov
adc
popa
mov
and
xor
mov
adc
les
add
test
adc
xchg
and
lcall
jmp
cwtl
cld
in
mov
adc
fs
inc
pop
pop
mov
cmp
and
outsl
in
ret
mov
scas
ss
xchg
dec
inc
and
or
mov
push
les
cmp
loopne
push
aam
adc
mov
stos
lods
mov
mov
mov
mov
cs
or
xor
mov
inc
fbstp
icebp
push
pusha
cmp
mov
subb
pusha
jl
inc
or
fs
lret
mov
xchg
bound
mov
cltd
ret
ljmp
fsubr
ja
std
mov
leave
aam
aam
lods
orb
adc
mov
fs
inc
fstpl
mov
mov
adc
add
shl
pop
jecxz
test
ljmp
aad
mov
clc
xchg
mov
int
movsb
jp
jmp
mov
jnp
or
ret
jno
jmp
push
jb
mov
push
add
xor
xor
or
cmp
pop
cmp
icebp
and
int
inc
cmp
fnsave
sbb
and
push
pop
orl
icebp
test
clc
mov
ss
xchg
or
rcr
and
test
inc
andl
test
mov
jg
sub
std
mov
pusha
mov
orb
lock
cld
add
ljmp
movsl
dec
aas
mov
imul
dec
pop
dec
dec
dec
or
push
dec
push
mov
lods
negl
out
bswap
sbb
pop
fistpll
lahf
pop
xchg
test
shlb
rclb
mov
sub
mov
inc
out
rolb
jmp
pop
dec
hlt
orl
popf
jmp
ret
jbe
jo
sbb
push
scas
and
arpl
mov
fstps
data16
cmpsl
nop
aad
jecxz
cs
insl
shll
mov
cltd
arpl
inc
jmp
mov
loopne
pop
cmp
arpl
fistpll
aaa
xchg
xor
imul
sub
mov
mov
inc
aam
cmpsb
jo
clc
mov
js
xchg
mov
adc
outsl
jmp
and
fwait
pop
jmp
cmp
or
push
lret
inc
jmp
popa
fdivrs
fcompl
inc
inc
xlat
xor
inc
insl
fstpt
outsl
movsl
or
mov
out
insl
scas
sub
jnp
sbb
xchg
jae
stos
sub
cmpsb
insl
mov
cld
rorb
mov
jns
mov
jmp
ds
stc
mov
into
lock
xor
das
mov
outsl
pusha
les
fiaddl
sub
sbb
loope
hlt
adc
jb
std
push
mov
fstpt
adc
lods
dec
sbbl
ljmp
mov
or
sbbl
xor
mov
pusha
out
sbb
xor
outsb
add
lahf
push
gs
in
fcmovu
out
decb
pop
negl
xchg
push
jnp
lcall
push
fldl
jo
dec
mov
inc
fldcw
push
ljmp
enter
loope
ret
test
mov
jmp
loopne
add
decl
jo
js
sbb
ret
mov
ret
adcl
mov
testb
pusha
push
lret
lods
dec
dec
lahf
jmp
or
inc
outsb
ret
out
fdivrs
or
repnz
cmp
out
lahf
les
mov
push
fildll
in
int3
mov
fildl
add
adc
jb
jnp
cli
arpl
nop
sbb
mov
push
sbb
mov
aad
fwait
aaa
mov
lods
mov
loopne
cld
mov
xor
xor
and
ret
cmp
lcall
mov
insl
cld
sub
mov
or
xchg
ljmpw
out
fsubl
and
inc
mov
ffree
outsb
mov
dec
sti
sub
repnz
movsb
inc
xchg
pop
pop
add
add
xchg
push
adc
push
xchg
add
push
aad
pop
and
push
out
out
int
push
dec
xchg
neg
incl
mov
lds
xlat
adc
push
and
in
or
add
push
repz
pop
and
adc
imul
add
mov
das
add
lods
jnp
and
or
lcall
add
lea
sub
cmp
mov
mov
sahf
addl
sbb
mov
pop
or
add
addr16
add
imul
add
shlb
xchg
xchg
int
push
xchg
insl
or
ss
add
aas
push
scas
xchg
scas
jnp
add
pop
add
pushf
adc
pop
mov
push
add
popf
lea
add
data16
sub
outsl
xchg
data16
into
fmuls
push
mov
add
sub
jae
push
lods
js
imul
cltd
int
mov
or
mov
ja
and
cmpsl
bound
test
pop
out
sti
sub
iret
int
imul
push
pop
cmp
push
in
imul
outsl
push
sub
in
push
mov
insb
jb
adc
push
push
xlat
cmp
stos
or
pop
cmp
push
add
int
dec
sbb
pop
scas
sub
push
sub
mull
arpl
sti
add
and
sub
movsl
or
jae
jge
xor
pop
add
or
popf
cmp
mov
shlb
xchg
fnstenv
xchg
lcall
add
sub
adc
inc
or
xor
add
inc
imulb
xor
ud2
push
popf
jnp
and
jnp
das
cmp
pop
addr16
test
sbb
or
pop
sarl
das
decl
pop
filds
popf
jge
add
sub
or
xor
pop
cmp
ja
cmpsb
or
add
je
fidivl
stos
or
jecxz
fwait
hlt
cmp
lret
or
or
or
xor
or
jnp
or
add
push
jnp
and
sbb
fisttpl
pop
push
mov
in
cmp
or
loope
fwait
add
pop
sbb
outsl
or
jnp
jg
jnp
shll
push
push
insb
lods
sti
push
pop
aaa
cmpsl
add
inc
mov
mov
add
jecxz
sti
movsb
int
sti
adc
es
push
aaa
push
pusha
xor
out
or
adc
or
out
in
xchg
jecxz
or
adc
adc
stos
adc
and
adc
shlb
adc
ss
cmp
push
sbb
jbe
pop
adc
pop
adc
ret
fnstenv
or
aas
add
add
fistl
fmul
sbb
or
test
fidivrs
fcoml
dec
pop
lahf
xor
add
popf
and
or
iret
sub
adc
cmp
adc
adc
adc
out
fwait
sub
inc
or
and
mov
push
xchg
sbb
sbb
setae
fwait
cmp
sti
add
sbb
push
rep
int3
mov
bound
jnp
push
pop
sbb
sub
xor
arpl
ds
mov
cmp
lods
add
xor
xor
add
pop
arpl
fidivrl
aas
sub
aad
mov
pop
out
ss
pushf
out
mov
sbb
addr16
adc
mov
ljmp
mov
push
add
out
mov
and
cmp
jno
adc
inc
adc
add
mov
sub
fistps
push
jnp
push
sbb
pop
cmpl
add
nop
mov
lahf
ds
mov
inc
push
dec
sbb
imul
xor
sbb
out
xor
lock
pop
xchg
mov
idivb
and
and
test
push
xchg
lahf
sub
out
mov
arpl
and
inc
add
aaa
and
sbbb
fwait
movsl
nop
in
push
addb
and
mov
sub
sbb
stos
jo
dec
fbld
insb
rcll
pop
into
add
and
ja
popa
or
ret
fidivs
add
sub
adc
sbb
xchg
dec
enter
insl
in
mov
dec
inc
jbe
inc
arpl
dec
adc
loope
jno
pusha
lea
mov
push
repnz
push
add
or
sbb
aas
pop
or
out
test
xor
xchg
sbb
popf
mov
pop
and
jnp
xchg
lods
fdiv
popf
and
imul
fincstp
je
and
adc
push
ds
jne
mov
pop
pop
pop
and
cmpsl
sub
fildll
cs
in
lea
jmp
insb
in
in
or
sarl
mov
popf
jge
outsb
sub
mov
sarb
fwait
popf
jle
cs
sub
push
and
dec
adcb
popa
dec
scas
and
and
bound
inc
inc
pop
lret
dec
pusha
out
lods
xchg
fwait
xor
idivl
hlt
cs
and
cmp
lea
negl
mov
pop
adc
mov
jbe
aam
xor
jmp
cmp
jge
push
add
inc
and
or
pop
pop
adc
fiadds
mov
and
jge
and
pop
xchg
jmp
dec
pop
leave
aaa
lods
cmpsb
pop
sbb
add
and
mov
or
sub
push
ds
cmp
lahf
push
mov
addl
and
das
data16
or
cmp
iret
dec
sbb
dec
mov
push
psraw
das
lock
aas
mov
inc
and
jg
fs
aaa
ja
es
cmp
inc
sahf
and
dec
sbb
jno
pusha
mov
out
addr16
adc
sbb
in
sbb
push
es
ss
or
or
push
or
and
data16
pop
in
adc
pop
adc
add
std
fcmovnbe
cs
sbb
xor
movl
sbb
cs
out
adc
push
dec
sbb
or
add
and
xchg
inc
data16
xor
jnp
sbb
add
orb
and
sub
mov
in
or
sub
pop
and
push
sbb
rcrb
jp
repz
add
and
dec
dec
sbb
mov
inc
xlat
mov
loope
mov
addr16
jbe
dec
xlat
nop
dec
inc
push
mov
adc
fbld
outsl
or
in
gs
jp
xlat
pop
dec
testb
pop
jg
outsb
push
dec
int3
es
jb
sbb
cwtl
int3
popf
in
sub
daa
nop
adc
pusha
ret
xor
add
adc
inc
cmp
lret
bound
fwait
inc
adc
movsb
mov
in
insb
out
inc
xchg
xchg
mov
andb
xor
fisttps
dec
ret
inc
mov
sub
push
or
imul
lret
sub
aaa
pop
dec
fiadds
scas
arpl
add
lret
jno
dec
daa
arpl
and
int3
push
in
and
cmp
sub
and
mov
pop
sbb
add
ss
movsl
push
push
mov
and
lea
add
ljmp
pop
mov
xorl
add
fdivs
and
lretw
mov
frstor
xchg
test
or
in
xor
mov
jo
sbb
sub
and
cmp
and
mov
xor
into
or
cmp
sub
insb
xor
sub
pop
and
pusha
add
pusha
sub
pushw
stos
xchg
pop
mov
and
adc
aaa
loope
dec
push
inc
push
testl
xchg
aad
mov
pop
lahf
jmp
sub
cmp
fmul
nop
inc
fdivs
movsb
arpl
pop
bound
cwtl
sbb
cmpl
inc
xchg
jmp
push
cmp
jne
popa
xchg
inc
xchg
out
mov
shlb
pop
dec
push
sub
mov
sub
xchg
mov
ja
pop
mov
add
iret
call
xor
shlb
xchg
adc
inc
mov
pusha
and
push
lods
sub
add
fldcw
adc
popa
arpl
addl
dec
es
testl
sub
mov
movsb
addr16
or
mov
es
scas
cmp
and
fsubrl
ss
daa
mov
or
andb
scas
mov
rcrb
cmp
out
sub
pop
aaa
in
test
std
imul
fs
popa
lods
add
jno
insl
sahf
sub
and
stos
ret
mov
push
push
in
lods
xlat
pop
and
cmp
jne
ds
or
add
or
imul
jbe
fisubl
inc
add
pop
or
ss
insb
in
jnp
dec
nop
adcb
mov
sub
pop
or
leave
inc
ss
sub
xchg
dec
push
dec
mov
add
bound
mov
iret
and
test
icebp
int3
popf
sbb
adc
dec
sbb
and
and
stos
dec
sbb
jle
es
lea
and
aas
imul
xor
mov
sub
sub
pop
cmp
add
adc
push
std
mov
test
and
mov
in
dec
arpl
xor
into
pusha
mulb
pop
movsb
xchg
xchg
sub
sbb
jae
mov
push
fwait
ljmp
setbe
pop
mov
sub
dec
mov
sub
pop
int3
bound
rep
data16
imul
lcall
xchg
and
pop
dec
xchg
mov
dec
and
adc
dec
lret
sub
rcll
fdivl
stos
fisttpl
jo
xchg
test
mov
cmpsl
or
dec
js
or
fwait
mov
xor
aaa
mov
mov
aaa
and
insb
gs
testb
in
inc
loop
adc
jle
mov
addr16
scas
jns
js
lods
dec
pop
push
icebp
jae
leave
addb
adc
mov
aaa
pop
cmp
mov
and
leave
mov
es
insl
sub
es
hlt
fnstsw
and
lret
popa
xchg
popf
xchg
pop
jnp
or
jecxz
inc
or
mov
test
sbb
imul
out
cwtl
xor
add
fistpl
fisttpl
lds
imul
lods
cmpb
cmp
or
incl
and
cmp
jno
lahf
mov
movsl
or
adc
add
push
jno
sti
sub
or
mov
inc
lret
jb
push
daa
cltd
jb
or
daa
aaa
jg
or
add
add
arpl
subl
add
or
or
add
fwait
add
and
aaa
jmp
add
insl
push
jnp
sbb
ja
push
fbld
or
add
cld
add
popf
jle
xchg
aaa
jne
imul
jne
xor
in
adc
add
dec
adc
sti
xchg
add
imul
add
pusha
add
add
add
and
pushf
out
fnstenv
sar
sahf
add
js
xchg
add
mov
stos
sbb
fbstp
add
pop
daa
or
add
fucomp
mov
fcomp
or
repz
add
jge
cmpsl
int
out
loop
and
pop
add
add
mov
add
aaa
or
or
or
and
add
sub
out
xor
push
sub
adc
inc
adc
call
inc
dec
sub
mov
mov
push
sbb
inc
jbe
jecxz
adc
js
push
push
dec
dec
inc
sbb
scas
jb
adc
push
pop
adc
outsb
fldt
dec
push
sbb
inc
add
add
add
dec
dec
dec
cmp
cmc
fimuls
push
dec
push
aaa
jne
and
jae
or
bound
jge
and
add
jae
pop
adc
mov
add
js
add
jae
fwait
pop
dec
add
and
int
lods
arpl
jnp
dec
jns
out
or
add
jns
jge
lods
popw
bound
imul
inc
test
dec
push
pop
inc
jle
push
dec
inc
jge
jo
filds
dec
add
jl
jle
out
mov
jp
push
jno
fsubrs
inc
hlt
repz
and
jbe
bound
xchg
ja
arpl
jge
outsb
sti
inc
lea
sbb
push
add
ja
es
sbb
testl
mov
add
insb
adc
dec
jnp
leave
bound
jl
jp
bound
mull
xchg
jno
test
or
outsb
xlat
insl
fucomi
xchg
xchg
and
fisubs
cmp
adcb
test
and
jnp
repnz
sub
xchg
adc
add
loopne
inc
cmp
out
or
scas
jge
jo
outsb
pop
pop
inc
pop
insl
js
jbe
outsl
add
jo
into
xchg
add
jb
int3
push
retw
lock
out
jo
pusha
ret
cmp
xchg
repnz
test
ljmp
rcr
fs
pusha
loop
test
push
stos
jp
jnp
xchg
outsl
movsb
cmpb
or
push
jge
sti
add
inc
ret
mov
movsb
addr16
test
xchg
mov
or
xchg
jge
arpl
cmp
std
dec
call
ds
push
ficoms
add
mov
ficoms
add
xchg
je
jne
repz
loopne
xor
repnz
pop
adc
lea
lock
shll
push
xor
je
out
adc
imul
dec
cmp
jo
mov
std
add
js
and
xchg
mov
sub
arpl
ljmp
sbb
push
cmp
inc
add
pushl
je
insb
dec
lret
mov
cmpsb
dec
movsl
adc
sbb
popa
cli
pop
negb
pop
add
andb
leave
cmc
add
std
mov
test
add
icebp
out
imul
test
repz
pop
inc
pop
icebp
add
and
data16
dec
sbb
ret
inc
or
jp
add
xchg
pop
addl
xchg
adc
pop
pop
repnz
xchg
pop
or
push
add
xchg
dec
and
push
push
inc
push
jno
data16
lock
jne
or
sbb
add
jb
cmp
xchg
jecxz
pop
and
jg
test
sbb
add
jae
inc
fs
in
jno
or
dec
inc
jnp
xchg
cmpl
and
incl
test
pop
push
js
add
add
add
sti
push
and
sbb
inc
imul
jg
jp
pusha
sbb
add
andl
popa
nop
test
es
push
out
jbe
out
jle
mov
jle
fcomi
js
jmp
and
inc
adcl
dec
adc
int
push
or
test
mov
sub
xchg
es
mov
sub
mov
in
test
inc
mov
cmpsl
mov
aaa
bound
movsl
test
mov
xor
push
xor
mov
or
xor
adc
es
leave
jp
add
mov
imul
jg
sub
nop
pop
shrb
mov
xchg
and
out
js
ds
pop
sbbl
cltd
mov
and
and
into
jp
mov
fcomi
or
sub
jbe
stc
inc
adc
dec
cmp
or
int3
jp
pushf
jb
pop
xchg
lret
std
adc
mov
sub
push
ja
add
orl
xchg
sar
jnp
mov
dec
addb
pop
cmpb
jle
inc
mov
imul
dec
add
cmc
push
rcr
addr16
lea
lea
xchg
movb
push
pop
and
or
gs
xor
push
or
or
or
xor
pop
ret
jnp
mov
add
adc
sbb
cwtl
gs
je
push
jno
nop
adc
or
out
mov
and
add
jg
in
daa
js
pop
inc
cwtl
push
sub
rcrb
shll
inc
mov
dec
lcall
cltd
cmp
mov
push
mov
lock
xor
inc
dec
addr16
inc
mov
add
xchg
ja
jnp
out
rcr
popf
xchg
pop
into
inc
sbb
add
mov
fdivl
sub
insl
inc
push
inc
ds
adc
cmp
sbb
fstp
mov
dec
adc
aaa
xlat
pop
popa
push
lcall
imul
sbb
ds
or
inc
mov
adc
add
mov
jb
or
or
and
sbb
mov
push
adc
pop
daa
sub
aad
pop
outsb
popa
jnp
sarl
dec
jbe
cmpb
hlt
lea
mov
out
push
popa
dec
dec
add
mov
and
stc
inc
jmp
cmp
xchg
inc
inc
push
dec
insl
push
out
jmp
incl
cmp
nop
test
inc
dec
mov
adc
sub
dec
sbb
in
push
inc
dec
push
xorb
dec
push
in
ss
js
mov
mov
out
xor
js
js
adc
idivb
and
add
adc
xor
stc
clc
shl
rcl
sbb
jno
xor
mov
jge,pt
pusha
sub
ja
mov
outsb
xorl
sbb
fcomps
inc
data16
insl
aaa
das
cs
dec
mov
and
sbb
int
outsb
or
inc
cmp
jecxz
mov
inc
inc
test
call
jno
das
jae
rcr
push
fidivl
cld
sub
arpl
xchg
jae
dec
jg
out
xlat
daa
mov
ret
sbb
jb
faddl
xchg
push
imul
js
cmpsl
arpl
push
sbbl
add
ds
les
addr16
dec
in
stos
dec
mov
push
arpl
addl
inc
jno
sbb
pusha
mov
sbb
ss
or
daa
fbstp
in
loope
mov
test
add
mov
hlt
in
vcvtdq2pd
and
jae
das
lret
int3
lret
mov
into
cmp
cmp
inc
jnp
loopne
push
inc
inc
sub
xor
jmp
es
icebp
pop
dec
push
push
pop
mov
test
inc
ret
and
jmp
lcall
mov
js
xchg
ficoms
add
insb
bound
jns
mov
hlt
imul
push
dec
push
xor
test
das
and
push
or
clc
add
lods
mov
outsb
or
dec
push
mov
sub
push
xor
fcomp
mov
mov
cmp
imul
xor
aam
xchg
mov
movsb
xor
in
popa
clc
push
jno
jg
repnz
dec
push
add
jl
mov
jae
xor
add
mov
push
and
fstps
xor
dec
daa
int3
daa
and
dec
mov
inc
sbb
inc
and
jb
push
or
clc
xchg
jb
inc
mov
test
arpl
outsb
dec
insb
and
add
or
adc
aaa
in
loop
loopne
test
push
stos
xchg
inc
push
sar
sbb
outsb
nop
inc
push
jge
push
out
dec
push
dec
gs
dec
lcall
mov
xchg
xchg
dec
icebp
aam
adc
add
inc
je
mov
add
or
sbb
dec
adc
lds
aaa
in
test
mov
push
test
sub
adc
mov
add
cmp
je
xchg
int
fadd
wrmsr
or
mov
add
ret
sbb
cmpsl
enter
xor
and
and
adc
and
lea
aad
sub
nop
sub
pop
pop
inc
mov
ljmp
pop
add
add
jecxz
sbb
push
add
imul
add
and
mov
add
adc
sbb
in
xchg
adc
lret
fiaddl
add
push
lret
mov
hlt
sbb
jb
inc
dec
test
sbb
pop
adc
je
fsubs
sbb
rcr
lock
sbb
adc
pop
jge
pop
adc
adc
cwtl
and
pop
insb
or
xchg
mov
mov
pop
nop
push
cmp
ljmp
and
inc
dec
dec
and
test
xchg
jnp
mov
jnp
mov
stos
add
adc
push
cmpl
fidivl
hlt
add
addl
cmp
mov
das
adc
idivb
add
jge
lret
inc
sbb
cmp
js
movsb
pop
fcoms
fs
and
cmp
jmp
mov
and
lret
enter
sbb
pop
fnstenv
addr16
push
dec
cwtl
sbb
aas
or
lret
mov
test
and
pop
and
mov
cs
mov
push
adc
xor
sbb
dec
or
push
push
subl
or
andl
sbb
or
or
cld
insl
in
push
nop
push
addb
xor
sbb
sub
enter
dec
pop
push
pop
lods
lds
sbbl
xorb
and
and
sub
test
movsl
xchg
push
adc
push
aam
out
mov
subl
dec
sbb
add
xor
mov
in
push
mov
add
clc
jge
pop
add
push
push
pop
inc
dec
mov
lret
lods
mov
add
add
add
cmp
ret
ret
test
cwtl
lds
sahf
movsb
mov
inc
mov
fwait
pop
jp
jg
adc
cmp
pop
adc
sahf
popa
sbb
or
or
je
push
push
xor
out
add
mov
push
outsb
movsl
or
hlt
ret
inc
mov
or
inc
add
or
mov
xor
push
sbb
mulb
mov
sbb
dec
add
insb
mov
pop
sbb
jl
push
and
mov
ja
push
cli
pop
mov
xor
xor
rorb
and
push
bound
push
add
sub
dec
dec
repz
ret
dec
lcall
cmp
inc
fidivrs
fwait
rorb
fs
xchg
add
lds
or
add
cltd
outsb
pop
jnp
dec
xchg
xchg
mov
push
out
popf
push
inc
jg
addr16
or
sbb
push
sbbl
jae
clc
fwait
cmp
xor
or
jnp
subl
adc
imul
sub
and
daa
arpl
sub
push
xchg
mov
jp
jge
dec
fmul
xor
and
add
pop
rolb
adcl
xchg
in
push
lods
in
adc
sub
xchg
out
jno
sub
push
or
popa
clc
xchg
mov
lret
dec
sbb
pop
sbb
add
mov
icebp
stos
add
je
aaa
dec
rorl
nop
jne
pop
ss
add
and
and
push
pop
push
mov
add
adc
add
inc
xor
lods
sub
and
mov
inc
jmp
mov
add
out
push
test
add
add
je
or
push
out
dec
jecxz
iret
gs
sbb
testb
add
pop
dec
adc
mov
fs
adc
jnp
lret
inc
jne
das
outsb
outsl
mov
xchg
sbb
inc
js
or
and
outsb
inc
push
xchg
or
jno
popa
jl
fcmovnu
fistl
adc
inc
mov
outsl
or
enter
inc
dec
add
add
pop
inc
sub
add
mov
add
sbb
or
add
adc
sahf
and
sbb
pop
out
insb
leave
ss
cmp
cs
xor
add
and
mov
push
sub
adc
xor
add
inc
inc
js
xchg
insb
fldenv
or
lcall
inc
inc
push
inc
xor
add
in
add
repnz
pop
faddp
inc
push
push
jbe
adc
mov
add
imul
repz
add
into
push
test
ds
xor
add
cltd
xchg
push
jae
cmp
add
leave
add
out
mov
mov
fisttpll
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
