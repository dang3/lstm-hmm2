jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
popa
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
mov
cmp
je
jmp
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
xor
divl
test
jne
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
mov
cmp
je
jmp
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
mov
cmp
je
jmp
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
sub
mov
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
push
mov
mov
xor
call
mov
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
mov
mov
mov
call
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
push
mov
mov
xor
call
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
lea
mov
push
jmp
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
mov
mov
movl
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
out
mov
not
mov
inc
out
mov
xor
mov
cmp
mov
sub
mov
cs
mov
sbb
mov
add
mov
adc
mov
push
fs
or
mov
hlt
jge
or
mov
insb
push
or
push
jo
mov
jge
or
loope
push
push
or
rcll
push
or
in
push
pop
push
or
call
push
or
stc
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
push
mov
hlt
ss
std
push
mov
hlt
ss
jp
or
or
push
mov
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
push
mov
repz
pmuludq
hlt
jl
or
xor
mov
push
mov
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
push
mov
mov
pmuludq
hlt
push
cld
push
mov
ret
xor
std
push
mov
ret
and
cld
push
mov
incl
add
repz
pmuludq
hlt
push
std
push
mov
ret
xor
cld
push
mov
jp
add
jl
adc
xor
std
push
mov
jp
add
ret
and
cld
push
mov
jl
add
ret
xor
std
push
mov
jp
adc
push
mov
ret
xor
cld
push
mov
incl
add
ret
and
std
push
mov
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
push
mov
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
mov
inc
mov
dec
movl
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
mov
mov
call
mov
cmpl
je
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
cmp
je
mov
subb
mov
mov
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
xorb
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
incl
mov
cmp
jne
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
cmp
jae
jmp
mov
mov
xchg
lea
mov
mov
inc
xchg
dec
xchg
lea
mov
lea
mov
mov
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
movb
cmp
jnp
mov
mov
mov
mov
dec
lea
mov
mov
mov
dec
inc
inc
mov
lea
mov
lea
lea
mov
xchg
dec
mov
mov
pop
ret
push
mov
add
call
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
call
call
call
test
jne
mov
jmp
movw
cmp
jl
mov
mov
mov
inc
dec
cmp
jbe
mov
mov
mov
mov
inc
inc
inc
mov
lea
mov
mov
inc
inc
inc
lea
mov
call
lea
mov
pop
ret
push
mov
add
cmp
jge
mov
mov
lea
inc
mov
mov
mov
xchg
mov
xchg
lea
mov
xchg
mov
lea
mov
dec
push
call
test
jne
cmp
jno
mov
mov
lea
lea
mov
mov
mov
xchg
mov
dec
inc
dec
mov
xchg
lea
xchg
mov
inc
inc
push
push
push
call
mov
pushl
pushl
call
xchg
cmp
jne
mov
mov
xchg
mov
inc
dec
dec
xchg
mov
jmp
mov
lea
inc
mov
mov
lea
mov
mov
mov
pop
ret
add
add
ja
add
add
data16
add
add
add
add
outsb
add
add
and
add
add
subl
je
mov
cmp
jne
lea
lea
mov
lea
mov
xchg
xchg
inc
dec
mov
lea
xchg
xchg
mov
lea
dec
mov
mov
mov
lea
call
cmp
jb
xchg
mov
xchg
mov
mov
mov
mov
mov
mov
dec
lea
xchg
mov
mov
mov
ret
nop
ret
lea
xchg
out
cwtl
js
bound
sub
add
add
add
add
mov
lret
mov
out
lea
xchg
cs
add
xor
in
lods
xor
pop
jno
rolb
add
popl
add
mov
das
icebp
dec
movsb
xor
mov
sbb
mov
pop
dec
add
add
shrb
ss
jne
rorl
mov
push
add
lahf
xchg
add
mov
stc
mov
jmp
add
sbb
or
jg
icebp
mov
push
push
add
jb
movsl
inc
lret
dec
sub
lods
add
addr16
add
pop
inc
dec
enter
jp
add
cld
add
push
loopne
add
add
add
rcll
xor
roll
add
add
add
cmp
sti
inc
scas
cld
add
xor
add
jl
sbb
dec
sub
mov
jp
pop
adc
add
add
add
ja
cmpsb
add
add
shlb
std
mov
adc
cmp
fmuls
push
lock
xor
outsl
sahf
das
add
push
mov
dec
js
mov
hlt
mov
sub
stos
ror
and
int
insl
mov
xchg
icebp
xlat
push
leave
shll
add
jnp
popa
add
out
mov
and
sub
push
add
clts
adc
jp
xchg
ds
in
mov
ret
add
outsl
push
ret
sbb
pop
cmpsb
fs
push
incb
pop
das
and
jmp
xchg
xor
lods
mov
xchg
fiaddl
fnsave
xchg
and
pop
loopne
shll
and
imul
sbb
cli
sub
inc
jge
cmp
add
cmpb
sub
add
add
mov
clc
ja
add
cld
add
and
in
add
add
mov
add
ljmp
dec
add
ja
inc
jne
pop
add
inc
add
popa
xor
adc
jp
out
popf
data16
addl
sbb
test
jp
add
add
and
cmp
mov
mov
pop
add
cmp
js
jbe
int
cmp
jmp
add
jecxz
add
add
mov
jle
or
mov
or
in
add
inc
fimuls
in
fiadds
cmp
xor
add
ss
push
add
add
add
mov
fdivs
pusha
mov
das
and
add
and
ficoml
int
inc
add
xchg
out
mov
outsb
add
cmp
pushf
fwait
add
add
xchg
cwtl
xor
iret
sub
adc
jge
imul
add
stos
dec
add
iret
sti
jp
and
xchg
pop
jno
jecxz
cwtl
add
aas
add
jns
je
int3
add
and
stc
out
add
jne
add
jp
add
push
add
icebp
ja
add
pop
sub
fs
in
pop
add
dec
bnd
jb
jb
add
int
pop
add
and
adc
pusha
pop
mull
repnz
xor
inc
add
push
add
cwtl
xchg
or
in
imul
sahf
xor
cmp
repnz
add
xchg
and
add
movsb
pop
add
add
jno
mov
adc
fdivl
add
in
addb
add
sub
out
inc
out
add
mov
pop
gs
arpl
cltd
pop
inc
add
test
mov
testl
add
push
imull
in
mov
pusha
sbb
test
xor
add
add
out
scas
sbb
dec
and
popa
cmp
jne
inc
sbb
stos
cmpsb
int3
scas
xchg
in
rolb
daa
jno
or
xor
sub
pop
cmp
ss
jg
dec
movsl
xchg
jno
lahf
sub
mov
mov
int
adc
xor
push
jb
mov
cmp
pcmpgtw
and
push
test
loope
shll
movsl
push
shrb
test
shlb
pop
cmp
aaa
fstps
mov
mov
dec
push
test
int
cmp
pop
pop
add
push
test
fsubr
daa
call
sahf
imul
test
mov
subb
stos
mov
movsb
push
mov
mov
and
adc
push
ss
sub
fdivrs
ficoms
fimuls
inc
xorb
fidivs
test
dec
js
into
dec
clc
clc
cmc
pop
leave
xchg
xor
pop
outsl
jno
mul
lods
enter
lea
sbb
add
into
or
lods
stos
and
push
xchg
push
cli
pusha
mov
out
cmpsl
imul
daa
stos
cmp
scas
and
pop
xchg
push
je
rcl
imul
in
repz
cmp
sbb
mov
mov
cmp
sub
aaa
and
in
inc
lcall
hlt
mov
aad
lret
dec
mov
bound
aas
sbb
in
inc
lods
les
std
mov
cwtl
out
gs
lea
jl
fistpl
lret
pop
aaa
jb
scas
std
fcoml
jnp
fcomps
mov
pop
mov
sub
les
push
fnsave
jb
mov
dec
adc
je
jbe
rcrl
push
std
cmpsl
clc
arpl
and
add
xchg
pop
jecxz
stc
inc
mov
pop
mov
push
mov
ljmp
or
jmp
fldt
and
fidivrl
ret
loop
mov
insl
call
stc
cmpsl
jo
ret
ljmp
popf
mov
adc
and
popf
les
adc
sub
mov
rclb
push
mov
fdivr
lods
aaa
xchg
inc
mov
pop
popa
sub
xchg
pop
stos
pushf
add
xchg
stos
pop
sahf
push
popa
out
cmp
insl
jo
add
mov
inc
mov
xchg
test
and
cwtl
movsl
xchg
sbb
daa
pop
mov
in
push
cmp
or
adc
movsb
xor
add
adc
xor
jno
xchg
dec
addr16
mov
push
xor
sbb
ja
jb
out
roll
push
fxch
mov
test
xchg
mov
adc
dec
imul
aas
jns
repnz
in
lods
cmp
out
repnz
sub
mov
clc
rcrb
jp
lods
outsb
mov
and
mov
fwait
inc
cli
jle
mov
in
mov
pusha
and
inc
fbld
les
jno
jmp
push
sub
jae
std
push
push
loope
mov
adcb
in
stos
out
je
adc
pop
imul
scas
movsl
fldenv
adc
je
iret
fs
ret
call
sti
inc
pop
push
hlt
arpl
pop
inc
out
xchg
cltd
add
or
fimull
xchg
sbb
cmp
pop
sbb
lds
push
rcrb
mov
lods
push
jns
dec
test
hlt
xor
mov
jbe
popf
adc
pushw
sbb
lods
inc
aaa
add
sahf
or
lahf
popa
add
adc
dec
jle
sub
xor
fwait
jecxz
scas
clc
aam
and
mov
jg
mov
pop
jecxz
dec
aaa
mov
mov
stos
enter
daa
jo
or
addr16
jno
stos
cmpb
cmp
fisttpll
movsl
fwait
adc
xchg
lahf
dec
xchg
stos
push
jg
shrl
les
mov
push
pop
fcomps
imul
movsb
pop
std
loope
mov
mov
xchg
and
gs
dec
cmp
pushf
data16
pusha
sbb
adc
and
push
mov
sub
fsubl
sub
out
pop
fsubrs
pop
lcall
jp
xchg
addb
push
mov
stc
inc
jg
mov
and
dec
mov
dec
addr16
push
push
adc
mov
rclb
aas
cmp
stc
fiaddl
testl
shll
lahf
or
pop
js
fimuls
mov
push
js
loop
bound
inc
add
add
into
mov
lods
xchg
cmpsl
xor
dec
mov
xor
inc
or
repnz
repz
fs
inc
into
pop
mov
sahf
adc
rcll
in
repz
lret
push
inc
sbb
stc
or
sub
and
jmp
rcrb
clc
cli
nop
movsl
add
dec
adc
mov
fldenv
push
les
mov
cmpsl
ss
push
xchg
aam
push
dec
dec
xlat
rcr
bound
dec
pushf
pop
ficompl
mov
into
pop
push
pop
addl
adc
jb
loop
dec
mov
enter
push
testb
xchg
cwtl
dec
adc
mov
bound
insl
subl
cld
jmp
xor
push
adc
mov
pop
lock
and
das
call
cwtl
jg
xchg
push
mov
ret
jno
adc
adc
js
into
mov
cmpsl
outsl
pop
mov
movsb
sahf
push
cld
cmp
je
jle
idivb
pop
pop
sahf
mov
pop
sub
shr
mov
sub
in
dec
dec
mov
adc
fucomp
pop
and
out
xchg
xchg
orl
into
popa
inc
sbb
imul
xchg
icebp
arpl
bswap
pop
in
add
push
cltd
xchg
lea
mov
mov
int3
test
aaa
or
outsl
dec
cmpsl
roll
mov
sbb
loopne
adc
sub
add
incl
cmc
xor
and
js
or
push
xchg
sahf
xchg
out
jae
mov
sbb
lods
pop
xlat
adc
dec
mov
push
or
add
icebp
inc
sbb
add
mov
push
jnp
mov
and
in
dec
mov
xor
adc
or
sbb
jp
mov
mov
dec
or
pop
jns
in
ret
into
pusha
mov
push
xchg
jge
es
sbb
mov
movsb
mov
pop
jns
push
mov
dec
stos
pop
int
and
addr16
insb
fs
imul
scas
or
inc
adc
cwtl
and
ret
cmp
aas
cmp
inc
and
arpl
pop
inc
inc
ljmp
push
xchg
pop
test
xchg
jge
adc
sahf
sub
vpminsw
sarb
mov
decl
leave
les
js
xchg
lret
movsb
fcmovb
jge
insl
mov
cmpsb
cltd
sbb
shll
rcr
add
pop
hlt
int3
flds
dec
in
int3
jb
cmp
sub
jo
jmp
fsubs
mov
jp
sub
repz
cmp
cmpsb
shlb
inc
in
sahf
mulb
enter
daa
outsl
inc
inc
cmp
sbb
jl
mov
push
lds
shll
xchg
addr16
sub
xor
push
cs
xor
ss
je
pop
pop
lcall
js
lea
mov
sbb
loope
vcvttsd2si
mov
xor
sub
adc
dec
adc
sbb
dec
das
and
and
mov
int
ljmp
push
fcoms
dec
sbbl
xor
aas
mov
sbb
sahf
mov
mov
jmp
test
jg
das
pop
mov
adc
dec
mov
jecxz
adc
les
adc
and
notl
and
sarl
rorl
lock
adc
scas
xchg
xor
dec
mov
shrl
adc
sti
push
sbb
cltd
add
mov
lods
mov
js
sbb
dec
or
cli
movb
std
jmp
and
insl
lea
gs
rcll
mov
lcall
xchg
pop
imul
jns
ja
xor
imul
cmp
nop
push
lods
sub
jmp
mov
sbb
sbb
cmp
aad
lret
xorb
dec
jae
jno
cs
fstps
faddp
daa
dec
out
jecxz
lret
imul
cmp
adc
push
sarb
adc
pop
lret
mov
ja
cli
cmpl
mov
aas
sbb
jb
inc
xchg
dec
add
and
sarl
inc
aam
std
cmc
add
and
mov
fiadds
add
test
lret
movsb
aad
mov
fistpll
mov
pop
mov
das
int3
sub
pop
xor
and
sarl
xchg
cmp
stc
dec
leave
or
cmpsl
outsb
and
lahf
icebp
jnp
das
cld
test
mov
push
mov
dec
mov
ja
in
sarb
lret
and
adc
dec
push
xchg
and
adc
adc
push
enter
mov
dec
stos
jp
stos
out
jb
xchg
cmp
pop
push
pop
inc
iret
movntps
add
iret
cltd
enter
or
mov
mov
dec
ja
pop
test
loope
xchg
ljmp
adc
cmp
push
adcl
cli
test
jmp
add
xor
xchg
daa
or
inc
inc
xor
mov
mov
add
mov
xchg
jmp
ja
aad
dec
cmpsl
fcomp
inc
xchg
or
add
dec
xchg
jne
shlb
icebp
and
mov
jns
pop
xor
repz
push
movsl
pop
sub
test
pushf
addr16
pop
test
es
mov
stc
lea
jle
pop
adc
pusha
pop
push
dec
fistps
notl
push
jne
xchg
out
push
jae
insb
pop
push
addr16
dec
popf
cld
add
test
stos
xor
inc
int
insb
iret
dec
pop
imul
scas
imul
push
push
jnp
out
iret
test
and
pop
jbe
xchg
inc
sub
mov
or
push
sub
fisubrl
pop
xchg
aam
mov
pop
ja
mov
dec
hlt
fadd
jo
movsb
rclb
vrsqrtss
test
adc
push
loope
mov
mov
leave
push
cmc
sbb
ss
xorb
int
add
decb
iret
repz
and
pop
xor
push
add
scas
mov
ret
and
hlt
and
movsl
arpl
movsb
mov
or
xchg
inc
cmpsb
push
movsb
in
in
test
dec
enter
daa
outsb
data16
jno
mov
jl
add
cmp
sub
stos
and
jo
lahf
xchg
push
and
stc
fstl
add
repz
lcall
add
dec
pop
loopne
imul
hlt
push
or
fwait
outsb
movsb
testl
add
dec
pop
dec
mov
sbb
add
sbb
and
scas
push
mov
int
xchg
jp
dec
int
pop
or
sti
jge
push
mov
bndstx
and
jb
sahf
cmp
jl
xor
dec
mov
ret
adc
cmp
cmp
outsl
nop
push
testl
test
mov
xchg
into
clc
repz
insb
aaa
sbb
or
outsl
push
sbb
loop
xor
stc
mov
push
fs
stos
cmp
cli
add
pop
xlat
dec
mov
or
stc
jne
xor
addr16
sti
push
pop
sbb
nop
in
mov
loopne
loopne
pop
out
lret
cmp
imul
dec
repz
jae
xchg
dec
fcompl
nop
push
stos
cmp
insl
xlat
iret
and
sub
in
mov
test
jmp
xchg
mov
sbb
decl
dec
shl
jb
inc
cmp
xchg
movsb
cmp
xor
jecxz
mov
orb
imul
pop
enter
sbb
pushf
mov
sbb
push
inc
inc
pop
popf
mov
push
aas
mov
aad
dec
ja
push
je
push
mov
testb
dec
std
pushf
bound
mov
fs
mov
in
dec
mov
mov
icebp
mov
mov
push
das
cmpsb
mov
dec
mov
cld
xor
ret
xor
pop
push
pusha
dec
hlt
mov
ds
icebp
push
enter
aaa
popf
mov
jns
addr16
outsb
popa
fwait
pop
xchg
and
mov
sbb
cs
in
fidivs
sbb
cltd
sub
push
clc
pop
mov
xchg
ljmp
ljmp
push
lods
aas
aas
ja
imul
xchg
jg
cmp
jp
sbb
movl
sbb
fsubp
xchg
test
push
or
aad
repz
add
fwait
mov
das
add
mov
jp
xor
mov
xor
xchg
daa
xchg
cmp
mov
or
mov
dec
pop
loopne
scas
cmp
lcall
or
sarl
mov
sub
dec
push
shlb
loope
mov
push
mov
jge
loope
mov
sub
sub
in
test
adcl
out
lods
cmp
or
sbb
sub
cmp
xlat
or
in
adc
fistpll
jmp
and
dec
jmp
mov
mov
or
sub
test
push
outsl
mov
or
insb
cmp
fwait
imul
scas
into
fdivp
push
mov
stc
adc
sbb
ret
adc
inc
cmp
add
or
or
or
sub
and
xchg
sub
sbb
and
pop
cmpsb
fiadds
notl
shlb
dec
repnz
jb
leave
mov
inc
hlt
adc
pop
push
xor
jle
sub
dec
sbb
pushf
or
adc
dec
lret
xchg
mov
xor
lods
xor
and
cltd
clc
movsb
inc
jmp
inc
push
lcall
insb
cld
mov
rol
daa
insl
or
cmp
rcrl
jno
imul
mov
or
movsl
mov
daa
and
adc
mov
test
xor
dec
jns
cli
movsl
stos
pop
dec
nop
popa
js
add
sub
pop
mov
jge
imull
bound
xchg
les
fbstp
mov
mov
lea
inc
movsb
and
jecxz
xchg
imul
adc
sub
aam
pop
push
mov
sqrtps
loop
fcoml
std
xchg
sahf
divl
test
push
fwait
adcb
xchg
jg
or
sbb
mov
data16
adc
ss
jl
cmp
sub
testl
nop
je
push
sub
into
fldt
cmc
xor
xor
pop
outsl
in
rep
loop
mov
xor
fs
daa
push
add
mov
cmp
dec
xchg
or
sub
pop
xor
add
incl
inc
rolb
adc
or
and
imul
sbb
adc
dec
mov
mov
jbe
stos
into
cmc
xlat
push
jnp
sub
mov
jp
out
sti
out
jmp
movsb
cmc
subb
aam
aad
ss
xchg
dec
xor
inc
push
mul
fxch
mov
les
mov
aaa
lea
or
push
jns
pop
jnp
ficoms
xlat
mov
add
pop
inc
mov
inc
cmp
fadds
and
aas
pop
lahf
insl
jb
pushf
dec
dec
out
loop
je
lahf
push
rcl
iret
hlt
testb
std
inc
mov
xor
mov
dec
sub
adc
lret
andb
hlt
pop
outsb
mov
mov
bound
test
mov
mov
and
clc
push
ret
push
aad
es
dec
mov
outsl
sbb
sub
cmp
mov
xor
addr16
or
shlb
lock
es
push
pop
cmp
frstor
and
cwtl
add
gs
ss
sti
lods
stos
lret
pop
outsl
hlt
out
cmp
pop
xchg
into
mov
psubsw
pop
cltd
ss
adc
mov
ret
dec
inc
addr16
test
lock
sbb
lahf
mov
fwait
jmp
std
xchg
add
movsl
js
jmp
in
xor
push
inc
or
cltd
movsb
xor
out
dec
xchg
mov
mov
or
ja
and
dec
cld
cmp
lret
sbb
jns
mov
inc
pop
dec
dec
leave
push
jne
add
mov
xchg
pop
out
pop
mov
jnp
inc
fstl
or
in
and
cli
out
sub
icebp
sbb
sahf
mov
mov
mov
fwait
adc
in
jle
add
in
dec
cmp
fistps
movsl
jmp
jl
jge
pusha
push
in
xor
popf
dec
mov
mov
scas
push
imul
add
imul
scas
xor
push
clc
mov
movsb
jnp
iret
loopne
mov
pop
in
add
pusha
arpl
inc
repz
push
push
adc
xchg
aam
dec
xchg
addb
mov
ljmp
pop
jns
jle
mov
mov
clc
push
lahf
leave
sub
hlt
pop
mov
cmp
insl
dec
mov
fldcw
sbb
aam
aaa
fisttpl
stos
lret
cmp
mov
sbb
dec
cmp
imul
imul
and
mov
adc
movsb
int3
pop
incl
loopne
cmpsb
pop
loope
in
push
aad
enter
daa
insb
xor
cmp
std
mov
jl
adc
cmp
sarb
cs
imul
rcr
lahf
les
push
lret
sub
test
aas
jno
xchg
aas
ret
in
dec
pop
je
data16
mov
push
push
lea
xchg
mov
and
push
sbb
outsb
push
call
sarb
cmp
addb
dec
add
mov
mov
xchg
rolb
js
inc
jo
pop
aam
fstpl
cmp
inc
xor
xchg
sahf
lcall
xorb
jecxz
jo
outsl
mov
inc
mov
mov
jge
adc
xor
fsub
xchg
ljmp
push
ja
ljmp
push
or
cmpsl
into
mov
je
xor
iret
push
loop
rorb
stc
and
xchg
fs
imul
sub
insl
lods
sub
insb
push
out
fwait
lods
cli
pop
je
xor
push
out
jle
idiv
scas
jne
xchg
fnstenv
loopne
int
pop
sub
dec
adc
xor
adc
repz
leave
xchg
into
xor
sbb
in
test
dec
push
js
insl
mov
push
in
pop
data16
stos
js
jecxz,pn
xor
sbb
mov
inc
addr16
fcos
outsb
cmpsb
les
add
jecxz
sbb
je
push
lea
and
inc
fcmovnb
rcll
hlt
pop
cs
adcb
lret
or
fldt
pop
jecxz
xchg
inc
faddl
movsb
fwait
aas
clc
push
sbb
and
out
je
cmp
shll
jl
testb
adc
mov
jne
mov
dec
push
dec
nop
sbb
mov
or
mov
sub
lock
push
das
fs
adc
adc
gs
adc
sbb
lods
mov
dec
insl
inc
negl
cmpsl
imul
int3
xchg
lahf
icebp
add
sarl
mov
lods
mov
aam
and
sub
lods
aam
insl
das
mov
xchg
sbb
mov
cld
clc
shl
mov
jge
push
ljmp
in
adc
xor
out
fwait
stos
gs
or
shrb
cmovs
lds
mov
cltd
insl
sbb
jmp
and
into
repnz
push
addl
arpl
pop
pop
push
pop
setnp
jp
push
insb
shlb
inc
dec
sbb
rolb
mov
psubsw
arpl
xchg
jns
jg
insb
mov
ret
repz
lret
dec
sbbb
jmp
mov
dec
xor
pop
jne
xorb
jecxz
out
cmp
clc
sbb
in
or
fstl
adc
mov
sbb
jp
and
mov
xchg
inc
mov
push
mov
jle
vpmulhw
out
pushf
pusha
sub
in
leave
push
ret
outsb
xchg
inc
sub
jae
adc
popf
jno
mov
push
in
jae
stos
outsl
mov
insb
adc
mov
scas
xchg
sti
inc
push
aas
mov
dec
iret
aas
sbb
lock
xor
mov
inc
dec
data16
das
inc
testb
push
xchg
mov
fiaddl
pop
insb
sbb
loopne
pop
add
pmaxub
jle
add
or
es
imul
hlt
test
rcll
mov
mov
cmpsl
jge
outsl
pop
sbb
mov
or
lcall
test
jo
lret
je
push
pop
push
and
leave
push
cmp
lock
lds
cmp
push
daa
imul
cmp
jno
inc
or
cmp
pop
jb
push
dec
push
movsl
mov
and
push
sahf
out
test
pop
mov
xor
gs
subb
js
into
sti
pop
popf
iret
fisubrl
jo
loope
pop
daa
sub
or
sub
ror
int
fstl
xchg
dec
xchg
xchg
xor
je
mov
cmpsb
and
lods
ljmp
lahf
cs
push
mov
lcall
xchg
jmp
jle
xor
jbe
pop
cld
push
dec
int3
pop
jg
div
mov
inc
mov
stos
pop
mov
pop
je
add
mov
fsubs
xor
lret
loope
xchg
int
mov
xor
in
xor
mov
sub
sbb
stos
scas
pop
loop
outsb
dec
stc
xlat
fabs
fs
add
add
fwait
in
adc
add
dec
sub
xchg
xorl
test
test
or
loopne
mul
clc
loope
pop
dec
addr16
mov
mov
adc
mov
call
sbb
and
leave
xlat
mov
fsubl
lds
cs
jnp
aad
negl
dec
out
pop
lahf
inc
jp
ret
lret
push
jecxz
jecxz
ret
ja
or
mov
xor
pop
loope
ret
adc
xchg
pusha
fistpl
mov
inc
dec
and
jbe
xchg
or
jb
dec
dec
fdivr
fidivl
shll
es
dec
sub
xchg
rcl
cwtl
out
in
mov
inc
outsl
mov
mov
dec
jnp
sbb
pusha
call
mov
negb
das
inc
cmp
mov
popf
jg
ret
cmp
adc
mov
cmpsb
pop
dec
mov
les
call
pop
icebp
xlat
xchg
into
cld
adc
mov
loop
shlb
mov
pop
repz
rolb
fnstenv
sub
mov
and
loop
and
clc
push
pop
sahf
xchg
mov
xchg
popa
mov
test
mov
xchg
xchg
push
pop
cmp
rcrl
cmp
add
cmp
xor
mov
cwtl
out
dec
adc
out
test
dec
add
out
je
sarl
inc
ret
pop
sub
emms
fldl
fistpl
xor
fisttpl
fiaddl
jno
sub
mov
fnsave
pop
jle
ja
jl
dec
jae
faddl
or
or
inc
out
sbb
xor
adc
jne
imul
bound
inc
jns
sub
addl
fsub
pusha
jnp
sub
xchg
es
sub
mov
scas
push
mov
mov
jle
jnp
in
hlt
sub
push
mov
xchg
pushf
mov
jmp
adc
sbb
jae
daa
popf
cwtl
cmpsb
mov
cmp
adc
stos
cltd
sbb
popf
int
insb
jnp
clc
imul
cmp
xchg
adc
or
popf
daa
ret
mov
inc
pop
xor
arpl
jmp
stc
jne
or
jnp
inc
inc
adc
lahf
xchg
xor
ds
xor
or
rolb
dec
mov
sahf
mov
leave
pop
push
pop
hlt
repz
sbb
fcoms
gs
jl
nop
cltd
nop
add
xchg
jle
jo
xchg
orl
jo
xor
loop
outsb
into
popa
cmp
xor
adc
and
insb
enter
daa
push
cmpb
jno
jno
imul
test
and
je,pt
movsl
lds
and
cmp
push
jno
xor
and
icebp
push
inc
fnstcw
ret
js
nop
xchg
pop
fcoml
cmpsl
push
or
ret
sub
es
sub
sub
xor
inc
shlb
sbb
addb
jp
add
lods
adc
sahf
xchg
xlat
push
lcall
sub
arpl
shl
sub
out
je
xchg
push
mov
pop
scas
sub
loopne
sbb
push
jno
mov
mov
xor
dec
daa
ss
push
cmp
pop
jmp
testl
jecxz
sub
push
and
into
test
in
je
arpl
xchg
mov
mov
mov
fs
lret
nop
push
data16
out
mov
test
out
cmp
cli
lds
xor
mov
jg
sbb
test
out
loopne
or
push
mov
xchg
imul
push
repz
xchg
push
push
or
pop
enter
xchg
imul
adc
in
xor
mov
test
mov
dec
dec
loopne
inc
lea
fldcw
inc
les
jmp
jp
test
cmp
jae
xchg
jg
adc
dec
pushf
popa
pushf
xor
lret
pop
sub
pop
inc
movntq
ss
cli
jb
sub
dec
push
sti
sbb
push
rol
mov
xor
cmp
movsl
mov
xchg
xor
mov
es
data16
sub
iret
repz
pop
sub
das
and
push
mov
sub
ret
lret
pop
fs
mov
mov
xor
xor
icebp
cld
ds
nop
mov
add
loop
mov
adc
mov
pop
sub
adc
mov
mov
push
movsl
sbb
fst
cli
xchg
clc
dec
imul
ljmp
dec
lods
jmp
sbb
popa
popf
loopne
fwait
mov
rorl
inc
add
mov
jmp
fnclex
or
mov
fwait
out
testl
fsubr
xchg
ljmp
adc
xchg
pop
insb
lcall
push
mov
testb
or
std
ror
xor
in
popf
xor
xchg
js
and
mov
cmp
arpl
lock
dec
data16
pop
inc
jns
rorb
inc
mov
and
mov
ret
stc
inc
aad
cld
fwait
adc
in
out
orl
nop
sub
pop
insb
addr16
push
push
jp
cmpsb
dec
mov
out
stos
mov
cmpsb
push
jle
and
in
pop
push
pusha
popa
push
lret
mov
or
daa
dec
je
fstp
dec
jae
sub
push
ss
ss
imul
stos
or
or
mov
xchg
insb
out
inc
imul
push
scas
pop
call
pop
adc
and
ret
ljmp
push
daa
arpl
fcmovnu
or
idiv
mov
jle
xchg
xchg
mov
out
cvtdq2ps
dec
fidivrs
in
adc
sub
sbb
push
mov
icebp
das
scas
leave
mov
mov
repnz
aam
jbe
into
jge
dec
pop
sbb
inc
fnstenv
cmp
js
orl
add
out
pop
fs
dec
xchg
push
popl
loopne
sbb
and
pop
mov
cmp
push
movsb
insl
mov
test
in
inc
in
or
sbb
imul
icebp
jno
mov
jl
fsubrs
ds
and
movsl
int3
scas
pushf
and
ficompl
inc
sti
fildll
lock
scas
jp
push
jge
pop
jmp
out
pop
sbb
stos
push
push
mul
fsincos
or
sbb
sub
xchg
adc
dec
jge
xor
jg
sbb
fldl
and
push
popf
mov
add
mov
cmc
pop
push
mov
xor
shlb
mov
sahf
adcl
adc
lods
sbb
icebp
fnstenv
or
icebp
mov
or
mov
or
push
fcoms
hlt
testl
fildll
mov
arpl
into
cmpsl
adc
dec
mov
leave
outsl
imul
stc
inc
adc
fs
push
add
repz
and
lods
loop
repnz
out
dec
rcll
cli
clc
mov
xor
gs
inc
arpl
mov
adc
gs
xchg
loopnew
inc
xlat
pop
mov
jno
pop
lods
jo
and
mov
push
fisubrl
sbb
xchg
inc
cmp
or
cmp
dec
pop
mov
fwait
popf
lahf
jmp
mov
or
rcl
lock
nop
mov
push
popf
fldenv
adc
adc
mov
lea
iret
cmp
push
sti
clc
pop
inc
stos
ljmp
js
loope
pop
int3
cmp
inc
sub
or
ret
lret
je
or
notb
pop
std
fisttps
movsl
mov
outsb
test
jl
jg
dec
lock
push
pop
js
lods
lret
enter
mov
loopne
add
cmpsb
mov
xchg
cmp
and
push
mov
cmpsb
or
insl
cld
scas
sub
aaa
les
gs
fdiv
test
jae
imul
out
sub
cmpsb
mov
xor
inc
shrb
or
mov
push
or
cld
xchg
clc
test
adc
add
mov
stos
adc
pop
out
les
push
cmp
fildl
lds
cltd
adc
fldl
adc
xchg
pop
mov
repnz
stc
xchg
jb
shrl
or
rcrb
push
rcrb
adc
push
lcall
push
enter
pop
lods
mov
movl
mov
hlt
das
jp
push
dec
dec
pop
mov
inc
adc
ds
pop
mov
fldcw
dec
jne
arpl
cld
dec
mov
bound
or
in
shrl
out
sahf
les
mov
frstor
lods
mov
jbe
mov
push
mov
jnp
les
push
shll
cld
int3
das
fistps
gs
xchg
inc
sbb
xchg
test
loopne
mov
arpl
out
scas
mov
stos
loopne
stos
jg
std
and
and
inc
imul
arpl
adc
ret
adc
ret
pop
iret
pop
scas
mov
pop
sarb
outsl
lret
cwtl
data16
mov
or
jno
or
loopne
fisubl
mov
sbb
xor
data16
sub
mov
inc
loope
leave
add
mov
push
mov
aaa
sub
mov
aaa
cli
dec
rorl
aaa
roll
push
imulb
inc
iret
leave
dec
div
pusha
push
jb
pushl
jae
daa
scas
lock
das
cmp
inc
popa
movsb
clc
pusha
dec
inc
and
mov
enter
daa
push
mov
jno
and
lcall
mov
ds
push
mov
ret
mov
inc
adc
push
cs
mov
mov
leave
xchg
iret
pop
adc
pop
pop
pop
fldcw
push
mov
sub
sub
mov
es
xchg
push
mov
into
repnz
sbb
in
cmp
mov
testb
cmpsb
jno
rolb
lcall
mov
sbb
imul
pushf
out
sbbb
sbb
andl
cmp
ret
adc
pop
ljmp
fcom
nop
cltd
test
jne
rcrl
mov
inc
pop
or
dec
jmp
cmc
push
mov
and
dec
addr16
loop
jle
stc
cld
movsl
push
add
fs
xchg
lods
leave
adc
inc
jmp
cli
sub
xchg
xor
fistpll
mov
mov
gs
push
push
loopne
xchg
mov
daa
les
sub
xchg
imul
ret
addr16
sub
jp
int3
cmp
push
rcl
out
sub
aaa
push
mov
push
pop
sub
jo
outsl
mov
in
jge
push
dec
or
aaa
inc
mov
mov
les
jecxz
inc
adc
sub
lea
cltd
repz
iret
movsl
inc
pop
cli
mov
adc
daa
mov
sub
fwait
pop
outsl
push
popf
inc
ficomps
insb
inc
inc
jns
aas
je
lds
ret
ljmp
aad
negb
inc
sbbl
enter
das
jle
loope
xchg
dec
cmp
stos
lret
lods
sub
mov
jmp
lock
cld
das
loopne
aas
mov
dec
hlt
sbb
sar
jmp
jmp
insl
jecxz
es
cmpsb
lcall
cwtl
mov
icebp
pop
movsl
ret
enter
sub
and
adc
fcmovnbe
adcb
aam
rcr
mov
lea
push
sub
and
movsb
clc
mov
cmc
stc
ljmp
add
lock
daa
pusha
adcl
push
clc
pinsrw
fcomps
cltd
dec
pop
and
mov
mov
push
push
test
mov
xchg
jge
sbb
incl
sarl
hlt
fwait
aam
js
clc
push
incb
sub
dec
cmp
enter
or
scas
cmpsl
xor
lods
mov
push
adc
push
mov
mov
dec
dec
and
inc
cmpsl
imul
or
and
imul
das
jne
jne
mov
icebp
xor
bound
setb
in
xchg
in
pcmpeqb
jmp
lods
sbb
test
adc
mov
mov
mov
ret
jle
push
stos
in
pop
inc
pusha
xchg
cmpsl
popf
fbstp
sub
adc
mov
xchg
jae
xor
push
pop
push
mov
jns
mov
jmp
push
push
insb
mov
mov
movsl
repz
pop
pop
or
jmp
mov
ret
mov
inc
jp
lds
js
inc
add
push
dec
lret
mov
sbb
dec
jno
sar
faddp
sbb
cmpsb
rclb
mov
xchg
dec
leave
jl
aam
aam
das
push
or
jbe
adc
jge
mov
sbb
cmp
or
out
lods
pop
xchg
xor
jae
gs
les
push
dec
xor
into
in
xchg
scas
iret
stos
out
daa
adc
cmp
je
inc
mov
js
ljmp
enter
daa
addr16
push
jno
mov
jl
sub
ds
mov
and
lea
ljmp
push
xchg
cmp
mov
fstpl
xchg
pop
dec
and
cltd
in
push
push
push
cs
sub
add
pop
dec
cmpsl
adc
add
sti
repz
pusha
and
sub
add
or
lret
outsl
jg
mov
inc
in
sub
aam
lcall
cli
fcoml
inc
movsb
sahf
leave
ja
test
mov
jg
cld
jnp
or
mov
cli
in
mov
or
pop
ss
das
add
testl
mov
mov
decl
mov
fwait
push
xor
push
in
imul
stc
mov
xchg
xchg
xor
leave
sub
mov
jle
out
mov
cli
pop
mov
cmp
and
test
lahf
gs
stc
in
loopne
cld
push
pop
outsl
jae
ljmp
or
sbb
out
inc
add
popf
jne
sbb
or
rcl
push
cmp
lods
xlat
test
insl
cmpsb
js
jno
and
push
sbb
rorb
aad
fs
nop
pop
jo
dec
imul
fsts
lahf
sbb
jg
inc
jecxz
sti
add
lea
bnd
dec
aam
pop
lods
push
aad
loope
xchg
pushf
bound
stos
pop
adc
popf
inc
gs
inc
pusha
pusha
pop
aas
adc
sbb
mov
je
xor
mov
std
sub
les
mov
cmpsl
imul
mov
jbe
sbb
dec
mov
in
mov
adc
sub
mov
push
sbb
leave
jge
ret
js
mov
lods
inc
aas
insl
lret
dec
mov
lods
or
icebp
xor
cld
mov
lahf
js
outsb
dec
add
pop
ljmp
outsl
ljmp
out
ljmp
xor
push
out
adc
fisttpll
dec
clc
cli
add
inc
ljmp
aam
sub
mov
out
mov
pushf
push
out
cmpsb
out
and
add
mov
push
test
int
rcr
xor
scas
das
ret
cld
sub
mov
das
ficomps
push
fwait
add
push
out
jno
inc
push
or
repnz
add
xor
add
mov
test
divl
push
shlb
arpl
dec
aas
dec
fildl
cmp
rolb
lahf
adc
mov
sub
xchg
adc
mov
lcall
mov
lret
out
xchg
or
sbbb
addr16
jmp
dec
mov
xchg
mov
jno
pusha
jle
xlat
out
push
jecxz
xor
call
jmp
ds
jae
lret
cmp
jg
lret
xchg
aas
push
push
sub
js
stc
or
xor
adc
insl
push
mov
pop
popf
iret
sbb
in
dec
push
lods
pop
cs
xor
arpl
dec
or
addr16
mov
push
cmp
stos
xchg
mov
ficomps
cmp
pop
out
pop
inc
fisubs
xor
test
cmpsl
shrb
mov
ljmp
hlt
pop
xor
cmc
jbe
mov
mov
ds
js
adc
pop
movsl
test
inc
out
int3
sbb
or
aam
jecxz
cmp
xor
sub
and
mov
add
push
fcompl
cmpsb
insl
js
in
mov
in
daa
data16
idivl
gs
pop
loopew
push
adc
xor
add
sahf
and
fadd
lahf
jle
jbe
mov
test
mov
imul
pop
dec
jle
cwtl
popa
xchg
fdivrs
loope,pt
jge
sub
in
sub
jle
outsb
mov
sbb
fcoml
push
je
xor
inc
sbb
cmp
jl
and
xchg
xchg
push
cmpsb
shl
loop
and
cmp
pop
into
and
adcl
inc
cltd
pop
sbb
push
or
stos
js
adc
and
mov
mov
push
mov
mov
mov
ss
mov
dec
jae
fadds
mov
inc
push
repnz
cltd
rorl
inc
or
mov
into
adc
xchg
xor
dec
jle
push
dec
shl
decb
lret
fs
xchg
add
dec
lods
xchg
ss
mov
mov
jae
xchg
dec
addr16
test
or
enter
test
inc
add
loopne
je
pop
out
outsl
adc
mulb
or
adcl
adc
mov
adc
sbb
inc
sub
dec
sub
sub
mov
fmull
jmp
test
cs
mov
mov
sbb
sbb
mov
jecxz
rep
movb
mov
and
add
xchg
pop
pusha
or
cmp
push
pushf
or
pop
pop
mov
sub
inc
jnp
in
mov
sti
jb
rorb
roll
sbb
std
aam
xchg
cwtl
xchg
shlb
push
push
xchg
adc
in
sub
push
mov
xlat
out
dec
sbb
sahf
fdivs
mov
mov
lds
insl
mov
insb
dec
pushf
sbb
cmpsl
gs
mov
or
mov
ljmp
mov
or
pop
mov
mov
adc
out
cmpsb
aam
cli
jae
push
mov
xchg
fnsave
cmpsb
clc
xor
xchg
xchg
ljmp
lea
in
out
in
repnz
mov
adcb
dec
jb
adc
fiadds
mov
dec
dec
push
out
pusha
test
fisubrl
insl
xor
shrl
sbb
in
xor
mov
add
jns
and
or
scas
xor
stos
jmp
mov
mov
mov
and
out
dec
xor
cli
inc
aad
stos
or
xor
dec
xor
jne
push
mov
jo
out
jne
sub
push
adc
mov
mov
lret
pop
jbe
out
cmp
or
cmp
jnp
xchg
int
jp
sbb
mov
and
xchg
push
ljmp
jne
lds
add
jae
mov
push
inc
mov
popf
pop
jns
mov
addr16
lret
stos
fdivr
pop
and
mov
subl
out
scas
out
dec
push
jmp
dec
iretw
jns
daa
ret
xor
xor
arpl
push
sbb
loop
push
inc
lea
fistl
arpl
gs
push
and
push
cltd
pop
lds
mov
rorb
jnp
cmp
mov
push
xor
test
mov
sub
jge
stos
aad
hlt
lcall
dec
ljmp
pop
or
inc
pop
scas
push
sbb
mov
test
scas
lea
cmp
fldenv
ds
lock
sbb
movsb
mov
enter
daa
gs
std
cmp
aas
jle
adc
cmp
movsb
and
movsl
call
movsb
rcrl
nop
xchg
mov
push
sbb
xchg
cmp
adc
js
pop
aad
pop
adc
xor
and
jp
pop
rclb
pop
cmp
shlb
mov
sbb
aaa
add
inc
std
and
add
push
test
sub
sti
push
lcall
int3
fsubr
sbb
inc
sahf
ljmp
pop
push
jg
pop
pop
mov
js
mov
fnstcw
adc
jns
ss
xor
add
cli
testl
outsl
and
mov
fcmove
or
fs
repz
fdivp
imul
outsl
in
mov
stc
and
andl
add
sub
xor
sbb
clc
pop
shl
push
jge
les
cmp
adc
sti
ja
jae
lret
sub
or
or
lcall
adc
mov
adc
sarb
shll
and
cmp
xlat
push
mov
inc
mov
inc
jg
jmp
mov
cs
lea
aad
jae
nop
push
dec
addr16
sub
dec
flds
cltd
xor
dec
das
cmp
lea
sub
lahf
mov
pop
adc
adc
cs
nop
jg
jae
roll
push
aas
push
mov
jb
daa
or
sahf
mov
sbb
dec
mov
lock
jnp
cltd
cwtl
push
sub
mov
icebp
cmp
cmpsb
sbb
std
push
lret
cli
xor
bound
xor
das
jge
imul
fcomip
ja
xchg
mov
es
enter
cwtl
dec
xchg
cmp
fs
adc
icebp
loope
in
adc
aad
mov
insb
mov
mov
lods
or
sub
pop
cmpsb
aam
fdivs
je
sbb
cwtl
movsb
sbb
jo
fistl
into
mov
fwait
lods
add
inc
stos
rolb
in
push
sub
jo
push
movsl
mov
psraw
dec
cltd
out
xor
mov
xchg
xchg
mov
xchg
in
les
and
fstpl
loope
jae
cmc
or
jge
aam
sbb
dec
xor
or
adcb
mov
mov
loopne
dec
ja
out
pusha
dec
and
sub
mov
enter
push
pop
mov
dec
push
out
push
add
fcmovnb
sub
in
ret
mov
jb
mov
repnz
or
les
xor
mov
dec
or
rcrb
jle
mov
mov
push
xchg
xlat
xchg
mov
jmp
aam
ja
cmc
mov
push
add
dec
or
push
cmpsb
test
dec
and
xchg
insb
std
dec
dec
imul
push
xor
mov
iret
fdivr
sbb
jne
jle
pushf
mov
cltd
arpl
inc
aad
or
ds
or
jl
insb
and
cmp
sahf
sbb
xchg
das
pop
dec
data16
fisubrs
ja
shlb
dec
repnz
scas
aad
loope
mov
mov
jae
idivl
jbe
fs
jle
sbb
aad
or
and
jb
mov
bnd
mov
adc
xor
fists
scas
insb
push
and
sub
xchg
movsb
and
push
pop
movsl
aam
jae
scas
in
mov
daa
fs
cmp
scas
or
cmp
jl
popa
inc
cmp
fdivrl
inc
out
std
movsl
out
aad
and
andb
jb
push
arpl
and
jge
or
aad
fcomps
mov
js
inc
mov
push
pop
inc
loope
xchg
sub
ror
addb
adc
xchg
dec
jl
adc
dec
sbb
pop
out
and
mov
push
lods
pop
nop
int
pop
inc
sub
mov
lcall
inc
fcompl
mov
sbb
mov
cmp
push
pop
ja
pop
dec
nop
mov
xchg
adc
mov
divb
fdivrs
fs
sahf
aad
shll
push
or
and
into
cs
xor
ret
xor
ds
loop
insl
ss
fcomps
fs
pusha
jo
mov
in
lret
lods
gs
mov
stos
sub
inc
jnp
cli
testl
push
sti
cmpl
adc
loopnew
mov
movlps
sub
cmc
test
repz
in
xchg
out
mov
push
adc
cmp
mov
sub
pop
dec
in
mov
jne
and
inc
aad
nop
adcb
dec
push
inc
pushl
push
les
scas
pusha
mov
inc
lea
stos
dec
lret
ja
pop
adc
adc
sub
pushf
arpl
push
fnsetpm(287
mov
ret
xor
inc
mov
mov
lock
jb
ret
sbb
out
dec
rcrl
in
call
cwtl
or
lock
pop
cmp
cmp
cmova
imul
xor
mov
add
pop
into
or
es
inc
and
scas
sub
and
std
pop
insl
jg
or
out
or
fs
icebp
mov
mov
sarb
jbe
mov
int3
sbb
and
aam
xchg
int3
jae
mov
enter
sbb
fnstsw
jae
jne
in
ljmp
outsb
lods
insl
cmc
push
out
mov
inc
xchg
inc
daa
pop
push
adcb
cmovo
fcomps
subl
xchg
sbb
test
push
std
xchg
rorl
sarl
imul
outsb
iret
popf
fwait
nop
rol
push
test
adc
cwtl
push
pushl
mov
ss
cli
sti
xchg
push
insb
lods
mov
dec
or
in
inc
mov
jns
ja
jnp
dec
sbb
movb
jae
inc
xchg
dec
mov
xchg
add
test
in
xor
push
bound
sbb
out
in
push
jb
jmp
jecxz
sub
jno
dec
addr16
and
mov
bound
jmp
push
jnp
aam
jle
pop
scas
in
or
mov
push
xchg
popa
sbb
jmp
lahf
ficompl
push
enter
test
jle
push
in
xchg
stos
mov
js
insb
push
dec
jno
lods
mov
push
ja
fistl
push
pop
fs
aaa
sahf
mov
mov
rcrl
sub
arpl
push
pop
or
fcom
movsl
inc
mov
outsl
ficompl
sub
stos
sbb
std
insl
pop
jl
aaa
fimuls
lds
inc
dec
mov
jecxz
inc
leave
pop
inc
xor
add
inc
outsb
xchg
adc
jge
xor
sbb
mov
or
pop
cmp
fstl
dec
and
push
loope
mov
push
dec
pop
scas
dec
mov
cmp
or
dec
fbld
jb
loopne
lahf
pop
daa
arpl
xchg
cmp
cs
jno
pop
stos
jl
lds
mov
mov
imul
cs
fisttpl
or
ss
test
push
mov
sbb
cwtl
xlat
addr16
sar
xor
adc
pop
xchg
dec
jmp
jnp
xor
arpl
sub
and
sub
es
adc
insl
out
outsl
mov
sbb
lds
add
lret
xor
pop
movsb
mov
scas
aad
int
rorl
sub
xor
lcall
mov
inc
jns
sbb
xor
test
inc
push
andb
hlt
mov
leave
lea
mov
cmpsl
adc
push
ss
movsb
cmp
js
imul
xchg
out
dec
rorl
mov
add
into
mov
fists
outsl
mov
stos
jl
pop
cs
and
xor
xor
aaa
mov
out
repz
sub
cli
sub
inc
xor
ds
jo
sti
aad
and
adc
loopne
sbb
loopne
push
sti
pop
inc
mov
mov
adc
mov
test
cmp
dec
and
test
push
mov
sbb
pusha
sub
pop
fidivs
aad
adc
dec
out
cmp
jl
fldz
mov
les
jae
sahf
jbe
adc
call
dec
mov
pop
jns
repnz
add
adc
and
inc
int3
les
aas
popa
inc
jb
xchg
das
dec
xchg
cmc
mov
shr
jle
imul
rcr
std
leave
and
stos
mov
dec
nop
mov
lret
aam
daa
dec
rorl
inc
mov
add
lock
pop
das
cmp
pop
mov
fnstsw
or
ret
mov
xchg
mov
sub
cli
cmpsl
and
cmp
popa
sbb
mov
jp
scas
mov
jmp
pop
rcrb
pop
mov
mov
inc
sub
mov
fucom
mov
clc
out
cs
mov
fucomi
mov
lret
popa
outsl
or
mov
out
push
jne
xchg
mov
push
pop
mov
dec
add
lods
cmp
pop
insb
out
test
xchg
ljmp
test
test
ljmp
xchg
shll
push
pop
sbb
fwait
mov
jl
add
mov
ljmp
jle
or
lahf
or
mov
dec
inc
mov
push
inc
fs
mov
or
aam
lcall
mov
divl
scas
and
adc
mov
add
xchg
ja
sbb
out
out
sub
insb
push
mov
jp
adc
lock
sub
je
in
sub
pop
inc
pop
xchg
xor
ss
push
in
jae
pop
adcb
enter
cmpsl
jno
adc
cmpsb
xor
and
les
or
mov
es
bts
push
mov
xchg
iret
xchg
inc
in
fwait
xchg
sub
scas
hlt
inc
mov
jno
repnz
loop
adc
or
push
push
mov
or
int
shr
inc
xchg
call
cmp
pop
stos
jle
fsubrp
divl
rcr
stos
mov
ss
leave
leave
iret
xchg
cmc
hlt
dec
es
push
xchg
mov
loop
popf
iret
xor
and
mov
or
icebp
xor
mov
mov
dec
nop
movsb
jne
les
push
jo
pop
cmp
sub
push
cmp
xor
movsb
cmp
sub
lds
pop
dec
dec
enter
daa
bound
or
xor
jno
mov
or
cmp
ss
mov
and
fistpl
or
gs
jge
adc
cmpsl
push
mov
pop
cmpsl
pop
cli
push
lcall
stos
mov
loope
and
sub
inc
push
adc
dec
xchg
into
jmp
pop
sbb
cmp
add
lea
push
frstpm(287
push
mov
push
int
xor
pop
lret
lcall
sbb
imul
xlat
cmp
clc
add
dec
jg
inc
xor
jg
fdivrp
mov
mov
inc
mov
roll
leave
testl
fdivs
popa
icebp
testl
lret
cmp
sbb
int3
cmpsl
hlt
into
pushf
stos
push
cmc
rcrb
xor
outsl
addb
dec
sbb
stc
inc
mov
fs
sbb
mov
lods
xor
jbe
jmp
pop
jnp
pop
pushf
shlb
push
or
sti
test
mov
xor
xchg
gs
inc
hlt
loopne
pop
inc
pop
bound
adc
xor
in
cmpsl
adc
mov
repz
clc
sbb
fs
lea
xor
rcl
aaa
insl
sub
test
mov
mov
cs
aad
idivb
nop
lahf
mov
in
inc
and
sarl
jns
addr16
xchg
ljmp
adc
jg
sub
dec
adc
fildl
pop
pop
inc
pop
fiaddl
xchg
jmp
aas
cs
jb
xchg
xor
je
bound
imulb
stc
std
jo
out
sbbb
mov
add
orl
lret
inc
daa
push
mov
inc
and
dec
mov
xchg
into
jge
sbbb
cmp
jg
mov
jecxz
popa
in
mov
xchg
or
xchg
sub
mov
sbb
jb
mov
or
jb
outsl
sub
shrb
mov
push
mov
push
test
and
mov
daa
shll
popa
xchg
lods
inc
jo
stos
popf
add
jns
pop
xchg
sarl
pop
paddd
mov
dec
repnz
cltd
xchg
xor
test
jo
xchg
aam
test
sbb
xchg
js
cmp
ror
scas
pusha
pop
les
push
lret
add
into
pop
mov
cmc
dec
out
xor
push
or
push
mov
xchg
lock
mov
enter
jmp
push
ja
push
inc
dec
incb
enter
sbb
push
add
sbb
out
icebp
add
and
and
cmp
sti
pop
sti
sub
addr16
fisubl
test
ja
or
mov
mov
in
jle
mov
dec
pusha
cmp
fcomip
and
jmp
xor
sub
dec
outsl
cs
imull
stc
mov
arpl
xchg
stos
movsb
mov
je
mov
push
jb
mov
paddw
or
out
ret
in
pop
inc
and
arpl
jns
inc
adc
push
or
into
bound
fiaddl
xor
sbb
dec
or
mov
ficoms
mov
mov
mov
leave
inc
test
xchg
xor
push
in
ss
enter
dec
mov
aaa
xor
or
push
pop
add
mov
es
lcall
shll
lock
scas
or
dec
cmp
adc
sahf
inc
or
cmpsb
cld
xchg
dec
in
inc
out
pop
enter
daa
popa
call
cmp
jno
or
cmp
nop
repnz
movsl
add
add
or
imul
xor
push
push
jmp
pop
and
stc
pop
adc
loope
and
sub
jae
sub
dec
rclb
and
sub
enter
push
pushf
add
mov
sub
mov
ret
int
jno
sub
jns
lcall
and
cltd
xor
sbb
sbb
sahf
fwait
out
test
hlt
sbbb
jg
jle
mov
jmp
mov
cmc
adcb
lcall
ss
and
out
or
lret
xchg
sarl
mov
jg
sub
xchg
push
outsl
popa
dec
adc
stc
std
cwtl
adc
mov
dec
mov
pop
lods
sbb
in
push
out
adc
cli
nop
mov
xor
jnp
cmp
push
outsb
sti
xor
ljmp
addb
push
cld
pop
xorl
fistpl
repz
call
and
outsb
in
clc
xlat
add
push
mov
repz
insb
cs
jae
sub
nop
jp
repz
movsl
cmp
inc
cmp
mov
jecxz
sub
xchg
stos
fmull
mov
pusha
pop
fistps
adc
xorl
and
pop
pop
in
cmovne
outsl
cmc
aas
int
push
jb
int3
sbb
je
fwait
pop
rorl
jo
pop
and
mov
mov
mov
sahf
addl
imulb
mov
jl
lock
dec
aas
das
stc
fmul
mov
dec
push
or
rorl
es
ja
dec
cmpl
pusha
jnp
mov
cmp
lahf
pusha
mov
inc
add
and
dec
jle
pop
sub
rolb
dec
sub
and
pop
call
push
cmpb
fnsave
int3
clc
pop
fcmovne
xchg
xor
ljmp
out
scas
jmp
stos
mov
xchg
fmull
sub
minps
or
pop
imul
mov
jno
sub
lods
xchg
or
test
fsincos
xchg
xchg
shll
iret
clc
pop
outsl
in
fwait
sbb
add
dec
add
add
call
pop
or
out
xchg
aas
sbb
mov
mov
mov
int3
xchg
mov
dec
icebp
jecxz
inc
enter
add
cmp
dec
icebp
cmpsl
xor
jmp
int3
out
rorb
mov
jns
sbb
jbe
xchg
sbb
out
dec
cmp
bound
addr16
jp
aas
icebp
mov
cmp
jnp
inc
bound
cli
jmp
sub
pop
fists
push
icebp
xchg
fidivrl
in
add
jae
cmp
push
adc
stc
mov
mov
outsb
repz
adc
imul
scas
aad
cmp
mov
adc
adc
iret
push
xchg
mov
pop
js
rolb
data16
movsl
inc
pop
prefetchwt1
or
inc
or
xchg
xchg
fdivrl
pop
or
test
rorb
cmp
fdivrl
xchg
hlt
loope
add
shll
jge
mov
sbb
mov
xor
into
sbb
dec
outsb
push
test
mov
jno
mov
test
and
idivb
cmpsl
lahf
jmp
push
sub
loop
jg
push
in
daa
js
enter
daa
pusha
pop
jmp
jno
cwtl
fidivrl
jns
xchg
fdivrs
rcrb
movsl
or
movsb
lahf
cmp
mov
test
adc
int3
xor
into
loope
push
js
repnz
push
stc
jne
aam
ljmp
fsubs
outsb
push
dec
sub
sub
mov
andb
sbb
jg
sub
inc
push
mov
xchg
xchg
sub
rcrb
enter
lds
or
insb
or
inc
int
sbb
adcb
jbe
bnd
and
dec
testl
addr16
jp
add
stos
cmp
test
mov
lret
rol
adc
mov
or
stos
cmp
into
mulb
xor
imul
jo
cmpsb
stc
mov
aam
push
cmp
data16
lods
add
addr16
stos
dec
out
dec
inc
cli
ret
jp
xor
adc
cmp
xor
loop
xor
jp
frstor
pop
loopne
in
mov
fsubrs
adc
pop
jge
shlb
adc
mov
push
xchg
repnz
nopl
pushf
jbe
inc
enter
ljmp
pop
sti
xchg
fistps
push
cs
push
aad
in
out
push
inc
int
add
mov
dec
add
std
fadd
int3
or
jecxz
push
add
cwtl
fidivs
inc
pushf
or
push
hlt
and
mov
adc
fs
pcmpeqw
push
testb
cs
sbb
add
jb
cmp
dec
stc
inc
enter
sbb
fiaddl
divb
imull
cwtl
clc
int3
enter
fimuls
cltd
jns
dec
xchg
jmp
lret
and
jl
mov
xchg
push
lock
mov
fsubr
ja
cmc
mov
push
and
fdivl
inc
dec
mov
dec
jle
pop
cmpsl
pop
xchg
ljmp
lods
mov
mov
arpl
lds
call
lcall
mov
pushf
aam
push
inc
mov
inc
imul
sub
pop
xchg
pusha
clc
xchg
scas
seta
call
popa
mov
lods
sbb
mov
jnp
push
out
aas
mov
in
sbb
add
insb
cltd
add
inc
mov
mov
pop
fldt
pop
imul
shll
lea
cmp
adc
and
add
pushl
xchg
pop
xor
dec
or
xor
xchg
mov
adc
mov
xchg
dec
in
faddl
hlt
sub
inc
jne
loope
ss
aam
aad
xor
mov
int3
jne
scas
sbb
mov
nop
and
in
aam
andl
xor
jne
dec
or
mov
jp
bound
mov
cmp
jle
sub
in
hlt
or
outsl
dec
rcr
das
in
sbb
int
push
xchg
lret
adc
jae
nop
cltd
push
aam
pop
popf
inc
mov
loope
aas
stos
mov
lret
and
pop
insl
imul
scas
cmp
lock
jne
iret
mov
inc
ret
xor
inc
shrb
loop
sbb
mov
les
inc
xchg
pop
xchg
in
test
sbb
in
mov
cmp
ljmp
sub
mov
das
inc
fcmovne
xor
dec
hlt
sub
jl
or
jbe
dec
aaa
jge
negl
aaa
mov
cld
or
dec
loop
mov
ss
fst
push
push
insl
push
pop
xor
cmpsb
out
mov
and
int
movsb
fneni(8087
push
inc
sub
movsl
in
push
in
enter
daa
pop
xor
jne
add
jl
sahf
stos
cmp
fidivrl
cmc
lea
adc
push
and
mulb
lahf
push
mov
push
orb
push
ficoms
int3
movsb
into
jns
outsl
mov
js
adc
xchg
out
push
repnz
sub
adc
jae
inc
outsb
jno
cwtl
adc
fsts
jmp
cmpb
sbb
lret
dec
and
sub
mov
mov
addr16
inc
rcrb
lcall
test
out
cmp
fs
sahf
loope
nop
test
jne
xchg
mov
pop
mov
fcmovb
mov
aaa
cwtl
adc
mov
cmp
fs
or
lret
mov
mov
or
sub
into
inc
mov
cmc
adc
mov
outsl
pop
xchg
loop
test
mov
faddp
rolb
insl
jae
inc
in
lods
call
frstor
or
div
iret
xor
lret
lods
sbb
sti
xchg
int
popf
gs
fnstsw
cmp
call
adc
ljmp
addr16
push
sbb
in
ljmp
sub
mov
leave
sub
jmp
out
cs
nop
xor
stos
inc
pop
xchg
cmp
lret
xlat
pop
jo
cmpsb
sub
fwait
xchg
lea
clc
dec
movl
sbb
cltd
sbb
pushf
mov
xchg
inc
popf
pop
jle
cmp
aas
or
adc
dec
jo
jg
rolb
aas
shrl
push
das
std
gs
cwtl
mov
push
mov
sub
lret
xorl
mov
lret
xchg
cld
outsb
mov
lahf
mov
adc
lock
fisubrl
mov
mov
cmp
lock
cmpsb
insl
add
dec
jns
dec
cmpsl
pop
xor
add
cld
pop
or
sbb
loopne
and
cmp
pop
addr16
hlt
shr
mov
sub
loope
mov
int3
adc
nop
pusha
fldl
pop
xor
ljmp
imul
shr
jp
xchg
test
notb
or
push
cltd
cmp
test
xchg
mov
mov
sbb
xchg
xchg
cwtl
ror
jns
pop
fwait
jnp
jae
mov
pushf
add
pop
xchg
call
mov
dec
or
or
cmp
mov
call
fistps
aaa
xorl
mov
inc
notb
or
jg
mov
pop
dec
mov
imul
and
bound
test
lret
and
mov
xor
sub
pop
into
mov
jp
cmp
mov
jmp
push
jne
aaa
test
sbb
sbb
les
xchg
xor
push
xchg
sbb
insb
or
push
and
jno
std
out
leave
and
jo
imul
scas
fwait
movsb
push
push
fisubrl
iret
adc
and
out
sbb
inc
arpl
setge
testl
push
push
cmp
sahf
jmp
and
jp
pop
fbld
into
add
aam
mov
cmp
leave
stos
aaa
fcomi
ja
js
rcll
jo
pop
inc
arpl
and
sbb
mov
aaa
jo
jle
hlt
jl
add
dec
mov
je
push
dec
dec
push
les
push
adc
xor
add
scas
cmpsb
les
and
or
adc
call
lods
cmpsb
test
cmc
xor
sub
pop
xchg
mov
std
cmp
jno
sbb
push
cmp
sub
ds
fbld
rorl
lahf
jbe
das
push
push
in
call
push
test
push
outsb
jecxz
xchg
xchg
add
jo
arpl
rclb
push
stc
xchg
add
daa
sub
and
sub
mov
lahf
orb
add
fldl
push
mov
mov
sub
movsb
dec
pop
movb
sub
fsts
cmp
lcall
sahf
test
jne
lods
adc
mov
mov
add
lods
mov
pop
jl
idivl
repz
lret
jbe
inc
xor
mov
scas
or
adc
fsub
cmpsl
xor
jns
loop
ljmp
imul
out
lods
iret
xchg
rorb
dec
sub
in
lods
test
cmp
fnstcw
inc
cmc
xor
sarb
cmp
push
pop
fisubrs
imul
loopne
repz
jns
js
mov
cmp
mov
xlat
mov
pop
push
mov
xor
pop
jmp
jae
cs
jle
std
jae
nop
or
les
dec
in
inc
jno
xchg
add
adc
mov
mov
sahf
mov
and
cld
nop
cmp
lds
xchg
adc
push
ljmp
cmpsl
pop
int
xchg
inc
and
addl
fmuls
jb
stos
add
add
je
cmp
sarl
pusha
idivb
and
std
or
daa
cwtl
outsb
dec
xorb
clc
mov
dec
push
mov
mov
pop
mov
cmc
jae
scas
ds
das
xchg
mov
jo
stos
and
jmp
ret
jg
in
es
mov
insl
jmp
inc
repnz
pop
pop
xlat
mov
ret
cld
inc
cli
js
int3
sub
inc
and
push
fistl
xchg
cmp
mov
adc
aam
shl
lret
push
leave
imul
clc
or
rorl
loop
or
stos
pop
pop
ret
pop
xchg
mov
mov
cltd
cltd
outsl
mov
frstor
mov
cli
and
add
sub
and
outsl
sbb
push
jns
add
cmp
pushl
sub
mov
loop
xor
movb
pushl
out
pop
std
in
ja
xchg
or
inc
fistl
or
xchg
fisttps
lcall
mov
mov
insl
inc
icebp
loopne
dec
jns
pop
mov
addl
out
lds
sub
push
pop
addr16
lds
mov
cwtl
xchg
mov
in
ret
movsl
jge
fildll
loopne
push
aaa
aam
mov
movsl
sub
pop
notl
pop
xchg
xor
cmp
cwtl
push
pop
and
stos
jo
sbb
insb
ljmp
scas
incb
adc
inc
iret
jno
inc
ret
sbb
dec
in
inc
call
leave
les
cld
orl
test
mov
xchg
fwait
lods
out
sbb
pop
xchg
and
push
cmpsb
test
pusha
stc
loopne
jns
push
aad
test
and
cmpsb
push
and
xchg
jge
xor
aaa
das
arpl
or
popa
xchg
add
clts
dec
mov
adc
xor
pop
mov
and
test
cmp
adc
movsb
icebp
inc
push
inc
inc
jecxz
cmpsb
or
in
fsubrl
enter
daa
pop
jnp
cmp
hlt
pushl
push
inc
jl
subb
in
cmp
movsl
and
and
lahf
xchg
call
jns
sbb
add
xor
adc
mov
or
pop
cmovge
sub
cwtl
aaa
sub
add
sub
add
aaa
or
xchg
dec
push
rorb
and
or
or
inc
sub
popa
ljmp
sbbl
pop
inc
aaa
pop
lcall
mov
sbb
push
daa
sahf
daa
bound
pop
push
add
xlat
jg
and
mov
fwait
or
jne
adc
ss
inc
sarl
fidivl
fadds
rcr
inc
mov
mov
notl
or
xorl
xchg
loop
pusha
inc
stc
fnstcw
mov
addl
dec
je
lods
mov
lret
mov
std
lahf
out
adc
pop
push
aad
test
pop
sti
out
loopne
jecxz
dec
gs
push
push
loopne
xchg
sbb
adc
enter
jle
repz
stc
aam
daa
stc
mov
xlat
incb
sub
inc
mov
lahf
add
lods
ret
imulb
mov
xchg
aad
dec
xchg
nop
out
inc
dec
and
sbb
or
in
inc
push
jecxz
lahf
insb
mov
iret
mov
movl
adc
pop
pushf
adc
sub
insl
scas
inc
stos
bound
aas
dec
leave
add
mov
dec
pop
pop
sbb
rol
je
idivb
cwtl
std
mov
fs
sub
mov
push
mov
mov
mov
sbbl
inc
lret
jb
std
mov
push
mov
cmp
lock
shlb
daa
dec
add
icebp
bnd
push
ds
es
insl
sarb
add
leave
shrl
cltd
pusha
jb
insl
rol
jnp
stc
mov
movsb
mov
sbb
movsl
and
sub
repz
mov
dec
clc
dec
movsb
out
cs
or
data16
popa
stc
iret
test
sahf
inc
out
push
adc
jge
jge
fpatan
in
test
mov
add
ret
dec
mov
inc
test
cmpsl
ret
add
sarl
pop
sbb
cltd
fsts
mov
stc
xchg
add
idiv
adc
leave
xor
jmp
or
xor
arpl
imul
pop
mov
mov
and
test
or
ja
mov
cli
in
dec
jge
and
or
mov
or
out
dec
pop
add
jns
or
in
addr16
rcrb
out
sbbb
adc
or
arpl
add
ds
clc
nop
mov
inc
loopne
jle
jbe
in
aas
jle
inc
xor
fisttps
lock
sub
hlt
jae
sub
sbb
adc
dec
xchg
push
sahf
sti
cmp
filds
inc
insb
push
sbb
fldcw
push
sbb
iret
shlb
ret
popa
pop
push
repnz
cmpsl
arpl
inc
and
or
xor
push
fiaddl
test
sbb
adc
faddp
jno
ljmp
jecxz
repnz
cltd
leave
cltd
loop
hlt
or
bound
jge
and
sbb
stos
bound
stc
add
or
int
sub
mov
push
add
xor
mov
cld
scas
testb
js
push
cmp
repz
imul
enter
daa
pop
in
cmp
or
xor
jl
mov
cmp
fidivrs
pop
nop
dec
movsl
daa
xchg
jge
pop
sub
cmpsl
push
sti
dec
ljmp
lods
lahf
xor
or
js
jecxz
pop
dec
nop
push
and
loope
push
mov
sub
loope
lcall
shrb
sub
mov
jmp
add
std
mull
jo
cmc
push
call
push
pop
les
jle
test
push
fdiv
jg
sbb
pop
xor
lock
pop
jg
fadd
mov
leave
fimull
rclb
ss
aaa
enter
sahf
fcoms
inc
daa
lret
cmp
outsl
xchg
or
xchg
into
out
std
icebp
cmc
push
mov
outsl
mov
or
fs
push
add
cs
data16
jmp
add
cmp
cli
cmpsl
iret
xor
xchg
cmp
sar
sti
sahf
nop
paddd
cltd
xor
sbbl
sbb
push
adc
and
adc
jo
repz
lods
xchg
sbb
outsb
cmp
sbb
popf
and
mov
or
adc
aad
mov
nop
shll
add
inc
xchg
mov
outsl
add
clc
push
in
sarl
cli
movsb
ss
loop
push
call
ret
fstpt
pop
filds
pushf
mov
je
pop
adc
popa
inc
mov
aas
call
in
ja
aad
fidivl
mov
push
popa
mov
std
pop
xor
in
push
int
test
xor
pop
test
mov
mov
js
mov
in
lock
jbe
push
inc
test
fidivrs
xchg
ret
popf
data16
es
loope
insl
mov
in
dec
push
daa
cmpsl
pop
sub
mov
jo
mov
cwtl
pop
pop
mov
out
push
push
sarb
shlb
sub
add
dec
jns
mov
aam
insl
mov
ljmp
inc
lods
stos
aaa
mov
cwtl
xchg
jge
ljmp
xor
add
xchg
sbb
xchg
add
sbb
cli
test
dec
fiadds
imul
roll
popa
fwait
or
outsl
add
jo
mov
xor
xor
xor
push
mov
mov
sbb
xchg
decl
sbb
cmp
inc
mov
xor
mov
xor
mov
cltd
out
sub
bound
shlb
insb
popf
xor
inc
xchg
scas
andl
out
mov
sub
dec
cmp
mov
imull
xor
mov
div
stc
jle
js
in
and
fildll
loopne
jmp
testl
std
popf
loope
pusha
mov
fstl
stos
push
jbe
and
sbb
insb
shlb
scas
les
cmp
into
dec
adc
int
iret
das
and
and
sbb
inc
xchg
mov
inc
es
or
mov
insl
inc
sbbl
xchg
dec
inc
icebp
sbb
sbb
hlt
icebp
fisubs
lds
cwtl
rclb
movsb
bnd
pop
leave
adc
pop
push
mov
lret
mov
cs
test
aaa
lods
js
or
inc
stc
add
and
xor
jne
push
stc
jmp
shll
les
or
cmp
in
jg
pop
idivl
cmpsb
push
push
pop
in
stos
orb
addr16
dec
daa
pop
shll
xchg
addb
cs
cmp
movsl
stos
ds
push
and
push
popf
push
into
inc
imul
pop
inc
xor
mov
adc
movsl
out
js
push
lea
ret
sbb
adc
loope
sub
sti
aas
pop
sub
dec
test
std
mov
xor
addr16
and
jns
push
add
or
push
std
popf
int
scas
fadds
inc
scas
mov
push
jle
fcompl
xorl
mov
adc
decl
arpl
or
dec
ss
mov
mov
idivl
lret
mov
mov
rorb
aad
and
shll
cmc
xor
adc
fwait
int
loop
out
stc
inc
and
push
add
rcll
insl
mov
cmp
cmp
xor
sbb
sti
dec
add
sub
gs
push
fchs
test
out
cmp
inc
adc
stos
leave
imul
sbb
sbb
shlb
sub
xor
shr
jne
adc
mov
ja
shrb
jmp
pushf
cs
filds
inc
fldenv
mov
jecxz
and
cmpsl
scas
rorl
shrb
inc
cmp
pop
adc
dec
adc
std
rcrl
mov
fs
mov
dec
bound
xchg
popf
dec
dec
icebp
jg
sarb
shll
sbb
add
std
add
cwtl
lahf
loope
mov
push
push
mov
push
push
orl
fimull
add
mov
mov
data16
xchg
enter
clc
inc
ret
sub
iret
shlb
test
cmp
xchg
mov
inc
loop
cld
ret
enter
iret
dec
mov
mov
mov
out
jmp
pop
jecxz
pop
shlb
adc
cmp
aam
push
js
aaa
cwtl
sbb
fstpl
les
clc
mov
repz
ljmp
mov
xor
stos
es
mov
cs
les
in
push
xor
add
iret
test
test
push
outsb
mov
enter
xor
test
xchg
sbb
and
shrl
jg
pop
jno
and
aas
cmpl
mov
decl
xor
or
xor
lcall
repnz
sarb
fcompl
mov
or
mov
mov
jne
idivb
out
or
sbb
es
sbb
lock
pop
out
push
subl
mov
sahf
je
popf
mov
mov
movsl
mov
cmp
in
gs
pusha
jbe
cmp
lret
xchg
int3
andl
ret
jae
cmp
popf
or
loopne
sbb
jbe
leave
pusha
sti
and
sbb
daa
fcompp
push
mulb
jne
mov
mov
pop
ret
inc
or
sub
ss
push
add
adc
mov
orb
gs
add
push
aam
repnz
out
leave
xchg
aas
push
or
lea
jge
mov
sbb
jnp
aaa
insb
leave
mov
rorb
pop
pop
test
dec
or
into
push
fadd
std
xor
insl
jnp
scas
and
mov
cmp
dec
add
inc
dec
cmpsb
xchg
xchg
xchg
in
xchg
popa
cmpsl
enter
daa
pop
inc
icebp
cmp
push
sahf
jno
fnstenv
cmp
add
movsl
xor
pusha
cli
lahf
repnz
sub
nop
insl
push
aad
mov
jae
mov
js
push
push
pop
int3
inc
icebp
push
pop
aam
xor
loop
popfw
cmp
push
cli
dec
outsb
pusha
pop
push
adc
and
ja
xchg
add
mov
pushf
add
insl
mov
push
lret
int
sub
pop
ret
lcall
xchg
faddl
mov
dec
ret
adc
incl
sbb
jg
dec
stc
mov
ret
add
sbb
adc
add
cmp
or
xchg
cmp
sahf
rcrl
add
inc
push
popa
into
mov
out
clc
out
or
and
adc
loop
clc
stc
out
sub
outsb
add
test
lods
imul
out
jnp
cli
cmc
cmc
movsb
xor
mov
push
push
sti
cld
cmp
dec
cmpl
inc
xor
pop
pop
test
adc
jecxz
adc
push
shl
out
xchg
test
sbbb
fdivl
sub
xlat
fucomi
loopne
sbb
jns
dec
cs
movsl
aad
xor
dec
ds
stos
inc
mov
fcompl
imul
stos
lcall
call
sbb
pop
les
mov
adc
ds
pop
sbb
inc
rorl
cmp
jb
push
dec
ret
xor
dec
push
adc
add
pop
std
test
push
cwtl
pop
cmp
mov
jecxz
mov
sub
lret
mov
sub
mov
sbb
data16
dec
jl
and
stc
rol
adc
push
loop
insl
test
jp
pop
or
mov
push
pop
test
out
or
mov
xor
add
mov
add
call
sub
or
mov
jne
push
aad
int3
fldl
stos
clc
stc
int3
inc
xchg
jmp
xchg
ljmp
dec
lods
fwait
jnp
stos
adc
jae
xchg
or
xlat
push
push
clc
std
psadbw
cmp
icebp
pop
adc
xchg
pop
sahf
dec
ljmp
xchg
inc
mov
roll
pop
sbb
mov
loop
loop
ret
add
lret
in
pusha
pop
or
mov
xor
xor
mov
ficompl
jb
xor
push
mov
inc
jmp
and
mov
jno
es
jne
or
push
clc
push
out
jmp
cmc
jg
fidivl
mov
adc
sub
aas
sub
mov
jp
cli
jnp
je
xchg
mov
push
popa
je
pop
push
in
push
cwtl
pusha
adc
pop
fucomip
movsb
xchg
lahf
pop
sahf
jmp
lea
push
data16
sti
popf
das
dec
cmc
mov
pop
pushf
jbe
cmp
test
and
lahf
insb
xchg
push
stc
imul
hlt
scas
mov
mov
in
iret
in
test
mov
inc
adc
dec
arpl
push
or
cmpsb
incl
pop
mov
sbb
data16
stos
aaa
pop
push
shlb
stos
mov
int3
push
dec
mov
and
call
push
pop
pop
ret
jl
ficompl
mov
sahf
ja
mov
mov
out
mov
loop
ja
push
mov
add
enter
add
and
xor
cmp
cli
fiadds
xchg
adc
in
js
and
pop
dec
add
pop
aaa
dec
cmp
faddl
jl
cmp
ds
es
cmp
dec
and
pop
movsl
lahf
adc
stos
push
je
pop
test
mov
mov
mov
pop
ja
js
ljmp
stc
stos
and
dec
dec
xchg
sub
into
int3
sub
or
adc
sti
sub
and
adc
out
test
and
and
pop
int
lea
pop
inc
xor
test
lods
mov
fdiv
aaa
jne
jle
push
mov
call
xorb
and
or
mov
jl
hlt
mov
fildll
adc
sar
cmp
pop
hlt
idiv
xchg
int3
lret
arpl
xor
inc
mov
sarl
xchg
add
pushl
jg
pop
outsl
pop
sbb
jne
adc
fs
lsl
dec
shlb
add
mov
mov
xor
sbb
cmp
imull
outsl
out
gs
push
lea
add
pop
imul
idivl
xchg
inc
inc
rcrb
inc
xchg
pop
xlat
cli
jg
sub
jno
mov
dec
movsb
xchg
push
mov
jae
push
out
dec
popf
push
jns
rclb
fsts
add
add
sahf
lea
loope
call
inc
subl
mov
rcrb
jmp
cmp
test
inc
fidivl
mov
jb
xlat
scas
dec
cmp
ss
sub
testb
das
cwtl
adc
cli
fisttpl
mov
into
fmul
cs
xchg
xchg
cmp
das
icebp
mov
mov
add
mov
ret
dec
js
es
nop
push
dec
pop
movl
mov
cmc
repz
sbb
pop
mov
pop
push
cld
and
and
push
stos
rcr
popf
mov
aam
push
test
push
cwtl
jbe
clc
xor
sub
xor
popa
push
int3
je
push
xchg
xor
hlt
sbb
push
jmp
add
add
cmpl
adc
cld
mov
insb
xchg
fsubrl
test
mov
xchg
popf
push
rcr
fldz
pop
cmp
adc
push
test
add
shl
decl
loopne
cmp
cmp
and
mov
pushl
sbb
pop
movsb
sti
in
ja
test
inc
adcb
mov
pop
dec
dec
or
adc
mov
lds
enter
mov
xor
orl
pop
out
testb
ja
or
ficoml
mov
or
mov
add
sbb
popa
sbb
pusha
lods
into
fisttps
cmpsl
adc
jb
jmp
mov
xchg
pop
aam
jae
pop
repnz
sub
jl
arpl
and
test
and
daa
or
sbb
add
scas
in
xor
push
test
shlb
dec
je
ret
lcall
out
ja
pop
mov
ret
negb
push
add
sbb
adc
fistpl
call
in
lds
loop
shl
dec
mov
je
out
leave
jne
shl
cmp
push
stos
xor
test
and
jae
out
aaa
ljmp
add
sbb
lcall
or
scas
loopne
aas
and
fmull
cmp
push
movsb
test
lret
sub
cmpsb
xchg
repz
enter
daa
pop
mov
cmp
sbb
push
aam
scas
mov
nop
ds
and
adc
xor
das
test
imul
mov
mov
pop
xorb
pop
dec
shll
push
ljmp
cmp
lds
cld
fwait
xlat
outsb
es
dec
adc
lahf
add
test
xor
push
push
sub
subb
push
rolb
data16
shlb
loopne
cmpsb
pop
sarb
push
add
arpl
pushf
jb
sbb
xchg
jne
or
rolb
fmul
sub
mov
xchg
adc
xor
sbb
sbb
cld
mov
mov
jne
ror
fisttpll
es
inc
mov
xor
repz
outsl
cmp
loop
mov
call
add
sub
inc
pop
lods
cmp
mov
cli
pop
adc
xor
lods
or
pop
negl
xchg
cmp
mov
jns
rcrb
mov
adc
imul
dec
mov
sbb
and
in
imul
add
push
iret
in
lahf
inc
insl
aad
add
dec
dec
cld
fidivl
inc
jecxz
inc
inc
les
inc
mov
xor
fiadds
mov
es
adc
and
pushf
addr16
sbb
mov
hlt
leave
inc
cmc
dec
mov
fs
cli
dec
mov
es
pop
mov
test
jge
imulb
mov
xchg
pushf
mov
cs
dec
in
bound
lret
popf
punpckldq
pop
je
lock
das
shl
xor
mov
clc
and
pop
mov
insl
push
fldlg2
dec
push
push
cmpsl
push
incb
enter
int3
mov
cld
inc
or
out
sbb
into
inc
mov
inc
push
push
shlb
test
aam
ffree
mov
cli
push
push
pop
or
clc
outsl
and
xchg
imul
sti
popa
insb
movsl
movsl
lods
jno
fildll
push
mov
xchg
cltd
sub
push
mov
addb
shrl
pop
jb
mov
rorl
push
test
stos
xchg
xchg
push
out
aaa
push
shrl
cmp
push
fwait
les
out
push
sub
mov
ljmp
push
mov
xchg
pop
inc
or
bound
xchg
push
test
mov
pop
and
ja
inc
in
dec
jl
cli
inc
pop
icebp
sub
inc
popa
jp
pop
xor
js
push
or
cmpsl
sbb
bound
and
pop
call
sbbl
xchg
sub
xor
imul
mov
mov
test
in
mov
pusha
inc
icebp
dec
fbld
lods
daa
xchg
inc
movsb
mov
xchg
and
jae
into
gs
in
fisubrs
mov
f2xm1
in
stos
and
and
aad
insb
dec
mov
scas
push
lret
bound
jae
adc
inc
and
insb
add
pop
addr16
arpl
test
or
pushf
out
inc
jg
scas
fiaddl
sbb
sbb
mov
pop
mov
outsb
fdivp
mov
lds
jl
mov
mov
movsl
hlt
test
pop
push
cli
push
jg
in
mov
lret
sbb
and
aaa
test
or
sbb
pushf
out
dec
push
push
cmp
test
mov
scas
mov
mov
cltd
movsb
xor
inc
mov
shlb
inc
pop
outsb
enter
daa
push
lods
inc
cmp
xorl
cmp
dec
int
dec
and
and
ret
stc
lahf
dec
push
jle
sbb
test
ss
icebp
mov
fld
js
rcrl
mov
subl
call
cmpsl
lods
aam
jmp
movsl
outsb
mov
push
adc
mov
fisttpl
adc
add
lea
sub
shl
push
int
sti
in
sub
mov
lcall
pusha
faddl
mov
fcoml
sbbl
imul
bound
aaa
bound
adc
in
ss
ror
cmp
cmp
jo
js
xchg
lret
add
int
mov
ror
pop
jns
cmc
dec
push
mov
xor
jne
loop
gs
fs
out
add
pop
in
pop
add
lods
and
insl
out
mov
mov
in
mov
mov
mov
shll
sub
adc
negl
adc
adc
xlat
cmc
imul
loop
xchg
int
sub
mov
pop
mov
fdivrl
mov
and
jmp
mov
cs
gs
cwtl
lods
nop
or
mov
inc
testb
das
mov
push
pop
or
in
sbb
pop
in
mov
pop
lea
push
pop
inc
pushf
adc
mov
inc
aad
hlt
inc
adc
aas
add
shll
and
dec
sub
mov
shll
add
std
popf
test
cwtl
mov
inc
mov
mov
mov
push
dec
xlat
lret
ror
or
orl
sub
test
jno
jb
jns
scas
ret
push
dec
push
cmp
dec
push
mov
repz
mov
leave
xchg
mov
sahf
jno
and
pop
sbb
pop
pop
pushf
fcmovbe
xorl
aam
or
mov
mov
lods
fnstsw
sub
ljmp
dec
lods
fmull
stos
loop
ja
mov
hlt
imul
mov
negl
adc
mov
aam
pop
dec
pop
push
subl
ljmp
pop
sbb
lea
lret
jecxz
add
divl
int
out
scas
or
mov
xor
imul
xchg
push
push
gs
fisubrl
mov
sbb
push
ja
jg
dec
outsl
daa
movsl
inc
scas
jb
or
aas
push
mov
es
iret
mov
jns
mov
pushf
xchg
out
xchg
in
mov
in
push
subl
out
imul
addr16
mov
inc
xorb
mov
jnp
movb
leave
shl
popa
sub
pop
xchg
inc
mov
xchg
sbb
inc
jmp
out
pushl
inc
mov
popf
movsb
mov
mov
sbb
inc
stos
xchg
adc
insb
xlat
add
aam
scas
mov
mov
adc
xchg
iret
or
pop
pop
sahf
inc
lock
xor
dec
mov
xchg
cltd
or
push
fs
fidivl
cmpsl
dec
xchg
cld
sub
push
pusha
ficoms
inc
rcrb
or
sbb
aad
iret
jns
push
dec
mov
jbe
sbb
jge
xchg
jmp
xor
or
xchg
int3
int3
out
add
push
push
inc
divb
in
out
sahf
jmp
and
shl
cmp
cmp
movsb
mov
and
push
in
sub
xchg
enter
lret
lods
hlt
jno
aam
jl
cmp
cmp
dec
xor
movsl
push
into
xchg
and
and
push
in
cmp
fimull
pop
push
add
mov
jg
and
loopne
js
and
fsubrs
test
mov
test
outsb
in
enter
jmp
mov
push
popl
jecxz
and
in
mov
sub
lret
push
push
mov
sub
adc
pop
mov
out
pop
push
mov
add
repnz
sahf
pushf
and
test
inc
mov
sbb
mov
and
loope
out
mov
and
mov
int
fdiv
jno
divl
xchg
dec
lret
inc
sar
inc
mov
or
inc
mov
push
xor
test
loop
inc
ret
stc
fiaddl
mov
je
push
data16
lock
pop
cmc
mov
jmp
cli
roll
xor
addr16
xchg
sahf
sti
mov
cwtl
gs
ret
sahf
scas
pop
popf
push
adc
fs
imul
fpatan
scas
mov
xchg
sbb
testl
sub
pop
mov
mov
imul
xor
pop
lods
aad
cs
jecxz
add
jg
inc
or
dec
fnstcw
dec
jecxz
xchg
dec
mov
mov
aam
pop
mov
orl
mov
stc
and
pop
cmp
mov
inc
sub
loop
inc
xchg
or
mov
imul
jle
notb
mov
inc
inc
je
inc
push
mov
push
lds
jg
push
lret
jnp
aam
pop
or
mov
adc
das
mov
mov
sub
push
ret
imul
mulb
pop
push
cmpsl
insl
and
jl
push
add
add
icebp
jp
lret
cld
lcall
mov
aad
lods
mov
jle
daa
rclb
arpl
push
push
fs
xchg
nop
enter
xchg
fucom
cmp
clc
in
leave
xchg
out
mov
popa
lcall
stos
rcl
leave
mov
push
jp
nop
pslld
add
pop
lea
sbb
push
sub
xchg
and
popf
pop
rcr
outsl
ret
pop
enter
and
mov
outsb
sahf
jecxz
fisubs
add
aaa
push
ljmp
out
xor
sub
popf
mov
xchg
movsb
push
mov
ret
lds
aad
add
inc
push
dec
bound
aas
inc
inc
sbb
sbb
fsubr
dec
mov
shlb
data16
movsl
sbb
test
bound
lret
lea
in
xchg
push
cmpl
or
sub
and
outsb
je
shlb
mov
adc
jle
orb
jbe
andb
daa
fbld
cmp
jmp
stos
jmp
mov
xchg
popf
lret
mov
push
push
push
xchg
stos
or
push
insb
inc
nop
mov
lods
bound
push
fdivrs
pop
sahf
js
push
test
iret
imul
rcrl
inc
inc
inc
sarb
cmp
les
xchg
pop
push
inc
jge
pop
fucompp
mov
sbb
mov
sub
ss
lds
repnz
repnz
mov
shl
sbb
push
cwtl
pop
aam
jb
fnstsw
mov
sbb
pushf
or
cmp
dec
lahf
mov
mov
mov
push
dec
push
sub
xor
sti
scas
jge
shll
sbb
test
xchg
movsb
dec
lock
mov
in
in
adc
jae
dec
sub
daa
push
xor
cmp
add
mov
movsl
cmp
out
push
inc
sbb
pop
loopne
and
lahf
icebp
xchg
push
shrb
roll
int3
push
int3
fidivl
sub
inc
jo
pop
cmc
lret
test
pop
pop
xchg
push
loopne
loope
inc
lds
int3
outsb
dec
inc
cmc
adc
addr16
mov
adc
pop
add
inc
cs
shlb
int
cli
inc
sub
inc
pop
cmp
jge
push
or
mov
popf
sbb
sbb
jp
sahf
aas
push
fildl
lahf
sahf
and
xor
mov
cmpsb
mov
xor
adc
push
sbb
cmp
mov
scas
div
xchg
jns
fldt
add
mov
mov
add
xor
icebp
rep
aad
pop
loop
pop
jp
xchg
inc
inc
fs
and
add
andl
rclb
out
inc
leave
mov
roll
xor
jns
pop
les
sti
cli
ljmp
imul
aad
adc
adc
cmp
cltd
xchg
push
iret
adc
xor
testb
ret
mov
testl
jo
jl
sbb
sbb
inc
sbb
test
lock
les
dec
jecxz
adc
mov
xor
dec
icebp
add
cmp
mov
adc
xchg
pushf
push
mov
sbb
jecxz
push
inc
inc
cld
int
inc
fisubrs
xchg
cmp
dec
push
push
mov
pop
sarl
inc
scas
notb
loop
cwtl
add
or
adcl
sbb
lret
ljmp
mov
jns
lock
inc
das
insl
jg
mov
fistps
ret
repnz
mov
dec
inc
lret
xchg
popa
mov
icebp
push
movl
mov
fsubr
xor
popf
cmp
shrb
popf
aas
sub
aam
pop
dec
mov
shll
xchg
mov
and
cwtl
xchg
es
addr16
mov
mov
cmp
shlb
xchg
outsb
mov
push
push
and
rorl
add
popf
cltd
pop
stos
in
sub
imul
mov
faddl
push
or
shll
or
fwait
push
dec
fistpl
adc
add
sub
cmp
xor
adc
repz
dec
mov
pop
or
nop
push
loop
push
mov
inc
fsub
jmp
mov
movb
ret
jl
inc
mov
js
insl
sahf
mov
adc
orl
out
lods
pop
sub
es
addr16
dec
jp
dec
pop
mov
cmpsl
sahf
mov
mov
xor
in
aaa
movsb
pusha
sbb
push
xchg
mov
outsb
sbb
jae
push
push
xor
rcll
mov
xchg
dec
aam
jnp
adc
xchg
xchg
insb
lods
lock
imul
push
mov
call
sbb
movsl
or
pop
or
cmp
mov
inc
cmovbe
out
or
or
push
or
pushf
push
sbb
mov
jmp
in
xor
push
lret
les
shlb
push
cs
gs
out
stc
jbe
cwtl
xchg
jge
enter
popa
aaa
out
pop
or
mov
int3
mov
lret
cs
sbb
nop
and
xchg
sarb
cmp
movsb
aam
inc
inc
dec
cs
cmpsb
mov
pop
ror
inc
push
lret
daa
push
mov
mov
jl
add
cmp
out
jbe,pt
pop
movsl
pop
push
mov
lahf
lods
les
test
xchg
xor
mov
add
fwait
in
mov
and
cmp
jp
mov
xor
punpckhdq
mov
adc
inc
cmp
popl
jge
orb
sbb
notb
add
popf
aad
call
push
int
sar
sub
jae
pop
mov
rorb
icebp
fmull
dec
sbb
dec
sahf
loop
faddl
mov
add
lret
mov
jno
mov
pushf
mov
sbb
mov
fsubrs
divl
aam
shll
fmull
sti
js
push
int
cmc
mov
sbb
outsl
mov
cwtl
loop
cmpsb
push
dec
movsb
push
xlat
dec
xchg
add
in
lods
aad
or
out
cmp
cli
daa
shll
xchg
mov
push
sahf
adc
push
and
orl
pop
adc
pop
adc
gs
repz
inc
stc
xchg
push
xchg
sbb
insl
jmp
xlat
xor
pop
mov
and
shrb
adc
pusha
sub
aad
test
dec
js
adc
pop
sbb
daa
int3
daa
les
adc
mov
andl
mov
lods
inc
adc
iret
pushf
adc
test
aam
rcrb
xor
inc
push
imul
bnd
pop
mov
je
push
pop
rorl
sar
xchg
addr16
cwtl
mov
daa
mov
subl
test
shll
cmp
insl
das
dec
mov
fwait
mov
sbb
dec
ret
adc
lds
dec
inc
mov
xchg
mov
sub
sar
lock
mov
mov
ret
jecxz
fldenv
mov
push
adc
inc
mov
jl
mov
xlat
fadds
pop
mov
or
popa
enter
sbb
pop
pop
out
jecxz
insb
xchg
mov
out
xor
pop
add
cltd
xchg
imul
mov
out
xor
fstpl
dec
push
mov
test
dec
and
sti
stos
pop
sbb
movsl
mov
xchg
pop
push
mov
imul
out
jno
in
push
idiv
cmpsl
nop
push
xor
or
scas
or
mov
out
and
dec
test
dec
mov
inc
jae
jns
repz
adc
rorb
xchg
pop
mov
hlt
outsb
out
and
sub
idivl
push
pop
in
fidivrl
sbb
stos
out
jl
sub
and
popa
addr16
out
jp
loope
mov
incl
jnp
cmovbe
rcll
pusha
mov
fbld
cmpsl
jmp
popa
lds
dec
aaa
lock
dec
mov
popf
sbb
pop
mov
aad
out
stos
out
jns
and
and
ds
fdivl
adc
cmp
iret
daa
movsb
jb
mov
xchg
inc
inc
push
xor
inc
ds
lock
mov
fwait
inc
jnp
xor
xchg
add
gs
insb
rcrl
fidivrs
lds
mov
test
adc
leave
enter
mov
xchg
jae
jbe
test
jge
mov
lcall
lcall
jns
xchg
loopne
dec
adc
push
adc
xor
ljmp
and
jmp
jle
fstpl
xchg
loop
scas
enter
daa
push
leave
mov
shlb
adc
jg
xchg
push
ds
movntq
jp
loopne
lret
fwait
outsl
push
data16
test
bound
cli
enter
inc
dec
in
stc
xchg
int
test
add
rcll
insb
sub
pop
stos
sub
sbb
test
sbb
fsubl
xor
or
and
hlt
xchg
fbld
or
inc
add
cmp
popa
lcall
pop
fdiv
add
sahf
test
adc
ret
fdivl
mov
mov
mov
int
arpl
adc
push
imul
fsubrs
clc
das
divl
lret
in
mov
in
adc
dec
sbb
into
jmp
dec
mov
mov
pop
scas
loop
and
stc
ljmp
pop
add
mov
outsw
clc
lods
mov
dec
or
xor
lret
scas
jo
ljmp
sti
lds
pop
incb
shlb
iret
loopne
inc
sbb
pop
xor
jnp
in
pop
mov
mov
lret
ljmp
lods
push
xchg
cmp
cmp
mov
int
xchg
jmp
inc
mov
nop
je
push
dec
xlat
adc
inc
inc
pop
fstps
mov
pop
pushf
pusha
jecxz
aam
mov
mov
call
cmp
fcoms
lods
xorb
xchg
ficomps
or
inc
icebp
dec
add
jg
jg
mov
dec
add
das
je
and
rcr
mov
pop
std
cmp
cwtl
ja
or
test
mov
adc
xorl
mov
mov
mov
jno
lock
mov
das
sub
cltd
mov
dec
push
xchg
and
xor
ret
movsb
call
insl
cmp
cmp
loope
mov
decl
insb
mov
sub
fisubl
mov
ror
aam
sub
lcall
scas
out
mov
fstl
push
clc
xchg
adc
xchg
movsb
jge
ljmp
lods
mov
jl
inc
or
xchg
cld
add
jp
or
icebp
cltd
int3
iret
mov
loop,pt
mov
loopne
push
dec
mov
and
sbb
dec
lds
mov
push
push
xchg
arpl
push
incl
fdivl
xor
mov
add
xor
xchg
add
xchg
inc
xor
add
mov
nop
emms
aam
xchg
mov
insb
or
and
pop
into
mov
mov
cmp
bound
push
ja
fldt
jg
push
mov
inc
or
jno
mov
jp
sub
mov
sbb
sub
popf
adc
mov
inc
xchg
fs
sbb
jae
pop
jge
mov
stos
xchg
mov
adc
xlat
stos
popa
add
and
psrlw
xchg
imul
scas
aas
adc
push
cs
ljmp
xchg
lret
adc
inc
popa
fisttpll
dec
lds
push
xor
push
cli
dec
lret
fiaddl
or
aad
sbb
mov
pop
fwait
cmp
lds
mov
mov
data16
aas
test
ds
test
out
cmp
sarl
lcall
fisttps
add
inc
insb
int3
js
jge
sub
push
hlt
jmp
xor
inc
sahf
mov
sbb
inc
and
sub
cmp
fisubrl
cmpsb
test
js
enter
daa
push
pop
cmp
popa
inc
ss
psrlw
dec
cmp
jno
ds
outsb
inc
and
jbe
push
cmp
test
sub
and
mov
pop
push
sbb
ss
push
sub
loope
xor
mov
loope
outsb
js
rclb
clc
add
xorb
sbb
push
and
insb
cmc
push
loop
sti
int
es
ret
pop
mov
popa
push
push
jecxz
fcompl
dec
mov
ss
xor
fs
mov
and
mov
iretw
adc
roll
dec
inc
divl
shlb
mov
pop
rcll
mov
fisttps
mov
enter
lds
outsl
jb
xchg
loop
aad
stc
mov
jmp
aas
add
insb
xchg
lods
mov
add
xor
es
push
popf
cmp
dec
push
sti
je
mov
fs
mov
loopne
dec
hlt
pop
push
notb
adc
imul
repz
sbb
jecxz
dec
xlat
mov
shrl
sbb
mov
cmp
out
jmp
mov
xchg
aad
imul
dec
pop
les
stc
imul
out
les
imul
call
into
mov
mov
test
adc
pop
pushf
imul
push
pop
jno
and
js
mov
popa
dec
aas
push
sub
nop
push
dec
jnp
xchg
cli
shrl
sub
pop
sbbl
sbbb
or
mov
push
sbb
inc
mov
aaa
mov
mov
and
mov
add
das
or
mov
add
cs
rol
xor
loop
mov
pusha
mull
cli
add
icebp
pop
sar
inc
in
clc
mov
dec
mulw
bound
pop
cli
inc
not
mov
push
aad
adc
lods
mov
jmp
push
in
imulb
jge
or
sar
jne
jecxz
mov
popa
imulb
add
out
test
les
out
mov
add
xchg
cltd
add
or
mov
jecxz
cmp
and
sbb
stc
in
js
imul
adc
adc
cli
adc
jle
movsl
jmp
inc
jp
test
cmp
jns
mov
aam
inc
xchg
loopne
pushl
stos
arpl
ja
jp
dec
cmpsl
les
push
xor
add
dec
rclb
sub
outsl
les
pop
in
jae
xor
xchg
out
ja
sub
pop
ss
outsb
jp
and
mov
int3
mov
out
xchg
data16
pusha
jmp
and
cld
jmp
in
clc
jae
and
out
insb
sub
push
dec
jl
aam
push
insb
out
or
scas
mov
mov
icebp
iret
in
rol
fsubp
pop
pop
mov
pop
inc
insb
fisubs
inc
inc
pop
jle
movb
mov
xchg
scas
cltd
out
mov
repz
lds
into
ljmp
fists
leave
mov
jae
inc
mov
xchg
jbe
mov
scas
sbb
aam
or
movsl
add
cli
xchg
dec
out
and
push
xlat
pop
outsb
xor
mov
and
jo
pusha
xchg
out
movsb
jne
je
sti
mov
ja
mov
mov
daa
push
outsl
pop
cmp
dec
jl
insb
inc
cmp
pop
in
fbld
lods
and
push
mov
inc
xor
clc
push
jl
inc
cld
dec
movl
js
insb
daa
pop
add
push
push
fucom
add
sub
sub
test
outsb
fcmovnb
ljmp
add
sbb
pop
call
add
mov
dec
push
in
sahf
int
test
sub
icebp
aad
inc
shlb
xor
fmull
push
sbb
outsb
xchg
sahf
lret
mov
test
sarb
cwtl
out
mov
das
sbb
xor
shll
xchg
and
out
mov
cmp
sahf
xor
mov
cmpsl
and
in
pop
pop
mov
icebp
mov
sub
dec
cmc
mull
in
outsl
push
call
jb
insl
movsb
jnp
js
jmp
aas
stc
jb
insl
ficomps
mov
movsb
cli
shlb
pop
shll
incb
push
inc
loopne
rcrb
xchg
lock
xor
imul
fcomi
mov
lcall
push
inc
imul
mov
enter
sub
loopne
shrb
inc
cs
hlt
test
xchg
loope
inc
push
jmp
xor
js
sub
lds
lea
shr
cmp
ffreep
cmp
pop
lfs
adc
cs
adc
test
popa
jbe
pop
adc
jmp
inc
mov
dec
aas
mov
loope
dec
repnz
and
lahf
sarl
cmp
lahf
xchg
sti
std
xchg
cwtl
in
data16
inc
andl
pop
movsl
js
cmpsb
cmpsb
dec
mov
lea
mov
clc
sub
dec
jae
das
jmp
les
mov
lods
out
es
push
mov
movsb
add
andl
lods
fisubl
jno
or
jo
std
aaa
cmp
sbb
inc
sub
stos
xchg
aam
in
clc
mov
sub
push
mov
xlat
frstor
das
xchg
and
mov
popa
or
inc
and
jl
sub
or
mov
rorl
add
test
test
mov
out
test
mov
test
xchg
xchg
add
sbb
xchg
rcll
nop
pop
fwait
or
rolb
cltd
jecxz
incl
out
or
xchg
xor
pop
jne
das
rcrl
mov
jl
pop
ja
rclb
and
inc
cmp
or
jg
repnz
and
push
mov
add
ror
bound
cmp
dec
inc
in
ds
xchg
sub
adc
addr16
sub
shlb
mov
fistps
mov
jnp
mov
insb
cmc
in
xchg
clc
pusha
test
test
add
xchg
or
jmp
mov
divl
ja
push
inc
adc
cmp
clc
push
xchg
push
int
inc
xor
insb
pop
mov
or
push
mov
scas
aas
iret
inc
push
mov
pop
call
xor
add
inc
inc
push
or
push
clc
pop
cli
fisubrl
mov
sbb
sub
dec
fisubs
imul
mov
sub
or
xchg
sub
pop
mov
and
sbb
pop
sti
lock
sbb
or
mov
ds
dec
inc
mov
push
mov
pop
or
outsb
jl
fdivs
and
cmp
pop
sti
movsb
add
mov
jo
cmpsb
scas
xchg
in
xchg
es
or
dec
out
jno
test
pop
lea
cmp
bound
jnp
mov
lahf
sub
iret
push
fistpll
test
ret
popf
cmp
xor
mov
loopne
stos
test
inc
lods
adc
ss
sbb
lock
iret
pop
sub
outsb
ds
pop
shrb
adc
adcb
add
dec
xchg
and
jle
call
or
pop
pop
mov
shlb
hlt
pop
lds
and
stos
xchg
test
andb
mov
aam
fdivs
stos
fwait
popa
mov
andl
xor
mov
pop
mov
divl
je
roll
dec
or
xchg
lret
cmc
mov
jle
outsl
xor
loop
aam
stc
and
cmpsb
add
adc
into
add
lock
dec
lods
jno
orl
rep
adc
outsl
mov
rolb
gs
das
in
loopne
xchg
pop
pop
nop
cmp
imul
mov
xchg
and
push
sbb
pop
xor
xlat
xor
mov
push
inc
imul
iret
jle
cs
cmp
ss
add
int
inc
jnp
in
add
sbb
enter
mov
es
mov
mov
ret
adc
rcpps
nop
push
es
mov
pop
inc
xchg
inc
int
aaa
aas
pop
insl
xor
lea
imul
mov
mul
adc
lahf
cwtl
test
add
mov
cmp
jecxz
dec
inc
fisubl
mov
push
jmp
das
enter
and
mov
sub
push
add
xor
rolb
dec
data16
mov
test
dec
mov
xchg
fidivl
mov
cmp
sub
test
aam
arpl
mov
push
jae
push
les
xchg
popa
mov
ljmp
lods
leave
roll
out
outsl
loope
xchg
shrl
pushf
test
shrd
mov
aam
test
cli
mov
jmp
mov
test
lea
iret
pop
cmp
out
les
sub
inc
add
add
mov
loopne
and
lret
jo
or
lods
xor
cmp
xchg
jle
clc
mov
mov
pushf
pop
aaa
sub
adc
add
or
xorb
pop
dec
add
sbb
push
test
lahf
sbb
jns
mov
adcl
push
sub
or
fldenv
mov
mov
jle
jle
fldl
pusha
pop
xchg
or
xchg
fucomp
pop
jmp
jnp
xor
or
push
add
pop
popf
mov
xor
shl
mov
and
ljmp
inc
lret
push
jle
adc
xchg
iret
mov
and
pop
inc
sbb
arpl
fcmovb
inc
dec
inc
add
je
pop
inc
ja
jae
sbb
sub
adc
and
fimuls
test
rcr
sub
pop
ss
leave
movsb
das
jmp
fcoml
push
jb
stc
jbe
ret
sbb
add
mov
mov
mov
test
int
pop
push
popf
adc
xor
push
cmc
popf
scas
mov
sbb
out
adc
into
enter
mov
jb
xor
in
jle
into
enter
daa
dec
and
cmp
jbe
jl
xorl
and
and
out
pop
lahf
inc
and
mov
cmpsb
test
mov
pop
xor
or
add
xchg
jmp
sbb
cld
loope
push
arpl
je
mov
aad
rorb
and
sbb
dec
mov
push
jmp
call
sub
mov
aaa
enter
cltd
ss
adc
and
lahf
pop
sbb
sahf
adc
cmpsb
addb
jg
arpl
aam
mov
mov
cmpsb
out
sbb
jne
mov
fcoms
clc
divl
ror
sahf
rcrl
sub
or
inc
stos
into
jne
and
test
outsb
outsl
je
push
stc
fldt
pop
add
add
jae
int
pop
lret
mov
xchg
cli
imul
pop
dec
test
subl
outsb
movsb
jb
loopne
fimull
scas
loop
adc
in
xchg
imul
xchg
jge
push
xor
xchg
in
cmp
dec
mov
cmp
cmpsl
sub
mov
jns
add
mov
mov
aad
xor
dec
push
mov
fnstcw
fmul
les
mov
lea
loopne
ss
pop
jne
sub
pushf
push
scas
fstpt
clc
mov
or
jp
aas
sti
xchg
dec
jb
insb
dec
dec
loopne
fbstp
or
sbb
or
aad
sbb
mov
cmp
andl
and
mov
adc
lock
dec
mov
sub
and
mov
ret
loopne
ret
es
dec
mov
pop
inc
dec
sub
dec
cmpsl
dec
inc
clc
mov
pop
mov
jo
or
add
mov
push
jne
rcrb
mov
sub
dec
imul
jo,pn
jmp
sbb
jns
clc
cmpb
xchg
mov
mov
popa
cmp
lret
stos
pop
popf
out
rclb
sub
push
ja
dec
ud2
mov
sahf
cltd
test
add
add
xchg
sub
dec
push
icebp
aad
jo
jmp
sbb
sysret
pop
jne
xor
jecxz
lock
iret
out
inc
js
xor
mov
xor
jno
xchg
int
add
mov
repnz
or
insl
inc
data16
fmuls
sub
inc
inc
mov
jne
aas
sbb
jle
xchg
mov
mov
push
iret
int
movsb
sub
int3
push
mov
or
jne
scas
cltd
dec
jp
dec
pop
mov
rclb
mov
flds
leave
in
sbb
pusha
mov
cwtl
inc
xchg
mov
inc
jmp
inc
into
pop
jae
out
push
out
popf
fmull
cmpl
sub
rolb
das
xchg
jnp
ss
scas
lret
or
adc
cltd
iret
add
mov
pop
push
aas
or
test
push
nop
rolb
out
or
out
cltd
movb
pop
fcmove
fs
xchg
mov
ret
sbb
hlt
xchg
loop
fisubrs
pop
ret
shl
cwtl
mov
mov
xchg
leave
sbb
hlt
daa
pushf
jne
rcll
inc
hlt
out
jge
in
mov
rcll
pusha
lret
and
cltd
add
int3
and
repnz
cmp
pop
push
sbbb
mov
vpshld
inc
and
fimull
add
test
pop
cmpsb
mov
gs
es
dec
daa
dec
movb
arpl
mov
jl
dec
in
pop
ds
mov
movsl
mov
and
or
mov
test
pop
xor
xchg
or
push
sub
rorb
loope
pop
imul
mov
outsb
add
aas
adc
fs
cmp
cmpsb
cmpb
add
popf
cmpsl
and
sub
out
cwtl
out
int
test
sub
jns
lcall
mov
sbb
ja
test
mov
adc
mov
cmpsb
mov
jmp
adc
add
ss
cli
sub
iret
lods
imull
das
imul
jl
shll
imul
pop
xor
dec
nop
cltd
xor
pop
outsl
out
xlat
cmc
loop
mov
enter
mov
in
fistl
lods
aas
push
push
mov
mov
cli
pop
fsub
xor
dec
ja
xor
pop
gs
sbb
xchg
dec
pop
into
mov
adc
mull
repz
mov
iret
lret
scas
lods
popa
sub
push
or
in
in
add
lods
push
les
jge
push
aad
call
inc
dec
mov
imul
lret
mov
jecxz
in
into
add
call
mov
hlt
pop
sub
xor
pushf
adc
mov
pop
std
xchg
sbb
inc
add
aas
lcall
dec
push
cmp
je
and
shrl
dec
imulb
xlat
std
jl
jp
push
mov
aas
cld
dec
mov
mov
std
lret
xrelease
mov
xor
pop
and
das
xchg
mov
loopne
add
movsb
fadd
outsl
adc
ja
rep
pop
loop
dec
and
jmp
dec
test
mov
xor
mov
mov
fstps
adc
into
push
sub
jbe
push
shr
insl
jmp
push
nop
pusha
aam
dec
cld
mov
xchg
stc
movsl
inc
fstpl
adc
clc
mov
adc
leave
popa
push
fsubr
lods
lahf
insb
mov
dec
dec
cmp
xor
movsl
in
push
and
punpckhdq
mov
decl
fbld
test
std
mov
out
jecxz
dec
mov
or
in
xor
fisubl
fwait
lcall
add
ljmp
xor
jl
or
mov
xchg
sbb
mov
pop
push
aad
inc
int
lods
jno
ja
icebp
cmp
inc
std
push
dec
or
push
pop
mov
punpcklbw
jp
mov
rolb
ret
add
adc
cltd
jns
add
xorl
fucom
aaa
fstpl
mov
mov
add
lods
fstl
mov
add
mov
mov
jle
pushf
out
in
jb
pusha
push
inc
js
pop
fsts
sub
xchg
adc
jmp
popf
add
mov
dec
xchg
stos
mov
insb
lcall
scas
sub
xchg
call
add
popa
cs
xor
ret
inc
cwtl
sub
arpl
cld
in
cmp
push
cmova
xlat
fiaddl
adc
pop
xchg
dec
shl
xlat
inc
add
jmp
mov
add
adc
hlt
jb
dec
push
adc
lds
cmp
aaa
pop
iret
fisttpll
pop
push
int3
add
and
int3
nopl
stos
mov
jae
subb
jo
ds
scas
jne
jae
adc
nop
jno
mov
sub
cmpsb
cmp
in
dec
fnstenv
daa
dec
jmp
cmp
fwait
jno
les
in
cmp
movsl
nop
cmpb
lret
push
lahf
test
xchg
push
pop
pop
push
test
and
mov
pop
pop
je
sub
or
adc
or
loope
ljmp
inc
push
push
addr16
sarb
int
cltd
insb
daa
or
jo
jnp
sub
sti
inc
push
and
mov
icebp
or
int
xchg
imulb
sub
pop
xor
inc
pop
push
ror
fdiv
lahf
out
sbb
dec
scas
test
arpl
ja
xor
adc
adc
ljmp
add
cmp
mov
or
jae
mov
mov
call
into
cmp
adc
adc
fidivl
ret
pop
inc
outsl
int
icebp
loop
pop
stc
dec
inc
lahf
movsb
js
add
bnd
add
cmpb
cli
mov
add
hlt
out
cmp
sbb
xchg
adc
inc
gs
jmp
and
or
insl
jnp
imul
sti
xor
cmc
insb
test
xchg
pop
mov
or
xlat
out
adcb
ret
int3
imul
dec
or
loopne,pn
lret
add
dec
adc
push
fldcw
xchg
adc
mov
mov
jmp
aam
daa
and
cmp
fucomi
jl
mov
and
outsl
dec
pop
mov
sti
flds
inc
aas
aas
cmp
fwait
jb
nop
dec
into
shr
je
jmp
push
imulb
clc
and
mov
inc
jmp
or
jno
lret
bound
sub
in
in
mov
and
mov
out
out
cmpsb
in
cli
push
lcall
xchg
repz
dec
xchg
pop
icebp
or
es
sbb
xor
repnz
imul
leave
sub
shrb
mov
nop
pop
clc
clc
inc
out
xchg
push
in
xchg
lods
adc
inc
xor
int
out
cwtl
dec
cmp
sub
test
clc
cltd
push
popf
jge
adc
mov
repnz
dec
and
pop
pop
xchg
sbb
popf
call
pop
lret
lcall
sub
test
add
pop
push
xor
dec
or
test
xor
fsubs
mov
push
or
in
pop
push
pop
push
pop
aam
in
mov
rorl
test
dec
lods
negl
mov
out
cmp
stc
bound
xor
in
mov
add
jne
mov
jge,pn
popa
mov
movsl
in
cmpsb
xchg
and
enter
aaa
jle
jmp
and
cmp
and
and
xchg
leavew
push
dec
leave
lds
daa
inc
inc
push
mov
xchg
and
shrl
imul
scas
xchg
aas
adc
xor
shrb
ret
mov
mov
arpl
and
or
in
mov
fidivl
mov
sbb
or
pop
mov
cmp
icebp
lret
add
sub
or
leave
or
hlt
mov
daa
pop
jbe
mov
jge
insl
jl
aaa
or
aaa
ficoms
or
sub
lcall
dec
sbb
mov
jo
add
scas
push
les
cmp
jmp
stos
inc
repnz
in
xor
inc
enter
daa
dec
xchg
mov
jno
and
jl
push
mov
inc
insl
scas
ds
and
mov
sahf
lahf
movsb
in
cld
push
sub
test
out
sbb
xor
or
sbb
and
js
daa
inc
pop
jp,pt
push
mov
pop
sub
lods
mov
outsb
lret
adc
sbb
cwtl
clc
out
and
mov
mov
cld
add
mov
pusha
lret
hlt
repnz
int
mov
movsb
pop
mov
lcall
aad
mov
lcall
pusha
push
rolb
push
xor
mov
dec
dec
mov
cmpsb
hlt
adc
cmp
inc
out
dec
fadds
imull
push
mov
fbld
mov
clc
mov
push
addr16
into
push
pushf
adc
fcmove
jp
push
and
outsl
lods
mov
in
inc
js
add
in
das
cmp
add
cld
loope
lods
or
imul
sub
outsl
cli
mov
dec
insl
cmp
ret
mov
pop
gs
and
adc
xchg
imul
sub
aad
or
cmp
in
xlat
sub
mov
fimull
jmp
imul
sti
jle
nop
jno
mov
jo
adc
sub
test
sbb
ret
pusha
and
aam
dec
lea
imul
mov
xchg
jp
adc
push
js
imul
pop
inc
lods
filds
testb
dec
movsl
aas
fsubs
stos
jb
inc
push
dec
inc
or
arpl
adc
std
lret
cwtl
xchg
xlat
lret
mov
or
add
lock
xor
rcrl
mov
mov
jmp
mov
dec
xchg
dec
and
sbbl
ljmp
xchg
pop
dec
sbb
adc
sub
mov
cld
dec
popf
adc
pop
xor
mov
mov
pushf
rclb
nop
aam
xchg
push
jg
mov
addr16
into
clc
xor
ljmp
shrb
jmp
xchg
in
insl
std
push
or
mov
sub
lea
in
inc
into
cltd
dec
jge
test
dec
mov
dec
mov
in
loope
iret
xchg
push
cmp
ficompl
fnsave
fwait
clc
fisttps
add
and
xor
mov
inc
dec
sbb
or
xchg
mov
rcrl
and
xor
dec
loopne
add
dec
stos
or
jo
mov
outsl
out
mov
dec
jnp
sbb
bound
stos
fnstcw
or
push
mov
sub
stc
pop
inc
stos
icebp
xor
mov
into
lods
mov
out
inc
jle
sub
pusha
mov
fistps
outsb
adc
sbb
cmp
or
push
adc
popf
push
lods
out
int3
xchg
cmp
xchg
and
cmp
mov
or
scas
hlt
inc
push
push
pop
jecxz
adc
stos
daa
rol
push
adc
adc
xor
dec
dec
inc
push
test
or
pusha
cmp
imul
mov
push
mov
in
aam
xchg
lret
movsl
jl
inc
icebp
pop
mov
stos
push
push
hlt
or
push
scas
jne
jbe
inc
cmp
test
sbb
mov
or
mov
add
lods
pop
int3
in
jo
mov
sub
fnsave
ret
scas
xor
xchg
and
sbb
cmp
iret
xchg
inc
push
std
adc
sbb
enter
daa
dec
rorl
and
jno
mov
sbb
repnz
cmpsb
ds
call
and
mov
push
mov
imul
xor
clc
loopne
rcrb
adc
aad
pop
jge
loop
inc
pop
adc
mov
adc
stos
jbe
sub
fiadds
sub
sahf
jmp
cmc
stos
dec
push
sub
push
add
mov
and
incb
testl
sub
iret
adc
lcall
fmull
inc
sbb
push
out
popf
rcll
subb
jnp
and
mov
jns
mov
add
ss
std
fadds
into
lret
sub
lret
adc
jbe
popf
mov
faddl
lds
test
mov
clc
outsl
mov
and
jg
mov
or
clc
add
or
mov
push
sub
mov
xor
cmp
sti
cmp
lretw
shlb
pop
mov
pop
sub
or
adc
mov
repz
mov
mov
in
inc
cmp
mov
cmp
and
dec
mov
aad
pusha
lcall
cmpsl
pop
inc
fcmove
add
push
jno
les
test
xlat
into
out
lea
mov
pop
inc
mov
sahf
pushf
push
dec
pop
fstpt
cmp
out
lcall
pop
bound
ja
xchg
jb
icebp
pop
dec
mov
jne
rcll
push
divb
jb
std
jno
sub
jl
mov
cmp
dec
mov
mov
pop
das
mov
out
loope
outsl
mov
das
and
mov
std
jo
ret
sbb
shlb
add
xchg
dec
adc
jmp
repnz
mov
fwait
cld
jae
mov
mov
and
enter
lods
pop
roll
shlb
sbb
aam
mov
mov
fisttpll
movsb
mov
ljmp
add
loopne
ljmp
pop
push
sub
push
jecxz
movsb
ja
lcall
xchg
jb
mov
clc
je
repz
pop
test
mov
push
sbb
cmp
pop
and
push
outsl
mov
add
cmp
xor
ds
dec
xor
adc
cmp
mov
or
cmp
adc
mov
ja
mov
dec
shrl
jbe
ss
cld
das
or
or
mov
cmpsb
xor
out
cli
faddl
leave
bound
jns
andl
loopne
and
shrb
sub
hlt
in
stos
shll
mov
mov
push
mov
xchg
inc
insl
jle
pop
xchg
in
aad
pusha
es
fistpll
push
stos
jmp
jb
bnd
cmc
aam
sarl
popf
js
sti
mov
or
pop
stos
stc
cmpsl
push
and
les
add
add
push
data16
adc
sub
ret
xchg
pop
xor
inc
mov
adc
or
fistpl
sbb
lcall
sbb
jae
pop
adc
add
dec
fwait
shlb
mov
sbb
leave
divl
hlt
push
or
or
jge
jg
sbb
cmc
or
lock
int3
shrb
dec
clc
push
push
push
or
push
xor
sbb
xchg
into
mov
shld
inc
in
cmpsb
sarl
in
add
jmp
dec
jb
cmp
aaa
jnp
mov
mov
cmp
ret
movsl
outsb
jae
in
cmp
lahf
loop
sbb
adc
outsb
lock
xor
mov
mov
scas
lods
js
sbb
push
ss
mov
adc
sub
leave
add
xchg
lret
adc
shlb
out
mov
mov
and
mov
jle
testb
sbb
int
and
sub
addr16
fcomp
negb
pusha
sahf
inc
sbb
outsb
ja
or
mov
mov
movl
mov
mov
adc
mull
les
jns
jno
fdivrs
ficoms
lret
or
or
xchg
mov
xor
or
cmc
push
out
fisubrl
dec
aaa
loop
mov
stc
outsb
mov
add
ret
add
ja
jno
xchg
out
mov
push
xor
outsb
cmp
mov
sti
in
sar
jl
gs
popf
cltd
loopne
pop
mov
dec
insb
adc
aad
imul
repz
les
xchg
mov
jno
or
sarb
mov
sbb
scas
mov
nop
inc
cmp
imul
cli
aad
movsl
xchg
lods
sub
movsl
sahf
pop
les
in
and
pop
lea
lea
call
mov
call
adc
fldt
xchg
and
inc
outsl
mov
aas
push
popf
dec
jb
aad
dec
xor
je
cmp
shll
stc
std
sbb
cli
mov
das
int
jmp
adc
jnp
lret
scas
rol
std
sbb
lock
das
add
sbb
mov
mov
ret
stos
lods
mov
subl
insl
cmc
aad
dec
adc
pop
cmpsl
dec
pop
movsb
mov
mov
cmp
int
mov
gs
pushf
and
cmp
inc
sarb
pop
hlt
sub
clts
aam
adc
mulb
push
add
pop
mov
xchg
fisttpl
add
out
gs
popa
scas
dec
insl
lods
dec
xchg
ds
add
dec
mov
jnp
notb
add
lret
pop
mov
test
jns
xchg
dec
mov
test
lret
mov
sbb
jo
shl
outsl
cli
pop
int3
aam
fwait
push
fidivs
push
adc
insb
add
ffree
loope
sbb
jl
xor
push
push
gs
ja
loop
mov
cltd
hlt
int3
ja
test
dec
roll
xchg
or
loopne
mov
cmp
push
lahf
jne,pn
dec
cmpsb
mov
cs
out
flds
bound
jns
sahf
inc
in
clc
sub
outsl
lret
sbb
inc
subl
cmpsb
pop
or
add
jp
dec
popa
mov
sub
jnp
sbb
jle
mov
in
mov
cli
cmpsb
mov
jmp
cmp
and
push
xchg
add
popf
lahf
lea
push
dec
add
and
test
rcrl
push
lods
insl
insb
adc
das
jb
jbe
ret
pop
imul
enter
inc
inc
pop
fsub
or
push
mov
inc
jno
test
xchg
addr16
rcrl
xor
adc
dec
sarb
in
or
push
sbb
hlt
sahf
sti
dec
push
dec
ficomps
xchg
mov
jge
pop
cmp
aaa
sbb
sti
or
in
lods
add
inc
int3
mov
mov
out
and
xor
js
sub
popa
pop
hlt
cmp
iret
push
movsb
int
pop
inc
jae
cmpsb
inc
jae
in
call
cmp
push
cmp
into
jno
pavgw
lea
push
inc
call
movsl
lods
xor
mov
sbbl
mov
test
push
out
xor
leave
sahf
xor
leave
dec
outsb
js
out
mov
sti
mov
add
mov
test
outsb
repz
adc
stos
fmuls
adc
mov
into
add
and
and
pop
pop
int
ret
in
sub
lods
aad
fiaddl
lahf
fsubl
sbb
sahf
jecxz
nop
test
inc
and
sub
shrl
in
dec
fwait
mov
mov
adc
xchg
mov
ss
fdivs
pop
imul
adc
lret
int
movsb
stos
aaa
mov
jno
into
arpl
das
cwtl
lock
repnz
mov
loop
aaa
sbb
rolb
out
test
call
out
shr
cli
pop
sahf
mov
cmp
stos
int3
sti
fwait
adc
gs
cmp
loopne
sbb
imul
shrb
notl
mov
adc
xor
imul
sbb
ljmp
mov
sti
stos
inc
jmp
lret
insb
call
scas
nop
add
sbb
mov
inc
add
xchg
leave
jmp
fstpl
push
call
xor
ficomps
popa
jecxz
adc
sbb
cmpsl
ret
pop
sub
mov
aaa
inc
outsb
inc
mov
mov
jb
in
ja
stos
repz
push
mov
divb
loop
cwtl
lds
mov
dec
mov
mov
or
mov
and
mov
mov
lock
popa
dec
mov
jae
into
and
dec
cli
ret
cmp
or
insl
fmul
loopne
or
cmpsl
dec
push
jnp
icebp
gs
leave
and
push
cmp
xor
adc
adc
rorb
mov
aam
rcrl
push
enter
fsubrl
in
fcoms
bound
sub
lods
mov
mov
and
mov
cltd
mov
cmovne
xor
lods
pop
jb
xchg
neg
xchg
dec
decl
or
test
insl
pop
xchg
adc
mov
add
pop
ja
cltd
fwait
test
push
add
jno
cmpsl
jl
scas
xor
mov
test
jg
ja
xor
mov
lret
mov
lcall
cmc
ja
and
dec
mov
dec
js
or
adc
cmp
xorb
lods
es
out
insl
cli
jns
pop
mov
cmp
adc
dec
int
ss
jno
ljmp
jp
pushf
inc
mov
or
data16
mov
mov
rorl
and
pop
loopne
call
ja
dec
add
xchg
fsts
pop
cld
ds
push
cs
mov
sbb
stos
sub
insb
mov
ret
inc
sub
hlt
dec
pop
adc
push
iret
cmp
mov
pop
mov
stos
into
arpl
out
inc
pop
ss
or
rcll
inc
lock
add
add
push
xchg
mov
sub
jge
daa
lds
dec
rclb
adc
movsb
dec
stos
leave
in
or
jmp
clc
xor
lahf
cmpsb
jge
and
and
aaa
fisubl
fildl
testb
dec
jg
push
shlb
xor
rcl
mov
and
inc
sbb
iret
mov
lahf
inc
add
movsl
in
iret
jge
enter
daa
dec
pusha
nop
cmp
pop
jno
cld
popa
jl
pop
idivl
decl
adc
sbb
jl
and
cmp
lea
in
push
sbb
xor
int
pop
lock
pop
cmpsl
pop
cmp
add
shlb
outsb
sub
ljmp
iretw
or
xchg
mov
sbb
outsb
mov
pushf
scas
adc
add
xor
hlt
dec
sbb
nop
push
jo
mov
jg
lea
sub
dec
mov
mov
jl
mov
jg
sub
adc
mov
or
or
ss
pushf
out
fldl
imull
je
sarl
add
or
std
outsb
into
stos
jecxz
cmc
idiv
imul
sub
or
cmp
pop
stc
fdivrl
add
xor
lods
test
jmp
out
imul
dec
js
mov
mov
gs
jle
sub
sub
adc
dec
adc
cmp
repz
pop
sbb
xor
xlat
sub
sub
cmc
mov
jmp
cs
cs
movb
fstpl
xor
repnz
fnstcw
gs
loopne
inc
out
movsl
sub
mov
pusha
scas
xor
adc
dec
pushf
pop
pop
push
fisttpl
pusha
mov
iret
dec
outsl
inc
mov
sbb
aas
push
and
jb
aaa
addr16
and
je
mov
pushf
idiv
jg
std
popw
jo
andb
mov
int
add
push
cmp
negb
mov
xor
das
ror
mov
sub
in
leave
pop
inc
mov
insl
ret
cmpsl
xchg
dec
push
cmp
mov
cmp
fdivr
hlt
dec
add
mov
aaa
outsl
sbb
xor
aam
loopne
ljmp
ljmp
mov
pop
fldl
pop
jmp
xchg
pop
popf
jnp
aad
in
fcoml
lods
and
pop
out
xchg
xchg
or
mov
movsb
inc
out
cmp
cltd
sub
test
mov
xchg
mov
cmp
int
ljmp
aad
rcrl
lret
mov
sub
pop
out
add
mov
sbb
mov
or
cmp
add
jmp
lock
ucomiss
or
dec
lods
std
inc
xchg
lea
lahf
arpl
sbb
mov
fimull
mov
mov
push
out
xchg
sbb
add
jns
ret
loope
and
mov
out
mov
sbb
add
jp
lahf
mov
lahf
sub
jnp
sbb
fdivrs
fists
das
add
cmc
rolb
rcrl
push
sbb
sub
in
std
sub
dec
mov
test
and
or
insb
sbb
push
scas
xor
push
cmp
cmp
fwait
dec
loop
pushf
inc
pop
xlat
jnp
inc
cmp
cli
stos
inc
bound
or
dec
das
faddl
sbb
fidivl
add
pop
mov
push
dec
lds
fdivrs
and
mov
leave
pop
sbb
hlt
xor
fists
push
test
std
jp
cmp
gs
jle
aaa
cltd
mov
add
sub
inc
pop
je
mov
add
cs
push
scas
scas
sub
cmp
and
cmpsb
dec
cmp
in
mov
test
add
and
inc
popf
cmpl
lods
lahf
jno
or
imul
mov
iret
movsl
mov
pop
jp
aas
jmp
mov
out
mov
in
fdivr
pop
pop
sub
js
push
and
jns
push
loope
shlb
mov
mov
cmpsl
sub
popa
push
into
rorl
sbb
cmp
adc
push
add
int
mov
sub
push
inc
pop
das
loopne
inc
pop
cs
lret
icebp
ljmp
ljmp
add
add
sbb
jg
xor
mov
mov
mov
mov
adc
stc
cmp
lea
dec
cmp
in
sbb
lret
gs
mov
or
push
scas
cmc
mov
xor
outsl
pop
xchg
stos
loop
fiadds
xchg
repz
and
mov
mov
mov
xor
mov
cli
mov
data16
aad
in
xlat
fcompl
in
cmpsl
mov
adc
inc
imul
adc
xchg
std
int
sbb
insb
popf
inc
xlat
push
es
dec
imul
jmp
push
inc
xor
jne
mov
roll
inc
es
repnz
stos
fistps
jecxz
mov
and
push
mov
cs
pop
or
and
pushf
ret
fcompl
jb
lea
mov
jge
repz
jb
mov
dec
cwtl
in
je
jle
rcll
pop
loope
or
mov
testl
xchg
add
cld
mov
mov
push
xchg
lock
dec
das
lahf
aas
lcall
mov
and
outsl
mov
es
or
inc
dec
add
pop
mov
adc
cs
pop
dec
add
into
xchg
les
or
dec
dec
imul
iret
imul
mov
push
jge
dec
or
clc
pop
dec
mov
ljmp
out
mov
adc
ljmp
push
dec
inc
jnp
add
addl
pusha
jp
test
lcall
add
push
dec
fsubl
test
insb
xrelease
rcrl
sbb
rcrl
add
sti
in
cmc
add
cmpsl
sbb
mov
nopl
xchg
adc
xor
in
movsb
xchg
inc
mov
mov
lret
ja
fwait
imul
and
lods
inc
or
mov
push
dec
decl
jne
add
or
jbe
loope
adc
int3
jns
stos
xor
out
inc
outsl
sub
loopne
daa
cmpsb
sub
fcoms
mov
inc
nop
mov
push
inc
imul
rcl
pusha
xchg
test
cmp
in
jnp
xchg
sahf
pushf
push
jae
inc
push
push
fisttps
popf
adc
add
mov
add
add
dec
and
adc
xchg
sub
xchg
js
jecxz
push
subb
adc
lcall
scas
push
cmp
cmp
in
shlb
arpl
inc
and
or
push
out
mov
fisubl
pushf
xchg
insb
push
and
xor
arpl
faddp
adc
sub
int
sub
dec
dec
pop
leave
rcrl
hlt
jg
push
push
cmp
inc
jbe
into
mov
sbb
pusha
xchg
mov
jp
int3
jl
rorl
add
cwtl
push
dec
xor
mov
icebp
scas
mov
test
cmp
or
jmp
in
popf
sti
mov
daa
inc
pop
and
lds
bound
fwait
cmp
and
pusha
adc
ror
and
push
lahf
pop
hlt
fists
fldcw
push
mov
js
dec
push
lods
scas
pop
repnz
jae,pt
js
call
push
pushf
out
loope
lahf
loope
ret
sub
sbb
outsb
sbb
jbe
hlt
jecxz
sarb
xor
imul
inc
addr16
stc
and
loope
int
incl
pop
scas
xchg
jmp
push
and
dec
fsubl
jns
sahf
int3
int3
push
test
xchg
jae
or
mov
test
sub
rolb
cmp
cmpsl
pop
sahf
mull
int
lret
pushf
shrl
mov
mov
lock
out
into
jo
or
test
ja
inc
je
outsl
out
pop
loop
add
fs
fadds
fs
or
pop
mov
pop
cli
icebp
mov
xor
movsb
or
add
add
or
gs
cmp
pop
enter
jg
adc
rcrl
call
cmp
repz
fwait
loop
shr
sbb
cmpsl
push
aas
xlat
cmpsl
into
push
sub
sub
cmp
mov
and
pop
jle
movsl
mov
dec
stos
in
inc
cmp
dec
fldcw
push
inc
ljmp
out
mov
test
lods
push
adc
rcrb
insl
cmp
stos
pop
adc
jno
aas
xchg
mov
jb
push
dec
psubusb
and
jecxz
testb
cmp
aaa
mov
testl
imul
mov
push
scas
lock
jle
jle
cwtl
mov
cwtl
push
scas
and
add
ret
out
jg
pushf
popf
insl
xchg
or
cld
mov
dec
mov
ljmp
mov
icebp
dec
xchg
and
cmpsb
adc
outsb
fcmovnb
rolb
iret
adc
push
adc
or
push
in
and
xchg
sub
xlat
aas
xor
popa
or
inc
lods
div
cmpsb
stos
rol
out
dec
lahf
popf
xchg
xchg
daa
mov
sub
punpckldq
add
fistpl
int
int
roll
dec
negb
aas
test
leave
sub
int
xchg
rorl
xchg
pop
js
cld
fwait
adc
fistps
sahf
call
fwait
add
fdivrs
xor
or
adc
and
mov
test
dec
xchg
pop
cmp
xchg
adc
push
movsl
dec
loop
cld
jne
pusha
fnsave
push
add
test
mov
es
in
lcall
dec
imul
or
dec
movsw
lea
or
push
mov
xchg
mov
cmc
arpl
jle
mov
in
dec
andl
mov
sbb
sub
imul
mov
popf
cmp
and
les
icebp
push
inc
mov
call
insb
repnz
scas
inc
jle
push
leave
xor
add
in
iret
pop
jno
ret
movsl
pop
inc
lcall
movsl
ljmp
jo
pop
push
insl
xorl
ret
lds
ret
jae
pop
incb
cmp
movq
shr
outsl
mov
popf
pop
push
hlt
lret
push
mov
bound
adc
mov
sub
push
push
fdivl
pop
test
or
test
int3
addr16
dec
push
jnp
mov
jo
andb
insl
mov
and
dec
mulb
shlb
push
int
in
test
dec
daa
inc
mov
in
jno
lcall
or
in
orl
enter
hlt
xlat
add
push
lock
add
inc
mov
xorl
jb
out
pop
gs
mov
pop
idiv
push
push
aaa
inc
loope
xchg
mov
sub
mov
sub
pop
and
xchg
mov
andb
sbb
dec
jnp
push
inc
mov
leave
mov
inc
int
xor
pop
sub
or
fmull
xlat
sbb
int
sahf
outsl
inc
rolb
loopne
jg
dec
and
adc
lods
mov
test
mov
or
adc
cmp
bound
div
out
inc
lret
pop
roll
mov
inc
cwtl
mov
into
push
sbb
cmc
dec
jae
xor
jle
loop
push
iret
stc
add
fs
int3
xchg
add
fisttpl
xchg
mov
lods
pop
inc
das
mov
cltd
out
push
adc
and
sbb
cmp
ja
sti
push
test
pop
gs
pop
in
stos
adc
cmovp
mov
call
iret
mov
xlat
out
jmp
mov
cmpsl
mov
jmp
repnz
cs
sbb
nop
outsb
inc
out
dec
or
pop
inc
dec
ljmp
cmc
cmp
jmp
stc
push
call
sub
mov
jae
push
adc
adc
and
inc
push
cmp
lea
xor
mov
push
orb
xor
jo
inc
shrl
in
jle
ret
mov
sbb
mov
adc
test
fadds
pop
enter
cmpl
testb
outsl
and
pop
sub
push
mov
aas
out
ret
jbe
imul
pop
out
insl
js
aas
dec
negl
cmpsl
inc
push
mov
rcll
jecxz
leave
mov
dec
dec
lret
mov
lea
pop
sbb
mov
sbb
aam
lahf
fnstsw
xor
rcrb
sub
test
imulb
fs
mov
js
fdivrp
cwtl
push
add
add
add
and
fsubs
inc
mov
or
std
dec
pop
aas
test
mov
or
shll
push
fwait
inc
sarb
aad
in
add
lods
clc
clc
je
xor
inc
xor
xchg
sub
mov
subl
fimull
ja
daa
xchg
dec
test
inc
dec
fwait
popa
or
jne
mov
les
mov
cmp
bound
hlt
idivb
leave
insl
in
push
dec
cmpl
lahf
out
add
sub
push
js
movsb
jne
jp
loope
mov
add
lds
fcomps
jle
mov
sti
pusha
enter
je
push
out
in
jmp
xor
jmp
push
outsl
jg
bound
mov
imul
pop
xchg
mov
mov
ljmp
adc
int3
iret
mov
or
pop
jl
cs
sti
iret
arpl
outsl
or
mov
stc
sbb
int3
sbb
sbb
mov
sub
jns
lds
std
add
add
xacquire
leave
rol
hlt
adc
or
jbe
int3
cmpsb
jge
adc
sbb
sbb
aaa
sub
pop
add
pop
int3
push
pusha
mov
xchg
cs
pop
mov
divl
jecxz
scas
dec
sub
and
sub
stos
movl
inc
ds
cmpsb
roll
in
imul
enter
daa
inc
insb
push
cmp
jne
jno
pop
sti
jl
cmpsl
ljmp
jae
movsl
iret
and
push
mov
hlt
mov
push
inc
iret
xorb
decl
xor
lods
stos
js
leave
mov
ss
push
xchg
sub
mov
sub
insl
mov
shl
sub
lock
sbb
jp
sbb
pop
fimuls
and
sarb
or
jo
nop
inc
sahf
sub
pop
lods
les
push
shr
ret
out
ja
pop
in
sahf
adc
and
dec
pop
bound
aas
cltd
add
pop
ss
cmp
mov
sbb
fdivrl
rcll
rorb
rorb
into
imul
adc
imulb
imulb
cli
popf
loop
stc
mov
xor
add
fsubp
lods
inc
mov
mov
ja
and
push
cli
push
hlt
pop
xor
mov
and
gs
sbb
xchg
cmc
das
pop
add
mov
fadds
sub
aam
adc
mov
xchg
inc
xorb
push
xor
sbb
aas
popa
sub
cmp
xchg
popf
adc
adc
cmp
add
cs
enter
jns
nop
dec
int
dec
push
cli
cli
fsts
sub
jecxz
icebp
lods
in
xchg
call
stos
pop
fistps
dec
push
adc
mov
pushf
ret
arpl
pop
pop
sub
inc
add
xor
aas
rcrb
sbb
dec
std
out
je
mov
sarl
push
std
add
cmp
mov
repz
sbbl
nop
add
in
jmp
in
fucomi
das
cmp
repz
push
add
ret
add
lea
insl
pop
sti
insl
dec
repnz
loopne
inc
loop
mov
cwtl
and
cld
mov
jmp
mov
push
mov
mov
lods
add
sub
xlat
mov
mov
sbb
or
clc
or
mov
mov
and
int
out
stos
lahf
leave
ljmp
xor
loopne
loope
and
setns
push
mov
or
inc
shrl
jmp
repz
adc
sar
xchg
pop
into
movsb
jmp
push
in
sub
add
xchg
call
in
enter
loope
out
arpl
xor
mov
xchg
lods
mov
sti
nop
loop
add
sub
inc
jecxz
mov
mov
push
xorl
lahf
mov
stos
or
adc
into
pop
or
mov
popa
or
mov
sub
shr
or
jp
mov
mov
pushf
fidivrs
dec
icebp
jle
xorl
push
outsb
fists
xor
jmp
call
jle
sub
add
lds
bound
push
sti
sub
imul
scas
or
int3
push
push
insl
xor
mov
lock
pop
stos
xor
call
dec
add
arpl
ljmp
ds
loop
cmp
inc
imul
fidivrl
stos
xchg
jno
cld
sbb
jae
pop
pop
xchg
rcr
sbb
rcrb
cltd
mov
inc
dec
in
cmp
dec
hlt
pusha
jne
push
es
jbe
cli
in
dec
or
lret
aaa
xchg
pop
bound
xchg
outsb
filds
jmp
outsl
.byte
ret
nop
