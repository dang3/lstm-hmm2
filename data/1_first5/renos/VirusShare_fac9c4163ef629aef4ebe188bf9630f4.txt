scas
xchg
pop
mov
jecxz
fsubl
mov
mov
push
pop
push
ficomps
mov
aam
out
out
lea
push
ds
xchg
cmpsl
scas
inc
xchg
push
ja
out
inc
pop
dec
xchg
in
incb
xchg
sysret
and
pop
loop
pusha
cli
sub
icebp
inc
xchg
out
call
cld
jno
dec
mov
mov
push
cmp
inc
fimuls
cld
xor
jb
jge
pop
out
movsb
aas
out
pop
test
push
outsl
roll
sbb
lret
cwtl
int
sub
mov
dec
mov
xlat
aaa
pop
adc
jb
jmp
cmc
pop
mov
aad
nop
mov
push
xchg
cmpsl
out
mov
jns
rol
sahf
and
out
cltd
inc
inc
jp
cmp
cmpsb
lods
and
pushf
sub
loope
mov
mov
cmpsl
insb
idivb
clc
cmp
adc
inc
mov
inc
push
jns
into
insb
mov
dec
fnstcw
movsb
stc
insb
push
push
adc
push
inc
push
sbb
lods
jae
test
xor
mov
and
inc
mov
iret
mov
xor
push
cld
mulb
loop
jl
rcrb
filds
lret
dec
mov
push
xchg
cmp
leave
cmp
fwait
mov
pop
jo
dec
sbb
push
cmp
mov
gs
sbb
popf
inc
mov
mov
sti
or
popa
jae
xor
ds
inc
cmpsl
xorl
jae
outsl
fsubl
xor
ljmp
add
repnz
imull
inc
pop
or
xor
sbb
mov
sub
mov
xchg
dec
sti
arpl
pushf
mov
rcrl
es
push
daa
in
out
and
jg
mov
dec
test
mov
sub
test
xchg
in
jecxz
in
movsb
lret
pop
inc
push
mov
aam
les
ficoms
icebp
pushf
out
mov
loopne
adc
and
dec
inc
pop
mov
ss
dec
jae
sbb
insl
inc
xchg
subl
sub
leave
pop
nop
stos
cmpsl
out
pop
in
shl
and
fistpll
pop
xorb
xor
int3
dec
aaa
jg,pn
dec
int3
cmp
add
pop
idivl
dec
daa
mov
addr16
mov
sub
sti
in
stc
les
ljmp
in
pop
or
stos
sahf
lea
or
bound
adc
adc
cli
out
fwait
adc
lea
push
int
lcall
movsb
add
frstor
jmp
dec
stos
aaa
push
test
shr
lea
je
and
cmp
dec
or
xchg
mov
leave
jne
xchg
ja
jo
stos
sub
mov
add
jo
pop
push
sbbb
and
std
sub
xchg
negb
sbb
dec
jl
push
and
push
push
imul
aad
hlt
sub
outsb
inc
cmc
rcll
sbb
loop
or
jle
and
add
sti
jp
mov
clc
sub
pop
inc
out
les
mov
ficoml
lahf
lods
mov
stc
je
xlat
jp
mov
bound
ret
or
add
sub
nop
dec
mov
cs
and
movsb
mov
lods
rcrb
imull
das
cmp
jnp
or
jecxz
add
dec
sarb
imul
test
int
repnz
sbb
or
add
mov
xchg
xchg
stos
or
xor
add
sbb
aaa
mov
orl
cmp
ret
cmp
xchg
xor
jnp
pop
les
mov
add
sub
dec
fs
jp
imul
push
hlt
push
sbbl
scas
add
iret
arpl
mov
outsb
in
je
cmpxchg
sarb
cs
pop
push
sbb
in
mov
in
xor
cld
imul
rorl
lods
shll
sub
repnz
and
xor
gs
enter
jns
dec
jnp
jb
cmp
outsb
mov
jp
add
pop
xor
xor
adc
cwtl
pop
mov
fists
out
popa
mov
xor
jg
in
addl
inc
int3
fistpl
inc
gs
jns
pop
push
outsb
push
ret
orl
jnp
rcrl
mov
scas
inc
daa
pop
and
sbb
pop
in
rcll
dec
dec
lods
inc
sub
adc
mov
stc
cli
je
pop
in
cmp
movsl
push
test
cltd
lahf
add
mov
call
shlb
push
ja
das
das
ficoms
loope
push
push
or
xchg
loope
aad
sub
or
push
jbe
jb
sbb
cmp
jp
mov
sahf
scas
push
data16
sub
pop
loope
and
sbb
dec
mov
add
xchg
scas
iret
lock
lods
sarb
aad
or
xor
jbe
sub
call
ljmp
sbb
sub
jnp
cwtl
roll
and
pop
adc
fimull
xor
pushf
clc
rorb
fsubrl
push
inc
ljmp
add
mov
leave
popf
jnp
cmp
outsb
int3
jle
sbb
mov
loope
pop
add
rcl
xor
inc
ja
js
in
jne
js
jne
dec
mov
aas
mov
and
stos
fistps
or
cmp
or
sub
mov
push
adc
cvtdq2ps
mov
movsl
andl
fcmovbe
mov
jecxz
jl
pop
cli
cmc
dec
outsl
mov
sarb
add
aaa
stos
fcmovnu
mov
cmpsl
push
pop
and
movsb
mov
push
inc
mov
mov
pop
mov
dec
dec
fdivp
mov
fists
jp
rcll
rcrb
cmp
adc
push
xor
dec
push
jbe
rol
and
jl
and
adc
mov
sbb
lcall
insb
push
es
cmp
or
insl
divl
and
ss
pushf
repz
dec
adc
pop
mov
clc
sub
cmp
cmpsb
add
hlt
ja
pop
sub
or
mov
mov
xor
imul
insl
jo
inc
scas
in
pop
dec
dec
and
fwait
pop
test
out
sbb
mov
shlb
shlb
outsl
xor
in
fistpll
jle
test
dec
fldt
pop
cmp
push
ficoms
sub
push
xchg
stc
adc
adc
inc
sub
mov
jecxz
sbb
push
divl
xor
adc
mov
jne
jno
cmp
rcll
movsl
test
mov
pop
mov
subl
pop
pop
add
iret
stos
aad
pushf
dec
or
movsb
mov
in
or
lock
or
mov
insl
xchg
lret
sbb
test
lock
lcall
mov
insl
xor
and
and
add
sbb
adc
sub
lods
adc
mul
pusha
insb
addr16
test
push
push
ret
aas
leave
push
push
sub
push
pop
or
fadds
es
shl
out
mov
movsl
push
pop
mov
add
pop
xor
sbb
xchg
cmp
imul
dec
or
pop
xor
enter
mov
daa
in
imulb
push
cld
leave
fs
sub
mov
fistl
inc
xor
gs
pop
jmp
insl
shrb
imul
adc
jg
sub
dec
mov
sbb
mov
je
movsb
rolb
cli
popa
xor
cmpsb
push
mov
ja
cmp
pop
pop
decb
js
mov
add
sahf
aad
dec
pop
jb
sbb
mov
xlat
clc
jecxz
xlat
orb
cmpl
idivl
add
repz
xchg
adc
xor
out
outsl
cld
dec
cwtl
jnp
ss
pop
jle
aaa
jl
or
push
subps
mov
repz
or
mov
pop
cwtl
or
mov
mov
jg
rcll
pop
addr16
scas
add
cmp
cld
inc
test
addl
call
push
out
cltd
pop
jbe
xchg
pop
outsl
cltd
pop
scas
push
inc
mov
lret
in
ljmp
mov
dec
mov
sub
dec
mov
repnz
repnz
pop
push
pop
into
adc
mov
rolb
push
adc
inc
sub
rcll
stc
xchg
leave
lods
fwait
mov
or
xor
outsl
lcall
xchg
mov
push
mov
mov
inc
icebp
xor
pop
sbb
mov
mov
push
orl
in
add
gs
or
jo
cmpsb
out
mov
inc
div
jb
aad
je
xor
sub
jecxz
inc
or
sub
fcompl
repnz
repnz
shrb
inc
cmp
int
mov
mov
dec
imulb
pop
mov
or
orl
sbbb
lret
and
and
push
test
es
pop
jp
call
inc
mov
sahf
mov
ljmp
filds
addr16
shlb
fwait
mov
mov
pop
mov
push
mov
incb
sbb
xor
daa
pop
xchg
jns
repz
pop
inc
dec
inc
shlb
sub
xor
out
cmp
sbb
out
add
inc
mov
loop
sbb
jmp
xor
sbb
xchg
bound
add
loopne
outsb
pop
mov
sbb
or
ds
mov
sahf
fstps
mov
push
sub
xchg
lahf
stos
dec
sub
add
inc
inc
or
inc
filds
jmp
ljmp
sub
mov
or
fcmovnu
or
xlat
and
mov
clc
lret
inc
stc
enter
inc
sub
fstps
inc
xchg
mov
aas
mul
mov
sarb
mov
sub
aaa
fstpt
adc
sbb
ret
outsl
arpl
sub
xor
bsr
mov
and
push
stos
js
and
nop
insb
mov
jnp
jne
out
fldl
push
inc
cmp
mov
les
mov
jb
cmc
lock
sub
pop
ljmp
or
sbb
jno
shrb
push
mov
or
out
cmp
xor
enter
ss
test
rcl
aaa
sbb
scas
loope
jb
test
dec
cmp
pop
pop
out
cmp
clc
sbb
arpl
sbb
es
das
out
mov
sahf
mov
int
cmp
jle
fidivrs
fsubrs
inc
testb
xor
mov
inc
sbb
ret
xchg
shll
push
test
push
frstor
dec
mov
nop
loopne
add
lea
scas
rol
cmp
shrl
xchg
dec
mov
jo
cmp
dec
pop
jns
push
cmp
sarb
imul
xchg
je
xor
and
jl
pop
js
dec
outsb
add
add
push
adc
xchg
sbb
inc
pop
outsb
ror
scas
xor
dec
ljmp
out
pop
mov
jae
lret
cli
in
push
pop
fwait
jnp
les
jl
cmp
daa
jo
mov
lahf
aaa
iret
and
inc
cmp
add
push
gs
dec
push
jle
orl
ud2
cmp
mov
js
dec
mov
push
fmull
out
jmp
icebp
dec
inc
aas
sbb
cmp
outsl
fwait
scas
adc
sub
out
fistpl
xchg
sub
adc
scas
or
or
jb
mov
lcall
clc
sarl
sar
cmp
and
fnstenv
aam
negl
sbb
es
popa
inc
out
mov
mov
movsb
jle
daa
sub
lods
fwait
or
lock
addr16
bnd
out
out
rcrb
in
data16
outsl
addr16
outsl
xchg
mov
je
push
lock
jge
mov
jo
fisubrs
notl
call
xchg
xchg
xchg
imul
push
jo
cmpl
ja
arpl
add
repnz
ret
leave
or
dec
les
fmull
cmc
imul
sub
cld
test
test
ret
jge
pop
sub
mov
jbe
cmpsl
inc
lret
xchg
jp
sub
les
lods
test
mov
xor
push
subb
xchg
shll
mov
cmp
inc
int3
push
push
in
pop
xchg
jae
test
pushf
mov
inc
arpl
add
push
sbb
add
jle
ja
mov
sub
inc
cmpsl
pop
dec
mov
sahf
call
out
xchg
popa
fcmovnbe
fidivrl
jmp
xchg
xchg
xor
and
cmc
fnsave
cltd
xchg
pop
cmp
cld
add
scas
stos
push
cmp
jbe
inc
cmp
insb
jo
not
mov
loopne
mov
js
pop
mov
add
push
lock
clc
and
mul
into
movsb
inc
fwait
push
push
sub
inc
hlt
xchg
or
cwtl
divl
out
and
aad
out
pop
pop
cmc
or
cli
sub
cmp
mov
mull
dec
hlt
sub
out
outsb
xor
bnd
divb
jnp
es
mov
fisttpl
daa
and
dec
mov
loopne
lea
adc
dec
push
shll
add
addr16
fxch
pushl
mov
arpl
std
lcall
outsb
pushf
jo
jmp
cmp
xlat
fldt
jo
enter
insb
sbb
sbb
mov
fistpll
cmpsl
int3
int
lock
test
cmp
inc
jmp
fdivrl
fistps
sub
imul
mov
sbb
sti
mov
std
aas
sbb
xchg
mov
and
push
mov
xlat
leave
mov
fidivs
mov
loop
xchg
push
sahf
mov
sbb
ja
aaa
je
xchg
jg
jbe
rcrl
adc
in
mov
jns
xchg
or
mov
push
push
mov
xor
sub
aad
inc
pop
cli
mov
mov
adc
arpl
outsl
push
add
clc
out
jge
push
and
push
jg
xor
adc
loopne
mov
mov
jns
jnp
add
out
mov
fstpl
sub
jno
pop
popf
pop
fadds
push
fcomp
push
movsl
or
xor
dec
pop
xor
shlb
sbb
jbe
mov
into
sub
fcoms
add
mov
ds
mov
inc
jnp
push
jne
into
xchg
stos
lret
inc
jnp
pop
sub
and
test
jne
fnstenv
pop
sbb
cwtl
add
mov
cltd
lods
mov
add
mov
inc
arpl
mov
lods
sub
cmp
xchg
scas
mov
dec
push
aas
or
fs
pop
push
jns
jl
scas
push
out
lods
scas
pop
push
sub
aam
mov
cld
xor
sub
fiadds
cmp
hlt
fwait
mov
and
add
or
jnp
xchg
lods
jno
test
dec
pop
xchg
or
adcl
stos
dec
rcrl
jbe
sub
cmp
adc
cmpsb
xlat
fmull
jno
xor
adc
pop
and
add
dec
mov
jmp
push
stos
cmpb
aam
mov
jo
mov
and
and
push
pushf
decb
cmp
xchg
mov
ret
jnp
mov
int
test
mov
pushf
sbbb
lret
and
sbb
sbb
mov
push
lock
sbb
and
je
lods
cmc
incb
int
add
jle
sub
mov
lea
hlt
daa
jecxz,pn
jo
jge
pushf
sbb
popa
push
sub
dec
jbe
push
mov
mov
jp
xchg
sub
lea
cli
jmp
int
mov
fcmove
movsl
dec
push
push
mov
ret
mov
inc
cmovbe
movsl
ror
and
or
stc
or
inc
daa
cld
andl
push
pop
aam
xchg
repz
in
scas
mov
jmp
clc
imul
sti
in
nop
jo
fidivrl
cmpsb
mov
mov
xor
out
xchg
mov
in
xchg
test
scas
lds
int
fwait
sub
inc
inc
cmp
push
js
add
push
out
mov
out
or
jb
sbb
jns
outsb
push
aam
lock
divl
inc
fisubrl
stos
and
xchg
pop
xor
or
rorl
fisubl
inc
add
and
lods
inc
dec
test
dec
add
push
in
popf
arpl
xchg
leave
and
lods
data16
push
pop
inc
inc
or
push
dec
jb
bound
ret
inc
pop
lods
jnp
out
jl
pop
daa
stos
loope
cmp
cltd
push
out
add
test
inc
or
inc
xorl
jl
fbld
jno
data16
mov
push
lahf
sbb
pop
andl
pop
sub
push
hlt
daa
fistl
cld
outsb
cmp
dec
mov
jbe
sub
ret
out
or
mov
add
dec
shlb
call
fwait
test
add
sbb
into
pop
lret
push
scas
xchg
sbb
cmp
jo
sbb
mov
cmp
cmpsb
rorl
and
and
or
sbb
test
es
popf
mov
add
mov
js
mov
out
dec
adc
pop
popf
dec
add
fwait
mov
jbe
or
mov
incb
push
scas
pop
ljmp
stc
mov
cmp
lcall
mov
loopne
mov
insb
imul
mov
jge
lret
btr
and
cmpsb
mov
mov
mov
dec
ss
and
dec
cli
testl
movb
sbbl
push
jbe
sub
or
or
scas
fcmovu
dec
adc
ret
ja
int
mov
out
and
icebp
mov
push
jg
mov
cmp
pop
cmovb
iret
fisubl
stos
lods
ficompl
bound
enter
lock
or
int3
int
xorb
negl
jbe
jnp
xchg
movsb
push
stos
cmpsb
scas
test
cmpsl
hlt
mov
or
inc
movsb
adc
je
adc
test
mov
sti
mov
aaa
movsl
aad
mov
xor
ret
sbb
sbb
sub
mov
popa
mov
sub
jne
out
jo,pn
stc
dec
inc
and
je
test
push
popf
mov
neg
roll
int
clc
fs
enter
mov
data16
sbb
xchg
pop
xor
cmp
icebp
jne
repz
xchg
push
into
into
mov
push
out
and
fisubs
fwait
jns
cmp
lret
fucomp
sub
ljmpw
or
mull
mov
sub
pop
faddl
and
mov
mov
call
inc
and
pop
ret
ficoml
sbb
cmp
xchg
cmp
popl
popf
mov
fs
pop
jb
xchg
mov
nop
sbb
cmp
clc
fisttps
outsb
fs
nop
adc
aad
adc
inc
push
adc
leave
mov
adc
fidivl
dec
jecxz
addr16
jb
mov
dec
cmp
sbb
popa
popf
xchg
jl
mov
sub
aad
ja
in
mov
add
mov
shrb
push
adc
xchg
xchg
adc
aas
mov
imul
inc
iret
stos
inc
and
jno
stos
pop
testl
mov
lds
out
jb
sahf
xchg
mov
mov
mov
and
xchg
jl
adc
or
dec
add
sub
leave
add
fnstcw
xchg
xchg
jge
scas
aad
lcall
cli
test
xor
popf
cmpb
fsubs
into
inc
push
ds
js
mov
pop
cmp
push
fdivl
pop
pop
jmp
js
sub
xor
imul
and
or
dec
lret
not
jl
xor
xchg
inc
fiaddl
mov
cmc
or
or
popl
sbb
lret
adc
sbb
mov
stos
mov
cmp
into
sub
xlat
test
inc
ja
xchg
mov
dec
pop
push
pop
mov
mov
xor
pop
rcrl
fdivl
icebp
and
jge
testb
and
inc
scas
mov
cmp
daa
out
jmp
stos
pop
jo
sti
xor
aam
or
call
add
das
cmpsl
outsl
dec
mov
inc
pop
loopne
cmp
xchg
clc
loopne
adc
jnp
lcall
outsl
imul
clc
neg
dec
sbb
sbbl
popa
pushf
mov
lea
sub
test
shll
sti
stos
ja
jmp
sub
aad
sahf
std
xor
sub
pop
lds
insl
fwait
adc
cs
xchg
jne
mov
and
aas
jecxz
pop
pop
loopne
cld
movsl
adc
add
mov
cltd
dec
dec
cmc
push
pop
pop
or
pop
call
shll
lods
add
inc
mov
jp
dec
aam
sbb
movsl
push
or
push
push
je
ss
scas
push
pop
in
outsb
jg
mov
inc
push
or
pop
mov
inc
aaa
adc
bnd
cmpsb
pop
shrb
lds
fs
xchg
mov
add
ficoml
cli
adc
push
push
loop
loop
std
rcr
shrb
fidivrl
mov
jnp
ss
into
hlt
sti
ficomps
mov
js
mov
cli
xchg
cmp
mov
out
jbe
outsl
test
inc
dec
ss
sbb
es
pop
xchg
mov
outsl
nop
mov
push
cs
cli
repnz
sbb
loope
cmp
inc
jmp
aam
test
push
jo
mov
nop
test
jae
push
push
mov
iret
adc
lods
fdivrl
aaa
lcall
sarl
mov
jne
loope
mov
or
mov
cmp
mov
outsb
cwtl
or
jbe
mov
les
fwait
iret
sub
dec
movsl
test
enter
aaa
cwtl
sub
mov
jbe
or
mov
push
scas
pop
mov
mov
popa
js
pop
in
or
clc
cmc
divb
out
rorl
pop
aas
loope
and
shrb
test
push
pop
add
test
add
rol
push
hlt
add
xor
repz
je
sub
and
insb
sub
push
cmp
les
loop
add
inc
lock
xlat
lret
dec
ds
lods
and
and
jbe
mull
jge
dec
fmull
pushf
dec
pusha
add
cltd
jecxz
xchg
sbb
fstpt
inc
insl
or
imul
test
sub
lods
or
sbb
add
imul
test
sbb
inc
out
xor
xor
sti
jnp
inc
xchg
sub
es
cli
dec
cmpsb
pusha
in
aad
jle
mov
std
pop
lret
pop
and
ja
lds
dec
push
mov
mov
or
sti
loopne
mov
mov
sarb
mov
inc
jecxz
leave
in
pop
test
mov
xchg
iret
sbb
loopne
out
xchg
push
inc
insl
jae
and
sbbb
inc
addl
jo
push
xchg
pop
push
adcl
adc
pop
adc
pop
iret
mov
in
pop
inc
push
outsl
xchg
adc
sahf
inc
xchg
xchg
int
dec
les
adc
or
in
subb
and
jge
and
enter
or
dec
jb
fiadds
lcall
test
mov
and
dec
mov
add
lcall
fadd
test
loop
xchg
pusha
inc
int3
mov
adc
faddl
push
xor
enter
out
outsl
test
pushfw
or
mov
xor
into
loopne
cmp
and
sar
sbb
xor
jmp
das
pusha
add
fdivrl
cmp
pop
stos
repnz
cld
rcll
cli
jae
out
mov
outsb
inc
jbe
test
lds
adc
push
icebp
fldenv
add
xorl
sbb
sub
pop
mov
push
call
data16
andl
push
push
mov
sahf
repz
in
jle
movsb
xor
jecxz
sbb
int3
inc
adc
mov
push
and
idivl
xor
push
inc
jae
sti
leave
xchg
stc
ja
fstpl
and
mov
pop
jno
icebp
mov
sub
xor
push
add
iret
popa
fldl
test
daa
xchg
or
jp
cmp
adc
sub
jmp
sbb
xchg
fwait
jo
je
pop
repz
adc
push
cmp
mov
sbb
sub
pop
jbe
lods
pop
leave
arpl
daa
orl
dec
jp
or
mov
jae
in
mov
sub
hlt
hlt
lcall
push
or
or
bound
inc
shll
push
pop
gs
fdivl
and
pop
outsl
insb
dec
ret
pop
fs
fsubs
lods
ds
lahf
pop
xchg
sarl
pop
stos
cwtl
sbb
rolb
mov
lods
jp
sti
mov
pop
popf
xchg
paddusb
or
inc
clc
mov
mov
rcll
xchg
cmp
push
loopne
xchg
push
adc
test
aaa
shl
sahf
out
xor
dec
sub
xchg
and
icebp
xor
daa
movsb
vmovddup
rcll
push
fdivrs
aad
add
les
mov
addb
mov
mov
jae
mov
or
ret
test
mov
adc
leave
cmpsl
outsb
adc
cltd
push
outsl
daa
adc
ret
dec
hlt
rcrl
loop
inc
loopne
scas
xor
mov
cld
out
adc
push
test
idivb
test
lret
pop
outsl
push
xor
shlb
cwtl
sbb
sbb
push
out
lcall
insb
jno
jne
xchg
stc
cli
dec
dec
pop
mov
xchg
xor
in
insl
add
lods
push
mov
bound
push
xchg
add
pop
nop
cmp
cmp
lods
inc
jbe
faddl
mov
sub
aam
stc
lcall
fcmovnb
jne
ret
outsl
inc
fs
nop
out
out
aas
fcoms
and
xchg
cmp
out
je
je
adc
cmp
xchg
rorl
cli
pop
sarb
stos
int
cmc
mov
or
fstpl
enter
xchg
out
sbb
fdivs
push
add
mov
jne
neg
sbb
xor
inc
xchg
mov
bound
cmp
into
mov
cmpsl
test
lahf
jmp
stc
cs
pop
dec
push
pop
or
fistpl
dec
pop
mov
jge
repnz
pusha
sbb
mov
in
push
adc
sti
xchg
leave
pop
std
lret
jp
mov
pop
lods
sbb
add
adc
jle
or
adc
outsl
inc
movb
movsb
fisubl
ljmp
pop
adc
sub
stc
pop
push
adc
pop
inc
gs
lcall
and
xor
aad
fists
sub
add
jo
sahf
mov
pop
dec
addr16
mov
addr16
sarb
xor
xor
sub
inc
addps
enter
jmp
xor
cmp
or
mov
into
mov
push
jno
add
xchg
loop
cld
sub
dec
cmp
popa
sub
les
cmp
fists
xchg
scas
cwtl
adc
lahf
xchg
leave
out
mov
jo
in
cmpsb
mov
ret
loope
in
pop
movsb
in
cwtl
popf
sbb
cmc
xor
popf
xor
pop
jmp
lcall
sbb
push
shlb
or
int
dec
movsb
xchg
mov
push
das
sbb
pop
jmp
fstl
xor
rolb
negl
cltd
stos
push
mov
mov
out
out
repnz
sbb
fmul
jg
arpl
add
adc
add
jno
mov
pop
sbb
ja
hlt
test
xchg
jb
dec
repnz
nop
or
and
pop
lds
popa
xor
inc
pop
inc
icebp
dec
gs
jl
and
xlat
fiaddl
add
loope
shll
ds
js
jmp
sbb
loop
jo
lds
mov
shll
out
mov
lock
int
leave
xor
loop
sbb
test
jbe
subb
adc
dec
mov
iret
repz
and
pop
gs
fs
aad
iret
jmp
insl
ret
dec
or
scas
call
test
mov
jl
sub
sbbb
inc
mov
and
stos
xchg
mov
adc
jp
cmpsl
xlat
sbb
xor
mov
push
add
mov
push
ficoms
jmp
lods
movb
sub
mov
sti
fwait
mov
cmpsb
and
xchg
or
sbb
mov
cmc
int
dec
mov
test
mov
dec
lahf
xlat
aam
xchg
adc
aaa
js
fcmovb
push
mov
aam
cli
shrb
adc
push
sbb
mov
imul
pop
gs
insl
xor
jg
sbb
jecxz
xor
aad
mov
push
lock
mov
push
imul
arpl
lcall
orl
mov
xchg
cmp
das
jecxz
jns
xor
les
out
add
jnp
mov
add
loopne
icebp
pop
subl
cmpsb
movsb
cmp
mov
movsl
pop
call
jno
iret
pop
jb
mov
je
inc
sbb
in
es
mov
jp
mov
jle
mov
movsl
sbb
push
enter
mov
adc
or
pushf
jbe
xor
and
lret
jecxz
out
dec
sahf
inc
inc
push
lahf
loopne
inc
sarl
mov
das
and
add
decl
scas
and
jecxz
nop
jnp
stos
jl
jne
pop
mov
mov
into
leave
or
aam
repnz
lods
les
in
vmread
jl
xchg
xchg
rolb
inc
sbb
test
into
test
add
popa
adc
jno
or
push
out
mov
or
and
in
and
pop
cmpl
adc
mov
xor
mov
sub
in
xchg
sub
xor
and
pusha
adc
cmpl
sbb
and
mov
repz
test
dec
xchg
or
sti
cs
inc
insb
jmp
sbb
sub
sbb
lret
push
lret
adc
sbb
ret
dec
cmp
cmp
sub
dec
ja
int3
ja
stos
dec
mov
lods
cmpsl
mov
loopne
cmp
fcoml
mov
fcomp
cmp
xlat
lds
sub
insb
push
xlat
sbb
adc
pop
lret
pop
mov
xor
and
add
xor
lods
nop
nop
lods
mov
xlat
mov
es
add
adc
adc
int3
xchg
jb
das
add
xchg
out
push
ja
and
daa
sti
xchg
popf
add
out
inc
out
xchg
sbb
jmp
mov
xlat
popf
cmp
jns
lahf
and
adc
out
inc
fsubs
ret
push
xor
mov
fwait
inc
mov
add
pop
mov
loop
clc
into
xor
pop
fstpt
mov
sbb
popa
mov
ret
test
jp
int3
push
out
sbb
push
xchg
and
out
adc
sub
and
and
gs
xor
pop
roll
test
mov
jp
push
cltd
test
out
enter
enter
add
xchg
xchg
std
pop
outsl
mov
data16
inc
inc
je
xor
pop
repnz
or
int3
pushf
adc
xchg
push
pop
sub
sti
pop
lods
cmpsl
push
cmpb
pop
andb
mov
xor
in
test
sbb
enter
inc
pop
js
pop
push
mov
xor
insl
or
sar
hlt
mov
xor
add
cmp
andb
or
mov
xchg
aam
sbb
lret
rorl
fdivrl
add
js
dec
pushf
or
push
sti
cs
jecxz
outsl
sarl
mov
xchg
mov
negl
cmpsl
test
sbb
mov
aam
cmp
xchg
decl
pop
push
lea
pop
or
push
mov
xchg
lock
fwait
setns
jmp
data16
les
dec
or
and
das
mov
ss
das
loope
fwait
xchg
and
sbb
xor
or
mov
in
add
pop
es
pushf
and
mov
clc
std
je
hlt
aaa
sbb
adc
or
mov
das
stos
rolb
insb
push
lcall
inc
scas
out
gs
cltd
mov
inc
movsl
les
popf
mov
pushf
jle
push
test
cs
and
dec
sub
pop
movsl
cmp
enter
sbb
aas
xchg
js
jnp
outsl
mov
add
pop
mov
rcl
jecxz
cwtl
pushf
pop
cmp
fwait
and
rol
stos
test
lahf
xlat
cmpsl
cwtl
xchg
sub
fsubs
dec
and
mov
pop
les
adc
mov
xor
enter
or
push
aad
fists
iret
or
popf
ficomps
cmp
jmp
insb
xor
sub
int
loope
gs
out
jnp
es
pop
pop
mov
jne
in
dec
movsl
out
lods
push
and
scas
loope
sub
aas
mov
int
push
and
pushf
bound
sbb
jno
rcl
icebp
sti
popl
mov
push
push
mov
xor
lcall
mov
daa
sub
cmpsb
xlat
push
cmp
jno
or
add
pop
mov
xor
mov
add
les
push
push
out
cs
loop
cmova
jp
in
cmc
jp
xchg
lds
push
fs
andb
inc
mov
popa
decb
cltd
and
out
or
and
call
or
in
push
push
lcall
mov
mov
ja
pop
pop
push
out
mov
test
stos
bound
in
fisubrs
cmpsb
and
cmpsb
mov
addr16
rcll
add
pop
gs
ret
dec
scas
mov
lds
inc
je
lods
std
dec
or
ret
add
test
loope
lret
sub
sub
lret
jge
jno
ret
inc
outsl
xchg
inc
jnp
leave
dec
inc
lods
nop/reserved
inc
push
aad
repnz
dec
sub
jnp
in
subl
cs
jbe
ja
adc
rcl
addr16
cmp
addr16
adc
in
lret
push
sbb
mov
incl
pusha
mov
jge
stos
xor
popa
xor
in
xor
fldenv
cld
insl
mov
cmp
repz
sarb
insb
rcr
daa
pop
xor
push
mov
jl
inc
lcall
mov
and
push
pop
aam
into
in
inc
adc
sub
mov
arpl
dec
stos
rcrl
scas
xlat
rcrb
add
and
mov
jae
mov
movsb
bound
pop
inc
cmp
mov
lret
lods
xor
dec
ds
sbbl
lret
stos
sar
leave
leave
call
xlat
jecxz
flds
or
push
mov
mov
enter
mov
jo
jl
lds
add
xor
test
mov
pop
hlt
js
inc
fstpl
stos
sub
cld
fldl
sub
cmpsl
sub
cwtl
lcall
popa
sahf
mov
adc
mov
jl
ds
cld
dec
insl
insl
jmp
mov
mov
push
sub
and
fsubrs
dec
sbb
cmp
xor
adc
hlt
jl
testl
push
jge
adc
enter
xchg
imul
xorb
fmuls
imul
pop
xlat
jg,pt
xchg
fwait
arpl
nop
loop
sbb
mov
out
popa
xor
or
int
add
sub
mov
sbb
leave
lods
add
divps
pop
je
out
and
fmulp
leave
popf
inc
outsl
fiadds
leave
stos
enter
lcall
shl
jo
mov
adc
mov
jmp
mov
addb
adc
pop
push
xor
mov
push
pop
insb
adc
push
mov
push
gs
dec
call
call
stc
cwtl
xor
jmp
std
testb
mov
std
pop
lahf
xchg
cwtl
pop
fsubrl
loop
xor
repnz
testl
fidivrs
pop
lea
jle
xor
mov
mov
pop
jns
xchg
inc
xlat
dec
scas
dec
daa
out
dec
xor
xor
sti
fists
xor
ficoml
adc
jl
xor
ds
xor
cmp
pop
popf
xchg
stos
mov
out
jnp
out
jns
stos
nop
and
scas
orl
lods
test
fistl
inc
addr16
mov
xor
gs
push
ret
jl
push
aas
mov
cmpsb
cli
or
out
jp
pushf
fmuls
jnp
fwait
inc
aam
pop
jne
fidivrl
cmovb
test
or
movsb
sub
cmp
sub
mov
insb
push
imul
pop
and
rcr
inc
xor
test
or
mov
adc
iret
shll
and
fcomi
mov
int3
xchg
adc
xorl
in
loopew
not
xor
mov
fnstsw
mov
add
in
xchg
pop
mov
push
sub
inc
cmp
roll
jno
roll
xor
xchg
lret
std
cmp
add
movsb
add
inc
les
mov
jo
jl
jmp
data16
and
and
pop
aas
and
jnp
test
fldl2t
pusha
mov
icebp
pop
jle
push
or
inc
cltd
lea
jne
push
mov
xlat
ret
insl
adc
pop
dec
xchg
icebp
dec
sarb
xchg
jnp
cmpsl
ljmp
fsubs
dec
cwtl
lahf
and
mov
pushf
outsb
or
fsin
scas
add
add
movsb
jp,pn
hlt
jnp
push
lret
xor
sub
mov
adc
in
out
test
ljmp
jae
scas
mov
jns
shll
lock
xor
pop
stc
jl
inc
scas
add
nop
dec
imul
xchg
push
aad
test
mov
subb
or
repnz
mov
mull
pop
cmpsb
js
test
sub
jae
andb
pusha
push
jl
mov
push
jle
fs
jg
movntq
mov
push
jb
clc
nop
dec
stos
test
xor
aas
xor
push
test
dec
dec
pop
and
and
xchg
loopne
add
push
cmp
mov
les
jb
sbb
call
imull
xchg
mov
mov
inc
jg
cmpl
mull
call
loopne
mov
xchg
add
in
mov
pop
sbb
cmp
push
inc
xchg
mov
insl
in
das
lahf
lea
adc
lcall
icebp
mov
inc
xchg
xchg
popf
push
pop
fs
shlb
push
ss
pop
ljmp
and
shr
lods
cli
movsl
xchg
jb
cld
fstpl
mov
dec
fstpl
incl
or
fstps
ja
in
and
add
sbb
into
xor
xor
cmpsb
inc
repz
pop
enter
adc
mov
movsl
push
clc
adc
pop
xor
outsl
xchg
push
push
inc
mov
mov
in
xor
jae
sub
sbb
movsl
imul
aaa
ljmp
or
inc
lods
pop
jb
pop
lods
xchg
jae
push
xor
mov
cmpsl
jle
enter
movsb
imul
js
int3
and
imul
push
mov
push
cmc
loope
pusha
and
jecxz
addl
dec
push
mov
nop
or
or
pop
pop
ds
call
std
xlat
inc
dec
sub
dec
loop
ret
xchg
push
lods
divl
mov
pop
adc
xchg
cmp
loopne
out
cmpsb
pop
sub
loope
mov
out
push
adc
sbb
jp
sub
ja
inc
lds
test
mov
push
sar
sub
mov
push
insl
lcall
push
lret
sbb
jle
test
jns
dec
dec
mov
add
outsl
daa
loopne
jmp
mov
sub
nop
out
xchg
mov
rolb
jb
movsl
fdivrs
add
mov
rclb
sbb
pop
add
mov
mov
insb
je
dec
mov
fsts
xlat
test
call
mov
neg
pop
rcr
neg
push
pop
test
sub
mov
test
mov
push
rol
pop
dec
sub
mov
add
mov
dec
pushf
push
push
cmp
not
cmp
iret
in
into
jle
jno
arpl
subb
sbb
sbb
lods
lret
lods
add
mov
test
xchg
push
cwtl
enter
stos
stc
push
jbe
mov
xchg
icebp
shll
rclb
inc
mov
mov
jg
shll
pop
xchg
sbb
rcll
sub
push
lds
decl
jmp
mov
jp
push
adc
sub
sbb
lret
stos
or
xor
pop
ja
cltd
jl
xchg
in
hlt
fcoms
and
sbb
idivl
xor
call
sbb
mov
sub
sub
cs
push
mov
clc
cmp
sbb
push
xor
enter
sub
cs
sarb
mov
sub
daa
fidivl
mov
push
outsb
add
clc
sbb
lods
push
push
cmp
mov
fstp
or
pop
shll
xor
xor
mov
scas
dec
ja
cmp
fcmovb
lods
adc
mov
outsb
mov
push
ret
mov
sbb
insl
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
fsts
mov
.byte
xchg
mov
add
js
add
rcll
add
nop
add
pushf
nop
add
fsts
add
in
add
lods
nop
add
lock
add
nop
add
push
xchg
add
push
xchg
add
sub
add
cmp
add
dec
xchg
add
add
add
push
xchg
add
add
add
bound
add
outsb
xchg
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
insb
add
inc
push
push
xor
fs
insb
add
inc
push
xor
cs
insb
add
dec
dec
dec
inc
push
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
insb
outsl
jae
dec
gs
add
push
jne
fs
jb
popa
je
add
ja
jo
imul
add
je
jb
gs
jo
outsb
inc
add
add
and
add
pop
xor
js
push
xor
shr
pop
test
push
neg
pop
cmp
cmc
mov
xor
stc
push
mov
add
mov
cmp
rcr
push
std
xor
pop
pop
pop
push
test
pop
push
sub
pop
push
add
dec
pop
jo
inc
push
xor
cmp
cmp
repnz
jo
inc
push
repnz
mov
neg
call
or
fdivr
dec
push
mov
cmp
dec
pop
pop
test
cmp
ja
test
cmp
lea
push
cmp
cmc
pop
push
lea
cmp
pop
xchg
neg
jne
add
mov
not
mov
mov
not
std
jae
or
sub
or
push
rol
dec
pop
inc
xor
cmp
cmp
xor
call
cmc
push
shl
mov
pop
push
not
cmp
pop
jno
push
cmp
pop
push
pop
rol
dec
push
xor
cmp
pop
jae
push
cmp
pop
inc
push
xor
pop
xor
rcr
test
jo
push
lea
pop
push
cmp
pop
cmp
test
test
inc
je
push
not
pop
mov
inc
call
imul
shl
lea
neg
push
mov
mov
push
cmp
pop
cmp
inc
pop
pop
jne
mov
test
test
push
pop
mov
xor
neg
xor
rcl
jmp
push
rol
pop
ja
not
neg
dec
and
neg
cmp
mov
push
test
pop
mov
push
nop
pop
cmc
mov
dec
lea
xor
push
repz
xor
push
mov
stc
jbe
lea
push
nop
pop
push
shr
test
pop
call
int
or
icebp
inc
neg
dec
not
adc
push
push
inc
pop
test
pop
push
mov
lea
cmp
test
push
push
test
pop
pop
shl
not
xor
push
mov
xor
pop
test
mov
inc
not
pop
pop
dec
push
neg
pop
mov
test
test
call
sbb
lea
push
dec
inc
repz
jmp
test
shr
test
mov
dec
lea
mov
test
test
not
mov
neg
mov
inc
push
mov
not
cmp
dec
pop
pop
push
not
test
inc
pop
push
push
pop
repz
ja
xor
push
sub
xor
pop
je
push
shr
mov
not
dec
pop
neg
jmp
push
pop
inc
test
push
cld
pop
jmp
push
pop
nop
push
pop
cmp
test
dec
test
xor
push
cmp
lea
pop
push
inc
mov
repnz
sbb
not
cmp
not
push
test
mov
dec
pop
call
dec
push
neg
pop
rol
cld
shr
push
mov
jb
clc
push
test
test
pop
push
lea
pop
pop
pop
push
mov
mov
pop
xor
mov
dec
rcr
push
cmp
cmc
inc
pop
jmp
test
mov
push
cld
pop
mov
push
rcl
pop
push
inc
pop
xor
cmp
inc
pop
push
shl
not
dec
cmp
pop
jno
not
mov
test
dec
push
test
pop
push
neg
pop
push
rcl
test
pop
jb
lea
push
inc
pop
cmp
mov
xchg
call
out
test
test
push
xor
pop
push
mov
mov
push
inc
dec
pop
pop
pop
repnz
inc
test
or
pop
push
dec
pop
push
inc
pop
jno
jo
adc
or
shl
test
test
dec
mov
test
inc
test
test
ror
rcl
push
pop
rcr
test
not
push
rcl
pop
call
xor
lea
push
rol
pop
inc
inc
jbe
inc
test
inc
push
test
pop
rcr
not
dec
push
mov
cmp
adc
mov
test
repz
pop
and
call
into
neg
add
lea
adc
inc
push
mov
nop
push
cmp
neg
pop
pop
pop
push
neg
mov
inc
pop
dec
push
neg
test
pop
push
mov
pop
dec
js
xor
mov
cmp
cld
push
pop
push
mov
repz
pop
push
dec
pop
jbe
test
sbb
push
pop
push
repz
pop
xor
pop
jbe
mov
neg
push
xor
ror
pop
test
mov
neg
shr
lea
mov
lea
inc
jno
push
mov
test
inc
inc
pop
push
xor
mov
inc
pop
test
shr
xor
xor
repnz
stc
pop
jo
not
test
xor
xor
push
std
pop
cmp
mov
xor
push
pop
test
test
cmc
inc
lea
test
test
mov
push
neg
dec
pop
pop
and
inc
push
mov
inc
inc
pop
push
push
dec
pop
test
pop
jmp
shr
jno
cmp
mov
xor
cmp
neg
shr
mov
push
shr
std
pop
xor
dec
ja
mov
cmp
test
push
push
mov
pop
ror
pop
push
cmc
pop
neg
dec
test
xor
cmp
test
mov
mov
neg
jne
test
cmp
dec
mov
and
test
cmp
push
pop
jns
push
xor
test
pop
mov
lea
dec
mov
mov
jbe
neg
neg
xor
ror
js
xor
xor
and
inc
push
lea
cld
pop
call
dec
push
push
test
dec
pop
mov
pop
rcr
lea
not
mov
not
lea
repz
mov
pop
sub
push
mov
mov
push
cmp
not
neg
cmp
pop
test
test
push
not
mov
pop
inc
shl
push
cmc
pop
mov
inc
pop
pop
call
out
dec
push
mov
test
mov
dec
cmp
pop
pop
add
neg
jmp
test
push
push
pop
dec
pop
stc
bnd
adc
into
lret
in
and
lock
test
dec
not
inc
push
mov
push
mov
xor
xor
pop
std
not
dec
dec
cmp
pop
pop
je
cmp
neg
inc
push
pop
not
push
test
cmp
mov
dec
pop
mov
push
mov
xor
cmp
pop
lea
jbe
push
xor
dec
pop
xor
xor
test
neg
rol
rol
neg
rcr
neg
mov
push
neg
lea
repnz
lea
push
dec
pop
sbb
push
pop
xor
jbe
ror
shr
lea
sbb
jmp
inc
xor
xor
cmp
test
cmp
inc
repz
neg
pop
cmp
push
test
mov
pop
test
inc
rcr
ror
lea
dec
sub
push
dec
pop
mov
lea
nop
mov
mov
push
mov
xor
xor
pop
sbb
push
test
xor
pop
call
out
in
fdiv
rcll
in
jno
push
test
xor
xor
pop
cmp
dec
lea
xor
test
sub
clc
pop
pop
push
not
std
pop
push
mov
inc
neg
pop
js
push
dec
pop
rcl
not
call
cmpsl
ror
xor
test
shl
mov
test
mov
push
pop
mov
cmc
mov
repnz
mov
push
ror
cld
pop
push
rcl
pop
cmp
dec
pop
pop
xor
jmp
lea
lea
cmp
inc
std
push
neg
not
cmp
pop
push
mov
pop
jb
neg
lea
mov
mov
push
pop
rcr
cmp
mov
mov
lea
cmp
test
nop
add
inc
jae
sbb
lea
test
mov
push
xor
pop
jae
push
adc
neg
pop
not
xor
inc
push
pop
push
mov
pop
test
jmp
test
push
push
inc
pop
mov
mov
dec
inc
pop
cmp
push
test
pop
xor
push
pop
cmp
cmp
test
cld
xor
lea
xor
clc
mov
mov
jmp
mov
cmp
push
pop
neg
push
pop
inc
neg
mov
test
je
cmp
push
push
inc
pop
pop
xor
cmc
add
cmp
jo
rcl
cmp
neg
neg
rcr
push
pop
push
not
neg
pop
xor
inc
neg
push
adc
cmp
inc
pop
mov
push
test
nop
pop
dec
jb
or
inc
lea
neg
std
push
jb
cmp
mov
pop
test
push
cmc
mov
test
je
dec
pop
push
pop
cmp
push
shl
cmp
cmp
mov
pop
mov
js
rcr
not
mov
mov
push
not
add
clc
pop
clc
push
test
inc
dec
test
pop
je
cmp
cmp
cmp
rol
mov
sub
call
lret
push
push
pop
cmp
pop
rcr
cmp
push
test
dec
pop
jae
test
test
push
mov
lea
neg
test
xor
cmp
inc
pop
pop
push
stc
mov
dec
pop
push
cmp
test
pop
push
mov
cld
pop
jne
inc
shr
cmp
dec
mov
mov
mov
jne
lea
mov
jae
sbb
xor
dec
push
cmp
inc
pop
cmp
push
lea
pop
push
inc
inc
test
pop
xor
cmp
not
inc
add
jb
push
pop
push
cmp
rol
repz
mov
push
inc
not
pop
mov
cmp
neg
xor
addl
not
sub
mov
jb
not
xor
push
mov
pop
neg
push
neg
mov
cmp
push
pop
pop
push
xor
test
test
pop
push
stc
pop
xor
push
xor
lea
pop
push
xor
inc
pop
push
cmp
test
push
pop
xor
pop
lea
mov
or
jb
neg
push
mov
dec
pop
cmp
not
dec
push
neg
pop
clc
push
cmp
pop
call
jmp
not
cmp
push
pop
xor
jbe
xor
rcl
dec
dec
cmp
push
sbb
pop
xor
push
mov
push
mov
dec
dec
pop
push
mov
cmp
mov
pop
lea
pop
pop
inc
push
neg
repz
rcl
dec
lea
test
jns
cmp
sub
not
mov
push
not
inc
pop
push
xchg
pop
inc
mov
test
call
loope
rcrb
lea
sub
push
mov
not
mov
push
xor
repz
dec
pop
mov
mov
or
pop
pop
mov
push
neg
neg
std
pop
lea
cmp
jb
inc
push
rcl
pop
jae
push
rcl
not
pop
jb
cld
ror
jae
jne
xor
lea
stc
xor
mov
xor
cmp
mov
test
push
mov
test
mov
cld
dec
pop
inc
push
pop
push
cmp
pop
inc
push
push
pop
xor
pop
push
mov
repnz
call
sub
sbb
roll
sub
rcr
xor
push
mov
push
cmp
pop
pop
not
xor
mov
mov
inc
push
mov
push
inc
not
inc
dec
pop
push
dec
test
inc
pop
mov
push
lea
xor
pop
test
sub
xor
neg
pop
pop
call
neg
shl
push
dec
pop
clc
inc
push
mov
mov
repnz
lea
pop
pop
push
xor
cmp
pop
js
push
test
repz
not
push
push
test
pop
neg
test
pop
xor
cld
cmp
jne
inc
dec
inc
call
push
push
cmp
xor
pop
test
not
xor
mov
lea
dec
cmp
test
shl
push
mov
lea
push
mov
pop
push
neg
inc
pop
sbb
pop
pop
jo
cmp
mov
push
lea
pop
adc
dec
mov
inc
test
dec
push
neg
test
std
inc
pop
jmp
test
mov
mov
dec
inc
neg
jne
mov
test
stc
push
pop
cmp
test
rcr
lea
neg
push
pop
cmp
jmp
neg
cmp
push
neg
inc
pop
neg
push
cmp
test
dec
not
clc
pop
push
rol
test
pop
push
pop
dec
sub
mov
sti
les
or
push
mov
clc
les
das
in
out
int
fidivs
mov
cmpsb
adc
in
add
in
ret
stos
negb
scas
adc
cltd
popf
push
xchg
adc
jne
or
mov
iret
and
mov
add
add
out
pop
cmp
cmp
ffreep
mov
adc
loope
push
sti
cmpsl
aad
sub
clc
jge
mov
adc
push
mov
pop
push
dec
sub
pop
scas
stc
pop
mov
test
mov
out
cmp
imul
cmp
popf
lahf
jb
jecxz
xchg
addl
jb
mov
mov
out
aaa
popa
popf
movsb
out
sti
mov
loopne
mov
fidivrs
adc
xor
ret
ljmp
out
pop
iret
aas
pop
xor
mov
push
in
jo
mov
mov
fwait
or
movsl
ret
pop
xor
pop
cmp
dec
sub
insl
repz
in
xchg
ret
in
out
mov
mov
out
inc
imul
cwtl
sub
push
repnz
js
mov
mov
mov
aas
mov
push
jbe
clc
mov
mov
pop
iret
ds
cmpsb
mov
test
xor
push
mov
jmp
fwait
adc
jecxz
mov
mov
push
mov
gs
stos
jne
mov
filds
hlt
mov
leave
sbb
stos
mov
ss
and
mov
aam
jo
les
mov
sub
or
and
pop
ds
mov
jo
mov
ret
xor
test
mov
or
test
xchg
ffreep
mov
ss
es
mov
arpl
xor
xchg
dec
in
mov
insb
fwait
cmp
xor
xchg
adc
sub
sbbb
cmp
mov
mov
adc
fidivrs
test
insl
repz
mov
mov
cwtl
out
inc
mov
imul
mov
push
ret
ljmp
mov
bound
mov
cmp
mov
jne
or
mov
jnp
lods
shl
fmull
dec
jnp
mov
pushl
test
fistps
push
fldenv
cmp
sbb
hlt
ljmp
ficomps
int3
shl
imulb
clc
jp
inc
push
adc
insb
and
mov
into
xor
fldenv
mov
mov
mov
push
lahf
xchg
xchg
ret
ljmp
jge
xor
and
imul
or
xchg
nop
xlat
push
jge
fwait
mov
cmp
add
adc
mov
xor
mov
pop
fs
out
inc
enter
fistps
dec
add
add
xchg
cmc
adc
ja
jnp
test
out
loope
jmp
xor
push
test
inc
stos
clc
lods
daa
scas
xchg
adc
xlat
lcall
cs
mov
lret
daa
mov
mov
movsl
xorl
and
aam
outsb
aas
arpl
ficoml
insb
cmp
insl
repnz
or
movsb
sub
push
mov
les
mov
push
mov
mov
rclb
ljmp
outsb
xchg
lods
ljmp
stc
mov
inc
mov
adc
iret
iret
aaa
scas
jns
js
or
gs
ljmp
sbb
loopne
mov
mov
mov
jle
popa
clc
mov
cmp
add
pop
mov
mov
testb
rcll
mov
mov
mov
cmp
adc
in
adc
fldcw
mov
jae
mov
int3
push
cmp
stos
gs
add
cmp
jmp
arpl
cmp
sbb
stos
aaa
popa
mov
adc
dec
outsb
inc
mov
sub
dec
jnp
aad
xchg
mov
adc
push
ret
adc
xor
push
jmp
pop
imul
pop
jae
divl
out
dec
shlb
les
cs
sbb
ret
jge
adcl
mov
sbb
xor
xor
test
ljmp
mov
cmp
stos
mov
jmp
fistps
sub
rolb
jl
mov
ret
movsb
cmp
add
and
lds
aad
jns
mov
fcomps
cmp
ds
ret
out
lds
cmp
add
mov
daa
and
rcll
loope
cmp
jecxz
mov
sub
xchg
jmp
dec
jge
movsl
mov
lea
mov
jp
ds
je
das
push
adc
and
jge
adc
gs
popf
movsb
adc
cmp
and
pushf
jne
lret
ffreep
stos
pop
cmp
lea
mov
popf
pop
and
mov
in
push
shlb
imul
mov
sbb
out
pop
cmp
les
xchg
imul
in
mov
ja
in
les
ffreep
mov
test
les
push
inc
xchg
pusha
cwtl
jg
mov
push
stos
adc
adc
mov
xlat
mov
mov
sub
insb
lret
or
cmc
pop
arpl
xchg
ffreep
mov
popa
fwait
xlat
dec
mov
insl
xchg
fdiv
in
push
sti
out
sub
mov
bound
push
stos
aaa
sub
out
mov
clc
ja
sbb
jae
lds
and
mov
ret
jbe
xchg
ret
cmpsb
mov
das
mov
sahf
jne
cmp
aam
xchg
ffreep
mov
test
mov
pop
mov
int
call
movsb
adc
jnp
xor
xchg
push
mov
mov
mov
mov
stos
out
lods
clc
lods
ret
rorb
repz
adc
fs
mov
arpl
sub
test
mov
hlt
sarl
addr16
mov
pusha
mov
sub
xor
das
xlat
fwait
cmp
les
sub
rorb
inc
lret
fidivs
loop
test
test
mov
cld
lahf
leave
push
mov
mov
pushf
insb
ffreep
mov
xor
or
push
dec
dec
jae
ficompl
mov
or
in
test
fwait
ret
aaa
lods
mov
ffreep
sarb
aas
cmpl
popa
test
jb
adc
jae
loope
mov
mov
loope
scas
outsb
mov
mov
jge
loop
loop
pop
mov
or
movsl
xchg
cmp
and
xor
mov
dec
pushf
cltd
push
out
insl
add
push
pusha
stos
mov
xlat
lcall
xor
ret
in
add
addb
sub
jbe
aaa
call
out
mov
cmpsb
mov
loopne
cmp
cmp
lea
loopne
pushf
pusha
lds
sub
sub
test
in
call
mov
jmp
dec
pusha
push
movsb
cmp
fwait
ret
in
out
les
cmp
cmpsb
stos
xlat
xchg
mov
push
movsl
out
fsubs
ret
in
icebp
les
stc
sub
dec
xor
adc
les
je
les
cwtl
add
aad
dec
mov
ficompl
aas
push
mov
mov
xchg
adc
mov
repz
sub
out
xor
inc
inc
lea
push
jge
mov
fucom
es
mov
xor
mov
dec
lcall
cltd
into
adc
icebp
mov
mov
or
out
jp
xchg
dec
or
mov
repnz
jl
fidivrs
xlat
mov
cmpsb
sar
sarl
mov
out
ss
adc
mov
fistps
ja
mov
jb
data16
les
mov
jbe
or
mov
aam
filds
cmp
orb
dec
cli
jne
into
clc
lods
cmpsl
cmp
mov
stos
ds
xchg
and
mov
mov
insl
dec
out
push
call
mov
xchg
lods
and
cmp
mov
ds
adc
movsb
lahf
ja
cltd
mov
fs
fidivs
add
rorl
cltd
lret
rcrb
pushf
jge
les
into
cld
clc
jecxz
sbb
add
mov
and
icebp
lret
push
shl
jb
stos
mov
push
call
enter
pop
mov
mov
inc
aad
jno
lcall
jge
sbb
cs
fisubs
les
sar
stos
roll
lcall
mov
cmp
mov
mov
fsub
fwait
cmp
iret
test
sub
aad
jle
mov
mov
pop
mov
cmp
out
inc
dec
xor
cmp
cltd
ret
ds
xchg
push
mov
pop
xchg
fisubs
out
sbb
jne
stos
add
pusha
int
gs
stos
mov
daa
test
push
out
dec
add
cltd
lods
add
lods
and
and
out
dec
mov
ffreep
out
rcl
xor
sbb
popf
and
sub
xchg
pop
add
push
dec
mov
mov
gs
fisttps
icebp
fadds
mov
mov
ret
test
gs
add
xchg
ds
test
movsl
mov
cmpsl
mov
push
inc
mov
sbb
or
lret
inc
mov
mov
dec
xor
cmc
out
clc
andb
adc
inc
push
push
cmp
popf
sbb
xor
and
les
pusha
mov
scas
mov
test
cltd
xlat
les
mov
stos
ss
out
fistpll
adc
rcl
xchg
pop
push
cli
mov
dec
sbb
jno
push
sub
mov
mov
pop
nop
jg
in
cmpsl
and
cmp
push
cmp
shll
sti
mov
or
jl
push
adc
call
and
add
in
lahf
cltd
iret
dec
jge
or
mov
xor
in
sti
aas
pop
mov
fimuls
jecxz
mov
or
in
cmp
fsubrs
test
loop
mov
push
fsubl
les
mov
pop
cmp
sbb
cmpb
sahf
test
gs
mov
es
movsb
out
cmp
jae
stos
push
mov
daa
rcrb
cmpsl
aaa
clc
movsl
stos
cmp
jg
arpl
mov
fistpll
cmp
xorps
or
mov
ljmp
and
or
lds
add
les
adc
or
dec
dec
xor
cltd
stos
mov
lods
ljmp
inc
xchg
push
stos
insl
mov
clc
stos
out
xor
mov
ffree
mov
sti
sbb
into
and
xlat
sti
cs
mov
jb
sub
dec
jge
or
push
or
ffreep
daa
mov
add
add
popf
cmp
adc
hlt
mov
lret
aam
inc
in
jns
enter
mov
out
fdivrl
sti
mov
popa
cs
mov
stc
ret
jg
daa
and
cs
shlb
out
lcall
rorl
repz
push
push
ja
or
arpl
mov
filds
add
mov
pop
pusha
pop
pop
mov
loope
out
push
into
fidivrs
lcall
stos
cmp
xchg
fs
sti
pop
mov
rcl
xchg
out
shlb
pop
and
int
fnstsw
adc
or
fs
fistps
lods
mov
test
out
mulps
sbb
mov
cs
hlt
cmp
mov
jmp
mov
inc
mov
out
ljmp
inc
mov
mov
test
sbb
daa
aam
mov
test
fwait
lock
cmp
lcall
cmp
stos
aaa
imul
andb
fidivs
sub
and
adc
mov
test
cmp
cmp
aas
clc
mov
gs
or
das
sbb
je
push
push
lahf
xchg
lret
pop
xchg
sub
pop
jge
dec
adc
into
jne
inc
cmp
xlat
popf
sbb
lds
xchg
and
push
mov
mov
arpl
cmc
cmp
hlt
rorb
nop
jg
mov
mov
inc
and
fadds
adc
fmuls
roll
lods
data16
inc
push
lods
adcl
insb
pop
aaa
aaa
aam
cli
out
sub
inc
mov
add
jae
nop
jg
push
adc
pop
add
mov
sbb
inc
sbb
icebp
sbb
inc
inc
aad
mov
mov
mov
mov
mov
add
push
add
roll
fmul
mov
xor
and
push
lods
sub
inc
stos
mov
pop
add
hlt
rcr
sar
push
jge
gs
rclb
add
pushf
mov
mov
ljmp
mov
or
movsl
popf
in
call
fdivp
cmpsb
dec
push
push
inc
shl
jg
icebp
pop
lods
iret
add
mov
bound
pop
lods
mov
mov
or
jg
cltd
mov
sbb
push
fnstsw
ds
add
pop
adc
mov
mov
fmuls
or
iret
and
adc
into
cmp
pop
call
xchg
arpl
int
mov
loope
add
and
mov
add
nop
push
in
and
stos
mov
and
call
aad
inc
dec
push
adc
pop
add
pop
nop
jg
dec
or
lods
aam
mov
and
add
fadds
in
cli
push
dec
repz
loop
jne
pop
dec
outsl
dec
inc
push
hlt
sub
mov
cli
pop
nop
jg
insl
push
inc
mov
or
int
not
xchg
fsubp
inc
pop
mov
inc
cmpsb
or
xchg
mov
lret
mov
fwait
loope
xor
xor
data16
aaa
cmp
jmp
stos
sub
push
lea
movsl
movb
lret
adc
loope
fsubs
mov
mov
in
cmp
shr
inc
out
mov
sbb
jg
cmp
fxch
aaa
inc
and
xchg
lock
stos
sbbl
push
jne
mov
insb
inc
fs
and
iret
mov
insl
pop
mov
xchg
mov
dec
inc
pusha
lock
fnstcw
iret
sbb
iret
into
andl
sub
popf
fildll
js
in
sahf
out
daa
mov
bswap
aam
loopne
flds
iret
mov
adc
loope
imul
ljmp
pop
add
enter
loop
add
add
aam
mov
jae
add
sbb
mov
add
jo
dec
aas
adc
aaa
inc
jmp
mov
adc
cmpsb
dec
xchg
dec
hlt
stos
jae
lods
mov
loopne
push
rcrb
fiaddl
call
mov
jns
or
flds
arpl
int
jmp
out
aam
mov
mov
dec
aas
push
push
ljmp
jne
jg
shrb
mov
daa
addr16
loop
cmpsl
divb
sbb
aaa
aas
adc
adc
push
out
mov
loop
loope
outsb
mov
inc
daa
pop
mov
push
ds
movsb
mov
loop
mov
call
mov
ja
lods
mov
fcmovbe
fiadds
stc
repnz
pop
js
cmp
not
aad
lock
sub
hlt
test
out
loope
outsb
jns
negb
outsl
repz
dec
jne
arpl
adc
int
rcl
sub
xchg
jne
imul
shll
nop
jg
mov
dec
dec
stos
mov
in
adc
add
dec
inc
loopne
test
stos
ficoms
add
ja
xor
loopne
add
repnz
add
test
in
lock
xchg
mov
into
fcmovb
lods
fsts
push
out
cmc
mov
fcmovne
add
cmc
push
test
push
lock
push
push
stos
mov
pop
nop
jg
rcll
insl
add
add
in
xor
add
mov
mov
fisubrl
pop
dec
repnz
pop
mov
mov
add
mov
dec
pop
aas
iret
xlat
int3
ror
call
lret
daa
in
xchg
lods
fisubrl
mov
loope
daa
add
pop
movb
mov
lods
aad
jmp
xchg
mov
pop
rcl
add
sarl
push
push
dec
stos
lea
inc
fmulp
stos
inc
xchg
jge
jae
nop
jg
popf
loop
lock
lcall
int3
mov
fmuls
xchg
pop
mov
sbb
sub
add
xchg
loop
scas
inc
iret
fisubs
aam
add
nop
lods
mov
mov
and
iret
mov
pushf
add
inc
arpl
jg
lods
pop
lret
add
mov
jg
xor
stos
out
mov
sub
push
rorl
or
fisubrl
loope
add
insl
pop
fisubl
add
inc
arpl
add
cli
imulb
mov
inc
loope
pop
push
jo
test
inc
push
or
addr16
ret
add
div
push
int3
out
iret
inc
jmp
fmuls
adc
xlat
in
jg
shlb
pop
sub
negb
jg
sub
fsts
inc
jge
push
stos
subl
fisttps
add
jg
pop
mov
subl
aaa
in
daa
das
jno
adc
adc
lods
or
leave
and
push
aam
popf
into
xchg
mov
mov
fcmove
sub
mov
cmp
repz
push
lcall
lods
jmp
dec
das
add
sbb
mov
sahf
ljmp
push
mov
insb
adc
mov
movsb
push
scas
imul
dec
xchg
pop
cmp
aam
mov
loopne
dec
inc
mov
outsl
pop
in
daa
call
mov
hlt
push
cmpsl
pushl
addb
sbb
or
stos
jge
lods
into
divb
int
pop
jo
and
lods
mov
ret
add
mov
aam
sub
lock
fcmovbe
lods
scas
aad
add
jcxz
ret
adc
addl
stos
sahf
or
inc
test
dec
push
ficomps
stos
popf
out
inc
or
mov
icebp
fstpl
lock
ja
mov
add
into
sbb
mov
aam
or
pop
add
aam
shlb
es
imul
cmp
lods
fcomps
dec
jae
mov
ljmp
and
in
shl
inc
sub
dec
sbb
xchg
loop
and
cmp
pop
daa
mov
fadds
in
pop
pop
pop
mov
cwtl
add
rcl
ret
hlt
pop
cmp
ss
shl
lock
xor
aas
fcmovnb
mov
test
mov
mov
ficoml
mov
cmc
dec
stos
rorb
xchg
ljmp
fwait
out
mov
ror
fcomip
shl
aas
sbb
aaa
nop
jg
aaa
or
pop
dec
pop
xlat
gs
or
jae
adc
mov
fcmovnu
mov
out
cmpsl
and
repnz
ds
pop
nop
lock
add
bound
not
jcxz
test
push
js
push
nop
jg
sub
mov
fadds
out
add
push
adc
mov
cmp
and
adc
and
add
inc
fcmovnbe
hlt
stos
fld
add
pop
push
mov
out
inc
and
lret
movsl
mov
ja
push
jno
sbb
xor
pop
out
cmp
xchg
jno
pop
lea
jno
xchg
push
pop
xor
popf
filds
fcmovbe
stos
loop
inc
arpl
pop
mov
je
call
shrl
sahf
mov
or
and
hlt
int
add
mov
lods
scas
add
cmpsl
shl
shl
imul
xlat
aad
inc
daa
mov
test
cltd
jg
jbe
jg
pop
out
lock
sub
sub
mov
push
call
and
cmp
ss
insl
jmp
fadds
stos
jl
lods
mov
lock
add
cltd
stc
in
aaa
push
push
inc
fcompl
fcomi
mov
sbb
push
aad
pop
stos
stos
hlt
xor
aas
push
adc
ljmp
js
xchg
mov
sbb
jg
faddp
pop
loop
add
rolb
stc
jge
call
inc
and
add
call
adc
loopne
add
xchg
add
sbb
ss
jg
sbbw
ds
inc
xor
mov
aas
dec
jl
mulb
enter
iret
fsts
pop
dec
xor
xor
lret
shlb
pop
nop
jg
xchg
rclb
add
and
push
lods
mov
out
outsb
pop
lea
xor
outsl
dec
add
test
ja
jg
pop
sti
dec
mov
adc
inc
or
inc
outsl
pop
dec
cmp
adc
das
or
stos
jecxz
repnz
add
insl
pop
nop
jg
xlat
comiss
xchg
cli
notb
lods
sub
in
push
mov
iret
je
push
dec
and
jecxz
aad
ss
gs
fwait
and
cmp
dec
outsl
pop
inc
pop
or
add
push
call
ljmp
cmc
push
roll
add
sahf
inc
imul
out
pushf
add
cmp
repz
dec
cmp
jp
hlt
stos
add
gs
dec
add
jns
inc
xchg
fcmovb
ss
push
repnz
fmulp
sub
nop
xlat
jmp
nop
jg
bound
int
add
imul
fwait
jmp
add
mov
xchg
mov
ret
sbb
mov
out
and
or
pushfw
pop
fldenv
cld
fcomi
mov
xor
loopne
or
jg
mov
add
je
dec
movsl
rcr
int
mov
fistl
daa
stc
in
outsb
sub
dec
movsl
inc
add
inc
or
sbb
inc
jne
testl
add
dec
dec
hlt
sbb
mov
loopne
aas
ja
jg
pop
stc
dec
pop
jecxz
dec
adc
pop
nop
dec
jae
loop
xor
iret
fists
sahf
mov
pop
and
repnz
jb
repnz
lock
arpl
int
jge
add
mov
lods
stos
xlat
sarl
pop
inc
icebp
fnsave
repnz
xchg
jg
pop
cmp
jae
js
fldenv
hlt
fsts
pop
cli
out
inc
mov
push
and
dec
mov
xchg
call
das
test
out
out
push
ja
aaa
cmpsb
push
insb
sub
shl
rorl
ds
loope
repnz
xchg
jg
pop
ss
outsb
stos
cmpsl
fucomp
or
loopw
inc
cmc
jmp
inc
arpl
aam
orb
or
leave
data16
mov
call
mov
push
add
mov
je
aas
pop
ud1
addr16
sbb
and
sbb
int
mov
insb
push
inc
inc
pusha
add
rcrb
jg
mov
fcmovnbe
push
movsbl
cmpb
jbe
mov
dec
loop
test
cli
aaa
daa
add
ljmp
stos
push
iret
adc
mov
roll
jo
sub
add
movsb
mov
add
scas
movsl
insb
movsb
fwait
inc
adc
xor
dec
inc
push
adc
push
sti
and
fidivrl
cli
out
push
shrl
imull
push
and
inc
sahf
repnz
outsl
dec
int
cmp
jns
dec
sbb
dec
stc
xor
repz
pusha
in
popa
js
pop
nop
jg
adc
rorb
aad
movsb
mov
mov
and
js
call
jb
nop
jg
and
lods
scas
rol
insl
push
inc
fs
sub
mov
flds
add
aas
imull
xchg
repz
testl
push
jp
lods
cmp
push
inc
mov
call
lahf
loop
inc
and
mov
sahf
pop
ret
ja
jg
pop
adc
rorb
mov
cbtw
inc
inc
outsl
sub
fists
call
imul
jno
out
subl
cmc
mov
hlt
fdivrs
and
add
xchg
dec
shll
xchg
add
mov
pop
nop
mov
sub
pusha
add
test
cmpsb
lods
dec
push
sbb
pop
lock
add
and
stos
andb
sub
stos
loopne
cmp
pop
ljmp
mov
xchg
ljmp
lds
dec
pop
mov
gs
out
loopne
pop
xor
pusha
lods
rcr
movl
js
mov
pop
push
add
out
gs
add
mov
add
xchg
pop
inc
pop
push
dec
es
mov
fs
gs
mov
cmp
jg
jp
cltd
fcomi
out
mov
lock
push
xchg
mov
sbbb
jne
inc
lcall
movsl
bound
dec
les
dec
or
ret
ss
clc
push
adc
repnz
loop
pop
js
mov
fistpl
mov
pop
scas
dec
data16
sahf
adc
fmull
inc
jno
mov
imul
repnz
push
or
icebp
mov
jno
int
lret
js
loop
hlt
mov
fwait
dec
out
dec
jge
adc
cmc
adc
clc
or
push
icebp
mov
xor
cld
rcr
adc
mov
mov
push
mov
leave
loop
inc
movl
sub
mov
scas
push
jb
ret
adc
mov
adc
mov
mov
xor
arpl
xor
test
adc
outsb
enter
hlt
push
clc
sbb
test
in
call
test
jmp
in
pop
pusha
mov
stos
mov
inc
ret
mov
mov
push
and
in
lcall
rorb
test
mov
stos
mov
repnz
dec
sub
push
xor
pop
xchg
sahf
push
cmp
and
mov
or
gs
cmpsl
push
push
sbb
shll
lock
jno
xchg
lock
test
int3
std
addl
inc
jne
pop
jb
ret
loopne
xchg
out
add
fistl
dec
sbb
mov
mov
push
out
jecxz
adc
cmp
xchg
fwait
push
jae
lret
sub
sbb
or
test
xor
sbb
xchg
in
call
push
or
rsqrtps
inc
arpl
add
test
lock
jne
push
sti
dec
popa
icebp
mov
lods
pop
sub
gs
xor
ja
popl
jl
jae
xchg
lahf
movsb
lods
imul
je
mov
jp
imul
out
imull
xchg
insb
insb
mov
xchg
mov
insb
fld
pop
jns
mov
cmpb
sub
adc
divb
out
cmp
ret
movsl
push
dec
adcl
lahf
fcomi
mov
movsl
adc
shr
clc
push
or
ret
js
insl
loop
adc
ret
lret
xchg
cld
stos
lds
push
fwait
test
insl
sub
cmp
cwtl
jmp
sbb
xchg
stos
fwait
lock
push
in
in
in
mov
addb
aam
popa
and
pushl
jbe
push
fnclex
and
ret
test
adc
sbb
lahf
and
sbb
outsl
in
popa
mov
lods
mov
imul
xchg
test
xor
lahf
aam
ss
xor
je
lock
lcall
push
pop
xor
lea
fs
jg
mov
sbb
dec
or
push
mov
test
mov
jne
in
ljmp
aaa
int
insl
fsubl
test
std
and
pusha
popl
rcrb
cmovge
jl
and
fucomi
inc
mov
bound
lods
popa
mov
or
fsubp
mov
push
push
mov
es
push
std
jo
out
out
xchg
push
xchg
mov
imul
adc
lock
mov
mov
sarb
fs
cmp
jg
jge
imul
inc
add
shll
mov
push
add
inc
jno
dec
cmp
cmp
pop
mov
aas
and
gs
pushf
call
adc
test
mov
aad
lret
lcall
sbb
ror
jno
fwait
clc
xchg
js
lahf
mov
out
je
mov
lods
lret
mov
shr
xor
insl
loop
pop
insb
fidivrl
sarl
arpl
jecxz
lahf
mov
out
in
sbb
fdivs
inc
pop
cmc
fs
sbb
cmc
adc
aad
push
es
inc
dec
enter
sbbl
clc
sub
daa
sbb
push
test
xor
shlb
cmp
xor
xorl
dec
mov
adc
sub
cmc
in
jge
repnz
sbb
pop
ja
xor
les
cmpsb
or
ret
int3
ret
loopne
fsubp
pushf
mov
lock
inc
gs
repnz
addl
sub
jmp
and
in
out
xchg
inc
push
dec
daa
mov
lret
cmp
sbb
mov
push
mov
ret
dec
pop
jb
stos
push
push
xor
dec
add
push
ret
sbb
mov
test
dec
jg
adc
pop
pop
xchg
sub
pop
ret
loopne
push
mov
ds
repz
dec
mov
fs
mov
stc
jp
lcall
movsb
fwait
adc
fiadds
jg
mov
xchg
xor
lret
cmp
gs
fcoml
dec
rsqrtps
clc
cmp
mov
mov
sarl
jecxz
lahf
in
mov
lahf
movsl
jle
push
lahf
push
lret
push
pusha
pop
jno
gs
out
mov
adc
loop
andl
inc
mov
push
mov
outsb
mov
mov
sahf
jnp
iret
cmp
mov
mov
fistpl
jle
push
xor
fwait
loop
dec
mov
arpl
ret
popa
cmpsb
jle
pushf
pushf
mov
lret
jne
pusha
arpl
mov
or
hlt
out
mov
xchg
xor
lods
or
test
fcomi
sbb
lcall
add
imul
popf
jb
lcall
dec
rorb
icebp
jo
push
nop
pop
mov
pop
lods
outsl
push
imul
jno
fneni(8087
add
ret
push
cmovne
and
mov
imul
sbb
add
push
inc
mov
andl
pop
imul
fistpl
cmp
inc
es
xchg
cmp
jnp
in
in
fwait
lahf
lods
test
sbbb
out
mov
fwait
lds
iret
cwtl
loope
mov
es
push
aas
in
clc
inc
js
or
jecxz
push
ja
xor
mov
pop
insl
push
in
or
stos
dec
bound
jno
pop
jmp
orb
pushf
mov
xlat
sbb
mov
loop
and
inc
mov
lods
es
mov
lds
cmc
xor
xchg
cli
fcoml
sbb
and
sbb
push
cs
push
sub
movsl
loop
jge
adc
pop
lret
push
insl
fdivrl
insl
in
push
and
and
clc
dec
adc
ljmp
daa
cmp
insl
adcb
xchg
lahf
aam
pop
cs
lret
clc
pop
xchg
jne
pop
mov
insl
clc
dec
ljmp
mov
test
js
mov
mov
inc
insb
jecxz
dec
jno
lret
lahf
jnp
add
sarl
cmp
sub
and
cmp
sbb
xor
lret
in
pop
test
popa
fwait
lds
inc
insl
loop
lds
ret
push
jno
pop
jbe
lret
push
mov
les
mov
fiaddl
movsl
cli
add
push
sub
insb
ret
test
jne
pop
jb
imul
xor
frstor
sub
vmovq
cmc
clc
dec
sbb
pop
mov
fnclex
imul
and
sbb
es
pop
insl
fisttps
imul
rsqrtps
insl
movsb
movsb
scas
clc
pop
insl
fs
jge
mov
dec
addl
jg
insl
and
adc
test
dec
insl
jecxz
pop
mov
data16
cmpsl
jl
js
cmovbe
fwait
in
notb
rolb
stos
mov
mov
xor
lcall
or
bound
outsl
pop
mov
sub
gs
imul
jb
and
bound
cmc
jo
fwait
adc
gs
jg
pop
cmp
lods
ret
sti
jg
or
adc
push
ret
decl
ror
clc
je
test
mov
and
movsb
dec
mov
dec
clc
xor
ret
test
fstpt
mov
icebp
pop
xchg
xchg
lret
add
popa
insl
loop
sub
xchg
addr16
pop
mov
lea
push
test
jmp
pop
xchg
xchg
popa
xchg
mov
inc
jne
ja
ret
dec
insl
fnstcw
cmpsb
ds
out
movsb
and
sbb
iret
call
push
ja
jecxz
push
cmp
jns
mov
sbb
in
sbb
and
repz
insb
dec
mov
aaa
lahf
xchg
jp
sub
sub
inc
xor
movsl
scas
repz
ja
xor
inc
adc
jle
in
pop
cmpsb
mov
pusha
cmp
mov
sbb
rorl
inc
js
xor
and
lds
push
cmovbe
sub
call
mov
cmp
insl
fadd
jnp
ror
push
cld
or
out
pop
fneni(8087
call
mov
mov
jle
fs
jge
sbb
sbb
stos
xor
movsl
call
mov
xor
mov
jne
sub
and
push
sti
aam
mov
sub
jno
adc
cmp
pop
sbb
or
sub
or
push
lds
pushf
sbb
lret
dec
insb
loop
jl
out
push
stos
aaa
or
sub
call
sbb
faddl
inc
repz
test
lods
test
inc
adc
sub
mov
cmp
dec
data16
ret
sti
shrl
iret
xor
fcoms
fstps
sbb
scas
push
mov
pop
shrl
xor
movsl
psadbw
insb
fmul
dec
and
sbb
lret
gs
leave
add
nopl
and
adc
pop
mov
out
mov
jecxz
hlt
ret
int3
mov
js
in
pop
mov
cmp
pusha
dec
sarw
adc
cmpsb
push
in
xchg
imul
and
out
inc
mov
mov
push
sbb
push
cmp
shll
movsl
loope
stos
or
jae
lods
jl
ret
into
imul
movsb
stos
and
cmp
sbb
aas
inc
jmp
or
push
std
and
mov
adc
lcall
ret
int
jp
sbb
fnstenv
imul
mov
lock
shrb
test
add
cs
sbb
lahf
mov
mov
push
cs
mov
mov
scas
xor
daa
mov
xchg
enter
pop
jno
push
int3
jle
clc
push
test
jb
mov
imul
insl
sbb
push
jae
les
jg
adc
repz
jbe
aad
nop
jno
inc
push
adc
outsb
aad
mov
or
lock
xchg
jno
push
cmp
push
lahf
lods
lahf
mov
mov
movsb
outsl
lret
push
call
test
mov
imull
imul
aad
in
or
imul
fwait
aad
dec
cmp
repnz
insb
cmp
ficomps
in
out
adc
in
adc
sub
inc
sbb
mov
lret
gs
xor
adc
adc
test
mov
cmp
iret
mov
mov
iret
xor
add
in
mov
out
inc
into
push
adcl
jne
cmp
cmp
out
andb
and
in
push
insl
fdivl
push
pinsrw
sbb
xorl
inc
sub
out
sbb
push
clc
jae
movsb
jmp
xor
pusha
insb
inc
mov
push
dec
xor
test
sahf
mov
add
cltd
out
out
lods
test
cmp
enter
cmpsl
stos
stc
repnz
mov
dec
lret
cld
adc
xorb
leave
mov
pop
pop
jae
in
lret
stc
push
outsb
push
or
mov
sbb
sbb
cmp
lock
lds
pop
fidivrs
or
mov
js
xchg
mov
cmp
push
insl
in
dec
test
and
sub
mov
jno
lds
mov
mov
jbe
aad
movsb
test
insl
xchg
test
popf
sub
outsl
xor
insl
jecxz
xchg
jge
jmp
jo
dec
inc
pop
push
sbb
jg
push
push
ret
loop
mov
cmp
mov
jno
xor
cmp
mov
xor
cmp
scas
inc
cmp
ja
repz
inc
cmp
ja
sarb
mov
jp
push
pop
test
cs
sub
mov
jp
in
xor
mov
pop
sti
jns
dec
jmp
mov
leave
das
pop
pop
shll
je
cltd
dec
arpl
jp
scas
ja
shrb
mov
jns
mov
jns
mov
jns
popa
sub
mov
dec
and
adc
fidivs
jp
cmpsl
ja
fistpll
inc
cmp
mov
movsb
jle
jp
jo
sub
jb
mov
adc
js
hlt
jns
loopne
jnp
push
jp
jns
sub
cmpsl
ja
fistpll
adc
sbb
mov
dec
fwait
xor
outsl
cmpsb
ja
jnp
sub
orb
mov
sub
adc
mov
mov
push
xchg
jp
jp
dec
sub
mov
jp
jp
sbb
ja
test
jp
testl
and
inc
cmp
mov
cmc
and
push
xchg
pop
test
jp
jp
arpl
jns
xor
rep
ja
jnp
lods
sbb
lahf
mov
std
sub
inc
cmp
jg,pn
test
lahf
adc
push
jnp
jp
subw
push
jp
insl
cli
jns
ror
jns
mov
jns
xor
mov
adc
push
dec
ja
xor
mov
mov
xor
jns
mov
mov
lods
icebp
bound
fbstp
push
adc
dec
adc
push
lods
js,pt
adc
mov
pop
sub
and
jae
cmc
xor
loope
cmpsb
ja
cmc
popa
movsb
xchg
mov
mov
popf
pop
lret
sub
popa
movsb
ud0
jp
jp
mov
jge
popl
mov
jp
jp
aas
adc
sub
movsl
ja
cmc
mov
ja
pop
popf
sub
ja
cmp
aad
stos
mov
cmpsb
ja
imul
lock
sub
jp
test
jp
jp
sti
adc
or
mov
mov
jnp
jp
cs
test
mov
adc
subb
mul
rcrl
mov
push
scas
lret
xor
pop
clc
aad
jp
rorl
jb
inc
cs
pop
lods
pop
mov
or
jns
mov
mov
movsb
mov
hlt
mov
and
mov
popf
push
adc
sub
mov
adc
lods
mov
jo
dec
adc
jae
xor
mov
inc
jle
fdivs
adc
mov
into
fldenv
mov
aam
dec
adc
lods
dec
pop
mov
inc
into
mov
test
adc
mov
xchg
lret
and
mov
mov
pop
pop
movsb
mov
sub
xor
mov
inc
jle
rcl
mov
mov
or
xchg
mov
aas
dec
jg
inc
xchg
mov
mov
xchg
adc
cmpsb
lods
movsl
mov
lods
mov
aam
jno
sarb
ret
arpl
mov
pop
nop
mov
mov
mov
cmp
mov
xlat
mov
add
movsl
sbb
mov
jp
jp
jp
lock
clc
push
jns
add
cmp
insb
gs
lcall
or
stc
idivb
mov
jbe
mov
cmp
mov
or
lods
movsl
mov
scas
mov
sub
mov
cmpsb
movsl
mov
mov
fstps
mov
rcl
mov
sbb
or
mov
dec
mov
xchg
inc
cmp
insb
gs
lcall
or
sub
dec
mov
add
lods
add
adc
clc
push
add
mov
jns
jp
add
xor
jbe
xchg
loopne
adc
arpl
mov
pop
nop
mov
mov
add
lods
add
arpl
mov
bound
jns
mov
ss
mov
cmc
xlat
dec
and
mov
add
jnp
shll
or
mov
pop
nop
mov
mov
add
lods
add
arpl
mov
bound
jns
mov
jb
mov
cmc
xlat
dec
fsubrs
mov
in
add
adc
loope
jg
xchg
ss
cld
faddl
adc
mov
sbb
or
or
mov
mov
inc
cmp
xlat
cli
xor
ficomps
test
cmp
out
hlt
push
mov
ja
popf
jb
mov
ja
pop
fst
ja
mov
cmc
pop
test
mov
divl
jae
cmp
mov
jge
mov
xchg
addb
push
out
into
mov
ret
sbb
icebp
icebp
xor
andb
int
cli
ret
mov
lret
lods
fstl
jle
inc
sahf
ja
xlat
adc
outsl
cmp
dec
mov
pop
cmpsb
sbb
mov
inc
ret
testl
mov
in
out
pushf
popa
or
xchg
adc
add
fwait
add
adc
xlat
insb
and
scas
insb
mov
mov
mov
jp
out
jb
jmp
loopne
jne
test
dec
jbe
imul
popa
dec
hlt
int
cli
ljmp
jecxz
repz
fiaddl
add
data16
sub
mov
mov
das
mov
mov
xor
dec
add
or
loop
mov
hlt
pop
inc
aad
pop
shrl
xchg
in
shlb
iret
lods
mov
loopne
dec
mov
orb
adc
pop
inc
mov
movsl
test
adc
or
mov
lcall
mov
ss
mov
and
movsb
mov
aam
sub
scas
ja
cmc
lds
test
sub
bound
mov
int3
popf
cmp
or
rolb
ja
add
packssdw
mov
mov
subl
sub
aam
hlt
test
sub
pop
sbb
jno
jnp
mov
and
popf
jb
adc
pop
push
jp
ror
sub
jp
test
adcb
push
adc
pop
je
sahf
dec
jge
xor
int
dec
mov
mov
jp
push
ja
cwtl
sub
jbe
pusha
mov
movsl
fisttps
cmc
jb
cmovg
fdivs
movsb
xor
jae
dec
js
popf
mov
cld
loope
lcall
xor
dec
pushf
xor
jge
sahf
pop
popf
mov
ja
pop
dec
adc
mov
xchg
pop
data16
cli
cld
mov
jp
into
or
dec
adc
mov
repz
loope
scas
add
or
mov
movsl
adc
jbe
pushf
stc
lahf
mov
push
popf
lret
popf
enter
jo
clc
adcl
and
adc
lods
aaa
adc
pusha
mov
push
lea
mov
out
mov
stc
lahf
mov
push
popf
lret
popf
enter
jo
in
push
jp
and
adc
in
adc
pusha
mov
push
lea
mov
out
mov
stc
lahf
mov
push
popf
lret
popf
enter
jo
mov
and
adc
fnsave
adc
pusha
mov
push
lea
mov
out
mov
stc
lahf
mov
push
popf
lret
popf
enter
jo
decb
and
adc
adc
mov
push
lea
mov
out
mov
es
in
sub
loop
xor
push
jp
aam
es
jmp
inc
jp
aam
es
jmp
push
jp
ret
je
cmp
int
jp
int
xor
outsb
ret
mov
pop
flds
fnstsw
call
jns
mov
jge
in
pop
nop
mov
aam
sub
js
dec
clc
jns
aaa
mov
fst
or
les
sbb
aas
insb
imul
in
loopne
lahf
pushf
popa
xor
fs
js
fs
mov
cmp
xchg
aas
popf
xor
dec
pop
xchg
js
xor
data16
push
mov
call
push
popa
enter
nop
pushf
sahf
xchg
mov
jnp
ja
cltd
popa
enter
mov
in
push
xorb
xchg
js
push
insb
xchg
enter
loopne
imul
push
int3
js
push
outsl
xchg
std
leave
lock
imul
outsb
mov
cmp
xchg
nop
cmp
pushf
imul
xchg
inc
xlat
ljmp
push
mov
mov
insl
ja,pt
jmp
mov
dec
xchg
mov
dec
je
pop
js
repnz
jl
xchg
je
dec
jne
sub
jns
mov
xchg
mov
mov
or
mov
xor
test
mov
hlt
push
mov
pop
fldl
cld
dec
mov
or
test
mov
cli
add
jecxz
je
xchg
lds
mov
mov
sub
push
jp
mov
dec
jp
push
fstps
inc
repz
fcomip
scas
dec
dec
cmp
std
test
outsb
aaa
adc
and
stc
call
add
push
ljmp
cltd
sub
js
mov
incl
mov
jp
aad
xchg
jp
iret
insl
popa
mov
push
jl
jno
push
mov
jp
incb
test
aaa
adc
mov
movb
int
pop
mov
mov
hlt
and
dec
cmp
mov
sub
jp
inc
push
outsb
int
pop
mov
mov
push
movsb
enter
mov
jns
mov
push
mov
ja
ror
xor
jp
cs
subb
adc
xor
mov
jp
int
sub
test
mov
dec
mov
mov
mulb
lock
cmp
mov
shl
mov
subb
aad
test
mov
add
push
jp
cmpsb
adc
mov
lds
pop
test
adc
js
adc
dec
sti
jns
mov
push
or
jns
dec
inc
push
jo
mov
mov
test
jp
jp
es
test
jp
jp
and
jp
insb
adc
jp
mov
jp
mov
jp
mov
jnp
mov
daa
pop
inc
inc
subb
adc
je
cwtl
push
mov
ja
shl
cmp
clc
fwait
adc
mov
int
ds
leave
mov
dec
jg
das
push
add
sub
cs
test
mov
hlt
and
dec
cmp
ja
sub
adc
jns
mov
jns
fisttpl
mov
ja
sarb
cs
subl
decb
mov
push
inc
jg
jp
test
jp
inc
jno
and
dec
cmp
jp
jp
mov
adc
fst
ja
mov
jp
std
pop
test
jp
jp
pop
js
test
jp
cs
subb
adc
and
inc
cmp
fiadds
jp
addl
jmp
mov
push
mov
and
jp
xor
xor
mov
jp
sub
sahf
movsb
sub
popf
js
adc
mov
jp
jp
mov
pop
xchg
out
sub
jecxz
adc
pop
and
daa
mov
jp
repz
push
jp
sub
inc
stos
imul
adc
inc
mov
mov
jp
cmp
cmp
cmp
jmp
jnp
jp
enter
mov
jns
mov
sub
cs
test
mov
lock
adc
mov
cs
subb
pop
and
and
lea
mov
pop
cmc
sbb
sub
fs
dec
inc
sub
xor
test
jge
cmp
mov
popa
subl
mov
jp
es
cmpsb
ja
sub
pushf
jns
mov
jns
jge
cmp
ja
shl
cmp
and
adcl
adc
out
mov
push
jp
xchg
adc
mov
cmp
xor
jns
mov
incb
push
jp
insl
adc
mov
jp
enter
mov
hlt
in
sub
jnp
cs
subl
jp
test
adc
and
cmp
mov
and
pusha
jbe
out
push
jp
negb
ret
adc
mov
cmp
cld
jecxz
xor
jp
mov
jp
mov
jns
mov
mov
sbb
lock
push
jp
cs
subb
dec
cmp
hlt
adc
mov
mov
jp
shll
cmp
jp
outsl
pop
mov
movsl
inc
add
sbb
inc
cmp
mov
lret
xchg
jns
mov
aaa
adc
mov
jp
dec
cli
jns
sub
sti
mov
scas
mov
xchg
jp
jp
mov
cli
test
mov
jp
dec
aad
mov
mov
cli
stos
cmpsl
ja
std
stos
bound
mov
ja
dec
sar
jp
mov
out
mov
fistpll
adc
into
jp
jp
jbe
subb
sbb
out
adc
lock
pop
fnsave
aaa
lahf
shrl
lahf
js
int3
lahf
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
cmp
js
lahf
enter
mov
jp
mov
jle
xor
mov
in
pop
test
xchg
pop
outsb
rcrl
pop
je
sahf
dec
jge
xor
int
dec
mov
mov
mov
jns
int
cmp
ret
jp
inc
push
outsb
int
pop
push
int3
adc
outsb
int
dec
sbb
dec
adc
jp
leave
sahf
dec
jae
cwtl
cmp
pop
mov
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
push
stc
pushf
mov
