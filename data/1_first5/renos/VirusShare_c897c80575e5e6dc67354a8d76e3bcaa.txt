incl
mov
cmp
je
cmp
jns
sti
call
mov
xchg
lea
inc
cmp
jp
xchg
repnz
jle
mov
or
dec
mov
mov
mov
lea
mov
lea
inc
mov
fbstp
in
inc
cmp
jnp
mov
xor
addr16
rcll
mov
mov
or
mov
ja
data16
movzwl
mov
into
sbb
push
or
insl
out
jmp
outsb
dec
lea
inc
lcall
push
adc
dec
xchg
mov
dec
cmp
jne
mov
lea
inc
outsl
ljmp
mov
lea
mov
inc
dec
xchg
cmp
jg
dec
hlt
jbe
dec
fnstsw
adc
inc
mov
inc
inc
lea
imul
jg
dec
dec
cmp
mov
inc
lock
dec
lea
pop
clc
push
lea
mov
add
dec
mov
cmp
fucomp
fbstp
js
mov
cmp
jno
nop
clc
dec
dec
cmp
mov
daa
ret
outsb
pop
sbb
pop
clc
mov
call
mov
clc
jl
mov
out
out
pop
adc
jnp
xchg
insl
call
push
sbb
out
xor
mov
cld
mov
add
call
sub
add
lods
bound
pop
fsubrp
add
dec
xchg
pop
pop
jp
mov
jae
lock
cwtl
and
inc
xchg
insb
dec
sbb
lock
orb
jl
mov
aaa
int
mov
pusha
cmp
sub
pop
mov
or
mov
jge
fs
test
and
cmpb
clc
adc
inc
mov
clc
push
sbb
xchg
test
mov
mov
mov
dec
dec
mov
incl
movsl
jp
mov
cmp
sub
sbb
cmp
ds
mov
mov
mov
mov
inc
inc
dec
cmp
jne
mov
dec
xor
or
mov
mov
inc
inc
inc
cmp
jbe
xor
outsl
xchg
cltd
xchg
mov
pop
mov
push
or
divb
mov
cmp
sbb
idiv
pop
sti
mov
enter
fstpt
sbb
dec
mov
adc
mov
mov
xchg
call
rorb
repz
inc
pusha
dec
or
jmp
mov
push
call
pcmpgtb
fcom
and
cmp
or
enter
and
xor
and
sbb
xor
and
and
inc
push
sbb
jo
clc
hlt
push
sbb
in
call
dec
jno
dec
push
enter
movsb
mov
xor
xor
mov
enter
je
enter
insb
push
fs
pop
lods
sub
mov
add
inc
repnz
xchg
in
loope
push
pushf
hlt
or
pop
ret
pop
mov
std
push
lock
mov
fdivr
fidivrs
hlt
add
test
add
sarb
test
sbb
add
rorb
cmp
iret
add
add
je
repnz
mov
std
add
xor
mov
dec
cld
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
add
cmp
ja
repnz
in
outsl
out
ret
lea
repz
jne
in
mov
lret
out
mov
add
jae
or
inc
or
repz
push
sti
sub
add
ja
outsl
aaa
or
addl
push
lea
lea
js
enter
aas
popa
or
jge
add
push
lock
incl
jae
jmp
or
xchg
xor
sub
cmp
jg
lock
mov
sub
addr16
push
push
lsl
sub
jbe
and
sub
pop
sub
and
add
push
outsl
jg
cmpsb
xchg
bound
adc
add
stc
std
xor
ja
jle
in
push
sub
cmp
push
mov
mov
xchg
adc
jge
outsl
sbb
dec
mov
adc
sub
jge
dec
dec
rcll
and
or
sub
cmpsb
and
jno
jle
dec
and
jle
in
mov
mov
enter
mov
mov
mov
and
scas
pop
sti
in
imul
je
cmovle
pop
aaa
pop
in
jle
addr16
mov
sbb
in
push
aad
imul
lcall
jmp
add
scas
std
jg
pop
in
cmpsb
cmpsl
and
pop
mov
lea
loop
mov
and
test
loop
jecxz
orb
mov
pop
aaa
test
nop
adc
dec
mov
leave
outsb
push
cmpsb
dec
mov
stos
dec
cmpsb
ss
adc
adcl
fstpt
sbb
int3
mov
jnp
fnstenv
push
push
cmpb
ss
repnz
or
sub
xor
bound
sub
mov
idiv
scas
and
int3
sbb
es
sbb
sub
add
push
adc
insl
lods
sub
pop
mov
popf
xor
aad
out
push
neg
sub
pop
pop
pop
es
lcall
adc
mov
repnz
outsl
fnstenv
int3
mov
lods
movsb
outsb
jle
dec
lcall
sub
jg
pop
sub
stos
adc
sbb
outsb
add
mov
push
and
dec
jne
mov
push
movsl
fwait
or
and
cmpsb
pusha
outsl
insl
in
mov
cmp
mov
punpckhdq
scas
mov
lea
xor
sbb
lcall
pop
neg
mov
jp
lret
fcmovnu
ret
jle
loop
idivb
jno
jmp
dec
popa
inc
gs
test
sub
sbbl
movsb
fistpl
in
enter
xor
sub
lret
popf
mov
or
mov
into
scas
jmp
loope
pop
out
loop
ljmp
mov
arpl
fnsave
jb
into
sub
or
sub
out
dec
mov
and
stos
lsl
xabort
out
push
pusha
in
pop
aad
add
lahf
pop
mov
movsl
adc
repnz
adc
inc
or
xchg
xchg
xchg
out
mov
loope
int3
mov
add
outsb
and
push
pop
and
shrl
jo
out
fwait
mov
pop
sub
pop
inc
movsb
cmpsb
sarb
and
add
ret
lea
incb
jb
jne
test
jne
lods
pop
mul
or
movlps
insl
clc
cmc
pusha
mov
dec
lock
inc
addr16
call
inc
push
cmp
ss
movzwl
dec
test
jo
adc
cmp
insl
orl
inc
ret
jnp
add
decb
inc
rcll
cmp
outsb
and
or
sub
subl
or
fildl
jb
dec
or
push
mov
cmp
jle
adc
cmp
insl
movb
dec
rcll
push
mov
add
sbb
aas
mov
decl
jne
ret
dec
cld
ljmp
bound
jb
inc
jnp
jo
outsb
push
push
mov
ljmp
imul
add
jb
sbb
insb
inc
insb
insb
outsl
arpl
inc
pop
bound
inc
das
in
mov
sahf
les
jge
or
notb
push
mov
pushf
mov
aad
push
jne
hlt
add
stos
aaa
push
add
cmp
jp
popf
sar
lods
jle
cmp
or
lcall
push
andl
dec
dec
dec
jmp
js
inc
cmp
ja
xchg
rcll
sbb
xchg
sub
fisttps
cwtl
mov
pop
pop
mov
mul
mov
sbb
hlt
mov
mov
insl
pop
xor
mov
outsl
lock
lods
jnp
outsl
test
cmp
mov
add
adc
mov
jmp
mov
mov
jecxz
and
inc
inc
test
mov
add
test
stos
test
ret
js
mov
testb
adc
sub
sbb
push
dec
inc
clc
xchg
imul
loop
jbe
std
mov
push
or
mov
out
test
decl
pop
ret
inc
cmp
jge
in
in
adc
or
xchg
repz
ret
pop
jmp
or
sbb
cli
pop
mov
insb
push
mov
dec
das
pop
lret
sbb
pop
mov
out
std
push
mov
pop
sarl
mov
mov
aaa
addb
cmp
movl
mov
dec
mov
pop
adc
mov
sub
sub
push
xor
hlt
push
add
loopne
cli
add
idivl
in
call
movsb
mov
jl
outsl
in
and
faddl
repnz
shr
aam
sbb
fadds
fsub
mov
in
add
or
data16
rcrb
add
addb
enter
nopl
js
shrb
enter
sbb
adc
adc
jg
pop
shlb
sti
push
mov
notb
leave
cmp
fidivrs
aad
mov
pop
jae
out
add
sbb
mov
inc
dec
mov
in
mov
mov
dec
dec
cmp
adc
dec
inc
mov
fistpll
push
cmpsb
push
push
pop
insl
cmpsb
das
mov
cmpsl
inc
mov
ljmp
sub
xchg
push
outsb
mov
std
scas
insb
pop
dec
mov
cwtl
js
push
jmp
lret
out
cwtl
mov
pop
xor
stos
xchg
mov
enter
repnz
jmp
mov
mov
outsb
movsb
rol
call
push
sbb
or
loopne
cmp
jbe
xchg
add
mov
sar
sbb
mov
iret
mov
pop
rcll
inc
inc
fdivrs
mov
cld
push
or
sub
sub
add
scas
mov
fistpll
outsb
lods
fcmovne
mov
bound
mov
inc
inc
or
jns
ficompl
mov
push
cmp
mov
clc
sbb
xor
sahf
ret
hlt
add
fisubs
dec
dec
inc
movsl
add
jge
jle
xchg
xor
cmp
xor
aaa
ljmp
xor
cmp
aaa
xor
xor
cmp
aaa
add
les
or
je
jb
rorb
arpl
fs
jae
add
pushf
adc
xor
fsubr
cmp
loop
dec
unpcklps
cld
sub
add
push
push
stos
jmp
in
add
iret
pop
or
fmul
push
add
in
flds
push
cmp
add
dec
ret
push
mov
and
jnp
test
mov
add
add
adc
lahf
movsl
mov
mov
rcl
cltd
fcmovnb
inc
inc
rolb
aam
enter
add
jle
sar
les
sahf
or
adc
xchg
js
stc
cs
push
push
inc
or
int3
add
test
push
fdivl
sbb
and
pop
mov
xchg
test
add
pop
cld
xchg
inc
es
mov
dec
sbb
ret
enter
lahf
js
enter
fsubrs
xor
push
cltd
test
loopne
cmp
enter
push
subb
xchg
adc
pop
mov
filds
nop
dec
and
pusha
addr16
pop
and
adc
add
jno
adc
jg
sbb
xor
repnz
add
mov
jno
sbb
rorl
fadds
icebp
sbb
add
mov
lret
ret
dec
lock
inc
cld
ret
arpl
clc
lea
and
js
lods
lock
fmull
inc
and
or
pusha
insb
sub
stos
jno
int
repz
add
mov
and
pop
lock
or
fcomp
pop
popa
and
lods
in
into
sub
in
mov
dec
notb
je
cvttps2pi
ss
loope
cs
adc
ud0
jne
orb
adc
shl
and
or
jae
shlb
pop
icebp
xchg
call
xchg
insb
lods
sbb
imul
gs
and
jmp
cmpl
fnstenv
mov
mov
repz
push
in
and
pop
nop
lods
sbb
pop
enter
cmp
push
add
popa
xchg
push
jne
nop
inc
js
mov
fs
adc
sbb
lea
push
push
mov
adc
addb
pop
adc
and
pushf
int3
aam
sub
adc
aam
or
add
push
das
fdivs
ret
cmpsb
in
pushl
incl
pop
add
cs
insb
mov
aaa
arpl
add
gs
and
jl,pn
outsb
or
cs
in
ljmp
adc
add
jb
jge
fs
jb
jl
imul
lcall
add
dec
popa
outsb
insb
dec
outsb
jl
jns
addr16
insb
fs
jae
mov
pop
imul
imul
bound
dec
outsl
jnp
outsl
mov
adc
pop
jl
inc
addr16
inc
gs
addr16
imul
test
adc
mov
push
test
nop
push
pop
lret
pop
mov
loop
popf
mov
sub
bound
add
and
out
icebp
inc
adc
fwait
popl
jno
push
add
adcb
sub
pop
fdivl
sub
and
fdivrs
and
and
loope
lea
mov
add
push
movsl
xor
fstpl
add
xchg
lea
clc
push
out
int3
mov
or
inc
movb
hlt
pop
stos
add
add
hlt
movsb
repnz
bound
inc
mov
mov
lcall
ljmp
jge
int
mov
adc
add
push
cld
mov
je
push
pop
rcll
push
pop
mov
ja
sub
lock
imul
stc
bound
cmpsl
rolb
jle
xchg
out
sub
call
inc
sarl
push
add
or
addr16
lds
mov
std
cld
std
lock
addr16
rolb
aam
inc
sarb
add
push
loopne
lods
jnp
add
mov
mov
mov
stos
in
orl
inc
adcl
pop
push
ljmp
cmp
arpl
cmp
xor
cmp
xor
rorb
cmpsb
xor
xchg
inc
sti
sbb
incl
push
decl
hlt
jnp
push
cmpb
jne
lret
or
test
and
ljmp
aaa
mov
add
cmp
inc
ds
pop
dec
mov
jne
dec
dec
jbe
js
sbb
jmp
sub
cmp
sbb
and
fiaddl
cltd
cmp
jg
push
cld
jmp
hlt
xor
adc
andb
mov
sub
or
fidivs
push
mov
dec
movsb
test
xor
mov
jmp
aaa
fs
pop
add
dec
faddl
add
movsl
jo
inc
jnp
add
mov
inc
jmp
fsts
clc
sbb
nop
stc
hlt
movsl
cmp
jae
cmc
or
dec
popa
add
adc
test
add
and
popa
add
decb
xor
add
out
mov
sub
xor
pop
pop
mov
pop
inc
push
cmp
mov
xchg
std
leave
push
adc
mov
repz
push
mov
subb
add
lea
pop
ja
pop
inc
inc
push
adc
xor
outsb
dec
jo
and
add
das
add
call
mov
cmp
ss
add
int
les
add
mov
xor
xchg
sub
push
and
in
mov
or
out
and
mov
xchg
cmpsl
stc
fsubr
xchg
fdivl
add
arpl
mov
add
pushf
or
xchg
les
repnz
int
pop
incb
jnp
xor
cmp
cmp
xor
xor
jle
jns
xor
aaa
imul
jl
xor
xor
aaa
cmp
or
aam
lods
cmp
xor
adc
mov
adc
pop
pop
sti
adc
loopne
and
mov
loop
push
inc
inc
sub
xor
pusha
add
lock
pop
ja
sbb
nop
pop
and
int
pop
mov
mov
je
mov
pusha
cmp
push
xchg
lds
inc
and
loop
jo
testl
in
inc
mov
mov
push
jo
fistps
rorl
xchg
and
mov
dec
inc
mov
inc
jl
movsl
mov
cmp
sbb
mov
pushl
sbb
loope
mov
sub
jle
jecxz
dec
addr16
mov
jb
daa
mov
pop
mov
add
movntq
addb
dec
out
js
mov
inc
sub
lds
cmp
sub
inc
out
hlt
dec
stos
arpl
shrl
sbb
movb
add
fistl
lret
lds
cmp
insb
cmpsl
xchg
sbb
stc
icebp
mov
cmpsb
add
aam
mov
dec
dec
dec
call
jl
xchg
in
mov
pop
fs
pop
cld
outsl
into
je
inc
dec
mov
cmp
cmp
sbb
dec
mov
cltd
ret
mov
mov
mov
cmpsb
or
xchg
jl
mov
dec
xchg
push
clc
cmp
lcall
mov
sub
adc
mov
icebp
add
idivl
fcomps
push
jae
fbstp
fs
add
hlt
jns
inc
in
cmp
jb
cmp
clc
jne
xor
jecxz
and
inc
mov
mov
adc
mov
push
aas
das
stos
leave
shll
mov
dec
fwait
mov
inc
xor
mov
jmp
jg
jle
bound
bound
mov
lods
lea
popf
rorl
mov
dec
mov
xchg
dec
sub
cmp
je
orb
scas
lock
mov
std
decl
mov
jae
mov
and
sbb
icebp
mov
mov
mov
mov
clc
lret
adc
xor
mov
jo
cld
sbb
and
in
ja
int3
mov
clc
xchg
inc
mov
ja
xchg
pop
mov
call
mov
pop
cld
mov
sub
inc
dec
popa
ja
and
sub
jg
push
fimuls
dec
cmpsb
ret
push
mov
hlt
hlt
dec
xchg
pop
out
fmull
adc
dec
inc
mov
pop
lds
orl
icebp
cmp
test
inc
rclb
and
gs
cld
inc
push
and
popa
push
mov
mov
add
sub
enter
sti
test
pop
add
push
or
mov
pop
pushf
pop
mov
loopne
and
pop
mov
aam
hlt
hlt
lret
cmp
xor
testb
cli
test
jl
push
or
andb
cmpsl
lock
xor
popa
mov
jge
mov
popl
loopne
dec
subb
in
popl
aam
rolb
loopne
mov
sub
sbb
je
enter
jbe
add
add
idivb
fistl
sbb
lea
cmp
jae
dec
mov
sbb
jbe
jne
mov
mov
dec
rolb
lock
sbb
pop
popf
in
jle
mov
push
inc
cmp
cld
dec
sub
mov
pop
inc
inc
cmp
insb
in
pop
std
ud1
inc
cmpsb
xor
xor
mov
push
cmp
and
les
aad
lea
mov
mov
dec
shl
or
add
mov
jl
pushl
mov
push
xor
push
std
jb
popf
adc
dec
aaa
xor
mov
xor
cmp
ss
cmp
xor
add
xor
ss
inc
mov
xor
xor
in
inc
inc
push
or
add
mov
pusha
repz
cmp
dec
push
lret
popa
fsubl
mov
pop
incb
add
inc
inc
lods
inc
inc
inc
and
or
dec
arpl
add
mov
inc
push
xor
insb
in
aas
push
mov
add
daa
add
and
fcomp
or
push
sbb
pop
testb
sub
or
mov
fists
sub
add
call
lahf
imul
jae
dec
dec
dec
pop
add
push
mov
add
inc
dec
or
add
dec
push
or
add
push
push
or
and
arpl
dec
or
push
or
sub
sub
lcall
xchg
rcrb
cmc
add
add
mov
ja
faddl
mov
sbb
xchg
std
add
nopl
fstps
sbb
jmp
or
in
inc
int
add
cmp
mov
jmp
jne
pop
or
jle
insl
outsl
sbb
push
mov
cli
add
mov
shrl
fildl
imul
pop
sbb
dec
nop
popa
aas
divb
bound
and
dec
stc
in
mov
fiadds
sbb
rol
add
add
add
ret
and
insl
fs
fistps
or
add
jl
and
add
dec
add
and
pop
sub
into
and
pop
aaa
ss
jbe
leave
aaa
mov
fistps
inc
pop
cmp
inc
outsl
pop
fdivs
or
bound
cmp
outsl
add
js
push
mov
fwait
jge
cmp
jmp
sub
or
mov
push
or
shr
and
mov
test
add
push
cmp
sbb
adc
xor
pop
rcrb
jb
sub
or
push
inc
sbb
testl
out
or
addr16
mov
cwtl
jnp
fstl
sbb
nop
aas
sbb
push
test
mov
mov
sub
and
sub
pop
sub
xchg
mov
or
mov
or
or
sub
add
fs
cmp
jnp
push
dec
cmp
pop
or
adc
push
mov
sub
fs
push
push
pop
pop
or
lods
sub
and
sub
add
push
lcall
lods
lret
add
add
push
add
jo
mov
pop
inc
add
ljmp
fisttpl
lods
mov
push
das
scas
insl
mov
incl
adc
lods
or
cli
pop
scas
push
sbb
out
lods
loope
aam
iret
sbb
in
test
outsb
daa
xchg
mov
daa
es
outsb
pop
loopne
inc
out
or
repz
sub
pop
add
jmp
inc
bound
jne
roll
or
movsl
sub
push
rcrl
push
and
jne
es
movsl
adc
jmp
adc
jne
ja
call
imul
out
jecxz
add
stos
pop
pop
rcl
insl
xchg
mov
scas
sub
jne
sub
daa
jbe
add
mov
inc
test
daa
jle
fistl
out
pop
mov
or
xchg
out
out
add
xchg
rcrl
jae
insl
clc
or
mov
shlb
mov
push
test
fs
shll
sub
andl
pop
pusha
pavgb
ja
pushl
out
js
add
add
lea
cmp
cltd
fdivp
lcall
leave
sbb
jle
es
add
jb
lret
dec
sub
jp
jne
or
dec
push
rorb
ret
ja
inc
add
movsb
out
mov
sub
jo
inc
iret
xor
mov
add
iret
shll
inc
popf
sti
loopne
and
xor
ret
je
mov
cmp
outsl
and
add
sub
repz
mov
push
push
adc
mov
sbb
and
mov
daa
jge
sahf
jne
jb
pop
fwait
jne
sar
xchg
mov
neg
sbb
ja
insl
add
mov
cmpsl
ret
in
mov
int3
cmp
push
or
sub
inc
wrmsr
adc
call
int
faddp
jge
adc
lods
or
outsb
jle
popa
imul
jg
jbe
fs
ja
cmp
cltd
cmpsb
add
inc
les
test
mov
cmp
addr16
adc
jo
int
add
cmp
dec
es
in
inc
cmp
adc
cmp
mov
mov
xor
test
inc
sub
or
in
ret
lods
popf
fisttps
adc
sub
out
icebp
sahf
xchg
and
inc
int3
cmp
std
cltd
test
xor
dec
push
adc
jecxz
loope
jnp
or
pop
xlat
push
insb
aaa
pop
in
or
jle
xchg
sub
sbb
and
sbb
out
sbb
sbb
outsb
jle
jne,pt
fistps
inc
lret
fmuls
or
cmp
dec
les
inc
inc
ret
sarb
lods
inc
insl
clc
cmpsb
pop
movl
out
out
add
jmp
stos
imul
jg
jno
sti
push
pop
cmp
lods
sub
mov
out
fiaddl
push
mov
jne
call
shrl
fisttps
add
jo
xor
mov
std
sbb
mov
sahf
sub
sub
sub
add
orl
fnstcw
lret
jmp
push
cmp
inc
dec
sbb
insl
pop
loope
hlt
inc
cmpsb
in
cltd
push
inc
pop
hlt
fidivrl
dec
lret
cmpsb
lds
arpl
and
xor
jp
pop
xor
sbb
int
movd
sub
insl
jbe
sub
mov
and
inc
rorl
insl
imul
push
jle
sub
mov
lods
mov
or
cmp
add
mov
test
loope
cltd
lret
inc
fsubr
test
pop
sub
fldt
movsb
pop
out
xor
add
dec
sbb
out
in
lcall
test
xor
sti
add
insb
mov
mov
in
lock
pusha
and
xor
scas
ret
sbb
push
and
roll
sub
or
dec
mov
ss
jo
push
cltd
xchg
adc
mov
jecxz
fs
push
fmul
inc
icebp
fcomps
fdivs
in
mov
xor
rcll
lods
sbbl
hlt
add
subl
dec
mov
fstl
ja
icebp
bnd
xor
mov
inc
jb
dec
pop
sbb
lods
out
jnp
jo
ret
dec
dec
mov
jae
dec
je
aam
jnp
mov
shll
add
push
sti
int
fadds
popf
and
stos
inc
test
inc
xor
filds
or
push
pop
xor
lcall
aaa
xchg
stos
cs
jmp
push
in
add
inc
testl
je
scas
popf
hlt
push
mov
xor
jg
jno
jnp
das
imul
and
or
les
cmp
dec
push
fs
hlt
ja
loopne
ret
mov
insb
sbb
sahf
jmp
imul
cmp
lcall
icebp
cmc
sbb
test
rcl
sbb
les
add
pop
test
jno
ret
cmp
inc
ss
pop
les
jmp
scas
nop
sbb
adc
test
daa
push
xchg
test
xchg
fldt
dec
xchg
pushf
cmp
cld
jp
and
fidivs
das
insl
pop
sarl
sbb
inc
cmpl
fiadds
insb
add
cmpsb
testb
pushl
fnstsw
mov
add
mov
jo
rolb
cwtl
cmp
add
push
jo
subl
ret
fiadds
push
xchg
and
enter
fisttpll
inc
dec
loop
mov
cmc
hlt
das
cmp
and
mov
push
cmpl
sub
cmp
sbb
stc
stos
inc
testl
jl
dec
jg
adc
jno
adc
inc
loopne
aas
xchg
movlps
push
xchg
call
jo
pushf
imul
int3
jmp
push
mov
cmpsl
jno
xchg
cmp
loop
lods
das
push
or
xlat
movsb
repnz
imul
sbb
iret
cmp
cmp
pop
xchg
int
pop
aam
cmp
push
subb
mov
popf
jle
xrelease
fstpt
xor
out
loope
sbb
push
insl
xlat
mov
iret
xor
test
out
aad
mov
xlat
fisttpll
iret
sub
xor
adc
mov
push
mov
pop
pop
out
es
push
jne
fsubrl
scas
cmp
fmull
mov
loopne
dec
push
das
lret
in
and
cmpsb
inc
adcl
popa
xchg
jle
xlat
inc
adc
iret
cmp
pushf
sub
push
jp
fcmovnu
jo
pop
and
sar
mov
cwtl
mov
xchg
cmp
add
add
inc
adcb
cmpsb
lret
rclb
shlb
mov
push
scas
popa
ret
stos
push
ja
insl
adc
mov
jo
out
pop
sub
sub
sub
mov
fisubl
fmuls
mov
aaa
pushf
popf
movsl
push
mov
arpl
pop
or
outsl
movsb
jbe
pusha
mov
cmp
inc
pop
inc
xchg
scas
xchg
sar
pushf
fwait
mov
test
xchg
push
cmp
insb
es
aam
lea
ds
push
pop
scas
sub
lds
outsb
xchg
push
add
and
or
addr16
aam
mov
int
sub
dec
mov
add
sar
mov
and
dec
xchg
mov
and
repz
mov
flds
and
adc
add
push
std
xor
mov
push
mov
adc
adc
jl
mov
sbb
js
inc
jge
mov
dec
mov
movsb
or
mov
push
or
mov
mov
jns
dec
in
add
leave
or
arpl
xlat
loope
adc
mov
pop
inc
test
or
enter
aam
icebp
jp
std
fadd
les
jae
fisubrs
pop
icebp
push
and
inc
sub
scas
inc
pop
out
dec
sub
scas
fildl
cmp
or
push
xor
cmp
loopne
push
fwait
mov
pop
js
aaa
push
dec
es
xor
scas
pop
mov
push
add
iret
shrb
mov
jecxz
fcomps
mov
mov
mov
rcr
mov
pop
cmp
push
pop
sbb
cmp
daa
mov
pop
popf
push
dec
lods
into
push
pop
pop
push
pop
xor
push
fsubs
add
addr16
data16
mov
cmp
imul
inc
jno
xchg
push
mov
add
cmp
mov
adc
in
dec
add
ds
ds
push
adc
sbb
inc
test
mov
add
sbb
sub
popa
ss
push
cmp
test
sbb
insl
or
outsb
add
insb
dec
addr16
add
repnz
dec
cwtl
add
pop
cmp
add
or
inc
push
and
pushf
inc
fldt
jl
or
call
cs
xlat
ret
dec
adc
aas
push
pop
mov
inc
aaa
repz
shrl
arpl
lret
out
sahf
inc
sbb
inc
jb
lcall
and
pop
bound
addl
int3
and
testl
pop
lock
into
dec
xchg
add
cmp
into
daa
aad
mov
sbb
fcoms
dec
repnz
out
fistpl
cmpsl
push
iret
push
mov
daa
dec
test
and
mov
mov
xchg
jne
mov
and
lods
fisttpll
das
lods
out
adc
push
add
or
imull
in
lods
fdivrl
out
dec
mov
in
pop
popf
in
popa
add
dec
and
adc
sub
add
lcall
lcall
dec
inc
push
xor
or
adc
xor
andb
or
push
scas
rclb
out
push
xchg
and
shlb
sbb
fstpl
icebp
push
sbb
test
orl
and
daa
and
mov
push
stos
in
or
sbb
addb
fwait
xchg
sbb
sti
jp
sbb
cltd
divb
mov
sub
call
fbld
negl
or
add
dec
or
test
add
aaa
inc
mov
and
or
mov
iret
add
mov
and
pshufw
and
pop
je
inc
or
jp
cmp
push
push
mov
xor
js
fsts
add
xlat
dec
pop
or
xor
mov
je
pop
ror
cmc
or
jb
shlb
mov
adc
insl
or
inc
push
loopne
pop
inc
jg
stos
sbb
xor
sub
rol
cmp
and
mov
lods
mov
mov
ljmp
andl
insb
fsubs
sbb
add
mov
cwtl
sub
bound
sbb
adc
stos
mov
adc
rorb
sbb
xor
scas
outsl
das
mov
and
sub
addr16
add
add
xchg
mov
xchg
mov
mov
stc
and
push
lcall
sub
pop
subl
and
fldenv
or
sbb
cmp
call
cmpsb
or
scas
scas
rorl
or
je
fmuls
fnsave
pop
test
ret
aam
push
push
mov
pop
rcll
lods
pushf
xchg
cmp
jge
enter
jecxz
mov
adc
test
jbe
aaa
dec
iret
jmp
daa
mov
insb
adc
ja
add
test
inc
xchg
test
out
aad
test
jnp
ja
add
aad
dec
out
lock
or
mov
pmaxub
inc
add
fnstcw
mov
mov
fsubs
cmp
rcll
addl
and
out
cmp
out
test
out
jo
inc
aaa
sbb
pop
mov
pusha
and
sub
adc
sub
adc
add
add
cmc
lret
jbe
sbb
cmp
cmp
push
in
and
out
push
mov
addr16
negl
cmpsl
or
jle
and
insl
mov
sahf
sub
lds
push
mov
and
mov
pop
fsubs
push
sub
popa
adc
fld
pop
pushf
punpckhbw
das
pop
out
jnp
inc
and
mov
inc
pop
loopne
push
mov
push
imull
inc
add
pop
push
sub
aaa
imul
and
fisubl
pop
mov
xlat
inc
out
sti
inc
jb
scas
mov
mov
and
ds
and
lods
popa
jle
sub
push
ss
or
xchg
mov
aad
jecxz
inc
dec
jae
testb
push
cmp
sbb
xor
jo
pusha
pop
cmp
cmp
dec
mov
in
cs
sub
cmpsl
sbb
xor
hlt
jl
sbb
push
scas
testb
mov
fiaddl
fildl
test
lock
jno
push
mov
or
stos
xor
cmc
ljmp
jne
shll
xor
sub
xchg
sbb
sub
push
inc
xchg
xor
and
pop
xor
pop
and
movb
sbb
pop
imul
mov
rcrb
into
cmp
xor
mov
sub
daa
scas
sbb
and
lahf
mov
mov
inc
adc
cmp
pop
cmp
fimull
out
and
insl
mov
andb
ss
mov
insl
xchg
lcall
outsb
scas
andb
das
sub
pop
lgs
jecxz
sub
jmp
sahf
cmp
sti
xor
insb
inc
xor
jbe
fcoms
ror
imul
js
dec
das
pminsw
add
loopne
xchg
popf
cli
jb
jo
push
movsb
push
enter
mov
sbb
pop
out
add
push
jp
mov
das
push
and
ret
mov
imull
xor
sub
push
outsl
lea
mov
inc
lods
jp
pop
jg
add
sbb
scas
in
fildl
pop
xchg
fnstcw
sub
add
sti
xor
inc
mov
add
jnp
lock
in
in
mov
mov
sub
shll
push
adc
cmp
fidivl
in
add
mov
call
out
les
adc
mov
test
das
out
add
jmp
rolb
pop
sub
cmpsb
loope
add
mov
xchg
xchg
test
mov
das
jns
sbb
mov
cmp
nop
push
add
and
lods
dec
sub
cwtl
rclb
or
fwait
xorl
adc
push
cmp
cmp
lahf
mov
jne
xchg
xor
mov
mov
loope,pn
and
or
dec
das
cmp
push
sbb
iret
xor
pop
or
dec
xorb
jle
jbe
lods
cmp
popa
jg
push
push
jb
or
shll
rcrl
xchg
dec
xchg
push
int3
bnd
fisubs
and
dec
in
jo
lods
sbb
insl
ret
mov
andl
add
frstor
lret
mov
jnp
insl
lods
fldt
std
or
adc
pop
aam
or
das
push
pop
pushf
fstpl
xchg
loope
iret
inc
loop
loop
xor
sbb
push
xor
push
sub
xor
nop
add
push
out
das
mov
sbb
inc
fildll
adc
call
mov
ja
roll
jle
testb
jg
sub
loop
push
inc
fcmovu
shl
and
aad
aas
sub
or
sbb
mov
mov
sar
and
je
and
jb
jle
faddl
mov
xor
jge
test
movsl
lods
adc
hlt
fidivrs
sub
jns
adc
fiadds
add
jo
mov
push
rorw
mov
jge
dec
or
xchg
fcomi
adc
and
sbb
add
lea
jl
inc
mov
mov
adc
and
pop
cmp
fcomps
sub
add
aas
ficompl
enter
aas
add
cltd
out
sbb
push
jno
roll
xchg
mov
pop
pusha
push
insb
xor
inc
jp
mov
pop
fs
pop
mov
jnp
scas
int
popa
inc
xchg
sub
sbb
mov
add
mov
mov
aam
faddl
aad
gs
data16
in
pop
je
pop
dec
bound
push
lret
push
add
or
adc
fwait
add
mov
pushf
movsl
in
dec
jns
daa
mov
hlt
fnstcw
xchg
sub
push
icebp
sbb
mov
jl
adc
aaa
inc
mov
xor
iret
and
into
ds
jbe
mov
mov
daa
sahf
jg
test
cli
addb
dec
pop
inc
dec
jle
outsl
andl
pop
hlt
mov
in
xor
and
xor
iret
mov
cmp
pop
pop
push
dec
dec
test
push
add
inc
add
jae
pop
mov
push
push
aam
daa
gs
iretw
aam
xchg
push
jae
adc
sub
popa
out
cmp
pop
mov
pop
pop
sub
pop
iret
xchg
loopne
mov
pop
scas
daa
xlat
or
pop
push
mov
add
loope
jmp
adc
arpl
pop
pop
ret
or
inc
pop
xlat
das
pop
jnp
jle
add
mov
add
pop
sub
mov
pop
mov
xchg
rdmsr
ja
xor
and
daa
add
cmp
and
push
cli
fdiv
popa
fdivs
mov
push
and
mov
jb,pt
iret
xor
or
mov
xchg
sahf
lock
insl
pop
pushl
and
pop
icebp
pop
jmp
adc
xchg
dec
movsb
call
add
mov
mov
iret
push
ds
inc
xor
sub
fwait
jl
add
daa
jb
pop
xor
btr
mov
mov
cmp
arpl
jbe
outsl
negb
outsl
and
cmp
mov
lret
adc
fwait
int
add
jg
psrlw
stos
push
cmpsl
daa
ljmp
mov
orb
pusha
add
adc
xor
sbb
shl
jo
gs
sub
cmp
add
add
mov
add
andw
or
sub
add
call
push
xchg
inc
jnp
aad
shrb
repnz
fwait
inc
outsl
out
adc
push
or
push
adcl
adc
xor
dec
push
mov
ret
sbb
pop
jno
pop
jbe
insl
subl
daa
in
repz
or
or
loopne
cmc
into
mull
repz
rol
xor
cmp
add
add
jno
dec
dec
int
mov
or
cmp
daa
dec
das
and
arpl
sbb
ljmp
sbb
mov
sbb
adc
add
cmp
dec
sbb
lds
xor
push
xor
sub
push
mov
cmp
sub
and
je
xchg
xor
and
cmp
push
and
aam
sbb
sbb
push
sub
cs
pop
fimull
jg
pop
mov
xchg
call
das
push
sbb
dec
clc
mov
scas
or
cmp
fmul
and
insb
pop
mov
and
add
ret
in
test
adc
fwait
add
pop
pop
dec
pop
mov
loop
jo
insb
shrl
fsub
jecxz
adc
test
mov
and
adcb
mov
stc
mov
sub
dec
cli
xchg
mov
pop
or
ljmp
or
loopw
pop
dec
shl
scas
stc
das
flds
rorb
aaa
pop
ret
mov
iret
ja
inc
xor
xchg
jo
ss
bound
xchg
push
mov
mov
minps
movl
jo
mov
add
jmp
or
push
sti
movsb
loope
movsb
xchg
and
fisttps
addr16
daa
adc
xor
and
lds
xchg
int
fiaddl
and
cmp
xor
jnp
add
leave
adc
pop
ficompl
jle
ja
out
add
popf
inc
pop
pop
cmp
mov
inc
mov
and
push
pop
aaa
jp
das
or
fs
jae
add
ja
xchg
int3
insb
push
cmp
popa
or
mov
arpl
int3
sbb
lea
movsb
pop
das
add
adc
fdivrl
shld
fiadds
push
or
das
out
mov
int
pushl
movsb
imul
sub
or
ficomps
push
sti
or
push
aad
inc
adc
or
test
mov
cmp
xchg
pop
add
cmpl
or
sbb
loopne
pop
decl
or
push
arpl
jae
cmp
ja
les
cmpsl
inc
sub
sub
mov
rolb
xor
fmuls
inc
dec
cmp
add
inc
fisubl
xchg
and
and
add
push
mov
lods
cmpsl
insb
loope
test
in
mov
popl
add
jl
or
adc
pop
mov
data16
jle
adc
mov
push
push
jno
and
nop
mov
push
push
push
cmp
push
or
sbb
lret
pushf
jg
test
xorl
js
jp
addr16
fiadds
mov
mov
bound
shrb
cmp
sbb
in
adc
gs
aaa
add
add
js
daa
inc
mov
mov
xlat
or
mov
scas
cmp
scas
fsubl
sbb
icebp
dec
popf
out
jo
sbb
fwait
jge
xor
mov
loope
cltd
es
xor
in
je
xor
pusha
rorb
scas
xor
pushf
test
insl
mov
cmpsl
xchg
push
cmc
cmpsb
and
ret
pop
sbb
pop
dec
lods
dec
iret
push
loopne
mov
jp
je
push
and
test
lcall
notb
mov
add
or
pusha
lock
pop
es
mov
adcb
or
xchg
pop
mov
clc
bound
popa
nop
sbb
fsubrs
sbb
push
fwait
jbe
loopew
imul
sbbl
lahf
andb
lds
cmpsb
sbb
aad
xor
loopne
es
xor
or
outsb
inc
pushf
mov
test
test
xchg
inc
xorb
xchg
jmp
cmp
adc
push
call
aad
sbbl
dec
test
jle
push
mov
das
lds
jle
in
xor
insb
push
and
aaa
or
dec
and
mov
inc
imul
int
jo
mov
insl
ss
andl
sub
or
fcomps
sub
sbb
rolb
pusha
sub
mov
xchg
adcl
push
adc
or
mov
leave
xor
daa
sbb
insl
inc
nop
cmpb
jb
and
sub
adc
or
and
jae
add
mov
push
loopne
ret
mov
jl
add
dec
xchg
dec
iret
sbb
lods
jmp
into
fisubrs
movsb
pop
or
test
jnp
les
pop
ja
mov
add
cmp
xor
sbb
inc
inc
cmp
and
popa
ret
adc
dec
inc
mov
sbb
test
push
jmp
xchg
loopne
pop
fs
popf
push
mov
je
mov
dec
cli
mov
adc
push
cmp
rolb
inc
bound
stos
jns
push
sbb
lahf
sahf
aad
xor
or
std
arpl
out
subl
les
rcrl
lds
cmp
call
loope
ja
xlat
xchg
sub
mov
gs
adc
imul
dec
jecxz
add
fnstcw
pop
data16
sbb
inc
nop
sbb
mov
adc
xchg
hlt
lahf
and
xor
shl
and
dec
aad
shlb
shlb
fidivrs
add
cmp
xor
pop
inc
ja
insl
xlat
xorb
xchg
stos
sbbl
sbb
shrl
mov
sub
iret
popf
push
xchg
stos
push
cmpsb
into
or
sub
roll
adc
stos
cmp
or
arpl
loope
xchg
sub
cmpsb
jb
loop
or
je
nop
xor
jmp
cs
push
aas
fildl
loopne
shrb
xor
lea
es
js
sbb
in
add
sub
aad
mov
push
xor
mov
nop
xor
ljmp
cmp
sub
xchg
xor
stc
sbb
adc
sbb
cmp
fcoms
mov
dec
out
inc
sbb
or
dec
mov
or
aaa
xor
add
adc
adc
or
jb
add
data16
lock
ds
lods
sub
hlt
rdmsr
xor
shl
cmp
add
cld
jno
mov
add
pop
mov
repz
popf
xchg
jmp
and
fwait
cmp
int3
mov
and
fildll
aad
cs
in
add
ja
lret
pusha
es
jp
push
cmp
xor
je
mov
enter
ret
jns
jns
jnp
cmpb
scas
pop
jno
fisubrs
and
jo
mov
mov
or
fsubs
push
jbe
dec
xor
push
jno
pop
enter
int3
pop
loope
stc
cmpsl
cmp
push
daa
sbb
mov
mov
dec
inc
mov
mov
lds
outsb
xchg
mov
movsl
mov
nop
sub
add
aaa
push
mov
inc
sbb
nop
shll
mov
inc
push
iret
std
push
es
mov
adc
loop
subb
push
add
cwtl
push
and
das
outsl
fucomip
cmc
icebp
mov
into
pushf
push
pop
punpckldq
popf
mov
push
add
aam
dec
das
jmp
xchg
cwtl
cmc
je
scas
into
ja
pushf
loop
lods
mov
xorb
lcall
mov
in
push
adc
add
cpuid
sub
jl
call
cmp
push
and
inc
iret
push
jnp
mov
movsb
fldl
mov
lahf
cmp
pop
or
or
xchg
int3
add
pop
les
xor
xchg
jo
dec
sbb
mov
jl
xchg
pop
pop
xchg
jno
lods
push
test
dec
ss
xorb
fildl
inc
and
test
xchg
enter
xlat
adc
popf
push
repnz
movb
sti
cmpsl
add
inc
addb
daa
mov
and
jb
cmp
bound
fldenv
dec
add
nop
dec
das
call
mov
add
add
imul
orb
jp
sub
cs
sub
push
sbb
push
loop
nop
jnp
std
xor
adc
sub
movsb
js
je
cmp
or
jo
shll
mov
outsl
sbb
pop
pop
sbb
jo
in
jo
dec
xchg
add
int
adc
decl
loop
and
sub
mov
mov
bound
and
sbb
mov
jo
icebp
and
add
push
loopne
xor
push
mull
and
cmpsl
xchg
add
das
nop
mov
pop
je
mov
dec
jbe
stos
imul
scas
push
jg
mov
adc
popa
add
add
fcomps
mov
std
pop
push
mov
mov
subb
jge
sub
bound
and
pop
inc
jnp
sub
stos
out
ljmp
sbb
add
add
fcmovnbe
xor
xor
ja
mov
dec
lods
in
cmp
lds
js
lret
daa
push
xchg
adc
ja
dec
int
mov
pop
outsl
les
cli
in
pusha
mov
jmp
or
test
imul
adc
dec
call
xor
cld
xor
cltd
mov
aad
add
sub
inc
dec
clc
or
and
mov
aad
push
scas
inc
int
ss
add
push
sarl
push
push
hlt
mov
shr
dec
inc
fs
sub
xorb
bound
pop
sbbl
mov
mov
in
jno
fwait
sarb
jbe
je
fisttpl
inc
in
push
jae
jb
push
adc
xchg
fdivl
sbb
inc
add
daa
jnp
mov
cwtl
hlt
xlat
gs
roll
ret
or
mov
sbb
and
aas
mov
arpl
sbb
hlt
or
fbstp
jno
cmpsb
ss
and
xchg
mov
adc
mov
fadds
sbb
add
int
jle
cmp
inc
sub
push
cmpl
cli
ret
cmp
icebp
lret
or
lahf
aad
and
add
and
pop
xor
sub
subl
sti
jg
mov
in
pop
leave
sti
scas
cli
dec
adc
mov
add
lcall
pop
mov
cmp
pop
adc
sbb
push
popa
mov
dec
sbb
repz
inc
mov
sbb
xor
ret
lret
int
mov
stos
aam
nop
push
and
scas
push
lret
fistl
push
outsl
in
fucomi
or
inc
or
pop
ret
lret
das
hlt
call
xor
push
jp
rolb
mov
mov
pop
shrb
sbbl
add
repz
aas
imull
jno
xchg
mov
mull
push
mov
cmp
sbb
call
bound
push
fsubrp
pop
add
push
mov
push
sub
jmp
jle
mull
mov
add
add
cmp
aaa
rolb
sbb
or
push
pop
adc
loopne
loop
fmuls
outsb
cwtl
jo
cmp
ret
cs
cmp
sub
popa
push
mov
push
jno
cld
popf
or
ja
pushf
bound
mov
pop
rorl
addb
loop
sub
xor
push
es
jno
imul
xor
negl
fisttpl
leave
clc
push
test
js
mov
xlat
mov
cld
xor
cmpb
add
lock
jl
ss
dec
ljmp
dec
adc
test
ret
inc
in
icebp
daa
lds
or
testl
pop
push
movsb
stos
test
push
pushw
sbbl
ret
test
adc
lock
shll
adc
add
xor
cs
test
in
push
add
push
push
loop
mov
sti
aam
mov
jmp
sbb
or
call
sbb
or
jno
test
adc
adc
cmpsl
or
inc
pop
mov
loopne
cmp
mov
sbb
jp
pop
xor
xchg
xlat
sub
repnz
sub
sahf
push
pop
jle
in
add
sbb
and
pop
flds
pop
push
int
fsubrs
add
dec
push
push
mov
insl
mov
pop
xchg
fadds
add
and
mov
add
stos
jae
arpl
and
aad
stos
out
and
mov
out
push
addl
cmpsb
mov
pop
lds
mov
addb
adc
cmp
idivb
sbb
movsb
cmp
lock
add
add
leave
or
mov
or
xor
push
and
inc
inc
loopne
int3
dec
jo
cmp
push
ljmp
inc
xchg
movsl
sub
cmp
push
daa
lods
xchg
fnstcw
mov
jo
aaa
dec
out
or
sbb
pop
or
add
jo
and
add
push
iret
or
cmp
xorl
test
push
negl
or
dec
inc
mov
or
lea
into
or
insb
mov
jge
imul
cmpsl
frstor
sarl
sub
pop
sarl
daa
inc
movsb
mov
jle
jae
comiss
neg
sub
cltd
cmp
xor
sub
and
inc
push
sbb
xor
inc
pop
aas
int
or
push
cmp
dec
xchg
insb
fs
pop
pcmpgtd
push
add
adc
int3
xor
iret
pop
imull
xchg
or
xor
outsb
nop
jle
out
mov
mov
add
das
and
push
mov
xor
push
cmpsl
and
pop
pop
inc
xor
cmp
mov
insb
fwait
pop
and
ret
pop
cmc
scas
and
inc
inc
jmp
pop
into
popf
cld
ficomps
ret
addl
testl
or
mov
inc
repz
pusha
arpl
bound
jg
pushf
inc
add
inc
mov
adc
pop
dec
mov
jbe
and
mov
sysret
outsl
mov
int3
ja
xchg
pop
dec
fbstp
insl
fcomp
fadds
and
in
mov
or
aas
insb
adc
inc
mov
mov
call
mov
mov
inc
sub
fistps
test
xchg
adc
dec
sub
lret
loopne
fwait
mov
push
dec
and
fistps
loope
ret
push
jecxz
cmpsl
outsb
out
push
aaa
cmp
mov
scas
xor
ret
mov
enter
test
loope
push
jns
fldenv
ret
sti
daa
mov
ss
mov
and
or
adcl
cmp
lret
cmp
movsb
ret
xchg
xchg
pop
rcll
and
pop
fistps
or
pcmpgtb
xor
sub
jecxz
int3
xor
fisubrs
adc
out
adc
xor
jmp
in
and
outsb
ret
cmp
sub
xor
int
cmp
ljmp
sti
jo
sbb
add
ret
ss
mov
out
dec
xor
pop
and
xchg
xchg
jne
adc
shl
sub
subw
lret
add
fs
sbbb
jge
lea
and
nop
mov
ja
arpl
popf
lea
mov
xchg
outsl
xor
lcall
cmpsl
or
int
aaa
pop
xchg
ja
sbb
sub
or
dec
sarl
daa
push
adc
jnp
add
xchg
ficoml
inc
add
lret
dec
inc
adc
mov
popa
pop
mov
ss
cwtl
and
pop
or
fwait
pop
jbe
mov
lea
es
jg
es
cmpsl
and
sbb
lds
cmc
pop
stos
jle
fstpl
fwait
jg
mov
or
cmp
mov
pop
xor
adc
pminsw
cli
push
push
movsl
mov
jle
xchg
lods
mov
pop
addr16
test
push
ss
adc
adcl
and
jle
or
xchg
lods
cmc
inc
xchg
sub
or
mov
sbb
orb
push
inc
push
adcb
xor
push
mov
insl
lcall
loop
or
loop
mov
icebp
test
into
pop
movq
das
add
stos
insl
ror
mov
loopne
out
in
subb
and
into
faddl
add
xchg
jnp
mov
jbe,pn
mov
nop
inc
add
add
iret
lds
or
inc
lahf
push
pop
mov
rolb
movsb
sbb
mov
or
xchg
pop
push
mov
mov
test
lahf
rol
add
mov
adc
pop
adc
adc
adc
jnp
dec
shll
add
inc
aad
insb
movsl
jnp
iret
cmp
insb
mulb
add
xlat
stos
adc
bound
push
adc
jge
cmp
mov
and
jle
addb
inc
cwtl
sbbl
ja
mov
adc
jmp
enter
cmpsb
dec
sbb
sub
imulb
icebp
mov
push
add
jle
mov
js
dec
sub
xor
mov
cld
lret
adc
jp
out
in
mov
fcmovbe
movsb
repnz
stos
adc
call
adc
sbb
stos
fsubs
mov
pushl
imul
pop
out
pushl
pop
loopne
mov
jo
sbb
es
dec
fdivrs
ret
xchg
scas
popa
jmp
or
addr16
outsl
or
dec
data16
sub
push
icebp
and
jne
js
fwait
sbb
inc
xchg
pop
pusha
sbb
add
insb
inc
xchg
cmp
inc
das
cmp
ds
shll
pop
adc
mov
jle
stos
ret
inc
fs
icebp
imul
mov
cmp
jp
jo
addl
loopne
flds
sbb
aaa
imul
aad
sub
fimull
subl
sbb
lock
add
push
insb
mov
inc
push
xor
xlat
loope
mov
shll
jne
cmc
rcr
mov
inc
pop
add
outsb
xor
sbb
or
xchg
adc
add
cmp
popf
outsb
sbb
out
shl
ret
sub
inc
outsl
lods
inc
arpl
mov
inc
mov
mov
shrb
or
adc
cli
jae
sub
shr
cwtl
sub
je
inc
sub
fadd
out
adc
leave
fsubl
movsbl
mov
mov
pop
adc
test
inc
scas
push
jge
sub
lea
cmp
or
or
cltd
fsts
push
ljmp
or
mov
lret
cwtl
and
or
stc
ret
mov
outsl
rcl
icebp
adc
stos
jo
stos
push
sub
fwait
xor
mov
nop
pusha
pop
push
shlb
stc
test
stos
pusha
sub
jnp
into
xlat
ds
mov
mov
movsb
aaa
sub
and
stos
and
mov
mov
inc
enter
pop
mov
sub
movsb
jb
jl
scas
psubsb
mov
test
push
jle
test
cli
inc
in
or
dec
jb
push
dec
mov
pop
jae
adc
mov
je
and
lret
and
add
pop
add
xor
call
mov
ret
fisubl
and
aad
mov
lods
lock
cmp
jecxz
sub
ds
shll
addr16
clc
test
jmp
lcall
cmp
lahf
stc
pop
repz
add
jecxz
push
repz
icebp
mov
mov
gs
adc
xor
lock
cwtl
out
push
push
iret
and
in
pop
rol
pusha
mov
adc
push
rep
add
popa
pop
pop
or
pop
pop
bound
jmp
pusha
add
push
adc
or
pop
shlb
adc
aad
lock
jp
and
fadds
mov
insb
call
out
ret
adc
pop
jecxz
xchg
inc
addr16
or
push
pusha
subl
ret
add
xor
pop
pop
jno
mov
cmp
and
and
popl
stos
pop
shll
add
shlb
fld
fs
push
pop
adc
lret
stos
fisubrl
add
rcll
rcr
and
stos
add
int3
or
out
stos
adc
jnp
adc
or
and
mov
shll
push
pop
push
push
push
inc
scas
sbb
out
bound
jne
add
xlat
or
int
sbb
mov
pop
add
cs
cs
outsb
mov
into
push
xor
mov
and
rcr
add
jmp
adc
dec
test
loop
mov
ss
fstpl
pop
push
jp
lock
outsl
test
mov
dec
jmp
dec
xor
add
add
ja
outsl
loopne
ja
jb
cld
flds
add
push
xchg
push
adc
outsb
jae
add
iret
sub
mov
or
inc
cmpsl
jle
mov
adc
push
imul
fwait
orl
loope
or
lock
and
adc
sub
fsts
mov
fdivs
mov
scas
test
ret
mov
xor
sub
adc
xor
filds
push
pop
or
rcrb
sahf
sbb
dec
mov
stos
inc
jne
js
sbb
adc
jb
sub
shr
adc
adc
and
int3
and
mov
shlb
lods
and
lods
testb
in
cld
test
xor
add
pop
inc
or
sub
out
jg
testl
das
lcall
or
insl
sub
mov
add
sbb
and
jbe
or
pop
stos
ror
mov
push
fcomp
sar
jb
sbb
daa
ret
je,pn
adc
sbb
push
add
lcall
mov
dec
xor
jp
push
adc
push
stos
or
cmpsb
sti
jno
jmp
push
inc
mov
fwait
inc
or
sbb
scas
cmp
in
pop
adc
mov
and
shl
cli
movsb
lcall
mov
fistpl
cmp
jg
xchg
aas
sbb
insl
inc
mov
popf
fimuls
mov
push
mov
adc
jnp
push
sbbl
jae
insb
arpl
out
and
nop
andb
push
jge
pushf
xchg
push
jp
aas
mull
mov
loope
bound
and
lcall
mov
or
sahf
pop
jb
sbb
lock
push
test
push
rolb
xchg
or
mul
addr16
cmp
xchg
and
iret
test
out
lret
and
test
add
cltd
addl
mov
adc
insl
std
clc
pop
mov
dec
and
dec
jne
push
cmp
or
arpl
bound
sub
imul
inc
add
pop
dec
cwtl
xchg
and
insl
sahf
mov
cmp
mov
repnz
and
pop
mov
cmp
inc
mov
shrb
xchg
pop
inc
roll
iret
das
cmpsl
cli
and
cmp
cmpsb
cmp
fstpt
pop
jecxz
ficoms
pop
pop
adc
or
ss
aad
add
aam
pop
jle
fistps
add
cmpsb
or
pop
add
sub
scas
jp
mov
scas
jmp
xchg
xor
sub
sub
loop
xor
dec
shrb
add
jne
divl
jecxz
inc
lcall
sbb
push
add
enter
pop
sbb
lods
sub
pushf
or
fstl
dec
cld
jo
arpl
es
pop
add
sub
or
mov
dec
iret
adc
test
push
pshufw
mov
xor
jecxz
int
mov
cmp
add
or
fcom
sbb
js
sarb
test
adc
dec
sar
sahf
mov
xor
sub
mov
adc
test
fdivrs
pop
xchg
add
mov
jmp
sub
arpl
jle
jbe
inc
stos
pusha
xor
sub
loope
cmp
jge
loop
call
mov
push
adc
aas
cmpsb
pop
or
cmp
mov
pop
adc
or
sbb
addb
or
mov
loop
fcompl
xchg
lds
inc
or
jmp
in
cmc
adc
or
sub
stos
adc
mov
push
fnsave
sbb
pop
movsl
stos
and
insl
add
add
or
mov
mov
adcl
mov
adc
push
testl
ljmp
rolb
scas
or
flds
sbb
pop
cmp
cmp
push
and
jle
lcall
jp
cltd
mov
aaa
je
jmp
mov
je
loope
xor
adc
mov
loope
inc
adc
sbb
lahf
out
dec
push
cmpsl
push
inc
xchg
mov
hlt
push
mov
iret
pop
daa
xchg
addl
push
cli
pop
and
sbb
add
cmpsl
dec
cmp
je
mov
sbb
popf
int3
das
jns
cli
fimull
iret
adc
push
gs
sub
loop
iret
pop
add
sbb
popf
sub
sarl
sar
popf
fisttpll
lods
xor
push
xor
push
pop
daa
sbb
in
push
xor
out
es
mov
cld
shl
adc
mov
add
sti
or
inc
or
cmp
jne
psubsb
popl
adc
rorb
pop
cmp
lcall
arpl
data16
ss
jno
sets
dec
mov
pop
inc
ret
pusha
in
lahf
testb
test
testb
dec
xchg
imulb
int
lahf
adc
jmp
inc
lods
andb
lret
popa
adc
dec
jl,pt
mov
leave
adc
test
sub
test
iret
loopne
and
and
roll
aad
dec
push
mov
dec
movsl
aad
or
jo
adc
sarb
out
inc
jo
cmp
hlt
cmovo
call
leave
cmp
sbb
loop
ret
dec
push
inc
repz
add
addr16
and
add
push
out
stc
inc
out
mov
and
mov
pop
add
sbb
or
scas
rolb
fstpt
push
scas
fcomip
xor
lds
iret
movsl
cld
push
lcall
xor
push
icebp
mov
pop
test
push
int3
add
inc
std
das
imul
ja
jmp
addb
adc
push
add
outsl
notb
hlt
mov
pushf
mov
mov
dec
or
andl
jo
shlb
stos
cmp
mov
push
ja
inc
adc
adc
iret
sbb
movsb
adc
stos
xor
and
lea
daa
mov
and
push
xchg
fidivrl
add
pop
test
pop
nop
jo
or
mov
xlat
cmp
push
pop
sar
push
adc
xor
inc
sbb
testb
cmpsb
fstps
dec
fmuls
cmp
cmp
and
push
and
test
int
sub
shrb
bswap
dec
rcll
das
jo
data16
test
inc
or
add
adc
cli
dec
pop
lret
data16
pop
addb
add
cmpsl
pop
xchg
stos
mov
inc
add
cmp
ss
mov
xchg
mov
test
addr16
iret
into
jns
lahf
push
mov
adc
xchg
adcl
lds
lods
push
and
sbb
mov
ret
dec
daa
push
fs
add
xor
ja
or
jns
mov
add
ja
cli
sahf
sbb
jno
jo
lock
mov
or
int3
pop
xchg
pusha
pop
adc
insb
jne
movsb
jo
inc
cwtl
add
xor
cmp
jo
and
daa
add
sar
sbb
xchg
pop
clc
adc
sbb
pusha
mov
notl
mov
test
cmc
outsb
push
mov
sti
imul
and
repz
mov
xor
lods
cli
andb
mulb
pop
dec
cmp
cmpsl
jl
pusha
gs
mov
fsubrs
ljmp
test
adc
add
jle
jge
lret
arpl
addr16
and
push
pushf
xchg
xor
fstps
adc
scas
inc
and
pop
rclb
idivl
and
dec
popa
orb
cmp
add
or
loope
pushf
rorl
inc
mov
sbb
pop
mov
sbb
lock
pop
inc
sbb
outsl
ret
mov
mov
mov
stos
lret
mov
adc
jo
and
xchg
in
adc
jp
mov
hlt
add
into
and
andb
andl
sbb
jns
add
dec
adc
cmpl
adc
add
sub
daa
dec
and
sbb
fcoms
fadd
aaa
cmp
js
jo
lahf
rorb
sbb
sti
cmp
mov
gs
pop
jo
add
jle
sbb
aaa
and
push
repz
loop
dec
int
ljmp
lahf
and
push
js
std
les
repnz
cmp
incl
repz
in
sbb
repz
fiaddl
xor
pop
mov
ja
icebp
adc
in
jno
sbb
sub
pop
mov
sbb
dec
pop
std
pusha
aad
jmp
jecxz
bound
jecxz
aaa
aaa
jae
and
fucomp
xor
loope
sbb
cld
jl
or
sahf
adc
sbbl
or
repz
push
cmpsb
inc
pop
jno
sbb
in
je
sbb
jns
ja
jae
and
mov
pop
xor
add
aaa
repnz
loopne
andb
mov
scas
aaa
fnstcw
addw
jns
xchg
mov
sbb
shl
jbe
repz
pop
xchg
add
hlt
sub
inc
push
dec
scas
call
dec
and
popf
call
mov
inc
xchg
xchg
jno
mov
lret
cmp
outsl
sbb
test
mov
repnz
or
pop
adc
push
hlt
jnp
ds
imul
and
jns
out
sahf
fcomi
insl
fneni(8087
or
iret
xor
sub
jl
jo
in
stos
and
das
pop
sub
mov
sbbl
int3
cli
add
adc
push
xor
or
add
bound
outsl
pop
push
pop
fldt
cvttps2pi
adc
mov
jnp
jl
mov
icebp
ficomps
sub
add
lds
pop
in
rcl
rolb
pop
fnstenv
xlat
pop
push
cmp
roll
inc
shlb
xlat
mov
add
xor
shll
pop
out
data16
lods
pop
das
cmpsl
cmpb
loopne
xor
dec
lock
add
add
mov
scas
jnp
movsb
pop
iret
into
add
mov
sub
fldt
pop
pop
int3
clc
enter
and
xlat
cmp
das
jbe
movsl
adc
cli
fidivs
or
jbe
mov
adc
adc
ja
stos
inc
mov
shll
mov
dec
js
add
fadd
xor
adc
int
pop
das
dec
pop
or
jle
and
sbb
and
addr16
inc
stos
mov
popf
jns
and
and
icebp
cmp
push
dec
dec
xlat
sub
add
sbb
loopne
outsl
fs
add
popa
dec
loopne
cwtl
push
addr16
jae
insb
lahf
jecxz
das
incl
inc
sbbb
ss
sub
imul
out
mov
in
out
outsb
fcompl
inc
test
inc
or
addl
int3
mov
inc
pop
out
mov
popf
int3
adc
mov
pop
and
loop
mov
cmp
imul
clc
shrl
in
loope
push
mov
bnd
pop
xchg
in
sub
rcrb
shl
sti
sub
roll
and
lock
insb
fcmovnb
and
adc
jle
jo
aaa
jecxz
stos
jge
out
and
out
add
dec
int3
jmp
scas
out
cmp
fstl
aaa
inc
aaa
xchg
lds
pop
test
xor
or
nop
imul
mov
scas
sbb
cmp
imul
cmc
cltd
jmp
rorl
clc
iret
mov
repnz
popa
lods
xor
push
scas
out
cmp
push
ret
and
pushf
int
insl
cmp
sub
mov
pop
mull
or
loopne
jno
dec
cmp
leave
addr16
adc
xor
adc
xor
es
in
scas
pop
xor
mov
sbb
or
lock
addr16
cmpsl
or
sahf
pop
jno
ret
fiaddl
les
call
or
loopne
insl
jnp
lock
xor
xchg
sub
or
or
lret
mov
pop
mov
iret
imul
xor
pop
jb
roll
es
into
aaa
mov
fistps
xchg
sti
sbbl
out
into
or
fistpl
dec
out
jl
ss
addr16
stos
ja
iret
popf
and
mov
bound
lds
xor
je
inc
mov
bound
or
dec
add
mov
in
js
cmp
mov
pop
push
ret
adc
test
sti
shll
xchg
es
cli
pop
adc
adc
dec
mov
or
pop
fadds
lea
xchg
xchg
sub
cmp
dec
xor
bound
adc
add
cmp
pushf
dec
dec
roll
es
jnp
xor
push
dec
in
jne
test
shl
enter
xor
sbb
dec
pop
inc
adcb
rcl
lds
dec
or
dec
or
shr
xor
and
andl
jge
dec
xchg
sahf
push
mov
shll
inc
xchg
lock
cwtl
mov
sbb
shlb
lods
inc
xor
dec
xchg
pop
and
xchg
test
cmpsb
data16
mov
sub
xchg
dec
test
int3
sub
int
loopne
inc
call
mov
xor
dec
test
xor
xor
scas
popa
mov
pop
pop
sub
pop
cmp
push
lcall
cmp
or
addl
add
push
cmp
rcrl
addl
adc
adcb
daa
dec
sub
shlb
lcall
cmpsb
add
inc
ret
test
loopne
xchg
mov
xchg
pushf
and
sbb
aas
dec
movsb
adc
int3
lea
nop
pop
sub
sbb
dec
in
mov
inc
sub
lods
push
es
fwait
lea
fsubs
dec
popl
ret
nop
inc
jnp
mov
cltd
es
xchg
cmp
lods
lret
xchg
lahf
or
inc
and
xchg
sbb
call
xlat
insb
mov
les
cld
ror
mov
lock
add
out
gs
daa
xor
jno
add
mov
roll
lret
sahf
push
loope
fwait
cltd
cmp
and
scas
cmpsl
nop
jmp
test
and
xchg
jo
jle
or
aaa
lds
add
and
lods
add
mov
pop
xor
xor
sbbb
jns
add
imul
lahf
add
xchg
mov
lods
jmp
xchg
das
jb
lods
orb
inc
je
jo
data16
shl
pop
push
sbb
sbb
jmp
outsb
pusha
lcall
inc
or
pop
jae
popf
cmp
mov
inc
sbb
test
pop
dec
sub
and
loopne
nop
fwait
mov
sti
add
xchg
add
out
les
xchg
int3
pop
add
cmp
jle
ret
cld
lods
and
push
in
andb
cmp
imul
lods
mov
xor
jns
lock
neg
insb
cmp
pop
movsl
pop
stos
sub
pop
sub
and
in
adc
cmp
shr
dec
rclb
fnstenv
out
cwtl
and
jmp
adc
cmp
jmp
out
pushf
inc
out
in
jge
mov
jecxz
xchg
out
inc
inc
sub
sub
imul
testl
sub
out
dec
sub
cmp
pop
hlt
jge
popf
lea
repz
cmp
bound
ret
sub
pop
iret
ss
movsb
test
lret
sub
xor
cmp
push
sbb
lret
ja
and
jmp
addr16
rcrl
add
push
les
mov
push
jo
cli
push
push
cmp
push
and
dec
mov
adc
sbb
in
adc
dec
movsb
iretw
add
int
or
test
add
jo
stos
push
fildll
emms
or
addl
push
lods
xor
mov
push
dec
data16
arpl
inc
stos
jp
lahf
hlt
mov
jae
mov
shl
or
jo
and
daa
bound
mov
ljmp
in
sbbb
inc
dec
sub
les
fs
fisubl
pop
dec
pop
jle
cmp
sub
or
inc
scas
mov
sahf
movsl
mov
les
mov
repz
dec
mov
data16
adc
scas
mov
lret
mov
jns
add
adcb
add
sbb
rcrb
dec
bound
loop
fcoml
mov
cmp
sub
jnp
and
inc
pop
push
jmp
iret
inc
in
daa
cwtl
push
sbb
mov
stos
cmp
jle
jmp
aaa
movsb
and
cmp
pop
hlt
es
mov
ja
xor
and
push
fiaddl
xor
sub
pop
fnstcw
lds
bound
pop
cwtl
xchg
test
mov
fwait
xchg
pop
fsubr
dec
and
adc
push
lret
pop
push
inc
mov
and
and
mov
or
mov
sub
jp
sbbb
fcoms
and
sub
xchg
in
dec
ja
mov
jnp
jp
push
add
pop
lock
push
cmc
adc
in
je
and
addr16
dec
addl
and
push
sub
das
in
ret
clc
movsl
pop
mov
adc
push
sarl
mov
and
xchg
sub
cmpsb
es
jnp
xlat
in
jge
adc
and
cmp
mov
sub
aad
les
js
outsb
push
jb
les
mov
sarb
and
mov
push
push
and
push
insb
push
mov
sbb
cmp
icebp
mov
sub
es
pop
mov
sub
jl
jmp
add
jno
sub
mov
loop
mov
andl
pop
jmp
ja
sub
xchg
add
sub
adc
pop
ja
add
arpl
adc
daa
sub
jbe
or
adc
inc
sbb
xchg
or
mov
int3
ds
jno
pop
sbb
loopne
xlat
mov
test
dec
andb
mov
sub
cs
adc
outsb
and
sub
push
or
neg
test
sub
mov
fcmovbe
div
daa
sub
fldl2t
lea
mov
sbb
add
ret
or
negb
or
test
dec
lods
out
test
push
int3
bound
aad
and
rclb
xlat
and
leave
pop
or
mov
push
push
cli
pop
mov
push
daa
and
inc
arpl
iret
shll
push
xchg
lret
push
test
push
push
sahf
push
push
mov
loopne
push
aam
mov
arpl
mov
es
fcomps
mov
std
xchg
mov
ror
arpl
mov
xor
leave
adc
ss
push
adcl
jnp
or
ud2
out
fistpll
stos
xlat
mov
push
ret
push
sub
idivb
loopne
mov
push
popa
mov
xchg
sbb
cmp
jno
lahf
bound
sbbl
push
pop
mov
mov
out
or
inc
js
jge
outsl
je
jnp
fcmovb
push
add
mov
mov
in
in
repnz
push
sub
add
push
sti
fildl
outsb
add
mov
add
xchg
add
add
sub
and
mov
sbb
sar
jae
std
push
jecxz
jo
test
pop
lods
outsb
rcrb
cmp
in
ljmp
xor
adc
sbb
sbb
daa
xchg
jbe
jo
sbb
mov
xchg
push
inc
ret
daa
jle
js
sub
or
addb
add
inc
popa
addb
je
or
scas
shll
dec
iret
lcall
outsb
lds
popf
add
adc
mov
fsubs
into
popf
out
sub
and
pop
rclb
inc
push
and
add
or
or
stos
sbb
xor
loope
and
lds
push
inc
test
sub
pop
jp
in
mov
jbe
push
dec
loop
in
and
fdivrs
pop
ret
sbb
and
or
mov
or
jl
cmp
xlat
shll
jl
xchg
pop
popa
adc
cwtl
inc
in
int3
jns
mov
jl
int3
push
aam
mov
dec
imul
enter
jbe
dec
xchg
mov
das
aaa
shll
popf
push
xchg
pop
mov
mov
test
mov
pop
lods
ficomps
adc
jne
popf
adc
test
push
pop
sub
add
test
mov
mov
lock
out
jecxz
stos
push
sbb
and
lds
pop
sub
sbb
add
orb
mov
push
dec
xor
les
fisubl
lods
aad
fcoms
fdivrl
bound
xor
mov
mov
mov
movsl
or
sub
nop
xchg
xlat
mov
xor
fbld
fwait
int
xor
test
xchg
push
adc
lds
fnstsw
dec
in
dec
mov
jnp
xchg
xchg
jecxz
dec
js
push
cmp
les
popl
and
mov
mov
xchg
push
aas
mov
mov
dec
xlat
mov
and
test
mov
and
ret
push
sarl
or
and
iret
lret
push
rorl
dec
adc
sub
push
scas
idivl
push
test
mov
jb
ret
jecxz
dec
mov
ja
dec
mov
push
add
fistps
fcmovne
jecxz
lods
jmp
sub
lock
js
loope
jle
dec
je
jg
outsl
fildll
sub
inc
jno
mov
adc
and
or
sbb
inc
lcall
mov
aad
test
inc
lock
shll
aam
xchg
mov
sahf
inc
iret
ret
or
or
add
cmc
mov
adc
into
stos
add
and
addr16
xor
cmp
out
das
xor
pushfw
stos
pop
pop
sub
sti
cmp
subb
pop
push
mov
into
jo
jae
dec
jp
lds
das
push
mov
lods
mov
in
dec
adc
add
xchg
xor
ljmp
lods
adc
sub
dec
les
push
stos
mov
push
scas
data16
mov
inc
cmp
xchg
add
mov
push
arpl
mov
gs
cwtl
xor
pop
orl
sarb
jae
out
push
mov
scas
lock
rcl
mov
jne
pusha
jp
dec
adcb
test
and
push
add
mov
stos
add
jmp
in
fmul
or
roll
mov
pop
add
into
sbb
daa
roll
stos
add
pop
cwtl
push
jae
nop
loopne
mov
pop
data16
ret
jge
mov
mov
loopne
or
call
and
sbb
ljmp
test
adc
push
pop
push
and
pop
xor
adc
negl
or
pop
jecxz
movsb
jle
nop
xorl
lock
add
mov
test
mov
scas
mov
cli
shll
sbb
inc
cs
pop
adc
push
xor
or
fwait
icebp
insb
add
mov
cmc
pop
pop
mov
mov
add
xchg
push
or
cmc
mov
pop
mov
mov
dec
mov
jnp
mov
xorb
push
sub
cmc
into
test
xchg
ja
es
fildl
mov
xchg
or
fnstcw
cmpsl
in
gs
xor
jp
add
xchg
cmp
jo
cltd
and
pusha
inc
test
cmp
nop
mov
sub
ret
pop
add
mov
xchg
mov
inc
call
aam
ljmp
jne
shlb
mov
rcr
aam
xor
sbb
test
sbb
dec
mov
mov
sub
cmp
es
push
push
push
xchg
xlat
ficomps
shll
jbe
ficompl
pop
xchg
arpl
or
pusha
xchg
out
fdiv
pop
sbb
add
sub
adc
lds
cmpsb
and
sbbl
inc
nop
pop
inc
loopne
mov
aad
mov
repnz
push
cltd
xor
insb
and
pop
cwtl
jae
pusha
cmp
and
xor
mov
jo
movb
andl
push
arpl
xor
insb
stos
push
dec
and
push
scas
dec
repz
es
dec
sub
fistl
or
sbb
mov
xchg
add
dec
aad
cltd
xor
fimuls
pop
test
mov
imull
ret
and
mov
mov
roll
movsb
test
add
lea
push
or
pop
ret
xchg
mov
test
and
add
sbb
xor
lret
adc
dec
addr16
arpl
dec
push
pop
sbb
es
jle
add
sbb
mov
jle
dec
js
mov
mov
subb
pusha
inc
mov
xchg
or
pop
mov
cmp
inc
mov
sahf
xchg
add
sub
pop
pop
ss
lea
push
push
and
sub
scas
sub
lcall
add
mov
inc
jecxz,pt
xor
jns
or
adc
and
repnz
in
mov
stos
cmc
dec
pusha
mov
inc
lods
imul
in
into
insl
push
mov
loopne
imul
add
xchg
push
push
mov
lods
xchg
int3
adc
sub
jo
daa
js
add
aad
nop
pop
sub
and
inc
adc
iret
stos
inc
jae
scas
dec
inc
fs
pop
idivl
pop
outsl
sbb
jg
xor
cmp
mov
int3
jmp
divb
sbb
or
mov
test
mov
xchg
push
fcomps
inc
popa
cmpb
outsl
rolb
test
movsb
pop
xchg
sub
push
mov
pop
mov
test
inc
in
adcb
ds
daa
mov
in
xor
xor
push
gs
lods
add
cmp
and
fwait
pop
sbb
lods
in
and
xor
xchg
loope
sahf
insl
jae
adc
pop
inc
cmpsl
mov
mov
push
sub
adc
out
jl
popf
inc
push
inc
pop
divb
movsb
pop
data16
xchg
adc
ret
sub
jnp
adc
mov
dec
bound
mov
addl
mov
jmp
rolb
lcall
arpl
sti
add
out
pusha
adc
int
je
mov
and
push
rcrl
xchg
dec
jle
int
aam
mov
jp
jo
sbb
xchg
dec
sub
push
rolb
add
cmp
sbb
repnz
mov
mov
add
mov
jecxz
dec
fwait
orl
xchg
xchg
dec
enter
or
rorb
sub
sub
jmp
inc
icebp
pop
xchg
daa
in
cmpsb
data16
push
pop
call
testb
fnsave
sbb
jle
int
and
rol
push
xchg
sub
data16
jecxz
es
sarl
loop
je
inc
pop
sahf
xlat
mov
mov
mov
and
jae
cmp
push
das
or
push
jb
inc
cmp
lahf
dec
jle
push
mov
mov
sbb
sbb
ficompl
mov
mov
cwtl
into
or
sbb
lcall
cli
cs
inc
push
push
xchg
ds
into
ficoms
pop
stos
test
dec
hlt
bound
push
cmc
and
in
scas
call
and
pop
xor
addb
adc
sbb
adc
mov
loopne
push
xor
inc
stos
ljmp
pop
jl
and
dec
rcll
cmp
dec
xor
mov
dec
or
pop
dec
daa
inc
jg
loop
and
add
imul
xchg
xor
movsb
inc
add
add
xchg
ret
aaa
push
jbe
icebp
mov
les
iret
je
negl
int
push
mov
aas
inc
or
pushf
mov
dec
ja
jne
stos
imul
push
add
pop
call
or
adc
mov
rol
jp
lea
add
dec
inc
push
xor
add
add
dec
add
mov
gs
bound
sbb
lcall
insl
inc
dec
lahf
sub
ret
cwtl
hlt
jmp
mov
xchg
and
push
xor
pop
add
or
shll
aam
in
cs
jle
xchg
add
mov
cmp
mov
or
lahf
mov
sbb
dec
lock
lret
loope
in
jo
aad
cmp
mov
xor
xchg
pusha
or
lock
ja
jne
out
leave
xchg
or
movsl
cld
adc
test
push
adc
fistps
scas
dec
pusha
pop
dec
subb
je
mov
and
xchg
fcompl
add
popa
add
mov
addb
lods
ficompl
inc
stos
xchg
iret
xor
mov
or
out
jae
push
jb
cmpsl
outsl
fdiv
sbb
andl
mov
fists
ss
cs
mov
xchg
push
loope
orb
xorb
outsl
inc
add
imul
cwtl
clc
jmp
jp
or
xorl
adc
adc
mov
hlt
cmp
insb
push
imul
pop
adc
js
test
stos
mov
cmp
into
fldt
dec
mov
shl
ret
pusha
nop
sbb
lods
rol
fisttpl
cltd
addr16
dec
fistl
cwtl
mov
js,pt
and
xchg
or
ret
cmpsb
pop
scas
or
push
jo
test
scas
sbb
sub
mov
call
cwtl
push
movsb
xchg
insl
std
cmp
cmc
push
out
les
push
and
push
jne
mov
sbbl
out
js
inc
or
push
jg
hlt
mov
mov
mov
lcall
lcall
imul
and
cld
dec
push
fstl
clc
mov
xor
xor
xchg
pop
sub
lock
push
or
mov
adc
push
dec
pop
push
wbinvd
inc
lcall
andb
cmpsl
xchg
sahf
pop
push
add
stos
sub
lods
mov
push
adc
rcr
in
add
and
nop
cmp
icebp
adc
xlat
or
push
mov
xor
les
stos
push
mov
pop
stos
js
mov
xor
fcomps
popf
pusha
dec
mov
icebp
test
js
or
shl
xchg
mov
jp
push
lods
dec
sub
ficoml
pop
jg
movsb
call
es
push
jne
test
movsb
sub
mov
inc
inc
andb
fbld
cmc
pop
or
inc
mov
inc
or
inc
and
or
inc
jmp
pop
pushf
mov
inc
adc
pusha
je
and
rolb
mov
and
fstl
fldcw
xchg
aam
es
mov
je
andb
jl
stos
add
pop
dec
push
mov
sub
bound
bound
cld
inc
xchg
dec
xchg
sub
movsb
mov
xorl
push
mov
mov
insb
adc
xchg
inc
or
ja
mov
jle
xchg
mov
imul
sbb
xchg
or
dec
jge
push
inc
add
mov
nop
lcall
inc
andl
mov
subl
jmp
cmp
push
or
inc
mov
int3
add
xchg
jmp
jg
jge
lock
xor
adc
and
loop
stos
pop
push
push
adc
js
inc
mov
test
cmp
ret
scas
xchg
fnsave
mov
mov
movsl
inc
xor
jo
sbb
cmp
mov
adc
aam
pop
sbb
jns
inc
dec
xchg
push
and
sbb
cmp
and
mov
push
fisubs
cmpsb
sti
mov
jle
and
sti
loop
addl
shll
push
jge
cmpsl
push
push
adc
jp
test
mov
fwait
sub
add
add
push
jl
mov
fmuls
mov
fistps
inc
sub
jnp
pushf
inc
xchg
xor
mov
movl
dec
imulb
loope
hlt
test
sub
push
push
push
push
xor
jne
in
mov
push
aam
xor
xor
push
push
mov
pop
adc
sub
test
adc
add
cmpsl
push
add
inc
xor
insl
inc
daa
add
adcl
fiaddl
sti
outsl
xor
push
mov
sub
shrl
xchg
mov
add
xchg
jne
cmpl
mov
add
add
repnz
add
mov
dec
push
add
xor
int3
jp
dec
push
xor
dec
mov
testl
xorl
cmpb
or
ret
jns
cmpsl
dec
adc
cltd
jns
jo
and
push
and
and
adc
or
and
pop
sbb
fwait
push
loopne
xchg
and
sub
and
push
add
pushf
mov
lea
inc
and
add
and
in
jecxz
shll
int
cmc
pop
lret
bound
sbb
jbe
mov
dec
jb
xchg
mov
push
es
dec
mov
imul
mov
fsts
inc
imul
cmp
ja
or
or
xchg
jae
call
insb
mov
dec
mov
inc
insb
sub
xor
fcoml
adc
adc
loope
sub
add
mov
dec
push
adc
add
adc
xchg
add
fdivrs
loopne
mov
push
aad
mov
cwtl
push
sbb
pop
cmp
es
dec
and
aad
add
sub
mov
test
add
cmovno
adc
mov
or
and
push
fmull
cli
jo
or
dec
mov
fwait
dec
or
out
sahf
pop
inc
loope
adc
js
dec
in
or
adc
outsl
pop
movsb
and
rorb
add
and
clc
pop
mov
dec
mov
add
adc
clc
loop
or
push
sti
jno
adc
mov
mov
inc
in
loope
mov
add
add
add
add
repz
mov
into
in
pop
orb
add
les
outsl
and
pop
add
inc
adc
loopne
lahf
add
inc
scas
add
jg
push
addb
adc
or
or
cmp
or
mov
cltd
rol
fwait
lock
or
out
xor
imul
sahf
imul
xchg
jge
mov
fisttps
shll
adc
pop
sbb
stos
loopne
mov
add
inc
pop
je
push
test
adc
pop
in
fsubrs
and
cmpsb
cltd
mov
cli
sahf
xchg
jno
xor
inc
jno
testl
mov
xchg
ret
orl
adc
xor
lods
xor
and
inc
lods
mov
ds
cmp
adc
inc
arpl
add
lcall
aaa
sub
insb
push
adc
inc
xchg
xorb
popf
sbb
jmp
jo
test
mov
push
inc
fwait
push
and
push
dec
clc
xor
bswap
mov
popa
lret
cmp
mov
cld
cmpsl
add
inc
pop
push
pop
jmp
rcrb
add
out
sub
leave
int
int
add
sbb
rol
xor
push
jno
test
outsb
ret
push
shll
dec
add
cmp
fildll
mov
test
jecxz
imul
outsl
push
pop
sarl
out
sahf
xor
inc
loopne
loop
xor
pushf
decl
test
daa
jg
scas
pop
add
and
mov
popf
addb
stos
enter
je
dec
ljmp
cltd
push
les
mov
mov
cs
jp
adc
fildl
iret
dec
inc
and
xchg
jp
adc
mov
loopne
sub
test
hlt
sub
add
scas
cmp
pop
add
sbb
push
push
inc
mov
push
test
adc
inc
jnp
push
jmp
add
ficompl
jno
dec
cmp
adc
jno
rcrb
jle
inc
pop
rsm
pusha
xor
lods
xchg
shlb
rcll
mov
inc
and
ret
jg
or
addb
jno
mov
int3
mov
add
push
loope
mov
pop
lret
push
or
pop
inc
dec
pop
push
add
stos
mov
adc
dec
sub
fs
sub
ljmp
pop
cs
lds
sbb
xchg
lahf
ret
pop
lea
pop
ljmp
inc
dec
pop
orb
insb
add
ret
add
pop
fsubrs
cmp
in
sbb
sub
adc
int3
or
cmp
cmp
mov
mov
enter
insb
shrb
and
inc
add
movl
pop
xor
adc
popa
and
ret
fbstp
vcvtsi2ssl
add
add
or
dec
fcoms
stos
daa
lods
inc
incl
pushf
mov
fsubs
xor
loopne
cli
and
dec
enter
mov
xor
out
mov
add
add
enter
push
xchg
dec
add
js
push
mov
push
mov
inc
ljmp
pop
jno
ror
fs
cmp
and
pop
roll
sbb
mov
orb
pop
cmpl
addl
inc
call
loop
add
push
aad
hlt
jge
divl
adc
push
lods
add
enter
mov
ret
bound
or
out
fildll
add
adc
iret
sub
push
outsl
add
leave
jg
movsb
sbb
out
pusha
hlt
stos
jmp
cmp
mov
bound
xor
push
lcall
jno
push
mov
int3
inc
mov
mov
loope
adc
mov
cmc
enter
jno
pop
dec
mov
inc
insl
mov
shlb
mov
int
mov
call
jmp
mov
pop
mov
xor
or
loop
add
pop
stos
js
jno
dec
or
and
ret
mov
cmc
inc
popf
sti
adc
test
pcmpgtd
loope
push
add
aad
mov
pop
or
mov
add
popf
add
sahf
jo
xor
fwait
shl
dec
daa
idivl
pushf
adcl
bound
xchg
test
xor
push
aam
adc
cwtl
push
pushf
loop
icebp
lock
adc
mov
push
cwtl
push
cld
xchg
xchg
mov
andb
lds
pop
adc
ljmp
mov
and
imul
flds
shrl
sub
mov
mov
add
adc
jle
fidivs
bound
fs
sbb
or
push
pushf
test
pusha
and
pushf
lret
jae
int3
adc
and
mov
pop
add
test
imul
cltd
inc
ja
es
sub
test
sub
mov
push
stc
lds
mov
and
pushf
mov
and
data16
xchg
sbb
jmp
cs
xor
xchg
dec
sub
mov
shll
rcrl
in
sub
jb
pusha
push
dec
sub
test
loopne
and
shlb
push
popf
aam
inc
outsb
fs
addb
cwtl
inc
movhps
shll
push
push
pop
adc
pop
or
cmp
data16
rcl
xor
icebp
sbb
and
sub
fldenv
fbld
xchg
add
sbb
int3
rcr
inc
pop
xor
push
aam
ret
or
jae
lds
jns
sub
scas
inc
mov
ds
sub
or
cmp
mov
pop
out
fs
shlb
jne
stos
pusha
dec
push
cmpsl
andl
test
out
mulb
cmp
aam
ret
jo
lods
xchg
inc
movsb
or
mov
push
mov
enter
xor
sti
mov
and
lcall
sbb
inc
hlt
lods
ret
mov
pop
xchg
cmpsl
mov
and
in
add
mov
xor
loopne
daa
lock
mov
or
pop
test
adc
cmp
es
push
insb
int
or
out
and
or
mov
mov
cmp
fistps
push
sbb
or
xchg
xchg
iret
inc
add
add
add
test
notb
pop
addr16
iret
loop
movsl
or
femms
cmp
shll
bnd
sub
idivl
test
daa
xor
jno
xor
lods
call
or
add
push
xchg
leave
rclb
mov
mov
sti
aad
or
and
inc
fistl
insb
leave
orb
mov
mov
pop
jo
mov
or
mov
mov
popa
lahf
sub
daa
shl
push
mov
add
in
xchg
inc
pop
and
stos
inc
pop
out
fwait
mov
and
dec
aaa
and
rcl
xor
add
mov
sti
jcxz
inc
mov
sub
pop
mov
fdivl
daa
jle
loop
cmp
jns
bound
insb
lods
aaa
or
shll
cwtl
push
cwtl
cmp
bound
stos
stos
mov
adc
inc
xor
jg
sti
or
sbb
in
iret
gs
mov
and
add
xor
ja
loop
sbb
fstps
adc
js
cmc
js
and
or
enter
jge
ret
or
push
aaa
jae
mov
or
adc
or
or
dec
loop
or
push
js
rol
ret
inc
psrad
insl
or
mov
std
es
cli
imul
in
pop
lods
sahf
lock
cmp
lods
decl
jp
mov
pop
sbb
cmp
lock
in
loope
in
in
xchg
je
imul
xorb
mov
call
push
fists
popf
fcompl
ds
sub
int3
sbb
sti
dec
ror
sub
rcrb
cmp
cmpsb
popl
shrl
inc
sub
in
aam
jo
fistpll
inc
rorl
fstpt
negb
enter
dec
roll
dec
andl
insb
movsl
and
adc
xchg
pusha
inc
mov
mov
ja
ror
push
sub
insb
mov
push
mov
xor
xchg
push
mov
out
divl
divb
mov
push
push
mov
mov
push
pop
and
outsb
lds
sub
scas
scas
jmp
shlb
xchg
xor
and
out
pop
cmpsl
insl
mov
iret
cmp
sbb
pop
mov
jo
out
and
mov
cmpl
sub
loope
mov
push
sbb
sahf
push
add
jae
sub
pusha
imul
in
and
push
out
or
adc
add
xor
lret
lock
add
push
cmc
ljmp
mov
ret
adc
add
nop
test
xorb
push
cwtl
pusha
push
js
push
inc
inc
xlat
inc
push
sbb
add
stos
adc
movsb
jle
jle
fs
push
jno
adc
and
loopne
adc
shrl
pop
jno
adc
dec
pop
jb
mov
add
ret
pushf
sbbb
xchg
lcall
add
jp
sub
add
mov
lds
mov
push
sub
cmp
sub
mov
jae
andb
in
incb
cmc
mov
mov
dec
cli
pop
adc
lock
mov
stos
cmp
es
call
push
sbb
inc
rorl
popf
int
jae
mov
arpl
xlat
add
adc
mov
add
andb
adc
call
push
out
add
xchg
movsb
mov
shrb
xor
les
daa
into
das
push
push
pop
mov
aaa
shl
notb
mov
lods
jne
adc
cmp
insb
cmp
cs
mov
ficoms
test
andb
jno
test
mov
stos
or
in
loopne
rcrl
xchg
cmp
je
out
mov
dec
out
aaa
push
into
pop
mov
sub
aaa
pop
cmp
push
push
push
pop
mov
stos
push
cmp
outsl
ljmp
pusha
or
stos
aaa
xchg
jl
or
xor
sbb
push
inc
adcb
andl
inc
mov
adcb
mov
push
mov
pop
test
cmpsb
movsb
jns
mov
mov
adc
and
sub
stos
sbb
fmuls
pop
sti
inc
stos
pop
test
mov
push
push
pop
sub
out
rorl
mov
call
pusha
adc
xor
sub
push
xchg
jge
sbb
stos
ficoms
mov
sub
mov
mov
sub
test
jmp
loope
lcall
ror
mov
adc
cmp
repz
dec
add
dec
movsb
or
addb
dec
loop
repnz
repz
mov
pop
inc
push
or
sbb
pusha
mov
mov
adc
sub
enter
xor
js
lret
lds
dec
scas
js
lods
push
dec
mov
lds
dec
push
mov
pop
les
stos
mov
xor
in
out
scas
and
andl
and
pop
jno
into
mov
dec
xor
adc
inc
sub
mov
and
loop
adc
inc
rol
mov
smsw
add
arpl
dec
psrld
and
push
test
iret
and
and
pop
dec
je
test
fdivr
iret
xlat
imul
dec
mov
add
cmp
shlb
sbb
and
int3
sub
pop
inc
inc
mov
out
and
and
sbb
adc
push
sbb
fimull
or
int3
and
loopne
inc
sub
xchg
or
les
aas
and
and
lods
sbb
sub
mov
mov
jne
or
mov
mov
add
jb
lea
sar
push
cmp
jb
or
mov
and
xlat
sbb
cs
sbbb
pop
add
xchg
add
aas
and
mov
sub
cmc
jl
cmp
adc
and
lcall
dec
dec
sbb
jne
jo
sbb
jle
sbb
imul
leave
add
jo
xor
mov
inc
sub
mov
sbb
ds
inc
add
sub
fsubrs
or
push
push
daa
dec
pop
sarb
cwtl
insb
aam
mov
call
pop
mov
xor
sbb
xchg
stos
push
enter
ret
mov
sbb
mov
push
sbb
fnstsw
xchg
adc
pop
or
mov
xchg
fs
imul
test
and
pop
pop
sub
in
xor
popa
xlat
xor
aam
sub
es
and
cmp
adc
addl
and
sti
outsl
pop
dec
fwait
or
and
jne
adcl
push
orb
out
shrb
ljmp
loop
sub
fsubp
adc
jb
ret
cmp
add
inc
and
push
xchg
adc
popf
inc
scas
rorb
push
ljmp
aaa
push
jb
aad
rclb
xchg
and
or
push
popa
test
dec
mov
mov
bound
jo
adc
jbe
ret
and
inc
mov
push
shld
movsb
mov
add
mov
push
mov
cmp
push
mov
mov
mov
jbe
sub
fwait
jb
mov
imul
mul
mov
ficompl
fisttpl
adc
cwtl
xor
lds
adc
adc
hlt
sbb
inc
fmuls
inc
add
mov
mov
fwait
data16
xor
push
test
aaa
sahf
gs
mov
push
in
pop
js
mov
es
push
nop
mov
mov
push
pop
mov
push
loop
ja
adc
es
jo
jbe
lret
mov
stc
and
xchg
fdivp
add
je
addr16
jl
adc
hlt
or
call
xor
aas
imul
lret
stc
jmp
es
adc
mov
repz
cmp
cmp
icebp
sbb
int
sbb
repz
mov
es
mov
loop
mov
jecxz
sub
mov
xchg
mov
dec
push
add
lahf
mov
and
lahf
sub
lcall
lds
xor
dec
pop
adc
adc
sti
in
xor
ljmp
das
mov
addr16
ss
scas
cwtl
es
dec
sbb
jmp
jmp
mov
and
es
lret
push
test
ss
add
out
insb
jp,pn
sub
inc
shr
add
cmp
mov
clc
call
adc
jo
push
cmp
and
push
out
sub
push
outsb
jbe
test
sub
fdivs
pop
in
dec
cmpsb
inc
gs
xor
jl
sbb
adc
mov
xchg
jecxz
das
cmp
sub
jnp
das
fistl
outsb
cs
xlat
mov
mov
test
mov
push
dec
aam
lret
mov
add
and
in
mov
inc
jbe
xchg
sub
jnp
or
mov
inc
mov
adc
mov
aad
mov
push
fistl
sub
push
cltd
inc
and
mov
pushf
daa
pop
or
xor
stos
push
out
jbe
rclb
or
jbe
ljmp
addl
jp
sub
fsubl
shlb
xchg
in
sbbl
pushf
das
and
and
test
mov
add
icebp
mov
fiaddl
movsb
pop
sub
mov
mov
mov
jg
cmp
push
or
push
adc
push
push
loope
mov
in
push
and
addr16
outsb
mov
xor
jecxz
jle
aaa
inc
scas
fmuls
push
call
add
mov
stos
loop
ss
mov
addr16
lock
jo
cmp
jo
push
sti
jg
or
push
lds
sbb
or
scas
add
jbe
xor
mov
out
rcl
push
fwait
outsl
xchg
push
out
cmp
pop
mov
push
ja
fnstsw
push
jle
and
sbbl
and
imul
int3
lahf
fs
gs
mov
mov
out
sbb
andl
adc
insl
shld
add
push
mov
in
or
jbe
push
push
sub
mov
jne
jno
pop
cmp
push
pop
adc
jne
aas
lods
test
test
cltd
aaa
lods
in
jae
fisubrl
outsb
sbb
push
mov
shrl
push
movsb
rcr
and
mov
or
negl
inc
fistpl
sbb
ljmp
mov
loop
mov
data16
gs
pop
cmp
sarb
les
iret
scas
push
push
lods
inc
ljmp
lods
loope
subl
xchg
cmp
sbb
inc
test
sbb
mov
lock
adc
stos
in
mov
lods
adc
xlat
mov
cmpl
iret
push
aaa
adc
testb
xchg
sub
add
mov
mov
lret
testl
mov
stos
data16
xchg
add
adc
cmp
lret
idivl
loopne
int
pop
inc
mov
push
imul
scas
or
sbb
cmp
jb
mov
mov
push
pop
sub
or
xchg
mov
lods
insb
pop
push
add
and
fsubl
mov
lods
cmp
jo
jb
xor
xchg
push
mov
popf
dec
dec
add
add
sub
ja
push
mov
into
mov
scas
add
and
sub
movsb
add
fidivl
jp
push
sti
lds
push
sbb
scas
fldenv
daa
sub
and
or
add
inc
notb
insl
out
jmp
int3
shl
push
pop
fidivl
dec
xor
rolb
test
jge
dec
jbe
cmpsl
xor
pop
cmp
push
fsts
and
mov
ret
fsubrl
sbb
lock
pop
mov
dec
xchg
cmp
sbb
cmc
mov
fs
pop
test
dec
aam
xor
pop
xlat
jle
stos
adc
das
movsb
cmp
push
cmp
push
cmp
fs
xor
test
mov
xor
dec
xchg
push
pop
sbb
xchg
das
or
sbb
insb
lods
jae
dec
ds
add
or
sbb
dec
movsb
lods
push
mov
ss
je
or
cs
ror
mov
push
movb
xor
mov
or
movsb
je,pt
jae
rolb
imul
int
scas
sti
or
pop
lods
mov
int
inc
push
imul
int3
sbb
mov
pop
add
mov
mov
pop
pop
pop
mov
jl
int3
into
subb
push
into
dec
jbe
or
add
add
lock
sub
ljmp
inc
xor
mov
sub
jb
cmp
out
push
call
rolb
cmp
xchg
inc
dec
sbb
jle
lea
ret
sti
test
xchg
fmuls
stos
push
jne
iret
push
js
sub
cmp
addr16
mov
and
jb
push
mov
inc
mov
xor
rcr
sbb
jns
loopne
add
mov
int3
cmp
push
pop
mov
jp
jp
pusha
cmpsb
scas
adc
mov
add
mov
jl
cmpsl
jmp
xor
pusha
xchg
push
push
push
cs
or
add
int3
mov
or
mov
leave
scas
stc
inc
std
pop
movsb
scas
jmp
scas
adc
push
inc
daa
push
push
jns
inc
push
jp
mov
out
push
loope
jno
fdivs
into
insl
insb
or
add
and
jge
and
outsl
pusha
sub
sbb
pusha
je
scas
and
psubusb
leave
ss
sbb
xor
jae
push
add
cwtl
pop
add
xchg
jle
jl
jo
xor
ret
pop
push
jnp
mov
xor
push
shll
and
or
pop
mov
int
pop
aaa
and
mov
or
and
lret
inc
add
sbb
insl
jno
popf
jecxz
enter
jge
ja
push
out
mov
jbe
and
cmpsl
inc
sbb
jb
cltd
jne
pop
sarl
popf
pop
pop
pop
leave
imul
mov
xor
scas
mov
inc
adc
and
out
mov
dec
loopne
and
dec
pop
testb
add
xchg
fadd
pop
xchg
jecxz
stc
arpl
cmp
cmp
xor
adc
inc
outsl
sub
dec
les
imul
dec
jo
fld
shll
jmp
fstpt
sub
sbb
inc
imul
sub
mov
and
outsl
outsb
fstpt
ret
cmpsb
push
jmp
inc
xor
jns
lcall
shlb
jnp
jnp
scas
push
push
stc
sbb
jae
lock
jno
push
arpl
push
and
jbe
bound
cwtl
adc
pushf
loope
cltd
mov
xchg
sti
loopne
push
dec
scas
insl
pop
jae
imul
and
and
mov
push
xchg
pushf
push
pop
imul
jb
lods
xor
insb
cmp
divl
callw
sbb
xchg
mov
and
mul
ret
lods
adc
fisttpl
ljmp
adc
inc
shrb
addr16
push
arpl
lods
imul
xchg
icebp
xor
int3
ret
call
aaa
aad
xlat
mov
psrad
int
imul
xor
sub
out
call
icebp
aaa
dec
mov
jnp
insl
aaa
dec
mov
cmp
sbb
push
sbb
jnp
jle
lods
push
int3
out
shlb
push
sub
out
sub
mov
pop
inc
cs
popf
or
inc
insl
pop
stos
mov
lods
add
or
add
inc
push
icebp
psllq
out
shrb
add
add
xor
popf
stc
je
lods
inc
jg
mov
icebp
rcll
and
cmpb
or
scas
and
inc
dec
adc
call
shll
sbb
mov
in
dec
sarb
xorb
outsl
sub
into
xchg
adc
xor
push
add
pop
das
aas
mov
sti
push
divb
add
sbb
xor
sbb
sbb
or
mov
dec
adc
add
cmp
daa
ret
pop
cmpsl
push
lock
ret
je
mov
xchg
test
add
inc
push
movsb
enter
adcb
adc
mov
das
and
dec
inc
push
andb
jnp
xor
push
in
fcoms
movsl
jmp
inc
xor
iret
adcl
pop
sbb
cmp
iret
inc
mov
and
sbb
frstor
push
es
add
fdivl
cmp
push
pop
add
jns
adc
sub
push
lea
stos
test
xor
fadds
out
lods
mov
and
cmpb
inc
mov
int3
sbb
cmc
jno
mov
jnp
sub
add
imul
adc
inc
add
stc
sbb
jns
pop
nop
mov
repz
fldt
pop
lret
fs
jno
addb
inc
sti
test
add
jl
add
setl
hlt
inc
cwtl
test
inc
add
insl
outsb
dec
out
mov
sbb
cmp
adc
arpl
outsb
in
mov
adc
jp
or
and
add
xchg
es
adc
js
scas
femms
fcompl
insb
and
xor
dec
jo
jno
xchg
and
iret
cmpb
add
xorl
fsubr
loopne
sub
pop
push
addr16
lahf
inc
nop
sub
imul
pop
adc
and
insl
jg
sbb
xchg
jl
js
jnp
mov
inc
mov
js
mov
push
adc
adc
scas
mov
insl
push
mov
jp
dec
in
je
and
jmp
sub
and
fcoml
add
ret
lods
adc
sub
punpckhdq
add
addr16
mov
lock
insl
das
iret
js
push
rorl
xor
bound
xchg
jmp
std
scas
push
je
es
inc
adc
ljmp
cmp
test
fs
scas
loopne
and
enter
dec
jp
insb
cwtl
push
add
add
test
and
pop
popf
mov
pop
jge
xchg
test
sub
or
jmp
add
pop
add
add
in
fcompl
shll
sbb
jbe
mov
dec
shlb
inc
add
ds
push
jl
repnz
and
add
jo,pt
mov
mov
insl
and
mov
cs
aas
insl
push
add
and
pop
cmc
mov
jge
pop
adc
xor
jg
xchg
mov
inc
jbe
data16
aad
lods
mov
sub
out
adc
xchg
jns
test
adc
mov
pop
add
sbb
push
movsb
lret
jno
dec
rolb
add
addb
movsb
add
xchg
daa
pop
in
push
and
sbb
push
inc
sbb
inc
jno
jno
jmp
mov
adc
mov
jns
outsb
adc
sbb
nop
aad
popa
dec
test
jne
cmpb
fwait
lock
das
addb
and
pop
sti
adcb
xorb
mov
mov
inc
loopne
bswap
xlat
outsl
mov
push
addb
add
inc
into
popf
hlt
popa
fadd
mov
inc
daa
loop
and
jae
push
sub
das
lods
jns
and
bound
clc
lds
mov
push
pop
cmc
add
cld
mov
cmp
lock
ds
xlat
sub
aam
or
into
or
or
push
adcb
in
rcl
jne
cmp
arpl
sbb
shll
je
out
cmp
or
ficomps
sarb
xchg
pop
and
xor
jl
mov
mov
and
jne
pop
lcall
push
lgdtl
sarb
add
xorl
sbb
stos
cmp
sub
cmc
iret
xor
pusha
scas
jno
mov
outsl
lret
cwtl
inc
shl
and
xor
cmp
push
adc
mov
sub
jg
insl
jbe
dec
cmp
jno
xchg
fdiv
stc
popf
jno
sbb
sbb
mov
mov
fldl
rcrb
adc
je
sub
and
fldcw
mov
dec
shr
mov
in
mov
xor
push
push
pop
and
imul
daa
jae
lods
ljmp
pop
sbb
sub
dec
push
pushf
cmp
pop
or
fbld
cmp
lcall
inc
xlat
dec
xchg
and
xor
cmp
cmp
insb
sbb
mov
negb
sbb
or
xchg
and
inc
ret
lahf
psrlq
mov
ja
add
mov
xlat
dec
lea
out
push
and
jae
inc
cmp
jbe
sub
add
shl
sti
cmc
mov
cmpb
xor
loop
push
xchg
pop
ss
and
jge
mov
frstor
pop
or
rclb
cmp
popa
sub
int
iret
cmp
cmp
add
iret
out
jle
add
insl
jb
loope
adcl
in
push
mov
pop
and
insb
and
lcall
repz
or
int3
mov
pop
rcl
mov
pop
push
loop
fcoms
xor
sub
fstpl
mov
mov
mov
mov
stos
add
orb
add
popa
fs
int
dec
jno
sub
test
mov
rorl
push
js
inc
xor
imulb
mov
cld
inc
dec
xor
lret
mov
sbb
cmp
sub
xchg
hlt
lcall
pop
gs
lret
pop
pushl
add
dec
sbb
scas
add
dec
adc
idivl
push
pop
xchg
pop
sbb
stos
mov
push
addr16
add
out
es
push
ss
adc
add
testb
sbbb
sbbb
stos
jo
out
xor
mov
dec
push
pop
adc
lods
xlat
bound
and
and
test
dec
mov
adcb
es
sbb
mov
lds
add
enter
adc
pop
in
and
adc
mov
sbb
outsl
ds
shll
ror
push
mov
mov
xor
arpl
inc
test
pop
roll
addb
mov
ss
dec
pusha
movsb
daa
mov
dec
sub
dec
push
jbe
lret
add
or
mov
shll
sub
or
popa
dec
div
xor
sbb
inc
stc
in
fidivs
cmpb
into
cld
sub
int3
jbe
mov
hlt
mov
cmp
insb
sub
int3
fmuls
dec
testl
jno
jg
arpl
cwtl
push
out
outsl
sub
ja
pop
sub
inc
adc
dec
or
test
jns
in
pusha
daa
add
jno
jo
push
cs
test
int
and
xchg
sub
out
jg
in
in
je
add
test
fsubl
cmp
xchg
add
loopne
lret
xchg
stos
jo
aaa
add
lods
mull
jle
jbe
mov
aam
inc
rorl
leave
or
dec
add
outsl
shlb
loopne
int3
jb
daa
and
or
ror
les
inc
outsb
jmp
sub
pop
int
shrb
or
push
pusha
pop
xcrypt-ofb
cmpsl
jmp
rclb
sbb
cli
mov
dec
insl
adc
adc
inc
sahf
shr
sti
nop
pop
sub
mov
mov
call
cmp
les
mov
stos
frstor
pop
loope
mov
loop
jge
rclb
es
and
fildl
aas
cmpsb
dec
and
sbb
adc
pop
add
ret
pop
popa
inc
mov
sbb
xchg
add
sbb
and
push
loope
rcrl
pop
inc
shrb
pop
out
loop
push
cmp
jo
js
mov
rolb
or
and
fldt
push
jb
push
je
inc
xor
xchg
cmpsl
jno
subb
jno
add
rolb
cmp
adc
popa
sub
mov
ret
mov
jl
cmp
inc
dec
mov
popf
ret
and
xchg
push
add
and
ja
fwait
sub
and
call
add
mov
sbb
sbb
cmp
das
add
mov
sti
pop
sbb
ret
sub
push
loopne
inc
add
aaa
and
call
xchg
dec
xlat
sbb
iret
push
push
popa
out
mov
fsubl
sbb
pusha
adc
mov
add
add
mov
xchg
lret
sub
or
xchg
push
xlat
or
push
pusha
xchg
xchg
xchg
mov
arpl
movsb
fiadds
inc
test
sbb
jns
push
jno
inc
xchg
iret
mov
push
cwtl
daa
cmp
ja
inc
roll
xor
push
mov
addr16
adc
add
or
rorl
xchg
pop
xlat
pop
cmp
push
es
loop
xlat
push
inc
mov
pop
jge
std
and
adc
jbe
pop
add
mov
movsl
sarb
sub
jo
jg
dec
bound
cs
scas
ret
loopne
sbb
xor
mov
adc
cmpsl
nop
adc
mov
cltd
decb
cmp
and
sub
adc
mov
inc
jae
fsubl
add
mov
mov
jg
cmp
push
and
push
dec
je
inc
cmp
xlat
jo
das
mov
loope
push
aam
and
sbb
popf
or
lods
xchg
hlt
jo
inc
fcmovnbe
sbb
dec
daa
ds
push
stos
ljmp
insb
lahf
jnp
je
push
dec
mov
test
cld
in
dec
das
sbb
dec
lods
inc
pop
pusha
adc
sbb
xchg
dec
ret
xchg
sub
repz
inc
mov
lods
bound
pusha
cmp
pop
mov
jl
jne
nop
mov
add
inc
fmuls
hlt
push
push
cmp
push
jecxz
sbb
mov
xchg
sub
ds
adc
and
mov
pop
pop
les
sbb
mov
sbb
push
jmp
lods
dec
es
or
pop
or
push
mov
or
inc
mov
dec
cmp
lods
xchg
jns
xchg
push
push
dec
xchg
adc
fisttpll
daa
adc
stos
push
xor
push
stos
addb
or
pop
faddl
pop
aad
lock
push
xchg
sbb
mov
mov
inc
and
jnp
mov
push
stos
jp
and
sub
rolb
inc
sbb
clc
xchg
jle
dec
cmp
shll
in
xchg
push
jae
add
sub
and
test
addl
js
push
sbb
pusha
pop
sub
or
insb
dec
test
inc
fstps
mov
push
pop
ja
popa
sbb
sub
sbb
add
imul
mov
push
cli
mov
pusha
push
dec
and
push
pop
cmp
fiadds
frstor
outsb
push
daa
mov
mov
test
shlb
es
sbb
push
push
dec
nop
add
hlt
sub
sub
add
pop
inc
cmp
and
pop
jl
dec
adc
test
push
mov
test
sub
cwtl
popf
imul
scas
add
pop
cmp
or
mov
loopne
mov
inc
add
xor
sub
mov
inc
addl
rclb
mov
ss
pushf
int
mov
add
mov
pushf
mov
cmp
adc
and
dec
test
add
outsl
stos
iret
sahf
push
pushf
add
ja
in
adc
pop
jle
add
sti
xchg
fstpt
cmp
lock
add
jno
addr16
pop
sub
sbb
add
scas
loop
lds
imul
sub
sti
ds
xchg
andl
xor
xor
or
xor
add
in
ret
pop
push
jmp
inc
sbbb
fldl
lds
mov
jl
push
sbb
sbb
aam
mov
sbb
lds
sub
dec
test
cmp
push
shr
xchg
sbb
not
sbb
hlt
sub
lea
xor
addr16
xchg
add
sti
ret
iret
fidivrl
jp
push
cmp
sti
dec
pop
cmp
addr16
sti
int3
pusha
loopne
sub
icebp
pushf
test
pusha
orb
sbb
in
xchg
shll
mov
or
push
xchg
pop
sub
test
xchg
and
or
inc
movsl
js,pn
xchg
mov
ss
push
les
sbb
or
sub
or
jmp
int3
sub
jmp
out
cmp
inc
mov
int
jo
fs
sub
pop
mov
adc
mov
stos
lret
mov
add
jle
and
sub
outsl
jmp
insl
mov
push
adc
sbb
inc
add
lock
in
and
push
dec
dec
sub
jp
push
xchg
xchg
pop
mov
jle
push
out
movl
repnz
sbb
repnz
push
daa
popa
fsubrs
lret
ds
shlb
pop
cmp
adc
mov
daa
imul
mov
mov
in
insl
and
or
sub
pop
add
dec
rcrl
push
add
and
jo
dec
sbb
rolb
rolb
pop
pop
fbstp
lahf
mov
gs
adc
add
or
xor
xorl
orl
insb
and
push
rolb
pop
aam
dec
cli
insl
fs
nop
mov
flds
arpl
mov
push
inc
xlat
push
push
cltd
jo
sti
pop
cmp
push
push
sub
push
mov
jns
xchg
andb
pop
int
pop
jb
mov
mov
xchg
push
push
sbb
std
xchg
jecxz
cltd
aam
xchg
mov
insl
shll
call
pop
push
scas
push
xchg
std
mov
xor
adc
mov
addr16
fcomp
ss
add
add
push
lret
aas
aas
fcomps
mov
fadds
pusha
test
push
sarb
inc
xor
pop
and
push
inc
cmpsb
xchg
mov
inc
pushf
add
int
rclb
movsb
adc
inc
insl
mov
loopne
sub
das
and
jnp
les
add
pusha
call
out
adc
pusha
cltd
xchg
cmp
adc
das
loope
es
and
jg
sub
push
bound
and
int
sub
lock
stc
jmp
mov
or
push
aam
and
pop
nop
test
lret
push
stos
xor
dec
out
mov
ret
mov
push
jge
je
push
inc
lea
loopne
mov
adc
fistps
add
and
pop
bound
daa
arpl
stos
xlat
iret
fldcw
lds
sbb
mov
outsb
mov
mov
lahf
mov
lret
inc
jecxz
in
jle
and
mov
aaa
jl
pop
inc
jge
dec
xchg
adc
mov
mov
pop
add
lods
mov
inc
adc
sub
jno
mov
and
pop
add
imul
adc
fxch
or
xor
push
insb
push
aad
ljmp
push
lea
or
adc
jbe
mov
pop
push
adc
sbb
or
andl
xchg
adc
fstps
sub
and
pop
jno
pop
cmp
xchg
loopne
mov
pop
test
mov
mov
fadds
xor
push
leave
mov
mov
out
in
bound
add
test
push
mov
dec
stos
aad
adc
sub
xor
aas
shll
stos
dec
outsb
lock
imul
pusha
sbbb
ret
pop
sbb
and
fmul
xor
sbb
lea
mov
cmpb
jecxz
adc
mov
mov
into
or
lds
subb
xor
stos
daa
imul
xor
sub
inc
hlt
push
pop
mov
mov
cmp
addr16
xchg
or
push
mov
roll
or
pop
and
or
add
push
loopne
inc
pusha
dec
inc
mov
dec
or
mov
push
outsl
movsb
or
or
push
add
mov
mov
lock
shll
addb
and
xor
insb
pop
pop
adc
sub
and
cmp
lds
dec
aad
lret
xlat
clc
push
daa
test
sub
jns
popa
inc
daa
into
pop
mov
ret
mov
lds
btc
xor
bound
lods
lret
mov
mov
iret
hlt
jl
xor
lods
mov
push
add
jecxz
push
adc
push
daa
add
adc
push
add
daa
xchg
mov
mov
loopne
mov
jbe
fmul
sahf
fildl
cmc
xchg
jo
shl
inc
outsl
xor
dec
loopne
pop
inc
pop
stos
sbb
adc
mov
inc
fwait
push
mov
mov
sub
divl
ficoml
cmp
pop
dec
xchg
ja
inc
add
xchg
hlt
mov
or
sub
add
xchg
pop
lahf
pop
popf
cltd
call
push
sahf
iret
pop
subb
fsubrl
cmp
scas
and
and
cltd
ret
mov
sbb
clc
pop
das
in
and
adc
les
xchg
call
aaa
sub
and
out
out
push
xchg
shl
std
mov
int3
daa
jmp
outsl
ljmp
xchg
daa
and
push
pusha
or
mov
xchg
add
or
mov
cmpl
jb
pop
rolb
in
push
push
mov
inc
and
xor
pop
loopne
das
jmp
les
jmp
ja
sub
ret
jae
inc
xchg
xchg
sub
fidivrl
iret
and
loopne
les
inc
xchg
or
cld
xchg
pop
je
clc
mov
xor
sub
adc
push
arpl
adc
call
shll
gs
cmpsl
pop
cmc
mov
jne
cwtl
fcoms
out
clc
arpl
xchg
mov
cwtl
or
mov
test
push
fwait
cmp
push
xchg
mov
pop
and
pop
sub
sub
adc
mov
adc
adc
xor
xchg
mov
divl
test
cmp
xchg
cmp
cmc
mov
xor
sbb
jne
lock
popa
mov
sub
ret
add
adc
shlb
and
inc
popl
ja
rclb
sti
jne
mov
inc
scas
out
divb
lods
lcall
pop
pop
and
sbb
push
mov
cmp
inc
sub
das
movsb
js
dec
mov
addl
cltd
or
lock
dec
dec
scas
and
push
loopne
shll
xlat
mov
inc
les
pop
add
les
add
test
cmp
push
xlat
mov
push
popa
jo
push
cmc
push
shrb
das
fnsave
imul
push
adc
sbb
inc
dec
add
push
jle
mov
dec
push
xchg
dec
adc
add
adc
loope
adc
push
inc
inc
loope
add
and
add
loopne
adc
adc
stos
orb
push
cmc
pop
push
dec
pop
fwait
clc
in
add
lret
push
dec
add
cli
decl
inc
push
push
cs
adc
jmp
or
sub
push
movsb
xor
pop
gs
inc
mov
mov
jo
int3
fwait
mov
imul
xchg
cmp
jo
sbb
pushf
dec
add
ljmp
call
ret
iret
jb
pop
adcl
mov
pusha
loop
fdivl
rclb
cs
iret
xor
adc
sbbl
inc
loopne
addr16
xlat
in
mov
sub
dec
imul
data16
sahf
sub
mov
mov
jb
cmp
es
add
push
jl
int3
enter
jge
push
cmc
lods
popa
sbbl
movsl
mov
jne
cmpb
xchg
fisttpl
mov
mov
jbe
sbb
or
xchg
rcrb
adc
stos
jge
aad
jl
imull
fsincos
popf
pop
ja
js
or
sbb
jae
aaa
insb
mov
les
cwtl
sbb
add
adc
shll
lret
xchg
pop
jecxz
ret
insl
sti
sub
xchg
and
rcrb
push
bound
cmp
mov
adc
out
cmp
sub
aaa
ss
push
mov
gs
out
and
xor
stos
xor
in
push
fcoms
xor
fidivrl
es
lock
dec
test
and
add
lea
neg
hlt
pusha
clc
iret
sub
in
and
test
inc
icebp
subl
jno
icebp
lds
or
and
ret
mov
movsb
pop
bound
movsl
sub
add
and
xchg
test
xor
jge
sbb
pop
xchg
es
mov
mov
adcb
test
mov
bound
test
lods
fbld
stc
test
out
jge
je
jbe
sub
loopne
sub
or
negb
imul
sub
dec
fisubrl
mov
xor
fld
imul
and
push
mov
xlat
popa
adc
pusha
int
sbb
mov
imul
cltd
xor
sbb
das
rolb
arpl
fs
push
sub
push
xchg
stos
pop
mov
das
push
scas
or
xor
jo
sub
ss
dec
pop
orl
jle
gs
cmp
xor
mov
jp
movsb
sahf
subb
mov
das
popf
adc
shrb
xchg
cmpb
adc
and
jo
js
cmc
push
inc
add
stc
movl
sub
mov
mov
jle
add
xor
sbb
add
mov
sarl
jl
andb
testb
mov
sbb
push
mov
lcall
inc
fwait
inc
push
push
iret
aas
jmp
mov
test
inc
xchg
cli
or
adc
dec
add
aas
cmp
mov
sbb
push
cmp
mov
not
jp
add
nop
das
mov
pop
adc
cmp
imul
in
inc
sbb
scas
or
popf
mov
lea
in
mov
out
pop
lahf
stos
mov
cmpsl
sub
mov
addr16
shlb
sub
jp
push
imulb
sbb
in
mov
ss
testl
psubusw
pop
pop
or
cs
mov
in
ds
jp
stc
loopne
sub
add
inc
and
aam
or
push
or
sub
mov
and
lahf
stos
mov
aam
dec
mov
dec
sub
adc
loope
and
mov
mov
pop
jmp
fdivrl
nop
fwait
aas
es
add
mov
idivl
int
shlb
notl
mov
push
shrl
cmp
mov
xorl
xchg
fadds
sarb
bound
mov
icebp
out
stos
and
ret
lcall
cs
sub
inc
fdivrs
out
hlt
jmp
mov
in
push
stos
or
sub
shrb
leave
sub
sub
fsubs
testb
lds
xlat
sub
fcomi
mov
ja
mov
cmc
out
jo
outsb
jae
dec
or
fmulp
pop
stos
xor
fnstenv
xor
imul
clc
lea
mov
xor
cs
int
imul
jae
aad
test
and
popf
ljmp
fidivrs
inc
add
mov
dec
icebp
sub
sbb
jb
aaa
es
popa
stos
or
xor
bound
les
or
inc
scas
lret
imulb
inc
mul
or
rorl
cmpsl
int3
lea
lret
daa
fcmovnu
xchg
dec
jae
iret
dec
add
out
pop
jae
mov
jecxz
push
add
add
in
icebp
add
or
pop
in
insl
pop
lods
jge
pop
insb
mov
xchg
mov
add
jnp
xor
fs
inc
mov
mov
es
jl
loopne
into
inc
sub
adcb
and
call
iret
jo
mov
lock
mov
mov
pop
arpl
mov
loope
testb
mov
imul
xor
cltd
nop
jnp
fisubl
push
jl
les
add
jns
decb
xor
push
inc
repnz
mov
cmp
arpl
stos
adcb
adc
add
mov
push
sbb
and
sbb
mov
pop
sbb
dec
shlb
lret
add
int
add
pusha
adc
jne
icebp
lods
sbb
mov
jb
cmp
add
scas
and
mov
sub
xchg
icebp
divl
je
ss
fists
xor
inc
jb
sahf
sub
sarb
xor
pop
push
dec
dec
pop
out
arpl
fnstenv
pusha
add
xor
subb
add
not
rcrl
lock
mov
and
das
fsubrs
sub
pop
jmp
popa
inc
sub
push
dec
lahf
add
mov
int
lods
cmp
xlat
mov
add
push
lahf
push
inc
ja
cltd
pop
pop
inc
add
mov
mov
cmp
and
adc
push
add
int
sub
in
pop
inc
ret
push
push
test
rolb
xchg
addr16
pop
and
jne
jno,pn
ds
jl
pop
arpl
les
xchg
bound
xor
or
xchg
pop
in
inc
data16
cwtl
xor
mov
adc
add
jbe
cmc
add
popa
xor
scas
adc
push
stc
and
xor
test
popa
inc
subl
cld
add
lea
add
push
inc
dec
les
sub
jp
insb
dec
jl
testl
sbb
inc
jmp
add
adc
or
and
aam
xchg
inc
pop
xchg
push
fisubl
bound
stos
pop
lods
fldt
dec
push
mulb
cmp
sti
dec
in
pop
je
push
arpl
nop
sbb
pop
xchg
push
fsts
push
rorl
loope
xor
js
xlat
cmp
push
lcall
sarb
in
cmpsl
push
bound
pop
movsb
mov
inc
cmpsl
add
in
jmp
nop
jecxz
fdiv
ror
das
ljmp
cmp
rorb
mov
and
ljmp
and
and
add
adc
shlb
inc
and
aam
test
pop
add
loope
aam
sub
xor
mov
icebp
scas
and
add
in
and
filds
cmpb
aam
mov
cli
add
sub
pop
xor
xor
es
aaa
cmpsl
sub
shll
outsb
flds
fldenv
dec
adc
mov
jo
daa
sbb
loopne
mov
mov
loopne
cli
fmuls
pop
js
xor
cmp
jge
lock
xor
ja
xchg
iret
pop
mov
dec
and
and
ljmp
sbb
iret
inc
or
and
les
dec
stos
mov
loope
mov
mov
ret
inc
js
inc
cmp
dec
pushl
push
test
fcmovnb
inc
mov
jo
lahf
les
test
mov
sbb
jo
or
insb
insw
imul
inc
imull
inc
dec
aaa
orb
stos
inc
add
sub
cmp
inc
nop
loope
pop
aaa
push
push
ret
popa
push
scas
adc
dec
dec
xchg
loop
scas
std
in
add
ret
lret
lods
imul
cmp
cmp
xor
loope
dec
test
inc
loope
es
inc
and
sub
mov
and
or
push
pop
xlat
fdivrs
mov
cmp
cmp
pop
jo
ds
pop
jns
add
movsb
repz
roll
push
add
cmp
sub
jb
fistpl
adc
push
jp
add
enter
dec
into
outsb
add
lea
stos
call
or
fcmovnb
push
sbb
push
jno
adc
adc
js
xorl
pop
ret
mov
xor
mov
cmp
fldcw
mov
or
xor
lahf
loope
add
arpl
add
fistpl
sub
mov
jecxz
and
push
shrb
add
mov
inc
aam
out
movl
std
inc
aaa
aad
dec
mov
out
xor
popf
cmpl
mov
inc
pushf
shrl
pop
sub
aaa
int
imull
into
in
cmp
push
leave
xchg
popa
and
cltd
adc
pop
add
or
stos
fsts
add
movsl
jnp
sbb
and
adc
mov
adc
push
stos
mov
andb
sub
mov
mov
mov
xchg
test
mov
lds
adc
aad
fimuls
inc
dec
inc
add
pop
and
or
adc
testl
into
loopne
sub
inc
loopne
fmul
and
xor
insb
cmp
pop
shrb
loope
jle
sbb
adc
add
adc
fwait
add
jo
mov
pop
enter
pop
out
mov
add
adc
push
fldenv
outsb
or
add
loopne
mov
and
or
pop
and
ror
jmp
call
rol
cmc
and
iret
adcl
xchg
rclb
jae
mov
ja
incl
sbb
mov
inc
repz
xchg
mov
jbe
sarb
mov
shr
dec
aad
ja
adc
and
filds
jb
ret
cld
shll
jmp
mov
mov
jmp
ja
adc
lods
add
in
pusha
fistl
xor
push
mov
xor
pop
sbb
in
or
add
ffreep
mov
pop
out
test
lcall
sub
jo
rcrl
cmc
push
xchg
loop
jns
lea
cmp
cld
out
rorb
dec
int
or
ss
dec
mov
xor
xchg
ljmp
rcll
jbe
push
stos
add
push
cmp
call
xor
test
sbb
and
mov
scas
shlb
cmp
insl
jecxz
mov
mov
or
sahf
inc
sub
lods
sub
push
int3
loop
inc
cmp
inc
or
ljmp
pop
rcrb
sub
xchg
sbb
jae
lret
addb
test
push
pop
cmpsl
adc
mov
roll
add
loopne
out
daa
mov
scas
sub
xchg
fistpl
or
lock
and
cli
scas
mov
pop
cwtl
adc
ret
add
imul
mov
add
movl
sbb
ret
jae
jl
idivl
mov
jae
mov
leave
cmp
test
sub
out
hlt
subb
add
pop
sub
out
add
testl
inc
clc
add
fwait
mov
push
mov
sbb
add
sub
cmc
xchg
es
jne
clc
xchg
jecxz
shrl
xor
or
sub
sub
or
mov
mov
addl
mul
in
ret
or
cmpsb
adc
das
iret
pop
inc
or
mov
mov
sbb
sbb
das
push
pop
cmp
push
test
jo
fwait
cmp
xor
iret
push
inc
sbb
inc
and
push
das
outsl
leave
mov
push
mov
sbb
xor
mov
dec
cli
mov
fdiv
ja
rorb
rorl
subl
lahf
es
sbbb
xor
int3
js
cmp
ss
imul
dec
inc
iret
mov
shrl
lcall
dec
je
in
cs
rcrl
add
sub
rcll
mov
mov
push
adc
and
pushf
insb
and
loope
dec
sahf
fsubs
outsl
fcomip
inc
daa
sets
push
paddsb
sbb
push
xor
mov
sbb
shlb
dec
stos
jnp
xor
mov
or
shll
dec
ret
imul
pop
and
repnz
rcrl
lock
xchg
and
pop
xlat
xchg
outsb
lea
cmp
inc
push
inc
lret
div
loop
aam
push
jge
pop
pop
adc
iret
lcall
push
xchg
loopne
mov
jbe
mov
fwait
push
mov
push
pop
subl
xchg
fcmovne
inc
push
sub
sub
cmp
in
push
push
adc
shll
xchg
sub
popf
and
shl
cmp
pusha
jge
pop
addl
mov
subl
dec
add
outsl
sub
xor
mov
xchg
sub
shufps
aam
pop
rolb
sub
fists
loopne
mov
and
ds
xchg
lret
adc
sub
push
or
loop
daa
and
movsb
pop
mov
xor
jmp
adcl
cwtl
popa
mov
or
ret
xor
sub
or
das
scas
and
cwtl
je
and
add
daa
popa
aaa
aaa
pop
mov
pop
fldcw
adc
ficoms
jp
sbb
sub
outsl
push
lock
jae
loopne
sbb
xor
test
aam
pop
xor
mov
in
pop
mov
fadd
mov
or
call
xchg
mov
leave
stos
iret
add
add
movsb
insb
xor
mov
jo
sbb
inc
cmp
push
adc
push
jno
add
loope
sbb
cmovle
fldl
jle
mov
lds
inc
sbb
sbb
and
or
movsb
sub
push
mov
xlat
scas
and
add
fisubl
in
push
aaa
inc
sbb
ljmp
popf
stc
lret
xor
mov
jno
js
push
add
frstor
popa
sub
adc
ja
mov
and
out
movsb
dec
add
in
jge
dec
add
xchg
xor
push
cmpsl
js
sbbl
add
test
adc
es
rcll
test
rorl
jns
rolb
inc
rcl
cmpl
cmp
inc
xor
mov
rorb
or
std
xor
sub
fldl
andb
mov
clc
add
shll
sbb
sub
sahf
stos
popa
push
add
stos
push
call
aam
add
sbb
cld
inc
pushf
inc
xchg
daa
cmp
scas
popf
dec
dec
push
jecxz
sub
bound
mov
daa
faddl
jb
or
push
movsl
push
test
aad
cwtl
inc
jnp
or
stos
and
das
jae
jo
test
cmpsl
pop
mov
inc
push
jmp
add
enter
je
sbb
es
pusha
sbb
fnstenv
add
push
wbinvd
pop
aad
and
scas
jmp
ljmp
gs
imul
jp
xchg
sbb
jne
xchg
cmp
cltd
xorb
jnp
mov
js
xor
cmpsb
cmp
jl
add
push
cmp
add
mov
fadd
arpl
test
pop
hlt
and
bound
xorb
das
cmpsl
push
cmc
bound
or
mov
cmp
and
pusha
xor
ja
loopne
mov
imul
fiadds
aas
mov
pop
mov
rclb
or
add
cmpsb
pop
in
sahf
push
fildll
scas
mov
stos
test
add
inc
sbb
inc
lret
lock
sbb
movsl
cmpl
fdivs
xor
orl
xchg
mov
das
bound
cmpsb
pop
ds
mov
rol
js
xchg
call
testl
inc
xchg
lahf
jns
pop
test
and
push
gs
sub
ret
mov
adc
popf
es
jg
jne
add
push
inc
xor
nopl
mov
xor
jo
sub
inc
shlb
inc
or
lds
dec
je
mov
fwait
add
jb
ret
test
jnp
or
je
and
push
inc
inc
test
loop
call
mov
xor
mov
daa
test
test
adc
pop
add
bound
fstl
adc
sub
movsb
or
mov
mov
adc
scas
or
mov
lcall
sub
mov
pop
push
fdivrl
movsb
add
inc
sahf
push
stos
es
stos
pop
das
dec
insl
sbb
add
push
cmp
inc
pushf
sbb
mov
mov
pop
push
adc
adc
stos
inc
adc
cltd
mov
add
mov
sub
xend
jecxz
cld
jnp
jle
or
mov
test
push
adc
push
sbb
pop
jecxz
jbe
popa
mov
pop
in
sub
or
pusha
loop
pushl
cmp
sub
sub
sahf
popf
xchg
clc
cmpsl
sbb
sahf
push
xor
insb
shrl
sub
add
fstpl
sbb
jb
scas
pop
lea
dec
clc
adc
pusha
fadds
mov
outsb
insl
dec
or
cmp
outsl
jge
add
sarb
push
adc
movsb
fstps
dec
add
lds
sub
scas
ficoml
jne
loop
jl
push
dec
cmp
jge
les
in
xchg
pusha
xchg
icebp
and
cltd
adc
and
roll
mov
std
mov
roll
add
add
fs
je
mov
lods
into
scas
sbb
push
mov
imul
jg
cld
mov
outsl
mov
aaa
imul
repnz
orl
ret
push
lds
mov
cmp
jo
push
jne
fwait
lcall
push
xchg
add
mov
stos
les
sbb
and
idivl
sbbb
mov
fiaddl
mov
xchg
mov
push
outsl
adc
sar
je
or
xchg
inc
shr
sti
ficoms
jne
lods
xor
adc
call
cli
mov
xlat
fsubrl
push
jbe
inc
fs
inc
xor
mov
orb
movsb
sub
neg
shrl
add
add
cmp
push
insb
inc
jno
jmp
dec
fidivrl
cmp
mov
push
xor
push
and
inc
and
pusha
sbb
movl
cmp
call
xchg
outsb
adc
adc
mov
loop
je
out
mov
int
pop
scas
mov
aaa
mov
inc
sbb
push
add
movsl
cli
or
dec
cmp
push
xor
ficoml
test
bound
push
pop
sub
sub
add
fsubs
test
mov
add
adc
arpl
not
adc
mov
mov
jg
and
in
and
ljmp
ja
mov
scas
or
mov
sbbb
fucom
add
cmpsl
mov
inc
add
inc
dec
and
push
jo
mov
add
lret
and
pop
icebp
jge
out
cmpsl
push
or
jp
push
lods
inc
pop
inc
fmul
das
dec
fdiv
pop
shl
jg
jnp
cmp
mov
cmc
add
popf
rorl
cli
outsb
imul
daa
mov
sub
arpl
sbb
mov
out
inc
lret
mov
add
das
pop
adc
ret
mov
xchg
sub
pop
add
cmp
mov
sbb
pushf
roll
test
lea
mov
jg
mov
sub
inc
dec
shrb
inc
subb
cmc
mov
cltd
cwtl
scas
sub
push
pushf
add
push
mov
imul
cmp
je
fmuls
lea
sti
push
adc
pop
arpl
push
jb
mov
mov
das
push
inc
xchg
xor
push
add
push
orb
xorb
cwtl
inc
rcrb
adc
les
adc
fdivrl
mov
or
or
cmp
stos
lret
push
mov
mov
stos
push
lds
pop
lea
ret
inc
mov
fnstsw
and
movsb
les
add
xchg
pushf
and
xchg
scas
cmp
mov
gs
or
repnz
shlb
dec
push
repz
sub
and
notl
jo
fld
orb
fbstp
or
jo
jo
inc
shll
addl
or
sbb
adc
sbb
scas
aad
insl
fbstp
sbb
mov
cmp
lods
and
push
add
fisubs
aas
scas
fstpl
ljmp
inc
movsb
jmp
loop
add
sbb
fbstp
sbb
cmp
or
push
je
mov
jae
jecxz
inc
add
popa
adc
or
xchg
inc
inc
test
push
mov
les
out
pop
cwtl
inc
fdivrl
and
mov
cmp
ret
nop
scas
rcl
lods
dec
xor
out
adc
cli
xor
inc
in
pop
mov
scas
and
fiadds
bswap
xor
mov
es
cs
adc
popa
sub
mov
mov
in
xchg
shlb
cmp
lahf
inc
les
xchg
push
js
pop
or
popa
sub
pop
jmp
xchg
xchg
ja
adcb
sbbl
xchg
sub
ret
mov
add
stos
push
mov
xor
fldt
pop
dec
addl
mov
stos
sti
into
xchg
adc
mov
dec
push
add
hlt
flds
lds
xor
cmp
icebp
cmc
hlt
add
cwtl
pop
lret
bound
sbb
das
mov
pop
lds
repz
sbb
sub
or
dec
ds
add
iret
mov
push
jl
mov
or
sbb
xor
mov
sbb
mov
imull
mov
cmp
cmp
hlt
pop
sub
sbb
fidivl
add
outsb
or
scas
test
dec
pop
mov
xchg
xor
shlb
enter
inc
or
scas
adc
sarb
test
cmp
arpl
scas
xchg
mov
or
lret
or
mov
cmc
pop
shlb
lcall
add
xor
and
mov
int
ja
push
mov
mov
jb
mov
or
lret
push
and
es
xchg
pop
inc
mov
cmp
or
addb
in
aam
fistpl
xchg
xchg
adc
pop
sbb
dec
fs
jmp
das
jmp
add
mov
mov
std
pop
xchg
or
push
aaa
dec
lret
add
and
stc
mov
pop
iret
loop
or
pusha
push
xor
pop
insb
xor
lock
push
into
mov
adc
xor
inc
mov
jp
push
push
aad
or
pushf
subb
sub
mov
shll
xor
mov
lcall
lahf
pop
push
arpl
loop
pop
dec
lock
outsb
jb
add
inc
or
inc
and
sub
or
aas
add
test
add
mov
adc
xor
lea
adc
mov
or
push
call
mov
mov
stos
gs
pop
mov
mov
dec
jno
arpl
sub
add
outsl
and
jo
adc
subb
adc
cmpsb
inc
cmp
mov
xor
or
cltd
out
lret
iret
cli
sub
mov
sbb
je
add
scas
rorl
or
test
inc
rorl
rcl
stc
call
cli
fsubrs
js
les
add
cs
sub
xchg
sbbl
dec
fildll
inc
adc
jg
inc
mov
mov
and
stos
test
mov
adc
push
popf
sub
sub
test
mov
jle
outsl
mov
icebp
leave
or
cmp
push
add
push
push
aad
adc
pop
mov
push
mov
imul
xor
ljmp
lds
xchg
arpl
lds
push
imul
shrb
addb
add
adc
jno
add
sbb
icebp
cmp
mov
inc
xor
mov
push
xor
test
scas
push
ret
push
cmp
mov
addb
enter
mov
or
ds
push
ja
shrb
fcmovbe
pop
sbb
mov
rolb
pop
out
or
jnp
pop
add
dec
or
lds
pop
hlt
das
or
jmp
les
scas
and
cmp
loope
jmp
sbb
mov
out
add
add
adc
popf
jne
mov
xor
in
cmp
subl
xor
dec
roll
dec
mov
mov
push
enter
add
mov
lods
mov
sbb
fsubs
or
push
aam
test
insl
or
daa
mov
ss
cmp
cs
push
pusha
pop
daa
push
add
mov
mov
push
push
or
jle
mov
inc
mov
xchg
je
and
dec
push
push
in
add
filds
test
dec
sbb
xchg
sub
xchg
test
inc
adc
add
idivb
xchg
out
ds
into
out
xchg
mov
push
mov
es
jp
sbb
in
adc
push
add
cmp
and
scas
cwtl
jl
out
leave
push
fisttps
push
inc
push
pop
inc
mulb
mov
lods
inc
mov
xor
loop
test
xor
or
js
dec
or
jge
mov
or
cmp
mov
pop
mov
inc
clc
cmp
loopne
mov
leave
add
sub
outsl
add
dec
sahf
test
or
je
scas
sub
sub
jo
cwtl
push
cmp
and
bound
fsubr
cs
push
aad
adc
sbb
test
add
and
mov
cltd
iret
jo
xorl
mull
aaa
or
or
scas
data16
lret
cmpsl
pop
test
pop
stos
pusha
sbb
push
inc
pop
cmc
inc
pushf
inc
cs
mov
dec
sub
test
adc
xchg
jnp
out
sub
data16
adc
mov
addl
outsl
lret
jp
mov
xor
iret
addl
jo
lods
fwait
inc
stos
inc
out
rorl
cmp
dec
mov
add
xchg
xchg
icebp
adc
mov
mov
insb
outsb
jg
sub
add
cmpsl
subb
stos
inc
xor
loopne
ret
mov
cmp
ds
sub
loopne
mov
lcall
xchg
pop
pop
pop
stos
jne
and
or
pop
add
lods
and
enter
lods
and
inc
rolb
adc
arpl
cmpsb
pop
jp
ficoml
fildl
cmp
inc
xor
jg
jg
push
push
fistpl
cmp
loope
jge
inc
lods
sub
push
add
adc
pop
cmpsl
pop
imul
bound
or
mov
rcrb
out
repnz
lcall
out
cld
push
pop
adc
arpl
mov
fldenv
lods
call
cmp
mov
inc
xchg
lods
js
or
cld
add
ftst
sbb
or
pop
daa
test
fsubs
or
imul
mov
les
aaa
pop
add
inc
pushf
mov
cwtl
stos
pusha
das
fstps
cmp
mov
mov
xor
nop
and
push
add
mov
mov
or
and
int
pop
push
mov
dec
push
xchg
stos
xchg
jecxz
cmp
sub
and
movsl
sbb
cmp
push
or
mov
and
pop
push
mov
dec
adc
or
arpl
add
cmp
adc
mov
push
cmp
sbb
or
inc
adc
sub
xchg
mov
push
xchg
stos
dec
mov
xor
das
rolb
dec
adc
adc
fiadds
add
outsb
jb
aad
and
mov
je
mov
inc
fcoms
mov
or
push
push
add
add
scas
sub
or
fcomi
popl
pop
add
lds
add
andl
cmp
aas
mov
push
sub
push
sub
add
popa
cmp
sbb
adc
jo
je
push
lds
rcrl
push
sub
mov
mov
or
test
inc
xor
mov
jo
lods
and
xchg
inc
sub
or
xchg
jae
cmp
icebp
inc
add
movsl
aas
addl
adc
sub
lds
data16
pop
sbb
lods
psraw
test
nop
jno
xchg
xor
dec
jle
push
cltd
into
mulb
je
lods
add
inc
popf
pop
mov
add
fidivs
adc
xor
jp
scas
and
push
cmp
push
xor
das
dec
jo
das
jmp
inc
lcall
push
int
pop
inc
insl
push
adc
in
addl
in
mov
fsubp
sub
jo
mov
sub
int
scas
add
mov
dec
push
add
fisttpl
sub
add
shlb
mov
push
and
iret
add
inc
sbb
enter
xchg
std
test
out
sub
jecxz
daa
mov
imul
jle
mov
js
lahf
bound
inc
inc
adc
adc
mov
push
daa
pusha
hlt
push
lcall
adc
aad
mov
stos
lcall
loopne
xchg
xchg
out
sti
fsubl
inc
mov
int3
inc
cmp
push
orl
sub
sbb
test
sub
push
aad
or
roll
adc
add
lock
pop
add
xchg
shrb
lods
or
xchg
insl
mov
rclb
xor
out
loope
push
cmp
into
ret
cmp
packsswb
test
add
push
mov
mov
push
call
xor
push
filds
lods
sbb
daa
add
shll
es
sbb
inc
fcmovbe
fcomps
in
add
pop
iret
xchg
pusha
jg
shlb
in
jp
fldcw
sbbb
sbb
test
adc
imul
fwait
xor
xor
inc
inc
std
daa
sahf
pushf
fs
mov
and
push
scas
cmp
add
andb
daa
dec
les
jno
push
jno
sti
rep
adcb
mov
addr16
inc
dec
subb
inc
add
xor
je
out
fbld
xor
jb
out
jne
das
fmuls
sub
divb
lcall
pusha
jge
jecxz
pop
push
sbb
ficomps
sub
out
test
xor
add
aam
repz
xchg
and
aaa
push
iret
dec
pusha
xchg
fsubrl
insl
add
mov
add
out
cmp
mov
cmpps
les
fistps
and
roll
push
jl
and
mov
push
popa
sbb
testl
cmp
fimuls
cltd
push
addl
or
mov
inc
or
and
stos
sub
daa
xor
ret
push
adc
test
clc
mov
sub
iret
adc
dec
lcall
adc
mov
hlt
ficoms
push
xorb
mov
cmp
add
inc
xchg
into
orb
xor
pop
cmp
sub
js
orb
sbb
xor
or
adc
add
lea
dec
xor
mov
mov
shl
xor
push
cmp
push
jo
xchg
cld
mov
adc
mov
pop
push
mov
pop
mov
inc
adcl
cmp
jg
and
inc
pushf
push
xor
dec
mov
sbb
cmpb
shrb
push
mov
sub
clc
xchg
addl
mov
and
jne
cmp
mov
insl
pop
arpl
fildll
lods
jl
mov
fidivl
das
or
adc
test
test
inc
inc
lods
imul
xchg
call
nop
xchg
dec
icebp
mov
cmp
and
push
xlat
jbe
sub
pop
rorl
push
and
jge
or
adc
bound
scas
fdecstp
imul
int3
aaa
pop
sbb
pop
mov
mov
jp
add
inc
inc
call
cmp
in
mov
xor
cmp
rcrl
jp
mov
ret
fistpl
dec
popa
push
or
in
js
fninit
and
push
mov
inc
push
xor
aas
mov
inc
int3
out
insl
test
mov
inc
out
movb
out
jno
inc
fbld
add
xchg
dec
adc
fists
mov
int3
loopne
cld
fsubl
inc
push
es
shll
in
inc
sub
in
cmp
out
mov
push
jns
xor
push
adc
mov
cmpsb
mov
mov
cmp
aaa
aaa
shlb
std
add
add
dec
mov
mov
es
or
mov
lea
push
loopne
inc
je
and
das
sbb
xchg
inc
ds
add
push
das
mov
movsb
je
fstpl
xchg
aaa
add
inc
out
popa
cmp
lods
cmp
xor
outsb
pop
lea
push
jnp
cmp
sti
mov
outsb
cmp
cmp
sub
in
stos
sub
mov
mov
jno
pop
test
and
or
add
shll
lock
cmp
sub
xchg
push
outsl
aaa
bound
add
cmpsb
sbb
popl
inc
mov
push
push
fildl
int
adc
add
ja
jp
jle
rcr
out
mov
xchg
jno
xor
sbb
frstor
icebp
xor
pop
jb
jmp
jle
push
into
mov
bound
sbb
popa
inc
lock
xchg
cmp
orb
fisubrs
xchg
xor
mov
les
xor
ret
mov
push
inc
xchg
or
aam
es
fmull
shll
mov
add
mov
sbb
push
ret
imul
imul
ds
lock
sti
sbb
daa
imul
jbe
inc
shrl
xor
sbb
imull
push
les
nop
sbb
sbb
stos
sbb
bound
fsubs
aas
imul
and
faddl
ffree
and
add
inc
sbb
sahf
inc
test
sub
lahf
push
test
add
mov
into
xchg
inc
or
mov
enter
and
xchg
sub
cmp
js
add
mov
jns
xlat
adc
and
push
sub
movlps
or
rorb
aaa
daa
sti
inc
test
sbb
dec
sub
push
ret
repnz
add
aaa
adc
xor
cltd
orb
lcall
push
sbb
gs
mov
jo
mov
inc
add
jbe
aam
xchg
sbb
mov
adcb
xor
mov
dec
mov
mov
les
jp
push
cs
test
add
mov
xor
or
dec
hlt
xor
xlat
sub
add
cld
outsb
inc
int3
sahf
je
das
insb
inc
cmp
and
pop
and
mov
or
push
stos
mov
or
insb
inc
sub
cmp
inc
xor
shl
scas
std
cmp
sti
add
and
push
les
sub
dec
push
inc
inc
xchg
js
inc
sub
sahf
or
and
push
jbe
add
popa
mov
cli
inc
pop
jmp
cmp
jo
popf
jae
pop
sub
mov
mov
fimuls
dec
andb
xlat
and
and
xchg
xorb
test
movsl
and
js
test
mov
xor
lods
pop
inc
lcall
adc
mov
enter
inc
sub
push
addr16
jo
mov
inc
sbb
dec
jecxz
es
jnp
mov
and
push
stos
jo
mov
jg
and
mov
sbb
mov
popa
sti
xor
dec
stos
pop
xchg
pushf
ret
adc
inc
insb
xlat
inc
and
ret
push
pop
ljmp
clc
mov
cwtl
pop
loopne
push
lahf
or
jl
push
ror
hlt
fiadds
out
jno
iret
or
or
mov
adc
lret
mov
jb
mov
std
data16
inc
fldcw
loope
hlt
sti
push
inc
push
inc
fisubl
addb
dec
inc
nop
pop
pop
add
mov
sub
cmp
dec
cli
xor
loopne
sbb
push
sub
addr16
mov
mov
and
push
and
jo
sub
fists
fdivrs
or
add
sub
mov
ljmp
mov
hlt
adc
mov
mov
mov
sbb
fidivl
add
add
sub
jb
stos
pop
in
pop
cs
inc
test
add
in
stos
inc
inc
mov
inc
fcmovnu
add
mov
test
push
xorl
xchg
into
xor
daa
bound
addr16
adc
clc
sbb
lods
stos
sub
push
mov
pop
jmp
push
fwait
addr16
jo
fcoms
xchg
sub
mov
cmc
xorb
and
mul
pop
mov
dec
and
xor
sub
push
femms
mov
push
push
and
test
ss
cs
popa
inc
jp
jae
sub
push
sub
idivl
push
cmp
addr16
mov
push
xor
add
daa
clc
neg
mov
cmp
sbb
cwtl
fsubrl
mov
mov
or
aad
inc
popf
mov
pop
xchg
cmp
mov
xlat
pop
stc
cmpsl
xchg
cmp
adc
push
ficomps
testb
mov
std
cs
sub
testl
pop
clc
sub
sub
cmp
aam
jb
mov
inc
gs
adc
jae
fnsave
fs
adc
lret
sbbb
cs
icebp
jp
fdivl
push
pop
inc
or
test
add
cmp
sbb
shll
add
add
jp
and
dec
stos
xorb
mov
inc
subb
fucomi
mov
js
loopne
sub
popf
mov
imul
push
xchg
addl
cmpsb
jl
test
sbb
shlb
push
mov
sti
fisttpl
cmp
cmp
mov
adc
adcl
inc
daa
mov
test
lret
orb
sub
int3
cmpsl
adc
mov
andb
pop
push
push
jl
out
stos
mov
insl
mov
cmpsl
nop
mov
jl
popf
xor
sbb
dec
mov
scas
es
adc
mov
sbb
loope
cs
dec
inc
pop
aaa
out
push
mov
xchg
mov
lea
orl
testl
push
out
dec
and
inc
jp
inc
cmpsl
and
sbb
stos
push
aad
pop
sbb
arpl
mov
loop
push
mov
dec
pop
mov
cwtl
add
or
fmull
sbb
mov
loop
mov
mov
je
js
jne
pop
cmp
lret
jns
mov
and
fwait
cmp
aas
add
fistl
jo
lea
cmp
popf
aas
ja
iret
sub
cmp
add
add
ret
jl
xchg
into
cmp
xor
stos
xlat
popf
sub
inc
or
push
test
icebp
iret
add
pop
inc
mov
subb
jno
nop
sub
adc
push
or
dec
decl
add
inc
xchg
mov
cmc
or
mull
lahf
out
mov
clc
icebp
add
add
hlt
sbbb
shrb
fisubs
call
lret
ja
adc
inc
cs
mov
ljmp
jb
sbbl
cmovl
xchg
and
in
sbb
jmp
mov
mov
dec
cmp
lcall
arpl
sbb
push
push
and
mov
mov
or
lods
ret
sub
dec
inc
lods
das
jle
jle
push
push
add
das
xchg
cld
fsubr
sub
call
mov
lahf
cli
adc
and
inc
push
stos
xchg
test
adc
dec
add
pusha
mov
in
adc
mov
das
mov
mov
mov
int
loope
xchg
shrl
push
xor
pop
or
cmp
fistpl
dec
mulb
popf
test
sbb
sar
js
or
mov
xchg
mov
add
lret
in
inc
das
test
cltd
cmp
lock
pusha
in
popa
rcrb
mov
mov
or
pop
lea
sbb
scas
dec
mov
rorl
adc
and
cs
icebp
mov
adc
in
stos
test
std
push
pusha
scas
mov
dec
pop
or
mov
inc
xor
sub
add
inc
das
xchg
lods
xlat
adc
loop
pop
add
iret
mov
out
or
test
outsb
aad
and
scas
push
cs
test
dec
add
mov
pop
sbb
cmpsl
adc
or
int3
sbb
dec
xor
pop
aas
add
stos
sbbl
repz
and
movsb
cmp
pop
xor
cmc
daa
jg
and
mov
int
xor
xchg
push
mov
xor
and
or
inc
adc
and
cmp
and
sub
pop
xorl
jbe
or
and
xchg
loop
pop
and
and
xchg
push
shrl
addl
int3
scas
push
scas
mov
pop
and
inc
pushf
or
cmovp
jmp
andb
push
push
and
push
adc
nop
out
cmp
fadd
and
sbb
push
addr16
insb
lods
loopne
scas
adc
das
scas
test
push
inc
fcmovu
dec
mov
xor
xor
call
dec
push
cmp
test
enter
push
push
add
les
sub
loop
or
mov
cmp
andl
add
dec
test
mov
bound
xor
popf
sub
cmp
xor
popa
xor
mov
xor
fldenv
ja
fnstenv
cmp
push
lds
fwait
ret
push
je
xor
and
inc
adc
dec
dec
dec
cmp
push
or
es
insl
xchg
movsl
js
out
pop
sub
pop
sbb
jge
call
and
or
inc
nop
and
shrb
and
add
pop
push
cmpsb
daa
imul
call
dec
jne
mov
cmp
fisubrs
clc
mov
lret
push
data16
mov
push
push
xor
fcoms
dec
cmp
push
in
insl
xchg
xor
enter
sub
jbe
add
and
push
dec
mov
scas
xchg
pop
cmp
push
mov
pop
mov
outsb
mov
adcl
das
jecxz,pn
pop
adc
mov
notb
in
mov
add
jmp
adc
add
add
mov
pusha
adc
stc
ficoml
add
pusha
mov
aaa
push
cli
cltd
add
add
mov
pop
xlat
xchg
sbb
pop
das
inc
adc
adcb
sti
inc
ret
inc
loope
cwtl
loopne
clc
aas
adc
pop
xchg
push
sub
imull
and
fldcw
lret
aaa
sub
lcall
push
cmpsb
shlb
jmp
fs
lea
cmp
add
cld
lcall
sahf
xchg
dec
xchg
cmp
push
xchg
mov
dec
inc
adc
cs
int3
sbb
out
int3
inc
jb
test
leave
ljmp
push
clc
daa
and
push
jo
xchg
sub
or
mov
sbb
add
cmp
jl
adc
inc
loopne
jp
add
cs
adc
or
shlb
mov
int3
xlat
stc
push
out
inc
xor
mov
sbb
push
sbb
adc
jae
xlat
mov
movsb
callw
je
jmp
mov
es
mov
or
sbb
and
call
adc
pop
cmc
dec
xchg
loop
iret
lock
push
sub
add
push
arpl
xor
cmp
cwtl
push
adc
fcom
sub
adc
nop
cmp
pop
nop
jp
sbb
cs
or
das
mov
fdivl
iret
and
cmp
mov
fwait
jne
mov
test
mov
sbb
pop
cltd
jno
push
das
mov
repnz
scas
cmp
add
lret
inc
jno
add
and
inc
mov
dec
inc
xchg
lret
insl
push
push
int
xchg
fadds
cltd
cs
rdtsc
ss
push
mov
fiaddl
add
add
scas
rolb
dec
dec
fstps
shrl
and
jle
dec
push
xor
je
add
mov
sub
aam
xor
sti
cmc
pop
push
add
pop
mov
add
adc
jecxz
inc
mov
stos
xchg
rorb
inc
adc
push
add
jno
loope
fldenv
in
cmp
push
cmp
jge
pop
mov
enter
sub
mov
mov
fwait
mov
popf
addb
xor
push
std
jb
push
in
aas
jae
and
stos
test
jno
dec
pop
popa
loop
imul
and
jne
mov
mov
xchg
jo
lds
out
bound
nop
je
sbb
and
sub
movsl
cmp
sbb
gs
in
aad
je
pop
mov
cwtl
mov
push
ss
call
mov
xchg
push
daa
pop
nop
mov
jo
imul
xchg
adc
xchg
xchg
push
sbb
pop
inc
daa
jno
pushf
xor
mov
imul
and
jl
jbe
fldcw
add
nop
push
add
leave
ror
or
xor
dec
lcall
bound
sarl
ja
lea
inc
mov
mov
add
and
and
push
xor
sbb
rcll
pushf
leave
mov
cli
sub
movsb
cmp
dec
mov
sbb
in
mov
mov
popl
into
and
in
mov
stos
movsl
jmp
add
sub
add
add
dec
insb
les
imul
mov
add
mov
sub
popf
add
es
ds
or
adc
aad
hlt
push
pushf
add
ss
add
imul
les
or
sbb
inc
mov
pusha
mov
add
add
scas
mov
add
add
inc
das
lcall
pop
pop
cmpl
jp
push
shll
jecxz
addr16
jge
arpl
add
dec
dec
inc
or
iret
mov
mov
dec
sbb
fildll
sahf
pop
xor
out
pop
mov
lods
mov
or
push
jae
mov
sbb
mov
mov
xor
inc
fbstp
mov
dec
or
add
add
out
aad
or
dec
push
mov
cld
adc
cmc
mov
jne
lcall
add
pop
lds
mov
mov
push
imul
insl
mov
lods
sub
push
das
xchg
sub
addr16
or
adc
mov
das
test
dec
ds
lods
xchg
mov
mov
dec
inc
jle
inc
lock
pop
loope
iret
rolb
add
cmp
stos
ja
mov
mov
iret
out
inc
jnp
or
cmp
addl
shlb
stos
cmpsl
mov
mov
sbb
jb
jmp
add
and
scas
inc
bound
sahf
sub
scas
adc
idivl
adc
std
pop
jmp
mull
push
sub
mov
sbb
push
rolb
xlat
push
and
je
in
mov
xchg
or
testl
xor
aas
cs
push
sbb
xor
lods
rcr
mov
repz
xor
mov
jno
pop
add
addr16
adc
aaa
pop
jecxz
dec
jo
cmc
cmp
daa
add
test
dec
dec
imul
sti
mov
xor
push
add
jno
repnz
iret
rolb
mov
shlb
pop
add
fs
scas
xchg
sub
lea
xor
stos
fcompl
into
shlb
mov
bound
sub
pushf
roll
popf
ljmp
sbb
cmpsl
addl
ja
sub
push
cmp
fcmovne
add
pop
out
mov
inc
or
mov
xor
xlat
push
movsl
and
or
int3
pop
frstor
xchg
mov
dec
xor
adc
int
popf
dec
add
addl
scas
fwait
push
addr16
adc
pop
pushf
and
xlat
popa
mov
and
js
mov
mov
ret
cmp
add
mov
and
loop
push
fbstp
push
sub
add
rorb
xor
aam
mov
xlat
xor
cmp
push
inc
ds
jmp
mov
es
sbb
mov
mov
mov
pop
mov
pop
pop
gs
in
shll
pop
out
int3
or
std
icebp
cmc
mov
je
jo
jo
mov
les
daa
mov
fdivrl
pop
leave
jo,pt
shll
and
add
adc
jp
loopne
rcrb
sahf
stos
cmp
push
mov
shll
or
or
fsubrs
xchg
es
sbb
dec
iret
jge
adc
sbbb
and
sbb
sub
ss
outsl
add
or
out
popa
das
mov
cs
fcom
jnp
movaps
push
js
sub
pop
sbb
adc
xlat
or
mov
lds
and
stos
enter
arpl
add
orl
push
and
jmp
pusha
das
pusha
cmpsl
out
add
movaps
das
add
testb
pushf
das
adc
pusha
loop
sbb
int3
mov
xor
imul
jge
daa
jmp
jmp
lahf
mov
inc
jge
adc
movsl
mov
aam
fsubl
dec
lcall
lea
ss
enter
or
lcall
or
into
lods
test
subb
ja
ja
sbb
sub
pop
add
mov
cmc
sub
daa
inc
sub
sbb
or
movsl
pusha
adc
add
loopne
lcall
test
sbbl
fldl
mov
mov
xchg
ficomps
adc
dec
mov
test
lea
int3
movsb
movl
mov
or
repnz
pop
or
outsb
jle
xchg
in
adc
lret
orb
mov
and
pop
jbe
mov
outsb
xchg
pop
hlt
dec
jb
adc
out
mov
add
push
sub
or
shll
push
out
or
dec
addr16
testb
neg
add
in
sub
or
sub
or
cli
adc
push
sub
cmc
inc
xchg
neg
or
jae
or
sahf
jge
pop
dec
and
ss
push
into
sbb
sub
loopne
in
jge
popf
test
xchg
stos
incl
and
fidivs
iret
fidivs
inc
jo
imulb
scas
xor
jne
pop
and
data16
adc
pushf
lahf
or
rorb
jo
jmp
push
add
jae
xchg
ret
inc
test
je
fists
sbb
cmp
fidivs
ljmp
xlat
das
and
inc
outsb
stos
test
int3
dec
dec
inc
jmp
and
imull
loopne,pn
xlat
loope
fidivs
nop
popa
push
sub
xor
daa
or
adc
lret
sahf
sbb
scas
or
incb
push
dec
movsl
xor
cmp
lret
mov
andb
ds
pop
cmp
dec
inc
xchg
fucomp
push
fiadds
jp
jge
cltd
sbb
push
mov
daa
in
std
add
add
call
mov
imul
ret
cwtl
shll
xchg
inc
mov
addr16
sub
xor
xchg
cmp
sbb
popa
add
jg
loope
fistpl
pusha
pop
fcoms
mov
mov
mov
nop
sub
xchg
sahf
mov
pop
jl
jno
mov
dec
or
sahf
push
mov
rolb
cmp
loope
xchg
jnp
cmpl
in
xchg
cmp
cmp
mov
cmpb
lock
push
mov
mov
jnp
lcall
add
sbb
mov
adc
mov
jl
movsb
mov
push
adc
popf
or
in
and
push
arpl
push
int3
pop
data16
fdivs
insl
push
push
fsubs
out
add
push
lds
dec
mov
fadds
nop
pop
mov
icebp
mov
shll
loope
faddp
push
popa
dec
test
mov
jo
lretw
mov
test
fs
and
fisubs
lahf
pop
xchg
loope
push
jae
pop
jmp
adc
inc
cli
test
cmp
fisubl
nop
and
xchg
daa
fiaddl
rcll
inc
sub
adc
adc
lock
inc
aam
test
adc
xor
sbb
adc
out
call
add
mov
mov
xor
mov
shrb
mov
sbbl
mov
sbb
push
cltd
push
mov
adc
test
jmp
sub
add
add
cmpsb
and
push
jle
out
pop
or
adc
or
adc
idivb
cmp
fcmovbe
cmpsb
cmp
fstps
add
mov
lahf
lcall
mov
push
mov
das
adc
adc
mov
lcall
dec
or
cmp
pop
ret
mov
dec
mov
sub
xor
int
adc
or
addr16
xchg
shr
cmp
insb
pop
mov
ds
out
outsb
add
adc
out
jg
lds
mov
or
adcl
mov
daa
sbb
cmp
ret
inc
lahf
iret
adc
jl
flds
jecxz
mov
int3
nop
int
shrb
sbb
jo
call
scas
mov
scas
fnsave
cltd
xchg
sahf
fisttpll
mov
push
rolb
stos
lcall
outsl
pusha
jge
lret
or
xchg
data16
jg
lods
in
xchg
scas
cmc
mov
stc
fdivl
ja
aam
rolb
outsl
xchg
xlat
repnz
fisubrl
xchg
aam
add
icebp
pop
sub
scas
sbb
adc
into
dec
stc
mov
popf
dec
add
movsb
aam
fcompl
aad
cmpb
sbb
push
xchg
sbb
pop
es
inc
mov
jmp
jg
and
addl
aad
subl
sbb
int3
pop
adc
or
leave
xlat
sub
push
push
imul
sub
insl
xchg
add
xlat
pop
leave
pusha
pop
sub
xor
inc
iret
xchg
clc
add
cmp
ret
clc
xchg
icebp
sbb
jecxz
mov
fists
mov
sbb
stos
push
stc
cltd
mov
pop
add
push
cwtl
add
pop
xchg
popf
sub
aas
adc
pusha
daa
inc
mov
insb
leave
and
aam
int3
mov
movsb
xchg
pop
xor
sbb
das
pop
sbb
loopne
inc
and
cmp
pop
sti
adc
add
mov
dec
mov
add
push
popa
nop
or
mov
mov
aam
in
movl
or
loopne
push
mov
orl
iret
in
mov
or
cli
pop
jecxz
popf
pop
mov
add
xor
lock
mov
xchg
test
lods
sbb
push
pop
insb
data16
xchg
lods
cs
out
not
xchg
nop
cwtl
mov
pop
mov
mov
repnz
cmc
mov
pop
xchg
pop
jmp
test
push
jle
xchg
lods
mov
ret
adc
cmp
stos
lahf
aas
xchg
into
cmpsl
push
or
lret
jae
inc
mov
ror
xchg
add
aaa
jo
mov
fs
das
and
popf
jp
inc
push
out
and
dec
pop
push
arpl
add
xchg
pop
push
mov
jnp
dec
pop
cmp
js
mov
push
daa
sarl
push
stc
insb
mov
xor
daa
jbe
lea
sub
inc
cmp
iret
test
sar
adc
pop
mov
adc
xor
std
fisubrl
push
xchg
movsl
sub
cwtl
lea
lock
imul
xlat
xor
pop
ret
cmp
push
mov
and
dec
outsl
push
mov
int
adc
dec
ror
add
mov
fildl
enter
cld
cwtl
in
ljmp
sub
ds
push
push
pop
repz
pop
jnp
or
cli
adc
out
out
mov
xchg
mov
add
push
and
dec
or
ss
and
mov
addr16
or
xor
popa
or
xchg
or
andl
xlat
ds
or
adc
or
das
idiv
jbe
push
frstor
int
pop
jmp
out
or
cmp
sub
cmp
fs
out
movsl
pop
fs
cmc
add
add
pop
jbe
sbb
repz
cmp
push
add
mov
lock
jbe
add
addr16
addr16
add
mov
pop
sbb
std
insl
jle
scas
sbb
adc
add
notl
pop
loope
ds
add
mov
daa
inc
mov
pop
sbb
mov
or
mov
out
add
mov
stc
arpl
icebp
add
jo
mov
xor
jmp
mov
stos
arpl
or
ja
pusha
stos
sbb
add
jno
aad
enter
pop
or
sub
pop
cwtl
mov
je
mov
pop
mov
push
mov
pop
pusha
test
mov
pusha
jno
or
pop
sbb
add
outsl
sbb
adc
aas
inc
jp
shll
cltd
inc
out
test
int3
loop
fdivrs
pop
xchg
jne
insb
outsb
popa
shl
push
or
movsb
jnp
stos
jno
loope
xorl
mov
insl
dec
sbb
push
lock
outsb
out
mov
pop
sbb
iret
loop
adc
popf
fsubp
cmpsb
ljmp
xchg
xchg
sti
jg
mov
stc
jae
stos
cwtl
or
inc
sbb
test
and
jecxz
aam
out
in
mov
decl
shll
pop
mov
aad
pop
adc
add
pop
movsl
inc
inc
movsb
in
sub
or
stos
test
jl
mov
fwait
stos
xchg
dec
icebp
int3
mov
es
out
push
arpl
das
and
cmp
cmp
fisttpl
mov
inc
mov
cli
push
loop
lock
out
jge
push
sbb
sub
clc
push
mov
aas
cmp
push
loopne
mov
push
push
sbb
mov
sbb
push
push
mov
pop
int3
adc
inc
inc
aas
out
mov
cwtl
inc
lods
ficoml
shrl
std
rolb
inc
daa
pop
mov
stos
push
cmp
stos
dec
jo
mov
inc
jns
mov
fisubrl
mov
daa
aaa
lahf
clc
add
insl
fildll
lcall
inc
aad
fdivrl
pop
test
ret
sbb
sarl
add
add
inc
and
push
jg
jno
cmpsb
or
faddp
inc
cmp
dec
cmp
adc
call
pop
xchg
lcall
sti
sbb
push
dec
jmp
pop
mov
repz
mov
testl
sub
sub
mov
or
or
inc
insb
pushf
add
pop
not
or
sahf
adc
xchg
sti
fisttps
out
and
shr
lock
ror
push
ret
pop
push
or
lahf
xchg
sub
xlat
push
pop
movb
sub
push
mov
out
pop
ss
lock
setle
mov
dec
lcall
add
fcomp
add
dec
mov
fcmovnu
aaa
xor
out
shlb
mov
mov
push
cmpsl
dec
lret
jge
inc
xchg
xor
mov
adc
jmp
jbe
mov
adc
pop
stos
movsb
sub
fiaddl
aam
dec
jecxz
mov
xor
out
inc
push
jno
loop
sbb
mov
aad
in
push
dec
imul
test
mov
jmp
add
push
mov
out
gs
mov
push
xchg
sub
dec
push
test
fs
mov
add
pop
sub
shr
mov
sub
dec
add
add
fs
adc
or
ret
data16
out
push
mov
test
movsl
loope
ret
push
sub
push
xchg
mov
xor
popa
imul
out
sbb
push
movsb
mov
lcall
sub
cmp
lds
mov
lcall
pop
or
add
std
loopne
outsl
inc
mov
jno
test
cmp
insl
shrl
adc
sub
test
test
mov
push
mov
mov
movsl
iret
sbb
stos
inc
daa
or
subb
jge
add
mov
mov
in
ljmp
outsb
mov
jg
mov
test
lds
push
loopne
cld
jecxz
aaa
int
call
or
push
add
jecxz
add
lret
outsl
xchg
popa
fwait
outsl
mov
and
popl
mov
nop
icebp
inc
xchg
js
push
mov
jecxz
mov
movl
mov
imul
movsb
push
subl
pop
and
test
mov
movsl
bound
out
cmc
sbb
das
pushf
test
mov
push
insb
pop
daa
mov
jae
repnz
bound
imul
sub
lock
push
ja
scas
mov
inc
mov
daa
test
and
cmp
out
jbe
sti
ror
aaa
adc
mov
daa
xchg
sar
mov
stos
loope
xor
das
mov
sbb
cmpsb
lret
mov
incb
xchg
stos
or
clc
dec
repz
aas
push
xor
cmpsb
adc
gs
mov
mov
jmp
ja
imulb
pusha
push
mov
sti
fimull
in
mov
jns
jbe
stos
inc
jl
repnz
scas
sbb
push
popa
fcomi
dec
jl
sti
mov
cmp
pop
mov
xlat
je
lea
xlat
and
fst
shlb
mov
aam
dec
arpl
mov
in
daa
push
loope
sbb
jmp
push
ja
fprem1
sbb
jae
or
or
pop
movsl
mov
leave
and
add
ret
ljmp
add
inc
lds
sbb
mov
loope
mov
jmp
mov
or
frstor
xchg
hlt
or
jle
sbb
pop
lods
and
fmuls
bnd
push
cli
movb
add
xor
out
adc
jo
jp
lahf
pushf
mov
jmp
out
mov
pop
cmpsb
push
dec
mov
int
sbb
jae
pop
ret
in
add
lcall
lock
ret
add
mov
mov
mov
and
popl
not
dec
pop
mov
or
inc
shr
pop
fwait
push
xchg
loopne
gs
lea
out
inc
lock
call
and
add
lods
pop
call
nop
jnp
mov
shlb
aad
jmp
lods
xor
lods
scas
mov
sbb
mov
sub
add
aad
js
inc
mov
aam
or
mov
cmp
push
movsb
dec
xchg
fildl
js
xchg
xchg
sbb
insl
scas
sbb
mov
dec
ss
outsb
push
sbb
xchg
mov
push
addr16
arpl
aad
cmp
xchg
sbb
mov
inc
or
mov
aaa
pop
outsl
xor
mov
jge
rol
ja
nop
mov
faddl
or
ljmp
inc
loop
in
lea
pop
jp
gs
pushf
pushl
push
jl
mov
testb
test
and
mov
stos
mov
inc
push
fcoml
sbb
and
js
pop
in
jg
cmp
xor
and
mov
clc
cmp
xor
mov
xor
fwait
xor
fistpl
arpl
cltd
xor
js
fimull
inc
and
jo
jne
xor
cmovge
adc
mov
push
js
add
push
cmp
inc
testl
xchg
sbbl
dec
cmpsb
into
jmp
insl
sbb
sbb
clc
xchg
xchg
sub
lods
mov
pop
xor
cmpsl
lds
mov
jbe
push
test
ret
jp
sub
adc
jne
ret
sbbb
mov
add
les
jecxz
mov
inc
mov
jne
orl
jl
mov
in
cmp
lret
fs
lods
dec
sbb
pop
lret
adc
jge
ret
xchg
cld
rol
xchg
int
rcll
mov
push
mov
fcmovbe
cs
jae
jns
rcrb
inc
pop
lds
push
sbb
pop
and
sub
or
incb
ss
mov
test
and
fwait
shufps
xor
xchg
movsl
das
or
ljmp
jae
lds
push
outsl
mov
fisubrl
pop
sbbb
das
mov
cmp
pop
mov
mov
insl
mull
adc
add
inc
test
sub
stos
mov
iret
push
mov
mov
xchg
sahf
cltd
xor
or
xlat
inc
xlat
jbe
or
pop
and
loop
jecxz
add
rclb
rorl
cmp
xor
fs
adc
mov
and
imul
insb
fistps
jb
or
test
fistpll
bound
roll
cmc
cmp
test
pop
nop
mov
cld
mov
sbb
jae
cltd
cmp
rcrb
pop
mov
fiaddl
into
nop
xchg
shlb
cmpsb
fsubp
mov
inc
inc
add
stc
jo
rcrl
add
cmp
insl
mov
sub
xchg
cmp
push
add
xchg
adc
ja
fninit
roll
imul
xchg
sbb
rcrl
hlt
mov
pop
rol
shrw
subb
in
cmp
ljmp
divb
inc
inc
and
adc
pop
mov
xorb
inc
mov
inc
mov
xor
jl
adc
mov
in
lret
loope
aaa
divb
outsb
sub
mov
jge
lock
xchg
int
adc
call
bound
and
loope
aad
leave
arpl
and
sti
fisttpll
adc
pushf
mov
jl
call
sub
xor
js
mov
add
movsb
test
inc
ret
shlb
flds
add
adc
iretw
xor
mov
push
dec
xlat
cld
xchg
repz
cmpsb
xchg
sahf
ss
arpl
hlt
or
cmp
inc
adc
outsb
push
pop
mov
pop
inc
call
cwtl
mov
mov
dec
addl
xchg
mov
inc
mov
xchg
jmp
jbe
je
lds
sub
mov
mov
mov
jnp
pop
clc
test
pop
sub
mov
fdivp
ficoms
or
jbe
or
out
ficompl
dec
aaa
sahf
iret
ficomps
and
je
sub
cmp
fcomi
in
or
push
inc
fwait
in
repnz
mov
out
and
inc
jo
loop
xchg
mov
add
add
enter
lcall
add
fisubrs
repz
cmp
cld
fstl
gs
lret
arpl
cmp
sub
xchg
sub
sub
in
pop
xchg
stos
hlt
add
and
imul
rcll
push
adc
in
jle
test
iret
inc
inc
push
adc
mov
cmpsb
movsl
xchg
fnstenv
xchg
xchg
incl
les
add
test
mov
repnz
inc
out
lods
pop
add
ds
dec
lret
in
mov
sub
lea
fidivrl
rcrb
lea
adc
test
in
sub
int3
in
xchg
mov
pop
and
fs
mov
sbb
cmp
scas
loope
cs
repz
cmpb
test
pop
dec
cmp
leave
mov
orl
jae
ret
lds
dec
fsts
adc
cltd
pushf
adc
adc
daa
xor
rcll
out
lds
sbb
vmaxsd
add
dec
lret
test
inc
pop
in
cmp
outsb
cmp
dec
insb
or
in
sub
xchg
in
lds
arpl
mov
fisubrs
sti
je
add
fwait
mov
jmp
fwait
adc
dec
js
dec
call
xor
jbe
mov
adc
scas
vpaddsw
dec
fldl
mov
and
lcall
loopne
and
push
adc
jmp
mov
call
fsubr
xor
adc
adc
add
shrl
xchg
cmpsl
adc
sub
cmpsb
lds
test
pop
shlb
outsb
insl
bound
scas
subl
into
sbb
xorb
addr16
testl
xchg
call
outsb
insl
in
arpl
jmp
jmp
mov
aam
je
lret
je
ljmp
pop
insl
arpl
test
mov
push
mov
sbb
jmp
andb
js
add
cmc
adc
jno
pop
dec
or
or
mov
push
sti
jbe
push
pushf
pop
inc
jbe
imul
dec
mov
sub
and
out
fwait
sbb
daa
mov
in
pop
xor
call
ljmp
adc
push
add
sub
pushf
mov
jae
mov
cmp
pop
mov
mov
arpl
jae
push
mov
pop
insb
cmp
cmp
sarl
int3
mov
scas
add
pusha
add
push
cmp
cli
inc
push
out
pop
popf
sub
ret
sbb
inc
lds
jno
decl
fildl
roll
add
inc
ja
mov
sub
insb
mov
jo
es
cltd
xor
jno
xor
sbb
int
scas
mov
ss
scas
clc
pand
fwait
xchg
mov
sub
mov
sub
pop
dec
mov
repz
cmp
ja
mov
mov
pop
mov
loope
cmp
push
mov
mov
xor
and
sbb
add
subl
test
jne
add
push
adc
xchg
jnp
mov
lcall
insl
push
pop
mov
repnz
xchg
jl
sbb
sahf
pop
fcomps
cld
hlt
cli
arpl
pop
xchg
adc
lcall
leave
cli
mov
or
xchg
add
add
xchg
cmpxchg
inc
push
in
jp
call
pop
fadds
jb
addr16
dec
push
sbb
lds
dec
adc
mov
pop
test
xchg
hlt
cmpl
out
mov
push
push
push
add
or
inc
mov
jle
xor
fistl
mov
mov
popa
fucomi
xchg
je
dec
pop
mov
xchg
rcrb
int
xor
fdivs
insb
cld
pop
mov
mov
testb
aas
fs
xchg
and
xchg
and
mov
or
daa
xchg
add
adc
loopne
cmp
pop
popa
jae
pop
sahf
popf
push
adc
inc
leave
xor
dec
sub
push
in
fcmovne
add
sub
outsl
sub
pop
fs
xor
mov
in
xor
and
lea
xlat
xchg
xor
leave
or
mov
popf
fsubrl
pop
pop
call
es
pop
push
push
mov
dec
cmp
ds
sub
fucomip
and
add
js
add
xchg
outsb
aad
mov
cltd
and
sub
ret
shl
movsl
pop
pop
fcoml
aam
test
mov
xor
stc
fdivs
jb
loopne
daa
adc
push
aam
mov
mov
daa
fcomip
mov
or
out
jmp
add
andl
lods
pop
adc
imul
inc
mov
cmp
rolb
ficomps
repz
sti
mov
pusha
lret
pop
cmp
bswap
fs
or
pop
xlat
inc
pop
dec
sbb
jl
xor
fnstsw
xor
je
or
outsb
or
mov
mov
pop
test
popa
dec
sub
or
vshufps
popf
mov
test
fiadds
sub
mov
mov
jno
imul
mov
fisubs
in
out
data16
nop
cmp
inc
arpl
shrb
in
xchg
daa
and
pop
gs
inc
pop
jg
xorb
sbbb
mov
sti
pop
sub
jl
gs
shlb
jg
jns
fsubrl
mov
outsl
xchg
add
data16
and
fsubr
gs
pusha
xchg
pop
push
mov
or
in
es
add
mov
fildl
cmpsb
sub
sbb
pop
adc
push
xchg
dec
jae
outsl
iret
cmpsb
outsl
insb
in
or
loop
inc
bound
ficoms
sahf
int3
and
cmpsl
adc
cld
push
shl
fsubs
pop
jo
pop
xlat
pop
out
mov
pop
add
adc
pop
mov
lock
fistpl
movsl
mov
test
mov
jge
divb
repnz
xchg
and
shll
cmp
mov
mov
jbe
fwait
sbb
mov
leave
inc
test
mov
add
test
fnstenv
ljmp
push
adcl
bound
cmp
insl
outsb
adc
add
lods
ljmp
and
es
sbb
xor
leave
mov
mov
addr16
popa
xor
iret
cld
or
push
jp
mov
cmp
mov
xor
jge
xchg
jmp
sub
sti
je
frstor
add
cmpsb
sbb
dec
std
imulb
je
mov
scas
fistl
mov
push
insb
fisttpll
xor
pop
xchg
popa
loop
test
add
or
xchg
mov
pop
mov
ficompl
stos
or
jne
mov
xchg
jne
iret
pop
mov
pop
mov
ret
adc
dec
xchg
dec
int
inc
xor
icebp
adc
insl
icebp
out
add
mov
ja
cld
insl
fcmovnb
popf
cmp
rorl
push
lea
pop
or
jne
and
xlat
push
jge
adcl
mov
shrl
dec
or
mov
inc
test
outsl
xchg
cmc
mov
jl
mov
xor
mov
push
sub
scas
or
inc
fs
or
aaa
int
test
shrl
xor
repz
cmp
sub
jge
pop
mov
int3
in
adc
adc
push
shll
leave
xchg
mov
lock
push
mov
mov
or
pop
xlat
insb
push
adc
pop
adc
repnz
xchg
loop
and
adc
notb
int3
in
bound
push
cmp
test
pop
mov
lea
shr
int
cmp
add
sub
push
xchg
pop
xchg
ss
jns
je
outsl
je
jne
imul
hlt
mov
push
mov
or
nop
dec
jb
cld
into
sbb
insb
insb
pop
ror
cli
xchg
sub
pop
add
push
into
iret
adc
out
outsb
sub
movsl
sbb
fdivs
add
mov
lods
pop
cmpsl
aas
loope
dec
xchg
int
jno
mov
jg
mov
inc
scas
inc
sbb
sub
inc
push
mov
loopne
loopne
and
xor
out
in
mov
dec
dec
sahf
mov
mov
mov
mov
xor
adcb
mov
pop
mov
lods
sub
jbe
cs
sbb
and
fcom
cld
sub
rorb
shr
xchg
outsb
pop
sub
inc
dec
loopne
pop
rol
or
mov
arpl
es
fcomi
cmp
sub
jmp
push
gs
inc
insl
pop
push
idivb
mov
dec
sub
jbe
xor
scas
outsb
rcl
mov
inc
jmp
sbb
cmp
inc
mov
in
ja
arpl
loopne
jnp
mov
lods
mov
xor
dec
jnp
jns
movsl
je
jo
inc
arpl
sti
mov
mov
out
jbe
xor
aad
cwtl
fcmovbe
inc
fdiv
sub
test
sub
mov
xorb
jmp
ljmp
or
xchg
mov
or
pop
cmp
jae
or
ret
out
lds
mov
leave
and
sbb
andb
movsb
mov
test
les
sbbl
int
subb
cmp
ja
fimuls
scas
rcrl
das
add
sti
or
push
or
test
push
pop
sti
or
outsl
xor
jne
les
mov
aaa
dec
sbb
imul
mov
jp
test
mov
dec
aaa
pop
dec
push
sbb
push
sub
test
rclb
dec
push
inc
xlat
rol
jbe
mov
gs
mov
leave
and
push
icebp
inc
inc
sub
mov
les
fstpl
lea
xlat
jae
jecxz
lea
sub
jge
nop
cmpsb
jecxz
lock
add
sub
je
sub
std
test
sarl
ds
pop
int
fstpt
stc
sbb
fildl
cmpsb
rcrl
jg
or
pusha
mov
pop
rcrb
push
stos
pop
and
mov
inc
adc
mov
adc
xlat
ret
je
adc
or
dec
jl
test
or
dec
or
push
ret
jecxz
decb
sbb
add
xchg
lods
out
adc
xor
mov
add
sbb
fsubrl
xor
sub
pop
mov
or
lea
xchg
mov
pusha
dec
dec
xor
data16
cmc
inc
inc
inc
adc
pop
adc
testb
fidivrs
xorb
push
jecxz
into
out
bnd
lcall
loope
jno
icebp
mov
pusha
cmp
enter
test
mov
inc
pop
lods
cli
pop
clc
in
outsl
mov
scas
mov
mov
mov
add
aaa
add
and
mov
push
test
sub
jp
scas
pop
fmull
adc
sbb
clc
negb
fstpl
hlt
xor
shlb
pushf
push
and
pop
das
pop
hlt
imul
cmpsb
xor
insl
arpl
leave
dec
test
adc
sbb
cltd
mov
or
dec
sub
and
out
pop
jl
or
inc
mov
add
fsubrp
clc
fcmovb
loop
or
ljmp
pop
test
pop
cmp
xchg
fs
mov
add
stos
xor
mov
mov
imul
movsl
jge
pop
fistpl
std
mov
add
add
inc
mov
cs
sbb
lods
lods
or
pop
push
ds
aad
cmp
aam
mov
cmc
test
ljmp
fucomp
cmp
imul
jmp
xor
adcl
movsb
mov
fimuls
xchg
xor
scas
movsl
push
mov
jbe
mov
fidivs
lahf
and
mov
dec
imul
int3
mov
rorl
and
mov
cmpsl
xchg
pop
xchg
sub
or
divl
or
sbb
sbb
add
sbb
xlat
loop
mov
out
mov
xor
pop
or
arpl
scas
jno
ja
push
adc
pop
pop
jo
xchg
adc
sti
pavgw
and
mov
daa
ret
or
xor
aaa
mov
fcom
add
xor
mov
or
inc
pop
pop
push
mov
adcl
insb
lods
lahf
push
jmp
sti
daa
xlat
das
dec
scas
jmp
pop
push
imul
mov
jge
jnp
pop
dec
adc
mov
xchg
dec
xor
jle
into
insl
hlt
xor
clc
xor
xor
jnp
jmp
pop
adc
mov
adc
data16
ljmp
xor
inc
sahf
scas
imul
mov
jnp
jne
stc
add
stos
and
add
mov
fdivs
dec
lret
pop
pop
jnp
or
aas
xchg
add
addr16
aas
xchg
adc
push
scas
sbb
xchg
outsl
in
stc
lcall
aaa
ret
xor
sbb
add
enter
add
inc
push
push
arpl
fsubl
pop
jecxz
cmp
add
cmp
fidivrs
cmp
adc
cltd
pop
or
add
fcomp
stos
pop
pop
adc
adc
cltd
adc
ss
lea
ret
or
sbb
fstpt
test
int3
icebp
mov
or
mov
push
sbb
scas
mov
cmp
or
cmp
lea
push
fwait
add
imulb
repz
push
lret
add
jbe
cmp
xor
sbb
cmp
mov
cmp
fcomps
scas
and
xchg
jmp
and
sbb
pop
jp
dec
cmp
cmp
int
outsl
adc
mov
ss
and
add
cmp
cmp
add
cmp
mov
movsb
or
push
pand
fisubrs
daa
lret
xor
push
adc
xchg
cmp
or
imul
cs
es
and
add
mov
cmp
pop
push
outsl
ja
fidivrs
add
or
sbb
pop
add
xor
mov
ja
jg
out
insb
mov
jnp
inc
sbb
push
xor
pop
cmp
adc
sub
sti
lret
jge
dec
xlat
push
and
sbb
add
mov
adc
mov
xlat
sahf
or
jae
jne
push
es
cmp
mov
add
sbb
or
arpl
int
push
jnp
jnp
inc
popf
lea
adc
push
and
fwait
or
mov
div
sahf
iret
mov
dec
add
orl
cmpsl
or
addr16
fildl
add
add
rcl
push
roll
mov
ja
fwait
pop
pop
ffreep
sbb
ret
adc
add
sahf
ss
daa
fildl
and
xor
loop
out
xor
lds
jae
add
cmp
mov
cmp
das
cmpsl
ja
or
out
jmp
pushf
jge
repz
adc
adc
call
push
add
add
inc
add
das
add
and
or
mov
add
call
push
jnp
xchg
xor
xorl
xor
add
push
sbb
adc
add
imul
pop
cmc
ss
andl
sbb
fcom
xchg
in
sbb
adc
add
pop
add
xlat
or
adc
or
lds
push
push
call
pop
jbe
cmp
mov
in
pop
sub
mov
and
mov
cs
neg
fnstcw
pusha
sbb
ja
or
loope
pop
dec
inc
push
das
jo
xchg
sub
imul
pop
ficoms
jle,pt
mov
inc
mov
or
push
adc
mov
adc
jnp
mov
cmp
fs
in
mov
ret
push
mov
push
mov
addr16
imul
mov
subl
dec
sub
xchg
inc
cmp
pop
fnstcw
sbb
dec
dec
mov
sub
test
addr16
call
dec
pop
or
cmp
cli
shll
ret
fnstenv
dec
test
scas
rcrl
dec
pop
or
fildll
out
dec
aad
cltd
jno
fidivrl
inc
sbb
popa
imul
iret
push
cmp
and
cltd
or
lods
and
sbb
and
hlt
or
fcmovu
insb
sbb
sbb
adc
jns
xchg
lods
lea
jp
or
fbld
dec
and
xor
incl
dec
sbb
push
mov
mov
and
push
mov
or
and
jne
filds
push
and
in
insb
sub
push
or
inc
and
or
hlt
sbb
dec
mov
push
aad
bound
icebp
or
fnstcw
sub
outsb
push
sbb
jmp
pop
mov
and
jbe
sti
pop
sbb
or
dec
push
and
mov
and
jb
jno
cld
or
daa
xor
dec
sarb
inc
inc
out
popf
jb
addr16
inc
mov
sub
or
outsb
test
xchg
movsb
jae
xor
push
inc
mov
movsb
test
mov
sbb
jnp
jecxz
mov
or
jecxz
pop
or
ret
pop
iret
in
mov
sar
fwait
ds
dec
sbb
or
xchg
decl
ret
pushf
sbb
insb
rclb
out
lds
ret
add
mov
sbb
and
adc
mov
popa
out
add
sahf
ss
aaa
add
and
stos
or
fisubl
adc
aas
std
and
data16
insb
imul
adc
inc
push
pop
mov
cmpsl
mov
dec
inc
in
and
sbb
push
sbb
enter
mov
add
scas
mov
fdivs
and
out
divb
mov
in
int3
jns
aas
adc
dec
cmp
and
addb
add
aaa
pop
out
push
sbb
push
loope
cmpsb
gs
jo
test
push
ljmp
popa
sub
sub
xorb
data16
arpl
dec
cmp
adc
sbb
jg
int3
mov
add
jmp
out
pop
sub
or
test
into
push
leave
jl
sbb
push
lods
sub
sbb
add
dec
data16
dec
fmuls
les
icebp
pop
jbe
fnstenv
mov
pop
add
repnz
or
and
push
and
mov
hlt
movsb
test
push
es
outsl
adc
jp
ret
xchg
sub
add
inc
in
test
dec
jnp
lock
dec
filds
adc
fadds
push
lea
andb
sahf
sbb
fsubs
adc
adc
xchg
dec
sbb
popa
jbe
dec
outsb
bnd
ja
mov
shrb
test
add
sbb
mov
addr16
fcoms
imul
dec
push
add
add
xor
data16
fisttps
mov
dec
clc
cmp
push
jo
add
push
pop
xchg
push
push
or
and
scas
inc
pop
mov
aas
add
and
or
adc
shrl
mov
xor
insb
and
in
mov
popa
push
mov
jnp
or
mov
inc
adc
sub
adc
or
mov
sub
shll
mov
cmpsb
push
xchg
mov
fdivs
adc
das
mov
xor
test
fnstenv
and
ds
shll
cs
mov
scas
sbb
and
pop
test
arpl
and
fnstenv
or
and
in
test
and
and
xchg
outsl
das
and
lea
sub
mov
pushf
inc
xchg
and
jbe
lea
mov
mov
xchg
ljmp
inc
add
mov
sbb
push
adc
xchg
adc
sbb
popa
sbb
nop
test
gs
fmuls
data16
sub
push
mov
test
scas
xorl
movsb
xlat
push
add
add
xor
dec
cmp
and
adc
imul
xor
aam
mov
divl
mov
sbb
into
loopne
push
outsb
arpl
push
scas
stos
adc
filds
jb
jg
jae
aaa
cmpsb
cmp
jae
mov
mov
adc
fucomip
fisttpll
mov
jge
cmc
dec
push
xchg
fwait
and
cwtl
push
xor
jbe
jae
and
and
std
and
and
mov
push
in
sub
call
mov
insb
in
adc
add
and
and
pop
mov
cmp
pop
loopne
mov
inc
iret
or
dec
divb
add
push
and
adc
pop
fnstenv
flds
mov
and
mov
push
addb
sbb
sub
pop
outsl
adc
icebp
andl
cmpsl
js
fisubs
push
sub
roll
ficoms
cwtl
xor
sbb
bound
xchg
sub
inc
in
icebp
bound
mov
popl
sub
lret
std
sub
xchg
pop
add
test
data16
sub
insl
or
mov
fwait
inc
insb
inc
rolb
push
push
mov
push
push
bound
xchg
mov
adc
mov
xor
sbb
sbb
mov
add
push
lea
cs
lea
enter
push
sub
add
data16
arpl
fnstenv
mov
pop
cmpsl
es
sbb
ss
negl
inc
inc
insb
dec
and
dec
mov
fbstp
and
gs
xchg
or
sbb
aaa
loope
dec
xlat
pushf
sbb
xor
aam
ja
dec
sub
jo
lods
popf
lds
pusha
sbb
or
add
push
xchg
inc
dec
dec
dec
outsl
test
pushf
addr16
fwait
in
dec
adc
pop
and
push
and
jg
and
xchg
xchg
roll
xchg
adc
add
sub
or
clc
cmp
dec
out
imul
popa
or
scas
cli
shll
sbb
mov
pop
test
pop
adc
nopl
inc
push
sbb
xlat
cmp
aaa
adc
lods
sbb
cmp
adc
mov
jbe
push
sbb
sbb
out
ja
add
jg
fiaddl
es
shrl
add
xlat
lcall
pusha
pop
lods
idivl
push
sbb
aaa
push
shll
insb
test
aas
ss
sbb
aad
outsl
es
subl
add
xor
in
inc
roll
movl
in
sbb
ss
inc
sub
sbb
jns
aas
sub
das
jnp
push
sbb
sbb
pushf
push
adcl
std
mov
pop
testl
add
lock
jne
pop
add
cmp
add
jle
add
nop
sub
iret
repz
addr16
stc
add
jno
test
adc
pop
scas
aaa
sti
add
gs
pushf
cmp
es
mov
mov
mov
std
add
lods
add
fstps
lea
icebp
sbb
enter
daa
adc
imul
mov
push
and
add
stos
add
movsl
inc
sub
lcall
mov
or
cs
in
rolb
mov
lds
push
in
and
loopne
cwtl
sub
ds
mov
lods
ret
xlat
pop
jno
adc
sub
cs
aas
sbb
add
mov
es
lock
dec
ljmp
pusha
and
sub
inc
dec
pop
or
push
pop
dec
mov
xchg
test
sbb
adc
fstpl
push
js
push
inc
push
push
rcll
lock
push
mov
fstpt
cmp
dec
push
xor
jb
mov
or
jae
mov
imul
xorb
cmp
jns
bnd
push
ja
jb
jne
add
sahf
cmp
mov
cmp
jp
xchg
dec
push
jmp
out
adc
pusha
bound
inc
mov
jl
xor
inc
dec
add
into
inc
adc
jge
dec
inc
jns
xor
push
add
pop
jl
repz
add
add
stc
inc
jns
adc
fdiv
outsl
outsb
insl
ja
sbb
clc
jne
daa
and
scas
push
add
inc
sti
dec
push
sarl
mov
mov
sarl
stc
jg
xor
cmp
adcb
sub
add
jno
add
gs
or
xchg
pop
xchg
and
call
imul
lea
addb
sbb
mov
imul
inc
lea
or
flds
inc
and
dec
jae
incb
add
add
and
sti
mov
and
aam
inc
mov
addb
jae
pop
push
fs
repnz
cmp
add
or
or
es
cmc
add
leave
cld
push
add
xor
and
add
mov
arpl
jg
adc
inc
loope
mov
cmp
hlt
add
jnp
push
jns
cld
decb
insb
mov
jbe
ja
add
cmp
jae
imul
xchg
cli
in
or
gs
hlt
cmp
fwait
jnp
and
imul
fisubs
add
lods
mov
gs
lcall
popf
xor
movsb
xorb
add
arpl
bound
or
idiv
clc
lret
lds
or
xchg
je
cld
add
insb
push
outsb
jns
add
repnz
sub
pop
inc
cmpb
jne
repnz
les
out
sbb
gs
adc
stc
clc
addl
repnz
sbb
outsl
mov
cltd
jle
sbb
xor
mov
or
jnp
pop
addr16
jnp
fsubl
pop
loop
or
jl
mov
jne
push
add
adc
test
jo
jo
add
es
add
je
mov
lock
js
xlat
int
je
jbe
jne
addr16
mov
js
jb
xor
inc
lea
imul
mov
lods
leave
push
xor
int3
sbb
add
jl
cwtl
sti
cli
test
or
inc
in
or
xchg
or
test
mov
xchg
repnz
push
fisttpl
jl
in
ret
push
mov
add
pop
and
dec
inc
dec
inc
jle
jg
outsl
push
push
pop
adc
inc
or
push
lods
stos
inc
push
sbb
lret
sbb
and
xor
pop
mov
push
movsb
cltd
and
add
add
rcrb
sahf
add
or
adc
data16
jnp
xor
sbb
mov
push
jo
loop
fdivp
movsb
dec
xchg
sbb
mov
fnstenv
cmp
loopne
lea
cmp
mov
std
sub
or
adc
push
dec
cmp
je
int3
test
cmp
xchg
mov
and
push
popf
or
fistpl
pop
testb
jecxz
int
jno
sbb
push
xor
loope
insl
fisubs
xor
ret
push
into
mov
sbb
in
arpl
push
inc
push
cmpb
mov
add
add
loop
imul
loopne
dec
sbb
dec
fmulp
cwtl
dec
sbb
and
out
sbb
call
mov
dec
push
xchg
shll
push
adc
pop
repnz
arpl
add
xor
mov
nop
mov
test
ja
add
test
inc
bound
push
sub
mov
imul
mov
pop
in
add
into
cwtl
rolb
mov
pop
adc
insl
lret
repnz
mov
js
scas
test
push
sbb
lods
shlb
mov
dec
movb
mov
mov
mov
mov
rol
fistpl
pop
outsb
cmp
pop
outsb
out
sbb
mov
inc
outsl
add
ret
sub
add
cmpl
dec
inc
fwait
in
cltd
popf
ljmp
ja
mov
pop
xchg
cmp
lock
push
cmc
push
lret
and
sbb
sbb
je
mov
pushf
push
outsb
push
bound
dec
cmp
int
aaa
adc
adc
dec
addb
and
rolb
pop
dec
jb
mov
dec
dec
dec
inc
sbb
push
lahf
pop
andl
maxps
vpcmpeqw
pop
cmpsl
js
out
in
rclb
test
data16
pop
hlt
aas
daa
outsl
push
jg
mov
imul
dec
ds
inc
push
test
addr16
jbe
test
sahf
inc
dec
test
jg
repnz
inc
add
dec
dec
pop
inc
push
and
aam
pushf
cmpb
push
pop
dec
test
movsb
push
and
shll
add
mov
out
inc
inc
dec
sbb
popf
inc
cmp
int
or
dec
pop
sbb
cmp
dec
add
stc
dec
sbb
xor
movsb
xor
ret
cmp
testb
cmpsl
jae
sbb
mov
fldt
dec
xor
push
cmpsb
pusha
nop
imul
or
push
add
outsb
push
jno
jbe
jae
cmp
sbb
add
jge
inc
sbb
push
mov
sbb
aaa
dec
pop
fcmovu
pop
imul
aaa
cmpl
jnp
pop
pop
adc
xor
dec
dec
fs
imull
ret
adc
in
ja
mov
mov
daa
xchg
add
inc
inc
xchg
clc
imul
subl
mov
in
adc
and
cld
xor
sub
dec
push
sbb
insl
mov
sbb
inc
inc
sbb
pop
imul
sbb
and
and
inc
inc
inc
and
popa
jae
fldenv
fs
les
nop
and
mov
inc
ret
outsb
or
outsb
inc
inc
push
or
imul
push
inc
push
arpl
xor
and
dec
jo
scas
pop
inc
jle
pop
shlb
pop
pop
push
cmp
fwait
aam
outsl
decl
jge
sti
cmp
or
aad
lcall
xor
imul
dec
idivb
dec
push
imul
jecxz
and
cmp
mov
or
dec
push
push
imul
sbb
and
dec
mov
ss
mov
mov
loop
jnp
push
sub
lcall
or
cmp
mov
jo
add
mov
sbb
xor
imulb
add
bound
pop
int3
es
pop
aaa
jbe
rcrl
adc
add
ss
outsl
xor
lret
xor
push
jg
add
test
icebp
cmp
push
das
sub
jns
rcr
push
dec
jp
bound
scas
fidivrs
add
adc
jno
pop
adc
js
imul
jae
adc
in
insl
inc
stos
push
cmp
jmp
xchg
adc
shll
jo
push
sbb
push
and
cmp
mov
dec
icebp
sahf
repnz
and
and
orl
hlt
push
inc
inc
and
xor
push
mov
imul
sbb
popa
or
xchg
daa
xchg
adc
push
sbb
lret
push
adc
adcb
inc
dec
add
push
enter
xchg
sub
popa
aam
and
dec
or
mov
fs
pop
inc
push
enter
mov
mov
aam
lock
pop
push
ret
ret
es
xor
add
dec
add
sub
xchg
cmp
fmulp
add
rolb
or
add
popf
add
add
out
pop
scas
cmp
adc
dec
mov
adc
and
push
mov
outsb
jg
mov
addr16
jbe
jnp
adc
mov
ret
push
add
frstor
mov
xchg
sub
imul
fdivs
popf
mov
sub
adc
xchg
es
clc
fisubrl
push
sbb
add
pop
add
add
inc
add
mov
bound
jp
sbb
pusha
sbb
push
mov
pop
sbb
or
or
movsb
pop
mov
ja
je
sbb
and
and
or
sub
fs
and
mov
cmp
cmp
add
fwait
and
xchg
das
daa
or
dec
inc
pop
mov
int
cltd
fisttpl
push
adc
adc
push
jae
mov
ror
push
lds
xchg
mov
sub
xchg
sbb
dec
ret
inc
or
daa
mov
push
fadds
test
lcall
dec
jbe
popf
pop
and
pop
push
add
outsl
test
mov
add
sbbb
pop
dec
pushf
push
mov
mov
push
or
add
push
mov
jae
or
pop
scas
push
out
sbb
xchg
test
add
sub
sbb
jge
jb
jle
je
inc
dec
and
pop
or
adc
fwait
dec
sbb
nop
jmp
inc
and
sbb
cmc
cmp
jecxz
jl
inc
push
or
sbb
mov
add
popa
fwait
jecxz
inc
jo
movsb
adc
ss
lods
outsl
mov
jb
inc
outsb
aaa
add
pop
jbe
add
lds
lcall
mov
cmp
xor
pop
add
test
sub
mov
sub
pop
adc
dec
and
scas
dec
add
loope
add
stos
add
jnp
cmp
adc
cld
mov
add
inc
call
push
pop
pushf
loope
push
adc
push
jb
mov
push
or
pop
mov
dec
pop
adc
push
push
xchg
rcrl
in
pop
inc
mov
dec
test
adc
mov
xor
cmc
and
jae
dec
sub
xor
sbb
cmp
popa
jp
imul
scas
mov
in
pop
fcmovnb
dec
push
test
push
inc
push
pop
jo
cmpsb
inc
pop
mov
sbb
dec
add
or
rcr
int3
dec
dec
mov
or
dec
cwtl
aam
lcall
lea
inc
ret
jmp
aam
and
test
cmp
jnp
fs
xchg
and
popa
sub
dec
sub
fmuls
add
or
lea
popa
and
gs
inc
or
pop
xchg
lods
test
imul
fdivs
pop
or
popa
mov
sub
push
xor
enter
push
lret
test
add
xchg
popf
inc
mov
test
sbb
test
or
inc
inc
cmp
or
pusha
movq
sbb
sbb
roll
sbb
notl
pop
inc
repnz
xchg
or
daa
inc
sbb
pusha
inc
fadds
pop
push
pop
cmp
sub
cwtl
inc
dec
stos
inc
mov
int3
fisubl
in
flds
imul
push
inc
push
pop
fs
and
ds
push
inc
or
inc
jne
add
nop
pop
xchg
sbb
or
inc
and
sahf
cmp
dec
xor
test
pop
push
pop
addr16
nop
or
mov
leave
shrl
rorb
or
sti
pop
shrb
add
dec
xlat
and
xchg
xor
inc
push
inc
push
mulb
cmp
pop
imul
xchg
bound
imul
and
push
or
repnz
pop
lock
hlt
insb
or
add
mov
or
cmp
pop
daa
and
in
test
sahf
pop
insb
daa
into
jo
je
test
das
add
adcb
orl
mov
daa
xor
add
mov
jbe
sbb
cwtl
sti
shll
pop
pushf
dec
scas
or
add
dec
mov
in
sub
lea
inc
add
inc
jne
jo
dec
cld
push
inc
and
push
stos
adc
dec
push
add
out
jge
cmp
incb
test
jno
add
nop
popf
and
mov
add
add
jb
outsb
inc
fidivrs
inc
pop
push
jb
je
arpl
dec
or
outsb
add
add
dec
or
ficoml
xchg
mov
or
je
jns
gs
push
imul
mov
push
jns
gs
js
in
fstpt
outsl
fs
dec
popa
outsb
fs
and
jb
outsb
je
fcmovnu
mov
dec
adc
imul
outsb
jne
inc
outsl
jb
popa
fwait
dec
cmpsb
in
je
push
adc
les
and
insb
sti
in
lahf
or
insl
jo
je
outsl
outsb
push
cmp
push
cmp
adc
pop
sarl
jo
add
cmp
cmc
inc
or
mov
cmpsl
xor
ret
adc
jnp
imul
outsb
dec
dec
gs
push
xor
mov
push
cmpsb
push
sub
adc
jns
mov
movsb
xor
add
lods
sub
xor
and
outsl
sub
outsl
push
adc
push
dec
gs
xor
sbb
push
in
outsb
dec
jb
fcmovb
neg
outsb
sar
jg
cmp
mov
and
pop
cmpsb
sbb
sbb
push
or
jo
in
fsubrs
push
inc
insb
pop
insl
pop
jnp
imul
shll
adc
cmp
cmp
cwtl
imul
lods
jb
test
or
sub
pop
testb
out
or
gs
iret
sbb
sub
rcpps
lods
lea
lds
test
jae
outsl
js
jge
data16
loopne
and
in
inc
insb
dec
pop
inc
loopne
inc
cmc
mov
mov
and
dec
jo
arpl
sub
addr16
inc
outsl
jns
push
push
aaa
pop
xorl
pop
addr16
lods
lcall
adc
dec
sbb
emms
xchg
cmp
gs
arpl
cmp
test
imul
adc
pushl
or
mov
lock
lock
testl
xchg
out
mov
add
push
add
std
imulb
lock
add
push
lock
lock
mov
repnz
jg
add
sbb
or
lock
push
add
mov
add
add
jecxz
mov
fsub
popa
lcall
mov
pop
or
push
fdivl
out
das
popa
add
cmc
jmp
mov
pusha
aad
inc
add
pop
inc
sub
add
pop
xchg
iret
in
add
add
jne
sbb
add
mov
mov
adc
adc
pop
mov
or
andb
stos
cmpsb
mov
add
or
dec
inc
inc
pop
in
ret
nop
jmp
and
or
inc
push
inc
test
add
loop
outsb
jbe
and
inc
rolb
or
aaa
jle
dec
push
add
imul
repz
inc
jmp
mov
nop
daa
add
pop
cmpsb
movsb
push
push
jae
cmp
pop
daa
roll
jl
outsl
sbb
outsb
aam
adc
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
