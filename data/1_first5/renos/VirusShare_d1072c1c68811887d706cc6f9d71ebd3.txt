mov
inc
lea
jmp
mov
push
call
sbb
pop
lods
test
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sarb
icebp
inc
inc
and
xor
or
enter
and
xor
and
sbb
xor
and
decb
in
add
mov
mov
push
push
fistpll
push
cmp
or
pop
ret
pop
mov
mov
arpl
add
shl
mov
mov
ret
nop
aaa
lock
mov
mov
cmp
cmpl
maskmovq
idivl
fldl
add
pop
dec
test
jb
jle
inc
mov
sbb
add
rorb
cmp
or
xchg
out
or
clc
mov
and
xor
mov
outsl
sbb
mov
and
xor
aas
icebp
sub
pop
lock
icebp
add
es
mov
cmp
decb
repnz
jae
mov
mov
fdivrp
repz
jne
fcomi
mov
add
lds
lret
mov
add
or
mov
in
inc
or
or
mov
mov
sub
add
mov
lock
push
lea
lea
jp
cmp
or
mov
or
or
aaa
jmp
xchg
sub
mov
incl
xor
sub
cmp
loop
clc
imull
imul
push
pop
paddusw
sub
pop
sub
pop
sub
and
add
lahf
mov
or
aad
xchg
bound
adc
add
fnstsw
xor
in
push
sub
cmp
push
mov
pop
sti
cmc
push
mov
xchg
adc
fisttpll
scas
es
fucomip
jle
mov
rcll
and
or
fisttps
sub
cmpsb
and
jno
and
jle
in
mov
incl
sub
enter
aad
sub
pop
pop
mov
enter
scas
scas
pop
je
cmovle
pop
aaa
outsl
xor
jle
in
jle
cmp
sbb
in
mov
aad
lcall
jmp
fistps
add
pop
in
cmpsb
cmpsl
and
pop
mov
mov
lea
and
test
loop
jecxz
xlat
fldl
test
nop
adc
fwait
xchg
mov
mov
dec
mov
push
test
mov
das
lret
mov
adc
mov
lret
clc
sbb
in
push
xchg
fstpl
mov
repnz
or
int3
icebp
int3
loop
cli
bound
or
sub
daa
negb
scas
and
es
sub
add
jmp
mov
push
adc
dec
pop
mov
xchg
ljmp
aad
sub
pop
pop
pop
es
lcall
sub
mov
repnz
or
sub
movsb
addr16
out
outsb
orb
out
lahf
fists
pop
sub
ljmp
sbb
sbb
push
and
xchg
in
jo
dec
push
movsl
fwait
or
and
jnp
fisubl
mov
movzbl
scas
mov
out
mov
inc
pop
xor
and
xchg
cmp
mov
jp
lret
lock
pop
loop
idivb
cmp
gs
jmp
jp
sbb
inc
cmp
and
fdivl
mov
cmpsb
sub
loopew
jbe
into
scas
and
sub
test
dec
insb
fcomps
aam
loop
pop
fnsave
jb
loope
mov
sub
out
xchg
insb
test
lsl
sbb
pusha
in
pop
aad
add
lahf
aaa
jne
lret
movsl
adc
repnz
or
inc
call
xor
mov
mov
int
and
push
pop
in
sbb
out
shll
add
sub
pop
inc
movsb
mov
sbb
mov
add
addl
jl
mul
divl
test
jne
or
movlps
insl
lock
call
mov
jbe
cmp
arpl
cmp
movzwl
dec
test
dec
adc
cltd
add
in
movl
dec
lea
cmpsb
inc
ret
fdivr
push
mov
adc
pop
or
inc
rcll
cmp
or
or
cmpl
jb
or
dec
fdivl
push
mov
dec
cmpsb
mov
jmp
sub
fwait
dec
push
fs
or
jae
arpl
dec
rcll
add
xchg
xor
adc
or
decl
jne
add
pushf
sub
mov
fistps
or
je
jb
pushl
fs
jae
cmovl
fs
imul
dec
mov
outsb
push
push
outsb
insl
popa
jo
imul
ljmp
in
insb
add
jb
jne
insb
inc
insb
insb
inc
sub
insb
dec
outsl
jbe
fistpl
gs
gs
outsl
cmp
decl
cmp
lea
mov
mov
mov
cmp
in
jmp
jnp
lea
xchg
lock
jne
lea
inc
mov
jmp
lea
lea
inc
mov
mov
mov
idiv
ljmp
fs
mov
mov
mov
cmp
jns
mov
fisttpl
lea
inc
lea
mov
pop
idivl
adc
and
push
lods
adc
test
fbstp
fwait
pop
out
lea
mov
inc
mov
cmp
clc
mov
mov
inc
dec
inc
gs
dec
jne
cld
sbb
push
dec
push
pop
lock
mov
lret
stos
mov
xchg
in
inc
xchg
dec
and
jg
fbstp
or
or
lea
push
repz
mov
hlt
mov
inc
dec
dec
pushl
add
inc
rorb
in
add
daa
and
addr16
mov
mov
adc
ljmp
imul
mov
xlat
mov
mov
mov
cld
in
ja
je
cmp
jns
dec
xchg
dec
inc
dec
dec
jns
repz
pop
daa
cmp
jne
js
lea
mov
jno
push
test
mov
lea
lea
mov
sar
iret
push
mov
lret
sbb
mov
dec
inc
dec
aas
pop
clc
xor
inc
dec
dec
mov
push
add
mov
bound
lcall
loope
aas
rclb
in
sbb
mov
mov
repz
jg
jnp
cmp
ja
inc
mov
mov
mov
jmp
push
popa
jecxz
in
cmp
inc
nop
mov
jg
mov
adc
cmp
or
inc
mov
scas
push
xchg
lea
xchg
ret
jl
sbb
insb
push
push
xchg
movsb
pop
imul
sub
jae
cmp
mov
push
push
mov
mov
mov
mov
lea
aaa
cld
mov
xchg
inc
cmp
dec
dec
inc
mov
mov
push
xchg
test
repz
dec
ljmp
sbb
pushf
inc
ret
cltd
adc
cmpsl
shlb
lcall
leave
je
cmp
cmp
jns
mov
loope
sub
dec
test
inc
inc
xor
fistpll
mov
jne
popf
fstps
add
stos
les
mov
adc
inc
inc
cmp
sbb
leave
pop
into
mov
mov
arpl
roll
aaa
sub
cmp
push
decb
xchg
out
sahf
iret
or
mov
outsl
adc
and
movsb
add
or
fistpll
xchg
jb
bound
fwait
inc
sub
xor
popl
fdivs
lret
fmuls
rolb
repnz
stos
fadds
and
xchg
mov
cmp
xor
cmp
xor
lods
xor
cmp
xlat
jne
xor
or
add
pop
xor
jmp
add
add
xor
insb
or
xor
imul
mov
pop
sub
push
push
xchg
and
adc
and
mov
add
shlb
mov
mov
sub
nop
adc
mov
mov
shll
loop
mov
mov
outsl
outsl
mov
cmp
or
sub
adc
outsl
out
mov
and
rcrl
outsl
fisttpl
repnz
outsb
ljmp
mov
mov
sbb
sti
cld
cld
mov
idivb
cmp
and
orb
jne
aam
sub
pop
xchg
jmp
and
or
dec
cld
xor
dec
stos
clc
cmp
push
add
pop
das
ss
cli
mov
dec
mov
or
repnz
mov
fsubs
stos
push
test
hlt
jbe
mov
lock
mov
imulb
sub
push
stos
add
dec
or
in
lods
aad
enter
dec
sub
xchg
loope
inc
push
cltd
xchg
sub
nop
cmpsb
cmp
push
inc
dec
or
sbb
arpl
pop
test
jnp
jmp
add
dec
mov
cmp
sub
ja
clc
outsl
outsl
loopne
and
xor
in
push
add
std
push
pop
orb
mov
inc
cmp
in
sbb
dec
popa
dec
jns
or
xchg
xchg
mov
insl
ret
jnp
stos
mov
sbb
inc
mov
dec
arpl
inc
mov
mov
adc
mov
jns
sarl
pop
mov
fists
das
jns
add
inc
inc
dec
inc
push
sub
enter
or
subl
cmp
lea
or
pop
add
and
push
or
xor
mov
add
xor
mov
xor
and
outsb
pop
mov
inc
push
aas
or
clc
hlt
fildl
inc
divl
add
cmp
or
lcall
adc
pop
in
cs
mov
mov
mov
xchg
divb
mov
jge
outsb
test
add
incl
fsubr
call
cmpsb
cmp
pop
in
mov
inc
call
mov
xor
clc
push
jg
cmp
sub
call
and
pop
addb
in
insl
jnp
ja
mov
test
xchg
sbb
pop
call
dec
mov
dec
and
and
jb
fptan
add
adc
pop
and
inc
mov
test
inc
add
add
xor
mov
pop
in
enter
insb
in
add
and
mov
mov
or
inc
mov
fnstenv
mov
pusha
adc
mov
nop
les
cli
or
ret
sub
loopne
dec
rorb
in
push
mov
cmp
pop
push
lock
add
add
rolb
sbb
jo
lock
inc
push
mov
and
pop
jbe
lret
or
clc
push
and
sub
fwait
mov
nop
jl
and
add
mov
lock
insb
mov
or
xchg
outsl
sarl
movl
stc
or
adc
je
sqrtps
ss
adc
invd
or
lods
jne
add
pop
or
or
and
rclb
mov
jl
xor
nop
push
setne
add
jmp
mov
adc
cmpl
rcll
or
pushf
add
rorb
sbb
repz
ss
nop
lock
popa
xchg
sbb
pop
push
push
nop
inc
or
jne
jne
adc
addr16
sbb
and
mov
jg
push
mov
add
cmp
sub
xor
mov
outsl
aam
and
sub
sub
mov
inc
inc
movsl
inc
sub
sub
rol
or
gs
xor
cs
insb
inc
adc
imul
repz
outsb
add
je
and
add
je
arpl
jo
jbe
popa
jbe
bsf
incl
addr16
jo
imul
jbe
jns
insl
jo
data16
fistps
adc
arpl
rcpps
jno
dec
pusha
push
in
repnz
insl
jae
dec
data16
aaa
ja
outsb
add
fisubs
gs
int
ss
mov
pushw
adc
mov
hlt
scas
int
inc
mulb
imul
cmpsb
lods
adc
aaa
pop
or
leave
add
mov
or
jle
mov
push
loopne
jg
add
and
int3
fdivl
or
aam
jmp
add
add
sahf
mov
shrb
add
addl
mov
inc
push
mov
pushf
movb
add
mov
and
ja
lret
mov
push
sub
jmp
ljmp
jge
aad
jne
mov
stos
add
xor
les
xor
iret
pop
repnz
int3
test
fmuls
mov
enter
scas
xor
inc
mov
inc
inc
repnz
fdivs
ret
cmpsb
push
mov
inc
test
movsb
lock
xchg
jo
test
aam
mov
push
mov
nop
les
add
fmuls
fwait
ja
shlb
xor
xor
add
xor
xor
sbb
cmp
rcr
and
clc
lock
push
mov
add
jl
incl
jne
jo
mov
inc
test
setb
and
movsl
test
mov
and
shlb
adc
pop
daa
jne
fwait
jne
add
jmp
sub
push
dec
popa
sbb
or
clc
bnd
call
dec
nop
inc
inc
test
icebp
out
enter
ja
cmp
hlt
and
mov
adc
fwait
ret
sbbb
push
dec
adc
xlat
stc
add
inc
xchg
fldl
push
add
lahf
and
inc
jae
push
loopne
dec
dec
es
ss
mov
int
faddl
in
lock
sbb
mov
inc
push
enter
lcall
mov
mov
xchg
cmp
xor
cli
pop
divl
xor
add
cmp
jae
inc
sub
stos
lods
mov
pop
call
push
add
daa
or
add
dec
mov
cwtl
pop
xchg
test
and
mov
shlb
pop
imul
xlat
xor
aas
add
xchg
cwtl
mov
adc
leave
add
xor
hlt
stos
inc
mov
push
call
enter
fimuls
mov
dec
inc
test
test
dec
addb
add
stc
cmp
cmpsl
decb
pop
add
add
pushf
dec
xor
and
push
sub
cmc
push
addl
test
xor
adc
mov
mov
in
inc
add
arpl
pusha
push
loopne
cmpw
ja
adc
bound
adc
adc
cltd
mov
adc
loopne
adc
or
cmp
mov
xor
faddl
mov
outsl
outsl
mov
jnp
xchg
adc
in
mov
jg
sti
mov
cmpsb
mov
cmp
andl
outsl
decl
adc
mov
jbe
inc
fimull
xchg
clc
inc
fisubrl
dec
or
push
mov
adc
das
lea
inc
dec
mov
jmp
add
xor
mov
mov
je
cmp
in
xor
out
jecxz
test
lret
mov
roll
mov
pusha
inc
and
mov
sbb
hlt
xchg
inc
inc
inc
inc
inc
dec
fldt
je
push
cmp
adc
inc
dec
cmp
std
testb
and
add
pop
sub
cld
aaa
cmc
mov
adc
push
and
mov
mov
push
mov
aaa
incb
xor
mov
or
jle
jg
lods
out
cmp
mov
mov
iret
mov
dec
or
popf
mov
xchg
mov
mov
ja
sbb
adc
imul
outsb
pop
inc
adc
shll
shrb
add
es
cmp
je
cmc
lock
pop
pushl
mov
inc
bnd
leave
inc
mov
inc
cmp
add
lret
ret
add
cmp
jge
xchg
inc
out
mov
mov
fwait
lods
pop
sub
fs
mov
cmp
jl
push
hlt
xor
dec
xchg
dec
dec
adc
sbb
jle
hlt
inc
in
push
inc
lcall
pop
dec
fisttpl
clc
cmp
ds
dec
add
inc
jg
fsubr
pop
cmp
or
add
xlat
int3
movsb
adc
insl
call
clc
cmp
pop
xchg
and
mov
mov
or
pop
stos
dec
insl
or
dec
dec
dec
mov
or
mov
or
imul
cmpb
das
add
xchg
movsb
dec
pop
and
jecxz
incl
dec
inc
mov
sbb
imul
push
movl
mov
cmp
test
jl
mov
mov
fisttpl
or
lds
xor
out
dec
xchg
inc
mov
lret
sbb
sub
repnz
stos
loope
sub
or
sub
inc
cmp
jne
sbb
mov
sub
or
mov
add
push
orb
loope
or
insb
mov
dec
or
add
push
and
inc
sarb
addr16
add
add
inc
dec
movb
cmpb
pushf
add
mov
hlt
test
bound
or
xchg
add
addb
or
or
or
dec
aad
cmp
cmp
mov
mov
pop
inc
inc
add
stos
add
cld
pop
sub
push
push
jnp
add
popf
mov
add
daa
add
and
add
mov
lahf
add
mov
mov
or
add
and
push
adc
stc
xchg
and
out
pop
jnp
adc
add
add
add
jns
test
imul
add
dec
add
push
add
push
dec
fstpl
jmp
adc
push
shlb
pop
inc
add
inc
adc
push
pop
sub
ja
mull
add
xor
push
add
sub
add
fists
add
xchg
add
pop
or
cmc
add
or
jle
scas
add
xlat
mov
cmp
std
mov
and
add
and
push
femms
xchg
mov
sub
and
cmp
into
mov
jo
xor
pop
out
int
mov
and
adc
scas
sti
mov
jp
sbb
and
shlb
adc
cli
and
jnp
in
mov
push
sub
jne
or
repz
or
sbb
dec
int
icebp
sbbl
fwait
bound
incl
ret
push
cmp
pop
clc
mov
sub
and
fisttps
xchg
adc
insl
fiadds
divb
out
gs
es
or
ss
andb
fs
sub
cmp
psubb
pop
and
add
fldenv
pop
aaa
mov
sub
mov
push
aaa
add
scas
jge
stos
outsl
add
jnp
outsb
outsl
inc
jbe
outsl
and
lret
add
fstps
pop
sbb
pusha
or
daa
push
adc
notl
mov
ret
push
ret
or
mov
aam
sub
and
sbb
mov
fdivs
push
aad
dec
insl
subb
dec
bound
xlat
into
mov
dec
inc
pop
pop
add
sahf
popa
sbb
fisttpl
mov
jmp
push
addr16
sbb
pop
addr16
dec
push
add
xchg
ret
mov
adc
enter
pop
push
mov
fwait
jl
out
push
inc
and
outsl
inc
xlat
ljmp
mov
int
add
or
loope
fadd
orb
aas
xchg
test
lret
push
push
mov
aaa
arpl
xchg
xchg
mov
sti
adc
lret
push
rcrb
sub
popa
das
or
sbb
or
or
mov
fiadds
sbb
pop
xchg
or
jp
fwait
sub
xor
ret
sub
mov
jo
inc
mov
xchg
lods
adc
or
adcl
and
or
pop
ss
in
fimuls
pop
add
or
add
or
sub
mov
add
stos
mov
xchg
push
lods
add
inc
insb
push
mov
adc
adc
lret
adc
mov
sahf
sbb
cmp
movsbl
outsl
xchg
add
add
jbe
push
lret
aaa
jno
mov
inc
testl
or
mov
insl
cmp
fcmovnu
flds
jo
rcrl
sbb
ja
stos
push
mov
fcoms
scas
arpl
fildll
jle
outsl
adc
and
push
je
fcomip
push
adc
outsb
aaa
jge
cmpsb
and
outsl
out
sbb
mov
sub
pop
add
dec
jo
idivl
push
cmp
or
or
popa
aas
jl
rolb
add
dec
xor
insl
fnstsw
and
jge
lods
dec
stc
jle
stos
xchg
add
lods
sub
ret
pop
mov
push
clc
dec
fwait
insl
mov
add
js
pop
add
pusha
mov
and
dec
push
or
fs
enter
and
fmull
sub
lock
sbb
test
je
mov
outsl
push
push
iret
andl
and
jmp
mov
adc
add
xor
jl
jns
jl
out
add
cmc
sub
or
int3
sub
out
es
xchg
testl
pop
and
sbb
lret
pusha
loope
fisttpl
je
or
dec
je
mov
xchg
mov
mov
inc
xchg
add
movsb
lret
sub
jo
cmp
jo
pop
xchg
sbbb
das
iret
out
cmp
jle
fsub
and
inc
addl
std
in
test
or
test
jbe
call
fstpt
jg
pop
jge
pushf
je
dec
cmpsl
add
add
ret
mov
outsb
or
pop
dec
iret
in
jp
jne
and
push
jne
mov
rcrl
mov
cld
sub
lcall
jbe
jge
aaa
pop
mov
lock
lahf
jne
add
lea
mov
out
aam
jge
mov
jo
arpl
jg
push
loope
imul
adc
lret
or
test
jle
cs
jmp
and
in
xlat
sbb
lds
mov
pop
mov
aaa
pop
dec
ja
sub
jg
push
and
jae
mov
ja
jbe
jl
dec
outsb
aaa
mov
sbb
in
lock
add
into
inc
push
ja
ret
mov
push
in
push
popa
or
xchg
mov
inc
test
mov
addb
imul
jmp
fadds
bound
sbb
sub
js
sbb
push
inc
or
in
sbb
pop
insb
out
cltd
jnp
sbb
xlat
sbb
push
subl
cmp
insb
mov
sbb
push
fdivp
jecxz
daa
aaa
clc
shrl
fbstp
lret
out
pop
or
aaa
dec
jl
xlat
shll
mov
scas
add
outsb
ljmp
fisttpl
jp
loopne
jmp
jg
pop
mov
sti
add
daa
mov
arpl
fs
mov
mov
jg
jp
adc
sarl
mov
jmp
fldl
es
scas
int3
in
or
outsb
jbe
outsb
jno
jl
jle
adc
push
xchg
rcrl
jb
gs
xor
mov
sti
cmpsb
lret
in
jl
lret
je
adc
fisubrl
ja
push
test
add
imul
add
paddusw
pop
mov
add
mov
jnp
pop
xchg
sub
daa
sub
loope
imulb
jl
push
mov
xchg
and
lods
std
jb
xlat
mov
sarl
scas
mov
mov
int3
jne
pop
in
iret
iret
xor
lods
aaa
sub
outsb
xchg
les
cmp
fucom
cs
ss
int3
out
mov
pop
and
stos
pop
je
push
xchg
sbb
mov
add
add
rolb
inc
jo
adc
add
sbb
xchg
in
xchg
push
or
insl
xlat
loope
int3
and
fcoms
or
out
les
jg
insb
dec
jp
and
fsubrl
pop
mov
dec
or
jnp
dec
mov
add
hlt
mov
xor
mov
pop
dec
jecxz
cmpsl
sahf
push
lods
pop
sbb
cltd
daa
sbbb
mov
fwait
jp
mov
repnz
fistps
dec
insb
repz
hlt
fistl
fildll
mov
mov
xchg
daa
add
daa
jo
or
test
iret
push
scas
xlat
mov
outsb
jnp
jnp
es
xor
or
cmp
pop
jmp
cs
jp
jb
lock
dec
nop
lods
mov
lahf
jbe
addr16
repnz
jle
out
push
cs
insl
jp
xchg
popf
mov
and
int3
pop
cbtw
rcrb
mov
and
dec
xor
jle
pop
and
push
cmp
cs
ljmp
stos
sbb
jns
xchg
mov
lock
dec
addr16
jo
cmp
push
shrl
jbe
xchg
outsb
and
mov
rcll
inc
stos
fdivl
outsb
scas
add
fildl
mov
mov
test
popf
pusha
lahf
gs
ja
in
ds
xchg
loope
ja
mov
mov
xor
out
jge
mov
adc
sub
mov
neg
dec
pushf
fmuls
push
stos
xchg
cld
insl
and
andb
movsb
sbb
std
pop
push
pop
jno
fsubr
pop
loope
pop
mov
cs
lock
pop
mov
cmp
movhps
push
sti
nop
sbb
fcomp
and
int
orl
inc
insl
jge
add
jmp
jmp
outsl
push
jge
testb
pop
mov
fldcw
jbe
sub
test
test
divl
lahf
adc
xor
adc
mov
push
into
mov
xchg
call
sti
les
inc
test
mov
xchg
jbe
sbb
and
aaa
in
push
insl
nop
jo
int
addr16
push
fiadds
xchg
mov
xor
cmp
cmp
adc
cmp
push
cmc
popa
retw
arpl
cmp
ds
aaa
mov
pop
negb
in
jle
pop
add
repz
stos
rolb
enter
data16
orb
add
insl
scas
subl
bound
cltd
es
stos
cmp
icebp
aas
cmp
sub
insl
pop
scas
shl
dec
popf
lods
and
inc
pop
push
scas
mov
xchg
push
out
daa
mov
adc
fsubr
fisubs
adc
pop
xchg
ret
cmp
mov
shll
push
jb
sub
mov
lods
js
sub
sbb
inc
scas
mov
or
push
loope
xor
mov
sbb
ss
icebp
cmp
loopne
icebp
int3
and
bound
and
push
lock
sbb
sub
xor
or
insb
shlb
vmaxps
je
inc
das
push
and
popa
aaa
sub
imul
xor
int3
fldl
pop
inc
pop
pop
movl
sti
xchg
xor
mov
jp
push
pop
sub
test
lea
fnsave
xor
push
mov
imul
and
mov
pop
imul
push
imul
lods
pop
or
mov
mov
inc
daa
rcll
hlt
add
jle
dec
adc
xorb
sub
out
aaa
in
push
fidivrl
add
and
aaa
mov
incl
cmp
and
pop
or
or
test
nop
inc
movsl
adc
shr
andl
jecxz
sbb
fnstcw
jo
jns
sub
push
ret
rcll
ja
mov
shl
and
adc
mov
mov
push
and
mov
and
mov
ja
mov
out
jecxz
inc
fildl
cltd
adc
and
es
rclb
push
mov
push
icebp
test
pop
fimull
adc
add
hlt
test
pusha
mov
into
or
rcl
scas
cmp
int
mov
ja
xlat
scas
or
add
out
and
sarb
and
or
cmpsb
sub
mov
int3
aaa
fcoms
mov
xor
cmp
and
push
push
sti
fwait
lock
aam
and
xor
iret
shrl
ret
cmp
nop
ljmp
clc
fwait
push
push
mov
bound
jnp
sahf
or
push
adc
fs
fcomps
icebp
or
mov
fsts
xor
movsb
add
pop
paddusb
mov
shlb
aas
movsb
je
xor
xor
push
dec
fs
push
test
xchg
fabs
movsb
pop
mov
dec
cmp
aad
shl
popf
cmp
jle
xorl
sarl
sahf
sub
mov
mov
ret
xchg
inc
addr16
pop
loop
or
rcl
loope
clc
pop
sbb
daa
test
test
and
mov
out
jle
sbb
leave
neg
dec
ja
cs
fidivrs
push
in
lock
xor
mov
push
fdiv
adc
mov
ja
add
shll
inc
test
inc
frstor
idivb
pop
push
sbb
pop
lret
fwait
xor
sub
sbb
pop
scas
cmp
imul
jne
cmp
stos
fnstenv
pusha
pushf
cmp
sbb
or
xchg
popa
leave
icebp
inc
std
and
pop
and
adc
and
and
xor
jle
lods
or
lds
iret
out
addr16
test
das
call
pop
ja
mov
sub
sub
push
mov
dec
inc
aaa
sahf
enter
out
in
sbb
in
mov
subl
sbb
stos
in
xor
dec
add
test
sbb
icebp
jbe
ret
sub
pushf
shr
mov
or
aam
push
sub
frstor
or
push
daa
test
and
sbb
push
add
adc
fwait
cli
xor
lea
nop
inc
sub
sub
mov
pop
loope
push
or
js
negl
or
push
push
roll
add
repz
scas
add
pop
cmp
jae
scas
fsubrl
test
bound
adc
fcomps
push
add
je
arpl
add
cmp
or
test
pop
push
in
mov
mov
adc
pshufb
xor
and
jmp
pop
adc
xchg
ds
or
add
ds
adc
daa
pop
add
sti
xor
mov
push
in
push
sbb
arpl
push
sub
and
daa
ret
loopne
std
push
push
add
add
pop
or
lods
out
arpl
fists
cmp
push
pop
add
out
sub
je
jne
mov
adc
or
pop
sbb
aas
jmp
pop
andl
adc
sub
adc
outsb
mov
dec
push
dec
outsl
mov
push
add
xchg
jg
xlat
pop
push
outsb
and
pop
push
add
mov
dec
xchg
ficompl
jle
fistpll
icebp
dec
push
dec
jp
repnz
loope
xor
jecxz
xor
ljmp
adc
sub
sbb
int
and
fsts
push
stos
sub
test
jnp
cmp
ds
imul
cmp
mov
int
cmc
aaa
inc
test
jo
xor
cmp
adc
fcoms
es
scas
sbb
adc
jne
loop
loope
pop
sub
jnp
xor
jno
pop
or
pop
lahf
stc
ret
lcall
test
lods
mov
pop
pushf
fcom
mov
in
aaa
xor
leave
clc
lds
and
arpl
adc
ja
orb
int3
sbb
sbbb
xchg
sub
cwtl
add
subb
xor
loope
iret
insb
mov
add
push
xchg
lcall
jecxz
xchg
xchg
and
mov
arpl
inc
adc
test
daa
sahf
stos
jbe
pop
xor
cli
inc
pop
rclb
clc
std
lods
adc
fldenv
jecxz
pop
or
insb
jo
dec
sbb
sahf
xchg
sub
pop
mov
cltd
add
leave
and
test
push
movswl
subl
and
xchg
movsb
pusha
cwtl
sbb
xchg
ficomps
sahf
lock
cmp
sbb
shll
lods
cmp
cmp
xlat
xchg
sbb
and
popf
shrl
jne
and
cli
out
aas
dec
movb
dec
insb
ds
jg
or
pusha
test
mov
aad
jp
packuswb
pop
jae
ret
cmp
xchg
cwtl
stos
aaa
add
lock
ja
push
out
loop
mov
mov
loopne
je
or
out
insb
push
stos
cs
repz
sub
daa
clc
mov
lret
fldenv
test
cmp
and
fidivs
pop
or
mov
orb
test
loope
cli
add
and
and
pop
stos
add
cmp
int
pop
iret
test
out
stos
dec
push
xor
jmp
add
jge
add
and
pop
es
enter
test
xor
jo
xor
je
and
jecxz
test
aaa
pop
es
fsincos
sub
pop
xchg
xor
mov
lret
pop
in
mov
aad
cmpsl
bound
or
roll
inc
cs
jg
pop
xor
fcoml
push
cmp
or
mov
add
test
mov
push
sub
shlb
iret
push
inc
push
daa
jne
xor
dec
shll
mov
pop
sbb
pop
add
or
lods
sarb
inc
int
xor
test
inc
or
sbb
stos
in
push
es
add
outsb
insl
mov
push
bound
rcl
das
mov
call
or
mov
dec
inc
mov
pushf
subb
shl
and
sbb
dec
fstpt
mov
or
dec
cmpsb
call
ret
dec
imul
xchg
sub
test
movsb
xor
adc
push
sbb
inc
scas
bound
insl
clc
sbb
lods
popa
and
js
jo
add
mov
or
fs
jne
pop
mov
add
cmp
test
fisttpl
inc
cmpsl
inc
add
sahf
mov
fs
xlat
and
mov
ret
xchg
ret
jp
cmpsl
into
sub
jno
and
ror
add
into
icebp
push
xchg
mov
lods
popfw
dec
cmp
mov
das
mov
mov
data16
movsb
pop
push
and
mov
ja
cmp
int3
jg
sbb
or
enter
movsb
mov
fisubs
nop
jmp
and
mov
mov
sbb
stos
push
dec
add
bound
jle
or
add
xchg
ret
mov
mov
out
pop
add
sbb
test
hlt
test
pop
dec
mov
jnp
test
add
mov
cmp
sbb
loope
adc
mov
adc
push
and
into
jecxz
ss
pop
and
mov
add
jg
mov
ss
lock
push
ret
adc
mov
jp
js
push
sahf
sbb
cmp
pop
test
js
pop
rcrb
xchg
xchg
xchg
outsl
cmpsl
gs
es
clc
jnp
xchg
push
pop
dec
sbb
not
inc
xchg
sub
sbb
and
mov
dec
cmpsb
xchg
pop
sahf
and
sbb
imul
imul
into
or
mov
sub
scas
pop
add
pop
and
pop
pushf
mov
das
xchg
cli
sbb
mov
lods
push
nop
xor
scas
nop
push
jns
cmp
add
xchg
ja
and
push
and
cmpsl
mov
inc
dec
mov
flds
out
lds
imul
mov
adc
scas
insb
pop
pop
sub
out
cmp
subb
addr16
sahf
inc
clc
jne
out
lods
adc
movsb
add
inc
out
xlat
ror
jb
sub
lods
jp
inc
sarl
mov
das
in
jmp
xlat
mov
xor
in
cmp
sarl
dec
aaa
into
mov
mov
sbb
or
or
cmp
pop
xchg
xor
sahf
xchg
lahf
fdivp
lcall
aam
in
inc
push
test
inc
loopne
mov
lahf
push
cmp
and
dec
xorl
and
mov
hlt
popf
mov
clc
push
scas
xor
jl
jbe
les
jl
imul
and
sub
out
and
xor
push
xor
jne
les
push
inc
outsb
sub
inc
mov
pop
add
out
iret
jmp
xor
test
jbe
daa
inc
shl
outsl
in
sub
roll
lcall
orl
sbb
stos
sbb
or
neg
in
add
dec
and
or
xor
insl
pop
jl
mov
push
aaa
cmp
push
nop
loop
repz
xchg
xor
ss
cmp
mov
mov
adc
jo
pop
add
insb
sbb
sub
xchg
lahf
xor
push
or
das
sub
jge
push
addr16
iret
gs
push
pop
dec
outsb
pop
es
or
mov
mov
fdivr
lods
sarb
dec
mov
or
or
xchg
stos
fsubs
inc
fcomi
shrb
mov
mov
or
adc
clc
xor
sbb
mov
or
cmp
sbb
jl
sub
loope
mov
cld
cli
popf
aam
or
or
and
ret
pop
fadds
iret
cmc
mov
loop
mov
cld
outsb
outsb
js
loop
mov
or
xor
addb
or
in
inc
or
ljmp
push
jae
mov
jecxz
test
or
push
cmp
xchg
push
cmpsl
in
movsb
into
ret
bound
dec
call
pop
pop
leave
ljmp
add
xchg
push
out
cld
imulb
pop
and
js
jl
sbb
dec
cmp
rol
xchg
mov
in
daa
or
test
mov
rcl
pop
je
enter
scas
int
out
outsb
mov
divl
and
push
pop
push
mov
pop
loopne
jge
pusha
sbb
cli
fldt
pop
or
mov
or
sbb
mov
pop
sbb
lock
adc
dec
push
iret
or
mov
adcl
loopne
inc
cmp
imull
dec
pop
dec
loope
sub
or
fists
int3
mov
insb
or
test
fisubrl
sub
jl
sbb
cmp
jecxz
and
and
inc
into
bound
sub
sub
andb
insl
pushf
jnp
jne
and
stos
sbb
dec
imul
add
in
in
inc
sub
jle
cs
das
push
or
aam
out
and
xor
pop
xlat
popa
dec
or
cmp
or
dec
push
push
jecxz
fnstcw
sub
cmpsl
pop
popa
out
jl
and
mov
and
push
jnp
ljmp
add
into
ds
das
fstpl
sbb
or
jg
inc
aaa
clc
outsb
outsb
xchg
xor
mov
mov
xchg
sub
or
mov
xor
xor
into
jle
jge
out
jnp
cmp
lahf
mov
repz
in
jmp
and
subl
pop
jae
jle
or
jmp
fisubs
jle
daa
sahf
pop
out
stc
pop
xor
rol
jnp
jns
mov
jns
ds
inc
sbb
jns
sub
mov
mov
cli
cltd
xchg
pusha
stos
inc
jns
mov
scas
dec
subb
aas
jns
cmpsl
addr16
adc
sti
jno
adc
cmp
scas
je
push
xor
mov
push
outsb
out
sbb
idivl
add
mulb
test
xchg
lret
add
jb
mov
pop
sbb
lods
in
jecxz
sarl
jmp
push
in
xor
mov
sti
jbe
in
adc
xor
inc
jae
arpl
jnp
js
out
mov
and
out
fidivs
sahf
in
fs
dec
inc
mov
out
sbb
mov
lock
jno,pn
ret
imul
jns
mov
xor
jl
ficoml
sahf
adc
pop
test
das
jmp
test
movsl
insb
ret
add
divl
pop
lock
and
pusha
pop
ss
js
in
push
fstpt
xchg
mov
cmp
test
test
jg
mov
int
xchg
lods
pop
repnz
and
inc
js
loopne
addr16
adc
add
jecxz
gs
rorb
rolb
sbb
rcl
push
mov
dec
ja
push
mov
dec
add
adc
das
push
daa
orl
sub
in
aas
or
jnp
mov
xor
inc
addb
shl
test
cmp
adc
cwtl
insl
mov
lods
fisubrl
add
or
and
int
add
and
xor
js
sub
scas
out
scas
lcall
popf
inc
das
mov
xchg
xchg
sub
sbb
stc
dec
out
sub
testl
fwait
and
lock
pop
mov
push
xchg
dec
icebp
mov
sub
clc
mov
mov
inc
push
jge
adc
adc
es
and
fiadds
or
adc
mov
mov
outsb
mov
icebp
xchg
add
adc
cmpl
cmpsl
mov
mov
lret
add
movsb
inc
stc
xor
push
and
push
icebp
das
xor
sub
jnp
inc
out
fisttpl
xchg
popa
mov
add
sbb
fwait
lret
inc
mov
lods
cltd
pushf
lcall
loop
sbb
js
divb
sub
mov
call
insb
mov
loop
ret
test
out
shlb
mov
cmp
xor
andb
aad
cltd
call
add
push
mov
cmp
arpl
jo
jb
add
cmp
scas
push
mov
test
inc
xchg
mov
adc
add
jb
mov
hlt
cmp
sbbl
xchg
mov
dec
push
imul
into
mov
jne
dec
pop
nop
add
inc
sbb
and
mov
xor
push
pop
and
rcl
push
adc
dec
scas
cltd
adc
jns
push
xor
adc
clc
es
push
pusha
scas
cltd
and
xor
aaa
push
or
movsl
loopne
or
add
sub
movsw
pop
hlt
shll
mov
jle
or
scas
ja
je
xchg
arpl
mov
adc
sbb
inc
dec
and
bound
dec
ljmp
inc
cmpsb
mov
sbb
jne
cmpsl
ja
fidivl
frstor
lods
pop
or
ljmp
sub
addl
pop
mov
stos
mov
sub
jb
sub
sahf
inc
sub
sbb
adcb
mov
sub
daa
int3
scas
outsb
sub
enter
xchg
xchg
push
and
daa
xor
pushf
lcall
push
adc
test
mov
out
call
sbb
test
loop
cmp
jle
stos
xor
lret
adc
movsb
fildll
push
pop
or
js
sbb
push
inc
fs
xchg
fs
ds
and
or
dec
and
insb
outsb
ret
push
push
int3
popa
or
and
arpl
and
sbb
and
adc
fdivs
daa
cs
or
sub
push
jge
add
xchg
add
push
xlat
jne
ja
sub
enter
sub
jne
pop
and
sub
ljmp
stos
das
nop
es
mov
sub
jo
and
mov
idiv
cs
fildl
psubw
add
sbbl
ret
or
jnp
push
jo
sarb
cmpsl
sub
xchg
add
add
sub
stos
in
cld
mov
jb
jmp
mov
sub
sub
aad
add
jmp
ds
inc
ljmp
sbb
jne
int
jl
mov
inc
pop
loop
xchg
mov
jle
rcl
loope
jp
lods
fstpt
loop
mov
adc
dec
dec
mov
xor
push
xor
xor
idivb
or
add
jbe
imull
or
or
or
sub
add
sbb
hlt
mov
pop
iret
repnz
icebp
inc
add
scas
rclb
test
adc
cmpsb
testl
pop
sbb
mov
dec
int3
mov
cmp
cmpsl
sub
imul
sbb
loop
hlt
and
xchg
repnz
test
cmp
mov
test
es
loopne
xchg
fsubs
jmp
jae
cwtl
add
mov
bound
jmp
and
psllw
lods
mov
add
scas
adc
js
imull
push
cmpsb
jle
adc
adc
xor
lods
and
sub
and
lods
out
hlt
cmp
sbb
push
and
jae
mov
lahf
es
cmp
divl
ss
enter
jae
mov
add
lret
cwtl
les
stos
arpl
in
xchg
sub
loope
sbb
pop
mov
lock
pop
mov
movsb
fmuls
push
add
adc
mov
and
icebp
cmpsl
inc
cmp
lret
imul
stos
orl
sub
loop
inc
xor
test
xchg
fwait
stc
xchg
scas
lret
test
sbb
out
cmc
ret
repz
dec
jno
xchg
mov
dec
jmp
lea
jnp
mov
and
scas
sti
loop
xor
pop
mov
or
mov
inc
mov
inc
fwait
inc
mov
and
dec
xor
push
nop
mov
push
call
out
popf
dec
dec
daa
pop
sarb
or
sub
repz
and
xchg
pop
sbb
sahf
mov
sub
ja
scas
int3
loop
loopne
dec
hlt
push
mov
inc
mov
xlat
or
lcall
push
pop
cmpsl
cwtl
fbld
add
dec
mov
mov
fadds
mull
jno
and
aad
mov
js
xchg
jnp
xchg
js
js
cmp
dec
mov
fdivrs
jne
das
fsubrs
aad
xor
mov
fidivrl
loope
cmp
ja
mov
sub
add
test
andb
and
mov
xchg
sub
ret
or
mov
insl
mov
dec
and
pushf
mov
cmpsw
push
out
jp
mov
je
mov
pusha
lds
cmp
cwtl
test
movsl
pop
mov
mov
mov
jnp
test
add
inc
out
in
fcoms
out
ret
sbb
push
in
iret
or
shll
outsl
ret
cwtl
xor
push
cmp
loopne
or
test
cwtl
adc
push
push
and
mov
fcompl
loopne
sub
fiadds
dec
out
loop
and
loope
add
sbb
stc
int
jl
or
and
push
sbb
cmp
cmp
js
jge
ljmp
out
jo
mov
dec
push
lods
xchg
mov
add
push
pop
pusha
inc
ret
scas
sub
inc
mov
mov
test
pop
mov
xor
pop
add
lods
fldcw
add
fs
lds
lods
out
cmpsb
or
fstl
mov
stc
pop
cmp
fldcw
fdivs
mov
add
add
dec
insl
shld
test
jne
js
je
sub
xor
xchg
dec
out
aad
cmp
or
push
cmp
gs
mov
ret
arpl
cmp
test
jbe
int
dec
rcrb
mov
push
je
call
loopne
inc
add
fisubrl
pop
or
sbb
or
jno
add
shrl
or
mov
push
or
in
jecxz
pop
and
les
inc
in
inc
arpl
jbe
ficoms
test
cmp
or
loope
mov
imul
sti
pop
xchg
push
push
loop
pop
xor
jo
js
add
fcoms
adc
imul
gs
pop
mov
ret
subb
xchg
adc
ss
les
scas
js
flds
js
xchg
add
ljmp
xor
add
mov
add
pop
lret
jbe
pop
pusha
push
mov
xchg
clc
rorl
sarb
cmp
and
clc
mov
or
scas
xor
jg
xchg
movl
mov
jp
and
mov
adc
in
jno
cltd
xchg
ss
sti
js
xorb
movsl
movl
cmc
das
mov
int
lcall
push
rclb
loopne
nop
or
inc
cmp
leave
fidivl
movsb
xchg
cmp
mov
out
aad
aam
inc
mov
jns
xor
mov
ret
dec
adc
inc
int3
sub
or
test
dec
lahf
lret
add
and
or
or
xchg
cmp
jno
or
add
leave
into
ljmp
jb
sub
jp
cmp
xor
adc
xlat
lock
clc
cmp
stc
sub
mov
sub
shrb
mov
mov
outsl
cmp
dec
adc
sbb
sub
pusha
jle
sub
roll
sub
iret
push
int
inc
lods
subb
xchg
jecxz
push
jle
adc
iret
cmc
lret
fsts
xor
pusha
ret
sbb
push
das
and
lret
pop
push
cltd
test
xor
jl
jnp
insl
into
incl
or
pop
sub
es
in
push
xor
mov
push
sub
adc
out
loopne
stos
outsb
mov
dec
inc
cmp
jnp
dec
movsl
loop
sub
les
mov
and
loopne
pop
xchg
fildl
cmp
loopne
mov
pop
arpl
sbb
cmp
daa
out
loopne
movsb
fadds
shlb
mov
cmp
and
sub
xlat
xchg
xchg
arpl
push
cmp
test
add
rclb
popa
sbb
iret
lcall
pushf
das
xchg
xchg
inc
js
mov
pusha
add
je
xor
pop
mov
cmp
xor
or
testb
test
xchg
or
inc
adc
daa
outsl
adc
push
and
test
cld
js
or
sbbb
sarb
adc
lds
inc
jns
xchg
mov
and
sbb
push
inc
data16
je
ljmp
addr16
shll
mov
sbb
sub
cmpsb
inc
push
shll
dec
rolb
sbb
fiadds
movsb
adc
call
dec
cmp
push
jno
add
xchg
je
cli
and
js
fcmovnu
mov
shrb
lods
js
sbb
outsb
stos
jb
or
cmp
xor
imul
cs
inc
cmp
bound
mov
mov
cmp
cmpsb
mov
andb
xchg
lea
or
or
rorl
loopne
test
addb
sub
icebp
add
push
pop
push
and
or
rorb
jmp
inc
pop
mov
xchg
fldl
mov
push
cmp
or
lea
js
and
mov
loopne
xchg
lods
push
sub
sbb
lret
and
test
push
add
movsb
adc
add
mov
imul
add
sar
push
setle
push
mul
mov
xor
xor
push
hlt
mov
aad
not
mov
sbb
je
jno
add
cmp
jo
sbb
and
leave
and
rcl
fisubrl
dec
bswap
jnp
mov
inc
mov
dec
pop
stos
pusha
pushf
adc
push
push
inc
or
or
repz
xor
mov
sub
xor
mov
fisttpl
cwtl
add
scas
mov
test
shrl
call
iret
ret
int3
xor
fcmovnb
jno
sbb
pop
inc
jbe
dec
cmc
xorb
ss
testl
or
ret
popa
push
imul
jne
test
jns
cmc
cmpl
sbb
enter
movsl
in
int3
lds
inc
popa
rcr
sub
cmp
cmp
loop
int3
ret
pusha
cmp
push
imul
add
loope
lock
insl
cmp
cmp
das
jnp
jnp
push
scas
loopne
jno
cmp
out
and
cmp
hlt
addr16
sub
lock
outsb
pop
stos
sbb
icebp
gs
jp
push
scas
test
push
test
jo
mov
cmp
ret
sub
mov
fiaddl
sub
fsubl
ljmp
gs
inc
jge
xchg
inc
out
inc
cmp
cltd
push
pop
daa
inc
mov
lods
jecxz
data16
ret
xor
sbb
loopne
xor
movsb
xor
cli
mov
test
pop
jno
ret
ljmp
push
xor
sbb
mov
outsb
jbe
cs
mov
icebp
stc
jle
jle
negl
pushf
int3
mov
sbb
fs
cmp
jbe
ret
mov
in
sub
arpl
adc
mov
loop
or
mov
pop
and
cltd
and
stos
adc
xchg
inc
outsb
lret
xor
ret
movb
xor
ret
add
mov
ss
inc
je
popa
rcll
push
mov
loope
int3
mov
adc
sarb
pushf
xor
repz
inc
cmp
int3
xor
idivl
rcrb
shll
sbb
fs
sbb
les
push
adcl
pop
mull
sub
sti
js
or
cmc
inc
xor
out
add
xor
jno
lea
pop
fnsave
icebp
and
int3
and
das
push
stos
sub
lods
loopne
push
mov
and
mov
adc
xor
push
push
jl
out
push
out
jp
lods
mov
and
data16
jnp
daa
add
jge
stos
pop
mov
imul
mov
lods
inc
lea
in
fldl
and
aad
mov
cmp
push
lcall
or
enter
push
xor
and
xor
sbb
cmp
fsub
add
cld
inc
ret
cli
push
push
leave
xchg
int
inc
loopne
inc
add
ljmp
fwait
fs
pop
bswap
test
or
cltd
das
loop
imul
cs
out
xor
cmp
shll
ss
sub
arpl
repz
and
repz
sbb
xchg
pushw
lock
pop
insl
test
mov
mov
or
dec
les
dec
cmp
jbe
inc
fstpt
in
nop
test
xor
jnp
addl
les
fmuls
sti
test
int
mov
mov
fwait
into
std
out
push
mov
iret
cmpsl
gs
adc
dec
fs
xchg
adc
push
add
xchg
mov
movsl
inc
insb
ljmp
ja
mov
lahf
stos
pop
aam
movb
stc
and
inc
bound
aam
cmpsl
lods
mov
jl
dec
hlt
sahf
and
mov
test
dec
into
dec
push
arpl
and
and
test
stos
fisubl
stos
adc
stos
and
sub
add
mov
shrl
mov
inc
xchg
addr16
xor
out
xchg
je
out
bound
inc
movsb
imul
loopne
cmp
roll
jmp
out
pop
push
xlat
add
test
ds
lret
push
pop
imul
mov
mov
cmpl
jp
jle
sahf
lock
jg
imul
mov
or
xchg
cmp
adc
ss
xchg
jmp
adc
pop
in
and
mov
aas
mov
add
sub
add
pusha
ret
lcall
add
push
pop
test
xor
mov
pop
les
call
subb
sahf
jo
add
pop
mov
popf
lock
cmp
jge
call
jo
adcl
or
mov
cmpsl
jno
pop
add
sbb
notl
shr
adc
call
add
into
dec
insb
movsb
dec
call
dec
add
add
jg
or
jl
test
mov
mov
xor
nop
fisubrs
adc
iret
mov
sub
inc
sarb
into
sub
fwait
in
mov
adc
mov
leave
outsb
xchg
arpl
xchg
jne
outsl
popf
into
jle
jge
mov
pop
imul
fwait
stos
dec
ja
add
mov
and
xor
cmpsl
call
add
fwait
shrd
xor
pop
add
sbbb
or
pusha
and
xchg
in
adc
outsl
cmpsl
int3
inc
mov
jg
sub
jecxz
inc
addb
scas
mov
or
mov
into
fisubs
sub
das
fxch
xor
scas
out
mov
mov
test
xor
xchg
xor
xchg
rolb
dec
sub
pause
pop
rclb
arpl
psubsb
pop
mov
js
ljmp
sub
int
stc
bound
fsubs
pop
mov
imul
jle
add
xor
aaa
lret
push
test
mull
or
jae
out
shlb
mov
lods
fwait
cld
aad
add
shrl
xorb
scas
cmpsb
lret
push
or
popa
or
and
or
fldenv
sub
inc
js
dec
or
and
test
jbe
dec
mov
outsl
ret
sub
popa
mov
push
inc
xchg
sub
jo
es
je
sub
jo
xchg
push
cmpsb
popf
xor
and
mov
in
adc
sub
stos
pop
jnp
dec
pop
xchg
mov
js
jecxz
pusha
sbb
testb
or
xchg
jo
mov
xor
add
lods
add
ret
jns
mov
add
fs
xchg
ret
repz
sbb
dec
das
incl
test
push
sti
sub
add
lods
lret
push
test
faddp
cwtl
mov
mov
ftst
fdivs
fnstsw
lret
xor
rolb
xlat
roll
jecxz
fwait
sbb
repz
vpternlogd
cli
and
dec
sti
leave
jp
subl
orl
jae
cmc
and
das
xchg
shll
adc
jnp
pop
iret
sub
sub
or
sub
cwtl
test
arpl
jnp
xorl
daa
sub
add
sbb
add
fucomi
cmp
jge
sbbl
movsl
xchg
mov
jge
push
jl
jmp
lods
je
icebp
jg
data16
and
mov
flds
pxor
push
aaa
cmp
or
jg
pushf
mov
xchg
xor
cmp
punpcklbw
and
cmp
and
or
mov
jp
jge
psubusb
rorb
sbb
cmpb
popa
outsl
pop
jbe
pop
and
cmpsl
popa
sub
and
pop
in
ja
sub
sbb
cmovo
fcmovu
fwait
int3
or
jnp
ret
xchg
mov
mov
cmp
mov
xchg
sbb
mov
shlb
dec
movsl
inc
jae
lods
cmp
add
dec
push
push
adc
addr16
cwtl
push
stos
test
mov
rcrl
or
test
lcall
mov
jp
pusha
push
dec
addb
je
jge
mov
iret
push
mov
fadd
pop
adcb
stos
cmp
dec
mov
mov
inc
adc
outsl
mov
mov
pop
adc
sti
add
sub
xchg
cwtl
and
loop
inc
cld
int
lea
js
iret
add
out
or
jns
cmp
fisubrs
loop
and
mov
shrl
push
das
flds
rolb
lcall
pusha
test
cmp
fisttps
cmp
outsb
addr16
add
js
daa
dec
test
leave
cmp
icebp
fisttpl
cmpsb
loopne
push
ljmp
aad
icebp
add
lods
mov
or
jge
mov
xor
and
add
mov
jle
lods
stos
mov
andb
sbb
stos
sub
mov
sarb
iret
mov
nop
sub
add
mov
and
sbb
fcmovne
aad
cmp
inc
pop
jo
je
jbe
push
and
clc
fimull
daa
pop
pop
pop
sub
ret
mov
loopne
frstor
jo
outsl
aas
ljmp
lret
push
inc
inc
js
imul
sub
and
xchg
leave
cli
addr16
loope
xor
scas
cmpsl
push
xor
jg
div
mov
fnstenv
insb
mov
pusha
add
sti
inc
mov
imulb
fimuls
push
stc
out
dec
nop
imul
arpl
insb
sahf
inc
jo
mov
ja
add
push
cmpsl
xor
add
mov
push
nop
adc
test
mov
adc
mov
jo
js
adc
aas
movntps
aas
loope
scas
pop
fldt
addr16
sbb
jo
pop
dec
xor
scas
es
cmp
add
cmpsl
pop
pop
mov
lea
outsb
add
lods
sbb
sbb
ds
sbb
mov
pop
jp
pop
cwtl
xor
lea
loop
jno
outsl
je
and
add
jmp
pop
int3
lret
call
xchg
sbb
shlb
shlb
xchg
mov
push
pushf
out
aam
push
addl
andl
outsl
or
sbb
fldcw
adc
inc
sub
or
cmp
cmp
subb
daa
das
faddl
jle
imul
jno
adc
pop
pusha
cmp
stos
and
sarl
lret
test
fldcw
out
lds
arpl
jle
shrb
pop
in
scas
stos
or
es
add
jno
cld
int3
in
cmp
add
add
dec
sbb
mov
adc
jmp
pop
add
clc
fidivs
sti
imul
fidivrl
jo,pn
cwtl
or
fprem
into
push
enter
or
jno
xchg
sahf
clc
pop
iret
add
push
clc
pop
xlat
push
dec
push
mov
sub
movsb
enter
xchg
cmp
or
sbb
lods
sub
int
pop
lcall
dec
shl
and
mov
xchg
adc
loop
dec
iret
push
je
push
adc
popl
push
insl
pop
add
jle
inc
sbb
ret
lods
push
cmp
push
push
mov
rcrl
dec
dec
adc
into
dec
sub
sarb
test
jl
in
sbb
jnp
sbb
or
in
es
or
mov
push
cmc
adc
insl
mov
orl
stos
mov
arpl
jl
and
scas
jp
mov
xor
sub
sbb
js
add
addr16
lock
call
dec
mov
mov
ja
mov
cmp
loopne
ret
sarb
mov
enter
jns
ficoms
sbb
xor
fistl
jl
or
sbb
sahf
and
fcompl
add
mov
or
and
push
cmp
pop
loop
ret
push
and
test
into
mov
add
pop
stos
pop
pushf
imul
bound
mov
mov
roll
and
addr16
jle
add
insb
sbb
outsb
and
lea
pop
lds
jne
push
repz
ss
mov
add
mov
js
mov
lods
daa
flds
aam
aam
fwait
add
mov
and
inc
sbbl
arpl
mov
sbb
and
out
outsb
inc
inc
jo
scas
cltd
cmp
sbb
sub
adc
sub
arpl
and
mov
adc
jne
add
xor
mov
add
or
sti
pop
inc
adc
push
out
movsb
push
popa
ffree
jo
roll
mov
and
int3
jnp
add
hlt
movl
lret
cmp
adc
test
scas
xchg
je
shrl
clc
mov
mov
int
aad
jb
lcall
movb
push
imul
xchg
test
roll
jle
xor
sbb
xor
rcl
sbb
push
je
ret
add
mov
or
and
push
movsb
xlat
jmp
popa
or
fldl
fsubrs
sub
fsts
fs
xor
sbb
and
shll
and
lcall
add
int3
loop
test
and
jne
pop
rorl
adc
test
cmp
jbe
pop
les
dec
mov
xchg
jo
dec
fcoms
xor
cmp
inc
and
push
stos
test
cmp
lods
int
xchg
xor
divl
add
ss
int3
push
hlt
push
xchg
icebp
xchg
loope
xchg
jnp
test
push
lods
mov
lock
jo
mov
xchg
add
es
xor
add
rorl
sbb
out
test
xchg
inc
fisubl
adc
jmp
add
out
xchg
scas
mov
subb
or
and
test
insb
jge
arpl
stos
sbb
xor
lret
cltd
mov
dec
out
cmp
and
mov
adc
out
push
int3
ss
dec
int
or
pop
sbb
add
insb
xor
fisubs
push
jecxz
push
scas
iret
movb
shll
es
data16
insl
lret
xchg
ret
jle
fisubrs
test
add
add
data16
push
pop
jle
and
jb
rol
aam
cmp
rolb
push
add
stos
dec
ljmp
adc
xor
mov
mov
sub
pop
mov
test
mov
ja
shlb
push
mov
ret
and
dec
push
add
stc
pop
inc
cmp
push
lcall
xchg
rolb
pusha
cmp
shll
push
sub
loope
fs
testl
and
push
mov
cmp
adc
xor
pop
stos
xlat
jge
sub
push
cmp
jo
or
pop
std
fdiv
je
push
xor
add
stos
ret
test
fs
push
or
ja
jbe
fwait
adc
in
mov
pop
loop
test
arpl
jge
push
mov
out
mov
loope
mov
movsl
xor
inc
icebp
lcall
adc
lcall
lds
scas
dec
add
aad
sbb
adc
jmp
pushf
popa
ss
daa
ficoml
icebp
xor
sarl
pop
fcmovnu
push
mov
out
push
sbb
aam
mov
jnp
jp
cs
or
mov
ret
adc
aam
gs
cmc
int
jo
sbb
sbb
pop
add
int3
call
mov
fisubs
sub
out
iret
clc
into
scas
push
pop
and
bound
jmp
xchg
mov
and
rclb
clc
xor
arpl
stos
call
pop
adc
xor
add
inc
aad
xchg
xlat
and
mov
sub
xchg
add
scas
mov
mov
pop
jbe
shlb
dec
sbb
nop
cwtl
shrb
adcb
rorb
and
dec
stos
add
add
out
sbb
sbb
adc
stos
je
rorl
push
pop
outsb
adc
or
dec
gs
movsl
adc
dec
inc
mov
int
pushfw
jno
dec
ret
aaa
js
leave
shrb
push
int3
mov
and
sub
pop
shlb
jp
xchg
orb
sbb
pop
mov
fnstcw
push
sbb
add
fwait
push
lods
pusha
in
outsl
sbb
int
cmp
lret
out
add
lods
clc
pop
xchg
adc
int3
fstpl
repnz
loop
dec
loop
icebp
push
cltd
mov
jle
push
clc
cmp
lret
cmpsl
mov
sub
pop
arpl
mov
out
dec
sbb
pusha
test
in
inc
jge
jmp
xor
andl
xchg
and
lea
aaa
insb
add
inc
xorb
push
and
mov
mov
addl
inc
and
adc
mov
pop
js
sbb
sbb
push
sub
sbb
cmpl
adc
xor
adc
jb
and
in
icebp
mov
aas
add
in
mov
ja
inc
adc
idivl
mov
push
sub
mov
fwait
add
jecxz
adc
cmp
shl
dec
cltd
jle
cs
cs
int3
repz
dec
iret
mov
sub
dec
sbbl
fidivrs
pop
clc
add
das
nop
es
hlt
jo
int3
stos
stc
pop
in
mov
addb
push
test
sub
adc
sbb
dec
mov
addr16
cmp
and
mov
es
insl
xor
test
int3
add
jae
xor
xchg
call
or
push
ret
pop
push
adc
loope
call
xchg
pop
push
stos
fchs
adc
xor
push
pop
cmp
lds
stos
lret
mov
add
or
cwtl
dec
sub
inc
xchg
xchg
xchg
jmp
pop
pop
aad
xor
xchg
or
lret
loopew
or
mov
movsb
fsubs
and
lods
sahf
push
push
sti
neg
nop
dec
ss
lods
in
or
cmp
cld
dec
clc
js
and
test
pop
lock
cli
push
pop
faddl
add
bound
pushf
jge
sahf
mov
jmp
lods
or
xchg
test
xchg
pusha
mov
adc
jbe
cli
mov
mov
add
out
mov
sti
dec
outsl
pop
mov
xor
inc
mov
xorb
adc
add
test
xor
and
sbb
out
mov
add
daa
push
lds
in
cwtl
push
nop
js
scas
and
out
push
js
or
dec
dec
dec
sub
mov
push
rolb
jno
jo
sub
jb
dec
mov
cwtl
mov
sbb
push
adc
adc
imul
add
lea
jle
mov
inc
adc
push
sub
xchg
pop
comiss
inc
inc
outsb
and
fimull
int
add
push
xor
mov
lock
es
les
or
lock
add
fwait
ss
add
pop
push
push
xchg
stos
mov
inc
inc
mov
pushf
rolb
cwtl
push
movsb
call
lret
dec
loop
subl
adc
jne
and
pusha
mov
out
add
and
roll
in
ret
push
pop
jle
dec
sbbl
xchg
mov
cmp
stos
loop
lea
mov
push
js
push
daa
les
xchg
lea
inc
fadds
bound
dec
inc
js
inc
adc
clc
and
bsf
inc
and
movsb
add
xor
dec
pop
lock
adc
and
sbb
mov
dec
sub
incb
pop
sbb
add
mov
sti
push
dec
add
adc
dec
and
add
aaa
addr16
mov
clc
add
int3
insb
imul
imul
adc
enter
mov
cmp
mov
lods
test
sbb
movsb
aad
dec
mov
mov
ss
test
pop
adc
cmc
dec
out
xlat
aad
cmp
dec
jno
adc
mull
mov
aad
adc
mov
outsb
or
adc
mov
cmp
ss
mov
bound
lcall
xchg
xor
push
daa
mov
stos
cld
jle
mov
and
or
push
imul
mov
int3
add
hlt
xchg
push
icebp
xor
mov
xchg
inc
add
mov
or
cmpsl
jo
gs
dec
dec
test
in
pop
cmp
fiadds
imul
inc
pusha
inc
cmp
pop
ljmp
lods
xchg
jae
pop
cmc
push
lret
jbe
or
fwait
sbb
mov
xor
xchg
xor
jmp
jns
repz
ret
hlt
in
and
imul
pop
fistl
mov
xor
xchg
iret
rcrl
mov
inc
loopne
pop
scas
sub
mov
pop
push
pop
cs
movsl
inc
sub
loope
das
push
sbb
adc
mov
dec
sub
and
out
add
fsubs
sbb
inc
dec
lock
mov
xor
push
cmp
ja
xor
mov
inc
andb
and
sub
js
sub
xchg
das
mov
sbb
lcall
pushf
inc
xchg
and
dec
mov
into
adcb
stc
xchg
out
dec
and
iret
mov
loopne
pop
lahf
lret
iret
add
cmpsb
push
or
gs
ds
and
adcl
inc
jno
aaa
or
mov
push
es
mov
xchg
mov
scas
daa
or
stos
and
mov
lcall
add
in
sub
fcmovnu
addr16
loop
movsb
xor
and
jo
sbb
aam
push
arpl
clc
and
int
xchg
daa
add
add
ds
xor
xchg
aaa
mov
pusha
pusha
inc
cwtl
ficoms
mov
adc
add
in
push
push
xchg
and
add
xchg
stc
add
cmpb
add
lds
daa
and
mov
cmc
data16
push
loop
dec
pop
ret
mov
outsb
inc
xchg
bound
add
mov
imul
gs
test
inc
add
push
inc
mov
mov
xchg
mov
scas
jo
push
add
cmp
outsl
dec
fistl
gs
xor
fcomps
adc
push
dec
in
fildll
mov
add
or
sahf
adc
mov
movsl
orb
adc
sbb
mov
xlat
or
cmp
jo
aas
fs
popf
xor
mov
sub
bound
xchg
add
xor
xchg
mov
ret
repz
add
add
mov
pop
cli
or
and
push
js
and
mov
mov
xchg
imul
jae
int3
test
xor
mov
and
pop
push
mov
push
and
pop
arpl
push
outsl
or
int
mov
mov
addr16
loopne
cli
les
shrb
insb
push
lock
sarl
mov
inc
stos
mov
in
lock
add
or
int
mov
mov
mov
adc
push
jnp
data16
rcll
dec
sub
aam
imul
push
jno
pop
xchg
or
out
xchg
mov
sbb
fisttpll
xchg
les
inc
jne
add
mov
cltd
mov
sub
or
mov
inc
das
daa
push
lret
pop
adc
jge
cmp
les
cwtl
inc
daa
push
push
cmc
ljmp
jnp
cmp
add
out
mov
xchg
adc
shl
dec
aam
sbb
and
movsb
addb
and
iret
fadds
lret
ret
hlt
or
cmp
adc
cli
stos
mov
push
push
jecxz
and
lcall
fisttpll
ss
neg
pop
add
arpl
xor
mov
in
test
add
js
aaa
cmpsb
sub
mov
movsl
faddp
or
daa
iret
mov
and
push
pop
pop
aaa
popf
fidivs
outsl
iret
sbbb
cld
lods
aad
testb
mov
mov
jnp
mov
repnz
or
jl
or
scas
jne
inc
in
pop
xor
inc
mov
dec
test
mov
cmp
inc
inc
rcr
fldenv
dec
mov
dec
lds
jecxz
scas
and
pop
and
pop
inc
xor
cmc
and
mov
jp
je
jo
xchg
xor
inc
add
fsubs
xor
repz
lods
xor
cmpsl
pop
adc
push
xor
mov
add
xchg
jo
loopne
je
jns
and
pusha
test
aaa
dec
inc
mov
pusha
jp
loopne
int3
ficompl
push
inc
sbb
loope
inc
mov
and
popa
das
or
pop
add
andl
adc
sbb
hlt
push
test
lods
pop
adc
scas
call
rorl
push
das
mov
daa
dec
inc
imul
adc
jle
push
int
pop
je
sub
jnp
icebp
shrb
mov
pop
bound
xor
inc
fistps
adc
fdivrl
push
push
in
adc
push
adc
or
push
out
sbb
xchg
lcall
xchg
loopne
cmpsb
fucom
pop
int3
xlat
adc
iret
leave
mov
and
adcl
add
scas
punpcklwd
je
or
hlt
xchg
pop
das
jae
push
cltd
cmp
jb
or
push
push
xchg
push
xchg
in
xchg
jmp
push
fsubrs
pop
mov
in
or
push
add
aaa
or
ret
add
or
pop
pop
or
sub
xor
jns
sub
mov
sbb
lods
push
loope
idivl
add
and
inc
push
push
pop
adc
test
mov
push
sub
push
inc
add
insb
lahf
dec
test
jo
aaa
imul
jo
add
inc
iret
insl
enter
mov
movd
push
dec
stos
in
ss
nop
testb
mov
cmp
mov
push
pop
and
cmpsb
mov
lcall
test
jb
fwait
push
cmp
stc
and
mov
add
pop
arpl
or
or
push
xor
mov
shlb
pop
mov
dec
add
sub
sbb
push
fidivrs
sbb
mov
ds
rcl
into
mov
test
lods
in
movsb
xor
jo,pn
mov
xor
lods
ficoms
push
clc
mov
xchg
sub
jae
mov
mov
andl
in
bound
addr16
aas
pushf
xlat
out
inc
loopne
loopne
jns
mov
sarb
jle
roll
push
jge
or
hlt
push
fcmovnu
cwtl
iret
pop
dec
and
cmp
jle
xchg
rcr
mov
call
push
scas
data16
adc
test
out
pop
fstpt
lret
outsl
cmpsl
xchg
pop
mov
stos
and
das
push
std
lahf
and
or
jo
cmp
aaa
push
sbb
or
imul
cltd
aaa
repnz
imul
rorl
in
sub
dec
xchg
mov
pusha
lret
stc
sub
pop
pop
lods
mov
sbb
and
xchg
aaa
mov
push
sub
cmp
scas
or
idivl
jno
int3
sub
adc
dec
int
lcall
sbb
fwait
mov
cwtl
dec
pop
into
pop
es
idivl
stos
pop
lods
popf
or
mov
dec
jle
push
pop
inc
dec
ret
movsb
ss
scas
mov
dec
fnstsw
push
cli
in
jb
inc
inc
dec
stos
sub
add
ret
sub
dec
adc
sbb
jle
mov
lods
lret
jp
jo
lock
inc
pop
cwtl
sar
bound
and
loop
cmp
inc
notl
sub
imulb
or
testb
int3
das
leave
or
popa
ss
stos
nop
hlt
inc
jne
shll
jb
mov
scas
negl
sbb
sbb
jmp
sahf
and
and
jo
add
and
and
lock
cmp
cmp
add
push
jg
out
mov
out
push
or
lcall
sbb
cmp
pop
inc
cmp
sbb
inc
cmp
push
aam
pop
stos
clc
xchg
push
jp
ret
xor
cmp
xchg
loope
fwait
hlt
js
notb
mov
add
jno
sub
aam
test
add
sub
mov
lods
dec
lea
jp
or
pop
and
pop
sub
cmp
in
xchg
mov
xchg
mov
cmc
jle
mov
mov
jmp
dec
rorb
sbb
out
push
jge
push
fistps
push
inc
push
and
jmp
mov
mov
xor
scas
mov
stos
xlat
mov
shrl
xor
mov
lods
push
xor
popa
cmp
sbb
loope
sub
and
mov
pop
leave
dec
je
mov
jp
lahf
or
mov
mov
jb
and
out
cmc
rclw
ret
cmp
pop
mov
ret
cmc
pop
pop
test
mov
mov
mov
lahf
jmp
mov
xor
cmc
or
push
ret
add
ret
mov
out
sbb
loopne
add
xlat
or
mov
mov
pop
mov
inc
sbb
les
inc
scas
cmp
js
jne
rorl
mov
dec
cmp
stc
xor
fbstp
push
es
adc
mov
repnz
mov
rol
inc
call
xor
das
movb
pop
xchg
jp
dec
lret
add
push
inc
fadd
or
mov
rolb
pop
leave
lcall
mov
in
into
movsb
push
mov
int
lds
cs
je
xchg
or
mov
stos
out
xchg
mov
imul
les
and
push
xor
sbb
and
sbb
dec
test
mov
mov
mov
ja
stos
add
js
shr
mov
jo
fsubr
mov
cmp
fisttpll
mov
pop
fwait
jno
iret
dec
xor
sbb
cmp
lcall
sbb
subb
popa
pusha
push
inc
and
mov
pop
or
xlat
movsb
in
inc
jb
mov
mov
lods
mov
pop
repz
decb
insb
in
push
loop
movl
loope
mov
xlat
movsl
push
mov
push
add
mov
stc
sarl
or
push
add
add
pushl
sub
adc
and
fwait
cs
mov
cmpb
in
pusha
pop
pop
ja
cmp
add
xchg
aas
loopne
push
jae
and
sub
daa
repnz
out
and
cli
inc
jmp
rclb
push
mulb
icebp
das
pushf
rcll
scas
mov
jnp
add
fisubrs
or
stos
je
fidivs
mov
pop
stos
aam
dec
pop
push
clc
xor
xlat
mov
test
push
in
push
stos
std
in
mov
adc
out
adc
jns
push
push
lods
inc
xor
mov
leave
push
sub
push
dec
lods
mov
pop
icebp
adc
in
push
dec
sbb
xchg
out
jle
daa
dec
push
jge
cmp
inc
pusha
inc
and
std
lods
and
and
fmull
xchg
out
in
mov
cmp
fistpll
es
scas
xor
ret
inc
cmp
fsubp
aaa
push
push
aaa
xchg
pusha
mov
sbb
fisttpl
aaa
pop
mov
jns
rol
add
out
bound
shll
arpl
pop
push
pop
or
xchg
push
xor
stos
rorl
and
adc
sub
xchg
jge
adcl
lret
mov
cmc
inc
outsb
popl
adc
and
jecxz
sbb
dec
cmpsb
idivb
xchg
aas
xchg
push
jne
aad
mov
notl
inc
test
fwait
xor
out
test
inc
cmc
das
incl
jecxz
test
sti
adc
imul
push
jmp
xchg
ret
dec
outsb
mov
pop
ret
mov
testb
mov
xchg
iret
faddl
mov
mov
adc
insl
dec
stos
xorl
adc
jno
mov
ror
loopne
enter
add
es
leave
subl
jnp
sub
or
fsubl
das
call
repz
add
jmp
inc
inc
stos
js
xchg
stc
xchg
lods
cmp
ja
or
int3
sbb
sbb
lcall
jmp
dec
loop
jb
cmc
inc
insb
xchg
push
or
push
pop
adc
dec
iret
adc
and
jno
loope
leave
test
cmp
mov
les
mov
mov
mov
and
dec
xchg
cmpsl
sub
es
stos
or
lea
loop
push
push
testl
cld
jge
test
into
xor
and
test
mov
rcrl
gs
push
lea
sbb
jl
je
test
xor
push
dec
xchg
inc
mov
push
rorb
mov
jns
shrl
add
sar
push
andb
push
cmp
add
scas
sub
loope
mov
adcl
sub
cmpsb
and
sbb
jmp
insl
mov
mov
mov
js
test
in
jmp
fstpl
xchg
cmp
jmp
bound
jp
loopne
xchg
pop
stos
aam
mov
mov
dec
cmpsl
mov
and
std
and
add
or
les
sbb
mov
cmp
jp
adc
icebp
sbb
mov
imul
dec
mov
and
mov
jmp
andb
loope
clc
clc
sub
ja
or
cmp
push
jae
push
xor
push
xchg
pusha
and
or
mov
add
push
and
mov
xor
test
jo
push
xchg
sbb
in
in
testb
fwait
aad
or
push
mov
add
add
dec
xor
adc
fs
pop
pop
xchg
cmpsl
add
add
and
and
dec
dec
daa
sbb
inc
jp
loopne
add
imul
inc
push
icebp
sub
or
fisubs
ds
ss
xchg
dec
and
daa
cmp
inc
daa
lds
hlt
mov
cmp
jno
scas
sti
rcrl
icebp
stos
or
xor
push
push
enter
push
loopne
in
cmp
xor
sub
jno
pop
add
dec
sub
xor
jg
mov
ss
arpl
sub
jo
fsubs
xor
pop
scas
or
mov
mov
loop
sbb
cmp
push
nop
ds
jnp
or
or
pop
xchg
inc
mov
or
jp
jp
dec
in
test
push
mov
roll
mov
push
pusha
mov
inc
ret
push
lods
pop
outsl
out
jnp
cvtdq2ps
sbb
lea
cmpsl
or
sbb
bound
push
xchg
add
jno
inc
ss
mov
mov
push
outsl
xlat
mov
add
aad
sub
dec
xor
int3
push
and
cltd
xor
nop
daa
push
xor
xchg
add
inc
movsb
gs
bound
add
and
sub
ds
sbb
add
jns
sbb
shlb
stos
xor
lods
fidivl
jbe
add
sbb
mov
aaa
jo
add
or
pop
aas
ja
test
or
sbbb
push
movsb
dec
inc
daa
notl
and
leave
add
insl
adcl
adc
and
xchg
inc
cwtl
mov
loop
mov
mov
test
jno
lret
and
data16
call
sbb
popa
ja
sti
xchg
add
pop
lods
fsubrs
inc
sbb
ljmp
cmp
sbb
in
out
roll
outsb
and
mov
lret
in
setae
mov
int3
add
mov
je
cmp
mov
iret
repz
xor
mov
icebp
or
pop
jo
add
push
add
shl
clc
out
loopne
xor
iret
sub
or
xor
lcall
popf
fld1
hlt
and
jge
pop
and
sub
adc
cmp
loopne
pop
ds
scas
nop
sbb
cwtl
sbb
xor
jl
inc
cmp
inc
mov
adc
inc
addr16
ljmp
xchg
cmp
lods
iret
lea
ds
xor
in
into
push
adc
pop
ret
sub
pop
dec
cmpsb
rcr
sbb
dec
push
fcomps
mov
cwtl
add
insl
xchg
loope
loope
cli
mov
sar
mov
andb
scas
movsl
or
inc
sbb
pop
jg
jns
out
cwtl
sub
cmp
xor
out
cvtpi2ps
test
inc
dec
cmp
out
mov
and
fwait
adc
jmp
flds
and
inc
mov
push
test
dec
lret
xchg
test
or
imulb
sub
rorl
es
xor
xor
negl
add
mov
shl
sti
pushf
xor
add
jle
adc
inc
jge
mov
sub
hlt
xlat
fnsave
test
mov
push
insl
adc
inc
or
fld
cmp
imul
sub
or
mov
popf
sbb
cmp
sub
or
xor
mov
and
and
iret
xor
add
out
xor
test
shlb
lret
mov
lods
cmp
loopne
ret
xor
add
push
sbb
jp
shlb
cmp
mov
lret
cmp
scas
dec
adc
mov
mov
pop
xchg
and
xor
add
mov
adc
mov
leave
sub
push
daa
jge
push
std
inc
xchg
int3
inc
xchg
mov
xor
push
add
enter
pop
loopne
cmpl
outsl
stos
pusha
jnp
lods
lret
in
cs
sub
lds
mov
cmp
xor
movsb
gs
in
mov
add
lods
add
out
adc
sub
inc
sbb
xchg
add
push
insb
add
xor
loop
and
push
aad
and
xchg
mov
dec
cmc
data16
mov
and
sub
add
or
cmp
jle
mov
add
mov
shlb
inc
xchg
pop
aad
roll
push
or
aad
and
mov
push
inc
xchg
js
sub
int
orb
loope
fldt
mov
jae
shll
sbb
popf
jae
adc
mov
inc
xor
imul
dec
je
loope
jns
cmp
cmp
mov
sbb
push
jbe
inc
dec
in
cmp
jne
sub
out
add
cmc
les
adc
adc
fnsave
mov
sub
aam
and
aad
add
mov
lcall
adc
mov
or
iret
lret
and
xchg
xor
in
jmp
and
jmp
sbb
mov
popf
mov
js
stc
fimuls
sub
add
adcl
push
inc
loop
and
add
add
mov
xchg
daa
aad
inc
nop
mov
lret
pop
pop
sub
inc
int3
xor
cmp
outsl
add
fimuls
and
mov
arpl
adc
lea
and
add
cltd
sbb
mov
or
les
enter
das
xchg
dec
sti
or
sub
add
ja
sti
sub
lock
cmpsl
mov
inc
icebp
add
shrl
mov
jp
xchg
push
pop
xor
cmp
jne
xchg
rorl
add
push
sbb
cmp
push
cmp
push
pusha
mov
cmp
lock
mov
gs
mov
add
stos
cs
faddp
arpl
lcall
ss
popa
adc
jne
les
add
and
push
xor
ja
and
and
dec
cmp
jbe
movsl
adc
imul
push
cmpsl
loope
nop
movsb
pushf
mov
outsl
das
xor
inc
cmp
sti
insb
add
cld
cli
cltd
mov
or
aas
das
outsb
das
xchg
in
nop
pushf
testb
popf
mov
adc
dec
cwtl
add
mov
popf
pop
cmpb
mov
into
inc
mov
sbbb
pop
testl
aam
aam
push
daa
aad
mov
sub
dec
jle
loope
popa
push
jle
loop
pop
rcrb
dec
jo
in
push
and
mov
dec
jb
call
movsw
lea
movb
mov
xlat
cmp
in
adc
call
xor
aas
mov
fadd
dec
jp
sbb
cwtl
mov
cmp
sbb
jecxz
jb
aam
das
scas
jmp
fisubs
xchg
mov
adcl
and
jbe
ffree
cmp
jle
pop
mov
fcoml
punpcklbw
loopne
or
daa
fcomps
adc
inc
test
xchg
popf
jne
sub
rorb
ficoms
pop
or
xchg
mov
pop
xor
jns
leave
cmp
add
sbb
into
insb
addr16
push
jp
rol
add
test
stos
jne
loopne
xchg
mov
or
push
mov
xor
mov
ficoms
stos
maskmovq
notl
cmp
sarl
lods
fmuls
andl
sbb
inc
es
popa
push
lods
out
inc
and
or
pop
fsubrl
adc
sbb
inc
or
mov
in
mov
lea
repz
shrl
je
lods
es
das
scas
cmp
mov
adc
popf
cltd
xchg
mov
adc
lahf
test
sbb
das
mov
dec
int3
mov
in
and
stos
xchg
mov
or
jge
fbstp
xor
sub
add
xor
pop
fildll
jne
sub
repnz
bt
or
adc
insl
mov
xchg
imul
out
outsl
mov
std
mov
es
rcll
push
sbb
lret
and
xor
and
lcall
test
and
sbb
aam
aam
scas
adc
push
test
mov
out
mov
test
cs
jp
inc
setnp
stc
je
or
push
lock
jae
sbb
call
enter
fdivr
push
cmp
popa
push
mov
call
pusha
xor
dec
int
jle
mov
loopne
arpl
test
adc
loope
leave
bound
jp
or
mov
cmpb
mov
pop
js
mov
xlat
stc
jne
dec
dec
xor
mov
xor
daa
fdivrs
outsl
add
test
cwtl
aaa
cmc
movsb
inc
jecxz
mov
dec
mov
es
dec
lcall
out
sbb
sbb
mov
adc
cwtl
aam
mov
push
dec
dec
into
aam
shll
inc
mov
inc
pop
adc
aaa
push
and
dec
dec
ret
jnp
xor
aam
jp
cmp
add
and
fwait
insb
dec
jnp
adc
add
ret
jg
iret
cmp
sbbb
data16
add
pop
test
add
cmp
andb
mov
movsb
inc
negl
cwtl
scas
push
add
jecxz
mov
les
or
pop
mov
xchg
pop
or
cmpsb
sbb
stos
jo
mov
lods
outsb
iret
jecxz
imul
loop
jmp
mov
mov
dec
xchg
push
hlt
loopne
mov
into
mov
cmp
test
add
mov
mov
pop
push
jno
and
subl
loopne
sbb
dec
scas
xchg
or
call
inc
daa
adc
orl
fldl
bound
inc
jb
inc
fdivl
arpl
dec
in
nop
pop
adc
mov
push
add
insl
and
push
pusha
sbb
xchg
cmp
sub
fldt
je
mov
pop
jecxz
and
xchg
inc
xor
cmc
cmc
sbb
inc
mov
repnz
test
in
bnd
xchg
stos
in
inc
enter
add
test
xor
popa
inc
cmpsl
push
dec
lock
jp
mov
frstor
test
dec
add
pop
lock
lods
scas
mov
shlb
xchg
daa
std
xor
dec
js
mov
mov
sar
mov
addb
inc
xor
push
std
jle
lock
sub
adc
mov
cmp
push
or
add
cmpsl
inc
pop
push
jge
inc
jo
loope
and
xlat
fistpl
lods
and
lock
aam
rcl
cmpsl
adc
mov
roll
xchg
xchg
imul
movb
lods
fs
mov
les
adc
sti
xchg
or
mov
je
out
or
dec
jbe
add
pusha
pusha
mov
mov
fwait
or
cmpb
mov
inc
pop
push
add
mov
daa
pusha
dec
pop
adc
and
pusha
loop
daa
sahf
es
mov
add
loopne
sbb
jae
lret
xlat
pop
xchg
into
inc
imul
dec
add
mov
or
and
movb
testl
mov
loop
or
pop
mov
push
iret
outsb
push
and
imul
cmp
call
imul
push
inc
aad
pushf
jae
inc
cmp
dec
add
sbb
adc
subl
fmul
or
out
scas
jecxz
or
js
int3
jle
push
test
mov
adc
lea
aaa
ret
add
fsts
aas
add
adc
xor
daa
xchg
push
sub
push
adc
xor
and
stos
loopne
cmp
dec
pop
icebp
push
test
mov
pop
push
incb
clc
xor
out
mov
jl
loop
sbb
jb
shll
into
dec
les
add
pop
pop
fadds
fdivrl
push
sub
xor
jge
dec
and
inc
cmc
or
adc
mov
inc
mov
lock
inc
push
inc
adc
inc
add
mov
or
xchg
int3
dec
ret
out
notb
and
pusha
cmpsl
xchg
imul
ret
ja
pop
mov
inc
loopne
les
mull
xor
lahf
pop
add
ret
pop
mov
cltd
add
ret
jge
and
jns
out
pop
insb
sbb
std
popa
rcrl
push
inc
imul
add
xchg
adc
pop
or
push
mov
or
lods
xor
push
xchg
rol
push
xchg
sub
icebp
adc
jbe
xchg
adc
push
rcll
mov
add
ret
push
adc
or
imul
sbb
mov
sahf
int3
cmc
mov
xor
js
dec
mov
stos
pop
add
xorb
addr16
bound
xor
bound
mov
sub
div
scas
bound
sbb
pop
ret
adc
or
or
add
popf
sub
aaa
mov
ret
cmpl
call
lds
sbb
inc
jmp
adc
fistpl
adc
add
ficompl
das
pop
xor
pop
xchg
xchg
test
loopne
enter
test
hlt
push
push
mov
fiaddl
addl
jg
adc
inc
push
sahf
sub
xchg
lods
dec
scas
sub
dec
cwtl
jg
add
in
ret
and
in
push
gs
push
jl
sbb
add
mov
add
lret
adc
mov
movsb
lahf
and
test
inc
add
aam
add
and
cmp
cmp
jp
rcl
adcb
lcall
or
and
aam
lret
xchg
cmp
insb
lret
ljmp
push
dec
or
push
jge
push
loop
frstor
stos
ficompl
mov
movsb
jle
scas
push
lods
mov
adc
sarl
cmp
mov
popa
inc
lds
out
inc
mov
test
lock
cmp
jnp
mov
sub
aad
xchg
adc
push
xchg
sbb
daa
mov
jnp
inc
inc
and
push
mov
xlat
inc
clc
xchg
mov
mov
push
sarb
mov
xlat
rcll
push
cmpsl
mov
xor
lods
and
jnp
ficoml
xchg
stos
mov
jmp
enter
push
es
js
xchg
arpl
fcoml
lcall
xor
dec
add
daa
sub
pop
stos
clc
or
inc
movzwl
xchg
orb
sub
xchg
inc
sub
pop
scas
pop
pop
fs
sbb
in
add
dec
stc
les
imul
mov
jbe
pop
stc
xchg
add
or
mov
add
mov
and
aaa
xchg
adc
mov
das
sub
add
push
xchg
add
lock
push
push
push
push
lcall
jle
sbb
add
fadd
nop
mov
nop
pop
fiaddl
call
and
pop
ret
and
or
dec
rcl
addr16
push
cli
lcall
add
iret
cmpsl
dec
or
push
or
xor
add
fisubl
inc
sbb
sub
inc
xchg
add
xor
incl
dec
lcall
and
sarl
roll
and
pushf
dec
jle
jb
imul
mov
call
and
jecxz
jle
aad
sbb
jmp
dec
mov
loopne
mov
sarl
arpl
dec
shrb
lock
mov
imul
sub
dec
add
add
pop
roll
js
pop
sbb
int
jmp
and
or
adc
lods
dec
jbe
das
pusha
mov
and
and
xor
add
fcomps
xor
shrl
pop
sbb
jmp
aad
dec
mov
add
inc
jb
outsl
mov
nop
out
adc
in
mov
and
push
roll
jo
insb
xor
out
movsb
or
mov
lods
arpl
inc
dec
pop
adc
ror
xchg
lahf
imul
outsl
aaa
faddl
and
cli
sub
sub
push
dec
mov
adc
and
inc
mov
sahf
subb
add
mov
or
jno
sub
xor
jl
mov
and
mov
push
pop
shlb
or
dec
ljmp
rorl
add
sub
mov
jmp
xchg
in
scas
fcoms
xchg
add
cwtl
add
and
pop
push
enter
sarb
cwtl
mov
lock
xor
inc
xlat
and
inc
push
adc
sub
mov
pop
adc
push
lock
inc
movsb
sbb
and
ret
outsb
out
adc
mov
sbb
sbb
push
test
stos
ds
int3
ljmp
xchg
adc
or
cmc
mov
nop
push
push
mov
sub
test
or
pop
mov
arpl
inc
loope
rclb
xorl
push
adcl
jle
fiaddl
push
jae
sbb
mov
push
outsb
lods
ljmp
push
fidivl
jb
stos
fs
ss
lcall
fmull
aas
rorb
jmp
addr16
icebp
pop
int3
hlt
cmp
out
int3
adc
popl
add
std
xor
mov
sbb
inc
rcrb
jle
ljmp
movsl
dec
rorb
adc
les
test
mov
adc
pop
or
inc
rorb
dec
xchg
sub
or
test
and
shrl
andl
cmp
mov
int3
or
push
mov
pop
lock
icebp
and
sub
test
mov
lcall
jno
fsubs
movsb
out
adc
and
cmp
rol
dec
ret
adc
int
adc
pushf
add
or
outsl
inc
js
sbb
xor
xor
js
or
dec
daa
pushf
inc
loope
or
sbb
in
mov
or
adc
add
inc
inc
inc
xchg
mov
pusha
or
dec
leave
jo
clc
addr16
sub
and
xor
push
sahf
and
mov
and
jmp
ljmp
push
xor
xor
nop
jae
aad
push
adc
sbb
inc
ret
and
pop
testl
bound
dec
push
add
jno
mov
push
add
cmpsl
jecxz
stc
das
or
jne
hlt
mov
cmpsl
fsub
fistpl
mov
fneni(8087
xchg
les
adc
mov
fisubrl
js
add
mov
lock
fcmovnb
cmpb
scas
imul
push
je
popf
add
js
mov
mov
add
out
das
push
stos
dec
xchg
testb
mov
cmp
push
and
xchg
dec
daa
rorb
adc
inc
lods
or
dec
test
clc
addl
das
call
cwtl
xor
push
ret
dec
push
daa
xor
das
fs
or
pop
jbe
or
mov
mov
push
hlt
dec
xchg
jle
mov
push
imul
xor
xchg
lret
jp
or
int
roll
mov
je
pop
mov
xor
pop
or
xor
stos
xchg
add
nop
add
mov
movsb
xchg
scas
jge
incl
sbb
cmp
push
daa
pop
cwtl
cmp
cmp
adcb
imul
sub
xchg
insl
inc
or
push
filds
xchg
js
mov
shlb
aad
int3
sti
test
bound
sub
mov
mov
les
pop
xlat
add
adc
inc
push
andb
popa
ss
mov
push
jecxz
sub
popa
or
mov
inc
push
and
pusha
test
lea
stos
rolb
subb
push
daa
ret
hlt
inc
and
cmp
cmpsl
adcb
dec
daa
cmp
adc
add
enter
sub
popf
es
gs
dec
lds
or
insl
cltd
pop
sti
aam
pop
ret
es
shll
cmp
cmp
xor
xchg
xor
or
and
call
mov
in
sbb
test
push
lds
ret
test
mov
mov
xchg
mov
loope
loope
xor
mov
lret
push
add
sbb
cmp
or
push
sub
pop
adc
imul
div
push
shll
std
xchg
dec
fdivs
push
cs
dec
add
push
lods
sub
and
adc
cld
add
fdivrs
mov
adc
push
xor
mov
mov
mov
or
addb
mov
add
mov
pop
mov
ja
fstpl
test
inc
xchg
push
fadds
jle
sbb
popa
pop
shll
inc
xor
mov
fs
test
orb
les
gs
mov
xchg
out
mov
mov
mov
pop
shlb
rorb
and
test
es
or
arpl
aam
pop
adc
sti
push
lds
mov
push
dec
mov
adc
cmp
adc
test
pop
js
in
add
mov
test
shl
mov
or
pop
sti
jle
jnp
sbb
insb
es
add
lds
test
or
add
push
andl
cmp
add
adc
pop
push
popa
decl
jl
xor
jo
ja
sbb
adc
rcrl
fiaddl
mov
xor
fstl
inc
aas
or
inc
mov
xchg
test
inc
popf
lcall
pop
cwtl
add
aam
adc
and
and
xor
test
sub
xor
pop
add
inc
push
xor
cli
imul
das
pop
pop
sbb
mov
jno
inc
pop
dec
xor
out
xor
test
leave
test
xor
stos
std
cmp
xor
dec
add
orb
sarl
out
push
inc
loopne
adc
dec
xchg
mov
xchg
stos
or
push
and
inc
divb
lock
daa
inc
xchg
cmp
dec
add
stos
pusha
cmp
xlat
je
divl
mov
xor
andb
mov
inc
or
and
adc
xchg
nop
push
mov
add
add
pushf
and
jl
xor
pop
adc
jmp
test
xchg
or
mov
jp
loopne
xchg
in
fcomip
loopne
add
pop
scas
add
push
mov
add
lret
std
lret
pop
rcrb
out
aaa
popa
push
lock
bound
ja
dec
das
jno
push
add
stos
jo
or
push
push
fldt
sbb
sahf
xlat
mov
and
mov
and
icebp
add
mov
add
mov
push
pop
cmp
jle
push
loope
inc
lods
cmp
jo
je
xchg
pop
jecxz
imul
inc
sub
repz
push
mov
lods
ret
mov
fucomp
cwtl
push
cmp
add
sbb
lds
add
addb
add
fs
ret
shl
mov
cmpsb
nop
ljmp
movsb
sbb
add
mov
je
sarb
mov
mov
or
adc
jle
cmp
pop
jl
sbb
adc
inc
insl
int
repnz
mov
adc
ljmp
xor
jae
jle
dec
mov
sub
fcmovu
push
sbb
pop
xor
and
mov
dec
test
sub
adc
push
push
test
pop
je
push
add
lds
sub
or
pop
push
and
into
cwtl
rcl
ja
push
fmuls
sbb
inc
adc
lods
cmp
loope
inc
aas
loopne
leave
push
sarb
or
cmp
mov
and
mov
cmp
mov
add
pop
push
je
testb
ja
pop
fldenv
adc
push
fisttps
mov
daa
scas
cmp
aad
dec
jo
cmpsb
pop
je
movsb
pop
inc
pusha
js
lea
push
sbb
mov
xchg
jne
movsb
adc
mov
hlt
or
loope
test
fcoms
icebp
pop
ror
mov
adcb
dec
jns
cmpsl
or
fstl
xor
adc
pop
lret
and
les
push
movsb
iret
pop
inc
pusha
sbb
dec
xor
repz
mov
cmp
and
xchg
loop
adc
sbb
cmp
test
add
fldl
jno
test
push
aaa
test
adc
daa
lds
lcall
jno
pop
test
jle
jle
rolb
movsb
mov
cmp
jno
pop
mov
jno
out
add
push
test
aaa
lock
leave
leave
testb
stc
cmp
and
sbb
add
push
sbb
jecxz
mov
imul
push
inc
add
mov
and
xchg
and
sbb
fs
mov
lea
movsb
out
dec
adc
ljmp
or
adc
adc
repnz
outsb
test
cmpsl
dec
push
xchg
jo
pop
sbb
int
cmp
sub
cld
inc
fdivs
jle
inc
adc
xchg
jp
gs
es
clc
cmp
clc
xor
clc
out
sub
pop
mov
adc
push
xchg
mov
pop
or
rcrb
pushfw
add
and
xor
aad
les
or
mov
pop
imul
lahf
es
jle
or
inc
xor
into
loop
xchg
pop
push
and
js
or
adc
mov
movsb
push
stc
and
and
lahf
xor
sti
fimull
inc
call
pop
imul
jp
and
insl
xchg
arpl
push
mov
mov
and
lock
xlat
jg
and
push
inc
sbb
xor
push
ds
sti
test
fwait
out
addl
adc
cwtl
sub
sbb
inc
cwtl
and
loope
adc
jo
nop
ljmp
out
jnp
jle
xor
xor
in
mov
cmp
movsb
mov
dec
call
sbb
sbb
jg
daa
loope
add
out
and
cmp
sub
subb
aad
inc
mov
out
movsl
jbe
xor
sbbb
inc
out
or
add
mov
insb
and
popa
push
incl
jle
inc
adc
pop
ja
or
adc
jge
fs
mov
imul
test
or
mov
push
leave
ds
push
aaa
xor
test
xor
or
mov
jmp
xor
push
hlt
adc
je
pop
fistl
in
push
and
cmp
fmull
add
xor
add
mov
lods
adc
cmp
xchg
sub
sub
push
sub
xchg
adc
adc
loope
adc
mov
daa
add
stos
mov
leave
adc
push
adc
daa
and
inc
dec
pop
xchg
add
enter
add
adc
push
and
fistpl
pop
push
pusha
sbb
sub
push
lods
xorl
adc
sub
xlat
insb
dec
jp
or
push
imul
stos
inc
mov
inc
adc
adc
add
popf
and
mov
ss
call
mov
add
test
int3
sub
adc
inc
or
push
mov
add
lcall
es
dec
cmc
imul
nop
push
adc
fnsave
xor
mov
lock
pop
negb
incb
cmpsl
jg
sarl
or
gs
mov
add
mov
push
pusha
je
jo
popa
add
xor
je
jo
xor
inc
adc
push
push
dec
lock
sbb
mov
mov
push
aad
stc
fstps
and
mov
inc
xchg
add
in
inc
ljmp
vmovq
push
or
push
add
sub
mov
sti
sub
ret
sbb
jne
es
jecxz
imul
ljmp
sub
adc
and
je
scas
xchg
je
xchg
aad
sbb
mov
xor
cmp
movsb
lcall
les
rorl
cwtl
pusha
lcall
push
jne
mov
aas
add
orb
data16
lahf
push
adc
and
test
and
adc
inc
scas
mov
in
or
add
mov
adc
hlt
pop
lret
xor
mov
adc
adc
cmp
sub
add
idivb
xlat
nop
fldenv
and
push
mov
xchg
test
jmp
push
lds
inc
cmp
xorb
rolb
jno
dec
jns
lcall
sub
and
testl
mov
push
je
jne
insl
pop
insl
sbb
add
ficoms
cld
or
pop
outsl
xchg
movsb
cltd
iret
adc
sub
or
and
test
push
or
jb
lahf
nop
aaa
inc
push
sbb
xlat
ret
adc
addl
adc
std
loopne
mov
mov
xchg
sbb
arpl
insl
das
fdivs
lcall
aaa
sub
jo
pop
mov
push
nop
xorb
xlat
sbb
adc
sar
mov
add
gs
xor
push
xchg
inc
shlb
and
push
jmp
push
push
adcb
pop
cmp
out
lret
lcall
xchg
sbb
hlt
push
mov
ja
popf
aad
or
in
mov
xchg
xchg
xchg
inc
pop
adc
inc
xchg
mov
fmull
push
or
jg
mov
or
js
mov
mov
pop
mov
fistps
xchg
inc
inc
push
mov
cmp
or
js
or
gs
and
fadds
mov
sub
popa
add
jnp
ljmp
and
bswap
push
ret
add
notl
call
dec
add
mov
sbb
mov
and
push
mov
lcall
pop
jbe
mov
push
jle
push
sub
add
std
push
add
ja
jo
sub
cmpsl
xchg
mov
je
out
push
mov
dec
mov
aad
push
shrl
mov
icebp
adc
mov
add
jno
cwtl
cmc
xchg
loope
mov
sbb
shrl
jbe
dec
mov
push
and
pop
adc
iret
jno
popa
push
js
stos
mov
aam
cmpsw
cwtl
std
mov
push
mov
jp
out
ja
push
mov
leave
mov
pop
cld
orb
lods
paddq
mov
inc
dec
andb
in
loop
int3
mov
push
add
xchg
gs
sub
inc
fisubs
iret
and
jns
pop
cld
xor
cmp
fldl
lcall
adc
js
or
mov
adc
xlat
push
aaa
inc
lea
xor
push
lea
sub
push
cs
movsl
dec
shrb
aas
outsl
sub
sub
popa
or
cmp
out
cmp
jne
inc
insl
pusha
sub
mulb
loopne
and
addl
jmp
xor
push
inc
push
mov
xchg
loop
mov
push
imul
dec
inc
lret
pop
mov
or
or
orb
sbbl
add
dec
fs
or
push
imul
lock
shll
and
pushf
push
push
adc
sbb
es
push
daa
ljmp
popa
test
sbb
call
inc
sbb
push
xchg
sub
cs
shlb
ror
xchg
mov
movsb
mov
mov
add
sub
in
or
pop
and
inc
jo
xor
popa
dec
jns
pop
aas
test
dec
scas
cmp
sub
dec
pop
adc
test
push
fidivrs
adc
addl
jbe
icebp
sbb
scas
lcall
test
push
jns
repnz
sub
ret
aaa
sub
lea
push
cs
sub
sub
popf
mov
cmp
lret
push
xor
js
repz
push
roll
les
jb
outsb
pop
dec
add
adc
data16
adc
push
sbb
and
cmp
rcrl
push
mov
push
aad
gs
cmp
sahf
stc
and
lds
popl
mov
mov
inc
lods
xchg
mov
pop
xchg
inc
aam
andb
int3
adc
push
cmpsb
cs
sbb
push
lret
aas
inc
mov
loopne
mov
add
mov
sub
shlb
push
mov
lods
out
and
mov
sahf
or
dec
inc
dec
or
sbb
arpl
mov
mov
stos
testw
jge
jb
xor
xor
sub
pop
push
movsb
fucomip
aaa
pop
stos
clc
shlb
das
sub
push
pop
je
int
mov
mov
and
pusha
int3
xchg
push
add
jne
sbb
imul
or
push
in
mov
push
or
cmp
adc
sbb
insb
push
dec
xchg
xchg
imul
push
and
xor
das
sub
inc
andb
jb
sbb
mov
mov
in
dec
dec
loopne
movsl
push
inc
dec
std
dec
inc
sbbl
loopne
ret
cmpb
jo
pop
xlat
orl
scas
scas
push
adcl
shrl
mov
es
sub
ret
bound
jae
mov
push
sbb
imul
ret
xchg
js
jge
add
inc
mov
ja
jb
jns
ret
rclb
pop
das
mov
and
adc
jb
mov
cmpb
and
mov
mov
test
arpl
loopne
cmpsl
stos
mov
add
test
pop
inc
fnstsw
cmp
insl
push
dec
push
sub
movsb
pushf
add
mov
andb
ljmp
iret
imul
add
test
cmp
fadds
cltd
adc
cmp
and
subb
jnp
sbb
dec
push
adc
jl
adc
sbb
mov
or
das
or
add
pop
push
mov
adc
loopne
cmp
imul
xchg
decb
dec
dec
add
test
jno
pusha
pop
divb
mov
sbb
icebp
ds
jns
mov
pop
push
dec
mov
jb
or
pop
lock
test
dec
in
mov
adc
mov
xor
jecxz
nop
sub
jnp
daa
adc
loope
test
pop
xchg
call
or
inc
int
pop
dec
imul
ror
cmp
add
bound
orb
fmulp
mov
call
dec
jl
lret
sub
xchg
xor
cmp
cmp
or
mov
push
dec
push
adc
sub
shl
iret
jo
cmp
mov
ret
push
int
pop
fidivs
push
pop
pop
push
jo
add
mov
or
or
add
mov
and
shlb
and
mov
mov
mov
push
aam
lods
loopne
xor
sahf
nop
xor
decb
add
xchg
jp
js
xor
repz
inc
addr16
dec
xor
dec
daa
jmp
pop
jno
lds
je
jno
pop
xlat
test
push
jl
in
mov
fldcw
mov
dec
ror
mov
mov
pop
mov
sbb
popa
mov
xchg
fcmovne
out
push
adc
cmpl
subl
sub
cmc
enter
add
ror
sbb
mov
sub
push
sub
xorb
sbb
js
xchg
inc
outsl
cmpsl
mov
and
xchg
or
add
push
inc
stos
push
daa
pop
addr16
mov
inc
ret
xchg
jl
mov
mov
and
sbb
es
in
jle
or
inc
push
dec
inc
lock
mov
cmpsb
fcom
push
icebp
mov
mov
dec
inc
mov
push
and
aas
mov
mov
hlt
sub
lcall
leave
js
in
addl
add
clc
scas
and
outsl
mov
cmpl
cmp
aad
jb
adc
xchg
movsl
adc
cmp
and
ret
aaa
out
das
and
jl
add
divl
hlt
xor
add
and
in
sbb
scas
xchg
sub
das
xor
fcoms
xchg
and
add
call
or
dec
sub
sti
in
je
mov
mov
movsb
pop
add
shlb
andl
pop
xor
push
pushf
adc
push
arpl
sub
push
inc
in
stos
and
mov
fadds
mov
push
inc
cmpsl
jb
and
inc
jo
or
fisttpl
pushf
xor
addl
or
lret
add
dec
das
xchg
pop
ret
push
or
mov
adc
das
movsl
or
scas
add
jg
and
pop
es
and
repnz
or
xchg
leave
out
xchg
mov
outsb
pushf
inc
push
inc
ljmp
leave
fwait
mov
fcmovnbe
mov
aad
push
fwait
push
and
inc
mov
scas
mov
xlat
cmp
cmpsl
adc
aam
mov
aad
enter
js
lea
push
nop
mov
stos
es
scas
and
xor
shll
repnz
mov
xchg
mov
cs
fldcw
rcrl
stos
fcomps
cmpsl
imul
mov
out
lods
pop
das
push
lock
andb
cmp
andb
mov
cld
and
xor
add
enter
sahf
and
push
cwtl
fimuls
int3
jns
mov
lock
negl
dec
add
xor
out
daa
jl
fistps
repnz
out
aaa
hlt
das
je
cmp
out
push
loop
sbb
xchg
add
push
inc
mull
and
dec
mov
dec
mov
subl
mov
dec
ficompl
daa
stos
add
fmull
push
add
xchg
addb
mov
insl
inc
sbb
push
add
mov
aas
jle
ds
scas
mov
sub
inc
aad
adc
hlt
int3
pop
pop
daa
or
and
mov
fmuls
cmp
adc
jmp
cmp
out
sub
and
je
bound
add
push
das
adc
stos
dec
pop
and
sti
and
cs
dec
adc
inc
fwait
pop
rclb
jnp
and
mov
sub
test
push
sub
lret
and
inc
fnstcw
fcmovne
cmp
insb
add
cmc
sub
or
adc
or
adc
enter
lds
lret
lock
xor
jo
or
sub
add
adc
cli
mov
imul
les
test
mov
fucomp
in
sbb
lcall
sub
fldenv
xchg
hlt
adc
test
or
add
inc
and
testb
or
sbb
daa
cwtl
stc
scas
mov
mov
mov
dec
push
mov
pop
jns
add
pop
mov
fsub
mov
push
xchg
scas
xchg
push
es
fs
cmp
jnp
dec
es
mov
push
loope
sti
stos
test
mov
jge
push
cmp
lds
xor
test
inc
mov
imul
scas
sub
dec
lret
add
test
cltd
sub
bound
fcoml
fildl
adc
and
jle
push
xlat
adc
add
fsubs
js
pop
add
push
add
jl
inc
test
xchg
out
mov
imul
cmpsl
fnstcw
test
ret
add
add
insl
adc
stos
sbb
mov
mov
pushf
fimuls
pop
je
cs
sub
push
in
mov
imul
mov
hlt
xchg
push
pusha
push
pusha
jne
and
je
and
sbb
outsb
xor
inc
in
and
ficompl
scas
int
iret
adc
addr16
or
mov
add
aaa
add
push
in
push
or
stos
cld
enter
or
je
mov
jp
cmp
outsb
in
aaa
mov
sbb
popf
lds
adcb
das
xchg
scas
das
push
les
adc
push
rclb
fwait
jne
jnp
loopne
push
xchg
mov
xlat
cmpl
push
fsubs
sub
push
mov
sbb
sbb
hlt
loop
adc
pop
pop
es
lahf
sub
stos
mov
test
scas
cmp
add
movsb
fbstp
test
ficompl
sub
cmp
adc
ljmp
lea
push
movhps
cmp
push
add
mov
scas
fcmovnb
ss
sub
and
jnp
out
aaa
pop
cmp
jp
cmc
sbb
sahf
test
mov
pop
mov
or
sub
pop
pop
dec
outsb
dec
adc
adc
mov
xlat
std
ss
ds
aas
dec
sub
scas
es
insl
cmp
in
popa
aam
lods
ss
push
arpl
adc
sub
xor
aaa
push
mov
fnstsw
aaa
sbb
pop
cmp
and
dec
xchg
sub
scas
or
mov
mov
cs
out
inc
shll
jecxz
adc
jl
mov
jl
lret
mov
pop
icebp
mov
lock
popa
jg
addb
xor
lods
adc
ljmp
das
mov
xor
xor
adc
aad
inc
mov
out
adc
ss
adc
jge
mov
and
push
das
addb
xor
sub
xor
cmp
mov
xchg
sub
xor
pop
or
sti
outsb
mov
lcall
add
hlt
loope
aas
and
sbb
dec
sub
jge
test
cmp
dec
sub
add
inc
mov
mov
pop
dec
sub
idivl
and
push
jecxz
sub
mov
jmp
mov
and
mov
out
lods
jo
jbe
ja
adc
inc
add
inc
mov
daa
xchg
xlat
loopne
fdiv
xchg
or
jb
mov
pop
jae
push
jnp
mov
jecxz
ss
mov
js
nop
sbb
jb
mov
sub
and
scas
sub
lods
stc
push
testb
cmp
jge
sbb
test
push
or
repnz
mov
add
push
add
test
push
jb
scas
insl
das
push
enter
lods
jns
and
jnp
faddl
sahf
and
scas
inc
xorb
pop
pop
stos
aaa
test
lds
and
add
or
pop
add
cli
rcrb
icebp
xchg
das
push
push
daa
push
cmp
js
xor
in
loope
add
cltd
out
sbb
dec
and
test
mov
out
xchg
add
cwtl
das
sti
pop
inc
pop
add
repz
pop
and
mov
pop
sbb
pop
rolb
pop
inc
jp
cmp
pop
iret
pop
and
jne
ret
shl
dec
dec
push
jmp
fcoml
xor
imul
mov
pop
and
pop
outsl
and
xor
xor
push
push
nop
popa
add
imul
jnp
rorl
pusha
movsl
adc
sub
scas
sarl
iret
out
mov
cli
and
add
push
mov
and
scas
in
iret
dec
add
cwtl
jo
add
jbe
int3
jge
jmp
lds
xchg
add
mov
cs
loopne,pt
push
icebp
mov
sub
test
jae
dec
pop
cmp
insb
hlt
ljmp
xor
sbb
test
and
jp
call
filds
in
incb
mov
movsl
mov
adc
cmc
into
or
jo
inc
pusha
decb
xchg
pushf
adc
jb
add
cmp
mov
mov
shrl
jmp
pop
mov
mov
add
jo
inc
pusha
movsb
fcomps
mov
mov
mov
inc
and
or
sub
rcr
xor
jg
dec
jge
jnp
cmpsl
in
and
mov
mov
call
and
fwait
movsl
push
fcomp
rolb
popa
int3
jp
xchg
fiadds
or
add
push
rol
leave
or
scas
mov
cwtl
fwait
push
call
iret
push
push
and
fcmovnbe
mov
addr16
adc
fcmovne
out
sbb
xchg
out
and
jge
pusha
fs
inc
adc
bound
scas
icebp
das
shl
outsb
bswap
fs
or
jnp
out
dec
or
int3
xor
subl
ja
sbb
ret
clc
pop
out
ret
mov
aaa
into
outsl
fs
addr16
or
int3
xchg
xor
mov
jge
shlb
cmpsl
int
sarb
inc
in
and
sbb
sub
inc
pop
push
int
pop
inc
lods
xlat
clc
std
mov
inc
ja
sub
sbb
pop
lds
mov
cmp
sbb
mov
and
sarl
inc
enter
push
lods
inc
cmp
popf
cld
jmp
jmp
mov
inc
das
sub
and
outsb
inc
jnp
mov
inc
cli
data16
push
push
jmp
popa
out
pop
jno
loopne
lods
add
or
addr16
imul
js
pusha
andb
inc
mov
push
jne
into
xchg
push
je
out
mov
inc
pop
inc
addr16
ja
push
pop
add
orl
out
inc
mov
jmp
cmp
jnp
fs
fsubrs
sub
scas
sti
jbe
adc
and
and
lods
cs
sbb
jne
rol
jl
in
arpl
pop
or
in
adc
cmp
pop
jp
sub
adc
and
vmwrite
jbe
out
jge
mov
insl
or
jmp
add
inc
pushaw
jbe
fdivs
aaa
sub
jl
add
mov
lods
add
cmp
xchg
in
or
pusha
xchg
sub
aaa
inc
push
and
pop
cmp
xchg
cmp
dec
lods
pop
xor
pop
or
pop
push
iret
sbb
inc
inc
xor
shll
in
aaa
pop
mov
arpl
cmpsb
sub
fidivrl
dec
fisttpl
shlb
out
aam
and
xchg
add
test
jmp
xor
inc
aaa
fsubl
in
sub
dec
and
insl
iret
dec
pop
pop
aad
push
and
xor
push
xor
stos
test
rcl
and
fprem
add
sub
push
sub
add
sub
sbb
pop
or
in
mov
push
mov
imul
cmp
xchg
mov
sti
xlat
cwtl
and
stos
pusha
push
orb
sbb
push
cmc
mov
ja
add
daa
shl
popf
sbb
je
push
cmpsl
or
clc
loop
push
sub
adc
xor
adc
adc
push
dec
sbbb
lea
je
mov
pop
outsb
inc
aad
out
and
sarl
icebp
cmp
inc
jecxz
into
and
xor
daa
test
inc
push
in
fwait
int
in
aas
aas
aas
dec
pop
push
int
lds
or
or
lahf
sbb
add
cmp
xchg
aad
dec
outsl
out
das
ljmp
mov
lea
cmp
movsb
xor
pop
and
xor
inc
ret
or
mov
sub
and
test
mov
pop
mov
rorl
xchg
mov
ret
mov
into
jp
sub
push
fldl
mov
mov
jge
adc
xchg
mov
xchg
and
sub
push
fs
add
add
and
xor
and
pusha
out
repz
rcrb
jg
mov
add
iret
sub
int
sub
mov
adc
and
subl
and
and
cmc
pop
loope
lods
add
mov
pop
adc
daa
or
fcompp
fildl
add
sbb
mov
push
cmp
dec
stc
cmp
ret
push
cmp
mov
mov
int
cld
pusha
ret
and
pop
pop
and
es
inc
sub
push
dec
ficompl
mov
call
lods
or
jo
divb
dec
test
inc
adc
and
mov
pop
shll
or
jo
dec
cmpb
xchg
movsl
pusha
bound
fsubrs
jo
imul
sbb
test
and
daa
inc
sub
js
roll
add
or
and
das
lahf
sbb
ret
push
shrb
sub
xorb
es
cmp
inc
jp
jbe
inc
nop
and
mov
mov
loopne
rclb
push
addl
scas
jle
hlt
lahf
fsubs
js
sub
adc
pop
push
shl
pop
jl
aaa
inc
mov
add
ret
ja
mov
inc
lret
dec
or
push
jp
adc
sub
mov
mov
mov
rcrb
mov
ret
mov
adc
xor
and
andb
insb
mov
movsb
loope
hlt
add
mov
or
sbb
add
push
add
ja
dec
xor
stos
adc
call
jbe
xchg
mov
lds
mov
mov
push
subb
loopne
shrl
push
mov
test
xchg
push
int
or
and
in
lea
xchg
incb
fsubrl
inc
or
inc
dec
in
insl
mov
lea
stos
pop
sub
je
jne
xchg
fcmovnbe
inc
xor
sub
and
aam
shll
mov
iret
into
sbb
outsb
pop
outsl
or
jle
lret
xor
mov
cs
sub
loopne
es
inc
aam
mov
orb
inc
or
inc
hlt
sub
sub
andb
pusha
push
mov
push
adc
jge
push
inc
dec
in
pop
add
pop
pop
es
dec
add
and
stos
and
lock
pop
xor
add
or
mov
jecxz
shrl
leave
mov
hlt
push
shrb
wbinvd
jb
jns
adc
sbb
movsb
es
lret
enter
fnsave
mov
jge
xchg
push
pushf
add
das
push
add
insl
nop
sub
cmc
leave
or
jne
addb
test
outsl
adc
jnp
pop
ror
sub
and
roll
ds
push
jmp
cmp
arpl
movsb
lret
bound
inc
xor
cltd
jno
xor
cwtl
les
pop
loop
bound
outsl
stos
push
mov
fldpi
dec
adc
lods
push
mov
mov
jno
add
stos
jne
fnstenv
fldenv
inc
push
subb
test
sub
mov
enter
gs
hlt
pop
or
mov
lcallw
in
cmp
int3
call
iret
mov
mov
jecxz
aaa
sbb
inc
inc
lods
sbb
xor
int
inc
pop
and
or
mov
or
sub
loopne
fbstp
adc
sub
sub
push
jp
cwtl
stos
dec
or
cmpb
mov
push
int3
mov
or
sti
daa
fimuls
push
push
add
xor
cmp
cltd
and
in
and
scas
mov
mov
mov
clc
jnp
mov
push
mov
lcall
bound
mov
lcall
lahf
add
pop
test
jmp
inc
jmp
iret
arpl
adc
dec
jae
mov
cmpsb
and
jnp
pop
icebp
lret
adc
aaa
fs
movsl
xor
xor
lods
push
sub
pop
hlt
scas
stos
push
sbb
cmp
loopne
add
cmp
mov
jno
inc
cmp
dec
ret
and
aad
add
pop
cmp
inc
call
sahf
adc
inc
sub
mov
mov
cmc
add
xor
or
mov
sahf
add
and
adc
pusha
mov
adc
add
cwtl
inc
shll
or
andl
adc
ljmp
cmp
dec
inc
and
test
and
xor
sbb
in
adc
ljmp
arpl
inc
xlat
dec
push
mov
sub
shlb
and
and
mov
xchg
mov
push
cli
scas
sbb
stos
pop
test
mov
fiaddl
jnp
cld
loop
push
arpl
inc
jae
shlb
sub
daa
std
ja
or
mov
decl
xor
and
xor
outsl
cltd
lcall
repz
add
push
inc
outsl
pop
mov
test
jno
loop
mov
fsubrp
jmp
lcall
sbb
lock
lea
js
jge
bound
mov
je
adc
mov
iret
js
aad
loope
mov
sbb
push
add
jl
jo
mov
mov
mov
sbb
xor
movsbl
inc
xchg
aas
test
jle
xorb
sar
shrl
inc
cmp
push
mov
push
pop
pop
xlat
dec
and
loopne
loopne
andl
pop
test
addl
cmpsl
sarl
data16
mov
fwait
cmp
mov
inc
sti
pop
sbbl
pop
cmp
pop
mov
ja
and
out
xor
aad
popl
lret
sbb
add
pusha
add
gs
jo
scas
jmp
sahf
xor
mov
ja
pop
loopne
pop
xlat
inc
add
sub
test
or
je
and
mul
push
mov
add
aam
mov
inc
inc
dec
add
push
in
insl
xchg
push
jmp
test
repz
sbb
nop
mov
and
mov
out
das
pushf
and
and
or
add
and
dec
cmp
jle
cmpsl
bound
test
add
dec
das
xor
ret
pop
push
lcall
or
sub
adc
icebp
adc
pop
add
push
sarb
fidivl
add
iret
xchg
jno
adc
outsb
inc
loopne
pop
rorb
inc
fbld
fwait
sub
mov
flds
cmp
cmpsl
push
add
cmpsl
mov
and
mov
aad
dec
hlt
mov
mov
outsb
pop
je
mov
flds
pop
mov
cmp
mov
aaa
mov
sub
insl
popa
push
xchg
sub
jnp
jge
rolb
andb
cmp
pushf
inc
add
addr16
sahf
adc
sub
scas
or
inc
or
and
mov
mov
jl
iret
push
mov
or
es
xor
lea
loop
or
mov
das
mov
data16
adc
inc
and
andl
rorl
sti
notl
mov
fistps
add
cmp
scas
xor
and
add
pushf
cmc
sbb
ja
push
add
orb
jp
les
imul
sub
test
inc
insl
jp
shrl
jg
cmp
or
cs
mov
push
and
xchg
xchg
loopne
push
jb
imul
cld
outsl
pop
test
pop
daa
push
push
pop
addr16
mov
mov
pop
lcall
cmpsl
sarb
mov
mov
test
sub
jo
icebp
mov
or
mov
out
cmpsb
inc
jne
loopne
xchg
sub
xchg
add
mov
mov
aad
dec
andb
sbb
xor
subb
or
divb
mov
xchg
add
nop
mov
jl
xorl
or
aad
push
xchg
loop
adc
jecxz
pop
xor
mov
pop
mov
ret
mov
sub
inc
popl
adc
sbb
mov
and
or
adc
xor
lcall
fsubrl
stc
aam
and
adc
sub
clc
divl
daa
xlat
jge
outsb
sbb
push
daa
or
xor
cmp
xor
ds
mov
gs
hlt
into
arpl
cmp
pop
mov
or
cmp
lcall
orl
cmp
ret
aad
pop
scas
ja
ret
icebp
or
mov
je
les
xchg
push
popa
ss
addb
mov
mov
bound
inc
push
sbb
arpl
adc
xchg
inc
mov
xor
xchg
jo
jnp
dec
popf
jle
repz
cmp
cld
sub
push
ret
push
jns
pushl
imul
incl
pusha
das
sub
sbb
popa
or
lds
xchg
inc
or
jmp
push
and
pop
addb
aas
rclb
cwtl
xor
sbb
push
push
insb
add
enter
and
add
shlb
ret
cmc
xchg
adc
nop
imul
or
add
add
xchg
and
mov
jge
xchg
call
push
es
les
sahf
fwait
adc
mov
dec
lcall
and
pop
inc
and
lods
push
fildll
fisubrs
je
hlt
pop
sub
adc
fmul
aaa
stos
sbb
mov
sbb
push
inc
and
mov
pop
xchg
fwait
mov
jne
stos
sbb
push
push
int3
dec
std
outsl
sub
push
xorb
adc
add
mov
adc
xchg
shll
faddl
and
es
movsl
aam
inc
mulb
add
mov
popa
inc
aaa
xchg
movb
std
or
and
mov
push
scas
sahf
xor
inc
lds
xchg
iret
jae
daa
add
sbb
jle
pusha
add
mov
inc
xchg
pusha
cmpb
in
push
push
inc
out
nop
lods
push
outsb
mov
pop
push
pop
hlt
call
iretw
sbb
jb
popf
jle
out
dec
test
je
popa
mov
xor
dec
cmp
dec
inc
cmp
iret
mov
xlat
mov
pop
mov
adc
xor
rolb
mov
bound
inc
mov
pop
xchg
mov
lret
or
rcrb
pushf
inc
popf
fmuls
mov
inc
jo
or
dec
push
lock
push
lods
jnp
test
dec
fs
insl
out
clc
cmc
dec
add
rcrl
mov
sub
jnp
jo
and
dec
pop
mov
dec
jno
inc
rcll
jno
xchg
arpl
dec
inc
rorl
jbe
test
sbb
jge
cmp
fsubl
mulb
jo
pop
inc
sub
push
sbb
add
push
push
ret
mov
sbb
pop
out
push
sub
sub
push
add
out
add
push
xchg
scas
jp
aad
les
mov
aaa
xchg
jle
stc
or
or
adc
ret
loopne
mov
test
out
fs
cwtl
out
push
xchg
adc
mov
or
aad
lret
and
lcall
test
and
jbe
out
or
add
inc
mov
mov
imul
aas
and
jecxz
dec
add
mov
cli
rolb
push
cmp
inc
loope
jbe
jne
sub
mov
loopne
aad
cmc
je
and
das
cmp
cmp
sub
adc
adc
and
jmp
cli
cmpsl
fisttps
rcll
sbb
adc
mov
cmc
es
inc
pop
shll
cmpsl
sti
cmp
sbb
lds
xor
add
mov
mov
stos
mov
push
mov
fs
enter
andl
dec
cmp
mov
les
add
mov
rorb
scas
cmp
enter
popa
mov
or
push
movsb
and
or
pop
cmp
fnsave
xor
xorb
sbb
adc
push
leave
sub
filds
sub
pop
xor
push
iret
mov
stos
fwait
les
jecxz
sub
popa
add
insl
lock
xor
cltd
push
pusha
push
xor
xchg
inc
push
or
xchg
push
add
sahf
jno
pop
pusha
lds
sub
ficomps
add
fisubs
andl
loope
scas
test
in
xchg
or
in
push
or
sub
leave
popf
or
add
jl
add
mov
iret
pop
and
adc
in
sub
add
and
repnz
das
xchg
aaa
xchg
mov
jae
rcrb
and
sahf
in
mov
outsl
and
cmpsb
or
addl
shl
jle
out
inc
inc
arpl
sti
js
popf
sub
or
pusha
dec
insl
xchg
rorb
les
add
scas
das
push
push
add
adc
add
into
lea
inc
xor
rol
and
and
mov
sub
pop
les
mov
mov
push
push
or
arpl
loopne
mov
jnp
mov
andl
stos
jg
push
mov
cmp
add
sub
and
push
cwtl
test
jne
inc
repz
ret
lret
fwait
shrl
cld
jne
pop
mov
test
cmc
xor
adc
push
cmp
sub
fldt
xor
push
sbb
or
sbb
aaa
add
or
lcall
loope
add
orb
int3
test
lds
scas
dec
mov
pop
aaa
xor
or
pusha
stos
add
rclb
inc
in
push
xchg
adc
cmp
mov
sub
push
sbb
jle
xchg
mov
jo
mov
push
jne
ljmp
cmp
mov
loope
or
mov
push
jo
js
and
daa
bnd
out
fs
fisubrs
push
xchg
xor
daa
push
addr16
je
or
scas
add
cmpsl
inc
sub
sbb
testb
or
dec
test
push
clc
stos
and
fs
cs
add
daa
jmp
and
es
imul
leave
pop
andb
sub
jnp
fists
add
and
jmp
jo
inc
xchg
add
adc
aam
push
and
cmp
js
adc
push
lea
lret
push
pop
mov
addr16
pop
testb
imul
rorl
jmp
adc
adc
aas
or
xchg
push
adc
loop
adc
negl
movsb
or
dec
xor
pop
xchg
or
movsb
xchg
xchg
xor
mov
and
xchg
stos
adc
roll
jnp
scas
cli
sub
xor
mov
push
rcrl
and
jbe
sbb
jle
or
mov
imul
adc
ret
cmc
inc
sub
xchg
lods
push
inc
xchg
jo
icebp
push
sub
push
scas
clc
lock
insb
mov
in
jo
arpl
mov
jo
std
add
cmp
cmpb
cld
mov
add
mov
and
ja
mov
pop
je
xchg
rcrl
sti
xor
mov
test
aas
cmp
cwtl
jbe
fistl
or
fwait
push
xchg
push
sbb
xor
jo
xchg
out
push
stc
jo
push
fnsave
adc
ljmp
xchg
sbb
cmp
ret
bound
mov
test
movsl
mov
out
or
sbb
mov
shl
das
mov
push
adc
fwait
ret
insl
mov
cmp
fs
add
push
call
dec
orl
push
pop
pusha
sbb
add
adc
or
pop
imul
daa
ficoml
xchg
movsb
dec
sbb
sbb
dec
and
fmuls
sbb
fwait
int3
and
push
das
cmp
add
mov
jae
testl
or
sbb
and
aas
test
sub
movsb
inc
dec
les
push
outsb
xchg
shl
aad
add
daa
sub
sub
cltd
jle
cmp
and
scas
fsts
nop
add
or
jmp
xchg
stos
mov
adc
pusha
add
mov
cmp
dec
and
adcl
cmp
ja
aam
adc
cmpsl
jp
dec
les
mov
call
mov
mov
inc
lret
outsl
insb
adc
mov
mov
rcrl
pop
fs
sarl
movsl
leave
add
xor
fsts
jmp
sbb
adc
add
adc
inc
bound
roll
orb
xchg
or
add
mov
lret
pop
icebp
push
int3
inc
mov
dec
jnp
cwtl
inc
insb
fsin
add
mov
nop
mov
jnp
aam
aam
test
aam
add
lds
and
mov
mov
mov
enter
mov
inc
jno
aad
hlt
mov
int3
mov
inc
mov
jmp
mov
stos
bound
adc
or
test
fcom
adc
loopne
or
sbb
pop
popf
xchg
adc
and
or
ss
sbb
adc
cmpsb
pop
add
adc
or
xchg
mov
ret
incl
pop
nop
cmp
jne
sbb
push
mov
fcoml
push
pushf
daa
push
xor
inc
inc
dec
lea
cmpb
xor
pop
cmp
dec
pop
fs
stos
xor
inc
orb
test
test
fimull
rcrb
aam
adc
pop
aaa
loopne
add
lcall
cmp
xor
and
inc
dec
push
movsb
cmp
mov
sub
js
cmp
int
mov
addr16
shrl
xchg
pop
inc
jg
pop
sub
mov
and
cwtl
push
popa
or
dec
add
dec
data16
popa
pop
test
xor
sbb
clc
push
jl
adc
mov
or
or
outsl
jle
and
or
or
ret
and
sub
dec
push
inc
add
xor
jecxz
push
xor
jp
stos
bound
lods
fldenv
add
dec
xchg
push
fldl
cmp
xchg
mulb
mov
aam
dec
dec
test
sub
mov
pop
callw
inc
nop
subb
add
ds
or
dec
lahf
mov
das
cld
or
xor
loop
in
push
adc
pop
in
in
in
pop
les
jnp
sbb
pop
push
mov
or
and
sub
jg
test
push
adcb
pop
and
adc
rcrl
add
ret
test
or
mov
or
xchg
icebp
sub
xor
pop
mov
fnstenv
sub
rclb
pop
dec
rolb
nop
jb
sub
fnstcw
jp
test
sub
push
fistl
adc
bound
cld
pop
xchg
movsb
and
mov
mov
shll
lds
lret
jp
rorb
and
jne
scas
or
add
addb
pop
loopne
je
daa
inc
dec
jge
in
and
jmp
sarl
push
add
jge
sub
pusha
mov
pop
xchg
enter
jmp
or
push
adc
dec
xlat
pop
cli
push
scas
stos
dec
adc
or
jns
push
rorb
test
mov
jb
addr16
pop
test
ja
xchg
pop
inc
lcall
mov
xchg
sbb
jnp
shrl
push
mov
jno
pop
int
shrb
cmp
cmp
push
cmp
add
pop
and
cmpsb
push
jno
push
or
mov
sub
cmp
loope
fstl
xchg
and
adc
fildl
sbb
dec
inc
xchg
mov
scas
imul
cmp
fmuls
and
xchg
pop
in
and
jnp
sub
or
sub
mov
shl
ljmp
and
aad
out
ror
add
and
or
into
xchg
inc
popf
cmp
iret
clc
mov
mov
into
xor
pop
and
popl
sbb
add
and
mov
cwtl
sub
add
sbb
mov
jo
adc
iret
cmp
add
jns
dec
jb
add
sub
push
mov
adc
jno
loopne,pn
int
das
push
and
push
push
push
and
lock
add
arpl
mov
pop
xchg
ja
xlat
shrl
rorb
sti
cmp
ror
inc
iret
daa
mov
daa
inc
jno
lods
scas
in
es
inc
and
add
pushf
sahf
or
xor
dec
mov
sub
fstps
add
or
movsb
pop
and
icebp
mov
fistl
es
daa
sub
stos
sbb
mov
xchg
push
es
loope
or
mov
mov
mov
and
loope
xorb
xorb
popf
imul
je
lcall
fcomps
pop
lcall
or
imul
and
xor
xor
jnp
pop
xor
dec
inc
mov
movsl
and
jmp
add
or
dec
fcmovnbe
lds
and
insl
cld
dec
pop
aad
insb
sub
out
and
or
or
das
popf
mov
mov
jo
pop
das
cmp
test
sbb
rolb
das
mov
leave
rorb
pop
fstps
out
lods
in
jmp
insb
int
es
xor
dec
or
mov
clc
xor
cmp
xorl
sarl
dec
test
sub
movsb
call
je
xor
push
sub
fdivs
sub
das
out
imul
or
or
or
and
popa
xor
mull
add
fdivl
and
mov
data16
sub
dec
xorb
call
dec
dec
stos
mov
loope
mov
jne
xchg
adc
fistps
adcl
out
rolb
push
mov
mov
and
sbb
sub
xchg
inc
das
cmp
mov
mov
bound
popf
test
outsl
or
subb
add
adc
call
sti
jmp
sbbl
mov
push
jno
pop
mov
loop
es
jo
inc
fbld
xor
iret
pusha
fs
inc
mov
push
add
js
inc
roll
mov
or
test
mov
ljmp
pusha
ljmp
mov
mov
ss
inc
jnp
pop
test
jns
cmp
mov
test
jle
push
mov
bound
adc
pop
push
push
outsb
xchg
das
iret
sti
mov
mov
xor
in
test
outsl
cmp
iret
push
sub
shlb
dec
mov
popa
sub
mov
andb
das
pusha
and
inc
addl
mov
lods
xchg
adc
add
mov
xchg
mov
xor
imul
ljmp
dec
adc
shrb
mov
xchg
push
or
fsts
sbbb
int
scas
pusha
fucomp
cmp
jge
or
push
fsubrs
loopne
xchg
push
jae
aaa
jne
dec
xchg
mov
andb
xchg
push
inc
xor
popa
inc
inc
psubsb
enter
sahf
test
mov
data16
fstpl
xor
out
jne
adc
lds
shr
lea
fs
jbe
sub
sub
test
es
cs
cs
cmpsb
out
dec
sbb
mov
fcoms
xor
push
pop
mov
jp
push
mov
sahf
mov
rorl
iret
mov
cmp
inc
pop
cmp
jle
or
xchg
push
cli
rorl
pushl
rcrb
mov
faddl
loopne
movsl
outsl
push
popf
in
xchg
fimuls
clc
clc
sahf
iret
outsl
push
jae
je
rcll
imul
leave
lds
sbb
cmpsb
test
xchg
mov
jmp
and
inc
sarl
fisttps
loope
cmpsl
dec
sbb
stos
or
cmp
lock
adc
outsb
add
push
aad
or
pop
mov
jle
stos
arpl
popf
flds
sbb
mov
clc
sbb
rcl
fcoms
dec
xor
adc
movsb
es
iret
std
pop
sbb
push
mov
fcoms
aaa
fnstcw
js
fwait
mov
sbb
inc
sub
mov
inc
xor
adc
xor
iret
out
push
aad
addb
inc
mov
lds
or
inc
or
dec
rcll
add
shll
nop
outsb
dec
adc
push
in
inc
jbe
sub
rorb
out
xchg
test
adc
sarl
imul
cs
stc
sub
mov
xor
subb
inc
nop
iret
and
mov
sub
in
and
sbb
mov
and
pop
jns
out
or
div
pusha
push
out
mov
dec
mov
es
mov
inc
xlat
adcb
fcomip
ja
mov
push
das
adc
rclb
fsubs
push
jo
or
movsl
dec
aaa
pop
push
cmp
in
add
sub
faddl
ret
dec
sbb
fidivrs
add
sub
data16
adc
icebp
push
jo
out
lods
push
dec
cmpsl
pop
push
ljmp
sbb
push
mov
insb
popf
gs
dec
andb
xchg
mov
ret
push
mov
mov
jae
call
xor
mov
and
cmpl
mov
push
orl
clc
mov
mov
adc
push
adc
pop
rcrb
das
dec
pop
stos
add
and
cmp
ljmp
add
push
and
pop
and
or
shll
dec
sahf
pop
ret
test
cwtl
lock
push
cld
mov
dec
dec
or
popa
loopne
mov
add
add
adc
cmp
sub
aam
dec
adc
xchg
mov
xor
lahf
lock
leave
dec
push
in
inc
fldenv
sub
cmp
dec
or
iret
jo
rcrb
shlb
int
mov
lahf
fldl
dec
dec
inc
outsb
nop
and
fisttps
xor
push
sub
or
xchg
bound
add
add
fwait
jnp
push
push
icebp
repz
pop
mov
xor
inc
cmp
dec
fstpl
cli
mov
ja
pop
add
out
sbb
add
lcall
lock
lods
push
add
sbb
jne
push
xchg
in
xchg
aam
lea
out
fistps
fcoms
add
add
test
leave
sbbb
idivl
inc
sub
mov
sub
mov
dec
xor
xor
stos
fwait
add
jecxz
xchg
nop
inc
sub
xchg
inc
outsl
mov
pop
add
mov
fwait
ds
imul
cmpb
cmp
add
shlb
aas
and
xor
jmp
jge
lcall
jle
mov
or
lods
cmp
enter
adc
mov
pop
iret
and
arpl
gs
fsubs
inc
xchg
mov
icebp
imul
sbb
sub
inc
jno
sub
dec
push
fists
mov
popl
fadds
xor
mov
and
andl
lock
dec
or
jg
shll
loope
jmp
call
or
dec
cmp
adc
mov
stos
push
sar
push
in
mov
bound
xor
into
cmp
out
repnz
xor
call
ss
pop
divl
ret
loope
imul
es
and
aam
push
fwait
push
leave
pusha
clc
je
fadds
and
inc
xor
push
xor
xor
cmpsb
test
pushf
jbe
mov
xchg
addr16
in
cmp
aad
mov
mov
arpl
aam
xor
xchg
add
outsb
out
sbb
clc
fdivs
into
subb
incl
and
cli
inc
sbb
add
test
sbb
jo
push
fsts
adc
or
adc
icebp
cmp
lock
loope
shll
dec
mov
es
jnp
mov
lods
xor
sub
mov
xchg
jmp
rcll
ret
cmp
loopne
and
or
push
pop
jp
loop
xchg
fsub
movl
fisttpl
mov
scas
frstor
or
addl
aad
sbb
adc
mov
mov
iret
daa
inc
mov
mov
cmp
xor
xor
test
xor
lds
pop
aad
shll
roll
popf
mov
out
add
icebp
cmpb
push
add
cltd
jecxz
and
out
cltd
sbb
cmp
mov
add
lea
xor
js
bound
bswap
inc
idiv
loop
add
fstpt
negl
and
shrb
jno
mov
mov
dec
lcall
outsl
or
call
lock
inc
and
mov
das
shrb
loope
leave
shll
daa
cmp
rclb
mov
jp
xchg
paddusw
loopne
mov
push
push
shll
call
movntq
cmp
and
push
popf
inc
xorl
pusha
dec
push
pop
jle
inc
and
push
or
mov
loope
mov
bound
jo
add
imul
das
inc
adc
xor
push
and
xor
rorb
inc
jno
mov
insl
adc
and
and
jl,pn
jge
add
adc
push
dec
sub
inc
pusha
cmp
mov
cmp
jp
xlat
dec
jle
icebp
lahf
sahf
call
dec
fildll
iret
adc
mov
adc
into
pop
jne
add
pop
jle
and
sub
out
add
lods
loopne
inc
push
and
lret
xor
xchg
add
jb
mov
in
jp
xchg
loope
or
xlat
nop
xchg
or
push
fisttpl
xchg
xlat
sub
lods
jae
cmc
and
cmc
jno
adc
lock
bound
inc
cmp
and
sti
rorl
and
pop
mov
sbb
ja
mov
xchg
daa
add
lock
sub
fdivrl
mov
inc
loope
sub
ja
jbe
movsl
js
inc
scas
sub
push
cld
es
mov
lcall
pop
xlat
mov
dec
pushf
je
sub
shrb
je
mov
loope
cli
loopne
cmp
js
jne
mov
jecxz
dec
fsubl
sbb
shr
xor
rorb
jno
roll
fwait
jne
sub
or
scas
adc
pop
andl
push
push
dec
daa
add
ljmp
xor
ljmp
into
push
adc
push
add
sti
pop
mov
or
or
pop
inc
sub
dec
divb
push
lods
in
cmp
icebp
fcoml
jmp
adc
inc
outsl
add
xchg
inc
push
fcoms
dec
push
or
lcall
js
or
xorl
or
mov
and
adc
mov
fsubrl
sbb
outsb
ret
scas
int
dec
ljmp
push
out
shl
jmp
or
arpl
xor
pop
mov
lret
pop
ficoms
sahf
sahf
xor
iret
outsl
out
push
test
ljmp
add
insb
ret
stos
add
in
dec
pop
fsts
loopne
inc
and
adcl
loop
add
xchg
into
xchg
jo
pop
mov
and
xlat
push
pop
mov
inc
mov
lret
les
or
xorb
push
daa
dec
lds
sub
jo
sti
xor
stos
adc
and
test
ret
mov
in
mov
lret
imul
je
sub
jge
cmp
pop
jmp
fisttps
pop
jmp
popa
mov
neg
out
fcmovb
xor
push
dec
add
fisubs
leave
adc
inc
sbb
stos
ficomps
rorb
lcall
bound
xchg
jb
pop
xor
lea
fildll
xor
sub
movsl
and
imul
pop
and
pop
pop
mov
loope
stos
and
shll
and
xor
add
gs
sub
mov
add
dec
and
into
shr
aad
push
inc
adc
insb
mov
xorb
push
lock
lret
cmpsb
aad
jecxz
adc
sbb
in
pop
out
mov
mov
add
inc
lahf
mov
iret
out
pop
dec
jp
cmp
jbe
adc
lods
xor
ja
push
les
loope
pushw
cli
inc
push
and
push
fistpll
pushf
movsb
inc
mov
rcrb
std
add
cmp
xchg
hlt
roll
xchg
lock
xlat
rclb
mov
ficoms
or
lods
ja
test
cmp
enter
mov
inc
inc
jp
mov
adc
test
mov
push
out
mov
add
daa
sub
test
call
bswap
mov
jnp
pop
adc
wbinvd
int
sbbl
dec
scas
mov
std
push
repz
dec
sbb
jbe
adc
imul
nop
loope
mov
push
pop
cmp
and
js
test
inc
mov
and
loop
out
iret
shll
inc
scas
sarb
bound
adc
jb
in
adc
aaa
sbb
aaa
mov
inc
mov
adc
dec
pusha
adc
xchg
pop
ss
test
inc
loope
inc
sub
pop
leave
fimull
mov
test
pop
call
sti
push
or
push
sub
out
arpl
scas
push
mov
pop
dec
aaa
orl
ret
push
cmc
dec
push
xchg
test
into
sub
cmp
stos
xor
adc
jb
std
sub
jge
aas
ret
push
cmp
adc
stos
jmp
fidivrs
fsubs
mulb
leave
loope
dec
pop
xchg
push
loopne
push
sbb
clc
fcmovnb
and
sub
aas
leave
and
sbb
inc
xor
mov
xor
sbb
cmp
mov
add
push
rcll
xor
push
sub
ret
adc
shll
outsb
dec
mov
inc
fidivs
xchg
push
inc
jp
test
pop
fldl
adc
inc
fisttpl
sbb
adc
mov
jb
xor
andb
cmp
cmp
cmp
mov
ficomps
adc
dec
adc
sbb
adc
sbb
inc
imull
or
cwtl
jg
fs
xor
in
xchg
push
rclb
les
std
and
add
jle
ret
mov
in
cmp
imull
stos
mov
push
add
add
adc
jo
xlat
dec
jge
dec
sub
pop
test
xchg
mov
stos
out
out
adc
leave
sub
jo
out
popa
push
popf
loop
cwtl
or
xchg
sbb
into
mov
stos
mov
jno
jecxz
ret
call
int
aad
xor
cmp
subl
or
nop
or
push
cmp
test
flds
cmp
and
push
or
mov
xor
add
cmp
add
dec
packuswb
pop
fs
xor
sub
and
daa
bound
loop
repz
or
adc
xor
pusha
mov
cmp
add
cmc
add
mov
sar
mov
add
mov
push
lcall
inc
or
sbb
daa
in
addb
inc
dec
cmp
jmp
cmp
xchg
mov
jae
and
out
call
rolb
dec
shrl
or
sub
add
cmp
iret
xor
fcompp
xchg
imul
loope
outsb
push
scas
dec
in
js
mov
jl
sub
xor
pop
mov
wbinvd
inc
mov
push
sub
popa
mov
adc
das
sbb
adc
arpl
or
dec
adc
dec
xlat
mov
xchg
fcmovnu
push
stos
mov
mov
sub
pop
call
negl
dec
dec
mov
inc
and
mov
cmp
jmp
scas
stc
stos
stos
pop
mov
imul
push
sbb
movb
out
add
and
mov
push
inc
cld
jle
push
lds
fsubrs
out
mov
xchg
xor
push
jp
mov
imul
scas
sub
add
mov
out
add
mov
aad
loop
mov
lock
lret
rorl
lret
bound
xchg
dec
xor
mov
mov
add
adc
arpl
movsb
divl
push
rorl
into
mov
push
rcrb
inc
lcall
scas
jae
idiv
inc
xlat
fbld
jbe
or
aaa
inc
xor
cltd
bound
test
pushf
int
or
inc
cmp
push
push
inc
nop
push
popa
loopne
in
cmp
and
loope
or
adc
or
xor
mov
or
popf
inc
add
add
sbb
xlat
sub
mov
mov
rolb
add
mov
cmp
or
hlt
popa
cmpsl
or
add
push
imul
pusha
mov
dec
mov
call
and
js
mov
sbb
jge
mov
loopne
adc
lods
in
loope
fucomp
sti
pop
lret
stos
cmp
fcoml
add
sbb
push
mov
cmc
roll
xor
sub
aad
xlat
pop
inc
decb
je
xor
jmp
dec
xchg
sub
add
jecxz
cmp
dec
add
mov
ja
sbb
out
inc
rolb
mov
and
add
icebp
cmc
push
jnp
jmp
sbb
jmp
es
cmc
shll
lods
hlt
add
movsl
enter
xor
in
xor
jb
leave
or
orb
xor
adcb
loope
mov
sbb
es
sbb
jp
xor
enter
inc
inc
nop
adc
leave
or
popf
sarl
int
jle
or
outsb
pop
lret
or
out
lods
jle
jge
xchg
fildll
and
add
inc
push
mov
adc
sbb
xchg
dec
pushf
sahf
push
inc
xor
dec
pop
lea
addl
mov
mov
inc
aam
push
xor
push
dec
mov
add
mov
test
add
lods
loopne
mov
loopne
add
mov
inc
xor
subl
adc
add
fadds
add
clc
mov
and
test
mov
nop
dec
xor
jl
fsub
das
mov
divb
and
add
push
mov
rcll
push
push
xor
xchg
and
push
mov
and
adc
bound
ds
add
mov
dec
and
mov
cmc
clc
jbe
mov
sbb
pop
loop
push
or
rcll
es
cwtl
shrb
pop
cmp
ss
push
xchg
and
dec
and
loopne
inc
mov
outsb
inc
and
or
cs
popa
lret
test
test
push
enter
add
movsb
cmp
sti
fnstcw
in
xor
dec
ret
lret
pop
test
mov
adc
jbe
lods
test
dec
fisubrl
sti
ds
cmp
adc
loope
xlat
in
std
adc
and
mov
bound
sbb
dec
js
clc
sub
jl
sbb
int
or
xor
movsb
xchg
mov
test
dec
pop
lahf
xor
iret
stos
lock
adc
or
xchg
mov
jae
jb
out
and
adc
in
mov
andb
dec
dec
stos
inc
cmpsl
mov
mov
mov
loopne
adc
js
inc
pop
mov
xor
adc
sbb
jle
add
sub
addr16
pop
add
xchg
adc
das
jno
je
sbb
rolb
xchg
out
addr16
scas
mov
movsl
push
xor
bound
daa
mov
mov
push
adc
jbe,pn
outsl
inc
loop
loopne
sbb
aas
mov
jle
xor
adcl
pop
in
mov
adc
ss
fwait
mov
push
jl
sub
aam
xor
adc
sbb
pop
jmp
pop
sbb
or
inc
adc
sub
je
shl
add
lret
lret
fwait
lea
add
push
sub
js
dec
add
adc
rdmsr
and
sti
mov
popf
iret
cmp
or
lea
xchg
clc
clc
test
shrb
rclb
ret
xchg
mov
mov
inc
inc
mov
adc
je
dec
mov
lahf
lock
movsb
fwait
test
outsl
rcll
cwtl
inc
aam
ja
iret
and
and
stos
pop
adc
and
cltd
sub
mov
mov
or
cmp
push
es
jo
mov
scas
or
fisubrs
mov
call
pop
ss
pop
add
rorl
push
pushf
aaa
add
push
aas
pop
cmp
adc
add
jmp
int3
repnz
add
scas
cmp
fld
lock
inc
add
ds
andl
jo
mov
inc
cmpl
lret
adc
dec
ja
mov
xchg
stos
sub
dec
fiaddl
push
inc
and
ficomps
fsubl
push
call
loopne
push
insb
cwtl
inc
mov
movb
das
fmull
mov
adc
adc
push
es
ja
dec
cmc
bswap
xchg
jnp
or
push
sbb
mov
andl
mov
sub
fildll
cmpsl
fldt
or
mov
insl
sbb
in
xor
aaa
adc
add
std
aaa
cmp
jne
adc
mov
daa
sub
bound
push
les
adc
adc
sahf
stos
push
mov
subl
dec
les
xlat
fwait
icebp
call
mov
hlt
push
into
and
icebp
push
mov
mov
aaa
adc
aas
xchg
gs
rolb
push
inc
xor
sub
mov
cmp
mov
adc
dec
or
ret
cmp
mov
lcall
or
xchg
xchg
ljmp
inc
insl
es
pop
les
adc
cmp
test
xchg
stos
sbb
add
mov
int
aam
inc
mov
je
aas
testb
and
insl
arpl
inc
inc
cld
iret
mov
out
push
jo
mov
push
mov
ja
push
iret
lret
cmp
test
scas
sbb
jae
fcomps
test
popl
dec
cmp
popa
mov
icebp
sbb
sbbl
adc
mov
adc
mov
rcrb
and
cld
in
and
jnp
aaa
xor
adc
xchg
xchg
rolb
jl
inc
out
repz
lds
icebp
imul
push
adc
inc
add
stos
push
cmp
call
pop
mov
mull
push
scas
pop
push
int3
stos
cmp
jp
insb
mov
add
push
push
fimuls
mov
mov
aam
sbbb
cmp
nop
daa
inc
pop
shrb
lcall
sahf
add
mov
imul
or
and
fisubs
mov
sbb
pusha
cmpb
test
sarl
push
mov
adc
mov
pop
xor
push
aam
add
outsl
cwtl
push
cwtl
data16
cwtl
adc
iret
jne
mov
xchg
lret
arpl
out
daa
xor
adc
dec
jmp
movsb
mov
mov
adc
mov
loopne
aad
inc
ljmp
jle
lock
cmpsl
inc
shll
xchg
dec
add
and
roll
xor
push
test
bound
ffree
sub
xor
lods
ret
stos
push
rclw
lret
pop
punpckldq
mov
pusha
inc
rolb
mov
popf
adc
sub
xchg
sub
or
sti
and
xchg
sahf
add
out
xor
cmp
sub
adc
jmp
cld
fs
ret
mov
pop
or
test
lods
pop
aam
mov
les
add
add
jbe
or
sbb
gs
je
inc
xchg
cmpsl
sbb
loopne
in
rolb
and
adc
and
mov
and
adc
fisttpll
sub
addr16
cmpsb
lret
rcll
fiadds
loopne
adcb
shl
cli
and
jnp
fs
mov
mov
xchg
add
scas
adc
insb
adc
idivl
lock
xchg
adc
and
ret
inc
aam
adc
adc
adc
or
push
xchg
push
pushf
or
cmp
es
dec
lods
push
gs
out
enter
sbb
inc
cld
jge
fidivs
xor
pop
push
jae
mov
call
inc
cmp
sti
mov
mov
sbb
or
adc
mov
inc
or
pop
cmpsl
scas
inc
mov
out
xor
xor
mov
jp
cmp
sub
xor
stos
cmp
sub
mov
shlb
and
jecxz
adc
mov
pop
adc
xor
loopne
pusha
dec
mov
and
mov
push
pushf
add
and
cld
adc
push
in
and
adc
jmp
lcall
andl
mov
inc
jo
cmpsb
adc
and
arpl
sbb
and
andb
and
jno
sub
punpcklwd
inc
mov
daa
xor
xor
dec
add
das
or
mov
rcrl
mov
mov
mov
inc
mov
ds
adc
mov
sub
push
push
sbb
jne
pushf
push
xor
outsl
fisttps
insb
xorl
pop
push
mov
and
dec
lock
sbb
and
inc
xchg
mov
mov
or
xor
shlw
add
add
and
jno
test
insl
pop
jo
imul
fldenv
jmp
outsl
sub
and
or
icebp
je
insl
mov
and
test
mov
mov
ficoml
jns
js
lods
pop
sbb
mov
mov
mov
mov
lds
adc
and
pop
adc
jae
push
adc
popa
in
dec
fists
test
je
loope
mov
adc
test
data16
sbb
xchg
mov
stos
jo
push
or
stos
ret
add
push
lret
mov
push
mov
pop
or
or
adc
add
dec
loop
or
xorb
stos
test
and
pusha
push
pop
jns
pop
adc
call
mov
js
cmp
xchg
cmp
das
or
xchg
mov
lahf
js
pop
inc
test
adc
cmc
jns
push
rcll
das
out
es
out
out
pop
arpl
cmp
pushf
add
pop
inc
inc
inc
adc
push
adc
stc
inc
notl
sbb
sbb
xchg
inc
mov
mov
jns
push
dec
and
pop
jp
add
xchg
adc
and
sub
nop
or
lds
fs
xor
cmp
or
js
inc
cmp
ret
and
shrl
push
rcrb
in
jb
pop
add
cmp
es
jmp
inc
loopne
test
mov
inc
loop
mov
xchg
test
inc
test
pop
add
push
adc
mov
dec
inc
notb
test
xor
sti
and
mov
jecxz
xor
inc
mov
sbb
sub
scas
sub
filds
or
movsb
adc
inc
and
or
stos
shl
inc
mov
add
cwtl
les
lahf
xchg
dec
add
mov
repnz
bound
stos
add
pusha
fcomps
sbb
pop
lahf
rolb
repnz
and
iret
mov
dec
mov
cwtl
shrb
or
iret
mov
jo
jne
sub
xchg
rol
fwait
cmp
mov
loope
cs
push
jl
push
fwait
xor
xchg
enter
ljmp
addl
lret
add
movsb
sbb
sub
mov
dec
adc
iret
shll
ja
or
bound
pop
cmp
daa
std
cmp
daa
js
push
lcall
mov
lds
xlat
out
or
aam
add
sbb
or
add
dec
mov
adc
dec
hlt
add
sbb
xchg
fdivs
xor
add
fabs
sbb
aad
adc
push
mov
test
jb
xor
jecxz
ja
mov
out
int
mov
mov
xor
xchg
adc
mov
push
mov
inc
push
ror
mov
sub
je
push
in
stos
and
add
pop
loope
in
imul
push
xor
stos
adc
adc
fs
and
xchg
sbb
add
sti
lcall
cltd
push
adc
mov
pop
or
sub
test
adc
xor
insb
lret
sub
add
inc
xchg
sarl
xor
xor
insl
push
xor
cmpsl
xor
add
andb
fwait
and
rclb
addr16
jle
es
mov
fisubs
push
mov
faddl
mov
mov
add
mov
insb
sbb
mov
mov
popf
lods
sbbb
or
push
or
inc
xchg
repnz
mov
fs
add
negb
nop
add
or
cmp
xchg
xchg
jl
or
xor
gs
push
inc
inc
xchg
jbe
dec
xchg
sub
xchg
or
add
jbe
mov
in
add
or
push
lret
lods
nop
xor
mov
add
inc
sti
mov
and
loope,pt
leave
inc
rclb
ret
call
sbb
out
mov
adcl
stos
test
dec
mov
add
in
pop
xchg
xor
adc
cmp
out
sbb
mov
mov
xchg
cmp
lret
mov
test
cmpb
xchg
adc
loope
fcmove
jmp
div
fldl
sub
popa
pushf
adc
mov
repz
shll
mov
jge
or
test
sbb
icebp
data16
loop
push
adc
mov
js
cmpsb
ret
push
adc
fnstsw
stos
mov
cmp
add
enter
sub
cmpsl
divl
mov
sbb
scas
scas
arpl
and
xchg
push
jl
xchg
jmp
jle
mov
push
mov
xchg
test
cmpsb
xor
inc
inc
js
pop
adcl
inc
jp
push
adc
add
add
scas
add
push
sub
les
rolb
pminsw
pop
adc
inc
test
fnstcw
sub
loop
mov
inc
dec
xlat
adc
adc
add
adc
nop
or
add
jo
nop
js
jne
int
dec
loopne
sbb
sub
xchg
sahf
sbb
fwait
lcall
ljmp
and
mov
sub
and
test
sbb
loop
nop
sub
lcall
and
or
mov
add
popa
dec
shlb
popf
adc
cwtl
sbb
mov
jo
mov
dec
in
sbb
pop
push
out
add
cmp
test
sub
lcall
andnps
mov
adc
add
daa
xor
adc
add
pop
aad
xor
adc
ljmp
jo
test
mov
repnz
mov
inc
push
cmp
loop
ljmp
push
lret
sub
daa
inc
cmp
add
cmp
sbb
and
and
xchg
xchg
and
rol
mov
sub
add
movsb
cmp
add
roll
addr16
rcrb
sbb
lock
in
push
loopne
add
arpl
mov
aaa
mov
fimuls
mov
arpl
sarl
outsb
adc
incl
and
jecxz
push
sbb
sub
addb
push
inc
lock
popa
sub
stos
mov
add
lahf
ja
mov
int3
cmp
adc
and
push
out
int3
adc
sbb
add
push
push
ret
and
cmp
mov
lds
dec
push
outsl
inc
addr16
lret
pop
push
and
mov
sbb
popf
hlt
mov
fwait
fwait
es
jne
adc
cmpsl
or
mov
mull
sbb
jge
pop
addb
or
dec
push
jns
inc
lds
and
pushf
mov
prefetcht1
jge
mov
sub
or
rcll
test
dec
mov
mov
adc
add
sub
and
sub
mov
ss
fcmovnbe
cmp
popa
fdivrl
sub
push
lock
sub
je
fisttps
or
sbbb
andl
out
pop
add
pop
add
negl
addr16
mov
dec
push
inc
pop
mov
add
inc
adc
inc
and
inc
mov
mov
leave
jo
cmp
test
mov
stos
and
add
bound
sbb
in
mov
daa
and
cltd
inc
adc
mov
jnp
stos
arpl
jmp
fisubl
mov
dec
cmpsb
test
in
adc
mov
push
mov
test
push
popa
inc
jmp
pop
and
add
sbb
jne
or
pop
jo
jg
inc
mov
mov
inc
fs
push
xor
mov
dec
imul
repnz
jp
rcll
pop
xchg
jl
addr16
or
in
mov
push
call
aam
sub
mov
adc
popa
jp
pop
xor
pop
push
inc
lock
pop
adc
and
push
xor
xor
mov
mov
xchg
inc
ret
pop
adc
cwtl
add
ds
push
sub
sti
cwtl
jecxz
cmp
dec
and
push
jl
cs
push
push
cmpsb
cltd
lea
xor
out
pop
xor
das
or
jmp
psubsw
sbb
mov
sbb
adc
ja
stos
push
xchg
fiadds
cmpl
pop
adc
ljmp
mov
or
xor
cmp
add
jne
ret
loopne
xor
jmp
mov
pusha
ja
mov
cmp
push
add
sbbl
scas
jno
mov
sbb
and
dec
and
pop
aas
sbb
mov
pop
add
jae
jnp
fistl
inc
and
stos
pop
mov
pop
adc
and
int3
inc
lods
mov
inc
add
sub
dec
in
inc
lret
add
mov
xchg
jno
mov
or
fmuls
mov
push
cmp
add
add
ja
xor
mov
mov
fisubl
out
ficompl
xchg
cmp
mov
dec
mov
dec
dec
dec
mov
mull
fadd
in
adc
inc
and
cli
stos
and
adc
or
clc
add
and
rol
jmp
sub
mov
push
je
xlat
aas
mov
cmp
push
xor
cmp
mov
rorb
inc
negl
aad
or
les
add
xor
push
lods
inc
arpl
aas
imul
xchg
push
pop
fwait
cmp
mov
mov
sbbl
adc
sub
adc
add
lock
adc
or
or
push
mov
mov
test
push
ret
push
mov
fdivl
or
fiadds
outsl
jno
rorl
or
lea
sub
adc
xchg
mov
cmp
test
sbb
fdivs
insb
push
nop
jae
mov
adc
xchg
sub
and
inc
faddl
or
push
loopne
jae
push
iret
lods
call
call
outsl
add
sbb
adc
sbb
fnstsw
mov
sbb
cmc
dec
out
or
cmp
in
mov
cld
test
inc
je
sbb
out
lds
hlt
jmp
add
xor
nop
stos
xchg
arpl
push
lods
das
lcall
push
mov
mov
and
mov
addb
in
xor
in
ds
es
adc
add
cmp
cmp
rolb
sub
nop
loopne
cmp
test
xchg
cmp
jg
pop
lods
loopne
icebp
jmp
leave
movsl
mov
add
insb
lock
loopne
nopl
rorb
cmp
es
jnp
add
data16
jo
or
xor
and
jb
scas
es
and
int3
mov
dec
js
fwait
lds
mov
mov
dec
popf
rclb
pop
push
int3
add
sbb
stos
add
fidivrs
and
aam
es
pop
mov
aam
and
test
and
xlat
jo
dec
and
sbbb
cmpsl
loope
out
insl
daa
sub
inc
xchg
inc
xchg
enter
loop
sbb
ss
dec
xchg
and
inc
fs
cwtl
add
pop
test
popa
stos
mov
das
add
inc
mov
jmp
ss
inc
icebp
xor
scas
pop
add
test
mov
ds
lods
ja
in
jecxz
mov
push
nop
pop
and
fstp
lods
loop
sbb
sub
jecxz
pushf
sbbb
out
add
cmp
push
jle
sub
xor
sub
aas
or
lds
push
mov
fxch
test
movsb
cltd
sub
and
cmp
cmovae
or
loopne
mov
jg
sub
cmp
pop
pop
cltd
mov
xchg
iret
add
mov
mov
lea
mov
xor
pop
and
inc
lds
adc
jmp
and
fcomps
outsl
arpl
jle
push
jne
cmp
mov
lods
pop
adc
and
and
sbb
add
and
push
ret
cmp
pusha
xor
sub
jl
inc
mov
mov
sbb
adc
add
mov
or
movsl
mov
dec
adc
vmread
roll
js
and
data16
jle
icebp
pop
int3
stos
loope
mov
or
add
adc
mov
arpl
mov
lret
add
stos
js
mov
jl
call
push
add
inc
imulb
mov
xor
dec
and
sbb
or
push
fwait
sti
mov
xor
mov
adc
mov
cvtps2pd
sub
add
mov
sub
inc
fsubs
jo
inc
mov
xor
fwait
add
popa
movsb
xchg
shl
adc
outsb
das
shr
and
push
dec
cmc
inc
dec
jmp
cmpsb
testb
sbb
and
dec
dec
repz
cli
lret
and
dec
push
js
xchg
ds
pop
sti
pop
mov
ret
xor
mov
pop
adc
repz
inc
repnz
les
add
mov
stos
cmp
sub
outsb
mov
ret
mov
pop
mov
xor
cmp
inc
mov
adc
cmpsl
xor
je
stos
dec
mov
rolb
cmpsl
stos
fld
shll
je
inc
cld
inc
es
sub
call
adc
stos
xor
sahf
adc
fs
mov
inc
ljmp
push
add
pusha
add
ljmp
mov
cs
clc
test
adc
sub
out
and
jns
mov
cmp
and
add
cmpsl
push
nop
mov
daa
and
fcomp
sbb
pop
or
and
call
adc
out
and
jnp
test
and
inc
push
pusha
push
xor
push
add
icebp
test
fstpl
int3
or
pusha
aaa
and
outsb
gs
pop
mov
in
mov
push
xchg
ret
add
loope
popa
das
sub
fbstp
add
jb
jo
or
xlat
ret
and
or
roll
cwtl
push
and
fwait
and
loop
or
xor
popa
popa
and
add
cmp
daa
sub
sub
mov
or
cwtl
xor
jo
in
push
int3
sub
popf
out
add
jg
sub
dec
andl
out
ds
cmp
or
lret
push
sbb
sbb
out
jns
pop
leave
cltd
or
push
cli
and
and
out
mov
add
or
or
pop
inc
and
in
mov
push
pop
jbe
add
xchg
dec
sbb
stc
and
bound
add
in
or
jns
jecxz
xor
adc
and
scas
inc
sbb
je
addb
xchg
inc
xor
nop
test
fists
push
loope
popf
movsb
cs
ror
ljmp
or
cmpsl
sbb
imulb
enter
xor
sbb
loopne
nop
and
and
scas
negl
mov
test
rcrb
mov
sbb
cmp
adc
stos
std
and
cmp
push
inc
or
push
push
adc
fprem
call
adc
inc
dec
sbb
movsb
xchg
mov
push
push
lahf
dec
mov
sub
jecxz
add
call
out
push
xchg
add
mov
pop
les
push
inc
icebp
mov
mov
push
add
mov
sarl
popa
pop
adc
cmp
es
in
or
pop
push
daa
add
mov
add
out
push
add
adc
add
dec
add
or
push
pop
mov
out
xchg
dec
out
lea
sbb
stos
cmp
or
insl
push
stos
xchg
es
mov
add
mov
adc
sub
gs
shrb
aam
aas
mov
notb
and
clc
bound
aaa
stos
or
aaa
jp
and
sbb
negl
xor
and
and
jp
pusha
add
fwait
inc
rorb
mov
push
sub
mov
push
mov
mov
mov
loope
fmuls
adc
dec
xor
das
lahf
jnp
loope
fildl
mov
pop
gs
or
add
mov
or
adc
add
addl
adc
or
dec
cmpsb
sub
push
add
cmp
xor
sbb
mov
or
jne
mov
add
jnp
pop
mov
enter
add
rolb
fsubl
mov
xor
lods
cmpsl
mov
addr16
xor
call
sarb
push
fisubs
pop
aam
je
test
pop
movsb
icebp
ss
and
test
aaa
int3
rolb
jp
test
mov
fistpll
das
js
dec
iret
cwtl
jle
add
mov
fadds
jecxz
push
sub
lods
loopne
or
loopne
adc
and
nop
cmp
push
rolb
iret
test
cmp
push
int3
das
xchg
into
sbb
gs
add
jno
int3
push
push
rcrl
in
dec
rorb
adc
mov
leave
dec
xor
add
or
addr16
sbb
mov
dec
inc
add
adc
sti
aam
fsubs
scas
imull
jne
not
scas
and
fmuls
ds
xlat
in
into
add
sbb
ret
or
or
mov
xchg
cmp
mov
pushf
imul
inc
fildl
fistpl
iret
or
xor
cmp
add
mov
push
test
inc
imulb
frstor
mov
outsb
or
xor
rorb
jmp
jle
cmp
or
push
fsubs
clc
sub
sub
sbb
add
cmpsl
aaa
mov
ja
or
ret
rcll
sti
nop
mov
pop
sbb
sbbl
or
push
or
stos
cmc
xor
add
xor
ret
or
shrl
jle
add
jo
jnp
jge
loop
or
sbb
adc
int
ljmp
add
jo
int3
aad
mov
cwtl
inc
inc
xchg
lock
push
push
les
lods
fcompl
clc
int3
lods
std
int
and
and
dec
sub
stos
mov
test
sub
pop
cld
push
ret
sbb
mov
sub
test
in
and
rol
pusha
adc
mov
or
xchg
std
mov
jo
cli
ror
and
pop
pusha
and
dec
inc
int3
stos
shlb
fldcw
cmpl
jns
jg
jno
fistpll
js
scas
push
xor
les
sub
test
and
je
aaa
aam
push
and
test
push
jp
sub
add
sub
cmp
imul
in
aaa
emms
inc
xchg
test
sub
mov
in
pop
mov
loopne
inc
and
iret
and
aaa
push
push
jle
leave
sub
dec
ret
sahf
xchg
loop
add
jne
sub
or
and
xor
movsl
xchg
xlat
stos
push
pop
push
popa
pop
ret
sbbb
cmc
inc
adc
adc
jg
mull
add
xchg
jp
in
cmp
insl
pop
mov
pop
push
and
xchg
mov
add
pusha
or
sbb
push
and
adc
cwtl
lock
xlat
and
pop
adc
mov
mov
and
andb
sub
adc
daa
insl
rolb
pop
mov
jl
das
adc
and
ret
jmp
push
cltd
xor
pop
loop
pop
jbe
adc
push
mov
enter
add
insl
in
insb
dec
inc
mov
rorb
aam
shll
cli
rol
pop
adc
inc
leave
mov
sub
add
lds
pop
cwtl
ret
es
outsl
jno
and
push
or
jmp
dec
mov
xor
sub
dec
rcrb
int
sub
inc
adc
cwtl
push
push
and
pop
add
test
sub
and
and
daa
hlt
sbb
es
subl
add
es
out
fistpl
sarl
xchg
push
aam
or
sub
je
test
sbb
jbe
jnp
push
adc
adc
ret
es
pushf
sub
mov
add
inc
addr16
mov
sub
fmuls
rorl
imul
adc
notb
xchg
in
mov
shrl
leave
inc
in
pop
cmpsl
inc
and
mov
daa
or
lret
ret
push
add
test
js
lock
push
mov
sub
shll
sub
fs
cmp
dec
add
pop
pop
xor
lcall
xchg
add
sbb
mov
push
mov
daa
xor
pop
sub
test
fldt
or
out
adc
jle
xchg
inc
mov
add
les
cs
sub
sti
rcrb
scas
xor
fiadds
popa
mov
ret
stos
lret
arpl
add
loopne
pop
jl
add
sbbb
xor
bound
data16
inc
push
jp
mov
xor
and
xchg
dec
and
out
adc
sub
or
mov
xor
aad
outsl
add
popa
cmp
inc
cli
bound
icebp
sub
xchg
xchg
lods
mov
jo
lock
test
lea
lods
stos
mov
pop
adc
dec
fwait
arpl
add
sub
addl
adc
adc
sub
inc
lea
and
jnp
mov
dec
mov
ds
fstl
and
dec
pop
sub
cmp
jno
das
aaa
or
mov
je
rorb
cmpb
dec
push
lea
fcmovne
push
sbb
sbb
mov
and
or
fimuls
mov
sub
cs
push
xchg
mov
jbe
lds
in
inc
call
xor
das
hlt
icebp
mov
sbb
add
jo
dec
add
int3
cmpsl
int3
ds
sbb
xchg
rclb
shrl
pop
mov
push
mov
jnp
divl
das
scas
push
cs
sbb
scas
inc
sub
popw
inc
sbb
add
cmp
adc
add
mov
xchg
add
icebp
cmpsb
imul
out
or
lret
add
bound
idivl
jb
add
sbb
xor
adc
cmc
test
jle
fsubr
je
jmp
push
xor
das
push
arpl
ljmp
dec
jp
push
pop
stos
das
stos
pusha
push
mov
dec
and
mov
dec
push
aaa
xor
dec
test
adc
sbb
pop
loope
inc
xor
pop
push
es
dec
adc
jnp
aam
mov
pop
mov
push
push
mov
inc
neg
pop
shlb
sbb
xorl
dec
mov
mov
sarl
sub
stos
popa
inc
add
cwtl
and
cmpsb
bound
andb
dec
dec
imul
adc
in
jge
mov
scas
cmpsl
popf
push
xchg
push
rcrl
mov
mov
loopne
dec
push
and
jp
addr16
nop
dec
xor
test
mov
or
mov
int
inc
or
jne
inc
xchg
rolb
cltd
stos
arpl
add
ja
inc
xchg
sub
sub
mov
out
sti
mov
imul
add
movsl
pop
xor
mov
xchg
test
lods
mov
add
int
mov
mov
shlb
jae
and
xchg
daa
add
sub
ljmp
jnp
xchg
pop
out
inc
xor
data16
mov
imul
add
mov
dec
push
loope
dec
push
int
loopne
loop
pop
adc
mov
cltd
das
push
xchg
pop
and
push
xchg
aas
jp
sub
sbb
ret
and
pop
sub
insb
popa
cwtl
add
adc
push
pop
test
sbb
imul
pusha
mov
mov
clc
lret
mov
jnp
xchg
lret
mov
outsl
imul
imul
sbb
mov
inc
mov
aad
sbb
mov
inc
stos
scas
addb
mov
iret
push
push
mov
or
popf
cmp
add
and
xor
cmp
sub
mov
in
fldl2t
dec
mov
mov
mov
xchg
aam
mov
xlat
and
dec
dec
stos
ret
popf
es
sub
push
sub
inc
shrb
mov
add
pop
xchg
addb
aaa
or
or
jbe
inc
aaa
mov
adcl
add
fcmovne
int
xchg
sub
cmp
adc
mov
movsl
scas
loop
xor
mov
add
sbb
xchg
pushf
lcall
and
mov
or
lock
fs
into
inc
inc
jl
add
mov
add
sub
sub
loop
rol
sub
scas
pusha
lea
xlat
adc
add
mov
pop
stc
add
and
mov
arpl
icebp
inc
mov
mov
and
adc
xor
adcl
mov
or
xor
ret
or
push
testl
les
sbb
sbb
mov
add
mov
add
sub
xchg
dec
xchg
lahf
lret
rclb
cmp
inc
ss
aas
or
adc
sbb
xchg
iret
movsb
or
cmp
jne
js
and
inc
dec
cmp
adc
or
test
lahf
jo
push
int
push
cwtl
sbb
or
aam
or
xor
ds
cmp
lock
lods
push
add
sub
add
outsl
and
imul
jg
xchg
int
adc
push
test
adc
xchg
mov
add
add
push
cmp
mov
push
jle
into
sub
add
mulb
mov
adc
ret
lods
sbb
loop
inc
mov
in
loope
and
and
es
push
push
aam
ja
add
adc
andb
cmpsb
pop
pop
loop
xor
ss
xchg
push
or
sbb
cmp
or
xchg
aam
xor
shlb
push
shlb
dec
inc
lret
mov
ds
pop
mov
or
out
inc
xchg
sub
dec
enter
hlt
sub
stos
mov
xchg
jle
iret
add
mov
cmp
jo
mov
add
xor
add
sub
or
mov
out
cmp
into
xchg
je
xor
dec
data16
fisubl
push
jg
test
test
sbb
dec
stos
rcrb
das
jo
pop
insb
and
stos
xchg
push
cld
inc
addb
xor
sub
lret
iret
push
adc
cmp
and
dec
dec
mov
push
mov
test
insb
adc
mov
sub
aad
push
xor
js
insl
pop
mov
leave
xor
cmove
jle
adc
jbe
xor
andb
adc
jge
push
addb
pop
outsl
daa
lock
hlt
mov
pop
cmpsb
orb
xor
nop
data16
mov
hlt
or
jl
inc
cmp
cmpl
movsb
inc
test
push
jle
push
rorb
pop
push
add
movsb
mov
dec
ret
adc
mov
aaa
aaa
pusha
dec
mov
shlb
bound
inc
fiadds
and
push
cmpsl
push
inc
adc
sahf
dec
and
mov
popf
test
xlat
mov
sub
loopne
shr
adc
dec
rep
sbb
add
bound
outsb
out
lods
stos
out
das
es
pop
lea
dec
pop
flds
bound
xchg
dec
test
push
and
cmp
add
pop
xchg
jge
xchg
lock
ret
mov
addl
xor
xor
lods
out
rcrb
or
push
sub
js
push
out
sbb
and
cmpsl
scas
mov
add
add
cmpsl
mov
cmp
lods
or
add
and
mov
das
call
fisttpll
cmp
stos
jb
cmp
mov
sbb
xorl
pusha
lods
movsl
arpl
loope
cwtl
mov
add
lds
add
jmp
lock
es
addb
bound
xchg
ret
clc
pop
fcomps
xor
js
jp
loop
and
iret
mov
shrb
mov
popf
xchg
pushf
inc
mov
stos
xor
push
sub
jno
jbe
fwait
inc
sahf
and
nop
push
aaa
aas
sbb
sbbb
shll
hlt
adc
push
les
mov
mov
popl
inc
mov
push
mov
cltd
movsl
and
bound
mov
stos
test
or
add
fadd
test
inc
inc
push
adc
int3
mov
test
pop
adc
mov
insb
cld
lock
xor
mov
or
mov
or
and
pop
js
rcrb
enter
inc
add
outsl
inc
add
and
pop
push
jo
lret
and
mov
or
loope
daa
dec
or
push
scas
jns
add
repnz
loop
xor
mov
push
nop
sub
insb
das
or
and
das
loopne
and
pop
ret
add
cmpsl
jns
add
aam
and
mov
aam
xchg
movsb
clc
fadds
les
mov
clc
and
push
add
jp
mov
dec
outsb
mov
sbb
jl
mov
add
add
and
or
lds
fdivl
and
and
add
xor
adc
call
pop
inc
add
xor
cmpb
pushf
stos
test
push
add
push
inc
add
fwait
and
popf
les
and
sbbb
push
mov
arpl
es
add
dec
add
sahf
jne
loope
iret
test
pusha
pop
cmp
es
push
int
dec
minps
fnstcw
jae
push
inc
sbb
mov
push
push
mov
aaa
mov
aad
js
jne
xchg
add
jbe
mov
push
ss
roll
sbbb
inc
cs
mov
leave
inc
ljmp
pop
stos
cmpsl
js
int
leave
inc
xor
and
mov
adc
xor
dec
mov
mov
jb
adc
test
push
inc
rcll
nop
and
mov
stos
cs
adc
mov
and
push
je
out
adc
lret
xlat
mov
cmp
add
adc
or
dec
jg
ret
mov
pop
push
add
lods
loopne
adc
xlat
xor
rolb
xchg
sbb
arpl
fisubl
loopne
stos
dec
xchg
jmp
mov
push
sub
inc
jns
xchg
add
mov
aam
jbe
xchg
imul
mov
jo
pop
bound
or
or
inc
sub
jb
jne
or
adc
lahf
jo
inc
sub
es
sbb
or
inc
subb
pop
cmp
mov
inc
mov
imul
loope
mov
addr16
xchg
sub
out
jbe
mov
popa
bound
adc
lods
pop
sub
cmp
lret
add
sbb
add
je
and
enter
int3
xchg
mov
bound
lock
call
add
push
sbb
pop
add
mov
loope
sub
pop
aaa
pop
mov
out
out
inc
rcl
rcll
movsb
sub
push
add
xor
mov
push
adc
or
push
xchg
add
and
test
lahf
and
mov
inc
jo
and
fidivl
xchg
xchg
lahf
adc
loopne
jb
push
push
je
das
mov
jb
rol
jnp
faddp
xchg
xchg
cli
mov
js
xchg
out
xor
adc
into
or
add
les
ret
xor
int3
fwait
enter
mov
cmp
nop
bound
sub
or
shll
sahf
dec
les
push
and
pop
add
lock
bound
xchg
in
loop
mov
rclb
xchg
or
jp
daa
jno
lret
or
jmp
add
adc
jmp
sbb
adc
mov
add
xchg
cmpsb
add
popa
in
insb
aaa
aaa
or
xor
fisubrs
push
and
out
lds
sbb
sbb
sbb
outsb
nop
mov
daa
test
sub
ss
or
jge
xor
pop
pop
push
sub
dec
add
mov
rclb
cwtl
sub
jnp
jp
and
shrl
pop
outsl
jl
push
aam
push
xchg
adc
and
rorb
add
popf
adc
push
xor
loopne
mov
jae
sbb
jl
lds
out
test
out
jge
outsl
es
xor
add
pop
pop
in
aaa
cwtl
sbb
jl
xchg
cmp
xlat
das
mov
mov
and
fmuls
arpl
insb
adc
add
push
pop
and
adc
nop
or
add
add
bound
sbb
and
push
lock
and
jmp
imul
jle
sbb
sbb
jl
or
pop
shll
fdiv
and
aaa
loope
in
jo
mov
add
jb
cwtl
jae
das
xchg
pop
mov
test
jne
xor
jo
lea
and
rcrl
push
decl
arpl
sbb
push
out
jp
xor
ss
xor
and
ja
inc
pop
arpl
or
mov
mov
mov
mov
aam
cmpsl
arpl
jl
addr16
lods
cmp
or
iret
out
jnp
test
dec
sbbw
or
aam
ja
fists
out
ljmp
add
stos
aaa
adc
xchg
or
daa
int3
outsb
sti
push
aad
sbb
add
pop
pop
test
pop
push
loopne
and
and
negl
sub
sub
mov
sub
or
jle
push
jnp
int3
shr
pop
pop
inc
inc
jg
je
cmp
cmp
jmpw
mov
mov
mov
fisttpl
cs
push
ja
ja
pop
std
iret
cmp
jle
fsubrs
jp
jae
add
sub
lock
int3
jg
or
xor
pop
pop
adc
es
and
mov
add
sti
mov
mov
jbe
add
push
mov
ja
enter
inc
xchg
int
popf
cmp
sahf
lahf
mov
sbb
cwtl
pop
stos
data16
sbb
addr16
cwtl
std
and
sub
pop
add
lods
cmp
dec
call
out
push
popa
sub
sub
adc
push
fadds
arpl
imul
mov
dec
getsec
sbb
scas
fildl
push
dec
adc
sub
sbb
int
hlt
xor
popa
and
movsb
cmp
sub
repz
test
sbb
cmp
push
aaa
add
pop
adc
add
push
mov
jae
cs
and
cmc
cs
push
sub
push
out
jp
mov
repnz
popa
stos
sbb
ja
add
out
push
mov
pop
fstpt
scas
fbld
lds
inc
movsb
push
shlb
pop
mov
sub
and
fwait
adc
mov
icebp
sahf
mov
mov
icebp
cli
add
xlat
cmpb
mov
shll
outsl
fucomip
jae
cmpsb
js
fbstp
mov
clc
inc
dec
je
leavew
add
cmp
xor
outsl
js
jmp
je
les
inc
pop
xor
and
mov
sahf
cltd
xlat
jle
aam
sub
mov
rcl
aam
fstl
xor
fmuls
insb
dec
out
aad
cmp
sbbb
inc
mov
pop
hlt
insb
sbb
insb
ja
loope
mov
add
adc
or
xchg
mov
or
add
jge
xchg
mov
into
je
pusha
or
pop
repz
inc
es
and
mov
ficomps
inc
mov
or
pop
popa
sbb
ret
jae
bound
movsb
sahf
or
das
push
push
push
add
jbe
adc
push
ss
loopne
inc
cmp
shll
add
and
cs
adc
int
pop
lret
add
leave
dec
inc
or
adc
ret
lcall
cmpsl
adc
mov
mov
fdivrs
push
inc
ret
and
pop
mov
add
imul
xchg
in
xor
jo
pop
push
daa
push
push
and
or
add
jmp
or
cwtl
or
lds
pusha
aaa
mov
fcoml
jae
cmp
inc
lcall
lods
outsl
cmp
test
adc
rep
scas
nop
and
sbbb
jno
sbb
adc
pop
cmp
data16
mov
add
xchg
jmp
bound
xlat
pushf
jno
xchg
add
ret
jns
and
xor
pop
int3
and
push
lahf
pop
sbb
aas
lds
sub
xchg
int3
out
xor
pop
xchg
mov
rcrl
jge
movsb
xlat
xor
or
lds
pop
pop
mov
scas
pop
sub
fwait
int
pop
rep
cmp
sub
fsts
pop
imul
mov
add
jge
call
shl
int3
add
test
out
add
mov
ss
loopne
out
and
inc
fcomps
jle
es
out
cwtl
adc
hlt
adc
xor
or
int3
icebp
add
lret
test
int
adc
cltd
add
dec
dec
pop
pop
fdivrs
mov
xor
jnp
xchg
cmp
pop
loopne
jb
xor
es
pop
inc
adc
ja
shl
jae
imul
cmpsl
fcoms
or
mov
fwait
inc
js
test
jge
sbb
cmp
sub
daa
add
push
fwait
or
cmpsl
lods
mov
adc
lcall
xchg
xchg
fwait
jne
insl
in
jne
xchg
or
xor
dec
push
push
insb
jp
into
push
jbe
push
loope
or
sub
stos
mov
xchg
sbb
xchg
jecxz
or
sbbl
adc
add
push
push
sub
mov
or
jbe
pusha
outsl
sub
outsl
add
dec
mov
js
cmp
ret
mov
dec
mov
in
push
jl
sbb
adc
sbb
ja
jge
push
mov
test
push
xlat
inc
aas
js
int3
js
or
adc
jg
sub
sub
movsb
pop
mov
mov
or
js
mov
stos
jae
jae
subb
jno
mov
add
jmp
in
pop
push
lret
cli
sbb
jne
das
xchg
cmp
ret
movsb
jo
test
xor
rorl
je
adc
outsb
in
xchg
mov
loop
dec
loop
lods
nop
andb
dec
xor
add
push
in
insl
cmp
cmp
jnp
andb
jmp
pop
push
cmc
sbb
push
cwtl
jno
xchg
sbb
or
rcr
cmc
mov
xchg
cmp
loope
movsb
in
push
cmp
imull
aaa
divl
cltd
fwait
xorb
faddl
cmp
adc
and
inc
js
fcoml
lock
in
ret
or
xor
sbb
enter
sbb
or
je
decb
jnp
pminsw
push
ljmp
or
adc
testl
sbb
out
lahf
xchg
rcr
scas
jp
mov
repz
and
pop
sub
or
sbb
xchg
xor
and
inc
cs
dec
or
xor
int3
adc
dec
inc
movsb
pop
mov
ret
mov
lds
mov
jnp
es
cs
push
push
mov
fmull
jnp
pop
push
pop
pop
mov
inc
inc
daa
dec
adc
cmp
test
mov
xchg
ds
mov
es
mov
and
jbe
notl
and
insb
shrb
add
loopne
adc
or
pop
mov
add
rcrb
adc
rolb
nop
andb
mov
xchg
ret
imul
test
popa
ret
mov
aas
push
lret
jg
adc
js
mov
sub
nop
xchg
inc
mov
sbb
and
inc
pop
and
and
or
pop
push
xorl
inc
das
negl
xchg
jae
pop
xchg
xchg
mov
rcrb
jmp
xor
mov
mov
adc
mov
push
popa
jnp
mov
push
push
in
loopne
aas
cld
sti
movsb
adc
adc
shlb
loope
popa
mov
push
sti
add
stos
adcl
test
popa
adc
xchg
push
daa
push
add
add
mov
mov
jnp
jecxz
add
sub
and
dec
pop
nop
lret
popa
test
andl
mov
push
sbb
cltd
push
aad
mov
fwait
scas
dec
enter
jl
mov
xor
xor
push
sub
popa
push
xchg
fists
add
jecxz
out
ds
nop
shl
stos
push
dec
jo
xchg
mov
or
lock
call
sub
cmp
adc
adc
aad
sbb
pusha
sbb
sub
xor
cld
into
push
mov
ret
and
and
imulb
mov
frstor
jle
loopne
pop
pop
nopl
gs
nopl
push
sti
fwait
ret
inc
mov
cmpsl
or
push
sahf
push
pop
call
in
cmp
mov
dec
in
and
xchg
ja
test
adc
mov
jle
out
es
mov
shr
test
in
fcompl
mov
into
push
push
pop
push
iret
pop
add
add
add
xchg
mov
lea
lods
add
incl
addr16
mov
mov
je
push
gs
sub
jg
test
mov
xor
lahf
mov
leave
mov
rclb
fwait
cmc
scas
add
nop
add
pushf
ret
sbb
xchg
insb
ret
mov
or
mov
daa
or
mov
test
into
mov
add
adc
scas
and
int3
lcall
dec
into
or
pop
mov
inc
aaa
jne
sub
push
lods
sbb
int
xor
pop
or
jnp
subl
sti
jmp
nop
or
and
fcomps
xor
adc
sbb
ret
cli
dec
pusha
add
rol
pusha
pop
das
sbb
sbb
dec
stos
daa
xor
or
out
inc
gs
sub
js
adcl
rorl
mov
decb
cltd
mov
leave
cli
adc
mov
mov
xchg
xor
repnz
adc
shl
push
repz
mov
dec
std
dec
sbb
push
mov
mov
fs
push
mov
shrl
or
insb
cli
mov
xchg
or
cli
or
xchg
neg
sti
cld
dec
rcll
sbb
and
stc
cmc
fcomp
xchg
push
es
inc
sub
mov
push
jns
cli
push
aaa
nop
stc
lcall
daa
adc
add
and
or
push
adc
add
test
mov
xchg
rcl
adc
sbb
andb
mov
add
loopne
push
or
dec
inc
lahf
and
lea
ret
and
sar
sbb
pop
push
leave
dec
lret
pop
or
rcll
adc
jp
xor
mov
sub
addl
sub
xchg
adc
xchg
nop
ret
sub
jmp
xchg
imul
add
cs
nop
rolb
sub
adc
lods
and
jns
mov
dec
mov
xor
jge
andl
adc
iret
cmpl
gs
push
jmp
adc
inc
jo
hlt
sub
cmp
push
mov
xor
fisttpl
mov
repz
jge
into
rcll
mov
pop
jb
xchg
jg
xorb
das
leave
addr16
mov
sub
jmp
xchg
into
xchg
lea
fists
sbb
mov
outsb
int
addr16
inc
gs
mov
insl
lahf
add
inc
xlat
or
pop
sahf
cmp
je
cmpsl
scas
gs
lea
cmp
mov
mov
imul
xor
cs
setg
or
lods
push
lret
imul
sbb
filds
es
nopl
xchg
xor
xor
add
arpl
fmuls
sub
sub
pop
add
mov
xchg
sbb
and
push
lret
lret
mov
cs
cwtl
enter
sub
mov
pop
or
aam
adc
shl
jg
jbe
test
in
in
mov
xchg
movsl
add
push
mov
lret
or
mov
das
fsts
add
push
subb
add
pop
ret
inc
xchg
insb
leave
pusha
and
jne
push
pop
push
push
sub
add
pop
ss
add
dec
outsb
pop
enter
mov
insb
xlat
cli
lea
daa
xor
repnz
rcll
add
idivl
mov
mov
sub
mov
push
inc
sbb
inc
jne
gs
or
test
pop
popa
pop
movsb
sub
divb
in
into
push
pop
daa
jmp
sbb
xor
jl
add
sub
adc
push
pop
imul
jge
mov
push
flds
sbb
sbb
sbbl
inc
mov
push
jg
sbb
pop
mull
or
addr16
xor
out
orl
sbb
daa
dec
out
inc
sbb
in
rcr
iret
xor
in
adc
adc
ja
fldenv
add
adc
sbb
in
jnp
push
or
inc
aad
mov
and
sub
flds
arpl
arpl
sahf
sub
sbb
arpl
outsl
idivb
or
iret
jl
stos
or
popf
popf
cmpb
push
jae
insb
lods
add
xor
or
jbe
mulb
lds
aas
xor
xchg
sub
popf
jne
inc
adc
sbb
out
mov
xlat
jns
wbinvd
out
adc
mov
adc
cmpsl
das
divb
pop
mov
cmp
jnp
sbb
jns
lahf
leave
in
adc
aaa
or
out
add
xor
imul
jg
pop
push
sbb
test
and
push
jl
lock
jne
dec
jbe
adc
and
jp
orb
push
cli
pop
aaa
insb
sub
xor
add
cmp
jp
dec
xchg
fcmovnbe
fnstenv
or
addl
xchg
mov
cmp
or
mov
inc
add
call
rorb
add
push
aaa
mov
push
insl
and
pusha
xor
mov
sub
xchg
es
test
cld
xchg
inc
pop
pop
push
jno
jmp
or
loop
pop
mov
loopne
insl
es
scas
push
sbb
outsb
je
xor
pop
jno
mov
and
xor
mov
mov
in
cld
mov
test
push
jns
add
mov
sub
aad
or
fdivl
mov
mulps
in
sub
fsubl
loope
call
mov
in
xor
pushf
push
fsubrl
dec
rorb
mov
mov
mov
stos
add
mov
mov
aas
xor
push
test
adc
mov
mov
push
push
les
push
push
add
xchg
fldt
dec
daa
dec
push
ficoms
mov
or
cmpsb
fldl
movb
xchg
dec
lret
xchg
ljmp
mov
out
sub
out
push
add
push
sahf
pop
pop
push
sar
aad
das
mov
fsubrs
add
aam
in
pop
test
mov
and
mov
push
inc
dec
sbb
pop
sahf
test
gs
rcrb
mov
add
xchg
mov
xlat
push
jle
push
inc
cmp
outsb
push
popa
jmp
rcll
nop
sub
ret
scas
sub
arpl
jecxz
outsb
test
or
movsb
jle
jnp
xor
add
shlb
stos
jmp
inc
shlb
sub
dec
rcr
movb
add
call
xor
push
push
data16
fmull
repnz
push
lds
fsubrl
xchg
fisttps
push
mov
rcll
sub
xor
adc
popf
sti
xorb
div
imull
sbb
adc
mov
jmp
incb
jle
mov
stos
mov
dec
test
sub
mov
push
popf
test
pop
jo
mov
daa
inc
aaa
jg
adc
das
in
clc
sub
loope
mov
das
mov
test
inc
arpl
inc
loopne
shl
dec
xchg
sbb
xchg
ret
xchg
jns
inc
jg
dec
jle
loope
and
mov
out
outsl
int3
add
rcll
pop
call
dec
pop
cmp
mov
or
cli
pusha
push
enter
in
mov
popf
pop
cli
mov
pop
mov
and
jp
and
clc
in
sub
cmp
leave
xorps
inc
dec
cmpsl
or
addb
xor
mov
dec
inc
and
fidivrl
xchg
jnp
adc
pop
add
push
mov
lret
icebp
imul
adc
mov
inc
sub
lcall
xchg
adc
xchg
in
repnz
loop
movsb
xchg
scas
or
fcomp
dec
push
dec
pop
lea
outsb
movsl
and
xor
sbb
add
or
dec
inc
in
jp
xor
call
mov
fsubl
addl
shr
push
cmp
pop
pop
roll
imul
iret
mov
jae
xor
lahf
repz
mov
fsubrl
cmp
mov
and
cli
faddp
icebp
ds
jo
xchg
dec
filds
aam
push
xor
aam
fsubrs
pop
and
scas
cwtl
int3
add
stos
mov
dec
fsubrs
push
xchg
sbbb
loopne
or
cvtps2pi
mov
mov
xor
and
jb
mov
jecxz
stos
pop
and
jno
xchg
cmp
out
sti
scas
sbb
sub
cmpb
jbe
adc
xor
xchg
sub
ss
mov
repz
cmp
sti
ja
ss
movb
out
lret
cmpsl
mov
andl
insl
addl
ret
sbb
stos
adcl
cmp
mov
cld
pop
je
push
shlb
xchg
cltd
xor
fidivrs
test
das
and
testl
and
rcll
aaa
out
pushl
dec
xor
inc
push
xchg
mov
push
outsb
insb
adc
mov
fistpll
ljmp
stos
fcmovnb
nop
loope
movsb
jnp
mov
lcall
lds
aaa
and
dec
sbb
sti
pop
jmp
inc
sbb
roll
add
cmp
loope
xchg
inc
test
add
fwait
mov
dec
push
dec
lock
push
lret
sti
ss
inc
clc
xor
outsb
dec
pop
xor
call
sbb
sahf
dec
push
cwtl
movsb
push
in
lret
pop
insl
sbb
inc
lcall
out
xchg
jg
fs
adc
and
or
push
arpl
icebp
xchg
fidivs
and
inc
push
mov
jae
sarb
pop
mov
sub
sahf
inc
inc
sarl
add
sub
jle
mov
and
clc
inc
sahf
mov
not
pop
sub
mov
adc
out
das
icebp
or
jmp
push
mov
ss
cmp
xchg
sub
aam
sub
dec
movd
or
fildll
jno
shll
sbb
cmc
pop
loope
incl
cmpsb
xor
and
push
ror
les
ljmp
xchg
pop
mov
sahf
icebp
jmp
lea
cltd
pop
mov
push
jle
jge
dec
dec
lahf
xchg
aaa
enter
outsl
pop
xchg
pop
loopne
mov
push
icebp
cmpsb
pop
adc
cmpl
mov
pop
mov
mov
scas
aad
adc
push
inc
std
jmp
xor
sub
pop
dec
js
ja
cmp
cld
notl
jle
orl
ret
mov
stos
jg
push
dec
mov
mov
push
adc
jns
pop
ja
data16
push
inc
shll
rcrl
pushf
mov
jg
nop
stos
repz
mov
sub
cmp
mov
push
push
mov
push
jmp
shrl
push
lods
pop
or
cmp
jns
cmp
jl
dec
insl
add
mov
into
mov
push
insb
xchg
aaa
push
inc
test
push
aaa
mov
stc
push
inc
scas
xlat
ret
adc
adc
xlat
inc
push
loop
sub
sbb
and
std
mov
mov
mov
hlt
mov
loop
loope
inc
lock
aam
adc
mov
xlat
jno
mov
int
mov
push
cmp
jmp
arpl
roll
mov
dec
xchg
popf
pop
or
xor
xchg
icebp
and
xchg
ja
inc
pop
or
dec
sbb
push
es
lds
jnp
lods
int
sub
or
add
sub
shr
cmpsl
xor
sbb
pusha
mov
lret
les
cmovge
push
fwait
cmc
mov
mov
inc
notb
pop
lea
aad
or
push
and
shrb
cmc
cmp
leave
js
push
sbb
testl
test
stc
jne
mov
test
aam
sti
movsb
scas
add
outsl
fistl
or
push
pop
and
mov
or
in
scas
push
cmp
add
jmp
leave
daa
push
fs
lods
iret
inc
inc
mov
bound
mov
jle
pop
ja
dec
sub
rcrb
cmp
lret
inc
repz
lret
lods
shrb
fwait
rclb
movsl
lret
pop
sahf
test
out
push
and
movsl
adc
daa
jns
inc
fcoms
sub
mov
adc
roll
insb
mov
add
loop
jae
dec
jne
repnz
mov
cmp
adc
pop
or
vpcmpeqb
aad
scas
aas
mov
sbb
dec
loop
xlat
mov
mov
cmc
adc
rcl
xor
out
int
fcmovb
add
adc
jp
mov
cmpsb
mov
enter
fcmovu
sub
fistl
mov
insb
insb
scas
xor
sbb
cmp
mov
adcb
mov
outsb
mov
push
jg
add
xor
sub
pop
sbbb
jl
stos
popa
pusha
mov
dec
mov
mov
mov
and
pop
fimull
push
xor
and
sbb
xchg
sbb
mov
inc
mov
cld
dec
sbb
in
push
inc
sbb
jne
shrb
je
mov
sbb
or
sti
push
clc
aas
inc
je
in
ret
push
mov
cltd
sub
pop
mov
cmp
jne
or
loopne
mov
pop
jb
jns
fld
int
push
mov
ret
xor
imul
inc
hlt
ja
add
jge
data16
adc
sti
pushf
mov
jne
jo
adc
pop
lods
pop
inc
test
jge
pop
pop
xchg
or
popa
push
call
movsl
ljmp
sub
outsb
mov
mov
rcrb
push
push
insb
int
lods
into
je
mov
sub
push
jmp
push
xor
or
jmp
lds
push
mov
xchg
mov
loopne
and
jbe
je
shll
rol
clc
cmpsb
int
scas
cmp
push
xor
xor
push
mov
fistl
and
ret
popa
imul
in
pop
mov
mov
adc
test
jge
pop
inc
jb
loop
out
sub
jne
add
lds
and
cmp
mov
pop
push
add
mov
iret
nop
dec
push
adc
sbb
dec
mov
sub
ss
or
les
ds
into
xorl
push
jmp
mov
dec
in
jb
xor
sbb
jecxz
inc
inc
inc
addr16
mov
in
dec
mov
mov
adc
push
in
ds
cli
push
xor
or
xchg
movsb
rorb
fimull
pop
mov
mov
fistl
sbb
insl
pop
aam
add
mov
sub
inc
push
imul
les
xor
lds
mov
iret
nop
mov
push
test
lods
insl
push
xlat
int3
mov
push
sub
xlat
nop
in
fnstsw
sbb
bound
add
inc
xchg
out
incl
fsubs
pop
xchg
bound
leave
cmpsb
sub
pop
xlat
jge
aam
sub
xor
jmp
xor
pop
std
sbb
mov
add
push
sbb
adc
idivl
rcl
inc
fcmovnu
repnz
std
push
sbb
int
cs
inc
hlt
inc
pop
sbb
lods
sbb
test
dec
cld
pop
xchg
xchg
rcrb
pop
call
insb
mov
inc
pop
icebp
scas
lea
jmp
xchg
pop
mov
cmc
mov
popf
fsubrl
inc
mov
lods
xchg
push
pop
push
int
sbb
shlb
insb
jne
mov
cmc
js
repnz
subb
add
loope
test
out
adc
mov
sbb
leave
xor
xchg
leave
scas
pop
ret
notb
mov
xor
loope
clc
pop
sub
test
adc
push
adc
dec
adc
repnz
jbe
mov
addl
mov
outsb
adc
dec
ret
mov
cld
xlat
push
lods
mov
push
lcall
jae
dec
adc
sbb
shrl
out
imul
sbb
pop
cli
test
xchg
test
out
lret
push
xchg
dec
push
add
stos
out
jp
fcmovnb
sahf
rclb
mov
and
lock
inc
adc
sahf
and
add
xor
out
sbb
pushf
stos
into
scas
iret
arpl
mov
xchg
add
add
cmpsb
mov
adc
mov
sbb
sarl
call
sub
sub
add
jbe
lods
mov
push
sbb
pop
lods
mov
pop
jge
rcll
jl
pop
daa
js
xchg
nop
adc
push
les
dec
or
insl
cmp
aam
lcall
add
pushf
or
and
ds
jecxz
mov
pop
std
jb
pusha
dec
loopne
push
loope
add
or
cmp
sub
nop
dec
cld
jg
lods
adc
inc
mov
adc
cmpsb
cmpsb
push
dec
dec
inc
rorl
add
repnz
pop
insb
data16
pop
inc
cmpsb
jae
push
xchg
cltd
xchg
ljmp
aam
arpl
sbb
in
mov
scas
enter
pop
aas
mov
dec
out
fs
fistps
sub
popa
and
lret
daa
mov
repz
dec
and
jo
rcrl
cmpsl
rcrb
pop
cmp
loopne
stos
lods
repz
dec
fwait
jae
push
stos
adc
pop
or
out
sbb
adc
rorl
iret
or
repz
sbb
push
mov
inc
and
adc
idiv
sub
sbb
testb
cs
cwtl
pop
xor
mov
imull
stos
jmp
pop
and
xchg
jo
loope
ficomps
mov
movsb
dec
aad
je
in
mov
sbb
mov
inc
inc
cld
lret
fidivs
push
and
out
outsb
mov
mov
jnp
push
pop
jge
dec
addr16
adc
dec
dec
dec
dec
out
mov
mov
call
dec
and
jecxz
adc
add
xor
shrb
enter
mov
push
cli
push
in
sbb
loop
fidivrs
ja
fadds
lret
out
addr16
cmp
inc
jle
inc
xor
lret
lds
rcr
je
ja
adc
flds
or
push
mov
xor
xchg
insb
ss
in
in
xchg
stos
dec
xchg
orb
arpl
test
andb
imul
loopne
and
cmp
pushf
icebp
fists
mov
imul
test
push
jp
popf
inc
mov
push
divps
in
inc
jne
and
jbe
jmp
mov
lea
pop
dec
mov
js
inc
filds
push
push
mov
test
jbe
cmp
je
push
cmp
sub
cs
sub
shll
jp
cmpsl
pop
xchg
pop
sbb
js
mov
add
int3
fstl
mov
dec
es
or
jns
mov
sahf
xchg
icebp
mov
sub
jno
xchg
test
xchg
push
sbb
adcl
mov
pushf
adc
ja
pop
lock
stos
fldt
xchg
sbb
add
jne
sbb
rcrl
ja
push
aam
or
xchg
notb
test
imul
push
mov
ds
push
je
scas
cs
jno
inc
mov
jae
std
pop
mov
jge
cmp
jg
xchg
push
in
mov
xor
dec
push
pop
sub
pop
ds
ljmp
mov
insb
push
cmpb
lahf
fstpt
lods
test
xor
push
cmp
pop
out
mov
jbe
add
cwtl
xchg
loope
fidivrl
sbb
and
xor
dec
cli
loop
jecxz
push
pop
jae
sbb
in
fisttps
mov
or
mov
push
inc
fisubrs
xlat
ficomps
imul
scas
aaa
outsl
cmc
insl
fildll
xchg
cwtl
pop
rcrb
cmp
jle
xlat
xchg
sub
insl
mov
call
lahf
mov
mov
push
or
dec
mov
mov
cmpsb
xor
push
fimuls
je
mov
sbbl
cmp
js
fcmovne
dec
push
mov
mov
test
adc
xchg
rcrl
dec
sub
mov
cmpsl
filds
or
jg
or
hlt
pop
fnstsw
and
inc
add
add
jmp
es
test
roll
cmp
adc
std
int
xchg
mov
shll
cmc
mov
pop
clc
imul
mov
clc
rclb
popa
je
pop
arpl
dec
mov
ja
ret
rcll
inc
jl
push
lock
xchg
sbb
loopne
dec
adc
scas
push
in
shr
jne
jne
test
mov
lods
xstore-rng
cmpsl
sbb
or
or
push
ret
inc
push
jecxz,pn
cs
imul
in
cmp
jge
cmpsl
jns
mov
inc
and
into
roll
ljmp
pop
outsl
sbb
add
cltd
or
or
loopne
mov
inc
dec
out
push
je
xor
jge
pop
out
cltd
or
insl
xor
loopne
pop
mov
cmpsb
mov
sahf
ljmp
outsl
aas
inc
pop
xchg
std
mull
add
cmpsl
sbb
mov
inc
push
clc
xor
inc
adc
ret
inc
xor
dec
cmpsb
or
movl
push
inc
rcr
scas
sub
das
aad
loop
xor
or
sub
add
push
scas
push
jns
imul
ljmp
xchg
sub
mov
out
rcl
insb
mov
adc
pop
sbb
pop
cmp
addb
pop
pop
fdiv
inc
ljmp
and
cli
cs
sub
insl
pop
fstpl
mov
xchg
sub
and
mov
dec
mov
mov
push
xchg
jns
fstps
aaa
fcoms
rcrl
or
imul
shll
pop
clc
push
jge
shlb
mov
add
pop
loope
bnd
adc
or
sbb
scas
dec
adc
add
jo
and
addl
or
pop
ret
je
test
mov
jl
lock
mov
add
fildl
std
mov
push
mov
push
fldl
cmpsb
clc
mov
daa
cwtl
adc
jl
inc
bnd
arpl
push
mov
js
jp
in
jmp
fnsave
ja
push
xor
aaa
push
jne
jle
dec
ja
adc
cmp
cld
mov
loopne
ret
xchg
xchg
mov
sub
xchg
jecxz
push
shlb
int3
pavgw
jbe
mov
sbb
lds
ficoms
mov
je
idivl
lea
test
mov
cmpsb
xchg
outsb
add
in
push
jl
add
push
push
jne
ljmp
cld
lock
jmp
cmp
or
mov
xchg
ret
inc
xlat
sarb
lret
or
cmp
mov
mov
add
outsb
dec
lods
lods
inc
out
out
lcall
xor
mov
dec
cmpsb
cmpsl
mov
sti
loop
jns
lahf
push
xor
fldl
pop
aad
cmp
adc
add
jecxz
push
push
mov
and
pop
stos
cmp
push
cmp
inc
jge
jge
jo
or
jge
pop
adc
adc
lcall
mov
jg
or
loop
jno
mov
frstor
lock
jne
in
cmp
mov
mov
cwtl
jmp
xor
jb
mov
sub
arpl
or
dec
xchg
shrb
inc
mov
test
cmpxchg
mov
mov
cmp
repz
rcrl
push
push
mov
xchg
adc
out
aam
popf
call
mov
pop
jno
insl
sbb
push
xlat
mov
xlat
xor
mov
inc
in
sbb
mov
in
imul
sti
mov
or
dec
cmp
push
pop
out
or
xor
fistpl
inc
xor
ja
push
sub
sbb
pop
sub
test
mov
jnp
lods
xchg
loopne
js
inc
mov
shrl
ss
inc
push
add
ret
push
mov
add
jns
cmp
push
add
jp
mov
hlt
and
loop
mov
add
in
jmp
and
mov
lock
or
ds
shlb
or
loope
lea
jl
pop
das
jecxz
mov
lea
das
xor
rolb
push
inc
rorb
testl
stos
out
cmpsl
roll
mov
sbb
in
jnp
mov
clc
dec
rorl
pop
push
popa
loope
sub
movsl
cli
fwait
adc
mov
test
fwait
or
sarb
xor
ret
lods
fwait
enter
fisubs
mov
ja
ret
sbb
cmpsl
pop
test
std
push
mov
mov
mov
int3
les
scas
cwtl
outsb
and
aam
ret
mov
test
js
push
mov
jno
pop
insb
sbb
adc
aas
pop
sbb
fsubrl
dec
mov
jno
test
push
sub
loop
test
idivb
dec
ljmp
lods
push
sub
fidivs
adc
mov
lods
mov
fsubrp
jmp
nop
imull
push
add
adc
push
pop
pop
mov
push
sbb
hlt
int3
lcall
inc
imul
dec
imul
lea
xchg
mov
xchg
pop
out
dec
jp
jmp
adc
or
jbe
mov
fisubrs
pop
xor
sahf
iret
add
je
pop
insb
xchg
pop
test
lods
divb
xor
adc
pop
jl
imul
sbb
pop
cld
lock
adc
dec
push
mov
loop
sarl
adc
sti
dec
int
pop
and
mov
fdivr
call
daa
pusha
andb
or
test
outsb
outsl
jne
ret
movl
push
push
mov
xlat
icebp
aad
mov
out
sbb
in
lret
inc
adc
xorl
adc
sbb
imul
xchg
fnstenv
jmp
cmpsb
jle
loope
xchg
mov
xchg
rorb
push
dec
jo
mov
mov
jecxz
fcmovnbe
xor
xor
daa
cltd
lods
mov
cmc
jne
pop
insl
pop
jnp
es
mov
sbb
pop
jg
push
rdtsc
jb
xchg
push
push
add
cmpsb
outsb
jnp
jecxz
pop
repnz
lock
clc
stos
loope
push
jo
mov
inc
cmp
push
xchg
lcall
xchg
dec
aas
aas
push
xor
mov
pop
ficoml
mov
lret
add
add
cmp
inc
int3
pop
les
cmp
and
cmp
inc
scas
pop
sub
lds
in
cmp
lods
ret
aaa
mov
div
loopne
jbe
push
adc
imul
dec
in
pop
push
fdivs
jmp
fdivs
lock
je
rorb
push
loop
adc
mov
jl
or
jo
into
gs
lods
aam
adc
sahf
pop
mov
test
lahf
cli
mov
push
clc
add
stc
add
jecxz
or
push
jno
sahf
mov
xchg
mov
sti
xor
adc
stos
adc
idivb
fs
loope
xchg
and
push
or
popf
mov
mov
and
jno
scas
mov
orb
sbb
rorl
ss
sti
shl
les
in
jns
xlat
push
mov
rorl
and
cli
in
hlt
arpl
sub
popf
fdivl
ds
adc
push
mov
inc
scas
pop
push
mov
mov
push
adc
push
sbb
stos
mov
rorl
jo
scas
sbb
popf
lds
xchg
push
inc
ds
or
or
pop
shlb
jmp
test
aam
insl
scas
mov
imul
js
pop
cli
cmp
call
add
lret
pop
xchg
lea
andb
push
mov
adc
jae
ss
xchg
push
or
adc
cmp
cmp
pop
out
maskmovq
testl
sar
pop
loope
fwait
dec
push
sbb
sbb
xor
fistpll
xor
sbb
and
xor
sbb
daa
ljmp
fldt
arpl
push
sbbl
mov
and
imul
das
xor
aas
lret
fucomp
pop
or
aaa
add
loopne
sbbb
adc
fmuls
ret
data16
mov
fsubs
jno
imul
sbb
aaa
jae
adcb
or
into
and
and
jecxz
insb
in
repz
iret
sub
push
lret
or
push
pop
pop
movhps
pop
arpl
mov
push
sbb
sarb
adc
or
inc
imull
mov
cmp
sbb
sub
push
ja
jns
add
mov
xor
jae
adc
jnp
fmuls
push
xor
mov
into
fmull
sub
ficomps
testb
and
in
mov
add
mov
push
outsl
aas
xor
cli
push
mov
es
daa
mov
negl
jno
or
mov
shll
ds
sub
aaa
pop
pop
sbb
jne
mov
sub
out
jno
sub
popf
mov
adc
pop
ds
lcall
push
pop
add
adc
or
mov
xchg
adc
cmp
fcoms
cmpsl
and
jae
mov
fwait
mov
ror
out
inc
repz
sti
lods
lock
pop
inc
pop
sbb
sub
leave
cmp
mov
fnstenv
sub
nop
into
sbb
adc
push
cmp
pop
scas
sub
inc
ret
sbb
lods
cmpsb
sbb
cmp
adc
sub
insl
pop
ja
xchg
outsb
ret
xchg
jae
fnstcw
lods
push
inc
stos
pop
mov
dec
push
add
jae
xor
xor
pop
lods
sbb
sub
sbb
mov
sbb
int
mov
int
jnp
sub
adc
xlat
rorb
or
daa
out
cmp
mov
dec
adc
fwait
jge
out
cmp
add
sbb
cmp
cmp
dec
push
addr16
jnp
pop
cmp
insb
lods
jnp
pop
subl
xor
adc
jnp
push
ljmp
pusha
mov
stos
sbb
fcompp
notl
xchg
or
sahf
cmp
and
cmp
sbb
adcl
scas
pusha
cmc
or
add
scas
dec
neg
clts
xchg
pop
or
into
jge
mov
sub
outsl
push
sbb
je
ja
jae
sbb
inc
add
pop
fwait
cmp
inc
cmpsl
sub
fstps
jmp
pop
gs
fwait
adc
push
cwtl
iret
das
pop
fwait
lods
cmpsl
dec
fistpl
push
fwait
mov
push
rorb
mov
sbb
mov
dec
clc
push
or
aaa
add
rolb
mov
add
mov
adc
cmp
imul
lods
data16
push
inc
pop
dec
jbe
movlps
fs
push
lahf
and
add
jnp
pusha
and
inc
sbb
or
add
jl
stos
cwtl
push
rclb
add
xor
aaa
add
invd
les
pop
xchg
add
addl
outsl
in
cmp
add
cmp
jp
mov
xor
add
cs
into
sbb
cmp
add
arpl
add
add
adc
jmp
out
mov
push
cmpsl
pusha
or
add
popf
out
add
push
mov
xchg
iret
jns
and
add
aaa
fwait
icebp
pop
xchg
or
dec
jg
sbb
inc
xor
mov
ljmp
add
shlb
es
add
mov
push
jbe
loop
jbe
icebp
xor
arpl
lds
mov
and
adc
popa
mov
mov
aad
or
jno
cmc
mov
stos
dec
lock
sub
mov
mov
dec
inc
mov
push
in
jle
pop
shlb
fsub
add
xchg
filds
or
or
or
mov
jbe
xchg
dec
icebp
inc
mov
ret
pop
sbb
enter
cmp
ss
lahf
sub
pusha
movsb
mov
pop
dec
pop
mov
lods
outsl
out
inc
je
push
xor
jbe
mov
jb
imul
sahf
lods
in
pushf
or
aad
jbe
push
ss
xchg
das
and
and
mov
ds
and
ss
sbb
fcmovnb
mov
push
fcoms
fdivs
jge
and
jae
push
mov
inc
test
add
sti
mov
adc
mov
and
xor
test
add
pop
lods
lea
pop
mov
push
xchg
enter
and
pop
adc
xchg
les
test
cmp
enter
adc
cmc
lods
add
fs
adc
sbb
ss
sub
dec
sbb
and
pop
or
sbb
inc
dec
or
fistpll
fldenv
mov
jp
ret
in
sub
mov
add
mov
jg
xchg
pop
adc
dec
test
pop
mov
mov
into
lock
lods
mov
ret
popa
xchg
inc
es
push
orl
and
iret
dec
inc
mov
jp
push
ret
test
sbbb
mov
fisubl
nop
push
mov
xor
adc
and
ret
or
lods
and
outsl
push
mov
jbe
adc
lods
and
test
and
xor
xchg
jbe
sbb
data16
ss
ja
test
jnp
sbb
mov
fmulp
or
sub
xorl
or
cmp
cwtl
rolb
adc
sbb
add
ss
or
lcall
aad
or
and
xchg
pop
notb
pop
add
in
fnstenv
adc
inc
enter
or
xchg
pop
pop
mov
sub
add
pop
inc
push
leave
divl
push
rol
add
cmpsl
inc
stc
leavew
rcrb
jge
cmp
insb
out
dec
je
and
fldenv
sbb
dec
dec
pop
jle
insl
imul
cmp
js
sub
es
inc
push
xchg
and
cwtl
xor
adc
add
cmp
cwtl
roll
data16
movsb
test
shr
andl
jp
xor
or
dec
stos
adc
cmp
les
or
dec
outsl
mov
or
xchg
xchg
dec
and
dec
mov
adc
and
xlat
or
or
dec
sbb
clc
ret
lret
es
fstps
rorl
pop
and
pop
data16
adc
or
xadd
ffreep
ret
sahf
into
pop
pop
fdivrs
outsl
mov
fcomp
and
push
jnp
mov
sbb
adc
loopne
es
xor
adc
adc
add
sbb
loope
mov
dec
lret
lret
cmp
jge
push
jae
lcall
sbbl
mov
sarl
int3
mov
and
jge
and
xchg
or
fcomp
out
add
push
cmp
adc
and
cmpsb
fs
dec
dec
fwait
test
cmp
call
filds
rclb
push
sub
mov
call
cs
pop
push
xchg
xor
dec
inc
or
xchg
pushf
in
idivb
xchg
addr16
frstor
add
and
jne
add
xor
mov
rol
cmp
pushf
push
push
jb
adc
pop
es
ss
sahf
mov
loop
lds
out
jb
jne
mov
add
shlb
fwait
push
lret
or
dec
xchg
addr16
fmuls
adc
adc
pop
dec
mov
test
pop
or
out
sub
sbb
imul
rdmsr
fnstenv
outsb
pop
sbb
sub
call
lods
loope
jbe
fcoms
es
xchg
aaa
push
jbe
and
out
jae
adc
inc
sub
push
and
push
rorb
xchg
dec
xchg
fadds
arpl
popa
outsl
pop
push
cmpsb
imul
dec
and
fldcw
leave
fidivs
popa
sbb
decl
push
stos
shlb
sub
fwait
push
sub
adc
jnp
dec
mov
in
scas
adc
sbb
push
scas
pop
and
js
pop
mov
ret
es
icebp
fwait
inc
dec
sub
adc
xor
ret
pusha
sbb
mov
pop
mov
xchg
lods
in
cmpsb
jg
mov
and
jo
orl
int3
jp
and
btr
and
xor
int
fs
adc
jl
add
xchg
ss
xchg
test
sub
insl
lods
popa
xchg
lret
popf
imul
sbb
mov
xchg
xlat
int
xchg
sub
mov
iret
pop
sbb
xor
notb
popa
sbb
xor
in
xor
sbb
sbb
push
add
nop
lds
push
add
and
fcmovnbe
lods
fldenv
xchg
mov
cmp
lock
adc
cmpl
std
add
adc
and
mov
insb
mov
sub
das
push
jne
fsubs
sub
fildl
insb
sbb
and
sub
mov
and
sub
ds
or
mov
iret
xor
rol
stos
cmpb
sbb
dec
push
and
sahf
fadds
cwtl
addr16
or
dec
testb
imul
ss
xor
mov
popa
rcll
adc
sub
ficomps
mov
pop
mov
dec
dec
mov
test
arpl
pop
adc
sub
mov
popa
scas
sub
aaa
pop
and
or
or
adc
pop
pop
bound
xor
cld
in
mov
arpl
xor
sbb
sub
jmp
lret
roll
mov
and
adc
lods
push
push
or
xchg
fwait
cmc
mov
dec
pop
ss
adc
jo
fs
inc
mov
xchg
hlt
xor
mov
pop
insb
mov
jbe
test
jg
sub
or
adc
aad
pop
lret
or
cmpb
xchg
adc
popa
xor
adc
and
jbe
iret
push
aaa
daa
arpl
fildll
in
jnp
sbb
adc
jle
fwait
insb
in
inc
das
and
pop
push
rcrb
cltd
add
xchg
pusha
xor
and
mov
cmp
cs
pushf
pop
ss
int3
jne
mov
xor
mov
ljmp
or
add
sldt
and
flds
jbe
mov
xor
sbb
mov
arpl
add
xchg
inc
mov
pop
jmp
fadds
add
cmp
jo
iret
ja
sub
mov
insb
adc
inc
dec
ficoml
and
xchg
test
dec
push
sub
xor
push
jp
pop
in
adc
mov
jo
add
inc
and
xlat
aaa
sub
dec
and
push
movsb
test
int3
lahf
subb
push
or
pusha
ss
mov
dec
sub
sub
add
and
adcl
daa
mov
inc
cwtl
movsb
and
pop
sub
jae
aaa
and
xchg
pop
ret
fs
loope
mov
aam
push
daa
jb
ds
cmp
push
push
fldcw
imul
mov
leave
scas
xchg
jnp
xchg
pop
mov
sbb
sbb
or
pop
push
dec
cmp
mov
xlat
cmp
and
orb
adc
xchg
js
in
mov
pop
call
and
filds
cmp
daa
jbe
push
xchg
es
or
sbb
or
data16
js
aam
cmp
or
dec
sahf
mov
inc
les
outsl
push
mov
gs
xlat
add
xchg
pop
insb
or
xchg
mov
or
in
orl
pop
xchg
hlt
mov
andb
cld
push
aas
xlat
add
add
nop
push
or
aaa
scas
sbb
push
sub
bound
jle
dec
dec
pop
rorb
sbb
shlb
push
das
sbb
push
cmp
or
out
or
stos
pop
stos
es
adc
shlb
add
jb
or
or
push
and
or
and
arpl
fsubl
pop
cmpsb
xor
pop
sbb
sbb
inc
add
aaa
push
pop
sbb
mov
xchg
dec
sahf
in
and
xorb
out
cli
pop
add
pop
lds
popa
xor
popa
inc
lret
jge
sbb
popf
fcoms
mov
loop
mov
sub
fbld
lret
mov
imul
xor
fisttpl
xor
sub
xor
sahf
mov
xchg
inc
jno
mov
or
test
pop
gs
mov
push
imul
inc
out
shll
stc
fwait
xor
dec
in
sbb
and
add
call
mov
frstor
imul
adc
sti
test
divl
push
xchg
add
fsubrl
sbb
mov
cmp
clc
push
jb
in
daa
add
addr16
mov
mov
jno
inc
dec
addr16
inc
insb
inc
in
mov
fldl
gs
and
js
push
cmp
add
and
in
pop
lock
inc
daa
sbb
sub
mov
xor
daa
pop
or
aaa
mov
cli
arpl
roll
cmp
in
mov
xchg
lds
adc
add
adc
push
icebp
dec
adc
jns
unpcklps
daa
adc
lds
cmp
push
in
or
dec
sub
push
movsb
notl
addr16
pop
hlt
push
cmp
or
mov
adc
jecxz
add
sbb
jno
adc
dec
push
pop
cmovge
les
push
or
or
add
fdivs
popa
sbb
pop
sbb
add
dec
sbb
sbb
aas
add
and
test
js
and
js
loope
or
add
pusha
jb
icebp
out
mov
push
and
in
cmp
dec
pop
add
xor
cmp
or
addr16
cs
pusha
add
aaa
inc
sbb
sub
push
or
addr16
bound
and
pusha
pusha
iret
xor
pop
sub
out
lods
sbb
out
fwait
jge
dec
xchg
push
xchg
enter
xchg
bound
xchg
add
scas
pop
ss
nop
daa
adc
inc
push
shrl
xlat
jg
xor
jge
jae
and
ficomps
inc
mov
out
inc
mov
movsl
add
les
cmpsb
aas
ret
fwait
popf
rorl
push
gs
inc
popa
outsl
fwait
mov
pop
mov
sbb
or
gs
imul
gs
out
fildl
mov
pop
jge
sub
mov
adc
mov
lea
and
pop
mull
les
jecxz
jl
xor
mov
fnstcw
mov
scas
movsl
xor
mov
xchg
cmp
sbb
or
sbb
stos
outsb
jb
jbe
mov
push
dec
push
adc
pop
or
idivl
xchg
test
adc
mov
mov
dec
mov
fsubrs
addr16
or
stos
scas
in
cwtl
xor
xor
inc
or
cmp
mov
int
xchg
dec
dec
inc
adc
mov
xchg
leave
stos
xchg
rcrb
inc
nop
insb
inc
xchg
cmp
and
lcall
push
jo
ret
inc
and
adc
in
xor
jecxz
fsts
out
insb
sbb
js
sbb
sbb
dec
sbb
jb
jp
sbb
js
inc
leave
cmpsb
mov
jo
or
inc
sbb
mov
imul
js
jecxz
and
lods
rcrl
jge
adc
js
test
cwtl
and
mov
pop
sbb
jns
push
adcl
jno
jae
xorl
cmc
xorb
clc
and
push
popa
fs
bound
jne
cmpl
add
mov
push
sub
int3
add
add
pop
mov
mov
adc
push
lods
sbb
test
mov
push
les
pop
adc
adc
and
popa
fisubs
inc
jle
or
push
adc
add
adc
rcrb
mov
shlb
mull
int3
test
repnz
loope
jbe
bound
cmc
ds
int3
add
and
js
push
inc
pop
dec
pusha
pop
push
imul
in
or
stos
lods
pusha
or
dec
add
push
clc
mull
shr
iret
add
add
adc
xor
sbb
outsl
and
jle
mov
cmc
mov
data16
push
test
pushf
or
sbb
test
scas
push
inc
dec
mov
nop
add
mov
add
adc
push
pop
mov
jl
pop
add
mov
xchg
push
push
inc
cmpsl
dec
dec
mov
and
lock
and
and
dec
mov
xchg
xor
sbb
lds
icebp
popa
xor
or
pop
das
push
daa
pushf
mov
mov
sub
sub
push
inc
addr16
inc
lods
and
push
std
popf
cmpsl
or
push
js
xor
dec
repnz
pop
mov
fisubl
fsubs
mov
and
cmp
xchg
enter
or
es
popf
lcall
pop
imul
push
dec
dec
dec
mov
ret
pop
test
rol
jnp
xchg
xor
testl
push
addr16
jge
mov
jle
out
sub
jl
sub
in
inc
aaa
cmp
sub
fwait
add
xlat
xor
mov
fldlg2
sbb
aad
pop
add
xor
mov
pop
sub
lock
imul
andl
mov
sbb
test
xchg
dec
push
sub
loop
dec
pop
push
loopne
add
pop
adc
and
ret
xchg
and
xor
sub
fisubrl
add
lock
cmp
xchg
addl
add
push
frstor
test
sub
and
imul
cmp
inc
out
mov
jnp
stos
stos
enter
mov
sub
addr16
sub
push
js
push
dec
cmpsl
es
addr16
mov
pop
push
dec
les
mov
dec
mov
outsl
cmp
stos
jg
push
xor
fistl
jnp
and
and
insl
dec
add
rorb
test
inc
push
movsb
aaa
lods
xchg
bound
shlb
jmp
and
bound
xchg
div
jnp
inc
or
lods
push
xor
pop
lods
inc
outsl
stos
sti
and
rcrb
or
dec
fcoml
insb
stos
jle
arpl
test
loope
gs
imul
hlt
rolb
lods
fsubs
insl
inc
push
pop
push
adc
dec
push
pusha
int3
sarb
insb
adcl
or
ret
mov
or
dec
mov
add
mov
lret
add
shrl
or
sahf
or
jo
add
outsl
dec
int3
movsb
pop
test
addb
lods
pop
int
or
test
mov
xchg
les
les
fsubl
dec
lcall
inc
gs
fs
outsb
xchg
shlb
loop
notb
xchg
lods
push
xchg
sahf
ljmp
scas
inc
pusha
lods
cmp
mov
jle
popf
fildl
adc
inc
loopne
insl
cltd
add
out
int3
lds
sub
adc
sub
imul
fs
popa
lahf
icebp
dec
loopne
dec
and
inc
jmp
mov
mov
dec
push
dec
fwait
inc
sbbb
or
inc
xchg
stos
jl
adc
mov
pop
testl
jle
gs
xchg
mov
mov
mov
aas
inc
dec
cmpl
xchg
add
mov
ret
scas
ret
dec
dec
push
fisttps
or
push
dec
dec
dec
stos
sbb
mov
pop
mov
inc
push
mov
lea
bound
jae
lods
out
mov
arpl
jle
mov
inc
dec
mov
inc
mov
adc
jg
mov
in
test
push
ja
neg
mov
es
dec
fildll
mov
push
adc
inc
sub
outsl
ret
call
popa
cmp
ret
mov
fildl
aaa
sti
mov
int
inc
dec
mov
test
cmp
mov
test
pop
push
daa
mov
or
ja
js
in
shll
ds
repz
or
sbb
dec
es
pop
fisubs
mov
dec
daa
lock
jne
aaa
inc
fwait
push
movsbl
cmp
push
rorl
mov
es
lods
inc
aas
dec
mov
inc
iret
sbb
andl
dec
jl
js
and
xchg
movb
mov
rcl
movsl
aas
dec
dec
movsb
push
adc
popf
pusha
cmp
inc
lds
arpl
inc
push
sub
outsb
imul
cmp
loope
inc
inc
inc
xor
adc
in
jno
sbb
inc
ja
std
mov
in
xor
outsb
cmp
lods
daa
dec
jo
cmpsl
ja
and
jbe
ret
neg
push
push
insb
xchg
add
pop
outsb
xor
les
jb
imul
inc
push
xchg
cmp
pop
outsb
adc
sub
jmp
cmp
ja
nop
jge
insl
lahf
mov
push
push
push
addr16
and
and
xchg
ret
xlat
into
cltd
out
mov
jae
lds
inc
and
jmp
xor
imul
int
dec
popa
sar
cwtl
sbb
outsb
adc
pop
add
dec
inc
pop
dec
xchg
sarb
ja
stos
std
sub
out
jge
dec
adc
fbstp
jns
test
pop
mov
notb
mov
fiadds
xchg
clc
jg
jae
cmp
and
jmp
inc
dec
inc
aad
jne
rolb
dec
xchg
aaa
inc
push
push
dec
inc
mov
out
or
cmp
test
push
mov
jae
inc
mov
imul
daa
mov
out
xchg
or
bound
mov
out
popa
ss
ss
dec
addr16
mov
jno
push
cmp
icebp
push
xchg
xchg
push
cmpsl
popf
mov
jle
push
pop
fs
imul
dec
dec
mov
push
clc
data16
cmp
shl
push
ret
addb
mov
and
hlt
sarb
aam
pusha
cltd
fs
push
push
arpl
das
push
mov
mov
ror
mov
push
fildll
mov
jbe
lret
dec
enter
jo
mov
pop
sbb
add
dec
imul
adc
js
leave
inc
mov
push
in
sarl
jo
sbb
mov
into
fs
add
dec
jl
inc
stos
mov
shll
out
mov
fwait
roll
or
dec
negl
fidivs
mov
inc
dec
sbb
add
jns
cmp
out
and
jmp
dec
lret
jo
std
adc
pop
mov
inc
xchg
les
push
sbb
jecxz
dec
inc
sub
push
aad
imul
gs
test
sub
or
push
lods
xor
push
daa
aad
nop
out
orb
push
les
and
daa
mov
lcall
xor
dec
or
cmp
inc
popa
insb
fs
xchg
rorl
or
xchg
stos
insb
dec
rorl
add
xchg
lods
sbb
dec
xchg
mov
popa
jns
push
push
enter
jle
adc
jnp
push
cltd
lods
insb
fnstenv
mov
adc
gs
push
sahf
adc
mov
addb
xchg
adc
bound
adc
popa
xorb
or
pop
stos
sub
movsb
test
mov
rclb
jp
xchg
adc
test
lock
inc
mov
add
pop
xchg
mov
lea
fnsave
sbb
push
and
popa
pop
enter
test
test
inc
push
mov
jno
sub
mov
cli
test
insb
and
not
add
cmpsl
cmp
mov
xlat
sarb
lret
xor
add
add
incb
dec
add
jb
lds
sub
idivl
cwtl
adc
pushf
mov
lcall
mov
inc
pushf
std
and
or
ja
cmp
addr16
mov
addr16
dec
sub
fsts
jb
add
mov
je
jne
cld
adc
jnp
adc
ljmp
sbb
rclb
pop
cmp
pop
jmp
pop
push
add
pusha
add
push
sub
or
shrb
mov
pop
add
mov
adc
xchg
cwtl
push
sbb
imul
push
lahf
lea
mov
inc
sub
xchg
or
es
pop
adc
cmpsb
cmc
ss
mov
popf
add
movsb
cmpsb
pop
les
filds
arpl
leave
pop
add
sbb
test
outsl
gs
test
loope
lods
and
add
xchg
or
aaa
push
inc
decb
rcrb
pop
dec
mov
pop
sub
add
sub
dec
dec
leave
hlt
cmp
sub
adc
sbb
ss
stos
fs
inc
mov
test
rorb
xchg
adc
lods
or
push
mov
sbb
jmp
pop
out
inc
xor
pop
push
mov
aas
or
loopne
jl
sbb
push
clc
adc
inc
mov
sub
outsb
mov
mov
add
jp
or
add
insb
add
pusha
scas
pop
sbb
mov
in
push
jne
cmp
cmp
pop
mov
aam
addb
mov
jecxz
add
pop
sbb
aad
pop
je
sbb
or
lcall
stos
in
movb
inc
mov
xor
arpl
lea
pop
adc
xor
dec
sbb
dec
stos
inc
dec
test
and
inc
and
push
xchg
push
adc
or
insl
sbb
testl
sub
dec
inc
jg
mov
daa
rcl
iret
dec
into
out
imull
push
pop
int
sub
pop
mov
in
mov
lret
repz
jmp
lods
push
dec
sbb
int3
sbb
push
arpl
pop
push
je
jle
xchg
xlat
adc
adc
dec
rorb
loop
in
jg
adc
test
sarb
jb
fs
clc
inc
lds
inc
jl
push
cs
pop
lods
aad
or
ret
sbb
sbb
xchg
pop
imul
imul
imul
or
mov
pusha
mov
pop
add
mov
nop
push
xchg
cld
sbb
dec
pop
mov
call
jns
test
inc
pop
fwait
xchg
rcr
in
mov
sbb
out
aam
cmpsb
push
push
sub
int3
push
les
lods
dec
dec
adc
cmp
int
pop
mov
shrl
sbb
sbb
dec
add
pop
fmuls
inc
inc
mov
inc
scas
xor
push
cmpsb
dec
cmp
je
orb
inc
sbb
adc
cli
inc
test
mov
es
cmpl
cltd
jb
pop
sbb
mov
pusha
fbstp
iret
jne
fcmovb
les
or
mov
sub
inc
and
inc
test
outsb
adc
lds
loope
rorb
arpl
pop
and
add
add
sub
mov
test
dec
sub
in
inc
inc
sub
mov
adc
jo
mov
inc
add
mov
xchg
aam
cmpsb
adc
sbb
or
sbb
daa
inc
inc
lea
jns
pop
enter
fimull
and
dec
push
dec
push
add
pop
test
call
or
jg
sub
sbb
and
out
pop
addl
lods
adc
mov
scas
ja
xchg
add
dec
add
jnp
daa
or
sub
in
pop
pop
push
jb
in
nop
xchg
sahf
insb
and
mov
pop
into
in
outsb
xchg
pop
pop
xor
and
repnz
mov
mov
sub
jbe
js
negl
pop
ret
add
in
adc
or
and
pop
popf
pop
jbe
or
lds
xor
in
shrl
xor
insb
or
mov
and
mov
sbb
inc
ss
and
pop
lods
sbb
inc
pop
pop
jno
or
mov
mov
mov
insb
mov
pop
and
sbb
and
dec
dec
sub
imul
pop
fwait
aaa
mov
fstl
std
add
pusha
fldt
adc
movsb
jne
push
mov
das
nop
mov
mov
adc
test
add
lret
push
add
push
jnp
das
pop
imul
xchg
in
mov
leave
ret
push
fsubs
in
notb
rorl
fisubrl
and
push
add
cmp
stc
test
sub
ficoml
mov
aaa
mov
adc
or
add
pop
or
pop
popa
pop
repnz
sbb
and
int3
es
jbe
aas
cli
pop
frstor
sbb
dec
fwait
cmpsb
imul
mov
add
pusha
or
add
xchg
jb
movsb
sub
nop
or
inc
rclb
inc
stos
add
push
push
insb
pop
mov
cmpsl
inc
adc
adc
lea
add
add
sar
iret
and
arpl
jnp
inc
mov
dec
add
mov
mov
insl
in
repnz
jae
imul
adc
add
cmovg
inc
push
or
sti
testb
jne
dec
popa
outsb
fs
fstpl
sti
push
imul
xor
mov
adc
inc
push
inc
insb
jne
push
outsl
inc
dec
outsb
jo
je
jne
data16
mov
outsl
sbb
imul
faddl
loopne
inc
cmpsb
jae
lret
into
jb
or
insb
adc
test
add
outsl
push
xor
gs
sqrtps
jns
push
popf
mov
lcall
fldcw
add
cli
inc
sahf
je
fnstenv
adcl
fcmovnu
push
imul
push
outsl
or
insl
fldt
dec
xor
push
pop
inc
push
popf
mov
sub
jmp
movsb
dec
sbb
mov
in
mov
adc
jb
ss
gs
adc
mov
adc
popf
out
fsubr
in
jo
dec
and
test
jo
call
loope
popa
mov
sbb
adc
bound
inc
shlb
ficompl
jns
arpl
jle
loope
sti
push
data16
inc
jb
out
aaa
fsubs
outsl
addb
lcall
je
inc
adc
push
inc
mov
out
pop
jmp
push
inc
sub
test
incb
push
add
pop
inc
sub
loopne
popl
or
add
add
add
pusha
sub
aaa
imul
add
pop
mov
addb
sub
fldlg2
int
add
add
and
mov
push
jl
add
inc
dec
inc
inc
mov
dec
nop
jmp
and
in
mov
inc
push
sub
push
xor
in
jbe
rolb
or
add
add
cs
mov
add
lock
push
sbbl
sti
add
fsubs
push
jae
sub
fisubl
add
mov
pop
icebp
pop
mov
add
add
add
and
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
