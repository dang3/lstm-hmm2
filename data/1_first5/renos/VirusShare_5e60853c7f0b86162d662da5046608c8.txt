jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
aaa
aaa
cmp
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
mov
cmp
je
jmp
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
xor
divl
test
jne
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jg
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
mov
lea
mov
mov
mov
dec
je
mov
mov
xchg
dec
mov
cmp
je
jmp
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
sub
mov
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
push
mov
mov
xor
call
mov
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
mov
mov
mov
call
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
push
mov
mov
xor
call
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
lea
mov
push
jmp
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jg
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
mov
lea
mov
mov
mov
dec
je
mov
mov
xchg
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
nop
push
mov
add
movb
push
push
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
movl
movl
lea
push
call
push
push
push
call
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
movl
movl
lea
push
call
decb
cmpb
jne
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
pop
add
add
add
add
pop
add
add
add
add
add
jae
add
data16
xor
add
xor
xor
pop
add
add
add
xor
xor
add
pop
add
xor
xor
add
data16
add
add
add
jae
add
add
push
mov
add
mov
mov
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
mov
mov
movl
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
pop
ret
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
shlb
repnz
shlb
repnz
shlb
repnz
mov
shlb
repnz
mov
push
jbe
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
xchg
mov
repnz
sti
xchg
mov
repnz
jl
or
xchg
mov
adc
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
xchg
mov
cmc
xor
adc
repnz
or
xor
jl
xchg
mov
jp
or
xor
jl
or
xchg
mov
adc
xacquire
pop
scas
xor
jge
mov
xor
xchg
mov
mov
adc
repnz
cli
xchg
mov
lds
push
sti
xchg
mov
lds
out
xchg
mov
add
xchg
mov
cmc
xor
adc
repnz
sti
xchg
mov
lds
push
cli
xchg
mov
jl
xchg
mov
jp
pextrw
xor
xchg
mov
jl
xchg
mov
lds
out
xchg
mov
jp
xchg
mov
lds
push
sti
xchg
mov
jl
xchg
mov
lds
push
cli
xchg
mov
add
xchg
mov
lds
out
xchg
mov
add
xchg
mov
cmc
xor
adc
repnz
pextrw
xor
jl
xchg
mov
les
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jg
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
mov
lea
mov
mov
mov
dec
je
mov
mov
xchg
dec
movl
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
mov
mov
call
mov
cmpl
je
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
cmp
je
mov
subb
mov
mov
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
nop
xorb
nop
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
incl
mov
cmp
jne
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
push
mov
push
call
push
call
ret
mov
pop
ret
add
add
outsb
add
add
add
add
add
add
add
je
jae
fs
insb
and
add
in
add
cmp
js
mov
xchg
mov
inc
dec
cmp
jno
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
jne
lea
dec
inc
dec
mov
mov
pushl
call
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
movb
mov
lea
xchg
lea
mov
lea
mov
xchg
mov
dec
dec
dec
jne
lea
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
add
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
call
call
call
call
test
jne
mov
jmp
movw
cmp
jno
xchg
mov
mov
lea
dec
inc
mov
mov
mov
xchg
lea
mov
lea
lea
mov
mov
mov
mov
dec
inc
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
dec
xchg
mov
mov
mov
mov
mov
dec
inc
dec
dec
mov
cmp
jg
xchg
xchg
mov
xchg
inc
dec
inc
inc
inc
inc
mov
jmp
lea
lea
mov
mov
dec
je
xchg
lea
xchg
push
call
mov
cmpl
je
push
call
call
cmp
jno
mov
mov
xchg
mov
xchg
lea
inc
mov
xchg
lea
mov
xchg
mov
lea
lea
mov
xchg
mov
pop
ret
add
popa
fs
jae
js
cs
insb
add
add
popa
outsb
and
js
and
add
andl
jae
movl
mov
xchg
cmp
js
xchg
mov
lea
xchg
lea
mov
dec
inc
dec
je
lea
xchg
mov
mov
lea
xchg
inc
inc
mov
mov
mov
lea
call
cmp
jne
mov
lea
mov
xchg
mov
lea
lea
inc
mov
lea
mov
mov
mov
mov
lea
dec
mov
mov
ret
mov
ret
lea
xor
cltd
add
fdivr
add
sbb
fwait
jbe
jmp
push
or
shlb
mov
push
iret
ss
jbe
cli
adc
xchg
out
push
push
push
add
mov
mov
jno
jp
pop
add
in
add
add
pop
add
sub
add
cltd
jbe
add
in
add
cmp
and
push
pop
popa
sbb
insl
adc
fiaddl
ss
in
arpl
lcall
xchg
mov
add
jp
lcall
xchg
and
bound
or
fs
pop
add
sbb
add
push
add
mov
add
dec
cmp
mov
add
clc
add
pusha
mov
xorb
aas
inc
push
stos
mov
sub
add
mov
xchg
outsb
add
mov
add
add
add
fimuls
mov
faddl
lock
pop
cli
pop
add
out
cmp
mov
pusha
add
das
fsubrs
add
pop
pop
push
cmpsb
in
add
movsl
out
mov
fldl
push
jmp
mov
xlat
push
add
add
pop
mov
inc
dec
add
add
mov
xchg
add
add
stos
cli
ss
in
add
mov
stc
pop
cmp
jno
add
loop
add
pop
in
out
fistps
sahf
stos
adc
test
xchg
shr
pop
jg
add
add
std
mov
sbb
jmp
inc
faddl
sub
add
repz
pop
lea
pushf
pop
cld
pop
loopne
roll
les
xchg
insl
fbld
daa
repz
jle
add
sub
ss
clc
dec
add
pop
jb,pn
jo
dec
add
mov
mov
jo
shrl
sbb
adc
xchg
add
mov
add
add
test
lock
aam
cmp
loope
mov
out
repz
push
int3
and
mov
in
and
call
add
push
inc
in
imul
addl
adc
add
das
mov
add
push
inc
pop
add
cmp
adc
ds
add
aad
xor
dec
out
pop
lods
xchg
push
cmpsb
add
xor
out
call
dec
std
add
add
mov
dec
incb
or
jl
push
lods
or
rolb
mov
std
add
das
xchg
lods
jg
add
lahf
enter
sub
daa
dec
push
gs
test
scas
add
mov
xlat
add
aaa
arpl
add
jns
andb
fcoms
jne
std
dec
lods
add
adc
add
add
jns
cmp
push
ljmp
lret
sub
and
ljmp
fdivl
negl
inc
fsubl
add
xor
mov
add
pop
sbb
js
push
adc
sahf
mov
movsb
add
out
aam
pop
add
or
pop
push
mov
add
stos
inc
push
xor
mov
add
test
stos
add
adc
add
sub
sbb
mov
jl
sbb
mov
scas
lods
cmovns
add
imul
jbe
movsl
add
add
out
add
push
add
add
add
add
imul
pop
inc
movl
scas
push
lods
in
or
or
pop
fwait
dec
add
cltd
in
sbb
push
jg
mov
jno
add
add
adc
dec
mov
mov
mov
dec
fcmovne
sbb
mov
pop
out
subb
jns
mov
sub
sub
jbe
pushf
cmp
addr16
lock
pusha
mov
aad
xchg
xchg
jl
roll
in
jmp
xchg
repz
push
xchg
in
in
jmp
lcall
push
cmp
popf
shlb
push
xchg
inc
cmp
inc
scas
cmp
popf
les
xchg
push
scas
jb
adc
mov
ret
cmp
inc
loope
and
sub
inc
rol
or
sbbl
jp
inc
fiaddl
rorl
xchg
xorb
lahf
jb
lds
leave
mov
out
adc
mov
cmpsl
push
arpl
sub
jge
push
rcrl
push
out
mov
in
dec
or
js
add
das
std
pop
sbb
xor
lds
jb
lcall
cmp
cli
mull
mov
xchg
in
dec
arpl
mov
hlt
loope
loope
xorl
mov
dec
add
ds
xchg
movsl
in
mov
and
rcrl
ss
mov
lods
push
gs
in
jns
or
js
sbb
pop
inc
fcos
push
ret
mul
push
test
lds
cmp
mov
adc
js
adc
xor
in
sbb
or
push
xor
mov
push
bound
subb
jmp
pop
cmp
loope
pminub
push
mov
fcompl
and
push
and
sahf
test
stc
test
imul
mov
sub
aad
and
ss
aaa
cmp
arpl
mov
mov
cli
lret
add
aad
orb
sub
dec
leave
jae
mov
and
jl
jmp
repnz
loop
sbb
add
insl
sub
cmp
fisubrl
sbb
call
xor
cmp
pop
test
cmp
in
in
ja
setl
loopne
cmp
jb
into
loopne
aam
clc
adc
imul
xor
stc
xchg
sbb
dec
sbb
arpl
xlat
xor
pusha
sub
movb
int
sti
hlt
jmp
jno,pn
inc
aad
xchg
les
mov
popl
popf
dec
fsts
dec
xchg
repz
pop
movb
lea
in
inc
adc
pop
fsubl
je
jmp
jge
pop
icebp
ja
inc
clc
jae
inc
pop
push
xchg
aas
sahf
mov
jb
push
decb
jl
je
test
neg
adc
std
pusha
rcl
cwtl
mov
and
shrl
sbbl
ja
mov
sbb
mov
jmp
adc
mov
mov
test
push
shrl
enter
pop
dec
mov
into
xor
jp
inc
icebp
push
fiadds
js
lret
mov
jecxz
int
jp
jno
push
mov
jp
pop
shlb
addr16
mov
lock
movb
lret
insl
inc
mov
std
jl
clc
push
jecxz
xchg
arpl
ljmp
mov
jae
insl
mov
sub
dec
push
rolw
add
imul
es
leave
push
mov
jge
xchg
mov
test
push
adc
sbb
jb
sarl
imul
xor
xor
add
xor
gs
push
xor
das
xor
mov
lea
push
mov
cld
dec
mov
inc
rcrl
adc
push
inc
and
testl
out
dec
mov
dec
pop
mov
cmpsl
push
popa
out
cld
bound
jns
mov
in
adc
out
addr16
sub
xchg
mov
ss
pop
in
mov
pop
pop
mov
jae
cmpsl
jle
iret
lcall
sub
xchg
mov
fs
gs
mov
push
decb
popf
out
sarb
ror
xor
push
pop
push
and
insb
outsb
notb
jnp
and
scas
and
or
leave
sbb
cmp
xchg
ret
in
mulps
and
inc
in
cmp
shlb
inc
inc
les
or
outsb
or
in
push
fidivl
cwtl
and
aas
aam
imul
push
fiadds
push
lds
mov
shlb
mov
cmp
mov
hlt
cmc
lret
lods
or
dec
out
jge
lfs
adc
push
aaa
mov
int
add
and
pop
dec
push
arpl
push
fistpl
jo
xchg
mov
and
pop
cmp
pop
cmp
outsb
or
xor
mov
in
rorl
pushf
cmp
pushl
ja
jl
stc
decl
movsb
inc
ds
or
movsl
hlt
push
inc
and
sbb
push
mov
ljmp
js
mov
into
pop
and
xlat
repz
push
xchg
pop
cmp
push
out
repnz
xchg
cmpsb
sub
xchg
cmpsl
cmp
xchg
outsb
pop
add
adc
push
push
ljmp
loop
sbb
push
aam
out
and
sub
jle
sub
dec
sbb
push
in
cmpsl
fmul
mov
add
rolb
test
ret
test
mov
xchg
dec
mov
cmpsl
and
les
cmp
push
fisubrl
jb
mov
daa
push
mov
mov
adc
into
das
mov
cmc
ja
repnz
sbb
outsl
rcll
loop
add
in
mov
fs
dec
lret
out
in
into
lods
or
cmp
out
stos
push
cli
inc
fnstsw
sbb
mov
or
xor
push
pop
call
pop
icebp
pusha
data16
cmp
adc
clc
sub
mov
push
sbb
sahf
movsl
add
jb
mov
push
sahf
dec
mov
and
cs
and
sbb
lock
stos
mov
xchg
inc
call
mov
mov
movb
iret
sbb
call
mov
lods
inc
adc
pop
pushf
xchg
dec
mov
pusha
std
mov
inc
jg
adc
aas
cmp
lret
jb
add
sub
clc
sbb
pop
and
insl
mov
cmpb
les
xor
push
int
loope
fwait
mov
loope
dec
fistps
int
lods
das
imul
mov
cmp
jl
sti
loop
outsb
lds
insl
and
add
adc
cmpsl
shlb
cltd
icebp
sub
cs
lret
sub
lock
sbb
mov
cltd
icebp
mov
sub
jmp
out
xor
aam
mov
xchg
mov
sub
lea
sbb
mov
dec
xchg
or
orl
or
ror
test
push
mov
mov
mov
xor
push
xchg
das
mov
pushf
sub
adc
pop
lahf
fmul
stos
cld
mov
sbb
sbb
stos
incl
mov
or
ljmp
jo
mov
sub
mov
cld
add
and
inc
mov
add
fwait
lea
mov
pop
in
mov
adc
dec
xlat
imul
in
fimull
scas
and
sub
xchg
into
cmpsl
xor
pop
or
mov
sbb
ss
in
jle
dec
in
pop
xor
shl
filds
xor
jmp
xor
in
addl
gs
shll
mov
adc
fldt
jae
mov
jnp
sahf
test
cmp
dec
adc
test
iret
les
imul
fwait
jae
mov
inc
mov
imulb
push
ret
inc
js
and
call
and
ljmp
fsubp
cmc
and
ret
sarb
push
mov
mov
leave
lods
loop
hlt
adc
test
xchg
dec
jge
mov
sbb
or
aaa
bound
pop
add
icebp
push
pop
jns
movsl
push
cmp
mov
lods
aas
mov
add
scas
pop
pop
mov
fcompl
cmp
loop
push
mov
clc
cmp
pop
cmp
shlb
shlb
stc
jno
inc
mov
xchg
loope
ficomps
movsl
sti
pop
jnp
lret
test
test
aad
pop
daa
xor
inc
lcall
xchg
movups
ss
js
sbb
push
into
jg
cwtl
sti
xchg
sub
cmp
cmp
in
pop
outsb
mov
ret
mov
cld
mov
xor
push
bound
sub
push
push
in
sub
out
xchg
pop
cmp
mov
push
cmp
cwtl
fdivl
sub
add
cmp
cmpsb
xor
jg
xchg
mov
ss
mov
dec
es
cmp
xor
mov
mov
fcomp
push
sbb
xor
fwait
lret
mov
mov
clc
xor
cmc
ds
pop
xor
xchg
lods
outsl
mov
mul
and
mov
cmpl
data16
nop
lods
icebp
mov
pusha
out
and
repnz
int3
jb
mov
les
sbb
sub
lcall
mov
adc
imul
add
cwtl
xchg
mov
mov
cmp
xchg
sbb
mov
stos
sub
add
sti
push
out
cs
inc
push
nop
test
dec
je
add
test
cmp
cld
stc
jae
or
lea
stc
and
ss
aaa
sub
pop
inc
insb
mov
xor
dec
pushf
aas
fcoml
pop
aaa
out
jbe
push
out
inc
dec
push
out
jb
jne
dec
jmp
enter
jmp
mulb
sar
scas
sbb
mov
xor
aam
mov
dec
les
pop
mov
imul
cmp
das
dec
ret
movsl
jae
mov
xor
dec
mov
insl
or
lods
dec
scas
push
inc
cmpsl
iret
add
mov
add
dec
cld
sbb
lcall
cmp
mov
mov
xchg
sub
pusha
test
shll
ss
repz
dec
cmp
xchg
loope
mov
popa
movsb
pushf
in
lods
dec
ds
out
out
and
push
adc
sbb
sbb
sub
test
cltd
icebp
and
mov
inc
in
xchg
sub
mov
test
jmp
xchg
pop
sbb
dec
shll
mov
stos
jmp
rcrb
shlb
add
xor
pop
jmp
fsubs
xor
clc
stc
mov
push
leave
pop
mov
mov
cmpsb
ja
push
push
inc
dec
int3
dec
or
lods
mov
dec
test
push
mov
xchg
or
bound
mov
in
stc
mov
out
xor
gs
repz
hlt
cwtl
jp
outsb
stos
mov
add
pop
mov
int3
jle
mov
or
lahf
mov
fistps
adc
jmp
sti
ljmp
test
popf
xor
addl
cmp
xor
mov
jb
stos
loopne
scas
call
movsb
out
repz
or
and
ret
jnp
lahf
jo
inc
add
fdivl
pop
sbb
hlt
rorl
iret
mov
testl
out
xchg
fisttpll
imul
fimuls
rcrb
mov
fistps
addr16
and
adc
pop
mov
arpl
push
dec
jge
cmp
sbb
test
or
mov
pop
test
movsb
push
sbb
lret
cli
jo
mov
scas
aaa
stos
cmp
outsl
fisubl
dec
push
mov
push
repnz
pop
cmpsb
mov
and
jmp
out
daa
iret
mov
mov
jl
or
loope
movsl
jo
movsl
add
enter
setg
push
push
xor
mov
inc
cltd
popf
fwait
push
jnp
pop
pop
jns
js
jns
pop
add
sahf
push
popa
into
loope
xchg
sub
mov
cmp
jnp
adc
or
subb
aas
sbb
sub
push
imul
int
sub
stos
pop
mov
pop
lcall
cmp
pop
adc
sub
sbb
sahf
xchg
mov
test
inc
add
jg
rep
jo
push
or
mov
dec
and
mov
mov
cmp
xchg
addr16
div
inc
xchg
lret
jnp
lcall
sbb
mov
xlat
cmc
add
push
outsb
outsl
out
jl
mov
repz
pop
cmp
fs
mov
adc
inc
jge
repz
jnp
or
fucom
scas
and
cli
cmpsb
mov
xchg
inc
jp
dec
adc
cmp
pop
das
lods
add
inc
push
mov
or
adc
adc
lret
or
cmp
and
sub
ljmp
stc
pushf
repz
add
dec
aad
pop
cmp
pusha
add
dec
shr
into
inc
push
jle
fnstcw
dec
push
xlat
inc
ss
dec
push
xor
mov
or
pop
cmc
fisttps
adc
aas
cli
jmp
dec
stc
pop
ficompl
sub
das
dec
aas
jnp
and
push
loope
pusha
jns
je
jmp
mulb
adc
mov
je
mov
lcall
aas
lea
push
mov
dec
lock
daa
adc
mov
push
iret
insb
rcrl
mov
rorl
sub
or
fstpt
cld
inc
pop
into
lret
add
and
xchg
fsubl
xlat
mov
mov
xchg
cmp
aam
sub
ret
pusha
aam
push
mov
xor
jb
and
add
lea
xor
popa
mov
mov
es
push
push
push
cwtl
std
push
imull
clc
jnp
xor
test
inc
mov
or
xchg
dec
xlat
mov
lock
xchg
mov
sbb
mov
inc
pop
cmc
cmp
stos
fcmovbe
adc
arpl
mov
dec
sbb
incl
jbe
inc
fimuls
pop
jge
xor
testb
xchg
fnsave
pop
adcl
enter
out
cltd
inc
out
out
or
sub
fwait
jmp
jae
addr16
xorl
sub
xlat
aad
std
add
jns
test
in
imul
xor
lret
jmp
mov
mov
jp
test
mov
rolb
and
pusha
cmp
fistpll
es
mov
or
fiadds
popf
pop
add
xor
push
nop
insl
out
stos
lods
dec
jmp
mov
xorl
pop
out
scas
dec
lret
sub
daa
push
adc
iret
andb
xchg
fwait
jae
or
mov
aas
stc
addl
and
outsl
ficoms
fimull
out
xor
rcrl
rcr
mov
sbb
dec
fld
shl
mov
mov
xor
clc
leave
fwait
jge
hlt
cmpsl
fadd
arpl
test
jge
mov
dec
aaa
loopne
into
or
ror
add
push
add
add
cmp
pushf
scas
push
std
cli
and
imul
cmpsb
xor
jp
enter
daa
into
pusha
inc
cmp
dec
fnstsw
repz
mov
adc
xchg
lahf
and
cwtl
outsl
lahf
out
xchg
push
add
cmpsl
out
push
fldcw
ret
inc
sub
clc
pop
pop
xchg
pop
xchg
xchg
inc
xchg
push
push
loope
xor
jp
gs
sub
adc
in
test
cmpb
sbb
dec
lret
jp
xor
pop
push
outsb
leave
or
sub
inc
xchg
pop
ss
lcall
add
sub
idivl
xor
iret
test
sub
fmull
jg
pop
sahf
mov
push
jb
sbb
push
and
loop
cmp
cmp
dec
or
imull
aad
shll
and
adc
into
fdivs
jae
int3
not
xor
mov
nop
loop
in
dec
stc
adc
fs
movsb
rclb
jne
xor
fisttpl
add
movsl
add
fsts
cmp
pop
fisttps
clc
ss
jo
sub
loopne
loopne
sub
pop
adc
inc
sbb
mov
clc
adc
lcall
sub
fidivrl
dec
das
xlat
xlat
das
daa
inc
sub
mov
sub
dec
in
filds
cs
pushf
add
in
push
cmp
dec
xor
out
and
daa
les
hlt
dec
repz
aas
and
dec
mov
lea
call
xor
pop
outsb
adc
bound
xchg
ja
jmp
adc
mov
adc
or
or
sbb
jb
push
push
je
pop
mov
imul
or
cwtl
sahf
lods
mov
mov
push
sub
cld
fldt
jno
icebp
add
lock
cmp
mov
fadd
xchg
shr
add
imull
insl
fprem
fimull
cwtl
and
mov
mov
inc
cld
jb
xchg
lret
jae
or
lea
inc
pop
imulb
shrb
in
mov
aam
dec
leave
ret
out
mov
push
jns
pop
fstpl
pop
pushf
xchg
pop
adc
ljmp
cld
lods
pop
fsts
cmp
xor
mov
jmp
push
shlb
pminsw
rolb
inc
mov
scas
or
sbb
outsl
adc
dec
ds
test
shlb
sbb
pop
stos
pop
mov
mov
push
push
in
add
push
cmp
lock
xor
fimull
aad
aaa
xor
mov
mov
fldenv
mov
sub
lods
adc
cmpsl
dec
inc
jge
sub
xchg
out
dec
dec
adc
jne
loopne
mov
aad
out
mov
out
adc
xchg
pushf
testl
or
clc
mov
repz
mov
or
mov
das
sbb
jle
jl
in
cmp
aad
xor
fstl
jo
stos
mov
xchg
xchg
std
xorl
pusha
popf
adcl
insb
mov
push
iret
add
and
and
mov
jnp
mov
scas
scas
jmp
push
adc
add
iret
loope
lret
cmp
mov
sbb
sub
shrb
push
cmc
daa
sbb
mov
jmp
imul
fld
push
leave
sahf
rclb
xor
adc
hlt
bnd
arpl
sub
jge
icebp
pop
sbb
or
or
cmpb
push
xchg
xor
mov
das
scas
cmc
push
mov
cmp
mov
cmpsb
mov
out
sbb
mov
test
cmp
iret
mov
jl
jb
dec
sub
insb
ds
mov
pushf
aas
and
push
fadds
test
je
movsb
js
inc
mov
loope
fisubrl
and
icebp
rcll
mov
jo
fisttpll
xchg
sub
and
cmp
push
outsb
out
cltd
adc
mov
pop
adc
sbb
cmp
xor
stc
jnp
jno
mov
sub
or
lcall
fdivl
xchg
sub
xchg
scas
sahf
xlat
insb
xchg
test
pop
xor
sarl
dec
mov
dec
aas
mov
pop
pop
and
lods
pushf
ss
adc
or
imull
lret
mov
enter
push
sti
sbb
inc
stos
into
mov
arpl
outsl
dec
lcall
leave
push
ret
adc
jmp
sbb
lods
cmpsb
pop
loopne
add
call
cli
or
xor
cmp
sub
addr16
leave
xchg
shlb
jmp
loopne
xchg
jp
insl
or
adc
mov
adc
ja
add
popa
movsl
xchg
jmp
sbb
mov
outsb
std
lret
sub
pop
push
mov
iret
cmc
mov
pop
push
or
pusha
mov
aad
sub
dec
xchg
aad
inc
xor
adc
sub
aam
jne
ret
cmpl
cmpsl
imul
pop
pop
jecxz
adc
leave
fwait
pushf
inc
xorl
sbb
mov
enter
orl
aas
mov
scas
arpl
add
je
and
scas
imulb
call
jne
pop
mov
mov
jge
mov
mov
dec
test
mov
mov
sahf
lods
lock
das
in
mov
mov
addr16
jb
aaa
in
fisubl
jp
imulb
pop
cmp
xchg
pop
cmpsl
int3
sub
mov
mov
idiv
popf
dec
popf
lret
loop
xchg
mov
xchg
gs
mov
adc
add
sub
mov
mov
cmp
sub
rolb
clc
js
out
xchg
sahf
xchg
push
inc
or
lods
mov
pop
mov
sbb
push
lods
rorl
dec
push
add
pop
adc
test
mov
mov
push
xchg
adc
movsl
ljmp
hlt
cmc
sbb
push
dec
pop
pop
dec
out
stos
mov
xor
add
test
incl
cmp
or
xor
xchg
aaa
mov
sbb
mov
insl
xchg
negl
cwtl
push
into
adc
dec
insl
adc
or
mov
cmp
mov
ja
jmp
out
mov
jo
jns
inc
arpl
jmp
jo
out
leave
ss
jle
jmp
rcr
rorb
fists
mov
leave
xchg
in
div
pusha
jo
loope
cld
ret
out
jmp
pop
push
pop
addl
push
int
sbb
mov
push
sbb
stos
xchg
pop
mov
iret
cmpsb
int3
insb
test
imulb
pop
pop
push
test
jbe
mov
xor
inc
and
jae
js
inc
shll
jb
pop
daa
stc
push
je
and
mov
xchg
loop
cmpsb
sbb
fsubrs
jno
xor
ficoms
ffree
stos
sbb
mov
fsubs
pusha
hlt
cmp
cmp
dec
inc
cmc
jge
and
sbb
xchg
scas
or
mov
int3
jp
jg
xor
push
add
out
lea
sub
movsb
lods
test
push
mov
in
mov
enter
daa
int3
cs
cmp
jl
jno
fistps
dec
lcall
movsl
pop
pop
test
lahf
and
pop
push
stos
push
clc
test
outsl
adc
inc
popf
jbe
pop
aam
sub
or
pop
mov
push
and
hlt
call
sub
sbb
outsb
dec
sarl
adc
lcall
andb
sbb
je
xchg
jecxz
icebp
imul
je
enter
insb
sub
lods
pop
xor
cmp
cwtl
dec
ret
fsubl
pop
sti
sub
xor
loopne
adc
addr16
mov
mov
mov
mov
bound
ss
and
fadd
adc
imull
lods
mov
pop
aas
testb
jns
sahf
pushf
xor
xor
xor
mulb
loop
mov
fs
adc
inc
aad
jl
dec
lods
lea
xlat
out
xor
xorb
mov
pop
iret
push
or
imul
loopne
adc
lret
adc
cmp
sahf
or
adc
test
sub
sbb
lds
out
xlat
lods
push
mov
dec
movsb
movsl
mov
cmp
xor
push
push
in
cs
lds
icebp
sub
lock
fstps
leave
les
ds
push
mov
call
xor
pop
push
jae
adc
bound
or
jno
ret
dec
out
inc
and
inc
mov
mov
jb
sub
dec
lds
out
jecxz
aad
inc
roll
std
dec
push
inc
cwtl
adc
xchg
mov
dec
push
mov
jnp
dec
jo
dec
fcmovne
cmp
mov
mov
cmp
and
icebp
adc
mov
roll
sbb
dec
lcall
mov
pusha
pop
mov
lret
push
pop
mov
lahf
xchg
andb
inc
es
xor
xchg
adc
push
sub
aam
orl
incl
add
mov
xor
mov
sbb
jmp
fnstcw
jnp
mov
insl
adc
push
mov
push
rcr
add
cltd
int
xchg
test
push
outsl
mov
mov
dec
or
jb
popa
or
xchg
sbb
sbb
rol
pop
enter
inc
stos
cmpsl
push
lcall
dec
jne
add
mov
fcomps
test
mov
mov
pop
sarb
mov
mov
dec
dec
pusha
xor
inc
stos
sub
or
pushf
dec
fwait
js
inc
dec
adc
jne
orb
lret
arpl
mov
das
jns
pop
mov
je
jno
cmp
outsb
out
cmp
or
out
sub
jp
add
mov
or
or
in
pop
and
fistps
stc
adcl
daa
bound
push
nop
cmp
mov
dec
mov
stos
push
xchg
shll
out
or
ljmp
or
lahf
or
adc
hlt
iret
lahf
push
inc
ret
test
jnp
push
inc
cs
testl
xchg
push
repz
mov
xchg
cmp
jl
inc
and
ficoms
adc
gs
movsl
outsl
mov
sub
leave
add
arpl
mov
pop
jge
cmp
aaa
sbb
mov
int3
gs
pop
xlat
mov
xor
inc
imul
or
mov
movsb
aaa
in
push
push
cs
fwait
cmpsb
mov
test
enter
daa
lret
pop
sarb
inc
jno
pusha
jb
pop
sub
jmp
xor
mov
lahf
inc
das
notl
dec
lcall
push
flds
das
adc
pusha
mov
pop
sti
insl
ja
push
mov
hlt
push
mov
loope
sbb
cmp
cwtl
outsb
lods
fsubrs
shlb
mov
xorb
sbb
mov
xor
and
push
ja
pop
int
cmp
lahf
xchg
cmp
mov
xor
hlt
xor
push
out
jb
fmul
adc
clc
sahf
sbb
adc
sub
xor
mov
pop
pushf
mov
jle
cmp
ss
xor
push
jb
imul
out
lret
leave
shl
push
sbb
inc
push
cmc
and
xor
adc
loop
test
stc
aaa
pushl
fs
stos
adc
mov
lods
je
in
mov
mov
out
inc
outsb
cli
jb
inc
xor
push
jno
mov
or
js
flds
gs
sub
ficompl
jne
adc
push
xchg
adc
das
cltd
add
aad
xchg
jno
add
cmp
in
mov
in
xor
jp
jno
sti
in
movsl
sahf
mov
mov
enter
xchg
nop
int3
sbbb
pop
cli
fsts
loope
repz
out
push
jg
lea
lods
fsubrp
popf
incb
mov
xchg
mov
adc
add
jmp
adc
pop
data16
addr16
test
adc
jb
fisubrl
dec
cmp
int
cs
jecxz
mull
mov
inc
std
icebp
fildl
iret
add
cld
xchg
sti
mov
test
dec
pop
sti
popa
movsl
add
repz
lock
sbb
data16
test
and
lea
aad
or
andb
insl
mov
mov
cmpsl
lret
mov
aaa
out
clc
cld
repz
aaa
lret
ror
mov
mov
lcall
out
lock
outsl
aam
sahf
fld
pushf
out
mov
sti
fisttpll
clc
out
mov
xchg
sbb
inc
ljmp
push
pusha
ja
mov
ficoms
jle
arpl
add
add
jg
add
fildl
xlat
mov
dec
jae
shrb
bnd
sbb
inc
sub
sbb
sbb
out
stos
enter
mov
mov
jle
or
inc
popa
xor
dec
nop
mov
mov
xor
pop
pop
pop
jge
dec
outsl
fs
push
pop
out
inc
inc
pop
movsl
or
push
fwait
cmpsl
lahf
add
or
sub
out
jp
stos
bound
xchg
jns
nop
xchg
in
jge
xchg
mov
xchg
out
sbb
sub
je
andl
ljmp
sahf
xchg
dec
mov
jle
aas
jns
inc
pushf
test
pop
into
fistpll
xor
jl
gs
repnz
push
push
dec
pop
popf
clc
mov
jecxz
mov
insb
stos
jns
add
std
outsb
pop
insb
pop
sub
cmpsl
scas
xlat
add
push
out
adc
cmp
sub
jecxz
sbb
inc
cmp
jae
or
inc
fldenv
pop
push
jb
inc
ficompl
pushf
cmp
in
aas
push
imul
fidivs
shrl
shl
call
bnd
or
arpl
hlt
rorl
arpl
or
rcl
pop
jge
xor
sub
or
xchg
dec
xchg
pop
xchg
movsl
jle
mov
popf
jo
push
scas
xchg
jo
and
mov
movsb
ret
push
jge
inc
cmpsb
inc
scas
mov
enter
daa
lret
cmp
mov
jl
ds
dec
js
in
push
and
and
scas
and
bound
movsb
push
push
mov
rclb
inc
fs
and
pop
and
rclb
cmp
daa
push
iret
inc
loope
pop
xchg
cmpb
and
adc
rcrb
adc
push
mov
ss
cmp
mov
or
push
jp
mov
cmpsb
clc
ret
sub
xlat
pop
pop
xor
adc
cmpsl
jg
push
inc
mov
pop
sub
mov
adc
push
xor
cmc
inc
shlb
cmpsb
insb
ss
adc
cmp
cmp
imull
push
mov
mov
roll
ja
into
fs
cmc
call
add
loop
cli
out
leave
mov
lds
adc
cltd
push
lods
pop
cli
leave
mov
pop
stc
out
aad
cli
movsl
loope
xor
ret
add
xchg
cmpsl
or
mov
fs
loopne
push
insb
pop
lret
adc
sbb
inc
push
adc
or
add
add
sbb
cmp
sub
int
mov
fsubrp
adc
in
sti
insb
cmp
mov
jnp
cmpsl
xchg
sahf
dec
scas
incb
scas
mov
int
popf
les
fdivr
repz
dec
pop
stos
iret
lea
daa
loopne
xor
jg
je
imul
inc
sahf
pop
jmp
in
sbb
xor
inc
inc
out
fnstsw
xchg
daa
lea
mov
push
je
jbe
jecxz
pop
ja
hlt
cmp
in
mov
mov
movsl
adcl
sub
fldt
adc
mov
adc
das
and
mov
cmp
cli
and
iret
sub
and
pop
add
mov
cmpsl
leave
mul
mov
push
movsl
es
push
pop
sub
das
inc
insl
mov
test
pop
cmp
jb
pop
sarb
push
aam
or
ret
sub
rclb
fnsave
adc
xchg
ljmp
cltd
lods
lret
push
mov
inc
mov
xchg
sti
insb
adc
pcmpgtd
inc
add
js
test
fwait
call
xchg
push
dec
fimull
push
nop
or
sub
xchg
pop
dec
and
push
xchg
cmp
add
test
lcall
imul
mov
cmp
and
mov
in
sbb
sbb
mov
inc
fnstenv
jmp
andb
lahf
mov
mov
inc
enter
aaa
fcoml
jge
mov
out
jae
sub
outsl
mov
sub
push
jp
test
mov
jmp
xor
in
test
fistps
cmp
xchg
push
mov
jge
push
push
sarb
popf
pop
test
pop
jmp
in
sahf
inc
and
cs
test
xchg
sub
mov
adc
test
pop
jmp
adc
jae
ss
inc
fmull
push
icebp
mov
pop
xchg
out
das
sbb
xor
imul
ficomps
xor
jae
sbb
cld
sti
aas
mov
roll
es
out
mov
hlt
push
cmp
arpl
mov
jbe
inc
push
jge
adc
sbb
pop
xor
fwait
inc
or
addr16
and
int3
cmp
mov
ret
push
outsl
mov
call
scas
jno
lahf
and
and
cmp
outsl
mov
cmpsb
push
inc
add
cmp
sub
mov
ja,pt
lock
sub
and
cmpsb
push
lahf
subl
iret
test
shl
sti
inc
repz
dec
rcrb
jnp
xchg
push
lcall
add
aaa
cmp
and
jae
lds
sub
scas
sbbb
pop
add
add
push
jge
in
int
lcall
mov
int
pop
jle
push
popf
sub
and
cmpsl
sahf
arpl
test
mov
jg
das
mov
inc
cmp
mov
jo
and
cmpsb
sarl
imul
jl
push
lret
mov
shll
mov
dec
mov
out
mov
test
scas
data16
and
loop
cmpb
push
pop
imul
mov
add
lods
inc
clc
and
test
dec
cli
fcom
sub
cmp
mov
or
je
pop
cltd
std
gs
mov
pop
jmp
das
jns
adc
adc
aaa
mov
aaa
pop
jno
test
sub
jbe
and
push
sub
cmpsb
mov
mov
jnp
test
sbb
cs
test
aad
jne
nop
cmpb
inc
cmpb
les
loop
mov
es
pop
dec
scas
lea
lcall
in
pop
daa
pop
repnz
stc
jg
fmuls
inc
mov
aaa
inc
or
aas
xor
aam
dec
sub
mov
divb
in
int3
std
aas
cltd
xchg
cwtl
inc
leave
pop
mov
rolb
stos
mov
rcr
pop
lret
pusha
movsl
cmp
movsl
sbb
das
popa
dec
cmp
repz
dec
and
fs
xchg
rorb
pop
jmp
inc
mov
mov
dec
mov
lret
sahf
jl
mov
mov
and
xchg
mov
ret
loope
popa
js
aam
iret
mov
mov
inc
data16
clc
fs
sbb
loop
mov
lods
ss
repnz
movsb
jno
xchg
inc
scas
add
sbb
mov
movsl
cmp
cmpsb
test
push
mov
push
stos
xchg
rorl
loopne
test
xor
xchg
sti
je
xor
lods
ror
insl
fcomps
jge
je
pop
push
xor
jns
add
or
cld
push
dec
xor
xchg
jl
sub
add
sub
enter
sbbb
mov
lret
dec
cmp
testl
cmpb
add
and
dec
mov
dec
and
cmp
cli
bound
stos
jns
insl
fsubp
adc
ljmp
sub
or
xchg
sub
lds
aam
mov
dec
outsl
mov
pop
sarl
push
rorb
fistpll
iret
xchg
and
insl
jmp
mov
cmpl
push
fxch
mov
xchg
inc
push
push
or
iret
and
lock
xor
lret
jnp
sbb
scas
popf
fld
push
je
lret
adc
sar
iret
mov
je
pop
and
push
inc
dec
or
inc
mov
push
pop
imul
fcmovnu
xor
xchg
ds
sbb
testl
std
and
sub
pop
lds
mov
and
leave
gs
fdivp
imul
jbe
xor
jge
xlat
adc
mov
add
fmulp
sbb
push
push
movsl
sysexit
in
xor
scas
push
inc
jge
je
adc
dec
inc
add
lret
push
cmpsb
inc
mov
enter
daa
enter
fbstp
jno
mov
das
dec
push
add
movsl
xor
mov
push
divl
ret
push
fwait
rorb
test
aas
pop
js
cmp
es
sbb
loope
inc
push
insb
aaa
pushf
cmp
and
mov
mov
hlt
cmpsl
xchg
subb
xchg
add
dec
inc
xor
inc
inc
int
pop
lret
sub
sbb
lcall
xor
int3
or
sub
sahf
push
loopne
test
jle
cmpb
jg
xor
mov
js
mov
pop
fwait
mov
enter
mov
add
fdivs
mov
sarl
dec
sbb
in
cmc
jbe
xchg
or
mov
loop
cmp
stc
pop
dec
dec
jmp
data16
and
sub
popa
mov
outsl
or
cmpsl
test
cli
or
xchg
cmp
lods
push
or
xor
js
test
mov
adc
ret
imul
inc
add
jg
xchg
mov
orb
mov
sub
sub
push
lods
mov
out
sub
cs
xchg
nop
pop
repnz
dec
insb
jmp
inc
xchg
cli
test
cmp
shl
cmpb
lea
push
call
das
adc
pop
fidivrl
es
xchg
sub
jmp
lock
in
jbe
ds
jnp
and
lods
inc
jb
and
mov
sti
mov
idivb
or
out
mov
mov
fwait
inc
mov
mov
sbb
fisttpl
mov
mov
das
inc
mov
and
push
dec
je
ret
es
aam
inc
mov
mov
js
psllw
lret
or
sub
and
lock
push
pop
mov
push
shlb
xchg
sub
cltd
aam
out
ret
dec
mov
or
mov
lahf
jmp
mov
popa
pop
jne
lods
mov
arpl
xchg
mov
push
hlt
ret
mov
and
lea
mov
mov
test
das
mov
cli
stos
xchg
push
popa
test
scas
xchg
rcrb
out
push
rcrl
adc
stos
arpl
dec
push
fadds
incl
or
xor
xor
fisttpll
lahf
jmp
xor
rcrl
and
mov
shlb
dec
sub
cmp
leave
push
or
int3
sbb
pushf
lahf
mov
mov
jno
out
pop
test
bound
or
in
mov
jmp
leave
jle
sub
xchg
daa
fs
jp
fmuls
mov
leave
cs
jle
xchg
adc
pop
adcl
ja
pop
fists
pop
mov
xchg
push
sbb
push
pushf
cmp
insl
hlt
sarb
dec
dec
mov
and
adc
pushf
push
add
jle
scas
add
inc
adc
push
and
sbb
ret
dec
pop
push
dec
jnp
pop
push
jmp
inc
loop
mov
and
stc
push
out
test
xor
sbbl
pop
fisubs
pop
mov
mov
ja
mov
fmull
hlt
mov
dec
arpl
insl
and
jge
jge
sbb
push
aaa
sbb
mov
dec
lret
fiaddl
or
fcomp
pop
and
cwtl
xor
scas
mov
das
mov
and
das
scas
cmp
aad
movsb
arpl
push
push
fwait
cmpsb
lret
in
ss
jae
addl
daa
aaa
pop
cmp
divl
lret
cmp
mov
ds
daa
inc
and
shl
lahf
mov
inc
test
adc
inc
adc
inc
insb
sub
pop
xchg
mov
pop
pop
stc
into
shrb
dec
add
addr16
aas
sub
push
push
cmp
test
adc
loope
lock
push
aaa
faddl
inc
sub
add
call
mov
xorl
fisttpl
pop
pop
scas
push
test
dec
jo
fdivl
xor
pop
fs
test
adc
adc
cmp
ljmp
addr16
and
add
ss
fwait
loope
insb
mov
adc
movsl
xchg
xchg
rcll
mov
loopne
sbb
into
or
and
xor
push
outsl
xchg
pop
loop
daa
and
adc
push
fs
adc
sahf
dec
dec
or
insl
lods
adc
and
cmpsb
mov
inc
xor
jl
xor
dec
repz
gs
jmp
pop
daa
jle
adc
sub
imul
push
add
bound
add
scas
xlat
call
ds
mov
push
loopne
sti
jns
cmc
cs
ss
repz
nop
cmp
dec
lret
sti
sahf
inc
cmpsb
outsb
inc
fnstenv
inc
les
test
dec
xchg
std
arpl
adc
aad
ss
scas
mov
lds
inc
and
pushf
inc
sub
pop
pop
repnz
addb
jle
jae
adc
lahf
lahf
dec
sbb
or
arpl
mov
push
idivb
out
cwtl
mov
stc
xchg
mov
iret
sbb
cmpsl
loope
mov
sti
mov
xchg
fdivs
pop
addr16
pop
sub
popa
sbb
mov
rcll
repnz
es
pop
insl
sub
dec
xorl
mov
xchg
mov
into
lret
jl
mov
mov
enter
cwtl
rcl
aam
push
leave
ret
fmuls
push
into
pop
cmpsb
xor
xchg
sbb
insl
ljmp
lods
or
xchg
mov
push
cli
xchg
rcrb
push
iret
xchg
xchg
jae
mov
cltd
loopne
push
test
jmp
jecxz
cmp
test
daa
dec
btr
test
xor
xchg
xchg
fistps
lcall
pop
dec
iret
add
jnp
stos
add
daa
dec
cmp
xor
ret
lea
xor
push
and
ja
push
fwait
dec
pop
pop
aas
inc
sahf
mov
fwait
arpl
jne
insb
ret
mov
cmpsb
repz
div
loopne
xchg
xchg
add
fcmovb
in
sar
xchg
out
xor
sub
pusha
bound
jp
pop
mov
jg
mov
cmp
jle
pushf
imul
cwtl
mov
sahf
adc
xchg
enter
insb
ljmp
pushf
push
pop
push
xor
or
mov
inc
jb
and
or
dec
jnp
mov
jnp
add
adc
test
das
pop
cmp
pop
push
gs
cmp
push
push
inc
in
push
or
inc
and
inc
outsb
addr16
sbb
xchg
in
dec
bound
push
imul
sub
inc
mov
lds
add
dec
xchg
popa
mov
lret
leave
push
mov
cli
packsswb
inc
push
jbe
pop
mov
sbb
inc
pop
aaa
fcomps
int
movsb
fsubs
cld
push
pop
dec
xchg
sbb
xchg
jo
shrl
lcall
movsb
out
sub
push
mov
cmp
in
sbb
dec
ret
clc
into
cmp
xor
jg
jnp
xor
xorl
sti
movsl
inc
adc
sub
popf
orl
xor
cmp
das
test
push
js
int
pop
cmp
mov
jle
inc
sub
ds
cmp
adc
mov
lret
aam
inc
sbb
add
fisubrl
xor
mov
push
xchg
or
inc
add
push
lods
jbe
lock
mov
jnp
sub
clc
sahf
dec
in
push
xorb
mov
xchg
or
mov
insl
and
stos
mov
cmp
daa
add
mull
adc
shr
jge
xlat
call
mov
loopne
rorb
loop
dec
add
lret
fs
pop
xchg
adc
jle
data16
popa
mov
daa
xchg
movsl
inc
cmp
jno
stc
xor
mov
pusha
adc
or
movsl
decb
sub
fistpll
adc
pop
push
adc
mov
out
inc
mov
and
daa
mov
in
sub
adc
mov
mov
shlb
and
aad
leave
adcb
adc
inc
mov
and
les
movsb
repz
scas
fcmovb
data16
lea
sbb
sub
xchg
jo
cwtl
test
pushf
in
add
jmp
add
pop
xchg
jae
inc
dec
xchg
mov
aas
adc
jb
push
loope
popl
icebp
je
iret
push
testb
pop
std
xor
push
cwtl
jbe
dec
mov
fsubl
xor
or
dec
repnz
out
decb
ss
mov
xlat
das
sahf
dec
mov
sbb
adc
pusha
mov
prefetch
and
dec
jl
jmp
mov
push
ljmp
mov
add
xchg
out
and
imul
push
adc
ret
addr16
mov
adc
fst
bound
xchg
push
cmp
ljmp
mov
adc
pop
into
inc
push
stos
jge
psrad
repnz
pop
xor
mov
sqrtps
jbe
das
test
mov
insl
sub
int
inc
pop
clc
pop
or
push
or
push
mov
fldln2
popf
xor
aaa
sti
or
roll
icebp
negl
mov
add
pop
dec
dec
adc
pop
or
fcoml
xchg
lods
loopne
bound
jne
cwtl
mov
out
enter
in
sub
jns
xchg
in
ss
adc
stos
out
pop
cld
sub
pop
rcrb
addr16
cli
ret
iret
add
push
jbe
lcall
pusha
lods
and
xchg
stos
xchg
fwait
repz
jmp
jmp
sub
push
and
popf
mov
mov
push
xor
and
aas
insb
jb
gs
lea
push
dec
pop
stos
adc
fwait
lcall
push
push
jae
xchg
scas
inc
call
jge
push
in
pop
mov
cltd
cmp
xchg
inc
clc
sbb
inc
les
and
fsubp
insl
sbb
popl
adc
repnz
insb
pop
hlt
dec
cmp
and
sbb
jbe
aaa
xchg
mov
jl
cmp
xchg
int3
out
mov
push
sti
gs
xor
fs
mov
cmp
movsb
jns
cmpsb
push
or
mov
enter
daa
lds
pushl
pop
and
cwtl
dec
mov
stos
inc
movsl
dec
andl
dec
dec
lahf
std
dec
aam
jo
cmp
cld
mov
das
add
repnz
clc
pop
in
imul
adc
ja
xor
jne
mov
sub
decl
cmp
adc
xchg
js
adc
and
rcrl
lcall
lcall
int
pop
pop
sub
inc
fstps
stc
inc
sahf
fmul
jno
sub
push
cmp
out
popa
xchg
test
adc
jg
push
lss
push
mov
and
xorb
ja
cmp
loop
adc
data16
lret
inc
roll
sbb
sbb
lret
fsqrt
xor
fsubrl
inc
jmp
call
fs
sbb
cmp
push
adc
lods
decl
movsb
imul
movsb
mov
xor
jmp
fistpll
mov
gs
stos
loopne
leave
xchg
pop
sbb
adc
jle
adc
mov
xchg
add
dec
xorl
bound
xlat
data16
aad
jb
pop
mov
daa
jns
sti
xlat
or
aad
add
dec
mov
lret
inc
int3
repnz
fchs
les
in
in
or
cwtl
lea
popf
mov
lods
cmpsl
jl
repz
adc
or
xchg
mov
pop
cmp
lcall
xchg
cmp
cmp
push
mov
js
lods
arpl
std
fcmovnb
fwait
cwtl
xor
mov
inc
lods
mov
addr16
addl
je
fistl
push
mov
faddl
adc
das
fstl
push
mov
iret
les
mov
mov
cmp
cmpsb
leave
dec
ja
sbb
icebp
xor
icebp
inc
push
dec
cld
cmc
push
lret
lret
pop
push
jbe
xchg
pusha
xchg
and
rcll
or
ret
cmp
and
push
push
inc
test
clc
pushl
clc
push
jle
xchg
xchg
rol
ljmp
add
lea
xor
cmc
push
test
cmovno
push
cltd
dec
frstor
pop
add
mov
adc
mov
leave
dec
fstl
mov
add
pop
mov
cmpsl
pushf
push
shl
add
pop
loope
js
mov
or
mov
dec
xor
xor
inc
mov
sarb
loope
dec
add
jns
or
mov
jb
inc
lds
mov
dec
jl
mov
fbld
cmp
jns
fadd
in
icebp
cmp
push
cmc
loop
push
aam
or
pop
addr16
xchg
sbb
mov
push
pmaxub
xorb
out
cli
pusha
dec
mov
fcomip
jecxz
xchg
outsb
push
xor
pop
sub
xchg
mov
mov
in
popf
loop
aam
jg
sub
insb
subb
daa
daa
insb
fldl
sahf
scas
sub
lret
les
pop
pop
jge
cmp
adc
cld
insl
push
inc
jnp
out
push
pop
mov
jmp
lcall
cmp
fimull
xchg
lcall
imul
fimuls
outsl
sub
xorl
bnd
ret
leave
inc
hlt
push
hlt
xchg
lret
pop
arpl
imul
leave
adc
ds
or
sbb
add
pop
mov
pop
lods
mov
fidivrs
mov
adc
fwait
cmp
push
lcall
fadd
cmpsb
push
mov
in
jmp
movsb
enter
daa
les
jno
stos
sub
lahf
jl
xor
adc
ds
movsl
dec
sbb
in
lahf
sbb
xchg
push
inc
popf
jge
lret
mov
mov
add
pop
or
fidivrl
lods
cld
pop
mov
lret
pop
mov
sub
xchg
out
cmp
or
scas
adcb
jge
jo
dec
cmp
push
sbb
dec
mov
xor
mov
mov
call
pop
sub
xlat
lcall
loopne
js
lcall
lret
sbb
pop
sub
sarb
arpl
mov
insl
hlt
and
jbe
dec
xchg
popf
inc
sub
and
sub
rcll
add
xchg
xchg
lret
jbe
xor
gs
add
or
cmp
js
pop
into
pop
adc
into
adc
shrl
repnz
adc
mov
cmp
enter
aad
dec
adc
gs
adc
out
inc
adc
out
push
inc
mov
add
mov
push
mov
jbe
cmp
popf
jecxz
xlat
movsl
mov
mov
xchg
add
xchg
ljmp
fisttpl
sub
dec
call
add
fsts
cs
les
mov
insb
aaa
sbb
call
sub
jns
cmpsb
inc
cmp
inc
mov
pushf
inc
xor
subl
pop
fcmovne
or
inc
xchg
in
aas
push
out
jb
push
sti
dec
jge
mov
jecxz
arpl
testb
and
xor
mov
outsl
dec
enter
inc
or
mov
out
lock
jo
das
mov
sbb
and
cmp
sar
or
es
adc
dec
jb
out
ret
jl
mov
sbb
inc
cld
and
sbb
mov
sar
and
pop
cmp
shrb
jle
lods
mov
push
pop
in
fstpl
xorl
aad
inc
ljmp
lods
dec
sbb
xchg
inc
je
movsl
cs
pusha
xchg
push
dec
rolb
pop
bound
arpl
mov
xor
jo
inc
sbb
pop
xchg
sbbl
mov
dec
icebp
adc
ficompl
js
push
pop
adc
rorl
jnp
mov
outsb
and
mov
ja
inc
mov
jnp
add
dec
clc
subb
and
dec
sub
xorb
cmpsb
mov
mov
shlb
dec
jns
int
in
lcall
mov
xchg
out
add
sub
push
outsb
pop
addr16
pop
jp
in
shll
cli
insb
mov
arpl
pusha
jecxz
jb
adc
pusha
xchg
inc
pop
push
jmp
jg
test
test
add
or
rcll
sub
stos
sahf
cltd
and
sahf
cltd
das
insb
dec
clc
mov
fisubrs
push
xlat
xchg
fists
aaa
out
mov
xchg
aam
ret
pop
pop
xor
xor
lahf
jae
fstpl
out
je
or
mov
rolb
icebp
sbb
sbb
aas
sbb
fisubrs
out
popf
cmp
rcrb
pop
bnd
ss
mov
mov
arpl
xor
mov
jge
add
aaa
adc
inc
int
imul
fistps
mov
jae
enter
sbb
into
scas
stos
xchg
push
and
cmp
jae
movsb
fsubrs
cmpsb
dec
pop
cmpsb
mov
orl
ret
push
cmpb
sub
arpl
jmp
ds
repnz
movsl
push
aaa
data16
js
push
push
jns
test
xchg
pop
lods
inc
dec
adc
js
pop
xor
push
js
cld
xor
cmc
sub
push
and
loope
add
cmp
ja
outsb
lds
adc
dec
xchg
sub
or
fwait
inc
add
test
xor
imul
ja
adc
pop
stos
jl
lcall
push
fsubl
fldt
pop
call
inc
test
in
jg
adcl
mov
push
jbe
sbb
repnz
add
in
push
jno
shrl
mov
into
cltd
scas
shl
pop
pop
cmp
sarl
and
xchg
in
stc
out
inc
pop
fs
xchg
adc
mov
popw
cwtl
jg
lods
lahf
stos
mov
xchg
pop
out
inc
insl
cli
or
xor
je
cmp
loope
or
outsl
mov
aad
loopne
push
push
pop
mov
cwtl
sahf
imul
leave
add
leave
mov
popf
mull
xlat
in
inc
sub
xchg
mov
std
popa
xchg
sti
xor
sub
cli
mov
cmp
cmpsl
inc
repnz
jnp
dec
sub
les
cltd
ja
outsl
mov
call
stos
mov
mov
popf
test
pushf
out
adcl
jb
adc
in
inc
loope
incl
pushf
ret
aas
adc
movsb
xor
adc
xchg
jecxz
cmpsl
dec
test
pop
std
sub
pop
cwtl
cmpsl
jmp
mov
pushf
push
mov
shll
xor
decl
jae
inc
mov
push
ss
lock
das
fwait
adc
mov
cmp
leave
dec
rorl
outsb
es
movsb
shrl
pusha
test
insl
pop
clc
cmpsl
ret
mov
out
xchg
xor
dec
sbb
mov
fcmove
sbb
dec
in
sarb
cli
sub
enter
inc
mov
push
jmp
inc
out
clc
sbb
ljmp
mov
mov
rcrb
xchg
in
jo
push
cmp
mov
pop
cwtl
dec
cltd
mov
fisttps
pop
cs
xchg
or
test
push
push
sbb
jmp
pop
stc
stc
je
push
xor
pop
add
xchg
mov
sahf
xor
mov
or
adcl
mov
imul
dec
mov
sbbb
inc
jge
dec
jmp
mov
clc
cmpsl
or
stos
cmp
or
jne
das
mov
out
jb
jbe
loope
cmpb
pop
in
rclb
mov
sub
dec
lcall
and
and
mov
hlt
int
jle
cmp
pusha
jle
out
fbstp
xchg
bound
dec
decb
xchg
dec
pusha
scas
sbb
dec
push
imul
popf
xor
mov
push
inc
and
inc
dec
jnp
loop
scas
out
aaa
xor
pusha
adc
xchg
xchg
iret
div
lcall
fs
inc
xchg
stos
das
jae
out
inc
icebp
xchg
or
xor
fidivl
stc
insb
sbb
std
sub
and
or
and
sarb
pop
repnz
mov
js
sub
out
arpl
mov
jmp
dec
jge
sbb
sbb
inc
dec
or
sub
add
imul
or
enter
mov
jne
loope
mov
enter
sarb
cltd
xor
jl
cmc
cld
cmpsb
pop
add
in
mov
adc
daa
ret
cmp
loop
jno
cmp
jl
iret
icebp
dec
lock
ds
add
movsl
pop
mov
and
sbbb
mov
test
pop
inc
cld
inc
faddl
cld
pop
pop
out
jbe
ficomps
xor
jo
into
loope
sarb
cltd
outsb
sub
test
sub
outsb
cs
lods
andb
jo
pop
xchg
das
add
ljmp
xchg
adc
std
sub
ret
sub
lcall
mov
into
dec
or
push
repz
test
loop
andb
es
popf
cwtl
mov
xor
mov
mov
and
outsb
ss
push
popf
cmp
adc
dec
mull
adc
roll
mov
add
jl
insb
cmc
and
inc
xor
fwait
outsl
loop
std
loop
xlat
mov
fs
hlt
xor
aad
lods
xchg
fsts
out
cmc
pop
cli
cmp
inc
mov
iret
jg
sub
adc
pop
gs
or
dec
loopnew
ret
adc
xor
imul
add
add
xchg
dec
mov
sbb
adc
xlat
and
stos
sub
insb
xchg
mov
push
xchg
mov
push
dec
nop
jg
mov
add
enter
pusha
aas
repz
vshufpd
fsubs
push
sub
mov
adc
jbe
pushf
cltd
stos
xor
popa
pop
mov
inc
push
addr16
aas
mov
dec
imul
fldcw
or
or
std
sarb
aas
mov
mov
lret
in
dec
sahf
pop
jns
mov
xchg
mov
and
mov
mov
pusha
stos
push
rcrl
sti
insl
lods
xchg
cwtl
dec
push
push
clc
mov
imul
cmpsl
ja
mov
loope
push
xchg
inc
sahf
pop
push
pushf
rclb
lock
mov
jl
mov
cmp
insl
das
mov
xchg
push
scas
mov
pop
fisubl
popa
out
enter
xor
out
pop
jne
xchg
xor
push
push
loope
divps
ds
repz
mov
mov
push
xchg
fdivr
test
int3
bound
sbb
shrl
fnstenv
stos
std
and
stos
jnp
add
scas
aad
call
inc
xor
mov
xor
mov
xor
lcall
ja
xchg
dec
ficomps
sbb
or
jmp
fwait
dec
sbb
jle
jne
sbb
mov
bound
jns
mov
aad
push
das
inc
out
jg
sub
inc
pop
icebp
and
jp
scas
or
and
decb
add
pusha
sbb
xchg
fists
imul
adc
sbb
push
cs
push
popf
push
movsl
inc
mov
ret
sub
stos
test
icebp
and
jmp
addr16
scas
push
enter
pop
data16
push
ds
push
sbb
nop
pop
mov
jmp
jae
xor
inc
hlt
or
or
scas
movsl
inc
jmp
lret
cmpsb
xchg
lahf
std
inc
sbb
mov
imul
cli
fidivs
xchg
lds
je
mov
imul
or
popa
insl
in
cs
fidivrl
sbb
sbb
or
and
sti
mov
push
xchg
mov
pop
cmp
push
xchg
xor
rclb
dec
scas
imul
mov
push
inc
repz
mov
cmp
daa
sarl
inc
dec
xorl
pop
and
ds
fs
outsb
and
xor
lahf
jns
push
mov
lea
push
inc
imul
pop
subl
pop
push
inc
loope
in
sub
dec
cmp
outsb
mov
adc
add
xorb
pop
sbb
orb
loop
push
xchg
clc
jae
inc
mov
sub
inc
pop
test
ret
xchg
push
push
movsb
pop
fdivrl
sub
cmc
shrl
or
cmp
pop
mov
fsubl
and
ljmp
ljmp
out
mov
fmul
add
jg
push
push
mov
outsb
jl
sbb
xor
cmc
out
je
xchg
mov
loop
cld
movsl
stc
pop
mov
pusha
adc
inc
sbb
lods
jp
jl
les
sti
out
sub
mov
cmp
nop
leave
or
add
xchg
in
loopne
ret
mov
adc
add
push
adc
jne
add
pop
int
jmp
push
cmp
call
sub
push
mov
in
rcrl
aad
add
scas
aad
iret
mov
dec
add
imul
or
repz
clc
lea
loope
call
test
out
mov
iret
pushf
inc
cmpsl
sub
sbb
pop
repz
out
adc
inc
loop
dec
aas
sub
fucomip
dec
loop
out
je
and
jecxz
sti
jmp
std
ja
xchg
cwtl
sbb
push
decl
bound
cmc
dec
mov
int3
fcmovnbe
sti
orb
pop
mov
jge
in
das
pop
and
mov
jmp
push
shr
xchg
sahf
dec
mov
dec
arpl
icebp
mov
popf
data16
cld
mov
rolb
and
ja
sub
and
sub
pop
sti
aam
mov
ret
xor
push
pusha
xor
clc
cmp
dec
xchg
xchg
push
ja
jp
pushf
popa
std
adc
lods
mov
lock
mov
shrl
sub
add
mov
test
daa
xchg
mov
xchg
adc
int3
push
cmp
cmpb
dec
xchg
in
sar
push
dec
cmp
add
stc
push
hlt
in
pushf
xor
cmp
xor
mov
mov
inc
lea
mov
lods
rcr
ja
sub
dec
sar
mov
or
in
cs
jge
mov
jne
push
mov
xor
and
jns
adcl
insl
and
xchg
lahf
fcomps
pop
jmp
sub
inc
scas
pop
and
jp
sahf
movsb
mov
jp
mov
rcrb
in
dec
inc
pusha
mov
adc
jo
xchg
mov
pusha
ljmp
mov
popf
jle
lret
ds
add
stos
notl
and
outsl
insb
mov
jnp
cltd
aam
mov
xor
pop
pusha
adc
and
mov
lahf
ret
fstpl
ljmp
xchg
addr16
testl
imulb
pop
js
push
jno
xchg
mulb
outsb
imul
test
lds
std
loopne
out
mov
mov
jp
hlt
rcrl
jge
cld
jle
jnp
xorb
xor
add
or
int3
jle
icebp
pop
imul
xor
jne
sub
les
or
cli
cmp
movsl
pop
movsb
xor
push
xchg
sub
xchg
in
xchg
jl
pusha
bnd
rclb
ja
out
mov
mov
aaa
mov
sub
movsl
imul
and
insb
lahf
cwtl
aad
push
popl
xchg
inc
rcll
gs
cli
sub
shrl
pop
test
cmpsl
js
pop
insl
pop
mov
imull
gs
or
nop
cmp
negl
adc
ficomps
in
xchg
or
imul
xor
dec
push
sub
inc
or
sub
cmp
push
rcr
and
jge
in
jno
push
cmc
or
push
mov
jg
loopne
mov
mov
stc
mov
push
outsb
and
out
cmp
mov
out
mull
out
lret
fcmovb
jae
xchg
mov
inc
sbb
xor
cmc
scas
jne
xor
test
outsl
mov
push
mov
adc
lea
imul
mov
stc
int3
mov
in
cli
mov
dec
inc
cmp
and
and
pop
cmp
lea
xchg
loopne
xor
pop
add
adc
fstl
xchg
lcall
jmp
sbb
mov
out
mov
rorl
outsb
and
in
jne,pt
sti
inc
add
aad
cld
pop
nop
xor
fisubs
sub
fpatan
repnz
lods
mov
repz
call
sti
lea
xchg
daa
hlt
push
pop
jb
rclb
mov
jbe
jmp
mov
mov
jbe
roll
cmp
jb
lret
pop
jecxz
je
sub
loope
xchg
jp
std
push
xorl
push
xchg
mov
or
cmp
xchg
add
jle
xor
lock
or
cmp
mov
bound
jg
jbe
repz
in
and
insl
jnp
stos
dec
pop
es
mov
je
pop
cld
int3
sti
mov
mov
out
test
mov
test
out
clc
xchg
movsl
sub
xchg
jge
fsubrs
shl
push
and
hlt
fnstsw
pop
nop
xchg
roll
aas
popa
adc
test
stc
aam
mov
pop
js
xchg
rcll
nop
jb
push
addl
popa
inc
xchg
test
mov
xchg
and
test
jecxz
xchg
sub
rcl
cmp
cli
or
fildl
push
lock
or
in
sar
xchg
xchg
sahf
xor
std
cmpsl
or
and
lcall
mov
insl
pusha
mov
addr16
ja
inc
pop
dec
les
pushf
or
jmp
fwait
lods
push
inc
jne
sbb
out
je
sti
jns
pop
push
in
adcl
out
lret
aad
decl
cmp
aam
jp
inc
and
ja
dec
mov
sarl
jo
in
sbb
dec
aam
fisttps
mov
pop
xchg
stos
inc
adc
test
push
popf
movsl
push
ss
inc
inc
jle
push
aad
cli
leave
pop
insb
hlt
adc
jnp
sbb
scas
sbb
popa
push
repz
ds
adc
ret
loop
xor
lret
jae
pushf
out
cli
je
or
movsb
pop
test
ljmp
dec
jb
sbb
or
or
fidivrs
pop
xchg
rorb
fidivrl
unpcklps
leave
xchg
xor
pop
arpl
pcmpeqd
dec
sbb
shll
adc
or
add
lds
push
int3
imul
push
xor
xchg
inc
and
push
pop
movsb
mov
stos
out
loop
dec
in
outsb
fdiv
enter
daa
mov
ss
jno
out
jl
lock
dec
cmp
repnz
push
sahf
stc
lahf
mov
xchg
push
lock
mov
data16
test
or
lret
dec
js
std
stos
pop
icebp
enter
cmp
sub
in
js
cmpsb
stos
scas
outsb
push
jno
adc
mov
inc
adc
std
dec
xchg
add
test
cmp
fwait
sbb
int
in
sub
testl
pop
sbb
cmp
iret
popf
mov
shrl
arpl
jno
push
jecxz
fnstenv
adc
adc
mov
dec
test
inc
adc
lret
xchg
rorl
sub
sbb
jbe
into
and
pop
sub
cmp
or
loop
jecxz
stc
lret
movl
push
push
and
lods
dec
fcomip
mov
and
cli
push
push
xor
test
cmp
mov
jge
in
gs
mov
sbb
xor
adc
imul
or
lret
xchg
xchg
xor
sbb
jmp
xlat
loopne
fldcw
and
addr16
lcall
in
cs
aad
mov
dec
ret
push
jo
ds
test
sub
les
loopne
jnp
aad
or
or
cmpsb
ret
and
and
popa
jmp
call
push
inc
std
into
mov
sbb
aas
imul
jb
ljmp
mov
sub
not
mov
std
lds
push
mov
jg
mov
in
adcl
jo
mov
push
mov
repz
lock
xor
sbb
ljmp
test
insl
bound
cmpsl
mov
mov
mov
lret
hlt
int3
pop
mov
mul
pop
mov
jno
ror
pop
les
pop
js
aam
ja
ret
push
mov
cmp
loop
xlat
clc
mov
mov
adc
aam
pusha
cmp
stos
dec
lods
fs
mov
and
xchg
or
lcall
fwait
and
arpl
cmp
cwtl
jp
test
mov
orl
movsl
test
dec
les
xor
and
movsl
fs
lret
push
xchg
xchg
fldl
jge
pushl
cmp
dec
or
test
xor
and
mov
mov
mov
and
ja
in
dec
mov
roll
cmpsl
hlt
or
test
cld
dec
xchg
int3
pop
jne
xor
mov
and
out
adc
adc
xor
xorl
cmp
push
push
sub
cmp
mov
push
aam
jp
cwtl
scas
mov
out
int
mov
jnp
jle
adc
adc
loop
fildll
repz
jmp
jbe
into
adcl
push
ja
xor
loope
mov
stos
fstl
lcall
popa
call
push
cmp
jle
repz
jb
xor
sbb
pop
inc
add
inc
mov
mov
inc
std
push
bound
pop
data16
data16
fidivrl
jb
movsb
loop
sbb
cmp
ficomps
lds
rol
in
daa
mov
bound
leave
or
repz
cmp
jge
insl
mov
aaa
shlb
insb
or
mov
add
int3
push
rolb
movl
xor
loope
nop
scas
push
dec
mov
cmp
adc
outsb
shlb
test
jge
mov
mov
mov
dec
lods
es
ds
aam
movsl
jns
or
mov
sub
xor
push
aad
mov
inc
sbb
dec
inc
testl
pop
xor
jp
ss
xor
jns
cmp
leave
outsb
mov
addr16
xchg
or
insb
enter
shlb
and
shlb
xchg
add
sahf
pop
jecxz
jp
mov
pop
es
lcall
fdivrl
je
ret
sahf
fs
aas
test
xor
mov
jg
xor
xlat
adc
mov
cmp
into
ss
mov
negl
push
sub
mov
clc
repz
and
imul
cwtl
push
cmp
mov
add
addb
dec
or
out
cmpsb
push
aas
lods
das
test
int3
out
in
cli
or
sbb
or
lret
or
lea
gs
jo
loopne
push
xor
cmp
dec
mov
imul
cmp
pop
cmpsl
leave
xchg
pop
icebp
or
incl
xlat
pop
imul
pushf
jo
in
adc
fdivrp
mov
mov
fstl
and
inc
push
cmpsl
stc
fldenv
mov
repz
sbb
jle
mov
je
pop
call
and
and
pushf
inc
xchg
push
jmp
hlt
insl
pop
lods
mov
inc
test
inc
xor
or
das
jb
cmp
je
std
inc
vunpckhps
into
negb
pop
std
insb
fdivr
cwtl
dec
call
fisttps
daa
add
fistpl
mov
mov
push
and
mov
aam
sti
gs
ror
mov
rcr
push
bound
inc
xchg
dec
push
call
and
icebp
and
sbb
and
lret
arpl
mov
std
mov
or
out
xchg
rcrb
std
es
pop
ret
mov
test
cmp
clc
in
mov
dec
ljmp
pop
lods
iret
out
mov
in
movsl
xchg
dec
push
ss
addb
jbe
cmp
test
push
les
scas
std
add
xchg
fistps
in
dec
roll
xchg
subl
cs
add
sbb
push
call
ljmp
inc
and
xor
mov
mov
mov
adc
frstor
sub
movb
in
lods
fisttps
movl
jne
lods
imul
sarb
pop
std
mov
xchg
mov
out
stc
sub
xor
add
pop
adc
and
mov
pop
xchg
in
jle
scas
jno
sahf
jmp
sbb
xor
jmp
inc
push
cmp
popf
repz
mov
mov
in
and
cmp
jnp
push
scas
ficoms
push
iret
rcr
imul
rcrb
orb
adc
inc
add
ret
push
in
jl
xor
adc
sbb
or
jp
fcmovb
inc
xchg
xchg
mov
mov
mov
sbbb
arpl
push
ja
inc
cld
dec
sbb
fadds
repz
aas
fld
pop
test
push
adc
inc
jo
pop
inc
scas
in
add
cmp
in
rcll
add
je
cmpsb
call
pop
popa
enter
daa
mov
repz
jno
xor
jl
aam
dec
sbb
ret
movsl
addb
and
lahf
cmc
push
or
in
test
push
movsl
enter
gs
or
in
js
cmc
or
outsl
das
adc
cld
ja
dec
pop
jnp
add
pop
fisubrs
cmp
shrb
jle
or
sub
imul
add
and
push
mov
mov
add
lcall
jecxz
and
movsl
cmp
leave
jb
andb
xchg
mov
mov
mov
lret
xchg
mov
xor
and
jle
ss
fnstcw
mov
fdivrs
mov
lret
vminps
sbb
and
cmp
add
xor
inc
cmp
cmp
loop
fwait
idiv
cmp
fs
cmp
mov
mov
lods
push
push
cwtl
mov
sub
cli
cmp
shlb
arpl
jecxz
adc
push
test
mov
repz
pop
sub
pop
xchg
xor
add
mov
mov
xchg
xlat
pop
cmp
mov
jg
stos
sti
dec
stc
repnz
std
mov
nop
xchg
pop
dec
cmpl
fstps
aas
leave
repz
stos
movb
fucomi
push
rcll
pop
mov
rcll
cmpsl
dec
in
lock
or
ja
push
addb
or
add
mov
jb
les
je
dec
out
and
movsl
negb
in
adc
jp
or
jne
outsb
or
shrb
dec
xor
hlt
mov
mov
sbb
jmp
outsb
jae
mov
int3
mov
pop
lcall
es
pmaxub
out
rorl
daa
ret
mov
xor
stc
mov
scas
lret
rcr
inc
mov
add
inc
mov
add
cmpl
cmp
repz
insb
add
xor
jne
sub
imul
pop
sarl
mov
dec
mov
push
pop
pop
or
add
iret
jge
mov
push
mov
xchg
pushf
xchg
inc
mov
in
push
sbb
pop
fstpl
sub
fnstcw
add
pushf
in
xor
push
testb
pop
das
xor
or
mov
dec
jno
fisttpll
cwtl
shll
jl
popf
jb
inc
test
int
nop
mov
fisttpl
les
out
fdivs
lods
inc
int3
bound
inc
jns
outsb
int
cltd
xchg
lock
in
sub
cs
pushf
addr16
xchg
jp
arpl
mov
repnz
adc
cmp
in
out
pusha
and
fucomip
add
xchg
push
xor
or
or
leave
xorl
pushw
std
in
popf
sbb
mov
mov
mov
insb
xor
cmp
scas
inc
out
push
enter
xor
cmp
xor
fadd
in
adc
pop
mov
cmp
rcrl
jae
mov
inc
add
or
adc
sub
in
mov
sbb
shl
imul
lds
dec
rcrb
mov
or
stc
aas
mov
in
sub
shlb
ja
jge
outsb
pop
sbb
fs
dec
ds
or
cld
int3
sub
push
negb
mov
cmp
jo
pop
les
pop
std
sub
jecxz
dec
movsb
pop
inc
dec
push
iret
mov
add
and
xor
dec
sahf
daa
mov
fildll
jl
test
ds
movsl
xchg
aas
and
push
ds
adc
adc
fldt
xor
jo
mov
inc
ss
std
int
aaa
pop
inc
lods
ret
dec
xchg
scas
sub
fs
push
sub
adc
outsb
jp
inc
adc
dec
je
adcb
and
ss
cmpsl
xor
mov
or
dec
fcomps
cmp
lcall
push
popa
outsb
sub
pop
inc
test
mov
ret
jg
xchg
and
ja
pop
mov
ja
and
int
ss
dec
cmp
fdivs
mov
lret
xchg
ror
rolb
into
into
cmp
lret
xor
outsb
outsl
sbb
mov
pushf
les
fs
ret
add
data16
lret
std
call
icebp
out
cmc
aad
outsl
inc
outsl
xor
ret
movb
out
mov
loopne
mov
add
lock
jae
jb
scas
add
or
scas
pushf
lret
lods
popa
xlat
popf
sbb
mov
ljmp
cs
call
jmp
push
nop
mov
mov
inc
ja
iret
div
fmul
adc
xor
movb
call
and
pop
ds
jae
sbb
pushf
fwait
std
mov
sti
push
aaa
pop
repz
imul
into
cmpb
sbb
jb
cmpb
xchg
cmpsb
inc
jecxz
hlt
push
negb
mov
push
mov
in
dec
and
mov
mov
inc
push
lock
mov
cld
mov
ds
push
mov
std
out
es
jns
dec
dec
cli
or
fcompl
icebp
shrb
cld
js
push
lret
inc
push
and
or
mov
and
daa
rolb
sub
cmc
xchg
aam
nop
out
std
ljmp
push
lcall
int
jnp
mov
lcall
mov
out
stos
in
scas
xchg
fstpl
addr16
movsl
add
cmpsl
test
imul
xchg
pop
dec
jl
mov
xchg
iret
sbb
dec
shll
mov
pop
cmpsb
data16
jl
movb
fisubrl
rsqrtps
xor
out
or
inc
xchg
xor
jp
mov
jbe
mov
push
mov
scas
dec
nop
shlb
sbb
or
fcomi
fwait
push
scas
or
into
fnsave
mov
pushf
out
mov
in
inc
sbb
out
rclb
jno
into
or
cmp
sbb
adc
test
mov
std
pop
mov
mov
in
mov
jnp
xchg
fldenv
xchg
or
push
push
rol
popf
inc
mov
fs
cmp
popf
loop
push
cmp
push
lret
movsb
cs
push
nop
adc
pop
cs
push
push
pop
jmp
jle
ficoms
jae
fwait
push
inc
push
mov
or
nop
leave
mov
jecxz
sub
xchg
cmp
sbb
pop
inc
imul
fiadds
mov
jbe
mov
pop
xor
hlt
cmp
jbe
inc
xor
mov
arpl
and
aaa
or
jecxz
and
loope
push
lcall
add
mov
and
lret
jno
movsb
out
pop
push
push
dec
xor
out
push
mov
or
inc
cmp
daa
mov
jg
jno
fnstsw
pop
dec
stc
add
fsubs
andb
roll
cmpsl
pop
test
ljmp
nop
push
xlat
pop
imul
js
rclb
in
movsl
sahf
push
mov
sub
sbb
outsb
push
adc
and
daa
lods
andb
cmc
add
jmp
hlt
push
cmpsl
into
fxch
scas
icebp
test
dec
sub
pop
mov
inc
jno
pop
call
add
scas
mov
test
fwait
sbb
pop
into
or
out
xor
jmp
dec
and
pusha
aas
xor
insl
cmp
xor
pop
neg
loop
lret
rol
data16
jge
lock
sbb
push
dec
cmc
xchg
aad
xor
jae
loop
and
stc
cmpsl
mov
fs
data16
xor
lods
in
loope
cmpsb
jno
out
inc
int
mov
shrl
jnp
or
cltd
gs
mov
mov
jecxz
ret
shrl
add
adc
sub
add
scas
cs
mov
push
adc
fdivrl
mov
lock
pop
mov
push
and
sub
push
mov
jl
push
dec
aas
clc
clc
inc
mov
lret
mov
repz
movb
xor
dec
out
mov
xchg
mov
push
pop
icebp
pushf
inc
icebp
jnp
ljmp
inc
sbb
popf
inc
test
pop
jb
outsl
lds
push
sbb
mov
inc
pop
ret
mul
push
adc
popa
xchg
cwtl
jg
mov
cmpsb
dec
cmpsl
sub
sub
jmp
mov
lret
mov
rorb
lock
ret
out
das
xchg
lods
pop
mov
cmc
lea
and
push
loopne
lds
dec
insl
out
dec
inc
popa
pop
cmpsl
mov
push
pop
icebp
cmpsl
cmp
cld
mov
testb
adc
mov
iret
ror
pop
inc
ds
rclb
jns
sub
addr16
iret
ljmp
repnz
or
adc
sub
outsl
popa
xchg
popf
mov
push
sub
pop
push
adc
push
add
mov
test
outsl
xor
test
add
jae
test
mov
ss
out
rorl
lsl
pop
mov
add
imul
scas
or
jp
sbb
stos
mov
adc
mov
rcrb
pop
pop
push
cmpsb
out
cmp
mov
and
inc
mov
jae
jmpw
xchg
xchg
mov
jne
jne
mov
je,pt
push
ret
bound
mov
cmpl
in
inc
mov
jo
insb
sub
and
nop
addr16
jg
mov
test
addr16
mov
jle
xor
mov
lcall
cmc
jmp
jmp
mov
xor
pop
popf
push
rcl
jl
xor
test
lock
or
add
imul
ljmp
ret
inc
pop
and
les
jbe
imul
inc
or
or
or
inc
in
fimull
repnz
add
sbb
mov
cwtl
fsubp
cmp
rclb
test
scas
cmp
leave
out
shl
orl
jbe
xchg
jge
add
sbb
xlat
nop
aaa
int3
pop
cmp
mov
dec
imul
out
pop
subl
xor
dec
fwait
loopne
cmpb
cmp
xchg
movsb
jb
aad
insl
pop
push
cmpsb
jno
sbb
icebp
aam
enter
daa
mov
shrl
jno
jb
jl
popa
std
dec
push
in
movsl
xchg
mov
and
cld
jge
adcl
push
mov
addr16
push
xchg
push
decb
js
rclb
data16
loope
imul
neg
cmp
movsb
pop
outsb
inc
or
enter
add
mov
cmpb
cmpsb
add
lret
jg
inc
push
stos
frstor
push
out
xor
lret
pop
and
push
lcall
sbb
es
sub
leave
sahf
lock
mov
cmp
jns
decb
inc
mov
xor
xorb
ret
cwtl
cmp
jmp
out
fwait
aam
lret
mov
mov
fildll
scas
mov
xchg
mul
cmc
pop
scas
mov
add
cmp
pop
push
loop
mov
stc
pop
xchg
add
jne
adc
mov
adc
lret
mov
test
cltd
adc
lods
xor
sahf
cmp
or
sub
out
mov
sub
and
mov
imul
or
add
insb
push
sbb
jmp
xlat
sbb
add
arpl
lds
shl
sti
pop
aam
cs
inc
xor
dec
sahf
cmp
inc
popf
iret
neg
cmp
call
loopne
mov
dec
lea
push
call
and
enter
pop
pushf
icebp
mov
xchg
pop
cmp
pusha
inc
lahf
nop
ret
adc
jb
xchg
add
rorb
jecxz
add
mulb
std
or
xor
cmp
test
cltd
mov
orl
mov
sub
sub
cli
test
mov
lods
roll
mov
mov
mov
dec
inc
pop
popf
cmpsl
mov
add
icebp
jle
test
into
sbb
lret
pop
stos
push
mov
sbb
inc
pop
sti
sbb
sub
jge
aam
cltd
mov
push
mov
jecxz
movsl
mov
clc
fnstcw
xchg
dec
pop
in
ljmp
inc
lods
jnp
enter
dec
out
jno
bound
out
loopew
push
dec
lar
aad
cltd
stos
sbb
test
sti
adc
stos
mov
dec
dec
arpl
pop
or
xchg
jge
mov
std
shl
ret
fistps
xchg
stos
jne
scas
push
ret
add
xchg
xchg
dec
leave
int
push
or
repnz
xor
pop
dec
mov
adc
push
xchg
pop
leave
and
ja
mov
jecxz
dec
sub
or
lret
or
dec
push
pop
int3
jne
subb
js
out
dec
sub
bound
bound
cwtl
cmpsb
in
popf
ljmp
mov
aas
sbb
pop
sub
sbb
push
mov
test
jns
xchg
mov
mov
jle
fwait
pop
in
xor
add
dec
jae
xchg
jg
pushf
jmp
insl
repnz
sbb
lret
fiadds
mov
mov
or
test
loop
jbe
inc
jnp
cmp
scas
push
add
sub
iret
dec
loopne
ret
test
out
jg
hlt
ret
mov
xor
inc
or
xor
xchg
mov
std
test
xchg
push
xor
inc
in
jnp
push
cmp
mov
xor
lods
in
cmp
repnz
leave
pop
push
cmp
into
mov
dec
jbe
cmp
jge
push
sbb
cwtl
sti
pop
aaa
mov
push
add
icebp
int3
jmp
rcrb
fwait
push
lahf
xor
jo
scas
popa
gs
cmp
fsts
std
insb
push
mov
lret
in
fcomps
pop
enter
daa
mov
fildl
push
pop
jl
lea
xlat
outsb
xor
cmpsl
mov
movsl
pushf
mov
and
cmp
push
notl
ret
pop
or
push
bound
js
adcl
fyl2x
jge
test
test
cmp
out
mov
adc
fcmovnu
cmp
lret
mov
test
push
add
dec
imul
int
shlb
and
mov
or
cltd
shrl
insl
leave
mov
test
push
pop
adcb
popf
jg
dec
mov
mov
in
mov
inc
cmp
std
push
scas
ss
fdivrs
cmpsb
sbb
pop
dec
aam
out
jne
rcll
sbb
or
ja
pop
jmp
xor
xor
mov
adc
enter
inc
mov
xor
notb
pushf
xor
cwtl
imul
pushf
xor
sarb
imul
decb
mov
iret
je
mov
adc
adc
push
imul
mov
add
mov
xchg
daa
insl
loopne
and
push
xlat
pop
add
mov
sub
jl
sbb
mov
shrb
nop
xor
lds
sbb
stc
jae
repz
jmp
lea
in
call
mov
mov
adc
push
std
pushf
pushf
push
mov
enter
fcoml
inc
daa
pusha
pop
inc
mov
xchg
shll
ljmp
je
xchg
jecxz
in
mov
addr16
cwtl
cmc
inc
movzwl
sbb
sbbl
xlat
mov
mov
sbb
lock
inc
push
das
push
cli
jno
fidivrl
outsl
mov
inc
pop
cmp
arpl
sub
mov
repnz
int3
jno
dec
cmp
dec
cmpsl
mov
arpl
push
dec
jae
stc
mov
lret
mov
mov
and
mov
cmpl
aam
pushf
cltd
ret
stos
jl
push
js
cltd
aad
clc
adc
scas
xchg
mov
imul
adc
xlat
lods
out
add
aam
xchg
xchg
mov
in
push
leave
push
loop
mov
addb
outsb
mov
test
fstpt
xorb
mov
ret
jmp
xchg
sbb
sarl
andl
fdivrl
fs
test
ljmp
and
or
and
pop
aas
and
test
ja,pn
jbe
dec
imul
gs
sbbl
dec
jmp
out
shll
sub
shlb
dec
lock
cwtl
icebp
in
inc
jmp
pop
mov
out
xchg
push
sub
sbb
adc
test
jp
push
and
js
jle
clc
das
in
ret
mov
push
fildll
cmp
jmp
cmp
stos
push
or
sbb
mov
popa
mov
cli
inc
das
stos
clc
outsl
and
mov
push
scas
int
sbb
inc
push
adc
sub
cmp
pop
nop
movsb
pop
inc
clc
push
jae
in
inc
xchg
or
add
inc
pusha
mov
fidivl
js
sbb
icebp
imul
fisubrs
fnstenv
notb
repnz
jmp
sbb
arpl
fcmovnb
jbe
fs
jge
and
aaa
dec
mov
add
xor
pop
loope
push
push
xorb
push
sub
add
and
data16
mov
push
or
enter
leave
enter
daa
mov
cwtl
pusha
jno
test
jl
in
dec
inc
leave
mov
lret
movsl
mov
or
nop
jle
push
daa
push
or
dec
cmp
out
fnstcw
or
push
sub
mov
dec
pop
stos
xor
repz
aad
sub
cs
cmp
leave
outsb
push
push
push
adc
mov
adc
fsubrp
inc
sbb
push
bound
test
mov
addr16
xchg
mov
shlb
and
push
push
fs
jl
insb
sub
sahf
ss
test
subb
mov
mov
std
in
mov
inc
mov
fcoml
and
repz
mov
cmp
popa
js
negl
inc
xchg
lret
int
sub
mov
push
add
pop
xorb
out
mov
outsl
cwtl
imul
call
xchg
jbe
mov
adc
xor
lods
cltd
sbb
out
inc
aam
cmp
jns
mov
cmp
lds
push
loopne
mov
pop
clc
pop
xchg
adc
in
ljmp
add
loope
sbb
popa
jb
xlat
cltd
lods
and
dec
test
es
in
xchg
sbb
sti
mov
or
or
pop
rcll
fldcw
push
adc
jo
nop
aas
sbb
call
pop
fsubrs
adc
sti
pushf
inc
les
pop
jg
sub
inc
aad
fidivrs
les
xor
jne
dec
adc
mov
mov
sbb
imulb
cmp
cwtl
mov
aad
sub
mov
mov
dec
int3
in
jae
js
mov
jae
xorl
xor
lea
into
xchg
shll
mov
insl
mov
pop
dec
ss
shlb
test
sub
sub
das
cld
and
cmp
std
pop
adc
and
mov
cmp
sub
xchg
lret
repz
cmp
loopne
repz
mov
dec
int
xchg
leave
imul
test
popa
int3
es
push
and
mov
aaa
mov
stos
push
movsb
push
sti
unpcklps
pop
add
cmp
fadds
out
and
mov
test
sbb
mov
pop
pop
imul
data16
jb
push
jg
push
or
push
add
mov
push
test
jae
decl
rdpmc
cli
xor
xchg
mov
fwait
mov
insl
pop
aas
fidivs
ja
mov
dec
pop
pop
rolb
ret
daa
or
dec
int3
jne
rcll
pop
sbbl
test
and
push
inc
cmp
out
push
test
adc
inc
mov
push
stos
pop
mov
icebp
or
and
add
pusha
daa
jns
filds
out
jmp
add
cmp
jns
int3
dec
popf
fnsave
rclb
xor
add
and
add
push
scas
xor
cmp
ret
dec
adc
pop
iret
or
ret
dec
pop
std
adc
xorb
cmpsl
inc
adc
push
jl
addl
adc
arpl
je
add
lret
enter
mov
vorpd
loop
sub
repnz
mov
dec
and
hlt
fs
dec
jbe
add
push
call
aaa
or
outsl
or
or
jge
lret
data16
imul
stos
xorl
pop
mov
and
jbe
cmp
cs
cmpsb
cli
adc
cmpsb
dec
icebp
enter
daa
mov
jle
inc
or
jl
popa
pushf
dec
mov
add
in
mov
movsl
stos
out
and
push
lahf
scas
cli
sahf
push
test
push
mov
pushf
test
pop
pop
cmc
mov
pop
jmp
and
loope
rclb
push
shrb
imul
xchg
fcom
popl
inc
xor
fstpl
mov
pop
add
imul
push
mov
inc
int
aas
nop
sub
mov
pop
lahf
push
ja
lock
inc
fsubl
jecxz
sub
jno
mov
dec
push
xchg
aam
mov
mov
mov
leave
xchg
mov
enter
push
xorb
imul
sbb
adc
fadd
ljmp
fiadds
sbb
push
into
cmp
nop
mov
adc
sbb
stc
orl
adc
bound
sbbb
mov
mov
or
out
bound
cmp
cmpsl
adc
icebp
gs
gs
mov
loopne
lods
enter
dec
adc
pop
int
imul
push
sbb
pushf
aad
xlat
fcomp
fsubrl
mov
imul
sti
imul
jmp
dec
mov
dec
loop
loopne
jbe
aas
xchg
pop
jae
inc
and
ffree
sahf
movsl
pop
mov
sub
jmp
mov
pop
and
inc
xor
dec
aaa
aas
arpl
ret
dec
mov
je,pt
pusha
mov
jle
std
imul
mov
jae
imul
mov
add
mov
dec
mov
inc
add
or
sub
mov
pop
add
roll
pop
xchg
mov
mov
dec
xor
fsubl
fildl
icebp
add
sub
dec
pop
out
lret
insb
pusha
jecxz
jle
mov
mov
mov
fsub
sub
popf
mov
push
push
call
clc
mov
xchg
or
pop
ljmp
subl
cmpsl
out
lcall
push
jg
fmull
jae
mov
sti
cmp
cltd
push
sub
test
xchg
mov
rorl
mov
test
push
out
sbb
mov
dec
pop
std
stc
sbb
push
stos
sbb
mov
sub
xlat
scas
jae
sub
mov
or
popf
mull
fidivs
hlt
pop
cli
sbb
ja
jb
dec
dec
ds
inc
push
les
adc
fwait
push
scas
mov
mov
jne
clc
pop
mov
pushf
popa
out
out
jp
lds
stos
in
cwtl
nop
xchg
mov
cmp
jl
and
adc
mov
jp
mov
lea
xchg
push
jle
mov
pusha
ret
fbld
fldcw
xchg
into
mov
orl
popf
add
and
js
fwait
stos
jne
lret
xor
mov
out
rcrl
scas
xchg
in
push
jb
in
push
mov
push
and
pop
cli
int3
inc
adc
adc
inc
adc
sub
imull
loope
push
xchg
cld
xchg
pop
jne
sbb
jns
imul
lret
fidivs
inc
lds
or
std
inc
mov
xor
leave
ret
mov
imul
int
fdivrs
rclb
fsubp
aaa
enter
insb
mov
add
std
int3
lods
cmp
aas
mov
dec
aad
xor
mov
jno
and
insb
movsb
cmp
inc
ret
adc
jge
mov
lea
enter
daa
mov
or
jne
push
jno
insl
push
jl
or
dec
and
push
adc
inc
movsl
mov
inc
and
adc
push
int
cwtl
test
loope
in
nop
imul
pop
jl,pn
js
xchg
sub
sub
pop
push
dec
aam
out
iret
push
repnz
cmp
data16
adc
insb
cmc
ds
mov
icebp
sub
in
adc
add
fwait
sub
mov
mov
sub
pop
push
sub
mov
pushl
sub
cs
sahf
jl
push
test
out
andb
jp
add
mov
push
mov
pop
ljmp
cltd
gs
xlat
in
inc
notl
xchg
xchg
rcrl
mov
das
xchg
into
and
fcomip
je
xor
pushf
outsl
push
iret
dec
loop
add
cmp
arpl
adc
fst
shld
daa
mul
xchg
test
cli
mov
loopne
cmp
test
or
data16
mov
mov
maxps
sub
adc
test
dec
pop
adc
cmc
in
add
mov
xchg
jo
dec
sbb
xlat
int3
xlat
pop
lea
mov
insb
mov
inc
es
cmp
fmull
jbe
inc
jmp
aaa
mov
or
add
xchg
inc
push
lea
test
cmp
mov
adc
lret
sbb
jecxz
pop
inc
mov
add
mov
and
test
cmp
mov
lea
divb
pop
in
std
movsb
int
cwtl
es
xlat
mov
sub
mov
loope
fcomip
jmp
fcmovnbe
popa
stos
mov
xchg
mov
jae
lock
push
das
out
or
mov
mov
jmp
in
adc
push
sbb
insl
subl
cmpsl
mov
leave
mov
fidivl
cld
jp
mov
mov
xor
call
ficoms
aaa
shlb
jb
sub
pushf
pop
ret
push
jb
push
rcll
inc
adc
dec
xchg
inc
mov
popa
cli
inc
jns
daa
jnp
mov
std
mov
xchg
xchg
inc
push
pop
mov
add
jb
cltd
xchg
test
jae
mov
cld
movl
repz
adc
jge
js
cmp
xor
dec
push
gs
repnz
call
xor
fucom
or
add
xor
push
push
mov
and
mov
mov
xorl
mov
or
lcall
xchg
sub
shll
vdivss
cmpsb
mov
in
aas
xchg
xchg
add
and
pushl
sub
or
addr16
dec
jmp
mov
xchg
int3
push
jle
js
rcrl
pop
ljmp
lret
add
rorl
xchg
cltd
dec
pop
sbbl
movsl
push
push
orl
hlt
aas
fcoml
xchg
aam
call
lcall
jo
lods
scas
mul
dec
push
mov
cmp
leave
and
ret
stos
pop
xor
nop
fnstenv
xchg
inc
sbb
imulb
sub
inc
ffree
dec
fcmove
imull
repz
test
or
mov
jge
rcrb
fdivrs
dec
jne
leave
cmp
or
cli
mov
jbe,pt
cwtl
es
adcl
xchg
or
and
stos
adc
pop
outsb
imul
stos
sbb
scas
jmp
pop
xor
in
movsb
sub
xchg
cmpsb
add
dec
in
je
cmp
sub
sub
jno
push
fstpt
fmull
jo
xor
and
pusha
lahf
in
pop
jg
mov
adc
inc
inc
pop
dec
popa
and
pop
push
out
js
mull
push
daa
lahf
loope
add
pop
mov
cmp
outsb
das
jae
adc
inc
testb
rcrb
pop
xchg
add
and
mov
push
mov
ds
sub
in
pushf
pop
popf
mov
notl
cmp
fdivrl
cmp
sub
dec
test
ja
cmpb
jg
jo
mov
mov
mov
lcall
ret
cmp
xchg
push
shl
push
dec
sbb
mov
sub
jb
insl
sbb
jp
cmc
cmp
dec
xor
mov
outsl
xor
xchg
push
stc
icebp
pop
fs
mov
sub
das
inc
xor
mov
jmp
cli
aam
and
pushf
cmpb
ss
sarb
jg
fisubl
mov
pop
push
cmp
adc
lods
adcb
mov
arpl
cmp
xor
push
sbb
adc
xlat
push
ret
dec
sub
cmp
pop
sti
out
cs
adc
sahf
adc
out
inc
cld
push
and
push
sub
repz
clc
cltd
repz
adc
jle
das
add
jbe
and
pop
xchg
pop
pushf
dec
or
pop
push
out
inc
es
aas
mov
dec
scas
dec
jbe
pop
je
pop
jmp
pushf
inc
sbb
jae
std
dec
out
adc
iretw
call
xorl
out
fildl
jg
mov
pop
inc
lock
das
int
adc
aas
pusha
xor
sti
rcrl
push
xor
dec
cmpsl
mov
mov
inc
hlt
clc
icebp
mov
cltd
cld
movsl
push
inc
lret
dec
lods
or
cmp
push
mov
std
call
sbb
lods
xchg
aam
out
mov
push
test
repz
add
pop
xchg
xchg
ljmp
les
js
out
pusha
lods
notb
xor
gs
and
ljmp
movsb
pop
mov
lods
xacquire
insb
cmp
sbb
xlat
jle
xchg
call
pusha
stos
and
mov
icebp
or
add
mov
bound
je
mov
mov
fs
cmp
jo
and
mov
sub
xor
xor
or
mov
jne
jne
pcmpeqw
xchg
xor
out
movsb
movsb
cmp
aad
jns
add
xchg
push
sbbb
ret
or
mov
addr16
add
out
lods
xorb
sahf
rorb
in
hlt
jbe
fstp
adc
and
fsubrp
lret
xchg
xor
subl
jno
push
int
mov
testb
stos
pop
dec
jl
imull
mov
lea
lret
add
add
dec
sub
test
dec
inc
sub
roll
pop
orl
inc
mov
jl
fidivrl
xchg
or
hlt
sbb
push
call
fidivrs
daa
dec
shlb
dec
mov
mov
mov
hlt
inc
nop
add
mov
daa
jge
adc
sbb
pop
add
inc
adc
or
testb
mov
dec
pop
popf
adc
push
push
pop
xorb
cmp
nop
and
xor
cmp
lea
push
inc
mov
out
pop
into
cmp
and
pusha
daa
mov
fstpt
fistl
cmp
int3
dec
add
adc
movsl
mov
add
lahf
or
rclb
mov
push
ja
xchg
inc
scas
jb
in
pusha
pop
jl
in
sahf
icebp
mov
cmpsb
subb
sbb
pop
sub
mov
outsb
xchg
test
and
pusha
sarl
subb
mov
add
sti
dec
xor
mov
int
xchg
lret
out
pop
sbb
mov
or
cmc
push
rcrb
sub
lock
lcall
mov
ljmp
mov
outsl
fwait
mov
cmpl
ss
push
xchg
cmp
dec
mov
notl
sub
mov
cmp
leave
sbb
cmc
add
cmpsl
xor
pop
xor
inc
jle
xor
xchg
test
dec
fs
or
jnp
or
stos
lods
xor
scas
aad
xchg
aad
cli
pop
pusha
jmp
cmp
mov
ljmp
repnz
xchg
adc
push
std
adc
mov
adc
les
xchg
idivb
cmp
xchg
xlat
xchg
jge
sub
pop
test
sti
jbe
cmp
or
lock
xchg
mov
fsubrs
iret
inc
shld
xor
pop
rep
push
push
pushf
pop
popa
lea
jne
stos
in
sbb
ficoml
mov
negb
xchg
or
add
inc
ljmp
push
daa
jb
stos
or
int3
and
stos
test
divb
repnz
and
mov
or
mov
cmc
mov
mov
lock
xchg
das
lods
subb
imulb
and
je
shr
out
adc
inc
icebp
insl
dec
loopne
dec
and
cmpsl
mov
and
mov
in
cld
rorb
inc
mov
inc
sahf
sbb
sbb
pop
rcr
inc
xchg
sub
xor
jne
push
push
inc
mov
inc
clc
cmp
xchg
ljmp
shrl
stc
pop
out
ret
cwtl
push
push
adc
mov
xor
sub
adc
int
inc
mov
sub
mov
test
cld
mov
jecxz
inc
shr
pop
cld
pop
fistl
addr16
xchg
movsb
lods
add
sub
sub
pop
aad
mov
fs
xor
aad
mov
cmpsl
dec
and
sub
ja
leave
adc
and
shll
mov
loopne
aam
pop
dec
nop
jne
hlt
lods
mov
je
out
andl
jle
jne
test
lods
in
mov
mov
popf
dec
sub
add
jp,pn
sarb
fidivrs
mov
jne
in
jle
push
cmp
in
dec
pusha
xchg
stos
outsl
filds
mov
jmp
das
insl
popa
cmpl
into
push
fmuls
negb
push
mov
stos
into
mov
push
insb
clc
fisubs
scas
mov
test
adc
lret
ror
xchg
jp
cwtl
ljmp
pop
mov
out
or
inc
push
cmc
add
roll
fstpt
inc
xchg
popa
decb
jp
imul
pop
push
inc
lds
push
sarb
sub
hlt
nop
mov
arpl
sahf
cmpsb
jbe
decb
jge
mov
sbb
cmc
jl
add
mov
add
pop
repnz
insl
stos
fcomps
jnp
push
icebp
or
test
repz
andl
push
outsl
call
push
xchg
dec
sbb
inc
imul
inc
add
push
shll
je
loopne
data16
xchg
or
jns,pt
add
pop
mov
lahf
sub
push
inc
dec
test
inc
or
test
add
imul
pop
in
and
loope
aad
sub
xor
shrb
dec
out
mov
ret
adc
mov
cli
sub
xchg
fmulp
add
sub
notb
mov
int3
xor
pop
fwait
je
lcall
cs
gs
pop
ja
sahf
gs
fwait
test
loopne
xorb
inc
mov
orl
and
pop
ss
fdiv
cmp
or
shl
aam
in
mov
add
mov
clc
xor
into
leave
lea
xor
add
loop
pop
and
pop
rclb
adc
lds
inc
shlb
mov
jbe
xchg
inc
mov
cmp
push
cmp
adc
or
ret
call
or
xchg
push
adc
pop
dec
adc
sub
sbbl
imul
aam
dec
sub
mov
mov
and
icebp
cmp
push
cmp
aaa
mov
and
jecxz
mov
lcall
lahf
scas
hlt
loope
push
call
lcall
adc
pop
sbb
call
inc
push
add
aas
fucomip
out
jb
cmp
dec
or
jecxz
or
cltd
fldt
mov
test
mov
rorb
andl
push
mov
mov
lock
mov
mov
lods
sbb
cmp
lods
and
outsl
out
dec
sbb
fwait
mov
pop
loop
cld
sti
fwait
push
mov
dec
stos
mov
pop
cmp
xor
aam
xchg
mov
int3
inc
push
or
dec
fnsave
ds
xchg
add
lods
ljmp
sbb
cmp
inc
xchg
pop
xor
icebp
pxor
jge
inc
dec
inc
cltd
sub
movl
fildll
test
push
lock
adc
sbb
repz
pop
test
jecxz
push
aaa
mov
and
inc
daa
pop
jmp
push
imul
or
imul
icebp
mov
or
mov
out
shlb
cltd
dec
dec
sbb
mov
xor
or
sub
dec
cmp
inc
jne
mov
xor
bound
bound
sarl
jns
adc
in
sub
out
pusha
push
nop
push
mov
adc
jp
xchg
mov
pusha
mov
in
popa
jle
sub
in
inc
sub
stos
cld
fbld
push
mov
inc
lods
pop
jmp
cli
cld
iret
or
pop
push
fwait
std
push
popf
mov
jnp
push
je
lret
stos
add
and
addr16
jnp
pop
ja
pop
sahf
lds
sbb
ret
iret
out
jg
stos
sbb
pop
inc
inc
sbb
inc
and
or
jecxz
jb
pop
jns
push
xchg
xchg
mov
ja
imul
jmp
je
xchg
cmpsb
mov
mov
inc
aad
leave
lahf
push
adc
arpl
jle
sbb
add
in
sbb
jno
or
xlat
and
jo
or
int
pop
sti
test
out
xor
and
repnz
out
or
movsb
lret
push
in
cmpsb
mov
sub
sbb
bound
mov
xchg
cmp
gs
test
mov
ds
test
int
inc
and
je
lahf
dec
gs
push
sbb
je
push
outsb
push
push
or
mov
pop
lret
js
mov
fs
icebp
test
sub
mov
cmp
and
adc
fdivs
fmull
push
gs
adc
add
stos
mov
notl
push
ret
int
ljmp
sbb
and
int3
mov
jle
add
test
sahf
or
push
test
insb
xchg
jg
jbe
mov
aaa
dec
mov
dec
xchg
data16
fidivl
mov
mov
notl
xchg
pop
shll
mov
daa
adc
into
lods
add
shll
jecxz
outsl
rol
daa
loop
nop
pop
stc
push
sti
stos
fs
cmpsb
adc
dec
sbb
lret
lods
add
and
xchg
xor
shlb
and
cmp
inc
dec
or
incb
gs
mov
xchg
pop
mov
push
adc
mov
aam
pusha
in
add
sbb
sbb
ret
jno
xlat
adc
sub
push
mov
sbb
sti
aam
stc
cs
xchg
aad
jp
nop
das
scas
pop
dec
xchg
out
push
inc
xor
les
cmp
mov
sub
lods
sbb
loope
cmp
cmp
fs
xchg
push
cmp
pop
push
insb
icebp
inc
fsubs
inc
ja
pop
aas
jle
add
std
jno
fucomi
out
je
dec
cmpsl
jecxz
rcrb
cmp
icebp
std
inc
test
cwtl
adc
mov
fcmovnb
mov
lret
sahf
cmpl
into
dec
fistl
subl
shrb
das
push
fldenv
outsl
andl
aam
es
pop
mov
dec
sbb
cmpsl
mov
aas
mov
ss
add
es
pop
lret
xchg
fidivs
and
inc
mov
loopne
and
sub
fisttps
ret
xchg
sbb
push
int
in
fucom
dec
clc
mov
std
xchg
inc
add
aaa
xchg
inc
popa
push
xor
lods
shll
sarb
mov
xchg
mov
out
or
dec
or
pop
dec
outsb
cltd
arpl
test
sub
mov
push
addb
out
cltd
test
inc
inc
xchg
mov
rcrl
inc
pop
stos
in
adc
fcmovb
cmpsl
add
pop
ja
incl
xor
push
or
push
lret
xor
repz
sub
ljmp
push
ds
inc
add
clc
or
stos
push
fwait
ds
adc
push
cmp
mov
out
inc
ljmp
repnz
xchg
inc
movsb
int3
out
cwtl
in
ja
ja
idiv
andl
mov
mov
xchg
jbe
shl
in
push
dec
test
xor
in
lea
pusha
leave
mov
mov
scas
in
inc
xchg
adcl
push
pop
fs
out
mov
mov
push
stos
mov
xchg
and
stos
insb
into
ret
xchg
jnp
xchg
js
subb
aad
adc
popf
scas
add
inc
mov
inc
pop
adc
lahf
jae
xor
or
pop
aam
fnstcw
lds
lahf
dec
and
add
mov
jl
rolb
repnz
mov
leave
push
mov
mov
jbe
xor
add
jo
stos
aaa
and
or
lods
fldl
pop
xor
inc
les
mov
insl
xor
sbbb
test
push
scas
movsb
push
hlt
lds
js
cmpsb
or
mov
adc
enter
daa
mov
jle
je
mov
and
mov
dec
dec
mov
ds
xlat
stc
and
les
in
test
leave
push
fsubs
insl
rolb
icebp
jnp
js
pop
outsl
pop
arpl
pop
push
popf
fndisi(8087
popa
aaa
or
add
cmp
aam
outsb
mov
mov
mov
jge
push
andb
sbb
out
mov
sbbl
mov
scas
sub
cmp
lcall
mov
sub
rorb
stos
cmpsb
incl
jmp
into
jg
in
push
and
mov
das
inc
and
pop
ss
dec
inc
cmp
jle
xchg
notl
lret
aad
rorl
push
fldt
push
mov
into
jno
cmc
push
loope
xor
movl
in
cmc
pop
stc
int
add
dec
adc
xor
aas
mov
ljmp
out
stos
jne
mov
jno
cmp
inc
xchg
mov
mov
divb
add
shll
imul
pop
ret
ret
adc
decb
push
les
in
out
mov
andl
cs
xor
clc
sub
or
fadds
int3
mov
les
dec
repz
movsl
cmp
lea
lcall
cwtl
xor
pop
out
bound
pushf
hlt
add
jmp
cmp
hlt
lods
xchg
inc
pop
lods
mov
xchg
fsubrs
jb
hlt
loope
push
jno
je
inc
in
fcomp
shl
jg
out
les
bound
inc
adc
scas
sahf
fcmovnb
pop
sub
sub
es
rorl
jb
scas
mov
fstcw
fldt
es
aad
insl
add
and
xor
cmpsl
mov
sarb
or
xor
lret
push
ja
mov
pop
out
sub
pop
jns
popa
rclb
mov
mov
fs
subb
nop
std
pop
fldl
call
xchg
sub
ljmp
add
adc
out
in
adc
xchg
ljmp
shrd
data16
rcrb
xor
jmp
lods
sbb
xchg
and
in
test
lds
sbb
adc
pop
pushl
iret
stos
faddl
test
jge
and
jns
aas
jmp
daa
xorl
push
inc
jp
incl
adc
jo
mov
pop
pop
popf
mov
dec
add
inc
cwtl
shrl
add
fwait
insl
push
aad
add
std
mov
add
mov
bound
pushf
xchg
scas
js
sbb
lea
mov
sub
repnz
jp
xor
mov
fadd
mov
ret
jle
xor
in
cmp
pusha
xchg
push
xchg
ljmp
xchg
nop
sbb
and
push
push
and
mov
sbb
icebp
push
repnz
and
dec
insb
cmp
pop
jnp
xchg
call
push
sbb
aad
js
ret
iret
movsb
or
test
pop
les
jecxz
addl
addr16
fldenv
pop
xchg
dec
insb
adc
dec
out
push
imul
inc
lds
pmaddwd
in
ret
dec
leave
lea
sbb
jno
xchg
fsubl
jbe
jecxz
mov
inc
ret
fcomip
or
xor
lahf
int3
cs
bound
push
inc
push
lcall
jo
mov
and
mov
ja
push
movsb
loopne
push
push
xor
cmpsb
negl
mov
cmp
push
xlat
jl
pop
pop
dec
mov
inc
movsl
fistpl
and
cmp
push
mov
and
push
mov
mov
icebp
inc
aas
pop
sbb
js
mov
cld
push
cld
sahf
loope
push
popf
sub
sub
cmp
add
adc
mov
fsubrl
xorb
sbb
insl
adc
mov
rcrb
int
rcrl
pop
sbb
lcall
xor
aam
sub
mov
roll
push
xor
mov
inc
leave
mov
cltd
jo
and
dec
and
xchg
cmp
cmp
pop
notl
mov
lods
shl
rorb
push
cmpsl
into
jb
es
push
mov
movsb
outsl
nop
pop
leave
loop
push
stc
test
fs
imul
shlb
mov
pop
out
movsl
fsqrt
rorl
iret
aaa
cmp
sbb
ror
mov
gs
push
shl
xor
and
enter
testl
adc
push
mov
cs
xchg
add
push
sbb
cmp
sub
cmp
mov
out
mov
xchg
cs
push
aaa
aad
icebp
rcll
push
enter
xchg
fldenv
ffreep
pop
sbb
repz
das
sbb
push
push
call
pop
mov
lahf
adc
repz
lahf
adc
pop
xchg
jecxz
inc
out
or
or
aas
mov
and
lcall
out
sahf
test
push
std
mov
adc
mov
int
mov
fnsave
subl
push
fcomi
jbe
mov
mov
lock
das
sub
mov
rolb
sub
mov
or
push
sbb
jmp
mov
test
scas
mov
ds
in
mov
jl
or
jae
xor
js
outsl
pop
cwtl
cmp
sub
sub
jns
ret
mov
mov
mov
movsb
xchg
rcll
sbb
incl
mov
dec
into
xor
jl
cmpsb
loopne
add
imul
mov
sbb
loop
push
mov
je
push
dec
xchg
scas
outsb
insl
roll
push
pop
stos
test
lret
mov
push
and
je
xchg
push
push
incl
and
or
mov
mov
mov
fdivrl
pop
in
ja
and
dec
hlt
sub
or
sub
fwait
pushf
sbb
jne
push
daa
out
incl
outsb
jns
jae
in
or
out
arpl
or
mov
lfs
adc
mov
inc
sarl
lcall
dec
cmp
fistpll
or
popf
push
pusha
xchg
pop
movsb
add
push
in
fs
adc
jmp
push
xor
sub
push
enter
addr16
push
mov
dec
jmp
push
arpl
stc
adc
xchg
add
in
jge
jg
sbb
jae
sbb
inc
sub
or
push
pop
out
xlat
rorb
add
bound
mov
fsubrp
pop
aas
lds
push
mov
int3
inc
mov
aas
or
add
push
hlt
mov
into
jbe
cmp
jge
dec
inc
sbb
sub
aaa
add
adc
add
rcrb
int3
xlat
push
jge
icebp
xor
ss
fsubrl
iret
sub
cmp
dec
shlb
mov
adc
in
faddp
gs
daa
scas
lahf
and
fcmovu
push
jno
cmc
jl
shll
dec
sub
jne
movsl
loop
aam
aaa
clc
lahf
cmpsl
mov
test
outsb
xchg
fadds
das
pop
mov
fs
aas
push
pusha
js
xorb
mov
and
fbld
popf
cmp
addr16
adc
imul
jle
mov
stos
sbb
dec
add
sub
fs
cld
push
lret
push
int
lcall
xchg
adc
mov
cmpsb
push
jae
pop
fdivrl
push
sub
cmp
test
bound
jg
mov
loopne
cmp
mov
repnz
and
lea
fdiv
mov
dec
lret
sarl
mov
adc
mov
or
and
in
leave
sub
sub
loop
pop
js
cmp
outsb
fnstenv
push
jle
lods
mov
mov
jae
push
mov
cmpsb
inc
xchg
cmp
sarl
imul
gs
and
mov
xchg
adc
sub
rorl
add
pusha
leave
sbb
je
xlat
rcr
add
push
cmp
cmc
sbb
pop
stos
inc
sti
loope
sub
aad
ret
sar
dec
mov
adc
fstps
out
shl
mov
mov
lea
mov
xchg
lret
push
xchg
or
imul
fwait
jmp
xchg
pop
cmp
mov
aas
pop
je
jb
jg
dec
inc
push
and
shrb
movb
inc
pop
loope
loopne
mov
hlt
xchg
addl
in
and
mov
xchg
mov
out
mov
jecxz
push
das
pop
outsl
stos
mov
mov
and
sarb
aam
shrl
xchg
imul
shll
jae
icebp
mov
sbb
lret
in
pop
mov
retw
adc
ljmp
push
or
ja
scas
aam
aad
inc
cmpsb
xchg
push
push
aad
fstl
outsl
clc
bound
xchg
add
ljmp
add
clc
xor
mov
xchg
xchg
js
ret
lret
xchg
imul
add
fidivrs
dec
test
mov
data16
mov
jle
push
test
sbb
mov
sahf
mov
sti
stos
mov
popf
stc
add
scas
fbstp
and
sti
xor
out
ds
dec
mov
mulb
xor
mov
repnz
out
mov
or
sub
dec
dec
mov
mov
pop
loopne
ficoms
bound
sbb
fcompl
sub
testb
es
jne
push
hlt
jp,pn
lods
xorl
movsl
sahf
mov
pop
cli
in
shll
lcall
xchg
nop
rcl
xchg
and
test
push
cmpsl
push
xchg
xchg
cmp
stos
or
jno
insb
psrlw
cmp
aam
stos
xchg
pop
push
stos
shl
adc
sbb
iret
out
sbb
negl
mov
jae
jae
inc
sub
fbstp
iret
in
testb
cmc
fisubrl
or
mov
imul
xor
mov
sub
aad
add
xchg
andb
jnp
int
pop
bound
jle
add
daa
in
push
jge
cmp
aaa
rcrb
arpl
add
push
stc
int3
add
lods
pop
mov
sbb
pusha
jl
xor
xchg
scas
cwtl
scas
negb
cld
cmp
fistps
testb
and
ja
enter
daa
scas
shlb
cmpsl
and
jl
sbb
dec
pushf
insl
inc
sub
xlat
and
sti
lahf
stc
lret
push
gs
push
test
cmp
outsl
inc
or
ja
loope
data16
add
push
pop
and
cmc
push
xlat
lcall
lock
inc
lods
sub
adc
adc
inc
lods
jp
lcall
sbb
insl
xor
fs
int
inc
adc
mov
jne
push
inc
adc
push
lret
fsubrl
sub
sahf
xchg
in
mov
cmpb
mov
sbb
mov
add
pop
and
pop
outsl
cmp
scas
jecxz
testl
pop
inc
mov
push
aaa
sbb
cmp
into
cmp
cmc
lods
dec
mov
outsl
dec
loop
cmpsb
pop
hlt
stc
repnz
rcll
push
loopne
lret
lods
lahf
addr16
out
and
xor
mov
or
in
rclb
fneni(8087
addr16
pop
cs
insl
imul
rolb
mov
sbb
scas
push
stos
xlat
imul
mov
les
nop
sub
int
loope
fwait
movsb
dec
adc
mov
les
mov
scas
jae
in
lcall
pop
mov
or
xchg
shr
pushf
cmc
lods
fsubr
or
sub
lcall
cli
and
jb
adc
mov
ss
es
testb
std
fadd
jne
and
mov
into
mov
std
mov
adc
mov
mov
test
ds
das
out
jo
sub
push
mov
cmp
nop
ror
int
es
stc
insw
mov
cmp
cmpsb
add
icebp
xchg
mov
das
lret
push
fdivrs
and
scas
mov
sbb
into
nop
inc
sub
pop
aam
arpl
push
fldcw
fnstsw
ds
popf
and
xchg
aas
mov
dec
popa
mov
fildll
adc
xchg
mov
xchg
popa
bswap
imul
aas
divb
mov
repz
xchg
je
dec
push
adc
test
rcrl
adc
add
add
push
stos
test
js
add
lret
inc
in
xor
out
xor
and
mov
scas
lahf
mov
lea
rorb
imul
cli
ljmp
mov
jne
jns
mov
inc
inc
out
mov
shlb
in
inc
sub
pop
decb
sub
jecxz
ja
or
idiv
mov
jnp
mov
invd
scas
jle
loopne
in
lcall
mov
xchg
shlb
adcl
es
arpl
sbb
scas
leave
sahf
stos
subb
cwtl
sti
sub
movsl
jnp
and
add
icebp
aaa
xor
or
iret
shll
rclb
mov
inc
js
fidivl
adc
cwtl
mull
push
aad
sti
fisubl
imul
test
ljmp
mov
loope
leave
sbb
leave
repnz
loopne
push
and
lea
jbe
adc
mov
sbb
pop
rolb
loope
or
pop
push
add
aam
out
out
pop
out
std
push
inc
cmp
loop
xorl
outsb
scas
aad
push
and
leave
loop
pushf
adc
mov
jo
leave
cmpsb
sbb
enter
daa
lods
gs
jno
fldl
push
xor
ds
lods
repnz
lock
aam
cld
jb
lahf
in
ss
cmp
or
add
int
xchg
lock
pop
lea
js
stc
jecxz
pop
mov
xor
mov
xchg
stos
cmp
es
inc
scas
fs
pop
jge
stc
inc
in
subb
mov
and
push
rcr
dec
int
fnstenv
or
cwtl
pop
xchg
stc
lcall
and
mov
aad
xor
mov
inc
add
push
ja
jg
jge
mov
shll
mov
add
adc
fistpl
fsubrs
testw
push
in
shrl
daa
sbb
in
gs
sbb
push
xor
xor
cmp
test
adc
les
pusha
inc
cmp
cli
insb
and
xor
cmp
popl
repz
inc
loopne
push
movsl
adc
subb
cmp
jno
add
adc
notl
mov
ljmp
sub
push
sahf
mov
das
add
aas
aam
rolb
adc
jmp
jbe
rorl
and
aam
les
adc
push
mov
lea
sbb
pop
cmp
xchg
jae
pop
mov
aam
pushf
mov
loop
pop
cmpb
jnp
pop
inc
sbb
aas
cltd
rcrl
dec
cs
cmp
test
adc
fcomip
mov
aam
addl
cwtl
mov
xchg
clc
mov
cmp
out
dec
in
int3
fstpt
xchg
mov
cmp
inc
xchg
lods
lock
mov
das
mov
imull
pop
rcll
les
ficoml
dec
dec
pushl
add
icebp
imul
mov
and
dec
outsb
push
pop
cmc
add
shlb
out
aam
push
mov
push
pushf
jl
frstor
jae
xchg
jle
je
jbe
stos
popa
leave
inc
xchg
lods
ljmp
out
js
pushf
xchg
push
xchg
movaps
lcall
mov
test
xor
shlb
sbb
xchg
fildll
aam
sbb
enter
dec
jae
pop
stos
cmp
stos
cwtl
insl
insl
push
or
add
in
jo
pusha
xchg
xor
pop
or
xor
jle
mov
jl
mov
pop
dec
xor
int
mov
hlt
pop
or
mov
inc
dec
ret
push
cwtl
sub
pushf
add
bound
cltd
fnsetpm(287
dec
ficomps
lret
fidivl
sub
fisubs
aam
xchg
out
mov
dec
or
mov
push
jle
scas
xchg
in
xlat
sub
inc
mov
xchg
orb
and
andl
cs
sub
mov
mov
out
popa
call
and
std
loop
xchg
xor
cmp
and
in
enter
cmp
pop
and
xchg
fdivl
repnz
mov
or
inc
push
rorb
xchg
ret
sbb
int
imul
shll
lret
lds
jl
mov
cmp
and
imul
xor
cmp
jbe
stos
jge
mov
leave
aaa
ds
cli
inc
bswap
fiaddl
js
adc
out
push
xor
inc
and
scas
mov
inc
and
out
lods
movsb
or
push
push
mov
repnz
xchg
movsl
mov
daa
lods
mov
cmp
jl
push
mov
xchg
dec
jp
or
outsb
mov
movsl
negl
and
push
or
test
iret
out
movsb
inc
es
cli
std
scas
movsl
pop
mov
js,pt
xchg
mov
sahf
push
sbbb
and
push
cmp
aas
inc
adc
cli
popa
ljmp
sub
sbb
into
js
out
mov
push
aam
int
dec
xor
test
repnz
insl
faddl
xchg
out
sahf
fimull
repnz
jg
lock
out
shlb
cmpsb
ss
push
cmpb
jmp
nop
lret
push
sarl
fisttps
arpl
fcomps
cmp
jns
or
hlt
loop
std
mov
pusha
outsl
mov
bts
repz
data16
test
pop
out
sahf
out
mov
cli
lahf
jns
xor
xchg
mov
pop
xor
push
mov
sbb
loopne
push
cmp
and
shrl
push
adc
and
xchg
push
mov
sbb
and
fbstp
sub
outsb
shr
lcall
cs
pop
aad
mov
nop
push
out
dec
rcrb
push
les
mov
dec
lea
mov
pop
outsb
test
repnz
dec
cwtl
aam
jmp
rcrb
xlat
inc
add
pop
inc
sbb
and
aad
dec
movsl
test
je
or
jecxz
adc
push
std
sub
adc
sbb
jo
add
jg
fldt
call
lock
or
mov
scas
fld
and
adc
es
stos
jns
xchg
dec
cli
leave
cld
cmpsl
stos
xor
mov
inc
jbe
cld
sub
push
mov
jnp
pop
mov
adc
int3
shlb
sub
aam
pushf
xchg
ret
in
xchg
pop
push
pop
js
int3
and
adc
xchg
mov
cmp
mov
mov
xchg
dec
sbb
mov
add
mov
cltd
lods
adc
imul
mov
fdivrs
xchg
inc
rorb
mov
sar
xchg
or
jnp
shll
push
enter
insb
push
lods
or
add
add
mov
dec
xorb
or
or
das
or
lahf
jne
mov
fs
pop
add
cmp
mov
dec
shlb
mov
jo
pop
call
adc
sbb
mov
iret
fucomip
jnp
fsubs
cmpsb
jnp
cmp
cld
in
int3
sbb
sbb
jb
sbb
lds
or
sbb
stos
jp
test
adc
incb
sub
in
js
pusha
imul
cld
adcb
sbb
xchg
outsl
xorl
lcall
cwtl
add
jle
stos
data16
movsl
and
jnp
insb
push
push
lret
add
int
jg
cmp
mov
pop
mov
xor
xchg
inc
mov
clc
inc
ss
stos
push
shrl
fcmovb
je
xchg
sbb
stc
sbb
xchg
sub
lret
je
lret
lds
lcall
adcb
mov
cmpsb
leave
loopne
stos
hlt
call
mov
adc
shlb
and
add
icebp
les
pop
push
push
or
xchg
jo
jbe
scas
xchg
sub
and
aaa
daa
cmp
insl
ret
popf
mov
cmpsb
push
mov
in
enter
daa
stos
cmp
cmp
mov
dec
jmp
mov
movsl
xlat
jns
xor
ret
push
mov
add
test
lcall
shrb
fistl
sub
sar
fstpl
mov
jmp
aad
mov
cmp
popf
outsb
or
call
mov
sbb
dec
adc
icebp
imul
xlat
push
leave
int
test
sub
ret
xchg
lock
iret
pop
fsubrl
sub
sub
inc
sahf
jge
mov
orb
cmp
pop
testl
ss
jle
cmp
loopne
jno
int3
ficoms
cmp
mov
mov
sahf
imul
cld
xor
add
xor
jne
jmp
adc
pop
fwait
pop
stc
pop
push
scas
fs
pop
insb
lods
push
fnstsw
out
inc
mov
rolb
mov
lods
out
or
jmp
gs
and
cmp
pop
mov
pop
imul
xlat
add
xchg
or
inc
dec
dec
cmp
add
int3
cmp
push
in
add
ja
xchg
mov
jl
dec
das
push
lahf
inc
mov
out
les
add
mov
pop
lea
cmp
std
int
xchg
sub
pop
and
adc
or
pushf
test
jmp
dec
add
cmp
mov
cmpsl
aas
xlat
xorl
push
or
jno
xor
dec
std
shll
in
cwtl
das
stc
cmp
push
pop
sbbl
fcmovnu
imul
jecxz
mov
into
lock
imul
mov
gs
pop
shll
xor
outsb
testb
jo
cmpsl
stos
mov
imul
mov
lret
mov
rclb
mov
xor
rcl
inc
jbe
sub
xlat
aam
aaa
ljmp
hlt
and
clc
dec
rorb
cld
sub
pop
sti
dec
popa
idivl
lods
shlb
ds
mov
ret
pop
lahf
movntq
jns
in
mov
mov
xor
fcom
cs
push
dec
nop
test
repnz
xchg
mov
cmp
cli
mov
mov
push
dec
rolb
sbb
mov
xor
dec
lods
xor
xor
mov
add
mov
mov
cmpsl
orb
in
inc
and
gs
push
cmp
or
jne
add
mov
xor
out
pop
ret
fbld
fisttpll
jns
out
in
mov
imul
jle
aam
xor
or
jp
adc
mov
arpl
mov
pop
mov
aaa
in
jge
pusha
push
outsl
jmp
sbb
int
jo
adc
push
dec
add
mov
into
popf
fsubs
pop
push
insb
push
subl
mov
lcall
mov
adc
fcomip
ret
mov
inc
cltd
push
test
add
cmp
insl
or
mov
or
pop
xchg
jo
pop
sbb
xor
mov
pop
adc
dec
rolb
mov
fisubrs
leave
push
xchg
inc
hlt
xor
arpl
cmp
jge
lret
lea
aaa
mov
xor
sub
int3
mov
inc
pop
jae
lods
push
in
das
jl
aaa
fwait
fwait
jo
loopne
scas
jb
leave
and
mov
and
aas
cmpsb
mov
add
daa
stos
insb
jae
fnstenv
cmp
xor
pop
sti
ds
inc
movsl
add
popa
cmp
mov
xor
push
gs
inc
inc
nop
sbbl
js
sub
sbb
punpckhdq
jge
sub
insl
push
cmp
das
outsl
outsb
jo
cmpsb
adc
mov
sbb
call
push
add
mov
outsl
mov
push
fisubrl
int
in
sub
add
adc
lods
lcall
add
sub
insb
sahf
and
inc
test
push
incl
out
jecxz
mov
cmp
aad
aad
out
outsb
and
enter
sbb
cmp
fwait
ds
mov
pusha
lret
pop
shrl
mov
popf
mov
les
cmc
enter
mov
or
jne
loop
insb
and
into
pusha
cld
fs
repz
mov
lods
cmp
mov
movsl
out
push
gs
add
mov
inc
or
aaa
gs
test
shll
sub
fadds
adc
addb
mov
mov
cmp
and
sub
pop
sbb
jo
fs
dec
outsl
mov
jmp
mov
nop
pop
push
stos
dec
mov
imul
in
les
nop
mov
lea
jbe
adc
ret
pop
aam
fistl
sbb
adc
stos
fstps
sub
inc
adc
inc
dec
loop
aas
jbe
lods
jb
push
mov
jecxz
mov
repnz
js
push
mov
add
mov
repnz
xor
add
int3
mov
js
mov
add
lock
fldl
mov
sbb
stos
and
inc
iret
roll
loop
arpl
add
mov
lock
andl
test
cld
jle
cs
movlps
mov
mov
bound
push
in
jecxz
sbb
in
aam
es
or
mov
fstl
xchg
cmp
mull
lret
sub
out
mov
jne
push
sahf
jne
cmovbe
fldl
repnz
mov
test
into
pop
xchg
loopne
dec
mov
jg
xchg
cmpsl
sbb
mov
dec
pop
lods
negb
or
repnz
add
ss
ret
push
xor
mov
js
or
mov
inc
push
je
inc
int3
cmp
mov
ja
sbb
inc
mov
mov
mov
mov
ss
jne
dec
jno
loope
jo
cmp
dec
jns
xorl
movsl
adc
mov
movsb
lret
stc
push
or
leave
movsb
addr16
adc
sub
mov
mov
out
lret
add
in
sub
mov
fistpll
jne
xchg
scas
stos
lods
jmp
sbb
out
out
push
jbe
aas
popf
decl
and
stos
inc
mov
dec
lods
test
hlt
mov
jnp
hlt
aad
lcall
adc
out
iret
cmp
push
rcrl
and
inc
movsb
je
jae
xor
or
bound
shll
fisubrl
xchg
mov
mull
dec
fidivrs
cmp
mov
xor
mov
into
gs
jle
dec
arpl
push
or
jge
sub
jnp
xchg
or
mov
pop
int3
fwait
dec
sahf
pop
mov
mov
xor
pop
mov
inc
je
cmp
mov
lods
and
mov
adc
dec
mov
in
and
test
call
jno
sub
dec
cmc
fnstsw
xlat
aam
or
inc
and
lahf
popa
dec
sub
sbb
push
xor
mov
pop
sub
js
fiaddl
pop
pop
mov
cmpsb
loope
pusha
fsubrs
pop
or
mov
sti
outsb
shrl
dec
rorb
dec
mov
mov
lcall
jbe
push
fnsave
xor
sub
fstpl
xchg
notl
mov
adc
faddl
fsubs
ret
sbb
push
pop
js
ret
out
jg
arpl
mov
les
mov
mov
sbb
and
and
cs
cmp
push
inc
aas
testl
out
roll
sbb
pusha
adc
cmpsl
and
xlat
xor
loopne
test
jb
stc
test
fs
inc
adc
fcmovb
gs
lods
and
data16
out
jmp
cli
cmp
aaa
cmp
sbb
or
mov
or
mov
maxps
xor
push
arpl
sbb
xor
add
or
xchg
push
sbb
xchg
movaps
notb
dec
xchg
push
add
mov
cs
xor
lods
nop
loop
test
inc
loopne
jl
in
leave
les
pusha
pop
mov
mov
repz
nop
cmc
lcall
adc
jae
jae
dec
scas
shr
lret
or
aas
inc
xchg
clc
cmp
mov
xchg
jb
pushl
je
fmul
jecxz
int
notb
out
icebp
cwtl
movsl
rclb
cmp
mov
hlt
stos
dec
xchg
xchg
cmp
xorl
data16
inc
test
mov
shll
and
push
or
push
jg
es
stos
insl
cmp
fmuls
jp
cmpsl
test
push
mov
lds
pop
cld
test
lret
push
sahf
mov
jno
in
shr
mov
mov
adc
in
push
test
inc
fnstsw
cmp
les
jp
pop
ljmp
jbe
xchg
pop
jecxz
xchg
adc
add
ficoms
jns
cmp
movsl
int
add
or
mov
scas
add
and
push
shrb
sbb
adc
push
stos
push
sbb
xchg
or
add
push
int3
sar
fadd
adc
push
pop
sub
or
in
push
cmp
mov
mov
inc
pop
xor
ja,pt
adc
inc
push
sahf
mov
fwait
in
mov
jne
sti
mov
out
sbb
imul
nop
stos
xchg
pop
push
fldcw
lret
or
jp
sti
in
sbb
idivb
das
push
jle
push
in
mov
pusha
cmp
rcr
aaa
mov
xorb
pop
xlat
adcb
inc
push
cmp
popf
es
cmp
ljmp
and
lret
xchg
inc
pop
jnp
adc
movsl
addr16
push
sbb
iret
pushf
lock
imul
inc
scas
jmp
inc
inc
aas
addr16
push
push
pop
mov
loopne
imul
xor
and
ja
sbb
test
push
leave
add
fcomp
fnstenv
cwtl
sarb
imul
add
sbb
cmp
or
push
jp
int3
xchg
popa
push
mov
push
xor
mov
xor
xor
push
and
loopne
cmp
mov
sub
cmpsb
cmpsl
fmull
icebp
int3
enter
daa
test
sub
aas
sti
pop
jno
xchg
ss
xor
ss
pushf
ds
addr16
sahf
mov
add
lahf
adc
push
push
jo
test
sti
test
mov
pop
push
fs
repz
lcall
loope
addr16
sub
and
cmp
xor
or
sbb
aam
outsl
orb
clc
sbb
outsb
out
adc
lret
jns
push
loopne
cld
int
or
sub
sub
adc
lcall
in
fsubrl
call
sahf
data16
test
movaps
sub
in
stc
xorb
ret
lods
mov
ret
sub
push
fcoms
in
testl
lret
jp
fwait
dec
lahf
mov
fcompl
std
out
into
mov
sbb
push
mov
scas
outsl
mov
loop
lods
lods
stc
cmp
inc
cmp
and
and
inc
outsl
cltd
out
add
movsb
xor
xchg
test
jb
push
mov
pop
mul
or
jbe
call
outsb
cmp
out
adc
xor
add
into
sbbl
push
icebp
xlat
mov
sub
mov
in
inc
pop
sbb
stos
stos
xchg
cs
xchg
arpl
ja
mov
mov
mov
inc
repz
fstps
shrb
mov
movsb
repz
je
mov
clc
lea
fucomi
outsb
addl
lcall
lock
adc
outsl
hlt
pushf
negl
jmp
scas
or
loopne
inc
push
add
inc
test
mov
and
dec
xor
adc
pop
cmp
sti
std
mov
fs
xor
inc
pushf
andl
fldt
mov
nop
sbb
das
and
sub
and
mov
lret
imul
out
test
cmpsl
or
mov
pushf
cltd
jbe
aam
jg
in
inc
cmp
xchg
idivb
mov
nop
repz
shrb
sub
xchg
lahf
aam
dec
ret
sub
sub
lea
frstor
dec
clc
pushl
or
mov
in
cmp
jecxz
add
cmp
addr16
cmpsl
xchg
imul
add
lods
pushf
cltd
mov
sub
rorl
loope
stc
dec
mov
xchg
test
inc
and
sar
mov
push
stos
inc
out
cwtl
push
cmp
add
jnp
xor
jp
xor
cmp
mov
lret
arpl
pop
out
jmp
testl
mov
sub
cld
sbb
jne
push
gs
fdivrl
testl
in
iret
xchg
xchg
push
mov
out
scas
and
vpshufd
lods
jp
jle
mov
mov
mov
test
sti
jmp
cmp
cmpsl
pusha
xlat
ret
ja
dec
xchg
push
je
jmp
mov
popf
sub
xchg
cld
push
xchg
popf
dec
jns
mov
sub
test
and
insb
cld
jmp
jnp
hlt
add
fwait
xlat
mov
iret
sti
jle
ret
jle
aaa
mov
inc
mov
push
fildl
mov
or
sub
mov
iret
jecxz
xchg
and
jne
adc
dec
stos
fiadds
daa
out
popa
dec
and
mov
xlat
andl
sbb
arpl
out
mov
cld
jne
jge
xchg
push
sbb
shrl
add
loopne
int3
jno
mov
add
lahf
push
xchg
mov
fdivs
cwtl
pop
scas
bswap
adc
addr16
movsb
ret
repz
dec
xor
cmpsb
sub
in
push
ds
enter
daa
cmpsl
pop
and
jb
adc
es
jl
inc
pop
dec
movsl
out
es
test
and
push
mov
cld
push
test
push
inc
icebp
xchg
add
int3
loope
pop
ja
js,pt
inc
jo
fnstenv
or
inc
xchg
cvttps2pi
mov
add
adc
inc
push
rorl
and
sbb
ljmp
jecxz
bswap
mov
dec
loopne
push
out
lcall
ja
xlat
insl
outsl
sub
subb
inc
popf
test
addl
dec
jne
mov
xor
mov
sbb
and
cmpsb
pop
ss
scas
xchg
int3
adc
test
adc
orb
loopne
insl
adc
cmc
sbb
hlt
and
cmp
loop
sbb
stc
repz
in
cmp
jle
aaa
imul
mov
and
cli
sahf
ret
test
pop
and
or
jl
inc
pop
sahf
gs
adc
movsb
xchg
mov
adc
xchg
imul
jbe
xor
negb
loope
cmp
xlat
enter
in
mov
lods
lret
mov
mov
cs
mov
mov
cmp
stos
inc
jmp
fsts
and
mov
int3
mov
inc
lea
out
mov
mov
in
cmpl
cs
jmp
push
inc
pop
push
stos
roll
jae
inc
mov
dec
push
jb
lret
clc
jecxz
je
add
jecxz
icebp
xor
sbb
cmp
cwtl
sbb
pop
mov
adc
mov
rcll
add
fistl
out
sbb
lock
test
mov
or
shl
cmp
insl
or
scas
cmpsl
cmpsb
xchg
or
sar
fucom
lret
pop
xchg
mov
sahf
mov
mov
scas
cld
test
sub
xlat
sbb
stos
ljmp
cs
sahf
fisttpll
jns
xchg
clc
dec
iret
ljmp
lods
insb
cmp
mov
lret
xchg
mov
sti
push
das
xor
packsswb
pop
add
out
sahf
cltd
rorb
mov
cmp
xchg
mov
dec
out
pop
loopne
sub
sbbl
push
add
stos
xor
jecxz
daa
test
lcall
aam
xor
inc
mov
not
pop
xor
xchg
xor
mov
cwtl
pop
mov
stos
cmp
mov
dec
jg
pop
inc
jle
fisttps
out
fwait
inc
mov
arpl
test
mov
xchg
jecxz
jb
cmc
ret
push
jns
xor
in
popa
jp
movsl
inc
jae
lods
loop
sub
shlb
addr16
test
mov
cmp
mov
into
js
xlat
andb
jb
mov
xchg
sub
out
jle
rolb
mov
popf
je
push
mov
push
add
and
mov
insb
addr16
jnp
cltd
push
scas
ret
dec
pushf
push
loop
sbb
push
stos
mov
pop
adc
pop
outsb
out
roll
lods
jae
sarl
inc
inc
ja
or
cmpsl
xor
inc
dec
mov
fiaddl
xchg
xchg
int3
lcall
push
aam
fisubs
jo
shrb
cmp
leave
xor
sbb
inc
mov
data16
popf
stos
sbb
std
aaa
mov
cmp
test
int3
pop
or
pop
das
mov
push
js
bound
imul
and
push
mov
movsb
dec
pop
leave
push
cltd
push
jb
lods
mov
enter
daa
cmpsb
pop
cmp
fisttpl
xchg
sub
dec
adc
insl
ds
clc
jp
and
les
cmp
sti
push
std
mov
inc
push
xchg
jg
inc
xorb
loope
pop
sahf
push
adc
push
daa
pop
sbb
mov
bound
loope
loope
sub
sub
mov
stos
inc
adc
sbb
mov
xorb
sbb
add
pop
test
stos
dec
xor
int
ret
mov
pop
ljmp
dec
repnz
xorb
sub
pop
sahf
lods
inc
xor
adc
data16
cli
arpl
mov
pop
mov
pushf
mov
ss
push
cmp
xchg
pop
testl
lret
rorl
sub
push
cld
ret
cmc
in
adc
and
loop
mov
add
out
int
mull
xchg
cmp
rcll
xor
mul
or
in
call
dec
push
loopne
adc
adc
aam
imul
xchg
add
int3
pop
xchg
mov
in
cmp
ror
sub
inc
mov
sbb
xlat
sti
or
imulb
jne
pop
aad
mov
nop
jae
jno
or
mov
sbb
push
mov
das
call
or
lret
cmp
js
push
pushf
dec
cmp
jmp
ret
cmc
addr16
inc
sub
add
aas
repnz
mov
je
cltd
pop
jecxz
jmp
out
std
adc
dec
cwtl
inc
clc
mov
je
mov
fiadds
dec
push
add
fcmovnb
test
mov
jno
mov
push
lock
ja
das
fidivrs
mov
clc
push
aas
and
mov
inc
addb
icebp
mov
in
cmpsl
movsl
mov
mov
dec
add
cld
sub
pop
lret
lret
mov
and
xchg
pop
into
or
shlb
ljmp
es
sub
inc
fwait
and
fnsave
aad
xchg
aaa
loop
ljmp
mov
scas
out
sub
mov
cmpps
add
arpl
cltd
test
xor
out
and
pop
pop
test
jge
xchg
push
sbb
outsb
or
stos
and
cmp
jle
dec
add
mov
loope
xor
decb
insl
lret
inc
xor
cmp
and
mov
inc
mov
fimuls
pop
gs
ja
adc
jb
add
arpl
or
pop
pop
fwait
jb
xchg
dec
ret
jne
pop
jb
dec
pop
jnp
mov
fsubl
push
jns
pop
jo
push
dec
adc
hlt
sbb
out
mov
sub
mov
push
ret
mov
or
aad
dec
mov
stc
mov
pusha
or
xchg
insb
xchg
sti
or
scas
xchg
dec
incl
orb
mov
cmpsl
sti
mov
push
pop
pop
insb
shlb
scas
mov
push
sub
inc
iret
mov
and
pop
movsl
iret
mov
mov
data16
bound
lods
in
ror
inc
push
int
mov
xchg
and
popa
imul
sbb
mov
mov
enter
rcrl
leave
stos
sbb
arpl
mov
mov
aaa
ja
lock
sbb
int3
inc
out
mov
scas
nop
push
pop
adcb
les
dec
scas
int
cmp
lea
cmp
movsb
fsts
or
mov
pop
in
in
pop
enter
daa
movsl
sbb
jno
mov
jl
call
pop
arpl
dec
and
jg
lahf
fnsave
push
shrb
mov
outsl
inc
setne
push
push
pop
lds
enter
outsl
push
jle
loope
push
sti
sub
insl
leave
cmp
outsb
pop
jmp
push
shl
shl
icebp
lea
inc
push
sbb
and
jp
sub
int
je
sub
add
pop
lea
xchg
push
fnstenv
call
sub
cmp
sahf
dec
ss
test
out
das
cwtl
enter
test
mov
mov
cmp
repz
cmp
inc
xor
testl
into
shll
mov
adc
mov
adc
xor
mov
loop
nop
out
stc
popa
jb
fdivrl
dec
data16
lods
mov
loope
out
imul
add
hlt
xor
gs
call
decb
push
pop
gs
hlt
sub
pop
inc
pop
sti
adc
push
pop
imul
das
and
push
inc
or
arpl
cmp
stos
or
inc
inc
inc
sub
jmp
pop
in
xchg
subb
data16
dec
imul
dec
adc
imul
sarb
aad
jne
int
inc
leave
xchg
movsl
lea
insb
or
pop
push
mov
pushf
clc
gs
jmp
repnz
pop
cwtl
sbb
gs
aas
xchg
out
jb
fs
dec
out
push
je
xorl
std
mov
aas
fnsave
mov
lahf
fcomi
or
dec
lods
or
jno
pop
das
mov
push
jg
scas
sti
scas
and
hlt
push
rorl
fcomi
insl
fadd
rorb
adc
jno
mov
and
push
cld
push
push
xchg
lret
cmp
hlt
movsb
mov
mov
in
sbb
sub
mov
lock
mov
mov
clc
mov
js
jbe
inc
ljmp
stos
lods
inc
mov
fsubrp
nop
ret
mov
push
in
adc
add
mov
movsb
roll
push
xchg
flds
mov
out
lret
jno
sbb
movsl
roll
arpl
imul
or
add
mov
repz
xor
xchg
xor
cmp
mov
xchg
pop
cmpsl
mov
and
pop
ja
sbb
orl
or
lahf
xchg
fwait
mov
rcll
test
icebp
out
xchg
bound
jns
das
loopne
mov
xor
xor
or
rolb
push
inc
or
add
inc
mov
jl
jle
addr16
iret
xchg
pusha
test
pop
addr16
into
test
jmp
adc
or
inc
fmuls
mov
out
imull
sub
cmp
xor
scas
mov
mov
mov
inc
jb
mov
pop
fcoml
fildl
xor
push
fisttps
popf
dec
add
and
fisubrl
push
sbb
dec
outsb
imul
xchg
fsubrp
int
aam
jecxz
xchg
mov
shrb
leave
and
or
cmc
push
cli
arpl
add
pop
xchg
sbb
jne
aaa
sarb
cmpb
mov
stos
lcall
aad
xor
pop
add
scas
lods
mov
and
fwait
scas
cmp
int
movsb
fs
data16
cmpsb
mov
enter
mov
daa
movsb
lretw
hlt
es
mov
jl
js
dec
repnz
out
movsl
das
push
mov
lahf
cld
add
push
mov
sub
push
daa
movsl
leave
inc
sahf
sti
xor
adc
dec
sarb
xor
push
push
dec
insb
loope
jmp
sub
sbbb
jmp
outsb
ret
adc
rcrb
push
test
es
dec
pusha
add
cmp
xor
clts
in
lret
jmp
lock
pop
or
adc
xor
scas
shrl
sub
aas
into
sahf
repnz
and
orb
jg
sbb
cli
mov
xchg
and
out
ss
adc
std
push
dec
testl
ficoms
mov
lods
cmp
push
test
cmc
jb
shlb
outsb
inc
outsl
add
in
loop
lcall
addr16
or
imul
hlt
mov
mov
out
xchg
idiv
aaa
xchg
in
jecxz
cmp
scas
jle
subl
cmp
loopne
cmp
mov
imul
adc
xchg
sub
sbb
std
or
xlat
test
sub
jp
bnd
in
repnz
sbb
push
xor
aad
mov
sub
aaa
inc
aas
inc
jecxz
notl
loopne
outsb
repz
imul
negl
ljmp
or
pop
push
ja
adc
inc
clc
pushf
mov
out
pop
cmp
lods
inc
icebp
mov
mov
dec
dec
pop
test
je
mov
loopne
out
dec
std
bound
cwtl
dec
sarl
mov
sub
sub
decb
inc
pop
cmp
int3
cmp
das
pushf
jo
mov
inc
jmp
rcr
aam
es
pop
insl
mov
xor
cmpsl
mov
fnstsw
clc
cld
mov
lret
test
leave
dec
and
mov
xor
sub
or
gs
lods
in
clc
jmp
fs
mov
fucomi
sbb
lea
and
out
repz
push
xchg
test
mov
jo
jmp
jnp
ret
or
xchg
lcall
cltd
hlt
dec
xchg
negl
adc
rcrl
negb
outsb
stos
jmp
xor
fmuls
push
or
xor
sahf
popa
or
stos
xor
mov
aas
mov
je
sub
out
fisttpl
movsl
mov
inc
inc
lcall
rolb
dec
mov
sbb
jae
cmp
adc
jns
mov
sbb
xchg
xchg
fucom
xor
cmc
and
mov
repz
push
xchg
outsl
mov
push
xchg
mov
gs
jle
enter
nop
push
pusha
inc
cmc
sbb
cmp
imul
xchg
subl
lods
push
or
lcall
lock
stos
cmpsl
stos
and
cwtl
insb
test
data16
and
push
mov
xchg
xchg
test
mov
pop
adc
inc
out
shlb
xlat
mov
or
sbb
ficompl
add
shl
scas
sbb
mov
imul
push
fimuls
data16
jns
inc
sub
and
inc
leave
cwtl
into
and
inc
mov
pusha
jbe
jae
jge
adc
cmc
aaa
cmc
insb
fisttps
jne
mov
dec
jecxz
int3
sbb
ds
and
xor
jp
cmpsb
scas
mov
dec
cmp
push
movsb
out
mov
push
xchg
ss
in
mov
xchg
enter
daa
mov
je
jno
roll
dec
popa
adc
ds
mov
dec
lahf
sbb
test
repnz
inc
sub
cwtl
mov
adc
pop
aad
xchg
push
shll
sub
imul
lret
outsb
and
loopne
shrb
enter
or
add
add
stos
repz
or
out
inc
or
push
cmpl
xlat
push
ljmp
push
adcb
imul
testl
sub
inc
mov
mov
inc
cmp
push
stos
cltd
mov
adc
inc
fiaddl
cmp
mov
fsub
lret
dec
rorl
cltd
sbb
pop
loope
stc
imul
xor
outsl
jecxz
mov
stc
iret
pop
jae
repnz
fists
mov
or
mov
out
inc
xor
push
xor
inc
movsl
or
adc
gs
jbe
loopne
repnz
orl
adc
or
adc
daa
pop
add
or
jge
dec
cmp
out
xlat
les
xor
or
push
in
pop
outsl
test
adc
mov
aad
or
add
aad
daa
mov
inc
push
or
shrb
jmp
out
imul
iret
iret
mov
call
mov
les
jge
test
jmp
sahf
ficomps
pop
dec
inc
rcrl
inc
or
sarb
iret
xchg
shll
iret
enter
popa
je
dec
inc
jecxz
imul
std
or
dec
mov
mov
mov
xchg
adcl
fistl
daa
mov
cmp
mov
dec
xor
daa
cmp
das
jnp
lcall
aaa
pop
and
mov
lods
es
mov
insl
cmpsb
jge
dec
int
shlb
xlat
mov
icebp
iret
das
jae
stos
push
adc
sbb
push
mov
mov
stos
fs
sub
rcr
je
sub
inc
js
xlat
frstor
ret
hlt
mov
push
cmp
sbb
clc
bound
hlt
mov
ljmp
movsb
lods
sbb
aam
push
push
dec
xchg
int3
stc
loope
fwait
inc
push
pandn
add
ja
pushf
dec
fldl
xchg
xchg
iret
dec
mov
or
lret
sbb
outsl
scas
shll
dec
jmp
out
xchg
adc
lds
add
call
jnp
or
xchg
add
mov
sbb
dec
mov
xchg
pop
sbb
mov
dec
dec
mov
inc
fisubrl
or
cmpsl
lods
fwait
incb
imul
sbb
das
aaa
out
push
bound
jns
mov
jmp
out
cmp
mov
pop
add
js
test
add
cmp
arpl
push
pusha
fidivs
pop
fists
sbb
xchg
je
xchg
sub
inc
cmpl
mov
adc
xchg
push
fs
stos
jno
jl
xchg
xor
adc
jbe
dec
add
push
outsl
xchg
adc
mov
andb
sahf
sbbl
mov
shll
inc
push
pop
add
xchg
mov
inc
dec
mov
pop
xchg
sub
movsb
repnz
imul
scas
fisubrs
add
lds
mov
sbb
bnd
clc
leave
nopl
mov
arpl
inc
lea
xchg
sub
mov
or
cs
std
or
or
push
add
pop
xor
aad
cld
scas
push
and
inc
mov
cmp
and
xchg
mov
sbb
lret
daa
mov
test
jno
push
sarb
dec
rolb
ds
mov
and
aaa
lods
push
dec
ret
add
xchg
sbb
es
mov
push
test
les
pop
adc
fsubrl
or
loope
test
sub
sub
outsb
mov
adc
mov
mov
cmp
fbstp
out
push
push
repnz
lahf
sub
sub
or
inc
lcall
mov
jecxz,pn
sub
nop
out
cmp
insl
test
jae
addb
aam
jmp
in
lea
mov
loope
and
mov
cmp
jae
nop
testl
orb
lea
fsubl
cmp
add
cmpsb
xor
push
loop
dec
xor
xchg
cmc
fs
rclb
or
lods
jae
test
xorl
xor
mov
or
add
je
cli
gs
dec
xchg
loopne
mov
jp
pop
imul
add
xor
xchg
lods
mov
sbb
jae
jecxz
add
lret
sub
cmp
mov
enter
les
aad
out
xchg
xchg
inc
gs
fldenv
scas
testb
rcrb
jbe
mov
mov
insb
repnz
aam
sbb
sbb
and
bound
or
aas
outsb
jo
jb
sar
dec
dec
and
xor
jecxz
jno
imulb
std
mov
pop
cwtl
ret
mov
daa
jge
popa
sbb
subl
sub
inc
mov
sahf
add
das
pop
jbe
mov
aam
jge
rcrb
jnp
mov
dec
enter
mov
inc
es
cmpsb
xchg
lret
xchg
mov
sarl
mov
dec
data16
mov
mov
aam
insb
jmp
addl
std
sti
fisttpll
loope
popa
push
push
xchg
xor
ljmp
popa
lods
xorl
mov
mov
js
push
jbe
insb
jg
add
adc
xchg
js
dec
repnz
test
mov
mov
jns
rorl
test
stos
adc
or
lret
mov
mov
xor
mov
or
sysenter
sub
pop
es
mov
push
jbe
ja
dec
cmp
pop
lds
popa
das
or
imul
dec
dec
sti
push
jne
mov
mov
dec
addr16
xor
aam
scas
jns
jns
in
sub
xchg
xor
fwait
out
mov
sub
cmpsl
cltd
stos
add
jp
push
data16
mov
mov
inc
rcrl
xchg
in
ds
pusha
jns
out
xor
lods
xchg
inc
mov
jmp
jne
aad
inc
mov
push
mov
popf
aaa
sub
mov
mov
lock
lods
insb
adc
jnp
push
in
mov
pusha
push
inc
xchg
adc
xor
xor
pop
cmpl
inc
push
or
push
leave
and
cwtl
xchg
jg
out
sbb
add
imul
jge
mov
sub
xor
add
leave
daa
hlt
leave
xchg
adc
orl
mov
or
test
lcall
and
mov
jae
clc
or
and
ja
cmp
repz
fisttps
ss
stos
scas
dec
mov
xchg
cmp
xchg
pusha
movsb
add
std
aad
cmp
cmc
in
cmpb
daa
mov
nop
mov
jl
and
dec
aas
cmp
inc
sbb
and
mov
push
sbb
lahf
test
mov
mov
test
pop
lods
add
dec
push
js
pop
cmp
push
pop
fsubrl
hlt
fucom
rorl
in
sub
xor
mov
shlb
mov
insl
adc
adcb
roll
cmpb
cld
xchg
push
cmc
cwtl
das
int
and
sub
imul
lcall
jnp
fldcw
ljmp
loope
sbbb
jne
and
mov
mov
into
rorl
inc
add
lret
sub
mov
cmp
sbb
push
into
mov
int
xor
pushf
ljmp
sub
loop
out
inc
stc
cmp
inc
mov
pop
movsl
popa
data16
xchg
and
lods
out
sub
cli
shlb
mov
xchg
cmc
push
or
adc
data16
loopne
xchg
pusha
pop
rol
adc
pusha
xchg
leave
out
adc
outsb
cmpsl
add
outsl
enter
aaa
cmp
dec
ja
sahf
adc
mov
xor
xchg
cs
nop
mov
std
add
sub
ffree
add
push
repz
aad
mov
call
mov
or
pushf
movsb
pop
xchg
jmp
pop
outsl
pop
and
sub
inc
lcall
push
xchg
jb
or
je
push
jecxz
mov
mov
cwtl
jge
cs
push
mov
addl
inc
cwtl
int
cltd
push
and
fnstsw
das
cmp
mov
mov
mov
ror
rol
es
pop
adc
movl
cmpsl
mov
mov
jge
cwtl
cld
add
fcmove
negb
jns
enter
fnstcw
rolb
jo
insl
dec
adc
adc
cld
push
sarb
je
enter
mov
jb
cmp
fimull
xor
std
aad
sbb
inc
xchg
pop
pop
pop
push
push
outsl
setge
addr16
or
test
dec
dec
mov
inc
les
pop
cmp
xchg
negl
sub
sub
pusha
mov
push
stos
int3
xor
push
lods
dec
xchg
add
sub
imul
rorb
scas
jne
mov
mov
xor
or
std
ja
pusha
inc
dec
xor
adc
fwait
pop
xor
sbb
adc
bound
lcall
mov
xchg
jg
mov
sub
mov
cwtl
popa
jp
les
shll
xor
test
sub
push
fmuls
sbb
jmp
inc
xor
dec
push
push
mov
popf
pop
nop
jge
lret
and
stos
stos
push
mov
inc
insb
jmp
pop
scas
adc
add
iret
xchg
shrl
mull
mov
bound
inc
push
xchg
push
dec
cmpsb
fidivrl
out
xchg
jo
sbb
jmp
add
jne
rol
outsb
rorb
mov
sbb
push
std
test
hlt
and
adc
jbe
xor
sub
xchg
aaa
xor
ret
lahf
or
cmpsl
pop
dec
aad
push
lret
xor
mov
sub
lret
xchg
cmpsl
cmp
sbb
nop
lods
pop
push
jae
dec
cmpsb
mov
dec
test
rclb
mov
sub
jno
or
jl
add
scas
repz
adc
pop
and
xchg
fistpl
out
jle
test
push
loopne
inc
fidivrl
add
mov
js
out
pop
xchg
ret
test
xchg
cmp
call
and
cmp
or
dec
adc
ds
int3
ds
sbb
in
xorb
pop
jle
clc
outsl
xchg
int
inc
pop
sub
stos
pop
or
mov
faddl
daa
sahf
jle
mov
mov
addr16
xchg
mov
lds
mov
mov
dec
nop
ss
aaa
mov
jne
cs
cltd
pop
testl
lret
push
mov
mov
mov
into
mov
into
inc
xor
outsl
cmpb
loop
enter
xchg
fs
jns
adc
popf
js
inc
jbe
mov
das
mov
cli
add
push
cmp
or
or
cwtl
ds
mov
daa
jne
loope
maxps
sub
adc
push
cmpsb
adc
add
jle
xchg
xor
rcrl
jmp
push
sub
mov
fucomi
sahf
add
sti
and
inc
cs
or
scas
in
nop
xchg
or
dec
inc
stos
xor
lea
les
sub
fmuls
mov
xchg
call
pop
test
pop
sarb
pushf
dec
lods
pop
jmp
pop
mov
fisttpll
inc
push
jo
inc
pop
fisttpll
lods
xor
xor
push
mov
jecxz
dec
lahf
div
and
push
cwtl
cwtl
cmp
loop
adc
icebp
sbb
push
cli
fneni(8087
sbb
mov
outsb
sti
lock
dec
mov
inc
fidivrs
fildl
sbb
adc
inc
push
dec
mov
jo
mov
push
mov
xor
gs
loopne
iret
mov
pop
mov
sub
xchg
daa
aam
xchg
mov
imul
sar
clc
xlat
and
sub
popa
hlt
mov
lods
pop
add
mov
jg
cltd
xchg
mov
cmpsb
or
cld
aad
add
lea
out
pusha
mov
xchg
es
dec
rorb
test
pushf
xchg
arpl
or
mov
pop
pop
pop
loope
stos
mov
adcl
pushl
dec
xor
dec
push
or
push
icebp
xor
push
xchg
jecxz
lret
mov
out
adc
cld
insl
dec
and
movsl
inc
lahf
mov
push
fwait
mov
sbb
cmp
jb
xor
out
jg
cli
test
jns
ficoms
xchg
into
scas
cltd
out
sti
cld
sub
popf
aad
call
sbb
mov
and
daa
jle
aam
in
jl
pusha
scas
addr16
outsl
mov
jp
or
add
gs
push
adc
out
test
add
push
and
enter
ss
dec
push
insb
push
fbld
scas
js
mov
adc
shl
repz
inc
adc
movsl
jae
xchg
dec
inc
pop
jne
or
add
fldl
mov
xchg
sub
mov
fcomp
sbb
lret
lds
ds
mov
outsl
decb
hlt
insb
pushf
jb
pop
psrad
mov
jge
xlat
sbb
xchg
mov
aaa
icebp
inc
mov
add
mov
xchg
push
lods
mov
shlb
lcall
call
xchg
cmp
pusha
cmp
cmpsb
inc
lods
add
dec
mov
enter
daa
lahf
jge
jno
mov
dec
dec
sbb
idivl
and
or
ret
test
push
inc
daa
inc
imul
xor
jo
js
add
pop
shll
pop
loope
cli
stc
sub
pop
xchg
cmp
pop
jb
inc
imul
sub
cmpb
movsl
add
stos
xchg
xor
push
sti
mov
xchg
sub
adc
pop
xchg
jnp
mov
adc
ret
sub
idivb
fwait
ljmp
ret
cmp
mov
fs
mov
inc
out
orl
test
push
cmp
movsb
push
test
mov
shr
xor
sbb
into
test
cwtl
cmc
push
xor
xor
dec
pop
loop
mov
stos
fidivs
idivb
xorw
mov
popa
loop
jle
jns
ss
inc
xor
decl
in
repz
fisttpll
test
loopne
mov
pop
call
or
pop
sbb
jno
test
lods
mov
sbb
and
add
sub
addr16
or
scas
sti
rcrl
adc
div
jbe
jo
push
dec
mov
and
or
xor
sbb
enter
cmp
xchg
or
jno
adc
xor
cli
iret
stos
jmp
xlat
pop
push
int3
inc
repz
js
adc
dec
push
add
dec
mov
jecxz
adc
es
and
ficompl
cwtl
repz
add
cmp
or
dec
mov
sbb
daa
in
std
lock
add
sub
stc
pop
cmp
popa
cmp
shrl
out
add
repnz
inc
mov
outsl
cmpsl
sahf
mov
sub
cld
push
lahf
insl
lret
aam
sbb
and
ret
pop
test
cmpsl
aad
shrb
push
mov
out
out
aam
adc
xor
movsb
ffree
inc
in
clc
adc
mov
popa
or
idivb
loop
sbb
call
cltd
in
cvtdq2ps
ret
inc
add
js
mov
mov
adc
xchg
sub
test
mov
pushf
sbb
dec
stos
pop
add
ficomps
cmpsl
or
pop
inc
mov
xor
xchg
test
mov
mov
pop
orb
ja
sbb
dec
pop
lea
sbb
sbb
pop
dec
test
xchg
mov
or
out
into
xchg
cmpsl
bound
xchg
jecxz
outsb
xchg
sbb
into
mov
or
adc
push
mov
add
jmp
or
ja
mov
fisttps
lea
add
sbb
enter
sbb
popf
lods
or
mov
pusha
fnstenv
cmp
repnz
jnp
push
test
sbb
sbb
push
xor
ret
pop
pop
es
pop
jae
xor
inc
pop
xlat
cmp
push
inc
lret
rcr
into
cmpsl
xchg
test
pop
imul
rol
and
repz
ret
leave
jmp
div
mov
push
arpl
arpl
mov
imul
dec
ret
aaa
mov
xor
xor
lds
cmp
dec
int3
mov
in
pop
cmpsl
or
imul
cmc
mov
out
cld
and
sbb
movsb
cmpsb
addr16
push
adc
and
lds
in
xor
jg
daa
sahf
lock
cmp
xchg
xchg
jl
cmp
test
pop
pop
mov
pop
xchg
or
adc
insb
push
xchg
or
test
jmp
divb
push
mov
mov
pop
adc
outsb
loope
push
sub
data16
xor
inc
fcoml
hlt
sbb
or
or
adc
mov
mov
adc
jns
int
ds
sub
enter
jl
lcall
lods
cmc
mov
sahf
les
ss
imul
xor
aaa
push
inc
mov
fdivs
xchg
mov
cmp
pop
iret
and
jg
mov
roll
dec
sbb
dec
mov
cmc
sbb
push
xor
jle
outsl
ds
xchg
loop
pop
sbb
fs
push
push
pushw
inc
add
adc
gs
imul
sbb
mov
or
cmp
gs
sub
pop
movsl
inc
pop
push
lcall
stos
mov
add
adc
push
addb
fnstcw
mov
cmc
fstpt
pop
push
xlat
push
adc
not
jo
jl
cld
in
je
adc
add
lea
dec
nop
dec
cld
inc
dec
add
xchg
inc
mov
jge
inc
aam
les
es
repz
clc
dec
lea
call
add
pop
and
xor
and
mov
pop
or
repz
inc
xchg
lcall
aas
ljmp
dec
daa
adc
jecxz
cmp
idivb
dec
lods
aam
scas
pop
inc
mov
sbb
mov
sarl
ds
pushf
mov
int
lock
imul
mov
mov
data16
ljmp
xchg
insl
sub
mov
mov
sub
xchg
icebp
add
cld
adcb
mov
fucom
or
pop
ss
pop
movb
sar
int
sub
cld
cmp
into
out
mov
mov
stos
addr16
mov
iret
xchg
das
or
ljmp
xchg
mov
clc
xchg
das
pop
notb
lahf
enter
cmp
pop
imul
test
jmp
test
cmp
inc
push
negb
inc
dec
add
gs
pop
mov
jle
cltd
pop
add
xchg
ret
out
inc
add
cmp
mov
les
loope
fisttps
and
push
call
mov
rcrb
push
or
cmp
mov
test
lahf
mov
fwait
ljmp
jne
inc
cmpsl
mov
jbe
out
lods
cmpsl
pop
bound
sub
jns
aam
in
dec
push
xchg
insb
push
pop
out
push
xchg
sub
xchg
popa
andl
gs
dec
xor
pop
cltd
ret
lahf
fimuls
adc
cld
in
dec
loop
in
pop
fildll
xchg
jl
sti
fisttps
addl
aaa
popf
rcrl
xchg
mov
lahf
sub
sbb
insb
sub
sbb
loopne
scas
ds
push
popa
int3
pop
adc
ljmp
pop
jmp
pop
jae
or
and
cli
xlat
enter
ficoml
inc
into
sbb
xchg
or
ficomps
inc
cmpsl
xor
mov
and
adc
inc
inc
hlt
add
push
jbe
push
jecxz
and
rcrb
or
jo
outsl
dec
test
daa
testl
pop
dec
push
push
jae
mov
jo
arpl
and
xchg
mulb
jle
cmpsb
dec
sub
sbb
sahf
enter
daa
popf
aad
cmp
push
jl
lcall
jnp
adc
and
addr16
push
popf
bound
es
xchg
cmp
push
ret
and
jmp
push
pop
dec
pop
shrl
stos
mov
sub
dec
pop
cmp
icebp
mov
adc
iret
sub
jmp
sbb
sbb
cld
add
and
add
in
sub
jno
lcall
push
faddl
ret
cltd
sahf
sub
test
mov
xor
loopne
add
and
cmp
sbb
add
adcl
movsb
add
sbb
jl
add
imul
jecxz
cmp
push
repnz
loop
lea
stc
sbb
fs
movlps
imulb
adc
mov
xor
fisubrs
cmp
inc
int3
or
mov
and
sbb
pop
insl
loopne
shll
pop
cmp
stos
mov
adc
out
jae
lret
insb
sub
sbb
lcall
sub
in
mov
fisttps
sbb
das
scas
adc
lock
nop
es
mov
popa
stos
inc
in
fnstcw
pop
les
inc
loope
push
lea
mov
sbbl
adc
pushf
push
xchg
mov
in
add
inc
jmp
sbb
scas
sbb
mov
lahf
jb
out
out
dec
sahf
pop
je
xchg
jne
add
pop
idivb
sub
dec
mov
and
mov
int
sbbl
mov
shll
dec
loop
das
mov
out
mov
addr16
imul
call
or
or
or
cmpsl
pushf
fxch
mov
fsts
lods
push
dec
lret
mov
stc
mov
in
mov
in
js
sarl
sub
cmpsb
jne
cltd
and
ret
dec
adc
push
int3
clc
lret
faddp
clc
mov
sbb
ljmp
or
lcall
out
test
pop
xchg
jbe
ss
mov
jbe
add
movsb
int
out
jg
adc
pop
xchg
xchg
dec
dec
cmc
in
sbb
les
jnp
mov
out
stos
mov
add
xchg
adc
cmp
xor
repz
shlb
lods
mov
mov
sti
sub
out
dec
std
xor
dec
or
fwait
sbb
dec
jne
movsb
loop
xor
out
mov
xchg
cmp
jns
les
xchg
mov
shll
or
lahf
xchg
jp
mov
mov
lods
jge
pop
lcall
xor
pop
pusha
orb
int3
mov
xchg
iretw
inc
jmp
insb
pop
lahf
adcl
cmp
pop
jle
popf
cli
adc
addb
and
and
stos
xor
jae
xchg
inc
scas
mov
xlat
adc
xchg
fs
dec
pop
cmp
mov
xor
push
jae
das
mov
or
jne
aam
inc
js
fiaddl
xchg
xor
sbb
enter
push
dec
fiadds
jnp
lds
cmp
sarb
push
repnz
outsb
dec
hlt
dec
mov
arpl
fidivrs
add
sbb
add
cs
push
or
nop
mov
push
inc
int3
mov
pop
add
mov
cld
jo
in
scas
movsb
sbb
and
stos
mov
mov
dec
insb
cmpsb
lret
sbb
in
add
lods
std
mov
pushf
sarl
mov
cmpsl
cmpsb
jl
lret
push
sarl
stc
push
movsl
ficomps
or
lahf
hlt
sub
dec
test
jg
add
sarb
sub
rcrb
pop
mov
sub
inc
mov
sub
std
loope
xchg
jo
outsb
xor
shrb
adc
xor
sbb
adc
add
fsubrl
xor
push
xchg
push
add
lock
vmovapd
icebp
pop
add
adc
call
not
sub
mov
test
out
andb
fwait
jg
dec
lahf
mov
inc
mov
push
sub
mov
mov
pop
ss
pop
cmp
aad
outsl
idiv
in
call
shrl
sbb
negb
ja,pn
cmc
stos
mov
cwtl
outsl
cld
fs
ss
sarb
pop
adc
or
dec
lods
frstor
mov
outsl
loopne
jnp
outsl
cli
iret
lods
xor
cmpsl
jb
cmpsb
out
nop
incb
jns
mov
jbe
pop
jecxz
adc
ds
fisttps
add
xchg
xchg
ds
jecxz
mov
cmp
xlat
jge
xor
fstp
test
dec
mov
sti
ficomps
cs
pop
mov
lret
adc
add
dec
rolb
fldcw
lock
adc
cmp
in
rorb
popa
mov
pop
sahf
inc
and
fisubs
lret
jmp
adc
cmp
push
aam
leave
jno
aas
sub
push
jb
sub
dec
adc
outsl
sbb
adc
mov
mov
std
lcall
mov
lods
enter
cmc
xorl
and
mov
cmp
jl
arpl
movsb
outsb
and
xchg
out
mov
push
mov
and
dec
stos
rcll
call
insl
notl
test
cmp
shl
xor
fdiv
dec
lret
and
dec
mov
jmp
and
add
jbe
movsb
pop
dec
sub
hlt
adc
fs
aam
mov
mov
ret
cmp
lods
xchg
ljmp
xlat
lods
add
mov
adcb
jmp
inc
add
and
sbb
stc
cmpsl
mov
inc
pop
xchg
xchg
lods
test
lock
stos
xchg
das
rcll
pop
sbbl
enter
int
hlt
pop
add
inc
sbb
xchg
or
shlb
xor
in
mov
out
mov
ficompl
rol
ja
xchg
add
inc
sti
push
rorl
pop
rcrb
sub
jne
addr16
fildl
bound
outsl
jns
pop
cltd
in
push
jo
or
dec
sub
mov
lds
jl
mov
in
mov
sarb
dec
in
test
pusha
sbb
jno
jmp
xchg
jmp
js
andl
cmp
repnz
mov
sbb
stos
sbb
ss
js
ss
pop
scas
add
outsl
push
out
inc
lock
fmulp
outsl
arpl
pop
lret
xlat
dec
inc
ds
jae
xchg
fiadds
mov
or
lock
fiaddl
adc
scas
movsl
xchg
mov
outsb
sbb
shr
imul
fisubs
or
cli
std
mov
mov
cmp
arpl
sub
movsb
sbb
bound
or
test
int3
jne
jl
xor
inc
push
cmp
test
jl
scas
xorl
and
mov
jp
jno
inc
jbe
push
push
xor
ljmp
daa
fwait
sub
jno
call
inc
dec
fsts
stc
shll
movsl
outsb
cwtl
out
and
xchg
sbb
push
bound
cmp
dec
or
inc
movsl
mov
pop
dec
gs
js
inc
mov
push
cmp
stos
sub
xchg
cmp
xor
rolb
push
mov
mov
ljmp
pop
outsl
sub
pop
mov
scas
pop
or
sub
lcall
adc
mov
mov
loop
cmp
add
xor
lea
add
cmp
nop
jne
idivl
sti
roll
mov
sti
sbb
xchg
adc
or
xor
adc
loop
adc
stc
xchg
jmp
data16
movsb
lods
les
mov
icebp
push
out
inc
pop
cli
add
movsl
xor
sarb
loopne
or
cmp
repz
ljmpw
adc
mov
adc
and
sahf
xchg
add
rcrl
adc
xlat
mov
ljmp
mov
sar
sar
cs
or
adc
nop
fdivr
or
inc
dec
inc
ljmp
les
adc
out
lea
mov
movl
adc
pushf
cmpsb
cmpsb
das
jmp
in
sub
jne
inc
stc
and
ret
aas
call
mov
std
lahf
je
mov
int3
testb
std
inc
fistl
mov
mov
mov
dec
imul
mov
xchg
lret
mov
lret
outsl
lock
cmp
jae
pop
mov
aad
les
mull
adc
aad
fiadds
dec
movsl
addb
outsl
fldcw
icebp
xchg
pop
cld
add
lret
nop
inc
and
push
bnd
repnz
lea
and
out
sub
out
aam
test
insb
test
xor
pop
add
clc
repz
xchg
in
cmp
loop
addr16
lods
jo
sarb
pop
mov
jae
or
xlat
hlt
mov
psrlq
push
jp
test
mov
mov
fidivs
xchg
enter
and
in
sub
xchg
mov
push
shrl
loope
mov
dec
stos
pushw
push
jg
roll
lret
cmp
decl
lods
cmpsb
or
sub
mov
arpl
or
xor
cmp
xlat
dec
jecxz
jns
xchg
or
out
fwait
ja
jge
orl
mov
sub
fdecstp
nop
jns
xchg
cmp
psubusb
xchg
pop
into
or
shlb
or
loop
sbb
sbb
scas
or
mov
jle
push
add
xchg
in
lock
mov
xchg
fisttps
jns
xchg
or
dec
jmp
add
lahf
xorl
mov
jecxz
mov
dec
test
jo
pop
inc
push
stos
or
das
insb
imul
scas
addr16
int3
push
sbb
dec
loopne
iret
into
and
das
pop
add
and
dec
in
dec
aas
push
inc
imul
in
imul
inc
xor
adcl
inc
add
out
pop
lds
repnz
lret
xchg
test
movsl
arpl
out
sub
sbb
mov
or
ficoms
add
xorl
scas
jmp
xor
lods
imul
stc
and
and
cmp
lret
ror
lea
test
cmp
shll
mov
mov
pushf
push
cmp
lcall
cltd
cmpsb
cmp
ds
mov
jne
lea
jge
arpl
loope
loopne
ds
lcall
cltd
insl
mov
cld
pop
jb
ret
inc
aad
or
lret
adc
loope
mov
cmp
mov
xlat
adc
pusha
aad
popl
xchg
add
lock
sbb
dec
xor
push
or
and
neg
mov
sub
pop
add
lcall
adc
xchg
sub
rcrl
xlat
mov
fidivrs
add
xchg
sub
and
pop
cmp
aam
cmp
dec
sub
lret
ret
rcr
mov
sbb
xor
xor
outsl
mov
es
stc
ds
fs
adc
add
lods
stos
xor
pop
out
xchg
movsb
cli
xor
mov
push
or
jnp
xchg
adc
das
pop
lcall
imul
mov
inc
xchg
les
fcompl
cmp
insb
xlat
sti
arpl
mov
and
ret
cs
cmc
aad
sub
nop
mov
dec
dec
jle
mov
std
adc
les
clc
repz
ljmp
call
add
sub
add
mov
pushf
push
out
nop
jmp
mov
pop
cltd
mov
mov
aas
in
jb
cmp
or
xor
testb
cwtl
lcall
mov
inc
in
andl
cmp
cli
ds
mov
cmp
pop
das
push
sub
cmp
and
stc
pop
shl
imul
xchg
jae
insl
dec
mov
out
mov
pop
dec
scas
cld
mov
outsl
mov
stc
lret
lret
pop
inc
fildll
sub
mov
ret
sti
pop
sahf
push
adc
in
clc
cmp
xchg
sub
es
std
lods
fildl
mov
rorl
xchg
dec
jp
push
dec
andl
and
and
mov
mov
mov
sub
or
adc
fstpl
stc
stos
push
notl
push
and
mov
ljmp
pop
movsl
or
orl
mov
jnp
mov
sub
ja
jbe
dec
in
aas
inc
sub
js
mov
iret
fwait
cmpsb
sbb
jne
sbb
mov
jecxz
out
sub
sub
jns
outsl
in
lcall
out
mov
nop
or
xchg
addr16
dec
fdivrl
jg
mov
shr
flds
dec
jle
jmp
lcall
fildll
ja
xchg
fbstp
enter
rolb
cmpsb
imulb
outsl
dec
sarb
fwait
cmpsb
enter
mov
fs
mov
jnp
scas
mov
push
jge
adc
in
add
pop
cmp
inc
push
and
cmp
insb
lea
push
rcr
ficompl
lds
cmpsl
popa
push
imul
pop
fsubrp
xchg
pextrw
test
or
jne
xor
leave
ds
pop
arpl
and
jge
xor
sbb
mov
aaa
imul
add
inc
out
dec
pop
push
pop
xchg
add
push
decl
outsb
pop
outsb
jo
in
scas
inc
addl
movsb
pop
jns
push
pushf
aas
mov
push
pushf
xor
mov
adc
cmp
sbb
and
les
dec
mov
dec
ds
nop
mov
jl
out
sbb
rcrb
cmc
mov
push
loopne
dec
inc
ret
jmp
jbe
or
aaa
push
js
fstl
push
mov
push
sub
push
xor
mov
and
out
outsb
cltd
sarb
ss
gs
subb
sbb
xchg
xor
add
xor
orl
add
int
cmp
test
subl
push
in
or
xor
in
repz
cli
xorb
jg
jge
mov
or
mov
out
shlb
dec
ss
repz
cmp
push
jae
idivl
inc
jae
dec
hlt
push
shll
es
into
xlat
jle
cmc
inc
mov
mov
sti
mov
stc
cmc
pop
push
fs
sbb
adc
outsl
adc
sarl
repz
mov
mov
out
imul
push
dec
mov
or
cmp
gs
jo
loopne
dec
negb
push
xchg
adc
ss
shll
adc
lods
test
pop
arpl
lds
add
cmp
or
mov
mov
add
jl
popf
aad
xchg
jne
xchg
mov
dec
fst
push
inc
adc
cwtl
fsts
les
cmp
cmpl
lea
aas
call
cmpb
mov
int
jecxz
push
pushf
cld
or
pop
cmp
dec
inc
pop
xchg
rolb
xor
jb
adc
dec
jp
xor
aam
dec
jecxz
scas
psadbw
test
js
push
cmp
mov
fs
in
shrb
dec
inc
xor
pop
mov
das
adc
lock
daa
das
xor
mov
inc
ror
and
dec
xor
inc
and
es
and
insl
lods
mov
cmpsl
cwtl
popf
ja
aad
fcomip
xor
mov
push
mov
add
pop
mov
popa
and
rcrb
mov
aam
xor
mov
fdivs
clc
je
lods
xchg
push
inc
ljmp
cmp
repz
out
xor
push
xchg
xchg
jl
push
sub
test
xchg
andl
xor
out
sub
mov
fcoml
dec
xchg
jecxz
test
pop
add
sbb
stos
inc
dec
movsb
push
lds
pop
add
scas
inc
dec
jle
addb
js
je
pop
mov
mov
mov
nop
add
into
loope
lcall
inc
rclb
pushf
jle
fwait
aad
adc
and
mov
mov
out
or
incl
add
and
sbb
out
inc
aam
push
mov
jp
shlb
out
jp
mov
mov
add
rorl
rcr
in
mov
nop
fisttps
es
mov
ljmp
ret
adc
imul
pop
push
fimull
int
jnp
xor
pusha
jnp
or
cmpsl
push
in
mov
iret
mov
sbbl
test
pop
ficoml
inc
outsl
cmpsl
or
popa
jo
inc
inc
add
xchg
mov
hlt
sbb
out
imul
jb
lea
fcmovb
dec
dec
xor
daa
pop
mov
aam
data16
int3
leave
mov
xchg
jns
mov
jbe
int3
xchg
mov
sbb
loope
or
sti
gs
ret
jo
ss
aaa
push
loop
jmp
jo
mov
scas
and
cmp
js
push
jmp
dec
cmpsb
xlat
add
in
lahf
lahf
mov
cwtl
jmp
cmp
outsl
pop
or
adcl
es
inc
sub
push
lahf
jo
in
push
xchg
cmp
call
cmp
pop
shlb
adc
xor
mov
loope,pn
clc
pusha
sub
sbb
cmp
pusha
outsb
retw
inc
adc
push
stos
sbb
ds
jecxz
pop
jb
add
or
xor
lds
adc
int
xorb
and
xchg
pop
add
enter
dec
push
inc
pop
sbb
cmp
mov
xchg
pop
inc
test
orb
push
mov
aam
mov
push
jb
in
sarl
cmp
rorl
stc
mov
fcmovnb
or
xchg
mov
mov
in
jp
into
mov
in
xor
pop
push
outsl
js
icebp
loop
in
stc
lods
sub
out
pop
sbb
cmp
imul
mov
cli
fwait
sbb
cmp
test
shlb
movsl
das
dec
loopne
fsubr
pop
fcomp
adc
xchg
adc
out
mov
xchg
dec
push
xchg
dec
mov
or
rcrl
sub
clc
mov
sti
lcall
aad
pop
ret
nop
insl
stos
jnp
cmp
addr16
and
mov
les
repz
rorl
lock
mov
sub
jmp
pop
push
sub
cmp
or
xchg
or
ja
mov
cmp
inc
stos
aas
movsb
ljmp
icebp
lods
xchg
je
sub
testb
and
ss
xchg
fists
xor
xchg
xor
pop
imul
cwtl
dec
jb
adc
das
adc
add
cs
imul
cltd
inc
add
xchg
sub
dec
xchg
lods
adc
mov
or
loope
test
and
pop
xchg
fwait
mov
andb
lock
mov
test
sbb
nop
or
ret
sbb
mov
shrl
clc
scas
xchg
xchg
xchg
test
mov
js
mov
dec
mov
xchg
dec
pop
xchg
mov
add
les
hlt
sar
add
add
inc
roll
in
add
clc
sbb
xchg
mov
ja
push
shrl
push
mov
or
push
xchg
or
sbb
ljmpw
pop
xor
pop
fisttpll
out
shrl
icebp
mov
sti
pop
scas
mov
lahf
cmc
cld
ja
push
dec
mov
mov
or
mov
add
daa
dec
sub
int3
jne
pop
fwait
mov
xchg
scas
out
out
sbb
xchg
fdivrl
adc
in
push
cmp
pop
inc
xor
in
sbb
in
testl
sbb
das
out
cli
mov
lods
in
adc
pusha
xchg
fbld
nop
xchg
test
addr16
arpl
or
push
sub
push
popf
mov
mov
sub
bound
or
lods
shr
jnp
cmpsl
scas
nop
and
push
or
lea
fldt
and
lods
adc
pop
cmpsl
xor
mov
mov
xor
imulb
dec
jo
mov
pop
inc
xchg
in
xchg
sbb
inc
fldcw
leave
jbe
xor
in
outsb
rolb
mov
pop
jns
leave
sub
leave
hlt
les
insb
arpl
das
popa
jbe
ljmp
outsb
mov
aaa
jmp
sbb
pop
push
int3
and
push
xor
mov
fisubl
and
movl
cmp
cmpsb
pop
loope
in
xchg
enter
daa
xchg
pop
dec
cmp
push
cmpb
dec
xchg
cmc
or
dec
mov
andl
sahf
jnp
pop
pop
xchg
jbe
outsb
inc
loope
inc
cld
cmp
movsl
js
pop
leave
stos
mov
loope
arpl
cmp
gs
outsb
leave
pop
mov
shl
xor
and
adcb
sbb
push
xor
dec
pusha
push
adc
int
lods
mov
fwait
loopne
pop
jg
jmp
push
fwait
ror
faddl
adc
test
scas
out
subb
adc
stos
cwtl
mov
and
divb
popf
repz
cmp
jl
and
mov
push
mov
mov
jl
sbb
sub
cmc
lea
xor
test
loop
xchg
test
arpl
adc
xchg
data16
rorb
pusha
sbb
mov
rolb
ss
into
fnsave
inc
or
mov
cmc
mov
lods
push
aas
loopne
add
adc
cmc
imul
test
xchg
or
inc
cmp
cld
jl
xlat
mov
xor
mov
popa
je
sti
dec
dec
sahf
cs
lods
out
cs
sub
dec
fwait
insl
xchg
inc
adc
les
pushf
repz
imul
call
jle
inc
pop
sbb
xor
xchg
fcompl
in
inc
adc
insl
in
inc
repz
xor
dec
push
test
test
dec
in
std
fucom
push
cwtl
lret
ror
mov
sbb
lods
subl
xor
fildl
popf
cs
ljmp
out
mov
mov
mov
mull
cmc
jbe
loope
sub
sbb
mov
test
dec
xchg
in
cmpsl
xchg
xchg
xchg
mov
jecxz
mov
lret
dec
scas
addr16
push
xchg
lods
mov
lahf
scas
movsb
rol
rcr
sub
aaa
lahf
ret
test
ficoms
dec
enter
cmp
pushf
in
call
jo
popa
ret
xchg
mov
cli
ficomps
push
cmpsl
rcpps
sub
pop
lahf
ss
xor
sbb
jmp
aas
dec
pop
ss
or
sub
rcl
cwtl
ficompl
shrb
or
fadds
aaa
jb
decl
mov
cmpsl
jbe
pop
loopne
popf
xchg
mov
jl,pt
mov
pop
mov
ja
stos
icebp
dec
scas
cld
nop
inc
out
ss
fwait
xor
adc
mov
xchg
mov
bound
frstor
cmp
mov
out
mov
lock
dec
mulb
call
sbb
mov
or
sub
pusha
and
scas
filds
je
jmp
cs
je
insb
lds
out
and
in
lock
pop
jmp
stos
aad
xchg
and
mov
scas
repz
push
push
dec
mov
mov
mov
dec
push
clc
ret
mov
fsubp
jle
jne
jecxz
xchg
popf
or
push
mov
ja
jbe
in
cmp
jbe
test
fldcw
xchg
pop
inc
jp
pop
test
xchg
mov
pop
rorb
hlt
bswap
sbb
jbe
jnp
jge
addr16
sub
scas
aaa
test
stc
or
jmp
mov
pop
pop
ja
test
jb
ret
sahf
cmc
jo
cwtl
or
sub
sarb
or
jae
push
mov
in
insl
popf
stos
enter
daa
xchg
mov
cmp
repnz
jl
dec
mov
add
jo,pt
test
xchg
push
test
jmp
mov
push
sub
jne
push
inc
insb
mov
jnp
mov
mov
mov
or
loope
repnz
mov
out
sub
icebp
adc
int3
rorb
or
andb
int3
sbb
xor
ret
xchg
mov
add
xchg
mov
add
fdivl
sbb
xor
pop
imul
pop
aam
mov
mov
ds
xor
and
pop
arpl
loopne
cmp
aaa
lds
ja
fmul
sub
sbb
push
test
sbbb
cmc
push
push
ret
xor
dec
push
outsl
mov
stc
sbb
push
adc
add
lods
inc
test
out
add
call
cmp
push
or
xor
gs
push
loopne
cmp
pop
push
lock
inc
inc
jb
mov
outsb
mov
mov
ja
sar
arpl
aaa
hlt
into
xlat
notl
sub
test
int3
push
sti
clc
nop
fildll
movsl
xor
aad
es
and
sbb
inc
lea
jp
fyl2xp1
pop
add
cs
out
inc
sbb
testb
lea
outsl
std
enter
out
adc
push
aaa
pushf
std
push
mov
jne
inc
pop
and
lahf
mov
aas
loop
pusha
jb
rcl
dec
fildll
jecxz
mov
test
lods
mov
shrb
mov
jo
inc
inc
mov
in
mov
pop
mov
mov
push
inc
or
xor
mov
insl
popa
or
cmpsl
xchg
fisubl
mov
mov
repnz
mov
xlat
xor
adc
repz
mov
in
cwtl
sub
mov
ret
aaa
fsts
leave
into
frstor
jp
clc
and
ss
lret
icebp
push
popa
fisubl
movsl
mov
pop
bound
xchg
mov
ja
add
mov
addr16
pop
xor
addl
push
cmc
jp
cmp
inc
loop
sbb
pushf
add
scas
out
add
push
repnz
test
daa
dec
or
xchg
inc
xor
outsl
out
mov
andl
adc
insl
fmull
adc
inc
test
addr16
sbb
fwait
bound
dec
repnz
jne
std
nop
jb
movsl
out
bound
dec
mov
push
out
in
loop
pop
mov
jle
imul
jp
hlt
push
mov
sub
mov
pusha
jle
sub
in
and
pusha
mov
xchg
push
xchg
sub
lods
jmp
stc
add
cmp
rcll
mov
imul
cmpsl
xchg
push
xchg
pop
ret
stos
dec
mov
and
sbb
add
mov
adc
adc
sub
push
pop
adc
icebp
fdivl
mov
or
sarb
push
fisubrl
outsb
lods
xchg
xchg
hlt
adc
jo
imul
or
jbe
scas
inc
sarb
mov
lods
pop
mov
hlt
pop
movl
jge
xchg
ret
or
aaa
add
or
and
int3
idiv
xor
push
mov
loope
mov
fdivl
cmpsb
xchg
scas
mov
xchg
movsb
mov
push
fadds
cmpsb
pusha
not
in
push
repnz
enter
daa
xchg
lea
or
jno
popa
mov
dec
jae
mov
movsl
cwtl
sub
test
loope
add
movsb
push
or
repz
fnstsw
xorb
pop
xor
incb
push
jge
in
mov
cmp
outsb
pop
sbb
shlb
and
sbb
in
add
and
xor
sahf
push
sbb
lahf
sub
lods
setp
daa
ret
xchg
push
sub
dec
int3
sahf
jg
cltd
test
xchg
jg
mov
adc
or
or
and
mov
fdiv
pop
add
lret
and
rcrb
shl
adc
into
arpl
in
cmc
sbb
pop
outsl
adc
mov
mov
adc
sbb
call
jmp
cli
xor
js
jl
jbe
fwait
fwait
jle
scas
incb
cmp
gs
push
fistpl
subb
add
scas
or
adc
lods
faddl
inc
cltd
pop
xchg
xchg
push
sbb
jb
pop
xlat
ss
shrl
adc
in
aaa
lea
or
pop
nop
adc
dec
pop
sbb
pop
push
rcr
shr
les
fs
stc
xor
repz
lods
jl
cmc
pop
andl
adc
pushf
cmp
adc
pop
enter
and
rolb
pusha
aas
adcl
pop
dec
push
and
add
push
not
out
push
std
sub
cwtl
inc
mov
in
mov
dec
or
and
mov
mov
push
jb
and
das
lods
and
mov
iret
in
rcl
jg
and
insl
dec
push
adc
push
push
xchg
mov
shl
xchg
mov
mov
mov
sbb
add
pop
fisttpll
imul
into
aam
mov
push
in
cmc
fisttpll
and
xchg
lea
ds
pop
popa
icebp
in
mov
repnz
out
rcr
xchg
scas
insl
sub
popa
xchg
adc
push
add
xchg
push
pop
cmc
xchg
dec
sub
test
cmpsb
enter
push
sbb
adc
mov
dec
stos
add
push
push
xchg
daa
add
insl
xchg
int3
fistl
xor
lods
dec
mov
rolb
shl
and
mov
dec
xchg
loopne
inc
sbb
xchg
or
sahf
setnp
mov
mov
out
test
stc
bound
jae
lods
pop
in
push
lret
ja
xor
in
loop
mov
data16
addr16
outsl
mov
roll
out
add
xor
in
mov
outsl
ffreep
test
aam
stos
sbb
les
orl
and
cld
sbb
push
jns
mov
sub
in
ja
jnp
sub
scas
mov
inc
mov
insb
xor
or
faddp
in
inc
pop
dec
enter
testb
into
xlat
inc
jnp
scas
or
dec
push
or
fcmovu
add
xchg
ljmp
imul
jne
sbb
mov
rclb
fdivp
add
jb
xchg
mov
dec
arpl
fwait
jbe
stc
push
jge
test
sbb
insb
jae
mov
rolb
and
mov
loop
mov
push
outsb
mov
xchg
enter
jg
and
xchg
jnp
mov
adc
fists
sub
cmpsb
jecxz
sbb
enter
daa
xchg
push
cmp
jno
sahf
fdivrl
sub
loop
xchg
mov
sti
movsl
lahf
sahf
int
pop
mov
lahf
in
push
push
push
shl
sub
push
xlat
adc
mov
pop
pop
pop
movsb
js
js
pop
xchg
add
in
loope
jl
sub
jns
cmp
negb
repnz
push
pop
mov
addb
inc
jg
orb
stos
add
jl
xor
jns
push
sbb
ror
pusha
cmpb
or
mov
cld
inc
negb
mov
sbb
sub
ficomps
push
notl
mov
or
mov
mov
lds
sub
scas
ss
add
lods
mov
lret
push
mov
aas
lods
into
inc
inc
es
loop
cmp
xchg
loop
rcrl
stc
mov
fsubs
pop
adc
xchg
data16
cmp
mov
scas
pop
out
push
dec
cli
addr16
xchg
xor
mov
mov
stos
pop
dec
or
adc
pop
push
adc
adc
testb
cmpsb
xchg
mov
sub
push
add
nop
xchg
push
adc
jmp
xlat
jne
call
mov
mov
insb
imulb
imul
aad
jge
nop
fstps
dec
mov
out
fldenv
stos
les
enter
xlat
inc
lea
mov
or
sbb
adc
xchg
push
push
pushf
push
add
jmp
inc
ficomps
mov
roll
pop
add
and
mov
je
and
jecxz
aam
push
mov
jg
cld
mov
mov
xchg
scas
sub
gs
fistl
lret
push
daa
lock
mov
mov
mov
and
ror
mov
aas
insl
das
jge
dec
addb
cmpsl
xchg
in
fidivrl
push
xchg
adc
cltd
xor
and
sub
cld
mov
lahf
sub
xor
push
cmpsl
sbb
outsl
sbb
fwait
sub
imul
adc
popa
or
lods
pop
push
cmp
and
xchg
cmc
arpl
xor
pshufw
add
sub
jl
xchg
loopne
test
in
mov
sbb
fcom
lret
push
adc
stos
out
pop
and
hlt
cmp
add
orb
pop
les
lret
repz
xor
ds
mov
pop
xchg
cmp
mov
ja
sub
inc
mov
mov
xor
push
fwait
shl
dec
mov
call
out
arpl
fsubrp
pop
jns
pmulhw
fcompl
out
gs
sub
popa
int
addr16
fs
push
mov
mov
mov
push
jno
jle
jp
in
rclb
cmpsb
mov
inc
jmp
es
sbbl
int
cmp
xor
mov
adc
scas
sti
and
pop
add
jnp
pop
fildll
daa
shll
inc
xchg
ret
bound
xor
xchg
dec
out
hlt
push
stos
inc
jle
pop
or
enter
mov
dec
je
inc
leave
ss
out
push
imul
nop
fidivrs
mov
scas
xor
out
push
pushf
repnz
push
sub
hlt
lock
pop
jbe
out
jge
lahf
add
pop
lods
add
in
inc
or
insb
inc
int3
int
inc
pop
lods
add
push
push
sub
xor
sub
xor
jecxz
jae
xor
movsb
lahf
bound
jbe
pop
cmpsb
data16
and
enter
daa
xchg
and
jno
incl
mov
fnstsw
fnstcw
movsl
cmpsb
js
and
cs
cmpsb
nop
fwait
test
mov
outsl
lcall
push
inc
js
xchg
push
test
loope
js
sub
mov
and
or
pop
pop
sub
popf
sbb
sbb
aam
stc
sub
push
pop
xchg
sub
cmp
sub
fs
lcall
leave
fdivl
jnp
sub
xchg
pop
sahf
lds
test
lock
adc
dec
movsl
mov
or
xchg
push
mov
sub
ss
push
into
fsubrs
sub
mov
addr16
xchg
sar
lock
ficompl
sub
cmc
test
mov
mov
daa
push
aas
out
mov
out
repz
inc
jb
cld
sbb
mov
shrb
jb
pop
cli
lcall
cmp
jns
or
pop
gs
rcr
pop
jae
mov
imul
int3
add
sbb
sbb
call
ret
loop
call
fs
or
add
dec
ds
mov
inc
dec
pop
xlat
lahf
inc
sub
fstps
cmp
repz
jo
out
shll
call
jp
mov
jmp
xchg
push
pushf
adc
pop
push
xchg
mov
xor
imul
js
mov
fs
inc
stc
je
repnz
jecxz
lret
pop
leave
std
jns
add
rolb
test
jecxz
inc
inc
rorb
dec
inc
lock
loope
das
imul
mov
in
rcl
or
sub
es
jge
sbb
mov
aas
jge
cld
pop
mov
out
push
xor
sub
mov
sbb
dec
rorb
jb
sub
hlt
aam
sub
ret
in
mov
fstl
test
ljmp
push
lods
enter
xchg
adc
xchg
cmp
mov
bswap
and
cmpsl
stos
fcompl
jle
and
out
xor
xchg
shr
sti
mov
test
lds
negb
pop
shll
push
xchg
pop
or
stos
fiadds
push
xchg
iret
aad
mov
addb
ljmp
jb
sub
inc
sbb
leave
and
ds
idivb
inc
arpl
ja
shl
dec
jnp
mov
or
movsb
fwait
out
icebp
out
fwait
aaa
jne
aam
mov
and
shll
add
sbb
in
mov
call
pop
xchg
or
addr16
lods
jp
lods
mov
mov
les
jle
jbe
pusha
mov
pop
xchg
movsb
inc
and
cwtl
insb
iret
xchg
pop
ss
sti
xchg
aam
subb
push
push
aam
stos
mov
mov
insb
ret
mov
jnp
push
cmp
outsb
les
and
enter
and
inc
mov
sbb
mov
push
cmp
out
inc
dec
aad
cwtl
imul
pop
ror
dec
mov
cmpsb
aas
add
jg
cmp
cmp
fbstp
dec
int3
jge
jp
sbb
leave
push
or
mov
mov
scas
rorl
xor
adc
ffreep
loopne
test
scas
pop
add
jbe
scas
cmp
out
movsb
sub
push
vlddqu
or
enter
daa
xchg
mov
cmp
test
icebp
aaa
rorb
mov
movsl
lods
mov
and
pop
lahf
sub
adc
pusha
leave
test
insl
pop
mov
lret
add
pop
stos
movsl
push
js
sub
add
fsubrs
and
sub
icebp
cmp
aaa
outsb
mov
adc
cmp
incb
xorb
pop
add
sub
das
push
and
mov
sub
dec
cmpsl
pop
cli
add
ficoml
aaa
stos
lods
insl
sub
pop
xor
jbe
xchg
xorb
mov
mov
inc
scas
mov
or
mov
jne
and
and
in
loop
cmp
and
fadd
xchg
fldt
sbb
cmp
cmc
jo
out
xor
and
orb
notb
dec
adc
repnz
lods
jecxz
push
mov
xchg
cli
int
sub
add
pop
cmp
daa
push
cld
pop
ds
movsb
jne
gs
fucomp
loopne
in
pop
xchg
dec
ficoml
mov
xchg
xchg
rcrb
lock
and
adc
fdivrl
and
mov
mov
js
lret
push
push
aad
arpl
nop
jbe
sub
and
les
pop
mov
lea
cmp
call
stc
mov
lret
inc
inc
pushf
test
stc
or
pusha
repnz
mov
pop
ja
pop
pop
das
jb
cmpsl
mov
mov
push
imul
pushf
movsb
std
and
cwtl
jb
adc
xchg
imul
dec
scas
stos
jne
jb
sbb
inc
fstpt
lock
or
dec
in
mov
inc
es
and
aad
shrl
es
xchg
dec
insl
std
jle
dec
js
adc
cmp
cs
push
adc
cld
xchg
nop
mov
xor
mov
cmp
shl
pop
inc
sub
jb
push
stc
and
jae
dec
push
sub
inc
push
clc
adc
xchg
and
mov
lods
xor
mov
jmp
jl
push
es
ucomiss
sbb
mov
mov
test
xor
test
subb
test
sbb
pop
xor
xchg
stos
int
xchg
cmp
add
mov
cmp
xor
xor
or
pop
mov
lea
pop
pop
add
je
shll
inc
loope
mov
sub
jle
inc
jne
jg
mov
jle
out
and
out
bound
fs
fs
mov
sub
push
cmp
icebp
jg
jp
test
mov
iret
and
xor
jno
mov
mov
pusha
sub
fbld
clc
aad
ja
test
or
xchg
and
lds
jl
popf
cmpsl
insb
mov
xchg
pop
xchg
sbb
movsb
insb
cs
bound
or
mov
adc
push
iret
and
repnz
pop
icebp
out
xlat
inc
lods
std
dec
jae
sub
inc
test
add
mov
lea
xchg
out
sub
shrb
add
mov
mov
stc
pushf
and
imulb
hlt
xchg
leave
arpl
mov
jbe
sbb
loopne
shlb
test
add
inc
pop
int3
mov
and
pop
adc
xor
loopne
ja
cmp
and
mov
cmp
movsl
jl
adc
mov
in
lock
icebp
daa
xchg
leave
jno
aam
aas
jno
sub
lea
shr
pop
adc
movsl
mov
cmp
lock
lahf
dec
call
out
in
mov
push
cmp
and
adc
mov
js
pop
xchg
pop
inc
into
loopne
rorl
loope
sub
jno
cmp
push
outsb
sbb
adc
adc
xor
sbb
jne
add
xorl
imul
pop
jns
aaa
lcall
pop
fmull
out
dec
sahf
or
test
jmp
inc
jg
or
mov
lods
rorb
cmp
sub
push
pop
inc
ss
aad
cmp
fimuls
in
lret
push
sub
testb
lods
into
out
sub
push
xor
lret
dec
call
push
fs
cmp
lods
scas
iret
lods
lret
mov
shlb
stos
movsb
cli
add
push
cmp
test
or
dec
inc
js
gs
pop
push
loopne
add
pop
mov
push
adc
call
adc
jmp
add
inc
xchg
lahf
sbb
sbb
pop
hlt
or
sub
cmp
cmpsl
pop
loopne
jecxz
or
arpl
cs
push
adc
fsubr
jle
push
mov
mov
fcmovu
or
add
stc
mov
lea
into
rol
js
add
sbb
pushf
push
mov
jmp
jns
pop
push
and
inc
repnz
lods
aas
std
jp
jb
pop
insb
dec
xor
je
icebp
jecxz
sahf
jo
fbstp
std
lods
rcrb
inc
stos
and
mov
jno
cltd
or
pop
mov
roll
das
sub
mov
sti
popf
andb
sarl
out
insl
in
rorb
push
scas
cmpsl
nop
in
mov
in
into
mov
mov
mov
out
sbb
and
cmp
mov
iret
sub
and
sbb
xorl
in
mov
dec
repnz
xchg
bound
gs
xchg
call
jp
lret
push
add
or
int
xor
xchg
in
clc
mov
jb
xchg
push
repnz
leave
mov
mov
popl
pop
fdivs
rcl
mov
and
fstp
testl
les
mov
xor
ljmp
sarb
jae
mov
cld
stos
dec
popa
sbb
or
std
pop
fwait
dec
cmp
jne
mov
out
add
ret
into
loope
mov
inc
xchg
outsl
notl
out
repz
push
dec
jmp
aaa
inc
jp
pop
cmp
inc
xchg
mov
mov
adc
enter
inc
sbb
dec
imul
xchg
lock
inc
add
push
adc
lods
mov
shlb
stos
xchg
and
int3
data16
cltd
inc
adc
mov
incl
push
cld
ljmp
cltd
fld
xor
jno
sub
inc
mov
jnp
popa
jge
inc
xchg
dec
or
cmp
cmp
test
test
adcl
cwtl
bound
pop
xor
andb
sar
and
dec
cs
hlt
shrl
fdivs
addr16
jge
fildl
mov
aaa
and
or
testb
call
rcrl
jmp
cli
jbe
xor
cmp
push
scas
sbb
lret
cmp
jno
inc
inc
mov
arpl
out
cwtl
dec
in
xlat
negb
jo
ret
daa
nop
cmp
nop
out
fyl2xp1
mov
and
mov
aam
mov
jmp
lahf
push
pushf
and
push
add
inc
lret
push
cmpb
ljmp
push
sub
sub
push
loope
sbb
outsb
jle
mov
outsb
push
adc
mov
jns
sbb
je
add
sub
movsb
push
sub
add
clc
dec
fildl
clc
aam
lcall
pop
fdivl
xor
mov
test
test
pop
jg
out
lret
dec
mov
mov
nop
and
ss
inc
cmp
cltd
add
jb
fcmove
outsl
rol
mov
sbb
sub
rorb
pop
xor
jmp
stos
loop
add
inc
bound
xchg
lds
data16
cmp
iret
scas
stos
out
and
sub
scas
ret
jb
adc
fisubrl
ljmp
loopne
xor
pop
rorb
imul
pop
arpl
bound
aam
cltd
jecxz
xlat
jno
sub
add
dec
dec
fdivr
adc
negl
pop
nop
inc
dec
xchg
dec
xor
sahf
inc
mov
lods
push
les
xchg
or
mov
call
testl
adc
pop
sub
jmp
mov
and
dec
movsl
inc
or
lahf
mov
dec
test
pop
hlt
jecxz
outsb
in
and
mov
cwtl
call
gs
mov
arpl
test
fcmovnbe
mov
aam
shrb
xor
sbb
das
or
mov
mov
jno
xchg
rorl
xchg
insb
es
push
insl
lret
adc
dec
outsb
xchg
mov
mov
les
mov
push
mov
andl
js
and
mov
movaps
jb
call
fistl
daa
das
fisttpll
add
mov
jge
pusha
popa
bound
mov
scas
jp
xchg
adc
orl
lret
in
loopne
cwtd
mov
das
test
divl
dec
xor
hlt
test
lret
aaa
sti
ret
sbb
inc
pop
shll
cmp
pop
or
ss
stos
xchg
negb
orb
dec
lret
fwait
add
xchg
lahf
jmp
sub
imul
cmpsl
gs
stos
lret
pop
mov
adc
mov
ja
or
fdivrs
inc
lss
fbld
fs
inc
jns
jne
add
fistpll
bound
xor
inc
dec
sub
or
xchg
mov
xchg
enter
jl
dec
cmc
fsubl
jae
jp
mov
clc
mov
adc
js
cld
xchg
loopne
std
pusha
pop
mov
fistps
xchg
xchg
sbb
xor
in
push
aam
push
inc
cmpsb
fstpl
mov
push
push
adc
mov
cli
adc
and
or
lods
jnp
int3
add
inc
negb
iret
jecxz
mov
pop
pop
filds
nop
jae
adc
inc
mov
fwait
or
mov
addr16
mov
mov
pop
jl
xchg
popf
and
push
fisubs
fimuls
dec
lds
inc
pop
rcrb
push
mov
lahf
repz
in
xchg
sbb
cli
arpl
xor
and
jge
fcomps
inc
in
aaa
loope
mov
add
dec
sub
push
sbb
xchg
xor
xchg
mov
insl
and
jg
cmp
inc
jo
lret
cmp
push
mov
pop
cmpsb
jb
mov
mov
mov
daa
jg
cmp
and
mov
insl
jl
cwtl
inc
dec
or
jns
movsl
ret
and
imul
xchg
mov
leave
inc
pop
shll
pop
ret
js,pn
mov
pop
shll
outsl
int3
test
cmp
xchg
outsb
loope
jnp
mov
popf
ror
dec
jno
sbb
sbb
mov
xor
push
sub
mov
sub
push
pop
ja
cmp
push
mov
cmp
sub
push
pusha
cld
test
jae
addb
sub
int3
mov
fwait
shlb
jae
stc
ss
push
cmp
push
push
inc
divl
repz
pop
sahf
jmp
sbb
push
lds
xor
data16
jae
int
sbb
fs
sub
adc
xchg
fldenv
out
mov
cwtl
pop
rorl
and
cli
data16
xor
es
dec
lahf
sahf
decb
jp
loopne
jbe
pop
out
xor
adc
lret
out
imul
loope
popf
bound
and
aaa
leave
cmp
data16
mov
fisubrl
mov
mov
mov
mulb
aad
sub
nop
and
jg
xchg
subb
add
fnstcw
cmp
vpshlq
jns
pop
aad
call
jbe
pop
pop
mov
fcoml
dec
add
les
lcall
inc
sub
aas
cmp
lods
jb
test
xor
and
sbbb
out
and
adc
push
mov
mov
cmp
outsl
dec
cmp
lcall
in
into
je
mov
call
mov
mov
imul
rcrl
jge
xor
xchg
scas
xchg
dec
imul
shrl
icebp
fwait
mov
cld
pop
and
mov
inc
subl
jae
xor
xchg
xchg
sub
aad
mov
or
and
push
jbe
or
xor
test
ljmp
into
lods
je
push
mov
adc
ds
mov
cmovnp
xchg
add
divl
test
rolb
xchg
and
test
repz
xchg
gs
sarl
adc
subl
mov
add
bt
add
xor
sbb
xor
add
jp
adc
fildll
xor
ja
cmp
dec
inc
insb
mov
cmpsb
push
fmull
and
das
dec
daa
inc
xchg
jne
xlat
loopne
jp
or
mov
imul
in
mov
or
cmpsb
popf
sub
dec
xor
jp
rorb
icebp
xchg
mov
jbe
andb
jle
in
or
pusha
cli
jg
fistpll
mov
jmp
xchg
or
pop
jmp
xor
push
std
mov
and
ljmp
loop
sbb
stc
scas
or
mov
adc
jp
ret
adc
inc
int
cmp
inc
lea
mov
inc
repz
push
dec
push
xchg
hlt
push
inc
sbb
lods
mov
jb
fsubrp
mov
lds
add
mov
repnz
sbb
pop
fcmovnb
hlt
addr16
arpl
pop
jbe
push
push
jge
int3
push
sbb
in
aaa
mov
shrl
cltd
ror
add
adc
push
rcrb
xor
icebp
cmp
scas
xor
and
xor
lds
movsb
push
adc
add
xor
enter
daa
mov
cmp
insl
fs
xchg
jl
pusha
mov
mov
pop
movsl
leave
xchg
lahf
and
lahf
cmpsb
popf
adc
cmpsl
ret
and
push
cltd
loop
inc
call
lret
cld
pop
inc
ljmp
add
push
push
mul
xchg
sub
frstor
cmp
jge
adc
movsb
xchg
cmp
negb
test
xor
xor
incb
int
xor
sub
lahf
movsl
pop
divb
adcl
fcomp
mov
jbe
xchg
xor
sahf
hlt
inc
inc
test
push
ret
jg
rcrl
and
push
mov
es
clc
arpl
fmuls
mov
scas
lret
mov
mov
push
cmp
ret
pop
jp
cwtl
test
add
test
push
outsl
cs
outsl
stc
shlb
adc
mov
cmp
insl
movsl
jb
cltd
loope
xor
lcall
xchg
ret
xor
pop
gs
fsubp
into
fs
push
loope
adc
testl
add
inc
xchg
call
pop
dec
cmp
jle
xlat
out
ss
daa
mov
sub
and
in
sti
jo
pop
cs
loopne
nop
sti
mov
test
or
shlb
inc
repz
push
xor
les
call
cmc
in
dec
pop
push
js
pushf
push
loop
jmp
nop
sub
cmp
dec
bound
push
js
lods
jb
mov
cmpsl
je
lock
in
lret
imulb
xchg
pop
cwtl
pop
fwait
aas
mov
data16
mov
mov
ja
mov
into
fldt
cmp
mov
or
sahf
dec
xchg
das
pop
mov
mov
dec
mov
pushf
mov
repz
lret
insl
cltd
xor
dec
xlat
push
cmpsl
lea
jge
jb
jb
xor
xor
shll
push
mov
pop
mov
das
shrb
or
dec
jl
aam
jl
ret
scas
pop
in
push
cmp
push
fstpl
mov
xchg
pop
pusha
add
arpl
popa
xchg
rclb
xor
cld
data16
jne
nop
xchg
lahf
pop
in
push
xchg
lods
inc
rsm
mov
add
dec
rcrb
mov
in
mov
int3
pop
xchg
aad
dec
incb
test
mov
xchg
cmp
rcl
scas
sbbl
in
push
or
add
sub
dec
jmp
jp
or
mov
mov
testb
in
inc
add
iret
sbb
cmp
inc
cmp
ja
ficompl
dec
or
add
adc
mov
stos
xor
bound
cmpl
push
rclb
ja
mov
inc
add
addr16
ja
jp
popf
sbb
enter
fnsave
jge
inc
inc
scas
in
cli
and
jmp
popf
cwtl
test
ret
mov
lea
repz
popf
inc
pop
jmp
sub
mov
stos
loopne
xchg
and
mov
fimull
jnp
fwait
cs
outsb
test
adc
lods
iret
mov
inc
repnz
int
stc
inc
fmuls
jae
or
nop
lods
ss
stos
lahf
test
movl
sbb
dec
add
gs
fimuls
stos
in
push
data16
test
sbb
rcrb
xor
jbe
cli
jge
sbb
ja
aaa
pop
mov
insl
add
or
add
jno
mov
subb
jmp
hlt
and
jmp
jl
cmc
movsb
loope
adc
add
cmpsb
js
and
mov
sbb
lea
cmp
cmp
jl
cld
out
jmp
ds
mov
movsl
ror
enter
rcrl
cwtl
jnp
test
fs
inc
ja
mov
lcall
js
add
aas
mov
push
add
loope
dec
or
adc
mov
call
jg
xchg
fldcw
orb
push
add
and
xor
sub
push
xor
int
inc
dec
sub
jnp
jne
lcall
fdivl
shrb
xchg
adc
xor
jg
mov
mov
pop
hlt
mov
mov
gs
das
and
es
fisubl
mov
imull
incl
mov
rorl
movsb
sbb
xchg
xor
jnp
aam
push
adc
repnz
or
xchg
fs
notb
test
jge
mov
push
sbb
insb
stos
idiv
int3
push
xor
dec
cmp
hlt
in
daa
dec
sar
push
or
mul
bound
fcomps
xchg
adcl
pop
sub
and
adc
push
add
xor
dec
sub
cs
out
mov
adc
cs
cltd
aad
stc
lods
nop
cmpsl
dec
push
insl
flds
inc
call
fnsave
sahf
repz
add
lea
push
inc
call
je
inc
pop
sbb
adc
ficomps
jmp
and
pop
loopne
jp
pop
jecxz
inc
pop
inc
push
jns
test
dec
push
ficomps
je
mov
pop
imul
cmp
std
arpl
cwtl
sbb
mov
lods
orl
inc
fcom
fistpl
xchg
mov
cmp
stc
pop
pop
das
movsl
js
mov
xlat
in
and
jmp
mov
insl
sbbb
cmpsl
mov
mov
dec
and
lret
mov
sbb
and
test
gs
sub
aam
out
or
jge,pt
push
cld
je
fldl
mov
sub
and
popa
test
aas
jne
stos
ret
inc
out
fsub
push
xchg
out
xor
or
wbinvd
sub
add
gs
push
jns
test
xor
and
gs
ss
add
xchg
scas
shrl
cmp
mov
imul
add
inc
dec
jmp
or
pop
mov
fdiv
popa
mov
test
cmp
dec
sub
add
or
popf
cmp
dec
in
mov
std
mov
imul
jns
lock
test
inc
shl
sub
sub
ds
in
aas
fnstsw
sbb
mov
or
mov
pop
sbb
xchg
arpl
cmc
mov
pusha
xor
fistpll
jae
sub
imul
mov
into
test
xchg
and
dec
fdivrs
sub
push
sbb
iret
add
ret
push
pop
add
add
jae
insb
addl
jecxz
ffreep
xor
and
and
fidivl
xchg
mov
ret
les
xchg
pmaxub
aad
lds
filds
dec
fistps
cwtl
jnp
leave
dec
push
hlt
std
jnp
arpl
jbe
adc
jge
dec
dec
sbb
dec
aaa
push
inc
orl
fcmovu
lahf
int3
cmp
ja
xchg
test
scas
xchg
out
and
cmp
cmp
pop
movsb
insb
or
lahf
or
shr
jae
or
sub
pop
cmp
or
jl
insb
enter
ds
cmp
and
popa
rcrl
imul
push
das
enter
dec
mov
pop
xchg
in
js
sbb
jle
test
loope
inc
fldcw
hlt
inc
cmp
lods
sbb
mov
adc
and
insl
sbb
aam
add
sbb
dec
push
xor
nop
int
cmp
pop
hlt
mov
aam
pop
and
sub
adc
mov
mov
fs
int3
aam
push
insb
mov
mov
and
pop
push
fadds
test
lret
repnz
pop
mov
mov
into
pop
adc
pop
xor
lret
outsl
in
insl
fsub
sub
cmp
push
jecxz
outsl
jl
adc
lcall
dec
movsb
lret
out
mov
imul
xor
xorb
xchg
lds
stc
fwait
xchg
loopne
mov
mov
imul
mov
dec
fnstsw
xchg
outsb
mov
sbb
test
xlat
insl
addr16
mov
cli
cli
mov
into
jns
cs
aad
ja
nop
mov
inc
dec
mov
pop
inc
pop
mov
fstps
mov
call
ja
adc
cmpsb
lea
or
repz
dec
pop
into
filds
stos
int
jmp
je
pop
xorl
inc
loop
lods
inc
jns
add
sbb
jb
jg
dec
test
or
xchg
add
imulb
mov
std
or
imul
ja
mov
push
andl
ja
test
push
aam
das
test
fwait
mov
mov
movsl
roll
lret
es
in
dec
pop
imul
icebp
and
mov
adc
inc
and
inc
daa
cmp
hlt
fisubl
rcl
sbb
sub
aam
mov
ret
int
xchg
push
mov
xor
clc
jae
ds
popf
shlb
lods
xchg
popa
shrb
mov
cmp
push
xchg
sub
ja
punpckhbw
es
lea
test
fldenv
cwtl
mov
xchg
sub
xchg
rorl
sbb
ljmp
pop
mov
mov
push
or
mov
add
xchg
fistpll
push
or
cwtl
mov
pop
arpl
pop
arpl
fbstp
outsl
jbe
and
pop
or
xchg
in
cmp
dec
shrb
jne
mov
mov
cmp
pop
fstpl
pop
xchg
jns
vpmulhuw
pop
xchg
cli
add
sub
cmp
addr16
fs
push
dec
mov
sbbb
cld
hlt
mov
in
add
rcrl
cld
fdivrs
lret
arpl
add
jmp
out
ja
xchg
and
popf
xchg
lods
jbe
mov
inc
and
cmpsb
and
mov
cli
jnp
jnp
scas
xor
add
adc
notb
pop
imul
pop
cmp
mov
insb
adc
inc
xchg
xor
push
push
mov
xchg
daa
jmp
xchg
stc
mov
jp
inc
enter
aam
lds
insb
push
mov
jmp
je
rclb
hlt
dec
ret
mov
xlat
jbe
mov
sbb
xor
aaa
fisttpll
or
xor
pop
and
cli
push
imul
cmp
and
jl
ljmp
push
out
pop
xchg
cmpsb
jle
or
pop
aas
imul
mov
mov
in
cmp
imul
dec
leave
sbb
movsl
ficomps
and
ja
push
ds
lcall
push
pop
and
xchg
pop
mov
leave
adc
mov
adc
loope
pusha
mov
cmp
mov
insl
mov
adc
xor
imul
sbb
pop
jl
push
imul
adcb
aaa
mov
lea
pop
bnd
jae
xchg
lcall
xchg
mov
sub
lcall
xor
daa
jg
pushf
mov
mov
das
mov
adc
and
push
into
cmp
inc
and
lods
sbb
cltd
mov
xchg
mov
test
into
inc
mov
or
outsl
lret
int
loop
lea
imull
fs
xchg
sti
adc
jp
mov
lods
xor
push
mov
inc
add
xor
xor
or
cmp
adc
add
ds
loopne
push
ret
std
mov
push
mov
imul
gs
cmp
xor
and
cmp
adcb
in
gs
or
out
mov
sbbb
mov
dec
punpckhdq
inc
sbb
fsts
add
repz
repz
inc
pop
add
pop
popf
cmp
pop
andl
mov
push
addl
es
inc
imul
repz
mov
push
jb
das
rorl
fdivs
cmp
divb
es
mov
and
lock
mov
aas
mov
jbe
cmpl
adc
mov
inc
shll
scas
mov
das
arpl
pop
mov
inc
loopne
and
jo
rcll
inc
insl
dec
adc
push
nop
lcall
sbb
icebp
mull
ret
loop
lret
subb
adcb
fistl
pop
adc
cmpsl
jo
sub
es
dec
ret
pop
xchg
ret
in
mov
into
jbe
clc
scas
pop
lret
push
xchg
ljmp
lcall
leave
mov
xchg
je
dec
push
and
mov
sub
cltd
fnsave
test
roll
mov
mov
cmp
fildll
mov
fcomps
mov
sbb
push
pop
popa
mov
push
sbb
add
jnp
out
jle
fnsave
or
cmp
cli
pop
xchg
push
fsubl
bound
mov
push
mov
dec
adc
or
setnp
orl
out
jne
sbb
pop
cmpsl
out
cmp
and
or
dec
jns
cmp
inc
xchg
dec
add
sub
xor
ss
mov
push
jnp
pop
fistpll
push
sub
in
pop
xor
sbbb
cmp
cmp
add
push
push
mov
and
push
adc
mov
sbb
push
dec
movsw
stos
cmp
loop
mov
enter
nop
movsl
scas
xchg
popf
inc
push
cmpsb
outsb
inc
adc
std
std
iret
mov
pusha
repz
jb
dec
inc
stc
xor
jae
cld
pushf
inc
cltd
cmpsl
ljmp
call
fcmovu
mov
push
jl
sbb
sub
imul
mov
lds
xchg
mov
ds
leave
aaa
rorl
xchg
pop
arpl
jbe
mov
push
sbb
stos
xor
pushf
fisttps
add
lods
mov
pop
push
mov
push
dec
int3
xchg
xor
pop
insb
les
push
push
loope
mov
out
push
cmp
push
imul
inc
pusha
enter
daa
mov
mov
jno
mov
sbb
lods
and
adc
sbb
sub
jb
push
adc
mov
push
inc
and
pop
jecxz
pusha
pop
loop
mov
pop
cld
inc
or
sub
loope
lahf
fisubrl
pop
mov
outsb
shrb
std
rclb
inc
inc
imul
stc
orb
sbb
lret
add
or
js
cmp
iret
sub
xor
push
lcall
dec
fdivl
adc
sahf
orb
scas
lahf
jp
or
jg
xchg
sub
mov
push
inc
shl
mov
and
movsl
fdivr
adc
ss
loop
dec
or
cmp
into
and
jbe
test
clc
xor
fildll
xor
loop
fbstp
test
mov
jno
or
jp
lods
sbb
insb
mov
aad
cli
gs
mov
mov
pusha
xor
mov
cmpsb
and
xor
cwtl
pop
mov
shrb
loope
sbb
sbb
push
mov
sbb
sti
mov
mov
mov
rorb
sti
sub
mov
aad
popf
mov
dec
outsb
outsb
mov
sbb
mov
sub
lea
inc
call
icebp
pop
sbb
sbb
adc
jmp
imul
test
sbb
add
aas
push
iret
fdivl
adc
dec
jae
sti
je
or
divb
jnp
dec
mov
mov
cltd
dec
mov
xchg
ret
push
fisttpll
mov
mov
jns
lock
in
mov
cld
shr
and
mov
shl
shlb
mov
fisttpll
dec
or
mov
adc
into
fidivrl
fisubs
out
fbld
and
jp
fstps
xor
jnp
jp
sub
aam
aas
fcmovnb
jmp
lds
lahf
lahf
out
jmp
push
or
das
fisttpl
popa
out
sub
lods
mov
mov
add
les
nop
and
add
jmp
test
sbb
jge
cmp
dec
lcall
xchg
push
mov
inc
xchg
and
xor
or
imul
jb
lods
add
mov
xor
pushf
or
dec
xor
imul
mov
movsl
lahf
sahf
mov
fld
sbb
dec
push
or
inc
cltd
xchg
fs
pop
outsb
fwait
xchg
dec
adc
cwtl
mov
mov
sbb
sbb
mov
mov
in
mov
xchg
cwtl
dec
push
out
aam
sub
das
or
addr16
rol
mov
fsubp
mov
stos
xrelease
xor
in
inc
mov
mov
fistps
jns
xchg
pextrw
imul
adc
xchg
jge
or
add
popf
fisttps
adcl
gs
lods
mov
fldcw
sti
jnp
push
scas
cli
lea
push
in
in
adc
sbb
iret
sbb
rorb
test
mov
sub
inc
pushf
lea
push
mov
xor
xchg
cmpsl
pusha
int
push
sbb
imul
xor
sbb
mov
ret
and
xlat
or
scas
adc
hlt
fimuls
arpl
pop
bound
data16
hlt
repz
cmpb
dec
cwtl
int3
sti
push
aaa
push
das
mov
pminub
mov
dec
pop
movsb
or
les
in
sub
enter
daa
mov
popa
cmp
jno
add
je
in
dec
cmpsl
add
aaa
xchg
mov
enter
inc
jno
push
in
push
test
nop
xchg
or
mov
mov
pop
or
add
loope
pop
cmp
adc
stc
add
sub
int3
cmp
cwtl
pop
adc
jmp
pop
push
je
sbbb
sbb
add
xor
nop
outsl
push
cmp
jae
sub
leave
pop
jno
out
lcall
pop
fsub
mov
sub
xor
imul
cmc
mov
dec
jnp
sub
lea
lds
cmp
mov
push
imull
mov
insl
shl
dec
mov
movl
into
pop
fldl
cmc
outsl
mov
xor
jp
mov
data16
gs
ret
rolb
lds
cmp
lods
lock
out
jmp
cli
cwtl
mov
imul
mov
in
push
inc
icebp
loopne
mov
pop
test
jecxz
imul
addl
mov
mov
jae
mov
xlat
sub
push
mov
cmp
out
lods
roll
adc
nop
inc
scas
xchg
jbe
inc
inc
aas
jmp
les
push
jno
mov
pop
ds
jo
lds
rcll
push
loopne
pushf
lods
fs
jmp
or
inc
ja
into
inc
lret
aas
cmc
jb
sub
ljmp
jecxz
and
idivl
loop
add
lock
mov
aas
subl
insb
fistpl
push
stos
mov
pop
fwait
mov
cltd
lock
das
and
mov
mov
in
push
inc
lods
shll
leave
out
es
stos
ja
sbb
insl
dec
dec
lcall
add
mov
cld
or
push
mov
jo
mov
push
push
movsl
rorb
mov
and
aam
add
mov
push
or
fstpl
mov
mov
and
lods
divb
out
fs
add
add
cmp
jne
add
rorb
in
mov
insb
xchg
and
cmp
xchg
adc
xchg
in
clc
rorl
fdivrl
xor
cltd
push
cmc
sbb
mov
mov
daa
lods
or
test
mov
js
aam
ljmp
dec
lahf
pop
xchg
lcall
stc
inc
popf
inc
xor
or
jge
fwait
dec
jns
fwait
jne
adc
mov
es
out
clc
push
jne
das
sbb
jns
sbb
in
and
out
mov
jne
sub
dec
jp
and
mov
sbb
mov
adc
fistpll
mov
daa
jmp
dec
loopne
cmpl
aas
push
cltd
std
jnp
push
push
lcall
xor
pop
dec
mov
jmp
in
icebp
xchg
cmp
or
xor
adc
jl
ret
sub
inc
bswap
xor
inc
lahf
out
or
adc
inc
xor
lea
add
imul
cmpsl
fidivrs
add
mov
in
aaa
leave
and
leave
arpl
add
sbb
ljmp
sub
or
mov
push
adc
outsb
xor
adc
scas
adc
and
sarl
sysexit
outsl
movsb
cwtl
adc
push
fcmovnu
jg
pop
sub
or
sbb
daa
mov
outsb
jno
jo
jl
jne
dec
push
push
mov
pop
in
push
movsl
repz
andl
sbb
lahf
pusha
je
push
mov
push
test
pop
subl
imul
add
jp
dec
push
jbe
loope
mov
sub
or
aas
push
push
outsb
xchg
jns
adc
cwtl
mov
subb
sbb
jne
add
dec
mov
push
inc
mov
sub
js
pop
lock
lcall
cmp
mov
sahf
mov
mov
jns
jg
fwait
out
mov
lea
sti
pop
mov
sbb
and
in
mov
sbb
jno
imul
ja
lret
lock
mov
daa
mov
into
ljmp
xor
je
outsl
push
push
adc
sbb
fs
cmp
cmpxchg
dec
adc
lods
jmp
outsb
jp
test
dec
pop
xor
clc
cmp
jbe
or
je
add
gs
xchg
enter
int3
dec
subl
and
stos
dec
add
cmpsb
imul
imul
sahf
mov
cmpsb
in
push
sti
mov
ja
push
not
push
push
xor
dec
sub
inc
push
jg
fsincos
testb
add
je
and
or
into
sarb
out
das
xor
adc
xchg
or
xchg
pmullw
inc
mov
inc
in
scas
aas
xchg
push
push
jb
jne
dec
popa
gs
je
lea
idivb
popa
mov
cwtl
sarb
stc
lret
pavgw
add
fisttpl
test
or
sub
ror
das
add
mov
push
jmp
roll
or
insl
add
orb
push
cmpsl
xchg
mov
cld
xor
mov
int
int
jmp
insl
and
mov
cs
jo
mov
and
xor
ret
or
add
fldl
insb
clc
pop
js
xchg
cltd
out
ljmp
xor
pinsrw
movsl
pop
xchg
dec
rclb
cli
inc
pmulhuw
roll
js
cltd
cltd
imul
mov
lods
cld
xchg
testb
pop
test
inc
dec
xchg
out
sbb
mov
stos
and
negl
cwtl
xor
add
int3
daa
sahf
lcall
mov
add
sbb
cmpsb
daa
mov
sub
pop
dec
add
ja
inc
xchg
dec
in
aaa
into
inc
scas
jp
aaa
movl
jne
cmpsl
xor
out
xlat
jl
clc
jg
in
loopne
xchg
ss
pop
out
fistpll
or
jecxz
jp
and
mov
leave
pop
mov
mov
mov
pusha
xchg
in
inc
int3
pusha
aaa
push
mov
push
add
xchg
mov
jmpw
xchg
xchg
adc
push
pop
insb
test
mov
int3
push
or
pop
stos
xchg
xchg
mulb
add
jecxz
loop
adc
jnp
ret
adc
mov
fcoml
pop
pop
sbb
jae
push
push
inc
mov
mov
push
scas
xchg
adc
repz
ds
push
xchg
xor
inc
pop
fisubs
call
shl
inc
mov
aaa
outsb
mov
pushf
cmpsl
cs
je
push
arpl
jo
jbe
pop
push
jge
cmpsl
int3
sbb
adc
or
push
int3
rcll
in
loopne
cmpsb
push
cmc
aam
xor
outsb
mov
cmp
sarl
movsb
and
negb
ret
enter
daa
xchg
sti
cmp
icebp
stc
jno
and
dec
test
mov
jge
mov
cli
sub
lahf
jg
mov
mov
and
les
inc
shll
cmp
push
in
lock
dec
rcll
mov
stos
jecxz
daa
xor
idivl
out
mov
outsb
stc
dec
mov
shlb
mov
sbb
jmp
xor
add
fwait
bound
dec
js
pop
outsl
addr16
dec
fdivl
cmp
sbb
xchg
test
ret
fwait
pop
jg
mov
mov
mov
movsb
and
inc
shll
int
jne
les
fsubrs
xchg
test
nop
lret
fwait
rcll
repz
cmp
cmc
std
aad
xor
jne
loop
or
stc
shrl
jne
es
mov
pop
lahf
xor
or
rcrb
js
mov
xchg
xor
fwait
addr16
aas
xchg
or
stos
lahf
and
mov
jecxz
out
mov
imul
subl
xchg
cmp
sub
xlat
test
mov
mov
adc
ss
cmp
aad
clc
ss
dec
mov
in
xor
les
clc
dec
repz
pushf
and
lea
mov
outsb
ficomps
dec
cmp
adc
cmp
add
cmp
push
and
test
aas
xor
gs
fcom
mov
jecxz
mov
idivb
sar
dec
nop
fwait
cwtl
jnp
lret
mov
sub
add
mov
cwtl
adc
dec
popa
data16
adc
iret
out
lock
fs
mov
nop
xlat
xchg
mov
imul
es
jecxz
insl
ljmp
cmpsl
xchg
adc
push
xlat
xchg
cld
pop
jecxz
lret
cmp
iret
mov
jle
or
pusha
mov
sub
push
in
or
push
mov
push
clc
lcall
ljmp
mov
mov
sub
xchg
nop
jno
push
int
cmovae
add
push
dec
test
cli
pop
mov
xchg
pop
xchg
dec
iret
or
test
pminsw
pop
mov
push
pop
or
in
push
cmp
jmp
pop
dec
inc
add
shl
cli
inc
cltd
xor
xchg
or
fisttps
xor
jnp
mov
outsb
pusha
cmc
mov
or
cmp
imul
mov
or
in
fwait
and
dec
jne
popf
insl
mov
jge
out
mov
pop
bound
ljmp
repnz
xchg
test
lcall
loope
addr16
mov
sbb
jmp
test
mov
mov
cmp
jle
gs
in
pop
lcall
dec
push
mov
jmp
fimuls
jbe
pop
dec
pop
popf
push
mov
push
dec
movq
sbb
cmpsb
jnp
cmp
push
ret
adc
out
iret
cmp
inc
pop
dec
aad
inc
and
dec
cmp
div
or
pop
inc
adc
pop
mov
cmpsb
pop
call
sbb
jmp
inc
fiadds
pop
test
enter
or
arpl
repnz
cmp
adc
pop
hlt
mov
inc
shlb
das
loopne
and
add
fnstenv
gs
cwtl
test
fs
test
mov
xchg
test
xor
leave
fldl
pop
lret
and
aaa
cmp
dec
movsb
scas
mov
push
jns
mov
in
xor
ds
movsl
daa
xchg
jecxz
aas
mov
jl
jno
dec
hlt
sahf
jne
mov
pop
lock
xchg
pop
idivb
push
icebp
pop
pop
inc
pusha
test
pop
jle
pop
js
pop
clc
outsl
in
push
xchg
fsubp
ds
sub
sbb
pop
sbb
jl
lock
jb
cmp
cmp
xchg
add
xor
push
add
add
scas
pop
out
iret
daa
lcall
sti
fsub
movsl
mov
or
movl
dec
scas
sub
mov
lds
cli
out
aad
adc
sarl
out
push
mull
es
sahf
shrl
sahf
sbb
push
push
xor
jmp
stc
mov
mov
lods
sar
dec
js
lods
mov
call
out
inc
mov
xor
sub
fnstsw
or
mov
mov
loopne
arpl
pop
push
shrb
sub
cmp
stos
roll
movsb
ficoml
call
pop
jne
out
mov
mov
jl
mov
call
cmp
in
and
ljmp
fldcw
push
les
aas
inc
repz
or
es
les
or
in
adc
pop
add
fsts
pop
fwait
jl
lods
outsl
push
jmp
addb
or
fldl
cli
int
shr
mov
dec
dec
in
je
bound
test
dec
std
hlt
mov
cwtl
ss
iret
mov
add
subl
fdivp
xor
lock
or
mov
movb
or
and
incl
shll
dec
cmp
iret
sub
add
cmpsl
test
xchg
mov
sub
popa
cld
mov
push
mov
test
hlt
mov
scas
in
push
rol
sub
push
mov
rol
in
rcll
add
in
aad
sbb
pop
mov
popa
dec
fldenv
aaa
mov
ljmp
fisttps
mov
inc
mov
xlat
push
sbb
ret
les
ss
sbb
add
xchg
xor
pop
mov
ret
fidivs
icebp
add
add
xor
pop
call
mov
mov
adc
mov
mov
ja
leave
mov
inc
cmc
push
sbb
fwait
push
jns
dec
and
jne
clc
xchg
fs
call
xor
push
xchg
aam
sub
mov
or
push
dec
addr16
fdivrl
inc
xchg
mov
inc
cmp
xor
es
pusha
insl
inc
sbb
xchg
cltd
ds
pop
sub
jmp
test
sqrtps
loop
sub
add
push
push
xchg
subb
fisttps
insb
xor
jnp
jns
scas
xchg
out
or
sub
ret
lcall
mov
es
test
or
addb
ficompl
mov
sbb
sub
fstpl
push
fisubs
out
shrb
cltd
mov
fst
jne
mov
lods
hlt
or
in
aas
jbe
je
jge
mov
int
push
outsl
xchg
or
pop
inc
add
sub
int3
cmpsl
or
pop
ds
push
mov
cs
scas
lods
rcr
and
mov
cmp
icebp
movsb
cmp
mov
cmpsb
nop
fmulp
in
les
enter
daa
test
cmp
cmp
jno
paddusw
mov
ds
mov
movsl
or
and
sbb
push
xor
test
mov
es
mov
fs
movsl
pop
mov
jae
iret
pop
aaa
lds
loope
mull
cmp
outsb
mov
mov
sub
cmpsl
jae
sbb
aam
xchg
and
dec
gs
imul
jo
insl
and
hlt
push
mov
pushf
and
stc
pop
test
push
nop
add
jmp
andb
cmc
in
mov
fiaddl
ss
mov
fsubs
mov
sub
inc
testb
aas
sub
push
xchg
xchg
mov
xor
xor
add
add
inc
mov
or
adc
dec
pop
rcrw
lods
sahf
sar
mov
imul
in
cmp
lahf
xchg
dec
imul
sub
sbb
mov
repnz
sub
add
bnd
ret
cld
sbbb
push
xchg
xlat
es
ret
sub
cmp
in
out
cld
sti
xchg
ja
cs
dec
aad
aam
nop
scas
push
sub
shlb
ja
fldenv
ficoml
lods
subl
call
insb
jp
mov
jno
scas
and
pushf
pop
sbb
jmp
xor
pop
clc
lea
inc
xchg
scas
xchg
inc
mov
aas
jno
dec
jb
and
je
lret
insb
out
testb
data16
fwait
insl
rcrb
ss
mov
mov
pop
dec
popf
das
jg
aad
push
mov
popf
lock
push
mov
xor
shrl
es
in
jns
mov
sahf
push
cmpsl
test
dec
mov
add
scas
lret
sbb
andb
cmpsb
pop
int
mov
sub
lds
ret
mov
add
fnstsw
or
outsb
push
inc
popa
popa
pop
out
mov
cmp
lock
sub
push
inc
scas
or
add
imul
inc
xor
xchg
mov
outsl
mov
xchg
or
pop
arpl
stos
lock
add
sbb
addr16
xor
sarb
js
xor
and
mov
hlt
and
mov
subb
dec
lds
lahf
inc
mov
or
pushf
pusha
fwait
subl
je
outsl
mov
mov
and
out
je
pop
bound
mov
in
adc
xchg
and
pop
sub
push
push
outsl
addr16
xchg
jp
data16
mov
mov
mov
jle
dec
xor
sub
ficoms
xchg
cs
push
jmp
je
faddl
movsl
jo
popf
mov
lock
push
sti
jle
jmp
frstor
inc
sub
cmp
es
mov
push
push
push
cmp
sbb
dec
clc
int
ret
mov
inc
cmp
ret
or
inc
stos
xlat
repz
std
pop
lods
inc
sub
cmp
or
in
pop
repnz
mov
fimuls
out
push
adc
inc
js
mov
xor
imul
push
fsubrp
arpl
mov
sbb
repz
aaa
push
sbb
or
lret
add
inc
mov
insl
lcall
roll
jo
mov
scas
mov
and
inc
lods
movsb
les
push
pop
lock
adc
in
stos
fstps
xor
shlb
xor
imul
jl
mov
out
out
sti
movsl
nopl
iret
push
push
lahf
fsubrl
and
xchg
inc
jle
cmp
jne
mov
int3
insl
pop
js
mov
jno
test
jmp
sub
outsl
daa
cmp
add
outsb
and
pop
shlb
xor
xor
cmpb
cwtl
add
mov
jge
dec
in
sub
shl
leave
sub
pop
lcall
or
sub
fdivl
test
push
faddl
mov
push
mov
sbb
and
or
xchg
pop
push
mov
idivb
lret
push
xlat
xchg
scas
mov
lods
sbb
in
cmc
push
jl
xor
lcall
les
stc
clc
sub
adc
inc
push
scas
xor
test
mov
adc
divb
ret
shlb
xchg
mov
push
xor
xor
loopne
nop
inc
pop
inc
jbe
adc
in
imul
cli
sub
ret
xchg
xchg
daa
sbb
pop
xor
gs
mov
movsl
je
mov
push
push
inc
sti
inc
xchg
fwait
mov
add
test
adc
xchg
jnp
les
cmp
jl
jns
sub
in
lret
call
jmp
pop
pop
lods
cli
adc
int3
addr16
add
rcrl
mov
inc
sbb
pop
inc
push
sub
aas
adc
push
je
xchg
testb
std
inc
xor
cwtl
lods
dec
loop
cmc
pop
add
pop
push
lods
dec
mov
add
pop
mov
fdivrs
sub
pop
das
jl
dec
mov
inc
and
or
and
mov
push
xchg
insl
lahf
dec
aad
xor
add
mov
fcoms
lret
aad
lret
mov
or
sbb
repz
in
adc
shrb
sub
jae
aam
mov
stos
push
xlat
aam
fstp
dec
sar
dec
adc
xchg
xchg
cmp
ljmp
insl
lods
or
jns
out
push
fwait
std
xchg
gs
push
pusha
and
add
lret
mov
test
lret
adc
push
xchg
push
dec
add
insb
test
jecxz
xchg
cmp
mov
cmp
push
pushf
sbb
and
adc
pushf
jns
add
push
out
xlat
cld
daa
xor
rorl
cmp
xor
repz
pop
sbb
mov
cmp
inc
pop
mov
inc
and
data16
mov
sbb
pop
jae
ficompl
mov
xchg
jl
push
pop
shlb
push
jns
jp
in
and
jb
xor
sub
adc
pop
jcxz
lds
cmp
mov
push
add
push
jmp
xor
hlt
pusha
mov
inc
jbe
add
cli
xchg
aas
sub
or
push
push
mov
push
add
mov
and
nop
insb
or
cli
scas
dec
xor
push
xchg
in
adc
fs
iret
push
in
inc
sub
int3
pop
repz
inc
inc
adcb
shl
inc
scas
jne
or
js
pop
inc
stos
jo
fidivrl
scas
loope
pop
sub
imul
or
rcrb
mov
orl
leave
js
sbb
mov
popa
mov
jge
sub
sbb
or
or
add
sub
mov
pop
pushf
les
push
cmpl
out
fiaddl
scas
imul
and
pop
sarb
mov
cmp
push
pop
jecxz
xchg
inc
or
xchg
ss
enter
daa
adcl
cmp
sub
jl
mov
js
or
jb
push
cmp
and
and
in
adc
push
inc
or
push
insl
pop
repz
js
or
pop
mov
add
sbbb
dec
or
cmp
sub
adc
or
hlt
ds
insb
sbb
test
add
stos
fidivs
clc
pushf
addb
out
int
lock
sub
lds
imul
or
orl
or
xlat
and
cmc
iret
pop
test
push
add
inc
jg
jmp
aas
mov
jns
mov
mov
fldcw
mov
sbb
mov
movsb
aam
lret
xchg
shrl
mov
fistps
enter
pop
sub
sbb
cld
xor
pop
stc
scas
jb
fs
sub
lcall
lods
insb
cltd
pushf
mov
inc
or
lret
xor
lods
lea
jge
pop
mov
fisubs
pop
lret
lds
adc
dec
lahf
imul
movsl
inc
xchg
dec
jp
sbb
cwtl
movsl
pop
xlat
movsb
je
sbb
mov
mov
pop
sbb
aad
jb
nop
fs
std
dec
inc
mov
push
ja
les
popf
repz
or
pop
lea
push
call
push
stos
pop
sbb
sbb
jmp
fdivrl
inc
mov
jecxz
aas
scas
out
jb
stc
sub
je
xchg
fs
sub
testb
add
mov
pushf
mov
std
leave
xor
dec
aaa
and
mov
inc
mov
das
pop
int
mov
std
insl
out
and
lods
cmp
or
xchg
cld
cmpsl
or
mov
scas
lret
or
lret
clc
jle
mov
lcall
pop
or
push
sub
lds
aaa
ja
ret
aam
mov
lcall
clc
xchg
hlt
ljmp
sub
jle
out
mov
aaa
xchg
lods
xor
sti
loopne
movswl
stc
add
pop
jne
jl
hlt
test
bound
xchg
mov
imul
je
add
movb
mov
pop
mov
lock
fsts
add
sub
jbe
lds
mov
mov
in
cs
xor
mov
test
ja
in
push
dec
stos
jae
inc
mov
movsb
outsl
dec
dec
lret
inc
mov
mov
sbb
bound
adc
pop
test
rcrl
sub
or
hlt
loopw
data16
sar
add
enter
test
shl
xchg
fsubs
inc
mov
xchg
aam
repz
or
sub
cwtl
pushf
sbb
sub
popf
lock
sarl
clc
add
jne
jae
jae
je
dec
into
shrl
sbb
rorb
iret
mov
inc
ret
or
xor
jae
fidivrl
or
repz
sub
jb
add
or
push
imul
insb
mov
jle
shl
je
leave
out
dec
shl
cmpsl
arpl
inc
jbe
stos
cld
fistpll
inc
sbb
aaa
xchg
cmc
fs
in
add
nop
mov
push
mov
push
fs
jo
scas
dec
dec
mov
cmpsb
andb
and
fidivl
push
mov
mov
in
jns
or
and
cmp
outsb
jno
icebp
xor
sbb
rolb
movsl
sbb
add
lahf
sbb
ja
test
mov
inc
pushf
cmpsb
mov
sti
mov
imul
fcompl
mov
sti
loope
test
sub
push
cli
cmp
xor
lds
push
cmc
mov
out
xchg
jbe
loopne
sbbl
mov
xor
mov
push
push
push
test
sahf
int
sub
cmp
inc
push
mov
js
sub
cs
test
add
and
dec
jg
add
mov
inc
scas
mov
xchg
mov
or
ss
mov
fcom
mov
arpl
aad
add
lret
insb
sbb
dec
pop
into
cmp
fprem1
loopne
fwait
xor
movsb
and
loopne
loop
mov
jne
fnsave
insl
pop
mov
lods
push
roll
mov
cmc
pop
cli
std
pop
in
jno
and
cltd
mov
in
mov
aam
insb
gs
outsb
scas
loopne
push
xor
adc
ja
adc
lcall
or
add
shrl
sub
out
or
sti
movsb
repnz
popa
fidivrl
nop
aas
call
sbb
inc
xchg
flds
add
repz
inc
xor
push
lea
fldz
jmp
sub
pushf
pop
push
js
and
mov
loope
loopne
sub
in
inc
xchg
dec
jb
jge
dec
sub
inc
jecxz
mov
test
sub
nop
sets
sub
mov
mov
dec
pop
sbb
inc
mov
aam
mov
fdivp
loop
stc
das
cmp
mov
mov
bound
mov
es
push
insl
insl
int
dec
sub
ljmp
dec
jmp
xchg
fmulp
adc
mov
and
push
sub
dec
rclb
cltd
and
loop
sub
add
adc
je
aad
xchg
adc
sub
mov
popa
cmpsb
lds
mov
sbb
or
pop
insl
nopl
add
and
cltd
mov
addl
xor
shlb
int3
test
stos
pusha
xchg
add
sbb
or
shr
cs
pop
xorl
push
ljmp
pop
pop
call
aad
or
lods
xorb
jmp
mov
mov
mov
mov
in
ja
add
push
push
or
out
fwait
push
out
dec
scas
ja
jne
dec
jne
sbb
bound
dec
jns
push
add
mov
add
fwait
loopne
sub
pop
fnstenv
jp
cld
nop
mov
in
xor
scas
lea
lret
inc
lahf
fldenv
sbb
xchg
cmpsl
lret
cmp
lcall
add
xchg
push
out
mov
lock
push
push
cmpl
mov
push
insb
fdivp
or
movl
push
and
enter
xor
fwait
pop
popa
and
inc
pop
scas
mov
inc
mov
imul
test
mov
sub
jns
imul
xor
rclb
repnz
or
shl
lea
and
jbe
adc
jge
inc
movsl
sbb
sub
or
dec
sahf
int3
push
lock
fs
push
inc
mov
inc
jo
sub
add
cmp
mov
push
add
mov
pushf
js
in
pusha
pushf
addr16
daa
cmpl
xchg
jno
ficompl
int3
out
dec
pop
inc
ds
adc
movsl
and
repz
cli
cs
jl
arpl
call
pop
jmp
mov
repz
js
arpl
push
mov
sub
sub
cmp
xor
mov
rol
mov
scas
xor
cmp
dec
cmp
mov
push
fildl
push
cmp
sub
mov
xor
jp
fdivrl
mov
js
cmp
test
cwtl
cmp
sbb
and
mov
icebp
mov
in
mov
jmp
sbb
pop
cltd
sarl
mov
mull
cld
lret
pop
rcrl
sbb
mov
into
pop
mov
cmc
cmpsl
cmpsb
push
outsl
subl
stc
sbb
xchg
add
cmp
mov
mov
pusha
mov
add
xor
negl
or
inc
testl
loopne
push
pop
mov
mov
push
adc
push
outsl
xchg
iret
xchg
sbb
push
dec
inc
xlat
and
sub
popa
scas
mov
xchg
mov
sti
push
dec
gs
dec
mov
mov
dec
pop
inc
fsubr
fnstcw
les
mov
xor
cli
mov
sub
insb
push
je
adc
mov
cli
jmp
cwtl
mov
inc
scas
jne
inc
mov
movsb
sub
xor
dec
mov
mov
jecxz
jg
testb
std
aaa
fsubrs
xor
lea
and
lea
push
fistl
cmc
fnstenv
cmp
fistl
mov
imul
and
ret
call
es
outsb
push
insl
push
in
dec
and
andb
push
fdiv
pop
pushf
icebp
cld
popa
cmp
lret
imul
loopne
shll
in
dec
call
shl
imulb
int
ffree
bnd
push
and
fstl
clc
cld
xchg
outsl
xchg
push
cmpsb
adc
cmp
ret
popa
mov
pusha
sbb
jl
test
cmp
xor
bound
jge
in
std
sbb
cltd
ljmp
mov
lahf
jo
push
jbe
dec
cmp
pop
test
in
pop
xchg
add
roll
gs
rdmsr
or
or
das
cmpsl
add
aad
xor
sub
mov
pop
in
dec
and
xor
insb
add
sbbb
inc
call
cld
dec
fwait
cmp
popf
dec
jne
lcall
lock
test
addr16
jns
xor
xchg
pop
lods
sub
push
dec
add
or
sub
mov
dec
jmp
mov
lock
mov
mov
in
or
pusha
je
dec
fbstp
pop
aas
xchg
jp
pop
jmp
mov
mov
pushf
popf
ds
sarb
add
stos
mov
mov
mov
call
mov
push
insb
stos
mov
mov
dec
ret
mov
cwtl
mov
lds
mov
outsl
or
jmp
jle
fcmovu
pop
xchg
mov
icebp
sbb
filds
imul
xchg
sub
scas
movsb
pop
mov
jl
aas
leave
fst
and
subl
jbe
fwait
scas
jge
es
sbb
xchg
cli
aaa
adc
orl
ret
out
xor
jnp,pt
pop
sub
out
sub
xor
jmp
push
scas
or
and
addr16
xchg
adc
push
push
inc
mov
pop
shll
movsl
sbb
and
cmp
repz
jl
inc
dec
mov
xchg
movsl
sub
xchg
and
inc
lcall
mov
add
xor
dec
pop
sbbl
pop
jb
and
ret
enter
test
push
outsb
scas
aam
adc
sahf
movlps
push
dec
lds
xchg
add
insl
stos
xor
push
push
pop
nop
mov
insb
xor
sub
mov
lcall
and
in
mov
sahf
ficomps
mov
push
mov
shll
pop
xsaveopt
insl
and
mov
adc
fmuls
adc
loope
xor
or
pop
shll
mov
negl
push
xlat
mov
add
xor
hlt
mov
stc
aam
dec
fs
popa
adc
lea
jg
das
out
in
cli
arpl
cmp
pop
inc
in
cmp
lock
lret
sbb
out
inc
pop
shr
adc
imul
mov
scas
jg
xchg
pushf
sub
dec
ja
xlat
popa
ficompl
sub
cmpsl
mov
decb
jmp
daa
jecxz
aad
into
xchg
nop
cmc
xchg
dec
and
cmovb
iret
adc
mov
test
insb
int
repz
shlb
lea
in
cmpsb
es
out
mov
xor
fnstsw
scas
loope
jmp
sbb
inc
and
inc
mov
or
dec
sbb
mov
sbb
notb
js
fisubrs
cwtl
cwtl
push
push
mov
xor
mov
push
pushf
dec
xor
mov
mov
xchg
adc
cwtl
sbbb
sbb
and
loopne
cli
ja
es
add
filds
cmpsl
jg
and
xor
add
lret
inc
mov
add
dec
mov
push
mov
sub
xchg
popa
aam
lahf
and
addl
clc
aaa
ljmp
lods
cmc
shll
adc
lods
mov
and
out
aas
xchg
subl
mov
cltd
and
stos
test
fidivs
pop
xchg
mov
shrl
aas
mov
rcll
mov
stos
fwait
add
mov
cmc
add
movsb
mov
or
fwait
xchg
int3
or
lods
dec
xor
addb
inc
incb
mov
daa
pop
xchg
ja
mov
dec
test
or
stos
push
or
out
fwait
insb
xor
dec
je
sub
dec
push
out
iret
jnp
bound
jns
mov
in
movsb
mov
scas
cltd
adc
mov
sub
or
adc
fists
jp
mov
mov
sbb
aaa
dec
inc
mov
push
lea
cmp
pusha
psubq
xchg
dec
aad
jmp
imul
push
je
dec
popf
gs
gs
add
and
mov
lods
mov
pop
shrb
mov
add
arpl
rorl
xchg
icebp
mov
jb
shlb
nop
lds
jne
or
fs
mov
mov
adc
pop
stc
fidivrs
rol
cmp
ror
cld
mov
iret
call
mov
arpl
xchg
les
cwtl
icebp
jge
in
jns
idivb
add
rcrl
inc
or
cmp
int3
sub
xchg
pop
pop
adc
push
xor
inc
cmpsb
or
pop
sub
movsb
jnp
icebp
push
mov
jge
in
cs
or
daa
jg
in
push
fs
sbb
jl
jnp
dec
std
jg
ds
sti
and
xor
insb
lahf
ja
loopne
and
test
jle
rolb
into
inc
dec
and
js
or
mov
jae
out
ljmp
movb
data16
adc
dec
js
and
js
or
push
sbb
stos
sub
xor
faddl
pop
pop
sub
sarl
repnz
addr16
js
sbb
push
ret
add
sub
lret
jnp
lock
fnstsw
outsl
mov
mov
xor
mov
lock
ss
jns
cld
adc
mull
xor
ror
lds
ret
in
xor
xor
lret
aas
test
loop
enter
cmc
mov
jle
call
data16
sahf
lods
or
int3
mov
leave
out
and
cli
xchg
jecxz
xor
jns
cmp
pop
testb
mov
cmp
lret
sbb
fcompl
pop
adcl
clc
or
jne
adc
call
xchg
push
in
sbb
test
jg
mov
cs
imul
dec
mov
aad
pop
out
shlb
dec
andl
fldl2e
lret
adc
ja
jecxz
xchg
cmp
in
int
mov
data16
pop
in
push
adc
test
arpl
mov
xchg
aas
sub
jb
sbb
dec
daa
je
and
jecxz
notb
gs
cwtl
push
dec
add
lcall
dec
pop
jns
fucomi
sti
jb
and
lock
xchg
das
xlat
clc
xor
sub
idivb
shrl
rorl
pop
es
insl
and
arpl
add
xlat
cld
mov
cmpsb
lret
mov
in
mov
mov
mov
xchg
add
mov
sub
jne
aam
stos
and
push
cmpsb
leave
loopne
mov
shlb
xchg
rolb
cmp
lods
and
jg
cmp
inc
add
addr16
jae
add
test
and
mov
insl
dec
xchg
dec
pop
clc
pusha
test
sub
xchg
adc
pop
gs
push
push
mov
inc
add
and
xor
mov
cli
xor
cmc
jg
push
mov
mov
loop
pop
ja
push
lcall
lea
jp
jnp
fwait
or
jne
fs
mov
clc
mov
in
andb
fisubs
in
push
xchg
xchg
std
lret
and
hlt
sub
clc
nop
sub
push
icebp
jp
in
mov
lds
push
aam
dec
fiadds
pusha
stos
or
fildll
pop
xchg
and
iret
jmp
ss
mov
push
aaa
mov
popf
mov
scas
push
inc
and
popf
mov
and
cmc
push
jnp
dec
xor
cli
int
adc
je
iret
xor
loopne
xchg
inc
pop
push
iret
mov
jge
jb
out
test
jmp
push
es
fidivrl
lds
mov
xchg
xor
ficomps
mov
lds
mov
mov
and
call
hlt
pop
xor
arpl
out
jbe
or
jge
xchg
cmpsb
sbb
loopne
or
pop
int3
adc
jmp
push
lock
imul
mov
andb
sbb
cmp
cltd
sub
sbbl
enter
daa
jle
les
popf
inc
add
imull
dec
sbbl
mov
xchg
cltd
and
loop
xchg
outsl
mov
test
dec
iret
inc
fmuls
xor
pop
push
sarl
in
lock
pop
sbb
repnz
push
movsl
cmp
mov
adc
push
cmc
dec
subb
add
cmp
xor
pop
lcall
sahf
ja
pop
out
xor
lret
add
push
sbb
fdivrl
mov
sub
jmp
test
push
enter
das
jg
fwait
add
dec
cld
jecxz
lret
and
mov
sub
mov
mov
adc
xchg
popa
sub
mov
jb
sbb
leave
cmc
cld
push
inc
xor
aam
push
sbb
loop
mov
stc
inc
jo
or
fs
lods
out
mov
xor
pop
in
cli
leave
xchg
jle
int
aas
cmp
xchg
cltd
or
int3
into
gs
mov
loopne
clc
pushf
pop
inc
lahf
adc
gs
imul
leave
sbb
sbb
inc
xchg
sbb
cmpsb
cmp
jp
sub
jb
pop
idivb
aam
cltd
sti
pusha
stc
imul
mov
inc
nop
stos
ja
dec
loop
jne
adc
fldenv
sti
jge
addb
push
nop
fadd
ds
lods
lea
mov
pushf
ret
in
in
fcomps
jo
adc
insb
jmp
outsl
dec
pop
insl
cltd
add
movsb
xor
mov
mov
xchg
cmp
adcb
aam
jecxz
jnp
neg
lods
scas
std
sub
ds
push
xlat
shlb
lea
dec
or
mov
into
inc
movsl
lock
xor
pop
mov
nop
cmp
rcrl
shrl
insl
or
adc
ss
out
loop
fdivr
loop
iret
lret
and
inc
and
mov
out
rcrb
pusha
sub
or
push
imul
dec
clc
lods
dec
adcb
add
popa
add
inc
lods
in
adc
mov
inc
push
inc
mov
ljmp
loopne
test
xchg
mov
mov
fwait
dec
outsb
push
mov
xchg
and
push
pop
adc
stos
jns
cwtl
push
notb
add
fisubl
xchg
rolb
inc
pop
out
add
mov
add
idiv
insb
pop
popf
shlb
dec
push
xlat
inc
lods
xchg
and
fwait
lret
dec
cmp
out
loopne
je
test
dec
out
lea
mov
push
stos
and
into
pop
mov
out
inc
cli
sub
repz
lds
lock
mov
fildll
jb
push
in
stos
ret
pusha
inc
sub
fisttps
scas
mov
das
xchg
add
andl
push
cli
stos
mov
mov
sub
jg
adc
call
mov
jnp
push
shrl
inc
cmc
ficoms
sbb
sbb
lcall
inc
mov
pop
jae
pop
ret
lods
mov
push
movsl
das
xchg
xchg
pop
or
imul
fidivrs
and
mov
jne
xor
inc
div
hlt
bound
pop
arpl
test
out
push
jge
es
and
pop
add
adc
mov
push
push
shl
inc
xor
cld
outsb
arpl
test
cmp
xchg
push
inc
mov
test
int
cld
pop
imul
push
jb
jge
mov
jno
in
jl
pop
adc
enter
mov
movsl
inc
or
and
scas
lahf
mov
aad
enter
cmp
fists
aad
addr16
push
lret
pop
ffree
sti
js
add
pop
das
lcall
loope
mov
ds
xchg
adc
das
xchg
cmpb
cmp
sub
les
and
xor
cmp
push
popa
dec
test
mov
aas
lret
popa
or
jno
dec
fsub
and
jno
or
mov
jg
lret
ljmp
mov
xorl
add
stos
cmp
jp
icebp
negl
jnp
lret
xadd
ret
mov
into
stos
ret
cltd
cmc
ret
add
outsl
std
scas
outsl
loop
jg
stc
stc
mov
adc
jmpw
lods
push
pusha
mov
adc
pop
sub
xor
rorl
pop
loope
incb
std
in
adc
js
fldl
sbb
out
add
shr
sbb
cli
jl
xlat
push
xchg
cmc
sub
lret
movsb
mov
aas
pop
fdivr
pcmpgtw
push
push
jne
fs
and
inc
adc
inc
and
lahf
fstps
push
les
adc
movb
lea
jo
or
adc
jae
mov
sub
aas
les
imul
push
ror
aas
imul
dec
jle
xchg
push
jecxz
push
and
std
roll
outsb
mov
cmp
jle
xor
sbb
dec
cmpb
xchg
or
lock
es
dec
dec
add
xlat
loope
shl
and
es
add
lock
sbb
data16
jl
fidivrs
mov
pop
cmp
xchg
jne
mov
les
mov
lds
in
sub
mov
xchg
push
sub
and
lock
call
imul
sbb
popa
sbb
pop
mov
or
rcll
push
pop
psubw
sbb
dec
pop
xor
jo
ret
mov
dec
sub
aad
aaa
test
mov
jne
pop
out
xchg
rcrl
movsl
stos
push
in
add
cmc
fdivs
xor
adc
fdivl
mov
or
out
mov
pop
xchg
in
jle
xchg
dec
pop
out
xchg
inc
inc
mov
js
stc
or
mov
jl
loopne
xor
insb
cmp
sub
aad
fsubp
pop
mov
lods
out
orb
pop
jl
out
inc
fsubs
fbld
mov
push
inc
mov
mov
in
test
pusha
loopne
xchg
fildll
jmp
int3
xchg
lds
mov
adc
leave
push
mov
add
insb
cmc
icebp
adc
and
scas
add
push
mov
out
lock
pop
je
cmp
cmp
lea
loope
dec
cmpsl
mov
inc
and
dec
fisubl
jecxz
push
mov
xchg
fisubs
lds
lods
std
rcrb
inc
mov
enter
mov
inc
lcall
dec
imul
mov
jg
jp
lods
add
push
int3
ljmp
push
mov
jmp
stc
aam
jo
jno
scas
test
cmp
movsb
gs
shl
cmpsb
sub
in
jecxz
mov
or
pushf
daa
jl
sarb
insb
lahf
jno
xorb
adc
jge
movsl
inc
filds
lahf
aam
and
mov
xchg
push
fbstp
inc
not
xchg
lea
test
add
or
pop
adc
outsb
clc
pop
push
dec
pop
loope
xlat
mov
cmp
push
outsb
cmp
adc
or
rorl
lahf
repz
dec
add
pop
add
mov
je
int
mov
sub
jecxz
xor
jnp
nop
mov
sahf
push
pop
test
ja
addb
sub
mov
jns
mov
lret
nop
adc
cmp
xor
fs
into
rorl
lds
adc
into
mov
jb
push
movsl
adc
dec
push
loop
test
repnz
gs
adc
outsl
xor
stos
cmp
imul
pop
cmc
sbb
das
adc
jnp
lcall
pushf
pushf
cmpsb
out
imul
adc
cmp
adc
pop
mov
cmp
xchg
sahf
ja
sbb
xor
sub
sub
ror
in
stos
inc
jo
mov
fs
stos
imul
popa
mov
dec
mov
pop
dec
adc
repz
shrl
lea
jnp
call
jecxz
dec
pop
jp
adc
push
hlt
pop
mov
flds
mov
inc
sub
int3
jb
aam
dec
cmc
into
sub
push
cmp
repz
negb
push
std
jp
outsl
cwtl
test
stos
mov
adcw
fstpt
mov
ss
lock
jl
je
andl
imul
ss
repnz
add
xlat
mov
dec
or
push
cmpsl
jnp
loopne
pushf
gs
nop
sahf
and
cmp
lret
add
xchg
and
hlt
and
pop
in
aad
add
lock
xchg
ret
mov
xor
pop
fs
xchg
lea
je
xor
lods
gs
mov
imul
popf
stos
call
addps
es
std
jl
test
jno
mov
jne
gs
in
cmp
dec
test
fistps
sbb
imul
repz
push
pop
adc
stos
push
jg
push
cmp
movsl
add
adc
dec
cmp
out
mov
xor
dec
dec
mov
dec
pop
mov
adc
ja
dec
imul
and
or
or
fcompl
add
sbb
dec
mov
mov
xchg
ljmp
sub
jmp
imul
out
xor
jecxz
out
mov
test
insb
or
pusha
jnp
jecxz
lret
sbbb
leave
enter
xor
sbb
aam
add
mov
std
sub
and
inc
inc
insb
pusha
push
push
jnp
mov
scas
fs
push
iret
outsl
mov
iret
rcr
iret
dec
outsl
sbb
shlb
stos
movsl
inc
sahf
sbb
jae
ja
mov
or
push
call
add
push
es
xchg
imul
cmp
add
add
xchg
lcall
xlat
pop
jmp
sbb
test
hlt
clc
push
jnp
mov
jge
out
jne
loop
test
or
in
add
mov
addr16
adc
jae
cltd
mov
jo
xchg
scas
arpl
and
pop
mov
push
fisubs
cmpsb
scas
mull
sub
mov
jnp
mov
jno
inc
bnd
xchg
jns
mov
cmp
movsl
dec
sbb
inc
lret
add
push
outsb
sbb
test
stos
gs
inc
test
push
jg
pop
sub
pop
js
dec
pop
lods
jne
push
jmp
loope
xor
sub
hlt
adc
and
outsb
popf
cmpsl
test
in
in
popl
outsl
sbb
in
lods
xor
fiaddl
addr16
outsl
lret
dec
sub
mov
arpl
mov
in
sbb
fdivrl
lret
dec
sub
insb
sahf
or
mov
daa
jg
fidivl
scas
sub
lcall
dec
cmp
lock
xor
pushf
shlb
leave
loop
shll
cmp
pop
or
jno
mov
xor
mov
mov
push
adc
addr16
popa
adc
adc
lods
movsb
pop
fwait
mov
or
pop
inc
jno
loopne
xor
ret
cmp
inc
int3
or
sbb
leave
loope
gs
ret
loopne
cmp
adc
rcrl
push
sub
leave
adc
xchg
popa
nop
cmc
sbb
jo
dec
xlat
pushf
dec
out
sub
testb
inc
push
sti
insl
mov
cs
cmpsl
dec
aad
mov
nop
cmp
or
cmp
fld
pusha
add
repz
fildl
movb
lea
jbe
or
inc
negl
decb
adc
pop
xor
stos
sub
pop
push
ljmp
inc
insb
aaa
aas
cmpsl
cmp
jb
les
dec
insb
in
mov
sahf
jmp
in
mov
xor
mov
rcrb
subl
adc
mov
les
pop
pop
fldcw
push
addr16
and
mov
clc
and
call
stc
es
sub
dec
add
rcl
mov
addr16
cld
arpl
lret
jo
mov
sarb
jae
add
or
sub
sbb
jns
mov
test
ds
call
ljmp
add
xor
xchg
in
mov
rol
sbb
mov
add
jne
xor
loopne
xchg
dec
mov
cmp
dec
mov
cltd
mov
sbb
jle
pop
adc
add
dec
add
sub
daa
ljmp
outsb
xor
js
or
push
rcll
andl
jmp
cwtl
pop
into
aam
ja
cli
or
inc
jb
adc
es
fwait
push
pop
dec
dec
jecxz
push
jne
cmpsl
mov
out
sub
bound
sub
jns
jmp
xchg
cmp
scas
out
push
test
in
xchg
fidivrl
jp
dec
mov
mov
sub
scas
jle
cli
jns
jae
xlat
pusha
push
or
fucomip
cld
dec
xchg
insb
jnp
jmp
bound
fildl
inc
dec
fistps
lea
jge
imul
jnp
or
push
push
ret
mov
stos
sbb
scas
mov
ret
ljmp
movsl
movsb
jae
mov
xlat
or
lret
xchg
inc
and
loopne
shlb
imul
fisubs
in
push
push
mov
add
outsb
rdpmc
leave
cmpsl
fsubs
inc
mov
cmp
push
push
jge
sub
aaa
mov
pop
or
cli
add
push
int3
shlb
pop
inc
mov
push
jl
xchg
xor
or
mulb
imull
adc
movsb
xor
xchg
push
sub
clc
sub
mov
mov
add
outsl
daa
jp
mov
jno
sub
stc
jmp
dec
sub
fidivrl
inc
out
jae
push
mov
and
out
lock
adc
inc
int3
shrl
jne
mov
adc
mov
adc
pop
push
add
cld
into
popw
in
jbe
push
inc
xchg
push
mov
sub
shrb
outsb
add
adc
rol
mov
out
hlt
cmpb
sbb
pusha
and
into
fidivs
aas
push
mov
int
enter
or
outsl
lcall
mov
sub
push
in
sahf
mov
fildl
mov
jno
mov
dec
add
notb
scas
jnp
ss
inc
cmp
stos
add
negl
addr16
mov
mov
pop
inc
sbb
ja
push
outsl
cmp
sbb
xor
out
call
loop
cwtl
push
stc
push
ret
mov
adc
loopne
jb
sub
popa
push
jge
pop
adc
les
sub
ljmp
shl
gs
xchg
loopne
and
pop
jp
rcll
push
and
mov
cmp
xchg
and
cwtl
sbb
stos
mov
xlat
fucomi
pop
sub
jge
mov
adcb
sti
sbb
jle
jns
repz
adc
nop
pop
inc
rorl
aam
inc
pop
push
add
std
pop
rol
sub
repz
daa
fadd
dec
mov
call
loope
mov
ss
adc
pushf
mov
das
jmp
inc
aaa
pop
stc
xchg
xor
pop
scas
inc
pop
xlat
pop
aas
inc
mov
lock
jecxz
xchg
je
in
xchg
jecxz
test
loop
std
enter
cli
imul
mov
dec
addl
fiaddl
mov
mov
lock
or
mov
js
mov
es
insl
movsl
je
dec
add
test
add
dec
icebp
ds
in
lret
filds
mov
adc
sub
pop
and
dec
shrb
jnp
aam
int3
mov
fldt
sbb
gs
mov
cltd
pop
jo
or
pop
popa
pop
pop
dec
lods
cmp
mov
xor
insb
push
scas
sahf
mov
add
test
pushl
imul
or
inc
xchg
lods
sbb
in
shll
ss
stos
xor
dec
dec
add
inc
lods
mov
or
test
or
xor
sub
mov
aad
loope
xchg
cmp
ja
outsl
dec
sub
adc
adc
loopne
xchg
dec
push
lahf
jne
mov
mov
dec
add
or
cmp
push
xor
cli
inc
mov
cli
mov
enter
iret
sub
fildll
jp
and
add
mov
arpl
in
testl
xchg
aas
rcrb
jmp
sub
lcall
dec
rcr
mov
jnp
test
inc
rcrb
jnp
and
insb
push
pop
jp
adc
clc
retw
negl
mov
mov
es
int3
lea
or
inc
mov
and
mov
mov
xlat
subb
rcr
dec
lret
mov
mov
mov
rorl
insb
mov
mov
andb
out
push
or
jge
dec
popf
sbb
fnstenv
dec
pusha
imul
jno
add
push
insl
int3
stos
ja
pop
jb
dec
push
pop
imul
jo
lock
popf
mov
shr
loope
enter
mov
dec
shlb
cwtl
rorl
out
ja
jns
bound
pushf
push
cmpb
dec
xchg
mov
addr16
push
movsl
pop
mov
icebp
lahf
xor
mov
adc
ret
and
jge
rclb
jns
xchg
js
in
pop
sub
pop
push
dec
push
loope
push
mov
jno
cmp
push
fcoms
fwait
xchg
xchg
popl
in
orb
dec
add
add
xor
popf
xlat
push
insl
mov
stc
sub
pop
add
int
js
xchg
les
sahf
push
ficompl
movsl
jbe
adc
scas
jg
mov
mov
xchg
ja
pushf
or
inc
cwtl
mov
mov
jnp
cmp
lretw
sbb
and
scas
jb
rcll
xchg
stc
sbb
cmp
cmc
fistps
outsl
jns
out
adc
jno
shrb
mov
test
inc
imulb
pop
xor
cli
enter
add
cmp
xor
or
lods
decb
mov
gs
cmp
jle
lcall
fwait
adc
xchg
fisubrl
mov
rolb
out
mov
sbb
out
rcl
sbb
sti
sub
stos
imul
jmp
idiv
lret
mov
pop
aad
sti
xor
mov
mov
test
repz
mov
dec
insb
lea
fisubs
call
pusha
in
pop
pop
and
pushf
pop
mov
sub
cmp
out
sub
aas
in
bnd
ds
pop
adc
je
inc
push
jecxz
jo
mulb
ror
std
outsl
insl
xor
sub
dec
out
addl
xchg
movsl
fisttpl
mov
adc
lock
mov
mov
and
cmpsb
and
inc
jp
and
es
mov
stos
or
cmpsl
js
dec
mov
adc
mov
sarl
mov
loopne
inc
test
sub
iret
test
push
stos
push
cmp
aam
cli
xchg
dec
jo
ljmp
sub
leave
add
xchg
loopne
xchg
jb
jnp
mov
rolb
xchg
xor
cltd
mov
pop
aas
mov
xor
push
dec
jno
push
test
enter
repz
sar
fdiv
pop
addr16
stos
and
push
push
and
inc
xchg
popa
jno
ljmp
cmp
pop
fiadds
mov
sbb
adc
cmp
in
jp
jle
sub
cwtl
or
jnp
fwait
mov
adc
test
and
mov
pushf
inc
out
call
mov
jns
inc
cmpsb
in
push
xchg
xlat
xchg
out
clc
and
out
gs
pushf
loop
fsubs
ja
loop
cmpsl
mov
pop
dec
mov
or
and
test
fildll
std
push
xchg
adc
jmp
clc
cld
popa
subl
movsb
push
leave
dec
fstps
add
in
push
mov
adc
mov
jnp
add
lea
push
movsb
xchg
add
pusha
out
iret
insb
inc
add
stc
jns
pop
push
jb
inc
mov
fmuls
iret
daa
dec
or
sarl
and
fidivl
sub
sbb
faddl
imul
lahf
fsubrp
in
lds
mov
sbb
adc
aad
xchg
mov
sub
fbstp
jge
dec
jecxz
adc
xor
or
and
inc
pop
add
mov
cs
inc
lods
call
jo
inc
sbb
add
and
cmp
movsb
dec
stos
cmp
mov
xchg
in
jg
das
enter
daa
js
jmp
iret
and
jno
pop
mov
dec
sbb
dec
push
in
mov
mov
adc
lahf
push
cld
push
out
aaa
test
or
lret
xchg
mov
pop
mov
addr16
push
sbb
or
cmp
sbbb
sub
or
outsb
das
cld
adc
jbe
jo
movsb
aad
sbbb
ss
mov
push
jo
jae
movsb
outsl
inc
sub
push
dec
push
and
adc
sub
cmp
sub
mov
jg
hlt
js
mov
xor
adc
cmp
and
cmc
xchg
ss
call
and
fdiv
fnstenv
or
enter
aam
mov
in
sbb
mov
xor
cmp
xlat
outsl
pop
jecxz
loop
push
psubw
ficoms
incl
lods
pop
adc
mov
enter
fwait
cli
sti
jg
xor
push
jp
fmull
inc
xor
xor
and
sbb
sbb
lahf
cwtl
adc
xor
push
adc
push
inc
xchg
stos
xchg
or
and
imul
mov
sbb
in
push
xor
cs
es
aad
dec
or
sbb
dec
inc
andl
fldcw
cs
les
loope
push
rolb
sbb
call
fcomip
adc
adc
shlb
ja
nop
pop
aas
iret
xchg
inc
outsb
lea
inc
xchg
jmp
adc
ds
rcrl
je
repnz
das
mov
iret
std
push
loop
cwtl
jo
mov
aas
mov
xorl
push
fstpt
mov
mov
leave
scas
mov
lds
jo
mov
mov
fiaddl
pop
shll
cmpsb
es
aam
insl
jae
add
dec
stos
cmpsl
ja
mov
push
shll
in
dec
lret
mov
xchg
jl
out
mov
pusha
dec
stos
rclb
je
mov
or
stc
fcomp
push
sti
rcll
rcl
clc
subps
xchg
mov
mov
mov
or
mov
idiv
mov
push
fs
paddq
cltd
fldenv
test
sbb
xchg
mov
test
cmp
in
sbb
gs
dec
mov
cmc
stos
adc
dec
push
enter
lock
add
decl
sbb
xor
imul
jl
rcrl
pop
mov
decl
ja
and
inc
aaa
test
or
add
inc
dec
mov
lcall
std
push
out
jp
push
imul
sub
aad
push
xlat
ret
lods
jp
clc
movsl
mov
sarb
mov
cmpl
jne
pusha
out
mov
xchg
in
lcall
call
inc
push
mov
sub
and
stc
ret
ret
and
mov
jnp
movsb
aas
scas
lock
push
jmp
pop
adc
imul
lret
nop
test
or
push
pop
xchg
fiadds
das
jae
into
or
or
cmp
lods
inc
lahf
jle
fisubl
aad
xchg
lds
sbb
mov
imul
pop
ficoms
cmp
mov
and
leave
or
aaa
hlt
and
and
mov
xchg
shlb
ljmp
aaa
leave
xchg
ja
cmp
lds
cmp
mov
push
push
and
xchg
fcomip
push
and
jl
cmp
mov
jb
sbb
cmpsb
mov
or
enter
daa
ja
sub
jno
scas
data16
in
mov
add
movsl
push
dec
and
or
mov
jo
inc
shr
pop
imulb
pop
and
int
pop
test
sbbl
inc
bound
outsb
sub
adc
push
cmp
add
mov
add
insb
xor
sub
or
pop
sub
addps
pop
imulb
mov
xchg
push
jnp
out
out
test
or
call
test
pop
and
cmp
mov
les
mov
mov
sbb
fistpl
sbb
fcoml
xor
mov
lret
pop
roll
int3
sbb
stos
adc
std
scas
nop
cmc
insl
inc
mov
outsl
aaa
xchg
cmc
loop
test
inc
mov
jo
dec
mov
data16
inc
pop
lods
inc
sbb
mov
add
push
mov
sub
scas
pop
jl
movsl
jb
or
push
icebp
gs
shl
push
adc
xlat
cmpsl
adc
push
sub
mov
jle
add
jnp
sbb
pop
and
xlat
cwtl
ljmp
std
out
push
in
roll
mov
cli
add
jnp
testb
dec
fldenv
enter
mov
jae
add
sahf
mov
pop
jge
rclb
jno
dec
pushf
mov
out
jmp
xor
loop
cmp
mov
jecxz
and
jb
mov
dec
lret
lret
jecxz
adc
imulb
cmp
cwtl
sub
pop
mov
xor
outsl
orl
nop
cltd
add
aas
jecxz
lock
mov
cmp
xchg
mov
adc
shrl
insl
pop
icebp
add
mov
ret
and
cld
pcmpgtd
mov
out
push
lret
mov
jg
cmpsb
shlb
int
sub
inc
aam
rcl
ret
mov
test
fstp
in
clc
dec
in
xchg
enter
mov
imul
mov
insl
out
pop
or
add
popa
push
aas
fwait
ret
rdpmc
mov
add
mov
and
je
xchg
dec
aas
jecxz
test
inc
pop
xchg
data16
cmpsb
ret
cmc
pop
mov
xchg
imul
ja
pop
add
add
xor
addr16
std
outsl
out
loop
or
xchg
mov
loope
dec
btc
or
arpl
adc
dec
outsl
test
mov
jae
out
cmpsb
sub
bound
xor
in
mov
mov
cmp
stos
sub
rolb
addr16
jecxz
jp
out
ss
ror
mov
call
push
sbb
pusha
orb
or
mov
testl
dec
mov
push
dec
sbb
les
hlt
push
cmp
push
and
fmuls
scas
push
jge
push
xor
or
push
add
iret
sub
fcmovb
pop
loop
pop
mov
and
or
or
mov
adc
push
das
push
fcmovbe
sbbb
or
ficoms
neg
xor
add
mov
sub
repnz
decb
outsl
push
and
pop
jbe
jecxz
jge
cld
add
mov
aaa
mov
or
loope
aam
aam
insb
je
pop
call
xor
jns
xchg
scas
mov
adc
cmp
das
xchg
movsb
pop
movsl
push
imul
in
dec
cli
lahf
enter
daa
jbe
sbb
xor
and
jl
xchg
stos
dec
in
pop
sarb
loopne
jno
pushf
and
push
lahf
mov
push
lea
das
push
mov
lea
pop
out
lds
lahf
xchg
pop
call
test
loope
adc
adc
lea
sub
sub
test
bound
add
fstps
lods
and
add
sahf
xorl
mov
push
jbe
pop
int
cmpsb
out
jbe
in
pop
fiadds
and
rcl
pop
fcoml
imul
test
cli
dec
andb
jg
mov
mov
push
in
mov
pop
and
ljmp
cmp
xchg
pushf
aam
push
mov
lret
pop
rcrl
mov
inc
sbb
jnp
into
loopne
sub
xor
dec
xor
jne
outsl
push
inc
sbb
into
out
stc
cli
push
mov
adc
lock
dec
es
test
popa
outsb
mov
test
fistpll
dec
test
js
mov
loopne
lea
adc
or
adc
out
add
dec
sbb
xchg
sbb
sub
xchg
ret
mov
sub
pop
sti
fadd
cld
cs
jne
dec
fimull
daa
test
fimull
repz
aas
push
les
call
fstpl
pop
xor
in
pop
mov
pop
test
jae
jl
pusha
inc
lret
dec
enter
sbb
jl
dec
mov
inc
ss
int3
psadbw
push
lods
std
fs
cwtl
out
shll
and
lcall
xchg
in
add
push
gs
mov
dec
adc
mov
cli
pushl
insl
inc
test
dec
in
dec
cmpsl
jne
mov
lcall
lret
fwait
shr
popa
fwait
sbb
xchg
out
pop
sahf
fildll
mulb
sub
mov
xchg
mov
pop
push
push
push
addl
clc
test
mov
sub
popa
mov
aad
mov
mov
in
push
sbb
and
xchg
arpl
into
ss
test
mov
xchg
pop
dec
cmpsb
bound
mov
jg
sbb
sbb
std
out
inc
pop
push
mov
push
push
jl
add
mov
sub
mov
les
fnstenv
or
mov
loope
hlt
mov
jne
test
mov
and
inc
gs
testb
fmull
es
jne
lds
out
test
insb
bound
or
jns
and
xchg
les
out
sarb
lret
lock
addr16
adc
lcall
in
push
mov
jnp
mov
sbb
adc
fwait
sub
jmp
pop
mov
adc
adc
push
mov
ja
ret
repnz
in
jnp
xor
scas
mov
lods
push
jns
jle
icebp
scas
ds
mov
hlt
ret
push
pop
cmc
imul
jae
xchg
inc
fsubrs
nop
push
popf
arpl
mov
jnp
jae
test
in
imul
pop
lock
mov
push
lods
mov
or
and
hlt
mov
and
jge
stos
mov
aaa
inc
fldt
add
inc
int3
push
sbb
pop
ja,pn
push
jmp
pop
xor
aam
pop
scas
popf
pusha
cmp
sbb
inc
out
jmp
dec
or
xor
or
jmp
insl
lahf
cmp
mov
xchg
dec
push
mov
ds
movsl
js
data16
int3
test
pusha
inc
bound
insb
outsb
cmc
inc
fildll
loop
pusha
pop
adc
push
mov
daa
cmp
loope
dec
scas
sub
xchg
sbb
cmp
lcall
loopne
rolb
frstor
dec
mov
jecxz
faddl
and
xor
dec
push
jns
aas
int
pop
and
icebp
dec
mov
pop
popf
jb
push
cmp
fdivrl
push
mov
rcrl
jg
xlat
cs
js
or
stos
into
orl
or
notl
cmp
lret
jecxz
mov
xlat
mov
sahf
push
sbb
lret
into
ret
bnd
sti
ja
xor
cmp
popa
jl
stc
mov
arpl
dec
adc
fiadds
add
dec
lods
push
sarb
mov
add
push
jmp
cli
xchg
jae
xor
cmp
add
sub
fwait
enter
gs
ljmp
adc
scas
imul
dec
adc
jg
add
shlb
dec
sub
and
xchg
lcall
push
mov
pop
or
dec
cmp
inc
mov
js
in
inc
repz
sahf
enter
lahf
shrl
xchg
call
pop
dec
test
fcomps
pop
cmpsl
in
pushf
or
jmp
dec
ljmp
dec
int
out
and
popa
fidivs
movsb
pop
dec
adc
je
out
jmp
pop
enter
pop
in
std
or
xchg
mov
incl
mov
xor
xorl
fisubrs
fdivl
xchg
mov
dec
sub
das
lea
mov
dec
jmp
faddp
rcrl
ljmp
outsl
popa
dec
out
xlat
cmpsl
je
mov
jno
sub
gs
jp
or
mov
cld
ja
mov
mov
xor
sub
dec
aam
and
ret
cmpsb
lcall
sub
xchg
inc
mov
ljmp
cmp
and
out
and
rcll
cmc
cld
cmpsl
psllw
add
lahf
dec
cltd
jle
pushf
test
es
xor
xchg
pop
dec
or
push
addb
orl
ds
adc
subl
stos
push
add
int
dec
ljmp
mov
xchg
or
call
mov
and
mov
pop
xor
ja
in
dec
dec
cmc
sahf
ja
cld
sbb
fwait
jno
sub
mov
mov
out
fs
enter
add
lea
inc
xchg
adc
inc
scas
xchg
sub
xor
addr16
push
jp
stc
shlb
adc
xchg
mov
mov
add
popf
mov
rcr
movsb
sub
fwait
jmp
and
ret
subl
push
aad
mov
mov
mov
or
mov
pop
insb
dec
lds
and
push
shr
adc
outsb
ror
call
sbb
sub
xchg
inc
jmp
mov
dec
in
inc
fistl
lods
or
lods
popa
loope
sbb
inc
fidivrl
mov
lret
sbb
cmp
imul
lds
shl
in
xor
repnz
mov
hlt
add
mov
push
jge
cmp
cmp
push
les
adc
jnp
add
mov
inc
xchg
sbbl
test
into
aas
movsl
xor
das
push
jb
jl
pusha
and
decl
je
out
pop
mov
cmpsb
inc
jg
in
sbb
pop
daa
je
scas
cmp
jns
jl
pusha
fisttpl
testb
push
pop
lock
jg
sbb
jg
ds
int3
cli
out
xor
inc
test
aaa
jmp
inc
outsb
xchg
movsl
movsl
xchg
mov
js
add
push
gs
adc
loope
lahf
imulb
dec
cmp
or
push
cmp
mov
and
adc
sbb
add
decb
sbb
fwait
push
jl
stc
int
insl
cmp
insb
inc
fiaddl
fdivl
fcoml
jae
fsubr
mov
sub
sub
sbbb
sbbb
jg
sub
out
or
mov
aam
and
sbb
ss
bound
sub
push
fmuls
inc
dec
lret
and
inc
imul
mov
into
cmpsb
subb
out
std
outsl
aam
dec
loop
inc
jg
push
pop
std
adc
fidivl
data16
sbb
push
aad
cli
sub
xor
ds
cmp
xchg
or
pop
jp
mov
xor
loopne
cmp
xor
add
dec
rcr
imul
ret
mov
in
cmpsb
ja
cmp
ljmp
aad
and
add
sti
mov
or
jecxz
lock
cmp
cmp
ret
iret
sub
lock
popf
rep
xorb
cwtl
clc
lea
incb
fcmovne
sbb
dec
insl
adc
aad
mov
push
jmp
add
inc
mov
cmpsb
aas
add
or
mov
inc
dec
lods
stos
sbb
and
or
std
mov
xchg
in
cmc
mov
roll
cmp
fcomi
cmp
mov
xchg
lock
insb
cmp
mov
mov
mov
shrl
out
insl
nop
dec
loop
jg
jae
movsb
mov
dec
and
das
lret
jns
das
mov
add
iret
mov
faddl
jnp
fs
aam
leave
xchg
xor
xchg
dec
fisttpll
jb
sti
hlt
in
test
pop
ljmp
xchg
lods
mov
movsb
clc
out
xor
xchg
aad
inc
push
rorb
sbb
add
cmp
cltd
mov
je
shrl
and
dec
je
push
test
fisttpl
sbb
mov
pop
mov
ss
add
call
jbe
xor
inc
or
cmpsl
push
mov
fldenv
mov
jmp
pop
ja
cmp
dec
call
xchg
or
jne
fwait
mov
inc
push
jne
es
adc
out
inc
pop
or
sahf
adc
inc
out
in
stos
adc
vpor
rorl
rcrl
jp
or
mov
out
out
mov
xor
fidivrs
movsb
and
pusha
push
shrb
ret
ret
add
jmp
out
fistps
cmp
fstl
cwtl
cmp
push
push
mov
cmc
fwait
sub
into
loopne
insb
mov
rcr
scas
jl
adc
cli
jno
cmpsl
inc
stos
iret
inc
repnz
pop
add
pop
arpl
push
jae
dec
mov
cmc
or
sub
inc
fwait
pop
xchg
ret
jo
and
imul
cmp
int
clc
rorb
push
mov
mov
xchg
leave
call
leave
add
mov
aam
xchg
aaa
lds
mov
add
jg
int3
sub
xchg
push
mov
jp
clc
push
shlb
or
and
cmp
pop
xor
call
repz
push
arpl
in
add
mov
jae
aaa
cmp
pop
jmp
jl
test
xor
movsl
xchg
daa
and
sbb
push
push
dec
mov
push
add
push
mov
js
mov
movsl
out
cld
push
push
inc
loope
sbb
lcall
adc
mov
or
sbb
push
xor
sub
push
jg
ror
cmpsb
mov
pop
pop
push
cwtl
lcall
repz
mov
sahf
and
add
xorb
jg
sbbl
sub
divb
int
ss
inc
cmp
enter
xchg
sar
lret
inc
rcr
cmp
andb
mov
mov
jp
loop
inc
push
pop
jmp
adc
mov
lods
fcoml
adc
push
inc
cmp
cli
cltd
cmp
or
push
cmp
fistpll
loope
push
gs
push
loopne
scas
mov
lock
sbb
imul
sub
inc
jle
xchg
jns
sbb
dec
jns
xlat
xchg
lret
mov
dec
or
mov
insl
add
in
push
cs
aad
cmpsl
mov
dec
mull
add
loop
mov
jle
inc
sti
fdivl
cmp
imul
pop
enter
insb
mov
pushf
pop
leave
js
and
pop
outsb
pop
inc
adc
inc
sbb
add
lahf
xchg
xchg
jb
mov
je
cmp
jp
xor
std
pop
test
cwtl
pop
ljmp
decb
andl
push
mov
inc
lcall
sti
lods
mov
insl
mov
std
push
or
mov
jmp
imulb
outsl
cmpsl
jb
jecxz
subl
mov
movsl
pop
mov
or
mov
sti
pop
iret
shrb
sub
pop
add
das
ret
les
push
lret
fnsave
cli
clc
ss
xchg
out
adc
test
lods
sub
mov
out
sbb
stos
scas
in
imul
aad
pop
push
inc
cltd
in
jb
test
subb
mov
adc
lcall
roll
dec
ret
pop
imul
in
push
mul
aas
add
add
fnstenv
shrb
cmp
or
iret
mov
popf
scas
mov
cmpsb
cli
addr16
or
inc
sub
icebp
or
and
fwait
iret
xlat
jnp
sti
ret
jne
in
dec
mov
adc
out
and
vcvtps2uqq
mov
sahf
xchg
mov
ret
shrl
cwtl
cld
or
mov
mov
ljmp
movsb
loopne
jle
repz
in
push
xor
sar
pop
sbb
js
xor
xchg
cmp
pop
jb,pn
pusha
scas
pushf
mov
xor
sbb
in
mov
and
sarb
dec
or
push
dec
insl
rclb
subb
iret
cmpsb
push
cmp
imul
pop
lcall
jae
xchg
mov
loope
cltd
or
mov
sbb
mov
mov
sbb
out
imul
cmpsl
lds
shrb
add
repnz
stos
mov
pop
fs
hlt
fwait
inc
call
jbe
mov
jge
psubusb
jne
clc
aaa
test
testb
xchg
addl
pop
jge
sbb
cmp
mov
push
xchg
inc
or
in
cmp
imul
pop
shld
lret
cmpsb
dec
dec
dec
in
jmp
subb
jb
sub
add
jno
pop
and
ss
mov
iret
cmp
mov
add
fstps
inc
push
int
fiaddl
scas
pop
sub
lahf
js
mov
pop
in
pop
push
dec
jle
or
cmp
lock
sbb
pop
adc
cwtl
out
fsubrp
jb
adc
or
scas
pop
xor
out
int
shrb
stc
pop
pop
fidivl
lcall
pop
fdivrl
inc
sub
mov
or
test
cmp
jg
fimuls
jnp
loope
fstpl
mov
lahf
adc
es
in
ss
jmp
cmp
xorl
push
loop
lret
add
repz
sbb
insb
jle
cmc
push
lods
xor
stc
loop
jne
stc
sub
adc
pushf
data16
cmpsl
lods
ret
xchg
xchg
mov
xchg
push
xor
push
xor
xor
aad
fmull
incb
adc
shl
mov
or
adc
push
cmc
imul
add
jge
xchg
cmp
dec
sbb
add
xlat
rorl
mov
jo
cmp
fdivs
sti
xchg
out
xchg
loopne
aad
dec
int
out
movsl
ds
push
xchg
fnstenv
mov
repz
or
bound
lea
inc
add
dec
xchg
pop
cld
inc
sub
and
add
jmp
mov
pop
adc
inc
cwtl
xchg
aaa
add
aas
ds
leave
dec
fwait
leave
mov
jecxz
push
pop
idiv
or
std
add
cwtl
shlb
mov
or
mov
pop
hlt
cmp
mov
fistl
xor
and
xchg
add
das
sub
push
lahf
adc
and
dec
and
inc
cmp
dec
push
enter
ss
fadds
cmpsl
jno
test
imulb
sub
out
mov
push
jp
mov
adc
pop
sbb
rolb
das
sub
mov
mov
mov
push
rcrb
lea
out
clc
jno
lret
xchg
add
ljmp
push
lods
xchg
jnp
mov
dec
movsb
or
push
xchg
iret
add
adc
cltd
and
mov
or
orl
dec
inc
dec
cli
test
and
sbb
notb
pop
adc
pop
stos
lods
int3
rcrl
out
call
add
sar
add
jnp
or
popf
mov
in
aad
mov
popa
sbb
ja
pop
ret
dec
into
mov
stos
or
movsl
mov
fidivs
fnstenv
add
jmp
add
mov
or
push
inc
popf
xchg
add
out
clc
inc
sub
mov
xchg
sarl
cli
jp
dec
xor
dec
or
xchg
xor
mov
outsb
jle
std
and
dec
xchg
jecxz
filds
cld
xor
outsl
sub
xchg
test
adcl
and
popf
xchg
in
mov
jae
stos
je
pop
and
mov
insb
mov
jnp
cmpb
xchg
inc
mov
pop
es
add
je
pop
rcll
inc
or
dec
jae
and
xchg
push
sbb
imul
iret
clc
cld
sbb
xor
imul
jg
fistpl
rolb
or
xchg
leave
pop
pop
hlt
out
inc
arpl
xor
jbe
push
cmp
sbb
pop
dec
aaa
inc
xchg
cwtl
or
push
add
pop
ljmp
xor
inc
mov
scas
sbb
imul
push
hlt
mov
int3
pusha
loop
rorb
stos
enter
daa
jno
je
xor
xchg
jno
xchg
dec
bswap
jg,pt
push
movsl
xchg
and
imul
int
pop
push
cwtl
pop
dec
inc
sbb
repnz
mov
mov
packuswb
pop
and
sbb
and
sub
ficoms
outsb
jnp
outsl
adc
jae
ss
cmp
dec
jae
mov
test
xchg
gs
test
das
int
lds
fnsave
pop
lcall
xchg
fsubr
leave
or
movsl
or
sahf
imul
xchg
subb
ds
ss
mov
mov
andb
xor
pop
sarb
loopne,pt
notl
js
lret
add
mov
push
loope
push
add
cmc
pop
xchg
fbstp
negl
je
lods
fidivrl
stc
imull
adc
mov
and
mov
out
stos
jecxz
pusha
nop
xorl
addr16
cmp
or
add
gs
loopne
push
aam
pop
xchg
sub
adc
addr16
imul
pop
add
fistl
sbb
cmp
mov
aam
sub
mov
in
inc
mov
jae
hlt
stos
rcl
push
sahf
nop
lret
dec
mov
xchg
inc
or
fldlg2
lods
mov
adc
fs
leave
gs
xchg
fistpl
push
pop
scas
iret
adc
cs
mov
ljmp
xchg
mov
inc
push
pop
cli
aas
jp
orl
adc
je
fmuls
cwtl
pusha
push
idivb
pushf
scas
std
cmpsl
add
lea
mov
ret
in
mov
stc
imul
mov
dec
mov
leave
jo
in
jmp
bound
fcmovnbe
add
mov
mov
mov
and
jb
dec
shll
cmpsl
jo
ja
int
xor
int
push
cld
adc
fmulp
adc
and
popf
push
sbb
rclb
adc
inc
ret
loop
je
push
out
pushf
ffree
sbb
clc
lods
cmp
xchg
inc
cmp
push
iret
popa
sub
mov
mov
lods
imul
stos
daa
fstl
mov
lret
sub
daa
mov
hlt
cs
mov
int3
sub
xchg
fmull
cmp
sbb
sbb
xchg
pop
mov
mov
sahf
add
cmp
jmp
aam
adc
xor
sarl
cmp
lcall
bound
sbb
xorb
pop
dec
rcl
inc
pop
cmpsl
cmpsl
or
sti
addr16
sub
fwait
test
mov
xlat
or
loopne
xchg
testl
jne
fisttpll
dec
out
movsb
mov
or
ja
jp
jle
mov
dec
cmp
mov
das
and
cli
push
mov
or
fbld
sahf
aas
xchg
stos
add
jmp
push
mov
andl
xor
fildl
in
push
mov
pop
stos
out
and
iret
adc
stc
mov
fwait
and
movsl
lret
push
push
fdivrl
adc
ss
iret
fs
sub
inc
pop
xor
jae
divl
out
add
and
push
push
sbb
into
fimull
pop
rcll
fidivrl
imul
fiadds
xchg
mov
mov
lods
cwtl
clc
leave
dec
outsl
hlt
xor
arpl
loopne
jbe
iret
test
jo
sbb
scas
mov
add
jp
pop
jnp
int3
out
leave
outsl
pop
sbb
push
pop
adc
xor
fwait
movsl
imul
aaa
dec
pop
movsb
mov
push
dec
cmpsb
dec
jmp
mov
daa
jo
or
addr16
adc
jl
jmp
call
movsl
fwait
pop
enter
pop
lahf
dec
outsl
jecxz
jg
push
test
arpl
js
stos
fadds
mov
or
movsb
fidivrs
mov
pop
fbstp
push
pop
dec
loope
fs
sub
add
cmp
mov
dec
push
mov
pushf
rcl
ss
sbb
jp
add
scas
xor
mov
int
stos
hlt
sub
cmc
pop
fadds
xchg
push
mov
fcoml
negl
lea
jg
mov
ja
lret
ss
in
add
inc
jle
rolb
cmp
stc
fmul
not
xchg
jne
cmp
add
mov
xchg
jae
inc
push
into
xor
cmc
ficoms
xor
test
rcrb
inc
push
mov
outsl
stc
xchg
test
xor
mov
scas
inc
out
movsl
test
xchg
sbb
xor
loop
or
xchg
insb
gs
test
mov
cmp
imul
mov
out
dec
loopne
ret
sbb
stc
or
sub
lret
gs
scas
nop
sti
repnz
cs
imul
movsl
lds
dec
adc
test
jno
fldenv
aam
les
fcomi
test
jno
push
pop
mov
xlat
fistl
bound
out
shlb
xchg
jmp
jp
pop
push
int3
xor
stc
rolb
push
stc
aas
jl
mov
je
dec
mov
je
and
jecxz
mov
testb
ja
dec
adc
mov
cld
push
mov
sbb
sub
mov
add
dec
add
mov
mov
das
call
stos
mov
out
sub
adc
sub
lods
testb
int
outsl
loopne
mov
movsb
enter
dec
ds
xor
mov
mov
pop
add
sub
hlt
aam
lods
or
jno
cld
push
adc
fdivrp
out
mov
ljmp
imul
daa
adcl
int3
mov
add
lcall
incl
insb
mov
shll
xchg
adc
xchg
mov
adc
outsl
sbb
roll
out
pop
push
hlt
stos
mov
push
loopne
xchg
add
push
fidivl
incl
in
xor
mov
or
xor
add
sbb
ret
pop
xlat
adc
dec
mov
dec
inc
out
movsb
push
or
and
inc
dec
movsb
cmc
push
jne
cltd
cwtl
mov
fmuls
mov
xor
jns
and
push
mov
sub
lods
xor
addr16
xor
mov
mov
mov
icebp
cld
gs
jmp
in
or
sub
aas
inc
xor
pop
push
into
xchg
sbb
adc
movsb
mov
imul
mov
stos
pop
pop
mov
sub
inc
jnp
inc
pusha
scas
or
adc
pop
jb
ret
xchg
and
movsb
mov
pop
aas
movsl
xor
arpl
or
inc
or
adc
cmp
jb
fidivrl
in
jmp
imul
fisubrs
xor
sarb
mov
fldl
hlt
jl
push
arpl
rcrb
jge
ja
sbb
or
shrl
test
cmc
shll
push
outsb
push
cmp
imulb
jo
stos
inc
scas
xlat
std
lahf
and
cmp
push
xchg
les
in
sahf
orb
outsl
pop
fdivrs
lcall
jl
pop
mov
lds
movsl
mov
sahf
mov
push
push
ret
mov
inc
or
push
ds
je
dec
pop
jmp
js
push
pop
mov
insl
aas
loope
outsl
jne
lahf
std
jne
push
and
inc
inc
imul
sti
scas
pop
orb
sbb
sub
xor
or
inc
je
sub
pop
push
repnz
push
xor
fdivrl
push
push
sub
xor
test
sbb
loope
sub
xchg
or
mov
cmpsl
sbb
das
inc
lahf
and
ds
sub
fdivs
loope
sub
rol
mov
into
adc
js
xor
mov
repnz
sti
andb
jl,pn
adc
mov
std
lods
js
mov
out
and
xor
push
cmp
mov
or
int
insl
ljmp
les
shl
dec
adc
iret
js
adc
pop
imul
xchg
add
int3
xchg
test
lcall
push
sbb
nop
in
les
adc
loope
mov
sub
sbb
fdivr
mov
sbb
inc
xchg
xor
dec
jae
roll
lds
les
xor
imul
lea
xchg
lcall
add
sub
pushf
or
jmp
add
inc
sub
cltd
aas
sbb
jb
aam
dec
add
je
lds
jecxz
inc
pop
test
nop
std
cmc
psllw
mov
xor
dec
iret
cmpsl
mov
mov
shll
lock
shlb
mov
and
mov
jbe
xchg
out
or
dec
leave
mov
mov
jnp
cld
addr16
or
push
xor
and
roll
mov
mov
mov
aam
notl
push
lds
and
das
xchg
rclb
pop
bound
aam
cmpb
popa
xchg
cmp
xchg
movntps
xor
test
sub
mov
sbb
mov
nop
dec
ja
leave
test
arpl
xchg
mov
push
pop
adc
jmp
push
add
add
outsl
popw
jmp
fidivs
xor
and
or
sub
mov
mov
mov
xchg
in
aas
ja
outsl
fimull
sub
xchg
sub
and
fwait
mov
xchg
jne
lock
out
sahf
dec
popf
bound
mov
in
pop
and
push
push
mov
or
jae
jp
clc
fbstp
adc
popf
mov
sub
shl
in
sbbb
pop
out
stc
xchg
push
cmc
fucomip
push
pop
repz
out
daa
add
mov
popf
cld
emms
mov
xor
stos
int
and
imulb
mov
stc
cs
imul
push
push
loopne
out
xchg
out
iret
and
ret
sahf
pop
jbe
testl
stos
inc
in
pop
insl
or
or
inc
push
inc
cmp
outsb
inc
mov
sbb
mov
ja
dec
pop
lds
mov
xchg
cmp
push
push
out
cmp
dec
hlt
je
arpl
or
jbe
mov
sbb
popa
sbb
orb
les
loope
mov
int3
and
fidivs
movb
and
nop
cmp
mov
push
loope
mov
in
test
cld
daa
outsb
adc
int
dec
jno
ficoml
dec
pop
mov
ds
xchg
mull
and
addr16
and
jecxz
push
stc
mov
aad
aaa
add
pop
es
js
add
pop
loopne
jb
mov
loope
sahf
cmp
or
idivb
add
jmp
cli
rolb
or
pop
mov
imul
nop
insb
xor
xchg
sub
mov
fcmovne
stos
and
dec
dec
and
lcall
cltd
fsubr
push
pushf
sub
mov
jb
cmpsb
cmp
scas
jg
jne
mov
sub
fbstp
dec
loope
pop
insb
sarl
outsl
xchg
int
dec
push
push
lret
and
roll
sbb
in
cmc
insb
add
xor
inc
insl
outsl
push
jbe
loop
inc
mov
fs
push
outsb
xchg
lods
xchg
and
and
cltd
xor
or
cwtl
inc
data16
nop
pop
xor
inc
jno
daa
and
pop
out
movsb
dec
adc
sarb
push
add
add
xchg
dec
push
xchg
sbb
outsl
movsl
inc
xlat
iret
mov
andl
push
xchg
ds
leave
fistl
rolb
inc
inc
dec
dec
fsts
pop
ss
insl
xor
outsb
hlt
mov
dec
jmp
aad
jmp
enter
addb
pushf
mov
inc
jmp
dec
sub
adc
inc
mov
inc
mov
enter
addr16
mov
jae
or
dec
std
pushf
insb
dec
cwtl
mov
mov
xchg
dec
mov
jg
mov
xchg
xchg
mov
addl
sbb
mov
add
rorl
sbb
insl
jns
mov
jbe
cmpsl
insl
and
icebp
push
repnz
cld
xchg
fsts
adc
jns
lods
and
outsb
mov
push
rorb
jnp
aam
xchg
mov
cltd
pop
test
cmp
ss
incl
adc
ret
mov
push
lods
aas
popa
sub
aad
pushf
xchg
jg
add
repnz
sahf
movl
incl
mov
xor
loope
mov
jbe
aad
fcmovnbe
mov
inc
pop
shlb
push
mov
or
mov
stos
incl
les
xor
repz
mov
stc
ds
mov
dec
pop
shll
rorl
lcall
or
cmc
cmp
push
shll
jno
xor
and
bound
xchg
fsub
jle
xchg
cmp
out
pop
fsubrl
mov
aaa
mov
mov
icebp
test
jecxz
jle
test
lret
cmc
inc
fistpll
xchg
dec
push
jbe
mov
flds
sub
dec
mov
outsl
pop
xchg
stos
inc
mov
insb
cmp
imul
cmp
into
rorb
mov
ss
iret
cmpl
lods
xorl
stos
fnstenv
add
inc
lock
mov
push
xchg
xchg
and
and
xchg
sub
sbb
ret
insl
imul
fsubrp
std
mov
negl
fnstsw
movsl
add
leave
mov
inc
hlt
adc
add
jge
xor
das
js
aas
xchg
sub
mov
push
add
mov
xchg
pop
cmpsb
sbb
push
add
mov
hlt
fsubrl
mov
ret
cmp
movsb
inc
int
push
xor
in
in
insb
xchg
enter
daa
insl
and
gs
xchg
xchg
jl
ret
lret
dec
mov
movsl
mov
dec
and
adc
xor
adc
les
cli
xlat
or
lcall
pop
jae
push
scas
sub
jge
and
push
inc
outsb
pop
xchg
and
jae
fbstp
or
outsl
int
sbb
and
xor
inc
and
xchg
sbb
mov
leave
push
lods
pop
push
fnstcw
push
loope
test
xchg
sub
sub
addr16
imul
push
test
pushf
jnp
pop
jle
jg
in
mov
call
clc
mov
push
xchg
and
sub
cmp
sub
testl
loop
shrl
mov
aaa
or
push
cmc
xor
cmp
arpl
outsl
in
dec
mov
stc
js
stc
imul
push
sbb
lods
inc
dec
mov
dec
stos
clc
cli
sub
adc
cmp
pop
xchg
or
js
mov
cmc
gs
ss
push
jg
or
mov
imul
and
fwait
ja
xchg
or
sbb
stos
rol
xlat
push
adc
push
mov
out
sbb
add
aad
nop
ss
dec
xor
mov
enter
cmp
sub
jns
or
mov
pop
jnp
adc
xlat
jmp
cmpsl
jmp
pop
sbbl
adc
inc
mov
jns
jb
cs
dec
out
int3
xchg
je
add
aam
outsl
testb
std
inc
lods
lock
jns
fbstp
mov
gs
xor
movsb
mov
dec
dec
mov
mov
pop
push
fwait
das
test
inc
mov
mov
mov
xchg
push
rcl
leave
es
dec
mov
mov
mov
sub
outsl
lret
sbbb
pushf
pop
out
xor
js
or
pop
mov
pop
shlb
or
and
mov
push
pop
insl
jle
pusha
mov
clc
cwtl
add
ljmp
push
lods
stos
in
sbb
cmp
popa
xchg
cwtl
push
push
int
cld
psubsw
xor
and
mov
ja
xchg
icebp
sbb
push
jb
xchg
xor
or
sbbl
stos
pop
sub
push
leave
outsl
mov
add
mov
testb
andl
js
jle
cmp
lock
or
ja
mov
inc
inc
mov
cli
or
fwait
xchg
dec
mov
pop
mov
push
mov
bound
sub
inc
jl
or
dec
xchg
mov
inc
sub
sahf
and
addr16
jg
jp
inc
movsl
mov
lds
mov
std
out
jle
jbe
in
cwtl
inc
pusha
nop
insb
pop
fistps
insl
jmp
jl
and
hlt
push
in
bound
mov
scas
icebp
stos
mov
dec
and
fsubrl
sbb
scas
xor
push
clc
push
inc
adc
cld
ret
insb
pop
in
adc
scas
jae
out
inc
repz
or
test
adc
jo
fcmovbe
negl
subb
mov
enter
loop
xchg
mov
gs
lret
inc
dec
mov
clc
in
leave
sub
mov
jbe
jl
jge
jecxz
sbb
and
or
insl
ror
cmp
xchg
push
out
pop
xor
pop
aaa
add
dec
or
fstpl
push
jg
lcall
pop
ror
mov
dec
std
cmp
iret
mov
jl
mov
dec
cmp
cmpl
rolb
push
adc
out
push
lret
mov
loope
mov
xchg
mov
or
js
mov
nop
push
fistpll
xchg
push
mov
arpl
adc
mov
xchg
xchg
addb
xor
sahf
push
push
xchg
test
inc
repnz
aam
xchg
lcall
jb
inc
xlat
sbb
push
roll
lcall
xorb
push
jg
pop
sti
mov
lods
mov
fisttps
andb
fisubs
popa
inc
loope
in
push
test
test
sar
arpl
scas
and
mov
ds
outsl
int3
sub
loop
loop
stc
and
cli
adc
mov
jnp
sbb
sbb
dec
mov
cli
pop
inc
popf
xor
jl
cmp
jg
or
dec
clc
jecxz
fnstcw
pop
sub
dec
adc
in
imul
adc
pop
xchg
into
arpl
fmulp
cwtl
cmp
out
push
sub
mov
in
pop
mov
sti
scas
scas
jb
jecxz
pop
aad
pusha
or
dec
nop
xor
stos
fcos
fsubs
mov
rol
je
into
lea
push
shrl
push
cs
sbb
xor
inc
ret
inc
mov
jb
sub
je
sahf
push
jecxz
cwtl
inc
testb
push
cwtl
xor
inc
mov
psraw
test
clc
dec
nop
cmp
insb
or
int3
repnz
lock
inc
das
fs
mov
outsb
inc
andb
xchg
shll
jbe
es
cmpl
imul
push
jno
call
mov
mov
cmp
mov
aam
mov
xor
adc
sbb
sbb
je
nop
ret
lods
aaa
fcoml
out
inc
fldl
out
xchg
jge
xchg
ljmp
xchg
lods
adc
cmp
out
fwait
pushf
fists
test
fisttpl
dec
xchg
roll
mov
cltd
insl
mov
aam
js
data16
pop
in
test
xlat
in
adc
leave
shll
jle
push
cld
stos
inc
out
jne
insb
xor
inc
xchg
mov
mov
mov
insb
xor
add
xchg
mov
stos
out
mov
mov
ja
daa
in
sub
inc
dec
add
or
adc
fwait
sbb
jne
dec
in
jmp
push
out
cmp
lock
or
in
out
bound
and
cltd
pushf
xchg
addr16
dec
jp,pn
mul
mov
mov
lods
mov
aaa
pop
in
cmp
idivl
xchg
leave
in
jmp
inc
mov
xorl
push
mov
rcrb
add
push
in
or
mov
insb
adc
jns
push
icebp
shrb
aas
test
jg
jnp
aas
jne
ret
in
pop
sbb
dec
inc
dec
dec
sub
inc
divb
add
xor
int3
add
xchg
xchg
flds
sbb
jecxz
xor
stos
lds
dec
inc
mov
dec
sti
adc
mov
lret
das
arpl
in
mov
xor
jns
sbb
es
popf
sub
int3
test
pop
add
mov
leave
int
xor
bound
ja
fcmovnu
mov
movsb
push
add
gs
in
cmp
enter
daa
imul
cmp
test
jo
jl
jbe
dec
test
mov
movsb
and
fs
lahf
jecxz
in
push
sahf
jns
test
pop
adc
inc
jne
pushf
sbb
pop
fwait
pop
cmp
sarb
popf
imul
dec
sub
cmp
xchg
outsb
int
repz
xchg
adc
ja
cli
adcb
mov
mov
lret
xor
ds
xchg
pop
push
int
sub
pop
push
rcrb
adc
lret
xor
fsubr
push
jae
aas
jp
sahf
cmp
inc
sti
orb
jg
rclb
mov
clc
or
pop
mov
xorl
or
adc
mov
into
xor
stc
and
mov
pusha
sbb
ljmp
shl
xor
push
out
outsl
stos
or
pop
orb
pop
out
adc
movsb
sub
dec
shrd
add
dec
inc
fs
xchg
push
pop
xor
xchg
test
xor
stc
xor
loopne
and
adc
jno
adc
sbb
mov
mov
lea
and
xchg
mov
sub
fbstp
in
vdivss
pop
jecxz
cs
insl
js
in
jb
dec
out
mov
inc
jp
fcmovu
ss
les
mov
ja
mov
call
push
dec
xor
fldenv
and
jmp
lret
xchg
inc
dec
outsl
imul
out
jb
pop
ret
jecxz
je
mov
repnz
not
jnp
std
xchg
cwtl
out
out
mov
fidivrs
xchg
xchg
sub
jnp
arpl
fwait
notl
mov
shrb
add
inc
xchg
jae
movsb
mov
mov
popf
popa
in
shll
sub
mov
xor
dec
mov
andb
mov
cld
adc
sub
pusha
mov
scas
and
aas
hlt
pop
repz
rolb
imul
adc
sti
ret
cmp
je
loop
adc
scas
pop
inc
clc
push
pop
lcall
fcom
popa
mov
mov
sahf
dec
out
sbb
push
sub
xcrypt-cbc
cmpsl
xchg
inc
add
movsb
xor
in
xchg
movsb
mov
xchg
inc
int3
sarl
in
stos
ss
push
psubsw
lret
into
push
add
pop
je
pop
lods
add
push
cld
or
insb
repnz
pop
jp
xchg
fcoms
mov
jle
mov
dec
jae
pop
inc
loop
xchg
or
bound
inc
push
fisttpl
add
mov
or
bound
pop
jns
xchg
cmpsl
in
xor
out
sub
test
xchg
test
addr16
jp
pop
cmc
mov
fstps
mov
cmc
jle
in
and
jecxz
loope
xchg
adc
xchg
pushf
dec
or
xor
xchg
adc
add
jae
and
cmp
scas
fldcw
popf
ja
insb
jnp
xor
xchg
imull
push
xchg
xor
pop
cmp
ret
push
pop
push
lahf
addb
jae
jbe
inc
stc
daa
cmp
jnp
pop
inc
adc
sbb
sbb
and
jl
lds
pusha
mov
sahf
inc
mov
hlt
repz
arpl
mov
repz
jge
hlt
lret
loop
aaa
jl
xor
nop
jmp
add
movsl
int3
jo
or
xor
xorl
xor
outsb
loopne
cmp
pop
cwtl
push
sbb
mov
mov
mov
enter
adc
cltd
inc
ljmp
push
push
dec
sbb
pop
je,pt
shlb
enter
push
sti
push
jno
sbb
and
mov
inc
or
js
xchg
or
push
pop
jecxz
ret
sub
dec
je
rcrl
xor
and
jo
rorb
push
sbb
sbb
mov
push
lcall
sub
in
pop
rclb
push
lcall
sbb
xchg
test
sub
in
sahf
loopne
dec
test
je
jg
dec
xorl
sub
movsb
and
sub
inc
fcomps
xlat
testl
cmp
sub
jns
sbb
jmp
test
sbb
je
push
outsl
mov
push
loop
push
sbb
mov
adc
sti
data16
jo
mov
push
in
out
push
jp
lds
xor
inc
je
push
mov
sbb
add
loopnew
dec
cmpsl
pop
push
mov
imul
addl
push
mov
sbb
pop
lret
lret
das
jnp
push
sub
xor
inc
sti
or
add
test
xchg
dec
dec
cmp
fldcw
mov
pop
cmp
repz
inc
or
call
shr
jl
xchg
push
xor
fdivl
popa
ds
mov
mov
adc
inc
movaps
mov
cs
push
in
je
shl
jecxz
and
adc
cmp
pop
cwtl
stos
add
mov
xor
mov
jmp
out
fcmovne
cmpsl
jo
popf
xor
mov
repnz
lock
inc
das
and
mov
fmull
or
les
adc
ljmp
xor
jns
ds
add
sub
mov
adc
dec
sub
sti
xlat
aam
pop
xchg
ret
lret
aam
push
movsl
dec
or
aad
arpl
dec
imul
sti
cld
pop
ljmp
cmpsb
lods
jmp
test
out
popa
xchg
pop
lods
popa
clts
pushf
aas
add
dec
push
test
int3
mov
subb
jp
push
test
pop
inc
xchg
add
sbb
out
addr16
insb
mov
push
mov
ret
add
testb
std
stos
push
xor
xlat
cmpsl
xor
pusha
push
mov
add
mov
pop
cmp
ss
mov
inc
jns
test
fwait
jbe
orb
jbe
insb
jle
mov
test
cld
lods
ljmp
enter
xor
sub
leave
outsl
push
jp
js
mov
sbb
jmp
loope
jle
xchg
mov
ljmp
jl
xchg
outsl
jmp
fldl
orl
mov
mov
xor
sub
mov
xchg
lock
loopne
scas
pop
fisubrl
adc
jge
ret
push
pop
mov
xor
fidivs
and
inc
cld
loope
hlt
push
xchg
adc
xchg
xchg
je
mov
push
imul
xor
jp
jg
adc
jae
sbb
pop
mov
icebp
shll
mov
jmp
ds
xchg
arpl
add
jge
push
mov
aaa
cmp
data16
pop
data16
pop
xchg
leave
sbb
xor
sbb
scas
adc
and
sbb
movsb
insl
sbb
insb
into
inc
cmpsb
in
dec
in
or
enter
daa
imul
push
jno
fisubs
aam
orb
sub
xchg
xchg
or
int3
stc
and
sub
lahf
and
jle
test
push
lock
mov
scas
push
scas
stos
pop
jmp
call
lods
push
movsl
dec
loope
movsl
xchg
sub
cmp
outsb
xchg
test
dec
aas
fisttpll
mov
fmulp
add
add
xor
test
xor
lods
loopne
sub
xlat
xchg
lcall
mov
inc
iret
sub
les
addb
sub
mov
cmpsl
mov
insb
cmpsl
and
aas
cmp
push
divb
lret
mov
mov
test
into
addr16
jg
dec
mov
outsl
imul
jb
inc
jge
fs
fistl
mov
cld
loopne
loop
mov
out
jmp
cli
clc
mov
jo
xor
out
or
std
dec
aas
xchg
loopne
mov
pop
mov
mov
adc
and
insl
lret
xchg
pop
lret
push
cltd
fidivrl
xchg
inc
out
or
dec
mov
fwait
mov
add
or
cmpsb
aad
scas
and
mov
ret
mov
out
imul
clc
ret
nop
