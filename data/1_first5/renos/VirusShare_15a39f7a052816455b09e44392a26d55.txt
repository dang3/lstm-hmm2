enter
jmp
mov
pop
test
jl
je
or
enter
fs
enter
pop
ljmp
orl
call
pop
ret
lea
push
mov
mov
lea
pushl
adc
pop
or
or
mov
cmpl
je
xor
mov
lea
pushl
dec
test
jne
call
sbb
std
lcall
mov
mov
mul
add
mov
mov
pop
pop
pop
push
push
push
push
push
sbb
sub
cli
mov
mov
mov
cmpl
jbe
in
std
movb
push
adc
shlb
mov
add
and
sub
add
cmp
je
xor
mov
cmp
je
xor
mov
adc
insb
out
incl
and
mov
and
xor
sbb
push
lock
sti
jbe
rorb
and
fucomp
mov
or
ret
imul
and
negb
pop
pop
hlt
add
jb
gs
xor
cs
insb
jno
xlat
aaa
mov
leave
mov
mov
rep
pop
mov
lahf
lods
mov
movsb
jne
mov
mov
fbstp
adc
sub
mov
mov
lcall
jmp
mov
add
mov
sub
shr
and
sub
mov
mov
cmp
in
out
lock
add
jne
mov
add
or
decl
movzwl
add
mov
or
jbe
add
xor
dec
jne
xchg
cmp
push
mov
jbe
add
ret
mov
movsl
lds
jl
je
or
je
push
inc
into
fdivrp
iret
je
xorb
inc
jmp
add
jmp
adc
fs
fldt
orb
sub
sub
xchg
mov
add
movups
jmp
sub
xchg
xor
repz
sarb
mov
add
add
call
xor
divb
call
xor
xor
push
inc
lods
loope
mov
aam
aam
je
jae
fistpl
movb
pop
dec
les
test
adc
imul
cmp
test
sbb
inc
cmp
add
ja
mov
inc
inc
inc
popa
xor
push
and
sbb
data16
sbb
sti
pusha
out
popa
and
lea
je
mov
xor
lods
adc
add
out
fidivs
push
lahf
dec
mov
or
jg
dec
cld
mov
push
cmp
movb
mov
fildl
hlt
add
add
adc
jg
test
jp
lret
adc
fsubr
jle
mov
xchg
and
in
in
pushl
fmull
fwait
pop
adc
inc
adc
sbb
cld
imul
sbb
cmp
push
mov
mov
xor
xchg
aas
inc
sub
mov
adc
mov
xor
sbb
add
cmp
mov
or
je
bnd
inc
out
mov
xor
inc
rol
inc
out
mov
push
pop
or
push
cmp
adc
adc
or
pop
or
ret
cmp
daa
decb
jne
jp
test
loope
clc
aam
jo
jle
push
and
pop
xchg
inc
clc
sbb
je
inc
add
push
or
dec
addl
into
inc
inc
or
xor
pop
jmp
push
xor
outsl
pop
mov
pop
ret
addr16
in
outsl
cld
fimull
div
test
jne
or
sbb
jmp
imul
jle
lods
xlat
dec
clc
cmp
mov
add
arpl
movb
clc
scas
js
dec
test
in
movsl
fbstp
test
inc
xor
lea
cmp
adc
add
cmp
jbe
add
jmp
jl
in
pop
mov
push
or
daa
inc
adc
adc
add
push
push
push
cmp
push
rorl
cmp
or
mov
cmp
xchg
xor
and
js
xorl
pop
lods
pop
adc
subb
push
stc
or
push
push
fidivrl
mov
mov
jmp
arpl
inc
mov
sbb
fists
je
jb
arpl
fs
jae
add
into
jne
push
loopne
cmp
mov
adc
jmp
sub
fadds
cmpsl
out
ja
push
mov
mov
sbb
push
or
subb
push
and
imul
fmull
xor
cwtl
or
pop
cli
clc
test
add
push
das
sub
inc
ret
ret
lahf
cmc
in
push
call
push
and
pusha
repnz
cmp
push
sub
sub
xor
xor
mov
push
and
jns
sahf
cmp
push
sahf
xchg
out
rolb
xchg
xchg
dec
dec
push
call
dec
mov
into
mov
adc
add
jl
std
jp
jp
scas
popa
sbb
add
pop
pusha
mov
clc
popf
orb
ret
mov
add
hlt
dec
and
pop
fxsave
inc
xor
mov
cmp
sbb
push
mov
jecxz
ror
pshufw
dec
test
jl
inc
ret
mov
dec
adc
jae
or
inc
dec
jne
lea
adc
and
add
adc
xchg
sbb
dec
or
mov
sub
adc
adc
and
xor
lds
xchg
sbb
add
imul
ja
jmp
sbb
mov
add
sbb
adc
ret
or
mov
push
pop
ss
push
mov
movsb
subb
sbb
adc
fldt
es
int
sub
insb
stc
and
pop
jae
or
outsl
popa
fs
imul
sbb
mov
outsb
push
push
popa
imul
insb
gs
bound
arpl
outsl
jae
dec
popa
outsb
cmp
and
sti
fildll
fs
cmp
jne
inc
imul
imul
xchg
fisubrl
mov
outsl
in
mov
xchg
je
cmovbe
push
je
fdivs
decb
jbe
dec
gs
fs
xor
insl
jnp
jge
outsb
jb
enter
sbb
mov
gs
ja
add
pop
mov
bound
jg
loop
clc
ret
std
call
cmp
jne
mov
jne
jns
orl
test
xlat
sub
or
jmp
out
outsl
insb
dec
int3
imul
adc
mov
sbbl
push
neg
xchg
push
and
add
daa
jne
cli
sub
add
jbe
fcoml
test
mov
push
mov
lds
push
sub
jne
fisubrl
loop
pop
gs
lock
jge
jl
dec
loop
push
imul
and
in
lock
cltd
pushl
xlat
jne
cmc
push
jmp
adc
or
shl
pushf
stos
loope
add
sub
insb
in
adc
fs
sbb
inc
mov
lea
add
xorl
push
fidivrl
push
mov
adc
jl
cmp
and
pop
jb
and
add
add
fcoms
mov
sub
aas
jae
cmp
mov
insl
add
clc
test
add
jl
nop
jle
or
pop
or
cmp
adc
dec
sub
cmp
sbb
sub
pop
repnz
add
sub
lds
or
stos
cmovp
jb
das
jns
dec
jmp
pushf
jne
mov
daa
xchg
aam
jns
fs
xchg
pop
dec
xchg
add
or
pavgb
pop
in
xchg
leave
lret
pop
repnz
mov
test
mov
adc
scas
aam
dec
fisubrl
loop
jmp
fs
sbb
nop
jne
jbe
daa
push
ud2
adc
nop
or
adc
adc
jge
mov
and
lods
lea
add
add
daa
or
out
into
lahf
pop
daa
daa
and
pop
testb
add
out
lret
out
es
sub
cmp
popf
sub
test
pop
inc
dec
mov
add
call
inc
out
fldt
filds
dec
pop
inc
add
dec
push
push
inc
add
sbb
mov
push
and
pop
add
add
ss
ret
sbb
sub
add
aas
pop
xchg
push
pop
sbb
add
add
ja
sti
lods
or
inc
add
add
xchg
add
cmp
add
jmp
sbb
sahf
fistl
lcall
mov
xor
add
sub
xor
adc
xchg
or
add
lea
mov
shll
inc
fcmovnu
jne
sub
movl
cmp
insl
stc
divl
sbb
add
mov
fistpl
xchg
lret
sub
sub
add
push
out
ret
es
sbb
popa
xchg
fnstenv
pop
pop
or
sbb
and
popf
xor
mov
mov
cmp
sbb
sub
pop
xchg
in
insl
addr16
ja
adc
outsl
je
insb
fldcw
sbb
dec
mov
sbb
mov
mov
mov
in
cmp
jle
es
imul
push
sbb
rorb
xor
fwait
lock
inc
inc
jmp
insb
push
xor
add
mov
lods
inc
inc
inc
inc
nopl
jle
in
xchg
add
test
mov
add
add
stos
inc
push
or
inc
and
ss
shlb
stc
mov
push
push
inc
xchg
outsl
add
outsl
lods
or
jnp
xchg
lock
cmp
popl
sub
and
push
imul
or
iret
jp
addl
pop
sbb
dec
daa
xor
mov
pop
or
aas
sub
pop
mov
inc
lahf
xchg
push
mov
inc
xor
sub
nop
dec
sub
and
aaa
ret
push
mov
mov
push
mov
pop
dec
sbb
lret
movsb
filds
je
jo
adc
fcoms
add
sti
repnz
iret
add
and
pop
and
pop
lods
inc
int
inc
scas
and
mov
jae
or
mov
add
fld
mov
xchg
add
ret
cmpl
sbb
mov
fcoms
sbb
mov
mov
pop
fadds
mov
adc
shrl
rolb
fisttpl
xchg
imul
cmp
rolb
sub
fdivrs
mov
mov
data16
fcmovbe
jecxz
xor
test
sbb
imulb
pop
cmpsb
or
push
fucomp
dec
in
andb
adc
mov
push
and
sbb
lods
and
adc
das
pop
sub
xor
jo
outsb
and
sub
lods
push
jno
or
push
gs
ret
xor
push
data16
ss
xor
cmp
shl
adc
sub
mov
in
daa
jno
add
stos
dec
fdivr
pop
mov
js
jl
add
mov
fcmovnb
dec
add
xchg
test
loope
aas
mov
int3
cli
add
scas
les
add
mov
cmp
xchg
ja
sbb
pop
call
shrl
cmp
fistpl
xor
movsb
inc
mov
push
sbb
bswap
fcmovnu
xor
pop
sub
jle
cmp
push
sarb
xor
add
cwtl
cmp
cmp
xchg
xchg
and
cmp
mov
jl
cmp
jbe
jg
in
and
add
lods
jecxz
jl
inc
add
add
fldl
mov
insl
adc
mov
xchg
lock
in
add
adc
test
add
ja
fdiv
jmp
mov
test
inc
shlb
lods
fisubrs
decb
jg
mov
sub
inc
into
les
imul
mov
ret
add
inc
and
xchg
fwait
int3
xchg
push
add
mov
push
mov
jg
jge
std
insl
pop
mov
push
xor
lahf
insl
xor
add
rorl
mov
add
dec
aam
in
xor
mov
push
inc
pop
sbb
add
push
fwait
inc
lods
bound
and
popa
sub
inc
scas
sub
adc
test
add
in
add
out
xchg
xchg
adc
negl
push
fsubrs
and
in
mov
xor
inc
cmpsl
xor
cmp
ss
push
daa
leave
mov
xor
xor
adc
insl
frstor
adc
mov
fisttpl
add
or
inc
cs
pop
negl
mov
fldt
cwtl
mov
adc
lods
nopl
cs
test
sahf
and
or
fisttpl
jbe
mov
dec
jle
add
sahf
add
add
or
rolb
inc
sbb
jne
in
mov
jecxz
in
add
add
xor
mov
xlat
mov
out
push
cmp
mov
je
scas
sti
dec
cmpsb
lds
mov
outsb
inc
test
sub
rcll
test
push
adc
orl
mov
mov
lods
insl
push
push
in
aaa
and
test
adc
aaa
sub
jne
clc
stc
inc
lds
cmp
mov
sub
jo
push
js
in
pop
xchg
int3
push
shlb
outsl
jl
dec
in
repnz
jnp
xor
aas
adc
shrb
enter
sbb
and
and
xlat
xorl
xchg
inc
lock
sub
dec
lods
jns
cmpsl
stc
dec
daa
imul
out
jo
dec
adc
movl
jmp
mov
nop
sahf
pop
xor
xchg
push
jbe
pop
xchg
push
push
jp
out
mov
xorl
out
pop
or
xor
pusha
daa
shlb
scas
cmp
push
xor
rorb
int
dec
dec
dec
jno
cmp
sbb
shrl
fwait
sbb
stos
je
dec
rorl
out
add
mov
cltd
test
dec
mov
mov
pop
cmpsb
arpl
jmp
loopne
mov
and
inc
les
jg
sbb
rolb
add
insl
cmp
sbb
or
and
leave
xor
xor
lea
imul
scas
add
cltd
out
add
outsb
js
ja
xchg
dec
iret
xchg
ss
iret
sbb
dec
addr16
sbb
sub
je
aas
ret
ret
fnstsw
sub
or
xor
add
lods
xchg
xor
std
testl
xor
xor
out
imul
cwtl
jo
aad
es
test
inc
movsb
cs
sbb
or
clc
and
fdivs
xchg
xchg
sbb
daa
mov
cmp
fcmovnu
fstl
ret
pushf
mov
test
leave
mov
jno
xchg
imul
push
int
testb
jge
rolb
adc
aam
jnp
lods
in
mov
fisubrs
daa
mov
jne
add
dec
lods
sub
inc
jns
hlt
or
dec
pop
movsb
inc
jae
jb
push
push
adc
mov
dec
jae
xchg
cmp
inc
sub
loopne
scas
icebp
repz
je
mov
push
pushf
cmp
fldcw
fiaddl
rorl
insb
xor
mov
lods
mov
pop
das
mov
aaa
scas
mov
pusha
or
jno
xor
push
mov
inc
icebp
mov
cmp
adc
dec
sub
xchg
sahf
int3
xlat
inc
aaa
dec
jns
xchg
cmpsl
inc
dec
dec
ss
mov
dec
dec
cmpsl
jno
sar
sbb
inc
xor
adc
mov
xlat
test
add
arpl
into
fsubl
inc
pop
imul
out
lock
test
pop
and
insb
mov
andb
or
or
je
sti
clc
jbe
cltd
xor
dec
dec
add
or
jno
cmpsb
push
cmp
and
iret
sti
sbb
mov
add
pop
andl
mov
push
mov
cwtl
test
cltd
lods
jne
out
and
jle
xor
das
outsb
xchg
lods
loope
leave
in
test
arpl
iret
mov
cmp
xchg
fwait
adc
or
movl
mov
dec
jg
dec
das
dec
mov
mov
add
call
push
loopne
andl
cltd
mov
movswl
pop
ja
inc
xlat
loopne
lock
xorl
push
dec
cmp
inc
mov
pushf
test
add
cmp
dec
stos
bound
mov
in
fildl
mov
cmp
adc
fisubrs
adc
sub
je
outsl
ja
shlb
inc
push
pop
in
inc
jge
cmp
sbb
sbb
adc
out
push
jge
adc
shlb
pop
and
shl
lret
push
xchg
fisttps
jle
fnsave
nop
xlat
mov
add
test
push
push
dec
xchg
jo
sub
sub
mov
fmul
insl
aaa
fisubl
dec
sti
shlb
inc
cmp
fcmovne
jne
and
add
sub
jecxz
fdivs
shlb
mov
rclb
sbb
mov
jge
adc
adc
in
mov
inc
clc
add
ds
pop
ds
scas
push
stos
aam
push
ret
outsb
and
leave
xor
inc
pop
aaa
in
shl
adc
and
xchg
scas
adc
dec
dec
cmp
xor
rcll
or
or
arpl
and
outsl
aam
fcmovbe
cltd
or
add
shlb
mov
xchg
mov
mov
xlat
add
xor
xor
xchg
dec
outsb
and
jle
adc
int
adc
pcmpeqw
in
sub
fdivs
arpl
cmp
inc
xor
fdivrs
push
dec
aam
or
daa
sub
mov
arpl
outsl
mov
int3
lahf
scas
fimull
xchg
add
sub
ljmp
dec
cmpsl
movsb
jle
and
mov
nop
jmp
pop
leave
push
cmp
sub
adcb
mov
filds
ficoml
mov
pop
push
sub
and
rorl
add
dec
iret
pop
xor
fcomp
pop
mov
iret
popa
sub
mov
add
je
dec
pop
or
jnp
push
out
add
je
repz
cmp
arpl
aaa
mov
adc
adc
sarl
xor
loopne
cs
loopnew
les
inc
sbb
flds
xchg
pop
clc
jmp
or
popf
rcrl
adc
sbb
xchg
mov
aam
ss
fcoml
loop
negb
daa
daa
mov
pop
add
je
cli
or
ljmp
cmp
push
repz
sahf
xor
jp
sbb
inc
loopne
loopne
jecxz
jae
and
stos
notl
pop
lret
mov
cwtl
icebp
lret
jb
and
sahf
div
pop
lcall
fwait
mov
rol
sbb
std
adc
mov
xchg
fildl
mov
pop
push
data16
std
mov
inc
add
mov
xor
adc
cmovl
or
sub
idivl
adc
dec
pop
scas
addr16
cmp
push
arpl
and
lds
das
or
adc
add
rol
adc
adc
out
xchg
jp
inc
mov
mov
adc
out
push
pusha
mov
in
adc
push
test
xor
iret
test
inc
js
xor
test
fcoms
aas
mov
jl
or
add
sbb
cmp
mov
or
cmp
mov
push
aas
movsl
mov
or
jne
mov
mov
test
sub
inc
roll
jnp
ss
adc
inc
pop
test
sub
add
pop
xchg
iret
mov
jno
and
adc
fisubs
inc
lret
rcl
fistl
imul
in
lods
or
jl
iret
rorl
add
pop
ficoms
stos
and
add
iret
lds
pop
push
mov
push
adcb
ret
fidivs
dec
es
inc
or
pop
movsb
ljmp
adc
fisubrs
add
or
cmp
push
pop
xchg
and
popf
jns
xchg
jmp
xchg
and
dec
inc
cmpsb
push
lea
mov
jbe
aam
js
dec
test
xchg
pop
inc
mov
xchg
fcmovbe
ss
dec
ret
xor
imul
enter
daa
lea
dec
push
and
add
lcall
inc
push
push
inc
pop
pop
xor
cmp
addr16
adc
mov
cmp
mov
ljmp
push
cmp
loop
sbb
fadds
mov
popa
mov
mov
insb
inc
arpl
sbb
fiaddl
pusha
idivb
aas
push
fstps
mov
lods
add
adc
sbb
jae
std
xor
hlt
out
stos
cmp
int3
ss
mov
sub
out
pop
test
fsubs
inc
mov
sub
addr16
and
xor
sbb
inc
dec
sub
lds
cmp
scas
or
jl
xor
fwait
mov
scas
cmp
pop
inc
jbe
outsb
pop
icebp
and
add
mov
sbb
ret
popa
sbb
arpl
mov
sub
bound
cwtl
sbb
jno
sbb
jno
mov
lock
dec
aas
ja
adc
cmp
adc
sbb
daa
jge
cmp
xchg
insl
out
lock
imul
mov
mov
xchg
adc
sarl
cmp
xor
out
add
dec
inc
mov
push
insb
aaa
inc
test
bnd
sbb
pop
insl
mov
cs
stos
leave
out
outsb
andl
jno
pop
pop
rcl
jo
scas
sub
fldcw
insl
push
push
xor
pushf
bound
push
pop
mov
mov
mov
pop
mov
sub
and
loope
andl
bound
xchg
adcl
in
mov
pop
jmp
xchg
ljmp
leave
lods
mov
das
mov
mov
pop
fldcw
es
push
mov
loope
lahf
push
xor
arpl
add
iret
xchg
and
mov
push
pop
mov
ss
adc
fldcw
push
shlb
xchg
xor
aas
jne
add
test
hlt
in
cmp
leave
dec
sahf
sbb
or
mov
pop
adc
sbb
cmp
push
loope
pop
ds
push
xchg
or
out
in
sbb
sahf
add
sbb
inc
dec
push
add
sbb
inc
xor
inc
add
or
jb
pop
mov
pop
repnz
stos
xor
sub
in
jbe
cwtl
jne
push
es
in
mov
and
iret
in
insb
rsqrtps
ret
loopne
adc
js
and
sub
mov
push
and
out
addb
sbb
dec
loope
test
cmp
icebp
ds
and
imul
icebp
mov
stos
lret
inc
adc
inc
sub
loopne
xor
fcomp
testb
sbb
jb
inc
mov
sub
push
int
inc
mov
push
inc
and
ds
bound
xor
roll
cwtl
in
adc
jo
sbb
dec
xor
mov
cmp
jp
jl
jbe
dec
mov
fnstcw
jno
mov
cltd
and
adc
insb
adcl
xchg
negb
dec
dec
adc
scas
fs
cmp
and
mov
inc
push
fcmovbe
mov
push
cmpsl
push
sub
icebp
add
lods
sub
cmovg
inc
fwait
and
test
cmp
into
xchg
in
xchg
and
test
sbb
hlt
add
or
popa
mov
push
hlt
jo
mov
es
scas
nop
mov
subl
push
add
adc
and
and
sbb
inc
mov
mov
and
push
in
xor
adc
add
sub
mov
or
pusha
pop
lahf
fucomi
push
add
mov
jmp
leave
push
ljmp
inc
push
aas
lahf
mov
push
and
rol
inc
subl
jp
jbe
add
inc
ret
adc
fadds
jp
les
sub
fbstp
adc
mov
inc
mov
daa
mov
xorb
dec
es
rcrb
add
stc
imul
fldt
das
mov
popa
inc
das
cs
les
pop
xor
aad
mov
sub
mov
and
jge
cmp
jp
cmpsl
insl
jl
cmp
push
test
inc
inc
ficompl
xchg
fadds
inc
jns
and
shlb
mov
test
imul
fadds
xchg
jle
nop
push
sbb
push
mov
bound
pop
loopne
inc
bound
adc
mov
or
add
aam
aaa
fwait
stos
jmp
rcll
shlb
addr16
cmp
fmull
dec
cmp
push
and
call
inc
jb
out
and
shlb
jbe
add
rcll
popf
les
and
cmp
scas
pop
sbbb
inc
lock
or
mov
xor
jb
sbb
aas
fwait
jg
stc
xor
rorb
dec
arpl
test
fimuls
clc
pop
rcrl
and
nop
and
and
mov
lods
jge
cwtl
insb
je
cmpsl
push
lds
rcrl
in
pop
mov
and
push
push
sbb
and
in
mov
add
pop
push
inc
push
pop
pop
mov
or
insb
pop
xlat
outsb
sub
pop
sbb
insb
sbb
icebp
push
movsl
jecxz
cld
and
dec
sbb
and
loope
sub
jmp
mov
jmp
xor
jecxz
sub
cmp
xchg
add
cmp
jnp
pop
adc
pusha
iret
loope
fldenv
popa
test
adc
jl
mov
fcomps
out
sbb
shll
xlat
cmp
add
dec
or
aas
movsl
sub
mov
stos
cmp
or
push
imul
pop
shrl
cmp
stc
test
dec
mov
fsub
jo
out
xchg
iret
mov
divl
xor
ds
inc
dec
daa
or
test
sahf
jg
jg
lret
sbb
fs
mov
xlat
adc
fdivl
in
sahf
and
inc
es
adcb
push
add
lods
in
ficomps
dec
sub
fwait
push
xor
pop
outsb
mov
lds
int3
pop
dec
test
enter
pop
add
add
mov
pop
jbe
testl
and
in
int
sub
inc
pop
daa
es
fcomps
add
pop
dec
into
sahf
int
mov
jge
adc
popf
lret
mov
or
mov
negb
sub
enter
sbb
lahf
lahf
sbb
xor
pusha
ja
ret
out
cltd
pop
rol
jl
adc
gs
loope
jbe
pop
or
out
lock
inc
rorb
addr16
xor
sub
gs
inc
sbb
into
test
pop
push
imul
mov
xor
loope
xor
in
add
arpl
cmp
out
insb
iret
xor
or
lea
cmp
xchg
into
es
push
and
mov
into
push
mov
sbb
add
add
cmp
pop
nop
mov
mov
push
push
add
test
add
in
shll
pop
in
push
loopne
push
stos
popa
mov
mov
fld
subb
and
pop
or
xchg
or
xor
rclb
xchg
loop
test
scas
addr16
adc
push
pop
das
cmp
add
out
sub
jge
pop
popa
or
mov
xorl
mov
xor
push
pop
mov
jae,pt
inc
mov
mov
pop
and
scas
pop
mov
jp
int3
ficompl
push
mov
cld
call
sub
or
lcall
lods
insl
or
xchg
ret
nop
mov
js
ss
mov
add
pop
pushf
aaa
aad
push
daa
add
push
sub
push
push
and
fstpl
sub
dec
push
les
bound
cwtl
pusha
ret
sub
arpl
out
inc
fwait
data16
clc
pop
mov
cmp
sub
loope
imull
outsb
ja
sub
fldl
mov
testl
add
dec
fwait
adc
and
in
sub
insb
testb
sub
mov
nop
das
jle
lret
outsb
js
andb
mov
cmp
mov
xchg
xor
push
test
xor
in
outsl
dec
sub
out
aas
loopne
cmp
add
aaa
ret
cmp
adc
push
sarl
jo
push
scas
es
test
adc
test
jmp
jae
xor
test
aaa
mov
arpl
out
shl
int3
and
push
dec
push
mov
mov
dec
imulb
sbb
push
xor
sbb
mov
outsl
pop
loope
xchg
push
jo
mov
fprem
punpckhdq
dec
inc
fadds
scas
jg
and
mov
mov
mov
push
mov
dec
xchg
xor
adc
xor
xor
es
or
movsb
push
lcall
add
arpl
shlb
inc
cwtl
add
les
xchg
mov
mov
ss
jb
adcb
jmp
rorb
aam
mov
cs
jmp
pop
inc
jle
xor
pop
das
xor
xor
call
pop
loopne
data16
shlb
inc
pop
je
rclb
add
cmp
jno
roll
test
sub
andb
test
jnp
push
push
sub
dec
push
fldcw
bound
or
ficomps
cwtl
je
mov
lea
daa
inc
push
jb
jmp
loopne
and
and
out
and
pusha
or
inc
pop
addr16
sub
fildl
shl
push
xchg
mov
jns
add
data16
jbe
data16
movsb
out
int3
insb
and
adc
fwait
mov
int3
data16
and
lods
sub
pop
adc
das
adc
insb
or
xchg
push
pop
outsl
add
mov
and
push
jmp
mov
int3
xor
sub
dec
das
adc
inc
fstpt
add
gs
and
dec
hlt
fildll
mov
mov
dec
fsubr
xchg
sub
out
js
je
mov
std
adc
push
fbld
mov
cmpsl
inc
sub
je
fisubl
jne
dec
gs
in
ds
xchg
loopne
jno
daa
addb
mov
pop
lock
jge
push
fsubrp
into
lret
mov
push
fdivrl
mov
mov
jns
push
push
xchg
test
push
dec
insb
fcomps
es
xor
add
or
add
insl
test
inc
and
daa
daa
sub
add
add
stos
and
add
pop
mov
lock
or
push
push
jo
ljmp
andl
add
sub
les
jp
lret
aas
sub
xor
xchg
sub
leave
fcom
xchg
stc
add
pop
aaa
dec
or
add
sbb
pop
pop
ss
je
lret
popf
add
cmp
sbb
jmp
add
dec
adc
test
inc
lods
mov
stos
ret
lret
or
je
push
lcall
jno
or
add
xor
pop
cwtl
insl
adc
ret
sbb
out
xchg
pop
xor
mov
pusha
into
lods
push
inc
loope
mov
cmp
cmp
push
fwait
jne
scas
sbb
xor
jno
cmp
or
push
adc
jecxz
sarb
test
push
adc
dec
adc
shlb
bnd
ljmp
pop
mov
mov
or
fwait
adc
inc
xor
adc
pop
scas
push
lods
loopne
scas
stos
rolb
sbb
cmp
clc
mov
clc
and
stos
jae
fiadds
fisubl
sub
sub
or
jno
fwait
add
pop
pushf
inc
ftst
pop
cmpsb
and
jo
add
jno
sbbb
rcrl
and
sbb
push
xchg
scas
cmc
inc
or
push
ret
cmpsb
popf
xchg
mov
push
sbb
xor
cmpsb
inc
mov
addr16
inc
and
fnsave
dec
and
add
cmp
mov
lock
loopne
adc
mov
jae
mov
insb
push
adc
mov
adc
and
incb
and
jbe
push
clc
ss
sbb
out
or
cmp
enter
inc
sti
repnz
or
dec
add
cs
fcoms
xchg
psubusb
arpl
fucom
pusha
push
mov
and
mov
hlt
or
jbe
loop
stc
andl
nop
and
jecxz
push
shrl
imul
lods
push
fbstp
jno
cwtl
arpl
daa
fimuls
cmp
and
in
fdivs
and
jl
jno
outsb
sbb
pxor
xorl
add
fucomp
lods
pusha
stc
xor
subl
sub
test
mov
test
pusha
ret
mov
jo
in
pop
in
movsb
rclb
adc
enter
bound
mov
repz
pop
mov
rcl
lods
loope
lock
mov
getsec
std
loope
jmp
fildll
leave
inc
loop
push
cmc
lret
andb
dec
jo
call
cwtl
or
and
add
pop
xor
icebp
push
xor
xor
inc
idivl
mov
sbb
push
in
and
sbb
xor
push
addl
mov
cmp
insb
and
push
adc
cmpsb
or
into
push
pop
jnp
jp
out
jg
adc
cwtl
aad
mov
in
push
push
jno
jmp
xlat
cwtl
adc
jg
ror
pop
sbb
test
push
add
icebp
sub
and
xor
and
jge
je
js
xor
xor
mov
mov
cmp
fsubrs
mov
cmp
inc
dec
xor
sbb
movsb
loopne
repz
adc
push
mov
sbb
ja
xlat
adc
or
adc
sbb
faddl
add
inc
fisubl
mov
jnp
movsb
mov
pop
int
xchg
js
fistpll
movsb
and
inc
out
add
shrb
rcrl
stc
xor
orl
push
icebp
sub
je
cmp
lcall
and
mov
insb
and
cmp
push
inc
inc
aam
lcall
shl
and
call
test
stos
add
push
lea
aam
fstpt
pop
mov
lret
cs
jmp
adc
mov
pop
mov
movsb
test
arpl
xor
shrl
mov
pop
or
push
and
shrl
loopne
js
or
xor
sbb
inc
orl
pop
xor
aad
loope
xor
pop
cmp
negb
daa
xor
dec
dec
int3
and
inc
sub
aam
pusha
inc
lea
dec
cmpsl
add
daa
imul
mov
jne
and
in
out
jnp
fmuls
daa
es
dec
jge
inc
adc
lods
push
xchg
and
jae
pop
xchg
cmc
or
mov
dec
inc
or
iret
aad
mov
test
sbb
sub
stos
xor
dec
add
in
adc
int
jmp
add
add
lock
into
push
push
sbb
mov
push
jge
dec
lods
mov
fnstcw
out
xchg
sub
addr16
or
arpl
outsb
push
daa
jne
pusha
inc
aam
bound
ljmp
js
je
int3
or
mov
or
loope
xor
imul
inc
and
in
lods
popf
jo
inc
arpl
xor
cwtl
sbb
sub
add
popa
jno
cmp
sub
and
cmp
jno
add
addb
xchg
inc
addb
enter
inc
xor
pusha
and
mov
sbb
mov
mov
push
sub
add
fadds
sub
and
mov
push
pop
lcall
vpcmpgtd
jno
fisubs
sub
jns
test
pop
add
imul
call
mov
sarb
pop
test
jnp
adc
jp
shlb
mov
jae
xlat
sub
cmp
sub
loopne
or
sub
mov
mov
jp
jmp
or
inc
addr16
das
bound
adcl
lret
aad
and
dec
xchg
data16
lret
dec
fistps
sbb
fisttps
test
or
test
cmp
jb
test
sbb
lahf
pop
dec
mov
pop
adc
outsb
cmpsb
ds
adc
lods
imul
stos
jb
je
sbb
dec
xchg
or
notb
in
fstpt
sbb
das
jns
cmp
ds
popl
inc
aam
fcmovnb
or
addr16
mov
and
and
daa
jbe
and
adc
xchg
dec
xchg
mov
cwtl
inc
mov
pop
pushf
frstor
and
push
mov
inc
push
push
xchg
push
and
ja
mov
mov
notl
cmpsl
mov
add
jno
and
js
sbb
cwtl
inc
cmp
or
lock
mov
dec
cld
xor
pop
cmp
pop
pop
test
cltd
lea
jbe
sbb
mov
inc
push
fsin
daa
ss
and
push
pop
rcll
fcmovnu
pop
rcll
inc
fadds
inc
adc
mov
cltd
mov
aas
mov
pop
adc
adc
rolb
ror
int
xor
pop
jle
sbb
push
cmp
sbbl
ljmp
push
fnstsw
jno
out
and
push
clc
test
jmp
adc
out
inc
dec
clc
loopne
add
cmp
sbbl
xor
adc
jl
or
sbbl
mov
jp
repnz
inc
in
add
xchg
pop
inc
in
pop
mov
popf
test
jno
cli
jns
les
dec
in
pop
pop
aam
fidivs
or
jl
adc
repnz
add
jb
ja
push
stos
pop
pushf
mov
out
add
and
add
ljmp
add
and
xchg
push
in
jo
mov
ja
ds
adc
push
in
xchg
ss
sbb
call
faddl
es
out
outsl
arpl
mov
lea
imull
cmp
mov
xor
mov
adc
adc
push
jno
insl
loopne
or
add
iret
lds
xor
and
iret
mov
push
mov
pop
sbb
rorb
mov
cmpl
sbb
mov
shll
pop
iret
xchg
mov
xor
ret
outsb
mov
into
stos
movsl
arpl
pop
adcb
out
and
mov
add
xor
add
mov
out
clc
xor
lcall
cmc
aam
mov
sub
jb
push
xor
jnp
inc
and
out
sbb
xor
lods
sarl
sti
mov
add
xor
mov
loopne
ljmp
scas
pop
loopne
add
dec
aas
mov
js
into
push
add
dec
push
push
and
imulb
push
adc
lcall
in
fistl
push
add
cmp
push
insb
push
test
push
test
mov
rcll
pop
push
call
mov
stos
aam
das
repz
clc
loopne
scas
and
aaa
inc
mov
push
sbb
shr
adc
add
insl
test
xor
cmp
and
add
rclb
popa
inc
push
fldenv
sub
dec
or
movsl
imul
pop
add
outsb
push
xor
fwait
enter
cmpsl
or
push
jne
cmpsb
das
push
pop
sub
mov
jl
xor
test
jne
enter
push
add
dec
lock
cmp
iret
pop
shrl
jp
mov
sub
shll
sbb
notb
cmp
das
out
sbb
mov
jl
loope
arpl
outsl
xstore-rng
cmpsl
inc
fldt
push
imul
test
xchg
mov
pop
mov
mov
mov
je
or
jo
sub
push
push
mov
adc
test
xor
push
add
add
shll
and
hlt
ljmp
mov
pop
sti
mov
popf
scas
xorl
add
lret
add
imul
sub
dec
cmp
rclb
out
mov
es
scas
outsl
and
js
jae
and
js
jg
pusha
loopne
stos
mov
sub
add
mov
shlb
dec
or
shl
mov
or
sub
cmp
call
add
ja
jle
mov
ja
roll
add
leave
jae
lret
adc
mov
mov
or
lock
xor
or
pop
jecxz
lock
cltd
nop
or
repnz
xor
inc
xchg
out
daa
in
and
jmp
add
mov
add
jge
xor
push
lods
roll
nop
call
inc
nop
dec
xor
inc
orb
cmp
xchg
dec
mov
loopne
aas
int3
jp
stos
mov
test
jl
lods
insb
push
leave
mov
or
mov
fmull
sahf
imul
lret
sbb
sbb
lea
or
xchg
dec
dec
adc
mov
arpl
and
out
or
fwait
adc
sub
adc
mov
arpl
divb
dec
fiadds
arpl
xor
sbb
testl
dec
adc
stc
fisubs
xor
inc
ja
ss
pop
arpl
pop
xor
fnsave
int
dec
jg
xor
jnp
inc
mov
xchg
insb
in
sub
mov
test
ret
in
adc
push
inc
xor
cmp
jne
in
pop
inc
add
adc
inc
push
dec
test
hlt
inc
test
bound
in
insb
mov
and
enter
pop
sbbl
add
mov
aaa
adc
addr16
push
push
repz
xchg
sub
cltd
pop
pop
sub
cmp
aas
test
sbbl
addr16
cmp
loope
addr16
in
pop
shll
push
insb
adc
fbstp
les
imul
pop
arpl
mov
xchg
arpl
jnp
mov
xlat
add
xor
xchg
xchg
inc
xor
insl
sbb
mov
popa
sbb
fs
dec
insb
xchg
xor
arpl
push
imul
in
popa
xchg
mov
popa
mov
fbstp
rorl
sbb
mov
cwtl
test
aaa
sbb
mov
fildll
ja
xchg
push
push
jecxz
repz
jecxz
cmp
testl
in
mov
insl
xchg
movsl
dec
test
xor
xchg
sti
sub
sbb
dec
fwait
jle
pop
jecxz
inc
sbb
fmul
and
nop
cs
pop
out
dec
xlat
dec
xchg
jmp
adc
divl
lods
fs
bound
sub
lret
daa
pop
ss
jle
pushf
adc
cs
in
int
mov
das
adc
adc
pop
outsl
iret
xchg
aaa
dec
or
in
or
xor
adc
inc
shrl
cmp
xor
lods
leave
sbb
xchg
xchg
fildl
pop
sbb
xor
xchg
cmp
mov
mov
aaa
rclb
pop
pop
mov
das
dec
sub
jae
cmp
lods
jbe
aaa
dec
cmc
adc
cmp
sbb
cmp
dec
mov
sbb
cmp
dec
mov
jmp
add
push
arpl
es
test
cmp
int
sbb
add
leave
mov
xchg
sbb
lock
dec
sbb
js
add
idivb
lods
arpl
dec
inc
pop
adc
popf
out
popf
cmp
push
imul
out
jne
dec
xor
sahf
sbb
movq
pusha
cmpsl
out
jns
inc
pop
and
jle
and
aam
adc
mov
or
inc
adc
ficomps
test
enter
push
cmpsl
fwait
daa
dec
lock
jnp
ficoms
push
scas
pop
add
stos
lea
insl
pop
dec
in
add
in
jecxz
sub
mov
outsl
mov
andl
stos
push
dec
aaa
lds
xor
call
shlb
lret
imul
or
shrl
sbbb
rorl
mov
mov
fs
test
cltd
fcomip
sbb
push
jmp
mov
test
jg
call
lods
movsl
lods
fadds
add
aaa
add
push
sub
add
add
ret
mov
xlat
xlat
lock
xchg
adc
adc
aaa
adc
fwait
imul
xorb
inc
jne
lods
in
pop
cmp
scas
inc
in
inc
sub
cmp
push
in
push
inc
adc
fildll
andb
jp
mov
jge
js
jecxz
setb
inc
lahf
xlat
test
shrl
jnp
scas
xor
cmp
dec
rorb
test
ret
dec
out
stos
loopne
iret
bswap
xchg
sbb
es
bound
adc
negl
xor
sub
push
popa
fcomps
or
es
push
test
pop
fildll
imul
or
push
lods
imul
pusha
add
jle
test
pop
hlt
xchg
dec
test
jns
fbld
push
aad
pop
enter
or
push
cmc
lods
iret
inc
mov
clc
push
mov
out
xchg
test
fldl
mov
jo
and
pop
stos
imul
sbb
xchg
sbb
jo
mov
gs
in
xor
adc
or
aas
xlat
cltd
lret
ret
xchg
or
push
lods
jmp
sbb
outsl
add
ja
loope
dec
data16
mov
gs
and
inc
mov
add
sub
out
xchg
dec
adc
data16
sahf
test
fsubp
scas
fildl
mov
test
adc
push
add
fsubr
add
aam
icebp
iret
aaa
xchg
mov
cmpsb
and
add
xchg
cmpsb
and
stc
push
rorl
pusha
fldenv
std
aaa
adcb
push
push
dec
jnp
add
jge
sbb
mov
mov
push
dec
or
outsl
inc
pop
fcoms
jle
outsl
adc
cwtl
jmp
pop
les
andl
out
in
jmp
popa
inc
in
lods
jno
jg
jne
loopne
jne
jg
iret
cmp
ss
push
rcll
mov
rcr
insb
scas
mov
arpl
inc
addr16
fstpt
fsubrs
push
inc
cmp
mov
inc
hlt
sahf
dec
popa
ret
ja
data16
out
jle
loope
fiadds
pop
ja
sub
sbb
lock
cmpsl
testl
push
scas
pop
je
push
inc
lea
dec
and
ljmp
mov
aad
jg
sbb
xor
ret
movsb
xchg
loop
scas
pop
sbbb
sub
mov
out
sub
push
js
or
imul
mov
xchg
xchg
jo
xor
or
inc
or
sub
mov
fistps
mov
lcall
add
and
cmp
and
add
shlb
push
inc
ds
pop
mov
add
xor
push
xchg
cmova
push
in
or
mov
mov
sub
testl
idivl
iret
lock
push
jo
dec
jae
and
jns
push
sbb
adc
sarb
mov
ret
lahf
and
shlb
sub
aaa
arpl
fldenv
mov
mov
mov
adc
mov
and
and
repnz
test
daa
inc
js
fdivrs
data16
data16
sub
jmp
xor
insb
jmp
push
adcb
js
filds
sub
aaa
or
and
and
lea
insb
mov
sub
rcrb
jg
out
and
test
dec
ja
scas
sub
adc
sahf
bound
mov
movsb
ljmp
lret
xlat
aad
and
insl
or
in
loopne
aam
inc
mov
mov
adc
or
add
push
dec
xor
loop
or
cmpsb
ja
fs
testl
or
add
add
pop
and
daa
adc
cld
and
iret
dec
mov
lcall
js
adc
test
inc
inc
xor
pop
scas
out
div
in
mov
inc
jecxz
pushf
mov
adc
shlb
sbb
dec
sub
cwtl
rol
sub
icebp
hlt
sbb
and
push
cmpsl
or
fcompl
ret
and
jbe
lods
sbb
add
movsb
cmove
and
sbb
xchg
add
add
fmuls
enter
dec
sbb
add
les
adc
int3
cmp
push
loopne
ret
jmp
xchg
andl
mov
clc
std
inc
mov
cli
jmp
aam
mov
div
cmp
and
xchg
cmp
add
ret
mov
insl
cmp
test
mov
push
mov
add
psubsw
add
arpl
push
addb
mov
and
push
xor
push
ror
lods
loopne
neg
idivb
es
stos
dec
add
test
in
mov
lcall
push
pop
in
fwait
jle
loop
pop
jecxz
inc
xchg
mov
or
iret
dec
fwait
push
adc
nop
mov
shlb
mov
and
sub
lods
stos
sub
mov
xor
lret
fisubrl
popa
shlb
add
jne
or
dec
cmc
test
adc
popf
ja
jge
insl
insl
lds
mov
in
in
jecxz
cmp
ds
incb
stc
sbb
sub
sarb
jmp
and
pop
loopne
and
jne
xchg
and
roll
daa
adc
inc
in
dec
lods
sbb
add
insl
xchg
loop
fwait
mov
ja
ficomps
sub
ja
scas
cmp
outsl
push
add
iret
test
push
mov
sub
jae
xchg
xor
sub
sub
mov
or
or
and
mov
stos
xchg
insb
cmp
xchg
in
cmp
jbe
inc
add
push
mov
sarl
mov
and
enter
xchg
mov
sub
imul
mov
mov
push
or
leave
pusha
ja
add
aaa
imull
out
mov
cmp
ret
orl
inc
shrl
or
inc
ror
hlt
cmp
icebp
in
or
xchg
test
pusha
mov
sub
fnstenv
inc
jecxz
push
ret
imul
mov
mov
jle
and
inc
aaa
les
push
and
popf
int
sbb
cld
int3
and
mov
jecxz
and
dec
hlt
lods
jnp
inc
scas
cmp
in
sub
daa
and
es
fcomps
xor
rol
mov
mov
aas
out
fcomps
push
adc
mov
sbb
mov
cmp
push
dec
lret
ret
stos
test
push
lea
sbb
dec
fcom
sub
das
mov
adc
fdivrl
push
inc
cmp
std
das
fdivr
jns
inc
ja
test
pop
xchg
pop
js
arpl
fsub
iret
pop
in
push
jmp
lahf
inc
mov
nop
pop
jno
fdivp
push
push
sbb
into
test
xchg
test
or
mov
xchg
gs
ret
mov
add
mov
dec
or
dec
jne
lods
or
lea
xchg
jmp
and
call
xchg
mov
push
hlt
icebp
lock
sub
sbb
jb
and
ja
add
dec
leave
sub
jo
cltd
and
jo
adc
dec
jns
pop
inc
adc
push
mov
xchg
xor
and
inc
mov
outsb
frstor
mov
push
nop
or
mov
std
in
aam
mov
addb
add
mov
adc
fldt
int
scas
stos
sub
push
ja
sbb
lret
mov
cmp
mov
insl
hlt
mov
mov
mov
cs
xchg
push
clc
mov
jle
ds
pop
sti
sub
lods
out
sub
adc
out
and
mov
xcrypt-cbc
cmpsl
xchg
aam
add
mov
cmp
push
adc
cmp
cld
adc
aam
mov
cs
jnp
ret
add
xchg
enter
cli
sbb
sub
loopne
mov
hlt
push
sti
dec
pop
and
cmp
aad
popfw
fldt
push
xlat
jecxz
repz
inc
cmc
xor
bound
xchg
jmp
addb
xchg
xchg
adc
mov
xadd
movsb
add
icebp
ja
ret
jb
test
scas
shl
mov
je
rdmsr
popf
lds
or
les
aad
cmpl
loope
sub
adc
mov
lock
pslld
inc
mov
mov
loopne
loope
cmp
jp
scas
cmc
xchg
das
push
inc
aad
push
jle
jle
mov
push
mov
cmp
pop
insb
and
push
fnstcw
ror
pushf
add
orb
aaa
fwait
add
mov
pushf
cmp
or
or
mov
loopne
pushf
subb
push
pusha
ljmp
das
in
pop
mov
lods
jle
in
jne
cmp
rcrb
adc
lds
dec
xor
add
scas
jnp
arpl
lods
test
dec
ja
xor
shll
test
dec
dec
sub
or
daa
aad
mov
stc
jo
jo
inc
inc
jg
add
xor
test
icebp
push
add
push
mov
push
mov
sbb
inc
bound
push
sbb
dec
lds
pop
mov
sbb
fisubrl
rcrl
jne
pop
pusha
addr16
pop
ret
sub
scas
rcrl
je
inc
push
add
iret
jecxz
call
xchg
jle
jne
sub
cs
and
add
mov
push
aad
shll
ficoms
movsb
cwtl
or
sbb
popa
call
xchg
je
jnp
xor
ljmp
mov
mov
mov
adc
xchg
adc
jb
sbbb
and
add
subb
dec
sbb
xchg
jp
std
dec
ja
or
xchg
jmp
sub
cmpsl
clc
movsl
popa
inc
lods
mov
push
shlb
push
outsb
les
int3
sbb
sbb
adc
and
sbb
and
mov
mov
fs
xchg
in
lret
pop
loop
outsb
test
incb
inc
cmc
xchg
push
and
adc
lods
xor
rolb
jp
into
mov
push
xor
jae
push
shl
cmp
movsl
sbb
jmp
pushf
inc
outsl
pop
inc
dec
or
sbb
push
sub
pop
aad
or
loop
xchg
daa
test
or
cmp
dec
xor
test
jp
cmp
lret
fdivr
mov
xchg
push
or
jnp
mov
add
inc
xor
lcall
cmpsb
popl
mov
jle
push
adc
xchg
xchg
fsubrs
sbb
add
adc
fistl
xlat
and
in
jle
pop
jo
shll
xchg
adc
and
dec
cmpsl
je
ret
mov
push
xchg
adc
dec
adc
outsb
xchg
out
roll
adc
pop
jne
cmp
popa
pop
inc
mov
cs
aaa
mov
sub
jbe
loop
loop
add
inc
adc
repnz
addb
sub
shrl
arpl
test
aaa
jnp
jb
pushf
lds
cmp
pop
ljmp
es
lods
xchg
jmp
jns
xchg
xorl
add
jo
xlat
mov
mov
hlt
dec
js
push
pop
shll
mov
xchg
movsb
xlat
lods
jo
push
add
int
data16
outsb
add
jo
pusha
mov
sub
or
insl
int
adc
out
sub
in
in
and
dec
push
in
dec
add
jnp
pop
in
mov
xchg
in
call
mov
stos
outsl
jmp
into
inc
cwtl
jmp
xlat
imul
out
in
jmp
sub
xor
push
ljmp
outsb
jmp
push
popa
in
or
jns
orl
mov
mov
ficomps
mov
adc
jle
ret
inc
pushf
sahf
adc
xchg
test
inc
scas
push
std
cmp
push
mov
mov
es
ljmp
loopne
out
cmp
xor
sbb
push
sub
into
xchg
int
inc
aas
add
inc
sub
call
pop
mov
insl
addr16
add
clc
push
aas
mov
add
mov
mov
and
fnsave
add
xchg
dec
pop
mov
shrb
inc
and
jae
push
icebp
iret
mov
and
imul
mov
pop
inc
fs
cli
xchg
or
push
mov
xor
icebp
add
xchg
test
orl
xchg
cmp
jno
test
les
ret
clc
add
dec
lock
insb
add
mul
test
stos
push
mov
rclb
sub
xchg
rolb
leave
add
shrl
pop
test
cmp
xchg
push
mov
mov
xchg
pop
inc
sbb
lods
jno
test
lock
sbb
mov
adc
in
rorl
fisubs
repz
std
push
sub
or
xchg
fildll
popa
es
sub
mov
add
and
addr16
xchg
pop
scas
push
mov
cmp
or
mov
inc
inc
xchg
adc
sbb
push
outsl
sub
ja
aaa
dec
adc
sbb
bound
je
pusha
cmpb
ljmp
fisubrs
fldl
cmp
push
sub
loopne
aam
outsl
scas
cmp
inc
fisubl
aad
ret
pop
xchg
pop
pusha
sbb
aam
sbb
fwait
mov
add
pop
ds
mov
cltd
cbtw
sbb
add
das
and
in
je
and
push
stos
dec
mov
loope
fadd
cmp
xor
and
jecxz
adc
push
jo
xchg
popf
ljmp
sbb
push
fildl
sub
and
addb
je
fiadds
pop
and
call
out
into
push
fisttpll
or
iret
adc
add
lock
cmp
shrl
imul
stos
sub
jno
cmpsl
adc
das
jno
xor
call
outsl
jo
bound
pop
movsb
in
or
sub
sub
test
adc
aad
xchg
negb
sub
mov
shrl
jp
das
xor
stc
lds
faddl
int3
dec
test
mov
cmp
iret
mov
mov
rcl
add
fcmovnu
jl
add
lahf
imul
sub
je
add
lods
lods
pop
rcr
lret
cltd
xor
sbb
push
inc
mov
dec
movsb
ljmp
lret
int
cmpb
add
sub
test
sub
or
or
outsb
pop
xor
or
add
sarb
push
push
insb
pop
xlat
xor
sbb
jbe
push
scas
sti
shlb
ja
minps
movntps
and
cs
jmp
or
xchg
or
aas
fcoms
xor
scas
subb
pop
or
jle
push
adc
fiadds
push
mov
and
mov
lods
rcl
out
rdpmc
aam
mov
push
pop
and
dec
cmpsl
or
dec
jb
test
and
add
jns
loope
xor
pusha
add
and
jnp
xchg
ret
outsl
jmp
sub
in
rcr
inc
fcmovnu
jle
xor
sub
out
jo
fistl
lods
in
pop
jl
mov
sbb
inc
push
and
lods
clc
and
lods
mov
sub
out
je
sub
and
les
fdivl
add
movsb
imul
mov
adc
lods
testb
fdivs
ss
shlb
aaa
jecxz
and
cmpsb
ret
mov
stc
rcrl
lock
lcall
xor
add
adc
push
push
ja
and
sarb
xchg
sbb
lret
cli
stos
and
xchg
outsl
xchg
out
outsl
in
scas
push
cmp
into
and
jle
and
iret
lds
ja
cmp
xor
lock
jle
roll
into
aam
lods
mov
jne
or
shl
fiadds
jo
test
mov
inc
inc
push
sub
mov
pushf
push
data16
out
ljmp
pop
jecxz
loop
lds
and
scas
xor
testl
lods
lods
jae
sti
push
push
or
pop
xor
sarl
cmp
out
jno
stos
xlat
mov
insl
fldt
inc
mov
sarl
cld
cwtl
call
or
imul
inc
push
push
les
xlat
stos
mov
pop
or
add
jo
dec
push
jecxz
fdivrs
cmp
sbb
mov
lods
ss
lods
adc
sub
lret
outsb
xchg
movsb
daa
mov
inc
pop
lods
iret
stos
sbb
out
lcall
ret
loopne
or
xchg
and
lods
leave
test
fidivrs
lret
and
sbb
rcrb
cltd
fisubrs
add
push
fldcw
repz
stc
iret
pop
jno
cmp
jae
pop
dec
clc
dec
jp
mov
inc
push
xor
cmpsl
jmp
and
jp
push
leave
in
rorl
cmp
xchg
xchg
rclb
imul
lods
nop
in
jecxz
daa
dec
add
popf
dec
and
addr16
dec
lods
dec
sub
js
cmpsb
and
cmp
test
pop
daa
nop
in
mov
sub
xchg
xor
fs
xchg
add
loopne
adc
lea
add
movsb
and
xchg
sbb
ss
or
add
lcall
rclb
jp
outsb
ret
cmp
add
dec
sbb
cmp
dec
iret
nop
test
cltd
jle
shrl
aam
xlat
dec
jnp
xor
sub
es
xchg
stc
jl
sbb
jp
cmpsb
out
push
jp
lods
jne
rcll
cmp
inc
sub
in
add
jbe
dec
into
cmp
addr16
inc
ljmp
imul
dec
pop
sub
insl
sub
xchg
hlt
dec
insb
pop
imul
in
push
or
xchg
xor
fcoml
add
mov
xor
xor
je
shrb
cmpsl
inc
imul
lods
jo
les
das
jb
inc
mov
inc
sub
sbb
add
cltd
and
cmp
and
dec
test
test
ret
pushw
mov
es
cmp
sbb
cmp
addr16
xchg
xor
pop
test
ret
xchg
push
dec
addr16
mov
push
adc
shll
inc
push
ljmp
inc
test
imul
lock
push
cmp
call
xor
adc
fs
in
insb
das
push
push
shll
sub
mov
push
push
mov
cmp
jl
loope
xor
iret
mov
adc
shll
mov
push
fldcw
add
inc
mov
add
scas
or
leave
fbstp
mov
xchg
inc
hlt
jo
sbb
cwtl
or
mov
aaa
lret
pop
stos
push
xor
push
rcrl
add
xor
loopne
sahf
and
lods
ja
xchg
imul
xor
sub
pop
or
xchg
scas
pop
das
pop
lods
and
inc
lret
or
or
jle
jo
xor
add
xchg
cld
cwtl
cmp
adc
aas
scas
pinsrw
cmp
adc
xchg
dec
sub
sbb
pop
mov
stos
jns
dec
and
subl
push
fsubl
jne
adc
cmpsl
and
and
ja
and
std
dec
dec
loopne
lahf
sbb
add
stos
sub
add
into
cltd
cmp
mov
mov
xchg
lods
and
mov
or
jnp
loopne
mov
in
add
xchg
push
cmp
pop
in
and
dec
pushf
jmp
dec
sub
jmp
xchg
xorb
inc
ret
cmp
mov
cmp
in
testl
cltd
xorb
mov
in
pop
dec
xchg
push
test
sbb
xchg
add
cmp
ret
cmp
out
divb
lret
jecxz
xlat
push
test
out
xor
xor
js
sub
fildll
add
sub
fcomi
jo
dec
cld
mov
out
outsl
xchg
pop
inc
dec
sbb
mov
sub
sahf
popa
repnz
bound
xor
shll
adcb
add
popa
push
xor
aam
pop
subb
fistl
into
inc
fxtract
sub
popl
push
cs
or
sub
or
test
ja
adc
or
or
lret
dec
sbb
dec
lret
clc
mov
xchg
sub
push
and
scas
jp
add
mov
andl
sarl
jl
pop
adc
cwtl
add
sub
or
sub
mov
shlb
inc
fldt
sbb
cmp
test
push
cmc
jge
push
lret
jle
xor
jnp
lock
or
icebp
dec
lcall
icebp
fisubs
dec
sub
cmp
into
xlat
jbe
inc
adc
mov
pop
jns
push
mov
stos
jo
mov
mov
cs
adc
stos
and
mov
stos
xchg
jl
outsl
sbb
out
and
mov
iret
imul
pushf
sbb
in
cmp
ss
push
jl
add
test
jbe
push
jg
daa
add
xchg
cmp
push
add
scas
push
mov
fistl
mov
cmp
adc
pop
popa
popa
sbb
fdivrs
xor
inc
mov
xlat
imul
jge
and
fstpl
xor
push
scas
or
clc
cmp
xor
pusha
adc
add
jb
adc
lret
push
xor
nop
movsb
test
fs
shl
addr16
push
aas
cltd
fistpl
cltd
xor
inc
push
cmp
sbb
aam
jnp
ret
lods
sub
mov
aaa
pusha
and
mov
shll
jl
jnp
push
std
test
inc
inc
inc
inc
xor
jno
xor
push
iret
push
mov
les
andb
loop
and
cmp
or
aaa
ss
pop
or
jno
scas
test
test
add
and
stc
outsb
pop
jbe
daa
jb
and
stos
push
dec
ds
lds
dec
aam
push
add
xor
xor
lret
jmp
test
inc
lock
cltd
lcall
fcomps
push
pop
stos
or
in
orl
add
mov
out
xor
push
cmp
mov
adc
arpl
xchg
loop
or
mov
mov
sbb
inc
and
and
in
sbb
aad
ds
push
and
loope
push
and
jle
int3
pusha
rcl
test
jnp
repz
orb
xchg
adc
pop
mov
xor
cmp
xchg
cmp
push
mov
arpl
add
fidivrl
mov
xchg
or
fldenv
cmp
adcl
pop
dec
roll
loop
mov
sbb
das
add
pop
xchg
xchg
push
int3
or
aad
movsb
fwait
and
dec
xor
mov
fwait
sahf
mov
dec
mov
cmp
adc
add
mov
add
ror
dec
and
adc
and
aam
lcall
jle
sbb
sbbl
pop
or
xchg
addr16
daa
xor
sbb
adc
je
mov
xchg
lock
call
pop
les
pop
gs
cmp
push
mov
add
insb
adc
add
dec
or
add
pop
xor
pop
dec
les
jbe
pop
inc
adc
mov
call
call
into
addb
push
jno
adc
xchg
enter
addr16
hlt
data16
jnp
push
mov
inc
icebp
mov
jl
lahf
les
andl
ss
aam
lea
rcll
mov
and
fs
mov
and
rcrb
mov
jbe
push
xchg
sub
cmp
daa
pop
mov
lret
dec
xchg
fs
pop
rorb
js
cmp
movsb
outsb
loopne
add
iret
stc
xchg
lds
mov
mov
lds
divl
mov
cmp
lret
out
adc
inc
and
cmp
push
dec
xlat
adcl
dec
scas
sub
shrb
int3
adc
and
fdiv
fsubs
ret
and
adc
fsubrs
and
es
scas
out
jl
xlat
mov
sub
rol
mov
mov
cs
sti
pop
mov
mov
les
dec
in
nop
sub
dec
enter
roll
mov
mov
xchg
pop
or
loope
popa
jnp
xor
push
int3
jns
roll
fldenv
inc
jnp
jnp
mov
xchg
add
mov
sarb
push
mov
aad
mov
mov
mov
js
mov
int
hlt
inc
andl
add
xor
inc
inc
mov
daa
push
add
jecxz
jp
fisttps
test
orl
lds
add
inc
popa
or
das
lcall
insb
mov
imul
js
inc
fistl
jle
sbb
imul
xchg
ss
addb
loopne
test
insl
lret
add
add
test
mov
popa
adc
fistpll
lods
xor
push
push
or
add
or
sub
imul
test
pop
add
xchg
call
aam
push
xor
test
rcl
incb
pop
push
jg
fistpl
xor
xchg
push
add
lcall
jge
mov
int
fldt
xor
sbb
pop
xorb
cmpsb
cltd
add
adc
push
xchg
or
iret
adc
adc
mov
mov
sub
inc
and
add
mov
or
or
and
xchg
adc
ja
sbbb
add
dec
in
or
and
loope
imul
int
aam
jle
xchg
push
arpl
add
fildl
mov
sbb
add
decb
rcr
fadds
mov
xor
sbbl
scas
mov
div
lds
xlat
mov
subb
out
mov
adcl
jle
mov
adc
mov
call
pop
je
push
enter
add
mov
mov
adc
mov
xchg
add
and
call
xchg
mov
cmpb
addb
pop
push
fisubrl
push
fwait
inc
xchg
cli
and
lds
mulb
fstl
popa
sbb
std
push
dec
pop
insb
sahf
xorb
dec
and
mov
pop
push
adc
or
lock
popa
mov
mov
adc
and
push
dec
test
mov
mov
jo
cwtl
loope
and
popa
mov
loope
and
add
ficoms
repnz
popf
sub
fs
and
lods
or
jmp
add
loopne
fsubl
fnsave
add
sbb
inc
out
scas
pop
into
pop
add
mov
mov
jo
xchg
mov
mov
ret
xchg
in
and
adc
mov
xor
adc
xchg
mov
ss
aam
outsb
out
add
xor
es
pop
fisubs
call
jno
out
test
aas
cmp
sbb
xchg
or
scas
pusha
and
bound
rcr
test
in
test
iret
push
aas
scas
add
push
mov
mov
aad
fs
mov
out
and
and
into
mov
push
movsb
cli
dec
pop
add
adc
jg
in
mov
inc
mov
aad
mov
sub
test
popf
shlb
movsb
cwtl
push
inc
xorl
jb
pop
mov
cmp
jb
xchg
out
mov
mov
popf
sub
sbb
cwtl
cwtl
push
inc
jo
out
loope
popw
push
add
outsb
push
das
dec
sub
mov
mov
sbb
and
mov
add
mov
decb
lea
cwtl
cli
lds
xchg
repnz
add
sbb
out
cmp
les
nop
mov
and
sti
and
sub
xchg
andl
push
mov
dec
push
cwtl
cwtl
push
add
mov
jno
fildll
jnp
pop
loopne
add
xchg
fwait
inc
cmp
dec
lds
or
outsl
sbb
xchg
test
stos
xor
stos
mov
notl
lcall
enter
sbb
add
xchg
repz
hlt
mov
test
int
adc
sub
xor
push
mov
fdivrs
mov
jge
sbbl
cmp
or
or
sbb
and
mov
or
pop
and
sbb
rcrb
add
es
loope
ret
mov
jno
lock
pop
jae
into
jae
loop
mov
push
cltd
pop
scas
cmpsl
mov
jo
scas
push
aad
dec
int3
push
movsl
inc
mov
sbb
enter
adc
ljmp
loop
into
loopne
int3
and
shll
enter
lret
xor
push
add
icebp
mov
insb
and
add
fsubl
or
push
aam
inc
sub
or
sarl
inc
into
loop
dec
xchg
push
jmp
int
pop
or
imul
in
filds
mov
and
adc
mov
mov
test
lds
into
in
rorl
mov
dec
fiaddl
ss
shr
into
jecxz
and
and
xor
xchg
sub
pop
mov
and
xchg
mov
mov
xchg
adc
sysenter
jge
fimuls
or
stc
push
and
push
xor
cmp
aas
sahf
add
mov
xchg
inc
insb
dec
pop
test
pop
outsb
xchg
xor
mov
test
lods
sub
xor
addl
mov
addl
aad
jg
add
nop
addb
aam
xor
xor
in
add
pop
cs
subb
sbb
and
push
lods
ljmp
xor
aad
add
les
xchg
push
xor
dec
into
xchg
rclb
stos
mov
push
sub
push
pop
adcl
sbbb
push
mov
dec
outsl
and
jecxz
push
ret
and
xchg
mov
sub
xchg
mov
sub
call
das
movsl
adc
push
fdiv
lods
pop
rcrb
mov
lock
pushf
add
pop
xchg
add
shll
xchg
mov
sbb
js
push
outsb
lcall
and
xchg
push
or
mov
mov
outsb
pop
xor
sub
mov
les
movsb
and
test
lcall
leave
ja
sbb
lock
xchg
jge
cli
pop
aad
mov
popa
sub
iret
shrb
popf
pop
pop
aam
mov
dec
mov
in
dec
daa
and
pusha
pop
and
loope
scas
cwtl
pushf
iret
fistps
or
sbbb
or
repnz
jbe
push
adc
fdivrl
popf
xor
fisubs
jb
outsl
leave
push
cmp
test
adc
shr
imul
mov
pop
shrb
sbb
mov
ds
icebp
mov
jne
mov
mov
lods
dec
adc
cmpb
movsb
push
adc
movsb
mov
add
int
test
xor
add
xchg
mov
imul
dec
jp
jp
ret
lret
and
test
pop
adc
out
push
or
psubusb
rclb
inc
mov
fcoml
adc
cmpsb
inc
mov
sbb
es
mov
rcl
cmp
pop
mov
adc
push
daa
sarl
mov
fsubrp
mov
push
das
pusha
sbb
sub
dec
sbb
add
jmp
ljmp
imull
lods
ljmp
mov
cs
addl
xorb
pop
mov
test
add
or
dec
pop
mov
inc
call
add
lret
jmp
adc
adc
push
sbb
sub
lret
sub
test
pop
add
lds
popf
arpl
popf
sbb
sahf
xor
or
inc
dec
adc
leave
lcall
mov
clc
lods
lret
add
pusha
or
or
sub
push
outsl
cmc
cli
bound
sti
pop
mov
adc
and
subb
mov
push
xchg
subl
subl
outsb
repz
sbb
sbb
or
shrl
cmpsl
push
push
dec
pop
cmp
dec
test
xchg
add
and
mov
mov
and
jp
adc
sub
or
mov
ret
mov
pop
je
add
lret
seta
add
push
mov
test
inc
mov
or
sub
imul
je
mov
mov
stos
and
dec
adc
pop
imul
ret
lret
push
xor
daa
sub
pop
mov
mov
jne
mov
andb
and
jb
es
inc
xor
emms
cs
push
dec
insl
push
xchg
fcmovbe
fs
gs
xchg
cmp
shll
cmpsl
mov
pop
add
add
cmc
nop
cmp
scas
push
jno
or
loope
sub
dec
scas
inc
push
push
outsl
and
and
cmp
xor
jne
and
mov
jne
in
xor
mov
ja
loopne
or
test
movsl
mov
inc
xor
xchg
push
xchg
sub
push
lret
test
std
aaa
movsl
idivl
or
ss
in
push
sub
jp
dec
adc
sbb
mov
adc
cmp
dec
iret
and
inc
push
cwtl
lock
adc
aam
mov
lds
push
mov
inc
daa
fstpt
fisttpl
fcmovu
les
add
jle
cmpsl
test
aam
cmp
push
fildl
fisttpll
add
into
push
and
or
test
push
jmp
adc
roll
out
dec
lcall
es
or
and
sbb
mov
mov
shlb
popf
sub
mov
push
loop
in
cld
cltd
mov
sbb
iret
insb
nop
adc
cltd
ds
call
mov
fisttpl
dec
add
pusha
xor
adc
xchg
jbe
mov
jp
xchg
add
and
in
iret
push
dec
out
xor
xor
pusha
and
cmpsl
add
xchg
inc
es
pop
mov
insl
and
push
in
sbb
inc
inc
mov
dec
pop
cmp
add
xchg
mov
mov
and
cmp
jmp
inc
mov
xchg
or
adc
xchg
stc
fxsave
daa
aas
std
nop
frstor
mov
mov
out
push
je
xlat
fsubrl
mov
add
ret
mov
xchg
pop
ret
pop
ja
leave
jmp
test
shrb
test
mov
rolb
fcoms
and
and
adcb
inc
movsb
pop
dec
mov
cli
push
jl
daa
push
push
cmp
shlb
adc
cmp
insl
inc
mov
fsubl
sub
push
lds
jmp
into
mov
mov
xlat
call
or
add
mov
inc
mov
pusha
mov
inc
scas
push
or
rcrb
shlb
jnp
sti
dec
cwtl
xchg
mov
add
adc
rolb
push
popf
and
out
roll
add
push
dec
ljmp
inc
subb
push
mov
je
int3
das
jmp
mov
add
xor
jp
insl
das
mov
xchg
cmp
sub
sub
sarb
adc
xchg
dec
daa
or
jge
sub
mov
mov
cwtl
xchg
xor
mov
into
pop
push
mov
cmpsb
setne
pop
insl
or
cmpsb
int3
or
pusha
dec
mov
js
inc
push
repz
std
sbb
imul
xchg
enter
pop
int3
mov
enter
and
and
loope
je
mov
gs
lods
and
mov
movsl
les
mov
adc
and
cmp
shll
add
add
adc
addb
fidivs
bnd
insl
add
pop
and
sub
or
adc
ljmp
jo
pop
mov
xor
nopl
cmp
and
push
mov
out
les
lcall
add
test
or
cmpsl
and
adcb
loope
negl
jo
enter
stos
jle
sbb
xchg
push
std
mov
test
stos
jle
nop
xor
xor
xchg
push
fnstcw
push
inc
or
lods
imul
pop
jnp
int
pop
jp
push
js
shr
imul
push
lock
sub
sbb
lcall
sbb
lcall
push
jo
mov
ret
mov
xor
adcb
decb
adc
sub
in
clc
into
inc
and
dec
testb
or
xor
lock
mov
sbb
inc
pusha
les
jp
mov
xlat
add
scas
test
fwait
and
movsl
and
mov
movsb
cmp
imul
rolb
sbbb
inc
out
test
imul
pop
mov
cld
idivb
add
call
adc
pop
loopw
test
ret
jp
popa
add
cmp
movsb
gs
mov
movups
adc
cwtl
sbb
jo
or
xchg
push
je
rorl
add
or
loope
pop
push
fisubl
sub
adc
push
cmp
imul
push
push
xchg
shll
mov
jmp
jge
add
lea
adc
stos
gs
lods
mov
pop
add
insl
push
add
sub
imul
ja
test
imul
adc
popf
mov
push
shlb
mov
fstpt
mov
dec
push
adc
lcall
and
jmp
cwtl
mov
add
fsubs
adcl
enter
add
add
pushf
outsl
fildll
enter
mov
xor
test
mov
push
mov
movsb
inc
add
hlt
adc
and
xchg
xor
xchg
hlt
and
mov
imul
jno
jb
and
data16
rorb
das
jg
adc
cld
js
stos
dec
add
inc
sahf
or
xor
pop
unpckhps
js
xor
shrl
mov
sarb
xchg
sti
dec
add
ficoms
loop
dec
stos
sbb
push
dec
add
subl
in
xchg
addr16
push
mov
sbb
pusha
inc
sbb
or
jg
push
or
adc
add
inc
adc
pop
insb
rol
mov
sbb
dec
mov
scas
stos
adc
mov
ret
pop
adc
or
das
mov
leave
jl
cmp
push
mov
pop
xchg
seta
arpl
push
or
cmpsl
lret
out
mov
adc
adc
add
test
cs
cmp
ret
mov
insb
adc
pop
pop
sbb
sub
xchg
inc
and
or
pop
vmaxsd
cmp
mov
add
adc
adc
jmp
lds
dec
jp
cmp
out
add
adc
in
adc
pop
rorb
push
and
jmp
ja
adcl
cmpsl
mov
out
es
das
xchg
sub
jl
pop
and
fdiv
xor
shll
inc
rol
popf
add
or
out
sbb
sbb
add
mov
sub
push
test
in
roll
aaa
stos
shlb
iret
adc
lock
add
jp
iret
rolb
mov
lods
inc
call
jle
lret
inc
pop
inc
mov
mov
or
push
scas
or
mov
lock
clc
lcall
enter
loop
jp
jae
subb
mov
loopne
jne
push
sbb
aaa
sbb
and
push
je
dec
sub
and
cmp
or
cmp
stos
or
cs
popf
jo
jo
mov
sbb
mov
dec
cwtl
sbb
imul
int3
roll
xchg
inc
negb
loope
push
add
lods
mov
fs
ja
inc
push
loopne
in
mov
mov
aaa
daa
xchg
insl
jp
mov
fwait
std
sub
mov
filds
test
roll
adc
sub
xor
sub
into
insl
pop
adc
mov
pop
jnp
add
and
sub
shll
or
sbb
xor
sbb
inc
sub
popf
rolb
mov
test
fistpll
jle
jl
popa
jecxz
jnp
out
pusha
rcr
xor
dec
icebp
push
scas
sub
and
mov
add
scas
icebp
add
pop
lret
push
in
mov
add
es
popf
pop
leave
pop
inc
fists
adc
data16
outsl
push
pop
xor
addr16
cmp
push
adc
cmpsb
fmul
and
sub
nop
mov
cmp
subb
adc
loopne
pusha
out
add
jb
cmp
sti
mov
mov
dec
rorl
sbb
loop
movsl
fdivs
int3
inc
lahf
mov
pop
or
mov
clc
dec
add
mov
and
addb
and
sbb
pop
les
mov
or
cmp
shll
add
or
dec
imul
clc
fsubrs
mov
mov
add
and
adc
stos
adc
inc
or
arpl
and
inc
movsl
gs
call
dec
loopne
hlt
loop
push
xchg
lods
xlat
xor
lods
jae
xor
add
orb
mov
jo
push
add
out
jmp
or
sbb
add
jge
popf
push
xchg
inc
in
rolb
test
pop
in
xor
mov
sbb
lahf
int3
and
fs
mov
mov
cmpb
mov
xor
pop
scas
and
add
or
stos
mov
lds
dec
mov
popf
adc
xor
insl
pop
jbe
adc
sub
imul
mov
popa
inc
cmp
inc
jmp
out
inc
ret
pushf
lock
push
mov
and
mov
sbb
push
add
add
sub
jno
adc
test
ss
sub
and
push
lret
add
add
push
cltd
les
mov
leave
mov
pop
mov
movl
and
arpl
in
xor
je
shlb
dec
lret
jmp
xor
pop
pop
aam
or
mov
xor
pop
and
add
add
adc
cmpb
cltd
vcmppd
or
xor
fldenv
fdivrl
data16
jl
jnp
repnz
out
ret
ljmp
in
mov
pop
mov
lock
mov
adc
mov
test
les
adc
add
insl
vpmadcswd
push
in
xor
xchg
adc
push
lods
fadd
mov
aad
jo
roll
xor
and
iret
clc
jo
xchg
in
xor
shrl
aam
sub
mov
add
aam
mov
clc
test
insb
sub
sbb
test
cmp
dec
je
or
test
sub
or
out
mov
and
push
xchg
movsl
scas
sbb
cmp
ror
aaa
imul
neg
cmp
fimull
iret
cmc
xor
insb
into
mov
cmpsl
dec
lock
push
std
ret
sub
aaa
shrb
test
aam
push
push
and
or
sbb
cmp
cmp
rcrl
add
jecxz
popf
pop
aam
mov
push
scas
ror
nop
out
or
cmp
mov
scas
addb
aad
test
dec
aas
mov
ret
iret
or
xchg
pop
scas
repnz
gs
stos
or
orb
inc
push
into
add
xor
xor
add
jp
push
enter
push
push
addr16
or
insl
cmp
test
js
add
dec
cwtl
lahf
roll
add
mov
pop
mov
and
jne
inc
jmp
mov
fdivrp
arpl
add
or
je
mov
in
and
push
ja
lea
pop
outsl
adc
mov
sub
push
mov
pop
iret
jle
cmovg
hlt
popa
add
sbb
cmp
pop
adc
xorb
out
push
iret
inc
xchg
jle
add
inc
cmpsb
xchg
arpl
andb
adc
mov
mov
inc
mov
call
arpl
and
add
xchg
dec
push
and
call
cmp
idivb
ss
mov
pushf
push
dec
or
inc
mov
cmc
outsb
mov
addl
pop
pop
sahf
push
movsb
sub
loope
push
jmp
inc
out
and
out
push
mov
testb
xchg
jmp
sub
dec
loopne
cmp
sub
mov
lea
ret
xor
and
mov
adc
jle
stc
jbe
pop
mov
jnp
cmp
cmp
cwtl
movsl
inc
mov
mov
push
sarb
xchg
test
jl
iret
gs
orb
sub
sbb
dec
bswap
sti
add
into
mov
icebp
out
lcall
cmp
ja,pt
xlat
lods
cwtl
cmc
xchg
add
test
or
popa
inc
cmp
in
dec
mov
push
jl
fadds
push
inc
inc
add
jno
insl
sahf
xor
lretw
mov
push
mov
fs
inc
iret
jae
addr16
and
aad
pop
imulb
js
ret
or
mov
hlt
imul
jg
test
addr16
push
or
ss
jecxz
addb
mov
icebp
insb
adc
hlt
test
sub
or
xchg
and
mov
push
ss
testl
lcall
shlb
mov
mov
sbb
mov
mov
mov
cmp
and
jo
mov
lea
cmp
sahf
aad
lahf
out
pop
imul
scas
lcall
loopne
daa
test
pusha
pop
add
or
lret
or
xlat
fstps
mov
daa
mov
inc
test
or
mov
sbbl
add
push
dec
and
daa
mov
push
das
mov
mov
add
addr16
jo
inc
mov
test
jae
clc
cmpsl
push
mov
ret
jle
adc
mov
pop
pop
sbb
idivb
or
jnp
fcmovnb
pop
mov
mov
aaa
mov
push
in
sub
insl
das
inc
das
neg
xor
add
push
sbb
ja
dec
mul
movsb
call
stos
cmpb
sub
xchg
aaa
fwait
mov
andb
mov
push
mov
push
lock
cs
gs
adc
dec
fcoml
imull
test
xchg
and
dec
test
and
test
into
lcall
cmpsb
lahf
fldenv
xor
xor
pushf
out
fldcw
cmpsb
mov
imull
lcall
xor
loop
xor
adc
mov
or
or
jg
ret
shrb
cmp
data16
fmul
add
pop
clc
jbe
inc
xchg
xchg
xor
js
cmp
mov
fldl
fisttpl
out
in
loope
int
dec
or
push
addr16
data16
sbb
cmp
push
mov
bound
ret
sarb
lea
pop
stos
push
mov
orb
jbe
add
fnstcw
jae
mov
mov
fadds
mov
es
stos
fcomps
dec
xor
adc
lock
push
or
pusha
inc
in
lock
cmpsb
push
pop
nop
lods
ja
cmc
js
xor
int3
sbb
pop
cmp
push
mov
das
inc
inc
icebp
andb
inc
add
scas
add
and
sbb
std
lahf
or
rolb
ljmp
mov
and
dec
mov
mov
xchg
or
sbb
mov
mov
lds
inc
dec
push
adc
xchg
adc
push
rcll
fildl
add
fcmovb
dec
in
jp
fldenv
cld
cmp
fimull
mov
xor
adc
aad
adc
call
lock
mov
lahf
ja
add
and
ret
adc
cmp
pop
pop
dec
push
fs
arpl
pop
cmp
sti
ss
inc
addr16
cwtl
xchg
jo
adc
insb
xlat
cmpsb
xorb
das
sub
mov
pop
or
mov
jmp
gs
xchg
lods
lcall
ja
push
sbb
leave
fwait
addb
sbb
push
mov
fcoms
push
sbb
cmp
cmp
idivb
add
pusha
xchg
orl
inc
ror
sbb
add
jnp
inc
xchg
popf
lret
dec
push
pxor
mov
lahf
mov
mull
dec
mov
ret
or
add
mov
aam
cmp
cmp
xor
mov
lods
adc
movsl
lods
mov
mov
arpl
fiaddl
ret
test
mov
loopne
xor
les
pop
xor
popa
fimull
sub
shrb
push
xor
cmp
jg
jbe
call
or
add
jg
cmc
cli
adc
je
popf
aam
aad
lcall
lods
xlat
mov
stos
inc
test
scas
out
enter
sbb
fadds
dec
ljmp
or
mov
fbld
dec
add
mov
hlt
sbb
fildll
push
xchg
lea
es
or
in
dec
xor
scas
popf
mov
adc
pop
test
jl
pop
adc
jp
outsl
and
ja
and
inc
xchg
xchg
cld
add
add
or
stc
push
xchg
adc
jmp
mov
inc
lahf
sub
rclb
push
es
sbb
scas
ret
mov
daa
push
push
inc
lods
xor
scas
xor
push
xchg
stos
test
out
xor
adc
roll
push
push
lods
xchg
jp
arpl
cmp
cmp
and
xchg
xlat
and
rclb
xor
aaa
sub
fistl
enter
sub
dec
jle
lret
sbb
je
and
cwtl
push
mov
dec
add
mov
adc
es
roll
fistl
loope
movsb
pop
jl
xor
push
shr
sub
nop
inc
loope
or
mov
cmp
test
adc
and
cmp
adc
cmp
push
int3
jle
in
pop
rolb
or
xchg
cmpsb
ja
xchg
addr16
andb
add
xchg
pop
adc
xchg
sub
and
roll
addr16
sahf
mov
fucomip
fs
push
add
pop
sub
fimull
and
and
aam
repz
lods
sub
dec
inc
dec
fmull
push
pop
push
xor
pop
cltd
add
mov
pusha
and
jmp
xor
loop
popa
movsb
xchg
repz
test
push
aad
mov
jo
in
test
js
dec
lock
pop
inc
lock
test
jge
push
adc
jno
sub
lods
loope
mov
jo
sub
jg
lods
in
jl
lahf
mov
adc
lret
aas
jmp
mov
repnz
and
mov
sub
xchg
or
add
jecxz
or
insb
xchg
and
xor
and
pushf
dec
jbe
iret
pop
push
out
and
mov
je
outsl
cmp
mov
jno
or
pop
push
pop
adc
xor
or
out
cmpsb
daa
inc
bound
cmp
push
int3
jne
es
or
insl
add
jle
adc
ss
movsb
jecxz
add
addr16
sbb
insb
cmc
add
xlat
jge
cs
cmp
sbbw
sub
addl
mov
out
lds
sub
popf
stos
sub
push
in
mov
mov
xchg
pop
mov
cld
mov
mov
pop
je
sbb
leave
mov
rcrb
push
imul
imul
sub
or
pop
fistl
add
adc
mov
fsubs
add
pop
mov
addr16
cmpsb
adc
lods
mov
xorl
cmpsl
pop
roll
xor
and
adc
cs
ja
lcall
sbb
or
adc
and
push
lcall
pushf
arpl
adc
and
dec
or
mov
and
rorl
aam
xor
add
bound
aam
inc
inc
mov
jle
pop
dec
stos
lcall
lea
les
mov
das
test
out
mov
sti
lcall
sub
pop
and
push
xor
rcr
sti
movsb
mov
mov
sbb
pop
in
mov
jo
mov
sti
and
mov
iret
cwtl
inc
xchg
mov
rcl
push
mov
push
aaa
movsb
mov
and
shlb
sahf
mov
and
push
les
xor
mov
rorl
adc
imul
mov
adc
data16
add
scas
daa
sbb
cwtl
ss
xor
ficompl
in
mov
sub
bound
daa
jle
adcl
mov
add
adc
es
adc
sbb
repnz
xor
inc
add
shr
adc
aaa
dec
push
mov
and
adc
pushf
sbb
aam
inc
add
mov
ret
sbb
rcr
pop
xor
dec
enter
xlat
lret
pop
call
and
notb
dec
xor
pop
pop
cmp
sahf
lods
loope
adc
sbb
add
sub
push
xchg
lret
mov
adcb
cmp
aaa
pop
int
loopne
jle
repz
and
add
ss
icebp
pusha
sbb
xchg
scas
cmp
stos
sub
adc
sub
roll
sbb
mov
dec
dec
cli
sbb
fimuls
iret
cmp
cmpsl
decb
out
and
cmp
xchg
mov
lea
imul
js
push
aam
or
popf
xor
fwait
adc
push
cmp
inc
cmp
jo
jecxz
pop
xor
lcall
in
xchg
rclb
push
int3
mov
mov
jp
cmp
adc
pop
stos
mov
dec
je
cltd
pop
adc
out
jnp
imul
sub
cwtl
add
mov
lahf
mov
cmpl
rcl
sub
xchg
mov
ret
cs
jp
rcrb
rorb
stos
orb
stos
xor
inc
sub
adc
test
or
pop
mov
bound
data16
or
out
mov
fsubs
xor
mov
int3
ret
fdivs
mov
sub
rcl
int
adc
jne
mov
fcomps
mov
xor
fbld
mov
xor
andl
dec
cld
addr16
mov
cltd
icebp
arpl
add
mov
sub
leave
jmp
sbb
dec
pop
mov
or
cli
int3
sbb
pop
or
repnz
dec
adc
add
out
ret
nop
and
xorl
in
int3
lods
in
jbe
mov
jo
pop
and
fstps
mov
and
out
and
sar
cmp
inc
inc
shrl
lret
push
pusha
push
lds
jnp
add
xchg
push
sub
pop
gs
call
sarl
arpl
mov
and
cmp
mov
mov
loope
fiaddl
pop
jle
into
jmp
sub
xchg
pop
mov
js
jnp
xor
sbb
adcl
add
add
iret
stos
test
loop
inc
sub
jb
push
or
loope
cmp
stos
jmp
push
mov
sbb
sbb
and
jb
sub
popf
xor
test
xchg
nop
adc
sbbb
addr16
aas
add
iret
scas
mov
fldenv
dec
jl
lock
mov
adc
stos
xor
add
inc
insb
orl
inc
adc
sahf
or
pop
sub
leave
mov
mov
cmp
aas
ret
xor
mov
inc
into
int3
scas
jno
xchg
sub
repz
mov
aaa
or
iret
adc
and
push
xor
iret
dec
les
push
inc
repz
add
imul
mov
pop
fwait
ds
dec
mov
cmp
out
push
push
jmp
adc
aaa
push
pop
clc
and
dec
adc
cmp
jo
icebp
lcall
adc
pop
out
lods
insl
inc
loopne
mov
inc
orb
dec
shrl
cmpsl
mov
scas
shlb
sbbl
sbb
or
pop
sub
stos
imul
mov
push
jo
and
ss
push
dec
add
jp
cmp
into
in
lret
push
sbb
test
incl
mov
add
clc
or
adc
in
xor
clc
pusha
add
movsb
shll
jo
stos
adc
fdiv
call
cmp
outsl
xchg
jnp
call
adc
inc
outsb
sbb
and
aad
jl
xlat
push
dec
cmp
adc
adc
jecxz
addr16
sub
push
and
lret
mov
mov
xlat
jmp
jns
int3
lret
and
lcall
lds
pop
xor
or
subl
inc
icebp
pusha
addl
adc
sub
sbb
scas
cmp
shll
adc
mov
aas
ja
push
add
test
roll
push
xchg
les
jnp
cs
xchg
jp
add
jle
xchg
adc
ret
push
insb
mov
jmp
sbb
dec
xor
mov
and
add
cwtl
shlb
add
inc
push
xchg
cmpb
jbe
bound
adcb
popa
icebp
or
lahf
addl
out
mov
jo
xor
and
sub
lret
jp
adc
rolb
sbb
dec
aad
out
sub
rolb
mov
add
cld
xchg
add
adc
cmp
dec
add
and
sbb
fmuls
xchg
and
lcall
shlb
lods
fstpl
pop
mov
and
sbbb
inc
push
pop
imul
push
imul
push
jl
sub
stc
je
daa
mov
mov
xor
ret
xor
sub
rorl
push
sbb
and
mov
ja
insl
lods
sbbb
icebp
add
out
jecxz
adc
xor
cmp
sbb
cmpl
jmp
movsb
xlat
sbb
and
cs
out
sub
pop
test
inc
popa
inc
jl
push
push
xchg
or
mov
jl
xor
cmp
push
push
inc
aaa
push
jb
push
mov
inc
add
adc
cmp
cmpsl
and
mov
or
in
roll
mov
add
sub
cmpb
outsb
mov
addl
data16
xchg
jbe
sbb
add
sti
inc
daa
dec
xorl
nop
push
xor
dec
sub
pop
loop
mov
mov
scas
cld
add
push
stos
ds
jl
mov
hlt
in
push
inc
jnp
jmp
testb
sti
or
inc
push
xor
lret
test
fs
ret
ret
subb
push
add
mov
add
pop
aaa
mov
sub
dec
sub
xchg
push
nop
mov
lcall
sub
jns
pop
test
push
aaa
and
dec
jp
ret
inc
xchg
inc
mov
subb
or
jae
call
repnz
sub
mov
inc
inc
mov
in
jo,pt
out
shll
cmpsl
stos
xchg
addr16
loopne
dec
dec
and
test
push
in
loop
xchg
incl
or
add
rolb
mov
push
lds
call
xor
jno
sub
jo
sub
adc
xchg
mov
test
sti
fisubs
icebp
sbbb
fldl
and
adc
and
push
aad
or
and
loopne
push
or
mov
dec
pop
fnstsw
aam
imul
int3
sbb
sub
xor
fsts
pop
push
mov
xchg
pop
mov
sti
je
push
rcr
adc
adc
or
ret
out
xor
scas
bound
add
xchg
and
jmp
mov
add
push
daa
push
jecxz
ror
ja
jb
clts
mov
adc
jl
stos
rdtsc
and
push
mov
mov
clc
mov
mov
dec
push
in
out
push
shrl
mov
lods
mov
in
int3
ja
stos
pusha
jbe
cmp
ss
push
jnp
and
movsb
inc
addr16
push
es
fcmovnbe
adc
mov
mov
sub
cmp
sub
test
mov
out
repz
and
rcll
int
cmpsb
mov
insl
mov
and
lcall
push
enter
or
test
and
sub
leave
stos
pop
sub
mov
cmp
aam
add
jo
es
and
adc
mov
cmp
mov
mov
cltd
add
pop
or
jle
fsubl
fiadds
mov
xorb
xlat
cmp
add
inc
or
or
daa
push
jne
mov
movsb
pop
lds
push
hlt
sbb
sarl
push
push
or
dec
test
outsb
rcrl
cmp
fistpl
push
outsl
and
sub
lcall
adc
push
das
inc
sbb
sbb
sbb
test
mov
jl
test
scas
fldt
aam
push
xor
cmp
push
rclb
movb
jno
clc
test
out
jb
mov
out
out
je
cmp
cmp
mov
add
clc
push
sub
add
mov
push
pushf
addr16
in
fsubrs
add
lods
mov
lods
pusha
lret
lcall
and
int
scas
fdivrl
lods
cmp
hlt
sti
mov
push
sub
push
jne
jno
mov
mov
lret
adc
sub
and
push
adc
mov
lock
push
jae
outsb
sbb
mov
mov
mov
shrb
ds
aas
push
sub
ds
or
out
add
or
sbb
lods
xor
push
test
das
cs
sbb
sub
mov
test
jb
ja
call
cmpb
push
das
loope
test
pop
movsb
es
es
adc
dec
push
movsb
ss
add
loope
fmull
jno
inc
data16
mov
push
lahf
mov
xchg
mov
cltd
adc
flds
js
sbb
lret
insl
sti
clc
aad
iret
push
dec
adc
cmp
call
out
jmp
push
fs
rcr
imul
roll
push
pusha
jno
cmp
xor
lret
mov
push
and
inc
mov
sbb
lods
jge
push
xchg
lds
jb
cmp
popa
and
adc
sbb
iret
and
imul
frstor
sub
or
or
jbe
mov
pop
and
and
into
insl
push
push
add
imull
fldcw
push
cmp
aam
mov
or
popf
into
cltd
lea
subb
push
push
int
pop
fsubl
inc
ds
pop
push
pop
push
or
insb
frstor
iret
jp
sbb
pop
and
cvttps2pi
xchg
mov
dec
ljmp
xor
std
adc
mov
shl
iret
cmp
pop
xlat
lods
jbe
pop
das
push
add
dec
mov
push
sub
insl
das
sub
dec
int
adc
filds
xchg
fsubrl
mov
bound
jp
adc
pop
add
sub
test
out
pop
cmp
push
pop
add
aam
or
pop
adc
pusha
addr16
and
jb
cmp
and
rcll
mov
inc
fcoms
inc
xor
out
lret
add
or
cwtl
sti
dec
mov
push
fimull
iret
xchg
fiadds
xor
sbb
mov
sbb
jns
xchg
jne
das
push
dec
je
add
add
lods
into
iret
and
out
imulb
sub
cmp
sub
mov
popa
xorb
pop
call
outsb
imulb
sbb
popf
fnstcw
js
cli
xchg
int3
sbb
pop
and
int3
mov
jnp
fsincos
inc
in
pop
mov
add
maskmovq
negl
pop
imul
jb
shrb
mov
scas
xor
sub
rclb
popa
data16
mov
dec
pop
sub
movd
and
push
lahf
push
and
fwait
push
push
sub
mov
push
sbb
pop
adc
xchg
push
out
xchg
sub
push
aaa
rol
rcll
daa
mov
leave
add
sbbb
int
jns
sbb
cmp
test
fxtract
stos
bound
dec
or
testb
fimuls
iret
insl
inc
das
sbb
nop
inc
adc
jmp
push
add
xor
lret
xorb
mov
cmc
fimull
cmp
mov
jg
clc
mov
inc
popf
lock
push
jl
cs
mov
inc
mov
mov
inc
or
ljmp
cld
daa
jle
inc
mov
push
mov
cmp
push
decb
cmp
pushf
sub
repz
inc
add
jne
xchg
pusha
sub
adc
pusha
pop
ja
sub
sbb
test
mov
ret
add
xor
js
ljmp
jno
push
aaa
inc
pop
cmp
imul
adc
das
push
insl
adc
mov
adc
mov
test
mov
scas
pop
sbb
lods
rorb
sbb
mov
in
into
mov
push
xchg
ja
sub
mov
pop
in
cmp
inc
loopne
push
add
mov
fistpl
push
loope
inc
cmp
add
icebp
inc
cld
hlt
or
pop
insb
dec
loopne
add
xor
and
bound
inc
xor
add
adcb
fcompl
fwait
hlt
loopne
ja
and
into
and
jb
test
adc
daa
loop
out
adc
je
pop
sub
jb
fisubl
lcall
pop
into
in
and
cmp
divb
jo
jo
lcall
sar
ret
notb
add
fstl
push
sub
aaa
lahf
mov
and
out
adc
sbb
jns
loope
into
addr16
and
fsts
pusha
int3
dec
int
hlt
push
pop
bound
loope
pushf
push
movsl
pop
pop
add
push
out
or
outsl
or
and
push
and
jo
ret
mov
in
popa
xlat
cmp
lods
and
jne
adc
xor
mov
data16
fcomps
sub
mov
and
jnp
jo
adc
push
adc
and
int3
cmp
loopne
cmp
gs
mov
xor
dec
in
aaa
xchg
and
out
mov
in
xchg
icebp
sub
int3
ret
scas
mov
sti
imul
mov
xorl
lcall
push
scas
xorb
cmp
jae
jb
sbb
adc
and
ret
xorl
and
aad
fs
mov
push
jns
pusha
pop
out
jb
imul
rolb
xor
jne
sbb
aad
adc
add
int
shl
pop
movsb
hlt
push
scas
test
das
adc
add
arpl
mov
cli
mov
jg
sub
push
fildl
and
add
or
sbb
add
bound
pop
popa
pusha
push
xor
add
dec
bts
or
repnz
aas
sbb
jp
sub
aam
pop
adc
xor
pop
sbb
pop
add
sbb
pop
aad
daa
hlt
mov
cmp
or
inc
fadd
push
cmp
movsb
ret
in
mov
or
cmc
cmp
or
ror
arpl
addr16
aad
push
sub
and
sub
test
and
jne
popa
jbe
scas
mov
jl
rolb
cmp
cld
mov
pop
cmp
add
push
adc
pop
xor
mov
lret
jg
inc
add
stos
jno
lods
loope
fdivl
inc
mov
add
jp
pushf
sbb
pop
mov
push
icebp
and
add
and
or
dec
add
push
inc
inc
mov
sub
or
movsb
imul
pushw
inc
or
add
and
or
dec
rolb
inc
scas
aas
test
hlt
inc
xchg
cmp
repz
xchg
push
iret
or
or
xchg
or
xchg
dec
mov
mov
subl
ljmp
mov
and
ds
hlt
jno
mov
loop
add
adc
and
fcoml
enter
test
sarl
adc
jne
lods
or
mov
xor
inc
mov
mov
add
stos
sahf
xor
pop
adc
dec
add
cmp
pusha
xchg
aaa
movsb
shll
cltd
pusha
and
mov
in
sbb
jbe
pushf
sub
cmpb
add
aam
sbb
loopne
mov
sub
inc
popl
andl
mov
add
jecxz
iret
and
adc
push
dec
pop
sbb
mov
xchg
jne
out
push
mov
pop
ret
push
add
push
js
and
cmpb
testb
mov
mov
pop
scas
push
lahf
sbb
push
ljmp
push
out
cmpsb
inc
icebp
test
or
jnp
jg
lea
add
sbb
sub
int3
xor
mov
subb
fisubrl
push
push
je
mov
adcb
or
test
lret
xor
or
mov
and
or
movsb
pop
cmp
rorb
xor
add
rorl
test
cmc
cs
add
dec
jge
mov
cmp
psrad
jl
lret
addr16
adc
inc
mov
sbb
and
mov
adc
adc
jbe
xchg
stos
gs
insb
dec
push
arpl
mov
rclb
pusha
adc
xchg
sub
fisubrl
inc
jp
pop
iret
sub
mov
inc
push
scas
fdivrs
mov
mov
or
sub
pusha
insb
add
lcall
bound
jo
enter
scas
lods
cwtl
jo
leave
mov
out
add
push
bound
and
mov
outsl
orb
fisubl
stos
test
xor
xlat
sbb
xor
rorl
sub
and
divb
jg
mov
imul
fsubrs
add
ret
js
dec
dec
dec
iret
mov
movsb
out
inc
or
dec
pop
sti
pop
sbb
mov
xorb
call
sahf
jno
push
ret
adc
push
xor
push
push
add
jmp
and
das
jg
push
call
into
jno
popf
inc
cwtl
or
addb
sub
mov
ja
fdivs
jmp
and
inc
sub
movsb
dec
scas
outsb
jge
jg
pop
addb
sub
adc
inc
push
sub
add
sbb
sub
push
iret
adc
sbb
jae
push
push
cmp
jge
mov
sub
test
dec
aaa
pop
push
jmp
inc
add
jg
daa
nop
cmpb
or
mov
mov
xor
push
add
mov
mov
add
mov
dec
and
sub
arpl
or
adc
push
push
int3
cli
push
scas
xchg
and
push
or
inc
mov
add
pop
stos
les
inc
stos
inc
andl
aaa
mov
sahf
cwtl
cmp
imul
bound
int3
fdivl
out
cmpw
cmpsb
das
sbb
repz
int
and
pusha
shrl
sbbb
enter
pop
sub
add
pop
jmp
ja
pop
jae
nop
sub
mov
xlat
add
scas
push
sub
imul
inc
dec
test
jne
sbb
pop
xor
stos
and
scas
aad
push
hlt
test
pop
mull
jge
mov
cmp
cmp
les
pop
cmc
and
and
mov
es
popa
and
mov
xor
mov
add
and
pop
test
mov
mov
sbb
mov
mov
ss
subl
ret
stc
in
pop
mov
ret
sarb
mov
lea
out
hlt
inc
push
mov
ss
adc
xor
addr16
adc
and
mov
mov
mov
negb
add
int3
push
jmp
fwait
rdmsr
loop
push
adc
das
aaa
push
rcrl
in
imul
inc
push
pop
pop
imul
lahf
inc
add
jp
daa
or
rcr
out
jecxz
ss
test
jne
inc
mov
cmpsl
loop
dec
daa
mov
pop
bound
xor
sub
xchg
sbb
sub
dec
jp,pn
inc
xlat
mov
xchg
pop
mov
mov
repz
add
inc
and
inc
jo
adc
jnp
lahf
pop
not
subb
mov
orb
mov
add
jecxz
mov
cmp
ss
lea
xchg
lcall
xchg
shlb
xor
cmp
pop
mov
jmp
in
dec
xorl
adc
and
fisubrl
pop
lds
js
shlb
inc
add
or
or
push
jle
outsb
add
jno
fwait
es
add
push
jecxz
dec
push
dec
push
pop
rcrb
sbb
adc
ds
subb
call
popf
test
push
push
push
or
lock
notl
addr16
or
xor
outsb
into
push
scas
adc
mov
jecxz
mov
pusha
mov
rcll
es
lret
mov
enter
add
test
push
push
fs
jl
dec
stos
push
and
push
add
leave
test
jp
scas
arpl
mov
sub
aam
adc
fcmovbe
xor
lret
add
cmpsl
ret
loope
rcl
lds
rolb
add
adc
add
jecxz
xchg
sbb
lods
push
add
ljmp
popf
add
pop
out
sbb
stos
jg
push
ja
push
xorl
dec
mov
in
jb
xor
stos
outsb
push
outsl
push
loope
cmp
xchg
jle
xchg
ja
sub
sbb
pushf
and
push
inc
popf
xchg
jmp
push
xchg
xlat
imulb
add
scas
sbb
xchg
sbb
xor
mov
add
aas
shrl
dec
or
pop
push
inc
push
push
leave
xchg
sub
pop
mov
test
cmp
adc
push
mov
jnp
inc
jae
loop,pn
push
adc
pusha
add
jae
cmp
je
and
inc
bound
xchg
cmp
jp
mov
add
sti
or
loopne
imul
mov
cwtl
xor
xchg
ja
add
push
jbe
imul
cmp
xchg
sub
add
pushf
arpl
push
add
pusha
rclb
sbbb
daa
fdivrp
sub
or
lods
pop
add
out
and
xchg
inc
test
lcall
add
arpl
std
imul
mov
adc
mov
or
arpl
out
sub
arpl
enter
and
cmp
inc
aam
and
sti
and
cwtl
rol
push
xor
outsb
jo
xorl
mov
jbe
mov
mov
lock
arpl
mov
insb
sub
push
jno
lret
sbb
cmpsl
fnstcw
push
push
lods
es
das
fmuls
push
shlb
ret
cs
arpl
addr16
fstps
jle
jl
aaa
andl
bound
and
sbb
push
and
mov
or
mov
xlat
je
lock
into
adc
out
fldenv
sub
add
or
lods
add
jmp
int3
fiadds
jmp
cmp
nop
cmpb
xlat
jge
mov
add
das
outsb
push
mov
in
fs
dec
or
add
imul
ret
sub
xor
andb
sub
sub
jmp
sub
mov
ljmp
and
pop
xor
leave
and
fistps
or
stos
sbb
or
test
lods
cmpsl
push
mov
dec
jg
icebp
mov
fstps
pop
or
je
movsl
dec
lcall
cmpb
and
mov
pop
xor
outsl
xchg
aam
push
push
mov
xchg
pop
push
shll
inc
int
hlt
mov
sub
lcall
iret
jle
stos
gs
test
mov
hlt
jle
movsl
or
iret
or
push
add
pop
adc
push
sbb
cmp
pushf
xchg
jne
xor
lahf
mov
daa
inc
jl
and
cmp
and
inc
dec
loope,pt
add
add
insl
je
arpl
mov
pop
jle
mov
je
pop
adc
sbb
xor
mov
sub
jle
sbb
jne
inc
insl
jnp
rorb
pop
daa
mov
rorl
int3
imul
and
mov
es
lock
add
lods
iret
xchg
shlb
rorl
adc
inc
out
lods
ljmp
test
outsb
enter
test
stc
pop
xorb
outsb
or
add
iret
cmp
xchg
cmp
push
shrl
hlt
add
push
cmp
stos
fldt
adc
ja
push
lods
jbe
mov
test
mov
dec
sbb
pop
fstps
inc
dec
icebp
xor
add
inc
sub
push
ds
adc
das
in
stos
int3
or
mov
push
shll
loopne
je
and
lods
mov
adc
popa
push
hlt
dec
mov
repz
pop
jle
cltd
xchg
nop
and
lods
adc
xor
mov
dec
stos
add
arpl
dec
test
loopne
sub
and
mov
aad
xor
or
inc
or
mov
push
add
push
or
ret
lods
cwtl
inc
cmp
sbb
xchg
scas
or
scas
lahf
xchg
pop
test
popf
stos
jp
sub
mov
test
fs
pop
add
dec
jo
ret
add
jae
outsl
pop
ja
outsb
add
mov
push
pop
sub
dec
and
or
and
dec
adc
addr16
push
imul
rcrb
cmp
jbe
jne
scas
and
and
jl
es
cmp
push
pop
outsl
pop
inc
jno
pop
and
addr16
aas
inc
bound
mov
addr16
push
inc
outsb
mov
outsl
push
daa
pop
es
jbe
leave
aad
pop
xor
xchg
iret
mov
dec
sub
pop
pusha
and
lods
mov
and
inc
and
test
sub
inc
jmp
mov
inc
mov
mov
xlat
orb
and
ss
icebp
sub
add
aam
push
adcw
cwtl
scas
hlt
bound
dec
mov
xor
lahf
adc
mov
inc
fnsave
sub
loopne
lret
sbbb
rcll
inc
mov
jle
mov
push
or
mov
push
ss
out
xchg
loopne
or
jecxz
jge
mov
pushf
adc
sbb
xchg
addb
push
lret
imul
inc
pusha
sub
inc
xor
cmpsl
mov
jo
shll
and
or
stos
ljmp
add
mov
cmp
leave
aam
test
sbb
icebp
xor
cli
jno
sub
adc
hlt
stc
cltd
stc
aam
mov
jmp
idivb
and
mov
iret
pop
popf
scas
fsubrl
mov
stos
and
inc
cmp
add
jne
js
adc
cmp
xlat
cmp
ror
push
or
mov
sub
repnz
adc
es
ja
and
out
sub
clc
xor
incb
ret
inc
fwait
sub
mov
or
mov
cmp
xchg
mov
fcmovu
jo
ds
xchg
loop
int
test
out
xor
js
shrl
adc
inc
mov
sbb
imul
movsb
mov
sbb
inc
inc
das
push
mov
jle
lahf
pop
or
imul
mov
pop
sbb
adc
lahf
or
rolb
adc
inc
dec
loopne
mov
jg
and
dec
dec
stos
mov
and
scas
push
aad
mov
negb
or
lret
push
repz
jecxz
psadbw
add
xchg
dec
in
xorb
aaa
jo
int
pop
pop
pop
adc
and
loop
or
sub
je
and
sbb
push
shlb
mov
fs
lds
stos
andb
das
push
add
pusha
push
adc
xor
and
out
ret
adc
inc
fisubs
rolb
jo
jno
jl
and
insb
add
je
sub
inc
add
jbe
cmp
pop
sub
sbb
ja
xor
pop
mov
xchg
add
lds
in
aad
sar
dec
adc
push
andl
jne
scas
or
roll
jbe
cmp
test
jo
and
mov
cmpsl
fists
outsb
rcrl
inc
jno
jp
fcompl
pop
roll
sbb
adc
dec
subb
mov
mov
lock
ljmp
ja
sbb
jle
pop
and
out
mov
imul
adc
push
xlat
inc
push
dec
add
mov
or
mov
push
je
push
push
push
inc
and
ss
add
inc
pop
iret
push
mov
int
inc
bound
rolb
push
mov
shrl
icebp
mov
sub
dec
adc
ret
mov
sub
add
cmp
insb
mov
or
fiaddl
shll
sbb
mov
stc
add
jne
cld
ja
push
adc
sub
sbb
stc
out
repnz
stos
mov
call
xchg
mov
pusha
mov
movsl
in
mov
push
jmp
push
stos
cli
mov
jae
mov
push
push
and
jmp
dec
sbb
stos
ffree
cli
cmp
in
sub
lret
and
insl
jle
add
rolb
stos
xchg
jecxz
aad
mov
repz
les
and
movsl
dec
pop
out
sbb
mul
sarb
aam
jo
bound
or
insl
lret
les
xchg
push
xchg
outsl
adc
or
outsb
add
add
popa
adc
ret
inc
add
adc
loop
fwait
mov
sbb
push
cmc
lock
sub
mov
mov
jecxz
lods
dec
adc
leave
dec
cmpsl
and
add
inc
xchg
push
ret
mov
xchg
filds
cmpb
daa
movsb
outsl
cmp
dec
and
sbb
rcr
push
shrb
lock
jmp
enter
push
loope
push
sub
jl
and
add
sub
fisttpl
lock
out
pop
cmpsb
sbb
add
scas
fidivl
out
bound
insl
lods
inc
add
hlt
insb
adc
add
nop
aaa
adc
pop
jns
sbb
or
xchg
test
xchg
push
xor
dec
sub
push
cmc
fdivrl
xor
daa
sbb
add
pop
shll
pop
aad
imulb
mov
sbb
inc
lock
rorl
xor
push
lcall
push
jnp
sbb
mov
mov
xchg
scas
lahf
cmp
pop
mov
pop
dec
add
mov
subl
test
cmpsb
lret
adc
cmp
sub
ja
dec
ret
pop
dec
in
mov
mov
xchg
sti
sub
pusha
mov
jmp
sbb
mov
inc
xor
mov
rcrb
and
or
xor
add
and
add
idivb
dec
inc
push
aas
orb
and
ja
and
xor
or
mov
bound
aas
pop
jne
mov
adc
ret
mov
pop
pop
xchg
inc
negl
mov
dec
es
sti
mov
push
icebp
or
jne
test
adc
adc
push
dec
mov
aad
push
mov
loope
adc
ljmp
sbb
push
adc
mov
pop
cmc
loopne
jne
cmp
push
mov
insl
or
pop
mov
cmpsl
in
cmp
aaa
adc
and
and
inc
je
shll
add
dec
inc
movsb
xchg
cld
js
inc
xchg
inc
imul
xor
into
adc
mov
push
cmp
xor
lcall
ljmp
pop
or
xchg
arpl
in
in
sub
dec
mov
adc
lock
inc
je
mov
outsb
inc
add
push
dec
inc
push
mov
mov
xchg
enter
shlb
mov
into
push
and
out
loop
cmp
mov
sbb
mov
xchg
pop
pusha
sub
lret
inc
add
mov
orb
bound
mov
jecxz
out
cmp
mov
adc
xchg
lret
jge
shl
not
fdivl
jmp
lods
sub
and
mov
test
pusha
out
push
add
lods
in
mov
lea
jmp
push
outsb
inc
in
add
jns
jno
jnp
sbb
pop
xor
push
popa
js
iret
fsubrl
inc
pop
mov
jecxz
add
rolb
jnp
push
scas
jg
call
sbb
repz
sub
add
lods
mov
add
sbbb
jp
xor
std
pop
lods
mov
ja
xor
adc
call
or
mov
sub
cmp
in
sahf
pop
js
cmp
or
call
mov
or
sbb
or
sbb
adc
sbb
inc
jl
jae
adc
and
xchg
fadd
movq
pop
ret
jns
ja
sbb
adc
fisttps
inc
cmp
fsubrs
jo
cmp
sub
ret
popa
mov
mov
addr16
xor
in
dec
xchg
call
inc
fdiv
xor
or
int3
loope
sub
hlt
inc
mov
stos
lods
movsb
sbb
mov
mov
sbb
push
push
xor
sbb
loope
cmpl
jnp
or
add
lods
pop
mov
jge
int3
sub
push
jno
pushf
sub
les
in
cmp
imul
lahf
add
add
pushf
inc
cmp
imul
jge
push
in
daa
cli
dec
push
testl
sub
in
adc
sub
fdivrs
inc
cwtl
or
fildl
lret
daa
xor
sub
sbb
imul
imul
sbb
mov
inc
or
add
fisubrl
and
cwtl
jl
outsb
push
jmp
push
mov
es
subb
bound
subl
daa
mov
xor
test
or
jo
cwtl
rcl
cwtl
mov
pusha
push
rcll
xor
std
mov
movsb
cmp
bound
jnp
lock
cmpsb
pop
cmp
mov
adc
jo
iret
mov
dec
jle
sbb
jo,pn
inc
test
add
jl
add
mov
xchg
add
mull
sub
xor
mov
in
or
add
add
push
loopne
mov
xor
and
sbb
iret
sbb
into
cmpb
fldcw
sahf
ret
and
add
xor
sahf
adc
inc
mov
xchg
sub
adc
fiaddl
sti
stos
mov
call
jge
sub
nop
and
addb
rolb
push
lahf
add
mov
dec
loopne
das
add
dec
ja
sti
popf
mov
test
scas
lret
ret
xchg
push
jl
push
add
xorb
dec
push
test
into
pop
xor
out
or
cmp
js
and
cmp
sub
pop
aaa
jns
adc
out
iret
loopne
or
xorb
gs
or
mull
sbb
add
mov
sbb
push
and
popa
push
xchg
adc
jecxz
or
insb
sbb
cmp
cmp
test
js
inc
mov
inc
add
add
push
inc
inc
jcxz
or
cmpl
add
mov
sbb
mov
inc
add
lahf
and
sub
sbb
xorl
pusha
stos
inc
cwtl
inc
and
aas
out
add
clc
addl
or
gs
mov
inc
repnz
inc
adc
imul
xchg
mov
test
sbb
mov
aas
mull
rcrb
xor
cmpb
pop
shlb
mov
in
fidivs
ljmp
sbb
push
cmpsb
push
in
ss
sbb
mov
mov
dec
out
jo
jmp
aas
aad
ss
fldl
dec
add
cmp
xor
aas
jbe
or
subl
adc
imul
sbbb
aaa
pop
inc
rorb
add
adc
mov
fldcw
lods
mov
add
and
xlat
movsb
stos
pop
andl
fsubl
jp
pop
sbb
push
push
sahf
dec
pop
jle
sbbb
xor
scas
lahf
mov
adc
je
adc
fldenv
stos
mov
sbb
stc
movsl
mov
jns,pt
or
out
shll
fisubl
daa
inc
scas
out
push
aas
dec
add
sub
jo
jg
aaa
push
jnp
hlt
push
mov
incb
jge
xlat
rol
stos
inc
outsb
cld
push
jo
push
sbb
jp,pt
fisubrs
iret
lods
das
cmp
jns
sub
pushf
shrb
mov
push
movsb
loope
and
sub
js
stc
adc
add
xor
mov
pop
xor
jo
imul
dec
jp
xor
inc
sub
xor
add
movsl
lcall
icebp
cwtl
rolb
mov
mov
mov
stos
insl
popa
sbb
pusha
xor
adc
loopne
lahf
mov
shl
jmp
test
push
xchg
xchg
clc
addr16
mov
lret
iret
mov
insb
cmp
into
ljmp
daa
jg
test
cmp
or
shlb
icebp
fistl
ja
add
inc
inc
and
add
lock
push
jo
les
fistpll
add
cmp
and
iret
adc
lea
negb
xor
xchg
addl
insl
or
test
sub
and
lahf
test
mov
push
stos
sarb
ror
jmp
mov
xor
pop
aad
imul
push
scas
and
xor
adcb
push
shlb
out
and
sub
or
cld
and
mov
into
sub
in
inc
or
inc
in
mov
mov
sub
lcall
pop
fnsave
aam
sub
loope
mov
icebp
inc
mov
arpl
rcrl
mov
mov
sub
out
and
inc
shrw
jo
sbb
out
push
imull
mov
pop
ret
es
sub
pop
jecxz
stos
sub
sub
clc
pusha
fimuls
arpl
add
xor
in
aam
pop
cmpsb
loop
add
jne
out
lock
in
mov
shll
and
loope
pusha
mov
adc
incl
jmp
or
xchg
xorb
jae
popf
and
ds
popa
clc
inc
lods
hlt
dec
jg
mov
std
jmp
loop
mov
xor
pop
vfrczpd
xchg
push
inc
xor
push
lods
cmp
sbb
push
adc
cmp
loope
xchg
dec
pop
add
inc
pop
inc
lea
lret
loope
popa
ficoml
lock
add
xchg
test
test
xchg
add
mov
mov
in
sub
ja
dec
and
mov
add
popa
and
je
add
in
and
mov
mov
dec
mov
inc
stos
xor
jo
testl
add
out
lock
ja
in
ret
mov
fisttpl
out
xchg
arpl
and
out
and
fimull
cmp
cmpsb
hlt
push
nop
shll
sti
stos
xchg
addb
iret
and
mov
stos
pusha
cmp
fxch
clc
or
sub
sub
jmp
fldt
mov
js
ret
imulb
lods
mul
lds
out
shrb
and
ret
and
and
ret
movsb
inc
lcall
jge
pop
stos
in
mov
pop
fldt
ret
lods
call
fwait
pop
ret
mov
sub
shr
data16
repnz
lds
mov
dec
cmp
mov
dec
mov
inc
fistpl
iret
clc
dec
mov
mov
inc
ljmp
adc
pop
cmp
sbb
std
sarb
in
fwait
xchg
mov
pop
xchg
cmpl
movsb
cs
add
push
fs
out
js
cwtl
je
out
push
jg
inc
mov
iret
das
js
cmp
pop
mov
xchg
scas
adc
addr16
imul
lar
xchg
outsl
fbld
fs
inc
cmp
outsb
loop
vmovntps
mov
int3
lret
stos
sub
aas
aad
sbb
dec
mov
lcall
pop
lahf
push
pop
sbb
pop
xlat
loope
mov
fnstsw
fs
in
and
sbb
xchg
call
add
sub
addr16
ret
loope
dec
in
dec
add
adc
adc
mov
js
aas
addb
mov
push
jge
add
sbb
sub
xlat
popf
in
add
xacquire
mov
mov
loope
shlb
ss
add
pop
xchg
aam
lea
sub
call
mov
dec
notl
lret
das
mov
push
repnz
cmp
mov
add
xchg
in
add
dec
into
pusha
lods
jecxz
mov
push
fwait
orl
mov
and
enter
fistps
loopne
jns
mov
add
push
add
stos
cld
orl
inc
jmp
xor
inc
icebp
pop
adc
data16
insl
aam
mov
pop
mov
iret
sbb
stos
out
dec
icebp
enter
je
aaa
pusha
pop
jmp
test
jle
cmpsb
add
xchg
add
jmp
and
sbb
and
aaa
mov
push
pop
pop
mov
xchg
dec
or
in
ret
push
je
or
enter
out
fucomi
inc
fadd
rclb
pop
mov
pop
sub
mov
pop
add
sbb
or
or
mov
push
sbb
xchg
jno
ljmp
mov
cli
jae
adc
add
jae
sub
push
lret
fimuls
rol
xchg
sbb
adc
xor
jb
mov
cs
es
stos
xor
pop
aad
pop
adcb
xchg
pop
inc
mov
xor
vmread
les
ret
jecxz
ret
clc
imul
out
mov
mov
shrl
sbbb
mov
jp
xor
xchg
xor
insl
stos
or
mov
repz
lock
lret
jo
pusha
mov
xor
mov
jecxz
or
sbb
jg
adc
insb
ljmp
in
js
iret
out
into
les
shlb
adc
in
sbb
repz
sub
fldenv
inc
std
divb
mov
or
and
pop
shlb
stc
aad
sub
sbb
jmp
imul
enter
nop
les
inc
rol
sub
hlt
inc
popa
jae
ss
add
movsb
jns
loope
ds
jp
movsb
aas
es
inc
push
cmp
fucomi
add
push
xor
divb
imul
and
mov
sarl
rolb
and
nop
rcll
inc
add
ja
push
or
in
rclb
adc
mov
testb
jb
fcomi
shlb
mov
gs
korb
push
mov
cmp
add
push
and
jbe
inc
aad
enter
jnp
or
daa
push
imul
in
addr16
mov
in
inc
cmpsb
shl
mov
dec
lds
jne
sub
adc
call
insl
jae
rcll
inc
loopne
loope
les
push
xchg
inc
and
jo
daa
adc
dec
sbb
fisubrs
loope
jge
mov
ljmp
in
adc
addb
divl
call
icebp
jge
sbb
inc
dec
pop
test
fdivrl
enter
ljmp
iret
fsubr
mov
xchg
lods
mov
sub
mov
int
subl
fisubs
jae
push
mov
sbb
fdivl
push
je
dec
adc
jl
fistps
add
out
in
stos
aad
repnz
jecxz
stos
stc
xchg
cmc
mov
adc
xor
sbb
inc
stos
das
cmp
cld
imul
jp
insl
sahf
jle
push
mov
xchg
fisttpl
sub
sbb
roll
aad
jle
inc
insb
imul
sar
aaa
xchg
mov
ret
loope
xchg
shl
push
rolb
sarb
pop
roll
adc
xchg
andb
fisttpll
jmp
xchg
push
fwait
or
cltd
les
mov
mov
xor
and
faddl
inc
ljmp
pop
loope
push
popa
sbb
pusha
mov
jecxz
jg
xor
sbb
add
ds
rolb
loopne
inc
fistpl
inc
clc
clc
inc
movsb
pop
in
xor
pop
xchg
mov
mov
int
mov
dec
jl
mov
call
popa
lcall
enter
inc
popa
or
inc
dec
cmp
push
dec
out
rclb
test
idivb
jo
or
mov
mov
dec
insb
push
stos
mov
xor
scas
inc
shll
add
std
and
xor
or
fadds
push
test
jp
sbb
sahf
sbb
push
lret
enter
out
pop
push
inc
rcrb
test
dec
adcb
aam
aaa
add
jo
cld
shll
iret
sub
scas
and
inc
mov
pop
push
or
add
xlat
repnz
push
insl
jns
test
sbb
rorl
aam
cmp
popf
cmp
xor
push
jle
jnp
and
mov
fadds
aad
xchg
scas
mov
jmp
push
sub
add
cmc
push
orl
sarb
aaa
xchg
pop
push
pop
xchg
cmpsl
scas
push
mov
and
xchg
or
and
sbb
pop
pusha
mov
push
add
sbb
clc
andl
cltd
xor
sub
cmp
inc
icebp
xchg
loope
js
cmp
adc
add
push
cmp
lret
and
add
cmp
loope
mov
xchg
dec
jge
mov
mov
ss
mov
call
pushf
ror
mul
cmpsb
in
out
shl
negb
cmp
pop
sbb
mov
incb
add
aam
mov
sub
sub
jle
shll
jo
jbe
movsb
push
into
pop
cmp
mov
cmpsl
ret
xorb
pop
adc
pop
pop
cmp
push
lds
pop
subb
insb
testb
in
push
push
pop
sarb
jg
mov
sub
popl
pop
mov
pop
ljmp
add
out
sti
ret
and
std
iret
lock
test
adc
imul
test
cmp
or
pop
notl
adc
mov
add
ret
idiv
loopne
dec
xchg
leave
push
scas
neg
pop
js
xrelease
push
in
inc
roll
and
add
rcrl
jo
and
add
pop
in
add
loope
or
mov
stc
bnd
mov
pop
aaa
pushf
repnz
rcl
inc
ja
out
pop
shl
jne
fstpl
call
in
sbb
inc
pop
lret
fisubrs
push
notl
lock
xor
sub
jo
push
sub
jge
jno
mov
je
inc
stos
imul
out
jo
mov
jne
push
xchg
adc
sbb
rcrl
sub
add
adc
pop
cmp
dec
cmp
or
mov
and
add
sub
insl
and
add
dec
push
mov
icebp
fs
push
stos
jle
call
shlb
add
lret
jo
das
cli
sbb
add
and
ss
out
pop
xchg
movsl
das
aad
in
sbb
sub
or
aas
lds
in
aam
jno
xorl
adc
paddusb
pushf
cmc
insb
or
xor
cmpsl
out
sahf
or
push
daa
cmp
loop
add
jl
adc
or
mov
dec
push
lea
rcrb
shll
fdivs
adc
mov
lret
mov
adc
test
cs
sbb
shll
mov
aam
popa
and
xor
fidivrl
pop
add
loope
roll
frstor
adc
xor
sbb
mov
mov
out
nop
lea
cmp
mov
mov
jnp
cltd
dec
fwait
rolb
fdivrp
jecxz
movsl
mov
push
or
icebp
mov
lcall
ret
or
daa
call
mov
add
daa
test
popf
mov
and
dec
add
and
add
add
and
pop
add
mov
xorl
pop
test
pop
dec
adc
jp
movsl
or
sub
jo
inc
or
mov
adc
and
popf
jae
add
sbb
sub
mov
aaa
ss
test
call
jmp
push
sub
in
adc
adc
js
push
test
dec
dec
xadd
rorb
daa
adcb
mov
add
andb
sar
mov
repnz
sub
aaa
popa
adc
xchg
add
mov
sarb
mov
js
inc
mov
pop
movsb
cmp
push
pop
les
push
das
inc
xlat
jno
and
dec
sub
enter
xor
fists
stos
ds
add
xchg
push
insb
adc
and
add
sub
sbb
jl
out
add
lahf
imul
loopne
mov
mov
mov
movsl
in
mov
js
sbb
add
ret
dec
cmp
or
add
test
mov
in
hlt
ret
fnstsw
mov
clc
or
mov
xchg
and
xor
insb
jo
test
push
sbb
xlat
sti
insl
inc
test
dec
pop
sub
mov
jnp
mov
push
inc
sub
movsl
jae
jecxz
loopne
or
mov
add
andb
and
int3
std
sub
inc
mov
ljmp
stos
mov
cmp
out
dec
cmpsl
or
inc
hlt
xor
xchg
stos
aas
and
add
mov
out
cs
xor
mov
jb
jnp
gs
ret
andl
cmp
adc
push
cmpsb
arpl
jp
mov
icebp
sub
mov
xchg
aaa
cmpsb
push
sahf
mov
cmp
mov
aas
aad
adc
movsl
sbb
aaa
stos
hlt
sub
xor
adc
add
cmp
sbb
and
sub
mov
les
jl
inc
in
or
or
inc
cmp
imul
and
dec
and
int3
push
add
pop
or
pop
cltd
cmp
push
xor
mov
sti
xchg
push
loopne
mov
outsb
fcomps
xchg
or
mov
adc
pop
fcomi
imul
jo
and
xchg
out
in
jno
add
jo
and
sbb
mov
cmp
fmuls
add
dec
les
je
int3
pushf
jne
sbb
aas
add
jo
cwtl
mull
mov
xor
dec
inc
test
pop
out
xor
inc
or
inc
cmpsb
fcoms
scas
inc
mov
je
fisttps
sti
fwait
push
roll
pusha
push
jge
jl
jbe
jmp
dec
jne
cmp
outsb
mov
roll
in
dec
test
adc
or
jge
imul
push
sarl
mov
xor
adc
xchg
mov
in
inc
sub
test
mov
jnp
mull
mov
pop
orl
out
dec
inc
mov
imul
test
call
push
pop
das
stc
rol
mov
add
call
incb
lds
sbb
mov
and
ss
mov
or
clc
incb
push
mov
add
mov
xchg
movsb
pop
add
jl
pop
ret
jae
test
mov
push
add
mov
jb
andb
inc
out
mov
xlat
cmpsl
ficoml
aad
sbb
and
ret
popf
loope
and
push
push
rcrb
cmpsl
add
ljmp
cwtl
or
movsl
sub
movsb
pop
or
sarl
mov
divb
gs
popf
mov
sbb
aam
push
out
mov
daa
push
or
ficoms
adc
push
xor
mov
sbb
sbb
call
mov
or
adc
pop
les
jle
adc
mov
dec
inc
and
js
popa
mov
out
cmp
push
cmp
scas
xor
cmp
inc
mov
cmpsl
mov
cmp
add
xchg
add
into
sub
subb
push
pop
jno
leave
or
test
mov
add
sub
adc
xchg
sbbb
mov
lcall
jns
addr16
jo
cmpsb
jmp
and
cmp
sub
mov
jo
xchg
movsb
inc
or
insb
setge
cs
cwtl
adc
aaa
xlat
adc
imul
aam
out
pushf
mov
repnz
push
shrl
or
dec
out
xchg
pop
push
add
push
mov
mov
or
push
push
cmp
mov
pusha
push
in
ds
push
das
sahf
notl
lahf
pop
inc
mov
adc
data16
and
dec
dec
andl
push
mov
and
or
lcall
add
loope,pt
xor
movups
add
cmpsb
sub
hlt
loopne
xor
test
jge
mov
cmp
insl
dec
push
push
notl
scas
mov
flds
pusha
jnp
or
push
dec
add
movsb
iret
inc
sbb
inc
outsb
stos
nop
sar
xchg
mov
inc
js
mov
mov
into
add
loopne
inc
sbb
inc
test
sub
pushf
call
aaa
in
add
ret
or
sbb
adc
mov
jge
test
push
sub
das
fsubrp
in
sbb
and
adc
rolb
fcoml
inc
sub
data16
out
xchg
in
test
xor
mov
sub
push
bswap
mov
nop
mov
add
test
mov
push
lahf
sub
mov
jmp
call
sti
jmp
sub
cwtl
dec
mov
dec
push
or
mov
adc
add
stos
mov
cmp
push
enter
rorl
int
pop
push
xchg
fs
pop
pop
inc
pop
loopne
jp
into
cld
mov
xor
cmp
movsb
stos
cmpsl
add
mov
shlb
stos
lcall
jmp
out
sub
inc
cld
jnp
les
pop
sbb
ficoml
stos
and
lea
mov
test
pop
aam
sbb
and
inc
adc
mov
fcompl
mov
xchg
add
shrl
xor
dec
push
test
dec
test
outsb
addl
call
daa
xlat
rorl
jle
pop
add
dec
jp
das
fcmovu
rcrl
xchg
pop
sbb
push
adc
or
ljmp
stos
int3
mov
add
stos
pop
inc
dec
out
push
out
xchg
inc
mov
cmp
push
ljmp
jle
and
nop
push
pop
push
add
xor
clc
adc
push
push
pop
das
push
popa
call
xchg
bound
jns
leave
andl
popa
dec
push
jae
pop
sbb
xchg
sbb
dec
adc
add
and
cmp
pop
test
xor
insb
inc
add
or
dec
jle
jns
push
xor
aad
data16
add
jo
adc
popa
inc
int3
push
sbb
jmp
inc
inc
popa
jo
mov
das
in
das
rclb
push
add
mov
cltd
add
push
pushf
imul
and
lret
xchg
mov
or
adc
imul
xchg
in
mov
add
sub
push
pop
sub
or
add
sub
addb
test
sub
xor
ret
mov
or
cwtl
outsl
imul
lods
pop
out
ja
pop
inc
and
mov
scas
ljmp
sbb
imulb
sub
lret
inc
inc
outsl
daa
sbb
push
out
or
and
mov
add
add
sub
repnz
xchg
pusha
sub
adc
cmpb
pop
imul
outsb
lds
and
jo
outsl
sbb
dec
mov
pusha
fwait
ret
jp
jne
push
cmc
jo
es
sbb
loopne
in
and
xchg
or
les
add
xor
xchg
sub
adc
loope
mov
or
push
roll
loope
push
sbb
out
push
adc
jno
mov
loopne
in
add
mov
and
out
push
pushf
cmp
test
xchg
add
mov
movsb
test
shlb
mov
mov
outsb
and
and
dec
repz
or
push
in
and
push
jnp
mov
push
jnp
jecxz
sbb
pop
mov
ret
add
movsb
sbb
pop
nop
arpl
pop
cmp
cmp
jbe
lret
and
repz
add
mov
pop
push
pop
jne
jbe
sub
fildl
push
icebp
xchg
mov
movsl
inc
sbb
out
sub
lods
fisubrs
lcall
sbb
movsb
ret
mov
subb
adc
and
jmp
add
loopne
add
push
jmp
mov
mov
add
stc
and
lds
mov
int
orb
xor
test
das
popf
add
jge
or
inc
mov
popa
in
sbb
bound
add
xor
or
imul
ficoms
popa
rcr
insl
add
xor
outsl
fldcw
adc
adc
jl
adc
fadd
es
repnz
add
xchg
pop
negl
xor
test
movsl
testl
jmp
push
sbb
push
adc
lcall
loop
inc
lds
dec
ss
je
repz
cmpsb
adc
mov
mov
data16
xchg
xor
repz
add
or
loop
lret
testb
mov
out
stc
and
pusha
push
adc
int
cmpsb
jnp
nop
insb
lods
insl
inc
pop
jp
add
ja
dec
pop
push
add
add
js
push
add
sub
inc
and
shr
aaa
mov
mov
je
lahf
fmulp
fs
inc
in
push
subb
enterw
mov
inc
or
or
jae
out
and
sbb
lea
push
cmp
xor
adc
sbb
fsubrl
or
and
and
les
les
test
aas
push
hlt
add
jge
jbe
cmpsl
stos
add
adc
pop
sub
cs
hlt
arpl
mov
int3
popa
or
add
addr16
dec
repnz
inc
popf
add
mov
push
repnz
movsb
xchg
insb
add
sti
and
sbb
fsubrs
test
stos
dec
jne
data16
arpl
jbe
xor
cmp
jb
and
xor
inc
js
clc
dec
test
sub
hlt
push
cmp
shll
jge
jno
mov
lahf
aas
pop
push
pop
adc
push
jp
push
sbb
fadds
push
lds
lock
subl
mov
inc
mov
add
add
in
and
mov
jbe
mov
and
sbb
bound
jb
in
jno
or
push
test
jle
rol
jns
add
test
int3
cmpb
iret
mov
loope
inc
add
adc
int3
xor
push
inc
dec
call
lods
adc
push
inc
mov
pop
adc
sbb
arpl
pop
add
pop
mov
das
divl
adc
inc
xchg
inc
add
data16
outsb
into
popa
adc
dec
lret
cmp
cmp
sbb
dec
dec
push
in
xor
mov
rorl
pop
lret
dec
pop
mov
add
add
jo
andb
xchg
adc
or
push
xor
fs
mov
andb
je
pop
pushf
add
push
pop
push
add
mov
es
or
sub
sub
xor
adcb
mov
mov
add
sub
mov
mov
fbld
inc
xor
add
ret
or
dec
pcmpgtw
sbbb
push
sbbb
or
les
gs
clc
fs
xchg
test
sbb
je
and
cmp
push
and
orb
ja,pt
push
mov
mov
ficoml
addl
or
cmp
cmp
push
test
popa
loop
inc
cmp
or
or
lret
stos
jp
aad
adc
mov
sbb
push
es
or
sub
sbb
sbb
mov
or
daa
cmp
sub
push
add
sbb
pop
sub
push
icebp
lods
or
push
arpl
hlt
add
inc
aam
cmpsl
sub
push
jo
ds
daa
or
pusha
dec
add
adc
mov
gs
pop
data16
js
enter
fwait
aad
into
sub
lret
push
mov
sbb
or
lds
cmp
sbb
mov
adc
or
add
and
jg
sub
shlb
adc
push
leave
pop
cmp
sub
or
push
or
mov
pop
xor
mov
xchg
sarl
sub
das
pop
sub
add
push
mov
cltd
mulb
xor
mov
push
jo
pop
sub
fs
push
adc
push
call
in
jne
insb
or
mov
lcall
xorl
lds
into
sub
in
das
inc
xor
and
jbe
inc
add
adc
xor
and
ja
imul
cmp
sub
sbbb
mov
cvtpi2ps
mov
dec
cmp
into
dec
lret
sti
les
xor
mov
andb
adcl
test
jmp
mov
mov
push
in
mov
ret
jmp
mov
outsb
dec
push
mov
sarl
adc
xorb
xor
xchg
test
dec
lds
sub
pop
stos
mov
fwait
xor
addb
stos
pop
cmp
push
jg
andb
jns
or
xor
pop
sbb
scas
xchg
inc
sarl
or
mov
cmp
mov
add
daa
aaa
cmp
cmp
in
mov
adc
mulb
jnp
pop
jne
mov
loope
add
stos
cmpl
dec
pop
sbb
bound
popf
nop
shl
jp
fldenv
xlat
jge
stos
mov
and
fiaddl
mov
call
flds
xor
mov
ret
in
test
shrb
push
inc
xchg
pop
add
add
add
cmp
add
rcrb
movsb
sbb
or
cmp
mov
iret
mov
mov
adc
into
aas
popa
add
cmp
or
push
push
mov
sub
pop
or
test
pushf
xor
push
mov
jb
std
adc
mov
push
stos
push
adc
xor
mov
pop
test
and
mov
mov
mov
lret
mov
xchg
adc
stos
lahf
cmp
pop
xchg
xor
or
lods
aam
adc
fstpt
stos
addb
xlat
pop
push
mov
jne
adc
mov
mov
pop
leave
inc
stos
imul
sub
adc
orb
shlb
pusha
push
mov
iret
xor
push
data16
dec
dec
sbb
mov
pop
int3
jp
ficompl
movsl
lahf
cmpl
inc
mov
int3
lock
lock
mov
pushf
sub
dec
in
mov
nop
sub
pop
pop
inc
mov
push
inc
cld
jle
or
sbb
add
sbb
mov
sub
sarb
inc
mov
adc
add
or
clc
adc
int3
insl
daa
fsubr
mov
push
and
push
int
daa
mov
loopne
mov
sbb
and
cmp
ljmp
sbb
out
je
add
push
mov
ja
bound
flds
add
fsubrs
fldenv
add
mov
imul
iret
or
adc
stos
cmp
xor
loopne
mov
lret
sub
and
push
fadd
push
repz
inc
adc
xor
fdiv
inc
jo
dec
dec
cmp
xor
mov
pushl
mov
mov
add
inc
std
mov
outsl
das
jo
jmp
and
sub
out
and
jmp
stos
stos
sub
out
bound
mov
leave
xor
push
sti
jb
pushf
add
mov
stos
jno
int3
xor
sub
das
mov
mov
cmc
push
add
inc
dec
add
xchg
movsl
test
rorb
enter
cmovl
insl
ja
out
movsl
daa
je
add
cli
sbb
out
and
out
test
rcr
ret
mov
or
ret
js
fisttps
xchg
cs
and
sub
iret
sbb
and
sbb
iret
scas
cld
jge
jge
add
inc
and
dec
adc
rolb
mov
or
pushf
jle
adc
xor
pop
jmp
test
int
and
push
and
dec
arpl
std
loopne
push
das
xchg
lret
or
out
jne
sub
loope,pn
add
sub
ja
or
fwait
int
cmp
lock
iret
dec
xchg
insl
lods
pop
adc
xor
jbe
push
sub
cmpb
shll
sub
adc
pusha
mov
outsl
push
lock
push
call
test
jne
mov
cmp
cmp
inc
stos
and
sbb
je
sahf
push
insb
ret
loopne
adc
mov
les
xchg
int3
mov
int
fs
out
fbld
outsb
fisttpll
imul
andb
fsqrt
mull
dec
push
fdivrl
push
xchg
push
imul
dec
adc
jecxz
les
cmp
arpl
dec
add
rorb
jb
adc
fwait
jbe
or
in
push
dec
mov
pop
lahf
pop
sub
or
or
outsl
mov
and
out
adc
mov
fildll
or
push
test
insb
sub
xchg
lods
mov
out
loop
xor
divl
aaa
fidivs
test
xchg
nop
cmp
mov
insl
sahf
adc
jecxz
adc
rorl
mov
shll
mov
mov
iret
dec
push
inc
xchg
test
mov
repz
or
push
sub
push
roll
fwait
and
xlat
push
add
push
add
repz
mov
lods
mov
sub
lahf
mov
cmpsb
lret
cld
pop
adc
mov
push
das
xchg
mov
xor
popf
sbb
aas
mov
and
std
inc
lcall
xor
adc
pop
lea
addr16
push
mov
dec
in
and
add
js
dec
and
mov
jp
push
inc
mov
adc
pop
or
add
imul
and
cld
mov
mov
sub
ret
mov
push
das
jno
and
inc
ljmp
add
sub
das
cmp
xchg
mov
cmp
push
cwtl
adc
int3
outsb
push
ja
xor
jae
xor
pop
push
mov
inc
inc
cmpsb
and
cmp
adc
and
rorl
movsb
add
shrb
aaa
pop
imul
icebp
insl
dec
pusha
das
inc
sub
cmp
jp
sub
addr16
lods
pop
sahf
into
xor
movsb
mov
inc
lret
dec
add
fidivl
shll
add
adc
push
iret
inc
sub
and
cmc
push
push
insl
push
int
add
add
das
mov
imul
in
cli
sbb
sub
rcrl
push
push
sbb
mov
loopne
bound
mov
inc
adc
sbb
test
push
addr16
add
mov
push
jo
je,pn
int
iret
push
add
movsb
sbb
and
lods
jl
cmp
add
mov
xor
ljmp
in
leave
lods
shrb
pop
aam
mov
jp
push
adc
push
cmp
xor
or
lret
pop
mov
adc
jbe
lret
lods
pop
sub
test
les
jmp
dec
lods
xor
loopne
inc
cltd
dec
in
push
int
outsl
lods
cmpsb
test
and
loope
shlb
outsb
and
and
jno
ja
std
pusha
mov
add
add
lea
dec
sub
mov
pop
inc
cli
push
lock
push
xchg
adc
hlt
cmpsl
mov
lds
push
fildl
sbb
pop
sahf
adc
fbstp
in
in
inc
scas
mov
mulb
mov
insb
pusha
jb
popa
fnstsw
pusha
fdivs
mov
cmp
pop
addr16
push
or
cmp
mov
adc
adc
and
cmp
ss
mov
mov
mov
pop
pop
fdivrl
push
inc
sub
or
cmpsb
xchg
jnp
cmc
mov
adc
sbb
sub
test
fildl
fdivl
popa
lock
hlt
call
enter
stos
in
je
add
jge
mov
bound
std
popa
sbb
ret
es
shll
pusha
in
call
or
lock
out
add
mov
sub
mov
xor
and
mov
orb
or
pop
test
test
aaa
test
pop
xor
rclb
mov
mov
loope
rcr
add
mov
aaa
out
scas
or
mov
push
out
fs
or
leave
test
sub
cmp
int
push
icebp
sahf
add
jno
push
xor
rcrl
rcrl
std
jnp
adc
push
sub
mov
xlat
lret
jns
mov
push
shll
cmp
mov
and
add
nop
mov
xchg
and
xor
jge
jp
lds
mov
or
inc
xchg
adc
adc
push
sub
loope
adc
push
hlt
fldenv
sub
or
add
and
bound
les
sub
or
test
das
insb
stos
aaa
lods
out
add
sbb
jle
or
add
pop
test
aas
lahf
ret
jbe
mov
pop
lcall
xchg
ja
outsl
sbb
div
jo
jb
jne
jp
sub
sbb
xchg
mov
clc
loopne
psubsw
xor
fisubs
loop
sbb
adc
andb
xor
dec
xchg
xor
mov
sub
cmpsb
and
or
and
sbb
add
inc
loope
loope
add
push
xchg
jle
test
loop
sub
es
out
loopne
es
mov
pushf
sbb
adc
add
cmp
fidivl
pop
iret
add
pop
into
cmp
jno
push
cmpsb
push
add
ja
push
fisubl
sbb
les
add
pop
xor
mov
and
repz
add
or
adc
loop
jnp
cmc
jge
push
adc
js
jns
adc
sub
scas
ljmp
inc
sar
lods
and
outsl
pop
cmp
xchg
ss
push
add
fstps
mov
add
add
sbb
push
fistpl
xor
das
add
xchg
inc
add
aam
sbb
push
mov
push
and
push
leave
mov
pop
aas
lret
mov
inc
imul
add
pusha
or
mov
pop
clc
add
add
scas
mov
in
loope
insl
inc
xor
in
ret
add
pop
add
ds
adc
inc
inc
adcl
mov
push
shrb
adc
pop
mov
jmp
mov
testb
or
test
add
xchg
mov
inc
lods
adc
adc
and
xor
adc
in
out
cs
lock
fdivrs
fdivr
dec
fdivrs
mov
adc
inc
inc
jo
pop
popf
sahf
imul
lods
imul
jb
orb
ljmp
sub
mov
stos
pop
adc
dec
mov
jbe
inc
add
jg
mov
pop
mov
repz
out
jg
das
add
push
rclb
dec
fcomps
sbb
xor
mov
mov
inc
roll
orb
and
je
jmp
mov
fmuls
mov
lcall
adc
cmp
ss
shrb
push
push
sub
and
dec
push
push
push
dec
mov
mov
xchg
ds
adc
sbb
sbb
aaa
scas
sbbl
push
mov
call
test
add
insb
dec
lods
bound
xchg
add
mov
mov
popa
sbb
add
das
stos
mov
xor
shlb
lods
mov
add
sbb
imul
andb
push
inc
jmp
xchg
imul
add
push
or
je
je
dec
sbbb
sbb
push
daa
dec
sub
cmp
scas
and
and
pop
push
adc
ficompl
pushf
scas
out
insb
lods
cmp
push
jge
sbb
pop
divps
aam
and
mov
mov
es
mov
and
adc
rclb
jle
das
ret
sahf
ss
or
or
cld
sub
js
js
or
arpl
cmp
shl
inc
sarb
out
adc
fldl
pop
ja
fwait
insb
cs
pop
sti
inc
and
int3
loop
scas
dec
ljmp
or
dec
pxor
pop
inc
cmp
mov
lds
test
jl
cmp
adc
pop
push
inc
add
rolb
rorl
mov
jmp
and
sbb
mov
jmp
sbb
pop
inc
stc
mov
sbb
lds
or
add
and
push
jmp
sbb
rorl
push
and
inc
sti
aaa
push
aaa
in
outsl
cmp
add
sbb
push
inc
adc
jb
addb
dec
imul
popa
inc
mov
add
mov
and
fbld
jp
xor
sbbl
pop
adc
and
test
add
sbb
sbb
cld
jg
fdivr
mov
dec
xor
insb
add
push
in
mov
sbb
roll
dec
cltd
add
les
movsb
mov
xchg
add
test
add
sbb
or
and
lea
andb
push
sub
mov
mov
arpl
cli
xchg
and
sub
and
sbb
sarl
cmp
shll
shll
dec
push
xchg
lahf
sbb
mov
adc
les
loopne
push
mov
sti
and
mov
push
pop
jb
xor
sahf
pop
xor
lock
les
or
add
sbb
xor
mov
push
dec
inc
iret
jne
dec
push
cmpsl
movsl
cld
push
cmp
sbb
std
jp
cmp
push
or
inc
and
xor
dec
pop
lcall
mov
mov
scas
mov
inc
pop
daa
call
cli
xchg
rcrl
loop
mov
data16
sbb
and
and
jnp
inc
lods
or
adc
sbb
test
xor
negb
inc
lcall
stos
add
clc
adcb
jne
inc
cmp
jecxz
dec
pop
sub
sub
mov
add
push
inc
hlt
inc
ja
insb
daa
mov
insl
stc
sbb
aas
scas
mov
mov
stos
ror
adc
movl
das
sbbb
cmp
jle
cmp
cld
mov
shl
xchg
push
push
xchg
or
adc
stos
lahf
hlt
add
push
and
fstpl
push
cmc
shl
cltd
iret
test
adc
subl
sub
push
in
or
or
pop
and
fdivl
add
adc
pusha
add
mov
cmp
orb
or
mov
mov
xchg
jo
mov
push
imul
jmp
adc
andb
lock
push
test
insl
imul
lret
sub
and
dec
lds
call
xor
dec
ds
xchg
popf
pop
add
sub
test
and
pop
push
or
and
scas
int
xchg
fmulp
inc
jne
jp
aaa
dec
pop
cltd
jmp
cmp
loop
iret
orb
out
cmpsl
loop
mov
add
test
xor
jle
adc
cmpb
subl
mov
sbb
inc
mov
movsb
lahf
jbe
sub
or
and
lods
add
jge
inc
je
inc
ret
add
push
and
ret
lahf
pop
inc
sbb
push
addr16
mov
xchg
mov
jge
inc
push
test
and
xchg
mov
cmpsl
nop
cmpl
dec
in
cmc
outsl
jae
mov
aam
xorb
es
or
call
fdivp
test
fiaddl
xor
fcoms
daa
mov
push
shrb
es
iret
push
or
add
or
xor
mov
lahf
nop
rcpps
jecxz
and
aaa
add
into
ljmp
cmp
push
in
pop
mov
xor
add
fs
mov
cmp
add
add
mov
xor
movb
aaa
add
into
popf
dec
inc
and
cmp
sbb
lock
or
xor
jno
or
sub
jo
data16
or
scas
cmp
and
mov
push
cmpsl
js
and
ret
xor
push
sbb
adcb
jp
insl
inc
or
add
cmp
cmpsb
fiadds
add
hlt
adc
and
adc
stc
fsubl
and
mov
push
and
xchg
sub
xchg
or
iret
mov
fimull
lods
sbb
or
shll
push
sbb
sub
push
and
into
xor
xor
int
int3
mov
dec
inc
leave
lahf
and
sub
or
mov
push
fs
les
lahf
mov
push
adc
push
arpl
xor
and
enter
hlt
or
or
add
and
stos
bound
andb
add
aad
push
mov
stc
aam
pusha
loop
or
xor
jbe
lock
cmc
loop
cmpb
cwtl
or
xchg
mov
int3
dec
sub
movaps
push
repnz
cmp
push
cli
inc
xor
in
test
imul
cltd
sub
and
xlat
push
call
and
sub
mov
xor
aas
clc
and
das
xor
out
lods
in
lods
iret
sbb
push
sub
roll
xchg
rorb
push
movsl
call
dec
les
fidivrl
adc
pushf
lcall
js
sbb
ds
add
aas
cmpxchg
push
out
icebp
cmpb
shr
and
sub
jp
fnstenv
in
mov
and
jl
sbb
cmp
add
add
shrb
push
add
pop
push
aad
inc
iret
aas
or
inc
arpl
jno
or
jl
mov
mov
outsb
mov
pop
or
mov
xchg
cmp
xlat
pop
inc
mov
je
push
into
mov
repnz
and
stos
jb
mov
movsb
stos
jne
cs
add
in
lret
cmp
mov
daa
pop
dec
fsubs
jbe
rolb
fwait
stos
call
and
popf
cmp
mov
adcl
mov
cwtl
cwtl
out
lods
sub
and
cltd
push
push
cwtl
lods
push
cs
xchg
xchg
add
out
mov
xchg
xchg
and
xchg
mov
rol
movsb
xchg
xchg
aad
popa
mov
add
adc
fwait
adc
xchg
loope
xchg
xor
push
int
or
mov
jp
xor
mov
and
in
add
nop
xchg
xchg
cltd
mov
sbb
lcall
dec
cmp
and
xchg
jg
jmp
push
adc
jbe
pop
sarl
mov
cmpsl
fidivs
mov
cmp
into
push
pop
and
aaa
inc
xchg
mov
mov
fiadds
call
or
cmp
aad
imul
aad
or
add
loop
inc
add
and
sbb
inc
cmp
adc
dec
and
mov
add
sbb
sbb
test
adc
add
push
sbb
mov
mov
push
mov
mov
add
add
jmp
adc
mov
xsavec
fisubs
insb
orb
sbb
dec
or
lret
inc
adc
adc
clc
add
fisubrl
add
pop
jo
adc
sub
sbb
push
das
push
daa
adc
push
push
adc
js
jo
in
or
in
inc
sub
cmp
mov
mov
in
cmp
aas
ret
sub
push
lea
xor
test
es
adc
jmp
addb
fbld
adc
xor
idivl
lahf
mov
sbb
and
mov
mov
dec
aad
and
or
imull
push
and
stos
mov
adc
in
fcoms
push
xchg
adc
aaa
or
jp
movsb
fwait
sub
divl
sbb
xchg
adc
sarb
sub
pop
inc
test
lahf
dec
and
in
loopne
out
jle
stos
jbe
jle
inc
inc
pushw
iret
movsb
les
pop
rcr
ret
adc
adc
mov
ja
das
das
xchg
push
cmp
addr16
daa
inc
aam
daa
mov
fdivs
add
stos
sbb
std
push
bound
add
stos
lods
and
sbb
sbb
cmpsl
add
sbb
sbb
aad
or
mov
aad
testb
test
push
out
inc
sub
pop
popa
imul
aam
ror
jg
je
mov
push
cmp
add
bound
mov
dec
outsb
sbbl
daa
push
cmp
jecxz
adc
jle
xchg
mov
repz
scas
mov
xlat
push
fisttps
jmp
push
clc
dec
inc
pop
ret
adc
jecxz
or
or
pop
call
add
pop
in
pop
loope
in
sti
xchg
fxch
inc
movl
and
sub
mov
add
xchg
mov
notb
jne
addr16
add
pop
sbb
sub
aaa
cs
push
mov
pop
in
inc
shlb
rcrl
push
adc
xor
add
pop
inc
mov
mov
adc
xor
mov
inc
sub
add
cmp
xor
and
ret
sahf
outsl
fstpt
xor
pop
in
xor
test
insl
movzbl
jne
out
push
mov
add
adc
and
mov
popf
shll
aaa
and
popa
stos
jns
add
mov
es
sub
sbb
inc
das
stos
inc
sbbb
sbb
popf
sub
fnsave
add
push
daa
inc
dec
ja
leave
lcall
rcr
push
mov
lods
je
add
fisttpl
or
bound
jb
pop
stos
adc
add
mov
mov
adc
add
sub
mov
js
jo
test
push
push
sub
mov
add
arpl
lock
icebp
into
mov
mov
cmp
stc
and
push
mov
repz
fwait
clc
adc
mov
fcmovu
lcall
push
fsubrs
jo
xchg
bound
ja
inc
dec
bound
mov
jnp
xor
xchg
add
cmc
mov
sbb
aad
int3
sub
lock
movsb
sbb
cmp
or
stos
xchg
or
mov
cmc
or
mov
add
dec
adc
dec
flds
insl
push
inc
aad
popa
mov
cmp
pop
and
and
sub
push
addb
pop
inc
dec
push
xchg
mov
jb
shll
imul
or
add
adc
jmp
iret
add
repz
xchg
data16
insl
xchg
insl
insb
jnp
daa
data16
mov
pusha
jg
mov
push
sub
jae
fwait
xor
jns
mov
add
jo
add
lods
add
mov
pop
sbb
enter
inc
sub
ljmp
mov
fcompl
sub
adc
add
cmc
add
jo
jge
sbb
push
pop
dec
mov
sbb
and
cmpsl
ret
sbb
addr16
inc
sub
dec
test
jae
xchg
jns
incb
or
iret
daa
jne
fnstcw
add
lcall
js
sub
and
es
lret
movsb
xchg
mov
aas
adc
inc
adcl
in
ds
inc
push
mov
imul
popa
mov
insb
adc
es
sbb
mov
ficoms
lret
data16
and
ret
sysret
cmp
add
jp
mov
cmp
mov
mov
pop
jbe
insb
fdivrs
push
cmpsl
dec
emms
and
lcall
in
mov
dec
xchg
or
addb
scas
mov
ficomps
shrl
outsb
or
add
adc
sbb
adc
mov
cli
pop
sti
dec
xor
and
jmp
xorl
adcb
lock
lock
cmpsb
xchg
sub
sbb
mov
add
lret
inc
sub
cs
sahf
jmp
fldcw
cmp
xlat
cs
and
mov
add
int3
fists
adc
ret
aam
pop
add
inc
in
filds
sbb
and
sbb
addr16
jae
icebp
lahf
iret
lea
pop
andl
or
call
iret
iret
cwtl
icebp
add
pop
xor
push
mov
movsb
das
cld
insb
mov
sbb
mov
mov
pop
or
in
lock
add
xor
cmpsl
sbb
movsl
xor
ss
xor
push
ja
add
movsb
cmp
add
nop
jnp
arpl
pushl
pop
fs
ret
mov
fldt
daa
movsl
repnz
inc
sbb
add
xchg
pop
or
add
mov
pop
sarb
sahf
or
dec
jp
insl
push
addr16
mov
popa
mov
pop
lret
dec
jo
ret
add
adcl
jnp
fsubrs
inc
adc
out
mov
loope
jo
xchg
in
test
ret
lea
insb
test
fadds
cmp
mov
and
or
sbb
xlat
mov
and
rcll
or
or
sbb
fildl
sti
mov
xchg
test
mov
xchg
cmc
es
jmp
inc
mov
testb
imul
leave
lcall
test
pop
es
and
xchg
fcom
mov
fisubrl
mov
movsb
inc
cmp
dec
push
inc
js
jo
dec
sbb
sbb
cmpsl
dec
adc
jecxz
ret
flds
pop
enter
test
test
and
and
inc
xchg
hlt
xchg
lock
push
lock
add
rcrb
into
into
ret
popf
sti
xor
pop
pop
rolb
xor
dec
sbb
dec
andl
push
mov
gs
mov
insb
xor
jo
or
rorb
cwtl
mov
xchg
stos
gs
inc
cwtl
push
andb
mov
xor
pop
add
fcoms
scas
imul
cmp
jnp
pop
in
cmp
adc
dec
fstps
inc
lods
inc
cmp
add
xor
xchg
into
xor
insl
jb
jp
jbe
cmc
insb
shlb
or
cli
aaa
fs
dec
rcr
or
xchg
xor
mov
icebp
add
rorl
lahf
repz
jo
cmp
loope
in
mov
add
push
sbb
pop
or
hlt
ret
ficomps
xor
xor
in
mov
xlat
pop
inc
in
pop
ret
fdivrp
arpl
sarb
add
arpl
push
adc
add
push
inc
mov
into
int
mov
xlat
sbb
or
cmc
add
or
add
scas
push
sti
rol
jns
into
fwait
inc
add
and
imul
into
das
sbb
insb
add
jecxz
xchg
jl
xor
scas
cmpl
fcoms
mov
scas
insb
cmpsb
ja
aam
repz
imul
imul
xor
push
lahf
aam
sub
jb
xor
mov
movsb
popa
sub
andb
test
mov
lock
pusha
pop
sbb
push
int3
xchg
movsb
and
jmp
sub
jns
cmp
out
fs
dec
dec
insl
leave
lods
movl
divl
icebp
add
iret
roll
or
lods
mov
mov
mov
add
inc
cmp
ret
jp
push
in
inc
inc
pop
stos
adc
lahf
icebp
xchg
mov
adc
pop
movsl
imul
jmp
jmp
inc
call
dec
pop
mulb
int
inc
out
shrb
aaa
or
xchg
xchg
or
sahf
mov
add
sti
into
leave
stc
pop
sub
jns
push
sbb
in
pop
out
ret
loopne
add
das
pop
icebp
loopne
lods
popa
outsl
or
jno
shlb
or
pop
out
push
dec
add
loope
mov
leave
jge
and
iret
addb
cmpb
clc
jo
test
into
or
hlt
jecxz
dec
inc
nop
dec
mov
lahf
pop
shll
pop
pusha
inc
sahf
add
cwtl
pop
adc
orb
push
outsl
jbe
fcmovu
xchg
outsl
pusha
loopne
sub
stc
sahf
test
ret
fs
push
pusha
sbb
mov
xchg
mov
mov
and
mov
cmp
inc
call
scas
push
xor
loope
mov
in
xor
int3
popf
pop
xchg
dec
popaw
dec
lahf
push
mull
out
add
mov
mov
and
loopne
leave
sbb
mov
in
pop
add
leave
pusha
dec
scas
fwait
cmp
add
aaa
dec
and
bsr
test
divb
sarb
aaa
mov
popf
adc
sbb
jbe
mov
jbe
lea
jne
js
leave
add
mov
add
outsl
jle
repz
sbb
in
stos
and
jl
pop
incb
les
jae
stc
fbstp
push
cwtl
adcb
push
lret
aaa
sbb
pop
or
sbb
outsb
mov
ficomps
insb
xor
inc
add
ljmp
xchg
pop
and
dec
imull
sbb
lea
and
rcrb
test
insb
pop
out
sbb
leave
pop
mov
pop
daa
add
push
adc
fwait
sub
or
aaa
mov
and
or
mov
imul
sbb
gs
cmp
pop
rolb
mov
fwait
sub
pop
sbb
popf
andb
inc
enter
push
push
add
or
mov
mov
push
mov
adc
adc
inc
int3
fsubs
mov
jg
mov
sbb
shll
in
fisubl
add
jmp
movsl
pop
or
cmp
mov
push
sbb
add
aam
push
lret
jb
repz
jmp
xchg
or
adc
ficoms
cmp
jne
mov
stos
add
addr16
mov
or
fwait
sti
mov
or
imul
scas
add
mov
in
imul
movl
mov
adc
insl
add
jbe
sahf
jge
or
arpl
mov
std
push
popa
jmp
movsl
or
and
xor
xchg
call
jno
cmp
push
and
out
fucomi
xchg
imul
jae
shll
or
inc
jbe
pushl
mov
mov
push
das
add
jne
in
sti
add
daa
sbb
pop
xor
lret
sub
popf
popf
lock
fbstp
leave
push
fwait
sub
jae
sbb
stc
mov
sbb
andb
in
sbbl
cmpsl
sub
push
mov
pop
mov
dec
jo
packssdw
adc
stc
or
fldenv
aad
cmp
jmp
lds
add
fstpt
pusha
pop
fstp
xor
and
jecxz
in
int
inc
xchg
int
or
pushf
fsub
in
add
or
cmp
call
cmp
loope
lds
cltd
popl
push
lea
and
jnp
mov
ret
mov
insl
std
and
clc
cmp
pop
sbb
clc
cmp
fisubrl
mov
sub
mov
stc
icebp
push
andb
test
jae
push
push
int3
pop
inc
inc
lds
fisubl
add
lods
loope
push
sti
fstpt
add
mov
mov
int
aad
decl
ljmp
imul
test
stos
cmp
add
roll
in
add
lods
push
fbld
loopne
cmp
clc
jge
les
pop
rcll
cli
lds
rcr
arpl
clc
jl
int
mov
lods
cli
das
jge
test
insb
jmp
adc
mov
sub
xor
push
insl
xor
jmp
inc
sbb
mov
inc
add
adc
aas
add
inc
add
outsb
jae
inc
add
push
mov
inc
inc
mov
daa
inc
lahf
sbb
mov
call
cwtl
and
fdivs
cs
int3
adc
movsb
loopne
int
pop
mov
test
ss
test
sbb
pop
cli
test
mov
cmpsb
sub
test
pop
shr
rol
mov
mov
add
imul
mov
addl
in
lods
pop
int3
gs
mov
popfw
loop
inc
and
push
jnp
and
mov
sti
aam
lods
mov
mov
mov
mov
jae
xor
pop
add
pop
adc
mov
ja
push
and
or
loopne
in
and
sbb
imul
arpl
jne
and
mov
jae
negb
pop
jg
scas
negl
ss
jge
add
add
insl
lahf
dec
cmp
sbb
outsl
ja
mov
xchg
and
shr
sbb
inc
mov
ficomps
push
jp
sub
cmp
cld
mov
pop
fcmovnu
add
ja
and
es
dec
add
mov
mov
xchg
cwtl
mov
add
sarb
stc
cmc
xor
das
sti
sbb
xchg
pop
sub
jbe
mov
mov
sarb
pop
test
cmpsb
mov
test
pop
mov
enter
sbbb
jge
call
loope
outsl
pushf
and
jmp
js
fsts
hlt
movsl
adc
mov
lds
adc
cs
les
ljmp
and
pop
push
xorb
insb
fildl
test
jecxz
int3
mov
fdivl
add
ljmp
bound
movsl
pop
ret
lea
mov
sub
roll
adc
cli
ss
mov
call
aad
xchg
loop
push
testb
inc
stc
aad
add
in
outsl
outsl
adc
insb
pusha
popa
dec
in
mov
xchg
add
jb
mov
mov
mov
and
data16
add
lock
jecxz
cmpsb
jg
add
mov
test
shll
xchg
fists
cmp
adc
adc
shll
leave
mov
mulb
popa
pusha
movsl
les
cmpb
aad
mov
mov
rolb
dec
and
jbe
and
pop
mov
and
push
into
gs
outsb
jnp
add
in
push
inc
js
push
stos
cltd
mov
cwtl
cmpsl
add
cmp
test
movsl
test
test
sar
rclb
xchg
loope
pop
mov
or
inc
fstl
sbb
shll
in
push
mov
mov
or
sub
xchg
shrl
dec
dec
addr16
or
push
daa
ljmp
insl
pop
enter
add
stos
sub
es
xchg
ret
jmp
outsl
cld
test
inc
jl
repz
dec
in
mov
mov
mov
xchg
sbb
je
mov
test
inc
pop
clc
movb
repnz
fidivs
icebp
in
sbb
in
orb
mov
mov
adc
insb
cmp
in
pop
mov
daa
rol
adc
movsl
das
or
or
inc
imul
arpl
pop
loop
xor
je
xor
inc
xchg
rclb
sbb
inc
roll
jp
pop
cmp
or
mov
and
out
mov
mov
outsl
sbb
xchg
pop
ljmp
sub
sbb
test
idivb
push
or
jle
std
add
hlt
push
int
mov
int3
inc
cld
cld
fsubrl
xchg
fiadds
add
sbb
jae
int3
mov
mov
push
cmp
xchg
cmp
pusha
pop
out
inc
jecxz
mov
fidivrs
scas
arpl
ja
lock
cmpsb
fwait
loope
sbb
repz
cmp
popa
paddusb
dec
cmp
jmp
mov
imul
scas
scas
orl
pop
cltd
cs
xor
mov
push
inc
pop
sti
scas
push
stos
pop
or
sub
test
rorb
add
pop
sbb
ficomps
and
je
and
jne
cmpsb
push
jbe
int
pop
lea
mulb
das
mov
push
jo
add
repnz
jne
xchg
dec
cmp
shll
xor
pop
fistpl
fdivrs
add
sub
add
mov
imul
fstpt
adc
cmp
sarl
add
mov
mov
xlat
mov
pop
fisubrl
pusha
mov
ret
jbe
sbbl
dec
mov
add
vcvttss2si
pop
pushf
and
mov
fiaddl
mov
cmp
inc
cmp
mov
push
dec
pop
adc
rcrl
sub
ja
mov
push
push
nop
loop
fldl
shlb
lahf
add
mov
lock
pop
pop
inc
lea
fimull
js
dec
icebp
push
lods
sub
mov
cmpsb
jp
in
lock
add
aas
pop
push
dec
aaa
or
insb
sbb
call
insl
mov
mov
adc
fldt
lds
adc
adc
push
mov
loope
jg
push
cmp
rcrl
push
rcrb
push
mov
fadd
fsubr
or
or
fcmovb
xorl
lret
or
outsl
sarb
xor
add
mov
mov
inc
and
fnstenv
cmpxchg
xchg
and
fistpll
mov
pop
pop
mov
jo
iret
orb
std
scas
in
popf
lods
or
jle
xor
shrl
mov
data16
out
in
lahf
jno
lcall
or
test
fldt
or
mov
das
xor
or
or
or
sub
pop
xchg
popa
fcmovnbe
sub
std
movsl
aas
js
dec
fucom
mov
loopne
push
addr16
mov
scas
mov
cwtl
sbb
fsubl
lock
fmull
mov
dec
test
sub
mov
lahf
adc
sti
js
cltd
ja
mov
sbbl
in
test
fcmovnbe
mov
out
cmpsb
ret
dec
fldt
push
xchg
adc
pop
mov
push
pop
inc
scas
out
in
mov
push
pop
fidivs
les
push
cld
sub
testb
hlt
scas
ret
fcmovne
sub
mov
inc
movsb
stos
xor
push
mov
pop
inc
cmp
test
mov
es
or
daa
into
data16
push
push
mov
cmp
dec
add
bnd
ret
inc
pusha
dec
imul
mov
fst
outsb
sti
mov
cmp
aas
push
mov
mov
out
cli
insb
lea
imul
leave
fcompl
xor
lds
fstp
mov
aaa
xor
push
push
jecxz
sbb
movsb
outsl
mov
in
push
out
ja
outsb
dec
hlt
sbbl
sahf
cmpsb
mov
sbb
das
leave
inc
movups
sbb
pop
arpl
test
add
fmuls
ljmp
rcr
int
jnp
mov
mov
frstor
sub
js
adc
sarb
adc
popa
mov
pop
and
lcall
pop
pop
and
cld
sahf
pushf
or
inc
loope
cmpsb
popf
jo
cmp
xchg
mov
arpl
or
push
pop
bound
scas
sub
gs
loopne
xchg
cmc
stos
dec
mov
fildll
mov
notl
scas
aaa
fisubrl
pop
jmp
aaa
hlt
xlat
fs
popf
out
leave
lahf
cld
cmpsb
sbb
addr16
mov
test
sbb
test
mov
mov
mov
fucomi
jbe
pop
pop
ljmp
lahf
sbb
movsl
outsb
jecxz
mov
ja
cmp
pop
addl
lea
jle
pop
pushf
iret
ret
es
popa
pop
leave
sbb
ljmp
add
push
std
aam
jp
imul
orl
outsb
push
pop
mov
pop
das
inc
mulb
leave
sbb
push
mov
outsl
or
lahf
dec
out
addb
pop
jmp
iret
ds
ficoms
clc
inc
shlb
jb
popa
sbb
jbe
add
sub
xor
dec
xchg
out
pop
inc
add
push
add
push
jmp
in
xchg
mov
jnp
dec
scas
outsl
adc
fiaddl
mov
sub
push
adc
outsl
cltd
push
add
test
mov
cwtl
xchg
inc
or
inc
shr
xchg
jnp
xchg
mov
push
xor
dec
stos
and
mov
mov
decl
shrb
das
fstp
lcall
stos
daa
in
xor
arpl
out
jns
mov
imul
mov
outsb
add
out
insl
xchg
pop
and
dec
mov
mov
lea
rolb
cmp
fdivl
imul
pusha
mov
je
mov
and
insb
sti
xchg
repz
mov
dec
adc
pcmpgtw
inc
xor
rcll
dec
rorb
mov
mov
repz
mov
sub
xchg
ja
js
add
jl
mov
fwait
stos
in
adc
andb
cmpsb
xchg
pop
pop
inc
fisttpl
add
in
fisttps
pop
dec
adc
pop
dec
pushf
pop
and
pop
out
cmp
inc
and
sbbb
mov
dec
cwtl
pop
scas
xchg
pop
loopne
jmp
lds
xor
mov
into
xlat
adc
push
jno
addr16
push
and
xor
mov
pop
inc
or
adc
cltd
sub
mov
jno
pop
inc
divl
xor
movsl
decl
int
or
cmp
fsts
cli
xor
sub
ja
jne
scas
push
aam
add
aaa
mov
sarl
rcrl
ss
call
test
xchg
loop
mov
movsb
test
test
or
aad
out
push
inc
adc
mov
adc
push
jmp
pop
clc
push
pop
sbb
mov
sbb
cs
outsb
xchg
jns
sbb
cmp
push
lods
or
fwait
shll
cmc
das
xchg
mov
push
lea
hlt
xor
mov
add
jmp
out
or
testl
lea
je
insl
clc
ret
mov
fstpl
cmc
xor
xor
lret
addl
jbe
sub
and
dec
push
je
push
mov
xchg
nop
sbb
jb
sub
jp
or
sbb
xor
xor
insl
inc
xorb
or
adc
xchg
popf
imul
ds
jge
insl
push
mov
ljmp
add
daa
mov
cmp
mov
into
mov
in
fisubs
inc
insl
sti
sbb
sub
cli
ret
adc
in
out
sub
pop
jge
fs
sbb
insl
mov
sub
cmpl
xor
mov
outsl
add
jg
inc
fldl
mov
int3
ret
fisubrs
jne
mov
testb
mov
pusha
or
pushf
data16
mov
shrl
pop
les
arpl
ret
cmp
cmp
loope
cmp
outsl
outsb
add
cmp
sub
call
pop
int3
iret
mov
xlat
call
add
hlt
into
mov
movsb
mov
mov
scas
mov
test
mov
cmp
test
cmp
mov
push
in
adc
fstl
in
push
push
lea
push
sub
ja
mov
mov
fwait
and
inc
sub
cmpsb
mov
xchg
mov
in
test
adc
ss
popf
aaa
dec
xchg
daa
rorl
int3
push
sbb
adc
pop
push
test
test
pop
push
push
ret
sbb
lods
jne
sbb
or
xor
outsb
mov
mov
jae
sbb
jle
mov
xchg
mov
aaa
or
mov
popf
andb
stc
cs
lahf
mov
orb
cmp
mov
xor
aad
int
inc
icebp
push
xchg
shll
lret
stos
mov
push
setns
in
aam
cld
dec
or
cwtl
mov
sbb
cs
lods
aas
out
or
mov
fdivrl
lret
push
inc
lcall
xchg
int3
hlt
mov
insb
fmuls
lahf
lods
cmpsl
fcom
cwtl
mov
adcb
or
lds
iret
jno
mov
lock
push
jg
jb
lret
leave
fdiv
cmpsb
sbb
pop
imulb
jle
neg
inc
and
fisubs
divl
imul
fldt
jecxz
std
add
gs
mov
enter
int
call
pop
scas
fidivrl
aam
adc
divl
lea
mov
sub
test
xor
lret
xor
ret
fsubrl
ficoml
pop
fsubrs
aaa
mov
push
xor
sub
lret
mov
add
add
push
and
and
add
stos
mov
ror
xor
xchg
bnd
add
mov
pop
outsl
xchg
ret
mov
mov
jo
pop
popa
and
cmp
lds
mov
fcom
pop
jne
push
insl
mov
sub
dec
adc
out
movsl
leave
inc
sbb
or
xchg
mov
adc
in
imul
lods
lods
pop
and
aas
stc
xchg
notb
icebp
ss
dec
xor
lods
mov
mov
sub
pop
icebp
push
repz
pop
pop
dec
pop
or
cmpsb
push
push
rcr
xchg
fsubrl
xor
movsl
cmp
mov
xchg
js
jae
inc
test
mov
ret
and
pop
loopne
cmp
sub
mov
sbb
and
fstpl
aaa
in
lods
and
sbb
cmpl
jg
pop
xchg
sub
in
lret
incb
out
int3
sbb
or
lods
adc
stos
sbb
jecxz
push
outsl
mov
gs
out
and
add
or
jecxz
xor
mov
outsb
das
mov
sahf
pavgw
sbb
push
ficomps
repz
movsl
xor
test
mov
pop
push
add
std
mov
dec
jbe
icebp
sbb
jle
jo
xchg
cmp
in
mov
mov
cs
je
loop
xchg
sbb
sub
rorl
sbb
in
add
mov
cmp
iret
call
cmp
mov
mov
lret
mov
xlat
or
out
mov
pop
leave
adc
push
imul
rclb
dec
shlb
cmp
mov
inc
sub
inc
jo
negl
xchg
mov
cld
add
nop
pop
imulb
lcall
in
jle
loop
mov
mov
aas
pop
rorl
push
sbb
pop
xor
xchg
fcompl
loope
lahf
push
push
add
xchg
je
in
inc
xor
gs
push
pop
mov
pop
adc
fsubrs
push
nop
mov
fdiv
xor
ljmp
sub
int3
xchg
add
test
xor
lods
fs
dec
fimull
xor
in
xchg
ret
dec
and
pop
rcr
nop
imul
outsb
fildl
mov
cs
and
push
mov
sub
in
sbb
insl
adc
fucomip
mov
mov
jno
mov
adc
mov
test
mov
rcrb
dec
lret
adc
insb
ljmp
into
inc
hlt
rolb
in
add
cld
int
aaa
bndstx
fstpl
addr16
jne
xchg
sahf
fsubrs
shrl
push
mov
fisubrs
mov
jecxz
addb
or
mov
sbb
rolb
fidivl
mov
ret
jg
mov
stos
or
int
rclb
retw
rclb
fdivs
out
push
cmp
jne
xchg
and
mov
out
jb
or
inc
sbb
and
cmc
xor
and
xor
mov
sti
adc
push
aaa
ljmp
movsl
add
jne
cltd
and
js
jns
data16
xchg
sub
ja
fadds
arpl
pop
aad
mov
inc
push
ds
xchg
lods
in
cld
fistl
dec
nop
popa
sub
popa
arpl
fwait
or
aaa
push
sarb
into
rorw
jle
push
and
int3
cmp
mov
mov
push
mov
and
add
cmc
lcall
sbb
inc
mov
aad
and
test
les
imul
fs
lods
sbb
add
ret
jg
jbe
in
push
ljmp
mov
test
cmp
pop
scas
test
cmc
jecxz
stos
mov
lds
add
sub
mov
mov
lock
shlw
sbb
das
sahf
sarl
scas
fistpll
push
hlt
stos
mov
shl
int3
aaa
cmp
insb
mov
sub
mov
add
sbb
test
push
es
out
add
js
ret
mov
mov
pop
jne
pop
ja
sbb
lock
push
aam
push
loope
stos
inc
xchg
ljmp
fwait
xchg
rcll
sbb
pusha
mov
cmp
inc
fcmovnbe
push
insb
icebp
mov
sub
ja
loope
or
pusha
int
jecxz
jg
sbb
push
pop
sub
mov
pop
aam
rorl
inc
xor
movsl
ret
add
mov
aam
mov
sbb
sbb
shll
xchg
mov
loope
icebp
mov
fildl
loop
imul
imul
dec
out
cmp
inc
jp
sub
inc
int
incb
inc
xchg
push
fidivs
jge
pushf
or
std
inc
clc
ja
ja
and
lods
mov
mov
pop
adc
adc
sub
xchg
jnp
popf
pop
sbb
pop
dec
ds
data16
mov
inc
or
lds
iret
insb
insb
insl
pop
mov
xor
std
int3
ljmp
adc
push
vpminub
loope
cwtl
cmp
jmp
dec
jecxz
xchg
movsb
dec
int
inc
or
imul
mov
loopne
into
and
mov
push
add
adc
or
in
cmp
jae
popa
pushf
adc
jp
mov
es
mov
dec
pop
dec
mov
das
inc
pop
pop
adc
jne
scas
ds
loopne
mov
mov
sbb
daa
nop
add
xchg
and
jne
cmp
xchg
lcall
daa
cs
fwait
ja
bound
mov
fs
mov
mov
outsb
mov
bound
data16
dec
push
xor
test
test
push
cmp
lea
mov
mov
loopne
push
jns
mov
or
mov
enter
in
fidivrs
mov
cli
jmp
test
test
sub
xor
push
ja
sub
std
dec
jge
inc
push
outsl
dec
outsl
hlt
idiv
lods
mov
xchg
sarb
scas
sbb
add
test
inc
imul
stc
imul
insl
jnp
fwait
adc
mov
out
cmp
loopne
inc
mov
mov
mov
loope
aas
mov
je
cmp
pop
fidivrs
daa
jp
fcomps
outsl
fwait
sub
shll
xor
xchg
mov
lods
fdiv
divl
xchg
pop
or
or
xchg
sar
xor
test
jns
lock
in
mov
xchg
inc
stc
cltd
lock
mov
cmp
roll
fnsave
xor
adc
gs
cli
or
pushl
adc
imull
mul
or
sub
lret
sbb
inc
xchg
fisubrs
mov
cmp
pop
test
inc
popa
sbb
and
icebp
add
insb
lret
sbb
outsb
push
ficompl
pop
stos
inc
pop
pusha
aam
fstl
cli
add
add
pusha
xchg
enter
jg
push
lcall
mov
std
mov
js
outsl
shrb
outsl
faddl
dec
movsb
sbb
dec
in
fnstcw
sbb
mov
mov
sub
jl
jno
jo
lea
repz
cmc
nop
dec
push
mov
jecxz
insb
push
adc
lcall
test
stos
xor
test
add
fsubrl
and
shrb
subl
cmp
pop
add
fcoms
push
and
push
or
notb
out
or
or
fcomps
cmp
xlat
push
cmp
add
add
rorb
aam
imul
or
push
es
mov
add
imul
fldt
aaa
add
pop
add
adc
lcall
sbb
sub
sbbl
cmp
or
sysret
add
divl
adc
mov
fadds
dec
add
push
in
dec
add
lods
dec
sbb
sub
xlat
and
sub
or
add
inc
push
xchg
mov
mov
out
incl
fldt
bound
xor
mov
add
jnp
push
add
stos
adc
add
sti
adc
add
dec
syscall
mov
and
syscall
addr16
prefetch
or
or
cmpsl
and
pop
xchg
mov
fwait
adc
pop
jle
jl
xor
daa
push
jg
adc
push
lods
inc
in
sti
sbb
add
insb
inc
push
push
or
jne
mov
or
add
xlat
inc
daa
or
test
push
add
scas
jnp
push
pop
and
data16
xchg
xchg
out
sti
inc
negl
xlat
cmp
and
or
add
outsl
push
mov
adc
pop
jae
mov
push
or
pop
sbb
xor
mov
aaa
push
loope
add
fwait
xor
dec
jle
out
adc
and
lret
sbb
in
pop
jo
push
and
adc
xor
pop
or
or
or
and
decl
sahf
iret
mov
jno
jmp
clc
jbe
push
rcll
das
or
or
or
ret
sbb
or
out
sbb
sub
or
lahf
sarl
or
jg
pop
push
leave
pop
out
or
or
jmp
or
sbbb
or
adc
stc
sbb
push
or
pop
fistpl
aaa
adc
push
pop
mov
and
pop
add
and
adc
pop
testl
adc
inc
int
jge
sbb
push
add
or
arpl
mov
mov
aas
mov
popf
jecxz
lret
inc
and
shll
jle
aaa
push
aas
push
sub
push
or
sbb
dec
ja
out
jge
push
or
xchg
lcall
add
popf
cmp
adc
or
shll
add
pop
jae
jmp
adc
ss
pusha
fistps
cmpsl
dec
fwait
and
adc
inc
stos
clc
xor
jg
dec
std
pop
lock
mov
iret
adc
adc
and
es
push
pushf
add
adc
inc
jnp
dec
dec
push
test
or
in
adc
leave
mov
iret
add
push
out
mov
adc
adc
adc
sub
or
insb
xchg
addl
add
sti
pop
lahf
sbb
adc
push
xor
add
insl
nop
and
sub
sub
jnp
or
cli
adc
xor
mov
sub
fidivrs
pop
add
adc
mov
and
out
scas
or
aas
sub
or
imul
cmc
incb
shlb
pop
out
mov
jo
call
mov
sbb
and
fsubs
outsl
test
sbb
and
adc
pop
mov
jo
xor
push
shr
jge,pn
add
es
iret
mov
sbb
add
xor
lds
mov
dec
inc
xlat
pop
dec
movsb
addr16
sbb
xchg
inc
insb
cmc
mov
xchg
and
ds
or
cmp
inc
rorb
mov
adc
push
and
ret
and
and
movb
fstps
inc
addb
mov
movsb
mov
test
sahf
addl
mov
adc
iret
xorl
dec
test
enter
or
mov
inc
fsubrp
or
inc
xchg
mov
into
insb
or
pop
dec
adcb
lock
fwait
or
sbb
fisubs
jmp
pop
jns
mov
jnp
push
or
fistl
popa
add
dec
out
test
xor
cmp
sbb
das
adc
out
mov
mov
mov
cmp
outsb
dec
sarl
addr16
jl
pop
test
das
push
and
jnp
notl
sub
aaa
ss
sbb
inc
add
fcomp
enter
hlt
sub
movsb
jp
sub
cmp
dec
sarl
pop
sub
and
sbb
and
es
test
test
jle
sub
or
popa
mov
cs
inc
inc
out
adc
add
push
adc
gs
test
fsubs
push
data16
testl
mov
aaa
jg
fs
mov
mov
das
adc
adc
push
pop
mov
push
pop
adc
mov
add
pop
sbb
inc
lret
shl
inc
lcall
popf
jecxz
mov
xchg
repz
sbbb
push
andl
push
add
fs
mov
sbb
popa
js
fcmovb
fld
cmp
push
sbb
data16
adc
mov
pusha
sub
les
filds
outsl
lret
xchg
push
test
sub
js
push
xlat
push
dec
and
sub
lcall
and
popl
sub
idivl
push
push
dec
or
insb
ss
in
push
or
pop
outsl
or
sub
insb
mov
jp
add
jp
adc
xchg
or
inc
mov
jne
int3
pop
lcall
and
lahf
pop
xorl
push
xor
dec
repnz
sub
pushf
ds
xor
push
mov
xlat
cs
inc
mov
rcll
scas
add
outsl
pop
or
push
fs
push
jmp
pmulhuw
outsb
lods
pusha
xor
pop
adc
inc
xchg
xor
push
sbb
mov
pop
adc
push
cmpsb
lds
lods
or
mov
nop
fs
cmpl
add
fwait
adc
loope
sub
lcall
dec
cmp
int3
lret
ret
push
cmp
inc
xchg
pop
mull
mov
lret
fsubrs
popa
sbb
or
gs
xchg
and
outsb
adc
or
inc
cmp
mov
sbb
and
inc
in
sbb
dec
dec
sbb
insb
jbe
pop
xchg
add
xchg
mov
mov
gs
and
in
sub
push
mov
jno
aaa
xor
lret
and
mov
movsl
push
pop
jmp
ss
add
or
dec
js
gs
and
roll
xchg
xor
jo
aaa
pop
lret
xchg
cmp
push
sbb
iret
xchg
pop
aaa
sti
xchg
pop
jbe
shrl
lret
stos
xchg
fs
add
sbb
push
cmp
mov
jbe
xchg
push
and
sub
pop
enter
dec
and
xchg
mov
cmpsb
sbb
mov
or
sub
cs
mov
iret
pop
mov
or
es
popa
out
adc
add
arpl
push
nop
in
cmp
jne
ret
inc
in
add
and
lret
pop
jmp
or
int3
mov
sub
or
adc
fwait
pop
and
sahf
mov
add
scas
adc
sub
xlat
jp
das
adc
sub
int
sub
adc
jp
insb
ret
rcll
xchg
cmp
mov
xor
daa
pop
and
dec
sub
fidivs
stos
aaa
ss
ret
add
push
inc
ret
xchg
cmp
je
mov
or
ret
xchg
shll
cmp
xor
sbb
sbb
repz
testl
or
and
or
add
mov
ret
sub
and
xchg
pop
ss
bound
xchg
jnp
sub
addr16
fists
xchg
sbb
mov
bound
xchg
push
inc
out
lds
dec
insb
xor
fcoms
or
sub
pop
cltd
add
pop
nop
loope
and
hlt
jg,pn
pop
inc
sub
rcrb
inc
and
sub
jbe
and
and
mov
and
test
sbb
mov
jo,pn
out
int
and
test
popf
add
lcall
sbb
mov
mov
pop
sub
jns
imull
add
aam
sbb
int
insb
sbb
mov
add
popa
adc
or
adc
xor
lea
add
aaa
add
pop
push
dec
mov
push
adc
pusha
or
subb
fidivrs
test
inc
or
xchg
add
daa
dec
pusha
or
xchg
mov
xchg
outsb
stos
aaa
cli
mov
mov
inc
cmp
jbe
push
sbbl
sbb
pusha
mov
and
dec
fwait
or
out
cwtl
ljmp
or
sub
cmp
adc
rorb
push
or
test
arpl
ret
cmp
and
ret
outsl
data16
ja
add
or
insb
pop
addr16
addr16
fcmovu
sub
es
scas
pop
addb
fcomp
mull
pop
push
inc
push
cltd
cwtl
pop
push
mov
xchg
ds
sbb
insb
dec
out
cmp
mov
leave
mov
pop
mov
outsl
dec
fdivs
clc
sub
fs
jecxz
jmp
aas
movsl
in
xor
test
in
adc
or
insb
rcrb
xor
xor
movsb
testl
push
iret
inc
insl
xor
dec
cmpsb
mov
pop
cmpl
or
ja
in
pop
push
cmp
aam
or
add
pusha
in
jg
lods
ss
adc
mov
push
ja
call
ja
sbb
fwait
rorb
cmp
xor
adc
add
fs
jnp
out
adc
add
insl
jnp
insl
es
add
pop
push
xchg
add
xor
test
jecxz
out
nop
jne
and
jno
mov
adc
jo
cmp
adc
outsl
imul
jo
imul
movsb
push
push
xor
xor
pusha
add
shll
mov
shll
int3
fstps
push
scas
or
mov
insl
or
or
cmp
add
movb
add
aaa
ret
ja
insl
mov
push
jg
lcall
jmp
lea
stos
add
mov
lds
adc
insl
daa
std
or
mov
mov
sub
and
push
ja
mov
fadd
ja
daa
insl
add
lds
fisttps
imul
lret
add
into
rcll
fisttpl
loopne
popa
les
inc
xchg
cmp
and
fcmovnu
sbb
es
rorl
in
mov
sub
mov
mov
pop
jae
push
or
out
and
jae
jne
outsl
jae
aaa
and
xor
movb
cmp
jecxz
add
add
xlat
fdivl
leave
add
adc
jl
xor
cmp
cmpsl
aam
sbbb
mov
mov
lea
sbb
xor
mov
add
mov
jns
adc
imul
sbb
cmpb
sub
fnstenv
ret
cmp
cmpsb
cmp
fisttpl
jo
imul
scas
dec
add
sbb
add
cld
inc
push
fildll
sub
dec
dec
add
arpl
inc
xchg
inc
pop
fistps
fistpl
push
add
dec
sbb
sbb
push
inc
addr16
pop
push
fstpl
add
lcall
add
adc
lcall
lods
fldt
jge
and
dec
jae
sbbl
pop
jbe
add
add
loopne
aam
ja
lea
fnstsw
bound
sbb
addr16
inc
ja
add
adc
jo
or
ja
js
scas
stc
add
and
dec
dec
push
inc
js
out
imul
jns
add
out
jnp
js
ja
and
in
jge
pop
jbe
out
add
in
mov
pushf
repz
and
js
lock
jbe
outsb
outsb
sbb
sub
inc
inc
push
push
inc
dec
cmp
dec
test
js
addl
enter
pop
jno
addl
and
jno
outsl
xchg
lods
push
adc
gs
push
outsb
loope
addl
push
dec
push
cmp
or
jo
sbbb
js
cmp
test
stc
or
or
testl
add
pop
repnz
cs
in
dec
outsb
repz
lahf
fwait
add
add
sbb
xor
rol
fiaddl
fwait
js
nop
hlt
lahf
imul
repz
push
out
out
or
mov
jmp
emms
or
dec
out
mov
push
mov
add
es
pop
in
add
stc
clc
add
push
xchg
cmp
xchg
lock
sbb
fwait
andl
arpl
sahf
add
or
or
add
sub
ja
mov
jp
add
adc
jge
fbstp
pop
jbe
add
cmp
popf
data16
add
mov
push
fisubl
inc
out
push
inc
push
sub
movb
movsb
and
popa
xchg
arpl
cmp
mov
in
addr16
arpl
arpl
pop
xlat
and
jnp
and
insb
rclb
jmp
xchg
addb
es
push
and
arpl
add
jg
adcl
inc
add
std
shrb
add
pop
add
es
jb
and
mov
or
jle
jb
push
test
push
andl
add
sbb
or
mov
jbe
push
or
adc
arpl
sbb
inc
push
add
pop
dec
cwtl
jbe
or
andl
fisubrs
push
and
hlt
out
jle
inc
ret
jnp
jg
adc
sbb
js
push
loopne
arpl
js
inc
jge
popf
adc
add
es
insb
dec
xor
jb
jns
or
jnp
ja
andb
push
adc
mov
repz
outsb
ljmp
jno
and
push
mov
jno
mov
repnz
cli
insl
adc
ja
jbe
jle
loope
push
repnz
dec
jg
mov
lret
sbb
mov
cltd
push
xchg
push
adc
add
adc
add
xor
mov
cmp
mov
and
bound
addr16
cmp
movsb
add
sub
add
pusha
dec
dec
pushf
push
stos
fcompp
test
sub
cmp
cwtl
xor
ficoml
add
and
add
adc
idiv
sbb
lret
push
push
cmpsl
fs
adc
sarb
and
jb
pop
adc
jo
jmp
jle
and
push
jbe
js
aam
leave
inc
cmp
orl
mov
scas
pop
mov
sub
jmp
out
jge
fucomi
lods
mov
mov
push
inc
mov
push
clc
in
addr16
jno
fidivl
movsb
notl
inc
jp
je
outsb
iret
push
jb
and
into
test
push
lock
xor
push
dec
push
push
dec
pop
mov
jmp
and
sub
and
push
dec
call
icebp
push
push
push
js
pop
test
dec
testb
hlt
mulb
lods
popa
in
xchg
jecxz
enter
incl
cld
mov
sbb
push
inc
add
sbb
pop
pop
xor
sub
shll
addb
inc
xchg
rclb
jae
gs
cmp
test
test
fs
mov
jbe
inc
or
loop
push
hlt
je
ss
int
js
pop
inc
add
dec
cmp
cmp
incb
mov
pop
push
mov
dec
sbb
push
mov
fstpt
int
movd
in
cmp
mov
pop
inc
popa
repnz
inc
dec
mov
cmp
push
sub
mov
or
dec
inc
push
cmp
or
stos
adc
jnp
or
xchg
xor
daa
andl
ds
scas
daa
data16
push
int3
fs
dec
push
in
push
bound
loop
cld
inc
inc
push
push
add
sbb
mov
dec
test
and
stos
add
in
mov
jb
or
inc
pop
cmp
subb
adc
cmp
stos
push
mov
mov
push
push
mov
mov
dec
inc
dec
add
lock
or
cwtl
pop
fcmovbe
push
jg
pop
mov
inc
push
popa
adc
inc
addl
and
test
inc
insl
dec
jnp
imul
dec
and
lcall
es
xchg
test
movb
sub
jmp
lcall
or
in
dec
outsl
outsb
mov
push
add
inc
xor
mov
add
inc
mov
jnp
add
inc
cmc
dec
push
inc
mov
dec
cmp
push
xchg
cmp
push
idivb
nop
lods
lret
dec
dec
mov
dec
push
push
pop
push
and
cmp
mov
cmp
lock
pusha
add
fwait
scas
imul
sti
outsb
cwtl
adc
imul
outsb
ja
pop
iret
ret
xor
insb
pusha
divl
xchg
xchg
aaa
idivl
xor
mov
jp
push
dec
mov
out
pusha
test
aaa
jb
cmp
inc
inc
cmp
sub
mov
inc
mov
or
jl
inc
cmp
jbe
push
aas
push
sbb
and
mov
sbb
lea
cmp
xor
push
sbb
jmp
jbe
sub
pop
inc
incl
fstps
fcmovnu
jb
insl
insb
push
das
inc
inc
daa
clc
es
sahf
call
in
push
dec
out
cmp
les
inc
inc
cmp
outsb
cmpsl
sub
lock
les
dec
inc
dec
pop
mov
cmp
lret
sbb
sub
fs
jo
js
js
sbb
sti
in
into
cmc
shlb
jo
inc
cs
pop
mov
faddl
mov
push
out
je
cmp
xchg
jb
xchg
into
inc
rcr
push
cmp
lahf
push
nop
repnz
push
dec
jo
in
ljmp
insb
pushl
movsl
fwait
aad
add
adc
outsl
shll
fs
dec
push
pop
dec
pop
outsb
lahf
scas
mov
aaa
push
jo
stos
mov
or
aam
and
fs
cmpl
xchg
pop
imul
push
or
add
cld
clc
mov
dec
or
push
sbb
xor
jo
dec
test
ljmp
js
add
mov
xor
imul
xchg
mov
push
push
push
add
pop
int3
insb
mov
adc
test
fldl
push
jbe
ds
sub
push
dec
scas
or
mov
jmp
mov
test
dec
push
cwtl
in
ret
insb
addb
scas
fisubs
xchg
adc
mov
pop
insl
add
outsb
adc
mov
xchg
push
cmp
adc
idivl
lret
insl
inc
cmp
push
push
adc
mull
inc
xor
push
test
sub
push
mov
push
lock
ja
pop
mov
mov
fs
les
dec
sub
mov
ret
cs
fs
xchg
das
jae
inc
mov
incb
jnp
xchg
lods
dec
jmp
mov
sub
jne
mov
adc
xchg
dec
or
xchg
add
xor
fld
pop
imul
xor
iret
xor
or
adc
push
inc
pop
pop
add
gs
out
mov
inc
lods
push
cmc
shlb
and
ss
pop
mov
sbb
int
and
push
inc
push
mov
jb
cmp
arpl
add
sbb
cmp
scas
ret
add
test
push
insl
gs
or
or
add
cmp
ja
dec
add
add
add
neg
std
xor
pop
or
cltd
lcall
push
cmp
test
pusha
je
std
or
test
enter
dec
mov
pop
adc
push
cld
lfs
jne
pusha
mov
add
jo
adc
push
sub
dec
mov
push
dec
sbb
pop
aas
andl
pop
adc
sub
adc
incb
cmp
add
inc
add
add
mov
mov
sarb
movsl
and
mov
ljmp
push
dec
xchg
cmpsb
xchg
sub
add
stos
call
ljmp
push
pushf
sbb
addr16
es
ret
clc
add
xor
pop
and
data16
add
ds
add
push
add
pushf
shlb
adc
lods
push
add
adc
mov
add
lea
xchg
mov
xchg
mov
or
jg
frstor
es
aas
pop
pop
leave
mov
xlat
stos
push
rcrb
and
add
outsl
in
flds
adc
xor
add
das
cmp
test
and
test
stos
aam
test
add
sbb
sbbl
loope
popf
inc
into
jo
sbb
sbb
sbb
aad
cmp
adc
std
xor
inc
add
push
adc
push
insl
adc
inc
popa
dec
dec
push
inc
jnp
xchg
dec
sbb
push
xchg
inc
lock
or
pop
leave
inc
enter
sbb
pop
jae
mov
push
pop
rclb
pop
mov
jmp
cmpsb
pop
pop
sbb
pop
add
fisttpl
data16
push
mov
jo
test
push
aaa
xor
push
xor
les
or
add
das
inc
or
in
inc
gs
adc
push
jg
mov
adc
shl
fwait
add
pop
xchg
add
mov
add
sbb
js
les
outsb
ret
or
or
out
dec
or
or
or
adcb
or
das
adc
lock
sbb
or
adc
popa
lock
mov
icebp
inc
dec
call
mov
push
push
filds
mov
xchg
xor
int
cmpsb
test
or
out
mov
or
pop
push
push
adc
imul
dec
and
push
mov
sub
sub
inc
push
mov
js
add
mov
inc
or
push
mov
lds
mov
cwtl
cmp
dec
repz
lock
push
or
dec
loopne
dec
xor
xor
push
or
clc
loopne
subb
mov
add
add
ret
mov
inc
xorb
jae
bound
mov
ret
sub
insb
movsl
out
aam
andl
adc
mov
dec
inc
inc
repz
int3
mov
pop
and
push
xlat
cs
jbe
and
out
mov
add
js
pop
jp
mov
add
dec
add
add
lods
mov
inc
aad
adc
add
mov
push
xchg
movsb
test
add
rclb
dec
or
push
and
pop
lods
adc
dec
nop
and
mov
or
jmp
or
add
add
jb
outsb
inc
push
sbb
jb
dec
mov
or
sub
or
sbb
jg
dec
outsl
fs
fisttpl
adc
jb
outsb
je
jge
and
dec
adc
insl
and
jne
mov
imul
gs
sub
mov
push
push
jb
popa
insl
gs
xchg
inc
xchg
mov
jle
jg
mov
add
or
popf
add
mov
xor
or
adc
push
sub
repz
inc
inc
push
decl
or
push
cmp
push
icebp
aam
add
inc
fdiv
call
add
pop
inc
sub
add
sbb
or
or
push
add
and
sti
or
addr16
push
sbb
adc
adc
aaa
jnp
pop
xor
add
aam
and
sub
jl
nop
wrmsr
add
mov
inc
inc
fs
push
sti
movsb
or
in
out
or
inc
push
inc
in
in
add
out
add
iret
fadd
inc
faddp
inc
push
push
jbe
adc
incb
shrb
fs
jae
fstp
popa
add
and
add
into
push
lea
cmp
daa
cmpl
jae
cmp
mov
leave
adc
clc
fsubrs
outsl
call
add
add
add
add
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
