fucomp
mov
mov
sub
add
add
mov
adc
imul
mov
mov
movl
fisubl
adc
push
push
push
mov
fnsave
add
je
mov
mov
mov
outsl
decb
add
push
push
push
pushl
mov
mov
adc
add
sbb
or
jae
cmp
mov
clc
adc
or
cmp
je
xor
fucomi
jle
xor
lea
mov
sarb
mov
or
add
in
mov
aad
adc
add
adc
std
outsl
repz
sub
mov
ret
push
mov
fildll
in
or
nop
add
addr16
inc
adc
mov
iret
inc
out
mov
shll
or
idivl
push
push
push
push
push
jne
out
push
adc
and
pop
pop
inc
sbb
outsb
imul
aam
pop
ret
push
les
adc
xchg
jo
test
outsb
imul
testl
movsb
mov
mov
add
out
jge
fdivl
fcoml
inc
add
mov
fnstsw
push
adc
ja
mov
mov
pop
inc
pop
mov
pop
fldt
test
and
mov
add
repz
lock
mov
out
sub
or
adc
push
or
lcall
test
inc
inc
in
pop
in
push
clc
xchg
push
jg
mov
mov
enter
and
lock
pusha
sub
fistpl
hlt
sub
das
add
outsb
mov
popa
lock
xchg
adc
jle
imul
dec
clc
mov
aaa
stos
add
adc
or
lds
fisttpll
jno
idivb
ss
mov
push
or
adc
push
add
xor
adc
mov
out
mov
inc
add
lock
jae
cmpb
mov
in
out
xor
adc
hlt
icebp
mov
or
push
ja
sub
and
insl
imul
rorl
and
pop
lods
adc
cmpsb
popa
mov
insb
xchg
sbb
cmp
sbb
rolb
push
mov
cmp
shlb
es
popf
sti
in
in
xchg
xor
mov
or
icebp
loop
mov
mov
in
les
adc
inc
pop
xor
out
xor
cmp
push
dec
adc
iret
popa
pandn
and
ret
imul
fdivrs
add
and
xchg
adc
add
push
lock
pop
loope
cmc
cld
ret
sub
xor
cmp
daa
orl
mov
in
jae
push
add
mov
mov
cwtl
push
or
js
pop
insl
jnp
and
bound
ljmp
or
xor
mov
sbb
inc
dec
or
cmp
stos
mov
xor
insb
cld
xlat
jo
mov
inc
insb
xor
aaa
cltd
push
or
cmpsl
mov
mov
sbb
sub
and
mov
sbb
or
outsb
pusha
mov
cs
ja
sub
jl
fdivrl
mov
push
or
call
sbb
sbb
pop
in
xchg
dec
clc
push
adc
inc
mov
add
fcoms
jge
jae
out
mov
subb
icebp
adc
mov
mov
in
ret
inc
or
loopne
xchg
sti
call
pop
jecxz
and
cmp
jge
mov
dec
fisttpl
enter
jnp
cmp
add
stos
ds
fsubrl
aam
mov
cmp
jne
xor
ds
inc
in
xor
lock
and
add
cmp
out
mov
bound
scas
mov
lret
inc
push
pop
xor
jae
std
aaa
sub
mov
int
xchg
mov
mov
daa
loop
lock
fistps
iret
push
cmp
je
mov
sub
mov
hlt
inc
clc
dec
mov
in
out
sbb
mov
sbbb
daa
inc
or
adc
adc
iret
push
cmp
adc
mov
cli
mov
pusha
addr16
in
add
insb
or
push
pushf
jb
fstps
lods
adc
sbb
sbb
xchg
cwtl
arpl
aas
and
fcomps
inc
jae
mov
popf
jo
imul
add
es
test
jns
testb
jno
or
iret
xchg
mov
in
ss
ret
adc
xor
addr16
in
xor
adc
fcomi
add
add
push
in
mov
xor
dec
or
outsl
xor
iret
xchg
adc
inc
cmpl
push
pop
mov
sbb
or
js
xchg
pop
scas
sub
arpl
xor
sub
loope
clc
or
enter
ja
inc
or
and
nop
cmp
mov
sbb
add
loope
ret
bound
jmp
rcrb
mov
cmp
jbe
mov
out
push
pop
inc
jecxz
jbe
and
and
or
loop
jo
push
xor
out
cmp
jmp
leave
push
mov
xchg
adc
loope
adc
dec
xchg
xor
xchg
imul
pop
nop
addl
dec
pusha
lahf
mov
fnsave
sub
mov
cmpl
adc
cltd
test
xchg
sub
or
lods
push
sahf
xor
in
test
and
bound
pop
arpl
xor
js
sbb
or
pusha
dec
pushf
jae
rcrb
adc
mov
lods
jecxz
stos
push
mov
xor
sbb
notl
xor
aas
cmpsl
fdivrl
popf
out
hlt
jnp
xchg
mov
incb
adc
cmp
jbe
bound
mov
lock
add
xchg
stc
sbb
inc
dec
dec
and
fisttps
add
sarb
jbe
xor
adc
sbb
fistpl
mov
sub
mov
std
sbb
repnz
or
clc
pop
sbb
je
jno
sarb
push
or
ret
or
adc
adc
imulb
inc
inc
or
out
lea
push
adc
daa
or
cld
das
or
xor
cmp
ja
scas
ret
sbb
sbb
lret
fnsave
sub
sub
push
aad
jo
ret
out
in
jo
xor
clc
pop
xor
loop
loopne
inc
adc
inc
cmpsb
into
in
inc
pop
cltd
mov
lea
movsb
or
es
dec
dec
rcl
scas
sbb
mov
jmp
test
out
mov
cli
cwtl
push
sar
inc
adc
push
adc
lock
int3
cmc
cltd
cmc
pusha
cmc
adc
sub
mov
jle
cmp
push
jecxz
cmp
das
sbb
inc
out
push
xchg
mov
imul
into
shr
les
pop
das
enter
lea
cmp
std
lcall
xor
sub
pop
ds
adc
and
aaa
push
sbb
mov
bound
clc
arpl
lea
mov
adc
in
data16
rorl
int
cmp
push
int3
iret
cmp
inc
inc
push
sarl
loopne
sti
xor
jae
cld
pusha
testb
or
push
dec
cmp
push
xor
testl
or
cmp
jbe
jne
mov
adc
enter
insl
lahf
and
out
sbb
and
int3
mov
cs
mov
std
mov
rolb
fdivs
mov
jmp
cli
mov
xchg
mov
adc
rcrb
inc
xor
mov
leave
pop
add
sbb
shl
clc
pop
testl
push
mov
inc
clc
xchg
fwait
jl
adc
inc
add
or
lock
add
je
mov
cmp
or
arpl
mov
dec
call
fisubrs
out
mov
shlb
fstl
adc
ffreep
sbb
lods
ret
mov
xchg
xchg
rcrl
sub
lock
sahf
pop
sub
mov
add
cmp
mov
and
mov
dec
cli
add
adc
or
rclb
inc
loope
mov
out
add
dec
adc
mov
leave
sbb
inc
adc
mov
mov
inc
push
push
ret
es
xor
add
jno
or
push
adc
adc
and
xor
mov
dec
decl
and
mov
push
cmpsl
add
push
cltd
xor
mov
je
or
mov
or
cli
and
push
jg
jo
lock
mov
jl
lods
mov
pop
fdivs
pop
mov
mov
mov
sub
adc
ret
jo
icebp
push
mov
ret
push
xor
cmp
lcall
or
jne
xchg
out
mov
mov
pop
into
inc
xor
jp
and
movsl
hlt
fmul
push
clc
pop
popf
dec
xor
popf
cmc
mov
insb
sbb
or
jle
js
dec
adc
mov
jo
shlb
push
xor
sbb
adc
inc
adc
cmp
push
sub
icebp
in
mov
subl
dec
push
sbb
inc
add
icebp
vsqrtps
cmp
dec
call
ret
jmp
sub
add
movsl
lret
dec
or
pop
jno
loope
jns
lods
or
jecxz
cmp
movsb
xor
push
and
cmp
sbb
jecxz
rcll
xchg
fcomps
adc
iret
sbb
adc
mov
cmp
ficompl
shll
push
cmp
in
sub
mov
xor
cli
stos
pop
loopne
mov
daa
dec
fdivl
push
jg
adc
pop
pop
je
xchg
mov
push
dec
sub
inc
xor
test
lock
adc
lahf
inc
xchg
dec
pop
or
sar
int3
arpl
push
mov
push
mov
call
push
rol
and
dec
xchg
icebp
mov
dec
enter
scas
call
nop
xor
into
cmp
sbb
roll
pop
cld
cltd
or
inc
adc
loopne
negb
sub
or
ss
add
pop
dec
sub
or
dec
jno
and
cmp
outsb
lock
bswap
fildll
sub
jmp
stos
rolb
aad
mov
push
add
pop
sub
pop
fcmovb
in
sbb
adc
push
add
adcl
dec
int
loope
pop
mov
adc
cmp
in
inc
adc
sub
daa
adc
cli
inc
nop
dec
outsl
out
sub
add
xor
push
cmp
loopne
mov
xor
xor
ss
sbb
xor
add
sbb
pop
int3
test
mov
jl
jnp
pushaw
pop
cmp
and
mov
in
out
icebp
push
xor
mov
dec
push
js
cwtl
movsb
sbb
into
js
insl
push
dec
sub
clc
sub
mov
mov
inc
in
push
or
pop
or
xchg
rcrb
xor
xchg
hlt
adc
lahf
hlt
mov
mov
icebp
sbb
dec
mov
lods
in
mov
and
xor
aaa
inc
push
add
cmp
jae
dec
cmpsl
lea
std
xchg
mov
jb
outsl
gs
lods
adc
ret
pop
fcoms
pop
fdivrl
popf
and
xchg
pop
aaa
push
leave
jle
or
xchg
loopne
mov
lock
daa
push
movsb
or
ret
ljmp
mov
push
dec
jo
sub
pusha
pop
inc
xchg
pusha
ret
imul
aas
arpl
je
jge
push
jecxz
lea
or
pop
adc
xor
pop
or
notl
int3
adc
push
fcoms
and
add
in
mov
cwtl
mov
fcomps
add
dec
loopne
or
sti
addb
sbb
enter
push
cwtl
insb
test
sbb
or
and
sbb
add
sbb
addr16
orl
arpl
test
lret
mov
out
mov
call
jle
and
cmp
jae
mov
out
repnz
lcall
or
and
out
mov
pop
xor
sbb
pop
not
xlat
lahf
inc
push
adc
cli
call
ret
and
or
jle
stos
lret
push
test
fwait
inc
ja
lock
nop
cmp
ret
pop
mov
sbb
or
xor
and
bound
cmp
dec
pop
ss
clc
xchg
xor
mov
lock
adc
xor
ds
push
xchg
test
mov
add
lods
xor
ret
and
mov
xchg
jnp
sbb
mov
adc
test
ret
movsb
data16
lea
sbb
xor
cmp
or
fadds
popf
sub
mov
add
jge
xlat
mov
jle
loopne
jo
or
add
push
adc
outsb
mov
fidivrs
out
mov
sbb
dec
adc
les
or
mov
sahf
mov
mov
out
ret
jns
sbb
jge
fsubs
sbb
test
inc
cmp
inc
pop
test
jb
add
stos
jmp
adcb
push
sbb
fucomp
pop
sub
test
adcb
addr16
or
sahf
mov
push
pop
fstpl
dec
adc
mov
inc
xor
test
push
cld
push
mov
adc
adc
inc
or
pop
cmc
and
or
or
pop
jno
icebp
mov
dec
adc
add
pop
aaa
js
jne
loope
inc
or
mov
sub
mov
push
inc
inc
ja
imul
push
pop
les
dec
data16
pusha
in
lahf
push
cmp
add
xor
pop
ret
lds
out
jnp
mov
jecxz
or
adc
dec
sbb
int
add
addr16
push
push
push
pop
pusha
clc
ljmp
jne
jecxz
mov
push
push
hlt
call
leave
pop
jmp
cmc
out
sbb
push
jnp
mov
add
test
push
pop
xchg
jno
or
sbb
ficompl
js
iret
xor
push
ret
or
lock
addl
or
sub
shr
mov
rol
sbb
cmpsb
push
icebp
pop
js
das
icebp
mov
shll
push
adc
lods
into
add
push
outsb
push
jnp
ret
dec
pop
and
aaa
pushf
add
mulb
cmp
mov
adc
out
or
xchg
xor
arpl
mov
inc
enter
call
arpl
xor
adc
mov
sbb
xchg
call
xor
inc
pushf
stc
sub
imul
inc
lcall
mov
adc
push
ret
xchg
and
clc
or
jl
pop
out
adc
add
leave
jge
lods
sbb
jb
or
add
shlb
bound
enter
dec
lods
or
mov
insb
lock
popf
add
inc
clc
enter
adc
jmp
mov
add
out
test
call
push
ret
testl
mov
push
loope
xor
add
and
pop
test
dec
pop
shr
push
enter
int
jle
xor
push
or
lods
and
pop
pop
adcb
pushl
sub
xor
mov
nop
xchg
shrl
dec
mov
test
cmp
or
mov
lock
inc
outsb
les
sub
xor
and
lret
xor
push
in
sbb
ds
adc
mov
xor
xor
jae
push
inc
mov
lret
add
lock
pop
fldt
dec
mov
into
jb
dec
mov
adc
xor
mov
lock
sbb
jnp
dec
adc
pop
adc
and
mov
mov
mov
cwtl
mov
sbb
mov
mov
fs
push
add
cmp
in
cld
dec
inc
insl
shlb
cmp
dec
and
or
pop
cmp
je
sub
push
test
adc
jge
or
push
jo
jne
cld
das
mov
xchg
mov
js
dec
adc
movsl
pop
stc
mov
fidivrl
lret
add
std
add
or
in
xor
cmp
xchg
mov
test
push
pop
mov
dec
lea
push
or
aaa
xlat
paddq
scas
out
or
cmp
or
xorl
sahf
mov
movsb
xchg
jmp
pop
mov
inc
add
xor
insb
and
cmp
push
add
enter
add
add
pop
xor
out
sub
dec
ljmp
xchg
push
rol
imul
mov
jne
subl
shlb
mul
sbbl
rolb
mov
clc
ret
faddl
mov
cmp
ljmp
cmp
inc
fnstenv
adc
adc
or
sub
rcpps
cs
fnstenv
into
shr
add
stos
enter
imul
sub
lods
fmul
xor
inc
imul
adc
mov
pop
and
lahf
cli
dec
sti
stc
cmpsl
sbb
mov
or
cmp
fdivrl
sbb
incb
add
fadds
mov
push
repz
dec
rcpps
addb
and
in
ljmp
outsl
mov
mov
imul
test
leave
sarb
or
bound
inc
fwait
ret
jb
inc
push
out
dec
outsl
adc
mov
jge
jl
dec
js
js
mov
sahf
cmpsb
sbb
pusha
push
pop
mov
rcrl
jp
add
push
cmp
jb
arpl
int
push
in
sbb
mov
add
dec
stos
cwtl
xor
cmp
jne
dec
out
jne
push
aas
out
cmp
mov
push
xchg
daa
adc
ljmp
push
mov
or
call
test
xor
mov
xor
insb
or
sarl
sub
pop
adc
movsl
cmp
mov
or
test
js
sti
jo
inc
add
mov
add
clc
push
pusha
pop
cmc
shlb
add
xchg
js
mov
sarl
lea
sbbl
shll
mov
push
mov
pusha
mov
or
jl
fadds
add
add
movsb
rclb
sub
in
rcrl
push
stos
or
lods
adc
pop
ss
push
or
lock
psrlw
pop
stos
iret
jno
mov
ret
orb
xchg
fiadds
decl
mov
cmp
adc
adc
dec
je
mov
xchg
mov
lret
cld
mov
int3
mov
in
mulb
mov
sti
jo
add
or
aam
pusha
mov
inc
sbb
daa
mov
push
pop
cmp
mov
xor
arpl
cs
int
orb
idivl
jge
and
into
and
lock
dec
lret
fdivrl
jp
mov
clc
mov
xor
dec
mov
inc
xchg
adc
inc
jnp
push
cltd
jnp
xor
cmpsl
repnz
mov
jmp
fisttps
adc
mov
inc
int
int
jb
es
jmp
adc
loopne
dec
inc
mov
cmp
add
mov
jp
pop
push
push
add
enter
adc
lea
aam
shlb
lock
mov
iret
push
negl
inc
jo
xchg
test
adc
dec
mov
mov
sub
sub
cmp
jbe
jae
adc
negb
subl
ljmp
in
xor
xlat
and
add
rcl
ja
lds
jns
cmp
mov
movsb
adc
fsubl
pop
test
popf
push
mov
out
sbb
push
sbb
xor
mov
fmulp
push
mov
js,pn
in
fs
cmp
incl
shlb
or
daa
aam
and
sbb
mov
loop
adc
les
inc
out
add
push
add
jge
pop
xchg
push
mov
jp
sbb
dec
lahf
xchg
pop
or
mov
add
push
jg
aad
push
pop
iret
mov
dec
hlt
xor
pop
adc
and
push
mov
ss
xchg
sbb
mov
or
shr
lock
cltd
fisttpll
das
pop
xor
out
shll
or
test
arpl
pop
cmc
mov
adc
jb
inc
inc
lea
jnp
pop
mov
and
aaa
adc
adc
jmp
lock
cmp
mov
add
sarb
pop
nop
adc
and
lock
push
mov
push
test
cmc
out
jbe
dec
rclb
loope
js
adc
pusha
mov
jne
test
je
dec
ret
daa
xor
test
jmp
and
push
mov
shl
dec
mov
dec
scas
sbb
mov
and
add
adc
or
pop
adc
inc
daa
test
push
sbb
push
or
push
out
loopne
add
add
mov
xor
test
inc
jae
test
xchg
js
lods
clc
add
inc
mov
pop
sarb
or
jp
daa
jecxz
nop
dec
adc
and
push
sub
daa
paddw
mov
data16
dec
sbb
mov
mov
nop
cmc
xchg
jbe
mov
jno
hlt
test
push
decl
xchg
xor
pop
loopne
sub
inc
sbb
das
pop
xchg
xor
adc
jno
mov
xor
and
mov
mov
inc
xchg
mov
push
popl
sub
imul
das
and
in
add
add
out
inc
adc
add
mov
and
stos
add
icebp
sbbl
adc
leave
mov
enter
clc
rcll
lds
mov
jl
lcall
push
jmp
lret
cli
add
mov
imul
jle
cwtl
loop
adc
lea
ret
cltd
ljmp
ds
add
dec
xor
jge
inc
cli
addb
mov
adc
call
add
cltd
adc
or
mov
sbb
or
enter
cmpl
pop
cmp
jp
jnp
lahf
cmpb
adc
adc
sbb
pop
sbb
and
sub
inc
mov
add
cmpsl
and
sub
sub
cs
pop
add
add
lcall
dec
mov
dec
inc
inc
stc
sbb
mov
push
xchg
pop
sub
mov
les
pop
fs
cmpb
push
cmp
dec
sub
add
popf
jg
pop
pushf
pop
xchg
imul
ret
rorl
stos
add
stos
inc
stos
mov
sahf
icebp
jl
mov
imul
int
inc
call
bound
lock
add
lcall
cli
in
mov
cmc
mov
lock
add
and
ret
pop
bsf
or
push
fucomp
ss
adc
jbe
inc
idivb
jbe
aaa
mov
arpl
inc
movsb
jle
add
movsl
cmpsl
pusha
dec
movsl
enter
ja
jge
hlt
jne
push
xchg
lock
push
dec
fldl
jge
js
cmp
rolb
add
xchg
imul
push
adc
not
je
rorb
dec
inc
xchg
push
outsl
jp
jno
xor
pop
nop
or
je
rcrb
int
xor
xor
push
aaa
mov
cmp
jp
jl
mov
ljmp
pop
mov
sub
jnp
xor
mov
mov
adc
inc
push
mov
iret
mov
cmp
cli
nop
mov
push
mov
push
jp
jae
loopne
lcall
ror
inc
xchg
pop
in
push
clts
mov
add
sbb
pop
inc
jnp
dec
cli
aas
or
sbbl
aaa
rorb
lret
mov
cmc
fwait
adc
ret
sahf
cli
pop
inc
adc
insb
xorl
cmp
push
adc
xchg
hlt
cmp
push
out
ja
mov
push
stos
mov
gs
and
hlt
xlat
lcall
dec
push
pop
mov
mov
js
adc
sub
push
add
stc
and
jns
jmp
mov
cmp
pop
call
xchg
xor
fdivl
lods
or
pop
cwtl
in
push
flds
cs
cmp
jbe
ss
mov
lock
lcall
mov
cmp
lods
mov
mov
jmp
fcompl
add
push
ja
nop
add
rorb
scas
dec
in
sbb
jo
mov
sub
and
cmp
cmp
ja
pop
cmp
roll
sub
add
sbbb
pop
jl
and
pop
icebp
mov
movsb
mov
ds
pop
jbe
mov
int
add
cmp
jle
inc
xchg
dec
sbb
adc
mov
cwtl
outsb
orb
sbb
lods
clc
insb
pop
adc
inc
cwtl
les
push
movsb
cmp
in
lcall
mov
aam
xor
or
inc
shll
jno
add
shll
cmp
jae
stos
ss
imul
push
xor
xlat
or
push
call
xchg
mov
inc
es
cmp
mov
adcl
notl
bswap
inc
mov
cmpsl
push
and
push
int3
lret
fwait
and
mov
cmp
adc
fwait
push
sbb
sbb
hlt
imul
stc
sbb
lea
add
test
lahf
mov
adcl
addr16
pop
ret
adc
and
xor
xor
rcrb
int
cmp
xor
push
cmp
xorl
in
stc
sarl
scas
adc
cltd
pop
sbb
sarl
and
add
lock
xchg
xorb
fadds
and
dec
xchg
lods
cmp
fdivs
ja
mov
jmp
and
mov
or
movsb
mov
mov
pop
inc
cmp
dec
sbb
xor
or
add
pop
adc
cmp
cmp
and
insb
clc
add
mov
mov
dec
adc
arpl
adc
adc
bnd
push
mov
shlb
in
cmp
adc
mov
mov
js
arpl
or
enter
fisubrs
test
xor
sbb
add
cmp
cmp
dec
adc
push
push
lods
add
lcall
mov
xchg
and
xchg
call
rcrl
cmp
cmp
rclb
mov
sbb
adc
jg
in
xchg
bound
xor
cmp
mov
sub
pop
xor
xor
push
pop
ret
cmp
sub
xor
mov
pop
icebp
leave
pop
icebp
call
loope
add
pop
pop
dec
aam
mov
mov
pop
pop
jg
mov
subl
mov
fs
xor
inc
xor
aaa
or
cltd
or
shlb
and
lret
aad
mov
ja
sub
push
iret
cmpsl
hlt
mov
jbe
sbb
sbb
es
mov
push
inc
rclb
xchg
dec
cmpsl
and
add
mov
adc
ret
stos
or
bound
enter
add
mov
or
sub
or
int
shll
jae
or
cmp
test
jge
andl
push
insl
pusha
xor
sbb
ss
xchg
mov
mov
or
pop
cmpsl
jo
sbb
cld
sub
adc
add
lret
adc
cmp
jb
sahf
nop
pop
cmp
xor
xchg
adc
loop
outsb
mov
dec
ja
adc
jmp
inc
repz
inc
and
ret
daa
sub
adc
icebp
sub
sbb
sbbl
xor
push
pop
lcall
add
adc
into
clc
or
xchg
pop
cmp
dec
adc
dec
popl
or
fdiv
add
or
pop
ljmp
loop
loopne
les
add
sbb
call
lret
dec
sbb
aam
int
jl
rol
xchg
inc
mov
add
push
aaa
psubusw
fsubrs
fisubrl
xor
push
fldl
push
pop
xor
shrl
sbb
outsb
jne
prefetcht1
xchg
clc
xchg
push
loop
add
iret
cmp
and
decb
push
pushf
loopne
inc
jb
cmc
push
shrl
add
inc
pop
push
in
into
scas
cmp
aaa
or
or
mov
lcall
jmp
fcoml
inc
cmp
mov
jns
je
add
hlt
xor
and
inc
sbb
loop
repz
ljmp
test
jge
and
xchg
inc
mov
out
mov
push
out
jno
inc
les
push
sarl
shrb
sbb
mov
sbb
sbb
pop
xor
sbb
mov
pop
adc
inc
movl
sbb
aas
push
and
orb
push
mov
mov
xchg
push
push
call
popf
ljmp
scas
int
nop
mov
pop
pushf
dec
je
sub
jge
es
jno
inc
cmpsl
int3
out
jbe
imul
movl
sub
inc
push
inc
add
ljmp
inc
lea
lahf
sub
xor
add
or
sub
inc
xchg
lea
loopne
jo
or
out
mov
lods
aad
sbb
test
or
mov
adcl
mov
inc
pushf
add
cmp
xchg
cmp
xor
insl
lock
sbb
jg
or
dec
pop
or
push
inc
and
sbb
jp
insl
mov
pop
jo
jg
adc
sub
daa
xchg
xor
test
sbbb
push
lahf
mov
popl
adc
mov
mov
repnz
add
cli
cmc
jo
jo
nop/reserved
fnstenv
enter
das
inc
sbb
dec
mov
push
notb
filds
icebp
adc
push
js
mov
lret
push
es
inc
dec
adc
mov
ds
test
fs
stos
cwtl
mov
jne
jg
jns
repz
add
data16
outsb
mov
add
adc
lods
dec
rorb
push
inc
xchg
push
pop
loopne
or
cs
add
add
inc
out
cmpsl
js
out
insb
ss
mov
js
mov
and
gs
and
in
xor
lock
xor
dec
hlt
into
arpl
jnp
and
cmp
call
cmp
add
les
mov
inc
popf
push
rcl
inc
in
cwtl
or
stos
sbb
pop
mov
testb
sub
outsb
jp
scas
jno
das
and
pop
test
pop
clc
rolb
mov
test
subb
out
repnz
cmp
add
adc
mov
stos
inc
cmp
push
shrb
fwait
pop
mov
shll
inc
pop
pushf
enter
mov
jb
adc
and
jl
sub
jns
rol
xchg
aaa
push
dec
mov
and
lock
pop
and
shll
loop
add
or
xor
rcl
mov
test
add
js
aam
dec
outsb
push
mov
pop
push
loopne
or
stc
or
loopne
mov
cmp
dec
jnp
add
push
mov
es
loopne
rorl
in
mov
ja
adc
enter
popf
inc
push
insb
lcall
aas
pop
pop
testl
inc
sarl
mov
mov
rolb
mov
push
mov
into
sarb
les
imulb
inc
cmp
orl
addr16
xor
out
sbb
pop
insb
imul
ljmp
and
jb
adc
mov
mov
xor
popf
movsl
sbb
out
in
sbbl
das
add
pop
jmp
or
pop
cmp
cmc
in
loopne
fmuls
cmp
jbe
adc
and
pinsrw
testl
pop
rorl
add
popf
andb
cmp
pop
push
lock
push
rol
pop
jp
xor
sub
adc
lods
enter
mov
shlb
nop
test
sbb
or
mov
hlt
loop
push
push
jnp
push
and
sbb
in
xor
push
shlb
clc
popf
cmp
sti
sbb
xor
sbb
and
popf
adc
cmp
movb
push
int
add
ds
pop
addb
loope
cwtl
lock
push
sub
stc
sub
jo,pt
pop
pavgb
icebp
add
push
testl
rorb
xchg
mov
shll
popw
cmpsl
and
inc
push
pop
nop
js
xor
negb
pop
cmp
ljmp
subb
mov
subb
dec
fiadds
mov
gs
add
cmp
push
and
movb
inc
adc
cmp
sub
jl
insb
testb
addr16
les
sahf
ljmp
cmp
leave
pop
sub
jne
jmp
aas
mov
push
es
sub
ret
andb
stos
cwtl
push
js
mov
add
clc
pop
push
std
subl
and
xor
xchg
in
inc
adc
arpl
lock
pop
aam
inc
add
and
ljmp
iret
in
xorl
or
xchg
mov
notl
inc
cwtl
xchg
cmp
pop
lock
jo
mov
testl
or
push
add
pop
pop
sbb
bound
cmp
push
mov
aam
ds
add
mov
movd
sbb
jae
lds
dec
cmp
mov
out
inc
lock
pushf
cltd
add
rcll
pop
out
ret
rclb
xchg
mov
pop
mov
nop
jb
adcl
jo
enter
jnp
cli
sub
and
jae
adc
gs
jo
adc
add
js
xchg
push
mov
xchg
jl
jle
xchg
sbb
sbb
or
xchg
inc
mov
out
repnz
adc
push
mov
sub
and
jno
cli
xor
sbb
popf
sbb
adc
mov
mov
popf
add
sarb
andl
enter
loop
sbb
sub
insb
xchg
sahf
lret
jno
popa
xchg
add
dec
push
add
sbbb
int3
and
mov
push
pop
lcall
jne
mov
adc
cmp
and
jmp
pop
push
enter
push
gs
data16
cmp
stc
stos
repz
in
and
js
xor
mov
sbb
test
aas
gs
add
pop
or
test
addb
pusha
add
lods
jecxz
in
and
bound
add
mov
mov
adc
push
and
dec
pop
adc
inc
cmp
es
mov
dec
rcll
icebp
and
mov
push
sbb
adc
push
shrl
rolb
cmc
subl
test
xchg
dec
shlb
pushf
mov
inc
xor
cltd
bound
test
jo
pop
xchg
cmc
jnp
dec
push
fsts
dec
or
bound
das
add
loop
or
sub
into
add
cmpsb
add
push
cwtl
andb
xchg
mov
movsl
inc
popf
imul
stos
out
adc
push
xchg
lock
and
inc
adc
in
or
push
ljmp
push
repnz
outsb
jo
pop
inc
xor
arpl
and
and
adc
mov
loop
mov
cwtl
pop
sub
insl
cwtl
xor
cltd
mov
pop
es
sbb
or
rcrb
or
es
cmc
icebp
adc
jl
mov
lret
inc
jne
sub
fists
add
loope
or
test
inc
xchg
pop
rorb
addr16
clc
fwait
inc
cmp
or
pop
outsl
sub
sub
call
jl
mov
sbb
loope
mov
and
shll
or
mov
sbbl
sub
shl
test
cmp
test
xor
pop
and
push
arpl
sbb
hlt
lods
notl
or
and
push
adc
and
int3
cmpl
pusha
jecxz
lcall
bound
cs
rcr
ja
or
xor
sbb
mov
xchg
jns
dec
jg
inc
mov
lcall
or
pop
xchg
notb
mov
add
mov
or
add
xchg
bound
cltd
mov
mov
enter
cwtd
mov
sub
push
enter
mov
mov
mov
jmp
pop
sbbl
pushl
cmp
vmovq
or
cs
adc
rorl
cmp
lock
sbb
lea
inc
xchg
adc
push
pusha
mov
push
gs
sbb
mov
and
xorb
loope
jge
xor
lahf
rcrb
sbbb
sub
xor
push
and
and
push
inc
mov
sub
loop
insl
lock
cmp
xor
add
cmp
sbb
mov
push
popf
and
scas
push
mov
lret
adc
or
push
xor
dec
cmp
sbb
arpl
mov
or
pop
push
adc
and
adc
and
fstps
add
pop
scas
dec
xchg
jns
aam
push
push
inc
and
shll
loopne
mov
lret
rolb
or
sub
int3
push
adc
sbbb
int
mov
sbb
mov
xchg
into
cmp
repz
add
push
repnz
lock
shl
mov
jne
mov
addb
mov
movsb
les
mov
addr16
mov
pop
hlt
les
shlb
clc
dec
in
xor
inc
adc
nop
or
mov
fbstp
cmp
cmp
clc
push
outsl
scas
cmp
test
push
lahf
push
and
jg
push
add
sbb
inc
movsb
aaa
sbb
xchg
push
icebp
ljmp
and
or
mov
frstor
cmp
sub
es
jno
adc
adc
mov
mov
fcom
cmp
jl
test
test
jne
adc
mov
xchg
push
xchg
inc
jnp
mov
rolb
push
dec
cmp
mov
lea
fcmovnu
sbb
stos
test
or
xor
dec
les
loopne
adc
cmp
jnp
jl
roll
adc
push
stc
jno
sbb
xlat
adc
mov
insb
mov
and
and
mov
jae
cmp
ljmp
mov
sbb
inc
adc
hlt
pop
test
xlat
pop
xor
cmp
cli
mov
mov
test
inc
xor
dec
sub
push
push
fwait
mov
dec
les
popf
mov
or
cmp
and
adc
add
out
and
mov
mov
jae
sub
dec
insb
mov
sbb
xor
orb
cmp
in
push
pmaddubsw
xor
adc
stos
jge
fildl
pop
cmp
lds
jp
ss
adc
adc
push
cmpsb
xlat
jne
mov
loopne
xchg
mov
jne
push
jne
aam
add
movsb
pop
mov
std
stos
test
aad
les
xchg
push
adc
icebp
testl
xor
rcrb
andb
test
ds
jbe
and
orb
push
mov
jo
test
push
cli
adc
push
pop
pop
mov
andl
fistpll
popa
adc
hlt
cs
shrb
lea
cmpsl
icebp
mov
xchg
mov
adc
and
mov
and
cli
and
adc
mov
and
shlb
roll
es
dec
add
mov
mov
hlt
pop
sub
inc
mov
mov
xor
cmp
sbb
xor
faddl
push
and
dec
and
scas
mov
fs
lcall
and
adc
mov
xchg
adc
in
xor
insl
xor
pop
lret
sahf
gs
inc
dec
addb
xchg
mov
mov
mov
loopne
inc
leave
or
inc
mov
ljmp
sub
cmp
outsl
or
add
pop
shrl
jo
jbe
pop
mov
leave
mov
add
dec
dec
js
xor
and
xchg
lds
sbb
enter
lahf
cmp
add
adc
dec
rcll
cwtl
addl
lahf
lea
add
stos
mov
jbe
add
mov
test
xor
mov
out
mov
or
faddp
js
mov
cmp
sub
cmp
jg
dec
lahf
xor
je
push
mov
dec
push
out
xor
rcrb
and
mov
andb
adc
dec
shll
mov
add
dec
pminsw
shll
sbb
out
inc
cmp
mov
mov
pop
lahf
cmp
les
push
int3
inc
test
lahf
adc
mov
mov
mov
loop
xchg
add
cmp
imulb
mov
mov
add
pop
xlat
adc
xor
and
adc
push
cwtl
pop
out
or
bound
mov
daa
lret
mov
sbb
or
fwait
sub
sahf
cmc
stos
xor
jno
mov
pop
ret
nop
lods
or
cmp
clc
or
adc
sahf
jp
xchg
movsb
mov
push
pop
pop
mulb
sub
inc
subb
cmp
iret
xor
ret
push
sbb
mov
push
loope
icebp
jbe
lret
cmpsb
dec
or
movl
mov
push
and
std
inc
aaa
scas
subl
outsb
xor
mov
sbb
mov
push
clc
mov
test
and
enter
jbe
andb
push
xor
and
and
mov
inc
adc
inc
adc
pop
pop
in
movb
or
imul
mov
xor
push
outsb
hlt
jno
testb
loop
outsl
push
pop
add
scas
add
xor
push
js
mov
mov
mov
aas
adc
push
jg
pusha
xchg
jns
leave
add
out
mov
inc
add
push
lea
pop
inc
sbb
outsl
cmp
mov
mov
es
lock
test
icebp
mov
xchg
inc
adc
or
or
sbb
jo
adc
hlt
in
or
jbe
loopne
ret
call
sub
icebp
and
pop
divb
leave
mov
enter
loopne
add
xor
loop
lds
mov
and
js
in
insb
push
adc
mov
pop
jle
jmp
push
xchg
jbe
or
test
or
sub
push
or
fsubp
dec
test
xchg
sti
pop
jge
xchg
jge
leave
roll
outsl
xchg
aad
arpl
xchg
or
and
scas
in
fs
clc
sbb
xor
and
into
ret
and
cmp
outsl
sbb
adc
clc
sbb
or
fldcw
mov
sub
out
fsubr
lds
jns
shlb
adcl
adc
mov
int
cmpl
inc
sub
and
mov
sub
loopne
mov
mov
xor
push
inc
into
jmp
ret
adc
lcall
cwtl
rolb
stos
pusha
inc
pop
xor
mov
xor
push
mov
aam
adc
aam
or
js
insl
push
cmp
mull
and
lods
add
dec
popf
mov
dec
pop
pop
loop
mov
mov
ss
cmp
pop
mov
popa
inc
add
cmp
jb
xorl
mov
add
or
mov
fiaddl
mov
dec
sub
mov
jbe
lods
push
add
ss
cmovae
push
icebp
jne
xor
dec
ss
add
dec
add
aaa
sbb
aad
insl
imul
arpl
jp
add
jae
lock
pop
push
add
inc
push
out
jp
add
into
test
adc
stos
push
adc
dec
sbb
mov
and
nop
push
pop
sub
cmp
mov
orb
or
adc
das
add
dec
and
cwtl
lods
mov
sbb
lods
mov
adc
or
mov
add
dec
xor
mov
cmp
pop
stc
shll
sub
stos
mov
xor
hlt
outsb
arpl
pushf
add
inc
jb
mov
ret
loopne
xchg
fsubl
push
mov
mov
lret
or
jae
in
int
jp
hlt
ret
jge
daa
pop
xchg
mov
lock
cmp
cmp
xlat
sbb
add
pop
mov
xor
push
pop
cmpl
inc
or
mov
jl
or
dec
dec
test
stos
mov
lods
mov
add
mov
add
sbb
movsb
pop
jp
das
test
notl
nop
inc
pop
mov
rcr
xchg
mov
or
sbb
xor
aam
or
outsb
out
dec
movsb
jp
repz
jb
add
ljmp
dec
adc
push
adcb
adc
dec
addl
inc
jbe
mov
xchg
subl
or
mov
imul
mov
or
add
enter
popa
mov
sbb
xor
pop
lock
lret
mov
xchg
mov
mov
sub
mov
out
rcr
cli
mov
mov
mov
xor
andb
hlt
rcrb
inc
cmc
es
push
and
sbb
inc
jge
test
push
sbb
push
jo
mov
push
shrb
push
negb
inc
inc
shrb
addb
inc
dec
les
call
sarb
xor
idivl
push
jecxz
push
je
xchg
call
push
int3
cwtl
push
subb
aad
sub
inc
pop
stos
and
mov
add
clc
pop
sbb
sub
dec
jno
lea
ret
adc
add
dec
xorb
push
icebp
mov
mov
inc
bound
rclb
pop
sbbb
inc
or
xor
dec
call
jae
mov
pushf
es
ret
dec
loopne
fwait
lods
cmp
or
jb
push
pop
mov
sbb
xor
adc
movsb
aaa
incb
pop
lahf
pop
pop
and
jnp
fimuls
test
adc
adc
cs
add
ljmp
stc
sbb
mov
dec
pop
pop
fs
xchg
mov
inc
imul
bound
push
jp
xor
push
lods
sub
push
xor
push
dec
xchg
cmp
mov
mov
mov
sub
mov
xor
push
mov
adc
mov
xchg
inc
sub
or
xor
cmpsl
data16
mov
shrb
adc
icebp
sarl
xlat
mov
sub
insb
les
lods
adc
dec
sub
sub
dec
xchg
sti
adc
push
add
add
sbb
test
test
test
and
out
jo
mov
and
lds
outsb
xor
mov
mov
outsl
sti
or
xchg
adc
not
mov
xor
lds
mov
mov
jne
and
jne
out
cmp
sbb
and
inc
dec
aaa
cmp
xor
add
or
mov
shlb
dec
cmp
xchg
and
mov
mov
inc
or
jecxz
cltd
cltd
dec
adc
jae
sub
daa
icebp
mov
inc
lret
lds
mov
mov
or
push
add
sbb
xchg
mov
jbe
movsb
add
sbb
mov
out
cmp
lods
inc
sarb
jnp
cmp
pop
test
pop
mov
or
fadds
bound
cmpb
adc
stos
inc
mov
std
lret
ja
and
push
adc
pop
cltd
rclb
out
pop
rorb
loopne
mov
adc
in
pop
popf
jns
mov
aam
popa
pop
push
ds
daa
sub
cmpsl
xor
or
add
aam
sbb
mov
je
jo
mov
fs
pop
cmp
orb
xchg
loopne
and
test
into
lock
movsb
add
inc
stos
stc
inc
test
shrb
mov
cmp
add
push
rcr
pop
in
push
fcom
mov
das
mov
mov
xor
ja
lods
mov
loopne
in
push
int3
subl
jg
jns
adc
push
mov
pusha
popa
cmp
cmc
jne
movsl
addr16
nop
cmc
jo
fiadds
xlat
stos
das
cwtl
push
shll
sub
aaa
js
pushf
pop
add
dec
andl
mov
inc
xor
sbbb
mov
roll
loopne
inc
mov
nop
loope
fdivs
xor
add
lods
loopne
xor
or
xchg
cmpsb
pusha
shlb
add
pop
lds
lock
rcrb
push
mov
jmp
jo
pusha
push
imul
sub
jbe
lahf
add
das
roll
jl
loop
test
jp
xchg
inc
push
aam
dec
stc
mov
xor
in
push
icebp
in
stos
and
iret
adc
fsubl
xlat
mov
add
cld
insl
test
daa
rorb
ret
stos
adc
adc
fcoml
xor
je
sahf
xchg
adc
sbb
and
mov
cmpsb
stos
mov
or
adc
sbb
xor
mov
sbbb
inc
rclb
popa
loope
cmp
mov
mov
and
scas
push
ret
clc
sbb
mov
dec
mov
mov
jno
test
push
sarl
or
mov
addr16
jge
test
fstcw
je
pop
sub
fildl
dec
sarb
enter
cmp
js
in
fcoml
dec
scas
push
push
fsubrs
sbb
cld
test
cli
push
push
jnp
arpl
mov
pop
ficoms
mov
ja
cmc
cltd
lcall
sub
push
fwait
jo
cmp
jge
loopne
xchg
sahf
pop
test
rorb
jp
faddl
inc
mov
jo
pop
mov
adc
or
js
xchg
pop
cwtl
sub
nop
adc
jne
jp
call
addb
push
popf
je
data16
aam
arpl
jne
in
sbbb
mov
hlt
sub
sub
lods
cltd
push
pop
mov
call
in
fcoms
es
inc
add
mov
movsl
push
mov
out
sarl
and
mov
dec
inc
adc
ja
pop
jo
adc
inc
jmp
popf
ret
adc
dec
dec
inc
out
jmp
es
or
jne
fwait
stos
aas
and
in
xchg
add
rcr
addl
movsb
mov
push
pop
rcrb
scas
nop
xor
cmp
jg
cld
outsb
adc
adc
cmpsl
adc
andb
rorl
inc
movntps
mov
push
inc
cli
push
mov
pop
hlt
movsl
jmp
std
jne
inc
loop
lods
jp
adc
repz
inc
push
ss
xor
or
idivl
add
loop
dec
cmp
int3
xor
outsl
add
add
or
mov
gs
adc
mov
repnz
dec
addb
mov
sbb
fwait
push
fcompl
or
sub
mov
jl
add
mov
mov
or
loope
pop
jns
inc
das
and
push
adc
sbb
notl
shl
sbb
mov
jge
loopne
mov
nop
outsl
push
scas
push
jnp
lahf
jp
push
pop
adc
mov
push
xor
fcmovu
addl
mov
out
push
into
cmpl
jmp
sub
loopne
add
loopne
pop
mov
jnp
xor
lds
xor
clc
push
iret
mov
ja
jno
iret
andb
adc
hlt
daa
call
push
push
int
add
or
decl
sbb
cmp
mov
push
adc
add
das
jp
mov
push
push
and
xor
ljmp
es
int3
inc
sti
stos
push
rcrl
fcoms
push
inc
insb
movsb
sbb
loopne
outsb
add
les
shlb
mov
fcmovu
mov
xor
das
fwait
mov
xor
scas
fstps
aam
inc
sbb
mov
mov
pop
subb
jle
rolb
andl
sub
mov
xchg
push
inc
pop
cld
push
and
mov
ret
mov
and
cmp
imul
mov
call
push
jmp
push
pop
out
mov
add
sbbl
or
fst
pushf
fsubrs
dec
rorb
shlb
fists
jmp
pop
push
or
insl
sbb
xor
dec
jp
in
in
mov
pop
sub
mov
inc
xchg
dec
push
push
sub
pusha
mov
dec
mov
push
mov
xlat
adc
pop
test
pop
outsb
and
mov
jo
or
insb
out
mov
data16
das
mov
iret
loop
movsb
inc
adc
fisubrs
sbb
push
sti
mov
sub
daa
ret
hlt
mov
movsb
bound
jmp
jle
icebp
push
pop
inc
stos
stos
or
sbb
test
pop
dec
arpl
inc
sbb
dec
gs
mov
hlt
fisubl
or
inc
xchg
or
shlb
add
test
popa
or
out
lcall
cs
push
adc
stos
or
addr16
dec
adc
int
inc
out
sub
pop
imul
imul
or
mov
syscall
jb
cbtw
int3
fs
adc
and
add
test
ja
mov
subl
lds
andb
jp
jbe
push
jo
jae
test
dec
mov
sti
adc
dec
adc
lock
popl
add
sub
push
mov
xchg
jge
inc
shrl
mov
test
dec
xchg
stos
sbb
pop
pushf
loopne
mov
push
mov
je
popf
xlat
loopne
dec
mov
and
aas
sbb
xor
xor
sbb
xchg
xchg
aam
in
cwtl
xchg
mov
or
sbb
loop
inc
jnp
xor
sbb
fmull
inc
and
data16
cmpsb
inc
test
jo
xorl
and
add
sbb
call
ljmp
adc
push
int
and
xor
xor
xor
inc
push
pop
outsb
cmp
lcall
mov
add
mov
dec
cmc
jnp
fsts
xor
or
sbb
fs
push
add
dec
insl
sub
cmp
pop
ja
mov
mov
pop
cmpsb
mov
dec
ljmp
flds
xchg
jb
imul
dec
pop
adc
orb
cmp
push
cs
fs
add
arpl
cmp
sbb
jbe
jbe
mov
popa
pop
and
inc
xor
or
js
ss
sbbb
leave
xor
leave
adc
jo
xor
arpl
or
pop
out
mov
jle
cmp
pop
sbb
arpl
inc
cmp
jb
push
dec
jo
mov
in
add
ret
mov
lea
sahf
inc
cs
test
push
push
bound
xor
test
dec
rorb
xchg
or
inc
xchg
push
enter
dec
push
push
sub
fs
xchg
cwtl
enter
sbb
sub
mov
adcl
inc
rorl
push
cmp
inc
sub
inc
pop
arpl
adc
or
sbb
mov
insb
test
pop
push
push
jbe
adc
bound
arpl
repnz
dec
lcall
jbe
dec
daa
retw
xchg
pushf
mov
xor
or
mov
pop
push
mov
or
enter
push
and
ja
outsb
push
add
sbb
adcb
dec
pop
push
add
xchg
push
pop
lods
in
cmp
mov
dec
mov
pusha
and
inc
lods
outsl
and
xor
mov
insb
inc
jno
or
xchg
xchg
test
popa
movsl
dec
dec
cmp
push
outsl
test
add
add
and
shr
inc
fs
jne
lods
stos
gs
dec
push
test
and
arpl
gs
fs
add
dec
push
mov
push
dec
jne
mov
push
adc
jp
add
xor
adc
inc
imul
mov
or
and
add
adc
dec
push
je
minps
test
push
inc
and
enter
popa
pop
les
sbb
adc
sub
jne
repnz
add
rcr
jp
imul
jbe
es
gs
bound
popa
adc
xchg
dec
or
xchg
aam
mov
rcll
push
mov
push
ss
pushl
std
push
push
es
add
dec
xor
or
dec
arpl
jne
lods
mov
lcall
xor
outsl
sbb
sub
daa
mov
dec
ss
les
add
mov
xchg
add
add
lds
or
dec
jp
pushf
adc
xor
in
pop
xchg
jp
add
cmc
inc
jbe
bound
push
xor
mov
xor
scas
adc
imul
cmpsb
push
aas
dec
mov
cmp
dec
cmp
jbe
xor
or
repz
pusha
mov
cld
mov
mov
jp
arpl
into
cwtl
repnz
or
add
mov
sbb
jecxz
cmc
pushf
add
mov
loopw
out
repnz
xchg
pop
and
out
ljmp
mov
pop
loopne
repz
jnp
inc
int
push
shr
inc
scas
sbb
fdiv
stc
cmp
fs
push
push
push
mov
dec
mov
js
mov
dec
shl
scas
lea
loope
xlat
cltd
xchg
outsb
pause
scas
rorb
xor
pop
jae
dec
cmp
xchg
xchg
loopne
lahf
push
cmp
cmp
aaa
divb
pop
xor
mov
incl
xor
mov
pop
fisubl
add
xor
jle
sbbl
loop
loope
inc
push
pop
xor
pop
or
mov
pop
outsb
xor
div
push
jl
mov
inc
dec
mov
cmp
mov
sbb
inc
or
call
fcomps
jnp
or
dec
test
pop
loop
cmp
popa
or
push
jmp
mov
lcall
mov
mov
inc
jnp
pop
mov
subb
test
or
sub
in
pop
push
test
sub
and
push
pop
test
lahf
loop
mov
mov
sub
out
mov
orb
jnp
or
sbbl
push
cmp
xor
xchg
cs
gs
push
ficompl
outsl
jb
jo
push
push
ja
mov
inc
push
xor
and
pop
xchg
jp
roll
cmp
xor
mov
pop
xor
xor
xchg
pop
sub
inc
fimull
dec
dec
ss
pop
pusha
ja
push
adc
cltd
or
ret
sahf
cmp
mov
in
cltd
mov
mov
imul
and
test
mov
pusha
push
pop
xchg
mov
fistpll
push
dec
jp
xchg
cmp
ja
jb
fistps
decb
test
and
fdivs
pop
imul
jb
mov
or
int
pop
imul
mov
add
orl
fdivr
js
test
and
pop
iret
push
arpl
and
jg
pop
xchg
cmp
insb
push
xor
sub
lea
out
mov
dec
stos
jnp
dec
and
push
and
dec
jno
push
push
push
test
push
jl
fdiv
sbb
or
out
xchg
mov
or
imul
push
adc
or
cmp
std
pusha
pop
push
pop
stc
cmp
mov
frstor
out
mov
mov
push
jle
inc
inc
jo
dec
pop
add
nop
jnp
dec
sbb
mov
ljmp
jle
test
mov
mov
push
mov
out
jg
pop
cli
mov
xorl
dec
xor
lds
pop
vmaxps
repnz
shrl
decl
push
push
adcl
aas
popa
jge
adc
pop
fidivl
in
mov
jb
sub
js
mov
loop
mov
ficoms
push
data16
pushl
pop
imul
cmp
jecxz
dec
in
test
fisubl
mov
xchg
pusha
dec
mov
fdivl
pop
clc
mov
cmp
imul
popf
mov
sub
not
or
xchg
or
pop
test
pushl
xchg
jl
ret
pop
cmp
pushf
mov
jb
cmp
fcoms
cltd
sbb
pop
mov
inc
xor
dec
mov
push
lahf
std
test
mov
xchg
out
push
pop
popa
in
subb
sbb
xchg
test
jae
aaa
popa
sti
or
loope
mov
xchg
aas
mov
mov
addr16
in
stos
test
add
shlb
mov
cmp
pop
mov
and
sub
ror
mov
in
cmp
mov
and
ret
loopne
int3
mov
aaa
popa
mov
arpl
adc
inc
mov
roll
jae
pusha
pop
mov
aam
jp
lcall
mov
mov
jns
pop
pop
repnz
jnp
pop
ss
ficomps
mov
add
popa
push
aam
sub
pop
pop
adc
call
fisttps
sub
cmp
loopne
push
jecxz
inc
out
test
test
nop
test
fcomip
mov
mov
fld
in
pop
mov
nop
push
ds
and
inc
int3
imull
in
pop
pushf
dec
xorb
pop
xchg
in
scas
inc
push
not
das
or
out
outsb
clc
enter
add
xor
mov
leave
mov
push
test
dec
aas
xor
nop
ret
sub
pop
fildll
aaa
mov
and
shll
cwtl
mov
dec
das
xchg
push
pop
xchg
sbb
fldenv
ret
ljmp
pop
mov
dec
sub
das
cld
ljmp
test
pusha
out
dec
stos
push
lds
jae
test
scas
out
cli
outsl
jnp
or
xor
push
sub
sbbl
lock
das
pop
js
jne
fwait
insb
in
insl
test
sbb
jae
daa
in
sub
fstpl
aas
adc
mov
pop
mov
pop
xlat
mov
call
xor
fidivrs
inc
lea
jae
and
dec
ud0
movsl
test
pusha
js
xchg
cmpsl
call
jge
orl
cmpsl
pop
mov
push
mov
inc
lea
mov
pop
and
ljmp
fmul
xchg
data16
call
dec
imul
mov
xchg
push
ret
aaa
jae
xchg
cli
aas
incl
pusha
inc
cmp
pop
scas
dec
mov
test
push
aad
cmp
sub
jmp
out
test
roll
cmp
mov
test
icebp
pop
jns
sub
jae
dec
dec
fistps
mov
pop
xchg
xchg
cmp
jg
notl
outsb
pop
pop
adcl
add
push
mov
in
cmp
lods
test
xchg
push
mov
loop
loope
pop
sbb
dec
mov
scas
jg
stos
orl
mov
outsb
loop,pt
stos
dec
pop
lcall
add
adc
mov
push
sti
lcall
inc
and
pop
xor
ret
jnp
lods
push
cmp
in
inc
jmp
or
pop
loope
add
cmc
addr16
jg
adc
cmp
cmpsl
insl
sbb
jns
gs
leave
sar
sarb
das
mov
fwait
pop
mov
push
pop
ja
popa
dec
mov
or
pop
xchg
mov
or
cmp
ja
clc
in
mov
ss
adc
or
std
adc
mov
mov
cmpb
xor
aam
imul
call
sbb
dec
aaa
lret
mov
sub
pop
rclb
pushl
pop
call
addr16
mov
movsl
aaa
mov
outsb
clc
sub
pop
inc
dec
pop
xchg
mov
jo
dec
fimull
mov
xor
cmpsl
ret
mov
mov
xchg
and
and
xchg
lret
dec
cmp
add
fcmovnu
xor
pop
or
out
das
mov
ffreep
xlat
out
test
outsb
inc
pop
pop
jo
inc
call
in
testb
sahf
cmp
cmpsl
dec
sub
insl
lcall
jle
jns
mov
inc
or
pop
xchg
pusha
mov
jbe
jle
sbb
lods
sbb
xchg
cwtl
xchg
rcrl
sub
add
jl
hlt
adc
or
mov
jmp
mov
sub
inc
aas
shlb
xchg
or
mov
push
mov
data16
fldt
shrl
inc
dec
lea
aas
push
out
jecxz
xor
xchg
lret
insb
mov
dec
pop
sub
hlt
outsl
lock
xchg
push
dec
xor
xchg
mov
or
es
xor
jo
jl
mov
roll
pop
xor
outsl
mov
dec
test
mov
icebp
outsl
pop
mov
adcb
divl
cli
mov
push
mov
loop
ja
sti
and
or
addr16
icebp
aaa
mov
les
std
dec
in
xchg
sbb
out
jecxz
loope
fistpll
lret
pop
cli
xor
pop
pop
xor
fsubrl
xor
cwtl
fildll
int
outsl
jmp
fimuls
das
push
push
dec
pop
mov
int3
push
or
xchg
lea
dec
imul
clc
pop
xor
lods
pop
xchg
stos
push
adc
lret
arpl
lahf
inc
ja
jg
or
xchg
adc
dec
fisubrs
les
das
jmp
movsl
stc
jg
jno
inc
pop
jnp
pop
inc
cmp
sbb
inc
orb
rclb
push
jnp
sbb
pusha
aaa
ljmp
ljmp
inc
stos
test
sbb
addr16
sub
mov
out
dec
dec
fimull
mov
pop
imul
inc
pusha
loop
jge
inc
mov
syscall
scas
dec
test
mov
mov
push
mov
lds
add
or
mov
add
add
orb
adc
adc
nop
push
add
add
orl
sub
insb
or
stc
in
jns
push
add
data16
inc
ss
xor
dec
dec
inc
arpl
stos
mov
je
jae
mov
mov
aaa
push
add
dec
sub
test
push
js
push
repnz
mov
inc
bound
add
into
insl
iret
ja
outsl
push
aaa
push
and
imul
ja
xor
push
dec
cmp
jbe
bound
add
push
inc
push
scas
jnp
push
dec
dec
jb
mov
mov
adc
insb
inc
dec
inc
jo
stos
fidivl
add
dec
fs
fcomi
ja
push
popa
jno
jb
dec
push
dec
jg
outsl
dec
shlb
add
add
arpl
or
mov
out
sbb
ljmp
call
cwtl
pop
testl
loopne
sidtl
es
js
clc
pusha
cmp
jmp
ljmp
pop
mov
arpl
pop
jae
stos
rolb
jbe
imul
dec
gs
mov
dec
ret
add
je,pn
gs
cli
cmp
adc
jg
ljmp
fisubrl
jb
fs
je
js
imul
cmp
insl
cs
notb
fcoms
popa
mov
inc
rorb
call
loop
mov
and
mov
ljmp
mov
dec
les
ret
push
xor
fadds
jae
lret
dec
jmp
call
sbb
inc
add
mov
or
insb
xlat
add
pop
pop
dec
insb
xchg
imul
ds
mov
outsl
xchg
mov
fnstenv
cwtl
data16
sub
rorb
pop
les
push
jae
enterw
int3
cli
mov
pop
aam
shlb
dec
fdivr
cli
aam
loopne
fcompl
jae
jnp
jl
jge
pusha
jl
in
mov
jp
loop
push
hlt
pop
lock
fisttps
enter
hlt
jp
loop
push
cld
pop
clc
jnp
bound
mov
cld
dec
nop
jp
mov
cli
xchg
loop
push
or
jnp
bound
jp
loop
push
adc
jnp
bound
jp
loop
push
sbb
cs
fmuls
dec
jmp
pop
sbb
lods
jg
xchg
outsl
dec
in
lock
sbb
bound
push
and
jb
data16
sub
out
testb
xor
xor
cmp
pop
jae
test
fcomi
in
andl
dec
mov
cwtl
jae
pushfw
adc
pop
lcall
cli
pusha
mov
test
insb
data16
jo
mov
je
mov
js
mov
loope
mov
dec
sar
mov
enter
int3
nop
dec
out
stc
call
cli
xchg
mov
fdivs
data16
mov
xchg
in
lods
data16
in
mov
lock
mov
hlt
push
mov
adc
jg
lcall
sub
sti
add
mov
mov
enter
inc
cmp
or
pop
cmp
mov
rcrb
into
data16
adc
fsubs
sub
dec
sbb
loopne
and
in
and
call
data16
in
dec
sub
lock
clc
data16
mov
rorb
jp
cmp
inc
pop
or
data16
int3
idiv
gs
cli
push
mov
sbb
data16
and
fisttpl
sub
data16
insb
dec
xor
jo
xor
je
pop
mov
js
inc
jl
ja
mov
mov
mov
inc
jmp
push
popa
mov
int3
shl
mov
pop
jp
insb
test
outsl
mov
shrl
aaa
test
mov
dec
js
lods
pusha
enter
decl
mov
add
push
push
add
movsbl
or
or
mov
inc
jg
dec
add
push
or
jge
call
pushl
or
add
push
or
pop
in
pop
data16
sbb
subl
inc
popa
pop
mov
sub
sbb
sub
xchg
inc
mov
or
sub
call
je
cmp
cmpl
loopne
movsb
mov
push
sbb
roll
add
cmp
jle
sub
cmp
cmp
inc
mov
or
int
jmp
imul
fimuls
sti
sub
das
and
repz
fstl
jle
mov
dec
mov
dec
mov
call
inc
mov
cmp
mov
xor
and
pop
decl
mov
adc
test
mov
fwait
orl
sbb
lcall
pop
pop
and
pop
cmpsb
sbb
push
nop
clc
mov
mov
and
loop
sti
cs
inc
sub
or
pusha
push
mov
outsb
testl
add
sub
imul
incl
pop
adc
in
and
pop
ja
inc
in
mov
pop
fcomps
cld
inc
ss
lcall
cmpsb
rclb
and
orl
push
push
ret
in
pop
add
push
mov
jne
sub
xor
decb
mov
pop
sbb
push
test
jno
enter
es
jg
lods
gs
stos
popa
ja
xor
call
and
js
or
pop
push
sub
in
movzbl
addl
cld
call
mov
stc
mov
pop
in
js
push
jmp
aaa
fucom
call
mov
movl
clc
call
lcall
inc
push
xlat
lret
inc
jle
cli
and
push
lret
lock
clc
out
and
sar
pop
xor
loopne
int3
push
in
jle
bound
lret
inc
decl
jmp
pop
pop
and
push
ljmp
inc
fdivp
mov
jmp
mov
mov
arpl
aas
adc
mov
stos
gs
pop
loopne
mov
add
js
and
or
adc
call
xchg
mov
fisubs
cld
aad
sbb
divb
inc
repz
or
cltd
js
cmc
sub
pop
mov
adc
test
jg
je
cltd
dec
push
lret
and
insl
jo
pusha
shl
mov
push
jo
pop
pop
jg
add
out
inc
call
decl
jno
push
push
jb
or
dec
or
fs
mov
ret
lock
jle
pop
das
xor
dec
imul
fs
sbb
loope
imul
scas
lret
xor
outsb
push
mov
js
mov
sub
dec
or
ror
fwait
repz
dec
nop
lret
fnstsw
lcall
cmp
sub
inc
inc
sub
and
or
pop
inc
rolb
add
clc
adc
stos
shrb
fsubs
sub
or
push
push
push
mov
loope
jmp
stos
aad
ret
mov
push
fimull
into
call
dec
out
lods
pushf
sub
inc
jb
dec
pop
stc
cmp
popa
sahf
in
call
adc
inc
sbb
cmp
push
out
mov
call
sbb
pop
out
enter
jge
jg
incl
je
movb
mov
mov
dec
leave
jbe
out
pusha
ud0
jmp
cmpsl
repnz
ds
mov
into
sbb
imul
jo
andl
fdivl
incw
sbb
xor
sarb
jg
repnz
ret
cmp
xor
sti
inc
cmp
push
sti
and
add
cs
mov
push
in
dec
mov
in
fnsave
or
pop
push
xchg
mov
jns
nop
addr16
pop
js
dec
shr
cld
movsl
push
test
ljmp
add
and
sub
idiv
sti
jle
jp
mov
shl
mov
sbb
out
lods
call
std
call
add
js
insb
sbb
lcall
outsb
popf
clc
mov
shll
outsb
lahf
jns
xchg
mov
out
lcall
pop
push
clc
call
and
add
aam
scas
push
in
pop
aad
xor
decl
pop
dec
or
push
xchg
add
movsb
push
bound
cwtl
cwtl
jge
clc
jbe
rcrb
les
dec
shll
int3
cmp
sbbl
filds
and
jno
mov
outsl
dec
repz
ljmp
call
cmp
mov
and
call
add
test
mov
jle
std
mov
inc
mov
sbb
cltd
int
jecxz
jno
cs
inc
imulb
cmp
add
jae
or
fdivs
jmp
out
test
clc
xor
pop
jecxz
insl
and
pushf
ljmp
mov
push
out
dec
push
dec
mov
fsubs
es
mov
mov
add
clc
in
out
jecxz
sub
test
mov
pushf
and
dec
xor
xchg
sbb
lock
mov
mov
mov
pop
cmp
pop
jg
xchg
ljmp
mov
jecxz
dec
int3
call
push
inc
fists
mov
cld
push
dec
push
jns
mov
jb
push
sub
pop
pop
mov
mov
popa
in
lods
mov
mov
enter
xor
dec
decl
cld
pop
ljmp
add
and
or
movsl
repnz
mov
or
xor
int3
enter
rcrb
push
repnz
lea
cld
add
decl
push
pop
call
out
stc
dec
in
adc
outsl
cld
xchg
clc
push
pop
in
lret
push
cli
sahf
jle
in
and
jecxz
push
das
cmp
fucomi
fnstsw
cld
and
jno
adc
bound
test
clc
cs
js
daa
fdivs
pop
xlat
decl
or
loope
out
fwait
popa
das
sti
inc
mov
mov
jns
sub
adc
dec
cld
call
pop
and
jp
popa
inc
shr
add
jbe
icebp
ljmp
pop
clc
into
adc
lret
sub
dec
add
in
adc
dec
mov
ljmp
std
dec
int3
lea
inc
div
add
cmp
jl
ds
negl
push
lcall
repz
mov
call
in
cmpl
pop
lods
mov
incl
aaa
cli
cmp
jne
or
add
andb
mov
incl
cmp
in
or
inc
sbb
jmp
outsl
movsb
xor
jecxz
lcall
je
cmp
push
jp
mov
lods
cmp
add
mov
mov
cli
xchg
outsb
ljmp
jmp
or
or
or
add
jb
add
pop
mov
cld
ljmp
rolb
mov
jb
loopne
test
insb
add
and
lock
incl
add
pop
lods
sahf
popa
pop
sbb
and
idivl
test
loopne
ljmp
jp
cmpsl
jbe
push
mov
pop
data16
adc
jnp
pop
and
sarl
xor
xchg
clc
ljmp
push
push
pop
dec
xor
inc
inc
push
dec
cmp
imul
or
mov
jg
fs
push
rolb
es
pop
loope
enter
ljmp
jg
sub
stos
test
or
pop
push
pop
adc
les
sub
jg
jmp
cmp
imul
push
mov
sbb
pop
out
pop
sbbb
ljmp
inc
push
popl
cld
cmpsb
mov
std
cmpsl
popa
jmp
test
aad
xor
dec
ljmp
add
aam
and
lods
push
xchg
inc
dec
loopne
adc
mov
clc
cmpsb
cltd
jae
test
je
ja
or
sub
dec
mov
imul
jmp
or
sti
loope
icebp
dec
adc
mov
ljmp
and
dec
repnz
jg
xor
repz
or
hlt
in
lds
into
cmp
pop
call
scas
mov
pop
decb
push
push
test
pop
loopne
cmpsb
je
mov
cmc
decl
pushf
imul
call
adc
push
lock
adc
pop
push
push
push
test
or
dec
scas
in
jp
nop
and
lret
nop
jg
decl
inc
xor
mov
xchg
repnz
jg
test
or
imul
xchg
ja
call
les
popa
in
aaa
xor
dec
xlat
lea
fs
pusha
loop
xlat
sub
call
sub
jb
pusha
mov
das
lock
call
sub
es
imul
movsl
push
mov
cmc
cmp
gs
push
popa
push
call
clc
add
jo
aas
xor
pop
ljmp
cltd
fisubl
std
adc
cmp
and
dec
cld
or
call
jmp
stos
pop
cmp
test
sti
cld
adc
decl
mov
sub
lahf
sub
dec
cwtl
aam
and
lcall
sub
cmpsl
or
sub
add
std
jmp
push
push
mov
sub
sbb
jbe
call
mov
ja
mov
cli
sub
adc
push
pushl
inc
push
test
mov
dec
pop
mov
mov
scas
push
hlt
incl
push
dec
in
jb
lods
add
iret
jo
xor
fisubl
sub
sarl
fildll
push
cmpsl
dec
call
inc
mov
incl
out
mov
add
lret
push
in
mov
pushf
cld
inc
pop
cli
dec
push
loope
jo
jb
pop
in
pop
sub
lcall
cwtl
mov
out
jp
rolb
pop
fimuls
pop
rcl
decl
les
rcl
icebp
sbb
and
mov
in
cmp
dec
mov
mov
push
sub
call
jne
dec
mov
mov
iret
fucomip
lea
ja
push
in
ret
jle
and
mov
decb
std
call
out
cli
fs
sub
jle
dec
push
hlt
lahf
in
xchg
outsb
and
pushl
pop
fwait
push
mov
popa
xchg
dec
push
stos
sbb
mov
repz
inc
dec
rorl
ds
daa
jne
pop
or
mov
ds
stos
pop
push
subl
pusha
enter
inc
mov
test
inc
mov
clc
jg
dec
mov
inc
out
or
jecxz
jl
das
mov
lcall
ret
nop
call
sbb
out
cmpsb
lret
test
sbb
push
jo
add
pusha
call
jb
std
outsl
lcall
loop
mov
push
xchg
scas
js
sbb
pop
mov
push
push
or
fbld
icebp
jecxz
sub
dec
fstps
cmp
mov
out
call
btc
jno
stos
pop
je
jg
mov
jns
push
pop
add
pop
push
push
pop
mov
cs
pop
mov
out
std
or
jnp
repz
js
pushl
popa
push
mov
mov
jmp
dec
dec
jns
xor
outsb
xchg
je
jle
callw
pop
inc
mov
inc
mov
ja
xor
incl
decl
gs
loopne
cmp
loop
mov
cltd
and
push
fnstsw
add
sbb
xor
sub
ret
jg
jmp
fisubl
cmp
cli
mov
inc
or
int3
sti
sbb
push
dec
fisubl
add
and
es
xchg
fists
inc
push
and
jb
std
jg
inc
add
clc
fucomip
popa
push
mov
addr16
xor
jnp
cmp
ljmp
sahf
pop
xchg
xor
mov
push
ret
dec
or
cltd
jmp
in
je
ret
test
adc
or
jmp
test
call
and
negb
xchg
dec
enter
pop
int
js
fimuls
sub
dec
mov
dec
xor
or
shr
jg
adcl
mov
push
sbb
fsubl
call
fisttpll
inc
es
inc
int
out
inc
mov
jb
shrb
or
push
dec
sbbl
mov
int
cs
rcrb
arpl
lcall
mov
call
dec
fsubs
push
dec
fcomps
int3
jno
pop
push
cmp
mov
lret
incl
cmp
stos
pop
loopne
incl
lods
pop
call
mov
mov
out
mov
leave
decl
cmp
add
mov
mov
pop
add
or
movsl
mov
add
outsb
sbb
push
ljmp
lock
sub
jle
dec
pop
sar
fildll
dec
sub
loop
jge
into
lret
dec
loop
movsl
decl
faddl
mov
andb
mov
dec
popl
aas
cmp
fiadds
neg
insl
clc
mov
pusha
outsl
cmc
or
popa
mov
cmp
popa
push
jae
mov
aaa
push
cmp
out
xor
jp
fistl
pop
lahf
sbb
xchg
jmp
es
and
cwtl
cltd
mov
fmul
daa
call
scas
add
jns
cmpsl
cmp
lret
out
data16
add
dec
loopne
aam
cld
add
clc
pushf
jge
push
add
sti
mov
call
sbb
lock
movsl
push
cld
or
fiadds
push
lock
jg
jns
arpl
hlt
mov
lret
mov
inc
fcompl
xor
sub
xor
mov
lcall
inc
fisubl
jecxz
cmp
xchg
dec
out
inc
mov
jns
fdivs
inc
xlat
mov
in
xchg
shll
mov
mov
incl
decl
cmp
movsl
lock
mov
arpl
adcl
fldenv
inc
movsl
pushf
rorl
mov
jb
mulps
mov
push
jbe
stc
xor
icebp
out
dec
dec
push
cli
ljmp
and
xchg
lret
xor
popa
scas
data16
stc
push
sbb
mov
dec
adc
scas
sub
and
fdivr
push
mov
jo
xor
jne
test
sbbl
push
hlt
jmp
pop
add
add
xor
mov
dec
ss
and
jg
sbb
xor
xor
sbb
jnp
cmp
lcall
inc
call
push
mov
xorl
jle
mov
outsl
or
sub
movsl
lcall
pushl
lock
push
add
push
push
push
xor
ds
push
loopne
jno
mov
and
xor
jo
into
or
pushl
jle
sbb
call
lret
repz
jg
call
push
es
lock
push
push
div
into
and
subl
xor
jg
mov
mov
in
movsb
aaa
add
dec
cltd
pop
ljmp
or
test
outsb
loop
inc
push
push
ljmp
sub
movsb
pop
pop
mov
clc
adc
add
popf
cs
xchg
out
inc
in
ljmp
adc
cmp
into
and
jge
cmpl
pushl
fcom
loopne
imul
daa
aas
pop
mov
aaa
clc
cmp
das
leave
subl
test
and
imul
bound
in
fildl
push
push
addr16
dec
imul
and
inc
jmp
bound
test
clc
jp
mov
xchg
aad
jns
aaa
enter
cld
jmp
jo
std
dec
bound
cmpsb
sbb
mov
loopne
jge
pop
shrb
mov
decl
sub
push
dec
jg
add
jg
add
out
in
pop
js
subl
aam
dec
cmp
pop
inc
call
dec
push
test
pop
jmp
adc
xor
mov
addr16
mov
lret
aam
not
dec
pop
fsubrs
decl
sbb
dec
xor
dec
insb
out
sti
sbb
stc
arpl
pop
mov
xor
out
das
mov
fiaddl
iret
mov
ljmp
incb
push
xchg
shrd
inc
add
dec
cmp
jg
enter
mov
loop
mov
lods
pusha
jp
loop
cs
icebp
jg
pushl
fsubrs
test
fcoml
outsl
in
sarb
fwait
ss
lcall
std
das
stc
mov
lock
or
pop
jmp
out
jo
dec
mov
arpl
aad
int3
adc
stos
jne
inc
mov
cmp
mov
cmp
into
push
je
jbe
cmp
ss
mov
push
inc
add
cmp
jb
test
jae
jmp
inc
out
je
inc
inc
mov
xchg
push
clc
add
sbb
mov
inc
cld
fucomip
cli
inc
in
jg
call
xor
cmc
filds
jl
ljmp
outsl
mov
mov
adc
dec
adc
jne
mov
outsl
icebp
adc
out
ret
pushl
icebp
dec
fcoms
std
mov
mov
add
push
mov
aam
sub
cmp
incl
je
sub
notl
push
loopne
inc
sub
jns
cltd
std
incl
dec
cmp
pop
adc
sub
les
icebp
mov
add
dec
mov
lea
and
inc
cld
decl
mov
sbb
jae
jae
stos
inc
push
movl
jle
roll
or
mov
outsb
sub
pop
xchg
pop
fstpt
jno
mov
imul
cli
pushl
addr16
mov
stos
js
or
pushl
out
je
xchg
sbb
add
xor
in
xor
mov
out
cwtl
sbb
insl
jecxz
inc
sbb
or
popl
movl
std
sbb
test
push
insb
push
and
sbb
xor
outsl
add
pop
das
aam
mov
and
addr16
xchg
hlt
dec
add
dec
add
cmp
jae
mov
loope
or
scas
xchg
mov
mov
mov
mov
ljmp
pop
je
ret
lock
push
movsl
js
mov
pop
or
add
icebp
jne
push
incl
lret
push
orl
adc
iret
inc
pop
mov
sar
decl
add
pop
add
gs
mov
sbb
cld
mov
push
in
push
add
cmp
or
dec
sbb
clc
ds
cld
test
or
incl
stos
cmp
daa
or
jl
jle
in
push
jp
ror
repnz
adc
inc
xor
jmp
dec
push
je
or
jl
pop
xchg
imul
cmp
jmp
jns
in
cli
push
into
lods
fildl
mov
pop
ret
jns
and
shll
addr16
push
lcall
mov
pop
inc
js
push
push
shlb
ljmp
mov
sahf
sbb
mov
pop
pop
xor
stc
push
mov
or
pop
ljmp
inc
sbb
mov
dec
pop
movsl
call
pop
cmp
or
out
and
cmp
clc
mov
add
loopne
into
in
mov
mov
push
lods
mov
mov
sub
jmp
sbb
aaa
cmpsb
and
dec
roll
call
or
inc
push
out
js
mov
fsub
inc
loope
gs
jg
movsl
jno
inc
fldt
sbb
cs
jne
pushl
cmp
or
push
loop
jne
fdivl
js
mov
adc
cld
mov
add
mov
and
inc
add
jno
mov
lods
cmp
lock
dec
lock
fcomip
ds
sti
adc
cmc
stc
ljmp
xchg
int3
push
push
cmpsb
sub
fwait
sbb
fs
xor
inc
push
cs
sbb
enter
push
in
ljmp
inc
js
cmpsb
inc
sbb
mov
pop
lds
data16
pop
loopne
sbb
call
aam
adc
jnp
ljmp
loop
loopne
lahf
std
lcall
xor
into
lock
mov
xor
mov
dec
int3
in
mov
aas
mov
fbstp
icebp
mov
aaa
sub
fstps
popa
mov
and
jne
adc
decl
jge
jmp
inc
jbe
cmp
push
push
mov
scas
mov
push
jge
jns
clc
leave
adc
call
add
dec
stc
test
movsl
pushf
sub
adc
std
cs
cld
pop
dec
mov
std
add
in
inc
xacquire
mov
push
jge
jo
jmp
pop
lret
pop
js
lcall
jle
and
lock
adc
jp
mov
push
jp
and
mov
xor
loop,pn
xorl
xchg
in
and
jnp
xor
cld
sub
mov
nop
popa
ret
dec
and
test
es
movsl
and
xchg
dec
sbb
sub
add
popa
lret
sarb
mov
ds
dec
xor
lret
lods
lret
pop
jns
pop
aas
rolb
mov
or
jg
xor
fwait
push
lcall
cmp
push
fistpll
not
rcrb
mov
loopne
or
push
sub
mov
outsb
lock
mov
loope
incb
add
jns
push
stos
pushf
push
dec
add
or
push
incl
jmp
ljmp
jle
lock
shlb
out
mov
call
ja
dec
call
lock
dec
mov
push
and
pop
out
dec
add
roll
and
adc
ljmp
js
xor
dec
or
pop
test
cmp
mov
jno
data16
call
mov
xor
idivb
jmp
mov
pop
or
decl
cld
dec
mov
stc
div
punpckhdq
push
icebp
push
xor
pushf
jecxz
cwtl
enter
lcall
sub
fcmovne
cmp
lea
xor
sub
xor
jmp
leave
popa
xor
lods
stos
xlat
add
sbb
adcb
sub
mov
lea
leave
cwtl
repnz
sti
adc
adc
cld
jmp
xchg
fwait
jno
pop
test
icebp
cld
mov
dec
adc
or
mov
add
ret
scas
sbb
pop
loop
lcall
xor
push
cli
mov
cli
adc
jne
adcl
decl
mov
daa
ljmp
and
xor
dec
or
enter
inc
stc
or
repz
add
shrb
ret
sbb
add
lea
mov
movl
loop
stos
call
jae
xchg
push
sub
push
call
jne
int3
mov
sub
dec
sti
scas
dec
mov
stos
into
adc
lahf
sub
sti
nop
xor
cld
fadd
decl
pop
scas
fs
push
pop
loop
ret
cmpsb
sub
cmp
sti
push
mov
jl
dec
cltd
inc
push
js
and
and
stos
pop
dec
push
js
decl
add
sbb
or
pop
mov
mov
das
pusha
ljmp
push
mov
pop
dec
movsb
sub
lock
ja
mov
lret
outsb
xchg
or
mov
incl
adc
mov
sbb
das
les
outsb
dec
aam
or
pop
in
jg
lcall
add
adc
insl
pop
imul
outsl
test
inc
testl
call
sub
xchg
or
mov
add
std
cld
fmull
scas
daa
out
xchg
and
jle
aaa
push
call
rcrl
add
fstpl
ret
xor
mov
aam
fisubrl
call
mov
js
mov
mov
xor
les
lahf
pop
mov
mov
fdivr
decl
xlat
enter
adc
scas
aas
sbb
push
call
pop
cltd
call
push
xor
xlat
adc
out
jl
and
mov
mov
push
fdivr
push
cmp
add
ret
fstp
clc
jg
les
ret
and
push
sbb
shll
xchg
pop
movsb
lods
iret
mov
fsub
inc
dec
lcall
cmp
int3
aad
jmp
sahf
and
mov
push
pop
mov
dec
mov
fstpl
adc
sbb
mov
aas
es
repz
pop
std
inc
ss
shlb
imul
inc
scas
cld
cmpsb
cmp
call
sub
and
test
xor
xor
mov
add
rolb
sbb
lock
scas
jge
jg
push
xor
xchg
movsb
out
je
rcrb
inc
sub
gs
cmpl
fbstp
dec
push
add
leave
xchg
pop
cmp
int3
call
scas
std
xchg
fdivr
mov
jl
pushl
push
popf
xor
mov
out
or
inc
inc
adc
outsl
lods
out
push
fsub
pop
or
jecxz
enter
std
js
rclb
mov
and
cltd
pop
push
pop
adc
inc
push
test
and
jg
inc
mov
adc
xchg
cmp
mov
adc
mov
aam
call
push
mov
mov
dec
push
dec
fs
jae
and
push
aaa
mov
xor
pushl
jmp
jp
sti
mov
mov
daa
rolb
add
jp
rorb
pop
xchg
mov
jle
fnsave
adc
in
dec
jae
xor
mov
and
iret
lock
call
clc
fstpt
mov
sbb
pop
lahf
dec
push
pop
jnp
pop
push
je
or
incl
add
pop
jbe
or
sub
bound
pushf
sub
in
xchg
ljmp
lcall
jg
cmp
mov
dec
inc
pop
sub
outsl
cmc
inc
pushf
inc
jne
ret
adc
cmp
add
clc
out
clc
cmpl
or
sub
lea
jmp
and
shll
and
xor
test
incl
out
inc
mov
mov
pop
xchg
shrb
lcall
or
mov
pop
pushl
outsl
mov
mov
add
push
jg
pushl
fnstenv
mov
and
cmp
rdpmc
fisubs
jb
jmp
mov
adc
adc
popf
js
push
jne
sar
xchg
xor
mov
dec
cltd
mov
cmp
pop
rclb
das
cld
outsl
std
outsl
jnp
pushf
push
pop
and
cs
int
lods
mov
ds
stos
jg
jmp
or
insb
lcall
push
pop
sub
je
stos
fnstcw
aaa
cli
call
xlat
jecxz
sbb
sbb
sbb
mov
lcall
adc
int3
addr16
call
jecxz
arpl
gs
pushl
mov
call
aas
cmp
push
and
jl
lret
test
or
or
jo
mov
incl
mov
loop
ds
add
cmc
icebp
outsb
mov
hlt
loopne
jnp
mov
and
das
jmp
imul
dec
pusha
mov
jecxz
sub
dec
sbb
mov
cmp
mov
push
sbb
popf
vpshuflw
pushl
cld
popa
sub
jno
push
call
push
fsub
xchg
jg
push
cmc
jg
mov
pop
sub
outsb
push
jg
and
sar
mov
xor
pop
sub
stc
fmull
mov
or
pop
push
call
jp
adc
lcall
inc
in
adcl
push
add
push
mov
outsl
push
lcall
inc
mov
xor
mov
or
stc
adc
std
xor
daa
dec
pop
outsl
hlt
ljmp
popa
and
or
out
bound
out
addr16
decl
dec
add
rcr
ss
adc
fisubs
out
adc
push
inc
xor
push
sub
js
push
test
jg
adc
pushl
add
in
xor
pop
jp
adc
dec
xchg
pop
cli
pop
insb
and
dec
cmp
jmp
shrb
ja
sbb
pop
and
hlt
jmp
sbb
cmp
std
es
mov
sti
repnz
or
jg
aaa
stos
lret
dec
decb
aad
stc
clc
loop
outsl
jl
jmp
decl
pusha
sbb
mov
shl
in
fucomip
cmp
push
mov
jge
je
fimull
mov
pop
mov
jmp
call
enter
inc
add
test
and
add
fsubr
loopne
out
sub
mov
cli
lcall
and
or
lret
and
inc
popa
dec
inc
and
hlt
add
dec
imul
popa
aas
mov
stos
mov
hlt
rorl
cmpsb
subb
out
lcall
cli
sbb
shr
mov
adc
mov
push
lods
inc
imull
and
jmp
jnp
outsl
divl
inc
mov
inc
jg
sbb
idivl
jns
inc
add
cwtl
cs
adc
and
sub
pop
clc
mov
popa
ret
stos
jbe
leave
mov
adc
and
hlt
inc
aad
jg
fdivs
iret
ljmp
mov
jp
xchg
lret
lahf
data16
sub
stc
inc
pop
ret
jo
call
ljmp
sar
push
mov
popa
fwait
jg
subb
pop
arpl
mov
cwtl
das
roll
xor
jl
std
sub
mov
pop
inc
xor
mov
int3
sub
aad
jl
mov
jae
movsb
addr16
divb
sbb
sti
mov
mov
outsb
mov
mov
rcrl
add
ljmp
cmpsb
xor
dec
cmpsl
mov
int3
inc
cmp
nop
sub
adc
iret
roll
pushf
js
int3
jmp
sbb
dec
mov
lret
fucomi
dec
ds
lcall
cmpsl
push
add
push
xor
call
ljmp
cmp
mov
popf
mov
or
jne
rol
sarb
jmp
movsb
push
cmpsb
add
dec
push
mov
lcall
ljmp
push
or
rcrb
mov
push
mov
mov
pushf
aam
cmp
ljmp
jb
fldl
push
and
push
and
scas
cmp
fldl
sbb
sub
xchg
xchg
mov
mov
inc
adc
and
inc
sbb
add
lock
pushl
lods
inc
jecxz
sahf
ds
movsl
pop
subb
orl
fmuls
inc
bound
das
hlt
or
call
and
cmp
je
out
jmp
call
mov
insb
inc
call
or
icebp
cmp
aaa
mov
jmp
push
dec
mov
jbe
mov
jb
mov
mov
icebp
jg
and
in
repz
sahf
lock
adc
sub
or
decl
xchg
push
inc
push
ja
dec
xchg
sbb
adc
fiaddl
cmp
imul
lea
mov
lcall
std
fwait
repnz
fidivl
push
push
outsl
pop
pop
idiv
shll
dec
sub
cld
fucomip
ret
fidivrl
js
jo
jl
push
call
fnstsw
cmp
outsb
mov
cmpsb
nop
out
aad
push
daa
push
push
cmp
inc
out
insb
shl
andb
fisttpll
mov
mov
jmp
push
out
cmpsb
cld
mov
and
or
rol
les
cmp
mov
fiadds
decb
cmp
xchg
mov
xor
xchg
arpl
loope
sbb
cmp
lods
push
aam
sete
cmpsb
popa
xor
dec
je
out
fistl
lea
cwtl
movsb
add
cli
call
push
mov
shlb
push
fsubl
xor
pushl
mov
xlat
sub
and
pop
movzwl
fs
or
push
push
push
mov
shlb
clc
mov
cmp
push
inc
cmp
mov
or
lcall
popf
xor
adc
cmp
mov
imul
push
pushl
mov
popf
cmpsb
sbb
mov
pop
cmpb
jbe
ja
sti
jbe
pop
stos
cs
aad
scas
push
adc
inc
jns
or
sub
call
adc
std
jp
repz
call
ljmp
jbe
jbe
dec
xor
adc
push
call
call
push
inc
adc
mov
std
jae
shlb
cmpsl
cmc
lret
std
xor
xchg
call
mov
mov
int3
xor
out
jmp
jns
jge
ljmp
hlt
or
sub
xlat
lock
push
mov
dec
inc
lret
inc
incl
push
cmp
subb
or
xor
out
stos
jge
pop
add
pop
clc
dec
loopne
add
dec
in
xor
inc
sbb
mov
pop
lret
adc
adc
mov
and
push
or
pop
lcall
ljmp
fwait
and
loopne
das
cmpl
fcomps
and
mov
jl
into
nop
cli
sub
popf
scas
je
ret
imul
movb
andb
mov
sahf
sbb
xchg
rdtsc
inc
test
jg
loope
fnstcw
arpl
subl
cmp
mov
sahf
cmp
xor
loopne
mov
decl
push
aam
addr16
jp
pop
pop
xchg
mov
sti
je
out
daa
mov
loopne
decl
cmc
iret
cmp
rorl
or
pop
add
push
fisttps
outsl
enter
push
les
add
fsts
dec
js
mov
ds
ss
inc
push
dec
pop
adc
mov
xchg
cmpps
or
incl
fnstsw
add
sbb
sub
cmp
fnstsw
jmp
xor
lods
adc
jecxz
repz
out
add
push
mov
push
dec
mov
sbb
mov
ljmp
je
adc
or
dec
xchg
adc
repnz
jle
pop
ret
adc
pushl
dec
ja
test
das
adc
psubq
jle
cmp
call
sbb
outsb
jp
jo
xor
pop
mov
repnz
rcrb
shll
inc
xor
das
push
decl
sar
ss
push
jo
ljmp
push
cmp
mov
jb
add
adc
mov
pop
in
jnp
lock
lea
or
jo
insl
incl
insb
push
mov
lcall
call
jge
int3
xchg
test
mov
and
jmp
enter
or
jg
dec
int3
jae
aam
jp
out
fsub
mov
roll
loope
sub
fsubrl
lds
icebp
push
jg
sbb
loopne
inc
clc
cmp
and
jg
push
ds
and
test
out
cmp
scas
pop
test
sbb
movsb
pop
pop
pop
cld
jmp
out
inc
cmp
xlat
cltd
idivl
push
sub
mov
in
fs
add
xchg
lea
push
call
jg
fimull
fdivrl
scas
cmp
or
sarl
mov
mov
shll
adc
add
sbb
inc
cmp
ljmp
in
aaa
popf
push
movsl
lock
cmp
loopne
into
cld
movsb
mov
pop
pusha
movsb
insb
sub
add
inc
mov
dec
daa
roll
mov
mov
or
cmp
jmp
das
icebp
pop
and
xor
xchg
pop
push
add
jg
inc
or
add
push
repnz
adc
ljmp
jmp
jne
pop
call
cld
adcl
jb
push
jno
sbb
push
bnd
jo
enter
xlat
mov
cmpsl
js
mov
idivb
cmpsb
dec
rcl
jg
jbe
pop
jmp
jb
fisttps
rcll
enter
loope
sub
inc
ljmp
cmc
mov
and
jne
mov
and
mov
inc
lea
sahf
sbb
incl
fisubrs
andl
push
outsl
dec
and
mov
mov
fld1
or
aaa
iret
adc
jmp
push
arpl
add
mov
icebp
jge
mov
imulb
mov
jmp
pop
loop
xor
fisttpl
mov
push
xchg
cmp
dec
rclb
push
call
lock
cld
cmp
dec
aaa
repz
call
test
add
addb
jmp
pop
add
decl
test
add
or
xlat
or
js
push
dec
jb
or
mov
fidivrs
iret
iret
cmc
dec
inc
inc
out
jne
xchg
es
sbb
scas
mov
popa
stc
dec
push
mov
out
dec
bound
and
outsl
and
cmc
and
dec
inc
mov
loop
fdivl
fidivl
stos
test
push
test
fwait
jecxz
cwtl
add
inc
psrlq
sti
sub
ficoml
mov
cwtl
push
mov
xchg
dec
pop
add
mov
mov
lret
xor
jg
inc
cld
lea
imull
shl
lds
mov
loop
jg
jbe
jg
cli
out
xor
and
repnz
out
leave
xor
icebp
fists
scas
or
loop
fdivl
aam
inc
hlt
inc
or
cli
aaa
clc
ljmp
clc
push
mov
adc
mov
inc
add
call
push
xor
fcoms
and
xor
dec
sbb
add
cmpsb
out
pop
dec
je
inc
cwtl
pusha
jns
add
fldl
jmp
lret
ljmp
push
idivl
jp
mov
jmp
jae
adc
call
add
mov
pop
mov
mov
loopne
sbb
mov
test
call
std
sub
lods
dec
push
into
xor
aam
jl
lea
into
decl
ljmp
pop
roll
insb
jp
dec
add
mov
mov
jmp
xor
fwait
pop
in
push
jle
pop
pop
movsb
jp
lcall
scas
or
fucomip
jne
aas
and
and
imul
movsb
sbb
inc
push
mov
jmp
push
sbb
pop
mov
xchg
and
mov
das
cmc
push
and
ret
outsl
xor
cmp
orb
in
sub
fsubrl
cld
dec
adc
sbb
ret
icebp
cs
adc
jp
test
in
pop
jb
mov
push
sbb
jmp
inc
mov
cwtl
dec
or
jnp
lea
jle
jo
pop
out
dec
scas
call
add
mov
cmp
inc
sbb
rcrb
call
jne
in
pop
push
or
mov
int3
out
xlat
sub
mov
jbe
mov
bound
call
xorb
stos
and
and
das
mov
pop
mov
add
shl
lods
pop
lock
push
call
xor
dec
dec
cld
outsl
inc
xor
mov
das
add
xorl
je
jg
out
jmp
ljmp
push
pop
adc
loopne
xor
or
popa
mov
or
lea
jno
test
jp
push
adc
adc
mov
push
mov
push
icebp
inc
icebp
pop
add
in
imul
mov
in
dec
andb
sub
sbb
idivl
fisttps
out
inc
call
dec
std
lods
incl
lret
je
or
call
pop
or
pop
call
mov
mov
push
out
lods
jl
inc
pop
jge
mov
dec
in
cld
or
lock
cmpsl
push
jge
pop
cli
clc
inc
pop
dec
mov
push
imul
pop
enter
sub
bound
jg
push
dec
push
lods
push
pop
mov
jl
jg
lcall
fsts
push
jp
mov
movsl
add
push
and
sub
adc
sbb
idivb
call
and
rclb
out
stos
movsl
mov
push
add
cwtl
rorb
enter
fwait
jg
mov
inc
mov
aas
push
pop
dec
sub
jmp
shr
sub
inc
stos
mov
adc
push
sahf
jge
dec
ss
cmpb
pop
push
lahf
jbe
dec
icebp
jnp
subl
lret
scas
imul
push
jg
pop
dec
fimuls
pop
loop
add
movsb
addb
xor
cmp
xlat
int
inc
enter
add
decl
jne
jg
call
subl
mov
scas
incl
rcll
in
das
sub
mov
ljmp
idivl
stos
aam
push
repnz
pusha
sti
call
or
cwtl
pusha
das
mov
in
xchg
jae
jle
outsb
jns
call
js
int3
iret
xchg
pushf
mov
pop
mov
push
dec
push
sahf
cwtl
or
inc
mov
filds
loop
pop
mov
xor
sub
arpl
loope
into
in
je
ljmp
sub
lods
mov
in
dec
js
mov
sub
loopne
ljmp
add
outsb
inc
mov
aas
inc
push
xor
mov
in
mov
incl
decl
aam
lahf
mov
sbb
sub
out
dec
out
sub
sub
lcall
push
shrb
inc
lcall
pop
inc
test
adc
outsb
jle
adcb
hlt
in
call
loopne
adc
gs
dec
stc
mov
aam
js
push
sbb
or
push
inc
sub
jae
testl
inc
call
icebp
or
dec
outsb
jg
pop
fadd
insb
sbb
pop
outsl
jl
jnp
cmc
pop
loop
into
pop
push
sub
fcompl
cmp
and
and
fwait
daa
sti
cmp
xorl
push
mov
inc
sbbb
jmp
sti
jp
es
outsl
aaa
call
mov
das
mov
dec
jle
fisubl
jge
dec
and
mov
or
jbe
popa
push
lret
ja,pn
xchg
call
das
repnz
jo
insb
inc
lret
ds
mov
dec
and
into
rorl
mov
cmp
std
loop
jae
push
jnp
or
incl
lods
enter
popa
ja
dec
aam
push
xchg
inc
dec
popa
mov
aad
lcall
or
mov
mov
decb
mov
adc
cmp
jp
repnz
dec
enter
jg
insb
hlt
fwait
sub
cmc
dec
outsb
lcall
jle
and
decl
jmp
loopne
fwait
adc
data16
loop
gs
ljmp
jecxz
push
pop
pop
pop
bound
pop
mov
jmp
cli
mov
insb
add
or
pushf
push
sub
nop
jg
dec
out
int3
adc
mov
push
xchg
inc
enter
add
dec
sahf
xchg
jae
jl
inc
pop
mov
mov
decb
cltd
ja
and
push
add
sub
hlt
mov
sub
ds
and
mov
push
mov
das
dec
mov
addb
inc
out
pushl
call
nop
repz
sub
enter
ss
mov
sbb
pop
js
aam
cmp
pop
lds
popa
call
lcall
std
mov
and
pusha
and
jo
jmp
push
mov
outsl
cmc
jmp
and
ret
cmpsl
dec
fidivrl
testl
fwait
incl
movsl
mov
mov
popa
iret
jbe
call
inc
xor
loopne
pop
mov
les
out
mov
push
into
inc
mov
outsb
cmc
xorl
cld
sar
call
push
out
xchg
aam
test
arpl
jbe
mov
add
dec
jmp
fisubrs
cltd
lock
jno
ds
movsb
lcall
adc
inc
mov
cmp
adc
cs
incl
outsl
and
inc
sbb
fwait
mov
push
les
les
mov
icebp
ljmp
add
jp
adc
xlat
mov
outsb
sub
pushf
stos
cli
out
jecxz
push
sbb
push
sub
bound
add
sub
cmp
xchg
ljmp
sbb
pop
jp
xor
test
cmp
inc
lret
sbb
sar
xor
adc
fsub
pop
addr16
xchg
mov
jge
inc
mov
adc
cltd
xor
int
ljmp
hlt
mov
add
mov
push
cmc
loop
add
mov
mov
clc
dec
jbe
popf
insb
pop
dec
cwtl
sbb
lods
cmp
inc
lock
lods
push
jp
enter
stos
sub
rolb
mov
xor
push
xchg
loopne
xorb
inc
clc
ljmp
mov
arpl
jne
in
lahf
inc
pop
add
or
jge
outsl
icebp
neg
pushf
or
imul
sbb
or
js
pop
fcoms
push
loopne
add
call
xchg
fcmovnu
mov
add
mov
and
call
decl
jmp
sarl
out
ljmp
mov
add
and
jmp
cmp
adc
aam
test
cld
loop
das
in
fdivs
ret
shl
popa
test
fimull
pop
xchg
adc
insl
mov
mov
into
xchg
push
loopne
daa
mov
clc
lcall
mov
aam
jns
clc
ljmp
sbb
arpl
xchg
cmp
or
jne
and
cmp
jl
pop
push
aad
outsb
fsubs
inc
add
ror
in
lea
dec
stos
or
nop
xchg
loope
mov
inc
jmp
mov
call
stc
xchg
adc
es
test
pop
call
aaa
dec
add
fcmove
or
call
scas
popa
cltd
fst
jmp
mov
outsb
pusha
lock
cmc
in
icebp
ljmp
lcall
sub
cmp
and
lock
daa
scas
call
faddl
nop
cmp
jg
dec
je
pop
add
repz
test
lods
dec
mov
pop
imul
pop
xor
cld
aas
fdiv
sbb
shll
mov
or
loop
and
push
pusha
xor
repz
mov
sub
jnp
call
mov
push
aas
inc
xor
lea
inc
out
mov
addl
decl
xor
sbb
stc
lret
das
xlat
mov
dec
cld
lods
add
insl
int3
push
in
aaa
cli
fistpll
jne
pop
rcr
xchg
add
fisttpll
das
add
sub
sbb
add
decl
dec
mov
clc
push
aam
dec
divb
add
pushf
lods
mov
arpl
pop
cld
jmp
dec
or
repnz
lods
clc
fisttps
ljmp
sub
lcall
pop
jl
add
ret
fmulp
cmc
pop
xchg
repz
call
mov
in
inc
xchg
xchg
pop
loop
incl
mov
xor
push
out
and
pusha
mov
jbe
test
ss
mov
mov
mov
nop
mov
arpl
jmp
push
sarb
xor
imull
pop
pop
xor
flds
xor
sbb
mov
jmp
add
imul
icebp
lahf
out
jmp
scas
movsb
xchg
pop
movsb
sub
add
sbb
ljmp
cli
insl
dec
aaa
xchg
xor
cmp
dec
xor
add
jp
or
adc
popf
pop
lods
push
xor
fsub
xor
sbb
mov
jmp
jle
cmp
cli
and
outsb
jnp
int
xlat
and
adc
test
std
or
adc
cmp
mov
enter
lea
dec
stos
ljmp
mov
std
jmp
pop
pop
xchg
xor
add
stos
sbbb
and
mov
mov
add
lcall
je
ljmp
mov
enter
or
mov
and
cmp
mov
addl
jmp
and
outsb
hlt
decl
jmp
nop
popl
sbb
jmp
dec
sbb
mov
push
bound
pop
and
cli
out
sbb
das
dec
sub
loope
cld
sbb
add
in
mov
jmp
pushl
js
loopne
inc
cmp
outsl
push
sub
xchg
lea
incb
mov
mov
repnz
lcall
xchg
cmp
arpl
inc
mov
cli
xor
add
xchg
cli
sub
into
cmp
out
movsl
push
jle
jg
jnp
add
dec
jle
movsb
mov
stos
nop
push
clc
outsl
sub
mov
out
mov
in
mov
jge
ret
push
adc
stos
and
bnd
jge
incl
pop
neg
jns
mov
cmpsb
pusha
add
test
add
pushl
mov
shrl
push
loop,pn
mov
insl
push
stc
je
cmp
or
call
xor
lea
push
fidivrl
jnp
sahf
rcrb
push
pop
mov
xchg
cs
sbb
stc
push
rorb
ficomps
popf
call
repnz
std
js
je
mov
push
add
ss
lret
mov
pop
cli
pop
xchg
and
mov
in
dec
xchg
mov
out
rep
mov
jne
decl
mov
mov
lods
jmp
sbb
xchg
dec
fisubl
mov
inc
mov
pop
mov
and
sbb
bound
push
test
dec
jg
iret
add
mov
arpl
in
sbb
je
dec
insb
cli
push
mov
jecxz
cmp
sbb
push
imul
lock
pop
scas
pushf
stc
cmp
push
or
cld
sbb
inc
dec
faddl
inc
incb
hlt
pop
ss
jp
mov
fwait
mov
pop
test
cwtl
sti
cmp
loop
mov
mov
lret
mov
leave
jle
lldt
shlb
push
lock
jmp
incl
sbb
jmp
mov
fldcw
ljmp
ljmp
mov
inc
push
call
jmp
jl
jbe
jmp
decl
or
jnp
jmp
stc
or
cmp
adcl
add
sbb
mov
cmpsb
loopne
decl
dec
call
insb
push
jmp
or
jmp
sti
fstpl
pop
into
lock
pop
stos
xchg
sub
mov
out
jmp
call
stc
mov
pop
ret
nop
add
fldt
push
xchg
mov
or
mov
or
andl
das
decl
jmp
out
and
and
les
pop
or
aaa
inc
fiaddl
repz
push
std
xor
inc
mov
or
xor
cmp
das
cmpsl
dec
dec
test
or
dec
adc
mov
cmp
call
idivb
in
jnp
imul
xlat
add
push
pop
ljmp
dec
inc
jbe
mov
lret
mov
adc
push
push
adc
adc
call
cli
in
push
cmp
iret
cmc
inc
out
push
stc
add
ljmp
ljmp
repz
or
push
add
mov
call
xlat
or
int3
dec
stos
repz
mov
sub
pushl
add
dec
push
add
sbb
dec
scas
pop
test
xor
mov
xchg
jno
test
mov
jge
and
or
iret
mov
sub
stos
clc
jg
push
sub
adc
data16
push
dec
icebp
in
movsl
movsl
jmp
fwait
mov
cmp
mov
push
mov
add
or
sarl
xchg
xor
inc
fsubrp
mov
into
xchg
test
call
push
jg
or
test
add
jmp
pop
gs
pusha
mov
push
xor
push
mov
adc
jnp
incl
js
cmp
lods
and
push
js
ljmp
std
ret
mov
jns
loop
cmp
outsb
hlt
pushl
sahf
dec
mov
inc
insb
inc
popf
popf
mov
pop
xor
adc
sub
lret
loope
mov
fmull
mov
dec
js
pop
pop
shll
sti
dec
push
dec
push
outsb
jmp
repnz
jecxz
pop
lds
dec
jge
cs
mov
insb
cmp
cvtdq2ps
incl
push
cwtl
js
sub
ret
add
loope
hlt
aaa
clc
inc
repz
jmp
sub
dec
inc
test
ljmp
cld
cld
or
rorl
jns
or
insb
pop
je
sbb
push
cli
ret
or
jmp
sub
popf
enter
mov
or
pop
adc
dec
jne
add
icebp
incl
imul
lahf
add
aaa
mov
or
ficoml
jne
mov
in
fs
jg
jmp
sarb
sbbl
call
dec
jae
jmp
fwait
and
movsl
jecxz
sar
aad
or
adcl
adc
jle
test
in
add
lods
inc
jne
stc
jmp
sub
andl
insl
int3
cmp
cmp
xchg
jmp
cmp
pop
je
dec
cmp
xchg
jmp
add
sbb
push
dec
add
push
shl
call
adc
pop
dec
mov
out
rcll
paddsb
jg
incl
xchg
ret
nop
icebp
iret
pop
cmpsl
inc
or
cmpsl
or
shll
sbb
add
fstpl
andl
pop
in
sub
add
sbb
pop
cli
adc
cmova
mov
fld
sti
mov
inc
gs
mov
sbb
inc
hlt
xchg
cmp
nop
or
push
jmp
mov
movsb
cli
sub
and
jns
cmp
xchg
sub
test
stc
test
in
clc
adc
loope
leave
dec
pop
ret
loop
dec
pop
lret
mov
sbb
push
lcall
add
nop
cmp
or
cmp
dec
mov
imul
jmp
leave
jg
jl
dec
ret
hlt
bound
push
stos
outsb
mov
inc
nop
sub
dec
cld
call
xchg
loop
mov
dec
add
js
addr16
fwait
shr
ljmp
call
lock
cld
insb
fucomi
mov
adc
xchg
or
das
mov
mov
jns
cli
bound
movsl
lcallw
dec
movsl
jnp
outsb
imul
fisttps
test
lock
push
jnp
cs
dec
inc
jo
insb
add
dec
into
sti
add
pusha
cmp
push
sbb
loop
icebp
push
sub
mov
ljmp
xlat
inc
das
hlt
mov
pop
jmp
push
iret
aam
aas
cmp
or
ljmp
adc
das
adc
out
mov
inc
jecxz
add
dec
add
out
push
add
scas
add
hlt
pushl
in
imul
jnp
fcmovnb
add
jns
inc
jp
add
jecxz
inc
and
jne
ljmp
out
cwtl
inc
ficoml
out
loop
pusha
das
hlt
mov
ljmp
pop
out
sub
enter
dec
adc
js
bound
icebp
cs
adc
cli
pop
mov
and
mov
cmp
cmp
jo
mov
adc
iret
and
cltd
out
xchg
inc
das
cmpb
xchg
jle
xor
mov
xchg
out
or
sub
idivb
addr16
das
mov
ljmp
clc
pop
cmp
xchg
dec
out
pop
cmp
adc
addr16
shl
jg
xchg
mov
je
decl
inc
push
sub
add
cmc
faddp
ret
std
lcall
jns
cmp
inc
call
sbb
fldt
mov
ljmp
cs
pop
js
ds
popa
out
clc
and
and
adc
incl
test
pop
or
aas
or
jns
clc
je
mov
add
xor
push
mov
addr16
inc
lcall
jo
push
fs
loop
pop
push
dec
shlb
sub
and
ja
push
push
hlt
push
mov
sub
add
popa
inc
sub
mov
incl
addl
jle
dec
mov
xchg
imulb
jbe
jg
incb
mov
pop
loop
outsl
mov
mov
or
xlat
or
pusha
mov
or
enter
pushl
icebp
cmp
lds
sub
ret
pop
fbld
jb
pop
sbb
mov
cmc
cs
repz
dec
ret
add
xor
loope
mov
repz
mov
imul
sahf
loop
jmp
fbld
dec
jl
dec
push
shlb
es
jns
loopne
decl
ljmp
dec
sahf
pop
cmp
push
shl
leave
iret
adc
xorl
sbb
repz
mov
lock
je
call
incl
cs
out
jbe
cwtl
dec
inc
inc
jge
test
in
jp
mov
shl
sbb
rcll
stos
lock
pop
xor
enter
repz
sar
jmp
sbb
mov
push
test
fs
call
jo
sarl
xor
jno
xor
das
cld
inc
and
mov
pop
ret
adc
roll
pop
je
cmp
push
push
and
jbe
fs
les
pop
fiadds
dec
mov
int
xchg
mov
scas
jmp
inc
jecxz
mov
xor
cmpl
lret
bound
sbb
outsl
icebp
movsl
inc
jle
rclb
sub
pop
ljmp
xorb
cmp
shl
ret
jle
push
and
ret
cmpsl
aaa
lods
pop
cli
decl
dec
dec
pop
sbb
lock
xchg
fildll
push
cmp
out
lea
mov
jp
outsl
hlt
jl
mov
jge
push
jge
pushf
cmp
ret
mov
js
incl
or
incb
inc
jl
xchg
or
fbld
add
dec
sub
adc
incl
pop
cmp
sub
fwait
add
sub
xchg
ljmp
sbb
enter
fucomi
cmp
es
leave
mov
jg
dec
pop
mov
add
push
popf
jecxz
mov
out
mov
jl
mov
mov
call
adc
call
push
loope
or
ljmp
neg
dec
popa
cmp
pushf
pusha
lods
push
sub
ret
popa
enter
mov
mov
repnz
jno
sbbb
subb
ljmp
lods
dec
inc
mov
addb
movb
iret
xchg
push
test
jnp
jle
push
clc
push
loope
aas
push
mov
sbb
cmpsl
xchg
push
in
je
test
decl
call
cmc
cli
and
mov
xchg
loope
incb
add
lea
roll
adc
std
push
mov
scas
mov
sub
adc
je
cmpb
dec
cmp
jns
pop
or
jle
mov
std
ljmp
pushf
jbe
push
mov
jns
rclb
sub
add
std
xchg
xor
in
mov
popa
pop
call
jg
bound
xor
out
sbb
je
jge
decl
mov
mov
mov
cwtl
jp
mov
ret
jp
sbb
fistps
std
mov
sahf
and
cmp
lret
call
jecxz
add
out
pop
and
insl
mov
pushf
sbb
int
adc
cmpb
pop
jg
jg
lret
mov
js
js
and
out
les
adc
std
or
jmp
loopne
leave
push
dec
cmp
xlat
js
pop
sub
js
roll
cmp
jbe
xchg
dec
lea
add
cli
inc
dec
enter
cmpsb
test
ja
mov
decb
push
insb
dec
jmp
mov
and
call
push
or
insb
push
aad
pop
iret
add
das
icebp
decl
xchg
inc
inc
push
ljmp
lods
xchg
adc
and
mov
clc
decl
pop
mov
setge
inc
imul
das
jo
add
cmp
jne
or
in
xchg
sbb
jle
popa
leave
nop
and
out
mov
mov
fimull
mov
mov
add
mov
out
sbb
and
mov
add
aas
shl
mov
mov
ja
push
xor
mov
inc
movsl
inc
lret
xlat
fidivrs
inc
or
xchg
cs
cltd
in
and
bound
shl
loopne
outsl
fucomip
decl
adc
daa
dec
inc
repz
push
imull
pushf
cmp
fucomip
incl
call
je
jne
inc
and
push
or
pop
fs
decl
sub
dec
add
fidivl
inc
mov
and
mov
pop
pop
mov
hlt
lcall
lret
cmp
cmpsb
inc
pop
fidivl
loopne
lcall
ljmp
lret
negb
clc
jle
sbbb
nop
inc
inc
jg
jg
adc
sahf
push
add
mov
jmp
mov
je
xchg
inc
sbb
iret
bound
cmpsb
sub
ss
inc
loope
xor
jnp,pt
and
push
test
xor
ss
decl
cld
mov
sub
out
cli
add
fucomi
arpl
imul
mov
cwtl
cmp
add
sub
push
jnp
lret
pushl
adc
daa
movsb
dec
fistpl
roll
jne
loopne
xor
pop
add
push
jl
sub
decl
adc
in
cmp
adcb
jmp
ds
mov
shll
ss
repnz
pop
push
sub
pop
clc
stc
add
mov
sub
push
push
push
sub
mov
popa
sti
add
add
call
jb
dec
add
mov
movsl
dec
sbb
lods
push
xor
push
ficomps
pop
mov
sub
sbb
mov
jmp
cmc
sbb
repnz
call
mov
cmp
push
aad
xchg
lock
fbstp
call
cmp
cmp
dec
mov
mov
add
mov
xor
sub
xrelease
hlt
das
hlt
std
cltd
out
mov
inc
mov
push
ret
jbe
inc
mov
sbb
outsl
in
fdivs
cmp
sub
or
jae
js
aaa
mov
xchg
cmp
pusha
pop
jle
pusha
popa
in
mov
ljmp
fs
cmp
enter
or
ljmp
dec
call
add
lock
jo
xchg
pusha
mov
dec
push
mov
xor
loop
and
mov
movsb
sbb
test
incl
fstl
xchg
dec
mov
mov
xchg
dec
xchg
jb
cltd
mov
cld
movsl
pop
loopne
add
popf
rclb
cmp
loopne
mov
hlt
or
stos
jo
clc
sbb
clc
push
das
ljmp
pushl
shlb
sub
xor
jne
iret
outsl
xor
push
jnp
add
pop
incl
mov
xor
ret
sti
push
imul
das
ljmp
mov
cmpsl
xlat
sbb
lea
xor
cmp
ljmp
jno
cmp
mov
shll
lock
cli
inc
movsb
jno
jge
mov
sub
mov
jne
int
pop
jg
jecxz
out
imul
imul
ret
xchg
std
xchg
fmul
outsl
rolb
ds
stc
add
test
clc
mov
test
xor
push
mov
out
out
xor
je
incl
jmp
xchg
xor
lea
inc
call
cmp
sub
fnsave
cmp
clc
sbb
les
insl
and
fdivrp
ljmp
in
and
mov
ljmp
scas
sub
call
adc
lcall
mov
mov
dec
push
in
cmp
add
loope
adc
lock
movsl
out
sub
mov
divb
cmpsl
call
mov
sbb
cmp
push
pop
test
pushl
push
clc
nop
push
push
out
popf
xor
out
cwtl
insb
inc
and
inc
nop
pop
pushl
ficomps
dec
and
insl
in
or
insb
cltd
or
adc
jg
out
push
and
jmp
inc
sub
out
add
mov
adc
arpl
sbb
add
and
push
jle
mov
push
sbb
push
int
push
sbb
outsl
icebp
ljmp
call
cwtl
jnp
lock
xor
cld
lcall
enter
call
jmp
jbe
jbe
sub
pushl
loop
imul
imul
loop
cmp
mov
ds
adc
out
mov
inc
mov
flds
out
dec
push
cmp
and
mov
pop
mov
decl
stos
mov
sub
mov
xor
bound
xor
jmp
jg
out
das
inc
cli
sub
cs
das
mov
fcomip
fcoml
test
fsubrs
faddl
sbb
mov
mov
xchg
lret
xchg
sub
hlt
and
outsl
jg
fucomip
push
adc
hlt
inc
adc
pop
test
loopne
cmp
pop
call
jg
push
jl,pn
popf
imul
rorb
pusha
sarl
call
or
mov
pop
lods
test
pop
lea
mov
pushf
xchg
and
dec
out
test
inc
pusha
fwait
and
mov
cmpsb
cmpsl
push
push
mov
insl
push
fldl
cmc
mov
je
lock
int3
inc
mov
std
comiss
mov
in
pop
sub
nop
lret
decl
jmp
pop
and
jne
mov
pusha
push
push
arpl
push
scas
jg
jmp
jbe
in
mov
mov
fsubrp
dec
movsl
or
pushl
cmpsl
dec
imul
lea
mov
or
push
sbb
fnstsw
stos
xchg
bound
test
loop
cmc
jecxz
inc
adc
cmp
out
push
inc
and
shl
sub
mov
jnp
and
arpl
mov
sti
mov
xchg
clc
adcl
xchg
decl
mov
mov
pop
sbb
jl
scas
dec
add
inc
test
and
lcall
xchg
xabort
jl
fldcw
sahf
cs
lods
sub
and
push
xchg
xchg
popf
decl
pusha
test
sub
inc
inc
and
call
cmp
mov
inc
mov
pop
shlb
leave
imul
cli
jp
data16
movsb
sub
mov
bound
mulb
addr16
movsl
jg
insb
decb
fnstsw
stos
icebp
jmp
gs
inc
mov
mov
xor
cmc
loop
inc
mov
mov
mov
pop
cmp
push
inc
pop
fdiv
dec
cwtl
pushw
lret
dec
mov
sbb
idiv
test
pop
ljmp
aam
jb
cwtl
jg
call
insl
iret
push
aas
lds
xor
dec
or
ret
jge
orb
std
inc
push
rcl
dec
push
pop
xor
lods
cmp
arpl
dec
xor
cltd
cs
lcall
stos
cltd
xlat
and
sti
or
arpl
jecxz
aas
jp
cmp
into
sti
enter
jmp
push
xchg
dec
push
dec
js
sahf
stc
inc
xor
add
sub
cmp
call
push
sbb
paddw
cmp
xor
loop
xor
pushl
out
xor
filds
out
pop
cmpsl
or
pop
call
jmp
dec
arpl
and
in
jne
fcoml
pop
fwait
in
scas
and
mov
mov
popf
out
add
pop
in
or
pusha
lock
mov
movsl
repz
pushl
or
out
mov
fmuls
pop
jno
shlb
and
insb
das
lock
jl
repz
out
movsb
mov
jge
call
call
add
pop
or
ret
pop
out
jge
pop
mov
sub
cltd
pop
mov
jns
pop
js
push
jle
mov
les
sbb
xchg
fucomip
jg
push
jl
popa
addl
jno
sarb
sub
arpl
cmp
inc
pop
jmp
stc
ljmp
jo
aad
outsl
xchg
addr16
jne
cmp
inc
lret
mov
clc
push
fsubl
stos
add
or
outsl
std
pushl
cmpsb
sbbl
or
int3
or
mov
je
push
inc
mov
clc
je
ret
pop
fildl
stos
push
aam
dec
and
and
movsl
mov
ljmp
js
jae
push
jo
bound
pushw
sbb
call
mov
dec
and
cmp
xchg
cmp
and
jp
mov
push
xchg
aas
cmpsl
dec
add
call
push
ja
sub
out
mov
push
mov
pusha
in
cmpsb
xor
leave
pop
dec
into
std
ljmp
xchg
adc
into
cmp
jae
jno
adcb
or
test
mov
and
lret
lret
inc
leave
aad
std
mov
idivb
aam
jg
inc
cmp
icebp
imul
mov
lcall
sub
popa
inc
mov
add
pop
fs
mov
adc
cmp
xor
cmp
dec
ljmp
xchg
cli
inc
push
mov
cmp
push
in
andl
pop
cmp
lret
jl
add
stmxcsr
ret
fldt
rorl
daa
push
fnstsw
test
pop
stos
ds
xchg
inc
xor
jmp
xor
imul
rcll
sub
aaa
fwait
les
xlat
pop
subl
adc
movb
inc
cmp
push
enter
jl
jg
imul
lea
stos
data16
call
mov
lock
ss
cmc
xchg
adc
leave
aaa
clc
xchg
clc
dec
arpl
lock
aaa
push
out
rorb
in
call
out
call
ret
mov
jl
fisttps
cmp
repz
mov
aaa
mov
fistpl
mov
inc
inc
xchg
mov
test
sbb
cli
testb
loope
push
or
call
arpl
pushl
out
mov
push
fcomp
scas
pop
inc
out
fstps
and
xor
jg
repz
push
aaa
mov
or
pop
jmp
pop
mov
sarb
incl
scas
xor
sarl
pop
cmp
inc
mov
or
cmp
mov
cmp
mov
pop
push
pushf
lock
xchg
sub
ficompl
call
shl
inc
jl
addb
jo
cmpl
mov
out
popf
rcr
sub
hlt
ljmp
shl
add
jge
loopne
imul
jecxz
sar
push
pop
jecxz
jl
jae
test
repz
into
sub
pop
pop
inc
decl
out
push
rcr
test
adc
jg
fstpt
shlb
cmp
cmp
scas
jae
push
outsl
notl
mov
cmp
fnstsw
pushf
out
pushl
or
push
cwtl
mov
data16
bound
mov
add
adc
mov
or
jg
inc
aad
cmpb
arpl
aas
scas
xchg
cli
jne
inc
pop
out
pop
dec
or
call
dec
and
dec
cs
mov
cmp
push
dec
fcmovnu
leave
adc
cld
idiv
lcall
and
xchg
pop
testb
adc
cwtl
jg
fisttpl
lock
sbb
cmp
adc
out
sbb
jg
fst
cmp
addr16
jno
lods
fdiv
dec
xchg
add
sub
and
and
lcall
stos
mov
xor
xor
lods
cli
push
adc
inc
pop
jmp
dec
pop
jp
ss
cltd
mov
push
sbb
pushl
in
ljmp
add
popf
mov
jns
push
mov
pop
mov
adc
decl
test
add
out
xchg
dec
cmp
sub
scas
cltd
dec
cmc
xor
sbb
movsl
mov
pop
cld
fildl
pop
adc
adc
outsl
std
jg
in
inc
std
adc
pop
loop
xor
mov
dec
clc
lock
pusha
fdivrs
bound
mov
cwtl
fldt
push
sbb
push
adc
jg
stos
movl
scas
sub
push
test
std
movsb
aaa
cli
js
inc
call
cli
mov
cmp
in
repnz
cmp
das
lock
gs
popa
pop
lock
adc
sbb
nop
pop
cli
fistps
mov
scas
and
push
jmp
lods
and
fmuls
mov
mov
push
sub
dec
xor
incl
aad
in
sub
clc
lret
sbb
push
jge
and
repnz
jbe
sub
xorps
rep
ljmp
pop
dec
xor
and
pop
hlt
nop
iret
shl
test
inc
mov
push
cli
mov
add
xor
or
divl
aaa
jl
out
lar
push
lret
je
icebp
push
mov
pop
mov
sbb
scas
lods
outsb
jg
cmp
out
push
loopne
pop
cmp
push
popa
out
and
jnp
or
mov
fsubrp
dec
adc
into
mov
push
test
ljmp
cmp
inc
rolb
and
enter
mov
loop
xor
test
call
pop
cmp
clc
enter
popf
bound
repnz
outsl
pop
sub
cmpsl
sbb
xor
add
push
lods
fnstsw
cmp
pop
pop
mov
cmp
cmpsl
call
decl
jmp
push
cmp
push
jecxz
inc
xchg
icebp
scas
cmp
mov
push
mov
call
scas
pop
inc
sub
jl
nop
inc
push
add
push
popf
push
push
mov
xor
jmp
or
aas
rcrb
mov
jbe
mov
add
inc
shlb
and
cwtl
and
ret
lahf
mov
inc
mov
cltd
push
outsl
mov
jg
and
jl
nop
shrl
jg
sub
fwait
leave
xor
lahf
cmpsl
push
push
lsl
testl
lret
je
xor
aam
call
sbb
pop
pop
pushf
fnstsw
inc
mov
inc
jl
ljmp
hlt
jmp
xchg
add
in
popa
pushf
imul
cmp
or
out
dec
aam
cmpsb
das
cwtl
add
call
xlat
mov
pop
pushf
add
insb
adc
fistpl
xor
jns
jg
clc
jecxz
lahf
jecxz
xchg
imul
jle
repz
jp
adc
test
dec
loop
jg
jecxz
add
inc
jmp
adc
mov
sbbl
outsl
incl
insl
add
xor
mov
sub
js
dec
cmpsl
push
scas
pop
clc
pop
dec
cmp
out
cmpsl
int
fsubp
cld
jae
pop
dec
arpl
push
jmp
loopne
addb
xor
jle
push
add
inc
sbb
mov
call
aaa
nop
push
adc
rcll
pop
enter
incl
repz
mov
inc
or
fildl
jge
add
mov
jle
dec
shrl
call
and
mov
jg
xorl
lret
xorl
push
sahf
loop
xor
sbb
incl
dec
int3
and
sbb
adc
incl
ds
les
jg
fists
cltd
repnz
fstl
mov
dec
call
xchg
push
pusha
arpl
aad
fsts
add
push
or
lcall
decl
push
inc
rcrl
push
and
adc
mov
sbb
push
in
enter
and
lea
and
fists
add
lahf
ljmp
aas
insb
imul
adc
pop
jecxz
cmp
decl
aam
dec
jae
enter
das
add
xor
jne
mov
mov
fs
dec
pop
inc
xchg
push
nop
std
loope,pn
and
xor
std
aas
das
and
sub
dec
mov
mov
cs
add
lds
decl
xor
scas
mov
enter
pop
push
dec
sar
pushf
lcall
jb
rclb
sub
lret
dec
pop
shll
jmp
fimuls
add
ljmp
adc
fisttps
cltd
jl
xchg
jb
stc
xchg
mov
lahf
daa
jmp
dec
pop
lcall
std
jg
xchg
lock
ds
adc
sti
cmp
dec
push
std
pushl
jecxz
sti
jp
dec
lock
dec
add
mov
loop
mov
xor
ret
jge
dec
pop
cltd
ljmp
inc
outsl
cmc
aad
dec
scas
mov
and
repnz
push
out
cmp
call
aaa
pop
loop
and
sub
ror
daa
dec
xchg
jne
sub
in
pop
dec
arpl
mov
sub
repz
xchg
dec
bound
lcall
ljmp
pop
xchg
outsl
ljmp
js
in
push
or
call
or
jmp
movl
call
xlat
cs
ljmp
or
or
inc
fwait
jp
dec
out
insb
inc
push
inc
adc
cs
out
jmp
or
into
adc
push
icebp
cmp
push
call
outsl
hlt
rolb
adcl
push
stos
loopne
lret
sub
out
jae
pushl
cmpsl
and
cmc
mov
sub
inc
push
je
sahf
push
jne,pt
lcall
push
cld
adc
dec
jmp
cmp
jbe
out
cld
in
sbb
jecxz
sbb
movsl
std
sbb
sbb
mov
sarl
fnstsw
call
sarl
mov
mov
movsb
lret
mov
push
clc
xchg
xor
lods
les
adc
fmull
dec
xchg
int
jns
xor
ret
dec
lret
jns
adc
mov
clc
add
pop
push
pop
icebp
outsb
jmp
and
repz
lock
cltd
fistps
mov
or
lock
incl
lds
sub
leave
cmp
or
cmp
ja
or
pop
dec
addb
scas
xchg
loopne
cmp
pushf
call
adc
cmp
popf
jae
push
inc
loopne
popa
xor
jo
mov
sbb
pop
negl
lahf
in
cmc
and
xlat
cmp
dec
and
clc
insb
jno
ljmp
cmc
jmp
pusha
jnp
cmp
mov
and
adc
sub
xor
dec
fcmovnbe
mov
gs
dec
inc
push
out
or
in
and
adc
call
push
mov
jle
imul
xorl
pop
pop
xchg
out
into
or
sub
jp
aaa
lret
loope
rcr
call
inc
inc
iret
xchg
sub
adc
cmp
test
fistl
cmp
scas
clc
out
lds
xchg
jmp
push
xchg
lods
in
pop
ljmp
std
or
std
pop
insl
mov
into
imul
xor
jecxz
adc
fiadds
and
xchg
hlt
sbb
or
mov
lea
jmp
mov
je
push
ret
adc
inc
xchg
fwait
xchg
add
mov
pushl
fstpl
mov
jl
xchg
pop
add
repz
mov
call
movsb
sub
jp
xor
xchg
and
arpl
jmp
and
je
mov
cmp
lcall
call
int
dec
lret
ss
inc
and
cs
mov
inc
adc
mov
or
sbb
std
cld
inc
mov
pop
adc
pop
sub
jp
test
scas
repnz
orb
test
lods
push
fstpt
jns
repz
pop
loope
pop
jmp
mov
or
cmpsl
ret
push
add
sub
es
scas
in
xor
sub
sarb
out
and
cli
xchg
lret
jp
pop
sbbb
lcall
adc
inc
push
push
and
pusha
pushf
dec
jns
sar
sar
push
mov
in
and
mov
sqrtps
leave
outsb
lock
inc
xor
incl
test
jbe
mov
test
sbb
rcr
insb
add
arpl
je
inc
ljmp
pop
cli
inc
scas
aaa
mov
mov
hlt
add
dec
fldt
mov
sub
rcrb
jmp
and
pusha
xor
rcrb
fwait
out
call
adc
cmp
pop
jmp
adc
mov
add
mov
in
call
pushl
mov
cld
rcrl
les
push
idiv
push
lcall
inc
cld
mov
jnp
sbb
aaa
sub
scas
xor
mov
out
loop
xor
inc
xor
in
dec
jmp
cs
fists
out
push
mov
shll
andb
inc
imulb
push
lock
std
leave
jnp
stos
or
inc
pop
popa
icebp
fdivr
mov
or
lds
cld
lahf
cmp
pushl
ret
sbb
sub
pop
xchg
das
jo
sub
fbld
add
fldcw
mov
pop
xorb
out
icebp
sbb
in
dec
jg
shlb
pushl
push
out
scas
cmp
mov
insl
repnz
ljmp
cmp
mov
push
sbb
cmp
add
mov
xchg
loop
cmp
pop
cmp
clc
sbb
stos
enter
sbb
inc
sbb
push
bound
nop
rorl
mov
sub
sbb
subl
data16
sbb
jmp
das
jge
cs
call
pop
movsl
test
imul
sub
add
test
pop
aaa
faddp
pop
pushf
fnstsw
inc
inc
inc
mov
test
ljmp
adc
mov
nop
or
add
fadd
std
push
fistpl
call
jnp
xchg
jmp
push
lcall
andb
pop
mov
mov
xor
dec
sbb
mov
cmp
push
dec
sahf
cmp
xchg
pop
popf
pop
dec
outsl
jg
mov
lret
out
cmp
repz
cmp
enter
icebp
testl
sub
test
cmp
push
cmp
js
sbb
or
fcomip
and
cmpl
decl
xor
inc
pop
lds
in
jecxz
add
pop
and
add
outsl
sub
mov
loop
sub
stc
jmp
lock
sarl
dec
jns
pop
hlt
cmp
mov
or
inc
repz
pushf
sub
push
dec
scas
orl
call
push
mov
inc
add
push
mov
xchg
fildll
je
mov
jne
cli
jg
sbb
or
test
sti
incl
or
jo
xchg
pusha
jmp
push
xchg
adc
jg
mov
and
adc
faddl
sub
cli
and
in
ljmp
out
aad
adc
sar
and
loopne
aad
loop
ss
jmp
repz
push
out
mov
lods
enter
and
and
fisubrs
sbb
rcl
outsl
test
call
inc
add
mov
add
lock
es
push
loop
cli
cli
mov
push
andl
and
in
jne
push
call
push
aam
iret
loopne
cli
in
pop
mov
pushf
in
pop
or
shlb
xchg
jmp
jmp
cld
xchg
mov
cmp
mov
mov
pushf
mov
mov
push
push
in
ja
int3
lods
jge
stc
mov
arpl
jnp
push
mov
ljmp
add
jnp
mov
mov
cwtl
scas
pop
or
mov
or
dec
addr16
je
jmp
rolb
out
dec
jne
sarb
outsl
pop
call
fbstp
dec
daa
loopne
cmp
xchg
hlt
xchg
movsl
movb
jl
pop
dec
add
jns
out
loope
add
sub
popa
or
push
movsl
clc
aam
incl
aas
into
mov
fcmovu
inc
jbe
push
rorb
jno
incl
sar
rolb
xor
xor
mov
icebp
out
mov
fnstsw
dec
lea
pop
jne
call
mov
bound
mov
shr
das
cmpsl
pop
mov
push
pop
mov
roll
adc
cmp
out
cld
sbb
ja
push
mov
jnp
cs
hlt
or
movsl
cmp
mov
adc
ss
loop
or
xchg
clc
pop
cmp
jmp
add
lea
pusha
je
bswap
std
jle
push
loop
cli
shr
jne
cwtl
cmp
inc
pop
mov
push
jmp
inc
movsb
fwait
xchg
xor
or
mov
cmp
pushf
cmp
mov
mov
jg
dec
mov
xchg
mov
pushl
mov
mov
and
mov
sub
jg
scas
or
fld
and
add
push
cli
sub
push
pop
loope
xor
mov
bound
idivl
mov
in
jnp
sbb
clc
pushl
push
mov
xchg
jmp
inc
lds
push
repz
fmull
loopne
jge
dec
mov
xchg
aam
dec
aam
add
mov
clc
lock
jl
adc
mov
into
sub
addr16
or
sar
sbb
jns
inc
add
into
add
jns
xlat
xor
loopne
addr16
js
xor
add
das
out
and
jg
push
xchg
jp
dec
inc
mov
outsl
lahf
adc
out
imul
add
sar
jl
sahf
or
test
sarb
imul
sbb
xchg
push
mov
mov
fnstenv
inc
push
xchg
das
dec
mov
sbb
pop
pusha
adc
in
pusha
jo
xor
cld
or
add
push
push
inc
test
dec
loope
decl
pushl
in
adc
test
xor
xchg
orb
scas
gs
rorb
and
mov
outsl
and
call
hlt
int
xchg
int3
out
loopne
shl
shrl
rorb
cmpsb
fnstenv
fistps
incb
sbb
mov
pop
icebp
aad
pop
lcall
mov
or
or
call
push
ret
push
dec
pop
clc
jmp
or
in
pop
pop
and
cmp
xor
sar
in
fists
xorl
fsubrl
push
cmp
and
jp
call
push
jbe
lock
cli
or
jmp
hlt
pop
fstpt
mov
loopne
js,pn
push
add
push
pushf
mov
test
gs
fnstsw
incl
add
scas
dec
mov
inc
test
dec
lcall
xor
cmp
or
inc
inc
das
push
jl
cs
fcoms
cmp
and
fadds
clc
inc
das
pusha
js
sbb
sbbl
in
movsl
mov
inc
out
mov
cld
call
dec
comiss
rorb
push
push
pushf
in
pushl
icebp
fs
imul
mov
jge
inc
mov
insl
xchg
sti
jnp
lcall
jp
repz
ud0
fnstsw
cmp
fldcw
inc
in
ds
jnp
sbb
sub
test
and
inc
fdivl
rorb
popa
mov
push
lods
scas
mov
jge
add
dec
fcmovnu
sub
adcl
dec
fs
adc
jl
dec
test
call
mov
push
mov
jg
add
xchg
dec
je
or
sub
mov
add
call
call
xchg
test
out
adc
xor
dec
lods
fsubrs
inc
pushl
adc
xor
into
jns
dec
adc
stc
cmp
in
adc
decb
out
pusha
cmp
test
add
inc
sub
xor
mov
mov
pop
push
ljmp
daa
jbe,pt
mov
sti
xor
mov
or
std
outsl
hlt
adc
mov
insl
dec
dec
or
pop
out
cmp
inc
imul
pop
mov
add
jl
ljmp
outsl
xchg
mov
pop
ja
mov
loopne
pop
setg
sub
subb
xlat
cld
inc
outsl
inc
push
adc
or
fs
mov
xor
dec
call
pop
repz
loop
test
pop
dec
jae
mov
xor
loop
clc
call
mov
addr16
imul
pop
mov
jb
add
lcall
aaa
fcomps
sub
adc
dec
adc
mov
sub
stos
push
mov
push
movsl
loop
jnp
cmove
movsl
jle
push
jecxz
test
pop
mov
out
add
jg
pop
inc
mov
into
sbb
adc
clc
cs
stos
shlb
sub
out
sub
push
inc
pushl
outsb
and
and
push
je
pop
pusha
jno
jb
push
int3
call
std
push
movsl
jl
jne
mov
push
and
popf
loop
test
mov
outsl
data16
jns
ss
jae
iret
jp
mov
pushl
clc
inc
test
loopne
and
ficompl
pop
or
fucomip
call
inc
mov
fisttpl
ja
mov
mov
mov
lret
jg
fistpll
into
das
xchg
dec
pop
insb
or
into
jmp
lods
inc
test
aaa
xchg
pop
mov
shrl
lret
mov
cmp
sbb
xchg
pop
daa
aam
lcall
sub
jle
cmc
sbb
cs
inc
jnp
cli
jp
add
mov
mov
rcll
jns
push
rclb
rclb
es
dec
jmp
test
and
jb
incl
push
js
or
fwait
cmpsl
in
sti
scas
and
cmp
jmp
into
je
mov
add
adc
in
je
sahf
jns
pop
notl
int3
aas
mov
outsl
cld
call
add
cmp
jne
popa
cmp
push
jg
sbb
push
or
mov
mov
fstl
mov
mov
shll
sub
push
int
cmpsl
adc
ljmp
cld
pop
fsubs
mov
jns
and
neg
sbb
and
cmp
je
stos
cmp
incl
stos
and
mov
cmpb
decb
add
jp
fucomip
mov
xchg
nop
push
adc
sub
push
loopne
jg
out
push
movsb
adcl
lret
add
into
imul
int
jns
push
arpl
mov
jo
xor
das
enter
ret
call
jp
out
mov
popa
bound
dec
outsl
push
and
mov
mov
pop
inc
mov
bound
ljmp
xlat
cwtl
pop
mov
aam
cli
sub
xchg
cmp
dec
lret
je
ficompl
push
mov
mov
push
lcall
jle
sbb
add
int
push
std
test
mov
jg
fsts
cmc
fxam
outsl
stc
pop
mov
dec
stc
jge
clc
ja
ret
cld
mov
mov
pop
ljmp
cmpsl
and
xchg
rorl
sub
movsl
ljmp
push
add
xchg
sub
mov
xchg
sbb
decl
inc
fdivrl
dec
xchg
mov
mov
arpl
push
push
outsl
push
daa
fucom
movsl
cli
loop
add
adc
ljmp
rclb
or
push
js
push
mov
loopne
jge
and
add
jge
arpl
or
int
ljmp
xchg
loopne
insb
sahf
push
xlat
add
and
xchg
pop
jns
or
mov
inc
fs
add
sar
call
dec
aad
loop
lret
add
out
xor
mov
icebp
mov
push
add
push
out
sub
pop
mov
test
stc
les
loopne
sbbb
xlat
push
jg
sbb
lock
mov
inc
xchg
call
lock
scas
xor
inc
call
cld
fadds
push
inc
jo
rorl
cmp
repnz
cli
movsl
pushl
or
mov
add
mov
outsl
rclb
push
cmpsb
addr16
push
jne
jb
mov
and
or
lcall
mov
divl
in
inc
pop
mov
adc
cmp
jle
stos
movsl
incl
fistpll
test
push
aad
dec
xchg
js
enter
call
pop
xchg
add
fistpl
add
sub
dec
incl
jns
add
and
mov
cmp
and
shrb
mov
stos
lret
in
out
push
and
pop
ljmp
sahf
clc
enter
or
nop
pop
dec
jb
push
frstor
nop
pop
clc
pushl
sub
and
jnp
xchg
dec
lea
imul
and
in
incl
addr16
fucomp
fildl
cltd
and
outsl
dec
sbb
mov
push
jmp
into
incb
hlt
lds
sub
fwait
test
inc
stc
loope
push
decl
dec
add
adc
sbb
clc
mov
inc
jmp
cmpsl
xchg
adc
jmp
incl
cmp
in
pop
call
stos
enter
push
addr16
sub
xor
out
into
push
add
adc
push
dec
xchg
push
mov
pop
xor
rorl
push
sub
call
jo
in
enter
lea
jo
push
adc
or
pop
cmpsl
sub
aas
mov
mov
lods
pop
add
xor
pop
mov
pop
push
or
lcall
leave
pop
mov
mov
push
jle
enter
jb
adc
lcall
sub
mov
or
ret
add
sub
and
add
or
or
sub
pop
test
ljmp
push
cltd
xchg
cmpxchg8b
dec
in
lahf
adc
call
call
out
ds
jg
icebp
stc
jns
or
jns
jp
js
in
or
mov
jg
mov
jae
sub
push
inc
mov
arpl
xchg
mov
xchg
cmp
xchg
in
test
test
cmc
cld
mov
pushf
jmp
fldl
decl
pop
mov
xchg
cli
pop
and
mov
push
fwait
xchg
lret
jg
inc
mov
fsubl
loop
int
test
pushl
xor
xor
pusha
adc
enter
jmp
outsl
lcall
cmp
das
jl
and
aad
push
xchg
test
mov
pop
cld
mov
jg
jmp
addl
dec
sbb
lds
or
add
sti
dec
push
incl
repz
push
inc
dec
jns
lods
sahf
xchg
inc
call
test
push
ror
cmc
jbe
fucomip
sbb
fiaddl
cli
fwait
arpl
jns
int3
cwtl
pop
mov
mov
adc
mov
bound
xchg
add
or
les
in
in
sbb
or
lods
loop
pop
pushl
sbb
aaa
out
fwait
mov
lret
stc
sarl
sub
pushl
movb
bound
jmp
cs
dec
inc
xchg
jne
push
inc
jmp
add
pop
pop
insb
inc
dec
mov
mov
into
mov
or
test
stc
mov
in
and
mov
jmp
in
pusha
cmc
mov
inc
sbb
clc
cmpsb
dec
adc
addl
call
push
jbe
out
jp
dec
lods
xor
cmp
adc
jge
pushl
es
mov
lret
loop
cs
imul
lcall
dec
dec
dec
mov
call
xchg
aas
xlat
ja
inc
add
or
xorl
dec
and
call
mov
jmp
adc
mov
inc
aaa
in
out
negl
mov
xor
jns
pop
push
mov
sbb
jns
ret
mov
es
sub
dec
jnp
repz
xchg
js
sub
fwait
stos
jmp
aam
cli
es
sub
push
loop
scas
add
incl
jmp
cli
sub
enter
adc
test
pop
jne
sti
add
add
pop
clc
repz
mov
and
and
cs
enter
mov
repnz
dec
call
cmp
adc
jmp
loope
mov
adc
jo
lret
mov
loop
and
xor
std
push
lret
cmpsl
nop
inc
imul
push
adc
jmp
lea
out
test
sub
cmc
add
hlt
loopne
mov
decl
sbb
imul
insb
call
push
pusha
cld
call
pop
cs
jg
decl
sbbb
add
shll
lods
int3
or
popf
insl
mov
int
push
adc
call
add
jo
jae
cmpsl
mov
cmp
dec
dec
decl
movsb
dec
imul
cld
mov
aam
push
aaa
cwtl
rorb
mov
cmpsl
shll
call
bound
or
push
js
and
mov
daa
repnz
push
mov
and
mov
incl
and
cmpb
aad
adc
jne
mov
jl
push
mov
mov
mov
xor
inc
inc
mov
repnz
cmpsb
clc
dec
lcall
jmp
arpl
mov
pop
xor
pop
call
inc
dec
jle
scas
fdivrs
or
or
outsl
mov
inc
push
andb
les
bound
sbb
and
fdivrl
dec
mov
cltd
adc
push
dec
xchg
popa
stc
clc
adc
aaa
clc
lods
xchg
lea
fcom
outsb
stc
loopne
dec
and
pushl
in
ret
mov
scas
xchg
adc
rolb
call
iret
add
xor
imul
cmp
mov
mov
dec
das
or
add
add
pusha
cs
loope
jl
add
ljmp
xlat
push
stos
push
outsb
adc
loop
or
test
aad
lods
in
decl
dec
xor
lods
push
sbb
pop
das
les
jecxz
bound
sub
jl
mov
xchg
out
mov
adc
cli
in
outsb
jb
repnz
mov
or
sub
lcall
decl
enter
mov
mov
pop
ds
cltd
dec
xchg
inc
sbbb
xchg
cli
sbb
mov
outsl
ret
sbb
mov
mov
sbb
push
pop
out
pop
lcall
movsl
mov
adc
xor
push
or
inc
mov
jg
icebp
add
inc
js
cli
and
pop
outsb
ds
pop
xorb
push
mov
and
test
cmp
cmp
push
orb
xor
test
pop
inc
inc
inc
mov
pop
bound
push
cli
jg
xchg
and
jp
dec
pop
cmp
popf
arpl
das
cld
call
pop
arpl
aad
jp
and
mov
adc
call
dec
sub
fwait
xchg
pop
loopne
xor
test
int
out
jno
out
xlat
clc
cltd
dec
decl
out
ret
and
dec
je
aam
mov
jbe
in
scas
cmp
fdivrs
sub
hlt
idiv
loop
mov
push
adc
jnp
adcb
xor
sbb
xor
jecxz
outsl
cmc
decl
push
into
cmpsl
aam
imull
add
es
push
jb
cmp
sbb
call
shll
jne
sahf
cld
mov
xor
jg
pushf
in
mov
cltd
sahf
inc
mov
ljmp
call
pop
mov
repz
inc
jb
cmp
stos
popa
or
aas
adc
jno
ljmp
add
jecxz
popa
aad
adc
adc
mov
pop
cld
call
adc
adc
pop
jge
mov
mov
call
mov
cmp
inc
test
lea
mov
nop
pushf
pop
push
jmp
clc
movsb
pop
add
xchg
gs
or
fstpl
outsb
lock
lcall
adc
push
sbb
sarl
mov
dec
movsl
stc
repnz
or
std
mov
mov
mov
inc
cltd
divl
or
cmp
ljmp
cld
mov
mov
fiadds
xor
sub
jnp
or
lahf
clc
call
jmp
data16
cmp
jnp
and
cli
add
lods
iret
test
jg
xchg
cmpsl
and
inc
gs
or
pop
dec
fadds
cmp
shr
cld
push
jne
iret
call
scas
call
dec
iret
lahf
push
mov
pop
or
push
push
jecxz
mov
dec
sub
call
mov
js
sbb
sbb
fildll
je
aaa
xchg
sti
push
push
mov
xor
pop
cld
jp
mov
pusha
sub
jae
sahf
inc
and
jne
mov
das
decl
mov
jnp
adc
jge
or
cmp
mov
aaa
cs
sarb
or
popf
or
sub
fistl
mov
jbe
sub
loop
adc
jmp
jecxz
insb
push
loopne
mov
add
gs
je
ret
pop
stc
mov
pop
les
xchg
das
out
push
into
pop
lock
dec
push
je
lcall
or
fwait
mov
xor
into
or
lds
daa
cli
pushl
sub
inc
lods
sub
push
xor
cmp
inc
loop
or
pop
and
int
into
test
lret
mov
or
addr16
data16
fistl
ror
jnp
ljmp
add
nop
loopne
call
or
scas
shlb
fs
push
bound
outsb
fwait
out
add
lret
pusha
jmp
mov
cwtl
or
push
cmp
pop
push
add
dec
andl
pop
ret
inc
ret
pushl
lahf
test
arpl
subl
pshufw
inc
jne
cmp
sbb
xchg
clc
pushl
fsubr
inc
pop
mov
jae
jp
xor
and
mov
push
shl
dec
and
dec
sub
js,pt
pop
ret
or
jp
mov
jne
sub
je
or
setbe
push
in
add
mov
pop
std
xor
rorb
push
out
cli
adc
or
std
sbb
cld
mov
add
in
popf
loopne
call
std
jo
or
pop
je
ss
sub
push
push
lret
lcall
dec
and
inc
xor
js
es
jo
jno
insb
cmpsb
aaa
cli
decl
cs
or
or
fs
mov
aaa
mov
jmp
divl
xor
sbb
or
ljmp
cmc
lcall
call
out
jg
data16
sbb
or
outsb
adc
mov
outsb
sub
ss
ljmp
and
rcr
dec
hlt
das
out
mov
xchg
or
lret
fistps
adc
mov
jg
mov
and
push
fiadds
inc
mov
lret
decl
mov
fcoml
or
jl
lcall
add
push
adcl
ret
ljmp
add
add
jp
add
std
call
adc
ljmp
loop
sub
add
and
cmp
mov
mov
movsl
add
jns
adc
jg
test
les
xchg
dec
sub
jmp
mov
test
div
loop
add
pop
lods
movsb
inc
mov
jmp
jecxz
pop
enter
lahf
xchg
mov
and
mov
test
adc
pop
pop
mov
mov
inc
rclb
cwtl
adc
push
dec
jno
clc
in
aam
jg
cmp
adc
call
pusha
or
jmp
sub
fsubrl
jg
icebp
add
int
push
and
lret
shll
iret
pop
mov
fnsave
wrmsr
cwtl
enter
push
sbb
mov
inc
sbb
je
loope
loop
xor
add
ljmp
mov
xchg
dec
sbb
pop
push
mov
dec
xor
fdivr
mov
pop
sub
call
mov
pushf
jnp
push
movsb
cmp
mov
jecxz
adc
add
ss
cli
repnz
stc
jmp
popa
fxch
cs
mov
jne
cmp
pop
or
clc
incl
das
rolb
lcall
pop
arpl
call
mov
jecxz
lahf
add
xorb
push
push
push
jmp
cs
notb
and
mov
xor
in
fcompl
adc
test
mov
push
adc
pop
mov
add
mov
incl
decl
mov
sub
out
outsl
mov
cwtl
dec
push
int
stc
jne
cli
mov
xor
mov
inc
ds
push
incl
enter
call
jp
cmp
dec
mov
ds
push
adc
in
cmpsl
aaa
mov
push
test
lea
push
dec
imul
je
aas
clc
pop
sbb
mov
and
cmp
lea
adc
lcall
cld
jg
nop
popa
shl
or
jp
cmp
xchg
fdivrl
ffree
jg
xor
sub
incl
lea
in
mov
fstpt
or
stos
or
or
dec
add
sub
std
out
xchg
arpl
incl
cld
mov
aam
add
stos
imul
and
cmpsb
repnz
jmp
jmp
loope
cmc
inc
inc
imul
andl
cmp
lock
jg
sub
jo
push
xor
loopne
jo
andb
sub
loopne
test
nop
push
cli
repnz
inc
nop
in
rorb
jg
out
pop
jmp
or
shlb
insb
jnp
fbstp
dec
xchg
aaa
lret
aaa
lret
loopne,pn
out
push
inc
lock
lcall
mov
jnp
fisubs
inc
sarb
dec
sub
push
sbb
dec
std
ljmp
or
loope
cmp
cmp
jl
fbld
jae
add
or
or
mov
pop
or
push
insb
xor
test
push
cmp
or
jmp
adc
jg
rolb
loope
ret
iret
jo
jp
je
mov
test
das
lock
call
test
pop
jae
sbb
aaa
sub
ss
pusha
jne
mov
dec
xor
mulb
jnp
enter
aaa
repnz
fwait
xchg
xchg
pop
data16
dec
popa
cmp
fbld
pop
call
jl
add
test
add
jns
push
jecxz
dec
std
lcall
sub
jnp
ret
popf
pop
push
into
push
jae
inc
es
loope
pop
sub
fcmovb
imulb
addr16
mov
pushl
mov
lret
inc
rcr
jl
int3
ss
sbb
std
call
mov
inc
push
mov
hlt
xor
movsl
adc
sar
test
push
dec
pop
dec
dec
stc
cmpl
leave
je
lret
xor
loop
add
incl
mov
adc
push
ret
mov
lret
andl
sub
stc
out
or
inc
icebp
ret
call
repnz
bound
sub
mov
insb
sub
xor
pop
lcall
addr16
aam
daa
xchg
cmp
std
push
cmp
or
add
lock
incl
cs
xchg
sub
clc
push
sahf
test
cmpb
dec
pop
rcrb
ds
mov
insl
movl
lods
pop
push
cmpl
scas
pop
fimuls
in
lock
mov
xor
lods
mov
or
push
repnz
sbbl
dec
hlt
sbb
jmp
mov
lock
decl
loope
rol
sbb
sub
hlt
mov
test
imul
adc
pushl
inc
pop
stos
js
cmp
xor
cmp
cli
cli
ljmp
pop
nop
ja
jl
outsl
data16
dec
jnp
mov
cmp
repnz
jl
mov
xchg
clc
idiv
fstpt
aam
mov
mov
insl
stos
mov
call
pushf
and
xchg
push
mov
dec
mov
addl
frstor
sti
cmc
or
xchg
test
lods
fsubrp
lods
aas
pop
jns
mov
xchg
lcall
decl
test
incb
sub
xor
push
dec
push
andb
push
shll
data16
jb
pop
mov
cmp
js
lahf
fsubr
incl
xchg
movsl
rcrl
and
fwait
out
or
outsl
das
dec
add
idiv
iret
loop
aam
testb
fistpl
das
std
inc
mov
fidivl
mov
outsb
mov
mov
incl
incl
xor
sub
mov
xor
sbb
inc
cltd
mov
adc
rcrb
add
jae
mov
adc
cld
outsl
or
pop
mov
je
cmp
mov
push
fistpll
mov
std
adc
out
aas
js
add
aas
add
add
cltd
decl
clc
dec
inc
push
mov
mov
into
testl
das
std
ljmp
mov
and
cmp
pushl
xor
mov
rolb
imul
cmp
insl
mov
adc
push
cli
lcall
das
pop
xlat
fmul
push
push
fcomp
popf
xor
cmp
pop
push
pushf
stc
cltd
sbb
stos
iret
inc
popa
pop
sub
push
mov
sub
jns
jge
call
jp
ret
adc
rcll
jmp
ret
std
inc
and
jnp
mov
lret
repnz
mov
jp
cmpb
push
lods
and
add
pop
cmc
mov
cmp
mov
pop
std
das
jo
loop
sub
xor
and
xchg
dec
in
incl
mov
clc
decl
and
fstpl
mov
mov
rorb
jle
xchg
cli
icebp
out
int
jb
fsubs
into
shrl
mov
aam
or
mov
int3
cmp
jg
decl
pop
add
cmpsl
fptan
jp
aad
sarl
add
jmp
incl
sbb
mov
pcmpeqw
mov
sub
mov
sti
fldt
and
and
sub
mov
jle
and
aam
push
xlat
add
cmp
icebp
mov
dec
cmc
int3
fadds
jg
and
rcrb
fstpl
dec
loope
out
adc
mov
bnd
xor
push
pop
sar
lcall
mov
inc
jecxz
add
movsb
into
xchg
movsb
adc
xchg
pop
pop
mov
mov
cmp
mov
stc
cmp
ljmp
cld
push
or
add
sbb
add
imul
dec
sub
inc
mov
aaa
repz
cmpl
xchg
rorb
lock
dec
dec
sarb
jmp
fnsave
jg
lcall
pop
sbb
sbb
call
sub
les
out
outsb
pop
xchg
xlat
dec
call
std
das
xor
mov
rcll
sub
dec
mov
test
jle
call
jne
adc
xor
ljmp
test
shll
nop
push
sub
or
je
inc
mov
mov
cs
loop
mov
pop
mov
dec
das
std
mov
lahf
pop
sar
sbb
call
sbb
push
call
push
sbb
mov
test
scas
push
push
rcl
sub
clc
addl
out
push
incl
jmp
pop
aaa
xchg
jp
xchg
add
out
nop
loop
sub
popf
lea
mov
stos
lcall
lds
hlt
push
inc
push
clc
int3
mov
pop
add
sti
adc
in
sahf
xor
repz
jp
pushl
sub
je
out
incb
icebp
jmp
cmp
incl
out
subl
std
jl
rol
stos
mov
test
decl
lock
call
or
rcl
sahf
fucom
rcll
pcmpgtw
push
addr16
mov
test
mov
inc
mov
in
repnz
sub
sub
cs
pop
cli
mov
ficoms
push
aaa
xor
lret
lret
jg
lds
cmp
pop
hlt
adc
out
test
aam
js
jmp
inc
jmp
xor
lcall
fildll
sub
xchg
dec
movsb
sub
pop
popa
push
fmuls
mov
xchg
adc
xor
push
lret
push
rolb
jae
into
add
es
mov
loop
xchg
sbb
xor
in
adc
cmp
aam
call
pop
movsb
mov
lock
movsl
mov
pop
int3
mov
call
cmpsb
mov
out
in
test
icebp
ja
jb
push
inc
out
orb
mov
mov
fldl
fistps
outsb
scas
push
stc
inc
xor
or
popa
xor
pop
mov
lock
incl
rorl
inc
mov
call
mov
shlb
lret
mov
das
je
addb
pop
iret
jns
int3
mov
insl
aad
mov
and
sub
xchg
je
inc
jb
or
cmp
ror
decl
rol
enter
xchg
aad
movsl
push
adcl
adc
push
out
dec
pushl
xor
or
adc
xor
aaa
cmpl
clc
jge
adc
sub
divl
jmp
cmp
mov
xor
cmp
xlat
fists
inc
test
clc
xchg
or
clc
in
sub
js
sahf
mov
pushf
dec
pop
push
icebp
jge
dec
nop
std
dec
pushl
lds
js
imul
movsl
mov
dec
cli
lcall
dec
inc
pop
inc
out
mov
push
pop
and
inc
clc
pusha
or
mov
call
push
jb
shrb
push
fisttpl
push
jp
lret
sti
ja
dec
decl
lock
test
push
notl
sti
xchg
out
push
or
dec
cltd
ljmp
adc
pusha
pop
aad
imul
scas
push
sbb
sub
mov
ljmp
dec
sub
inc
inc
mov
insl
dec
jne
sbb
dec
mov
and
add
sub
lret
lret
fucomip
dec
imul
into
aam
adc
push
jo
scas
dec
pop
push
mov
ret
cmp
dec
fstl
test
popa
dec
and
cmp
push
add
movsb
call
in
adc
cmp
dec
test
call
mov
jnp
loopne
jl
movsb
addb
push
xlat
jnp
hlt
lcall
fdivrs
xor
and
ret
push
mov
mov
push
jnp
mov
das
pop
test
push
inc
sbb
push
test
adc
fucomip
sbb
jb
xlat
ds
cmp
stos
inc
xchg
sub
loopne
das
lock
idivl
ja
subl
dec
adc
pop
xchg
hlt
test
fildll
das
inc
movsl
fmuls
inc
insb
jns
sbb
and
jle
mov
and
lds
movsb
inc
sub
ljmp
aam
sbb
ds
cmp
lahf
inc
xor
popf
ljmp
std
jl
mov
dec
std
int3
lds
jmp
arpl
lock
sub
call
and
insb
lock
into
sti
dec
add
dec
pop
or
inc
cmp
in
cli
sahf
dec
insl
add
rclb
push
test
dec
push
es
xlat
clc
dec
and
out
popa
jns
push
divl
and
jl
xchg
ljmp
pushf
inc
ds
xlat
xor
lds
xorl
jns
dec
push
popa
xchg
loopne
das
hlt
push
cmp
jg
dec
call
mov
push
pop
sbb
mov
movsl
out
mov
sahf
push
lret
testl
mov
pop
ror
sarb
and
je
push
mov
call
xchg
test
xchg
aas
lods
inc
mov
dec
mov
dec
dec
dec
das
pusha
pop
xor
cmp
jle
out
lock
push
call
cmpsb
pushl
adc
and
xchg
jge
xchg
lds
jl
aad
faddl
xchg
cli
lods
subb
enter
std
es
push
xor
shlb
lea
daa
ja
mov
jo
jg
sub
mov
cmc
sub
mov
xor
lcall
std
pop
push
enter
pop
stos
jle
sub
jns
dec
push
cmp
cwtl
sbb
jmp
pop
dec
push
and
mov
sbb
cmp
jne
push
neg
insb
and
push
adc
jg
push
enter
js
dec
jmp
outsb
movsl
inc
push
xor
jnp
bound
ljmp
cmc
push
jecxz
add
jo
call
jns
jo
or
mov
mov
ss
adc
inc
jno
xor
arpl
pop
repnz
inc
and
in
push
and
in
call
fcompl
dec
scas
in
mov
mov
xchg
mov
vpsubsb
pop
jl
les
pop
dec
leave
xchg
cld
cmp
adc
mov
cld
inc
add
cmp
xlat
sub
jne
aad
pop
mov
enter
cli
cmp
lea
add
inc
dec
xchg
iret
add
rorb
and
fcmovnu
jno
jg
mov
inc
clc
dec
lcall
cmp
in
sti
xchg
lcall
pop
xchg
cli
ljmp
ret
mov
les
mov
popa
mov
or
movsl
pop
std
pop
pop
jmp
and
mov
das
jmp
mov
xor
je
jmp
je
mull
cmp
push
sbb
jmp
cmp
xchg
mov
sbb
dec
ret
pop
inc
add
push
add
or
push
ret
call
ret
push
mov
aam
cmp
scas
mov
pop
cli
inc
sbb
jo
add
int3
mov
cld
inc
sub
sub
jae
xor
int
ljmp
mov
xorl
ret
bound
mov
mov
enter
mov
cld
call
js
sub
add
cmp
pop
dec
stc
out
mov
xchg
ja
clc
aaa
decb
xor
sub
in
lcall
inc
cmp
lea
push
ficomps
cmp
jle
and
mov
xor
push
test
ret
shll
dec
cs
dec
mov
push
pop
js
sub
jmp
mov
rorl
stc
jns
and
mov
loope
aad
xor
call
fldl
ljmp
shl
jg
sub
loop
inc
adc
sbb
popa
dec
testb
mov
mov
mov
sbb
add
jp
pop
add
sbb
or
jmp
jne
pushl
out
jmp
and
pushf
call
aad
pop
mov
inc
test
loope
jg
push
or
and
jne
inc
lret
rorl
dec
mov
mov
jle
call
out
jmp
mov
and
and
mov
jl
inc
jb
and
das
mov
mov
js
lahf
sub
popa
out
shll
push
or
sahf
daa
gs
das
jle
push
dec
push
pushf
pop
in
mov
push
fildl
jmp
insb
mov
sub
cmc
adcl
xchg
lea
jbe
ljmp
sahf
stc
lods
xor
mov
pusha
xor
lret
mov
sbbb
jne
inc
fisubl
mov
das
shrb
sarb
decl
xor
pop
xchg
pop
xchg
or
jo
popa
nop
jecxz
adc
mov
adc
xchg
push
push
cmp
jg
push
call
sub
pop
dec
lret
cmp
add
mov
js
int3
xchg
aam
mov
mov
loopne
xor
inc
pop
cli
lcall
daa
inc
in
jecxz
mov
pop
nop
pop
jnp
inc
imul
aad
jg
mov
xchg
popa
popa
jp
sub
std
xchg
mov
rol
adc
out
or
clc
sub
jl
push
push
mov
adc
pop
call
lea
addr16
daa
outsl
jmp
or
pushl
jae
dec
xchg
cltd
jecxz
es
mov
xor
leave
add
push
decl
pop
cld
test
into
xor
cmp
xchg
cmpsb
pop
arpl
pop
or
iret
icebp
xchg
sbb
or
xor
cmpb
adcb
pushl
pop
aad
je
push
push
dec
jno
bound
filds
dec
inc
clc
mov
fbld
or
mov
adc
sqrtps
test
fbld
xor
or
popl
call
or
incl
test
pop
insb
fdivl
sub
call
cli
jp
inc
sbb
out
cmp
push
out
or
cmp
scas
into
mov
fldcw
or
sbb
in
cli
test
ret
jo
xchg
pop
fbld
fcomps
addl
lret
jecxz
adc
or
call
or
mov
ja
pop
adc
inc
fidivs
lret
jns
cli
add
repnz
jg
jo
test
pop
mov
int
or
imul
cmp
mov
mov
leave
mov
jns
push
sarl
cmpsl
ja
sti
fucomip
addb
cs
mov
shl
cmp
addl
jg
xor
sbb
or
adcb
adc
jg
ds
jbe
inc
pushf
push
cs
inc
call
cmpsl
xchg
xchg
cli
out
cmp
push
je
in
jns
roll
add
mov
mov
dec
push
call
or
lret
aaa
clc
sahf
or
push
dec
je
jns
and
dec
jo
orb
dec
inc
push
dec
or
ja
pop
sbb
mov
repnz
dec
js
jmp
dec
dec
repz
jg
divb
dec
xor
js
cmp
lret
into
mov
or
clc
sarb
or
lret
mov
lahf
cwtl
iret
mov
mov
push
jne
int3
inc
test
add
incl
cmp
je
sti
and
and
call
add
mov
shrl
lcall
test
cld
leave
idivl
jle
inc
repz
ljmp
popa
add
je
sbb
mov
pusha
xchg
pop
adc
pop
sbb
mov
lods
push
fdivr
call
mov
pop
sbb
sub
push
push
inc
dec
dec
popf
push
xchg
int3
in
jno
pop
push
data16
into
cmp
push
iret
and
cmp
js
imul
sub
cmp
daa
push
mov
adc
xor
enter
outsl
cmc
in
in
fisubs
mov
jge
call
arpl
jg
mov
fs
sbb
cmpl
je
mov
dec
das
push
loop
sti
xor
fisubrs
popa
lret
flds
loope
mov
leave
andl
jg
jp
jno
ljmp
and
repz
loope
push
sti
and
nop
scas
fwait
xchg
decl
or
jne
pop
loopne,pt
call
pusha
add
lods
call
adc
out
pmuludq
decl
insl
inc
add
xor
stc
stos
repz
mov
loope
lea
mov
push
jae
popa
aam
sub
insl
add
outsl
cld
call
mov
jp
shrb
ja
jb
push
out
sub
dec
and
pop
mov
out
pop
inc
push
clc
push
add
mov
xchg
push
scas
std
outsl
jnp
aaa
js
mov
mov
insb
add
call
rolb
cmp
cmp
or
std
decl
push
or
mov
cmp
outsb
in
mov
loop
mov
mov
rol
mov
cmp
or
push
fsubrs
inc
test
inc
pop
test
inc
call
lods
stc
jns
add
mov
and
idiv
jg
mov
int
dec
and
pusha
mov
adc
sbb
inc
pop
or
int
mov
stc
test
int3
rolb
xor
imul
sub
sub
je
inc
aas
dec
push
js
out
ljmp
pop
ret
idivl
or
mov
or
cmc
test
addl
adc
push
mov
je
lock
add
adc
ljmp
mov
and
loope
cmp
mov
and
fistpll
or
jg
inc
daa
imul
jns
cmc
xchg
adc
call
pop
sbb
ret
icebp
je
out
lea
fisubs
ud0
mov
xchg
ret
shrb
ss
jle
mov
cmpb
xor
jmp
mov
sbb
sbb
jge
sbb
xchg
sub
push
jmp
push
sub
pushl
push
pop
mov
lock
lods
lret
inc
ss
pop
or
pusha
sub
into
mov
cmc
mov
loopne
cmp
jmp
and
xor
mov
mov
push
ss
sub
adc
call
jg
pop
jecxz
cmp
inc
jne
adc
stc
push
dec
js
aaa
jmp
out
xor
xchg
sbb
lds
dec
xchg
mov
and
dec
adc
mov
mov
pop
stos
adc
add
cmp
cwtl
les
icebp
iret
cmpsl
je
push
dec
mov
or
inc
jl
pop
or
lcall
jle
sahf
push
dec
jge
mov
mov
addr16
xor
jne
movb
add
push
cmp
add
and
call
adc
dec
fcom
jo
dec
xor
cs
ud0
call
sbbl
out
fistps
andl
push
fisubs
push
lea
test
push
int3
decl
fisttps
mov
push
shlb
xor
bound
inc
cld
lcall
inc
and
xchg
sub
inc
into
push
sbb
bound
scas
dec
mov
pop
add
cwtl
mov
adc
mov
pop
cmp
scas
sbb
jge
mov
es
sub
hlt
or
scas
cmp
pop
in
and
sbb
add
push
lock
jnp
scas
adc
and
lcall
mov
mov
add
xchg
mov
and
loope
lods
mov
mov
jno
cli
jmp
test
loopne
mov
cmp
shrb
mov
mov
lcall
dec
and
add
inc
jg
test
out
mov
sbb
hlt
fcos
mov
cs
cwtl
adc
dec
addr16
pop
arpl
sub
cmp
insl
and
dec
cli
imul
clc
mov
sub
jae
sbb
testl
cmp
push
or
sar
mov
jns
in
pushf
js
mov
sarb
lock
mov
or
mov
jl
cmpsl
pop
push
sub
mov
inc
out
sbb
jle
decl
xchg
cmpl
sub
push
pop
cmp
clc
push
enter
mov
mov
pshufw
popa
add
loop
mov
jl
loop
dec
std
pop
insb
decl
inc
ljmp
clc
mov
lods
jnp
pop
loop
aas
jns
xchg
imul
sub
pop
cli
pushl
movsb
cmp
push
lock
mov
adc
ss
sbb
andl
cmp
or
add
push
insb
sahf
or
out
mov
adc
arpl
mov
test
test
xchg
sti
and
adc
cmp
mov
mov
int
push
sub
inc
mov
sub
call
mov
popf
pop
xchg
das
cmp
aaa
cmp
loope
lcall
pop
data16
stc
cmp
or
fldenv
mov
cmpsb
into
nop
pushl
cli
jbe
inc
sub
rolb
arpl
cmp
insb
inc
ret
or
push
js
imul
in
xchg
lret
pushf
fdivl
and
cmp
jg
call
xor
aaa
sbb
test
inc
out
push
hlt
cmp
fisubl
push
clc
xor
sub
adc
ds
mov
test
pop
and
movsl
pop
clc
call
adc
lock
xorb
and
adc
mov
mov
jecxz
loop
addr16
fcompl
testb
dec
add
push
sar
mov
xor
lds
xchg
xorl
adc
mov
xor
int3
sub
fwait
lock
mov
jle
mov
lret
aam
cmp
or
mov
outsl
hlt
mov
pop
xchg
cli
xchg
push
pushf
shrl
dec
xor
int
aaa
dec
jl
int3
pop
fxch
dec
mov
lcall
ljmp
cltd
iret
mov
add
mov
dec
xor
leave
mov
pop
std
push
roll
call
testl
push
clc
dec
dec
and
pop
push
insb
add
in
mov
jg
push
int
fcomps
enter
in
jbe
mov
add
jge
lds
jg
inc
push
cmc
push
xchg
aas
sub
push
xchg
mov
and
ret
inc
or
dec
or
push
push
add
push
push
call
scas
inc
push
mov
mov
cmp
mov
in
scas
pop
xchg
cmc
lret
enter
pop
bound
mov
and
stc
nop
fcmovne
adc
dec
jo
testl
add
sbb
aas
xchg
shl
mov
fidivs
xchg
push
cmc
pop
loop
ds
cltd
movsb
sbb
clc
and
stc
sar
xlat
mov
sub
mov
jl
cmc
xor
pop
outsl
hlt
decl
pop
je
adc
xor
loopne
pop
lahf
sub
push
xchg
out
ljmp
pop
ror
rcr
data16
push
ret
add
std
das
hlt
jg
cmp
mov
pop
test
push
xor
mov
scas
in
rcl
mov
pop
dec
jmp
repz
ret
jg
call
dec
mov
cmp
sub
and
les
adc
std
cmpb
sahf
aad
inc
in
add
jle
dec
inc
add
mov
push
stos
loop
clc
mov
xchg
ret
mov
jb
jg
pop
aaa
pop
loop
mov
mov
pop
mov
cmp
xor
es
jmp
inc
push
pop
fs
xlat
shlb
aad
icebp
dec
push
mov
stos
jae
sar
icebp
ja
cmp
mov
jge
adc
cli
test
xor
arpl
lds
cs
mov
std
dec
dec
xchg
ret
adc
adc
clc
xchg
in
push
pushl
cmp
mov
subl
xor
in
cmp
pushl
adc
lods
jb
pusha
and
mov
leave
dec
push
sbb
rorl
loopne
or
xchg
lock
inc
mov
iret
sbb
out
jge
push
xor
adc
in
jg
xor
mov
jmp
fistpll
test
fldt
sub
push
fcom
pop
call
fnsave
pop
xor
pop
hlt
sbb
push
int3
repnz
pop
ret
ret
das
lock
mov
inc
cmp
push
pop
add
clc
lahf
xlat
incl
test
aaa
jmp
push
and
jge
inc
xlat
pusha
faddp
xchg
iret
rcll
filds
aaa
push
loopne
cmp
cmpsl
in
leave
mov
mov
aaa
in
sarb
movsb
and
adc
and
cmpsl
cmp
cs
iret
jae
xchg
adc
inc
aad
pop
jl
xchg
dec
adc
lahf
bound
xchg
xchg
les
add
mov
mov
inc
aam
adc
movsl
int3
decl
sbb
loop
push
add
cld
xchg
dec
faddp
pop
repnz
dec
das
inc
jno
adc
pop
sub
mov
je
cmp
aaa
popa
and
and
sarb
jecxz
push
push
mov
push
int3
mov
lock
aad
ss
xchg
decl
inc
pushl
or
push
dec
jo
fidivrl
xchg
sahf
in
xchg
cmpsl
and
mov
jmp
sbb
add
in
outsl
and
sub
lahf
push
sar
call
inc
mov
rcrb
je
add
rolb
jmp
ud0
call
or
ljmp
jb
add
scas
lahf
je
lea
mov
push
stos
ror
add
test
xchg
fnstsw
dec
rorb
stos
lahf
pushf
push
nop
lock
sbb
loopne
rcrb
rorb
cmp
scas
xchg
pushf
sbb
pushf
dec
in
loop
push
outsb
ret
pop
adc
enter
int
mov
std
mov
loope
dec
mov
fmull
pop
adc
xchg
pop
xor
pop
or
test
cmp
adc
mov
int
jle
cs
std
outsl
cld
pushl
test
sub
jp
addb
cmp
inc
pop
lcall
lock
lahf
rclb
mov
jae
jp
mov
push
pop
push
rorl
sarb
inc
dec
dec
pop
test
sbb
push
push
out
negb
frstor
push
stos
lcall
jge
shlb
inc
shr
into
repnz
inc
mov
inc
jge
leave
fstpl
mov
pushf
or
push
cmp
lahf
or
inc
popa
sarb
pop
insb
inc
test
and
inc
mov
ljmp
out
jecxz
or
aas
pop
mov
mov
mov
dec
add
lcall
std
das
enter
scas
sbb
insb
and
mov
inc
xchg
sub
lcall
cld
adc
inc
xlat
movsl
ljmp
xor
mov
xor
es
or
jnp
call
mov
xchg
arpl
cmpsb
dec
cmp
lods
dec
test
decl
mov
or
mov
inc
sbb
repz
mov
and
and
sbb
mov
jecxz
mov
call
sbb
aam
xor
cmp
imul
call
xor
add
xor
push
js
mov
add
dec
dec
xor
or
jp
adc
arpl
add
mov
pop
or
mov
loopne
pusha
lock
mov
test
fcomp
jae
pop
pusha
adc
int3
loope
jne
jnp
mov
inc
pop
ds
sub
mov
fistps
ds
add
es
fwait
loop
jns
and
adc
sbb
mov
insl
mov
mov
lods
xor
and
es
jb
mov
push
add
idiv
or
loope
or
mov
jmp
push
inc
adc
mov
insl
add
jb
push
inc
cli
iret
outsl
or
sti
jl
nop
mov
ret
jge
incl
and
xor
out
inc
add
fcmovnu
push
push
mov
jns
cltd
pop
push
js
stc
ret
xor
jae
rorb
loop
das
icebp
jg
out
sub
enter
mov
or
rcr
pop
dec
clc
pushl
pushf
add
loop
call
dec
or
jl
add
sub
scas
sbb
mov
das
fsubr
stos
sbb
push
jmp
xor
aas
adc
ljmp
into
add
lods
and
pop
dec
push
dec
inc
jmp
xchg
retw
push
call
cli
lret
leave
adc
push
fnstenv
arpl
and
xor
xchg
and
or
cmp
jle
jmp
orl
sbb
mov
add
adcl
aad
push
loopne
adc
jg
sti
xor
add
cmpsb
jp
imul
mov
enter
or
mov
in
cmpl
outsl
test
jae
mov
dec
sahf
outsb
mov
cmp
in
das
inc
mov
pop
test
cmp
in
push
repnz
das
cld
jp
stos
lock
xor
jb
ja
adc
add
and
je
out
jno
or
jnp
add
xchg
jb
das
add
or
bound
jbe
clc
sbb
pop
test
loope
out
pop
ja
incb
and
pop
test
out
pushl
mov
test
cmp
in
adc
rorb
and
cmp
test
adc
mov
out
add
repnz
rcrb
pop
adc
inc
int3
jp
mov
pop
jno
dec
inc
inc
cmpsb
test
lcall
mov
lret
mov
arpl
and
repz
and
xchg
mov
xchg
call
inc
shrl
add
bound
inc
sbb
std
fwait
or
incl
std
pop
adc
jp
in
inc
xchg
mov
mov
jbe
dec
mov
std
cmp
aas
into
push
xlat
jmp
sbb
je
xchg
lds
lea
add
idiv
cli
daa
cli
aam
pop
push
adc
sti
das
hlt
incl
xor
and
mov
cmpsl
mov
jb
lahf
mov
sbb
add
repz
nop
xor
andl
or
ja
xchg
xor
cli
decl
mov
mov
ja
daa
push
inc
mov
ljmp
adc
fistpl
sub
test
push
or
inc
and
nop
inc
inc
xor
or
dec
ret
in
call
mov
ficompl
fisttps
out
mov
inc
lds
sub
mov
lcall
in
test
data16
mov
sbb
fistl
sbb
cmp
incl
inc
or
movsb
add
adc
mov
cmp
jge
inc
push
lahf
pop
faddl
test
fs
sbb
addl
je
incl
push
call
sbb
rclb
cld
nop
mov
pusha
pop
push
dec
adc
or
fucomip
test
out
mov
nop
xchg
inc
outsl
inc
add
jg
fimull
push
or
fdivl
jecxz
add
shll
shlb
sbbb
loopne
mov
or
test
arpl
call
clc
lock
adc
push
outsl
push
outsb
pop
inc
push
pushl
mov
push
je
sbb
aaa
mov
pop
push
jbe
push
mov
addr16
push
fdivp
pop
mov
lcall
ss
lds
rcr
sbb
adc
mov
jns
mov
enter
in
arpl
inc
pop
js
sbb
outsl
dec
jmp
std
jmp
call
cwtl
push
adc
imul
xor
ret
addl
mov
enter
scas
jcxz
and
je
lea
das
cld
lret
pop
fcmovu
push
sbb
and
rorb
push
cmp
movsl
sbb
aas
test
fidivrs
add
aam
mov
mov
fldt
xlat
mov
xchg
pop
xchg
pushf
mov
dec
sub
mov
push
dec
xchg
scas
jg
add
cwtl
out
inc
xchg
xchg
mov
cmp
cli
jl
call
jb
pop
outsl
je
mov
push
das
xchg
dec
out
out
inc
test
call
fistps
xchg
call
ror
out
pushf
data16
insl
call
imul
aam
lods
pushaw
mov
push
xor
clc
std
adc
jecxz
add
faddl
pushf
xchg
popf
cmp
ss
outsl
std
jmp
scas
pop
loop
scas
xor
xchg
adc
push
call
ljmp
insb
xor
pop
mov
pop
in
pop
pushl
xchg
mov
push
shlb
or
mov
inc
pushf
addr16
incl
decl
jo
and
pop
push
mov
shlb
fs
xchg
push
pop
incl
ljmp
xchg
sbb
js
mov
or
sub
inc
pop
xchg
lcall
cltd
push
jle
lock
push
pop
rcrl
jge
sub
js
pop
rol
mov
les
out
aam
addr16
insl
sahf
lods
loopne
cmpl
adc
mov
imul
stos
sbb
call
jge
call
loope
xor
popf
ljmp
outsl
sbb
mov
push
pop
mov
dec
jnp
lods
xchg
add
insb
std
mov
in
pop
repz
loope
xor
sub
cmp
lea
dec
lods
pop
and
xor
push
sub
jne
or
cld
std
decl
pop
sub
mov
subl
push
dec
rcr
mov
jmp
lcall
or
sbb
ret
mov
dec
push
cmc
xor
adc
fsubrl
std
ljmp
repz
int
push
or
mov
xor
bound
cmc
jg
and
enter
inc
test
push
dec
xchg
cli
call
xor
scas
fldenv
mov
pushf
inc
roll
or
int3
out
pop
pop
out
jbe
filds
inc
sub
lret
js
in
xor
notl
dec
mov
fistpll
dec
lret
decl
arpl
dec
dec
mov
mov
pop
or
and
mov
stos
fs
imul
cmc
aam
aas
mov
andb
cld
mov
popa
mov
cmp
ljmp
aas
or
fistps
cli
mov
and
sbb
clc
fucomip
pushl
mov
sub
sub
adcl
cmc
jg
or
dec
sar
sbb
push
pushl
jmp
push
mov
jg
ljmp
lods
ret
cltd
mov
stos
out
dec
add
call
jl
ret
ret
adc
sbb
pop
fs
cwtl
ja
mov
jmp
xor
std
int3
lret
lea
or
adc
ss
clc
subl
jge
xchg
jmp
outsl
push
lods
cmp
sbb
ss
adc
movsl
mov
inc
lahf
add
clc
push
outsl
pop
loopne
incb
adc
aam
and
repnz
fdiv
jns
mov
mov
xchg
out
outsb
repnz
push
push
rcrb
cmpsl
adc
lods
jmp
mov
jge
data16
fldt
pop
les
jmp
jns
clc
pop
in
dec
aam
fdivrl
xor
popf
cs
mov
push
jae
jg
xlat
inc
sbb
jg
cmp
jg
dec
arpl
jle
fnstcw
fisubl
cmp
dec
clc
jg
jmp
jp
jl
jl
aad
mov
rcr
cltd
mov
fnstsw
aaa
cmpsl
movsl
decl
sbb
pushf
mov
xor
lret
fsubr
push
pop
test
nop
pop
je
xor
sbb
dec
push
add
pop
call
ljmp
xor
dec
ficompl
add
and
jecxz
ljmp
in
mov
daa
adc
fucomip
cs
lea
xor
push
enter
ljmp
xchg
in
pushl
add
and
aam
imul
add
cmp
lcall
jmp
test
sbb
and
les
push
xor
je
mov
fldenv
stc
orl
dec
add
lock
cmp
fistl
incl
movsl
xlat
push
out
leave
lock
sbb
in
call
jecxz
push
out
ds
fmull
cmp
add
pop
lahf
sub
cmc
or
insb
movsl
xchg
pushf
mov
lock
cmp
cmpsb
into
sub
and
cld
decl
arpl
popa
ja
out
xor
scas
enter
test
dec
inc
mov
outsl
lock
add
xchg
dec
mov
mov
dec
and
shl
in
out
decl
cld
pop
cwtl
loope
pop
push
iret
sub
mov
xchg
je
cmp
jle
incl
lock
ds
xor
cmpb
dec
stc
cmp
inc
loope
xor
shlb
insl
push
xchg
fwait
add
jno
outsl
shr
push
push
sub
lcall
inc
notl
jbe
pushf
cwtl
arpl
push
push
js
sbbb
add
xchg
mov
jecxz
das
inc
xor
jmp
cmp
lret
push
xor
fs
inc
ja
and
push
stos
aaa
leave
push
mov
xchg
sbb
adc
lea
popa
push
scas
incl
or
fisubrl
inc
and
jno
test
das
hlt
ljmp
dec
subl
adc
mov
outsb
dec
das
scas
mov
incl
bound
stos
cmp
je
nop
push
pop
call
or
dec
and
ret
jp
icebp
aaa
incb
cmc
out
enter
mov
push
leave
or
mov
lods
in
cmp
out
jnp
xorb
mov
push
jns
jg
jmp
dec
xor
adc
sbb
inc
xchg
add
pop
push
lea
and
adc
ljmp
cmp
jae
cs
mov
out
xchg
mov
push
push
loop
js
inc
mov
jge
push
dec
mov
inc
aaa
jb
cmp
lret
mov
mov
loop
mov
mov
mov
fnstsw
jl
notb
xchg
xor
sti
lret
stos
mov
pop
mov
xor
pushl
and
aaa
sbbl
ljmp
sbb
loope
stc
dec
cmp
push
andb
jl
inc
mov
cli
cli
inc
jne
insb
mov
movb
leave
es
xchg
add
hlt
inc
lcall
sbb
gs
push
cmp
or
das
imul
xor
push
push
notl
add
pop
add
lcall
jge
sub
dec
sbb
pop
cli
cmp
push
mov
and
movsl
add
fsubrp
xchg
aas
dec
jge
xchg
inc
in
hlt
and
mov
aas
sub
outsb
xchg
pandn
jg
inc
mov
ljmp
pop
shlb
inc
mov
adc
dec
std
mov
clc
jmp
mov
push
push
xor
into
sti
push
fstpl
push
aas
pop
std
mov
jl
leave
into
sub
add
sbb
pop
mov
cwtl
call
mov
data16
mov
dec
mov
sar
inc
xchg
push
add
inc
cmp
int3
jmp
and
cmp
jnp
arpl
cmpb
out
and
jmp
sarb
loop
rclb
push
mov
cmp
mov
cmp
inc
cmc
and
xor
push
mov
sub
test
push
xchg
call
fdivrs
xor
dec
jmp
mov
fs
inc
ret
inc
iret
mov
push
ret
out
mov
aad
mov
cmpb
fucomip
call
jne
inc
mov
pop
cmp
xchg
int
dec
mov
outsl
notl
mov
fistpl
and
xchg
test
inc
push
ja
test
je
sbbl
xor
push
dec
call
decl
cli
adc
sub
and
mov
decl
mov
pop
pop
jns
test
push
pop
jo
pop
xchg
popa
jg
pop
adc
call
dec
xorl
outsb
mov
vunpckhps
add
cmp
pushl
or
ret
fwait
dec
adc
sbb
push
rolb
je
aad
cli
dec
std
sti
push
scas
xchg
pop
repnz
loop
clc
ljmp
ljmp
icebp
xor
adc
in
leave
cmpsl
mov
fdivl
mov
sar
push
add
inc
sub
inc
fcoml
cmp
mov
ds
jecxz
in
inc
or
push
sbb
jl
call
divb
in
fcomps
out
aas
popa
testl
lock
push
ljmp
daa
pop
sti
adc
je
mov
inc
cwtl
or
fcmovb
xor
cmc
movsb
enter
fadds
fildl
inc
dec
mov
int
popf
inc
mov
dec
call
cmp
add
jmp
adc
negl
call
ja
out
cmpsl
dec
int3
and
in
and
jbe
mov
movsl
mov
out
sbb
test
push
subb
mov
ret
test
lret
xchg
inc
and
sbbb
decl
xor
add
gs
clc
push
call
xorl
lcall
add
mov
cmp
dec
popl
jecxz
xchg
sub
mov
fwait
dec
xchg
cmp
repz
dec
push
repnz
int
jne
lea
mov
test
hlt
incl
sub
lea
inc
inc
adc
push
cwtl
out
int
pop
jge
jmp
test
pop
jecxz
sti
mov
inc
or
pop
jno
jg
add
sub
and
jb
jmp
fistps
jecxz
xchg
cmp
into
inc
stos
mov
pop
hlt
push
fnstsw
mov
movsb
xchg
pop
and
loopne
mov
std
out
cmp
hlt
push
jne
arpl
ret
mov
stos
push
push
addr16
xchg
push
mov
add
je
out
and
mov
call
jmp
cmp
mov
jne
decl
push
repz
iret
stos
pop
hlt
std
cmp
je
mov
pop
and
out
mov
fists
call
scas
scas
and
fld
insl
push
pushf
cmpsb
cmp
dec
and
sbb
pop
mov
dec
lods
incl
push
dec
movsb
fidivrs
test
sbbb
leave
jnp
sbb
jns
dec
mov
adcl
out
push
fbstp
pop
mov
pushl
or
out
pusha
in
das
cld
lea
and
les
fdivr
lcall
xchg
mov
jns
push
jmp
mov
bound
jae
inc
js
ror
dec
popf
js
fucomip
add
out
mov
loop
iret
or
rcll
or
inc
pop
or
pusha
incl
nop
jbe
push
jno
out
nop
pop
hlt
or
pop
mov
aam
pop
jmp
call
add
xchg
push
dec
pusha
pusha
pop
jae
sti
inc
dec
xor
pushl
mov
imul
ret
pop
mov
fsubl
mov
aam
out
push
leave
stos
es
cld
loopne
orl
mov
cwtl
scas
cmp
and
and
mov
addl
push
dec
jnp
call
jl
cmpb
mov
mov
mov
fadd
loop
xor
test
call
data16
mov
movsl
mov
flds
insb
pusha
xchg
jmp
int3
jo
mov
not
mov
dec
mov
push
jmp
scas
pop
fdivrl
loop
call
push
fwait
and
enter
and
call
das
mov
filds
stc
lds
daa
mov
add
pop
cmp
xchg
lock
aam
cld
jmp
call
mov
pop
scas
outsl
mov
mov
lcall
jmp
mov
mov
outsl
ljmp
sub
jp
or
mov
aas
push
cmc
add
shrl
fmuls
aad
outsl
push
mov
push
int3
mov
incl
mov
sti
loopne
incl
mov
xor
aam
movsl
cmp
adc
mov
clc
loope
dec
aam
push
jb
sarl
jmp
inc
or
and
dec
dec
fsubrl
dec
jge
mov
incl
push
jmp
aam
xchg
adc
fs
mov
ficoms
add
cmp
cmp
sbb
pop
shll
sub
jl
inc
pop
in
and
xchg
decl
fnstsw
sbb
cld
push
pop
pop
out
xor
ljmp
inc
insl
int3
adc
aas
in
addr16
pusha
adc
or
aam
jmp
jmp
loope
xchg
arpl
int3
dec
imul
cwtl
mov
sub
pop
inc
push
push
cmp
mov
inc
ljmp
push
jne
into
push
scas
pop
xchg
pop
clc
pop
push
movsb
lret
sar
push
sub
push
push
adc
xlat
cmp
scas
push
rcrb
call
ds
aaa
cmpsb
bound
jecxz
pop
lret
inc
sbb
fisttps
mov
sbb
add
push
xchg
lods
scas
mov
lock
sub
mov
outsl
sub
mov
inc
jae
dec
adc
pop
jl
xor
mov
jg
ljmp
cmp
xchg
and
or
sub
sbb
and
popa
fisttpl
ds
mov
fdivr
dec
pop
cmp
cmc
cmp
and
ljmp
ljmp
addr16
push
stc
pop
sbb
mov
aad
mov
mov
dec
test
sbb
inc
xchg
decl
cmc
fiadds
jp
add
pushf
jp
xchg
mov
stos
and
sbb
rorb
ljmp
dec
xor
and
call
jmp
test
sarb
xor
push
sub
mov
imul
fstps
mov
xchg
xchg
xchg
mov
cld
decl
pop
sarl
dec
call
jp
popl
decl
insb
aad
pushfw
jge
adc
mov
bound
cmp
mov
xlat
call
xlat
mov
mov
push
test
sub
adc
fyl2xp1
ret
call
clc
fstpt
cmp
sbb
sbb
call
push
dec
jmp
adc
decl
cld
inc
cs
aam
mov
orl
mov
sub
cli
sarb
push
fucomip
cmp
jb
les
push
aas
mov
and
out
jecxz
dec
cmp
lcall
lds
test
mov
push
sti
dec
sub
add
cmp
fistps
fcmovb
cs
and
nop
call
aas
pushf
pop
add
inc
es
lcall
xchg
mov
enter
outsb
adc
nop
clc
cli
ljmp
xchg
cmp
pushl
pop
out
mov
ds
cmp
adc
cmp
add
jp
mov
sbb
jmp
aas
pop
scas
shlb
cmp
add
add
sar
sbb
or
xchg
aaa
mov
xchg
xchg
addr16
inc
test
cmp
jp
push
cli
jnp
movsb
push
add
mov
pop
call
cli
or
sub
mov
dec
pop
add
mov
mov
and
call
fisttpl
add
sbb
pop
sub
jo
jo
sbb
cmp
insl
ja
outsb
cmc
jmp
not
cmp
icebp
mov
inc
lret
bound
mov
mov
xchg
es
les
mov
lds
das
push
pop
cmp
in
pop
call
sbbl
xor
mov
cli
in
dec
lahf
dec
ss
inc
into
xor
pop
in
jle
push
and
clc
push
push
or
das
aam
mov
into
nop
cltd
sarb
aam
add
lcall
sub
fwait
jge
adc
push
jge
adc
xor
ud0
jmp
sub
add
mov
jnp
push
rcll
into
inc
rorl
int
cld
mov
jl
clc
ljmp
push
call
mov
inc
sbb
shr
mov
pushl
mov
mov
cmp
push
add
in
icebp
jle
inc
cld
aaa
incl
std
push
jecxz
pop
cmp
mov
gs
ss
fsubrs
mov
mov
mov
mov
cmpsb
and
loop
movsb
pusha
add
pop
bound
cld
jl
mov
pusha
push
arpl
push
les
jg
mov
adc
out
js
adc
or
and
push
inc
outsl
push
jecxz
dec
incl
xchg
andb
pop
lahf
push
adc
jne
jnp
add
xchg
and
das
loopne
aam
sub
fsubrs
pop
loop
inc
xchg
fwait
sbb
aaa
or
sub
es
fsubr
dec
sub
aam
ljmp
fdivs
imulb
inc
xor
fcoml
int3
jge
xor
outsl
cld
lcall
push
inc
sbbl
cmp
push
mov
lock
outsl
lcall
pushf
xor
sbb
orb
adc
and
out
jnp
out
pop
mov
add
push
das
cwtl
lds
dec
push
push
lods
dec
ljmp
mov
pusha
aas
mov
sbb
aam
dec
mov
daa
inc
sub
ljmp
popa
into
xchg
push
xchg
push
mov
sahf
jle
adc
jmp
mov
cmpb
notl
mov
add
xchg
cli
aaa
pop
cli
or
repnz
pushl
in
cmpsb
pop
rcrl
cmp
push
xchg
xchg
xor
rcr
rcll
les
or
mov
nop
mov
mov
call
hlt
or
call
rclb
shlb
inc
cmp
cmovl
ljmp
push
mov
mov
in
lea
sbbl
xor
sbb
inc
daa
pop
jbe
add
js
or
sub
pop
xor
fs
sub
inc
mov
out
xor
pushl
and
add
daa
mov
ret
rorb
aaa
in
in
pop
call
jbe
lahf
jp
mov
std
les
aas
and
out
or
mov
lods
adc
rol
lret
insl
es
dec
out
xchg
push
jg
inc
dec
xchg
pop
data16
sbb
mov
add
push
mov
push
jp
inc
call
dec
adc
decb
dec
mov
fidivrl
cs
xchg
inc
jge
aaa
cli
push
mov
loop
jne
ss
sbb
scas
in
inc
hlt
xchg
cmp
dec
std
ljmp
sub
test
add
dec
pop
inc
sbb
pop
sar
push
sahf
inc
add
shrl
inc
iret
sub
add
aad
dec
push
or
jnp
loop
rcrb
and
fucomip
inc
ficomps
hlt
pop
xchg
jbe
xchg
mov
add
pushl
push
rorl
jle
sarb
jmp
fists
test
sbb
sbb
add
dec
mov
outsl
call
fsubs
std
dec
pop
notb
call
pushf
mov
push
cld
xor
push
pop
jg
sub
or
scas
lcall
pop
jns
pop
jnp
or
js
jge
fsts
roll
mov
int3
popf
pop
push
mov
call
push
cmp
leave
aas
aad
sbb
jle
cltd
mov
pop
pop
pop
inc
mov
and
into
or
mov
jecxz
sub
jl
mov
addb
js
lea
adc
pop
lcall
mov
cmp
dec
xlat
leave
fisttps
mov
rcl
test
inc
in
call
movl
out
addl
mov
cmp
push
adc
stos
jns
sti
inc
or
jns
xor
decl
std
insl
adc
adc
mov
je
mov
sub
mov
cli
jns
mov
bound
push
cmpb
add
inc
push
inc
je
add
jmp
fmul
das
in
iret
orb
stc
sub
jns
cmpsb
sbb
cmpsb
cmpsb
or
popf
aaa
cli
dec
decl
pop
cmp
in
outsb
rcrb
dec
gs
cli
shrb
inc
loop
jmp
dec
std
jmp
lods
adc
pop
imul
cmp
stc
cmp
shl
stos
scas
rcrb
andb
in
sub
mov
loopne
shl
jl
add
sbb
xchg
mov
jg
decl
push
into
in
mov
xchg
add
xchg
dec
cld
call
loop
sti
clc
mov
push
xchg
sbb
fdivs
pop
in
sub
std
mov
jo
fmul
mov
out
push
xlat
fwait
inc
cs
outsl
std
aaa
mov
cmpl
jl
inc
add
leave
sub
mov
lea
inc
ror
and
jp
cmp
pop
imul
lahf
dec
sbb
mov
cmp
sti
popf
xchg
aaa
out
aas
and
push
pop
mov
pop
bound
mov
repnz
xchg
xor
mov
loopne
inc
inc
nop
inc
pop
inc
or
rcrl
ret
push
inc
out
dec
adcb
xchg
outsl
icebp
decl
shll
add
jae
jo
cmc
or
jge
fsubr
loop
call
mov
aaa
sbb
pop
and
lods
rcl
push
adc
xchg
jg
cli
ljmp
gs
jns
xor
js
cmp
push
sbb
je
push
fs
xchg
mov
jecxz
or
gs
fdivs
movb
decl
or
inc
lds
popa
jl
mov
fucomip
jecxz
jp
cli
adc
and
dec
sub
insl
js
ss
lcall
inc
adc
daa
mov
mov
leave
das
sahf
dec
push
ficoml
mov
inc
jp
push
sarb
daa
cltd
mov
cmp
fdivrl
mov
sbb
stc
push
pop
add
outsb
ljmp
jle
and
dec
inc
in
out
lock
loopne
xchg
push
js
fwait
xchg
mov
pushl
in
js
icebp
in
xchg
popf
dec
cmp
loopne
adc
and
push
lcall
imul
push
rorb
sub
aas
mov
fwait
sub
jmp
divps
mov
adc
jmp
cmp
stos
dec
not
dec
mov
mov
adc
ret
loop
aad
andb
scas
jg
xlat
sbb
dec
adc
je
out
jmp
mov
and
fwait
std
xchg
pusha
loop
cmp
sbb
xchg
loop
sbb
jns
adc
imul
mov
jecxz
xchg
popa
inc
mov
cwtl
out
lret
or
incl
pop
cmp
mov
and
jp
and
mov
push
les
decl
sub
lcall
or
sbb
repz
jg
decl
push
and
movsl
scas
loope
adc
jmp
testb
les
and
and
or
and
push
push
pop
mov
mov
dec
sbb
pop
adc
cmp
mov
mov
mov
fadd
jp
incl
jmp
popf
sahf
das
pop
push
pop
shlb
xchg
andl
xchg
mov
nop
fdivrp
lds
xor
leave
fstpl
sbb
pusha
outsl
pop
out
or
mov
dec
sub
cmp
inc
adc
mov
sbb
sbb
push
ljmp
cltd
and
lods
out
repz
push
xor
repnz
sub
loop
lds
jle
pop
dec
mov
loop
mov
xor
jnp
dec
fs
or
cmp
sub
test
mov
mov
xor
cmp
mov
dec
daa
scas
dec
inc
push
call
dec
inc
cld
inc
fsin
js
or
fwait
push
and
insb
popf
sub
adc
call
push
data16
in
sub
out
int3
inc
dec
adc
lcall
add
enter
push
dec
inc
call
dec
cld
mov
ret
fsubl
jb
pavgb
data16
sub
mov
jg
fdiv
push
pop
in
cmc
outsl
inc
mov
push
push
hlt
jae
jnp
outsl
hlt
pushl
arpl
fidivrs
rorb
adc
mov
and
pop
stos
hlt
decl
jnp
xchg
in
mov
inc
mov
sahf
loop
push
push
cs
nop
dec
push
xchg
jnp
xchg
bound
push
cli
ljmp
dec
sahf
cli
js
and
xchg
test
dec
cmpsb
pop
nop
inc
push
loop
xchg
popf
mov
je
test
lods
data16
jg
test
adc
sub
mov
inc
fsub
xor
aas
and
test
jb
and
jb
sbb
icebp
cli
and
dec
push
xor
jae
push
loope
cli
push
fstpl
add
cli
pusha
sbb
test
and
mov
cli
shlb
dec
push
jmp
dec
mov
pop
cmp
inc
inc
jp
inc
lret
call
inc
lea
das
pusha
lcall
xlat
movsb
dec
xchg
sub
shl
and
loop
mov
dec
jle
pop
in
sub
ljmp
clc
loopne
xchg
push
cld
cmpsb
add
mov
jp
xchg
jnp
jnp
cwtl
bound
sbb
jge
int
jmp
repnz
cmp
dec
inc
pop
inc
jae
dec
push
sti
pop
pushl
sbbl
push
cli
je
jl
test
orb
loope
incl
mov
ds
lods
mov
jae
inc
repnz
daa
outsl
adc
jg
sub
rolb
pushf
sub
jg
decl
insb
mov
mov
sub
js
inc
loopne
insb
in
mov
lods
jge
pop
mov
fs
inc
cwtl
mov
mov
cmp
jle
mov
insl
hlt
fmul
cmpsb
leave
jle
sub
sbb
inc
movsl
push
hlt
or
cld
cmpsl
inc
outsl
hlt
call
dec
aad
push
pop
mov
mov
inc
cld
push
mov
adc
add
outsl
in
call
inc
xor
loop
es
shll
cld
sub
nop
aaa
jle
pushl
movsb
int3
jnp
shrb
dec
mov
add
aad
pop
cld
ljmp
mov
inc
adc
inc
fs
scas
mov
rolb
loop
mov
sub
dec
xchg
inc
inc
xchg
lret
adc
lret
dec
pop
imul
mov
ljmp
je
push
pushl
xchg
loopne
add
loopne
ja
cmp
mov
loop
ljmp
mov
sub
in
mov
cli
sbb
push
sbb
xchg
dec
sarl
push
pop
jno
lret
xor
mov
pop
push
pop
std
fcomip
dec
xchg
test
divl
ss
call
lcall
ljmp
push
addr16
lods
pop
mov
sbbb
push
push
pop
insb
inc
jecxz
loope
pushl
jo
push
push
insl
inc
das
jnp
push
stos
neg
mov
inc
mov
xchg
divb
cltd
jno
or
add
ja
cmp
pop
call
dec
add
mov
push
dec
lds
xor
mov
into
lret
rclb
aas
pop
repnz
lcall
int
cmp
sahf
add
mov
out
sbb
push
cmpsl
stos
popf
inc
push
mov
int
test
inc
sub
decl
sub
cmp
mov
xchg
sub
xor
call
adc
inc
sub
je
loope
adc
xchg
pop
jecxz
pop
mov
ljmp
inc
jo,pt
adc
jl
orl
fiadds
outsl
adc
lcall
decl
out
dec
jl
cmp
lea
adc
push
sub
xor
add
xor
add
jg
test
aas
ja
dec
push
adc
notrack
fistpll
in
sbb
push
aaa
mov
mov
push
dec
or
je
xchg
dec
pop
popa
scas
cmc
jp
fildll
shr
add
xor
dec
xchg
push
push
lock
jg
ljmp
rcrl
lret
movb
sub
add
and
call
incl
loop
sub
into
cmp
xchg
sub
addr16
pop
push
xchg
inc
mov
inc
mov
cmp
decl
outsb
aaa
cmpsl
loop
call
mov
decl
mov
mov
inc
loopne
jns
pop
test
pushl
lcall
xlat
jg
cmc
pop
gs
pop
pop
dec
in
jp
and
ret
lods
and
jns
call
pop
cld
and
or
push
adc
cli
das
icebp
dec
test
xchg
hlt
dec
jp
pop
xorl
arpl
andl
cmp
push
push
call
and
sbb
dec
shr
repnz
jne
fdivp
adc
out
push
push
les
aad
hlt
imul
push
mov
test
inc
push
fwait
mov
push
in
insl
jg
push
call
out
jge
fcompl
mov
add
xchg
loope
pop
mov
pop
sbb
xor
clc
fwait
push
cli
loopne
dec
std
aaa
jg
lcall
add
mov
inc
std
cmp
pop
pop
adc
inc
ret
mov
je
pop
xor
sbb
cmp
pop
xor
shrl
adc
decl
cmc
adc
adc
out
orb
pop
lret
mov
cld
cli
jmp
mov
add
lcall
fmull
and
fcmovnb
pop
loop
mov
inc
or
scas
into
aad
jecxz
mov
cmp
lret
add
sbb
push
pusha
jbe
andb
in
and
in
lret
pushl
pop
xor
addr16
fcoml
into
sar
push
mov
outsb
pop
call
jg
loopne
mov
push
nop
pop
int
mov
loop
call
test
mov
pop
push
cltd
mov
fucomip
pop
cli
xor
call
mov
cmp
ljmp
mov
js
pop
xchg
mov
sbb
pushl
cmp
dec
std
lret
push
adc
enter
pushl
and
lea
mov
add
pop
jo
pushl
cli
mov
and
ss
out
pop
inc
pushf
jg
imul
cli
outsl
dec
jmp
sub
enter
test
ret
mov
xor
sbb
arpl
mov
cmp
sbbb
jmp
gs
push
cli
testl
jns
adc
loope
adc
inc
jmp
pop
mov
pop
ret
clc
inc
pop
mov
loop
sahf
add
into
adc
adc
xchg
or
jp
mov
xor
fisttpl
sub
lods
ds
sub
push
clc
jg
sub
and
out
pause
scas
add
pop
adc
cmp
pop
and
pop
adc
mov
jecxz
clc
sub
and
pop
push
inc
adc
or
sub
ret
mov
iret
mov
jbe
mov
test
jno
cmp
out
push
fadds
jge
dec
xor
cwtl
sbb
jmp
and
push
aad
mov
push
push
sbb
add
jg
cmp
add
dec
in
test
sub
jecxz
cmp
jmp
sti
call
cmp
daa
push
pusha
out
push
xchg
sbbl
mov
test
dec
pushf
std
movsb
pop
dec
test
jmp
push
icebp
lds
xor
adc
les
sub
and
mov
adc
lock
or
movsl
sub
push
into
push
inc
ds
es
mov
push
sbb
inc
sbb
and
out
cmp
cmp
or
push
xor
js
idiv
lcall
out
and
in
add
cmp
mov
arpl
push
mov
inc
mov
ljmp
jle
clc
cld
xlat
test
stos
push
insl
jg
pushl
pop
dec
xor
jmp
push
ret
fwait
js,pt
or
aad
mov
daa
push
pop
mov
mov
enter
lcall
das
fisubrs
push
mov
mov
push
xlat
movsb
push
sub
add
xchg
mov
fdivrs
das
push
fstl
pop
push
push
aas
stos
pop
cwtl
mov
xor
xor
inc
or
int
push
mov
mov
popa
mov
dec
pop
fdivrs
ljmp
shlb
out
stos
or
shl
js
aas
sub
fisubrs
sbb
adc
arpl
pop
lcall
sub
outsb
out
enter
pop
xchg
push
jns
xor
jecxz
incl
push
lcall
push
adcb
fwait
sub
xchg
jg
call
data16
inc
mov
lret
shrl
fs
sbb
push
xor
int3
push
inc
std
pop
or
adc
leave
outsb
cmpsb
add
leave
sub
ljmp
nop
je
dec
mov
push
lahf
nop
push
add
dec
aaa
jbe
xchg
out
movb
mov
int
mov
and
int3
inc
inc
push
sbb
inc
push
xor
pop
push
mov
and
out
adc
cmp
or
movsl
clc
mov
andb
xlat
or
xchg
adc
insb
sub
and
inc
outsl
xor
leave
xchg
cmp
jmp
decl
mov
andb
pop
incb
mov
rcll
sbb
daa
mov
cmpsb
push
sbb
mov
mov
in
movsb
sub
pop
adc
xor
inc
xor
inc
stos
clc
lcall
mov
ss
push
xchg
ret
cld
mov
cmp
inc
iret
jp
push
outsl
sub
ret
mov
mov
ljmp
xor
xor
add
inc
mov
pop
loop
dec
mov
ss
outsb
sbb
ljmp
leave
push
xor
mov
mov
xor
xor
call
ret
inc
cmp
add
inc
fnstcw
sbb
sbb
dec
test
fildl
clc
cmp
or
add
adc
mov
out
movsl
sbb
js
mov
push
dec
cmpb
push
fiaddl
arpl
xor
dec
test
jne
push
cmp
adcl
mov
pop
add
popa
or
push
cmpb
dec
lea
loope
repz
pop
pop
mov
call
lds
add
shlb
repnz
xchg
pop
and
cmp
xor
ljmp
clc
mov
dec
jmp
mov
sbb
loop
cld
inc
aas
cmp
lcall
inc
mov
xchg
mov
pushl
mov
out
and
aas
cmpsl
dec
call
or
mov
negl
test
and
pop
jns
push
xchg
xchg
out
idivb
adc
cmpsl
mov
inc
sub
sar
jmp
sti
pop
push
lahf
jnp
add
mov
cmpl
arpl
fsin
mov
pushl
cmpsb
sub
xor
inc
jo
fwait
movsl
pop
arpl
loope
aaa
pop
jg
jbe
nop
mov
gs
cmp
decl
in
inc
test
orl
out
fildll
jbe
inc
es
mov
test
dec
jl
pop
mov
mov
fwait
pop
aas
in
sarb
inc
xor
pop
pop
cmp
je
add
popf
incl
rolb
sub
fcoms
or
loop
push
pusha
xor
cwtl
loopne
xchg
xchg
jmp
shr
incl
pushf
sub
adc
scas
mov
mov
sbb
cmpl
sub
cmp
gs
jecxz
pop
jne
xchg
mov
lods
addr16
ljmp
mov
jb
xor
pop
hlt
imul
cmp
adc
push
loop
xchg
out
lock
lcall
mov
dec
fs
adc
inc
nop
cmp
std
push
jecxz
dec
sbb
loopne
push
adc
mov
loop
adcl
xchg
push
sbb
mov
push
jge
sub
dec
lds
cmp
fldl
sub
dec
jmp
adc
int
xchg
mov
aad
test
aas
fwait
add
pop
call
or
dec
addb
daa
fistps
sbb
lcall
add
test
je
faddl
js
adc
xchg
vmread
mov
fildll
iret
cmp
xlat
push
or
and
mov
leave
repnz
sub
dec
jge
lret
in
decl
mov
das
pop
insl
sbb
fs
iret
xchg
mov
inc
je
pop
cli
call
pop
xchg
pop
popa
push
mov
mov
adc
adc
sbb
call
pushf
aam
jbe
cmp
gs
cmp
add
dec
sub
mov
sub
mov
jl
pusha
mov
inc
and
rorb
pop
aam
push
cwtl
mov
call
sbb
call
mov
pop
mov
ljmp
push
mov
cmp
inc
push
lret
sbb
and
mov
movsl
arpl
push
push
lcall
mov
push
fucomi
sub
dec
inc
xchg
je
push
mov
in
mov
dec
or
inc
call
adc
mov
push
not
decl
pop
sbb
push
pop
enter
mov
add
push
xor
mov
aad
xorl
shll
cld
ljmp
cmp
test
push
pop
das
sub
sbb
mov
mov
lcall
jmp
popa
xchg
add
stc
lods
data16
outsl
cmp
fisttpll
adc
mov
stc
les
adcl
movsl
stos
jecxz
ds
lcall
insb
cld
xchg
jl
push
adc
fsubrs
je
xlat
adc
or
inc
mov
in
dec
mov
scas
in
rcl
push
push
mov
jg
decl
test
stc
mov
xor
xor
sar
mov
lds
and
mov
push
lret
mov
jge
push
mov
das
mov
decl
fldenv
pmaxsw
mov
pop
insb
inc
or
shl
test
ficoms
xchg
xchg
into
mov
inc
or
ds
push
xchg
fstpl
inc
lods
jg
int3
mov
mov
inc
or
dec
jecxz
push
std
pop
cld
lcall
std
adc
mov
xlat
imul
ret
call
icebp
mov
mov
insl
lock
xchg
xor
pop
inc
sbb
out
popf
xchg
call
les
loopne
inc
cli
aaa
inc
movsl
or
or
xchg
add
nop
incl
pop
ljmp
enter
es
mov
notl
jg
decl
mov
aad
loope
xchg
pop
ret
sbb
pop
call
xor
hlt
clc
pop
call
in
loopne
test
in
adc
inc
clc
xchg
test
call
arpl
ss
mov
dec
jnp
push
addl
push
decl
jne
jns
fadd
cmc
mov
loope
inc
jae
jle
dec
cmc
jg
ljmp
pop
mov
scas
and
cmc
sbb
movsl
decl
or
pop
dec
pop
fstpl
jmp
adc
mov
or
sti
call
les
ror
lahf
movsl
insb
jl
jno
test
jg
aaa
cmpb
push
aaa
push
sbb
notl
jg
and
in
gs
add
dec
arpl
stos
mov
mov
jmp
fstl
stos
jae
cmp
outsb
jne
cmp
adc
dec
adc
cmp
pop
ljmp
cs
xor
ja
mov
mov
xor
roll
sbb
loope
loop
popa
push
xchg
movsb
das
xor
sub
xor
sbb
ds
inc
mov
push
adc
and
push
dec
or
push
aam
cld
adc
shl
adcl
ljmp
cmp
inc
xchg
xchg
jg
incl
sbb
in
int
dec
or
pop
test
add
jmp
and
add
cmp
out
sbb
and
xchg
jnp
inc
dec
popf
pop
jle
test
hlt
decl
out
inc
dec
jle
adc
cmp
aam
test
sub
pop
cli
out
sahf
lods
sahf
inc
movsl
jbe
inc
inc
mov
pusha
add
incl
xchg
add
repz
bound
aad
test
rol
push
mov
test
mov
popa
jle
cli
sub
popf
fmull
pop
inc
je
out
mov
adc
add
mov
mov
cmc
test
xchg
cltd
ljmp
and
jg
clc
push
sbb
push
lcall
xchg
pop
mov
std
xchg
mull
lcall
loop
pop
sbb
in
sub
mov
inc
imul
inc
pop
addr16
inc
repz
and
pop
call
in
sub
sub
push
fisubs
cmpb
dec
std
incl
adc
repnz
mov
ljmp
pushl
and
ror
pop
pop
sub
sub
push
xlat
mov
lock
cmp
idiv
call
out
ret
jmp
mov
call
repz
push
cli
mov
inc
sub
rcrb
sahf
push
jl
ljmp
loope
aam
jle
inc
jo
sbb
xchg
fwait
int
sub
sbb
xchg
push
adc
repz
popf
fs
ja
cld
mov
or
cmp
xlat
add
mov
pushl
test
xor
sarl
aas
pop
lods
sbb
call
cmpsb
cmp
xor
add
mov
and
xor
shl
in
decl
jns
push
push
add
dec
push
test
xor
add
mov
and
movsl
popa
dec
or
orps
adc
pop
popf
mov
jo
add
jg
lds
sti
dec
cld
insl
push
shll
sti
mov
push
mov
mov
sbb
mov
jb
mov
call
movsl
inc
xchg
fisttpll
xchg
dec
and
jg
push
add
cli
jbe
sbb
js
add
mov
orl
sbb
or
cs
jg
popa
push
ret
scas
jmp
xchg
mov
call
call
jmp
mov
xor
push
pop
inc
and
pop
cli
stos
xchg
mov
and
sti
mov
test
int3
jl
dec
dec
mov
ljmp
lea
push
add
out
jbe
dec
sbb
pop
add
inc
xchg
sub
das
std
jmp
aam
jmp
loop
xchg
pop
mov
cmp
jg
mov
ja
mov
gs
mov
test
push
outsl
cmp
push
inc
ret
dec
dec
push
call
adc
jg
xor
push
or
add
or
and
and
call
loopne
and
popf
mov
lds
sbb
das
cmc
push
das
jno
arpl
loopne
mov
mov
das
imul
add
andb
xchg
pop
mov
mov
call
push
lods
push
pop
stos
push
call
mov
push
enter
movsb
gs
mov
je
aad
jmp
mov
movsb
mov
mov
jmp
mov
rcl
sahf
jecxz
stos
push
cmp
sub
mov
loop
xchg
int3
arpl
outsl
lock
lcall
and
ret
adcl
sub
popf
les
in
call
pushl
repz
adc
leave
jmp
inc
dec
call
aas
mov
cld
decl
push
xchg
or
adc
xchg
cmp
jmp
or
mov
fisubs
sub
mov
decl
cmp
or
cmc
sbb
push
dec
and
push
negl
cmp
adc
inc
imul
fwait
push
add
pop
aad
addr16
add
mov
push
mov
pushl
clc
mov
adc
jl
insb
xor
dec
lcall
adc
adc
push
in
push
pop
das
push
ja
pusha
mov
outsb
xlat
je
in
or
jb
nop
sbb
fimull
push
cmp
sti
lods
pop
imul
push
cwtl
pop
mov
andb
jg
cltd
pop
cmp
dec
mov
popf
mov
lret
dec
cld
mov
sub
push
out
or
out
test
mov
fwait
jl
int
mov
lcall
je
mov
pop
mov
pop
int
divb
pop
ljmp
movsb
pop
inc
mov
xor
xchg
dec
add
mov
out
clc
arpl
mov
aam
pop
in
adc
sub
pop
js
adc
pop
loopne
jmp
mov
or
dec
adc
mov
inc
add
leave
fidivl
sub
push
sarl
movsl
decl
nop
rorl
jmp
jp
test
mov
jge
loop
add
lret
loop
push
or
jle
addr16
dec
imul
xor
decl
xchg
je
in
jo
lret
call
dec
dec
pusha
mov
fdivr
dec
leave
jl
pusha
sub
dec
scas
and
jg
dec
popf
cs
sbbl
dec
pop
sub
inc
popa
mov
mov
add
js
popa
mov
push
std
mov
mov
or
pushl
sti
and
adc
sub
das
scas
xor
push
cld
pop
cli
inc
les
pop
mov
inc
xchg
adc
add
sub
enter
add
hlt
incl
shrb
jp
scas
xchg
repnz
out
cs
or
ljmp
icebp
outsl
dec
testb
popf
rcr
addl
lcall
pop
mov
cmp
dec
ljmp
jne
jnp
cli
add
pop
sub
xchg
js
or
dec
int3
mov
out
rcrb
call
lods
outsb
es
and
mov
lds
out
test
dec
add
adc
das
or
popf
shrb
rol
into
or
ret
ret
sub
cmpsl
or
jmp
jne
and
xchg
loopne
dec
add
stc
icebp
outsl
sub
loop
pop
cmp
push
arpl
in
out
xchg
sub
add
imul
xchg
out
test
movsb
loop
outsl
icebp
sbb
pop
out
mov
ret
jecxz
mov
mov
push
sub
imul
decl
pop
inc
sub
sbb
add
jge
add
cmp
stc
lds
sub
sub
ja
fcomi
ja
gs
jge
dec
and
pop
dec
or
mov
mov
incl
cmc
mov
sub
pop
stos
movsb
or
mov
ja
out
xor
add
xchg
push
dec
es
icebp
or
repz
ljmp
cs
cwtl
add
push
lret
mov
out
push
stos
cwtl
jle
cltd
fucomip
incl
out
test
mov
cmp
inc
mov
mov
sub
mov
int3
pop
sbb
sub
adc
and
dec
and
lds
out
sub
loopne
addb
ljmp
ret
repz
dec
dec
sub
push
icebp
xor
push
push
out
std
lcall
daa
js
push
lret
dec
int3
fisttpll
sbb
sub
cmp
cmp
addb
inc
andl
and
dec
and
cld
add
push
mov
decl
scas
popa
dec
sub
cmp
ljmp
pop
or
rcrb
mov
adc
call
mov
jo
fcoms
push
test
sub
jmp
sbb
lea
ror
popa
add
xchg
inc
push
xor
call
call
fcmovnu
outsb
sahf
mov
mov
call
fstpl
filds
cli
mov
xor
add
clc
add
call
xor
dec
aaa
cmp
adc
mov
sahf
aad
cli
loope
add
sarb
loopne
sbb
popf
and
push
cmp
jecxz
xchg
cmpsl
mov
mov
pop
daa
int
call
hlt
aaa
loop
cli
sub
mov
daa
testl
call
push
div
pop
or
scas
jns
fadd
mov
mov
das
cld
mov
gs
pop
adc
in
call
push
fidivrs
ljmp
lahf
scas
sub
fdiv
lcall
xchg
mov
mov
xor
insb
fiadds
pop
or
xchg
inc
ret
paddsw
cmp
or
stos
mov
mov
jae
call
mov
in
adc
les
or
xor
lods
xor
into
lret
int3
and
scas
adcl
imull
mov
jp
and
lret
loopne
mov
rclb
sub
pop
divl
fdivr
iret
vucomisd
nop
js
lds
cmc
sahf
ror
aas
aam
adc
icebp
and
xchg
std
xor
call
stos
cld
cs
push
shrl
decl
dec
lods
sahf
push
adc
push
or
add
inc
push
xor
aaa
incb
sbb
adc
adcl
testb
push
fistl
repnz
jl
mov
xchg
shlb
clc
jnp
roll
cmpsb
shrl
xchg
pusha
arpl
mov
xchg
clc
jp
mov
aas
and
ss
subb
cmp
jmp
daa
fisubl
push
mov
fwait
cmp
cmp
cmc
lods
xchg
ljmp
sar
pushl
add
sbb
pop
push
bound
and
inc
mov
mov
jl
inc
fs
xchg
jns
in
dec
leave
jns
or
lea
nop
mov
adc
push
iret
loope
cmp
call
and
popa
jmp
loopne
mov
or
mov
fwait
ljmp
jne
loope
test
lds
loopne
fcmovb
adc
sub
xchg
pop
lret
je
xor
lahf
or
push
add
loop
aaa
ljmp
cltd
xor
lahf
dec
cmp
std
sahf
fstpt
mov
call
xor
inc
mov
mov
jp
and
and
mov
xchg
push
cli
loop
xor
add
xor
mov
add
pop
loopne
mov
xchg
adc
mov
pop
lret
icebp
inc
push
mov
aam
cmp
dec
xor
xchg
push
add
sub
scas
enter
cwtl
fistpll
stc
mov
decl
cwtl
jns
repz
mov
addr16
jmp
inc
pushf
lret
rcrb
jmp
or
test
loop
pop
push
adc
sbb
mov
shl
repnz
xor
addr16
mov
ds
and
jmp
lcall
mov
aaa
lea
add
push
pop
inc
aaa
adc
pop
pop
movsl
loopne
inc
mov
mov
inc
mov
pop
mov
out
or
test
cmp
loopne
xchg
das
cmc
lcall
loop
push
mov
cmp
sbb
and
mov
pop
and
js
ds
out
jge
inc
mov
ret
pop
and
int3
cmp
fbstp
into
sub
jmp
int
adc
mov
ret
add
sbb
push
adc
icebp
jnp
and
mov
adc
lea
xchg
sub
inc
es
push
pop
mov
rcr
adc
lret
lea
xor
mov
mov
stc
jp
stc
xor
add
std
ret
push
fdivrl
mov
andb
jl
incl
xor
lret
scas
mov
sahf
clc
rorl
out
in
clc
call
rcll
cmp
inc
or
sbb
or
or
mov
pushl
loopne
pop
jb
dec
lea
pop
loop
in
cmp
pusha
rorl
adc
jmp
jmp
loopne
decl
or
cmp
jae
mov
cmp
cld
jg
jmp
ljmp
pop
sbb
jae
ja
test
add
lock
dec
sbbb
jmp
dec
jg
xchg
imul
jbe
cmp
mov
mov
mov
inc
mov
clc
ret
rcrb
jl
cmp
or
or
push
dec
std
mov
push
and
cmp
lcall
shl
dec
cmp
mov
in
shl
lods
jmp
xchg
jle
je
out
loop
cmp
lret
dec
adc
outsb
add
push
pop
xor
mov
call
lcall
movb
jmp
cmc
test
add
xor
leave
add
incl
xchg
jne
cmp
dec
fnstsw
stos
aad
dec
loop
sbb
mov
sbb
jmp
xor
call
push
and
push
cmp
dec
mov
push
sub
sub
or
sbb
cmp
and
inc
sbb
fcoms
xor
mov
mov
xor
fadd
das
and
sbb
or
les
adc
sbb
shlb
mov
pop
push
pushl
idivl
push
rorl
enter
fdivs
mov
mov
lods
mov
sbb
push
icebp
jns
sbb
adc
pop
push
cmp
push
fildll
lock
mov
pop
scas
xchg
inc
cs
mov
cwtl
pusha
dec
pusha
inc
jle
mov
bound
hlt
mov
jp
loop
cs
jnp
bound
dec
ljmp
inc
push
mov
push
mov
push
xchg
loop
lcall
rcrb
mov
lret
jno
test
adc
dec
pop
pop
fildll
mov
stos
and
lds
lret
dec
mov
push
test
push
add
jl
xchg
cli
call
shl
int
pop
add
pop
psrlq
add
rcrb
xchg
enter
mov
xor
xchg
fnsave
mov
sub
mov
pushl
cwtl
movsb
call
push
sub
and
mov
inc
mov
mov
ret
pop
cmp
maxps
sub
or
adc
push
stos
mov
jg
mov
dec
inc
idivl
push
enter
lock
mov
add
imul
xor
clc
call
stc
rol
pushf
neg
and
test
rcr
enter
ret
iret
dec
rolb
cmc
push
test
xchg
repz
hlt
mov
adc
pop
mov
out
hlt
repz
push
iret
and
incl
xor
loope
push
mov
int3
mov
mov
aam
or
fdivp
adc
jo
andb
std
inc
je
push
divl
js
jno
push
cmpsl
add
sub
int3
jg
lcall
cld
pop
pop
pop
and
cs
add
jae
jle
push
fisubrl
call
rcrl
lcall
mov
bound
shr
sbb
repnz
or
call
clc
xchg
repnz
scas
mov
push
outsl
or
jl
jg
aam
jno
aam
sub
int3
mov
mov
push
je
fadds
mov
data16
xchg
in
mov
or
pop
push
push
dec
lcall
icebp
jnp
mov
mov
xchg
inc
fiadds
mov
mov
cmc
or
ja
mov
leave
push
jbe
scas
or
cli
lock
mov
xlat
call
pushl
push
or
dec
in
push
and
in
fcmove
push
jg
fcomip
add
mov
mov
incb
call
in
shl
ds
cmp
test
lock
mov
and
jae
in
and
arpl
sbb
dec
aam
add
out
test
loope
sbb
mov
xchg
nop
rorl
lds
hlt
xor
lahf
jnp
lret
mov
cmp
adc
xchg
jle
mov
mov
aas
mov
adc
add
incl
ss
in
in
inc
xor
jg
or
cmp
push
cmp
push
mov
sub
inc
or
decl
add
pop
mov
in
mov
lret
and
cmp
add
sahf
imul
cltd
mov
insb
sbb
mov
lds
ljmp
pop
fsubr
dec
cmovne
jg
fistl
dec
push
xchg
lahf
inc
add
pop
inc
cmp
clc
sub
inc
inc
fdivr
xlat
push
out
mov
aaa
mov
shrb
ljmp
fdivrl
inc
idivl
iret
sbb
push
das
push
inc
xchg
in
mov
cld
out
push
aam
into
fidivrs
push
jnp
sub
jle
loopne
in
pushf
aam
loopne
jecxz
jg
adc
in
jbe
dec
test
jmp
add
add
ljmp
xchg
or
push
dec
lret
jmp
jo
aaa
add
aam
ret
xchg
gs
cli
xchg
iret
xor
fdivrs
das
lock
adc
or
mov
nop
in
mov
pop
mov
fs
movsb
ljmp
pop
std
push
popa
test
ss
lcall
or
inc
push
inc
std
adc
or
lcall
inc
xchg
cs
cltd
sarb
loopne
cmp
andb
les
inc
pop
imul
call
int
cmp
incl
mov
mov
inc
lea
stos
test
stos
iret
cmp
fcomps
jmp
scas
jl
lea
jecxz
out
insl
jp
jecxz
aaa
fwait
ljmp
stc
xor
into
scas
lcall
dec
adc
xor
mov
fdivs
or
inc
push
xor
das
lods
dec
xchg
xchg
stos
inc
or
push
jecxz
jl
sarb
jmp
pusha
dec
xchg
add
or
pop
mov
outsl
cld
or
aam
scas
lods
int
push
add
fsubs
jae
push
jg
mov
adc
add
sub
mov
or
test
mov
test
bound
jl
jmp
incl
adc
iret
in
scas
stos
aas
push
jnp
adc
cli
jo
test
pop
lret
mov
imul
shll
cs
ret
movsl
push
mov
les
sub
shll
sbb
adc
movsl
mov
das
out
mov
adc
xor
jecxz
push
pop
dec
das
push
fcompl
dec
sub
jecxz
xchg
lods
leave
popf
jmp
cs
cmp
test
push
jmp
push
fildl
pop
xchg
out
sub
xorb
mov
lcall
sbb
fists
js
fnstcw
ret
scas
in
decl
cld
add
mov
xchg
cmpsl
mov
lock
repz
add
popf
outsl
jg
decl
call
scas
cmpb
sbb
or
jl
cmp
sbb
arpl
pop
cltd
arpl
jp
pop
loop
pop
adc
push
clc
daa
je
mov
loopne
push
xchg
mov
push
stos
cld
das
hlt
dec
jnp
or
push
adc
cmp
test
nop
or
mov
jbe
adc
out
dec
push
cmp
cmp
arpl
push
pop
jb
filds
push
dec
call
je
cmc
or
lods
and
pop
fdivrl
ljmp
sub
filds
add
dec
call
mov
inc
jp
or
fucomip
or
cmpl
stc
pop
pusha
lea
lcall
pop
icebp
pop
loop
pop
movsl
aas
add
clc
jecxz
and
mov
push
scas
pop
jecxz
cld
call
lcall
aas
movsb
sbb
clc
add
mul
dec
andb
cmpl
into
bound
popf
test
gs
test
adc
xchg
inc
xchg
aad
xchg
repnz
pop
dec
test
cmc
decl
add
ret
test
inc
xlat
js
loop
inc
test
inc
jb
sub
test
add
call
ret
or
loop
faddl
dec
add
test
or
mov
cmp
out
or
push
data16
ljmp
xchg
push
or
inc
add
sub
test
decl
dec
xchg
sub
xchg
or
dec
jecxz
cmp
das
hlt
pop
imull
push
cmp
xor
push
xchg
clc
jns
sti
inc
rorb
cli
jmp
shrb
jge
pop
jle
sahf
cmpsb
int
jne
test
pop
loopne
icebp
lea
xchg
cmpsl
jo
push
mov
jnp
jl
out
call
push
call
xchg
repnz
andl
pop
cld
das
icebp
cmpb
lock
mov
mov
cli
jmp
add
rolb
cli
adc
enter
add
loope
ljmp
je
inc
mov
mov
xor
sarb
cld
mov
mov
pop
add
push
push
dec
add
jge
popa
xor
lcall
sti
lret
fcoml
sub
mov
push
sbb
push
add
and
mov
icebp
adc
call
push
ret
loope
idivl
mov
adc
ljmp
int
add
xlat
lahf
xchg
pop
decl
loopne
loop
lahf
mov
xor
add
dec
pop
xchg
push
popf
mov
xchg
dec
push
sbb
mov
xchg
fists
adc
xchg
add
push
and
icebp
lcall
clc
jne
jge
sbb
push
leave
fs
inc
add
enter
out
cmp
cmp
ljmp
adc
and
pusha
sub
sar
neg
pop
pop
incl
test
push
inc
mov
ss
cmp
pop
pop
pop
push
pop
jmp
test
add
mov
ret
mov
mov
insb
mov
popa
aad
adc
push
iret
or
mov
push
insb
adc
test
mov
push
fistpll
and
nop
movsb
add
pop
or
mov
add
movsl
call
push
je
mov
jp
mov
pop
call
clc
aad
or
mov
sti
xchg
mov
into
push
fistpl
fcos
sub
add
adc
pop
ss
lds
test
sbb
sbb
add
lods
inc
mov
lds
vpmaxub
jb
jmp
pop
add
shrb
arpl
add
lock
inc
jg
add
xor
sbb
push
jae
jmp
call
push
outsb
mov
dec
movsb
loope
lea
ljmp
cld
jge
imul
or
into
dec
xchg
xor
pop
cmc
pushl
adc
push
daa
or
sbb
subb
pop
mov
jp
pop
xchg
sub
arpl
mov
dec
bound
and
or
dec
xchg
and
and
ljmp
pushl
mov
cmp
outsl
lahf
mov
pop
xchg
push
rorb
cmp
lea
lock
mov
mov
mov
xchg
mov
inc
and
sub
mov
jmp
std
sub
rcrl
cli
imul
add
das
cld
jg
int
int
enter
adc
addl
mov
repnz
and
ret
stos
jecxz
sub
mov
dec
out
test
loopne
sub
and
out
bound
mov
inc
pop
es
negl
mov
in
xchg
jb
xor
ret
xor
xor
fildll
fisttpl
inc
lods
ret
cld
test
call
inc
dec
out
int
cmp
mov
sti
mov
adc
dec
or
lods
or
mov
int
pop
xor
decl
imul
and
inc
je
add
sbb
fs
jmp
cmc
sub
lret
fnstcw
call
push
push
jge
leave
push
jp
mov
inc
cmc
lock
sub
call
aam
jg
ja
cmp
test
enter
mov
mov
ljmp
ret
popa
xor
dec
inc
test
jle
dec
push
push
call
test
push
sub
mov
icebp
outsl
push
push
call
fucomip
fsubrp
pop
and
jnp
stc
rcll
adc
dec
and
mov
add
arpl
add
aas
or
call
mov
jmp
call
jb
adc
mov
jmp
and
inc
cwtl
push
or
fucomp
shlb
pop
add
inc
mov
sub
adc
rcrb
pop
jne
enter
lea
mov
or
sbb
das
icebp
das
hlt
lock
mov
push
dec
negb
adc
dec
je
decl
lea
jle
adc
inc
ja
push
ljmp
mov
lahf
out
jl
and
xchg
dec
and
mov
call
and
jge
andl
mov
jmp
out
inc
sarl
or
cmp
arpl
and
popa
jbe
sbb
pop
das
cld
mov
pop
shrb
adc
xchg
cli
mov
sbbl
popa
sub
je
cmp
in
xor
mov
pop
scas
cli
mov
inc
mov
jnp
enter
lret
out
jbe
out
sub
or
stc
add
cs
fbld
sbb
loopne
dec
nop
cs
cli
das
mov
notl
jns
pop
sub
dec
mov
js
cmpsl
xchg
add
decl
or
cmc
lods
loope
add
rclb
rcrl
push
call
ljmp
icebp
incl
insb
daa
dec
dec
pop
test
mov
adc
push
mov
xor
lret
xchg
clc
cwtl
or
xchg
mov
mov
mov
pushl
fmuls
jmp
or
in
pop
fdivr
sbbb
outsl
hlt
xchg
xchg
mov
sub
xchg
enter
fnstsw
add
pop
adc
dec
cmp
mov
jns
cmpsb
std
lea
pop
shlb
push
pop
dec
psllw
arpl
pop
das
ljmp
movsl
mov
xor
scas
rolb
ret
or
pusha
inc
jecxz
cli
call
cmp
sbbl
xor
adc
bound
aaa
cli
test
xchg
idiv
cli
cmpsb
popa
popf
pop
imul
call
pop
cmp
inc
dec
dec
push
test
clc
fisubrl
out
lret
or
pop
or
push
rep
sbb
jg
cmp
sub
and
out
add
in
outsl
cld
decl
cmp
dec
push
test
xor
cmp
enter
lods
jmp
out
cmp
push
fdivrl
push
call
cmp
pushf
mov
inc
jl
pop
jbe
inc
call
loope
xor
aas
jnp
pop
imul
leave
jp
or
shrb
lods
mov
and
lret
sbb
dec
stos
ljmp
std
jg
or
cld
test
or
ficoms
sbb
fldl
stos
ljmp
xchg
pop
aad
cmp
popf
mov
mov
nop
pop
popl
xchg
mov
call
ja
jb
out
dec
adc
gs
clc
mov
popa
xchg
pop
fsubp
call
push
adc
mov
jns
dec
or
lcall
adc
cmc
and
xchg
xor
sbb
call
sbb
pusha
ja
jb
jnp
push
pop
xchg
popa
cwtl
sbb
stc
data16
pop
loopne
shlb
xor
repnz
mov
ss
xor
jmp
rclb
dec
sub
aam
cmpsb
cmc
inc
stos
insb
adc
shlb
aas
jb
xchg
adc
int3
cltd
je
decl
push
fstpt
rorb
outsl
ja
popf
test
mov
insl
push
ljmp
mov
jne
add
int
and
ljmp
divl
add
and
sub
or
pop
jg,pn
pusha
inc
rcpps
shr
jmp
ja
lret
call
jle
and
mov
lods
adc
dec
fldl
and
inc
add
jle
push
frstor
mov
xor
jle
pop
push
scas
xlat
mov
call
stos
int
inc
int
mov
xlat
setae
jmp
in
in
xchg
int
xchg
into
jnp
and
decl
push
aam
jbe
nop
in
sub
int
jmp
jl
das
adc
fldenv
jp
jmp
sti
xor
lods
jno
sbb
lods
std
add
xchg
bound
insl
ret
lcall
rcr
mov
aad
insl
sub
cmc
or
push
ljmp
jno
pop
fwait
bound
inc
insl
out
fsubr
mov
je
imul
jg
in
push
jb
into
js
outsl
push
add
test
ficompl
outsb
pop
mov
jb
xchg
and
and
movsl
cltd
cmp
inc
jle
dec
push
dec
mov
js
push
xor
push
mov
inc
jns
jmp
dec
jmp
mov
call
lret
xchg
ss
jne
popa
stc
add
hlt
adc
pop
xor
clc
repnz
cmp
push
dec
icebp
decl
xchg
adc
inc
jle
into
out
add
dec
fcoml
jg
das
movsb
xchg
jp
sbb
pop
pop
sbb
insl
inc
mov
jno
inc
adc
jg
mov
xlat
push
mov
push
adcl
mov
jns
ljmp
sarl
lret
movzwl
popa
mov
dec
fimull
leave
dec
and
xchg
in
into
add
or
test
arpl
in
xchg
out
mov
push
cmpsb
sti
push
inc
jae
jecxz
cli
push
pop
call
sarl
fcomp
sahf
push
adc
adc
jg
jns
cltd
inc
int3
es
and
daa
stc
lock
jecxz
lods
lcall
xchg
pop
mov
adc
aad
dec
add
push
and
shl
outsl
icebp
push
xor
cmpsb
cmp
adc
in
adc
cmp
dec
ljmp
add
sbb
pop
pushf
test
mov
test
sub
sub
decl
pop
int3
jecxz
js
add
mov
in
xchg
cltd
call
mov
ljmp
add
adc
mov
jp
jmp
xor
enter
jnp
lea
jmp
mov
cmp
leave
fidivl
xchg
cmp
mov
sar
js
jmp
lds
or
jmp
xor
mov
push
ret
jg
pushl
mov
stos
jp
das
mov
lret
xchg
dec
dec
popf
aad
inc
mov
mov
or
addb
cmp
inc
push
sbb
sub
clc
test
lcall
orb
cvttps2pi
and
push
mov
adc
mov
push
jg
push
dec
scas
decl
flds
inc
adc
arpl
push
mov
popa
lock
ljmp
jle
xor
mov
xchg
out
ja
idiv
mov
adc
call
mov
insl
call
cmp
je
out
xor
movsl
or
inc
data16
addb
aas
push
nop
xchg
mov
aaa
mov
pop
sarb
jmp
dec
test
cwtl
xchg
jns
xor
scas
ficomps
ret
pop
lret
mov
or
pop
xchg
pop
jb
xor
test
cmp
nop
outsl
iret
and
dec
clc
push
sbb
std
test
pop
ljmp
int
lods
xchg
setns
enter
and
fdivrs
lret
orb
out
cmp
inc
xchg
mov
cmp
call
insb
cmpsb
sub
dec
pop
insl
fwait
jge
sub
xor
out
push
dec
vphaddudq
mov
lea
cmp
pusha
daa
add
inc
dec
mov
adc
aas
or
pop
push
adc
fidivl
call
cli
scas
dec
je
mov
call
in
xor
jae
push
lods
jle
icebp
jo
or
push
ret
cmp
fcmove
inc
mov
dec
clc
call
incl
inc
pop
bound
sbb
pop
dec
push
ret
into
or
xchg
ja
pushl
mov
dec
cmp
aaa
dec
push
inc
in
xor
lea
sub
decl
adc
fmull
pop
iret
xchg
inc
xchg
insl
and
outsl
adc
fbstp
cmp
outsb
andl
hlt
dec
in
mov
jecxz
aas
sub
das
xchg
dec
sub
mov
dec
pop
mov
mov
push
push
lock
dec
sub
mov
mov
adc
dec
sbb
jg
fcmovu
lret
scas
cmp
fwait
adc
xor
lds
jl
pop
mov
pop
iret
cwtl
fbld
icebp
ljmp
cltd
jecxz
jge
add
dec
lret
cmp
aas
jmp
push
in
in
pusha
popf
sub
xor
add
jl
push
mov
decl
cld
xchg
mov
xchg
add
cmp
leave
std
out
loopne
and
loopne
js
mov
dec
test
es
call
xchg
mov
mov
pop
test
pop
scas
aad
test
test
call
repz
jp
jecxz
adc
dec
and
pop
dec
jp
in
ljmp
jl
loop
sbb
iret
jl
mov
repz
punpckhdq
cmp
and
mov
mov
fidivrs
rol
pop
std
in
mov
sub
test
and
add
push
jne
aaa
dec
fucomip
incl
xchg
push
sub
or
xor
icebp
fistps
xchg
inc
xor
xchg
xor
dec
loopne
pop
mov
mov
decl
fimuls
inc
pop
pop
js
and
call
push
ficompl
out
mov
decl
sub
push
aad
aam
cmp
inc
pop
adc
sbb
cld
jmp
xor
fistpl
imul
and
jmp
inc
mov
movsl
ret
push
and
push
rolb
jb
cld
xor
cs
pushl
cld
in
shrl
std
mov
iret
cmc
jg
push
xor
cmp
das
aaa
mov
repz
ljmp
mov
dec
mov
xor
int3
hlt
je
jb
mov
std
nop
cmc
cs
sub
mov
mov
ret
xchg
mov
sbb
jmp
or
dec
cld
jmp
faddp
push
mov
fbstp
stos
fistps
jnp
lods
lret
dec
or
jmp
addr16
aam
cs
inc
aam
cmp
xchg
xor
push
call
test
mov
dec
or
or
push
jg
movsl
shrl
fildll
sti
add
fistpll
pop
je
mov
push
fwait
nop
aas
decl
cli
sub
and
fcoms
xchg
sbb
mov
mov
add
xchg
fst
cltd
sub
mov
das
cmc
call
mov
stc
popf
add
gs
xor
pushf
xchg
or
mov
adc
sahf
mov
rcrb
ficomps
jmp
push
dec
and
lret
jecxz
xchg
cmp
push
dec
inc
fsubl
mov
adc
fucomp
mov
sbb
ret
movsl
cmp
loope
lret
repz
cld
pop
jmp
loop
and
push
aaa
lea
sbb
aas
cmp
pop
clc
lea
decl
repz
push
nop
jns
adc
push
cmpsb
push
ljmp
push
mov
xchg
fwait
arpl
mov
adc
out
xor
pushl
lcall
jo
mov
mov
xchg
sub
jl
cld
jl
or
mov
lcall
xchg
sub
jecxz
push
mov
and
ljmp
out
mov
sahf
test
jae
jl
and
cltd
xchg
mov
add
inc
jnp
adc
jg
decl
pop
mov
pusha
cmpsl
ds
mov
xchg
inc
test
or
popa
aam
test
sub
neg
jo
pushf
sub
lods
add
jmp
jg
add
fistl
push
gs
mov
pop
sbbl
arpl
pushl
mov
jle
rorb
jecxz
sub
mov
mov
or
mov
mov
movsl
or
insb
mov
xor
in
xor
in
lcall
scas
pushf
add
fs
cltd
ret
jp
add
fisubrs
clc
push
enter
xor
ljmp
add
scas
ss
push
mov
jg
aas
scas
mov
xor
or
cmp
xchg
mov
pop
in
std
incl
sbb
in
fwait
mov
or
xor
sbb
jg
and
aam
sub
dec
and
into
jno
push
push
jne
in
fistpll
add
sbb
fcoms
insl
jnp
scas
xchg
mov
jg
pushf
in
push
je
mov
pushf
out
push
scas
pushf
sub
pushf
xlat
inc
cmpsl
cmpsb
imul
sbb
aaa
sbb
cld
or
in
fdivr
fistpl
jg
adc
mov
and
fistps
loope
mov
jb
out
pop
pop
xchg
cmc
and
adc
jle
pop
incb
aas
cmp
out
add
in
out
pop
inc
out
out
cmp
std
in
cs
inc
out
xchg
cld
push
loop
xor
adc
jg
out
jle
cli
pushf
shlb
test
shr
dec
leave
notb
mov
push
mov
insl
add
call
ret
mov
stos
incl
cmc
xchg
push
loope
sub
pop
sub
dec
cld
incl
rorl
adc
jns
add
cmp
lret
adc
decl
cmpsl
test
lea
or
ror
cwtl
xor
iret
xchg
lock
pop
cmp
jg
sub
xor
push
sub
out
mov
and
xchg
sbb
jmp
in
cmc
lret
cmp
jmp
test
cld
call
call
pushl
addr16
jp
lea
xor
int
sbb
lods
xor
call
jecxz
arpl
negl
dec
aas
outsb
jge
repnz
inc
inc
or
enter
lcall
pop
popa
inc
sub
and
fcoms
push
popf
cmp
roll
sub
call
nop
ljmp
sbb
sub
imul
xor
and
mov
cmp
fcompl
iret
sar
jge
mov
inc
xchg
sub
imulb
jae
push
leave
jnp
pushl
data16
jmp
adc
leave
mov
pop
push
fadd
push
fimull
test
xchg
sahf
sbb
mov
xor
fadd
jp
psubusb
mov
mov
and
test
lcall
lcall
push
ffreep
jle
repz
xor
or
cmp
pop
std
jne
cs
call
push
inc
xchg
sub
mov
jmp
int
push
inc
cmp
push
les
mov
pop
adc
outsl
aad
sbb
fs
jne
mov
bound
sbb
aam
xchg
cmp
in
mov
les
js
je
shlb
mov
sub
adc
decl
jp
or
xor
jle
mov
ja
pop
add
sbb
jno
pop
call
sbb
and
cmp
jl
jb
jg
or
dec
jmp
popf
scas
das
sub
xor
xchg
nopl
movsl
mov
ret
call
in
mov
lcall
hlt
movsb
hlt
sub
sub
call
rorb
dec
lea
dec
lahf
push
cmc
pusha
call
inc
and
stos
jle
and
add
xor
ret
clc
push
adcb
jg
cmp
inc
jecxz
xchg
lods
mov
dec
aad
jp
lock
ljmp
push
pop
jb
cmp
inc
cltd
jo
xchg
push
push
ficompl
push
test
dec
mov
mov
sub
jge
inc
lds
out
jg
pop
loop
outsb
outsb
call
and
adc
daa
or
fstpt
daa
enter
cmp
mov
or
fildl
jne
popa
pop
jmp
inc
imul
lcall
sarl
mov
jns
pushl
dec
mov
mov
push
mov
ret
lea
adc
loopne
mov
mov
scas
dec
jb
inc
push
divl
pushl
jae
loopne
mov
call
add
push
inc
idivl
call
cli
pop
pop
xor
test
xor
mov
xchg
mov
jle
mov
mov
int3
mov
ret
aas
adc
mov
xor
decl
adc
out
clc
add
shlb
loopne
cs
add
mov
loopne
fnsave
mov
call
fcoms
ja
nop
lahf
cmp
movsl
fsubrl
lods
push
imul
pop
mov
mov
sar
call
pop
sahf
jge
cltd
mov
fstpl
cmpl
cmpb
std
decl
mov
insl
popa
addb
adc
and
sub
push
aad
aaa
cli
inc
outsb
sub
and
arpl
pop
ljmp
aas
rol
outsl
das
cld
inc
in
in
sahf
mov
out
or
jae
in
dec
or
call
mov
rcr
inc
push
enter
out
add
mov
ljmp
push
sti
push
js
cmp
sub
pop
sbb
jle
jmp
daa
mov
jno
aad
xor
iret
push
sub
int
les
ljmp
insl
loopne
cmp
in
inc
xor
cmp
ljmp
cltd
sbb
dec
mov
jmp
mov
jmp
inc
cmc
or
jmp
adc
jge
jp
and
sahf
pushf
aad
jno
stos
gs
repz
ljmp
push
add
adc
xchg
sti
daa
mov
and
mov
std
incl
and
xchg
and
mov
push
add
and
ljmp
dec
jnp
adc
sub
inc
divb
xor
or
in
fistpl
es
scas
inc
sub
or
movsl
mov
xor
dec
inc
imul
cld
mov
xchg
scas
add
push
mov
pop
adc
pop
ljmp
lcall
push
jbe
xchg
jle
incl
out
push
push
dec
push
mov
call
xor
call
adc
and
and
popf
push
orl
jo
push
jle
es
push
mov
ret
or
lea
push
dec
push
lret
call
mov
lcall
clc
movd
sbb
jle
push
mov
mov
ret
and
mov
mov
mov
jle
and
adc
scas
cmp
into
sbb
out
lcall
push
inc
out
cmpl
xor
pushl
cli
bswap
or
add
mov
mov
fwait
dec
out
lret
fiaddl
jne
xor
sbb
add
test
xchg
fwait
push
jp
jge
fsubrs
jp
add
sbb
aaa
xor
and
and
icebp
incb
xchg
leave
mov
repz
cmpsb
in
into
cld
sti
sub
dec
notl
popf
enter
je
mov
push
jl
jnp
lods
xlat
cltd
bound
lock
in
dec
push
mov
or
or
jnp
lcall
mov
cltd
aad
push
sti
jg
in
aaa
cwtl
cmp
in
fucomi
out
cs
push
call
add
xor
add
pushl
add
daa
add
addl
jbe
fildll
push
dec
mov
add
inc
mov
xchg
popa
nop
mov
cli
jle
cmp
roll
and
pop
push
outsb
mov
xlat
sti
bound
out
mov
xchg
lret
inc
xchg
adc
ja
lret
adc
jge
push
ficoml
jbe
xchg
scas
inc
mov
dec
xor
mov
pop
loopne
jmp
vunpcklps
popf
dec
fnstcw
subb
popf
pop
xchg
mov
sbb
sbb
das
lock
sbb
push
lahf
jg
xchg
dec
cltd
xchg
mov
cmpsb
adc
js
aam
ffreep
lahf
xchg
sub
aas
out
sbb
je
loop
inc
dec
xor
xchg
movsb
jge
ljmp
divl
xchg
sub
dec
cmp
orl
mov
inc
sbb
aaa
cli
mov
lods
jns
mov
aad
das
out
mov
xchg
in
jb
mov
hlt
pop
xor
sub
incb
ljmp
into
cltd
hlt
mov
jbe
add
and
ss
test
sbb
ja
in
and
movzbl
push
push
into
in
and
jne
push
cmp
psubd
mov
mov
adc
xlat
pop
xchg
jb
nop
loopne
pushl
mov
push
fucom
jb
dec
pop
ss
cmp
lea
test
in
cmc
adc
lcall
mov
pop
pop
push
mov
das
icebp
outsl
inc
xchg
mov
test
mov
and
incl
mov
pop
into
das
jecxz
add
icebp
in
clc
mov
cmp
clc
ljmp
jo
and
fimull
shlb
ds
ljmp
adc
sbb
clc
adc
mov
jmp
faddl
cwtl
cmpsl
mov
inc
push
lods
mov
sub
xor
mov
mov
scas
in
test
mov
dec
cld
pushl
jnp
lahf
das
cmp
aad
or
lcall
and
and
in
fcomi
aad
aas
xlat
cmp
mov
int
shl
xchg
lret
std
call
loope
cmp
jae
pushl
xchg
stos
sarb
push
push
sahf
sbb
repnz
sub
fisttps
stos
popa
push
push
in
pop
sub
cld
jb,pt
dec
scas
incb
shlb
inc
stos
jl
mov
adc
icebp
push
incb
stos
inc
xor
insl
adc
adc
mov
call
add
pop
pop
sbb
cmc
xchg
out
and
scas
test
lea
into
xor
and
and
xchg
pop
cld
mov
adc
fsub
mov
push
movsl
shrb
jns
loop
inc
or
fnstenv
jl
xchg
scas
fs
pusha
sub
add
shl
push
push
shrb
lcall
outsl
aad
shl
lret
pop
pop
push
dec
or
sarl
cmc
scas
sub
jge
pushl
xchg
jg,pt
rorl
jge
test
xchg
jg
clc
or
xlat
xchg
cmp
mov
shll
add
adc
add
and
pop
cmp
ljmp
dec
ljmp
rcr
sub
dec
xchg
adc
lods
incb
pop
clc
in
push
push
add
inc
hlt
lock
mov
xchg
push
and
dec
adc
push
push
dec
push
insb
or
push
or
jmp
sub
xor
jp
addr16
sbb
cwtl
lahf
or
das
std
mov
cmc
push
pop
pop
pop
mov
push
pop
add
sub
pushl
cmp
jne
sti
mov
dec
mov
push
dec
pop
lcall
jle
ss
push
mov
stos
fcomps
cwtl
mov
xchg
inc
sbb
add
cli
lods
fiadds
cwtl
sbbl
lret
or
sti
hlt
add
mov
adc
js
push
in
lock
sbb
jbe
or
add
mov
into
mov
mov
pop
xchg
fdivr
ljmp
mov
call
adc
push
or
jns
andb
hlt
ljmp
push
push
jbe
outsl
cmc
decl
ret
lret
shl
jp
pop
lods
add
aaa
jb
in
adc
outsl
add
jp
bound
jnp
data16
into
mov
jo
rol
ss
push
push
or
lret
mov
pushf
test
mov
jo
mov
rorl
ret
mov
cltd
js
xlat
push
push
int
sti
icebp
mov
sub
movb
popf
push
xchg
ljmp
mov
xlat
sbb
push
mov
adc
cmp
mov
insl
jo,pt
decl
shl
jmp
adc
adcb
add
lods
jmp
ret
sub
shll
iret
jne
mov
mov
pop
sub
fcomps
dec
call
aaa
clc
sarb
adc
lods
fdiv
sub
lods
sahf
imul
aam
lds
sbb
xor
fcom
loopne
fsts
adc
out
mov
call
pop
and
xlat
pop
mov
cld
xchg
cli
dec
push
sti
in
test
fcomp
jle
add
mov
mov
popf
ljmp
and
imul
sub
stos
out
test
enter
mov
cwtl
push
in
mov
xchg
jno
cli
mov
stc
test
xchg
mov
mov
and
push
jg
andb
shr
ret
incl
jns
push
sti
cmp
jo
rorl
in
sub
gs
xor
gs
movsl
pushl
cmc
fwait
push
ss
or
mov
push
test
int3
repz
test
jne
pop
xor
cmp
jns
push
testb
outsb
add
and
cmpsl
mov
xor
and
mov
es
jmp
out
mov
mov
test
inc
mov
rorb
or
popa
inc
outsl
sub
mov
les
push
pop
pop
es
pusha
jle
push
addr16
in
xor
adc
pusha
add
dec
xor
dec
mov
call
jnp
imul
dec
inc
iret
decb
and
insb
in
fwait
dec
dec
les
pop
adc
jnp
push
mov
icebp
arpl
mov
or
xor
es
loop
outsl
cld
ljmp
push
adc
add
dec
pop
sub
bnd
xor
mov
jo
pop
fimull
cld
out
fsubs
jle
xor
sbb
cmpsl
adc
lock
pushl
shr
sti
shl
pop
sti
aam
out
loope
push
and
lcall
cmpsb
push
lcall
sub
mov
rcr
adc
dec
clc
sub
or
sbb
jecxz
ret
je
cwtl
add
mov
sub
shl
dec
in
lret
xchg
das
stc
fistpll
std
call
mov
sarb
pop
cmpsl
lcall
in
adc
inc
aam
sbb
jnp
jecxz
into
nop
int
cli
mov
or
and
sbb
lret
iret
lods
sbb
pop
add
call
outsb
xchg
jecxz
pusha
aam
decl
mov
in
and
xchg
mov
push
mov
inc
cmp
rcrb
xchg
pop
into
sub
push
push
mov
icebp
lcall
mov
nop
in
xor
dec
enter
inc
adc
add
pushf
call
jmp
movsb
out
dec
xchg
add
sbb
cld
addr16
and
or
push
jno
dec
adc
or
fidivrs
push
mov
and
popf
insl
loop
push
stos
xchg
jg
iret
dec
test
movb
push
mov
sub
push
xor
dec
lods
into
and
add
sti
cmp
movsb
jmp
xchg
or
cmp
pop
lret
repz
ljmp
decl
jg
fidivrs
mov
push
add
lcall
or
cmp
jmp
shl
bound
iret
fimuls
popf
mov
xor
testb
outsb
cli
inc
push
mov
repz
orb
mov
fld
jecxz
jmp
xchg
sti
lcall
push
jle
fwait
sub
and
lahf
movsl
xor
dec
in
pushl
stc
ljmp
std
incl
js
add
cli
daa
mov
loop
jno
xor
aam
xchg
inc
jmp
dec
das
cld
or
iret
inc
fwait
sub
and
repnz
clc
mov
jg
mov
dec
mov
add
mov
rorb
mov
repz
cltd
push
or
insl
fistpl
decl
in
into
out
dec
in
xchg
jl
mov
fisttpl
or
aas
mov
dec
ret
bound
outsb
push
mov
pushf
cmpl
push
dec
std
outsl
push
faddl
jno
fsubs
mov
pop
std
call
das
dec
push
aaa
sub
std
or
outsb
and
hlt
dec
fnstsw
lcall
gs
cld
push
js
pop
dec
pop
xchg
incl
jne
push
dec
or
adc
std
adc
mov
mov
pop
xor
icebp
dec
cmpsl
call
xchg
and
movups
dec
push
dec
mov
es
mov
mov
insl
or
aam
int3
mov
jmp
cmp
mov
mov
cmp
pop
cmp
ret
pop
inc
pop
gs
mov
dec
lcall
aaa
mov
sbb
or
lods
push
fisubrl
push
pop
push
into
aaa
pop
adc
lcall
cmp
pop
jmp
jae
repnz
test
call
das
popf
jge
mov
pop
jge
sarb
hlt
into
pop
clc
movsl
decl
lret
in
add
addr16
mov
call
sub
test
jmp
stos
mov
or
stos
dec
cli
mov
mov
fucomi
repnz
xor
xlat
jb
shll
sbb
sub
push
addr16
out
jl
mov
mov
outsl
icebp
incl
arpl
out
cmp
sub
or
sti
pop
or
lret
sti
imul
adc
add
jmp
enter
cmp
call
sub
stc
and
jmp
inc
mov
xor
sub
mov
addr16
in
jmp
add
cmp
aas
scas
xchg
ja
cmpb
dec
jmp
rorl
das
data16
mov
ret
mov
cmp
ret
inc
mov
xlat
sub
mov
or
xchg
jg
outsl
call
xchg
jmp
dec
out
xchg
xchg
and
adc
sbb
mov
lock
sti
js
push
pop
out
scas
popf
inc
jnp
lahf
mov
aas
or
dec
or
incl
sub
repnz
sbb
mov
jp
jnp
add
lret
sbb
xchg
hlt
add
jp
mov
jg
pushl
jae
out
mov
popf
add
fistps
dec
aas
sahf
das
std
call
xor
movsl
inc
sub
fwait
pop
and
std
sbb
inc
xchg
push
xchg
pushl
add
pop
mov
adc
jo
sub
push
aam
inc
push
lcall
incl
push
xlat
sbb
inc
popf
popa
xor
test
movsl
sub
mov
js
sbb
add
or
popf
push
push
jnp
fwait
pop
add
test
shrb
clc
movsb
jg
test
pushf
pushf
lea
into
add
adc
std
decl
mov
sbb
dec
icebp
push
xchg
fisubs
mov
mov
or
pop
push
pop
sbb
movsl
and
ljmp
inc
mov
inc
adcb
cmpsb
mov
cli
fbld
mov
pop
fwait
xor
test
pop
mov
mov
lods
jg
subb
push
xor
mov
xor
int3
ss
mov
scas
int
xlat
outsl
call
fucomip
mov
cmp
lret
xor
cmc
lods
jl
pushf
rorb
outsl
hlt
add
js
push
outsl
add
jb
mov
lcall
lcall
push
fildll
incl
mov
xchg
dec
mov
add
sbb
jmp
or
pop
into
out
aam
adc
inc
pop
out
call
or
sbb
or
adc
divl
test
dec
xchg
jmp
sti
cltd
pop
std
outsl
aam
icebp
or
mov
inc
aam
std
add
or
xchg
adc
or
or
movl
sub
stc
inc
jg
xchg
hlt
mov
cmpsl
inc
jb
sahf
out
jnp
xor
push
pop
pop
call
pop
push
adc
lea
decb
mov
cltd
bnd
sbb
mov
fdivrs
clc
nop
lock
bound
pop
cli
or
mov
bnd
aaa
shl
mov
mov
jns
push
arpl
in
jo
jecxz
inc
mov
add
test
inc
js
add
pop
sarl
incl
dec
push
add
pop
push
xchg
cwtl
inc
lock
subb
mov
jg
inc
mov
and
mov
daa
add
sarl
ljmp
addr16
ljmp
cmc
mov
dec
or
mov
lock
mov
scas
dec
dec
mov
call
fstl
addl
les
dec
jge
mov
sub
mov
add
incl
mov
jne
cmc
ss
mov
repz
mov
ja
push
push
shll
mov
xchg
cli
mov
or
xor
inc
jmp
push
pushl
push
dec
push
aaa
pop
loope
fstl
sti
xor
ficoms
int3
adc
in
ljmp
testl
dec
xchg
incb
jb
cli
and
jmp
sub
mov
inc
sub
and
xchg
pop
mov
je
sbb
push
sub
mov
push
push
and
jbe
push
sar
or
push
push
call
stos
popf
jno
and
lods
mov
cli
xchg
negl
mov
in
std
dec
cmp
decl
mov
cwtl
cwtl
daa
es
jle
ret
sarl
xchg
push
xchg
jmp
inc
ljmp
decl
jae
mov
and
or
jp
das
mov
push
rolb
push
addl
das
repnz
mov
add
mov
inc
or
pop
dec
mov
sbb
ljmp
cmp
out
dec
outsb
and
inc
fsts
xchg
mov
jmp
mov
sbb
inc
repz
test
sub
mov
decl
ret
push
scas
in
add
jo
call
mov
sub
inc
cltd
and
cmpb
xor
lods
or
shll
dec
jb
sub
idiv
ljmp
test
test
push
orl
clc
ret
ffree
sub
inc
and
notl
xchg
cmpl
xchg
adc
mov
push
popa
sbbl
aad
and
adcb
fstl
add
push
or
movsl
xchg
mov
jmp
push
inc
les
cmp
enter
ds
aas
inc
pushf
mov
insl
jp
lock
out
or
cmp
pop
call
xchg
adc
in
into
js
pop
nop
mov
push
mov
inc
les
adc
and
jl
xchg
icebp
das
jp
or
inc
loope
xchg
roll
push
lds
bound
cmp
aaa
jbe
js
adc
inc
xorl
inc
enter
sbb
fs
test
or
add
outsl
push
xor
or
je
dec
sub
jg
clc
push
adc
hlt
jge
pop
enter
jmp
fs
pop
ja
mov
pop
or
ljmp
neg
je
call
adc
and
cmp
popf
sar
or
dec
adc
lds
aad
jns
push
push
push
mov
adc
repz
add
aam
in
sub
test
push
push
cltd
outsl
hlt
fbld
and
mov
insb
fsubr
decl
pop
inc
cmp
jg
adc
sbbl
and
mov
jne
lret
dec
icebp
movsl
sbb
xor
popf
mov
call
mov
std
jae
sbb
andb
push
aas
jg
fisubl
ret
sbb
imul
jg
jg
cmp
mov
out
test
mov
push
push
dec
mov
dec
jecxz
cld
outsl
sbb
sbb
cwtl
inc
xchg
mov
add
jbe
sbb
add
sbb
aam
lcall
outsl
hlt
mov
sub
cmp
mov
xchg
das
std
incl
cmp
adc
mov
push
cmp
es
aaa
loope
pop
inc
xorl
call
mov
test
jne
jb
out
ss
ss
call
push
jp
sbb
jp
std
or
popa
jno
ds
inc
das
mov
icebp
ljmp
mov
cmpl
mov
pop
mov
xchg
adc
lea
xlat
mov
inc
outsl
lret
je
inc
mov
xchg
scas
xor
adc
dec
xor
push
inc
imul
fwait
loop
mov
jmp
jo
xchg
ljmp
orb
lods
fucom
popa
mov
dec
mov
ss
adc
or
bound
add
jmp
pushl
frstor
out
dec
je
pop
add
xor
and
and
mov
cld
in
incl
adc
or
cwtl
sub
cmp
ljmp
pop
mov
add
into
jb
sbb
sti
pop
cld
adc
or
std
outsl
rorl
xchg
add
pusha
das
pop
xchg
mov
ljmp
mov
pop
pusha
jne
es
and
push
stos
mov
push
sbb
call
inc
mov
inc
dec
mov
ret
sub
or
xlat
lock
or
idivl
push
call
iret
ds
cmpb
and
add
fisubrs
dec
shlb
fnstenv
iret
jno
jne
insl
outsl
dec
std
incl
nop
sub
clc
dec
adc
and
cmp
fnsave
cmp
bound
pop
les
cmc
jmp
aas
fstpt
icebp
or
cmp
and
xor
jge
mov
loopne
jbe
sbb
and
nop
jnp
pushf
and
xor
lcall
sub
into
push
out
je
xlat
or
cld
out
jmp
mov
pop
outsb
sbb
sti
and
aam
mov
rorb
sbb
testl
pushl
xchg
jmp
pusha
movsl
imul
jnp
movsl
or
pop
testb
jle
shlb
jp
cli
aas
test
sarl
lds
dec
sbb
mov
in
jmp
add
mov
inc
mov
popa
hlt
xorb
push
jb
mov
pop
inc
sub
inc
sbb
xor
ds
push
jge
xor
and
xchg
sti
jmp
lcall
pop
cmp
push
sub
mov
pop
cmp
cld
jg
das
dec
and
jg
xor
add
jge
jb
in
scas
fadds
jge
outsb
call
dec
das
std
call
add
mov
jmp
lea
push
jnp
test
or
aaa
imulb
cld
add
pop
pop
hlt
into
jno
cs
jns
jg
data16
sbb
pop
mov
and
add
loope
push
cmp
jg
cmp
repz
push
and
test
push
inc
xor
add
mov
roll
push
mov
int3
test
jp
push
push
dec
cmpsb
jnp
sub
leave
sahf
add
pushl
sbb
es
mov
je
lcall
decl
mov
xlat
fmul
adc
and
int3
pop
inc
adc
push
ljmp
rcl
ficoms
movw
call
pop
xchg
divl
xor
dec
ss
sub
ljmp
jg
pushf
movb
mov
mov
aaa
sahf
jnp
jnp
xor
lcall
cltd
test
ja
and
xor
jle
push
ss
incl
sbb
lods
loop
lds
mov
dec
pop
and
andl
push
jns
incl
jg
dec
cmp
sub
sub
cmpb
ds
fldl
mov
adc
sub
imul
cmp
fsubs
mov
lods
dec
jb
rol
push
stc
lcall
std
call
jnp
jmp
mov
dec
inc
add
call
test
decl
fs
aad
dec
repnz
in
fsubrl
cmp
push
add
inc
or
mov
dec
xorb
xorl
arpl
incl
pop
std
adc
mov
or
cmp
sub
outsb
cmpsl
push
loopne
fs
int3
std
dec
pop
arpl
adc
insl
jle
scas
add
mov
gs
call
mov
das
push
dec
xor
loopne
sub
mov
ror
je
lea
das
scas
mov
pop
loop
adcb
jne
call
xchg
dec
lret
lods
std
and
stos
decl
lret
mov
or
cmc
mov
inc
cmpb
test
adcl
decl
scas
pusha
jg
and
jne
enter
out
in
pop
ljmp
jp
jle
xchg
mov
mov
push
xchg
scas
stos
push
pop
xchg
push
push
xor
mov
sbbl
add
add
sti
aam
rcrb
jmp
pushl
adc
cmp
mov
call
mov
in
scas
mov
xchg
pop
mov
cld
lea
mov
test
ja
loope
mov
mov
pop
inc
insb
push
push
outsl
push
mov
enter
decl
xchg
push
shll
dec
hlt
fdivrs
decl
pushl
inc
sbb
mov
xorb
sub
inc
sbbb
cli
pushl
iret
sub
dec
dec
add
xchg
cmp
lret
mov
sub
mov
add
sub
sar
fwait
jmp
pop
and
in
dec
stc
je
je
int3
mov
ljmp
cmc
push
in
call
xor
lds
mov
mov
pop
pop
arpl
or
mov
call
push
inc
cs
adc
lcall
in
sub
cmp
insb
in
dec
xchg
push
pop
inc
adc
dec
out
lods
pop
mov
xor
mov
inc
mov
pushl
dec
inc
mov
cmp
movsb
fistpl
fcomip
add
shrb
out
dec
nop
inc
test
pop
jp
in
nop
sub
jo
das
int
pop
xor
adc
push
das
inc
push
daa
leave
dec
push
decl
dec
mov
jnp
int
cmp
jmp
cmp
fidivrl
push
cmp
push
push
or
iret
sub
cli
mov
lret
push
sti
cld
cs
xchg
loopne
mov
push
mov
gs
sub
mov
call
enter
sbb
dec
xor
pop
test
xor
negl
aam
sub
lods
pop
idivl
fisttps
mov
mov
pusha
ljmp
xchg
sub
movzwl
jmp
push
mov
inc
dec
incb
call
sbb
inc
ljmp
loop
add
or
pop
jl
cld
sti
jae
adc
add
mov
ljmp
std
xor
js
push
shl
or
out
mov
in
lds
mov
ret
aad
pop
lcall
dec
cld
mov
or
into
outsb
mov
rclb
push
sub
lea
mov
inc
pop
in
sbb
mov
call
ss
inc
js,pt
fwait
aam
add
rcrb
xor
jmp
push
push
sarb
inc
les
jae
jne
adc
jg
inc
fsub
sbb
fmuls
aas
mov
or
decb
add
mov
sub
mov
rclb
dec
or
out
fdiv
pop
or
call
pop
adc
push
nop
mov
lock
xor
insl
cmp
dec
cmp
mov
add
and
cmp
mov
imul
inc
and
pop
push
fcoms
fdivrs
sub
je
cmp
sub
mov
mov
jl
aad
sbb
sub
xor
sub
cmp
dec
shr
rol
or
pop
aad
loopne
cmp
arpl
jmp
inc
dec
ss
outsb
std
xchg
mov
rcrb
xchg
pop
mov
out
push
aam
dec
insb
cli
ret
in
rol
jmp
add
mov
pop
or
xchg
mov
lret
ret
adc
push
arpl
push
pop
ret
push
aaa
js
in
sub
push
cli
incl
lods
ja
lret
push
cs
jle
int3
and
xchg
or
lcall
mov
ja
sub
jg
in
movsb
jg
sub
rcl
push
pop
std
lcall
out
push
xchg
aad
test
mov
mov
lret
jecxz
mov
outsl
jge
cmp
xchg
fs
dec
mov
adc
lcall
jmp
xor
push
call
fld
xor
into
push
mov
push
fnstsw
adc
sub
ret
mov
loopne
das
ret
dec
push
stc
cs
ret
xchg
repz
scas
sbb
mov
dec
out
inc
push
xchg
dec
push
clc
pop
hlt
jmp
xchg
lock
mov
outsb
cli
ljmp
fs
push
rorl
push
or
sub
push
out
sub
sub
push
add
xchg
xor
mov
xchg
mov
pushl
nop
ficoms
adc
jns
fsubrl
mov
jg
dec
out
outsl
cmc
cmpsl
pop
pop
sarb
dec
pop
faddl
pop
xchg
mov
cmp
in
xor
iret
push
pop
scas
mov
sti
sub
sbb
push
inc
jg
sub
sar
imull
sbb
fsubrs
jbe
push
push
and
add
ljmp
adc
repz
pop
lret
push
into
xchg
dec
imul
jbe
call
fstpt
jmp
fucomp
push
jb
mov
xor
xchg
and
mov
xor
ret
jl
fdivl
push
pop
adc
ss
push
mov
and
cvtdq2ps
mov
fisubrl
lock
fbld
sbb
pop
testl
pushl
jp
sbb
jge
out
mov
pop
iret
mov
xor
mov
cmp
push
sti
jg
hlt
outsl
inc
mov
dec
mov
call
incl
inc
pop
test
and
jae
push
mov
orl
sub
lea
push
xor
fcomps
jl
fucomi
add
cmp
push
add
adc
or
incl
jl
clc
mov
mov
push
sub
xor
dec
decl
rorb
and
movsb
jne
jge
jl
jb
mov
pop
mov
sahf
cld
dec
push
and
shlb
add
clc
mov
mov
inc
jl
mov
dec
add
ja
call
inc
fnsave
jg
out
mov
xchg
rol
inc
inc
test
jns
cmp
imull
mov
nop
out
cmpsl
jno
jp
jmp
jno
je
pop
mov
mov
aam
lock
aaa
xor
xor
push
jmp
lock
or
out
scas
clc
inc
dec
shlb
cli
mov
add
jg
out
mov
push
leave
insl
cld
decl
inc
clc
push
xor
sbb
popf
mov
les
inc
ljmp
pop
dec
jp
jo
sarb
das
jne
lock
push
cmp
jmp
dec
es
lcall
or
mov
mov
pop
das
iret
outsl
lock
cmp
pop
jp
ss
hlt
dec
pushl
mov
clc
jp
sbb
fimull
sbb
enter
pop
clc
lcall
aaa
and
dec
in
or
xchg
lret
push
iret
mov
sar
int3
out
cmp
lret
out
push
xchg
mov
mov
jnp
pushl
clc
fbstp
arpl
lahf
jae
pop
or
dec
or
pop
sarb
leave
inc
stos
out
enter
mov
test
inc
mov
incl
or
andb
outsb
pop
pop
dec
sti
fucomip
inc
js
inc
test
enter
and
int3
jecxz
mov
lock
hlt
notb
xchg
sub
push
or
mov
adc
scas
andl
jns
es
jbe
std
xchg
xor
je
jmp
cltd
cmp
lods
push
dec
xchg
xchg
or
shl
popf
cmpsl
dec
and
adc
mov
or
enter
mov
add
mov
pop
pop
movsb
mov
jl
cmp
shll
jg
xchg
xchg
cmp
push
push
cld
js
mov
mov
push
incb
inc
mov
cld
pusha
or
push
fwait
lea
lds
sti
cltd
or
xor
xchg
mov
cld
out
cmp
adc
rorl
or
ljmp
imul
mov
dec
call
xor
xchg
cmpsb
popf
lods
es
jmp
ret
insl
inc
push
and
fsubl
or
push
rol
movsl
call
mov
push
xchg
push
leave
push
cmp
mov
pushl
aas
sbb
cs
aad
in
sbb
mov
xor
fdivl
mov
ss
fwait
imul
imul
mov
sbbb
pop
jp
mov
int
test
lods
decl
sub
ret
ja
push
sahf
jle
jne
adc
pop
enter
insb
push
push
or
pop
loop
ljmp
movsb
push
pushf
std
mov
mov
fiadds
jo
pop
sti
ret
decl
cmp
push
inc
push
cltd
shrl
imulb
loopne
imul
mov
inc
adc
sbb
dec
add
xchg
or
mov
jl
xchg
ljmp
cs
sbbl
std
adc
push
lret
scas
and
rcll
mov
scas
mov
call
or
inc
pop
pmaxsw
imul
scas
sbb
mov
sub
or
das
push
in
out
scas
aaa
mov
add
jl
push
call
add
test
fmuls
cmp
mov
sub
cwtl
lods
or
int
adc
hlt
mov
incl
pop
jmp
addr16
idivb
lea
adcb
pop
inc
mov
cmc
lcall
pop
loop
dec
and
cmp
out
call
pushl
cli
sub
jbe
adc
mov
jg
push
inc
scas
daa
push
lds
call
cli
dec
addr16
mov
hlt
sarb
xor
pop
cmp
mov
shr
push
xor
mov
repnz
aam
and
xorb
pushl
scas
dec
aam
cmpl
dec
xchg
out
inc
add
ja
call
inc
xchg
loope
in
push
inc
xor
sbb
aaa
push
push
xchg
xchg
mov
pop
movsl
cs
clc
stos
loop
lds
mov
outsl
xchg
sub
popf
sbb
sbb
jmp
loope
aas
pop
fidivrs
mov
repnz
in
jg
or
sub
leave
push
std
and
sbb
jp
mov
sbb
xchg
push
stc
imul
jno
jno
cli
dec
cmc
mov
inc
mov
imulb
xchg
je
inc
scas
gs
pop
mov
and
movsl
dec
jnp
inc
js
std
fistps
cmp
popa
es
dec
jno
or
mov
call
jl
adc
inc
dec
xor
inc
pop
push
js
mov
ljmp
std
stc
cmp
or
jge
pushl
add
and
xor
jg
mov
call
sar
iret
rolb
shr
lea
adc
push
lcall
fildl
jno
inc
pushf
add
xor
jge
call
mov
ret
mov
fs
cmc
ficomps
xchg
loopne
out
adc
into
fimuls
xchg
ljmp
cld
push
subl
aas
loopne
xchg
idivb
gs
test
xor
call
xchg
in
bound
incb
mov
jmp
test
ffreep
sbb
cmpsb
and
ja
dec
das
adc
outsl
lock
fidivs
stos
jnp
int3
inc
or
rcr
add
das
std
adcb
mov
jnp
xor
arpl
dec
sub
cmpl
mov
xchg
inc
adc
push
test
xlat
mov
and
fdivrs
cmp
outsl
mov
lahf
push
pop
addl
jnp
jg
sub
icebp
enterw
dec
pop
inc
jo
lret
aam
int3
mov
mov
test
ljmp
or
call
adc
adc
mov
cwtl
popa
or
push
addr16
pop
clc
test
lock
orb
mov
fdivrs
mov
or
mov
jae
dec
data16
test
mov
push
sti
scas
insb
sub
dec
jne
inc
leave
cwtl
into
es
or
imul
add
inc
push
decl
sar
inc
in
jp
cmpsb
in
js
and
lds
dec
mov
lret
or
lcall
xchg
out
xor
stos
mov
out
mov
jmp
dec
fnstsw
sub
adcb
pop
fcoml
cmp
cmp
jnp
or
adc
lcall
ss
sub
inc
mov
pop
out
push
jne
and
testb
xchg
cli
outsl
add
pop
sbb
out
cld
loopne
orb
mov
and
ret
lret
int3
mov
jno
popa
push
fiaddl
sbb
test
cmc
icebp
xchg
sub
xor
add
cmpsl
or
jge
add
sub
js
push
jle
inc
pop
cmpsl
and
fistps
loopne
call
adc
mov
lcall
mov
mov
cmpsb
sub
loop
push
sbb
incl
int
adc
lea
dec
pop
mov
stc
cli
push
movb
in
repnz
sar
pushl
leave
mov
push
cli
jl
or
sbb
sub
in
bnd
jmp
mov
stos
dec
jg
mov
aas
cld
mov
jg
das
and
mov
adc
or
int3
lret
rolb
repnz
lea
enter
stos
and
clc
and
fisubrl
mov
sar
das
adc
ja
xor
ds
or
lcall
out
mov
push
xor
add
mov
mov
jne
insb
inc
ss
pop
loop
cli
or
test
jnp
icebp
fisttpll
testb
or
int
jg
cwtl
in
std
ljmp
in
cmp
insb
ret
xor
pop
inc
ljmp
xor
call
pop
pop
xchg
sbb
sbb
xor
js
cmp
jb
cmp
jg
lea
je
gs
xchg
mov
loope
cs
dec
repz
xor
push
push
mov
pop
pop
jle
xor
adc
adc
xlat
nop
arpl
icebp
sub
or
push
add
aas
fcmovne
loopne
dec
sub
cltd
lret
nop
or
pushf
hlt
je
push
fildll
mov
fs
clc
rorl
cld
jbe
jmp
incl
sbb
rol
std
and
ljmp
cld
insl
mov
jmp
ficoml
fnstsw
jg
sarl
jecxz
hlt
push
mov
push
xor
jg
call
out
cmpsb
xor
mov
repz
jne
jl
jl
movsl
mov
addb
aad
and
push
ljmp
aas
scas
push
push
leave
int
into
out
mov
pushl
fimuls
movsb
cltd
fbstp
inc
scas
mov
aad
ljmp
jge
sahf
fwait
dec
in
jle
xor
shlb
and
add
dec
test
pushl
dec
xor
mov
push
dec
inc
shlb
push
jp
iret
xorb
pop
fcmovne
mov
incl
jp
pop
pop
nop
mov
xor
push
mov
jp
cmp
pop
push
or
mov
clc
adc
adc
mov
jmp
insl
test
pop
push
incl
mov
adc
mov
push
adc
mov
mov
incl
xor
sub
inc
mov
inc
es
ffreep
pushf
test
inc
das
fstps
inc
cmp
es
arpl
jbe
xchg
cmp
outsb
scas
add
ret
cmove
dec
and
pop
push
xchg
decl
enter
pop
inc
cli
mov
adc
or
and
and
sti
xlat
xor
mov
addb
cli
push
or
mov
mov
out
ror
pusha
cmp
lds
inc
mov
sub
jg
mov
out
mov
xor
arpl
mov
jmp
xor
insl
sub
or
sub
pushl
arpl
mov
push
imulb
pop
mov
pop
pop
xchg
out
and
mov
and
xchg
cltd
push
and
scas
xor
ja
and
test
or
pop
mov
pop
sbb
lock
movsb
xchg
push
scas
push
xor
test
mov
dec
subl
cmp
jb
sar
sbb
mov
test
push
pop
cmp
scas
ss
adc
iret
lock
or
popa
jg
test
hlt
movsl
and
push
jecxz
stos
in
call
xchg
adc
xor
je
pop
pop
stos
push
inc
add
inc
in
in
add
test
leave
call
nop
mov
sbb
out
sub
mov
out
inc
cld
sbb
fmuls
lcall
push
jp
xor
out
decl
push
sbb
jne
jae
ret
dec
or
xchg
add
add
push
add
lret
fistl
pop
push
inc
inc
fstl
or
mov
push
pop
mov
jle
in
dec
adc
aaa
cmp
and
xor
lds
jns
test
xchg
adc
add
fucomip
cmp
gs
xchg
movl
arpl
decl
mov
inc
ret
stc
in
and
hlt
dec
jp
xchg
push
xchg
je
add
ljmp
hlt
jmp
adc
push
out
dec
popf
add
and
dec
outsl
adc
mov
xchg
aad
pop
cmp
sar
outsl
icebp
xor
jnp
add
in
jl
icebp
push
jnp
push
mov
decl
loop
and
and
mulb
aam
adc
push
adc
xor
jl
add
lcall
add
rorb
pushl
mov
mov
xor
mov
mov
sbb
cmp
dec
jl
ds
ss
xor
xor
jl
sbb
pop
sbb
call
out
xchg
mov
or
push
cmp
push
fcoml
and
push
fstpt
push
add
roll
inc
cmp
lods
mov
xor
or
inc
sbb
jg
ljmp
push
js
test
adc
lcall
fimuls
cld
mov
inc
cmp
and
outsl
inc
cld
lods
xchg
add
jbe
aaa
imul
push
decl
pop
inc
xchg
das
fcoms
push
fld1
in
xor
jns
jg
test
lods
dec
pop
out
mov
inc
push
sbb
test
ljmp
rcrb
xor
iret
jecxz
cmp
addr16
mov
ljmp
push
adc
sub
jle
push
mov
pop
xchg
xlat
mov
hlt
lcall
incl
ret
mov
mov
enter
sub
ljmp
pop
dec
push
fdivrs
ret
push
fpatan
js
cld
mov
lock
mov
fs
lret
mov
std
dec
adc
mov
dec
inc
lea
dec
pop
clc
cmp
ja
jp
jg
call
mov
dec
jp
dec
sarl
push
rclb
pushl
lahf
les
mov
xchg
xchg
push
repnz
fnstenv
lret
sar
jge
mov
dec
mov
sbb
stc
mov
lea
jg
or
pop
inc
es
push
mov
leave
sti
xorl
pop
incl
push
ret
enter
pop
mov
push
stos
mov
clc
je
cli
sub
hlt
push
and
aad
pop
jp
dec
xlat
inc
pushl
cs
mov
pop
add
adc
das
add
aas
lcall
mov
insb
clc
call
adc
pop
std
call
lcall
and
mov
xor
xor
or
add
adc
pop
lahf
jb
and
incl
mov
in
stos
adc
or
decl
sbb
pop
fiadds
jbe
pop
jp
push
xor
decl
clc
fstp
dec
inc
jp
dec
xchg
rcl
or
jle
mov
mov
jle
sbb
dec
jne
lods
call
dec
push
call
dec
pop
mov
dec
pop
jg
call
pushl
cli
mov
cmp
mov
add
mov
dec
sbb
sarb
leave
jnp
add
dec
outsl
das
push
leave
xor
add
call
pop
movq
push
mov
push
mov
pop
fucomip
inc
sub
fs
inc
push
jg
cmovl
push
jne
test
paddsw
ret
outsl
lock
sbb
cmp
ja
dec
outsl
icebp
mov
cli
and
shr
stc
mov
push
and
sub
push
push
js
andb
mov
xchg
incb
loope
jnp
dec
lahf
add
sti
cli
sbb
out
loope
xchg
clc
movsl
rclb
ret
jp
fwait
in
add
jmp
mov
xchg
mov
or
fistpll
decl
cmpsl
js
dec
cltd
mov
jne
cmpsb
sbb
daa
lcall
incl
or
flds
jge
dec
sub
jg
mov
inc
fcmovnu
lcall
dec
xchg
jg
ljmp
cld
pop
xor
mov
daa
cli
jb
and
mov
push
test
mov
sti
cmpsl
jnp
mov
adc
sbb
incl
je
in
and
add
aad
out
ss
movsb
pusha
call
ret
mov
aaa
mov
lods
mov
std
dec
mov
pop
loopne
clc
pop
les
xchg
ret
mov
dec
add
push
mov
dec
xchg
jmp
cmp
call
iret
loop
dec
mov
call
ret
adc
or
mov
dec
and
decl
std
mov
mov
push
add
jg
inc
pop
mov
cmpsl
and
mov
mov
test
xorl
mov
jae
sbb
outsl
scas
sahf
aaa
aad
out
or
and
and
adc
fwait
ret
add
fildl
cmp
mov
xor
shlb
mov
jbe
xor
insl
pushl
mov
inc
adc
sbb
popa
int
mov
inc
out
mov
xor
add
xorb
mov
mov
ljmp
sbb
and
fwait
pusha
adc
out
jge
cmp
and
test
push
xchg
jo
rorb
nop
mov
inc
inc
mov
sbb
add
push
sarl
and
sub
jmp
push
arpl
ds
mov
repnz
aas
jge
push
inc
push
insb
pushl
jp
and
imul
push
and
loop
movsl
outsl
decl
sbb
mov
loope
stos
mov
xlat
cwtl
pop
and
cmp
and
lods
mov
sub
jmp
add
sbb
or
xchg
pusha
push
in
sub
sti
lock
popa
aaa
mov
int3
and
in
mov
push
mov
pop
scas
and
jg
adc
lcall
call
pop
test
ja
jl
pop
adc
fcomi
jg
iret
mov
pop
pop
ficoms
test
add
and
add
lods
cmp
dec
mov
xor
sar
or
out
adc
stos
dec
adc
lea
incl
xchg
adc
pop
fnstsw
subl
mov
or
popa
inc
xchg
mov
add
ljmp
sub
dec
ljmp
or
and
xor
or
daa
adc
mov
jmp
das
cld
push
mov
cmp
pushf
mov
call
je
bound
mov
call
outsl
icebp
incl
imul
cmp
or
ficoms
add
sbb
xlat
inc
scas
push
pop
inc
jp
pop
sbb
push
repz
jo
icebp
jmp
andl
lock
test
test
fadd
mov
into
jge
cmp
test
pushl
or
pop
shlb
pop
pop
repz
fwait
sub
pop
ljmp
clc
push
lods
mov
pop
aaa
lods
cmp
jbe
call
shrl
cmpsb
aad
loopne
push
dec
jl
mov
std
decl
test
sub
int3
mov
sbb
std
mov
icebp
dec
js
xor
cmp
pop
incb
dec
jo
adc
test
fbstp
test
pushl
add
out
lret
loopne
in
cmp
in
rorb
lret
inc
testl
call
push
sbb
xchg
lock
popa
push
sbb
add
sar
mov
out
jnp
scas
sbb
sti
push
jl
pop
scas
xlat
sbb
fucomi
jb
in
outsl
mov
cmp
inc
or
lea
xchg
mov
mov
cmp
dec
ljmp
jmp
test
rorl
test
cli
ds
iret
repz
mov
hlt
sbb
incl
clc
ljmp
jbe
lahf
pop
loop
mov
inc
push
jle
cmp
loop
syscall
and
push
aad
pop
sti
adc
outsl
lock
sub
pop
cmp
cmp
rcr
dec
jp
jo
push
pushl
mov
jbe
sub
xor
pop
jno
or
push
adc
mov
mov
lcall
xor
sbb
lds
movsl
xor
mov
jae
pop
gs
sub
ss
pushf
inc
psrlq
add
pushl
sbb
and
jo
pushf
test
cmp
xchg
pop
outsb
mov
mov
mov
mov
or
jmp
aaa
es
hlt
or
jg
ret
mov
scas
mov
inc
jge
cmp
jg
daa
dec
std
fldenv
pop
arpl
pop
and
movsl
ss
jle
pop
adc
mov
out
push
push
jge
mov
cwtl
in
push
dec
push
cmp
scas
loope
jmp
pop
sub
and
aaa
popa
xor
xchg
jg
fdivrl
movswl
cmp
outsb
dec
test
xchg
iret
ret
inc
dec
xor
inc
or
pop
cli
xor
ret
or
movsb
xor
mov
outsb
lret
inc
std
push
jmp
ret
loop
adc
je
inc
pop
clc
call
popa
inc
imull
push
orb
cmp
aam
psubw
test
jg
mov
inc
faddp
enter
outsl
cld
adc
lcall
sub
xor
lret
dec
loop
insl
jno
push
hlt
sub
pop
inc
loopne
into
nop
in
dec
call
int3
push
in
andb
push
cmp
or
xchg
pushf
leave
adc
es
icebp
or
adc
adc
xor
lods
jbe
clc
adc
mov
push
ss
mov
jo
sbb
fcompl
in
pop
push
xor
dec
arpl
pop
and
mov
les
jmp
das
push
cmp
xchg
jnp
pop
es
inc
add
add
xor
or
and
mov
cmpsb
jp
add
pop
xor
lahf
sbb
inc
mov
iret
jg
pop
and
lea
dec
mov
pushl
jecxz
fcomp
mov
cmp
push
outsl
pop
call
mov
lret
ja
gs
sub
inc
aad
sbb
sub
test
fmul
sahf
iret
call
mov
cmp
xchg
push
mov
mov
cmc
xor
and
dec
push
xor
lods
int
mov
lret
and
adc
decl
jecxz
mov
pslld
cli
neg
push
inc
pop
call
inc
mov
lahf
shl
mov
pushl
rol
mov
inc
adc
dec
cmp
xor
repz
enter
inc
aas
ljmp
cmc
hlt
aam
adc
xor
xlat
fsubrl
xor
xchg
mov
lret
inc
xor
jbe
push
pushf
outsb
xchg
aad
aam
sahf
nop
jo
inc
js
mov
mov
pop
sub
push
xlat
std
out
call
icebp
out
mov
inc
pop
or
push
fbld
dec
repz
and
sub
rcl
adc
cmp
or
xor
je
sbb
xor
jecxz
mov
stc
pop
dec
push
cmc
into
push
inc
pop
iret
and
push
sub
scas
jmp
mov
push
mov
sub
inc
bnd
fwait
mov
mov
sub
fdiv
jns
loope
cli
push
outsb
fcoms
sub
xlat
push
test
fstl
mov
cltd
das
iret
cmp
sbb
xor
inc
mov
outsl
outsl
sti
incb
xor
inc
xchg
sbb
call
outsl
hlt
aas
or
lahf
outsb
adc
shl
jp
das
sar
dec
cld
mov
cmp
mov
not
adc
sbb
cmpl
loopne
cmp
mov
cli
jo
ret
call
xor
sbb
sbb
push
ss
push
es
decl
std
movsl
jns
das
inc
andb
adc
push
call
push
fstpt
sbb
call
add
pushl
jle
test
or
xchg
inc
push
fsubr
cltd
arpl
loopne
sar
call
scas
jecxz
inc
cmp
add
aam
mov
xor
xchg
cmp
decl
cmc
xchg
aam
lods
outsb
pop
add
arpl
popa
jp
cs
sbb
jle
xor
mov
fisubrl
das
ljmp
cmc
negb
pop
push
add
mov
add
rorb
das
scas
push
shlb
pop
outsl
sub
jle
fbld
or
inc
leave
mov
mov
inc
adc
and
push
rorb
mov
pop
dec
hlt
sahf
dec
sbb
sub
inc
jae
cmp
adc
add
inc
pop
clc
idiv
arpl
cwtl
cmp
adc
outsb
jmp
das
call
orb
lcall
pop
inc
enter
cmp
roll
imull
adc
sub
inc
jg
ljmp
adc
mov
sub
mov
pushl
sbb
rclb
jmp
xor
pop
mov
es
dec
sub
ss
xchg
sub
mov
lods
cs
orl
mov
and
or
sbb
gs
pop
clc
fistpll
sub
cli
jl
pop
movsb
test
sub
mov
cld
and
lock
pusha
inc
and
arpl
and
xchg
mov
and
xlat
mov
std
ret
add
test
and
pop
add
movsb
jl
outsl
cmc
cmp
jo
adc
mov
in
addl
jo
and
adc
xchg
and
or
jl
xchg
push
pop
popa
mov
push
popa
inc
xchg
subl
and
adc
pop
loopne
jg
pop
push
rcr
cs
aaa
js
enter
movl
insb
call
lret
sbb
jnp
pop
jg
fbld
mov
push
cmp
and
dec
xchg
sub
or
mov
decl
aas
jle
dec
repnz
test
test
adc
bound
jmp
stc
divb
icebp
pushl
add
sub
dec
sub
push
sbb
jb
and
xchg
mov
fimull
fdivrs
ss
mov
loopne
push
jge
sarb
mov
xor
push
mov
jp
cld
mov
scas
dec
in
repz
test
insl
pop
jle
inc
mov
xchg
cmpsl
add
nop
sub
cli
iret
nop
jae
cmp
mov
mov
jp
or
sbb
jne
mov
mov
incl
ljmp
mov
loop
out
dec
out
push
out
dec
mov
call
rcll
inc
pushf
inc
rolb
push
clc
ret
incl
addl
arpl
pop
adc
call
addb
inc
mov
dec
push
add
mov
lcall
lock
clc
inc
add
jmp
and
mov
cli
adc
in
or
jle
insb
outsl
clc
or
mov
out
sub
fisttps
push
jo
std
cli
inc
xor
mov
call
pop
pop
jecxz
jp
in
inc
jmp
xchg
cmp
mov
pop
imul
dec
add
push
push
sbb
out
inc
add
outsb
add
decl
into
test
mov
lods
sub
inc
xor
inc
xchg
aad
lret
sub
cmp
roll
fsubrl
mov
inc
xlat
lcall
jno
inc
leave
and
sbb
orb
pop
xlat
mov
jns
pushf
je
xor
push
jp
and
cld
xchg
push
cmp
gs
jg
push
pop
dec
enter
loopne
fwait
shlb
cs
mov
adc
sar
das
pop
dec
xor
jecxz
jmp
dec
dec
push
loopne
cmp
rorl
lods
mov
sbb
sub
dec
or
lock
enter
fcomip
jmp
ret
add
sub
sti
rcrb
xchg
pop
lea
mov
pushl
adcl
or
mov
aaa
jo
cli
clc
push
pushf
mov
mov
scas
push
pusha
rorb
pop
cmpsl
add
mov
mov
stc
xchg
nop
mov
jnp
outsb
jo
decl
inc
pushl
and
pop
cmp
popa
sub
lock
or
add
mov
cmp
dec
movsb
addr16
lahf
cmpl
in
pushl
call
add
push
pop
ret
arpl
jmp
push
into
int3
xchg
mov
pop
jb
push
inc
mov
add
insb
das
jge
mov
and
push
inc
in
lahf
call
mov
ret
and
cmp
pushf
inc
imul
aaa
sub
int3
inc
lahf
insb
ljmp
jae
inc
or
ds
ret
repz
incl
mov
pop
pusha
dec
dec
and
pop
jg
int3
imul
mov
xchg
jno
fldcw
lea
call
cmp
decl
jb
sub
pusha
test
jb
jae
or
jo
test
jl
inc
adc
call
adc
inc
jecxz
and
sub
add
and
sbb
xlat
mov
das
mov
inc
cs
push
popa
xlat
dec
sub
call
loopne
mov
push
outsb
imul
sbb
js
or
rcl
jmp
push
jl
jne
out
dec
test
adc
xor
xchg
cmpl
ljmp
shlb
ljmp
sub
aaa
fists
mov
pusha
sub
in
fs
inc
sarb
adc
sub
subl
je
ret
jbe
data16
call
mov
adc
and
aam
pop
cld
jp
in
inc
cmp
into
push
sbb
leave
jmp
push
imul
jnp
mov
mov
jo
icebp
jle
aas
or
gs
addr16
cmp
incl
loope
icebp
push
data16
in
movsb
lock
mov
pop
mov
push
out
out
mov
mov
icebp
loopne
cmp
adc
ud0
shr
imul
call
ss
push
incl
push
andb
or
dec
orl
call
fs
sti
inc
pushf
push
mov
push
jno
or
fistpll
loopne
push
push
jne
push
pop
call
pushl
or
xchg
push
xor
mov
jmp
scas
jne
dec
imul
insb
cld
inc
jno
jle
cmp
loop
mov
sbb
lcall
inc
push
lods
loopne
pusha
mov
imul
cmpb
mov
mov
mov
mov
pop
ret
test
ret
cltd
lods
push
mov
call
hlt
movsb
jns
xchg
xor
movzwl
aam
pop
xor
es
jg
or
push
pop
sbb
push
mov
pop
add
std
lret
repnz
jg
mov
or
imul
clc
dec
adc
mov
sub
loopne
in
mov
enter
aaa
ficoml
enter
test
jg
push
and
and
xchg
and
or
and
add
mov
jmp
inc
nop
and
sub
dec
jl
cld
push
push
cmp
jecxz
addl
negb
add
adc
or
pop
adc
sbb
xchg
incl
std
adc
xchg
stos
insl
add
movb
mov
mov
lret
decb
sub
pop
lods
cs
adcl
lea
mov
aad
ljmp
mov
pushf
decb
and
sbb
cmp
mov
fwait
jecxz
cwtl
sub
pop
addb
jp
out
insb
push
xor
test
pushl
push
xchg
leave
jg
jmp
pop
pop
fcoml
lods
leave
mov
aad
dec
std
call
sub
cli
mov
lock
xchg
xor
inc
push
cmp
stos
jecxz
mov
decl
call
mov
jnp
adc
cmp
ds
sbbl
in
jmp
icebp
stos
insb
incl
je
sub
push
or
mov
dec
or
mov
enter
orl
mov
incl
jl
ja
loopne
dec
and
mov
push
jle
dec
call
cmp
or
jb
cli
test
into
lods
test
je
cmp
pop
inc
movsb
js
add
dec
cli
aaa
push
call
sub
mov
jecxz
ljmp
dec
adc
out
cmp
dec
and
cltd
cmp
pop
or
dec
cmp
or
loopne
or
cmp
jb
inc
dec
pusha
jmp
cld
pop
mov
mov
inc
mov
mov
ljmp
jle
test
dec
ret
pop
inc
mov
icebp
cmp
jle
jmp
dec
ja
mov
inc
xor
mov
xor
adc
arpl
pop
xor
arpl
jle
push
ljmp
cmc
in
inc
or
mov
nop
push
jb
xor
cmp
mov
out
jl
jg
dec
fistpll
sahf
ds
jns
pusha
mov
das
xorb
jmp
mov
mov
int3
mov
jne
pop
shrl
sub
mov
leave
inc
mov
or
fcompl
jbe
push
pop
ss
bound
mov
rorb
mov
and
push
and
cmp
mov
shlb
pop
cld
push
and
push
and
mov
fcmovnu
repnz
fsubr
pusha
xchg
movsl
jp
repnz
hlt
jp
mov
adc
in
call
lahf
pop
push
push
sti
jmp
pop
xchg
or
ja
aaa
fisubrs
cld
ror
or
jmp
jb
addr16
cmp
cmc
aas
mov
inc
les
mov
or
cmp
add
sub
pusha
dec
jnp
negb
cmovbe
and
fistps
jp
movsl
mov
sti
repz
xchg
pusha
orb
jle
jecxz
jg
outsl
cmc
inc
jmp
fiadds
dec
cli
pusha
push
jl
ljmp
jmp
scas
jp
out
fdiv
or
sub
xor
bound
inc
outsb
lods
jnp
mov
clc
loop
jp
mov
nop
loop
jl
in
arpl
inc
loopne
lods
decl
dec
adcb
icebp
jg
orb
dec
enter
lcall
and
int
push
daa
cs
sti
push
adc
dec
mov
enter
scas
sub
jg
decl
cmp
data16
pop
fcmovne
sub
aad
adc
or
adc
outsl
jge
data16
inc
cmpsl
pop
inc
cs
fcmovnu
ljmp
scas
in
in
inc
sbb
icebp
sbb
popa
sbb
iret
sahf
push
fcmovu
xor
cmp
pop
push
pop
or
push
sbb
sub
repz
pushf
lea
and
xchg
js
jle
fwait
mov
loop
int3
call
and
mov
jge
xor
adc
lcall
call
fists
call
pop
rcrb
sbb
sub
repz
dec
cmp
sub
mov
xchg
test
outsl
sbb
out
jbe
rorb
repnz
push
pop
adcb
inc
into
jbe
les
arpl
dec
or
jl
cmp
ljmp
sub
clc
int3
loope
sub
push
sub
inc
lock
mov
cmp
testb
aaa
jle
inc
pushl
inc
fmuls
scas
jae
xchg
out
repz
pop
dec
mov
sub
push
clc
in
pop
mov
inc
xchg
clc
add
dec
les
mov
mov
jb
movsb
jmp
push
jg
cs
adc
rcrl
cmp
dec
xchg
push
push
xchg
lcall
pop
jp
xchg
mov
decl
pop
test
pop
or
jmp
out
cs
sbb
ljmp
inc
mov
out
add
xlat
push
rolb
pop
cli
jae
jmp
int
dec
loop
xchg
sbb
sar
jg
mov
push
in
xorl
nop
loop
jne
out
lss
fstpt
mov
sub
pop
pop
mov
cmp
inc
jno
add
rcrb
xchg
sti
add
mov
out
pop
ss
jg
jae
jae
sub
imul
mov
and
aaa
or
dec
enter
add
pop
mov
add
leave
or
pop
sub
jmp
ret
xchg
cmp
push
cmc
xor
jae
push
add
js
push
push
pop
jo
fistpll
js
pop
test
dec
subb
out
js
jmp
fs
bound
test
jmp
in
fisttpl
sbb
test
dec
mov
ljmp
fmull
outsl
push
dec
xor
dec
pop
sub
push
or
nop
and
addr16
jb
sbb
decl
hlt
cwtd
js
jmp
into
mov
loopne
jl
sub
je
lods
enter
loope
jg
test
dec
mov
mov
cmpsb
sub
lcall
inc
incl
out
iret
add
mov
fiaddl
test
rorl
inc
cmp
adc
jns
jg
or
aaa
xor
sub
mov
dec
mov
push
dec
add
in
in
mov
jmp
xchg
jg
mov
inc
jecxz
xor
sbb
jmp
lods
lret
jle
cmp
testb
push
jg
or
mov
repnz
nop
mov
bound
into
repnz
xchg
or
aaa
push
repz
mov
jge
jmp
inc
outsb
lock
lcall
mov
inc
jle
out
out
shrb
outsl
and
mov
loopne
jo
cmpsl
hlt
clc
jp
icebp
decl
test
scas
leave
push
test
fwait
and
mov
cltd
xchg
sarl
jnp
mov
and
gs
lcall
sub
jo
jp
fldl
mov
or
ljmp
cmp
mov
mov
pop
dec
sbb
push
dec
or
jg
jg
add
dec
jno
cli
outsl
mov
into
jno
cwtl
faddl
int
pusha
jg
in
fcomip
ja
mov
sbb
jns
lods
pop
xor
dec
cs
cwtl
xchg
mov
push
fmulp
repz
inc
sub
cmc
mov
jg
in
and
loopne
stos
mov
or
mov
push
cmp
cmp
jg
jns
push
mov
scas
pop
xor
sbb
test
and
xor
incb
push
jmp
add
inc
repnz
and
jecxz
mov
jnp
mov
jge
dec
mov
mov
out
js
sub
ljmp
add
jb
clc
inc
push
js
dec
and
dec
ret
jns
cmp
lea
cli
incl
ret
jle
jg
xchg
cwtl
cwtl
out
ja
pop
test
das
inc
enter
out
xchg
loope
aad
jg
jg
clc
push
test
sub
out
mov
ret
pushl
sub
mov
in
int3
xor
cmp
sbb
or
movsl
pusha
push
dec
jnp
sub
repnz
jmp
and
add
jle
dec
repnz
pop
loopne
lock
into
pop
adc
test
gs
mov
stos
in
or
fs
ss
mov
xchg
cmp
push
push
mov
les
pop
ljmp
jg
dec
fs
cwtl
push
test
pop
sbb
jp
add
outsb
and
sub
mov
lret
ja
arpl
lcall
in
int
jo
ret
ds
mov
sbb
stc
cmpb
shll
pushl
cmp
pusha
clc
fdivr
jg
inc
mov
pusha
dec
push
sbb
mov
fwait
ja
lods
jnp
shlb
in
aas
neg
in
xchg
cmp
loopne
jne
mov
mov
jmp
jnp
mov
cmp
les
decl
mov
data16
in
les
addr16
fadds
sti
std
jo
adc
jecxz
jp
adc
fstpt
cmp
out
adc
sbb
jns
cmp
inc
pop
pop
sub
hlt
inc
sarb
pushl
pop
pop
push
push
cmp
or
call
das
jae
jecxz
mov
nop
jnp
clc
mov
cli
ljmp
sti
bound
and
shrb
sbb
xchg
push
xchg
pop
cli
jp
push
jecxz
ret
outsl
mov
movsl
scas
emms
jnp
js
incl
mov
inc
mov
loop
jge
xchg
outsb
or
sbb
pop
adc
cltd
scas
scas
and
sti
loop
mov
sub
sub
std
or
fcom
in
ljmp
push
jae
jle
or
stc
out
out
pop
fisttpl
in
imul
add
pop
loop
stos
cmpsb
lcall
fsubrs
xor
sub
arpl
scas
subl
jg
mov
cmp
iret
stos
test
sub
push
lret
insb
dec
fisubs
jl
inc
lods
out
push
fwait
js
sub
mov
push
dec
movsb
mov
cs
lods
cmp
loop
stc
outsb
xor
cmp
nop
mov
mov
ljmp
xchg
add
bound
int3
and
in
jne
js
cmc
cmp
sub
pop
cs
adc
lods
jecxz
sub
fisubrs
or
ljmp
push
dec
insl
push
vmread
ds
enter
out
filds
xchg
push
bound
mov
inc
cmp
jle
out
icebp
data16
dec
jg
dec
outsb
dec
mov
pusha
jp
clc
dec
cld
incl
or
stos
sbb
bound
out
jb
xor
inc
cld
dec
std
pop
xchg
mov
push
cmp
cmp
lret
negl
cltd
sbb
mov
and
loop
push
outsl
cld
lcall
roll
jge
aas
enter
mov
add
jae
popa
mov
cltd
out
outsl
sub
sub
inc
js
xchg
jle
jg
mov
jl
inc
popa
fadds
test
in
add
rolb
loopne
jecxz
cltd
sbb
mov
test
incb
call
int
enter
pop
pop
fadds
push
int3
fst
outsb
jmp
mov
out
jle
test
and
repnz
xor
jg
sbb
je
test
das
fisubs
xor
jnp
out
sbb
jno
out
das
lock
clc
shll
cmc
pop
outsl
jg
push
fst
ss
lock
loop
test
push
add
or
decl
decl
data16
fidivrl
mov
adc
push
sbb
repnz
loopne
scas
nop
mov
cmp
cmpsl
add
shl
popf
xor
dec
jb
dec
sbb
lods
fucomip
mov
mov
out
in
mov
dec
cmovl
lcall
hlt
es
jns
lods
ds
imul
jae
rcr
loopne
inc
cmp
cmp
jle
les
sub
nop
jbe
jl
push
dec
inc
sub
and
std
cwtl
jne
push
jle
or
fwait
arpl
clc
jg
inc
jnp
lret
out
inc
jnp
cmp
jae
int
pusha
jle
das
cmc
jns
int3
sub
cltd
push
cmovb
movsl
and
hlt
pop
cli
mov
fsubrl
cmp
dec
cmpsb
into
jl
xor
fadds
jg
jnp
jmp
insl
incl
scas
shl
mov
cltd
xor
addr16
inc
xchg
xor
mov
lds
push
flds
xchg
and
das
mov
int3
outsb
mov
mov
mov
xchg
push
enter
bound
jb
outsl
and
in
decl
jg
pusha
xchg
push
rclb
int
cmc
les
bnd
xchg
push
lret
sbb
std
pushl
repnz
cmc
and
shlb
push
sub
xor
add
clc
xchg
xlat
jae
push
mov
out
cmc
inc
hlt
xor
xorb
mov
das
hlt
aaa
insb
test
mov
scas
bound
lret
inc
pop
bound
decl
cld
push
leave
sub
and
push
ja
jb
movlps
incl
xor
je
call
test
pushf
pusha
add
aas
jl
sub
mov
int3
jp
movsl
decl
out
lret
xlat
faddl
scas
mov
ficompl
je
iret
ljmp
sub
rorb
hlt
add
push
pop
lea
out
pop
xchg
scas
dec
cmp
repnz
mov
mov
mov
adc
sub
sub
sbb
adc
lcall
mov
sub
aas
adc
mov
cli
pop
dec
mov
xor
jp
xchg
cmp
popl
jns
xchg
out
jo
outsl
pop
stos
leave
daa
outsl
or
pop
pop
pushf
xchg
jg
scas
stc
cmp
jp
push
aaa
das
dec
xor
lret
mov
test
leave
inc
rep
outsl
push
sbb
dec
es
imul
call
inc
loopne
dec
cmc
aad
xchg
mov
dec
fucomp
jp
xchg
mov
jg
icebp
inc
xchg
cmp
jae
neg
and
jbe
arpl
std
ljmp
jle
dec
insb
jl
pop
dec
mov
imul
insb
decl
cld
test
inc
data16
jmp
sti
sub
jbe,pn
jecxz
js
call
mov
shlb
adc
jecxz
js
dec
push
cmc
mov
lcall
bound
js
dec
lcall
loop
repnz
dec
xchg
mov
cld
dec
push
inc
in
mov
out
xchg
sti
aaa
clc
pushl
jmp
pop
nop
jae
cs
out
jmp
push
outsl
std
jg
xchg
fdivrp
inc
pop
stos
sbb
jnp
arpl
mov
jg
decl
adc
sub
push
jnp
mov
scas
clc
jg
inc
dec
ds
test
sti
mov
adc
pushl
push
sub
add
push
jno
and
mov
or
pushl
hlt
ljmp
xor
js
dec
call
ficomps
mov
imul
xchg
dec
jp
cs
mov
int3
js
dec
test
pushf
sti
mov
jp,pn
cld
mov
dec
cmp
and
adc
or
add
cmpsb
lret
out
arpl
cmc
js
sbb
int3
xchg
mov
pushf
pop
mov
lret
aam
call
inc
or
push
cs
or
jecxz
js
das
imul
or
add
incl
xor
inc
dec
sbb
subb
jecxz
js
mov
call
jnp
stc
loopne
cmpb
sbb
movsb
inc
push
or
fwait
jle
ss
xor
jae
testb
adc
mov
or
sti
subb
push
or
cs
xor
jg
aaa
cltd
sbb
shrb
inc
sub
pop
outsl
cmpsl
push
jecxz
pop
sub
pop
call
cmp
sbb
jp
push
data16
mov
jp
mov
in
xor
sbb
xchg
test
inc
xor
push
les
cmp
add
mov
pop
push
pop
push
ds
shl
sub
mov
xchg
mov
inc
and
enter
push
aas
sbb
rclb
and
pusha
xor
inc
add
lcall
lret
std
adc
cmc
sbb
cmpsb
mov
out
dec
cmp
imul
push
jmp
and
rolb
mov
les
mov
loop
loop
scas
add
test
lods
jne
decl
cld
sarb
inc
dec
adc
lock
nop
mov
sbb
sub
sti
jnp
mov
sbb
cli
sbb
scas
fsubp
dec
pop
mov
mov
lds
pop
push
dec
add
sahf
scas
inc
mov
movsl
les
push
incl
add
pop
rcll
mov
pop
add
decl
stos
or
sar
into
das
mov
jbe
jmp
fldcw
mov
add
in
inc
mov
and
nop
aaa
push
loope
stos
rcll
mov
mov
xchg
addr16
shrb
jo
mov
outsl
cld
cwtl
add
inc
xchg
imul
dec
loopne
xlat
push
cli
sbb
call
push
add
or
mov
mov
sub
stc
cmp
add
mov
jmp
jbe
mov
dec
pop
mov
xor
mov
mov
sub
add
inc
and
decb
xor
xchg
loop
and
dec
push
mov
out
movsl
pop
enter
mov
lock
push
lret
divb
add
pop
outsl
std
mov
mov
repnz
sub
add
jno
inc
sub
pop
push
dec
push
aam
ljmp
lcall
cli
insl
int3
sbb
lcall
add
fisttpll
pusha
gs
mov
xor
pop
or
outsl
cmc
mov
rorl
mov
mov
in
xchg
in
test
imul
dec
add
je
imul
mov
jle
ss
clc
cmp
movsb
cmp
add
addr16
xor
mov
add
pop
rclb
jb
decl
sub
xor
mov
jle
push
dec
ss
push
mov
mov
loop
mov
addb
xchg
jmp
cmp
and
cld
dec
stos
fildl
mov
stos
ljmp
mov
push
xchg
lahf
add
fildll
jg
add
jp
insl
sbb
pushl
lcall
ret
dec
imul
lds
divb
add
mov
aas
or
dec
xlat
pop
sub
inc
out
stos
jb
ljmp
in
and
add
les
inc
add
jg
loopne
insl
popa
xchg
int3
pop
dec
add
daa
pop
ret
mov
aaa
imul
call
mov
xor
outsb
mov
movb
xchg
sub
lahf
bound
lahf
push
sub
push
stc
or
aad
xchg
push
lahf
ja
js
push
jle
cmp
jg
ljmp
xlat
pop
loopne
negb
jmp
stos
sub
sbb
lock
fidivl
pop
ds
xor
test
mov
push
rcl
xchg
cli
mov
fdiv
pushf
shrl
inc
mov
xchg
stos
add
push
cmp
jp
jle
jmp
add
pop
sbb
mov
imul
decl
int3
add
mov
inc
mov
push
in
xor
outsl
call
add
cltd
lret
add
inc
sbbl
jg
stos
add
sub
pop
les
pushf
push
rcl
cwtl
mov
mov
insl
repnz
add
lahf
pushf
fiadds
out
jmp
fsts
cmp
cwtl
mov
fadds
pop
xor
mov
jno
push
mov
ja
mov
out
push
movsl
xor
cld
call
outsl
jnp
push
stos
mov
addl
loopne
out
push
int3
fwait
shrl
ljmp
cltd
out
cmpsl
jne
fistpll
adc
popf
cmp
or
or
stc
cld
add
inc
fst
pop
jge
subl
cmp
xchg
decb
cwtl
lea
ljmp
lcall
cld
out
mov
mov
mov
push
add
fcmovne
gs
sbb
add
shll
xor
cmpsb
add
lahf
ss
inc
jns
mov
imul
leave
hlt
jge
cld
push
adc
aaa
cli
movsl
decb
xchg
in
fisubl
addl
push
shl
je
mov
xor
cli
sarb
jp
shlb
ljmp
js
dec
jae
mov
mov
jo
push
outsl
andl
or
cmp
sti
loope
sub
lcall
ljmp
pushl
sub
or
leave
fs
xor
incl
push
push
fwait
jl
inc
xor
push
add
push
and
popf
xchg
xor
lcall
std
ljmp
add
repz
inc
push
mov
push
ljmp
sbb
jg
mov
sub
or
in
cmp
shlb
and
stos
xchg
outsb
push
xor
push
pop
loopne
sahf
jecxz
xchg
lods
pusha
push
adc
or
mov
xor
push
jmp
adc
scas
xchg
or
jg
pushf
pop
js
int
stos
push
xor
push
pop
aad
dec
xor
arpl
and
ss
add
leave
test
pop
dec
aas
loopne
loopne
inc
sub
popf
loop
cmp
add
xchg
outsb
imul
xor
or
pop
out
fsubs
sub
iret
dec
push
inc
jg
mov
jg
ljmp
mov
test
inc
and
mov
push
outsl
hlt
or
ficompl
push
test
hlt
icebp
mov
fdivrl
in
cld
push
jb
call
imul
outsl
adc
dec
mov
mov
jmp
pop
push
cmp
pop
jno
out
test
addr16
neg
mov
inc
movsl
adcb
ljmp
pop
ljmp
push
add
aad
outsl
aam
add
inc
jmp
or
xchg
cmpsb
jno
pop
add
repnz
sbb
mov
pushl
fwait
cmp
jb
cmp
imul
loope
push
dec
adc
int3
sarb
rcll
mov
jge
mov
js
pop
cld
push
jl
test
mov
mov
out
bound
xlat
sub
popa
cmp
push
cmp
scas
or
xor
lahf
outsb
ficompl
inc
push
outsl
cld
sbb
pop
adc
mov
rorl
jo
jg
imul
cmpsl
sub
push
push
pop
call
cmp
sbb
or
cmpsl
cmc
inc
ljmp
incl
incl
add
lds
lahf
xor
and
push
or
fdivrp
decl
xchg
loop
andl
sub
cld
ds
xchg
ljmp
mov
add
add
add
push
pop
sub
cmpsb
ljmp
call
mov
jne
cpuid
das
cmp
sub
dec
or
sub
pop
jo
cwtl
xchg
lahf
push
test
mov
xchg
inc
inc
stc
add
sbb
cmpsb
ss
insl
dec
mov
xor
jb
cmpsl
dec
and
fisttpl
decl
and
jmp
jbe
rcrb
stos
jns
sbb
pushl
xor
out
imul
pop
xchg
mov
cli
pop
fcomps
add
mov
and
pop
cli
stos
gs
sub
test
mov
aad
icebp
testb
sub
mov
xor
inc
add
inc
lcall
sahf
loopne
flds
outsb
jb
mov
xchg
push
lea
jg
je
sub
adc
stc
adc
ljmp
mov
sbb
xlat
mov
xor
jmp
popf
ljmp
jns
hlt
cmpsb
out
xchg
add
call
mov
imul
ret
imul
ljmp
mov
cltd
into
test
or
mov
inc
jne
and
repnz
incl
add
add
dec
mov
out
inc
push
mov
inc
push
xchg
cli
lcall
xchg
push
jge
push
sub
xlat
dec
dec
jno
jmp
xor
push
xor
mov
rolb
ljmp
cmp
incl
adc
cmp
xchg
pusha
inc
cmpsb
pop
pop
mov
lahf
and
outsb
mov
lds
jg
mov
ficompl
testl
mov
shr
scas
jge
mov
and
and
cmp
in
jle
pusha
and
lcall
sub
sub
pop
andb
insb
mov
cmp
mov
in
add
mov
xchg
jns
xchg
out
add
and
jmp
and
jo
add
mov
pop
cli
cmp
cld
push
repnz
mov
loopne
cmp
pushf
inc
pop
call
jle
imul
pusha
sbb
jbe
jne
xor
mov
outsl
outsl
icebp
dec
or
lahf
addr16
bound
lods
imul
jmp
jnp
pop
bound
jle
add
bound
lcall
jns
mov
imul
mov
into
add
cmp
push
mov
test
jmp
inc
cmp
gs
push
bound
clc
into
fidivrs
je
iret
lods
cmp
jp
mov
sahf
jns
call
out
jp
gs
adc
push
rclb
add
xlat
mull
jp
clc
mov
lea
adc
jmp
cwtl
imul
push
mov
bound
sahf
repnz
xchg
dec
mov
lcall
jg
jns
cmp
add
xor
or
test
sub
rolb
add
lock
lcall
add
mov
cmpsl
bound
ja
clc
icebp
or
jmp
incl
mov
cmp
jb
sbb
mov
mov
call
or
lea
push
cmpsb
inc
pop
pusha
adc
cmp
mov
or
sti
icebp
ltr
cmc
mov
clc
cltd
mov
scas
aaa
pushf
lret
lods
dec
imul
test
sub
dec
inc
movsl
adc
or
insb
ficoms
sarl
dec
in
xchg
fs
push
sbb
call
lret
xchg
add
stos
jne
testl
dec
adc
push
sbb
lea
clc
fistpll
scas
push
dec
inc
dec
push
stc
add
push
xchg
adc
dec
pop
pop
cmp
add
xlat
ds
dec
push
sub
mov
mov
mov
es
cmp
out
cmp
std
mov
add
jne
xor
insl
inc
sbb
mov
sbb
sti
push
test
add
hlt
fnstsw
ljmp
decl
aas
or
or
sbbl
sbb
stos
bound
sbb
ljmp
in
fcmovnu
sub
fidivl
insb
lahf
jl
in
adc
lds
lcall
arpl
adc
add
test
cwtl
mov
repz
fmuls
fldl
cmp
rolb
sub
cmp
loope
clc
decl
in
imul
in
adc
sbb
lahf
call
ljmp
lock
adc
sbb
out
or
test
jle
ds
pop
loop
xchg
cld
sbb
cmp
and
movsb
icebp
lcall
and
sbb
xchg
xchg
xor
add
movsb
sub
test
ljmp
xor
jg
sub
imul
bound
cmp
ja
jg
std
ljmp
sub
sub
sti
pop
jmp
cmc
scas
and
xchg
leave
jbe
fwait
loopne
ljmp
adc
testb
xor
fnstcw
dec
push
mov
ljmp
cwtl
ret
outsb
fmuls
mov
xor
outsl
ret
int3
xchg
and
jg
jnp
lea
idiv
pop
mov
stos
xor
or
jne
sub
dec
into
jmp
push
mov
jo
out
lds
cmp
pop
jae
pushf
mov
repnz
xchg
cmp
dec
ljmp
push
lds
int
lock
stos
sahf
ret
incl
gs
ds
sub
xchg
mov
loopne
sub
cli
pop
insl
cld
dec
adc
sti
fnstsw
jns
pop
lcall
cmc
mov
mov
cmp
mov
mov
add
ljmp
mov
es
and
fdivl
cmp
adc
mov
add
jns
popf
and
xor
or
lcall
insl
pop
ss
packssdw
sbb
loop
sub
jbe
ja
sub
scas
and
int
adc
scas
lcall
lea
cmpsb
rol
sub
inc
fidivrs
cmp
jo
sarl
lcall
lcall
pushl
int
out
mov
xchg
jge
sub
mov
add
xchg
cmpsb
hlt
std
or
ljmp
call
pop
push
inc
adc
fldt
jae
lock
outsl
xchg
addr16
sub
cli
mov
pop
mov
loopne
scas
cld
repnz
out
out
cltd
mov
mov
test
mov
cmp
subb
add
ljmp
jo
add
or
mov
mov
sbb
mov
jp
and
add
aam
or
ja
jnp
sub
adc
push
jo
sbb
outsl
jne
add
xor
jl
fisubs
mov
cmc
or
scas
fs
xchg
aas
dec
mov
ljmp
daa
add
stc
mov
fucomi
daa
mov
incl
loope
mov
push
rol
cli
adc
insl
out
idivb
popa
xor
or
lods
inc
outsl
ljmp
cmp
mov
adc
dec
imul
or
out
imul
mov
bound
aam
mov
mov
mov
das
mov
pop
stos
in
add
aaa
sub
movsb
jle
xor
jns
testb
sbb
into
insl
cli
or
fucomip
outsl
mov
add
sarl
jne
das
mov
enter
inc
mov
or
mov
inc
mov
jecxz
jecxz
call
imul
and
mov
ljmp
cmp
xchg
push
mov
or
cmp
ds
add
mov
or
rcrl
dec
bound
out
std
cld
imul
mov
dec
fidivrs
lock
test
sbb
xchg
dec
sbb
sub
cmp
sbb
jg
outsl
xor
arpl
or
xor
jmp
stos
mov
js
popa
push
or
dec
push
cli
jg
imulb
idivl
push
cmp
mov
in
aad
bound
xchg
mov
sbb
ficomps
std
shll
mov
scas
shlb
and
pop
cmp
into
stos
pop
cmp
outsl
incl
mov
bound
adcb
mov
dec
ljmp
dec
xor
popa
pop
movsl
mov
jno
jne
adc
mov
test
or
outsb
cmpsb
dec
add
loope
pop
sub
clc
cltd
cmp
call
mov
outsb
add
outsb
or
xchg
cmp
jl
jmp
jnp
decl
ds
lods
mov
xor
jp
xchg
fdivrs
into
es
adc
decl
push
out
mov
jne
incb
fistpll
shl
data16
pop
and
and
shll
filds
andb
jne
inc
inc
push
xor
imul
push
incl
ret
and
pushf
add
jg
outsl
je
mov
fucomip
ljmp
std
pop
adc
lcall
cmc
lods
pop
ja
incl
mov
clc
sub
vorps
xor
dec
and
sub
push
fdivr
jb
mov
jg
lret
sahf
inc
test
sub
stos
or
mov
jb
lods
loop
pop
add
and
cmp
out
sbb
push
xchg
sbb
cld
lcall
jb
xor
cli
in
jbe
int3
out
sbbb
sub
ljmp
sub
xlat
adcb
push
add
jae
sbb
add
mov
outsl
push
icebp
bound
pop
adc
lods
push
jo
sbb
outsl
pop
jp
dec
adc
inc
mov
ljmp
mov
or
ret
test
insl
lcall
mov
mov
or
je
fildll
jb
lods
push
sbb
pop
or
decl
dec
sahf
scas
lret
jmp
push
mov
jne
inc
sahf
sub
imul
out
sbb
jg
fisubs
nop
jo
mov
jb
sub
jp
inc
cld
out
enter
clc
add
or
sahf
jnp
jnp
mov
gs
cltd
movsl
mov
clc
enter
add
and
xchg
push
data16
scas
out
mov
xchg
filds
xor
mov
sub
add
incl
flds
stos
inc
mov
nop
adc
je
repnz
lods
dec
lret
outsl
lock
js
xchg
imul
sub
out
fs
inc
inc
repnz
out
fisubl
or
fsub
or
add
add
jle
clc
imul
cmp
xchg
mov
lods
cmpsl
fcomps
ljmp
xchg
cwtl
aas
mov
cmc
fbstp
in
clc
lods
jbe
fcoms
lret
jp
cld
decl
sub
xchg
cmp
incl
iret
outsb
scas
arpl
aaa
push
push
dec
inc
imul
mov
cli
pop
xchg
stos
fs
mov
jo
or
cmp
jg
nop
sbb
push
jo,pn
or
xchg
adc
ret
dec
jae
cmp
test
mov
ss
inc
cmpsl
adc
adc
das
cld
inc
inc
push
sub
call
hlt
inc
xchg
call
es
ret
jg
arpl
out
enter
lcall
or
rclb
call
jmp
jecxz
dec
or
mov
outsl
mov
js
lahf
enter
rcrb
sub
cmp
data16
cli
aas
pushf
cli
fsubrs
push
ret
xor
stos
add
loop
jns
mov
inc
sbb
and
cmp
ret
int
outsl
xchg
jbe
jno
xchg
cli
call
mov
dec
sbb
jnp
pop
outsb
ja
cmp
ss
fcomps
imul
pushl
push
inc
adc
imul
mov
sbb
jp
jo
mov
decl
shll
mov
lock
test
dec
jb
pop
adc
in
outsl
ljmp
cld
lcall
push
insl
popf
and
stos
and
out
push
nop
or
jg
xchg
es
test
ljmp
xor
in
les
fsubs
out
jecxz
mov
add
rclb
call
xchg
push
mov
and
and
test
ljmp
xchg
mov
inc
xchg
nop
push
pusha
sub
cmc
push
shlb
pop
ret
xchg
pop
fsubrs
lret
adc
pushl
jae
ljmp
xor
push
sub
call
clc
in
cmp
add
stos
arpl
mov
scas
sbb
jbe
jnp
mov
pushl
clc
dec
ss
data16
addb
into
jno
inc
xor
movsl
pop
cld
clc
jecxz
arpl
push
jle
fwait
popa
in
ljmp
stos
mov
cmp
and
cltd
push
gs
sbb
pop
je
ljmp
les
sub
mov
ja
loop
xor
leave
mov
ljmp
add
and
mov
mov
cmc
fcoml
sub
inc
out
xchg
sti
out
push
ljmp
fmul
xchg
or
negl
sti
jmp
mov
and
mov
lcall
iret
jns
mov
adc
push
sub
call
imul
cmc
push
adc
stc
call
mov
cmpsl
or
cmpl
and
insb
std
lods
mov
cmp
push
cwtl
dec
lret
adc
mov
pop
data16
dec
mov
divps
jecxz
mov
mov
mov
cs
outsb
mov
mov
add
lea
not
nop
push
bound
cmp
sub
jle
or
mov
push
das
xchg
pop
jg
es
sbb
shrb
lock
push
jl
xlat
add
cmpsl
cmc
in
call
hlt
fnstcw
xor
enter
jne
mov
adc
jg
addl
ljmp
xchg
jg
push
in
push
lods
pop
dec
imull
cld
outsl
cmc
ljmp
enter
jmp
jle
pop
dec
xlat
dec
xor
push
mov
mov
or
loop
dec
adc
mov
lods
in
mov
cli
repnz
stos
lret
mov
and
outsl
int
jp
dec
cmpsb
xor
add
sbb
inc
dec
jg
and
insb
dec
mov
cmp
xchg
sbb
andb
mov
pop
sub
lcall
xchg
scas
xchg
jle
dec
xor
popf
inc
add
outsb
fisubl
cmp
clc
push
lds
fxch
mov
pop
ret
std
aaa
cli
push
lret
cmc
fildl
test
outsb
jmp
or
sbb
pop
adc
mov
inc
mov
lcall
inc
inc
imul
dec
dec
fiadds
inc
adc
arpl
imul
ja
mov
sub
sub
ljmp
push
and
mov
push
unpckhps
add
push
jnp
out
jg
je
xlat
sahf
imul
sbb
imul
lcall
stos
mov
push
pop
mov
xchg
pop
movsb
xchg
cmp
push
jmp
gs
mov
or
push
push
cli
dec
add
xlat
repnz
mov
cltd
adc
lods
adc
push
push
je
imul
movsl
sbb
jo
enter
mov
xor
scas
stos
sub
mov
pushl
mov
jmp
mov
mov
xchg
enter
leave
subl
sub
jmp
mov
inc
pop
xor
mov
or
mov
insb
data16
ljmp
jge
in
mov
adc
cmp
or
adcl
test
jno
mov
out
jl
mov
popa
xchg
pusha
ljmp
movsl
ljmp
and
sub
jg
add
sub
std
or
mov
mov
pop
inc
adc
pop
or
jbe
mov
decl
mov
cmpl
xlat
inc
orb
xor
imul
popf
mov
test
pop
loopne
es
xor
je
mov
or
jge
jmp
mov
lret
xor
clc
sbb
add
test
add
call
fidivs
inc
sub
push
lods
push
mov
aad
shl
pop
jp
xchg
ret
pop
pushf
pusha
rorb
dec
jl
insl
pop
test
std
in
sbbb
decl
das
push
fistpl
pop
push
les
lret
jae
fldcw
add
xor
add
es
jne
lret
cmp
sbb
in
jg
insb
add
jle,pn
cmp
lahf
in
aam
cmpsb
sub
les
lds
push
mov
std
dec
in
shll
outsb
stos
xchg
sub
mov
mov
dec
inc
decl
push
out
loope
mov
mov
pop
mov
cld
or
dec
fwait
push
add
push
pop
int
movsl
in
into
pop
inc
sub
mov
loope
mov
and
mov
jl
je
leave
fiaddl
sbb
push
lods
loope
add
fs
sub
pop
ret
dec
test
xor
xchg
lock
mov
clc
xor
lds
lret
insl
cwtl
and
popa
pusha
jp
and
mov
lcall
sahf
pop
add
xchg
mov
movsl
jg
sbb
lods
jbe
ficoml
jne
xor
es
jecxz
les
nop
and
sbb
cli
cmp
int3
stos
repnz
cmpsl
pop
icebp
push
fistpl
leave
jnp
call
adc
ljmp
lret
inc
push
mov
mov
sahf
xchg
ljmp
dec
fwait
js
jno
cmp
sbb
mov
cmpl
ret
xor
sbb
lret
cs
hlt
inc
lcall
sbb
call
daa
add
or
push
mov
and
inc
mov
movsl
sub
sbb
stos
sbb
aad
cmp
aas
ret
popa
sub
xchg
out
rol
aaa
ljmp
das
lock
xchg
sbb
fisttpl
into
ss
cmp
sub
enter
arpl
cs
lcall
or
xor
movsb
xor
dec
mov
loopne
dec
push
js
inc
shl
hlt
lret
out
sbb
jg
aam
js
fidivrl
add
aas
imul
push
cli
jecxz
das
add
pop
xchg
mov
cmpsl
insl
pop
mov
fisubl
pop
clc
push
movsl
std
test
stos
mov
aad
lock
dec
push
in
mov
or
and
jmp
aaa
add
jbe
cli
lcall
add
jmp
jns
adc
jne
hlt
cmp
lock
sbb
addr16
arpl
adc
jecxz
mov
xor
jecxz
js
dec
pop
and
jmp
movsb
mov
sub
and
mov
dec
fsubrl
in
clc
loop
and
dec
sbb
and
sub
xor
cmp
jecxz
js
dec
pushf
and
sti
in
jp
call
cmp
pop
cs
mov
cwtl
js
add
sti
fmuls
cs
cmp
daa
adc
mov
dec
in
and
out
sub
jecxz
js
dec
inc
and
call
push
dec
push
nop
js
dec
movsb
and
adc
aam
fmull
cltd
sti
hlt
dec
cld
pop
add
decl
arpl
adc
jecxz
js
dec
sub
xor
cmp
inc
cs
push
jecxz
js
dec
js
xorb
pushf
test
les
add
data16
fdivr
in
hlt
xor
push
pop
jecxz
js
dec
cwtl
incl
sub
mov
cld
jnp
sub
and
dec
sti
pop
cs
mov
adc
and
mov
push
pusha
jecxz
js
xor
cs
jmp
xor
sti
ja
push
sti
push
test
or
add
divb
jl
mov
in
hlt
jnp
das
pop
dec
and
xor
lock
push
cmp
mov
hlt
enter
decl
mov
cmp
mull
jo
cmp
dec
mov
enter
js
dec
add
jle
or
outsb
pop
sub
cmp
aaa
jl
mov
popa
pop
ffreep
inc
dec
jmp
sti
mov
dec
dec
and
insb
mov
les
mov
xor
inc
push
and
hlt
loop
xor
pop
ficomps
adc
sbb
cs
das
enter
mov
arpl
sub
and
scas
push
stc
aas
xor
lock
call
mov
cmp
outsb
insb
enter
pushfw
inc
int3
in
clc
jnp
aaa
xor
dec
lods
icebp
pop
stc
cwtl
mov
rorb
jnp
dec
and
or
cltd
nop
sti
test
in
jbe
inc
clc
data16
cmp
dec
sub
jo
lods
and
inc
js
mov
mov
jecxz
in
lock
cld
jp
cmp
and
js
sub
and
jl,pn
call
js
dec
mov
dec
sbb
sub
inc
incb
or
dec
enter
loopne
mov
cmpb
and
arpl
test
mov
rcl
call
icebp
cmp
cmp
xor
jecxz
js
dec
pusha
and
mov
loop
ds
aam
cmp
cmc
mov
arpl
imul
test
jp
jmp
mov
fwait
lret
stos
mov
mov
ljmp
and
sub
lods
dec
cmp
pop
mov
or
jae
adc
popa
call
jg
incl
test
jle
add
inc
jae
arpl
js
dec
dec
jae
or
stos
jnp
push
push
mov
pusha
bound
dec
stos
push
pushl
adc
mov
clc
enter
mov
movsl
arpl
pop
dec
xor
mov
arpl
mov
arpl
inc
js
dec
test
cli
cltd
ljmp
cld
loop
jae
jnp
cli
jnp
out
mov
data16
jecxz
js
dec
jno
outsb
and
stc
pop
sub
outsl
jp
push
jp
das
jne
outsl
cmp
or
scas
loop
push
je
and
mov
and
adc
outsl
adc
lret
es
decl
stos
jno
fnstcw
outsl
inc
add
inc
arpl
imul
std
mov
loop
test
mov
or
push
mov
mov
lods
dec
popa
push
pop
rorl
dec
ret
decl
loop
test
sbb
mov
cs
pushl
daa
dec
inc
aaa
pop
lahf
ljmp
ror
cmp
rclb
pop
mov
loopne
decl
cmpsl
pop
lcall
je
mov
cli
sbb
pop
push
adc
sbb
inc
mov
mov
mov
out
mov
adc
dec
sbbl
aad
cmp
xchg
imul
jg
pop
push
jmp
jae
mov
mov
jp
sbb
mov
jmp
dec
fcomps
cmp
jb
pusha
movsb
dec
xor
pop
pop
insb
imul
clc
ljmp
int
enter
push
sarb
cwtl
push
and
adc
dec
in
push
cmp
jle
aad
add
pusha
and
imul
inc
enter
call
push
sbb
bound
push
addr16
inc
push
adc
mov
nop
addr16
mov
mov
jnp
lret
dec
cld
lcall
push
iret
js
dec
fsubs
or
loope
mov
sbb
push
add
jge
lret
adc
dec
ret
cwtl
dec
pop
bound
lock
cmp
jbe
mov
sub
pusha
cld
inc
mov
je
sub
pushl
jle
sbb
dec
push
xor
ret
sub
mov
sbb
mov
enter
sar
mov
pop
incl
dec
loopne
clc
ja
icebp
jb
int3
bound
adc
jecxz
add
cmp
out
movsl
inc
xor
loop
mov
mov
adcb
sbb
dec
xorb
sti
jo
js
sbbb
mov
jle
loop
cli
into
sbb
jecxz
js
dec
mov
mov
sbb
popf
or
data16
repnz
gs
ret
inc
or
jb
add
sub
hlt
pop
mov
jecxz
loop
sti
dec
dec
or
push
bound
mov
loopne
loop
sub
mov
movsb
dec
add
mov
int
cs
or
fidivrs
dec
out
or
sbb
cmp
test
repz
adc
push
das
bound
inc
mov
jmp
cmp
push
xor
mov
fbstp
sti
andb
push
shrl
jmp
std
sbb
push
cmp
ljmp
stc
scas
add
add
jnp
cld
or
pushl
nop
dec
fcomps
int3
out
sub
js
js
cmp
jbe
inc
mov
clc
rcl
sbb
hlt
add
xor
dec
add
adc
pusha
mov
mov
xor
add
shlb
dec
jb
je
dec
add
push
xchg
jo
mov
scas
ljmp
lcall
inc
xor
jle
inc
sub
lock
test
mov
push
mov
sbb
bound
pop
mov
jg
and
int3
dec
add
inc
loopne
xor
fmul
testl
push
add
cmp
xor
insb
cld
test
fmuls
and
js
xorl
fstpt
fisubrs
lods
inc
push
loopne
ljmp
rol
fs
ror
notl
sub
adc
jle
sub
cwtl
inc
push
dec
jbe
sti
pop
outsb
fs
lcall
add
mov
or
js
pop
sti
mov
mov
or
and
pop
jp
out
sbb
ja
mov
ljmp
cld
jg
jmp
clc
scas
or
adc
cmp
ficomps
and
sub
sbb
jp
ds
fildll
mov
dec
sub
and
pop
mov
jecxz
js
pop
xor
bound
test
lock
pop
test
mov
icebp
or
pop
lods
icebp
loopne
lods
call
fldt
pusha
stc
adc
stc
out
mov
fistl
sbb
and
pop
jle
xor
sti
inc
dec
push
addl
cs
mov
outsb
jg
mov
orb
dec
cwtl
repz
pop
decl
ds
jp
sar
adc
cs
in
bound
jg
inc
add
aam
movsl
jp
mov
out
xor
or
and
movb
shrb
jns
jo
mov
clc
xor
pushf
xor
test
pop
jg
jnp
jnp
mov
push
push
fmull
adc
js
cmp
ljmp
fdivr
xor
lcall
push
es
dec
and
aaa
mov
ljmp
inc
sti
or
cs
pop
js
dec
popa
and
insl
insl
dec
push
jmp
pop
clc
sub
arpl
sahf
dec
pop
sbb
outsl
je
adc
push
js
inc
arpl
imul
dec
call
sbb
add
jecxz
jbe
in
mov
mov
push
dec
je
add
sub
cli
scas
repnz
dec
sub
xor
mov
mov
fistps
cmp
lret
fldt
pop
cli
cwtl
cwtl
mov
cwtl
mov
cwtl
fcomps
aam
scas
dec
in
mov
out
daa
sbb
mov
inc
inc
pusha
out
pop
cltd
mov
mov
mov
jo
jl
or
sbb
and
xor
add
mov
outsl
sbb
mov
xor
sbb
mov
clc
outsl
sub
push
int
js
pushf
mov
das
xor
or
int3
int
push
in
arpl
iret
inc
rorb
es
sub
or
or
adc
sbb
pop
jae
jbe
loopne
add
mov
mov
ljmp
mov
and
mov
js
dec
orb
cmp
clc
test
push
sbb
mov
cmp
push
int
and
bound
loope
dec
pop
mov
xchg
cld
hlt
xchg
repnz
fsts
or
loopne
in
sub
xor
pop
cmp
outsl
pop
pop
mov
or
jo
jo
rcr
pop
cld
dec
cwtl
adc
ret
push
lock
idivb
xchg
mov
je
in
loopne
lahf
popa
ljmp
test
mov
add
xor
jl
adc
push
add
arpl
dec
fisubrs
jp
pop
jbe
ss
mulb
movsb
jbe
cmp
adc
clc
das
xchg
sbb
fisubs
sub
cli
mov
add
add
or
xchg
ljmp
push
das
xor
bound
inc
dec
je
bnd
das
mov
mov
popa
sti
insl
imul
icebp
jno
mov
push
or
add
nop
lret
dec
pop
inc
jl
stos
push
test
dec
call
mov
test
cli
adc
jg
sarb
int3
xchg
cmc
aam
cli
sbb
call
decb
add
add
adcl
push
loopne
dec
daa
fists
fdivs
and
push
shlb
imul
xlat
push
inc
mov
sti
xchg
imulb
mov
jle
or
pop
mov
xchg
mov
sub
mov
jle
jp
scas
repz
inc
mov
and
enter
dec
aaa
push
jo,pn
sbb
in
and
inc
sar
xchg
dec
sbb
push
outsl
pusha
paddd
int3
ljmp
jno
das
jb
out
sub
mov
in
jnp
lcall
ja
xchg
sti
add
jmp
shll
sbb
or
loopne
cmp
lock
mov
add
lret
push
jle
pop
mov
push
ljmp
mov
xor
mov
aas
shr
fildll
sub
or
sbb
mov
lock
lds
rcr
pop
sub
sbb
in
stc
push
xchg
and
jbe
adc
mov
mov
movb
cmp
dec
push
pop
push
dec
insb
ljmp
jl
roll
movsb
sbb
dec
enter
rcr
or
enter
push
rcll
flds
loop
mov
icebp
testb
dec
jbe
in
stos
cmp
pushf
aas
push
sbb
sbb
mov
or
and
pop
loop
pop
scas
sbb
sar
fnsave
jg
sub
lcall
jmp
loop
vmread
dec
adc
xchg
fsubp
adc
psubq
pop
insb
ljmp
xor
cmp
sbb
dec
cmp
loopne
decl
or
sbb
pop
jbe
int
repz
lods
in
movsb
scas
adc
andl
add
rcr
lock
dec
dec
jg
dec
or
lods
or
lods
adc
sbb
xor
cld
pop
sub
inc
sbb
push
dec
in
enter
insl
mov
jmp
incl
loop
mov
pop
mov
dec
mov
mov
subb
xor
jmp
xchg
shlb
jg
mov
and
sub
or
mov
dec
add
adc
push
xor
sbb
jle
cwtl
mov
repz
rorb
fcomps
loope
mov
stos
jmp
shrb
sub
pop
push
mov
pushl
outsb
and
fists
fs
in
js
push
das
pop
mov
pushf
push
outsl
ss
mov
div
push
or
sar
fsubs
pop
cld
jecxz
or
sbb
adc
rcll
sahf
cmp
loop
cmp
aad
mov
inc
fs
ret
sbb
inc
mov
stos
fwait
pop
inc
inc
xchg
hlt
mov
aaa
clc
jg
cmp
aad
inc
fisubrs
mov
out
inc
pop
add
negb
js
js
clc
sub
jge
jae
pusha
ljmp
push
sub
int
mov
pop
loopne
jo
pop
inc
int
aad
loopne
call
lock
cld
adc
jno
or
push
adc
mov
test
push
shlb
mov
test
sti
or
sub
cli
in
iret
out
lods
decl
push
mov
and
sarl
dec
fisubl
pop
outsl
lock
in
daa
inc
or
adc
fistl
add
jnp
push
in
jnp
and
sub
lock
add
inc
jb
jnp
cli
in
icebp
pop
mov
cld
sub
sbb
pop
call
push
scas
sbb
mov
aad
adc
loopne
push
out
pop
inc
mov
mov
pop
loop
loopne
lds
ret
ret
mov
test
and
pop
jb
outsl
std
lcall
mov
test
lea
mov
popf
das
movsl
mov
pop
adc
mov
rol
scas
mov
int
mov
int
fstl
jmp
xchg
repnz
add
roll
mov
inc
sbb
push
sbb
gs
pop
xchg
jle
pop
dec
add
or
call
xorl
xchg
dec
sahf
sti
cmpsl
movsl
mov
push
pop
decl
int3
mov
in
dec
jb
jnp
rolb
adc
mov
in
sbb
add
mov
in
aaa
clc
sub
adc
adc
je
xchg
mov
cwtl
lret
xchg
fsubl
or
xor
adc
jbe
int
incl
lock
mov
mov
in
adc
mov
pop
mov
adc
sub
sub
xor
sub
cwtl
sbb
push
lret
dec
add
adcb
mov
pop
dec
repz
or
test
mov
adc
and
pop
and
outsb
in
pop
ljmp
sbb
mov
dec
or
sbb
sbb
mov
jle
subl
outsb
cld
fbld
in
cmp
call
sub
mov
jle
mov
push
fstpt
mov
dec
sub
ljmp
icebp
xchg
dec
mov
sbb
push
xchg
bound
xchg
popf
xchg
jno
imul
je
popa
jae
inc
jb
outsl
mov
arpl
fs
call
call
xchg
imul
push
cltd
push
je
in
popaw
jne
jl
dec
adc
ljmp
movsl
aam
cwtl
push
inc
jns
cmpsl
clc
fwait
outsb
cmp
adc
aas
add
insl
push
popa
insb
imul
outsl
incl
jecxz
cs
inc
dec
fstl
stc
add
jae
inc
jns
gs
outsl
push
shll
mov
push
mov
inc
int
xchg
sub
jb
mov
push
push
add
dec
lea
loopne
cmp
add
pop
clc
call
fs
xor
js
cmpsb
add
divl
dec
jl
xor
jg
push
xchg
jae
call
add
out
xorl
inc
adc
mov
das
icebp
decl
add
jmp
xor
out
inc
insb
sar
fnstsw
jns
insb
fildll
jecxz
dec
outsb
inc
ret
pop
push
cli
xchg
decl
cltd
clc
divb
fdivs
jns
push
add
and
and
call
imul
outsb
shrb
sbb
insb
xchg
fs
js
sub
push
jb
call
xor
push
ret
mov
dec
sahf
mov
data16
jp
jns
cmpsb
or
enter
jge
pop
call
pusha
bound
dec
jo
daa
jbe
dec
gs
dec
in
incl
dec
insb
insb
loopne,pn
jbe
pop
or
jo
sbb
push
add
or
xlat
sbb
pop
in
dec
inc
sbb
fs
pop
bound
ja
cmp
cmpsl
inc
cmovge
xchg
jmp
insl
jl
jo
pop
pop
pop
int
pop
push
jp
xchg
sub
mov
outsl
dec
lcall
je
mov
not
dec
dec
ds
cmpb
popf
lcall
mulb
incl
scas
xor
inc
lock
out
arpl
xchg
repnz
inc
insb
push
jo
push
lods
mov
jmp
out
mov
clc
call
sub
mov
inc
test
cli
call
cli
jge
jle
roll
out
addr16
icebp
shll
jns
js
cmp
hlt
pushl
js
add
insl
fs
mov
push
jg
dec
pop
stc
jle
mov
mov
mov
arpl
inc
dec
dec
push
lea
popa
outsl
insl
inc
and
jge
jnp
or
js
jns
outsl
mov
repz
lock
dec
ljmp
decl
inc
push
push
xor
xor
sub
pop
in
inc
inc
push
std
decl
cmp
lret
dec
xor
mov
push
sub
dec
cmp
inc
xor
cwtl
push
inc
adc
pop
pop
and
pushw
daa
mov
xor
mov
clc
ret
cmp
test
cmp
pop
dec
lret
add
aas
push
imul
ret
mov
cli
jg
insb
sub
arpl
aas
jecxz
bound
xchg
push
inc
dec
outsl
jae
inc
int3
lahf
cmp
fbstp
xchg
dec
scas
inc
fs
or
jne
divl
pushl
sub
inc
in
inc
add
push
stc
in
mov
loopne
pushf
aas
lret
xor
lcall
pop
aas
jae
ja
cmp
rorl
mov
xchg
cmp
mov
xchg
aad
push
fisubl
push
ljmp
decl
dec
cmp
cmpsl
add
bound
fadd
inc
aas
inc
and
pop
add
pop
inc
leave
pop
xor
cld
adc
mov
imul
icebp
mov
pop
mov
dec
rclb
inc
lahf
insb
in
or
xor
xchg
push
lds
outsl
jne
pop
cmp
sar
fdivrs
loope
ret
xor
call
aaa
inc
icebp
das
adc
sbb
out
call
mov
arpl
call
fisttpl
loope
xchg
dec
jg
sti
mov
sbb
cmp
pop
inc
loop
cmp
push
icebp
pop
icebp
sub
add
pushl
inc
aaa
mov
inc
out
iret
mov
push
in
jmp
icebp
and
pushl
push
out
and
loop
lea
mov
add
mov
push
mov
pop
pop
es
lcall
mov
outsl
xor
dec
es
icebp
sbb
addr16
std
xor
outsl
dec
movsb
sarb
sar
gs
or
leave
pushl
jp
dec
lret
arpl
mov
push
js
je
ss
call
dec
aas
cmpsl
inc
xchg
cmp
cmc
inc
mov
ja
cmp
cmp
dec
sbb
andl
aam
neg
out
repz
sbb
dec
mov
leave
jno
iret
push
or
dec
ret
dec
push
cmpsb
fnsave
pop
popl
and
sbb
decl
mov
jae
sbbl
jnp
idivb
or
mov
cmp
pop
mov
dec
loopne
imul
fnstcw
jbe
xor
jmp
cmpsb
sbb
mov
ljmp
icebp
aaa
jge
xchg
add
loop
ret
xchg
and
scas
push
mov
repz
dec
or
dec
repz
mov
add
ja
sub
ds
dec
in
out
xor
in
and
or
das
sbb
jecxz
mov
dec
lahf
add
outsb
sbb
rol
repz
xor
add
sub
pop
pop
movsl
push
pop
mov
mov
push
xor
imul
inc
sub
inc
dec
xor
call
lahf
stos
lret
js
fs
subb
xor
pop
cmpsb
add
cmpsb
jp
ljmp
push
cltd
add
xor
movsb
call
xor
mov
cmp
lcall
push
loope
ja
adcl
xor
ds
inc
adc
push
call
mov
dec
or
xchg
out
mov
jg
incl
sub
mov
mov
xchg
sbb
push
pop
mov
jp
and
xadd
jmp
popa
jg
jle
mov
xchg
loop
add
sbb
push
lds
ret
addr16
inc
xchg
cli
decl
jge
mov
arpl
in
xor
ss
fcoms
and
ret
dec
repnz
lock
add
push
std
repz
arpl
loopne
ljmp
out
stc
addr16
call
cli
fildll
sar
sub
shrl
lret
mov
sbb
push
jo
sub
jg
ss
iret
stos
and
shlb
fwait
addr16
adc
adc
or
adc
jae
jne
or
das
std
fsubrl
jecxz
popf
out
fs
xchg
shll
xchg
or
cmpsl
and
cli
lods
push
pop
lcall
lcall
loop
dec
fs
cmp
dec
sub
iret
insb
data16
incl
push
dec
dec
push
mov
sahf
xor
push
xor
clc
pop
nop
jo
sub
mov
pop
lcall
in
popf
lahf
das
das
and
xor
les
push
popa
out
push
imul
pop
push
adc
mov
in
jnp
int3
pop
dec
or
incl
fbld
mov
lahf
bound
adc
or
call
bound
dec
ret
mov
jmp
js
dec
mov
hlt
loop
or
mov
mov
adc
push
fstpt
jnp
push
imul
jg
mov
dec
roll
out
in
xchg
pop
pusha
mov
or
xchg
inc
push
je
cmp
lea
sbb
imul
add
icebp
push
xor
call
dec
mov
or
and
inc
int
arpl
lcall
jmp
dec
add
data16
add
push
pusha
fiaddl
mov
mov
add
sbb
sbb
mov
test
fidivl
pop
in
outsl
insb
pop
ret
arpl
pusha
jnp
jecxz
jmp
sub
arpl
ja
xchg
sub
mov
cmp
bound
int
and
insb
inc
and
bound
mov
dec
jp
push
ss
inc
icebp
out
inc
addr16
outsl
cmp
dec
add
ljmp
cmp
xor
cs
xor
cmp
push
mov
outsl
bound
push
leave
stos
add
jb
xor
xchg
fs
std
call
ds
sbb
push
jb
inc
arpl
pop
dec
adc
jecxz
add
ljmp
lock
shr
add
push
ds
imul
inc
repz
cmp
mov
loop
mov
adc
ds
xor
addl
into
xchg
faddl
insl
mov
push
add
clc
push
outsl
push
sub
ret
xchg
sbb
lcall
imul
pop
lea
mov
xor
ljmp
xor
insb
mov
lods
jmp
dec
dec
push
push
dec
xorl
xor
pop
cmp
adc
std
jg
imulb
bound
bound
jnp
or
pushl
dec
or
outsb
xor
jb
rolb
push
ss
xchg
xchg
ljmp
lcall
pushl
mov
sub
sbb
cmp
imul
mov
dec
add
add
add
inc
sbb
add
push
push
push
roll
pusha
pop
or
sub
adc
inc
push
shll
jno
insl
push
lret
adc
jbe
lea
inc
enter
xor
inc
fldcw
inc
sbb
enter
insl
push
pop
gs
and
rcll
stc
push
adc
dec
xor
dec
sub
in
add
or
pop
subl
add
ret
add
sbb
add
or
insb
push
xchg
or
xor
push
inc
pop
or
dec
pop
push
or
jl
jb
std
jp
add
or
xor
push
push
adc
push
ja
nop
dec
sbb
dec
js
push
xor
push
inc
inc
jbe
jp
dec
dec
jbe
inc
scas
inc
stc
lods
inc
pusha
dec
sub
lea
imul
roll
add
inc
insb
cmp
add
push
push
dec
add
rclb
push
or
jae
lds
inc
rolb
push
mov
dec
add
add
dec
mov
int
add
dec
push
add
add
je
mov
in
push
dec
outsl
arpl
gs
inc
inc
push
pop
inc
js
push
imulb
push
jb
gs
dec
outsl
jbe
inc
imul
and
dec
and
inc
outsl
jb
imul
decb
push
arpl
outsl
insl
insl
popa
outsb
push
pop
gs
mov
dec
gs
jo
pop
push
je
sub
neg
jo
dec
push
imul
insb
addr16
fisubrl
bound
push
mov
cmp
xchg
in
ffree
cs
ret
dec
pushw
or
cmp
jb
sbb
jae
arpl
imul
loope
sbb
add
mov
inc
je
jb
pushf
je
pop
fsave
outsl
outsb
int3
das
jle
fnstenv
or
dec
fs
xor
in
pop
mov
mov
bound
jae
add
push
jne
loope
mov
mov
inc
popa
cmp
insl
push
cmp
push
imul
sbb
fisubrs
dec
js
imul
push
push
jo
arpl
push
outsl
imul
dec
and
int3
sahf
popa
dec
mov
mov
mov
popa
jb
xlat
push
mov
jge
jg
dec
adc
sub
xlat
mov
push
push
xorb
mov
inc
jle
test
xchg
add
jae
xchg
addr16
sahf
dec
pop
jmp
push
adc
lea
jo
outsb
int
jmp
pop
inc
fs
jg
sti
dec
cwtl
cs
outsl
sub
pop
mov
lret
adc
lods
sbb
addr16
xchg
movsl
xor
add
out
and
insl
push
fildl
cwtl
ja
pusha
and
adc
movlps
popa
testb
outsl
insb
and
jbe
outsl
jns
mov
mov
ret
push
dec
addr16
jne
jns
push
mov
gs
push
add
pop
mov
fs
push
push
mov
outsl
mov
jns
arpl
imul
ret
dec
adc
scas
mov
push
or
sbb
mov
dec
arpl
push
leave
dec
mov
and
cmp
add
push
lcall
add
insb
push
inc
add
dec
add
add
inc
dec
loopne
sidtl
add
or
add
cmp
mov
adc
nop
or
outsl
push
insb
add
pop
push
add
in
int
pop
push
xor
pop
add
mov
xor
jmp
and
push
ljmp
add
mov
sub
dec
inc
inc
xor
nop
out
push
testb
inc
inc
push
dec
ja
or
shr
sti
sub
or
imul
lahf
daa
addb
sub
mov
mov
repz
dec
or
lcall
xor
xchg
sbb
movsb
dec
add
sub
repz
daa
add
add
jle
mov
loopne
inc
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
