jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
aaa
gs
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
movl
mov
push
call
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
push
call
cmp
jns
mov
mov
xchg
lea
xchg
mov
xchg
dec
xchg
lea
mov
inc
dec
dec
lea
cmp
jnp
xchg
mov
lea
mov
mov
inc
dec
xchg
xchg
mov
lea
mov
dec
dec
movl
mov
push
call
mov
lea
mov
cmp
jl
mov
mov
lea
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
lea
lea
xchg
lea
mov
mov
lea
lea
mov
lea
dec
movl
mov
push
push
call
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
movl
mov
push
push
call
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
movl
mov
push
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
mov
cmp
jl
mov
mov
lea
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
lea
lea
xchg
lea
mov
mov
lea
lea
mov
lea
dec
mov
cmp
je
call
ret
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
xor
divl
test
jne
cmp
jns
mov
mov
xchg
lea
xchg
mov
xchg
dec
xchg
lea
mov
inc
dec
dec
lea
cmp
jnp
xchg
mov
lea
mov
mov
inc
dec
xchg
xchg
mov
lea
mov
dec
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
xchg
cmp
jno
lea
mov
mov
xchg
mov
lea
mov
lea
inc
inc
inc
mov
inc
lea
mov
mov
lea
mov
mov
xchg
lea
lea
lea
lea
mov
mov
inc
dec
mov
cmp
je
ret
cmp
jge
mov
lea
lea
mov
xchg
mov
lea
inc
inc
dec
xchg
cmp
jg
xchg
mov
mov
xchg
mov
lea
mov
inc
inc
xchg
mov
dec
inc
xchg
mov
mov
mov
mov
xchg
inc
inc
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jns
mov
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
cmp
jne
dec
dec
mov
cmp
je
mov
dec
mov
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
mov
cmp
je
call
cmp
jge
mov
lea
lea
mov
xchg
mov
lea
inc
inc
dec
xchg
cmp
jg
xchg
mov
mov
xchg
mov
lea
mov
inc
inc
xchg
mov
dec
inc
xchg
mov
mov
mov
mov
xchg
inc
inc
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
mov
movl
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
mov
sub
mov
mov
cmp
jno
mov
xchg
lea
xchg
mov
lea
inc
mov
mov
lea
dec
lea
xchg
cmp
jge
dec
inc
inc
inc
inc
inc
mov
mov
mov
mov
lea
lea
mov
mov
xchg
lea
push
mov
mov
xor
call
mov
cmp
jns
mov
mov
xchg
lea
xchg
mov
xchg
dec
xchg
lea
mov
inc
dec
dec
lea
cmp
jnp
xchg
mov
lea
mov
mov
inc
dec
xchg
xchg
mov
lea
mov
dec
dec
mov
mov
mov
call
lea
xchg
cmp
jno
lea
mov
mov
xchg
mov
lea
mov
lea
inc
inc
inc
mov
inc
lea
mov
mov
lea
mov
mov
xchg
lea
lea
lea
lea
mov
mov
inc
dec
push
mov
mov
xor
call
mov
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
lea
mov
cmp
jl
mov
mov
lea
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
lea
lea
xchg
lea
mov
mov
lea
lea
mov
lea
dec
lea
mov
call
mov
cmp
jno
mov
xchg
lea
xchg
mov
lea
inc
mov
mov
lea
dec
lea
xchg
cmp
jge
dec
inc
inc
inc
inc
inc
mov
mov
mov
mov
lea
lea
mov
mov
xchg
lea
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jge
mov
lea
lea
mov
xchg
mov
lea
inc
inc
dec
xchg
cmp
jg
xchg
mov
mov
xchg
mov
lea
mov
inc
inc
xchg
mov
dec
inc
xchg
mov
mov
mov
mov
xchg
inc
inc
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jns
mov
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
cmp
jne
dec
dec
mov
cmp
je
mov
dec
mov
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
lea
xchg
cmp
jno
lea
mov
mov
xchg
mov
lea
mov
lea
inc
inc
inc
mov
inc
lea
mov
mov
lea
mov
mov
xchg
lea
lea
lea
lea
mov
mov
inc
dec
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
jns
mov
mov
xchg
lea
xchg
mov
xchg
dec
xchg
lea
mov
inc
dec
dec
lea
cmp
jnp
xchg
mov
lea
mov
mov
inc
dec
xchg
xchg
mov
lea
mov
dec
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jno
mov
xchg
lea
xchg
mov
lea
inc
mov
mov
lea
dec
lea
xchg
cmp
jge
dec
inc
inc
inc
inc
inc
mov
mov
mov
mov
lea
lea
mov
mov
xchg
lea
mov
mov
movl
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
lahf
lahf
repz
lcall
mov
test
test
repz
xchg
lahf
mov
movsl
xchg
mov
mov
repz
mov
test
pushf
xchg
test
loope
lahf
lahf
repz
repz
repz
mov
repz
repz
repz
repz
repz
repz
jl
je
or
adc
xor
adc
mov
mov
std
fdivs
repz
fnstenv
repz
mov
adc
fnstenv
repz
mov
jp
or
push
pop
jl
repz
or
push
add
jp
or
push
pop
jl
repz
or
push
or
jp
or
push
mov
jp
or
push
repz
repz
or
push
idivl
repz
or
les
jp
or
stos
stos
scas
xor
xor
sub
add
mov
xor
jl
xor
mov
xor
mov
cmpsb
jl
je
cmp
jp
cmp
das
mov
cmp
mov
mov
mov
mov
jl
sti
jp
pop
jl
cmp
mov
mov
mov
jl
cmp
mov
jp
seta
repz
mov
jl
iret
hlt
mov
jp
add
divb
repz
sub
je
div
add
repz
sub
mov
jp
daa
sbb
repz
repz
repz
daa
jl
push
mov
mov
mov
je
sbb
add
repz
daa
je
repz
jl
daa
jl
hlt
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
daa
jl
jecxz
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
pop
or
jl
pop
jl
adc
repz
jl
cmp
mov
jp
sbb
jl
pop
jl
pop
hlt
cmc
jp
and
je
cmc
mov
jl
cmp
mov
jp
je
adc
je
pop
idivl
je
xrelease
mov
out
mov
je
push
add
adc
adc
jl
fcomi
mov
jp
or
jl
fistpll
pop
cmp
repz
jecxz
mov
je
jmp
jl
cmp
mov
repz
repz
cmp
mov
mov
repz
repz
sti
mov
mov
jl
pop
jle
xlat
movss
popf
repz
or
adc
ret
adc
div
xor
mov
cmpsb
jl
xchg
jl
sti
jl
decl
inc
jae
sub
inc
cmc
sbb
or
cmp
xchg
repz
ret
lods
repz
inc
cmc
mov
jecxz
shl
repz
test
xchg
pop
sbb
sbb
sub
repz
pop
and
xchg
bound
sbb
repz
repz
repz
jae
testb
mov
data16
inc
repnz
add
mov
xor
jmp
ret
sbb
adc
adc
cmp
sbb
adc
test
sti
repz
repz
jp
dec
adc
adc
lds
add
adc
fidivrl
jp
xor
cmpsb
jl
jb
or
adc
jp
idiv
arpl
arpl
repz
jge
or
cmpsb
or
arpl
arpl
mov
xchg
cmp
bndstx
adc
mov
mov
repz
repz
jge
or
div
les
ja
or
adc
adc
int
or
repz
xrelease
cmp
or
les
jge
or
or
dec
addr16
adc
adc
xor
or
dec
jmp
repz
xor
repz
or
or
jae
arpl
xor
or
arpl
arpl
mov
xchg
push
scas
xor
mov
cmpsb
jl
mov
xor
arpl
repz
sti
arpl
arpl
sti
arpl
arpl
repz
cli
arpl
arpl
mov
jnp
push
les
push
cli
arpl
mov
les
mov
jnp
jmp
repz
push
cli
arpl
arpl
arpl
arpl
arpl
cli
arpl
arpl
repz
push
les
jge
push
jge
jmp
repz
jge
adc
xor
add
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jns
mov
xchg
mov
mov
mov
mov
mov
mov
xchg
mov
cmp
jne
dec
dec
mov
cmp
je
mov
dec
mov
dec
lea
lea
xchg
mov
mov
mov
lea
xchg
movl
mov
cmp
jno
mov
xchg
lea
xchg
mov
lea
inc
mov
mov
lea
dec
lea
xchg
cmp
jge
dec
inc
inc
inc
inc
inc
mov
mov
mov
mov
lea
lea
mov
mov
xchg
lea
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
mov
mov
call
mov
cmpl
je
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
mov
cmp
je
mov
subb
mov
mov
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
xorb
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
incl
mov
cmp
jne
cmp
jge
mov
lea
lea
mov
xchg
mov
lea
inc
inc
dec
xchg
cmp
jg
xchg
mov
mov
xchg
mov
lea
mov
inc
inc
xchg
mov
dec
inc
xchg
mov
mov
mov
mov
xchg
inc
inc
inc
mov
call
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
mov
push
mov
push
call
cmpl
je
mov
push
call
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
lea
mov
cmp
jl
mov
mov
lea
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
lea
lea
xchg
lea
mov
mov
lea
lea
mov
lea
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
cmpb
jne
call
mov
lea
mov
cmp
jl
mov
mov
lea
xchg
xchg
xchg
lea
mov
mov
lea
mov
mov
mov
lea
lea
xchg
lea
mov
mov
lea
lea
mov
lea
dec
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
cmp
jns
mov
mov
xchg
lea
xchg
mov
xchg
dec
xchg
lea
mov
inc
dec
dec
lea
cmp
jnp
xchg
mov
lea
mov
mov
inc
dec
xchg
xchg
mov
lea
mov
dec
dec
movb
xchg
cmp
jp
lea
lea
inc
lea
lea
dec
cmp
jae
mov
mov
lea
xchg
mov
mov
mov
mov
mov
xchg
mov
xchg
lea
lea
xchg
dec
inc
inc
mov
mov
pop
ret
nop
push
mov
add
call
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
call
call
call
test
jne
call
jmp
movw
movb
lea
xchg
cmp
jno
lea
mov
mov
xchg
mov
lea
mov
lea
inc
inc
inc
mov
inc
lea
mov
mov
lea
mov
mov
xchg
lea
lea
lea
lea
mov
mov
inc
dec
call
lea
mov
pop
ret
lea
push
mov
add
lea
mov
cmp
jb
lea
lea
mov
dec
lea
mov
mov
inc
mov
lea
mov
xchg
lea
xchg
push
call
cmp
jne
cmp
jns
mov
mov
xchg
lea
xchg
mov
xchg
dec
xchg
lea
mov
inc
dec
dec
lea
cmp
jnp
xchg
mov
lea
mov
mov
inc
dec
xchg
xchg
mov
lea
mov
dec
dec
push
call
cmp
je
push
push
push
call
mov
call
mov
cmp
jno
mov
xchg
lea
xchg
mov
lea
inc
mov
mov
lea
dec
lea
xchg
cmp
jge
dec
inc
inc
inc
inc
inc
mov
mov
mov
mov
lea
lea
mov
mov
xchg
lea
mov
pop
ret
add
add
push
fs
insb
and
sbb
jne
mov
cmp
jge
mov
lea
lea
mov
xchg
mov
lea
inc
inc
dec
xchg
cmp
jg
xchg
mov
mov
xchg
mov
lea
mov
inc
inc
xchg
mov
dec
inc
xchg
mov
mov
mov
mov
xchg
inc
inc
inc
mov
mov
mov
lea
call
cmp
jne
mov
lea
lea
mov
xchg
xchg
xchg
mov
inc
xchg
mov
mov
mov
xchg
cmp
jb
inc
inc
dec
dec
mov
mov
lea
lea
lea
mov
xchg
mov
xchg
mov
ret
nop
ret
lea
addl
inc
add
add
stc
add
roll
aas
mov
add
cli
adc
inc
loope
jno
jl
std
stos
add
ja
sbb
add
dec
mov
and
mov
jns
add
add
xchg
add
add
hlt
insb
push
and
popa
sti
sub
push
adc
call
das
es
dec
add
pushf
in
push
enter
add
jge
add
add
bound
jnp
add
jle
xor
loop
int3
sub
add
add
add
jp
add
popl
push
pop
imul
add
mov
das
add
dec
add
add
add
add
adc
add
xchg
add
insb
lea
add
imul
inc
adc
add
jb
add
cmp
xchg
xlat
jge
in
lret
iret
dec
fldcw
add
ja
out
pushf
daa
loop
test
add
das
or
sbb
pop
add
jo,pn
fildll
add
cmp
cmpsl
add
mov
psubb
jae
imul
push
fisubs
mov
push
test
ret
or
inc
add
inc
or
jg
mov
es
push
add
in
pusha
mov
cmc
dec
fcomp
leave
add
clc
add
mov
test
fmul
xchg
sub
cmp
push
add
add
mov
add
mov
jae
imul
scas
add
mov
add
mov
out
rolb
filds
dec
lea
in
add
jmp
pop
les
inc
scas
add
pop
popa
aad
and
inc
fldt
add
add
iret
mov
fimull
scas
add
pop
xchg
jp
out
sti
mov
mov
add
add
arpl
cmp
xchg
and
add
cmp
add
lods
imul
mov
add
add
cmpb
inc
aaa
sub
lods
outsb
hlt
xor
gs
or
std
ret
xchg
sbb
mov
mov
iret
jnp
xor
or
xchg
in
add
add
mov
pushf
add
xor
in
xchg
mov
add
add
push
aad
add
push
filds
add
imul
into
mov
ficoml
jb
mov
and
sub
dec
sbbl
xor
test
lret
fiadds
fiadds
add
adc
add
jmp
xor
add
pop
js
and
pop
repz
sbb
in
or
mov
add
adc
push
repz
pop
imul
repnz
ss
aam
test
mov
add
lds
pop
lret
clc
inc
add
adc
add
loop
jne
add
imul
addl
adc
jle
mov
add
popa
aam
lods
add
inc
add
movb
orl
add
pop
jge
or
cld
mov
add
nop
add
nop
push
pushf
xchg
fiadds
xchg
pop
jnp
mov
add
mov
sti
xchg
add
rcr
push
sbb
push
cmp
aam
pop
add
adc
mov
loopne
add
bound
or
out
jg
iret
sti
xor
pop
add
jge
add
mov
aad
pop
jmp
fucomi
push
ficomps
jo
pop
sub
roll
add
dec
iret
test
mov
push
sub
inc
lods
fimull
test
les
sarb
scas
fcoms
push
mov
or
arpl
nop
repnz
insl
clc
leave
push
adc
hlt
int3
repnz
inc
mov
das
or
sarl
or
cltd
dec
int3
sub
and
js
lds
loope
lret
scas
out
cli
and
sbb
jle
sbb
push
mov
lods
pop
jge
mov
cmp
cmp
sub
cmp
and
mov
push
or
lret
inc
arpl
lahf
ja
das
push
and
test
jle
faddl
mov
cmpsb
mov
and
sbb
inc
pop
mov
test
cli
mov
fistpll
sub
repz
fistpll
xchg
xor
and
sbb
sbbb
rcrl
sbb
aad
inc
xor
or
pop
xchg
js
call
cmp
sbb
push
ret
mov
lret
sub
aas
xchg
jns
push
jg
or
inc
stos
mov
mov
mov
cmp
and
pop
mov
int
into
inc
sub
loope
mull
pop
rol
lret
mov
jne
test
sahf
cmpl
xorb
outsl
aas
fldl
or
lock
push
adc
in
jno
cld
loop
fadds
jo
pop
pop
call
xor
lcall
cmp
ss
in
jne
xor
xchg
pop
fucomip
fsts
aaa
std
fs
int3
jg
lea
jecxz
add
jp
popa
xlat
mov
xchg
xor
in
imul
cmp
cmp
loopne
fsubr
dec
cmpl
test
fldl2e
mov
xrelease
adc
cmp
pop
pop
in
icebp
adc
jb
jmp
sub
mov
aad
nop
lret
nop
shlb
xchg
jb
ret
mov
je
insl
test
mov
cmp
int
shr
and
mov
sub
push
dec
and
fucomi
test
lret
inc
mov
test
das
xlat
push
cmp
cmp
aaa
inc
rorl
mov
std
test
adc
push
stos
lds
add
or
arpl
mov
mov
mov
xchg
pop
mov
xchg
div
repz
popa
rorb
jbe
aam
ja
ret
adc
mov
dec
sbb
adc
and
andb
pop
lods
and
es
es
les
and
dec
mov
and
cltd
pop
leave
adc
push
out
cmpsb
pop
or
mov
scas
xchg
xor
or
gs
nop
stos
mov
gs
enter
addr16
push
mov
popf
or
inc
or
pop
popa
out
pop
or
add
in
dec
ja
stc
inc
push
out
jecxz
jp
mov
push
push
jno
add
mov
mov
sarl
pop
push
in
cmp
xchg
mov
loop
sbb
fimuls
mov
test
bound
daa
dec
push
cmp
mov
mov
fildll
mov
jmp
ss
ss
fs
push
in
sub
clc
lods
push
inc
sbb
stos
popf
pop
jecxz
rcl
sbb
stc
jnp
push
jecxz
dec
adc
pusha
stos
xchg
iret
xor
ds
push
nop
incb
ret
jae
xchg
cli
push
aaa
dec
je
mov
mov
es
fidivrl
ljmp
mov
inc
imul
scas
cmp
adc
ds
mov
and
inc
hlt
pop
jge
arpl
jp
mov
and
fbld
and
nop
pop
pop
or
mov
adc
sbb
pushf
test
sbb
lds
out
mov
scas
and
popa
sub
xor
cmpsb
gs
icebp
ljmp
pop
push
xchg
daa
jle
push
cmp
lea
insb
mov
fstpt
xor
mov
mov
test
dec
pushf
into
inc
fdivs
fsubs
adc
cld
test
lock
pop
sub
imulb
sub
xorl
ds
or
and
fimuls
sub
out
sbb
mov
shll
add
pop
mov
cmpsb
js
sbb
lcall
fdivrl
js
sub
test
adc
push
xor
inc
xor
mov
lods
decb
lret
and
mov
pop
out
lret
cmp
sub
mov
lret
cmp
mov
pop
push
sbb
mov
fldl
push
jno
loop
iret
and
inc
mov
or
in
ss
scas
cmp
mov
push
int3
cli
leave
cmp
xor
clc
cmp
add
xor
cld
add
jb
fistl
adc
push
imul
xchg
push
add
in
or
lods
out
xor
mov
aam
fbstp
sub
mov
aam
cwtl
sti
pusha
add
pusha
add
pop
and
loopne
jne
dec
loop
xchg
inc
adc
xchg
and
repz
jns
xchg
sbb
jb
and
dec
in
sahf
pop
cwtl
mov
adc
pop
xchg
pushf
add
cmp
aad
xchg
nop
stos
mov
aas
lret
jb
pop
sub
je
and
jecxz
and
ds
add
pushf
pusha
xor
lea
cs
or
fistpl
in
pop
insl
dec
lcall
lahf
js
mov
jns
mov
jns
and
imul
neg
ret
sub
cmp
jge
cmp
loop
pop
cld
loop
lods
lret
and
mov
sbb
mov
negl
cmpsb
cmp
pop
dec
shrl
cld
aad
cs
cmpsl
ret
lahf
stos
sbb
out
test
adc
dec
adc
aaa
xchg
shrd
imul
ja
mov
dec
lahf
xor
mov
add
ss
cltd
mov
sbb
imul
rolb
movsl
dec
roll
mov
stos
jns
cmp
movsl
cwtl
sub
setae
push
inc
clc
movsb
call
movsb
cmc
or
or
jns
icebp
xchg
cmp
push
das
ja
lock
dec
push
add
repz
or
jecxz
fwait
lret
push
testb
add
fisubl
out
cld
dec
bound
in
pushf
in
push
xchg
dec
test
jo
test
pop
popf
sub
pop
jp
xchg
pop
mov
cmc
push
mov
fbstp
sub
mov
sahf
scas
fisttps
mov
jmp
add
out
andl
out
sbb
sub
repz
xor
call
fisubs
mov
lods
scas
in
sbb
pusha
inc
test
ret
ret
jp
cmp
xchg
jae
lock
cli
inc
adc
mov
movsl
call
add
mov
cmc
pop
imul
scas
sahf
pop
inc
push
inc
es
adc
mov
movsl
bnd
pop
leave
inc
ja
hlt
bound
arpl
in
inc
rolb
or
pop
add
aaa
dec
sahf
or
add
rcrb
lret
cwtl
sahf
lds
push
push
scas
movsl
jb
and
enter
orl
cli
add
jge
testl
cmp
and
jno
push
ret
int3
push
dec
fistl
popa
push
rcrl
xor
cld
sub
push
enter
cmp
push
push
adc
mov
hlt
mov
in
cld
test
enter
pop
das
clc
jmp
loope
xorl
les
cli
movsl
inc
jp
and
cmp
sbb
lret
ljmp
and
lret
pop
fstpl
sbb
pop
sbb
jle
mov
jno
mov
in
xchg
sub
pop
outsb
xlat
add
jg
das
ret
pop
jg
arpl
mov
daa
test
shr
mov
shlb
popa
mov
or
sbb
sbb
push
hlt
cld
lret
mov
clc
and
ficompl
lret
sahf
mov
test
cmp
loop
int
stc
iret
leave
fs
insl
dec
adc
ss
cmp
jp
mov
pop
fs
sahf
push
cmp
adc
or
sub
into
stos
cmp
xor
int3
push
adc
or
imul
mov
add
mov
loope
mov
ret
mov
lret
mov
aas
inc
cmpsl
sti
movd
bound
loopne
and
in
inc
inc
and
rcr
fld
lea
cmpsb
repz
arpl
inc
stos
cmp
pop
out
fs
icebp
pop
dec
rolb
add
jb
int3
or
push
or
nop
xchg
stos
aas
imul
pop
dec
jle
dec
je
sub
in
jnp
inc
stc
and
pop
or
jo
adc
cmpl
add
dec
or
adc
jns
lret
insb
les
iret
out
xchg
jg
mov
inc
rorl
xlat
out
xor
out
cmp
sbb
xor
cwtl
leave
push
dec
cmpsl
jl
aad
imul
cli
cld
or
mov
sahf
mov
mov
jge
lds
mov
aam
mov
es
mov
mov
push
xchg
dec
fs
popa
sbb
lods
cli
ret
fwait
mov
mov
les
leave
psubw
sub
test
lcall
xchg
call
cmpsb
aas
sbb
mov
pushf
push
mov
mov
ret
stc
out
or
jge
push
test
push
sbb
sbb
cmp
jl
ja
cmp
push
mov
rorl
stos
shrb
jle
and
aam
inc
inc
sbb
push
fwait
stc
lock
push
cltd
lcall
cmc
aad
out
insb
xchg
push
bound
mov
jns
pop
shl
pop
fwait
bound
or
push
mov
pop
lock
sbb
mov
mov
lods
sbb
dec
lods
dec
sbb
outsb
lahf
mov
fwait
and
lods
and
ds
int3
xor
test
sub
sub
out
popa
mov
inc
repnz
subl
decl
ret
sub
mov
pusha
loopne
or
or
lods
fdivrp
pop
je
jle
xchg
insb
es
xchg
sbb
mov
data16
pop
inc
call
fisubl
lds
stos
mov
inc
lcall
mov
cmpsl
mov
enter
mov
lea
arpl
inc
ret
int3
testl
push
addr16
jp
jg
dec
test
ljmp
fisubs
out
lds
sahf
pop
rcrb
mov
and
out
cmp
mov
push
cmp
cmp
imul
cmp
adc
jno
mov
das
dec
dec
pop
popa
push
mov
pop
xor
push
cmp
fwait
movsl
das
test
filds
mov
cmpsb
sub
in
jecxz
enter
aad
outsb
icebp
inc
push
lods
jmp
sub
sbb
ds
mov
movsl
inc
push
push
and
cltd
mov
sbb
out
add
ljmp
lea
push
pop
in
jnp
xor
fcmovnu
nop
jns
sub
je
cmp
adc
or
jg
xchg
xor
cmp
cli
pop
mov
pop
push
and
leave
add
sub
dec
lea
fbstp
adc
or
xorb
outsl
fsubl
stc
mov
movsb
fs
jb
adc
fdivs
scas
jne
cmp
xor
cs
cli
das
mov
sbb
stc
xchg
or
sub
cmc
mov
jb
push
enter
test
mov
jno
into
cmp
add
lahf
jg
insb
andb
mov
mov
xlat
pop
and
sub
mov
in
stos
outsb
pop
sti
mov
sbb
imul
and
sbb
or
cwtl
sahf
adc
hlt
mov
sbb
xor
push
dec
pop
lahf
call
mov
push
lock
pushf
stc
cs
out
aad
pushf
add
popa
hlt
adc
jb
pop
pop
dec
cmc
dec
outsb
je
xchg
repz
jge
lea
mov
dec
mov
in
mov
scas
adcl
icebp
out
pop
mov
enter
movsl
inc
sub
das
je
lods
sub
enter
cli
jmp
std
jp
jecxz
test
outsb
cmpsl
jnp
jb
pushf
or
nop
mov
or
mov
out
lock
adc
in
xchg
add
sub
lods
hlt
paddq
cmp
mov
xlat
sti
insl
xlat
inc
les
push
xchg
lea
jnp
xor
lods
gs
mov
xor
and
hlt
popf
dec
addps
add
cltd
std
cmp
xchg
mov
or
fstl
mov
clc
and
sbb
or
fs
data16
cmp
imul
xchg
popf
fucomi
push
clc
inc
and
iret
shrb
out
mov
xor
lcall
gs
dec
cmp
pop
test
jl
ja
les
inc
fldt
or
addl
cmp
addb
pop
pop
out
dec
xor
bound
jno
in
jae
xchg
ljmp
mov
adc
dec
enter
inc
mov
jecxz
mov
add
jne
mov
mov
lods
cmpsb
fwait
push
xchg
cltd
pop
mov
xchg
xchg
repnz
sub
jmp
and
and
and
insb
pusha
xor
jnp
mov
adc
insb
jp
pusha
jnp
pusha
iret
dec
dec
cli
ret
clc
pop
stos
jmp
movsl
cli
jae
js
push
orb
mov
mov
dec
inc
xchg
imul
imul
out
scas
fs
adcb
adc
mov
sbb
popf
hlt
clc
adc
inc
or
or
push
test
or
lods
add
sbb
adc
movsb
fiadds
lret
mov
shlb
scas
scas
arpl
cmp
or
leave
movsl
jbe
sub
jge
rolb
jnp
sbb
jno
outsl
jl
add
mov
xor
xor
mov
inc
lahf
repz
outsb
and
test
stos
xor
inc
test
cmpsb
scas
int3
lods
in
lret
enter
pop
lods
outsb
lock
push
adc
cmp
movsl
sub
and
cmp
push
mov
movsl
dec
mov
popl
sti
mov
cltd
or
add
xor
jnp
push
adc
pop
sub
js
sub
pop
arpl
lock
pop
pop
js
cmp
jbe
popf
pushf
inc
adc
in
popf
jg
iret
cld
mov
mov
xchg
mov
mov
and
fs
outsl
faddl
fcomip
pushf
dec
fxch
leave
outsl
shll
push
mov
mov
jg
xchg
scas
addb
inc
cmp
out
dec
jg
addr16
pop
fs
lret
adc
xor
icebp
pop
jle
cwtl
leave
pop
fdiv
sub
out
jl
cli
bound
aas
cmp
mov
or
fs
into
jno
xchg
cmc
push
cmp
imul
adc
ret
std
jmp
add
cmp
out
jmp
ja
data16
rcl
pushf
inc
cwtl
sub
xlat
gs
adc
xchg
sar
leave
push
ret
xor
dec
mov
dec
ljmp
inc
dec
add
fld
and
repz
ficoml
xchg
inc
adc
jo
clc
std
xchg
pop
mov
pop
adc
dec
mov
cs
pushf
mov
repnz
sbb
jb
dec
pop
dec
insb
insl
jae
sahf
ss
add
int
imul
xlat
mov
dec
mov
pushw
subl
jae
push
lahf
mov
inc
inc
imul
je
ljmp
cmc
mov
mulb
add
aas
dec
mov
mov
addr16
leave
cld
arpl
fcmove
jo
ret
arpl
mov
jne
lock
pop
pop
add
fcmovbe
xlat
jb
sub
ljmp
jo
or
mov
dec
add
pop
inc
ljmp
arpl
cmp
mov
shrb
mov
mov
push
add
dec
cltd
xor
mov
mov
and
fnstsw
cmp
xchg
shlb
pop
inc
pop
adc
mov
xchg
in
jns
roll
ljmp
lahf
xor
std
push
or
xor
pop
cmp
cmpsb
adc
xchg
mov
fidivs
dec
ss
ja
jae
dec
inc
dec
lahf
inc
jb
jbe
es
xor
push
out
push
fists
pop
add
cli
out
sub
xchg
outsb
pop
jns
sub
in
jbe
xchg
cmp
push
mov
into
xor
jp
out
or
push
pop
push
mov
jb
jecxz
lcall
shl
fucomip
adc
cs
out
lahf
adcl
out
sub
or
gs
cmp
je
imul
xor
adc
jle
das
in
aas
jbe
push
mov
ret
cltd
pop
loop
push
inc
test
mov
ret
lcall
inc
and
or
xchg
rolb
pop
xchg
hlt
imul
push
scas
xbegin
cmp
stos
pop
and
outsb
xchg
mov
hlt
inc
out
mov
mov
inc
leave
mov
cs
mov
add
aas
int3
ror
pop
inc
cmp
pop
lds
jmp
and
cmp
cmp
orb
or
push
sub
imul
popf
mov
lahf
cmp
push
jno
dec
fistpll
jne
sub
push
xor
or
pop
call
test
jne
dec
inc
adc
mov
in
mov
inc
enter
pop
in
outsl
call
loope
xchg
sub
ljmp
rcr
jo
inc
and
movsl
push
sub
out
cmp
shlb
mov
xor
pop
cmp
adc
pop
push
push
cmp
pop
loop
aas
lcall
clc
fsub
lret
fists
add
jg
mov
xor
mov
into
mov
mulb
xor
push
outsb
int
fscale
sub
cmp
sbb
mov
pop
xchg
sbb
fwait
sahf
mov
cmp
mov
call
in
push
add
fs
pop
fnstenv
xor
adc
fsubrs
dec
xchg
cli
xchg
push
and
sub
idivb
inc
lds
fs
into
push
in
cmc
sbb
push
xor
lods
mov
jp
mov
push
and
sub
add
mov
lods
mov
mov
push
xlat
fnsetpm(287
lahf
sub
loop
mov
cmpb
sti
sbb
int
in
add
loopne
lahf
fs
pop
lods
push
inc
pop
sbb
std
loopne
les
adc
sbb
stos
xchg
mov
pop
fs
xchg
insb
rcrb
jmp
adc
jns,pn
or
cmp
nop
pop
test
inc
push
inc
jb
insb
xchg
dec
jecxz
int3
je
cmp
adc
mov
rclb
mov
pop
push
mov
insb
addl
daa
fcmovnu
or
jnp
pusha
dec
loop
pop
aam
das
xor
mov
insb
jo
and
ja
rcl
sahf
shl
in
cmp
enter
cli
and
cmpsl
jns
jb
add
fdivrp
mov
mov
cli
mov
data16
lock
fdivl
shrb
jl
aam
cltd
int3
ret
fcmovnbe
xor
insl
movsl
add
add
ljmp
test
mov
aad
push
and
sub
movsb
movlhps
xor
sbbb
imul
xchg
or
push
jne
and
mov
out
xchg
fcompl
jno
mov
pop
mov
sahf
popf
out
xor
jmp
scas
fstpt
xor
nop
jle
sbb
andb
or
or
xor
ja
cmpsl
into
dec
adc
or
or
jae
fwait
xchg
mov
add
inc
stos
sbb
or
int3
cltd
sarl
sbb
cli
int3
scas
xchg
mov
das
mov
fmul
mov
mov
mov
scas
lret
xchg
sbb
mov
fwait
mov
dec
lret
xchg
jne
bound
mov
or
xchg
aas
xlat
jmp
sub
ret
out
out
shll
lds
jnp
sbb
inc
mov
insb
fsubs
jle
cwtl
ds
push
mov
or
pop
adc
jle
inc
mov
pop
jae
js
popf
dec
and
mov
mov
mov
fs
les
adc
scas
sub
xlat
push
pop
stos
stc
adc
mov
repnz
leave
push
in
sub
mov
inc
int3
loop
or
inc
push
in
dec
fnstenv
push
push
cltd
add
mov
int3
stos
and
pop
jb
xor
dec
jg
lds
mov
scas
and
iret
and
xor
cmp
pop
icebp
movsb
mov
mov
jbe
and
jge
sbb
sbb
pop
daa
jns
cli
cmp
cmc
jl
test
xchg
shrl
pop
fimuls
xor
push
pushf
adcl
sti
test
inc
nop
push
inc
mov
inc
jb
cwtl
fs
std
or
pop
sub
sbb
mov
loope
xor
xchg
andb
ds
ret
movsl
pop
sub
js
test
inc
jecxz
orb
popa
add
xchg
and
push
xchg
addr16
jns
cmpsl
js
ret
popa
sbb
dec
pop
cmp
int
int
xchg
mov
sub
add
adc
fwait
into
pop
jg
dec
push
sbb
add
mov
in
and
imul
int
mov
sti
negl
mov
lret
rcll
xchg
sbb
sahf
loop
sahf
push
test
test
lret
mov
sub
shlb
mov
pop
ss
jnp
out
push
fsubs
add
pop
movsb
inc
cli
enter
add
scas
cmp
mov
jp
aaa
mov
cmc
fisttps
xor
lock
adc
xchg
mov
adc
jae
add
cmp
popa
lods
jb
push
mov
xlat
sbb
fsubrl
xchg
fiaddl
in
jmp
repnz
lret
les
decb
jmp
lock
pushf
cmc
pop
inc
jo
fnstenv
pop
les
mov
mov
jecxz
mov
pusha
inc
rcrb
mov
ret
push
sbbl
inc
cs
sbb
subb
in
shll
ret
sub
xchg
call
jecxz
sbb
dec
rcll
add
pop
mov
sbb
aas
mov
pop
pushf
out
cmp
inc
jp
or
adc
sub
and
and
dec
push
shll
xlat
out
mulb
out
std
outsl
ds
cwtl
mov
cmpsl
cmpsl
js
mov
xor
movsb
push
cld
mov
or
push
add
adc
popf
mov
jge
sub
xchg
mov
ret
push
mov
jbe
ret
cmp
dec
sti
inc
movsb
xchg
dec
imul
lods
cmpsb
cmp
mov
clc
mov
and
lds
roll
clc
nop
cltd
mov
jmp
mov
push
int
cmp
fisttpll
xchg
and
scas
sar
jns
pop
addr16
stos
and
ret
aad
xchg
jb
mov
mov
dec
ljmp
or
aad
addr16
mov
outsb
add
test
gs
jp
jp
sub
or
sub
fwait
mov
rcrl
pop
mov
add
push
out
call
stc
pop
jns
xchg
xchg
xlat
out
je
sbb
sub
inc
ret
xor
pusha
les
pop
out
imul
fs
mov
popf
testb
sahf
jne
shr
mov
pop
fildll
push
sub
scas
dec
xchg
clc
leave
mov
out
int
sub
fidivrl
call
and
push
insb
mov
or
jle
idivb
xor
mov
insb
sbb
ret
xchg
pop
push
xor
inc
mov
rorl
ficoms
add
cmp
or
fidivl
dec
xchg
outsb
scas
sub
leave
mov
or
lea
push
movsb
sub
pusha
and
mov
adc
sbb
xchg
and
hlt
fstps
fs
iret
jl
or
rcrl
or
mov
int3
xchg
dec
pop
mov
lcall
xchg
ljmp
xor
movsb
dec
mov
push
lret
or
jbe
dec
in
jge
sbb
sbb
jg
daa
js
pop
cmp
leave
mov
jl
test
push
cmp
inc
and
jo
lcall
lahf
push
fisttps
push
out
ljmp
mov
mov
jg
xor
clc
gs
push
jae
loope
cld
cmp
fdivl
idivb
mov
movsl
arpl
stc
movsb
scas
rolb
ds
add
sbb
cltd
aas
xor
in
movsl
js
insb
jns
loopne
bound
and
data16
mov
sbb
pop
outsb
and
adc
jbe
les
out
mov
xchg
xchg
mov
movsb
iret
mov
jl
and
sahf
mov
int
sub
subb
fldcw
shr
mov
sbb
sub
mulb
test
cmp
pop
cmp
loop
pushf
mov
fs
int3
je
in
mov
cmp
and
cli
sti
and
xor
pop
fstpt
dec
or
jbe
sbb
cmc
cmpsb
out
out
jp
mov
adc
cmp
imul
movsl
or
lods
pop
mov
mov
pop
mov
sub
xchg
in
push
pusha
jp
jp
pop
xor
adc
loopne
lods
jg
sbb
or
fldcw
and
les
xchg
repz
stos
daa
pop
sbb
and
test
out
adc
popa
xchg
xchg
add
aad
jns
nop
int
mov
jb
dec
push
dec
rcrl
pop
jecxz
dec
int
push
adc
mov
jle
or
aas
xchg
js
jno
push
fstpt
cmp
pop
aas
test
inc
outsb
jle
inc
xchg
out
das
lock
mov
fcmovb
push
and
jbe
shll
push
imulb
xchg
push
mov
cwtl
jo
sahf
cmpsl
ja
mov
icebp
in
loop
cld
in
repnz
mov
shll
jo
test
pusha
lret
rclb
pop
sub
repnz
stc
add
insl
jae
and
imul
ljmp
lods
adc
dec
mov
out
mov
pusha
jl
paddq
jge
fldenv
clc
test
add
push
sti
push
mov
mov
sar
cmp
xchg
js
sbb
mov
pop
adc
sbb
div
mov
push
fs
dec
rcrl
or
sarl
xor
cmpsl
sbb
jno
dec
dec
fcomps
test
ja
fwait
les
mov
inc
or
mov
fwait
in
dec
push
enter
lock
cmp
jl
gs
shll
jns
sub
in
jbe
xchg
es
cli
mov
mov
pop
ljmp
xlat
cld
xchg
jp
popf
shlb
popl
pop
dec
mov
jne
movsb
add
inc
pushf
push
xchg
in
push
jmp
ret
mov
cmpl
loopne
int
dec
or
inc
dec
push
stc
mov
xor
jb
push
insb
or
pop
jnp
lods
je
inc
inc
mov
pusha
out
insb
iret
lret
imul
pop
xchg
jae
mov
push
mov
xchg
lahf
aaa
stos
fisubl
cli
icebp
xchg
lds
sbb
mov
jle
lock
inc
inc
adc
test
mov
addr16
cmpsl
hlt
and
push
arpl
mov
push
leave
push
mov
cmp
xor
cmp
dec
lcall
push
ficoms
sub
shlb
cmpsl
and
rol
jmp
movsb
rorl
push
mov
jge,pn
add
sbb
lret
ja
cmp
cmp
jl
pop
xchg
dec
jne
rorl
and
cmp
jo
data16
lahf
outsl
es
mov
popa
jno
cmp
dec
cmpsb
mov
lcall
test
out
loope
out
sub
mov
lods
icebp
and
scas
dec
rorb
pop
mov
jne
popa
add
stc
fnsave
lods
dec
mov
pop
mov
js
stos
jge
pop
scas
push
lcall
xor
out
mov
or
popa
outsb
sub
and
push
int3
sbb
fwait
aad
mov
dec
xor
xlat
addr16
and
inc
jp
jae
imul
sti
lods
out
negl
mov
roll
test
cld
xor
sahf
cltd
xor
test
pop
jecxz
aaa
in
adc
cmp
nop
stc
inc
cld
mov
je
adc
mov
cmp
fdivl
push
fsub
cli
cs
scas
jns
cmp
fisttps
mov
cli
into
std
and
aad
popa
pop
xlat
rol
iret
adc
imul
push
pop
loop
inc
test
clc
xlat
cwtl
jecxz
sub
mov
shrl
push
mov
mov
mov
push
dec
jnp
inc
xchg
cltd
clc
fldenv
push
fcomi
decl
mov
cmp
pop
lahf
cld
pop
jge
rclb
jno
sbb
cld
cs
sub
nop
test
adc
and
jmp
xchg
push
inc
dec
dec
dec
sub
lret
jecxz
mov
sti
lea
cmp
test
loop
xor
push
orl
cmp
rcrl
or
incb
lea
iret
push
sbb
sbb
mov
rcll
imulb
or
sub
andb
cmc
add
ret
inc
adc
psrlq
lret
sub
pop
mov
outsl
cli
mov
xchg
pusha
xchg
pop
jg
jecxz
and
imulb
jg
popf
aam
popf
repz
mov
inc
es
cs
pop
push
inc
dec
icebp
and
xchg
enter
mov
dec
mov
mov
ds
and
sti
gs
rdpmc
addr16
cltd
adc
test
sub
push
mov
ss
dec
sarl
mov
shll
xchg
inc
stos
add
out
pop
add
xchg
add
push
aas
fsubrs
ljmp
or
and
mov
xchg
dec
aas
hlt
fwait
test
in
ja
pop
popf
dec
push
inc
inc
into
or
rclb
jmp
adc
push
imul
add
xchg
xor
out
cmpsb
test
jns
jne
in
enter
dec
mov
sahf
pop
pop
mov
mov
sbb
jp
xchg
dec
mov
hlt
ss
call
stc
mov
mov
xor
fbld
int
mov
clc
les
loopne
out
inc
add
mov
push
or
pop
cmp
sub
stos
xor
pop
sbb
jnp
adc
mov
in
cmp
pusha
or
iret
sub
pop
mov
scas
std
jae
icebp
push
push
dec
mov
popf
filds
jns
pop
inc
push
call
xchg
xchg
sbb
lods
sbb
push
repnz
je
push
jb
push
xor
lods
adc
inc
dec
mov
mov
jg
hlt
outsl
lahf
pop
arpl
jo
inc
aad
fisttpl
mov
mov
mov
das
or
out
insb
and
lcall
mov
sarb
mulb
mov
cmp
jo
movsb
pop
mov
push
imul
inc
sbb
and
jno
inc
jl
movsl
add
push
or
ja
jns
lods
lahf
mov
push
lea
lret
adc
mov
cmpsb
cmp
mov
enter
pop
call
or
inc
sub
mov
out
shlb
movsl
jno
fldenv
dec
ret
bound
add
adc
lods
loop
add
sub
jnp
aam
pop
dec
loopne
out
push
and
jl
pop
faddp
bound
shlb
fcoml
xor
adc
sub
adc
cmp
inc
mov
xor
add
ja
and
outsl
push
jbe
leave
int
mov
sub
nop
notl
jp
mov
rcrl
pop
mov
int
sub
sahf
cmp
lea
and
pop
outsl
push
mov
cmp
cli
xchg
pop
fs
jno
adc
mov
clc
fcoms
mov
ret
testl
and
into
loopne
ja
xor
mov
xor
pop
pop
test
adc
or
adc
mov
add
int3
lods
daa
xchg
or
dec
inc
xchg
xlat
xchg
sub
out
sti
push
mov
sub
jle
fmul
mov
gs
imul
or
dec
imul
cmp
flds
fcmovu
xchg
repz
out
xchg
xor
sbb
xchg
clc
fwait
fstl
sbb
inc
pop
adc
subl
cs
inc
add
aas
ret
jb
add
dec
mov
xchg
sbb
dec
jne
push
sbb
lea
call
rcrl
cmp
lahf
sti
mov
cli
lahf
fistl
mov
jl
test
dec
mov
mov
dec
cmpsl
mov
lds
rcll
sbb
div
insb
mov
cwtl
out
add
into
jae
icebp
lcall
lret
fwait
or
mov
push
lock
pop
sahf
clc
ret
shl
imul
jbe
gs
pushf
test
aas
andl
dec
and
cmp
dec
in
imul
xlat
js
sub
aaa
popa
mov
add
mov
cmc
movsb
out
xchg
arpl
setb
add
sti
fcomps
mov
cltd
cmpsb
push
adc
dec
clc
test
cmp
cmp
lea
push
stos
icebp
jns
out
mov
adc
push
decl
div
or
adc
ja
push
dec
cmpsb
jae
test
subl
dec
add
mov
xor
mov
xor
xchg
add
mov
mov
bound
push
add
popa
add
outsl
fstl
loope
mov
jne
sbb
shlb
jnp
lea
in
les
push
fwait
sti
jne
jbe
mov
mov
lea
xchg
xchg
xchg
pop
mov
sbb
jle
mov
cmp
push
push
ja
lds
mov
adc
xor
std
in
hlt
fs
sbb
adc
xor
sbb
inc
loopne
sub
push
adc
popf
jmp
push
mov
popf
sbb
fimull
pusha
dec
sbb
shrb
int
cmp
jns
fcoml
icebp
jmp
mov
or
mov
pop
arpl
lret
fadds
xchg
or
xor
inc
aaa
inc
push
and
pop
xor
add
dec
int3
push
enter
add
movsl
mov
rcr
loop
popf
mov
repnz
call
mov
jbe
jle
jge
jl
sbb
daa
jne
cmpsl
cmp
mov
xchg
mov
aad
push
jmp
sub
push
addr16
outsb
add
lods
sarb
icebp
lods
fcoml
or
cwtl
add
in
xor
ret
call
shrb
jmp
jnp
sbb
negb
movsl
js
pusha
and
dec
insb
pop
sub
leave
jge
jecxz
jecxz
inc
mov
xor
adc
pop
adc
jecxz
pop
pop
push
dec
lcall
sub
cmp
xor
outsb
out
inc
pop
adc
pop
sbb
fnstenv
mov
dec
xchg
mov
lfs
clc
and
push
lea
jns
aam
fldcw
subl
push
mov
lret
in
mov
mov
sbb
mov
test
mov
cmpb
fldt
push
xchg
loop
shl
mov
jns
in
ror
in
inc
mov
andl
sbb
fcoms
and
xchg
sbb
cmp
insl
xor
jne
into
ret
addr16
sti
sub
pop
adc
popa
inc
imul
je
add
push
mov
adc
push
int3
cltd
sub
bound
xchg
pop
sti
xchg
fwait
std
pop
gs
dec
cmp
mov
fsts
cmp
in
addr16
xchg
xchg
repz
sarl
rolb
pop
jecxz
adc
dec
mov
or
jmp
sbb
push
mov
xchg
aas
popa
std
das
jb
sub
dec
ss
mov
jecxz
jno
pop
leave
jg
roll
call
es
mov
sbb
dec
dec
mov
fcmovnb
mov
adc
cmp
das
cmp
decl
cmc
and
jmp
rcrl
out
xor
std
or
cwtl
mov
cli
lods
mov
jno
mov
gs
or
xchg
sbb
int
shl
jge
pop
mov
cmp
sub
sahf
aam
out
cltd
ret
cmpsb
ret
inc
orb
sub
xor
xchg
inc
scas
popa
ljmp
test
sub
push
and
xor
psllw
cmpsl
cltd
jle
popa
test
mov
mov
dec
ds
inc
inc
mov
clc
rorb
sbb
test
rcll
pop
adc
test
and
out
xchg
mov
adc
cmc
cmp
sub
insl
xor
jo
xor
sub
mov
jp
mov
xlat
sub
jbe
mov
inc
cld
jns
or
dec
mov
push
mov
jecxz
test
testb
inc
addr16
fs
stos
bound
repnz
in
imul
mov
sahf
addr16
xor
in
addr16
fstpt
sahf
mov
mov
ljmp
fbstp
mov
inc
adcl
mov
push
subl
out
orl
std
iret
or
push
cmp
mov
cmpsl
stos
sbb
jo
mov
jmp
jnp
sub
lods
repnz
adc
mov
insb
addr16
cltd
pop
sub
mov
jmp
aad
add
push
mov
out
shlb
aad
fidivrl
jle
lret
sbb
sub
scas
sbb
push
rcrb
adc
stos
repz
pusha
adc
hlt
add
push
and
lods
cwtl
aaa
push
cmp
lods
add
sub
pop
cmpsb
cmp
jns
jl
inc
cli
add
repz
cmpsl
scas
jl
or
mov
aad
pop
inc
jmp
push
daa
jbe
ja
jge
push
ss
and
push
cmp
lcall
ret
push
into
mov
xor
das
adc
push
xor
test
aaa
mov
in
inc
push
lahf
in
sbb
jns
in
notb
dec
sub
js
loope
cmpb
jmp
ret
push
mov
and
mov
and
sub
sti
sbb
sbb
xor
cld
aas
movsl
es
pop
cmp
xor
lcall
xor
call
hlt
fsubrs
xor
shl
pop
movsl
jg
les
mov
lea
and
ret
les
jl
mov
sub
not
mov
push
roll
mov
out
daa
sahf
adcb
dec
mov
pop
clc
pop
outsl
aam
mov
stc
push
retw
adc
inc
push
ss
ja
cmp
or
push
add
shl
xor
pop
mov
or
push
adc
cmpsb
notl
ret
xor
insb
adc
icebp
mov
dec
xlat
imul
jmp
data16
cmc
adc
xlat
push
xchg
sub
inc
dec
mov
add
cmp
mov
movsl
movsl
loopne
mov
dec
cwtl
fwait
mov
flds
add
lock
rep
imul
and
cmpsb
enter
mov
stc
pop
xchg
insl
das
adc
xchg
pushf
mov
outsl
jmp
int3
insl
cs
sbb
aad
xchg
call
aas
add
jno
lods
sub
jecxz
mov
pop
in
add
cmp
cs
in
push
mov
stos
jl
int
sahf
dec
cmp
ljmp
bound
inc
add
scas
das
insb
xchg
jo
jns
push
mov
mov
in
jbe
jbe
pop
std
mov
ficompl
jae
push
mov
dec
inc
gs
nop
test
jns
lahf
mov
inc
jle
fsubrl
sbb
fcompl
adc
fs
aam
xchg
ret
xor
mov
fmull
mov
sub
adc
out
popa
call
lods
das
mov
cmpsl
movsb
jnp
add
in
movmskps
pop
add
add
cltd
mov
mov
shll
cmp
pop
es
fisttpll
dec
clc
sti
shrl
mov
push
cld
pop
mov
jmp
and
xchg
aad
sub
mov
cmovo
jg
xchg
stos
add
xor
hlt
frstor
jge
lock
je
aad
test
mov
dec
call
out
or
and
jecxz
push
push
subb
call
mov
bound
jecxz
jns
daa
in
mov
push
mov
out
push
mov
jmp
test
rcll
mov
cmovge
test
dec
sbb
jno
adc
cmp
ret
fcompl
jmp
out
lods
repz
add
sub
shrl
push
cmc
xchg
data16
mov
pop
and
ror
mov
fdivrl
rclb
in
xchg
mov
iret
inc
lret
hlt
ret
or
inc
idivb
rclb
cwtl
rcrb
cmp
cmp
adc
call
outsb
sbb
push
arpl
dec
ljmp
sub
cmpsl
jg
mov
mov
clc
leave
call
push
and
inc
fimuls
or
sub
cmp
add
loopne
int3
sub
adc
ficomps
pop
repnz
insb
scas
pop
xor
cmp
sahf
arpl
int3
repz
in
jge
test
daa
jae
ja
into
add
jl
xacquire
outsb
cmc
push
mov
mov
jo
aas
lahf
jmp
mov
test
add
scas
cmpsb
movb
enter
pop
movsl
call
sbb
sub
cmp
cmp
mov
movsl
xchg
and
xchg
sub
jg
ret
cmp
mov
add
mov
inc
push
add
js
imul
jl
nop
push
xlat
cltd
xor
xchg
jge
sub
jnp
outsb
mov
sbb
jns
dec
sarb
sbb
mov
sbb
data16
cmc
mov
pop
fsubs
pop
jbe
push
jg
lods
int
mov
sub
jb
notl
push
rcr
decb
or
and
repnz
xorb
outsl
mov
enter
xor
add
adc
add
rclb
fmul
jmp
out
jl
cli
cli
or
or
cmp
dec
or
adc
cmc
mov
inc
xor
xor
or
jg
imul
stos
add
fisubl
xchg
fsubrl
xchg
les
sub
add
insl
xor
sti
in
and
gs
ss
sub
dec
idiv
push
inc
loop
jecxz
jle
mov
repz
hlt
sbb
dec
push
es
pop
sbbl
pushf
pop
mov
jmp
inc
mov
lcall
adc
leave
aas
lahf
sub
jb
adc
and
pop
je
mov
jecxz
xor
mov
call
movsb
push
ss
icebp
push
andl
jl
outsb
mov
test
das
dec
push
add
insl
lret
inc
xor
mov
push
je
pop
inc
push
cmpsl
jb
repnz
pop
cmp
lret
call
mov
movsl
lock
ljmp
outsl
jno
sub
es
nop
add
mov
cmp
les
xchg
call
sbb
cmpsb
arpl
repnz
mov
or
and
scas
aam
add
shll
in
xor
mov
ja
push
lret
fnsave
adc
ss
ret
sub
inc
roll
ljmp
mov
lds
push
stos
jmp
jmp
jmp
or
stos
jbe
sub
mov
xor
dec
fisttpl
test
shlb
dec
fldl
jns
or
rcr
fwait
iret
pusha
push
push
negl
cli
add
stos
and
and
jp
jns
jmp
pop
xchg
mov
sub
mov
cmpsb
push
std
addr16
cwtl
jp
jns
mov
or
mov
movsb
sub
dec
sti
cmp
mov
int
jbe
xchg
add
xchg
jmp
mov
mov
jb
push
sub
or
repnz
add
cmp
jnp
cmp
sub
out
dec
addr16
cmpsb
sub
test
lcall
jae
sbb
pop
ret
mov
pusha
add
inc
sbb
cwtl
fisubl
push
aam
mov
cmp
scas
fildll
mov
adc
sbb
leave
pop
in
hlt
fwait
nop
push
arpl
jno
inc
loope
addr16
mov
lcall
xor
cld
pop
mov
inc
jns
push
jns
shrb
fildll
mov
cmp
lahf
mov
push
movsl
mov
adc
loopne
sbb
shlb
jb
add
jno
cmpb
ljmp
xchg
mov
xor
in
test
fstps
int
int
rolb
fcoms
and
in
jmp
lahf
ficoml
in
pop
push
mov
loope
fwait
das
sub
mov
or
pop
add
movsl
lea
sub
mov
mov
adc
sbb
cmp
mov
adc
sub
pop
pop
mov
push
js
roll
cs
lcall
xchg
fdivrl
xor
sub
icebp
daa
adc
cwtl
and
jg
ja
mov
ror
mov
fisubl
mov
in
aad
es
aas
push
cmpb
int
aad
sub
das
notl
jecxz
push
jne
shll
mov
xchg
rcrb
call
xor
nop
jo
outsl
xchg
xchg
mov
stc
imul
ss
add
fadds
outsb
daa
cli
sub
push
mov
or
push
push
into
insb
repz
cmc
push
out
xor
push
imul
add
cmpsb
mov
lods
ret
and
xlat
roll
mov
in
fsubs
push
incb
movsb
gs
outsl
lods
loopne
mov
dec
push
pusha
jns
cmc
sub
mov
jg
push
inc
test
or
fwait
xchg
cmp
cmpsb
sbb
sbbl
pop
cld
push
mov
jmp
add
xchg
aad
aad
jge
nop
out
loop
aas
ds
adc
xlat
int3
dec
fwait
dec
aad
inc
sub
loopne
bound
scas
call
arpl
cmp
ss
fistl
lret
pop
adc
imul
pop
inc
aaa
std
add
sub
fisubl
and
mov
rclb
rorl
idiv
and
std
add
sub
cmpsl
jno
cs
testb
out
push
lret
push
ret
cmpsl
mov
add
or
rolb
mov
aam
fbld
es
xor
lods
mov
xchg
add
not
or
push
fcoms
mov
in
dec
sub
add
sbb
push
mov
aad
and
mov
hlt
adc
inc
push
popf
cld
inc
clc
jno
stos
xchg
adc
sbb
sbb
rcrl
sbb
xchg
dec
cltd
sub
push
xchg
incl
add
cltd
hlt
push
je
add
xchg
pop
sub
mov
add
lahf
ret
inc
shrl
or
push
and
push
lcall
add
sti
xchg
out
add
bound
jns
jl
in
push
and
in
ljmp
popa
jbe
sarl
jp
hlt
out
dec
sub
mov
outsl
insl
dec
fisubrs
cmpxchg
cmpsb
or
add
push
jmp
test
outsl
adcl
add
lret
int
sub
mov
rclb
sbb
stos
je
nop
and
xchg
stos
insb
mov
sbb
push
xor
in
rol
mov
iret
add
cmp
inc
or
ja
jb
pop
push
push
sub
popf
xchg
mov
cltd
push
dec
ficoml
fcoms
pop
and
imul
push
push
xchg
jne
adc
stos
mov
pop
or
leave
cwtl
mov
out
cli
arpl
fcmovnu
inc
in
orl
inc
movq
jmp
and
mov
pop
pop
ljmp
je
inc
sub
and
in
cmp
fs
sbb
jge
push
mov
daa
jno
in
cmp
inc
jno
test
jl
mov
dec
movhps
xor
inc
jo
lahf
sub
mov
push
cwtl
es
inc
sbb
lds
rcrb
sub
and
shl
and
sub
or
clc
or
jg
and
push
xor
andb
leave
sbb
adc
xchg
out
aad
pop
mov
cmpsb
js
inc
jne
pop
aam
lcall
enter
fldcw
movsl
aad
outsb
jnp
in
pop
jnp
shlb
pop
jg
xlat
js
into
mov
mov
and
pop
je
jne
pop
sub
dec
int
adc
lods
lret
mov
or
mov
add
push
mov
fucomp
xor
outsl
jno
cmp
lods
pop
lea
mov
sbb
sub
aas
ss
jb
cmp
ds
inc
cli
pusha
xor
inc
cmp
jp
or
mov
dec
pop
push
cmc
pop
inc
hlt
xor
ficompl
xchg
inc
pop
adc
insb
xchg
pop
cmpsl
adc
mov
add
movsl
or
lods
stos
orb
insl
iret
xlat
adc
lahf
sub
out
lcall
jmp
daa
push
dec
gs
jns
push
push
sub
enter
push
adc
in
insl
or
adc
fldcw
sub
cmp
or
pop
scas
hlt
mov
jnp
loope
mov
push
add
loop
mov
call
cmp
or
dec
adc
into
je
and
gs
lea
jecxz
fstpt
jp
and
scas
mov
fwait
testb
push
cmpsb
fildl
dec
cmc
inc
pop
pushl
push
sbb
das
or
in
mov
fistl
popf
rcrl
mov
std
cmpsl
shll
into
mov
mov
int
cmpsl
cld
adc
mov
and
jmp
cmpsb
sti
pop
cmp
mov
sub
mov
jge
sub
loop
xor
insl
les
xlat
dec
rorl
sub
push
cli
popa
sub
jecxz
mov
adc
adc
sbb
mov
insl
mov
jno
pop
call
mov
push
push
subl
lods
push
push
xchg
push
pop
shll
leave
clc
stos
pushf
xchg
xchg
stos
pop
clc
push
popa
in
jmp
pop
or
jecxz
xor
and
mov
xchg
mov
test
inc
int
jb
loop
sarl
or
test
fwait
sub
mov
cmp
out
loopne
out
testl
in
fwait
lea
xor
into
pop
sbb
xor
mov
jp
and
mov
outsl
mov
js
dec
rcll
jne
push
shlb
mov
xchg
stos
or
data16
cli
xchg
push
pop
cmpsl
andl
add
mov
jmp
stos
out
cmp
adc
scas
jnp
mov
in
insl
bound
xchg
fs
aam
xchg
mov
roll
jae
loopne
push
loope
iret
popf
scas
push
fwait
inc
sbb
dec
fimull
jle
xchg
add
or
pop
imul
scas
movsl
ror
fdivl
sti
mov
lods
sbb
xchg
hlt
xor
cs
out
sub
cltd
and
or
pop
add
and
pop
sbb
lret
enter
mov
rcrb
scas
clc
xchg
cld
adc
add
outsl
and
in
jge
inc
xor
jmp
jnp
jo
sbb
jno
cmc
pop
jl
push
fmull
xchg
sbb
pop
mov
dec
fwait
cmp
int3
lahf
dec
mov
push
jg
push
les
pop
inc
stos
add
cmpsb
dec
mov
sahf
enter
pop
fsubrs
mov
adc
xor
out
cmp
test
movsl
fwait
shrb
jmp
mov
xorb
jae
idivb
fwait
add
cmp
xor
rcl
mov
mov
fdiv
or
mov
lcall
inc
fcoml
cmc
outsb
fidivrs
adc
dec
cmp
mov
fidivl
mov
mov
mov
push
pop
and
push
mov
test
fdivrl
loopne
rorl
lahf
lret
lahf
shll
rcrl
repz
push
jge
test
add
sbb
sub
inc
mov
cmpsl
adc
mov
rcrb
cmp
stc
cmp
out
fisubs
xor
dec
push
or
mov
xorb
ror
pop
mov
aaa
adc
sub
add
jno
xchg
pop
imul
lret
xchg
xlat
push
xchg
in
mov
lods
pop
in
scas
add
decb
push
gs
add
dec
adc
sub
ss
fldenv
xchg
scas
les
jp
test
mov
sbb
stc
out
xlat
xchg
cmpsb
pop
bound
adc
inc
cmpsb
pushf
pop
imul
cs
pop
adc
push
adcl
or
jb
stc
mov
mov
jnp
xlat
jno
jecxz
pop
mov
xor
push
imul
loope
daa
mov
mov
dec
in
push
xorl
inc
insl
dec
xor
call
out
inc
mov
out
mov
ljmp
std
dec
push
pop
cmpsl
outsl
sbb
icebp
movsb
jmp
inc
lret
xor
jne
mov
push
sti
lock
mov
push
shr
dec
dec
sub
mov
dec
jns
ret
jno
cltd
adc
jmp
stos
testb
pushf
xchg
sbbl
mov
mov
xor
sub
int3
nop
xchg
inc
jle
cltd
xchg
mov
push
mov
mov
add
jmp
test
xchg
fs
sbb
or
pop
mov
push
rep
mov
dec
out
nop
xchg
icebp
pop
mov
mov
incl
push
xor
cmp
or
addb
mov
test
push
jge
xor
loope
mov
pop
inc
out
add
lea
loopne
jl
sub
adc
mov
jns
jns
bound
xchg
sahf
divl
sbb
push
pop
xlat
outsl
outsb
addr16
insb
dec
jp
push
test
out
mov
inc
sbb
jne
dec
inc
mov
xchg
push
fistpll
pop
cmp
pop
push
scas
xchg
sbb
sbb
rcrl
sub
lods
push
inc
push
icebp
lods
mov
and
repnz
insb
rclb
dec
jne
pop
and
pusha
mov
insb
push
ret
inc
pop
aas
data16
jae
mulb
popf
aad
add
inc
xchg
sub
xchg
jge
xchg
sbb
inc
mov
dec
xor
and
adc
xchg
dec
mov
jmp
leave
jmp
hlt
jl
pop
arpl
jnp
inc
ljmp
push
roll
cmc
and
fsts
out
fisubrs
and
xor
xlat
push
aad
push
mov
movsb
sub
notl
sub
pushf
jge
dec
loope
cmpsb
clc
push
daa
outsl
cwtl
mov
lcall
jl
lret
in
iret
rorl
cmp
cmpsl
inc
jo
push
or
imul
adc
inc
cmp
sarb
sub
lret
mov
pop
mov
ror
loope
push
sub
sub
cmp
cmpl
mov
movsl
mov
sbb
sti
mov
orb
sbb
mov
mov
pop
mov
pushf
pop
push
stos
rcrl
pop
jo
aas
inc
jnp
cmpl
outsb
inc
xor
xchg
shrb
jecxz
jg
mov
dec
mov
fnsave
ljmp
inc
test
notl
push
das
sarl
jp
mov
mov
je
ficomps
jmp
repnz
dec
outsl
das
sti
pop
loop
xchg
sti
shll
mov
ss
std
fdivs
cmp
sti
ja
pop
mov
or
push
scas
into
adc
sub
xor
xchg
repnz
je
pop
es
cmp
and
sub
mov
mov
sbb
iret
sti
mov
xor
les
dec
jae
xchg
inc
cs
fstps
loop
daa
mov
pop
xchg
test
ja
xor
pop
push
mov
fcoml
sub
jp
or
jmp
lret
dec
cs
kmovb
mov
jb
pop
outsb
dec
add
dec
je
adc
jecxz
in
mov
lea
das
xchg
mov
xor
mov
adc
or
scas
fcmovnu
addr16
cli
stos
dec
inc
sub
xchg
push
das
jg
mov
dec
icebp
bound
mov
sarl
cmpsb
cltd
test
sar
cmc
loopne
cwtl
add
mov
jnp
dec
cld
addr16
push
lret
movsb
fdivs
mov
inc
shlb
mov
add
sarb
mov
aam
les
add
es
sti
insl
xchg
pop
mov
test
xchg
rorb
popa
pop
inc
pop
lods
aam
call
mov
es
mov
sub
sbb
or
lods
push
pop
adc
clc
and
xor
and
rcrl
jge
adc
mov
out
jb
test
pop
aas
popf
jmp
ja
xor
test
lds
inc
jle
mov
dec
ja
lods
test
add
ja
call
jne
xchg
pop
or
rorb
fwait
mov
push
cmpl
scas
xor
jle
sahf
movsb
daa
bound
lret
repz
xchg
in
push
movsb
mov
xchg
dec
add
jp
popf
push
mov
bound
mov
cmp
xchg
adc
fisubrl
push
xchg
push
cli
das
jmp
out
jl
fcoml
out
sub
sub
test
xchg
push
xor
inc
pop
push
jnp
rcrb
in
repz
adc
and
and
mov
pop
pop
jbe
add
or
fisttps
push
addr16
pop
popf
cld
pusha
dec
mov
push
cld
repnz
adc
pusha
mov
imul
scas
imul
adc
into
push
mov
push
fsubl
mov
arpl
mov
inc
in
insb
jmp
icebp
mov
aaa
addb
add
xchg
pop
ja
rcr
sbb
lds
pop
rclb
je
and
cmp
mov
dec
jbe
rolb
popa
js
daa
outsb
mov
mov
jl
adc
push
and
jmp
fistl
mov
lahf
xchg
push
and
in
push
stc
mov
inc
enter
push
sub
test
gs
pop
loopne
loopne
mov
in
sub
clc
inc
cmp
aam
movsl
test
das
mov
sbbb
fs
add
mov
aaa
cltd
out
es
js
fisubrs
fcoml
lcall
ret
inc
int
jb
outsb
movsb
fisubrs
adc
add
fdivrs
push
jle
mov
mov
jno
and
mov
int
xor
dec
in
daa
testl
xchg
rcl
in
lahf
jno,pt
mov
dec
test
jnp
cld
push
pop
outsl
push
iret
shl
data16
fs
mov
mov
adc
cmp
outsl
out
sbb
dec
pop
idiv
stc
in
add
cmp
jbe
or
pop
xor
insb
mov
xor
std
lret
mov
add
push
add
rcr
add
lods
pop
repnz
mov
mov
sub
js
in
test
nop
xchg
je
lret
mov
loopne
lahf
dec
rcrb
inc
inc
inc
adc
les
in
repz
push
cmp
nop
lods
push
cmp
nop
aad
jb
enter
andb
int
aaa
cs
cli
cmp
mov
in
popf
dec
ja
mov
insl
push
test
outsb
dec
mov
call
pop
ja
mov
lock
mov
or
inc
mov
push
mov
push
in
jmp
push
mov
cld
and
testb
mov
pushf
cmp
mov
data16
icebp
push
adc
lret
adc
outsl
mov
xor
lock
xlat
rcrl
xchg
icebp
mov
mov
pop
aam
bound
sarl
insl
jns
push
dec
les
into
ljmp
subl
dec
mov
sub
and
add
test
adc
mov
fnstsw
or
xchg
xor
imul
stos
imul
insb
xchg
jg
push
push
repnz
movsb
xor
xchg
jne
fdivs
inc
pop
mov
fidivrs
test
cmp
stc
dec
lcall
or
mov
mov
es
xor
mov
popf
out
jge
cltd
bound
xlat
adc
jle
jp
cmp
inc
mov
push
dec
mov
dec
mov
mov
mov
adc
mov
iret
sub
dec
push
jne
pop
cwtl
mov
aam
fistpll
xchg
and
sbb
dec
cmovle
mov
xlat
xor
sub
mov
push
ja
inc
in
shlb
loop
insb
cmp
jnp
sbb
jle
fimuls
in
int3
hlt
pusha
cmc
jb
iret
adcl
pop
lods
inc
sti
inc
cmp
aaa
jae
in
sbb
popf
and
pop
mov
xchg
push
jbe
and
xchg
sub
popf
sbb
mov
imul
scas
into
vandnpd
sbb
mov
movsl
mov
leave
mov
hlt
adc
shlb
sub
or
or
aaa
aas
or
add
sbb
int3
scas
iret
push
pop
cmpsb
mov
in
testl
and
inc
cmc
movsb
inc
fimull
push
xor
jbe
clc
outsl
jge
add
daa
insl
pop
lret
dec
ret
jno
mov
jl
das
adc
cwtl
jmp
xor
lods
mov
lahf
movsl
leave
pop
push
clc
cmp
test
les
inc
push
cmp
popf
in
insb
pop
mov
pop
pop
insb
xlat
push
adc
loope
ror
sub
cltd
test
mov
and
movsl
mov
and
jnp
outsl
xchg
inc
sbb
mov
xor
das
lret
cli
insb
xor
js
in
pop
push
xchg
jns
scas
and
fcoml
mov
nop
adc
fbstp
jg
jge
mov
insl
or
lds
push
xchg
jb
int
lock
repz
lret
add
mov
rcr
negl
or
pop
jnp
outsl
in
cmpsb
mov
stc
imul
pushf
adc
ss
ret
push
fsubrs
test
out
in
cli
sub
outsb
xor
inc
cmp
lret
or
rorl
xor
mov
adc
test
adc
xor
fwait
mov
mov
mov
pop
inc
xlat
push
push
out
sub
push
scas
mov
out
dec
test
decl
mov
jecxz
sarb
mov
dec
xor
imul
loop
les
push
setbe
adc
sbb
stos
lods
sbb
push
dec
jge
jnp
inc
adc
mov
pusha
nop
push
jmp
daa
ljmp
xchg
sbb
pop
adc
jb
mov
dec
out
dec
sbb
shl
aam
test
jno
mov
call
push
ds
sub
loop
fstpt
inc
cmp
sbb
mov
mov
xchg
out
rcl
xor
std
inc
jle
cwtl
jns
jns
insb
ret
cltd
xchg
cld
mov
gs
mov
cmp
lock
adc
mov
mov
popa
clc
xchg
sub
push
rol
js
es
dec
mov
clc
cli
ljmp
jnp
stos
sbb
mov
pushf
xchg
inc
and
or
add
jmp
std
in
cltd
ss
test
add
mov
pusha
lea
add
clc
cwtl
fistps
sbb
push
pop
imul
stos
pop
repnz
push
fstl
int
sbb
and
xor
sbb
lret
xor
popf
inc
mov
xchg
aaa
push
dec
inc
add
push
ja
xor
dec
lea
pop
inc
mov
and
add
fwait
jmp
and
add
movsl
mov
out
pop
push
andl
mov
in
push
dec
xchg
mov
outsl
mov
rclb
mov
or
jp
call
call
mov
inc
mov
jne
jnp
mov
adc
pushf
addr16
idivb
sbb
sbbl
scas
push
sub
sahf
inc
iret
push
scas
ljmp
outsl
nop
inc
insb
movsl
lds
jle
stos
enter
sub
jmp
add
filds
pop
in
pop
inc
inc
pop
pop
jae
iret
sub
in
not
popf
dec
jmp
stos
inc
adc
add
xchg
orb
sbb
movsl
fisubrs
fprem
scas
xor
push
clc
test
adc
cs
push
leave
sub
lock
inc
repz
or
test
cmc
or
into
test
pop
aad
sub
xchg
ds
lds
add
je
cmpsl
and
enter
sub
int3
dec
push
push
jg
in
insl
xchg
lea
mov
sbb
xor
insb
xchg
jno
xchg
xor
sbb
and
push
out
cmp
pop
hlt
xchg
lahf
les
push
lret
ret
mov
outsb
inc
out
mov
pop
push
mov
pop
pop
movsl
ss
inc
shl
xchg
dec
cmp
push
outsb
cmp
pop
ds
mov
mov
mov
sbb
addb
xchg
add
sub
mov
pop
xor
ss
pop
aam
call
push
cmp
xchg
faddl
jecxz
push
pushf
scas
outsb
push
cwtl
adc
mov
icebp
shll
and
mov
sub
and
js
in
inc
popl
lret
lods
sar
or
cmp
lcall
xorb
lret
outsl
int3
sbbb
daa
fdivr
and
pop
fs
pop
and
mov
inc
fidivrs
cmp
in
mov
dec
out
sahf
cli
pop
jmp
xor
popf
call
or
ror
xchg
cmc
cli
out
test
mov
and
imul
loop
add
cmp
pushf
js
lods
sub
or
sub
inc
mov
pop
mov
sti
scas
mov
jle
fldcw
jl
nop
push
push
inc
addr16
les
fdivp
in
mov
ficomps
test
in
scas
shl
mov
cmp
or
and
stos
sti
push
jecxz,pn
sbb
xor
clc
pop
jb
scas
adc
pop
cmc
je
jmp
jecxz
inc
xor
je
cmp
inc
cmc
sahf
mov
mov
mov
push
pusha
dec
nop
out
fldt
pop
jecxz
movb
push
inc
and
or
mov
adc
dec
shll
fists
mov
std
ljmp
cmpsl
imul
icebp
add
mov
call
rcrl
mov
jo
mov
mov
mov
shlb
or
sbb
lret
aam
pushf
test
pusha
jmp
insl
inc
adc
mov
jae
ljmp
mov
mov
mov
loope
mov
dec
outsb
add
into
test
sub
push
pop
test
rol
jecxz
adc
sbb
sti
shlw
pushf
pop
push
jmp
xchg
out
fwait
xchg
pop
xchg
or
iret
test
mov
es
or
or
mov
xchg
pop
loopne
lods
imul
dec
adc
inc
dec
fs
or
rorl
cmp
sbb
sarb
cmp
iret
dec
clc
jns
fdivl
xchg
cld
scas
xchg
ficoml
jg
cmp
ret
push
mov
jp
fwait
push
mov
fidivs
xchg
mov
lods
and
dec
xor
jne
std
xorb
sbb
jmp
inc
pop
or
fstpl
inc
or
push
loope
es
insb
adc
mov
push
cli
push
jle
insb
lret
stos
push
pusha
sub
aas
dec
lock
lock
sbb
and
cmc
push
push
mov
dec
popf
jno
lcall
test
xchg
fldenv
inc
sbb
outsl
cli
imul
push
scas
xchg
loop
push
aas
mov
adc
mov
dec
adc
mov
sbb
inc
testb
push
mov
rdtsc
add
js
test
icebp
pop
add
mov
lds
dec
out
scas
push
mov
jb
lret
movsb
push
or
push
jbe
sahf
or
sbb
xor
cmp
mov
jl
jecxz
dec
test
inc
fnstenv
bound
lahf
jecxz
imul
push
test
pop
fbstp
inc
jne
cwtl
cmpsb
fidivs
in
cmp
fwait
pop
popf
out
push
daa
xchg
loope
in
sub
pop
lods
cmp
popf
jb
push
repz
mov
loope
ja
jecxz
xchg
or
sbb
dec
xchg
add
stc
shll
pusha
pop
lahf
xorb
fwait
lods
xchg
js
lods
sub
push
mov
adc
pop
push
aam
fsubr
inc
or
aas
inc
int
int
jno
mov
in
rclb
imul
mov
push
aas
mov
pop
xchg
and
mov
int
xchg
mov
testl
cmpsl
mov
test
sahf
cmp
aaa
add
dec
or
pop
lds
stc
xlat
test
fs
repz
add
mov
fsubs
jl
cli
xchg
clc
xor
cmpsl
scas
cmp
in
or
jnp
into
mov
movsb
fidivs
sbb
lock
dec
pop
inc
adc
jb
adc
call
ss
and
lods
adc
mov
xlat
mov
sub
inc
sub
sti
pop
in
sub
stc
push
ret
mov
popl
loop
fnstenv
cmc
jmp
push
push
mov
xchg
xchg
push
inc
sbb
and
clc
push
add
jb
test
cs
mov
cmp
lcall
aad
repnz
in
scas
jnp
xchg
jg
jb
fidivrs
je
fildl
ja
push
fldenv
mov
push
push
mov
mov
lahf
fistpl
flds
dec
pusha
mov
das
inc
jmp
mov
and
outsb
repnz
mov
std
xchg
stos
pop
cwtl
out
inc
andb
inc
fdiv
xlat
fistpll
cld
adc
lret
pusha
add
mov
jno
lock
pop
repz
pop
jo
sub
cmpsb
test
aas
aaa
lods
ret
cmp
pop
mov
sarl
mov
mov
sbb
xchg
pop
lods
lods
subb
loop
pusha
and
aas
jno
xcrypt-ofb
cmpsl
outsl
mov
cltd
movsb
rolb
into
notl
jns
cmp
xchg
imul
mov
pop
rcl
stos
ss
mov
xchg
push
pop
or
sar
lcall
cmc
xor
wbinvd
push
xor
push
cmc
mov
cwtl
in
inc
dec
adc
mov
jb
jae
or
adc
jle
inc
ficoml
add
fistpl
out
sbb
bound
aas
jns
aad
in
aas
push
xchg
sub
xor
pop
popa
pusha
pop
jle
xchg
addr16
jp
add
sub
icebp
inc
mov
mov
movsl
in
mov
enter
xlat
mov
jmp
adc
loop
pusha
add
or
nop
stos
cltd
sar
and
inc
cmp
sbb
in
scas
aas
pusha
adc
iret
sahf
shlb
add
test
pusha
jle
pop
mov
mov
jae
lds
cmp
add
movsb
and
or
mov
scas
negl
push
xchg
adc
inc
mov
sahf
leave
in
leave
pop
jno
hlt
repz
inc
stc
jl
or
jnp
mov
jl
pop
or
lahf
xchg
jo
das
pop
xor
xor
lds
lcall
and
adc
loope
jbe
pop
and
dec
aas
addr16
push
int3
cmp
mov
jl
jnp
dec
sbb
xor
mov
das
xchg
push
jno
mov
mov
push
and
fst
cmpsb
popa
jne
in
and
enter
pop
fsubl
or
ret
sub
jne
cmp
arpl
je
inc
movsl
lds
xchg
and
jno
subb
jae
mov
aam
inc
mov
movsl
js
outsl
movl
addr16
out
xor
xchg
xchg
jge
cs
lds
or
adc
jo
mov
mov
aam
mov
ss
and
add
sub
cmpb
jns
lret
popa
shrl
fistps
pop
jb
sahf
loopne
imul
mov
loop
xchg
mov
mov
lods
fs
xchg
adc
mov
fs
mov
fcomps
push
out
mov
xor
mov
or
into
test
push
cmc
mov
xchg
pop
push
pop
adc
fisttps
adc
inc
lods
add
xchg
data16
add
adc
adc
push
leave
mov
xor
xor
or
adc
sbb
repz
and
xchg
leave
mov
dec
adc
inc
lea
insl
fldcw
insl
les
dec
repz
xchg
push
push
fcomps
pop
cmpsl
test
shll
sub
fcoml
push
jmp
out
add
aad
mov
nop
movl
jb
inc
xchg
dec
push
data16
je
pop
push
jp
xor
cmp
dec
mov
dec
fmuls
neg
lret
pop
sub
xchg
inc
shlb
jmp
mov
fmul
add
rol
add
std
cmp
stc
cmpsl
imul
das
icebp
scas
push
mov
ds
test
popf
cmpsb
imul
adc
int3
rcr
jns
sub
cld
adc
es
ret
lret
std
movsb
and
fldcw
push
lods
dec
mov
cld
xchg
sti
cmc
test
scas
mov
jo
lods
jmp
or
add
popf
loope
ficompl
clts
jne
add
or
inc
mov
imul
jecxz
fst
push
xchg
clc
dec
dec
or
mov
nop
jle
insb
mov
out
popa
test
fwait
mov
and
std
inc
pop
xor
pop
inc
xor
lods
push
mov
fwait
idivb
jp
adc
ja
add
dec
data16
sub
jns
or
xor
fwait
jbe
xchg
push
mov
mov
push
pop
adc
testb
stc
stc
pop
cld
repnz
jns
jb
in
aad
xchg
js
stos
mov
std
inc
mov
cmp
addr16
test
jp
sbb
jg
jmp
sub
dec
testb
mov
inc
add
xchg
outsl
in
jmp
fisttpll
dec
orl
mov
or
lret
jl
or
dec
and
lds
jmp
push
in
sbb
pusha
popa
lds
std
push
test
mov
imul
ret
push
ss
popf
mov
adc
xchg
lret
in
jne
xchg
xchg
or
jle
imul
pop
scas
pop
iret
rcll
aas
sub
xor
mov
ror
mov
mov
dec
inc
cld
loop
or
negb
sub
add
inc
int3
pop
xor
bound
fidivrs
pop
lds
or
rcrb
scas
adc
cmp
andl
insb
aaa
and
jge
and
sbb
mov
inc
cmp
xor
lcall
dec
xchg
push
insb
xor
sbb
inc
lahf
and
test
lock
bound
or
pop
enter
pop
sbb
push
or
xchg
sub
addr16
lret
aas
movsl
int3
push
and
mov
mov
ja
movsb
add
xchg
imul
xchg
pushf
push
inc
test
fnstsw
lds
lcall
lret
faddl
repz
jns
adc
dec
jl
jg
fs
mov
pop
pop
mov
jge
icebp
mov
lret
fxch
lods
icebp
inc
sub
das
sub
rol
and
xor
test
jmp
outsl
imul
jne
inc
mov
in
mov
push
xchg
push
push
cmp
dec
and
cli
clc
cs
xor
fs
push
cmp
into
addr16
mov
dec
cmp
iret
lds
mov
notb
pop
inc
pop
imul
lock
rorl
lods
loop
mov
or
jbe
or
popf
mov
fwait
in
inc
sti
mov
mov
pop
loopne
push
mov
inc
mov
xchg
sbb
imul
sbb
xchg
and
push
into
sub
inc
mov
dec
pushf
or
adc
js
xor
or
daa
aad
loopne
nop
mov
cld
gs
fxch
dec
lret
je
mov
jecxz
cli
cltd
jge
or
mov
pop
mov
xor
orl
xchg
stc
movsb
hlt
pop
int3
test
inc
push
dec
mov
das
add
aad
xchg
jecxz
and
inc
cmp
adc
push
jnp
std
fildll
cwtl
gs
cmpsl
push
fsubr
icebp
test
cld
imul
mov
lock
xor
lods
mov
sub
imulb
ret
pop
mov
cmpsb
lret
stos
xchg
xchg
cmp
shr
add
add
in
lods
push
loop
inc
mov
fsubl
jne
pop
pcmpgtw
add
sub
cltd
adc
test
mov
dec
imul
push
loop
clc
test
dec
xchg
imul
pop
pop
pop
xchg
jmp
xchg
loop
push
push
cmp
lcall
out
enter
pop
pop
mov
xchg
idivl
sbb
ja
sti
jmp
pop
jmp
inc
adc
cltd
or
daa
lods
fwait
movsl
pusha
sub
push
out
add
adc
out
fsub
jl
xchg
adc
mov
in
rcrb
movsb
jne
dec
dec
mov
hlt
mov
enter
adc
dec
mov
popf
in
adc
dec
mov
push
cmc
dec
sub
sbb
xchg
inc
scas
adc
push
push
adc
test
movsb
sbbl
in
and
push
je
or
jae
stos
jg
in
lret
mov
insb
push
ud2
jnp
pop
xchg
jle
push
leave
pusha
cld
mov
pop
loope
ret
fs
shlb
jae
out
stc
sub
mov
adc
pop
xchg
ficoms
ljmp
xor
push
adc
and
adc
into
mov
inc
clc
lods
leave
add
arpl
cwtl
mov
mov
pop
push
cli
pop
stos
or
out
add
add
int3
inc
sahf
cli
pop
xchg
sub
cmc
add
lcall
scas
lock
daa
and
andl
jle
jge
data16
ret
lcall
ljmp
jno
insb
cmpsl
jl
daa
pop
dec
div
in
push
jb
loop
test
in
jo
inc
xor
push
pop
ljmp
mov
inc
sub
out
cmp
pop
pop
mov
push
or
loope
lea
mov
cmp
cmp
xchg
movsl
rcll
insb
and
dec
rorl
leave
std
sbb
pop
mov
int
loop
leave
pop
dec
pop
adc
stos
js
mov
pop
rcr
mov
sub
pushf
es
mov
sub
add
fcmove
adc
es
jg
out
mov
sbb
mov
xchg
xor
mov
std
test
sub
lds
lret
xor
pop
pandn
mov
or
sahf
jns
outsl
dec
sbb
cld
push
ds
mov
adc
ret
ljmp
fcom
out
jae
inc
ds
sub
xor
xor
leave
jb
xor
into
dec
push
out
cmc
push
sbb
pop
test
std
adc
test
adc
repnz
data16
mov
mov
mov
dec
jns
sub
out
mov
push
cmpsl
push
push
xor
rcl
loopne
push
repz
or
inc
inc
mov
lahf
fisubs
je
ss
mov
sbb
shll
cld
iret
js
pop
cli
or
pushf
mov
xor
addr16
outsl
mov
or
aas
je
aam
outsb
movsb
cltd
dec
inc
push
test
das
movsb
push
movb
psubsb
mov
inc
mov
in
and
inc
fldt
ffree
pop
outsl
jle
inc
ficoms
inc
inc
mov
andb
lahf
movsb
and
scas
cmp
bound
dec
negb
sbb
cmp
mov
pop
lock
xchg
xlat
dec
lret
lods
sub
mov
mov
lock
pop
push
aam
rolb
xchg
cld
aam
pushl
sub
insl
jecxz
inc
dec
cmpsb
cmp
xchg
jns
inc
ljmp
and
mov
dec
scas
xor
push
jmp
orl
mov
fdivs
ds
dec
dec
sub
jo
push
sub
outsl
frstor
push
int3
clc
mov
push
lods
sbb
testb
addl
daa
inc
mov
sub
cmp
xor
pop
or
sbb
xor
pop
test
mov
out
aaa
test
shlb
sub
dec
dec
pop
ret
inc
cmpsl
add
fwait
aam
cmp
add
sub
test
mov
ret
data16
jns
xchg
shl
sar
xchg
push
bnd
mov
out
push
jle
pop
scas
jne
addr16
fcompl
inc
jo
mov
and
xchg
mov
lock
push
jo
fbstp
push
fs
adc
popf
je
jae
mov
out
in
sub
test
push
jmp
pop
hlt
and
adc
jnp
call
cs
push
adc
dec
iret
mov
lcall
jp
xchg
jae
xor
push
mov
aam
mov
pop
dec
ficoml
adc
or
push
push
scas
and
adc
test
mov
xchg
fnsave
hlt
aam
xor
fwait
push
inc
add
inc
or
in
mov
rorl
dec
cmpsb
add
fucom
pop
rol
faddp
inc
out
lds
and
push
dec
cltd
scas
iret
pop
test
daa
imul
cmpsb
cli
and
push
or
cmpsb
jge
lea
daa
adc
xor
cwtl
jno
std
cmp
gs
gs
lds
push
xchg
xor
into
imul
pop
mov
cmp
xchg
or
loopne
cmpsb
ljmp
enter
pop
cltd
jg
push
mov
repz
lds
fnsave
movsl
ficompl
xchg
pop
call
repz
test
in
mov
xor
mov
js
cs
pop
dec
cmpsl
push
lcall
mov
xchg
test
outsb
pop
xor
adc
add
daa
jg
outsl
push
mov
pminsw
xchg
push
mov
loopne
sub
es
shl
xchg
pop
mov
test
cmp
daa
or
loop
inc
xchg
stc
mov
cmp
xchg
mov
sub
or
mov
lods
out
fdiv
cli
pop
xor
loope
push
adc
mov
add
xor
bound
incl
imul
inc
inc
add
sub
lods
mov
jbe
add
ljmp
xor
jno
push
sti
sbb
incb
mov
loopne
mov
dec
inc
jp
fsts
lret
jg
repz
sub
sbb
or
inc
dec
cmpsl
fstps
adc
in
bound
pop
jmp
fwait
aad
shl
add
jle
push
nop
pop
outsl
jbe
adc
sub
inc
push
je
in
jecxz
push
in
cmp
lea
and
test
mov
addl
insb
or
pop
adc
inc
gs
out
inc
pusha
lahf
and
mov
scas
push
mov
leave
insb
adc
neg
xor
xor
push
data16
mov
xor
das
lret
sbb
or
scas
nop
sub
jnp
dec
pop
outsl
sub
aad
aam
ljmp
lods
enter
fs
dec
mov
xchg
ret
ljmp
dec
lods
sub
jns
movsl
loop
mov
pop
movsl
mov
and
jns
sbb
test
in
mov
fldenv
out
fadds
dec
test
xchg
xchg
ss
rcll
cli
ret
pop
insl
mov
pop
out
mov
mov
ficoml
mov
or
mov
mov
movsb
leave
decb
lret
call
jbe
dec
aas
jg
inc
ds
inc
or
test
add
inc
xchg
leave
out
xchg
ret
push
bound
and
dec
xchg
xor
into
cmp
xchg
lock
cmp
jp
cmpsl
or
mov
mov
mov
repnz
lahf
ja
jne
addr16
mov
stos
fists
scas
xchg
call
enter
xchg
aas
cmpl
out
sbb
and
and
cmpb
stos
subb
daa
sub
jnp
mov
in
stos
dec
pusha
xor
iret
sbb
add
dec
sub
pop
jge,pn
inc
test
lock
scas
mov
popf
xor
mov
push
adc
fiaddl
and
sbb
lret
in
imul
test
push
mov
pop
insb
mov
ljmp
hlt
pop
in
arpl
int
or
addr16
or
js
or
add
int3
sbb
les
and
fisubs
push
lds
mov
jae
mov
lods
cld
movsb
push
lret
mov
rclb
lods
loop
add
mov
cmp
inc
jno
mov
jl
and
dec
aam
pop
push
cmp
aas
xor
sub
rcrb
mov
xchg
jbe
push
incl
cmpsb
insl
push
in
mov
or
fcom
test
and
loopne
bound
sti
cmp
js
add
and
stc
fwait
adc
xor
rcrb
data16
call
lods
dec
out
pop
pop
test
enter
mov
push
inc
sub
faddl
cmp
ljmp
adc
fcoml
jg
sti
jne
pop
xor
add
and
mov
pop
int
lods
mov
testl
cmpsb
rorl
or
sbb
jnp
insb
lahf
sti
test
shll
outsl
push
dec
loop
in
stc
push
dec
fs
insl
adc
inc
movsb
cmp
inc
in
out
pushf
cli
xchg
divb
cmc
hlt
loop
subb
or
mov
into
adc
jmp
movsb
or
loopne
mov
adc
shrl
and
add
cmp
mov
inc
pushf
xlat
fldcw
pop
jecxz
mov
fcoml
mov
test
and
cld
pusha
loopne
xor
inc
fldenv
xchg
les
les
sbb
inc
or
int
lods
pop
pusha
pop
out
adc
cli
pushf
or
pop
xor
xor
mov
nop
xor
aas
mov
jae
adc
test
je
js
jecxz
push
inc
movb
int
and
pop
mov
sbb
cmp
dec
adc
fildl
add
sub
lcall
sbbl
and
jle
roll
jge
mulb
rorl
xor
cmpsl
gs
mov
or
cld
ljmp
mov
andb
lret
mov
lcall
mov
rol
pop
push
outsl
insl
mov
mov
pushf
mov
inc
ljmp
pop
lods
xchg
sbb
mov
lds
inc
xorb
cltd
mov
mov
xchg
push
mov
paddusw
cmc
clc
xor
repz
sbb
in
shrl
push
pop
sbb
fs
loope
sub
xchg
mov
cmp
or
jns
mov
or
xor
pop
inc
mov
cmpsl
mov
imul
xor
inc
aad
add
push
or
aam
out
jne
andb
lds
dec
enter
insb
xchg
mov
adc
mov
and
and
mov
mov
sbbb
mov
mov
out
push
fbstp
inc
xchg
mov
xchg
out
xchg
or
or
inc
out
mov
or
mov
stos
fdivs
pushf
insb
xchg
js
jnp
clc
cmpsb
jle
not
in
movsl
frstor
push
pop
iret
jns
cmc
ret
enter
mov
jae
insb
dec
push
inc
push
test
fs
mov
lea
xchg
jecxz
clc
sbb
lea
imul
inc
push
jmp
dec
mov
repnz
cli
jb
push
mov
inc
or
or
nop
jne
push
aaa
rolb
inc
pop
push
inc
sub
push
shlb
inc
mov
leave
scas
lea
and
sarb
adc
jbe
cltd
xchg
test
fnsave
jb
jge
xchg
sbb
stc
sbb
gs
dec
cmp
mov
dec
inc
pop
xchg
push
sbb
sbb
test
inc
lahf
popf
sarb
push
nop
sub
test
sbb
dec
inc
iret
loope
cmpsb
lock
movsb
into
xor
cltd
fdivrs
pop
cmpsb
ljmp
inc
push
loope
jnp
sub
je
cmp
pop
ds
mov
call
arpl
addb
ficomps
push
lock
add
mov
xor
ss
adc
pop
test
shl
sbb
dec
into
test
cltd
test
fsubr
sahf
xchg
sub
inc
xor
mov
adc
mov
push
leave
mov
mov
inc
xchg
mov
and
and
push
test
pop
pop
sub
cs
stos
cmpsb
adc
and
ficompl
dec
ljmp
xor
outsl
in
outsb
loop
mov
aam
pushf
push
adc
fdivrl
mov
mov
add
loope
inc
movsb
les
cmc
xor
cmpsb
cmp
and
jg
stos
into
repz
imul
pop
add
push
lock
out
mov
adc
or
lahf
jo
jle
pop
mov
cld
pop
xlat
push
push
arpl
xchg
jmp
mov
inc
into
and
ja
dec
dec
iret
sub
cmpsl
dec
loopne
rcrb
in
hlt
flds
or
lea
sbb
adc
dec
nop
adc
adc
adc
mov
shrb
cwtl
je
aad
outsb
or
aas
push
daa
xorl
dec
dec
cmpsb
or
adc
jecxz
push
add
mov
lea
sub
push
add
mov
dec
andl
sbb
cli
inc
jae
or
test
enter
cld
mov
push
rorl
outsl
mulb
loopne
jnp
lcall
mov
xor
icebp
loope
dec
cld
adc
cmp
or
jecxz
cmp
mov
inc
sar
mov
sub
inc
xchg
aam
mov
cmp
mov
jbe
cwtl
mov
dec
xchg
fidivrl
xchg
ss
mov
into
jno
popa
inc
and
add
or
insb
dec
in
loope
xchg
loope
or
adc
mov
js
ds
ja
push
je
neg
cwtl
jge
jo
and
and
push
rol
hlt
scas
pop
ret
test
push
out
push
adc
imul
movsl
xchg
lcall
je
xor
or
pushf
mov
stos
out
dec
jge
shrb
add
dec
and
xor
pop
inc
jbe
popa
popf
loopne
loope
cmpsl
add
jge
fwait
out
push
mov
fistpl
add
std
sbb
or
push
add
inc
lahf
cmp
mov
lods
jp
xor
mov
xchg
test
mov
cmp
cmpl
xchg
mov
xchg
mov
aam
cli
or
xchg
aam
dec
sbbl
out
fstpt
or
inc
push
cmpsb
cmp
stos
dec
xchg
ret
adc
insb
std
cwtl
and
iret
and
jmp
pusha
push
xor
pop
pushf
jecxz
inc
fwait
push
mov
cmc
insl
mov
add
stos
jne
lahf
mov
inc
or
lcall
faddp
sbb
and
clc
cmpsl
scas
dec
dec
fwait
push
xor
dec
adc
mov
nop
lds
hlt
mov
mov
inc
or
and
push
and
imul
pop
or
roll
jb
mov
repnz
push
pop
dec
sub
test
mov
shlb
and
test
cmp
sti
add
loop
jbe
stos
adc
pop
mov
daa
fs
adc
lret
and
jle
stos
jo
dec
mov
jb
incb
jg
or
arpl
test
out
add
dec
push
cmpsb
jae
adc
mov
inc
enter
pop
push
jmp
or
out
dec
adc
sub
mov
ds
xchg
movsl
out
nop
int3
and
aas
mov
sbbb
nopl
lret
js
or
aad
out
lods
jecxz
js
and
pop
int3
daa
icebp
lcall
cld
fcompl
inc
cmc
outsb
sub
adc
xchg
dec
xor
push
push
adc
mov
ss
clc
shll
int
hlt
jmp
sbb
fcomi
lds
lret
cmp
mov
fs
fldenv
sahf
mov
ret
aam
orb
inc
outsl
icebp
sti
loop
les
stc
fadds
dec
fs
dec
rclb
sub
inc
idivb
cmp
mov
into
popf
cli
testl
cmp
in
or
daa
popa
into
xchg
leave
cmc
xor
cmp
push
sbb
js
lret
loopne
adc
inc
lds
mov
je
lods
gs
xchg
mov
dec
iret
xlat
inc
dec
jle
add
in
in
mov
outsl
sti
es
or
out
mov
adc
jnp
mov
cmp
mov
jae
mov
enter
outsb
fcomps
mov
dec
lcall
or
adc
mul
pushf
arpl
test
aad
mov
nop
jmp
sti
std
jb
flds
sbb
popf
cld
jecxz
rcrb
mov
dec
lea
leave
sub
cmp
cmpl
imul
and
insb
cld
inc
mov
pop
das
pop
sbbl
mov
push
jg
sahf
rol
mulb
fdiv
cwtl
or
pop
cmpsl
arpl
sbb
cld
inc
enter
lds
add
pop
lock
cwtl
ror
clc
movaps
jae
aam
mov
es
jns
dec
xchg
in
xchg
jne
push
ljmp
jecxz
insl
inc
hlt
mov
xlat
xchg
and
jl
add
inc
jmp
scas
cltd
and
sbb
mov
stos
or
loop
fnstsw
mov
xchg
cmpsb
adc
shll
jle
sbb
movsl
stos
mov
cmp
xchg
inc
and
push
adcb
pushl
mov
shll
test
and
in
sub
and
and
add
jb
inc
popa
ret
xchg
pop
push
test
jl
add
cwtl
nop
mov
xor
adc
xchg
cwtl
in
inc
mov
push
iret
jmp
xchg
xchg
stc
mov
fdiv
addr16
je
jp
test
mov
lods
sbb
mov
stc
loopne
push
and
mov
mov
icebp
xchg
popa
mov
jmp
lahf
or
jmp
push
sub
jno
outsb
push
in
jl
mov
add
push
pop
loop
add
ret
ret
frstor
cltd
sub
aaa
shr
ret
mov
inc
cmpsb
outsb
jbe
les
push
popf
test
pop
scas
inc
mov
rcr
and
xchg
xchg
sbb
sbb
mov
imul
mov
adc
mov
repnz
cmp
pop
lods
shl
sbb
arpl
mov
or
fdiv
or
mov
jmp
add
push
int3
frstor
fistpl
shrl
dec
or
lds
test
and
pop
cmp
stc
mov
rol
jbe
pop
data16
bndstx
push
sub
arpl
cmp
movsl
bound
test
jl
aam
dec
and
push
loope
or
push
int
lahf
pop
push
lods
es
mov
inc
in
repnz
cmpsb
imul
or
enter
pop
xchg
fcompl
loope
int
sub
jae
cmp
xor
movsl
imulb
lods
and
or
sub
lock
or
xorb
lahf
mov
cwtl
sahf
ficompl
push
mov
dec
out
aas
pop
dec
add
push
push
inc
bsf
inc
or
mov
and
or
test
insl
in
jg
mov
mov
loopne
mov
leave
jno
mov
call
push
scas
fsub
int
outsb
lret
or
test
lret
inc
rorl
mov
sahf
push
pop
insl
test
jnp
andb
data16
add
fs
dec
adc
mov
cmp
cmp
js
push
out
jl
cli
sub
xor
or
pusha
into
mov
pop
adc
icebp
jge
pop
inc
stos
dec
adc
subl
out
add
andb
mov
ljmp
enter
sbb
in
sbb
sbb
adc
cmpsl
loopne
adc
int3
inc
adc
fldz
ficomps
stos
cmp
repz
fistl
cmp
sub
dec
mov
jns
ret
inc
popf
pushf
push
xchg
dec
jmp
jecxz
cs
lcall
aas
aam
jb
test
xor
pop
jecxz
xchg
ja
movsl
loopne
adc
mov
mov
pop
pop
mov
add
adc
push
clc
fistl
jb
pop
sahf
imulb
subl
cmp
out
mov
cmc
stos
shr
loope
imul
sbb
movl
mov
popl
popa
lret
fcoms
lock
out
movsl
lock
mov
jmp
test
lahf
outsb
sub
aam
fucomp
ret
mov
je
mov
dec
mov
aam
xchg
mov
sub
mov
bound
cwtl
aas
lods
fcoms
mov
cli
sahf
jbe
jp
shlb
or
cltd
pop
xchg
pop
test
and
push
cli
ja
fucom
in
clc
out
jle
mov
sbb
jg
pop
sbb
and
push
pop
es
mov
push
pop
mov
shll
xchg
inc
or
dec
mov
push
mov
out
dec
dec
and
test
or
ja
popf
xor
or
and
mov
or
dec
adc
daa
mov
leave
add
mov
bound
xchg
and
imul
xchg
mov
xchg
xchg
mov
push
mov
sbb
mov
mov
call
dec
mov
mov
mov
ret
inc
cmp
xchg
xor
mov
call
js
pop
out
outsb
adc
rol
or
push
and
push
stos
xor
push
sbb
rcll
jnp
int
jle
sbb
pusha
sahf
xlat
cltd
iret
xchg
jae
ret
cs
or
push
inc
mov
adc
cmp
repnz
rolb
add
or
push
fcmovbe
loope
xchg
call
lret
mov
scas
setb
push
mov
test
mov
ss
iret
cld
pop
hlt
dec
aad
arpl
icebp
or
pop
inc
or
push
outsl
push
aaa
je
adc
add
adcl
inc
jae
out
push
push
rcr
sbb
push
lcall
cmp
add
jp
jge
stos
sbb
jge
cmp
fisubrl
jnp
dec
jl
or
mov
xor
xchg
xlat
sub
or
jecxz
jge
and
loope
cmpsb
jns
inc
in
pop
gs
enter
pop
aam
mov
loope
lods
adc
push
xor
cmp
dec
ds
jmp
and
cmp
inc
shrb
lea
cld
mov
cmpsl
cmp
pop
outsb
pop
cli
lods
das
js
push
jb
lret
lcall
out
cli
add
outsb
dec
daa
out
adc
dec
xchg
xchg
push
pop
mov
lock
lcall
decb
mov
dec
int
lret
sub
outsb
sub
inc
xchg
lcall
dec
ljmp
sti
mov
clc
sub
test
test
jb
outsl
xor
loop
jae
stc
inc
xor
fcoml
leave
pop
cmp
jl
jbe
out
hlt
fdivs
shl
inc
scas
je
pop
adc
xor
fistpll
in
ret
stos
xchg
into
pushf
adc
cmc
rclb
pop
bound
xchg
adc
leave
inc
imul
loopne
add
mov
adc
jmp
lret
jmp
into
mov
mov
sti
test
mov
gs
add
loopne
faddp
dec
inc
xor
dec
mov
les
insb
aam
sbb
xor
pop
pop
sub
mov
pushf
mov
pop
mov
aad
icebp
fcoml
cs
jb
lods
in
or
jecxz
sahf
or
xchg
icebp
mov
call
push
shl
mov
cmp
subl
dec
fildl
cmp
inc
test
inc
or
fildl
dec
xchg
das
sbb
sub
orb
cmp
jp
sub
adc
cwtl
cmp
cmpsl
popa
aaa
lret
div
icebp
frstors
xchg
cmp
mov
inc
into
lock
movsb
in
or
shlb
mov
aam
insb
pop
ret
inc
adc
cmp
insl
dec
sti
adc
xchg
repz
or
daa
mov
xchg
inc
lods
inc
mov
int3
mov
subl
and
dec
leave
leave
cltd
xchg
pop
aaa
test
loope
push
mov
scas
and
and
xchg
imul
pop
les
stos
popf
test
out
jns
in
sarl
cmc
shlb
push
movsl
xchg
or
mov
mov
orl
sti
test
aaa
lock
xor
mov
outsl
or
adc
fwait
out
aam
push
lret
add
into
pushf
fsubr
icebp
mov
data16
push
add
mov
punpckhdq
adc
sti
addr16
jp
inc
mov
dec
into
mov
add
rorl
imul
mov
faddl
xchg
pop
jmp
jmp
xor
cltd
xchg
out
in
sub
addr16
loopne
movsb
jb
and
insb
ds
jnp
inc
pop
jle
fs
and
pusha
cmp
xor
cmc
sbb
scas
cli
adc
dec
loop
mov
or
popf
testl
fiaddl
ljmp
paddusb
imul
scas
jb
or
adc
inc
cld
repnz
jl
xchg
jecxz
arpl
pushf
adc
arpl
or
into
orl
or
cmp
dec
int3
mov
xor
jae
ficoms
out
shl
pop
scas
or
and
shlb
mov
pop
jbe
pcmpeqw
sub
daa
popa
push
hlt
cmp
jno
push
cmp
std
dec
lcall
icebp
xor
lock
jmp
sbb
ret
add
cmp
push
in
or
cmpsb
cld
sbb
cmp
test
mov
adc
pusha
push
mov
loope
scas
jb
jns
lret
cmp
sarl
scas
dec
sbb
add
sub
lahf
negb
das
addl
xor
sub
push
mov
pop
and
dec
js
inc
dec
pop
dec
dec
rcrb
add
inc
sub
xor
adc
and
jg
icebp
fdivs
fisubrs
mov
movsb
dec
and
cs
in
sub
lea
testl
jbe
sarl
mov
sbb
fbld
sahf
fwait
out
inc
test
push
sbbb
outsl
popa
std
xchg
loop
sbb
std
inc
mov
enter
sbb
ss
cld
sub
out
push
push
xor
or
sub
cmc
into
jg
shl
xor
pop
andl
imul
cs
cmp
lods
sbb
mov
lods
add
add
sub
or
neg
pop
in
repz
push
sti
xor
shlb
cmp
dec
movsl
outsb
adc
ja
fstps
repz
lret
call
sbb
outsb
int3
dec
dec
xchg
xor
fisttps
adc
dec
mov
jmp
sahf
shrb
and
call
nop
jp
sbb
int
push
jb
jecxz
dec
addb
cmp
sbb
mov
rol
mov
fistps
cli
mov
loopne
adc
mov
test
stos
pop
in
sbb
xchg
test
add
cld
mov
dec
mov
and
ret
mov
mov
std
pop
fcomps
pusha
into
lock
cmp
scas
sub
mov
and
pop
testl
sub
rolb
mov
aam
dec
mov
es
xchg
or
xchg
xor
sahf
ljmp
push
lods
scas
cmp
mov
inc
stos
popa
and
dec
cmp
xor
pop
inc
cwtl
cltd
lret
test
xchg
push
cmp
fnsave
jg
pop
mov
in
sbb
jle
shll
lcall
mov
insb
xchg
sbb
jae
xchg
loop
xor
ljmp
sub
addb
mov
stos
ja
dec
xchg
dec
icebp
sbb
inc
enter
add
jge
sbb
sub
add
jmp
ret
daa
fisttps
jns
enter
in
xchg
aas
jg
mov
sti
mov
pop
int3
hlt
cltd
rclb
stos
mov
mov
int3
lds
das
pop
dec
icebp
push
mov
mov
or
adc
out
xchg
ficoml
jmp
add
adcl
shrb
bound
fsts
inc
sbb
and
fstpt
test
imul
mov
ret
sbbb
inc
mov
jae
sbb
lcall
rorl
xchg
cmp
xchg
xchg
cmpsl
xor
shr
push
cmpsb
lahf
push
dec
test
adc
adc
repnz
dec
leave
mov
inc
pop
arpl
mov
or
dec
sub
or
push
outsb
add
and
pop
pop
or
fidivs
inc
xchg
rorb
mov
call
jg
cmp
sbb
push
xor
jbe
sbb
sbb
stos
cmp
jno
jecxz
jl
stc
out
outsb
pop
mov
mov
xor
dec
sub
push
scas
clc
xchg
test
adc
inc
lcall
in
daa
xchg
in
subb
push
push
sbb
test
popf
sub
daa
sbb
xchg
inc
aad
rol
daa
movsl
or
and
outsl
lock
sbb
mov
xor
test
loope
pop
pop
dec
or
pop
enter
push
dec
aaa
adc
inc
pop
mov
test
subb
mov
daa
sbb
xchg
push
mov
pop
and
mov
sbb
mov
xor
test
lods
mov
adc
jns
insl
sbb
cmpsl
lret
test
push
xorb
outsl
inc
or
jo
push
stc
mov
dec
fs
sub
adc
mov
add
cmp
test
sahf
mov
xor
pop
sub
inc
xchg
or
pop
and
dec
xor
pop
mov
sahf
scas
imul
rolb
fimuls
jmp
rclb
add
loope
fisttps
xlat
inc
pop
xchg
sub
mov
xchg
in
pop
dec
xchg
sti
loop
dec
jp
pcmpgtw
stos
adc
add
popa
inc
dec
xlat
enter
dec
int3
jnp
repz
call
repnz
sbb
test
pop
lea
iret
imul
or
pushf
mov
fbld
ja
outsl
call
jbe
insb
jbe
jb
dec
cmovns
mov
je
fsub
xchg
jp
cwtl
in
lea
call
roll
mov
into
or
xchg
mov
pusha
pop
xchg
inc
push
ret
dec
inc
sbb
pushf
pop
mov
add
pop
rcr
stos
xor
mov
sub
jmp
insl
icebp
adc
ret
clc
add
and
jecxz
mov
adc
clc
or
pop
dec
lea
rcrb
or
mov
lods
aam
test
ret
popa
call
es
inc
insl
sbb
dec
xchg
jno
shr
or
push
rep
sbb
cmp
and
call
xchg
add
rcrl
scas
jo
mov
daa
sbb
icebp
stc
fstpl
daa
clc
xchg
mov
pop
cmp
sbb
fnstsw
stos
jnp
or
aas
jb
xchg
popa
jecxz
push
in
sbb
xor
popa
int
idivl
mov
mov
mov
mov
and
cld
dec
in
adc
pop
js
out
adc
fwait
dec
and
add
add
mov
bound
int
in
ret
fsts
mov
sti
sbb
jnp
addr16
fyl2x
mov
je
mov
loope
jp
aam
inc
jne
xchg
fwait
mov
dec
nop
fildll
xchg
lods
hlt
in
jmp
lret
inc
jno
and
xor
sub
pop
jno
push
loope
imulb
lcall
jnp
xchg
in
scas
jle
outsl
or
ret
movsb
pop
scas
sbb
jae
jae
push
aam
add
lret
xchg
out
push
fs
in
jae
sbb
jnp
imul
scas
cmp
adcl
je
mov
das
pop
fs
xor
daa
hlt
sub
pushf
arpl
mov
rorl
les
aaa
mov
mov
add
xchg
mov
adc
sub
ret
scas
fs
mov
js
movsb
fcmovne
arpl
xor
jbe
xchg
dec
jge
rorb
sbb
add
pop
mov
cmp
scas
pop
jno
xchg
cmp
dec
fst
cmpsl
push
insl
insl
inc
xor
cmpsb
outsb
cmp
andb
sub
push
faddp
inc
inc
sub
cmpsb
add
cli
in
push
add
enter
pop
xchg
jns
push
test
push
sub
popa
cmp
dec
ds
xor
movsl
adc
and
mov
jmp
adc
jns
mov
popf
mov
test
movsb
xchg
jl
outsl
or
xor
mov
inc
push
mov
lret
jae
mov
jno
fcoml
fsts
xor
mov
icebp
sbb
jmp
push
mov
cmp
sub
movsb
push
lret
inc
shrl
jne
fs
cwtl
sahf
loope
stos
test
incb
pop
sbb
add
push
stc
imul
fidivs
adc
cmp
fs
out
pop
adc
imulb
xor
adc
testl
inc
icebp
pop
cmc
adc
xor
pop
mov
push
mov
leave
aad
adc
pop
add
cmpsl
inc
insb
mov
call
jl
xlat
sub
sub
mov
leave
js
sti
xchg
adc
popf
xchg
gs
lcall
lret
or
imul
xlat
mov
repz
xchg
mov
dec
sbb
in
dec
movl
jnp
cltd
out
pushf
mov
push
cs
nop
xor
jns
pop
out
outsl
dec
jo
dec
je
mov
jecxz
dec
pop
fwait
fimull
adcl
xor
cli
and
xorl
andl
dec
dec
pop
sub
nop
inc
popf
push
sub
cmp
shlb
mov
sub
sub
mov
std
mov
cmpsl
pop
mov
mov
jmp
push
cld
pop
pop
ror
dec
mov
js
out
vrcpps
pop
addr16
shr
dec
cmc
sub
adc
es
int3
lods
insl
add
jns
inc
xchg
mov
xchg
ljmp
test
sbb
mov
xchg
xchg
pop
mov
sbb
cmpsb
cltd
cmp
ret
scas
mov
push
push
xchg
fldl
notb
push
mov
ror
inc
adc
xchg
stos
push
jmp
mov
lea
call
xor
dec
push
or
enter
cmpsl
mov
mov
mov
test
aaa
mov
dec
xlat
out
movsb
inc
mulb
or
dec
cmp
mov
sub
pop
vpxor
cli
xor
jbe
in
cmc
sub
mov
das
or
inc
xchg
andl
mov
mov
inc
and
push
push
dec
mov
mov
mov
mov
adcb
das
lahf
xchg
xchg
pusha
pop
xorl
sub
pop
insl
notl
bound
movsl
sbb
mov
fldcw
icebp
jnp
dec
and
idiv
in
fs
or
ffree
out
scas
pop
out
lods
inc
fst
test
iret
or
push
xchg
loop
popf
insb
arpl
inc
push
and
ficompl
fs
adc
cmp
js
scas
fwait
mov
adc
je
repnz
leave
stos
mov
pop
arpl
xor
or
aas
xor
aaa
jo
outsl
or
mov
add
push
stos
int3
je
out
addr16
jnp
or
loopne
jp
inc
adc
ja
and
inc
cmp
xlat
xchg
push
shll
pop
xchg
jge
std
dec
sbb
adc
daa
pop
jmp
jns
xlat
push
or
sbb
push
push
js
xor
add
sub
push
test
test
test
inc
in
test
loop
cmc
push
addr16
pop
shr
dec
push
mov
loope
nop
sbb
outsb
sub
cmc
imul
sbb
xchg
and
or
orb
add
dec
mov
addr16
jmp
pop
adc
lcall
sbb
lcall
outsb
aam
outsl
adc
mov
outsl
jg
call
xor
sub
out
push
addb
mov
sub
sub
ret
test
aas
push
or
roll
mov
cwtl
sbb
hlt
or
subb
loop
inc
push
stc
and
imul
xor
pop
fstpt
out
sahf
movsb
cli
sub
std
cmp
call
pop
into
sub
cmc
fcompl
xor
lahf
out
push
mov
repnz
add
cmp
stc
add
aad
xlat
mov
mov
cmp
aas
in
xor
out
sti
inc
cmp
shlb
loopne
enter
jg
inc
jno
sub
add
aas
repz
add
xor
pop
xchg
push
pop
clc
ljmp
gs
xchg
jmp
negb
aad
outsb
hlt
nop
or
jne
stos
dec
es
roll
outsl
addr16
jmp
jecxz
data16
sahf
test
add
cld
scas
aaa
mov
ret
imul
push
mov
sub
int
dec
inc
and
ret
inc
push
inc
adc
mov
jo
jge
lods
fisubl
idivb
imul
outsb
stos
add
xchg
cmp
icebp
ret
cld
inc
or
lret
add
mov
aam
scas
jo
lock
mov
out
mov
sti
mov
mov
pusha
ret
jg
pushf
es
aaa
and
scas
xlat
dec
je
in
xchg
out
push
fucomi
repz
dec
popa
loop
jp
out
movsb
dec
mov
test
aad
mov
jp
mov
xchg
in
cltd
outsl
call
loopne
lret
push
leave
xor
clc
or
pop
add
add
rolb
jo
mov
out
add
fwait
xor
pushl
sub
or
dec
push
xor
jne
mov
mov
xchg
lret
test
mov
ja
test
dec
lret
inc
out
or
pusha
jmp
stos
cmp
add
cmp
call
jns
ret
jl,pn
xchg
sub
cmc
mov
js
mov
std
inc
sub
shl
jp
cmp
mov
xor
in
push
jae
mov
mov
mov
fildll
sti
xchg
push
into
loopne
mov
aam
addl
out
dec
xlat
sub
push
std
mov
stos
jo
adc
enter
ljmp
jle
adc
jge,pt
pusha
movsl
cmp
iret
jno
mov
cli
dec
rcrb
js
inc
call
ljmp
xchg
jne
mov
test
jo
fwait
js
sbb
push
imul
cmp
dec
lock
mov
jns
pop
repnz
push
leave
and
inc
hlt
ret
arpl
add
push
das
jbe
or
cwtl
mov
int3
pop
fisubs
pop
xchg
in
ficomps
int
lds
xchg
shlb
scas
test
xor
movsb
icebp
xor
push
and
cltd
jbe
in
outsl
jge
or
pop
into
xor
xor
jno
popa
sbb
movsl
dec
mov
ja
xor
pop
aaa
xor
sub
iret
test
je
pop
inc
inc
xchg
cmpsb
or
lock
faddl
pop
pavgb
sub
and
and
es
ds
insb
movsl
and
mov
sbbb
ret
mov
xor
dec
mov
js
call
jae
fisubrs
rcr
and
sub
pop
outsb
aaa
bnd
xchg
dec
rorb
xchg
or
mov
jns
and
cmp
int
cli
mov
idiv
jmp
lret
push
rcr
jecxz
cmp
sbb
adc
test
add
outsl
fldl
sub
jg
hlt
mov
mov
lret
xchg
sub
inc
fcomp
rorl
cmp
dec
cli
pop
test
xor
and
notl
into
or
sbb
mov
push
or
adc
mov
adc
lods
or
mov
xchg
dec
sti
jg
mov
orb
xchg
stc
sub
jg
mov
lahf
push
aaa
sti
out
and
jecxz
sub
sysexit
loopne
cmc
lcall
das
dec
fnstcw
ss
in
mov
repz
sarb
pop
add
movl
adc
negb
inc
sub
mov
cwtl
aad
dec
sbb
dec
cmp
jb
enter
lds
jecxz
ret
mov
push
call
push
lret
loopne
add
push
xchg
sbb
iret
jns
jo
dec
inc
stos
popf
jge
outsb
repnz
jne
shlb
daa
clc
cmpsb
and
loopne
rol
xlat
dec
idivb
test
cwtl
sub
cmpsl
pop
push
jp
leave
dec
daa
icebp
cltd
stos
jne
insl
iret
mov
mov
hlt
mov
mov
lock
popw
movsl
adc
rclb
movsl
test
ret
push
loope
es
insl
rcl
xchg
mov
nop
ljmp
inc
lods
pop
jo
mov
int3
xor
movsb
jns
mov
fldenv
fiaddl
test
in
test
movsb
leave
mov
ficoms
jle
fst
clc
dec
clc
dec
orl
out
mov
jg
pop
sbb
stos
dec
and
push
push
dec
push
jge
xchg
call
xchg
xorl
pop
or
xor
adc
xchg
cmpsl
fimuls
pop
add
pop
rolb
mov
nop
es
inc
ret
jne
stc
scas
in
sub
cltd
fsubr
dec
adc
jns
mov
in
push
sbb
insb
xor
mov
mov
pop
es
jnp
mov
inc
test
mov
std
mov
cs
mov
xchg
fisttps
and
mov
push
xchg
sub
call
out
pop
subl
sahf
mov
and
xchg
fsubrl
das
jnp
and
jle
sbb
stos
pusha
inc
repz
ret
cmp
sbb
loopne
insl
or
push
sbb
imul
add
rcll
fiaddl
and
data16
enter
add
pop
jge
push
sbb
mov
sub
mov
cltd
dec
scas
hlt
or
ljmp
das
test
aaa
out
mov
movb
sbb
int3
dec
cmp
pop
faddp
cwtl
nop
or
jnp
push
scas
fs
xchg
cmp
loop
push
outsl
lds
jge
decb
daa
pop
aaa
add
arpl
cltd
jno
jle
jl
ret
sub
scas
push
push
push
xor
mov
add
sti
fbld
adc
inc
inc
or
cmpsb
mov
popa
enter
pop
dec
pop
mov
mov
fisttpl
cmp
stos
ds
aaa
xlat
movsl
daa
push
push
and
in
stos
xorb
fildl
insb
mov
in
shrb
js
ret
les
loope
test
outsb
fdiv
push
movntps
lods
outsb
lcall
shrb
add
dec
push
mov
loopne
mov
dec
pop
mov
inc
test
push
jmp
in
sub
out
idivl
mov
mov
lret
lret
test
clc
add
mov
pusha
mov
nop
sub
fs
fsts
mov
jle
cmp
xchg
pusha
call
cli
push
xor
fidivrl
fisttps
xchg
icebp
into
out
fs
cmc
push
inc
xor
adc
test
imul
shll
lods
popf
lock
mov
mov
xlat
cmp
fstpt
push
into
in
or
sar
sahf
sar
incb
inc
hlt
gs
ds
or
hlt
popl
pop
dec
fldcw
jmp
repz
mov
in
sbb
xchg
add
ret
scas
push
pop
pop
int3
adc
mov
jmp
pop
jo
adc
aad
test
nop
shrl
call
add
dec
aad
pop
je
dec
pop
jecxz
bound
cmp
pusha
call
int
pushf
mov
popa
jno
cmc
mov
js
pop
aaa
mov
inc
xor
inc
mov
mov
fisubs
and
cmp
idivb
or
cmc
cmpsl
pop
jge
mov
jo
loop
cwtl
imul
mov
fisttps
mov
pusha
sub
fs
les
shlb
sub
pop
ret
popf
or
dec
push
sti
dec
push
sub
fnstenv
push
lods
lds
xchg
out
not
and
push
xchg
je
cmp
mov
test
fisttpl
cs
loop
push
dec
inc
lret
sbb
xchg
adc
sbb
ret
push
stc
pop
rorl
out
lret
out
xchg
jge
push
ljmp
dec
test
shrl
xor
add
xchg
or
sbb
lret
test
insb
mov
dec
mov
mov
mov
add
or
mov
pushf
mov
add
jo
and
sub
fbld
sub
dec
arpl
inc
test
xchg
lret
mov
fs
mov
jae
push
addr16
outsb
cmp
inc
and
popf
sbb
pusha
cwtl
movsl
jne
dec
jo
fwait
sbb
fildll
ja
jmp
divl
aas
out
aaa
movsb
sub
dec
fldenv
stos
push
sub
pop
insb
rolb
jnp
xor
jle
pop
js
dec
fcomi
pusha
fstpt
ljmp
data16
lahf
jae
jb
push
loopne
ja
loope
jge
mov
loope
subl
mov
ficoms
adc
subb
leave
adc
int3
cli
mov
jnp
xor
adc
dec
hlt
pop
sbb
lock
or
push
lods
mov
or
jle
add
jno,pn
xor
mov
fisubs
lds
dec
rclb
jl
or
xchg
cmp
xchg
movsb
pop
out
push
mov
adc
aad
sbb
es
pop
and
cmp
mov
pop
dec
cltd
js
push
stc
push
cmp
jo
push
push
lahf
roll
push
into
fisttpl
test
or
cmpsb
push
popf
cmp
enter
pop
lea
push
dec
loope
mov
sub
mov
cmp
call
adc
mov
test
sbb
gs
jp
xor
push
mov
movsl
pop
or
adc
xor
pop
inc
cmpl
push
decl
fcompl
shl
outsb
std
mov
rolb
mov
mov
inc
inc
mov
pop
shlb
jg
jno
movl
sub
push
idivl
lret
mov
mov
int
sbb
inc
out
insl
mov
test
jmp
outsl
fwait
xorb
ds
inc
adc
adc
and
ss
call
out
push
or
cli
ret
xor
gs
cmp
sbb
aad
out
into
ror
js
xor
fbstp
leave
sub
pop
cmp
sahf
adc
inc
mov
movsl
and
pop
in
add
pop
shrb
or
xlat
jl
dec
sub
in
mov
in
jne
outsb
sti
dec
inc
inc
sub
in
test
add
fbstp
fldenv
and
cmpsl
xchg
sarl
jne
inc
cmp
xchg
mov
inc
or
ds
enter
decb
jbe,pn
inc
aad
es
nop
pushf
sub
iret
jb
jae
dec
dec
pop
cltd
je
jg
jecxz
inc
fwait
cmpsl
mov
lea
jb
insl
icebp
jb
mov
mov
mov
mov
dec
sub
inc
fisttpl
adc
inc
mov
mov
mov
xchg
jae
and
out
shll
out
testb
add
add
cwtl
lahf
inc
fldenv
das
mov
icebp
inc
sub
dec
lret
push
sub
mov
outsb
mov
mov
sub
aaa
insl
inc
sub
addl
jbe
shrb
mov
sahf
iret
cmpsb
dec
fcompl
lods
xchg
dec
mov
popa
daa
adc
lods
xor
enter
dec
and
out
stos
and
add
pop
lret
leave
xchg
jnp
push
adc
fstpl
pop
inc
clc
mov
shll
shrl
dec
pop
pop
jno
mov
cmpsl
lods
xchg
les
call
mov
dec
xor
jne
xor
dec
add
enter
orl
ja
stos
xchg
dec
mov
dec
pop
or
mov
push
aas
test
add
mov
arpl
mov
sub
iret
pop
dec
xchg
sbb
outsb
mov
or
mov
cs
aaa
addr16
adc
xlat
mov
or
inc
dec
inc
idivb
mov
mov
fs
int3
sbb
jmp
ret
xor
cmpsb
out
fidivl
clc
push
jnp
inc
and
xor
or
imul
cmp
in
and
jbe
lcall
test
push
inc
or
push
mov
add
mov
add
rcll
mov
enter
lds
adc
xchg
je
push
inc
xchg
repnz
insb
leave
xchg
xor
push
repz
sub
gs
insb
fdivl
sarb
pop
imul
pop
and
fiadds
or
leave
shlb
arpl
sahf
push
pop
cmp
clc
mov
push
or
aam
jge
fiaddl
daa
pop
xchg
jge
leave
lret
je
xor
jl
sahf
aad
or
mov
fsubrl
pop
xor
insl
cli
lahf
repnz
mov
jnp
push
aad
call
cmpsb
xchg
sbb
push
enter
pop
int3
xlat
js
xchg
fsub
xor
dec
cmp
cmpsl
dec
movsl
xor
pop
jp
mov
sbb
pop
sbb
fsubr
xor
mov
mov
xor
js
xor
pop
ret
lcall
xchg
faddl
ret
sub
jge
outsb
pusha
inc
push
adc
and
push
jg
mov
xlat
mov
lret
and
xchg
dec
int
and
ljmp
lret
pop
rcrl
sti
sbb
sahf
adc
lea
sbb
outsl
jp
loopne
loop
mov
lcall
inc
add
sarb
or
cltd
out
into
sub
cmc
insb
in
or
ds
and
mov
cmc
clc
imul
adc
into
xchg
adc
jg
add
dec
mov
shlb
cltd
mov
and
mov
mov
mov
loopne
mov
decb
gs
enter
repz
jns
inc
mov
pop
ficoml
jb
and
sbb
or
stos
pop
les
dec
pushf
adc
jmp
into
fldt
push
aad
sub
nop
ja
ret
aas
es
push
les
popf
data16
add
jecxz
outsb
xchg
stos
mov
pop
call
dec
negb
mov
xor
dec
push
fcompl
pop
pop
inc
test
inc
cld
loopne
mov
andl
fsubr
mov
testb
test
xor
pop
pop
test
icebp
push
movsb
cmpsl
cld
out
sbb
lret
mov
xchg
int3
mov
filds
sbb
cltd
pop
add
data16
mov
sub
adc
ret
mov
imul
dec
pusha
push
xchg
mov
mov
je
mov
mov
mov
fcoms
psadbw
je
loop
ja
dec
mov
test
int3
sub
aad
cmc
fldl
ljmp
adc
rcl
andl
stos
adc
pop
sti
xchg
or
lahf
in
cmp
testb
pop
cmpsb
xor
loop
mov
lret
es
ljmp
ja
pop
gs
xchg
dec
les
fs
jno
std
fwait
data16
xor
loop
loop
ret
add
ja
bound
loop
ficompl
in
fidivs
push
and
mov
jmp
or
lea
cltd
cmp
es
mov
fdivr
inc
mov
ja
fucomip
xchg
push
xchg
lahf
icebp
cmp
xchg
inc
les
xor
push
sub
aas
add
gs
cmp
or
and
xor
mov
jle
std
in
leave
andl
fdivl
inc
fildl
pop
stc
in
inc
adc
shlb
or
mov
das
cmpsb
cmp
xorl
xor
cmp
imul
aas
scas
mov
push
cmp
outsl
adc
and
hlt
out
and
and
sub
inc
or
cmpsb
in
aaa
sub
inc
add
and
or
pop
push
xchg
pop
fisubrs
xor
int3
xchg
pop
scas
add
or
cmp
jmp
sahf
jbe
or
sbb
mov
cmp
push
add
lods
pusha
jl
dec
sti
dec
ja
pop
push
mov
jle
jo
mov
add
outsl
inc
test
mov
cmp
cmpsb
adc
pusha
in
js
loope
pop
in
mov
or
mov
loope
fdivr
sub
sbb
mov
movsl
cmp
fsubl
fcom
test
and
out
sbb
bound
xor
lahf
dec
and
js
leave
mov
inc
or
push
lods
sub
icebp
mov
or
out
mov
sar
sub
mov
mov
shlb
mov
int
cmp
sbb
icebp
lahf
idiv
stos
push
lret
xor
mov
sahf
mov
pop
test
sub
xchg
jne
mov
mov
xor
and
fstl
nop
sub
xlat
sbb
fadd
jle
out
movsb
mov
sub
ret
xor
fs
scas
push
dec
or
insb
cmc
cmc
mov
fwait
push
pop
jns
hlt
adc
pop
lcall
out
xchg
mov
lods
push
jle
mov
mov
imulb
call
in
dec
rep
sti
stos
jp
outsl
lea
gs
and
loopne
outsl
mov
popf
inc
adc
daa
arpl
adc
mov
repz
ficompl
xchg
inc
or
dec
and
inc
jbe
movl
les
mov
popa
add
push
mov
aad
xchg
dec
nop
push
in
aas
lds
cld
jb
out
mov
je
fsubrl
jecxz
fstpt
lods
add
lea
jl
call
or
mov
mov
popf
daa
fucomi
pop
xchg
pop
cld
bound
inc
fidivl
das
icebp
inc
mov
add
and
outsl
roll
and
testb
and
pop
push
sbb
xchg
fwait
adc
cmc
ds
sbb
inc
lret
cs
cltd
mov
mov
lock
js
and
fst
fnsave
sub
pop
aam
xor
pop
es
pop
insl
insb
pop
pop
dec
pop
popw
xchg
sub
pop
popa
push
push
test
test
mov
shl
mov
push
xor
add
pop
fistps
cld
sub
mov
js
push
cwtl
cmp
in
clc
xor
mov
sbb
insb
pop
leave
aas
stos
add
add
hlt
add
push
jmp
jg
xor
pushf
or
outsb
icebp
xor
iret
xchg
mov
into
jecxz
dec
push
dec
ljmp
pop
xchg
loope
mov
inc
sbbb
fwait
xchg
rcll
test
add
shll
out
enter
mov
fidivrs
in
inc
xchg
mov
mov
mov
movsb
pop
push
addr16
subb
sti
cs
ljmp
jne
ljmp
or
stos
jmp
pop
add
orl
xchg
out
jge
sub
cmp
push
lcall
and
mov
insb
add
lahf
jle
in
mov
iret
dec
cmpsl
stos
ret
push
xor
push
inc
pop
sub
push
sub
popf
push
sub
mov
add
fcmovbe
mulb
sbb
mov
and
test
adc
pop
test
je
je
jne
jl
cmp
push
arpl
std
mov
push
ljmp
add
in
cmp
stos
stc
fimuls
mov
or
out
loopne
push
cmp
jg
test
imul
es
mov
jge
mov
sbb
mov
pop
add
das
nop
mov
pop
push
jl
lret
out
addr16
mov
test
jo
mov
lahf
xor
cmp
imul
cmpsb
xchg
jp
in
pop
ljmp
dec
and
mov
push
sub
and
cmovs
ljmp
and
pushf
popl
js
push
inc
pop
add
pushf
add
stc
ja
pop
adcb
js
repz
rclb
push
add
or
pushf
add
cld
push
jae
es
leave
adc
sahf
in
jg
inc
nop
mov
mov
movsl
mov
movsl
fwait
and
inc
int
insl
or
loopne
stc
idivl
lods
and
mov
mov
sbb
mov
orb
outsl
cmp
pop
loop
psubusw
insb
pushf
fs
popf
cmp
fists
aaa
cmp
sbbl
cli
pop
mov
sbb
and
hlt
into
jp
push
cmc
xchg
xor
jb
pop
cwtl
jl
adc
imul
xlat
data16
jo
cmp
push
mov
cmp
xor
mov
cs
pop
cmp
xchg
in
gs
loopne
add
cld
or
mov
les
sub
xchg
or
jp
ljmp
mov
sbb
cmp
push
pop
cs
daa
out
cmpsl
bound
sub
sub
dec
mov
mov
jecxz
mov
mov
out
jle
js
fisubs
mov
cmpsl
pop
mov
cmp
fistpl
subb
lahf
js
inc
dec
das
test
mov
mov
mov
out
rcll
lret
repnz
rorb
jo
push
push
push
mov
int3
std
in
inc
sbb
popf
adc
mov
out
mov
sarb
cmp
mov
outsb
sub
or
ret
fsts
es
cmp
push
hlt
dec
dec
push
or
ljmp
or
cwtl
out
mov
mov
lfs
xor
pop
loope
mov
frstor
fstl
add
xchg
daa
sbb
aaa
popa
adc
pop
jb
dec
stos
repz
out
push
popf
movsb
xchg
cltd
and
loopne
sub
out
xor
pusha
dec
xor
adc
mov
add
mov
lret
sbb
dec
jl
push
inc
pop
cld
sbb
xor
fwait
cld
repz
sub
shrb
popf
add
mov
bound
int
dec
add
jo
pusha
xchg
push
out
mov
lods
lahf
mov
pop
adcl
jne
lods
mov
ret
loope
out
movsl
xchg
mov
adc
movl
mov
es
daa
mov
mov
xchg
and
sbbl
scas
sub
xor
addl
punpckhbw
push
push
insb
lcall
movsb
stos
cltd
in
inc
inc
pusha
inc
mov
iret
stos
jne
ret
pop
pop
addr16
inc
sub
jecxz
js
xor
in
movsl
mov
jge
fnstcw
jg
jno
xorl
movsl
out
sbb
sbb
push
mov
push
lret
outsb
and
fwait
arpl
xor
movsl
repnz
rcrb
hlt
test
arpl
mov
or
pushf
push
dec
aaa
test
mov
dec
int3
loope
movsb
pop
mov
adc
lock
rolb
mov
mov
adc
cmp
test
xor
push
cli
mov
jbe
iret
xchg
jge
pop
xor
daa
push
add
bound
enter
pop
dec
push
pop
jnp
test
mov
jno
lahf
dec
dec
ds
sbb
test
ss
xchg
inc
mov
push
fsubr
inc
ja
enter
pop
mov
push
xchg
sbb
ja
popa
sub
cld
mov
mov
test
dec
jecxz
adcb
mov
push
ret
mov
cli
xchg
xor
push
pop
cmpsl
xor
js
mov
pop
aas
lahf
and
pop
inc
pop
faddl
nop
sub
adc
push
cmp
daa
inc
jg
or
mov
push
mov
adc
sar
xchg
int
xchg
xchg
sub
div
js
inc
lret
scas
shll
mov
mov
test
outsl
pop
sub
fwait
mov
fs
inc
mov
pop
sbb
fdivrs
mov
fmull
mov
std
cmp
inc
inc
or
loopne
cmc
dec
int3
push
xor
add
adc
outsb
insb
imul
add
lods
and
inc
xlat
js
cmpsl
sub
xor
imul
and
mov
clc
gs
add
and
pop
fmulp
inc
negb
flds
negl
ffreep
and
int
fs
mov
scas
cmp
lock
pushf
adc
inc
add
stos
nop
or
in
aas
add
dec
sub
and
sub
sub
mov
xor
in
mov
pop
or
mov
jno
dec
xlat
lcall
inc
orb
aad
inc
inc
adc
mov
mov
jns
cmc
shll
dec
ss
popf
pusha
out
mov
out
push
adc
mov
mov
fadds
lret
or
jl
jbe
inc
mov
div
sub
rolb
adc
test
rcrb
insl
cmp
dec
push
inc
jo
test
mov
sbb
add
fcompl
loop
sahf
sbb
and
pop
fldcw
adc
inc
add
sub
test
jmp
xchg
push
push
aad
fnstsw
or
sbb
loope
roll
out
stos
loop
inc
out
mov
out
lret
push
lahf
jae
dec
push
mov
or
mull
xor
cmpsb
ret
outsb
jecxz
aam
or
mov
sbb
fcoms
mov
or
push
cmp
repz
aam
push
xor
add
cmc
scas
out
xchg
nop
in
mov
lret
jmp
xchg
push
mov
sub
sbb
addr16
fnstcw
mov
cs
enter
iret
cmc
mov
mov
sbb
inc
stos
xchg
xchg
sbb
fs
out
cs
sub
cmp
pushf
lock
xor
int
xchg
leave
mull
imul
aam
popa
or
jo
in
sbb
pusha
loop
hlt
iret
or
ret
or
sahf
jo
inc
xor
imul
dec
mov
fsts
sub
xchg
cld
imulb
sbb
inc
mov
scas
mov
or
rclb
adc
movsb
mov
sbb
hlt
iret
sub
arpl
lea
cltd
mov
repz
push
mov
mov
sub
int3
mov
push
ficoms
jl
rcrb
hlt
and
sub
int
dec
movsb
mov
pop
fwait
jbe
popa
jne
jno
jno
jmp
andl
jno
pop
xor
dec
les
xor
fldcw
lahf
outsb
adc
les
add
adc
enter
cmpsl
sub
sub
xor
enter
push
cmp
loope
sbb
cmp
int
xor
fisubs
test
std
push
and
mov
add
lods
imul
xor
jg
cmpsl
pop
into
cmp
dec
add
pop
mov
in
push
mov
push
fdiv
repnz
fcmovbe
nop
outsb
in
scas
int3
adc
mov
inc
jg
aad
mov
cmp
mov
pop
aaa
mov
ror
and
dec
sub
push
fs
movsb
and
das
dec
divl
movsb
sub
call
jmp
mov
sub
sbb
test
add
pop
push
loop
sahf
mov
roll
jge
fs
test
fdiv
rolb
out
ds
xor
mov
or
or
into
inc
or
mov
xor
nop
call
add
popa
imul
enter
lcall
adc
lods
inc
inc
xlat
mov
mov
dec
lret
hlt
ljmp
mov
outsb
mov
jae
mov
scas
pop
pop
dec
mov
les
mov
push
scas
mov
xor
negl
dec
mov
js
adc
lods
sbb
xor
inc
in
aad
sub
jecxz
aam
mov
lods
push
je
pop
shl
sub
lea
call
inc
imul
cmpl
cld
jno
in
adc
repnz
sub
push
mov
sub
and
aaa
sub
lock
notb
push
std
inc
sbb
clc
cmpsl
push
push
mov
icebp
jp
sbb
lcall
mov
add
xchg
jne
push
out
sub
mov
ret
notl
xor
jne
dec
or
ljmp
jecxz
inc
xor
inc
xlat
mov
aad
inc
mov
jb
fiadds
ficomps
daa
mov
es
jae
push
loope
push
fucom
xchg
cmp
movsb
dec
xchg
dec
mov
rcr
cmp
stos
rcll
out
sbb
push
dec
push
jp
inc
ljmp
xchg
xor
inc
orl
xor
xor
ja
xchg
shrb
dec
xchg
std
ja
push
int
bound
inc
inc
and
or
rorb
fwait
js
outsb
lds
ficomps
xlat
out
gs
shlb
add
in
orb
int
mov
or
mov
aad
and
mov
cmpsb
jp
in
mov
mov
ret
fbstp
jne
push
das
mov
and
fbld
notl
jae
push
mov
jecxz
out
fsubr
sub
sub
push
push
call
pop
and
filds
ljmp
pusha
jge
sbb
imul
test
aad
gs
inc
inc
push
jae
imul
push
fnstsw
jge
test
jmp
sub
sbb
dec
shrl
in
scas
push
mov
rcll
push
cmpsl
mov
jno
stos
repnz
mov
clc
hlt
sbb
jbe
mov
insb
inc
cmp
cmc
or
xchg
ja
aaa
daa
sub
or
addl
stos
jne
mov
clc
pop
push
xchg
lahf
inc
add
cmp
les
jge
out
test
movsb
dec
fildll
push
cwtl
mov
fstpt
xchg
inc
sbb
js
enter
data16
jl
inc
decb
jecxz
push
dec
mov
dec
jo
jp
lahf
in
push
rolb
test
int3
xchg
fildl
sub
in
adc
or
enter
sbb
loope
int3
jnp
jge
pop
cmp
fidivrs
push
out
loope
pop
fwait
nop
and
mov
in
jb
ret
mov
add
mov
xor
inc
push
inc
aaa
add
es
js
ljmp
jbe
and
sahf
pop
fcompl
dec
imulb
sub
push
shlb
mov
movsb
cmp
pop
sub
mov
jecxz
and
cmc
outsb
push
fldcw
fmulp
mov
pop
cmpsb
div
test
test
and
sbb
cmp
fldl
lahf
fucom
outsl
aad
push
loop
mov
stc
xchg
in
shll
adc
int3
jno
ss
cmpsb
cmp
mov
aad
xor
and
hlt
decb
xor
or
rcr
or
mov
cmc
fildl
cmc
xor
jo
pop
cmc
and
imul
jge
add
out
popaw
push
in
lods
out
pop
push
mov
shll
mov
not
mov
sti
mov
jne
dec
sub
dec
sbb
outsb
f2xm1
fistps
les
shl
rorl
xchg
push
sbb
xor
ss
cmp
out
inc
mov
adc
push
je
push
push
cmc
cs
jl
ds
mov
push
fidivl
push
scas
dec
push
sbbl
mov
int
call
push
nop
insb
mov
movsl
adcl
call
cli
pop
mov
inc
jecxz
lret
cmp
das
insl
xor
inc
mov
mov
fcoml
notb
mov
pop
cmpsl
push
sbb
mov
push
adc
cld
vunpckhps
ljmp
mov
hlt
mov
loope
lods
pop
popf
sub
inc
sub
sub
mov
mov
xchg
nop
insl
or
cmpsl
xchg
es
mov
push
pop
lods
mov
ret
mov
in
insb
and
xchg
call
lods
add
cltd
pop
cmpsb
test
cmc
sub
movsb
cmp
fisttpll
repnz
clc
and
and
push
inc
shll
fistpl
stos
sarb
xchg
outsb
mov
push
push
aad
decl
scas
pop
xor
sbb
int3
or
ficompl
dec
in
cmpl
mov
mov
dec
push
inc
cmp
fsubr
aam
or
fwait
push
adc
adc
outsl
push
add
jno
bound
mov
jns
dec
mov
adc
adcb
data16
nop
insl
or
sub
jp
lds
mov
cmpsb
pop
fisttps
sub
mov
sbb
filds
jp
push
mov
orl
out
xor
or
adc
push
xchg
loopne
stos
jnp
enter
adc
jnp
and
jle
xlat
popa
in
bnd
sbb
iret
enter
movsl
loope
pop
or
xor
jecxz
in
push
xor
sub
mov
cld
and
ficompl
xchg
sbb
sbb
pop
scas
jns
call
adc
push
mov
sarb
push
cltd
add
gs
arpl
push
inc
cmp
outsb
or
or
xchg
adc
jb
test
loop
mov
pop
cmp
inc
adc
imul
pop
adc
cmp
mov
movsb
aam
icebp
push
out
xorb
repz
mov
or
push
andps
sti
mov
cmp
adc
dec
mov
push
imul
pushf
sbbb
outsb
adc
xchg
xchg
fwait
inc
dec
roll
in
sti
jne
enter
pop
inc
mov
push
cmpsl
pop
loope
mov
or
jbe,pt
add
fistps
addl
and
xor
xchg
add
notb
pop
mov
mov
push
pusha
jg
fmull
hlt
sub
sahf
xchg
adc
inc
cmp
jg
js
mov
mov
data16
dec
jae
call
jno
int
imul
int3
xchg
mov
mov
push
lret
push
shll
jno
jge
xor
imul
test
sbb
test
iret
cmp
stc
dec
dec
mov
adc
in
jle
xorb
insl
xchg
mov
cli
daa
cmp
cmp
fdivr
or
jb
push
xor
cmc
mov
cwtl
jno
adc
cmpsl
adc
push
cwtl
adc
std
push
add
insb
cwtl
lods
aad
jbe
mov
push
xchg
sub
pop
cld
in
bound
test
push
leave
lret
cmp
dec
js
cs
das
xor
fldenv
testl
xchg
push
pop
ds
insl
lret
mov
mov
pop
pushf
adc
jmp
mov
aad
jg
nop
cltd
mov
ljmp
je
add
dec
repz
mov
sbb
call
lds
dec
mov
repnz
or
pop
sub
inc
push
jae
popa
sahf
and
dec
outsl
shlb
xchg
sarl
rorl
pop
xchg
std
xchg
inc
icebp
cwtl
mov
gs
xchg
xchg
fcomip
sub
cld
lock
lret
pop
lods
sub
mov
mov
push
pop
mov
mov
sub
aam
scas
scas
ret
adc
dec
fsubrl
inc
clc
dec
inc
pop
dec
xchg
gs
ljmp
adc
add
and
sub
sub
xor
mov
cltd
xchg
xchg
je
loopne
and
sahf
sbb
xor
sti
jge
sbb
pushf
xor
mov
mov
push
dec
mov
out
jecxz
outsb
xchg
mov
add
jmp
fstpl
xor
pop
sub
xchg
pusha
fisttps
dec
fs
push
pop
dec
dec
ret
jae
mov
fwait
orb
mov
lret
mov
sub
sahf
xchg
xor
in
leave
ret
xchg
inc
lds
pop
pop
push
pop
dec
in
addr16
fnstcw
pop
dec
mov
dec
adc
xchg
fmuls
aaa
addr16
jo
mov
jae
fbld
ds
jmp
dec
enterw
mov
sub
and
push
aad
push
stos
out
xor
scas
inc
sbb
add
push
or
js
in
repz
mov
pop
iret
daa
xlat
call
pop
inc
rclb
push
lahf
pushf
jae
xor
push
clc
call
les
jnp
fimull
jne
add
clc
sbb
std
imul
out
out
pop
adc
cmp
mov
adc
leave
enter
mov
xlat
arpl
int3
jg
ds
call
push
movsl
sbbl
add
sbb
lea
mov
jl
adc
lods
clc
jno
outsb
notl
scas
cmp
and
xchg
popa
movsb
pop
shl
push
ss
aad
clc
int3
out
jge
lcall
push
sbb
cmp
dec
mov
jl
mov
dec
adc
adc
push
fmuls
pop
lahf
lret
mov
push
data16
test
add
mov
lret
xchg
out
aas
scas
rcll
shlb
stos
push
loope
sahf
lret
stos
xchg
cmp
xor
cltd
mov
movsl
data16
and
sti
pop
cmovs
xor
add
mov
adc
enter
inc
test
pop
pop
cmp
jg
fsubrl
imul
xchg
insb
sub
add
adc
sbb
dec
push
mov
movsl
mov
xchg
mov
push
dec
and
pop
cmp
fildll
int
and
sub
sub
je
jno
shll
mov
mov
and
test
sub
or
out
adc
call
bound
enter
scas
cmp
sub
out
jl
cli
pop
and
fidivrl
mov
or
outsb
into
jmp
movl
dec
das
adc
jmp
pop
jns
adc
jecxz
add
pop
data16
mov
in
out
xlat
je
dec
sub
lret
sbb
int
adc
lds
inc
in
mov
loopne
call
xlat
inc
dec
inc
inc
xor
fstps
mov
repz
add
sbb
test
dec
cmp
call
pushf
mov
addb
or
nop
je
scas
aas
jg
mov
arpl
pop
jmp
jecxz
testl
lea
gs
mov
imul
mov
mov
add
pop
into
xor
test
das
sub
jae
dec
add
rcr
push
and
sbb
adc
cmp
mov
mov
call
gs
sbb
out
lret
enter
add
mov
xchg
xor
ror
imul
test
aam
sub
es
push
adc
in
xchg
movsb
adc
ljmp
aas
lods
mov
cmpl
rcr
ljmp
jg
xor
and
shll
fstl
sbb
xchg
icebp
into
xchg
jne
mov
xchg
shl
adc
pop
leave
adc
sahf
adc
xchg
cld
add
push
or
popf
xor
cli
dec
or
mov
call
xchg
aad
dec
mov
inc
xchg
ja
mov
push
inc
or
decl
int
fwait
scas
inc
jne
push
lods
loopne
jae
cld
add
arpl
add
sbb
xor
adc
daa
in
xchg
xchg
movsl
movsl
mov
jnp
mov
push
out
aas
addr16
pop
jp
lahf
dec
mov
daa
mov
test
mov
mov
mov
sbb
pop
stos
push
xchg
sbb
subl
out
inc
sub
sbb
ficoml
pop
xor
lds
xor
dec
jno
push
or
or
popa
loopne
xchg
out
jp
jbe
popa
dec
sub
push
mov
add
pop
inc
cli
and
xchg
pop
mov
jb
jp
scas
aas
clc
fcoml
inc
add
loop
adc
repnz
or
adc
hlt
sti
sbb
loop
sub
or
add
insb
aaa
repnz
or
jne
adc
int3
js
xchg
inc
loop
pop
stc
dec
lds
mov
mov
push
and
orl
test
leave
jecxz
test
jbe
cs
jge
jne
sbb
sub
daa
push
lods
cmp
sub
jmp
inc
jl
das
jb
sub
push
hlt
push
es
inc
sbb
add
ficompl
push
sub
ljmp
leave
xchg
enter
pop
les
push
loop
loope
mov
cmpsl
cmp
mov
ds
sub
and
jb
xorb
sbb
cmp
mov
sub
mov
and
inc
out
js
adc
ret
pop
pop
push
push
scas
push
fcompl
shrl
stos
adc
clc
ljmp
xchg
sub
fcmovnu
dec
mov
adc
lcall
rcr
ret
divl
rcl
lret
cmp
push
mov
clc
sbb
push
or
test
dec
fiaddl
jb
mov
stc
mov
or
adc
or
cmp
jecxz
jae
xor
inc
cli
movb
fcompl
or
insb
cmc
xor
xor
and
push
jmp
repnz
add
repz
lods
mov
mov
enter
cwtl
mov
cmp
mov
je
and
gs
nop
sahf
loopne
or
inc
push
insb
jbe
xchg
adc
les
popf
repz
sbb
jecxz
fcmovnb
mov
lahf
jo
add
lea
cmp
aad
data16
dec
pop
movsl
aas
push
fdivl
xorl
je
divb
imul
data16
call
in
mov
mov
xlat
sbb
adc
gs
jno
mov
sub
das
or
mov
mov
xor
jmp
sub
xchg
negb
std
loopne
cld
cwtl
xor
and
cli
jp
icebp
push
cld
inc
sti
mov
mov
mov
add
lock
pop
cli
cmp
sub
cmp
adc
pop
ret
xor
imul
cld
insl
mov
jmp
xchg
jecxz
jnp
push
inc
mov
cmp
lods
repz
mov
dec
or
xor
out
movsl
movl
add
dec
test
fdivs
in
mov
jmp
xchg
shl
imul
fstpl
fildll
test
mov
gs
mov
repz
ss
jl
mov
jecxz
and
xchg
ja
lea
inc
mov
iret
ficompl
cli
aaa
aam
cli
cmp
jle
cmp
loope
xlat
clc
stos
jns
push
in
bound
mov
xor
pop
rorl
jp
lcall
icebp
int
repz
cli
dec
ds
ja
adc
xorl
sbb
xchg
aaa
clc
mov
xchg
in
pop
xor
jno
sub
pop
sub
pop
aad
push
push
loope
stos
aam
or
fcoml
jnp
add
jbe
add
xchg
and
pusha
jmp
lahf
mov
fidivrs
rolb
inc
jae
or
jle
dec
popf
addr16
push
mov
jns
mov
mov
push
xchg
scas
fs
sbb
xchg
mov
scas
mov
sahf
adc
dec
pushf
repnz
inc
jmp
inc
push
mov
arpl
push
and
std
or
jle
cmpsl
int3
mov
pop
lret
faddp
inc
in
lds
or
push
and
fwait
jnp
pusha
cmp
movsb
jne
jno
aam
hlt
jbe
add
xor
sbb
ret
xchg
in
jno
add
jl
jnp
dec
out
and
push
xlat
ror
data16
xor
mov
dec
xchg
fidivs
push
clc
jg
inc
sti
pop
and
mov
add
xor
xchg
xor
xchg
or
into
sub
jns
cmp
sahf
lods
fisttps
movsl
je
fisubl
mov
xchg
sbb
xor
lahf
inc
cmp
iret
adc
dec
mov
mov
mov
lcall
or
dec
int3
jg
test
lods
outsb
fldt
mov
roll
cwtl
jg
or
mov
aas
mov
js
and
aaa
int
inc
loopne
cmp
call
mov
mov
rclb
lret
fsubrs
orb
movsb
outsl
push
fwait
stc
loop
adc
stc
insl
dec
pop
fs
fsts
or
test
out
cli
das
cmp
sahf
xchg
test
cli
rcrb
xor
loopne
or
test
es
negl
xor
add
mov
and
xor
dec
mov
adc
stos
popf
add
pushf
lret
lds
xchg
in
leave
xlat
repnz
sub
mov
das
sti
and
in
xchg
dec
gs
or
loopne
and
dec
xchg
adc
inc
push
adc
les
mov
xchg
pop
popa
xor
push
and
cmp
out
bts
pop
aam
pushf
adc
inc
jmp
mov
jecxz
cwtl
out
stc
nop
sub
pop
aas
mov
clc
fisttps
mov
js
add
lds
lea
mov
mov
push
xchg
mov
xorl
out
popa
cmp
inc
ljmp
inc
inc
mov
ret
das
jmp
sbb
and
mov
cltd
negb
sub
cwtl
in
lds
mov
lods
and
adc
cmpsb
test
push
lock
repnz
sbb
fisubrl
sub
insb
ret
ret
es
insl
movsb
and
dec
xor
xchg
ljmp
cld
lods
pop
xchg
mov
mov
clc
mov
lahf
cmovge
add
scas
std
test
mov
sets
jnp
frstor
movl
nop
scas
or
insb
stos
jl
stos
out
or
ss
mov
cli
push
rorl
xor
into
lret
icebp
ds
or
mov
out
repz
mov
mov
jp
push
ja
in
dec
and
inc
cmp
or
movsl
lcall
popf
mov
add
cltd
and
bound
loope
dec
hlt
in
sub
divb
push
test
pop
jl
xchg
addr16
mov
fimull
mov
sub
mov
out
dec
and
add
add
mov
jmp
mov
sbb
scas
sub
sub
adc
pop
push
xchg
jmp
insl
and
mov
insb
pop
or
jnp
jg
jle
adc
in
dec
push
pusha
test
dec
ret
and
rorl
jae
pop
push
push
inc
popf
fstps
cmp
xchg
inc
clc
cs
push
dec
adc
mov
insb
scas
add
pop
push
adc
in
push
or
sub
sub
or
add
xor
stc
das
add
loop
mov
ds
int3
dec
adc
pop
stc
in
adc
lds
stos
sarb
lret
call
cld
movsb
add
sahf
jbe
dec
push
jge
mov
dec
inc
xlat
daa
push
pop
loope
mov
jae
pop
pushf
lds
pop
push
push
mov
aam
jo
in
mov
sub
push
fists
mov
inc
mov
mov
scas
push
dec
in
xchg
inc
push
enter
pop
inc
inc
mov
loope
push
sbb
xchg
add
andl
jl
mov
xchg
subl
inc
jge
fidivrl
adc
fidivrs
adc
ds
or
hlt
cmpsb
jp
je
aam
ds
test
scas
adc
fidivl
stos
push
mov
and
or
call
test
sub
xorb
lcall
mov
sub
and
rorl
test
andb
adc
out
loop
sub
stc
and
pop
add
ret
adc
xlat
xor
cmp
pop
adc
cli
repz
xor
mov
xor
outsb
into
xchg
sti
xchg
mov
std
xor
sub
jecxz
inc
int3
mov
add
mov
xlat
lods
jno
cmp
xor
into
sub
or
mov
push
xchg
inc
sti
rol
mov
stos
in
mov
loopne
push
es
hlt
add
flds
mov
push
xchg
and
dec
sbb
pop
packssdw
mov
clc
pop
ret
adc
sahf
pop
jmp
add
mov
rcl
aas
nop
add
loopne
jb
movsb
mov
je
cmp
enter
mov
and
mov
lds
aaa
popf
or
inc
test
sub
inc
xchg
xor
enter
and
push
int
lret
mul
pop
dec
std
cs
shlb
xor
icebp
test
cld
pushf
cmp
mov
int
lock
adc
cmp
jp
dec
lds
aam
xchg
mov
push
test
es
adc
fildl
dec
cs
xchg
xchg
popa
inc
push
ljmp
push
leave
and
scas
push
mov
lcall
mov
lods
jl
add
ljmp
mov
xchg
ret
push
jae
data16
pop
mov
inc
jb
xchg
adc
shl
xor
pop
lret
stos
imul
out
outsl
enter
addr16
push
pushf
cmpsl
daa
jmp
andb
addr16
xor
jmp
mov
jmp
push
mov
adc
pushf
dec
adc
jl
iret
clc
xchg
dec
cmp
inc
sub
add
mov
jnp
lahf
into
pop
ljmp
in
dec
cmp
jle
inc
mov
jmp
clc
cmc
lds
xchg
scas
sub
jp
lods
adc
inc
outsl
lods
mov
xor
jne
jecxz
mov
add
fistps
popa
addr16
fldl
cmp
adcl
mov
or
jne
stos
mov
jne
insb
les
popa
jle
test
mov
push
sbb
mov
cld
aaa
pop
pop
int
inc
orb
lock
das
push
add
xchg
jbe
addl
mov
sbb
mov
imul
scas
push
jns
adc
cmp
repnz
dec
push
hlt
faddl
xor
inc
dec
dec
mov
je
int3
aaa
mov
repnz
xor
jb
sub
rcr
or
rcr
gs
mov
xchg
and
push
pop
movsb
mov
inc
jbe
or
add
sbb
mov
daa
dec
js
cmp
push
sbb
jo
fstpt
addr16
int
aas
push
popf
jnp
xor
push
je
lahf
inc
adc
push
mov
hlt
test
mov
inc
sbb
cmc
cmpsb
xor
push
enter
pop
subl
loope
repz
cmp
rcl
and
cmp
and
dec
inc
sbb
mov
xchg
aam
dec
pop
fistps
js
jae
pop
aaa
fwait
push
lcall
mov
sub
and
mov
shr
rorb
pop
mov
mov
mov
jmp
mov
cmp
and
mov
push
jmp
dec
int
repnz
xor
or
aad
rcrl
data16
xor
push
les
sahf
adc
outsl
addb
outsl
getsec
mov
stc
fcmovnu
jns
mov
aad
cmpsb
push
bound
jne
stos
cmp
adc
aaa
out
pop
push
es
xor
fnstcw
inc
call
cmc
test
push
xor
aad
adc
test
imul
ret
pop
out
inc
data16
mov
mov
in
aaa
sub
mov
jns
xchg
sti
subl
movsb
sub
cwtl
dec
push
icebp
xchg
dec
out
cmp
dec
les
adc
xchg
in
xchg
sbb
xchg
xchg
int3
ss
pop
jne
int
or
pop
pushf
push
stc
jmp
or
sbb
and
sti
or
jb
andl
sbbb
xchg
scas
dec
lret
lods
push
sbb
decl
mov
xor
andl
sub
leave
inc
or
mov
and
mov
shll
and
and
xor
pop
cmpsl
dec
cwtl
fidivrl
pop
pop
test
cltd
add
test
and
push
mov
lock
mov
rcrb
dec
xor
aam
pop
imul
inc
shlb
aam
insl
jb
push
dec
sub
adcb
insl
mov
lods
xor
ljmp
test
add
or
lcall
repz
mov
pop
add
push
mov
repnz
clc
sbbb
xchg
aam
xorb
sarl
fcmove
pop
jne
iret
stos
pop
adc
out
shl
mov
push
ja
pushf
inc
jmp
xor
les
fidivrs
jae
cmp
cmpsl
xchg
xor
dec
push
mov
ja
and
pop
into
mov
lcall
imul
push
jecxz
mov
add
es
out
jle
or
adc
jns
and
xchg
int
inc
mov
adc
mov
repnz
scas
in
cmp
inc
les
mov
ret
mov
inc
inc
mov
out
mov
mov
xchg
imul
mov
xchg
mov
insl
jmp
inc
std
add
out
fsubr
sub
or
in
push
adc
inc
and
pop
outsl
insb
das
out
jnp
fs
jmp
sbb
and
add
ret
ss
push
push
inc
lea
jae
leave
xchg
push
scas
sbbl
testb
into
pop
into
xchg
mov
push
sbb
xorl
enter
or
adc
enter
and
mov
jg
sbb
lcall
in
into
or
out
mov
imul
insb
and
and
or
movsl
cmp
stos
iret
sub
push
cwtl
sti
shl
push
scas
xchg
lds
sbbb
movsb
push
lock
sarl
jge
dec
sbb
scas
clc
daa
dec
sbb
sub
mov
dec
cmp
lods
push
add
xor
mov
imul
xchg
mov
cli
inc
test
shlb
gs
enter
pop
rcrb
push
pop
loope
mov
loope
in
cmpl
mov
jge
and
into
cmpb
add
or
xor
sbb
xchg
shll
pop
push
test
js
scas
pop
mov
cwtl
lcall
xchg
fmull
ret
cmp
adc
fs
jg
ret
daa
mov
lods
mov
lcall
out
lahf
mov
mov
push
sub
inc
jmp
shll
xchg
sbb
sahf
jmp
sbbb
out
mov
loop
cli
cmp
fs
rcll
fs
cmp
iret
out
out
cli
pop
push
xlat
xor
pop
jge
js
pop
into
pop
xchg
add
dec
or
xor
mov
adc
loop
adc
dec
jmp
in
jle
data16
lods
aas
outsl
testl
out
out
mov
in
xlat
sti
xor
dec
lock
gs
aam
loopne
repnz
in
inc
mov
notb
les
adc
test
dec
sbb
iret
test
movsb
pop
sub
jns
pusha
das
mov
adc
aad
jge,pn
mov
insl
jecxz
nop
mov
xor
sbb
cmpsl
shll
jecxz
pop
in
into
or
lea
pop
mov
prefetcht0
aaa
ret
push
dec
sbb
mov
inc
xchg
sahf
jg
add
enter
mov
push
and
xchg
add
push
mov
inc
cwtl
push
out
cmpsl
dec
sti
sub
icebp
xor
test
repnz
dec
repz
jno
cs
lods
pop
mov
inc
shr
add
sub
jnp
aam
jl
ret
outsl
and
sahf
insl
pop
std
mov
xor
xchg
fildll
aam
push
addr16
lods
lahf
mov
addr16
or
adc
punpckhdq
add
cmp
jne
inc
mov
imul
sbb
clc
mov
jbe
sbb
movsl
aas
pop
and
stos
dec
iret
pop
out
xor
mov
or
popa
pop
mov
or
jbe
add
test
mov
sub
ja
add
dec
cli
test
std
pop
orb
sub
xchg
add
ljmp
bound
das
lods
jns
scas
in
fiadds
mov
pushf
pop
mov
lods
rolb
lods
xor
mov
dec
sub
sbb
dec
lret
jne
cmc
cmp
fistps
xor
sbb
jmp
adc
mov
aaa
fs
sub
add
mov
cmp
insb
lcall
jle
inc
pushf
in
sub
mov
popa
popa
xor
sub
pop
lea
scas
jae
out
push
mov
popf
add
jle
jne
mov
xchg
or
inc
sbb
and
jb
adc
adc
mov
imul
mov
hlt
jb
xor
lods
js
push
add
push
pop
loop
or
mov
add
test
in
ret
pop
xchg
inc
fimuls
dec
vhsubps
sub
jne
pop
and
cmp
movsb
mov
addb
loopne
jge
push
xchg
sbb
daa
dec
ds
cmp
lds
movd
or
cmpsb
inc
push
arpl
inc
jo
mov
pop
push
pop
cmc
mov
mov
les
iret
cmpsb
cmp
mov
enter
pop
call
push
ret
aas
loope
jne
sub
push
fistpll
xchg
icebp
sub
imul
movsl
nop
cmp
cltd
lahf
add
jnp
and
sti
mov
xor
and
ret
in
aas
pop
xor
cmp
rcrl
sub
add
push
aas
int3
movsb
jg
mov
mov
imull
adc
add
push
fdivp
push
icebp
adc
icebp
xor
sub
mov
lret
lret
rorl
mov
mov
sbb
jae
test
sahf
bound
int
and
mov
stc
dec
repnz
aaa
adc
ss
dec
mov
fmuls
in
cli
mov
xor
xor
cmp
sub
or
out
mov
cmp
cmc
adc
xor
fldt
in
xor
adc
pop
imul
sub
add
sbb
mov
lods
fnsave
sbb
xlat
out
adc
push
mov
dec
pop
mov
adc
push
loopne
pop
pusha
dec
adc
das
inc
mov
pop
fldcw
add
xchg
imul
mov
cmp
push
xor
xor
and
loope
adc
inc
sahf
jmp
xor
loopne
pmullw
jp
cmp
jb
fidivs
dec
into
cmp
je
cwtl
daa
jecxz
mov
inc
jmp
or
daa
inc
adc
adc
or
inc
add
sbb
dec
mov
inc
push
test
das
mov
in
mov
and
fcom
shll
sahf
adc
and
push
cwtl
fld
xchg
cmpsl
dec
loop
mov
or
cld
sbb
mov
mov
mov
xor
lock
inc
xchg
shl
sub
out
sub
decb
es
popf
test
inc
sbb
xor
xchg
push
and
popa
imul
nop
mov
cld
aad
and
imul
add
pop
or
addb
mov
dec
fldl
fwait
clc
clc
es
xchg
sbb
xchg
mov
pop
lret
sub
stos
cmp
out
cwtl
xor
cmpsb
push
xchg
push
sub
lret
xor
mov
int3
adc
dec
xchg
mov
repnz
adc
scas
outsb
test
jle
ja
insb
and
icebp
pop
inc
xchg
dec
dec
or
inc
cmp
sub
sbb
add
shl
bound
in
lahf
cmp
imul
mov
push
clc
cmp
cmpsb
push
xchg
enter
push
mov
dec
lods
sub
jne
xchg
mov
lock
fistpll
xchg
push
push
loopne
and
xchg
fdivrl
pop
out
pop
and
incb
or
stos
adc
xchg
insb
add
push
pop
jle
nop
mov
pusha
lock
push
iret
rcrb
cmp
nop
ss
mov
dec
adc
dec
nop
sbb
daa
and
inc
hlt
js
fidivl
jb
bound
sbb
fwait
mov
adc
pop
scas
xchg
es
push
fsubrs
and
add
mov
repnz
aad
leave
or
inc
hlt
mov
jmp
inc
push
ljmp
xchg
bound
fisubrs
or
popa
ja
lcall
pop
mov
fdivp
repnz
lds
clc
shrb
dec
scas
push
ja
and
xchg
jns
sub
jnp
pop
mov
jge
dec
sbb
imul
dec
out
cmp
imul
sbb
jbe
dec
pop
adc
lahf
movsb
loopne
push
sub
lret
test
out
inc
pop
inc
xchg
sbb
xor
enter
pop
ds
mov
sub
cld
cmpl
mov
movsl
xchg
shll
mov
push
clc
sbb
and
scas
sbb
lods
jno
jno
rcl
sbb
jg
js
push
jmp
mov
push
lcall
insl
fsubl
cmp
lret
adc
sbb
mov
push
movsl
call
mov
push
shlb
pusha
in
fildl
hlt
stc
cmp
pop
fldcw
movsb
ds
lods
adc
mov
fildll
mov
addr16
pop
rcrl
pusha
inc
push
adcb
mov
stc
add
fs
sub
adc
andb
leave
mov
out
outsb
loopne
mov
cwtl
out
cmp
rcrl
push
push
into
push
add
fimull
xor
mov
rclb
inc
cmpsl
cwtl
imul
pop
mov
data16
push
pushf
mov
rcl
sub
inc
insb
mov
mov
out
jmp
ss
pop
gs
fists
inc
movl
dec
les
rcrl
xchg
rcrl
inc
xchg
cwtl
mov
lahf
pop
mov
adc
and
jmp
mov
xchg
aad
jns
nop
jno
test
jb
pop
push
dec
inc
jbe
je
mov
jecxz
cmpl
push
lahf
mov
mov
and
andl
cmc
fisttpl
pop
inc
aam
inc
mov
xchg
mov
dec
aas
or
jb
roll
test
cmpsl
std
lret
cwtl
xchg
ss
cmpsl
dec
dec
stc
mov
loopne
cmp
dec
lods
jo
rcrl
loope
lods
sbb
lock
repz
mov
repnz
das
aam
mov
ret
lea
and
scas
insl
dec
sbb
push
xchg
pop
sbb
or
xchg
popa
adcb
jne
or
pop
fcmovb
and
add
daa
movaps
add
sbb
cltd
dec
test
test
dec
mov
cld
push
frstor
es
xor
fstpl
fwait
rcl
roll
jns
jbe
out
stos
daa
xchg
scas
out
sti
cmp
mov
lcall
jo
or
xchg
xor
mov
xchg
xchg
mov
imulb
or
adc
inc
sub
or
aas
mov
push
int3
jnp
add
and
movsl
out
sbb
repz
add
fdivl
lret
ds
mov
or
mov
and
stos
inc
sarl
or
repz
mov
and
mov
into
in
fwait
and
xchg
sub
test
das
shl
cmp
lea
stc
clc
leave
push
int
adc
xchg
insb
jo
push
jnp
outsl
cmpsb
jle
rcrl
in
or
pusha
mov
iret
pop
pop
call
pop
sti
sbb
aaa
outsl
jae
out
add
adc
sbb
bound
cld
cmp
shl
imul
jno
hlt
cmp
ficomps
mov
stos
push
leave
xor
hlt
or
mov
inc
push
mov
or
pusha
pop
repnz
popf
ja
or
in
push
add
mov
push
pop
in
out
xchg
repnz
vpcmpeqb
inc
xor
and
jae
cmp
mov
js
adc
das
sbb
lea
dec
adc
cmp
lcall
fisubrs
mov
xor
ret
lahf
ret
xlat
mov
cmp
test
mov
mov
mov
sbb
cwtl
pop
jge
jbe
inc
mov
mov
jp
repnz
ds
xchg
movsl
sahf
lret
jecxz
push
adc
imul
aad
add
sti
mov
inc
jae
loopne
xchg
pop
jnp
jae
shll
lcall
push
fmull
dec
sub
popa
outsb
sub
cltd
jae
cmc
test
add
in
mov
mov
and
dec
push
notl
mov
out
fwait
imull
lret
insl
shll
mov
stos
cmp
adc
xchg
sahf
popf
clc
jg
out
xor
mov
inc
stc
mov
loop
mov
xorb
sub
cmp
add
pop
cli
repnz
and
cmp
dec
imul
test
fdiv
mov
jle
pop
sub
xor
adc
loop
add
xchg
lods
hlt
fs
mov
jo
insb
dec
insb
sub
pop
mov
and
mov
mov
shlb
loopne
je
dec
iret
fiaddl
fsts
pushf
test
repz
fwait
hlt
xchg
icebp
test
lods
cmp
adc
mov
pushf
push
fnstenv
cmpsb
out
jns
inc
pop
xchg
ja
or
or
dec
mov
and
jecxz
cmpsl
aad
xlat
aad
lea
fstps
mov
outsl
and
cld
adc
fistpl
mov
dec
cmp
inc
push
sahf
out
das
and
mov
add
pop
pop
rcll
data16
mov
xor
dec
cmp
mov
mov
xchg
jae
inc
lret
inc
push
dec
mov
outsb
fdivs
outsl
or
pop
shll
shlb
lea
repz
aam
shrb
add
xor
dec
adc
lcall
xchg
add
mov
inc
shlb
and
lahf
in
ja
or
jecxz
xchg
loope
mov
sub
inc
jb
fisttpll
subl
jmp
push
rcrl
daa
add
pop
cmp
push
push
jecxz
add
ds
and
mov
cmp
cmpsl
xchg
int
dec
repz
subb
movl
ret
or
or
js
outsl
mov
add
cmp
pusha
out
cli
push
leave
mov
movsl
in
rcrb
mov
in
pop
mov
ficoms
jp
sub
mov
mov
cld
xor
dec
jae
mov
mov
mov
fistpll
out
jmp
jb
scas
and
scas
out
mov
sub
hlt
test
push
or
push
stos
stc
pop
jno
jge
inc
insb
fisttpl
inc
jle
push
in
in
nop
pusha
es
pop
ljmp
inc
movb
jae
fadds
popf
js
insb
mov
repnz
ficompl
mov
sbb
add
imul
movsl
scas
push
sub
adc
adc
leave
negl
push
arpl
mov
or
fstpt
or
add
xor
pop
adc
fidivs
out
lds
shlb
scas
adc
push
cmp
or
push
jbe
mov
inc
pop
pop
sbb
lds
jno
xchg
jl
rol
clc
adc
or
lock
sbb
sar
push
shrl
push
push
test
inc
in
or
in
add
leave
pop
mov
in
popa
loope
sub
arpl
mov
imul
mov
addb
lods
rolb
popf
daa
xor
outsb
mov
or
js
notl
mov
out
daa
inc
push
or
fdiv
sub
sub
dec
imull
js
adc
shlb
pop
jg
cwtl
imul
push
pusha
pop
and
cmp
cli
and
int
mov
xchg
imull
icebp
fs
or
or
arpl
sbb
cwtl
sbbl
mov
or
sub
loop
or
stc
outsb
sub
scas
adc
pop
xor
les
cmp
mov
push
sar
and
xor
cwtl
cmp
cwtl
sbb
into
in
sbb
push
insl
mov
pop
mov
imul
in
sub
data16
add
jno
popf
xlat
stos
mov
sub
add
in
nop
xchg
sbb
in
sbb
jl
nop
gs
pop
jns
repz
dec
fisttps
in
jl
rol
ljmp
mov
rcrb
into
ss
mov
push
adc
data16
lods
jne
or
jmp
mov
mov
push
adc
sub
sub
aad
je
call
cmpsb
fiaddl
xchg
cwtl
add
mov
mov
adcl
jbe
pop
mov
jbe
outsl
leave
aaa
das
add
mov
mov
mov
std
sbb
cwtl
or
int
dec
scas
mov
mov
ret
fsubrl
les
mov
sbb
lock
pop
repnz
sarb
hlt
xchg
ljmp
ret
stos
dec
dec
xorl
dec
adc
gs
imul
mov
push
mov
out
sbb
adc
cmp
mov
inc
sbb
pop
fnsave
paddd
add
shl
cmp
arpl
out
shll
xchg
jnp
fcoml
add
fnsave
divb
sbb
out
xor
pop
push
mov
sti
push
mov
test
ljmp
insl
adc
ficomps
and
xchg
push
adc
add
push
out
fprem1
add
movsl
sarb
pop
in
out
xchg
pop
test
gs
lea
cltd
push
and
push
mov
in
icebp
mov
imul
dec
push
push
xor
mov
lods
sbb
xchg
iret
incb
pop
push
jnp
cmp
outsb
cwtl
out
or
sub
out
movsb
push
push
dec
xchg
shrl
xchg
cmc
mov
jnp
pop
loope
mov
arpl
lret
pusha
rcrl
frstor
ret
dec
pop
imul
lea
push
add
popf
lahf
call
and
fimull
mov
sbb
hlt
jae
loope
out
mov
push
sbb
push
xor
outsb
repz
sahf
stos
inc
arpl
cmp
or
push
lods
mov
or
and
int3
mov
fdivrs
fcmove
inc
add
icebp
lahf
mov
popa
mov
cmp
jp
movsb
int
jnp
dec
inc
pop
jbe
std
mov
sbb
mov
dec
cli
push
cmp
mov
pop
dec
jl
lods
push
dec
addr16
mov
sahf
fidivrl
js
lahf
add
dec
push
movsb
dec
xor
push
push
push
addl
cli
test
call
fmull
sti
push
shrb
mov
jmp
cmp
push
ds
xor
mov
adc
jns
sbb
push
add
xchg
divl
fisubrs
pop
leave
movsb
idivl
int
pop
xor
bound
jbe
fsubl
cli
icebp
outsb
repz
pop
push
cltd
shrb
cwtl
adc
in
mov
jb
lea
adc
lea
sub
es
aas
xchg
outsb
shll
sbb
mov
cmc
andb
outsb
outsl
dec
push
loop
mov
stc
and
jno
adc
cmp
jbe
insl
out
and
cli
pop
adc
cmp
mov
call
cmc
das
adc
das
jno
pop
imul
inc
imul
jmp
fisubs
inc
mov
mov
xlat
ljmp
mov
sti
stc
addr16
fwait
push
sbb
lahf
pop
sub
repz
loopne
fnstcw
add
add
leave
xor
cs
ja
cmp
test
xor
xchg
pop
cmpsl
pop
pop
adc
xchg
inc
pushf
insb
mov
pop
cs
iret
sbb
rorb
nop
add
sahf
aas
mov
xchg
jb
add
je
add
jecxz
mov
dec
lea
mov
bound
sub
dec
mov
pushf
fcmovnu
push
pop
sub
sbb
inc
mov
aaa
das
loope
pop
mov
jae
add
shl
lds
divb
mov
cmpsl
dec
cmpsb
xchg
mov
gs
cld
leave
xor
mov
mov
mov
xor
pop
adc
mov
or
je
aam
add
ret
cmp
insl
fsub
push
or
cs
sbb
imul
mov
mov
mov
fsubl
inc
ljmp
repnz
lods
int
mov
movsl
jae
enter
fadd
jb
in
nop
xchg
push
sbb
mov
ja
int
hlt
sti
sbb
ret
push
cltd
scas
vhaddps
xchg
test
jne
ja
shll
push
push
shll
dec
xor
mov
push
push
or
and
inc
push
mov
sub
jno
fsubrp
mov
sarb
mov
xchg
push
mov
mov
adc
pop
push
es
addr16
lahf
jp
adc
mov
fldenv
fcmovb
ds
cmp
mov
mov
std
xchg
mov
mov
xchg
or
insl
cmp
and
ss
or
pop
notb
mov
lret
mov
insb
mov
or
cld
insb
jle
dec
lods
in
loope
pop
lahf
sub
cmp
ljmp
lea
inc
iret
sbb
cltd
js
push
pop
ret
and
scas
mov
lock
fiaddl
repnz
sbb
mov
es
sbb
inc
cmp
jo
dec
mov
movsb
bound
in
div
jmp
mov
inc
pop
cmp
push
push
fidivl
ja
notb
dec
pop
jno
arpl
jge
add
jp
sti
rclb
lods
and
pushf
addr16
arpl
movsb
pop
addl
jge
sti
mov
and
dec
daa
dec
mov
cmp
jge
push
inc
pop
jl
insl
les
andb
and
and
xchg
and
test
sbb
test
pop
xor
iret
cwtl
fmul
or
leave
pop
cmp
inc
push
cmp
sub
sbb
call
sbb
dec
movsl
mov
fbld
and
mov
cs
daa
sbb
sub
js
aaa
popa
pop
mov
ficompl
je
adc
dec
dec
scas
sub
insl
cmpsb
outsb
push
inc
mov
rolb
fwait
out
sbb
stos
mov
xchg
roll
add
push
int
jecxz
sub
loopne
lret
lret
ret
orl
sahf
xchg
addb
jl
outsl
sub
and
cmp
stc
fsub
bound
sahf
adc
insb
adc
cmp
xor
mov
cli
mov
dec
cmp
scas
or
add
into
stos
dec
mov
divb
xor
ficomps
imul
imul
inc
jo
data16
lcall
mov
sub
sbb
cltd
mov
mov
data16
sti
dec
push
mov
ret
gs
test
sub
mov
fnstcw
aam
repz
ss
xor
scas
or
pop
mov
int3
pushf
pop
in
jnp
inc
mov
cs
lods
cmp
pop
push
sub
aas
push
xchg
gs
dec
mov
je
insl
nop
jecxz
stos
es
loopne
cmp
mov
mov
mov
add
add
and
fisttpl
and
iret
jb
inc
mov
pop
popf
das
rolb
mov
sahf
and
idiv
lods
std
data16
add
cmpsl
inc
and
clc
xor
icebp
cmp
cld
hlt
pop
je
stc
fs
mov
enter
andb
pop
xor
lds
fcoms
push
ret
leave
cld
call
insl
ret
ret
push
fsts
ljmp
adc
ret
mov
xchg
and
jo
pop
shld
cmp
pop
cltd
sub
lock
dec
jno
mov
nop
clc
pop
in
xchg
decl
sbb
push
rcrl
pop
jmp
out
xchg
xchg
je
jae
sbb
push
xor
cltd
insl
or
test
xor
lds
mov
lds
sub
ja
das
fimuls
cltd
xchg
inc
xchg
mov
fwait
mov
outsb
push
pop
push
adc
mov
call
jns
outsb
mov
xchg
neg
push
mov
push
int
xor
pop
jge
jns
movsl
push
sub
lahf
cmp
dec
das
adc
jne
mov
fists
and
jmp
ror
push
orl
lds
in
mov
stos
push
push
nop
and
xchg
movsb
insb
sbb
hlt
jnp
pop
xlat
jle
pop
clc
in
ja
pusha
idiv
cmp
fwait
jnp
ret
xor
inc
fisubl
jae
cs
popf
in
pop
fnstcw
outsl
out
sbb
mov
imul
push
xchg
imul
jo
cmp
add
repnz
fxtract
xor
pusha
arpl
or
push
cltd
shlb
leave
sub
int3
xchg
cli
xor
mov
jns
lds
adc
shlb
dec
and
icebp
sbb
mov
icebp
jge
mov
sbb
cmp
pop
js
mov
jge
inc
popa
cmc
push
mov
dec
xor
ja,pn
lahf
aas
fsubl
push
mov
jno
xchg
jb
cmpsb
dec
mov
ror
add
int3
push
insb
jae
out
repz
xor
scas
in
ds
fwait
and
sarl
adc
add
jnp
xor
in
lahf
pusha
pop
pop
xchg
js
xor
outsl
lcall
es
lcall
mov
mov
jp
imul
mov
push
cs
gs
push
add
int
dec
mov
imull
jbe
and
icebp
xchg
mov
sbb
lods
mov
test
dec
insl
sbbb
jmp
loop
xor
xor
adc
pop
and
lea
cmp
in
ja
out
fsubrl
xor
mov
cmp
ja
or
mov
sbb
in
and
cmpsb
mov
imul
inc
sbb
mov
leave
lods
nop
and
mov
inc
xlat
push
fnstsw
in
roll
sti
stc
sbb
fcoml
loopne
mov
dec
add
inc
es
iret
ffreep
push
repz
bound
xchg
std
xchg
call
cmp
cs
pop
or
out
out
ret
jmp
fldcw
xor
mov
mov
jb
into
xchg
dec
cwtl
xor
jecxz
loopne
jecxz
jle
push
and
call
js
cs
cmp
sbbl
pop
lahf
jns
jb
rolb
cli
inc
rol
das
lahf
repnz
loope
shlb
pop
sub
xchg
sub
cmp
or
cmp
mulb
sub
push
pop
pop
mov
cld
mov
fdivl
fistl
pop
dec
inc
inc
shlb
push
aam
xor
pop
mov
outsl
insl
stos
xor
xchg
cwtl
mov
cld
popa
repz
fildll
mov
je
test
add
out
add
cld
cltd
pusha
movsl
xchg
test
or
arpl
add
shrl
mov
clc
pop
sub
xchg
jp
sbb
aaa
pop
int
mov
out
ljmp
push
dec
inc
jmp
xor
arpl
xchg
jle
xor
fwait
mov
xchg
mov
ja
test
mov
ja
scas
out
dec
lahf
cmp
leave
or
mov
fwait
jecxz
or
sti
adc
add
cmpsl
push
test
jbe
add
jns
ja
in
and
xchg
inc
in
cwtl
mov
push
aas
mov
lret
cmpsb
jl
jp
int
mov
mov
mov
mov
jae
jne
andb
adc
or
ss
adcl
sahf
lret
sbb
sbb
adc
int3
enter
cmp
rclb
adc
fstps
clc
jnp
test
jle
bound
fisttps
iret
cli
lea
scas
sub
inc
in
shll
sub
fists
popf
adc
les
out
pop
push
fisubl
cs
insb
sbb
sbb
shll
push
pop
scas
jecxz
lea
arpl
es
lock
dec
popa
leavew
rol
pop
hlt
jg
cwtl
arpl
dec
xor
cld
jo
pop
jae
or
or
iret
es
faddp
cmp
lds
sbb
jns
sbb
aas
cmp
cld
mov
cmp
pop
adc
fistps
cltd
jge
daa
inc
mov
cmp
pop
and
jl
imul
push
cwtl
insl
je
repz
jo
mov
lahf
pop
out
push
sbb
push
mov
inc
and
jmp
popf
push
test
loop
pop
mov
push
loope
sub
pop
cmp
ds
mov
jne
pop
dec
and
adcb
cld
insb
sub
insl
jnp
dec
add
scas
pop
mov
js
fwait
pop
scas
push
gs
and
add
lret
outsb
sbb
adc
cmp
idivb
scas
fbstp
push
or
xor
and
call
subb
pop
or
daa
loopne
lret
sub
imul
sbb
cmp
sahf
int3
repz
mov
xor
rep
out
loop
push
and
fs
xor
insl
xlat
rorb
cmp
cmpsl
mov
add
icebp
sub
xor
out
test
adc
or
bound
jo
mov
test
xor
mov
adc
push
cmpsl
adc
imul
fs
pushw
jp,pn
ja
testl
jg
sub
in
cmp
jnp
test
in
or
cmp
sbb
loopne
xchg
inc
cmp
dec
fldcw
cmpb
ljmp
xchg
shlb
cmp
jmp
stos
adc
push
add
lds
aad
popf
les
xchg
sub
jb
sbbl
and
pop
mov
lea
pop
mov
mov
mov
mov
dec
jb
imul
adc
dec
mov
das
jle
ret
mov
cwtl
mov
xor
loopne
xor
subb
mov
cmpsb
cwtl
testb
inc
mov
call
cld
dec
sub
cmp
push
lret
shl
ss
lahf
pop
outsb
into
push
rolb
mov
mov
out
and
xchg
and
dec
cld
pop
fwait
xchg
xlat
shlb
mov
adcb
xor
cmpsl
mov
inc
push
test
bound
jmp
test
movsl
xor
adc
repz
xchg
or
xchg
mov
dec
adc
js
sti
stos
roll
dec
xchg
xchg
xchg
and
push
sub
xlat
lcall
mov
or
les
xchg
add
divb
inc
ja
mov
dec
xchg
xchg
pop
inc
mov
jmp
fwait
adc
or
sahf
psrlw
ret
out
push
mov
bound
and
in
mov
mov
cs
mov
test
mov
loopne
jp
cmp
mov
fcompl
cmc
jb
mov
push
mov
loop
xchg
jne
frstpm(287
mov
pop
jbe
push
mov
out
jmp
imul
lcall
fmuls
fucomi
add
dec
loope
cmp
jmp
repnz
jnp
outsb
or
pop
pop
in
add
inc
iret
pop
movsb
lock
mov
inc
lock
loopne
push
data16
mov
pop
stc
mov
insl
push
sahf
ficompl
cmp
xchg
ret
nop
rcrl
inc
imul
adc
sub
sarb
cs
leave
dec
test
andb
inc
push
ret
inc
aas
dec
aaa
pop
cwtl
lds
scas
call
add
hlt
sbbl
add
data16
ret
mov
shrl
lods
lcall
stc
aaa
inc
push
mov
jbe
pop
mov
fwait
mov
daa
inc
mulb
cmp
lahf
ss
in
jl
movsl
into
dec
and
push
jnp
lret
xor
in
or
lock
test
jl
ret
jae
cmpsb
push
push
test
test
daa
pop
testl
mov
sub
push
and
xor
movsl
enter
hlt
xchg
pop
xchg
ljmp
xor
add
mov
xor
push
fcom
jb
sbb
stc
jp
xor
inc
pop
sub
mov
fmull
js
mov
mov
sub
pop
and
jg
mov
cmpsl
mov
adc
and
mov
or
nop
int
int3
mov
add
cmp
out
xchg
lret
roll
xor
nop
pop
sahf
outsl
push
orb
outsl
lds
ss
lods
adc
add
jbe
cld
mov
and
cmp
bound
out
cli
and
shlb
lods
push
lea
xchg
pop
cmp
cmc
dec
out
mov
pop
in
adcb
imul
adc
call
push
xchg
paddusb
pop
jl
xlat
out
subb
cmp
in
cmpsl
fldt
sti
push
in
push
sub
ljmp
dec
or
mov
dec
rcrl
pusha
xor
rep
fsubrp
xchg
addl
iret
out
cmp
jle
sub
cmp
minps
outsl
fmuls
jmp
jne
cs
add
aad
rclb
xor
jb
push
test
mov
sub
daa
jmp
xchg
sub
pushl
mov
sbb
addl
jecxz
pop
mov
add
inc
test
das
pop
loopne
mov
dec
loope
and
aad
shrl
dec
dec
test
scas
std
pop
call
cli
cmpsl
inc
stos
mov
xchg
out
repz
rcr
cld
jne
sbb
fiaddl
push
mov
jno
lock
out
enter
pop
rcrb
cmpsl
sub
push
mov
es
sbb
dec
idiv
mov
ljmp
xchg
lods
sarb
adc
in
dec
or
inc
mov
push
add
push
cltd
into
mov
imul
js
pop
clc
sarb
xchg
sbb
pop
sub
push
stos
mov
std
out
mov
xchg
fdivp
bound
and
clc
out
xor
mov
inc
leave
mov
or
clc
dec
pop
ficompl
ja
cmp
test
mov
inc
fs
inc
sbbl
decb
fucomp
ds
xor
inc
bound
dec
dec
jns
je
in
inc
dec
xchg
jecxz
outsl
mov
lret
and
cmp
movsb
enter
pop
sbb
pop
push
dec
mov
xchg
xorps
sub
jne
lcall
je
sbb
fisubrl
cmp
out
mov
sub
lock
test
pop
adc
insb
pop
out
jnp
sbb
in
loop
pusha
enter
mov
loop
pop
jl
fs
sti
ss
push
gs
popf
bound
push
inc
in
int3
mov
xchg
sbb
mov
sbb
imul
push
adc
and
lock
xchg
shll
hlt
adc
imul
sub
or
adc
popf
or
push
push
das
dec
pop
sub
mov
mov
add
scas
dec
fimuls
inc
push
or
stos
jb
movsb
test
pop
push
xlat
insb
xchg
jbe
adc
das
out
push
daa
inc
mov
push
jno
bound
jl
mov
dec
xchg
xchg
or
pop
pop
jle
subl
setg
xchg
test
inc
incb
cmpsb
ror
dec
in
imul
hlt
and
push
ds
sub
in
sub
ja
cmp
sbb
repnz
jp
rcrl
push
jnp
pop
dec
sbb
jmp
jnp
pop
mov
cwtl
js
test
pop
lods
xchg
fcompl
shlb
sub
push
or
repnz
mov
rcl
mov
sub
aas
add
mov
pop
and
cmc
cmp
or
sbb
sub
mull
or
mov
cmpsl
in
sahf
adc
mov
cwtl
gs
subb
outsl
movsb
lods
and
ss
mov
and
adc
ret
push
test
fcomps
dec
arpl
push
imul
ss
jp
into
aad
into
rorb
xor
lods
mov
adc
popf
dec
imul
mov
xchg
data16
pop
lods
inc
into
cmp
and
jbe
mov
adc
sti
push
cld
out
decb
scas
gs
lahf
loopne
mov
dec
push
roll
xchg
mov
add
es
inc
inc
sbb
sbb
ficoml
adc
xor
ret
repnz
jmp
mov
nop
dec
int3
sarl
ror
adc
test
je
data16
jecxz
adc
in
lea
lea
sbb
mov
mov
sbb
mov
push
inc
ficompl
std
das
cmp
xchg
push
lods
std
and
push
xchg
sarl
sub
push
fcompl
add
lahf
cmpsl
inc
xor
push
icebp
cwtl
outsb
xor
mov
xchg
lcall
jp
lock
pop
adc
lods
hlt
xchg
shrb
mov
aam
mov
inc
es
adc
insl
pop
push
pop
dec
repnz
xchg
push
test
mov
scas
bound
cs
aaa
dec
xlat
and
faddl
dec
add
mov
jecxz
popf
mov
test
xchg
pop
inc
fstpl
jge
xchg
push
cmp
xor
popf
sar
push
inc
pop
into
xor
lahf
dec
push
out
adc
into
xchg
and
xor
call
add
sti
fsincos
xor
adc
mov
or
loope
test
pop
add
inc
fisttpl
popa
sbb
shll
or
fisubrs
fwait
jo
jmp
in
lds
clc
rorl
into
outsb
cmpl
mov
xchg
xor
sbb
sti
out
dec
addr16
jp
sub
out
out
mov
add
jne
jne
mov
xchg
fists
lret
cld
jmp
inc
mov
leave
mov
out
fwait
les
rorl
xor
push
cmp
and
xchg
insb
enter
pop
hlt
jle
sub
in
and
sub
iret
pop
fucomp
ret
pusha
pop
mov
cmove
rclb
jae
lods
pop
push
sub
popf
mov
cld
mov
imul
fidivrl
sub
sbb
or
int3
adc
push
push
lret
mov
inc
gs
leave
cmp
pusha
and
arpl
or
xor
cmp
iret
or
jl
int3
cmp
pop
jb
lods
aas
fld
sbb
imul
roll
cmp
push
movsb
bts
jbe
inc
jmp
and
sbb
aam
daa
inc
or
cmp
lds
add
jl
lcall
inc
out
xor
lcall
push
xchg
addr16
test
adc
arpl
push
sbb
pop
jne
stos
push
inc
dec
loope
jo
sub
loope
cmp
into
ds
cmp
stos
std
and
bound
dec
and
scas
sbb
cmp
clc
push
mov
mov
jns
test
cmc
scas
lcall
fsubl
sub
outsb
inc
cli
outsl
adc
int
or
jmp
jae
mov
push
mov
pop
add
push
mov
neg
pop
sub
cmp
fs
stos
shrl
mov
sbb
sub
sbb
outsl
subl
stc
outsl
loope
fs
mov
pop
rorl
into
or
and
stc
out
jl
cli
mov
movsb
cmp
in
or
push
test
fnstenv
push
sub
and
adc
stos
push
mov
sub
adc
loopne
add
xor
xchg
je,pn
sub
lret
mov
xlat
xlat
shrb
mov
jge
mov
jno
lcall
jmp
enter
add
into
test
repz
xchg
or
jnp
sbb
sarl
pop
fldenv
ret
push
mov
outsb
inc
lcall
push
push
aad
jne
nop
and
aas
aas
outsl
sub
insl
sarl
dec
je
inc
je
ja
jecxz
pop
in
out
in
icebp
xchg
arpl
cmc
dec
mov
mov
ja
mov
adc
in
fcomi
aaa
mov
push
inc
popa
popf
xor
daa
mov
sbb
jbe
pushf
xor
mov
pushf
dec
ror
sub
std
test
cmp
cmpsl
inc
inc
xchg
outsl
and
cld
lret
fwait
push
lret
mov
lds
mov
call
xor
lret
lea
sub
jbe
ret
xchg
push
cli
sbb
push
dec
in
repz
adc
adc
jnp
lods
cmp
dec
mov
pop
jecxz
and
ja
xchg
movq
add
pop
into
test
jno
mov
jle
push
pop
jo
ffree
lret
inc
adc
rcrl
xchg
inc
rcll
subps
or
jbe
xor
mov
pop
jge
bound
or
scas
xor
cmp
out
fwait
in
adc
xor
sub
in
test
jns
ja
aad
dec
imul
inc
jp
sbb
mov
lahf
cmp
add
adc
and
repnz
mov
in
mov
xchg
sbb
xchg
mov
mov
jp
mov
mov
mov
orl
mov
scas
lods
fbstp
dec
sbb
enter
lret
sbbl
out
push
mov
mov
mov
push
add
cwtl
stos
xchg
add
and
mov
enter
xor
sti
enter
ljmp
sti
push
pop
ljmp
jae
mov
push
jmp
enter
lods
mov
ljmp
xchg
enter
les
hlt
scas
outsl
pop
fcoml
fwait
adc
jbe
repnz
into
dec
leave
scas
sub
stos
pop
dec
arpl
repz
inc
jno
push
or
mov
dec
aaa
push
push
dec
or
pop
jne
sub
mov
inc
adc
lds
lret
scas
or
stos
and
dec
cmp
push
lods
movsb
lcall
jbe
loop
jge
aas
into
sbb
fstpl
xchg
mov
popa
jl
push
lret
xor
mov
syscall
lret
bound
push
imul
push
fnsave
inc
pop
rep
cmpsb
fstps
fsubr
cmp
pop
enter
pop
mov
mov
loope
iret
dec
sub
push
sarb
aas
sbb
in
dec
shll
vpaddq
mov
insl
mov
jge
xor
cmpsb
dec
pop
fcmovbe
nop
js
fmuls
lcall
out
dec
nop
cmp
xchg
sahf
outsb
test
pop
adc
test
out
xchg
fimull
pop
stos
xor
negb
cs
adc
mov
pop
mov
mull
setne
in
lock
repz
mov
sub
cmpsb
push
int3
andb
test
stos
in
stc
es
out
fs
in
adc
mov
fcoms
cs
cli
mov
dec
xchg
cmp
shll
into
cld
dec
in
into
xor
notl
jle
shrl
xor
cmpsl
add
insb
or
dec
mov
repnz
push
mov
call
addr16
xchg
test
loopne
xor
inc
test
jnp
push
jae
repz
sbbl
fdivs
test
mov
sub
sbb
jmp
sbb
cs
icebp
aad
fiaddl
lcall
ja
push
test
jb
push
mov
jmp
sub
pop
jecxz
loopne
repnz
lea
lret
adc
orl
push
cmpb
mov
addb
inc
repnz
cli
bound
mov
loopne
dec
rcrl
icebp
testb
cwtl
loop
lahf
cmpsl
inc
xlat
mov
inc
clc
pushf
cld
idivb
or
jb
inc
lock
sub
sub
test
ret
and
fwait
aad
insl
sub
dec
or
xchg
push
popa
data16
or
sti
or
popa
outsb
int3
mov
ficomps
jo
stos
stos
dec
cltd
jae
add
mov
test
in
adc
xchg
sbb
shrl
sbb
stos
jge
mov
fstps
cs
mov
xor
mov
call
mov
xor
dec
adc
mov
mov
adc
aaa
dec
xchg
pushf
dec
test
es
sub
dec
pop
std
sbb
fwait
call
fwait
into
cmp
add
loopne,pn
out
shll
jns
aas
in
imul
sarb
mov
sbb
js
mov
in
dec
mov
andl
aas
mov
shl
dec
outsb
in
jne
shll
rcrl
ljmp
pop
je
xchg
mov
and
nop
out
push
std
sub
je
push
inc
inc
mov
and
insb
sahf
mov
sbb
enter
shlb
cltd
mov
xor
push
jge
pop
and
test
push
scas
dec
mov
xlat
or
shrl
inc
imul
xchg
pop
lret
outsl
push
popa
imul
scas
shr
push
in
pop
adc
cmpsb
mov
jmp
lahf
std
hlt
imul
loop
loope
inc
inc
je
rorl
adc
adc
or
mov
int3
adc
pop
pop
mov
pop
rol
sub
icebp
scas
jmp
les
cmp
mov
movsb
and
adc
scas
notl
sbb
inc
daa
inc
xor
jno
mov
jl
fidivs
dec
fildll
sahf
xor
push
add
push
cmp
inc
test
test
mov
movsl
mov
pop
out
and
and
mov
in
pop
repz
loope
push
dec
sub
das
jecxz
enter
sqrtps
movsl
in
loop
pusha
jge
or
shr
invd
sbb
adc
xor
adc
jle
mov
add
mov
lcall
arpl
stc
nop
sub
cmpsl
outsb
or
cmc
adc
subl
mov
mov
mov
and
iret
int
jns
sub
xchg
push
loop
sbb
xlat
hlt
rcrl
out
push
sub
sahf
sti
ret
sub
jge
loop
or
stc
fstpl
sub
adc
mov
cmp
dec
rclb
fs
cli
lock
outsl
xor
inc
add
mov
and
into
fistpll
cmc
addr16
xor
pop
repnz
popa
stos
fsts
push
je
imul
cmc
ret
sbb
stc
mov
xlat
loop
jmp
mov
mov
adc
adc
mov
shll
sti
loopne
mov
inc
cwtl
cmp
fnstcw
jecxz
and
repz
or
inc
cmp
jae
sub
push
lret
pop
xlat
pushf
les
jmp
fdivrl
or
aas
lods
in
jb
push
add
ss
je
xchg
out
jecxz
lods
xchg
cmc
icebp
lds
jmp
mov
repnz
mov
and
and
push
pushf
jb
inc
jp
inc
outsl
enter
shrl
fldpi
and
mov
imul
test
cli
std
notl
cwtl
popf
inc
pop
cmpsl
inc
out
jecxz
pop
shlb
repz
and
mov
and
cmp
add
pop
or
inc
shlb
push
mov
call
push
es
sbb
scas
es
jecxz
xchg
xchg
adc
adc
cli
cmp
les
mov
mov
push
mov
lds
mov
xchg
mov
mov
cmp
push
loopne
fstp
adc
mov
mov
inc
loop
dec
aad
roll
lds
leave
arpl
cmp
hlt
xchg
cli
and
xchg
pushl
xor
mov
or
xchg
xor
jle
mov
push
mov
test
push
mov
fsts
test
clc
or
movsb
push
fwait
std
incl
add
dec
add
out
mov
bound
pop
xor
in
jne
xchg
pop
jmp
xor
sub
sub
nop
in
jp
frstor
mov
xchg
mov
imul
mov
dec
jge
mov
cmc
push
fcomip
jl
xchg
cmp
jno
mov
mov
xorl
out
or
or
enter
lea
and
loope
or
fnstsw
test
in
aas
push
pusha
xor
mov
xor
mov
and
hlt
pop
pop
inc
jmp
daa
xchg
out
jae
xchg
pop
push
jno
mov
jmp
push
call
outsl
mov
sbb
mov
imul
scas
xor
cs
adc
cmp
cmp
inc
leave
popf
mov
hlt
inc
iret
cwtl
arpl
mov
or
test
or
or
stos
add
bound
jmp
sbb
shrb
scas
enter
mov
cmp
dec
or
mov
add
and
daa
inc
or
cmp
and
jno
mov
js
dec
out
push
ljmp
jo
mov
lahf
sbb
push
rdpmc
jl
adc
xor
adc
pushf
jl
fbstp
in
pop
lock
loopne
cmp
xor
add
test
sub
adc
push
xor
movsl
jmp
lcall
sbb
push
mov
inc
inc
in
mov
mov
inc
mov
sbb
pop
test
push
lcall
and
movsb
icebp
sbb
fs
jmp
adc
pop
add
les
mov
imul
adc
movl
sub
pop
sub
sahf
mull
stos
add
rep
mov
push
inc
sbb
sti
cmp
mov
fs
xchg
lea
fs
into
adc
fs
cmp
or
out
push
sub
and
xor
push
addr16
daa
sub
mov
xor
ret
cmc
mov
pop
orb
imul
cmp
data16
lods
loope
ja
aas
dec
xchg
xlat
and
mov
xor
mov
mov
loop
pop
gs
decl
in
fiadds
sbb
jae
push
repz
inc
xchg
push
loop
sbb
or
out
repnz
and
pusha
subl
lock
aad
shll
nop
mov
or
dec
dec
insb
jb
stc
addr16
fstps
sub
jecxz
mov
scas
lea
inc
popa
call
mov
inc
mov
roll
xchg
mov
xorb
outsl
sub
jae
inc
jge
into
das
mov
or
mov
idivb
sarl
xor
cwtl
pop
mov
jl
nop
ss
hlt
adc
lret
add
mov
jg
pop
aam
pop
sub
sarb
add
nop
xchg
xchg
pop
lahf
das
ret
inc
push
shlb
mov
test
jo
push
sbb
insl
aaa
jmp
mov
cmp
mov
outsl
cli
pop
mov
pushf
jb
add
shll
cltd
loope
jne
rdmsr
add
mov
push
sar
notl
xchg
jmp
sbb
xorl
stos
pop
mov
out
lahf
push
mov
inc
in
cmp
xor
push
xor
addr16
dec
cmpsl
xor
mov
loopne
sbb
movsb
test
cmp
rorb
cltd
inc
aas
repnz
fwait
sub
jne
jo
dec
add
fs
out
int3
hlt
bound
add
cmp
js
repnz
outsb
jne
add
pop
out
andl
jae
cmp
scas
xchg
sub
jne
xor
mov
fisttps
jecxz
xchg
or
add
sub
pop
addl
pop
sub
mov
pop
lock
ljmp
insb
je
cmpsl
jnp
cld
std
jle
ss
in
adc
iret
xchg
jle
ret
lcall
orb
jl
jae
insb
fstl
xor
sbbl
jcxz
fimull
jb
int
aaa
sbb
lock
imul
lods
scas
cwtl
jmp
push
jae
lea
and
sarb
popl
leave
adc
xchg
hlt
mov
imul
enter
repnz
aaa
xchg
dec
loope
popa
popa
jne
inc
mov
in
pop
sbb
xor
cmp
inc
rorb
jle
pop
adc
cmp
outsl
mov
push
bound
jge
out
sbb
push
aam
loopne
popf
jl
jb
dec
mov
mov
xor
push
jp
lahf
aaa
movsl
mov
test
ds
inc
or
lock
mov
enter
pop
jno
adc
push
inc
loope
les
sub
into
mov
or
movsl
repnz
imul
call
mov
sbb
pusha
add
cmp
hlt
mov
xchg
pop
dec
mov
js
neg
pop
daa
xchg
push
push
xorl
dec
loopne
sub
push
outsb
rcll
add
cmp
arpl
mov
jl
mov
nop
xor
and
leave
push
sbb
inc
int
test
sub
aas
arpl
pusha
pushf
or
adc
rorl
les
inc
xchg
pop
sahf
inc
sub
xor
icebp
outsl
call
arpl
ljmp
add
adc
jg
cmp
int
out
pop
dec
cli
push
push
mov
cmp
xchg
imul
movsl
lods
sbb
cmc
outsb
xorb
fidivrs
adc
mov
imul
enter
fdivl
mov
cld
and
pusha
icebp
mov
mov
sub
cld
std
sub
loopne
orl
pop
or
sub
jns
aaa
xor
xchg
adc
hlt
adc
es
aam
jns
jge
sbb
mov
cs
arpl
aad
bound
test
outsb
jb
sbb
dec
push
lods
sub
xor
sub
xchg
jbe
sti
int
lea
out
mov
pop
les
adc
dec
fnstsw
fldt
pop
cmc
inc
jge
pushf
inc
cwtl
lret
les
xchg
or
call
inc
mov
sbbl
int3
notb
push
std
inc
loopne
cwtl
adc
inc
mov
lret
push
fdivr
ja
sbb
je
cmp
movl
mov
dec
dec
test
aam
stos
xchg
ret
shrb
push
loop
adc
xlat
push
xchg
nop
leave
sub
loopne
shll
cmp
in
and
jbe
popa
mov
sti
and
xor
sbb
test
sbb
fisttpl
xchg
push
dec
icebp
frstor
sar
xor
adc
mov
lock
cmpsl
loope
dec
shl
add
pushf
push
daa
test
pushl
fmuls
xor
adc
and
bound
and
push
dec
aaa
lods
and
shll
fwait
pop
pop
push
adc
pusha
add
int3
out
outsb
pop
andl
int
in
xchg
mov
clc
xor
punpckldq
mov
or
jp
xlat
mov
mov
xor
pop
xor
mov
mov
fildll
dec
pop
xchg
loopne
fucompp
movsb
into
sub
mov
sub
mov
stos
out
pop
xor
and
or
jnp
inc
insl
jle
fcompl
in
inc
mov
push
cld
iret
repnz
ret
lock
pop
ljmp
xchg
popf
dec
push
in
inc
out
push
mov
sbb
incb
scas
sti
push
mov
push
scas
adc
daa
push
mov
loop
fcmove
mov
insb
hlt
xlat
sub
xor
inc
jge
outsb
or
lahf
inc
aaa
push
or
or
add
jmp
add
test
test
loopne
movsl
jbe
scas
xchg
and
sarb
mov
xorl
ljmp
dec
xchg
daa
ds
cltd
cmp
or
jl
jnp
dec
sub
inc
push
mov
mov
jo
push
mov
push
mov
adc
or
inc
cwtl
push
add
aad
pop
enter
pop
mov
test
sbb
jecxz
mov
jecxz
sbb
aad
std
js,pt
add
and
mov
xchg
sub
jne
mov
cld
add
int
xor
out
insl
insl
pop
jbe
mov
pop
cmpsb
test
push
fidivl
fdivr
mov
fsubrl
adc
rclb
xlat
jg
pushf
pushf
mov
ret
or
push
mov
das
mull
xor
int
adc
std
negl
jle
lret
fcmovnb
and
xchg
mov
inc
push
sahf
in
mov
orb
outsl
fsubrp
pop
loop
mov
stc
add
mov
leave
pop
clc
adc
mov
cmpl
sbb
push
into
xor
into
lea
push
mov
cmc
mov
mov
int
lret
imul
xchg
mov
lods
scas
sub
js
lahf
xorl
movsl
fldenv
xchg
or
and
sbb
loopne
sbb
dec
mov
jne
fabs
or
repz
in
pop
xchg
fsub
iret
sbb
jg
aam
movsl
or
or
shlb
lds
popf
mov
lods
leave
ret
aad
push
xchg
nop
imul
jb
insb
sub
fidivrs
jecxz
test
imul
call
das
pop
dec
mov
cmp
lret
fcmovnu
jo
pop
sub
negl
das
jbe
aas
mov
push
out
and
dec
mov
pop
stc
repnz
cld
mov
cmpsl
cmp
ds
mov
mov
lret
jecxz
sbb
mov
popa
lock
mov
data16
movsl
rcrb
inc
sub
lret
aam
or
pop
dec
sub
insl
leave
dec
es
aam
hlt
xchg
iret
cld
sub
ret
lods
dec
shlb
mov
jge
sub
pop
add
fs
dec
das
mov
push
jbe
sub
add
insl
mov
sbb
or
add
shll
out
gs
jecxz
iret
movsb
and
call
dec
xor
cmp
fdivrl
xor
fidivs
cmp
xchg
xchg
sbb
cs
fwait
movsb
add
pusha
dec
dec
sub
sbb
out
push
mov
fildl
lcall
bound
jno
ficomps
and
mov
nop
mov
pop
pop
icebp
addr16
nop
clc
jp
loop
mov
push
mov
lahf
xchg
sbb
xor
jne
shll
inc
jne
fisttps
jno
mov
or
fwait
cmp
adc
out
jl
sub
mov
xchg
push
aas
jle
stos
rolb
mov
dec
jns
jnp
dec
sbb
jne
in
fisubs
iret
push
out
ret
stc
pop
std
fiadds
dec
dec
call
push
mov
cli
pop
mov
mov
cwtl
stos
xchg
jnp
dec
sbb
loopne
imul
cld
push
add
adc
xor
mov
xor
aad
hlt
and
arpl
add
xchg
push
push
cmovle
or
pop
add
push
int3
mov
push
fidivrs
jae
inc
mulb
rcrb
scas
gs
jg
inc
das
cmp
dec
push
add
lret
jge
and
pop
or
cmp
mov
jno
mov
inc
dec
fwait
sub
xor
mov
ljmp
mov
int3
test
aam
aad
daa
sbb
in
mov
das
iret
pop
out
mov
lea
cmpsl
loope
mov
cmp
scas
movsl
add
int3
mov
dec
cmp
rcrl
jmp
sub
mov
xor
add
pop
popf
bound
lock
and
lds
xor
mov
xor
imul
push
adc
out
jns
jg
lret
push
mov
cmp
mov
and
inc
scas
ljmp
addr16
sub
cmp
lret
cmp
mov
push
int3
sbb
pop
jo
dec
cmpsl
and
mov
test
lds
adcl
push
jp
sub
push
or
cmpsb
fdivrs
sub
sbb
out
mov
jo
cmp
fisttps
xlat
test
imul
xor
loope
fstl
adc
adc
add
jecxz
test
fcmovne
mov
sbb
xlat
ficomps
mov
lcall
sti
iret
fsts
inc
pop
xchg
and
cmp
test
inc
in
movsl
fstps
fldl
les
push
in
fwait
xchg
fwait
sbb
sbb
mov
in
pop
or
and
jmp
test
adc
aad
mov
nop
inc
rcll
pop
repz
ds
je
mov
cmp
add
lea
inc
call
out
loope
mov
sbb
dec
mov
push
fisttpl
or
inc
mov
movb
ss
push
aaa
cld
mov
pop
das
shlb
rcrl
cmpsl
and
in
std
xchg
std
jmp
mov
cmpsl
cmp
das
mov
jns
cmp
push
pop
mov
mov
scas
stos
lock
imul
and
aam
mov
out
sub
lock
mov
xchg
dec
iret
sar
push
mov
ljmp
inc
lods
mov
arpl
and
sbb
daa
ud1
cwtd
xchg
dec
mov
out
push
in
jbe
fnsave
lret
fs
sahf
sbb
shlb
pop
stos
pusha
pop
jnp
add
enter
push
xchg
inc
push
mov
xor
or
pushf
xor
sti
or
and
shrb
or
sbb
add
fwait
mov
ret
ds
mov
xchg
out
sub
sbb
rcll
mov
in
call
mov
cld
adc
sbb
gs
cwtl
xlat
jp
mov
xchg
mov
push
imul
xor
mov
sub
shr
xchg
push
adc
out
jp
ljmp
or
cmp
mov
mov
clc
jle
add
pusha
mov
and
insl
jecxz
pop
xor
mov
jae
xchg
push
jge
jmp
lcall
inc
in
mov
fs
jne
sar
pop
sbb
xchg
pop
imul
scas
rorl
mov
xchg
mov
mov
jbe
insl
mov
movsl
inc
or
or
xchg
cltd
fdivl
into
push
aad
cmp
test
stos
ds
movsl
lock
and
vmovdqu
fcmovnbe
push
scas
inc
inc
repz
mov
cmp
push
movsb
fcoml
push
dec
dec
mov
std
sub
and
out
sbb
cmp
popf
fidivl
pop
add
dec
or
push
jbe
xorl
inc
sbb
push
pop
sbb
lock
pop
push
lahf
mov
inc
mov
mov
jmp
push
in
mov
cmp
pop
shrl
add
mov
sub
repnz
cmp
mov
mull
addr16
adc
call
test
push
add
in
xchg
xor
sahf
dec
or
pop
les
mov
lcall
nop
fcoml
loope
and
cld
adc
lret
jg
incl
mov
xchg
repz
push
and
call
int
pushf
test
negl
mov
rorl
mov
lock
rorb
sub
sbb
loop
roll
stc
jo
dec
fists
adc
xchg
fdiv
aaa
or
sbb
inc
cli
out
test
cmp
les
inc
inc
popf
into
dec
mov
mov
pop
cld
inc
out
jo
or
adc
sbb
add
add
data16
outsb
lods
jge
push
mov
mov
sbb
test
cmp
push
in
sti
jle
mov
sub
loopne
mov
inc
mull
pop
les
ds
lds
add
cmc
daa
imul
outsl
pop
mov
in
pushf
sbb
mov
jnp
imull
jae
pusha
aad
outsb
loopne
and
add
enter
mov
jno
mov
popa
je
sbb
movb
ret
call
lods
in
sbb
adc
mov
fstpt
js
adc
addl
aam
mov
mov
stos
insl
shl
lea
std
cmp
fcomps
cmp
adc
push
cmc
mov
clc
out
mov
roll
mov
fldcw
les
je
shr
sub
aam
ret
jge
xchg
lods
clc
mov
dec
lret
xchg
dec
out
insl
ljmp
stc
lods
and
sarb
mov
ret
test
prefetcht1
add
xchg
cltd
mov
lret
dec
mov
push
fst
jle
clc
jecxz
mov
jecxz
jae
lret
cmp
shll
test
arpl
sub
push
mov
mov
cmp
mov
dec
xor
insl
add
xchg
sub
test
pop
cwtl
ja
xor
inc
fwait
push
test
jge
fwait
call
inc
lahf
add
shl
cmp
or
bound
pop
jns
pop
sub
movsb
xchg
aad
stos
xor
shrd
mov
shll
addr16
and
jp
adc
test
or
dec
rclb
jecxz,pn
mov
or
mov
pop
jmp
push
jno
addl
out
mov
icebp
jmp
or
mov
stos
mov
in
and
es
and
insb
jnp
stos
repz
subl
cmp
iret
punpcklbw
ret
adc
int
inc
pop
push
inc
push
inc
mov
out
mov
arpl
inc
xchg
sub
std
sbb
pop
fisubrs
or
push
repnz
popl
test
fistpl
leave
lock
xchg
and
push
lea
or
inc
into
int3
xchg
test
pop
aam
das
faddp
mov
lds
clc
shl
and
and
dec
and
jo
sbb
xchg
push
sahf
jbe
sti
push
jge
ljmp
cmp
cmp
cmp
les
mov
jns
or
pop
insl
loope
adcb
jb
lods
lahf
mov
fcoml
xchg
adc
push
lea
imul
in
mov
enter
pop
insl
add
lods
push
loope
pop
subb
lahf
cmp
jge
loope,pt
shld
mov
add
mov
and
sbb
add
jnp
xor
add
pop
jmp
mov
pop
and
lcall
ss
loop
sub
lock
adc
movsl
xlat
sub
mov
int
mov
push
mov
add
jo
daa
movsl
xchg
int
mov
sub
test
lret
aam
out
sbb
in
or
push
shl
sbbb
outsl
jnp
ret
loop
xor
fs
hlt
adc
dec
and
mov
daa
cmp
mov
std
out
jl
cli
and
xor
loopne
cmp
jge
or
test
sub
pop
pop
sbb
adc
in
imul
sahf
jg
scas
lret
fs
mov
mov
xlat
pop
push
adc
jo
add
popa
pop
repz
aad
ret
sti
sub
pop
aas
xor
loopne
pop
call
inc
or
inc
arpl
jge
cmpl
xchg
and
ja
push
int
cmp
cmp
and
repnz
rorl
mov
jmp
jo
cs
mov
aad
ficoml
addr16
jb
sahf
add
dec
dec
je
leave
pop
jecxz
or
negb
call
insb
jnp
mov
cmpsl
sbb
insb
mov
push
fldt
pop
pop
push
mov
inc
add
inc
das
adc
mov
jne
push
and
fcoms
mulb
jecxz
loope
hlt
cwtl
pushl
inc
cmpsl
cmp
adc
icebp
daa
enter
fstl
lret
xor
mov
fs
sbb
pop
scas
sub
ret
out
rclb
fs
aam
sbb
es
sub
in
sub
sti
cli
xchg
mov
or
lods
nop
xor
mov
jb
mull
dec
push
inc
emms
adc
cltd
hlt
loop
inc
add
mov
aad
push
jb
fstp
incb
sti
clc
push
cmpsl
pushf
xchg
cmp
jle
rorl
jne
pop
rcll
stos
push
dec
gs
mov
lods
xchg
movsb
cmpsl
adc
xchg
cmp
xor
xchg
jns
sub
mov
sub
push
test
adc
insl
dec
add
jp
xor
push
or
mov
pop
mov
push
lahf
mov
and
jmp
test
ljmp
jns
fadd
in
cltd
cmp
push
rorl
stos
adc
mov
addr16
mov
xchg
dec
mov
in
imul
jne
mov
push
test
mov
jmp
and
adc
cli
out
mov
movsb
in
push
cld
adc
stos
sub
inc
insb
mov
jle
clc
xor
xor
hlt
pusha
scas
dec
iret
outsb
mov
jg
mov
cmc
xchg
jae
xchg
test
add
xchg
dec
cmp
inc
loop
add
xchg
sbb
sbb
jge
imul
mov
xchg
cmp
mov
imul
hlt
add
sub
inc
mov
sub
mov
aaa
dec
xor
or
add
cld
xor
orb
pop
add
fisubs
call
rclb
and
add
loopne
shrl
movsb
repnz
add
scas
fnstenv
cmp
jge
and
sbb
mulb
cmp
imul
xchg
bound
mov
dec
call
enter
adc
jo
test
shlb
test
xor
testl
in
jno
cmc
enter
pop
lods
aas
sbb
add
loope
fmuls
fnstcw
xchg
add
ds
movsl
adc
shlb
cmpsb
jae
cmpb
and
nop
das
jne
int3
pop
mov
cmp
shll
adc
pop
mov
dec
adc
fsubl
sbb
adc
andb
mov
movsb
mov
mov
mov
push
sub
sub
jle
sbb
insb
sarl
mov
scas
sbb
stos
add
fidivrs
cmpb
outsl
pop
pusha
in
loop
ret
fidivs
pop
fs
sbb
adc
scas
fidivl
hlt
into
pop
cmp
imul
cli
push
shll
jmp
or
or
inc
into
adc
insl
cmc
fadd
mov
test
movsl
pop
cmp
adc
ficoml
jl
mov
clc
jle
sbb
data16
fwait
mov
and
sub
jle
mov
inc
pop
dec
sti
fdivl
gs
jmp
and
inc
adc
sahf
mov
mov
sti
imul
test
xchg
in
arpl
imul
mov
enter
out
pushf
jno
scas
jmp
mov
cs
je
stc
adc
nop
xlat
jp
aas
push
cli
fbstp
rol
mov
int
jecxz
mov
or
lea
sub
sub
lcall
mov
mov
mov
lods
outsl
inc
pop
sbb
repnz
lds
cmp
rcll
std
mov
cwtl
mov
out
mov
mov
in
lahf
sub
sub
pop
and
jp
cwtl
pop
loop
cmpsb
shrb
or
pop
jp
aam
int3
loop
fwait
js
es
fs
gs
cmp
notb
lret
icebp
fwait
ljmp
repnz
sti
test
mov
cltd
lahf
mov
lds
inc
and
cltd
sub
fwait
test
out
out
ficoms
cwtl
cltd
frstor
jae
xchg
fstpl
xor
shll
lea
push
stos
cmc
pop
mov
xchg
jmp
lahf
push
outsb
adc
dec
xor
dec
ret
mov
dec
icebp
mov
sub
push
test
bound
dec
testb
shrl
fwait
inc
aam
push
inc
daa
pop
add
push
xor
bound
data16
out
mov
xchg
imul
dec
fcomip
addr16
enter
pop
mov
stc
pusha
mov
xchg
cmpsl
jne
xchg
loopne
mov
fwait
dec
xchg
decl
sub
in
movsb
and
pop
cmpsl
pop
out
and
mov
inc
aaa
push
cmp
shrl
mov
insb
divb
jnp
sbb
jle
popa
push
in
sub
iret
int
jb
cmpsb
pop
lds
dec
imul
or
aam
popf
in
mov
add
jge
lds
scas
subl
push
scas
ljmp
adc
aaa
mov
andl
adc
cltd
inc
mov
mov
push
or
mov
int3
imul
xor
push
fimuls
call
jbe
sub
add
xchg
mov
xchg
pop
jbe
icebp
daa
jge
inc
jmp
sbb
sbb
cmp
cmp
jno
pop
pop
jl
clts
dec
push
out
out
pop
pop
xorb
clc
lahf
icebp
jecxz
push
aam
pop
test
add
inc
arpl
cmpsb
je
sbb
enter
pop
jmp
push
pop
adc
loope
jnp
sub
mov
ds
shrb
sbb
jmp
cmp
stc
popl
or
sbb
jmp
cmp
into
mov
js
cmp
js
shlb
lcall
popf
fcoml
call
outsb
and
push
adc
pop
test
jg
mov
mov
sub
xor
sbb
sub
xchg
cmp
lds
xchg
neg
mov
int3
rcll
mov
sub
pop
cs
sahf
adc
push
test
sti
adcb
push
loop
xchg
xchg
loopne
sbbb
adc
imul
mov
fsubs
fs
movsb
out
mov
lods
xor
fistps
xchg
or
cmc
lahf
incl
xor
inc
xor
cmp
adc
dec
jg
jae
inc
adc
or
mov
ret
lods
xor
mov
sub
ficompl
xchg
sub
lcall
add
sti
mov
xchg
dec
xor
gs
repz
inc
fisttpl
lea
inc
xor
push
fxtract
xchg
in
les
mov
xchg
cmpsl
arpl
cmp
data16
mov
adc
pop
pop
jmp
insb
xchg
cs
adc
mov
aas
movsl
jp
jb
sbb
dec
sbb
je
and
inc
or
or
call
ljmp
sbbl
int
pop
pop
xlat
movsb
inc
cmpsl
adc
inc
cmp
jb
pop
leave
and
ret
das
xlat
shl
push
mul
aaa
test
das
call
jne
cmp
xchg
mov
aad
cld
cld
jns
mov
mov
mov
cmc
lock
mov
sarb
xor
aam
into
cmp
sub
mov
sub
mov
mov
sub
lods
xchg
mov
pop
jle
mov
mov
lea
xor
mov
pop
test
mov
rcr
push
clc
xor
fdivr
xchg
rcll
xchg
push
sbb
ljmp
daa
pop
das
stos
in
dec
out
push
setne
dec
adcl
push
insb
repz
or
jge
xor
mov
addl
sti
scas
test
inc
inc
ja
iret
pop
dec
jmp
adc
mov
mov
mov
and
mov
test
fwait
bound
pop
data16
xor
test
fdivs
mov
add
sub
loopne
jp
cmpsb
shlb
sub
mov
js
dec
imul
sbb
call
xchg
js
outsb
add
xchg
mov
insb
mov
imulb
orb
cmp
push
jp
mov
seta
and
mov
insb
popa
add
jnp
idiv
jle
mov
andl
das
iret
sub
sub
pop
adc
xlat
inc
jg
pop
jae
mov
push
mov
adc
ret
mov
inc
loopne
in
rcll
jb
add
scas
dec
out
push
sbb
and
lahf
repnz
sahf
leave
push
adcb
push
jge
or
cmpl
insl
or
cld
leave
add
jns
push
mov
popa
mov
fisubrs
lea
rolb
scas
rcr
and
ljmp
sbb
push
mov
outsb
jbe
sbb
jge
inc
es
in
mov
cmp
xor
jl
adc
dec
dec
cmpsl
push
add
xor
adcl
lahf
adc
popa
push
cmpsl
inc
push
test
lret
outsl
mov
repnz
cmpsb
test
fmul
mov
into
in
int3
iret
add
inc
inc
repz
adc
ds
insb
adc
rcll
fs
in
pop
cmp
aad
loop
movsb
xor
mov
pop
pusha
adc
jnp
pop
mov
jp
push
in
aas
fdivr
xchg
mov
fdivrl
adc
ss
jg
cmc
inc
mov
lods
sbb
dec
iret
imul
loop
push
xor
ror
fs
mov
negl
stos
and
stos
fwait
push
mov
out
fcompl
lea
sahf
mov
cs
sti
and
sbb
stc
dec
xor
or
adc
out
cmp
loope
cmp
pop
jle
cli
mov
adc
or
xlat
or
data16
mov
js
hlt
adc
dec
adc
sub
add
or
lods
sbb
mov
sbb
pop
sub
and
in
push
jnp
sti
cmp
repnz
gs
add
loopne
push
dec
add
push
fldcw
cltd
push
les
stos
xchg
push
addr16
loope
cmpsb
lahf
shrb
pop
mov
adc
jbe
pushf
movl
adc
lea
aas
inc
pushl
jb
mov
iret
je
shl
jecxz
int3
and
adc
imul
ds
mov
aas
and
xor
dec
dec
andps
clc
lds
ljmp
loopne,pn
inc
push
sub
and
lcall
shll
out
imulb
fwait
dec
std
pop
rcrl
icebp
idivl
lods
sbb
cld
movsb
lahf
inc
lret
jge
movsb
mov
idivb
mov
push
aas
pop
and
mov
sub
inc
aam
and
mov
mov
xchg
add
mov
xor
ljmp
aas
lods
roll
pop
mov
fistl
cmpsl
lret
and
sete
add
mov
cltd
mov
test
in
test
arpl
jae
dec
clc
iret
incb
xchg
aaa
inc
rorl
mov
pop
rolb
stos
sarl
pop
xchg
jns
das
push
and
sbb
or
out
or
jp
mov
xor
dec
cwtl
mov
test
mov
inc
dec
fdivrl
mov
out
orl
bound
add
cmp
pop
out
xchg
andl
fidivrl
rcrb
cmpsb
mov
imulb
mov
cwtl
mov
jl
jp
jmp
and
dec
lret
mov
fmull
inc
cmc
jne
jecxz
addr16
cmp
pop
movsb
mov
movsl
push
hlt
jmp
subl
cmpl
out
lods
dec
sub
xchg
sarb
dec
shrl
xlat
pop
insb
int3
addr16
jnp
cltd
aad
add
dec
in
test
pusha
cmpsl
inc
push
iret
mov
xchg
pop
inc
pop
cltd
inc
mov
push
dec
mov
mov
inc
pop
xlat
inc
out
xchg
test
cmp
scas
mov
mov
pop
push
stos
xchg
mov
sti
push
movsb
mov
daa
mov
xor
in
jbe
ja
xchg
inc
xchg
mov
push
mov
xor
std
add
inc
mov
ficoms
pop
jno
shlb
scas
lahf
xchg
and
in
or
mov
les
sub
sbb
loopne
cmp
mov
cwtl
test
in
dec
xor
nop
xchg
xor
fidivrs
das
outsb
rsqrtps
and
xchg
lock
cmpsb
jp
repz
es
cs
pop
imul
loope
sub
adc
sahf
xor
ds
cli
inc
movsl
sub
outsb
mov
pop
aad
xorb
sbb
sti
lahf
xor
sbb
ficomps
insl
mov
inc
lcall
adc
sub
xor
outsb
jmp
inc
jae
adc
cmpsb
mov
pop
inc
mov
lods
mov
mov
stos
push
xor
ret
sub
sbb
lret
mov
mov
jge
mov
fstl
test
repz
mov
loop
scas
loop
add
test
xchg
pop
xchg
push
jno
ss
pop
push
fcomps
dec
cli
out
mov
cmp
stos
mov
jno
test
pushf
mov
xor
dec
dec
adc
or
adc
cmp
dec
mov
lods
add
pop
rep
sub
cmpsl
mov
or
adc
cmpsb
cmpsl
loopne
js
dec
cmp
lret
inc
push
push
lods
fldenv
dec
les
jmp
xchg
sub
in
cmp
data16
push
mov
sbb
xor
sbb
jmp
js
bound
aad
cld
push
nop
push
xchg
jb
arpl
dec
or
lods
je
sarb
jecxz
inc
xchg
adc
lds
call
push
dec
dec
or
clc
pop
cmpb
mov
movhps
aam
das
and
orb
and
mov
andl
clc
cwtl
jmp
lcall
add
cmpl
iret
fnsave
in
loopne
mov
daa
gs
test
pop
aas
repz
sub
xchg
jb
jnp
dec
ret
dec
mov
ret
nop
mov
xchg
mov
movsb
ljmp
fisubrs
and
mov
scas
inc
xchg
mov
repz
or
push
loopne
push
jle
rcr
lcall
xchg
imul
mov
jge
cmp
sbb
xchg
sarb
decl
xchg
ljmp
mov
push
push
mov
mov
xor
jle
decl
test
ret
mov
sbb
inc
mov
inc
or
or
fwait
ror
xlat
push
sub
in
aaa
sbb
push
mov
jle
inc
mov
aad
pop
jmp
xchg
xor
ljmp
jp
mov
jp
loope
mov
imul
dec
das
repnz
jne
or
es
js
and
pop
ss
xchg
dec
push
das
out
mov
ljmp
mov
mov
dec
sbb
lock
jp
daa
push
jns
dec
std
or
repnz
ljmp
pop
jle
and
mov
push
psraw
popf
test
mov
cmp
inc
fiadds
je
faddl
sbb
cmp
imul
add
bnd
adc
mov
mov
jp
fcmovne
inc
arpl
or
test
or
jmp
std
int3
sub
out
pop
mov
push
and
clc
in
cwtl
sarb
scas
jle
add
dec
sti
cmp
movsb
push
adc
repz
leave
idivb
divl
sbb
sahf
daa
ss
cmp
ljmp
mov
movsb
dec
jnp
enter
arpl
aaa
jo
imull
push
dec
or
push
push
popa
lds
inc
adc
shll
or
xchg
inc
pop
test
adc
push
loope
cmp
sub
xchg
in
dec
mov
movsl
xor
lret
and
add
insb
lock
into
iret
fistpll
add
mov
sahf
mov
out
xchg
dec
fcoml
daa
sub
sbb
adc
in
lahf
mov
mov
inc
sbb
loop
das
and
js
int
xchg
enter
push
notl
sbb
lret
jns
fstps
mov
sahf
cld
popf
cld
test
or
and
stc
outsl
pop
pusha
loop
adc
stc
mov
adc
adc
mov
add
sbb
fcoms
xchg
out
mov
int3
xor
mov
xchg
into
mov
or
pop
pop
mov
jmp
imul
rolb
push
movsb
inc
data16
inc
lods
out
arpl
xchg
movsl
dec
sub
sub
and
cwtl
cmp
cmp
and
lcall
fstps
pop
mov
xchg
lock
enter
dec
popf
xor
adc
loop
jmp
movsb
push
lds
adc
mov
jb
push
orb
pushf
je
es
or
lcall
xor
pop
mov
add
in
xor
pop
mov
test
pop
inc
je
inc
cmp
jne
mov
cmp
adc
lock
test
rcl
stos
ret
divb
repnz
xor
cmpb
add
lret
pop
movsl
lock
pop
mov
out
cs
pop
shlb
mov
xor
aam
iret
pusha
ret
xlat
loop
es
jae
dec
lods
stos
xor
jmp
dec
popa
jp
popa
lods
cmpsl
pop
mov
and
cmp
mov
sub
push
adc
add
add
test
mov
dec
push
inc
cs
stc
inc
clc
inc
insb
mov
jmp
std
in
sarl
or
out
jge
sub
push
fidivl
mov
cltd
mov
or
jp
or
aam
mov
xchg
xchg
xor
dec
data16
test
pusha
and
push
mov
ret
inc
and
cmp
arpl
into
pop
and
jb
inc
out
inc
xor
jns
pslld
out
adc
mov
je
pop
xor
inc
sub
mov
mov
push
mov
pop
int
dec
adc
mov
nop
movsl
filds
jno
dec
outsl
cmp
push
lds
sbb
clc
sbbl
ljmp
mov
push
aaa
mov
stos
push
xchg
insb
mov
sub
jle
mov
in
mov
pusha
fnsave
ret
add
mov
fildl
les
bound
shlb
popf
stos
fwait
stc
mov
pop
mov
push
xor
fistpl
mov
adc
jbe
push
cmp
pop
adc
cld
jne
int
xor
mov
xor
arpl
add
or
repnz
jne
pop
add
or
out
add
mov
jecxz
out
or
lds
cmp
cwtl
adc
scas
pop
icebp
push
and
ret
stos
cmp
movsb
test
dec
jbe
dec
stos
jge
movsl
loopne
add
jae
xor
ret
pop
jno
xchg
adc
dec
adc
outsb
push
stos
ficoml
jo
test
push
and
in
test
sub
std
inc
lahf
mov
sahf
in
hlt
sbb
enter
pop
out
cmpsb
push
inc
loope
outsl
or
fstpl
cs
pop
movsl
cmp
and
jb
xchg
push
cmp
mov
mov
xor
pop
mov
pop
aad
xchg
js
icebp
xor
sbb
mov
push
jmp
mov
lret
sbb
rol
rorb
jg
fmuls
mov
sti
push
mov
lea
and
lret
mov
cltd
add
sub
mov
xlat
shll
mov
lds
sbb
pop
sahf
lahf
push
sbb
jmp
outsl
mov
pop
loop
cmpsb
fdivr
jno
mov
adc
cmp
adc
jns
adc
inc
cli
push
in
xor
ss
cmp
or
ss
and
cmc
mov
sbb
pop
aad
adc
sub
jg
adc
jecxz
andl
pop
dec
mov
mov
xlat
sub
popa
stos
mov
push
loop
sti
inc
movl
loopne
std
lea
mov
jl
std
fnop
xchg
repz
sti
fcoms
aas
dec
sbb
xchg
rorb
sbb
adc
adc
pop
pushf
enter
add
xchg
sub
aad
mov
nop
push
inc
cmpsb
aas
and
cmovns
outsl
adc
test
sbb
sahf
sbb
lea
fistpll
mov
cmpsl
and
mulb
lock
in
inc
ret
lcall
dec
mov
mov
out
int
rcrl
hlt
mov
std
lret
adc
cwtl
popa
xor
shll
cld
and
sub
sbb
lock
adc
pop
jge
adc
mov
cmp
sub
and
ret
data16
inc
push
insl
call
mov
push
inc
ljmp
cmp
fdivrs
inc
dec
push
and
icebp
pop
dec
cmpxchg
incl
mov
popf
jl
mov
std
mov
std
xchg
push
add
lods
fucomp
mov
xchg
sbb
xor
call
out
loopne
or
mov
xchg
call
mov
cltd
xor
mov
mov
cmp
dec
int
fisubrs
ss
sbb
mov
pop
inc
mov
inc
cltd
fwait
xor
ds
jno
lods
add
int
out
and
jns
imul
jns
mov
insl
xchg
rcll
or
pop
lock
addr16
push
dec
mov
lods
addr16
xchg
xchg
dec
cmc
sub
jne
cmpsb
push
mov
sub
test
push
lret
dec
clc
push
xchg
in
xor
sub
out
add
int
inc
ja
or
sub
stos
fucomi
out
and
shrl
inc
jnp
push
bnd
mov
add
mov
iret
test
pop
ret
dec
pop
in
cmp
inc
jae
and
push
xchg
cmp
shlb
cmc
mov
fdivl
cld
or
sbb
adc
imul
fcos
pop
push
subb
mov
push
mov
and
inc
leave
xor
outsb
hlt
lds
aad
movsb
insb
dec
inc
fwait
insl
mov
insl
sbb
lods
or
cmpsl
jb
ret
int3
add
pop
sbb
cli
jne
push
fdivrl
scas
cmp
sbb
jo
fidivrl
sbb
loop
xor
sbb
xor
jbe
dec
adc
cmp
daa
xor
cmp
pop
jno
push
cmpl
dec
sbbb
mov
test
out
daa
mov
mov
push
repz
test
imull
inc
jecxz,pn
cmpsb
add
sbb
fcmovnbe
add
movsb
push
xor
sbb
push
aad
loope
cltd
sub
outsb
popf
cmp
pop
sbb
aas
dec
pop
loopne
pop
subb
pop
add
mov
xor
das
pop
gs
inc
pop
cld
sbb
pop
pushf
dec
cwtl
lcall
das
fsubrl
xor
outsb
adc
insl
adc
mov
sub
mov
lods
outsb
mov
je
and
push
jmp
int
pop
xchg
sub
notl
or
roll
testl
sti
sahf
test
scas
scas
sbbb
inc
outsl
xchg
mov
loop
outsl
pop
stc
sub
jbe
aaa
or
adc
xchg
mov
cmp
int
jo
adc
mov
xchg
adc
mov
loop
data16
cmc
orb
xor
js
adc
mov
imul
jbe
jb
mulb
pop
sbb
add
fst
adc
fldl
mov
ret
sti
notb
or
jle
xchg
out
loopne
pop
sbb
inc
jb
flds
push
popf
les
fcomip
xchg
jbe
sbb
pop
cmp
icebp
dec
fwait
mov
add
ss
mov
jae
fldpi
repz
repz
mov
sarb
jb
fldz
dec
insl
or
imul
jecxz
xor
fmull
sub
shll
out
orl
dec
lea
dec
inc
inc
dec
testb
dec
inc
mov
jbe
loope
jp
pushf
shrl
inc
divb
mov
std
jb
cwtl
cwtl
sbb
pop
cmpsl
xor
jg
or
push
nop
sub
mov
lgs
lock
shl
pushf
xchg
rcrb
sub
leave
aam
enter
das
mov
insl
iret
in
dec
mov
pop
mov
rol
fbld
pop
fsubrs
pop
lahf
mov
ret
adc
mov
adc
testb
mov
xchg
mov
sbb
fisttpll
cwtl
mov
xchg
sub
mov
pop
jle
adc
out
inc
aas
and
nop
mov
cmc
xor
sub
xor
int3
mov
cmp
js
test
push
xchg
ja
and
dec
test
std
inc
push
int
or
sbb
pop
push
adc
mov
int3
je
add
stos
pop
incb
jns
aad
in
fcmovu
xchg
and
pop
mov
stos
sti
pop
addr16
adc
jp
decb
pop
test
sti
lods
mov
addl
or
filds
pop
int
inc
iret
sbb
scas
pop
in
cmpl
stos
sub
subl
inc
and
inc
iret
jnp
enter
fcoml
pusha
adc
iret
pop
jecxz
ret
mov
daa
mov
mov
in
xchg
sub
stc
stos
sbb
pop
mov
fisubrl
lret
leave
cmp
imul
scas
cmp
sbb
jl
adc
outsb
mov
jae
cmp
test
lcall
dec
call
or
call
pop
or
lds
add
pushf
int3
in
int3
imul
sbb
lds
fimull
scas
sbb
and
icebp
daa
cmp
mov
movsb
mov
loopne
jbe
mov
jge
scas
les
jp
cmp
xor
ljmp
xor
jl
jl
dec
icebp
mov
push
jno
add
dec
fmulp
lahf
stos
mov
push
mov
test
ret
inc
mov
and
enter
pop
gs
inc
movsb
sub
pop
loop
pop
and
ds
mov
cmp
sbb
mov
mov
adc
test
repz
sub
xor
jp
pop
sbb
arpl
xchg
outsl
fcoml
sub
outsb
jne
jae
cmp
push
jg
xorl
call
add
and
mov
dec
int
xchg
and
cmpsl
rorl
push
cmp
rcrl
cmc
sbb
or
test
mov
outsl
jae
pop
loop
insl
mov
fs
adc
or
leave
adc
cmp
mov
dec
cli
mov
ds
cmp
pop
aas
or
hlt
shl
dec
mov
rcrl
cli
adc
xor
fdivrs
add
or
lods
pushf
mov
push
xlat
push
aam
sub
push
mov
sub
sub
gs
rorb
mov
dec
inc
mov
pop
les
push
daa
xchg
cmp
nop
sbb
or
scas
pop
or
dec
adc
and
jmp
mov
je
ljmp
aas
pop
rolb
jb
push
inc
je
sbb
pop
push
push
lea
mov
movsl
xor
mov
adc
andl
and
jecxz
test
movsl
ss
shll
xchg
das
or
mov
sub
adc
cwtl
idivb
fs
sbb
jmp
xlat
xor
push
mov
fildll
cld
jnp
xchg
test
inc
mov
movsl
mov
in
lock
bound
sbb
aam
ret
sub
test
es
ret
xor
jae
dec
popf
add
ljmp
stos
lods
call
sahf
xchg
mov
lret
mov
outsl
lods
add
cltd
lods
rcrl
sahf
xchg
jnp
sub
push
mov
ss
sub
push
inc
mov
ret
pop
sub
stos
jle
mov
cmpsb
push
movsl
xchg
fmull
jmp
shll
xchg
clc
or
mov
jmp
or
xchg
add
test
mov
ja
icebp
cmc
dec
fwait
mov
inc
ljmp
fwait
sub
push
mov
push
push
lea
out
loop
or
jns
lods
push
in
jge
xchg
jno
cs
inc
lods
mov
data16
addr16
inc
mov
aam
movsb
mov
add
mov
dec
mov
shlb
fbld
sbb
xchg
jp
roll
or
mov
adc
mov
stos
rorl
movsl
popf
mov
jecxz
aaa
jnp
cmp
out
in
cmp
pusha
scas
je
iret
inc
cmpps
negb
mov
inc
shrl
push
sbb
pusha
popf
and
xlat
mov
fidivl
fisubl
and
je
imull
movsl
out
lahf
iret
push
push
lock
mov
movb
leave
pop
inc
loope
pop
mov
ds
mov
stos
mov
push
aaa
inc
dec
lods
or
loopne
int3
fsubr
pop
pop
jnp
or
jg
in
lds
push
shr
inc
scas
cli
sub
ret
out
movsb
dec
sti
pop
push
gs
jbe
xchg
mov
in
or
sbb
or
into
jno
xor
testb
mov
push
out
cmp
jg
test
lahf
lret
push
cltd
adc
test
lea
inc
dec
cld
dec
cmpsb
or
push
in
test
pop
loope
movsb
fsts
loope
loopne
sub
xchg
lods
cmp
lret
sbb
movsl
dec
sub
and
mov
adc
adc
dec
icebp
test
ds
jmp
repnz
dec
gs
js
pushf
cld
pop
lcall
push
out
sbb
sub
aas
outsb
fmul
cld
adc
pop
mov
out
mov
aas
movsb
and
mov
push
inc
jl
int
scas
jne
and
mov
adc
lret
add
xor
adc
sahf
mov
xchg
test
fbld
adcb
outsl
push
btr
ficompl
je
dec
dec
adcb
pop
ss
cmp
inc
orl
outsb
je
in
sub
xor
inc
aad
pushf
scas
add
sub
adc
adc
jns
xor
jmp
adc
xchg
imul
or
dec
in
lods
sbbl
stc
mov
mov
mov
cwtl
mov
inc
inc
pop
outsl
mov
loopne
pop
iret
dec
push
clc
jb
mov
mov
movb
xchg
cld
sbb
mov
jb
inc
in
and
pop
mov
mov
pushf
leave
mov
cs
out
je
xor
nop
scas
fstps
outsb
mov
dec
pop
sub
je
shlb
and
pop
enter
and
xchg
mov
jnp
dec
into
lock
adc
jl
pop
fnstenv
das
ljmp
mov
nop
ss
rorl
pop
std
ror
cwtl
xchg
scas
mov
xor
mov
pop
sbb
cld
cmpsb
xorb
inc
push
cwtl
lock
push
in
ficompl
rolb
shl
sub
cmp
aam
adc
ret
adc
xchg
insl
popf
out
dec
cwtl
sahf
xchg
mov
xlat
popa
popf
and
cmpsb
dec
mov
rorl
outsl
bswap
xchg
sbb
ficompl
test
test
push
dec
ss
fstpl
and
xor
repnz
mov
pop
aam
mov
or
rclb
cltd
lods
inc
scas
xchg
xor
xchg
push
xor
out
mov
inc
pop
rorb
leave
test
sahf
clc
ja
inc
dec
dec
mov
inc
adcl
fwait
mov
int3
cld
add
fiadds
mov
stos
iret
jns
sub
in
je
xchg
shlb
mov
fistps
movsl
xchg
addr16
clc
or
inc
jl
or
in
push
ljmp
sahf
mov
xchg
rcrl
xchg
adc
jmp
inc
xchg
xchg
adc
repnz
adc
ja
and
test
push
and
sub
ja
jle
cli
in
in
andb
xchg
lds
mov
xchg
in
inc
int3
scas
bound
add
ficomps
popf
inc
dec
popf
mov
pop
mov
ficoml
das
push
imul
scas
add
out
sbb
pop
call
leave
xchg
divb
arpl
fiadds
movsb
arpl
push
add
lods
add
out
pop
stos
cmp
fisubs
jne
lds
icebp
fldcw
sub
fnstcw
inc
xor
aad
xchg
push
mov
clc
jbe
jmp
jge
dec
inc
sbb
and
daa
xor
data16
pop
xor
lea
xor
xor
add
sbb
cwtl
subl
fucomi
mov
nop
push
inc
enter
pop
jecxz
imul
mov
lods
cmp
push
mov
push
dec
dec
and
xchg
stc
std
add
mov
jg
cltd
add
adc
xor
outsb
scas
inc
pop
pop
jno
mov
pop
sbb
push
inc
out
fsubrl
adc
xchg
aaa
adc
xor
adc
sarb
adc
push
mov
and
and
jmp
push
inc
lahf
lret
int
mov
sub
loopne
lret
pop
ror
pushf
mov
xlat
movsl
sahf
sub
push
subb
outsl
xor
lret
add
stc
dec
cwtd
fs
sbb
call
cmp
fmulp
gs
jmp
out
in
cli
and
cwtl
xor
ss
inc
inc
or
xlat
push
into
psubusb
cmc
xlat
cmc
mov
mov
negl
int
adc
push
mov
add
dec
jmp
aad
lods
push
cld
mov
imul
fsubl
out
mov
in
add
sti
add
daa
gs
inc
loopne
clc
push
dec
jne
adc
fldcw
or
xchg
mov
ret
jle
sbb
sbb
fcomps
popa
push
adc
fistps
pushf
je
jae
sar
cs
mov
js
mov
aas
popf
shld
and
shrb
push
jecxz
lea
and
in
push
call
loop
lea
push
or
dec
mov
sti
pop
je
inc
inc
fbld
inc
adc
das
leave
cltd
inc
mov
fwait
sbbl
pop
mov
lods
std
addr16
cwtl
dec
mov
mov
icebp
rcrb
xchg
pop
mov
push
jge
test
cmp
ja
aad
jmp
aam
mov
ret
mov
in
jns
test
pop
xchg
add
xor
repnz
mov
jae
mov
fsubs
mov
sub
aad
cltd
sbb
test
insb
push
adc
test
addr16
insb
movsl
enter
mov
shll
loope
jg
das
stos
pop
inc
mov
xchg
push
lea
and
jmp
xor
cltd
push
or
add
mov
inc
cld
std
dec
imul
leave
dec
cmpl
pushf
or
mov
xchg
push
std
lret
popa
ljmp
mov
stos
sub
sub
in
mov
mov
daa
and
pop
fcoml
addr16
xor
mov
in
mov
inc
push
cwtl
dec
orl
shlb
loopne
push
xchg
push
mov
es
xchg
adc
filds
push
sub
jb
and
xor
stos
cmpsl
jp
and
mov
insb
mov
jne
jle
idivl
in
sbb
and
rol
push
cld
pop
enter
xlat
sbbl
xor
fdivrl
fdivrs
fcmove
push
xchg
out
aaa
sbb
mov
imul
cld
scas
gs
fsts
add
mov
insb
repnz
or
xchg
xor
mov
inc
cmpsl
popf
pop
or
pop
aas
shll
mov
or
add
int3
scas
mov
pop
fptan
jo
lds
pop
lds
push
rcrb
subb
mov
xchg
subl
and
jbe
stos
jnp
daa
xor
jl
jns
push
jl
loope
dec
lods
adc
sbb
movsb
xor
pop
jns
lahf
or
das
push
aas
push
aas
test
and
mov
ja
or
pop
and
fsub
clc
mov
sub
or
bound
sbb
stos
cmpb
icebp
dec
xor
das
sbb
ds
xor
mov
inc
js
popf
or
cwtl
lcall
fcoml
sub
outsb
sahf
pop
push
adc
push
icebp
dec
jg
mov
and
mov
pop
push
and
movl
pushf
xchg
adc
sbb
add
lret
xor
arpl
mov
aas
sahf
into
and
mov
xchg
push
outsl
adc
stc
add
insb
fs
adc
sub
ss
imul
out
fidivs
xor
cmp
sbb
or
mov
cmc
sahf
mov
xor
sub
pop
jo
adcb
out
and
xor
scas
aad
push
cmp
lods
push
mov
mov
sub
inc
mov
outsb
push
sbb
mov
pop
decb
adc
gs
das
loopne
test
dec
aam
and
mov
in
fsubrl
mov
sbb
mov
mov
pop
and
jmp
jmp
mov
pusha
aad
lds
aas
cmp
mov
dec
dec
xlat
pop
je
add
jecxz
fstpl
lea
or
mov
movsl
cmpsb
mov
shlb
xchg
adc
inc
dec
fs
sub
jmpw
push
pop
add
cmpsb
jne
shrl
add
pop
cwtl
or
cmpsl
das
pop
aam
sarb
icebp
fs
xchg
cld
cld
rolb
push
mov
cs
mov
inc
push
lock
lods
pop
sbb
call
test
test
aam
lods
daa
ret
xor
pop
shrl
or
js
dec
mov
loopne
popf
outsb
mov
add
ret
lods
sub
mov
repz
mov
mov
mov
add
inc
sbb
mov
insl
loopne
shll
cli
clc
cmpsl
cmp
xchg
ret
xchg
sbb
in
std
rol
fstl
stos
dec
not
out
iret
je
xchg
mov
cmp
cld
ret
add
xor
xchg
sbb
push
dec
mov
dec
dec
out
dec
sarb
test
xor
push
inc
scas
jmp
or
int3
xor
mov
sub
adc
xor
jg
bound
sbb
packssdw
sub
xchg
pop
lret
call
mov
xchg
sahf
mov
in
mov
push
jae
mov
xchg
sbb
arpl
mov
insb
mov
xchg
cmp
xchg
pop
xchg
fistl
xor
xchg
out
stc
sahf
sub
insl
shlb
mov
mov
sbb
cmpsl
insb
and
insb
jnp
aaa
pop
jle
jmp
push
pusha
jg
dec
iret
addl
pushl
adc
mov
push
fs
popf
xchg
jl
mov
push
lret
fidivrl
or
jne
loope
daa
dec
mov
enter
jecxz
test
rorl
xchg
repnz
dec
mov
arpl
jle
inc
stos
dec
dec
or
aam
mov
or
dec
out
int3
cltd
push
cmp
insl
fisubrs
sub
test
push
out
xchg
mov
dec
mov
jmp
inc
pop
jbe
repnz
jno
sbb
test
das
pop
cmpb
cwtl
inc
jno
sbb
jl
push
sti
dec
lods
jmp
push
std
xchg
xor
mov
rcrl
adc
push
out
pop
inc
stc
lahf
xor
pop
lret
adc
mov
pop
popa
push
push
cs
loope
xchg
jno
pop
add
cmp
test
add
inc
sub
mov
sub
cmc
add
mov
xchg
xor
dec
pop
mov
jnp
pop
pop
mov
lcall
cltd
fdivr
push
sub
dec
outsb
add
adcl
cltd
in
jg
or
mov
mov
shll
adc
fiadds
dec
inc
mov
sub
cwtl
jle
in
push
mov
cli
xchg
loop
je
sub
xor
popa
sahf
jno
stos
test
inc
push
outsl
out
jb
loop
imul
mov
sub
jnp
ss
adc
fdivs
out
pop
stos
cli
xchg
cmp
cmp
ret
pusha
or
jno
into
aad
arpl
fistl
xor
add
adc
fistpll
adc
mov
dec
rclw
mov
mov
shrl
xlat
jg
jne
push
in
sti
popa
and
gs
dec
loopne
insl
sbb
cmp
fstp
sbb
jl
aaa
dec
mov
sub
adc
hlt
cmp
pop
aad
adc
test
jmp
inc
add
jp
stos
aad
xchg
cli
nop
inc
daa
jo
fistpl
jmp
movsb
adc
loop
fucom
jbe
out
sub
out
std
mov
mov
rorb
sbbb
fistpl
xchg
adc
inc
dec
frstor
xchg
fsubs
or
and
xchg
not
stc
cmp
std
mov
lret
cwtl
ret
xchg
mov
mov
cmp
add
fs
mov
and
aaa
test
lock
pop
aaa
int3
loopne
jnp
push
sub
mov
aam
notb
ret
rclb
es
in
insl
push
xchg
scas
dec
mov
mov
ljmp
lret
lods
xchg
xor
in
pop
push
push
out
fs
xchg
imul
adc
xchg
lret
mov
mov
push
xchg
dec
int
sarb
xor
loop
xchg
push
add
stos
cmp
out
xor
xchg
clc
fisubl
jmp
cmp
cmpsl
xor
or
mov
dec
adc
dec
aaa
cmp
test
fsubp
ja
pop
push
dec
mov
inc
or
test
push
inc
movsb
rolb
ljmp
fldl
jns
js
in
dec
adc
jbe
idivl
push
jns
mov
xchg
jp
ljmp
shlb
cmp
mov
jne
rcll
lcall
xchg
adc
jnp
adc
xchg
cmpsb
filds
adc
sub
push
int
stos
lea
and
pop
push
insb
xor
mov
into
xchg
in
mov
pusha
sbb
mov
loop
and
ja
fistps
push
jg
in
sub
lahf
inc
call
daa
inc
jns
mov
mov
inc
fwait
ja
cs
pop
xchg
xchg
aam
sbb
jns
imul
leave
scas
sub
adc
rorb
leave
sti
call
adc
mov
inc
lods
insl
orb
enter
xor
out
add
int3
test
into
pop
aaa
stos
enter
inc
lds
or
rclb
scas
jbe
mov
loop
out
cmp
sub
inc
je
cmpsl
mov
out
sbb
out
daa
jns,pn
cmp
mov
jl
popf
xor
out
mov
xor
adc
insl
push
in
fldt
mov
pop
je
adc
fadd
enter
pop
mov
mulb
lds
lret
cmp
or
ds
and
imul
add
sbbb
sbb
sbb
push
mov
xor
or
js
in
ds
xchg
mov
push
dec
es
fsubrl
in
outsb
fs
adc
les
jg
jne
mov
movl
and
xor
xchg
int
or
sub
dec
pop
testl
mov
rcll
add
sahf
adc
jl
xor
fiadds
into
inc
out
es
test
fs
adcb
push
test
sbb
fsubrs
sahf
adc
or
mov
fdivrl
inc
jb
pop
in
into
mov
fs
xor
push
cmc
pop
scas
inc
inc
adc
mov
adc
xchg
adc
dec
add
mov
push
bound
lods
pop
in
into
mov
inc
adc
pop
inc
sub
js
mov
es
inc
iret
and
adc
sar
push
fmull
loopne
inc
rorb
inc
inc
add
mov
repz
lret
or
push
aaa
sub
das
shrl
xchg
push
out
mov
adc
and
jne
shr
lea
ret
aad
int3
jne
sbb
aas
jp
sub
dec
aaa
push
bound
adc
test
cs
fs
call
pop
cmpsl
add
pop
xchg
enter
mov
pop
pop
mov
inc
je
and
arpl
xchg
das
data16
mov
rolb
mov
pop
movsl
test
mov
cwtl
jle
in
cmpsl
sub
ret
adc
cld
push
push
pop
lret
rcrl
mov
ret
mov
lock
mov
adc
out
jns
aam
xchg
insb
ret
dec
ja
xlat
psllq
lcall
mov
std
sti
popa
xor
aaa
lods
call
mov
in
test
dec
dec
mov
es
push
test
mov
mov
inc
out
push
pop
in
rol
clc
sbb
es
sbb
push
mov
stos
sub
repz
aas
test
pop
incl
loopne
xor
aad
xor
adc
mov
dec
dec
lods
dec
sahf
fadds
outsl
mov
fiadds
push
aad
aad
xchg
fwait
jp
fcomps
out
cmpsb
add
dec
mov
cmp
loope
jns
test
ds
push
xchg
cld
icebp
fwait
mov
in
mov
or
lock
mov
mov
mov
sub
mov
adc
add
cmp
cmc
jo
or
xchg
jno
icebp
adcl
lods
out
xchg
shrl
arpl
outsb
push
das
loop
stos
add
cmp
sbb
and
jnp
push
push
jle
cmpsl
in
mov
pusha
mov
add
inc
insl
aaa
ret
fistpl
adc
jae
loope
push
ljmp
mov
push
lock
loope
push
xchg
jmp
jbe
lret
lcall
mov
push
jno
mov
mov
gs
ror
jb
xor
shl
repnz
add
or
lret
aaa
mov
cmp
jecxz
ror
outsl
or
fisubrs
outsb
out
jo
scas
scas
push
cmp
cmp
ja
add
imul
daa
jge
sub
sbb
cli
add
sub
aam
jno
imul
push
ret
and
xor
insb
enter
adc
mov
cli
inc
push
test
inc
pop
popa
inc
cmpsb
cwtl
mov
in
sub
xchg
enter
pop
fistpll
mov
mov
sbb
cmp
ds
repz
and
jns
cltd
subb
imul
pop
mov
xor
fstpl
js
repz
adc
push
lock
mov
inc
shrb
and
cltd
outsb
push
adc
lahf
daa
cmp
in
mov
andl
and
andb
push
mov
int
popf
jno
mov
test
ret
pusha
shrl
xchg
mov
lods
sbb
inc
add
xlat
addl
stc
sub
pop
fs
and
and
push
ss
aam
cmp
ljmp
cli
in
pop
mov
aam
pop
cmp
xchg
sbb
sbb
into
fwait
nop
repz
imul
int
int3
adc
insb
lock
and
add
icebp
fldenvs
jge
push
fimull
loopne
pop
xlat
into
sbb
pop
mov
scas
gs
sti
mov
das
mov
xchg
sub
xorb
dec
icebp
sub
inc
adc
and
mov
addr16
std
mov
cmpsl
xchg
lret
les
cmp
cltd
adc
rcrl
cwtl
push
adc
sti
xor
jl
xchg
inc
push
aad
gs
nop
idivb
gs
or
dec
scas
sub
jecxz
gs
xor
pushf
lret
mov
ret
insl
and
scas
mov
dec
gs
jle
std
negl
ret
sub
add
cmpsl
mov
mov
ja
frstor
lret
xchg
in
or
cmp
add
mov
cmp
mov
jmp
xlat
hlt
lret
inc
add
mov
mov
pop
jne
insl
shlb
in
sbb
in
rcl
imul
stos
insl
and
push
xchg
incb
ljmp
jns
push
push
mov
pop
sbb
and
leave
mov
xlat
add
ret
testb
mov
adc
push
sbb
mov
and
loope
pop
outsb
loop
push
sahf
aas
sbb
pop
ror
mov
add
clc
pop
loope
xchg
pop
push
lea
je
loopne
add
or
inc
mov
push
clc
xlat
dec
add
in
lds
movsb
pop
dec
dec
mov
inc
je
add
inc
mov
push
mov
add
gs
sbb
pop
bound
mov
jns
ss
leave
xor
dec
jmp
mov
pusha
movsb
mov
enter
mov
idivb
xor
ret
dec
fimuls
or
lods
mov
push
call
push
xchg
mov
cli
jmp
cmp
dec
andl
shrl
rcrb
jae
dec
and
xchg
jbe
gs
or
adc
jle
je
in
lret
xchg
adc
iret
mov
in
pop
movsb
ja
inc
add
insl
jae
ret
or
lods
sub
popf
or
push
mov
aam
dec
ficoml
inc
sbb
nop
imul
int
icebp
repnz
mov
icebp
jle
call
aas
jae
jmp
gs
sbb
dec
inc
mov
jnp
jg
xor
mov
daa
or
cmc
add
lcall
jae
ficoms
daa
lds
cmp
rorb
mov
cmp
or
mov
jbe
vaesenclast
sbb
inc
pushf
cmp
add
jl
stos
adc
loope,pt
cmpsb
aam
xor
or
lahf
test
test
dec
and
cmpsb
sbb
mov
adc
popa
pop
push
jne
push
mov
pop
sub
jmp
es
std
cmc
movsl
ja
mov
pop
stc
out
fadd
jle
inc
jp
sbb
cs
xor
lods
jge
mov
js
lea
pop
xchg
stos
lcall
fcomp
add
mov
adc
aas
outsb
sub
pop
adc
jp
inc
jg
pop
pop
mov
jo
mov
xor
push
sbb
int
adc
add
testl
push
iret
mov
andl
outsb
test
sub
mov
xor
dec
or
stc
loopne
dec
fs
std
sti
adc
xor
sahf
mov
cmp
movsl
mov
xor
pop
mov
xchg
mov
or
sbb
into
jle
cld
cmc
mov
into
pop
pop
in
test
mov
data16
aad
add
fbld
pop
and
fisttpl
push
xlat
or
adc
mov
shlb
xchg
jbe
gs
outsl
dec
loopne
xor
dec
push
cmpsb
push
inc
daa
inc
jp
mov
jb
rep
lea
sbb
movsl
mov
ret
pop
out
cmpsl
adc
stos
and
ja
mov
bound
shrl
jo
mov
add
dec
and
jge
jecxz
lds
xor
stc
lea
lods
or
add
mov
pop
addl
imul
and
pop
mov
loop
inc
cltd
sub
mov
cs
and
jecxz
shl
jb
testb
std
stos
dec
adc
sub
out
mov
cwtl
icebp
rolb
cld
test
or
xchg
sub
mov
xchg
pop
xchg
lahf
stc
shl
mov
aam
iret
xor
insl
add
es
shrl
dec
std
dec
jp
push
cmp
pop
sub
mov
mov
jg
jl
sti
bound
fs
invd
inc
into
add
cltd
sub
stos
mov
fbstp
inc
mov
clc
xchg
push
iret
xchg
cltd
lea
sti
cmpsl
or
and
pop
xchg
ss
pop
jae
out
pop
ljmp
push
xor
xor
mov
stos
xor
and
mov
push
sbb
insb
ret
stc
test
push
icebp
ja
dec
inc
push
rolb
dec
movsl
or
mov
fstpl
sub
or
addb
out
sti
sub
bound
mov
in
pop
xor
mov
push
fs
addl
jp
call
sarl
dec
dec
lock
add
das
nop
mov
cmp
fistpll
xchg
xchg
mov
dec
jmp
pop
into
stos
xorl
out
ljmp
sub
pop
cmp
push
lods
xchg
pop
stos
out
mov
push
cmpsb
jnp
in
jle
xor
shll
lcall
mov
fstps
cmpb
or
lds
jo
mov
mov
push
and
or
and
imul
pushf
scas
push
jnp
push
incl
lahf
adc
gs
dec
repnz
leave
pusha
lahf
cwtl
hlt
push
out
or
mov
sahf
or
shr
aaa
jge
push
or
dec
add
lret
xor
inc
adc
pop
std
cmp
hlt
es
vpcmpgtw
shlb
mov
fwait
lds
mov
dec
push
mov
scas
jbe
outsl
jge
je
sbb
adc
cmp
loope
jno
inc
xor
sbb
lea
push
mov
xor
and
lahf
mov
repz
les
std
inc
xor
aad
in
cli
push
enter
pop
pop
xor
push
test
or
cltd
cmp
enter
cld
jl
jle
popa
and
movb
push
push
jbe
leave
pop
mov
jno
xchg
xor
aad
inc
loope
pop
pop
mul
js
mov
setp
leave
sbb
stos
aas
fsubrl
jle
outsb
lea
adc
push
add
sbb
fidivs
ja
dec
loop
push
push
cmc
loopne
lahf
insb
push
sub
push
testl
rcll
mov
imul
test
pop
repnz
outsl
loop
test
sbb
mov
ss
xor
pusha
test
or
push
lds
xor
mov
or
arpl
push
cmp
fldcw
stos
pop
or
iret
adc
fsubrs
das
cmp
ja
data16
pop
lods
aam
sub
dec
push
cmp
mov
mov
sub
sbb
mov
mov
inc
clc
dec
scas
es
inc
cmp
fdecstp
inc
test
jae
pop
xchg
push
add
sbb
loopne
rol
and
ficoml
inc
fstps
jmp
pavgb
push
jnp
aad
les
aas
push
daa
mov
xor
pushf
inc
and
cmpsl
jecxz
imul
lea
test
mov
xchg
mov
cs
jnp
fistpl
push
inc
ret
or
in
mov
stos
das
add
cmpb
push
sbb
xor
loope
std
push
push
lcall
pop
outsl
mov
xchg
adc
mov
and
jecxz
push
arpl
iret
push
movsl
pop
mov
sahf
rol
fs
sub
mov
inc
cld
xor
es
inc
xchg
insl
out
cli
inc
dec
jne
dec
xchg
jl
push
ljmp
cmp
inc
pop
push
test
push
mov
mov
addr16
pop
add
adc
mulb
mov
push
mov
jbe
clc
into
lret
push
sbb
sbb
or
pop
cmpl
mov
insb
xor
lcall
je,pn
sub
add
lcall
mov
pop
scas
mov
test
dec
fidivl
lcall
dec
xor
or
or
fwait
pop
cmpsb
jo
iret
in
mov
add
or
in
sarl
addl
jmp
mov
mov
lods
xchg
mov
jp
dec
insb
mov
outsl
mov
mov
mov
cwtl
jne
push
jo
push
lahf
lock
orb
sar
mov
rcrb
out
arpl
push
inc
lods
push
in
sub
pop
pop
imul
jnp
jnp
jle
ljmp
xchg
dec
iret
pop
call
cmp
cs
inc
sbb
jae
push
push
xor
pop
popf
pop
or
mov
rolb
pop
xchg
lock
sahf
sbb
negl
rolb
scas
mov
test
lcall
movsl
hlt
repnz
sahf
and
hlt
mov
cmpsl
arpl
xor
jno
dec
fucom
push
cmp
iret
or
imul
lds
int3
xor
cmp
dec
push
ficoms
testl
scas
repnz
and
lret
inc
stos
mov
hlt
fidivl
lock
jge
out
jae
or
and
out
subl
push
sbb
fcomps
sti
xor
jge
push
lahf
ret
push
xor
aad
dec
lcall
les
push
cmpsb
and
and
loope
sbb
pop
pushf
jae
push
sbb
loope
jmp
push
cmp
out
add
dec
lods
pushf
xchg
leave
sbb
add
cltd
xor
pop
dec
add
out
pop
subb
js
jle
pop
xchg
stos
ds
mov
push
rorb
in
adc
xor
mov
mov
call
in
mov
pop
stc
ljmp
stos
or
cli
loopne
testl
xor
mov
mov
inc
sahf
mov
inc
adc
dec
mov
in
stc
dec
std
xor
movsl
sbbb
adc
cmp
sbb
loop
or
iret
xor
mov
or
mov
inc
jnp
cmc
dec
outsl
inc
xor
rcrb
push
sub
imul
xor
mov
lods
mov
and
xlat
mov
sub
adc
mov
lock
int3
dec
fsub
std
cmpsl
jns
loopne
jo
dec
push
stos
inc
dec
mov
mov
repz
popa
test
in
lahf
lock
notb
xchg
insb
pop
push
jecxz
adc
int3
jmp
imul
imul
sahf
nop
xchg
push
aas
mul
push
jb
xchg
xchg
dec
adc
pop
mov
jecxz
push
pop
cmp
stos
lea
xor
aad
sbb
xchg
mov
xorl
jge
mov
inc
nop
add
das
loop
push
idivl
push
and
adc
roll
mov
clc
inc
ret
cwtl
push
repnz
sub
mov
outsb
dec
arpl
popa
xor
xchg
repz
lods
mov
xchg
cmpsl
lock
mov
rclb
les
lret
aam
pop
cli
ret
mov
es
aad
cs
jo
popf
xchg
mov
mov
lods
stos
push
test
pop
jl
mov
or
push
mov
dec
je
jb
pop
cltd
fwait
fwait
dec
test
out
les
gs
fstl
xlat
inc
xchg
sbb
sbb
loopne
shl
fstps
aaa
stos
in
push
and
lds
push
and
jge
or
jbe
xor
sbb
gs
lods
xchg
iret
dec
cmp
jle
aaa
fidivl
ja
jae
dec
lods
les
roll
or
sub
fwait
ss
movsl
push
jb
pop
add
mov
xchg
out
mov
push
sbb
and
in
clc
sbb
lds
jg
stc
push
mov
dec
jp
push
mov
scas
repz
dec
push
orb
sub
mov
sbb
xchg
das
sbb
jmp
popf
adcl
sub
dec
in
push
sub
stos
int3
dec
jp
je
out
insb
cmpsb
fstps
jle
xchg
aas
in
fisubl
in
sbb
mov
push
je
dec
jg
inc
and
jae
add
mul
das
popf
jg
mov
push
push
fisubrl
bound
sbb
imul
sbb
push
lea
addr16
mov
xchg
leave
dec
mov
xor
mov
and
mov
fidivs
sti
hlt
inc
or
mov
aas
in
int3
sbb
pop
and
fidivrs
add
into
rcr
jne
sarl
mov
clc
jo
movsb
sub
dec
mov
jge
dec
push
sbb
adc
daa
sub
jge
mov
jl
jb
dec
inc
jbe
push
dec
movsl
inc
xor
fmuls
lahf
loope
loope
add
mov
inc
ret
mov
and
adc
in
enter
insl
mov
mov
addr16
loope
int3
das
sub
inc
sarl
sbb
ds
aam
movsl
mov
call
shrb
sbb
lods
pop
add
xchg
shll
mov
mov
pop
test
aam
pop
adc
lcall
sub
add
aaa
sub
sbb
push
xchg
adc
or
push
jg
int3
call
mov
mov
mov
and
insl
push
imul
insl
lret
stos
sub
in
test
adc
roll
sbb
data16
inc
and
test
xchg
stc
addb
outsl
sub
std
stc
add
ret
mov
ss
push
cltd
and
add
out
and
cli
mov
sbb
pusha
or
xchg
cmc
paddsb
xor
pop
pop
adc
clc
icebp
imul
jecxz
add
mov
lods
mov
mov
xlat
lret
sub
repnz
in
pop
pop
jnp
incl
mulb
xchg
out
loopne
lods
or
inc
pusha
dec
mov
les
xlat
repz
and
sbb
push
jno
adc
push
pop
pop
shld
mov
ret
jmp
mov
aad
mov
nop
fsubrp
aas
xchg
movsb
jb
sub
ljmp
loop
lea
es
fidivl
xor
adc
or
xchg
and
lods
xchg
inc
ljmp
mov
push
push
lret
sub
rcl
paddsw
pop
int3
jno
lahf
adc
cwtl
and
adc
and
cmpsl
sar
cmp
mov
cli
mov
sub
pop
icebp
xchg
repz
int
shl
aam
fwait
ret
sbb
es
insl
mov
adc
ljmp
xchg
lods
push
ljmp
call
adc
mov
and
out
pop
cltd
shl
adc
mov
decl
fnstsw
and
sbb
shrl
in
pop
xlat
leave
fs
aam
pushf
out
test
mov
dec
and
pop
sub
testb
test
xlat
sub
mov
dec
mov
sti
movsb
ja
imul
sbb
inc
ror
pushf
or
and
gs
push
adc
mov
out
cwtl
fistl
dec
idivl
jns
pusha
push
in
loop
xchg
xchg
mov
fimull
pop
mov
cltd
mov
sarb
stc
mov
adc
mov
mov
mov
mov
pop
sahf
xchg
add
lods
jmp
push
in
out
xchg
or
dec
push
push
jo
aas
pop
andb
mov
insb
adc
push
jle
xor
in
cmpsl
mov
mov
iret
sbb
jae
jmp
je
inc
das
cld
mov
jns
or
mov
mov
mov
rclb
fisubl
mov
sahf
ljmp
mov
jnp
jge
in
push
aam
in
sarb
sbb
repnz
add
lds
fdiv
dec
jbe
arpl
test
mov
fldt
inc
lods
aaa
mov
sub
add
es
pop
push
xor
pop
xlat
lds
mov
divl
inc
and
cmp
mov
push
jnp
divl
dec
test
nop
jg
orl
daa
sub
sbb
mov
and
jl
mov
dec
mov
insl
push
xor
and
xor
inc
lahf
add
push
xlat
pop
xor
cmp
and
das
inc
loop
inc
cmpsb
daa
repz
in
scas
cmc
mov
pop
sbb
and
mov
jp
dec
pop
xchg
cmp
push
lret
movsl
xchg
adc
and
fdivl
sbb
xor
pop
icebp
xor
int3
inc
pop
rorb
js
mov
adc
push
jb
fsubrl
pop
outsb
mov
adcb
addr16
dec
lahf
mov
xor
mov
jecxz
and
push
pusha
ds
int
shlb
lock
testl
jne
mov
mov
sbb
mov
pop
inc
sbb
or
xchg
mov
push
pop
adc
jmp
cmp
xchg
sahf
dec
out
ds
jmp
pop
xor
xchg
repz
xchg
dec
or
lods
out
into
or
fidivl
ljmp
adc
fmull
fisubl
adc
in
add
mov
dec
lods
mov
fimuls
or
pop
mov
mov
sti
sub
fldenv
adc
loopne
std
mov
mov
push
fstps
testb
loopne
sub
lcall
cmp
cwtl
fs
mov
cmp
pushf
ja
pop
jmp
outsl
mov
aad
aas
fstl
xor
push
jb
stc
mov
add
iret
je
ss
jecxz
in
pusha
movb
into
dec
or
out
pop
pop
mov
or
mov
mov
dec
cld
std
insl
fucomi
push
loopne
sahf
mov
add
mov
cltd
inc
mov
xchg
popa
shll
int3
loope
pop
outsl
popa
std
inc
mov
loopne
andb
cmp
icebp
sbb
out
cld
push
loop
lret
insl
test
and
mov
and
lock
lahf
pop
adc
sub
xor
test
xchg
jo
mov
js
xchg
cmp
push
ljmp
nop
lods
sbbl
enter
and
test
add
fcomps
pop
subl
and
push
jmp
repnz
sbb
mov
sbb
mov
pop
subb
stos
ret
cs
out
sub
aam
aam
sti
xor
or
xor
das
outsl
mov
popa
and
xchg
test
mov
ja
out
dec
or
xor
or
in
adc
push
mov
arpl
out
ja
push
lret
cwtl
inc
add
andb
xchg
lds
mov
lcall
outsl
movsb
add
pop
movsl
jp
mov
cld
mov
sub
pop
jne
and
fcomip
and
jmp
aad
push
xor
lock
inc
dec
sub
inc
loopne
push
test
and
and
dec
jle
adc
jle
ret
mov
lea
ret
sub
or
into
jae
sub
popf
int
test
dec
mov
xchg
xchg
cmc
xchg
sbbb
popa
scas
loopne
xchg
push
sbb
mov
push
mov
leave
cmp
das
hlt
xchg
mov
arpl
fldl
or
or
lods
fnsave
or
or
lea
icebp
pop
rcrb
into
jge
subb
rclb
jae
xchg
and
out
in
cmp
popf
movsb
inc
rclb
ret
enter
or
sbb
lock
daa
shlb
repnz
ljmp
push
adc
xchg
lahf
pop
add
stos
ljmp
inc
popf
es
jno
or
xchg
inc
jo
arpl
cmpsb
push
sbb
sub
mov
dec
ds
jl
movsl
lcall
mov
pop
andb
jge
popf
jl
xor
dec
pop
rcrl
sub
pop
ja
and
fcoml
push
sub
or
adc
shll
mov
and
mov
lar
mov
popa
push
arpl
mov
sub
pop
testl
stos
shll
int
lods
push
scas
sahf
mov
test
pop
fiadds
out
lret
loop
sub
fs
inc
cmpsb
adc
test
ss
in
cmp
dec
iret
stos
out
fsubrl
add
cmp
fucomp
or
pop
into
in
jp
cmc
popf
adc
inc
pop
mov
xchg
repnz
mov
inc
add
xor
mov
sbb
xlat
dec
div
sub
mov
xor
sti
fxch
pop
incb
xlat
gs
out
sub
inc
xchg
fcmovu
rclb
outsl
les
imul
sbb
int3
and
push
jne
insl
xorb
mov
movsl
ja
push
pop
sbb
xchg
or
aad
xor
nop
sbb
aas
shll
shll
clc
into
dec
js
data16
ja
jecxz
mov
outsb
lea
ret
pop
ljmp
cmp
dec
out
jb
pop
gs
inc
and
out
das
jg
mov
shrl
dec
shll
lret
xchg
cwtl
fwait
adc
cmpsl
es
sarb
enter
pusha
mov
faddl
jno
push
loope
outsl
xorb
das
movsl
in
rclb
les
aam
sbb
cmpsb
es
jmp
xor
popa
outsl
dec
xchg
js
imul
test
mov
lods
in
sbb
mov
jg,pn
and
imul
add
insb
mov
lea
fisttpll
jae
clc
mov
aas
fcompl
jp
xchg
rcl
dec
cmp
mov
dec
out
inc
xchg
xor
dec
lcall
lock
or
jl
insl
test
xchg
dec
outsl
and
test
cli
movsl
ja
out
dec
sti
cmc
inc
sub
or
mov
ret
ret
pop
sub
add
pop
sbb
out
push
mov
lock
into
inc
in
mov
xchg
and
into
les
sub
inc
xchg
cmp
adc
sub
mov
dec
pop
jo
jne
cltd
out
mov
cld
mov
xchg
test
fucomip
int3
add
dec
cmp
nop
out
jns
sub
inc
cmp
push
call
lahf
sbb
insb
out
mov
jle
inc
outsl
in
insl
mov
iret
ficompl
add
pop
out
dec
pop
inc
inc
loop
jae
mov
lcall
jmp
scas
pop
fcmovb
movq
js
and
xchg
and
inc
jno
push
iret
and
mov
stos
lret
test
mov
loope
fcomip
bound
cmc
xor
int
or
daa
or
aaa
cmp
pop
or
mov
int3
fsubrl
movsb
pop
scas
sub
fisubs
icebp
movsb
lds
xchg
shrb
nop
and
les
sbb
sub
add
jge
shll
mov
daa
adc
and
addr16
jl
scas
mov
xchg
xchg
mov
xor
jmp
mov
test
adc
out
sub
jae
enter
pop
cwtl
mov
loope
dec
mov
cmp
shlb
mov
dec
xorb
add
out
xchg
xor
fwait
mov
pop
push
repz
dec
mov
lcall
faddl
push
push
sub
push
aas
adc
pushf
or
pop
mov
dec
orb
mov
lcall
int
xchg
sub
mov
testl
icebp
jl
dec
clc
add
mov
inc
sbb
bound
test
mov
outsl
jne
loop
leave
stc
sub
inc
adc
mov
xor
or
mov
cli
push
xchg
shll
mov
mov
inc
cli
repz
adc
shlb
cmc
fs
adc
ss
xchg
inc
jnp
enter
fs
add
data16
push
xchg
mov
jmp
imul
mov
sti
mov
sub
push
cmp
aad
mov
sub
daa
pop
cmpsl
insb
les
fwait
repz
sub
sbb
pop
pop
sub
lea
pop
and
aaa
adc
fcoml
jmp
and
cmc
push
call
test
jbe
jb
es
sub
dec
out
mov
je
or
jecxz
cltd
inc
movb
lea
das
mov
dec
dec
mov
mov
dec
shlb
mov
pop
jne
mov
lods
sti
stos
inc
cmp
xchg
pop
inc
mov
mov
adc
inc
rol
adc
std
xchg
fcompl
push
jl
cmpsl
and
add
jno
stos
mov
lret
dec
or
mov
cmp
mov
inc
test
xchg
popa
rcrl
dec
mov
shl
popf
cli
sub
pop
ret
or
mov
insl
jno
pop
dec
pop
cli
pop
xchg
mov
cltd
ljmp
push
lods
push
je
mov
push
mov
mov
inc
mov
add
movsb
push
test
cmp
fnsave
lods
cmp
iret
ret
push
xlat
sbb
mov
loop
mov
xor
xchg
ja
loopne
mov
cmp
xor
xor
in
xchg
mov
arpl
dec
jecxz
test
fcoms
dec
repnz
or
cld
mov
repnz
mov
jbe
and
out
xor
push
fstpt
sti
inc
in
lcall
shll
mov
in
or
mov
test
and
outsb
mov
pop
inc
hlt
dec
inc
push
data16
je
mov
xor
jl
jmp
leave
fdivr
orl
push
sub
cmp
push
daa
adc
stos
cwtl
int
and
dec
lret
insb
push
adc
jnp
jecxz
jle
shrb
lea
iret
cmp
jg
and
push
cld
jae
pop
and
add
mov
dec
and
fidivrl
jo
mov
js
imul
scas
cmpsb
mov
push
test
rclb
inc
push
popa
repnz
sbb
leave
sub
hlt
sub
jne
enter
push
pminsw
into
xor
imull
or
fimuls
int3
adc
pop
fimuls
faddp
sub
insb
rorb
scas
dec
jg
and
out
aas
movsb
pop
jmp
lahf
jbe
inc
inc
jge
mov
sbb
out
jno
inc
sarb
jmp
add
push
fldt
xor
inc
or
lahf
pop
sbb
push
sahf
push
test
fcompl
lea
add
or
fs
enter
pop
xlat
jne
push
popf
repz
rorb
in
in
sti
jecxz,pt
and
push
lret
jno
ret
lahf
push
add
mov
xor
imul
js
cmc
mov
or
push
pop
push
pop
jle
fsubrl
jl
outsb
fisttps
mov
ja
imul
movsb
or
mov
popa
popf
and
fwait
push
int
cmp
test
mov
pushf
mov
ss
sahf
iret
cmp
test
mov
subb
or
stc
loope
test
adc
mov
mov
fadd
in
sub
add
adc
test
jl
mov
add
jmp
or
push
cmp
sub
jle
sti
icebp
ja
lds
mov
mov
loop
add
xor
data16
jg
lods
ds
mov
xlat
pop
mov
push
mov
pop
or
sti
aaa
mov
in
lret
loopne
addr16
inc
lods
adcl
inc
ficoml
push
dec
mov
xchg
jecxz
stos
sbb
inc
es
or
jb
rol
call
dec
jecxz
pushf
js
pop
jmp
mov
cs
aas
sub
adc
divl
xchg
or
je
rep
jecxz
pop
dec
ljmp
pop
inc
stos
mov
xor
mov
in
andl
add
jne
add
mov
fs
push
lock
mov
das
sbb
lahf
sub
setns
mulb
adc
cmp
sti
cmpsl
and
icebp
mov
mov
fsubs
mov
xchg
sbb
icebp
cmp
sarb
inc
leave
aam
out
lret
shlb
pop
enter
sbb
notb
lds
call
insl
mov
je
mov
sub
adc
mov
pop
jb
scas
sbbb
xlat
in
loope
rclb
mov
fstpl
inc
clc
xor
xchg
xchg
sbb
xorb
test
pop
adcl
inc
mov
adc
xchg
mov
mov
imul
fs
xor
sub
mov
jnp
push
xor
xchg
ja
jb
dec
in
jne
sub
push
fwait
and
push
mov
call
xor
adc
mov
fwait
jge
jns
lret
test
and
loope
ret
inc
outsl
mov
xchg
fdivrs
mov
or
jp
jle
mov
or
mov
xchg
dec
and
mov
mov
mov
cmp
mov
add
out
cmp
sub
ss
push
data16
shrl
out
gs
mov
adc
jle
sub
bound
xchg
cmp
cwtl
dec
cmpsb
ret
mov
inc
pop
sbb
mov
repz
popf
inc
mov
mov
int3
sbb
fisubrl
lret
xchg
cli
jae
sbb
or
add
or
xchg
inc
ja
cmp
cld
mov
push
lcall
jne
arpl
inc
or
sbb
cwtl
inc
or
xlat
add
cltd
ror
int3
xlat
pop
or
push
push
lds
and
arpl
out
mov
jmp
sub
testb
subl
and
xor
mov
and
ds
jb
mov
mov
bound
jo
in
fs
jl
fists
xor
cmpsl
xlat
pop
inc
push
insb
mov
xor
pusha
enter
pop
push
iret
imul
pop
push
clc
mov
ds
lahf
nop
movsl
scas
xchg
cmpsb
and
movsl
mov
shlb
out
sbb
jecxz
mov
jl
xchg
mov
pop
insb
sub
dec
pop
mov
fcomps
mov
mov
pop
adc
sub
rol
bound
push
add
jg
xchg
mov
xor
mov
mov
mov
mov
sub
testl
or
lea
cmp
inc
sahf
jb
jnp
js
jl
lret
outsl
test
loop
test
stc
cwtl
xor
fs
push
adc
imul
pop
jmp
fdivrs
test
cli
mov
mov
arpl
cmpb
clc
or
push
sbb
repnz
xor
push
fsts
cmp
imul
call
mov
mov
mov
add
inc
xor
jb
dec
sti
out
in
scas
call
shl
loopne
pop
es
dec
sbb
inc
mov
mov
les
stos
repz
pop
xchg
cmpsb
pop
sub
jge
cld
mov
pop
xchg
adc
sub
jmp
cmpsb
ds
pop
das
nop
test
mov
nop
dec
ffree
pusha
je
xor
jecxz
push
ret
dec
dec
hlt
lea
mov
fisubl
mov
sahf
cltd
mov
mov
cmp
cltd
in
mov
into
das
inc
jno
jmp
sbb
mov
out
imul
gs
mulb
dec
std
loop
inc
cwtl
int3
or
cmpsl
and
push
mov
js
insl
cld
add
mov
sub
mov
repz
lock
es
pop
mov
popf
rorb
out
mov
pop
ret
in
jo
cmc
movsb
out
aas
mov
dec
push
int3
jmp
xor
clc
frstor
adc
sub
test
xchg
jae
mov
add
cmpsb
add
aaa
in
cltd
in
in
inc
fwait
xorl
shlb
fnstsw
clc
imul
add
mov
xlat
pop
or
out
jae
imul
dec
inc
pushl
in
xor
leave
or
push
sbb
insl
jno
dec
movsb
push
imul
fcomps
bound
pop
jecxz
push
bound
add
pop
pop
in
repz
bound
and
jns
inc
push
lods
arpl
xchg
adc
or
lods
push
inc
pop
pop
pop
mull
hlt
idivl
shl
mov
and
mov
in
add
repnz
push
add
jae
addr16
and
shr
mov
cmp
std
or
sub
xor
inc
push
movsl
or
stos
jle
inc
and
or
insb
sub
repz
add
jle
mov
in
test
ret
mov
hlt
ret
icebp
pop
xchg
inc
xor
jae
cmpsl
pusha
push
mov
sbb
dec
cltd
lock
adc
sbb
ja
imul
scas
insb
push
and
aaa
xchg
pop
adc
aam
mov
mov
or
arpl
lret
es
cwtl
addps
jne
lds
cmc
sbbl
xchg
int3
popf
pop
cltd
pop
cmp
mov
or
inc
vpsraw
sarb
scas
or
and
lcall
outsl
pop
sub
push
in
jbe
sub
mov
lds
sub
cmp
pop
mov
dec
loope
or
mov
push
es
jecxz
lahf
fwait
inc
add
and
jb
aam
lods
push
test
xor
enter
pop
push
lods
push
lock
adc
sub
dec
lds
dec
outsb
push
sub
fbld
mov
sub
in
pop
test
cmp
call
pop
punpcklbw
mov
and
lcall
push
faddl
xor
sub
lods
outsb
movsl
out
adc
sub
sbb
mov
add
and
or
int
inc
add
testl
rorl
out
mov
cmp
push
add
lcall
outsl
arpl
loop
out
stc
dec
clc
dec
fs
and
cmp
adc
stc
push
and
fdivrs
pop
ljmp
jle
xor
cld
mov
or
rclb
cmc
mov
aam
pop
add
out
or
imul
jecxz
negw
cmp
scas
sub
inc
fdivr
sub
mov
mov
fst
sti
xchg
test
ficompl
nop
mov
aam
rcl
fldcw
jge
repz
sbb
sbb
mov
test
xchg
adc
pop
push
pushf
into
sti
cmp
rcrb
cs
fimuls
nop
test
aas
dec
jl
jb
std
xchg
dec
push
ds
data16
sub
jno
dec
es
shll
cwtl
call
push
ret
mov
cmp
mov
xor
sar
pop
pop
pop
fisttps
inc
mov
das
sti
cmp
mov
popf
push
lods
and
lea
lods
jne
imulb
stos
add
and
push
jbe
icebp
dec
mov
lret
cwtl
mov
mov
loope
lock
sub
stos
icebp
lret
arpl
sub
adc
ret
je
nop
es
push
insl
addb
dec
loope
je
nop
popa
das
pop
pop
lods
cwtl
jb
mov
mov
lcall
maxps
mov
testl
test
int
jg
adcb
frstor
pop
aaa
xchg
in
inc
out
int3
shll
aad
pop
fsts
lods
out
mov
xchg
dec
dec
jmp
sbb
mov
xor
sub
xor
and
xchg
dec
dec
or
test
call
jmp
inc
pop
cwtl
rorb
sub
out
popf
add
jae
shrb
and
pop
gs
inc
test
popa
inc
pop
mov
daa
inc
mov
push
sarb
andb
fchs
mov
pop
inc
mov
push
cmp
dec
jmp
xchg
pop
aad
ficomps
test
hlt
call
xchg
fwait
mov
cmp
and
sub
xchg
enter
nop
fsubl
adc
lock
in
mov
mov
pusha
pop
sub
push
mov
ret
dec
pop
lret
inc
jno
ja
push
xor
shrb
or
mov
lret
ficoml
adc
sbb
mov
imul
scas
iret
sub
adc
sti
inc
mov
idivb
xchg
pop
add
or
inc
arpl
pop
xor
push
xor
xchg
or
in
add
and
mov
fisubrs
xchg
fcmovb
cltd
or
les
ds
cmp
enter
adc
push
pop
cmc
jbe
dec
inc
jge
aam
sbb
sti
xor
and
lods
jno
mov
testb
fisttps
test
in
jo
out
nop
lahf
mov
mov
test
cmp
add
inc
in
sbb
enterw
pop
xchg
or
and
cmp
adc
or
stc
push
std
ds
iret
mov
and
je
addb
pop
sbb
dec
xor
int
sbb
or
testl
lcall
jle
scas
and
mov
adc
or
jg
mov
xchg
mov
shrl
inc
and
jb
xchg
int
movsl
cwtl
sub
int3
shl
add
icebp
shll
add
xchg
inc
mov
mov
cmpsl
fildl
inc
insl
shl
pop
das
stc
push
arpl
adc
xchg
je
cmpsl
scas
movsl
fdiv
outsb
fwait
out
scas
sar
sbb
dec
xlat
cmp
mov
or
push
cmc
addb
or
mov
and
xor
adc
adc
roll
data16
shrl
test
fcmovbe
sub
xchg
sti
in
dec
test
inc
popf
cli
hlt
test
mul
sub
cmp
iret
daa
fxam
dec
add
jbe
mov
mov
test
cmp
ljmp
pop
in
lock
pushf
jns
sub
rcr
cs
inc
nop
pop
xchg
push
aas
out
pop
lods
jb
add
pop
aas
je
movsb
cmp
cmp
push
push
jb
lea
clc
sti
call
adc
xor
sub
dec
jle
jl
add
test
add
inc
enter
cmpsl
xchg
stos
das
fidivrl
stos
mov
push
out
and
out
add
cld
leave
ja
in
pop
std
xor
push
cmpsl
and
mov
adc
push
inc
push
mov
dec
mov
xor
add
or
shlb
or
mov
and
add
sti
adc
xor
xchg
xchg
mov
in
out
or
inc
iret
popa
lods
add
dec
mov
fnsave
mov
jb
jbe
mov
mov
test
jae
dec
xchg
inc
push
jge
test
int
xchg
clc
loope
outsb
xchg
enter
mov
rorl
out
sbb
cmp
inc
xchg
xchg
int3
jg
mulb
push
adc
fnstenv
mov
jae
mov
test
push
into
ja
mov
addb
icebp
or
or
fwait
scas
mov
jg
dec
repnz
add
mov
bound
jns
adc
fstl
fstpl
fcomps
xor
sbbl
mov
mov
lahf
mov
rorl
into
popa
mov
mov
mov
fbstp
pop
mov
xchg
cmc
outsl
lods
add
cwtl
out
inc
fwait
sub
daa
mov
push
and
or
sub
mov
jnp
xor
jle
sub
ret
push
or
mov
ds
pop
add
jae
jl
outsl
jae
call
push
push
addr16
mov
dec
push
xor
inc
inc
into
xchg
call
imul
les
lds
adc
aaa
pop
mov
dec
push
or
push
dec
push
hlt
push
mulb
arpl
lahf
test
arpl
push
repz
add
call
fistpl
jg
ficoms
jnp
or
aad
leave
sbbb
pop
pop
xlat
cmp
pop
test
jbe
loopne
jge
push
and
mov
adc
cmp
mov
adc
jl
mov
push
push
insb
sbb
mov
lahf
fnstcw
push
pushf
jne
test
or
jle
lret
aaa
cmpsb
cmpsb
mov
les
pop
shl
leave
push
adc
sub
popf
dec
cmp
push
jns
les
in
fwait
adcb
mov
out
mov
xor
dec
or
fisubs
jp
loope
fidivrl
push
jg
or
lcall
jg
pop
in
sub
in
imul
shl
or
mov
jl
mov
idiv
and
mov
inc
int
out
sub
scas
test
jae
sarl
mov
xlat
sbb
sub
pop
xchg
mov
or
xchg
cltd
outsl
and
loop
std
dec
stc
mov
xchg
mov
ss
adc
scas
pop
insl
out
fs
push
cmc
je
call
clc
xor
sti
insl
cmpsl
into
aas
ss
inc
loop
xor
adc
out
in
adc
inc
adc
and
add
cmpsl
jg
std
lea
lods
fidivrl
mov
pop
sub
mov
mov
mov
pop
sti
repz
pop
insl
andl
popa
push
dec
gs
push
inc
clc
sti
ja
sbb
inc
cmp
dec
xchg
out
sbb
sbb
pop
lahf
mov
test
sbb
aad
or
nop
cmp
mov
lea
leave
jb
cmp
dec
inc
and
adc
dec
outsb
pop
push
xor
lahf
mov
call
shl
into
mov
fildl
dec
imul
cmp
stc
inc
ret
das
mov
ja
mov
lret
movsb
mov
imulb
xchg
sar
xlat
cmpsl
push
cwtl
std
cmp
mov
std
lea
cmpl
jne
sbb
pop
lock
arpl
pop
jmp
jmp
sub
jmp
in
add
es
dec
insl
hlt
lret
iret
dec
inc
pop
adc
pop
sub
popa
pop
shrl
outsl
mov
dec
ret
xor
sbb
pop
cmp
test
mov
xchg
cmp
inc
lock
and
daa
xchg
out
lods
sub
shl
out
sbbb
stos
dec
jno
out
pushf
iret
dec
xchg
fisubrl
or
push
lret
push
or
mov
jbe
mov
frndint
push
mov
out
ja
mov
mov
mov
jge
fucom
outsb
push
sub
adc
add
mov
mov
in
pop
xor
call
mov
mov
pop
mov
or
shr
jp
add
mov
xor
mov
pop
xorl
into
mov
loopne
add
xchg
lcall
xchg
shl
adcl
out
xor
and
ljmp
inc
mov
insb
imul
mov
push
in
pop
adc
mov
iret
adc
sbb
add
nop
inc
xchg
icebp
adc
popf
fdivp
pop
mov
enter
clc
imul
lods
pop
imul
push
xchg
aas
jg
or
dec
adc
lret
or
pushf
cmpsl
add
hlt
mov
lea
xlat
frstor
push
mov
int3
or
ret
mov
int3
pop
add
fdivp
mov
lds
lret
in
scas
test
stos
and
and
cmp
ret
movsb
adc
push
repz
jbe
jmp
inc
sbb
mov
and
cmp
xor
cwtl
jg
pop
test
je,pn
push
dec
pushf
xor
or
and
push
outsl
insl
ss
rcll
cmovae
xlat
cmpsb
aas
xchg
in
out
jecxz
inc
in
repz
adc
xchg
mov
loope
sbb
sub
add
cmp
jmp
movsl
lret
push
add
pop
fcompl
dec
sbb
es
sahf
add
jle
xor
pop
or
js
loopne
pop
mov
xchg
or
shrl
inc
xor
into
push
sub
mov
cld
outsl
mov
je
mov
jl
mov
outsb
in
hlt
jnp
push
js
mov
or
mov
enter
xorl
lret
mov
pop
push
sahf
decb
test
cwtl
outsl
add
pop
stc
je
imul
adc
add
ret
cmp
imul
cmpl
cmp
or
push
into
and
push
push
jecxz
xor
ds
pusha
push
pop
adc
mov
add
xor
lods
sar
mov
imul
into
push
aam
push
gs
sti
mov
and
gs
sbb
dec
les
out
push
jbe
les
inc
xchg
mov
mov
imul
push
pop
push
cmp
adc
pop
aam
iret
outsb
inc
jmp
push
cmp
inc
std
xchg
aad
mov
out
aas
sub
adc
mov
sub
inc
imul
pop
data16
push
push
mov
mov
mov
jno
mov
or
pop
sub
dec
push
jne
cs
inc
fs
inc
and
inc
frstor
das
cwtl
push
mov
ret
and
scas
in
lcall
std
jle
mov
cmpsl
pop
sub
icebp
aam
iret
cld
lods
add
in
adc
cmp
lock
push
dec
rcr
cld
subl
mov
mov
xor
inc
inc
dec
ds
loop
xor
in
ljmp
cmpsb
lods
ftst
jl
cs
sub
dec
cmp
mov
jl
roll
xor
test
mov
ficoml
loop
fstpl
mov
clc
push
sbb
dec
sbb
cld
shll
xor
and
cmp
out
dec
dec
xchg
and
mov
push
out
ret
xor
fidivl
xor
or
mov
jns
pop
dec
inc
adc
test
sub
xchg
dec
movsb
cmpsl
out
inc
pop
in
or
or
fwait
or
jp
rolb
in
add
jg
out
outsl
enter
mov
jns
jnp
in
in
xchg
dec
rcrb
dec
in
pop
inc
stos
jne
jg
and
es
sub
xor
mov
mov
aam
out
and
out
out
xchg
insl
sub
jmp
mov
and
rcll
or
and
stos
dec
test
and
pop
insb
aam
add
jle
fwait
shl
lock
pusha
das
xor
iret
jae
push
ret
sub
out
inc
xchg
fnsave
xchg
adc
popf
add
cltd
add
inc
mov
fisubrl
or
imul
jle
clc
aaa
adc
push
mov
adc
xor
leave
hlt
and
arpl
mov
pop
or
test
sbb
sarl
add
fistps
clc
das
data16
add
shr
les
jg
in
push
in
fwait
xor
inc
inc
dec
jbe
data16
jge
cld
cwtl
sbb
ret
andl
mov
bound
dec
mov
orl
lahf
push
sub
cmc
insb
jo
test
lahf
pop
leave
xchg
push
inc
cltd
test
sahf
jae
inc
jmp
ret
pop
in
into
mov
push
pop
push
dec
outsl
push
push
shl
cmp
ds
pop
movsl
sarb
negb
pop
stos
testb
ds
sbb
cs
cmp
xor
js
fs
jbe
das
push
cmp
incb
pop
adcl
cmp
mov
sub
or
adc
cltd
push
jg
movsb
std
mov
push
mov
inc
mov
cmp
and
jg
push
jnp
mov
sub
js
inc
xchg
dec
sbb
mov
mov
sbb
xchg
test
pop
sbb
fists
xchg
stc
sub
fs
push
xor
ss
adcl
out
pop
nop
cli
mov
jno
xchg
or
cmp
imulb
or
mov
add
inc
or
sbb
mov
int3
imul
jp
add
lods
test
xor
inc
stc
dec
sub
ja
in
out
in
mov
sub
gs
push
test
cld
push
stc
dec
and
inc
push
lock
rorl
xchg
jne
cs
movsb
or
mov
adc
xor
out
cs
out
aas
aad
lret
cld
nop
lock
sub
jb
inc
jle
xor
jecxz
rcrb
insl
rcll
mov
jo
mov
inc
popf
dec
aas
ds
fisttpl
int
inc
pop
mov
inc
clc
out
push
das
ja
aaa
mov
jns
ret
or
jmp
nop
xchg
std
and
nop
and
mov
stos
out
ljmp
fwait
mov
mov
adcb
adc
lahf
pop
daa
jle
shrb
repz
aam
inc
jecxz
mov
lods
es
clc
insl
ret
dec
cmp
mov
ljmp
jg
inc
or
mov
inc
adc
push
pop
dec
mov
fisttpl
in
clc
sbb
addr16
arpl
movb
inc
sub
clc
xchg
test
xchg
out
adc
rcl
mov
subl
push
inc
mov
xchg
sbb
xor
mov
cmp
jp
xchg
dec
cmpsl
pmullw
mov
imul
xlat
or
dec
and
jae
xor
fisttps
out
dec
fidivrl
or
and
in
sbb
mov
shrb
out
xchg
pop
add
cmp
dec
xchg
std
cmpb
adc
and
das
jle
mov
ja
fisttps
sarl
jmp
push
ror
xorl
inc
gs
sub
sbb
dec
push
loopne
subb
filds
insb
aas
pop
sarb
aaa
lret
rolb
lret
iret
sarb
ret
add
inc
mov
jae
add
popf
sub
int
shll
inc
mov
ficompl
scas
xchg
add
pushf
sbb
repz
je
scas
pop
and
push
lcall
mov
inc
out
leave
imul
hlt
aaa
sbb
out
xor
or
decl
aaa
xor
or
lcall
scas
mov
cmp
lds
fimull
scas
scas
sbb
adc
out
aad
mov
push
xchg
mov
jge
es
sbb
adcb
mov
push
adc
out
or
ret
mov
xor
rcr
lahf
ss
push
adc
rorl
sub
inc
js
sub
inc
je
in
mov
pop
enter
pop
nop
mov
cwtl
loope
cmp
dec
push
cmp
lahf
cmp
xchg
outsl
dec
orb
xchg
mov
add
dec
xor
mov
cmpsb
pusha
pop
push
cmp
js
mov
pop
xchg
aas
lcall
fcmovnu
pop
cmp
and
pop
adc
je
nop
jg
dec
sbb
jmp
pop
pop
and
sbb
jle
mov
fiaddl
std
sub
cmc
xchg
lret
loop
add
jl
push
insb
cmp
mov
pop
enter
jne
push
es
sub
popa
adc
arpl
cmp
fisttps
test
jmp
jmp
sub
dec
cmp
into
call
adc
pop
sahf
daa
ret
adc
stc
lods
imul
leave
push
data16
xor
xchg
inc
inc
xlat
jg
xchg
sub
lret
mov
hlt
xchg
mov
add
gs
test
xchg
outsl
xor
pop
push
inc
xor
pusha
les
cmpsb
stos
xchg
cmp
ss
nop
movl
call
pushf
and
jb
cs
inc
mov
aas
push
loope
insb
push
fimuls
dec
test
fnstsw
jecxz
ljmp
aam
mov
mov
repz
xchg
dec
sub
mov
mov
sub
inc
in
or
adc
cmp
xor
sbb
cmp
fwait
idiv
mov
push
cwtl
cs
push
inc
dec
icebp
adc
cld
add
lret
ret
mov
hlt
mov
bound
inc
stos
jae
jle
lock
sahf
aam
and
ret
aas
mov
lret
insl
test
and
scas
movsb
cmp
mov
popf
popa
mov
jmp
mov
mov
pop
push
inc
mov
cmp
cmp
push
stos
push
cltd
das
jbe
test
xor
imul
sahf
sbb
int
shl
and
loopne
sbb
xchg
scas
lods
movsl
push
bound
pushl
inc
jns
popa
subl
imul
sbb
xchg
test
out
fildll
pop
sbb
inc
dec
int3
mov
test
fwait
push
push
push
push
leave
gs
cli
sub
mov
jo
in
sahf
fists
jmp
lods
mov
jae
addr16
or
mov
fsubs
mov
jg
pop
dec
pop
mov
jne
pop
and
movsl
loopne
fildll
add
jmp
and
addl
and
lods
mov
add
ficoml
inc
test
mov
jmp
jle
fstps
pusha
gs
iret
xor
rol
dec
icebp
pop
fldl
inc
test
push
jae
fisubrs
sbb
and
inc
inc
pop
mov
xchg
pop
push
sbb
push
std
imul
scas
scas
mov
mov
cmp
xchg
shll
hlt
xorb
std
out
addr16
loopne
or
jp
stos
aaa
out
and
into
add
jbe
pop
sbb
xor
lret
ljmp
inc
fisubl
movsl
andl
movsb
mov
ret
push
in
sbb
lods
sbb
cld
cmp
testl
dec
jnp
adc
repz
cmpsl
xor
sbb
das
lahf
push
and
test
xor
hlt
inc
pop
stos
das
cmpsb
enter
pushf
aas
xchg
xor
pop
pop
iret
scas
ss
enter
imul
ds
cmc
shlb
xlat
mov
pop
push
and
mov
xor
push
ljmp
js
div
pop
add
fisttpl
adc
faddl
add
outsb
test
and
dec
aad
jg
pushl
mov
or
push
test
addl
xchg
idivl
cmpl
cwtl
mov
pusha
sbb
xor
addb
inc
loop
fwait
dec
stc
cltd
adc
fs
push
adc
jns
mov
xchg
fcomps
arpl
xor
cmp
inc
rorb
mov
into
lret
insl
pop
cmc
arpl
or
xchg
cltd
adc
sbb
adc
mov
inc
or
push
lods
jbe
test
nop
fwait
xchg
mov
sbb
in
pop
insb
inc
sti
scas
idiv
mov
push
hlt
loopne
pushf
sub
iret
inc
inc
inc
mov
fprem
subl
repz
xchg
sti
jo
sbb
sbb
movl
fcoms
pop
es
rclb
jmp
ret
jo
sub
nop
cmpsb
mov
dec
jb
sbb
mov
sub
pop
jecxz
inc
mov
popa
mov
gs
into
stc
add
push
loopne
dec
adc
pop
fistpl
jge
inc
imul
inc
cmp
xor
dec
pop
mov
test
lahf
idivb
pop
std
jae
bound
sbb
hlt
mov
pop
loope
cld
sub
test
mov
stos
adc
leave
int3
es
gs
rclb
cld
sub
sub
sbb
ret
into
test
mov
fldt
cvtps2pi
loope
xchg
out
fisttpl
ljmp
shrl
cmp
and
jns
dec
setns
mov
imul
mov
inc
lret
push
dec
outsl
paddusw
adc
xchg
sbb
sarl
fsubrs
sub
xchg
negb
aam
cmp
js
xor
push
xor
in
mov
subb
jne
push
test
movsl
pop
ja
inc
ret
movntq
jne
or
inc
xchg
fwait
cltd
mov
addr16
adc
or
jns
popa
mov
xchg
cmp
test
pop
js
mov
fcomps
mov
mov
sbb
cmp
mov
push
fisttps
xchg
out
push
jmp
in
push
lds
dec
push
std
or
mov
hlt
stos
mov
xchg
pushf
insb
adc
clts
jle
out
in
mov
aam
nop
lods
lret
ret
daa
pop
adc
mov
mov
inc
jae
add
fnsave
jp
mov
aaa
std
pop
inc
les
fcmovb
add
xchg
mov
cltd
sbb
mov
imul
lods
scas
and
push
sub
mov
call
stos
int
int
cmp
out
xor
dec
icebp
or
cmc
test
aaa
scas
outsb
decb
lcall
int3
or
test
pop
fiadds
lock
cmp
movsb
scas
and
mov
cmp
cmp
cmp
fldpi
jbe
xchg
pop
jge
sub
inc
mov
sub
and
inc
xor
jl
dec
and
add
js
cltd
xor
ja
xchg
mov
adc
inc
inc
xchg
xor
in
sbbl
sub
insb
pop
push
sub
loope
and
sub
loopne
cmp
roll
movsl
out
repnz
push
int
enter
jb
mov
add
fidivl
inc
mov
lcall
mov
js
rcll
pop
test
lcall
inc
fdivl
daa
dec
outsb
pop
pushf
lods
adc
sub
jg,pn
mov
mov
cmc
mov
adcb
push
test
or
mov
sub
cwtl
lret
enter
push
push
sahf
mov
test
outsl
jl
and
inc
and
push
push
hlt
fs
out
adc
pop
ss
mov
xchg
pop
aad
push
movd
sti
lods
mov
xor
adc
cmp
test
pop
into
scas
fnstsw
cmc
sub
xchg
xor
in
pop
fmull
sbb
imul
ljmp
push
dec
lods
pop
ljmp
std
mov
insb
mov
lret
sti
pop
aas
pop
inc
mov
subb
int
xchg
dec
inc
mov
fldcw
jnp
les
ljmp
push
inc
push
cmp
int3
movl
jo
pushf
jnp
mov
pop
lea
sarl
aad
push
es
andl
jb
pop
mov
xchg
pushf
xor
cmp
xchg
out
fs
or
mov
loopne
lea
xorl
ret
xor
ret
repnz
adc
adc
push
mov
sahf
shrl
rcl
push
out
jle
or
sbb
hlt
cmpsl
sbb
shl
xor
adc
pop
je
lret
mov
xchg
and
and
test
test
adc
dec
subb
icebp
adc
in
xchg
ret
pop
lods
push
es
sbb
dec
sub
xchg
sub
xchg
add
imul
ljmp
and
adc
mov
add
cltd
popf
adc
mov
xchg
int3
push
rdtsc
test
clc
inc
ss
ret
jno
sbb
adc
rcll
jle
stos
mul
pop
out
mov
xchg
cmp
xchg
lods
ljmp
or
pop
loopne
or
mov
xchg
pop
shrl
fucomp
mov
inc
jnp
jmp
fwait
enter
pop
fisubl
je
test
xor
cmpsl
out
jmp
inc
lea
in
test
xchg
mov
push
mov
xor
and
mov
icebp
inc
mov
pop
mulb
dec
and
or
fildll
jp
mov
es
mov
andl
es
xchg
ds
or
push
popf
jp
stos
push
dec
out
mov
and
mov
mov
fidivrl
out
in
popf
cmp
in
iret
out
imul
loopne
aad
dec
xor
inc
mov
mov
mov
dec
lock
inc
or
jg
or
inc
imul
fsubrs
outsl
sbb
adc
inc
mov
cmp
leave
shlb
hlt
sbb
aaa
arpl
xor
out
mov
jo
push
or
push
mov
pop
mov
or
and
ja
xor
test
add
and
cmp
test
movsb
dec
pop
push
jle
scas
jbe
jecxz
jge
ficompl
add
cmp
sbb
push
cmp
mov
sbb
jl
push
push
dec
pop
xchg
out
push
mov
or
jo
pop
lahf
xchg
lea
push
mov
test
lret
inc
and
cmp
dec
daa
mov
pop
dec
mov
loope
sti
lds
imul
inc
jle
movsl
out
or
and
daa
fcoml
test
sbb
mov
adc
adc
dec
jo
adc
dec
bnd
aas
or
add
lcall
insl
fcompl
ljmp
popa
mov
rolb
push
mov
push
les
lret
scas
add
aas
xor
xchg
int
and
sub
mov
idivl
jecxz
jmp
push
jno
rolb
sbb
xchg
cmp
test
loope
cmpb
pop
loop
and
stc
pop
sub
fcoml
mov
xor
adc
mov
cmp
fcoms
xor
cli
cmpb
xor
pop
cli
cmp
jecxz
or
inc
mov
icebp
ret
mov
pop
sti
cmpl
fbstp
sbb
push
scas
data16
sbb
xchg
inc
xlat
cmp
in
rorb
adc
xor
mov
jmp
adc
push
dec
sbb
dec
js
pushw
xchg
repz
xchg
subl
dec
cmp
sub
jbe
mov
adc
imul
cs
rcl
xchg
clc
lods
nop
pop
and
aas
inc
ror
jb
enter
cmp
jecxz
lret
addr16
call
dec
xchg
sub
orl
fisttpl
sbbb
push
inc
jns
lock
shll
das
repz
mov
push
loope
and
lret
and
cmc
xchg
std
sar
cwtl
pop
das
std
cmpsl
sbb
out
xchg
test
pop
arpl
lret
adc
mov
mov
pop
cmp
jg
xor
shl
popa
lods
sub
rcl
scas
mov
ret
in
sbb
es
dec
jae
pop
or
dec
and
int3
ljmp
cmp
mov
jbe
jb
or
scas
xchg
scas
xorps
add
push
int
cmpsb
inc
mov
imull
mov
fstp
call
mov
inc
xor
sbb
ret
sahf
shr
lahf
inc
pop
xor
push
out
out
jnp
test
mov
decl
call
les
or
jle
inc
mov
xchg
in
test
test
ja
sbb
andl
inc
mov
negl
xchg
add
dec
inc
jne
lret
bound
mov
in
sub
push
mov
cltd
jle
mov
test
je
jp
bound
mov
dec
push
mov
int3
xlat
adc
out
jae
aad
shll
mov
insl
jmp
sbbb
out
cmp
mov
movsb
inc
push
fcompl
stos
mov
and
fbstp
jnp
idivb
adc
or
ret
push
iret
dec
cs
pop
andb
inc
leave
ret
push
arpl
inc
mov
ret
fisubrl
or
xchg
pusha
and
sbb
jb
imul
and
mov
xchg
adc
or
mov
mov
jne
inc
out
hlt
arpl
popf
inc
jmp
inc
subl
in
aaa
sub
testb
cmp
add
popl
loopne
iret
pop
jecxz
outsb
faddp
je
lds
cmp
pop
mov
cmp
mov
and
movsb
je
xchg
mov
cmp
sbb
cmp
flds
dec
enter
pushf
outsb
xor
sub
dec
aaa
push
popa
and
mov
inc
adc
mov
frstor
push
ss
and
pop
mov
sub
repnz
cmp
cld
cmp
xor
fs
movsl
cmc
sub
and
test
sbbb
stos
add
xor
aam
xor
or
sbb
jne
and
lcall
jnp
push
mov
sub
mov
fwait
adc
loopne
lea
es
add
jecxz
mov
push
sub
dec
mov
int
mov
maskmovq
movsb
hlt
lret
dec
rcrl
mov
rorl
shlb
jle
fdivrs
outsl
cmp
loop
xor
stc
mov
jmp
adc
pop
repz
xlat
mov
fistps
fmul
in
out
int
cli
mov
leave
enter
lock
into
je
out
cmc
mov
cs
sbb
jmp
jbe
ljmp
jno
add
scas
shlb
cwtl
stos
lods
sub
sbb
sub
inc
mov
mov
ljmp
pop
or
loopne
lcall
jge
xchg
fstps
sbb
repz
adcl
lret
or
movl
jno
pushf
shll
fldt
cltd
mull
fscale
call
out
jb
imul
or
imul
jo
imul
test
mov
outsb
mov
call
dec
xchg
jo
jp
mov
sbb
jb
add
inc
jg
inc
das
shl
push
daa
dec
lods
mov
cwtl
lret
xchg
je
add
add
vpunpckhbw
cwtl
sbb
inc
mov
fcompp
jmp
lret
jg
inc
mov
rorl
pop
ret
ror
stos
mov
cmp
aam
in
ret
jnp
int3
adc
or
xchg
ja
stos
cltd
xchg
ljmp
outsb
lods
pop
and
gs
jns
push
movzbl
add
aas
fwait
test
or
push
xchg
adc
fldl
cmp
shll
sub
pop
fsubl
fucomip
push
mov
xchg
lret
into
push
push
into
sub
clc
xor
cmp
and
mov
test
push
shrb
pop
iret
ret
lret
sub
test
jmp
fwait
cmp
mov
out
add
mov
test
mov
jns
or
add
xchg
sub
adc
mov
test
mov
jp
mov
stos
mov
cmp
dec
out
imul
dec
pop
fildll
es
jmp
dec
pop
pop
cmpl
movsl
out
push
imul
addl
cs
cld
rolb
and
cmp
insb
push
inc
out
adc
sahf
jle
sbb
sbb
cmp
lods
hlt
add
loopne
pop
mov
aaa
mov
lcall
popf
out
scas
push
mov
inc
rolb
fstpl
pusha
sbb
and
imul
andnps
and
stos
mov
loope
or
mov
cmp
inc
in
jecxz
or
data16
aaa
jmp
xchg
or
push
add
jl
pop
adc
lds
mov
mov
scas
rorl
icebp
sub
push
dec
mov
sbb
sub
fimull
sbb
out
daa
sbb
cmp
out
inc
aad
dec
aaa
std
mov
xor
mov
sub
xor
inc
test
pusha
pushf
out
inc
inc
pop
insl
cmpsb
aam
stos
in
cmp
cs
pop
lret
lods
sub
mov
mov
clc
dec
cmp
in
ds
mull
cwtl
cmp
add
cmpsl
jo
add
xchg
mov
notb
dec
js
fmuls
pop
add
das
lcall
fstp
mov
pop
sub
daa
iret
outsb
or
adc
mov
in
mov
mov
xor
popa
loope
and
cmp
xlat
dec
int
add
sub
lcall
hlt
and
cmpsb
or
sahf
jae
mov
inc
lcall
sbb
xor
div
fs
or
push
orb
xor
fadds
mov
xor
sarl
into
push
in
cmc
jg
pop
xor
repnz
adcb
push
fldl
add
push
lods
adc
mov
xlat
mov
lds
outsl
aam
in
or
push
sti
imul
das
leave
gs
gs
loopne
push
push
dec
pop
fldenv
inc
nop
lods
sbb
aam
stos
fldenv
or
add
xchg
pop
mov
mov
movl
push
adc
inc
pushf
jl
add
sub
mov
and
nop
adc
xor
test
jl
or
dec
cli
pusha
lds
shl
rcrb
insl
adcb
xlat
xchg
and
and
inc
mov
cmp
mov
cmpl
repnz
dec
nop
inc
xchg
inc
lcall
mov
ret
in
and
and
testb
std
popa
cwtl
aad
push
cmpsl
sbb
mov
mov
stos
cld
fnstcw
test
out
icebp
das
mov
in
mov
cmpsl
scas
lock
enter
sub
aam
push
pop
es
cmp
sub
call
xchg
ljmp
popa
adc
inc
or
sbb
mov
in
add
adc
pop
in
cltd
inc
lret
jno
mov
sub
push
pop
cs
sub
pop
clc
hlt
sbb
xchg
fistpl
inc
inc
jb
cwtl
cli
pusha
pop
xchg
les
pop
xchg
adc
inc
push
test
addr16
xor
icebp
jnp
clc
mov
xor
mov
xchg
test
test
mov
ja
pop
loopne
dec
sbb
test
or
and
fwait
push
lahf
movsb
push
inc
lcall
cmpl
dec
jns
mov
movsl
sub
xchg
ja
jne
cmp
sub
pop
mov
jp
int
mov
jno
mov
stos
out
dec
leave
xchg
arpl
mov
sbb
enter
xor
adc
xchg
sbb
or
jmp
push
fidivs
xchg
push
pop
cmpsl
mov
outsl
and
shrl
mov
jle
mov
repz
insb
mov
mov
pop
lock
inc
fucomip
pop
jae
das
add
jmp
ss
sar
ficoml
nop
xor
test
lret
scas
lods
mov
push
inc
rcl
adc
mov
xor
xchg
leave
xor
cmp
dec
mov
or
loope
mov
stos
mov
mov
inc
jo
int3
mov
jg
inc
mov
fimuls
cmpsl
shlb
xchg
and
fisubs
stos
lds
sbbl
xor
or
jno
punpcklwd
xchg
dec
cmpsb
xlat
testb
notb
xor
jecxz
mov
pop
jl
test
sub
inc
shl
cmp
pop
movsb
or
test
pop
or
mov
sub
sti
loope
gs
std
cli
cmp
jae
ds
lock
add
rorb
mov
dec
xor
lahf
xchg
xor
mov
mov
pop
and
add
xorb
sbb
cmpsl
add
pop
sub
sub
push
adc
xchg
push
sub
pushf
test
xchg
mov
clc
mov
insb
add
push
nop
dec
das
int
inc
clc
sub
adc
lret
icebp
rorl
sbb
scas
sahf
push
gs
test
mov
push
add
clc
outsl
mov
enter
sub
imul
lahf
jmp
ss
push
cmp
inc
or
out
std
fdivr
sbb
xor
cmp
xchg
into
cmp
popf
xor
add
adc
xor
sarb
adc
mov
cltd
cbtw
scas
shrb
ja
xor
stc
dec
popf
sub
repnz
jbe
mov
sbb
fsubl
and
loopne
cmpsl
popa
dec
mov
lods
inc
shrb
xchg
shlb
and
cmp
push
jg
sbb
adc
mov
aas
cs
inc
in
aad
xor
nop
in
aad
aas
and
fdivl
dec
sti
dec
jno
jb
lahf
fwait
mov
iret
push
in
jo
ljmp
add
testb
fistps
fcmovnu
or
inc
push
xchg
jecxz
mov
push
das
nop
dec
lahf
mov
jp
lret
lret
adc
jmp
cwtl
nop
clc
add
mov
stos
icebp
mov
cmp
add
push
pop
scas
jo
push
shrl
lock
push
adc
add
dec
shlb
add
sub
mov
sbb
insl
adc
dec
dec
push
dec
cmp
sarl
testb
xor
cmpsb
inc
fs
xchg
mov
je
lods
add
insb
or
jns
rolb
push
fstl
gs
das
push
xchg
or
repz
xor
mov
mov
lods
out
pop
imul
xchg
pop
aaa
cli
push
test
mov
xor
lea
outsl
jle
xor
jecxz
mov
xchg
aad
dec
js
bound
fld
fwait
dec
cmp
xchg
inc
xlat
loope
or
sub
push
call
lret
adc
pushf
adc
addr16
mov
jns
mov
in
stos
mov
jnp
push
mov
pop
mov
addr16
add
nop
shll
scas
lock
mov
adc
dec
lods
shlb
cld
dec
cmpsl
cld
xchg
add
push
xchg
jecxz
addb
fnstsw
or
ljmp
push
cltd
adc
loop
inc
and
pop
cmp
sub
add
nopl
je
in
or
pusha
pop
xlat
ror
ffree
sub
hlt
pop
daa
shll
cmc
outsl
jae
movsl
clc
push
lods
outsl
popf
cmp
xor
inc
aas
cmpsl
sub
inc
pop
cmp
jge
or
scas
adc
push
mov
mov
pop
ficompl
xacquire
shl
inc
xchg
sahf
arpl
push
repnz
push
imul
mov
pop
jo
jg
mov
push
rol
fldt
pop
mov
aad
repz
cmp
enter
mov
mov
out
lock
daa
pop
sarb
or
pusha
jl
test
sti
push
inc
lods
add
mov
lahf
setb
push
fiaddl
test
testb
popa
int
cmpsb
fucomp
push
xor
pop
dec
inc
pop
push
icebp
scas
loope
rolb
cmp
test
int
mov
into
call
imul
rorl
add
std
clc
xor
jl
aaa
pop
addr16
js
sarb
jle
lcall
pop
faddl
cmp
outsb
dec
ljmp
std
popl
cmp
mov
call
cwtl
mov
arpl
and
pop
push
xchg
cmp
stos
jo
sub
cmp
idivl
adc
lret
shll
mov
sbb
jecxz
push
jecxz
subb
mov
loop
mov
jns
imulb
adc
lcall
aam
insb
fdivr
jp
out
fistl
dec
jne
xor
fdivrs
xchg
mov
sbb
jle
xor
mov
pop
ja
mov
imul
xlat
add
imul
mov
lret
sti
ret
sub
enter
cmp
sub
jne
or
inc
pop
loopne
dec
push
dec
sbb
inc
mov
cmp
out
cmp
lahf
cmp
xchg
lea
sub
cmp
dec
out
popf
pop
stc
adc
add
pushf
sarb
jmp
mov
cs
aad
and
ret
fcmovnbe
jb
lea
je
sbb
fiadds
icebp
jae
adc
movsl
testb
sbb
push
mov
cli
subl
dec
add
inc
xchg
inc
jnp
shl
mov
mov
xor
mov
test
cmp
pop
or
cmpsl
push
push
idivb
arpl
push
cld
das
jecxz
lret
int3
cs
mov
test
fistpll
lock
in
pop
pop
push
rolb
scas
sub
adc
ret
sub
pushf
icebp
les
lods
test
xchg
push
mov
popa
inc
repz
lods
pushf
repz
mov
pop
mov
in
sbb
leave
psrlq
inc
cltd
mov
clc
test
imul
faddp
jo
jp
stos
clc
push
mov
ds
rcrl
stos
mov
roll
jno
fstl
iret
out
jp
and
pop
stos
sbb
mov
push
xor
adc
xor
jns
mov
xchg
jp
dec
cwtl
test
xor
cwtl
add
dec
das
fcmovne
inc
outsb
arpl
fwait
mov
mov
add
mov
or
inc
stc
jl
movsl
jmp
jns
jns
in
jl
xchg
adc
mov
mov
fisubrl
addr16
xchg
jp
pop
push
mov
and
mov
mov
push
mov
repnz
push
mov
xchg
fsub
int
cmp
push
xchg
scas
mov
xor
sub
lock
jns
fadds
cli
stos
push
out
and
and
xchg
in
pop
jnp
cmc
fwait
jle
cmp
das
pusha
mov
pop
rol
aas
scas
pop
pop
ds
inc
cmc
push
cwtl
jae
pop
mov
popf
fs
inc
mov
mov
mov
sbb
xor
jle
sub
push
shlb
popf
adc
repnz
mov
fiaddl
leave
and
arpl
adc
cmc
lea
push
sub
and
dec
dec
aam
je
pusha
int3
mov
sub
ficoms
sbb
fcomps
rcr
pop
scas
pop
and
stos
int
cmp
inc
call
jbe
xor
xor
daa
push
inc
xchg
cmp
mov
jl
rcl
dec
test
mov
xor
cltd
andb
lods
inc
jmp
lcall
inc
lock
cmpsb
pop
dec
in
in
mov
je
mov
add
adc
or
test
sub
add
adc
push
popl
push
mov
sbb
add
scas
mov
aas
hlt
movsl
pop
mov
scas
pop
jle
lcall
mov
fdivl
or
outsb
lods
mov
inc
mov
rorb
jg
cmp
mov
dec
and
inc
and
and
cwtl
or
adc
sub
xchg
mov
sarl
cmpsl
sbb
jne
sahf
pop
repnz
fiaddl
mov
jle
out
and
lcall
adc
fdivs
fdivs
cmp
mov
and
insb
push
or
addr16
add
cmp
push
mov
pop
xchg
sbb
adc
scas
jmp
cmp
sub
data16
xchg
cmp
insl
inc
mov
ja
out
sub
addr16
mov
dec
jns
sti
js
repz
cwtl
mov
gs
loopne
outsl
add
dec
jp
hlt
inc
leave
dec
xor
cli
inc
int3
rep
adc
sbb
mov
pushf
jge
push
pop
push
in
adc
cltd
pushf
jge
mov
cs
cli
pop
nop
mov
call
insb
dec
pop
jmp
xor
in
cmp
jbe
lea
xchg
mov
cltd
leave
mov
pop
cmpl
xchg
cmpsb
dec
sub
push
inc
inc
jmp
mov
mov
call
sbb
mov
mov
adc
std
add
or
push
mov
fidivrs
cmp
or
cmp
mov
sub
mov
subb
inc
inc
mov
movsb
or
push
fcomi
sub
cmp
aam
call
add
pop
cld
ret
packssdw
dec
sbb
ljmp
jo
pop
mov
mov
sbbl
rorl
xor
xchg
add
mov
mov
daa
in
mov
pop
popf
clc
movsl
xor
lea
