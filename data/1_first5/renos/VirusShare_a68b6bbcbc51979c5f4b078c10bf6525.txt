and
test
inc
add
orl
clc
hlt
lock
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sarb
mov
sbb
push
or
add
nop
inc
push
add
cmp
xor
push
sbb
and
gs
outsl
in
add
mov
mov
push
push
call
or
sti
clc
pop
pop
pop
ret
pop
mov
mov
mov
repnz
mov
std
sub
mov
ret
nop
aaa
lock
mov
fdivrl
hlt
cmpl
je
repnz
imul
lcall
xor
test
jb
inc
lock
add
rorb
mov
cmpb
je
or
std
das
clc
mov
and
xor
mov
dec
cld
mov
and
xor
jnp
sbb
lock
icebp
add
es
imul
hlt
mov
cmp
jbe
mov
cmp
jae
mov
repz
jne
fcomi
mov
jae
pop
in
sti
ret
decb
mov
or
add
divl
push
sti
jnp
cld
add
ja
outsl
aaa
or
addl
push
lea
lea
jb
adc
mov
popa
or
jge
add
push
lock
sub
jae
jmp
or
orl
bound
inc
and
cmp
jb
dec
xchg
mov
xchg
dec
inc
dec
mov
mov
lea
adc
insb
push
jbe
lea
dec
push
inc
dec
mov
testl
mov
lea
xchg
dec
mov
mov
dec
lea
push
sub
bound
lea
mov
rolb
push
add
jg
ja
jb
lea
xor
xor
cmp
jns
pushl
mov
mov
inc
mov
mov
jg
popa
shlb
sahf
hlt
inc
inc
inc
add
pop
mov
sti
call
lock
mov
mov
cld
xchg
or
imull
rcr
adc
arpl
inc
movl
inc
dec
dec
inc
dec
xor
jmp
imul
add
cwtl
cmp
jae
mov
mov
mov
cmp
jp
jno
mov
add
jns
mov
ret
push
add
xchg
mov
outsl
jle
inc
dec
inc
inc
cmp
jnp
adc
adc
xor
sub
xor
mov
mov
cltd
call
clc
ret
fildl
add
cmp
add
add
lods
sar
or
cmpsl
mov
inc
clc
jns
fstpt
mov
mov
dec
test
push
dec
imul
adc
cmp
dec
mov
add
fmull
in
jb
or
lock
lret
lods
pop
cs
dec
inc
cmp
cld
jle
stc
fucomi
mov
sti
fs
push
cli
mov
mov
mov
test
add
ljmp
add
decl
add
sub
xchg
pop
sti
dec
dec
inc
dec
lea
xchg
jle
rsqrtps
xor
ror
sub
xchg
mov
mov
or
push
fcomp
lret
or
dec
test
mov
out
fcmovnbe
push
int3
xor
add
movsb
jae
out
test
pop
into
fdivs
push
jo
inc
mov
ret
inc
inc
inc
mov
cmp
jl
das
cld
outsl
pop
decb
push
gs
mov
xlat
imul
mov
mov
int
lds
jae
jecxz
jp
enter
mov
dec
pop
clc
sbb
adc
or
clc
mov
aad
sbb
ss
stc
mov
inc
adc
loope
inc
push
jle
incl
repnz
mov
mov
dec
lea
mov
cltd
fidivl
lods
fldt
dec
ficoms
sub
daa
jae
sbb
lahf
lahf
mov
enter
shl
rcrb
mov
mov
fmul
inc
incl
iret
jge
nop
arpl
mov
inc
outsb
mov
xchg
bound
test
test
ret
adc
cmp
call
cmp
lods
cmpsl
push
adc
mov
dec
call
sar
outsl
jg
mov
call
xchg
cmp
inc
shrd
outsl
pop
pop
mov
sub
into
pop
sbb
jbe
je
add
dec
dec
xchg
mov
lods
xchg
xchg
mov
jno
dec
mov
sti
in
aaa
ss
ljmp
ja
pop
mov
xchg
fucomip
dec
sub
hlt
in
je
xchg
xor
fs
jecxz
adc
or
popa
sub
imul
mov
ss
mov
iret
cld
outsl
mov
add
push
and
cmc
test
stos
cmp
loopne
loope
push
cmp
cld
mov
mov
mov
inc
dec
dec
add
pushf
mov
mov
inc
add
inc
mov
adc
add
enter
jns
outsl
test
movsb
jmp
pushf
mov
nop
add
movsb
out
fdivrl
cmp
ret
xchg
out
xchg
mov
ljmp
mov
imul
pop
fidivrs
xor
sub
sub
ljmp
paddsb
in
sub
mov
in
aad
clc
ret
out
xchg
cld
pop
sbb
jg
mov
mov
inc
xchg
mov
jmp
push
sahf
das
push
mov
add
adc
fdivl
aad
aas
inc
jge
jns
pop
push
mov
addb
addb
imul
fwait
pop
adc
lods
test
movd
and
push
adc
sub
js
mov
sbb
in
in
movsl
inc
sbb
push
push
cmp
adc
test
lods
sub
and
test
jo
int
fstps
pusha
loope
inc
data16
pushl
cmp
call
pop
nop
lds
push
sahf
int
mov
pop
fnstcw
addr16
mov
scas
push
push
lds
in
in
push
push
pop
pop
pusha
jecxz
cmp
in
push
data16
dec
lock
repnz
cmp
push
adc
mov
gs
inc
fistps
sbb
adc
cmp
addr16
dec
ja
cmp
je
xor
es
iret
loope
xor
push
cmp
and
aam
rep
mov
xor
ds
cmc
and
js
sub
mov
add
insb
mov
xchg
sub
inc
and
pushf
xchg
addr16
hlt
fwait
sub
aaa
loope
xor
inc
movsb
sbb
adc
xchg
xchg
or
mov
popf
pushf
popf
cmp
adc
sbb
inc
xchg
push
dec
pop
shlb
adcb
imul
out
sub
int
sbb
clc
mov
fstpl
inc
sti
or
inc
incl
mov
loop
fbstp
cmp
add
xor
xor
add
add
mov
jbe
cmp
pop
or
or
mov
mov
xor
xor
xor
xor
cmp
xor
cmp
add
jnp
jne
xor
dec
inc
mov
arpl
xor
xor
cmp
jle
cmp
xor
xor
xor
xor
dec
sbb
add
xor
test
adc
xor
fdivl
movsl
xor
popa
lahf
sub
test
sti
data16
aas
dec
sub
push
scas
sbb
aaa
cmp
xor
adc
ret
imul
sub
cmp
loop
clc
imull
imul
push
incl
lsl
sub
outsl
decl
pop
sub
pop
sub
and
add
push
mov
aas
aad
xchg
bound
adc
add
stc
std
xor
mov
in
push
sub
cmp
push
mov
mov
xchg
adc
divl
scas
es
mov
dec
dec
rcll
and
or
sub
cmpsb
and
jmp
std
jno
and
jle
in
mov
mov
enter
sti
popf
mov
ds
pop
mov
and
scas
std
jbe
notb
je
cmovle
pop
aaa
pop
in
jle
outsb
fbld
cmp
sbb
in
push
aad
mov
jge
lcall
jmp
ja
mov
pop
cmpsb
cmpsl
and
pop
mov
lea
loop
mov
and
test
loop
jecxz
orb
scas
sbb
nop
adc
dec
mov
fs
xsha1
cmpsb
dec
mov
stos
dec
cmpsb
fwait
sub
pop
mov
adc
sbb
repnz
mov
mov
fdivr
sbb
in
push
cmpb
mov
lcall
sub
lcall
gs
push
pop
and
daa
idiv
scas
and
out
adc
es
insl
pop
push
mov
add
push
adc
mov
xchg
push
jnp
pop
mov
lcall
aad
imul
out
sub
pop
pop
pop
es
lcall
or
mov
repnz
mov
sbb
pop
lods
movsb
outsb
mov
dec
or
pop
sub
aas
in
pop
sub
stos
adc
lea
add
mov
push
and
dec
mov
movsl
fwait
or
and
cmpsb
pusha
outsl
negb
cmp
mov
punpckhdq
insl
cmp
scas
mov
lea
xor
sbb
lcall
sub
jp
lret
insl
outsb
loope
lock
loop
idivb
popf
jne
jmp
popa
inc
gs
test
sub
rcr
fistpl
sbbl
movsb
insl
lea
and
dec
xor
mov
in
sub
addr16
scas
test
in
and
add
arpl
aam
loop
pop
fnsave
jb
xchg
hlt
mov
sub
sub
out
xchg
insb
adc
fs
lsl
cld
mul
pusha
push
pusha
in
pop
aad
add
lahf
pop
fst
popa
sub
movsl
adc
repnz
or
inc
or
dec
lret
enter
mov
mov
xor
and
push
pop
xchg
mov
xor
int3
jo
out
dec
fists
stos
adc
sub
pop
inc
movsb
outsl
mov
movsb
cmpsb
and
lret
ret
lea
jns
adc
xor
popa
or
clc
test
jne
or
cmp
imull
hlt
out
call
mov
out
cmp
inc
push
ret
sbb
sub
movzwl
dec
test
xchg
sbb
subb
pop
xor
lea
mov
inc
ret
aam
imul
adc
mov
add
outsl
daa
mov
sbb
inc
sbb
rclb
je
invd
sub
mov
in
adc
push
cmp
test
push
fisttpl
or
jae
out
fisttpl
cmp
mov
scas
lods
sbb
call
dec
decl
icebp
in
jne
add
dec
outsl
popa
fs
imul
popa
jb
inc
adc
push
push
push
outsb
sti
mov
jo
imul
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
insl
pop
sti
call
insb
dec
outsl
jbe
dec
gs
outsl
cmp
fcomi
fildl
xor
inc
outsb
je
inc
push
inc
leave
fidivrl
jae
and
push
jb
cmovp
je
stos
or
flds
scas
sbb
sub
push
fimull
out
add
fcoms
pushf
adc
sbb
or
and
pushf
pop
adc
inc
cmp
add
push
aas
sti
add
xor
fs
add
sbb
dec
mov
jbe
nop
mov
add
cmpl
add
add
add
xchg
out
nop
ljmp
xor
mov
test
fs
mov
pusha
or
adc
fisubs
mov
push
xor
sub
jl
xor
pushf
add
dec
add
mov
sarb
cmp
adcb
test
cmp
rclb
in
inc
pop
rorb
push
in
in
add
mov
inc
or
les
pop
cld
das
add
push
or
hlt
sbbb
clc
add
mov
popf
sbbb
pop
lock
cmp
ret
pop
rorl
sub
pop
mov
inc
js
dec
mov
inc
loop
push
or
inc
and
adc
arpl
and
mov
data16
mov
adc
sub
std
push
mov
popf
in
in
adc
popa
mov
xchg
cmp
jae
adc
lret
inc
cs
lods
in
jne
dec
test
sbb
jle
push
ficoml
or
jae
shlb
cmp
fldenv
xorb
push
pextrw
dec
ret
mov
addl
cmpl
pop
adc
pushf
add
pop
ss
movsl
in
rcl
rolb
fdivp
or
sbb
pop
es
and
push
inc
sbb
mov
or
fmull
dec
dec
call
xor
out
and
mov
and
int3
pop
scas
xor
xchg
andb
mov
pop
insb
test
mov
ss
dec
adc
mov
jno
add
jb
outsb
add
sahf
mov
add
stos
lods
out
imull
add
bound
pushl
je
addr16
imul
addr16
push
imul
mov
inc
imul
popa
jp
ja
fs
jo
jl
popa
sbb
inc
jo
sbb
outsb
add
dec
jge
dec
adc
dec
movb
xchg
sbb
cs
add
cmp
mov
mov
push
mov
aaa
mov
add
or
sub
jge
lock
hlt
jecxz
jne
mov
shrb
push
xor
clc
add
sub
pushf
inc
clc
cmpb
test
push
jb
fs
test
dec
nop
addb
sub
rolb
adc
dec
adcl
daa
test
and
pop
jmp
cwtl
ret
int3
sub
push
or
push
faddl
outsl
jp
lahf
test
orb
push
cltd
outsb
push
mov
cld
or
test
jbe
sub
pop
adc
add
shrb
sub
jbe
test
add
sbb
add
adc
sub
and
mov
in
out
adc
rcr
pop
loopne
inc
movsb
test
test
dec
xor
push
xchg
decb
sbb
add
mov
dec
loope
push
xor
cmp
adc
cmp
loope
sub
xchg
mov
xor
cmp
lock
pop
mov
add
shl
sub
and
sbb
adc
cld
aas
or
pop
clc
jnp
add
insb
adc
mov
and
and
lret
ss
in
adc
adc
sub
add
xchg
adc
and
popa
add
add
lahf
cs
aas
cmp
or
ds
dec
mov
mov
rol
and
pop
mov
idiv
fbstp
cmp
mov
je
cmp
jmp
add
call
cli
inc
xor
jne
dec
aaa
pushf
movb
mov
push
jnp
test
dec
fisttps
cmp
cwtl
add
incl
loope
aam
decb
negl
addb
inc
cmp
or
daa
add
mov
mov
jge
mov
add
add
daa
mov
fxch
add
add
push
lahf
daa
add
out
insb
sbb
add
or
sbb
pop
fists
sub
sub
xchg
add
push
ljmp
push
jae
add
push
pop
push
cli
add
inc
add
inc
add
pop
inc
push
dec
add
dec
push
or
inc
add
mov
push
push
or
arpl
push
std
fbld
dec
inc
inc
or
sub
pop
add
mov
add
add
add
pop
fstp
xchg
xchg
std
add
push
add
add
mov
push
lahf
jmp
add
mov
jge
divb
add
jbe
xlat
add
mov
add
imul
add
sub
rorl
pop
fcomi
mov
or
inc
in
inc
daa
ja
inc
mov
and
add
or
push
int
jge
or
add
fstpl
insl
in
test
pop
aaa
xor
paddsw
and
aaa
and
push
dec
int3
pop
sbb
and
cmp
aaa
shll
frstor
push
pop
adc
or
dec
push
insl
xor
xor
adc
pusha
sub
jnp
push
add
lret
mov
fs
push
es
fdiv
or
push
or
nop
lea
ss
out
lock
push
mov
xlat
or
xchg
push
inc
sbb
sub
je
sub
cwtl
lcall
cmp
cmp
popf
std
dec
imul
jbe,pt
fs
ss
lds
out
lock
push
sbb
adc
push
mov
dec
jo
lret
xor
adc
popf
cmp
pushf
inc
ret
call
ret
pop
mov
sub
popa
and
jae
jbe
xchg
sub
and
nop
mov
je
or
popa
push
jle
pop
enter
sub
or
pop
fld
sub
pop
lret
mov
mov
lcall
or
sbb
lret
mov
pop
jb
lods
add
add
add
pop
adc
add
mov
adc
sub
mov
mov
add
fwait
sti
adc
sti
mov
pop
xlat
sbb
sub
in
mov
ret
push
add
lahf
dec
imul
fwait
pop
daa
cmpsb
or
jo
decl
inc
xlat
aaa
out
test
add
je
pop
divl
xchg
add
sbb
add
mov
std
xchg
fisubrl
aaa
xchg
stos
add
repz
int
filds
dec
fmuls
jge
fisttpl
iret
test
fstl
add
out
icebp
push
fcomps
and
push
mov
test
add
ja
dec
std
lods
fcompl
jle
ja
push
fsubrs
ss
hlt
movsl
pushl
mov
movsb
loopne
movsb
add
sub
mov
add
mov
jno
adc
jns
fidivrl
add
stos
inc
out
add
jns
add
add
fsubs
pop
mov
leave
add
mov
sbb
mov
jecxz
xchg
push
xchg
or
sub
inc
mov
jne
lock
into
add
adc
pop
js
sti
sub
mov
scas
jp
ret
jae
sub
cltd
fdivl
ja
sbb
das
mov
mov
fildl
inc
and
fs
cmc
sbb
or
fistpl
incb
push
or
cmp
pand
fildl
pop
insl
mov
mov
cmpsb
add
jns
add
cmp
adc
ja
adc
add
push
addr16
adc
push
sub
cmp
jne
push
jge
test
test
dec
cmpb
mov
mov
test
call
mov
aaa
jge
mov
or
sub
or
cmpsb
out
pop
cs
sti
add
or
out
jbe
ja
std
mov
jg
jle
push
add
in
pop
js
out
adc
xor
arpl
clc
divb
mov
clc
mov
movsb
xchg
pusha
lods
and
not
push
inc
inc
sub
cld
and
add
fsubs
or
ret
inc
je
xchg
inc
sub
js
jnp
xchg
push
adc
fcmovnu
pop
cmp
pop
cmp
push
ja
cmp
mov
mov
enter
std
pop
aaa
dec
and
lcall
sbb
outsl
idivl
jle
dec
add
push
add
lret
psrad
sub
add
adc
shr
dec
jg
xor
ret
testb
sbb
je
sarl
add
jnp
shlb
daa
js
fucom
sbb
and
imul
cmovge
cmp
adc
shll
push
sub
loop
stos
add
fstpl
and
jb
gs
jbe
hlt
jne
and
xor
insb
mov
dec
sbb
jmp
jbe
aas
lcall
in
cmp
inc
jg
jge
mov
jne
lods
cmp
sbb
mov
inc
mov
lds
mov
aad
insl
mov
pop
mov
scas
jl
push
stos
fistpl
and
jmp
pop
in
dec
jge
ficoml
mov
xor
mov
or
scas
sub
xlat
subb
adc
in
fldenv
frstor
jnp
iret
pop
dec
daa
inc
mov
lods
cwtl
es
mov
sub
add
and
out
mov
mov
and
andl
pop
jb
notl
xchg
add
jo
dec
subl
sub
outsl
call
in
fstpt
mov
jecxz
cmpsl
out
xor
add
push
call
in
add
aam
clc
cmc
push
jnp
lock
sub
aam
xor
push
fmuls
fildl
push
aam
jne
sbb
pop
add
add
imul
mov
push
and
add
or
jg
jbe,pn
add
sbb
shrl
pusha
dec
in
int3
les
jo,pt
xor
shrl
mov
lahf
std
icebp
mov
xor
mov
ficomps
shlb
xor
insb
xor
cmp
jb
lea
ficoml
xchg
mov
jl
jb
sbb
repnz
filds
ret
sbb
sbb
lret
xor
ss
scas
out
sbb
or
in
pushf
fcos
imul
jmp
popa
fimuls
adc
or
cmpsl
push
stos
xor
cmp
pop
pop
jmp
ja
mov
mov
arpl
dec
movsl
pop
mov
or
sti
repz
das
sbb
or
pop
xor
sub
lods
testl
pop
insb
iret
pusha
les
mov
leave
jbe
arpl
mov
xchg
jnp
dec
lds
iret
scas
xchg
lahf
mov
popf
push
in
add
idivb
out
xor
inc
in
sub
fdivs
test
add
xchg
push
cmp
testb
movb
ret
mov
in
shll
jl
mov
pushf
popf
adc
cltd
push
fs
rcr
xlat
lods
cmpb
adc
ror
mov
andb
fiadds
adc
nop
clc
push
add
mov
arpl
daa
pop
and
add
ret
ret
icebp
fbstp
sub
jg
fwait
sub
loopne
rdtsc
daa
and
shlb
push
jb
xchg
cwtl
xor
and
cmp
or
push
jno
lock
or
and
mov
cmp
daa
movsb
add
iret
sub
outsl
mov
dec
cmpsl
insb
mov
sub
iret
int
add
lds
push
sbb
mov
dec
lea
adc
cwtl
add
push
push
jle
in
int
popf
lret
sub
nop
aam
sub
pop
mov
das
jle
int3
stos
jne
ljmp
lods
sbb
outsl
icebp
and
iret
inc
frstor
out
and
and
mov
mov
add
ret
loope
mov
ret
sbb
faddl
add
into
cmp
push
add
sbb
xor
jno
jg
scas
mov
jne
dec
sub
pop
mov
es
sahf
fidivl
and
adc
fsts
rcll
push
push
jb
lods
pop
dec
lret
rolb
mov
ror
testb
mov
lods
and
sbb
mov
push
psrlq
cltd
add
es
inc
jp
mov
leave
jle
aaa
mov
ds
fidivrl
pop
fmuls
ja
fistpl
jg
mov
xchg
jbe
and
sub
xor
lods
dec
cli
jp
in
dec
xchg
add
inc
sbb
xor
lea
sbb
jl
sub
rcll
xlat
idivb
push
or
insl
fdivs
and
outsb
filds
jle
imul
and
or
and
pop
push
sbb
outsb
xlat
outsb
cmp
fidivrl
stc
adcb
inc
adc
mov
jmp
mov
in
ret
lea
cli
aad
and
add
sub
and
stc
jle
fcoml
and
mov
pushf
mov
sti
adc
xchg
je
arpl
xchg
gs
nop
sahf
lcall
or
xlat
pop
lahf
or
pushf
inc
mov
outsl
enter
fldt
or
and
lods
pop
pop
xor
inc
add
das
testb
outsb
movsb
ljmp
aam
subb
pop
xchg
gs
xchg
and
fwait
arpl
insl
and
cmp
inc
adcl
int
add
sub
add
sti
out
ss
test
insb
sub
int3
filds
into
sub
jp
sarb
outsl
push
jmp
js
fdiv
jge
mov
fldt
push
ja
bndstx
pop
and
je
dec
aaa
xor
data16
in
or
mov
fiaddl
or
jp
fcmovnu
fwait
stos
stos
xor
add
bound
imul
fisttpll
aaa
push
call
iret
add
xor
adc
jg
in
aam
test
push
mov
inc
and
in
inc
pop
out
sub
jmp
es
sbb
dec
test
push
jae
rolb
inc
sub
aam
repz
or
and
mov
or
sbb
or
das
jo
sub
cmp
inc
or
adc
pop
xchg
and
pop
sbb
mov
xor
stos
add
lret
aam
iret
xor
xor
sub
xlat
cmp
jae
push
pop
sbb
mov
shlb
push
into
sub
mov
sbb
xor
add
aaa
lcall
add
lea
add
das
lods
and
in
popa
xchg
mov
stos
pop
add
out
pop
sub
push
mov
lea
or
sub
pop
loope
lods
shrl
mov
cltd
sub
test
mov
add
vmptrst
pop
xlat
sub
stc
mov
cli
or
cmpsb
mov
mov
inc
push
fldl
ret
out
sub
ret
aas
fildl
push
pop
fiadds
cmp
push
inc
pop
sub
add
push
and
cli
cltd
fidivs
pusha
sub
sbb
push
js
outsl
xor
pop
xchg
insl
test
push
pop
imul
add
push
iret
shrb
dec
insl
and
cmc
fisubrs
push
fcomi
push
cmp
mov
cmpsb
adc
xchg
inc
jb
arpl
js
or
cmp
xchg
cwtl
jne
andb
jp
mov
and
push
pop
dec
fsubrl
fdiv
pop
test
rcrl
fildl
sub
mov
sub
les
xchg
in
jb
jbe
jge
insb
sub
das
daa
clc
aas
fildl
mov
das
mov
mov
mov
push
in
test
addr16
fisttps
cltd
mov
in
xchg
adc
pop
xlat
dec
movsl
dec
xor
ja
cmp
add
mov
loop
xor
jb
sbb
sub
movsb
adc
cs
loopne
je
outsb
ret
pop
movsl
mov
add
jbe
and
int
ds
pop
cs
cmp
sbb
pop
cmp
fdiv
sub
xchg
jo
lods
xor
or
imul
xor
das
icebp
pop
outsl
mov
aam
push
sub
pop
jmp
or
fcmove
pop
xor
scas
add
xchg
sarb
jecxz
dec
xor
fiaddl
or
in
sahf
mov
loop
out
rcl
loope
pavgb
je
int
jmp
cmp
inc
and
xchg
push
frndint
jnp
fld
fdivrl
xor
ljmp
lret
mov
sbb
outsl
outsb
mov
mov
mov
stos
jmp
scas
cli
push
push
ljmp
aad
and
cmp
int
xchg
add
addb
aaa
mov
hlt
add
jge
dec
lods
push
push
rcll
push
adc
dec
pushf
xchg
dec
adc
push
cwtl
xor
pmaddwd
test
imul
xchg
aaa
cmp
loopne
add
jbe
and
jne
push
cs
loop
movsb
es
out
loop
sub
arpl
sti
iret
mov
je
add
push
ret
xchg
das
enter
adc
and
mov
mov
mov
insb
out
jnp
pop
int3
movsb
xor
jae
es
push
fwait
inc
pop
and
push
popf
xlat
adc
xor
std
das
pushf
pop
pushf
out
sbb
jp
test
dec
jp
fsubrs
dec
fidivrl
jno
push
das
addr16
xor
divb
jo
xchg
lret
jno
mov
push
je
dec
and
fldcw
arpl
sbb
scas
fistpl
add
and
xchg
fldl
inc
leave
and
sahf
call
adc
ret
adc
scas
pop
and
sub
outsb
into
fwait
test
jnp
in
adc
popa
cmp
lcall
pop
adc
scas
mov
push
pop
cmp
jne
pop
or
xchg
mov
mov
sub
mov
lahf
and
pop
xchg
pop
push
and
test
push
cmp
jl
xchg
mov
iret
inc
inc
andl
pop
aaa
data16
sub
adc
mov
push
fdivl
test
fninit
out
in
adc
push
xor
je
pop
cmp
mov
sbb
pop
jbe
cwtl
shrb
or
into
decl
sub
xor
test
shl
or
and
adc
push
loope
fs
popf
mov
mov
mov
jp
mov
repnz
pop
and
andl
andl
adc
push
jle
int
cmp
mov
sbb
popf
je
in
sbb
sub
das
xor
scas
das
mov
mov
cli
in
pop
jbe
sbb
or
or
or
ror
mov
out
out
ficomps
sbb
push
xchg
in
scas
adc
mov
xor
xchg
cmp
lods
test
cmp
sub
out
aad
sub
aam
sub
adc
testl
test
aad
int
sti
stos
add
into
into
data16
inc
jp
pop
adcl
sub
popf
sarl
push
btc
fdivs
push
and
xorb
rolb
lret
jo
imul
daa
inc
lret
test
xor
pop
js
jne
sbb
frstor
ja
jo
test
mov
sbb
dec
adc
xor
daa
loopne
inc
cmpsl
into
cwtl
push
test
mov
push
add
iret
mov
sbb
loop
and
lcall
sarb
cmp
mov
repz
fwait
out
stos
mov
call
aam
and
mov
ret
popa
and
in
shlb
push
sub
sbb
mov
aas
ljmp
sub
std
cmp
sbb
fwait
and
xchg
xchg
sub
call
movsb
daa
and
outsl
dec
fisubl
push
outsl
fs
mov
scas
imul
js
push
es
cmpsb
add
xor
push
sbb
rolb
push
pop
ret
rcrb
in
shll
mov
add
jo
sub
or
push
mov
shlb
shrb
icebp
daa
pop
movsl
jbe
imul
clc
loope
pop
cmp
ss
cmpsw
mov
pop
xchg
mov
lods
pop
add
aam
jne
int3
and
fwait
sub
out
mov
test
dec
jg
push
pop
adc
jno
and
and
dec
xchg
outsb
sbb
xor
cmp
jecxz
adc
and
stos
or
adc
pop
cmp
jge
sub
pop
loope
iret
push
sbb
ja
mov
and
sub
js
mov
lret
push
mov
adc
ja
mov
fsub
cs
nop
pop
cmp
out
sub
aam
out
fldl
into
test
fsubl
xchg
and
cmc
dec
aad
mov
aaa
in
loope
jmp
jb
inc
xchg
imul
mov
push
test
mov
pop
jmp
sub
pop
sbb
cmp
inc
pop
cs
push
pop
ffreep
sub
mov
stc
cltd
loope
imul
push
and
push
mov
gs
out
sbb
push
pushf
shrb
movsb
mov
adc
notl
shlb
adc
jne
aam
ljmp
out
shll
pop
or
sbb
les
push
sbb
mov
pop
je
push
inc
or
or
sbb
sbb
mov
mov
add
and
push
cwtl
xchg
push
scas
add
sub
dec
add
stos
ror
dec
mov
rorb
pop
cmovae
dec
push
ret
mov
lock
inc
fdivrs
cmp
mov
sbb
jbe
stos
pop
fwait
jno
popa
inc
movsb
flds
sbb
add
adc
test
xor
mov
jo
lret
aaa
sub
xor
jecxz
xor
or
loopne
jns
add
jmp
jecxz
jns
mov
xchg
cld
js
push
xchg
movsb
out
cmp
fucomi
ror
repnz
out
mov
ds
arpl
mov
dec
loopne
cmp
mov
movsl
movsl
cli
mov
or
addr16
sub
mov
sub
in
shll
daa
in
fistpl
push
into
add
push
add
data16
fcoml
cmp
or
fmuls
pop
xor
sbb
scas
sbb
or
pop
mov
and
imul
fwait
int
jnp
scas
dec
sub
pop
call
scas
es
lret
adc
push
xlat
hlt
xor
pop
icebp
out
sub
fisubs
mov
add
ret
stos
scas
pop
or
push
add
xchg
add
lods
scas
fisubs
out
pop
push
add
pop
outsb
mov
sbb
add
lahf
cmpb
xchg
add
push
ss
pop
push
scas
scas
jo
fdivrl
jge
pop
jbe
mov
cmp
mov
add
out
mov
push
fidivs
testl
addb
push
push
daa
loope
mull
add
and
or
decl
out
jg
or
cmc
xchg
insb
mov
jmp
pop
adc
lods
mov
mov
cmp
ja
mov
cwtl
pop
sbb
mov
jns
push
pop
xchg
xor
jge
jnp
enter
cmc
ret
lock
loope
fiadds
push
push
inc
ret
out
and
mov
and
or
lods
scas
pop
xor
add
mov
cmpsl
testb
inc
mov
es
int3
and
mov
aaa
push
cmp
ret
sub
cmp
push
mov
aam
mov
or
and
push
or
pop
nop
test
ret
mov
rolb
inc
xchg
push
dec
jae
test
leave
inc
add
sub
cmp
into
add
cmp
orl
orl
inc
arpl
and
adc
xchg
add
cli
xor
mov
les
sub
push
sets
inc
ja
iret
cmp
or
mov
test
test
xchg
orl
jo
mov
outsb
and
idivb
mov
inc
inc
xor
jmp
pop
push
inc
jp
mov
scas
mov
imulb
sub
and
lds
jno
dec
mov
adc
dec
push
daa
pop
mov
js
xchg
call
and
mov
inc
sub
dec
mov
fldcw
inc
pminsw
jbe
inc
and
mov
push
xor
mov
or
dec
icebp
or
push
and
loope
cwtl
sub
in
aas
sbbl
fwait
adcl
xchg
insl
int3
outsb
sbb
sub
mov
lret
sbb
adc
inc
push
inc
jns
pop
das
mov
fisubrs
adc
jle
push
mov
push
ret
sub
push
sbb
and
into
jle
add
push
and
cmp
xorb
mov
dec
loop
mov
cwtl
adc
push
lods
lds
rcrl
push
and
insl
adc
out
nop
mov
sub
out
or
push
push
mov
xchg
add
add
dec
pop
mov
stos
rorl
je
adc
dec
loopne
daa
fisttpll
loope
clc
iret
add
mov
ret
or
cmpsb
iret
scas
call
mov
xor
fnstcw
jmp
sbb
xlat
shll
jne
mulb
sbb
mov
roll
jmp
jle
adcb
add
pusha
jae
bound
mov
add
into
test
test
or
add
jnp
scas
add
sub
testl
and
mov
mov
test
pop
xlat
or
push
movsb
notl
cs
jns
pusha
pop
push
or
fs
mov
jl
add
xlat
in
test
xlat
int3
insb
pop
and
and
and
mov
push
and
int3
sbb
int3
adc
das
int3
adc
fwait
dec
int3
or
out
push
pop
mov
data16
outsl
mov
add
repz
out
add
pop
int3
xor
sub
insb
or
pop
sub
lea
sub
fnstcw
or
mov
js
mov
movb
jle
out
and
lods
fwait
add
pop
fstpt
addr16
sub
fdivrl
mov
arpl
push
push
mov
adc
pop
mov
inc
push
sub
mov
sub
rclb
jecxz
testl
xchg
push
dec
sbb
and
rcrb
fdivrl
push
cmpsl
inc
push
xchg
jmp
adc
divb
push
pop
dec
sahf
jmp
je
and
xor
add
add
insb
and
sub
cmp
add
cmp
lahf
jo
pushf
add
sbb
or
pusha
adc
sbb
nop
scas
inc
pop
stos
lea
decl
sub
jecxz
or
fistpl
jl
and
stc
mov
push
add
cmp
mov
test
sbb
mov
push
test
xchg
xor
iret
sub
push
fldt
pop
jo
out
aaa
cld
icebp
and
cld
add
scas
jmp
xchg
mov
test
sbb
int3
lcall
jno
movsl
xor
test
shlb
out
jo
cltd
add
push
inc
push
jl
cmpsl
loope
es
push
dec
sbb
out
and
cmp
xchg
sbb
xor
push
dec
test
popa
fidivrl
loopne
inc
dec
cmc
add
lock
and
sbb
cmpsl
pop
arpl
clc
xchg
or
or
sbb
mov
es
push
sub
sub
scas
cmp
inc
push
xor
pop
sti
add
sti
ja
les
add
mov
cmp
inc
mov
inc
add
push
sbb
in
in
insl
imul
es
jle
str
sbb
jge
and
jo
inc
xchg
in
stos
inc
sbb
les
inc
and
pop
cmp
jle
shlb
pop
scas
les
xchg
mov
std
rcr
cwtl
push
outsb
jnp
mov
sbb
ret
test
cmp
subps
loop
pop
mov
pop
aaa
pop
inc
and
push
add
or
or
push
and
ja
mov
mov
inc
cmp
mov
imul
mov
mov
pop
cwtl
cmc
addr16
sub
cmp
loopne
sbb
pop
mov
xor
daa
sub
push
or
jle
loope
cmpb
test
xor
adc
sub
inc
jge
stos
iret
fisttpll
je
sub
mov
in
mov
movsb
jge
out
xor
scas
adc
pop
xor
or
shrl
fisttpl
mov
fsubrs
sub
or
inc
mov
daa
mov
fstpl
das
jmp
mov
js
add
jmp
loopne
cli
jecxz
add
jmp
insl
gs
aam
jnp
js
sub
mov
lret
mov
bound
xlat
jecxz
mov
fistps
push
cmp
pop
in
test
out
lret
push
mov
sub
push
mov
aas
push
loope
aaa
xchg
add
lea
xchg
fwait
in
jp
or
mov
jno
out
cs
in
movsb
cmp
scas
lds
push
adc
or
mov
scas
outsb
test
cwtl
je
repnz
cmp
inc
scas
ror
and
ja
in
insl
mov
jo
rclb
sbb
xor
and
push
jecxz
andl
cmpsb
cmp
push
leave
mov
pop
add
test
cmpsl
into
push
arpl
xchg
jae
sbb
imul
pop
rorl
negb
or
xchg
sti
cmp
pop
xor
icebp
xchg
mov
sbb
sub
test
nop
jnp
lock
add
jnp
lahf
hlt
fiaddl
fcmovnbe
arpl
xchg
in
imul
mov
add
dec
xor
dec
addr16
xchg
adc
iret
xchg
mov
push
inc
mov
jle
dec
cmp
sbb
cmp
into
xchg
lods
push
pop
cmpsb
loop
mov
scas
and
mov
mov
cld
and
mov
jle
roll
int
js
mov
ss
adc
push
int3
sub
push
cld
popa
and
dec
dec
or
push
push
int3
popl
cmp
xchg
add
in
mov
es
clc
test
andl
mov
dec
sbb
fsubs
divl
fidivs
xor
andb
push
scas
mov
jle
jl
jb
cli
enter
jns
data16
js
ss
nop
loopne
mov
js
lods
dec
mov
cmp
add
push
inc
mov
or
out
dec
jl
daa
lret
cmp
and
or
clc
mov
fbld
sarb
xor
jns
adc
jbe
push
ret
insb
pop
sub
jo
stos
or
xor
fisubrl
or
sub
jbe
fdivs
xchg
push
mov
sbb
shrb
js
cmpsl
leave
aas
repnz
into
mov
fadds
stos
fidivl
popa
fadd
nop
ret
xor
jb
push
in
pop
stos
daa
inc
test
movsl
sarb
jmp
sub
sub
or
andb
in
cmp
cmp
lods
pusha
jg
dec
fstl
mov
mov
push
insl
mov
hlt
adc
push
mov
cs
xor
mov
inc
std
pop
pop
gs
push
or
shl
jp
push
into
out
add
push
pop
mov
mov
add
and
or
inc
push
daa
enter
add
sti
fs
inc
xlat
sbb
movsb
pop
aas
push
jnp
sbb
fisttps
and
fists
and
fldenv
mov
cmp
das
pop
xorl
pop
cli
cmpsl
xchg
fstps
ds
cld
xchg
jge
pop
or
enter
stos
dec
lods
dec
roll
inc
jg
blsfill
int
pop
dec
mov
pop
cld
mov
loop
test
pop
mov
mov
push
sbb
sbb
insb
inc
movsl
inc
daa
inc
inc
mov
out
ds
ss
adc
out
lret
push
cmp
test
inc
das
cmp
and
sbb
sti
lock
aas
mov
push
and
test
xor
lcall
cmp
iret
add
test
int3
jle
int
mov
out
sbb
bnd
jmp
and
cld
dec
shlb
dec
cmc
outsb
sub
rcl
push
inc
inc
xor
lahf
popa
and
jne
add
adc
jb
jo
mov
ret
imul
xor
mov
bound
sbb
inc
jns
orb
loop
orl
mov
sti
jg
push
fs
jmp
cmp
imul
dec
cmpsl
sub
sub
jp
sbb
cmp
mov
out
dec
cmp
mov
sbb
pop
pop
sub
lahf
icebp
scas
and
and
and
les
sub
xor
xor
add
adc
loope
sub
orl
std
aad
les
dec
dec
je
int
je
arpl
and
xchg
aad
faddl
in
xchg
mov
pop
sbb
mov
xchg
lock
jne
mov
or
and
mov
je
outsl
or
push
lds
flds
daa
dec
outsb
in
cwtl
scas
ja
in
add
lods
mov
fisttpl
mov
lea
cmpsb
push
adc
into
ret
mov
call
cmc
sub
add
dec
adc
repz
insb
inc
das
subl
pop
pop
jne
ss
ffree
int
adc
push
mov
stos
mov
testl
add
xor
push
sbb
or
or
dec
xor
sbb
scas
movsl
sbb
sbbb
inc
les
daa
push
shrl
notl
xchg
lds
add
test
scas
into
movb
or
in
cmp
stc
and
adc
push
rcll
popa
mov
test
pop
inc
inc
cmpsl
jbe
test
das
sbb
inc
jns
xor
jo
lods
sti
scas
hlt
jle
das
push
sbb
sbb
ds
mov
jns
push
lock
add
jo
jge
daa
in
inc
in
jle
and
mov
jb
push
into
xchg
daa
add
in
push
aaa
push
push
sub
lods
stos
fcoms
aaa
out
push
xchg
sbbl
inc
test
idivl
jp
aaa
imulb
adc
fidivrs
lret
xor
pop
sub
cld
fisttpll
cmp
pop
ret
inc
test
push
xor
test
pop
ss
fsubrl
adc
mov
cmp
int3
scas
push
lret
add
std
fistpl
bound
notl
xor
xor
push
testl
inc
sbb
les
jns
mov
push
adc
cmp
sub
mov
push
xchg
sub
jae
xor
les
test
mov
and
and
push
cmp
jg
mov
xchg
add
rorl
and
push
loopne
test
push
jg
and
in
add
mov
push
data16
imul
in
daa
ja
aam
pop
out
rolb
stos
pop
ret
sub
add
into
ds
lods
xchg
ret
addl
sub
test
scas
mov
out
fnstcw
mov
xchg
mov
fsubrl
pop
repnz
test
sti
mov
sub
das
jo
push
mov
inc
push
fildll
adc
or
or
sub
cmp
sti
out
fcoms
jns
pop
cmp
gs
push
push
std
xchg
push
cwtl
je
or
adc
lock
ss
jo
jle
nop
push
pop
call
sarl
repz
mov
mov
adc
inc
lahf
mov
xor
imul
les
jnp
pushf
cmp
push
movsb
push
and
or
arpl
pop
cmpsb
cmp
mov
sub
pop
sub
pop
sbb
sub
dec
add
je
pop
fwait
inc
mov
loope
cld
push
jns
add
imul
imul
adc
fiadds
or
bound
mov
dec
pop
lcall
and
faddl
sbb
jno
iret
cwtl
sbb
les
xor
cmp
dec
mov
das
pop
loope
pusha
inc
nop
mov
inc
loopne
jge
xlat
lods
cmp
popf
popf
mov
push
fwait
lcall
sbb
cmp
adc
andl
cwtl
out
xchg
mov
sti
sbb
or
js
push
mov
xchg
add
sbb
jo
cltd
aaa
or
fs
pusha
in
cmpb
orl
rolb
mov
test
loop
lds
cld
stc
inc
out
imull
decb
jo
jo
sub
xor
pop
dec
cli
mov
test
cmpsb
in
adc
or
mov
pop
xor
dec
jmp
enter
shrl
jbe
popa
adc
xlat
cmp
or
mov
fninit
movsl
imull
dec
pop
xchg
adc
jge
test
lock
mov
mov
into
or
xacquire
pop
add
js
sbb
mov
fcoms
arpl
add
sbb
xor
out
in
and
imul
xor
and
aaa
es
jae
mov
pusha
rdpmc
and
jg
sti
bound
aas
adc
pop
cmp
popa
addr16
dec
push
inc
and
push
jmp
inc
lsl
xchg
dec
dec
or
ja
sub
dec
aam
or
cwtl
cmp
pop
out
xchg
bound
push
ret
jecxz
mov
adc
sub
jle
nop
sub
inc
pop
jle
xor
int3
mov
inc
inc
xor
cmp
test
insb
out
cmpsl
adc
into
push
sbb
mov
test
or
arpl
sbb
test
cmpsl
popa
cmovb
dec
into
push
jnp
add
daa
fildl
lret
jbe
pop
cmpsl
ja
addr16
stc
fisubs
inc
ret
and
sbbl
iret
stos
pop
push
jg
or
mov
cmp
ret
jnp
xchg
pop
fs
mov
and
addb
popa
fistps
outsb
inc
adc
adc
inc
dec
and
cmp
cli
jo
das
int3
inc
sbb
adc
fdivrs
mov
fwait
movsl
ret
jb
out
scas
xchg
xor
and
and
xchg
xchg
add
ret
dec
inc
xor
inc
pop
cmp
adc
xchg
lcall
subl
enter
pop
mov
sub
iret
rorl
int
cmc
xor
jo
testl
or
insb
adc
stc
dec
shl
dec
fildll
mov
jecxz
fldt
adc
enter
setno
and
loopne
mov
xchg
and
and
popa
movsl
fsubs
sti
jle
xor
adc
rol
sbb
sldt
mov
cmp
iret
xor
ss
adc
testb
int3
cmc
adc
aaa
or
jae
adc
add
fstpt
aaa
mov
jge
adc
and
pop
shll
mov
jle
in
add
mov
movswl
jge
xchg
popw
sbb
in
sub
cwtl
data16
call
fcomp
stc
and
xor
mov
aas
es
xchg
outsl
jb
mov
add
jae
jno
and
in
pusha
jnp
pop
jge
inc
jle
roll
pop
das
inc
jl
inc
lds
addr16
inc
int3
sbb
cmpsb
or
imul
jmp
pop
aas
cmpl
std
pop
sub
cmp
fsubs
jg
mov
fisubs
scas
inc
test
mov
adc
inc
or
inc
ljmp
ds
daa
add
mov
dec
insb
xchg
testl
lea
mov
xchg
jno
add
cmpl
shll
jg
mov
scas
pop
and
pop
popf
lds
xor
inc
lock
jnp
stos
rep
and
iret
mov
fsubr
pop
into
mov
inc
inc
shll
fsubrs
mov
divb
loop
mov
loopne
fildll
jb
xlat
bound
cmp
jbe
popf
test
lods
push
filds
pop
in
inc
jge
dec
bound
or
cmp
push
inc
mov
fidivl
aaa
das
cmp
fildl
dec
orb
push
mov
mov
andb
push
or
mov
imul
rcrl
sbb
adc
mov
push
rorb
cwtl
mov
pop
jge
push
xor
lahf
jnp
jno
in
inc
and
mov
xor
mov
scas
and
push
inc
ja
add
mov
mov
add
orl
cmc
mov
pop
dec
rorb
dec
push
or
stos
and
dec
clc
cmpl
sub
inc
xor
aas
pop
pop
mov
roll
into
lret
loope
pop
push
stos
ljmp
cltd
stos
and
or
or
adc
inc
sarb
xor
shl
test
add
xor
pop
loope
in
fwait
add
dec
lahf
xor
jo
jnp
pop
mov
sub
lret
test
mov
scas
and
xchg
ljmp
and
pop
inc
and
dec
rol
sub
jo
sbb
or
scas
pop
pop
scas
popa
pop
ss
adc
mov
or
lea
test
outsl
imul
testb
ja
aam
dec
mov
pop
int
icebp
lods
loope
add
mov
mov
clc
lahf
imul
fsubrs
inc
insb
inc
loope
mov
mov
jnp
add
inc
sub
test
call
jecxz
dec
dec
lret
lea
cmp
xchg
push
adc
mov
inc
movsb
into
sub
jbe
mov
mov
dec
stos
push
and
jnp
sarb
or
pusha
lods
inc
cmp
bound
cmp
add
popa
push
scas
subb
add
mov
pop
jl
stos
loopne
popa
mov
add
and
and
lcall
ret
pusha
js
arpl
cmp
ss
lcall
inc
cmc
pop
jl
sub
mov
add
and
and
sub
sbb
ja
or
dec
xchg
add
pop
shr
movsb
adcb
sbb
mov
aad
add
loop
xlat
lods
addr16
out
cmp
cs
mov
loopne
lock
mov
add
pop
ret
sub
cmpsl
push
cmp
lea
mov
or
or
and
mov
xchg
push
add
push
in
pusha
test
fcmovnb
sbb
add
and
rolb
sbb
inc
inc
mov
add
insl
mov
in
cmp
inc
popa
adc
imul
push
jbe
adc
lods
and
in
ret
js
add
xlat
loop
jne
lods
xchg
repz
push
shrl
and
or
ja
out
cmp
les
movsb
fsub
add
fnstcw
pop
fisttpl
dec
and
cwtl
mov
ret
imul
jae
cwtl
ret
and
inc
push
icebp
fwait
popf
xchg
and
mov
outsl
or
jl
fwait
push
or
adc
and
data16
or
sbb
xor
scas
pop
mov
mov
xchg
push
push
call
dec
mov
mov
call
inc
cmp
jbe
insb
jl
cld
in
dec
and
sub
sub
loope
ret
lods
mov
shlb
sbb
jne
pop
addr16
sub
andl
dec
xchg
mov
pushf
sbbb
add
mull
aad
das
loop
mov
cmc
int3
test
sbb
pop
aaa
movl
mov
sbb
test
testb
repz
mov
enter
inc
pop
je
negb
lret
hlt
adc
aad
iret
icebp
cmp
std
fdivr
cltd
incb
int3
iret
call
insb
xchg
mov
ja
or
push
push
lret
sbb
jno
inc
adc
clc
or
cli
pushl
mov
testl
and
addr16
dec
call
dec
iret
inc
lods
push
mov
cmpsl
adc
fldenv
inc
mov
cwtl
out
daa
mov
pop
les
xchg
dec
jg
in
pop
xor
adcl
xchg
adc
push
xor
lcall
pop
sbb
pop
cmp
push
and
shlb
push
test
dec
mov
shl
push
test
xor
fs
jno
aad
xchg
xor
cmp
or
lds
addb
cltd
fs
push
jge
xor
adc
js
xlat
cmp
xchg
push
jecxz
mov
jle
test
cltd
aas
or
xchg
pusha
jecxz
lods
jbe
sbb
addb
rorb
addb
das
push
rolb
push
inc
mov
jge
call
jl
mov
inc
fiadds
loope
lret
sbb
lea
cmp
xor
sbb
xor
mov
mov
jmp
shlb
push
sub
pusha
ds
inc
lock
pop
and
jnp
push
jno
iret
and
movsb
aas
xor
inc
movl
or
movsb
ret
mov
dec
add
pushf
ss
sub
call
mov
sbb
popa
psrlw
incb
xor
dec
cmp
fmul
jnp
sbb
fldl
mov
sahf
sarb
and
inc
loopne
adc
sub
ror
pop
add
cmp
and
divb
pop
inc
lea
andb
xchg
popf
add
mov
adc
sti
testb
add
notl
xor
jge
movsb
lcall
cs
movb
sub
adc
shl
or
add
andl
sbb
adc
xchg
pushf
out
ljmp
sbb
jnp
jae
stos
ds
ss
xchg
and
pop
and
pop
inc
and
cmpsb
dec
cmpsb
sbb
orl
test
xchg
inc
testl
jle
out
out
inc
aaa
push
xchg
push
jg
repz
test
addb
hlt
xchg
xchg
shlb
fs
jb
jmp
test
loop
sub
sub
cmpl
jmp
scas
jne
add
and
xchg
ja
xchg
mov
jbe
jecxz
lret
stos
or
sub
lcall
push
xchg
add
xchg
xchg
xchg
fisubrs
push
pop
sub
fidivrl
leave
push
mov
jae
cmp
ljmp
xchg
add
adc
adc
sub
psrad
xchg
fsubl
outsb
inc
dec
xchg
push
xchg
lods
inc
mov
push
inc
js
push
cmp
push
mov
xchg
jle
inc
push
mov
ret
or
inc
xor
add
add
jle
aas
xchg
add
pusha
data16
push
dec
incl
mulb
and
mov
and
push
and
insl
movl
mov
xchg
add
movsb
push
lcall
in
add
popa
sub
loop
jp
and
insl
xchg
xchg
lods
sbb
stos
inc
fildl
in
inc
xchg
or
push
clc
pop
xor
cmp
test
es
outsl
out
or
scas
js
arpl
inc
ret
aad
xchg
mov
xchg
loope
icebp
sub
xor
aaa
sbb
and
ret
lret
cmp
in
insb
lods
shrb
lds
adc
mov
adc
loope
jmp
test
inc
out
and
dec
or
xor
jp
mov
xchg
lods
inc
cs
jae
int
loope
xlat
sbb
inc
dec
xchg
mov
iret
cs
and
jbe
mov
mov
adc
xchg
cmp
sub
add
jb
mov
fdivl
cmpsl
jl
xor
or
fxch
imul
and
inc
or
clc
pop
dec
sub
add
inc
pop
outsl
test
or
add
sahf
push
lea
push
je
in
jp
dec
pop
cmp
mov
inc
sbb
mov
jg
or
add
sub
add
add
lcall
add
sub
add
xor
xchg
mov
dec
add
inc
ret
cwtl
insb
popa
pop
xchg
mov
sahf
out
arpl
stc
dec
fwait
andl
lret
fidivrl
add
inc
mov
bound
or
mov
or
call
je
iret
scas
sub
adc
out
sub
insl
movsl
cmp
or
jp
push
add
or
inc
insb
xor
daa
lea
ret
shrb
adc
cwtl
xor
aad
lds
jo
lods
sbb
push
jne
loopne
pop
cltd
push
out
mov
fnstsw
aam
sub
icebp
cmp
inc
inc
cltd
fidivrl
out
mov
cvtdq2ps
daa
stos
arpl
pop
or
out
mov
cld
test
arpl
and
adc
dec
dec
shrl
mov
movl
ss
add
mov
sub
test
adc
divb
jle
xchg
mov
scas
or
xchg
lock
pop
mov
add
pop
push
subb
arpl
nop
das
sub
push
cs
add
cmp
cwtl
nop
jne
pop
jbe
jno
fldt
pop
push
fwait
and
sbb
js
mov
shlb
xlat
add
dec
mov
es
into
int
and
cmp
dec
lock
and
jnp
daa
dec
or
scas
idivb
outsl
jle
notl
je
mov
xor
es
pop
dec
enter
decl
inc
adc
cmp
into
fcoms
mov
mov
adc
xchg
test
bound
and
test
or
mov
xchg
pop
call
mov
mov
call
push
adc
shll
mov
sub
jmp
imul
dec
mov
repz
out
sbb
sbb
and
mov
xlat
add
and
data16
das
out
push
jae
mov
out
jle
mov
imul
xor
xchg
insl
add
xchg
out
add
mov
stos
xor
loopne
shl
lcall
xchg
xchg
stc
andb
roll
pop
int3
fiadds
aas
adc
mov
jb
pop
push
mov
inc
cwtl
aas
sub
insb
ds
xchg
adc
cmp
popa
in
shrl
add
add
aam
and
shr
nop
pop
test
scas
lock
adc
dec
inc
adc
pop
repz
adc
mov
mov
cmp
rorl
outsb
add
jecxz
dec
stos
andb
bound
and
push
cmp
iret
dec
mov
lea
add
cmp
nop
sbb
lahf
dec
fdivs
push
push
jbe
jno
dec
daa
outsl
inc
inc
mov
mov
lods
fdivs
add
add
mov
das
pusha
sbb
es
add
jns
pop
divb
insb
test
jbe
fwait
mov
cmp
jo
mov
imul
adc
js
das
pusha
push
cmp
push
rolb
jnp
jmp
mov
insb
inc
insl
psllw
sbb
jo
jmp
jno
xor
lahf
and
gs
insb
outsb
out
call
and
test
add
ljmp
les
imul
es
bound
pop
js
pop
fcmovnb
sbb
add
cmp
pop
jmp
rcr
add
in
mov
nop
cmp
push
mov
ljmp
lcall
mov
in
inc
aam
and
mov
and
fwait
push
lcall
cld
mov
xor
sub
in
inc
mov
lds
je
subb
mov
ss
out
rorb
cs
test
or
push
and
push
ss
add
or
call
mov
xchg
pop
or
sub
fnstenv
or
pop
movsl
and
fidivs
dec
incb
call
outsb
repnz
push
xchg
push
dec
jne
test
mov
inc
sub
pop
adc
inc
mov
popf
push
fsub
add
pusha
xchg
popf
push
sbb
call
mov
dec
sbbl
pop
fcompl
push
shlb
xor
mov
inc
cmpl
dec
test
fs
add
sub
sbb
daa
push
jo
or
pop
jg
fmuls
scas
enter
mov
nop
mov
rep
mov
aas
ljmp
scas
sub
mov
xchg
dec
stos
popa
es
add
push
jecxz
leave
mov
aaa
add
dec
les
out
dec
imul
mov
add
dec
out
into
sub
add
adc
repnz
push
daa
inc
jg
outsl
inc
jne
das
pushf
subb
mov
pop
add
inc
push
loopne
clc
mov
sbb
mov
subb
sub
lock
inc
orl
pop
xchg
jmp
stos
sbb
shl
ds
adc
push
mov
div
movhps
out
jno
and
dec
mov
mov
xlat
adc
adc
pop
xchg
inc
or
mov
sbbl
das
ss
jmp
call
int3
dec
icebp
and
cmp
out
mov
fidivrl
popa
and
xor
js
and
imul
push
and
fisubl
scas
adc
sbb
push
xor
in
add
insb
push
mov
pop
mov
push
out
push
int
fbstp
adc
add
jnp
fistpl
orl
sub
mov
imul
mov
fcoml
sub
fildl
ret
mov
les
adc
sbbb
or
push
daa
popf
popa
fsubs
xlat
in
add
enter
movsb
sahf
sbb
mov
xor
push
mov
int
mov
test
xchg
pop
das
sti
ror
scas
mov
popf
cmp
xchg
dec
and
jbe
inc
out
insl
mov
ja
lods
or
adc
xor
adc
adc
sub
jns
xor
inc
add
out
mov
andnps
iret
insl
adc
fnsave
int3
pusha
sub
or
jle
jl
or
js
out
push
inc
pop
xor
mov
xor
sbb
fisubrs
inc
push
and
cmp
rcr
jmp
push
adc
inc
add
inc
roll
popa
fs
fisubs
mov
push
jnp
loope
jo
js
in
inc
in
ret
fstpl
sub
es
fbld
pusha
imul
scas
pop
lds
fcompl
pushf
push
fbstp
push
and
enter
jae
cmp
daa
jle
imul
loope
ja
xor
and
loopne
cld
mov
mov
cld
mov
es
das
cmp
cmp
mov
and
sbb
fcmovnb
aaa
and
shl
pop
fmuls
bound
sbb
inc
cmpsb
ja
lahf
mov
adc
ud1
adc
int3
lock
rclb
pop
imul
sbb
ljmp
fnsave
inc
das
pop
aaa
movsb
lds
jnp
sbb
aaa
xor
add
xor
jns
call
in
mov
jae
repz
mov
test
in
rcr
and
and
popf
push
daa
out
pop
pop
dec
out
dec
push
dec
je
bound
cmp
daa
sub
into
xor
and
xor
xchg
iret
pop
mov
mov
xor
mov
mov
mov
clc
pop
and
jmp
pop
imul
out
shrb
sbb
lods
or
clc
imul
fsubrl
notb
cmp
lcall
test
dec
sbb
and
xchg
pushf
mov
fwait
lret
addr16
sub
mov
sub
int3
es
pusha
mov
movsb
cs
int3
stos
sbb
scas
mov
lret
inc
dec
loop
sarb
sub
jg
call
xlat
xor
int
lret
pop
lods
sub
popa
testb
sbb
push
jg
test
int3
div
ss
jg
fcompl
adc
iret
mov
daa
insl
mov
in
addr16
cmp
cmp
divl
leave
loope
sar
push
cmpsb
sbb
leave
es
je
or
rcrb
or
shrb
jmp
popf
and
shlb
mov
xchg
xor
loopne
std
out
push
or
nop
xchg
clc
pop
cmpb
int
inc
mov
xchg
test
mov
mov
sbb
stos
test
nop
jo
gs
xchg
jle
lea
repnz
mov
push
imul
lcall
inc
inc
mov
add
jle
inc
cwtl
hlt
cwtl
fadds
out
adc
pop
and
dec
in
jecxz
push
in
js
cmp
jle
cmp
push
add
push
cmp
and
mov
iret
mov
or
cmpsl
dec
cmpsb
push
mov
scas
addb
xchg
mov
movsb
pusha
mov
lods
push
sub
out
mov
dec
add
popf
xor
mov
inc
cmp
shrb
mov
cmpsb
shll
loope
jo
and
mov
cbtw
stos
iret
sbb
sbb
scas
mov
xchg
xchg
mov
add
sub
pop
inc
repnz
inc
push
loope
inc
push
test
and
xchg
jmp
jl
ja
dec
jnp
jge
mov
nop
jg
sbb
add
add
add
inc
scas
fsubr
jne
test
dec
rorb
movsb
fs
inc
fnstsw
nop
jns
xor
mov
jns
add
adc
sbb
jns
pop
jb
jb
jge
add
adcl
in
push
ja
dec
lahf
add
in
leave
mov
mov
pop
xchg
or
xchg
out
pop
rol
mov
ret
inc
xchg
je
pop
lods
push
mov
pushf
mov
push
aad
addl
inc
dec
aam
or
push
lock
cmp
or
in
push
adc
je
push
mov
xor
mov
mov
and
mov
and
pop
xor
push
inc
int3
daa
inc
je
dec
mull
sbbb
and
fiaddl
add
sbb
je
shrb
aaa
test
push
pop
je
mov
mov
adc
or
inc
scas
mov
in
and
sti
mov
cmp
movsb
mov
dec
xor
and
test
inc
jecxz
roll
mov
aad
or
out
idiv
in
pop
daa
loopne
mov
cltd
test
add
shlb
jnp
rcrb
jge
arpl
js
jno
aaa
xor
orb
sahf
mov
loopne
adc
push
jo
xchg
pop
mov
mov
ds
inc
popf
sub
sub
mov
in
dec
out
invd
aaa
in
xrelease
js
mov
mov
repz
add
out
sub
push
jecxz
sub
jecxz,pn
out
pxor
sarl
add
dec
sbb
orb
sbb
data16
xchg
sti
arpl
xchg
sti
xchg
movl
ret
push
iret
adc
iret
pop
lret
sub
arpl
pusha
daa
add
inc
xlat
cmp
sbb
cmp
data16
outsl
call
cmp
jo
push
inc
fs
daa
add
lret
js
mov
add
icebp
or
movsb
inc
inc
lock
lods
sarl
add
jecxz
test
fbld
hlt
or
ret
stc
jmp
stc
cmp
xchg
xor
pop
xorl
adc
xchg
leave
dec
stos
sub
push
cli
mov
icebp
mov
push
and
jp
mov
stos
into
sarl
push
cmpsb
es
or
jnp
push
sbb
sbb
je
call
xor
jge
xor
mov
ret
xor
push
or
shll
mov
mov
divb
lods
add
pop
shll
fs
push
subl
cmpsl
loopne
into
aad
push
add
inc
hlt
jns
push
push
add
dec
inc
and
mov
cli
nop
imul
adc
lret
jne
sbb
fmull
and
mov
dec
int3
add
jmp
pop
or
add
sub
stos
roll
jg
push
jmp
push
ret
jo
js
jo
sub
mov
push
jae
mov
dec
xchg
sub
push
inc
rol
mov
sub
sub
and
adc
and
sub
lods
mov
nop
fdivp
mov
aad
enter
mov
xchg
daa
sbb
cmp
inc
fwait
or
inc
inc
sbb
lods
lret
adc
stos
dec
lock
ret
test
add
lret
xor
outsl
or
adc
mov
and
push
testl
das
scas
jb
test
sub
or
int
int3
mov
rclb
push
popa
push
mov
sub
dec
add
bound
jmp
jle
and
sahf
mov
push
jns
scas
das
add
mov
and
fiadds
ss
sti
xchg
jmp
test
jb
mull
sbb
cmpsb
mov
jge
mov
adc
jne
inc
popf
daa
xor
popa
adc
or
push
out
jbe
adc
inc
sbb
adc
cli
cmp
loopne
mov
das
push
sub
adc
stos
inc
and
push
add
fldlg2
js
dec
lock
or
lret
insb
daa
push
insl
dec
pop
mov
arpl
daa
mov
push
inc
push
lods
sub
jo
mov
dec
aaa
dec
push
ja
ljmp
mov
icebp
and
hlt
sbb
nop
and
fstpl
adc
pop
add
or
jae
pop
and
jbe
js
cmc
or
sub
ss
lock
adc
xchg
aam
mov
jno
xor
xchg
sub
in
imul
out
mov
and
out
xlat
mov
lret
lods
lret
or
pushf
push
popa
jo
hlt
jae
imul
xor
ss
mov
inc
jle
std
pop
cwtl
test
out
mov
shlb
dec
jmp
clc
mov
loop
daa
test
fiadds
lret
or
mov
xlat
insl
and
mov
xlat
addr16
add
int3
mov
aam
push
mov
popa
inc
dec
es
inc
ja
shll
fisttpl
mov
jecxz
add
push
bound
mov
lock
push
jbe
addl
push
add
xor
add
xchg
cmp
mov
and
jo
fdivp
into
and
popf
add
insl
leave
pop
andb
sub
mov
xor
jg
xchg
jbe
pop
cmp
adc
lcall
insl
add
add
pop
xor
pop
adc
xchg
inc
sub
push
fstpl
mov
inc
sar
cmp
cmp
mov
pop
jbe
inc
cmp
xchg
push
mov
test
pop
je
mov
int3
sub
add
ja
push
push
dec
ss
add
lcall
and
push
insl
pop
mov
cmp
adc
sarl
rcll
leave
cli
mov
mov
xor
xchg
jb
fldt
fiaddl
jo
inc
add
mov
dec
mov
es
dec
sub
sbb
mov
mov
mov
or
inc
xor
xor
ja
add
das
mov
movsl
xchg
add
sti
mov
push
or
or
cmp
xor
adc
popf
cmp
dec
sub
add
js
pusha
imul
sub
mov
add
sbb
jo
pop
cmp
sbb
test
push
dec
add
push
out
pop
jne
adc
xchg
push
shlb
adc
add
and
or
add
sbb
daa
push
mov
scas
adc
push
push
ret
and
add
subb
add
mov
clc
int3
add
pop
inc
add
add
aaa
mov
ja
shl
fisubs
jnp
repz
mov
movsl
jecxz
bound
mov
movsb
iret
or
and
mov
inc
cmpsl
xchg
and
mov
sbb
and
cmpsl
das
dec
jle
fisttpll
push
aad
sub
fs
int3
push
sbb
adc
rorl
call
and
lcall
adc
cmpsl
test
pop
jb
sbbl
sub
push
outsl
pop
mov
mov
and
mov
iret
and
push
cs
iret
or
push
lcall
add
add
sub
pop
lret
push
scas
daa
mov
ror
mov
daa
ret
sub
iret
xor
xor
pop
fidivrl
inc
inc
pushf
mov
xchg
add
push
inc
lock
adc
xor
test
jae
add
mov
pop
jmp
or
jmp
xor
dec
sub
popa
mov
inc
jle
movsl
or
loop
sub
into
insl
lea
xor
pop
adc
test
push
cmp
iret
insb
xor
loop
or
mov
dec
cli
push
ja
pop
or
jb
push
fyl2x
mov
pop
aad
sub
or
mov
and
outsl
movsb
fbld
sbb
and
jmp
iret
pop
addr16
fimull
fs
jp
jecxz
pop
call
xchg
push
pusha
xchg
dec
xchg
or
push
mov
imul
sbb
adc
or
je
mov
mov
call
add
fstps
aas
cmp
sbb
cmpsl
push
clc
dec
jne
cmp
inc
inc
jl
into
cmp
xchg
sti
jns
or
adc
movsl
loop
mov
mov
or
movsl
das
xchg
in
pop
scas
pop
mov
mov
push
mov
es
fwait
hlt
fwait
movsb
aas
ljmp
into
inc
and
pop
mov
pop
inc
jno
lods
daa
adc
and
or
xchg
xor
cli
pop
in
pop
add
out
popa
mov
mov
add
jne
mov
fadds
mov
jne
add
mov
ret
dec
adc
aad
or
rolb
sub
mov
jo
imul
loope
call
fsubl
insb
bswap
adc
or
sahf
fsubrl
push
inc
ljmp
out
scas
cwtl
loope
ficompl
ljmp
and
sbbb
mov
xchg
ror
loopnew
sarb
adc
add
add
push
and
mov
jecxz
sbb
repnz
push
jae
lcall
mov
mov
cmp
pop
xchg
xlat
xchg
movsb
push
divl
push
daa
pop
push
mov
loopne
push
jl
sbb
pusha
sbb
into
or
arpl
mov
cltd
mov
sub
out
out
ret
scas
push
xchg
or
sbb
adc
sarb
mov
sub
xchg
mov
ss
add
int
xchg
test
push
add
xorl
mov
and
cmpsb
xchg
out
fwait
cmp
adc
daa
pop
sbb
xor
add
int
jo
add
mov
mov
xchg
push
test
and
dec
sub
ficompl
loop
cli
fisttps
adc
sbb
add
lds
rcll
and
add
jmp
shll
mov
mov
mov
shl
popf
mov
stos
test
mov
mov
pop
and
adc
cmp
into
push
cmpsb
mov
mov
aad
or
cs
and
inc
ja
sub
les
or
adc
outsl
cmc
in
add
jo
roll
xor
jbe
dec
lret
cmpsb
add
movsb
dec
mov
data16
push
test
sub
gs
ret
adc
jmp
add
push
push
cli
pushf
into
in
mov
xorb
lods
fmuls
jmp
mov
sti
lods
loop
mov
xor
mov
rolb
pop
outsl
push
xchg
addr16
movsb
and
mov
sbb
scas
xor
cmp
aad
lahf
add
fsubs
mov
popa
ds
es
scas
data16
jne
mov
insl
nop
scas
and
adc
pop
movsl
xchg
push
sahf
mov
aas
les
ljmp
mov
jns
sub
pop
add
adc
imul
leave
lret
push
and
fwait
sub
add
andl
das
xchg
jmp
data16
mov
xorb
lock
and
fisttpl
dec
mov
cmp
das
xchg
inc
mov
xor
mov
xor
inc
xchg
roll
add
mov
cmpsb
popa
or
andb
and
nop
cmp
aad
or
adc
ss
aam
push
rol
and
movsb
daa
jo
cmp
jae
lods
fistl
dec
cli
push
mov
jne
loope
es
and
sbb
addr16
mov
lods
add
bound
lods
daa
lret
lds
test
xchg
out
jmp
in
je
push
dec
out
pushf
fidivs
sub
rcr
add
loope
push
jne
inc
pop
iret
pop
cltd
ja
pop
or
sbb
mov
stos
lock
fwait
sbb
and
cmpsl
xchg
add
subl
js
lods
mov
outsl
inc
stos
jle
push
mov
cmp
aad
pushf
leave
adc
cmp
lods
aaa
insb
push
out
mov
fsubs
or
insl
and
sub
fmuls
jnp
imul
inc
cmpsl
lock
xor
adc
and
fadds
in
push
int
xchg
jge
pop
pop
pop
lahf
adc
inc
movsb
pop
movsb
or
add
sti
test
jl
push
inc
jne
push
les
imull
mov
sbb
jnp
je
ja
push
iret
dec
testb
scas
and
pop
xchg
rorl
push
push
push
stos
dec
test
lods
int
mov
push
add
jnp
fwait
jnp
cmc
int3
inc
lods
daa
cs
mov
shl
inc
fistl
les
add
pop
xchg
loopne
insb
rolb
stos
add
jae
and
dec
sbb
push
nop
sbb
dec
push
loopne
jne
sub
lock
adc
adc
pushf
orb
push
ret
dec
xor
rorl
pop
jecxz
lds
push
jb
mov
xchg
sub
pop
cmp
push
mov
xchg
adc
pusha
dec
dec
lahf
inc
add
ffreep
jle
jle
add
xchg
jg
push
push
loop
or
sub
rclb
mov
jp
adc
out
adc
adc
repnz
stos
adc
mov
pop
andl
mov
ret
adc
fimull
repz
adcb
insl
lds
inc
inc
hlt
dec
cmp
fidivrs
dec
push
test
or
mov
and
mov
es
psrlw
rclb
and
inc
and
jae
jns
sahf
sbb
add
sbb
mov
add
jp
or
push
xchg
mov
rorl
out
ds
rorl
dec
insl
leave
mov
pop
push
add
mov
cli
lcall
adc
das
or
or
or
shlb
lods
adc
push
dec
pop
push
or
ret
add
rcr
adc
fsubrp
dec
sbb
adc
data16
sub
sahf
mov
movsl
add
sub
sbb
popf
sbb
daa
pushf
or
adc
scas
push
fwait
pusha
mov
push
aam
rcr
add
inc
add
dec
or
push
mov
test
pusha
jne
sub
push
xor
add
enter
xchg
and
mov
cmpsl
add
xchg
push
pop
movsb
imul
shr
adc
push
pop
loop
dec
cs
and
cmpsl
add
add
daa
and
mov
xor
sbb
push
aam
pop
flds
je
or
push
sub
add
mov
push
push
xor
outsl
or
pop
push
adcl
adc
inc
scas
mov
dec
push
dec
push
sub
in
lods
pop
dec
ror
int
or
jecxz
pop
int3
add
in
xchg
aad
mov
xchg
mov
sbb
push
call
push
xchg
fwait
in
int
add
out
andb
gs
test
addr16
push
adc
es
je
sub
pop
jo
pop
faddl
jnp
cs
pop
lcall
call
dec
cmp
lcall
es
cld
lods
push
add
ficompl
aad
push
into
mov
mov
dec
icebp
inc
scas
jns
aaa
pusha
jne
dec
insb
pop
enter
dec
xor
jle
dec
imul
jae
jo
adc
hlt
add
lock
cmpsb
fisubrs
dec
ret
cwtl
inc
nop
cmp
xchg
push
aam
or
or
sub
xchg
jb
cmc
inc
mov
push
mov
mov
mov
xchg
int
xor
out
popa
pop
adcl
mov
push
pop
insb
daa
mov
inc
lret
mov
mov
imul
imul
nop
pop
add
lcall
inc
sub
pop
push
or
dec
inc
mov
adc
fs
js
dec
xchg
add
or
shlb
adc
dec
push
adc
push
mov
mov
popa
jnp
aaa
lods
jns
sti
daa
sub
shl
addr16
inc
popa
xor
call
aam
mov
leave
sbb
inc
fcmovne
cmp
and
incl
pop
push
adc
sbb
jbe
mov
movsb
cmpsb
dec
mov
mov
into
mov
imul
inc
mov
jae
mov
mov
or
or
add
add
cmpsl
xchg
movsb
bound
mov
pusha
cli
add
add
faddl
adc
pop
sub
jae
push
and
adc
push
xor
mov
pop
xchg
inc
mov
cs
mov
mov
or
pop
push
mov
mov
lock
fsubrl
sub
leave
aas
shlb
or
rorl
jecxz
mov
fmull
cmp
lret
pop
inc
inc
ret
dec
mov
andb
js
jo
jmp
dec
lcall
add
jo
sbb
shl
sub
ljmp
fnop
movsb
sahf
les
daa
jne
jge
movsb
xchg
daa
jmp
jl
mov
and
adc
xchg
adc
add
xchg
cs
pusha
loopne
xchg
push
dec
js
add
xchg
xchg
ficoml
adc
movsl
xchg
dec
unpckhps
cmp
aam
jb
sbb
pop
loopne
ja
arpl
outsb
mov
andb
daa
loopne
cmp
add
lods
pushf
mov
in
adc
ljmp
ss
les
push
xchg
sub
inc
cmp
mov
dec
mov
dec
aam
push
aaa
test
xchg
and
addr16
add
sbb
mov
sbb
pop
mov
cmp
adc
xorl
jo
add
aam
cmp
ficomps
outsl
mov
rcrl
add
sarb
mov
fmull
cmp
stos
es
xor
nop
or
shrl
mov
arpl
lahf
push
cmp
movsb
dec
push
inc
inc
pusha
xchg
movsl
adc
test
loopne
mov
cmpsb
pop
adcl
gs
inc
pop
sbb
xchg
test
add
call
das
xor
add
dec
out
je
xor
stos
rcll
inc
jle
push
ret
and
adc
es
rcr
mov
sbb
inc
lcall
inc
loope
sub
imul
and
mov
sbb
test
push
xor
stos
dec
push
sub
dec
sbb
les
add
inc
sbb
adc
or
inc
xchg
lock
xchg
mov
mov
lahf
test
std
orb
mov
dec
jb
inc
inc
cli
es
or
and
and
xchg
and
sbb
pushf
push
push
dec
sbb
movsb
mov
es
sub
js
call
dec
mov
pop
pop
pop
rol
pop
addr16
mov
jae
dec
int
adc
push
jecxz
pop
cmp
cmp
push
outsb
jge
lea
mov
sbb
cmp
jg
bound
pop
add
jo
sbb
call
les
add
les
sbb
and
mov
test
lret
xor
mov
inc
push
daa
imul
ss
inc
lret
insl
cmp
popf
cmp
fstpt
ds
dec
jmp
int3
mov
adc
mov
push
rorl
mov
and
arpl
and
daa
mov
push
daa
add
rcrb
lods
sbb
mov
cmpsb
adc
sub
adcb
cmp
and
jecxz
dec
iret
int
and
loop
cmp
paddd
and
andb
pushf
iret
andb
dec
in
mov
jnp
lds
xchg
mov
loop
mov
sub
mov
or
daa
xchg
cwtl
xor
xchg
stos
and
stos
mov
jb
sub
fs
xlat
ret
sub
faddl
es
ja
insb
or
push
inc
pop
outsl
flds
iret
add
dec
add
scas
jne
pop
pop
jo
dec
sub
mov
sub
mov
jne
mov
inc
xchg
add
aam
dec
mov
cs
int
add
dec
lea
cmp
mov
sub
mov
push
dec
out
dec
xor
xor
mov
pusha
sbb
and
pushf
mov
cld
fimuls
lret
sbb
mov
repnz
in
inc
sub
in
or
and
jl
dec
pusha
push
adc
faddl
xchg
add
aam
sub
lock
loop
lcall
inc
and
daa
jo
jno
or
add
push
mov
fdivr
push
xlat
jno
pop
pop
sub
aad
jno
loop
filds
mov
fcos
sub
push
scas
sub
pop
inc
push
aad
xchg
das
and
mov
bound
add
adc
and
rcll
add
loop
sbb
inc
add
sti
stc
movsb
stos
cltd
mov
faddl
sub
popf
flds
sbb
jo
xchg
fldt
ficoms
push
inc
in
mov
scas
addr16
add
test
xor
or
or
outsl
mov
lahf
xchg
addr16
cld
rclb
add
js
sbb
inc
pop
mov
bound
cmpsl
aad
ja
add
push
jecxz
jmp
xchg
mov
loop
jge
and
test
fsubs
ss
out
in
push
push
sbb
pop
push
aaa
jae
mov
adc
mov
pop
sub
adc
mov
xchg
data16
aad
mov
sub
xchg
stc
decl
sbb
pop
fmuls
adc
mov
cltd
dec
ja
inc
shll
xor
sarl
ret
int3
jb
add
fdivrs
push
inc
mov
out
push
rolb
lock
cmp
push
shrb
push
xlat
shr
rcrl
lcall
cltd
and
in
cmp
cmp
lret
cmp
cld
sbb
arpl
fcompl
pop
mov
and
out
or
sbb
pop
and
movsb
lret
sbb
in
xchg
add
sbb
add
inc
in
mov
xlat
mov
jno
pop
or
ljmp
rol
ja
dec
in
jae
sarb
cld
mov
lods
mov
dec
push
stc
sbb
dec
and
and
push
mov
arpl
mov
mov
add
pop
jae
stos
pop
pop
inc
or
sbb
mov
scas
hlt
pop
inc
int
sbb
adc
inc
mov
aas
call
pop
cld
jg
lods
mov
stos
pop
xchg
and
cmp
fwait
or
fistpll
fisubl
ret
and
sub
mov
xchg
cmpsb
scas
std
dec
cmp
fs
mov
addb
lds
aam
cmpsl
rorl
mov
jno
jecxz
mov
aam
mov
sub
cmp
movsl
fmuls
jle
ss
sub
ret
sbb
fucomip
test
mov
cmp
lock
add
dec
lret
push
jnp
inc
shll
out
cmp
pop
rcl
lock
dec
pop
push
xor
pop
push
mov
orl
and
das
push
jo
jo
int3
insl
int
sbb
sub
mov
cmp
inc
aas
inc
xlat
pop
in
lods
lds
mov
or
pusha
into
cmp
loop
call
out
sbb
int3
adc
test
and
mov
ljmp
pop
gs
adc
add
add
jecxz
nop
mov
dec
push
jnp
rorl
adc
testl
incl
popa
push
mov
mov
adc
pop
daa
cmp
add
jecxz
cmp
scas
and
push
mov
in
adc
mov
jl
and
and
push
push
and
and
aam
jp
cltd
mov
cld
xor
lock
jle
leave
scas
sub
adc
xlat
call
or
insb
and
mov
mull
inc
mov
les
cmpsl
xor
aas
negl
fidivl
pusha
inc
push
stos
pop
or
mov
xor
out
sbb
dec
xchg
push
add
dec
cmc
ret
sub
popf
mov
jnp
lds
scas
jbe
out
and
dec
rcl
mov
rorb
adc
push
bound
sahf
js
nop
add
shlb
dec
xchg
mov
ret
adc
rol
cltd
imul
scas
sbb
sbb
xorl
out
andb
push
mov
mov
adc
enter
aad
jge
ja
dec
mov
ja
pop
mov
lea
ret
leave
xchg
cltd
mov
pop
xor
aad
bound
and
jmp
sub
add
lret
rorl
inc
mov
rcrl
pop
adc
cmp
mov
loop
adc
jp
repz
mov
xor
sbb
cld
sub
mov
popf
mov
popf
leave
test
or
mov
xchg
add
stc
fisubl
adc
ss
mov
mov
dec
loop
dec
clc
sbb
mov
ficompl
push
adc
arpl
jno
ficoml
sahf
popa
sbb
pusha
dec
jo
das
mov
push
and
aad
inc
adcb
call
mov
sub
orl
push
mov
mov
rolb
cmp
xchg
jge
add
sbb
stos
cmpsb
outsb
ret
xchg
cmpsb
mov
ja
add
add
sub
push
fsubr
je
or
loop
test
fnstenv
aaa
imul
mov
arpl
and
push
ret
push
adc
add
fdiv
mov
add
mov
pushf
pop
sub
dec
xor
mov
fnstenv
push
popf
push
or
sbb
cmpl
hlt
add
test
imulb
xchg
mov
or
dec
jne
mov
add
aas
or
cmp
inc
sub
dec
inc
inc
mov
sbb
mov
enter
pop
cmp
push
mov
stc
push
or
xor
and
pop
fwait
nop
scas
adc
sbb
adc
add
les
pop
icebp
scas
xor
shll
push
ret
pop
inc
neg
test
xor
inc
push
add
pop
mov
ret
popa
cmp
mov
push
xor
jo
dec
ret
or
adc
popa
insl
les
in
xchg
lods
loop
es
dec
or
mov
adc
sub
js
push
inc
jo
inc
push
jle
lock
jb
mov
faddl
rol
in
in
lods
fcmovbe
inc
lahf
scas
and
xor
cmpsl
dec
adc
loope
adc
sar
xchg
jecxz
push
lret
call
cltd
jecxz
int3
js
movsl
mov
or
clc
adc
iret
in
sbb
or
adc
fimull
jge
outsl
decl
ss
jnp
xchg
rorl
adc
inc
push
add
cmp
xchg
je
nop
mov
jno
ret
sub
jl
iret
aam
ds
push
push
sub
inc
rorb
sub
movsl
cltd
mov
popf
pop
cld
dec
cli
pop
jno
call
iret
push
push
les
cmp
int3
insl
loopne
add
int
das
dec
inc
arpl
jno
or
and
andb
rcr
sub
pop
andb
push
fs
loopne
push
adc
rorb
pop
inc
cmp
mov
popl
fidivs
test
loopne
add
push
inc
clc
test
sahf
and
pop
push
scas
mov
ljmp
pop
insl
lods
dec
push
les
mov
loop
adc
jno
sbb
sbb
rclb
shl
test
insl
or
lcall
sbb
pop
pop
add
pop
shlb
or
pop
loopne
cwtl
iret
fs
adc
push
lcall
daa
push
push
cld
test
xor
or
sbbb
pop
push
icebp
xchg
adc
inc
add
pop
stos
or
int
push
outsb
neg
iret
or
inc
add
and
jns
sarl
or
and
xlat
push
add
add
dec
cwtl
jp
jnp
sbb
bnd
pop
mov
xchg
icebp
andl
pop
js
push
add
addr16
hlt
rcll
sub
mov
inc
arpl
mov
movsb
push
jle
pushf
adc
stos
mov
ret
adc
sub
jl
jecxz
test
pop
rol
jnp
cmp
ret
push
push
dec
push
repz
add
sub
out
push
push
jmp
in
or
ret
lods
js
add
rcrb
mov
shll
test
xor
pop
sbb
xor
mov
dec
or
cmp
rclb
xchg
inc
jae
lods
or
outsl
daa
jge
mov
aam
filds
sti
fildl
enter
and
xor
pushf
dec
leave
test
jg
and
test
adc
add
mov
xor
pop
cwtl
inc
hlt
out
dec
pop
dec
add
adc
mov
out
sbb
pusha
lods
jne
jo
mov
test
aaa
cs
fwait
xchg
sub
push
ficoms
sub
jmp
xchg
lock
cmp
mov
fmul
dec
mov
add
adc
add
mov
leave
or
js
sub
hlt
cmp
sub
pop
add
sub
insl
adc
cmp
movsb
fildll
mov
cmpsl
incb
jo
out
int3
adc
add
xchg
fwait
add
mov
push
test
out
out
pop
roll
mov
sub
test
jg
dec
add
sub
xchg
sti
test
aaa
aaa
xchg
sar
call
je
mov
lcall
or
ja
xchg
mov
add
jo
mov
leave
mov
push
push
push
lret
xor
ret
mov
test
mov
cmpsb
push
in
inc
inc
jle
and
mov
cmc
mov
fdivrl
ja
xchg
inc
sub
movsb
sbb
scas
cmp
or
jnp
insb
mov
push
das
xchg
mov
ss
or
xchg
test
mov
mov
int3
sbb
mov
fnstenv
lods
fcmovu
data16
cmc
sbb
jp
pushf
cmp
add
cmpsl
push
xchg
dec
fwait
outsl
adc
outsb
int
lcall
fwait
add
xor
lock
adc
lds
ffree
or
pop
mov
popa
sahf
or
jecxz
pop
adc
notl
ljmp
jnp
xchg
in
mov
stos
pop
test
mov
scas
lret
add
mov
divb
push
rcll
shlb
inc
mov
mov
jge
fisttpll
lods
jno
xor
aaa
not
cmp
inc
add
push
jno
lock
or
sti
ljmp
xor
lods
sub
and
test
and
fldt
or
aaa
adc
mov
or
pop
sub
mov
inc
mov
pop
mov
pusha
xchg
es
fisttpll
out
add
ret
jl
fcoml
mov
push
jno
mov
es
fcmovne
mov
inc
das
mov
sbb
daa
xor
push
fsubp
sub
lds
stos
jl
sub
bound
jns
jnp
dec
add
mov
xchg
or
inc
or
inc
mov
and
jle
or
movsb
pop
inc
push
shlb
mov
push
cmp
test
adc
xor
mov
add
ret
cmpsl
fcmovnbe
pop
add
adc
pop
sti
adc
adc
inc
xorb
lcall
inc
test
adc
out
adc
fisubs
sahf
add
push
in
mov
and
cltd
xchg
scas
out
xchg
xor
jno
cwtl
add
xchg
jb
decb
loope
lahf
xor
ja
adc
repnz
push
jp
es
fisubrl
jecxz
cwtl
push
pop
or
lods
jge
test
sub
inc
sub
jno
fdivs
fcompl
arpl
fnstcw
rol
adc
and
dec
aaa
inc
mov
stos
push
xor
ljmp
cmc
ss
mov
fwait
add
inc
in
aas
shlb
fiaddl
sbb
and
adc
sub
xchg
test
sbb
push
cmc
mov
push
sub
mov
flds
xchg
push
push
lds
mov
orb
pop
rep
stos
fisubrs
iret
sahf
mov
test
cmp
adc
add
pop
das
inc
mov
push
xchg
mov
lock
pushl
xchg
int3
sub
andl
lcall
lret
jecxz
loopne
dec
iret
pop
mov
mov
imul
or
sbb
adc
pop
and
ficoms
out
xor
and
sub
and
subl
das
add
lds
mov
push
adc
adc
in
testb
inc
pushf
dec
and
mov
or
clc
inc
dec
stos
popf
mov
pop
fldz
mov
push
mov
xchg
dec
popl
xlat
mov
push
roll
add
ljmp
pop
xchg
jnp
mov
ss
jo,pt
pop
lods
subl
cmp
xrelease
jae
cmp
in
mov
cltd
out
leave
cmovae
inc
int
dec
inc
adc
imul
cli
sbb
cli
jno
add
sub
jns
out
stc
lahf
clc
sub
out
fidivs
xor
cli
and
or
sbb
test
dec
xchg
subl
rclb
in
iret
inc
lods
outsl
fstpl
pop
or
adc
dec
test
push
outsb
fstl
scas
cwtl
mov
pop
dec
sbb
sub
addb
out
daa
cmpl
out
movsb
dec
mov
ja
xor
aam
pop
cmp
shr
jmp
mov
push
jb
cwtl
test
insb
and
jb
aad
add
outsl
das
push
divl
lock
mov
or
divb
cmp
js
jg
movsb
sbb
add
pop
push
cmp
mov
push
sbb
lds
in
clc
movsb
pop
mov
or
mulb
xor
ret
mov
add
call
pushf
jae
push
sahf
dec
rcl
push
test
inc
xchg
push
testl
and
fs
push
lods
ds
push
lds
mov
cmp
add
in
push
sbb
test
popa
xor
and
adc
hlt
mov
movsl
mov
loopne
adc
mov
and
dec
pusha
mov
cmp
out
jecxz
ss
sub
lds
or
add
sub
jb
jb
push
xchg
dec
mov
xlat
les
xor
mov
popl
ret
lret
ret
or
or
sbbl
dec
mov
data16
sbb
cs
add
rcrl
sub
mov
je
adc
and
push
xor
mov
jl
pop
cmp
mov
es
bound
repz
push
xor
lcall
roll
outsl
test
push
rol
adc
jno
std
adc
fs
sbbb
lea
movsb
or
and
sarb
and
icebp
dec
hlt
xchg
andb
fiaddl
push
iret
inc
add
jl
mov
aas
addr16
andl
mov
and
lock
cmc
test
jle
sbb
aad
add
jno
bound
stc
add
fsubrs
or
and
dec
push
scas
jp
adc
data16
push
mov
cmp
inc
add
mov
clc
lcall
xchg
push
inc
xchg
push
stos
mov
sub
sub
sarl
ret
into
add
sbb
dec
loopne
adc
pop
lods
mov
popf
and
sti
je
sti
movsl
scas
push
cmpsl
pop
ficompl
fists
mov
xlat
in
loopne
cs
scas
mov
cmp
and
jmp
xchg
inc
mov
cmp
and
insl
or
xchg
cmpsb
xchg
lret
outsl
add
lods
inc
test
push
or
pop
cmpsl
add
or
or
rolb
mov
xor
mov
or
insb
push
clc
push
call
stos
ret
insl
pop
jbe
or
test
ficoms
mov
inc
aaa
sti
loopne
loopne
pop
mov
jge
jecxz
sbb
gs
stos
jnp
pop
sub
or
repnz
lahf
mov
sbb
dec
jns
dec
dec
out
xor
sbb
xchg
adc
in
mov
aaa
or
mov
lea
mov
jl
test
adc
push
jle
add
mov
aad
fsubs
andb
mov
mov
jo
push
int
pop
es
or
sub
daa
pusha
sbb
or
sbb
fndisi(8087
mov
adc
cmpsb
movsl
fldenv
enter
adc
dec
add
sbb
inc
sbb
hlt
jle
aam
fs
fisubrl
shlb
fmul
add
jbe
sbb
add
pop
dec
sub
push
push
in
mov
jnp
fcoms
lods
aad
ret
out
dec
or
outsl
popf
call
fldcw
pinsrw
pop
int3
sub
push
sbb
aaa
fs
js
loopne
push
xor
adc
and
das
rcl
dec
mov
loop
mov
push
lds
popf
popa
imulb
lea
and
jo
pop
fnstcw
jnp
push
aas
lods
sub
ja
lds
push
lahf
inc
pushf
ficomps
int
aaa
pop
and
mov
xor
pop
sbb
ret
data16
push
inc
mov
fcomp
ljmp
ffree
cmp
push
nopl
cmp
outsl
leave
jno
hlt
clc
divl
sub
mov
or
popf
pop
inc
pop
fldenv
jp
sbb
fs
cmpsl
inc
daa
cli
stos
js
mov
in
mov
repnz
in
mov
adc
fistl
pop
aas
push
sub
mov
sbb
repz
xchg
test
add
mov
pop
jg
and
cmp
test
mov
iret
scas
xchg
test
mov
pop
inc
stos
mov
andl
jno
push
shll
mov
inc
scas
imul
adc
movsb
cmp
js
sahf
jmp
add
mov
insl
jecxz
shr
js
adc
pop
cmc
xlat
ror
add
gs
push
cmp
out
mov
or
aas
jl
stos
mov
push
pop
shrl
pop
lret
mov
iret
mov
imul
mov
xchg
in
imul
pop
js
push
scas
pop
sub
sbb
jmp
outsb
iret
xor
sub
scas
imul
sub
add
mov
lods
insb
and
pop
and
adc
sub
dec
adc
scas
scas
add
and
popfw
pop
and
pusha
and
or
add
ja
das
or
les
inc
adc
mov
test
pushf
test
insl
shl
cmp
push
cwtl
sub
pop
cli
pop
in
lea
jne
call
sub
fwait
push
sub
and
dec
fisubrl
repnz
mov
and
lods
cmp
push
scas
ds
push
inc
mov
jbe
or
fildl
mov
mov
insl
int3
inc
jns
fsin
xchg
or
faddl
test
rcrb
mov
cld
jmp
pop
mov
mov
movaps
fucomi
into
mov
aam
popa
sbb
pop
outsb
adc
movsb
cmp
cmp
fisttpll
dec
out
inc
adc
loop
push
pop
add
push
scas
outsb
push
xor
inc
sub
cmp
inc
das
or
aas
sbb
in
jae
sub
jbe
add
fxch
xchg
or
push
or
push
push
pop
dec
pop
push
inc
adc
movb
push
push
imul
cld
loopne
mov
push
mov
pop
adc
jne
out
mov
sub
stos
pop
aaa
lods
out
mov
xchg
outsl
add
sub
xor
cs
ret
mov
sbb
arpl
out
movsb
dec
loopne
lds
jb
jae
in
push
dec
arpl
add
jae
sbb
pusha
pop
les
scas
pop
dec
cmp
rol
fsubrs
inc
xchg
ror
stos
push
sub
subb
and
rep
add
insb
sub
subb
lods
mov
int3
leave
data16
jp
add
sbb
movb
sub
cmp
testb
mov
in
lea
adc
add
leave
jbe
jno
sbb
aaa
mov
fstps
inc
xchg
out
mov
push
lea
aas
int3
and
pop
push
jns
loopne
add
pushf
jno
bound
cmp
outsb
jmp
adc
mov
cmp
icebp
cmc
or
cmp
es
filds
pop
pusha
and
and
sarb
jnp
in
insb
mov
nop
lods
jne
aam
cltd
add
jg
pusha
push
lds
mov
dec
push
mov
pop
addr16
cmc
je
scas
lds
xor
cmp
fimull
xchg
xorb
pop
mov
xor
xchg
jns
jb
prefetch
scas
inc
ds
and
jge
jae
and
loope
jae
ds
add
iret
sbb
ja
fdivrs
pop
cli
test
sbb
das
inc
cmp
lea
sbb
xlat
sbb
and
int
pop
push
and
push
pop
or
addr16
xlat
mov
inc
sub
adc
xchg
hlt
cmp
out
aad
stc
call
stos
cmp
dec
and
sub
push
xchg
lock
push
int3
xor
imul
pushf
cmp
jo
stos
popf
ret
and
loopne
add
out
mov
inc
daa
push
fadds
jnp
fmul
cli
pop
int3
adc
mov
aaa
push
loopne
ret
faddp
popf
xchg
push
dec
add
and
cmp
pusha
xor
adc
je
out
mov
call
lahf
or
xchg
or
pop
xor
ret
aad
aaa
adc
and
ss
test
jo
je
pushf
fmuls
or
adc
jnp
sub
jbe
xor
call
add
lahf
ret
xchg
and
or
out
cs
jmp
cwtl
mov
adc
lods
loope
add
push
or
pusha
or
jb
push
fs
jge
int3
lods
push
sub
cmp
lock
adcl
jnp
jb
push
and
and
aad
hlt
scas
cmp
or
and
adc
in
loope
test
lea
add
add
mov
and
das
xlat
and
data16
push
dec
movsb
pop
xor
cld
push
lret
sub
add
pop
jle
jns
dec
cmpsl
cmpsb
mov
pushf
sub
faddl
in
push
push
push
ror
ret
pop
dec
cltd
arpl
push
scas
xchg
xor
lret
adc
outsb
mov
lods
pop
xor
and
push
pop
or
jnp
inc
add
mov
jae
cmp
dec
rcl
xor
cmp
mov
or
lods
push
loope
sbb
fidivl
shrb
sbbl
or
and
jns
xor
xor
imul
or
lahf
mov
push
pop
inc
cmp
mov
mov
jecxz
mov
sub
in
mov
dec
and
add
hlt
pop
aas
push
and
sub
adc
test
xchg
scas
loopne
adc
mov
aam
inc
jns
shl
mov
popl
sbb
and
mov
inc
in
sbb
in
push
cmp
push
in
fwait
jne
aas
xor
dec
insb
adcb
lea
mov
push
js
inc
mov
mov
pop
fisubrs
sbb
dec
push
xor
inc
roll
mov
and
imulb
ret
ljmp
clc
xchg
std
lea
mov
mov
aaa
and
iret
xchg
popa
add
jmp
or
inc
jle
aas
add
scas
xor
mov
aas
mov
lea
add
sbb
push
inc
test
add
ret
sbb
dec
shll
fmulp
ja
push
adc
cwtl
das
cltd
xchg
cmp
out
mov
mov
push
push
imul
stos
adc
out
adc
mov
sub
int
jecxz
adc
push
add
lret
dec
push
jp
add
mov
test
clc
or
pop
aas
insl
pop
sbb
pop
adc
jp
ja
add
enter
mov
sbb
out
pop
add
popf
repz
inc
lds
adc
popa
mov
dec
cmc
push
add
loopne
sub
adc
or
sub
jl
inc
aaa
int3
xchg
or
pop
adc
lcall
lds
into
jnp
mov
xor
jo
mov
adcl
int3
xchg
cld
cmp
jns
repz
cmp
movsb
xor
imul
outsb
xor
mov
loopne
mov
test
loope
jo
lock
mov
adc
pop
xor
push
adc
jo
ja
push
jp
sub
mov
mov
mov
mov
xchg
and
nop
adc
push
les
sahf
xor
push
mov
mov
xor
add
and
jp
fucom
into
cmp
fdivrl
and
add
lahf
into
add
sbbb
inc
push
sbb
insb
adc
lock
add
les
cmp
jo
push
adc
mov
das
mov
push
int3
fcmovu
mov
mov
shll
sti
cli
cmp
xorb
scas
das
repz
add
adc
jnp
mov
iret
test
or
iret
jo
add
jmp
loopne
fsubs
icebp
jp
test
dec
push
outsb
mov
pop
pop
mov
pop
popf
int
push
mov
or
push
mov
xlat
jl
adc
push
xor
popa
and
mov
add
and
sbb
pop
push
cmp
lds
lds
pop
adc
ljmp
xor
arpl
jg
aad
iret
inc
push
and
movsl
sbb
je
sbb
jl
dec
or
cmpl
mov
cmp
inc
or
push
mov
sub
ss
mov
enter
repz
jno
or
stos
jns
sbb
cmp
sub
arpl
in
lock
andl
subl
daa
push
adc
sub
inc
dec
push
add
and
lret
xor
andb
cmpb
sbb
add
mov
test
and
int
mov
adc
mov
dec
dec
push
sti
je
mov
pop
or
or
and
jb
das
and
mov
push
lret
jge
sbb
xor
iret
jb,pn
outsl
pusha
inc
pushf
pop
cmp
push
xchg
loope
xchg
sahf
push
or
cmp
and
add
jbe
cmpsb
test
mov
popa
lea
mov
add
bound
add
sahf
jge
aas
mov
aad
xchg
scas
sub
mov
xchg
addb
sbb
push
je
dec
add
test
notb
jbe
dec
jmp
xchg
pushf
xor
cmpsl
adc
cwtl
pop
inc
icebp
repz
adc
xor
scas
les
push
iret
mov
in
mov
lods
sub
fmull
xchg
push
and
pop
outsl
pop
push
mov
pop
sbb
adc
es
jne
push
outsb
add
movsb
and
add
ficompl
mov
clc
xor
push
mov
inc
push
jbe
or
push
icebp
movsl
popf
mov
repnz
cmpb
imul
add
rorb
ja
outsl
jno
pop
sbb
lods
test
and
jbe
lret
cwtl
sahf
and
push
cmp
inc
arpl
sub
lds
dec
sub
xor
adc
aam
js
push
xlat
movsb
sub
fdiv
jbe
pop
cmpsl
orb
xor
xchg
out
mov
jnp
test
jns
inc
sti
push
push
aas
sbb
addr16
add
test
daa
lahf
xlat
dec
lock
iret
mov
sbb
push
and
mov
or
inc
or
adc
ds
xor
addb
pop
push
pop
cmp
or
btr
inc
mov
je
iret
dec
mov
and
jmp
push
inc
std
sbb
ljmp
jne
in
out
push
mov
dec
add
add
dec
cmpsb
xchg
push
loopne
fwait
mov
push
sbb
jle
jle
jns
sarb
iret
pop
add
sbb
and
pop
and
jno
mov
roll
lret
nop
imul
js
or
and
decb
dec
lret
sub
loope
stos
dec
jb
roll
ss
mov
fsubl
loop,pn
mov
and
and
dec
ss
add
push
icebp
outsb
or
sub
orb
stos
pop
fdivrs
mov
sub
in
sub
mov
repz
jbe
push
je
mov
pop
pushf
and
mov
mov
clc
mov
xchg
pop
fwait
and
das
add
and
push
shrb
and
adc
popa
jae
sbb
hlt
outsl
lock
or
mov
jmp
mov
and
lds
mov
loopne
jo
js
lds
mov
add
xchg
adc
inc
in
testl
ffree
sbb
pop
arpl
orb
mov
shrl
in
repz
das
imul
push
jbe
es
imul
ja
add
jo
mov
push
data16
jbe
jbe
mov
add
push
js
imul
outsb
cwtl
jnp
mov
push
mov
jg
bswap
add
or
mov
mov
sub
pause
mov
push
jno
push
jmp
xor
and
movsb
andb
adc
sub
adc
inc
adc
aam
push
popf
push
cmpsl
bound
pop
jae,pn
jbe
bound
addb
sub
jl
sbb
rcll
icebp
sbbl
aaa
add
mov
andb
mov
xor
push
xchg
sub
bound
popa
sbb
shl
push
montmul
cmpsb
lds
addl
aad
outsl
pop
adc
or
jo
cmp
xorb
push
cmc
xorb
fwait
mov
xchg
jg
inc
dec
push
sbb
aad
bound
add
dec
aad
mov
inc
pop
cvtpi2ps
and
popa
adc
or
ret
es
fisubrs
dec
jg
adc
xchg
dec
fcomps
insb
adc
popa
add
cmp
jns
add
ja
sub
ret
lahf
adc
shl
push
inc
push
sahf
mov
fisttpll
orb
inc
dec
or
es
mov
daa
sbb
lock
ljmp
mov
testl
sub
shl
ljmp
or
sbb
cmp
in
mov
in
movsb
pusha
adc
xchg
loope
pop
sbb
mov
dec
cmpsb
lret
xchg
jo
sub
xor
int3
addr16
add
pop
dec
mov
xorl
sub
or
insb
sbb
xor
sbb
loope
push
hlt
mov
pop
insb
add
add
js
lahf
ret
loope
add
push
adc
mov
stos
mov
sub
mov
add
sub
mov
add
jb
xchg
dec
and
sbb
adc
add
sbb
jo
and
addl
test
scas
push
lea
push
mov
dec
in
sbb
sbb
xorb
pushf
add
int3
arpl
loopne
inc
int3
xchg
int
imul
jb
jge
push
pop
mov
sub
aad
push
inc
lcall
pop
cmp
jbe
mov
into
pop
iret
inc
and
xchg
mov
sbb
loope
insb
xor
aad
inc
daa
mov
sbb
mov
inc
push
mov
fnstsw
adc
pop
lret
es
add
inc
ret
fidivs
xlat
mov
das
adc
das
ret
sbbl
cmpb
subb
movsb
cmp
ret
or
test
out
je
mov
lret
sub
mov
int3
adc
add
push
mov
adc
fimull
test
ds
dec
and
cmp
out
cmpsb
sub
add
push
orl
dec
dec
inc
call
jp
icebp
sub
mov
outsb
imul
dec
out
ja
push
aaa
es
in
push
xor
sbb
pop
pop
push
mov
add
cmp
out
mov
arpl
mov
shl
mov
fstpt
inc
insl
ja
xchg
mov
psllq
xlat
cmp
push
add
ss
negb
mov
and
dec
dec
sti
add
push
jne
sbb
ja
faddl
sbb
test
lods
andb
cwtl
lret
jle
mov
push
and
into
sub
loop
fimuls
push
mov
mov
test
and
xlat
divps
pop
loopne
pop
cmp
cmp
add
sub
add
loop
push
and
push
xor
push
pop
shll
stc
loop
cmp
or
fwait
add
inc
ret
adc
inc
mov
jbe
std
scas
and
arpl
aam
pop
pop
add
movb
mov
add
pop
mov
sbb
or
jle
shll
imulb
mov
repnz
inc
xchg
orb
into
icebp
or
inc
or
cmc
cmp
sbb
mov
xlat
scas
xor
dec
in
fimuls
add
mov
ljmp
pusha
shll
sbb
les
add
scas
push
pop
divl
jp
es
sarl
test
xchg
and
loopne
or
shll
jl
sub
mov
sahf
mov
xor
sahf
inc
xchg
aaa
and
loopne
js
lds
fnstcw
cmpsl
mov
jno
pop
pop
sbb
sbb
push
mov
sub
push
clc
add
nop
or
cmc
push
adcl
and
inc
jge
dec
clc
and
jl
mov
nop
sub
and
iret
iret
mov
sbb
adc
scas
push
mov
and
inc
dec
ret
adcl
push
stos
inc
adc
fildll
push
clc
ret
sub
adc
add
pushf
mov
roll
lds
inc
loope
mov
mov
sbb
and
idivb
adc
mov
stos
sbb
stos
adc
xchg
dec
dec
push
stc
jno
adc
loope
adc
ret
cmpsb
add
call
out
or
sub
mov
dec
js
data16
push
push
sbb
ja
sbb
add
mov
xchg
push
ret
add
and
inc
mov
xchg
and
addb
dec
adcb
dec
push
loopne
fsts
stos
mov
and
pop
adc
cmp
push
sub
inc
stos
es
cld
pop
cmp
sub
pop
pop
shll
dec
and
adc
pop
push
fildl
sbb
push
or
sbb
add
ret
mov
mov
push
inc
add
mov
or
aad
dec
dec
mov
push
adc
sbb
scas
lods
xchg
and
call
xchg
add
cld
sti
fdivr
inc
sbb
cmp
nop
in
sbb
test
shrl
out
shll
rorl
xlat
movsb
lret
cmp
jo
ljmp
out
push
xor
mov
mov
push
push
adc
popf
push
ss
shlb
pop
push
arpl
xchg
andl
loopne
push
addr16
test
or
add
js
inc
pop
xor
xor
cwtl
mov
fcmovne
push
fs
xlat
bound
inc
xorl
in
pop
inc
sub
mov
add
mov
andb
sub
add
sub
xchg
adc
lods
aam
insb
jp
push
hlt
ss
les
clc
out
cmp
and
loop
or
mov
and
sbb
mov
ljmp
sbb
mov
or
dec
inc
add
mov
mov
xchg
andl
pop
sbb
sub
incb
fisubl
push
leave
inc
pop
sbb
or
add
sbb
inc
sti
xor
cmp
mov
pop
mov
inc
into
sub
mov
sbb
sbb
mov
pop
add
mov
add
jmp
xor
cs
stos
cmp
aaa
setae
or
xchg
xchg
sti
mov
fsubrs
mov
lods
cmp
jo
adc
cmp
daa
and
aam
dec
dec
mov
push
addr16
and
lea
enter
pop
jo
xor
lahf
dec
data16
add
xchg
lods
jne
shlb
sarb
je
jbe
mov
jbe
jl
ja
dec
inc
xlat
xchg
push
fildll
mov
rorl
loopne
je
mov
and
pop
mov
insb
dec
xchg
jmp
mov
sbb
and
je
cmp
arpl
jnp
outsb
sub
pop
xlat
insb
int3
add
dec
mov
mov
push
outsb
mov
push
sub
xorb
mov
fadd
out
mov
pop
xchg
adc
and
push
mov
stos
sub
je
and
pop
lds
fcoms
inc
adc
cs
dec
cwtl
pop
jp
xor
xor
sub
jne
inc
clc
jno
faddl
stos
into
mov
pop
je
test
or
jnp
xor
cmp
xor
pop
add
mov
cwtl
inc
nop
in
inc
lds
inc
xchg
sbbb
jp
jmp
aam
shll
or
stos
daa
push
jne
divb
inc
xor
mov
stos
xor
fs
fcomp
out
sbb
dec
dec
xor
jmp
dec
cmpsl
icebp
or
dec
and
stos
cmc
pushf
aam
outsb
lret
mov
push
rcrb
push
out
insl
nop
call
mov
call
movsb
adc
push
insb
add
outsb
xchg
cmp
stos
adc
sbb
movsl
sti
dec
ljmp
xchg
fnstenv
mov
mov
test
insb
add
jge
sbb
aaa
mov
sub
inc
cmpsl
xchg
push
xchg
xor
or
mov
rcrl
xchg
test
dec
mov
aaa
mov
adc
mov
add
push
fsubrl
les
pop
sub
and
dec
xchg
stos
and
add
test
push
aam
fdivrl
push
xor
cwtl
aam
out
sub
int3
jb
dec
arpl
dec
jno
inc
add
jb
push
mov
sub
bound
inc
nop
pop
int
outsl
mov
nop
or
add
xor
movsl
pusha
xchg
lret
into
dec
jp
pop
int
call
fmull
rcl
mov
fcmovu
xchg
roll
sbb
add
push
jnp
xchg
shll
dec
mov
insl
dec
fdivs
flds
les
sbb
fwait
fwait
or
mov
push
scas
jle
les
xor
xchg
divb
add
pop
sub
sub
lods
ror
jecxz
inc
rolb
sbb
pop
nop
xor
dec
dec
push
lahf
mov
scas
fcomip
ficoms
scas
add
call
inc
adc
push
xchg
and
sub
push
int3
fimull
and
in
imul
dec
hlt
aas
sahf
daa
fwait
and
lcall
negl
adc
push
push
inc
push
fwait
add
outsl
xchg
inc
jno
pop
je
es
dec
das
push
ret
in
sub
mov
push
mov
mov
fisttpl
data16
and
push
or
sub
inc
cmc
cmp
inc
int3
jle
rolb
cmp
adc
aad
and
sti
cmp
hlt
pushf
fwait
sbb
xor
adc
sub
adc
jge
lret
inc
xor
push
daa
cmpb
push
mov
jl
daa
enter
sub
pop
lds
mov
adc
add
add
in
imul
sub
fisubl
aaa
pop
and
fimuls
loope
pop
addr16
xchg
jb
int3
cli
cli
xlat
sub
dec
add
push
pop
andl
push
adc
adc
and
jno
cmp
mov
push
xchg
sti
mov
inc
push
adc
fwait
adc
add
js
pop
pop
pop
inc
dec
int
loop
inc
fisttps
pop
shll
pop
aas
mov
mov
mov
adc
mulb
add
popf
cltd
lods
and
sub
push
fists
mov
and
mov
mov
je
int
sbb
out
adc
xor
push
add
cmp
mov
fs
bound
adc
loopne
push
call
cmpsl
out
add
mov
pop
aaa
enter
and
cmp
idivl
add
repz
push
faddl
xor
mov
sbb
mov
loopne
in
sub
inc
cmpsl
cmpsl
clc
push
adcb
das
int
iret
mov
add
in
hlt
addl
jo
dec
test
add
adc
ja
dec
nop
push
xchg
mov
int3
and
outsb
das
pusha
push
pushf
pop
das
cli
xor
into
xor
sub
mov
out
lock
insl
lods
aas
xor
mov
insb
scas
ret
aas
adc
mov
aam
es
sub
cltd
pop
test
mov
and
xchg
inc
and
lods
js
and
and
jnp
enter
push
cmp
cmpb
xor
daa
movsb
scas
cmp
xor
add
push
push
mov
aad
cmp
imul
xor
cld
sub
or
sbb
sahf
mov
dec
call
cltd
fimuls
pop
or
pop
add
sbb
pop
inc
xor
mov
test
lcall
or
pushf
inc
addr16
adc
cmp
add
sub
sbb
inc
pop
inc
add
mov
xchg
lret
faddl
push
ja
xor
stos
push
adc
popa
fsubrs
pop
dec
das
mov
cmp
bound
add
mov
sbb
jo
rolb
cld
xor
enter
or
sbb
xchg
add
add
adc
mov
orl
xor
xchg
or
push
pop
bound
addr16
fmulp
dec
imul
and
orl
ljmp
ss
dec
les
push
push
inc
jp
pushf
push
dec
mov
fcmove
add
ret
gs
loop
jno
xchg
jg
xchg
fisubs
enter
xor
jnp
sub
and
add
adc
dec
cli
jge
call
fs
daa
cmp
js
add
fmul
and
fisubrs
inc
lcall
nop
sub
push
aad
jno
xchg
movaps
and
pop
icebp
xor
pop
pop
cmp
subl
in
loope
and
cmp
inc
mov
fimuls
orb
aaa
jne
rolb
push
or
sbb
xchg
push
xor
aad
inc
dec
and
add
and
sbbb
mov
xlat
stos
es
loope
and
push
mov
mov
mov
inc
inc
xor
pop
dec
shlb
add
mov
or
inc
adc
mov
mov
fwait
inc
cmpsb
mov
out
push
insb
xor
js
mov
cmpb
rol
mov
movsb
adc
repz
sbb
adc
push
lods
sbb
push
mov
mov
jns
jnp
int3
or
insl
lea
xlat
sbb
outsl
imul
leave
adc
es
jne
and
mov
push
and
rolb
dec
pusha
xor
js
push
movsl
andb
popa
cmp
int
adc
add
xor
fcoml
push
and
inc
xchg
nop
lods
orb
mov
and
dec
or
js
fsub
pop
sub
mov
insl
fsubl
cmp
adc
pop
cltd
bound
arpl
repnz
shrl
pop
push
jmp
and
and
jmp
lds
and
nop
or
call
imulb
cmp
std
enter
mov
aas
in
xor
movsb
in
movsb
fstpl
sub
mov
das
pop
inc
lahf
loopne
push
xchg
dec
jge
fsubl
bound
cmc
mov
cld
inc
fdiv
pop
loope
cwtl
scas
dec
xor
decb
cmpsl
add
insb
and
pusha
jae
sub
or
dec
and
stos
cmc
test
jecxz
cmp
cmpsb
jge
jo
clc
es
cmpsb
sub
adc
jp
push
add
pop
adc
xor
push
push
pusha
mov
imul
xchg
test
in
stc
push
sub
sub
mov
adc
repnz
pop
push
insl
and
add
daa
adc
push
or
add
stos
jecxz
mov
sbb
push
and
pop
jle
xchg
push
fadds
adc
sub
xchg
js
movsb
inc
push
pop
xchg
scas
cmpb
fldl
pop
mov
dec
mov
xor
fbstp
notb
fldt
mov
int
push
aaa
or
shl
mov
inc
sub
add
push
mov
das
dec
add
push
shlb
push
xchg
sub
test
scas
or
faddp
mov
jne
sub
stos
cltd
cmp
adc
pushf
cs
or
and
pop
leave
in
jbe
fmuls
loope
inc
iret
mov
push
aam
push
push
mov
jl
or
sub
mov
pop
andb
ljmp
push
icebp
test
ret
or
lods
sbb
hlt
mov
and
test
aas
push
je
mov
scas
addr16
pop
or
in
adc
fstl
and
push
je
inc
sub
iret
rcrb
push
jbe
push
add
add
mov
push
dec
lods
in
mov
frstor
mov
test
add
cmp
ds
and
mov
and
cmp
cwtl
push
push
scas
sbb
clc
mov
add
insl
and
push
jno
xlat
lahf
add
xchg
or
iret
leave
adc
xorl
push
sub
clc
ret
pop
dec
sub
add
test
fucomp
push
call
jle
pop
test
stos
xlat
push
pop
add
inc
push
xor
sub
and
cmpsb
outsb
or
outsl
lods
mov
jae
inc
xchg
repnz
inc
call
outsl
push
sub
lods
jb
push
inc
sub
push
dec
lcall
out
and
sub
sub
mov
add
scas
fcmovnu
push
dec
add
push
test
dec
bound
push
cmp
stos
mov
add
scas
in
rolb
ret
aas
dec
dec
cmp
mov
rolb
add
and
cs
adc
outsb
aas
sbb
scas
adc
push
repnz
push
push
cwtl
in
sbb
test
inc
xlat
inc
push
push
pop
or
push
ret
or
out
xor
add
push
loop
jnp
js
fmuls
add
adc
inc
push
bound
out
push
jmp
xor
pop
pop
les
add
sub
push
lahf
mov
lods
outsl
sbb
mov
mov
arpl
js
enter
jae
mov
pusha
pop
pop
mov
fdivl
mov
inc
in
jmp
sub
popa
adc
and
sbbb
add
shl
push
hlt
inc
sub
mulb
pop
sub
scas
push
push
jb
cld
fstl
or
xor
and
fdivp
scas
add
xchg
add
jge
data16
shl
jae
repz
cwtl
cmp
and
arpl
push
movsl
xor
pop
push
lds
add
and
or
push
dec
and
sbb
push
pop
jo
sbb
xchg
jl
dec
push
nop
add
pop
pusha
push
out
in
and
daa
push
mov
or
cmc
shl
inc
stos
inc
mov
mov
fildll
mov
out
add
sub
add
pop
iret
loop
push
filds
lds
cmpsl
arpl
cmp
cmp
push
xchg
fdivrl
add
ss
pop
cwtl
add
dec
jo
mov
cmp
cmc
add
fistps
sbb
jb
call
cmpsb
jae
loopne
inc
daa
mov
test
clc
push
decl
and
inc
fdiv
icebp
in
sbb
jne
cmc
add
pop
out
xchg
lret
mov
es
out
cli
cmp
dec
dec
out
xchg
rclb
dec
lods
and
movnti
xchg
xchg
mov
scas
jp
out
push
imul
daa
test
shl
gs
mov
xlat
push
out
mov
or
int
pop
mov
mov
mov
data16
iret
jo
and
mov
and
fistl
inc
repz
popa
pop
inc
add
shll
pop
and
pushf
mov
and
push
fildll
mov
sub
addl
pop
adc
push
popa
imul
cmp
push
jnp
out
sbb
push
pop
and
jmp
xor
addb
inc
out
pop
cmc
out
jo
xor
clc
iret
jae
pop
shlb
adc
cmc
pop
fstpt
jg
ljmp
mov
mov
sub
or
or
jle
dec
mov
scas
cmp
fs
xchg
lret
sti
lret
sbb
lock
and
sbb
test
dec
mov
loope
addr16
xor
xor
pop
or
fsubrs
rcll
jo
mov
scas
bound
lea
pop
pushf
sub
pusha
sub
ja
loopne
xchg
rolb
fdivl
jmp
nop
mov
ds
add
jae
fildl
pop
cmp
call
popa
pop
ret
arpl
les
pop
xchg
mov
stos
xor
in
fiaddl
mov
call
dec
jl
push
xlat
cmpsb
pop
fst
ret
xchg
incl
test
sub
cmpsl
sbb
lods
xor
mov
cmpsl
mov
inc
and
inc
push
subb
sbb
int
movsb
add
shlb
fimuls
and
cli
insb
out
testl
fs
xor
pop
out
push
inc
hlt
iret
aas
ss
sbbl
aam
and
inc
in
inc
cmc
fsubs
subl
cmp
jge
or
mov
and
aaa
mov
inc
test
xor
rolb
jg
mov
cmp
push
mov
shlb
fdivl
test
mov
add
mov
xchg
out
out
and
inc
lods
pop
sub
xchg
inc
sbb
loope
fisubrl
dec
inc
call
push
jbe
dec
inc
aam
negl
mov
sub
dec
movsl
jns
inc
es
cwtl
push
jnp
andb
dec
mov
push
test
fstp
mov
xor
jp
or
inc
jns
out
dec
cmpsb
xchg
inc
test
dec
lret
push
test
movl
and
les
xor
and
fcomp
dec
or
xchg
into
lret
ret
lret
mov
or
subb
and
jge
mov
test
cs
loope
mov
fdivl
mov
push
xchg
pop
push
filds
add
push
push
div
sub
and
cmc
lods
mov
repz
iret
inc
inc
dec
mov
push
add
sub
inc
cmc
rorb
out
lcall
xor
sbb
stos
adc
xor
lock
dec
scas
dec
add
mov
add
push
push
jne
mov
lods
push
bound
cltd
gs
sbb
and
add
sti
faddl
and
sahf
mov
push
daa
dec
pop
aas
pop
icebp
in
mov
xchg
cmpsb
cwtl
push
pop
int
mov
out
xchg
mov
scas
outsb
mov
addb
sbb
fstl
movl
pusha
and
inc
aaa
and
inc
mov
mov
jo
lock
test
sub
pop
mov
sub
test
adc
cmp
std
mov
push
icebp
movsl
inc
nop
and
add
clc
cmp
das
inc
insb
mov
sub
movsb
push
jmp
and
sbb
push
daa
into
and
dec
inc
mov
or
jo
int
push
pop
jl
adc
or
aad
and
cmp
insl
mov
xchg
adc
mov
pop
add
adc
mov
loopne
cmpps
enter
push
js
divl
dec
add
fnstcw
and
fists
push
sub
mov
popa
or
mov
mov
icebp
push
scas
sti
mov
cmp
adc
mov
xor
or
adc
add
mov
push
jmp
push
stos
stos
inc
outsb
movsb
pop
push
dec
cmpsb
adc
addl
scas
out
dec
in
pop
mov
mov
es
ffreep
aas
jae
clc
xor
or
dec
mov
out
adc
lods
rcll
mov
xchg
add
jne
lods
xchg
and
xor
fwait
mov
inc
inc
cwtl
add
mov
fdivrl
div
scas
pop
rcll
xor
adc
pop
dec
movntq
out
mov
xchg
repz
aam
mov
mov
hlt
fisttps
sub
ret
shlb
inc
jmp
inc
cmp
adc
jmp
cmp
shl
push
insl
pop
inc
out
les
xchg
adcl
mov
add
adc
loope
outsl
push
ret
mov
sbb
div
jmp
mov
xchg
cmp
push
xor
push
jno
and
mov
push
xor
ret
add
push
jae
loopne
nop
add
mov
xchg
push
iret
mov
movsl
xor
test
pushf
lock
xlat
daa
fbld
cmp
shl
hlt
adc
add
call
and
cmp
xor
xor
xchg
jnp
jno
ret
mov
loopne
icebp
inc
pop
mov
cli
shlb
clc
ljmp
mov
mov
cmpsl
sbb
fsub
aam
xchg
stos
inc
cltd
push
out
cmc
xor
cmp
jp
lds
sub
add
push
inc
insl
cmp
dec
cs
mov
rol
mov
ret
or
aas
push
or
add
clc
shr
adc
aaa
mov
or
sti
xor
sbb
xchg
adc
aad
popf
imul
sub
addb
sbb
mov
mov
mov
or
pop
test
les
das
mov
mov
out
cwtl
push
push
or
and
sbb
ret
enter
push
lret
inc
fs
sub
mov
aaa
fiaddl
cbtw
out
mov
dec
push
xchg
mov
decl
push
push
xor
xor
ja
daa
cmp
sub
out
jmp
test
adc
xorb
sub
popf
cmpsl
or
xchg
cmp
pushf
inc
test
pushf
xrelease
mov
xchg
int
lcall
ss
sub
inc
in
adc
out
int3
push
sub
jg
repz
dec
cmp
incb
mov
adc
fdivl
or
idivb
mov
cmpsl
ja
fwait
sub
cmpsl
lock
stos
mov
or
sbb
xchg
cmp
sub
fcmovnbe
adc
dec
repz
popa
gs
fimuls
add
shll
sub
in
sbb
sub
mov
mov
mov
aad
outsl
cmp
sbbb
dec
xor
shrb
sbb
cmpsl
xor
xor
into
mov
and
inc
aaa
add
in
shll
xor
push
pop
inc
cmp
cmp
cmp
adc
cwtl
and
sub
and
inc
cmp
push
out
or
in
out
cmp
lods
push
fiaddl
add
sub
aas
xchg
imull
loope
adc
call
pop
or
outsl
mov
cwtl
push
mov
mov
les
xchg
lret
cld
mov
jl
add
mov
xchg
bound
sbb
xchg
cmp
movl
add
aaa
ss
cmp
leave
sub
jp
test
adc
inc
jo
add
mov
inc
cmc
lock
shl
add
cltd
push
call
js
test
jl
mov
shlb
inc
cmp
dec
ja
add
mov
xor
mov
lea
jp
aas
sbb
dec
ret
ret
std
add
rcll
imul
and
xlat
cwtl
clc
data16
shlb
jns
out
inc
push
sbb
jle
mov
pop
pop
les
stos
pop
xchg
dec
mov
cmp
movsl
and
out
mov
xchg
cwtl
int
in
push
xor
cltd
mov
add
mov
in
push
jno
mov
adc
push
add
stos
or
cmp
test
das
mov
push
mov
pop
adc
and
call
mov
sbb
pop
pop
das
sti
sub
stos
std
loope
lods
and
es
scas
aaa
sub
fsubs
adcl
mov
jl
inc
das
aas
jp
aad
out
xchg
sbb
ljmp
add
jle
arpl
mov
mov
cmpsl
cwtl
sbb
inc
test
andb
add
sub
jmp
mov
inc
out
iret
lds
fisubl
adc
mov
inc
inc
adc
xor
xor
and
add
add
mov
push
adc
cltd
push
outsl
sub
aas
adc
add
test
push
into
push
lcall
adc
add
inc
mov
add
outsl
add
mov
xor
negl
arpl
les
insb
or
shrl
push
inc
fisubrl
mov
or
xchg
cmp
sbb
mov
jbe
cmp
bound
mov
adc
inc
sbbb
cmpsl
loopne
aad
add
jns
fcompl
popf
inc
pop
push
pop
mov
js
jp
bound
dec
add
mov
lea
and
imul
adc
push
or
sahf
mov
xor
mov
jg
xchg
mov
aas
arpl
inc
and
xor
popa
cmp
xlat
adc
pop
imul
mov
jge
dec
adc
je
mov
add
adcb
rcrl
and
cmpsb
dec
add
inc
xor
imul
mov
or
addl
lods
popa
sub
mov
adc
sbb
int
add
mov
add
je
pop
sar
outsl
pop
inc
and
ficoml
bound
cmpl
xor
fsubl
dec
inc
outsl
xlat
add
mov
adc
sub
xchg
pop
shr
popa
push
imul
arpl
int3
inc
mov
rcrb
sarb
mov
mov
mov
addb
jg
addl
pop
xor
xor
pop
dec
dec
push
aad
push
dec
inc
int3
dec
lahf
lahf
mov
pusha
inc
rcrl
or
pop
iret
inc
xor
daa
rcll
jb
int3
mull
orb
stos
popf
jnp
add
cwtl
xchg
jns
pop
lcall
bound
xlat
test
lods
out
lea
cs
das
out
adcb
or
aam
push
sbb
sub
push
in
test
outsb
push
cmp
negl
add
fmull
push
inc
in
addb
mov
sbb
or
mull
aad
add
xor
inc
add
cmc
or
fistpll
push
getsec
push
lods
adc
stos
push
lds
mov
shll
lcall
icebp
push
mov
jno
xchg
jecxz
mov
push
xor
fistl
sub
out
push
push
out
jo
push
cmp
mov
bound
xchg
mov
adc
mov
insl
daa
decl
cmpsb
and
into
int3
fcomps
stos
mov
push
jg
lods
mov
and
inc
out
cmp
add
rclb
or
add
and
outsb
cmp
in
nop
sub
add
xchg
add
sarl
mov
jmp
ds
stc
adc
mov
cmp
test
fmul
pop
loopne
or
jle
inc
leave
clc
loopne
dec
xlat
mov
hlt
pop
and
add
aad
add
loope
mov
pop
xchg
or
add
inc
xchg
adc
mov
xchg
cmp
inc
add
dec
pop
sbb
add
add
pop
sbb
jle
adc
lcall
sub
or
mov
out
out
out
cld
mov
daa
add
inc
scas
xchg
or
cmp
sti
add
lret
fistpl
add
mov
rol
test
add
addr16
pop
xchg
ficoms
jo
and
aam
fs
push
addb
lods
or
lds
add
pop
mov
test
or
jl
fsubl
popl
ja
pop
iret
faddl
xchg
subl
repz
jnp
and
push
push
inc
adc
mov
test
jge
cmp
sar
mov
mov
add
push
inc
lret
xchg
scas
cmp
or
jl
jle
bound
cwtl
cmovo
into
jb
cld
xchg
pop
push
rorl
adc
sub
push
shrb
mov
inc
sub
push
adc
adc
lcall
pop
mov
leave
xlat
scas
inc
jae
ljmp
bound
add
cmp
cmp
mov
push
or
push
push
test
push
push
jg
sub
cmp
inc
push
push
leave
lock
mov
sub
mov
ficoms
add
inc
xchg
cmp
sbbb
fbstp
add
or
scas
pop
mov
lock
adc
faddl
cmpsl
push
xchg
fcomps
jo
xchg
push
jnp
push
aad
fs
cli
scas
jno
push
fcomps
pop
or
bound
les
add
dec
ret
aam
pop
adc
push
hlt
push
sbb
cltd
loope
push
std
xor
dec
pop
push
sub
stos
xor
pop
call
in
roll
je
movntps
movsb
cli
cmp
adc
outsl
push
push
in
dec
and
scas
xchg
xor
and
push
ds
inc
test
lds
xchg
loop
sub
adc
or
push
mov
scas
inc
pushf
inc
dec
adc
sub
mov
or
add
fcmovb
imul
fbld
add
sbb
sbb
rolb
mov
add
or
push
adcl
cltd
inc
inc
mov
pushf
inc
and
sub
dec
add
inc
iret
dec
rsqrtps
mov
jp
cwtl
sti
insl
int
fsubr
fstpl
cmp
and
inc
add
sub
and
adc
call
mov
sbb
mov
rcrl
sbb
pushf
es
test
jbe
mov
xor
sahf
mov
mov
sar
push
js
loop
gs
fistpll
ja
jno
into
fs
pop
adc
lods
les
jg
mov
and
add
fdiv
and
cmc
and
lcall
sub
jb
dec
mov
xor
sbb
adc
repnz
ljmp
stos
ficoml
dec
and
test
inc
lock
fwait
daa
xor
bound
xlat
inc
sbbb
sub
popa
dec
fwait
push
xchg
or
sub
jmp
out
push
add
mov
sub
mov
xor
jno
pop
jp
xor
lods
cmpb
stos
mov
xorl
pop
loopew
fstpl
or
fstps
cmp
fs
fildll
push
aad
mov
mov
subl
daa
roll
mov
and
out
and
sub
mov
in
or
inc
add
adcl
fstpt
inc
sbb
ds
iret
mov
or
mov
cld
int3
push
add
stos
add
jns
mov
bound
data16
fsubrs
ja
pop
jae
pusha
push
orb
pusha
jo
pop
pop
add
mov
mov
je
fdiv
mov
popa
add
leave
mov
adc
xchg
daa
sbb
mov
imul
rcr
iret
jecxz
xchg
roll
insb
das
push
fnstsw
jbe
xchg
inc
fstl
enter
ret
push
daa
sbb
insl
fcoml
iret
dec
push
mov
test
jl
push
jae
flds
sbbb
xchg
and
test
imul
xor
and
mov
lds
sub
sub
outsb
dec
mov
jnp
pop
jb
jge
add
es
jp
mov
insl
pop
add
sbb
jns
and
sbb
test
xchg
adc
aam
pop
aad
cmp
pusha
cld
adc
je
add
cmp
push
dec
dec
cmp
sbb
mov
insl
repz
sub
pop
rolb
xchg
data16
mov
mov
loopne
add
sub
stos
mov
or
mov
test
sbb
jp
jle
or
sbb
ret
subb
js
push
add
jo
xor
pop
add
pusha
or
xchg
mov
xchg
mov
jae
insb
pop
lds
inc
inc
data16
xchg
cwtl
in
repz
and
lret
xor
sete
shrl
daa
popa
xor
aad
push
repz
cmp
xchg
movsb
jbe
pop
in
add
jb
fcompl
xchg
cmp
repnz
sbb
imul
scas
test
add
jnp
push
leave
addr16
aad
lds
mov
icebp
bound
jo
adc
lcall
mov
subb
xor
lcall
add
mov
orb
mov
cmp
sbb
test
inc
in
push
aaa
into
add
pop
mov
inc
and
std
add
dec
clc
or
add
cmp
push
std
mov
add
adc
inc
cmp
fs
add
outsb
dec
pop
shll
or
ljmp
movsb
fs
sbbl
cvtps2pi
in
rcll
push
pop
mov
xorl
pop
sub
push
shlb
jno
add
sbb
lahf
mov
jno
mov
arpl
ret
int
inc
sub
inc
inc
push
into
pop
aaa
imul
add
add
insb
shrl
and
dec
das
or
je
ret
adc
add
or
or
mov
mov
xlat
pop
pop
pushf
mov
cs
cmp
pop
lret
pop
imul
pushf
add
sbb
xchg
sub
xchg
data16
xchg
mov
mov
lcall
fadd
leave
icebp
push
xlat
fs
lahf
inc
pop
adc
push
mov
xlat
mov
sub
in
pop
movd
aas
out
test
adc
nop
iret
push
fidivs
jo
push
andb
inc
sbb
lcall
jno
aam
xchg
and
outsb
dec
adc
out
orb
test
loope
mov
jmp
lret
sub
stos
or
mov
mov
or
xor
jb
add
push
mov
inc
xor
push
adc
sub
in
jb
push
rcll
and
xchg
and
cmp
ror
decb
andb
mov
call
mov
out
inc
mov
pop
loope
jg
sub
cmp
in
xor
stos
das
loopne
dec
sub
es
add
jno
xchg
lcall
adc
or
add
adc
out
pusha
xchg
out
push
sbb
sub
aas
jp
xchg
jnp
cltd
fwait
rorl
push
push
xchg
mov
cwtl
pop
sbb
add
int
sbb
int3
pushf
jno
or
jb
bound
shrb
scas
icebp
push
ss
push
mov
daa
aam
loopne
add
jns
xlat
add
inc
cmpsb
inc
ret
add
sbb
outsb
dec
mov
adc
or
mov
push
roll
rorl
stos
iret
cmpsw
xchg
jmp
aam
outsl
jl
dec
add
mov
inc
inc
or
mov
add
stos
push
inc
add
cmp
jo
jp
push
addl
adc
in
orl
jne
ljmp
sbb
xchg
cmp
arpl
mov
sub
pop
movl
add
sub
cmc
and
ss
sbb
adc
mov
les
dec
inc
xor
mov
push
mov
test
inc
scas
lcall
xor
aam
mov
icebp
lods
xlat
xchg
fmuls
add
push
mov
mov
mov
jmp
bound
adc
out
ret
inc
js
mov
loope
jge
addr16
hlt
sub
add
inc
cmpsl
sti
cmp
xchg
and
and
fcmovnu
mov
sbb
orl
pop
pop
les
sub
pop
inc
fsts
cmp
in
pop
ss
dec
sbb
mov
shlb
pop
adc
pop
xchg
push
roll
push
pop
inc
rol
push
stc
clc
pop
push
pop
mov
incb
pop
inc
aas
push
lcall
sbb
adc
push
icebp
pop
jg
ljmp
lock
fldcw
mov
es
pop
insl
xor
pusha
push
inc
rclb
mov
or
mov
iret
and
xor
xchg
jmp
adcl
xchg
outsw
cs
imul
push
fimuls
cwtl
dec
jne
ljmp
rcll
adc
jg
inc
push
mov
pop
xchg
cmc
cmp
pop
mov
sahf
cltd
fbld
jno
add
mov
xlat
nop
add
scas
iret
subl
push
out
add
cmpl
add
jmp
mov
add
lds
shlb
mov
movsl
inc
je
ficoml
addr16
cltd
or
add
pop
lcall
cmp
xor
or
pop
jmp
lock
jbe
cld
das
mov
push
jo
ja
cmp
xor
xchg
mov
les
hlt
cmpsl
sub
icebp
jne
loop
mov
rol
mov
mov
and
add
lcall
inc
orb
or
out
rcrb
jge
lahf
pop
and
loopne
inc
pop
lret
xchg
aaa
mov
ja
inc
sub
fldl
sub
and
add
xlat
inc
add
adc
sub
stos
sbb
sub
xchg
pop
shlb
jp
dec
xchg
sub
or
fsubl
push
aaa
dec
adc
andb
imul
xlat
or
sub
imul
out
pop
jbe
or
dec
loopne
js
ja
inc
and
push
test
inc
add
sub
in
add
xchg
inc
roll
xchg
mov
inc
inc
xchg
add
loop
dec
pop
mov
sbb
mov
push
fiaddl
test
adc
inc
pusha
insb
mov
mov
iret
popf
call
or
adc
roll
inc
daa
lcall
sar
cmp
mov
outsb
mov
cld
push
lock
and
adc
add
inc
xor
lds
push
adc
push
hlt
js
xchg
int
loope
xchg
mov
adc
es
inc
fwait
pop
adc
inc
hlt
ret
in
loope
add
imul
cmp
call
fsubs
ja
sbb
mov
xor
cltd
iret
pop
insl
or
or
or
jle
sarl
test
fcoms
mov
and
sbb
add
out
mov
push
xchg
scas
js
dec
loopne
inc
lds
inc
pushf
and
in
push
adc
pop
fwait
inc
jae
mov
push
int
addr16
mov
inc
dec
sub
mov
sbb
pop
cmp
add
stc
es
inc
push
xor
jo
int
mov
adc
mov
cmp
push
lea
in
out
aad
pusha
dec
shlb
add
cmpsb
sbb
ja
xchg
or
es
jns
xor
testl
roll
fdivrs
push
jno
mov
mov
fildl
js
loope
adc
loope
add
adc
aam
inc
or
es
in
test
ja
add
pop
iret
and
subl
pop
mov
mov
push
das
add
jo
sbb
movq
mov
push
mov
mov
shrb
jae
negl
jo
in
addr16
jb
xchg
adc
push
sbb
pop
inc
mov
pop
push
dec
rorl
lds
jecxz
outsl
popf
or
and
sbb
inc
jo
and
ret
adc
sub
out
xchg
nop
and
add
and
push
fildl
add
mov
pop
jg
mov
pop
in
iret
movl
sahf
push
and
add
jns
pcmpeqb
and
push
add
adc
jb
or
addb
dec
add
mov
insl
testb
lock
push
cwtl
add
out
rorb
pop
sti
lods
jl
mov
add
xor
xor
ja
jge
xor
sbb
daa
shrb
sbb
sub
add
test
mov
gs
aam
mov
test
mov
loope
mov
addr16
pop
outsl
xor
stc
mov
mov
or
insb
call
popa
jae
push
ljmp
adc
add
or
adc
xchg
adc
into
ret
cmpsl
call
push
mov
or
mov
shl
sbb
ret
cmpl
inc
std
adc
adc
or
mov
icebp
inc
shll
jg
aam
mov
daa
mov
mov
pop
xchg
out
shrl
and
js
cmp
ret
jo
andl
insl
iret
out
ljmp
sub
and
and
arpl
rcll
sub
mov
or
mov
jle,pt
ljmp
xchg
loop
shlb
or
lcall
push
inc
push
or
test
in
lret
jge
insb
enter
rorb
jecxz
mov
stos
imul
mov
jbe
inc
and
test
je
push
jnp
cmp
pop
sub
or
inc
lds
xchg
xchg
pop
adc
and
cmp
pop
movsb
fists
int
push
inc
lcall
mov
lods
jb
push
push
adc
pusha
push
pop
cmc
inc
mov
fst
out
int3
and
or
mov
das
loop
and
mov
mov
inc
add
mov
mov
lods
inc
ret
xor
dec
int3
push
in
or
cmp
or
js
sbb
inc
xor
push
add
jp
mov
rcr
leave
sub
dec
les
and
inc
adc
xchg
lds
mov
add
push
inc
repz
inc
out
arpl
xor
dec
sub
out
fidivs
movsb
inc
call
inc
lahf
pusha
pop
adc
or
and
mov
clc
add
cmp
mov
mov
push
loopne
ret
mov
pop
push
add
call
inc
mov
xchg
frstor
xchg
cs
cmc
xlat
mov
inc
je
addb
addr16
jg
sbb
and
add
insl
inc
adc
mov
lret
out
data16
cmp
sbb
jo
inc
lret
arpl
jne
push
rcrl
cwtl
pusha
mov
mov
shlb
xchg
mov
rorb
push
push
das
mov
adc
and
hlt
adc
cmp
fs
or
rolb
mov
out
stc
out
mov
or
mov
mov
cmp
push
adc
mov
or
or
jo
xchg
sbb
sbb
das
add
data16
inc
add
jae
das
mov
mov
jne
lock
rcrl
and
push
lods
call
aas
xchg
aaa
dec
lret
dec
mov
push
mov
jle
add
mov
in
xor
pop
sahf
fcoms
dec
add
or
and
xchg
cmp
popa
lock
shll
in
and
and
int
adc
cmp
mov
and
push
fucom
mov
mov
mov
xor
inc
scas
scas
inc
fcmovnbe
push
add
mov
call
push
xlat
fwait
roll
sub
pop
mov
es
jnp
cmp
mov
rolb
sub
fbstp
lock
lret
dec
in
mov
and
adc
or
and
cmp
mov
into
mov
cmp
cmp
dec
leave
outsb
xchg
adc
bound
dec
negl
rorl
inc
ja
mov
sbb
scas
xor
jnp
cmp
jle
cmp
push
cmp
hlt
movsb
add
roll
test
push
inc
or
xor
aaa
out
cwtl
add
test
mov
mov
scas
js
jae
sub
test
fwait
push
xchg
in
lahf
sub
xor
fcomi
pop
mov
or
stos
inc
push
pop
shll
mov
jl
add
out
mov
add
aaa
push
int
or
shl
fsubl
sbb
pop
or
push
frstor
or
fadd
sub
sahf
je
inc
jmp
jg
push
pop
loop
data16
aaa
fwait
clc
sub
xor
sahf
loope
or
mov
cmc
out
mov
mov
mov
jle
mov
adc
je
pop
fmull
fidivl
mov
iret
pop
sub
cmpsl
fsubs
data16
lock
int
das
sarb
sub
lock
enter
cltd
pop
aad
test
and
sbb
jp
shll
std
dec
sbb
sub
inc
daa
dec
shlb
jecxz
and
mov
fcomps
mov
lds
add
ds
cmpsl
xorl
ret
addr16
add
jne
cli
fcoms
inc
scas
adcb
jp
dec
and
int3
loope
pop
orb
stos
mov
jge
mov
mov
xor
lret
jno
adc
add
mov
imul
add
aaa
push
sub
loop
jb
and
in
push
push
shll
repz
sub
ret
ds
add
inc
adc
ficompl
iret
inc
mov
xchg
add
xor
add
in
sahf
test
divl
and
and
orl
inc
std
rcrb
push
add
mov
mov
aas
aam
sbb
add
test
stos
js
js
dec
push
pop
in
xlat
gs
jne
rcll
out
sbb
daa
or
sbb
stos
mov
pop
hlt
sbb
jl
loop
daa
sbb
sbb
mov
sub
popf
aaa
xor
rcl
push
and
sbb
in
push
popa
push
and
push
jp
and
inc
push
lret
jnp
iret
pop
out
inc
and
add
fmuls
and
mov
push
notb
xor
es
nop
xchg
lret
jo
add
cmpsb
notb
rcrl
ljmp
sbb
xorb
xor
bound
movsb
adcl
clc
push
cmpsb
lret
js
out
mov
lock
push
mov
orb
xchg
hlt
jle
adc
call
push
dec
lds
rorb
std
repz
sub
inc
addr16
pushf
dec
fcompl
push
add
push
cmpsb
sub
pop
adc
and
sbb
mov
ficompl
jae
ss
cwtl
addr16
rcr
and
add
nop
sbb
push
push
push
es
inc
push
jge
nop
xor
and
fimuls
sub
int3
mov
inc
lret
xchg
and
mov
pop
shlb
es
adc
mov
fs
mov
mov
sar
lock
mov
mov
popf
add
xor
mov
data16
inc
push
push
cmpsb
out
test
mov
adc
cmpsl
pop
lods
dec
and
sbb
fistps
adcb
insl
xchg
push
popf
xchg
imul
mov
lcall
outsb
mov
jmp
fildl
stos
mov
push
or
scas
das
aam
add
mov
sbb
push
lods
loop
or
jl
addr16
pop
cs
push
jo
sub
pop
adc
xor
stos
pushf
addr16
cli
add
test
push
scas
or
adc
inc
fistpl
out
or
sbb
push
mov
fcomps
out
popa
cmp
scas
pop
daa
mov
mov
aaa
aas
in
ds
inc
or
ficomps
test
loopne
fdivl
and
push
addps
jns
hlt
lods
mov
adc
adc
je
push
mov
sbb
in
aaa
rolb
add
push
mov
pop
add
lock
push
andb
push
mov
cmp
mov
in
pop
stos
dec
pop
jne
lods
imul
clc
stos
fldenv
lods
mov
out
or
or
sbb
push
jnp
pop
cs
inc
popa
outsl
je
push
jl
repz
js
push
pop
imul
lahf
add
inc
cmp
add
iret
jo
pop
and
insl
dec
push
leave
lret
adc
sub
bound
xor
jnp
mov
or
inc
mov
cs
xchg
adc
jmp
rorb
cwtl
stc
popf
xorb
jns
adc
dec
add
jmp
or
or
insl
adc
iret
adc
cltd
jo
jmp
and
dec
pop
shl
cmp
adc
rolb
mov
stos
adc
sahf
xor
push
mov
adc
fs
add
pop
pop
sbb
or
cwtl
push
roll
out
add
addl
and
cmpsb
xlat
sub
jno
push
mov
mov
push
xor
push
sub
ficoms
add
xchg
or
and
add
sub
mov
and
jne
hlt
and
jle
outsl
jg
xor
shrl
stos
jo
stos
pop
mov
mov
aam
out
pop
pop
or
negl
jb
push
xor
daa
sbb
jbe
out
cmp
lods
stos
sbb
std
sbb
adc
jno
sbb
or
sbb
push
sbbl
loopne
cmp
pop
movsl
sub
inc
mov
test
dec
sarl
mov
add
sbb
adc
xchg
lret
mov
or
mov
js
push
testb
nop
call
divl
ja
outsl
and
add
or
mov
xor
les
sbbb
xor
fsubrp
nop
mov
xor
mov
mov
and
dec
push
lea
xchg
aaa
lock
xor
dec
mov
inc
jmp
cmpsl
call
sahf
mov
jb
xchg
inc
daa
mov
and
imul
cmp
popf
clc
sbb
push
scas
in
inc
inc
xor
je,pn
or
mov
mov
and
adc
lcall
push
lods
mov
adcl
push
push
cmp
inc
mov
mov
cmp
nop
mov
aas
xchg
jecxz
or
cmp
push
sub
or
mov
and
sti
ja
push
leave
sub
inc
cmp
gs
xor
or
add
pop
outsb
inc
push
xchg
lret
push
test
push
lock
sbb
shll
out
dec
jb
shlb
or
and
pop
mov
sbb
push
test
mov
mov
sub
shlb
leave
inc
dec
mov
dec
inc
fistpl
inc
xchg
ret
aaa
cmovl
dec
shrl
or
mov
and
popa
pushf
push
aam
lahf
lahf
push
fwait
lock
gs
mov
xchg
shrb
and
lahf
ret
sbb
mov
mov
push
js
xchg
dec
push
add
das
mov
dec
add
add
xchg
aad
das
scas
and
icebp
popa
or
dec
push
in
mov
adc
enter
add
mov
int3
jmp
push
push
xchg
test
movl
push
push
imul
push
sbb
sub
pushf
pop
pop
subl
scas
mov
popa
or
add
popa
sbb
xchg
adc
inc
and
pushf
sbb
and
movsb
cmpsl
sub
mov
and
test
loopne
mov
pop
arpl
mov
or
in
data16
ss
inc
sbb
mov
ljmp
sub
sbb
adc
lret
xlat
inc
xor
call
insb
imul
dec
cmp
fldl
inc
add
pop
or
and
int
push
iret
ret
inc
loopne
lret
jmp
push
cmpsl
mov
adc
je
pusha
adc
fiadds
imul
pop
push
add
push
ret
test
mov
adc
jne
add
and
jg
sub
inc
mov
cmp
das
fisubs
push
jg
push
hlt
pop
adc
add
pusha
testb
push
and
mov
es
mov
imull
cs
push
stos
jae
jecxz
ljmp
addl
pop
dec
add
adc
mov
and
mov
decb
mov
sbb
aad
xor
mov
push
lock
sub
aas
pushf
and
pop
cmc
inc
lock
repnz
lret
pop
mov
sbb
add
add
or
movl
adc
es
shl
ljmp
push
add
aaa
adc
rcl
repnz
jle
mov
ja
and
jne
mov
out
xchg
dec
and
inc
addr16
inc
cmpb
xlat
or
shrb
push
out
cs
frstor
sbb
sub
pop
rorb
jmp
ljmp
add
sub
and
cld
sahf
mov
xor
popf
iret
mov
inc
mov
add
mov
scas
push
pop
push
adc
push
cmpsl
sbb
mov
mov
jmp
add
lea
jnp,pt
sub
xchg
and
inc
sarl
fldl
dec
xchg
cmpsb
pop
mov
dec
or
ret
pop
push
dec
inc
dec
add
lret
mov
loope
dec
pop
push
pop
imul
and
add
inc
inc
mov
or
jl
lds
xor
adc
sbb
jb
and
mov
add
lcall
mov
cmp
mov
jno
scas
add
cmp
mov
daa
adc
mov
sbb
adc
adc
mov
or
add
test
push
add
sbb
nop
mov
and
int
daa
ja
pop
push
aad
sbb
push
inc
sbb
sub
adc
mov
outsl
sbb
nop
pop
inc
cmp
int
and
lcall
cmpsb
fcmovu
mov
jecxz
adc
push
negl
dec
sub
push
jmp
xor
inc
popf
sbb
jecxz
test
add
pop
loopne
lahf
xlat
jl
jo
xchg
loop
and
das
imul
mov
ds
jo
add
out
sub
xchg
mov
mov
test
les
jmp
das
inc
loop
jo
push
roll
adc
and
roll
ja
fdivrs
adc
inc
xor
sub
in
xchg
call
outsl
test
jecxz
and
hlt
loopne
popa
mov
lahf
push
out
push
mov
lds
xor
xchg
and
xchg
cmpsb
js
ret
inc
sbbl
push
xchg
jle
add
add
cs
jmp
loopne
push
rcl
pop
inc
sub
push
pushf
xchg
mov
es
mov
jnp
xorb
stos
outsb
pop
loopne
nop
mov
pop
insl
sbb
mov
je
and
pop
push
or
xor
adc
push
jb
loopne
pushf
das
das
inc
inc
pushf
jne
out
ret
mov
shll
add
lock
push
adc
cmp
lcall
sub
lret
adc
mov
cltd
call
das
push
sbb
movsb
ret
sbb
jp
fwait
sbb
into
sub
or
faddl
movl
jbe
inc
stos
xchg
sti
inc
mov
movsb
call
and
cmp
inc
lods
and
arpl
ss
mov
inc
pop
js
mov
mov
out
sbb
push
xchg
test
push
jo
sub
subl
jmp
jb
imul
stos
adc
loop
jbe
loopne
xorb
lea
bound
insb
pop
sbb
sub
and
test
loopne
shr
fistps
inc
mov
pop
xchg
jo
pop
or
rcll
testl
pop
notb
subl
cltd
mov
fwait
push
add
jbe
testb
lret
pushf
push
shll
xchg
scas
mov
xor
ffree
sbb
xor
js
jne
fistl
jl
cmp
gs
pmaxsw
push
outsb
data16
data16
mov
lods
gs
push
fwait
add
jbe
xchg
daa
lea
lahf
xchg
or
push
out
dec
jo
sbb
sbbl
xchg
mov
and
inc
cmp
dec
lods
mov
push
rol
lods
inc
add
rolb
nop
js
lret
int
sub
mov
and
dec
and
jle
fucomip
inc
mov
and
cmp
dec
fdivs
ss
and
add
jmp
jle
sbb
stos
imul
shll
push
xor
push
or
ss
adc
push
xor
adc
fwait
push
push
push
push
jmp
out
adc
add
addb
or
or
loope
loopne
dec
push
sbb
fcoml
dec
push
aas
dec
add
in
sbb
sub
inc
sub
clc
call
shll
inc
sub
or
int3
inc
push
xor
test
adc
inc
mov
cmpb
xlat
movsb
aaa
out
dec
insb
adc
jo
jle
out
pop
sbb
xor
adc
aaa
or
iret
ljmp
arpl
pusha
jmp
xor
jns
lock
sti
fisubs
dec
xchg
imul
dec
mov
push
cmpsl
jmp
je
pop
dec
mov
inc
mov
adcb
jno
data16
pop
mov
jbe
adc
outsl
jl
sbb
or
lcall
loope
add
out
into
scas
xlat
xor
test
or
arpl
lahf
jae
popf
push
test
out
fldt
daa
adc
inc
loopne
hlt
pop
jnp
inc
ja
mov
lds
mov
or
jbe
aam
adcb
mov
xchg
out
sbb
adc
jnp
mov
mov
mov
scas
add
imul
cmp
cmpsl
sbb
xchg
loope
inc
mov
sub
in
sbb
push
and
xor
mov
jge
sbb
mov
xchg
sbbl
loop
jae
push
ss
int3
inc
xlat
js
mov
sub
inc
stos
dec
or
sub
mov
adc
rorl
mov
or
ret
jl
lods
stos
jb
lcall
mov
lods
jbe
lahf
sbb
in
fiaddl
mov
pop
in
xor
jmp
iret
addr16
mov
inc
sbb
adc
ret
add
lock
mov
xor
sti
sub
add
pop
push
in
aam
daa
jae
or
inc
mov
pusha
into
xor
jnp
fadd
sub
addr16
pop
mov
push
inc
mov
lods
bound
jo
push
out
roll
push
adc
jns
xor
mov
fidivs
subb
test
inc
aaa
push
aas
enter
sub
and
inc
inc
cmc
push
into
xor
popf
ss
and
mov
imul
xlat
mov
cmp
push
es
arpl
dec
aas
aas
and
jae
in
movsb
inc
xchg
or
lahf
jne
mov
out
adc
in
xchg
adc
fildl
sub
pop
les
sub
cld
add
pusha
aas
popa
icebp
xchg
mov
in
or
push
lret
daa
xchg
leave
push
push
inc
stos
jo
imul
sbb
or
fdiv
jb
cmp
sbb
sbb
lret
rolb
call
aam
cmpl
or
sub
scas
fmull
add
loop
and
test
je
jo
push
or
push
add
push
lods
sbb
insl
dec
dec
sub
lock
orl
sub
mov
or
jp
add
pop
add
jg
neg
jne
and
xor
sub
sbb
xchg
shlb
inc
je
das
adc
adc
pop
and
mov
push
adc
mov
add
add
scas
mov
das
int3
sub
xor
daa
adc
and
cld
sub
mov
in
or
sub
add
inc
add
inc
dec
mov
mov
add
jle
adc
in
sub
mov
mov
int3
mov
push
daa
js
ds
push
fimuls
cmp
mov
lods
push
or
dec
adc
mov
and
sarl
popf
jge
jle
mov
xchg
test
inc
cmpsb
outsb
inc
fnstenv
sub
push
inc
outsb
sub
and
pop
xor
and
pop
mov
subl
stos
jnp
adc
or
dec
pushf
test
fmuls
and
neg
sbb
into
enter
or
sbb
push
into
push
add
cmp
sbb
xor
lcall
mov
lahf
or
jb
dec
push
fwait
adc
mov
sub
sti
insb
inc
aam
sub
or
sbb
push
mov
inc
in
inc
sbb
shll
fsub
rolb
inc
push
es
mov
mull
das
mov
adc
insl
orb
or
cmp
cmp
in
aam
push
or
movsb
out
xor
adc
inc
mov
add
pop
mov
dec
je
mov
adc
lahf
dec
push
cmp
je
ret
xchg
lods
and
push
adc
dec
mov
sti
xchg
lock
pop
cltd
dec
jbe
inc
add
stos
mov
in
push
test
lea
mov
jbe
xlat
je
insb
push
scas
sub
fsubl
adc
adc
lret
xor
inc
outsb
mov
mov
sbb
xchg
and
fdivs
add
push
mov
xchg
add
xor
in
and
xchg
xlat
insb
add
fcoms
adc
push
packsswb
testl
inc
jmp
xlat
cltd
sbb
or
cmpsl
xlat
xor
or
movsb
int3
fists
ret
movb
stos
or
hlt
xor
dec
xor
xchg
sub
pop
jl
xlat
mov
sub
mov
rorb
fstpl
jmp
jp
rorl
enter
xchg
mov
invd
add
add
ljmp
sbb
ret
adc
jne
int3
les
add
and
jnp
int
cmpsl
and
test
pop
ret
aam
push
mov
int3
lahf
push
or
test
cwtl
xlat
inc
xor
cmpsb
cmp
adc
cld
or
es
mov
mov
xchg
xchg
mov
jne,pn
or
adc
test
pop
jecxz
int3
mov
test
popa
pushf
adcb
pusha
pop
and
ds
adc
adc
dec
pop
dec
inc
sbb
dec
jo
lcall
fisubs
aaa
cmc
push
paddusb
sbb
inc
fwait
mov
xchg
je
jmp
dec
neg
es
jecxz
gs
icebp
cltd
inc
mov
add
popl
push
dec
mov
xchg
push
icebp
outsb
int3
sub
push
cmpsl
js,pt
popa
mov
or
xor
push
adc
xor
jns
iret
xchg
add
inc
rol
push
push
push
shlb
sub
push
xchg
ret
aaa
pop
mov
xor
lods
add
push
mov
pop
cmp
push
dec
lcall
mov
inc
movsb
or
repnz
mov
xor
addr16
test
xor
jle
mov
popl
xchg
inc
rclb
fmull
inc
inc
push
ds
add
sbb
cmp
aas
rorl
repz
xchg
rol
filds
into
hlt
fldcw
xor
pop
inc
sub
leave
in
rorb
or
dec
cmp
jbe
jge
lahf
cmp
add
lods
adc
xlat
or
out
add
mov
cmpsb
xor
cmp
shlb
notb
adc
outsl
jnp
inc
xchg
popa
aam
mov
adc
push
add
popf
xchg
pop
adc
adc
ja
ror
in
xor
mov
sub
stc
xchg
or
jb
sbb
lahf
mul
pop
add
ds
mov
xor
pusha
jo
cmp
popa
mov
mov
ror
push
mov
xchg
lahf
test
or
lods
push
fidivs
sbbl
or
testl
imul
push
adc
mov
push
xor
mov
xor
into
cld
add
faddl
mov
dec
ljmp
adc
dec
mov
in
mov
call
aaa
inc
iret
cs
mov
lret
mov
cwtl
fisttpll
adc
cld
mov
cli
push
fbstp
inc
imul
mov
pushf
mov
lods
adc
mov
adc
scas
in
lock
mov
xor
sub
mov
mov
and
push
xorb
mov
jge
pop
push
addb
adc
push
imul
adc
and
cli
lock
mov
bnd
adc
mov
xlat
stos
cs
rcl
test
push
int3
bound
dec
mov
jnp
dec
push
imul
and
clc
scas
sub
mov
sub
insl
lcall
int3
xchg
xchg
int
pop
sbb
aas
mov
aad
jge
mov
cwtl
mov
stos
loop
test
cmp
call
in
test
add
rorb
stos
push
shlb
loopne
jmp
in
xchg
adc
mov
pop
add
push
jmp
inc
xor
push
push
dec
jl
mov
dec
bound
pop
into
dec
out
xor
add
mov
sbb
adc
sbb
xor
fstpl
push
aad
enter
test
test
gs
arpl
fsubs
ja
repz
or
in
jbe
sbb
mov
jecxz
pop
adc
adc
jmp
pop
jbe
add
js
push
cmp
and
out
mov
sbb
in
mov
testl
inc
loopne
pop
sub
pop
xor
inc
outsl
imul
data16
mov
and
rolb
jp
mov
fstpt
and
dec
jecxz
adc
sti
or
mov
cmp
out
popa
mov
sarl
dec
arpl
push
out
push
push
cmp
push
sub
mov
sbb
or
adcl
sub
push
das
mov
jnp
and
ja
pop
or
sbb
clc
fisubs
pop
sti
addb
or
pop
lahf
shl
xchg
jnp
xlat
adc
add
inc
lock
jns
or
fadd
sahf
xchg
into
movsb
cmp
lret
into
cwtl
ss
fdivs
insb
push
push
pop
push
fucomp
fdivrp
push
psrlw
js
sbb
shr
mov
inc
xor
push
jo
cmp
insb
cmp
cmp
mov
pop
adc
sbbl
jge
or
sbb
mov
mov
or
and
push
push
int3
inc
or
mov
mov
inc
pusha
sub
fsts
or
mov
test
int3
xchg
and
pusha
mov
test
mov
xchg
cs
popf
sub
ret
add
mov
stc
pop
lret
mov
mov
push
rcll
xorl
frstor
mov
out
popa
xchg
cld
daa
mov
popf
adc
adc
outsl
and
add
or
add
sti
push
daa
loope
scas
sub
lea
mov
and
outsl
or
cmpsl
xor
add
test
inc
sbb
jne
out
sub
and
push
je
divl
daa
flds
jne
pop
fstps
add
sub
or
addr16
insl
mov
jmp
jns
xchg
dec
jg
sub
inc
gs
int
or
mov
in
sbb
fdivrl
mov
mov
jge
dec
loope
call
or
aaa
das
in
push
arpl
aad
pop
pop
jmp
arpl
mov
andl
scas
and
fists
inc
sbb
adc
or
cmpl
xlat
add
ret
js
addr16
outsl
std
sbb
arpl
mov
lcall
mov
icebp
jle
cmpsl
mov
and
xchg
enter
daa
mov
mov
jo
filds
ja
sbb
leave
adc
addr16
mov
sub
jmp
in
mov
mov
push
dec
sbb
mov
in
and
mov
dec
add
pop
out
daa
mov
pop
add
dec
adc
and
fwait
cld
mov
out
or
outsb
outsb
cmp
pop
es
clc
mov
and
sbb
or
insb
pop
mov
pop
push
push
or
cs
sti
fmuls
out
mov
loope
stos
jae
iret
xchg
data16
xchg
repnz
shrb
test
push
xor
insl
stos
or
bound
popf
into
sti
cltd
loopne
cs
cmpl
push
fdivr
js
jmp
sbb
icebp
pop
mov
hlt
mov
push
dec
arpl
mov
mov
jmp
daa
sahf
sub
imul
add
ret
sbb
std
lret
pop
jl
loopne
roll
jl
rolb
fiaddl
out
nop
mov
sub
movsl
call
imul
add
mov
adc
pop
inc
idivb
jb
insb
popa
sub
pop
popf
stc
test
mov
es
nop
add
xor
jge
add
lock
xchg
frstor
inc
add
mov
testb
pusha
imul
jg
xorl
stos
push
fwait
lock
mov
dec
fildl
add
pop
jns
imul
call
lcall
fsubr
mov
push
sbb
icebp
cmpb
inc
or
xor
js
xlat
push
inc
add
push
mov
cmpsb
xchg
leave
test
outsb
gs
and
ret
or
or
cmpsl
push
dec
mov
pop
fs
in
jnp
std
outsl
loop
insl
cmp
movsb
imull
pushf
mov
outsb
shlb
add
lods
jae
mov
push
push
inc
inc
ss
mov
lods
jle
or
ja
xchg
dec
mov
xchg
mov
pop
ficoms
stos
inc
inc
inc
mov
subb
mov
jbe
imulb
pop
js
out
mov
outsl
or
pop
pop
push
cltd
sarl
mov
popf
xchg
daa
outsl
sbb
dec
add
jnp
test
cmp
dec
int3
ja
dec
in
add
shrl
movsl
xor
and
loop
movsl
jbe
adc
xlat
fs
cld
sbb
lock
fs
sahf
xor
outsb
rcr
sbb
add
pushf
cmp
mov
outsb
lods
in
sbb
push
das
mov
xlat
jle
xchg
jg
mov
or
js
dec
roll
push
or
and
lret
insb
ret
fisttpll
jbe
xor
sbb
gs
mov
push
int3
sbb
je
jb
fimuls
imul
or
mov
inc
arpl
push
fnsave
ss
push
repnz
or
add
repz
push
or
jns
cli
leave
cmp
shrl
pop
fisubs
fidivs
lock
rolb
or
mov
adc
ficompl
ljmp
add
ja
in
fnstsw
out
push
mov
xchg
cmp
add
xchg
pop
in
fildl
xchg
pop
pop
xor
xchg
dec
push
push
test
xor
out
xchg
fildl
in
rsm
incl
xchg
sub
lea
pop
adc
ja
pop
outsl
clc
add
pop
pop
outsb
fldt
cmp
std
lret
in
mov
xchg
fdivs
sub
ja
mov
adc
add
mov
outsb
mov
mov
insb
lods
jge
stos
outsl
leave
lahf
sti
pop
push
pop
pop
push
repnz
mov
and
xor
sbb
add
lods
mov
pop
jg
mov
add
fidivrs
and
negl
or
das
adc
add
cmpsl
into
adc
xor
pop
push
int
lock
call
jbe
push
xchg
mov
cmp
mov
in
lods
cmp
xchg
push
insl
das
lret
dec
lahf
loop
add
push
xor
fadd
add
mov
repz
insl
nop
ret
gs
adc
inc
sbb
mov
clc
pop
clc
ja
mov
imul
inc
call
cli
and
mov
daa
hlt
data16
loop
dec
pop
jno
in
add
fstpt
fisubs
fcomip
mov
aam
add
add
push
stc
mov
fs
pop
insl
inc
call
xchg
bound
test
ficoms
pop
or
jo
int
outsb
aas
cmp
sub
popf
and
fs
add
dec
repnz
add
pop
adc
mov
in
mov
data16
and
stc
mov
ret
mov
add
pusha
sti
scas
mov
mov
cmc
jle
inc
pop
pop
cwtl
rclb
pop
adc
ss
stos
xor
fcmovu
lock
cmp
jmp
xchg
sub
dec
pop
pushf
repz
mov
pop
in
mov
pop
popa
push
jge
adc
fcoml
mov
push
push
je
cmp
shll
leave
cwtl
pop
push
and
add
pop
add
mov
ret
push
sbb
push
or
cmp
int
ret
mov
sbb
sbb
jecxz
and
jg
out
mov
mov
inc
jecxz
xchg
pop
mov
divl
sbb
push
loop
les
jne
pusha
sub
addr16
js
xor
xchg
scas
push
dec
test
jnp
pusha
popa
ret
orl
shlb
and
sbb
fadd
popf
inc
xor
xlat
lcall
jl
pop
loop
xchg
call
fidivl
mulb
loop
lea
mov
sti
iret
mov
and
insb
add
xlat
in
sbb
popa
cmp
mov
mov
mov
xchg
ds
insl
leave
lds
inc
mov
adc
xchg
dec
mov
fcoml
xchg
out
nop
cmp
movsl
js
inc
movsl
fists
rcrl
xor
lods
in
je
lods
imul
clc
add
outsb
adc
popa
rol
lea
sub
add
inc
xor
adc
mov
mov
push
add
and
fldl
push
sub
icebp
fadds
mov
jbe
rcrb
sbb
sbb
mov
outsb
push
pop
sub
sahf
mov
enter
push
repz
push
fnstsw
pusha
sbb
sbb
jno
pop
pop
mov
dec
outsb
mov
repnz
jbe
in
jp
dec
lock
mov
xchg
icebp
push
pop
sub
insb
jne
cmc
ffree
jno
add
push
jle
mov
xchg
mov
scas
jbe
mov
inc
jae
fisubrs
repnz
sbbl
cs
add
stos
aad
insb
bound
xorb
imul
sub
push
jns
in
jb
mov
mov
add
fidivrl
rorl
cmp
xchg
xor
cwtl
stos
icebp
xchg
ret
loop
jmp
push
clc
js
shl
cmp
movsb
icebp
into
gs
notl
out
and
stc
ljmp
sar
pop
out
push
mov
dec
sbb
inc
out
adc
loopne
movsl
push
js
cmpb
test
add
pop
subl
mov
xor
pop
imul
in
bound
imul
pushf
shrl
repnz
fiadds
cltd
inc
jmp
xor
cli
cmc
out
xchg
nop
notb
ss
iret
aad
and
bound
arpl
jmp
push
daa
bound
rol
jb
add
pop
jnp
ret
xlat
sbb
fistpll
mov
aam
inc
mov
jmp
das
call
adc
insl
in
leave
mov
sbb
ljmp
jecxz
and
sub
jmp
fidivs
sbb
imul
je
subl
and
xor
data16
mov
pop
ficompl
sbb
add
pop
xor
je
push
push
sbb
ficomps
fs
cs
cmp
adc
mov
fbstp
inc
cmpsl
cwtl
leave
hlt
mov
push
push
insl
mov
dec
lret
cmp
mov
cs
insl
mov
add
aad
roll
sti
out
or
pusha
js
pop
mov
push
hlt
adc
jecxz
sbb
fisubrl
jp
or
rcr
push
inc
adc
xchg
jb
ret
sti
cmp
jecxz
sub
push
in
ret
xor
xchg
je
sbb
rorl
inc
inc
lds
sbb
mov
in
pop
sbb
cmp
fistps
movsl
cmpsb
out
xchg
jae
decb
lcall
fildl
mov
xchg
xor
lret
sbb
mov
adc
xchg
fisttps
xorl
mov
filds
mov
clc
fnstcw
cmp
push
outsb
mov
clc
fwait
cmp
pop
lret
or
shrl
movl
cmpsb
sbb
andl
fiadds
add
aam
hlt
fnsave
js
loopne
mov
rcr
pmaxub
push
imul
fwait
ds
arpl
cmpsb
pusha
fsub
cmp
xchg
out
in
fldt
mov
push
leave
sbb
insb
push
dec
push
xlat
jnp
or
divb
pop
add
dec
int3
jns
mov
mov
neg
ds
jo
aam
lret
loopne
adc
mov
or
lds
daa
cmp
daa
in
fdivs
mov
pop
push
jne
fs
scas
jmp
imul
pushf
and
and
sub
sub
sub
jno
leave
fnstsw
push
and
adc
cltd
mov
out
psllq
cmp
pushf
adc
pop
fwait
insl
push
pop
int
cmp
inc
mov
xchg
pop
push
addr16
fsubr
shrl
fidivs
sub
int3
cmp
insl
dec
cmp
les
fwait
or
fiaddl
and
movsb
scas
insl
push
pop
in
push
xor
je
fwait
enter
add
xchg
lcall
ret
movsl
jae
push
push
and
add
xchg
xchg
and
inc
pop
pop
les
mov
rcll
cmc
mov
xchg
dec
lret
cs
push
cmp
xchg
mov
xchg
xchg
dec
adc
jp
jae
adc
ja
mov
mov
xchg
dec
andb
fiaddl
inc
mov
pop
ja
cli
dec
cmp
insb
imul
xchg
cmp
pop
pop
add
aad
andb
cmp
call
sbb
test
and
hlt
dec
add
adc
jne
fisubs
in
je
ljmp
pop
push
pop
daa
dec
popf
push
fdivrl
cld
in
dec
adc
jae
pusha
test
cmp
push
jae
roll
insb
mov
inc
jbe
dec
inc
mov
enter
stc
sbb
and
addr16
pop
fcoms
dec
pop
push
push
cmp
push
cmp
adc
int
pop
int3
repnz
addr16
add
in
insl
xor
pop
pop
xor
lods
dec
sub
aad
outsl
fistl
push
ret
sbb
stos
leave
push
aaa
dec
inc
js
adc
mov
sub
jle
js
in
jae
ja
lretw
adc
adc
fcmove
pop
mov
sub
fs
mov
jecxz
jl
add
retw
push
xchg
and
int3
jmp
mov
mov
cltd
and
ret
dec
adc
es
outsb
pop
mov
mov
jo
mov
outsb
inc
and
xchg
repnz
out
nop
mov
rorl
sti
out
call
pop
adc
lds
dec
inc
fdivr
scas
insl
xlat
jbe
and
jb
ljmp
test
ja
lds
xor
loope
movsb
sub
sbb
push
inc
sbb
add
jp
jle
lret
mov
xor
pop
lea
daa
mov
mov
roll
clc
nop
sbb
ss
pop
lret
adc
pop
mov
jne
and
shlb
adc
popf
cwtl
sbb
fcmovu
mov
sbb
and
ret
jle
jo
sbb
cmp
inc
jl
das
mov
aaa
es
pop
outsl
and
popf
mov
cwtl
loope
test
jge
mov
rclb
insl
mov
into
or
dec
outsl
or
xchg
sbb
jb
jns
sahf
mov
stc
add
xchg
xchg
insb
popa
clc
out
jp
daa
lret
test
mov
or
or
test
xchg
sbb
jno
mov
and
ds
lret
sbb
subl
cmp
pop
inc
add
sbb
lret
mov
movsb
mov
add
aaa
mov
add
ss
xor
rcl
pop
jne
inc
fdivl
movsb
dec
xchg
sub
ss
adc
jae
and
lea
lret
negb
push
sbb
add
xchg
imul
lcall
pop
sub
std
jp
mov
adc
add
add
mov
jb
arpl
cmp
pop
pop
lcall
aas
in
stos
mov
xacquire
jbe
outsb
mov
popf
push
mov
sub
inc
mov
outsb
fcmovnu
inc
ret
sbb
orb
popf
aam
daa
adc
into
push
mov
loop
testl
mov
fisubl
pop
movsl
outsl
adc
pop
bound
das
mov
decb
or
test
mov
cltd
in
inc
pop
lods
insb
inc
lea
mov
cmp
mov
xor
repnz
add
xor
incl
and
mov
xchg
or
out
out
sti
call
xor
je
mov
jp
pusha
js
lcall
sbb
lds
sbb
out
mov
pop
dec
sbb
rcrb
cmc
push
mov
lret
repz
inc
insl
xchg
sub
movsb
xchg
ret
and
std
cmc
insl
mov
jg
inc
adc
es
mov
sbb
inc
pop
je
mov
jnp
out
shl
mov
aam
add
ret
in
out
fimull
fwait
imul
aas
mov
ja
loopne
nop
xor
or
xchg
jge
dec
hlt
ret
xor
pop
sti
mov
mov
insb
jp
mov
stc
sbb
add
push
popa
or
mov
and
or
sub
test
fisubrl
adc
mov
and
int3
sub
or
adc
jge
cs
pushf
cli
and
push
add
sub
pop
push
or
adc
sub
pop
adc
dec
push
pop
scas
movsl
xor
popa
ret
mov
mov
fdivrp
lret
pop
insl
call
pop
out
shlb
lret
mov
bound
sti
adc
imul
and
mov
test
sbb
cmp
pop
stos
ja
mov
sbb
imul
rorl
mov
pushf
mov
xchg
or
push
sar
xchg
das
repz
mov
nop
repnz
rcrl
adc
lock
or
inc
jl
ds
outsb
gs
add
mov
sti
out
je
test
hlt
mov
adc
mov
pop
lahf
sub
orl
mov
idivl
cli
ljmp
aam
out
add
jp
xlat
jns
ds
dec
leave
pop
xor
imul
mov
inc
push
xchg
adc
inc
mov
pop
mov
push
leave
rorl
jo
sbb
xchg
dec
inc
adc
rcrb
or
or
inc
pop
or
pop
mov
in
cmp
test
pop
fiadds
xchg
aas
mov
popf
stc
popf
jnp
dec
test
ret
push
invd
cmp
sub
lcall
sub
arpl
pop
ret
pop
push
std
xor
ja
push
mov
jnp
push
inc
lret
sbb
mov
lock
movsl
call
scas
fisttpll
jb
repnz
and
mov
add
dec
fisttps
lahf
ss
mov
add
into
punpckldq
pusha
aad
aaa
inc
fsubrs
push
out
testb
insb
scas
arpl
into
ljmp
fs
lods
cmpsb
fisttpl
cmpb
and
jg
cmpl
sarb
cmpsl
or
sbb
lods
lret
pop
movsl
dec
sub
subb
pop
xlat
out
pop
sbb
mov
sbbb
pop
inc
xchg
jg
jge
xchg
outsb
pop
mov
adc
sub
mulb
mov
aam
stos
pop
jle
pop
or
xor
sarl
fstl
enter
and
je
jge
dec
adc
mov
lods
in
xor
mov
je
xchg
sarl
repnz
shr
xchg
test
pusha
lret
les
push
outsb
cld
fldt
lcall
push
cltd
dec
in
jne,pn
sbb
dec
into
lea
cs
add
fisttpl
stos
or
mov
pop
mov
rorl
mov
inc
fcmovnbe
aad
lahf
inc
cmp
cwtl
sti
arpl
stc
add
shll
shr
stos
call
fbstp
sbb
loope
jge
pushf
out
mov
mov
mov
or
loope
aam
mov
push
mov
sbb
mov
maskmovq
in
stos
mov
jecxz
adc
add
push
dec
sub
adc
dec
pop
popa
repnz
xor
mov
pop
mov
dec
insb
or
fucomi
stos
cmpsl
outsl
scas
lods
aam
popa
pop
sub
push
push
push
int
fs
jo
ret
push
sub
icebp
insb
push
and
es
dec
add
jne
push
push
test
push
jne
aaa
lock
or
je
add
cmp
lahf
lea
add
je
add
stc
pusha
cmp
mov
ss
add
imul
adc
iret
lret
sbb
push
sbb
mov
mov
pop
adc
mov
test
clc
jnp
rolb
mov
cli
pop
andl
sbbb
mov
mov
cmp
adc
mov
or
inc
or
ror
cwtl
lcall
addl
cs
ja
jg
nop
mov
aas
rcrl
dec
repnz
ficomps
rcrb
loope
enter
aaa
in
add
add
mov
sub
jecxz
and
push
add
cmp
dec
mov
pop
fidivrl
ljmp
bound
and
pushf
pop
add
lcall
loop
insl
sub
inc
daa
aad
movsl
and
loope
mov
sub
pop
pop
jbe
xchg
jne
xchg
mov
or
cmc
or
pop
loopne
mov
in
cli
jb
or
imul
mov
aam
ret
aaa
aas
jae
pop
imul
push
or
rorb
testb
nop
jmp
lods
jecxz
inc
sub
jg
fcompl
test
mov
mov
dec
fadds
ljmp
in
pop
imul
mov
jp
testb
lea
push
adc
jnp
pop
jne
sub
jb
imull
das
dec
call
jb
repnz
add
jbe
pusha
loope
sub
sbb
push
into
push
inc
shll
inc
mov
rcll
or
inc
xchg
sbb
mul
mov
dec
ja
push
lods
mov
push
push
cmp
jne
xchg
or
sbb
jl
mov
or
mov
mov
inc
inc
inc
test
arpl
subb
sbb
push
mov
push
inc
rolb
inc
aas
addr16
add
push
scas
mov
sub
mov
psrad
push
sbb
push
es
bound
sub
test
cmp
mov
out
add
mov
mov
aaa
in
ret
adc
mov
sbb
mov
mov
clc
addr16
mov
mov
dec
mov
xchg
push
cmpsb
and
fsubrs
pop
out
daa
fsubrp
jl
call
or
xor
shlb
sub
mov
imul
fdivs
dec
mov
out
lock
mov
xchg
dec
push
jge
test
adc
lock
jno
cs
xchg
adc
or
rcll
insl
cmpsl
push
xor
jnp
cmc
cmpsl
pop
ret
and
inc
add
lock
add
in
push
push
mov
adc
mov
sbb
pop
out
je
or
or
sub
cmpsb
insl
imul
cmpb
mov
inc
and
popf
pop
add
movsl
cli
pop
adc
fucomi
adc
ljmp
or
sub
lds
aam
cli
mov
out
stc
inc
pop
popa
fisubs
outsl
inc
pusha
add
adc
leave
lahf
mov
mov
mulb
leave
pop
out
stc
and
pop
popa
js
in
ds
or
cmovp
insb
insb
sub
cwtl
ljmp
in
jge
jge
in
in
inc
in
out
popf
lock
cmpsb
es
insl
push
or
aam
stos
and
incl
test
pop
cs
mov
adc
push
ds
xor
pop
dec
dec
test
fdivrl
pushf
insl
je
and
icebp
in
outsl
imul
hlt
add
aas
aam
push
push
or
clc
movsl
arpl
cmp
add
popf
dec
movsb
mov
loop
pop
sub
sbb
push
daa
gs
pop
rcrb
push
or
sbb
mov
inc
xor
insl
loop
in
mov
adc
popa
inc
sub
sbb
sbb
push
pop
sbbl
cmp
insl
roll
fmuls
fsubl
mov
cmp
push
mov
gs
or
les
lods
scas
out
sub
cmp
mov
and
push
out
xor
rcll
fmuls
mov
or
out
sbb
cmp
movsb
cmp
inc
push
iret
scas
stos
sub
xlat
repnz
jbe
mov
pop
push
add
arpl
sbb
and
or
mov
outsl
xor
icebp
push
divl
ret
xor
pop
jmp
push
out
xor
inc
outsb
lahf
xor
or
pop
pop
mov
iret
lock
add
sti
mov
sti
cmp
outsb
xor
in
sbb
scas
push
mov
xchg
bound
inc
sbb
mov
sub
adc
add
outsb
push
lcall
inc
push
push
mov
scas
sti
add
push
mov
out
sub
push
mov
inc
xor
xor
or
outsl
xchg
or
icebp
mov
xchg
outsl
insb
int3
dec
push
lret
sub
add
push
mov
arpl
adc
fdivrp
dec
push
or
push
jne
into
movb
and
add
mov
xor
xor
push
ds
js
or
ds
jae,pt
inc
push
pop
mov
mov
or
mov
sbb
add
and
adc
cmp
popf
out
sti
sub
cmp
mov
stc
adc
or
sbb
lahf
jecxz
addr16
out
sti
push
ret
push
lret
in
jle
xchg
push
xor
add
fsubr
negl
adc
arpl
movb
cmp
and
pop
sub
add
ss
xchg
fbld
loope
xchg
and
sti
jne
addr16
adc
adc
adc
cmp
cmp
loope
dec
cmp
or
cmp
hlt
sahf
adc
push
iret
cmp
ja
je
pop
and
data16
xchg
sub
and
clc
std
into
sub
pop
das
cmp
cmp
faddl
out
loopne
ret
add
push
mov
into
cmp
lock
cld
xchg
pop
mov
cmp
cltd
cmp
inc
cmp
inc
adc
jecxz
add
idivl
add
xor
scas
loopne
fimuls
daa
mov
and
pop
inc
push
add
iret
and
xor
pop
cs
mov
or
out
arpl
or
add
or
add
outsl
ja
scas
fistps
and
sbb
fsubs
inc
pop
cmpsl
pop
scas
push
out
ja
jbe
arpl
pop
xor
mov
outsl
xlat
or
push
push
aaa
mov
add
pushf
push
lods
out
jmp
or
push
push
or
sub
and
add
mov
mov
or
sbb
mov
jae
and
add
xor
movl
fnstcw
add
add
js
out
add
add
sbbb
jle
arpl
add
add
ja
fsub
jne
dec
push
sub
negl
faddp
adc
and
pop
cmp
ss
add
sbb
arpl
outsl
jnp
xchg
jg
sbb
mov
mov
dec
xchg
add
mov
mov
out
out
or
sti
add
into
mov
pop
and
or
insl
pop
push
daa
jb
and
cmpl
add
psubsb
fcom
and
jo
fistpll
push
daa
fcoms
in
dec
call
sub
data16
orl
mov
aas
invd
add
fsubrs
xor
pop
xor
lret
inc
xchg
sub
and
adc
ret
cwtl
adc
jae
adc
inc
testl
xchg
and
fisttpll
pop
imull
jo
xor
jbe
mov
mov
pop
jbe
mov
xor
arpl
and
sub
addb
lcall
xchg
pop
jbe
cltd
mov
pushf
stos
xor
xchg
mov
ret
xchg
mov
jbe
cmp
bound
sbb
js
xchg
dec
xor
dec
dec
xchg
shll
and
fiadds
mov
cmp
mov
inc
add
mov
pusha
in
popa
pop
dec
mov
cmp
mov
daa
out
mov
aas
push
cmp
daa
add
jg
mov
pusha
dec
or
int3
out
mov
add
or
ds
lret
imul
std
sbb
inc
ret
int
rclb
ljmp
add
jmp
or
in
xor
pop
jnp
fstps
nop
sub
mov
scas
dec
mov
bound
xor
cmp
mov
sbb
and
pop
outsb
testb
push
xor
mov
popf
xor
push
pop
testb
jge
rcrl
xorb
mov
mov
xor
fwait
or
flds
into
xor
dec
nop
divl
mov
enter
inc
idivb
mov
dec
sub
fdivrl
test
jnp
or
push
fmulp
out
push
xor
bound
cmp
negb
or
xor
and
je
and
icebp
scas
or
in
add
add
mov
inc
add
lahf
or
dec
orl
cwtl
pop
xchg
orb
xchg
or
inc
sbb
enter
in
xor
sub
xchg
loopne
or
or
fcomps
into
push
and
add
jnp
dec
mov
inc
mov
sbb
fstps
xchg
incl
or
fmul
and
add
test
orl
int
mov
add
in
lret
out
daa
arpl
rorb
push
sbb
or
pop
pop
mov
fldcw
aam
adc
aaa
jbe
jb
das
pop
lret
push
push
inc
cmc
mov
cwtl
or
sbb
sub
or
cld
inc
adc
sub
pop
lock
and
push
mov
mov
std
sbb
cmp
pop
fcoms
in
sbb
lcall
dec
arpl
add
scas
ret
xchg
mov
es
insb
or
xchg
jae
ret
addr16
and
push
in
ret
xor
adc
dec
nop
js
insb
insl
and
cmp
addr16
inc
xchg
loopne
inc
cmp
and
and
test
in
or
es
or
mov
ret
sbb
mov
push
sbb
xchg
mov
dec
jb
mov
ret
push
inc
push
cmc
or
pop
repnz
jbe
or
mov
sbb
mov
roll
jo
data16
fmulp
or
sbb
popf
add
or
and
xlat
dec
or
push
out
out
dec
test
adc
and
sub
xchg
mov
xor
dec
movl
int3
cmp
int3
xor
adc
pusha
mov
and
xchg
popf
das
mulb
aad
xchg
jge
les
adc
iret
in
outsb
lahf
loop
fsubs
adc
dec
iret
cld
add
adc
add
rcr
sbb
xor
mov
filds
dec
xchg
inc
out
adc
sub
and
insb
or
fisubs
pop
std
ljmp
arpl
dec
sub
xchg
sub
cmp
test
jp
lret
dec
cmp
hlt
and
ss
test
or
or
jnp
add
icebp
orl
idivb
call
and
and
sbb
sbb
insb
mov
adc
loop
push
fisttps
fistps
dec
and
fists
xchg
es
adc
gs
mov
inc
aaa
jo
adc
and
add
push
test
xchg
inc
loop
rcll
dec
repnz
jnp
in
jge
arpl
rorl
jne
popf
jge
call
or
cmp
push
mov
adc
sbb
movb
imul
or
jne
test
or
mov
dec
sub
and
add
cmpxchg
adc
lahf
dec
adc
mov
pusha
loopne
filds
ret
adcb
and
pop
adc
add
dec
jo
jp
xor
or
je
dec
and
adc
ss
popa
pop
imul
aaa
fisttps
cmp
and
pop
adc
icebp
mov
xchg
xchg
shrl
xor
sub
adc
jge
xchg
subl
fcoml
or
add
xchg
movsb
inc
inc
adc
mov
lea
or
push
jmp
push
push
push
cmp
stos
pop
mov
inc
pop
inc
xor
test
push
add
int3
mov
adc
lcall
push
or
scas
adc
cmp
xor
or
lret
sub
pusha
int
add
gs
or
lock
mov
popf
push
mov
mov
outsb
mov
fmulp
outsl
ret
xchg
lds
add
mov
pop
and
cmpl
movsb
arpl
add
and
xchg
dec
js
xor
push
xchg
mov
sbb
dec
xor
xor
movsb
les
lds
inc
fs
or
push
push
and
pop
int
add
data16
and
in
popf
vmovss
xchg
pusha
fdivrs
push
in
cltd
and
nop
cmpsl
adc
xchg
stos
outsb
ja
test
cmp
cmp
inc
xchg
pop
jb
push
cmpsl
xor
cmp
or
ljmp
cmp
sahf
in
or
mov
fistpl
in
sub
mov
int3
das
pop
dec
pop
pop
pop
push
sbb
mov
inc
push
sbb
popa
adc
push
into
mov
or
inc
inc
and
and
addb
fisubs
mov
and
cmpsl
aad
and
out
or
test
jnp
mov
xchg
lds
repnz
fisubs
sahf
nop
xchg
in
cwtl
dec
dec
out
pop
and
iret
cmp
into
bound
testl
movl
xchg
adc
rol
push
mov
sub
movsb
xor
int
ret
int3
xor
pop
inc
rorl
inc
mov
fcomps
aas
comiss
adc
cmpsb
or
lods
bound
mov
or
add
outsb
inc
sub
add
inc
sahf
and
add
sub
pop
xor
cmp
push
push
push
push
cwtl
gs
sbb
negl
jle
test
int3
xlat
push
loopne
pusha
and
fidivs
test
pop
lcall
add
es
negb
sbb
mov
ljmp
shll
xor
aaa
push
push
and
add
inc
ss
in
test
std
popa
xor
sbb
add
test
adc
ret
cmp
sarb
filds
xor
sbb
or
and
outsl
cmp
ss
fnsave
sbb
add
mov
xchg
add
jns
inc
add
lea
movsl
add
movntps
je
jo
incl
inc
add
sbb
sub
push
add
sbb
add
decl
addl
or
cmp
mov
sbb
addl
add
adc
addr16
ret
add
stc
roll
insl
leavew
cs
mov
fistpl
orb
adc
rclb
sbb
add
sbb
add
adc
cmp
loopne
jge
dec
add
pop
add
lods
add
mov
stc
pop
notl
jl
pusha
add
mov
sub
cmpsl
or
adc
sub
mov
adc
into
or
add
js
and
daa
in
and
pop
lret
daa
mov
add
clc
push
out
jmp
cld
pop
cmp
fistl
and
xchg
mov
test
cmp
push
mov
or
cmpsl
cmp
verw
fldenv
xor
sub
dec
inc
outsl
dec
jns
jo
sbb
add
imul
or
push
add
inc
push
jmp
dec
inc
js
push
loop
mov
inc
addr16
inc
dec
sbb
push
scas
mov
dec
push
sbb
sub
outsb
fldl
or
add
dec
daa
es
inc
in
insl
push
push
pop
and
clc
inc
cltd
bound
jge
mov
sbb
dec
xchg
pop
cmp
inc
jne
fidivl
je
jne
cmp
dec
dec
inc
fcoms
dec
divb
jno
xor
outsl
into
add
insl
insb
push
mov
and
loop
js
addr16
and
dec
pop
jae
push
cs
push
inc
jbe
scas
mov
out
arpl
icebp
add
fdivs
dec
sbb
jge
add
mov
fs
lock
sub
jbe
mov
jne
pusha
outsl
outsb
outsb
ja
outsb
sbbl
inc
push
push
inc
dec
and
insb
add
push
or
test
add
jns
jl
or
add
push
das
out
sbb
push
cld
sub
popl
or
outsb
xchg
lods
and
insb
push
dec
es
xorl
xchg
out
out
sbb
insb
mov
jl
add
or
addl
push
hlt
cmp
orb
lock
div
push
add
jne
pop
ja
ss
jnp
jno
inc
pushf
and
arpl
push
insl
pcmpeqd
vmwrite
or
push
negl
aaa
mov
push
mov
imul
sbb
arpl
mov
nop
push
mov
dec
sbb
hlt
add
mov
add
sbb
push
icebp
and
clc
xor
cmp
or
mov
dec
push
jg
nop
ss
adc
jg
jp
movsb
gs
or
jg
dec
inc
clc
pop
cmp
dec
or
ret
xchg
movsb
add
or
gs
adc
add
jo
inc
popa
xor
xchg
nop
mov
or
mov
stc
mov
or
push
xor
adc
inc
outsb
or
lods
pop
mov
mov
cmp
or
xchg
pop
test
bound
std
scas
mov
mov
or
popa
or
pop
or
push
mov
xchg
sbb
cld
xchg
fcoml
add
pop
or
add
jle
jg
xor
jle
sbb
add
mov
inc
add
insb
ss
stc
jge
cmp
pop
ja
lock
imul
sbb
sbb
inc
jp
push
sub
mov
inc
sbb
hlt
sarb
aaa
div
cmc
jbe
sub
sub
jp
sbbl
lcall
jo
fbld
data16
shlb
push
jbe
cmp
mov
and
pop
sbb
popa
sti
push
or
femms
xchg
jle
sti
ja
imull
or
inc
pop
mov
popf
nop
sub
add
stc
lret
loopne
adc
jl
ret
js
jno
dec
mov
je
sbb
dec
out
popf
ja
js
and
xor
sti
or
push
addr16
lea
sahf
sbb
add
ret
cmp
fsts
nop
lds
fwait
adc
leave
loopne
cltd
xchg
lahf
cmp
or
xchg
pop
xchg
xchg
cwtl
mov
xchg
sbb
xor
xor
cmpsb
mov
data16
sub
sbb
xchg
movsb
lea
dec
sub
inc
mov
or
outsb
sbb
ss
mov
dec
dec
mov
cmpsl
test
dec
xchg
xchg
je
test
add
cmpsl
cmp
test
fnstsw
sbb
js
mov
iret
push
jg
mov
add
pop
xchg
imul
push
fwait
in
jl
sub
mov
je
xchg
adc
sbb
jb
cmc
xchg
xchg
mov
sbbb
cwtl
add
cmp
pop
shll
loopne
mov
push
push
test
stos
orb
push
decb
orl
add
add
arpl
push
in
int3
push
imul
add
add
pop
dec
dec
xor
adc
inc
inc
xchg
nop
mov
es
pop
mov
lcall
adc
adc
jb
inc
and
and
inc
add
loop
pop
sbb
sub
xchg
addl
test
pop
loope
fnstenv
xchg
subb
jns
xor
fwait
push
jno
mov
pop
or
jg
sub
popl
js
pop
inc
inc
jecxz
insl
xchg
test
dec
adc
loop
fistpl
mov
dec
or
je
pop
push
cltd
and
in
push
cld
adc
into
aad
add
sub
out
scas
cmp
cmp
push
inc
push
sub
jo
or
mov
in
push
sub
mov
test
add
mov
ja
outsl
push
les
inc
sub
pop
negl
jae
mov
xchg
push
sbb
outsb
popa
push
pop
pop
pop
inc
cmp
stos
lods
jnp
fwait
das
sbb
lahf
loopne
mov
add
sbb
jae
jae
xor
aad
add
or
insb
dec
sbb
iret
cmpsb
mov
pextrw
sub
insl
sbb
js
sahf
dec
or
popf
jg
hlt
xchg
inc
sub
mov
popa
cs
sbb
inc
and
into
jo
mov
dec
jge
dec
cltd
push
xchg
js
jle
dec
inc
pop
mov
sbb
mov
push
sub
xor
sbb
movsb
cmpl
push
out
jo
adc
push
mov
mov
mov
sbb
inc
inc
dec
push
push
push
out
sti
cltd
dec
loop
add
adc
adc
adc
jnp
add
sub
pop
cmp
out
mov
aad
fldl
sbb
pop
loope
inc
dec
inc
fs
int3
or
ret
push
sbb
mov
adc
inc
mov
inc
and
push
sbb
xor
sbb
inc
inc
ja
mov
dec
push
dec
push
arpl
pop
add
inc
and
lcall
dec
push
pushf
push
lret
xchg
push
dec
orb
cmpsl
in
sbb
mov
dec
add
test
pop
add
inc
sub
mov
inc
mov
mov
xchg
popf
fwait
mov
and
jne
test
pop
mull
sbb
add
scas
jno
out
popa
mov
fs
or
cmpb
lock
in
popf
das
in
sub
out
inc
dec
out
push
insb
imulb
ret
std
push
push
bound
lods
jmp
arpl
insl
shll
mov
inc
dec
movsl
mov
or
push
xchg
pop
push
insl
in
leave
popf
pop
mov
ljmp
je
xchg
push
push
push
outsb
sbb
loopne
insb
pop
cs
pop
adc
mov
pop
lahf
shlb
inc
inc
test
mov
cmpsl
shll
mov
pop
xor
and
pop
aad
or
daa
out
inc
sbb
mov
jnp
jge
sub
push
pop
sbb
push
mov
insl
ret
sbb
dec
arpl
cmp
mov
inc
inc
add
inc
cmp
outsb
data16
mov
pop
int
add
mov
fs
mov
repz
push
adc
sub
sahf
pop
dec
bound
mov
data16
data16
test
add
adc
mov
mov
sbb
dec
inc
pusha
imul
pop
xchg
imul
je
ljmp
push
into
gs
stos
ret
xchg
push
sub
testb
push
stc
adc
inc
dec
inc
daa
shl
inc
push
lea
es
and
fiadds
dec
leave
xchg
mov
jmp
sub
lock
mov
les
and
push
int3
loope
sbb
inc
xor
xchg
push
loop
push
dec
adc
sbb
add
or
xor
mov
lods
push
dec
dec
gs
ret
sbb
lods
insb
pop
dec
and
pop
lret
cmp
mov
outsb
in
fbld
cli
test
mov
push
dec
subb
sbb
add
inc
ret
add
ss
sub
mov
fmul
and
ret
fs
lret
xchg
inc
mov
fnstcw
orl
mov
fstpl
fistpl
push
cmpsl
add
xor
fldl
or
xchg
or
cmp
in
or
or
or
add
test
push
mov
neg
sbb
fstpl
adc
mov
jecxz
inc
repz
or
lods
int3
sbb
fmul
and
fsts
jb
outsb
adc
jne
imul
mov
das
sbbl
loop
aam
lret
mov
adc
add
and
loop
jne
push
lret
movsl
inc
loope
xchg
lret
xor
xchg
adc
and
xor
mov
movsb
add
jne
push
insb
imul
cmc
mov
lods
loopne
hlt
pop
insl
mov
dec
popf
or
in
push
jle
sbb
icebp
fnstenv
dec
cmp
sbb
test
aaa
test
mov
movsb
pop
testb
mov
bound
fistl
pop
dec
call
pop
pop
addr16
enter
xlat
fstps
dec
sub
pop
mov
enter
push
push
pop
rclb
je
enterw
int
pop
xor
sahf
aas
push
push
stos
push
nop
aad
dec
pop
push
adc
and
xor
pusha
outsl
and
sbbl
adc
add
test
dec
dec
add
cld
add
sbb
ljmp
xchg
push
pxor
pop
pop
sub
jmp
inc
xlat
imul
popf
sbb
sbb
sbb
mov
inc
dec
pop
pop
or
push
push
sbb
push
es
mov
add
adc
fimull
cli
dec
aas
dec
or
call
or
bound
imul
dec
cmpsb
push
inc
lods
jne
and
pop
jb
add
xor
mov
mov
lods
mov
lds
sahf
sbb
in
in
sbb
in
push
sbb
push
sub
lcall
adc
fsubrl
in
or
push
fwait
dec
fldt
add
mov
mov
sti
out
add
in
xor
inc
and
xchg
jo
add
ljmp
push
add
push
add
sbb
add
add
pop
addr16
lcall
out
mov
xor
and
test
fs
popf
iret
jne
pusha
dec
push
inc
loop
pop
jnp
push
mov
sbb
mov
test
popf
jnp
bound
fs
adc
cmp
sub
dec
hlt
pop
mov
dec
sub
or
inc
inc
ss
mov
jecxz
or
sbb
or
inc
pop
ja
mov
inc
mov
sbb
or
arpl
aad
push
add
inc
adc
imul
sbb
jae
sub
rclb
mov
push
mov
dec
add
pop
xor
xchg
pop
push
cli
push
push
and
or
lds
ret
sbb
push
push
ret
fidivl
cmc
xchg
mov
test
xlat
push
push
mov
addb
popa
gs
andl
mov
and
mov
xchg
cltd
push
push
or
es
mov
add
add
bnd
or
mov
fldt
lods
jno
jecxz
testl
xchg
inc
adc
xor
enter
daa
inc
inc
pop
imul
mov
pushf
arpl
add
and
testb
pop
pushf
add
pop
and
xor
inc
inc
lret
dec
push
cmp
push
jbe
sbb
mov
fwait
add
or
test
and
lret
or
pop
and
jns
inc
and
ss
pop
inc
sbb
into
push
fs
xor
add
mov
pop
and
mov
adc
pop
cld
mov
inc
cmp
pop
sbbb
xor
adc
inc
pop
push
sbbb
mov
mov
inc
and
sbb
imul
adc
cmp
test
and
dec
sub
mov
repnz
mov
mov
xchg
pop
popf
jnp
mov
rolb
mov
pop
fldl
adc
lret
pop
fsubrs
jnp
and
mov
add
addr16
xorb
inc
jbe
pop
sub
or
out
adcb
subl
jbe
pop
loope
and
das
popf
mov
pop
mov
adc
pop
pop
or
jg
lcall
add
scas
in
mov
in
add
xchg
dec
xchg
pop
mov
xchg
dec
test
jg
cwtl
mov
jns
movsl
lcall
adc
add
xor
add
xchg
mov
mov
lock
add
push
test
xor
or
add
or
inc
mov
adc
cmp
or
rclb
nop
push
add
cld
xor
shlb
negl
jb
je
arpl
xor
mov
fiadds
pushl
mov
jae
jb
gs
jne
ss
popa
outsb
addr16
inc
adc
jae
sub
outsl
pop
insl
push
imul
rol
dec
outsl
fs
gs
fs
fcompl
fildl
jb
outsb
je
fisttps
adc
insb
fs
je
imul
inc
js
sbb
dec
lods
insl
mov
dec
inc
outsb
jne
imul
int
mov
daa
adc
or
dec
popa
mov
jo
adc
inc
outsl
insl
jo
fadd
or
imul
inc
jbe
dec
and
mulb
dec
xor
push
cmp
sub
mov
bound
addr16
push
aad
fstp
mov
shll
inc
dec
gs
or
add
mov
pushw
inc
pop
ljmp
dec
adc
push
jae
fs
mov
or
push
addb
add
dec
outsb
insw
popa
mov
mov
imul
ljmp
adc
imul
xor
in
shll
jl
and
stc
insl
ret
fnsave
cld
dec
inc
dec
dec
inc
arpl
gs
fsubrl
ljmp
xor
adc
js
push
jnp
inc
pop
push
adc
cmpsb
addr16
push
mov
dec
ret
sub
mov
outsl
bound
outsl
js
mov
pop
sbb
popa
bound
push
mov
add
dec
sbb
cmp
push
pop
jae
sbb
cmp
inc
lock
call
jmp
inc
add
dec
add
add
pop
inc
sub
add
cld
or
add
add
add
dec
adc
sub
aaa
sti
or
xor
mov
add
adc
in
mov
fwait
pop
xor
add
scas
movsb
ljmp
test
ss
or
add
add
inc
inc
fdivrs
int
jge
nop
mov
mov
in
out
push
inc
movsb
in
sti
out
inc
jbe
mov
rolb
or
xchg
cmp
add
imul
popf
repz
daa
push
inc
lcall
pusha
daa
add
sbb
gs
push
jae
es
pop
fldenv
lock
add
add
pop
fdiv
add
add
add
incl
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
