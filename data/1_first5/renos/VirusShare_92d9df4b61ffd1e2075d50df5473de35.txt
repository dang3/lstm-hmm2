jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
cmp
popa
xor
cmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
movl
mov
push
push
call
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
push
push
call
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
movl
mov
push
push
call
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
movl
mov
push
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
xor
mov
cmpl
jbe
mov
test
jbe
mov
movl
mov
add
mov
dec
shl
add
mov
mov
mov
add
push
mov
push
call
test
jne
mov
add
mov
dec
add
add
mov
mov
movzwl
mov
jmp
incl
decl
jne
jmp
mov
sub
mov
mov
add
mov
shl
add
mov
mov
mov
add
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
mov
cmp
je
call
ret
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
xor
divl
test
jne
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
mov
jmp
mov
xor
divl
inc
imull
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
mov
cmp
je
ret
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
mov
cmp
je
add
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
push
mov
push
mov
push
mov
push
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
cmp
je
mov
movl
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
sub
mov
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
push
mov
mov
xor
call
mov
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
mov
mov
call
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
push
mov
mov
xor
call
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
lea
mov
call
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
push
call
mov
mov
mov
call
mov
mov
mov
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
mov
movl
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
pop
ret
add
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
lahf
lahf
repz
lcall
mov
test
test
repz
xchg
lahf
mov
movsl
xchg
mov
mov
repz
mov
test
pushf
xchg
test
loope
lahf
lahf
repz
repz
repz
mov
repz
repz
repz
repz
repz
repz
jl
je
or
adc
xor
adc
mov
mov
int
mov
sbb
mov
adc
mov
sti
fnstenv
repz
fnstenv
repz
fnstenv
mov
jp
or
push
aas
lahf
mov
jp
or
push
and
or
push
daa
lahf
mov
jp
or
push
sub
or
push
das
lahf
mov
jp
or
push
adc
or
push
pop
lahf
mov
jp
or
les
jp
or
stos
stos
scas
xor
xor
sub
add
mov
xor
jl
xor
mov
xor
mov
cmpsb
jl
je
cmp
jp
cmp
das
mov
cmp
mov
mov
mov
mov
jl
sti
jp
pop
jl
cmp
mov
mov
mov
jl
cmp
mov
jp
seta
repz
mov
jl
iret
hlt
mov
jp
add
divb
repz
sub
je
div
add
repz
sub
mov
jp
daa
sbb
repz
repz
repz
daa
jl
push
mov
mov
mov
je
sbb
add
repz
daa
je
repz
jl
daa
jl
hlt
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
daa
jl
jecxz
mov
jp
pop
jl
daa
jl
jecxz
mov
jp
adc
jl
pop
or
jl
pop
jl
adc
repz
jl
cmp
mov
jp
sbb
jl
pop
jl
pop
hlt
cmc
jp
and
je
cmc
mov
jl
cmp
mov
jp
je
adc
je
pop
idivl
je
xrelease
mov
out
mov
je
push
add
adc
adc
jl
fcomi
mov
jp
or
jl
fistpll
pop
cmp
repz
jecxz
mov
je
jmp
jl
cmp
mov
repz
repz
cmp
mov
mov
repz
repz
sti
mov
mov
jl
pop
jle
xlat
movss
popf
repz
or
adc
ret
adc
div
xor
mov
cmpsb
jl
xchg
jl
sti
jl
decl
inc
jae
sub
inc
cmc
sbb
or
cmp
xchg
repz
ret
lods
repz
inc
cmc
mov
jecxz
shl
repz
test
xchg
pop
sbb
sbb
sub
repz
pop
and
xchg
bound
sbb
repz
repz
repz
jae
testb
mov
data16
inc
repnz
add
mov
xor
jmp
ret
sbb
adc
adc
cmp
sbb
adc
test
sti
repz
repz
jp
dec
adc
adc
lds
add
adc
fidivrl
jp
xor
cmpsb
jl
jb
or
adc
jp
idiv
xorl
mov
repz
jge
or
cmpsb
or
arpl
xorl
or
xchg
cmp
bndstx
adc
mov
mov
repz
repz
jge
or
div
les
ja
or
adc
adc
int
or
repz
xrelease
cmp
or
les
jge
or
or
dec
addr16
adc
adc
xor
or
dec
incl
adc
repz
or
or
jae
xorl
jge
or
arpl
xorl
or
xchg
push
scas
xor
mov
cmpsb
jl
mov
xor
xorl
repz
sti
xorl
mov
les
mov
add
incl
adc
repz
cli
xorl
mov
jge
incl
push
les
push
cli
xorl
repz
mov
jnp
incl
push
cli
xorl
incl
push
sti
xorl
mov
les
mov
add
incl
adc
repz
push
les
jge
push
jge
incl
adc
adc
adc
xor
add
lea
push
mov
add
mov
mov
cmp
jne
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
call
ret
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
lea
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jl
mov
mov
mov
mov
xchg
inc
dec
cmp
jbe
mov
mov
lea
mov
lea
xchg
dec
inc
mov
dec
dec
mov
mov
lea
xchg
mov
lea
mov
mov
xchg
mov
xchg
movl
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
mov
mov
call
mov
cmpl
je
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
cmp
je
mov
subb
mov
mov
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
xorb
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
incl
mov
cmp
jne
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmpb
jne
call
cmp
jle
mov
jmp
mov
inc
mov
mov
lea
mov
lea
mov
xchg
inc
mov
xchg
mov
dec
cmp
je
lea
jmp
mov
inc
mov
lea
xchg
lea
lea
lea
lea
dec
inc
inc
mov
mov
mov
mov
mov
and
jmp
and
add
inc
xor
cmp
jmp
call
ret
jne
cmp
jns
xchg
lea
xchg
mov
xchg
mov
mov
inc
mov
xchg
mov
mov
mov
mov
lea
inc
xchg
lea
lea
mov
xchg
xchg
lea
movb
cmp
jg
mov
mov
lea
jmp
dec
inc
dec
jmp
mov
xchg
inc
dec
mov
dec
cmp
jne
mov
xchg
mov
mov
mov
lea
xchg
inc
inc
xchg
mov
xchg
mov
lea
dec
mov
mov
pop
ret
lea
push
mov
add
call
call
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
call
call
call
test
jne
jmp
jmp
movw
movb
cmp
jp
mov
mov
mov
lea
dec
mov
cmp
jns
xchg
mov
mov
mov
mov
mov
mov
inc
inc
dec
dec
inc
inc
lea
xchg
lea
mov
mov
mov
xchg
jmp
xchg
mov
inc
xchg
inc
call
lea
mov
pop
ret
push
mov
add
mov
mov
mov
xchg
xchg
mov
xchg
xchg
xchg
inc
push
call
cmp
jne
push
call
test
jne
push
call
mov
cmpl
je
push
call
call
cmp
jl
mov
lea
mov
lea
xchg
mov
cmp
ja
mov
mov
lea
dec
mov
mov
lea
xchg
inc
lea
lea
mov
jmp
mov
lea
xchg
xchg
mov
lea
inc
dec
inc
mov
pop
ret
add
push
add
add
outsl
add
add
add
add
jae
jae
add
insl
add
push
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
sbb
jne
mov
cmp
jo
xchg
mov
lea
lea
xchg
mov
lea
dec
inc
mov
mov
cmp
jno
mov
mov
mov
mov
mov
mov
mov
lea
mov
dec
dec
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
call
mov
cmp
jne
jmp
mov
mov
mov
lea
mov
dec
dec
lea
mov
xchg
mov
mov
mov
xchg
xchg
mov
mov
xchg
mov
xchg
mov
mov
lea
lea
dec
inc
inc
ret
ret
lea
addl
add
clc
add
jge
add
add
test
insl
add
add
bound
mov
sub
add
add
push
or
push
movsb
push
rclb
hlt
sbb
add
cmp
addb
int3
jne
pop
rcrb
mov
xlat
add
mov
add
xchg
outsb
cmc
add
icebp
test
add
jecxz
jg
cmp
xchg
int3
aad
or
add
adc
xor
xor
ss
mov
stc
ficoms
add
out
push
add
add
sbb
sub
and
xor
scas
sbb
xchg
xor
mov
xor
push
add
sub
jmp
dec
loope
pop
cmp
out
xchg
cld
mov
mov
or
test
nop
jle
pop
and
add
jo
rol
inc
std
inc
add
sbb
pop
or
add
xor
push
es
or
add
les
adc
cmp
pop
dec
aaa
add
dec
leave
push
push
stc
add
clc
clc
add
addb
pop
add
inc
jne
enter
lods
add
stos
jp
out
ret
in
mov
sub
pushf
incb
inc
out
cli
push
add
adc
testb
int3
sbb
aam
add
add
xlat
jns
sbb
add
cmpsl
ds
add
movsl
stos
les
add
and
push
fcmovbe
or
mov
lds
mov
jl
loopne
lods
add
dec
lods
and
add
pop
pop
inc
mov
inc
scas
add
add
scas
js
add
ss
movsb
xchg
add
dec
mov
xor
lret
loop
add
insl
sub
pop
sub
mov
mov
xor
add
mov
add
fildll
movsb
test
add
sbb
add
cld
add
add
adc
fildl
lcall
jbe
addl
inc
add
imul
and
out
pop
outsl
jmp
mov
mov
add
inc
add
mov
loopne
dec
or
pop
xchg
pop
sbb
mov
jbe
scas
mul
mov
push
mov
dec
nop
popf
pop
dec
pop
add
les
push
mov
add
push
rolb
push
ja
add
mov
in
insb
je
sub
out
faddl
jle
cltd
mov
outsl
add
ficoms
cmp
xchg
into
cmp
pop
testl
imul
sub
xor
push
cld
mov
add
jp
out
daa
or
add
push
mov
ds
mov
lea
mov
add
pop
mov
sbb
add
jbe
fcompl
pop
lods
add
inc
add
ret
sbb
repnz
push
add
add
and
xchg
insl
popa
pop
and
add
mov
add
imulb
xlat
add
add
faddl
add
add
push
add
inc
sti
sbb
add
and
imul
add
add
fldenv
sub
pusha
add
add
imul
in
mov
or
jg
xchg
inc
xlat
add
add
mov
and
mov
add
in
mov
add
add
addl
xchg
add
into
add
jbe
data16
in
mov
adc
add
popf
jmp
and
add
fstl
add
movb
push
add
cmp
or
pusha
add
es
lret
shll
dec
mov
mov
popa
fistpll
xchg
xchg
lret
jp
sarb
in
sub
mov
sub
sub
sub
cmp
andl
hlt
pushf
fstpl
xchg
fdivrp
lock
dec
push
jns
rcrl
sbb
mov
rcrb
xchg
jle
outsl
push
and
jb
add
popf
incl
lds
xchg
lods
fisttpll
pop
xor
pop
fwait
sub
mov
dec
scas
pop
inc
and
stos
push
or
popa
push
xor
std
dec
pop
lcall
inc
lock
in
xor
shlb
jo
cmpsb
mov
sahf
pop
mov
pusha
mov
ja
cmp
movsl
xchg
inc
in
in
and
lahf
dec
fwait
loope
orb
mov
adcl
aam
pop
bound
sarb
in
in
cli
adc
repnz
and
mulb
in
inc
pop
lods
jp
mov
mov
scas
out
mov
ss
jle
push
aam
lea
call
dec
mov
jmp
push
mov
sbb
fsts
test
fcompl
pop
test
stos
lret
div
and
mov
jnp
std
scas
leave
sbb
push
mov
adcb
or
pop
add
cmc
mov
pop
sbb
adc
jae
cmp
inc
mov
scas
or
fnsave
cmpsl
pop
mov
mov
sbb
fisubrs
cwtl
mov
shlb
xor
adc
leave
popa
mov
push
cwtl
insl
jbe
enter
sub
sbb
rolb
jbe
mov
ret
add
lods
jle
jb
pop
pop
int
pop
push
jle
cmpsb
xor
pop
push
stos
scas
in
sub
and
sarb
out
movsb
movsb
pop
sub
ja
jbe
repz
in
or
jne
adc
and
in
lret
cmp
ret
and
dec
xor
mov
movsl
outsl
jae
and
lods
mov
test
addr16
inc
fidivs
insb
push
pop
cmp
jbe
js
jno
pop
jne
push
hlt
or
sub
and
pop
ds
add
adc
dec
sbbb
mov
xor
push
xor
xor
lcall
negl
jo
data16
bound
dec
ret
xor
pop
orb
add
mov
mov
into
and
and
jbe
mov
cmp
scas
xor
push
mov
shll
lock
outsl
sbb
pop
test
push
mov
pusha
xor
sub
inc
pop
loop
fcoms
pop
outsb
sub
ljmp
icebp
xchg
lods
in
mov
sub
ret
fs
cli
ja
shll
and
icebp
cmp
push
push
or
and
outsb
mov
outsb
loopne
inc
les
sbb
clc
mov
imul
and
and
sbb
sbb
cmp
inc
test
test
mov
xor
inc
sti
cmpsb
fs
jnp
pop
aad
dec
leave
nop
imul
sub
arpl
aaa
mov
repz
adc
call
dec
mov
pop
adc
pushf
jecxz
xor
mov
or
inc
jp
xchg
inc
xor
aas
jo
mov
dec
popf
insl
add
jle
fildl
mulb
push
push
std
mov
lods
arpl
mov
les
fs
fisttps
test
das
fsubl
mov
cmpsb
loopne
and
gs
push
pusha
mov
mov
or
dec
adc
out
jecxz
cs
cmp
cld
rolb
mov
repz
mov
dec
push
push
rorb
sub
aam
dec
cmp
movsl
and
fnstsw
xchg
jmp
xchg
cmc
push
ljmpw
fadds
lods
in
fdivrl
mov
xor
rclb
js
rorb
cltd
movsl
sbb
mov
xchg
cmpsl
adc
fldenv
mov
push
cmc
push
rcrl
bound
add
flds
sbb
xchg
xor
in
xlat
or
adc
mov
das
mov
pop
sbb
std
ja
les
cwtl
test
or
mov
mov
jne
pushl
mov
sti
out
sarb
in
mov
xchg
rcr
je
jne
or
icebp
cmp
jp
or
mov
pop
mov
movsl
fisttpll
jle
mov
in
and
push
fbstp
and
mov
jno
loop
pop
xor
subl
push
dec
mov
add
outsl
mov
mov
mov
movsl
sahf
jnp
mov
scas
sub
adc
add
iret
mov
cmc
ret
mov
push
aaa
roll
jae
addb
pop
add
pop
mov
mov
lahf
push
imul
fwait
imul
push
fmulp
mov
lds
es
repnz
test
aaa
aaa
hlt
addb
arpl
jbe
jne
jge
loop
sbb
lods
mov
xor
jmp
add
stc
leave
pop
cld
xor
popa
push
je
call
dec
movsl
scas
lret
daa
fisubl
xrelease
cmp
test
pop
lea
repnz
jle
imul
jecxz
out
cmp
fdivs
inc
cmpl
push
ds
or
loope
pop
inc
test
mov
ljmp
xor
jp
insl
loope
sbb
pop
push
jmp
ss
adc
ja
loope
pop
sub
or
cmp
popa
push
outsb
gs
fstl
in
and
subb
xchg
add
ret
pop
out
in
das
cltd
test
sub
cmp
lcall
cld
fadd
xorb
aad
lret
test
mov
jg
mov
mov
sub
and
loop
cmp
clc
mov
int
adc
ror
sti
mov
lds
sub
scas
cmc
jns
pushl
jno
and
loop
push
stos
stc
sysexit
cltd
fs
adcb
movsl
sbb
cmp
lods
int3
fldcw
out
adc
xor
and
xorl
cmpsl
gs
mov
pop
ret
jno
adc
mov
and
out
bound
mov
cli
movsl
xlat
add
fldcw
clc
jl
mov
popf
iret
out
sti
push
mov
inc
aad
iret
leave
nop
inc
das
pop
dec
addr16
test
xchg
daa
push
fldcw
xor
sub
rep
aaa
psrad
lea
cs
lret
pop
stc
mov
adc
mov
jmp
loope
pop
push
mov
mov
aas
cvtdq2ps
dec
adc
mov
es
jl
ljmp
std
dec
rcrl
mov
adc
mov
dec
sbb
push
xor
fistl
cmc
fidivs
adc
das
mov
xor
xchg
and
jae
shrl
lcall
jp
dec
or
cmp
icebp
mov
cld
jmp
and
pop
aam
mov
cli
pop
adc
imul
pop
jecxz
sub
and
pop
xchg
xor
push
push
jp
repz
icebp
clc
pushw
je
xor
out
ljmp
mov
pop
mov
mov
xchg
test
xchg
or
or
stc
sub
pop
mov
add
inc
xchg
test
mov
fiaddl
lret
adc
push
cmp
or
shl
fnstenv
stos
cs
push
cmpsl
iret
cs
xor
push
xor
cmp
xor
mov
mov
pop
xor
mov
mov
ja
aam
dec
mov
xchg
or
cmpsl
cmpsl
fwait
aas
xor
jne
sub
shr
xchg
sbb
jns
adc
push
and
out
ljmp
in
in
addr16
jnp
jp
adc
add
mov
adc
xchg
jle
pop
xchg
in
dec
imul
fsts
push
add
or
cs
push
adc
pop
push
movsb
das
out
stos
mov
inc
and
xchg
test
jnp
imul
pop
xor
adc
lcall
mov
inc
xor
ljmp
cltd
jg
inc
jmp
testl
xor
in
mov
fisubrs
lock
rcrb
mov
mov
bswap
dec
xchg
hlt
lret
mov
outsl
jbe
xchg
sarb
jge
sbb
jl
or
mov
and
sub
xor
adc
sub
and
lds
movsb
mov
xchg
shlb
fsts
mulb
loop
jp
mov
or
jl
adc
ds
adc
jge
add
in
rcrb
mov
inc
push
std
inc
aam
cld
iret
push
fisttpl
pop
jp
ja
add
popw
push
mov
push
scas
js
cli
cmpsb
mov
mov
sti
cmp
jae
adc
enter
dec
ret
xor
js
rolb
test
xor
mov
push
xor
ljmp
xchg
sahf
loopne
dec
cmp
sub
fsubrl
shrb
es
sahf
js
leave
test
and
es
add
int
insb
mov
jmp
shlb
cld
and
addr16
or
mov
addr16
cltd
test
add
mov
push
ja
push
fiaddl
sbb
add
inc
xchg
pop
xor
lea
add
lret
stc
lahf
fs
imul
lods
mov
orl
fstl
loopne
lods
and
or
mov
int
lahf
bound
pop
loop
movlps
and
push
or
xchg
in
xor
in
lods
cmp
shl
imul
in
or
mov
inc
test
aad
mov
nop
pop
popa
dec
dec
in
mov
movsl
pop
mov
les
pop
dec
repz
leave
adc
and
nop
jbe
dec
mov
and
adc
lahf
pushf
cmp
call
pop
shll
inc
mov
faddl
out
mov
jb
pusha
inc
dec
mov
je
cli
xchg
jecxz
int3
xor
lods
xchg
cmp
fbstp
mov
xchg
mov
stc
and
or
ret
mov
les
das
lcall
mov
add
jl
mov
inc
sbb
sub
cmpsl
loope
inc
mov
out
push
cld
push
icebp
mov
mov
add
add
mov
mov
aam
adc
ret
ret
add
cmp
inc
data16
mov
push
aaa
ljmp
or
les
stc
mov
mov
movd
into
add
sbb
inc
test
and
adc
xor
test
addr16
mov
jmp
mov
aad
pop
inc
mov
adc
dec
sbb
or
dec
add
fdivr
jne
fdivl
aad
inc
or
mov
mov
popf
stos
lret
push
fcompl
adc
ja
push
sbb
bound
cltd
imul
jne
cwtl
aad
stc
fmull
jno
xor
jns
rclb
xchg
jo
sbb
jnp
subb
and
pop
jp
lret
inc
mov
arpl
mov
push
adc
mov
or
fbstp
add
xchg
jmp
mov
and
into
xchg
pop
popf
ja
sbb
push
jecxz
in
and
mov
in
int
insb
mov
in
scas
repnz
jg
test
cmp
lea
mov
cs
pop
pop
shll
cmp
sub
fstps
or
dec
xor
or
fiaddl
fldenv
aam
imul
mov
lret
mov
push
or
jb
jp
hlt
push
int3
andb
sti
jbe
sub
sti
adc
pusha
and
aaa
mov
pop
or
std
inc
int3
xor
mov
xor
jo
inc
scas
mov
xchg
and
pop
pushf
cmp
sub
push
or
cmpsb
jl
mov
enter
daa
loope
pusha
cmp
xchg
jno
lock
dec
dec
jg
or
das
mov
lcall
jge
push
pop
jne
test
enter
mov
jl
sahf
mov
mov
cwtl
inc
pop
xchg
cltd
mov
loope
stos
gs
pop
inc
cmp
push
outsb
sub
popf
shlb
ljmp
scas
sub
add
lcall
xor
cmp
or
and
xchg
lock
push
jne
fcompl
cmp
adc
sbb
fldt
mov
xor
adc
daa
mov
aas
sarl
cmp
outsb
jns
testl
mov
mov
mov
jnp
dec
enter
call
outsl
loope
sbb
pop
sub
push
fs
cmp
fsubs
sub
lods
lcall
out
cli
or
xor
mov
mov
adc
cmpsb
popf
out
xchg
ja
jno
xchg
imul
hlt
add
mov
xchg
scas
adc
or
adc
fidivrs
mov
jae
sti
mov
dec
movsb
mov
aad
std
pop
nop
cli
cmpsb
mov
inc
mov
jmp
les
adc
adc
or
or
enter
pop
xchg
rclb
imul
pushf
in
cs
popf
sahf
pop
fs
inc
pop
inc
orb
dec
sbb
xor
add
jbe
or
outsb
imul
popa
sub
xchg
shlb
mov
jge
mov
adc
neg
icebp
xor
mov
push
push
mov
jns
lock
jbe
mov
lret
fwait
bound
mov
rorl
pop
xchg
es
inc
insl
mov
pop
dec
add
dec
mov
mov
cmpsl
lret
ss
rclb
and
int
mov
test
push
sub
and
aam
testl
add
inc
fnsave
push
xchg
mov
xor
sbb
popa
sbb
shl
mov
pop
ret
sub
xchg
jnp
paddusw
addb
xchg
mov
test
jle
ss
lea
or
sbb
insb
inc
lahf
shll
in
pop
stos
or
out
in
pop
mov
add
pop
call
sbb
sub
and
add
jg
out
std
loop
lods
pop
dec
mov
xchg
sarb
dec
add
les
mov
push
or
dec
fwait
popf
clc
pop
dec
jno
dec
jne
data16
out
push
sub
cmpsl
repz
pop
xor
or
lea
out
dec
jb
push
mov
or
stc
insl
addr16
out
jp
cmp
mov
out
mov
repnz
xchg
jle
jecxz
test
jno
fists
dec
loopne
push
or
sbbb
push
xchg
lods
jb
sahf
std
daa
mov
and
stos
xchg
mov
and
sub
insb
sub
jnp
and
scas
push
jae
push
int3
inc
into
adc
push
ret
bound
mov
jae
jmp
inc
xchg
sbb
or
leave
fcoms
mov
push
fidivrl
cmp
cmp
cmp
mov
lret
lds
sub
movsl
fidivrl
pop
xchg
cmp
mov
mov
xor
pop
jno
sbb
push
or
pusha
xor
push
sahf
test
mov
aaa
push
or
push
xor
lret
test
scas
push
adc
daa
xor
test
cmpsb
jmp
cmp
cmpsl
add
cmp
arpl
xlat
mov
dec
out
push
cld
ds
xor
mov
fsubl
sbb
sbb
push
das
insl
mov
mov
ds
xchg
or
sbb
popa
inc
xchg
pop
enter
jp
ja
rolb
mov
cmp
sub
shrb
popa
daa
outsb
mov
mov
or
adc
sbb
jmp
rdpmc
lds
xor
int3
and
sub
mov
inc
ret
push
push
int3
xchg
fadd
aam
sub
lds
push
imul
fs
stc
mov
xchg
test
adc
outsb
and
mov
sub
pop
lret
push
rcll
scas
sbb
imul
xor
outsl
gs
push
or
xor
jge
shll
adc
mov
lods
lods
xorl
sub
xor
xlat
cmp
jnp
or
jl
cli
stc
lods
cmp
loopne
mov
and
insl
imul
pop
add
jge
jb
xchg
sub
rcll
push
push
push
mov
in
fisubs
sti
bound
cs
mov
aad
stos
push
nop
aad
push
dec
test
inc
lret
stos
mov
les
repz
mov
test
sub
inc
mov
pop
adc
pushf
cld
push
jmp
mov
roll
in
inc
popf
shrl
in
cld
adc
add
jns
xorl
shl
movsl
pusha
std
movsl
or
mov
clc
sti
mov
mov
dec
in
mov
outsl
leave
mov
xchg
lret
mov
das
pop
subl
icebp
mov
push
xchg
out
rcrl
popa
es
insl
fwait
aas
into
dec
xchg
inc
cmpsl
popf
mov
xchg
xchg
and
lret
movsl
pop
add
setl
pop
enter
cwtl
jl
sub
faddp
aam
jns,pn
loope
xchg
int
fstp
jg
clc
pop
fistps
icebp
call
sbb
push
lods
cltd
and
mov
mov
and
dec
sub
out
addl
or
add
test
xchg
xchg
pop
jo
shl
aaa
in
pop
lcall
push
nop
mov
test
xor
xor
or
mov
cmp
lods
mov
clc
jo
or
pop
pop
mov
ja
sbb
inc
fistpll
sub
push
mov
jne
cltd
inc
mov
dec
fsubr
das
aaa
inc
bound
addr16
cmp
cwtl
or
push
sti
cld
out
lods
sbb
or
popa
add
jecxz
jp
pop
xchg
mov
mov
mov
popa
jnp
jle
mov
loopne
out
jmp
fildll
jmp
aas
xchg
dec
imul
popf
lds
mov
popa
mov
stos
or
adc
sbb
push
jnp
and
scas
mov
daa
les
inc
xor
in
ret
je
das
inc
add
add
inc
mov
or
inc
adc
fisubrl
cmp
insl
dec
negb
int3
and
pop
mov
xchg
shrb
aad
scas
or
leave
mov
div
lods
in
arpl
mov
jge
movsl
add
aaa
xor
or
add
out
int3
or
pop
mov
stc
in
add
gs
out
adc
aas
push
jmp
fisubs
movsb
pop
cwtl
dec
push
add
add
mov
dec
enter
daa
fistps
inc
jno
mov
fs
pop
xchg
aaa
jne,pt
sbb
mov
fcompl
add
or
rolb
xor
and
pop
out
popf
gs
inc
mov
adc
in
push
fabs
aas
sbb
sub
stc
xor
xchg
bound
ja
adc
pop
push
add
imul
stc
dec
rcrl
dec
sub
icebp
jmp
int
cs
sub
inc
rolb
jns
lcall
pushf
fsubrl
jecxz
repz
aas
sahf
popa
addb
lahf
hlt
adcb
inc
jg
inc
in
mov
es
xor
pop
and
jmp
xchg
in
mov
add
pop
lret
mov
sub
cwtl
mov
lea
into
cmc
xchg
cwtl
dec
xor
xor
outsl
lahf
jg
loop
adc
stc
jmp
fs
cli
mov
ss
mov
lods
push
insl
jmp
mov
repz
push
xor
cmp
xlat
or
jae
gs
push
loopne
nop
hlt
pop
aas
cli
cld
adc
dec
jecxz
dec
mov
iret
add
test
sbb
fs
ja
add
cmp
les
mov
dec
xchg
jno
adc
cmp
ss
into
dec
jecxz
jle
fidivrs
sbb
push
xchg
add
out
add
sbb
sub
add
fadd
movb
pop
lds
adc
ret
cmp
add
dec
imul
sbb
dec
add
mov
mov
and
pop
jecxz
jge
divb
dec
std
in
daa
cwtl
xor
xchg
mov
notl
mov
popa
dec
lcall
fisttpl
fwait
mov
sbbb
rcr
pop
das
aaa
xchg
mov
cmp
pop
and
icebp
push
shrl
leave
aam
sbbb
cmpsl
ficomps
ds
imul
iret
clc
lret
adc
cld
mov
push
js
mov
out
shrb
cmp
daa
inc
xchg
inc
mov
dec
push
xchg
fldl
cmc
mov
push
inc
adcb
fistl
das
dec
lods
add
and
and
mov
setnp
add
and
pop
test
popa
or
jnp
stos
xchg
aaa
dec
addr16
test
push
and
rclb
rorl
push
pop
inc
lret
ljmp
add
lahf
in
call
jl
into
inc
xor
out
cmp
out
lret
mov
int3
aad
scas
aas
push
pop
ret
ja
cmp
xchg
inc
inc
jbe
fisttps
cmpsl
inc
fwait
sti
into
dec
aaa
inc
data16
xor
mov
mov
mov
jns
loopne
in
ds
pop
lods
jg
add
mov
faddl
mov
arpl
jp
xor
xchg
mov
rorb
das
in
in
mull
jp
popl
xchg
add
xchg
push
mov
xorl
push
pop
aas
sub
subl
xchg
stos
jge
popa
and
push
jns
call
mov
ljmp
pop
push
adc
lods
ret
iret
xchg
dec
and
addr16
mov
jae
fcmovnb
inc
popf
imul
push
xchg
ficompl
and
mov
nop
add
imul
push
sti
mov
js
lds
in
add
cmp
sub
ret
arpl
mov
inc
sbb
orl
fsubrs
add
int3
hlt
das
sub
out
push
push
rolb
xor
orl
and
enter
xor
movsb
out
cwtl
push
push
add
add
sbbl
lret
daa
fdivrp
mov
jge
aad
push
add
sub
xlat
scas
ds
add
push
imul
push
aad
sbb
sub
insl
inc
cmp
and
out
jb
push
test
js
repnz
push
popa
fisubrl
xchg
repnz
mov
sub
pop
cmp
jne
test
push
popa
dec
adc
xor
jl
lret
orb
sbb
add
aam
xor
insb
push
ds
cmp
lcall
pop
inc
jmp
lcall
xchg
sbb
rcrb
bound
sub
mov
in
outsb
mov
outsb
hlt
and
xor
cmp
lahf
jmp
idivl
fcomps
iret
mov
sbb
lcall
cmc
pop
popa
add
cmp
vmovshdup
stc
mov
stos
adc
jbe
lods
dec
arpl
mov
dec
out
xor
cli
test
push
push
cmp
and
or
incb
xchg
gs
test
sti
adc
cmp
adc
cmp
add
xchg
clc
imul
xchg
xlat
aas
repnz
mov
mov
idiv
rcl
cs
inc
aad
xor
nop
mov
rorl
cmpsb
sbb
pop
loopne
orl
shufps
dec
lea
inc
movl
mov
pushf
in
out
jmp
cmc
cmp
out
push
inc
movsb
push
sbb
sub
scas
jb
jbe
dec
addr16
push
je
sarl
idivb
cli
pop
cwtl
out
cmp
mov
jns
mov
cli
addl
jmp
mov
test
mov
repz
cs
push
test
test
sub
mov
clc
mov
cwtl
insl
imul
frstor
push
cmp
and
lret
and
mov
sbb
cli
jne
push
sub
sub
inc
lret
aam
cwtl
fcmovb
ljmp
sub
clc
lea
xchg
outsl
lret
sahf
ljmp
lcall
mov
xchg
outsl
ficoms
push
stos
psubd
aaa
cltd
out
xchg
aam
inc
sbb
dec
xchg
ja
dec
into
xchg
mov
cmc
ficomps
test
dec
shll
jbe
stos
fstps
push
int3
mov
mov
gs
and
rorb
pop
mov
fstpl
mov
adc
mov
jge
and
dec
dec
or
inc
or
mov
add
lds
or
in
pop
mov
pusha
ljmp
scas
les
out
enter
mov
mov
cmp
shrb
cwtl
dec
lods
mov
aas
loop
jle
std
and
pusha
and
jge
xchg
rol
xor
cmp
mov
add
rcll
mov
popf
adc
sub
lods
fldt
dec
push
cmp
or
je
scas
jle
jecxz
mov
cmp
iret
icebp
add
pop
popf
mov
aaa
jae
mov
push
or
cmp
add
data16
xchg
sbb
sbb
arpl
imul
outsl
dec
shl
inc
mov
push
mov
leave
mov
dec
push
arpl
or
ficoms
aaa
scas
sub
or
jns
adc
int3
fbstp
rorb
mov
inc
xor
fdivl
out
gs
cmp
movsb
jno
inc
push
mov
hlt
or
enter
daa
fucom
cmp
cld
adc
pop
dec
push
cmp
push
ds
and
shl
lahf
adc
mov
test
hlt
rolb
je
stos
and
adc
cmp
pop
push
aas
push
push
sub
sub
call
jmp
adc
maxps
vphaddubq
mov
hlt
add
cmp
xor
mov
inc
jmp
int
in
mov
pop
lcall
add
sub
inc
jo
cmpsl
mov
test
cmp
inc
jg
sahf
outsb
mov
out
mov
ret
js
cmc
loope
and
mov
dec
cmp
pop
in
idivl
or
rcrl
mov
repnz
mov
pop
cmc
and
insl
outsl
pop
stos
mov
stc
pop
push
jne
je
sub
aam
cmp
ja
lods
ss
mov
mov
or
cmp
mov
or
imul
ret
loopne
aad
pop
jge
mov
mov
jle
adc
mov
xchg
mov
data16
cmp
roll
xlat
jle
leave
sub
lock
pop
push
sti
outsl
ret
xor
les
popa
nop
data16
dec
mov
add
fnstcw
mov
rol
and
sti
fdivrl
mov
mov
lret
inc
adc
ljmp
sub
adc
inc
loopne
sub
or
out
xchg
sub
leave
ret
jg
cmp
je
pop
cmpsb
jecxz
icebp
xchg
idiv
es
xor
cwtl
test
cmpb
fidivs
aad
xchg
fldt
jle
mov
cmp
das
cmc
rcl
cs
add
test
roll
ds
adc
dec
out
adc
fsubrl
mov
sbb
cld
in
xchg
mov
and
or
and
ljmp
fxch
arpl
mov
hlt
push
or
sub
push
mov
enter
scas
add
popa
jns
mov
mov
call
push
mov
mulps
ret
add
add
es
xchg
test
dec
mov
fsub
xchg
pushf
dec
xor
imul
xchg
or
cld
fldcw
fwait
test
push
jns
fiadds
aad
mov
nop
xchg
stc
xor
or
push
or
mov
in
shlb
pop
cmp
push
dec
cmp
dec
mov
xor
inc
dec
std
cmp
jne
mov
out
int3
js
stc
dec
jns
push
jae
cmp
push
out
test
stos
fstp
or
adc
addr16
push
jp
decl
mov
scas
cmp
jle
or
in
pop
das
pusha
rcl
fisttps
notb
xor
lods
out
push
imul
mov
lret
sub
test
and
sub
test
shll
call
fsubrs
ret
aad
aam
js
jae
insl
jae
fidivrl
mov
mull
inc
test
dec
fiaddl
dec
sbb
cwtl
inc
imul
lds
jne
sti
adc
cwtl
fdivr
repnz
dec
leave
sbb
mov
arpl
sbb
jge
shrl
pop
loopne
aaa
outsb
jne
or
das
add
adc
pop
inc
dec
fisttps
xchg
mulb
xor
aaa
cmp
and
dec
mov
movsb
cld
stos
cld
push
out
push
test
inc
roll
in
dec
in
fmull
cmp
fistl
add
jp
dec
stos
test
fisubs
inc
and
aad
push
jnp
ds
mov
sti
or
insl
lods
jb
fs
out
js
adc
push
sarb
adc
adc
sbb
push
adc
ljmp
xorb
mov
add
hlt
mov
add
out
int
mov
inc
pop
inc
pop
adc
sub
or
sahf
dec
ds
sbb
loopne
fidivs
xchg
push
mov
inc
test
mov
cmp
adc
mov
mov
add
mov
test
dec
cmc
ljmp
outsl
cmp
sbb
stc
adc
adc
xchg
adc
in
fisubrs
dec
jnp
out
inc
and
bt
cmp
pop
inc
or
shl
incb
mov
clc
pop
pushf
dec
pop
adc
jecxz
adc
enter
aas
push
xchg
jle
hlt
sbb
adc
mov
stc
mov
mov
sti
push
jb
cs
xor
or
nop
inc
xor
inc
pop
xor
push
xlat
les
sbb
push
inc
aaa
and
je
bound
popf
call
inc
add
inc
adc
xor
aas
jmp
pop
pushf
pop
xchg
xchg
inc
mov
adc
push
loopne
push
mov
cmp
int3
jecxz
xchg
lahf
idivb
cmp
fcmovu
insl
cwtl
fs
mov
or
mov
xor
shrb
mov
loop
lock
jo
aam
loope
shrl
mov
inc
add
xchg
push
jnp
int
pop
insl
aaa
adc
cmpsl
fistl
ja
lock
cld
sbb
js
popa
ja
mov
sub
aam
pop
pop
inc
nop
pop
shl
lret
mov
or
lcall
clc
mov
fnsave
xchg
clc
add
daa
xchg
in
mov
std
popa
nop
sahf
and
mov
out
dec
xor
xchg
std
es
push
fcomps
pusha
add
jne
pop
das
je
call
lds
pushf
repnz
pushf
lea
jmp
pop
rcll
jle
inc
dec
ss
mov
cmp
sbb
cs
lock
jg
or
fbstp
insb
shll
das
add
pop
rep
dec
ja
mov
dec
xor
popa
inc
cmp
cwtl
or
pop
adc
mov
dec
dec
loopne
jns
into
dec
repnz
sbb
stos
xchg
repz
mov
in
int
xchg
dec
pop
mov
lea
sbb
leave
leave
mov
cmp
push
mov
xchg
inc
mov
sbb
or
int3
cmp
mov
xchg
jns
push
jmp
ja
adc
pusha
call
popa
pop
sarl
loope
stos
xchg
adc
jbe
mov
jnp
rcrl
push
das
mov
scas
mov
iret
scas
jp
ret
movsb
pop
or
dec
jae
inc
adc
cmpsb
inc
in
or
xor
cmp
fidivl
push
outsl
xchg
leave
out
sbb
mov
rcr
in
hlt
insb
rclb
and
sti
sub
nop
mov
int3
arpl
pop
jbe
das
add
scas
cmpsl
cmp
ret
aaa
sub
mov
insl
int3
mov
cwtl
pop
je
imul
and
pop
scas
ret
scas
jp
mov
cmp
scas
jb
bound
cmpsb
mov
stc
enter
daa
fstpt
fwait
cmp
cld
popf
jno
pop
idivl
fisttpl
aaa
fstpt
add
sbb
scas
in
popa
and
fsubl
lahf
push
mov
push
dec
push
push
test
mov
inc
in
stos
xor
adc
and
push
jecxz
loope
mov
sub
daa
aam
addb
outsb
jge
pushf
adc
lds
addb
sbb
cmp
add
add
xor
xor
push
inc
roll
out
xchg
ret
push
push
lcall
jg
sbb
sub
mov
mov
jge
inc
jg
or
mov
mov
mov
les
roll
fcom
xchg
ds
jns
lret
mov
mov
and
into
push
aad
cmc
mov
jl
dec
sub
outsl
sbb
fsubp
iret
push
mov
jp
mov
jb
fisubs
sahf
lods
add
mov
out
adc
mov
push
cmp
push
mov
test
xor
sub
pop
mov
aaa
xchg
imul
pop
nop
xchg
inc
sbb
push
fs
cld
inc
call
mov
cmc
xchg
adc
int
cmpsb
cs
adc
push
jmp
add
pop
fistl
fldenv
repz
subl
repz
xor
daa
repnz
in
mov
movsb
pop
xchg
push
out
jne
jp
out
add
or
int
sarb
fwait
pop
inc
and
out
aas
pop
mov
jb
sub
je
push
insb
testb
mov
mov
sbb
inc
lods
addb
adc
or
daa
mov
lahf
mov
lock
lock
jecxz
das
mov
mov
adc
scas
jmp
in
in
es
sub
insl
push
add
cmpsl
fiaddl
mov
mov
std
lret
shl
dec
mov
xor
data16
arpl
clc
shlb
xor
outsl
sub
ret
lods
outsb
push
xchg
push
rcr
mov
clc
ds
xchg
sub
add
int3
cwtl
jle
cmpsl
or
mov
scas
repz
push
mov
pop
movhps
dec
mov
cltd
xchg
jae
test
jg
mov
lahf
xchg
into
dec
add
test
call
sbb
movsb
mov
stos
cmpsb
insl
dec
push
mov
or
dec
push
adc
sbb
mov
xor
mov
mov
jb
jmp
pop
scas
fldcw
pop
loop
dec
and
pop
or
out
fwait
mov
decb
add
mov
mov
sbb
jns
jmp
in
push
adcl
js
sub
les
push
mov
repnz
mov
mov
pop
jle
add
in
sbbb
jo
dec
pusha
jge
dec
ud1
and
out
jo
sbb
and
call
mov
pushf
sar
dec
jl
and
andl
push
jbe
ret
adc
cmp
sbb
jle
inc
mov
jae
ljmp
jge
push
push
and
arpl
sbb
cmpb
out
fiadds
jo
shlb
cld
mov
dec
mov
leave
pop
adc
arpl
loopne
jbe
lock
bound
jge
ja
in
xchg
sbb
add
mov
xor
mov
ds
in
jp
scas
mov
mov
mov
mov
cmpsb
adc
jecxz
adc
mov
fisubrl
mov
mov
mov
mov
jecxz
mov
int3
and
inc
ljmp
lcall
aam
repz
js
andl
push
mov
inc
sub
test
cmp
or
and
shlb
outsb
ret
mov
les
fs
push
dec
push
ror
ss
in
inc
flds
push
lods
pop
fadd
fdivrs
sahf
sti
loop
nop
sub
test
stos
sbbb
lret
or
mov
xor
and
cmc
pushl
adc
cmp
mov
idivl
pop
or
sbb
popf
outsl
sbb
arpl
cmc
js
mov
movsb
fsubs
loop
fs
jle
push
fs
adc
jmp
add
mov
icebp
add
mov
out
cmp
pop
loop
les
xlat
sub
ret
ror
pop
fidivrl
mov
ss
out
sbb
es
cmpsl
sub
mov
out
sbb
mov
out
add
in
pusha
in
sti
jl
inc
cs
stos
xor
cltd
out
mov
dec
mov
xor
fstps
ffreep
mov
scas
repz
mov
lea
adc
call
inc
inc
sub
push
adc
xor
ret
jmp
int3
xchg
pop
fldln2
out
rcrb
inc
aas
sbb
aas
cmpsb
lods
sub
lret
xchg
dec
inc
sub
jecxz
popf
out
test
jne
sub
cwtl
fisubrl
lea
cmp
cltd
dec
xchg
mov
fstpt
mov
mov
cmp
lcall
mov
int3
adc
and
mov
shll
andl
add
insl
cmpsl
fnstenv
mov
sahf
ds
cld
outsb
rcl
lret
aas
sbb
mov
cmp
js
addb
rorb
lds
ret
cmp
cmp
lds
popf
xchg
imul
ljmp
jge
sbb
mov
adc
je
mov
les
jbe
push
add
pop
cltd
lret
pop
in
test
or
dec
jecxz
dec
push
pop
test
mov
lret
inc
jae
add
nop
pop
pushf
jno
stos
xchg
cli
lods
push
bound
add
ljmp
xchg
xor
and
inc
sub
xor
dec
mov
mov
mov
imul
pop
dec
push
repz
inc
imul
popa
fwait
out
push
dec
cmpsb
push
cmpsb
jne
cs
ja
out
imul
fdivrs
enter
es
push
xor
xchg
outsb
fsubrs
mov
lahf
inc
jp
cmc
inc
mov
jno
mov
sti
fisttps
in
sub
pusha
xchg
outsl
iret
fildll
nop
xchg
pop
out
jmp
or
mov
mov
mov
mov
movsb
scas
jle
push
mov
mov
mov
xor
ret
addr16
jns
sub
mov
inc
lods
pop
inc
or
es
roll
mov
ficompl
or
sbb
xor
fisubrs
pusha
pop
lds
cmpsb
jge
dec
xor
pop
repnz
es
outsb
push
dec
arpl
stos
jbe,pt
and
sbbb
clts
aaa
stos
addr16
xor
add
leave
int3
mov
stos
pop
shl
mov
aas
xchg
xor
dec
cmp
cmp
push
cmp
jmp
push
push
fmull
cmpsb
xchg
push
mov
clc
jae
enter
daa
fldenv
inc
jno
inc
mov
add
cmp
lahf
push
ds
cmp
movsl
mov
aaa
in
lahf
xchg
push
int3
push
hlt
jecxz
test
and
jmp
mov
cmp
fs
pop
sbb
push
inc
sub
leave
rcrb
cmp
xlat
ja
inc
cmp
adc
jnp
lds
imul
addr16
jbe
outsb
out
jecxz
dec
push
or
popf
sbb
sub
and
pop
rcr
lcall
mov
jno
fildll
lea
sahf
xor
xorb
daa
mov
fsub
mov
fcompl
and
cmp
ss
mov
cmp
inc
jl
jp
mov
shll
sbb
inc
into
pop
jns
cmc
aas
sub
lcall
cmp
cmc
test
andb
adc
cmp
data16
xchg
lods
shlb
loopne
cmp
cmp
mov
cmpsb
adc
pusha
jg
cmp
aas
pop
or
sbb
out
jns
fiadds
and
adc
in
imul
xchg
lret
pop
les
inc
pop
dec
cmp
inc
not
jp
sbb
jbe
insb
mov
lret
or
sti
sub
push
cs
push
push
dec
sbb
cld
mov
les
test
sub
out
sub
jecxz
fadd
shrb
and
inc
pushf
cmp
xor
call
xorps
push
lock
pop
pop
iret
aas
inc
lods
inc
jb
mov
push
je
lds
orb
testb
mov
iret
gs
cwtl
xchg
sbb
mov
ret
das
mov
addb
jne
fldt
mov
adc
mov
das
jno
loop
jp
into
mov
jecxz
sbb
subl
insl
in
mov
fcmovnbe
jl
fsubrs
mov
jne
sbb
cltd
call
jo
fsubrs
and
movsl
jp
pop
mov
test
or
add
or
fucomp
addr16
mov
test
mov
lea
push
push
lods
xchg
mov
je
mov
push
imul
jne
add
das
test
mov
xchg
dec
dec
roll
test
add
xor
add
inc
rcrl
jae
inc
inc
pop
stos
test
push
add
daa
xor
inc
push
icebp
decl
dec
xor
nop
xor
xor
cmp
mov
dec
cli
mov
and
divl
int
dec
or
js
add
or
jle
fwait
adc
lcall
sub
adc
dec
or
aas
inc
xor
dec
aad
gs
mov
aaa
push
aad
inc
inc
jg
mov
aaa
lock
add
mov
adc
xor
add
in
cmp
pusha
sub
xchg
mov
xchg
repnz
push
xor
orl
repz
ds
mov
sbb
popa
stos
das
insl
fldenv
mov
into
in
jnp
mov
mov
add
cmp
inc
and
iret
int3
int
ret
mov
inc
lahf
xor
scas
cmp
or
mov
mov
ficoml
inc
xchg
into
aam
sbb
mov
imul
fmulp
sti
popf
lds
mov
push
repnz
popa
jmp
hlt
mov
mov
adc
adc
repz
stc
aaa
push
mov
es
push
test
jbe
mov
add
push
push
and
xor
mov
and
inc
enter
xchg
jge
sub
xor
fistps
daa
fcomps
loope
scas
xchg
cli
jno
hlt
js
das
adcl
data16
ds
sub
ret
jae
and
add
push
jnp
test
jmp
mov
mov
fstps
movsb
ja
push
inc
pusha
pop
lret
push
test
loope
sbb
mov
data16
outsb
cmpsb
adc
push
fildll
add
cmpsl
cmpb
sbb
and
push
push
push
lret
add
inc
sub
popf
pop
inc
push
sbb
sub
fcompl
icebp
sub
sahf
call
push
or
mov
pop
dec
mov
imul
push
mov
push
pop
and
call
cmp
add
cmp
lret
xor
dec
mov
sbb
mov
sub
pop
jae
outsl
mov
and
in
push
loop
sub
mov
pop
dec
daa
lods
mov
sti
shl
mov
insl
cli
fisttpl
call
cmp
hlt
fmull
mov
shl
gs
xor
stc
loopne
pop
sbb
adc
or
imul
xlat
rolb
inc
cltd
xchg
mov
push
inc
cmp
xchg
imul
xor
jmp
fldcw
ss
imul
fadd
cs
hlt
daa
and
in
jl
jge
arpl
pop
fxch
pushf
cltd
les
adc
xor
push
lods
mov
pop
pop
inc
aas
xchg
lcall
and
push
mov
inc
into
push
mov
aas
in
pop
jb
scas
mov
je
icebp
push
mov
sti
std
jbe
mov
mov
pop
mov
shll
dec
insb
or
cwtl
fsubrp
mov
cmpsl
sub
push
cmp
das
push
jp
mov
cmp
and
mov
rcl
stos
fldenv
fnstenv
insl
shll
mov
cmpsl
xlat
lds
push
icebp
dec
cwtl
idiv
sarb
lret
sbb
cld
push
mov
rorb
call
mov
ret
pop
inc
sub
fstl
sbb
xchg
jmp
leave
jnp
in
sub
lods
icebp
insl
dec
mov
xlat
jmp
push
push
inc
and
add
sbb
test
sub
xchg
ret
dec
cmp
test
cli
dec
xchg
pop
sbb
jae
jae
and
add
pop
stos
and
stos
lret
and
or
imul
xor
mov
dec
or
inc
lret
inc
pop
fists
rorb
mov
xchg
mov
or
mov
dec
insb
aam
jne
aas
add
out
daa
add
push
lahf
jns
insl
xchg
in
iret
out
xchg
xchg
sbb
cltd
stc
or
sub
jno
addr16
push
pop
jp
mov
mov
fnstenv
jle
cwtl
mov
pusha
nop
dec
fbld
das
xchg
add
xchg
push
sbbl
int3
popf
std
test
mov
pop
jp
stos
mov
into
or
cwtl
jnp
ret
sarb
push
dec
xor
adc
and
iret
sub
pop
out
pop
inc
stos
cmp
jae
jg
inc
mov
or
sbb
popl
pop
sub
add
xchg
sbb
adc
imul
fidivs
sub
adc
mov
inc
xchg
hlt
add
push
arpl
or
jbe
in
jno
dec
ljmp
sub
lcall
inc
sti
pop
xor
das
push
add
je
jo
icebp
into
scas
aas
push
sti
and
test
cmp
add
push
jp
cmp
in
test
out
daa
xlat
push
cmp
test
jno
vhaddpd
decl
sbb
lea
movsl
lret
and
nop
push
push
lcall
push
mov
adc
cwtl
pop
cmp
and
or
pop
or
ljmp
jns
loope
test
cmp
mov
stos
adc
xor
arpl
adcb
push
or
mov
add
imul
pop
mov
iret
push
push
sub
insl
sahf
jns
sbb
jmp
divps
ljmp
and
xchg
push
fnsave
jo
mov
pop
mov
jne
push
mov
ror
fucomp
movsb
cmc
int
xchg
xor
mov
sbb
sbb
mov
push
jecxz
scas
push
xchg
add
lods
mov
int
out
jb
cli
push
sub
xor
ja
xor
addr16
loopne
test
pop
aaa
lret
sbb
scas
bound
imul
insl
jmp
gs
xchg
dec
lds
xchg
xor
cmp
push
xlat
clc
loope
sub
mov
mov
pop
xchg
addb
nop
mov
insl
inc
jbe
and
add
rol
scas
call
repz
xchg
leave
xor
lea
adc
fnstcw
imul
les
jmp
cmp
pop
ret
inc
push
add
inc
nop
push
dec
aas
cmpl
dec
test
lods
je
jno
jecxz
lods
adc
lea
std
sbb
mov
mov
jge
mov
push
mov
push
jae
fcmovnb
sbb
mov
push
fidivs
stos
sub
das
das
stos
movsb
mov
icebp
add
and
lods
fcmovnbe
and
jnp
pop
int
insl
mov
mov
cmpsl
es
mov
and
cld
out
nop
das
lret
mov
mov
dec
push
lret
pop
sbb
add
sub
pop
pushf
aam
ffreep
ret
call
mov
fnstsw
scas
popf
clc
sub
xchg
sub
sbb
cwtl
xchg
inc
popa
add
jle
pop
xor
cmp
xchg
pusha
xor
pop
mov
setae
add
in
nop
test
aam
xchg
dec
lahf
xchg
popf
test
test
dec
sbb
or
push
ljmp
bound
sbb
dec
aaa
and
ja
aad
dec
adc
daa
or
push
repnz
jle
fs
lcall
dec
out
add
or
cmp
dec
add
jne
mul
mov
sbb
out
push
push
dec
jns
ss
in
mov
fsubp
sbb
lods
sub
mov
andl
aas
shlb
rorl
dec
push
sbb
out
jle
pusha
bound
inc
xchg
cwtl
mov
xchg
outsb
push
mov
lods
inc
lds
das
movsl
jo
and
enter
jg
cwtl
push
stos
adc
xchg
dec
insb
push
imul
cmpsl
scas
xor
pop
push
xchg
xchg
ds
cmp
iret
mov
ret
cmp
fwait
in
mov
ja
cmp
or
xchg
and
into
fidivl
rcll
call
push
dec
ficoms
cvttps2pi
cwtl
sahf
jl
popf
or
mov
lcall
hlt
dec
adc
jbe
jge
jge
xor
sbb
int
call
mov
add
ror
dec
xchg
xor
cmpb
call
inc
insl
jo
in
or
push
add
movsb
lods
call
cmpsb
sbb
sbb
enter
daa
xchg
je
adc
mov
mov
ds
mov
shrl
and
adc
insl
inc
xor
adcl
pop
dec
into
sbb
push
inc
pop
dec
jnp
push
and
loope
adc
sub
inc
lret
cmp
iret
fldt
cld
sbb
or
aas
pop
mov
or
or
dec
add
xor
jae
push
adc
int
xchg
inc
sub
in
pop
ds
add
xor
jo
jb
call
sahf
sbb
icebp
test
hlt
xchg
fistl
mov
outsl
mov
add
leave
and
cmc
and
cmp
in
fdivs
insl
divl
sbb
sarl
mov
lds
sbb
adc
cmc
xchg
mov
xor
pop
dec
outsl
jbe
mul
scas
mov
stc
pop
cwtl
in
fs
mov
std
dec
ds
xor
ret
sub
aam
cli
inc
mov
in
stos
cmp
fidivl
pop
pop
sub
out
aam
das
ds
push
push
inc
adc
mov
adc
push
lret
loopne
xchg
adc
xchg
ja
xlat
aaa
adc
sub
cs
mov
or
mov
cs
add
mov
aaa
nop
arpl
and
fldcw
inc
mov
xchg
mov
jo
ss
adc
call
cmp
mov
lcall
in
pop
gs
inc
fcoml
inc
stos
mov
and
push
jb
pusha
lock
pop
xchg
aas
je
inc
clc
jecxz
in
not
xor
out
mov
mov
pop
out
add
or
dec
inc
mov
fcomi
sbb
mov
adc
lock
xor
das
push
loopne
mov
test
ljmp
jo
es
pop
insl
mov
jnp
cmpsl
aad
mov
cli
sbb
lret
sti
xchg
in
mov
push
enter
mov
pop
and
pop
insb
sub
test
ret
ja
notl
sub
frstor
dec
clc
gs
sub
or
adc
lods
enter
in
out
popf
cld
dec
xchg
cmpsl
pusha
sbb
pop
pop
pslld
push
add
mov
shrl
xchg
test
jge
scas
sbb
xchg
pop
dec
lods
daa
stos
push
and
out
icebp
dec
add
xchg
xchg
mov
xor
cmp
xor
clc
xchg
mov
shll
pop
push
fwait
emms
pop
lea
loop
sahf
inc
or
sbb
fwait
mov
and
jne
adc
mov
and
lret
push
imul
mov
push
leave
sbb
lahf
push
out
sti
lods
adc
addr16
push
mov
fnstcw
lds
lock
push
fxam
divb
cmpsb
jle
xchg
imul
repz
xchg
cmp
cmpl
pop
push
repnz
in
xchg
and
push
xlat
fisubs
stos
mov
insb
ret
jnp
push
sbb
fstps
adc
addr16
iret
jmp
add
push
mov
mov
xchg
aaa
mov
aas
sub
adc
repnz
std
inc
or
imul
lret
inc
int3
imul
fadd
pop
fs
mov
in
insl
repz
pop
fsubl
arpl
adcb
arpl
sbb
push
aaa
cmpsl
loop
or
xor
add
in
int3
aaa
mov
pop
push
lret
dec
and
mov
loop
std
mov
nop
cmp
xor
dec
xchg
xchg
outsl
popf
enter
daa
aad
lods
cmp
sti
jno
shlb
dec
mov
adc
rcrl
movsl
fdivrs
and
fnsave
lahf
or
jnp
test
dec
cmp
mov
ret
pop
jne
or
cmp
push
jl
loope
jbe
std
ret
aaa
cmp
jle
dec
popf
js
out
and
and
sbb
inc
add
cmp
xor
out
int
mov
pop
mov
cmp
fcompl
into
cmp
and
sub
stos
shlb
fdivs
mov
dec
dec
je
pop
movsb
ret
xchg
cmp
xor
divl
into
lret
or
mov
popa
repz
xor
cmc
pop
add
xor
dec
outsl
push
cli
fwait
loop
enter
push
jns
int3
pop
jmp
dec
orb
outsb
adc
mov
sub
nop
cli
je
push
xor
push
jnp
in
gs
lret
pop
jne
cmpsb
adc
dec
imul
xchg
sbb
xchg
shl
scas
sbb
mov
dec
xlat
jbe
mov
inc
ja
mov
ja
xchg
sti
out
repz
xchg
nop
ds
mov
fnstenv
sub
lds
repz
stc
cmp
lea
inc
pop
call
mov
clc
push
adc
ficomps
push
or
push
fldl
mov
inc
frstpm(287
aas
rcl
jb
or
je
outsb
mul
mov
jno
std
imul
mov
inc
leave
mov
pop
daa
adcl
fisttps
mov
cmp
popa
dec
das
in
sbb
mov
shld
bound
insl
mov
dec
fiaddl
aam
std
mov
shrl
lret
push
sbb
and
adc
pop
sbb
test
sub
dec
xor
xor
mov
push
and
or
clc
mov
dec
out
jle
and
mov
mov
add
out
bnd
sqrtps
movb
sbb
cltd
fiadds
lahf
mov
repnz
insl
jbe
test
push
sbb
rol
inc
shll
into
stos
inc
aaa
das
push
xchg
mov
or
lods
sub
xor
adc
xchg
sbb
xor
xor
ret
mov
add
pop
adc
ja
aam
dec
aad
test
or
sahf
mov
dec
adc
nop
scas
mov
inc
xor
bound
mov
in
inc
push
jae
mov
sub
cmpsb
add
xor
popa
jp
dec
cmp
lock
es
pop
jle
ret
sub
std
push
movsl
pusha
cwtl
pop
mov
xchg
ds
jmp
add
mov
mov
fistps
iret
js
push
push
xlat
stc
stos
sti
mov
adc
hlt
jnp
mov
andnps
xchg
lods
cmpsl
dec
dec
pop
sahf
ret
adc
inc
lret
dec
pusha
jae
jns
inc
mov
ljmp
jl
aad
sbb
xchg
ds
add
ficomps
pop
lds
stos
jge
nop
add
repnz
das
sub
shll
hlt
in
mov
inc
cltd
inc
jbe
cld
cmp
sbb
in
jae
dec
and
repnz
addl
and
xchg
push
scas
frstor
nopl
fdiv
adc
nop
addb
mov
mull
push
movsl
cmpsb
and
xchg
les
daa
aam
outsb
cmp
mov
rdtsc
jl
lret
fmull
mov
testb
repz
pop
stc
xlat
lahf
sub
adc
jecxz
test
pop
cmp
inc
into
mov
pop
pushf
mov
ds
pop
sub
loope
sahf
mov
push
dec
hlt
outsb
xor
add
ret
popl
ret
pushf
sbb
mov
cs
mov
push
pop
cs
mov
ret
push
pop
cmp
or
loopne
mov
enter
cmp
pusha
sahf
jb
test
or
fdivrs
mov
xlat
xor
cwtl
mov
and
test
cmpsb
sbb
cmp
in
cmpsb
and
xor
mov
shll
ficompl
jmp
inc
in
cmc
and
add
ss
loop
adc
fs
subb
fs
movsb
mov
mov
adc
cmpsl
mov
push
cmp
adc
or
xchg
sahf
mov
add
int3
loopne
jmp
pop
xchg
jnp
adc
movsl
xlat
imul
es
add
mov
xchg
mov
sbb
in
lcall
mov
test
in
loop
pop
sti
xchg
jg
cs
cmc
sbb
inc
inc
mov
dec
clc
les
add
fldenv
adc
repz
cmp
mov
lcall
cmp
pop
jbe
cltd
adc
xchg
pushf
pushf
xchg
push
sub
mov
stos
add
inc
ljmp
aas
pusha
in
mov
jecxz
dec
or
ljmp
push
and
std
adc
fwait
mov
icebp
or
subl
fmull
aaa
mov
inc
jp
mov
push
stos
mov
push
mov
pop
rorl
inc
jl
in
pop
insl
outsl
jp
dec
ret
cmpsl
sarl
mov
test
xor
jo
xor
fldcw
mov
arpl
pop
cmp
lods
sarb
sub
mov
push
ret
xchg
int3
into
push
out
jmp
es
mov
and
out
arpl
loopne
xor
in
cmpxchg
lods
cltd
adc
cmpl
aam
scas
test
cwtl
jecxz
jnp
sbb
pop
ljmp
pop
sub
xor
roll
shl
jmp
or
xor
pop
or
popf
and
mov
inc
shl
mov
lret
hlt
mov
dec
enter
repz
dec
or
clc
mov
dec
clc
inc
stos
jne
jae
mov
jae
out
mov
stos
mov
in
adc
xchg
ret
out
jg
sub
mov
jmp
jp
fcoml
fs
sbb
sahf
jle
fs
in
push
push
pusha
xor
fbld
cmpsl
imul
jp
xchg
iret
mov
pop
inc
mov
popf
cltd
cmp
push
push
push
scas
stos
outsb
xchg
sub
cs
es
lock
pop
push
and
xchg
and
cmpsl
std
push
ret
pop
pop
ret
ljmp
xor
js
mov
sub
push
sti
aaa
sbb
iret
mov
mov
imul
rcr
push
in
lds
xchg
loop
das
cwtl
xchg
repnz
and
leave
dec
setno
xor
or
sti
mov
jge
insb
repnz
cmp
add
sub
pop
pop
in
hlt
ret
fs
pop
or
push
pop
scas
mov
xor
fistps
add
mov
xor
jno
jo
jl
jo
dec
xchg
cmp
sbb
icebp
movsl
out
jns
cli
sub
push
out
mov
aas
adc
push
loop
clc
inc
pop
stos
aaa
dec
xlat
pop
ret
cmp
jns
xor
add
dec
mul
push
cltd
jno
roll
cmp
stos
nop
outsb
xchg
push
fsts
popf
push
mov
fnstsw
sbb
inc
xorb
jnp
push
pop
jmp
mov
rolb
ror
lcall
or
jae
mov
sahf
add
cmpsb
lahf
adcb
jg
push
pushl
cmp
and
xchg
ss
ficoms
test
div
ja
lret
nop
sarl
lcall
mov
imul
and
pop
outsl
adc
loop
adc
jg
int3
fs
fcoms
ljmp
lods
cmp
mov
mov
or
fisubrl
gs
ljmp
rcl
gs
mov
pop
mov
in
sti
int
imul
or
add
lock
into
arpl
hlt
ret
sub
in
dec
push
cmpsb
sti
inc
adc
cs
pop
pop
aad
add
nop
hlt
lods
mov
push
outsb
test
or
lock
fistl
mov
fwait
fwait
ret
add
call
mov
mov
adc
fs
jmp
andb
dec
fldl
inc
cld
mov
aas
incl
jb
repnz
test
lret
mov
adc
cltd
dec
std
mov
into
mov
mov
xor
add
pop
inc
fildl
mov
and
pop
mov
das
stos
xchg
and
int
mov
rcrl
dec
es
mov
dec
mov
dec
outsl
mov
jg
cmpsb
cld
fwait
rorl
mov
push
adc
inc
test
pop
pop
and
rorb
iret
sub
shl
ret
and
push
push
stos
push
stos
fst
ljmp
and
ss
adc
out
out
xor
mov
mov
movntq
add
mov
dec
movsl
cli
test
and
xchg
mov
test
jb
xchg
xor
shll
inc
pop
dec
mov
stos
push
inc
or
xlat
fldenv
repz
mov
xor
ret
je
or
mov
pop
inc
mov
xchg
and
push
lock
dec
mov
cmpsb
in
or
es
fwait
das
and
adc
mov
fucomi
adcb
mov
dec
jns
shrl
cmpsl
xor
xchg
adc
sub
pushf
inc
push
xor
hlt
and
aad
popf
mov
add
popf
jle
stc
dec
in
mov
cmpsb
filds
popa
xchg
in
vpsubusb
xchg
lcall
push
cmp
dec
mov
xchg
push
xor
inc
adc
xor
out
scas
mov
or
adc
cmp
push
loopne
ret
int
cli
divl
loope
out
add
dec
inc
rcrl
mov
jg
andl
fiaddl
jp
sbb
cmp
mov
lahf
movsl
mov
mov
adc
or
test
leave
mov
add
arpl
icebp
jbe
dec
loop
lea
sbb
insb
aaa
in
dec
or
sti
stos
add
sub
pop
sbb
jnp
pop
imul
js
and
add
push
add
outsb
dec
in
dec
movb
outsl
dec
daa
rol
dec
cmp
shll
xor
inc
dec
add
outsb
movsl
in
or
and
mov
push
mov
negb
lods
das
push
inc
in
fmul
or
lock
ljmp
pop
inc
call
add
push
sbb
inc
and
test
test
cmp
js
and
lock
call
inc
pusha
xor
push
in
push
bound
and
outsb
mov
sub
dec
pop
cmp
lcall
enter
pusha
sub
jecxz
sahf
test
dec
test
xchg
xor
xor
pop
adc
mov
jle
and
movsl
mov
fsubs
xlat
divl
sbb
aad
repz
sub
sbb
sti
into
dec
cmp
cmc
mov
push
xor
outsl
repnz
push
stc
imul
popf
adc
mov
fildll
sbb
gs
or
insb
mov
xchg
lock
push
in
sti
psllq
pop
shrb
mov
aam
aaa
adc
inc
mov
xor
xchg
sbb
push
sbb
arpl
cli
sub
sub
and
hlt
push
jno,pn
lods
aad
sub
iret
push
ljmp
inc
push
fsts
push
repz
cmp
inc
mov
call
cmp
lds
jecxz
adc
shr
jno
pop
pop
icebp
stos
cmp
dec
and
inc
sub
sahf
and
dec
sti
inc
or
push
jecxz
insl
std
neg
out
std
pusha
lret
mov
add
ret
sarb
shrl
fmuls
ja
mov
rorl
addb
lock
outsb
das
mov
loope
jg
push
test
shrl
es
sbb
jl
dec
mov
popf
ret
jg
icebp
push
add
mov
mov
jno
cwtl
mov
jp
jp
and
mov
mov
aam
mov
xor
lcall
push
fstl
xlat
and
cmp
outsl
xchg
out
sub
dec
push
mov
outsb
dec
roll
cli
push
or
leave
test
xchg
cmp
js
test
fnstsw
xchg
mov
jmp
stos
mov
stos
or
fs
jp
pop
add
pop
adc
rorl
add
lea
push
in
mov
int
iret
mov
inc
sahf
shlb
les
scas
subb
fcompl
sub
fwait
pop
out
dec
mov
and
popa
popf
bound
adc
mov
adcb
jp
sub
xchg
xor
aam
daa
pop
lock
adcb
std
mov
jle
cmpb
test
pusha
imul
pop
xchg
mov
xor
iret
adc
xchg
add
xorl
push
sahf
xor
xor
push
rcl
outsl
stos
push
pop
sub
pop
popl
outsb
jno
jnp
mov
dec
push
cmc
pusha
arpl
cmp
gs
xchg
pop
xor
sbb
rcl
mov
or
stc
test
fidivl
aas
pushf
sbb
sub
jmp
in
jecxz
cmp
shlb
mov
cmp
in
hlt
push
scas
arpl
shlb
pop
add
push
movsl
sbb
std
pop
aaa
mov
push
popa
add
pop
adc
pop
dec
adc
xor
and
add
dec
xor
cmp
xor
lea
cmpsb
lods
add
in
xor
adc
rcr
dec
cmp
lahf
jno
sahf
adc
fisttpl
jecxz
ds
mov
popf
and
enter
jle
mov
test
js
mov
into
push
pop
adc
js
fwait
pop
orl
loope
sti
and
adc
mov
cmp
push
inc
lret
popf
or
add
jbe
dec
fwait
repz
je
push
gs
push
sub
lcall
in
pop
fmul
inc
mov
add
add
ret
orb
push
scas
jp
mov
and
xchg
xlat
cmp
push
movsl
or
jb
dec
lret
jno
insb
and
mov
adc
das
sub
xor
xchg
add
loop
es
in
mov
sub
mov
popf
lods
or
push
adc
jg
mov
pop
cli
inc
mov
sub
or
jecxz
gs
outsb
loopne
add
push
adc
add
add
mov
and
xlat
jb
nop
sub
mov
int3
in
and
jle
mov
clc
cmp
sbb
lcall
lods
aaa
icebp
adc
movsb
movb
iret
roll
call
mov
out
in
adc
scas
js
xchg
pop
addr16
mov
jb
jg
pop
inc
xor
insl
aas
cmp
lods
lea
dec
je
push
push
jecxz
stc
push
negb
not
std
pop
sti
or
orb
mov
fimuls
xor
dec
popa
fndisi(8087
xchg
rorl
dec
divb
int
fsubrl
imul
mov
cmp
shll
outsb
fcomps
mov
push
cmpsl
shlb
lods
add
rolb
imul
lock
lea
cltd
loopne
shl
out
sub
jmp
inc
ds
push
xor
frstor
sub
mov
mov
dec
sub
lea
jp
fisubrs
cmpl
or
push
inc
leave
dec
bswap
mov
add
pop
add
pop
loop
data16
or
popa
test
loopne
xchg
jle
sbb
ret
pop
lahf
xchg
and
sbb
cmp
add
inc
dec
incl
aaa
xor
aam
jo
xchg
xor
jb
mov
adc
mov
pop
cld
sarb
rcrb
pop
dec
mov
xor
xor
mov
jae
mov
cmpb
inc
out
xlat
mov
in
jne
xchg
scas
inc
icebp
out
cmpsb
xchg
sub
xchg
xor
pop
into
push
mov
inc
inc
mov
loop
fwait
jle
add
in
mov
pusha
add
dec
filds
xchg
jb
push
mov
addl
push
push
sar
popf
push
addb
mov
loopne
stos
push
cmp
jae
mov
jnp
sbb
leave
push
cmp
mov
iret
les
loop
push
stos
mov
sub
pop
ljmp
loopne
inc
js
sub
xchg
xchg
cmp
imul
mov
sahf
sarb
jmp
or
mov
mov
leave
lods
test
pop
arpl
imul
aaa
bound
pop
or
test
mov
jns
lahf
push
cmp
jo,pt
outsb
sub
and
jl
cmp
jge
push
mov
or
je
enter
daa
shlb
cmp
or
jl
push
push
dec
mov
xorb
sti
mov
and
das
arpl
pop
mov
test
inc
jne
inc
or
inc
xchg
bound
sub
pop
ret
push
shll
cwtl
hlt
sub
mov
cmp
insb
out
mov
pop
je
cs
xor
cld
jmp
adcb
sbb
dec
add
inc
ljmp
shlb
cmp
sub
jns
pop
cmp
jne
or
fdivl
sub
les
out
std
lock
mov
andb
sub
mov
adc
mov
cwtl
loop
movsb
idiv
ss
mov
fldenv
adc
xor
inc
add
mov
test
notl
into
adc
jge
ds
xlat
xor
mov
loop
inc
stos
stc
movsb
lods
out
sbbl
xlat
nop
aad
jo
std
lods
icebp
icebp
aas
mov
mov
push
cli
jae
movsb
xor
repz
cmp
insl
pop
or
push
test
gs
xor
sti
adc
imul
mov
add
xchg
mov
fistpll
mov
int3
sub
imul
data16
aaa
aaa
cmp
pop
lahf
inc
nop
test
ja
je
int3
inc
sti
dec
cmp
and
cld
adc
repz
test
ss
call
aaa
jnp
pop
inc
scas
aam
xor
xlat
jmp
add
pop
aaa
and
push
mov
cltd
aas
fsubl
jb
pop
mov
je
and
mulb
xor
scas
cwtl
sub
mov
les
orl
xor
mov
fiadds
sub
sub
dec
jno
mov
repnz
xchg
int3
test
dec
push
arpl
icebp
lcall
scas
popa
imul
add
push
cld
sbb
push
lret
xchg
inc
sti
mov
jg
mov
mov
cmp
mov
cmp
push
xrelease
clc
mov
stos
ljmp
lods
dec
mov
out
out
adc
xchg
push
stos
mov
sbb
mov
sub
and
and
inc
test
fld
mov
loop
xchg
sub
inc
mov
jne
push
xchg
push
sbb
mov
addr16
ret
pop
dec
fcoml
push
rclb
mov
dec
add
sar
mov
mov
inc
xor
push
add
push
pushf
inc
mov
mov
ja
notl
inc
dec
mov
or
test
fwait
mov
repz
jne
out
mov
add
out
pop
xor
jmp
andb
xchg
out
inc
out
inc
pop
sub
lea
mov
mov
sub
mov
push
jb
jle
jno
in
inc
and
xor
and
mov
lds
adcl
or
mov
push
insb
loop
cmp
and
cmpsb
push
jnp
pop
sub
cmpl
adc
adc
ret
out
lahf
mul
inc
add
jo
addl
adc
push
notl
ficompl
xor
sbb
scas
mov
fimuls
cmp
rcrb
mov
filds
mov
hlt
pop
jmp
pop
jbe
es
jge
das
jae
xchg
aaa
and
cltd
or
jo
int3
mov
inc
and
sbb
loop
jo
hlt
adc
outsl
std
sarb
dec
pop
arpl
lds
in
and
daa
iret
mov
jp
sub
pop
mov
push
dec
dec
pushf
das
movsl
and
movsl
add
and
repnz
pop
adc
test
push
push
gs
cltd
cld
or
push
into
xchg
lock
js
les
add
xor
fs
in
add
jg
in
cmp
outsb
es
or
pop
pop
test
lea
hlt
xor
and
mov
fmul
pop
mov
cmp
sub
push
xchg
pop
mov
pop
into
sbb
jecxz
or
xchg
ljmp
rcr
jg
fcoml
mov
movsb
xor
mov
jno
cmc
xlat
out
cmp
xchg
xor
lret
xor
lcall
sbb
mov
cmc
add
mov
popf
shl
mov
fwait
stc
pop
inc
mov
adc
pusha
data16
lods
fcoms
add
cli
cmpsb
data16
in
mov
or
lds
insb
jp
pop
das
pushf
jge
inc
jns
imul
pop
mov
sbb
adc
fcmovbe
lock
sub
in
cld
mov
stc
pop
popf
sti
add
mov
lcall
nop
pusha
in
das
dec
rcll
pop
inc
push
and
les
push
pop
dec
ljmp
mov
inc
mov
fwait
pop
cmc
and
pushf
ljmp
pop
fcmove
and
lea
aas
jnp
mov
or
das
dec
pusha
inc
and
inc
jecxz
fisubs
movsl
jo
std
push
or
add
sti
mov
sub
fstpt
mov
mov
or
comiss
ret
cmp
sub
push
push
rcrl
rcr
insl
repnz
out
dec
test
scas
gs
sbb
add
mov
ss
les
mov
cmp
rcrb
jg
aam
add
sbb
das
stos
fnsave
ret
imul
sub
ljmp
imull
mov
pop
xchg
cwtl
xchg
inc
push
negl
imul
xchg
cwtl
add
dec
cltd
sub
pop
mov
stos
push
xchg
dec
xlat
jle
test
lahf
xor
add
test
pop
cmc
hlt
inc
stos
ficoml
jns
movaps
add
pop
incl
js
cmpsl
test
xor
mov
mov
mov
mov
jb
outsb
ja
push
aam
xchg
inc
out
add
and
rorl
mov
shr
incb
bound
mov
in
push
ret
xchg
dec
loope
out
pop
add
or
addl
rorb
xor
xchg
mov
rolb
in
aaa
nop
pusha
cmp
fistpll
mov
jmp
and
stc
push
inc
or
popf
pop
js
mov
nop
jl
stos
lods
push
push
mov
movsb
jnp
gs
scas
dec
mov
pop
adc
lret
adcb
pop
xchg
push
inc
or
cwtl
out
inc
int
and
push
leave
adc
imul
fimull
mov
xor
negl
jl
imul
lret
mov
fnstsw
xor
aas
leave
fwait
inc
lock
cmpsl
xor
arpl
push
enter
pushf
sbb
push
aaa
loopne
fisttpll
movsb
xchg
in
pop
lret
int3
movsb
das
pop
xlat
add
add
xor
xor
loop
add
iret
movsb
xchg
mov
and
in
mov
daa
into
das
mov
jno
jo
jl
adc
ds
or
popa
and
inc
daa
lahf
out
loop
add
out
and
add
pop
scas
sub
pop
popa
js
mov
pop
inc
xchg
daa
push
lods
ljmp
jge
cmp
shrb
adc
mov
in
push
mov
sbb
add
xchg
shll
imul
int
adc
sub
int3
pop
pop
and
fcmovne
sbb
adc
in
shlb
in
test
add
sbb
lea
enter
icebp
mov
jle
mov
add
and
rcrl
jae
ret
xlat
dec
imull
pop
shll
and
sbb
adc
into
fsubs
xchg
xor
sub
loop
pmulhw
adc
fs
aas
outsb
adc
pop
data16
popa
lods
mov
xor
cli
push
xor
xchg
fwait
or
jne
jo
jge
sub
mov
pop
sarl
adc
cmpsb
mov
adc
jne
add
xchg
sub
test
dec
jp
xlat
das
lock
in
mov
fs
mov
cs
cmp
in
movsl
adcb
or
inc
and
pusha
fyl2x
and
adc
lock
fimuls
dec
inc
mov
add
or
sub
pop
xor
dec
jbe
loopne
negb
aam
pop
jge
cld
inc
adc
mov
aas
sbb
dec
xlat
xor
je
mov
xor
fisttpl
cld
in
cwtl
sahf
ja
mov
lds
mov
std
and
dec
fldt
xor
mov
das
add
fisubs
xor
push
pop
xchg
pusha
jbe
and
pop
not
call
jnp
insl
fldcw
pushf
dec
movsb
mov
lahf
mov
mov
push
cld
jb
jne
jae
push
mov
fdivs
dec
je
pop
negb
inc
shrb
test
mov
cli
aam
and
ret
out
adc
fstpl
cmpsl
mov
ljmp
adc
mov
mov
mov
shlb
pminsw
aad
inc
sub
pop
ss
cmc
jge
mov
mov
movsl
dec
ds
mov
jne
pusha
sbb
add
mov
dec
imul
xchg
mov
add
sahf
jmp
pop
insb
xor
cltd
or
pop
or
adc
mov
fnstcw
sarl
sub
cmp
dec
jp
xor
jge
sbb
fwait
sbb
outsb
jne
divl
out
fstp
bound
sbb
in
int
xchg
pushf
push
mul
mov
lret
pushf
movsb
or
pusha
jp
adc
mov
das
pop
movsl
jle
das
dec
in
nop
out
jg
xchg
add
or
xchg
xchg
fxch
xorl
sbb
insb
std
mov
adc
and
sub
or
stc
scas
scas
fisubrs
push
adc
adc
loope
jge
stos
loopne
pop
or
mov
fwait
inc
sarb
fmuls
ljmp
fiaddl
and
xchg
mov
fisubrl
jecxz
fmulp
xchg
jle
push
mov
lods
mov
test
iret
leave
adc
repz
repnz
arpl
std
iret
jge
call
cli
aaa
lahf
cwtl
sbb
xchg
lods
iret
add
vcvttps2dq
xchg
push
jecxz
xor
mov
push
xchg
lcall
and
nop
push
xchg
cmpsb
mov
es
mov
push
cmpl
xchg
das
jno
test
mov
sub
ds
in
adc
push
and
lock
fsubrs
test
movsb
push
insl
inc
mov
pop
fiaddl
push
pop
lods
and
js
cmp
pop
jg
xchg
push
cmpsl
shl
outsl
popf
sub
lahf
lods
cmp
sub
adc
mov
inc
jns
dec
or
sbb
mov
add
and
mov
sub
pop
mov
push
inc
repz
sub
push
jbe
xlat
lahf
arpl
negl
dec
jg
mov
clc
mov
mov
and
mov
jnp
jg
sbb
loope
outsb
sahf
xor
repz
xchg
mov
jp
xor
into
mov
jp
xor
scas
outsl
dec
dec
loop
les
fs
add
lret
stc
das
lods
cmpsb
pushf
mov
int
out
jp
cli
or
or
je
xchg
cmp
gs
or
sar
ja
xor
loopne
aas
mov
adc
push
inc
imul
rcrb
pop
leave
cmpsb
cmp
or
sub
or
mov
iret
jo
sti
pop
popf
jg
pusha
stos
mov
nop
push
test
dec
xchg
add
inc
xor
loope
sub
repz
mov
push
push
or
call
mov
dec
pop
pop
es
adc
jo
pushf
inc
ds
fs
and
push
inc
fwait
pop
filds
and
aas
mov
xchg
cltd
dec
dec
movl
jecxz
rorb
std
mov
push
jo
jle
jne
nop
mov
add
cmc
fistpl
lods
xor
cmp
dec
das
in
leave
mov
pop
jle
and
mov
lea
jp
dec
insl
rclb
cmpsl
int3
clc
jmp
icebp
mov
scas
cld
popf
mov
lret
loop
sub
and
jmp
lea
sub
xchg
and
jle
das
push
cmp
or
sarb
js
pusha
xchg
sahf
xchg
xor
push
dec
pop
popa
jmp
pop
into
mov
sbb
xchg
es
dec
push
lods
mov
leave
add
enter
cmp
add
les
jb
mov
movsl
mov
cmpsl
xchg
inc
movsb
sbb
mov
insb
out
or
stos
mov
gs
add
test
xor
or
out
jns
fsubrs
mov
xor
xor
arpl
dec
insl
xchg
std
inc
adc
cmp
fwait
dec
sub
sub
xchg
pusha
mov
std
and
mov
xchg
push
jns
dec
jns
jmp
sub
sub
jle
jns
sub
int
es
xchg
mov
mov
mov
movsl
jl
in
dec
je
jo
mov
cld
mov
xchg
dec
jg
mov
loope
addl
push
int
or
cmpsl
repnz
push
sub
iret
or
fnstcw
mov
loope
pop
icebp
adc
in
ret
and
mov
sub
pop
jbe
ror
fisttpl
gs
cmova
fidivl
xchg
sbb
xchg
stc
imul
ret
inc
dec
mov
fmuls
mov
cmp
sbb
jbe
push
or
sbb
pop
and
mov
loopne
jp
sub
push
mov
xor
out
imull
sub
jg
lods
inc
pushf
push
fistps
cmpsb
cmp
inc
enter
daa
int3
std
push
cmp
aas
js
jne
enter
jno
lcall
movsl
pop
mov
and
cmpsb
aas
lahf
and
das
push
stos
jno
test
outsl
lock
inc
inc
test
popf
leave
cmp
adc
js
push
mov
mov
push
call
sub
xchg
cs
into
test
insb
adc
lcall
andb
sbb
dec
lock
xor
mov
int
sbb
pop
xor
out
inc
loope
push
cwtl
hlt
out
and
in
sub
push
into
adcb
cmp
mov
lcall
lock
in
mov
sbb
fadd
faddl
imull
das
popf
rcrl
mov
add
popa
cmp
into
sahf
jl
xor
movsl
shl
scas
inc
stc
sbb
fs
je
adc
lretw
in
lods
loope
mov
cli
sti
out
add
cli
aas
add
dec
mov
cmp
or
or
test
mov
pusha
cmp
cs
mov
imul
fsubrs
xchg
scas
sub
or
lds
lods
data16
dec
cmpsl
mov
cmp
sti
push
out
ret
mov
mov
icebp
insl
bound
add
pop
jmp
les
pop
jno
inc
mov
lret
adc
and
sbb
xor
scas
pop
push
mov
adc
sbb
fstpl
andb
mov
and
dec
lds
push
jecxz
es
mov
imulb
leave
std
dec
dec
cmp
mov
xlat
lea
in
hlt
dec
jo
cmp
sub
cs
test
das
int3
cmc
mov
into
sub
repnz
roll
sub
insl
cmpsl
loope
dec
lcall
mov
pusha
adcb
mov
mov
fwait
add
mov
xor
cmp
adc
fsubrl
jl
aam
pop
add
or
fcomp
fucom
fimuls
fstl
cltd
popa
add
lods
cmc
ds
lcall
xchg
insl
stos
cmpsb
push
mov
adc
add
cltd
int
rolb
lock
das
dec
or
lock
xchg
sahf
xchg
out
sbb
pop
pop
divb
jl
cmpsl
adc
movsb
cli
xor
mov
inc
test
mull
xor
and
mov
pop
movsl
sti
mov
mov
mov
pusha
mov
inc
stos
adc
or
xchg
sub
adc
fnstenv
cltd
mov
out
fwait
xchg
bound
jns
push
sub
je
rcll
dec
bound
jns
mov
sub
aaa
jp
movb
xor
mov
mov
lret
call
sub
cltd
inc
fsts
popf
and
nop
mov
popf
rcrl
call
push
dec
push
cltd
scas
and
pop
gs
lock
jnp
push
test
lahf
mov
pop
iret
lahf
addb
jnp
xchg
inc
cs
cli
jae
mov
pop
or
loopne
sbb
fisubl
test
sbb
fisttpll
ficoms
and
gs
lock
push
repnz
int3
leave
add
hlt
mov
fldenv
fwait
into
jbe
mov
bound
jb
jecxz
sbb
adc
mov
jmp
pop
fs
dec
push
test
stc
dec
jo
mov
and
jge
movsb
aaa
xchg
shll
dec
in
lcall
daa
lret
sub
cmp
das
jno
xchg
pop
popa
jl
or
les
xor
push
scas
ljmp
push
push
jle
sbb
mull
dec
push
cmp
push
inc
aad
xchg
pusha
add
aam
push
add
cwtl
push
mov
push
sub
cmp
mov
lods
lret
xchg
adc
jne
xchg
xlat
inc
xorb
sbb
lcall
rcrl
aas
repnz
sub
dec
and
hlt
ja
push
out
sbb
sub
and
pusha
subb
adc
jle
dec
mov
sbb
and
out
fidivs
add
or
cmpb
lret
push
shl
pop
mov
mov
nop
imul
into
xorl
in
or
mov
cmp
pushf
decw
jecxz
je
icebp
mov
mov
cli
jb
xor
cmp
mov
fyl2xp1
inc
gs
test
fcoms
stos
fs
xchg
fs
imul
xor
xchg
jno
inc
sbb
add
mov
sub
testl
in
movsl
sbb
cs
fwait
nop
int3
imul
add
inc
pop
jns
fsts
cld
pop
repz
push
adc
lea
xlat
call
mov
or
stc
inc
adc
test
pushf
xchg
rorl
jmp
iret
ljmp
mov
inc
aam
push
aas
negl
jb
mov
mov
cs
push
divb
shl
cwtl
iret
int3
cltd
mov
and
or
jl
outsl
dec
pop
imulb
sti
movsb
push
mov
in
jmp
out
mov
das
mov
and
mov
jge
stos
rcl
cmpsl
ret
xorb
insl
mov
push
cmpsl
lret
mov
aaa
adc
aad
rorb
mov
mov
inc
mov
push
jnp
shl
fisubrs
outsl
add
pop
jns
ret
pushf
dec
adc
dec
mov
push
and
clc
out
shll
xchg
sbb
mov
cld
popa
pop
std
lods
pusha
repnz
mov
fimuls
jns
arpl
lcall
xlat
insb
test
push
mov
jbe
xchg
push
dec
jae
repnz
or
sbb
into
xchg
pop
mov
sbb
push
out
ficomps
mov
add
rcl
dec
popa
mov
xor
cmpsb
cli
mov
mov
sub
pop
and
xor
mov
inc
inc
inc
inc
or
gs
cmpsl
sahf
xor
repz
add
mov
mov
out
jp
jno
dec
into
mov
xchg
jno
lcall
scas
xchg
mov
out
das
xchg
sub
je
mov
jp
lods
les
sahf
iret
or
jmp
inc
in
repz
pusha
cmpsb
push
and
cmp
xchg
nop
pop
pop
xchg
repnz
leave
andl
push
push
sahf
mov
clc
sbb
mov
mov
subl
aad
insb
pop
test
jnp
and
scas
xlat
notl
out
push
adc
jb
iret
incb
dec
pop
mov
jne
cmp
jne
fnstcw
xchg
or
pop
imul
jb
jmp
sbb
xchg
nop
lea
imul
fidivs
test
shl
mov
xchg
jb
jle
cltd
leave
ja
and
shll
jbe
movsb
aad
lds
sbb
mov
movsl
add
xor
push
adc
pop
xchg
movsb
nop
push
mov
mov
push
jns
jo
sarb
pop
insb
and
call
movsb
ret
push
jge
jl
inc
ret
sbb
shll
lret
cmp
test
sub
jl
jns
dec
js
ds
mov
and
pop
sub
bound
add
sbb
xchg
cmp
ffree
and
jp
mov
pop
cmp
punpckhdq
shr
loope
sarl
sti
loope
and
mov
rclb
in
ss
call
sbb
and
int
jp
dec
int
scas
aaa
sub
bound
pop
xor
dec
lcall
fdivl
ja
mov
cmp
test
push
dec
orb
jg
lahf
mov
mov
pop
add
test
inc
out
cmp
cmp
imull
xlat
lcall
mov
mov
cmc
call
outsb
mov
push
inc
stc
out
rolb
vpsrlq
mov
push
data16
icebp
adc
out
movsb
psubd
ljmp
mov
outsb
cld
test
gs
mov
sub
and
adc
mov
mov
add
push
xor
mov
cmp
lahf
cmp
sub
mov
adc
mov
push
nop
cmpsl
jge
dec
scas
add
pusha
fxch
inc
cmp
ds
repz
dec
pop
cmp
sbb
inc
pop
je
inc
adc
je
inc
pop
sbb
jmp
push
xchg
imul
test
pop
push
je
shrl
jecxz
ds
div
adc
std
cwtl
aas
and
mov
xlat
jl
adc
dec
inc
and
mov
jo
mov
jge
das
adcb
mov
or
shll
sbb
insl
jne
or
cmpsl
leave
lds
icebp
push
int3
mov
push
xchg
pop
lret
das
adcl
test
mov
pop
jb
cltd
sarb
inc
dec
aam
out
ret
sub
inc
push
test
mov
xor
pusha
rcll
add
cs
inc
lods
lret
jns
mov
inc
jge
xchg
sti
add
ds
xor
popw
push
add
pushl
mov
xchg
mov
fiaddl
push
xchg
sub
shll
cmc
pop
dec
faddl
stos
test
xor
add
scas
pop
lcall
inc
xor
icebp
pushf
xor
jg
mov
in
cmp
pop
sbb
or
into
dec
inc
adc
inc
fstps
lock
jg
dec
adc
mov
lods
mov
fdivrl
mov
xchg
fcoms
lahf
sub
outsl
xchg
cmc
addr16
les
dec
dec
mov
in
mov
jmp
cli
jle
sbb
in
fsubrl
inc
cmp
xchg
dec
repz
xchg
xchg
mov
fdiv
push
push
and
lods
mov
lret
mov
in
mov
dec
insb
and
jnp
std
dec
scas
cmp
push
sub
mov
pop
mov
ret
mov
inc
lret
cs
jae
aad
inc
fcompl
mov
push
icebp
lock
fcmove
xor
out
sbb
in
aam
popa
inc
and
pop
jp
lds
outsb
sar
loope
gs
mov
leave
out
jge
hlt
push
xchg
movsb
arpl
imul
insb
or
aaa
fwait
shll
add
or
int3
cmp
and
xor
outsl
adc
xchg
jo
mov
pop
and
inc
icebp
cmp
or
push
int3
iret
ret
idivb
enter
daa
leave
adc
lods
jnp
jno
hlt
std
jl
xor
es
ja
sbb
sub
movsb
and
push
ljmp
sarl
in
mov
sarb
cmp
out
push
pop
dec
aaa
inc
js
sbb
mov
loope
and
sub
insl
je
shlb
adc
lahf
cwtl
mov
sub
xchg
dec
and
xlat
rolb
add
sbb
pop
sti
aaa
push
jge
ror
push
shrl
xchg
cmp
pop
mov
inc
lcall
das
fsubl
dec
sub
jle
arpl
test
sti
andb
jg
sahf
insl
mov
sbb
lahf
mov
lret
jbe
or
jns
cmp
idivb
jg
mov
jno
mov
dec
pop
sbb
mov
stos
cmc
scas
adc
jb
leave
sar
loop
mov
fsubl
insb
adc
shr
add
lods
inc
das
insl
mov
cld
stos
out
mov
or
sarb
or
mov
pop
dec
gs
push
mov
pop
jmp
xchg
loopne
sbbl
adc
adc
xchg
notl
jnp
mov
cmp
rcl
push
sub
cmpsb
mov
mov
jnp
cmpsb
sti
sbb
addr16
fwait
in
push
or
nop
andb
inc
sbbb
add
adc
dec
ds
mov
daa
pop
fimuls
pop
mov
call
mov
push
pop
daa
popf
adc
mov
jmp
dec
mov
lods
leave
lret
sahf
fwait
inc
or
cmp
sti
mov
dec
sub
inc
jecxz
ljmp
aas
nop
je
inc
xchg
xor
mov
subl
leave
dec
mov
dec
mov
mov
lock
test
das
popa
sti
push
mov
repz
and
incl
xchg
dec
mov
cmpsl
enter
inc
arpl
cld
dec
jmp
lret
sahf
mov
das
and
push
xor
pop
xchg
jns
rorb
mov
pusha
ret
mov
xchg
pop
fstpl
clc
adcb
fwait
out
loop
jnp
inc
ret
jmp
mov
movsb
arpl
sbb
pop
pextrw
nop
mov
movsl
loopne
cltd
jb
incl
hlt
in
xchg
inc
dec
inc
xchg
shrl
dec
bndldx
adc
pop
imul
je
je
jne
xor
push
popa
add
xor
cld
mov
decl
sub
xchg
mov
sub
dec
pop
aam
pop
ja
imul
inc
jo
pushf
or
jge
fwait
add
cwtl
lcall
mov
dec
bound
test
je
in
lcall
inc
push
mov
mov
cmp
push
pop
addr16
jp
xchg
add
hlt
adc
jle
cmp
in
sub
fistpll
ret
ds
jmp
mov
cmpl
push
fstps
dec
popf
inc
rorl
sub
or
push
and
imulb
mov
jae
popf
scas
popf
int3
pop
push
je
push
adc
mov
jne
or
pop
and
cmp
sbb
inc
fistpll
or
push
in
inc
jo
push
fiaddl
jp
sbb
mov
imul
fdivrp
push
stc
popf
rclb
fwait
mov
and
leave
gs
hlt
imul
fbstp
add
sbb
insb
aad
push
icebp
js
jbe
inc
int3
es
pop
icebp
mov
push
sbb
xor
push
shll
push
icebp
cld
and
cmp
jg
fmuls
push
sbb
xchg
cmpsb
inc
lahf
js
dec
lret
lock
daa
enter
fcomip
int
shl
cmpsb
jl
and
jg
lcall
and
sbb
push
negl
push
push
fwait
stos
inc
inc
addb
test
mov
js
mov
pop
mov
sbb
call
cmp
iret
outsb
xchg
rclb
push
int
hlt
int
scas
rclb
gs
xor
fimull
xchg
adc
or
hlt
popa
in
int3
les
sahf
push
adc
test
push
jecxz
jle
and
mov
pop
mov
and
mov
and
and
bound
lret
cmp
mov
or
sub
fwait
lret
mov
mov
test
sbb
push
sbb
jbe
pop
xor
mov
test
fnclex
mov
push
cmpsb
fs
adc
inc
data16
lods
sub
push
mov
jp
out
push
adc
or
xor
out
or
jecxz
gs
push
pushf
loopne
mov
pop
or
push
imul
addl
mov
stc
mov
xlat
test
and
in
out
jecxz
lret
cs
jp
aad
sbb
nop
pop
fisttpll
dec
insb
sbb
xchg
popf
cmp
cmp
mov
push
fucomp
repz
pusha
repnz
push
mov
daa
pop
imul
mov
xchg
in
jmp
scas
push
pop
dec
pop
cli
inc
sub
inc
and
sbb
jb
add
mov
push
pop
jecxz
fucompp
idivb
push
std
out
inc
cwtl
add
mov
sub
addl
push
fisttpl
adc
add
add
mov
stos
inc
xlat
and
jmp
std
es
cs
inc
cmc
or
dec
push
cmpsl
aaa
aaa
mov
mov
adc
loope
sub
repz
lock
pop
pop
mov
fcmovnbe
pusha
sbb
sub
pop
aam
shll
jmp
push
or
fldl
xor
xchg
fldenv
test
fcoml
mov
pop
inc
mov
push
hlt
scas
repz
push
sub
mov
cmp
test
dec
in
mov
cltd
icebp
xchg
push
outsl
test
repnz
nop
rcrl
mov
out
stos
arpl
out
fdivrs
scas
add
or
dec
lcall
into
push
or
cs
mov
imul
mov
popf
jb
mov
dec
sub
fadds
mov
or
movl
pushf
adc
pop
mov
aaa
fsub
out
pop
xor
bound
sub
das
in
pop
fcoml
leave
xchg
add
gs
test
xor
mov
jnp
mov
leave
insl
and
dec
stc
in
fimull
ja
sub
xchg
call
cmc
jmp
push
hlt
add
pushf
mov
imul
push
mov
and
insb
pushf
cltd
jg
and
int
add
notb
lret
add
iret
sbb
push
pop
push
rcll
jae
cld
aas
inc
loop
and
push
out
inc
xor
xchg
xchg
cmpsb
jecxz
in
dec
scas
imul
sbb
mov
xor
xchg
mov
ja
or
adc
arpl
dec
adc
jge
je
sbb
insb
aaa
sbb
push
add
shrl
and
cmp
scas
not
scas
das
pusha
inc
and
push
mov
movsb
arpl
mov
cmpsb
lret
in
ss
pop
enter
daa
movl
and
repnz
or
adc
movsl
cmp
and
jl
lahf
mov
movsb
xlat
test
data16
int
adc
insb
jl
pop
xchg
sbb
js
xchg
push
push
or
addr16
mov
cmp
add
outsb
cmp
adc
loope
sbb
shl
sbb
imul
add
enter
faddl
scas
insl
test
dec
pop
iret
fdivl
push
sub
sbb
test
mov
test
pop
sub
addr16
jmp
sub
loopne
or
xchg
and
insb
mov
call
sbb
rcll
mov
fucomi
sbb
into
or
cmp
xor
fsubrs
lods
aam
dec
dec
imul
data16
cmp
sahf
push
or
nop
mov
mov
out
jb
cli
mov
sarl
mov
outsb
push
gs
mov
and
insl
pop
adc
jns
jno
fistl
imul
jge
lds
in
dec
add
call
inc
mov
push
pop
loop
jns
test
mov
pop
aad
mov
dec
lret
sub
adc
fnstenv
or
pop
shlb
arpl
aad
mov
scas
or
cli
adc
add
inc
call
pop
pop
repnz
cs
inc
arpl
aas
jae
ret
orb
pop
push
sbb
mov
add
mov
fldl
cwtl
mov
mov
mov
add
pop
mov
pop
mov
push
push
mov
or
lock
shrb
das
pop
fstps
rcl
in
popa
and
and
lock
adc
aad
insl
sub
cmpsl
ss
mov
xchg
enter
adc
dec
cmpsl
pop
and
mov
pop
iret
xchg
xor
add
dec
lahf
add
dec
sub
ret
fsubs
mov
clc
fidivrl
sbb
ret
ljmp
mov
mov
push
mov
iret
andl
cltd
loopne
jne
inc
xchg
pop
mov
addl
test
mov
add
lcall
pop
dec
mov
stos
push
call
syscall
inc
jge
add
js
cmp
cwtl
xor
mov
xor
add
mov
scas
mov
mov
ja
in
dec
pop
loop
inc
sahf
jno
or
in
fwait
arpl
mov
and
popa
out
mulb
les
loope
in
imul
dec
inc
mov
or
and
adc
jp
push
mov
cmpsb
pop
mov
cmp
push
in
out
loope
adc
fbstp
outsl
shr
insb
xor
xchg
push
hlt
scas
sbbl
popf
xchg
stc
ss
mov
xchg
and
xlat
insb
pop
xchg
popa
jnp
and
scas
arpl
push
add
jmp
iret
jp
push
ret
cmp
mov
inc
gs
jae
neg
inc
in
cmc
or
inc
lods
adc
mov
pop
test
cwtl
mov
insb
fiadds
movsl
lds
xlat
xadd
jle
inc
stos
pop
repnz
leave
push
push
or
call
arpl
and
fbstp
or
fistps
sbb
add
fsubrs
cld
or
mov
int3
cld
and
test
xor
or
ss
push
rcll
cmp
les
cmpsb
dec
dec
imul
sbb
push
mov
mov
cmp
shll
daa
sti
jl
and
dec
xor
data16
inc
movsl
inc
insb
or
fldcw
cs
popf
in
test
xor
int3
das
cld
xor
pusha
loop
js
pop
pop
cmp
or
jle
mov
mov
push
outsb
pushf
xor
adc
mov
stc
xor
jl
xlat
add
cmc
and
lret
dec
xor
xchg
sub
cmp
lcall
pop
fsubl
ss
sub
pop
sahf
dec
and
test
out
xorb
mov
je
mov
roll
mov
xor
cmp
add
daa
int
mull
xchg
jb
jmp
jecxz
sbb
enter
xor
add
shll
repz
data16
loop
imul
arpl
adc
popf
adc
stos
lods
lods
testl
jmp
xor
out
cmp
dec
cmp
jo
cmp
mov
mov
jg
loopne
stos
pop
inc
cmp
imul
add
xchg
inc
push
sub
daa
add
xlat
daa
pop
mov
call
cmp
test
adc
pusha
out
adc
dec
inc
mov
stos
or
push
in
push
dec
call
lea
fucomp
add
inc
sub
fcomps
adc
mov
mov
xchg
cmpsb
stos
inc
dec
insl
mov
fidivs
aas
adc
ret
dec
int
je
sub
jecxz
xchg
std
xor
and
mov
aaa
mov
repnz
insl
cmp
mov
and
decb
mov
sbb
shll
scas
es
insl
adc
dec
jl
pop
cmpsl
lds
sub
push
lret
lret
jmp
inc
mov
mov
out
adc
rolb
cwtl
test
aam
jmp
ret
addr16
push
xchg
addr16
fstps
xchg
push
dec
mov
popa
mov
lods
ja
jns
mov
clc
out
int
dec
xchg
pop
gs
stos
push
pop
add
and
cltd
pop
or
dec
cs
xchg
test
add
sbb
push
ror
push
pop
clc
push
mov
push
push
cmp
add
inc
cmp
fstps
jmp
add
xor
sub
mov
icebp
lret
decb
add
jmp
mov
xor
xlat
lods
fwait
xchg
lods
movsl
dec
lcall
pop
or
aad
andb
jbe
cmpsb
mov
in
shll
xchg
adc
cmp
iret
insb
or
pop
fucom
addr16
mov
lods
mov
cmpsl
xchg
dec
jle
dec
jbe
pushw
lods
lret
lods
sub
fwait
push
vfrczps
jmp
mov
push
and
inc
popf
mov
xlat
mov
movl
and
icebp
insb
jb
or
scas
xor
push
dec
lock
iret
fxch
insl
ret
mov
inc
jo
pop
jae
xor
inc
call
xor
push
in
stos
test
cltd
jg
xchg
inc
imul
inc
sti
sbb
sbb
mov
xor
push
js
repnz
xor
dec
xchg
push
arpl
ja
jge
outsb
xchg
sbb
inc
or
xchg
dec
iret
or
and
add
out
lahf
int3
out
jbe
jle
push
push
sti
fcom
xor
subb
in
dec
insl
and
jecxz
movsb
jns
xor
shll
add
xor
jns
cmpsb
daa
lds
cmp
adc
addb
mov
pop
inc
movsl
dec
mov
je
std
cmp
push
jo
jbe
rcl
push
cld
imul
repnz
pop
pop
in
mov
pop
ja
jno
jne
lods
loope
sbb
cmp
das
adc
xchg
arpl
adc
jb
mov
push
add
cmp
push
mov
scas
sub
xchg
popa
lcall
fmul
sub
sub
frstor
sahf
out
xchg
add
xchg
inc
dec
or
sub
sub
xlat
mov
dec
mov
mov
and
dec
jne
ss
dec
xchg
loop
cmpsl
mull
xor
roll
cmc
sbb
mov
cmc
lret
lock
sbb
outsl
inc
cwtl
loope
jno
sbb
andl
adc
pop
lods
fimuls
fmull
movsb
cmp
xor
int3
cmp
mov
stos
pusha
andb
cmp
jp
jne
or
test
imul
push
add
lret
lahf
mov
cmp
iret
xlat
dec
loop
jb
cmpsl
mov
daa
hlt
in
xlat
mov
insb
cltd
sub
mov
inc
int3
xchg
push
fchs
pop
test
mov
repz
lods
inc
imul
add
jg
notb
adc
mov
pushf
cwtl
imul
jae
pop
cmp
lea
and
inc
jbe
lods
aas
mov
je
inc
sbb
fwait
je
xchg
push
jecxz
inc
jl
inc
add
push
cwtl
xor
les
sub
adc
push
mov
dec
fistl
ret
test
popf
repz
das
ffree
test
iret
lret
mov
mov
es
fidivs
insl
clc
fisttpll
ja
loope
shlb
adc
fs
inc
jp
cld
cmc
mov
lret
pop
inc
cs
int3
in
fldenv
or
and
into
aam
std
mov
push
push
xchg
sub
clc
jbe
clc
push
leave
imul
inc
jnp
mov
mov
mov
xor
enter
daa
cmovno
int
icebp
dec
sbbb
push
mov
xchg
int3
into
test
or
sbb
out
inc
shll
ljmp
lds
shrl
add
pop
or
js
data16
push
add
jecxz
and
and
xor
insb
mov
rorb
jo
dec
add
pusha
sub
fwait
shll
inc
cmp
scas
pushf
stos
mov
mov
bound
in
mov
xchg
arpl
mov
push
or
sub
push
loope
addr16
lcall
push
mov
push
dec
aaa
jle
xor
pushf
pusha
dec
bound
xchg
outsb
jno
jmp
mov
or
mov
xchg
push
popf
loop
inc
mov
push
jnp
stos
sub
mov
jnp
mov
xor
pop
mov
pop
inc
lods
iret
cmp
cmp
pop
cld
hlt
xchg
inc
jnp
lds
mov
inc
jmp
movsb
or
cmp
and
xchg
lcall
imul
lds
inc
das
rolb
enter
xchg
leave
inc
mov
inc
arpl
gs
xor
scas
rclb
or
aaa
push
testl
rolb
int3
rolb
sbb
lods
lea
xor
mov
les
and
jmp
cmp
pop
test
push
push
sti
pop
cmpsb
push
leave
or
jmp
jnp
je
andb
aad
cmp
std
out
mov
dec
adc
ds
dec
je
and
push
in
lahf
sbb
mov
add
push
cmpsb
mov
mov
pop
or
mov
out
clc
cmp
mov
dec
push
and
loope
das
sahf
sub
adc
cmp
push
outsb
bound
jle
jb
out
jo
cwtl
cmp
clc
sbb
iret
push
add
aad
xor
test
mov
push
int
aam
sub
sbb
lcall
and
sub
pusha
fs
xchg
std
inc
test
or
ljmp
mov
pop
fimull
dec
enter
movsb
jae
and
cmp
popf
adc
mull
scas
dec
rcll
out
mov
test
cmc
xchg
loope
xor
das
outsl
and
aad
add
cs
cmp
les
mov
inc
xchg
loope
lods
lds
mov
mov
out
ret
xor
repnz
add
dec
adc
dec
and
cmp
pop
test
sub
pop
xchg
adc
mov
sbb
pop
add
and
pop
sbb
popf
cs
xlat
movsl
enter
ficoml
adc
dec
sti
xchg
lret
aad
fistl
call
movsl
sub
pop
mov
les
push
cmp
lea
xchg
mov
sub
xlat
pop
cmpsb
or
inc
pop
xchg
pushf
inc
jmp
jmp
out
pop
pusha
inc
pop
inc
mov
aas
push
push
jne
lcall
je
dec
xor
mov
clc
jmp
cmpb
in
and
mov
mov
lret
sbbl
or
mov
std
jnp
insb
fistl
mov
cmp
and
xlat
mov
sub
insl
fisttps
dec
jb
jmp
inc
lcall
and
lret
leave
push
das
mov
rcll
pop
call
or
lods
out
sub
pop
push
pop
aaa
aas
fstpl
clc
mov
pop
xchg
aad
imul
mov
or
out
xchg
xor
and
push
jnp
add
sbbl
push
aam
xchg
aam
test
nop
mov
sbb
lods
fcompl
out
stos
pop
lret
pop
push
fs
loopne
js
into
call
test
xor
in
xor
jnp
mov
ja
lahf
mov
jnp
push
ja
jl
dec
clc
add
sbb
aaa
mov
dec
sub
popa
mov
sub
bound
in
jns
aam
in
lcall
aad
cmp
push
jns
addr16
mov
icebp
scas
sbb
mov
test
bnd
push
aas
in
xchg
fists
sub
xchg
inc
sarb
or
orl
push
test
popf
or
push
mov
inc
aaa
sub
and
jae
jnp
sub
scas
mov
pop
adc
fsts
ret
cmp
sahf
fadds
xchg
jae
jl
inc
out
pop
jecxz
mov
xor
jmp
add
fimuls
xchg
icebp
mov
popf
imul
icebp
fisubrs
xchg
lds
or
ret
sbb
leave
mov
or
arpl
xor
pop
jecxz
push
testl
or
mov
int3
mov
mov
push
shll
enter
sbb
scas
stos
inc
bound
push
fsubrl
loop
mov
push
cmpsb
imul
enter
daa
ret
and
cmp
lock
jno
sahf
jl
push
fmull
inc
and
dec
movsl
shlb
stos
ret
cmp
push
push
fcoml
push
xchg
aaa
lret
jae
js
xchg
pop
xor
rcll
cmp
push
es
jns
cmp
testb
dec
cs
andl
sbb
and
jmp
or
push
cmp
int
int
sub
insb
pop
stos
lret
pop
lcall
aas
fsubl
xchg
sub
cmpsl
setle
cs
addb
out
cmp
shlb
pop
ja
sbb
cmp
pop
adc
mul
jae
lret
std
shrl
ljmp
and
cmc
pop
mov
shrl
outsl
add
stc
out
dec
movsb
fs
and
popw
stos
nop
lods
lods
into
mov
pushf
jno
mov
sbb
cmp
sbb
or
and
loopne
leave
mov
mov
adc
sti
mov
adc
or
mov
xchg
sbb
fsubs
fldcw
pop
lret
mov
std
fdivl
sti
xor
push
insl
aad
aaa
push
dec
inc
xchg
fs
bnd
push
les
cmp
lea
es
stos
out
mov
addr16
pushf
out
ds
jb
and
pop
push
inc
loope
cmp
mov
jb
xchg
dec
hlt
flds
jecxz
xchg
leave
pop
pop
std
sub
adc
mov
sub
mov
inc
xor
dec
mov
mov
jae
mov
mov
into
mov
imul
jo
fwait
les
sbb
or
aad
mov
dec
mov
xor
xchg
jne
insl
fs
ret
mov
out
mov
ror
cmp
xor
fimull
and
mul
or
dec
aam
sarb
push
sub
nop
ja
out
adc
pushf
push
fimull
inc
pop
test
gs
ljmp
xchg
lods
mov
push
mov
xchg
in
pop
jnp
cmp
pop
add
cmp
mov
cli
push
mov
int
xchg
mov
pop
xchg
dec
loope
pop
or
rolb
pop
stc
mov
stos
push
hlt
xlat
push
pop
in
add
xchg
lock
pushl
xchg
xchg
or
dec
ss
mov
addr16
sti
fdivrs
ss
test
or
dec
jmp
imul
push
fwait
pop
sbb
jne
inc
sahf
mov
scas
cli
out
jb
pop
ficoml
jns
insb
pop
in
std
ret
xchg
add
xchg
out
fwait
ja
and
fsubs
mov
cmc
mov
mov
fmuls
add
mul
jnp
dec
pusha
jle
loopne
xor
add
xchg
dec
cmp
fcoms
outsl
push
imul
cmc
push
pop
push
test
stos
adc
and
mov
popf
scas
out
sub
push
push
pop
les
adc
mov
pop
push
popf
inc
xchg
lds
inc
icebp
sbb
and
das
call
fidivl
mov
cmp
fmulp
jg
lds
cmp
push
xorl
das
mov
hlt
sub
arpl
mov
jge
adc
aaa
aam
xchg
or
xlat
int3
test
adc
push
movsb
sub
pop
jo
jecxz
scas
mov
fbld
out
mov
movsb
sbb
andl
hlt
repz
daa
ret
cmp
movsl
pop
jno
in
jl
or
lock
mov
movsl
pop
or
and
sub
jmp
push
sbb
cs
fsub
mov
cmp
cwtl
js
sub
sbb
push
fldl
fcmove
cmpsl
sub
mov
cmp
loopne
adc
sub
jge
and
xchg
add
add
aas
push
xchg
test
int
stos
xchg
sub
dec
dec
pop
sub
cs
mov
les
push
mov
sahf
fsubrs
pop
andb
enter
lods
mov
adc
add
and
jae
pop
sub
inc
dec
pop
fcoms
test
mull
xchg
mov
mov
add
jl
jle
and
mov
sub
inc
outsl
loop
inc
loop
cli
stc
cmpsb
ss
sbb
adc
lcall
mov
xchg
cmp
mov
xor
or
sub
jle
adc
push
gs
pop
loopne
adc
adc
xchg
jne
inc
add
add
pusha
inc
xchg
dec
or
cmp
test
test
lret
outsl
cmp
inc
iret
push
in
push
add
sbb
inc
popf
inc
nop
jg
fwait
dec
cmpsb
mov
cmp
test
les
fs
jb
test
fcomps
call
sub
movsb
pop
or
cli
adc
sbb
xchg
jmp
sbb
and
movl
or
inc
or
dec
imul
rol
fucom
push
testb
std
shlb
mov
push
jo
add
addb
pop
mov
mov
cmp
lock
dec
das
jp
cmp
hlt
sbb
rcrl
lea
lret
push
in
lds
xchg
adc
jbe
lods
lret
cmpsl
mov
mov
loope
xchg
mov
push
cli
rclb
add
and
mov
push
popf
sbb
insl
cmpsb
xchg
clc
add
pop
ljmp
xchg
lods
and
jae
pop
push
cmp
int3
divss
fildl
sub
inc
cltd
repz
rolb
or
xchg
loope
das
push
outsb
xchg
scas
sbb
mov
xor
stos
std
loopne
push
stos
scas
popa
add
scas
add
mov
wbinvd
imul
mov
std
repz
mov
icebp
sub
ja
and
dec
fisubs
mov
out
fwait
dec
sbb
out
icebp
das
jne
xor
mov
dec
cmp
push
sbb
jns
test
in
xchg
push
dec
loope
fistl
fisttpll
inc
gs
and
push
jp
jb
mov
sahf
adc
adc
in
xor
pusha
sbb
mov
jmp
adc
jns
push
cs
jle
push
sbb
mov
ret
cmp
test
push
and
push
movsl
insb
push
fcomps
cmp
mov
push
mov
in
adc
cmp
iret
push
dec
inc
ret
push
pop
mov
push
popa
jae
shl
inc
hlt
lahf
push
or
scas
roll
gs
pop
xchg
lahf
movsb
sti
sbb
dec
mov
fld
iret
fidivs
stos
lds
lahf
sbb
repnz
pusha
hlt
jbe
das
arpl
in
jbe
adc
jge
adc
sbb
fadds
or
aas
jle
xchg
adc
int3
xchg
mov
pop
cmp
push
xchg
loope
push
mov
jo
adc
and
push
cmp
fsubl
adc
fsubr
in
mov
inc
jne
rorl
inc
or
jno
or
inc
dec
pop
push
ds
mov
add
loopne
push
lahf
jns
cmpsb
push
mov
sbb
lcall
inc
xor
and
lahf
lahf
jno
jae
stos
push
dec
dec
loope
dec
add
enter
mov
outsb
mov
adc
add
in
lea
js
xor
fstpl
mov
add
fwait
insl
xor
cmpl
int
insb
dec
sub
cmc
pop
test
push
fs
push
dec
adc
jns
jns
cmc
andb
out
dec
test
xor
mov
mov
mov
and
pop
in
out
and
into
rcrb
lret
aad
fdivrl
dec
sbb
int3
into
pop
xchg
out
or
xchg
rcrl
stc
pop
lds
fs
add
js
gs
lods
jp
jmp
out
cli
movsb
cli
jo
or
mov
cmp
lret
or
fwait
jle
aaa
mov
xchg
or
out
in
pop
loope
cmp
shrl
imul
push
lret
add
push
sbb
dec
inc
xlat
bound
sub
enter
sbb
sti
xchg
popa
jge
add
or
mov
nop
pop
mov
clc
inc
sbb
xchg
fnstcw
xor
aam
jne
cmp
imul
test
cvtps2pd
xor
pushf
inc
bound
push
fisttpl
les
pusha
inc
out
ljmp
sub
ret
loop
mov
jecxz
testb
std
ja
xchg
cwtl
sbb
xchg
and
hlt
insl
in
bound
lahf
fcmovnbe
cli
clc
mov
inc
mov
jb
lock
pop
das
pop
rclb
inc
jns
mov
jmp
mov
jmp
push
es
pusha
insl
xchg
loope
dec
arpl
add
popf
lea
mov
wbinvd
mov
call
adc
pop
mov
das
shlb
lahf
jbe
or
cmpsl
call
aam
fstl
scas
xchg
xchg
gs
mov
mov
mov
push
enter
nop
add
cmp
int3
mov
mov
dec
jns
sbb
call
cltd
inc
roll
inc
sti
stos
in
xchg
xor
dec
insl
aas
add
leave
and
push
pop
push
xor
add
dec
out
mov
inc
pusha
pop
mov
lods
pushf
ljmp
jge
inc
sub
lock
cld
data16
jge
stc
dec
rcll
add
mov
cmc
sbb
xor
and
mov
in
mov
sti
out
cs
inc
mov
inc
jp
popa
pop
mov
mov
inc
mov
dec
jb
in
mov
stos
fbstp
jns
mov
cmpsl
xchg
loopne
sbb
icebp
inc
and
mov
add
and
cs
insb
mov
dec
jnp
sbb
scas
mov
addr16
lods
lock
enter
mov
inc
ret
xchg
pop
fdivs
inc
cmpsl
fwait
ret
jae
or
cltd
jnp
repz
inc
push
mov
xchg
test
sbb
scas
stos
imul
add
adc
aam
shr
adc
mov
inc
or
shll
jbe
popf
bound
repz
sbb
and
push
ret
out
mov
add
repz
int3
jle
pop
imul
repnz
sub
scas
dec
fcoms
cmp
lods
std
movsb
xor
xchg
push
xchg
dec
pop
cmpsb
pop
xor
in
xchg
in
pusha
std
das
daa
shlb
cmp
cmp
pop
mov
loop
into
movsb
aaa
ds
aam
imul
jnp
mov
push
cmpsl
pop
test
repz
inc
cli
mov
sarl
test
adc
test
xchg
push
and
cmp
jbe
outsb
out
out
cmc
adc
fiadds
in
shll
test
adc
or
loop
cwtl
loop
int
adc
pop
sub
mov
movsl
pop
jle
lods
cld
cmpsb
fsubl
pop
sub
adc
sahf
push
sub
test
outsb
adcb
jg
dec
data16
sahf
mov
mov
lods
stos
and
add
mov
arpl
dec
dec
pop
shll
mov
inc
sbb
cmpsb
mov
scas
mov
xor
adc
mov
jns
stc
adc
add
adc
gs
mov
fisttpll
lahf
mov
cli
mov
jno
cmp
pusha
outsb
or
sub
pop
in
pop
lea
loopne
fisttps
push
xor
movsb
insl
leave
imul
jb
add
stos
rclb
adc
dec
cmp
sub
mov
ds
sti
inc
adc
aad
xchg
cltd
nop
xor
or
or
repz
les
jb
js
outsb
lea
adc
daa
inc
mov
adc
xor
jmp
pop
push
pop
addr16
inc
jbe
jns
std
fs
aas
int3
shrb
out
arpl
stos
mov
mov
ljmp
push
jp
cwtl
fdivs
xchg
mov
nop
sti
mov
nop
mov
je
out
fildl
rorl
mov
xor
orb
fcoms
cmp
mov
bound
shlb
add
test
insl
jnp
arpl
xor
mov
cmp
je
mov
lret
test
mov
and
enter
test
int3
sar
negb
aam
inc
sub
push
and
fnstsw
cmpsb
inc
xchg
rcll
sub
lods
stc
dec
sarl
imul
shrl
push
int3
jne
nopl
sub
cltd
popa
int
test
dec
pusha
xchg
fldenv
test
outsb
xchg
xchg
sub
jg
add
xlat
loop
pop
cli
jnp
fildl
icebp
push
lock
pop
add
in
test
xchg
add
or
jo
lcall
mov
inc
mov
addr16
adc
dec
inc
mov
out
fwait
lods
addr16
mov
lcall
mov
out
rdpmc
xor
sbb
lock
jp
clc
sbb
xchg
out
in
out
fisttpll
sub
cmp
mov
dec
mov
leave
fidivrs
imul
pusha
dec
jg
fisttps
add
sub
and
addl
call
mov
inc
push
subl
hlt
mov
jnp
lcall
repz
mov
mov
movsl
stos
ret
pop
bts
mov
or
inc
cli
pop
cwtl
or
movsb
mov
mov
lret
or
lcall
lret
mov
xor
or
lcall
cld
pop
hlt
or
test
jbe
lcall
ss
pop
aaa
adc
dec
or
test
imul
dec
xor
xchg
and
lahf
cmpsb
out
cmp
dec
ficoms
lret
loop
loope
outsb
monitor
pop
dec
sbb
mov
stc
ret
mov
dec
cmp
movsl
pop
movsl
jb
cli
and
dec
sbb
push
bound
test
mov
lds
test
stos
pop
iret
inc
pop
js
dec
mov
icebp
xlat
sti
push
cmp
loope
mov
jge
cmpsb
sub
outsb
push
fs
adc
mov
jno
sbbb
sbb
shlb
add
fdivs
je
and
fwait
lods
add
adc
push
pop
cmpsl
imul
fmul
pop
es
push
sahf
rcll
mov
xorb
jg
jbe
mov
mov
mov
pop
int
mov
mov
cmp
inc
fidivs
loopne
mov
cmp
cmp
les
into
and
jno
xor
mov
test
lret
into
and
adc
jne
and
lods
dec
push
stos
mov
bnd
fnstenv
cmp
leave
or
jns
mov
jge
int
xchg
loopne
loopne
fs
pop
pop
add
ja
lds
incl
int
std
xchg
xchg
xchg
cmp
ss
loopne
jle
and
insb
mov
test
fs
cs
aad
and
movsl
dec
ret
cmp
iret
fldcw
add
inc
repz
jg
jnp
jge
or
xchg
mov
pop
and
int3
dec
pushf
lcall
pop
or
das
inc
std
movsl
jg
sbb
imul
jb
int
dec
shlb
je
call
out
not
test
cwtl
xchg
sub
lock
in
fisubl
adcl
outsl
push
mov
fisttpll
lock
cmc
mov
sbb
lahf
and
jecxz
rorl
fsts
bound
mov
inc
gs
dec
out
sar
not
adc
hlt
or
and
arpl
ret
ror
mov
push
aam
push
xor
push
sbb
push
out
repnz
fnstenv
xchg
adc
ljmp
les
or
out
sbb
xchg
or
push
cmpsl
call
mov
cltd
cwtl
add
mov
pop
dec
xchg
ja
mov
icebp
mov
shrl
lret
movsl
pop
xor
push
xchg
loope
jg
lock
test
pushl
lods
jns
cs
cwtl
xor
jge
mov
xchg
mov
pop
and
repz
jae
dec
mov
addb
inc
or
movsb
rcrb
xchg
aas
pop
jne
dec
nop
mov
mov
out
les
sub
aaa
icebp
in
iret
out
xchg
cmp
xor
sub
cmp
dec
jp
pop
dec
mov
adc
and
xchg
cmpsl
mov
lea
xchg
pusha
push
jge
and
pushf
xchg
jbe
lret
adcl
push
ja
negl
loope
fsts
mov
daa
and
push
mov
xchg
jnp
loopne
scas
jnp
out
cmp
in
jle
sbb
jb
pop
inc
mov
jae
push
popa
inc
std
jmp
dec
push
lretw
jle
adcl
cmpsb
hlt
mov
lds
sahf
shlb
or
bound
jnp
or
push
js
arpl
or
jge
fcompl
icebp
fcmovnbe
aaa
sarb
sbb
pop
and
int3
push
int
pop
movl
daa
xor
loope
xchg
scas
push
cli
leave
and
fwait
cmp
jne
ja
inc
rcl
push
xor
in
push
loopne
enter
daa
mov
jge
jno
fiadds
lea
js
lods
fstpt
clc
xchg
movsl
jns
or
mov
and
xor
dec
dec
push
mov
lock
sbb
inc
dec
push
pop
imulb
fsts
xor
clc
push
ret
xchg
loope
scas
cwtl
sub
hlt
aas
cmp
fwait
outsb
mov
jb
lods
adc
rclb
enter
sbb
pop
add
push
pop
xor
out
push
sahf
in
icebp
int
or
sub
mov
int3
lcall
pusha
fdivrl
jle
ret
sahf
fs
test
sbb
andb
mov
cwtl
lds
mov
jecxz
push
adcb
lahf
mov
lret
xchg
shll
push
sbb
and
into
or
dec
cmc
cmp
mov
cwtl
mov
nop
loop
enter
dec
shlb
test
gs
push
lods
das
loopne
mov
mov
cli
or
fnstsw
push
mov
call
ss
gs
jp
mov
loopne
sub
imul
mov
add
xchg
pop
inc
jmp
pusha
daa
mov
xlat
pop
jp
sub
xlat
ljmp
or
cs
sbb
jmp
sub
jb
inc
push
dec
adc
popa
xor
repz
mov
xchg
lea
call
and
gs
pushf
inc
dec
add
sbb
jecxz
inc
test
cmp
xchg
aas
or
add
imul
adc
xor
std
insb
iret
jmp
mov
adc
mov
repnz
andl
sbb
iret
mov
mov
insb
ljmp
test
sti
mov
mov
mov
rcr
xchg
insl
dec
jle
dec
push
repz
mov
and
cld
and
lret
arpl
jb
std
clc
lret
in
push
out
add
sahf
mov
sub
inc
into
aam
mov
ret
fistpll
fisttpll
mov
clc
in
or
xchg
dec
jae
ljmp
mov
iret
push
mov
in
mov
subb
fidivrl
add
adc
test
movsl
xor
scas
mov
test
aad
xchg
gs
mov
clc
pop
push
dec
xlat
stos
mov
popa
push
add
sbb
mov
rcrl
xor
out
xor
inc
adc
or
mov
call
daa
inc
in
xchg
adc
movsl
ficomps
jp
les
cld
mov
jne
out
int
sbb
rcrb
push
mov
out
clc
test
mov
sub
add
addr16
mov
test
mov
shl
jle
popa
pusha
in
inc
cs
test
fcoms
sbb
rclb
sbb
cmp
sbbl
mov
push
mov
out
and
mov
dec
jnp
jmp
push
cmpl
or
rorl
gs
jge
mov
pop
jae
mov
inc
add
or
lcall
fidivl
fstpl
sbb
fcoms
lods
add
inc
mov
jge
mov
sub
hlt
mov
pushf
inc
jbe
icebp
xchg
jge
repz
lods
scas
inc
aaa
popl
or
flds
repz
int3
aas
aam
pop
test
push
adc
lods
xor
cmp
sbb
cmp
mov
shrl
cmpsb
call
xchg
mov
push
mov
push
cmp
mov
jno
push
mov
dec
sbb
idivb
sbb
movsl
sbbb
dec
add
lahf
cmc
inc
pop
push
or
test
push
sbbb
push
push
or
xchg
cmc
inc
js
inc
xchg
pop
outsl
outsb
push
incl
loope
rol
add
pop
sub
adc
outsl
mov
and
imul
xor
movsl
xor
mov
pop
movsb
sub
or
movsl
rolb
lcall
arpl
and
fs
sahf
pop
mov
test
dec
inc
andb
jl
sub
mov
xchg
fdivs
pop
into
ss
lods
sub
mov
sbb
lret
mov
mov
outsl
sbb
cwtl
int
jmp
shl
add
xor
mov
outsl
cmp
mov
jnp
aam
sub
sub
dec
lods
push
mov
pushf
cli
in
cmp
or
cmp
pop
movsl
or
fdivr
ret
dec
call
loopne
test
std
adc
frstor
add
sbb
xchg
sbb
sbb
cmp
xlat
pop
nop
sub
or
icebp
mov
jg
mov
cs
lock
movsb
jae
nop
movb
inc
fs
or
cwtl
pop
sbb
int
mov
movb
int3
call
movsb
cmp
pop
mov
sahf
pushf
lock
ja
or
lahf
pop
push
mov
inc
or
adc
aas
test
cmpsl
sub
ds
dec
movsl
fs
mov
negb
pop
std
adc
or
mov
cwtl
scas
mov
xor
cmpl
repz
mov
sbb
lock
sbb
fnstcw
pop
lcall
stos
and
and
daa
cmpsl
mov
aad
icebp
stc
loopne
cld
dec
lea
rcrb
and
add
jl
cltd
pop
adc
add
in
sub
outsb
cmp
cmp
outsb
mov
arpl
xor
clc
sub
sbb
mov
xor
inc
inc
dec
popa
pop
cmp
cmp
lret
xchg
xchg
xchg
fstps
or
cmp
add
push
xchg
xor
cmp
clc
mov
xchg
fsubl
sbb
add
pop
sti
dec
adc
testl
jo
mov
or
inc
mov
dec
cltd
cmp
cwtl
das
push
ja
add
cmc
imul
out
nop
pushf
or
dec
pop
aaa
mov
mov
jae
out
lods
hlt
dec
bound
mov
jne
in
xor
inc
dec
out
xor
sub
rcll
sbb
enter
dec
mov
sbb
clc
das
add
aad
mov
pusha
and
sub
xchg
push
cwtl
push
jmp
or
in
xorl
mov
popf
sbb
push
push
dec
sti
stos
ret
jmp
subb
jnp
mov
scas
inc
frndint
push
enter
xor
or
xor
ret
mov
inc
shll
aaa
jae
push
mov
add
dec
or
adc
ja
push
xchg
xchg
push
cld
sbb
mov
fisubs
mov
xor
repnz
sbb
stc
push
inc
hlt
in
mov
arpl
jns
out
rcrb
pop
push
aaa
dec
int
or
in
int3
sub
aam
notb
dec
jo
lds
les
or
pop
and
pop
fmull
cmpsb
imul
in
and
sub
dec
test
cmp
inc
mov
nop
jl
mov
cs
movsl
xchg
and
fstpl
fisttpl
cld
push
pop
pop
inc
inc
ss
jb
inc
and
js
lcall
sub
loope
clc
jg
jo
push
cmp
jl
adc
dec
pop
mov
adcb
loopne
ss
xor
push
jecxz
movsb
movb
aam
fiadds
and
inc
lcall
imul
sbb
sub
xchg
or
push
sub
add
cld
jg
add
add
mov
lods
push
ss
and
cmp
jne
inc
negl
das
jmp
mov
iret
sub
into
lods
shl
ja
xor
or
loop
out
stc
lock
adc
cmp
data16
stos
jp
out
les
cli
outsl
or
xor
std
add
jg
out
sahf
gs
imul
lock
push
ret
jb
fldl
jp
dec
xchg
ficomps
push
cmp
push
xlat
popf
sub
sub
dec
mov
ljmp
cs
jmp
push
nop
mov
out
inc
ja
iret
jle
fsubr
sbb
xor
or
test
xchg
lea
jmp
and
mov
pushf
fwait
mov
jecxz
repz
inc
xchg
sub
inc
imul
or
xor
dec
xor
add
jecxz
shrl
sahf
loop
std
mov
addb
and
adcl
neg
mov
inc
mov
lock
push
stos
das
mov
or
mov
mov
sbb
es
mov
dec
dec
add
lret
mov
rorb
mov
mov
or
xchg
pop
and
sbb
sub
cmp
aam
imul
das
xchg
mov
clc
arpl
mov
popa
jo
test
loop
out
stos
loopne
xchg
mov
sets
outsl
add
adc
mov
or
xchg
pop
pusha
test
mov
arpl
lcall
and
push
jl
out
adc
data16
insl
decl
sarl
lret
xor
outsb
xor
aad
mov
test
pop
push
xchg
ja
push
dec
nop
push
addb
sub
jnp
adc
inc
and
jne
in
mov
test
out
mov
stc
jns
mov
xchg
sub
out
jecxz
sub
sub
dec
sbb
mov
xor
and
mov
inc
xchg
outsl
pop
in
sahf
leave
pusha
mov
push
xchg
flds
fists
push
pop
push
rclb
popf
inc
mov
cmp
mov
xor
jnp
dec
xor
lgs
cmovs
iret
popl
pop
pop
jmp
inc
inc
fidivs
jae
cmp
or
nop
push
nop
inc
jecxz
lret
jl
xchg
test
pop
arpl
or
inc
cmp
aad
fadd
jbe
les
pop
adc
leave
jo
imul
mov
pop
mov
sbb
adc
or
jl
int3
adc
cltd
testb
stc
js
add
scas
jo
fstpt
scas
mov
mov
cmp
pop
mov
push
insb
lods
cmpsb
out
imul
enter
daa
mov
inc
jne
mov
inc
icebp
dec
stc
inc
jno
popa
out
movsl
mov
and
mov
push
scas
or
addr16
les
push
inc
lds
nop
popa
inc
pop
imul
js
mov
pop
in
mov
push
xchg
psraw
aaa
sub
xchg
or
bound
adc
and
push
fadds
fld
adc
inc
add
xor
popa
test
scas
test
sub
xchg
pop
mov
cmp
pop
out
jnp
lret
outsb
leave
sahf
dec
dec
test
jb
sbb
push
jg
cmp
jecxz
out
push
inc
mov
insl
jmp
xor
fdivs
jmp
lret
xchg
shll
mov
loop
sbb
xchg
inc
cmc
xchg
in
push
outsl
sti
and
loop
inc
out
stc
cmpsl
xchg
lea
ficoml
push
pop
sahf
data16
inc
fwait
lods
in
and
out
adc
mov
cli
jno
cmp
mov
or
mov
test
pop
fwait
push
lods
adc
xchg
nop
imul
or
std
sbb
mov
push
xlat
fmull
sub
sahf
in
mov
push
mov
jmp
aad
push
dec
nop
jl
in
aas
daa
inc
mov
flds
lcall
add
rol
xchg
loopne
test
jno
mov
aam
adc
jb
inc
lods
out
ljmp
inc
sbb
stc
inc
test
aas
out
add
push
and
aad
je
mov
jecxz
aaa
in
loope
mov
popa
jge
cwtl
jg
clc
mov
xor
cmpsb
lret
dec
sub
and
inc
mov
test
mov
jmp
push
das
xchg
pop
xor
mov
dec
mov
sub
int3
fisubs
mov
dec
insl
push
cld
dec
inc
insb
and
mov
push
das
icebp
cmpsl
bound
lret
mov
bound
adc
test
inc
sub
int
jecxz
movsb
aam
lds
mov
clc
push
repnz
push
fnstsw
mov
sahf
testl
sub
mov
lods
adc
mov
out
push
and
and
xchg
push
adc
divl
xchg
cltd
je
int3
test
mov
xchg
sub
test
inc
push
xchg
xlat
mov
xor
pop
push
lret
xchg
call
add
imul
xor
testb
mov
xor
fwait
mov
shrb
mov
push
jno
ja
sbb
dec
subl
mov
push
or
in
fwait
xchg
xchg
cs
and
push
jne
mov
mov
test
lret
out
jns
inc
lock
loope
xchg
jns
xor
jo
mov
or
cmp
rcl
std
lods
sarl
test
jle
in
in
arpl
fildll
in
xchg
lods
test
mov
adcl
push
subl
push
or
push
jl
mov
insl
push
cld
insb
or
pop
jnp
lahf
add
push
or
or
out
enter
xorb
jmp
fs
or
in
or
or
pusha
inc
bound
fimull
rclb
pushf
jne
imul
fsubp
insb
mov
rclb
dec
repnz
sbb
sub
sub
arpl
loop
jbe
pop
xchg
jge
idivl
frstor
xchg
or
ss
int3
add
negb
cmpsl
test
mov
xchg
xor
push
xor
jle
movsb
cmp
mov
ds
or
daa
mov
xchg
ss
cltd
clc
jl
pushf
and
push
cwtl
andb
xor
push
jmp
push
cmpl
cmp
out
push
push
xor
cs
js
or
pop
sub
add
jmp
pop
sub
jb
cmp
and
inc
sti
inc
adc
add
sbb
cmpb
sub
out
xor
inc
push
stos
jo
int
cmpsb
in
lret
pop
and
lcall
inc
fsubl
outsb
inc
sub
pop
sahf
lock
test
dec
cmp
mov
mov
sbb
mov
pop
out
out
push
out
je
test
jmp
adc
lret
ffree
std
loop
mov
sbb
imul
outsl
fcmovb
mov
stc
pop
pushf
aam
jne
aas
adc
and
lods
lret
out
les
cltd
in
cli
aad
push
xor
xchg
inc
pop
or
dec
gs
inc
loopne
daa
xchg
pop
mov
into
imul
and
add
mov
and
jmp
mov
sub
push
mov
shlb
pop
push
pop
cs
xlat
dec
nop
push
cmp
imul
cmp
add
mov
lret
fldcw
and
in
movsb
or
adc
inc
jmp
mov
cmp
movsb
inc
mov
mov
shlb
push
dec
and
and
push
fisttps
mulb
mov
cmp
pop
mov
inc
dec
dec
notb
mov
mov
fildl
das
jb
and
mov
mov
sar
xor
shrb
jno
dec
inc
addr16
cmpsl
mov
les
jle
daa
cld
into
push
mov
pop
ljmp
sbb
pop
mov
ljmp
fcmovb
test
lcall
push
mov
mov
clc
fld
js
dec
push
mov
lods
jnp
jp
call
push
pop
xchg
imul
push
out
push
mov
add
js
cltd
stos
mov
xchg
stos
inc
cmc
dec
dec
sbb
xchg
int3
xchg
adc
mov
xor
loope
jle
cld
inc
cmp
ret
add
xchg
decl
repnz
mulb
or
mov
push
mov
adc
dec
stc
pop
leave
out
cmpsb
ja
dec
les
xor
inc
dec
adc
or
push
fwait
mov
dec
push
rcll
cmp
mov
dec
bound
mov
lahf
sub
cmp
mov
out
sahf
fisubrl
pop
xor
enter
add
jns
sub
jle
dec
sbb
mov
add
dec
bound
jg
dec
jmp
insl
int
sbb
adc
inc
xor
cmp
rcll
mov
sbb
push
and
fnstcw
mov
and
mov
push
dec
ret
jmp
inc
hlt
fiadds
cmp
loope
or
ja
les
push
loope
scas
jmp
xchg
push
xlat
cmp
cmpsl
les
inc
out
fimuls
xchg
ret
sbb
mov
add
leave
pop
aad
hlt
into
pop
push
arpl
sub
jbe
push
sub
fcoml
dec
aaa
mov
dec
or
adc
push
mov
jno
lahf
mov
inc
jo
inc
add
popa
adc
and
outsb
add
or
scas
movsb
std
jmp
cmpsb
hlt
fidivs
in
fcoms
enter
daa
mov
sahf
jno
mov
add
lods
fidivrl
cmpsl
ds
movsl
pushf
push
mov
lahf
jno
sbb
push
sahf
aas
test
sub
inc
jecxz
rcl
push
mov
pop
mov
and
imul
push
hlt
fucom
test
and
shrb
mov
mov
cli
popl
pop
dec
sbb
popl
sbb
xor
rolb
lods
repz
sub
jp
mov
dec
cli
push
or
push
shrl
mov
test
sub
adcb
mov
popf
mov
xchg
andl
push
cmp
cmpsb
out
negl
enter
ljmp
cmpsb
cmp
fimuls
into
ja
pop
add
xor
dec
outsl
mov
pushf
jp
adc
arpl
adc
fs
lods
mov
fimuls
cwtl
cmp
or
lahf
cmp
movsb
lods
or
dec
sbb
dec
push
mov
loopne
and
pop
flds
adc
ljmp
dec
mov
rorl
jne
daa
rol
and
xlat
pop
adc
mov
sub
push
sti
or
inc
cs
lods
aad
rolb
std
mov
inc
mov
jb
je
pop
stc
mov
repz
jle
lea
outsb
call
mov
clc
push
pushf
pushf
cmovns
enter
faddl
stos
inc
mov
add
jb
int
dec
lcall
jecxz
lret
fcomip
addr16
lock
scas
mov
daa
mov
mov
sbb
fisttpl
aad
nop
inc
aaa
mov
xor
push
test
dec
mov
inc
clc
inc
shll
cs
pop
insl
int3
test
dec
cmp
jmp
jne
sbb
push
je
cld
stc
in
call
mov
and
xor
subl
push
aam
ja
ret
stos
fisttpl
dec
test
adc
mov
mov
add
popa
mov
movsb
lods
out
inc
mov
aam
sti
xchg
mov
jo
leave
cmp
xchg
add
adc
scas
jae
fdiv
add
xchg
in
imul
loop
sbb
sarl
sub
pop
cmpsl
xchg
mov
fs
jg
test
adc
mov
and
or
and
mov
pop
adc
pop
test
add
jnp
loopne
push
or
jl
fwait
cmc
xchg
fwait
dec
jmp
push
sbb
sub
jns
lahf
xlat
in
loop
xchg
pop
rcrb
sub
sbb
sbb
jp
sub
stos
rcrb
movsb
fs
mov
mov
popa
stos
mov
pusha
mov
jo
push
mov
xchg
cmp
subl
push
or
mov
cmpb
push
push
stos
sti
out
fwait
das
jge
loope
push
jnp
xchg
scas
int
icebp
push
in
fsts
mov
pop
sbb
cmp
and
nop
sub
inc
call
and
test
inc
prefetch
sahf
mov
inc
pusha
add
mov
lods
xchg
scas
pop
fstpl
lods
movsb
imul
fisubrs
mov
rol
dec
mov
push
int3
ror
aad
ds
sbb
lock
aaa
mov
sbbl
sbb
shll
dec
sbb
add
pop
cmp
bound
loope
stos
push
and
xor
add
movsl
and
and
push
or
enter
push
enter
daa
mov
pop
push
jno
iret
clc
jl
enter
or
ds
movsl
mov
mov
lahf
nop
insl
rsqrtps
mov
test
dec
sbb
jb
mov
pop
loopne
mov
mov
jbe
stos
inc
cltd
push
mov
loope
cmp
sub
test
mov
push
dec
cwtl
adc
mov
movsl
in
clc
sbb
push
sbb
mov
bound
mov
mov
lods
int
dec
mov
sar
pop
and
inc
lcall
jno
jl
out
sub
sahf
ss
roll
cmp
and
push
dec
jp
int3
aaa
out
and
and
cli
andl
popa
inc
imul
loop
lock
push
mov
int
or
cmc
dec
cmc
out
jp
mov
sbb
call
popf
push
mov
push
mov
lods
cltd
dec
loope
xchg
cli
mov
cli
cmp
xor
xor
cmp
or
cmc
jecxz
lds
loopne
xor
pop
clc
push
lods
adc
subb
leave
adc
push
xchg
mov
xor
dec
pushf
sbb
popa
mov
movsl
sub
mov
xchg
xchg
das
sti
mov
add
aad
push
imul
ret
mov
les
push
jo
or
nop
shlb
fidivrs
add
daa
cmp
cwtl
and
pop
push
sub
push
lret
pop
jg
icebp
inc
scas
add
inc
aad
std
aas
les
or
push
add
popf
jecxz
sti
inc
imulb
das
mov
mov
inc
mov
testb
mov
mov
fstpt
into
mov
xchg
mov
sub
xor
mov
sbb
and
and
shll
or
ret
aaa
dec
ss
cmpsl
mov
sub
icebp
sub
cltd
cld
and
ror
std
sahf
cmpl
mov
jo
rclb
fmul
aam
into
push
ret
cmp
jge
clc
dec
sbb
ljmp
and
or
pop
xchg
stc
jo
push
movsb
cmp
unpcklps
add
fdivrp
cltd
sbb
test
sub
mov
push
pusha
xchg
movsl
xlat
test
jmp
xchg
pop
cld
rorl
mov
insb
push
or
sbb
mov
mov
mov
psubd
repnz
mov
fwait
xchg
fwait
mov
aas
test
enter
scas
inc
ja
orb
and
and
sbb
push
shll
std
mov
xchg
xor
pop
xor
bound
push
popf
jns
inc
insl
in
loope
xchg
data16
out
sub
xchg
cmp
addr16
adc
push
outsb
sub
iret
add
jle
cld
sub
enter
daa
and
filds
dec
cltd
jmp
add
cmp
enter
sbbl
cmp
stos
add
pop
insb
dec
cmpb
adc
sub
xor
lds
pop
aas
adc
push
iret
or
xchg
pop
movl
inc
adc
out
xchg
into
loopne
jl
lods
inc
fildll
scas
xchg
add
xchg
imul
lahf
mov
sbb
loop
mov
xchg
imul
leave
dec
call
out
arpl
mov
int3
aam
jge
incl
aaa
or
or
roll
ds
int3
shll
adc
push
gs
jmp
scas
pop
outsb
mov
aaa
sti
outsl
cmp
pop
movsb
adc
int
cli
and
xor
adc
jno
and
jl
pushf
jg
mov
mov
in
dec
movsl
stos
ds
and
adc
jecxz
cli
add
test
push
cltd
fiadds
sub
pushf
fsubrs
pop
insb
call
pop
jmp
daa
repz
daa
mov
cmp
dec
fisubrs
pop
test
xchg
ret
inc
popl
addl
hlt
or
insl
test
xor
rcrl
mov
mov
sub
cmp
pop
lahf
gs
lock
push
mov
sahf
jnp
dec
mov
sahf
flds
dec
addl
sbb
inc
mov
nop
xor
xor
ss
lods
mov
neg
push
addr16
sbb
mov
push
into
cmp
cmpsl
mov
adc
lret
jnp
jmp
adcl
mov
cmp
lods
adcb
xchg
dec
popa
out
jb
cli
outsb
adc
xor
mov
or
movsb
pop
xchg
rolb
or
loopne
pop
inc
pop
pop
adc
mov
xchg
adc
sub
inc
and
lods
sbb
into
cmp
mov
mov
add
lret
sti
imul
loope
dec
mov
out
mov
repnz
les
mov
mov
xchg
lcall
cmp
ja
mov
iret
fwait
pushf
bnd
cmpsb
jbe
pop
and
stos
inc
lock
aas
arpl
and
pop
icebp
dec
mov
and
in
mov
std
xchg
cwtl
imul
mov
orl
pusha
mov
mov
or
sysret
adc
sarl
and
lahf
pop
roll
ss
es
ret
xor
cmp
fildl
add
js
dec
xchg
sbb
insb
lahf
sarl
sub
mov
mov
cmp
mov
js
ret
enter
test
xchg
mov
repnz
sbb
inc
fsubr
lcall
push
jg
das
in
add
fistpll
test
mov
mov
cs
inc
pop
test
repz
xchg
std
push
sbb
cld
shl
adc
pop
std
mov
stos
inc
xchg
fwait
push
stos
dec
icebp
add
xlat
fstps
xor
mov
dec
xor
clc
icebp
mov
fiadds
dec
pop
cli
jecxz
ja
add
inc
push
stos
xchg
or
fs
incb
mov
pop
pxor
jecxz
vpshufd
pop
in
xor
jl
cmp
adc
push
addr16
xor
jp
xorb
jbe
mov
loop
cmpsl
inc
call
pusha
ret
fbld
cmp
jmp
into
nop
cld
orl
popf
add
mov
js
add
leave
xchg
subb
jnp
popf
xchg
scas
xchg
xlat
iret
push
jb
stc
adc
ds
push
je
pop
subb
addl
inc
adc
loop
push
pop
ficoml
fldcw
sbb
xor
imul
dec
fidivs
adc
js
pop
sar
adc
cli
dec
in
leave
ret
addr16
scas
lcall
fs
leave
xchg
sbb
test
sbb
insb
push
add
addr16
lods
xor
pop
aas
mov
push
dec
dec
fidivl
mov
and
and
jecxz
sub
fnstsw
test
hlt
hlt
in
lea
enter
daa
mov
in
jne
jno,pn
xchg
adc
jle
and
inc
ds
enter
data16
decl
test
loope
push
inc
nop
enter
cwtl
xchg
pop
cs
js
fdivr
pop
sub
xchg
push
dec
nop
loope
ss
sub
das
cmpsb
cmp
in
outsb
int3
push
adc
insb
loopne
mov
xchg
sub
in
lcall
mov
xor
int
subl
push
ja
lcall
insl
add
sub
in
ljmp
scas
testb
jns
mov
and
sbb
subb
mov
fcom
mov
mov
enter
pop
pop
lock
cs
and
cmc
je
jmp
outsl
push
jle
loop
and
ret
mov
repnz
and
addr16
mov
push
sar
fs
pop
push
cmp
rclb
mov
pcmpgtb
xchg
pop
pop
ss
adc
leave
or
xchg
mov
rclb
jo
leave
sbb
xlat
pop
sub
pop
pushf
mov
mov
insb
add
sti
sbb
and
aad
aam
nop
ret
dec
mov
movsl
imul
mov
les
sub
push
sub
xchg
lret
lea
sbb
pop
jo
in
or
pushf
popf
fimull
mov
roll
mov
aas
add
lret
add
je
xadd
lea
divb
ficoml
cwtl
es
mov
mov
mov
enter
inc
dec
mov
pusha
into
mov
flds
mov
mov
lock
xchg
das
out
mov
xchg
mov
in
push
rcll
lahf
es
push
dec
sub
shlb
push
test
ficompl
lret
mov
xor
stos
push
pop
fiadds
aad
sub
ja
ret
push
rorl
fldl
sar
lds
ljmp
icebp
lods
daa
neg
mov
std
test
xchg
xchg
push
pop
jbe
psrld
int
xchg
cmpsb
mov
fwait
push
xchg
mov
roll
mov
sarl
andl
push
dec
xchg
add
ftst
dec
push
divl
sbb
orl
mov
mov
and
pop
mov
mov
sub
inc
push
dec
inc
pop
test
sarb
fwait
sbb
dec
xchg
mov
xchg
lds
mov
push
jp
in
ficompl
incl
or
jge
addr16
adc
mov
xchg
or
lret
in
sbb
pusha
pop
xchg
ffreep
orb
lret
arpl
xchg
cltd
and
sbbl
cld
push
push
aam
popf
sub
out
push
mov
jg
call
add
insb
and
add
mov
push
mov
and
ret
loopne
xor
stos
jecxz
jbe
ss
sbb
or
jb
jae
fstl
sbb
cmp
xchg
mov
lcall
loop
ficoms
mov
pop
rcrb
or
dec
pop
mov
cmp
cwtl
arpl
imul
js
aaa
sbb
pop
or
ret
imul
int3
xchg
push
sub
xor
adc
mov
pop
pop
adc
in
xlat
movsb
sub
push
clc
push
daa
cmpsb
add
jmp
je
scas
enter
daa
mov
dec
cmp
sub
out
xchg
scas
jp
xor
movsl
mov
adc
lahf
in
dec
out
push
mov
jne
push
lods
xchg
jbe
pop
stos
cmp
and
int3
pop
push
pop
sbb
arpl
pop
addr16
push
sub
loope
push
sub
xor
cmp
outsb
das
data16
sub
rcl
inc
adc
popl
daa
jns
pop
arpl
and
or
cmpl
mov
jle
sbb
xchg
sub
ja
pop
popf
or
lcall
rcr
jge
jns
sub
into
sahf
pop
jg
test
dec
sbb
sbb
loop
ret
mov
cmc
arpl
cmp
ss
push
push
ret
fcoms
fcomps
lret
scas
shl
lods
mov
int3
sbb
in
addr16
cmp
lea
lret
sbb
outsl
xor
mov
and
inc
adc
andb
mov
mov
mov
adc
pushf
test
and
iret
paddq
or
jp
loopne
fidivrs
adc
hlt
adc
decl
xchg
xchg
xor
sbb
adc
xchg
sub
movsb
mov
xlat
cli
or
gs
cs
dec
aad
dec
adcl
std
arpl
test
push
mov
les
leave
dec
cltd
xchg
das
nop
jl
pushf
jle
pop
and
icebp
pushf
dec
out
test
xor
mov
mov
mov
xor
dec
jbe
test
or
pushf
and
cltd
push
cwtl
loope
fidivl
pop
jns
xorl
mov
add
repnz
mov
jo
lock
es
mov
outsl
xchg
test
lahf
addb
push
cli
push
cmpsl
mov
idivb
mov
scas
cld
movsl
mov
mov
cmp
ja
jno
and
std
xlat
mov
or
ret
out
cmpsb
push
test
mov
clc
add
xchg
xchg
fidivrs
mov
jno
lods
xchg
loope
mov
pusha
mov
or
mov
rdtsc
xchg
flds
and
cltd
mov
mov
test
dec
and
outsb
ret
fsubrl
mov
xor
clc
rcll
call
push
icebp
mov
add
or
sub
xor
or
xor
push
or
fs
mov
pop
jo
and
or
dec
xor
sbb
call
aam
dec
jne
pop
jne
test
add
movsb
push
fsubs
clc
fwait
jns
or
in
aam
xchg
push
lahf
lock
pusha
aad
ret
or
rcrl
call
out
outsl
stos
mov
enter
push
add
mov
pusha
clc
imul
in
gs
sahf
mov
movsb
xchg
fs
subl
aas
popf
push
inc
mov
das
pusha
notl
push
jmp
and
mov
inc
jnp
mov
scas
pop
int3
inc
push
add
sub
or
outsl
iret
sub
pop
pop
insb
push
jle
inc
repz
inc
sbb
inc
push
pop
lret
mov
xchg
or
adc
fidivrs
xchg
shlb
push
mov
mov
push
out
hlt
inc
jmp
arpl
jbe
fs
pop
or
sbb
and
jge
push
int3
or
inc
mov
adcb
popf
adc
jp
xor
outsl
test
scas
mov
push
xor
fwait
sbb
movsb
mov
or
ror
xor
in
pop
add
mov
aas
cmp
push
inc
jno
ljmp
add
push
ds
leave
movsl
mov
lods
adc
or
push
push
jae
push
test
ja
filds
shrl
in
cmp
lods
std
js
cmp
pop
cmpsb
xchg
outsb
push
mov
stos
sub
push
sbb
sub
outsb
xchg
push
cwtl
adc
and
pusha
add
subb
mov
pop
rcll
xor
rolb
mov
dec
push
sub
mov
push
rolb
inc
dec
sub
scas
sub
ret
test
pop
add
xor
adc
ss
fsubl
dec
mov
ss
and
push
fmuls
cwtl
notl
scas
jb
xchg
mov
sbb
sbb
into
out
push
cmc
add
adc
les
adc
jle
xor
ljmp
push
scas
adc
pusha
data16
fxch
lods
xor
mov
lahf
cli
pop
and
jae
mov
idivb
ds
gs
mov
lds
push
pop
je
and
mov
imul
lahf
je
repnz
lea
dec
ret
xchg
mov
adc
les
inc
lds
sti
jbe
xchg
or
jo
and
jp
jns
mov
inc
cmova
xchg
les
xor
pushf
stos
inc
lea
sub
stos
jo
sbb
enter
stos
adc
test
pop
or
xchg
inc
lret
inc
inc
loop
aas
inc
shlb
adc
xchg
add
or
stos
arpl
mov
or
bnd
mov
mov
mov
sub
js
jle
xor
and
aam
loope
sbb
das
lods
xor
mov
divb
and
setl
out
push
sub
inc
fstps
dec
pop
scas
dec
and
cmpsl
mov
cmpsl
mov
mov
call
lret
mov
cltd
test
inc
cmc
xchg
mov
sbb
outsl
rcr
movsb
cld
sub
xchg
jne
xor
inc
repz
fisttpll
mov
xchg
ljmp
adc
std
mov
fsubr
ret
mov
adc
add
seto
add
mov
adc
mov
inc
push
xchg
push
test
xchg
sbb
ss
shr
add
pop
xchg
jb
push
xchg
xlat
insb
add
sub
sar
pop
incb
or
sub
push
xor
mov
sbb
pop
sub
ja
pop
decb
movsl
fadds
xchg
or
jne
fwait
loopne
loope
pop
rclb
or
out
adcl
bound
push
jns
aas
xchg
jl
mov
out
mov
sub
add
lds
sbb
ficomps
xchg
adc
cs
mov
pusha
xchg
push
into
filds
stos
out
jno
sub
rcrl
cmpl
sub
popf
jns
int
push
pop
push
xor
mov
or
mov
into
data16
inc
aas
adcl
xchg
push
ret
inc
pop
mov
or
adc
mov
push
mov
push
fildl
jb
das
sbb
popa
movsl
jl
dec
xor
out
pop
xchg
lds
jnp
mov
repz
xchg
leave
sub
lret
jge
jbe
shll
jge
addl
aaa
add
cmp
flds
int3
insl
movsl
cli
pop
int3
jp
push
icebp
orb
cmp
dec
jo
pop
dec
scas
fwait
push
sub
addl
movsb
aas
dec
aam
xchg
outsb
mov
push
push
mov
inc
mov
aam
mov
stos
cmp
xchg
fwait
jno
lret
dec
jl
xor
mov
jns
movsb
movsl
dec
push
and
xchg
lahf
sub
mov
test
inc
in
inc
cmp
adc
loopne
js
lret
in
sub
std
icebp
loope
cmp
sub
mov
cmp
inc
push
outsb
cmc
cmp
adc
std
scas
int
mov
popf
add
xchg
gs
cltd
inc
repz
xchg
outsb
push
mov
andl
add
pop
fwait
ret
jo
mov
lret
shll
cmp
pop
ss
sahf
les
xorb
shlb
cmpsb
or
and
lcall
adc
or
jb
mov
in
inc
mov
cmp
clc
xor
into
leave
add
leave
mov
push
outsl
repz
loop
cmpl
dec
test
lret
inc
jecxz
lods
sbb
cmc
mov
into
out
adc
cmp
fnstsw
dec
inc
or
jne
gs
mov
pop
xchg
push
jo
pop
sub
mov
add
mov
mov
push
lods
cmp
lret
mov
mov
lods
arpl
outsb
in
aad
insb
dec
nop
push
test
dec
aaa
mov
jns
mov
mov
repz
mov
loope
scas
call
lcall
adc
sbb
bound
sbb
fcoms
aas
fistps
jb
sbb
in
ss
jecxz
out
idiv
jae
std
cltd
shrb
mov
aaa
mov
andl
add
addr16
ja
ret
das
mov
xchg
mov
lods
and
and
fldl
cmp
mov
sti
dec
sbb
push
mov
pop
or
cld
sti
in
sub
mov
dec
add
sbb
scas
ficoml
aam
insb
cs
add
and
fnsave
mov
xchg
add
push
ljmp
cmp
mov
es
pop
int3
leave
push
jmp
xchg
pxor
add
lcall
sbb
mov
jp
xchg
jb
dec
sbb
out
fisubl
sbb
lcall
mov
scas
add
inc
push
sar
cmpsb
xlat
adc
adc
in
fwait
xor
xchg
mov
mov
mov
out
ja
xor
js
sbb
inc
push
or
and
fwait
ud2
cmc
dec
cmp
mov
mov
movsb
sub
bound
hlt
or
sbb
xchg
icebp
sbb
push
sub
cld
add
addr16
mov
mov
fwait
idivl
inc
add
ficoms
pusha
cs
das
fbld
inc
jge
inc
adc
mov
xlat
mov
push
fwait
push
cmp
mov
je
inc
stos
inc
scas
xor
and
loop
jnp
fcompl
scas
pop
xchg
rcll
mov
adc
sahf
mov
out
faddp
stos
rcrb
fnstenv
inc
push
inc
and
addr16
jecxz
ds
pop
enter
xchg
adc
hlt
xor
imul
imul
pop
adc
shrb
mov
inc
mov
hlt
fisttpl
ret
mov
jge
fcoml
sbb
add
cmp
add
jl
pop
enter
test
push
aam
push
xor
and
adc
and
ljmp
lret
push
in
ret
mov
mov
sbb
mov
cmp
adc
rorb
loopne
mov
pushf
jns
movsl
int
cmc
and
pop
cmc
lahf
dec
push
or
mov
test
or
ljmp
lret
js
in
nop
pop
and
lods
push
hlt
xor
sub
sub
nop
outsb
pop
push
inc
adc
fcomps
imul
enter
movsb
cmp
push
ret
int
mov
jecxz
sbb
mov
outsb
jae
fdivrl
sti
sub
adcb
xchg
adcl
mov
sbb
mov
cmpsl
fisubl
pop
stos
mov
pop
fadd
xchg
jae
xchg
orl
mov
push
sbb
adc
nop
fwait
jb
fmull
outsl
shlb
loop
mov
stc
push
add
sbb
lretw
lods
add
mov
out
add
cli
insl
mov
xor
addr16
cmp
jl
or
jo
inc
add
gs
adc
loopne
cmp
mov
lret
adc
add
xchg
adc
mov
jmp
jl
and
ret
mov
xchg
sub
push
dec
mov
sbb
inc
sti
aam
pop
sarl
insl
nop
das
lcall
xor
test
mov
mov
in
call
sbb
pop
cmp
hlt
adc
pushf
dec
andl
inc
fdivr
rolb
in
aas
jle
enter
arpl
mov
je
test
jecxz
scas
idivb
push
cwtl
adc
mov
push
mov
dec
push
cmpl
leave
into
fistl
hlt
stos
mov
jns
lock
inc
das
push
xchg
mov
fs
and
cmp
mov
test
dec
sbb
sbb
nopl
fiaddl
cld
cmp
xchg
sbb
in
and
inc
imul
sub
mov
imul
pop
cmp
cmc
dec
xchg
inc
adc
aaa
xchg
mov
cwtl
or
lds
out
mov
setne
flds
add
mov
arpl
lea
negb
xchg
fistl
test
into
popl
dec
mov
pop
push
cld
mov
push
iret
add
pop
mov
insb
xor
ret
or
sbb
xor
dec
and
sub
xchg
ja
jnp
dec
push
shrl
add
fisttpll
movsl
repz
ds
sub
mov
jne
std
in
or
out
inc
cltd
fsubs
mov
pop
in
mov
stos
out
stos
add
testl
jp
lds
mov
sbb
push
out
in
in
pusha
leave
addr16
xchg
pop
pop
insb
jmp
lds
fistl
pop
mov
popf
pop
cmp
push
mov
adc
cmp
sub
into
ds
jnp
push
sahf
scas
andb
aad
fcoml
popf
lcall
mov
adc
inc
dec
mov
jae
shrb
and
lods
or
pop
mov
inc
ficoml
or
lahf
add
imul
jge
mov
push
mov
test
or
cltd
xchg
out
push
xorl
push
or
lret
sbb
jo
cmp
xorl
sub
dec
add
sbb
int3
inc
mov
pop
push
mov
xchg
addb
scas
pop
fldt
cmp
sbb
loop
xor
out
cmpsb
or
cli
in
adc
outsb
daa
mov
scas
cmp
jno
stc
bnd
stc
jns
dec
icebp
ds
shlb
nop
imul
lahf
imul
push
push
fadds
push
and
js
mov
out
jno
fndisi(8087
popa
sahf
add
jg
cmp
push
or
jecxz
adc
mov
adc
jge
and
arpl
xchg
add
pushf
cmp
mov
push
lds
int
mov
arpl
cltd
mov
lcall
in
fsubrl
pop
ds
popl
test
jno
jg
inc
mov
add
pop
mov
mov
ss
pop
gs
jle
mov
lret
in
rorl
push
sbb
push
mov
into
in
cmc
push
clc
xor
aaa
xor
outsl
mov
outsb
loop
sbb
pop
aaa
sub
dec
push
imul
pop
mov
nop
jp
cli
mov
cwtl
sub
or
xchg
testb
loopne
fdivs
xchg
and
add
mov
adc
int
add
push
xchg
sbb
xchg
out
xlat
push
sarl
mov
sbbl
cmpl
xor
int3
aad
sbb
or
pop
inc
dec
outsl
and
sub
les
xor
sbb
push
movsl
into
mov
call
cwtl
subb
out
movsl
inc
adc
mov
pop
hlt
loopne
inc
pop
cmpl
add
jb
xlat
dec
push
cmp
jecxz
mov
mov
out
pop
cwtl
int
push
mov
and
and
jb
rolb
dec
cmp
loop
test
daa
mov
out
lock
or
jb
sub
sbb
and
je
rcr
dec
sbb
into
call
jbe
adc
sbb
mov
or
outsl
jnp
push
mov
mov
pop
inc
push
mov
jns
ret
rclb
hlt
sub
pop
cmp
push
nop
push
lock
mov
xchg
cmp
ljmp
out
lods
xlat
sbb
out
in
add
sub
fs
shrd
popf
add
or
lcall
mov
mov
xchg
mov
mov
pop
push
aad
fsubrs
and
lock
pop
in
cmpsb
stos
fadd
cld
push
jge
cld
add
jns
pusha
jmp
xchg
jnp
mov
or
mov
jo
repz
pop
push
pop
dec
add
mov
test
or
sti
jo
insl
push
outsb
dec
add
shll
mov
imul
and
bound
mov
jle
sbb
lods
dec
out
push
cmp
repnz
push
addr16
bound
hlt
sbb
cld
rorl
jns
jmp
stc
xchg
and
fbld
test
jmp
nop
repz
and
jns
and
jb
sbb
push
repnz
mov
push
xor
jnp
adc
push
sbb
rclb
stos
or
cmp
ret
jle
dec
in
inc
push
mov
andl
int
xor
fimull
ja
data16
sbb
stos
shrb
mov
dec
lds
cmp
in
pop
div
in
cmpsb
sub
hlt
jno
arpl
jb
mov
cmp
movsb
aaa
inc
outsb
decb
push
mov
popa
int3
mov
pop
push
mov
xor
and
cmp
scas
cmp
cmc
movsb
loopne
test
adc
cmpsb
pop
cld
in
not
xor
daa
mov
cmp
inc
out
jl
cltd
dec
dec
mov
stc
cmc
movsl
lahf
mov
push
push
mov
imul
ljmp
pop
sbb
xchg
js
in
cwtl
pop
mov
call
loope
test
je
xchg
out
mov
push
movsl
mov
mov
or
fcoml
in
sbb
hlt
jg
mov
jno
push
enter
sbb
mov
pop
sbb
push
sbb
inc
mov
sub
bound
test
adc
test
mov
pusha
lret
ret
test
jns
adc
call
fdivrs
stc
shl
adc
xlat
lret
jo
jecxz
lea
sbb
loopne
push
mov
xor
nop
or
loop
mov
stc
test
fs
pop
adc
mov
lods
shrl
mov
mov
je
cli
rorl
pop
xor
out
or
push
pop
or
add
gs
insl
push
loopne
mov
lock
adc
pop
inc
imul
inc
arpl
subb
cmp
sub
xchg
popf
test
loope
cmpsl
mov
out
ss
cs
inc
xchg
aas
mov
in
repz
push
repz
or
jmp
test
iret
lea
mov
nop
pop
or
adc
xor
pushf
lahf
int3
pop
jmp
mov
dec
inc
out
icebp
inc
lods
ss
jb
add
dec
leave
popa
je,pt
in
push
jecxz
or
test
xor
mov
cld
cwtl
mov
adc
mov
pusha
roll
and
fcomi
jne
mov
enter
mov
xor
rorb
mov
shrl
call
test
stos
test
add
scas
outsl
cmp
in
sbb
jl
mov
mov
pop
jge
mov
cwtl
sub
sub
aam
push
add
push
push
add
clc
daa
mov
ljmp
push
lods
test
and
out
dec
shl
xor
lds
or
cmp
adcb
test
fwait
imul
push
jo
test
gs
sbb
cmp
pop
stos
mov
stos
lret
jne
push
and
add
add
xor
or
cmp
popf
inc
xor
mov
jg
mov
inc
mov
pop
scas
push
ja
scas
sbb
hlt
lods
std
inc
das
cmpsb
rorb
add
in
in
add
mov
insb
mov
lret
jns
jp
in
movsl
cmp
fcompp
test
sub
in
rclb
andl
in
xlat
mov
cmp
mov
xor
jle
aad
in
mov
or
jg
pop
xchg
mov
pop
sbb
roll
adc
imul
add
adc
jnp
aad
scas
dec
fidivrs
push
into
sbb
add
push
jg
xchg
inc
bound
loopne
sub
cs
xlat
and
dec
adcb
and
imul
cld
lds
sub
sarb
add
aas
in
push
leave
add
stos
hlt
mov
lods
es
push
sub
inc
cli
sbb
mull
or
cmc
fildl
xor
sub
mov
aad
jge
jb
push
fwait
into
jo
add
pop
jne
and
dec
cmp
push
add
iret
pop
cmpsb
adc
in
fdivrp
mov
or
fdivrs
ficompl
jl
push
movsb
dec
sub
sub
movsl
loop
repnz
loop
lahf
cmpsl
jge
push
xchg
mov
test
outsb
outsl
xchg
mov
mov
inc
pop
aas
xchg
lods
js
lret
push
pop
loope
dec
push
adc
nop
xor
popf
loope
xchg
je
outsb
sbbl
shrb
pop
cmp
push
sbb
sbb
lds
fs
and
int
push
pop
sub
or
xchg
popa
mov
push
jae
push
fdivrl
add
sahf
icebp
mov
xchg
andb
jg
adc
mov
jne
mov
dec
loop
xchg
fcoml
cmp
hlt
mov
ror
in
insl
clc
lcall
sub
sbb
es
in
clc
xor
xor
outsl
outsl
loop
andb
outsb
je
adc
mov
mov
lods
hlt
out
repnz
push
dec
pop
xor
cld
loopne
imul
sub
int3
dec
mov
adc
scas
adc
in
add
mov
sbb
je
pop
xlat
shr
in
push
cmp
mov
pop
and
sbb
cli
cmc
xchg
nop
shl
dec
mov
and
jecxz
fstps
or
repz
and
stos
sub
lea
mov
adc
xchg
sbb
adc
hlt
pushf
dec
mov
jmp
inc
jle
cmp
inc
insl
mov
dec
aas
pop
jecxz
jb
testb
push
je
lea
testb
popa
cwtl
inc
and
push
mov
ja
addl
call
aad
outsb
mov
mov
push
fwait
lock
stos
das
pop
push
mov
cwtl
inc
cwtl
mov
mov
mov
jns
mov
insl
ror
or
pop
shlb
jae
or
mov
push
fmul
in
imul
sbb
adc
mov
mov
js
sti
mov
xor
push
lahf
ret
inc
add
scas
fstl
clc
bound
mov
popa
fwait
add
mov
mov
or
push
mov
packssdw
scas
add
incl
add
test
sub
xchg
or
sbb
loope
sahf
pop
iret
pop
push
dec
sti
stos
mov
sarb
add
data16
pop
jb
or
aam
xor
jb
mov
idivb
mov
rorb
xor
xor
or
and
lret
cmpsl
ljmp
aad
mov
subb
pop
pop
mov
in
cwtl
outsb
xchg
sub
or
sub
call
ret
sbb
outsl
arpl
push
loopne
mov
mov
in
pusha
lcall
xchg
nop
and
jmp
es
inc
addl
push
cmpsl
mov
pop
mov
jo
dec
stos
or
fadd
insb
cmovl
cmp
scas
stos
mov
push
stos
adc
iret
bound
cmp
inc
insl
xor
pop
adc
inc
sub
xchg
outsl
push
push
repnz
scas
xchg
add
mov
mov
fimuls
sub
aad
add
xchg
gs
mov
push
jbe
sarb
das
add
mov
jmp
or
fwait
add
in
or
pushf
mov
mov
sahf
push
pusha
out
mov
xchg
sbb
scas
testb
bound
movsb
imul
jae
and
jl
xchg
enter
push
fcmove
push
fisttpl
scas
mov
or
dec
push
cmp
lods
xchg
sub
movsl
jmp
divb
lahf
call
jns
repnz
adc
cmp
xor
dec
rcl
ja
hlt
pop
data16
js
ds
pop
and
dec
push
loope
mov
cmpl
in
jae
sbb
arpl
inc
xchg
push
lcall
sbb
dec
xor
add
int
jae
mov
pop
push
xchg
mov
push
lret
fsubrl
out
sub
pop
inc
test
js
jg
jl
mov
cld
bound
mov
jecxz
ss
sub
scas
scas
xor
lock
lret
popf
rcll
mov
adc
into
cmp
je
lods
data16
dec
push
mov
loop
adcl
fs
adc
adc
dec
data16
fidivrs
mov
add
hlt
ds
cmp
xorb
push
push
cmp
jns
or
and
ror
xor
pop
cmpsb
loopne
es
adc
nop
imul
pop
js
mov
cmpsl
cmp
mov
mov
out
sti
nop
cmpsl
ljmp
pop
pushf
push
aad
mov
dec
adc
jle
subl
les
ret
cwtl
fcmovb
scas
push
loop
in
daa
call
adc
orl
pushf
cmc
addr16
jmp
xchg
and
pop
daa
inc
hlt
jno
inc
jecxz
cmp
cli
aad
mov
mov
out
add
test
std
fdivrl
mov
std
inc
pop
adcl
repnz
mov
test
lock
adc
out
cmp
inc
sub
jb
enter
push
or
insl
mov
inc
in
lods
mov
mov
xchg
jecxz
cld
rorb
xchg
lret
push
pop
dec
mov
insl
sbb
inc
ror
repz
inc
aam
ds
iret
gs
fld
sbb
clc
popf
outsb
jae
aas
ljmp
ja
jg
inc
mov
adc
jmp
push
xor
bswap
cmc
jmp
cmpsb
or
xchg
test
add
xchg
pop
mov
test
dec
aaa
xchg
out
sbb
stos
pushf
pop
add
in
stos
mov
jbe
mov
lret
inc
push
push
xor
scas
clc
xor
jnp
mov
cmp
popa
pop
clc
int
out
repnz
dec
fisubrl
inc
pop
or
pop
fwait
cli
clc
add
decl
mov
stos
push
lock
dec
jns
out
adc
mov
add
pop
adc
sub
jecxz
sbb
jp
mov
jg
jge
cmc
mov
inc
in
loop
imul
icebp
in
xor
cmpl
ljmp
icebp
xchg
repnz
pusha
popf
arpl
mov
scas
fsubrs
subb
cwtl
bound
insb
jp
sub
call
sub
adc
push
adc
ret
daa
pop
in
cmp
inc
js
test
scas
mov
inc
cmp
dec
fwait
adc
inc
push
fisubl
sub
dec
xchg
and
loope
fisubrs
enter
xchg
mov
mov
in
ror
mov
hlt
push
fistl
jbe
in
jge
std
sbb
pop
mov
aaa
jg
lods
or
mov
int3
out
loop
pop
out
add
inc
scas
dec
xor
in
dec
test
cmc
in
mov
pushf
sbb
movsb
addl
popa
in
lods
add
enter
daa
lods
xor
cmp
shll
leave
jl
jb
dec
or
ds
pusha
into
movsl
lock
cmp
cld
sbb
push
cmp
test
add
mov
cmp
das
js
inc
lods
pop
pop
mov
push
push
add
mov
or
cmp
movsl
add
mov
out
pop
push
rolb
fildl
add
cmp
xor
mov
push
shrl
int
nop
jp
or
call
push
and
dec
mov
into
sahf
aaa
je
test
push
lret
mov
or
jo
jle
add
imul
jo
cmp
push
fincstp
dec
xchg
push
lret
cmpsl
shrl
sbb
jmp
into
sbb
cmc
jae
mov
outsl
sub
mov
stc
test
add
pop
mov
jo
pusha
dec
out
jp
cli
insb
jecxz
xor
cmp
lret
inc
pop
mov
gs
ss
adc
dec
cmp
adc
cwtl
imul
jb
xchg
dec
and
testl
and
cmp
mov
das
jle
sti
aas
push
cltd
shlb
aad
sub
nop
jbe
stc
dec
jno
pop
inc
xchg
daa
pop
ffreep
jge
inc
repz
pop
dec
mov
lea
dec
call
xchg
ret
mov
jnp
pushf
mov
mov
pusha
inc
jnp
mov
incb
aas
cltd
inc
xor
bsr
dec
cs
je
leave
inc
jecxz
xchg
cmp
mov
dec
std
cmp
cwtl
mov
and
mov
shrb
icebp
dec
dec
in
xor
jge
pop
mov
pushl
cltd
daa
imul
lret
mov
mov
xchg
push
rcll
push
mulb
fisubrl
xor
shll
sbb
fstps
sar
vprotd
mov
je
lret
mov
cmc
lock
shlb
cs
aam
xor
push
pushf
iret
sub
clc
fdivrs
mov
jbe
xor
lods
ljmp
out
js
jne
push
push
rcll
pop
jle
sub
loopne
mov
cmp
pusha
shrd
mov
dec
test
test
push
roll
enter
dec
sbb
stos
cwtl
sub
push
or
add
in
loopne
pusha
inc
popf
xor
lea
sub
ljmp
dec
adc
mov
dec
sti
dec
ja
fiaddl
int
mov
jbe
or
fwait
or
sub
ljmp
scas
and
pushf
mov
bound
mov
push
xchg
lret
stc
test
lcall
or
mov
addr16
inc
jp
mov
cld
mov
jle
or
popa
jne
adc
lock
fdivl
pop
jmp
mov
test
popf
mov
inc
push
out
jo
stos
repz
and
js
jnp
mov
scas
jno
or
lcall
and
xor
pop
and
sub
lcall
dec
sub
ljmp
push
inc
push
pop
test
xchg
ret
sbb
mov
imul
rcll
lds
cmpsl
xor
cmp
iret
leave
imul
bnd
jle
jge
mov
sbb
xor
aaa
jns,pt
or
jecxz
add
cs
int3
movsl
pop
adc
popa
in
xor
inc
mov
scas
mov
and
negb
or
xlat
push
mov
add
cmc
enter
daa
lods
pop
cmpsb
cmp
loope
push
loope
jl
aam
jp
bound
outsb
push
movsl
divl
lahf
add
and
test
iret
leave
mov
xchg
not
std
add
pop
mov
js
jbe
cmpsl
pop
sahf
jmp
push
test
aam
push
sub
adcb
in
outsb
stos
xor
adc
cli
dec
outsl
pop
insl
pop
add
sbbl
push
je
out
ret
movsb
push
push
aam
jp
mov
push
mov
adc
push
lcall
adc
andb
nop
push
mov
test
je
xorb
jg
pop
lret
movsb
clc
mov
leave
test
and
mov
movsb
cmp
and
sar
inc
cs
mov
bound
cmc
cmp
outsl
or
adc
stc
pusha
jbe
cmovbe
inc
lods
insl
pop
mov
mov
xor
scas
stos
cmp
out
mov
push
arpl
gs
dec
loopne
adc
pop
insb
jo
adc
jbe
imul
and
push
stos
xchg
push
push
rcrb
and
out
loope
lods
jne
mov
lcall
cs
jge
pop
and
call
inc
cmpsl
pop
stos
fnstcw
adc
les
pop
pop
mov
rorb
addb
pop
xchg
pop
outsb
in
fists
outsb
test
pushf
dec
push
jmp
jmp
lods
pop
and
inc
add
test
cmp
jge
bound
mov
inc
data16
jecxz
hlt
mov
std
sub
mov
sbb
repz
dec
sarb
fldt
pop
mov
sbb
lock
jae
das
movsb
test
mov
scas
loopne
and
lods
psrlq
andb
mov
mov
cmpsl
stos
add
mov
inc
popf
sub
sub
jb
xor
mov
jnp
mov
in
push
pop
adc
add
je
int3
sub
aam
ja
ret
in
repnz
push
pop
push
push
ffree
inc
das
clc
adc
ljmp
in
lods
push
insb
gs
sub
call
in
jge
int3
push
ret
cltd
lods
cltd
push
test
into
mov
ja
xchg
aad
dec
in
mov
test
cmpl
push
sbb
icebp
shll
or
stos
xchg
js
lods
cmp
add
add
clc
cmp
push
out
push
or
mov
mov
mov
pop
or
xchg
sub
insl
inc
and
hlt
sbb
or
adc
xchg
dec
jo
jbe
push
xor
mov
cmp
bound
leave
stc
jns
cmc
mul
aam
in
xchg
sbb
imul
loope
imul
or
mov
mov
in
cmp
ret
iret
sub
imul
sti
jmp
xchg
or
jmp
xchg
out
mov
aam
lock
loope
inc
jecxz
push
sub
cmpsl
add
loop
insb
push
int
jnp
test
push
jg
xlat
adc
mov
xor
pop
pop
stos
cwtl
inc
mov
out
inc
ss
mov
push
sarl
fcmovb
mov
xchg
sbb
mov
mov
fidivs
lds
and
es
mov
mov
dec
leave
loopne
fcomip
call
sbb
inc
jge
inc
pop
sbb
outsb
sub
std
add
add
xchg
add
xchg
pop
arpl
or
cltd
xor
mov
fcom
and
pop
loop
or
xchg
cmp
push
jno
cmpsb
push
rclb
jp
enter
das
daa
stos
or
jno
loop
jl
cmp
dec
loop
xchg
push
sub
xor
cmpsb
push
fisubs
test
lcall
sarb
js
or
pop
inc
loope
and
sub
lret
jecxz
push
out
outsb
or
and
rcl
inc
jmp
mov
xchg
dec
pop
xor
test
fildl
int
pop
or
decl
pop
xchg
aas
dec
lcall
push
fsubrl
out
sub
sahf
jge
pop
test
filds
dec
xlat
jmp
mov
fdivl
nop
and
cmp
loopne
mov
int3
insl
ror
test
rcl
in
mov
popf
pop
into
loope
outsl
cmc
add
xor
sub
inc
mul
pop
mov
pop
fs
pop
jg
lods
push
adc
mov
aam
mov
mov
rorb
xor
mov
out
and
sahf
adc
and
pop
mov
pop
imul
pop
add
in
xchg
rcrl
sbb
pusha
filds
sub
inc
jge
push
cmp
in
add
divb
aad
xchg
sub
je
das
dec
mov
fnstenv
fwait
les
mov
adc
call
xchg
jnp
pop
and
and
testb
pop
outsb
push
inc
mov
add
bound
jb
out
dec
sbb
jno
mov
jecxz
cwtl
pop
notb
xor
shll
or
fdivrl
cmp
pop
sahf
xchg
sahf
fcmovnu
push
mov
push
loop
shl
add
dec
aam
das
orl
mov
fstpl
shll
inc
xchg
insl
outsb
sub
push
cmpsl
stos
jb
mov
pop
mov
cld
push
sbb
lret
mov
xorl
xorb
jg
mov
xor
int
inc
fldenv
push
out
ljmp
pop
and
inc
out
fucomp
or
clc
dec
sbb
xchg
cld
cmp
pop
inc
popa
neg
jle
rcrb
out
ds
xchg
xchg
scas
push
push
ret
dec
loop
out
mov
ffreep
insb
cltd
in
iret
test
sbb
fsubrs
dec
push
add
test
jge
xchg
out
jp
fnstsw
sar
lea
or
push
dec
repz
add
lcall
sub
sbb
sub
rorl
mov
push
dec
mov
mov
rorl
dec
lods
inc
and
adc
push
jge
jne
sbb
xchg
bound
in
adc
pop
stos
add
mov
movsb
push
or
xor
addr16
imul
mov
pop
fbstp
in
aam
pusha
push
sbb
xchg
fdivl
jmp
push
lea
mov
movsl
popf
fcomps
pop
push
insb
sub
pop
and
fadds
jnp
sbb
scas
aaa
clc
push
pop
cmpsb
adc
push
jb
inc
add
xchg
pop
or
jae
and
or
mov
pop
aaa
fidivrl
jge
jo
sbb
lock
add
ficoms
inc
mov
sbb
rolb
mov
ficoms
leave
push
pop
fxtract
xor
arpl
or
pop
sbb
push
fwait
or
mov
add
add
scas
xchg
pop
jae
ds
in
mov
mov
scas
jb
inc
and
xchg
andb
sti
cmpsb
mov
cmp
enter
daa
stos
cmp
fnstcw
jno
pop
stos
jl
mov
pop
ds
cmp
and
or
lahf
inc
mov
sub
into
in
push
decl
sub
pop
add
inc
js
into
scas
pop
sbb
ja
xchg
add
loope
in
sub
call
xchg
outsb
jo
rcll
push
inc
push
jo
sub
and
sbbb
cld
cmpsb
mov
outsl
push
stc
push
fiaddl
test
xchg
pop
adc
inc
push
es
jno
cmp
sub
aas
sahf
and
mov
into
in
subb
pop
mov
sbb
xchg
cmpsl
shlb
out
fdivrs
fwait
or
testl
cmp
mov
pushf
es
les
cmp
mov
outsl
lret
loop
or
into
addr16
and
adc
lods
cmp
icebp
out
and
cli
add
in
cmp
mov
or
fmul
loopne
push
pop
pop
stos
in
adc
cmp
insb
addr16
mov
add
lods
sbb
fwait
fcom
or
dec
sub
ror
jo
jb
dec
out
push
cs
dec
test
pop
stc
dec
dec
mov
test
int
xchg
fldcw
adc
repz
mov
cmpsl
inc
call
adc
or
daa
xor
sbb
mov
jmp
imul
inc
adc
sahf
inc
dec
or
xchg
jb
dec
add
into
xorl
jecxz
addb
push
mov
daa
cwtl
ljmp
mov
jne
xor
add
fisttpl
sbb
mov
jmp
mov
pop
push
das
bound
mov
sbb
xchg
and
fildl
roll
and
arpl
je
push
rcl
lock
cmpsl
test
inc
lods
icebp
out
out
cld
jle
loopne
sqrtps
mov
sub
push
fsubl
sub
gs
add
in
add
adc
daa
les
iret
outsl
frstor
xor
lods
sub
repz
mov
or
push
sahf
pusha
push
cmovbe
outsl
add
imul
mov
insl
sbb
dec
mov
or
sbb
add
rcll
sub
inc
stos
gs
xchg
push
repnz
bound
ss
cmp
fwait
icebp
or
jmp
inc
mov
sub
mov
jns
in
ja
test
insb
inc
mov
test
dec
ss
sahf
jne
arpl
mov
sbb
out
cmp
bound
scas
jns
mov
xchg
mov
mov
sub
iret
aam
or
pop
out
outsl
mov
lret
sub
jle
and
sub
push
fistpll
sub
cmp
xchg
sbb
dec
jbe
jbe
dec
popf
jg
mov
stos
push
mov
hlt
repnz
insb
es
scas
lcall
adc
jnp
cmp
repz
leave
test
test
iret
mov
and
push
rol
dec
fisubrl
cmp
sbb
popa
mov
inc
jle
mov
rcrb
inc
push
repnz
cmp
into
sub
hlt
jle
dec
arpl
in
je
jbe
add
sbb
dec
aaa
jnp
je
ret
es
add
inc
mov
mov
aam
adc
repnz
push
mov
inc
cmp
dec
movsb
lods
mov
leave
cmpsb
and
pop
in
dec
mov
ret
lock
or
xchg
jno
dec
add
cmpsb
dec
xor
xlat
inc
andb
test
lahf
popa
cmp
push
test
test
xor
add
add
pop
sub
scas
js
and
aaa
push
dec
inc
loope
repnz
fcmovb
cmp
sahf
pop
adc
mov
jne
jl
sti
out
mov
mov
ret
sbb
lods
push
ffree
xchg
in
mov
mov
xchg
inc
dec
lcall
out
sbbl
sahf
ret
dec
js
push
xor
add
sbb
rolb
mov
mov
jne
and
add
ss
adc
push
adc
testl
fadd
add
popf
mov
lock
pop
or
cmpsl
xchg
add
out
sub
nopl
test
xchg
or
test
fs
ret
stc
inc
gs
lods
and
mov
out
mov
sbb
cmp
push
adc
add
ljmp
testl
pop
leave
and
adc
js
adc
or
xchg
push
insb
sbbb
inc
inc
xlat
dec
xchg
sub
add
mov
fistpl
fdivr
sti
test
imul
loop
pop
dec
in
pop
xchg
inc
loopne
ftst
cmovp
test
ffree
mov
inc
in
repz
mov
push
inc
adc
std
pushf
dec
push
jmp
mov
inc
xchg
iret
push
inc
push
adc
adc
loop
dec
or
and
jecxz
lods
stos
notb
in
cwtl
movsl
mov
mov
fistpl
fstpt
and
popa
lods
xchg
lock
push
dec
mov
sarl
popf
and
lock
rcll
push
es
push
insl
cmp
dec
dec
jmp
pop
cmpsl
test
ret
mov
lds
cld
test
or
mov
nop
cmc
xchg
mov
jno
outsb
shr
and
inc
ds
aam
inc
push
ret
lcall
fnstsw
xor
cmpsb
xchg
jp
cmpsl
ljmp
subb
jnp
add
xchg
jns
es
movsb
add
xchg
mov
dec
movb
inc
cli
test
sub
xchg
jp
sbb
aad
push
inc
int3
stos
push
fmuls
push
xchg
cmp
add
push
notl
xor
das
or
sub
push
xchg
cmpsl
mov
mov
mov
xor
sub
mov
mov
test
fwait
in
jb
sbb
inc
mov
cmpsb
shr
sbb
iret
or
jns
lret
into
in
sub
out
add
sub
lret
or
add
mov
jne
push
mov
mov
outsb
and
sbb
add
fistps
and
pop
push
notl
push
into
push
cmp
fwait
mov
ljmp
and
xor
insb
xchg
ret
push
xchg
inc
scas
std
cwtl
jge
push
scas
rclb
stc
outsb
iret
pushf
pop
mov
pop
add
pop
jae
rorb
cli
into
or
mov
adc
test
jo
push
lds
cmpsl
xor
ficomps
mov
fisubrl
shlb
mov
test
pusha
hlt
leave
pop
sbb
mov
aaa
jge
bound
lcall
mov
xchg
add
push
int3
xchg
sti
push
mov
ret
xor
mov
outsl
scas
xor
and
das
lds
cmp
push
sti
jae
cmpsb
cmpsl
out
mov
das
sub
test
mov
jno
mov
or
ss
push
ds
sbb
movsl
adc
lret
adc
cmpb
test
sti
test
or
stos
js
punpcklbw
lcall
loope
into
xchg
sub
lahf
jp
pop
xchg
add
aad
shlb
pop
aam
daa
orb
dec
sbb
cmc
jb
adc
sbb
push
loopne
or
ret
mov
pop
adc
jns
aam
and
sub
stos
sub
sahf
addr16
fsub
daa
sbb
jg,pt
push
loop
stc
gs
jae
mov
dec
xor
cld
mov
inc
cmp
adc
or
dec
ffree
fwait
das
jp
popa
in
sbb
out
into
mov
cmp
push
fisubrs
clc
xor
sbb
cmp
cmp
movsl
callw
lods
or
out
aam
cli
imul
cmp
int3
pop
or
sbb
mov
jbe
loopne
ficomps
call
rcll
imul
filds
cmpsb
adc
sbb
fcompl
adc
xlat
mov
sub
mov
inc
fimull
stos
sub
cs
xchg
ja
push
nop
mov
out
inc
repz
fstps
push
push
les
jmp
shlb
call
pxor
pop
cmp
mov
lret
pushf
negl
inc
jmp
insl
add
inc
push
fcomi
inc
test
xchg
jb
lods
decb
mov
xor
neg
mov
cltd
add
sbb
adc
andl
jne
push
icebp
and
sub
push
mov
mov
mov
jle
leave
shll
pop
insl
and
icebp
cmpsl
cmpsl
xlat
cmpsb
mov
pushf
shlb
aam
pop
lret
in
test
mov
xchg
dec
mov
nop
loop
rol
xchg
clc
sub
aam
ficoml
ret
sub
je
arpl
cmp
mov
mov
cmp
aam
add
push
mov
addr16
add
imul
adc
add
inc
add
push
insb
cltd
mov
call
xchg
loope
dec
mov
and
lods
loope
xchg
loop
inc
addr16
sti
pop
add
mov
cmp
enter
mov
insb
jnp
fnsave
mov
inc
or
mov
jmp
mov
ss
mov
out
mov
ja
sbb
cmp
mov
aad
adc
jge
cld
mov
jne
and
xchg
out
imull
jmp
fucomip
jns
mov
in
push
xchg
push
aam
out
ret
jge
pop
or
rorb
addr16
repz
test
mov
mov
mov
test
scas
push
in
cmp
xlat
insl
xor
ja
adcb
movsl
xchg
mov
sub
adc
popf
dec
lock
es
xor
push
insb
cld
leavew
jnp
jae
scas
pusha
icebp
xor
outsb
in
adc
mov
ret
ret
or
cmp
inc
mov
mul
inc
inc
dec
push
or
sub
sbb
adc
jle
jne
repz
rcll
add
lds
aas
rclb
fdiv
xlat
data16
mov
jne
arpl
int
jbe
dec
mov
mov
sbb
pusha
pop
or
jno
enter
mov
xor
push
add
scas
and
pop
cmp
rclb
ret
mov
dec
push
sti
cmpsb
sub
enter
daa
cmpsl
out
cmp
mov
jl
jg
dec
movsl
sub
push
movsl
sbb
repz
inc
mov
sub
test
movb
icebp
repnz
int3
xor
pop
ja
stos
js
lea
pop
fld
and
xchg
loope
stc
icebp
sub
cmp
push
lcall
or
icebp
jnp
xor
xchg
sbb
add
addb
movsl
leave
int
lods
jnp
jmp
sbb
lcall
nop
sub
sub
inc
enter
daa
test
mov
jg
fstp
mov
pop
stos
mov
clc
mov
ja
and
test
ss
subb
fistpll
lret
add
mov
sbb
insl
xchg
cmc
sbb
pop
daa
outsl
addr16
mov
fs
mov
adc
shlb
dec
lods
lock
mov
insl
out
jb
cli
sahf
xchg
xor
jg
xchg
adc
sar
lds
pop
gs
fneni(8087
movsb
inc
jbe
pop
mov
adc
ljmp
sbb
add
dec
ljmp
hlt
sbb
enter
in
popl
lods
xor
sti
pop
insl
mov
adc
pop
aad
repz
jbe
inc
push
aam
fsts
imul
jno
repz
imul
mov
ret
jb
mov
das
adc
aad
pushf
mov
adc
mov
dec
mov
xchg
aas
push
mov
mov
stos
pcmpeqb
shlb
std
insl
xor
mov
mov
or
dec
call
xchg
ret
pop
mov
add
lock
xor
mov
inc
push
aas
and
sbb
es
in
insl
or
cmp
cmpsl
cmpsb
push
cmp
jae
popa
cld
lcall
push
lret
pop
repz
sahf
or
pop
scas
jmp
rclb
push
mov
ret
mov
cmpsb
aaa
fisttpll
les
xchg
clc
pop
movsl
ljmp
lcall
lods
jecxz
lret
xchg
mov
push
push
das
sbb
aaa
add
xchg
bound
mov
fcomi
xchg
inc
sbb
push
adc
into
adc
pop
rcll
or
stos
xor
push
fistl
add
xchg
popf
lcall
inc
mov
or
xchg
imul
arpl
aaa
mov
ja
sbb
cmpsl
inc
jle
nop
or
loop
fwait
inc
mov
dec
jne
pushf
lahf
mov
cld
shr
and
cmc
out
jns
cmp
xchg
movsl
gs
lods
cmc
das
sub
shrb
push
push
xchg
jp
js
mov
popa
out
mov
sbb
mov
pusha
jb
xchg
mov
xchg
sub
shr
dec
shlb
xchg
jle
popf
cmpl
mov
mov
push
push
add
cmp
push
insb
addr16
jnp
sbb
scas
ret
cmp
insb
adc
xchg
xchg
iret
pop
inc
pushf
ret
fcomps
jne
inc
jae
jo
inc
inc
or
or
cmpsl
mov
push
fiaddl
test
clc
scas
pop
imul
icebp
fisubs
inc
shrb
push
repnz
xchg
hlt
pop
fistps
mulb
pushl
lcall
jns
daa
aaa
mov
mov
addr16
pop
add
das
mov
xor
imul
and
popf
test
dec
test
cltd
je
cmpsb
lods
pushf
addr16
std
movsl
push
enter
daa
cmpsb
daa
jecxz
movsl
rolb
pop
add
addr16
ds
stos
inc
movsl
and
and
arpl
push
std
push
loop
stos
pop
pop
push
xchg
pop
jo
adc
xor
pop
sahf
test
js
lahf
cmp
sbb
sub
lretw
dec
jge
mov
jo
outsb
cld
sahf
cs
sbb
cmp
xor
xchg
pop
push
add
ja
xor
les
sub
jnp
push
scas
sbbl
or
sub
mov
outsb
test
ja
adcb
jg
imul
mov
idiv
and
lods
test
cmp
xchg
lret
test
leave
mov
mov
and
sbb
scas
into
push
outsl
test
in
je
and
outsl
inc
fdivl
stc
stos
cli
mov
adc
inc
test
lcall
cmp
xchg
sbb
xor
xor
or
call
mov
and
std
inc
adc
aaa
and
adc
or
add
sub
xchg
mov
pop
repnz
loopne
sub
cltd
mov
sbb
xor
or
jne,pn
mov
add
or
or
xchg
inc
sbb
and
mov
inc
lret
repz
clc
mov
aad
sbb
fsubr
fs
or
push
adc
dec
pushf
dec
cmc
jle
test
lret
push
push
inc
mov
test
jb
loopne
dec
outsl
cmp
je
hlt
mov
mulb
aad
adc
xchg
cwtl
or
mov
add
jmp
sahf
dec
push
cld
sbb
imul
inc
lock
loop
das
fisubrs
imul
xchg
sub
roll
shll
outsl
mov
insl
icebp
repz
dec
fsubrl
cmpsl
movsl
pop
jno
or
dec
sub
sub
lret
lret
lret
shll
push
and
xchg
pop
into
clc
or
data16
sub
add
aam
add
ret
inc
cli
cmp
fucomip
fnsave
and
xchg
aaa
icebp
lods
ljmp
inc
lods
xlat
or
mov
sub
insl
iret
push
or
add
push
movsb
cltd
testl
mov
mov
out
stos
dec
push
xor
dec
sub
shrl
in
arpl
jle
loop
scas
cli
int3
add
push
outsb
xor
fisttpll
insl
xchg
mov
mov
push
adc
gs
ja
mov
add
or
push
xor
ret
jne
jbe
mov
cmp
mov
mull
and
jns
gs
jecxz
xchg
hlt
cmp
out
popf
scas
sub
mov
aaa
dec
jp
arpl
mov
xchg
mov
inc
leave
inc
pusha
or
test
xchg
sti
jo
jmp
dec
add
orl
xor
and
popf
fwait
lock
push
cmpsl
or
sbb
sbb
push
ret
nop
insb
shrb
int3
jnp
cmpb
sbb
iret
mov
ret
cmp
push
ljmp
jb,pn
dec
inc
cmp
and
inc
int
add
stc
cmc
mov
and
cmp
jo
imul
enter
dec
lds
lock
and
jge
pop
leave
stos
loop
hlt
stos
popf
sub
add
pop
pop
jge
cmpb
ja
in
popl
pop
add
add
inc
ljmp
pop
cmc
sbb
les
test
lea
pop
movsb
fnstenv
frstor
in
or
flds
bound
movsl
in
arpl
fsubr
push
jno
fistpl
dec
xorl
arpl
movsl
sub
shlb
aam
aaa
lahf
frstor
push
rclb
shrb
pop
ret
in
pmuludq
push
test
pop
lds
jl
adc
pop
push
in
sub
andl
insb
or
outsb
pop
fsubrl
fwait
or
shl
mov
sub
xchg
test
add
cmp
jge
jmp
sub
loope
filds
lea
push
enter
sbb
ds
dec
imul
subb
outsb
jg
stc
icebp
mov
fadd
mov
in
cs
lret
sub
mov
repz
cmp
inc
std
xor
inc
push
mov
jmp
shll
mov
jge
sbb
dec
mov
stos
leave
jg
jnp
push
and
mov
stc
popa
jns
fcoml
adc
loopne
jno
push
lods
mov
in
mov
cli
add
and
or
add
and
or
add
cmp
pop
inc
dec
pushf
adc
mov
imul
or
add
movsl
xchg
arpl
jecxz
das
mov
mov
inc
push
shrl
shr
pop
mov
xchg
add
mov
lcall
add
dec
incb
dec
imul
jg
aad
dec
repz
xlat
leave
es
lea
test
pop
push
or
iret
mov
addr16
mov
pop
cwtl
dec
lret
inc
mov
ret
inc
nop
js
xchg
push
divb
inc
mov
je
fmull
jecxz
add
mulb
punpcklwd
push
ljmp
out
pop
dec
cmp
pop
xor
jge
clc
lock
mov
mov
scas
add
daa
jnp
repnz
push
dec
xlat
mov
movsb
loopne
mov
and
sub
cmp
jns
lods
lods
js
and
pop
in
or
sub
xchg
jb
mov
mov
clc
mov
or
push
xor
and
pop
mov
nop
mov
xchg
shlb
and
add
pusha
cltd
sub
test
jns
xchg
insb
decl
jns
test
jp
xchg
shlb
inc
pop
roll
xor
and
dec
add
mov
bound
xor
imul
inc
mov
xchg
das
dec
mov
and
xchg
ja
test
dec
gs
inc
lods
ror
or
lcall
movsl
xor
jne
mov
mov
mov
jbe
sbb
xchg
in
sbb
jb
mov
clc
sub
mov
push
addr16
xchg
jp
add
ja
nop
mov
idivb
out
in
es
test
es
push
pop
xchg
into
or
cmp
xchg
adc
jae
inc
sub
mov
out
es
mov
insb
cmp
mov
scas
mov
sub
mov
jno
ret
pop
stos
inc
mov
xor
dec
ljmp
popf
aad
inc
dec
jae
fisubrl
loopne
dec
push
fldt
repnz
fsubrp
add
pop
shl
fidivrl
rorb
leave
and
cli
hlt
cmc
scas
popa
arpl
insl
jbe
cwtl
cmp
push
push
sbb
inc
test
ss
jb
cmp
add
movsl
push
push
ds
pop
xor
pop
outsb
xchg
and
ljmp
test
cmpsb
mov
fsubr
lret
mov
enter
daa
movsb
xor
sub
fadd
jl
mov
dec
repnz
xchg
pop
movsl
das
jne
and
push
lahf
cld
repz
cmp
test
daa
adcb
pop
dec
adc
mov
rcll
inc
push
push
push
push
loope
push
fldt
std
cmp
push
outsb
ret
adc
rolb
push
fdiv
sbbb
sbb
jnp
ds
scas
xor
arpl
in
pop
inc
int
rcrb
clc
pop
or
pop
lcall
jae
fmuls
sahf
repnz
lret
test
cwtl
orb
jg
mov
mov
addr16
mov
icebp
inc
and
aad
ss
cmp
std
jmp
je
fisubrs
jnp
or
stos
into
push
sbb
jb
imul
add
sub
fs
daa
fs
adc
les
rcll
lods
movsl
std
mov
out
lods
cli
aaa
push
xchg
jecxz
push
cmp
jmp
cmp
in
test
pop
loopne,pt
call
sbb
imul
pop
loop
loop
xchg
xchg
es
sbb
std
push
mov
test
sub
mov
in
repnz
cmp
jge
sub
pop
dec
enter
aas
call
pop
loopne
push
repz
or
int3
mov
pop
sbb
or
ds
push
mov
cmc
pushf
mov
movsl
mov
inc
cmp
inc
inc
icebp
mov
aas
xor
pop
jb
loop
dec
pop
dec
dec
je
sbb
jecxz
test
out
cltd
std
bound
dec
pushf
mov
mov
cmp
sub
push
das
insl
sub
int3
cmpsb
mov
pushf
pop
stc
mov
dec
sub
dec
fcom
fdivp
out
jne
or
in
dec
sarb
cmpsl
mov
mov
clc
cld
orb
mov
mov
sub
mov
pop
xlat
rorb
test
adc
and
ret
gs
dec
push
ja
loop
lcall
jmp
dec
xchg
mov
jge
sbb
push
lods
lods
aaa
sbb
repz
xchg
test
push
rorb
add
cltd
gs
dec
test
and
xchg
sub
shrl
dec
fsubl
adc
sub
stos
ljmp
xor
fdivs
in
divl
xor
subl
xor
in
mov
xlat
mov
pop
fistl
jle
gs
dec
pop
inc
push
inc
inc
sbbl
fwait
rolb
dec
mov
xchg
jne
pop
push
mov
xchg
pop
out
jae
xor
adc
sub
mov
xor
sub
or
mov
push
push
dec
mov
cmp
cmpsb
mov
out
inc
jnp
in
out
pusha
inc
mov
stos
xchg
mov
sub
xchg
fbld
push
or
popf
popf
jmp
std
add
pushl
jle
xchg
insb
test
mov
mov
push
mov
inc
adc
movd
enter
adc
inc
jae
jbe
inc
dec
or
push
lret
out
arpl
pop
push
dec
xchg
rorl
lock
mov
lds
adc
in
xchg
mov
and
leave
cwtl
xchg
jbe
inc
push
test
jbe
inc
clc
jge
or
sbb
sti
pop
or
jg
dec
lret
sbb
cmp
and
test
inc
jo
fs
and
jno
movsb
out
and
push
xchg
cmpsb
xchg
enter
daa
mov
aaa
out
jno
clc
sub
dec
popa
dec
add
test
orps
or
lahf
lahf
sbb
cld
test
repnz
imul
jmp
pop
adc
mov
pop
aad
fldcw
aam
loope
or
cmp
mov
outsb
and
ja
shrb
neg
subb
sbb
test
stos
xor
and
out
fsts
sub
cltd
ja
mov
out
xchg
adc
subl
sahf
xchg
cs
test
fiadds
inc
and
mov
sub
mov
jb
mov
insb
ljmp
repz
mov
imul
mov
pusha
sbb
push
lock
stc
fidivrs
cmp
mov
outsl
jecxz
mov
stc
iret
bound
fs
adc
sbb
lods
mov
decl
adcb
cli
push
movsl
xor
cmpb
push
pop
gs
int
loopne
popf
outsb
pop
cmp
adc
push
jb
inc
add
jno
stos
xchg
jmp
xor
xlat
into
jmp
mov
pop
ljmp
sahf
stos
push
nop
add
inc
dec
daa
loopne
inc
push
lods
push
fldcw
push
add
repz
iret
sti
lea
sbb
aad
dec
mov
arpl
sbb
mov
pop
outsb
pop
fimuls
dec
inc
or
push
aas
iret
add
dec
aam
out
out
lret
dec
xchg
imulb
mov
or
cwtl
pop
ret
aam
or
outsb
bound
adcl
mov
push
pop
pop
mov
scas
lea
daa
cmpsl
sub
jnp
shlb
sbb
push
pop
shrl
mov
dec
int
mov
mov
iret
push
xchg
cld
stos
pop
iret
lret
sbb
mov
mov
push
and
sub
sub
inc
sub
mov
ret
hlt
adc
push
cmp
frstor
inc
cmpsl
clc
lods
lods
xchg
hlt
ret
hlt
cmp
pop
or
daa
push
out
push
add
push
fwait
xor
add
or
into
cmp
mov
es
lock
adc
inc
xchg
jnp
sbb
mov
shll
or
stos
out
push
rcrl
clc
ret
fsubs
mov
call
pop
imul
pop
movsl
xor
mov
mov
sbb
pop
mov
xchg
loop
ja
inc
lret
dec
dec
cmp
or
mov
adc
imul
pop
lcall
inc
or
mov
xchg
loope
addr16
dec
cmpsl
sub
lods
fs
addr16
xchg
jp
pop
jns
and
pop
push
mov
jp
jle
shrb
in
or
pusha
xchg
fists
pop
adc
sub
pusha
xchg
stos
je
cmpl
sub
push
cmp
push
fs
jmp
xchg
cltd
xor
sbb
push
pop
scas
dec
negl
adc
or
mov
ret
rcrb
rcr
inc
icebp
cmpsb
shlb
mov
or
xchg
sub
lock
xchg
sub
data16
lods
sub
bound
lds
add
scas
cli
mov
jbe
das
leave
pmulhw
arpl
and
jbe
addr16
jge
cmpsb
pusha
sbb
xor
or
insb
add
in
int3
or
in
add
stos
xor
aad
cs
push
mov
cmp
js
jp
sub
movsl
inc
cmpsb
mov
push
add
lret
daa
mov
imul
mov
push
gs
rolb
aaa
movsl
cmp
stc
rcrl
dec
es
test
mov
repz
fwait
mov
dec
js
mov
pop
adc
fs
or
loope
in
sub
cmp
inc
outsb
mov
jo
rorb
sbb
addb
in
push
xchg
push
repnz
xchg
mov
push
std
or
or
push
fisubrs
adc
sub
dec
ficompl
push
dec
das
addb
push
mov
cmp
and
es
add
jae
lahf
testl
imul
sbb
es
xchg
int3
cmc
add
xor
push
loop
insb
mov
fs
fstl
or
sti
lods
jae
int3
mov
xchg
clc
out
inc
adc
popf
fs
xor
out
push
or
aas
gs
movsb
adc
stos
gs
pop
mov
jb
imul
popf
add
xchg
xlat
xchg
lods
loope
sbb
jae
pop
xlat
add
and
sub
adc
and
out
in
enter
les
jb
add
aad
xchg
nop
fists
dec
xchg
fldenv
jmp
negb
shrb
hlt
call
or
in
pop
insb
xor
loopne
stc
fwait
mov
inc
fnstenv
pop
sbbl
inc
inc
daa
ss
aas
outsb
fistps
mov
ljmp
mov
jecxz
std
mov
negb
xchg
mov
mov
fldl
aaa
mov
mov
loop
mov
mov
lock
mov
aam
xchg
mov
sarl
es
shrb
addr16
enter
mov
or
cmpsb
lods
cwtl
cld
sti
add
mov
rcll
pop
dec
push
push
shlb
add
aam
inc
cmpsl
ret
andl
dec
or
popa
pop
loope
xor
ljmp
test
mov
mov
cmova
out
scas
clc
add
xchg
in
test
cmpsl
loop
into
jecxz
xchg
or
mov
inc
xchg
test
jns
fcmovnbe
or
pop
add
adc
fnstsw
xor
push
inc
aas
pushl
outsb
lods
or
adc
sbbl
pop
add
xchg
mov
push
inc
enter
jmp
loopne,pt
inc
jno
push
or
fs
jg,pn
dec
dec
outsb
mov
mov
mov
out
xor
pop
aam
mov
bound
rclb
ret
insb
sub
cmpsl
movsb
inc
addr16
and
mov
sub
xorl
fs
xchg
aaa
pusha
jns
sub
xchg
inc
adc
jmp
jne
push
addl
push
mov
jb
aaa
mov
jle
mov
repz
and
pop
jnp
rorl
mov
bound
push
das
adc
or
xor
shll
addl
jae
int
inc
push
mov
gs
leave
je
fcmovb
test
xchg
jg
es
mov
out
cmp
lds
add
cmp
or
leave
xchg
xor
fisubrs
arpl
out
jbe
cld
fdivrl
and
test
jae
sti
or
aam
ja
pop
int3
repz
pop
sbb
ret
clc
push
xor
xor
mov
cmp
cltd
sbb
sbb
cmpsb
cmp
mov
enter
daa
mov
push
add
cmpsb
cwtl
jl
pop
xchg
js
ds
shll
inc
adc
push
sbb
sub
mov
rcl
pop
pushl
js
cmpsb
icebp
pop
push
imul
sub
xor
ljmp
jae
shlb
push
insl
inc
aad
xchg
cmp
cmp
add
popf
pop
xor
sub
int
fld1
sub
hlt
gs
mov
sbbl
ss
xlat
sub
sahf
popa
sahf
fcmovnb
stos
test
mov
jg
pop
into
mov
dec
lret
mov
mov
and
xor
cmp
sub
inc
xchg
out
lret
mov
mov
xor
sbb
sub
cmc
in
xor
pop
sti
outsl
mov
adc
stc
cmp
loopne
adc
add
or
mov
in
out
cli
dec
cli
sarb
xor
jecxz
xchg
xor
or
mov
gs
loopne
inc
adc
mov
adc
ret
push
imul
dec
repnz
ret
lret
aaa
out
scas
jmp
xlat
inc
push
adc
sahf
push
insl
mov
xor
dec
sti
jae
mov
aad
iret
push
nop
mov
sub
inc
js
loop
pushf
cmp
add
cmp
or
ss
aad
jg
pop
and
fld
mov
leave
pop
pop
add
sub
pushfw
movsb
pop
or
xor
pop
pop
and
pop
inc
iret
sbb
aas
or
in
xor
scas
or
out
jecxz
pushf
mov
scas
mov
std
push
jp
cwtl
jge
es
lods
jecxz
push
mov
dec
jmp
rorb
cltd
imul
fucom
fwait
das
cmp
dec
mov
mov
and
ror
lock
jo
insl
je
pushf
dec
ret
int
cmpsl
mov
dec
xlat
icebp
jge
jle
add
lret
negb
andb
mov
imul
sub
sbb
in
adc
push
ror
fnsave
clc
pushf
cltd
cwtl
xchg
jb
stos
ljmp
pop
lods
out
sub
pop
out
sbb
mov
push
mov
setge
lods
add
add
test
addr16
popf
in
xchg
sub
test
or
xchg
inc
xchg
sbb
mov
pusha
dec
pop
pop
scas
xchg
es
int3
out
mov
lods
subl
call
shlb
or
adc
mov
mov
sub
mov
cmp
inc
or
or
cli
dec
fwait
pop
les
jne
cwtl
ret
loope
out
adc
into
bound
xchg
jns
loope
in
dec
xor
out
scas
mov
or
addr16
ljmp
mov
mov
inc
jle
push
icebp
in
cmpb
push
fstl
push
inc
jno
inc
adc
adc
push
push
fisubs
mov
loop
ljmp
xor
insb
jmp
push
stos
scas
adc
cltd
fsts
sub
iret
xchg
add
mov
jge
jae
fildll
inc
push
sbb
or
mov
push
inc
dec
jge
fidivrl
xchg
xchg
pop
into
sbb
movsb
int
test
fcmovnu
jne
or
adc
rorb
mov
sbb
mov
std
outsl
dec
hlt
and
arpl
imul
mov
sbb
daa
mov
or
out
push
xchg
int3
lds
aam
push
lret
xor
mov
ljmp
and
push
jae
xor
addr16
enter
daa
mov
out
mov
imul
test
xor
movsl
dec
xor
stos
lahf
js
into
push
out
loope
test
push
mov
mov
and
cli
js
xor
pop
xchg
rclb
call
fwait
loop
xlat
mov
adc
ds
inc
int3
insl
rolb
testl
push
clc
add
sub
xor
lcall
pop
faddl
and
adc
pop
xorb
jecxz
xchg
test
mov
and
and
ss
or
push
insb
fsubr
fs
testl
dec
aaa
rcll
mov
mov
into
mov
in
xor
push
outsl
and
loop
jmp
stc
hlt
mov
fs
adc
adc
mov
lods
inc
lods
ret
mov
cmp
jg
int3
cli
add
xor
insb
popa
cmp
inc
push
or
xlat
imul
insl
jle
loopne
xor
add
cmc
imul
jmp
add
fnsave
xchg
xor
lret
cmp
lcall
adc
jb
sahf
jge
sti
and
pushf
aad
jl
nop
xchg
testl
mov
inc
mov
repz
fsubs
outsl
call
pop
shr
pop
rolb
mov
sbb
lods
inc
push
inc
int
pop
or
lods
movsb
int
inc
pop
dec
dec
cmp
jo
push
loopne
xlat
sub
div
cmc
pop
std
decb
cwtl
cmp
or
fldenv
aam
loop
loopne
cmp
pusha
test
lock
shrb
sbb
shll
inc
in
and
jbe
rcrl
int
es
mov
rclb
lahf
aas
jne
jo
js
push
mov
sub
stos
lret
gs
cmpb
sbb
repz
mov
fldt
lock
ret
mov
mov
mov
xlat
insl
adcb
mov
popa
hlt
pop
lcall
dec
fucomip
jg
xchg
xchg
mov
xchg
imul
mov
fcomps
out
jnp
mov
sub
xchg
mov
shrb
jb
sbb
sbb
shll
pushf
shrl
mov
add
inc
mov
dec
xor
sub
or
in
xor
jno
mov
jecxz
ja
enter
mov
test
and
bound
lahf
fwait
or
fs
fwait
mov
js
adc
and
jb
mov
and
out
out
sub
lret
add
in
in
jnp,pn
into
into
shl
push
les
popf
loopne
jmp
jp
stos
shll
xlat
pop
aas
mov
push
xchg
jle
xchg
in
roll
scas
adc
xchg
in
sbb
std
xchg
or
mov
gs
push
adc
stc
popf
test
mov
and
dec
stos
lret
and
mov
insb
push
pop
inc
jnp
adc
js
and
js
adc
lods
mov
repz
ret
jns
out
adc
adc
addr16
xor
add
push
or
xchg
sub
pop
xchg
imul
leave
lds
imul
outsl
loope
leave
je
fxtract
insb
idivl
jbe
orl
xchg
push
xorb
inc
or
xlat
add
mov
pop
js
aad
lods
xor
jo
add
ds
clc
sarl
push
dec
movsb
sbb
rcll
stos
cmpsb
inc
rcrb
dec
in
inc
enter
daa
lahf
pop
cmpb
inc
adc
in
jl
lock
mov
ds
pop
dec
and
scas
lahf
xchg
psubq
or
adcl
inc
imul
pop
scas
out
js
dec
mov
sarl
test
jmp
sub
aam
cmp
push
dec
adc
sbb
mov
cmpb
mov
jne
popf
xor
push
sti
dec
sbb
repz
xchg
sub
lahf
sub
xchg
lcall
fsubrl
outsb
mov
sahf
and
stos
test
and
jg
stos
xchg
mov
cmp
mov
mov
into
test
fsubs
aaa
pop
shr
adc
sbb
cmc
push
dec
push
xor
divl
inc
stc
lock
stos
in
fs
popf
arpl
negb
pushf
lods
sub
into
mov
insb
lret
repnz
push
es
cmp
mov
pop
push
fnstsw
in
jl
js
incl
js
or
adc
loope
add
fistpll
sbb
and
jp
shr
sub
loop
or
sub
nop
jo
int3
dec
mov
in
lods
imul
cmpsl
mov
mov
call
xchg
cmp
test
pushf
cli
mov
push
in
pop
push
and
aas
inc
js
in
dec
lea
cltd
mull
je
xor
jecxz
add
divb
pop
xchg
cwtl
repz
mov
xchg
jo
insb
dec
mov
xor
inc
mov
add
xchg
jo
das
testl
mov
popa
aam
shrl
push
es
mov
dec
mov
ficoms
mov
mov
lret
aam
insl
mov
stc
hlt
mov
cmpsl
les
shrb
mov
sub
cmp
ds
xor
daa
push
inc
and
ffree
mov
dec
xchg
lock
shlb
lods
les
repnz
loop
int
call
test
cvtdq2ps
rolb
jmp
jge
cli
jecxz
mov
mov
xchg
mov
lea
and
xchg
std
or
push
cmc
push
pop
add
popf
sbb
add
pop
insb
vmovddup
xchg
mov
inc
or
mov
cmp
mov
adc
ja
stos
and
pop
adc
or
mov
cmp
cmp
mov
ja
out
into
inc
push
bound
mov
xchg
sbb
loope
sub
cwtl
fcompl
loop
jp
subb
shrb
add
addr16
lods
in
mov
fisttps
lock
add
js
sti
or
hlt
daa
push
push
xlat
outsl
xchg
popf
lods
jg
mov
pusha
call
mov
insb
mov
jbe
fcomi
jp
sbb
iret
push
arpl
pop
outsl
das
inc
sbb
iret
adc
push
or
jg
arpl
sbb
ficoms
ss
test
xchg
sbb
in
inc
imul
add
fs
rolb
inc
bnd
leave
jmp
aas
hlt
mov
xor
divl
je
jge
stc
pop
sbb
lea
mov
add
xor
rolb
cmp
adc
mov
xor
or
push
nop
cmp
dec
jo
pusha
aaa
scas
out
movsb
and
and
adc
adc
xor
mov
sahf
mov
dec
jno
mov
into
dec
mov
pop
ds
or
movsl
pop
in
mov
adc
push
lahf
mov
js
xchg
insl
push
test
jmp
push
jmp
pop
into
mov
pop
adc
daa
push
icebp
or
push
shll
cmp
cmp
mov
push
shl
add
or
jmp
add
xlat
mov
and
jg
decb
int
cmc
out
sub
push
cmc
pop
push
lret
sub
cmp
lret
mov
sub
leave
fadds
in
jns
jg
push
fnstenv
imul
xchg
je
ss
ret
aaa
call
idivl
ret
lret
pop
roll
stc
sbb
dec
into
push
adc
outsl
or
cmp
loopne
fs
jb
pushw
push
xchg
lods
minps
mov
xor
cli
imul
repz
in
call
incb
pop
clc
gs
xor
pop
push
out
push
adc
jnp
adc
sub
add
xor
sbb
pop
mov
xlat
incl
jle
not
imul
addb
lea
push
nop
dec
out
dec
add
test
mov
sbb
inc
pop
mov
repz
cmpsb
fisubs
lea
call
add
pushf
call
pushf
movsl
andb
jo
pop
or
lret
xchg
sub
aas
ljmp
dec
daa
fcoms
je
data16
sbb
fsubs
dec
movsb
inc
cwtl
scas
sub
sub
mov
imul
adc
test
lock
aam
das
pusha
sbb
mov
jmp
test
xchg
sub
xor
mov
mov
mov
add
cld
or
lret
inc
jle
mov
fnstsw
mov
pop
icebp
nop
sar
xor
sub
inc
popa
aam
lret
mov
aam
jmp
shrb
ljmp
pop
lods
das
cwtl
mov
mov
inc
ljmp
loop
iret
btsl
inc
cltd
scas
and
test
jg
xchg
aaa
jne
mov
or
xchg
cld
sbb
jmp
pop
mov
push
stos
cltd
sbb
xchg
cmc
push
add
jp
sbb
mov
dec
xor
mov
or
mov
mov
imul
xorl
lahf
dec
or
outsl
or
mov
fwait
ljmp
jne
pop
mov
out
lods
push
xchg
bound
dec
push
jns
fistpl
in
out
xchg
insb
jne
out
sub
sub
xchg
insb
imul
or
or
mov
mov
push
jle
jmp
inc
cmc
fildll
neg
jmp
mov
sbb
popf
rcll
and
cmp
stos
mov
shlb
or
insb
sub
jnp
pop
ret
scas
sarl
adc
sbb
ret
sbb
inc
sub
inc
pusha
inc
sbb
cli
bound
lds
imul
dec
xchg
loopne
ficomps
arpl
cmpsl
or
shlb
adc
adc
push
icebp
hlt
add
arpl
ljmp
or
sbb
mov
outsl
fdivrl
add
test
lahf
icebp
inc
pop
dec
fwait
push
jae
jecxz
push
cmp
jo
into
add
and
cwtl
inc
movsb
xor
push
pusha
popf
push
cmpsb
dec
xchg
gs
sbb
jno
mov
lea
popf
movsb
cmpb
cld
cwtl
jno
mov
jl
aad
dec
sti
stc
stos
jnp,pt
xor
lods
aaa
push
lahf
aad
aaa
push
push
in
push
mov
cmp
xchg
dec
pop
std
cltd
add
inc
pop
pop
dec
lods
push
lods
mov
sub
ret
or
in
nop
outsb
ja
notl
iret
adc
addb
or
add
cmp
or
int
xor
mov
rclb
mov
push
faddl
andb
addr16
mov
addb
sub
push
fwait
mov
sti
xor
mov
je
mov
xor
cli
fcomps
xchg
mov
adc
rcrl
rorl
ds
into
dec
jp
cmc
jecxz
fidivs
push
pop
in
outsl
sbb
mov
stc
sbb
fs
adcb
mov
lods
testb
out
cli
dec
cli
pushf
sub
cmp
jge
or
repnz
and
loope
xorb
pop
cmp
push
adc
cmp
adc
leave
push
add
lret
out
jnp
jl
lock
lcall
sub
pop
mov
filds
lock
aad
fadd
nop
es
dec
popa
testb
js
inc
les
jne
loope
loopne
mov
sub
pop
jmp
movsb
adc
dec
jbe
in
sarb
jmp
scas
inc
scas
fsts
jb
shl
dec
sahf
sub
jb
add
div
mov
and
cwtl
imul
mov
and
sbbl
mov
aam
mov
mov
dec
dec
cltd
das
mov
mov
mov
ja
pop
roll
cli
adc
or
pop
insl
adc
dec
scas
push
xor
or
fnstcw
cld
lods
xchg
or
or
xor
mov
in
sub
rcr
lahf
sub
in
add
cltd
std
pop
ret
dec
jae
push
int3
dec
insb
fstl
push
imul
bound
outsb
push
mov
popa
cmp
leave
lods
lcall
out
test
js
jbe
test
nopl
sbb
adc
dec
xchg
and
mov
not
inc
xchg
or
sbb
fcmovbe
sarl
cmpsl
stos
mov
push
cmp
add
xchg
inc
into
call
xchg
xor
or
aad
test
mov
mov
clc
movb
sahf
jbe
dec
std
mov
inc
xor
fwait
sbb
aas
jne
mov
nop
out
mov
bound
lret
arpl
stc
rcll
scas
dec
out
in
sub
mov
dec
jp
dec
mov
aam
mov
outsb
pop
dec
jle
shll
in
push
fwait
pusha
cmp
ja
xchg
data16
xchg
insb
aaa
inc
adcl
cmc
push
pop
sarl
cli
xchg
ficoms
stos
and
and
adc
xchg
pop
iret
jnp
lods
ds
mov
outsb
iret
adc
faddp
dec
mov
push
inc
xor
push
jae
into
lock
arpl
push
push
inc
and
inc
dec
jns
xor
ds
orl
add
add
mov
add
repnz
xor
pop
arpl
mov
cli
movsb
sbb
dec
xor
cs
lods
add
xlat
int3
mov
add
das
ret
mov
jo
push
cwtl
scas
movsb
data16
mov
movsb
mov
addr16
cmpsb
lret
sub
movsb
enter
daa
pushf
or
and
into
mov
les
les
sahf
lods
out
addr16
push
lahf
hlt
sbb
push
cmp
xchg
test
jg
sub
sub
dec
sbb
and
push
sbb
loope
sbb
sub
js
cmp
call
aaa
shrb
inc
lea
sbbb
xchg
imull
shl
push
add
out
sub
xor
lret
pop
add
sbbb
xchg
fstp
xor
sub
xor
mov
mov
sub
mov
in
mov
cld
mov
into
clc
ss
sub
fcom
pop
jbe
std
jnp
lret
popf
shrl
clc
sbb
cmc
push
into
cs
scas
in
outsl
cld
ds
pop
inc
stc
rol
jmp
lea
jecxz
data16
dec
lods
fstpl
out
inc
inc
cli
iret
outsl
cmpsl
xor
loop
or
jne
gs
mov
dec
mov
cld
adc
mov
mov
mov
xchg
ds
sbb
aad
je
jge
and
mov
dec
das
fwait
sti
js
push
dec
adc
lret
sbb
add
dec
dec
shlb
fldcw
or
adc
lock
in
orl
in
imul
and
rclb
fimuls
pushf
sti
in
and
fcmovnbe
cmp
outsl
lods
inc
jb
mov
pushf
adc
sub
jb
or
into
je
lret
adc
int
lcall
mov
cmp
mov
ret
movsb
xorl
and
inc
and
mov
aam
lock
fnstenv
mov
push
mov
cmc
rcll
pop
lea
ss
stos
movsb
mov
mov
mov
dec
cld
fsubrs
lret
and
sub
jmp
std
mov
add
in
shlb
add
fs
ret
fstpl
aam
aaa
jbe
clc
ret
xchg
xchg
lods
or
cmpsb
popa
push
fs
add
cmp
out
or
push
push
cwtl
aam
vmread
popl
cld
les
test
adc
mov
in
xchg
dec
jmp
jno
dec
xchg
push
sbb
add
pop
push
testl
faddl
outsb
add
mov
xchg
out
mov
xor
xchg
mov
aas
cmp
out
xchg
add
pop
mov
hlt
ja
and
lock
outsl
inc
sti
std
dec
or
push
pop
fwait
dec
lcall
mov
mov
out
cwtl
out
imul
jns
pusha
shl
test
jg
or
out
adc
sub
mov
addr16
jp
jp
aas
xchg
andl
pop
aam
in
push
pusha
sbb
scas
fucomip
insl
in
xchg
cmp
fcoms
enter
xor
repnz
dec
push
sbb
scas
mov
ss
insb
add
scas
add
test
adc
add
outsl
xchg
mov
pusha
test
pop
lret
pop
nop
inc
rolb
jae
xor
inc
dec
imul
jecxz
inc
ret
arpl
xchg
mov
sbb
lea
fisubs
aam
and
xor
push
leave
push
add
hlt
cwtl
sbb
arpl
add
outsb
shrl
aaa
in
icebp
fimull
or
aaa
int3
jne
jle
xor
xchg
push
cmp
lods
xor
push
out
scas
and
and
mov
jp
test
jne
cmpsb
dec
cmp
in
ljmp
daa
fwait
cli
cmpsb
cmp
mov
pushf
paddsb
push
dec
fsts
ds
movsl
outsb
out
fsubl
loop
push
lahf
adc
aaa
push
push
lds
push
dec
out
inc
movsl
jmp
and
js
nop
outsl
pop
int
loop
push
inc
daa
loope
idivb
cmp
xchg
cmp
and
cmp
leave
push
rolb
cmpb
add
dec
cmc
add
add
pop
push
pop
add
adc
ss
xorl
lcall
fstp
sub
sbb
mov
mov
cmp
jno
mov
mov
mov
and
push
mov
xchg
iret
cmp
nop
inc
jns
mov
out
roll
mov
bound
pusha
jo
into
adc
cmc
jno
in
or
pop
loop
aaa
cmc
stc
xchg
adcl
test
mov
lods
les
mov
jp
xor
add
push
cmp
sbb
adc
lock
jne
loopne
adc
adc
in
pop
imul
add
xchg
add
push
cmp
mov
xlat
mov
in
shll
lods
mov
lea
cs
and
adc
push
dec
pop
jae
inc
ljmp
les
mov
jecxz
jg
out
mov
call
addb
adc
popa
sbb
lret
pop
imulb
imul
out
push
dec
jb
jl
dec
mov
inc
je
sti
shl
and
insl
testb
std
inc
shl
cwtl
fistpll
cmpsb
mov
ljmp
imul
mov
add
and
das
jae
mov
adc
dec
mov
lea
loope
adc
fidivrs
rorb
mov
cmpsl
lcall
icebp
xchg
xchg
cld
add
test
repnz
mov
and
sub
ret
sub
mov
push
push
inc
cmp
pop
jnp
clc
sbb
mov
popa
addr16
lods
jo
pop
mov
outsb
dec
or
add
sti
push
jae
lea
xlat
and
add
jbe
cltd
push
add
es
divl
or
dec
ret
xlat
daa
test
mov
xchg
pop
icebp
sbb
xchg
shrl
sbb
jg
daa
add
lret
fs
mov
and
ficoml
pop
xor
test
mov
add
outsb
or
ja
push
dec
jecxz
jp
xchg
out
fmull
loope
fwait
ja
outsb
dec
cmp
jne
movsl
or
dec
mov
fstps
inc
jns
cltd
ftst
sub
pop
in
inc
out
mov
sub
test
jp
out
mov
addr16
mov
dec
push
jo
jnp
mov
xchg
inc
jp
mov
stos
fisttps
push
mov
loopne
imul
add
popf
dec
and
mov
pop
push
sub
dec
pop
sub
jnp
xchg
subl
dec
lret
mov
ret
and
dec
iret
inc
dec
fisttps
jae
fimuls
imul
push
inc
test
fisubrl
std
inc
sbb
push
imul
fiadds
ffreep
cmp
loopne
icebp
xchg
xchg
cmc
push
push
mov
hlt
jecxz
aam
stos
in
jbe
shrl
mov
aaa
lods
inc
and
add
add
jle
pop
arpl
shll
lods
xchg
loope
bound
mov
fiadds
cmp
rcrl
movsb
shrb
push
dec
enter
mov
je
mov
imul
jae
jg
cltd
loope
dec
dec
movsl
into
ds
out
movsl
jne
mov
lahf
xor
push
test
adc
clc
mov
mov
pop
pop
jb
test
xchg
fsts
or
jb
pop
push
loope
cmc
add
cmp
cmp
adc
pusha
rclb
push
jae
sbb
out
lock
add
addr16
and
push
or
ljmp
mov
jecxz
xchg
add
xchg
pop
sub
out
push
aam
test
scas
addl
andl
mov
mov
and
cmp
ss
mov
fmuls
insb
idivl
mov
rcr
or
scas
mov
hlt
movsl
fdiv
cmp
xor
outsl
mov
dec
mov
fs
adc
andl
lods
stos
insb
push
mov
adc
out
fs
xor
jecxz
cmp
sub
or
pusha
gs
insb
mov
cmpl
lcall
imul
lcall
les
dec
cmp
test
sti
jb
sub
mov
mov
and
sub
cmp
xchg
sbb
mov
nop
mov
das
dec
jle
roll
mov
fstps
and
xchg
ljmp
call
add
pop
add
cmp
mov
pushf
push
test
adc
xor
cmpb
push
push
dec
add
adc
adc
xor
inc
testb
cwtl
lcall
mov
les
push
outsl
pushf
cmp
int3
mov
push
mov
pop
cs
mov
mov
and
xchg
xchg
shl
mov
insl
lds
adc
push
fbld
mov
je
cld
cs
lret
pushl
sahf
and
lret
pop
inc
into
stos
rorb
sahf
sub
xlat
ret
sti
mov
aam
test
cmp
jo
jmp
int3
popa
jle
data16
fstpt
mov
xchg
dec
adc
push
dec
outsb
cld
imul
test
fcoms
inc
pop
lret
movsb
lods
dec
sub
test
xorb
inc
dec
insb
sbb
in
ret
adc
sbb
push
and
ds
out
and
sub
inc
hlt
or
dec
mov
mov
pop
mov
mov
lods
pop
sub
enter
cmp
outsl
mov
sub
xchg
fwait
cmpsb
sbb
dec
dec
fnstenv
xor
xchg
dec
xchg
out
sub
ja
insb
lds
jns
jbe
in
dec
lret
repnz
out
iret
lods
sub
jg
lret
addr16
push
pop
jp
inc
xchg
mov
out
mov
mov
mov
in
in
popf
pusha
push
xchg
dec
fildll
data16
xlat
dec
sbb
xchg
push
cmpsb
dec
mov
mov
fwait
mov
stos
jl
xor
insb
pop
push
jnp
sub
jge
std
adc
sbb
pop
cmp
addb
jae
int3
jnp
insb
and
movsb
sahf
lahf
push
shrl
ficompl
xchg
xchg
aaa
mov
and
inc
rcr
ljmp
rorb
mov
popa
inc
nop
leave
test
and
jbe
notb
mov
jge
aaa
imul
or
adc
and
pop
xchg
aas
push
mov
fidivl
push
cmc
scas
inc
xor
cmp
xchg
movsb
pop
adc
push
pushf
pop
mov
push
scas
sub
sub
sbb
cltd
pusha
jae
cmp
sbb
std
mov
dec
mov
jno
pop
inc
mov
and
sahf
pop
lahf
push
dec
jl
mov
out
xor
inc
mov
ret
dec
enter
bound
scas
mov
pop
dec
and
push
mov
lods
sub
xchg
das
cmp
adc
or
cmp
orb
addl
add
sbb
int3
push
or
hlt
sub
mov
adc
fdivl
push
sub
jnp
repz
jae
xchg
jg
in
push
mov
in
sti
mov
sbb
fst
divb
pop
aas
cmp
push
ds
cmp
out
dec
ja
shll
es
mov
icebp
sbb
xor
stos
gs
mov
stc
cmc
popa
ret
mov
adc
mov
xchg
out
lods
xchg
sub
mov
test
push
jne
cmp
or
repz
scas
ret
sahf
int
push
testl
leave
cltd
fsubrs
cmpsl
lods
adc
mov
pop
ret
xchg
mov
add
dec
cmp
sbb
sub
mov
mov
das
sti
jmp
inc
jl,pn
sbb
mov
pushf
inc
dec
sti
inc
adc
fcmovnb
pop
xor
repz
lea
inc
call
or
pop
mov
fsts
jecxz
fcomps
test
pop
cmp
fldl
push
push
aas
add
idivl
je
push
pushf
jecxz
lea
std
bndstx
dec
rep
mov
push
mov
dec
inc
xor
fldt
repnz
mov
mov
add
das
xor
cltd
mov
mov
inc
inc
es
xor
gs
fwait
adc
sub
xor
repz
outsb
mov
mov
add
mov
popa
jns
sub
adc
ret
mov
into
das
xchg
push
into
ljmp
test
jb
out
xor
pop
xchg
xchg
adc
push
sub
rorl
xchg
mov
add
jne
test
aas
mov
jnp
xchg
popa
int3
dec
xchg
lcall
rclb
sbb
add
call
stos
inc
pop
jge
add
add
inc
dec
insl
fnstenv
andb
xor
or
mov
fimull
pop
xchg
ja
cmp
dec
inc
sarb
or
jns
fwait
aad
or
dec
xchg
in
jne
push
xlat
mov
sbb
out
or
lahf
jmp
in
je
xchg
idivl
shl
pop
pop
sub
jp
pop
addr16
mov
jp
push
dec
mov
mov
mov
and
test
mov
pushf
dec
fisttps
fsts
into
insl
push
xchg
cwtl
sahf
push
orl
push
imul
mov
ficompl
les
jnp
imull
or
inc
mov
push
les
push
iret
mov
imul
jo
sbb
jecxz
jmp
cmp
or
popa
sti
clc
inc
inc
push
nop
ficoml
sub
xchg
mov
sbb
mov
insb
fimuls
and
daa
test
mov
mov
mov
mov
daa
hlt
jns
adc
enter
jmp
lods
icebp
sbb
jo
or
jle
add
stos
xchg
int3
add
rcll
xor
arpl
xchg
scas
and
and
pop
movsb
call
cmp
xlat
pop
mov
daa
cwtl
cmp
xorb
or
mov
es
lock
movsl
xorl
mov
push
lahf
jo
nop
push
xchg
push
test
stos
icebp
popa
inc
push
loope
cmp
sbb
js
push
fstl
mov
loope
pop
lahf
sub
xchg
mov
outsb
data16
adc
push
xchg
sub
cmpb
jns
pop
stc
roll
daa
lahf
xor
fs
adc
int3
int
cmp
pop
add
lcall
neg
fsubl
sahf
xchg
xchg
pop
test
orb
movsb
mov
jmp
mov
fwait
xor
mov
ss
mov
cmp
rcrl
idiv
dec
mov
rorl
scas
mov
test
into
mov
sti
pop
xor
lret
js
popa
loop
or
lods
xor
fs
mov
data16
lods
jns
stos
mov
stc
repz
xchg
adc
fdivrl
cmp
mov
stos
rcrb
mov
movsl
xchg
loopne
xchg
pop
fmul
and
pushf
mov
jp
dec
mov
xchg
test
aad
sub
jle
shl
xlat
jns
jmp
test
pop
jae
mulb
inc
sti
lcall
aad
mulb
dec
cmp
adc
orl
les
repz
jo
lock
fimull
push
mov
pushl
test
cmp
mov
jmp
int3
add
or
addb
dec
aas
movsb
pop
leave
jb
add
dec
icebp
je
je
test
jecxz
cmp
loop
ss
cwtl
adc
mov
adcl
push
mov
pop
mov
cwtl
arpl
adc
bound
cli
rclb
rcll
push
push
insl
xchg
pusha
inc
dec
xchg
mov
movsb
mov
or
lret
cld
test
mov
mov
out
pop
mov
adcb
dec
lret
sub
out
ret
sbb
ret
push
fwait
pushf
push
fst
loop
clc
scas
fildll
test
movsl
fsubs
lock
mov
movsb
mov
xchg
inc
movsb
xchg
fnstcw
push
add
ret
pmuludq
push
add
adc
inc
in
arpl
adc
push
test
fstps
sbb
mov
pop
mov
push
stos
xor
push
push
outsb
pop
add
cmp
imul
or
mov
push
dec
lea
sti
mov
lahf
sarb
stc
fisttps
sbb
push
pushf
ss
sbbl
cmpsl
movsb
dec
sub
aas
jne
jno
mov
std
pop
out
out
in
bound
sbb
in
repnz
xchg
inc
leave
gs
pop
fwait
sub
jne
mov
not
das
jp
adc
mov
push
sarb
in
in
insl
in
imul
mov
fbld
pop
xchg
test
lds
xchg
arpl
push
sbb
cmpsb
push
sub
push
popf
mov
add
push
sbb
shrb
xchg
aam
insb
lods
dec
sub
repnz
xor
nop
pop
nop
push
or
iret
jmp
cs
mov
cmpsl
jmp
inc
push
adc
jae
inc
jb
enter
in
push
mov
mov
mov
std
sti
leave
imul
hlt
fidivs
hlt
mov
rcrl
enter
xor
pop
pop
mov
sub
into
hlt
les
arpl
push
adc
mov
mov
outsb
andl
or
fwait
mov
int3
and
pop
lock
push
push
lds
nop
xor
mov
mov
and
into
jmp
push
cmp
cmpsb
pop
hlt
dec
in
xchg
enter
daa
xchg
cmp
jp
jl
bound
xchg
xor
ds
imul
mov
mov
push
pop
mov
dec
push
jbe
sti
inc
loope
xchg
cld
nop
sbbl
adc
pop
leave
mov
in
mov
dec
sub
outsl
gs
in
outsb
leave
dec
das
adc
icebp
push
lret
and
outsl
sbb
test
xor
jmp
push
adc
dec
int
arpl
pop
jg
test
push
fwait
ja
faddl
rol
sahf
cmp
imul
mov
sbb
fdivl
aad
ss
test
fdivrs
idivl
xlat
mov
mov
ja
sbb
push
cmc
lea
in
outsl
push
push
jl
jb
jbe
aaa
adc
pop
data16
in
lods
pusha
push
inc
mov
lret
or
jbe
ss
into
stc
aaa
xor
add
cmp
dec
jno
rcl
pop
cmc
fs
lods
test
mov
adc
add
adc
pop
mov
xchg
or
mov
adc
sbb
mull
popa
out
sbb
dec
enter
lahf
lret
sub
nop
dec
movsb
and
pushf
add
mov
fld
adc
mov
pop
or
repz
and
pop
jne
jle
xchg
pop
sbb
fidivl
jmp
mov
pop
adcb
inc
adc
cwtl
pop
aas
inc
ljmp
mov
dec
jecxz
xor
dec
mov
std
fstp
aas
cwtl
lret
sahf
or
rorb
xchg
dec
pop
cs
xchg
imul
out
bound
mov
mov
jg
es
fsubrl
fists
dec
xchg
out
icebp
cmpsl
xchg
sarw
jecxz
outsb
cld
scas
fwait
pop
lret
dec
in
xlat
mov
push
ljmp
lahf
popf
out
rol
xor
adc
pop
adc
ret
test
xor
mov
clc
ljmp
ljmp
inc
lods
sbb
push
mov
cli
shr
xchg
and
fucomip
jp
push
push
dec
add
cmp
push
hlt
jae
mov
mov
pop
in
add
mov
push
jecxz
aas
movsl
pop
pop
or
push
or
add
aaa
popf
mov
or
sub
mov
xor
loope
mov
ds
lock
pop
jnp
ja
cmp
inc
out
sbb
dec
fwait
xor
jne
sub
mov
repnz
out
pop
dec
bound
in
in
lds
xchg
xchg
lcall
aam
xchg
or
jp
divb
jp
mov
cmp
insb
mov
or
pop
es
scas
inc
sbb
out
filds
xlat
mov
xchg
cs
insb
and
push
out
aad
popf
in
fnstcw
pop
cli
loopne
aad
je
test
push
data16
xchg
js
repz
inc
adc
xchg
ret
je
fisubrs
inc
jne
pop
jae
sub
decb
push
inc
mov
fidivl
adc
test
pop
imul
pop
ja
lds
and
pop
shrl
adc
lock
mov
leave
mov
and
arpl
movsb
inc
jbe
dec
jbe
mov
mov
aaa
test
call
add
sbb
pop
pop
mov
test
xchg
sbb
sub
and
bound
movsb
decb
pop
push
mov
dec
in
insl
aam
enter
daa
xchg
push
gs
mov
jno
outsl
stos
jl
mov
jo,pt
mov
xchg
insl
dec
and
cmp
lahf
scas
mov
fldcw
inc
inc
cs
jo
cs
mov
sbb
pop
or
push
jge
loope
pop
sub
cmp
aad
adc
int3
mov
rolb
mov
jmp
fwait
mov
push
push
push
inc
int
jo
sub
mov
mov
add
push
repnz
fdivl
xchg
fwait
sub
mov
fcompl
addb
cli
inc
jg
inc
mov
and
mov
and
cmp
aam
sti
fs
fdivs
nop
popa
divl
sbb
sub
std
mov
aas
adc
dec
push
inc
into
orb
xor
mov
outsl
cmp
sbb
sub
or
mov
adc
lods
inc
mov
jno
jne
std
cli
add
loope
movsl
add
or
mov
sbb
loopne
in
pop
push
fbld
imul
inc
dec
xchg
rclb
sbb
aaa
aas
cmp
mull
or
lret
cmpsb
mov
int3
xchg
arpl
clc
btr
movsl
and
dec
nop
and
dec
dec
cli
jo
inc
dec
sbb
outsb
les
sbb
out
jecxz
notb
xor
adc
adc
pop
shrb
cltd
adc
cld
lods
pushf
std
jne
pop
and
jbe
inc
imul
aas
loop
xchg
jb
mov
dec
fbstp
je
fcom
jecxz
imul
test
inc
mov
dec
inc
mov
cmp
dec
add
mov
mov
add
lock
das
into
xchg
dec
mov
push
loop
shll
add
es
clc
sub
inc
dec
dec
mov
lahf
mov
mov
sub
mov
adc
sahf
lods
pop
mov
dec
cltd
sub
xchg
test
and
frstor
icebp
out
and
inc
insb
ljmp
shrb
pop
out
pop
push
or
mov
cmpsb
xchg
outsb
imull
test
pop
mov
jne
xchg
push
sbb
test
xor
cmp
xchg
sbb
push
jne
adc
cld
add
push
sbb
jmp
or
pop
stc
xor
lret
adc
shlb
dec
mov
xchg
ja
cld
mov
inc
test
cmp
pop
adc
fwait
bound
dec
repnz
jne
inc
test
std
sti
jae
movsl
xchg
mov
jns
push
sbb
jmp
xchg
in
xor
pop
mov
sub
imul
sbb
and
stc
cmc
jle
filds
pusha
mov
xchg
sub
jmp
stc
cmp
stos
push
mov
test
push
repnz
outsb
out
stos
dec
mov
push
insb
adcb
scas
push
and
push
cltd
lods
dec
adc
pop
and
rolb
inc
orb
push
sub
inc
js
aam
inc
sub
inc
mov
mov
xchg
xchg
fwait
sti
sbb
sub
imul
fidivs
mov
filds
sarb
mov
lods
inc
cmp
hlt
pop
and
jbe
push
inc
jge
lea
sbb
aam
aaa
addr16
xor
mov
or
int3
idiv
scas
pop
dec
lock
mov
fdivs
adc
and
push
or
mov
or
pop
fsubs
push
sub
mov
popf
daa
xchg
pop
cmp
push
mov
mov
jl
xchg
mov
movsl
cwtl
jg
and
rcll
lock
test
or
test
cmp
addb
ret
dec
sub
inc
pusha
dec
push
fldcw
sub
sahf
mov
pop
loope
push
cld
adc
cmpsl
insb
xchg
loope
faddl
add
jecxz
cmpsb
xor
cs
sbb
call
sub
cld
push
lcall
jecxz
fisttpll
or
jae
jg
lret
test
pop
in
sbb
scas
jg
adc
mov
lahf
mov
and
xor
repnz
rolb
rcl
sbb
sbb
sti
into
arpl
aad
sub
repnz
adc
lods
scas
stc
roll
adc
andl
subl
sub
out
mov
out
jl
push
cmp
or
xlat
clc
gs
mov
pop
xor
bound
push
jecxz
pop
xchg
add
clc
xchg
xchg
mov
xchg
cmp
fimull
mov
aaa
or
sti
cmpsl
sbb
aad
mov
nop
sti
xor
dec
aaa
inc
pop
mov
cmp
test
stc
or
pop
cmpsl
jl
into
pop
andl
aas
inc
xchg
pushf
test
mov
pop
enter
and
jae
xchg
jl
cmpl
dec
push
jmp
imul
in
not
shrl
inc
xchg
mov
jbe
mov
das
enter
imul
jl
cmp
and
imull
lods
sarb
xchg
mov
iret
xchg
and
insl
dec
mov
xchg
out
cmpsl
xchg
jo
mov
xchg
loop
cld
add
cmp
mov
sbb
fisubs
fnstsw
js
imul
pop
ret
daa
mov
in
aaa
fisttpll
in
clc
pusha
mov
xchg
pushfw
in
ljmp
xchg
lods
repnz
mov
ror
xchg
scas
add
push
xchg
dec
add
adc
std
add
push
adc
cmpsb
pop
xchg
dec
sub
xor
sbb
mov
push
stos
add
pop
push
push
leave
mov
movsl
mov
add
in
decl
pushf
xor
mov
and
or
mov
les
jg
shrb
dec
xchg
arpl
inc
sbb
dec
or
cltd
mov
dec
aad
cltd
jne
sar
pop
sbb
out
test
pop
bound
fnstsw
popa
push
adc
loop
nop
sub
data16
hlt
ds
jp
xchg
jmp
mov
out
push
jle
mov
in
push
fldenv
jg
ffreep
cwtl
dec
xchg
pop
jmp
les
orl
jo
xor
mov
callw
fstpt
xlat
xchg
cwtl
insb
in
repnz
ljmp
dec
push
loopne
lea
insb
push
xor
or
xor
pop
dec
dec
sub
in
jae
insl
sub
sub
cmpsl
test
dec
fnsave
fcmovu
inc
loop
ljmp
imul
jg
sbb
lds
xchg
xchg
jno
mov
add
leave
xchg
subl
jbe
int3
lret
lahf
lods
sbb
sti
ljmp
sbb
int3
pop
jge
adc
xor
iret
xor
scas
pushf
shlb
daa
sub
movsb
adc
inc
push
daa
dec
or
cmp
enter
daa
xchg
in
cmp
sbb
jno
fwait
push
dec
dec
loop
inc
ds
imul
pusha
mov
push
rcll
test
xlat
in
sbb
jecxz
inc
lods
jg
pop
sarb
pop
xchg
inc
push
call
das
sub
hlt
mov
outsb
bnd
std
adc
xorb
popl
daa
orb
add
xor
sbb
push
sbb
push
sub
add
cld
xchg
sbbb
scas
push
fmull
dec
or
push
and
jg
out
mov
in
or
pop
push
jb
sub
insb
ss
dec
sbb
lods
push
pop
div
pop
dec
lret
fcmovb
addr16
js
mov
js,pt
inc
mov
and
outsl
hlt
lods
fsubp
xchg
idiv
stc
mov
andb
adc
insb
data16
fisubrl
jecxz
fsub
jae
cmp
xor
dec
cmp
fistpl
push
cltd
add
shrl
and
add
imul
out
fistl
test
fcom
jne
stc
sub
jg
bound
dec
in
mov
jmp
imul
aad
adc
nop
flds
dec
mov
mov
outsl
pusha
les
addr16
cld
push
lea
ljmp
mov
pop
ss
mov
xchg
lods
pop
pushf
push
mov
sub
in
fadds
leave
stos
inc
mov
xchg
dec
jb
cmp
int
cmp
mov
notb
jne
std
sarb
inc
mov
and
sub
pusha
xor
adc
jbe
pop
fstpt
lock
gs
mov
cmpsl
mov
pop
subl
movsl
imul
dec
orb
xchg
mov
cs
push
into
jnp
cltd
push
cs
and
sub
cld
nop
inc
sarb
mov
test
or
push
jo
push
cmpsl
imul
outsl
jg
fwait
js
xchg
movsl
ja
ljmp
sub
int
out
and
lcall
sbb
pshufw
xchg
std
cmp
jae
or
sbb
xchg
cld
test
ja
xchg
mov
sbb
inc
ror
lods
mov
imulb
hlt
imul
sub
mov
jmp
icebp
xor
cmpsl
jle
lret
mov
inc
mov
pop
fs
mov
mov
nop
ja
adc
mov
jnp
mov
dec
or
repz
fwait
shl
dec
mov
movsb
arpl
arpl
mov
in
xor
xchg
andb
sub
popa
fsubrs
repz
jp
sub
mov
in
cltd
mov
xchg
sub
frstor
jmp
jno
shll
jmp
popl
outsl
sbbl
lods
push
cmp
popf
pop
inc
jae
lret
push
adc
mov
and
les
insb
pop
daa
mov
fdivrl
add
push
daa
push
pop
iret
addr16
lcall
mov
cwtl
jae
repnz
mov
push
mov
nop
xchg
inc
jo
sbb
stos
push
imul
push
fidivrs
jno
scas
pop
mov
repnz
stc
mov
or
hlt
lock
arpl
lcall
jbe
mov
lods
sbb
addr16
in
sti
or
push
fxch
int
jmp
push
push
popf
xor
sub
scas
jnp
int3
and
xlat
push
cmp
insl
jns
lahf
std
mov
jbe
je
data16
in
in
and
enter
daa
xchg
repnz
jno
xor
hlt
dec
push
push
sbb
fldcw
daa
movsl
cmpsb
iret
mov
lahf
or
jge
decl
aaa
inc
sbb
dec
gs
addl
pop
lds
or
loope
fbstp
xchg
sbb
and
sub
cltd
sbb
lahf
or
sbb
xchg
add
inc
mov
or
hlt
int
lock
xchg
pop
pop
jnp
and
sbb
adc
mov
fdivl
or
out
or
out
adcb
mov
enter
xchg
pop
mov
sarl
or
cmp
push
addr16
add
jge
push
jg
test
pop
sbb
fldcw
cmc
test
sub
outsl
shr
shl
daa
je
stc
aas
out
add
adcl
cmpsl
push
inc
lods
cld
push
out
mov
fildl
jb
xchg
cli
lcall
cmp
mov
or
sbb
rolb
adc
add
adc
incb
popa
sub
xchg
sbb
mov
xlat
mov
aaa
sub
rolb
jns
or
or
jg
cs
jo
aad
aad
nop
mov
out
dec
pop
push
sbb
fstps
push
push
repz
setne
incl
push
test
pop
jmp
cmp
dec
sub
inc
cld
mov
inc
xor
addr16
mov
lods
cmp
jge
pop
dec
inc
rorb
lcall
std
jns
jl
mov
insl
mov
dec
loope
sahf
jno
addl
lock
xlat
dec
movsb
das
imul
lods
mov
mov
rcrl
sarb
dec
jge
dec
cmpsl
xchg
mov
mov
aas
movsb
daa
cld
pop
fmull
push
mov
sub
add
sbb
movsl
rorb
aad
sub
addr16
add
add
inc
push
fstl
shrb
in
jle
and
and
dec
stc
lods
enter
xchg
xchg
aad
xchg
xchg
push
dec
jmp
add
xor
test
movsl
mov
rorl
and
dec
sti
inc
sbb
mov
pop
add
and
lock
or
fcompl
xchg
add
add
mov
dec
test
jb
and
inc
loope
xor
jle
mov
dec
test
mov
inc
sbb
pusha
mov
inc
dec
mov
fwait
out
lock
dec
fwait
cmp
jne
jmp
mov
nop
iret
out
inc
dec
js
jno
lcall
push
inc
xchg
roll
insl
sub
pop
loopne
repnz
jp
jo
mov
push
loope
push
xor
les
mov
lret
jl
pusha
mov
filds
leave
test
movsb
stos
cld
jmp
pop
adc
add
popf
andb
mov
push
jecxz
stos
mov
sbb
ret
das
pop
rcrb
jg
push
push
outsb
pop
imul
divl
ret
cmp
mov
mov
icebp
or
inc
cmpsl
inc
cmp
imul
mov
xchg
cwtl
adc
sbb
sub
mov
push
inc
lds
ror
jns
mov
repnz
and
jg
xor
cmp
mov
jge
jno
sbb
pop
push
or
scas
xor
mov
scas
ret
push
xor
stc
xor
test
and
cmp
movsb
sub
sbb
ljmp
or
jne
xchg
add
mov
stos
aaa
jl
jb
dec
ror
ds
std
popa
movsl
lods
or
lahf
sub
dec
push
jns
lahf
test
insl
loop
inc
lods
cld
pop
lret
push
jecxz
stos
sbb
js
je
pop
add
mov
loope
es
sbb
cmp
mov
adc
cmp
decl
mov
jl
test
addb
imul
mov
push
and
int
mov
sub
aad
pop
cli
push
cs
jbe
fisubrs
sub
push
arpl
jbe
lods
xorb
add
mov
and
cmp
and
cmp
and
divl
hlt
adc
rcll
cmp
into
or
loope
jo
pop
xor
mov
xor
stc
negb
fwait
adc
adc
lods
jecxz
jno
push
cli
int
hlt
xor
bound
or
fwait
mov
gs
xor
loopne
pop
pop
xchg
aaa
pop
adc
into
jle
sarb
add
stos
pop
xchg
fmull
sbb
and
push
xlat
repz
sub
mov
js
mov
cs
and
xchg
cli
out
nop
adc
imul
mov
sub
fwait
movb
pop
lea
icebp
inc
call
stc
or
pushf
push
add
inc
out
dec
pushf
test
mov
insl
inc
mov
xchg
aas
pop
leave
je
rorb
mov
jecxz
icebp
xlat
negb
rcrb
add
in
sbb
scas
cmpsb
jne
jb
into
mov
repnz
xor
push
mov
inc
sub
pop
shrl
es
stos
lahf
insl
std
mov
dec
js
xchg
cmpsl
xchg
fucom
mov
push
cmp
lret
ja
xchg
mov
xor
popw
cmp
shl
mov
dec
aam
aam
ret
jae
scas
push
sub
mov
or
xchg
add
ss
imul
lods
out
jmp
adc
cmc
cs
add
cmp
test
sarb
and
dec
mov
xor
test
add
mov
pop
stos
int
cld
push
cmp
add
test
leave
or
mov
sub
ljmp
ja
xor
dec
outsb
mov
or
and
fwait
push
mov
dec
jle
bnd
xchg
cmp
and
stos
jns
imul
lods
or
imul
sub
push
inc
cmp
dec
bnd
imul
xor
mov
ja
jle
dec
lcall
sti
mov
and
in
ja
jbe
push
aaa
xchg
and
and
push
mov
jecxz
mov
xchg
shrl
and
sbb
mov
push
mov
in
std
push
cmp
and
xchg
iret
pop
icebp
jbe
inc
lods
sbb
jae
lret
test
shrb
sbb
aas
xchg
xchg
out
aam
sbb
jns
imul
mov
sti
inc
jmp
in
mov
sub
jg
leave
imulb
hlt
xchg
arpl
aad
mov
das
rcrl
shrb
aaa
arpl
or
sub
int3
mov
and
push
pop
xchg
jo
adc
and
aad
cmp
inc
sbb
mov
mov
enter
daa
xchg
cwtl
and
aam
loopne
add
sbb
push
ds
les
mov
xchg
and
sub
dec
xlat
ss
dec
mov
in
sti
xor
inc
cmp
mov
sub
xchg
adc
scas
stos
pop
inc
fucomp
push
dec
adc
inc
inc
jbe
imul
mov
shrb
rclb
clc
lods
pop
fmuls
sbb
cld
inc
add
sahf
shll
cmpsb
test
push
and
jle
pop
jns
lcall
adc
mov
sub
lods
push
sahf
or
cmp
jne
mov
mov
mov
xor
and
or
das
test
cmp
ficoms
divl
jb
shrl
mov
sub
into
out
mov
stos
xor
jns
loop
or
lods
out
fs
pop
mov
lods
ret
lret
mov
fnsetpm(287
out
jp
cli
add
xor
adc
or
xor
sub
loopne
stos
rcrl
call
popa
jo
imul
outsb
xor
cmp
sbb
xor
repnz
cmp
shr
jecxz
mov
arpl
subb
adc
nop
push
fimuls
shlb
inc
test
or
popa
les
sub
lea
pop
push
js
jmp
dec
pop
adc
jb
jmp
cmp
pop
push
push
loope
aas
mov
inc
repnz
std
jmp
rorb
daa
and
jecxz
jge
neg
inc
or
movsb
xchg
cwtl
sub
cmp
mov
rorl
cmp
mov
call
pop
das
sub
into
mov
sti
movsb
das
and
gs
mov
stc
jle
in
cmpsl
dec
jae
test
insl
push
or
in
cmc
fdivr
mov
xlat
lret
out
cmpsb
mov
cmp
das
mov
pop
test
shlb
fstpl
neg
ret
add
lahf
push
lock
cmpsl
fucom
stos
jecxz
dec
cmp
adc
or
cmpsb
popa
dec
shl
lods
sahf
test
mov
dec
xor
xchg
lret
push
add
mov
lea
out
cltd
jp
bound
adc
xchg
cltd
mov
test
mov
mov
rcl
pop
jg
pop
inc
jp
mov
or
ffree
add
leave
or
xor
cwtl
fwait
or
sbb
pop
inc
xchg
mov
rorb
pop
mov
mov
dec
popa
fwait
adc
sbb
hlt
clc
add
popa
adc
sbb
cmp
add
lock
or
in
cwtl
xor
out
push
mov
ds
xor
push
pop
sub
push
sub
sbb
pop
xor
mov
enter
jb
pusha
les
push
xchg
dec
int3
ret
jmp
lock
add
mov
subl
insl
mov
shrb
stos
xchg
and
xor
mov
xchg
cld
insl
push
adc
in
iret
test
inc
ret
ljmp
insl
imul
pop
out
inc
faddp
push
cmp
addr16
inc
mov
pushf
imul
mov
sar
clc
mov
dec
adc
leave
insl
pop
call
arpl
movsb
jbe
cmp
sbb
lods
or
pop
add
mov
pop
pop
cmp
push
cli
jmp
xor
cmp
popf
and
shlb
fwait
andb
sub
inc
daa
nop
xor
cmp
push
sti
jno
and
jl
fists
ds
jle
movsl
mov
xchg
inc
lahf
push
jmp
test
add
pop
inc
lret
push
shrl
clc
testb
je
pop
addb
loope
test
sub
xchg
adc
xchg
mov
adc
adc
out
or
mov
sbb
sbb
sti
inc
add
dec
lahf
xor
dec
push
sub
mov
sub
xlat
movsb
pop
clc
and
lcall
in
fdivl
shrb
mov
in
scas
cmpsb
in
test
addr16
pop
daa
mov
sub
and
test
cli
and
ss
adc
in
fcomps
test
lret
mov
ret
jne
mov
fstps
gs
add
rolb
aam
repnz
cld
outsl
jo
cmp
loopne
cmp
fisubl
fs
std
ficoml
xchg
in
data16
or
iret
mov
mov
xor
cmp
ljmp
loopne
pop
sarb
adc
sub
add
jbe
xchg
bound
std
sbb
cltd
cs
jno
dec
sub
push
mov
dec
in
sti
adc
mov
aad
jno
nop
inc
xor
addr16
mov
xor
les
jl
or
mov
negl
jnp
repnz
ss
jl
pop
testl
or
aas
pushf
push
xchg
lods
mov
rolb
ja
cmc
jecxz
dec
mov
and
add
outsb
mov
ja
addb
cmp
fcmovnbe
mov
cli
mov
inc
lock
sub
mov
andb
and
or
or
inc
jb
outsb
mov
xor
icebp
aam
cld
fdivr
jo
push
loopne
mov
aas
mov
xchg
pop
js
rorb
fistl
aam
insl
mov
xchg
cmp
push
mov
je
or
xchg
xchg
mov
rorl
fs
add
js
out
scas
insl
das
xchg
adc
paddsb
pop
add
jns
cltd
mov
int
lahf
pop
popa
mov
xchg
fldl
xor
int3
xchg
dec
sbbb
mov
pop
or
jae
cmpb
dec
mov
adc
arpl
xor
int3
or
arpl
adc
mov
ja
sub
addr16
inc
setns
fwait
jl
add
in
push
jne
pop
cmpsl
mov
fmuls
bound
movsl
push
jns
push
adc
or
sbb
jno
iret
sub
dec
add
out
inc
lahf
jp
jle
mov
mov
out
adc
jle
cmp
pusha
pop
pop
dec
fistps
sub
sbb
jl
xchg
mov
xor
popf
cmc
adc
push
adc
jne
cli
adc
and
shrl
lea
dec
mov
test
jnp
inc
lea
adc
mov
ret
mov
inc
ret
jae
mov
inc
mov
push
push
mov
add
pop
mov
popf
sbb
cltd
xor
inc
and
dec
rorl
sbb
mov
lahf
push
leave
in
lods
hlt
sbb
add
jbe
mull
inc
pop
adc
inc
scas
icebp
aaa
loope
mov
jno
xchg
adc
inc
sbb
push
cltd
push
fldl
xor
xchg
or
scas
notl
jns
push
dec
xor
fnstcw
cmpsb
jb
loop
mov
cltd
cwtl
daa
dec
lods
cmp
jecxz
jno
adc
jl
roll
or
sub
movsl
ret
and
push
adc
push
repnz
test
into
enter
and
adc
rcrb
cmp
js
shll
push
shll
aas
or
cmp
mov
adc
leave
xor
inc
sub
adc
dec
popf
repnz
inc
jle
inc
mov
push
sub
mov
pop
ja
sbb
push
xor
inc
sub
xchg
test
dec
out
addb
dec
mov
add
bound
loopne
jae
lret
call
pop
fcoms
divl
jbe
rcrl
mov
sbb
pop
cmc
lds
push
outsl
dec
adc
jne
sbb
fs
lds
out
ret
add
xchg
xor
out
repnz
cli
xor
xor
popa
or
dec
fimuls
gs
add
sub
dec
pop
out
and
imul
xchg
add
or
sbb
aam
sub
sub
aas
in
mov
jne
cs
cmpb
and
jge
xchg
scas
clc
inc
into
movsl
leave
fnstcw
loope
stos
adc
or
lea
cmp
jno
arpl
jbe
iret
pop
mov
jo
dec
fnsave
jmp
xorl
lcall
inc
sub
aas
jb
mov
je
ss
popa
das
mulb
mov
adc
sbb
mov
xor
and
inc
clc
pop
and
mov
call
lock
push
xchg
das
out
xor
imul
sub
xor
jne
mov
mov
imul
mov
fwait
xlat
ret
pop
in
lret
les
dec
and
jae
sbbb
jbe
rcrb
in
push
jge
aam
cmp
xlat
or
and
clc
ret
xchg
loopne
sub
lock
out
lods
je
fistpll
adc
test
mov
fimull
dec
insb
aad
repz
stos
add
mov
pop
mov
sub
std
dec
xchg
fsubrs
mov
ja
ret
sarl
pop
mov
add
and
roll
bswap
incl
ficoml
or
jecxz
xor
pop
mov
push
inc
add
fbld
pop
xor
clc
ja
pushf
dec
inc
out
and
cmp
or
and
fwait
stos
lea
daa
mov
cmpxchg
mov
mov
jns
cmp
xchg
sub
or
mov
push
or
andb
inc
jp
xchg
test
mov
sbbb
pop
lahf
or
out
fldenv
sub
xchg
lock
pop
xchg
xchg
std
push
pop
cmp
popf
sbb
cmp
push
or
stos
insl
outsb
xchg
and
lods
insb
outsl
cltd
push
jnp
push
sub
mov
aad
mov
iret
inc
test
jbe
xchg
bound
adc
mov
lea
fisttpl
das
mov
ss
mov
xchg
hlt
stc
addr16
lods
imul
fsubrp
in
lds
sub
mov
repnz
fs
pop
mov
sahf
arpl
fidivl
sub
jge
ret
repz
scas
aaa
mov
inc
mov
int3
cmp
push
rorb
jo
movsl
cmpsl
scas
jecxz
and
push
mov
movsb
push
sbb
cmpsb
cmc
sbb
movsl
imul
mov
mov
insl
daa
insl
jno
es
jl
fwait
aaa
dec
jl
pop
ds
add
shrl
push
lds
imul
call
push
nop
pop
inc
popa
cmpsl
js
lds
add
push
or
loope
loop
sub
pop
cmpb
inc
outsb
inc
jo
adc
movsb
jb
jp
pop
cmp
adc
test
ret
add
cwtl
and
adc
ljmp
sub
pop
testb
lcall
xor
mov
sub
jae
test
jnp
jg
xor
mov
push
pop
mov
sbb
mov
push
jne
addb
cmp
jbe
bswap
rclb
mov
and
ret
pop
pop
into
cwtl
sbb
cmc
mov
pop
outsl
imul
shrb
mov
ss
jecxz
jg
test
lds
mov
insl
je
cli
cltd
movsb
mov
pop
add
mov
in
mov
jmp
sub
jns
pop
push
shlb
adc
pop
xor
push
adc
addr16
sub
ss
call
mov
cmp
leave
fcom
out
inc
mov
daa
mov
lret
jne
sti
jo
push
cs
ja
nop
sti
movsb
dec
repnz
push
rclb
repz
mov
push
fmull
in
es
cmc
cmp
pop
push
pop
jmp
push
popf
xlat
jmp
dec
nop
pop
cmp
and
inc
inc
jl
aas
fisubl
jb
mov
bound
push
jecxz
mov
push
std
mov
data16
jg
lahf
mov
mov
dec
pop
and
fldt
cmp
mov
and
lock
mov
cld
mov
and
mov
ds
pushf
in
insl
cltd
imul
cmpsl
lea
mov
jb
inc
cld
xor
mov
dec
pop
and
mov
pop
shrb
outsb
sbb
dec
ret
and
jle
inc
ret
scas
mov
push
cmp
add
pop
lret
std
xor
jge
arpl
popa
xchg
daa
push
fildll
data16
jne
xor
push
xchg
cwtl
mov
stos
loope
add
lock
pop
les
mov
shlb
das
push
lods
test
cmp
xchg
jge
rcl
push
push
pop
pusha
mov
stos
mov
jno
aas
in
push
push
xor
sub
push
xor
pop
or
xchg
cmp
mov
mov
cwtl
mov
leave
jecxz
xchg
pop
in
bswap
ja
stos
jg
cmp
rorl
pop
orb
jge
jo
das
mov
push
xlat
out
popf
aam
bound
xchg
jns
mov
push
lock
ja
sti
sub
inc
or
addr16
inc
add
pusha
lock
fnstsw
mov
xor
jle
clc
pop
in
push
jle
xchg
or
xchg
ret
add
jmp
push
dec
xorw
push
lret
popf
inc
aam
mov
mov
test
js
inc
insb
fcmovb
addr16
sbb
scas
outsb
ja
push
shl
ret
or
sbb
push
inc
pop
int
mov
fsubs
into
test
insb
or
stos
sub
mov
pop
fcmovb
push
pop
xchg
dec
dec
push
stos
or
fimuls
andb
test
std
or
gs
mov
push
jbe
int
jge
adc
sbb
dec
or
das
add
outsb
int3
dec
add
pop
xchg
testl
ret
jo
push
xchg
scas
mov
mov
cmp
movsb
loope
call
and
js
fucomp
mov
movsl
enter
daa
lea
jno
pop
dec
jl
aaa
adc
subb
mov
pop
push
pop
lahf
lds
push
cwtl
ficomps
test
fs
sub
loope
lcall
js
dec
sahf
pop
aas
lcall
popf
mov
sub
jp
cmp
cmp
outsb
cmpsl
lea
inc
inc
sarb
fstps
jp
mov
ds
lret
loopne
xor
stos
int
std
shrb
imul
mov
fdivl
xchg
ss
xchg
dec
pop
test
arpl
xorb
xor
push
dec
mov
or
xchg
shlb
cmp
fidivrs
lret
imull
mov
lret
int3
rorl
and
repnz
xchg
into
jnp
sub
push
sub
xor
xor
or
test
push
fs
test
test
outsl
mov
lods
mov
mov
lret
mov
insb
jp
cli
int3
leave
dec
xor
dec
cmp
das
or
mov
push
ror
repnz
out
pop
sub
mov
pop
adc
inc
xor
xchg
stos
jns
sbb
dec
je
xlat
cs
sub
pop
iret
in
mov
pop
or
cs
test
hlt
nop
push
nop
jp
dec
push
pushf
out
inc
hlt
jmp
push
fisttpll
xor
xchg
jge
addr16
scas
je
inc
pop
sbb
adc
fbstp
inc
pop
mov
and
jb
out
dec
push
movsl
cmp
jecxz
push
stc
imul
or
std
arpl
cwtl
sbb
ds
mov
jge
push
inc
sub
fistpl
fmull
and
jb
das
movsl
daa
shlb
jmp
and
test
cmp
push
dec
pop
loope
cmpsl
mov
hlt
mov
dec
dec
gs
pop
xchg
dec
lret
mov
lret
jecxz
push
ds
mov
aad
pop
rolb
pop
xchg
sub
pop
aam
lret
ds
push
cld
push
fldl
push
xchg
pop
out
ljmp
cmpsb
lods
dec
mov
sbb
fcom
outsl
xchg
out
in
insl
repz
or
add
jns
cltd
push
add
rclb
leave
mov
mov
sti
push
cmpsb
lea
mov
mov
sub
dec
shrl
xor
imul
sar
inc
mov
jae
or
pop
xor
ret
cwtl
das
outsl
mov
sub
xchg
pop
ja
adc
sub
jmp
xchg
in
xor
jne
enter
aam
out
jl
sub
imull
gs
in
or
stos
arpl
cli
cmp
sub
jo,pt
addr16
push
sarb
fildll
mov
pop
into
push
jle
inc
in
push
jo
xor
fistpll
add
bound
mov
enter
sbb
sub
push
into
mov
stc
and
jae
ja
lret
scas
rorl
adc
iret
add
pop
pop
add
daa
inc
jecxz
pop
jae
or
inc
xchg
lret
fbstp
push
xor
and
je
js
mov
jle
imul
xor
lds
or
dec
pop
repnz
pop
xlat
leave
dec
int
hlt
std
adc
jbe
out
jge
inc
insl
sbb
add
push
rcrl
or
or
int3
cmp
orl
mov
jo
push
dec
scas
xchg
xchg
lcall
insl
dec
movsb
insb
cmpsb
bound
sub
cmpsb
sti
push
ret
in
jae
aaa
enter
daa
mov
sbb
mov
xchg
mov
ds
out
lods
movsl
xlat
mov
and
or
lahf
in
sub
imul
test
das
mov
cmp
pop
cmp
pop
xchg
pop
pushf
js
gs
pop
jle
or
mov
loope
lods
sub
outsl
cmp
lahf
dec
adc
pop
sub
andb
jae
repnz
mov
cmp
mov
std
push
xor
int
repnz
in
lahf
pop
hlt
icebp
gs
int3
fsub
cld
mov
jo
pop
sahf
cmp
scas
test
jecxz
jg
adc
mov
scas
orl
mov
das
or
test
scas
lret
add
mov
mov
into
pop
mov
cmc
sbb
push
outsl
in
sbb
loop
xchg
add
inc
or
lret
mov
lods
dec
fldt
mov
add
cli
jmp
xchg
cmp
aad
or
xchg
gs
repnz
std
rcrw
xor
adc
adc
add
cmp
cli
out
cmp
jbe
sub
sbb
sti
into
clc
fldt
adc
aad
push
mov
dec
mov
xor
pop
in
pop
cmp
call
push
leave
adc
test
call
repz
xchg
and
dec
adc
lret
xor
inc
loop
movsb
inc
jns
xchg
aas
sbb
insb
jb
testl
das
fsub
add
imulb
pop
or
or
bound
std
push
xor
movsl
or
dec
xor
fisttpl
jnp
in
nop
push
lock
aas
sbb
test
mov
mov
xor
inc
lret
andl
sbb
je
cmpsl
mov
imul
mov
xchg
lret
adc
and
pop
xchg
pop
hlt
leave
aam
mov
cmp
not
adc
pop
ret
int
adc
leave
or
clc
jae
add
popf
loope
ljmp
sub
arpl
cmp
arpl
dec
bound
add
cmpsb
cltd
loopne
test
hlt
outsl
mov
push
incb
int3
loop
test
jae
xchg
and
sbb
inc
mov
pop
mov
fldt
or
lahf
add
pusha
push
fildll
push
xor
ficoms
mov
pop
ss
mov
arpl
add
xor
imul
or
xchg
rcrl
fnclex
jne
lret
mov
pop
bound
xchg
jns
int3
push
in
jns
xchg
cli
and
out
lods
dec
sub
cmp
addr16
fwait
jp
adc
mov
test
and
mov
pop
pusha
lret
push
lahf
out
ss
imul
lret
xchg
out
jo
xchg
adcl
mov
or
mov
and
lcall
xor
jg
pop
repnz
pop
loope
iret
pop
cwtl
and
nop
vmulpd
adc
out
add
jae
mov
inc
xchg
enter
fdivs
mov
out
daa
cs
enter
xchg
pop
pusha
lds
xchg
dec
mov
jmp
xchg
leave
rcr
hlt
dec
sbb
mov
push
je
jge
pop
in
xor
lds
fstp
mov
add
inc
int3
and
loop
push
imul
scas
jae
jbe
jnp
mov
ljmp
push
out
jp
cmpsb
jle
cs
pop
jbe
enter
daa
mov
xor
push
sub
jno
cmp
inc
dec
leave
pop
adc
icebp
insb
mov
and
data16
and
mov
sti
push
cli
xchg
cmp
and
pop
mov
adc
pop
mov
pop
shl
jne
jmp
adc
xor
outsb
insl
movsb
repnz
xor
cwtl
out
xorb
pop
add
xchg
xor
push
aaa
push
outsb
int
lret
pop
sub
in
jae
test
scas
out
mov
mov
subl
sbb
pop
test
or
sub
push
jg
or
mov
push
or
ds
std
mov
imul
scas
xor
fldenv
fadds
stc
imull
movsl
shll
inc
sbb
into
inc
sub
cmc
loope
cmp
mov
jl
loop
mov
stc
divl
loop
cli
das
aad
and
jnp
xor
sbb
push
pop
cli
xor
shlb
loop
std
cmp
dec
jl
add
inc
scas
gs
loopne
cwtl
sti
stos
pop
imul
adc
xchg
imul
addr16
xchg
cmp
sbb
rolb
sub
cld
add
gs
sti
jge
mov
out
add
nop
mov
dec
setns
push
adc
repz
repz
cmp
pop
xchg
fisttpl
pop
sub
pop
andl
pushf
push
cmp
jmp
dec
or
jecxz
inc
imul
bnd
adc
dec
cld
mov
mov
divb
mov
mov
mov
mov
push
mov
cmpl
push
fstpt
mov
mov
fisubrs
das
arpl
hlt
mov
inc
out
and
or
rcll
push
test
dec
adc
fwait
cmpsl
mov
cmp
testl
lret
subb
and
fildll
or
adc
shlb
insl
arpl
fildll
inc
push
cmpb
in
xchg
clc
scas
in
fsubl
ljmp
pop
lods
and
mov
sahf
loop
xchg
je
inc
push
and
dec
xrstors
add
daa
mov
les
in
daa
mov
sub
dec
in
xor
ret
xchg
xor
popa
dec
subb
pop
test
add
xchg
jle
out
xor
not
or
and
xor
jns
mov
bound
sub
push
push
pop
ja
outsb
jg
adc
sti
inc
add
push
or
pusha
sbbb
jns
jne
xor
mov
mov
out
cmp
ljmp
inc
inc
in
cmp
out
nop
fldt
xor
pop
addr16
mov
inc
mov
pop
sbb
mov
in
mov
pusha
sub
cli
sub
xchg
cmp
jle
push
fwait
mov
mov
mov
push
adc
popfw
mov
addr16
push
dec
jne
stos
cmp
xor
mov
inc
cmp
movntq
cmpsb
add
xor
ret
and
jb
xor
jae
fwait
sbb
cmp
sbb
xchg
fcmovu
lret
hlt
xchg
push
and
sbb
in
imul
icebp
fidivs
jmp
lods
mov
shlb
loope
ds
and
xchg
mov
arpl
jne
jge
push
ret
jne
aaa
pushf
outsb
sub
add
xchg
push
int3
adc
pop
push
mov
push
dec
aas
sbb
pop
xlat
scas
push
push
and
cmp
adcl
cmpsb
add
in
inc
xchg
ret
enter
daa
mov
xorl
add
dec
cmp
add
adc
xchg
movsl
in
iret
and
popa
jg
adc
fwait
push
inc
and
jecxz
les
in
js
push
cwtl
pop
cld
push
lock
cs
loop
xchg
sub
arpl
loope
jle
rcrb
mov
adc
repnz
negb
stos
orb
sbb
pop
sub
xor
xor
cmp
ror
mov
fcmovb
mov
lcall
xor
sub
push
sahf
cmpb
scas
jbe
orb
xchg
jg
push
and
mov
pushf
mov
sbb
mov
clc
fstpt
sti
loopne
imull
cmpsl
lret
fadd
dec
out
decb
ret
and
out
test
dec
xor
or
push
add
test
inc
icebp
lods
sbb
adc
out
movsb
add
gs
xor
fwait
inc
or
mov
std
std
loopne
movsb
push
pop
mov
xor
dec
inc
inc
adc
xlat
das
add
fsts
dec
idivl
cmp
in
xlat
jmp
ja
repz
out
mov
rol
mov
cs
lret
leave
xor
nop
addr16
dec
outsb
popf
add
pushf
xor
xor
sbb
fucomip
fcoms
icebp
lods
fstpl
pop
notb
cld
nop
lea
daa
sbb
inc
lock
mov
aas
push
ds
jb
cmc
clc
dec
jae
inc
je
fs
jecxz
ret
mov
mov
pop
jmp
mov
mov
adc
adc
fiadds
ljmp
mov
nop
pop
lock
das
inc
dec
inc
mov
cld
ficoml
dec
ja
in
xor
ret
into
adc
pop
cs
push
push
sub
mov
into
add
cld
ficomps
mov
imul
pop
xor
mov
sub
inc
adc
stos
sbb
jmp
dec
push
inc
sub
clc
jmp
fs
ljmp
mov
mov
add
cmp
jnp
mov
cwtl
add
push
cltd
sti
mov
test
cmp
xchg
aam
dec
lcall
xchg
mov
sbb
xor
lock
or
int
inc
movsl
add
push
xor
add
xchg
ss
sbb
out
or
lods
xor
push
insl
mov
movsl
jb
mov
fsts
mov
inc
cltd
jle
or
add
xchg
dec
dec
xchg
or
jne
cld
mov
sbb
pushf
push
cwtl
jns
popa
cmp
dec
push
fcoml
and
sub
das
adc
addr16
xchg
data16
add
pop
mov
in
in
sahf
jne
add
fistps
push
fldl2t
inc
pop
mov
subl
lcall
sbb
push
mov
shrb
jne
insb
xchg
cli
scas
cli
addb
aad
fmul
sbb
jne
pop
test
icebp
push
jae
leave
scas
inc
pushf
and
push
mov
sbb
lea
gs
xlat
mov
aas
ljmp
add
sarb
repnz
mov
fwait
hlt
fisubs
inc
jbe
ljmp
test
or
pop
adcl
add
push
int3
sti
arpl
addb
das
dec
in
xor
mov
mov
cmp
jns
or
jecxz
cmpsb
test
sahf
enter
daa
mov
xor
insb
or
mov
lock
ds
inc
mov
in
iret
popa
and
mov
lahf
inc
pusha
xor
xor
xor
inc
mov
sub
cmpsb
dec
push
pop
or
push
pop
cmp
xor
stc
imul
outsb
xor
cld
shr
into
loopne
push
mov
mov
xchg
ficoms
add
push
into
xor
das
xor
cmp
sub
sub
fiadds
jno
addr16
das
fsub
je
sub
and
and
scas
mov
xor
sub
and
movsb
insb
ss
mov
cmp
mov
xchg
imull
dec
mov
shl
les
add
sub
outsl
movl
outsl
mov
loop
xchg
stc
gs
lods
adc
adc
and
lods
add
mov
push
pushw
nop
mov
cmp
mov
fdivr
fists
loopne
pusha
sbbl
inc
xchg
imul
lods
add
sbb
xchg
mov
pop
sbb
ss
xchg
sub
shlb
cmp
outsl
lods
mov
aad
ficomps
dec
int
push
inc
loop
fld
mov
les
addl
sbb
into
jle
push
or
into
pop
out
and
push
xchg
pushf
lods
pop
movsb
jmp
mov
insb
mov
inc
ja
xor
out
mov
jb
or
dec
ljmp
jecxz
outsb
or
notl
mov
cmp
cwtl
add
jg
mov
mov
icebp
fisubs
mov
shrl
lock
das
and
push
mov
push
loop
shll
call
popf
insl
sbb
bound
movsl
sbb
add
cld
or
repnz
pop
push
mov
enter
jo
adc
push
inc
cmpsl
rorb
sbb
and
sti
ret
jp
push
push
or
cmp
and
dec
xchg
pop
jmp
ljmp
stos
lods
imulb
sub
fs
inc
push
fldenv
xchg
jne
movsl
cmpsl
cltd
xor
test
fcomp
mov
test
xchg
rorl
test
fwait
out
xchg
xor
mov
pop
mov
jae
xor
mov
cmc
push
add
mov
or
mov
or
or
popf
jo
mov
or
call
inc
imul
xchg
fldenv
inc
xor
ds
js
fwait
dec
jns
lcall
xchg
push
out
clc
mov
sarl
and
xchg
out
mov
sub
sub
fisubl
push
dec
jp
in
mov
call
and
icebp
add
in
jmp
pusha
pushf
cmpsb
outsb
fistpll
stos
xchg
xchg
loop
mov
ds
les
cltd
push
cmp
push
pop
mov
lret
stos
pop
push
shll
xor
insb
icebp
jnp
xchg
scas
pop
gs
xor
mov
iret
jl
sbb
leave
sbb
loopne
adc
jae
cmp
inc
lahf
jp
or
adc
je
xor
jo
inc
and
decb
adc
popf
shrl
shl
mov
fldenv
rcl
sarb
in
ss
and
call
mov
jge
divl
arpl
jmp
sbb
or
scas
jns
ss
cmc
int3
out
mov
push
adc
xor
adc
lret
sub
cmp
cmp
movsb
cwtl
lods
xor
std
ret
cmpsb
pop
inc
jno
jne
out
mov
and
xchg
jl
mov
dec
push
pop
sahf
ds
lahf
xor
repz
sbb
lahf
pusha
arpl
push
mov
jge
pushf
xchg
cmp
imul
loope
pop
xor
inc
js
xchg
out
pop
jp
mov
loope
icebp
into
sub
fdivrs
aas
popf
sti
outsb
xchg
insb
cmpsl
adc
movb
subb
sbb
cld
fadds
push
push
push
inc
sbb
sub
add
pop
lock
lcall
out
fmull
outsb
sahf
mov
cld
cmpb
test
mov
jo
mov
jne
and
ret
repnz
mov
jno
add
jmp
dec
rol
jnp
add
sbb
or
into
ljmp
xor
fistpll
loop
inc
fs
sbb
pop
fs
jno
adc
iret
push
dec
and
lods
jmp
jns
out
push
enter
scas
xor
imul
lcall
adc
xor
pop
enter
int3
stos
fisubrs
or
adc
xchg
jp
inc
sbb
jno
add
sub
mov
dec
in
cmpsb
addr16
mov
setae
push
jmp
nop
sbb
mov
inc
push
and
fsincos
jge
les
fdivp
inc
int
and
lea
int
call
out
jle
pop
lcall
pushf
push
dec
lock
sub
pop
invd
mov
mov
in
lea
xchg
ret
add
pop
orl
push
je
call
out
idivb
xor
std
cmpsb
outsb
dec
cwtl
rolb
pop
mov
pcmpgtd
addl
mov
fisttpl
popa
mov
into
cmp
sarb
das
add
pop
mov
push
sbb
lret
xchg
roll
pop
push
insl
add
sbb
inc
mov
cmpsl
xchg
mov
jl
lcall
push
stc
mov
ja
push
mov
jo
jge
and
hlt
aam
hlt
adc
or
scas
fldl
mov
pop
ret
xor
adc
mov
int3
mov
cwtl
aaa
xchg
dec
cmp
in
pmulhuw
imul
xor
cltd
imul
xor
inc
inc
xchg
dec
push
shll
das
ss
cmpsl
cmp
lret
jl
stos
and
mov
adc
add
push
mov
pop
sub
adc
pop
rolb
add
mov
sub
mov
dec
int3
ja
aad
dec
in
mov
or
ret
hlt
pop
dec
pop
or
sbb
nop
out
xlat
sub
xchg
pop
jns
xchg
in
jnp
xchg
ss
pusha
sub
and
mov
jp
out
mov
lock
mov
mov
jle
adc
pushf
add
add
xchg
mov
mov
xchg
adc
or
jnp
pop
mov
mov
push
or
cmp
xchg
xchg
mov
insb
pop
xor
jnp
call
jecxz
jnp
jb
mov
iret
fstpt
xchg
pop
pop
lahf
int3
inc
sbb
call
inc
mov
inc
dec
push
scas
in
fdivrl
xchg
push
cmp
sbb
shrb
push
mov
lds
mov
repnz
mov
aaa
push
or
outsb
jae
je
leave
arpl
dec
inc
jbe
xor
jge
sahf
and
aaa
fnstcw
fwait
or
or
int
fs
rorl
inc
push
cmc
inc
xchg
xor
outsb
push
les
test
leave
and
push
sub
mov
notb
enter
daa
xchg
push
cmp
mov
jno
test
jl
inc
cmc
dec
test
and
movsl
cli
jg
and
loop
lahf
jg
pop
push
mov
inc
test
es
or
test
sub
cmp
arpl
js
xchg
adc
mov
lods
jmp
daa
pushf
shrl
cmpsb
pop
cmp
das
stos
outsb
stc
inc
jb
in
jbe
shlb
mov
sbbl
jge
scas
xor
ds
sbb
pop
outsl
dec
push
push
or
loopne
aaa
ds
sbb
sahf
imul
sbbb
jg
adc
lods
loop
mov
cmpsl
mov
and
jmp
ret
or
cmp
sub
jno
test
int
gs
repnz
xor
fdivrs
std
in
dec
xor
and
loop
das
stos
stc
shll
xor
ficoms
pop
mov
mov
mov
jb
cli
insb
pop
xor
ret
cmc
jp
or
jmp
ja
sbb
adc
pop
out
push
adc
in
adc
pop
addl
cmp
lahf
out
lods
fwait
jle
test
sub
dec
ficomps
hlt
pop
in
adc
sti
cmp
out
jb,pn
sub
nop
clc
and
dec
mov
lock
xchg
imul
jmp
js
shld
lea
inc
mov
outsb
sub
xor
pushf
add
jmp
push
cmp
push
pop
inc
test
inc
add
push
jb
xlat
push
dec
fcomps
mov
dec
xchg
push
idivb
add
dec
xchg
cwtl
jnp
dec
mov
mov
out
cwtl
sti
inc
dec
pop
ret
mov
out
lods
mov
std
in
lock
das
fists
sbb
imul
lods
es
imulb
ljmp
cmpsl
xchg
mov
push
lahf
cld
pop
push
ss
cmp
cmpb
lret
dec
pop
popa
pop
dec
sub
sub
popf
or
or
ret
cwtl
dec
mov
mov
adc
lcall
ljmp
or
int3
fdivrl
sub
xchg
nop
or
mov
popa
add
add
push
inc
daa
add
iret
ret
shrl
scas
inc
push
sbb
sbb
ss
pop
or
movsb
cwtl
push
cmp
add
out
cli
mov
xor
add
cmpsb
cwtl
xor
addr16
mov
outsb
xor
pop
or
dec
ja
push
dec
dec
fistps
inc
pop
push
repz
loopne
fwait
and
scas
jne
mov
mov
call
xor
push
sbb
in
std
xchg
test
cmp
or
jne
inc
imul
addr16
jp,pt
lahf
jmp
test
out
orb
sbb
pop
mov
pusha
shrb
fbstp
in
mov
xchg
fisubs
sbbl
pop
mov
xlat
mov
dec
push
xchg
stos
add
sbb
insb
sub
jnp
push
scas
and
mov
cmp
data16
cmp
test
add
dec
pop
dec
inc
and
ljmp
dec
push
inc
push
cs
cmp
cmpsb
dec
push
xchg
lods
mov
pop
movsb
xor
adc
inc
rorb
xchg
repnz
and
adc
xor
and
sub
sbb
jl
aaa
cwtl
fsts
fs
int3
mov
xchg
lret
push
fdivs
lret
xor
leave
dec
cmpsl
scas
into
or
and
cmp
movsb
scas
daa
dec
push
jns
out
cmpsb
or
add
enter
daa
xchg
xorb
sub
cmc
lods
jnp
hlt
frstor
mov
outsb
shlb
cltd
push
adc
pop
pop
add
push
icebp
xor
pusha
jecxz
out
insb
jg
jle
lock
daa
outsl
pop
clc
jle
push
xchg
pop
loope
imul
add
outsb
pop
or
adc
jl
in
jb
clc
adcb
add
clc
sub
mov
outsb
int
addr16
sub
xchg
mov
lcall
ja
loop
sbb
or
sahf
or
test
je
push
mov
mov
mov
and
cli
int
ss
lods
cmp
out
nop
mull
cmpsl
lret
push
mov
movsb
into
mov
test
xor
cwtl
cltd
loop
push
lret
stc
mov
enter
push
dec
mov
lods
mov
and
gs
cli
xor
xor
sbb
decb
lods
gs
sub
lahf
push
jmp
push
rorl
jb
cli
imul
xchg
add
pop
sbb
out
push
xlat
out
subb
mov
mov
jl
data16
call
sub
in
mov
ljmp
fldcw
add
pop
xor
testl
les
cmc
pop
add
adc
xor
aas
push
pop
push
mov
inc
sbb
xor
mov
dec
dec
stos
fs
mov
xor
rcl
std
hlt
sbbl
ja
mov
subl
mov
addr16
push
das
mov
jmp
lret
and
lcall
iret
inc
rcll
mov
test
push
mov
sub
cld
mov
fwait
lret
stos
cwtl
cmp
test
mov
scas
fsubl
sub
add
aam
sbb
push
fstl
out
xchg
pop
cltd
scas
ljmp
pop
lods
aaa
cmp
mov
lea
fstl
push
outsl
cpuid
sbb
add
xchg
lahf
test
bound
xchg
add
add
add
outsb
xchg
jae
rorl
rcrl
subl
add
mov
push
or
fdivl
incl
mov
pop
or
lds
ja
pop
loope
shlb
xor
js
dec
and
xchg
jne
cmovg
xchg
adc
call
cmp
in
hlt
aad
aam
mov
int
sub
sbb
in
stos
jp
or
mov
insb
out
xor
jo
jle
adc
sub
insl
repnz
fists
mov
and
mov
jmp
push
popf
jnp
cmp
xchg
jmp
js
andl
inc
shrb
jnp
clc
std
scas
xchg
cwtl
push
or
adc
mov
cltd
loop
ret
pop
test
es
sub
or
orb
inc
lods
dec
xchg
ficompl
pushf
xchg
add
loop
add
cmpsl
imul
push
fisubs
mov
mov
fnsave
mov
arpl
aas
aaa
jbe
inc
movsl
jge
xchg
outsl
sbb
or
out
loopne
add
adc
pop
xor
mov
inc
push
jo
xchg
and
lods
subl
movsb
cmp
push
enter
nop
icebp
and
les
insl
daa
test
sbb
cmp
insl
jno
ss
jl
jmp
push
ds
gs
movsl
or
stos
and
dec
lahf
mov
int
test
mov
test
mov
lret
pop
movsl
aad
js
dec
mov
aaa
aam
push
xor
push
pop
into
sub
push
arpl
dec
mov
jge
jnp
enter
cld
shr
xchg
andb
or
xchg
ds
xor
and
dec
clc
dec
int
cwtl
xchg
sub
aad
insl
je
lcall
and
lea
sub
sbb
scas
cmp
in
orb
sbb
push
arpl
mov
jae
and
mov
int
adc
fsubs
dec
test
inc
fisttpll
mov
mov
scas
cmc
mov
mov
adc
loop
cmpsb
hlt
stc
inc
nop
lock
mov
shrw
sahf
or
mov
cmp
xor
popa
leave
cmp
mov
or
test
shl
cmp
sti
pop
and
adc
imul
add
add
push
nop
xchg
ret
dec
cmc
sbb
and
shrb
xor
loopne
mov
push
outsb
sti
xchg
testb
sub
in
scas
stc
outsb
dec
dec
out
cmpsb
inc
mov
dec
fldenv
cmc
test
sub
lea
mov
aas
sbb
insb
push
xchg
pop
mov
lea
scas
enter
loope
push
out
push
pop
clc
rcr
xchg
xchg
aas
jno
mov
jb
dec
pusha
sbb
jecxz
jae
add
std
fwait
fs
cwtl
icebp
add
mov
roll
popf
sub
fcmovnbe
int
mov
imul
add
andl
cmp
and
xorb
push
ljmp
mov
test
dec
mov
add
lret
sbb
sbb
mov
mov
int
xlat
rcrb
or
aam
xor
push
adc
and
mov
pop
cli
xchg
push
xor
popa
popa
lds
lods
mov
mov
es
push
dec
sub
lcall
mov
adc
sbb
xchg
enter
mov
jle
imul
in
adc
inc
stos
lock
push
adcl
add
or
cld
mov
jg
jecxz
fisubs
hlt
testl
pop
cmpb
xchg
out
inc
mov
or
xchg
dec
fwait
subl
xchg
je
mov
jns
ret
scas
setae
mov
fwait
sub
push
pusha
mov
fisubs
push
loopne
mov
sub
jle
xor
sub
mov
fbstp
dec
jmp
je
popa
cmpl
push
movsl
ret
mov
mov
cmp
or
stos
jmp
in
inc
xchg
aam
popf
cltd
jne
out
movsl
sbb
push
lods
push
adc
das
iret
clc
cld
in
adc
ret
cmp
mov
inc
stos
push
or
std
in
inc
sub
jne
or
cmp
scas
sti
loop
int3
jo
fimuls
ffreep
daa
push
rolb
mov
xor
hlt
push
cmp
arpl
popf
test
add
jge
ljmp
push
cmpsl
out
loop
mov
int3
xchg
inc
add
push
sahf
in
xor
jg
jmp
mov
cmc
and
dec
mov
push
pop
jnp
in
stos
adc
enter
daa
test
sbb
mov
jl
stc
js
shrb
ds
stos
movsl
pcmpeqd
mov
nop
push
add
test
xchg
inc
jle
xlat
jne
dec
pop
int3
in
js
pop
lcall
jg
loope
jne
sub
ljmp
and
adc
xor
or
mov
fnsave
add
fsubrs
push
dec
jg
int
lods
adc
pop
in
dec
sub
adc
push
fdivrl
and
sahf
push
cmpsb
pop
test
sub
subb
cmc
mov
jno
mov
cmpsl
mov
sbb
and
call
lods
cmp
pop
shll
lods
sbb
xlat
js
mov
pusha
sbb
push
lcall
add
xchg
loop
das
push
stc
clc
xor
or
dec
and
push
ret
test
mov
in
cli
xchg
mov
bound
into
adc
push
jo
decb
jnp
loopne
cmp
pop
inc
and
sbb
imul
aad
add
mov
xchg
ss
sub
xlat
fadds
sub
sub
cltd
inc
sti
inc
push
xchg
cs
xchg
adc
nop
mov
or
lahf
sub
add
les
mov
sub
mov
mov
push
mov
data16
push
jae
pushf
add
jmp
arpl
fwait
out
inc
sbb
stc
aas
adc
dec
jb
lea
dec
cmp
loope
jecxz
or
inc
dec
pop
std
inc
sub
cwtl
lods
adc
cmc
in
pop
mov
jns
sbbl
fildl
inc
mov
out
push
sub
push
das
jl
inc
mov
inc
add
dec
sarl
xor
dec
xor
push
cmpsl
orl
icebp
fdivrs
test
loopne
pusha
lret
mov
or
xchg
xchg
in
add
sub
mov
enter
dec
push
xlat
daa
push
fstp
sarl
mov
loope
in
popa
js
insl
lods
or
clc
pop
out
push
mov
push
and
mov
les
cltd
inc
repnz
in
mov
mov
add
or
sub
sarl
add
pop
push
push
imulb
and
xchg
add
cmp
call
imul
cmp
repnz
dec
sbb
aaa
or
mov
cmp
ss
in
dec
dec
mov
je
or
xor
fwait
mov
call
jne
icebp
mov
add
push
or
bound
call
adc
mov
int3
out
js
sub
adc
test
dec
sbb
mov
dec
mov
js
mov
inc
cmpsl
ljmp
dec
mov
xor
jmp
aas
pop
xchg
push
add
or
dec
stos
pop
mov
or
cmp
pop
fsubrs
xchg
jl
adc
dec
sbb
push
sbb
sub
pop
repz
in
popl
or
or
js
xchg
inc
stos
mov
bound
pop
in
imul
mov
rcrb
mov
sub
leave
js
out
hlt
mov
inc
mov
jge
and
sbb
aam
aaa
aad
and
aad
mov
int3
jge
lahf
pop
pushf
ret
int3
push
subl
lods
scas
imul
adc
pop
movsb
dec
movsb
push
data16
cmpsb
xchg
push
int
xchg
insl
je
das
dec
pusha
daa
and
cmp
push
pop
jl
fisttpll
inc
pop
idivb
or
xchg
push
negl
push
xor
push
ljmp
cmp
js
push
pop
mov
lds
xorl
xorl
cmp
pop
adc
or
and
int
add
add
adc
push
dec
jp
int
cmpsl
fildll
aaa
leave
rolb
imul
push
sub
jecxz
xor
xlat
loop
sahf
cmc
add
lds
adc
pop
lods
mov
mov
mov
inc
int3
mov
push
and
pop
pushf
fnstcw
cmp
sbb
icebp
mull
mov
mov
es
lods
das
into
pop
fwait
sahf
cmc
sbb
dec
xor
or
loop
in
and
scas
jns
fs
les
lcall
lods
insb
rol
mov
adc
xor
out
or
jns
mov
out
cmp
loopne
jo
pop
arpl
mov
adc
sti
filds
push
add
xchg
dec
int
sbb
cwtl
lock
xlat
movsb
or
sbb
mov
mov
fnstcw
mov
and
inc
mov
test
les
sbb
dec
lods
jae
das
mov
lahf
call
push
dec
pop
sbb
test
pop
inc
jg
scas
test
leave
pop
add
inc
mov
push
ss
scas
push
push
dec
mov
fnstenv
imul
mov
mov
mov
pop
cmp
hlt
inc
into
dec
jae
jecxz
xor
lea
jmp
aam
xchg
xor
pop
jl
mov
std
je
and
inc
js
or
fsubrs
insl
xchg
in
sub
lcall
scas
icebp
loope
or
lret
clc
mov
mov
mov
or
sub
or
aam
push
inc
aam
push
push
lcall
clc
xchg
inc
xchg
aam
pop
ljmp
or
mov
mov
cwtl
xchg
lods
sbb
push
sti
lret
mov
mov
decl
test
jge
mov
cmpb
pop
dec
imul
test
mov
sbb
or
xchg
pop
mov
mov
scas
mov
add
push
ja
pushl
clc
xor
push
out
mov
jp
test
mov
dec
pop
idivb
ja
jl
dec
stos
negb
or
lahf
sbbb
mov
lods
mov
test
out
xor
das
jns
sbb
pop
and
sarl
loopne
int
or
mov
loop
add
or
add
add
ret
mov
in
in
shll
xchg
fcomip
mov
ja
jmp
or
ds
sub
jp
mov
mov
stos
roll
shrb
fdivrs
dec
and
fisubrs
clc
iret
mov
arpl
cmp
sub
mov
inc
mov
fs
repz
mov
fidivl
inc
xchg
or
sbb
imul
int
in
adc
mov
push
clc
leave
out
adc
hlt
jmp
mov
adc
jp
stos
iret
cld
jge
cmp
aaa
xchg
test
shlb
push
mov
push
data16
xor
mov
cmp
rep
fimull
sbb
jns
mov
daa
xorb
jno
sbb
mov
js
movsl
sbb
lods
int
sbb
repz
test
shll
sbb
add
rcrl
mov
cmp
pop
hlt
jmp
push
cmp
lcall
cmp
hlt
outsb
call
mov
call
movb
sti
push
sbb
lds
or
push
push
jmp
sub
mov
lcall
cld
fmull
in
scas
sahf
cwtl
push
or
and
in
jg
jae
mov
sub
mov
call
and
adc
ss
gs
rcll
mull
bswap
and
outsl
roll
inc
sbb
dec
sbb
cmp
ljmp
bswap
outsl
mov
fiadds
fs
lods
adc
data16
leave
push
lods
push
or
mov
les
cli
std
lret
jno
in
cmp
aam
or
repnz
aam
xor
lds
pop
sbbb
adc
mov
mov
loopne
jnp
or
adc
shl
jecxz
aad
mov
mov
sub
xor
movsb
jno
cs
int
aad
outsl
inc
nop
aas
shrl
dec
push
lcall
popf
rol
mov
pop
xor
lea
fs
pop
int3
imul
mov
fstps
xchg
dec
pop
loope
pushf
inc
sub
stc
aas
dec
mov
jb
pusha
push
dec
sub
je
push
popa
jecxz
xchg
clc
test
std
nop
pop
outsb
cwtl
and
mov
mov
cmp
orl
jb
mov
shlb
loop
xchg
das
cmp
mov
mov
and
jmp
es
loop
insl
add
dec
sub
stos
cmpsl
subl
lods
cld
subl
and
push
jne
sub
and
adc
xor
loop
inc
aam
popa
out
arpl
mov
and
xchg
adc
aad
mov
push
lods
jecxz
stos
mov
sbb
pop
xchg
repz
in
add
ljmp
test
imul
dec
shr
mov
out
xor
imul
jmp
cmp
stos
mov
xlat
rolb
outsb
xchg
adc
mov
push
xor
in
pop
mov
mov
cmc
dec
pop
mov
movsl
ja
out
dec
sahf
push
xchg
inc
push
cmp
fwait
push
in
dec
scas
ljmp
sbb
add
bound
sarb
push
arpl
mov
and
sub
pop
in
loopew
inc
jp
mov
insl
mov
and
jb
out
in
mul
pusha
fld
push
fists
jmp
dec
jmp
aad
or
out
popf
pop
es
mov
or
stos
inc
add
and
add
inc
in
scas
adc
and
mov
iret
adc
push
pusha
pop
popa
stos
mov
mov
inc
mov
push
or
outsb
loopne
inc
test
sti
or
scas
xor
imul
dec
lds
sbb
mov
sub
cs
xchg
arpl
push
add
in
jge
cmp
sbb
mov
stc
add
cmp
push
jmp
pop
cli
arpl
push
inc
adc
push
jo
cwtl
fisubrs
cmp
cmp
nop
ljmp
adc
pusha
shrl
enter
daa
orl
jb
jb
push
jl
and
dec
pop
xchg
movsl
and
mov
mov
jmp
insl
test
call
mov
minps
jne
pop
scas
rcll
push
mov
add
in
sbb
rep
dec
inc
lods
adc
ret
movsl
sbb
repz
mov
add
sahf
popf
xor
int3
sub
sub
repnz
lcall
pop
fdivrl
jp
sub
cwtl
fildl
sti
ss
jg
xchg
jp
sahf
aam
mov
push
insb
mov
or
and
and
pop
insb
lahf
cmp
mov
mull
mov
rcrl
sbb
scas
popf
into
pop
ljmp
xor
sub
pop
out
jge
mov
sbb
xor
data16
lods
cmp
int
test
jo
pusha
cli
add
xor
xor
mov
or
insl
idiv
lods
gs
addb
cmpsb
adc
repz
outsb
cmp
inc
imul
iret
sbb
sbb
push
xchg
xlat
and
sub
fs
mov
xchg
xor
les
aad
cmp
nop
sbb
mov
fnstcw
les
inc
repz
scas
xchg
pushl
test
sbb
adc
dec
arpl
push
rcrl
setg
dec
adc
aas
in
adc
pop
movsl
dec
mov
push
and
test
das
testb
idiv
aaa
iret
scas
cwtl
ffree
xorl
and
sbb
fistl
push
cmpsb
lock
mov
add
fisubs
pop
dec
shrl
sbbl
dec
and
xchg
cmpsl
addb
shl
icebp
pop
ret
push
cld
popa
ja
lret
stos
mov
loopne
mulb
in
test
shl
pop
mov
fstps
ret
repnz
pop
push
and
mov
push
popf
lret
clc
cld
loopne
xchg
push
mov
ljmp
lods
lods
dec
fstpt
out
jl
jno
cmp
push
mov
jge
jge
fildl
std
mov
adc
inc
test
roll
cmp
xchg
inc
not
inc
jne
pop
paddsw
push
or
push
xor
mov
add
dec
jge
or
mov
fbstp
add
jns
andb
dec
xchg
cli
fs
call
testl
jne
mov
mov
int3
imul
mov
jns
aaa
inc
in
loope
xchg
pop
lret
into
out
pop
sbb
add
jno
loopne
sarl
scas
mov
or
test
or
mov
dec
arpl
fbstp
dec
push
xchg
jp
pop
jmp
mov
add
popf
ds
mov
ret
stos
mov
arpl
mov
arpl
stos
add
scas
jne
push
insb
inc
aaa
adc
mov
ret
outsb
pop
cwtl
aas
rolb
repz
pop
pop
inc
mov
dec
or
jmp
int
fcmovu
mov
lea
lcall
aad
pop
rol
iret
insl
mov
jl
fstpl
data16
mov
xor
sbb
pushf
aaa
adc
or
sbb
int3
jbe,pt
pop
sub
and
sub
in
jo
dec
scas
scas
or
push
and
mov
cmp
cltd
mov
lock
push
push
pusha
push
cmpsb
pop
aam
in
inc
faddl
daa
and
cmp
mov
jno
push
repz
xorl
jb
adc
cmp
jmp
push
dec
sbb
test
mov
mov
scas
mov
sub
jne
lcall
push
enter
test
sbb
adc
sahf
cli
pop
lods
sbb
addb
cmp
xchg
cwtl
add
mov
xor
repz
pop
and
int
jmp
sub
fcmovnb
lcall
neg
in
mov
sahf
into
test
sbb
push
in
jg
mov
mov
mov
mov
mov
add
and
mov
or
mul
fs
lret
loope
xor
mov
repnz
sbb
test
cmc
outsb
lea
mov
mov
aam
fs
adc
mov
cmp
pop
mov
cli
arpl
jle
and
push
or
test
sbb
sub
inc
xchg
pop
rcr
adc
imul
gs
decb
lods
xchg
xchg
out
mov
cmp
xchg
popa
jmp
cmp
decb
mov
cs
mov
nop
cmc
jb
dec
and
sbb
jb
fnstenv
call
pop
cmp
lea
jmp
out
and
mov
adc
lea
ficoml
daa
add
mov
mov
js
jb
add
je
sbb
mov
jnp
push
sahf
pop
std
fisubs
lock
cwtl
and
icebp
mov
call
dec
xor
es
pop
jp
sbb
out
lock
jmp
das
clc
push
sbb
and
sar
xchg
push
insl
cmp
aas
dec
push
jo
cmpsl
jg
js
rolb
icebp
xor
dec
cld
mov
lret
inc
pop
mov
scas
pop
pop
mov
push
jmp
sub
fiaddl
cwtl
jp
ret
and
add
clc
aaa
xor
lret
clc
shll
mov
mov
mov
push
mov
add
jmp
cltd
and
test
pop
sbb
test
dec
pop
xchg
and
rcll
jno
stos
fwait
ret
mov
inc
add
movsb
jecxz
call
xchg
fwait
jne
or
je
xor
fcmovne
mov
inc
shll
mov
daa
shl
ja
inc
dec
dec
test
mov
fwait
insb
xor
je
jg
push
fs
iret
lea
iret
sub
jns
mov
hlt
xchg
scas
mov
dec
sub
std
pop
pop
fbld
mov
mov
aas
dec
mov
add
jle
in
push
in
xor
pusha
montmul
cmpsb
pop
fisttps
cmp
in
or
addl
push
je
ficompl
rolw
push
add
and
sub
mov
mov
daa
scas
jnp
xchg
push
mov
rclb
arpl
iret
sarl
pop
iret
js
inc
jb
adc
das
insl
inc
mov
aad
push
cmpsl
fimull
scas
xchg
sbb
aam
imul
fidivrs
lds
jno
lret
mov
iret
lret
cmp
push
pop
and
int3
add
arpl
jo
jbe
imul
testb
aaa
shrl
ljmp
aad
pop
pop
adc
push
or
xor
out
call
cmp
shll
pop
cmpsb
mov
leave
sbb
sbb
inc
daa
jg
pop
cmp
sub
jl
mov
dec
std
mov
pop
movsl
xor
xor
scas
lahf
ja
test
and
sub
jle
cs
dec
jmp
les
mov
js
push
es
mov
inc
push
cwtl
xchg
loope
add
sub
inc
push
cmp
bound
cmp
cmpsb
sarb
addr16
or
stc
sbbb
mov
add
mov
xor
lds
pop
out
add
shll
and
dec
pop
addr16
cltd
lcall
dec
fmull
cmpsb
mov
jnp
mov
xor
add
sar
push
jg
pop
and
or
in
mov
fadds
adc
std
mov
ror
and
add
mov
test
cs
in
pop
cmc
xor
xor
popf
loop
jmp
stc
mov
lea
mov
enter
cmp
or
orl
xchg
cmpsb
insl
xor
mov
pop
or
cmc
sar
pusha
push
gs
and
pop
ffreep
cmp
aaa
pop
cli
imul
fiaddl
xchg
push
cmp
test
xor
in
xor
imul
sbb
testb
pusha
inc
dec
adc
inc
incb
std
les
scas
repz
movsl
cmp
addr16
xor
pop
in
daa
adc
inc
pop
jmp
and
mov
mov
aas
sub
sub
and
je
jnp
jecxz
ret
xchg
aad
std
test
push
sbb
mov
ds
lcall
dec
pop
je
fucomi
cli
repnz
xchg
lret
mov
cld
popa
lock
cli
mov
fstps
mov
es
mov
dec
sbb
mov
or
xor
mov
mov
and
and
pop
xchg
scas
rorb
mov
popf
ret
adc
das
push
cmpsb
sbb
frstor
sbb
es
pop
lods
and
dec
mov
inc
xor
xchg
enter
addr16
test
cmp
jg
pop
data16
cmp
pop
lahf
out
pop
scas
xor
cmpsb
push
adc
shr
pop
int3
pop
gs
mov
clc
push
push
out
or
mov
xchg
movsb
xor
mov
stos
xor
push
fisubl
xchg
std
pop
loop
int3
ja
jecxz
dec
ja
imul
lahf
fcompl
push
cmp
jne
jnp
mov
arpl
out
scas
mov
les
in
in
repnz
std
jmp
outsl
sub
clc
fwait
cmp
and
popa
mov
jo
inc
jle
xchg
inc
in
imul
outsb
sbb
xchg
and
jecxz
ss
call
popf
mov
push
inc
xor
and
pop
push
insb
pop
rclb
cmp
inc
adc
pop
mov
ret
loopne
push
push
dec
inc
jge
enter
rolb
ljmp
fisttps
mov
fidivrl
or
sbb
loope
imul
ficomps
mov
fwait
shl
lret
mov
and
std
hlt
pop
mov
dec
data16
fdiv
jge
mov
sbb
outsl
pop
or
movsb
int3
adc
scas
pop
xchg
into
push
lock
imul
mov
xor
cmp
xor
push
icebp
mov
popa
in
adc
ljmp
popf
or
notl
je
insb
andl
out
fwait
and
ficompl
cmc
cmpsl
scas
test
dec
stos
call
pop
mov
jb
adc
gs
and
div
pop
sub
iret
cmp
outsb
je
sub
push
loopne
subb
sbb
data16
add
pop
or
add
push
pop
sub
xchg
sub
cmp
push
sbb
sub
add
sahf
and
in
add
scas
orb
inc
or
mov
or
mov
lds
xchg
popf
sub
lret
jno
negl
lock
shll
mov
insl
and
mov
sbb
enter
cld
imul
adc
push
loop
lods
xlat
stc
inc
ja
or
adc
inc
cmpsb
lods
out
fsts
mov
in
out
mov
cli
leave
push
pop
xor
cwtl
cmp
rcll
pusha
jg
gs
or
pop
mov
adc
enter
pop
pop
adc
movsb
pop
add
jnp
sbb
or
mov
mov
push
cmpsb
jmp
pop
pop
pop
in
aam
pop
sti
pusha
js
cs
scas
pop
aad
in
int3
nop
stos
into
dec
loop
pop
inc
adc
in
fldenv
or
andb
push
das
or
ds
mov
pushf
dec
je
in
int
cwtl
sarb
pushf
add
cs
pop
insl
int3
lea
jnp
inc
repz
aas
lret
jb
jne
dec
pop
inc
push
je
das
push
jecxz
pop
adc
fadds
sub
mov
inc
inc
mov
mov
fistpl
pop
nop
mov
sbb
lock
mov
in
mov
aas
mov
dec
mull
rcrl
in
insl
or
and
ss
pop
icebp
loop
ljmp
dec
mov
mov
aam
pop
cmpsb
aad
rcrb
inc
sub
in
ret
lahf
loopne
push
imul
clc
lods
cltd
ficoms
xchg
pop
pop
popa
add
lods
pop
sub
movsl
xchg
add
inc
cmpsb
pop
setp
add
loope
cltd
addr16
gs
mov
ljmp
dec
outsb
push
xor
and
push
pusha
pop
adc
sbb
jns
pop
push
testb
add
int
xchg
inc
dec
xor
out
add
sbb
mov
leave
in
leave
mov
popf
fwait
stos
ja
push
in
push
sti
inc
lods
jns
or
xor
fwait
lret
dec
cmp
mov
mov
dec
sub
lea
bound
mov
in
clc
or
cmpsl
pop
test
or
stos
mov
jp
mov
mov
sti
xchg
mov
fildll
inc
in
add
inc
xlat
mov
xchg
repz
fildl
xchg
add
push
andl
push
cli
scas
popf
mov
push
mov
jg
pushf
stos
adc
and
cmpsb
subb
jnp
aad
scas
sahf
sbb
notb
sbb
iret
xchg
and
movsb
pop
cmp
adc
jno
rolb
call
repnz
inc
movsl
jle
leave
push
xchg
mov
ret
imul
fidivrs
cli
mov
add
mov
leave
inc
mov
iret
arpl
popf
jbe
sarl
add
sub
dec
mov
or
cwtl
mov
pop
mov
pop
push
rcrl
xor
cld
fnstcw
scas
movsl
enter
push
bound
cmpsl
iret
cmpsb
test
leave
in
cld
dec
mov
daa
jge
mov
jno
or
jl
lcall
movsl
inc
pusha
jmp
or
jp
mov
and
test
adc
imul
xlat
lret
pop
fnstsw
push
js
dec
jne
das
push
cld
push
pop
sub
sub
xor
les
cld
outsb
xlat
add
adc
das
jno
cmpb
mov
sub
aad
rcr
testl
mov
lret
gs
lcall
iret
fsub
fdiv
sub
adc
mov
andb
jg
cmp
mov
test
das
dec
mov
fisubrs
imul
fdivrs
and
push
or
clc
test
pop
sbb
jecxz
into
stos
ss
cmc
ret
sbb
mov
and
std
pop
mov
leave
mov
aaa
fs
sti
and
je
js
jmp
xchg
or
out
cli
cli
cld
mov
sarl
loop
or
and
incb
push
xchg
loopne
push
and
mov
mov
adc
ret
stos
jge
xchg
jns
cli
repz
push
mov
xchg
mov
aas
xchg
in
sti
pmulhuw
cs
or
nop
xchg
dec
inc
inc
pusha
inc
and
scas
fstps
add
lea
and
inc
aaa
mov
fwait
sbbl
pop
sti
jmp
fs
enter
mov
or
pushf
mov
jmp
adc
fadds
std
aas
imul
out
or
shl
in
aas
negb
mov
or
cs
outsb
adc
dec
cmc
cmpl
mov
xchg
pop
mov
and
das
xchg
aad
mov
inc
xchg
xlat
jl
shl
inc
adc
push
lcall
jno
cmpsl
jl
add
mov
cwtl
out
lret
xchg
mov
mov
les
xor
lds
shrb
insb
pop
aam
xchg
into
ret
cs
dec
push
sub
inc
cmp
clc
call
jp
ljmp
cmpsl
lods
cli
adc
fwait
sub
pop
xchg
push
jmp
push
sbb
adc
add
std
cltd
jecxz
test
cld
mov
jmp
jecxz
aad
push
test
inc
ljmp
xor
pushf
pop
inc
pop
mov
mov
lcall
add
pushl
repz
mov
aaa
mov
mov
xorb
sub
inc
ja
scas
sbb
inc
inc
mov
add
sbb
aam
mov
dec
jmp
bound
xchg
jbe
aad
xor
pop
push
or
out
xchg
sub
dec
xchg
lret
dec
xchg
fsubrl
push
jae
mov
jns
mov
test
jle
mov
in
ljmp
fildll
cmpsl
jmp
int3
jo
xor
pop
push
mov
mov
push
mov
push
cmp
insb
cmc
insb
in
jnp
mov
lock
mov
pop
adc
mov
ret
scas
pop
je
pushf
inc
xchg
cli
mov
inc
ret
or
push
and
test
movsb
aas
sub
push
jns
imul
popa
bound
push
test
rcrb
cmpsb
mov
enter
mov
fwait
and
push
xchg
jbe
sbb
sbb
xchg
push
jge
or
and
dec
or
int3
ljmp
push
mov
inc
xor
push
fcoml
scas
test
and
lds
cmp
aas
cmpsb
push
icebp
cmpsb
sub
in
jecxz
lods
enter
daa
jl
add
add
les
test
pop
dec
dec
push
cltd
ds
xor
inc
ss
and
shlb
xor
rclb
inc
divb
inc
lea
pop
add
add
xchg
sti
push
dec
pop
loope
shrb
cmp
xor
push
push
cli
mov
or
push
adcb
sbb
or
js
xor
pop
sbb
or
sub
iret
lcall
nop
inc
mov
pusha
inc
push
sahf
push
int
adc
addb
fidivl
aaa
inc
bound
lock
ss
xor
cmp
xor
repz
lret
and
xlat
mov
cmp
sbb
sbb
into
mov
sbb
mov
mov
outsl
fdivr
xor
pop
int3
idiv
mov
cli
fs
add
ret
mov
insb
mov
rorl
pop
les
das
in
xor
mov
or
cltd
push
imul
insb
pop
cmp
add
mov
lahf
imul
xor
add
aad
xchg
sahf
lret
outsb
popf
mov
xlat
pop
cmp
sub
cmp
mov
add
mov
adc
stos
add
dec
mov
sti
dec
sub
repz
jb
movb
add
xor
xchg
cmp
pop
mov
aaa
pushf
pop
and
jmp
xchg
mov
inc
push
mov
inc
sub
aas
or
ljmp
xchg
out
je
xchg
jecxz
push
inc
negb
mov
cwtl
test
mov
shlb
mov
xchg
adcl
addr16
mov
dec
sbb
add
adc
je
xchg
mov
jb
and
push
mov
es
adc
fisttpll
inc
or
pushf
sub
icebp
nop
vpaddb
mov
lret
add
loop
mov
and
hlt
lret
cli
pop
in
lret
rolb
mov
aam
popf
inc
ret
mov
test
clc
and
xchg
lea
xor
sti
lods
xor
dec
mov
out
imul
xchg
popf
inc
call
out
fs
mov
cltd
std
add
test
mov
xchg
cmc
dec
cmp
push
test
push
xchg
clc
fcompl
or
fcompl
inc
stos
push
ds
add
add
mov
dec
test
xor
pop
mov
xor
test
mov
dec
mov
adc
xor
inc
fcomi
add
sar
fwait
sub
rorb
pop
jne
pop
divb
dec
mov
bound
aaa
js
in
mov
out
inc
sub
jmp
cmp
jp
out
mov
inc
mov
mov
cmp
pusha
jnp
mov
xchg
cltd
mov
bound
cmp
push
orb
add
add
push
std
cmp
stos
idivb
insb
pusha
cmpl
push
iret
push
in
adc
mov
xchg
ret
xor
lds
sahf
xor
pop
cs
inc
dec
bound
push
jae
inc
mov
imul
mov
add
push
sub
add
push
lds
or
mov
sbb
or
xor
push
arpl
call
jle
loop
out
aaa
int
and
insl
xlat
add
mov
jmp
push
cltd
xor
jo
repnz
stos
push
lock
dec
movsb
cmpsl
ret
fidivrs
cmpsb
scas
or
in
lret
enter
daa
jnp
inc
cmp
iret
xchg
jno
push
jl
into
or
mov
out
leave
movsl
dec
jo
and
jns
repz
outsb
jg
test
stos
inc
mov
jnp
push
rcl
pop
sub
cs
lods
test
mov
push
loope
cltd
shrb
outsl
cmp
enter
lcall
in
add
andb
sbb
pop
test
jo
roll
addr16
outsl
sbbb
adc
out
in
movsb
push
pop
gs
xchg
dec
stos
jnp
or
xchg
mov
pop
movsl
dec
mov
push
orb
sarb
lahf
orl
cwtl
out
out
fdiv
xchg
push
negl
mov
mov
push
mov
cmc
push
sahf
repnz
outsl
mov
sub
stc
addr16
jnp
adc
