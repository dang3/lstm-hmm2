jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
popa
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
mov
cmp
je
jmp
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
xor
divl
test
jne
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
mov
pop
ret
push
mov
add
mov
mov
mov
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
mov
cmp
je
jmp
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
jp
lea
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
inc
mov
cmp
je
jmp
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
sub
mov
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
push
mov
mov
xor
call
mov
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
mov
mov
mov
call
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
push
mov
mov
xor
call
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
lea
mov
push
jmp
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
jp
lea
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
mov
mov
mov
xor
push
push
mov
mov
cltd
add
adc
add
mov
mov
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
lea
push
lea
push
lea
push
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
push
push
push
call
mov
push
mov
push
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
mov
mov
movl
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
pop
ret
add
add
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
mov
cwtl
mov
xchg
cwtl
rcrb
mov
cmpsb
popf
orb
lahf
mov
cmpsb
popf
orb
cltd
cltd
hlt
mov
xchg
orb
mov
cwtl
sbbb
cltd
sbbb
cwtl
mov
hlt
fwait
hlt
cltd
hlt
xor
hlt
cltd
hlt
mov
hlt
fdivp
cwtl
hlt
mov
hlt
hlt
hlt
test
or
mov
mov
xchg
out
mov
xchg
mov
out
mov
out
mov
lret
hlt
mov
out
mov
lods
out
mov
xchg
out
mov
mov
adc
mov
jge
or
mov
hlt
jge
or
mov
sbb
mov
jge
or
push
and
or
loope
add
mov
jge
or
rcll
mov
sbb
push
or
mov
jge
or
call
mov
sbb
ret
xor
mov
lods
lods
mov
jnp
cmpsb
cmpsl
jge
jge
jge
add
scas
xor
jnp
xor
mov
test
cmp
mov
cmpl
mov
movsb
jnp
cmp
mov
movsb
jnp
cmp
movsb
sarb
jnp
cld
jge
and
cmp
mov
movsb
jnp
cmp
mov
movsb
jnp
and
lods
jnp
and
adc
hlt
hlt
jnp
adc
cld
jnp
and
shl
mov
jnp
add
je
hlt
hlt
jge
sub
mov
hlt
js
hlt
hlt
hlt
jnp
sub
hlt
repz
sbb
lcall
jnp
add
mov
cmp
movsb
enter
jae
sbb
js
hlt
hlt
hlt
jnp
sub
hlt
mov
jnp
sub
repz
jnp
sub
in
mov
sbb
in
mov
jnp
sub
in
mov
sbb
mov
je
lock
sbb
pmuludq
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
repnz
jnp
and
sbb
bnd
and
mov
movsb
jnp
sbb
jnp
cmp
movsb
int3
jnp
adc
bnd
adc
jae
sbb
jnp
sbb
hlt
mov
mov
sub
add
jns
mov
repz
jnp
cmp
mov
jge
or
mov
hlt
lcall
add
mov
pushf
hlt
je
hlt
lcall
aam
jnp
cmp
movsb
test
hlt
je
hlt
lcall
mov
jnp
or
cltd
or
setp
int
mov
jne
hlt
adc
pextrw
xor
adc
mov
clc
hlt
xor
and
add
inc
je
sub
repnz
hlt
hlt
hlt
addl
cmp
hlt
xor
xor
stos
hlt
hlt
hlt
adc
repnz
in
mov
xor
pop
mov
pop
sbb
sbb
hlt
hlt
hlt
hlt
hlt
hlt
sbb
pusha
and
cmp
xor
loopne
hlt
hlt
shl
xchg
hlt
hlt
cmp
adc
xor
or
xchg
mov
imul
push
fnsave
add
sbb
and
in
xor
cmp
pmulhw
jb
xor
hlt
xorl
cmpps
dec
push
paddusw
jnp
jne
or
mov
je
hlt
hlt
ss
std
je
hlt
hlt
ss
jp
or
or
je
hlt
push
mov
hlt
mov
jnp
adc
pi2fd
hlt
js
hlt
hlt
hlt
ss
jp
or
adc
bnd
and
or
or
mov
lret
mov
ss
or
hlt
mov
ss
jp
or
and
or
inc
push
psllq
ret
and
or
inc
bound
je
hlt
repz
pmuludq
hlt
jl
or
xor
mov
je
hlt
jl
or
or
or
mov
push
mov
hlt
mov
sbb
test
mov
cld
je
hlt
mov
pmuludq
hlt
push
cld
je
hlt
ret
xor
std
je
hlt
ret
and
cld
je
hlt
incl
add
repz
pmuludq
hlt
push
std
je
hlt
ret
xor
cld
je
hlt
jp
add
jl
adc
xor
std
je
hlt
jp
add
ret
and
cld
je
hlt
jl
add
ret
xor
std
je
hlt
jp
adc
je
hlt
ret
xor
cld
je
hlt
incl
add
ret
and
std
je
hlt
incl
add
repz
pmuludq
hlt
jl
adc
xor
mov
je
hlt
ret
jl
push
jp
push
lods
mov
sbb
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
jp
lea
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
mov
xchg
lea
lea
mov
inc
movl
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
mov
mov
call
mov
cmpl
je
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
cmp
je
mov
subb
mov
mov
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
xorb
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
incl
mov
cmp
jne
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
push
mov
push
call
mov
pop
ret
mov
push
mov
add
cmp
jne
mov
mov
lea
mov
mov
lea
lea
xchg
mov
inc
xchg
mov
inc
inc
xchg
lea
dec
mov
mov
mov
add
xor
add
mov
dec
cmp
je
xor
add
inc
and
cmp
jmp
jmp
ret
jne
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
movb
cmp
ja
mov
xchg
xchg
lea
xchg
mov
dec
mov
xchg
inc
inc
inc
xchg
lea
mov
dec
inc
mov
mov
pop
ret
lea
push
mov
add
call
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
call
call
call
test
jne
mov
jmp
movw
mov
lea
cmp
jge
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
dec
inc
xchg
lea
mov
inc
call
lea
mov
pop
ret
lea
push
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
xchg
mov
mov
mov
inc
dec
inc
push
call
test
jne
cmp
je
mov
mov
mov
mov
dec
mov
mov
xchg
xchg
lea
lea
mov
mov
mov
dec
inc
inc
push
push
push
call
mov
pushl
pushl
call
cmp
jno
inc
dec
mov
cmp
jno
mov
xchg
lea
mov
dec
xchg
mov
lea
mov
inc
mov
xchg
inc
inc
dec
mov
pop
ret
ja
add
ja
add
add
data16
add
add
add
add
outsb
add
add
and
add
add
subl
je
mov
cmp
jg
mov
mov
mov
mov
lea
mov
mov
mov
lea
jmp
mov
xchg
inc
dec
mov
dec
mov
mov
mov
lea
call
cmp
jp
jmp
mov
lea
mov
lea
mov
inc
dec
inc
mov
mov
dec
mov
lea
xchg
mov
mov
xchg
lea
ret
mov
ret
lea
add
or
js
ret
and
dec
dec
push
inc
add
add
stos
dec
add
mov
add
je
jbe
xor
or
movsb
xchg
loopne
jb
add
hlt
add
pop
mov
movl
mov
out
add
inc
add
xchg
add
sti
mov
pop
jo
mov
imul
add
add
dec
add
add
add
mov
icebp
bound
add
add
mov
lods
pop
add
xchg
adc
add
aam
add
mov
leave
xchg
add
mov
lds
pop
add
stos
jbe
cld
dec
or
sbb
pop
fdivrs
out
imull
int3
pop
push
lods
out
insl
adc
movsb
inc
movsb
testl
mov
add
mov
in
jbe,pn
add
mov
mov
jmp
in
mov
adc
add
add
xchg
pop
sub
dec
add
sub
pop
inc
add
notl
sbb
add
adc
jbe
insl
sbb
in
add
add
cmpsl
pop
cmc
add
inc
orb
xor
add
jmp
xchg
add
add
loopne
mov
lret
mov
loope
and
xchg
sbb
add
lret
lret
int
or
add
push
add
add
xchg
pusha
jg
mov
int
sahf
mov
add
mov
icebp
inc
mov
pop
sbb
out
sub
cmp
mov
add
or
test
lods
mov
insb
cmp
add
mov
add
lods
push
xchg
lock
mov
scas
jnp
add
rol
nop
mov
add
pop
pop
mov
pop
stos
push
mov
push
add
lock
jle
pop
aas
xor
in
aaa
mov
dec
dec
incb
jl
test
scas
add
jno
and
add
push
add
add
sub
addl
add
and
lahf
push
rclb
and
xor
mov
lods
sbb
add
enter
leave
into
cmp
fmull
push
dec
mov
push
push
es
and
and
sbb
add
add
mov
cltd
add
ja
push
nop
cwtl
xor
pop
out
dec
movl
sti
adc
add
mov
jg
add
nop
out
and
aaa
add
add
movlps
dec
es
jg
movb
out
or
sti
xlat
fldenv
mov
jle
adc
sahf
repz
lret
sahf
add
dec
mov
dec
sbb
push
lcall
push
sbb
push
ljmp
jecxz
daa
add
subl
mov
add
add
push
add
aad
outsb
push
add
pop
daa
movsb
test
add
icebp
xchg
cs
mov
inc
add
lret
add
dec
mov
xchg
fistpll
lock
jge
xor
mov
add
jle
add
in
add
add
push
dec
lds
rcll
add
cmp
fld
add
cwtl
jne
lods
pop
mov
xchg
add
cli
movb
xchg
pusha
clc
and
add
daa
pop
popa
cmp
mov
dec
add
mulb
addb
dec
jge
add
xchg
add
pop
mov
add
add
adc
add
or
xorb
pop
test
sahf
test
cltd
ret
cmp
push
jecxz
scas
add
xor
aad
sbb
in
pop
mov
in
pop
mov
mov
push
pop
mov
inc
sub
xchg
outsb
or
lock
mov
or
jg
in
pop
mov
cmp
or
pop
xchg
and
mov
push
jb
add
cmp
testl
adc
rorl
cmp
sahf
mov
mov
adc
inc
mov
lods
stc
push
mov
fs
cli
mov
ss
cmpsl
cmp
repz
add
cli
sbb
push
out
cmp
jp
or
shl
pop
cli
xor
scas
pop
and
out
fisubs
enter
inc
adc
pop
lret
add
inc
or
test
mov
stos
std
mov
dec
dec
cmp
inc
xchg
jne
hlt
or
aaa
loopne
mov
dec
push
xchg
push
in
adc
in
and
jbe
in
repz
imul
cmp
sbbl
in
adc
adc
pushf
jns
jo
ror
sbbl
nop
pop
fwait
adc
out
mov
jb
movsl
iret
dec
lret
mov
je
call
or
push
push
and
call
adc
subl
and
fildl
ret
add
xchg
inc
cmp
cltd
and
mov
push
cmp
and
xor
sar
cmp
sub
xor
cwtl
inc
outsl
lret
sub
icebp
es
cld
push
pop
mov
pop
mov
shlb
add
xchg
lret
shlb
mov
sub
jecxz
ret
add
shlb
dec
call
dec
dec
jb
xchg
mov
push
ljmp
das
lods
add
cmp
rolb
mov
inc
ret
frstor
mov
xor
push
inc
test
mov
or
jge
mov
clc
loope
pop
xchg
jl
sbb
not
mov
stos
pop
xor
out
cmp
xchg
xchg
loopne
push
imulb
fdivs
adc
sub
xlat
mov
jae
pusha
dec
jb
or
arpl
dec
mov
popa
xchg
or
iret
jno
scas
xchg
mov
mov
add
mov
mov
bound
jns
imul
mov
dec
mov
andl
cli
inc
adc
mov
orl
fnsave
add
jg
ret
mov
dec
into
lds
fstpt
mov
fbstp
ret
or
lahf
int3
ds
cmc
mov
add
popa
out
sub
or
cmp
push
and
cmpsl
stos
fs
and
aaa
jnp
cmpb
sbb
loop
push
ds
mov
add
pop
add
inc
jl
sbb
push
push
dec
mov
mov
dec
rorb
xchg
ljmp
sbb
mov
imul
pop
scas
xor
outsb
adc
cmp
repnz
cli
inc
leave
push
mov
jmp
adc
inc
jecxz
in
insb
sti
push
repz
add
mov
call
ficoms
push
lds
mov
dec
scas
leave
mov
and
jmp
movsb
test
push
movsb
add
jbe
les
sbb
xabort
and
xchg
loopne
jl
addr16
dec
mov
rcr
xor
mov
dec
lahf
fnstenv
pop
test
or
inc
lret
stos
jnp
mov
pop
jge
inc
aaa
dec
pop
shll
ret
leave
popa
mov
test
cld
outsl
mov
mov
in
iret
jmp
sbb
loop
add
pop
dec
xor
roll
iret
pop
loope
je
jg
addr16
or
outsb
lcall
lock
test
push
adc
outsb
imul
aaa
inc
push
shl
or
xchg
test
in
or
sbb
in
test
jne
pop
int
jp
sub
aaa
test
xchg
test
cmp
test
dec
mov
mov
test
xchg
mov
test
aaa
stc
mov
fildl
fsubrs
test
cmp
scas
fwait
shl
add
mov
push
sbb
cmp
mov
into
aas
lcall
addr16
pop
inc
and
imul
sbb
std
jno
lods
fimull
mov
cli
sub
inc
mov
mov
cmp
pop
roll
loopne
cmp
cmp
clc
lahf
aam
sbb
int
addl
xchg
out
dec
or
dec
mov
insl
or
pop
lahf
loopne
adc
jecxz
jmp
push
addr16
not
call
loope
aas
lea
jb
dec
inc
jns
je
and
dec
loop
push
push
lds
dec
lds
shrb
jb
ret
dec
imul
movsb
push
dec
inc
dec
or
outsl
das
mov
sbb
and
call
xchg
imulb
jp
std
xlat
cmp
std
mov
cmp
icebp
std
popa
in
cmpl
mov
outsl
mov
std
jl
pop
mov
jmp
mov
aam
lds
ret
xchg
movsl
es
xchg
insl
hlt
pop
addr16
inc
loope
xchg
repnz
pop
push
inc
popa
pop
cmp
lods
outsb
pop
cmpsl
mov
add
mov
sbb
stos
jne
mov
xchg
inc
aam
mov
pop
xchg
movsb
sbb
dec
pop
das
jecxz
stos
dec
gs
pushf
xor
xchg
fcmovb
les
jne
call
xor
inc
or
adc
lods
outsb
mov
jbe
lds
nop
clc
test
pop
outsb
ja
insl
fmull
mov
mov
fstp
jmp
sub
es
add
out
dec
out
inc
jns
lret
dec
dec
xor
inc
cwtl
mov
jo
mov
mov
push
jp
daa
xorl
insb
aaa
mov
decl
jne
stos
pop
mov
in
xor
xchg
lcall
xchg
shrb
adcl
out
push
jle
dec
adc
or
or
push
bound
pop
and
mov
jnp
fs
jle
into
mov
jmp
mov
adc
subl
inc
xchg
sbb
shll
popf
fimuls
mov
enter
clc
mov
xchg
push
adc
sbb
jo
imul
xor
or
xchg
adc
push
repnz
dec
mov
jge
sub
mov
add
xlat
rcll
sbb
aaa
mov
call
add
les
fdivp
out
das
lds
iret
push
scas
test
and
jno
mov
movsb
adc
mov
jbe
int
jge
dec
push
sbb
adc
and
sarl
push
vmread
insb
dec
jl
dec
in
cs
into
xor
or
lahf
clc
push
and
adc
test
rcll
inc
pop
and
cmpsb
aas
imul
loopne
enter
pop
adc
push
push
push
loope
lock
push
ds
xor
and
mov
andb
rcrb
mov
xor
add
mov
xchg
js
fs
mov
lcall
in
add
cmp
inc
daa
mov
into
jb
adc
mov
xor
mov
shl
mov
mov
and
out
push
push
js
fmul
or
sbb
enter
subl
rcl
ja
cmp
and
cmc
lds
sahf
mov
test
ja
add
mov
adc
pop
adc
jne
ss
cmp
imul
jnp
and
xor
rcrl
push
es
and
mov
xor
inc
ret
pop
pusha
xchg
adc
je
es
cld
add
pop
stc
lods
rorl
xlat
add
pop
sub
daa
push
in
push
sub
mov
mov
gs
das
push
loopne
push
lock
out
inc
or
mov
push
lret
mov
pop
repz
out
xchg
mov
jmp
jb
adc
movl
repz
jmp
adc
cs
popa
jb
das
into
arpl
sub
xchg
jb
inc
hlt
dec
mov
lods
stos
jecxz
jb
pop
dec
or
push
in
call
xchg
and
push
sbbl
pop
dec
pop
inc
enter
cmp
das
cwtl
mov
mov
ret
and
repnz
rcrl
mov
insb
cwtl
mov
fnsave
mov
aam
repnz
lods
push
lret
in
mov
mov
push
repz
mov
fsubs
lock
cld
ret
and
mov
insl
fcmovnu
lea
in
xchg
xor
ljmp
shrl
and
and
test
sbb
jl
scas
add
pop
in
cltd
sarl
mov
dec
aad
add
popa
fstpl
dec
sub
push
mov
cmp
pop
jl
shll
pop
in
pop
in
stos
cmp
out
ljmp
inc
xchg
and
sub
push
push
push
and
or
dec
lods
mov
jns
fisttpll
test
test
mov
ja
or
movsb
lret
push
inc
pop
mov
push
fwait
or
daa
push
shr
aaa
add
les
das
bound
cmp
iret
jmp
fsubrs
dec
xchg
dec
xor
mov
rolb
dec
jns
pop
inc
les
xorb
dec
or
push
jmp
mov
add
adc
out
sbb
jmp
mov
lods
and
dec
out
jne
sub
sbb
aad
stos
dec
int3
js
pop
or
xchg
jnp
gs
dec
jge
lock
pusha
das
ss
jae
jle
xchg
arpl
inc
xchg
and
rcr
push
xchg
hlt
imul
sbb
pop
fisubrl
sbb
sub
pop
mov
sub
lret
sub
mov
out
rol
leave
hlt
je
hlt
in
push
mov
fbstp
sub
scas
jge
mov
add
fs
arpl
int3
dec
mov
lahf
ficomps
adc
shr
pop
scas
xchg
movsl
and
xlat
cmp
mov
xchg
mov
cmpb
sbb
daa
pop
cld
out
mov
jno
sbb
decb
out
push
sub
or
jo
mov
push
inc
cmp
mov
inc
jmp
cmpsl
add
enter
pop
push
std
mov
loope
cmp
mov
push
xchg
mov
mov
call
and
pop
lock
stos
sub
pop
add
add
subb
fs
cmc
orb
pop
aaa
fwait
lcall
fsubrl
incb
adc
cltd
lret
popa
jg
fsubs
fs
pop
mov
cs
jge
and
repz
jnp
pop
int
test
fcomip
inc
dec
push
lret
lods
shrl
mov
or
sahf
mov
xor
push
pop
xchg
outsl
ffreep
mov
stc
sub
loopne
sahf
cwtl
popf
adc
add
add
adc
js
decb
jnp
mov
xorl
fbld
mov
into
pusha
cmc
aad
and
sbb
out
mov
push
mov
imul
out
repz
adc
lcall
sub
shlb
push
je
push
jo
pop
xor
gs
xor
loopne
pop
push
dec
and
loop
mov
in
les
pop
mov
sbb
movsb
xchg
xchg
movl
xchg
mov
pushf
jp
fucomip
mov
stos
cs
push
mov
jbe
enter
mov
jb
out
dec
xor
mov
jecxz
inc
in
pop
repnz
inc
cmp
mov
and
mov
push
movsl
dec
aas
add
fisttpl
xor
inc
clc
repnz
dec
pushf
cmp
loope
and
jmp
je
std
and
adc
cmpsl
push
jl
mov
stos
ret
mov
lret
push
mov
cmpsl
xchg
xchg
lock
jmp
shrb
inc
mov
addl
es
push
insl
ret
dec
cmp
xchg
jo
pushf
ljmp
pop
lods
inc
int3
in
fnsave
bound
inc
cmpsl
in
pand
lods
add
cltd
clc
jno
test
test
push
sub
clc
xchg
or
sbb
pop
in
rorl
rclb
adc
push
inc
mov
xor
inc
outsl
or
movsl
xorb
xor
dec
cmpsl
mov
sub
sub
xchg
aas
inc
mov
mov
or
push
push
jae
inc
add
fisttps
out
dec
push
lods
bound
js
in
pop
in
popf
in
mov
movsb
jmp
pop
add
addr16
or
and
mov
adc
orb
je
mov
jnp
fisttps
add
in
jmp
push
pop
pop
xorl
inc
dec
mov
or
jo
push
loopne
push
stos
mov
mov
insb
aas
push
push
jnp
sub
jle
and
in
cmp
lret
iret
shlb
ret
negb
cwtl
aas
inc
popf
fsubp
jae
je
push
push
imull
mov
ja
ficompl
daa
xchg
add
jno
shlb
push
scas
pop
mov
push
lcall
mov
inc
mov
hlt
aaa
pop
mull
test
lcall
shrl
xor
je
mov
push
dec
pop
daa
mov
insb
lds
fimuls
data16
and
jge
cmp
mov
es
push
xchg
cld
ljmp
mov
lret
daa
push
pop
and
mov
repnz
dec
or
scas
push
adc
jbe
shl
lahf
ss
push
adc
adc
in
js
xchg
cmpsb
inc
pop
mov
enter
pop
nop
outsb
js
jp
cmc
loope
stos
jno
jp
inc
cmp
add
fstps
sbb
xchg
jae
orb
xchg
or
xor
mov
js
xor
hlt
lcall
pop
fcompl
mov
and
test
or
pop
shlb
jg
xorl
jmp
pushf
inc
and
cmp
int
xchg
ret
cmpsb
sbb
ljmp
insl
roll
enter
adc
sahf
inc
add
int
subb
mov
lret
loop
jnp
sub
adc
xlat
out
ss
cli
xchg
cmp
fisttps
mov
xor
lock
ja
or
pop
into
call
and
xor
outsl
pop
sahf
pop
call
sub
jns
mov
cmp
sub
ds
mov
mov
test
hlt
pop
cmp
cwtl
jno
adc
gs
cltd
inc
loopne
jae
dec
orb
xor
roll
negb
adcb
in
das
cmp
push
iret
pop
mov
roll
and
adc
cmp
push
cmp
push
les
mov
jb
ffree
popa
jecxz
pop
sub
pop
push
push
aam
imul
rolb
mov
push
or
or
mov
popl
inc
adc
dec
mov
xor
scas
and
add
idiv
lahf
lret
std
int3
gs
cs
jmp
sbb
imul
cld
add
stos
lret
ret
mov
mov
push
aas
mov
jbe
lock
pop
movsb
pop
inc
sarb
and
pop
dec
call
dec
pushw
ret
aas
adc
es
cmp
insl
test
cmpsb
pushf
xchg
scas
pop
xor
mov
mov
mov
ret
sbb
imul
mov
cmp
je
push
dec
fistpl
test
mov
movsb
mov
add
cmc
clc
int
repz
xor
sbb
icebp
or
in
jecxz
xor
stos
sbb
rclb
bound
pushl
jnp
xor
mov
movsl
mov
fisubl
jg
jmp
test
pop
xor
int3
sahf
dec
mov
popf
inc
dec
mov
fistpl
push
sub
pop
add
das
pop
out
sub
fimuls
in
loop
xchg
in
fcmovb
mov
in
cmpl
divl
addr16
mov
mov
jns
mov
jg
scas
dec
pop
adc
ret
in
fildll
cmpsl
push
jmp
and
scas
out
nop
jmp
or
add
push
pop
cli
dec
stos
xor
rep
stos
or
pop
mov
jle
cmp
mov
addr16
iret
xor
dec
ret
push
pop
fstpl
lds
push
pop
push
sbb
popf
push
adc
inc
or
ficoml
xor
sbb
sbb
cmc
aad
scas
mov
mov
adc
rep
mov
xchg
ja
leave
loop
cwtl
hlt
cmpb
inc
loopne
aad
mov
push
out
fldcw
cmpsl
jns
add
xchg
pop
push
in
cltd
xor
daa
sti
fld
and
mov
and
add
movsb
mov
into
push
loopne
push
jbe
mov
nop
sbb
jnp
lock
jl
loopne
dec
jnp
sub
repz
xor
sbb
popa
lahf
push
push
cmpsl
push
call
in
es
xor
scas
inc
pop
push
lds
pushf
roll
enter
pop
iret
arpl
push
in
pop
loope
cmp
lds
fs
dec
ds
pop
push
loopne
dec
and
stc
sbbb
sbb
mov
add
stc
push
xor
push
ljmp
js
jnp
pop
add
decl
faddl
clc
insl
outsb
imull
lcall
mov
imul
pusha
stos
push
mov
adc
and
lds
andl
sub
out
fdivp
mov
cmpsl
xor
cwtl
nop
sub
push
enter
inc
test
int3
dec
addb
loop,pt
aas
cli
stc
cltd
push
pop
adc
divl
mov
ljmp
out
pop
sbb
or
inc
mov
fmuls
mov
fcmove
lret
shl
cmc
arpl
xor
pusha
mov
mov
mov
jecxz
xchg
aad
dec
shl
or
js
jbe
adc
nop
pop
int
mov
aas
mov
pop
xor
sti
scas
andl
gs
add
loopne
mov
pusha
inc
inc
pop
in
fprem
xlat
inc
lods
aaa
mov
lds
cld
xchg
sti
push
test
sbb
dec
movl
jns
pop
cli
rcrb
inc
jo,pn
pop
aad
sub
or
pop
jb
rcll
sub
jecxz
mov
scas
lea
sbb
call
into
lods
inc
mov
mov
dec
adc
dec
mov
loope
inc
imul
inc
cs
jl
outsb
in
out
out
xor
push
repnz
aas
std
jae
push
cwtl
jmp
inc
or
pop
mov
cld
sub
pushf
inc
mov
push
int3
mov
mov
push
pop
adc
sub
cmp
sbb
popf
mov
loope
nop
mov
test
outsb
pop
popa
mov
fwait
mov
mov
fbld
jns
mov
add
mov
data16
imul
pop
mov
push
dec
push
pop
fstl
xchg
xchg
js
cmp
cmp
sbb
mov
sub
dec
xchg
divb
insb
push
cmp
lods
in
xor
lods
xor
sub
mov
orb
inc
pop
test
sub
dec
jge
lcall
add
inc
push
mov
nop
lcall
sub
out
push
jns
mov
in
mov
mov
sub
inc
mov
js
lods
addr16
jnp
ss
shll
fsubs
mov
int3
cmp
mov
jne
int
mov
bound
out
shr
jb
aam
in
push
xor
xchg
push
out
dec
pusha
sub
push
and
push
pop
shr
stos
mov
imul
pop
add
in
shlb
pusha
add
mov
ret
cld
pop
adc
lcall
je
push
fstpl
popf
jp
aad
aaa
cmpl
mov
into
sbb
dec
xchg
imul
xor
sub
jo
adc
jecxz
fdivs
call
hlt
int
enter
icebp
inc
jecxz
popa
or
cmc
sub
aaa
scas
and
or
adc
or
pop
pop
test
loopne
andl
sarb
scas
and
insb
and
add
cmp
cmp
dec
mov
jp
jge
mov
push
daa
sbb
fstpt
and
lret
adc
ljmp
xor
ja
test
je
mov
test
call
icebp
inc
xchg
movsb
jae
dec
adc
jae
sub
cmpsb
pop
push
fldl
loope
hlt
push
sub
movsb
lock
lds
movsl
out
out
push
cs
xorb
sbb
add
push
mov
xor
sub
lods
and
xchg
js
push
mov
test
ficomps
push
std
sub
outsb
pop
add
adc
sub
push
jg
out
mov
cltd
rorb
adc
and
xchg
lcall
sbb
idivl
aas
lret
xor
das
int3
inc
mov
cmp
mov
test
test
inc
ret
outsl
jl
lods
loop
jmp
sbb
adc
or
into
jb
cmp
push
xchg
xchg
out
popa
sbb
dec
shufps
in
cmp
insl
movsb
or
jecxz
into
scas
inc
inc
cmc
sub
mov
pop
fdivrl
mov
imul
roll
fisubrl
lods
pop
jle
mov
outsl
std
sub
add
in
lret
sti
pop
xor
inc
in
mov
xchg
mov
int
outsb
dec
inc
shr
push
mov
fldcw
iret
lcall
pop
push
xchg
mov
fimull
push
shll
addl
adc
mov
jmp
lret
shl
insl
aad
imul
subl
jb
std
xlat
dec
xchg
lock
je
es
jecxz
pop
pop
mov
sbb
mov
adc
xchg
ret
mov
cmp
fistpl
adc
shll
dec
inc
repnz
pop
inc
dec
add
das
adc
xchg
mov
sahf
and
lcall
push
jnp
sbb
cwtl
movsb
in
push
cmpsl
sbb
mov
xor
cmc
cld
pop
cmp
lret
mov
sti
dec
mov
gs
and
lahf
pop
test
shlb
xchg
sub
aam
pop
mov
pop
and
es
scas
and
mov
lahf
ljmp
sbb
or
xchg
and
adc
adc
clc
outsl
sbb
jl
mov
popf
add
or
fnsave
mov
fcomps
sub
movsb
rcll
inc
mov
out
mov
push
sbb
cwtl
xor
test
xor
sbb
mov
test
into
test
into
or
dec
jo
addr16
jnp
lods
or
mov
fistps
pop
movb
sub
out
jmp
or
xor
sub
in
in
cwtl
xchg
mov
pop
mov
xor
mov
cwtl
cmp
ffreep
mov
add
pushf
mov
pop
dec
and
movsb
jne
nop
or
imul
xchg
mov
jp
xchg
mov
les
int
push
sub
or
aad
popf
cs
push
outsb
aaa
and
pop
add
adc
jle
dec
and
or
jae
fwait
call
loope
loopne
sbb
mov
inc
mov
push
mov
jecxz
mov
inc
roll
or
sbb
pop
mov
scas
test
jmp
out
inc
fidivrs
cmp
xchg
ror
shl
sbb
sbb
or
jo
xchg
aaa
insl
out
and
lea
add
data16
pop
mov
add
lds
mov
add
and
adc
cmp
fdivs
mov
jle
xorb
les
xchg
pop
sbb
mov
xor
jno
dec
add
xchg
dec
pop
mov
mov
and
push
lahf
xchg
sarl
mov
push
lret
inc
and
and
push
fmulp
daa
cmp
push
jg
loope
iret
or
sub
mov
inc
loop
movsl
out
and
out
daa
adc
sbb
hlt
flds
rcrl
jo
or
add
cs
mov
mov
cmp
mov
lcall
mov
sti
jnp
dec
outsl
fnsave
cmpsl
jp
xchg
and
movzwl
sub
cmp
jmp
sub
sbb
test
sahf
sub
cmc
inc
cmpb
jns
vmptrld
pop
xchg
add
lret
adc
cmp
adc
cli
sbbb
loope,pn
sbb
dec
into
xchg
movsl
cs
icebp
sahf
xor
mov
adc
xor
add
mov
nopl
inc
je
mov
push
mov
mov
xor
cmpsl
and
adc
loopnew
xor
cltd
inc
push
je
pushw
repz
xchg
adcl
idivb
nop
data16
add
inc
pop
shrl
adc
sub
mov
movsl
xchg
or
nop
pop
sub
aas
inc
add
push
dec
or
outsl
je
push
cmp
mov
sbb
lea
pop
aad
sub
inc
rorl
dec
loope
dec
jmp
dec
fisttpl
xchg
pop
jbe
or
out
aaa
inc
xlat
xor
repz
mov
push
xor
pop
shll
fnstenv
rcll
cmpsl
sbb
mov
icebp
pop
aaa
sbb
andl
mov
jae
lock
aas
pop
mov
add
inc
aam
cli
test
nop
xor
pop
popf
testb
dec
xchg
insb
mov
or
movsl
popa
out
fsubrs
mov
mov
jb
mov
push
mov
add
stos
call
mov
mov
jo
fidivrs
jle
xor
sbb
out
shr
jae
pop
xor
stos
out
lods
out
out
arpl
repz
decl
sbb
xor
xor
or
push
xor
pop
scas
mov
mov
inc
test
or
pushf
iret
ret
dec
arpl
xchg
or
dec
cmp
pushl
add
dec
dec
cld
out
lret
bound
add
sbbb
outsb
pop
xchg
fsts
mov
jge
mov
out
jnp
addr16
jecxz
pushf
xchg
cs
mov
lret
xor
push
sub
mov
mov
cwtl
out
mov
xchg
pusha
push
jl
sbb
xorl
ljmp
sub
fmull
das
stos
mov
and
mov
insb
jmp
pop
jnp
ljmp
adc
repz
ss
sbb
dec
bound
push
fistps
jne
inc
leave
sbb
jae
xorl
arpl
sarl
loope
fisubrl
xor
xchg
pusha
testl
scas
out
stos
push
mov
cli
adc
push
dec
mov
mov
leave
inc
cmp
arpl
sub
or
jmp
or
sub
xor
andb
sbb
int3
loopne
insb
pop
jecxz
xchg
faddp
fcoms
mov
ljmp
pop
push
push
cmp
in
push
int
and
mov
sbb
or
mov
rep
outsb
jl
in
mov
enter
pushf
enter
pusha
lea
adc
out
popa
and
test
xchg
xchg
cmpsb
push
mov
mov
and
pop
pop
mov
push
push
inc
loope
into
cs
mov
cmp
lahf
ds
movsl
cmc
sbb
std
mov
xchg
sbbb
sbb
xor
dec
insb
xor
ja
sbb
in
pop
adcb
push
push
std
mov
sub
lods
icebp
outsb
and
adc
loopne
dec
jg
pop
cmp
lds
mov
aad
dec
roll
mov
movsl
sub
pop
cld
lret
cwtl
rcrl
mov
lds
rorb
mov
mov
jge
outsl
cmp
loop
fdivrs
push
das
adc
int
ss
mov
pop
fmul
push
insb
cli
mov
sbb
cmp
mov
or
and
je
mov
xor
adc
add
loopne
adc
mov
add
and
xchg
jl
lods
sub
mov
xor
mov
mov
fcompp
decb
mov
pop
push
test
add
push
inc
jge
fstps
pusha
xchg
xor
add
cmp
lea
add
adc
sub
fldcw
cltd
pop
fsts
cmp
aaa
cli
xchg
aas
out
push
mov
iret
aad
or
leave
jecxz
mov
lea
push
mov
fiaddl
jns
popl
pop
test
jp
repz
sbb
test
ret
shrb
inc
mov
or
cmp
pand
je
push
testb
cwtl
sbb
in
mov
fisubrs
test
in
push
mov
in
lock
ds
dec
mov
aam
sub
jnp
or
adc
insl
inc
jo
dec
and
mov
jg
lahf
popa
cmp
dec
sbb
mov
jns
xchg
mov
mov
and
mov
xchg
data16
jg
push
xchg
hlt
stos
fldl
mov
sbbl
dec
out
roll
jecxz
fsubl
stos
aad
imul
lret
loop
push
into
xor
ljmp
mov
or
stc
inc
mov
mov
test
test
aad
ja
andl
out
das
inc
test
scas
sbbl
cmp
add
sub
in
push
dec
jns
pop
inc
in
inc
xchg
cmc
xchg
dec
mov
test
cmp
jp
loope
mov
mov
sbb
cmp
dec
out
jne
inc
outsb
mov
push
into
fildll
lret
push
aam
xchg
dec
mov
out
out
ss
sub
incl
push
push
sbb
stos
cld
idivb
and
or
push
jnp
test
in
lahf
adc
mov
lret
ret
jnp
mov
jnp
jae
jno
push
es
popf
out
inc
dec
mov
inc
xchg
fcmovu
inc
rcll
daa
call
lea
std
cmp
mov
loope
dec
jnp
scas
jl
arpl
hlt
outsb
inc
in
mov
push
jmp
decb
jae
add
inc
in
pop
adc
cltd
lds
pop
rorb
and
iret
fstpt
push
jge
sbb
pop
jbe
mov
dec
sbb
fldenv
sbb
xchg
cmp
cmpb
dec
aaa
icebp
cltd
push
jg
xor
jo
rcrl
lahf
sarl
adc
xor
in
test
pusha
loopne
inc
inc
rol
cmpsb
aam
cmp
cmp
cld
pop
lret
pusha
jge
mov
repnz
mov
inc
xchg
popa
movsl
cld
rorb
in
xchg
subb
mov
aaa
fldcw
xor
je
pop
sbb
je
add
push
insl
sub
fdivl
sbb
subl
mov
sbb
push
pop
mov
cmp
inc
mov
and
xchg
push
lea
xor
and
dec
hlt
lret
pop
shl
pop
mov
enter
jo
test
xchg
xor
cmp
js
loop
push
push
stc
jne
cs
adc
push
hlt
lret
or
push
fadds
push
pop
cli
call
cs
cmp
xchg
xchg
or
mov
cmc
jg
xchg
xor
not
pop
cmp
imul
jg
xchg
fisubl
dec
push
lods
adc
mov
xlat
mov
jmp
in
in
or
idiv
imul
das
cmp
push
jns
loopne
sbb
dec
pop
or
stc
mov
fldcw
repz
lret
mov
test
movl
mov
pushf
jl
mov
sub
popf
aad
jnp
nop
adc
pop
aas
test
dec
jb
out
dec
cli
mov
je
mov
jecxz
rol
insl
jge
inc
call
lret
mov
cmpl
neg
test
scas
and
pop
mov
lcall
mov
ret
inc
mov
gs
ret
sub
testb
std
psrlw
cwtl
aad
cmpsl
sbb
icebp
mov
mov
popf
cld
fsin
sbb
out
in
mov
addr16
mov
aaa
pop
loope
and
sub
pop
push
aam
lods
mov
es
sbb
insl
sub
add
sub
xchg
ljmp
popa
adc
add
mov
sbb
jmp
addb
unpckhps
add
pop
in
test
dec
push
pop
adc
sub
dec
clc
hlt
sahf
xchg
pop
sbb
rcrl
cmp
stos
les
mov
arpl
test
fwait
xor
xchg
lret
or
fistpll
xor
out
mov
mov
test
aaa
popf
ja
mov
mov
pop
lret
or
in
fwait
push
xchg
mov
add
cmpl
jns
loopne
in
outsl
cwtl
xchg
ja
lret
mov
and
pop
fs
sarb
dec
mov
inc
pop
mov
stos
dec
leave
ljmp
insb
pop
rcr
enter
xor
push
jmp
sbb
fs
ret
xchg
push
push
pop
pop
data16
outsl
dec
mov
sti
mov
rcll
ret
loope
jle
pop
xor
and
iret
or
xor
pop
lock
inc
fbstp
jge
imul
sarl
shrb
xchg
push
sub
insl
imul
push
mov
inc
aad
adc
movsb
ret
es
leave
xor
jle
arpl
ds
out
loope
or
loope
scas
aaa
stos
insl
je
data16
add
xchg
int3
mov
sti
pop
inc
stos
rcr
sbb
vmovsldup
shlb
xor
test
pop
ljmp
imul
jbe
addr16
jge
outsb
adc
xor
jl
out
inc
push
jno
jecxz
jl
sbb
push
bound
xor
jecxz
imul
and
lods
shl
sub
mov
in
pop
cmp
sbb
fcoms
or
aaa
push
and
loope
cmp
rcl
iret
addr16
ds
push
push
movsl
add
repz
cmpb
push
add
jecxz
xor
cwtl
mov
out
ljmp
and
mov
fcompl
sub
nop
adc
xchg
pop
int3
jg
fnsave
mov
cmp
and
push
nop
xor
int
fcmovnu
sub
enter
int3
sbb
mov
mov
pop
sahf
push
leave
inc
test
mov
shrb
jno
enter
sub
push
imul
fcmovbe
ljmp
mov
out
mov
cli
sbb
ja
hlt
cmp
dec
pop
or
js
into
cmp
test
lcall
adc
sub
mov
in
add
scas
sub
xchg
push
stc
lods
mov
ja
and
sub
push
sub
xchg
push
sti
sbb
shll
cmp
loopne
stos
decb
fldenv
adc
in
in
rclb
push
sbb
inc
cwtl
cmpsb
jg
mov
adc
orb
ret
pop
movsb
dec
aad
dec
addr16
in
fnop
aas
and
fbstp
repnz
ds
je
fistpll
iret
cmpb
cmp
ds
xchg
pop
xchg
inc
adcl
mov
fcmovnu
jmp
inc
push
movsl
cmp
aam
das
nop
jg
mov
jp
loopne
scas
push
icebp
rcll
and
sbb
mov
mov
nop
jl
cmpsl
pop
inc
mov
mov
icebp
mov
fdivr
add
in
lret
pop
mov
cwtl
mov
cmc
pop
lock
push
out
pop
add
shlb
shrl
sub
rcl
adc
cmp
insl
adc
adc
xchg
sub
ljmp
mov
xor
ret
mov
cmp
and
sbbb
je
or
enter
jns
in
test
cmpsl
lcall
movsb
jno
push
in
clc
das
adc
mov
xor
out
xor
pop
xor
adc
pop
pop
bound
test
cmp
jmp
rdmsr
push
lods
dec
or
xor
daa
jge
jae
dec
xchg
jae
test
sub
ja
jbe
dec
cmp
ja
xlat
mov
or
out
imul
shlb
add
pushf
adc
out
addr16
inc
bound
dec
scas
jns
add
cli
xchg
cs
mov
and
mov
pop
xor
addr16
sarl
mov
mov
or
mov
sbb
dec
lods
and
jne
subl
add
xchg
add
mov
mov
out
rorl
cmc
sbbl
xor
loop
push
and
cs
insb
sub
jb
xchg
jle
fdivr
in
sbb
push
iret
imul
ret
stc
pop
daa
adc
jle
cmp
add
popf
cmp
mov
inc
aas
pop
fiaddl
rcll
sub
jge
scas
adc
add
pop
fidivs
mov
xchg
leave
lods
pusha
adc
inc
aad
arpl
sbb
outsl
push
or
pop
test
test
pop
fwait
test
fucomp
ljmp
test
fidivs
adc
ret
scas
jg
fisubs
pop
pop
pushf
cmp
aaa
inc
movsb
repz
push
mov
test
jge
aad
sbb
je
daa
pop
je
cmp
xor
js
pop
jl
insl
rorb
push
push
inc
adc
xor
ds
lahf
shufps
mov
push
testb
cmpsb
fcmovu
dec
in
push
lds
pop
dec
testl
loope
movsb
xchg
fwait
lea
jle
cmpl
movsl
or
addr16
in
nop
mov
push
sbb
inc
inc
xor
jl
in
pop
adc
int
roll
xor
rcrb
push
sbb
scas
faddl
jmp
stos
inc
lea
arpl
adc
jno
sbb
movsl
sub
mov
test
lcall
sbb
adc
sbb
lret
add
and
sbb
sbb
sahf
mov
test
outsl
xlat
rcll
stc
jecxz
adc
add
out
push
cmpsb
ss
and
cld
mov
cli
dec
cltd
mov
cmp
rcr
or
push
into
sbb
xchg
add
cmc
mov
sub
imul
outsb
add
dec
iret
lods
loopne
test
cmp
pop
mov
loope
pop
sti
leave
sbb
outsb
gs
sub
aam
fisttpll
stos
sbb
mov
cli
flds
in
out
jge
repz
lods
push
xchg
std
jge
sarl
and
jl
sub
incb
cmp
adc
hlt
pushf
rolb
jmp
stos
and
ret
aad
jns
nop
enter
ret
jb
xor
dec
call
pop
cld
jecxz
jbe
jae
in
lea
cs
mov
stos
orb
jmp
dec
xchg
sbb
pop
cmp
pop
add
add
push
addb
insb
das
outsl
mov
mov
xor
mov
cmp
shll
leave
test
fscale
pop
sahf
jbe
dec
xchg
pusha
cmpsl
push
add
mov
arpl
pop
cld
das
cmpsl
and
mov
call
or
pop
pop
mov
sub
addr16
fldt
push
es
aad
insl
cli
inc
and
add
xchg
push
mov
popa
inc
movsl
lods
pushf
mov
mov
pop
add
and
rcr
xchg
fistl
aam
shrb
adc
fnstsw
std
clc
push
xacquire
or
stos
mov
roll
sbb
add
jp
or
pop
scas
movsb
decl
stc
fisttpl
out
cmpsl
xor
mov
mov
xchg
pop
ss
fisttps
xor
mov
dec
das
jmp
inc
outsb
aaa
iret
or
int3
outsb
fwait
mov
push
push
mov
mov
out
inc
sub
sub
int
in
rcrb
add
mov
push
addr16
xchg
jp
sub
mov
mov
loopne
push
fbstp
cmp
and
neg
push
out
xchg
fadds
mov
scas
in
sub
pop
xor
repz
pop
push
push
fdivs
mov
insb
xchg
mov
jnp
jmp
mul
das
bnd
mov
xchg
cmpsl
ret
cmp
xchg
cltd
inc
cmc
xchg
xchg
jae
sar
push
outsl
pop
in
popf
addb
mov
scas
adc
sbb
cmc
push
imul
scas
jae
rcll
aaa
rcll
notb
xchg
mov
repnz
hlt
jg
arpl
repz
cmc
jno
or
xlat
pop
cmp
or
add
int3
mov
fstp
push
das
mov
jno
rcr
sbb
and
sub
push
or
pop
jge
and
daa
push
cmc
cmp
pusha
jno
test
mov
push
sub
jo
xchg
cs
add
jmp
test
shl
inc
lock
daa
cmpsb
pop
sub
in
in
xor
dec
pop
mov
mov
dec
xor
cmp
fs
movsl
adc
push
popl
mov
and
jg
dec
dec
mov
pop
repz
sbb
sub
pop
mov
jb
or
into
lcall
pop
fdivl
add
outsb
lods
in
insl
adc
dec
jg
jg
jo
mov
repz
mov
addr16
and
jl
int
adc
xchg
adc
lret
aas
sarl
rcrb
imul
fidivl
subb
enter
mov
subl
cwtl
ss
mov
dec
fdivs
icebp
nop
cli
subl
cmp
xor
into
add
sub
aam
jg
push
mov
lahf
adc
push
shrl
in
adc
gs
xor
lock
jp
lods
popf
and
ja
pushf
sub
mov
mov
dec
cmp
scas
cwtl
sbb
xor
popa
loopne
or
jp
arpl
in
popa
fnstcw
fadd
cli
test
outsb
mov
xchg
push
fcmovu
sbb
mov
rol
jge
push
pop
push
or
push
fildl
cmc
push
stc
cs
push
add
mov
sbb
jb
movsl
das
dec
pop
cmp
xlat
jecxz
scas
push
jbe
push
lea
jecxz
xchg
imul
les
adcb
ss
pop
movsl
int3
mov
sbb
std
inc
jmp
jne
dec
in
mov
call
pop
pop
shll
dec
add
cwtl
push
cmp
cmpsl
adc
stos
pop
icebp
cmp
cmp
cmp
cmp
mov
aad
cmpsb
xchg
fcomi
inc
dec
inc
pop
fcoms
rclb
jg
sub
cli
aam
sub
ret
mov
std
es
loopne
insl
loope
xchg
dec
or
out
xchg
cmpsl
xorb
xor
popa
pop
call
imul
subl
mov
lret
xor
add
inc
xlat
cltd
out
adc
fisttpll
cli
mov
fwait
inc
push
mov
repnz
clc
movsl
mov
xchg
out
rcrl
mov
dec
out
out
in
push
cmp
ljmp
js
xor
jns
or
or
cmpsb
adc
xchg
ja
dec
inc
mov
test
shll
push
jp
dec
and
mov
or
jle
fwait
loop
ljmp
push
stc
add
add
out
and
or
jns
cmp
in
out
xchg
fs
jle
into
std
jno
xchg
cmp
bnd
push
push
mov
or
add
scas
dec
dec
jb
movsb
jne
push
xorb
hlt
dec
xchg
stos
sub
iret
xchg
jns
push
cmpl
out
sbb
sub
jmp
mov
pop
sub
stos
enter
inc
fisubrs
jnp
xchg
stos
jle
push
push
in
sub
cmp
push
ret
adc
xchg
mov
inc
add
jae
shlb
popf
mov
inc
cmp
nop
xchg
xchg
adc
mov
aad
scas
mov
inc
adc
and
inc
dec
repnz
add
hlt
fidivrl
arpl
mov
or
push
sbb
out
or
icebp
sbb
or
pop
into
test
lds
xchg
sar
sub
cmp
mov
add
inc
sub
xor
xchg
jge
dec
jno
fs
cli
dec
cmp
ret
lock
adc
bnd
push
or
xor
hlt
xchg
ja
dec
pusha
xchg
push
sbbb
test
mov
je
loopne
xor
aam
mov
or
dec
pop
popf
mov
loope
out
sub
lret
fsubrl
inc
movsl
sbb
jmp
popa
loopne
xor
lea
adcl
xor
ljmp
mov
push
js
jge
pop
std
fnstcw
push
leave
inc
and
pop
cwtl
mov
outsb
punpckhdq
shlb
xor
jns
ss
out
sbb
test
and
dec
jge
jns
in
adc
cmp
mov
mov
fwait
xchg
push
pop
inc
mov
mov
cli
jl
sahf
decl
push
sbbb
outsl
xchg
aas
js
cmpl
fs
push
adc
cmpb
pushf
adc
hlt
xlat
aaa
cli
mov
shlb
cld
cmp
bound
into
jecxz
xchg
cmc
fwait
push
stos
lret
dec
pop
mov
dec
adc
ffree
adc
mov
inc
and
mov
pop
xlat
mov
in
sub
shrb
mov
fdivrp
daa
jno
mov
int
loopne
aad
dec
fsts
inc
fmull
rol
loopne
repz
sub
pop
mov
dec
cld
jmp
pop
add
adc
inc
or
in
pop
mov
mov
nop
jle
adc
add
jae
mov
je
pop
mov
jns
out
jae
cmp
mov
jae
mov
xchg
ljmp
lods
adc
inc
mov
xchg
das
sub
push
fs
dec
add
sar
mov
notb
lret
std
stos
sti
mov
adc
out
mov
adc
lret
stos
outsl
cmp
mov
cli
xor
mov
sub
sub
incl
mov
ljmp
out
mov
popa
jno
stos
lods
jb
sbb
movsb
icebp
addr16
push
shrl
xchg
lea
add
dec
cltd
push
mov
ret
lret
in
adc
dec
pop
clc
loopne
incl
adc
in
shl
xor
pop
xor
ret
stos
subb
inc
in
xchg
cs
dec
push
adc
leave
push
xor
or
or
mov
lcall
test
test
push
ret
adc
cmpsb
pop
or
add
fwait
adc
push
push
roll
cmp
in
xchg
icebp
out
add
or
mov
mov
xchg
mov
jmp
inc
mov
push
and
addr16
fidivrs
xor
addr16
data16
jne
rorl
sbb
filds
xchg
jle
adc
xchg
inc
popa
push
orl
mul
bound
sub
out
out
push
and
stos
cmp
xchg
add
add
jle
add
cmp
mov
sub
mov
or
jae
adc
cmc
fcomps
psubq
ficompl
xchg
push
add
jle
mov
daa
int3
scas
cmp
mov
sub
adc
popa
jmp
rcl
jb
xor
leave
adc
hlt
and
loop
inc
sti
shll
daa
cmpsb
shrb
mov
aaa
cmpsb
clc
mov
xor
pushf
add
fistps
ficomps
pusha
sub
adc
xchg
shlb
fdivrs
sti
clc
sub
das
xchg
xchg
mov
jg
mov
pop
push
mov
cmp
out
jl
bound
out
in
loopne
rcll
xchg
jo
mov
lahf
insb
xor
push
push
xchg
test
push
mov
push
imul
enter
pop
push
aaa
ja
clc
daa
repz
mov
sbb
mov
ds
xchg
movsl
pop
daa
or
lahf
add
pop
cmp
orb
scas
sbb
push
lcall
mov
pop
mov
mull
lcall
fmull
and
sub
nop
outsb
jb
adc
add
mov
adc
mov
pop
lret
mov
loope
and
xchg
pop
int
fcomps
mov
divl
dec
lret
add
cmp
push
push
mov
push
pop
cmpb
outsl
je
push
loop
xchg
stc
or
outsb
fs
push
rcll
mov
ss
lcall
leave
or
cli
out
movsb
xor
and
cmp
addr16
sahf
dec
mov
cmc
bound
xor
repz
jo
adc
dec
imul
xor
add
shlb
xor
lods
xchg
sbb
xlat
cmc
shll
sub
iret
sub
in
and
sub
inc
mov
gs
sbb
loopne
mov
dec
cmp
adc
cwtl
add
adc
adc
inc
sub
cmp
out
pop
mov
mov
push
cmpsl
test
roll
imul
movsl
add
andl
pop
mov
jb
daa
or
int3
xchg
je
fcomps
or
out
jl
test
fcmove
psubsb
push
pop
mov
stos
xchg
subl
test
xchg
mov
inc
sub
lcall
push
push
pushf
rorl
jp
xchg
cmp
std
push
cmpb
adc
mov
call
fscale
lret
sbb
mov
les
pop
jl
adc
mov
vpaddq
xchg
aad
lret
push
sbb
dec
add
dec
xchg
and
push
add
lods
dec
mov
push
cwtl
and
in
js
ljmp
push
js
test
mov
jmp
fucomp
nop
stos
clc
sbb
sbb
insb
std
rorl
pop
fidivs
or
mov
int3
aaa
push
lock
addr16
divl
lahf
push
mov
xor
je
mov
popf
add
mov
leave
lret
aad
cmp
arpl
or
pop
out
fwait
inc
or
mov
sbb
or
fldenv
sahf
pop
jns
cmp
pop
xor
add
mov
stos
mov
pop
or
inc
jp
leave
mov
mov
aad
mov
cmp
mov
dec
mov
xchg
push
pop
js
and
xchg
nopl
cltd
sub
in
sub
decb
loope
pushf
push
xchg
mov
and
test
mov
jle
movsb
in
leave
sub
jae
push
iret
out
push
pop
add
testl
adc
popf
fld
dec
mov
cmp
xchg
shrl
sub
imul
scas
pushf
cwtl
je
cmpsl
mov
mov
shr
icebp
leave
mov
or
jo
sub
inc
rolb
das
cs
dec
fisttpl
or
in
pushf
int3
dec
scas
pop
sub
aaa
fidivrs
jecxz
insl
out
adc
cs
sti
mov
cmp
mov
cmp
pop
sbb
mov
pop
outsb
sbb
imul
adc
push
jno
pop
sbb
rorb
mov
xor
stos
in
and
and
push
and
fldl
push
icebp
cmpsb
out
jno
mov
lock
inc
push
or
imul
loope
mov
pop
cmp
lods
add
pop
and
cmp
pop
pop
fwait
xor
icebp
xchg
dec
add
add
xor
dec
pop
pop
add
lcall
push
ja
mov
sub
jp
aad
enter
add
jp
mov
cli
mov
pop
out
push
and
and
push
int
inc
xchg
and
pop
test
xor
cmp
addl
cmp
pop
out
or
outsl
cmp
adcb
xchg
loop
add
mov
xchg
xchg
adc
je
sub
cmp
call
das
push
cli
sbb
xor
stos
lea
jno
mov
or
adc
cmc
sub
nop
pop
repz
adc
xor
imul
xor
lods
jl
push
mov
scas
xlat
xor
sub
push
and
in
lea
incb
xchg
mov
dec
iret
inc
loopne
stos
loop
xchg
adc
add
fstps
push
pinsrw
lock
sbb
push
fs
pop
imul
lcall
icebp
in
dec
or
xor
xor
aas
pop
test
and
mov
jecxz
out
mov
lea
leave
call
inc
dec
pop
mov
jno
addl
mov
ret
aam
pop
mov
inc
mov
add
pusha
sbb
jmp
mov
or
dec
push
mov
fldenv
std
stc
call
mov
xchg
inc
icebp
mov
out
lret
mov
orb
icebp
inc
lock
rorb
fwait
xlat
jle
popl
sub
mov
ret
fs
test
push
insl
xchg
and
dec
std
cmpsb
adc
movsb
lock
popa
lahf
and
lods
dec
or
jmp
and
xchg
jg
dec
dec
mov
daa
sahf
pop
cltd
mov
dec
test
pop
divb
ljmp
clc
push
add
xchg
jno
sbb
stc
shll
subb
push
scas
adc
lret
rcr
push
jns
xor
xor
ret
xor
pop
mov
xchg
in
test
movsb
cli
ja
fisttpll
sti
xchg
or
or
mov
fwait
outsl
push
or
pop
cmp
and
fucomi
ret
fwait
pop
iret
in
push
mov
mov
out
dec
mov
mov
push
jp
adc
mov
adc
mov
dec
sbb
cwtl
mov
xchg
out
xorb
xchg
and
dec
jmp
fisubrl
subl
fwait
out
mov
sub
fcoml
push
aam
mov
and
fisttpl
daa
lret
cmp
pusha
push
mov
iret
inc
add
or
out
xor
jae
bound
popf
add
jmp
mov
insl
fstl
aam
cltd
imul
jl
push
push
push
out
lods
into
adc
or
repnz
hlt
mov
ljmp
cmc
or
push
and
mov
sbb
dec
int3
cmp
pop
pop
inc
out
vpextrw
mov
dec
ret
out
scas
xchg
and
lret
in
cmp
aas
movsb
stos
jo
push
inc
rcr
jbe
loop
jge
xor
sbb
and
cmp
outsb
cmpsb
jno
in
jl
jle
dec
inc
decb
mov
jne
pop
outsb
sub
lahf
stos
in
push
stc
repnz
jbe
xor
mov
cmpsb
imul
jb
cli
inc
jbe
test
imul
xlat
pop
sub
inc
jl
jmp
cmc
push
movsl
sub
jbe
jle
cmp
sub
test
movsl
xor
xchg
dec
pop
js
sub
mov
pop
jp
jo
dec
test
inc
fcompl
inc
sub
mov
adc
mov
sbb
jge
data16
lods
lods
and
inc
sub
mov
das
movsl
sub
jbe
lret
popa
rcll
xor
xchg
sahf
call
addl
jle
outsl
xor
fsub
cmp
jne
lods
arpl
jns
mov
insb
std
enter
insb
fsubs
mov
cmpsb
xor
in
pop
or
into
mov
cmc
lock
cli
pop
adc
inc
imul
aaa
add
push
data16
mov
cmp
jae
imulb
fnsetpm(287
shlb
push
sti
xor
out
and
movsl
gs
out
loopne
mov
dec
div
ss
adc
mov
les
jmp
insl
xchg
pop
aad
sbb
mov
addr16
sbb
lods
adc
out
pushf
sub
jne
mov
push
aad
dec
xchg
nop
mulps
aas
fidivs
jb
jp
dec
cmp
dec
je
int
jecxz
aaa
mov
xorb
call
add
mov
sbbl
in
pop
xor
inc
cmp
sbb
lret
mov
les
xor
in
mov
pushf
std
mov
stos
add
adc
mov
xchg
je
cld
push
lret
mull
cwtl
mov
sbb
mov
ret
pop
mov
out
sub
repnz
aam
outsl
ds
repz
and
insl
jge
adc
ror
mov
inc
dec
popa
mov
xchg
lods
mov
fistpll
or
jecxz
mov
scas
mov
add
and
ret
in
test
shlb
xchg
rcr
cmp
lock
xchg
ret
stc
jns
pop
xor
subl
add
xchg
add
fs
cmpsb
mov
mov
inc
orl
xchg
xchg
inc
mov
mov
jae
test
adc
ja
mov
dec
out
jle
inc
popa
fcmovne
or
mov
push
mov
out
mov
out
mov
add
jns
push
jmp
jb
jne
mov
test
mov
addl
jp
or
in
scas
ret
shrl
mov
adc
incb
clc
mov
in
fbld
ror
jmp
movsl
nop
fildl
jmp
or
xlat
xlat
push
push
adc
and
pushf
out
mov
jnp
loope
jle
ret
jb
push
mull
iret
movsl
jmp
ret
and
mov
jle
adc
push
ds
imul
cmp
adc
jne
fstl
jg
or
mov
scas
bound
push
xor
cltd
or
jns
ror
jbe
outsb
hlt
push
mov
fiaddl
dec
jns
pop
adc
push
jecxz
pop
or
or
xor
and
in
mov
sbb
jnp
jle
fcomps
mov
in
cmp
jle
movsb
xor
xchg
jge
icebp
push
sbb
jmp
adc
xchg
cmp
jno
sti
jl
lret
scas
xor
push
xchg
pop
mov
pusha
xchg
je
leave
les
push
int3
test
insl
add
jno
mov
mov
enter
pop
ret
sbb
loope
sbb
sub
pop
daa
cmp
mov
aam
jo
pop
frstor
addb
sbb
sub
pop
fbstp
es
es
push
jecxz
pop
push
cltd
xchg
js
fisubs
lcall
mov
or
dec
outsb
fwait
out
adc
xchg
mov
sti
mov
jle
hlt
mov
mov
sets
aad
stc
push
movsl
and
int
mov
sub
pop
in
divl
push
and
mov
xor
mov
xor
jge
lea
adc
loop
lcall
cmp
ss
out
cmp
fcomps
cmp
lock
push
orb
pop
int
cmp
outsb
dec
or
clc
movsl
into
outsl
clc
sbb
xor
loope
pop
xor
adc
pop
add
adc
loop
add
jae
sub
lods
dec
or
push
outsl
xor
mov
js
dec
std
mov
arpl
loop
jecxz
nop
incb
aam
push
popa
repz
iret
or
loopne
inc
sub
jmp
mov
repz
xchg
xchg
pop
notb
cmp
repnz
xbegin
cmp
sbb
es
sub
rcl
aad
nop
ljmp
jb
icebp
xchg
dec
mov
push
je
inc
js
cmp
xchg
movb
mov
sti
sub
mov
sbb
xor
out
sbb
and
aaa
inc
mov
mov
test
in
mov
jnp
xchg
sarl
jnp
negb
lods
std
inc
es
lods
cmp
mov
insl
das
xor
xchg
mov
jns
lock
xchg
in
xor
out
aam
xchg
push
ret
andb
scas
loopne
insl
fs
adc
jo
xchg
loop
or
mov
popa
int
jae
push
mov
mov
xor
push
and
mov
sbb
dec
fsubl
test
xchg
mov
aaa
mov
frstor
clc
int3
jo
xchg
mov
js
push
fsts
pop
fisttps
sbb
int3
dec
outsl
xchg
dec
pop
mov
ret
pop
incl
xor
arpl
fbld
shlb
shr
dec
out
test
adc
ja
or
loope
popa
inc
clc
xor
or
fs
fwait
int
mov
pop
inc
bound
pop
lods
xchg
out
subb
or
std
in
xchg
push
xchg
out
jnp
mov
aam
mov
cmp
mov
jo
aam
lcall
mov
and
insl
jne
mov
mov
pop
mov
shlb
lret
jmp
jo
mov
out
outsb
xchg
sub
shr
mov
push
sub
bound
mov
mov
jnp
pop
enter
xchg
in
and
pusha
inc
lds
ret
mov
inc
aaa
test
das
push
add
jbe
sti
pop
dec
inc
mov
test
xchg
mov
sbb
imul
sbb
arpl
jl
scas
adc
sarl
int3
add
in
shlb
push
popa
xor
add
add
ret
pushl
push
mov
adc
mov
push
adc
pop
mov
dec
add
add
in
jg
shrb
sbb
idivb
xlat
inc
loopne
rcrb
jecxz
test
addl
lds
or
fisubl
adc
xchg
xchg
jno
pop
xchg
jl
ljmp
jp
mov
jo
or
lahf
call
cs
test
add
inc
dec
stos
jo
outsl
xchg
push
in
push
or
lock
daa
pop
add
ds
insl
or
fadds
mov
inc
insl
cmpsl
ds
movsl
cmp
jg
or
jo
cmp
xor
xchg
movsb
inc
add
add
cmc
xor
fiaddl
js
jl
push
sbb
js
push
lcall
insb
fdivl
adc
sub
outsb
rorb
xchg
mov
mov
test
add
int
push
pushf
sub
or
jno
jno
pop
int3
pusha
roll
mov
mov
popf
sahf
cs
test
int
lock
fwait
loop
mov
stc
in
jbe
ret
clc
bound
pop
dec
xchg
ss
xor
sbb
out
adc
xor
mov
or
into
push
fsubr
cmc
jle
lret
xor
rcrl
jmp
xor
ficoms
adc
ret
repnz
lods
xor
loop
dec
dec
inc
xlat
icebp
loop
sub
leave
or
into
outsl
pop
sti
xchg
daa
sbb
push
outsb
gs
inc
cmp
adc
push
dec
mov
dec
inc
cmp
les
dec
repz
inc
mov
sbb
sbb
insl
ja
jmp
cmp
adc
scas
pushf
jg
pop
jmp
jno
ja,pn
fwait
aad
ret
lds
aas
sbb
jmp
negb
je
adc
jecxz
xchg
mov
mov
jne
jbe
call
xor
and
add
aaa
fistl
sub
inc
inc
adc
das
mov
mov
xor
lahf
and
sub
mulb
jp
cwtl
push
lods
xchg
mov
inc
push
dec
cld
pop
or
lret
aad
bound
push
rcrl
push
cli
mov
sub
in
aam
or
adc
mov
xor
push
dec
out
mov
xchg
and
ljmp
fisubrl
dec
mov
push
outsb
aas
and
pop
xlat
insb
mov
pusha
leave
dec
cltd
xor
pop
test
sbb
mov
mov
sahf
fisttpll
test
mov
jge
out
shll
shrb
sub
xchg
out
das
test
xchg
xchg
repz
pop
loop
jmp
popf
dec
xor
mov
xchg
add
mov
test
jle,pt
mov
call
dec
aam
mov
mov
or
push
scas
fwait
cld
xchg
push
push
add
push
add
out
pop
cli
shlb
xor
jns
cmp
mov
mov
mov
idivl
sbb
pusha
xchg
jp
sbb
adc
add
dec
les
jne
sub
lahf
xchg
popf
pop
outsb
jmp
cmp
aad
sbb
icebp
or
xchg
or
xchg
push
push
xchg
mov
xchg
and
dec
test
add
mov
xor
pusha
mov
pusha
fistpll
iret
arpl
mov
les
inc
inc
push
mov
push
or
les
push
ss
iret
inc
aaa
dec
push
fcmovu
sahf
push
xchg
sbb
and
cmp
mov
adc
int
mov
pop
fwait
leave
fs
shl
push
lcall
xor
or
xor
imul
icebp
rolb
int3
stc
xor
call
js
lds
or
scas
mov
cmp
dec
xchg
push
xor
ja
ret
sbb
mov
mov
mov
dec
aaa
jl
ficomps
in
add
pop
sbb
xor
push
out
lahf
pop
dec
push
jb
jg
pop
add
dec
fs
fldenv
out
in
ds
enter
pop
inc
icebp
xchg
push
add
loope
or
sub
fidivrs
neg
sub
in
andl
fwait
inc
or
int
movsl
add
xor
xlat
cmp
xchg
inc
dec
pop
lahf
cmp
js
push
sbb
imull
cmp
shrl
push
sub
lea
popa
pop
xchg
adc
dec
stc
fidivrl
jb
mov
outsl
xor
dec
rorb
and
inc
push
push
stos
lds
sub
mov
xor
dec
testb
sahf
dec
mov
push
sbb
adc
sbbb
mov
sbb
loop
loop
add
stc
fwait
pop
in
fs
sarl
xor
xor
fcom
push
hlt
out
pmulhw
out
push
push
popf
and
xchg
aam
xor
enter
jecxz
pop
outsl
xchg
out
xchg
clc
imul
stc
add
imul
mov
xlat
xor
insb
mov
cmp
psubq
jbe
lea
mov
lods
inc
stc
dec
adc
cli
test
les
stc
repz
cld
test
or
lahf
cmp
testb
adc
inc
pushf
sub
and
jle
pop
ficompl
adc
nop
mov
in
jb
jl
dec
mov
xor
cmpsl
ffree
mov
mov
icebp
and
mov
xor
ljmp
dec
out
xor
pop
sbb
int
mov
das
addr16
jg
js
fdivrl
xchg
enter
testl
and
jle
push
mov
push
dec
mov
sbb
jge
xchg
lret
inc
mov
mov
loopne
pop
xchg
and
ret
cltd
or
pop
fs
rcr
jecxz
sub
xchg
aam
ret
mov
fsts
insl
xor
dec
jmp
mov
cli
popa
sti
mov
mov
mov
or
bswap
stc
bound
jae
cltd
push
shlb
test
mov
mov
xchg
pop
mov
sar
add
jmp
stos
sbb
mov
xchg
mov
xchg
fdivs
push
aaa
adc
xchg
lods
aad
sahf
sub
xor
aaa
pop
mov
lods
outsl
dec
pop
jp
test
rcrb
dec
outsb
repz
es
fmull
mov
push
mov
cmp
add
dec
xor
sbb
jns
and
in
and
jecxz
mov
mov
fldenv
and
mov
sub
sub
cmpsl
adc
sub
ds
jo
pop
xchg
jo
imul
hlt
nop
cmpsb
xchg
push
mov
andl
je
ljmp
enter
ror
sub
loope
mov
out
inc
fstpt
cmpsb
inc
jle
push
xchg
stos
or
dec
pop
iret
ret
ret
dec
pop
push
mov
dec
dec
and
xor
push
xchg
dec
popf
pushf
add
inc
mov
cmp
mov
je
jecxz
xorb
imul
add
or
adc
test
mov
scas
leave
fldt
hlt
out
test
sub
inc
or
test
scas
pop
jno
and
or
inc
jg
sub
push
int3
in
mov
fisubrs
pop
lds
mov
mov
mov
push
xor
and
je
inc
mov
inc
arpl
lock
sbb
lea
cmp
inc
xlat
jno
pusha
dec
jl
cmpsl
fmull
outsl
xchg
push
inc
arpl
xor
jno
je
es
push
inc
cmp
sbb
inc
push
add
int
enter
pop
andb
loope
mov
dec
cmp
jns
dec
pop
xchg
and
and
jl
mov
add
cli
add
push
mov
push
lods
pop
bound
loopne
pop
jbe
mov
sub
fmull
out
adc
outsb
les
push
shlb
mov
pop
jne
out
sub
lcall
push
scas
les
dec
ret
jle
imul
in
lret
inc
jno
xchg
mov
jae
sahf
je
daa
test
xchg
xor
scas
ss
xchg
repnz
jmp
mov
push
ss
push
cmp
stc
shl
xchg
loop
sbb
fnstsw
fimuls
cmp
inc
cmc
or
lods
xor
addl
cmp
lea
repz
adc
cmp
lods
push
sub
ss
lods
cld
icebp
mov
pop
xlat
outsl
add
mov
movsb
and
mov
mov
loopne
popf
mov
jb
lret
jge
fnstenv
cwtl
mov
repz
das
xchg
push
adc
jne
mov
adc
sbb
push
dec
cs
leave
out
jnp
xchg
pop
adc
pushf
fstps
cmpsb
loope
gs
stc
mov
lea
call
push
or
fstp
fiadds
fimull
jle
mov
adc
inc
ret
fbstp
mov
mov
mov
xor
sub
cmp
xchg
or
in
ds
repnz
frndint
mov
ljmp
add
mov
mov
lock
ds
shrl
scas
popf
xor
aam
repnz
das
cmp
lods
insl
sbb
icebp
dec
in
and
ljmp
clc
lods
pop
fidivl
mov
cltd
mov
and
mov
pushf
cvtpi2ps
add
insl
je
jp
lea
inc
outsb
fstp
lret
cmp
imul
sbb
fcoml
push
iret
outsl
pop
loopne
cmp
out
cmc
xlat
xchg
pop
arpl
pop
idiv
and
xor
xchg
rol
mov
scas
ss
jle
mov
ja
sub
dec
mov
sbb
xor
je
push
inc
ja
add
stos
ror
out
sbb
aaa
lock
mov
in
jmp
xchg
fmull
mov
adc
mov
insl
andl
xor
int3
mov
xchg
lret
js
mov
fmuls
ror
jne
cmp
mov
sbb
sbb
mov
jmp
shll
xor
imul
jae
xchg
ret
lahf
daa
push
divps
and
ds
insb
pop
jno
jnp
jo
jle
outsl
mov
pusha
adc
lods
aad
ljmp
inc
pop
mov
lcall
push
into
mov
xor
out
mov
lret
inc
rcrb
shrl
aam
scas
out
push
mov
adc
push
add
leave
push
das
xor
inc
mov
inc
adc
dec
or
sub
adc
filds
or
push
dec
int3
iret
jmp
pop
inc
daa
xor
lds
hlt
ja
xor
dec
ja
cld
jl
movsb
popa
xor
jbe
xchg
add
aam
sbb
loop
or
aas
shlb
cwtl
dec
jl
inc
dec
dec
imul
xor
int3
xlat
adc
sbb
cmp
in
mov
cmpsb
clc
fs
or
fcmovne
loope
into
pop
mov
inc
loop
sbb
movsl
lods
cmp
sub
push
push
fldenv
fdiv
and
popf
jae
cmp
add
stc
mov
jns
sbb
pop
in
insl
sbb
sbb
pop
cmc
adc
popf
push
addl
sub
pop
and
daa
movsl
inc
adc
incl
mov
cmp
in
in
xor
adc
push
int
sahf
jg
jmp
or
xor
rorl
mov
cmpsb
outsl
sahf
pop
cmpb
or
outsl
lea
je
fs
cmpsb
adc
pop
ss
pop
xor
dec
xor
in
xchg
cmc
cli
dec
imul
jae
push
or
das
sub
sarl
imul
imul
aaa
popa
sbb
cmp
jns
cmp
lods
out
pop
mov
leave
xlat
scas
addr16
mov
getsec
add
lahf
pop
js
shll
sahf
gs
pavgb
or
dec
shrl
rcr
push
mov
repz
nop
xchg
sub
sub
cmp
daa
cmc
hlt
das
inc
pop
fwait
jb
adc
push
pushf
xorb
aad
mov
loop
nop
push
mov
inc
jb
fisttps
outsb
shlb
je
sti
xchg
ds
lea
data16
mov
fisubs
mov
mov
fcmovnu
mov
pop
pusha
fwait
push
inc
fldt
sub
mov
push
push
xchg
pushl
ja
sub
imul
std
jecxz
mov
cltd
aaa
jecxz
or
xor
leave
adc
frstor
and
mov
cmp
lock
mov
push
inc
sbb
orl
es
mov
mov
test
fcomip
push
xchg
fisubs
ljmp
mov
sbb
aam
cmp
jns
enter
test
and
jl
fldl
dec
ljmp
orb
lods
mov
xor
pop
out
arpl
in
mov
inc
out
xor
and
or
adc
mov
inc
dec
in
pop
test
loope
ja
nop
mov
inc
push
add
and
fwait
mov
push
push
jmp
mov
gs
cld
sti
insb
bound
dec
jns
loopne
in
push
into
xchg
sub
aaa
mov
or
xlat
pop
sub
and
sub
jp
jg
mov
jmp
mov
fiadds
mov
mov
xlat
jbe
cmp
test
loop
or
pushf
outsl
std
addl
shrl
mov
jbe
stos
sar
and
insl
shrb
sbb
jle
mov
xchg
pusha
mov
mov
andb
pop
test
int
sbb
movsl
std
popf
ljmp
inc
mov
dec
and
xchg
and
inc
sbb
dec
mov
scas
push
and
cwtl
xchg
cmpsb
adc
xor
mov
sbb
leave
leave
xchg
shl
xor
inc
adc
or
movsl
xor
aaa
sahf
into
xor
lret
add
stos
int3
mov
insl
sub
mov
pop
lds
mov
or
and
out
mov
shll
jbe
scas
jnp
mov
inc
sbb
pop
inc
daa
or
lock
pop
jno
cmc
sahf
jl
mov
dec
fcmovb
and
push
aad
xor
daa
lcall
jmp
into
test
scas
ds
xchg
ss
repz
nop
mov
repz
xor
fsubrl
fwait
mov
add
mov
dec
out
movsl
push
out
and
sub
mov
add
xchg
xor
fs
inc
cmp
pop
mov
pop
je
arpl
fadds
fsubl
jge
lock
adc
or
inc
pop
mov
push
push
mov
sahf
mov
in
xchg
and
mov
sbb
imull
cld
lret
mov
mov
popf
pop
sahf
mov
ja
adcb
outsl
insb
ljmp
shl
fs
adc
ss
jbe
cmp
add
and
cli
jg
das
xor
pusha
or
push
mov
ja
lcall
pop
int3
mov
fisubrl
cltd
fsts
xchg
fldl
lret
mov
lods
int
call
xlat
in
xor
lea
ret
mov
jp
mov
idiv
ret
gs
lret
loopne
mov
inc
xchg
sbb
bound
repz
lds
add
dec
xlat
pop
dec
add
sub
dec
sub
aad
pop
cmp
cwtl
jbe
jb
push
dec
add
mov
jecxz
jnp
xchg
cmpb
bound
mov
add
mov
xchg
ljmp
inc
data16
and
and
inc
bound
int3
das
add
push
mov
push
add
xor
imulb
mov
cwtl
push
test
sub
mov
jnp
lret
xchg
das
mov
mov
and
lock
mov
rclb
sub
insb
ret
dec
lret
cmp
jl
dec
fiaddl
push
ljmp
imul
push
and
les
psubsb
add
in
dec
mov
mov
ja
push
aas
sarl
clc
repz
dec
xchg
mov
sbb
jo
out
inc
out
mov
mov
lcall
push
xor
test
cmpsl
xor
iret
lods
mov
mov
mov
test
mov
jnp
dec
mov
adc
fwait
mov
or
add
loopne
adc
fistpl
testb
jns
mov
in
je
xchg
jp
sub
push
xchg
lock
jecxz
or
js
jp
mov
mov
bound
mov
sbb
push
xor
jne
fsubr
mov
test
cwtl
xchg
jmp
or
xchg
addr16
rolb
std
adc
sub
mov
adc
stos
inc
jne
and
mov
in
cmpsb
dec
es
xchg
in
loope
pusha
dec
xor
iret
fbld
dec
pop
mov
ds
jae
push
jecxz
rolb
popf
adc
aad
xor
jb
jns
loope
adcl
cs
filds
adc
mov
repnz
leave
inc
mov
xor
in
inc
push
jo
or
and
loop
pop
add
mov
int3
movsl
cmc
mov
movsb
ja
ficoms
lds
sti
and
sti
mov
test
ja
mov
outsb
pusha
jbe
cmp
pop
sbb
stc
daa
or
scas
jno
jbe
jl
mull
push
jmp
cld
jbe
xorb
adcl
mov
test
je
adc
mov
in
fcmovbe
outsl
enter
pop
cmp
push
adc
dec
mov
adc
mov
jno,pt
mov
and
and
pop
filds
test
inc
jae
add
popa
mov
xor
pop
repz
lcall
dec
fmull
inc
loope
fists
jns
push
aas
push
shlb
cmp
loopne
fisttpll
jnp
cltd
and
clc
addr16
mov
push
int
insl
jge
xor
sbb
out
mov
pop
sbbb
jge
subb
outsl
dec
dec
sub
stc
ja
mov
adc
and
cmp
rcrb
ljmp
xor
sub
fnstcw
into
roll
xor
jmp
jnp
ror
repnz
sbb
add
cs
push
cltd
lods
mov
adc
sub
shrb
add
mov
dec
in
in
aas
sti
std
add
xorb
sbb
and
cmpsb
daa
inc
lcall
les
clc
repz
xorl
mov
push
sbb
inc
cmp
pop
add
adc
pop
je
cmp
cs
add
nop
or
mov
jb
add
je
sti
daa
jecxz
lahf
outsb
xchg
cmp
call
cmp
mov
mov
pushf
adc
pop
cmpsb
lcall
adc
ret
xor
les
mov
mov
and
div
in
clc
std
xor
scas
cwtl
imul
cmpsl
or
adc
pop
decl
cld
xor
pop
lret
add
movsb
mov
mov
xor
lock
mov
out
shlb
add
mov
outsl
aam
inc
xor
fdivl
sarb
insl
into
stos
dec
aad
mov
ljmp
cli
lods
mov
sbb
in
loop
insl
mov
inc
out
add
push
aam
push
test
mov
dec
push
add
fisttpll
dec
clc
cs
pop
xchg
std
push
sbb
xchg
movsl
rcrl
jl
loope
cmpsb
stos
dec
dec
out
push
cli
stc
xchg
hlt
or
aad
xor
outsb
ss
push
pusha
mov
mov
dec
mov
ja
jmp
dec
xchg
xchg
inc
addb
test
fwait
out
adc
add
sti
test
inc
bound
cs
aas
aaa
mov
leave
xchg
mov
sahf
or
dec
mov
mov
decb
fisubs
rorb
sar
jne
inc
dec
mov
mov
xchg
inc
xchg
mov
and
xchg
xor
andl
mov
mov
lea
xor
mov
xor
push
jnp
movsl
jle
xor
pusha
out
cmp
ds
ret
add
push
push
jae
inc
movsl
push
xchg
push
and
pop
sbb
or
pop
stos
push
xchg
rcrb
sbb
mov
imul
adcb
mov
mov
mov
push
aaa
hlt
adc
add
inc
sbb
decb
fwait
pop
jno
sbb
fisttpll
mov
xchg
add
cmp
pop
roll
fdivp
mov
lds
xchg
shlb
gs
shlb
cmp
jbe
movsb
add
rcpps
cmp
push
sbb
mov
or
mov
jno
sbb
jl
dec
mov
push
test
xchg
jl
jo
pop
imul
rcrl
lods
je
inc
je
inc
movsb
xchg
cmpsb
orl
enter
pop
jl
or
outsb
fwait
loope
loopne
sub
add
popa
cltd
pop
ds
xchg
movsl
gs
out
lods
arpl
jbe
and
enter
loopne
scas
add
jecxz
xor
adc
imul
mov
pop
jb
sbb
xchg
xchg
sub
jnp
outsb
push
mov
adc
nop
icebp
dec
jg
xor
mov
xchg
push
mov
negb
and
aad
mov
sub
imul
xchg
mov
or
pop
ror
add
xlat
rcrb
cs
sub
scas
cmpsl
loop
xchg
sar
call
in
adc
and
aas
lds
jnp
cltd
out
rorl
in
fnsave
cmp
adc
hlt
cld
and
movsb
sbb
xor
test
imul
repnz
call
hlt
xor
xor
subl
pop
xor
push
jb
sti
lods
jns
cmp
push
xchg
std
dec
out
stos
push
inc
lods
movsl
cmp
or
jno
repz
add
jnp
mov
jno
ret
cmp
pop
pushf
orl
inc
aad
xchg
nop
out
scas
aas
jmp
jb
in
dec
repz
test
jecxz
pop
rol
data16
pop
and
mov
and
lds
xchg
dec
fldt
lcall
lret
das
adc
das
ret
mov
jl
or
shll
divb
ret
stos
arpl
or
shl
dec
cmp
cld
pop
stos
jmp
outsl
push
sbb
cli
and
lock
in
sar
mov
sub
mov
ret
imul
inc
mov
insl
mov
cs
shrb
xchg
fwait
mov
bound
insl
mov
or
popa
mov
and
jae
mov
cmpsb
insb
fadds
rcrb
pop
test
insl
mov
insb
push
fnsave
sub
imul
xchg
sbb
aaa
shll
rolb
out
sub
call
lcall
push
jg
icebp
pop
cmc
xor
sub
add
mov
jmp
xchg
dec
adc
filds
inc
sbb
sbbb
imul
push
sbb
cltd
and
jns
dec
cmp
lret
xchg
sbb
push
mov
mov
repnz
pop
push
shlb
pushf
lcall
mov
je
sub
cltd
dec
push
arpl
jne
push
sbb
roll
xchg
xlat
cmp
xchg
std
jle
subl
jp
add
sub
scas
cmpsl
ss
or
xor
push
iret
insb
push
imul
add
and
pop
cmp
mov
pusha
addl
xchg
pop
sub
in
test
jae
outsb
gs
push
popf
pop
xchg
mov
xor
and
xchg
daa
add
sbb
mov
inc
scas
jp
js
insl
into
xchg
adc
cmp
adc
dec
hlt
pop
add
arpl
mov
inc
sbb
prefetchwt1
pop
aaa
fildl
cltd
add
lret
pop
int3
jnp
rcrb
fdivs
lds
push
mov
and
cmpsb
cmp
mov
mov
leave
sub
push
mov
jge
idivb
dec
and
or
cmp
daa
pop
jno
in
jl
sti
out
daa
js
push
scas
and
call
lahf
rorl
fs
test
adc
les
test
mov
pop
mov
cmp
loope
inc
lods
sub
jae
cmp
movsb
ljmp
add
pop
cmp
sbb
mov
add
fldcw
sahf
push
jno
es
push
pop
mov
jl
icebp
adc
lcall
fsubl
dec
sub
mov
or
imul
mov
mov
mov
and
lods
push
mov
int3
push
aad
pop
imull
mov
shll
push
cs
sbb
sbb
sahf
mov
mov
andb
pusha
loop
pop
push
fs
pop
lods
adc
inc
ss
shrl
mulb
fdivs
cli
sbb
add
adc
pop
dec
rorl
les
cmc
out
fcoms
lret
or
push
adc
clc
imul
and
add
inc
inc
push
mov
mov
pop
xlat
stos
pop
imul
fisttps
inc
sti
pop
mov
pop
or
mov
loopne
test
dec
mov
inc
shlb
les
fsubrp
xchg
aaa
dec
or
mov
in
lock
pop
addr16
sbbl
dec
popa
aad
das
xchg
jne
stc
jb
cld
dec
dec
push
lea
mov
mov
popf
push
cmp
shl
jne
mov
loop
sub
lret
cltd
ljmp
div
xchg
inc
dec
push
je
mov
enter
faddl
mov
adc
ja
gs
jg
daa
cwtl
test
cmpsl
or
jge
and
add
mov
aaa
ret
lock
push
pop
shrl
in
int
inc
sub
js
ret
cli
fwait
test
movsb
pop
insl
pushf
mov
dec
lret
mov
shr
ret
lock
test
lods
jbe
push
mov
dec
mov
lock
mov
add
hlt
imul
test
test
mov
clc
movsb
inc
imul
nop
out
rorl
in
pop
aaa
jecxz
stos
mov
cmp
in
notl
pop
ljmp
xor
or
push
xor
pop
enter
push
mov
xchg
hlt
test
out
sub
push
cmp
dec
and
adc
int3
jecxz
fwait
inc
push
mov
add
xor
bound
or
in
mov
fs
xchg
pop
adc
adc
je
jp
test
mov
mov
iret
mov
call
aad
sbb
sbb
mov
and
jmp
enter
mov
sbb
or
ljmp
stos
lahf
adc
insb
jno
pop
jnp
fmull
in
pushf
or
lret
cld
mov
sub
scas
popa
inc
and
pop
loopne
push
sbb
cmp
rcll
mov
push
fcmovb
add
sbb
push
and
push
mov
jecxz
xor
mov
fisttpl
hlt
test
add
or
xchg
dec
aaa
lcall
add
cmp
xor
cmp
cmp
lret
jge
push
sbb
scas
nop
jbe
and
int
sbb
xlat
push
pop
jecxz
jbe
fwait
sbb
mov
cmc
daa
or
repnz
movsb
sbb
rorl
jl
mov
push
push
xchg
sub
xchg
imul
loopne
sbb
cmp
inc
push
xchg
inc
ret
cmpsb
xchg
insb
in
out
enter
pop
cli
popf
pushw
mov
dec
sub
mov
push
movsl
jae
sub
jecxz
xor
out
push
pop
sbb
stos
add
and
xor
rcl
call
dec
js
lret
jo
xor
xor
cmp
or
mov
lods
popf
in
outsb
push
test
jo
rolb
into
jg
aaa
push
mov
fildll
mov
push
and
pop
mov
push
rolb
mov
push
sub
out
imul
mov
leave
sbb
test
inc
repz
test
pop
cmpb
inc
loop
rolb
sbb
adc
fcoms
icebp
stc
or
out
addr16
dec
scas
cmc
xor
popa
and
cmp
lods
into
push
xor
cmp
pop
dec
lcall
mov
mov
test
mov
in
mov
jmp
jge
mov
adc
sti
or
enter
mov
jmp
mov
mov
jnp
mov
xchg
pop
xor
jb
xchg
cli
adcb
icebp
sub
outsl
fdivr
pop
sbb
adc
fwait
les
and
cs
xlat
cmp
nop
popf
pop
imul
jno
jb
inc
pop
dec
loope
movsb
je
inc
fninit
mov
sbb
scas
out
mov
dec
xor
jns
fimull
sbbl
fcmovne
mov
aad
jle
int3
inc
cmpsb
das
subb
jge
sahf
mov
pop
inc
mov
idivb
xor
inc
cmp
cmpsl
pop
adc
shl
adc
cld
mov
cmp
mov
mov
lock
mov
shlb
in
aam
retw
mov
insl
adcl
xchg
sbb
ljmp
dec
lods
loope
or
imul
idivl
and
cmpl
jmp
mov
push
dec
pusha
call
clc
fcomip
inc
xchg
popf
ja
pop
xchg
stos
mov
mov
xchg
leave
iret
std
push
xor
sbb
xor
sbb
xor
mov
shrl
call
and
ja
push
lea
cmp
or
sub
cs
sbb
lods
add
out
push
stc
in
inc
and
loopne
push
xchg
mov
mov
mov
iret
aas
jle
shlb
xchg
mov
stos
mov
mov
fsubl
jne
iret
in
ja
dec
pop
sbb
mov
push
xchg
add
dec
adc
jne
fstl
jae
mov
dec
and
fbld
bound
fstpt
mov
in
dec
or
and
iret
pop
xchg
ret
negb
enter
push
jae
xchg
mov
popf
lods
testb
jmp
inc
das
inc
push
fidivl
sbb
sub
cld
repz
inc
aad
push
sti
call
or
jecxz
hlt
repnz
fxch
sbb
push
hlt
hlt
fldln2
arpl
jmp
and
or
or
cmc
aaa
pop
ss
add
pusha
int3
push
stc
sub
dec
fsubp
inc
inc
rorl
shlb
scas
outsl
in
and
push
cmp
pop
movsb
mov
inc
ret
jbe
clc
pop
jge
pop
lahf
sbb
fs
cmp
pop
jno
loope
jl
push
cwtl
dec
add
pop
dec
xor
out
xchg
outsb
lahf
call
push
or
test
cmpsb
cmp
cmpsb
or
jbe
aas
enter
pop
cmp
inc
push
in
inc
loope
jne
sub
shlb
ds
in
movsl
jp
jns
jle
mov
addb
xchg
test
add
shr
cmp
sub
lods
hlt
pop
xlat
fs
js
enter
sub
lcall
or
mov
jns
fwait
aam
outsb
jns
adcl
sub
add
sub
out
mov
cld
or
push
ret
insl
scas
int
mov
adc
sub
or
rcll
adc
mov
adc
ret
jg
sbb
add
icebp
dec
loop
mov
jno
cmpsb
aad
adc
and
cmp
lods
stos
imul
jle
loop
mov
push
loop
inc
lahf
inc
into
dec
fwait
test
jge
xor
loopne
pop
hlt
scas
imul
mov
dec
test
push
mov
mov
pop
add
sub
in
or
and
movsl
cs
gs
stos
lcall
shrb
fnstenv
dec
in
repz
mov
and
sub
inc
out
mov
sbb
xchg
jmp
dec
pop
cs
xchg
aad
scas
pop
nop
js
jnp
mov
adc
loope
sub
je
add
jecxz
xlat
push
mov
shrl
leave
adc
fimull
sbb
add
negl
loop
xor
test
insl
lret
or
repnz
mov
test
push
mov
std
xchg
cld
std
int
popf
cwtl
sti
shlb
out
lret
icebp
shll
sub
fildll
and
mov
xchg
adc
fwait
in
loopne
jle
jae
sbb
cmpsb
jl
mov
or
es
fstpl
insl
push
jp
rcll
xchg
pop
ret
jae
or
cmp
mov
sub
mov
sti
pop
mov
ret
adc
add
inc
or
and
mov
push
push
cmpsb
pop
fucomp
jmp
clc
sbb
addl
mov
jbe
lea
imul
stos
jg
xchg
adc
movsb
push
mov
jp
std
xor
pop
pop
or
scas
xor
mov
mov
les
dec
dec
gs
or
outsl
ja
shrb
pop
fidivs
or
dec
movsl
fwait
mov
mov
or
out
imul
das
jns
in
mov
add
jp
mov
mov
shll
int3
jp
ds
mov
push
mov
js
jo
mov
mov
fcomip
cmpsl
js
or
lods
clc
add
sbb
clc
out
or
sbb
mov
push
xchg
and
fmul
jnp
fs
jle
aam
lahf
cmc
pusha
push
xchg
lods
iret
mov
shrl
pop
into
test
inc
movsl
pop
xorl
sub
popf
aam
and
scas
mov
fisubl
sub
sub
stos
sbb
outsl
inc
imul
scas
mov
mov
cmpb
or
jle
xchg
ja
hlt
aas
les
inc
and
aaa
cli
push
sbb
insb
or
add
jle
int3
cmp
call
fiadds
stos
xchg
rorb
mov
ficompl
cmp
mov
push
stc
jecxz
jbe
lret
mov
jo
daa
push
and
cli
jno
push
and
jne
mov
je
out
push
pop
or
xor
dec
int3
add
fisttpll
jge
jno
adc
push
out
pop
fs
mov
mov
je
mov
mov
and
and
cltd
movsl
sbbl
lcall
into
imul
cmp
or
lods
pop
stos
imul
imul
cld
and
push
loop
jp
bound
outsb
fsubl
jo
mov
lock
in
movq
dec
stc
mov
clc
repnz
and
or
or
int
or
sub
xchg
mul
xorl
sub
mov
lret
mov
add
dec
jp
xor
ret
gs
loop
loopne
stc
or
xor
sbb
nop
inc
push
cmp
addr16
jp
in
xchg
cli
mov
stc
xor
mov
push
into
xor
push
cmc
inc
daa
jae
add
pop
xchg
mov
imul
arpl
data16
repnz
sbb
and
mov
and
imul
cld
add
dec
lods
lods
mov
xor
push
xor
or
nop
les
data16
addb
push
push
xlat
insl
mov
inc
adc
cmp
sub
xor
cs
ret
or
gs
push
xchg
aas
push
push
sti
jb
jp
dec
iret
je
je
sbb
cmpsb
sahf
pop
lea
call
negl
out
scas
xor
pop
add
inc
lds
sar
fwait
mov
mov
pop
jnp
and
push
mov
mov
sahf
dec
std
je
cs
mov
xor
push
cs
stos
jle
cld
or
sbb
sub
xor
mov
rol
lock
or
rolb
shrb
xchg
aam
mov
aad
dec
sub
insl
push
repnz
dec
mov
push
ljmp
mov
mov
mov
and
mov
and
ss
push
aas
xor
xchg
rcrl
fstl
movsl
mov
xchg
sarb
pop
cmp
imul
or
dec
hlt
push
ljmp
xor
pop
lea
int
lea
fstpt
mov
cmpsl
test
mov
push
test
dec
pushl
rorb
movl
cmp
lea
pop
pushf
int
push
cmp
sub
adc
fs
out
and
push
mov
mov
mov
jp
inc
leave
mov
adc
jp
test
sarl
push
dec
mov
and
mov
xor
sbb
mov
add
out
xor
or
nop
test
mov
hlt
insb
mov
add
dec
into
jle
mov
in
fstpt
pusha
in
adc
sbb
pop
add
clc
push
jae
int
push
bound
inc
mov
sub
dec
add
xorl
scas
push
bound
adc
jg
mov
pop
cmpsl
scas
leave
or
hlt
mov
sbb
test
sub
int
xor
add
loop
aaa
xlat
sti
stos
or
cmp
jnp
pop
int3
daa
repz
pop
mov
rorl
iret
scas
mov
test
mov
insl
jecxz
cmp
gs
dec
lret
bound
adc
pop
pop
sbb
stos
daa
add
push
sub
outsl
adc
xor
jns
push
cmp
mov
jo
sbb
lahf
cmp
cld
es
cmp
loop
outsl
or
adc
test
inc
stc
jp
mov
adc
push
outsl
inc
loope
aaa
pop
sub
or
int3
jbe
ds
pop
cmp
mov
lahf
push
jbe
andb
es
fsubrs
adc
jle
or
xor
pop
and
andb
push
call
fmull
mov
adc
xlat
fst
jg
pop
in
mov
rcrb
mov
dec
push
and
pop
add
jmp
adc
mull
inc
imul
not
mov
cmpsb
and
sahf
das
jne
test
fdiv
orb
lea
mov
sahf
stc
sarl
mov
into
test
cmp
and
in
out
push
adc
in
push
insb
sbb
cmp
adc
or
mov
into
adc
cmc
or
pop
movsl
mov
imul
push
jge
push
aam
lods
push
ljmp
cmpsb
sbb
sub
mov
sahf
sti
pop
dec
jmp
aas
gs
popf
dec
loopne
ds
dec
leave
cld
jne
or
jne
and
mov
repz
xlat
sub
popl
aas
in
jae
pop
xor
scas
pushf
fsubs
push
cs
mov
jo
icebp
push
pop
jb
popa
sub
jecxz
or
test
inc
adc
mov
call
push
repnz
sbb
arpl
inc
adc
inc
mov
sub
sbb
sbb
bt
shr
push
inc
testb
mov
add
fnstcw
sub
aam
lcall
mov
jbe
lock
mov
rcrb
dec
push
sub
dec
aam
int3
ffree
ss
mov
shl
popa
insl
cmp
dec
mov
pop
xchg
insl
sub
out
pusha
lods
popa
loope
mov
mov
aam
mov
or
push
mov
addl
cltd
mov
push
mov
clc
lods
push
xchg
lea
cmp
clc
nop
mov
xchg
mov
inc
sti
fcmovnbe
fs
fcompl
stos
jo
clc
out
jo
sub
lds
mov
adc
inc
mov
xor
pop
in
nop
in
mov
sbb
cmp
ja
pop
mov
inc
or
addr16
add
push
add
sub
popf
jbe
out
hlt
pop
push
sti
push
ss
jbe
in
stos
push
xchg
mov
aas
out
in
dec
pop
add
nop
addr16
jp
enter
cltd
in
mov
push
fistps
jne
fistpll
mov
repnz
scas
push
mov
xchg
hlt
jge
cmp
enter
adc
or
enter
and
in
bound
scas
jnp
sti
push
jle
jne
in
mov
popf
iret
js
jns
xchg
mov
inc
mov
dec
fcoml
and
dec
pop
mov
lods
and
fimull
lea
sbb
push
scas
imul
data16
push
repnz
cwtl
leave
and
jmp
je
sub
sub
or
xchg
mov
jge
xor
xchg
movsb
push
or
testl
adc
icebp
pop
in
cs
fmulp
insb
mov
rol
pop
scas
or
jmp
add
add
hlt
test
movsl
enter
stos
mov
iret
imul
add
mov
jmp
push
jno
in
jl
add
dec
push
movsb
cmp
push
mov
push
jo
jl
lahf
pop
test
push
andl
pop
cmc
lods
inc
icebp
ret
cmpsb
xchg
push
stc
in
sub
enter
pop
imul
push
mov
lea
push
cmp
lret
ds
movsl
cmpsl
pusha
and
lea
cmp
sti
sbb
xchg
push
xchg
xor
iret
rcrb
and
cmp
insb
sub
sbb
push
nop
pop
or
mov
adc
mov
sub
shlb
outsb
shlb
push
aas
mov
mulb
push
int3
cmpsb
fxch
push
dec
int3
sub
dec
lret
jecxz
push
xchg
mov
sbb
out
sahf
rcr
mov
pop
fwait
out
subb
adc
pop
insb
loop
mov
or
inc
pop
enter
shlb
jns
cmp
fnsave
out
add
cli
pop
pop
xor
test
pop
dec
or
scas
or
shlb
pop
ror
adc
sarl
pop
icebp
addb
mov
data16
sbb
mov
int
xlat
in
lret
aaa
lds
rolb
pop
push
decb
mov
sub
loopne
pop
rorb
sbb
pop
cli
fcompp
push
sub
rcrb
repz
imul
fnsave
cs
imul
adc
and
sbb
aad
pop
std
nop
or
mov
nop
stos
sub
jl
dec
mov
cmp
pop
lods
repnz
lea
in
cmp
aas
mov
ljmp
fst
inc
dec
or
cmp
test
hlt
pop
sbb
mov
das
cld
dec
jnp
leave
jno
mov
mov
pop
test
cmc
std
ret
cwtl
sub
test
mov
pop
js
cld
pusha
sbb
lret
or
fimull
movsb
cmpb
insb
lock
in
or
sub
aam
xor
lds
shrb
in
dec
mov
xchg
xchg
adc
mov
clc
inc
jg
lea
mov
and
pushf
jb
pavgb
sub
cltd
lds
dec
mov
lods
push
push
push
das
sbb
pop
ret
dec
clc
lret
xchg
xlat
sarl
mov
jmp
shll
dec
push
mov
cltd
divb
iret
cmp
mov
sub
lahf
mov
addr16
test
pop
test
ret
lds
dec
cmp
addl
jbe
arpl
das
push
movsb
insl
sbb
sbb
lret
pop
mov
bound
imul
add
mov
pop
mov
mov
push
mov
mov
lds
push
add
jecxz
in
fists
out
xchg
andl
orl
test
jns
add
xchg
mov
push
test
and
pop
repnz
mov
jl
and
in
stc
test
iret
xlat
sub
test
push
pop
jae
test
adc
push
call
xchg
mov
sub
dec
xchg
xor
sbb
mov
imul
ss
int3
mov
mov
ja
cmpsb
mov
add
insb
leave
clc
or
iret
arpl
mov
or
clc
and
or
rolb
test
cmp
pop
sbb
fisubrs
vcvttpd2dqy
fidivs
and
and
sarb
push
out
xorl
mov
loop
sbb
orb
inc
loope
imul
cmp
xchg
cmp
add
jne
pop
repz
lahf
jnp
insl
push
push
andb
fcoms
pop
inc
lea
cmpsb
push
jb,pt
adc
in
enter
pop
xor
ret
add
xchg
cmp
clc
scas
mov
jne
ljmp
orb
sbb
mov
xor
cwtl
mov
fldln2
js
mov
lcall
add
sub
dec
outsb
add
xchg
mov
jg
test
mov
mov
icebp
and
push
iret
mov
shrb
mov
add
and
and
mov
inc
shr
dec
mov
fldcw
sbb
sub
ffreep
dec
addb
outsl
inc
xlat
jl
stc
das
arpl
sarb
dec
ss
ret
sarb
cwtl
xor
xchg
cli
dec
mov
xor
dec
lcall
test
cmc
cltd
stc
jb
adc
adc
xor
cmp
add
or
lods
in
mov
mov
das
call
sub
xchg
cmp
das
xchg
xor
xchg
gs
xchg
movsb
dec
xchg
lock
xor
xlat
aad
lret
push
mov
sbb
sbb
pop
cltd
mov
adc
cmp
jne,pn
jmp
nop
xchg
jle,pn
and
cmp
nop
in
adc
jb
int3
int
xor
jb
dec
jg
or
scas
dec
ja
mov
sahf
call
xor
push
mov
inc
xorl
mov
inc
and
and
in
jno
das
fcmovne
sbb
pop
cld
mov
adc
xor
testb
cmpsl
std
imul
sarb
das
sub
cld
mov
lret
js
mov
mov
out
fwait
lock
jbe
pop
mov
insl
sub
movsb
aam
in
out
ret
push
imul
fdivrs
jl
lods
mov
xchg
push
sub
aam
les
adc
mov
mov
sbb
mov
aas
subb
dec
push
cltd
cld
aas
xchg
cmpsb
dec
push
sbb
fldl
sub
sub
jle
adc
xor
xlat
stos
dec
and
pusha
xchg
sub
xor
jnp
push
xor
and
and
dec
cwtl
mov
shrb
dec
jmp
jno
hlt
fistpl
dec
sub
inc
cmp
call
fwait
pop
stc
push
push
inc
inc
das
add
rcrl
out
mov
test
iret
sbb
in
sbb
xchg
inc
and
mov
rcl
mov
jbe
add
pop
mov
and
test
je
ss
int3
mov
or
adc
jge
xchg
mov
mov
jb
call
mov
sbbl
push
out
arpl
pusha
adc
push
les
stos
push
inc
ljmp
add
jnp
mov
inc
in
sahf
stos
pusha
mov
dec
or
mov
loop
inc
rol
pusha
jae
pop
ss
stos
cmp
popf
jo
scas
mov
stos
popf
lods
call
rcrl
outsb
ret
mov
push
pop
add
adc
aaa
mov
push
inc
pop
leave
outsl
fstp
hlt
imul
inc
xor
mov
gs
push
adc
movsb
or
cmc
add
add
call
inc
xor
push
jo
sbb
stc
je
scas
lret
and
mov
cmp
xchg
outsb
movsb
pop
mov
push
xor
xchg
dec
jge
std
lds
inc
mov
daa
add
cmp
in
jno
push
mov
dec
xor
push
in
xlat
xor
mov
cmp
push
sub
pop
push
popf
push
inc
sbb
outsl
cmpsb
cltd
sahf
and
stc
andps
stos
icebp
rcll
je
lret
jp
loope
jmp
in
fstps
lods
mov
movsl
popf
aas
push
and
push
adc
cwtl
iret
xor
fnstenv
inc
jl
jnp
jbe
lcall
pop
push
test
jg
pop
push
ds
sbb
inc
arpl
adc
push
mov
mov
ret
push
inc
sbb
mov
iret
push
rclb
push
es
sub
add
lret
mov
mov
xor
popa
sbbb
dec
xchg
and
loop
outsb
mov
out
out
pop
int3
mov
imul
pop
cmp
push
lret
loope
jb
jge
shlb
sbb
cmp
pusha
ret
or
into
mov
mov
xor
pop
add
imulb
inc
mov
add
data16
mov
mov
and
xor
or
push
mov
test
xchg
sti
and
sub
push
xor
loopne
fmul
dec
out
pop
inc
inc
mov
fld
ss
stc
dec
repz
sbb
push
stos
pop
imul
jp
fstps
loope,pn
mov
add
inc
aas
into
pusha
ret
dec
cmp
and
je
mov
jecxz
fmuls
mov
mov
xor
popa
mov
dec
inc
mov
inc
orl
add
pop
popa
lds
inc
test
addb
sub
mov
mov
jae
mov
pop
test
std
adc
out
mov
lret
push
icebp
push
add
mov
jne
out
lea
xor
pop
lock
adc
stos
movsl
rclb
or
aam
cld
daa
ret
jecxz
into
es
fidivrl
insl
in
gs
dec
test
push
xchg
xchg
dec
mov
popa
es
sbb
fwait
mov
and
sarb
setle
mov
push
mov
mov
jecxz
push
jb
lods
jno
clc
inc
push
test
pop
lods
loop
imul
stos
cmp
fmuls
jae
test
call
xor
jle
test
enter
sub
xchg
xchg
mov
push
mov
outsl
mov
ja
or
cmp
or
dec
outsl
fwait
mov
xchg
push
ljmp
add
push
out
xchg
loopne
bound
xor
and
push
xchg
nop
xchg
int3
jg
fidivl
mov
xor
shlb
int3
inc
jp
pop
enter
scas
mov
mov
inc
add
je
mov
and
fists
fidivrs
xchg
push
insl
sahf
andl
jnp
inc
ds
xchg
push
add
and
xor
pop
push
jo
jl
gs
cmc
mov
pusha
pop
call
and
into
and
mov
xor
insl
test
outsb
arpl
mov
sub
ja
fbstp
outsl
sbb
add
imul
lret
jmp
push
movsl
cwtl
jg
sub
mov
repnz
push
adc
mov
mov
xchg
movsl
inc
xor
orl
mov
aaa
shll
xchg
add
iret
push
int3
rcl
mov
jp
adc
mov
iret
push
rclb
scas
test
or
jg
in
adc
test
lods
jbe
lods
push
jge
sti
stos
sbb
cmp
add
ss
cmp
dec
lahf
mov
sub
adc
push
cld
shll
push
push
cmp
xor
loopne
sbb
movsl
push
fs
mov
call
loope
insb
fsubrs
into
insb
cmp
mov
insb
and
call
xchg
xorb
sbb
imul
ds
xchg
js
loope
pop
jmp
xchg
push
xchg
lcall
xor
pop
pop
adc
inc
imul
mov
mov
in
and
shlb
int
out
sub
or
rcrl
sbb
iret
sbb
jnp
in
add
pop
loop
xchg
addr16
popf
fdivr
fs
push
xchg
fbstp
mov
push
repz
loopne
test
mov
jl
enter
ja
call
into
lahf
push
inc
cmc
daa
iret
sbb
mov
pop
and
adc
int
imul
sub
out
int3
sub
lods
mov
scas
mov
and
mov
adc
pop
sti
shll
mov
gs
xor
es
dec
inc
xchg
frndint
or
loope
movsl
repz
xchg
sbb
mov
call
xchg
adc
mov
pushf
test
jae
inc
out
jle
enter
lcall
jb
push
mov
push
fsub
sub
lea
xchg
stos
xchg
movsb
mov
ret
xor
push
andl
sbb
pop
add
adc
das
ds
inc
and
mov
jmp
andb
sbb
sub
mov
mov
loop
pop
mov
cmpsl
add
push
mov
std
cld
loope
sbb
push
loopne
mov
cmc
popa
lock
and
gs
sub
add
dec
pop
rol
rcrb
fisubrs
insl
aam
mov
xchg
shl
xchg
ljmp
int3
lods
into
push
jl
pop
sub
fcompl
sub
add
std
shl
add
add
les
std
arpl
push
mov
sahf
adc
xchg
push
mov
rol
out
stc
pop
cmp
ret
shr
cld
pop
std
xchg
mov
adc
pushl
jle
enter
and
xor
xchg
mov
xor
test
lret
add
rolb
out
mov
and
ss
mov
int
add
or
shlb
sbb
jns
and
in
fadd
xchg
fbstp
lret
cmp
pop
in
ds
addr16
les
mov
shll
mov
ret
insl
mov
adc
jne
ret
test
mov
and
jbe
sub
or
out
sbb
or
push
inc
sarl
and
mov
insb
leave
push
in
sub
jle
mov
in
adc
pusha
hlt
into
push
hlt
fwait
lods
ret
popa
pop
sbb
inc
out
cmp
sar
mov
xor
or
stos
or
test
ficompl
fwait
xchg
ss
cmc
sbb
gs
scas
cmc
outsl
dec
push
in
xchg
xor
or
hlt
mov
cld
mov
leave
pop
push
leave
arpl
inc
fisttps
imul
fisttps
cs
loop
outsb
mov
int3
mov
outsl
rcr
mov
out
shrb
scas
mov
and
cmp
movsb
jo
mov
inc
fdivl
xor
pop
sbb
jg
cmp
inc
push
jl
lea
dec
push
mul
push
stos
lcall
into
ss
fdivr
in
push
iret
dec
pop
test
xor
dec
inc
cmp
cmpsb
lahf
mov
stos
enter
pop
bnd
push
add
loope
adc
cmp
js
ds
movsl
stos
addr16
sub
or
xchg
cmp
inc
sbb
in
scas
add
dec
pop
call
in
xchg
pop
push
in
push
in
dec
push
fsubl
sub
jno
pop
and
rcrb
mov
jb
jno
orb
fisttpl
and
adc
fmuls
int
mov
sub
subl
popa
loop
lret
scas
shll
xchg
sbb
jmp
sahf
pop
or
test
adcb
jb
nop
in
adc
push
bsr
mov
and
cmp
leave
scas
fsubp
and
jecxz
test
lahf
and
cmp
mov
or
adc
xorb
out
dec
and
and
pop
inc
dec
adc
shrl
jb
push
adc
cmpb
loopne
in
lods
mov
int3
and
loope
imul
scas
push
in
jle
sub
addb
lcall
loopne
test
cltd
inc
imul
xor
aad
in
and
xchg
adc
sbb
leave
jne
addr16
mov
cmc
adc
jge
pushf
das
push
fisubrl
cmpsl
insl
mov
nop
jne
mov
jb
repnz
dec
cltd
push
es
jbe
jecxz
mov
mov
icebp
xchg
call
jno
mov
cmpl
push
jecxz
inc
hlt
into
pop
cmpsl
mov
fiaddl
punpckhwd
js
jge
adc
add
not
jp
inc
not
gs
pop
in
cwtl
sbb
das
cmpsl
jl
mov
mov
sar
or
hlt
lret
mov
and
sbb
pop
call
sbb
sub
ljmp
imul
dec
sahf
adcl
sub
push
add
mov
adcl
das
nop
jo
or
stos
subps
add
add
test
clc
shll
ds
scas
repz
mov
scas
xchg
push
rcl
mov
pop
cmp
jmp
pop
fldt
push
or
push
call
pop
rdmsr
sbb
dec
or
mov
mov
flds
dec
and
and
mov
testl
stos
repnz
dec
adc
xor
fiadds
and
xor
dec
clc
jns
fimull
xchg
in
cmp
mov
sbb
sub
pop
cmpsl
inc
push
addr16
inc
xor
mov
stc
inc
mov
cmp
sub
jne
mov
xchg
push
iret
push
adc
insl
xchg
add
add
xor
and
push
or
jbe
sbbl
cmp
inc
jnp
fisttpl
jle
arpl
in
in
pusha
push
lret
hlt
in
pop
dec
mov
sub
push
hlt
or
popf
in
insb
mov
daa
aaa
int3
fimull
fiaddl
xchg
lea
mov
idivl
push
push
xor
inc
adc
stos
cmpl
aam
xlat
hlt
dec
pop
arpl
mov
or
in
out
push
lods
lods
or
inc
or
add
rorb
fsubrs
xchg
stc
add
rorb
scas
addr16
and
pop
mov
movsb
sti
daa
sti
push
and
pop
jbe
xor
jge
movsl
cmp
jbe
andb
fildl
cmp
movsl
jne
mov
rorl
lea
push
xor
xchg
jb
mull
inc
push
mov
and
inc
leave
outsb
mov
in
scas
sub
fwait
sbb
pop
xor
push
push
fdivr
loope
fisubs
cmp
sub
movsl
mov
or
push
push
adc
cltd
add
sbb
addb
les
mov
mov
pop
out
pop
lcall
inc
fmull
iret
shrl
adc
outsb
xchg
push
out
adc
stc
es
mov
xor
mov
add
and
xchg
out
push
fistl
xchg
sub
inc
mov
rorl
mov
rcrb
sti
inc
cltd
xorb
daa
loop
jnp
stc
or
popf
fs
jmp
ss
cmp
test
add
fimuls
sar
push
inc
push
xor
push
cmp
pop
jbe
mov
mov
xor
mov
adc
inc
mov
push
mul
add
mov
xor
and
lret
mov
jmp
es
mov
rcl
loopne
add
jecxz
inc
jle
adc
push
rol
mov
repz
cltd
xchg
xchg
aad
cmpsl
sbb
add
lret
out
clc
pop
gs
mov
pushf
fimull
cmp
outsb
sbb
cs
xchg
aad
dec
stc
nop
push
movsb
jo
stos
mov
jb
adc
je
and
inc
or
mov
hlt
dec
call
xor
mov
movsb
outsl
adc
pop
push
fldt
mov
dec
cmpsb
and
stc
mov
pop
push
adc
push
cmc
out
test
mov
pop
add
sub
leave
sbb
notb
push
inc
cwtl
rorl
sub
adcl
cld
aaa
jmp
lret
xor
push
mov
aas
mov
lea
lock
cmp
rorb
loope
sub
in
jecxz
aad
nop
inc
inc
es
jl
mov
lcall
mov
mov
lods
movsb
jns
mov
cmpsb
mov
andl
mov
cmp
mov
xor
frstor
movsl
fdivrp
repnz
rolb
mov
shrl
mov
in
inc
stos
or
out
ret
xchg
dec
cmp
push
out
cmp
outsb
adc
push
mov
xor
sub
mov
fadd
jns
xchg
test
or
dec
testl
or
or
push
shll
cld
add
aas
adc
mov
jns
into
int3
in
in
enter
cmpsb
mov
insl
mov
iret
fists
addr16
inc
jp
xor
mov
inc
jge
loop
xor
xlat
or
mov
data16
out
mov
xchg
mov
pusha
into
xchg
mov
sub
movsb
stc
mov
cld
sbb
js
push
shr
stos
sbb
mov
insb
lahf
imul
mov
pop
jle
or
in
sbb
pusha
sub
inc
iret
mov
ffreep
pop
xchg
xlat
pop
xchg
inc
std
mov
push
push
mov
pop
popf
or
enter
push
inc
cmpsb
in
fidivrl
sbb
xor
scas
scas
mov
mov
adc
fs
mov
orl
out
arpl
stos
movsl
inc
cmp
jmp
push
adc
or
cmp
int3
xchg
repz
pop
pop
test
ficomps
mov
scas
inc
jg
and
sarl
mov
movsb
xchg
pop
jbe
movsb
int3
jge
dec
sbb
ds
mov
lret
jno
int
jl
leave
cmp
mov
push
jo
lea
and
lahf
push
dec
in
push
jne
jmp
push
leave
inc
dec
inc
pop
in
int
movsl
test
in
xchg
sti
test
jo
imulb
pop
jns
jbe
pop
sub
cli
daa
cmp
mov
mov
mov
lods
decl
sbb
add
adc
xor
ret
ss
mov
pop
data16
push
lcall
sub
aaa
insl
outsb
hlt
mov
test
aam
cltd
jg
aaa
ds
jnp
mov
or
mov
repnz
pop
sub
ficoms
mov
push
xor
fbld
cmp
jo
inc
shl
orl
push
movl
sahf
xchg
imul
ret
mov
adc
add
fdivrs
in
out
shrl
xor
cmp
pop
aas
or
fidivs
into
dec
xchg
push
xor
sbb
adc
jecxz
adc
rcl
pushf
outsl
push
data16
jge
outsl
mov
mov
pop
inc
hlt
sub
gs
mov
push
out
sti
loopne
mov
loopne
jb
fstpt
dec
dec
bound
pushf
inc
xchg
sahf
movsb
fldenv
sahf
leave
repz
aam
xchg
cwtl
jl
sbb
aas
nop
push
gs
pop
sbb
mov
and
cs
inc
cmp
popf
cmp
lods
aas
dec
sti
cmp
cmpsl
dec
xchg
jmp
cmp
mov
jae
mov
push
call
out
ds
mov
lea
test
sahf
lock
inc
les
jae
push
das
mov
cmp
cmpsb
and
jb
rcrl
add
std
lods
cmp
cmpsl
std
ds
mov
lds
cld
bound
lret
mov
xacquire
into
and
pop
es
jl
ds
aam
jg
ret
pop
data16
es
insl
insl
mov
sbb
inc
inc
xchg
popl
stc
ljmp
lods
psllw
mov
cmp
js
nop
jecxz
mov
cltd
cltd
movups
mov
jle
push
jmp
jle
clc
sub
loop
sbb
movsb
pop
pop
nop
inc
lods
stos
stc
insl
cmc
out
and
lret
ret
call
outsl
in
shll
test
xor
cmc
xor
fistpll
fildll
aas
test
dec
ljmp
or
pushf
ret
cmpsl
test
jbe
aas
add
pop
jae
out
or
xchg
test
fwait
dec
in
hlt
mov
mov
xor
xchg
pop
sbb
fdivrl
push
enter
inc
mov
pop
popa
dec
mov
pop
push
mov
push
or
shl
pop
iret
hlt
xchg
addl
daa
rcll
jecxz
aas
or
mov
stos
nop
ret
sub
push
fdivrs
cmp
jmp
in
mov
pusha
iret
adc
addr16
sbb
inc
or
jae
dec
and
jp
cmpsb
popf
xor
pop
inc
and
test
pop
sbb
mov
imul
push
scas
push
mov
push
rcr
adc
push
pop
repnz
popa
sbb
ret
hlt
loop
daa
arpl
in
inc
inc
call
repnz
iret
mov
or
pop
lods
add
xor
int3
jg
and
push
fidivrs
into
and
pop
in
int3
rolb
repz
clc
pop
movsb
adc
adc
mov
sbb
adc
cmp
das
jno
inc
bound
rorl
cmp
jno
mov
fnstenv
pop
fcomps
dec
jmp
test
xchg
into
sbb
cmpsb
sub
in
jl
xchg
enter
pop
scas
dec
push
push
fwait
sbb
loopne
sub
pop
cmp
idivb
pop
pop
dec
movsl
rclb
cmpb
or
imul
xor
xor
dec
push
mov
js
xor
in
add
adc
jl
sub
icebp
adc
fstl
scas
xor
jg
addr16
jns
mov
mov
adc
loope
int
aad
sub
xchg
lret
add
js
inc
mov
into
sbb
ficompl
or
mov
jge
sub
dec
xor
stc
jns
jnp
adc
inc
adc
sbb
ss
jl
lret
fdivr
pop
nop
out
pop
xchg
cli
jl
cmp
and
jmp
or
mov
inc
sub
xor
pop
popf
shrd
sbb
imul
mov
sub
clc
lods
push
imul
sub
scas
mov
mov
cmp
add
popf
gs
fucom
xchg
jae
dec
rorl
movsb
sbb
jle
les
push
push
sbb
jp
cs
in
outsb
pop
lret
int
adc
add
pushf
xor
ret
hlt
xor
shlb
jno
push
mov
xor
in
pop
dec
in
je
xchg
shl
fs
mov
mov
call
scas
lds
cmp
insl
xor
int
aad
nop
push
jb
dec
inc
lock
mov
das
adc
jg
mov
push
clc
dec
shll
imul
loopew
push
cmp
cmpsl
cld
gs
jmp
push
jnp
lea
mov
mov
mov
lock
pop
inc
je
shlb
jbe
aam
xor
es
dec
popl
ljmp
das
lods
jp
pop
mov
in
fs
inc
rcrb
fldl2t
das
vmwrite
xlat
cltd
inc
lea
mov
punpckhdq
dec
jne
jo
stos
clc
push
sbb
rcrl
fstps
scas
stos
call
add
mov
add
pushl
push
and
cld
mov
mov
loop
mov
test
cwtl
jl
sub
dec
mov
or
add
fwait
jns
lahf
push
sbb
add
jne
lcall
and
push
or
in
dec
xchg
xchg
sbb
mov
jno
mov
fcom
es
int3
dec
jp
adc
cmp
lahf
mov
cmp
popf
xchg
daa
out
mov
dec
dec
fildll
mov
jmp
dec
mov
xorl
out
cld
mov
lret
or
add
sbb
and
ds
jne
mov
out
cmpsb
jle
das
mov
pusha
pusha
xor
iret
jo
and
sub
and
dec
jae
out
sbb
cmp
push
dec
mov
movsb
je
fisubl
loope
xchg
fistps
inc
mov
les
pop
push
or
adc
mov
dec
add
hlt
sub
arpl
or
push
cmp
aaa
mov
or
jo
add
movsb
or
push
or
gs
lds
lahf
scas
add
pop
and
xchg
out
movsb
pushf
mov
shll
loop
jge
push
xchg
sbb
or
jno
jecxz
jl
push
or
xchg
mov
lcall
scas
out
push
sbb
cmp
pop
stos
push
jbe
andb
dec
mov
pop
out
inc
and
mov
loope
pop
xchg
xchg
dec
cmp
ficoml
movsl
addr16
and
or
adc
aam
loop
adc
xor
xor
mov
or
outsl
ret
js
fstpl
xchg
mov
pop
push
dec
jns
fcoml
xchg
mov
outsb
mov
pop
lcall
fwait
add
mov
add
adc
add
mov
stc
sub
push
negl
cmp
rorl
mov
cwtl
sbb
jb
test
dec
or
pop
enter
pop
xor
xor
fs
sti
dec
adc
pop
ss
cmp
mov
push
out
loope
cli
scas
jne
xor
fildll
or
xchg
cld
into
push
jle
cmc
or
cmp
mov
outsl
pop
mov
in
push
imul
cmp
data16
and
cs
or
xlat
push
sub
xchg
in
sub
sti
ds
gs
xor
dec
and
imulb
les
push
push
xchg
push
push
test
cmp
adc
adc
iret
hlt
pushf
fucomi
lcall
out
scas
aad
push
fcoms
mov
pop
jb
cmpsl
ljmp
out
sub
jae
mov
les
lea
mov
rol
mov
pusha
pop
adcl
cld
cmc
pop
xor
lods
inc
sarb
inc
test
mov
xchg
mov
loop
mov
neg
cli
lods
std
cli
pop
jnp
add
jle
sti
adc
sbb
sbb
adc
in
mov
push
add
lock
mov
rolb
mov
ret
cmp
std
aaa
insl
push
dec
or
push
seta
and
arpl
mov
dec
pop
mov
fcomps
add
testb
lods
imul
lea
clc
mov
aad
sbb
daa
push
pop
out
cli
stos
xlat
mov
out
jmp
in
sbb
mov
decl
xchg
xor
adc
jae
lock
test
mov
in
out
dec
mov
mov
or
push
inc
pop
or
fwait
test
push
push
mov
jbe
add
push
push
bound
in
jns
and
in
std
sti
xchg
push
jp
iret
and
pop
xchg
sub
addr16
pop
mov
mov
add
mov
cmp
jno
jne
sub
mov
pop
lret
filds
jmp
pop
sub
out
lods
aad
mov
cmp
imul
inc
stos
jbe
add
xchg
add
jnp
mov
in
adc
sti
jnp
iret
iret
stos
add
inc
scas
pop
sub
or
mov
push
add
jno
subl
inc
and
push
xchg
jmp
into
pop
imul
sbb
pop
inc
adc
sahf
mov
fdivrs
mov
cs
js
add
and
mov
push
dec
stos
or
cmp
test
push
test
xchg
cmp
fiadds
outsl
shlb
push
and
gs
cmp
iret
jg
daa
imul
mov
jge
cmpsl
mov
bound
daa
sti
ja
cmp
mov
xchg
xchg
popa
push
sbb
cld
xor
xor
lahf
jae
sub
scas
bound
sub
filds
add
cmpsb
bnd
dec
in
xchg
pop
pop
sub
jg,pn
mov
fwait
xchg
mov
out
movsl
into
mov
ret
popl
cmp
and
sbb
jnp
add
ret
lock
pusha
rcr
negb
xorb
lret
nop
pop
jecxz
into
lcall
fdivrl
pop
mov
adc
gs
into
jg
sarb
adc
xchg
dec
cltd
push
out
add
out
and
sbb
mov
dec
in
shll
mov
shrb
sahf
lea
test
push
pop
sbbb
in
outsl
mov
adc
cmp
ss
push
cmp
jo
pop
out
das
imul
inc
cltd
xor
test
in
jne
adc
icebp
popa
xor
scas
jmp
jmp
sti
lock
idivb
inc
xchg
sbb
add
lock
popl
and
ja
out
sbb
xchg
xor
pop
mov
xchg
data16
in
pop
enter
mov
loopne
or
jg
mov
flds
test
repz
and
xchg
loope
std
sbb
lock
repnz
xor
dec
adc
loop
jmp
loopne
cs
xor
aad
jne
nop
mov
pop
xlat
jb
xchg
ja
in
jl
je
mov
std
mov
mov
call
sub
ret
mov
pop
aam
sub
sbb
mov
sub
xchg
pop
jp
cli
data16
shll
mov
xor
decl
roll
add
std
mov
stos
or
dec
inc
adc
cld
jecxz
cmp
lock
rorb
insb
sub
pop
and
rclb
pushf
sub
mov
aam
xchg
rol
pop
mull
lock
jno
ds
enter
dec
ljmp
inc
lods
push
dec
jl
jns
dec
mov
push
inc
mov
wbinvd
mov
aaa
sbb
pop
cltd
mov
arpl
cld
das
push
xor
fnstsw
mov
jbe
ds
lret
pop
xchg
sarb
dec
nop
inc
xchg
fs
push
push
jbe
out
jnp
mov
cmc
stc
xor
dec
mov
call
es
ja
pop
mov
inc
bnd
or
dec
xchg
fwait
xlat
jb
push
pop
dec
cwtl
add
stos
or
out
stos
stc
dec
bound
in
jmp
adc
mov
dec
adc
addr16
push
aam
cmp
js
mov
mov
mov
test
xchg
in
lea
jmp
loop
cld
adcl
popf
sub
fs
push
mov
out
and
adc
outsb
jle
and
lcall
out
hlt
ret
pop
pop
bound
sub
jg
stos
std
push
push
ret
and
test
outsl
mov
mov
es
xchg
inc
inc
movsl
sbb
sub
scas
inc
mov
xchg
stos
loop
sub
mov
out
loope
leave
daa
imul
or
inc
dec
mov
add
in
aaa
or
or
loopne
inc
add
cmc
test
inc
pop
adc
dec
sbb
lds
mov
and
mov
movsb
mov
push
push
lods
aaa
jns
inc
icebp
jb
jne
sbb
push
xchg
jno
mov
jl
xor
dec
test
jnp
cld
add
lea
ja
rcrl
sahf
or
push
cmc
pusha
sub
cmpsb
mov
xchg
in
xor
jp
orb
insb
ret
stos
push
test
xchg
cmp
push
les
sbb
pop
cmp
incb
push
xchg
loop
mov
xchg
leave
mov
js
dec
aas
pop
bound
push
lcall
pop
fsubl
shrl
mov
jmp
adc
inc
pop
pusha
jg
push
dec
mov
pushf
leave
mov
mov
push
ljmp
sub
in
or
fcmovnbe
lcall
bound
sbb
ljmp
sahf
mov
cmpb
mov
loop
dec
cli
stc
sahf
mov
fs
leave
adc
jbe
ss
xchg
cmp
sub
out
add
cli
adc
xchg
or
or
push
loope
aam
xor
cwtl
mov
xor
pop
cli
imull
xor
cmp
sbb
add
push
sub
insb
jo
or
leave
mov
movsb
push
xlat
pop
mov
pop
mov
add
adc
pushf
adc
insb
sti
fsubl
ds
arpl
fimull
adc
inc
ffree
lods
fnstcw
loop
cmpb
adc
movsb
divl
cmp
jmp
sub
adc
pop
inc
adc
iret
sahf
pushf
xor
lock
addr16
aad
cli
sub
aad
jb
mov
and
inc
jecxz
test
lret
lea
or
mov
jno
mov
bound
dec
ss
fistpl
push
pop
jns
xor
and
fbld
das
mov
dec
mov
in
lahf
andl
cmp
push
cmp
mulb
std
dec
xchg
and
stc
repnz
mov
mov
outsb
mov
pop
mov
sub
push
jle
cmp
pop
mov
lret
sbb
and
fiaddl
ret
pop
nop
pop
es
ja
and
mov
push
ljmp
enter
ret
jno
mov
pop
xchg
in
mov
xchg
loop
add
lea
jmp
cmc
test
push
inc
mov
pop
ds
cmc
insb
out
fucom
lret
sbb
sub
icebp
and
pop
cmp
sub
mov
mov
push
cs
in
lea
xor
and
xor
mov
jmp
jb
mov
fidivl
cmp
dec
mov
sbb
mov
mov
sub
fwait
push
xchg
enter
das
add
mov
test
pop
fstpt
ss
jp
aas
xchg
or
mov
ficomps
mov
or
dec
jp
mov
mov
fdivl
mov
pop
js
inc
and
jne
fisubrl
fisttps
in
jmp
lods
pop
pop
sbbl
dec
out
addr16
sub
pop
inc
scas
push
sti
cmp
stos
pop
add
jmp
mov
and
stc
pop
jle
mov
in
jmp
dec
addr16
lea
ret
fstpl
insl
pop
inc
xor
dec
jae
imul
outsb
popf
iret
enter
cmp
and
fidivrl
les
pop
dec
imul
and
bound
mov
inc
pop
dec
leave
sahf
cld
mov
arpl
jbe
inc
dec
enter
or
outsl
aaa
lret
in
sub
shl
jg
aam
int3
sub
pop
repnz
and
shr
ss
mov
and
movsb
cmp
dec
jbe,pt
cmpsb
dec
jge
add
stc
fst
cmp
adc
xchg
popf
jl
pop
daa
dec
pop
incl
xor
call
pop
les
inc
movsb
test
sarb
inc
and
cmpsb
xor
xchg
in
sbb
jge
cmpsb
pop
stos
dec
dec
push
xchg
stos
loope
xchg
dec
sub
sub
ds
mov
and
je
pop
movb
mov
xchg
add
xor
sub
push
pop
loope
xor
push
dec
adc
push
sub
sbb
adc
sbb
jg
dec
push
mov
out
mov
aam
ror
and
pop
data16
add
negl
jne
rcl
or
push
lea
sahf
roll
and
mov
fsub
xchg
adc
inc
add
notl
inc
fsub
or
out
push
fdivr
dec
stc
mov
cmp
cli
ret
or
push
into
mov
cmc
pop
lds
lahf
mov
imul
xor
mov
addr16
data16
nop
lods
repnz
xlat
lcall
mov
imul
sti
dec
nop
pop
decb
sbb
dec
cmp
adc
les
or
pop
xchg
addr16
inc
sbb
lock
loopne
add
adc
inc
pushf
faddl
jmp
fcoml
pop
xchg
sbb
add
notb
gs
cmpsl
jb
adc
fisubl
insl
jecxz
xchg
in
int
fimull
orl
stos
or
mov
jno
sbbl
push
fisttpl
and
inc
addr16
inc
cli
in
das
xchg
scas
add
mov
push
fcmovnbe
mov
insb
scas
std
out
and
cmpsl
clc
sub
icebp
xchg
jecxz
cld
cmp
lret
into
xor
mov
mov
lock
lds
pop
shll
std
cltd
sub
xchg
ret
ljmp
insl
or
sbb
xchg
lret
ljmp
in
es
mov
js
mull
inc
js
pmaddwd
arpl
sbb
insl
mov
cli
push
mov
sbb
push
out
xchg
and
sarl
jnp
out
outsl
stos
movsb
fcmovbe
out
adc
jg
repnz
call
ljmp
or
pusha
pop
jae
fsubr
or
iret
xchg
mov
out
push
into
test
cmpsb
dec
ja
repnz
dec
test
lret
in
or
loop
fwait
xor
adc
mov
add
jg
out
push
sub
aaa
inc
in
add
push
or
cwtl
ljmp
les
jp
pop
inc
mov
jns
in
imul
inc
dec
int
int3
or
test
jno
xchg
outsl
mov
xchg
js
dec
subl
ljmp
cmp
stos
iret
xlat
ja
fisttpl
and
jle
jmp
in
lea
int3
sarl
ret
pop
shlb
mov
jae
sbb
clc
popf
test
mov
mov
std
mov
out
scas
dec
sbb
arpl
imul
int
and
xchg
adc
adc
mov
xchg
nop
mov
adc
or
arpl
add
inc
dec
bound
imul
inc
fidivrs
mov
out
or
fsubr
add
xlat
mov
pop
and
test
stos
cmpl
pop
dec
pop
scas
addb
dec
cmp
pusha
mov
push
dec
test
jbe
iret
adc
ret
add
sbb
jmp
dec
pop
xchg
jno
mov
cmpsl
dec
xchg
push
ret
xor
inc
xor
lahf
shlb
sbb
push
mov
inc
mov
insl
cmpsb
mov
lods
in
call
pop
ljmp
loope
pop
aas
sub
scas
sbb
scas
jge
ds
mov
xchg
rolb
push
es
sbb
sub
pop
and
sbb
mov
or
sbb
jge
jnp
movsb
out
fdivrl
hlt
outsb
inc
cmp
divb
jg
xchg
mov
xchg
xor
or
test
dec
lcall
and
lods
sub
scas
aam
pop
inc
ror
and
mov
mov
sub
sbb
push
sahf
jbe
dec
test
xchg
outsl
fcomps
loop
or
stc
or
frstor
insb
adc
xchg
ss
mov
or
gs
xlat
xor
cli
jnp
mov
cmp
das
or
es
lcall
xor
clc
dec
pop
cmp
rcll
jl
cwtl
imul
pop
addb
loopne
data16
adc
fldcw
dec
mov
mov
xlat
xor
data16
inc
in
pop
ret
sti
cli
iret
ret
mov
gs
jmp
inc
add
dec
les
repz
cmp
sub
sbb
mov
movsb
mov
adc
mov
jmp
jg
cs
xor
dec
push
sbb
add
xchg
jb
pushf
or
lods
nop
je
test
jecxz
les
sar
or
fsubrs
mov
test
or
test
mov
mov
ret
js
das
jo
bound
pop
repz
andb
ljmp
cwtl
lock
cmpsl
mul
jge
call
and
cld
outsb
pusha
lret
cmp
adc
mov
insl
out
lock
pop
loopne
xchg
rcl
stc
push
sub
in
aam
pushf
test
jns
pusha
es
lods
insl
repz
out
dec
jbe
adcb
push
popa
or
or
mov
and
loopne
jl
push
jns
add
repz
cltd
pop
xchg
movsb
test
imul
push
jnp
rcr
xor
clc
fidivrl
sbb
cmp
iret
faddl
xchg
mov
stos
xchg
outsl
ds
ja
mov
push
in
adc
lret
aam
xor
popa
hlt
xor
xchg
xchg
mov
icebp
sbb
cmp
add
fsts
mov
orl
and
dec
gs
add
push
in
out
inc
testl
in
incl
xchg
cmpsb
sbb
mov
push
mov
jg
mov
push
mov
jp
pop
stc
mov
inc
stos
mov
stc
cmc
dec
dec
or
dec
jne
sbb
mov
insb
or
fisttps
gs
xchg
inc
fistpll
cmpl
into
sub
push
ret
pop
push
jns
shrb
repnz
insb
mov
xchg
jnp
jns
jle
cmp
in
jle
pusha
outsb
adc
dec
int
ret
sub
jl
inc
dec
fwait
mov
push
or
sbb
mov
pop
sub
mov
sbb
imul
scas
jo
adcb
mov
mov
ds
out
sti
leave
mov
inc
hlt
movsb
ficoms
aaa
add
jo
or
mov
and
mov
std
stc
int3
add
mov
adc
dec
lds
add
shlb
mov
and
mov
mov
lahf
movsb
push
xchg
lods
push
lcall
jge
ljmp
notl
cmp
jl
xor
dec
cmc
ja
push
movsl
sub
xchg
jo
xchg
sti
lahf
out
jmp
test
lret
out
inc
inc
sar
cmpsb
cmp
enter
pop
sub
cld
push
ret
push
loope
inc
out
sub
or
ds
jno
and
and
popl
in
sbb
stos
mov
sub
pop
inc
mov
js
dec
or
fbld
mov
push
sti
fildl
sub
dec
fcoms
sarl
fidivs
or
mov
push
aad
pop
cmp
aaa
int
jno
sub
sbb
xchg
roll
xchg
mov
mov
lds
xor
xchg
orb
test
mov
stos
jae
push
jecxz
into
cmp
ss
out
cmp
pop
push
ret
out
pop
cli
scas
jg
xor
cmp
and
mov
into
jge
leave
cmc
in
push
xor
ljmp
and
and
loopne
test
mov
data16
lods
shlb
mov
fsubrp
xlat
sbb
pop
mov
inc
test
sti
test
subb
xor
jmp
sti
cmc
ds
push
inc
pop
fldenv
out
les
push
repz
jbe
in
push
lcall
and
ficoms
out
icebp
ficomps
xor
adc
out
popa
cs
or
mov
add
mov
pop
orl
test
xor
rol
xchg
lea
std
lods
mov
ret
mov
jae
mov
pusha
dec
divl
add
inc
jne
jbe
xor
sub
dec
or
mov
adc
stc
and
std
inc
roll
cmp
std
cmp
mov
sbb
add
inc
test
cld
lods
repnz
lods
jo
mov
mov
lock
xchg
push
pop
out
pusha
shlb
in
aam
inc
mov
or
cmp
ficompl
dec
jno
cmp
cmp
lahf
lods
cld
cmpsb
mov
mov
fdivr
mov
mov
cli
add
hlt
imul
icebp
sbb
mov
inc
clc
lret
xchg
cmp
sbb
or
shll
in
pop
cmp
enter
adc
or
dec
cmp
sahf
xor
push
les
or
ja
xor
cmpsb
arpl
hlt
ds
dec
mov
and
dec
dec
mov
mov
fwait
xchg
stos
add
pop
inc
cli
out
es
das
jns
and
in
push
xchg
xchg
cmc
imul
mov
cmp
mov
push
inc
mov
mov
mov
push
dec
insb
jne
push
jg
and
imul
sbb
call
sbb
sub
push
fisttps
push
mov
cwtl
sbb
or
adc
pop
jnp
fildll
out
cmpsb
in
rcl
pusha
add
dec
ret
push
pop
jns,pt
inc
push
js
jae
dec
aas
push
iret
cmc
setge
mov
sahf
fistpl
xchg
pushf
stos
push
sbb
ljmp
roll
push
mov
fistl
xchg
xor
repnz
leave
add
mov
inc
in
addb
mov
aaa
daa
insb
aaa
or
cmp
add
int3
in
pop
sbb
sub
fidivs
loop
sarb
dec
and
inc
idivb
insl
mov
notb
sub
jge
mov
sbb
or
daa
notb
mov
dec
jno
test
and
pop
js
mov
xor
stc
adc
push
or
test
inc
shlb
cmpsb
mov
xchg
fcmove
outsb
aad
pop
push
jmp
loope
push
lret
ss
cmp
jmp
pop
and
xchg
sub
inc
sub
sub
leave
add
je
xor
jne
lahf
adc
pop
outsb
ds
js
push
addl
xor
lcall
mov
sub
lds
pop
adc
jns
lods
pop
sub
and
mov
std
fisttps
mov
and
push
negb
sub
shll
xlat
mov
lret
fsubs
sbb
stos
jb
mov
loope
outsl
xchg
ret
mul
dec
cltd
js
jp
sbb
mov
sbb
les
fcoms
fistpl
aad
sbb
xor
push
jg
mov
and
mov
lret
jecxz
pop
jbe
test
imul
ficomps
adc
mov
lods
cmpsl
sbb
mov
les
push
imul
xchg
xchg
sti
pop
fwait
mov
clc
aas
mulb
add
iret
pop
jge
pop
dec
push
inc
sub
stos
fstps
call
repz
inc
notl
fadds
cmp
sbb
pop
add
add
dec
xorl
test
loope
aad
and
add
cmp
dec
jmp
je
std
jle
int
movsb
in
sbb
icebp
mov
in
mov
sbb
loop
enter
lahf
pop
add
sbb
dec
ficoml
mov
enter
and
arpl
nop
mov
divb
or
cwtl
data16
cmpsl
cmc
out
mov
sbb
cld
mov
xor
adc
cmpsb
push
in
pop
push
mov
xor
testb
ret
xchg
cli
icebp
es
pop
insl
roll
insb
insl
sub
stos
mov
sbb
addr16
mov
loope
adc
mov
adc
ret
sub
cltd
loop
test
je
push
add
clc
add
push
jle
mov
syscall
pop
call
in
out
cmp
dec
pusha
push
lcall
xor
movsb
or
btc
not
and
mov
sub
xor
dec
adcb
in
add
cmp
shl
mov
out
add
xor
add
mov
ret
in
clc
aad
inc
decl
popa
mov
cmc
push
aam
push
je
jp
cld
dec
mov
inc
dec
mov
xlat
pushf
es
shl
das
jne
in
jno
filds
dec
imul
adc
xchg
fnstenv
and
aas
dec
add
sbb
rorl
dec
fcoml
rep
stos
sub
bound
push
jle
mov
jae
popf
fbld
ret
mulps
xor
mov
lret
xchg
mov
popf
imul
mov
sbb
pop
and
xor
dec
roll
scas
or
adc
and
lea
leave
jp
cs
cmp
repnz
pop
call
test
mov
add
mov
int3
xlat
add
pop
scas
or
ficoms
ja
aas
sub
rcrb
scas
sbb
or
cmp
sahf
movsb
imul
sub
jge
arpl
daa
cmc
call
sbb
sub
add
xor
push
mov
ret
push
loopne
sub
in
in
inc
pop
push
pop
cmpsb
inc
rorl
addr16
pop
cmpsl
test
push
pop
loope
mov
popf
aaa
je
mov
pop
sbb
and
popl
sbb
push
div
sbb
adc
ret
cli
out
lret
bound
xchg
test
out
ficomps
test
lods
ljmp
push
out
imul
xchg
test
add
test
in
and
push
stc
out
test
jo
sub
cwtl
notl
add
shll
test
and
pop
pop
test
clc
cmpb
loopw
cs
stc
xor
adc
add
cmp
shl
pop
out
xlat
je
adc
mov
fcompl
cmp
push
or
and
inc
mov
xorb
ja
pop
xchg
and
adc
outsb
mov
arpl
pushf
mov
orw
jns,pt
xchg
lahf
xor
loop
frstor
pop
shll
pop
daa
lret
repz
sbb
loopne
test
dec
mov
dec
daa
fsts
adcl
xchg
jae
sbbl
movsl
ret
sti
rcrl
sti
fsts
lahf
inc
jp
mov
push
les
lret
ret
xor
nop
fidivrs
loop
loope
lret
jb
jbe
dec
mov
pushf
je
movsl
scas
jecxz
in
dec
fldcw
shr
outsl
add
mov
mov
cwtl
mov
xorl
and
xor
adcl
inc
test
or
in
mov
scas
hlt
mov
divb
push
jne
and
cmpsl
hlt
sub
add
icebp
mov
cld
in
dec
mov
cld
mov
repz
lock
aas
rorb
mov
in
aad
aam
cwtl
mov
es
add
insl
test
jmp
xchg
movb
ljmp
out
lods
shlb
mov
add
in
and
mov
cli
stc
roll
xchg
mov
test
xor
push
les
das
push
xchg
mov
rcl
pop
loopne
xchg
sbb
out
mov
pop
into
push
jne
jo
test
jne
lods
clc
cmpsb
or
dec
mov
cli
in
dec
lea
mov
ja
stc
dec
dec
jne
xor
or
add
fwait
icebp
mov
push
xor
lret
pop
pop
out
in
lcall
mov
jbe
xchg
fadds
mov
mov
loope
push
pushf
xor
pop
inc
mov
notl
mov
imul
in
or
and
xchg
xchg
fisubs
hlt
xchg
movsb
lcall
ret
sub
inc
roll
stos
fwait
sub
and
out
bound
xor
imulb
in
test
cmp
push
mov
inc
imul
jae
mov
push
push
xchg
sbb
outsl
loop
inc
pushf
enter
sbb
xchg
dec
cmp
sbb
sarl
movsl
lcall
shll
adc
mov
loopne
and
icebp
jns
hlt
test
arpl
inc
pop
push
and
pop
jae
push
xchg
or
dec
data16
ret
pop
fnsave
cmp
shr
shlb
scas
cld
pop
lds
xor
jecxz
fldt
movsb
hlt
push
rcll
mov
jne
pop
testb
mov
cmp
add
jno
fabs
jl
cmpsl
repz
inc
imul
mov
js
scas
inc
popf
lahf
dec
xlat
and
test
mov
cmp
cmpsb
ret
jns
in
fwait
and
fs
imul
pop
push
cwtl
loope
loopne
sub
or
adc
xchg
leave
dec
movsl
jmp
sbb
pushl
icebp
subb
sbb
aam
xor
in
and
mov
jle
pop
pop
jecxz
lcall
int
push
pusha
mov
adc
shrb
push
data16
cmp
fwait
and
mov
int
lds
sub
and
notl
iret
lret
stc
rol
sahf
mov
jp
sahf
add
outsl
test
jecxz
sbb
lret
outsl
push
aaa
loop
clc
cs
call
out
and
mov
jge
cmp
lea
push
cli
inc
fidivs
mov
pusha
cmp
dec
repz
dec
into
es
sub
inc
rcrl
xor
mov
xor
adc
jecxz
imul
scas
or
xor
outsb
data16
call
mov
dec
imul
push
sahf
adc
orb
ds
add
mov
fld
mov
dec
repz
mov
es
cmp
jbe
pop
push
imul
mov
cs
mov
aad
dec
int3
nop
mov
adc
dec
dec
sub
mov
arpl
sbb
ljmp
mov
inc
xchg
dec
mov
into
sub
cwtl
faddl
insb
xchg
mov
das
in
ss
mov
ss
scas
and
outsb
stc
shrl
mov
std
xor
cwtl
fadd
js
repz
mov
icebp
enter
adc
lret
stc
or
mov
pop
mov
cmp
lea
pop
bound
sbb
xor
in
pop
aam
aas
cltd
ret
mov
nop
es
cli
insl
mov
dec
bound
push
ljmp
test
stc
sahf
mov
subl
jmp
cltd
xor
andl
jmp
cmc
leave
clc
jnp
test
and
shrl
shl
pop
lea
stos
dec
imul
push
aad
push
push
cli
push
incl
cli
xor
pusha
inc
or
xchg
repnz
fidivrs
std
gs
dec
hlt
gs
test
mov
in
push
xchg
and
push
aam
faddl
push
sub
push
jg
ret
inc
sub
out
mov
dec
pop
imul
jp
outsl
gs
iret
sarb
push
jl
cwtl
adc
es
mov
filds
pop
xchg
mov
test
add
xchg
outsl
add
out
js
sub
inc
stos
test
jne
sub
dec
mov
and
jle
or
in
sub
iret
cs
fdivs
pop
jecxz
mov
jbe
xor
push
xchg
mov
sbb
xchg
popf
mov
dec
and
add
adcb
jmp
imul
fsubrl
xchg
sbb
daa
jno
mov
xor
sbb
push
jg
arpl
pop
inc
pop
xor
or
test
dec
aaa
inc
mov
sbb
sbb
ds
lods
lret
inc
pop
or
jmp
lds
inc
rorb
fwait
and
cmp
cmp
sub
push
addr16
push
jge
insl
jecxz
cmp
mov
cmp
xorb
into
jl
lret
mov
cltd
jns
xor
jo,pt
stc
xor
xchg
insl
test
xorb
inc
jge
stos
cmpsb
inc
cmpsb
out
cmpb
pop
and
cltd
fabs
jae
int
jae
icebp
cmp
inc
and
mov
addb
sbb
jge
inc
sbb
sbb
add
add
push
pop
mov
js
or
and
push
sbb
sub
fildll
sub
sarb
pop
cs
call
divb
jno
push
push
and
daa
jmp
addr16
notl
push
rcrl
mov
xchg
adc
dec
dec
ds
in
outsl
xor
add
pop
testb
sub
adc
sahf
and
mov
jae
push
mov
xor
shrb
movsb
cli
jp
shlb
or
cmp
movsl
pop
or
fwait
pop
into
or
cmc
or
xor
fldenv
adc
jmp
dec
add
loop
xchg
mov
mov
cwtl
xchg
sub
into
adc
in
sub
sti
mov
sub
loopne
jge
dec
ja
test
pop
outsl
fsin
cli
fadd
jnp
push
repz
cmpb
pop
sbb
enter
fidivl
leave
mov
pushf
fimuls
jmp
das
or
scas
xchg
pop
aad
xor
pop
scas
pop
jb
popa
scas
dec
movsb
js
je
repnz
jecxz
mov
fildll
lea
mov
gs
sub
jle
dec
and
icebp
jle
xchg
sub
das
lret
testl
mov
lds
int3
sarl
pop
idivb
mov
std
fnstcw
sub
out
pop
icebp
lahf
js
cld
cmp
xlat
lret
push
nop
pop
mov
ljmp
jnp
ret
xlat
sub
push
dec
aam
cmp
es
fildll
inc
xor
and
inc
cmp
ljmp
push
lods
test
lods
mov
dec
bnd
mov
comiss
test
pop
pop
ds
push
mov
lcall
sbb
mov
subb
jmp
aam
out
data16
push
sub
jmp
in
push
xor
mov
mov
inc
mov
add
dec
pop
xchg
shrl
adc
mov
stos
sbb
fwait
dec
in
pop
push
ja
ds
cmpl
push
call
sub
inc
in
xchg
xor
mov
mov
jno
cmp
push
js
jp
xlat
mov
lret
out
cmc
mov
sbb
adc
sbb
bound
loop
clc
fcmovnu
xchg
cmp
orl
push
out
cmp
sub
cmp
add
mov
sub
gs
insb
mov
sbb
shl
sub
jecxz
outsb
lahf
jo
es
ffreep
jmp
mov
inc
xorl
push
fisttpl
xchg
popf
loopne
imul
and
clc
push
sbbb
mov
scas
pop
shr
into
push
sbb
add
mov
xchg
fcomip
jmp
sbb
adc
inc
popa
cmpb
and
adc
add
out
pop
pop
cmp
fidivrs
jp
dec
shrb
les
push
sahf
inc
cmp
inc
movsb
or
jns
pop
dec
xor
sbb
push
or
repnz
xor
jno
mov
lcall
mov
gs
jo
mov
cwtl
test
dec
push
test
xchg
and
imul
rcll
pop
scas
push
xchg
dec
loope
cli
mov
cmp
jmp
ret
inc
cmp
xor
stos
in
adcb
mov
xor
dec
fcmovnbe
stos
xchg
jmp
js
das
jo
pop
mov
fcoms
ret
mov
xor
push
repnz
sbb
das
mov
sahf
pop
mov
cmpsl
mov
aad
and
mov
pop
sub
xlat
mov
lret
mov
mov
jae
pop
sbb
jb
dec
xor
insb
adcb
sub
mov
mov
push
sbb
fs
and
ss
add
in
add
pop
cli
lods
sbb
loop
cld
rolb
pop
ljmp
cmc
rcrb
xor
int
repnz
fsubrl
ss
loop
data16
inc
mov
pop
out
sub
mov
mov
pop
pushf
add
adc
incb
adc
cmp
xor
ret
fildl
xlat
cltd
fnstenv
or
repz
xchg
mov
sub
cmp
mov
mov
lretw
adc
std
jmp
imul
imul
outsl
aam
aas
mov
and
dec
sbb
je
xchg
pop
jecxz
jns
loop
lock
pop
push
mov
xchg
mov
push
cmpl
and
pop
xchg
aas
jb
sbb
inc
mov
inc
das
stos
mov
sub
movsb
dec
cmp
push
pop
in
int3
insb
pop
idivb
std
orb
cwtl
push
and
mov
jbe
pop
cld
dec
test
xlat
out
inc
mov
cld
cmp
adc
jbe
lcall
sub
mov
aam
mov
shll
insl
pop
mov
dec
pop
popa
rclb
ja
aaa
popa
xchg
aaa
ret
and
mov
xchg
and
mov
mov
out
cltd
mov
test
push
rolb
fstpl
mov
xchg
cwtl
rcr
and
pop
xchg
repnz
stos
sub
scas
lods
xchg
jecxz
or
aam
incl
int
or
test
xor
cld
pop
mov
add
or
ret
test
add
xor
dec
dec
mov
mov
jmp
sub
jge
lcall
out
sbbl
jns
sub
in
fiaddl
mov
lock
mov
loope
cmp
jp
mov
mov
ljmp
xchg
sbb
dec
pop
add
jne
inc
sbb
dec
pop
repz
jmp
jmp
add
fwait
in
out
jae
sub
aaa
pop
inc
push
repz
loop
hlt
dec
push
and
insb
push
test
insb
push
std
jle
daa
sti
in
pop
pop
pusha
or
mov
out
pop
push
pop
push
inc
mov
loope
sahf
outsl
push
popf
pop
ljmp
sbb
stos
fcmovbe
xchg
xchg
dec
cltd
and
mov
sub
adc
push
loop
lea
mov
push
test
hlt
enterw
push
mov
fs
add
sahf
jnp
aaa
ret
and
or
push
add
lcall
cmp
fsubp
inc
jns
pop
es
les
das
and
sbb
add
movsb
xchg
insl
and
nop
loopne
sahf
mov
xor
daa
icebp
adc
pushf
jno
call
dec
popl
push
idivl
xor
shlb
push
sub
mov
dec
inc
mov
pop
inc
fwait
xchg
dec
pop
push
in
push
mov
int
mov
cmp
loope
mov
xchg
js
adc
mov
addr16
add
mov
cmp
aas
sub
pop
xor
call
loopne
xor
ja
in
pop
flds
lcall
test
imul
and
rcrl
adc
repz
push
jg
mov
mov
mov
xchg
and
les
int
sbb
adc
lret
add
scas
mov
sbb
mov
loope
sub
icebp
adc
sub
call
adc
vmread
fdivrs
xchg
imul
cmp
cmp
aam
or
es
into
iret
mov
cmc
xchg
mov
rcrb
push
adc
and
daa
sub
add
and
pop
lods
sub
pushf
mov
add
scas
dec
cmp
in
ret
loop
sti
ret
std
cmpsl
cmpsl
inc
dec
gs
mov
scas
inc
mov
mov
insb
pop
inc
les
or
jg
or
ds
das
xacquire
sti
enter
repz
imul
cmp
push
nop
dec
fisubl
pop
jmp
jb
sbb
dec
xchg
fbstp
sbb
jne
out
cltd
cmp
pop
cld
xor
fs
adcl
push
adc
add
pop
xor
out
lahf
ss
shrb
pop
mov
pop
inc
jae
fcmovnbe
icebp
rcrl
lds
idivb
mov
dec
cmpsl
lock
mov
dec
lret
xchg
test
lret
inc
xchg
mov
jb
lock
fcomps
mov
push
pop
sub
gs
std
sub
push
icebp
shrl
adc
nop
daa
xchg
ret
ljmp
dec
lods
jle
and
dec
adc
nop
jle
and
sbb
xchg
cltd
ficoml
test
mov
nop
xchg
push
rorb
fldl
clc
sub
fwait
xchg
in
mov
cmp
xor
pop
aas
jecxz
stos
sbb
dec
out
sub
jg
sub
bnd
push
xor
sarl
xor
or
mov
mov
mov
lcall
dec
inc
fincstp
inc
fsubs
mov
lods
xor
add
mov
sub
jns
dec
add
pop
and
enter
pop
mov
pushf
or
jp
loopne
mov
cs
mov
add
dec
inc
data16
jne
iret
scas
mov
inc
imul
cli
add
out
inc
xchg
rolb
add
sub
xor
dec
stos
addr16
adc
fstpt
push
or
mov
add
dec
iret
in
add
adc
pop
mov
jl
xchg
mov
jae
cmp
push
popa
dec
add
pop
ljmp
inc
cwtl
rcrb
cmpsb
add
imul
adc
pop
push
sub
sub
pop
repnz
pop
leave
int
mov
arpl
adc
mov
loop
aaa
sbbb
or
fiadds
fdivrp
dec
outsb
mov
pop
cltd
repnz
fiadds
pop
pop
rcr
adc
jl
fwait
cmp
jmp
ret
or
imul
sbb
es
lock
out
shlb
xor
in
dec
mov
outsb
xor
sbb
push
ljmp
test
jecxz
out
inc
sub
xlat
in
aaa
in
sub
push
call
loop
movsb
push
pushf
xchg
mov
stos
sarl
daa
adc
and
cmc
movsl
sbb
and
push
sbb
jmp
sbb
add
test
xor
lret
xor
rcrb
sbb
cmpsb
pop
pop
jno
lcall
in
adc
push
sub
and
xchg
and
into
stos
jbe
je
pop
mov
cmpsl
fisttpl
fs
and
and
or
int
add
fcomp
loop
push
sahf
xor
mov
inc
adc
sbb
jle
sahf
mov
jecxz
in
or
outsl
rorb
loop
es
les
fs
outsb
adc
repz
ss
pop
insl
cmp
jns
stc
out
xchg
mov
xor
sahf
insb
cmp
test
stos
into
mov
xor
pop
jl
xor
subl
xor
aam
loop
xor
add
sub
adc
adc
mov
push
sub
cwtl
mov
cs
sar
jb
or
lret
gs
push
push
dec
xchg
cwtl
out
inc
fwait
jecxz
fldenv
mov
repz
cmp
inc
arpl
ret
cmp
std
push
mov
loop
cmc
adc
cmp
das
jecxz
xlat
repz
stos
out
nop
and
inc
mov
or
in
push
fildl
daa
aad
call
clc
dec
call
popa
mov
mov
loope
test
add
xor
xlat
mov
inc
es
in
loopne
das
push
fnstsw
adc
xor
pushfw
movsb
shrl
jge
add
daa
std
into
dec
jmp
enter
out
dec
loop
subb
and
jne
mov
jecxz
mov
dec
pop
mov
dec
push
lock
fcomp
popa
shrb
xchg
sub
jecxz
aam
and
es
xor
insl
sub
dec
dec
push
aam
add
vminss
popa
les
in
mov
sbb
mov
dec
je
add
stos
mov
test
scas
mov
xchg
lret
cli
jae
imul
clc
addr16
jae
xchg
xlat
mov
out
mov
outsl
pop
ljmp
out
xor
xchg
mov
mov
xchg
shll
dec
or
xor
imul
jle
or
aad
nop
imul
mov
scas
dec
xor
pop
inc
outsl
movsl
mov
fdivr
in
push
pusha
dec
push
add
aam
push
aas
mulb
or
test
adc
call
adc
repz
push
pop
push
push
test
and
sub
xchg
cltd
mov
jno
movsb
dec
and
fs
ret
incl
fistpll
je
jmp
fwait
or
out
xchg
sub
orl
rcll
insb
in
push
jnp
push
jp
fcoml
pop
pusha
aas
adc
ret
je
mov
mov
jae
push
leave
push
and
lret
popf
push
sbb
xchg
mov
lret
fidivrl
adc
mov
cmp
push
jo
mov
mov
lret
add
bnd
inc
sti
xchg
hlt
cld
pusha
data16
xor
or
stc
aaa
inc
cwtl
xchg
or
inc
add
je
pop
dec
stos
pop
enter
sub
cmp
cli
and
scas
push
cli
mov
cli
cmp
pop
movsb
stos
add
jbe
cmpsl
mov
sbb
pop
cmp
out
lret
cmp
dec
mov
adc
mov
sti
lahf
push
mov
sahf
adc
lcall
rclb
cmp
push
scas
mov
or
in
push
sbb
dec
mov
pop
and
or
scas
scas
loope
scas
jle
pop
movsb
mov
jne
ds
sub
and
in
mov
or
rcrl
lods
int
add
add
xor
out
jg
or
push
stc
pop
xlat
push
lcall
aam
mov
stos
dec
outsb
rorl
adc
push
or
cmpsb
insl
mov
stc
jne
ret
mov
jnp
and
in
push
or
int
int3
and
push
mov
scas
lret
mov
mov
adc
sahf
xor
popa
andb
outsl
scas
push
push
hlt
out
stc
jnp
repnz
adc
adc
jecxz
xchg
mov
sbb
lods
cmpsl
out
cmovne
inc
mov
or
or
push
pop
xor
aad
adc
aaa
and
cmc
jae
add
dec
add
js
xchg
fpatan
lods
clc
outsl
add
adc
fbld
cltd
jmp
sti
and
fsubs
and
loopne
sbb
dec
repz
dec
and
cmpsl
xchg
repz
test
cmp
xor
and
iret
pushf
mov
and
pop
mov
cmp
daa
nop
add
push
fwait
cmp
jb
cmpsb
decb
ss
jnp
jecxz
imul
push
icebp
mov
mov
addl
int
pop
jae
pop
jp
adc
adc
inc
or
pop
das
inc
and
fdivs
mov
icebp
mov
inc
testb
std
jne
ret
pop
cmpsw
out
stos
aad
mov
and
sti
stos
addr16
out
ljmp
sbb
lock
test
test
mov
aam
insl
mov
es
pop
insl
adc
dec
dec
stos
mov
rcrb
xchg
mov
fimull
and
push
push
push
bts
add
dec
dec
cltd
dec
pushf
mov
mov
ficoms
push
push
and
fstl
je
xchg
inc
mov
rcr
cs
pop
xchg
inc
jp
cli
pop
pop
out
repnz
xchg
mov
mov
jmp
jmp
sahf
jbe
or
adc
inc
aad
or
testl
inc
inc
ja
jl
dec
daa
sub
ljmp
mov
add
out
je
out
push
enter
dec
icebp
jns
jp
in
mov
xchg
insl
test
mov
adc
addr16
pusha
clc
jp
pop
cltd
mov
and
mov
loopne
dec
pop
push
enter
mov
pop
cmc
dec
pop
xchg
rolb
movsb
jmp
in
adc
aam
loopne
insb
mov
xor
stos
dec
mov
outsb
insb
dec
xchg
imul
ss
cli
sub
inc
mov
pusha
fisubl
iret
mov
adc
ret
xor
push
out
loope
jl
mov
inc
xchg
out
and
out
bound
push
ds
loopne
mov
scas
jmp
enter
mov
mov
shrb
cmp
mov
sub
inc
insl
push
jmp
push
add
mov
or
addr16
inc
ret
imull
sbb
lock
xchg
rclb
pop
and
loopne,pt
ss
lret
pop
jbe
pop
push
jge
sbb
sbb
fsts
cmp
jae
out
fstpt
push
fdivr
cmpsb
push
mov
push
arpl
mov
lahf
push
push
jns
movsl
je
test
jns
stc
inc
dec
notb
aad
pop
in
add
lods
lods
pop
pusha
or
push
ja
loope
fiadds
cmp
dec
movsl
sub
stos
and
pop
gs
mov
add
aad
xor
pop
mov
pop
pop
cmpsb
xchg
pop
push
push
inc
lcall
call
sub
add
pushf
adc
test
mov
mov
xorb
cmp
and
in
arpl
push
in
int
jp
sub
sub
cs
cmp
mov
clc
jb
and
pop
test
es
cmpb
mov
add
out
cs
xor
cmp
fbstp
fadds
movsb
fsubr
rolb
cli
jns
lods
xor
iret
jae
sbb
xor
sub
scas
sbb
adc
rclb
int3
cld
std
add
aam
fistpll
mov
mov
sub
dec
mov
dec
pop
mov
add
cmpsb
sti
shrb
adc
sub
cmpsl
lock
dec
push
jge
inc
sarl
les
mov
xchg
enter
adc
cmp
mov
sbb
adc
movsb
out
xor
add
popf
dec
or
or
arpl
aas
cmp
cli
jb
cmp
je
outsl
fucom
inc
inc
popa
out
cs
and
into
call
fisttps
mov
cmp
fisttpl
sub
lds
sub
es
in
imul
addb
jl
mov
testb
jns
ds
cmpsl
in
mov
mov
rclb
cld
adc
out
xchg
call
cwtl
mov
sub
jle
and
push
mov
rorb
sbb
sub
or
ret
jg
mov
dec
inc
xchg
hlt
xchg
jg
mov
popa
repnz
mov
stc
jbe
and
out
icebp
cltd
pop
mov
cltd
jg
xchg
test
imul
mov
dec
clc
fnsave
jp
xchg
cmp
sbb
add
xor
lods
lock
jmp
test
push
jb
call
xor
push
test
cmc
adc
fisubl
sub
pop
out
or
ja
loopne
dec
sbb
inc
popf
or
or
pop
je
cmp
jno
cmpsb
or
add
or
out
xor
dec
jns
xchg
in
cld
inc
xchg
mov
pop
xchg
mov
int
das
addr16
and
jp
cmpsb
js
sub
fidivrl
fdivs
ljmp
mov
test
std
clc
mov
mov
ficomps
xchg
xor
sub
push
fsts
push
mov
or
push
out
and
and
roll
sub
xor
aam
in
adc
ror
add
iret
pop
sub
add
cs
ljmp
mov
adc
notb
mov
imul
es
dec
pop
pop
push
xor
adc
jecxz
or
repnz
fidivrs
hlt
xchg
dec
add
cmpsb
dec
inc
jo
mov
mov
xchg
or
inc
pop
add
or
fisubrs
or
ja
fadd
xor
pop
scas
adc
mov
xchg
adc
stos
jge
jge
call
in
in
xchg
cld
cmp
repz
jl
or
dec
dec
cmpl
jo
jecxz
lahf
and
enter
int3
js
inc
sti
rolb
clc
and
in
push
xor
inc
pop
lahf
mov
add
std
xor
cmp
jb
mov
movsl
xor
sbb
cmp
sub
or
sbb
inc
add
sti
pop
xor
sub
jp
push
pop
int
je
jnp
jle
aad
lcall
sub
mov
outsb
xchg
jp
pop
loop
jg
andl
mov
mov
icebp
aaa
pop
push
adc
cmp
sub
in
testl
pop
mov
dec
or
jns
aas
adcb
and
stc
jmp
lahf
xor
in
hlt
ss
mov
stos
mov
int3
xchg
mov
lods
dec
loopne
xchg
ja
cmp
and
or
in
addr16
mov
inc
xor
loope
pop
lea
test
lds
push
push
adc
pop
movsl
add
fsubrl
cltd
call
mov
mov
pop
sub
js
arpl
outsl
inc
sub
jg
repnz
xor
gs
push
loopne
fstl
inc
aam
xor
dec
shr
les
jno
xchg
mov
sbb
sub
sti
aam
sbb
sub
push
mov
pushf
loopne
dec
jmp
adc
cs
or
push
dec
sub
mov
mov
jb
add
outsb
pop
pop
je
mov
or
icebp
jle
lea
ss
mov
push
pop
mov
std
test
and
ja
pop
rorb
inc
mov
repnz
add
dec
pop
mov
pop
icebp
jl
push
into
icebp
test
add
ret
gs
stc
lock
in
cmc
adc
test
cmpsb
and
add
arpl
flds
pop
xor
test
movsl
xor
add
sbb
fwait
dec
aas
adc
xchg
mov
push
into
popa
or
lods
sub
dec
mov
mov
fsubs
imul
mov
mov
mov
cmp
push
fadd
das
fucom
sub
or
or
pop
jmp
ljmp
mov
add
jmp
jmp
or
xor
xchg
mov
adc
add
out
pop
dec
or
jbe
or
add
imul
cmp
and
ja
mov
add
mov
adc
lea
or
addr16
insb
jnp
movsl
lret
movsl
mov
mov
test
jne
repnz
fistps
ret
leave
sbb
xchg
cld
test
andl
out
push
adc
push
ret
jecxz
cs
push
and
outsl
shrb
and
repz
jle
mov
stos
pusha
adc
out
iret
pusha
xor
pop
lea
fs
fiaddl
pop
jae
sub
insl
cmp
pop
mov
xchg
sbb
ficoml
xchg
add
sahf
sbb
aas
jl
mov
push
push
js
adc
pop
mov
js
cmp
hlt
fnstsw
inc
inc
jae
jnp
aas
inc
push
jle
jbe
sub
mov
sbb
pop
push
jae
ficoms
je
vcvtss2si
dec
rcl
scas
hlt
jle
and
cmp
mov
push
lcall
scas
jge
fwait
rcrl
xchg
fldenv
in
mov
push
jno
shlb
mov
jno
xor
xchg
popf
push
dec
push
fisubrl
nop/reserved
cmpsb
fisttpl
mov
cmp
aas
pop
fdivrp
xor
loope
test
mov
ds
push
movsl
aaa
call
pop
cwtl
push
loope
add
sbb
xlat
add
jne
xor
mov
pop
hlt
subl
lcall
cmp
sub
pop
and
and
adc
cmp
inc
jg
hlt
mov
in
sub
mov
mov
mov
adc
icebp
push
adc
ljmp
shrb
dec
sub
out
jg
ds
inc
push
sbb
popf
cmpsb
test
or
outsl
dec
cmpsb
mov
or
js
mov
in
adc
leave
adc
pop
jg
cmp
gs
xchg
out
mov
sbb
cmp
inc
push
or
addr16
ds
cmc
jp
nop
xor
sub
pop
lods
sub
pusha
ficoml
adc
or
add
push
pop
lods
lods
cmp
fwait
mov
sub
rcrl
jp
jp
fisubrl
dec
push
and
fstp
sahf
dec
adc
inc
out
leave
fnstcw
push
enter
fs
xchg
dec
add
gs
push
ficompl
pop
scas
cmp
scas
xchg
push
pushf
mov
dec
arpl
aad
dec
fsts
js
cmp
cld
inc
dec
in
gs
push
pushf
jecxz
mov
mov
call
pop
pushf
fisttpl
add
and
lahf
mov
adc
mov
pop
jne
das
in
jmp
xchg
jg
mov
xchg
or
testb
repz
push
inc
cwtl
mov
cwtl
cmpsl
jmp
cmp
orb
push
std
and
push
inc
and
xor
in
push
fwait
pop
shlb
jl
hlt
inc
rol
sub
lds
insl
sbb
dec
cmp
mov
std
movb
pop
mov
and
lods
xchg
repnz
mov
aas
mov
mov
enter
or
aad
in
rclb
mov
push
mov
lahf
dec
iret
fldl
punpcklbw
push
mov
mov
jl
pop
xchg
add
and
xchg
lea
pop
aas
push
sbb
or
mov
xor
cmp
pop
or
xchg
mov
test
mov
ja
xor
add
repz
lret
add
imul
cwtl
enter
pushf
xchg
add
inc
xchg
repz
mov
mov
dec
in
xchg
mov
xor
sbbb
mov
jp
pop
mov
mov
sub
scas
jno
pop
jne
mov
adc
fistpll
popa
ja
dec
clc
call
xchg
movl
sub
sbb
call
stos
cmpsb
xor
push
inc
mov
jnp
lds
pop
inc
add
lds
mov
pop
inc
pop
fwait
mov
xorb
les
xor
icebp
sub
andb
adc
fiaddl
test
xchg
pop
daa
aas
sbb
or
imul
notb
insb
or
fistps
repnz
int
leave
and
hlt
sub
test
jo
or
orb
or
les
test
pmaxub
jmp
data16
scas
rcrl
and
fidivrl
dec
lret
cli
movsb
xlat
push
jbe
dec
push
jbe
and
jge
xor
sbb
shll
daa
jmp
dec
cmp
xchg
int
insb
rcll
dec
sub
or
mov
or
jnp
lahf
arpl
push
push
or
test
fimull
and
mov
mov
push
add
add
rcl
cmp
push
mov
jb
mov
notl
adcb
fadds
inc
sbb
loopne
movsb
add
pushf
pop
sbb
das
js
dec
outsb
pop
sar
push
lcall
pop
fsubrl
push
sub
test
adc
adc
insb
popf
mov
dec
cmp
mov
lock
and
lcall
pop
ficompl
testl
inc
rcll
sbb
loopne
cmp
mov
dec
sahf
mov
mov
or
mov
xchg
stc
push
xor
fidivrl
subb
mov
dec
add
and
ds
adc
and
sub
loopne
gs
fwait
into
and
cmc
inc
sbb
xor
popf
push
xor
aaa
imul
dec
mulb
pop
lods
xchg
out
mov
xlat
or
mov
mov
inc
in
fdivr
fnsave
repz
sbb
loopne
repnz
dec
outsl
repnz
inc
cli
outsb
fnstenv
sbb
xor
sbb
test
fwait
cmp
clc
push
pop
popa
cld
add
add
mov
insb
cs
test
nop
insb
mov
sub
sub
pop
je
je
inc
add
jb
iret
idivl
lea
sub
cmp
imul
pushf
fucom
dec
sti
stc
and
pop
push
lfs
aaa
mov
je
pop
das
ret
mov
mov
sbb
push
notb
popa
std
adc
insb
cmpsl
ljmp
icebp
push
pop
pop
cld
xchg
cs
loopne
lahf
mov
out
mov
imul
pop
jae
xor
sub
loopne
ret
mov
dec
stos
insl
scas
enter
into
gs
cmp
nop
ljmp
stos
lods
add
push
mov
bound
sbb
mov
push
or
pop
fxch
cltd
and
xchg
test
test
outsl
aam
clc
mov
scas
xchg
sub
push
sarl
xor
pop
inc
jmp
stos
mov
into
out
jle
adcl
fimuls
xor
das
stos
or
popa
xor
ds
xchg
push
and
cld
pop
test
scas
mov
and
repz
xor
mov
or
leave
jp
gs
add
pop
insl
aaa
push
jmp
test
in
enter
icebp
jns
inc
sub
pop
pop
iret
addr16
mov
jp
rolb
ds
sbb
xchg
int
jne
pop
add
jns
fistps
rcll
ret
cs
xchg
mov
addl
and
or
mov
stos
sbb
jl
sbb
cmp
jle
pop
mov
arpl
pusha
inc
fs
push
xor
ret
in
rorb
inc
fldcw
fwait
mov
hlt
popf
sbb
sbb
pop
fidivrl
addr16
imul
push
push
push
add
fisubl
mov
push
pop
ljmp
pushf
inc
arpl
lods
push
inc
jns
or
or
insb
aaa
cld
ret
mov
add
in
int3
lock
pop
mov
xchg
push
addr16
or
xchg
rolb
adc
out
adc
add
test
bound
adcb
mov
movsl
xchg
jge
lods
inc
sbb
mov
aam
sbb
jmp
jl
push
call
push
sub
push
xor
cmp
repnz
push
icebp
sti
jno
push
insb
xchg
push
movsl
dec
repnz
test
popf
in
mov
stc
nop
pop
pop
not
push
pushf
popa
loope
add
ss
out
cmp
push
ds
pop
mull
or
push
fldl
rclb
cmp
out
scas
scas
xlat
ret
gs
pop
inc
or
js
adc
push
ds
lcall
arpl
push
scas
in
scas
sbb
mov
addr16
lock
xchg
call
jbe
adc
and
sbb
int
pop
cmp
mov
or
lret
xor
lods
mov
dec
sbb
std
mov
pusha
or
push
jns
sub
pop
outsl
or
loop
add
stc
push
jg
fs
ss
fdivrs
fldt
test
cli
inc
ja
xor
xchg
aas
cmp
or
or
stos
gs
add
inc
cmc
or
into
pop
ljmp
imul
and
and
and
xchg
movsb
out
dec
cld
ljmp
shll
xor
in
mov
addr16
mov
pop
gs
cltd
loopne
sbb
dec
into
jbe
inc
or
jecxz
ficoms
movsb
xchg
aam
pop
sbb
fcmovne
xor
pop
adc
adcl
adc
dec
jmp
sub
aad
outsl
mov
aas
mov
jecxz
dec
aam
shll
je
mov
orl
shl
call
fstpt
dec
xorl
cmpsb
push
fisttpl
xor
inc
push
jnp
inc
mov
das
mov
mov
pop
sti
popf
and
cmp
roll
notb
cwtl
sub
sbb
mov
cs
cwtl
cld
mov
and
mov
lcall
xchg
xchg
push
rcrb
lahf
sub
iret
mov
mov
pop
push
dec
xor
nop
xchg
jnp
and
jl
add
imul
mov
leave
mov
mov
xchg
add
jle
cltd
pop
jge
test
mov
mov
inc
pop
push
and
jge
clc
leave
jmp
inc
sbb
push
insb
rcll
cmpsl
mov
out
loope
sbb
ficomps
jge
or
cmp
out
xor
xchg
add
sbb
cli
sub
sub
mov
or
jmp
fwait
test
push
xor
pop
add
jbe
or
jns
jb
jl
icebp
jns
and
in
pop
sbb
test
aaa
mov
mov
pop
test
fistl
test
xchg
mov
or
sbb
fists
in
cmpsb
mov
fistpll
xchg
out
icebp
mov
cmpsl
add
orl
pop
out
jg
sub
movntq
stos
mov
insb
data16
jnp
mov
jle
shlb
loope
ror
mov
pop
pop
or
pushl
push
pop
popf
aas
or
clc
xor
fisubrl
mov
pop
int3
mov
sbb
xor
scas
fisubl
dec
not
adc
aas
push
leave
push
push
fdiv
mov
aaa
mov
jl
or
jbe
sbb
mov
jecxz
add
fucomp
int3
fldt
loop
pop
fdivrp
into
sub
xchg
loop
rcrb
and
mov
movsb
in
cltd
cmpsl
push
in
rclb
jge
or
daa
jmp
outsb
shll
aas
popa
jl
sarl
pop
xchg
push
cmovb
jo
fs
lahf
mov
pop
into
test
jo
int
adc
je
mov
add
sub
mov
add
pop
out
sub
loopne
cmp
cmp
movsl
dec
subb
mov
mov
mov
sbb
push
out
add
frstpm(287
xor
inc
xchg
dec
pop
imul
dec
pop
roll
lods
lcall
mov
sub
ficoms
lret
in
sub
addr16
mov
sub
mov
add
sub
sub
int
cmp
testl
and
mov
shll
das
sub
addb
jle
jmp
or
lds
fs
cli
ss
pop
dec
cmp
xchg
xor
out
xlat
pop
cli
js
cmc
xor
out
cmp
lods
lcall
arpl
cmc
iret
mov
xor
mov
or
test
fsts
imul
rcr
movsw
jbe
lods
bound
sbb
mov
sub
mov
sbb
push
sti
cmp
mov
ljmp
sub
je
fldenv
data16
jmp
sbb
xchg
xchg
movsb
lock
push
inc
ss
rol
xchg
pop
lahf
add
pushf
mov
pop
cs
vpshufd
aas
push
sbbb
es
dec
dec
sbb
nop
jne
std
inc
out
lea
jge
call
lcall
or
daa
rcr
mov
pop
dec
fisubrs
inc
xlat
and
stos
jbe
das
sbbl
adc
push
xor
rcll
add
pop
push
push
cmpsl
call
adc
das
cld
jmp
fcmovu
mov
add
aam
inc
jmp
pop
mov
insb
shrb
inc
fs
adc
es
insl
jl
orl
push
loop
xorb
lods
or
mov
shrb
dec
pmulhw
add
nop
cltd
xchg
leave
fadds
daa
mov
fnstsw
clc
add
mov
sbb
out
shr
push
fwait
pop
xchg
cmp
stos
xchg
or
out
inc
add
xchg
bound
jns
sbb
pop
xor
mulb
xchg
inc
mov
xchg
fldl2e
dec
popa
aas
lea
ljmp
inc
nop
test
fwait
and
pushf
jnp
pop
mov
add
pop
les
add
jns
bound
dec
ljmp
dec
daa
mov
je
jmp
mov
jp
stos
dec
mov
pop
mov
mov
cli
dec
pop
in
jne
push
sub
cwtl
fwait
rcll
sahf
in
xchg
sub
aad
sahf
cmp
mov
or
sbb
push
sub
stos
lcall
mov
jnp
rclb
in
jge
pusha
jl
and
faddl
test
xchg
addb
jae
pop
dec
push
jns
sub
xor
add
fisubl
stc
gs
pop
push
adc
pop
lock
scas
cmp
push
lods
adc
xorb
inc
mov
hlt
or
or
add
sbb
icebp
in
aaa
jp
repz
or
add
xlat
mov
ficomps
cmp
shlb
cmp
adc
test
outsl
sbb
movsb
js
pushf
push
cmp
jbe
add
sbb
aad
call
push
jno
stos
xor
call
push
repnz
add
imulb
push
xchg
ja
test
cmp
loopne
mov
ja
in
outsl
inc
and
sub
push
push
out
loope
in
push
sub
cmpsb
cld
cmp
sbb
movsl
push
sub
inc
sbb
adc
flds
lods
loope
push
movsl
enter
fst
dec
and
mov
dec
mov
adc
insb
shlb
sub
mov
push
cmp
shlb
jmp
mov
ljmp
mov
stos
cld
push
and
int
ds
cld
aaa
lret
xchg
rcr
sbb
dec
mov
test
mov
outsl
enter
pop
inc
jp
jl
sbb
adc
cwtl
ss
les
push
sarl
cli
stos
adc
in
cmp
and
or
arpl
xor
pop
cmp
lods
xor
lds
sbb
out
push
data16
dec
imul
xlat
leave
dec
adc
mov
sbb
in
xchg
loop
xchg
gs
adc
dec
test
dec
mov
cltd
fstps
mov
hlt
jl
repz
pop
or
push
push
std
dec
insb
add
jg
adc
es
aaa
push
jecxz
out
adc
out
ss
aad
and
fstpt
hlt
inc
jp
out
icebp
out
dec
shll
or
pushf
movb
push
lea
sbbb
out
add
popa
out
testl
xor
mov
inc
pop
cs
lds
das
pusha
dec
scas
mov
lret
and
mov
xor
sbb
cwtl
mov
mov
mov
fsubrl
xchg
cld
adc
push
lret
sub
andl
xchg
pop
rclb
jecxz
js
mov
and
pop
es
sub
or
cmc
mov
popa
jl
call
mov
lret
and
mov
inc
outsl
cmp
pop
fs
test
dec
data16
dec
les
fdivs
frstor
mov
add
xchg
sarl
xor
sbb
out
cmpsl
pop
pop
xchg
test
les
mov
sbb
or
inc
fwait
mov
and
test
ss
or
dec
int3
js
inc
daa
mov
push
fwait
push
aad
push
js
lods
add
lods
jns
out
aaa
cmc
cmp
ror
jns
inc
scas
in
mov
xchg
or
cs
das
push
jl
inc
nop
jp
sub
adc
in
ljmp
push
mov
jl
xchg
mov
dec
xchg
repz
subl
pushf
sub
add
jae
stos
jb
push
and
jno
cmp
nop
jnp
mov
jle
out
popa
in
scas
jge
pop
mov
mov
pop
ja
call
jae
nop
mov
popf
lea
mov
movlps
shll
jecxz
mov
jne
lea
imul
scas
mov
adc
ja
mov
pop
sub
cld
out
hlt
push
jecxz
arpl
pop
pop
inc
xor
or
insb
sbbb
cmp
jge
jmp
xchg
pop
inc
into
aad
inc
jp
lds
ficompl
dec
add
and
sub
movsb
add
push
mov
jbe
loope
jge
je
sbb
xchg
out
push
cmp
cmp
jl
adc
and
aad
outsb
xor
dec
popf
pushf
lahf
fistpll
push
push
xchg
test
push
xchg
faddl
pushf
out
cmpsb
push
xchg
in
push
nop
dec
and
pop
pop
sbb
cmp
fwait
lods
loope
sbb
ja
dec
cmp
ds
jmp
leave
and
mov
outsl
andb
sbb
add
xor
or
xlat
pop
mov
mov
pop
iret
sbb
lcall
sub
pop
lahf
sbb
jnp
imull
inc
and
subl
mov
fsubl
jp
xor
pop
cmpsb
lock
sahf
push
and
xor
sti
daa
fldt
sub
and
shll
mov
ds
dec
push
sbb
cmp
shl
mov
stc
xor
sbb
push
adc
fisubrl
and
mov
or
mov
cli
fdivp
xorb
negb
aad
jo
and
jae
lods
push
fdivp
pop
xlat
xor
cmpsb
push
adc
push
imul
gs
scas
sbb
xlat
or
or
in
adc
sti
cltd
lods
incb
dec
movsl
loopne
or
dec
jmp
inc
inc
sub
xchg
mov
pop
rep
test
xchg
sbb
out
cmp
and
adc
adc
dec
pushf
loop
push
cs
mov
push
fs
fsubs
aas
xchg
or
or
push
push
je
dec
xchg
scas
cltd
push
movb
xchg
cmc
pop
into
call
sbb
push
mov
mov
testb
fcmovnbe
in
pop
xchg
jge
inc
in
xchg
xor
mov
subl
insl
shll
aam
negb
sahf
std
lods
popf
xchg
cwtl
pop
test
out
out
dec
jbe
icebp
mov
cmp
aas
das
xchg
lret
pushf
xchg
insl
mov
repnz
das
mov
sti
aaa
jo
out
mov
or
outsl
and
test
clc
mov
shrl
insb
fmuls
xor
push
fwait
push
lods
lods
cmp
mov
out
imul
sub
bt
lcall
loop
call
push
outsb
sahf
mov
lret
clc
jp
pop
xchg
push
insl
sbb
mov
rcll
aad
stos
jb
pop
out
or
push
outsl
pop
mov
pop
pop
xor
or
ljmp
push
stc
xor
dec
das
adc
test
pop
stos
ja
or
inc
mov
dec
mov
sbb
aam
movsl
imul
out
bound
rorb
lret
sbb
xchg
in
dec
mov
inc
jnp
ja
jo
ljmp
jp
fs
mov
xchg
mov
pop
sahf
fimull
int
jne
fbld
sub
push
xchg
popf
xchg
mov
adc
out
mov
sbb
add
inc
push
test
fwait
stos
in
push
and
adc
xor
icebp
pop
scas
jle
je
in
inc
push
pusha
mov
mov
lcall
pop
scas
insb
adc
push
jae
or
push
inc
iret
popf
mov
or
mov
xchg
fiaddl
rcrl
sbb
cmpsl
imul
scas
add
push
and
popa
mov
push
cmp
hlt
lahf
dec
adc
inc
test
fwait
push
clc
cs
or
jns
add
adc
sub
pop
outsl
sub
fsubp
mov
dec
shr
and
cmp
fwait
movsb
mov
lods
push
fldcw
jbe
xor
jge
jg
sbb
test
cmp
jle
jno
icebp
aam
aad
adc
mov
test
test
push
and
ret
arpl
shrl
int
in
and
in
cmp
test
pop
and
push
add
sub
lods
popa
cmp
jno
subb
and
xor
xorb
pushf
aad
add
xor
dec
iret
lods
lret
pop
or
loop
pop
dec
insb
pusha
lcall
pop
fadd
inc
or
push
leave
outsb
cmp
push
adc
pop
enter
xchg
mov
add
mov
pop
mov
and
jns
es
sub
sti
cltd
lret
sahf
rorl
dec
mov
fcompl
fwait
mov
addb
jecxz
outsl
xchg
xchg
loop
push
xor
ljmp
adc
dec
imul
aam
lds
out
xor
and
mov
into
nop
aas
mov
and
xchg
pusha
jns
pop
data16
push
fwait
dec
imul
xchg
test
jecxz
lods
pop
fsts
xlat
inc
lods
je
lahf
inc
nop
mov
pop
xchg
inc
sti
dec
mov
adcl
dec
dec
mov
inc
pop
push
sbb
leave
dec
in
or
push
xchg
loopne
mov
sub
call
adc
sub
cs
stos
aad
insb
lret
nop
mov
or
jb
and
dec
scas
jecxz
je
loop
jecxz
xchg
test
push
pop
sahf
lea
call
xlat
xor
mov
and
lods
dec
xchg
mov
lcall
cmp
inc
insb
jno
inc
sti
sub
add
cmpb
xchg
sbbb
mulb
sbb
push
out
aas
cmpsl
in
enter
enter
mov
push
jmp
mov
dec
mov
push
cld
ficomps
push
scas
ljmp
or
mov
dec
ret
xchg
push
es
mov
in
sbb
movsb
xchg
ja
test
fistpl
popa
stos
jl
lods
pop
xchg
in
mov
adc
aaa
mov
add
nop
cltd
aaa
xchg
sub
jns
xor
and
clc
mov
cld
xchg
test
shr
in
pop
cwtl
loop
stos
popa
aam
out
insl
out
ds
aaa
push
xor
jle
stc
gs
xor
stc
jle
js
mov
daa
or
dec
xchg
rcrl
jecxz
in
ja
mov
dec
mov
cmc
inc
push
dec
loop
in
mov
pop
push
mov
or
pop
out
cmc
fcompl
enter
cld
test
push
add
mov
jmp
mov
movsl
loopne
addr16
aam
jp
push
push
mov
pusha
cmc
mov
adc
jne
mov
repz
stc
mov
jmp
mov
push
out
add
sti
cs
push
out
dec
stos
pop
push
sub
nop
and
insb
adc
jnp
ret
pop
jle
in
fxam
xchg
pusha
dec
test
dec
ret
pop
pop
in
jno
adc
jae
test
ret
popf
fstpt
mov
or
ret
arpl
sbbb
dec
imul
rclb
mov
test
add
repnz
or
hlt
ljmp
inc
mov
orl
jno
aaa
mov
pop
or
mov
jg
xchg
ja
sahf
dec
add
lds
roll
and
xor
pop
movsb
sbb
xchg
jbe
mull
sub
sbb
daa
in
adc
sbb
xchg
lock
ret
xchg
push
fwait
add
les
es
sbb
mov
test
pushf
adc
dec
popf
mov
jo
test
and
mov
sbb
aam
xchg
stc
sbb
adc
ficoml
dec
out
in
cmp
mulb
adc
inc
xor
repz
pop
mov
xor
and
pop
add
mov
lcall
sub
insl
mov
and
lahf
int3
outsl
adc
aaa
cmp
jg
mov
xor
mov
mov
popf
clc
xchg
and
jle
sub
popa
int
cmpsb
and
and
testl
sub
bound
sbb
jne
sahf
mov
pop
subb
outsl
sbb
adc
add
mov
hlt
sub
pop
clc
test
xor
cld
cmp
sbbb
out
push
pop
cli
inc
leave
mov
dec
xchg
cmpsl
cmp
jp
or
mov
into
jae
lock
jmp
movsb
xor
inc
push
adc
imul
xchg
or
lods
out
mov
xlat
xchg
sbb
mov
mov
lret
decb
and
mov
lods
loopne
adc
dec
test
lods
or
add
adc
add
xchg
mov
lret
add
fld
int3
addl
push
aad
bswap
imul
or
mov
push
jb
mov
sbb
nop
lret
int3
int
or
ret
into
jo
pop
push
mov
pop
xor
es
mov
push
in
jecxz
repz
inc
push
cmp
das
std
daa
mov
out
fldenv
in
xchg
ror
mov
jl
sti
jp
cwtl
shr
cmpsl
in
cmp
popa
test
cld
xchg
cmpsl
dec
jp
lret
mov
xor
aam
pop
sub
inc
push
sub
rcl
andl
es
js
sbb
je
mov
mov
dec
dec
pop
popa
roll
mov
xor
sbb
mov
popa
scas
addl
outsb
bound
mov
test
clc
lock
or
adc
mov
je
pop
inc
ret
ja
push
cmc
shr
shlb
sub
and
ja
xor
fstl
and
mov
ret
inc
add
sub
dec
std
je
test
lods
or
xchg
orl
shlb
fadds
fwait
loope
jmp
add
std
cmp
out
aam
out
pop
xchg
jns
int
in
cmp
xchg
orl
mov
pusha
add
inc
cmp
jp
out
sti
mov
push
mov
inc
mov
dec
jns
in
jbe
iret
clc
pushl
adc
xor
push
lock
jmp
push
mov
sbb
ss
or
jb
sbb
divb
call
and
xchg
mov
icebp
mov
in
cltd
iret
pusha
call
xchg
and
cmc
aad
sbb
je
sbb
dec
jae
leave
cmp
test
addr16
add
mov
mov
pop
out
xchg
mov
mov
cmpsl
scas
leave
loop
push
mov
bound
cld
cmp
repnz
in
popa
adc
arpl
inc
mov
loope
ffree
in
aaa
jbe
sbb
ret
add
xchg
jp
jb
sbb
fisubrs
and
shlb
xor
in
in
and
mov
dec
sub
push
ja
mov
jge
inc
out
sbb
mov
lds
dec
arpl
jno
adc
jmp
push
jle
gs
pop
or
push
jecxz
mov
push
addr16
and
add
in
or
push
adc
cli
pop
push
repnz
in
clc
loope
jno
sub
add
ds
or
and
mov
sbb
mov
add
adc
movsb
push
or
pop
sub
sti
js
ret
dec
fwait
xchg
lcall
mov
sbb
jecxz
dec
scas
stc
outsb
add
mov
and
push
adc
sub
filds
call
iret
fwait
push
sub
test
sub
lret
ret
shll
cmpsl
mov
sub
stc
or
sahf
xor
sbb
mov
and
movsb
xor
stc
pop
mov
cmpsl
fcom
adc
orl
cmp
orl
xor
pushf
pop
cmp
aas
insb
or
mov
push
jmp
cmc
mov
mov
pop
movsb
xchg
pop
adc
shlb
jbe
adc
mov
shlb
xor
daa
lods
in
and
lds
adc
xor
sar
xchg
sbb
outsb
lods
shlb
add
mov
insl
dec
or
adc
cmp
fnstenv
push
mov
fsubl
lods
xchg
data16
sbb
cmp
ds
pop
inc
push
sub
notw
jmp
push
xor
jnp
rcl
inc
call
jo
imul
rorl
adc
jecxz
dec
add
or
add
lcall
mov
test
pop
jnp
hlt
inc
jp
mov
das
fsubl
mov
cmpsb
and
movsl
rcrl
insl
cmc
mulb
mov
mov
cmpsl
jecxz
cs
cmp
xchg
jmp
std
in
test
inc
lock
ret
aam
rorb
sub
aam
dec
and
movsl
lock
es
xchg
insl
incl
fcoml
sar
popa
fsubrs
sti
mov
push
cld
sbb
cld
gs
xadd
test
cltd
movsl
loop
test
mov
xchg
push
mov
fstsw
sub
clc
sub
xchg
scas
daa
bound
stos
aas
out
xor
xchg
lds
push
add
add
das
xchg
fidivl
mov
sub
cld
fs
mov
ja
and
inc
addl
fwait
adc
repz
add
nop
add
sbb
push
out
sub
jns
inc
jge
insb
lret
shr
jno
pop
cwtl
jmp
pop
sbb
xchg
jp
inc
mov
insb
sarl
or
dec
mov
fwait
xchg
mov
outsl
sbb
mov
pop
jmp
pop
xor
subl
out
adc
or
lret
gs
popa
stos
xchg
and
xchg
jle
mov
shlb
ljmp
or
mov
cmpsb
jae
packuswb
dec
mov
push
mov
or
pop
ficompl
sbb
imul
inc
scas
sub
and
notb
adc
dec
mov
repnz
dec
fdivrs
arpl
add
mov
or
pop
mov
aaa
xor
sbb
mov
les
fisubs
int3
inc
xchg
mov
pop
in
lret
in
and
loop
cmp
leave
mov
das
add
insb
sbb
jge
divl
ljmp
cmp
lds
call
lods
dec
mov
lahf
xor
mov
shr
mov
stos
test
xor
sahf
inc
insl
scas
insl
cmpsb
jbe
iret
in
repnz
lahf
enter
pop
adc
jo
loope
sub
sub
in
and
or
jle
jbe
ja
dec
add
subb
cmp
xor
pop
sbb
push
jle
js
nop
push
pop
lret
js
lcall
cmp
ret
and
sub
jbe
outsb
and
ficoml
in
push
dec
jg
mov
cmc
mov
xchg
mov
fwait
je
xchg
ret
inc
std
int
mov
sub
dec
jmp
add
jge
adc
into
test
sbb
push
mov
mov
jge
outsl
and
cmp
jp
xor
in
cli
mov
ss
fcoms
out
das
cmp
stos
outsl
pop
xor
lds
or
mov
into
cmp
jmp
jno
inc
pop
ret
out
or
lret
mov
notb
mov
ja
int3
scas
sbb
add
or
clc
jne
mov
popf
mov
sti
push
in
xchg
xchg
gs
ror
push
addr16
test
inc
xchg
add
fldcw
mov
sub
rep
mov
mov
dec
xchg
lret
pop
stc
imul
jmp
into
inc
ficomps
aad
les
aas
addps
jb
test
adc
xor
es
scas
jecxz
adc
jnp
bnd
adc
rorl
push
xor
push
xchg
dec
fistl
sub
inc
add
dec
xchg
mov
mov
pop
adc
dec
shrl
push
imulb
cmp
call
aad
loop
xchg
mov
shufps
jmp
xor
pop
inc
js
push
ds
dec
out
lock
jmp
sub
nop
aam
xchg
es
shrl
dec
int3
dec
or
push
jecxz
xor
jecxz
out
testl
test
mov
cli
xchg
mov
nop
jmp
cltd
faddl
out
test
jp
mov
add
push
jp
frstor
arpl
outsw
xor
push
mov
addr16
cltd
add
out
xchg
jno
xchg
or
xchg
push
fldt
sar
cmpsb
dec
xor
shl
pop
cmp
mov
sbb
addr16
test
dec
mov
dec
mov
inc
sbb
or
or
fwait
aas
fildll
add
xor
inc
out
xchg
popf
bound
pop
shl
imull
mov
pushf
xor
test
inc
cwtl
jne
les
mov
test
mov
adc
push
dec
stos
or
jne
mov
rcr
push
jl
xchg
mov
jp
push
add
out
adc
inc
dec
mov
push
movsb
or
stos
mov
xchg
aad
jg
push
dec
test
cwtl
dec
jle
adc
jg
pusha
push
sub
push
xlat
mov
sbb
fistps
leave
sub
cltd
and
or
jno
push
stos
or
mov
push
fbld
sbb
arpl
scas
daa
mov
adc
gs
repnz
xor
dec
or
hlt
lret
or
insl
cs
xchg
inc
cmp
shll
pop
aaa
hlt
or
movsb
int
dec
mov
add
outsl
push
lcall
fadds
stos
out
and
or
push
adc
call
sbb
mov
cmp
sub
jl
out
dec
adc
jo
inc
fidivl
scas
ret
jp
adc
pop
or
test
std
inc
je
cld
pushf
sbb
fldcw
or
pop
push
xchg
push
push
test
loope
or
sub
stos
xor
mov
cmp
movsl
jge
andb
add
dec
add
add
sahf
sbb
in
xchg
inc
aas
xor
push
gs
rcrb
aad
js
repz
fisubl
push
js
fsubrl
sub
add
outsb
enter
mov
jno
enter
es
aas
mov
movsb
and
jle
icebp
and
xor
xchg
scas
push
test
adc
mov
outsl
sub
push
xchg
sahf
js
or
rolb
loop
loopne
stc
in
fs
jbe
ss
mov
cmp
mov
or
shll
fst
rdtsc
rcll
es
inc
xchg
or
into
sbb
dec
cmc
inc
or
xor
ds
pop
loop
call
sahf
cmc
imul
add
pop
data16
or
imul
sub
mov
or
sti
add
repz
mov
mov
loopne
das
lods
dec
sub
movsl
in
fadd
ss
repz
bound
in
aas
cmp
aas
and
subl
cmp
aam
orl
aad
test
sarl
xor
jb
stc
jbe
mov
inc
jecxz
sbb
clc
movsl
call
shl
adc
jmp
insb
dec
fidivrs
ret
pop
sarl
inc
loopnew
das
lcall
mov
add
cmp
mov
sti
scas
std
lock
cs
add
cmpsl
loope
pop
mov
out
pop
cld
push
adc
mov
cmp
pop
mov
adc
repnz
jbe
inc
or
aam
adc
in
es
add
dec
or
aaa
ljmp
nop
lods
ret
cmp
mov
popf
and
add
mov
jle
xor
lret
cltd
adc
je
push
mov
adc
add
mov
fsubl
dec
cli
mov
scas
stos
sbb
test
xchg
push
repnz
mov
ja
jne
pusha
xor
jb
or
xor
xchg
hlt
fmuls
mov
test
js
ja
lds
jle
inc
inc
mov
push
or
lret
outsb
pusha
mov
dec
mov
mov
out
jno
test
jns
pop
lods
in
jecxz
xchg
jo
lods
mov
adc
mov
xchg
jecxz
addr16
mov
mov
or
mov
adcl
jne
or
or
jno
cmp
pop
or
xchg
mov
and
jnp
mov
or
mov
push
jecxz
test
and
xor
insb
mov
adc
pop
sub
pusha
mov
jge
ret
into
pop
sarl
inc
cmp
cwtl
jae
pop
push
into
jnp
popf
ja
mov
or
fiaddl
stc
sbb
jne
imul
dec
scas
repnz
inc
push
test
and
lea
es
mov
incl
push
dec
insl
arpl
dec
repz
dec
inc
add
or
loop
int3
xor
rcrb
jg
ficoms
pop
pop
and
je
add
sbb
cmp
push
movsb
inc
movb
into
xchg
jecxz
les
mov
daa
loope
jle
in
mov
rclb
push
dec
jg
rorb
daa
or
jbe
pushf
jo
daa
jb
cltd
cli
mov
pop
mov
test
enter
mov
nop
cmpsb
jl
out
in
rclb
enter
pop
xchg
jbe
push
xchg
push
loope
packsswb
cmp
pop
mov
movsl
test
orl
int3
xor
scas
lock
add
pop
cltd
xor
hlt
fs
sahf
ja
pop
mov
jmp
cmp
jne
fcomp
sbb
aam
adc
dec
and
mov
hlt
outsl
mov
into
loope
inc
outsb
push
mov
lea
movsl
je
push
xor
push
jp
or
add
sar
dec
mov
sbb
sbb
movsb
pop
test
dec
and
loope
push
loop
xchg
jge
sahf
fs
jle
adc
cmp
cmp
outsb
dec
lock
pop
scas
cli
adc
and
test
adc
xlat
xchg
into
call
jae
pop
test
xor
bound
pop
add
jg
pop
push
fistl
pop
das
add
jle
mov
lods
lcall
xlat
andb
fidivs
mov
jae
std
sti
mov
pop
xlat
sbb
cmpsb
sarb
xchg
inc
mov
mov
les
inc
repz
daa
ss
scas
cli
repnz
out
in
out
enter
pop
dec
mov
imul
in
pop
jmp
mov
aad
repnz
nop
cli
xlat
in
aas
dec
adc
or
je
mov
jecxz
popw
adc
pusha
aam
or
xchg
fiaddl
addl
loope
pop
cmp
cmpb
das
jns
xchg
lret
loopne
and
lret
sbb
imul
lret
xchg
in
cwtl
mov
add
ja
icebp
mov
mov
mov
pushf
fdivs
sbb
sub
sub
and
lcall
jns
insl
mov
imul
sbb
popa
sbb
mov
mov
shlb
and
int
inc
paddusw
add
outsl
pop
cltd
dec
cmp
mov
mov
pop
fnsave
dec
xchg
test
sbb
shll
lea
out
pop
mov
xchg
lcall
call
sub
sub
repz
jle
mov
adc
dec
cltd
ljmp
loop
adc
cmp
inc
dec
popa
inc
or
pusha
fwait
popf
movsl
cmc
push
in
loope
add
imul
bound
js
in
outsb
mov
mov
add
pop
dec
push
addr16
add
jp
je
mov
mov
mov
dec
jno
mov
mov
mov
out
pop
arpl
jmp
sbbb
out
jbe
sub
loop
movsl
push
and
pop
stos
xchg
andb
xchg
jge
sub
or
jle
xchg
pop
in
cmc
mov
iret
aam
pop
ret
inc
pop
clc
dec
mov
inc
jnp
jae
js
push
xchg
xchg
insl
popf
sahf
xchg
cld
mov
mov
fidivrl
cmpsl
test
pop
shrb
xchg
scas
push
cmp
push
int3
cmp
adc
js
sbb
mov
pop
and
popa
scas
repnz
ret
adc
xor
or
inc
push
call
fidivs
sbb
xchg
int
push
insb
mov
movsb
shlb
pcmpeqd
sahf
test
imul
sbb
mov
jno
and
xlat
rclb
push
or
xor
lret
pop
ss
mov
xchg
xchg
or
inc
sbb
cmpsb
decl
inc
in
cmpsl
lcall
rcr
sbb
push
xor
sub
shrb
mov
mov
push
cmp
movsl
mov
and
inc
or
out
fwait
sbb
scas
adc
xor
pop
popa
das
lds
das
xchg
js
jae
pop
dec
sub
inc
jl
push
int3
mov
fadd
jne
sub
iret
outsb
mov
adc
jle
stos
jg
cwtl
dec
mov
sub
mov
add
iret
push
cmp
int
jns
sub
pop
fmul
ljmp
mov
lcall
mov
push
inc
xor
inc
outsl
shrb
lock
aaa
stc
xor
xor
adc
enter
bound
fsubrs
xchg
cli
inc
scas
xorb
sbb
cmp
pushf
sbb
sub
or
loop
aas
cmc
into
test
xor
psrlq
inc
lods
je
push
sub
adc
stc
into
add
mov
inc
clc
mov
orl
mov
push
pushl
mov
fiadds
sti
bound
cli
rcrb
loopne
std
out
dec
test
inc
lret
test
fsts
sbb
repz
xchg
jb
out
sbb
sub
je
adc
test
ret
pushf
popf
ss
mov
aad
lahf
cmp
in
stc
or
xchg
je
inc
jns
pop
idivb
loopne
xchg
sub
xchg
sbbl
hlt
mov
and
pop
pop
pop
mov
inc
xchg
lcall
pop
inc
pop
mov
cmpb
pop
inc
sti
divb
push
inc
std
ds
lods
cmpsl
fistps
mov
xchg
ss
insb
shl
lret
movsl
lret
sti
mov
out
js
jecxz
enter
cwtl
xchg
sub
jecxz
aam
das
dec
ret
loope
lea
sar
insl
fwait
adc
dec
and
xchg
icebp
lea
lods
cltd
add
mov
psrlw
push
push
add
sbb
cltd
orl
mov
add
ret
mov
fstp
adc
clc
pop
xor
xchg
sub
pop
lcall
out
mov
sbb
pushl
das
push
or
xchg
xor
and
mov
mov
push
test
mov
mov
dec
insb
inc
fistps
push
fwait
int3
scas
bound
nop
adc
add
test
mov
das
hlt
shll
rcrb
jge
in
dec
push
xchg
push
or
mov
popa
or
or
pop
pop
pop
cwtl
addr16
add
mov
xor
mov
popa
call
xchg
jne
push
mov
scas
and
sub
mov
xchg
dec
push
andl
push
sub
je
popa
mov
and
adc
insb
xchg
mov
scas
jle
enter
inc
stc
pusha
out
pop
mov
xor
lret
push
jl
push
in
jae
into
push
push
push
and
sbb
pop
pop
dec
fisubrl
xchg
in
push
imul
inc
scas
mov
sbb
adc
xchg
scas
movsl
dec
leave
mov
lock
lods
gs
arpl
mov
or
inc
and
aaa
xor
add
lret
ret
int3
or
sbb
mov
inc
or
fprem1
inc
shrb
mov
aas
lods
insl
cmp
cmpsl
shlb
into
ret
jbe
sbb
jge
mov
mov
fistpll
mov
jl
xchg
pop
add
add
jo
mov
inc
push
add
repz
pop
push
inc
test
dec
arpl
mov
push
enter
pop
adc
mov
xchg
loope
cmpl
mov
jne,pt
add
mov
orb
es
sbb
andl
xchg
jle
and
in
out
xor
mov
lds
push
daa
lcall
mov
outsl
in
sub
cmp
adc
pop
cmpb
and
out
xor
insb
mov
rcr
and
ss
cmp
mov
add
testl
mov
shrl
ljmp
jl
sahf
popa
or
adcb
and
loop
insl
xor
jmp
ljmp
pop
or
cmp
in
mov
sub
xor
aaa
cmp
test
or
inc
in
xchg
or
jecxz
aas
ja
adc
gs
imul
add
in
push
aas
retw
adc
lods
push
jl
add
cmpsl
mov
dec
jb
sti
adc
leave
sbb
je
loopne
add
jecxz
and
sbb
and
push
pop
and
out
adcb
xlat
inc
cmp
mov
add
pushf
cmp
loop
dec
push
mov
push
addr16
mov
nop
mov
ja
mov
pusha
jb
cmp
je
and
lret
sbb
lea
fsts
mov
push
mov
xorl
push
fstps
sbb
inc
sbb
cmp
das
aaa
push
shll
cmp
and
xor
divb
paddw
jb
cwtl
xor
cmp
jecxz
push
imul
cld
xchg
lock
lret
adc
mov
mov
xchg
lock
sbb
imul
sub
inc
movsb
aam
mov
fwait
es
repnz
insl
xorb
stc
mov
sbb
add
loope
dec
xchg
cltd
lods
add
leave
mov
push
std
fisubl
add
lcall
ljmp
cmp
mov
xchg
fldl
mov
clc
push
cwtl
xchg
pop
add
rorb
sbb
dec
clc
pop
inc
imul
ja
xchg
sub
ficoms
jle
call
movsb
xor
fildl
out
ret
test
out
cmp
jmp
test
jns
ja
cwtl
rorb
or
inc
jbe
test
pop
or
sti
jnp
push
xor
mov
lahf
dec
out
push
push
shlb
addr16
jns
and
cld
xchg
pop
mov
dec
mov
ret
addr16
nop
outsb
push
mov
call
mov
mov
jbe
jns
and
into
or
xchg
add
dec
jmp
push
mov
xor
mov
add
jg
fcoml
or
out
aaa
push
mov
add
insb
mov
xlat
jle
in
push
mov
mov
iret
xchg
mov
pop
data16
fidivl
push
fistpl
cmpl
ficompl
fiadds
sbb
mov
pop
scas
sbb
std
push
pop
pop
jbe
push
fimuls
pop
clc
scas
repnz
leave
sub
and
scas
lods
add
adc
loope
xor
repnz
lock
je
xlat
add
int3
hlt
nop
adc
lods
jne
sti
sub
lds
rol
lds
and
and
movsb
out
mov
adc
or
jge
in
sbb
sbb
cmp
into
jno
test
jl
pshufw
xlat
push
rorb
xor
cmp
or
adc
mov
pop
std
inc
cmp
sbb
jne
pop
enter
pop
push
test
mov
loope
lock
call
movsl
ds
or
movsl
cltd
and
fisubl
orb
sbb
add
xchg
mov
out
pop
pop
push
sbb
lock
cld
pop
inc
mov
stos
cmp
pop
fcompl
daa
jle
loop
je
push
sub
shlb
bnd
jmp
mov
test
mov
out
repz
jge
push
jne,pt
int
jo
sub
pushf
idivl
push
jmp
rcr
mov
push
cmp
adc
test
outsl
subb
outsl
jle
movsb
loop
scas
cmp
imull
fs
sub
cmp
lahf
mov
sar
pop
fdivl
sub
inc
jl
or
cmc
pop
dec
xor
inc
sub
jecxz
adc
push
imul
jnp
jl
movsb
inc
lahf
sahf
lods
dec
cmp
xlat
aas
iret
sub
xor
mov
mov
pop
sti
rolb
incb
out
gs
sbb
inc
icebp
loopne
flds
mov
xlat
xchg
clc
push
mov
xorb
lahf
mov
movl
imul
jmp
lret
jmp
loop
cs
int3
aad
es
nop
mov
aaa
aas
sub
mov
dec
addr16
je
push
pop
jecxz
loop
push
lea
mov
mov
out
addl
dec
fstpt
jns
dec
js
inc
movsb
sbb
loop
push
data16
fwait
iret
mov
lock
sub
sar
lret
mov
cmovs
fstp
push
mov
inc
loopne
cld
ret
lret
orl
ror
mov
push
pop
pop
push
cmpsl
sarb
push
cmpsl
sub
dec
push
aam
cltd
test
pushl
dec
insl
imul
iret
ljmp
shrl
mov
adc
sahf
imul
cli
shlb
push
adc
cltd
out
push
dec
test
inc
mov
pop
sub
testb
sub
xchg
lea
sbb
dec
jmp
lock
or
test
xchg
outsl
sarl
push
bound
xor
mov
inc
xor
pop
xlat
mov
aas
and
dec
into
test
mul
ja
cmp
dec
dec
test
or
sbb
fwait
sub
push
es
mov
sbb
pusha
inc
dec
jns
jb
in
add
addr16
jge
mov
jge
push
addr16
stc
fdivl
insl
mov
mov
dec
in
dec
sbb
jns
inc
mov
add
in
cli
pop
xchg
rcr
jle
cmp
in
loope
cmpsl
add
xor
xchg
or
sarl
push
fisttps
push
and
stos
insb
push
in
jnp
mov
mov
mov
mov
iret
icebp
ds
ret
mov
popf
addr16
inc
push
inc
clc
push
ficompl
aad
mov
lods
fcmovbe
pop
es
sbb
sbb
add
imul
sbb
push
xor
stc
imul
push
dec
push
leave
mov
into
xor
addr16
inc
mov
adc
push
loope
scas
mov
addr16
int3
fists
sub
lock
add
dec
shl
outsb
scas
add
lret
dec
out
push
movsb
jno
mov
mov
jno
jge
repz
dec
leave
lds
fldl
test
mov
or
mov
fs
cmp
push
mov
mov
fsubrl
lahf
adc
movsl
xor
faddl
inc
push
cmpsb
mov
mov
icebp
push
mov
push
dec
movsb
loope
addl
leave
pop
cmp
mov
mov
adc
and
inc
push
sbbb
cmpsl
sbb
sti
ret
sbb
stos
push
pop
pop
cmp
mov
lcall
lret
cmp
fisubrs
pop
lock
seto
jg
fwait
push
mov
dec
data16
bound
loope
out
push
inc
test
int
inc
xchg
sub
dec
ret
idivl
add
rcrl
mov
lahf
std
sahf
cmpsl
ds
jmp
into
and
pop
push
pop
stc
pop
xchg
jno
je
jne
aam
es
lea
cmp
pop
mov
out
pop
pop
cli
faddl
xor
mov
ja
xchg
into
mov
cmc
and
fwait
xor
push
bound
mov
subl
xlat
out
or
inc
lods
ss
push
push
xlat
jle
inc
sub
push
fwait
in
pop
dec
jle
outsl
out
push
arpl
movsb
loopne
inc
jecxz
mov
fnsave
les
ret
repz
fistps
fisubl
pop
mov
test
pushf
nop
test
xor
dec
nop
data16
aas
leave
mov
cld
dec
xchg
je
fadd
jecxz
jns,pt
and
mov
call
mov
stc
mov
movsl
sbb
lret
lods
fisubrl
inc
sub
inc
out
subl
adc
mov
mov
std
roll
mov
std
xor
push
cmpsl
faddl
stos
icebp
sbb
ss
in
test
lret
repnz
pop
mov
shl
mov
pop
and
add
sub
lret
lods
ret
mov
insl
push
out
mov
imul
out
pop
popa
jns
fisubrs
fadd
mov
and
mov
mulps
jecxz
sub
es
jp
push
out
enter
or
inc
pop
fstl
fprem
enter
add
mov
sar
sub
and
enter
call
inc
xor
call
rolb
xor
cld
mov
xchg
push
dec
xor
or
dec
cmp
das
pop
or
add
push
jns
sbb
aad
inc
out
int3
xor
pop
jns
arpl
xchg
sti
out
mov
cmp
mov
cmp
addr16
jp,pn
cmp
mov
add
mov
or
pop
fbstp
or
out
cmpsb
push
dec
jmp
lods
lds
push
cmp
sub
into
mov
nop
stos
arpl
pop
jno
insb
aad
arpl
out
aam
jne
or
lds
sub
push
stc
rol
lea
cmp
inc
jae
addr16
popf
cmp
dec
mov
test
inc
fiaddl
sbbb
sbb
movsb
add
loope
dec
push
call
or
repnz
pop
leave
sbb
hlt
lea
cmp
xor
or
mov
sbb
outsb
rcrb
iret
push
add
jb
pop
inc
negb
lds
daa
sar
pop
scas
in
shll
clc
cmpsb
xchg
cmp
or
cld
jmp
push
out
pusha
sub
dec
cmc
jge
out
sbb
mov
daa
fsubrl
cmp
adc
jno
mov
repz
stos
adc
xor
aaa
jmp
lahf
xor
dec
push
jnp
scas
test
mov
enter
mov
in
inc
cmpsb
xchg
enter
pop
into
lods
iret
push
mov
dec
sub
jg
cmp
lock
movsl
cmpsl
push
vprotq
add
mov
xor
dec
push
insl
xchg
adc
fs
jg
fs
pop
inc
testl
sub
cmp
jo
arpl
rclb
sbb
add
ljmp
mov
scas
add
xchg
fmuls
mov
sub
and
xlat
xchg
push
inc
dec
inc
int
mull
je
and
cmp
test
push
setle
int3
test
mov
outsl
cmp
adc
cmp
repnz
adc
and
test
and
push
cmp
adc
popa
cli
paddusb
cmp
cmp
or
ds
outsb
mov
dec
xor
ds
pop
pushf
push
adc
call
clc
add
push
push
lods
sbb
or
xlat
mov
cmp
mov
mov
repnz
push
lahf
pushf
incb
aad
loopne
xchg
inc
pop
or
dec
les
mov
push
rclb
sbb
adc
mov
xor
push
pop
fcomps
inc
mov
xchg
sti
mov
nop
inc
popa
sbb
push
push
int
push
into
scas
je
mov
int3
and
inc
lea
add
jb
push
mov
push
pop
xorl
inc
out
xchg
paddusb
xor
das
aam
mov
mov
inc
inc
sti
rcll
mov
in
cwtl
faddl
jbe
lock
sbb
lret
popa
in
mov
push
sub
in
and
inc
or
xor
or
cld
aam
push
add
int
jno
aaa
call
ljmp
xchg
pop
popa
nop
add
lods
inc
mov
stos
mov
inc
and
aam
xchg
inc
or
cmp
pushf
cltd
pop
hlt
pop
test
mov
mov
test
ja
aaa
clc
add
xchg
jecxz
rcll
and
inc
in
mov
dec
std
adc
std
sbb
ljmp
lret
sbb
or
outsb
xor
in
or
inc
outsb
test
test
lods
mov
dec
xor
and
sbb
ficomps
sbb
lds
lock
out
stos
push
mov
xchg
push
in
push
scas
xchg
dec
gs
das
push
mov
repz
hlt
cmp
dec
jp
sub
mov
cmp
mov
sbb
in
popf
jne
shr
sbb
jne
sub
insb
xchg
jns
xlat
jmp
ja
cmc
and
ss
fsubrl
sub
leave
pop
push
push
pop
mov
fwait
and
add
cmpb
mov
adc
in
jb
pusha
pop
cpuid
iret
scas
mov
ret
adc
push
mov
jle
sahf
jae
int
push
pusha
call
jno
xor
sti
fidivl
mov
and
xchg
inc
pop
imul
enter
xor
scas
mov
push
repnz
ret
nop
sub
hlt
fadds
roll
lock
push
sub
sbb
add
mov
mov
jb
je
lock
lea
lret
rclb
shrb
mov
cmp
out
push
outsl
jbe,pn
cwtl
jge
mov
xchg
daa
fistl
cmp
xor
mov
scas
lahf
int
sbb
xor
xchg
xorl
test
mov
mov
sub
insb
pop
or
fdivl
fwait
adc
out
cmp
jmp
movsl
scas
and
out
stc
addb
sbb
add
add
ret
jmp
rol
sub
xor
into
js
rcr
pop
ret
hlt
pop
lcall
sbb
sbb
outsb
sub
sahf
jecxz
mov
in
jg,pn
push
mov
mov
or
sub
ljmp
iret
nop
add
idiv
lretw
ffreep
xchg
mov
sahf
in
inc
leave
test
push
add
sbb
stc
mov
lds
jb
popa
ss
jg
clc
gs
shlb
out
das
xchg
cli
inc
sub
mov
fdivrs
jno
or
out
push
push
cmpsb
cmc
mov
enter
loope
mov
push
daa
imul
sub
iret
in
lods
add
in
mov
popf
xlat
cld
sbb
mov
in
cmc
jae
sti
int
jnp
test
push
inc
dec
pop
sbb
inc
sub
fldenv
mov
mov
xchg
inc
ret
scas
sbb
push
mov
mov
xlat
insl
adc
xchg
pushf
out
shr
or
xchg
idivb
lea
pop
lods
jle
and
imul
vptestmq
mov
in
mov
mov
ja
mov
dec
orl
insb
fisttpl
outsl
xchg
pop
ss
aad
cmp
inc
and
jmp
mov
sub
mov
int
or
testb
dec
cwtl
pop
mov
aaa
mov
insb
adc
inc
mov
lret
rclb
push
dec
mov
gs
lock
xchg
dec
pop
arpl
shlb
xor
fld
lods
xor
es
push
pop
insl
push
xlat
into
dec
in
xchg
xchg
sub
push
ljmp
cmp
pop
and
xor
rorb
mov
add
enter
outsb
test
icebp
mov
push
pop
push
xchg
cmp
add
add
sbb
leave
dec
pop
icebp
adc
mov
scas
mov
lods
push
mov
loop
into
add
sbb
insl
xor
xor
push
out
fiadds
add
test
pop
aas
rorb
out
inc
shr
aam
push
dec
cmp
mov
mov
test
mov
bound
push
cmpsb
jns
xor
in
xchg
adcb
push
sarl
scas
stos
adc
test
jp
shr
mov
xchg
dec
mov
mov
and
call
jae
dec
fldl
jmp
inc
push
inc
xorl
out
andb
js
or
les
pop
stos
dec
jne
and
cld
jnp
dec
jle
or
pusha
imul
adc
push
jp
ret
movsl
pop
inc
inc
aaa
inc
mov
dec
jae
ja
push
and
lods
mov
addb
xchg
and
inc
imul
mov
adc
lret
dec
dec
or
pop
cwtl
shl
and
arpl
sub
inc
or
stos
hlt
and
in
out
testb
sbb
ja
mov
dec
mov
xchg
lds
shlb
push
scas
mov
cld
outsb
cmp
jb
adc
push
rcr
mov
ja
sbb
stos
daa
fcmove
movsl
cmp
bnd
arpl
mov
stc
push
pop
add
jo
sub
lahf
jb
push
push
and
sahf
push
push
cmp
inc
je
into
cmpsb
adc
in
adc
pop
dec
sub
mov
loope
adc
sub
gs
ds
cwtl
movsl
mov
lods
and
stos
mov
sbb
cwtl
aaa
add
and
adc
add
mov
sarl
aam
pop
inc
jbe
lcall
loop
jns
sub
push
enter
cltd
shlb
ret
ret
cmpsb
push
mov
mov
and
inc
jb
dec
stc
ss
loope
push
cmp
mov
ror
rcrl
add
iret
adc
sahf
nop
mov
test
mov
outsl
cli
cld
loop
mov
xchg
fs
and
adc
cmp
mov
out
adcl
xor
jg
or
add
cmc
js
test
movsb
mov
fidivrl
xchg
imul
movl
push
pop
dec
lods
jmp
jnp
inc
movsb
dec
xlat
cmp
sub
push
lds
pusha
xchg
sti
jl
loopne
int3
pop
shlb
pop
mov
ret
inc
rorl
fsubl
fstps
sub
mov
mov
add
mov
sbb
ja
mov
push
movl
jp
int3
pop
mov
mov
sub
cltd
jecxz
nop
div
insl
aas
cmpsb
test
cmpsb
dec
inc
lods
cli
je
insl
adc
sub
inc
call
lret
or
mov
add
dec
xchg
adc
sub
jbe
inc
rcl
inc
aas
or
out
lds
pop
repnz
xor
in
les
dec
cwtl
pop
cmpsl
fsts
dec
icebp
sahf
jecxz
cld
outsb
repz
mov
mov
ds
xlat
or
lcall
rorb
lret
cmp
cmp
mov
insl
add
pop
mov
ljmp
lods
sbb
or
ds
cmp
aad
or
adc
bound
cltd
lret
and
mov
xor
ffree
das
jns
jbe
orl
push
pop
pushf
adc
stos
xchg
out
out
adc
xchg
mov
or
ljmp
jbe
insl
inc
mov
xor
lret
xchg
mov
dec
mov
dec
push
push
ja
repz
insb
fadds
add
or
test
sbbb
dec
aam
inc
pushf
xor
es
jnp
imul
icebp
in
addr16
xchg
call
es
push
cmc
cmp
bound
sbb
orl
jae
mov
sub
fildll
and
jmp
or
jo
out
xchg
icebp
sub
mov
add
and
jg
aam
adc
repnz
in
pusha
dec
pusha
xchg
loopne
iret
insl
inc
sbb
pop
jns
sub
jae
gs
out
mov
scas
dec
jb
test
leave
inc
add
pop
ficompl
xor
out
subl
add
push
mov
popa
mov
repnz
stos
xchg
hlt
outsb
sbb
imull
or
cmpsl
push
aaa
stos
les
xor
imul
mov
pop
shlb
inc
lds
pop
xor
dec
es
scas
xorl
lods
movsb
popf
repnz
fcoml
jbe
mov
cld
adc
je
fnstcw
inc
jno
in
dec
jl
and
dec
testl
xor
dec
ljmp
hlt
cld
sub
and
pop
cmpsb
xchg
aaa
vpsubb
enter
pop
mov
das
push
aas
adc
leave
aaa
cld
sub
xchg
lcall
inc
jmp
and
cli
movsl
repnz
sbb
hlt
add
xor
adc
pop
fyl2xp1
stc
js
imul
jnp
lcall
fdivl
sub
lea
outsb
inc
add
sbb
jnp
out
mov
jno
mov
popa
divb
fldl
int
outsl
push
idivl
loop
repz
mov
dec
mov
fstpl
adc
xor
roll
imul
add
stc
xor
push
jnp
adc
ss
push
outsb
cmp
inc
pusha
cmp
mov
xor
push
cmp
pusha
inc
or
mov
pop
ret
aas
sahf
out
xor
dec
and
adc
inc
imul
xchg
in
inc
sub
aad
lcall
dec
xor
jp
ret
xchg
das
cs
in
lret
in
sbb
sub
out
andb
fidivrs
loop
sbb
aad
fsts
cmp
shll
sbb
xchg
cmp
rorb
idiv
xchg
and
xor
jmp
sbb
cs
dec
add
inc
stos
lret
cmp
dec
mov
inc
xchg
adcb
sub
inc
push
call
mov
fwait
mov
addl
imul
push
inc
mov
inc
das
jno
pusha
mov
subl
roll
xchg
fwait
std
iret
jp
cwtl
xchg
jmp
das
mov
jne
test
cltd
or
mov
xor
lock
adc
les
rcrb
in
icebp
add
aam
ffreep
ret
lret
es
cmp
lret
addr16
ljmp
lods
xchg
mov
fdivs
and
movsl
jmp
pmullw
aam
jne
icebp
cltd
add
xchg
sbb
mov
clc
mov
cltd
xchg
push
pop
sbb
imul
and
pop
inc
jecxz
stos
test
push
out
je
insb
xchg
shl
push
imul
mov
or
mov
inc
xchg
sub
xchg
das
test
push
dec
ja
sub
dec
or
inc
add
sahf
or
fists
add
fsubl
out
dec
lds
adc
lods
xchg
aaa
jne
mov
mov
mov
and
push
cmp
jp
cmp
sub
mov
dec
mov
hlt
jne
jmp
fisttps
or
jmp
fsubrs
orl
lret
sub
mov
jmp
stos
das
xor
xchg
mov
jnp
int
jle
shl
in
insl
int3
pusha
sub
mov
ret
jle
mov
or
je
sub
into
popf
shrl
mov
orb
push
hlt
int
into
stc
sbb
pop
lds
jae
scas
insl
scas
mov
adc
and
repnz
cli
and
hlt
mov
push
lret
loop
or
mov
sbb
dec
add
push
int3
jbe
sbbl
test
lds
scas
shrl
inc
and
cmp
xlat
cmp
xor
jbe
cmp
mov
pop
movsb
daa
fdivs
imul
int
jno
cltd
sti
jl
movsb
cld
dec
out
push
and
xor
lahf
mov
jecxz
xchg
stos
test
jmp
add
xchg
mov
pop
mov
jns
fadd
pusha
pop
lret
push
jle
loope
jle
sub
pushf
mov
xchg
jae
push
cltd
movsl
ret
test
and
jae
popl
mov
sbb
out
xor
cmp
mov
push
xchg
adc
inc
add
or
fcompl
aaa
sub
outsb
cmpsb
cmpsb
push
adc
push
adc
inc
imul
insb
popl
sub
repnz
push
jae
int
mov
sub
imul
mov
sub
dec
mov
push
push
sbb
jno
test
mov
mov
jl
stc
in
dec
cli
sub
je
pop
mov
ss
fadds
cmp
jp
fisttpl
xor
fiaddl
or
add
cmc
push
mov
loopne
sbb
stos
adc
and
imul
fsubs
adc
lods
mov
mov
xlat
mov
mov
mov
ss
sti
fiaddl
gs
loopne
push
and
inc
arpl
pop
fxch
popa
mov
pause
mov
sbb
add
in
aas
xor
pop
stos
sbb
adc
pushf
out
mov
cs
mov
pop
nop
lods
shlb
jb
inc
or
sbb
je
jb
jecxz
push
xor
xor
mov
mov
mov
sub
insb
imul
mov
into
push
fiaddl
sbb
das
push
aaa
add
cmp
movsl
rcl
mov
mov
cwtl
push
imul
dec
outsl
icebp
dec
cmp
and
sbb
lock
fsub
adc
push
in
xchg
rorb
shlb
je
sub
loop
aam
mov
ret
pop
sete
fstps
insl
sar
pop
dec
or
xchg
jmp
ret
in
in
lods
icebp
dec
fidivrl
sti
add
jecxz
inc
inc
jo
xor
cld
add
fucomp
test
mov
add
adc
outsb
xchg
sbb
xchg
pop
xacquire
out
xlat
mov
xchg
sbb
push
inc
push
cmp
xor
inc
stc
or
lock
xor
cli
mull
push
jp
dec
cmp
dec
test
or
ja
out
dec
cld
pop
cli
inc
xchg
fwait
xchg
or
jmp
pushw
test
push
add
pop
fwait
sub
shrb
in
adc
xchg
cmpsl
mov
mov
mov
fbld
addr16
jo
jp
add
mov
dec
dec
insb
sbb
stos
mov
xlat
rcr
jecxz
xchg
lds
jmp
mov
inc
xor
sub
mov
icebp
push
pop
push
subb
xor
insb
in
xchg
arpl
out
push
jle
mov
int
movl
fadd
in
mov
pop
out
cmp
dec
jae
or
push
insb
jmp
popf
std
cmp
push
inc
cli
pusha
fiaddl
outsb
push
xchg
and
mov
imul
scas
rolb
push
dec
lods
adc
push
adc
repnz
and
leave
insb
mov
sbb
pop
testl
punpckhbw
mov
sub
sub
sbb
add
movsl
lds
xchg
out
jo
mov
repnz
orb
bswap
and
add
movsb
mov
les
push
pop
jbe
push
movsb
jge
jmp
daa
xlat
xor
mov
xor
pop
clc
loope
aad
testl
cmp
push
jo
mov
and
pusha
sti
test
mov
add
cmpsb
lcall
enter
pop
or
push
jb
loope
jmp
fidivrs
ds
lea
movsl
lret
and
rolb
aad
and
inc
test
cmp
push
pop
daa
pop
jns
lea
pop
mov
mov
fadd
sub
outsb
or
adc
xor
mov
mov
inc
mov
fildll
int
fidivrs
sub
sbb
test
loop
lcall
data16
jns
dec
test
sbb
sub
lods
outsl
xchg
dec
add
sbb
inc
stc
mov
dec
push
adc
push
push
cmp
mov
popl
push
data16
push
mov
cmp
sahf
cmc
or
in
into
fnsave
nop
xor
dec
adc
scas
jnp
imul
outsb
incb
gs
fldt
ret
mov
pop
ja
clc
mov
scas
mov
mov
mov
gs
pushf
inc
loopne
testb
inc
jno
jbe
mov
add
adc
pop
and
sbb
cmp
adc
mov
out
fs
jmp
xchg
jmp
and
aad
outsb
dec
sub
xorl
dec
test
je,pt
repnz
jecxz
cli
mov
lea
push
call
or
cli
mov
lret
push
aam
fcmovnb
popf
pop
ret
inc
push
mov
inc
nop
inc
cmp
das
push
mov
stc
out
in
shll
stc
shl
iret
sbb
cwtl
or
sub
icebp
and
jbe
out
mov
lret
mov
divl
stos
fst
pop
fists
rolb
pop
shrb
fbld
fwait
loopne
ret
call
neg
insl
mov
inc
rclb
cwtl
mov
add
adc
adc
mov
and
fldt
jl
fwait
push
cltd
jo
std
test
popa
test
sahf
lcall
sub
je
push
imul
punpcklwd
fldcw
cmp
xchg
pusha
daa
add
in
decl
mov
or
xchg
mov
push
pop
cs
lahf
call
movsl
ja
es
dec
out
jnp
inc
cs
inc
fwait
jae
or
dec
rolb
ja
icebp
out
push
and
add
jnp
in
jecxz
xchg
aad
mov
jle
mov
pop
lcall
jp
js
mov
outsb
lods
mov
dec
aad
dec
dec
dec
leave
jne
imul
int3
xchg
ffreep
in
adcb
data16
or
pop
sub
mov
adc
inc
jl
adc
stc
xor
jnp
aam
jle
es
mov
pusha
bound
push
iret
mov
xor
inc
mov
cmp
xchg
push
das
mov
popf
and
push
mov
jle
pminub
testb
call
inc
sahf
scas
xor
rclb
mov
mov
lcall
hlt
dec
xchg
enter
and
jb
or
xchg
ss
call
sub
xor
mov
dec
clc
stc
pop
pop
das
mov
lds
std
dec
scas
push
inc
mov
push
test
dec
pop
push
movsb
ds
mov
jbe
out
jge
dec
test
imul
cmp
pop
arpl
orb
fmuls
call
mov
dec
lahf
out
fdivs
push
insl
pusha
dec
test
adcl
paddsw
xor
pop
dec
pop
sti
push
sbb
loope
jns
sub
and
cmp
cld
cmp
mov
movsl
shll
push
pop
loopne
andb
add
notb
fisttpl
mov
decl
pop
dec
arpl
pop
movsb
inc
lcall
test
jb
sub
xchg
outsb
insb
lds
adc
or
xchg
jg
fsub
mov
or
mov
mov
cwtl
push
push
mov
sub
xor
mov
push
lret
and
mov
lea
mov
addl
jbe
xor
stc
pop
fstp
fs
int3
adc
std
push
cmp
cmp
ja
mov
mov
xor
mov
cmp
sti
or
pop
xchg
cmc
xchg
sub
xor
psubb
aam
adc
mov
pop
add
lods
xchg
pop
pop
shrd
les
xlat
aaa
icebp
sbb
iret
daa
lea
or
in
cmp
js
pop
fs
loopne
scas
std
dec
cmp
mov
fnstcw
pop
test
mov
std
out
xchg
adc
sub
ja
popa
cmp
jbe
adc
or
pushf
cmp
sar
cs
imul
arpl
data16
and
ret
jb
stc
jb
pop
sbb
cmc
jbe
lods
xor
ss
mov
mov
jl
mov
in
pop
dec
inc
adc
test
pop
gs
inc
fmul
dec
inc
stos
jge
das
push
popf
mov
test
xor
shll
xchg
not
lcall
sub
mov
cli
es
sbb
sti
add
mov
inc
sbb
lock
loop
pop
lahf
in
jae
sub
mov
ret
ja
mulb
filds
stos
insl
mov
or
xchg
rclb
ljmp
dec
lods
test
or
inc
or
jbe
in
pslld
inc
add
sub
popf
mov
ret
push
popa
adc
frstor
cli
clc
gs
icebp
xchg
clc
sbb
mov
arpl
popf
lds
cli
mov
xor
shr
sub
mov
push
cmp
push
call
inc
ja
ljmp
or
jns
fwait
mov
jp
add
xchg
xchg
clc
outsl
jns,pt
call
mov
rorl
mov
push
insb
pop
addr16
mov
lds
mov
dec
xor
jne
xchg
mov
lcall
jmp
cmp
cmp
xor
lahf
jge
sub
stos
into
push
push
xlat
mov
repnz
in
insb
ret
jnp
jle
jle
pop
inc
in
in
or
jb
iret
jmp
pop
fistpl
adcl
xchg
fcoms
repnz
sbbb
je
inc
std
fistps
imul
sbb
loope
imul
loopne
fsts
adc
cwtl
inc
mov
in
push
test
pop
popa
aad
lcall
inc
mov
jecxz
push
cmpsl
aas
and
ljmp
inc
int3
aaa
pop
into
pop
mov
lds
sbb
sarb
iret
and
pop
sub
add
xor
pop
jbe,pt
jmp
jge
js
sbb
insl
daa
aad
pop
cmp
jo
out
clc
jl
sbb
dec
mov
pushw
lret
xchg
inc
xor
mov
fstpl
inc
xchg
lret
test
dec
addb
push
cmpsb
mov
inc
es
pop
xchg
push
jne
loope
sub
sub
movsb
cmp
pushf
xlat
fstpt
shll
movsl
fdivs
xor
mov
sub
inc
and
add
cld
mov
stos
push
fs
ret
pop
jne
int3
js
mov
mov
icebp
pop
push
mov
sub
or
inc
in
adc
out
fnstcw
test
mov
mov
add
icebp
mov
pop
nop
inc
int
sub
pop
inc
divl
daa
lret
xlat
rcll
push
mov
ret
mov
xor
test
repnz
push
mov
loop
and
fs
pushf
push
adc
ss
mov
loop
fdivs
dec
in
out
xlat
sar
mov
sub
sub
or
dec
and
mov
jns
xor
mov
jne
mov
push
leave
xchg
lcall
andl
loope
add
sub
mov
inc
jo
mov
ja
sti
out
jnp
test
push
cmc
loopne
jnp
dec
cltd
out
mov
fnstenv
xchg
lds
test
xchg
rcr
mov
mov
test
mov
mov
adc
jge
call
inc
mov
dec
push
jl
cld
fnstcw
ds
rcl
jb
mov
mov
jecxz
scas
sub
cmp
rorl
shll
mov
mov
cwtl
adcl
mov
pop
or
inc
inc
int3
dec
das
in
aad
mov
pop
jne
and
out
sarl
fimull
imul
cmpsl
aam
mov
loope
cmp
cld
inc
stos
ror
push
fmuls
sub
cli
addr16
sbb
rcrl
push
mov
xor
jecxz
push
push
hlt
bound
insl
mov
dec
imul
sub
popa
xor
shrb
xchg
pop
shll
push
gs
add
hlt
leave
cltd
fiadds
test
jg
push
and
and
mov
repz
mov
xchg
or
sarb
mov
push
pop
rep
push
stos
inc
and
out
add
ficoms
inc
mov
xor
cmp
xchg
lahf
cltd
xor
mov
mov
pop
lds
test
fs
dec
aad
ret
mov
or
mov
push
xchg
sub
add
lods
sbb
out
les
jns
clc
mov
xchg
test
jae
sub
xor
dec
aas
addr16
cwtl
jp
andb
mov
mov
es
dec
adc
add
jl
add
fcoml
ljmp
or
aam
and
dec
sub
cmpsb
xchg
push
push
mov
stos
sti
mov
and
repnz
insb
sub
in
lcall
mov
pusha
cwtl
leave
lods
iret
dec
pop
add
inc
and
lret
nopl
push
int
mov
sub
iret
leave
push
inc
jl
ficompl
test
ds
imul
scas
stc
enter
jl
adc
pop
repnz
enter
test
hlt
in
call
inc
mov
aas
add
iret
test
data16
or
out
add
mov
and
repnz
mov
jnp
lds
fwait
inc
scas
fdivl
mov
movsb
push
cmp
push
addr16
test
jge
mov
fistpll
sub
jnp
lahf
jno
mov
jl
in
mov
and
mov
scas
es
xchg
test
jo
into
mov
push
adc
stos
test
pop
cmp
into
mov
and
sub
jnp
cmp
repnz
pop
movb
push
test
sub
cli
cmp
jmp
movsl
fildll
mov
pop
push
popl
pushf
push
sbb
mov
cs
mov
test
pop
pushf
sbb
jne
cmp
addr16
ret
fmul
dec
sbb
cmp
stc
outsb
xor
rol
stos
push
jg
jnp
mov
jo
mov
es
xor
and
loop
pop
xlat
mov
sub
divl
sub
cmpsl
push
aam
std
xor
jmp
pop
mov
cmpb
js
xor
test
aam
and
enter
push
rcl
fwait
or
cmpsb
test
mov
inc
fsubr
ja
out
inc
dec
cli
cmpsl
cmc
call
cmp
xor
into
xchg
lea
dec
sub
clc
into
adc
mov
fcoms
daa
sbb
adc
data16
lods
push
pop
and
and
mov
fildll
mov
ret
mov
loop
lcall
mov
pop
loopne
pop
fimull
lret
scas
fucomp
fldenv
rcl
repz
adcb
xchg
mov
cmp
jmp
cmp
enter
gs
mov
ss
jne
cs
mov
xchg
nop
sbb
adc
jl
dec
or
imul
cmp
pop
lea
xor
mov
out
subl
adc
pop
stos
mov
inc
ljmp
das
int3
adc
mov
push
add
rorl
push
cmpsb
notb
ja
adc
fstps
rcrl
jge
test
pop
cld
jo
push
lret
call
mov
mov
lock
inc
sarb
lahf
sub
ret
cld
pop
sti
ret
xchg
cltd
gs
test
outsl
dec
mov
pop
ficoms
icebp
das
popa
dec
pop
cld
lods
popf
push
xor
and
mov
arpl
dec
mov
mov
insl
add
adc
mov
xchg
mov
hlt
cs
out
mov
scas
pop
js
fstpt
jle
jnp
lahf
sbb
jge
pop
sahf
bound
das
dec
sub
arpl
loope
mov
mov
daa
pop
or
or
and
mov
pop
movb
mov
sahf
dec
enter
repz
or
pop
lahf
fwait
add
cli
push
xor
aaa
add
enter
mov
add
jns
lods
fnsetpm(287
sbb
xor
inc
cmp
mov
lret
lds
xor
arpl
adc
mov
xchg
inc
pop
dec
clc
mov
mov
and
fbld
and
xchg
adc
loope
rclb
push
sub
movsl
test
sub
mov
xor
stos
outsb
mov
insb
cwtl
insl
loope
out
sbb
gs
mov
xor
iret
cmpsl
cmp
ret
lods
pop
ret
scas
push
inc
push
pop
push
js
xor
or
jle
iret
pop
setno
pusha
imul
jae
pop
xor
push
or
xchg
mov
xchg
mov
fwait
hlt
xor
icebp
inc
mov
xorb
cli
gs
and
ror
add
adc
or
mov
stc
lds
mov
mov
mov
jb
movsb
xchg
jno
jbe
push
test
sbb
dec
outsl
cmp
adc
mov
push
xchg
lods
lea
push
xchg
lahf
dec
push
lods
push
out
sbb
aas
pop
sub
faddl
ja
cmpsb
cmpsb
jbe
in
bound
cs
add
dec
test
push
push
sub
and
cli
fcoms
sbb
movsl
out
push
and
cltd
sub
fstl
sbb
add
xor
leave
dec
shr
ret
shlb
jns
adc
mov
sub
fdivl
ljmp
sbb
adc
popf
test
jg
push
jno
or
mov
rcl
jecxz
js
ja
push
push
pop
xchg
dec
int
insb
cs
jecxz
div
aam
lret
xchg
sarl
std
mov
jne
sbb
cmp
sahf
add
pop
dec
adcb
outsl
adc
and
call
add
cld
adc
xchg
ss
repz
test
ljmp
loop
xor
jg
xor
test
int
test
lea
xor
test
pop
mov
or
sti
out
imul
or
sahf
out
shrl
outsb
or
hlt
lahf
or
sub
mov
dec
aaa
inc
inc
and
rcr
or
mov
dec
push
stos
mov
mov
jnp
fwait
sub
xchg
pop
fldenv
sub
adc
mov
inc
adc
dec
and
insl
cmp
push
and
aad
clc
mov
incl
lret
jb
mov
dec
test
je
cmp
jecxz
jb
aas
stos
adc
add
jae
lds
cltd
mov
jge
mov
lods
jp
dec
add
jle
andl
dec
rolw
filds
cmpsb
clc
das
stos
push
out
in
xlat
sarb
and
mov
lahf
std
mov
lahf
push
cmpsl
shlb
mov
jg
mov
lret
dec
push
in
mov
sbbb
lahf
adc
sub
rcll
ret
and
cmp
push
pop
dec
dec
mov
fs
fs
popa
pop
jmp
add
mov
push
jle
inc
sbb
scas
add
bound
dec
push
test
lods
adc
fst
jg
clc
push
xchg
and
ss
shll
cmp
push
stos
push
xor
out
movb
xchg
jl
fstl
clc
idiv
pusha
dec
xor
dec
shlb
sub
or
cmp
or
ja
dec
push
dec
mov
mov
or
xchg
push
xlat
bound
add
jecxz
out
adcb
mov
jne
pop
push
sbb
cmpsl
jne
xchg
adc
popf
mov
orb
andl
pop
xchg
call
jp
pop
mov
mov
add
and
mov
int
xlat
mov
push
filds
lret
xchg
in
inc
jmp
lcall
out
in
sub
pushf
rclb
xor
and
in
insb
add
jnp
adc
jle
add
in
lock
into
mov
iret
push
sbb
cmp
mov
xchg
jae
push
adcb
mov
mov
jp
cmp
sbbb
fcomps
xor
adc
scas
mov
notl
bound
repnz
insl
leave
mov
adcl
out
jo
roll
or
cmpl
or
je
add
mov
pop
sbb
ficomps
sarl
mov
scas
lcall
cmp
inc
aam
push
adc
in
jbe
mov
jge
pop
inc
sbb
jg
shl
pop
cmp
cli
stc
jno
lcall
add
je
je
mov
pop
loopne
jo
dec
adc
mov
sti
mov
inc
in
movsl
push
cmpsb
sub
dec
enter
pop
inc
lds
push
mov
in
sub
and
cmp
incb
movsl
in
inc
das
and
push
mov
lock
sbb
pop
mov
inc
push
jo
pop
jecxz
or
sub
fnstsw
mov
pop
cmp
imul
push
fisttps
outsb
clc
jb
adc
js
push
mov
test
js
lcall
xchg
adc
outsb
or
divl
xchg
sti
rcl
inc
mov
rcrb
inc
lcall
mov
arpl
bnd
loop
cltd
lret
stc
ss
fs
push
cmp
ss
xlat
cmp
arpl
mov
xor
mov
mov
cmp
dec
test
mov
lods
xor
pop
shrb
adc
inc
inc
imul
inc
xor
xor
pushw
ljmp
and
xlat
xor
imull
fwait
xorl
in
mov
xchg
jge
in
cmpsl
movaps
pop
cmp
nop
inc
aad
dec
fsts
sub
adc
xchg
sbb
sbb
arpl
fadd
cmp
mov
pushf
jmp
sub
aad
sbb
pop
aas
sahf
push
into
jb
iret
bound
enter
pusha
jge
jmp
aaa
adc
inc
scas
divb
shrl
test
dec
out
dec
lods
xor
inc
clc
jmp
pop
xor
das
mov
out
test
and
into
in
lods
ss
fmull
std
pusha
fildll
cwtl
mov
mov
sarl
ret
stos
xchg
aam
lret
mov
add
mov
jne
lock
jp
jp
dec
shlb
jecxz
sub
mov
popa
es
sbb
cmp
add
xchg
arpl
ljmp
subb
add
and
loop
orb
mov
add
out
cltd
xorl
leave
inc
jbe
test
adc
std
mov
clc
push
jg
xchg
add
sarl
fs
or
pop
dec
xchg
ret
testb
out
popf
jmp
dec
xor
adc
xor
data16
lea
xchg
xchg
sbb
int
test
lock
adc
dec
dec
scas
sti
push
inc
and
and
mov
fwait
pop
xchg
test
add
decb
out
popa
pop
pushf
bound
jns
add
in
in
fstl
int
jae
sub
shlb
in
das
jp
pop
out
mov
and
outsb
mov
sahf
dec
mov
fxch
mov
ret
aaa
fbld
push
xchg
mov
iret
jmp
gs
xorl
out
mov
cmp
xchg
push
test
mov
stos
push
push
leave
and
insb
outsb
push
jnp
dec
int
jle
mov
adc
dec
iret
gs
ret
sbb
outsb
leave
inc
in
push
dec
jae
arpl
push
incb
push
mov
stc
fsts
xor
fs
sbb
xor
imul
xor
cmc
push
pop
adc
into
out
cmp
ss
shl
rcrl
jno
popf
inc
les
or
decb
or
or
leave
hlt
add
in
xchg
int3
jecxz
sbb
fiadds
test
shlb
scas
jns
mov
dec
mov
cmp
imul
cmc
push
cmp
lcall
xor
repz
into
scas
daa
shl
sub
adc
test
inc
or
movsl
dec
outsl
push
adc
push
xchg
les
and
xchg
push
mov
test
js
lcall
sub
in
xor
pop
pop
sub
push
jmp
loope
pusha
fisubrs
repnz
ds
les
xor
mov
sbb
mov
add
pop
jg
out
push
into
push
xor
jecxz
js
in
in
mov
xor
push
in
sub
leave
in
sub
rcrb
addr16
sbb
push
jb
jg
push
hlt
mov
adc
mov
xchg
inc
jo
gs
int
mov
mov
jl
lret
lods
shrl
mov
mov
test
filds
loop
jg
stc
in
data16
es
adc
add
cmp
push
jbe
out
xchg
js
inc
flds
cmp
cmp
into
das
jno
cmc
ja
dec
xor
aaa
cmpsb
pop
icebp
int3
xchg
adc
xchg
add
or
mov
pop
xlat
jb
lcall
sahf
in
and
scas
sti
mov
in
xchg
gs
mov
adc
inc
call
add
icebp
or
cmp
fbld
mov
mov
test
adc
rol
pushf
xchg
test
jmp
test
jno
sbb
mov
cmp
inc
pushf
dec
jb
cmpsl
je
fadds
jecxz
inc
add
aaa
test
mov
push
mov
push
jmp
repnz
fndisi(8087
inc
cmp
cmc
gs
jg
inc
inc
xor
ret
loope
mov
cmp
cmp
popf
sar
push
loope
pop
pop
lahf
std
pop
adc
insl
daa
popa
cmpsl
rclb
daa
icebp
sub
mov
lret
es
mov
xchg
mov
imul
cltd
pop
std
shl
add
sub
lds
outsb
add
and
movsb
dec
mov
outsb
xchg
mov
and
popa
lea
lods
fimuls
icebp
mov
lock
js
dec
mov
int
add
push
clc
test
inc
and
xor
frstor
mov
mov
mov
pushf
daa
sbb
pop
lahf
cmp
cld
dec
mov
mov
jge
inc
cli
sub
add
pop
xor
imul
lahf
repz
mov
adcw
inc
imulb
sarb
dec
mov
sbb
or
pop
and
sbb
icebp
mov
sbb
out
inc
movsb
ds
xlat
in
jns
mov
push
xchg
scas
dec
xchg
mov
gs
cld
mov
adc
pop
in
mov
jmp
dec
mov
xchg
mov
jne
call
jb
cmpb
mov
pop
xchg
xor
sahf
out
iret
imul
push
push
adc
jne
jae
push
insb
flds
inc
jnp
dec
pusha
jle
or
in
out
pusha
add
dec
iret
in
mov
jno
test
ret
mov
xor
mov
push
shl
popf
push
adc
gs
js
mov
call
dec
sbbb
ljmp
adc
scas
test
lods
push
cmp
or
sbb
cld
repnz
sub
lods
lods
hlt
adc
addb
inc
movl
dec
push
bound
or
mov
int3
into
dec
pusha
pop
jns
ljmp
shlb
aas
enter
lea
xchg
xor
lods
push
mov
rol
jge
mov
ret
mov
inc
decl
jl
jne
dec
fimuls
push
cmp
icebp
xor
jnp
aam
test
cmp
test
inc
jbe
inc
or
data16
das
xor
in
pop
dec
fcmovne
mov
fcoms
ret
push
lret
cwtl
popf
sub
cwtl
cmp
pop
cltd
or
cmpb
sti
call
or
adcb
push
sbb
clc
add
push
repnz
dec
cs
cmp
js
mov
pop
cmp
enter
loop
cmp
in
fdivl
sub
mov
outsb
mov
dec
outsl
shrb
xchg
jg
repnz
mov
mov
mov
xchg
imul
jnp
int
lock
sub
mov
lret
aam
add
fmull
movsb
dec
sahf
out
xchg
andb
psrad
cltd
cwtl
stc
movsb
icebp
sbbl
popf
pushf
ss
jns
and
bnd
cli
jae
or
out
cwtl
mov
or
shrb
push
inc
cmc
ds
xor
scas
rcrl
jno
adc
imul
mov
add
jns
jo
shrb
dec
dec
xlat
mov
loope
andl
in
mov
or
sub
ljmp
cmpsb
mov
inc
sti
and
add
cld
aad
repz
adc
fnstenv
fadd
aaa
sbb
pop
inc
push
push
pushf
aas
cmp
in
aas
cs
add
aad
xchg
jmp
test
aas
fsubl
jb
icebp
out
jmp
movsb
jecxz
pop
repz
dec
stos
mov
call
inc
and
orl
fisttpll
aaa
stos
test
inc
dec
test
mov
repnz
pop
and
or
mov
std
scas
and
cwtl
sub
cmpsl
iret
in
cmp
icebp
add
sub
sbb
sbb
xchg
mov
mov
daa
and
sub
push
ror
push
sbb
mov
cmp
ret
shll
es
ret
xchg
jecxz
dec
scas
repnz
ljmp
pop
lods
dec
lcall
adc
lret
jno
mov
sub
pop
add
mov
cltd
icebp
outsb
movsl
test
lcall
repz
fisttpll
into
clc
adc
sbb
sub
addr16
pop
dec
jge
stos
jmp
jge
out
push
lahf
add
sbb
test
stos
push
sub
out
fbstp
aam
mov
imul
test
xchg
ja
push
stos
dec
xchg
out
inc
dec
cwtl
adc
or
fwait
mov
fisubs
add
xor
adc
pop
xacquire
cltd
data16
call
adc
push
add
mov
addr16
loopne
jp
push
mov
shll
mov
bound
cmp
jne
pop
fs
mov
fistps
mov
mov
aam
xchg
sbb
out
outsb
or
lea
push
push
push
dec
jle
cmp
push
and
xchg
jnp
mov
in
ja
pusha
lahf
cmpsb
iret
iret
and
out
test
push
inc
add
cwtl
push
test
leave
mov
imul
push
ficompl
pop
addr16
dec
pop
imul
in
call
xor
repz
test
stos
pop
xor
leave
and
repz
pop
push
arpl
xor
hlt
imul
and
or
push
aaa
int3
mov
repnz
mov
mov
rcrb
scas
aaa
push
lea
outsl
push
adc
movsb
or
pop
jbe
aad
addb
adc
iret
stos
or
jp
inc
jno
add
mov
adc
or
push
imul
movsl
jae
inc
push
xor
inc
test
push
pop
cmp
leave
js
mov
sbb
cmc
imul
negl
loope
push
lcall
or
movsl
sub
movsl
add
and
pop
pop
cwtl
test
lea
gs
xor
push
pop
pop
test
pop
mov
aam
sub
loop
xchg
andl
jecxz
mov
adc
or
xor
mov
and
daa
push
imul
int
cmp
sub
xor
or
add
mov
arpl
dec
fstpl
add
sti
outsl
pop
in
mov
movsb
stc
pop
mov
adc
insl
jns
cmc
inc
mov
fcoms
mov
cmpsb
lahf
adc
xchg
xchg
out
mov
cmc
add
cmp
pop
das
sbb
adc
sbb
adc
in
push
add
sub
repz
into
lods
fsubrs
or
mov
mov
stc
clc
aaa
sbb
dec
into
fsubl
lds
dec
rcll
push
cli
fcmovu
mov
sub
repz
outsl
pop
xchg
gs
or
adc
ja
mov
xor
adc
fwait
jne
ds
and
lcall
nop
pusha
sbb
stc
jb
shll
pusha
lds
je
lds
jecxz
sub
dec
xchg
xchg
lea
sar
add
mov
mov
jmp
fstpt
cmp
inc
lea
inc
push
jg
mov
test
stos
lods
rcrl
fxch
std
push
sbb
popf
cmpsl
into
lret
popa
mov
fildl
cld
inc
jae
lret
add
xor
mov
cmpb
xor
xlat
sub
sub
push
cmp
pusha
add
insl
repnz
ljmp
add
into
int
ss
fwait
and
mov
add
mov
pop
add
scas
ficomps
ljmp
push
mov
out
jb
mov
xchg
jbe
sbb
mov
sarl
xchg
bound
push
or
ds
testl
xor
inc
ja
pop
dec
stc
xor
or
mov
xchg
dec
dec
xlat
shrl
test
mov
ja
mov
dec
xchg
lret
cmp
fwait
jmp
test
arpl
add
dec
cmp
incb
std
cmp
aaa
shll
xchg
dec
out
xchg
pop
iret
pop
jb
and
mov
mov
mov
shl
dec
or
jne
xor
mov
inc
sbb
xor
sbb
andl
out
adcb
mov
push
nop
pop
sahf
stos
lods
dec
fisubs
mov
fisttps
pop
xchg
cmp
fistps
pusha
cmp
iret
or
ret
scas
pop
pop
clc
inc
or
and
dec
popf
pop
or
mov
aas
pop
fimull
pop
xchg
xor
adc
inc
sbb
push
scas
dec
xchg
adc
sti
sub
dec
ret
xor
hlt
cmpsl
mov
arpl
rorb
outsl
jp
aaa
loopne
inc
or
bswap
movsb
pop
pop
xlat
mov
fisubrs
add
je
jne
or
add
sub
add
stc
cmp
jbe
shlb
inc
adc
into
dec
sarl
rcr
jno
adc
dec
dec
mov
pushf
pusha
xor
xor
lahf
out
sahf
push
add
repz
push
push
inc
sub
cmpsb
xor
xchg
cmpsb
or
pop
inc
jb
push
movsl
test
movb
sub
pop
mov
ds
or
push
and
mov
mov
repz
lcall
push
testb
xchg
pop
rolb
fisttpl
cli
fmul
icebp
add
shlb
pop
adc
in
cmp
xchg
lds
mov
add
pop
test
and
push
mov
int
stos
sub
lret
dec
shll
and
jg
aad
add
pop
test
mov
sbb
out
outsb
scas
inc
loop
push
xor
adc
jle
cmp
pop
fmuls
pushf
out
xchg
adc
fsts
mov
cmp
mov
or
loop
into
fsubr
xchg
cmc
int3
sbbb
dec
lds
imul
mov
add
adc
sub
scas
mov
fs
sti
mov
out
jo
cltd
sub
pop
inc
mov
dec
sub
add
fyl2x
in
les
rorb
cmpsb
imul
lock
mov
dec
lret
mov
pop
test
ljmp
shrl
cs
pop
test
in
lcall
sbb
jne
xlat
mov
je
cmp
jecxz
sbb
dec
out
lea
sub
cmp
mov
sbb
xorl
pop
lcall
repnz
jbe
inc
andl
das
push
aam
mov
pusha
mov
gs
das
ret
inc
movsl
std
cld
stc
cli
cwtl
sahf
dec
cmpsl
int
cmpsl
mov
mov
cld
jb
xor
jae
insb
mov
mov
ss
xor
negb
mov
mov
inc
aam
and
add
mull
dec
movsb
xor
xchg
pop
cld
sub
insb
addr16
rol
or
pop
xor
sub
lea
out
ljmp
cltd
pop
sti
test
mov
inc
cmp
xor
fstpl
clc
bound
mov
adc
mov
cmp
out
mov
das
xchg
mov
jmp
pop
loopne
push
popa
orl
movsb
xorb
sub
outsl
push
repz
repz
ja
cwtl
dec
dec
jp
nop
inc
jge
xchg
or
fcoms
sbb
push
push
mov
sahf
add
push
out
fstpl
jge
out
pop
cmc
in
push
dec
xchg
pushf
and
fldenv
pop
pop
sub
in
jp
dec
cmc
mov
or
into
mov
es
dec
int3
lcall
icebp
mov
pusha
xchg
add
sbb
stos
std
push
xchg
xchg
fidivrl
mov
out
or
sbbl
push
iret
in
cmp
mov
or
jnp
pop
movd
lds
aad
ss
loope
xor
stos
mov
xchg
sbb
inc
dec
push
or
lahf
mov
cmc
adc
xchg
mov
stc
sbb
mov
adc
adc
adc
repnz
aas
leave
adc
mov
lods
sub
inc
shr
pushf
or
ljmp
or
dec
int3
imul
sbb
lds
daa
rclb
mov
xchg
repz
mov
xchg
mov
jbe
lcallw
sbb
movsb
cmp
int
xchg
cmp
lret
test
dec
jle
or
push
sub
jbe
jecxz
add
mov
mov
push
fadds
mov
cmp
mov
mov
sti
adc
mov
cmpsl
or
mov
or
cmp
inc
movsl
adc
and
xchg
orb
sbb
test
xor
and
ficompl
mov
js
lea
mov
push
lcall
daa
fdivl
or
roll
out
addr16
mov
mov
mov
out
mov
aaa
int3
and
fld
push
jno
sti
int
js
sub
sti
jmp
ror
orb
mov
xlat
sub
test
aad
testl
sub
fstps
loop
and
or
xlat
fwait
ss
add
or
outsb
out
xchg
xchg
or
dec
xor
cmp
xchg
into
mov
out
push
xor
clc
pop
insl
jne
adc
pop
pop
imul
lea
stc
pop
sbb
mov
pop
adc
jmp
sub
iret
push
movsb
sti
pop
lret
xchg
adcb
ja
loopne
mov
dec
xchg
inc
int3
inc
xor
data16
jns
les
stos
mov
pop
pop
aad
mov
mov
std
pop
pop
fistps
pushf
inc
jmp
push
push
cs
jae
aad
mov
nop
push
mov
aas
mov
sub
dec
dec
dec
int3
je
add
push
mov
sub
cmpsl
add
jo
nop
sbb
dec
andl
popf
cmp
jp
fwait
or
lods
das
in
xlat
mov
pop
ret
cmp
loopw
shll
sbb
imulb
and
std
mov
es
cmpsl
int3
adc
jl
mov
lret
fiadds
aam
loope
sub
lock
cmp
inc
adcb
test
ret
jle
fisubl
jp
lcall
xor
xchg
sahf
jae
ljmp
in
lods
mov
mov
jl
jo
xchg
icebp
add
dec
shrb
xchg
aaa
loope
add
mov
ffree
adc
js
inc
xchg
loope
sbb
daa
shrl
pop
dec
inc
sbb
out
sbb
xchg
mov
incl
mov
or
xor
jo
mov
jb
fimull
divb
test
mov
test
psadbw
jmp
rcrl
out
jmp
sbb
mov
and
and
mov
in
sub
xchg
jmp
mov
sahf
sub
call
lods
fs
int3
popf
mov
pusha
lahf
mov
sahf
pop
and
subb
imul
adc
mov
loop
addl
out
add
push
push
push
push
inc
stos
xchg
sbb
insb
test
jnp
jmp
lcall
dec
ja
inc
mov
xor
inc
and
shll
jo
int
ss
stos
xchg
daa
mov
je
neg
mov
xchg
xchg
loop
xchg
xor
imul
push
pop
out
adc
adc
fsubs
and
hlt
cmp
data16
shll
or
gs
sahf
aaa
pop
jle
or
cmp
pop
xor
sub
shrb
mov
sub
xor
movsb
lods
test
and
mov
ja
into
sbb
sbb
adc
jno
stos
pop
jl
ds
dec
lcall
xor
out
mov
stos
mov
push
outsl
icebp
xchg
inc
inc
push
adc
mov
pop
enter
pop
mov
push
mov
sub
jne
cmp
sti
fnstcw
push
out
or
aaa
pop
fimull
bound
dec
add
negb
icebp
xchg
mov
pop
aam
xor
test
pop
xor
mov
push
cwtl
sbb
and
sub
pop
adc
lcall
mov
xor
pop
add
mov
ds
loopne
jg
je
push
int
insl
jb
and
imull
test
rcrl
mov
pop
sbb
rcrb
loopne
sub
adc
movq
js
insb
pop
mov
fs
mov
adc
jae
ss
xor
out
and
cli
aas
paddusb
dec
pop
loop
pop
sub
or
adc
ret
shrb
push
fcompl
sub
imul
movsl
dec
data16
mov
mov
mov
xlat
lods
inc
sub
dec
mov
fsubr
cmp
sti
push
mov
xor
cmp
mov
cmp
cmp
loop
pop
mov
les
sbb
repz
das
and
ds
fs
mov
xor
pop
push
outsl
adc
mov
mov
ret
xorl
nop
icebp
sahf
aas
pop
push
mov
cmpsl
mov
test
jecxz
call
push
add
shlb
call
cmp
into
in
and
loope
int3
in
pop
ret
or
and
loop
mov
mov
mov
bnd
roll
ja
std
dec
pop
jge
adc
xchg
lods
push
xor
pusha
daa
fdivr
enter
push
lret
mov
mov
pop
mov
adc
lock
pop
js
xor
push
rclb
sbb
jl
and
push
pop
mov
or
push
cmp
cmpsl
mov
dec
lcall
ljmp
adc
in
mov
fwait
cmp
test
test
roll
insb
dec
cwtl
cltd
int
roll
sub
inc
scas
fucom
jae
clc
mov
sbb
sbb
rol
daa
lds
stos
cmpsl
add
out
jnp
sbb
mov
pop
inc
xor
idivl
movsb
xor
mov
mov
dec
or
pusha
test
movsl
pop
ja
jmp
dec
pusha
das
sub
negb
lret
clc
add
dec
xor
add
mov
push
in
mov
sbb
arpl
in
xchg
push
xchg
cmp
mov
push
mov
mov
clc
fidivrl
call
mov
or
sub
jne
push
pop
mov
jg
fistps
gs
test
inc
xchg
xchg
daa
ds
adc
ljmp
adc
fcoms
mov
mulb
out
outsl
insb
lock
jnp
cmp
jle
in
cmp
push
pusha
or
iret
lahf
mov
adc
or
jae
dec
mov
nop
je
popf
shrl
sub
dec
jecxz
addr16
and
inc
jle
imul
mov
xchg
mov
mov
sub
push
hlt
mov
popa
inc
jo
or
loopne
call
or
mov
mov
icebp
int3
xor
ficoms
pextrw
gs
xadd
rol
mov
sahf
and
ret
aaa
enter
je
jbe
or
jge
inc
mov
daa
lret
inc
cmp
mov
jl
subb
or
or
inc
xchg
lahf
inc
fwait
out
push
jle
push
push
cmp
sbb
pop
xor
lcall
pop
std
popf
daa
push
mov
loope
out
sub
aas
fistpll
jb
fdivrs
xor
movsl
push
jecxz
and
out
xlat
jge
xorb
sbb
popa
add
inc
adc
rorb
pusha
out
inc
pop
sti
jns
js
push
in
mov
jmp
hlt
xor
out
ds
fmul
jno
sub
xchg
cltd
adc
jne
std
jg
mov
insb
mov
shll
cmp
push
ja
mov
sub
rcrb
lret
xor
imulb
or
nop
movsb
sub
addr16
push
sub
ret
jmp
stc
aaa
dec
clc
fs
xchg
bound
add
inc
cmp
orb
out
das
jo
jb
stos
xor
loop
cmp
movsb
push
or
test
and
dec
xor
das
cmpsb
pop
stos
loope
adc
mov
jg
sbb
into
pushw
repnz
je
cld
mov
dec
pop
xlat
in
and
mov
movsl
cli
leave
sti
mov
add
inc
mov
enter
mov
push
outsb
fsts
mov
dec
xchg
jno
mov
gs
sarl
add
rcrl
mov
adc
int
pushf
xchg
jb
jmp
mov
test
ret
nop
int3
pushf
les
notl
jb
push
add
arpl
mov
jecxz
and
push
mov
sub
popf
lcall
jbe
xchg
cmpl
push
sbbb
ljmp
das
lret
das
mov
jl
mov
jge
rcl
mov
divb
out
cwtl
iret
popf
out
cmpsl
lret
mov
aaa
mov
test
sarb
lcall
lock
cmp
pop
push
clc
mov
out
sub
nop
aam
jp
ret
pushf
sbb
pop
jnp
mov
ds
xchg
in
pop
xchg
sbb
mov
popa
pop
ljmp
leave
mov
ret
and
pop
mov
sysret
mov
negl
push
sub
push
ret
fisttpll
mov
nop
xchg
pop
call
rcrl
pop
cs
mov
or
push
fcoms
arpl
adc
mov
cli
cld
or
mov
popa
daa
insb
mov
js
xor
test
dec
ja
pop
mov
add
inc
sub
mov
leave
fwait
cmpsl
dec
push
push
out
addr16
sub
add
mov
bound
xchg
jns
fdivrl
xchg
mov
mov
bnd
pop
pop
mul
addr16
jp,pt
out
mov
je
mov
jl
repnz
repz
mov
mov
gs
fistpll
lahf
push
xchg
jl
aas
jmp
repnz
ljmp
pop
xchg
sub
je
add
ret
jns
xor
std
cmp
jnp
push
arpl
sti
mov
pusha
cmpsb
ja
iret
mov
cwtl
pop
mov
int
cmp
jae
xor
push
push
xchg
mov
jb
mov
xchg
nop
mov
sbb
fwait
push
imul
scas
xlat
rcrb
test
adc
mov
sub
leave
ja
div
shll
mov
loop
or
pop
jl
aaa
fcompl
mov
jo
jl
dec
push
es
push
jae
pop
xchg
push
movsb
fidivs
pop
and
loope
shrb
dec
in
cmp
arpl
movsb
ret
push
jge
jns
rorl
or
sub
clc
cli
cmp
scas
jno
rcl
jl
lcall
mov
xor
popf
jno
lahf
bound
pop
test
add
stos
stos
cmpsb
inc
jmp
in
xorl
stos
push
lret
mul
and
outsb
sub
fdivl
ds
fildll
insl
lret
add
sbb
out
xor
sahf
add
xor
js
cwtl
sysret
xor
cmpsl
push
inc
mov
sub
mov
rclb
adc
pushf
mov
stos
insb
mov
mov
mov
dec
outsl
and
rolb
int
add
sub
jae
imull
push
sbb
lea
mov
sbb
test
test
or
orb
outsl
ljmp
stc
out
adc
push
adc
push
mov
fdivrs
add
out
rol
movsl
fucom
xor
mov
pusha
or
push
cmc
call
pop
push
pop
lret
adc
std
imul
in
adc
lods
pop
push
stos
mov
mov
mov
xor
or
adc
lret
cld
mov
gs
lock
outsb
ljmp
sub
fxch
or
ds
repz
add
mov
xchg
cmp
lock
xor
sbb
stos
and
pushf
inc
cli
movsb
jmp
cwtl
shrb
mov
aad
pop
call
xchg
xchg
repz
cmp
jns
jp
popa
mov
pop
out
lea
ret
fwait
mov
push
inc
mov
mov
dec
inc
test
pop
or
inc
inc
xor
inc
out
pop
lea
orb
pop
fwait
push
mov
or
aas
div
jns
std
cwtl
push
mov
cmpsl
leave
loop
mov
push
jno
cld
push
mov
lret
das
lock
mov
or
jb
int3
sarb
dec
inc
aam
call
es
xchg
clc
cmovs
icebp
inc
ljmp
jmp
mov
in
test
mov
inc
fiaddl
xchg
pusha
loope
cmp
lcall
and
test
cmp
xor
mov
xchg
push
sbb
mov
bts
inc
scas
xchg
sti
clc
mov
jbe
lcall
in
popf
ljmp
lods
add
add
mov
xor
or
dec
inc
mov
inc
fnstcw
or
push
add
xchg
xchg
xchg
add
mov
push
fcoml
mov
in
jo
xchg
fsubs
sarl
xor
cmpb
daa
mov
xor
mov
jmp
stos
dec
pop
mov
mov
pop
adc
xchg
dec
or
jmp
mov
test
js
iret
dec
or
xchg
push
lret
dec
stos
in
lcall
movb
jle
and
push
pusha
inc
stos
mov
pop
mov
pop
jmp
out
pusha
jae
bound
push
push
mov
pop
fwait
popl
lea
int
push
xchg
out
sbbb
pop
imul
scas
cmp
mov
mov
sarl
leave
out
add
hlt
push
adc
arpl
mov
xlat
or
outsb
sub
fwait
xor
arpl
insb
add
lock
cmp
pmaxub
dec
lds
in
cld
pop
mov
and
popf
fstpt
cwtl
test
adc
fmull
jbe
addl
insb
and
sbb
mov
xchg
cmp
push
jl
xchg
dec
out
cltd
push
outsl
pop
xor
clc
outsl
hlt
lahf
adcl
out
sarb
jno
les
mov
push
pop
jnp
gs
xchg
shl
cmp
inc
cmp
iret
and
movsl
sub
icebp
and
ret
xchg
mov
cmpsb
jmp
add
fdivl
out
or
dec
int3
sbb
outsb
fs
mov
and
pop
jp
push
popf
cmc
arpl
and
outsl
sub
fsubrl
jnp
adc
sub
jg
fwait
push
mov
mov
mov
mov
dec
mov
push
jge
imul
cmpsb
das
sub
mov
mov
push
test
inc
sahf
arpl
dec
test
pop
andb
outsl
leave
lea
and
test
push
sti
adc
ffree
ss
add
testb
cli
fcom
mov
shlb
cmp
adc
or
and
cmc
scas
mov
scas
and
cmp
je
and
xchg
add
test
lods
inc
add
mov
lea
push
sub
pcmpgtd
jnp
mov
sbb
xchg
pop
push
mov
loopne
sub
inc
xorb
flds
les
mov
mov
sub
idiv
cmpsl
sbb
jbe
mov
ss
daa
push
mov
pushf
in
push
pop
jmp
cmp
cs
fs
aad
add
aas
xor
push
mov
sub
sub
adc
jo
sub
pop
xchg
pop
or
mov
lods
mov
pop
pop
inc
subl
jbe
pop
lods
push
sahf
inc
mov
call
das
popa
mov
jmp
repz
fbld
inc
pop
shll
stc
divb
sub
aas
movsl
cmp
enter
inc
pushf
cmp
in
inc
cld
dec
or
lret
sahf
sub
mov
outsb
mov
sub
movsl
sbbl
testb
aas
fsubrs
popa
les
ret
mov
lds
dec
mov
mov
ljmp
jge
ss
mov
or
and
push
movsl
les
add
nop
push
test
xchg
mov
addl
clc
shll
sbb
inc
pop
testl
rclb
sbb
enter
push
xor
push
jne
sub
mov
jle
in
mov
ror
and
lret
dec
cmp
mov
imull
add
mov
add
icebp
and
out
cmp
les
mov
les
sub
cmpb
pop
cmp
hlt
mov
sarb
cmp
mov
hlt
xor
dec
mov
outsb
or
fistpll
movsb
xchg
and
jmp
mov
cmpl
out
jnp
sub
push
xor
gs
pop
sub
les
inc
jnp
enter
inc
xor
pusha
fdiv
xor
ret
pop
pop
and
inc
dec
in
jae
aam
push
call
mov
jo
out
fiaddl
lahf
push
sbb
push
outsb
imul
scas
popf
xchg
sbb
adc
out
mov
and
ror
cli
insl
hlt
imul
inc
fbld
aad
mov
cmc
jle
pop
leave
xchg
push
push
add
or
es
pop
icebp
cmp
fdivrp
fdivrp
rol
loope
scas
push
scas
add
je
sub
movsb
fmuls
sub
insb
sarl
lahf
sbb
out
cmp
xor
jno
xchg
jl
inc
in
push
scas
das
push
push
popa
lret
xor
push
sub
mov
mov
test
fwait
lods
jnp
adcb
cmpsb
inc
enter
mov
xor
mov
push
mov
sub
xchg
cmp
jg
push
ds
and
adc
sbb
mov
add
pushl
sub
pop
mov
dec
movsb
js
fsts
lcall
add
sub
outsb
pop
jmp
out
rcl
push
popf
jg
lahf
fbstp
jecxz
pop
mov
movsb
mov
push
addb
sub
mov
imull
je
lret
insl
sarl
cld
sbb
pushf
jae
cld
or
cmpb
outsl
test
shl
mov
stc
pop
xchg
jle
fisttpl
jbe
dec
mov
lret
cmp
mov
ret
jno
cli
or
cmpsl
push
inc
cmp
or
or
mov
das
xor
cmp
or
sbb
imul
fadds
stos
xchg
data16
sub
loope
out
jb
test
sbb
mov
out
lock
lret
incb
sub
push
mov
loopne
sti
pusha
dec
insb
push
push
inc
xchg
jbe
fnstcw
cmc
outsb
les
repz
xchg
mov
mov
cmp
cld
adc
adc
mov
pushf
xchg
test
pushf
xor
dec
inc
adc
push
jmp
aas
aam
dec
jb
pushf
push
dec
mov
xlat
mov
pusha
fwait
mov
push
shlb
cmp
movsl
addl
fisttpl
test
inc
ds
inc
and
and
inc
mov
push
sub
idivb
mov
out
xor
add
xstore-rng
cmpsl
push
xchg
mov
ss
and
pop
mov
mov
pusha
pop
mov
shlb
popf
sub
sub
add
ret
dec
mov
leave
insl
inc
lret
xchg
fcoms
push
stc
adc
lods
mov
seta
mov
sbb
and
ret
add
add
mov
es
push
or
fldl
test
out
mov
pop
fst
pop
mov
mov
imul
fildll
fwait
inc
jo
inc
addr16
lahf
aaa
arpl
scas
test
and
cltd
xchg
arpl
ja
ret
sub
faddl
xchg
pop
or
sub
fwait
xor
add
fadd
jne
shr
add
mov
jns
push
mov
xchg
jbe
shll
mov
cmp
outsb
lret
push
pop
jp
aam
mov
and
pop
xchg
pushf
mov
fisubrl
pop
les
add
fists
aad
jmp
push
cmc
cwtl
orl
xchg
sub
and
stos
shlb
and
mov
jnp
sub
pop
jb
iret
sbb
test
push
xchg
sub
jae
mov
popf
insl
add
into
mov
sub
xor
je
in
in
xor
clc
pop
scas
add
push
mov
xor
mov
adc
shl
mov
jge
pop
cltd
fadds
lock
int3
jg
or
incl
or
xor
pop
and
mov
ljmp
das
sbb
fdivrl
push
and
movsb
arpl
into
push
push
ret
jbe
leave
mov
sbb
adc
and
cmp
popa
sbb
jl
fcomi
dec
lds
xor
scas
test
lahf
mov
mov
int
in
addl
in
in
ss
dec
enter
pop
stc
mov
out
addr16
inc
cmp
xor
ds
mov
and
in
stos
push
mov
push
sbb
loopne
mov
roll
insb
gs
js
xlat
dec
pop
scas
or
xchg
dec
push
dec
cmp
fdivl
pop
sub
adc
xor
shl
jae
jmp
xchg
pop
scas
xchg
xor
push
subl
sub
mov
lret
cmp
push
xchg
push
mov
cmp
sbb
sahf
test
mov
push
outsl
xchg
loop
mov
push
fs
adc
arpl
fsubrs
out
popl
xor
sti
cmp
rorl
add
mov
or
mov
xor
mov
ljmp
jno
jle
mov
pop
adc
or
lods
adc
xlat
call
cmp
int
test
sti
jns
dec
gs
gs
in
aas
loopne
loopne
dec
lret
adc
ljmp
pop
xchg
jae
dec
mov
stos
sbb
in
popf
add
stos
test
leave
mov
inc
out
mov
les
cs
sub
fidivrs
nop
cmp
jae
addr16
sbb
pop
xchg
fninit
mov
arpl
testl
clc
in
mov
cld
sbb
add
mov
mov
inc
inc
inc
push
fisubrs
pop
xchg
scas
mov
popa
gs
test
push
push
mov
repnz
cwtl
mov
push
idivl
xchg
insl
xlat
cld
lahf
xor
lret
jl
pop
mov
dec
sub
jno
dec
pop
iret
add
shlb
push
lret
movsb
inc
aam
sub
scas
es
pop
insl
sub
jl
sbb
or
enter
jae
and
or
or
dec
mov
and
mov
cwtl
jae
pop
ret
cltd
loopne
mov
mov
push
aaa
push
into
xchg
fcmovnu
stos
mov
clc
fcmove
test
lcall
pop
dec
sub
stos
push
aad
out
push
scas
xchg
shr
xchg
push
iret
mov
cmp
loopne
xchg
repz
push
cmp
fnclex
xchg
sub
enter
dec
inc
add
pop
lock
sahf
push
cmpsl
or
inc
fwait
arpl
push
jnp
xor
daa
imul
jns
es
sub
mov
or
push
sub
pop
dec
imul
jp
mov
jmp
lds
mov
or
dec
jg
gs
clc
and
xchg
ret
mov
mov
insb
lds
push
inc
out
outsb
daa
sub
pusha
jo
mov
stos
inc
outsb
out
pop
jnp
insb
pop
jae
jnp
dec
ja
ja
aam
pop
and
pusha
adc
fcmovnb
das
fdiv
pop
mov
inc
gs
mov
mov
popf
xchg
mov
inc
outsb
push
adc
out
or
cwtl
pop
pop
imul
jnp
arpl
cmc
push
add
icebp
adc
cmpsl
or
lret
leave
push
aad
hlt
call
iret
arpl
outsl
push
inc
in
mov
push
fadds
add
movsb
movsb
das
int3
cld
cmpsl
pop
dec
xor
fiadds
pop
lds
mov
scas
push
nop
xor
lcall
movsb
out
add
leave
jbe
lcall
sbb
in
in
cmp
push
jg
adc
dec
xor
scas
push
sbb
xor
or
xor
fisubrs
test
notb
and
mov
cmpsb
dec
jne
in
sbb
in
pop
cmp
loope
mov
inc
lcall
loopne
sub
fldenv
test
aam
add
jl
mov
xor
fmull
das
in
pop
mov
imul
jae
jae
mov
xlat
adc
dec
or
adc
mov
mov
mov
or
call
and
xlat
cli
push
xchg
int
loop
sub
dec
mov
cmpsl
jae
lret
popa
shr
decb
enter
test
jg
mov
xchg
outsl
data16
loop
les
lret
fs
xor
adc
stos
shlb
push
push
mov
daa
sahf
jle
movsl
xor
cli
jno
mov
push
scas
add
outsb
or
mov
lock
cmc
add
sub
shlb
mov
ljmp
test
push
add
out
mov
pop
lods
notl
mov
ret
daa
xor
mov
mov
insb
adc
arpl
dec
sub
mov
outsl
enter
and
push
fcmovbe
xchg
inc
imul
sbb
daa
push
mov
sub
xchg
insb
adc
pusha
imul
mov
cs
push
inc
nop
adc
push
jb
into
add
je
stos
jo
popf
roll
popw
in
lea
or
add
adc
mov
xchg
outsl
xlat
sub
jno
out
or
das
xchg
inc
dec
and
inc
pop
iret
pushf
das
decb
xchg
mov
sbb
inc
and
stc
shll
add
add
add
xor
imul
fidivrs
xchg
icebp
push
in
cld
lret
lret
jmp
out
mov
xor
mov
ret
mov
add
out
xchg
in
push
mov
sub
pop
aam
in
aas
ret
addr16
cmovns
dec
jl
push
xchg
push
es
cmp
sbb
lods
ja
mov
mov
lds
psrad
mov
test
add
push
xchg
push
pop
fst
outsb
mov
adc
push
cld
sbb
rcl
int
and
mov
out
int
into
xchg
pop
pop
cld
push
stos
cltd
fstps
xor
mov
or
lods
xor
xchg
dec
jbe
std
test
sub
ja
inc
add
mov
inc
xor
cmp
xchg
pop
ret
lds
add
inc
sub
out
aad
inc
bound
leave
or
shll
mov
pop
xchg
adc
push
mov
xor
mov
add
xchg
in
jp
testb
int3
push
mov
sub
mov
or
aad
outsb
xchg
fwait
outsl
jl
arpl
add
out
xchg
push
sub
pop
outsb
insl
push
pop
and
jo
subl
jnp
cmp
jle
push
mov
pusha
lods
cmp
iret
flds
test
inc
sbb
inc
jo
sbb
xchg
dec
push
and
fidivrl
in
inc
xchg
ficompl
nop
mov
pushf
xchg
imul
loope
dec
in
adc
jne
repnz
mov
aam
and
call
lret
push
xchg
stos
movsb
or
popf
roll
shrl
int3
out
stc
pop
jle
sbb
lds
mov
scas
in
push
adc
cmp
movsb
jns
aas
push
or
sub
and
jge
xor
aam
sub
lds
sub
js
inc
jno
and
std
dec
mov
and
jo
xor
lahf
std
mov
push
rcr
push
cld
push
inc
das
das
cmp
add
jl
jns
rclb
loope
push
int3
fisubrl
mov
test
je
xor
out
nop
sbb
cld
sbb
lcall
pop
in
and
mov
and
lods
xor
es
push
stc
adc
fmul
int
sub
lret
mov
push
rclb
ret
xchg
out
mov
lock
mov
daa
push
mov
int
adc
mull
dec
lret
push
roll
aaa
sbb
sbb
pop
or
and
push
insb
loop
sbb
stc
andl
jo
xchg
mov
cmp
loop
adc
cli
movsb
scas
shlb
sub
into
cmp
fbstp
in
into
rcl
repnz
lret
gs
sbb
rcrb
adc
imul
jmp
adc
out
mov
std
call
sub
xchg
in
sti
daa
adc
daa
aad
sti
xlat
mov
stos
imul
loopne
in
dec
mov
fchs
and
les
repz
cmp
add
arpl
bound
test
repz
adc
xlat
mov
cwtl
or
jmp
pusha
xchg
js,pn
aad
mov
out
xor
jb
mov
dec
push
or
je
adc
jecxz
jge
imul
push
mov
das
sbb
addl
rclb
cmp
inc
rcr
mov
pop
shrb
fldl
aad
iret
adc
mov
ljmp
fcmovne
sbbb
icebp
inc
pop
and
cmc
lods
js
pop
mov
mov
or
mov
push
and
or
ds
aam
decb
xchg
pop
pusha
insl
clc
mov
dec
ja
sbb
scas
cmp
pusha
lods
loop
inc
mov
xchg
sbb
and
shll
inc
sbb
cltd
dec
sub
pop
mov
lods
jno
push
jle
or
clc
push
sbb
xchg
sub
pushf
shll
les
imul
pop
sub
push
test
xor
dec
or
es
sub
push
mov
xchg
and
mov
int
dec
add
inc
out
or
mov
push
shll
add
adc
mov
bound
and
in
int
xchg
arpl
jecxz
xor
cmp
rcrb
addr16
xchg
jp
adc
outsl
mov
push
mov
mov
mov
imul
jmp
mov
adc
out
xor
push
loopne
or
cmp
stos
sub
and
fbstp
jle
notrack
insl
jp
pusha
dec
roll
ret
out
pop
cld
mov
jae,pt
inc
movsl
push
in
pusha
popf
loop
jmp
inc
insb
rcrb
lcall
imul
scas
sub
out
adc
mov
jo
dec
inc
inc
out
xchg
cmpsl
cmp
out
inc
jmp
and
push
push
push
out
or
push
insb
add
and
lcall
aad
lds
sti
add
or
scas
int3
subl
sub
repz
push
or
jbe
cltd
stc
jge
aad
sbb
repnz
cmp
mov
push
dec
adc
fisttpll
fdivp
xor
mov
int
push
inc
sbb
test
cmpsl
out
mov
repnz
enter
pop
mov
sub
loope
xchg
push
sub
icebp
lds
cmp
jmp
pinsrw
imul
add
xchg
aad
imul
arpl
dec
fwait
pop
sub
mov
push
push
xor
fdivrl
and
sub
outsb
bound
adc
jb
jne
enter
in
int
mov
dec
js
pop
icebp
insl
push
mov
dec
int
sub
cld
sub
mull
sub
pop
clc
and
lods
rclb
fnstenv
jle
xchg
xchg
sbb
insb
outsl
and
jmp
add
imul
dec
jmp
adc
mov
fcomps
add
xlat
sub
xchg
lret
and
or
mov
ds
xchg
push
fnsave
jbe
adc
adc
sub
aas
adc
in
add
repnz
xchg
or
lods
lds
mov
lret
fwait
xlat
movsl
movsl
cltd
sub
shrl
mov
xchg
pop
inc
sti
xchg
inc
dec
rcl
gs
mov
dec
call
jle
fsts
jp
les
fnstsw
sbb
popf
jg
sub
cmc
pop
cmpsb
cmp
adc
loope
inc
mov
jmp
aam
fildl
mov
xchg
nop
leave
mov
mov
dec
jge
repz
shrb
mov
jae
lea
ljmp
xor
mov
sbbl
mov
pop
fildl
dec
inc
xchg
add
das
mov
xchg
and
xchg
loope
dec
sbb
sar
ss
testb
ficompl
ret
push
xchg
icebp
sbb
pop
lret
leave
mov
mov
jb
lock
mov
sub
xchg
lods
add
aam
gs
test
es
sbb
je
aad
shr
and
popa
mov
jmp
mov
mov
aaa
and
pop
pop
stc
push
mov
dec
cltd
test
movl
and
fstpl
lea
xchg
xchg
sbb
shlb
stos
pop
mov
pop
xchg
movsl
bound
call
sbbl
jnp
sbb
outsb
cld
xchg
mov
lea
dec
inc
sub
test
mov
inc
dec
clc
jle
inc
arpl
or
cwtl
pop
fwait
lock
push
fs
roll
js
fsubrp
xchg
sarb
jns
sbb
in
xchg
mov
test
mov
jnp
pop
addr16
mov
icebp
call
push
mov
test
insb
dec
sub
leave
jne
xor
mov
fisubrl
adc
sahf
jmp
jg
mov
out
inc
cmp
push
or
stos
sahf
xchg
and
push
std
jnp
pop
adc
pop
and
je
xchg
jge
iret
xchg
inc
loopne
push
arpl
xchg
pushf
push
test
lods
popf
or
sbb
mov
arpl
cltd
fwait
adc
mov
scas
mov
push
xlat
pop
sub
aaa
or
mov
ret
mov
leave
mov
lea
inc
out
mov
or
mov
adcl
int3
mov
fs
sub
popa
lds
cli
repnz
stos
add
and
std
cmp
mov
in
cmpsb
jbe
jbe
movb
or
sbb
aad
ret
aas
outsb
cmp
sub
add
outsb
jl
jae
dec
subl
icebp
jo
or
lahf
cmp
jae
push
cmc
shrl
cmp
dec
inc
mov
in
rorb
popa
pop
cmc
pop
in
push
pop
jmp
sub
pop
pop
cmp
and
ds
scas
leave
movsl
push
ret
or
stos
xor
iret
or
or
out
add
test
xor
xchg
mov
js
mov
xor
addr16
cwtl
pop
pop
stos
push
outsb
push
cmpsl
jns
fsubl
aaa
subl
lds
mov
dec
and
jg
in
sbb
sub
and
mov
int
and
ja
es
shl
lret
mov
mov
push
pop
sahf
xor
jecxz
addb
dec
loop
popa
push
stc
out
nop
cwtl
fs
bound
fcmovu
aaa
ss
adc
pop
in
out
das
out
cli
or
xor
inc
imul
loopne
into
cltd
imul
rcr
iret
pop
mov
adc
imul
das
add
aam
lods
lods
stos
cmp
in
mov
pop
les
in
std
mov
cmp
sub
loopne
cmp
rcrl
bnd
dec
jne
les
lds
mov
jo
fdiv
and
stos
mov
adc
fisttps
jb
cld
cs
aad
sub
nop
movsb
pop
pop
aas
out
stos
cmpsb
jb
and
je
loopne
jecxz
shl
outsl
lret
fisttpl
jne
scas
mov
mov
push
mov
movsl
dec
mov
sbb
inc
aas
pop
jle
push
inc
loope
nop
inc
lods
mov
frstor
cmp
movsl
dec
rorl
jle
leave
enter
cmp
jmp
ret
mov
out
pusha
movsl
cld
dec
jne
lret
cmp
pop
mov
loopne
lock
or
pop
dec
push
inc
sarb
push
sub
adc
aam
and
ret
adc
aas
es
loopne
insl
insb
lods
dec
insl
cmc
adc
ljmp
mov
mov
jle
mov
ficoml
mov
lcall
add
adc
cltd
mov
mov
xor
fldl
jne
mov
xchg
call
cltd
rcl
sub
stos
push
loope
out
negb
xchg
das
pushl
sub
or
iret
push
xor
and
xchg
push
xchg
adc
test
mov
pop
dec
jmp
jnp
cli
les
or
push
add
pop
insl
and
xchg
loope
out
jb
xor
jns
mov
in
ds
add
pop
mov
fs
mov
ss
addr16
inc
jp
jo
mov
arpl
mov
hlt
jns
dec
or
or
mov
jp
xor
pop
xchg
adc
inc
jmp
dec
cmp
sbb
in
pop
les
mov
or
push
test
adc
and
pushf
and
mov
add
xor
pusha
jle
and
mulb
ret
pop
push
push
inc
xchg
xchg
push
imul
xor
arpl
cmp
mov
dec
lds
inc
pop
lods
imul
pop
scas
out
repz
push
push
jl
adc
pop
repnz
sbb
leave
das
cmp
hlt
sub
out
arpl
testl
or
push
aam
orl
add
sub
test
mov
push
out
iret
or
mov
subl
out
dec
cmp
in
les
sub
jbe
movsb
jge
mov
add
adc
cmp
ficoms
jno
pop
mov
dec
lock
cmp
movsb
jbe
xor
jne
sbbb
add
test
pop
sbb
shll
mov
mov
pop
xor
jb
into
sub
sub
xchg
into
cmp
rclb
pop
inc
inc
and
sbb
lods
lcall
frstor
xor
mov
cmp
pop
cli
lahf
js
jp
pop
sub
lcall
gs
test
push
outsb
sub
test
sub
sarl
imul
pusha
push
mov
xchg
sbb
jbe
push
push
xchg
push
or
fdivrp
and
repnz
inc
mull
adc
inc
fwait
testl
xor
outsb
jne
and
je
sub
stc
cmpsb
jnp
fs
and
pop
xchg
cmp
inc
popa
enter
std
out
loope
cli
cmp
push
sbb
sub
into
jl
dec
cmc
and
sub
mov
adc
mov
imul
add
sub
inc
lods
xchg
in
mov
and
sub
push
fucomi
push
xor
adc
mov
mov
fimuls
cmc
jo
add
adc
les
icebp
add
les
rol
sub
ficompl
mov
fwait
pushf
cltd
pop
jmp
or
mov
xchg
dec
nop
jg
xchg
aas
mov
fidivl
movsb
orb
in
je
inc
or
fstps
jb
iret
fdivs
movsl
mov
jnp
mov
js
or
mov
test
scas
icebp
inc
push
sbbl
scas
fists
mov
pusha
xchg
rcrl
test
cwtl
aad
cmpsl
rorl
mov
aaa
aam
jbe
cmp
cmpsl
and
mov
mov
lock
mov
push
and
and
mov
inc
das
push
ret
mov
sti
dec
insl
lods
lahf
insb
dec
push
fsubr
pop
popa
popa
out
cwtl
lods
and
mov
std
in
and
xchg
pusha
add
pop
mov
cltd
repz
cmc
mov
xchg
add
mov
mov
add
ret
mov
sbb
pop
sub
sub
out
stos
std
int
out
pop
xor
push
push
std
xlat
call
cmp
xor
fidivl
xor
fwait
dec
mov
xchg
push
int
adc
or
add
dec
ficomps
push
inc
xchg
cmp
or
inc
pop
fwait
dec
lea
stos
aaa
push
add
scas
icebp
jmp
push
fcoms
jns
out
mov
loop
or
std
pop
lods
mov
icebp
cli
cli
and
jp
stos
or
mov
arpl
dec
out
cmp
pop
stc
ja
push
pop
outsb
xchg
out
xchg
jmp
adc
inc
fstpt
or
inc
testb
test
mov
int3
mov
insb
push
mov
pop
jle
mov
pop
pusha
sbb
pop
iret
push
mov
mov
dec
jae
pusha
and
cs
sbb
mov
jmp
ljmp
ljmp
push
test
gs
pop
fsubrs
leave
cmpsb
scas
add
jbe
pushf
arpl
js
hlt
dec
xor
scas
shrb
or
mov
inc
int3
xchg
adc
fidivs
das
lds
nop
aam
imul
sbb
push
out
movsb
movsl
ja
push
inc
pop
adc
jge
jge
and
xchg
daa
shll
inc
inc
pop
jno
lock
jl
mov
adc
xchg
mov
lahf
jns
jg
mov
and
sub
inc
imul
fcoml
js
mov
aad
pop
jae
mov
inc
inc
aam
icebp
mov
sub
test
or
pop
or
loopne
decl
xor
push
ja
add
pop
mov
das
push
pop
xorl
xor
push
push
jo
fdivrl
bound
cmc
insl
and
or
add
test
movsl
sub
pop
rorb
sub
and
xor
int
rorl
insl
daa
mull
fwait
lret
rol
fsubl
sbbb
adc
sahf
jnp
push
cmpb
mov
pop
pop
loop
js
stc
pop
or
fs
fstl
js
mov
cmp
into
mov
cli
jo
cwtl
xor
in
xchg
or
iret
outsl
cmc
out
into
xor
out
ss
adc
adc
push
xchg
scas
xor
sbb
lods
jp
lods
mov
lods
push
xlat
bound
mov
shl
xor
xchg
mov
aaa
mov
and
out
dec
dec
add
out
fnstcw
sub
sub
xchg
rcpps
sbb
dec
xchg
sbb
test
push
pop
mov
pop
or
enter
or
aad
pop
xchg
nop
pop
sarl
aas
sub
pop
pop
dec
loop
xchg
je
std
mov
call
xlat
cmp
imul
mov
repnz
mov
out
andl
nop
fcmovnbe
cmpsl
push
pop
les
arpl
bound
das
pop
lock
stos
pop
and
mov
and
dec
repz
ja
mov
cmpsl
shlb
mov
popf
xor
cld
mov
jl
mov
inc
mov
out
lock
out
mov
in
sbb
ret
xor
sahf
mov
dec
arpl
lock
xchg
inc
repnz
xchg
lods
mov
mov
and
and
sub
test
add
add
test
add
mov
int
cmp
arpl
int3
push
or
addb
jecxz
stos
in
jle
out
mov
pop
xor
icebp
inc
push
xor
mov
xor
push
xrelease
xchg
outsb
test
test
inc
dec
shl
lahf
inc
sub
popa
or
pop
push
fwait
jge
adc
dec
testb
leave
adc
adc
jns
iret
pop
in
dec
xchg
lahf
add
mov
leave
pop
mov
lods
insl
out
and
mov
lret
pop
mov
dec
inc
dec
shll
jne
hlt
test
jo
mov
jmp
loopne
adc
pop
daa
les
inc
dec
adcl
adc
jecxz
ret
insb
mov
mov
dec
jnp
in
pop
pusha
mov
iretw
mov
sbb
mov
ss
inc
cmpsl
pop
sub
xchg
repnz
push
icebp
mov
mov
push
insl
cmp
lcall
scas
mov
or
in
adc
cmp
jo
mov
sbb
sarl
arpl
xchg
inc
testl
push
push
pop
decb
out
add
add
fadds
int3
jle
std
pop
imul
lds
mov
shr
subl
aas
cwtl
cmp
icebp
fisubl
pop
push
jbe
push
pop
jge
or
daa
sarb
cmp
jl
mov
sub
dec
into
adc
push
mov
jo
in
lahf
cwtl
inc
mov
pop
fisubrs
repz
inc
cli
push
dec
cmpsb
pop
pop
jle
xchg
or
pusha
mov
mov
lcall
pop
sub
mov
ds
loope
imul
jnp
es
in
xchg
addb
sbb
mov
add
inc
loope
movsl
mov
shll
test
jo
dec
pop
sub
adc
and
fsubl
inc
sub
add
out
mov
adc
fidivs
inc
dec
cmp
xor
and
je
xor
xchg
push
inc
push
cwtl
mov
lods
mov
call
shlb
shll
mov
jo
xchg
aaa
cmpsb
sahf
push
mov
test
faddl
mov
shrb
xor
ss
lods
cmp
mov
out
shll
xor
jb
bound
adc
inc
out
cmp
scas
add
loop
inc
pop
add
mov
movsb
xchg
xor
mov
add
js
data16
add
jle
mov
int
mov
sarl
pop
cmc
sub
xchg
cltd
loopne
push
dec
fs
add
fpatan
ds
lods
out
clc
adc
xchg
shlb
test
cmp
loopne
pop
jb
sub
mov
rclb
xchg
mov
nop
xor
int
jb
inc
dec
dec
pop
das
cmc
je
or
jecxz
aaa
insb
js
dec
lea
and
xor
xchg
mov
or
cmp
rcr
fildl
cmp
movsl
out
jbe
rolb
push
call
mov
bound
and
inc
movsb
sarl
adc
notb
outsb
cwtl
fadds
cmpsl
mov
je
icebp
je
cmp
int3
push
and
test
xchg
mov
xorl
pop
test
ja
clc
cvttps2pi
adc
mov
fmuls
ret
rorl
jnp
push
dec
pop
ret
shrl
ljmp
sbb
and
mov
out
adc
nopl
add
cs
popa
xchg
xchg
test
fsubl
push
and
lcall
divl
xchg
jge
jg
pop
cli
addr16
stos
fcomi
loopne
pop
xor
xchg
shll
push
int3
cmpsb
nop
call
jns
or
iret
xor
mov
mov
cltd
add
dec
loopne
cmpsl
test
jg
ja
xor
dec
les
data16
inc
out
lods
adc
push
lock
add
in
test
cmp
jns
push
push
xchg
out
icebp
xorl
push
insb
pop
addr16
addr16
shl
mov
outsb
jb
ja
in
mov
addr16
mov
into
jne
cmpsl
mov
fisttps
sbb
jmp
stos
and
test
xor
sub
cmp
sub
mov
insb
hlt
insl
lea
bound
sub
in
cmpsl
popa
pusha
dec
lock
iret
adc
or
mov
or
inc
mov
bnd
enter
cmp
pop
mov
out
lret
aam
dec
mov
mov
scas
sbb
dec
adc
mov
lret
leave
xchg
sbbl
inc
cli
mov
or
movsb
mov
aaa
adc
loope
pop
add
fmulp
int3
imul
jno
mov
out
rorb
repnz
daa
and
and
sahf
stos
movsb
mov
xlat
jbe
add
jge
into
sub
ss
loopne
mov
xor
jl
dec
xchg
dec
cmp
pop
pop
xor
xchg
dec
push
bound
mov
filds
xchg
xchg
cmpsb
loop
dec
in
outsb
in
enter
pop
icebp
mov
push
xor
fisubrs
dec
daa
cmp
scas
movsl
jb
jmp
push
mov
out
sbbb
sbb
xchg
std
add
test
je
or
test
cmp
xlat
out
adc
push
add
push
add
pop
fmul
stc
pop
sub
push
hlt
outsb
push
sub
mov
jg
jae
mov
dec
mov
loop
mov
jns
and
push
inc
int
lock
mul
das
ljmp
push
pop
mov
sbb
and
sahf
rcr
test
xchg
out
jg
sub
jecxz
dec
stc
lret
adc
fs
subb
and
mov
fadds
out
btr
adc
push
stc
cmp
ljmp
and
out
xor
mov
push
adc
jmp
std
and
mov
les
and
push
mov
test
xchg
sub
jge
dec
gs
adc
jecxz
ret
jp
inc
ds
fldcw
lret
mov
loop
or
xchg
xchg
jo
sbb
les
cld
pop
and
icebp
xor
xchg
push
cs
aad
sbb
nop
adc
xchg
jb
data16
sarb
jecxz
mov
lea
test
mov
imul
nop
cvtps2pi
cmp
pop
or
test
pop
pop
das
pop
lods
stos
mov
sbb
and
and
rorl
in
cmc
std
cwtl
xchg
cli
xchg
cmpsl
mov
sahf
adc
dec
xchg
push
cld
div
xchg
lret
hlt
js
mov
es
mov
jg
lock
rcrl
ror
aad
sub
repnz
push
add
push
jmp
test
dec
pop
fldcw
xchg
adc
stos
popa
sub
lods
fs
mov
inc
dec
and
arpl
jne
jnp
sub
arpl
cltd
cwtl
mov
lcall
push
out
out
fucom
outsb
pop
clc
mov
in
xchg
mov
sbb
pusha
push
cs
iret
pop
movsl
rclb
sub
out
andb
push
cmpsl
sbb
pushl
test
loope
into
shll
in
shll
pushf
xchg
dec
inc
stos
and
inc
shlb
inc
push
jae
or
add
push
push
xchg
dec
in
jg
loopne
lcall
cld
bound
jl
in
adc
mov
std
mov
and
addr16
rorb
mov
mov
dec
xchg
mov
mov
cmp
repnz
pusha
outsl
cs
jbe
mov
out
pop
sbb
cmp
inc
stos
fstl
mov
cli
jnp
or
in
pusha
ljmp
ret
or
dec
or
dec
jae
loop
push
ja
sub
loope
aam
data16
jle
out
movsb
scas
cmp
xchg
dec
imul
inc
push
cmp
dec
adc
and
leave
vphsubbw
hlt
push
stc
xor
scas
imul
dec
or
pop
add
aaa
rcrb
add
int3
push
outsb
pop
mov
ficomps
push
lds
jns
and
mov
and
hlt
push
cmp
sub
inc
adc
xor
xchg
jge
jns
sbb
lods
xchg
daa
mov
mov
jno
cmpl
rolb
xor
loope
jno
xchg
aaa
push
xor
push
push
push
mov
add
adc
gs
or
push
mov
enter
pop
xor
icebp
loope
adc
sub
aad
cmp
sbb
clc
nop
in
movsl
jns
mov
subb
xor
pushf
add
pop
sbb
inc
ret
and
inc
xor
js
lret
mov
lcall
mov
sub
jb
outsb
mov
and
rclb
mov
mov
inc
and
xchg
adc
jp
push
sub
mov
negl
push
mov
push
inc
sbb
rorl
fs
test
loope
mov
outsl
pop
or
loop
and
stc
orb
adc
xor
push
xchg
mov
call
jmp
xor
daa
or
call
or
xor
cmpsl
inc
adc
dec
imul
mov
add
data16
lods
das
mov
mov
push
mov
xchg
add
mov
adc
inc
sti
mov
aas
cmp
cld
xchg
loopne
insl
jb
and
cmp
repz
dec
fwait
xchg
pop
sub
jle
ficomps
and
push
sbb
push
je
pushf
inc
out
pop
jmp
mov
xor
pop
mov
jmp
adc
or
and
out
mov
dec
jecxz
and
jle
sub
fadd
push
mov
outsb
orb
int3
inc
dec
dec
aaa
fistpl
dec
pop
lods
insb
pop
inc
test
jmp
das
testb
sti
loope
mov
mov
rcr
xchg
push
negb
cltd
stc
std
insb
in
cwtl
dec
test
cmpsl
mov
jl
icebp
and
pushf
cld
and
lret
arpl
xchg
mov
iret
mov
aam
mov
ret
fisttps
mov
daa
in
imulb
push
test
push
test
ljmp
imul
jge
mov
push
mov
fidivrl
cltd
iret
sahf
stos
test
xor
fisttpll
dec
test
xchg
iret
sbb
je
roll
in
mov
mov
push
jmp
dec
fsubrl
andb
xor
insb
addr16
enter
cld
sbb
lahf
addb
out
ja
repz
dec
stos
ret
in
js
or
xchg
sbbl
push
push
movsb
add
cli
sub
int
inc
shl
jns
dec
jne
push
pop
lret
cwtl
shlb
ss
pop
fnstsw
dec
jp
mov
cmpl
mov
mov
es
int
mov
jmp
inc
mov
andl
shrb
xor
sub
sub
pop
insb
lret
jnp
push
movsb
jle
push
in
jne
pusha
test
xchg
rorl
ret
sbb
jge
popa
inc
enter
aas
loopne
cmp
dec
mov
in
add
xor
and
jns
imul
push
push
subl
int
fnstcw
repnz
pop
leave
and
hlt
mov
jmp
push
or
lcall
or
adc
add
push
push
int3
aas
xor
sahf
fdivrp
ss
int
rolb
scas
in
stc
and
sbb
cmp
shll
mov
and
or
sbb
and
adc
mov
push
cld
and
mov
pop
imul
imul
cmp
mov
cmc
ret
or
test
push
sub
cmpsb
call
push
enter
pop
outsl
sbb
loope
es
aaa
lcall
andb
and
cmpb
sbb
lret
add
std
mov
adc
mov
or
int
sbb
xchg
xchg
pop
movsl
insl
jb
mov
or
lock
hlt
rclb
outsl
jmp
jg
iret
divb
add
inc
mov
or
and
stos
faddl
mov
scas
adc
pop
jl
negl
push
lret
or
mov
rolb
sahf
pop
adc
leave
mov
cmpsl
push
stos
outsl
cmp
pop
enter
mull
clc
adc
imul
or
out
pop
ss
cmp
or
in
out
cmp
cmp
or
test
jmp
insb
cmc
add
outsb
xor
bound
pop
pop
xchg
sub
sbb
loop
adc
shrb
jmp
pop
sub
lods
push
arpl
mov
insl
sub
sub
mov
jg
sahf
sti
dec
movsl
data16
push
and
inc
cld
loopne
sbb
dec
and
dec
fstps
sbb
gs
pop
inc
sbb
cmp
fcmovnb
movsb
xlat
xor
mov
pop
adc
cmp
jmp
jo
cs
mov
mov
mov
aas
test
inc
push
je
es
and
and
sbbl
call
outsb
cmc
push
shrb
dec
xor
mov
gs
or
mov
mov
xchg
and
shll
mov
pop
std
adc
loope
or
mov
icebp
stc
test
lret
rolb
mov
cmpsb
or
jmp
cmp
shlb
xor
cmc
jae
aam
gs
outsb
outsb
sbb
stos
dec
subb
mov
dec
ret
aas
xchg
mov
out
ljmp
sbb
mov
lods
in
add
cltd
rorb
jbe
add
sbb
test
ret
insb
cmp
fnsave
add
rolb
cmp
or
jmp
out
dec
pop
and
pop
cmp
jo
js
aam
scas
or
jge
enter
mov
dec
test
xchg
ja
ja
fwait
add
outsb
and
test
lods
fwait
cmp
push
fnstcw
add
xor
mov
bound
sbb
mov
cmc
xchg
fistl
mov
add
mov
cwtl
add
addr16
pop
jp
pop
adc
mov
mov
lcall
pop
pop
mov
and
fucomip
jo
xchg
push
mov
jmp
or
xorl
loopne
push
aam
mov
dec
or
push
test
shll
aas
je
insb
xor
in
jle
mull
in
jb
pusha
and
iret
xor
jbe
mov
fiadds
jae
loope
push
std
and
mov
fs
or
sbb
das
fsubrs
addl
adc
inc
repnz
leavew
stc
mov
arpl
stos
or
adc
sub
add
adc
and
sub
dec
push
cmpsl
rcrb
scas
call
or
jecxz
or
ljmp
out
stos
sbb
nop
daa
mov
fildl
jno
cwtl
jecxz
jecxz
cs
mov
sub
xchg
jbe
lahf
adc
mov
test
pop
pop
dec
inc
ss
cmpsb
imul
in
and
add
dec
cmp
push
out
loope
pop
cltd
sub
insb
hlt
cmp
xor
and
jo
adcb
sti
add
aaa
and
loope
mov
int
xchg
pop
inc
mov
movsl
pop
and
mov
push
or
mov
leave
outsb
jp
and
dec
nop
sub
add
mov
mov
jecxz
mov
stc
lods
push
movsb
outsl
pop
int
in
sub
xlat
cmp
sbb
test
ror
jp
add
jl
sahf
stos
sbb
test
add
sbb
loopne
pushf
inc
cmp
outsl
jge
pop
sahf
push
adc
dec
jg
out
mov
jne
int
fwait
loope
cli
outsl
inc
leave
xor
push
jp
in
ret
into
into
divb
xor
rcrl
mov
imul
inc
add
jp
sub
lods
push
mov
mov
pop
sub
jge
add
ljmp
out
xor
mul
loopne
fiaddl
inc
ja
cmp
fsubrs
in
xchg
fiadds
rcrl
dec
fs
and
pop
pop
or
adc
in
pushf
fwait
pop
fucomp
sti
add
repz
mov
nop
mov
mov
dec
xor
sub
xor
sbb
lea
into
call
sub
popf
xor
and
rcr
mov
add
inc
xchg
loope
inc
imul
addr16
fidivrl
mov
sub
negb
leave
lock
les
cmpsl
mov
push
mov
cld
js
adc
inc
mov
mov
nop
mov
inc
mov
not
inc
pop
cmp
in
inc
call
ret
std
push
cwtl
es
test
xchg
int
xchg
mov
data16
movsl
mov
mov
iret
xor
or
lods
mov
cwtl
xor
cltd
cmp
adc
mov
xchg
rcll
dec
fstl
xchg
clc
arpl
xchg
pop
sbb
insb
shll
jge
pop
cmpsb
ret
xchg
outsl
shr
test
jle
cmp
loop
movsbl
xor
arpl
or
lea
push
xchg
mov
movsl
into
xor
jl
nop
test
popf
mov
dec
nop
into
aam
sbb
cmp
aaa
lods
fwait
push
sti
cld
add
push
negb
dec
sbb
out
movsl
jns
into
pop
in
and
mov
mov
mov
push
push
and
fsubr
jp
rorb
mov
jbe
mov
std
mov
dec
inc
push
jne
pop
das
mov
xor
arpl
or
pop
xchg
xlat
lcall
in
or
sub
sub
sub
push
push
add
mov
jle
js
in
rcll
pusha
mov
ret
jno
add
inc
pop
jmp
lock
fidivs
shll
adc
rolb
popf
inc
jb
mov
jecxz
dec
ficoml
xlat
pop
sbb
mov
push
scas
movsb
ljmp
vmwrite
repnz
lods
fxch
jo
xchg
hlt
cmp
ss
push
icebp
orb
sbb
or
cli
enter
push
int3
adc
inc
fiadds
mov
jbe
jecxz
mov
or
movsb
out
xchg
push
push
jns
jbe
cmp
mov
sbbb
in
daa
mov
jnp
jno
pop
push
dec
stc
mov
push
flds
xor
repnz
xor
sub
ljmp
cmpsb
out
xchg
out
in
or
rcll
in
xchg
shrl
mov
loope
mov
movsb
cmp
clc
ds
out
mov
mov
or
movsl
insl
xor
mov
mov
push
nop
dec
inc
pop
imul
js
fidivrl
mov
cmp
push
pop
mov
fdivrl
fwait
sub
mov
xorl
jg
cmp
mov
lcall
jmp
fsubl
fisttps
int
std
jle
dec
xor
fmul
push
lret
cmp
data16
out
mov
inc
xor
xorb
dec
sbb
sbb
pop
outsl
sti
fucomip
loop
sahf
daa
stc
cmpsl
loope
ljmp
xor
cmp
xor
iret
cli
mov
lahf
stos
cmp
xlat
int3
or
ficompl
xor
sub
ret
stos
mov
adc
or
add
ficompl
lods
in
icebp
mov
and
inc
mov
push
cmp
decb
push
lahf
gs
leave
loopne
scas
fs
aas
sub
xor
push
pop
movsb
repz
sbb
mov
mov
pop
icebp
lea
push
rorl
pushf
inc
dec
aaa
jmp
pop
add
aad
inc
adc
out
ss
jmp
dec
lods
pop
mov
jecxz
test
movb
jle
dec
adcb
mov
mov
fldenv
dec
or
das
pop
xchg
mov
scas
inc
test
das
xchg
sbb
mov
cmc
fsts
sub
fnstenv
push
arpl
popa
xchg
cs
jg
or
mov
cmpsl
pop
call
lret
mov
aam
lret
mov
pop
cmp
pop
inc
stos
rclb
cmc
out
jecxz
repnz
movb
add
es
adc
repz
dec
inc
std
mov
or
outsl
ljmp
shrb
or
adc
mov
maskmovq
pop
add
decl
test
dec
test
repnz
clc
sahf
dec
pop
xchg
je
sbb
ljmp
push
imul
xchg
icebp
xchg
and
add
lods
push
ljmp
pop
hlt
or
sbb
mov
test
ljmp
push
or
ja
dec
and
inc
mov
dec
or
inc
das
fwait
xchg
nopl
jb
add
imul
bound
mov
addl
xchg
jns
pop
mov
je
sub
pop
push
inc
dec
addr16
test
mov
push
add
adc
push
jne
add
mov
pop
xor
sub
xchg
lods
ret
add
movsl
xchg
mov
popa
add
jo
jne
pop
fldt
and
adc
out
stos
test
mov
outsb
jnp
int3
cmp
sbb
xchg
mov
cwtl
pusha
push
add
iret
out
add
rcrb
pop
inc
jmp
icebp
lret
push
xchg
popf
push
pop
cs
adc
sbb
push
cmp
xor
push
push
std
arpl
ljmp
repnz
mov
leave
out
shl
push
arpl
das
mov
or
subl
inc
icebp
or
sbb
int3
add
pop
adcl
cmc
stos
lds
rclb
andb
into
xor
push
lahf
lock
jb
sahf
push
insl
dec
push
jbe
ret
xor
jae
daa
mov
iret
pop
jno
and
xchg
dec
push
popf
clc
xor
dec
mov
lahf
push
push
popf
test
mov
cmp
mov
cmpsb
jno
in
icebp
loopne
enter
pop
sub
pop
push
loop
loope
aaa
dec
sub
push
pop
cmp
push
out
test
into
and
push
nop
cmpb
sbb
dec
cmpsl
jbe
jg
cmpsl
push
cmp
cmp
rolb
and
es
dec
fsubl
movlps
jle
scas
outsb
inc
les
enter
add
jbe
jne
mov
mov
mov
movsb
mov
ficoms
out
arpl
push
stos
sbb
int
sti
sub
dec
mov
lret
sbb
std
decl
ss
sahf
lock
pop
rol
cmp
lds
orl
das
in
pop
loope
fs
jle
mov
aam
cmp
jmp
push
out
add
cli
aad
daa
xor
lods
cmp
fs
or
inc
cmc
pop
cmp
pop
mov
out
imul
and
add
dec
imulb
mov
enter
faddl
mov
rclb
pop
cmpb
inc
xchg
gs
pavgb
cwtl
pop
dec
sahf
test
inc
popf
dec
jp
cmp
les
xchg
fs
sbb
jmp
dec
and
pop
movsb
lds
icebp
adc
jmp
ja
cs
int3
mov
aas
xchg
jb
push
out
and
jecxz
sub
mov
lea
jbe
call
stos
mov
pop
addl
movsl
pop
pop
cmp
inc
mov
lods
jb
jb
xchg
mov
lods
or
jecxz
adc
fdivp
and
lock
or
or
mov
std
sub
jle
inc
cld
into
js
lret
pop
push
testl
cli
adc
shr
mov
ds
jne
ret
sbb
xor
jne
in
inc
dec
inc
clc
lret
inc
cwtl
ljmp
xchg
lods
jnp
mov
adc
push
dec
mov
push
mov
ja
stos
les
hlt
mov
or
call
clc
fsts
xchg
lods
sbb
jl
cld
out
stos
jne
cmp
jno
call
push
out
cmpl
push
xor
cmp
and
xchg
xor
xor
fildl
dec
outsl
fsubrl
sti
stos
out
jbe
fs
dec
divl
pop
dec
push
ret
add
xchg
out
dec
xchg
dec
bound
insb
jns
in
in
jns
xchg
enter
adc
pop
fcompl
rolb
jl
jp
aam
mov
push
fdivrs
cmp
jne
or
mov
xchg
pop
fisttps
pop
xchg
jg
xchg
divl
or
loop
out
jae
aas
daa
sub
pop
pop
push
mov
and
test
sub
mov
xlat
jle
push
xchg
in
sarl
dec
dec
pop
ret
adc
cmp
jae
pop
adcb
sbb
popf
rcrb
dec
jmp
movsb
jecxz
push
cld
mov
inc
dec
packssdw
pop
scas
push
dec
push
popf
mov
adc
sbb
mov
add
mov
hlt
into
cwtl
pushf
arpl
jns
inc
or
imul
mov
mov
add
dec
int3
jmp
mov
fimuls
dec
stc
shrb
and
stos
cmp
and
lds
popa
sub
inc
ja
jge
sub
sbb
popf
cmpb
xlat
dec
jno
inc
test
insb
dec
xlat
sbb
lahf
in
push
jo
cmc
mov
push
mov
test
sub
inc
jecxz
cmpsb
hlt
pop
ret
in
fsubs
jmp
push
in
inc
loope
fidivrl
sub
add
cmp
lcall
pushf
inc
lret
fisttpl
or
mov
add
fstl
push
sahf
sbb
mov
jb
pop
mov
add
in
cmc
mov
insl
jne
outsb
mov
mov
rcr
negb
jbe
scas
mov
xor
and
jle
push
lods
pushf
push
int
sub
mov
pop
ss
out
jno
rcll
sbb
mov
les
adc
jns
mov
cmc
jmp
adc
movsb
test
lock
ss
pop
cmp
cmpsb
mov
out
push
cli
or
xor
mov
pop
push
or
mov
into
ja
out
pop
ja
xor
inc
pop
fnstcw
adc
dec
imul
nop
add
fnstsw
xor
add
mov
out
aam
mov
sub
and
decb
dec
gs
xchg
dec
dec
std
lock
inc
mov
daa
fnstenv
stc
dec
jp
mov
test
mov
mov
mov
adc
sbb
pushf
pushf
mov
jmp
push
and
sbb
adc
mov
nop
xor
lahf
aas
and
xchg
dec
lcall
jecxz
sbb
lea
loope
ja
xlat
call
push
dec
mov
cs
loope
fisttpl
pop
pop
fmull
inc
daa
in
mov
mov
data16
fidivl
inc
cmp
shll
pop
mulb
pop
std
scas
iret
negb
mov
pop
outsb
icebp
push
sbb
cld
stc
push
push
lret
mov
jge
nop
sbb
push
pop
into
pop
subl
ljmp
roll
inc
ret
stos
test
es
insl
int3
jge
dec
cmp
repnz
imull
leave
daa
mov
and
shlb
mov
gs
ljmp
fdivl
push
js
scas
loope
clc
adc
inc
xchg
jg
sbb
sarl
dec
rcrb
jle
fs
loop
aam
sub
leave
outsb
or
xor
hlt
xor
cwtl
or
xor
mov
xchg
inc
and
mov
movsb
inc
loopne
fisttps
fldl
push
cmp
add
inc
inc
bound
in
in
and
xchg
pop
fistps
pop
jnp
mov
test
mov
sbb
mov
jne
mov
dec
and
dec
jmp
jnp
mov
loope
ret
nop
