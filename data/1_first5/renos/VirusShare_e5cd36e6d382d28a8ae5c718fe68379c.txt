stc
lcall
jmp
mov
push
call
mov
daa
daa
lahf
shrd
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
add
xchg
xchg
xchg
xchg
cmp
sub
xchg
xchg
xchg
sub
sbb
xchg
xchg
xchg
sbb
or
outsb
lcall
add
mov
mov
push
jns
mov
clc
clc
pop
pop
pop
ret
ds
mov
mov
repnz
sti
out
scas
mov
mov
ret
nop
outsl
lock
mov
out
loop
add
hlt
cmpl
je
repnz
xor
test
jb
inc
lock
add
rorb
mov
cmpb
je
sbb
je
repnz
jg
mov
and
xor
mov
dec
cld
mov
and
xor
jle
outsl
aaa
ja
pop
aas
lock
icebp
add
dec
hlt
mov
fst
in
add
js
clc
sub
cmp
jae
sub
cld
popw
repz
jne
mov
mov
testl
add
pusha
mov
adc
pop
dec
std
and
sti
push
xlat
cld
add
fldcw
fs
lock
lea
lea
hlt
add
sbb
dec
sti
pop
cmpb
jne
mov
adc
sub
push
adc
push
add
sub
ret
incl
cmp
loop
clc
imull
imul
push
mov
filds
cmc
sub
pop
sub
pop
sub
sbb
mov
fsubr
call
bound
adc
add
stc
std
addr16
mov
in
push
sub
jae
in
mov
mov
xchg
and
scas
mov
mov
sub
cmpsl
mov
std
pushl
and
adc
adc
loop
and
jno
and
mov
inc
mov
mov
enter
aad
push
fdivrp
jg
jge
cs
and
scas
pop
je
fs
dec
mov
jge
pop
movsb
pop
outsb
pop
in
jle
addr16
pop
ss
sbb
in
mov
xor
sub
sub
xlat
sti
jg
or
or
in
cmpsb
cmpsl
and
pop
mov
jle
sbb
mov
and
test
loop
jecxz
int
std
or
push
and
dec
mov
sti
stc
bound
dec
mov
stos
dec
cmpsb
scas
loope
mov
adc
cmpsb
imul
repnz
mov
pop
fidivs
in
push
add
int3
pop
mov
push
repnz
int3
loop
cli
pop
repz
sub
roll
dec
div
scas
and
addr16
sub
es
addb
lcall
push
and
fmull
in
testb
xchg
insl
xchg
std
mov
stos
aad
push
dec
imul
lcall
push
mov
dec
dec
mov
pop
jns
fisubrl
dec
adc
out
or
sub
sub
stos
and
sbb
xor
loop
jl
clc
ret
icebp
push
and
popf
push
movsl
aaa
adc
jae
dec
outsb
outsb
and
cmpsb
shrb
mov
insl
fisttps
pop
push
scas
mov
fucom
lods
pop
sbb
xor
push
mov
out
mov
pop
jp
lret
mov
js
lock
loop
in
mov
cwtl
cmp
inc
lret
xchg
push
jp
lcall
arpl
data16
pop
jae
rolb
xchg
bound
push
dec
shll
mov
pushf
scas
and
loope
and
sub
test
nop
aam
loop
hlt
mov
ja
jb
pushf
sub
lds
jmp
sub
xchg
fsubrs
mov
mov
stos
pop
pop
out
sub
in
pop
daa
repz
aad
or
inc
dec
add
sbb
mov
xor
addb
pop
mov
jb
in
mov
bound
push
ds
loope
mov
data16
out
stos
and
sub
std
hlt
ljmp
inc
mov
add
pusha
test
push
hlt
mov
mov
jne
test
jne
push
jmp
add
clc
sti
scas
call
mov
push
call
lock
mov
push
jp
test
movzwl
dec
test
jge
cmp
inc
lock
jmp
outsl
xchg
lea
mov
inc
ret
sbb
mov
add
add
adc
fidivs
push
jmp
pop
xor
or
je
pop
or
xchg
sub
add
or
push
push
push
cmp
jle
adc
xchg
push
or
jae
repz
or
inc
dec
rcll
add
push
cltd
ficompl
cmp
ljmp
decl
jne
add
xchg
add
ret
push
lock
inc
popa
mov
inc
gs
jb
push
ljmp
arpl
fs
jae
push
dec
outsl
popa
fs
imul
xchg
jg
std
dec
jo
outsb
push
push
outsb
insl
popa
jo
imul
insb
gs
cmp
mov
adc
je
popa
insb
inc
insb
insb
adcb
insb
dec
outsl
jbe
dec
gs
daa
fcomps
bound
decl
push
dec
add
pop
lea
dec
lea
lea
lea
push
xlat
cmp
je
dec
cmp
jnp
mov
inc
lea
mov
in
inc
inc
cmp
js
mov
mov
inc
mov
mov
mov
clc
incl
mov
mov
dec
inc
inc
ljmp
inc
dec
cmp
jne
dec
mov
lea
bound
fldt
ljmp
jno
cmp
mov
mov
jbe
inc
inc
lea
dec
mov
xchg
fdivl
jbe
mov
dec
jne
add
ret
push
sbb
mov
scas
inc
data16
iret
rcr
xor
mov
mov
outsl
jmp
xor
inc
dec
dec
adc
outsb
scas
mov
mov
jne
add
inc
rorb
sbb
and
jnp
mov
jle
js
inc
mov
lea
pop
aam
or
mov
cmc
dec
js
sahf
jne
dec
dec
jo
sti
call
in
lea
cwtl
call
inc
dec
stc
sbb
decl
outsl
jp
das
dec
dec
mov
mov
mov
dec
mov
pop
and
lea
mov
pusha
push
add
mov
jge
mov
mov
mov
incl
adc
sti
pushf
add
cmpb
jbe
daa
clc
in
dec
dec
inc
out
orb
fs
lea
ret
stos
xorl
push
cmpsb
cmp
lea
in
call
pop
sbb
pop
or
xchg
or
xchg
fmull
pop
divb
inc
jle
repnz
cmp
or
add
loopne
push
imul
xchg
jae
fldt
mov
cmp
adc
and
pop
add
icebp
mov
dec
adc
push
add
inc
mov
cld
mov
cmp
jo
xchg
dec
inc
mov
mov
mov
sbb
adc
mov
adc
outsl
xor
js
mov
add
bound
ja
pop
shrl
mov
mov
fsubl
clc
cmp
jg
in
cltd
stos
jge
mov
inc
insb
pop
sub
mov
push
into
mov
jp
xchg
mov
mov
mov
pop
dec
push
popf
lret
sub
cmp
js
cmp
cmp
jnp
add
add
into
dec
decl
jecxz
dec
ss
push
inc
cmp
jne
ret
aad
xchg
or
loopne
sbb
outsl
pop
push
icebp
mov
inc
pop
inc
mov
mov
pop
aam
add
dec
inc
dec
adc
sub
add
xchg
nop
push
jo
loopne
rorl
neg
imul
pop
stos
cltd
cmp
mov
mov
mov
lock
lods
fmuls
mov
roll
pop
fadds
and
aas
add
cmp
xor
cmp
xor
mov
xor
cmp
xor
push
xor
xor
cmp
das
xor
xor
ss
adc
adc
jns
xchg
pushf
xchg
sub
bound
mov
mov
insb
jg
or
call
fsubrs
sti
and
xchg
add
andl
mov
mov
scas
int3
or
cmp
xor
outsl
dec
mov
inc
lret
mov
mov
cwtl
add
inc
mov
leave
fcmovu
cmp
call
push
clc
std
roll
dec
cmp
jge
xchg
mov
div
mov
mov
jb
in
push
sub
push
daa
xchg
icebp
adcl
push
lods
cmp
pushl
mov
inc
mov
pop
dec
loope
mov
mov
inc
inc
xchg
lods
inc
add
inc
or
dec
out
cmp
adc
pushf
mull
iret
inc
in
mov
pop
mov
orl
mov
inc
leave
icebp
lds
dec
int3
dec
cmp
pop
push
test
mov
push
movsl
fildl
scas
mov
loop
roll
xor
adc
rcll
xchg
scas
sar
jle
stos
repz
dec
add
mov
mov
lea
dec
adc
push
pop
imull
mov
mov
ds
inc
pop
sbb
cmp
jo
inc
inc
mov
cmc
mov
movsb
dec
pop
mov
mov
sbb
and
pop
mov
jbe
inc
dec
int
addr16
insl
adc
adc
push
loope
cld
mov
sbb
or
mov
repnz
and
mov
mov
jbe
dec
subl
inc
sbb
adc
xchg
inc
mov
icebp
fistpl
lret
push
adc
pusha
cmpsl
les
jge
add
mov
push
hlt
mov
adc
push
add
popf
lcall
xor
jbe
mov
mov
sahf
outsb
stos
or
dec
mov
mov
jp
push
push
jne
in
xor
jg
and
cmp
jg
dec
mov
les
adc
clc
push
fnstsw
mov
filds
push
in
inc
inc
inc
inc
dec
mov
call
or
in
repnz
dec
inc
cmp
jp
inc
inc
mov
xor
mov
orb
sbb
or
imulb
jg
mov
inc
mov
dec
inc
or
and
pop
leave
arpl
adc
jo
cli
frstor
xchg
sbb
insb
mov
mov
inc
dec
mov
mov
sbbb
mov
push
mov
xchg
xor
nop
mov
aas
cmp
mov
stos
test
pop
sbb
push
mov
sbb
dec
mov
add
or
and
call
scas
lock
ret
and
scas
pop
hlt
add
mov
add
add
cmp
sbb
dec
push
outsb
pop
sbb
pop
ret
movsb
ret
mov
xlat
out
ret
repz
cld
mov
and
jb
shr
add
test
push
jl
pusha
fs
push
and
out
repz
jmp
lock
xchg
dec
lret
sbb
shr
inc
hlt
shl
pop
in
movl
mov
je
pop
add
insb
jae
adc
fisubs
nop
lcall
decl
jne
add
push
jl
cmpsb
push
cld
mov
imul
or
out
jl
shr
adcl
mov
add
jbe
in
lea
lret
mov
cwtl
sbb
sbb
push
pop
das
pop
in
push
test
sub
aaa
lret
fsubs
ja,pt
iret
nop
dec
xchg
cmp
test
push
movsb
mov
les
sub
jp
jmp
sbb
aaa
data16
repnz
and
out
int3
cs
xor
adc
jge
mov
aam
mov
orl
pop
test
out
cli
cmp
add
add
fs
insb
addr16
imul
pop
and
mov
inc
dec
data16
push
imul
arpl
jo
jbe
popa
jg
jbe
pop
inc
jo
add
jo
imul
jbe
jns
insl
jo
data16
jno
arpl
push
push
outsb
fwait
mov
push
jo
outsb
insl
jae
dec
data16
outsb
ja
outsb
sbb
gs
jg
dec
orl
add
jp
jmp
test
add
jo
loopne
ds
in
push
xor
add
call
mov
or
push
fadd
bound
rorl
loope
inc
aaa
sub
add
xlat
xchg
xchg
lret
shrb
add
es
or
jg
sbb
std
push
ret
adc
push
aas
sbb
fadd
inc
sti
and
jl
jbe
jl
pusha
push
jmp
cwtl
pop
sbb
outsl
xor
push
push
add
or
pop
cmpl
pop
jne
mov
outsl
les
dec
push
or
imul
clc
cld
stos
sub
mov
sbb
sbb
push
and
add
fsub
lock
push
jno
inc
test
inc
repnz
lock
mov
sub
cmp
sub
adc
adc
jle,pn
add
inc
pop
jle
mov
dec
lods
fcom
push
or
and
add
cmp
xor
xor
xchg
xor
cmp
mov
sbb
dec
sub
incl
jg
ds
enter
adc
add
test
add
adc
inc
and
xchg
ret
rorb
lea
xor
sbb
imul
mov
pop
jo
push
mov
jne
gs
mov
in
shll
or
mov
or
clc
aas
push
add
pushl
sub
sbb
or
xchg
imul
jno
push
xor
fsubr
cmpsl
loopne
or
xlat
jbe
sbb
inc
data16
adc
push
loopne
nop
xor
cmpsl
dec
and
cmp
ss
mov
call
add
in
lock
add
mov
jo
shrb
pop
mov
lea
and
xor
cli
testb
mov
cmp
xor
xor
jge
xor
or
xor
cmp
xor
in
xor
push
jo
call
mov
jg
push
add
mov
inc
inc
mov
mov
rolb
popa
cli
out
jle
inc
add
or
andnps
hlt
mov
sbb
cmc
push
push
scas
hlt
movb
add
adc
inc
inc
or
stc
and
hlt
fimuls
inc
test
inc
in
clc
test
add
add
lcall
mov
js
add
or
or
mov
push
or
jecxz
mov
mov
fldl
add
and
xlat
in
rcrb
cs
pusha
jmp
and
xchg
dec
mov
add
inc
xchg
inc
es
arpl
mov
clc
mov
pop
add
dec
add
loopne
icebp
and
cmp
add
mov
push
cmc
mov
cld
jbe
inc
mov
jmp
inc
mov
lea
mov
mov
mov
cmp
addr16
mov
lock
loopne
or
inc
jmp
add
dec
dec
inc
cmp
jbe
imulb
mov
or
push
clc
dec
xor
pushl
mov
jle
cld
incl
mov
cmp
ja
jle
mov
idiv
int
adc
adcl
lea
loop
push
cld
pushl
shrl
mov
iret
mov
dec
add
mov
mov
pop
mov
push
dec
inc
mov
leave
dec
mov
mov
inc
dec
lds
clc
mov
into
je
push
decl
dec
mov
cmp
je
shl
jb
pushl
mov
icebp
inc
mov
inc
inc
cmp
jg
inc
lock
je
cmp
dec
cmp
jge
mov
das
clc
call
and
mov
lods
pop
sub
xorl
enter
cmpb
jo
sub
sub
sbb
push
inc
sub
or
icebp
cmp
orl
popa
and
in
cld
aas
sbb
inc
inc
pop
cmp
je
das
cli
mov
int3
movsb
adc
clc
jns
lea
dec
fs
xchg
call
mov
sbbb
dec
iret
pop
dec
dec
dec
decl
dec
loop
sbb
dec
mov
in
sbb
cmpb
ficoms
dec
repz
ljmp
bound
inc
mov
lea
testl
jmp
pop
sarb
ljmp
enter
test
dec
add
pop
mov
jmp
clc
lea
out
dec
xchg
xchg
dec
outsl
cli
xchg
add
sub
repnz
loope
sub
incl
sub
inc
cmp
jne
ja
inc
adc
daa
adc
shrl
and
push
loop
push
dec
mov
push
xor
sub
adc
shll
mov
leave
add
stos
mov
popa
insb
add
mov
les
mov
xor
push
inc
inc
and
mov
jmp
mov
inc
jae
inc
cmp
and
push
int
dec
or
clc
pushl
daa
incb
inc
inc
add
pop
and
pop
nop
test
in
orb
mov
add
xchg
push
jge
mov
daa
and
add
and
daa
fcomp
sbb
daa
daa
sbb
push
fwait
ss
aaa
pop
inc
sub
pop
sbb
popf
mov
cs
add
or
mov
add
dec
imul
pop
ljmp
dec
dec
dec
add
inc
add
push
push
dec
xor
push
outsb
fistps
push
inc
inc
or
sub
sub
neg
sti
daa
inc
add
cmc
add
pop
pop
jnp
cmc
and
incb
fildl
stc
pusha
jbe
insb
cmp
test
sti
and
fisubrs
or
imul
icebp
adc
lds
enter
xor
hlt
and
iret
stos
and
loope
push
and
or
cmpsb
inc
mov
adc
das
add
or
and
xor
push
jae
push
or
sub
sub
and
xlat
lcall
shr
lcall
out
and
sbb
ficomps
sbb
fnstenv
fsubs
push
popa
sub
and
dec
sbb
mov
jg
lods
bound
xchg
mov
lds
sbb
mov
sbb
xlat
add
and
and
gs
insl
dec
push
pusha
mov
jle
or
xor
fmuls
push
inc
ret
xlat
push
lret
xchg
or
inc
test
add
mov
push
cmp
and
in
arpl
xchg
addr16
out
push
mov
cmpsl
arpl
pop
inc
imull
and
cmp
imul
push
add
push
lea
std
mov
mov
scas
adc
popf
pop
mov
repz
insl
leave
push
daa
sub
insl
insl
insl
mov
xorl
adc
xchg
add
adc
add
icebp
shrl
mov
add
cmp
lret
test
fdivs
mov
shll
bound
iret
arpl
fcmovu
add
pop
jnp
movsl
pop
adc
or
sub
fldenv
stos
popa
mov
cltd
sub
sbb
lcall
push
xchg
mov
test
sub
sub
mov
out
sbb
ret
adcb
xchg
inc
out
inc
mov
loope
add
icebp
loope
mov
adc
xor
adc
pop
daa
or
imul
sbb
push
fildll
jne
lahf
add
sbb
mov
push
sbb
add
or
adc
push
inc
xor
shll
ljmp
lea
push
stos
imul
push
jge
mov
jne
inc
test
mov
cmp
push
jecxz
iret
inc
test
shl
lods
cmpsb
insl
sub
aaa
lds
sbb
mov
pop
and
loopne
insl
push
inc
imul
adc
and
fwait
xchg
mov
stos
scas
mov
pop
sbb
loope
call
pop
mov
inc
pop
jg
movsb
bound
xlat
movsb
xchg
fimull
mov
data16
fldenv
push
insl
adc
dec
dec
dec
stos
sbb
fldcw
adc
xchg
fadds
les
lods
or
sbb
sub
roll
cwtl
jno
roll
mov
test
mov
push
popa
push
or
imul
cmp
xor
xchg
addr16
and
sti
leave
popl
mov
push
std
xchg
or
lods
andb
sub
stos
or
inc
sub
push
test
push
push
imul
inc
xchg
loope
mov
push
xor
test
insl
daa
sbb
jns
or
sbb
ljmp
mov
and
lahf
inc
ret
jae
shll
pop
adc
lcall
mov
dec
out
and
mov
push
lds
sbb
push
shrl
scas
jno
mov
and
cmpsb
cwtl
sbb
shrb
push
mov
lea
mov
sbb
outsl
push
std
pop
jno
push
pop
pop
sub
push
mov
sub
aaa
push
mov
in
iret
add
and
into
add
and
arpl
and
test
adc
test
fwait
adc
lahf
pop
fldt
test
or
push
add
dec
add
sub
lahf
xor
in
std
fucomip
add
mov
lods
add
push
popa
add
ja
scas
pop
fldt
sbb
jle
popa
and
mov
das
adc
sub
jns
into
inc
jg
es
sub
adc
repz
mov
push
add
xchg
mov
jge
push
add
lahf
mov
daa
in
mov
pop
enter
dec
cmpsl
inc
add
in
aas
aaa
mov
jo
scas
add
out
fnstcw
jmp
xchg
stos
es
mull
out
jle
add
mov
inc
xorb
incl
add
mov
in
fwait
and
and
lahf
sub
sbb
pop
popl
aad
loope
adc
pop
out
fneni(8087
sbb
mov
sbb
sbb
inc
fucomip
ds
sbb
add
shll
jge
test
arpl
sub
mov
mov
xchg
xchg
add
cs
add
movsb
ds
ret
cs
jl
sub
pmaxsw
and
in
mov
add
sub
mov
cmp
xchg
aaa
sub
js
ret
test
adc
xor
add
lret
dec
fstsw
pop
jg
mov
mov
test
xlat
sbb
cmp
and
in
push
mov
fistpll
add
and
imul
push
ret
adc
das
add
mov
add
sbb
push
inc
jg
sti
add
insl
xor
outsl
scas
mov
imul
and
mov
pushf
jmp
jae
mov
fxam
add
push
add
mov
icebp
dec
sbb
mov
ss
mov
fildll
fisubl
mov
iret
nop
rcr
fnsave
shll
pop
mov
and
mov
cwtl
cmp
and
or
sbb
mov
sbb
mov
jnp
pop
add
xchg
outsb
mov
lcall
xchg
fwait
lea
popa
and
loopne
push
mov
out
add
push
add
cmpsb
mov
xchg
mov
mov
pop
jo
cmc
call
test
test
das
push
lock
cmp
scas
pop
xor
out
mov
cmp
sbb
pop
iret
add
adc
mov
lret
pop
sti
xor
xlat
aas
xchg
psrlq
sbb
fists
iret
iret
popa
or
lds
add
dec
ret
and
pop
and
cmp
das
sbb
outsl
cwtl
ds
fisttpl
and
cmpl
scas
sub
daa
mov
and
add
pop
aas
dec
das
scas
xchg
cmp
ja
or
incl
add
aaa
imul
inc
xor
scas
cmp
pop
orl
cmp
inc
pop
mov
ja
gs
adc
fldlg2
add
add
nopl
rorl
mov
xor
cmpsl
and
dec
mov
dec
daa
outsl
lret
lret
out
push
pop
scas
subl
addr16
dec
jns
ja
arpl
jae
mov
subb
test
cmp
dec
pop
insl
in
out
jae
mov
fisubl
xchg
aas
mov
mov
arpl
scas
mov
js
lret
jnp
jle
and
dec
frstor
push
sbb
pop
scas
int3
add
pop
push
and
cmp
push
out
xchg
frstor
pop
stc
subb
pop
xor
cltd
and
int
and
jo
je
roll
fadds
fdivr
sti
testb
imul
and
stos
cmovle
scas
xor
jle
push
ds
out
iret
scas
xor
aas
lods
push
add
add
insb
lods
xchg
jne
movsb
les
or
push
xor
jno
js
inc
mov
enter
sbb
push
cmpsl
lcall
inc
mov
popl
adc
cmp
jg
ror
dec
andb
fldenv
shrb
adc
inc
loopne
jo
push
add
daa
es
incb
mov
out
outsl
sbb
iret
popl
pop
xor
or
jl
mov
sbb
fldpi
dec
addr16
sbb
dec
daa
inc
shlb
fidivs
loope,pn
int
xor
clc
es
and
sbb
aaa
popa
into
add
push
jmp
sub
mov
mov
movsb
jle
leave
dec
or
add
jle
enter
and
jnp
xor
cmp
loop
add
fdivs
or
adc
ret
pop
xor
mov
xchg
mov
add
cs
es
out
push
adc
mov
add
into
jbe
add
add
in
cwtl
mov
add
clc
jb
add
push
ljmp
mov
lahf
add
inc
push
sti
mov
xchg
mov
jns
add
jno
sub
repz
stc
mov
jle
push
adc
movsb
add
fistpll
or
mov
loopne
movsb
push
fdivs
push
ret
loope
stos
bound
repz
mov
xchg
in
xor
add
or
scas
xor
fstpt
pushl
jnp
push
jno
push
fsubrs
fmul
push
push
add
fldcw
in
mov
out
dec
sub
sub
adc
push
fbld
adc
dec
sbb
cmp
ss
xchg
add
sbb
push
mov
insb
and
push
iret
fcompl
xor
outsb
cld
daa
jle
repnz
es
fistpl
and
and
xchg
test
fcomps
add
aad
cmp
rorl
and
push
push
mov
xchg
dec
movsl
das
xlat
in
int3
or
scas
int3
adc
mov
fcomps
jmp
dec
adc
into
push
push
aas
lcall
int3
xor
lods
mov
cwtl
and
incb
add
imul
lods
lock
jno
and
je
jns
daa
adc
fisttpll
cmp
divb
xchg
test
aam
subl
cwtl
iret
call
or
sub
stos
inc
shrl
cmpsl
and
fsubrs
add
sbb
out
shlb
mov
inc
ja
add
nop
push
mov
xchg
sbb
mov
sbb
inc
loopne
notb
jmp
es
hlt
popa
test
pusha
adc
sub
xor
jecxz
push
aas
dec
rcl
insl
pop
out
testb
jle
add
mov
faddl
push
or
fisttpl
iret
outsl
insl
sub
or
jno
lock
imul
add
and
cmpb
test
scas
mov
outsb
lock
lahf
into
dec
loopne
roll
xor
out
cmp
movsl
sub
in
add
add
fst
adc
mov
mov
mov
push
jne
rolb
lock
lds
cwtl
sahf
sahf
xchg
sub
fdivs
xor
and
enter
sarl
dec
cmp
mov
stc
ja
jl
ja
add
add
jge
out
jle
jl
mov
cmpsb
daa
and
pop
or
push
mov
jbe
out
into
aad
or
pop
mov
jg
cmpsb
push
xchg
cld
xchg
sbb
je
fdiv
add
cmp
data16
push
jg
sahf
popa
jno
mov
add
in
out
pushf
jno
ja
lock
mov
ret
ljmp
mov
or
iret
jp
inc
lock
inc
push
stos
sub
push
xchg
in
jg
out
push
imul
fsubrl
pop
add
xor
jno
orl
jns
adc
cmp
cwtl
and
lret
ja
pop
roll
or
or
outsb
pushf
jo
cmpsl
sbb
mov
subl
inc
test
xchg
inc
pop
mov
push
and
mov
loope
lods
bound
push
inc
adc
cmp
popa
pop
xor
jb
in
adc
bound
cs
out
fs
push
test
divl
insb
inc
jo
roll
and
lods
push
mov
insl
mov
adc
ret
into
loope
leave
xlat
pop
push
lret
ljmp
rol
test
shl
inc
inc
sub
mov
loopne
mov
pop
jp
scas
sbb
fidivrs
fistl
push
xchg
or
pop
add
jecxz
inc
mov
shrl
xchg
in
fisttps
pop
jb
add
in
push
xchg
push
dec
fsubs
xchg
pop
xchg
stos
mov
test
and
fwait
leave
xchg
imul
or
fildl
mov
loop
pop
mov
cli
and
negl
adc
stos
sbb
imul
lock
mov
ljmp
loope
and
pop
jbe
xchg
mov
mov
mov
cmp
arpl
cmp
add
xor
ja
mov
push
pusha
xchg
mov
mov
shlb
and
xor
or
sarl
scas
push
ret
loope
mov
in
jbe
mov
pop
mov
add
or
out
sub
xchg
adc
cmp
ss
dec
ret
out
pop
test
leave
jno
stos
and
ret
arpl
adc
ds
sbb
ja
mov
test
push
jmp
andl
mov
fisttps
push
jne
inc
iret
ja
adc
pop
adc
push
xchg
dec
add
fcmovbe
jmp
ret
into
stc
and
lock
nop
adc
into
xchg
shll
les
movsb
es
pop
arpl
xchg
xor
mov
mov
int3
std
adc
add
xlat
adc
dec
inc
iret
pop
popf
dec
hlt
imulb
call
cltd
pushf
or
mov
rorb
pop
daa
cmp
fdiv
cmp
xor
lcall
popa
sub
cmpsb
fstpl
inc
into
or
and
and
ja
push
pop
jnp
fistpll
push
jae
mov
inc
xchg
sqrtps
sub
cmp
je
dec
cld
jns
js
out
jp
mov
dec
iret
or
jmp
jo
xchg
test
frstpm(287
adc
outsl
add
jo
mov
add
mov
adc
or
add
iret
fimuls
movsl
dec
pusha
sbbb
fs
push
dec
add
ret
jne
sti
leave
iret
icebp
add
jne
fyl2xp1
jno
xchg
fadds
push
daa
add
das
iret
pop
cld
xlat
dec
jg
aas
sub
pop
popa
xchg
sahf
sbb
in
push
xchg
sub
inc
rcll
test
pop
imulb
or
scas
jns
push
call
pop
sub
sbb
xor
add
or
and
test
daa
cmp
jl
cmpsl
xstore-rng
cmpsl
ret
cmp
pop
dec
iret
inc
push
pop
mov
jg
push
out
test
shll
in
and
insl
sub
adc
rolb
mov
lret
xchg
adc
adc
rcrb
loopne
mov
mov
sahf
sub
es
fnstcw
add
aaa
sub
movsl
movsl
sbb
dec
ja
in
mov
das
mov
test
test
xchg
fisubl
push
insl
xor
iret
push
sub
sahf
icebp
pusha
inc
popf
ljmp
jo
xor
int3
ret
xlat
divb
in
aad
or
push
cs
outsl
add
pop
test
inc
loope
lret
mov
fisubrl
call
imul
lret
mov
lret
mov
js
push
je
xor
inc
push
nop
sub
clc
loope
dec
and
rcll
push
add
xchg
stos
cs
xchg
enter
test
js
ja
movl
push
ret
cmp
loopne
lds
or
clc
test
jle
icebp
mov
push
cwtl
int3
xchg
add
lods
pushf
sbb
sbb
xlat
and
mov
lret
inc
sub
dec
push
inc
rorl
fidivrs
gs
fidivl
adc
push
aaa
pop
ret
fneni(8087
push
fsubrp
andl
aas
out
push
pop
jg
arpl
sarl
xchg
out
mov
shrb
jae
mov
mov
fistps
arpl
sub
mov
dec
pop
mov
int3
lods
mov
aas
inc
addr16
and
jp
int3
add
mov
xor
pop
push
ret
enter
and
out
sqrtps
out
jno
jbe
jne
jo
push
mov
pop
and
addr16
sub
rcll
cmp
mov
clc
and
outsb
aas
loop
add
clc
daa
and
loopne
iret
sub
pop
lock
xlat
bound
and
clc
rcrb
dec
mov
movsl
sub
iret
add
or
ljmp
ja
shll
pop
fadds
fisubrl
frstor
and
and
mov
rol
ret
loope
pop
jbe
lods
ds
mov
cmp
jl
rorl
adc
scas
sbb
dec
add
cmp
pop
aaa
sub
mov
in
and
sbb
add
adc
ret
mov
jle
jmp
push
in
ljmp
adc
bound
push
mov
cmc
and
push
xorl
push
pop
xchg
push
add
in
inc
std
inc
andb
rcrl
data16
and
pop
and
daa
push
test
and
push
enter
sub
cld
ds
cmpsb
pop
fiadds
adc
mov
add
jne
sahf
arpl
call
psubq
push
inc
xlat
sub
push
stos
outsl
lods
fwait
adc
je
mov
xlat
rorb
outsb
inc
and
adc
and
bound
cmc
add
jmp
ret
pop
pshufw
adc
fwait
jbe
mov
push
pop
lods
cmp
orl
sahf
mov
lcall
in
das
pop
jns
cli
add
jno
push
add
push
jb
mov
outsb
out
pop
sub
lods
jmp
das
je
jl
mov
cs
das
loopne
lock
call
in
jle
xchg
lock
lea
cmp
jo
ret
dec
pusha
rcr
lods
adc
ja
dec
mov
cmpb
mov
jecxz
cs
fcmovbe
sub
sub
sbb
xor
adc
insb
jl,pn
mov
and
and
mov
clc
mov
lea
loop
imul
sbbb
out
rorb
push
cmp
push
stos
leave
out
or
inc
mov
std
pop
inc
pop
in
mov
jo
nop
clts
jno
and
test
mov
xor
movsb
push
stos
mov
or
dec
movl
pushf
xor
mov
icebp
test
sbbl
aas
mov
js
daa
outsl
dec
pop
cmp
and
xchg
fs
lods
sahf
mov
jno
add
adc
sub
or
mov
push
aaa
js
ret
outsl
inc
lahf
and
jb
add
cltd
stos
inc
cltd
addl
gs
jl
add
and
push
push
add
sahf
lods
stos
fadds
pop
and
stc
and
outsl
mov
push
pop
jp
ret
push
sub
push
pop
fsubs
lock
and
xchg
lcall
sahf
sti
cmp
roll
iret
out
xlat
push
das
and
cmp
outsl
aam
dec
jno
ss
mov
xorb
inc
and
add
jno
adc
sbb
pop
pop
jae
push
pop
imul
pop
ljmp
mov
imul
aam
sahf
loopne
jb
jmp
in
ja
lret
pop
dec
jb
mov
out
imul
stc
out
jmp
sub
xor
xchg
jmp
roll
sahf
mov
mov
add
sti
hlt
xorl
xchg
out
add
inc
sbb
shrl
in
cmc
dec
mov
jl
inc
cmpsl
pop
adc
cmp
fldenv
mull
int3
pop
adc
xor
dec
pop
mov
sbb
mov
jmp
sbb
and
out
cmp
fwait
adc
or
jle
jne
pop
cltd
scas
lcall
and
movsl
lock
push
dec
push
push
aas
jnp
xchg
mov
or
fbld
push
and
push
cmc
test
test
addl
stos
mov
fisttps
dec
lahf
hlt
sub
nop
pop
push
inc
or
adc
cltd
sbb
jl,pn
les
pusha
sub
push
in
dec
aad
mov
and
gs
or
pop
sbb
jb
pushf
icebp
push
sub
ret
cmpsl
adc
inc
push
jne
jle
mov
fstpt
adc
ret
push
stos
mov
faddl
xor
add
roll
and
mov
mov
add
popl
out
dec
xor
xchg
xchg
sub
sbb
scas
push
cli
sub
jbe
inc
aas
push
mov
in
xlat
sub
stos
jb
jne
out
mov
cmpsb
shll
ljmp
mov
cmp
movsl
fcompl
mov
lds
dec
push
mov
inc
push
jns
dec
cwtl
shll
pop
int
je
add
divb
aas
fidivs
xchg
rorb
lahf
jl
cmp
cmpsb
sbbb
in
dec
ret
xor
add
daa
lea
testl
fidivl
adcl
xor
gs
jo
js
mov
push
sbb
cmp
js
push
sbb
and
jns
sub
jbe
mov
mov
lods
iret
imul
fcmovne
dec
sbb
mov
rdmsr
jle
and
ss
pop
cmp
fisttpl
push
cli
push
jb
mov
loop
lods
stos
jle
pusha
test
scas
fistpl
sbb
and
test
js
add
cmpl
push
and
sbb
xor
je
mov
out
stos
aaa
mov
push
jecxz
rclb
icebp
or
test
add
sub
mov
sbb
das
sub
inc
adcb
mov
mov
fisubs
xor
arpl
adc
xchg
push
call
add
push
shrl
aad
mov
and
pop
push
pop
inc
sbb
jg
mull
in
add
pop
add
adc
push
fwait
mov
je
cld
mov
mov
push
pop
add
or
cmpsl
into
and
pop
inc
scas
pop
lds
lods
imul
push
mov
xchg
aad
lds
push
call
mov
jecxz
gs
xchg
int3
sub
xchg
or
fcoms
xchg
data16
es
scas
jae
or
sub
decl
cmp
xchg
pop
or
dec
lock
cld
or
out
test
dec
add
cwtl
dec
popf
hlt
loopne
ja
jae
in
sbb
in
push
or
loope
cmp
dec
mov
divl
add
aaa
aaa
mov
roll
xor
outsl
jbe
adc
sub
das
loope
data16
push
mov
dec
dec
mov
sbb
rorl
xor
jne
jne
xor
fdivr
iret
popa
add
jb
outsl
add
mov
adc
adc
and
ss
loop
imul
xchg
and
ret
sub
pop
fsubl
out
es
cmpsl
stos
lret
addr16
push
test
add
bound
and
mov
xchg
daa
push
out
hlt
daa
mov
fs
push
leave
lods
ja
cmp
into
mov
push
add
sub
adc
lods
inc
test
lods
dec
scas
mov
loopne
pop
sbb
jl
or
js
rclb
dec
test
lahf
mov
das
dec
mov
jmp
push
pop
jmp
xchg
cs
jp
in
fwait
gs
lea
add
sarl
and
rcrb
mov
add
adc
sbb
push
ret
negb
pop
xchg
push
cmpsw
push
sub
lods
stos
iret
adc
lods
fstl
xorb
fwait
or
test
test
sarb
nop
add
jo
pop
adcb
out
xor
outsl
sbb
mov
gs
bound
cmp
or
repnz
je
pop
or
pop
adc
mov
test
into
lret
pusha
jnp
out
or
aaa
sbb
lret
mov
faddl
sbb
inc
jbe
lds
ret
fs
jle
and
scas
out
push
cmpsb
rclb
cmp
add
shlb
cli
inc
fcomp
xlat
xchg
mov
imul
mov
mov
sbb
aaa
mov
ss
fcoms
lods
call
lods
mov
xchg
loopne
scas
add
adc
aam
pop
rcll
mov
sbb
hlt
scas
lods
jo
jnp
rorb
ljmp
sbb
mov
popf
cmp
jp
call
push
cmp
cli
sbb
pop
das
je
hlt
repz
iret
ret
test
outsl
scas
and
push
jge
negl
les
sbb
mov
inc
sbb
ds
cs
jp
push
jb
inc
xchg
xchg
pushf
fisubrl
cwtl
ds
push
xlat
pop
or
push
clc
or
cmp
adc
shrb
je
mov
sbb
adc
cmp
pop
jbe
add
outsb
lret
cmp
pusha
pop
in
dec
add
cmpb
loop
add
ret
inc
mov
ja
pusha
fbstp
loopne
out
into
mov
dec
out
ret
inc
jne
pushf
fcoms
repnz
xchg
cs
xor
inc
mov
arpl
push
rorb
cmp
push
add
sbb
xor
into
inc
shll
loopne
mov
mov
je
xchg
sub
sub
and
add
mov
rcrb
push
or
dec
mov
pop
adc
fcompl
mov
cmp
pop
fdivrs
ret
lods
rorl
js
ja
adc
scas
repz
daa
lock
arpl
lods
add
pusha
cmc
mov
pusha
fcompp
jecxz
rcrl
push
sbb
jbe
inc
sub
fldcw
movl
push
jl
mov
inc
xlat
cli
pop
jb
jne
iret
les
imulb
pop
mov
iret
enter
add
cmp
ret
fiadds
xlat
call
es
xchg
push
fistpll
mov
fucomp
push
sti
inc
es
sbb
adc
cmpsb
add
xor
push
aas
xchg
sub
popf
jge
cmpsb
mov
jg
mov
add
rorl
cmc
xor
push
std
mov
cmp
test
cmc
inc
fsub
fstl
xor
jbe
in
xor
out
xor
inc
lahf
xor
loop
and
xchg
push
testb
adc
cli
shl
mov
rorb
cmp
and
stos
repnz
popa
lock
loopne
dec
fsubrs
mov
sub
cmp
xchg
jo
xchg
push
cs
test
add
mov
lea
mov
or
cmp
mov
jle
pop
in
push
jl
push
and
fwait
add
fimull
iret
adc
das
add
incb
add
mov
hlt
inc
xor
cmp
or
arpl
cld
jb
aam
ljmp
adc
leave
outsb
std
mov
dec
mov
cmp
push
pop
out
cmp
add
jnp
xchg
add
mov
sub
ficoml
out
lahf
in
cmp
aas
mov
test
fadds
clc
cld
fimuls
popf
mov
push
mov
push
pop
test
iret
out
cli
inc
daa
inc
cwtl
pop
lea
ret
push
mov
and
das
loopne
xchg
mov
and
addl
scas
mov
mov
enter
push
inc
ret
jl
adc
or
loopne
flds
add
lods
aam
cmp
cmp
loopne
cwtl
jmp
dec
in
rcrb
mov
sub
sbb
ror
fwait
inc
adc
jb
add
pop
mov
ret
xlat
rcl
pop
add
fmul
fisttpll
push
sub
ds
push
push
iret
jne
fcoms
scas
je
aad
setg
imul
ficoms
xchg
repnz
sbb
adcl
xchg
dec
sbb
iret
sub
sbb
push
jo
stc
fidivrl
test
pop
shll
push
sub
shll
xchg
inc
sub
rolb
jg
or
xchg
add
mov
int3
popl
out
in
or
fcmovne
fdiv
or
dec
scas
jle
aam
loopne
jecxz
lods
insb
and
pop
loop
xchg
jmp
imul
add
test
and
push
push
ret
incl
aam
inc
repz
push
cmpsl
cmp
mov
mov
mov
cmpsb
sarb
jle
out
repnz
movsbl
push
hlt
add
and
dec
add
push
ret
or
addr16
mov
or
hlt
mov
sub
rcll
xor
add
mov
jo
test
jp
cmp
ss
xchg
or
adc
mov
cmp
out
rorb
xchg
jecxz
mov
and
faddl
das
stos
sbb
sbb
mov
or
insb
leave
pop
push
or
push
sbb
or
cli
mov
inc
or
pop
cwtl
dec
ret
push
movsl
in
fdivrs
daa
push
adc
outsl
fucomi
pop
add
scas
sbb
push
outsb
lods
ss
pop
sbb
push
cmp
fstpl
in
aam
push
add
pusha
int3
ret
mov
sarb
lods
es
adc
jle
out
scas
scas
push
movsb
mov
adcb
loop
xor
fcomps
xor
stos
mov
pop
test
lods
xor
scas
testl
pop
mov
cmp
lahf
in
xchg
or
shr
dec
add
movsb
lcall
mulb
cmp
mov
and
jno
mov
sub
pop
or
inc
out
xchg
js
dec
ret
aam
roll
test
xchg
xchg
roll
sub
in
sti
addr16
mov
add
adc
movb
sub
xchg
shr
mov
arpl
add
fcmovnu
in
fcoml
or
pushw
pushf
inc
cmp
jns
sbb
jo
inc
add
sbb
mov
fmul
sub
jp
addb
xchg
inc
call
imul
call
pop
mov
arpl
sbb
lods
daa
cmp
in
jne
jbe
and
and
dec
aaa
in
or
nop
roll
push
pop
dec
push
adc
loope
jl
dec
cmpsl
push
push
sub
repnz
jbe
inc
ja
or
push
inc
add
xchg
sub
shrb
add
sbb
mov
cmp
mov
pushf
ret
cmp
pop
pusha
cmp
fcoms
lods
pop
cmpsb
rcr
js
mov
jno
ja
dec
cmp
shrb
adc
adc
sub
push
jno
or
mov
icebp
lods
das
out
pop
mov
es
inc
and
pop
loop
popf
dec
or
or
add
sub
cli
fsubrp
sbb
xor
aaa
movsb
iret
mov
add
ret
push
mov
add
in
addr16
jne
in
lock
mov
pop
mulb
mov
xchg
push
mov
lods
outsb
das
adc
mov
scas
cltd
movsb
fcomps
mov
push
fldt
in
cmp
dec
xor
adc
push
cmpsb
sbb
out
push
and
and
and
mov
sbb
leave
or
sbb
imul
mov
mov
cmp
rorb
xlat
addl
popa
pop
dec
and
mov
push
sub
cli
pop
fdivrl
or
fimull
pop
popa
xor
inc
icebp
mov
xchg
adc
or
fdivs
and
pop
push
fcoms
push
lods
pusha
cmp
jb
test
mov
cmpsb
pop
sbb
ljmp
dec
loopne
inc
cld
lret
lods
cmp
rclb
cmp
cmpsl
push
push
dec
adc
pop
cmp
sbb
xor
push
daa
ljmp
jo
loope
popa
sbb
fwait
inc
push
inc
mov
mov
js
movsl
lahf
sub
test
iret
and
int3
xor
mov
push
sub
adc
fcom
cli
sbb
push
flds
sbb
into
les
loop
imul
outsl
loope
mov
out
sbb
hlt
add
int3
es
ljmp
daa
into
ret
and
inc
sbb
jp
cmp
dec
iret
flds
add
and
testl
cmp
scas
int
sub
pop
psubb
testb
shl
stos
sbb
push
scas
add
dec
lods
sub
dec
mov
ds
dec
or
jnp
and
ja
in
loope
imul
push
loope
or
inc
cld
mov
das
push
ret
movsb
iret
jne
xor
cmp
es
lods
aaa
pop
bound
inc
sub
jno
call
leave
and
stos
xor
test
mov
mov
inc
push
movl
roll
dec
inc
les
shll
cmp
roll
jb
shrl
add
push
add
repz
incl
lods
jno
cmpsl
pushw
sti
mov
mov
sub
push
push
lcall
mov
jo
mov
sti
filds
cmpsl
gs
xchg
sub
lahf
test
add
lock
xor
rorl
cmp
pop
sub
jmp
add
sbb
and
push
push
dec
or
jmp
mov
jns
sbb
cmp
mov
lret
jo
fldl
lret
jne
js
adc
fsubrp
fwait
je
dec
out
adc
icebp
lret
popf
les
mov
pusha
sbb
daa
pushf
imul
lret
shr
loope
push
and
mov
sub
aad
mov
je
add
stos
cmp
dec
outsb
jl
dec
ljmp
test
test
scas
ljmp
out
xchg
into
scas
dec
btcl
adc
add
imul
sarl
adc
jno
push
jo
stos
aam
sub
mov
adc
andb
test
movsl
pushf
and
out
daa
sar
iret
mov
in
sbb
loope
mov
out
fldt
add
cmp
mov
mov
das
and
test
into
add
sbb
aam
insb
jecxz
sahf
or
cmc
lret
out
cmp
bound
lods
lock
add
rcrb
movb
xor
mov
cmc
je
stos
pop
fst
pop
test
dec
bnd
dec
pop
mov
dec
cmpsb
test
pop
shlb
or
lret
cmp
int
les
or
add
sbb
pop
in
add
loope
icebp
pusha
fsubrs
and
fisubrl
out
ja
cwtl
fidivl
cmpl
sbb
into
sub
or
lods
ds
mov
sahf
test
or
adc
push
fistl
push
shlb
mov
mov
int
outsl
inc
cmp
adc
mov
add
ret
mov
outsl
movsl
add
repz
insb
sbbl
push
or
movsb
imul
pop
clc
xor
sub
test
and
push
shl
outsl
jp
mov
push
mov
xchg
mov
mov
lods
or
fs
sub
sbb
cltd
iret
mov
jno
jl
jge
loopne
xor
sub
xorl
xor
push
bound
cmp
xchg
sbb
add
outsl
or
outsl
push
int
orb
or
pop
or
push
add
sub
push
clc
jp
jl
mov
repnz
js
dec
pop
das
test
data16
outsl
pop
jmp
mov
mov
out
lock
jne
mov
mov
loop
inc
lds
pop
popa
pushf
xchg
sbb
mov
mov
in
push
cmp
or
add
push
cld
pop
add
sbb
outsb
or
xchg
outsb
cld
mov
cmpsb
rorl
pop
mov
es
loope
sub
ret
lea
cld
add
xlat
js
imul
mov
dec
and
jb
pop
addr16
out
ljmp
push
ror
sbb
clc
and
adc
dec
fisubl
or
xchg
xchg
fldl
xor
inc
insb
dec
push
lods
pusha
push
cli
cmp
mov
pop
mov
and
out
addr16
lahf
xor
mov
dec
lea
pusha
cmp
lret
adc
xor
mov
ret
sbb
sbb
scas
xchg
xlat
pop
cmp
push
iret
fbstp
imul
xchg
and
les
cmp
cmpsl
icebp
push
fmuls
cmp
or
adc
dec
cmp
push
cs
xor
pop
cmp
test
out
mov
js
sub
or
or
lds
out
in
add
mov
and
lods
and
cmp
rolb
test
shlb
xchg
adc
inc
bound
loopne
push
or
sub
fwait
shlb
cli
sbb
sbb
shll
mov
xor
or
sbb
testl
mov
test
push
sbbb
sub
push
ficoml
pop
jo
sarl
sub
mov
cmp
popa
and
out
and
xorb
fiaddl
pop
mov
testl
mov
lock
iret
cmp
daa
rorb
pusha
xchg
les
jae
or
fldenv
das
shll
sub
sbbb
faddl
shlb
hlt
test
jno
out
cmp
add
ret
cmp
movsb
aaa
and
js
push
es
xlat
test
sarl
inc
ljmp
adc
in
or
daa
xor
lock
dec
sub
ror
pop
dec
add
and
mov
test
xchg
daa
mov
inc
mov
push
fdivrl
dec
out
jne
sub
mov
dec
in
hlt
add
daa
loopne
xlat
ret
movb
or
test
insl
xor
adc
jns
cs
aaa
mov
inc
sbb
jno
data16
and
mov
pop
cmpb
sub
fimuls
movsb
add
mov
push
sbb
test
iret
incb
loopne
aaa
sbb
cwtl
shrb
xor
imul
cmp
cmp
scas
jmp
bound
mov
add
sbb
clc
jmp
repz
out
mov
lds
hlt
inc
sti
xchg
shlb
test
lcall
roll
xor
add
add
pushf
fnsave
jmp
or
jbe
mov
mov
and
mov
sbb
mov
push
lret
add
push
pop
jo
daa
pusha
sbb
mov
sbb
fldcw
adc
sbb
out
jle
cmp
leave
dec
mov
cwtl
push
fwait
add
xchg
pusha
arpl
mov
pop
movsb
add
fadds
and
xchg
neg
mov
shrb
lods
pusha
and
fwait
xchg
and
jecxz
gs
push
scas
inc
inc
lods
bound
sbb
pop
pop
mov
jno
scas
sbb
jp
scas
lock
orl
mov
mov
cmp
dec
pop
mov
jns
jo
lahf
dec
sub
add
jle
adc
sbb
stc
cmp
xor
add
aad
sti
push
std
xchg
adc
sub
mov
pop
popf
test
and
pop
clc
ret
out
push
push
test
in
sub
fwait
je
push
pop
cwtl
push
test
roll
andl
inc
loop
xlat
jl
daa
icebp
jbe
lock
fucomip
push
scas
inc
pop
inc
test
and
sub
subps
enter
pop
dec
fadd
cwtl
call
aad
sbb
mov
ss
jb
clc
test
sbb
sub
inc
loopne
mov
cmpb
loopne
dec
mov
sbb
sbb
rdpmc
aaa
fcmovb
aaa
sbb
stos
push
lods
lea
and
enter
xor
jle
push
xlat
shl
fdivr
xlat
testb
adc
sbb
cs
xchg
pusha
addb
mov
movb
push
or
pusha
and
xchg
cmpsl
xor
cltd
movsb
and
cmp
test
inc
xchg
out
addr16
add
push
push
int
rol
cmpsl
or
bound
imul
sub
out
in
testl
fmuls
pop
dec
or
xor
testl
jg
and
xchg
xor
and
jge
pop
sbb
adc
dec
xor
push
xchg
scas
cli
jne
divl
aaa
lods
pop
das
addb
xorb
add
sub
iret
inc
cwtl
jno
leave
scas
cmc
bound
jmp
icebp
nop
fsubrl
xor
bound
xchg
lret
pop
aad
shrb
push
sub
inc
scas
adc
xlat
inc
loop
mov
xchg
lahf
jbe
fwait
xor
sbb
cltd
inc
dec
pop
lock
int3
movl
jmp
dec
xor
data16
inc
jbe
aaa
cld
cli
stc
mov
xor
sti
adc
jle
test
jecxz
test
sub
hlt
sub
rorl
adc
adc
sub
add
test
cmp
add
fdivs
sbb
pop
cmp
lret
sub
lods
push
xchg
mov
pop
jecxz
add
xchg
sbb
popa
push
iret
pop
loop
pop
cmpb
lret
mov
jo
test
xchg
xor
push
push
clc
enter
out
and
dec
inc
mov
decb
adc
mov
hlt
imul
sub
inc
add
daa
dec
outsl
imul
loopne
iret
inc
xchg
push
rorb
dec
stc
xchg
lret
mov
dec
pcmpgtb
pop
jae
aas
or
push
sbb
out
jge
sbbl
and
xor
outsl
daa
int3
mov
sbb
push
scas
imul
jmp
and
mov
mov
ja
mov
test
mov
xchg
dec
pop
scas
dec
jmp
shl
sub
inc
mov
xchg
jns
pop
lcall
out
inc
mov
push
stos
in
daa
xchg
hlt
adc
pushf
pushf
hlt
clc
les
inc
xor
push
and
hlt
testb
jnp
into
push
jo
or
pushf
xor
dec
aaa
mov
and
pop
orl
js
push
fcmovb
push
inc
mov
add
sbb
movsb
adc
iret
mov
aas
scas
push
dec
sti
lods
cmpsl
cmpsb
outsb
sarl
jmp
test
xchg
or
xor
mov
psubsb
xor
adc
bound
les
add
mov
pop
hlt
call
mov
xor
push
cmp
shlb
mov
pusha
or
or
adc
mov
cwtl
aaa
add
dec
repz
ss
roll
xor
mov
sarb
push
push
sahf
or
push
pop
cmp
jne
push
in
inc
sub
add
testl
mov
mov
pusha
cmp
or
mov
lea
leave
fimuls
and
fcmovb
iret
out
fisttps
add
test
add
adc
jle
sti
cmpsb
call
sahf
mov
fmuls
or
mov
lods
fmuls
pop
pop
mov
dec
inc
jg
xchg
dec
xchg
push
out
insl
xchg
mov
arpl
add
out
xor
js
dec
and
add
add
arpl
jl
push
out
jns
lods
xchg
iret
lahf
fistps
inc
test
jg
insb
or
dec
pushf
lods
cld
sbb
ja
mov
mov
rcll
cwtl
ss
add
call
lods
lea
xchg
xor
test
pop
cmp
add
cmpsl
popa
out
dec
ja
adc
pop
sbb
dec
jbe
lods
inc
push
shll
adc
int3
inc
cmpsl
out
mov
cmpps
xor
addr16
sub
xor
jb
xchg
pop
mov
xchg
jns
outsb
nop
inc
inc
dec
jo
jnp
sub
test
aaa
pop
or
inc
inc
sub
loopne
jo
jo
repz
adc
or
ds
adc
xor
inc
addl
les
or
cs
adc
movsl
sti
xchg
pusha
sbb
mov
ret
dec
aaa
hlt
addr16
jmp
lret
xor
test
ret
push
es
fucom
in
mov
pop
iret
add
sub
stos
loopne
sub
jecxz
sub
sub
pop
div
push
sub
jle
subl
sub
cmc
lock
or
out
int3
jp
lahf
mov
push
sbb
daa
mov
push
inc
push
out
sbb
jb
fidivl
jmp
xchg
nopl
xchg
bound
iret
bound
arpl
push
mov
xchg
cs
mov
lock
adc
sbb
mov
cltd
ret
in
dec
xchg
add
lret
xlat
inc
lret
popa
sti
pop
test
pop
pop
test
scas
mov
or
and
lock
lods
cmp
sbb
pop
movsl
jno
leave
push
sub
lret
xchg
mov
and
jle
push
mov
out
mov
pusha
dec
mov
dec
cs
test
movsl
scas
mull
add
cmc
mov
fstpt
push
ds
or
pusha
popf
inc
mov
mov
nop
xchg
shrb
jg
lret
js
mov
sbb
outsb
cmc
dec
into
ret
out
cmc
pop
out
dec
out
sbb
daa
adc
mov
add
xlat
sub
popf
les
jle
das
push
addr16
lcall
sub
loop
mov
daa
xchg
cmp
mov
sub
sbb
pop
lret
outsl
push
add
push
sbb
fdivl
cmp
retw
adc
les
jl
repz
ljmp
or
jne
jmp
clc
jne
popl
sbbl
mov
xor
xchg
sbb
pop
inc
xchg
adc
add
repnz
or
and
mov
ret
sahf
mov
and
lret
call
adc
cmp
mov
push
sbb
sub
pop
andl
ds
outsl
mov
inc
das
add
bound
iret
xchg
pop
or
repz
jp
and
frstor
das
push
xor
sbb
test
dec
dec
es
inc
dec
test
cmp
mov
mov
bound
out
clc
mov
sub
pop
pop
cli
cmp
and
pushf
mov
mov
out
bound
sub
enter
push
push
hlt
jmp
mov
loope
mov
pop
mov
mov
outsl
cmp
sub
mov
mov
xchg
pusha
lea
cmpsb
xchg
es
cmpsb
pushf
sbb
sub
cmpsb
cmp
int3
int3
or
clc
rclb
mov
xor
mov
and
cli
mov
outsb
jae
aam
jo
mov
inc
or
add
rcll
cmp
sahf
pop
add
rcll
lret
popf
icebp
fildll
pop
or
jns
ret
add
cwtl
xchg
cmc
andb
inc
shlb
xchg
push
insb
or
dec
insb
xchg
inc
xchg
mov
xchg
cmp
cmp
mov
mov
push
mov
sbb
dec
out
push
ret
add
sub
or
jbe
add
and
fcmovnu
stos
dec
cmpsl
cmpsb
and
push
xchg
inc
mov
loop
jmp
add
fmuls
subl
jnp
jmp
movsb
sbb
js
push
jecxz
pushf
xor
add
mov
xchg
cmp
jmp
mov
mov
mov
js
fildl
inc
mov
mov
out
dec
stos
mov
adc
lea
test
sub
je
and
xor
dec
adc
ret
icebp
add
xchg
inc
mov
sbb
lahf
movb
inc
pusha
xchg
or
or
arpl
std
add
popa
orb
xorb
push
adcb
insb
arpl
sti
lds
incb
fdivrl
popf
xchg
add
inc
in
es
xchg
inc
jle
jo
cmp
pop
ds
insb
push
cmp
xor
imul
jbe
adc
repnz
mov
notb
out
lea
shlb
lods
adc
add
repnz
daa
push
add
xchg
sub
bound
and
dec
sub
in
sbb
rorb
push
mov
add
inc
in
std
or
add
loope
xor
add
xchg
push
cmp
or
jmp
popa
dec
in
fistl
imul
mov
sbb
push
adc
inc
add
pop
mov
mov
cli
jns
jb
lds
leave
cli
xchg
fildl
loopne
clc
aam
shlb
jmp
or
mov
sub
in
mov
inc
popf
out
iret
mov
movb
inc
popa
rcr
and
ljmp
in
mov
add
addr16
mov
shlb
add
mov
popf
addb
and
imul
adcl
pop
enter
aaa
repz
popf
lret
or
sub
cmpsl
ret
and
iret
shll
add
inc
sbb
out
pusha
gs
dec
rclb
ret
pop
xchg
mov
insb
xchg
ss
pop
pusha
mov
ret
data16
sbb
add
mov
test
int3
push
popf
lods
xlat
aaa
pop
add
adc
and
push
cltd
mov
fnstcw
xor
sub
and
mov
sub
adc
jno
daa
cmp
and
sub
inc
mov
inc
push
movsl
sub
lret
inc
in
ret
aaa
and
mov
gs
push
dec
aas
popa
xor
adc
cmp
jo
fisubrs
push
cmp
int3
popf
pop
fistps
inc
fidivrs
call
pop
jnp
push
sub
pop
call
or
or
push
fstps
or
jge
test
into
outsl
sbb
mov
outsb
add
icebp
jbe
push
sub
xchg
mov
ja
add
dec
arpl
jle
pop
add
push
sbb
jl
inc
adc
or
mov
sbb
or
in
inc
leave
mov
das
sbb
xchg
mov
sahf
add
es
mov
pushf
mov
daa
dec
aad
idivl
xchg
addl
ds
pop
mov
pop
movsb
or
adc
xchg
mov
mov
pop
addr16
push
jecxz
rolb
adc
jo
in
push
scas
daa
cld
push
fabs
insw
adc
lods
xchg
mov
arpl
fiaddl
push
leave
lcall
repz
dec
or
xchg
lods
pop
mov
aaa
or
mov
mov
inc
scas
inc
sub
or
rclb
jb
lret
dec
adc
test
jle
cwtl
adc
push
comiss
ret
das
cs
lods
xlat
imul
scas
dec
jp
sub
jno
push
push
dec
into
ret
lock
dec
arpl
push
add
xchg
les
mov
cmp
dec
pop
addr16
sbb
adc
sub
gs
mov
cld
and
out
dec
lods
push
mov
jle
rcr
add
mov
add
sbb
testb
mov
imul
iret
xchg
sub
pushl
sbb
aas
hlt
fwait
sbbl
or
pop
shr
xorb
sarl
mov
cmpsl
nop
adc
in
jb
and
add
mov
jmp
sbb
out
push
push
sbbb
gs
rolb
push
mov
push
pop
es
mov
dec
push
jbe
stc
add
test
sar
scas
sub
sbb
cmpsb
out
loope
add
sub
mov
ja
out
movsl
jmp
push
adc
adc
jge
punpcklwd
or
sahf
mov
jmp
and
jle
call
pop
inc
sti
test
mov
shrb
jp
or
dec
xor
shufps
or
mov
add
and
loopne
add
inc
pop
bound
adc
fninit
or
jle
mov
jge
pushf
lods
add
push
inc
mov
or
out
pop
sarb
out
push
mov
jns
sub
insb
daa
jo
jge
sub
gs
adcb
pushf
iret
adc
mov
pop
repz
mov
adc
inc
leave
mov
inc
inc
test
loopne
ret
jne
push
hlt
cli
sub
or
arpl
loope
inc
jnp
sbb
aad
mov
sti
inc
aaa
push
add
shlb
cs
mov
push
and
in
cmpsb
iret
pushf
add
cmp
jp
icebp
repz
add
fnstenv
dec
xchg
inc
xlat
aas
add
jmp
sbb
inc
movsb
fbld
addb
or
mov
mov
mov
push
push
iret
sbb
dec
push
jle
adc
mov
add
cs
rcrb
add
mov
jge
inc
in
add
aas
jmp
cmp
sbb
cmc
mov
sahf
add
inc
iret
sbb
test
aam
xor
fcomi
loop
push
adc
daa
adc
in
filds
add
jp
jns
gs
xchg
jnp
xor
dec
hlt
cmpsb
sbb
aad
pop
push
das
lods
cld
js
mov
loope
mov
mov
mov
daa
adc
sbb
sub
cs
lock
mov
andb
popf
push
mov
or
mov
jl
sub
loopne
add
pushf
rcrb
xchg
xor
adcl
mov
fidivl
lds
cmc
push
notb
and
mov
sahf
pop
outsb
std
and
daa
jbe
xchg
pop
inc
mov
add
test
push
add
popa
pop
rol
jecxz
outsb
and
popa
xlat
repnz
daa
fs
sub
mov
insb
cmp
push
mov
fimuls
push
in
mov
jnp
adc
rcrb
ss
and
mov
js
iret
sahf
mov
cltd
fidivrl
aam
jmp
adc
add
dec
ret
inc
lods
out
dec
inc
js
or
inc
sub
cmp
add
and
js
mov
jns
xor
add
popa
or
ret
cwtl
and
or
pop
mov
dec
jns
fldl
fistl
push
inc
and
mov
xchg
push
jp
inc
inc
pop
cmpsb
inc
add
pusha
adc
mov
popa
aas
ret
scas
icebp
sub
jge
out
in
jbe
mov
cmp
frstor
and
and
inc
mov
push
push
or
repz
push
add
push
add
adc
or
push
shl
lock
fwait
addr16
mov
loopne
add
movsl
add
mov
popa
and
adc
xor
push
clc
xlat
mov
sub
jle
stos
and
xchg
and
and
xchg
int3
repnz
jecxz
and
out
or
xchg
in
cmp
mov
add
mov
push
xor
sahf
test
pop
sbb
clc
sub
mov
xchg
push
les
cmc
xlat
lods
bound
stos
pop
fldcw
mov
gs
dec
je
sbb
and
in
stos
push
pop
fdivs
fsubrl
subl
or
xchg
jle
rol
mov
dec
jmp
xor
roll
nop
loop
or
mov
sub
in
loop
sub
mov
and
lahf
rcrb
and
xorl
sbb
les
divl
sub
pop
lahf
ret
outsb
cmp
dec
into
dec
lahf
inc
daa
jge
out
fldenvs
jb
pop
and
enter
and
adc
inc
loopne
xchg
mov
push
jmp
popl
xchg
jp
sbb
lret
ret
cmp
out
inc
push
sub
lret
sbb
movsb
divl
jmp
push
or
subl
out
jne
push
push
aaa
xchg
das
nop
sti
sub
mov
sti
adc
negb
test
jecxz
es
in
fcomps
lret
rep
ljmp
jg
sarl
pop
pop
mov
repz
mov
fstl
mov
add
push
hlt
iret
outsl
scas
inc
lock
sti
mov
mulb
sti
int3
outsb
cmp
xchg
mov
jne
push
and
xchg
and
push
push
jmp
cmp
push
shrb
pushf
pop
subb
sarb
mov
lcall
out
mov
roll
data16
fdiv
arpl
scas
xor
pop
aas
xchg
sub
call
cmpsb
out
stc
rcr
or
inc
push
xchg
lods
aad
fs
lea
sahf
jb
test
jo
and
test
add
jo
into
or
je
gs
rorb
add
gs
mov
xchg
mov
xchg
sub
jecxz
jmp
dec
pushf
daa
test
loopne
push
ja
sahf
addl
push
fists
iret
inc
stos
pop
es
inc
mov
sbb
cs
or
jmp
lahf
add
lahf
or
bound
lods
lock
add
test
sub
jbe
mov
cmp
popa
mov
pop
jbe
jno
sub
fidivs
lock
ret
jo
loopne
pop
push
pop
std
es
xchg
add
test
jp
test
repz
dec
mov
mov
mov
gs
sub
cltd
xchg
sbb
sub
das
loopne
hlt
xor
and
je
or
ja
push
and
cmc
mov
xor
mov
adc
or
out
xchg
push
sbb
fistps
add
and
jo
xchg
fcoml
jecxz
xchg
sub
jl
sbbl
dec
rolb
movsb
dec
clc
cwtl
xor
xor
fiadds
int3
pop
jo
rol
inc
sbb
cmp
aam
jbe
stos
and
iret
add
or
fldt
gs
or
data16
cmp
mov
sub
xchg
mov
jmp
or
imull
sbb
inc
jb
jbe
inc
movsl
jno
lods
lods
push
gs
int3
pusha
adc
dec
jmp
push
insl
rorl
jbe
jnp
cs
into
rcl
jo
fisubrs
add
sub
sub
rcll
popa
or
clc
ds
stc
xor
ja
cmp
mov
pop
fcmovnbe
loopne
in
mov
popa
xchg
in
leave
test
add
adc
test
pusha
sbb
test
cmp
iret
mov
xchg
dec
shlb
add
add
or
sahf
aaa
fcomp
push
cmp
insb
xchg
dec
rolb
push
mov
lods
jge
cwtl
repnz
jne
sahf
lock
add
add
sbb
movsl
call
sub
mov
jnp
nop
mov
enter
mov
pop
jge
xchg
inc
inc
sbbb
jle
add
adcb
iret
xchg
in
push
aad
xlat
cli
clc
call
shrl
push
pop
pop
loopne
movsl
mov
sbbb
gs
mov
rclb
lret
pushf
sahf
dec
xor
or
mov
stc
lock
inc
mov
loopne
push
xchg
mov
mov
push
cmp
xchg
jnp
adc
sub
add
pop
push
test
loop
cmc
sahf
xchg
add
adc
sub
loopne
maxps
decl
mov
addr16
data16
cld
xchg
arpl
in
mov
sbb
pop
ss
es
jne
lahf
push
popa
cmp
pusha
mov
pop
jp
fwait
aas
push
sub
test
shll
lds
daa
xchg
adc
fdiv
filds
xchg
jecxz
xchg
es
jne
out
loope
push
repz
xchg
ds
mov
mov
aam
lods
and
or
shlb
cltd
movsl
into
shll
xchg
aas
and
fwait
xchg
adc
or
cmp
jge
jg
outsl
cwtl
adc
inc
lods
cmpsb
hlt
pop
jl
dec
fsubs
rorb
inc
je
sbb
pop
pop
faddp
mov
shrl
cmp
stos
in
lods
stos
inc
xor
dec
xchg
pop
xchg
outsl
sbb
dec
inc
jle
mov
cmpsl
sbb
pop
nopl
jp
mov
pop
push
dec
or
cmpsb
bnd
popa
addb
mov
nop
pop
sub
push
sbb
mov
jo
pop
pop
ljmp
test
getsec
pop
inc
adc
rol
fistl
je
jmp
hlt
jno
in
cltd
outsb
insl
dec
xchg
jecxz
movsl
stos
andb
add
and
xchg
jb
jnp
or
inc
or
dec
test
add
xor
push
xchg
xchg
lcall
sub
jp
or
icebp
adc
cli
jns
jp
sbb
shll
or
fnstenv
inc
inc
sbb
dec
ret
mov
or
xor
adc
fmuls
push
ss
inc
dec
mov
push
les
pushf
add
mov
sbb
sub
jno
imul
push
or
xchg
cmp
cld
rcrl
and
daa
insb
data16
sbb
push
testl
icebp
pop
dec
iret
clc
test
sub
lahf
stc
notl
jnp
xor
add
xor
lret
mov
out
inc
mov
shrb
clc
jle
jae
add
jno
test
mov
pop
xor
punpckhbw
pop
push
cmp
scas
sub
cmpsb
fnstsw
push
cmp
insl
sub
add
out
xor
pop
push
mov
push
sub
inc
fldl
mov
pop
dec
push
aaa
cmpsl
sub
fstpl
xlat
inc
gs
xlat
jge
scas
cmpsb
iret
dec
pop
pusha
test
das
inc
jbe
aaa
bnd
pop
pushf
mov
js
ficompl
add
mov
xor
sbb
cmpb
pop
jl,pt
gs
xor
mov
mov
mov
js
aad
negl
xchg
movl
imul
loop
ret
lods
iret
or
pop
dec
jno
das
int3
adc
iret
dec
push
aaa
loop
add
lahf
aad
les
add
ret
add
add
lock
out
js
pop
adc
lahf
sub
cmp
mov
test
cmpsb
cmp
fildl
lcall
aas
jle
data16
sub
das
mov
nop
cmp
cwtl
test
mov
pop
and
jecxz
mov
add
daa
xor
scas
sub
lea
aas
dec
sahf
imul
inc
addb
cmpsb
daa
fdivrl
inc
sub
mov
sbb
in
mov
adc
inc
and
push
out
inc
fs
sbb
ja
popf
sbb
dec
mov
scas
mov
adc
dec
sbb
cli
inc
cmp
ja
and
stos
add
adc
mov
out
pop
aam
lods
cmpsl
ja
xchg
sarb
mov
cmp
ja
fimuls
add
imul
inc
add
test
add
frstor
notl
andl
push
es
pushf
fucomp
xor
mov
je
lea
sub
xor
jecxz
clc
shlb
iret
mov
inc
fcoms
lahf
scas
push
pop
sub
sti
adc
mov
sub
pop
in
shlb
adc
dec
or
sbb
js
add
xchg
jbe
jo
ds
ret
inc
jbe
xchg
adc
nop
out
jle
testb
fisubl
arpl
push
mov
sub
mov
sarb
jge
or
lods
loopne
enter
and
les
aas
daa
pusha
dec
push
jo
enter
cmp
or
ffreep
add
add
dec
dec
and
ja
cmp
sbb
shrb
xor
sahf
rorl
dec
dec
aam
adc
mov
adc
add
lods
and
jns
outsb
and
add
inc
or
fs
push
jl
shl
loopne
add
add
sbb
sti
sbbl
jno
xchg
mov
dec
mov
mov
into
aas
dec
pop
mov
cmp
inc
jle
mov
rorl
mov
nop
add
and
lock
sbb
push
dec
add
xor
inc
aaa
cmpsb
fisubrs
sub
ja
cmc
mov
push
ja
add
iret
je
in
rolb
xchg
andl
imul
sub
int
sub
cs
and
mov
andb
daa
adc
bound
clc
les
and
nop
fdivrl
mov
iret
mov
das
and
add
mov
loopne
xor
cmp
sub
jmp
roll
inc
or
sub
pop
add
and
imul
inc
inc
xlat
dec
add
dec
out
aaa
adc
ljmp
mov
in
adc
push
xchg
add
lock
les
cmp
cmp
test
sbb
dec
xchg
arpl
rolb
cmpsl
jge
xor
adc
lea
jp
pop
add
or
data16
push
cmp
into
pop
fisttpl
and
aaa
mov
add
pop
jle
aam
jne
iret
inc
dec
rol
dec
rolb
mov
cmp
mov
pop
jp
movl
addb
sbbb
shr
or
daa
push
and
repz
jbe
sub
shrb
cmp
cmp
push
divl
pushf
mov
ds
mov
pop
xchg
xchg
mov
les
sub
xor
xor
leave
mov
subl
jl
inc
pop
out
ss
pop
scas
mov
mov
movsl
and
mov
sub
and
and
mov
add
sbb
ficompl
cmp
or
push
jo
inc
ret
std
sub
outsb
sbb
aaa
push
ficompl
sbb
push
sbb
rcrl
test
adc
cmp
cmp
dec
sarb
adc
xlat
lret
push
das
adc
imul
test
mov
adc
clc
add
cmp
push
sbb
clc
push
or
dec
test
inc
and
jns
inc
fcoms
dec
outsb
idiv
insl
mov
adc
sbb
add
out
ljmp
mov
inc
dec
ret
popf
lock
jb
mov
sbb
rcr
adc
enter
and
fcmovnu
addr16
sbb
out
mov
cs
fnstcw
add
sub
pop
clc
clc
daa
testb
add
dec
pop
dec
fs
dec
sub
push
add
mov
dec
pop
push
push
dec
rolb
scas
sbb
movsl
movsb
mov
pop
cmpl
cmpsl
and
stc
or
mov
add
pop
jmp
and
sti
popf
sub
gs
push
mov
mov
mov
xor
inc
mov
cmc
into
mov
push
adc
test
cmp
and
cmp
mov
movsb
cmp
inc
dec
out
mov
scas
add
sbb
daa
and
lcall
pop
sbb
dec
sbb
aad
adc
push
ret
inc
sub
sti
cltd
add
out
stos
pusha
pop
xchg
add
push
push
mov
push
fadd
or
pop
lret
fwait
pusha
adc
test
or
int3
cmp
adc
outsl
addl
push
es
mov
loope
mov
inc
adc
sbb
test
das
or
jae
sub
jg
aam
popa
jg
sbb
fsub
iret
cltd
inc
popa
xchg
jo
outsl
fstps
popf
inc
pop
or
hlt
add
lcall
test
and
loopne
nop
mov
xor
lea
pop
outsb
xchg
bound
push
int
popf
and
stos
insl
js
daa
cmpsb
loopne
mov
sbb
popf
adc
cmp
xlat
add
lea
add
push
iret
shlb
js
clc
ss
sbb
mov
push
mov
pop
gs
iret
rcl
test
lret
rclb
cmp
xor
stc
divb
sbbb
xchg
cmpb
mov
dec
rcll
test
lea
inc
inc
jge
lods
jle
adc
sbb
fcomip
xchg
xchg
push
mov
add
sub
sub
jbe
or
inc
and
jb
lock
icebp
or
cmp
dec
bound
pop
jo
inc
mov
xchg
je
adc
lret
sbb
je
cmp
inc
popf
add
ljmp
iret
mov
mov
lcall
sub
mov
push
aaa
mov
and
lock
movsb
out
cmpsb
ja
movsl
xchg
fwait
stc
or
in
dec
rcll
mov
xor
sti
gs
ret
call
push
adc
cmpsl
movsl
std
xor
add
pop
lds
push
and
sub
cmp
push
dec
jo
add
push
out
call
lds
inc
scas
inc
inc
shlb
cmp
scas
ret
stos
pushf
lods
cmpl
repnz
es
hlt
jno,pt
jae
cltd
cmp
cltd
insl
ret
cld
cltd
sub
sub
cld
sbb
push
lret
cmp
or
jns
mov
cmp
and
jae
add
rorb
add
ret
lret
bound
mov
rcl
subl
shll
shll
stos
rcrl
bnd
filds
push
xorl
dec
sbb
push
in
mov
sub
xchg
cmp
test
and
sub
js
sahf
call
or
mov
and
xchg
add
inc
lock
loop
jo
fstl
push
mov
pop
xchg
mov
add
and
jnp
fsubs
mov
cmp
mov
insb
rcr
mov
or
or
jbe
add
rorl
popa
popl
out
inc
push
andb
icebp
push
sbb
xor
push
fildll
test
or
lret
cli
pop
jne
or
dec
pop
sub
in
mov
orl
call
pop
mov
sub
adc
sbb
jne
movsl
add
pop
movsb
or
stc
adc
mov
imul
inc
or
scas
sarb
enter
ss
push
dec
dec
das
cli
and
inc
movsl
outsl
add
pop
stos
insb
xchg
mov
or
jecxz
push
sahf
int3
int3
cmpsb
cli
push
lods
dec
inc
push
cltd
aam
pop
loopne
or
rcll
push
inc
and
fimull
mov
sub
sub
xchg
sahf
and
icebp
sub
lock
cmp
push
cs
jg
lods
mov
jecxz
fs
push
jecxz
outsl
pop
pop
dec
xchg
mov
push
dec
mov
ljmp
mov
out
jle
cld
add
sahf
cmp
dec
out
add
je
or
push
rolb
mov
dec
fildll
inc
test
xchg
xadd
popa
push
sub
pop
aam
or
in
push
sub
add
jg
cmp
aas
cs
icebp
jno
testb
and
xchg
inc
movl
pop
add
cmpb
das
mov
mov
test
mov
xchg
xor
loope,pn
xlat
jne
fistl
test
mov
pusha
add
dec
pop
xchg
adc
dec
lock
pop
mov
test
arpl
jns
stos
and
adc
dec
inc
sub
out
js
fnsave
mov
adcl
sub
es
aad
dec
fwait
out
int3
int3
sub
mov
and
fdivrl
adc
adc
stos
addb
lret
and
add
xor
and
push
data16
dec
out
dec
andl
fdivrs
and
add
adc
xlat
and
loope
int
jle
xchg
rorb
test
mov
jmp
call
lret
or
sub
add
mov
sbb
or
adc
mov
sub
das
fs
cmpl
add
orl
xor
popf
pop
mov
xchg
ret
pop
mov
add
jp
int
inc
dec
and
or
ja
fs
adc
hlt
or
sub
jp
mov
cmp
pop
cli
leave
jae
or
ljmp
xchg
push
movsl
and
out
adc
ret
jle
lcall
stos
dec
push
jp
adc
xor
sub
cmp
push
inc
nop
adc
loope
xor
out
repnz
add
mov
mov
dec
loope
cli
hlt
and
gs
jp
xor
lods
popa
jno
or
test
aaa
mov
rolb
mov
cmp
rclb
int
push
shl
test
clc
mov
mov
mov
lock
and
adc
sub
es
into
xchg
pop
or
mov
fldcw
aas
xchg
pop
popa
inc
in
push
mov
rcrl
and
std
and
cs
loope
jo
jle
jle
int3
mov
imul
adc
ret
mov
repz
or
dec
outsb
decb
push
outsl
incb
pop
test
jb
or
mov
pusha
add
cmp
es
scas
iret
pop
mov
push
dec
cmp
orb
icebp
loope
jmp
adcl
cli
jb
movsb
sub
rcr
stc
mov
loopne
aaa
push
inc
out
pop
ljmp
movsl
repnz
or
jmp
dec
and
pop
adc
xchg
adc
out
lock
cli
dec
xor
and
clc
adc
loope
sahf
repnz
loope
enter
sbb
lea
jo
int
outsl
loope
stos
pop
popa
add
xorl
and
adc
test
out
mov
testl
je
insl
cmp
test
aas
es
test
xlat
add
rcll
pusha
ret
cltd
jecxz
dec
movsl
mov
divl
test
lds
or
mov
adc
fdivrp
dec
pusha
les
push
stos
enter
aam
inc
or
fldcw
jnp
jge
lock
and
cltd
jp
aas
cmp
and
into
jl
shl
jo
pop
out
sbb
andb
sub
movsb
add
and
movsl
jo
jo
mov
push
mov
inc
dec
cmc
jecxz
jns
in
cmpsb
cld
imul
mov
sbbl
jecxz
outsl
jl
sbb
fnsave
sahf
sbb
jl
pushf
pop
adc
test
push
fisubl
jo
add
pop
ret
cmpsl
mov
xchg
add
cmp
psrlw
mov
fs
pop
sub
mov
iret
in
out
outsl
sbb
push
xchg
jecxz
push
pop
pop
add
movsb
dec
ret
ss
repz
sbb
sbb
dec
pop
mov
incl
push
adc
jmp
pop
and
sbb
call
inc
vmread
inc
or
jle
ja
push
pop
int3
gs
pand
addl
xor
iret
push
cmp
add
sub
pop
dec
and
and
scas
subb
and
push
pusha
mov
and
cli
jmp
mov
outsl
xchg
out
jo
push
stc
fisubl
outsl
jge
or
jl
test
ds
mov
sti
push
and
pop
dec
jecxz
sub
pusha
inc
ret
es
movaps
mov
push
fwait
mov
popf
bound
cmc
es
insb
jne
sbb
mov
push
wbinvd
push
mov
sbb
mov
add
cs
loop
mov
mov
rclb
and
push
sbb
gs
mov
sbb
or
loope
in
adc
out
push
jle
mov
sarl
push
loopne
sbb
fistpll
lea
testl
sub
andl
jb
and
test
push
inc
push
loopne
aas
addr16
push
add
loop
sbb
imul
cmp
jle
cwtl
pop
lahf
push
outsb
sbb
fdivr
jne
cmpsl
fmull
sahf
mov
adc
xchg
sbb
mov
xor
mov
sub
sub
xor
mov
xchg
jmp
lahf
and
es
mov
mov
xchg
mov
dec
adcl
add
in
movsb
push
pop
push
mov
addl
nop
ret
test
lahf
mov
inc
imul
push
or
push
ja
push
adc
inc
cmp
fistpll
and
stc
stos
mov
popf
and
inc
fldcw
outsl
and
mov
imul
pop
lea
jg
dec
aad
push
imul
or
aam
dec
mov
ret
inc
lret
add
fs
shl
jae
add
mov
das
push
aaa
sbb
jno
andb
mov
add
xlat
cmp
mov
sub
sub
arpl
adc
pop
mov
fwait
pop
lret
add
pusha
test
gs
add
mov
jo
frstor
mov
pop
mov
pop
adc
xchg
js
pop
into
into
in
cmp
jnp
aad
xor
pop
int
add
inc
popf
pop
and
and
lcall
cmp
dec
lcall
xchg
cmc
cltd
adc
andl
arpl
xor
sub
cmp
cli
imul
sub
mov
sahf
mov
or
faddl
xor
adc
adc
iret
jecxz
dec
push
sub
ror
repz
cmp
adc
aaa
loopne
xchg
sub
fmull
rcrl
push
push
jle
sub
lea
sub
mov
pop
test
xchg
loopne
jecxz
pop
jns
sub
test
sub
ret
std
jbe
aaa
sbb
mov
daa
pop
cmovnp
pop
and
jl
jnp
stos
jno
mov
fnstsw
sbb
inc
pushf
inc
adc
in
lock
imul
add
xchg
verw
pop
xor
ret
outsl
out
call
adcb
cmpsl
dec
imul
int3
add
jle
push
dec
cltd
adc
shll
in
repz
sbb
push
cmp
pop
push
repz
arpl
clc
out
mov
daa
pop
adcb
xchg
xor
cmp
cmpsl
gs
xlat
sar
rcrb
push
aaa
mov
or
push
or
andl
push
fdivs
mov
je
das
dec
out
or
fstl
loopne
mov
dec
push
clc
rorb
lods
sub
loop
cwtl
fdivrs
sbb
xor
mov
lock
adc
mov
add
add
pop
inc
lods
cwtl
mov
movsb
scas
and
out
mov
cmpsl
xchg
nop
and
stos
das
and
call
xor
jmp
mov
mov
in
or
lcall
ret
and
add
sar
add
loop
push
stos
push
mov
int3
insb
inc
add
sbb
inc
lret
xor
movsb
fisubs
or
sbb
lods
jmp
hlt
fadds
cwtl
and
ss
sbb
les
aaa
sti
lea
and
and
inc
push
xor
int3
adc
ja
outsl
jns
mov
adc
mov
or
shlb
pop
sub
push
ljmp
fistpll
mov
inc
xchg
dec
fistps
jno
stos
adc
scas
outsb
sbb
or
sub
test
add
and
notb
into
enter
add
sbb
cmpsl
jo
or
mov
pushf
sub
and
movsb
mov
xor
scas
sbb
insl
rcrl
loopne
in
inc
mov
jno
or
and
inc
mov
mov
mov
xchg
into
xor
outsl
pusha
mov
or
jo
add
mov
imul
mov
jle
pop
loopne
aad
pop
add
adc
imul
push
popa
jne
insb
aaa
mov
ret
jno
pop
sbb
test
jmp
imul
imul
loope
add
or
adc
scas
icebp
imul
sbb
imul
pop
icebp
mov
mov
sbb
movsb
and
jge
insl
insb
lock
pop
jmp
adc
es
incl
test
mov
aaa
push
or
sbb
add
in
inc
inc
sub
jp
or
and
add
shr
lahf
xchg
xorb
add
pop
fcoms
dec
pop
inc
in
pop
mov
icebp
mov
test
xor
sub
ret
test
jge
lods
add
fsubrp
loopne
insl
jno
sub
hlt
and
call
subl
push
and
push
mov
dec
test
mov
mov
push
out
shrb
cmp
cli
xor
stos
add
mov
sub
and
rclb
data16
and
or
xor
cwtl
lcall
dec
sub
sbb
arpl
call
push
pusha
add
lcall
pusha
push
aam
jae
pop
push
stos
pusha
xchg
jae
and
mov
or
loope
andb
mov
push
sub
jl
xor
xlat
repz
sub
add
add
mov
inc
clc
mov
jno
sbb
ret
mov
adc
or
or
into
faddl
mov
cmp
lcall
mov
cltd
mov
mov
sti
stos
and
sbbb
cmp
xchg
iret
xchg
mov
pop
pop
scas
cld
xlat
ljmp
xor
daa
jecxz
dec
xchg
inc
fcomps
sub
push
and
daa
jmp
mov
mov
add
sub
clc
jg
pop
aad
mull
popl
cmp
inc
cmpsb
push
imul
outsl
test
test
add
xor
or
add
cli
xchg
add
test
inc
jbe
lods
aam
inc
in
loope
cld
add
scas
and
cmp
inc
shlb
enter
pop
pusha
lret
stc
inc
fadds
popf
ljmp
jnp
pop
pusha
mov
fdivrs
loopne
lret
ret
xor
arpl
outsb
loope
popa
es
sbb
scas
add
sub
or
insb
mov
pop
in
push
push
adcb
movl
adc
dec
mov
push
insb
jg
sub
mov
pop
xchg
hlt
inc
shl
sub
sahf
dec
push
pop
dec
out
mov
cmp
stos
or
adc
ret
push
inc
nop
dec
je
xchg
adc
ja
data16
or
push
inc
jecxz
out
mov
adc
popf
imul
clc
in
xor
pop
mov
lret
and
and
popf
fwait
lea
xor
add
push
out
in
and
jl
mov
hlt
ljmp
sbb
inc
call
scas
in
inc
or
fucom
popa
negb
aas
dec
shrb
pop
in
dec
jno
push
les
inc
fmul
inc
xor
lret
cmpsb
loopne
movsb
and
and
adc
add
outsb
aam
xor
scas
out
call
aaa
mov
pop
enter
add
test
xor
sti
push
rcll
xchg
add
ficoml
in
out
cmp
or
out
mov
xchg
xchg
out
cli
loope
ret
jge
lods
jb
jle
repnz
loopne,pt
les
push
cs
das
mov
loope
test
scas
sbb
psadbw
dec
imul
mov
fsub
je
dec
pop
pop
sbb
mov
inc
adc
hlt
push
mov
stos
dec
idivb
int3
popa
mov
xor
outsl
mov
and
or
popf
fildl
lods
xchg
rolb
data16
add
outsb
popa
outsl
mov
cwtl
adc
or
push
jl
inc
imul
pusha
jmp
enter
push
mov
inc
pop
mov
xchg
aaa
das
xlat
xlat
loope
add
dec
les
push
pop
rol
jns
push
cmc
arpl
or
scas
inc
add
das
jecxz
ds
imul
xor
add
inc
push
hlt
jb
jns
sahf
lea
or
jl
xor
lcall
sti
cmp
repz
sbb
das
push
lret
rorl
xchg
lods
std
bound
aaa
imul
lds
out
pop
ljmp
pop
bound
leave
push
add
subb
sub
pop
push
push
loopne
push
inc
sbb
insl
test
pop
loopne
movsb
fimuls
dec
dec
lahf
or
data16
sub
add
sbb
push
jmp
dec
daa
pop
pop
and
cmp
fs
xor
mov
xchg
pop
outsb
fwait
jle
add
repz
popa
das
add
cmp
and
movsb
xor
ret
or
mov
mov
xlat
inc
push
arpl
out
inc
dec
pop
jecxz
mov
lods
std
push
mov
cmpsl
dec
gs
sbb
outsb
data16
lcall
das
mov
pop
add
push
das
or
das
or
push
xchg
jmp
xor
push
dec
daa
add
cmp
add
dec
push
inc
iret
test
or
jp
outsb
cli
jle
push
mov
dec
data16
or
mov
dec
sbb
xlat
shrb
xor
dec
out
xor
adc
jae
negl
daa
sbb
repnz
xchg
push
inc
sub
imul
xor
repnz
mov
into
cmpl
cmp
fmuls
aam
mov
xor
pusha
add
dec
les
inc
test
jmp
adc
das
rcrb
insb
mov
ja
and
fbld
sbb
mov
je
in
mov
fbstp
inc
sbb
jp
in
rol
cmpsb
add
pop
jle
pop
imul
xcrypt-ofb
cmpsl
sub
and
push
sub
stos
repz
cmp
xor
daa
xor
or
sbb
dec
popl
jecxz
pop
cmc
cmp
pop
push
fbld
cmpsb
je
pop
mov
out
cmp
movsb
inc
pusha
imul
jae
push
pusha
lock
mov
jle
pop
or
arpl
push
bound
ret
pop
cmp
add
adc
xor
data16
mov
into
inc
movsb
push
or
adc
xchg
icebp
sub
outsl
and
js
aam
shll
shll
ss
ds
mov
inc
clc
cmpl
test
dec
xchg
adc
push
bound
mov
sbb
cltd
mov
in
pop
push
mov
sbb
push
insl
addl
rcll
mov
ss
dec
add
or
inc
pop
fsubl
cs
mov
cmp
jns
jp
sbb
push
je
add
xor
cmp
xor
dec
xor
jge
jmp
push
fs
jo
sarb
xlat
dec
jmp
xlat
scas
push
pop
sub
pop
pushf
sahf
ror
mov
arpl
sub
jo
push
mov
clc
out
or
sahf
xchg
push
xor
mov
mov
rcrb
pop
movl
shrb
call
call
je
pushf
lock
scas
jns
mov
jbe
pusha
mov
push
ret
sbb
ljmp
fs
loope
adc
test
outsb
xor
popl
hlt
repnz
mov
cmpsb
jg
or
out
fmul
and
add
jecxz
sub
push
sbb
jnp
dec
bound
in
sub
aam
add
xchg
jle
mov
xchg
iret
loop
push
dec
mov
dec
ret
fucomip
xchg
add
push
insb
adc
loopne
lret
sbb
pop
sbb
cwtl
pop
jecxz
cmp
and
add
daa
arpl
pop
daa
leave
scas
jp
mov
clc
daa
mov
xchg
sbb
into
out
jl
gs
sub
sub
lock
and
add
mov
aam
out
out
sub
add
stos
sub
mov
xlat
out
popa
std
bound
bnd
and
add
xor
test
movsb
or
imul
inc
add
push
ret
mov
xchg
frstor
push
js
inc
jg
imull
and
jl
or
insb
mov
fiadds
adc
adc
bound
sub
push
push
push
pop
mov
push
lcall
jge
push
fistps
mov
cmc
push
or
mov
pop
inc
lock
lock
jg
mov
aam
pop
or
test
cmovge
add
dec
les
dec
pusha
gs
or
lods
ficoml
adc
jo
mov
ss
cmp
or
pop
icebp
add
jno
mov
adc
sbb
add
and
in
fld
sti
cmp
sub
inc
mov
lock
int3
push
and
cmp
xorl
fcmovnb
or
ret
test
cmp
arpl
cs
out
pop
das
cwtl
mov
xlat
xor
iret
push
dec
adc
mov
cmp
sub
gs
imul
xor
push
andb
add
add
lods
mov
aaa
and
shrb
mov
mov
pop
or
cli
add
xchg
and
or
pushf
mov
mov
cltd
jp
outsl
mov
das
jo
or
test
dec
push
add
xor
cmp
or
pop
outsb
scas
mov
lds
dec
movb
sub
sub
sbb
push
test
mov
mov
cmp
adc
outsl
icebp
adc
inc
inc
sub
or
dec
xchg
mov
or
adc
adc
call
jge
lods
pop
jp
push
or
sbb
xor
mov
mov
and
push
add
out
pop
push
test
mov
adc
stos
pop
mov
pop
loopne
fwait
mov
sahf
stos
add
je
mov
pop
sbb
popa
enter
mov
shll
fsts
insl
pop
sub
adc
pop
int3
insb
pop
sahf
stos
lcall
sub
sbb
daa
inc
adc
xorl
xor
add
jae
daa
je
push
daa
and
das
test
pop
addl
add
sbb
or
data16
or
popf
pop
jno
xor
adc
aaa
mov
adc
cmp
add
or
dec
aad
cmp
out
cmp
adc
sbb
push
inc
pop
daa
dec
lds
add
lock
cmpsl
add
sub
js
mov
mov
into
jo
lds
fmuls
sbb
roll
fwait
push
sub
mov
pop
xlat
jbe
mov
lahf
std
pop
or
and
cltd
pop
pop
rorb
cmpxchg
mov
sti
movsb
add
aaa
and
dec
xchg
xor
stc
fwait
sbb
xor
jl
pop
ja
scas
jmp
inc
daa
xchg
mov
push
loopne
pop
lods
out
test
loope
lahf
or
add
or
jle
and
fstl
sub
iret
jnp
inc
or
loope
pop
cmp
xchg
dec
out
jl
arpl
mov
rcl
addb
jae
inc
push
icebp
xchg
inc
push
xor
and
inc
mov
sbb
sbb
sahf
inc
push
push
in
mov
push
push
mov
or
aad
out
lods
mov
inc
sti
mov
pop
shll
pop
fldenv
test
movsb
jae
and
mov
xchg
mov
pop
mov
incl
or
nop
imul
jns
and
dec
dec
rorl
mov
add
or
lret
and
mov
fisttps
loopne
pop
or
imul
mov
and
pop
pcmpeqd
xor
adc
mov
stos
insl
mov
pop
mov
sub
fadd
call
pop
popa
mov
sub
ret
push
stos
pop
mov
mov
out
push
cs
and
add
mov
push
nop
ret
cmp
sub
sub
scas
bound
pop
sub
pop
inc
jns
jecxz
cs
adcl
push
pusha
subl
or
es
into
lods
popa
inc
adc
jmp
mov
sub
iret
mov
loope
pop
dec
dec
add
insb
xor
and
add
sub
fildl
push
mov
lods
aam
push
push
mov
xor
sbb
dec
pop
daa
fmul
inc
lock
nop
roll
jecxz
cmpsl
icebp
and
mov
adc
enter
test
push
cmp
repnz
sbb
daa
sbb
int
and
in
mov
sbb
jne
mov
cmc
xor
mov
cmpsl
jne
sub
inc
sarb
xchg
inc
clc
pop
mov
fcmovnu
ret
xor
mov
adc
mov
negl
add
or
mov
cmp
in
or
xchg
xchg
ret
jle
cmp
outsb
fcoms
xchg
or
mov
test
fcmove
dec
rcl
cmpl
iret
dec
je
push
pusha
enter
mov
in
or
add
xor
lret
int3
adc
mov
out
popa
mov
in
xorl
jns
sbb
out
inc
dec
mov
sbb
andl
add
add
cmc
add
jecxz
scas
icebp
dec
cmpsl
cmc
into
push
dec
leave
dec
and
fld
js
push
enter
shlb
inc
and
test
cli
inc
inc
lret
cltd
lcall
repnz
or
jae
jmp
icebp
shr
xor
sub
lcall
mov
cs
push
xchg
or
push
xlat
jg
into
sbb
cmp
sarb
or
test
insl
pop
enter
flds
sbb
mov
in
adcl
mov
mov
push
roll
mov
mov
shll
xchg
cmpsl
xor
push
adc
push
negb
sbb
pusha
sbb
add
ss
outsb
jecxz
stos
adc
insb
cmp
sbb
xchg
fists
sbb
pop
movsl
daa
add
shl
fs
dec
xor
call
into
xchg
es
loop
bound
mov
sbb
xchg
xor
inc
push
sub
cmp
cmp
scas
push
adc
and
jo
sahf
subl
jg
sub
repz
dec
push
jbe
je
stc
xchg
sarl
in
jl
adc
iret
and
rolb
jo
push
pusha
jp
mov
add
push
fwait
dec
mov
xchg
pop
xchg
jne
cld
push
mov
or
pusha
inc
ffreep
mov
inc
outsb
adc
push
aas
daa
int
and
dec
push
xor
fpatan
ljmp
mov
jns
add
dec
jne
pop
or
daa
aaa
mov
mov
aaa
ss
repz
outsl
cmpsb
add
loop
cmp
sbb
faddl
bound
xor
insl
mov
mov
lea
and
ret
gs
pusha
jo
fnsave
sub
adc
mov
xor
and
clc
nop
sbb
pop
test
add
loope
sub
jb
pop
cmpsb
inc
test
mov
push
sub
jb
insb
push
cmpsl
inc
xchg
inc
ret
cmpl
clc
dec
and
jg
inc
cmp
xchg
mov
and
add
loope
pop
loope
cmp
xor
cmpsb
dec
addl
push
test
sub
call
pop
cmp
xor
adc
mov
push
mov
xchg
into
and
jae
mov
les
or
icebp
rcr
mov
add
or
or
fmulp
lock
lahf
fdivrl
dec
mov
loopne
mov
sbbl
or
scas
push
mov
fcoms
and
lret
mov
cs
push
testb
mov
cmp
jno
or
cmp
push
lret
call
lods
loopne
loope
negb
or
dec
jp
xor
testb
xchg
push
mov
ret
lods
xor
inc
mov
xchg
mov
adc
push
sub
push
bound
dec
pop
neg
pushf
push
xchg
push
adc
jnp
sbbb
repnz
add
cmp
jmp
loope
into
dec
shlb
and
pop
pop
shll
aam
adc
or
xor
push
fldenv
jl
lcall
movsl
and
outsl
dec
inc
add
mov
pop
pop
lods
and
mov
inc
xor
inc
xchg
pop
les
and
mov
cmc
test
cmp
dec
dec
cltd
pop
shlb
fidivs
inc
sub
fcmovnb
mov
cmp
loopne
lock
sub
subb
add
ja
aam
js
sbb
adc
decl
cmp
and
frstor
iret
out
mov
ret
or
into
bound
add
cmpsl
mov
xor
sub
xor
cs
dec
jl
ret
xlat
sahf
ret
rcr
ret
xchg
jo
aad
add
adc
push
xchg
pusha
lea
scas
adc
movups
rcrb
xor
jl
push
dec
jp
loopne
cmp
in
mov
scas
jno
inc
shr
pop
movsb
icebp
movsb
xor
loopne
adc
mov
xor
call
push
cmpsb
xlat
jg
pop
imul
adc
mov
cmp
rcrb
lods
jmp
sbb
insb
iret
inc
aad
sbb
sub
cmpsl
inc
pop
ds
test
xchg
dec
imul
sub
push
cmpsl
fmulp
pop
jb
data16
insb
push
test
insb
adc
inc
aas
pop
pop
data16
mov
push
or
or
lods
add
hlt
outsb
insl
aas
inc
push
cmc
daa
push
adc
pop
mov
or
roll
inc
stos
mov
loope
mov
outsb
fldenv
pop
daa
or
mov
inc
mov
int
clc
fmul
cmpsb
dec
or
xchg
sub
fwait
pop
jle
and
stos
mov
fs
and
or
test
shlb
adc
jge
lock
int3
test
push
pusha
in
and
out
stos
sub
stos
inc
sbb
call
inc
fistps
sbb
loop
mov
lds
test
xchg
mov
test
es
pusha
push
sub
cmp
cld
js
frstor
push
arpl
xchg
add
jmp
add
cld
loope
push
mov
mov
cmp
bound
pusha
jbe
push
popf
adc
dec
enter
inc
test
xor
aad
mov
iret
jmp
icebp
add
or
into
inc
stos
cld
sahf
mov
push
pop
icebp
add
add
dec
and
jmp
dec
es
imul
loop
xor
icebp
lret
frstor
test
and
movsb
xor
mov
imul
inc
xor
mov
cmpps
or
rclb
add
cmp
add
mov
pop
insl
and
or
jo
inc
add
push
sahf
aaa
and
mov
push
jg
movsl
popa
adc
pop
popa
mov
dec
movsl
jno
aaa
xchg
inc
mov
xor
xchg
aad
or
pop
mov
ret
jmp
mov
jne
jne
inc
add
les
or
loopne
xchg
sti
cmc
add
inc
lcall
mov
add
adc
pop
sbb
push
cwtl
cmc
xor
jno
inc
fbstp
mov
test
icebp
inc
sbb
cmp
aad
mov
mov
adc
sbb
pop
cli
loop
mov
pop
cmp
sbb
jbe
mov
jbe
call
scas
push
lock
mov
cld
test
out
add
ret
out
mov
or
cmp
pop
sub
stos
hlt
test
and
ss
sahf
cmp
movsl
fcomps
out
flds
mov
dec
jecxz
and
add
xor
bound
imul
pop
xor
push
xchg
dec
ret
jo
inc
inc
mov
test
add
inc
arpl
xchg
add
outsl
mov
insl
std
inc
sbb
lods
fcmovu
sbb
movsl
sub
jnp
cmp
test
scas
xor
lret
cmp
pusha
cmp
push
inc
aaa
call
out
add
jle
jle
xlat
aaa
ret
mov
or
inc
lock
xchg
add
rorb
jo
dec
xor
push
imul
mov
cmpsl
mov
lcall
les
loopne
or
xor
lds
aad
pop
enter
shrb
push
insb
lret
dec
jno
loop
mov
adc
icebp
in
jp
mov
fmuls
pop
jne
data16
mov
ror
sub
in
dec
cmp
int3
and
test
rorl
inc
das
test
dec
mov
xlat
stos
cmpl
mov
dec
leave
ds
inc
or
xchg
xor
mov
je
sbb
and
xchg
cwtl
jp
fsubrs
mov
sbb
xor
fdivs
testl
cltd
push
pop
add
pop
push
push
and
adc
iret
rol
sbb
xor
xchg
hlt
sbb
jbe
in
fstp
push
jbe
add
cmp
js
insb
xchg
jne
mov
sbb
mov
jno
loopne
cmp
lcall
mov
test
jnp
xchg
cmc
lods
in
xor
push
in
imul
and
jnp
rolb
and
rol
xchg
test
mov
repz
pop
add
addb
mov
adcl
and
in
cmc
jbe
mov
jae
icebp
sub
in
fadd
bound
orl
jge
adc
add
dec
arpl
add
out
or
fadds
push
add
pop
add
push
jp
sbb
ret
sbb
add
dec
cmp
add
mov
cmp
sub
aas
dec
test
lods
xchg
imul
xchg
mov
stc
pop
lods
dec
adc
add
dec
sbb
sub
inc
mov
test
scas
fistl
pop
sahf
push
repz
lahf
decl
pop
adcb
sti
add
push
push
mov
call
sahf
testl
xor
jbe
dec
iret
out
iret
shrb
mov
sbb
sbb
xor
lret
cs
mov
in
addr16
lret
sahf
insb
imul
add
popf
jnp
subl
sub
jae
and
xlat
cmp
mov
into
loopne
in
inc
inc
push
testl
inc
and
sub
rcrb
iret
push
shll
sbb
lahf
xlat
mov
mov
dec
mov
xchg
xor
adc
dec
adc
rcrb
std
dec
sbb
pop
cmp
fs
add
pavgw
sahf
iret
js
pop
adc
push
out
lods
and
aam
aam
adc
xchg
in
in
cmp
add
lea
mov
ja
or
xlat
ds
xchg
rclb
or
stos
mov
mov
and
pop
addr16
popa
fldl
ljmp
or
inc
add
mov
push
jmp
lods
es
stc
fstpl
mov
aad
in
insb
mov
ret
out
jnp
cmpsl
je
ds
and
add
sbb
mov
imul
cmpsl
cmpsl
mov
sbb
std
add
jecxz
daa
cmpsl
lret
ret
inc
fwait
cltd
dec
adc
inc
and
push
sti
jns
mov
mov
or
jl
xchg
pop
xchg
inc
mov
or
int3
add
xor
or
sub
or
xor
scas
pop
sbb
xchg
popa
push
es
daa
sub
ja
pop
leave
pop
daa
adc
addr16
adc
out
fdivl
ret
pop
orl
pop
ret
pop
mov
push
push
es
inc
push
adc
or
pushf
cmp
roll
jae
jb
jmp
js
mov
and
rorl
push
inc
mov
or
inc
jno
xor
inc
cmp
lahf
daa
add
lahf
in
add
add
and
rolb
hlt
imul
js
mov
es
loope
mov
mov
aaa
test
mov
pop
push
rcr
pop
pop
dec
clc
stos
xchg
pusha
xor
xor
clc
push
addr16
xor
lahf
test
rorl
or
cmpl
mov
sbbb
add
push
lock
adc
cmp
adc
std
jp
pop
dec
add
inc
lret
push
call
xor
or
push
mov
lock
or
aaa
ds
jb
pop
addl
insl
cs
pop
dec
fidivrs
push
pusha
loope
jb
sbb
ret
test
lock
pop
add
or
testb
popa
shl
lea
and
jg
jo
and
test
xor
movsl
jle
lods
test
inc
pop
mov
sbb
pop
sbb
out
push
xchg
and
je
jmp
and
xchg
les
push
lret
test
aas
dec
sub
dec
mov
shrd
ret
mov
or
and
je
xchg
fiadds
fcmovnb
imul
pop
xchg
rclb
sti
fstpl
add
cmp
insb
movsb
cs
push
fs
cmp
inc
sub
subl
js
adc
lods
lret
add
jno
pop
mov
repnz
fldenv
jne
movb
js
pop
inc
xchg
scas
out
ret
or
add
repz
push
and
out
sub
or
add
xchg
xchg
sbb
aam
cmp
dec
loope
and
push
xchg
mov
add
pop
jbe
xor
popa
jo
rcrb
inc
and
mov
cltd
lcall
cmp
adc
test
gs
inc
jo
push
popa
ja
pop
inc
jmp
add
lods
aas
scas
mov
cmp
stos
xchg
shll
ja
dec
add
fiadds
mov
mov
sbb
ja
test
jecxz
addr16
es
add
stos
jge
jb
data16
lods
mov
fcoms
ds
or
lea
pop
notl
jbe
xor
cmc
add
pop
nop
or
mov
cmp
xchg
pop
pop
or
clc
daa
outsl
scas
mov
jno
pop
ljmp
xor
js
icebp
sub
add
or
je
ret
pop
pop
jo
adc
faddp
push
cwtl
inc
mov
les
cmp
cmc
ret
stos
rcr
leave
shl
lods
jne
sbb
adc
movsb
xchg
fsubrs
jmp
mov
add
xorb
xor
add
int
mov
decl
fcompl
scas
flds
add
test
nop
dec
sub
lock
out
push
jo
or
rcrb
inc
mov
mov
js
mov
fadds
dec
dec
dec
cmp
inc
leave
xor
and
stc
subl
mov
jb
sub
sub
enter
cmpsb
push
or
jecxz
jns
xor
pop
or
sub
mov
push
and
xlat
hlt
in
pop
lret
jbe
stos
daa
sbb
outsb
sbb
and
jns
jecxz
mov
add
cmpsl
int
ja
inc
mov
loope
inc
xor
adc
pushf
lea
insl
test
jb
push
or
shrb
in
shlb
lds
push
add
xor
cwtl
sub
lahf
add
dec
mov
loope
and
pop
ret
mov
shrb
cwtl
or
xchg
add
jge
lahf
jmp
mov
and
push
xchg
test
sbb
push
cwtl
dec
xchg
sbb
cld
jbe
insl
push
not
mov
jmp
push
sbb
loope
fistl
outsl
mov
xchg
add
inc
frstor
pop
cmp
push
lock
pop
rclb
popf
shl
xor
scas
mov
sbb
punpckldq
andl
add
mov
push
stc
mov
popa
subl
dec
add
lods
aaa
in
and
adc
push
and
sub
inc
push
or
jmp
inc
ja
mov
pop
jno
js
inc
jbe
daa
fwait
sbb
push
jmp
mov
inc
xor
push
andl
in
add
or
loop
out
add
or
dec
sub
xor
lahf
fists
mov
add
mov
fnsave
andl
sbb
xchg
aas
fadd
add
js
push
pop
cwtl
xchg
jmp
or
cmc
es
arpl
adc
adc
test
or
and
push
cmp
movsl
iret
pushf
aad
mov
icebp
test
adc
inc
and
dec
jp
pop
out
sub
or
cmp
gs
xchg
in
push
cltd
rolb
cmc
xchg
fildl
add
test
mov
lret
mov
je
in
jp
xor
lds
mov
sub
out
mov
pop
mov
mov
add
or
sarb
and
xor
and
mov
add
sub
jnp
mov
mov
ja
and
xor
mov
jnp
or
imul
xlat
les
mov
and
sub
jmp
sub
out
sbb
out
inc
ret
sti
inc
inc
sub
push
into
repnz
sarb
push
pop
lods
call
bound
call
sbb
repz
push
inc
push
iret
push
adc
fcompl
outsb
jne
or
jge
inc
add
sub
arpl
jbe
sti
sbb
bound
push
sbb
sarb
test
pop
dec
inc
jae
adc
jbe
dec
mov
ror
shrl
mov
mov
sbb
bound
stos
xchg
jecxz
shrb
mov
push
arpl
xchg
cmp
insb
mov
scas
ljmp
mov
pop
add
mov
les
pop
xchg
stc
jo
cmp
loopne
jns
insb
cmp
fcmovbe
add
aaa
pusha
sub
cmpsb
lret
cli
dec
fmuls
sti
hlt
movsl
sbb
roll
sbb
dec
pop
mov
pusha
or
jmp
mov
push
fisttpll
fs
cli
int3
cwtl
frstor
sbb
jl
mov
lods
cmpb
and
jg
adc
mov
hlt
mov
scas
inc
mov
adc
popa
add
fldcw
pop
mov
loopw
test
push
sub
daa
pop
ja
bound
jmp
insb
sahf
jmp
das
jae
pop
rolb
loopne
mov
lds
jnp
cmpsl
orl
test
fbstp
addr16
fistpll
movsb
or
adc
mov
bound
sti
bound
pushl
roll
lds
ss
lret
sti
aaa
ja
aaa
movsb
loope
dec
pop
inc
inc
fs
pop
inc
loopne,pn
addr16
mov
jl
pop
addr16
add
pop
push
dec
adc
push
aam
cs
lea
xlat
loopne
dec
psubsw
push
clc
xchg
fsubrs
xchg
arpl
imul
add
fwait
adc
jo
xchg
mov
out
pop
gs
xchg
mov
sub
call
mov
jne
lods
movsl
jnp
dec
ret
stos
js
xchg
pop
push
stos
fs
push
jb
nop
jno
ja
add
int
adc
aad
outsl
sbb
or
adc
jno
cmp
aas
adc
add
add
pop
movsb
xchg
int3
jl
pop
icebp
push
and
xor
or
or
pop
add
or
jg
inc
lret
adc
xchg
std
test
and
aad
xor
dec
jne
jle
rcrl
or
sbb
shrl
js
mov
pop
js
rorb
adc
jge
push
loopne
mov
xor
in
push
dec
out
inc
fstpl
or
jge
aaa
es
mov
mov
out
mov
movsl
mov
dec
std
iret
ror
dec
push
mov
imul
push
scas
pop
test
pop
xlat
pusha
push
xchg
jno
push
xchg
pop
int3
dec
je
pop
xchg
imul
loop
loope
xchg
xchg
int
iret
imul
add
add
icebp
mov
das
pop
or
push
xor
fadds
test
adc
lods
add
adc
xor
or
stc
sub
popf
hlt
push
mov
ret
sub
or
enter
test
jp
loope
and
xchg
or
inc
mov
das
pop
call
je
fwait
push
add
ja
mov
lcall
jg
outsl
sub
iret
or
out
and
mov
lea
sahf
jne
mov
or
or
ret
stos
add
movsl
dec
push
ja
pop
inc
test
mov
mov
into
xchg
pop
xchg
dec
pop
cmpsl
cli
jo
add
test
mov
ds
fadds
loopne
test
xor
loope
push
dec
popf
and
jl
inc
xor
dec
mov
add
xor
ffree
mov
rolb
inc
test
xor
clc
mov
pop
mov
stc
cmp
mov
jl
addl
add
add
data16
ljmp
push
mov
out
jle
cmp
leave
les
mov
aad
xchg
shl
xchg
mov
mov
mov
mov
iret
std
jno
pop
inc
push
sar
jno
orb
or
movl
loopne
cmp
push
shrb
mov
rolb
es
lea
add
mov
cmp
push
jmp
xor
jns
jle
loope
adc
adcl
pop
adcl
ret
or
jo
adc
das
lds
mov
test
mov
bound
movsl
loop
xorl
aam
shlb
xchg
cmc
shlb
loope
pop
nop
cmp
ret
pop
movsb
pusha
mov
xor
bound
sub
or
xchg
jno
test
xchg
int
lahf
cmp
or
sbb
sbb
lret
and
pop
cmp
mov
mul
or
xchg
lahf
push
xor
jo
or
loopne
call
or
sahf
sub
lods
test
add
aad
cmpsl
sub
out
and
jp
hlt
les
out
mov
add
adc
or
push
mov
push
sbb
imul
fs
push
lock
faddl
jae
push
pop
fwait
inc
std
imul
jno
push
or
jne
cs
xchg
jns
movsl
add
mov
lods
sbb
xchg
xchg
cmp
loopnew
push
xor
adc
cli
xchg
or
push
clc
nop
cmp
adc
iret
sti
loope
fldcw
jne
jno
pmullw
test
or
fidivs
push
popa
js
dec
out
sub
cmp
dec
push
xchg
loopne
pusha
sbb
add
add
pop
push
jae
add
in
insl
and
mov
push
xchg
clc
xor
or
outsl
lods
add
dec
enter
xor
in
loope
dec
jle
sub
inc
dec
push
pop
jmp
cmp
bound
cmp
push
mov
je
rcrb
fldcw
shlb
flds
imul
cmp
imulb
and
aaa
mov
daa
mov
rorl
icebp
push
lock
cmp
jecxz
gs
inc
test
mov
iret
movsl
sbb
mov
sbb
and
inc
das
pop
mov
add
or
and
jl
jnp
mov
in
adc
xchg
sti
js
pop
jno
enter
scas
arpl
fisubl
mov
rcl
mov
jle
fdivrs
nop
jns
sbb
and
dec
loopne
les
nop
das
fildl
xor
mov
inc
outsb
pop
jae
add
les
cwtl
adc
add
lock
nop
inc
aas
sbb
sub
mov
xlat
into
je
or
or
push
imulb
lods
ljmp
jne
push
push
sbb
mov
aas
jbe
xchg
inc
ljmp
dec
add
lret
jo
fisubl
std
movsl
xlat
mov
or
or
ficoml
test
fdivs
mov
fidivrs
cmc
or
or
fsubp
insl
inc
xchg
mov
cli
sarb
sbb
sub
mov
lock
lock
adc
stos
cmpsl
adc
or
push
shlb
jmp
add
mov
rcrl
dec
and
mov
test
lea
shrl
sub
push
xor
pop
popa
jae
pop
adc
add
pop
icebp
popa
inc
je
leave
es
add
ret
je
pop
mov
sub
or
jo
jmp
xor
dec
rcrb
add
scas
xor
mov
jle
shrb
sti
bound
jo
or
cmpsl
jle
push
nop
xor
jp
and
push
cmp
dec
or
push
and
xlat
add
push
mov
inc
dec
mov
fidivs
mov
mov
xchg
sbb
mov
subb
inc
mov
imul
mov
jmp
add
mov
jmp
popa
add
sti
jo
mov
imul
hlt
adc
cmpsl
das
les
cld
pop
and
popl
xchg
mov
mov
and
popa
test
rep
add
in
or
adc
divl
in
shll
pop
sub
ss
lea
adc
add
add
adc
and
loopne
loop
xlat
xchg
lret
sub
loope
and
sub
rorb
inc
jl
pop
xor
jl
das
sub
sub
mov
pop
fimuls
jne
or
mov
jmp
imul
jne
rcr
lods
nop
push
loope
lahf
addr16
dec
test
in
daa
push
dec
lock
and
sbb
push
add
je
rcll
scas
outsl
clc
sbb
cmp
enter
mov
inc
cmp
add
sbb
fdivrs
cmp
mov
mov
popa
mov
loope
mov
adc
add
sti
cmpsb
or
push
lret
jecxz
shlb
mov
int
adc
mov
or
lea
popa
je
clc
pop
mov
ja
xorl
adc
test
test
inc
mov
jno
push
xor
loop
adc
pop
push
jecxz
add
addb
cmpsl
imul
add
sub
add
xor
les
jge
mov
outsl
cmp
push
jg
iret
jecxz
in
push
ljmp
adc
ljmp
mov
cli
inc
adcb
pop
sub
sub
imul
mov
sub
jnp
xorb
xchg
xchg
dec
fnstsw
jo
imul
ret
adc
gs
or
pusha
das
jno
dec
mov
dec
inc
iret
push
dec
add
rcrb
mov
fwait
inc
mov
fwait
sub
sbb
scas
adc
cmp
mov
sub
mov
shrl
outsb
xor
insb
sub
sbb
mov
test
cld
loopne
inc
popa
add
add
add
adc
adc
shl
add
and
pop
adc
mov
ret
pusha
pop
xchg
jnp
rcl
and
cs
add
fdivp
sbb
add
aaa
sub
data16
sub
pop
aas
lahf
xchg
aam
cmp
pusha
push
xor
sarb
add
dec
imul
sbb
and
das
xor
mov
arpl
loopne
sub
gs
push
xchg
clc
sbbb
in
pusha
lea
dec
mov
dec
fwait
jno
adc
jbe
dec
cmp
mov
pop
add
xor
mov
sbb
mov
js
mov
test
addb
sub
dec
xor
pusha
xchg
xlat
insl
aas
push
push
push
sbb
push
mov
and
xchg
push
addb
and
lods
in
fmul
mov
jmp
add
jno
insl
ror
sub
insl
fucomi
add
aam
shlb
push
lock
mov
cmp
add
push
js
mov
jmp
bound
fldcw
loope
pop
push
das
sbb
cmp
sub
fsts
rcll
adcb
xchg
cmp
daa
loope
add
les
inc
cmp
cmp
test
out
ja
sub
outsb
mov
sub
xchg
sbbb
sbb
call
mulb
pusha
and
out
out
or
jle
jno
pop
pusha
lock
jo
fst
js
pop
imul
dec
mov
jecxz
dec
or
adc
jecxz
push
rcr
adc
aam
cmp
aam
int
aad
iret
xchg
ret
push
repnz
jb
std
mov
fsubrs
call
ljmp
jae
or
jno
push
ret
adc
jo
xor
movsb
sub
mov
xchg
push
pop
sbb
push
and
std
inc
pop
pop
mov
and
insl
pop
adc
xchg
sbb
les
and
xorb
pop
arpl
fs
sub
je
hlt
test
mov
fisubrs
mov
jo
cmc
shl
jmp
das
cmp
xor
jno
adc
xchg
outsl
xor
mov
jo
popf
popf
mov
cmp
push
xchg
jno
cmp
in
ja
out
and
shll
repz
cwtl
add
mov
mov
xor
lret
push
add
pop
addb
jo
dec
inc
adc
test
inc
pushf
adc
adc
out
and
adc
push
cmp
add
fldcw
push
add
outsl
aaa
int
cmp
fs
dec
xchg
jecxz
xlat
push
lods
icebp
mov
jmp
jge
add
gs
lea
cld
mov
xor
add
jo
push
cmp
cli
inc
es
mov
adc
cmp
adc
add
inc
push
and
jle
rclb
push
xchg
add
mov
repz
jp
lcall
nop
add
adc
daa
inc
pushf
add
scas
test
fdivrs
pop
insl
inc
ret
loopne
push
dec
aas
ljmp
popaw
dec
push
icebp
sbb
shl
add
jae
mov
jecxz
and
xchg
ret
sbb
dec
loopne
or
in
fisubrs
dec
int
inc
inc
ljmp
retw
dec
loop
and
xchg
dec
lock
add
push
into
pop
iret
jle
add
pop
push
mov
jbe
loop
adc
into
pop
inc
mov
pop
in
repz
add
push
mov
jno
pop
jno
adc
testl
subps
or
adc
ret
dec
filds
insb
push
cmp
pop
clc
mov
iret
push
outsb
add
pop
adc
js
sbb
in
add
xchg
icebp
sbb
pop
inc
add
adc
repnz
leave
pop
mov
aaa
insl
pop
mov
fadds
je
int3
add
js
xchg
in
or
addr16
addr16
fisubrs
xchg
lret
push
js
sysexit
test
gs
add
push
ret
pop
imul
notb
test
shrb
push
ja
jno
adc
add
push
inc
pop
cmp
test
shll
jecxz
movsl
inc
add
fnsave
mov
dec
mov
shlb
test
lds
rcrb
mov
xchg
into
inc
lock
arpl
add
push
adc
and
outsb
test
sahf
inc
add
les
jbe
lret
sbbb
js
inc
fwait
add
cmp
jo
and
outsb
sbb
dec
stos
pop
adcl
push
xchg
mov
iret
inc
pusha
pop
dec
pop
push
lea
jle
in
int
popa
cmp
jmp
adc
xor
inc
push
cs
sbb
inc
sub
rolb
movsl
repz
push
pusha
or
test
in
add
jl
push
cs
dec
cmp
lret
and
inc
out
les
sbb
jg
sub
cmpsl
dec
nop
mov
enter
dec
and
dec
inc
bsr
in
mov
jg
pushf
or
jp
lret
pusha
xchg
les
lods
pop
popf
jecxz
and
mov
jo
imul
xlat
inc
sbb
sub
jmp
xchg
imul
lock
mov
pop
arpl
enter
stos
add
pop
and
out
rcl
add
add
das
test
inc
mov
mov
out
out
pop
mov
ret
test
movsb
arpl
and
add
int
inc
mov
lds
cmpsl
loopne
dec
sbb
adc
clc
sti
jmp
push
mov
adc
in
xor
jmp
add
sub
xchg
sbb
mov
cmp
sbb
xor
shrl
js
inc
aas
jno
insb
jle
addb
outsb
or
and
ficomps
iret
pop
lret
sub
dec
lea
jg
mov
add
mov
sbb
push
mov
cmp
mov
add
sti
andb
sti
lcall
scas
mov
cmpsb
nop
xchg
les
jne
pop
add
xorl
sub
adc
outsl
jge
or
jo
clc
lcall
fadd
jbe
or
lret
push
jno
insl
add
out
int
stos
pop
mov
js
xchg
icebp
cs
data16
les
push
mov
and
sbb
andb
pop
push
push
movsl
add
testb
das
outsb
inc
adc
movsb
ret
mov
movsl
push
push
arpl
imul
sub
jns
add
mov
cmp
mov
inc
add
aad
lods
fmul
add
adc
cmp
sub
and
iret
sbb
fwait
push
mov
and
daa
pop
mov
xchg
and
lret
push
mov
daa
and
out
sti
cmp
push
fistpll
imul
dec
mov
mov
cmpsb
mov
push
or
arpl
mov
mov
push
adc
jne
out
jg
inc
ror
fwait
inc
push
jle
sub
push
push
mov
pop
inc
mov
push
push
pop
mov
int
push
ret
lret
adc
cmp
in
jno
push
arpl
jecxz
fsubl
popa
std
xchg
arpl
cmp
movsl
das
movsb
shll
frstor
or
sub
push
frstor
xchg
int3
ret
xchg
ja
xor
push
stc
sub
popa
jne
loopne
ret
jnp
hlt
mov
movsl
shlb
xor
jns
push
stos
adc
and
and
cmp
and
cmpsb
push
lods
mov
sbb
sbb
js
loop
into
mov
jo
stos
sub
push
subb
lods
fmull
mov
jae
xlat
adc
call
sbb
inc
les
pop
push
in
mov
mov
push
or
mov
push
cltd
cltd
mov
loop
jp
scas
xchg
xchg
pop
cmp
sub
or
and
clc
inc
sbb
fldcw
mov
pop
out
sub
jecxz
sbb
xor
cmp
push
stos
pop
add
xor
out
nop
jge
loope
adc
or
add
and
xlat
xor
or
sbb
adc
mov
and
popa
pop
mov
xchg
cmp
xchg
xchg
mov
orb
cmpsl
sub
in
dec
lret
xchg
add
jecxz
jne
andl
add
rolb
xchg
xor
sub
inc
fsubrs
pop
xor
das
mov
popa
scas
dec
mov
movsl
loopne
jle
xor
loope
cmc
adc
stos
and
push
and
jmp
adc
and
psllq
inc
addl
ja
sub
push
sub
std
or
cmp
xorb
out
inc
mov
cmc
ficoml
mov
or
in
shlb
imul
sub
sbb
add
xchg
xorb
ficoml
adc
mov
xchg
and
jno
je
pop
lock
adc
sub
pop
int
inc
push
test
lret
xor
loopne
sub
outsl
nop
xorl
addb
scas
pop
jns
sahf
add
sti
loop
ss
pop
mull
test
test
mov
test
xor
push
mov
sbb
cmp
fadds
fldt
sbb
sbb
lahf
nop
push
loopne
pop
mov
fistl
jge
cs
sub
jb
inc
sbb
mov
lods
xor
fisubrl
or
gs
sbb
xchg
dec
adc
add
iret
in
adc
stos
lea
mov
lds
adc
add
scas
cmp
adc
ja
loopne,pn
adc
sub
jecxz
or
adc
pop
fs
sub
repz
dec
data16
cmpsl
push
inc
sub
test
jg
mov
sbb
sub
insl
inc
push
mov
xchg
cmpb
lods
adc
pop
jne
cld
add
push
lds
jno,pt
mov
cmp
jne
cltd
mov
lock
scas
icebp
sub
popf
lcall
sub
sbb
push
adc
es
lret
test
push
inc
out
mov
pop
inc
mov
sub
scas
cmp
les
shll
les
rclb
test
xchg
adc
leave
roll
inc
or
out
popf
js
jge
mov
sbb
dec
xor
into
mov
sar
sub
sub
enter
leave
vcomisd
bswap
cwtl
add
std
xor
xlat
adc
adc
sub
sbb
and
lret
adc
cmp
lea
pop
push
mov
push
sbb
or
or
ljmp
inc
sub
or
mov
mov
mov
mov
sbb
mov
inc
test
jge
test
push
stos
and
comiss
lahf
icebp
or
std
divl
push
mov
add
les
cmpsl
mov
rol
divl
inc
pop
push
test
mov
or
inc
push
lea
jne
loope
imul
pop
inc
ret
imul
inc
sub
xorl
les
cmp
xlat
subl
inc
popaw
sbb
jge
mov
pop
test
mov
or
stos
xor
sbb
fs
lret
mov
adc
push
or
sbb
lea
add
loopne
xor
xchg
pop
xchg
lahf
test
or
mov
mov
test
mov
and
sub
scas
or
cmp
stos
add
test
ret
mov
sub
jl
enter
gs
icebp
shlb
and
add
imul
rorb
inc
or
mov
adc
incl
push
mov
jbe
es
jmp
jle
fcomip
or
xchg
daa
fs
inc
add
imul
ds
xchg
xchg
mov
call
pop
clc
adc
scas
jo
std
sti
shrl
inc
or
outsl
sub
add
lods
add
jecxz
sbb
lret
mov
push
je
sbb
add
lret
nopl
jb,pn
cpuid
insl
pop
and
out
pop
and
pop
adc
adc
cltd
sbb
scas
outsl
sub
iret
push
jl
lret
mov
dec
cmp
mov
xchg
sbb
mov
or
stos
movsl
fwait
and
push
mov
sub
mov
push
fcomi
es
scas
lock
sub
lds
and
sub
fistl
cmp
es
adc
repnz
popa
test
add
out
jecxz
push
dec
xchg
and
adc
mov
sbb
sbb
mov
insl
das
pushf
pop
fbld
mov
shll
add
sbb
mov
mov
mov
xor
repnz
or
inc
adc
and
popa
mov
dec
fadds
and
cmc
into
ret
lock
sub
ret
or
inc
push
inc
repz
sbb
add
fldl
push
add
push
scas
mov
xchg
sbb
sbb
movsb
mov
inc
push
pop
sbb
test
andl
push
mov
inc
insl
cmp
push
mov
fimuls
and
xlat
push
loopne
inc
dec
cwtl
lods
sub
and
or
test
cs
sbbb
ret
orl
mov
fiadds
sarb
test
or
clc
or
lock
sub
push
cs
dec
jmp
aas
or
iret
pop
mov
js
sbb
mov
add
sbb
out
inc
mov
mov
add
mov
orb
shlb
xor
fwait
xor
hlt
in
mov
iret
pop
insb
es
hlt
push
xchg
xchg
lea
sbb
pop
cmpsl
xchg
xorl
sbb
fisttpll
or
push
out
mov
rol
sbb
notb
icebp
out
add
arpl
add
stos
int3
adc
mov
add
pushf
ja
dec
push
jg
stc
mov
jno
shrl
inc
adc
push
pop
push
jecxz
pushf
fiadds
cmp
hlt
bound
je
sub
xchg
dec
pop
cmp
push
test
das
add
fcmovnb
cmp
add
sbb
or
add
xchg
mul
gs
jp
test
jle
pop
clc
add
cmp
addr16
stc
rclb
lock
lods
rorb
and
sbb
jne
and
ret
sbb
enter
ds
dec
hlt
inc
mov
loope
dec
test
dec
mov
sbb
and
scas
xor
pusha
ja
je
mov
imul
dec
lods
hlt
push
test
cmova
push
mov
add
scas
pop
insl
pop
push
in
mov
inc
int
into
subb
or
jge
dec
jnp
jno
jp
fstl
jge
addl
cvtpi2ps
dec
test
push
pop
cmp
sbb
and
or
aad
stos
sti
aas
mov
das
add
push
pop
push
cmp
inc
add
or
das
nop
jl
lea
sbb
jmp
scas
adc
hlt
xchg
mov
and
or
ret
lds
add
rcll
push
pop
mov
in
cmc
test
mov
ljmp
fimull
xor
lea
cmpb
imul
xchg
scas
loope
leave
mov
iret
xchg
adc
cmp
leave
lods
andb
shlb
outsl
sub
xchg
daa
and
and
daa
jae
mov
fimuls
jne
mov
lds
pop
pop
in
lret
and
push
jbe
adc
sub
pusha
adc
xchg
rorb
ja
add
add
cs
mov
jb
and
mov
pop
aaa
test
add
cs
adc
ds
push
rorb
ja,pt
lret
scas
lods
rcll
jbe
push
les
ja
pop
add
lea
mov
push
insb
cwtl
or
and
cmp
das
and
pop
std
mov
pusha
jbe
imul
loope
loopw
imul
sbb
rcl
rolb
jl
lods
es
pusha
gs
inc
out
xchg
movsl
push
mov
ficomps
jo
xchg
pushf
dec
test
loopne
push
push
sub
cmp
cltd
sarb
stc
mov
and
daa
mov
xchg
mov
adc
je
sub
icebp
scas
adc
pushf
or
enter
sub
push
repz
or
sub
pop
or
push
sub
stos
test
pop
jp
or
hlt
shlb
and
cmpsl
jle
fdivrs
iret
or
movsl
mov
imul
or
add
lods
pop
xor
add
int
arpl
in
shll
mov
pop
inc
mov
sbb
hlt
xor
add
rcrb
repz
add
call
jp
fdivrp
pop
test
push
aaa
les
and
mov
or
inc
movsb
and
insb
lret
pusha
je
out
dec
jbe
mov
daa
and
push
add
jg
scas
push
adc
mov
scas
lds
inc
jg
bound
jl
idiv
or
push
xchg
push
sbb
jbe
pop
lret
xchg
push
js
aaa
in
ret
cmp
inc
cld
andb
push
mov
or
add
or
loop
mov
dec
pop
or
ljmp
fdivs
mov
sahf
or
sbb
ficoml
pop
shrb
or
mov
add
aad
out
or
xchg
ljmp
cltd
ret
mov
pop
sbb
or
fwait
shl
movsb
xor
inc
pop
in
sub
add
jno
sub
mov
icebp
ljmp
sub
mov
stos
sahf
or
jl
sub
and
sbb
sbb
stc
mov
inc
in
dec
adc
push
bound
in
fadds
pop
inc
pop
out
dec
cmp
sbb
fucomi
loop
lods
jb
inc
shlb
adc
int3
xlat
sub
push
xlat
or
lret
sbb
mov
scas
inc
fcoms
pop
out
push
jne
push
sbb
out
nop
insl
jecxz
push
xor
xchg
adc
aam
idiv
lods
mov
xchg
xor
stos
mov
cwtl
xchg
cmp
add
add
adc
cmp
lock
jne
add
aam
rcrl
push
sub
sbb
mov
das
ss
cmp
das
mov
mov
cmpb
and
movsb
sahf
mov
in
mov
add
movsl
cld
jns
fcmovnb
out
fdivrs
push
mov
in
mov
xor
js
faddl
sbb
shll
mov
movsb
pop
jmp
insb
xchg
jo
lock
es
leave
jno
pop
and
xchg
and
loop
icebp
pop
jp
sub
xor
loop
shll
testb
or
sti
xchg
mov
mov
push
shrb
rolb
xchg
xor
lcall
pop
inc
adc
cmp
shll
lds
lds
fldenv
or
push
cmp
rcll
pop
mov
mull
ret
and
testl
adc
add
les
rol
sub
inc
ljmp
mov
ljmp
ret
ja
add
test
xchg
adc
es
inc
in
push
jecxz
and
loope
orl
pop
rolb
sub
push
loop
arpl
clc
loop
push
inc
jmp
dec
lea
pop
mov
cmp
aam
fisubrl
lock
sbb
xor
sub
jnp
cwtl
xor
test
pushf
scas
mov
imul
or
ja
sbb
pop
push
lahf
pop
push
inc
test
mov
imul
push
sbb
in
push
mov
call
mov
mov
inc
push
push
mov
pop
jne
push
mov
xchg
inc
sahf
cli
sub
fmuls
pop
scas
xlat
add
dec
sbb
imul
jle
scas
or
dec
mov
ret
cmc
movsb
filds
mov
scas
mov
or
scas
int3
es
sub
sub
mov
sub
push
sub
mov
repz
or
ljmp
adc
out
repz
push
out
adc
or
enter
jmp
aaa
test
je
jns
and
lods
loope
xlat
out
dec
repnz
and
mov
pop
fwait
pop
cmp
mov
and
dec
add
test
sti
sbb
andb
mov
lret
adc
xor
jne
test
xchg
movsl
add
mov
enter
push
pop
adc
xchg
imul
jo
test
dec
add
mov
mov
pop
jne
insb
xor
sub
sub
cmp
fisttps
dec
adc
faddl
or
adc
xchg
lds
mov
jle
push
mov
imulb
loope
adc
dec
jl
cmpsl
mov
jo
or
insl
mov
inc
mov
add
hlt
sbb
dec
arpl
leave
inc
int3
adc
jae
test
dec
out
dec
jmp
fdivr
out
std
add
jecxz
sbb
push
scas
aam
add
xchg
popf
rol
mov
cmp
es
stos
pop
aaa
cmpsb
pop
xor
jns
pushf
adc
outsl
mov
loopne
pop
mov
pop
or
test
aad
sub
or
imul
movsl
lret
sub
pop
sub
iret
mov
lods
mov
inc
daa
lret
loop
pop
adc
std
and
sub
ret
mov
jae
adc
adc
lea
lods
aaa
sbb
sub
sub
pusha
lds
pop
insl
fdiv
mov
xchg
dec
jo
inc
pop
mov
sub
ja
int3
jl
imulb
cmp
loope
test
or
dec
push
cmpsb
push
adcb
mov
xor
xor
es
sbb
cmpsl
nop
ficomps
lahf
or
mov
addb
imul
jl
sub
sub
mov
inc
adc
aas
mov
adc
iret
inc
sub
int3
mov
cs
lods
pop
adc
push
adc
bound
int
stos
jg
adc
cmp
fs
mov
call
test
xchg
pop
sub
and
test
sbb
sub
ror
add
test
xor
lds
loope
xchg
aas
iret
fwait
into
or
sbb
clc
add
push
inc
mov
sbb
xchg
daa
or
dec
cmp
xor
mov
pop
shll
push
mov
sti
mov
fs
inc
insl
push
sub
jle
subl
addb
adc
sbb
add
jne
bound
lret
popa
loope
stos
mov
shll
cmp
lods
mov
cltd
icebp
xchg
cmp
int3
push
sbb
hlt
or
int3
in
lods
jbe
adc
psubq
push
imul
lds
pop
imul
cltd
jo
cmovge
aaa
push
js
mov
mov
fcoml
add
daa
repz
mov
pop
push
pop
cmp
jmp
add
stos
das
inc
mov
roll
aaa
jne
push
jge
cmp
push
sub
push
nop
inc
test
xor
in
loope
pop
push
or
mov
and
addr16
ret
int3
orb
inc
ret
pop
mov
mov
insl
cmp
test
mov
das
xchg
xor
pop
sahf
mov
jbe
fcompl
gs
mov
add
mov
xor
xor
push
cwtl
call
shll
adc
xchg
add
fisubrl
push
jae
bound
and
inc
mov
js
push
addl
pop
negl
pusha
and
inc
jmp
std
test
adc
cli
push
shl
xchg
aam
xor
push
mov
sahf
roll
test
testb
jno
iret
movsl
mov
cltd
dec
add
subb
inc
pop
cs
mov
notl
das
push
loope
mov
iret
scas
add
push
addl
movsl
fdivrl
push
or
inc
pop
push
das
leave
int
lods
stc
out
mov
divl
dec
jmp
cs
btr
into
and
icebp
mov
inc
lods
popf
xor
rcll
stos
ljmp
sub
or
lods
and
gs
add
lock
push
mov
and
cmp
gs
xor
jmp
lret
test
adc
xor
pop
add
inc
inc
mov
push
add
push
inc
mov
das
lods
and
addr16
movsl
shll
mov
jns
cmp
scas
es
pop
and
out
mov
sbb
push
jo
sahf
pop
push
jmp
dec
add
sysenter
or
repnz
xor
popa
je
data16
xchg
dec
popa
arpl
into
push
push
dec
sbb
je
call
inc
and
dec
cltd
inc
inc
mov
pop
lock
pop
outsl
jns
xchg
lea
pop
fstpl
push
sbb
mov
mov
movsb
aas
icebp
and
bound
jmp
loop
lea
aaa
mov
xor
cmc
imul
or
cmc
sub
btl
mov
enter
xchg
js
imul
xchg
add
add
sbb
repnz
xor
pop
nop
xchg
sub
jae
icebp
pusha
and
bound
mov
int3
lods
les
jbe
out
es
rcrl
add
sbb
push
xor
data16
lret
mov
mov
movsb
outsb
scas
jmp
int
xor
mov
add
jmp
xchg
xchg
cmp
xchg
or
dec
daa
or
call
jge
out
ret
popa
je
pop
xchg
je
dec
call
push
out
pop
add
add
lods
xchg
clc
addr16
dec
mov
mov
jb
cld
xchg
and
sub
sbb
xchg
lds
rclb
psubsb
or
clts
cmp
jae
and
xor
lock
inc
dec
and
pusha
mov
jno
dec
mov
sub
push
push
icebp
and
xor
rcl
inc
add
xchg
test
pop
mov
leave
icebp
pop
mov
or
sbb
out
xor
sub
jnp
and
inc
cmp
pop
rcrl
add
and
ljmp
aam
mov
mov
gs
js
pusha
jmp
sahf
leave
or
and
popa
nop
xchg
add
jle
jg
dec
bound
lret
add
fdivs
iret
hlt
cli
js
jo
xorl
nop
xor
imul
push
test
and
mov
daa
and
push
hlt
pop
xlat
jo
lsl
loope
inc
add
add
add
call
add
mov
pop
sbb
pop
xor
adc
xor
daa
push
inc
and
sub
ljmp
xchg
add
mov
xor
add
cli
cmpsb
out
or
xchg
xchg
or
xchg
daa
xorb
daa
lret
inc
sbb
popf
out
test
bound
ja
push
and
test
repnz
and
insl
or
int3
or
sub
jmp
adc
mov
inc
idivl
nop
scas
lret
or
xor
jns
mov
addb
inc
and
mov
or
es
sarl
mov
fcoms
xchg
push
or
xchg
repnz
mov
sub
inc
add
mov
inc
pop
cmp
lods
and
jno
or
pop
and
xchg
shlb
xor
cmp
mov
lea
jb
fwait
jle
and
adc
push
inc
jns
cli
cmp
mov
mov
rolb
stos
xchg
ja
js
mov
jle
dec
pop
xchg
mov
cmp
pop
xchg
push
mov
jl
loop
data16
push
cmc
dec
xor
or
lret
cmp
sbb
or
push
sbb
adc
popf
je
xchg
sbb
mov
pop
sbb
mov
scas
jmp
loop
imul
es
icebp
xor
sub
jnp
xchg
gs
jns
push
sub
push
dec
jae
cmp
push
and
jns
cmp
pushf
iret
mov
arpl
sti
xchg
dec
dec
xor
dec
dec
sbb
loope
cmp
xlat
or
pop
imul
ljmp
and
push
inc
push
ljmp
rcll
daa
add
push
dec
popa
filds
add
pop
test
fstpl
mov
add
xor
mov
mov
mov
cmp
js
sbb
in
sub
imul
inc
add
outsl
or
add
sbbl
push
adc
inc
gs
fisttps
xchg
jb
sarb
loope
popa
rolb
cmp
loopne
mov
aam
lcall
sub
push
aam
xor
inc
stos
sbb
jl
mov
mov
jmp
push
stos
int
rorl
repnz
cmp
or
mov
adc
cmp
es
iret
ret
mov
lods
es
jg
adc
jle
arpl
das
mov
add
sub
mov
iret
std
bnd
pop
sub
jne
daa
pop
loop
mov
and
mov
pusha
loop
and
xorb
in
xor
fisttpll
jno
sbb
sbb
cltd
jle
jg
andb
jle
add
cld
sti
inc
xrelease
mov
hlt
mov
push
sbb
mov
lock
ja
jno
pop
insb
iret
fsubr
sub
xchg
or
sub
xchg
xchg
scas
jmp
push
jnp
xchg
jne
mov
std
pushf
and
pop
mov
mov
pop
mov
add
push
push
add
cmp
mov
adc
movsb
cltd
add
push
sti
sbb
adc
jns
add
sbb
push
add
setp
rclb
push
xchg
dec
pushf
pop
add
es
loope
xor
and
out
aad
xor
inc
mov
push
arpl
dec
in
cmp
mov
xor
cmpb
mov
adc
cmp
jnp
push
pop
cwtl
adc
xchg
sbb
bnd
shr
lods
and
sbb
or
jl
addr16
mov
cmp
dec
push
sub
test
and
cli
sbb
dec
outsb
add
cs
lock
mov
adc
in
fwait
es
pusha
add
lahf
imull
lret
js
pop
cmp
cmp
loope
out
add
insb
rorl
mov
xchg
jne
imul
lock
enter
mov
rcr
adcb
cwtl
outsb
movsl
dec
ja
and
scas
sub
popf
orl
mov
or
and
lahf
mov
repz
cmpsl
data16
mov
push
and
pushf
movsl
jo
mov
xlat
icebp
jecxz
pop
shlb
cmp
leave
subl
xor
aaa
sti
xchg
pop
lock
mov
adc
shll
int
push
cmp
rorl
lcall
packsswb
push
pop
faddl
lea
sub
sub
dec
inc
jns
out
leave
and
movsl
pop
scas
and
push
fldz
cmp
fs
sbb
or
add
je
aam
jnp
sub
dec
add
addl
sub
es
push
outsl
andb
mov
jle
sti
add
xlat
and
cmc
add
in
cli
cmp
add
pop
mov
andb
mov
sbb
xchg
ret
mov
xor
cmp
push
and
or
push
add
das
stos
push
aaa
repz
mov
outsb
lods
sti
mov
ret
xlat
lods
and
imul
xor
pop
ficomps
or
mov
loopne
cmpb
mov
push
mov
dec
mov
lods
dec
mov
arpl
lock
cmpsb
loopne
push
inc
inc
cltd
filds
movsl
shl
add
pushf
pop
addr16
lock
adc
sbb
sub
or
scas
loope
bound
or
mov
fdivl
stc
jo
xor
or
jl
dec
icebp
or
push
and
pop
lret
mov
add
adc
push
xchg
pushf
dec
fbld
shl
sti
or
sub
scas
enter
jbe
ret
aaa
cld
sub
sahf
jnp
add
insl
cmpsb
xor
xor
jne
pop
sbb
mov
jp
into
or
inc
fs
push
jg
mov
mov
ret
sahf
lods
lock
ret
xchg
inc
insb
push
add
imul
xchg
mov
shlb
push
enter
ficomps
out
pop
push
mov
fistpll
hlt
ret
pop
das
mov
into
outsb
daa
in
ret
or
jnp
jmp
adc
test
add
movsl
loopne
sub
jmp
lds
gs
adc
je
stos
adc
xor
ljmp
mov
xorb
push
mov
sub
and
es
scas
sub
pop
in
sbb
inc
add
loope
xor
and
rcrl
in
pop
scas
outsw
into
inc
xchg
stos
nop
or
data16
mov
enter
lahf
ljmp
jns
cmpl
push
cmpsb
jno
sbb
fwait
lds
fwait
lods
sarb
cmp
push
lock
inc
dec
pop
loop
push
fwait
adcb
and
mov
int
dec
add
mov
nop
adc
jl
ret
add
mov
jecxz
fwait
mov
rolb
sub
lret
fs
mov
adc
xchg
or
mov
sub
iret
pop
jp
jne
adc
jmp
jmp
jbe
out
clc
call
push
mov
sub
addr16
dec
enter
mov
xchg
mov
lods
mov
scas
xor
sbb
mov
fwait
or
add
jge
cld
pop
lcall
scas
jg
cmp
sbb
xchg
pushf
mov
icebp
pop
mov
jecxz
xor
frstor
imul
xor
mov
test
xchg
fst
ret
or
dec
cltd
sub
addb
jbe
cld
fsubrs
push
cmp
mov
jle
pop
or
dec
mov
fs
mov
ljmp
cmp
aaa
sahf
movsb
es
sbb
inc
das
aad
sahf
inc
data16
pop
movsl
and
xchg
outsb
or
enter
stos
add
mov
cmpsl
jne
pop
pop
jle
ja
jecxz
arpl
test
xor
fnsave
xor
adc
sub
inc
bound
ret
scas
data16
aam
ret
popa
aam
fidivl
pop
sub
add
jle
leave
sub
std
adc
iret
sub
loop
nop
shlb
add
mov
icebp
and
and
xchg
xor
les
fisubrs
sahf
aaa
add
fildl
lock
stc
mov
jne
sub
int
or
add
frstor
cmp
int
adc
daa
cmpsb
lret
mov
jg
adc
pop
xlat
xchg
mov
push
mov
daa
sub
cmpsl
sub
out
aas
jmp
loop
je
sub
xchg
push
call
movb
push
or
xchg
cwtl
cli
adc
inc
add
adc
fistps
pop
sub
xor
mov
aas
mov
sbb
adc
ret
dec
sub
cmp
xchg
les
or
sub
pop
js
lods
es
pop
xlat
xchg
cmpl
daa
test
adc
push
sti
sub
mov
xchg
daa
add
sub
push
leave
dec
fisubl
insl
mov
push
cmp
sbb
pop
adc
or
dec
ja
or
or
sbb
xchg
push
push
sub
ds
js
mov
or
xor
mov
add
cmp
or
outsl
loop
lret
lret
push
mov
loope
lret
dec
out
adc
push
push
std
sbb
or
fcmovb
and
push
sbb
xlat
orl
xlat
xchg
cmp
fwait
int
jo
mov
imul
push
push
push
push
imul
pusha
pop
mov
stos
push
jcxz
cmpsb
pusha
dec
jecxz
dec
cmp
dec
mov
and
movsl
and
popf
jecxz
jge
adc
loop
lret
push
push
icebp
or
and
inc
outsl
fnsave
mov
mov
mov
inc
jmp
mov
xchg
mov
dec
pop
and
xchg
xchg
pop
ljmp
pop
dec
pop
push
xchg
pop
sahf
out
mov
out
sub
sbb
inc
adc
std
scas
sahf
cmp
pop
mov
popf
mov
jge
loope
push
iret
mov
nop
dec
imul
push
ss
stos
sarl
push
in
div
or
ret
sbb
mov
test
fst
add
jae
lea
add
stos
xchg
in
loopne
daa
mov
cmc
inc
and
jl
je
and
xchg
inc
mov
add
sub
pop
std
out
loopne
adc
dec
rclb
rclb
movsl
pop
pop
sbb
xor
test
lahf
sbb
pop
out
fmul
add
adc
imul
sbb
sbb
sub
loop
dec
and
pop
stc
xor
push
xor
icebp
xor
stos
jge
sub
mov
or
out
sahf
dec
das
testb
sub
lods
stos
sbbb
bound
or
sbb
mov
xchg
jb
js
push
test
ja
push
push
sbb
cmp
dec
and
cmpl
sti
iret
repnz
aaa
cmc
pop
lods
daa
mov
mov
mov
negl
jne
sub
shlb
mov
xor
and
add
sarl
pop
repz
add
popa
or
and
cmpsb
push
rep
mov
lock
rcr
ds
popl
lahf
data16
stos
add
aam
lahf
ja
xchg
xor
adc
or
cmp
clc
xchg
faddl
lea
insb
jb
cmp
jno
mov
loop
jnp
es
in
divl
movl
es
hlt
sahf
jb
push
jo
outsl
sub
or
sub
icebp
in
movups
inc
jmp
repz
arpl
sub
adc
ja
xchg
push
jo
sub
inc
cmpb
daa
imul
jnp
and
into
cmp
sarl
lods
dec
pop
mov
xor
push
adc
mov
lahf
icebp
inc
orb
mov
mov
jbe
push
xor
cmp
mov
jecxz
hlt
sub
flds
insb
movb
mov
inc
call
xchg
sub
xor
lods
mov
imul
xchg
sbb
and
and
inc
and
ds
loopne
loope
adcl
fwait
add
adc
ficoml
cs
cmp
sbb
add
icebp
rcrl
scas
ja
and
pop
mov
shll
ds
cmp
add
jne
ret
pusha
or
rcrb
fistps
jle
je
pop
pusha
sbb
ffree
mov
push
jo
inc
sub
sti
aam
pop
test
and
jne
sub
int3
adc
sbb
sbb
push
sbb
push
sbb
test
mov
jbe
mov
rcrb
test
mov
or
mov
roll
inc
lock
xor
jecxz
xchg
sbb
inc
mov
popl
lock
and
jge
pop
push
ljmp
iret
mov
aad
loop
sub
adc
inc
xchg
lret
hlt
pop
xlat
xchg
and
mov
xor
pop
cmp
and
cmp
mov
xor
or
xchg
mov
daa
iret
mov
add
jb
mov
lods
inc
or
lea
sub
gs
mov
sub
xor
cmp
adc
push
lahf
mov
loopne
add
aas
xchg
roll
sahf
jecxz
mov
dec
mov
add
add
lds
inc
mov
xor
adc
nop
add
jg
mov
outsl
mov
in
test
add
inc
sbb
ja
mov
lds
test
mov
test
or
mov
push
inc
sub
adc
jp
inc
add
xor
and
das
shl
adc
xchg
decb
or
adc
mov
rorb
push
inc
xchg
xchg
movsb
push
xchg
hlt
mov
xor
sbb
mov
test
pushl
push
dec
je
loopne
loope
rcrl
mov
inc
xorb
sbb
or
movsb
and
idivl
pop
sbb
test
xchg
out
xchg
loope
lock
mov
add
paddsb
push
cmp
dec
imul
out
push
xorl
sbb
jmp
data16
out
or
add
scas
pop
cmp
and
sub
sub
mov
les
cmp
jp
xor
stos
sbb
loopne
shlb
stos
push
lock
sub
push
nop
or
fsubrl
xchg
sbb
repz
ret
ret
ss
aaa
lods
fldt
ja
and
lock
in
mov
nop
mov
cmp
cld
int
arpl
add
cmp
and
out
sub
aaa
clc
mov
add
adc
xlat
int3
dec
jmp
andl
ja
mov
sub
dec
sbb
mov
addl
sub
jne
pop
mov
sbb
sahf
xchg
pop
and
xor
mov
cmp
cmp
mov
mov
xchg
mov
mov
psraw
adc
mov
addb
aas
movsb
push
inc
hlt
jo
mov
sub
push
push
pop
xchg
das
cwtl
xchg
jo
xorl
gs
pop
jp
sub
lcall
push
popf
xchg
sarl
les
icebp
xor
loope
inc
pop
cmp
dec
dec
cs
xorl
outsb
xor
add
add
add
ret
inc
xlat
mov
js
mov
push
add
jl
mov
dec
out
shll
and
or
mov
jo
pop
push
or
and
adc
pushf
or
pop
ljmp
mov
and
and
scas
push
sub
inc
lahf
add
xchg
jmp
jbe
dec
adc
inc
outsl
add
jp
dec
call
fcomps
fmul
sub
int3
imul
lds
std
bound
xor
add
sub
cmp
adc
test
cli
push
pushf
test
es
dec
xchg
lods
das
and
das
push
sub
cmpsb
xor
xor
sub
fmul
add
stos
dec
pop
mov
shrb
mov
push
mov
adc
xchg
js
mov
mov
jae
ljmp
aaa
movsb
sub
clc
loopne
iret
and
mov
push
dec
frstor
iret
jecxz
test
shld
ss
and
sub
ret
shlb
andb
jne
add
pusha
fsubr
sahf
inc
mov
adc
mov
aam
sub
sub
lock
lahf
cmp
insl
repnz
inc
cmp
ret
bnd
sbb
lret
ret
cmp
and
ret
iret
lods
shl
ror
lock
js
adc
mov
shlb
movsl
add
mov
in
pop
loop
add
jmp
daa
lods
jp
add
dec
xchg
mov
pusha
dec
ss
sbb
insb
push
addr16
or
cmp
adc
aad
push
stos
bsf
cmp
inc
ja
add
push
push
int
jo
xchg
inc
sbb
pop
rolb
aad
xchg
je
popa
cmp
xchg
pop
inc
ja
jp
js
js
adc
movb
cmp
insl
fistpl
pop
and
int3
cmp
fiadds
cmp
fcomi
std
xor
test
mov
lret
jge
loop
and
inc
ret
pusha
cmc
jae
pop
scas
push
or
push
fldcw
std
sbb
cmp
faddl
adc
mov
test
mov
xor
inc
push
adc
jo
fiaddl
xor
push
outsl
mov
adc
outsl
bound
jg
ror
sub
rcl
lcall
enter
inc
addr16
pop
push
pop
push
mov
cmp
xor
xor
arpl
jecxz
sbb
jp
rcr
add
and
movsb
mov
test
fcoms
pushf
ljmp
adc
and
mov
jg
push
pop
aaa
stos
je
hlt
or
hlt
roll
popf
ds
sbb
push
imul
sbb
pop
data16
xchg
sbbl
add
lcall
lahf
ljmp
es
inc
jmp
pusha
jo
cmc
pop
mov
push
push
jmp
movlps
inc
movsb
pop
add
imul
ja
jp
ret
pop
cmp
xchg
sbb
jnp
sub
mov
mov
mov
push
test
cmp
andb
mov
xchg
xor
imul
and
roll
cwtl
cli
jno
pop
es
shlb
pop
inc
es
sub
sub
push
in
mov
out
into
or
out
xor
sbb
and
inc
sub
es
mov
jmp
jo
pop
fidivs
lods
pusha
lea
rclb
sub
int3
int3
icebp
sub
xor
call
inc
out
jp
cmp
aas
popf
inc
pop
jmp
outsb
hlt
enter
leave
in
mov
in
xchg
dec
ss
cmp
xlat
jp
or
and
mov
int
xor
xor
in
cmp
xchg
lret
testb
div
fildl
sub
and
addr16
cmpsb
xor
fisttpl
ja
testl
loopne
es
mov
mov
movsb
mov
add
imul
push
push
add
clc
push
inc
fnsave
add
jno
les
pop
call
fcomps
add
inc
cmp
dec
add
test
add
push
iret
popa
das
push
out
out
in
add
xor
push
mov
das
jo
setae
push
stos
inc
dec
dec
jl
fcom
adc
jo
test
movsb
inc
cmp
push
int3
bound
mov
fcomps
ror
cmp
mov
xor
mov
and
in
sbb
cld
mov
or
sbb
insl
aaa
jo
push
ss
sbb
scas
ds
mov
nop
jp
je
push
adc
xchg
xchg
jecxz
adc
adc
mov
das
leave
jp
push
loopne
xor
bound
aam
sbb
in
cvttps2pi
push
xchg
sti
es
out
mov
pop
out
adcb
icebp
lret
les
mov
and
jb
xorb
es
and
imull
add
sarl
outsb
jp
shlb
mov
idivb
adc
lods
in
ret
aad
outsl
popa
mov
out
add
add
add
aaa
add
mull
mov
insb
loopne
in
xchg
mov
cli
sbb
test
or
mov
inc
fsubrs
jp
push
movsb
xor
xor
adc
mov
aaa
or
outsl
ljmp
test
je
pop
in
pusha
js
push
lods
jbe
xor
rcrl
and
sbb
adc
scas
xchg
sbbl
sbb
add
prefetcht0
jbe
in
xlat
dec
int
fsubl
dec
xchg
lret
bound
sarl
sub
aad
and
fisubs
push
scas
jge
rorb
icebp
fcomp
adcb
push
cltd
push
movsb
shll
or
out
stc
decb
out
adc
pop
mov
ja
out
jo
movsl
lods
pop
sub
add
xor
push
mov
push
xchg
jo
fldcw
dec
popa
aaa
shl
test
sub
into
mov
jbe
sub
mov
scas
xor
fisubs
ss
les
xorb
mov
loopne
jle
jnp
enter
inc
push
sub
xorb
fcomps
enter
sub
adc
psubusb
jecxz
adc
iret
lcall
aaa
and
add
pop
mov
sub
mov
sbb
jbe
fisubrl
ret
pop
pop
shl
scas
xor
bound
xlat
push
dec
xchg
bound
subb
adc
pop
insb
mov
daa
mov
adc
and
inc
add
adc
cmpsb
fxch
rcr
xor
aam
mov
rcpps
ss
xor
dec
sbb
dec
dec
lret
sub
cmp
mov
mov
imul
clc
sub
nop
jbe
call
sbb
cmc
and
nop
insl
jge
push
js
sahf
enter
hlt
push
pop
sahf
iret
push
xchg
jecxz
jns
adc
xlat
ljmp
mov
rcrb
sub
cmp
jne
cmp
ffree
xchg
push
pushf
mov
popa
add
jns
mov
fnsave
lods
arpl
out
aad
xor
mov
mov
cmp
and
and
dec
ljmp
mov
xlat
xor
xorb
cmp
enter
cld
pop
leave
cmc
movsl
repz
ljmp
inc
lock
addr16
push
jo
push
dec
mov
sti
mulb
inc
fcmovnbe
addl
ret
sahf
push
or
sbb
sub
mov
jnp
mov
add
add
jg
xchg
sbb
xchg
jb
push
add
hlt
cmp
test
fs
xor
cmpsl
or
and
scas
mov
push
lcall
sbb
dec
aaa
dec
sbb
loopne
inc
sbb
fs
xchg
lock
stos
sbb
sbb
adc
ljmp
out
cmc
es
pop
stos
jmp
jecxz
cmp
ljmp
xchg
xchg
sub
xlat
jb
dec
dec
insl
rcrb
jne
cmp
push
andb
repnz
jmp
jecxz
cmp
adc
mov
mov
jb
insl
sbb
or
sub
pop
fists
jmp
iret
jl
movsb
icebp
iret
lods
stc
pop
arpl
loopne
xchg
jnp
adc
xorl
insl
add
mov
adc
push
push
arpl
jo
pop
and
pusha
add
sbb
push
insb
repnz
jl
movsb
lock
push
cmp
rol
and
push
add
or
sub
lret
sub
sub
int3
int
pop
mov
es
inc
sub
aam
fidivrl
and
push
inc
gs
shlb
mov
and
mov
sahf
mov
inc
dec
popf
rcrl
inc
pop
dec
jne
jo
aaa
test
mov
out
and
add
sub
scas
push
xor
pop
adc
jp
jnp
adc
lcall
popf
xor
adc
add
dec
jb
xchg
add
in
xor
pushf
jo
data16
mov
dec
cmp
fdivrl
push
xchg
sbb
jg
or
adc
out
in
and
and
jg
or
in
cmp
shl
add
pop
mov
add
fsts
imul
ret
cmpsb
mov
mov
sahf
pop
add
ljmp
sti
ret
pop
mov
mov
xchg
mov
cltd
add
add
or
push
pop
push
mov
daa
pop
xor
mov
mov
sbb
push
gs
cmovle
fcomp
ss
jle
pusha
addl
xor
lahf
inc
sub
mov
mov
cli
xchg
repz
addr16
mov
aad
in
into
xor
insl
or
out
sub
cmp
daa
push
fsubrs
iret
out
mov
mov
add
orb
pop
push
icebp
jge
mov
mov
add
pop
xchg
jg
add
mov
out
arpl
sbb
fiaddl
xchg
fwait
xchg
push
scas
xor
jb
popa
cmp
mov
subb
xchg
and
fcoml
mov
ficompl
xor
sbb
sbb
stos
add
or
pop
sub
inc
push
fistl
mov
test
or
push
mov
pop
movsl
out
rorl
fcmovu
es
pop
mov
push
xchg
jle
pop
push
mov
cmc
pop
sub
pop
out
fistpl
icebp
add
pushf
int
mov
inc
out
scas
sub
clc
test
xchg
fs
sub
and
adc
push
pop
aaa
and
pusha
cmp
adcl
xchg
mov
and
sbbl
stc
daa
das
sub
daa
pop
or
add
sub
fadd
xor
inc
add
inc
mov
movsl
rorl
mov
insl
aaa
test
jo
insl
stos
adc
xchg
and
aam
adc
push
mov
push
push
nop
and
lret
ja
add
jg
cltd
and
add
popa
jbe
int3
inc
daa
adc
sub
imul
lock
sub
daa
mov
loopne
stos
std
cli
xchg
sbb
scas
sub
cmc
pop
mov
add
push
cwtl
push
cmp
fsubs
jae
sbb
daa
cmp
out
sub
popf
add
inc
push
ss
and
xchg
or
sub
enter
fwait
bound
mov
xchg
lret
and
fsubl
mov
sbb
dec
xchg
popl
or
inc
add
js
daa
mov
aam
mov
jmp
mov
adc
subl
lahf
shll
sbbl
ret
aaa
lret
je
pop
das
in
adc
dec
jp
lds
fwait
test
inc
cmp
adc
pop
dec
sti
jge
and
adc
mov
arpl
mov
insl
sub
jg
loope
push
mulb
or
cmp
pop
inc
loopne
iret
xor
sbb
aaa
mov
and
xchg
xor
jo
gs
adc
xor
shlb
jno
aas
lods
lea
mov
lods
and
dec
leave
mov
or
cmpl
in
bound
lcall
pushf
cmpb
out
mov
ds
fldcw
pop
js
sub
out
mov
test
jle
movsb
sub
lods
pop
fistps
push
mov
sbb
jne
hlt
adc
add
adc
jmp
inc
dec
mov
ret
inc
pop
test
mov
daa
lods
and
insl
pop
mov
cmpsl
fsubr
jnp
and
xor
in
mov
or
jecxz
pop
mov
sahf
xchg
andl
and
sbb
mov
sbb
pop
and
fadds
push
push
pop
adc
dec
mov
int3
je
inc
cs
sub
outsb
inc
pop
and
mov
ja
mov
push
mov
sbb
adc
and
pop
or
xchg
push
clc
cmpsb
lock
jle
mov
movsl
movsb
add
mov
mov
or
pop
mov
xchg
shlb
arpl
push
and
mov
arpl
cmp
dec
shrb
bswap
or
out
cmpsb
scas
mov
xor
jp
mov
sahf
or
stos
aam
push
mov
movsl
sbb
int3
movsb
data16
mov
addr16
or
add
rcl
and
or
xchg
mov
jmp
fnstenv
mov
push
loopne
clc
outsb
aam
daa
cmp
lahf
pop
mov
mov
add
sub
jecxz
inc
outsb
bound
inc
iret
movsl
pop
add
cmpsl
pmulhrw
pop
stos
sub
faddl
pushf
es
adc
and
xchg
aad
test
push
pop
pusha
adc
inc
jbe
daa
or
pop
adc
adc
mov
push
rcrb
test
test
scas
mov
adc
xor
movsl
popl
push
push
aaa
je,pn
push
fldl
cmp
and
inc
xlat
stc
pop
lods
popa
lcall
nop
int
dec
pop
je
mov
mov
enter
jge
sarb
or
mov
out
mov
enter
ffree
lods
in
sti
push
sbb
sbb
sbb
leave
mov
int
add
dec
mov
cmp
inc
xchg
scas
lock
xor
xor
pop
mov
sbb
xor
jmp
add
add
or
push
xlat
and
mov
xchg
ficomps
clc
insb
mov
hlt
dec
vmulps
cli
mov
mov
jo
inc
stos
sbb
sub
movsb
sti
xor
roll
sub
mov
cmp
lea
scas
xchg
daa
loopne
sub
add
pop
lahf
xchg
sbb
icebp
test
or
shr
lcall
jg
and
sub
daa
mov
or
cmp
cmp
sub
es
cltd
push
jno
mov
or
adc
lods
gs
xchg
testl
rolb
pop
aas
cmpsl
icebp
or
push
sub
outsb
pop
and
loopne
pop
test
ret
sub
cmp
test
mov
add
arpl
das
jl
je
mov
out
push
jae
or
je
jge
lret
mov
pusha
loopne
mov
ret
and
mov
inc
pop
add
mov
test
jbe
in
adc
mov
xlat
stos
popa
dec
das
pop
or
mov
fcmovne
dec
iret
mov
loop
jmp
movsl
jnp
or
loopne
sti
mov
js
insl
xor
push
or
push
push
data16
lods
mov
mov
ficompl
fucomp
inc
faddl
dec
cmp
and
in
push
cmp
lods
out
pop
push
aaa
jae
sbb
push
sub
sbb
cmp
pop
mov
movl
sbb
adc
and
and
aaa
loope
push
cmp
push
pop
xchg
xchg
push
add
arpl
and
test
in
es
js
loope
xchg
cmpb
out
or
mov
jbe
and
inc
in
mov
cmc
or
iret
sbbl
daa
push
dec
xchg
adc
mov
insl
pop
bound
mov
sub
sbb
jmp
pushl
mov
repz
ret
lcall
cmp
in
and
add
xor
es
cwtl
add
fidivrl
stos
pop
cmp
lock
sub
jo
stos
mov
sub
mov
dec
insl
xor
sarb
orl
add
fcom
dec
or
addb
jecxz
mov
test
and
pop
pop
xchg
jg
pop
aaa
fwait
push
les
or
icebp
and
push
call
pop
adc
sbbl
cmp
inc
popa
hlt
cwtl
or
xor
xchg
les
mov
adc
adc
lods
inc
ret
aaa
pop
popa
jmp
std
outsb
icebp
shlb
enter
arpl
js
daa
add
cmp
xchg
ret
test
sysret
lahf
repz
jno
mov
sub
xor
test
jae
mov
call
scas
aas
add
rorb
cmpsb
push
cmp
sbb
xlat
mov
sbb
mov
pop
enter
stos
ss
mov
mov
sti
repnz
add
subb
cmpsl
hlt
pushf
add
jl
lcall
pop
cltd
cmp
cld
lods
cltd
inc
je
pop
out
xor
adc
mov
and
movsl
ret
or
sub
add
dec
popa
jmp
and
or
mov
mov
int3
xorb
jge
bound
scas
cmpsb
sbb
lock
repnz
movsl
movsb
outsl
dec
or
push
int3
xchg
ret
fisttpl
sbb
mov
push
roll
in
dec
divl
jp
scas
sub
and
sub
add
xchg
jne
mov
xor
push
or
jo
daa
rclb
int3
mov
test
pusha
add
xchg
mov
or
mov
push
inc
cmp
mov
and
cmpb
adc
rorb
mov
xchg
icebp
dec
mov
dec
sbb
ds
jb
leave
loopne
ja
mov
movnti
mov
cmp
iret
pop
sbb
mov
push
aaa
mov
aam
or
xor
adc
cmpsl
dec
shll
and
in
cmpsl
stos
pushl
jmp
pusha
cmpsb
sti
nop
pop
enter
movsl
imul
xlat
je
push
adc
sub
je
mov
add
jno
rcrl
cmp
loop
ss
xor
sbb
adc
dec
sbb
je
adc
add
push
inc
add
mov
jne
pop
xorl
arpl
repz
or
dec
and
clc
and
mov
xchg
push
add
mov
scas
loopne
das
sub
xchg
jmp
push
cltd
arpl
and
and
sub
clc
cmc
popa
call
and
das
adc
repnz
add
jmp
add
adc
dec
mov
mov
push
mov
dec
xchg
cmc
dec
stc
xchg
xor
dec
pushf
lcall
add
clc
push
jns
jo,pn
shlb
stos
or
imul
fstps
mov
lds
cmp
xchg
aam
pop
mov
dec
xchg
xchg
test
cmp
es
push
xchg
es
cmp
cmpsl
xor
adc
lds
push
mov
jb
icebp
xchg
pop
aad
jecxz
push
mov
in
dec
fcomp
cmp
mov
addb
in
movb
hlt
jo
hlt
xlat
in
mov
movsl
add
push
cmp
ds
fnsave
inc
fadd
out
adc
nop
call
icebp
inc
mov
mov
jmp
xchg
add
pop
sbb
mov
jle
pusha
jg
sbb
gs
add
lods
ss
sti
pop
rol
push
ja
mov
dec
fsub
sbb
dec
test
xchg
imul
xor
call
push
push
jae
insb
add
movsb
add
movsl
out
push
cmp
cwtl
test
dec
ret
xchg
and
mov
ret
movsl
mov
dec
adc
sub
arpl
nopl
xchg
jmp
inc
sbb
mov
sbb
jl
or
scas
jecxz
sbb
or
fwait
jo
mov
inc
dec
mov
push
inc
ret
push
xchg
les
jmp
aas
pusha
mov
lods
std
xor
movsl
imul
push
lret
stos
inc
jp
and
cltd
fistpl
mov
loopne
push
repz
sbbl
lret
inc
sub
sub
add
push
pop
lcall
lahf
hlt
lea
xor
dec
daa
push
mov
scas
cmpsl
jbe
cmp
pop
mov
ja
outsl
movsb
add
sahf
shrb
ret
movsb
std
lcall
push
rcll
bound
jp
test
iret
sbb
push
jne
xor
test
jge
jne
sub
enter
inc
cmp
push
das
mov
add
mov
mov
das
jecxz
sbb
aam
sub
in
mov
popf
int3
iret
addr16
stc
mov
sbb
aam
xor
inc
and
add
lods
push
sbb
iret
jne
shr
xor
mov
loope
call
sub
adc
leave
mov
or
in
fcomi
out
std
fiadds
or
add
mov
std
xchg
xchg
insb
mov
pop
test
cmpsl
add
jl
add
xchg
push
mov
js
in
mov
add
xor
cmp
jne
imul
xor
test
ja
cmpb
xor
push
add
lods
add
add
test
incb
inc
mov
or
mov
inc
jecxz
enter
or
xchg
fsubl
out
ljmp
into
add
xchg
sub
xor
jle
imul
les
fs
test
ret
lock
out
cmpsl
add
add
jae
lock
add
pop
sbb
out
inc
mov
shlb
int3
sub
rclb
pop
outsl
add
gs
xor
push
mov
add
ja
rolb
xlat
fsubrs
or
add
test
push
dec
das
dec
sub
mov
jbe
xchg
sbb
cmp
or
popa
xchg
push
inc
mov
add
ret
xor
jl
and
or
jp
call
jp
jbe
shrb
enter
mov
iret
adc
or
push
rcll
gs
and
mov
pop
push
lods
cmp
aaa
mov
xchg
add
jno
sub
inc
push
out
iret
hlt
sub
cmp
lock
addb
cmp
dec
lret
adc
lock
add
roll
adc
cmp
mov
add
enter
mov
push
or
jle
ja
dec
lods
mov
vphadduwq
inc
call
cmp
or
dec
bound
stos
push
fcmovbe
push
sahf
push
add
mov
sti
insb
sbb
lods
dec
insb
mov
dec
nop
add
dec
push
cmp
into
push
sub
mov
aas
das
mov
add
push
pop
addr16
sub
ja
repnz
movsl
fwait
addr16
sarl
insb
add
push
push
mov
mov
scas
xor
aaa
sub
jg
xor
jmp
fnstcw
outsl
adc
sub
mov
mov
daa
ret
xchg
ret
ret
sbbb
in
mov
sub
mov
add
insl
mov
mov
add
push
rcll
hlt
dec
fimull
dec
add
and
mov
ds
imul
rcrb
xor
cs
pop
add
call
mov
cli
mov
and
int
test
and
adc
clc
fsubl
data16
lcall
dec
test
sbb
movsl
rcll
scas
addl
mov
mov
imul
sub
pop
repz
add
lds
jae
mov
xor
sub
push
cmp
shlb
push
inc
mov
pop
push
jmp
push
subl
pop
or
lahf
shlb
sub
test
pushf
xorl
or
lock
jle
mov
xor
xor
imul
stos
mulb
inc
insl
add
imul
dec
aaa
mov
ret
xor
dec
daa
jnp
or
jno
cmp
cmp
pop
xor
xchg
or
push
xlat
lods
sbb
mov
js
int3
iret
sub
dec
int
mov
xor
es
or
pop
jo
jo
pop
loope
pop
add
mov
mov
scas
and
xchg
push
orl
aaa
fistpll
add
fisubrs
or
cmp
sbb
pushf
inc
add
pop
icebp
pusha
mov
call
leave
sbbb
stc
aas
xchg
mov
test
cwtl
sbb
mov
addl
mov
add
cmc
and
jecxz
mov
mov
push
aaa
add
cmpsl
ret
mov
pop
lret
add
jp
mov
sbb
add
arpl
sbb
es
outsl
pop
frstor
xchg
xchg
ja
lea
outsl
rcr
rcl
out
js
sbb
dec
lret
filds
xchg
dec
gs
sarl
lods
dec
add
adc
outsl
xchg
insb
adc
cs
cmc
cld
xchg
push
and
repnz
rcrl
mov
and
mov
mov
into
fadds
aad
push
cmp
fimull
inc
popw
inc
cld
push
call
or
shl
sbb
mov
push
sub
mov
push
daa
fisubrs
mov
lock
les
jg
filds
sub
sbb
pop
pushf
sbb
or
cld
lods
loope
sahf
lock
jo
aas
lods
movsb
push
icebp
push
data16
sub
push
jg
cmp
mov
pop
jp
mov
mov
lcall
xrelease
jge
mov
iret
mov
lret
xchg
aad
cmp
push
aaa
cmpsl
test
arpl
inc
jae
daa
call
cmc
jne
arpl
ret
lret
jge
pusha
jo
xor
cmp
jae
inc
mov
notb
push
pop
cltd
dec
or
mov
cmp
ds
pop
ret
or
xlat
addb
and
repnz
pop
push
xor
push
mov
lea
adc
movsb
jno
xchg
or
outsl
pop
xlat
lcall
sub
pop
push
addl
loopne
addb
pusha
mov
sbb
dec
sbb
loopne
leave
cltd
pop
jnp
xor
pushf
cld
fs
xor
fbstp
shrb
sub
fidivs
xor
out
aad
xor
fisubl
loopne
dec
int3
adc
and
fisttpll
jl
adc
call
dec
and
mov
data16
xchg
pop
add
sbb
and
daa
sub
into
and
sbb
call
push
dec
mov
adc
cmp
xchg
sbb
pop
jbe
add
into
clc
push
fmul
scas
outsb
mov
into
mov
ret
mov
mov
push
inc
lods
fcoms
push
negl
sub
imul
adc
xchg
mov
xchg
stos
adc
popf
add
aam
in
idivl
les
arpl
dec
clc
mov
add
xor
and
test
add
adc
sbb
push
out
jp
and
flds
pop
cli
mov
andb
ret
adc
int3
add
inc
sbb
loope
push
ret
push
out
sub
pop
push
xor
es
mov
mov
into
lea
or
pop
sti
notl
mov
lea
fsubl
stc
shlb
out
and
push
and
outsl
push
inc
lock
xor
add
add
push
or
and
fiaddl
gs
jge
nop
or
and
jns
add
sub
aam
mov
ror
push
pop
mov
lret
addr16
add
push
stos
sahf
add
pop
mov
push
xor
xchg
add
fs
sbb
je
nop
inc
mov
loopne
mov
sbb
cmp
cmp
mov
jp
dec
movsl
push
or
push
add
cmpb
xor
xor
loopne
imul
cmpsb
dec
jle
int
cmp
ret
and
xchg
lea
rclb
aaa
mov
popa
sbb
or
ret
aad
xchg
cmpsb
pop
setno
mov
cli
popf
stos
jno
inc
sub
mov
sub
and
lds
cmp
bound
cmp
outsl
out
cmp
mov
sub
ret
cmp
inc
ljmp
lds
and
cmpsb
push
stos
or
sbb
inc
jge
sub
adc
push
scas
add
mov
mov
mov
and
sub
add
mov
je
and
mov
jp,pt
pushf
jb
sahf
test
test
imul
push
ja
les
iret
mov
loope
and
int
sbb
pusha
popa
sbb
scas
daa
pop
mov
mov
push
sbb
xor
adcl
rolb
bound
iret
iret
and
shr
add
in
adc
pusha
mov
cmp
test
mov
outsl
call
pop
addr16
aas
rcll
jno
sub
lea
inc
js
mov
pop
outsl
adc
pop
push
sti
push
les
test
test
jne
shrl
out
or
mov
mov
add
shll
mov
loope
pop
push
movsl
shl
dec
push
rcrl
lea
call
adc
add
lock
pop
cmp
cltd
imul
add
add
inc
adc
pop
xchg
aas
adc
xchg
add
dec
mov
or
je
cvtps2pd
daa
xor
in
xchg
adc
and
les
xor
sub
fcoml
xchg
or
out
mov
jnp
dec
push
cmp
pop
adc
fistpll
add
push
add
jl
orl
and
jmp
inc
test
jl
lock
ret
shufps
aas
xor
ret
sub
shlb
xor
pusha
or
xchg
add
add
and
add
ljmp
xchg
jo
out
ja
icebp
and
cs
aad
lret
lods
or
lcall
ret
lock
mov
out
mov
mov
lret
je
or
leave
int3
cmp
loope
or
ss
outsl
inc
das
mov
leave
das
and
mov
sub
dec
enter
add
jecxz
sub
jno
test
mov
dec
and
mov
hlt
push
inc
hlt
clc
jp
into
inc
dec
jbe
inc
mov
pop
jno
xchg
and
add
add
push
pop
cmp
xor
pop
sub
sbb
adc
fldenv
adc
pushf
adc
imul
ljmp
sbb
int3
adc
xchg
lahf
pop
ja
pop
and
add
and
pop
pusha
adcb
insl
sub
int
movsb
iret
or
and
and
push
movsl
shrl
clc
pop
orb
cli
push
pop
adc
fwait
jno
mov
and
dec
imul
testl
inc
aam
mov
daa
mov
movb
jae
jl
jp
xorl
divb
js
nop
mov
in
or
sbb
mov
xorb
and
pop
push
or
jmp
inc
sub
fisubl
cmp
orl
or
adc
repnz
jmp
mov
mov
push
cwtl
aas
add
sti
pop
loopne
pushf
hlt
xor
jb
aad
lods
and
or
mov
fisttpl
xorl
cwtl
pusha
inc
sahf
daa
fadds
inc
stos
adc
int3
test
add
clc
rol
cmc
adc
add
sbb
pop
and
fwait
cmp
mov
adc
aad
cs
icebp
xchg
push
shrl
mov
jb
test
jnp
dec
js
pop
es
push
call
ja
or
icebp
add
imul
cli
mov
and
push
and
fcomi
and
adc
inc
das
sbb
iret
push
push
inc
bound
imul
sbb
or
lret
pop
or
push
lea
mov
pop
rorb
mov
outsb
cltd
dec
mov
inc
add
loop
sbb
shrl
mov
mov
jo
aad
dec
pop
sbb
jmp
cmpsb
mov
adc
scas
pop
inc
imul
aam
xchg
inc
xchg
dec
hlt
add
lcall
fdivrp
add
movl
js
scas
xchg
push
sub
pop
sub
dec
jmp
xor
xchg
sub
pop
pop
jl
cli
jns
add
daa
add
add
lods
adc
repnz
repnz
gs
or
addl
sub
dec
test
fisubrs
dec
mov
mov
loopne
jl
adc
fwait
mov
sbb
push
sub
xor
fdivr
adc
push
sub
mov
jne
popf
jle
lods
call
jge
mov
gs
pusha
adc
ret
popa
and
cs
iret
in
pop
lods
test
pop
cs
dec
mov
cmp
xchg
push
mov
xchg
jnp
xchg
test
fildl
ljmp
sub
inc
adc
dec
sub
jl
push
pop
popw
je
push
pop
pop
sub
andl
pop
ljmp
addb
stc
adc
js
and
orb
in
pop
inc
test
adcb
mov
shll
popa
dec
das
jmp
jno
jge
sbbl
sub
test
push
lret
jns
stc
jge
clc
or
in
scas
fisubl
lods
pop
ds
sub
das
pop
lret
loopne
and
add
movsb
lret
icebp
sahf
add
mov
or
cltd
jbe
js
dec
push
mov
daa
es
pop
sbb
and
dec
scas
add
ljmp
orb
loope
jge
xor
or
mov
lahf
adc
xchg
add
imul
adc
bound
les
out
push
jle
subl
in
shrl
les
fs
ljmp
sub
stos
mov
xchg
sub
adc
dec
movsl
jmp
js
xor
jb
out
out
scas
pop
pop
scas
push
add
outsb
xlat
jp
jp
insb
xor
add
inc
cmp
jbe
scas
data16
lods
add
lock
jmp
and
and
das
sub
jle
int
fcoms
outsl
and
outsl
outsl
shl
cmpsb
pop
or
lods
loopne
mov
repz
icebp
insl
or
mov
push
mov
mov
lods
jne
jb
push
sbb
push
repz
sub
pop
pop
sbb
xor
gs
cld
testb
push
std
lods
xor
rol
mov
cmpsl
lods
jbe
pop
ds
je
into
add
sub
lret
int3
xor
push
cmp
mov
or
mov
loope
lret
shlb
mov
sub
cmp
sbb
xor
dec
xchg
pop
or
xor
test
or
cmp
cmp
inc
scas
cmp
dec
js
dec
pushf
cmp
inc
sti
lret
push
pop
outsl
pop
popa
inc
das
push
jns
pop
scas
outsl
mov
sbb
lods
daa
xchg
add
popf
adc
movsb
inc
add
lret
jno
cltd
jmp
xchg
add
das
add
and
ror
shrb
add
adc
xchg
scas
hlt
scas
dec
in
xchg
daa
movsb
cmpl
faddl
jo
fsubp
lods
outsb
int3
push
outsl
cwtl
imul
xor
xor
dec
jecxz
sbb
repz
cmp
insb
divl
maskmovq
testl
add
xor
xor
or
jae
outsl
scas
testb
dec
jno
ret
test
cmpsb
in
add
je
enter
and
dec
test
aad
mov
inc
jns
sbb
std
sub
lret
and
push
loopne
push
pop
adc
pop
or
push
push
push
in
or
dec
push
addb
cltd
leave
jns
addr16
scas
xor
stos
addr16
das
scas
imul
test
stc
xchg
fiadds
xchg
jle
fadds
mov
add
pop
cld
cs
in
lds
jns
test
aas
test
add
cld
add
dec
iret
test
push
loope
bound
add
sub
outsl
sbb
and
mov
adcl
scas
js
pop
dec
pop
incl
and
ficoml
jbe
sbb
rorb
lock
xchg
sub
add
inc
sti
movb
repz
or
pop
icebp
add
out
add
ss
pop
pop
add
cmc
repz
add
fs
divl
sbb
enter
lret
jno
add
sti
clc
testl
es
int3
aaa
imul
iret
sbb
cld
clc
add
sub
lods
sub
scas
add
loop
out
cmp
testl
daa
pushf
mov
sub
mov
scas
dec
push
xor
es
mov
add
push
cwtl
cmc
insl
cli
mov
outsb
cmp
mov
or
std
fucomi
ret
inc
pop
pop
push
sbb
ja
pop
dec
sub
imul
add
jo
xlat
sar
test
sub
jns
inc
cmp
aas
fdivrs
sub
or
sbb
jns
xor
dec
xor
js
jo
pop
pop
add
xor
cld
dec
hlt
or
mov
daa
add
jo
cmp
push
or
loopne
cmp
or
push
adc
ds
or
add
test
shr
nop
push
int3
test
pusha
aas
xchg
add
gs
or
das
sbb
into
loope
sbb
cmpsb
in
adcb
xchg
add
shll
add
pmaxub
xchg
push
in
xchg
jp
adc
jo
add
or
testb
in
cwtl
add
dec
xor
and
add
arpl
scas
bound
inc
and
rorb
rcrl
sbb
cld
xchg
adc
jae
xor
outsb
iret
jbe
add
and
lret
outsb
add
arpl
lret
xchg
scas
cld
push
mov
add
inc
addb
push
dec
imul
xchg
int
mov
aad
push
jp
stos
and
sbb
daa
std
lea
loopne
jp
add
push
jl
add
sub
pop
pop
sbb
add
cmp
sbb
push
or
pusha
test
dec
cld
add
mov
xchg
cmp
sub
sub
jae
out
add
adc
aaa
push
pop
xchg
pusha
stc
add
sub
and
paddusw
add
cmovs
outsl
gs
push
stc
jecxz
xchg
jb
pusha
pop
out
inc
dec
sub
pusha
pushf
dec
cmp
xchg
les
sbb
test
jo
mov
pushf
rolb
or
sbb
jo
icebp
pusha
mov
xchg
das
jns
loope
mov
loopne
cmpsl
or
adcb
ss
inc
les
dec
xchg
das
jb,pn
sbb
stc
ret
stc
mov
jmp
adc
call
das
cmp
movsl
rcl
xor
or
data16
sub
sub
xchg
jl
push
clc
mov
add
shlb
mov
pop
sub
adc
pop
fstps
add
mov
insb
test
add
dec
rcrl
xor
lods
and
lods
push
pop
lods
mov
stos
jns
mov
imul
arpl
and
daa
jo
cmp
or
icebp
bnd
and
orb
jg
jge
mov
jle
clc
ret
add
dec
and
pop
adc
or
lret
jae
dec
in
xchg
ret
pop
add
loope
jne
push
inc
fistps
int
adc
cltd
xchg
es
decl
push
cmp
add
stc
lods
xor
mov
mov
mov
adc
fcmove
push
test
mov
sub
in
mov
or
xchg
std
push
ds
push
inc
or
add
inc
cmp
iret
nopl
add
scas
push
inc
shlb
push
cmp
out
add
ret
fiaddl
xchg
das
inc
mov
loope
shl
loopne
es
orl
mov
xchg
testl
pop
lods
sbbl
in
rorb
or
add
sub
push
arpl
push
pop
xor
cmp
sub
mov
and
and
mov
push
popl
ds
dec
imul
fs
sub
ret
xor
cmpsb
repnz
push
sbb
arpl
push
out
push
push
dec
sub
mov
or
scas
cmp
push
out
jmp
mov
ss
and
jg
lods
aad
lds
inc
clc
cs
mov
adc
lds
subl
scas
jns
rclb
or
push
add
cmp
ss
pop
cmp
add
out
jno
push
push
scas
and
nop
add
lret
cmpl
or
nop
jmp
push
gs
push
fbstp
jo
add
and
fstps
or
lret
add
lret
fs
fistpll
inc
xor
jns
add
sub
and
sbb
mov
ja
and
mov
mov
fcompl
sub
rolb
xorb
jo
xchg
push
loop
shr
je
mov
lock
clc
aad
pop
hlt
jecxz
cmpsl
pop
test
cmp
loop
dec
mov
rcl
sbb
shll
outsb
add
push
or
clc
adc
xchg
mov
sbb
and
mov
call
or
stc
xchg
mov
jbe
cmp
test
in
mov
xor
xor
push
jmp
sbb
or
mov
or
add
rcrb
repz
xrelease
mov
sahf
inc
jns
sti
stc
enter
xchg
cli
add
add
mov
mov
enter
dec
loopne
test
or
fiaddl
insl
xrelease
icebp
into
mov
stos
push
movsb
clc
mov
lret
jl
pop
push
push
ds
or
mov
fiaddl
push
adc
mov
jns,pt
jns
adc
sub
mov
jmp
jle
addr16
in
adc
enter
pop
inc
fiaddl
xor
cmp
add
adc
aam
subl
sbb
mov
push
cmpsl
lret
push
flds
das
and
daa
mov
fsts
lret
nop
fidivs
cmpsl
add
lds
insl
loopne
jbe
aam
pop
scas
popf
mov
mov
dec
cmpsb
fldcw
pop
sbb
dec
inc
mov
sbb
add
push
mov
and
fildl
mov
ret
xor
scas
popa
imul
scas
add
mov
adc
push
add
ret
and
xor
mov
pusha
pusha
sub
cmp
pop
scas
cli
test
add
fcmovu
add
lods
xchg
mov
imul
add
pop
mov
and
sub
mov
and
clc
sti
pusha
sub
dec
or
xor
lods
lods
xchg
sbb
pusha
test
adc
lods
sub
add
inc
mov
pop
and
std
movsb
or
pop
xchg
sub
pop
test
xchg
mov
mov
fstpl
stos
push
in
scas
test
cmpsb
out
testl
movsb
or
dec
outsl
dec
pop
gs
push
js
mov
pop
movsl
int
in
jg
sbb
mov
inc
fmull
jb
jle
out
in
icebp
cltd
xchg
shrl
pop
int3
add
inc
loopne
out
ja
push
add
cmp
fstl
loope
pop
in
popa
mov
aad
pop
stc
jb
xor
push
sub
add
aaa
jo
sub
jmp
xor
daa
pop
roll
movsl
fidivrl
push
add
push
xor
enter
lock
and
or
daa
sbb
fildll
sub
add
or
lcall
mov
adc
fs
test
mov
lds
imul
xchg
xor
gs
fidivs
xchg
and
outsb
loopne
xchg
add
jae
xor
or
jge
js
fldenv
movsb
enter
jo
lahf
lods
pop
xchg
fidivs
push
lret
fs
ret
push
xlat
mov
xchg
mov
pop
in
mov
jmp
lods
fwait
test
sub
dec
mov
and
sar
imul
pop
mov
and
out
add
imul
stos
dec
and
shll
cltd
pop
jge
cli
hlt
mov
sbb
dec
mov
cmp
xor
loopne
pushf
and
cmp
mov
imul
and
bsr
xlat
dec
ja
dec
pop
xor
add
or
mov
cmp
pop
jmp
mov
daa
sub
stos
test
xchg
sub
jl
xchg
add
jbe
cld
frstors
scas
ja
jbe
jecxz
add
pop
and
inc
and
sub
mov
jno
xor
out
call
addr16
test
mov
or
inc
cli
shll
lcall
jl
mov
add
jnp
and
mov
push
sub
fsub
loope
cli
daa
iret
lcall
cmc
mov
loopne
mov
repnz
add
aaa
daa
mov
add
sbb
arpl
mov
push
adcb
cmp
push
sub
and
int3
subb
in
or
push
ret
test
cmp
outsb
testl
cmp
test
scas
adcb
xchg
xchg
test
adc
or
data16
sub
outsb
push
or
and
shrl
cmc
mov
add
sub
xor
das
push
push
cmp
add
mov
add
push
sub
and
cltd
lods
cltd
jp
xchg
sbb
push
cltd
test
mov
ljmp
sbb
test
daa
mov
nop
sbb
js
aam
xchg
xchg
shlb
mov
adc
lea
int
cli
push
dec
pop
in
out
pop
xchg
push
xchg
mov
xorb
cmpb
sbb
lahf
add
dec
daa
mov
mov
and
and
sbb
dec
sbb
js
adcl
and
ljmp
cmp
sub
dec
mov
data16
and
push
call
fld
int3
inc
xor
cwtl
jno
sub
push
mov
jno
push
pusha
out
or
adc
jmp
pop
cmp
push
in
das
sbb
or
mov
aad
push
mov
mov
sti
scas
aam
jno
jbe
jl
xor
adc
push
add
int3
shll
out
je
push
scas
sti
mov
jbe
int3
aad
daa
push
insl
push
pop
cmp
lods
or
adc
or
scas
arpl
mov
int3
aaa
jo
dec
dec
push
add
inc
xchg
sub
push
pop
push
pop
out
xor
push
add
mov
sbb
imul
sub
les
mov
cltd
pop
xchg
dec
pusha
or
aad
mov
aad
push
push
lds
mov
mov
push
or
mov
bound
aam
add
mov
add
jbe
jo
call
xchg
fsts
test
movsl
outsl
loopne
jl
lret
push
dec
data16
mov
cld
xchg
lret
mov
lods
or
jbe
or
pop
mov
mov
imul
xchg
sbb
sarb
stos
xor
dec
arpl
mov
inc
dec
sub
imul
cmp
data16
imul
cmp
aaa
jp
mov
test
xor
push
mov
push
mov
movsl
jno
addr16
sub
movntpd
inc
add
pop
mov
std
pop
adc
adc
add
outsb
bound
cmpsl
or
sub
lods
sub
stos
jo
or
out
movsb
roll
out
push
inc
sub
adc
mov
inc
and
cmpsl
out
icebp
hlt
je
and
push
adc
je
arpl
xchg
mov
aaa
pop
sub
shl
sbb
sbb
add
lods
aas
jge
adc
mov
inc
dec
cmp
cli
push
lahf
dec
mov
jo
rclb
jge
mov
mov
cmp
push
fisubl
mov
xchg
or
pop
pop
pop
or
cmp
inc
xchg
xor
dec
and
inc
and
adc
mov
cmpsb
cmp
cmp
pop
arpl
ja
jbe
and
or
stos
and
and
inc
inc
inc
ja
enter
mov
push
sub
lahf
addr16
mov
jnp
sub
sub
or
inc
xlat
push
lcall
push
push
stos
dec
jmp
push
scas
sbb
orb
inc
cli
jge
inc
pusha
inc
or
jno
rcr
sub
xor
push
lock
mov
outsl
push
fcmovne
jg
adc
movb
jbe
dec
fbld
ret
inc
mov
inc
xchg
ss
add
shrb
xchg
jle
iret
push
loopne
lods
xorb
xchg
mov
pusha
xchg
mov
adc
ss
push
push
or
lahf
cmp
test
adc
fs
and
bound
xchg
adc
movsb
mov
lahf
mov
test
xor
les
jmp
loop
pop
and
push
push
into
jmp
add
pop
imul
push
dec
fnsave
inc
mov
mov
xor
sbb
adc
xchg
pop
cmp
add
imul
nop
add
add
loopne
jmp
push
jle
loope
subl
mov
mov
xchg
push
adc
stos
outsl
jmp
ret
xlat
hlt
push
mov
int
or
outsb
imul
inc
imul
mov
and
cmpl
movsb
icebp
push
add
lahf
mov
rcll
rcr
addr16
testb
es
xorb
roll
mov
es
ret
imul
mov
loope
shrb
pop
pop
sti
or
mov
and
pop
push
cmp
cmp
inc
mov
and
sub
jnp
fisttpll
xorl
mov
test
mov
cmp
in
test
sbb
xchg
push
mov
or
pusha
lahf
insb
cmp
loopne
test
or
mov
cmp
aam
in
adc
rol
cmc
orb
xchg
mov
xchg
push
sti
adc
dec
and
mov
stos
or
xor
adc
dec
lret
xor
rcl
sub
adc
cmpsl
lret
hlt
ret
ret
je
adc
xchg
push
adc
mov
stos
cmp
inc
movl
cli
xchg
pusha
and
pop
rorb
je
pop
das
imul
loop
add
nop
push
leave
addr16
cmp
add
mov
icebp
call
mov
fs
adc
cmc
sub
xor
lret
pusha
push
pop
iret
xor
loope
or
sbb
pop
repz
mov
mov
adc
jmp
cld
fnsave
fsts
add
xchg
xor
lock
or
ret
str
movsl
inc
rorl
sub
roll
add
pop
add
mov
mov
sbb
mov
testb
sbb
imul
xor
cmp
lds
mov
shrl
pop
je
ja
push
adc
mov
cwtl
ljmp
add
fiadds
xchg
add
add
mov
jecxz
sbb
mov
dec
cmp
sti
fiaddl
lods
push
add
xchg
sbb
nop
cmc
mov
clts
flds
cmp
mov
jb
xor
repz
imul
mov
sbb
or
pop
faddl
pop
push
sbbb
lock
test
adcb
ficoml
sub
das
mov
mov
popf
enter
push
mov
xchg
in
cld
ljmp
push
xor
push
pushf
dec
adc
xchg
cmp
sub
sbb
add
test
or
cmp
mov
inc
scas
test
pushf
xor
mov
xor
and
push
mov
pop
add
add
mov
pop
jecxz
ljmp
pop
lahf
data16
lods
dec
xchg
mov
test
cld
mov
dec
sbb
test
xor
jnp
es
mov
mov
xor
int3
mov
es
add
scas
sbb
or
imul
xor
fadds
into
and
sub
jg
dec
jp
jne
jle
iret
rolb
add
aaa
out
pop
loope
pop
push
fcomps
clc
dec
cmpsb
out
or
cld
pop
clc
add
adc
inc
inc
stc
testl
outsb
aam
push
out
jbe
push
push
add
pop
add
dec
pop
jo
nop
or
xorb
mov
jl
dec
enter
push
fisttps
push
cmp
xor
cmp
cmp
xor
loopne
loopne
jnp
and
jp
sarl
and
int3
xlat
add
sbb
or
leave
icebp
sti
xlat
int
dec
int
and
cmp
mov
jnp
dec
out
mov
dec
sub
ret
insl
lock
les
pop
fistps
xlat
push
lods
movsb
sbb
enter
or
and
sub
sub
jmp
sbb
or
mov
pop
sub
lods
push
int3
or
jbe
xor
xchg
sti
mov
ss
fadds
add
loopne
dec
and
stos
into
mov
incl
mov
leave
filds
push
movsl
rorl
jle
aad
cmp
inc
mov
in
or
call
sbb
push
mov
leave
les
jmp
cld
or
cld
mov
mov
je
iret
outsb
xlat
clc
insb
fxch
verr
mov
insb
das
rolb
sbb
jecxz
mov
fisubrs
inc
cs
mov
je
xchg
movsl
stos
add
add
aas
into
fildll
mov
xchg
jo
arpl
rorl
aam
cli
mov
sbb
cwtl
cltd
pop
pushf
lods
xchg
pop
aaa
jo
add
mov
mov
insl
call
iret
sbb
inc
ret
ss
or
stc
inc
orb
lea
in
inc
sbb
pop
sbb
xchg
gs
movsl
jno
inc
aas
movl
pusha
outsb
popa
xchg
aad
int3
fwait
ret
lods
pop
imul
and
and
add
out
inc
das
sahf
push
fcomps
or
inc
or
push
pop
mov
inc
arpl
imul
aad
lods
test
adc
inc
mov
mov
daa
in
mov
sti
xlat
pop
xor
or
fcomp
popa
ret
in
add
cmp
jle
cmpl
mov
inc
mov
cmp
imul
jae
lods
add
and
inc
xchg
outsl
and
dec
xor
iret
cli
add
adc
add
xor
addr16
xor
sbb
in
in
sub
xor
add
push
sbb
cltd
aam
xchg
enter
fisubrs
sub
lods
addl
js
addr16
or
sbb
rolb
pop
fwait
minps
inc
xchg
orb
dec
sti
dec
lahf
xor
lret
rcr
test
pop
pop
sub
jno
push
add
jg
les
mov
xchg
mov
add
movsb
or
imul
sarb
mov
jl
out
rclb
fstps
push
jns
add
xor
in
lret
iret
jb
push
push
in
xchg
in
mov
or
add
pop
adc
cmpsl
shl
xor
mov
icebp
xchg
daa
xchg
xor
xchg
call
cmp
movsl
in
int
mov
mov
mov
push
jecxz
add
xchg
pop
mov
inc
xchg
in
jmp
or
dec
sub
fidivrl
fst
divl
into
pop
or
ss
movsb
fwait
ret
mov
or
sbb
filds
xchg
dec
jle
push
jmp
movsb
jmp
cmpsl
inc
aam
push
aas
add
movsb
adc
jecxz
notl
lret
clc
pop
xchg
sub
dec
hlt
mov
sbb
pop
cmp
cltd
lea
loope
jae
stos
or
or
test
jne
fs
cmpsl
loope
cmpsl
icebp
add
mov
repnz
push
aas
test
pushf
mov
das
add
mov
lds
testb
enter
dec
fstps
push
lea
sbb
mov
testl
aam
add
mov
test
mov
lcall
lods
mov
rcrl
arpl
jne
lahf
lods
xor
mov
sub
out
cwtl
adc
add
jo
insl
test
jb
sbb
add
mov
jmp
insl
fs
fwait
icebp
or
ja
fs
add
sub
sub
mov
arpl
js
jg
imul
mov
pop
lcall
scas
sub
mov
xor
dec
aaa
mov
fsubrs
push
loope
adc
ss
xor
jge
push
pop
mov
jle
xor
sub
cmpl
mov
rorb
and
in
test
ja
push
mov
out
rcrb
pushf
xchg
cmc
mov
daa
push
lods
fwait
xor
dec
push
push
das
dec
cmc
bound
movsb
adc
test
cmc
scas
jnp
scas
xchg
pusha
inc
add
cwtl
ret
add
test
adc
push
test
insb
loope
ret
scas
mov
xchg
ljmp
out
popa
mov
fistps
loopne
cmp
pop
ja
iret
jne
icebp
jo
dec
cmc
xchg
sub
loopne
les
out
or
nop
dec
scas
add
les
jmp
rcrb
sahf
sub
dec
aaa
out
stos
xor
pusha
sbb
push
add
and
mov
popf
jmp
or
in
icebp
gs
test
adc
stos
dec
mov
add
shrb
pop
outsb
adc
inc
push
mov
ja
movsb
out
mov
or
inc
add
mov
sub
movsb
sbb
in
mov
jbe
js
mov
das
mov
mov
loopne
shr
sbb
xor
and
rcr
push
mov
sub
pushf
jb
jl
std
mov
popf
scas
and
pop
pop
push
dec
js
rorl
xchg
adc
mov
push
sti
adc
xchg
stos
cmc
cmpsl
aam
mov
cs
push
inc
cmp
push
ss
je
sbb
in
xchg
or
xchg
jle
pushf
xchg
mov
shrb
loope
dec
adcb
pop
pop
ds
xor
push
sbb
pop
int3
int3
insb
adc
add
pushf
inc
les
lock
cmp
aad
cli
aas
mov
or
dec
sub
loope
shrb
mov
or
sub
add
inc
cmp
nop
push
push
pusha
jns
call
sbb
push
and
cmp
add
popf
sbb
dec
dec
dec
jb
or
mov
into
xchg
int3
mov
xorb
push
data16
push
out
add
clc
wrmsr
addl
and
into
push
dec
dec
flds
add
scas
push
sub
int3
ret
es
sub
rclb
loop
psraw
add
pop
cmpsb
mov
cmp
int3
push
push
das
bound
in
and
and
xor
add
stos
push
stos
rclb
fldl
rcll
inc
ret
in
call
jmp
or
xchg
mov
cmp
int
test
addr16
popa
loopne
and
jo
pusha
add
hlt
mov
cmpb
mov
scas
jmp
mov
pop
das
into
lret
lock
mov
bound
jge
out
pop
call
stos
adc
shll
xchg
xor
testl
xor
enter
mov
js
sbbl
das
mov
pop
rorb
or
out
mov
inc
popf
adc
sbb
and
sbb
out
int3
jg
fsts
push
cmp
mov
test
adcb
push
push
js
call
push
test
xchg
mov
and
push
sbb
sub
fwait
push
lock
fucom
ret
in
call
sbb
gs
pop
mov
bound
push
arpl
je
pusha
inc
and
addr16
sub
mov
or
insb
int
or
ret
adc
jno
pop
pusha
push
adc
sbb
add
aam
fs
les
or
loopne
nop
jge
adc
movsb
shll
scas
push
dec
mov
push
add
jb
inc
dec
jno
movsb
ja
cld
push
or
xchg
dec
jmp
paddd
mov
cmpsl
xchg
movsb
mov
pop
pop
and
pop
adc
mov
push
dec
mov
popf
and
rcr
pop
jbe
bound
lods
inc
mov
test
mov
or
and
pusha
mov
fs
cmc
loopne
fs
ljmp
sbb
or
loope
roll
lahf
les
insb
shll
add
nop
loopne
enter
nop
or
sub
pop
movsl
or
sahf
add
aam
mov
add
out
cmp
push
ret
cmp
push
dec
mov
mov
sbb
mov
mov
sti
push
in
mov
test
sbb
adc
xor
pop
add
adc
shlb
sbb
and
pop
hlt
sub
aas
dec
xor
shrb
xchg
add
jle
adc
and
faddl
jne
mov
fsubrl
inc
or
mov
pop
dec
sbb
push
or
jmp
iret
push
push
rolb
xchg
mov
jae
sub
xor
mov
mov
int3
sbb
pop
dec
call
dec
pop
mov
jg
or
pusha
push
add
test
pop
xchg
sbbb
jl
sub
and
call
or
mov
shl
mov
call
xchg
push
aaa
fwait
pusha
sbb
xchg
cmpb
mov
mov
jmp
dec
xchg
or
add
std
cmp
push
xor
dec
add
aaa
and
or
xchg
outsl
xchg
andb
add
mov
add
test
or
pop
loopne
test
pop
in
mov
loopne
push
add
and
movsb
icebp
cmp
push
pop
out
xorl
ja
lods
inc
mov
arpl
pop
xorb
lock
and
xlat
shlb
in
push
inc
je
into
xchg
adc
xchg
mov
pusha
pop
fadds
ret
xchg
pop
out
scas
or
ds
mov
shlb
dec
or
fbstp
incb
mov
jmp
xor
sbb
xor
insl
lea
into
cli
ss
je
in
enter
ret
xor
dec
loope
inc
mov
and
pop
ret
mov
cld
sti
xlat
xchg
mov
and
dec
mov
mov
scas
push
sub
cmc
pop
sbb
or
jae
test
jo
push
sarl
dec
add
inc
xorl
or
push
stos
sahf
pop
jmp
and
and
mov
dec
popf
cmc
insl
std
fiaddl
xchg
jo
outsl
loopne
lds
sbb
add
push
sbb
rolb
lret
shlb
add
push
arpl
mov
int3
aas
adc
stos
or
ja
dec
pop
addl
jo
ds
lea
push
dec
inc
js
leave
insb
inc
cmp
rcl
aad
dec
jo
pushf
push
mov
xchg
js
and
push
aas
dec
js
mov
cmpsb
push
mov
negl
ret
dec
inc
movsb
and
pusha
movsb
dec
aas
pop
jmp
mov
aas
cmp
pop
cmp
push
adc
mov
mov
aaa
ds
inc
outsl
mov
mov
cmp
jae
jnp
shll
add
xchg
arpl
adc
xchg
cwtl
mov
sti
lods
sbb
pop
add
mov
dec
xchg
ret
daa
xchg
xchg
push
pop
push
ret
cmp
xor
adc
arpl
fs
adc
pop
jp
mov
add
adc
sub
jnp
icebp
add
rclb
pop
scas
in
cmp
cmp
in
xor
pusha
add
mov
rol
jno
aam
pusha
into
xchg
cmp
xchg
sub
cmp
inc
bound
cmp
push
or
pop
shl
cmp
pop
fcoms
push
push
cmp
jno
mov
jmp
dec
inc
adc
mov
rcr
xchg
in
inc
dec
arpl
cmpsl
out
lods
es
xor
movl
pop
jno
jae
test
hlt
pop
shl
loop
jae
jo
into
pop
iret
mov
xchg
stos
inc
pop
xchg
pop
or
outsl
jle
loopne
mov
sub
lods
lea
dec
fcom
add
and
xor
cmp
sbb
xchg
add
mov
sbb
mov
shlb
lds
rcrb
stos
pop
imul
shr
fcomps
insb
lret
jecxz
adcb
cmp
add
sub
out
adc
int
fnstcw
push
adc
test
push
xchg
dec
pop
sbb
xchg
rcll
pop
or
enter
prefetcht0
cmp
pop
scas
icebp
xchg
add
add
jo
fcmovnbe
push
icebp
add
sub
or
stos
xor
loopne
pushl
jne
ficoml
subb
xor
xchg
mov
adc
xor
cmpsb
rcll
xchg
lcall
pop
push
popa
jmp
push
mov
and
inc
add
adc
or
inc
sub
sub
fidivs
mov
sbb
sbb
push
js
outsb
nop
pop
lds
inc
mov
xchg
dec
jp
add
cmp
and
adc
mov
mov
ret
subl
pop
xor
add
mov
pop
rclb
push
xchg
sbb
and
sub
lret
rcl
mov
ret
test
repnz
add
xchg
mov
add
fcoms
dec
repnz
inc
dec
ret
jb
sbbb
sub
inc
dec
dec
imul
add
fcom
test
sub
jmp
out
cmp
sbb
stos
cmp
sbb
loope
push
jmp
cmp
mov
mov
frstor
mov
sahf
add
pop
loopne
push
inc
test
inc
xchg
dec
sbb
loopne
stc
sbb
movb
rolb
mov
mull
dec
lds
cmpsb
movsb
xchg
lods
cs
in
aad
rcrl
pop
mov
mov
jno
fdivs
xchg
icebp
or
add
and
adc
xlat
cwtl
mov
sbb
dec
and
mov
negl
inc
ret
movsb
pop
cmp
test
pop
or
xchg
shll
addb
fs
lods
cmpsb
cmpsl
cmp
popf
mov
add
lcall
ja
add
shl
sub
daa
lock
stc
mov
test
mov
movsl
xorl
mov
sub
and
dec
fdivrs
cld
xlat
fmull
jno
dec
movsl
lods
cltd
sub
and
test
rol
push
xchg
js
xor
and
mov
jp
add
ret
push
mov
lahf
jmp
xchg
jle
lods
jmp
aam
pop
stos
xchg
xor
leave
jne
mov
add
ljmp
add
add
lret
dec
push
adc
cs
jmp
pusha
sbb
scas
and
mov
into
push
test
mov
mov
outsb
int
cmovae
and
jnp
jnp
inc
push
adc
jp
test
sub
mov
iret
xchg
aad
xor
push
out
fdivs
dec
negb
js
sub
xchg
cs
jecxz
test
mov
or
sub
add
adc
js
jne
adc
ss
mov
loopne
mov
into
sub
fnstcw
inc
rcrb
or
mov
shrl
test
push
sbb
test
adc
cmc
dec
mov
bound
sti
andl
pop
iret
inc
cld
decl
lods
arpl
fnstenv
loop
in
sub
dec
add
and
push
cli
iret
pop
xor
mov
cmp
pop
cs
mov
cmp
fldt
add
shll
mov
mov
adc
pop
and
cltd
loop
fs
add
inc
pop
sub
push
test
mov
ja
insl
pusha
andl
xchg
add
lock
or
add
pop
fdivrl
or
inc
imul
mov
das
fwait
push
sub
add
lret
add
or
shlb
bound
sbb
lods
iret
add
xchg
add
and
xor
push
cmc
dec
dec
inc
xor
pop
leave
pop
add
je
dec
add
shlb
jnp
aas
mov
add
adc
add
cmp
add
push
shlb
in
pop
arpl
iret
adc
cmp
inc
enter
adcb
lods
lret
dec
bound
rclb
push
adc
loop
subl
inc
add
sbb
pusha
adc
repz
sbb
jl
sub
loopne
or
adc
js
add
add
adc
mov
dec
ret
stos
mov
test
ret
sarb
ret
push
iret
pop
enter
inc
mov
cmp
mov
je
xor
aas
sub
jl
mov
jbe
lods
sbb
call
jo
adc
jecxz
je
push
pop
ret
jne
fadd
or
push
and
mov
mov
ss
add
pushf
xchg
push
jae
pushf
push
xor
xor
sub
and
mov
jns
aas
mov
or
mov
in
in
loop
cmp
push
les
xor
add
add
lods
fisubrs
sbb
aas
mov
xchg
pusha
add
mov
imul
xor
dec
sub
inc
dec
and
and
fwait
xor
sahf
or
or
or
mov
jmp
mov
inc
les
rol
insl
repz
push
mov
mov
lret
mov
dec
or
and
js
and
push
or
pop
stos
inc
xchg
mov
outsb
sub
movsb
inc
imul
sub
lea
popf
andl
or
imulb
pusha
cmp
or
inc
js
sub
in
sub
and
push
push
je
addb
dec
add
jae
lods
xchg
loopne
jmp
je
xchg
push
iret
cmp
repz
xor
das
lods
loop
jb
push
and
jbe
pop
adc
aas
push
jno
push
out
fistl
sbb
jecxz
cli
arpl
shll
mov
and
and
mov
jno
pop
inc
repz
or
jecxz
jbe
sbb
wbinvd
movsl
dec
int
cmpsl
and
movsl
adc
shll
dec
sub
adcl
test
rcrl
pop
and
imul
sbb
test
shrw
xchg
cli
add
add
test
in
pop
or
cmc
add
rclb
jl
mov
jge
mov
jno
loop
orb
imul
push
sub
imul
and
add
dec
pop
add
jb
xlat
cmpsb
aam
lea
mov
jmp
dec
arpl
vphaddubd
insb
jne
xchg
add
test
inc
aad
add
outsl
daa
sbb
jmp
xchg
stc
aam
xchg
inc
add
adc
xchg
and
sbb
pop
adc
inc
loopne
and
add
ret
dec
mov
out
push
xchg
mov
jno
lret
push
pop
push
loope
xor
mov
sbb
jo
or
mov
addr16
movsl
and
popa
adc
es
inc
cmp
mov
aam
add
sbb
jnp
inc
xchg
xchg
xchg
push
rol
aam
and
mov
cmp
cmp
loopne
int
adc
pusha
mov
xchg
xchg
push
rolb
mov
icebp
loope
pop
sub
cwtl
xlat
or
and
mov
ss
insb
popa
dec
repnz
mov
xchg
fldenv
inc
mov
cmpb
repnz
imul
or
test
xchg
dec
add
add
in
add
dec
or
ror
inc
push
shrb
lcall
xor
xchg
jmp
inc
or
adc
daa
aad
out
sub
inc
addb
jne
cmp
jo
cmp
add
leave
cmp
xor
test
fcmovb
in
imul
orl
pop
insl
data16
mov
in
jmp
popf
mov
xor
sub
rcrb
inc
and
popf
mov
gs
inc
movsl
mov
sbb
inc
fsts
jns
rcrl
fists
andb
stos
ja
add
adc
xor
shll
jb
dec
cmc
sbbl
sbb
mov
sub
cmpsl
ret
and
and
inc
and
enter
add
insl
jo
lret
add
xchg
and
pop
and
movb
fld
push
sub
cltd
pusha
xchg
cmpsb
pop
and
lock
dec
pushf
loope
sbb
aad
xor
mov
lea
mov
out
and
jb
xchg
jb
mov
inc
in
and
xchg
push
data16
lock
cmp
ja
jmp
inc
fsubr
fbstp
pop
dec
jmp
push
xorl
cmovne
or
sbb
sub
or
and
mov
cmp
push
out
lods
test
jb
es
jno
lods
adc
iret
sbb
daa
add
call
jns
push
add
sub
dec
jg
imul
das
data16
jnp
ds
and
adc
sub
jge
mov
inc
add
inc
xchg
pop
cmp
data16
mov
dec
stos
das
mov
or
mov
add
mov
pop
cld
dec
or
mov
push
in
ret
shll
jne
mov
mov
and
push
pop
dec
or
ja
adc
mov
iret
inc
mov
aas
pop
ret
jo
data16
jns
lcall
add
in
push
jge
insl
cmp
hlt
imul
and
and
mov
sbb
jge
out
add
xor
sub
xchg
sbbl
daa
dec
out
pop
js
cmp
mov
imul
fsubr
lcall
jo
outsl
pop
lret
push
push
or
lahf
lcall
add
pop
scas
ror
lret
aas
or
sbb
mov
into
out
add
iret
mov
fmuls
dec
test
dec
negl
xor
jb
mov
iret
jbe
adc
ret
test
in
push
xchg
sti
mov
adc
test
cmpsl
push
push
loop
cs
push
adc
dec
repnz
push
orl
popf
push
push
mov
ds
loope
testl
clc
pop
imul
jge
in
addl
fcoml
xchg
hlt
mov
mov
loop
or
xchg
or
and
add
or
pop
mov
sbb
test
mov
test
insb
adc
jnp
and
xor
gs
push
rclb
cmp
fisubrl
movsl
adc
jecxz
jae
jb
xchg
push
dec
adc
mov
push
and
imul
ret
inc
dec
or
sbb
fsubrl
sub
xor
sbb
lods
fists
inc
add
push
xor
mov
sbb
jecxz
scas
dec
add
add
or
movsb
cmp
adc
icebp
loop
iret
jp
inc
fucomp
es
push
sbb
in
lods
ftst
fstpt
fistpll
sahf
shll
ficoms
fstl
fisubl
in
sbbl
les
mov
iret
sub
dec
nop
or
xchg
jmp
fcmovnu
mov
dec
xor
cmpb
ficomps
dec
pop
scas
gs
xor
ss
cmp
push
push
and
or
pop
pop
call
inc
clc
js
mov
ljmp
outsl
fcoml
mov
scas
fbstp
arpl
adc
int3
cwtl
mov
popa
or
xchg
or
pop
xchg
aas
lock
aad
fisubl
loopne
in
sub
js
mov
pusha
loopne
je
sarb
push
aaa
jo
mov
rclb
add
pusha
roll
add
inc
popa
add
xchg
testl
iret
scas
mov
pop
inc
test
dec
pop
outsl
loop
pushl
jmp
out
int
mov
or
inc
mov
sub
xor
add
sar
in
xor
sbb
stc
ret
xchg
js
lock
xchg
mov
xorl
pushf
xchg
and
pusha
or
xchg
wrmsr
jo
pop
aaa
add
sub
adc
jne
jo
push
sub
adc
cmp
xchg
push
pop
icebp
aam
mov
popa
jnp
ljmp
or
jne
push
mov
jns
dec
cmp
stos
lds
sub
xor
inc
xcrypt-ctr
cmpsl
sbb
dec
inc
pop
sbb
sub
clc
shrl
fisubrl
push
scas
xor
shll
push
repz
stc
int3
push
add
aam
and
push
out
lock
imul
les
outsl
loope
push
popa
xor
lahf
rcll
fnstenv
pop
insb
rorl
iret
int3
jmp
xor
mov
ficoml
mov
mov
lods
add
cwtl
inc
ror
lret
inc
mov
cmc
lds
or
adc
cmp
iret
je
lods
add
or
imul
sbb
adc
adc
mov
fiaddl
jg
xor
mov
inc
sbbl
rcl
inc
pop
aad
orb
dec
dec
out
add
mov
mov
mov
dec
pop
sbb
mov
adc
outsb
push
mov
push
lock
movsl
or
inc
add
inc
pop
imul
outsl
lock
jle
xchg
movsl
jno
sbb
ja
jp
mov
rolb
cld
xor
add
sbb
push
mov
jle
sbb
out
adc
or
jo
sub
vcmpeqpd
pop
add
or
xor
inc
mov
pop
lea
hlt
add
and
scas
xchg
popa
sbb
in
jmp
mov
mov
lods
lret
cmpsl
or
dec
and
mov
adc
jmp
cmc
aad
xchg
pusha
jno
mov
imul
ljmp
ret
aam
jae
cmpsb
sbb
jne
clc
cmp
popl
sub
cmpsb
js
int3
sahf
jo
add
add
xor
inc
daa
es
cmp
cmpsb
je
jb,pt
cmp
xor
bound
jo
mov
add
add
push
inc
xchg
loop
pop
movsb
icebp
jno
insl
movsb
xchg
stos
cmpsb
aaa
in
mov
or
cmp
sarl
inc
std
push
pop
or
dec
adc
inc
jno
and
fmull
mov
sub
pop
insb
sahf
inc
inc
xor
add
sub
in
xchg
xchg
stos
es
sub
or
dec
aaa
stos
adc
mov
xor
inc
mov
lret
bnd
pop
fcoms
mov
dec
cmp
test
dec
add
je
xor
pop
inc
xchg
pop
dec
mov
gs
inc
and
mov
or
enter
inc
fnstsw
adc
daa
xchg
push
loope
xchg
mov
subl
int3
in
adc
iret
aas
inc
lret
verw
push
pop
mov
jmp
mov
mov
sbbb
xchg
dec
stos
lods
mul
adc
ljmp
pop
add
or
enter
push
lods
sub
lods
pop
mov
add
or
or
jo
inc
aam
push
or
loopne
les
cwtl
pop
jbe
mov
or
xor
icebp
mov
cmpsb
pop
or
aas
inc
dec
adc
arpl
in
push
lret
add
ljmp
test
es
jg
mov
and
sbb
push
daa
fistpl
jo
test
jo
nop
xchg
inc
stos
scas
out
cs
mov
stos
add
add
fisttps
add
jo,pn
loope
test
mov
mov
not
lcall
dec
cmp
ret
mov
or
jbe
or
or
add
sub
add
js
xlat
mov
inc
cmpsl
aaa
jb
mov
repnz
push
cltd
roll
clc
ss
int3
inc
and
jae
and
pop
cmpb
lds
lods
cwtl
push
add
and
insl
or
lret
adc
add
add
push
hlt
push
jbe
rcrl
leave
push
sub
dec
cmp
mov
pop
outsb
adc
jo
cmp
mov
mov
sbb
cld
addr16
jp
js
fcmovnb
enter
xchg
clc
cmp
aad
out
cmpsb
pop
add
mov
push
jno
lea
jns
jp
add
sbb
enter
sahf
adc
xchg
sbb
loop
xchg
sbb
cltd
mov
jbe
es
adc
adc
inc
mov
or
leave
mov
shlb
push
inc
add
sub
xor
push
addr16
and
lret
out
jp
mov
xor
and
pop
ret
cmc
lret
mov
nopl
iret
push
mov
stc
adc
xchg
cli
popa
ret
and
xchg
or
xor
inc
mov
sbb
insb
out
xchg
xor
sbb
xchg
push
aad
clc
xchg
adc
test
popa
in
jnp
mov
addl
jno
lea
test
mov
punpckldq
js
mov
adc
adc
and
push
jnp
jns
cmp
inc
lahf
push
push
lahf
mov
loopne
test
ljmp
imull
lods
and
dec
xchg
cli
mov
outsl
dec
sbb
or
test
mov
mov
out
repz
pop
adc
pushf
jp
fnstcw
lret
xor
int
cs
outsb
xchg
xchg
mov
dec
jne
cmp
xor
sbbb
sub
pop
or
and
mov
or
mov
gs
mov
dec
mov
in
lods
dec
mov
push
add
and
mov
lret
xlat
adc
sahf
sub
adc
or
push
pop
cmc
inc
and
sub
cmpsl
and
xchg
mov
and
fwait
jns
xchg
rclb
pop
cmp
outsl
adc
cli
outsl
xchg
xchg
lock
push
xchg
jno
loope
mov
out
and
xchg
push
push
xchg
pop
dec
push
cmp
call
roll
fdivp
mov
jne
daa
push
xor
jg
inc
pop
mov
jp
rcrl
and
jecxz
pop
dec
mov
icebp
dec
mov
add
ljmp
mov
aad
cmp
loope
sbb
icebp
enter
xchg
rcrl
jge
mov
mov
cwtl
push
push
push
cwtl
ret
add
call
xor
sbb
rorl
mov
jo
inc
sbb
mov
push
jb
inc
sub
xchg
sub
rcll
cmpsl
jecxz
mov
mov
arpl
pop
adc
jb
lds
cmpsb
push
arpl
pusha
mov
pop
test
repnz
out
add
es
fbstp
ficomps
ljmp
mov
mov
pop
dec
lds
dec
lock
addr16
inc
xchg
mov
cmpl
push
adc
dec
jmp
mov
arpl
or
imul
dec
mov
mov
pop
xor
jge
cmp
repnz
xchg
dec
and
cmp
aam
jp
add
xlat
dec
inc
lret
and
stos
jo
je
into
dec
push
arpl
and
dec
fst
addb
inc
cmpsb
inc
or
and
pop
cmp
push
es
sti
lods
aaa
scas
rolb
jmp
mov
sbb
pop
xor
cmp
mov
mov
cmp
dec
outsl
loopne
sub
or
lods
subb
stos
jne
and
dec
mov
mov
sbb
cmc
ja
pop
imull
mov
mov
push
mov
push
inc
imul
imul
decl
inc
rorb
iret
adc
dec
cwtl
xchg
int
bound
pop
add
jmp
adc
nop
mov
test
bound
jns
xor
rclb
ret
pushf
and
jp
pop
fistps
into
filds
pop
cmp
lcall
add
jmp
or
and
mov
mov
clc
movsb
int
iret
jl
xchg
test
aas
sub
sbb
xor
and
push
test
loopne
popa
leave
test
sub
test
lcall
add
out
jbe
xchg
mov
gs
orl
stc
cs
add
and
mov
inc
and
mov
or
dec
aad
mov
add
sub
push
jp
push
xor
je
mov
arpl
mov
cld
ljmp
pop
rcr
xchg
mov
mov
cwtl
scas
pusha
leave
push
jmp
push
cmp
dec
aas
stos
or
adc
sarb
jp
js
fs
push
sbb
push
jmp
xchg
xchg
jno
push
lods
fildl
test
sbb
lods
mov
mov
add
sbb
sub
orb
lahf
adc
int
insl
add
dec
mov
mov
or
and
and
jmp
and
push
fsub
cmp
mov
mov
in
idivl
cmp
xchg
mov
iret
gs
and
sbb
xor
xchg
sbb
in
add
gs
addr16
pop
sti
aaa
inc
test
sbb
jge
cmp
fadd
loop
out
add
push
test
mov
dec
or
jae
test
rorl
xor
push
jae
mov
push
lahf
lods
sbb
cwtl
adc
and
push
adc
mov
add
add
mov
addl
test
scas
dec
js
arpl
daa
sarb
ror
fisttps
sub
dec
xor
adc
and
ret
add
or
pop
ret
sar
lods
in
adc
inc
subl
adc
xor
lods
addr16
lock
mov
std
pop
inc
scas
lods
jmp
loop
or
jne
mov
inc
arpl
lods
outsl
or
jne
shlb
push
lods
and
lahf
adc
test
daa
add
sbb
and
scas
add
sbb
xorb
js
or
adc
mov
sbb
mov
mov
add
int3
or
xor
mov
mov
jmp
add
test
outsb
xor
mov
push
iret
lahf
test
adc
lock
dec
adc
pause
pusha
aas
test
push
cmp
add
or
test
xchg
sarl
add
push
push
jmp
mov
sbb
arpl
mov
xor
adc
in
or
test
pop
sub
sub
test
out
cltd
sub
pop
es
popa
add
add
and
mov
mov
cltd
and
icebp
or
mov
cs
lahf
push
addr16
inc
jns
cli
data16
iret
ljmp
mov
fwait
inc
neg
dec
mov
xor
cmpsb
xlat
into
sbb
lock
jno
pop
pop
and
adc
insl
aas
out
fsubl
clc
push
lahf
ja
adc
push
stc
jmp
lods
adc
cmp
jecxz
pusha
div
movsb
testl
das
mov
sbb
repz
leave
shll
dec
mov
pop
ficoml
shlb
pop
xor
xor
pop
dec
sbbb
jo
jbe
mov
mov
addl
dec
sub
push
jb
addl
cpuid
xor
push
adc
arpl
adc
add
sub
mov
lods
push
addr16
sbb
fildll
push
inc
rorb
out
adcl
icebp
xchg
cmp
into
fwait
add
jb
ja
jb
mov
add
das
and
jbe
add
js
out
cmp
mov
jnp
inc
sbb
lock
ret
pop
push
inc
int
mov
xchg
jns
in
dec
or
test
adc
in
inc
lods
mov
add
repnz
cmpsl
leave
sub
xor
cmp
cmp
cmpsl
shr
dec
inc
add
fadds
mov
rol
inc
jns
ljmp
jl
sahf
lods
add
xchg
dec
inc
xorb
sbbb
adc
mov
sbb
mov
fcompl
cli
xor
fwait
ret
inc
pop
sub
lods
jmp
adc
into
pop
xchg
push
std
dec
je
movsl
adc
int
out
mov
cmp
scas
and
inc
roll
cmp
cmp
sub
lods
out
jne
aam
gs
add
add
add
movsl
dec
push
inc
jle
and
testb
jo
mov
xor
imul
pop
pop
inc
and
stos
push
jp
inc
iret
push
stos
popa
xchg
rep
movsl
lret
fs
js
jl
fisubl
and
push
and
mov
ljmp
and
cmp
insl
insl
arpl
andb
xorl
stos
lea
mov
and
adc
sub
out
sbb
sub
mov
sbb
sub
inc
xchg
dec
shr
and
lods
loope
fwait
lcall
fidivl
sub
loop
aad
mov
xchg
stos
jmp
test
lods
inc
pop
cwtl
pop
inc
jg
loopne
xchg
inc
int
and
mov
imul
and
and
lods
mov
xor
and
nop
test
and
inc
dec
js
adc
pop
insl
cmpsl
inc
jmp
in
sbb
arpl
aam
push
gs
lret
jp
orl
es
sub
repnz
mov
mov
ret
lret
sub
in
out
mov
dec
das
repz
and
inc
and
jmp
lods
mov
imul
mov
pusha
sub
inc
nop
test
sbb
inc
and
mov
xor
cmp
lahf
icebp
sub
or
imul
pop
iret
add
jge
dec
punpckhwd
gs
pop
in
or
stos
push
add
fldenv
daa
xchg
loop
shlb
mov
pop
clc
inc
xchg
xchg
add
sub
cwtl
push
or
rolb
dec
dec
cmpsl
adc
pop
dec
arpl
icebp
cmp
xchg
ds
pop
pop
mov
and
loope
into
rorl
fcomps
aam
cmp
and
cmp
xchg
and
jns
imul
mov
gs
cs
jno
sub
shrl
and
add
jl
xor
push
scas
out
inc
or
cmp
add
or
popa
mov
fnsave
addl
sub
sbb
and
cmp
cmp
repz
mov
mov
outsl
or
out
push
jno
insb
popf
jo
ret
leave
fldl
sbb
addr16
popl
dec
dec
mov
mov
clc
fisttpl
adc
sub
add
pop
in
shll
mov
adc
pusha
test
pusha
cmpsl
ret
clc
lahf
pop
pop
pop
aaa
sbb
aam
pop
mov
add
and
gs
mov
xchg
fs
sbb
add
fisttpl
pop
cmp
loope
jns
cmp
inc
scas
adc
ss
adc
mov
pop
fsubl
nop
orl
sarb
cmp
icebp
jo
daa
push
mov
inc
cmp
mov
xor
test
test
aad
xchg
pop
add
pop
popf
sti
cmp
mov
mov
lods
aaa
inc
sub
shrl
jne
pusha
xchg
push
cltd
out
xchg
test
push
push
dec
cs
add
sub
push
cmp
xor
mov
ljmp
cmc
add
ret
sub
push
xor
lock
ja
jno
mov
inc
popa
hlt
dec
fcmovnb
test
cmc
and
fisubl
icebp
mov
mov
push
in
xor
rolb
mov
xor
or
pop
imul
ja
adc
pusha
cmp
mov
or
bound
je
adc
adc
rclb
sub
jns
sub
lret
jo
or
bound
xchg
js
push
pop
outsb
push
imul
scas
sahf
hlt
adc
adc
gs
push
loop
inc
inc
or
cmp
pop
xor
aam
pop
mov
inc
push
jp
mov
xchg
inc
out
imul
lahf
mov
lds
sahf
pop
movsl
in
je
mov
mov
jne
clc
dec
les
mov
lods
lea
add
mov
dec
pop
dec
jge
xor
add
mov
add
scas
shll
mov
mov
jo
add
and
popa
sbb
sbb
dec
jmp
sti
je
or
es
lcall
mov
lods
xchg
js
cmp
xchg
push
or
aas
imul
xor
cwtl
add
pop
push
stos
outsb
dec
dec
aaa
or
adc
fidivrs
mov
push
roll
push
movl
add
jp
dec
and
inc
mov
je
pusha
xchg
sub
in
jp
or
inc
gs
or
adc
or
pop
push
sub
aam
pushf
sti
cmp
es
jle
mov
jmp
cmp
mov
jle
push
add
test
les
je
nop
stc
dec
sbb
inc
insb
sbb
ljmp
cmp
pop
jb
mov
mov
ficoms
jle
gs
lahf
adc
sbb
ds
sbb
xor
lret
jbe
daa
xor
es
mov
cwtl
rorb
push
test
mov
fcomi
jp
pop
aaa
cmp
imull
insb
xchg
scas
mov
das
pop
sub
push
push
stos
fwait
cs
sbb
jne
pop
or
adc
cs
imul
xorb
or
imul
xchg
pop
jp
push
push
ds
and
add
popa
or
jns
testb
push
jo
add
mov
rorb
sbb
sbb
loopne
xor
je
andl
pop
and
xlat
inc
sub
jp
inc
pop
enter
flds
or
jbe
add
sbb
popf
je
jp
mov
fisubl
rolb
jns
mov
sub
es
imul
mov
inc
sub
fsubrs
mov
cmpl
xorb
mov
xchg
fidivl
mov
cmp
mov
repz
je
or
push
pusha
jnp
jbe
sbb
insb
add
ja
lahf
pop
add
mov
cmp
xor
gs
lock
sbb
rolb
xlat
rolb
mov
test
push
insl
popf
cmpsl
sub
filds
fldcw
ja
inc
shrb
and
or
mov
mov
sbb
popf
mov
jp
adc
and
push
sub
inc
test
adc
push
roll
pop
jp
adc
pop
xor
ss
add
sub
retw
insl
or
jle
loope
lods
xor
cmp
ljmp
xchg
rcl
sub
lock
loopne
pop
xchg
in
inc
inc
mov
pop
clc
inc
jns
xor
add
mov
inc
lods
flds
loop
shll
or
stc
mov
sti
inc
jecxz
dec
add
dec
int
in
add
insl
mov
add
inc
mov
or
jno
add
push
lods
add
jne
jp
clc
xchg
aas
jge
fstpt
adc
das
adc
fidivrl
or
add
subb
inc
adc
sub
loope
push
pop
lds
testb
icebp
push
mov
inc
icebp
aam
and
xchg
inc
shlb
inc
cwtl
stc
dec
rclb
lret
jmp
mov
pop
pop
and
sbb
and
ret
in
adc
xchg
pop
movl
or
push
pop
add
rorl
pop
add
pop
add
mov
xor
and
mov
jno
pop
xor
jle
mov
or
mull
sub
push
es
lods
test
mov
loope
jne
or
insb
xchg
sub
mov
das
xchg
fwait
adc
xchg
fwait
sbb
inc
and
and
fistpl
test
adc
sbb
scas
pushf
add
icebp
sub
inc
inc
into
jb
dec
aaa
add
xchg
push
fmul
mov
pusha
xor
push
sbb
mov
jmp
out
cmp
dec
loopne
in
ffreep
jge
rcr
add
and
pop
mov
pop
fldt
daa
mov
mov
fbld
pop
add
xor
nop
push
rorl
and
std
mov
cmp
jo
pop
lods
test
push
xor
inc
pop
mov
nop
cmp
jno
pop
push
mov
cli
in
push
add
add
xor
shlb
dec
rcrl
push
test
and
mov
xchg
outsl
fucomi
cs
push
fsubs
fprem
xchg
pop
sbb
or
jge
jo
ret
rorl
mov
rcl
lret
movsb
sub
gs
xchg
insl
sbbl
mov
xor
stos
leave
or
cmpsl
mov
jecxz
lods
das
je
jnp
std
push
loope
xchg
jno
xchg
ret
xchg
enter
js
mov
sub
andb
mov
fidivl
jno
sbb
jbe
pop
nop
loopne
cmc
xor
xchg
add
out
mov
mov
and
sbb
lods
add
rcr
mov
push
pop
out
push
or
xchg
jmp
bound
bound
xchg
pusha
pusha
jl
scas
mov
addb
out
xor
add
mov
pushf
add
mov
mov
cmp
lods
sarb
add
add
jae
rolb
fnstcw
xor
xor
lea
mov
cs
mov
int
add
jl
rcrl
mov
push
mov
sbb
pop
mov
mov
mov
fstp
add
push
xor
push
jmp
popl
fcmove
or
or
out
sysenter
pop
iret
lods
push
popa
call
fnstcw
lahf
stos
ret
push
inc
bound
dec
inc
aas
lahf
movl
jno
adc
pop
lock
pushf
sub
xchg
push
popf
not
nop
adc
nop
ficoml
jmp
dec
arpl
add
or
push
repz
push
dec
mov
xor
pop
fcoms
test
arpl
dec
aas
fistpl
jo
and
lock
mov
xlat
pop
ljmp
je
movsl
push
aad
xlat
and
adc
in
nop
sbb
xor
dec
mov
dec
jl
mov
ljmp
imul
mov
adc
out
cmpsb
dec
sub
sbbb
lret
adc
xchg
mov
loope
xchg
cmc
enter
mov
jp
sub
loope
add
sub
hlt
jae
sarl
cmp
arpl
rcll
test
adc
push
ficomps
ret
leave
add
sbb
aam
rorl
movsb
xor
or
push
lahf
movsl
inc
jb
jp
loope
in
jmp
mov
push
add
push
xchg
or
out
mov
adc
mov
mov
test
pop
pop
xchg
icebp
jo
adc
test
inc
pop
gs
and
or
push
mov
mov
sti
cmp
dec
out
adc
fstps
adc
mov
push
loope
je
xor
in
loope
cmp
or
add
push
inc
pop
repnz
adc
push
pop
mov
sub
adc
insb
inc
sub
ss
pop
mov
mov
or
dec
lea
jmp
xchg
mov
jb
bound
sahf
dec
xchg
imul
dec
nop
repnz
add
mov
inc
jle
add
mov
cwtl
adc
or
fstl
mov
add
dec
cs
adc
cmpl
gs
xlat
xlat
mov
sbbb
js
mov
subl
loop
mov
inc
add
ficompl
push
loopne
cs
mov
icebp
add
cmp
xor
imul
movsb
std
and
add
push
lock
sub
stc
pop
mov
cmpsb
cmc
pop
adc
push
jmp
dec
pop
xor
dec
mov
xlat
shll
push
jo
and
mov
mov
xor
in
mov
lahf
cltd
xor
mov
aas
xor
adc
sbb
add
imul
cmp
push
push
mov
daa
xlat
jo
add
push
das
stc
push
mov
aaa
mov
leave
roll
fwait
add
inc
inc
mov
mov
pop
jmp
imul
loope
in
aad
cltd
xor
add
or
aaa
fwait
pusha
xchg
sbb
fcoms
subl
push
or
repnz
mov
jne
fcomps
test
jecxz
and
sub
inc
xlat
lods
adc
push
enter
lea
jle
insl
imul
sbb
mov
push
imul
in
loope
sub
movsl
js
in
push
jnp
popa
mov
push
daa
inc
mov
add
mov
stos
test
mov
popf
xor
into
add
pusha
jnp
dec
xchg
dec
adc
xchg
xchg
sbb
inc
imul
mov
lea
and
jle
jo
and
das
add
push
xlat
mov
fsubrs
seto
mov
push
sbb
jecxz
out
imul
push
add
dec
mov
push
aaa
movsb
movsl
repz
mov
mov
fldcw
aad
inc
xor
xor
lods
pop
and
dec
iret
leave
adc
cmp
add
loop
jmp
adc
xchg
xchg
add
bound
enter
daa
or
push
or
pop
mov
sbb
je
sub
push
cmpsl
sbb
imul
shll
push
and
mov
push
inc
iret
xlat
add
push
les
sub
sbb
and
mov
cld
pop
add
roll
or
pshufw
popa
pop
sub
adc
cmp
arpl
out
mov
mov
sbb
ret
movsb
add
add
push
shlb
pop
aad
scas
popl
into
and
adc
jo
pushf
mov
or
stc
test
popa
das
or
and
xorb
mov
sbb
push
lret
dec
hlt
jo,pn
sahf
cld
sti
mull
pushl
popf
dec
sbb
leave
or
ret
push
dec
adc
das
pop
outsl
add
in
mov
lds
data16
int
test
sub
add
add
in
sub
lahf
lods
mov
dec
xchg
add
stos
push
imul
jg
jge
push
push
cmpl
in
push
and
xor
or
mov
ret
loopne
add
xor
dec
lcall
clc
ret
xchg
sub
std
mov
lret
push
aaa
out
mov
or
dec
dec
fcomps
aas
sbb
sarb
imul
mov
cmp
mov
mov
pop
dec
sarb
add
int3
push
push
and
sahf
and
push
inc
xchg
popa
inc
in
fldl
aas
test
mov
int3
dec
inc
mov
iret
sub
loope
leave
leave
pushf
push
fildl
pop
add
cmc
xor
and
icebp
sub
jmp
push
jl
out
leave
or
push
xor
xchg
xor
jl
sub
mov
stc
shlb
roll
push
add
and
mov
mov
cmp
mov
xor
daa
adc
sbb
and
scas
sbb
mov
sub
test
add
sub
fstl
dec
push
repz
movsb
xchg
arpl
cmpsl
in
out
and
sbb
or
ret
xchg
push
or
mov
std
out
lock
and
rolb
sub
xchg
enter
dec
adcl
rolb
fstpt
lahf
movsl
and
fidivrl
es
jmp
lret
xor
push
arpl
pop
mov
stos
fbld
pop
push
inc
and
sbb
sub
and
add
mov
inc
mov
adc
inc
pop
mov
mov
les
int3
ja
insl
bound
addr16
fucomi
insl
dec
imul
xchg
arpl
cmpsb
mov
mov
jnp
jbe
add
push
outsl
loopne
dec
mov
in
into
mov
sbb
scas
xchg
fwait
inc
push
push
cwtl
sub
lret
inc
mov
dec
movsb
ret
ficompl
lcall
mov
andb
in
mov
sarl
adc
mov
out
cwtl
push
jnp
push
push
xor
xor
pop
cs
adc
xchg
pop
clc
mov
pop
lds
jg
or
push
pop
test
cmpsl
cmp
mov
addr16
sub
arpl
sarb
xchg
mov
adc
jae
jbe
cwtl
rcrb
sbb
dec
pop
pop
mov
fs
gs
mov
lret
sti
popa
add
add
cwtl
xor
pushf
cmp
inc
ja
mov
adc
mov
aad
hlt
aaa
mov
xchg
adc
icebp
xor
mov
jb
cmp
or
xchg
lahf
lcall
cmc
push
pop
xchg
fidivrs
mov
inc
out
lods
scas
sub
xchg
dec
sahf
mov
fbld
xlat
mov
add
sub
roll
aas
mov
jle
int
pop
pop
out
scas
cmp
pop
mov
mov
mov
and
outsl
inc
and
mov
add
add
cs
mov
dec
pop
and
ret
aaa
stos
int3
lods
sbb
scas
jmp
dec
ja
add
pop
xchg
popf
inc
scas
data16
add
pusha
jl
stos
or
xchg
cmpsl
or
sti
xor
outsb
filds
fbld
mov
pop
movsl
lds
add
inc
in
popf
arpl
gs
testl
icebp
pop
ds
fucomip
mov
ficomps
xlat
fildll
xor
rcr
shll
jns
sub
mov
rorb
sti
and
cmp
xor
mov
sub
fnstsw
xchg
dec
adc
xchg
fcoms
iret
stos
ja
stos
leave
pop
das
mov
cmc
jnp
ficompl
arpl
push
ja
cltd
rolb
jg
mov
jb
sbb
lods
jmp
mov
jle
mov
rcrb
pop
sarl
push
fistpl
sbb
test
push
ja
test
xchg
jns
jnp
loope
rcrl
pop
xor
out
dec
inc
mov
pushf
cmp
inc
xchg
out
das
bound
mov
ds
bound
jno
add
mov
out
mov
add
sub
cmpsb
test
xchg
jge
test
sub
pop
and
xchg
jb
mov
jecxz
sbb
idiv
sub
sti
cmpsb
mov
adc
iret
ret
mov
rol
dec
push
xchg
xbegin
and
or
arpl
stc
adc
dec
stos
loopne
daa
sub
push
cmp
popa
push
lods
andl
sub
test
fs
iret
jl
add
in
fistps
push
pop
add
movsb
push
xchg
sbb
cmp
testl
add
add
and
dec
inc
pusha
mov
mov
test
bound
loop
adc
xor
xchg
dec
cli
dec
ret
iret
xor
and
js
pop
and
or
mov
mov
mov
and
test
jecxz
and
adc
pop
xor
or
xor
repz
lods
dec
pop
jecxz
scas
arpl
scas
inc
xor
push
inc
dec
xor
push
test
cltd
fists
and
pop
push
cmp
test
add
add
inc
lea
xchg
jl
xchg
adc
and
xor
add
daa
hlt
pop
rcl
aaa
ret
leave
shll
mov
jb
mov
adc
js
hlt
jo
adc
setbe
push
add
mov
repnz
push
push
xorb
iret
and
mov
insl
mov
mov
das
pop
push
sub
cltd
rclb
sbb
inc
std
or
adc
push
lds
xchg
jo
adc
mov
xor
sbb
inc
or
dec
dec
les
roll
les
int3
loope
and
add
sub
shrb
ljmp
jb
and
sbb
sbb
jnp
shrb
adc
jae
testb
pop
nop
push
loope
adc
js
cli
in
jl
jge
arpl
add
mov
or
mov
shrl
add
push
jl
mov
jae
cmpl
sahf
mov
loopne
push
jno
into
scas
add
sbb
mov
inc
mov
and
xchg
lret
mov
xchg
in
in
rol
scas
nop
push
dec
fcompl
lods
sbbl
and
mov
das
and
cmp
and
adc
cmp
leave
cmc
enter
inc
sub
and
sbb
stc
mov
das
cmp
sbb
out
adc
jecxz
cwtl
les
out
sub
fsts
xor
call
int3
fs
loop
xchg
fldl2e
xor
inc
add
ret
roll
cwtl
test
dec
loop
out
add
inc
loop
test
lods
ret
popa
sub
adc
ficoms
scas
sub
or
insl
jp
sub
es
cmp
push
push
dec
and
jno
cmp
out
shlb
stos
and
xor
pop
and
push
push
nop
js
jmp
fcompl
cmp
addb
and
out
push
movb
jmp
cmp
clc
mov
jecxz
scas
xchg
mov
in
mov
xor
add
push
push
mov
ficomps
daa
inc
or
jmp
bound
dec
add
repz
rcrb
les
add
das
cwtl
in
sbb
sub
popa
stc
das
dec
fidivl
sub
nop
cmp
insb
arpl
push
xlat
out
aam
pushf
cmc
mov
sbb
sub
dec
out
scas
push
xor
jp
inc
pusha
jmp
lahf
bound
jmp
pop
nop
mov
lods
daa
adc
in
xchg
fidivrl
scas
xchg
sub
fimull
sti
sub
sbb
jl
out
xchg
mov
xchg
imul
adc
es
dec
and
push
add
dec
push
ja
notl
test
ret
xorl
les
adc
xor
div
scas
pop
mov
addb
idivl
into
stc
mov
mov
and
push
out
ds
out
sahf
dec
cltd
pop
xor
mov
dec
xor
xor
mov
xor
movsl
and
sbb
cltd
mov
add
and
insb
in
add
adc
andl
and
sbb
xchg
add
jo
or
loope
push
xor
mov
push
les
sbb
cmp
je
in
sbb
std
xchg
xchg
and
aaa
jle
adc
scas
add
dec
adc
sub
orl
mov
adc
xorl
dec
inc
pop
add
inc
addr16
movsl
test
mov
mov
cmc
cmp
xchg
push
dec
cmpsl
iret
shlb
int
mov
xlat
scas
push
jg,pn
ret
xchg
mov
or
ret
or
stos
popa
cmp
rol
or
inc
pusha
dec
ret
into
daa
and
dec
aad
stc
and
fidivrl
sub
stos
dec
int3
and
add
xchg
iret
and
pushw
add
sbb
xchg
mov
psubb
add
cmp
in
jno
loop
cmc
pop
call
aad
xchg
push
stos
dec
cwtl
popa
cmc
cmp
icebp
add
mov
add
xchg
or
cmp
lret
push
loopne
ret
test
push
mov
rolb
push
ret
sbb
movsb
jnp
phsubd
cmp
or
xor
ror
mov
rol
and
sub
addb
stc
mov
stc
inc
pusha
xor
lret
insb
outsl
std
lods
and
dec
loop
testl
lea
mov
mov
or
in
push
ret
mov
add
call
pop
test
gs
sub
jmp
adc
daa
sub
and
jle
pop
and
std
mov
pop
push
imul
adc
and
insb
subb
mov
les
jo
and
sbb
push
xchg
xor
xchg
mov
fcoms
daa
pop
sub
inc
add
imul
lods
dec
std
fadds
or
ret
loopne
addr16
mov
dec
stc
and
mov
sub
daa
imul
sbb
push
adc
add
add
sub
mov
outsb
mov
loopne
add
scas
dec
adc
mov
scas
faddl
fnsetpm(287
andl
mov
jb
rclb
sub
xor
mov
lods
aas
push
and
adc
and
sbb
adc
sub
xor
test
adc
mov
flds
fstpt
sub
push
lea
push
iret
popa
lock
push
rcrb
addb
jo
cmp
js
and
lret
lret
les
fsub
adc
movl
ret
inc
shrb
pop
add
xchg
dec
mov
dec
adc
bound
push
iret
test
sbb
xchg
jns
dec
rcll
adc
in
xor
test
lcall
add
push
jns
adc
cld
out
ja,pn
and
and
sahf
jae
gs
shlb
mov
adc
sbb
jns
adc
repz
les
data16
mov
mov
adc
cmp
pop
jmp
lahf
push
pop
pop
les
mov
scas
pop
add
data16
pop
popa
sub
xchg
je
enter
imulb
scas
pop
pop
subb
adc
out
roll
xchg
mov
mov
jmp
loope
leave
icebp
mov
and
fstp
js
insl
and
mov
mov
add
mov
jae
popa
sub
das
daa
and
xor
mov
push
push
imul
adc
sarl
mov
push
es
roll
je
aad
push
psrlq
orl
aaa
xchg
xchg
inc
fcoms
push
lock
aam
and
aaa
mov
ljmp
xor
es
lods
xchg
stos
lea
adc
mov
insb
jecxz
adc
mov
imul
jae
rcl
test
mov
push
xor
or
add
mov
ja
mov
ja
push
out
xchg
fmull
inc
push
cmp
mov
movsb
sahf
push
pop
or
ja
sbbl
push
daa
mull
or
mov
test
pop
mov
daa
add
daa
lret
inc
aam
push
inc
pop
iret
or
xor
sar
lcall
mov
scas
dec
pop
test
call
lock
xchg
in
arpl
dec
test
or
push
out
mov
fnstenv
push
jecxz
test
and
sti
and
sub
inc
inc
pusha
and
icebp
push
cmpl
push
push
jl
dec
nop
cmp
das
imul
mov
mov
push
out
mov
rcll
rorl
je
or
cwtl
dec
orl
pop
adc
add
outsb
add
test
push
dec
cmp
orb
add
sub
sbb
cmpsl
inc
cs
clc
add
fildll
add
mov
ret
xchg
test
addl
nop
jo
bound
lea
inc
fsubs
or
push
loope
push
stos
dec
clc
dec
addr16
pop
popf
sub
sub
inc
cmc
sub
shll
dec
test
jns
cmpsb
xchg
push
adc
sbb
adc
and
or
idivl
imul
inc
jae
push
xlat
decl
sti
in
mov
es
jnp
pop
and
xchg
rorb
pop
outsl
sub
push
mov
lea
sbb
and
test
das
adc
mov
inc
cmp
pop
daa
movsb
lds
inc
jb
cli
test
mov
mov
adc
into
fisubrl
jo
aas
push
iret
add
gs
hlt
add
mov
mov
jg
out
sarb
call
xchg
aam
dec
lahf
iret
xor
sbbb
mov
jecxz
inc
je
pop
movsl
and
dec
stc
sbb
stos
add
xchg
jae
loopne
je
inc
enter
sarb
ds
nop
cwtl
adc
repz
leave
out
mov
inc
push
in
pop
xchg
je
mov
jo
leave
les
mov
out
push
add
loopne
aad
dec
daa
loope
sbb
les
jecxz
add
sub
pusha
jno
movsl
cmp
adc
iret
es
movsb
xchg
sbb
xor
and
mov
adc
sahf
movsb
add
mov
popf
enter
pop
sub
dec
adc
test
adc
iret
insb
cmp
int3
inc
add
xchg
sub
add
stos
add
aas
in
mov
int3
dec
mov
adc
inc
sahf
sbb
mov
fldt
cwtl
out
or
cmp
inc
iret
sbb
push
es
js
add
xchg
mov
adc
and
shl
and
sbb
jo
fdivrs
je
pop
stos
adc
mov
icebp
pusha
mov
jnp
les
sbbb
cmpsl
ficoml
jns
add
jge
out
into
loop
adc
xchg
xchg
arpl
repz
adc
rolb
xchg
push
mov
stc
lds
test
inc
das
jnp
and
push
loopne
jecxz
jle
push
jmp
pop
enter
push
jns
sahf
test
inc
push
sbb
adc
lcall
sbb
pop
sbb
mov
test
cmp
hlt
push
repnz
mov
jo
movsl
mov
cmp
rcr
scas
fs
sbb
pop
popa
or
gs
mov
mov
jle
adc
inc
dec
ljmp
dec
sbb
pop
test
and
cmp
jl
cmp
mov
iret
inc
sbb
add
loope
lret
scas
pop
or
adc
lea
adc
sbb
ja
pop
cmp
xchg
xchg
jle
popa
add
push
ret
mov
incb
test
pop
jge
enter
movsb
inc
iret
or
adc
pop
pop
push
xor
xor
and
pop
pop
negb
pop
xchg
mov
lods
inc
add
xchg
dec
enter
popf
push
xchg
pop
rorb
push
mov
add
sbb
xor
push
or
jne
pop
popa
add
aaa
das
add
or
popl
dec
and
xchg
loopne
test
sbb
imul
adcb
push
out
cltd
icebp
xchg
ror
test
cmp
outsl
iret
push
and
xor
mov
xchg
sub
add
ret
and
into
xchg
mov
movsb
push
imul
or
xchg
out
pop
fcomps
jle
or
inc
sbb
hlt
add
das
or
jge
ret
or
nop
movsb
emms
jo
jns
and
sbbb
movsb
addr16
add
or
dec
pop
jl
jo
gs
stos
aad
pop
dec
ret
push
sbb
stc
daa
or
movsb
loopne
sbb
cli
and
jns
ret
jmp
cmp
nop
push
xchg
add
xor
rolb
jl
add
push
push
out
cmp
shrl
je
add
shrl
int3
jb
popa
mov
xchg
or
gs
lea
add
mov
push
inc
pop
add
in
dec
xchg
loopne
popa
jg
fstl
xchg
and
dec
loope
xchg
movsb
ret
or
icebp
inc
or
dec
mov
xchg
fstl
rcrl
pop
fsubs
pop
jle
pop
dec
or
jb
jo
pop
test
cwtl
ror
add
mov
xchg
mov
mov
jl
push
ret
inc
clc
add
inc
dec
sbb
or
or
out
jnp
add
sti
dec
xor
push
mov
filds
psubsb
mov
dec
addl
movsb
pop
shlb
ficoml
pushl
inc
pop
adc
jl
jle
cwtl
add
lahf
xchg
loopne
xlat
rolb
dec
and
inc
mov
push
mov
sbb
adc
ret
add
add
arpl
xorl
xlat
inc
adc
cmp
jle
push
cmp
push
imul
addl
sub
inc
push
or
push
add
mov
lea
sbb
add
ds
or
adc
jns
jl
mov
out
push
add
roll
inc
cs
lcall
xchg
and
mov
adc
aaa
cmp
jns
pop
pop
or
scas
cmp
xor
add
xchg
xor
inc
sub
push
lret
sbb
lret
pop
adc
xchg
sub
lock
push
xor
leave
aaa
push
fld
or
outsb
mov
cmpsl
inc
mov
loope
xlat
inc
jg
jne,pt
mov
fstp
mov
sar
jne
sub
jp
stos
test
shlb
pop
mov
int3
and
push
js
shrl
mov
xchg
and
je
jg
shll
into
inc
jmp
pop
ret
sbb
mov
inc
cmp
jnp
cmp
and
xor
pop
add
push
inc
and
mov
jge
sbb
lcall
mov
aaa
loopne
or
aad
jno
adcb
push
int3
sub
add
jns
orb
pop
adc
mov
pop
add
stos
add
xor
or
push
cs
jo,pn
rorb
ja
xorb
stos
mov
or
cmpsl
loopne
jne
mov
adc
js
fadds
scas
fsubrp
aam
int
and
mov
sbb
je
and
je
mov
popa
or
pop
loope
inc
sarb
loopne
stos
ret
xchg
sahf
or
movsb
loopne
sbb
divl
ret
cwtl
cltd
shll
das
or
mov
fwait
mov
jecxz
dec
xor
push
xlat
and
js
cmp
dec
sub
dec
xchg
scas
icebp
cli
xor
sahf
sub
daa
shll
add
push
inc
dec
jb
push
leave
adc
or
js
cmp
and
andb
test
test
jbe
and
xor
lret
inc
add
push
push
imul
lret
add
adc
push
adc
push
mov
iret
push
adc
xchg
pop
jp
aam
sbb
adc
inc
xchg
push
and
push
or
test
cmp
pop
add
xor
sbb
and
pop
lods
nop
push
inc
mov
sarb
fisttps
mov
pop
xor
xor
pop
mov
add
jns
rorb
pop
cli
addr16
cltd
sbb
lods
test
pop
cmp
test
addr16
out
or
jb
cltd
imul
pop
insl
push
mov
dec
xchg
adc
xchg
add
mov
adc
add
cmp
daa
xor
mov
in
rolb
sbb
push
shll
pop
roll
in
popf
das
repz
fadds
xor
jns
enter
adc
iret
xchg
bound
cmp
add
xchg
mov
sub
and
dec
insb
in
std
cmp
rolb
stos
jbe
mov
jae
pop
les
out
rolb
adcl
sub
notw
loop
sbb
sbb
add
rorl
fidivrl
and
addb
mov
and
xor
test
sub
mov
push
mov
sub
add
jae
int
jo
and
jle
mov
push
inc
xlat
les
inc
mov
pop
nop
push
push
sbb
sarb
mov
pop
pop
mov
pop
daa
sub
sbb
mov
dec
mov
adc
das
sub
pop
jecxz
int
adc
mov
movsb
or
xchg
jo
loopne
popa
inc
into
inc
and
inc
cmp
or
fisubrl
lea
aam
adcl
inc
xchg
scas
sub
mov
imul
shrb
int
add
rcrl
je
inc
xchg
and
pusha
mov
loopne
fstl
pop
shlb
cmpsb
sbb
pop
pop
ret
and
ret
push
xorb
lds
dec
cli
xchg
loop
xchg
loope
into
mov
fnstcw
inc
lods
les
adc
xchg
js
sbb
js
adc
mov
add
repz
and
scas
add
loop
leave
add
les
mov
xchg
xor
add
jae
or
insb
dec
add
fistpll
xchg
cltd
mov
sbb
iret
add
jo
push
add
cmpsb
fcoms
out
mov
mov
mov
loope
jg
aad
xchg
je
test
sbb
cmpsl
aam
add
loope
jecxz
ret
sub
addr16
das
sarl
xchg
test
cmp
inc
pop
cmp
jbe
jle
add
fisubl
jne
sbbl
xchg
iret
xchg
je
add
pop
adc
sub
add
jo
mov
dec
loopne
pop
arpl
mov
sub
stos
ja
jbe
lret
mov
dec
adc
repnz
mov
enter
jb
mul
and
mov
es
jbe
xor
sbb
dec
xor
mov
pushf
or
xor
in
lea
sbb
enter
push
pop
fcoml
shlb
and
inc
movsb
adc
lret
insl
pop
pop
adc
add
cmp
negb
add
push
jnp
pop
and
loope
mov
push
cwtl
add
ljmp
or
sub
fs
es
add
inc
inc
inc
data16
sbb
mov
pop
pop
mov
aad
and
mov
ret
test
push
adc
pop
sbb
ja
jp
cmp
jb
push
icebp
mov
and
add
xchg
add
pop
loop
add
pop
bound
push
mov
les
add
aad
fsubrs
add
test
cmp
inc
push
loope
add
pop
hlt
orb
add
adc
pop
arpl
dec
add
addl
pop
push
add
aad
xchg
loop
lret
enter
mov
fcomi
std
pusha
dec
loope
pop
insl
mov
iret
lods
add
xor
inc
movsb
sub
inc
sub
mov
push
push
scas
in
push
dec
movsl
push
nop
xor
outsb
cli
xchg
jnp
sar
xchg
xor
ss
clc
icebp
subl
lods
out
push
dec
lahf
sbb
xchg
adc
fisubs
or
push
scas
xor
jmp
std
sub
and
pop
push
mov
and
imul
dec
push
dec
adc
out
pop
mov
fwait
add
xor
or
dec
pop
sub
pop
es
pusha
hlt
mov
sbb
imul
lods
testl
mov
mov
js
inc
movsl
jno
leave
mov
add
pop
or
fistpl
test
add
jns
and
and
xor
add
popa
or
cli
and
push
mov
and
push
lret
or
cmpsb
add
add
sub
xor
das
fstps
cmp
andl
jnp
or
dec
or
push
adc
adc
or
or
cltd
adc
orl
mov
insb
hlt
or
in
push
mov
aaa
jne
sbb
insb
nop
mov
in
add
adc
cmp
push
push
add
and
xchg
jle
ret
scas
pop
pop
setnp
mov
inc
adc
dec
inc
sub
sbb
daa
push
xor
ja
inc
pop
enter
mov
and
pop
lahf
mov
pop
sbb
adc
ret
mov
xchg
pop
xchg
push
outsb
pusha
adc
lods
adc
push
jne
sub
lahf
mov
arpl
shrl
inc
mov
dec
loope
js
jae
orb
cmp
mov
fldt
movsl
test
daa
popa
pop
dec
lods
sbb
sti
push
cmp
ret
push
adc
mov
xchg
jo
je
jo
and
cmp
cmp
test
fldt
or
jmp
or
out
push
dec
cmp
jo
test
sub
adc
out
enter
mov
dec
push
andl
orl
ret
add
cmp
test
addb
addl
mov
mov
fistl
mov
dec
inc
imul
adcl
sbb
lods
xor
inc
test
inc
jb
fistpll
sbb
jne
js
pop
add
or
inc
test
add
in
fs
dec
and
lods
fistps
mov
adcl
inc
bt
push
lods
adc
sar
int3
add
jo
jae
push
popa
and
aas
pop
add
jmp
pop
popa
jl
mov
push
jo
adc
pop
pop
sbb
xor
nop
xchg
bound
push
lods
nop
jbe
mov
insb
sbb
add
test
xor
and
aaa
jo
dec
cmpsb
or
push
pusha
sub
clc
inc
nop
pop
mov
xchg
stc
xchg
jno
dec
shll
sahf
ds
mov
inc
jecxz
aaa
fdivrs
es
test
push
jmp
add
xor
cmpsl
add
fcmovu
ds
cmp
add
and
xor
mov
sub
aaa
mov
jno
in
jne
popa
and
pushf
cmp
adc
jbe
jp
mov
rolb
mov
mov
inc
or
movsl
adc
lea
add
xor
sub
add
add
pop
cmpsb
mov
pop
xchg
or
push
adc
cmpsl
mov
sbb
push
jo
inc
mov
mov
in
xorl
jno
fstp
sub
inc
and
pushf
rolb
ret
jl
cmp
insb
leave
sbb
cmp
add
inc
cmp
imul
inc
pop
adc
dec
pop
es
cmpsl
loope
adc
mov
jg
jne
adc
jae
dec
and
ret
adc
lea
scas
xchg
mov
out
pop
fs
insl
jo
push
sbb
jle
push
add
arpl
shl
jl
dec
sbb
cs
push
push
sbb
imul
xlat
mov
mov
iret
inc
and
mov
fucomp
add
sti
sub
sbb
push
xchg
nop
or
sub
shll
add
lret
mov
pop
jae
inc
mov
pop
sub
xorb
arpl
outsl
cmpsl
pop
cmp
pop
sbb
mov
adc
daa
scas
push
inc
loopne
lods
mov
dec
pusha
add
lock
dec
test
repz
imul
or
push
addr16
sub
bound
dec
stos
ja
outsl
rcrb
sbb
sub
add
ss
iret
mov
mov
shll
push
inc
mov
sub
mul
push
mov
aad
fildll
insb
addl
add
jle
nop
iret
cld
rolb
sub
jg
insb
int
push
push
xor
sub
push
cs
xlat
jp
sub
int3
in
cmp
mov
xchg
mov
in
or
mov
add
andl
mov
xor
adc
test
repnz
jmp
outsb
fstpt
stos
add
imul
mov
aaa
js
pop
adc
adc
iret
vpminub
scas
ljmp
sbb
or
ja
and
pusha
dec
dec
push
adc
xchg
or
xchg
stc
dec
das
xor
jge
movsb
test
pop
insl
jle
pusha
adc
ret
aam
mov
push
scas
pop
call
aad
popa
fs
pop
lea
test
mov
push
std
xor
push
rolb
xor
mov
sbb
cmp
cltd
fwait
xchg
cltd
sbb
add
inc
fidivs
add
daa
jmp
fnstsw
icebp
mov
iret
adc
add
jp
sbb
dec
inc
addb
xchg
xlat
inc
notl
jl
popa
xchg
addb
xchg
xorb
mov
jo
or
je
mov
repnz
subl
push
push
insb
pop
sbb
bound
lods
adc
xor
push
push
stos
gs
add
cmp
iret
push
adc
add
mov
sahf
scas
hlt
shrl
lret
ficomps
xchg
cmp
xor
dec
add
and
inc
dec
mulb
imul
add
scas
es
sbbb
pop
ss
add
xor
pop
imulb
stc
pop
es
lahf
add
add
cld
and
push
xor
xlat
pop
jns
pusha
clc
inc
add
cmc
jb
call
lahf
xchg
sbb
out
std
lods
pushf
addb
add
dec
or
cmp
xchg
sub
dec
pop
movsb
out
jno
rcrb
or
dec
mov
push
test
test
add
aaa
dec
dec
mov
push
add
inc
push
adc
sub
pop
push
mov
sbb
iret
add
inc
cmp
repnz
mov
push
adc
iret
int
add
sbb
mov
loopne
push
sub
jg
enter
lods
aaa
inc
add
mov
add
insb
push
add
cmp
sub
sbb
inc
push
fnstenv
movsb
mov
sbb
sbb
lods
inc
add
idivb
inc
or
push
push
addr16
fistl
data16
push
call
adc
negb
test
ret
inc
popa
mov
mov
push
push
icebp
sub
push
or
add
mov
and
xchg
xchg
push
bound
push
pop
loop
fwait
out
dec
xchg
lret
mov
shll
ds
cmp
cmc
lock
and
setns
orb
xor
dec
jo
pop
subl
xlat
sbbb
inc
xchg
shlb
iret
add
adcb
mov
iret
aas
sub
and
js
sti
test
lea
popa
mov
mov
mov
xor
imul
jp
sbb
or
xor
jmp
cmp
xchg
xchg
int
xchg
sub
or
test
dec
jb
xor
lods
mov
xchg
jg
fs
pop
imul
xchg
push
gs
mov
shl
sub
sub
push
je
sbb
xchg
mov
fst
adc
push
mov
mov
cs
inc
pusha
add
js
add
cmc
sbb
das
jns
aas
out
lods
mov
inc
std
sub
xorb
pusha
push
push
aam
ljmp
jne
cmpsb
add
dec
push
sub
sub
and
xchg
and
jmp
push
xchg
inc
xor
fwait
push
jp
lds
adc
xchg
cmpb
in
test
nop
mov
push
sub
mov
aam
imul
test
out
out
out
sbb
push
adc
push
pushl
sub
leave
cmpsl
pop
fmuls
out
dec
mov
mov
mov
and
mov
dec
cmp
adc
dec
fwait
test
jl
pusha
ljmp
push
sub
push
add
jge
inc
add
je
lret
shrb
cmp
push
or
out
test
arpl
test
and
ljmp
inc
push
xor
inc
icebp
or
test
mov
roll
adc
das
jle
das
icebp
rcrb
or
cmc
aad
shlb
jbe
test
adc
push
pop
jmp
xor
push
loope
es
ror
das
addr16
mov
daa
sahf
push
adc
aaa
push
call
ss
mov
sub
or
cmp
out
gs
icebp
ja
push
sbb
adc
shlb
xor
int
xchg
test
inc
adc
or
aad
cmp
pop
test
iret
jo
adc
test
jle
inc
push
or
push
jp
and
add
cmp
jecxz
scas
inc
aaa
in
adc
adc
mov
pusha
mulb
jo
fdivrl
jmp
addr16
sub
addr16
ret
mov
cmpsl
mov
test
cmp
cmp
shlb
add
jge
fisttpl
popa
addb
cli
mov
jne
mov
inc
aaa
sub
or
or
ret
inc
dec
fwait
jge
adc
icebp
jno
popa
sbb
and
ret
sub
xchg
pusha
ja
js
int3
sub
sbb
mov
inc
sub
ret
pop
cmp
mov
shl
fists
addr16
push
cmp
mov
cli
pop
shrb
popa
sbb
and
rorb
fldcw
cmp
jne
add
push
jle
jo
test
sbb
xchg
and
sub
fsubrs
fcmovu
adc
leave
sbb
sub
bound
sub
push
or
cmp
pop
addl
xor
das
inc
jmp
addb
add
call
jno
cmp
js
stos
sub
iret
divl
xchg
ret
xor
loope
push
sbb
or
jmp
jae
movsb
sub
out
cli
ds
or
ja
and
xor
test
sbb
daa
cmp
mov
lret
cmc
arpl
outsl
add
push
jae
mov
or
or
mov
push
stc
pop
sub
add
or
bound
inc
add
push
cmp
add
ret
sbb
cmp
rcll
or
pusha
push
sub
fists
cmc
xchg
add
fst
lret
mov
add
bnd
xor
adc
arpl
pop
sbb
es
cmp
sbb
and
cmc
inc
call
push
fimull
int3
rcrb
lret
lret
and
test
pop
and
insb
rolb
cmp
mov
repz
mov
dec
lcall
dec
lret
xlat
xor
lods
ss
and
add
push
add
popa
push
clc
sbb
les
fbstp
testb
sub
mov
pop
inc
dec
sbb
inc
outsb
lock
sbb
enter
lods
mov
ret
lret
pop
or
add
rorl
aaa
or
ja
adc
jae
cs
push
cmp
sbb
mov
xlat
popa
sbb
std
daa
and
sub
scas
lock
lods
sbb
lods
addl
je
dec
cwtl
adc
rcll
pop
jnp
ss
movsb
inc
lret
and
and
push
sub
pop
adc
aaa
inc
aas
fcoml
or
aaa
lock
sub
or
cs
add
icebp
dec
bound
popa
xor
push
and
push
pop
insl
mov
insl
test
mov
inc
jecxz
enter
or
popa
shlb
sbb
dec
inc
jo
ret
and
sbb
testl
pusha
addr16
xchg
icebp
nop
pusha
or
add
sbb
or
add
es
sbb
adc
cmp
stos
xchg
push
movsb
mov
enter
dec
js
add
push
sbb
rol
add
loopne
nop
sarl
pusha
pop
pop
out
cli
dec
cmp
out
int3
scas
adc
inc
and
iret
in
sub
ret
movl
hlt
aad
ljmp
adc
dec
ret
sbb
sarl
fsubp
test
js
aad
jae
mov
test
ror
js
push
jo
lcall
cmp
lea
lret
lock
dec
sub
adc
pop
jmp
pop
test
pop
ljmp
mov
ret
mov
daa
mov
lret
cmp
sub
hlt
popf
sub
mov
or
popa
insl
inc
lcall
jbe
jbe
sbb
ja
jl
in
rcrl
call
addr16
arpl
add
xchg
or
lea
movsb
sbb
lret
jb
dec
add
mov
mov
xor
push
xchg
iret
pop
mov
xchg
sub
shll
ret
sbb
jno
stos
sbb
adc
pop
xchg
xchg
pop
fwait
sub
dec
das
ss
cmp
sub
push
popf
pop
cmp
cmc
dec
push
dec
jg
push
mov
fmulp
stos
cmpsb
test
jno
or
inc
sub
test
sbb
loopne
out
shr
hlt
divb
sbb
cli
mov
das
cmc
pusha
int3
int
adc
mov
sbbb
mov
fstps
cmpl
test
push
add
push
loopne
inc
mov
cmc
lods
popa
fdiv
addr16
adcl
out
push
xchg
fisttpl
cmp
cmp
adc
and
addb
pusha
add
rcrl
xchg
shll
mov
pop
in
mov
je
push
scas
pop
ret
je
pop
pop
and
movsb
out
int3
outsl
inc
adc
aam
data16
and
inc
leave
out
jg
popa
js
add
jg
fnsave
movsb
pop
xlat
loopne
sti
and
rcl
xor
xor
xor
sahf
xor
sbb
shll
add
sub
or
adc
pushf
push
rorb
iret
add
sub
cltd
jo
addb
arpl
je
shrl
push
fildll
cmp
fstpl
rorb
hlt
sti
nop
gs
scas
jb
add
and
pop
out
inc
and
and
sbb
xchg
push
jno
add
outsl
adc
pop
add
jns
and
jmp
insl
inc
nop
das
xor
aad
push
imul
mov
lods
push
test
sub
andl
inc
sarb
mov
cmp
pop
sub
add
adc
leave
stos
pop
add
test
lahf
movsb
mov
shr
cmc
inc
mov
stc
iret
imul
and
cmp
inc
pop
inc
push
dec
test
leave
dec
rorb
hlt
stos
jne
iret
adc
sahf
subb
das
cmp
or
inc
leave
gs
ret
mov
xchg
int3
push
rorl
adc
mov
movsb
inc
push
ret
mov
sbb
nop
cmp
mov
xor
adc
hlt
ret
pushf
inc
adc
and
daa
dec
inc
dec
nop
xchg
ret
test
or
mov
cmc
icebp
dec
leave
adc
cmp
rclb
sbb
xchg
xor
cli
and
xor
orl
fcoml
and
cmpb
push
lods
xor
and
adc
mov
push
imul
mov
dec
jns
popf
adc
jp
add
mov
bound
cmp
sub
add
add
adc
aaa
add
lods
lcall
cmpsb
inc
cmpb
mov
movsb
dec
jmp
sub
sbb
ljmp
lea
in
iret
imul
add
mov
ja
insl
nop
mov
push
push
or
xchg
gs
sbb
add
in
lret
mov
push
rcl
enter
and
cmpsb
lods
inc
mov
xchg
xchg
mov
lods
pop
sub
roll
mov
lea
jg
or
sub
insl
sbb
xchg
xchg
push
push
mov
xchg
sub
push
push
xchg
pop
jg
fistpl
imul
push
push
subb
imul
xchg
shlb
testl
add
pop
jae
mov
imul
lcall
out
inc
aam
push
arpl
sub
dec
mov
sub
mov
ja
mov
inc
pop
not
add
ror
in
pop
and
mov
xchg
iret
adc
movsb
push
inc
add
in
loopne
loopne
sbb
xor
dec
lret
iret
and
cmp
xor
je
sbb
addr16
and
daa
mov
mov
sti
xchg
sub
add
test
rolb
inc
cmp
push
jno
xchg
add
and
arpl
addr16
movsl
mov
dec
fists
sarl
sbb
int3
xlat
lret
xor
rclb
orb
cmp
jmp
sahf
jns
movsb
mov
movsl
cmc
xchg
jns
push
xchg
pop
das
push
add
rolb
mov
xor
mov
enter
cmc
popf
adc
lds
add
add
push
lods
stc
xchg
and
mov
inc
xchg
pop
push
stos
out
mov
xchg
pop
xchg
add
add
loop
and
rolb
sub
movsl
xor
fwait
and
mov
enter
adcb
ljmp
ret
add
out
inc
out
shl
pop
pop
mov
outsl
leave
mov
push
sub
repnz
jp
sbb
mov
and
or
sahf
pop
popa
xlat
inc
xchg
push
lock
int
pop
and
bound
das
mov
mov
push
jo
and
movsl
add
jne
jnp
sub
dec
rolb
sbb
xor
mov
loope
nop
inc
or
mov
mov
sub
xor
mov
inc
std
mov
xorb
orb
adc
test
pop
xor
xor
outsb
roll
icebp
nop
adc
int
cmc
sub
test
add
jns
jnp
jge
data16
jno
jge
ds
add
xor
movsl
xchg
and
pop
mov
and
xchg
pop
sub
outsb
imul
fwait
and
lret
lret
xchg
cs
sbb
gs
in
add
sub
orb
and
xchg
push
sbb
fistpl
xchg
push
loope
xchg
cmc
gs
aaa
insl
imul
mov
out
mov
mov
pusha
dec
jbe
pusha
test
xor
mov
dec
maskmovq
insb
or
sub
popa
das
stos
and
aad
mov
add
push
add
loop
jb
cmp
cmpsl
mov
inc
iret
cmp
insb
sahf
push
in
mov
push
jb
mov
push
fwait
push
mov
jno
imul
mov
or
pop
add
hlt
addb
dec
inc
das
scas
ja
inc
test
add
add
push
lods
clc
out
push
mulb
imul
repnz
xor
sub
mov
orl
dec
movsb
pop
inc
inc
arpl
pop
lret
fisubl
test
inc
or
sbbl
in
lock
xchg
pop
jg
lods
mov
jle
movsl
lods
mov
rorb
out
sbb
adc
or
jns
dec
sub
aam
lods
inc
nop
and
test
mov
push
push
loopne
ds
andb
test
mov
mov
in
cwtl
les
fldl2e
negl
push
xor
lods
movsb
fbld
in
loope
pop
sbb
int3
stos
xor
inc
sub
xor
push
xor
aas
xor
inc
mov
xor
in
and
or
mov
rolb
xor
dec
mov
sbb
ret
iret
push
cmp
xchg
adc
xor
jns
xchg
adc
xor
pop
xor
insl
test
sarl
insb
mov
push
dec
push
or
pusha
jns
push
icebp
sub
add
sub
cmp
xor
sub
fsubrl
or
adc
sub
loopne
cmp
xor
sub
dec
push
imul
mov
ds
sbb
data16
pop
pop
inc
inc
inc
mull
js
sbb
iret
out
rorl
push
movsl
mov
aaa
ret
and
cmp
dec
fld
jb
pop
loope
daa
push
pop
push
or
rcl
cmp
add
movsl
in
and
imul
pop
jns
jne
jne
add
push
cli
push
mov
xchg
xchg
inc
cmp
pop
aaa
push
fists
push
or
jl
push
ficomps
push
cmp
sub
push
add
cmp
imul
sarl
fstl
add
es
xchg
xchg
and
xor
mov
data16
mov
or
sub
movsl
ret
popf
cmp
imul
pusha
jge
cmpsl
fmul
or
jbe
or
fldcw
xor
pop
mov
or
icebp
cli
pop
xchg
in
jae
aaa
fsubl
inc
scas
push
pop
adc
xchg
fildll
or
cmpsb
popa
es
mov
pop
sbb
fstpl
mov
add
and
loope
jb
je
jecxz
add
repnz
cltd
nop
xchg
push
or
das
xor
es
test
sbb
or
ss
or
sbb
sbb
mov
jecxz
sbbb
scas
mov
mov
hlt
hlt
jle
sub
jno
insl
add
xchg
test
and
bound
mov
scas
int3
inc
and
xchg
xlat
jg
mov
cld
add
add
push
xchg
xchg
xchg
stos
ret
xchg
mov
pop
sbb
out
andl
pop
xchg
movsl
mov
sbb
rorl
push
ds
scas
sub
add
dec
sbb
mull
xchg
cmp
and
push
addr16
std
add
shlb
daa
lods
add
stc
sub
jne
cwtl
mov
pusha
add
lock
mov
je
jmp
mov
add
int3
add
sub
es
test
jp
das
push
pop
adc
test
aaa
rorb
sbb
sub
cltd
cli
jb
inc
push
jmp
je
pop
jns
add
xchg
out
pop
test
ss
adc
addr16
or
shlb
icebp
inc
and
test
cltd
push
jbe
lods
pop
movsb
jns
sti
rcrb
rolb
test
loope
lods
fsts
dec
dec
call
lods
and
cmp
ret
pushf
inc
inc
pop
sub
dec
inc
pop
add
fs
mov
idivl
xchg
mov
scas
in
sbb
int
xlat
sub
orb
push
into
icebp
inc
add
push
xor
lahf
shlb
ret
add
xor
cwtl
or
xchg
jne
mov
rcrb
and
cmp
or
fiadds
je
ss
insl
mov
xlat
inc
mov
daa
mov
sbb
stos
add
adc
fisttpl
mov
mov
gs
test
loopne
stos
add
sarb
insb
cmpsb
sahf
test
out
sub
cmpsl
add
and
dec
pop
js
aam
imul
and
imul
push
into
insb
fstp
aaa
cmp
inc
fldenv
inc
ja
iret
je
jno
mov
or
scas
push
lahf
addr16
and
ret
adc
cwtl
mov
dec
mov
sbb
lahf
test
mov
das
sub
jne
nop
inc
pop
xchg
mov
sbb
pusha
adc
pop
add
jno
repz
and
out
divl
pop
add
out
inc
inc
cwtl
xor
sub
add
test
es
mov
ret
addb
push
push
jno
dec
js
enter
shll
and
psrld
ja
and
and
inc
jp
bound
fdivl
ljmp
sbb
xlat
mov
sarl
sahf
fisubl
or
cld
push
add
mov
or
test
test
lahf
push
arpl
cld
ret
xchg
add
inc
sub
loope
inc
mov
inc
or
orb
mov
adc
and
inc
loopne
addr16
mov
or
cmpsb
ss
jp
push
insl
lahf
and
loopne
mov
pop
jmp
cmp
std
inc
mov
pusha
mov
push
sub
push
gs
push
pop
les
mov
stos
movsb
jno
add
mov
mov
int
iret
clc
or
addr16
cmp
mov
clc
or
fwait
popf
jl
les
loopne
cwtl
or
iret
xor
lret
and
push
ret
cltd
and
movsb
pop
nop
xchg
pop
inc
and
mov
arpl
dec
add
dec
hlt
mov
rcll
mov
xor
push
jge
sbb
and
inc
sub
add
xchg
mov
or
and
icebp
bound
in
mov
pop
incl
popf
outsb
ret
xor
adc
test
mov
xchg
jne
mov
addr16
inc
sub
sub
push
or
dec
movsl
cmp
inc
push
mov
mov
mov
loop
adc
adc
in
mov
pop
xor
fs
dec
xlat
adc
sbb
inc
in
xlat
cmp
fildl
and
arpl
js
lods
sub
int
xor
loope
adc
fcmovbe
jb
lds
inc
add
outsb
or
cmp
sub
imul
push
mov
mov
push
cmp
ffreep
out
adc
stos
sbb
test
xlat
cmc
jl
dec
inc
das
inc
js
pop
test
push
or
ja
test
and
dec
addr16
movsl
jmp
stos
adcb
fwait
test
sarb
add
push
xchg
stc
ljmp
mov
subb
std
xchg
mov
adc
jmp
bound
lods
jbe
and
into
je
sbb
cmp
sub
mov
lea
daa
jp
shll
add
dec
lods
jg
jle
cmpsl
je
fsts
mov
bound
lock
cmp
roll
pop
daa
adc
mov
pop
pop
add
adc
pop
fwait
fs
aad
shll
test
cmp
and
and
js
pop
test
cmp
and
cmp
push
dec
push
bound
cmpsl
dec
xchg
sub
push
dec
sub
add
jbe
leave
les
loope
xchg
xchg
mov
aaa
loopne
or
div
sub
xor
inc
subl
and
jnp
adc
or
inc
xor
leave
in
jae
adc
add
es
push
jle
mov
das
lahf
movsl
add
add
fcomi
cs
dec
inc
jne
and
jmp
mov
xor
lock
push
adc
mov
mov
adc
pop
jecxz
adc
imul
inc
jne
push
add
xchg
sbb
add
push
cmp
push
loope
pop
lods
dec
dec
fadd
pop
add
cmp
and
aam
cmp
mov
ret
add
inc
jb
jne
jo
adc
sub
push
iret
dec
mov
popa
xchg
xchg
jno
aam
or
add
sub
sbb
mov
add
lds
xorl
leave
lret
xor
idivb
or
pop
in
add
dec
subb
sbbl
sarl
and
adc
insl
dec
adc
movsw
cld
xor
pop
fnstcw
add
dec
bound
ret
pop
pop
bound
shl
int
mov
gs
mov
jl
loop,pn
or
xchg
push
and
pop
lret
jo
jmp
xor
pop
outsl
sbb
sub
inc
xor
dec
inc
les
or
sub
fsubrs
adc
adc
push
mov
push
pusha
mov
hlt
sub
mov
inc
scas
cmp
ret
cmp
scas
and
stc
adc
les
dec
push
mov
and
aad
popf
shlb
leave
adc
jno
jno
imul
dec
and
mov
add
test
test
test
loop
cmp
lds
leave
inc
test
sub
hlt
push
pop
es
ret
addl
push
sbb
test
adc
stos
sbb
xor
lea
sub
push
add
push
es
xor
pushf
add
sbb
push
sub
sbb
add
xchg
ja
enter
lret
imul
sbb
and
sub
or
cmp
or
fsubs
and
iret
jp
xor
mov
mov
pop
es
cli
repz
movsl
mov
mov
call
adc
jmp
push
iret
ret
psrld
aam
add
lods
and
inc
filds
cmp
pop
ja
ret
and
sbb
pop
or
sarb
out
sbb
repz
adc
into
sub
lea
test
mov
jnp
test
cmp
add
movsb
or
mov
inc
mov
jp
sbb
arpl
in
test
mov
dec
int3
add
dec
dec
adc
sub
fadds
loop
sbbl
and
or
add
les
sub
pop
xlat
pop
or
jb
cmp
out
jle
movlps
repz
jl
outsl
lea
scas
bound
jecxz
movsb
push
pop
mov
arpl
jae
or
out
sahf
xchg
inc
pop
clc
dec
mov
xor
mov
mov
cmp
loopne
mov
add
adcl
and
loopne
imul
sub
std
adc
fisubrl
test
push
stos
jnp
and
sub
add
adc
sub
rcl
mov
rol
decb
adc
pop
sbb
lods
das
xor
mov
and
add
push
mov
loope
mov
jmp
test
inc
les
pop
stos
push
add
in
cs
pop
daa
dec
rcl
cltd
das
xorl
mov
rol
cmp
pop
sub
push
std
xchg
mov
pop
inc
dec
mov
int3
xor
rcrl
sub
adc
ja
dec
or
imul
inc
jmp
pusha
cmp
mov
pop
dec
add
pop
inc
mov
push
dec
sub
lods
sbb
mov
mov
push
dec
xor
into
push
adc
ja
loopne
fidivrs
and
xor
cmpb
dec
shlb
into
dec
out
das
add
xchg
add
xor
adc
push
push
enter
inc
or
sub
sub
cmp
sub
insb
sbb
push
and
int3
leave
into
or
ficomps
sbbb
enter
cmp
add
xorl
cmpsl
jb
fisubrs
and
sub
mov
pusha
push
push
inc
or
inc
ret
sbb
inc
or
adc
jo
cmp
sub
add
cmpsl
cmpsb
pop
movsl
smsw
shrl
rcrl
imul
dec
in
lods
fsubs
jmp
movsl
inc
inc
cmp
loope
lret
std
or
xchg
push
pop
pop
jecxz
popl
iret
inc
fildl
pop
and
in
dec
mov
push
or
sbb
inc
lods
out
lods
rolb
pop
dec
push
cmp
jnp
push
mov
movsl
mov
pop
hlt
mov
shrl
leave
stos
mov
in
inc
incb
sbb
mov
and
jbe
and
cmpsl
cmp
lret
fidivrl
dec
add
xor
mov
sarb
rcll
push
or
int
cwtl
inc
xor
imul
pop
sub
mov
sub
outsb
mov
dec
mov
fisttpl
add
cmp
add
loopne
inc
push
xor
mov
cmp
clc
in
inc
lret
sub
je
push
fcompl
popa
push
cmp
shrl
and
int
sahf
cmp
jge
xor
adc
add
aad
imul
jl
pop
xor
addr16
or
int3
mov
imul
sub
xchg
lcall
inc
fs
out
mov
pop
and
push
stos
mov
mov
inc
add
cmp
mov
pusha
xor
ja
jb
pop
insl
sahf
jno
addr16
mov
lds
add
mov
and
cwtl
and
jae
sbb
into
push
cwtl
mov
dec
das
faddp
dec
add
adc
aam
pop
mov
cmp
mov
lea
xchg
stc
daa
jno
sub
ds
enter
das
shll
lret
add
sbb
aas
sbb
push
dec
inc
jmp
jecxz
sub
cmp
lahf
stos
mov
inc
call
popf
add
jmp
and
addb
mov
loope
hlt
cmp
or
add
call
push
xor
adc
negb
sbb
loopne
rolb
pop
rcrl
test
cmpsl
loop
xlat
jnp,pn
and
nop
fisubl
sbb
movsb
test
sbb
adc
adc
push
dec
inc
add
mov
dec
adc
mov
add
push
fldlg2
outsb
cmp
push
ja
sti
fucom
or
add
mov
cmp
jnp
push
cmpsl
fsubl
jge
add
jge
shlb
sbb
mov
stos
jg
jge
and
call
test
dec
ja
fistl
pop
shlb
add
scas
push
dec
xlat
enter
mov
or
aas
dec
out
push
xor
pushf
add
mov
xor
xor
xchg
lcall
cmp
mov
es
cmp
or
inc
mov
rorl
insb
call
mov
or
dec
inc
testb
insl
insb
add
push
jecxz
sbb
pop
sub
inc
cmp
fwait
xor
addb
cmp
std
push
mov
nop
sbb
add
leave
push
and
js
xchg
sbb
addl
jmp
mov
adc
cmp
lods
mov
dec
fsub
flds
push
or
jmp
and
shrb
arpl
out
adc
inc
push
fwait
ljmp
sub
stc
ljmp
mov
or
push
ret
jg
dec
inc
and
cld
imul
fwait
add
sbb
dec
and
es
xchg
cmp
bound
shrb
fisttpl
bound
and
xchg
popa
mov
and
sarb
push
lret
mov
push
mov
push
add
fwait
add
mov
pop
dec
fstpt
cs
pop
imull
adc
daa
adc
dec
add
dec
test
inc
les
test
loopne
test
rorl
cmc
fisubrl
add
imul
cmp
push
pop
and
outsl
jecxz
mov
add
mov
dec
aas
mov
imul
imul
adc
jp
repz
dec
and
xor
mov
xor
icebp
push
and
add
mov
movsl
sbb
push
inc
dec
fwait
add
jecxz
loope
sbb
mov
mov
mov
arpl
pop
lock
push
aad
mov
lock
loope
in
add
xchg
cmp
sub
loopne
pop
das
addl
push
sarl
lret
rcll
movsl
and
jle
dec
add
xchg
aam
loopne
pop
nop
enter
ja
jmp
mov
dec
insb
or
add
loope
cmp
mov
adc
mov
insb
or
lods
dec
xchg
test
push
jne
jo
or
pop
mov
not
add
inc
out
add
jmp
subl
mov
test
push
outsl
sub
inc
xchg
xorl
push
or
cwtl
add
mov
add
sub
dec
xor
or
sub
and
outsl
jge
xchg
das
and
mov
dec
add
xor
scas
cmp
pop
int
lea
push
push
xor
loope
jb
int3
mov
inc
inc
dec
roll
xchg
xor
cwtl
and
dec
dec
add
and
push
repz
cmp
call
in
xor
popa
out
xchg
adc
pop
fiadds
xor
jecxz
inc
mov
ret
sub
or
xchg
sub
ja
std
jecxz
xor
xor
xor
movsb
aas
mov
adc
adc
push
xor
sbb
add
adcb
jecxz
ret
adc
dec
imul
js
cmc
bound
lea
jg
sub
movl
stos
jne
mov
pop
pop
jnp
push
mov
ror
addr16
inc
and
adc
sub
movsb
xchg
lea
lret
xchg
imul
or
ljmp
daa
mov
fwait
pop
pop
xor
pop
cmp
je
mov
pop
popa
outsb
shll
sbb
and
add
shlb
mov
mov
sub
dec
inc
mov
ret
sbb
cs
fadds
inc
mov
or
fsts
dec
lods
out
test
repz
insl
ret
ficompl
mov
add
inc
stos
insb
insb
xor
adc
jbe
test
mov
pop
and
push
call
dec
jb
gs
push
fs
pop
sub
mov
out
add
sbb
inc
inc
sbb
fsts
sub
stc
fildl
dec
xor
and
xchg
lea
mov
popf
dec
testb
and
dec
iret
mov
lods
adcb
pop
pop
jne
add
stos
adc
add
data16
das
jp
push
insl
sub
push
jmp
push
ds
xchg
jbe
push
pop
mov
imul
jo
addl
shlb
cmp
ss
xchg
inc
or
fmull
nop
ds
adc
push
lds
or
mov
rol
pop
lcall
outsl
dec
in
lret
xor
popa
adcl
sub
pop
sbb
fwait
add
xchg
rcll
add
sub
xorb
push
mov
pop
sub
mov
lds
fidivs
popa
call
jle
dec
mov
in
cmpsl
mov
sub
adc
jo
inc
repnz
add
fbld
inc
cmc
xor
imul
jo
cmp
ds
pop
inc
daa
adc
rolb
mov
imul
jge
add
adc
mov
fcomip
sbbb
mov
iret
lret
xor
aam
mov
add
pop
add
iret
dec
fsubrs
test
mov
in
cli
or
call
in
xlat
inc
and
sbb
dec
pop
fs
movsl
inc
and
adc
mov
cmpsl
and
mov
sbb
ret
lods
mov
dec
test
pop
xor
ss
add
call
psubq
jae
dec
imul
and
jbe
push
jno
add
xchg
pop
xor
inc
push
scas
incl
mov
inc
in
addl
pop
add
out
add
cwtl
gs
int3
jle
cmp
dec
pusha
lock
lret
rclb
sub
in
imul
scas
je
add
dec
cmp
mov
and
test
xchg
shlb
movsb
sbb
test
and
rcrb
jb
push
cmp
movsb
rclb
and
or
addl
dec
and
mov
test
repz
jbe
sbb
and
cmp
mov
fs
push
pop
sbb
sub
xchg
dec
push
push
pop
and
mov
cli
xor
jle
jmp
rclb
std
stc
mov
mov
imul
ret
test
adc
cwtl
subb
pop
dec
and
out
jecxz
push
add
mov
out
outsb
adc
test
mov
xor
add
sub
jg
lahf
mov
jp
aad
jp
test
fimuls
int3
pop
imul
adc
pop
repz
repnz
sbb
imul
mov
inc
cmp
sbb
add
pop
incl
mov
sub
and
and
cmpsb
mov
add
aas
ss
roll
roll
mov
pop
sbb
mov
add
shl
es
mov
and
lret
clc
imul
add
lds
xchg
cmp
jo
add
fwait
mov
sub
repnz
int3
cmp
mov
add
pop
daa
inc
clc
add
fldl
adc
or
push
andb
iret
xor
or
jne
mov
ficoml
mov
mov
and
jne
les
mov
push
int3
mov
mov
sbb
or
ret
push
push
pop
pushf
pop
movsl
xchg
sub
test
mov
push
add
fs
enter
sub
addl
lcall
aad
adc
loopne
mov
adc
sub
mov
aaa
and
pop
mul
sbb
xor
shlb
test
dec
std
stc
popa
arpl
jo
testl
jo
adc
push
loope,pn
in
push
or
jmp
add
or
xor
mov
mov
jmp
ljmp
cld
jmp
lock
sbb
lea
stos
stos
pop
addr16
mov
sbbb
mov
jge
dec
test
xor
inc
loopne
outsb
idivl
mov
fstpt
pop
aas
js
sbb
jnp
mov
inc
cwtl
push
lock
push
and
sahf
sbb
fists
pop
out
inc
add
dec
sti
xor
jnp
gs
shrl
cltd
icebp
xorl
cmp
sub
repz
aaa
cs
aas
leave
lock
les
aaa
and
cwtl
xor
hlt
add
mov
add
jmp
push
inc
push
sub
adcl
imul
mov
or
mov
mov
fwait
lea
add
out
pushf
mov
mov
lods
fwait
ds
pop
xor
dec
jae
clc
dec
sbb
sub
jns
pop
insb
xchg
xchg
andb
sti
mov
cmp
mov
add
cmp
jne
push
add
test
insl
add
lock
xchg
mov
test
ret
mov
scas
lahf
mov
bound
data16
inc
xor
mov
not
icebp
lret
in
cmp
push
cli
jle
cs
mov
int3
lea
jno
or
pop
imul
add
push
push
scas
mov
bound
dec
das
je
dec
mov
sbb
or
dec
daa
outsl
add
arpl
nop
xchg
pop
cwtl
ret
arpl
xchg
xlat
scas
pop
in
xor
mov
nop
rorb
sub
dec
pushf
mov
inc
and
add
jge
xor
movsl
shlb
add
scas
into
pop
adc
jle
clc
adc
add
add
ret
fwait
pop
jecxz
in
or
dec
inc
sub
loopne
jecxz
jo
sub
jecxz
popl
cmp
dec
jecxz
push
fbld
mov
ds
mov
sub
sbb
mov
mov
enter
scas
xchg
subl
ds
mov
mov
jecxz
jl
pushf
jb
pop
sub
mov
mov
cmpsl
in
je
mov
rorb
xchg
je
xchg
jno
repnz
pop
movsl
dec
xor
sti
jno
into
and
adc
push
cmc
xchg
mov
sub
cmp
imul
mov
loope
shlb
orb
out
lcall
lret
or
clc
lock
and
ds
cli
or
xor
call
jb
inc
add
aam
mov
test
sbb
popa
sbb
and
and
or
add
pushf
or
sub
fwait
mov
loopne
popa
nop
int3
imul
int
test
inc
mov
clc
dec
cmp
dec
test
dec
inc
or
es
mov
fwait
mov
insb
rcll
sbb
push
pop
sub
sbb
or
push
xchg
xor
fdivrs
push
loope
add
jge
mov
or
mov
mov
imul
lock
and
pop
add
rcrb
inc
aam
sahf
lock
push
mov
fnstsw
pop
enter
jnp
xor
pop
imul
cmpsb
mov
ret
ret
mov
or
mov
and
imul
xlat
xor
lods
scas
inc
xor
or
js
test
or
pop
sub
outsl
mov
xor
fisubs
iret
enter
insb
pusha
add
ret
popa
sub
mov
dec
sub
xor
fcompl
mov
jo
test
das
push
test
sub
roll
or
adc
or
sub
or
adc
sub
add
outsl
mov
add
mov
call
mov
xor
dec
mov
arpl
out
mov
icebp
int
dec
jmp
loope
jmp
nop
icebp
mov
ret
mov
ljmp
mov
ss
cli
lods
cmpsb
mov
movsl
mov
mov
jmp
sub
xor
stos
sbb
jecxz
fnstenv
sbb
mov
das
cltd
and
addb
mov
push
add
xchg
mov
mov
cmp
mov
inc
add
inc
cwtl
ret
lret
mov
into
cmpsl
or
inc
pusha
push
loope
and
insl
fbstp
mov
adc
cmp
add
lods
xchg
mov
dec
dec
es
push
rcr
inc
cmp
inc
push
xchg
add
pop
test
popf
or
push
mov
fiadds
push
call
out
sub
pushf
iret
xor
loopne
jmp
push
push
sbb
mov
or
xor
and
les
inc
mov
inc
fadds
sub
fsub
popa
push
sub
lcall
das
inc
mov
pusha
mov
cli
xor
sbb
and
mov
shrb
loopne
mov
rorb
lods
flds
mov
lret
mov
lret
dec
lea
sub
mov
mov
roll
imul
inc
pop
cmp
filds
daa
test
not
call
dec
push
lret
dec
nop
insb
mov
xor
popf
leave
es
jb
mov
adc
mov
jmp
jno
inc
dec
adc
dec
popa
mov
test
lock
mov
fmuls
dec
outsl
dec
in
push
xchg
inc
jns
int3
inc
arpl
ds
daa
adc
sbb
out
sarb
xchg
int3
jg
stos
jbe
lds
jb
popf
mov
and
ss
lods
push
pop
int
add
cmp
je
daa
dec
call
mov
fs
daa
mov
cmp
dec
mov
sub
xchg
adc
dec
pop
jno,pt
dec
lock
sbb
inc
jge
andl
or
je
add
and
add
jns
pop
cltd
inc
or
sti
test
and
or
push
daa
in
cmp
lock
inc
and
sub
sbb
inc
adc
and
jbe
call
xchg
icebp
cmp
loope
xsave
pop
add
aaa
std
sub
lds
ss
or
cltd
mov
push
push
mov
inc
imul
and
push
or
sub
pusha
xlat
rcl
and
stos
sub
int
js
or
sub
popf
and
int
push
cmp
xor
cltd
jnp
or
pop
out
adc
sub
push
or
mov
adc
xchg
lds
les
pop
stc
sbb
dec
scas
add
ljmp
xchg
ja
sbb
jge
cmpsb
fidivl
and
or
in
add
inc
int
cli
jno
adc
icebp
in
lods
or
dec
push
insl
pop
mov
cmp
data16
mov
popf
arpl
loopne
repnz
fldt
adc
cli
pop
cli
pusha
inc
inc
mov
mov
and
jo
or
xor
cwtl
sub
mov
mov
sbb
mov
adc
nop
sbbb
sbb
or
lret
and
and
out
ss
push
shll
nop
lock
pusha
sbb
sub
test
cmp
dec
xor
scas
cmp
mov
cmp
scas
cmp
rol
push
adc
sbb
xor
inc
pop
sbb
or
pop
sub
mov
push
sbb
sub
and
and
imul
js
popf
outsb
sbb
stos
cmp
push
add
xchg
cmpsb
dec
jmp
jns
test
addr16
xchg
loope
push
jne
fimuls
cmp
lcall
cwtl
dec
loop
cmp
aaa
xchg
xor
addr16
lods
add
and
sbb
jnp
stos
and
pop
push
jbe
mov
out
push
jno
ret
xchg
repnz
or
in
fsubl
pop
jno
fadd
push
add
and
sub
adc
mov
gs
out
and
and
iret
sbb
xchg
push
add
movsb
and
push
test
cmp
ret
jecxz
mov
fisttps
adc
push
jecxz
add
rorl
or
inc
bound
rcl
xchg
sbb
mov
jnp
inc
or
insl
jno
lock
jne
lahf
inc
push
jo
shll
sub
wrmsr
mov
dec
inc
adc
es
sbb
mov
sbb
ds
and
lods
xchg
nop
mov
aam
mov
dec
jmp
add
mov
adc
adc
rolb
rorb
add
cmp
ss
popf
in
cmp
and
lcall
fdivs
dec
jnp
out
mov
xor
add
scas
pop
adc
rcr
data16
rcrl
cmpsl
fimull
jo
inc
push
adc
sbbl
test
xorb
sub
xchg
adc
jp
add
les
stos
push
daa
enter
andl
mov
fldt
push
test
adc
mov
pop
adc
mov
or
cmpsb
fldt
dec
push
xorb
pop
addb
test
add
cmpsb
out
xchg
adc
fsubs
orb
jmp
ljmp
in
lahf
mov
sahf
loopne
in
mov
adc
xchg
mov
adc
inc
test
pop
mov
add
lods
push
lahf
inc
sti
xchg
inc
mov
das
lock
add
imul
sbbb
test
cli
xor
or
mov
out
imul
xchg
arpl
mov
mov
dec
outsl
pusha
jl
sub
adc
sti
add
inc
inc
stos
imul
lea
int
mov
iret
add
sub
and
jno
xorb
fnstsw
es
in
shll
inc
leave
mov
shlb
cmpsl
add
add
jo
sbb
xchg
mov
bound
or
and
popa
out
nop
jmp
xor
sbb
xchg
mov
push
dec
inc
mov
adc
rcll
add
push
loope
in
int
add
xchg
mov
mov
pop
jmp
xor
pop
xorb
setno
sbb
sub
and
ds
or
ret
add
das
or
ror
dec
insl
add
push
addr16
xor
sbb
and
lcall
cwtl
je
daa
push
xor
ret
dec
popa
sub
sub
push
je
stc
and
push
mov
add
sub
nop
sahf
movsb
adc
jp
pop
and
in
mov
arpl
and
insl
mov
das
mov
cmp
or
ret
dec
add
cmp
mov
loope
lea
jno
aaa
push
dec
das
orb
and
mov
das
jmp
ds
cmp
sbb
shll
add
cltd
decb
incb
add
pop
and
and
sbb
push
mov
and
or
lock
mov
andl
and
insl
jae
sbb
aas
mov
rcrb
jecxz
daa
xor
dec
call
mov
loopne
js
clc
cltd
aas
ja
testl
adc
arpl
or
xor
sub
sub
xor
sarb
and
mov
test
pop
das
ret
dec
les
dec
cmc
sub
pusha
dec
pop
dec
fs
lret
aam
int
js
stos
xchg
lret
aaa
mov
add
rol
push
cmp
cmc
sub
cmp
bound
andb
and
push
cmp
adc
lock
adc
or
js
popa
loopne
pop
pop
add
xchg
xchg
jecxz
inc
and
lock
mov
out
and
scas
aad
inc
je
or
repz
dec
sub
push
or
sbb
jecxz
daa
xor
push
jno
mov
jbe
sbb
pop
orb
sub
scas
test
inc
inc
push
outsl
inc
add
fmulp
jae
add
mov
or
jmp
inc
enter
xchg
lret
mov
pop
sarb
rolb
inc
add
mov
sub
adcl
shr
je
push
add
inc
fildl
and
xor
xchg
jnp
repnz
dec
inc
in
xchg
dec
in
adc
push
lret
or
xchg
rclb
lods
fldl
fcoml
xchg
xchg
xchg
aad
mov
xchg
pusha
push
push
fimuls
sub
push
jo
or
push
insl
out
push
push
ret
adc
bound
jne
loopne
adc
rcrl
add
das
push
imull
test
jle
adc
lret
or
or
mov
cmc
fildll
xor
adc
xchg
jo
dec
xorb
pusha
aam
jb
mov
movsb
adc
jne
add
xchg
les
pop
pop
fidivrs
outsl
xor
xor
cld
jb
push
push
dec
lds
xchg
les
add
negl
gs
loopne
add
and
jbe
out
out
or
outsl
sub
xchg
add
jl
dec
int3
loope
insl
mov
ret
push
adc
ret
fiaddl
add
lock
aaa
gs
dec
adc
adc
xchg
xlat
arpl
in
out
jbe
out
add
mov
sbb
and
rcl
inc
add
dec
ljmp
scas
cmpsl
pop
fcoms
jp
or
movsl
hlt
push
lcall
aad
xchg
mov
sti
jp
push
add
jge
and
adc
xchg
push
sarl
mov
mov
and
loope
add
repz
inc
pop
or
iret
cmpsb
rolw
fwait
add
mov
stos
and
add
imul
shlb
insl
out
sbb
lods
andb
or
sub
dec
inc
xchg
gs
jecxz
mov
or
xchg
mov
es
aam
push
iret
dec
sub
scas
aad
inc
scas
mov
sar
inc
js
sbb
scas
push
pop
dec
call
push
cmc
pushf
push
push
shrl
dec
add
addl
push
push
inc
sbb
mov
fnstcw
xchg
mov
es
xor
insb
jno
sub
add
stos
inc
add
adc
and
add
adc
or
stos
fucomip
pop
mov
int3
lock
or
add
add
add
add
push
mov
popf
in
lods
adc
adc
leave
xchg
adcb
or
jno
je
add
and
or
add
das
xchg
pop
imul
inc
out
add
jne
imul
daa
or
push
xor
loopne
cmp
mov
mov
xchg
add
jle
loope
cmp
arpl
popa
lea
arpl
rolb
js
push
mov
test
daa
sbb
cmpsb
mov
sub
pop
xchg
lods
jns
lahf
add
outsl
mov
jb
jo
sub
sahf
add
and
pop
mov
pop
add
jnp
js
mov
push
or
clc
and
movsb
push
outsl
lods
pop
or
int3
and
leave
cs
test
jmp
xlat
pushf
add
and
pop
cmp
ss
dec
mov
rorb
xchg
fstpt
hlt
cwtl
adc
sub
clc
sub
outsl
xchg
ljmp
inc
jne
dec
cmc
inc
insl
mov
mov
imul
pop
fcmovnb
or
arpl
add
ja
imul
inc
ds
ret
mov
jae
dec
les
leave
sub
pop
mov
inc
sub
push
add
sahf
lods
aas
push
mov
push
shrd
mov
test
mov
sub
xor
sbb
leave
cmp
stos
xor
cld
das
adc
adcb
dec
pop
mov
pop
loop
push
fidivrs
outsb
decl
xchg
xchg
es
movl
pop
add
shrb
add
mov
add
mov
xor
pop
push
repz
xor
push
imull
push
sbbl
aas
and
data16
gs
cmp
jmp
and
and
mov
lods
rcrl
push
loope
adc
xor
jno
imul
cmpb
sub
jns
add
call
mov
and
jecxz
rcrl
daa
adc
sbb
rcl
dec
mov
jb
mov
in
add
gs
xchg
xor
cmp
inc
jle
fadd
fsubl
add
dec
and
add
popa
test
cs
imul
shrb
rcl
leave
cmp
add
mov
or
cmp
sub
rcl
in
fwait
test
out
add
adc
jb
add
loop
outsb
add
inc
shr
in
jb
add
insl
leave
add
jmp
testl
insb
ss
lods
repz
pushf
mov
jp
repnz
mov
add
add
add
push
cmc
add
pop
call
ret
pop
mov
inc
rcrl
push
cmp
ja
add
push
ret
xchg
scas
in
es
add
push
add
xchg
sbb
daa
ja
test
xor
addb
daa
inc
bound
stc
inc
loop
out
jmp
pop
add
add
and
sub
adc
cmc
and
and
andb
fists
sbb
cmp
icebp
mov
sbb
lea
or
cwtl
jo
or
add
and
pop
mov
adc
cmp
adc
and
jb
add
fistpl
add
mov
cmp
adc
add
add
and
or
or
sub
fnstsw
push
sbb
movsb
adc
ja
add
loope
adc
xchg
add
addr16
and
mov
xor
mov
ss
adc
nop
jmp
mov
jmp
mov
subb
daa
add
and
subl
jle
js
pop
cmp
and
aas
mov
sub
fldl2e
test
adc
mov
ljmp
ret
add
repz
and
or
popf
push
pop
mov
fisubl
in
in
add
sete
add
adc
adcb
sub
lods
and
cmc
jbe
ret
dec
add
pop
out
mov
xchg
mov
dec
pop
leave
dec
pop
or
add
cmpsb
jne
jmp
orb
mov
and
pop
fisubs
mov
lock
adc
push
and
add
scas
ljmp
das
roll
lods
aad
lcall
sub
dec
push
push
or
pop
push
jo
jnp
test
mov
inc
enter
sbb
cmp
popa
push
adc
lods
add
fwait
mov
push
imul
jo
gs
shlb
sbb
cli
jmp
push
mov
popa
dec
add
sbb
inc
imul
mov
imul
pop
push
push
inc
jmp
dec
or
dec
enter
xor
testl
mov
dec
push
shlb
jbe
pushf
pop
jbe
testl
ud0
rclb
add
push
add
mov
popf
lods
inc
inc
mov
or
sbbb
popf
push
roll
arpl
jo
push
clc
pusha
push
push
or
pop
iret
es
hlt
dec
push
movsl
mov
mov
fwait
cwtl
add
loopne
mov
lea
add
or
inc
jle
add
sbbb
insb
inc
jmp
pop
daa
add
adc
add
movl
sbb
jmp
sub
enter
test
mov
mov
sub
add
sub
inc
sub
mov
les
lmsw
rorb
pop
xchg
xchg
adc
add
mov
mov
imul
xchg
mov
and
mov
dec
out
add
pop
push
lods
movhlps
fstpl
sbb
data16
ret
sub
je
mov
int3
add
mov
fldl
enter
add
add
push
add
lahf
mov
push
and
lods
or
ljmp
or
popf
dec
bound
cmp
sbb
mov
add
cltd
pushf
sbb
orl
insb
adc
mov
out
sub
xchg
adc
mov
jns
in
ds
into
mov
call
pop
xchg
and
pop
in
or
xlat
sub
adc
xchg
andb
add
push
arpl
sub
lods
dec
pop
test
pop
xchg
mov
sub
movsl
sub
sub
sub
xor
jnp
iret
mov
icebp
sahf
and
out
insl
movsb
fs
loopne
inc
rorb
cld
pop
clc
xor
ds
xorb
inc
inc
es
scas
push
les
mov
lods
cmp
popa
pop
xchg
xchg
clc
add
je
js
sub
rorl
das
sbb
imull
and
sahf
ljmp
inc
rclb
cmpsl
inc
inc
xchg
into
push
push
or
mov
sbb
xchg
mov
subl
mov
out
sarb
shr
add
loopne
ja
js
outsb
adc
into
popa
jne
mov
loope
es
add
inc
push
addr16
push
aam
push
sub
jne
rolb
ja
jp
fdivr
mov
or
push
fadds
adc
outsb
and
sub
add
and
mov
xlat
and
cld
mov
cld
pop
inc
push
dec
jge
pop
xchg
lods
jno
sbb
daa
sarl
shlb
aaa
test
dec
lret
or
dec
add
or
mov
fucomi
enter
sub
sbb
pop
add
or
xor
test
add
xorb
xlat
jnp
mov
lods
pop
in
sbb
mov
jnp
lret
movsb
adc
arpl
jns
subl
push
pop
add
adc
push
mov
loope
cmp
outsl
sbb
inc
sar
mov
sti
or
js
mov
mov
push
nop
iret
push
orb
or
add
jo
jae
xor
outsb
cwtl
shll
pop
lret
or
or
loop
outsb
or
mov
fidivl
xor
iret
test
inc
mov
pop
xor
loopne
sahf
lret
jl
add
bound
jo
cmp
jle
sarl
sub
xor
dec
push
pop
pop
cld
sub
pop
mov
xchg
xchg
inc
fwait
pusha
inc
test
in
jge
test
mov
or
push
fstp
clc
pop
push
or
sbb
stos
ss
jno
and
pop
addl
xchg
push
xorb
inc
cmp
stc
mov
push
enter
mov
sub
roll
add
pop
and
adc
xchg
and
pop
scas
push
das
arpl
and
int3
fistpll
adc
fsubrs
imul
dec
xchg
lods
push
loope
xlat
inc
xor
dec
adc
jmp
and
subl
dec
push
icebp
add
cwtl
js
push
test
filds
xchg
sbb
out
data16
sub
xchg
cld
adc
daa
mov
int3
inc
mov
popa
scas
cmpsb
cmp
in
inc
test
dec
xor
pop
and
icebp
sub
ror
nop
les
jge
push
aam
sbb
rorb
and
push
xchg
les
or
xor
lods
push
add
or
push
xorb
add
add
iret
adc
insl
or
daa
pop
cmp
mov
fsubs
dec
add
enter
cmpsl
xchg
dec
rolb
add
lahf
mov
add
lret
pushf
pop
loope
test
push
call
cmpsb
xchg
or
cmp
rcrb
dec
mov
es
mov
in
lret
scas
inc
inc
inc
ret
xor
cmp
insb
add
in
addb
push
dec
adc
dec
push
mov
push
insb
adc
dec
test
cltd
js
inc
stos
jno
es
loopne
mov
mov
jg
xor
or
cmp
pop
add
push
sbb
test
and
inc
ficompl
add
jmp
dec
cmc
sub
rcrl
shr
fcmovnb
jno
inc
cmpb
dec
dec
jo
addl
cmp
aaa
xchg
add
add
addb
jbe
mov
sub
pushf
xorb
movl
and
xchg
inc
fmuls
add
ret
add
fwait
test
sub
pop
mov
adc
xchg
sahf
add
lret
mov
lods
adcb
rorb
jae
insb
jl
ret
aad
aam
jbe
mov
dec
lret
pop
mov
add
andb
les
hlt
aad
push
push
movl
or
sbb
outsb
rol
dec
ret
fistpll
mov
flds
adc
aad
subb
outsl
popa
sbb
jmp
lret
popa
adc
sbbb
push
add
rol
mov
imul
mov
or
nop
add
lds
ja
addl
in
jg
jns
mov
xor
jp
xchg
add
mov
push
fildl
dec
push
sahf
and
sub
sub
movsb
and
notb
lret
inc
call
and
sub
dec
clc
add
mov
fstp
lcall
sub
fbld
or
dec
pop
cmp
push
pop
stos
mov
aas
xor
enter
and
push
fcmovnu
aam
dec
pop
xor
sahf
div
lahf
cmpsb
sbb
shrb
sbb
pop
test
loope
mov
arpl
add
adc
movsl
dec
clc
xor
int3
adc
add
fisubl
sbb
or
and
dec
xchg
jno
dec
and
sbb
dec
xchg
mov
xor
mov
fwait
jae
add
nop
inc
pop
cmpsl
lods
push
mov
jns
into
fbstp
jmp
cmc
sbbb
int
jo
and
mov
aas
push
data16
push
jecxz
mov
popa
inc
insb
jle
ret
xchg
scas
xor
aaa
inc
xchg
or
dec
cltd
lods
adc
mov
jo
cmpsb
or
loope
cmp
mov
loop
mov
enter
jne
rorb
out
jmp
into
adc
push
pop
cmp
lea
or
cmpsl
aas
test
push
or
outsl
mov
dec
mov
int
jb
or
or
mov
jbe
xor
sbb
jle
xchg
shlb
inc
ret
in
jmp
mov
mov
add
push
rolb
nop
scas
addr16
loopne
or
inc
cwtl
mov
in
jb
and
jno
xchg
loopne
insl
stos
loope
jnp
sub
lahf
iret
add
inc
addr16
xor
add
sbb
in
notl
cmc
ret
repz
add
iret
ret
dec
adc
mov
push
aaa
mov
push
push
ret
fwait
mov
and
jl
inc
lret
dec
mov
lods
outsb
xor
sub
pop
punpcklwd
fisubs
dec
dec
sub
xchg
stos
jge
imul
shrl
pushf
sahf
imul
or
mov
popa
lods
sbbb
dec
mov
sub
xchg
cmpsl
adc
add
xor
daa
out
sub
mov
xor
dec
adc
adc
icebp
pushl
add
mov
xor
test
xchg
lahf
cwtl
jl
mov
mov
pop
sbb
ret
repz
test
js
pop
pop
mov
cmp
xor
aaa
enter
xchg
shl
imul
fcoms
and
and
mov
sub
xorl
add
push
lret
pusha
or
lock
push
adc
or
push
lea
push
aas
add
push
sub
push
xor
cmp
movb
mov
dec
cmp
xchg
xchg
ret
add
and
push
inc
push
shrb
xchg
dec
jo
pushf
jg
or
outsb
jne
or
jo
or
pop
fwait
imul
add
mov
cmp
pop
lcall
dec
cmp
cmp
mov
jecxz
xor
push
xchg
aaa
movsb
out
add
into
xor
add
or
sub
and
and
push
test
cmp
nop
daa
push
das
xchg
das
push
mov
xchg
pop
sbb
arpl
xchg
xor
or
lret
pop
mov
inc
or
ret
cmp
dec
xchg
jbe
dec
xor
cmpsb
mov
xchg
mov
popa
add
mov
adc
ret
cmp
movsl
shrb
sbb
les
push
stos
sbb
aam
je
int3
inc
and
cwtl
inc
aaa
mov
and
movsl
sub
orb
or
pop
int3
mov
cmp
bound
fwait
inc
lret
lods
jnp
aam
cmp
es
loope
xchg
mov
adc
loope
mov
stos
ljmp
xchg
out
dec
add
jae
jp
push
mov
jae
bound
arpl
xchg
ret
repz
sbb
dec
push
cwtl
cmp
xchg
push
sahf
cwtl
fidivrs
test
cmpsl
inc
inc
shlb
pop
push
movswl
and
sbb
das
movsl
ret
popa
es
sbb
mov
or
lea
pop
movsb
xor
addr16
icebp
les
add
shlb
nop
lods
test
addb
inc
mov
xor
cmpsb
jb
xchg
icebp
and
test
and
mov
and
lds
inc
jge
xor
cmpxchg
in
mov
out
sbb
ja
mov
pop
mov
movb
jp
xchg
adc
cmp
inc
pop
sub
push
xlat
incl
jo
movsl
outsl
sub
lea
jo
cmp
cmp
clc
xor
das
mov
fistpll
iret
pop
push
adc
jbe
aaa
out
mov
lods
rorl
add
ss
add
inc
ss
in
movups
fsubs
iret
and
mov
pop
jns
test
adc
sbb
or
stos
push
xor
int3
pop
lds
add
repz
fneni(8087
or
pop
test
dec
fbstp
sub
subl
fstps
xor
ret
ljmp
add
lret
shll
arpl
ss
cmp
mov
mov
fistpl
adc
mov
add
add
mov
int
or
and
sub
adc
add
movsl
add
sub
adc
mov
sub
or
sbb
insb
inc
jecxz
add
ret
das
mov
and
jmp
call
dec
cmpsl
and
dec
js
xor
cmc
popa
add
scas
xchg
test
add
data16
add
pop
sbb
xor
subl
lea
lea
adc
push
pop
std
orb
push
inc
adc
fdivrs
rcll
js
addb
pop
rcll
enter
pop
or
add
mov
sbb
inc
arpl
movl
sarb
out
and
add
test
add
xchg
sub
push
add
and
mov
cli
pop
sub
mov
pop
ret
ss
mov
cmp
mov
jo
xor
addb
das
mov
xor
sbb
add
xchg
jb
add
xor
and
pop
xor
or
test
push
bound
dec
pop
sarl
aaa
mov
pop
adc
push
pop
push
mov
nop
mov
dec
das
or
popa
jo
in
sub
push
or
or
pop
dec
js
test
sbb
fs
push
and
test
sub
xchg
test
add
mov
xor
jo
loopne
mov
adc
aad
outsb
mov
push
fists
scas
jmp
nop
test
xor
inc
fst
sub
and
aaa
mov
add
cmpsl
xor
shrb
add
scas
les
add
adc
push
popl
sbb
mov
and
sahf
and
mov
mov
stos
pop
push
lods
jnp
or
cmpb
aad
add
cmp
lea
add
pop
jae
pop
or
mov
jl
push
or
imul
scas
jo
mov
push
adc
xchg
scas
sbb
fwait
lods
mov
and
pop
test
test
fstp
jae
jg
jns
scas
sbb
push
inc
and
pusha
pop
insl
cmp
and
adc
jo
and
inc
leave
pop
icebp
or
hlt
lock
cld
add
lods
cmp
cmp
push
cmp
fldl
ljmp
sti
imul
and
xchg
sub
in
and
sbb
fsubs
add
roll
daa
jbe
jno
dec
xor
sub
xchg
mov
cmp
jae
add
fs
ljmp
adc
iret
pop
inc
sub
sub
inc
dec
xchg
and
scas
js
pop
push
lahf
cmp
int
add
adc
lock
test
rcll
out
cmp
or
sbb
cmp
cmpl
add
cltd
pusha
mov
in
jmp
outsb
mov
movsb
in
ljmp
fwait
shl
sbbl
test
adc
jo
popf
ret
test
shrb
jecxz
mov
rclb
pop
pusha
adc
sahf
ljmp
les
in
in
movsl
shl
pop
jo
aad
or
or
adc
sbb
mov
add
push
int3
scas
lods
add
jnp
ss
sbbl
fcmovnb
add
rolb
inc
fcoml
add
push
pop
into
inc
int3
mov
movb
mov
adc
pushf
fdivrs
test
cmp
pusha
lea
je
pop
and
pusha
xchg
cmp
fildl
cmp
pop
push
add
mov
adc
mov
pop
sub
cmpsl
sbb
jle
pop
notb
xor
mov
ds
xchg
add
mov
pushf
jae
add
inc
or
je
stos
bound
jecxz
test
inc
lods
add
int
xor
dec
pop
or
pusha
mov
jae
test
movl
mov
lret
and
pop
out
fdivrp
pop
mov
add
enter
das
pop
in
mov
lods
pop
mov
data16
jo
xor
popa
arpl
ret
lods
rolb
fdivs
or
pop
sbb
mov
add
out
sub
inc
out
add
mov
loopne,pt
mov
dec
jg
inc
push
out
daa
mov
adc
add
pop
adc
adc
scas
push
inc
scas
add
sbb
test
xchg
hlt
mov
sub
fistl
or
cmp
push
sub
cwtl
pop
sbb
jno
popa
adc
arpl
insb
rolb
jp
aas
or
pop
popa
cmp
add
jnp
aas
pusha
mov
mov
lcall
dec
add
cmc
add
clc
dec
sbb
cmp
jbe
and
negb
jno
add
in
rep
add
shrb
add
add
sub
and
xchg
fnstsw
jmp
add
cmp
bound
mov
outsb
mov
add
sub
jbe
push
and
pop
fimull
jecxz
and
das
fisttpl
and
jae
push
inc
sarb
add
mov
inc
sub
ret
cmp
rclb
popa
lcall
add
add
sbb
orb
in
mov
add
fiaddl
adc
add
pop
movsb
and
cmc
jge
jp
sbb
movsb
ret
adc
lahf
xor
dec
mov
icebp
mov
dec
nop
lret
sub
pusha
xchg
jnp
fcmovb
add
jnp
dec
or
xor
mov
hlt
and
loopne
jp
sbb
mov
fimull
daa
add
xchg
push
adc
inc
lods
jmp
sbb
mov
in
cmpsl
test
cltd
or
ffree
popf
adc
lret
xchg
add
cltd
sbb
add
and
into
imul
mov
or
jo
ret
je
mov
notl
fiaddl
lret
mov
test
add
add
inc
pop
les
sub
pop
adc
add
sub
and
sti
sahf
jbe
jb
sub
xor
pop
sbb
push
cmp
add
push
leave
mov
mov
sub
cmpsb
rolb
shlb
pop
add
or
or
sbbb
xchg
test
aas
push
dec
inc
stos
cmp
mov
imul
xor
mov
repnz
test
int
xor
shll
pushf
push
sub
cmp
push
inc
aas
testl
fs
aam
push
push
inc
mov
mov
jo
pop
xchg
adc
imul
xlat
rclb
add
ss
sub
push
fildll
pop
movsl
cmp
ss
scas
sub
mov
add
cmpsl
and
push
test
add
addr16
add
imul
fidivrl
sbb
je
and
add
outsb
rol
cmp
sub
or
add
inc
jmp
adc
push
and
loopne
cmp
pop
push
and
mov
fisubs
iret
rorl
pop
xchg
inc
loop
int3
push
das
ss
xor
dec
xchg
xchg
sahf
das
add
or
fstpl
stos
pop
push
mov
push
sub
mov
push
cltd
mov
add
lds
cltd
mov
sub
xor
add
pop
test
orl
mov
and
xor
or
sub
popa
addr16
lret
mov
and
or
lods
xlat
sbb
loopne
push
mov
cmp
movsl
xchg
pop
outsb
cmp
rcrb
ret
out
fwait
cmp
in
imul
mov
insb
add
xchg
out
lods
or
add
imul
loopne
xor
das
ja
adc
jbe
jge
data16
out
sub
push
cld
add
sub
fmuls
aaa
loope
fs
cmpsl
add
or
popa
push
scas
or
dec
pop
imul
mov
pop
jge
popa
cmpsl
fildll
sub
int3
push
lock
std
add
fmull
sbb
cmp
add
push
pop
lcall
add
xor
xor
idivl
add
lods
adc
push
rolb
adc
or
push
je
pop
pop
or
out
insb
add
add
xor
push
cmp
add
xor
push
push
cli
mov
es
sbb
sbb
inc
sbb
mov
test
push
arpl
aad
das
leave
jg
iret
push
mov
iret
add
sbb
aaa
adc
jl
gs
mov
cmp
or
pop
pop
or
mov
ret
dec
out
jns
fidivs
lahf
jb
enter
adc
adc
popa
pop
pop
sub
pop
add
add
push
mov
leave
add
push
in
mov
lds
mov
jg
pop
add
cmc
mov
sub
and
scas
xor
fisttpl
cmpsl
xchg
outsb
mov
imul
jnp
inc
mov
xor
and
sbb
lods
xchg
push
xor
add
add
jmp
add
mov
add
lods
mov
mov
jno
mov
pop
inc
mov
add
jbe
mov
cmp
stos
xchg
ret
mov
les
lods
push
or
lods
xor
or
mov
add
or
jp
arpl
xchg
movsb
repz
icebp
mov
push
and
mov
arpl
add
cmp
notl
add
inc
scas
aaa
adc
dec
inc
mov
in
ret
pusha
jl
jno
mov
add
mov
loop
add
xorl
sub
or
mov
pop
ja
push
pop
mov
leave
shlb
or
lock
enter
adc
or
jns
jo
ret
iret
test
js
es
add
add
ficoms
lahf
mov
mov
xorb
push
sub
std
cs
mov
mov
dec
or
mov
imul
das
imul
push
hlt
popa
jne
gs
or
push
mull
dec
js
mov
push
mov
or
imul
and
addr16
stc
push
mov
mov
xchg
push
js
push
test
sub
adc
mov
rorl
adc
adc
adc
or
adc
xchg
std
hlt
jle
xor
das
and
cmc
jno
jl
sub
sub
xchg
jecxz
andb
cmp
out
sbb
scas
lcall
add
xchg
fidivs
mov
movsb
or
inc
push
push
rorl
sbb
in
notl
leave
cwtl
add
adc
inc
push
mov
mov
and
in
jmp
dec
or
mov
das
test
mov
fisubrl
popa
es
or
subl
adc
inc
cmp
xor
out
or
and
xor
sbb
pushf
notb
leave
push
std
popa
sub
mov
xor
mov
add
xchg
adc
or
jb
inc
pop
mov
add
ss
test
fwait
insb
sbb
or
adc
test
icebp
add
adc
adc
push
mov
leave
mov
cmp
mov
inc
pop
inc
xor
lret
dec
xor
mov
sti
jl
push
add
push
push
inc
mov
aad
and
and
movsl
mov
icebp
add
push
push
loope
imul
xor
pop
sbb
xor
add
lcall
dec
and
aad
popa
adc
add
inc
sub
jns
movsb
rcll
sub
adc
lods
cmpsl
push
xchg
lock
mov
das
popa
lods
cmp
nop
sbb
adc
mov
movsb
fldl
sub
inc
in
or
dec
pop
imul
xor
insb
lret
in
mov
adc
in
cmp
les
sti
xor
adc
or
repz
popa
cmp
xchg
cwtl
fdivs
and
les
aas
sub
jle
nop
push
dec
fcom
movsb
sub
test
add
adc
adc
mov
mov
pop
cld
popa
sti
add
ss
xchg
adc
xchg
leave
aaa
xchg
add
jb
pusha
xor
inc
mov
outsb
inc
popa
adc
aaa
inc
sub
inc
aam
cli
repz
lea
imul
mov
imul
test
fisubs
mov
sub
cltd
push
adc
push
mov
aad
dec
and
leave
pop
mov
inc
rcrl
mov
and
xchg
jp
pushf
mov
sar
sarl
and
push
mov
add
pop
push
pop
cmp
inc
inc
xor
mov
inc
sahf
or
jmp
test
push
dec
pop
test
pop
mull
dec
xchg
add
xchg
and
cmova
lods
adc
mov
lods
add
push
ret
xor
or
ffree
push
imul
jl
fbld
popa
push
jmp
ret
cmp
and
jle
jecxz
shlb
daa
arpl
or
cmp
mov
sub
imul
and
test
jmp
jmp
pop
faddl
imul
cmp
fwait
sub
sahf
fsubr
popf
repnz
in
imul
xchg
push
inc
and
jne
sub
cli
shlb
aas
and
pop
push
insb
mov
add
shrl
rcrb
push
and
imul
mov
cmp
test
test
sbb
dec
or
push
or
jge
dec
sub
add
pop
add
fildl
mov
test
mov
xchg
jne
push
inc
ljmp
mov
insb
jge
mov
jl
lahf
add
and
rcrb
shlb
xor
adc
int
ljmp
enter
jl
fstps
rorb
xchg
sti
jle
and
add
add
dec
ss
inc
xchg
jmp
adc
dec
dec
lea
in
xchg
and
test
insl
adc
pop
cmc
xchg
xor
xor
mov
test
xchg
and
jmp
dec
push
gs
subb
addb
mov
clc
push
dec
xorl
loope
test
ret
mov
sub
dec
ljmp
pop
loop
lock
inc
push
push
rolb
arpl
icebp
daa
xchg
add
adc
or
mov
iret
clc
push
jl
or
adc
xor
stos
sub
lods
push
ret
xor
lret
jmp
jmp
std
enter
out
scas
mov
jo
and
movsb
xor
mov
sub
xor
cmpsb
hlt
adc
outsl
xchg
or
mov
hlt
int
jo
sub
bound
adc
jnp
pop
and
psubusw
ficompl
cmp
pop
jmp
or
and
into
and
jecxz
xorl
xor
negb
jmp
iret
cmpsb
lret
cmp
adc
sub
adc
dec
jmp
shrl
ret
bound
test
or
je
dec
xchg
iret
in
sub
adc
pop
pushf
add
add
xor
mov
sub
adc
add
inc
push
xchg
cmp
sub
sub
into
adc
stos
jle
inc
pop
loop
clc
cmpsl
std
sbb
scas
cld
movsb
xchg
pushf
out
test
xchg
xor
pusha
or
das
imul
xchg
pop
xchg
js
jno
dec
cs
les
pop
test
das
and
fwait
and
fidivs
dec
inc
dec
mov
xorb
and
fstpt
inc
cmp
xchg
mov
lret
pop
push
pop
loop
jno
pop
repnz
fldl
cwtl
fcoml
in
ss
and
mov
add
add
sbb
ss
mov
icebp
dec
add
pop
adc
mov
pop
iret
push
mov
insb
aaa
or
imul
pusha
cwtl
int
lods
mov
insb
popa
test
lea
jb
je
lret
punpcklbw
dec
insb
mov
leave
idivl
or
dec
lret
push
je
jno
cmp
and
insl
jno
adc
push
ret
sbb
ljmp
jo
lret
and
and
and
iret
fwait
add
pop
cmp
jnp
sahf
out
into
insb
add
add
mov
loop
jnp
in
rcr
pop
pop
lret
ja
lret
inc
cmpsb
xchg
cmp
or
aam
lret
cmpsb
repnz
adc
pop
rorb
dec
pop
test
sbb
push
cwtl
dec
fs
mov
sbb
jmp
push
sub
test
mov
aam
cmp
sub
add
sbb
hlt
xlat
aam
push
ds
pop
ds
movsb
sbb
cld
andl
jmp
mov
add
inc
ret
and
cmp
das
lods
arpl
scas
xor
imul
inc
pop
pop
rclb
dec
movsl
out
lea
jb
or
addl
cmpsb
call
xorl
cli
jge
xchg
adc
sbb
popa
inc
push
pop
sub
xchg
xor
mov
and
in
push
sub
dec
imull
push
and
jle
push
inc
and
in
lods
adc
shrb
xchg
cmp
mov
or
cmp
add
push
dec
mov
pusha
rcrl
out
hlt
lods
add
pop
loopne
xchg
outsb
cmp
sbb
mov
mov
repz
in
cmp
rorl
dec
rolb
shlb
int3
loopne
push
or
dec
mov
int
push
pop
adc
adc
sub
mov
dec
or
add
cwtl
xchg
pushf
test
sub
mov
orb
cmpsb
arpl
mov
xor
imul
lock
test
jb
int3
dec
fsub
adc
es
xor
movsb
je
aad
lahf
fisttpll
gs
in
mov
sbb
test
adc
fwait
add
outsb
mov
cmpsb
test
mov
mov
outsw
ret
fs
pop
add
xor
adc
cmp
aad
or
mov
mov
frstor
mov
or
mov
mov
in
scas
test
push
or
jae
lods
add
fstpt
adc
sbb
cmpsb
cmc
mov
insl
mov
in
fdivrs
mov
add
inc
mov
xor
ret
gs
inc
adc
dec
jne
aaa
mov
es
std
aaa
push
sbb
pop
test
imul
mov
mov
jnp
add
xorl
xchg
inc
or
add
aaa
mov
popa
xchg
adc
loopne
jnp
sbb
loop
xlat
lds
add
xor
jno
add
pop
xchg
test
pop
les
stos
jmp
shrb
pop
jo
inc
adc
sbb
ret
or
jo
ret
xchg
or
push
pop
adc
dec
or
sub
insl
xor
sub
aaa
hlt
pop
jno
sti
sub
xchg
jno
fwait
lods
jo
iret
and
cmpb
sub
lahf
sub
add
fwait
xor
pop
dec
xchg
add
das
adc
sbb
test
repnz
jno
repnz
push
test
rcll
sbb
rorl
mov
xchg
stos
add
in
lcall
imul
dec
cmc
adc
push
mov
cltd
insb
and
aam
push
inc
pop
jmp
mov
inc
mov
insl
fists
jbe
out
ss
sub
lods
xchg
icebp
xor
cmp
shlb
xor
or
or
jbe
add
jae
add
cli
shrb
gs
sub
inc
and
pop
lods
fcoms
and
out
gs
adc
cmp
sub
adc
mov
fbstp
pop
stos
mov
add
add
sti
xchg
rol
test
push
mov
sbb
push
aaa
cs
nop
add
rolb
push
sbb
mov
scas
add
add
cmpsb
xor
addr16
pop
add
mov
leave
jp
jle
add
mov
add
outsb
and
fs
or
xchg
jo
mov
mov
jmp
mov
sbb
jmp
movb
and
sub
subl
adc
add
lods
or
xchg
lods
mov
pop
push
dec
outsl
or
and
push
sahf
or
cltd
jge
sbb
out
mov
push
das
test
rcrb
mov
mov
lods
popf
xor
adc
insb
jns
jecxz
dec
jb
or
xor
adc
jg
stc
sub
add
lods
xchg
jecxz
pop
mov
js
inc
mov
arpl
xor
gs
out
nop
xlat
inc
popf
popa
dec
adc
pop
jns
sub
pop
add
test
cmp
aad
pusha
fs
les
movsb
jo
inc
inc
sub
lret
or
inc
mov
dec
cmp
sub
push
mov
add
pop
leave
cmp
fisubrl
adc
jno
dec
movsb
lahf
nop
mov
mov
xor
mov
pop
into
lea
push
mov
imul
nop
dec
and
or
insb
movsb
dec
outsb
and
add
xchg
rorl
mov
loopne
cwtl
push
xchg
in
les
push
outsb
dec
fisubs
test
or
cmp
imul
add
popa
mov
mov
lods
mov
mov
and
lret
packssdw
xchg
je
adc
arpl
fisubl
sahf
rclb
or
add
mov
pop
fldl
inc
add
inc
dec
sub
or
popa
sub
pop
add
push
pop
sub
add
sub
jmp
mov
ffreep
adc
in
and
xchg
xor
jnp
sub
mov
sbb
test
xor
in
xor
and
mov
xchg
xchg
rolb
ja
and
jnp
call
add
add
fists
cmp
sbb
lock
adc
dec
in
repz
inc
clc
popa
mov
cli
xor
mov
leave
cmp
cltd
mov
jns
inc
sbb
in
adcb
and
xor
add
mov
or
add
jae
inc
sub
sbb
xor
mov
pop
adc
mov
lods
add
xchg
pop
add
mov
test
dec
add
add
subl
adc
imul
inc
sub
or
sub
add
adc
add
xor
or
movsb
and
les
pop
imul
xor
add
inc
rclb
add
jle
jno
data16
push
mov
shlb
dec
inc
dec
cwtl
loope
daa
sub
add
cmpsl
daa
notb
adc
jno
mov
and
ret
cs
mov
aad
stos
add
and
imul
jecxz
add
push
add
pop
bound
imul
push
mov
pop
inc
test
sahf
sub
rcll
inc
lods
repz
adc
out
and
out
pusha
and
or
mov
pop
ja
clc
jmp
inc
loopne
mov
xchg
nop
push
or
or
sub
xorl
das
push
pop
xchg
push
scas
lea
push
jmp
jl
sbbb
scas
outsl
mov
dec
lods
loopne
push
xchg
mov
or
mov
xor
popf
xlat
xchg
fcmovne
lods
push
outsb
adc
xchg
adc
mov
inc
test
add
mov
jge
aaa
xcrypt-cfb
cmpsl
loope
adc
push
and
and
pop
ja
xor
add
scas
incl
sub
dec
js
idivb
nop
addl
dec
loop
add
mov
mov
add
push
xchg
loopne
or
out
lcall
loop
xchg
fwait
xor
jo
and
sub
daa
cmp
mov
lods
add
insb
cmpsl
jge
or
and
mov
xor
mov
loope
or
lret
repz
sbbl
cmpps
cltd
fiadds
sbb
mov
xchg
cmp
inc
das
mov
arpl
sub
sub
loop
mov
popa
shrl
adc
and
add
pop
je
fcomip
xchg
cmp
lds
repnz
gs
xor
add
jmp
jp
lock
add
divb
push
aad
stos
sub
fsub
push
mov
push
lods
dec
decb
pop
ss
or
add
mov
inc
js
mov
inc
movsl
mov
pop
sbb
xor
jg
loope
test
es
xchg
jg
pop
pop
adc
lahf
int
mov
adc
movsb
arpl
es
or
mov
lahf
aam
clc
shlb
fwait
cmpsl
adc
in
iret
lcall
loope
es
movsl
clc
pusha
bound
in
loope
lahf
mov
cmp
fxch
inc
add
jb
fadds
pusha
mov
scas
add
dec
add
adc
or
jo
lods
and
pusha
push
setl
scas
adc
push
dec
push
add
sub
lods
rcr
jge
mov
pop
fbstp
add
cmp
or
mov
push
xchg
cmc
imul
imul
add
dec
jecxz
rorl
pop
sub
aad
aas
adc
mov
ss
and
mov
dec
insl
ret
jo
jbe
iret
insb
adc
inc
icebp
jecxz
or
xor
lret
adc
loope
icebp
inc
out
dec
dec
ficompl
jle
shrb
or
jno
iret
pop
push
sbb
fstl
xchg
ds
rclb
push
xchg
add
ljmp
push
xchg
lret
ret
popf
inc
xchg
mov
and
ret
push
orb
and
shll
push
mov
and
or
inc
cmp
and
sahf
movsl
xchg
test
popa
sti
movsb
fnstenv
cmp
sbb
xor
rorl
das
fs
aad
into
add
dec
sbb
mov
repnz
mov
or
insl
cmp
inc
pop
aad
dec
mov
testl
iret
dec
gs
scas
jmp
or
dec
aad
ss
icebp
and
sbb
inc
ja
cli
inc
xchg
shld
sub
jl
and
test
xor
add
lea
outsl
sbb
sahf
daa
loope
lds
push
sub
lret
or
pop
and
inc
test
rcl
push
dec
sahf
push
or
aas
popa
in
pop
stos
or
fnstenv
or
ja
test
pop
sbb
enter
das
outsb
sub
sbb
or
pusha
cmpsb
daa
mov
es
inc
cmpsl
inc
xchg
daa
loope
mov
add
mov
sub
js
lods
loope
lret
loopne
cwtl
add
mov
push
and
add
enter
popf
mov
jle
pop
fnstenv
cmp
jle
mov
sti
xchg
mov
adc
xchg
mov
xor
add
pop
inc
lahf
or
lret
sbb
mov
mov
mov
cmp
adcb
fwait
cmp
ret
add
jae
mov
add
cmp
leave
ljmp
movsb
rolb
pop
sbb
addr16
cmpsl
and
xor
popa
sub
test
or
aam
lods
in
adc
popa
aaa
lods
add
and
test
dec
imul
jno
mov
pop
lcall
iret
jl
iret
cmp
inc
or
add
sbb
clc
orl
xchg
mov
clc
or
fucom
js
sahf
add
sub
fsts
mov
xor
imul
les
and
adc
cltd
test
sbb
es
push
lret
adc
into
push
push
xor
daa
inc
jbe
adc
cld
cmp
or
rol
sbb
aad
aas
xchg
mov
mov
inc
jnp
add
pop
jo
aaa
loope
xchg
pop
popa
out
test
ljmp
xorl
push
add
add
xor
scas
sbb
outsb
bound
inc
pop
lods
dec
insl
push
xchg
mov
adcb
arpl
sbb
xchg
inc
imul
adc
mov
repz
and
sub
sbb
xchg
mov
repnz
sbb
cmp
or
js
sbb
push
ror
loopne
push
inc
cmp
iret
cwtl
mov
xor
inc
jle
adc
pop
and
andl
jnp
jns
inc
adc
bound
dec
add
pop
dec
pop
nop
jo
jecxz
scas
ret
fisttpll
xchg
hlt
ss
dec
ja
push
shlb
pop
sbb
arpl
aas
push
cwtl
xor
test
daa
test
ja
popa
int3
imul
sahf
test
icebp
sub
or
les
lea
sbb
mov
lea
or
push
les
xchg
xchg
xor
adc
faddl
iret
repnz
mov
add
sub
jp
or
test
mov
pushf
jle
iret
mov
nop
test
ret
xtest
pop
jl
pop
mov
adc
ret
inc
xchg
jnp
cmp
adcl
adc
push
pop
pop
loope
pop
add
xchg
adc
movsb
test
rcrb
pop
ret
imul
push
cmpsl
sub
test
mov
sub
fs
es
dec
sbb
pop
jle
or
pop
fcompl
xchg
xchg
cmp
sbb
push
and
and
sub
push
out
dec
and
popa
jg
sbb
and
mov
mov
mov
das
pop
cmpsl
add
xor
iret
cmpsb
xchg
repz
sub
mov
enter
movsl
sub
andb
pop
ret
mov
xor
dec
xor
sbb
test
and
fwait
add
sbb
cmp
imul
fsubl
push
inc
mov
lock
mov
addr16
xchg
mov
xor
xor
push
add
lods
adc
pop
pop
orl
sub
xchg
mov
dec
and
xchg
inc
push
loopne
xchg
lahf
and
rcll
push
fdivrs
xor
push
push
adc
sbb
jg
add
lods
push
jl
loop
add
push
and
sub
sbb
and
push
ret
jb
and
movsb
lock
out
jge
jecxz
add
loop
sub
inc
rclb
mov
and
xchg
adc
sbb
outsb
pusha
adc
pop
fs
mov
imul
push
sub
sub
enter
fldt
lahf
and
adc
lods
call
pop
mov
fdivrp
fcomps
or
pop
nop
push
inc
pop
shrb
sbb
and
cmp
sub
pushf
loope
or
inc
lock
packsswb
leave
mov
xor
iret
and
out
and
pop
out
std
idivl
xchg
cmp
mov
xchg
fwait
loopne
testb
push
pushf
in
jecxz
and
jmp
shrb
nop
xor
push
pop
jecxz
movsb
push
xor
jno
mov
jbe
pop
pop
ss
out
andb
loope
mov
pusha
in
xor
lcall
out
sub
fisttpll
xchg
pop
gs
xchg
add
rcrb
in
cmp
push
pop
popf
mov
lret
testb
test
and
cmp
add
loope
dec
int3
dec
dec
inc
sub
cmpsl
loope
clc
xor
fwait
xchg
es
mov
sbb
xor
cmp
mov
xor
xchg
xchg
add
adc
in
mov
sahf
repz
mov
cli
fidivrl
clc
and
and
daa
out
adc
and
add
or
and
rcr
add
test
cmpsl
leave
xchg
sbb
sbb
jge
sbb
es
push
ss
sti
insl
dec
push
add
pusha
pop
mov
sbb
xchg
sbb
out
rolb
shl
sbb
test
inc
add
sbb
push
mov
pushf
jnp
es
jbe
sub
xchg
ret
sbb
jmp
imul
or
or
cmc
call
jl
sbb
add
jae
int
nop
ret
hlt
xchg
or
imul
mov
out
ljmp
daa
mov
cmc
lea
sub
and
add
stos
xor
ficoms
mov
mov
or
sub
xchg
mov
shl
in
jo
adc
insb
xchg
jb
sub
out
int
cmpsl
pop
rcrl
pop
subl
gs
shll
jl
bound
imul
push
xchg
sbb
popa
dec
or
cltd
sbb
sbb
sub
sub
mov
add
mov
jl
fs
dec
pop
mov
in
mov
and
cltd
xorl
aam
inc
add
cmp
and
mov
cli
fldcw
ja
fcom
sub
xor
jmp
scas
int3
push
add
out
push
cwtl
add
jmp
mov
sbb
loopne
xlat
insl
and
jge
jns
cmp
pop
cmpsb
aad
xor
or
or
sub
test
adc
ret
stc
mov
inc
cmp
shrl
shl
adc
aaa
or
jmp
sub
mov
pop
add
push
xchg
into
das
add
xor
mov
testb
push
jbe
in
mov
and
push
xor
push
insb
and
push
ret
pop
or
add
pop
push
in
lods
xlat
icebp
xor
shl
lahf
sahf
sub
mov
test
movsl
test
shr
mov
and
imul
mov
push
icebp
dec
scas
mov
jb
mov
jo
rorl
ret
fcompl
les
xor
or
or
push
je
xor
ljmp
shrb
out
fs
cmp
jno
adc
rclb
mov
test
add
outsl
out
add
jecxz
push
xor
cli
xorb
pop
and
xor
shlb
int3
in
clc
lret
lret
pop
flds
push
adc
call
imul
in
ret
fs
jmp
push
pop
adcl
cmpsb
repnz
lret
sub
add
or
and
adc
add
xor
bound
mov
cltd
mov
pop
pusha
add
rep
lret
bound
or
mov
add
pop
decb
add
in
or
iret
insb
and
les
test
arpl
adc
lcall
fadds
cmp
repnz
movsb
lahf
out
mov
cli
popa
dec
es
mov
iret
sbb
lods
pop
jns
pop
invd
push
xor
ja
xor
enter
call
popa
xchg
sbb
outsl
lods
loopne
loope
stc
repnz
shll
ret
dec
inc
inc
xchg
sub
call
pusha
and
push
int3
add
shll
lds
mov
aad
loope
test
call
mov
mov
pop
jmp
mov
or
loope
call
sahf
or
insb
pop
daa
xchg
sub
xlat
add
call
pop
dec
and
scas
shrb
idiv
inc
loopne
cmp
adc
out
popl
pop
add
sub
cmp
or
dec
push
sbb
shlb
inc
mov
nop
add
jl
lret
or
leave
xchg
push
sub
ds
mov
lds
push
mov
push
or
xchg
jbe
dec
test
in
popf
adc
pusha
cltd
mov
mov
jmp
cmp
icebp
xor
stos
add
dec
bound
mov
insb
jnp
sub
fiaddl
mov
arpl
cpuid
jl
mov
push
bound
gs
push
or
push
jmp
jl
mov
ret
lods
call
pop
into
in
dec
fs
outsb
lahf
shll
clc
loop
inc
repz
and
lock
sub
dec
iret
and
loopne
xchg
mov
pop
adc
jae
add
dec
cli
add
mov
fbld
sbb
cwtl
icebp
je
jl
adc
mov
sub
push
call
xchg
nopl
add
mov
popl
pushf
in
cmp
push
cmpsl
mov
add
mov
add
nop
lods
jnp
gs
mov
add
push
adc
xor
test
cltd
xchg
add
aaa
push
lods
push
add
call
mov
mov
sbb
xchg
or
fimull
repz
add
inc
xchg
push
lret
and
xchg
dec
push
or
in
insl
xchg
adc
jle
mov
pop
xchg
pop
jne
int3
add
xchg
outsl
add
jo
ret
cmp
loope
test
push
sbb
mov
mov
rcll
dec
and
ficoms
js
dec
sub
cmp
das
pop
dec
int3
pop
and
mov
lods
cli
dec
pop
int3
jno
add
bound
mov
in
add
leave
and
mov
push
cmp
xor
push
sbb
pop
test
ljmp
pop
ret
sbb
out
add
or
scas
lea
add
lds
and
or
movsb
mov
cwtl
inc
cmc
jle
div
lock
mov
jp
and
xor
shll
sahf
out
sub
scas
sarb
xlat
in
jle
stos
pop
sbb
lods
stos
xor
and
inc
outsl
pop
sbb
aaa
mov
test
or
mov
push
test
mov
and
cmp
xlat
out
js
xorb
add
fwait
divl
add
das
adc
sbb
push
loopne
add
jecxz
je
movsb
sti
sbb
cs
xor
insb
add
push
xchg
xchg
sbb
fdivs
std
shl
sub
add
xchg
es
push
xchg
dec
sub
mov
push
pop
mov
dec
and
sub
filds
push
adc
pop
negl
mov
jl
or
fs
xchg
xor
les
cmp
pop
or
add
inc
xchg
jge
mov
jnp
push
ret
dec
hlt
rolb
hlt
cmp
or
xchg
rclb
and
xchg
incl
es
add
int3
ss
and
test
clc
lods
outsl
pop
jp
sub
lcall
fldt
hlt
ret
inc
movsl
push
iret
sub
xor
loope
cwtl
das
daa
sbb
or
and
fcompl
add
mov
xor
pop
cmpsl
insl
mov
sub
cmp
jp
das
sub
pop
loop
fsubs
into
mov
jl
lods
insb
cmp
jb
xorb
movsl
repz
xchg
test
jno
jge
adc
dec
and
adc
shll
xchg
lods
cld
in
loope
cmc
inc
out
sub
xchg
ret
mov
xchg
inc
popl
pop
and
push
insb
xchg
add
cmp
into
es
call
jle
xor
mov
pop
add
das
gs
rcrl
je
cwtl
inc
add
sub
clc
sbbl
shrl
or
dec
mov
mov
jp
push
dec
iret
add
cmp
getsec
xor
iret
fisttpl
or
mov
adc
pop
xchg
xorl
cltd
fstps
icebp
roll
sbb
adc
xchg
mov
xor
push
ror
xchg
into
inc
xchg
jns
xchg
add
or
imul
jmp
jp
ds
test
inc
mov
add
loope
jecxz
and
imul
adc
cli
outsb
das
imul
add
cmp
loope
mov
js
cmpb
ret
das
add
andb
xchg
push
cmp
enter
fcomp
dec
leave
cmp
push
loopne
mov
jecxz
movsl
pop
je
sti
stc
adc
push
stos
negb
add
adc
jb
clc
xor
add
xorl
inc
int
in
cmpsb
pusha
push
sbbl
and
add
add
or
inc
pop
pop
shlb
inc
or
mov
inc
dec
xchg
pop
mov
sub
inc
icebp
outsb
pushf
enter
and
jo
jmp
in
or
clc
or
adc
mov
push
add
inc
sbb
dec
cmp
inc
and
and
sbb
adc
ficompl
pop
sub
and
lahf
mov
jns
xor
clc
add
jno
loope
push
sub
or
inc
dec
sub
cli
xchg
cmpb
inc
fneni(8087
fldl2t
cwtl
adc
cmpsl
jge
dec
and
hlt
add
loope
popa
or
and
push
push
xchg
inc
dec
push
xchg
test
xor
mov
test
mov
je
ds
xchg
ret
cmp
xchg
imul
pop
outsl
pop
mov
test
pop
jl
shl
mov
in
rep
pop
inc
loopne
iret
xor
mov
xor
in
lahf
cpuid
lea
dec
add
push
xchg
test
sub
cmpsb
movsb
in
pushf
lods
xor
es
xchg
sbb
mov
mov
mov
popa
sahf
and
add
das
mov
inc
xor
pop
sub
sbb
push
add
jbe
arpl
les
xchg
sub
push
mov
cmp
adc
aas
mov
adc
mov
clc
xchg
sbb
aas
sti
push
sub
xchg
sub
sbbl
pop
xchg
mov
inc
fistl
dec
cwtl
jl
lret
or
or
out
daa
mov
jno
negb
popa
and
push
ja
jle
push
sbb
lods
and
xchg
imul
das
push
je
fldcw
inc
sbb
sbb
and
or
dec
frstor
mov
add
jns
mov
enter
add
test
pop
mov
jno
lret
dec
fidivl
fldenv
jo
sub
cmp
nop
mov
sbb
les
pop
sbb
push
bound
test
iret
adc
stos
push
imul
popa
mov
mov
cmp
cmc
or
cltd
and
adc
mov
fs
xchg
icebp
call
aaa
jns
add
pop
gs
repz
add
push
jno
xchg
inc
dec
hlt
adc
xchg
add
and
push
inc
imul
iret
das
push
push
or
xor
in
les
dec
popl
cltd
jno
dec
cmp
mov
lods
fisubrs
test
fwait
dec
or
add
dec
inc
call
inc
pop
pusha
jns
inc
sub
fdivs
ficomps
mov
dec
lret
jb
add
xchg
mov
sub
push
mov
xor
cmp
inc
xor
xchg
add
pop
mov
sarl
les
adc
lea
loop
test
xchg
clc
cld
pusha
xchg
adc
sbb
lea
or
add
cld
push
mov
mov
arpl
inc
dec
jge
jle
sbb
ficomps
sbbb
dec
xlat
addb
inc
jne
jo
jge
lahf
lods
call
push
or
push
and
dec
ret
mov
or
jge
jno
subb
inc
cmp
push
sub
dec
int3
inc
lds
lea
dec
daa
in
rcll
jg
xchg
imul
nop
and
mov
sub
xchg
cwtl
rolb
dec
xor
and
dec
dec
push
out
lock
hlt
fcoms
and
xchg
push
push
or
push
aas
leave
add
mov
int3
mov
sbb
punpcklbw
and
hlt
jbe
das
xor
jmp
xchg
sbb
and
push
pop
cmp
inc
mov
mov
aam
gs
and
sbb
ret
rorb
ret
lock
test
xchg
shlb
mov
jecxz
jmp
sub
roll
ret
inc
mov
mov
inc
inc
jecxz
mov
and
jmp
pop
or
xchg
das
sub
mov
and
pusha
add
jmp
lds
cmp
cmp
mov
addr16
fldenv
inc
addb
loopne
sub
cli
jle
push
xorl
test
add
and
loopne
pop
loopne
xor
das
dec
rcl
daa
sub
mov
pop
int3
sub
add
xchg
adcl
xchg
stc
pop
xchg
push
mov
stc
pop
xorl
and
scas
mov
jecxz
mov
and
jnp
jg
xchg
gs
jl
ret
andl
or
pop
push
leave
cmp
xchg
push
adc
mov
andl
test
cmp
xchg
pop
xchg
fstl
aaa
es
imul
js
xchg
mov
xor
jo
shrb
adc
mov
in
xchg
hlt
adc
and
sub
fcoms
int3
inc
pop
mov
fcmovbe
push
daa
cmp
mov
sbbl
xor
mov
jle
pop
add
xor
inc
cmp
mov
cmp
adc
sahf
cmp
mov
push
es
aad
xor
fimuls
sub
cwtl
sub
cmp
add
sub
testl
push
add
jne
imulb
adcl
dec
add
mov
xchg
orb
mov
jle
lret
mov
ret
and
push
pop
sub
pusha
sti
and
addr16
mov
adc
rorl
sub
repnz
add
adc
mov
jo
jb
andb
mov
mov
lahf
jno
out
push
fcmovbe
test
ret
mov
test
mov
dec
pop
loopne
popf
mov
cmpsl
movsb
movsl
push
sbb
mov
fwait
addr16
in
repnz
cmp
pusha
add
aas
add
add
inc
cmp
test
inc
xchg
or
ja
bnd
mov
mull
dec
push
lret
inc
push
shrl
lahf
fistl
and
fimull
lods
adc
sbb
mov
adc
add
sub
insl
jecxz
out
jno
pusha
and
outsl
mov
aas
pop
andb
lock
push
fwait
out
or
add
dec
xor
mov
add
fcmovu
sub
jnp
test
sarl
ret
scas
mov
xor
jg
loope
or
mov
es
mov
xor
sub
mov
sub
ljmp
sbb
fistpll
iret
push
mov
sub
dec
xchg
mov
and
shll
and
mov
mov
cmpb
mov
mov
mov
clc
xor
dec
bound
jmp
mov
cmp
adc
add
movsl
mov
outsl
xor
int
lods
icebp
push
xchg
mov
xor
lods
pop
lods
inc
das
dec
cwtl
sti
mov
mov
xor
push
sbb
or
rolb
xchg
lock
mov
pop
cmpsb
xor
mov
or
inc
dec
imul
pop
mov
xor
gs
inc
out
pop
mov
popa
sub
jae
loope
adc
lds
fxch
popa
sbb
xor
lcall
jae
out
in
add
arpl
adc
mov
pop
pop
xchg
or
lock
xchg
fsubrs
dec
push
sbb
sub
pop
dec
dec
callw
mov
and
sub
push
movsl
xor
xchg
mov
aas
add
arpl
roll
and
mov
popa
data16
dec
inc
stos
rcr
adc
mov
leave
into
xor
xor
stos
add
mov
sub
test
and
into
in
popa
outsb
push
sub
loope
in
cltd
add
cwtl
sub
lea
push
xor
dec
in
mov
dec
mov
insb
cmp
in
or
mov
outsb
xchg
fmuls
ss
push
push
add
test
aaa
scas
movsl
jl
jno
xchg
lret
xchg
enter
es
and
outsl
sub
icebp
outsb
mov
push
inc
push
enter
into
test
mov
adc
notl
jno
xor
jo
and
faddl
es
inc
out
iret
add
pushf
popf
sub
sbb
xor
add
sbb
mov
stos
jno
add
popf
sbb
sar
push
out
add
mov
in
add
push
orb
fsubs
mov
sbb
and
sub
and
rcll
jno
sbb
add
lods
mov
and
xchg
add
lea
mov
dec
sbb
rcr
rolb
aad
cmc
or
mov
mov
nop
nop
sbb
inc
jmp
mov
jbe
ss
sub
movsb
inc
fbstp
aas
sbb
xchg
push
pop
addr16
add
xchg
aam
movsb
xchg
cmp
or
rorb
into
mov
lret
das
sarl
mov
push
add
sbb
sub
add
and
lea
inc
inc
mov
pop
dec
adc
pop
mov
mov
shl
xchg
lods
sbbb
or
xor
xchg
cmpl
cwtl
dec
mov
lcall
mov
mov
mov
xorl
push
mov
mov
xor
sub
cmpsl
int3
cmpsl
sub
arpl
add
imul
movsb
mov
or
cmpsb
or
push
dec
jns
or
and
fldcw
push
mov
jnp
dec
mov
lods
lahf
imul
jecxz
aaa
test
std
outsl
sbb
pop
add
outsl
test
add
add
add
jne
push
lahf
adc
mov
loope
cmpsl
fsubs
or
lret
mov
add
cmpsb
insl
or
dec
lea
pop
cmp
pop
push
sbbb
sub
push
pop
xlat
test
push
ret
cld
js
rcrl
ss
sub
lds
jnp
daa
cmpsl
mov
test
jne
adc
das
pop
add
ret
test
pop
es
push
pop
aas
or
dec
sub
mov
mov
add
loope
jle
jmp
and
fstpl
and
jo
or
sub
xor
sbb
jbe
lcall
dec
xchg
call
xchg
test
out
jge
ror
pop
adcl
add
pusha
dec
add
push
pop
xchg
mov
push
jecxz
adc
xor
xor
sbb
mov
mov
mov
push
jge,pt
mov
in
int
mov
rcll
add
cltd
add
dec
and
fcmovnb
gs
mov
mov
and
jecxz
sbb
ljmp
sbb
and
test
loopne
int3
xchg
mov
addl
add
roll
lea
and
dec
sbb
loope
adc
push
aaa
push
xchg
sbb
daa
mov
sti
fadds
jg
inc
mov
push
loope
lods
cmc
and
shrl
sbb
aaa
fsubs
jb
out
testb
clc
cld
fbstp
add
jl
out
shrl
repnz
mov
cld
xor
psubusw
clc
pop
popa
dec
add
cmp
push
push
dec
pop
loope
mov
daa
mov
mov
push
loope
sbb
fnstcw
mov
fdivrs
sbbb
mov
xor
imul
adc
pop
lock
sub
jb
dec
mov
jecxz
or
ljmp
mov
pop
pop
dec
and
xlat
adc
pop
add
bound
add
push
jp
sub
addr16
imul
leave
add
out
mov
push
inc
jecxz
pop
aas
pop
inc
inc
test
mov
pop
fildll
xor
xchg
dec
clc
sbb
push
mov
popf
jmp
sub
jge
andb
iret
fisttpll
data16
out
dec
jmp
lock
inc
mov
push
cld
test
add
pop
add
leave
sbb
push
mov
test
addr16
sahf
mov
dec
daa
movl
mov
mov
pop
insl
fsubrl
out
cmp
out
and
cmp
movb
push
cmpsb
stos
jo
aad
int
call
mov
shld
fwait
xchg
aas
or
insb
inc
mov
push
shl
pop
stos
push
inc
clc
cmp
push
mov
ljmp
or
sub
pusha
inc
cmp
jecxz
adc
clc
xorb
jp
mov
jecxz
sar
push
mov
jo
and
fwait
mov
jno
test
cmp
add
mov
daa
dec
loop
pop
jo
icebp
test
cltd
jg
xor
mov
sbb
and
or
jne
insb
fnstcw
dec
cs
cmp
mov
pop
stos
pop
lcall
popf
push
dec
and
dec
pop
add
js
mov
push
lret
dec
add
push
or
jecxz
xchg
insl
ljmp
jo
insl
lods
add
dec
ja
or
adc
add
lods
xchg
push
insl
sbb
cmpb
testb
or
push
js
pop
dec
or
mov
jmp
mov
sti
sbb
pop
inc
sti
icebp
jo
add
jmp
xchg
dec
imul
cli
sbb
loop
fbstp
daa
sbb
add
mov
mov
hlt
xor
sbb
das
inc
aas
pop
mov
and
cmpsl
push
sbb
pop
lock
cmp
nop
std
add
fcompl
lahf
fisttpl
sbb
or
pop
loop
mov
ret
push
addr16
cmp
loop
inc
andl
xchg
arpl
jo
dec
arpl
aad
and
mov
push
aad
fsubrl
bound
add
das
inc
cmp
movsl
inc
xor
mov
jbe
or
loope
push
scas
pop
jge
xchg
push
scas
cmp
cli
dec
fadds
xchg
ror
cmp
push
dec
pop
adc
jnp
ds
xchg
add
mov
dec
pop
cmp
push
dec
into
fistpll
push
cmovo
xor
adc
insl
push
aaa
test
shrb
mov
jno
cmp
pop
aad
int3
in
sub
xor
mov
pop
es
lahf
xchg
push
daa
add
aas
sbb
add
push
push
rep
xor
mov
add
sub
loop
mov
into
xor
bound
sbb
ds
cmp
xor
fidivrs
sbb
push
or
mov
push
add
and
lods
add
into
sarb
repz
sti
mov
rcll
add
dec
cmp
jbe
adc
add
xchg
stos
ja
pop
clc
movsb
cmp
adc
add
test
push
invd
cs
mov
sbb
push
imul
cmpsw
add
pop
loope
push
cmp
adc
je
jns
and
lods
fchs
in
and
fisttpl
dec
add
jo
lcall
daa
add
daa
sbb
dec
out
cwtl
push
outsb
ret
dec
and
je
out
and
sbb
pop
pop
add
imull
sbb
mov
ds
ds
jl
sub
sbb
jle
shlb
and
popf
adc
jle
pop
ds
mov
je
and
js
lock
rcrb
or
jecxz
add
add
jle
rcrl
jl
dec
cmp
fwait
repnz
and
cmp
std
sub
loopne
fidivrs
pop
mov
and
daa
pop
in
adc
cmp
sbb
pop
xor
pusha
das
push
push
pop
shlb
addr16
or
in
xchg
xor
daa
add
test
adc
in
aaa
xlat
scas
and
je
dec
fwait
mov
push
cs
push
out
sbb
dec
add
jo
and
dec
xchg
shlb
movsl
push
mov
add
xor
out
pop
add
in
mov
mov
imul
pushf
xchg
push
pop
and
push
out
nop
cmp
das
es
push
sub
and
xchg
add
xor
dec
jo
out
out
nop
or
in
stos
inc
dec
xor
inc
sbb
push
outsb
push
dec
ret
push
pushl
outsb
mov
add
add
jo
add
addr16
adc
add
pop
inc
rcrb
mov
inc
xorb
cld
movsl
xorl
pop
in
pusha
jl
and
cmp
or
movhps
dec
pop
xchg
xchg
sahf
outsb
xchg
inc
dec
mov
fisubrl
scas
sbb
inc
or
and
roll
ret
rolb
jne
sbb
stos
repz
loope
dec
push
xchg
inc
dec
jo
or
dec
xchg
push
jno
fiadds
and
es
mov
pop
fcoms
mov
scas
rcrl
jne
add
filds
lss
add
push
or
xor
movsl
xchg
inc
pusha
fs
in
adc
bound
jbe
add
stos
xchg
sbb
lods
es
cs
inc
sbbl
jno
xor
push
outsb
pop
xchg
addl
xor
idivl
or
imul
push
sbb
add
int3
and
test
add
loope
lea
shrb
inc
mov
fistps
repnz
dec
sarb
aaa
mov
or
fisttpl
jno
call
push
lret
lea
ja
data16
add
mov
jno
pop
daa
pushf
cmp
xor
das
mov
sub
insb
xchg
lret
jo
xchg
mov
jb
cmpsb
and
orl
jb
setbe
fdivrl
push
dec
push
xchg
push
xor
add
xor
push
das
daa
cs
int3
ss
inc
push
ret
mov
lock
mov
mov
mov
lret
jmp
cmpsl
movsl
in
mov
lods
bnd
or
stc
into
inc
adc
xchg
inc
jns
xchg
ret
pop
pop
xchg
sbb
in
dec
andl
cmp
repnz
xchg
xor
fstpl
inc
add
cltd
ds
mov
ja
inc
lea
sub
xchg
cmp
inc
mov
inc
test
push
sub
xchg
jl
add
jle
dec
int3
ror
xor
xor
mov
add
cmovg
pop
push
xor
dec
out
movsb
xlat
flds
movsb
je
inc
sub
sbb
popa
push
pop
test
fst
push
sub
dec
andl
xchg
js
in
jb
shrb
or
ds
shl
loope
push
push
fmulp
mov
das
jnp
loope
sbb
inc
aad
mov
rclb
xchg
and
xlat
adc
pop
push
inc
sub
mov
adc
dec
push
and
pop
mov
jb
orl
add
add
pusha
xchg
pop
push
ja
rorb
test
mov
daa
or
fs
add
fsub
mov
mov
je
aas
pop
mov
inc
cmpsl
cltd
pop
add
nop
xchg
mov
inc
pop
push
ja
enter
mov
outsl
stos
mov
mov
mov
add
pop
cmp
push
push
xor
push
xor
jne
mov
cs
cmp
cmpsl
stos
jbe
jo
mov
add
ret
inc
int
dec
or
cs
ja
ret
jb
inc
inc
sub
insb
icebp
das
and
xchg
popl
hlt
xor
lods
mov
add
lea
clc
push
repz
jo
pop
gs
bound
jne
sub
and
stos
and
inc
or
test
push
jmp
inc
mov
test
xor
jae
sbb
jecxz
dec
pop
add
add
roll
inc
fwait
xlat
mov
pushl
loop
xor
jo
mov
mov
xor
cwtl
sub
inc
pop
sbb
mov
jbe
cmp
lcall
xchg
dec
and
sbb
push
mov
iret
lahf
pop
pop
push
mov
and
push
out
mov
push
pop
cs
sbb
pusha
jge
mov
arpl
popa
and
sub
inc
mov
jmp
or
mov
fbstp
jo
sub
dec
fcoml
jp
add
add
dec
dec
fcompl
jecxz
lahf
cwtl
dec
loop
cmp
cmp
lods
add
add
sti
stos
jno
xchg
repnz
push
cmp
out
dec
es
dec
jne
adc
addb
les
lea
shrl
leave
daa
add
push
inc
add
pop
xor
test
jno
jp
jg
js
je
ja
mov
dec
cmc
shl
cltd
orb
mov
pop
fcmovnbe
sub
fldl
mov
stos
and
add
mov
push
dec
jge
loope
and
mov
and
shrb
inc
jl
cmp
xchg
or
xorb
add
dec
sub
push
adc
icebp
jp
popa
mov
fldcw
push
push
aas
sub
cmp
mov
lods
mov
cmp
mov
int3
inc
arpl
loope
or
insb
pusha
les
dec
mov
mov
sub
inc
mov
push
xchg
scas
inc
jo
aaa
sub
insl
mov
int
ret
dec
shlb
cmp
inc
sub
push
push
or
jmp
data16
ds
cmp
in
xchg
dec
es
pop
insl
shll
ds
pop
or
ja
sbb
mov
ret
push
ret
stos
in
sbb
fs
lahf
sti
lret
rol
xchg
add
xor
in
lret
mov
cmpsb
cwtl
pop
je,pt
dec
lods
lea
add
inc
call
fisttpl
ffreep
push
xlat
daa
inc
pop
jmp
ja
pop
cmpsb
imul
sahf
gs
mov
stos
fwait
clc
je
fbstp
or
and
jns
push
leave
mov
cmpsl
andl
pop
lcall
andl
hlt
lock
jmp
push
mov
jbe
pop
cs
call
cld
jno
dec
add
adc
mov
xor
pop
out
add
cmp
lcall
lock
ret
adc
xlat
push
and
xor
and
mov
lcall
xlat
mov
leave
add
push
push
and
pop
push
inc
sub
icebp
je
lret
pop
push
or
pop
lds
inc
arpl
pop
cmp
dec
imul
dec
andl
push
lcall
mov
adc
inc
or
jl
movb
bound
addb
jbe
aad
int3
js
xchg
bound
mov
rcll
sub
lcall
dec
mov
mov
lods
adc
mov
xchg
pop
pop
ja
jo
push
pop
cmc
mov
push
mov
adc
adc
pusha
test
or
paddsw
lock
dec
cmp
and
into
jl
mov
fstl
mov
leave
jle
imul
xor
sahf
fcoml
repz
enter
mov
sbb
inc
sub
fsubs
jnp
adc
pop
add
rcrl
out
int
mov
enter
loopne
mov
cmp
ret
pop
fcomp
loope
adc
jnp
dec
or
popa
leave
sub
push
nop
repz
and
mov
lcall
jo
inc
cltd
xor
pop
or
testl
enter
pop
pop
push
out
adc
testl
int3
xor
dec
cmp
das
mov
lods
out
mov
lret
mov
ret
add
and
aam
and
fs
nop
mov
movsb
je
jns
popf
shr
dec
cmp
jno
addr16
lods
push
movsl
sbb
rcll
cmp
and
dec
pusha
xchg
add
and
movsl
and
pop
mov
cmp
mov
cmpl
add
ljmp
mov
das
adc
xchg
lods
insl
movsb
pop
inc
and
cmp
flds
sbb
xchg
cwtl
or
or
add
pop
pop
add
icebp
loope
adc
cmp
adc
icebp
jle
adc
xchg
and
cmp
jb
mov
jo
insl
outsl
push
add
nop
aaa
pop
dec
cmp
xchg
cmp
dec
cmp
inc
inc
pop
push
cli
cmp
and
xor
xchg
dec
jl
rcl
insb
mov
mov
shlb
fimull
inc
popa
test
das
clc
and
dec
jge
ret
pusha
dec
es
push
daa
push
jb
ud1
jecxz
mov
imul
imul
adc
xchg
scas
lcall
cmpsb
mov
adc
lret
ja
jo
adc
push
sbb
sbbb
jne
dec
push
scas
mov
and
inc
push
inc
addr16
jmp
sbb
cmp
shll
mov
add
cmp
sti
imul
imul
lock
mov
je
or
iret
loopne
and
test
mov
enter
fcoms
mov
mov
mov
pop
ss
aaa
sub
add
call
pop
or
xchg
mov
and
inc
adc
inc
out
xor
data16
lea
ss
nop
test
jne
add
mov
es
mov
mov
outsl
ds
sub
xor
addb
inc
call
sub
jne
inc
outsl
fxch
cmp
xchg
cmp
pop
sub
sbb
sbb
inc
lods
mov
cmc
dec
mov
aam
imul
mov
adc
push
inc
cld
dec
add
jo
cltd
or
pop
enter
pop
fcomps
mov
push
es
pusha
test
jecxz
and
test
xlat
push
js
and
push
jp
jne
lock
pop
es
push
subl
ret
inc
je
mov
stos
mov
es
add
jmp
add
push
dec
adc
lret
xor
lret
shll
push
add
cmpsl
scas
xor
and
cmc
dec
mov
add
bsf
les
sbb
les
add
xor
pusha
mov
push
aaa
out
aaa
jnp
and
push
inc
and
mov
das
sbb
pop
cmp
jno
mov
popa
push
data16
mov
nop
je
jno
mov
sbb
add
jno
add
ret
notb
mov
pop
add
lods
push
pusha
test
rcrb
rorl
sbb
xor
or
mov
and
and
test
das
loopne
das
call
push
je
push
and
ja
imulb
sub
stos
loopne
add
jno
scas
sub
xchg
pop
bound
push
cmp
lock
jecxz
scas
shl
movsl
je
mov
repz
add
divps
add
mov
xor
push
iret
push
je
or
gs
sub
adc
iret
push
pop
out
adc
push
add
push
xchg
or
loope
test
bound
mov
dec
negl
mov
pop
hlt
jle
cwtl
mov
jns
xlat
daa
sbb
cs
shl
mov
lea
ja
xchg
mov
dec
jmp
test
loop
lret
flds
mov
rclb
push
jmp
lcall
repz
push
scas
pusha
lds
popa
mov
add
lea
sbb
push
dec
jge
push
sbb
mov
and
and
mov
out
clc
fcom
test
inc
mov
lret
mov
imul
popa
test
mov
scas
adc
or
subb
add
add
mov
inc
cmp
pop
cmp
sbbl
mov
imul
jl
sbb
movsb
sahf
sub
sbb
cmp
push
inc
test
xchg
je
popa
or
sbb
fisubl
sbb
outsl
pop
xchg
pop
xchg
inc
dec
add
xor
mov
aas
mov
imul
mov
adc
movsb
or
mov
jp
arpl
out
jle
xor
out
dec
jno
std
cmpsl
andl
pop
inc
fmuls
int3
cmp
fisttpll
ds
shlb
xchg
inc
mov
and
sub
cmp
fildll
add
or
adc
test
cmpsl
pop
and
or
ret
sub
jecxz
adc
sti
test
call
movsl
ds
out
sub
test
sub
inc
push
nop
shrb
pop
mov
pop
cmp
iret
adc
add
test
mov
test
sub
jb
xchg
mov
arpl
cmp
pop
inc
adc
push
cmp
mov
mov
xchg
jnp
xchg
psubusw
xor
mov
sbb
cmpsl
aad
inc
and
pop
mov
or
test
add
sbb
cmp
pop
cwtl
add
xchg
push
imul
aam
or
sub
and
sbb
mov
xor
popf
fsubrp
in
jg
inc
dec
rolb
xor
dec
jp
rcr
xchg
pop
imul
out
add
xor
test
xor
fidivrl
mov
test
mov
mov
add
and
push
xor
pop
or
addl
sub
cmp
in
notl
dec
lods
nop
test
dec
dec
sbb
sub
ds
cmp
xchg
aad
imul
sbb
xchg
mov
call
enter
mov
mov
add
and
xor
sbb
sub
movsb
sbbl
dec
xor
gs
test
and
adc
xor
add
add
cwtl
and
jo
loopne
call
inc
arpl
xchg
add
adc
and
jmp
inc
xchg
xor
add
or
xor
outsl
loop
iret
js
jle
clc
inc
jmp
inc
out
dec
daa
jge
xor
addr16
dec
inc
push
sub
mov
jae
sub
mov
repz
and
pusha
das
test
popa
xlat
push
pusha
lods
lods
bound
inc
fbld
dec
adc
sbb
mov
cmp
push
xchg
test
outsb
pop
loope
and
xchg
pop
adcb
inc
lahf
pop
or
stos
rclb
and
add
lret
test
jae
cmc
insl
cmp
mov
push
scas
sub
and
adcb
xlat
and
and
inc
and
arpl
mov
leave
push
or
daa
pop
ljmp
call
adc
jo
push
aam
xor
push
imul
jle
push
adc
cmpsl
bound
clc
mov
ffree
push
movsl
cmpsl
dec
or
adc
and
movsl
adc
aas
inc
roll
push
and
movsb
mov
jbe
and
ret
xchg
mov
pop
or
add
lret
mov
sub
or
mov
adc
jae
add
enter
sub
shll
xlat
mov
mov
push
pusha
and
jne
pop
mov
jp
cmpl
push
push
ds
js
mov
pop
mov
or
adc
sbb
sub
mov
xor
add
jmp
adc
leave
test
push
int
jne
cmc
mov
int
cltd
into
adc
rep
cmp
nop
pushf
xor
add
cmove
adc
dec
sub
pop
js
pop
hlt
xor
add
sub
movsl
test
push
sahf
and
push
aam
or
ja
in
mov
inc
fwait
pop
mov
js
and
jmp
and
pop
mov
mov
xor
scas
or
cmp
and
push
je
out
sub
mov
aaa
sub
mov
iret
pop
or
xor
xchg
push
addl
xchg
in
push
mov
cwtl
sub
cmp
mov
leave
push
cs
popf
je
and
loopne
gs
sub
test
jge
jnp
loop
sub
rcr
repnz
sbb
add
push
fcom
gs
push
pop
sub
dec
sbb
pop
inc
lret
je
inc
push
sub
pop
pop
sub
cltd
mov
mov
adc
inc
movsl
push
adc
lods
jb
xchg
lahf
mov
cmp
test
mov
stos
xchg
or
mov
loop
fnstenv
xchg
shl
jecxz
cmc
outsl
lret
push
fldenv
lods
hlt
out
add
insl
cmp
data16
add
pop
jmp
dec
jp
and
orb
sbb
mov
ljmp
dec
mov
xchg
cmpsl
pop
add
adc
fadd
and
push
fldl
test
sbb
test
xorb
aaa
push
sub
cltd
push
dec
cmp
adc
daa
in
mov
fs
stc
jns
sub
mov
and
adc
int
out
mov
fsubs
je
je
fisubrl
xlat
inc
add
sbb
xorb
subl
movntq
cmp
pop
adc
push
ret
mov
imul
scas
push
orl
jno
cmp
add
mov
shl
or
push
mov
jb
repz
adc
out
dec
mov
int3
cmp
cmp
lret
pusha
cmp
hlt
cmp
in
ljmp
cmp
cmp
dec
or
mov
pop
adc
clc
push
push
xlat
fistpl
add
out
sub
ficompl
test
cmpl
adc
js
shrb
call
xchg
xor
mov
mov
xor
cmp
dec
inc
cmpsl
add
or
adc
push
js
rcr
add
es
dec
call
stos
sahf
add
ss
std
cmp
push
add
dec
clc
ret
ret
sub
xchg
xor
adc
pop
rcrl
and
adc
sbb
inc
addl
push
dec
fsubs
icebp
and
xor
cli
loopne
int3
sets
aam
and
adc
je
ss
inc
stos
ficompl
or
movsb
mov
add
cmp
lret
xor
aad
dec
stos
dec
es
mov
aam
inc
push
imul
push
jge,pt
movsb
add
int
sub
inc
cltd
test
sub
xchg
push
lods
mov
aad
mov
jo
hlt
out
xor
lods
mov
gs
roll
lods
bound
jae
adc
push
pop
stos
mov
popa
or
pop
add
xchg
rorb
popa
dec
adc
shlb
adc
scas
add
decb
xor
add
js
subb
add
leave
jbe
add
addl
dec
cmp
push
inc
lods
mov
cmp
test
mov
xor
movsb
sub
rclb
inc
add
gs
loope
call
lahf
cmp
pop
daa
insl
je
and
lds
in
jb
mov
lds
test
dec
pusha
out
cmp
fists
stos
js
add
or
add
jno
cmp
ret
lods
mov
shlb
dec
push
imul
insl
add
xor
sbb
push
popa
add
faddl
jnp
je
jo
popa
and
xchg
adc
adc
pushf
sbb
sub
add
mov
adc
outsl
inc
pusha
pop
daa
dec
popa
pushf
cmp
mov
movsb
and
xor
cmpsb
insl
aad
imul
mov
rcr
xor
imul
mov
outsl
scas
cmpsb
push
ja
push
das
cmp
xorb
jno
cmp
aam
in
jg
push
sub
aas
push
nop
lock
and
imul
andl
sti
push
sbb
push
js
test
push
ret
inc
je
push
xchg
or
xor
jp
fs
mov
push
pop
xor
fsubl
add
and
mov
movsl
ja
pop
sbb
icebp
loop
mov
dec
pop
pop
scas
xorb
out
xchg
sbb
lods
add
adc
hlt
push
fistpl
imul
push
insl
ja
add
loope
or
mov
in
inc
mov
push
add
sub
push
dec
jb
aaa
jle
xchg
push
push
cmp
xchg
ds
mov
mov
adc
push
psubusb
pusha
pop
sbb
dec
inc
jo
int
daa
popa
int3
imul
fs
pusha
and
and
sub
loope
pushf
test
cmp
sbb
into
test
sub
sbb
lret
cmp
fstpl
jo
and
add
or
push
outsb
arpl
xchg
popa
pop
mov
gs
inc
popa
push
and
sbb
les
sti
inc
sarl
cmp
out
xchg
mov
mov
fwait
xlat
sbb
push
mov
or
fisubrl
inc
test
mov
jae
adc
out
lods
add
add
adc
push
push
sbb
add
xchg
or
mov
adc
icebp
inc
adc
daa
jo
inc
cwtl
sub
jl
dec
cmp
xor
mov
ret
push
sub
mov
cmp
rorl
jae
add
scas
sbb
push
dec
push
mov
or
mov
push
repnz
adc
inc
pop
xchg
push
test
ret
mov
out
pavgw
jp
das
adc
mov
adc
sub
xchg
or
push
sub
popf
add
mov
fwait
test
and
clc
dec
lods
mov
adc
add
loop
enter
adc
sub
mov
mov
push
mov
dec
xchg
push
shlb
sub
jo
or
inc
into
mov
or
add
icebp
mov
pop
jae
add
cmp
jo
xor
loopne
movsb
mov
stos
movl
ja
cmp
add
mov
popa
cwtl
sarl
sbb
mov
lock
jecxz
lds
mov
fs
push
jecxz
jle
rcll
aam
sarl
jp
jmp
jo
subb
mov
push
cltd
inc
xor
xchg
and
mov
sub
cs
arpl
sbb
inc
lret
push
jo
mov
and
jbe
and
and
sub
ljmp
inc
idivl
out
cmp
in
push
push
jbe
sbb
pop
adc
lret
lcall
push
push
jmp
inc
or
cld
cwtl
ljmp
pop
loop
shrl
dec
dec
dec
add
lea
mov
cld
aam
shlb
push
jecxz
movsl
cwtl
sbb
dec
call
aaa
mov
dec
adc
rcll
pop
loop
pop
add
and
dec
cmp
mov
cmpsl
lods
xor
push
je
push
roll
addr16
cwtl
jp
stos
das
stos
out
loop
sahf
push
lahf
push
test
cmpsb
cmc
cmp
sbb
xchg
insl
jo
dec
push
sbb
sldt
fnstsw
call
push
lock
xchg
addl
xchg
push
shrd
nop
sub
mov
pop
outsl
imul
sbb
test
inc
pop
or
jne
dec
popf
lcall
dec
jge
xor
dec
cmp
pop
push
adc
aad
ret
int3
notb
test
cmc
aas
inc
xlat
or
mov
and
xstore-rng
cmpsl
pop
pop
test
arpl
adc
sub
pop
in
push
or
jecxz
push
xor
sub
inc
push
lret
add
add
add
xchg
das
in
add
push
cmp
jae
jg
ss
mov
sbb
push
dec
jno
mov
xchg
inc
js
aaa
arpl
scas
pop
lret
aad
add
icebp
movsb
or
ret
sbb
push
xlat
mov
psllq
inc
push
xor
test
in
add
xchg
ret
sar
jp
dec
aad
lret
aas
daa
jecxz
aam
and
out
pop
cmpl
adc
add
movsl
add
cmp
add
arpl
mov
adc
or
test
xor
pop
inc
cmp
stc
and
push
setge
pop
icebp
or
lcall
dec
inc
outsb
inc
xor
es
call
pop
subl
inc
mov
add
cwtl
lret
ja
in
or
and
fistl
popf
xor
and
sbb
add
cmc
xor
push
lret
imul
sbb
fwait
and
mov
sahf
push
aam
xchg
push
sbb
out
mov
pop
xor
gs
add
inc
jle
aad
sti
sbb
enter
push
or
jecxz
cmpsl
lahf
mov
es
data16
into
lret
jo
xchg
xor
sub
scas
dec
xor
lock
mov
fwait
addb
mull
add
icebp
and
jp
sub
xor
jl
mov
add
inc
daa
pop
mov
repz
jl
lods
or
out
lahf
lods
loope
mov
sbb
ja
rorb
jb
sub
leave
and
add
lea
cmp
and
js
gs
or
add
mov
movsl
pop
outsb
add
lods
mov
xchg
test
add
lret
nop
lcall
inc
jecxz
xchg
test
inc
push
sbb
add
scas
sub
inc
sbb
shlb
mov
insb
popf
and
inc
addr16
or
and
sarl
sub
jbe
insl
dec
jecxz
jne
test
sub
aas
std
je
mov
pop
enter
orb
add
int3
outsb
ljmp
lahf
cmp
pusha
add
icebp
movsb
jb
test
imulb
push
sbb
mov
xor
and
xor
sub
ljmp
jp
add
dec
es
jp
shll
and
shll
int
imul
adc
jno
xor
push
jnp
mov
xor
pusha
dec
nop
mov
popf
xchg
or
sbb
mov
iret
pop
add
adc
daa
daa
pop
popf
shlb
pop
and
xor
jne
or
lea
inc
shlb
test
dec
notl
mov
es
out
push
xchg
call
out
iret
mov
add
add
adc
sub
repnz
roll
and
xchg
jns
out
jno
adc
inc
cmp
rolb
shlb
mov
mov
out
cltd
fs
popa
pop
push
nop
mov
andps
pop
xor
data16
and
and
xchg
inc
movsl
cmpsb
icebp
pop
mov
dec
fmuls
fcomp
rorb
and
lret
inc
and
add
mov
insl
jmp
je
jnp
push
xchg
dec
loopne
add
clc
jle
addl
mov
xchg
push
bound
adc
sbb
sbb
gs
add
sahf
insl
and
repz
cli
mov
add
je
test
push
mov
leave
fiaddl
or
push
push
jnp
jl
add
test
movsl
jo
insb
aaa
xchg
in
pop
xor
mov
das
bound
repnz
lock
add
out
jge
xlat
xchg
scas
imul
insl
or
fidivl
movsb
mov
pushf
push
pusha
mov
and
pop
add
ja
mov
movsl
cld
jmp
add
faddl
fldl
mov
nop
inc
movsl
rol
inc
cmpsl
aaa
addl
and
and
into
lods
imul
pop
mov
add
cmp
adc
add
imul
lds
mov
sbb
ficomps
js
fucomip
xchg
pop
les
push
pop
fldt
fwait
mov
scas
hlt
ljmp
add
inc
inc
sbb
lods
pop
ss
mov
mov
ret
aam
inc
sbb
lods
inc
fdivs
add
test
inc
sbb
and
mov
popa
and
adc
dec
add
sahf
sbb
mov
xor
aad
lret
lea
lods
cmp
mov
mov
sbb
aam
sbb
and
sub
stos
inc
mov
lods
stc
ret
sub
sbb
xchg
xchg
mov
adc
inc
xchg
xchg
cld
jo
push
add
lcall
jge
sbb
out
icebp
xor
inc
mov
adc
pop
adc
mov
orb
or
push
sarl
aad
pop
test
mov
xchg
mov
adc
and
cltd
and
ret
mov
dec
push
and
and
insl
mov
daa
add
mov
stos
cmp
outsl
pop
lods
dec
das
incl
nop
lea
inc
jge
into
inc
mov
repz
lea
mov
or
hlt
test
or
pushf
jnp
sub
add
stos
sub
data16
sub
in
push
and
cld
rcrb
xchg
cs
lret
cmp
and
in
mov
popl
inc
cmpsl
insb
movsb
in
inc
insl
cmp
rorb
push
loop
add
sbb
mov
adc
add
dec
ret
jo
sub
jae
mov
mov
mov
sbb
rcrl
pop
scas
mov
andb
xor
sbb
push
test
test
ss
and
insl
arpl
fsts
push
xlat
fimull
sub
mov
inc
dec
daa
mov
inc
mov
test
jo
pop
dec
in
inc
lret
ficompl
sbb
mov
xorl
nop
icebp
loope
arpl
inc
inc
lds
xor
das
loope
insb
lods
arpl
dec
sti
dec
pop
and
test
outsb
push
inc
out
add
sbb
dec
xchg
test
push
or
loopne
nop
inc
jno
imul
add
pop
std
or
popl
shlb
dec
xor
inc
jo
ljmp
sub
and
data16
add
lods
mov
ss
mov
sbb
inc
call
iret
mov
fnstenv
inc
and
push
fnstcw
loope
loope
cwtl
mov
inc
cmpsl
or
clc
sub
and
lods
je
lret
inc
and
cmpsb
sbb
push
inc
push
fadd
dec
scas
rcr
lods
stos
pop
push
rcll
sub
sbb
adc
jmp
je
lds
bound
shll
lods
out
cmpsb
push
addr16
inc
enter
shlb
nop
add
push
cmp
xchg
mov
adc
movsb
push
insl
and
sub
cmp
or
pop
xchg
jnp
bound
and
add
leave
inc
mov
inc
out
ds
sub
sub
push
lahf
and
xchg
add
xor
pop
rclb
add
jge
mov
mov
xchg
cmc
cld
jno
clc
and
push
je
cld
pushf
cmpsl
inc
sbb
pusha
imul
adc
push
into
push
or
add
mov
lods
test
xor
lods
cmp
sbb
and
cmp
addl
adc
mov
sub
pop
inc
test
leave
call
or
inc
push
into
scas
push
or
pop
or
adc
popa
sbb
dec
subb
sahf
test
sarl
cmpsl
out
insb
jmp
push
cmpsl
adc
pop
xchg
daa
pop
mov
lods
jae
dec
inc
addr16
pop
xchg
lahf
xor
mov
fdivrl
pop
js
mov
ror
shll
xchg
or
pop
ljmp
adc
ja
xorb
add
add
gs
inc
add
test
xor
sub
fldenv
add
jnp
xorb
bound
jbe
pop
or
faddl
ret
dec
add
lret
and
cmpb
mov
pop
movsb
icebp
adc
dec
adc
sbb
leave
int3
fisubrs
fsubrs
xor
add
add
or
pop
cmp
xor
fs
call
push
mov
adc
inc
rorb
xor
xchg
dec
push
mov
test
fiaddl
mov
imul
inc
sub
dec
add
test
shll
and
addr16
fadd
pop
pop
lea
and
cli
fs
mov
lods
cmp
pusha
sarl
mov
mov
ljmp
into
hlt
pusha
xor
gs
push
in
rolb
addr16
mov
imull
xor
mov
inc
es
and
sub
sbb
in
clc
das
pop
adc
adc
xchg
aas
in
int
shll
and
pop
ja
or
loope,pt
lret
lea
inc
les
lret
push
mov
push
mov
push
loope
or
stos
adc
add
dec
xor
in
aad
shll
lock
xlat
xorb
or
add
orb
lods
aam
imul
push
or
iret
aas
sub
out
sahf
pushl
dec
and
sub
into
movd
inc
inc
push
stos
icebp
cmpsl
frstor
sub
ljmp
cmp
dec
das
pop
xor
sub
add
cmpsl
xor
add
adc
lea
stc
sahf
out
movsb
pop
adc
or
mov
push
mov
pop
adc
loopne
cmp
ljmp
test
add
jo
fistps
or
inc
inc
xor
aas
push
and
insb
sbb
ret
jge
ret
sarb
sub
xlat
pop
sahf
xor
lahf
cli
popf
cmp
incb
incl
nop
push
adc
fwait
pop
sbb
xchg
flds
addb
mov
jnp
or
mov
xorl
int
imul
mov
mov
xor
xor
adc
pop
fistl
push
lods
ljmp
inc
or
and
outsl
pop
mov
outsb
xor
adc
mov
sbb
adc
gs
xor
jp
in
xchg
xchg
insl
lea
mov
mov
cmpsb
outsb
fdivrs
aaa
inc
in
in
or
lret
aas
inc
stc
ret
shrb
add
inc
jmp
pop
pop
inc
adc
inc
stc
dec
insl
aam
pusha
and
je
or
sti
mov
mov
out
add
add
sub
xchg
imul
cmp
xacquire
jo
add
insl
mov
ret
or
and
fwait
or
iret
jecxz
inc
cwtl
jne
and
jp
adc
and
sub
add
pusha
call
loope
pop
das
inc
mov
add
xchg
mov
jno
iret
gs
or
mov
adc
mov
mov
xor
mov
add
dec
push
cmp
or
cs
idivl
lods
pusha
popa
dec
ror
std
popa
mov
or
in
frstor
xchg
lret
pop
aas
xchg
inc
mov
stos
xchg
push
jmp
shlb
ffree
mov
pop
ret
arpl
xchg
sub
stos
idivl
ret
jg
dec
add
lods
cmpsl
or
cmp
mov
sub
lds
daa
mov
mov
mov
xor
shlb
add
xchg
and
or
push
xchg
add
inc
and
iret
mov
sbb
shlb
notl
push
lea
cmp
add
repz
mov
sldt
orl
les
popa
lret
and
mov
cmc
sbb
fcomp
pusha
sub
jb
inc
js
and
gs
test
jg
aaa
cmp
sbb
push
sbb
testl
pop
cmp
add
cmp
mov
xchg
mov
mov
xchg
rcll
imul
pop
inc
jmp
mov
xchg
or
stos
sub
jbe
das
movsl
or
dec
adc
xor
fcomps
adc
xor
sahf
sbb
or
stos
adc
or
pop
fldenv
inc
mov
ret
jo
pusha
jecxz
and
clc
ret
pop
pop
xchg
adc
cmp
adc
jp
movsb
sbb
pop
xchg
add
pop
nop
xchg
jl
add
add
push
mov
and
fstl
fwait
imul
lods
popa
cvtdq2ps
or
add
fwait
ret
scas
pusha
scas
dec
dec
shll
lods
pop
dec
add
pop
pop
adc
jns
stc
pusha
arpl
addb
stos
clc
ret
std
shl
adc
and
in
dec
xor
push
movl
fdivrl
addb
dec
pop
cmp
or
sub
inc
mov
popa
bound
jp
fnstsw
inc
mov
xchg
test
pop
xor
sbbl
cmp
cmpsl
sbb
jmp
jmp
iret
nop
sub
sbb
adc
iret
and
fimuls
cwtl
daa
mov
orb
inc
fwait
adc
add
ljmp
addb
pop
or
dec
adc
popf
inc
fcomps
mov
mov
repnz
adc
mov
and
jnp
es
outsb
and
lods
xchg
xor
ffreep
push
push
push
je
mov
mov
add
sub
fnstsw
or
in
cmpsl
push
mov
icebp
fwait
ret
adc
lds
pop
push
and
leave
and
prefetch
inc
push
cmp
mov
inc
sbb
jns
lahf
lods
mov
mov
cmp
sub
lret
dec
ror
movsl
jmp
fmuls
dec
xchg
mov
jmp
mov
imul
testl
inc
lcall
mov
mov
notl
in
mov
mov
adc
outsl
add
aad
div
pop
ss
shr
sub
or
stos
push
popf
jbe
and
jecxz
push
lcall
negl
and
mov
pop
xlat
inc
imul
arpl
addr16
add
xchg
jno
add
cmpsl
mov
add
add
in
add
imul
icebp
inc
or
xchg
icebp
cmp
mov
sub
inc
ret
and
iret
fiaddl
iret
add
arpl
dec
test
std
add
mov
sbb
push
das
lret
lret
fcomps
mov
ja
add
sub
and
sbb
bound
aad
jnp
adc
enter
xchg
add
push
adc
mov
movsl
or
and
inc
ret
xchg
add
mov
mov
mov
and
stc
movb
decb
jo
icebp
dec
jecxz
loope
mov
dec
add
mov
push
dec
ja
xorl
adcb
arpl
push
pop
cltd
std
add
loopne
mov
ss
dec
ja
add
pusha
fisttpll
adc
pop
icebp
orb
fldenv
xchg
lret
mov
ljmp
cmp
popf
jae
xchg
inc
add
sub
test
in
movsb
rclb
dec
sub
lods
movsb
mov
jne
xor
xor
sbb
add
shlb
movsb
inc
dec
aaa
adc
xchg
add
mov
inc
pop
mov
clc
sbb
xchg
shll
imul
popa
and
jnp
mov
clc
push
add
mov
xor
test
push
shll
movsl
adc
loop
mov
lock
sub
jecxz
adc
xchg
or
andl
mov
sbb
mov
pop
pop
adc
sub
xchg
mov
push
outsl
jno
fstpl
int
insl
adc
xorb
sbb
mov
jae
mov
and
jne
and
jb
insb
jmp
movsl
inc
sub
push
adc
xchg
adc
ret
dec
outsl
jge
dec
lcall
ss
popa
mov
inc
fadds
les
sbb
dec
pop
mov
je
push
lds
scas
loopne
fcmovnu
outsb
and
dec
sub
scas
sahf
mov
ret
mov
xchg
test
xor
cs
push
inc
pop
jno
mov
or
es
add
js
sbb
add
aaa
pop
pop
sti
sub
lods
loopne
sbb
je
pop
mov
add
aaa
test
mov
or
inc
add
pop
ss
in
pop
mov
xor
xchg
push
push
dec
sbb
loope
cmc
movsl
popl
adcl
push
pop
jbe
popl
add
add
dec
orl
and
xchg
xchg
andb
nop
pop
adcb
pop
pop
daa
dec
movhps
cltd
add
test
sub
and
or
push
loop
mov
and
add
adc
arpl
jae
sub
movsb
mov
dec
mov
iret
mov
popf
ret
imul
shll
inc
mov
or
or
daa
lahf
xor
addr16
push
daa
pusha
mov
and
inc
mov
and
add
pop
ret
pop
shr
add
ds
popl
sti
or
xchg
cmpsl
cwtl
jbe
or
jmp
xchg
xor
dec
insl
mov
inc
xchg
add
pop
xor
xchg
mov
mov
fstps
shr
mov
popa
inc
nop
sbb
shlb
mov
xchg
pop
and
mov
push
mov
out
imul
or
and
xchg
xor
and
ret
ret
jae
add
loopne
add
sbb
push
lods
push
mov
lea
mov
ds
out
mov
xor
mov
and
addr16
rcr
fstps
loop
lods
jmp
xchg
fdivl
add
popf
lcall
mov
ficoml
adc
xlat
arpl
icebp
add
cmpsl
std
cmp
cmp
or
or
fimuls
or
fistps
dec
loope
mov
xor
sbb
in
jb
mov
or
push
and
mov
lret
ret
lds
jnp
int
jns
xor
movsb
cmpsb
dec
jae
mov
fistpl
adc
fsub
push
mov
or
in
mov
xor
test
mov
jne
cwtd
sub
fcomps
jecxz
pop
dec
cmp
add
push
pop
add
xor
mov
add
add
push
jecxz
dec
daa
push
imul
mov
xchg
push
sbb
jae
or
sub
mov
cmp
or
clc
sbb
clc
aas
xor
test
or
roll
outsl
aad
pusha
insb
rorl
loope
jp
mov
imul
adc
jg
cmp
or
aaa
and
mov
xor
mov
xchg
inc
sub
ret
sbb
jne
bound
fucomp
jecxz
inc
jmp
js
or
add
pop
and
jnp
lods
pop
rcrb
cld
js
push
mov
testl
into
add
and
or
imul
jbe
inc
or
mov
mov
ret
enter
inc
cmp
inc
leave
jle
arpl
dec
inc
fcomps
into
stos
in
shlb
add
sub
inc
bound
xor
int
sub
into
sbb
rcr
cmp
push
xorb
and
xor
adc
insb
mov
bound
sarb
loope
jo
jne
lret
adc
in
divl
mov
and
adcl
ret
sub
cli
sub
jmp
loope
dec
pop
dec
imul
xor
push
out
or
xchg
inc
jne
sbb
mov
fldl
mov
cmpsb
mov
inc
jmp
addr16
aam
loope
icebp
pop
mov
jno
sbb
insl
push
inc
push
sbbl
xchg
addl
outsb
jnp
ds
push
xchg
shlb
loop
stos
fstps
inc
roll
inc
subb
fwait
gs
stos
jge
or
xchg
les
add
jp
movsl
lods
dec
xor
daa
test
mov
jbe
outsb
sub
push
popa
and
and
fnstsw
inc
adc
pop
or
lret
sbb
pop
inc
inc
dec
test
xchg
lret
movsl
in
inc
lods
addb
addr16
fwait
outsb
or
jb
pop
pop
sub
dec
and
sbb
sbb
imul
movsl
adc
sbb
pop
or
push
insb
mov
adc
push
jno
add
and
push
insl
scas
es
sub
pop
rcrl
out
inc
sbb
lret
mov
test
dec
jecxz
cmc
cmp
xor
jecxz
push
or
dec
imul
hlt
je
cs
ret
ret
ret
pop
popa
and
jno
cmpl
inc
cltd
xor
sbb
and
fs
sub
xor
cld
push
inc
cmp
dec
aaa
jecxz
js
inc
mov
aaa
lea
out
sbb
popa
push
movsl
jno
mov
scas
xchg
and
pop
ret
inc
fbld
fisttpll
mov
loope
xor
mov
dec
arpl
pop
xchg
rorl
pop
sbb
rorl
inc
mov
push
aad
aas
ffree
pusha
test
adc
andl
cmpsl
arpl
mov
pop
repz
jecxz
or
sahf
inc
xor
lods
lret
mov
xorl
mov
mov
add
mov
cmp
jae
xchg
fistl
cmpsb
ds
or
lods
int
inc
add
or
jbe
cmpsl
sbb
sarl
and
add
mov
xchg
roll
in
xor
outsb
pushf
lds
or
push
jns
leave
sub
daa
pop
movsl
call
or
faddl
enter
pop
mov
outsl
jne
pop
mov
dec
test
push
or
lahf
out
je
hlt
loope
test
insl
mov
xlat
lock
std
bts
leave
pop
ret
xor
mov
jns
cltd
push
outsb
and
push
inc
gs
pop
xchg
push
jl
mov
sbb
mov
sub
xchg
pop
inc
add
lock
sub
scas
or
inc
fisubrl
and
shr
add
fidivrs
fcoms
inc
mov
loop
add
test
and
push
inc
loope
xchg
and
mov
jnp
mov
add
out
sub
popa
mov
push
les
js
xor
scas
cmp
push
mov
rolb
and
jecxz
push
or
dec
and
lret
test
dec
pop
imull
movsb
roll
lret
negl
fwait
ja
xor
ja
out
repz
add
lods
dec
inc
adc
and
sbb
arpl
mov
xchg
fldl
shlb
sub
shll
dec
jl
shl
adc
sub
aam
movl
push
and
mov
and
push
mov
jge
test
mov
ja
adc
mov
ljmp
pusha
add
roll
mov
lret
mov
xor
imul
hlt
shll
mov
movsb
test
arpl
pop
cs
pusha
inc
inc
dec
xchg
xchg
push
cmp
nopl
scas
cmp
mov
xchg
cs
cmpl
fwait
rolb
pop
jo
sbb
and
fsubrs
cwtl
sbb
dec
in
les
cmp
outsl
movsl
jb
sub
mov
or
push
cwtl
or
sub
sub
add
mov
xchg
daa
pop
mov
add
add
lods
jnp
cmpsb
pop
loop
iret
lock
inc
fiaddl
pusha
xor
lret
cld
fs
gs
push
or
testl
cmpb
popa
inc
pushf
in
cmp
inc
imul
lods
inc
push
insb
subb
xor
mov
mov
pop
add
movsl
dec
addr16
xlat
ret
mov
and
stos
xchg
pop
pop
pop
push
adc
xchg
sub
mov
test
jne
nop
mov
test
push
fwait
in
outsb
add
lea
adc
add
gs
stos
iret
xchg
and
lea
loopne
or
mov
cmp
mov
and
dec
test
jbe
loop
imul
sti
popa
pop
fwait
or
xor
sub
lods
lret
lods
xchg
add
jno
rclb
test
rcrl
call
rcrb
nop
and
test
or
dec
cmp
cmpsb
je
lret
mov
insl
adc
dec
sub
aas
sarl
cmpsb
dec
add
xchg
test
fs
shll
xchg
mov
xchg
mull
mov
xchg
lods
cmp
cwtl
dec
ljmp
stos
push
cmp
jmp
pop
and
dec
jl
pop
repz
xchg
stos
push
inc
adcl
sub
lret
push
jbe
sbb
mov
pop
sarb
pop
dec
ja
pop
add
cmp
repnz
bound
sbb
in
sbb
inc
push
shll
mov
add
xchg
bound
sub
inc
add
pop
or
mov
mov
push
push
adcl
cmp
xor
jge
or
addr16
add
test
out
add
rol
insl
sbb
pop
aaa
or
push
addr16
es
repnz
mov
add
sub
adc
and
xor
jle
arpl
sub
push
sbb
and
push
test
or
daa
inc
int
push
and
movsb
sbb
lret
cmp
arpl
loopne
xlat
push
pop
sub
into
and
dec
mov
fdivrs
hlt
push
jns
mov
sub
dec
xchg
pop
cld
sar
add
push
adc
xor
out
xchg
mov
cmp
push
cmp
pusha
pop
cmp
ljmp
push
fldenv
inc
inc
jns
jo
xor
or
adc
and
ss
je
fsts
or
dec
jecxz
xorb
fwait
mov
add
sbbb
bound
or
or
cmpsl
ja
lods
and
int
xor
or
mov
sbb
cmp
inc
adc
and
js
dec
pop
aaa
sbb
or
inc
inc
push
lods
push
dec
stos
xor
leave
sbb
add
jae
aam
mov
inc
or
xlat
fisttps
sub
cltd
lahf
enter
adc
hlt
bnd
sub
cmp
lcall
outsb
fmuls
loop
cmpl
scas
inc
mov
or
fxam
sub
in
fsubrs
rorl
mov
xchg
adc
dec
jp
cmp
clc
shrl
mov
subb
push
lahf
shrb
mov
pop
rol
xchg
sbb
ficompl
fwait
lods
push
scas
scas
bound
dec
ljmp
xchg
xlat
adc
xchg
cmp
fsubrs
adc
cmp
cltd
jle
cltd
mov
mov
mov
lcall
imul
add
push
mov
ja
add
sub
sbb
je
xor
in
rclb
mov
mov
xor
mov
sbb
and
cmp
cmp
mov
out
jp
iret
test
stos
addb
inc
pop
xchg
dec
cmp
cmpsb
fisttps
addr16
lock
inc
outsb
cmovg
pushf
jns
xor
fcomps
popa
out
clc
data16
sub
popa
imul
jbe
lea
push
inc
mov
stc
mov
dec
inc
loope
cmp
leave
sub
fldt
inc
xchg
add
fcompl
test
mov
test
mov
adc
stos
data16
dec
cmp
dec
das
mov
sub
mov
inc
cmp
lock
loope
push
ret
inc
leave
mov
and
in
bound
ljmp
fdivrs
and
dec
mov
add
lret
mov
dec
jnp
mov
jmp
xor
mov
pushf
adc
fsubs
push
fiaddl
sbb
mov
fwait
jnp
dec
or
mov
add
pop
jno
gs
and
rcrb
test
jmp
dec
add
sbb
lea
inc
ret
push
loop
icebp
xlat
popf
adc
or
jge
out
test
lock
inc
inc
or
cmpsb
stos
dec
pop
fnsave
sbb
movsl
sbb
adc
cltd
add
out
mov
add
dec
mov
pop
cmc
rclb
sbb
xchg
add
popa
test
jecxz
test
sbb
imul
xchg
lock
sbb
sub
sahf
xchg
lods
mov
jle
ds
sub
push
fldl
sbbl
jb
shll
xor
rep
roll
mov
inc
adc
fs
mov
mov
mov
adc
add
call
jecxz
test
or
jno
or
sub
jo
push
mov
pop
push
fiadds
or
mov
loope
inc
dec
or
and
push
pop
inc
popa
nop
lods
lea
rcr
jle
call
pop
ds
xchg
movsb
mov
sbb
addr16
cwtl
lods
sub
shll
dec
sbb
or
in
in
pop
add
shrb
xchg
or
jo
or
les
ja
rol
aaa
dec
xchg
popf
or
mov
jbe
sahf
and
loope
ja
sub
xchg
in
push
push
sbb
inc
sarb
jne
xor
in
mov
adc
out
adc
sbb
and
mov
rcrb
data16
ss
orl
in
adc
mov
lods
or
or
sub
pusha
insl
dec
xchg
jmp
shrl
test
xor
or
inc
or
sbbb
mov
push
mov
sub
adc
push
mov
aas
push
inc
sbb
and
xchg
xchg
xor
adc
jno
ret
jno
inc
imul
ds
cmp
cld
push
jb
xchg
dec
or
nopl
fadds
js
jne
jnp
pop
or
lea
fidivrs
dec
pop
mov
rorl
add
jle
jle
cs
jmp
and
lods
sub
xchg
fimuls
fst
movsl
add
lock
fisubrl
or
xor
dec
xchg
mov
sbb
or
jb
mov
insb
xchg
rcrl
filds
or
test
xchg
inc
stos
subb
fsubrl
or
sub
fisttps
mov
sub
dec
jle
push
pop
xchg
sub
pop
xchg
jecxz
orl
xchg
push
lret
add
stos
or
add
push
or
push
sub
shrl
out
or
add
add
movsl
push
pop
mov
dec
rolb
and
loopne
add
ja
mov
pop
jno
cwtl
or
dec
lea
test
lret
dec
adc
mov
daa
lds
push
je
push
dec
fcmovu
insb
pusha
test
sbb
push
jge
push
pop
mov
fstpt
jno
and
les
mov
xchg
push
nop
jge
add
adc
pop
xlat
shr
and
cmp
mov
cltd
dec
sbb
shll
or
orb
inc
and
les
push
lea
fidivl
int
mov
push
adc
adc
push
add
les
inc
sbb
icebp
inc
lret
and
jmp
jge
and
out
or
mov
rcrl
adc
push
xchg
ss
xchg
cmp
mov
scas
and
test
test
mov
adc
adc
inc
fdivrs
sahf
mov
loopne
inc
pop
shll
push
out
je
fwait
xchg
xchg
mov
or
adc
mov
adc
push
pop
das
loopne
mov
cmp
xchg
add
jne
and
dec
sbb
ret
add
xchg
rolb
sbb
adc
adc
and
sahf
out
add
insb
push
mov
inc
add
add
inc
or
adc
and
popf
or
inc
enter
dec
jne
dec
sti
cs
sahf
or
or
inc
es
sub
dec
lods
rcl
ja
adc
cmpb
movb
push
adc
es
and
xchg
cli
out
loop
cmpsb
jbe
arpl
add
xor
shrl
xorb
lret
push
add
aas
pop
jecxz
or
stos
daa
xchg
xor
jb
stos
mov
cmp
mov
dec
jo
movsb
out
cmp
xchg
mov
inc
xor
adcl
jl
mov
push
cmpsl
inc
call
lea
repz
mov
stos
xor
mov
add
jbe
and
and
les
rorb
nop
push
mov
add
push
jbe
jbe
call
pusha
dec
push
sub
stc
stc
loopne
add
xor
fsubs
dec
jo
xor
popa
repnz
add
sbb
out
arpl
aam
mov
adc
adc
pop
ret
xor
push
in
jg
or
test
test
add
nop
out
imul
and
adc
daa
or
out
sub
xlat
ljmp
mov
pop
inc
out
rorb
pop
push
add
inc
pop
add
adc
in
cmp
ficomps
mov
jle
das
dec
xchg
mov
add
adc
cmpl
imul
jle
inc
mov
push
outsl
jbe
aas
mov
cmp
add
pop
add
sub
js
jne
pusha
mov
test
ds
dec
sub
jmp
cmpsl
xchg
mov
mov
jmp
push
push
xor
xor
or
mov
push
push
mov
push
lret
jl
jecxz
lods
movb
movsl
pop
pusha
in
sbbl
dec
adc
sbb
cwtl
adc
cmovo
push
or
stc
and
ds
repnz
iret
str
jle
jp
incb
and
sub
inc
lea
pushf
ds
fs
pop
div
and
jae
mov
dec
call
sub
push
pop
sub
push
mov
sbb
xor
ljmp
std
aam
dec
pop
setae
inc
dec
out
dec
lods
aaa
fstl
ret
push
dec
fdivrs
test
lret
enter
sub
jp
push
inc
and
adcl
dec
or
fnstcw
pop
push
fmull
pop
cmp
or
scas
pop
fildl
dec
push
xchg
xor
das
cmp
pusha
nop
inc
or
fmuls
pop
loope
aaa
arpl
mov
adc
shll
fwait
add
push
ja
ret
shlb
jns
or
out
add
in
cmp
jne
insl
dec
or
jo
scas
pusha
sbb
mov
fisttpl
ret
push
jl
pop
loope
aaa
pop
xor
lods
jmp
jnp
das
scas
and
inc
faddl
push
pop
xor
es
ja
xchg
sbbb
inc
xchg
xor
out
inc
adc
mov
dec
sub
ds
pushf
gs
aaa
sti
xor
orb
aam
push
cs
daa
mov
shlb
inc
inc
cmpsb
mov
enter
inc
xor
inc
xor
xor
jl
mov
cltd
jne
and
ss
jns
push
iret
cmpsl
adc
roll
sbbb
xor
shll
add
sub
idivl
push
aam
inc
ss
adc
cmpsl
xchg
cmp
mov
or
jb
jg
lret
pop
add
daa
test
ret
and
dec
enter
jl
jns
adc
jmp
mov
mov
push
adc
aas
mov
add
fsubrl
pop
mov
push
sub
pop
sbb
jo
and
inc
sbbl
lcall
inc
js
dec
mov
sar
inc
pop
sti
sysenter
xchg
dec
seta
sub
test
cmpsb
sbb
mov
mov
inc
das
pop
adcl
pop
daa
mov
stos
mov
mov
sbb
iret
pop
adc
or
inc
test
mov
cltd
hlt
or
popa
sbb
daa
sbbb
adcl
mov
push
cmp
icebp
sub
cmc
mov
rcl
pushf
mov
jmp
cmpsl
sbb
incl
mov
js
jg
xchg
lock
pusha
or
scas
sahf
mov
out
leave
pop
cmp
repnz
daa
jle
add
out
jl
out
es
lcall
mov
dec
and
outsl
stc
cmp
adc
ds
and
mov
jne
aaa
mov
mov
jmp
add
leave
jbe
cmc
push
es
xor
sub
jne
pop
mov
imul
lcall
aaa
out
insb
or
ret
sub
add
mov
scas
nop
insl
subl
loop
shll
xchg
test
cli
jne
rclb
or
jp
mov
sahf
mov
xor
in
shr
add
lret
and
cltd
xor
mov
mov
add
fnsave
adc
mov
mov
cmpsb
test
int3
out
adc
inc
faddp
or
dec
lcall
add
out
cmpsl
add
adc
push
add
dec
dec
icebp
mov
sub
add
adc
leave
mov
add
loopne
xor
jo
and
or
je
push
xor
imul
scas
mov
js
adc
jge
hlt
inc
ss
add
mov
jp
mov
iret
lea
xchg
push
inc
adc
cmp
add
fmull
fiaddl
ja
add
sbb
sbb
push
add
lock
pop
and
stos
inc
xchg
call
sub
and
js
ja
adc
sub
sub
loopne
and
dec
or
mov
das
sub
movsb
stc
int3
cmp
mov
scas
jecxz
mov
pop
cmp
adc
popf
sub
and
scas
add
sub
mov
adc
pop
add
in
add
push
stos
mov
sbb
xchg
jae
fmuls
cmpsb
lods
xor
xor
or
mov
insb
dec
add
cld
movsl
sub
sub
dec
xchg
fistps
sub
ja
add
aam
push
pop
inc
xchg
sbb
push
jb
mov
cmp
or
mov
mov
xlat
out
inc
xor
xchg
cld
lcall
js
sbb
sbb
divb
mov
adc
mov
pop
push
xchg
sub
jns
push
sub
xchg
mov
add
jmp
lahf
cmp
sahf
push
push
std
sub
xor
push
mov
sar
js
int3
fucomip
or
push
mov
mov
aam
adc
data16
sbb
fidivrs
add
jmp
in
popf
in
adc
or
mov
mov
add
sbbl
in
pop
mov
push
sbb
sbb
leave
rcl
jecxz
inc
xchg
mov
xchg
imul
pop
cmp
xchg
mov
hlt
jg
insb
fildl
stc
movl
mov
sbb
pop
scas
fstp
push
xlat
adc
mov
cmp
mov
scas
cmpb
clc
addr16
and
aas
das
adcb
dec
pop
push
cmp
cs
xlat
jl
mov
mov
loop
clc
pop
jl
add
push
mov
xchg
mov
adc
cmova
and
and
stc
xchg
scas
fisubrl
xorl
sbb
lret
rcpps
adc
mov
xlat
or
rorb
out
mov
add
cmp
mov
sub
mov
mov
sbb
repz
add
adc
jecxz
lea
lock
mov
outsl
in
mov
icebp
push
sub
push
dec
fwait
jecxz
cmpsb
js
inc
cmp
inc
mov
out
into
or
sbb
js
mov
jl
push
mov
push
xor
lock
push
popf
pop
sti
into
pop
push
adc
int3
jno
das
test
aas
add
mov
insl
rorb
enter
jmp
div
into
in
pop
nop
insl
fistpll
je
iret
adc
mov
ret
incl
fwait
inc
notl
pusha
inc
adcl
movsb
cmpsb
outsl
cwtl
xor
xchg
das
lahf
das
test
xchg
loopne
stos
mov
and
jo
rcr
out
mov
mov
cwtl
sbb
push
dec
push
stos
ja
insb
sub
mov
pop
add
enter
add
jge
sub
sub
cmp
add
xchg
flds
jmp
xor
into
add
add
test
lds
and
push
dec
testb
es
cmp
outsl
push
cld
sti
shlb
add
mov
popw
ret
lods
inc
xchg
scas
xchg
scas
mov
sub
jmp
jbe,pn
sbb
push
cmc
cltd
push
inc
aas
mov
cmpsl
push
enter
and
xor
inc
jp
cli
jns
shlb
imul
xor
inc
xchg
sbb
scas
clc
pop
jno
inc
sti
adc
fidivrs
add
sub
mov
dec
and
cmpsl
movsb
jne
out
ss
push
call
or
or
push
orb
dec
push
cmp
leave
lods
xorb
add
or
daa
add
inc
arpl
int3
push
or
lock
jecxz
inc
cmpb
add
imul
pop
movsb
cmp
lods
sbb
xchg
stos
cld
add
dec
xchg
lds
mov
out
out
sub
pop
das
orb
inc
shrl
pop
cltd
rcr
je
aaa
arpl
sbb
or
pop
cmp
push
or
dec
cmp
fistpl
inc
lahf
out
inc
clc
adc
inc
jns
add
rcrb
xchg
add
les
pop
fdivl
pop
fiadds
aam
jmp
cmp
mov
xchg
pop
sub
cld
orl
sbb
addb
mov
mov
add
xchg
sub
jl
lods
push
inc
cs
sarb
mov
cmp
jae
loopne
in
xor
jae
or
push
iret
out
xlat
dec
insb
dec
dec
addl
inc
aas
push
les
push
push
jae
jns
dec
push
xchg
pop
loopne
fsts
pop
inc
xlat
rclb
mov
pop
pop
dec
cmp
faddp
xor
iret
xchg
in
mov
insl
aad
or
pop
mov
mov
add
js
and
push
gs
mov
mov
in
loope
cmpsl
mov
push
lahf
enter
push
and
aas
test
addb
push
mov
mov
fisubrl
mov
aad
add
lea
mov
jmp
in
pop
add
test
adc
fsubl
repz
lahf
xorl
adc
ret
mov
daa
cmp
icebp
push
pop
pop
mov
loope
mov
iret
nop
lods
popa
enter
cltd
jb
or
clc
clc
pop
xchg
dec
dec
push
jo
shll
dec
div
stos
lods
inc
mov
adc
cmp
and
sahf
imul
fwait
lret
xchg
push
add
gs
inc
into
push
loopne
hlt
mov
std
js
xor
loop
ret
fs
push
mov
cmpsl
xchg
int
and
test
adc
gs
lea
and
sbb
repz
inc
daa
les
dec
std
mov
sti
pusha
mov
inc
aaa
and
shrl
and
sbb
or
push
xchg
add
add
pop
adc
shr
fcmovnb
cmpsb
lods
sti
repnz
cmp
sub
inc
fisttps
nop
sub
mov
mov
ret
popf
xchg
pop
pop
cmc
lds
or
sub
mov
mov
sahf
cs
add
cmpsl
test
shl
sbb
inc
add
loopne
mov
jns
xor
sbb
in
cltd
jp
decl
fs
mov
andb
lods
outsb
sbb
push
cmp
pop
inc
pushf
roll
or
mov
lret
sub
cmp
pop
lret
enter
jp
push
xor
sbb
pop
imul
pop
adc
cltd
enter
jl
movsb
aas
mov
cmpsb
push
test
int
mov
fidivl
outsb
lahf
adc
cmp
push
lahf
into
mov
adc
adc
adc
or
into
pop
dec
std
dec
test
dec
mov
jo
dec
xchg
mov
subl
leave
leave
and
pushf
xchg
xor
mov
and
inc
xchg
mov
into
sub
mov
add
xchg
mull
lods
cmovnp
lret
shl
mov
and
or
xor
inc
and
test
dec
daa
adc
shlb
pushf
cwtl
or
sub
jo
int
mov
in
add
test
xor
outsb
mov
jmp
mov
sbb
push
adc
js
lahf
shll
sarl
ror
adc
cmp
arpl
std
pop
xchg
out
jl
cmp
fdivs
sti
out
jbe
adc
jbe
add
fstps
mov
lret
jle
ss
and
sbb
aad
dec
rolb
inc
mov
fcoms
add
into
xor
dec
jno
xchg
inc
aaa
mov
bound
push
jmp
xchg
adc
or
mov
outsb
sbb
arpl
or
fnstsw
cwtl
mov
jecxz
arpl
lret
scas
sahf
sbb
adc
xchg
mov
mov
loope
mov
das
xlat
js
das
pusha
cmp
adc
fdivrs
pop
push
loope
daa
sub
les
push
shrl
mov
xor
fmuls
push
scas
xlat
push
in
test
divl
leave
pop
pop
and
sub
scas
inc
cmp
cmp
outsl
sbb
insb
adc
in
or
gs
or
jo
and
adc
mov
sbb
sub
cmp
xchg
jo
insb
push
add
pop
lds
rorb
outsb
pop
outsl
sbb
cmp
sahf
jnp
add
mov
mov
jle
aaa
stos
insb
and
push
sub
cmp
popf
ss
iret
jns
int3
inc
xorb
add
std
cli
je
subb
aaa
sbb
pop
loopne
adc
jp
repz
aaa
add
into
pop
add
dec
jge
push
pop
iret
lahf
and
shl
cmp
cmp
xor
sbb
ret
mov
sub
xchg
push
cld
cmp
pushf
push
fs
pop
sbb
dec
outsb
sbb
loope
stc
push
mov
sbb
es
sti
sub
mov
jno
repnz
mov
int3
jno
test
jecxz
push
mov
xor
jl
aaa
popa
loopne
movsb
push
jmp
and
addr16
imul
aam
icebp
inc
and
sbb
cmp
cmpsl
jo
aaa
jge
dec
inc
out
std
sub
add
int
dec
js
popa
jl
cmp
fsubrp
sbb
sbb
sbb
inc
sbb
int
rorl
mov
pusha
leave
sub
cmpsl
int
lret
sub
inc
sbb
push
jnp
inc
add
outsl
addb
jle
mov
jg
scas
sub
in
inc
dec
sub
sti
inc
sbb
daa
fcmovu
rcrl
push
enter
sbb
divl
xchg
cmp
add
push
filds
int
dec
andb
dec
test
adc
add
orb
out
aaa
addl
mov
mov
cmp
ror
sbb
cwtl
out
cs
xchg
mov
out
or
xor
cltd
aaa
sbb
xchg
loope
push
mov
fwait
adc
mov
pop
dec
jmp
xchg
push
cwtl
test
and
insb
xchg
std
js
cmc
xor
mov
cmp
sbb
add
aaa
imul
negl
outsl
jne
adc
rcll
mov
arpl
or
loope
inc
scas
fisubl
iret
lea
int3
and
test
adc
sbb
das
lds
cmpl
mov
pop
sbb
mov
into
aad
sbb
imul
cmp
aaa
sbb
ds
test
icebp
jne
mulb
and
mov
push
jnp
arpl
sahf
sbb
pusha
insl
sbb
imul
fbld
lcall
xchg
decl
std
dec
mov
lret
add
lcall
lods
xorl
jns
add
cs
pop
movsb
mov
mov
mov
fs
pop
add
imul
xor
cld
fdivs
cmp
lock
std
xchg
add
sar
sub
sub
jne
cmp
aam
iret
nop
into
cmpsb
xor
xor
inc
mov
sbb
aas
mov
je
jne
mov
mov
adc
fs
push
mov
sbb
dec
lock
dec
scas
gs
xlat
push
add
cli
gs
jmp
jbe
xchg
call
and
pop
cmp
int
rcrw
pcmpgtb
sub
jns
cmpsl
add
cmp
rorb
add
mov
inc
faddl
add
test
sbb
adc
fisttpll
push
fisttpll
jmp
sub
insl
push
loopne
jecxz
mov
mov
mov
adc
daa
sahf
idivl
mov
js
lea
daa
sub
or
inc
aaa
jnp
pop
xchg
mov
imul
or
mov
pusha
das
xor
adc
mov
movsl
stos
push
xchg
andw
mov
mov
adc
or
mov
cmpsb
arpl
scas
jecxz
in
push
sbb
aas
fs
adc
fxch
ret
and
das
sub
lea
es
mov
jae
arpl
add
xor
cmp
mov
pop
xor
lods
dec
insl
mov
jg
cmp
add
out
add
aam
stos
movsl
add
sub
insb
arpl
xor
test
ret
xor
scas
js
lahf
outsl
dec
cmpl
jecxz
sub
mov
add
sub
xor
arpl
lock
mov
repz
lahf
jecxz
pop
cmp
pop
clc
cmp
rcll
mov
add
movb
in
je
andb
scas
lods
ret
add
orl
push
sbb
or
sbb
or
loope
iret
daa
xchg
bound
xchg
lcall
daa
xchg
sbb
add
fxch
mov
loopne
loop
sbb
les
pop
popa
cmp
test
xor
sbb
mov
adc
xchg
fnsave
mov
out
and
cmpsl
movsl
mov
stos
sti
add
pop
jmp
pop
add
jno
and
daa
aad
lds
shll
mov
and
sub
ret
loopne
jge
adc
ret
aas
ja
jnp
adc
loopne
mov
mov
aaa
xlat
in
lock
push
push
in
cs
mov
fstps
adc
mov
test
into
adc
push
daa
pop
jmp
push
aaa
into
mov
ss
cmp
movl
daa
rorl
fbld
cli
lds
in
ret
shlb
adc
iret
out
or
cmc
outsl
and
testl
push
jmp
bswap
movsl
popa
out
mov
inc
xchg
mov
adc
add
or
into
add
orl
mov
icebp
jecxz
not
stos
xor
adc
lds
mov
lods
add
jno
roll
leave
xchg
jl
outsl
outsl
cmp
push
pop
sub
fcomps
add
fcmovbe
cmc
fwait
inc
push
cmc
loop
arpl
sbb
pop
dec
push
add
dec
pop
and
push
ret
mov
pop
fists
or
fwait
push
imul
jmp
sbbl
dec
test
cmpsl
pop
loopne
pusha
sbbb
int3
sbb
fdivs
push
xor
int
cmp
subl
stc
xorl
push
push
lods
pop
sar
out
add
mov
add
inc
sub
jb
xchg
cmp
sub
pop
pop
insl
mov
sahf
in
fwait
rclb
adc
icebp
sbb
cmp
sbb
xchg
mov
inc
mov
pop
sbb
push
xlat
lret
pop
sub
pop
pop
scas
test
adc
mov
xlat
sbb
cmp
add
loope
pop
out
into
fnsetpm(287
inc
lods
neg
test
add
insb
rolb
jmp
clc
sub
sbbb
lret
pop
jp
jb
sbb
js
push
cmpsb
adc
push
insb
pop
sub
cld
adc
add
mov
xchg
sahf
xor
jp
jo
mov
sub
out
sahf
lods
xchg
into
std
clc
int
push
lods
push
cmp
aas
je
and
and
adc
enter
insb
xchg
sbbl
iret
rcrl
jo,pn
stc
imul
mov
push
clc
and
cmp
lret
iret
std
add
jg
inc
inc
pop
test
push
add
scas
adc
xor
xchg
and
lea
out
lahf
xchg
mov
push
je
mov
pushl
add
or
addl
push
xchg
sbb
and
adc
mov
int
push
inc
jae
push
addb
adc
xchg
mov
incl
push
add
lods
jl
sti
popf
outsl
into
mov
ret
insl
cltd
std
mov
inc
add
in
imul
or
imul
push
test
addb
icebp
cmc
pop
xor
xchg
mov
push
aas
stos
scas
mov
adcl
push
faddl
push
add
call
pop
and
mov
les
mov
cwtl
adc
push
add
into
pop
xchg
sbb
es
frstor
bound
add
lock
push
fnstsw
cmp
fwait
xchg
add
fiadds
iret
sub
jp
add
loop,pt
mov
dec
cli
mov
mov
test
sbb
add
adc
bound
pushf
or
push
xor
orl
dec
mov
add
jmp
add
inc
sub
xor
mov
out
mov
pop
add
cli
ja
sbb
jnp
mov
mov
into
les
sti
dec
fiaddl
iret
cmp
testl
ja
int
out
fwait
push
xlat
dec
outsb
rcrb
xor
imul
push
jb
ja
loope
mov
jno
movsl
aad
je
gs
sti
cmp
das
ret
sbb
push
cmp
jnp
lock
pop
cmp
jne
mov
pop
inc
daa
add
dec
mov
out
jo
ret
aaa
add
sti
inc
mov
daa
idiv
sbbb
cmp
xor
or
mov
cmp
das
mov
xchg
add
xor
sbb
cld
fmuls
dec
popa
sbb
rolb
push
mov
xchg
test
xchg
or
test
imul
ss
addr16
and
sbbl
arpl
and
cld
pop
and
or
in
leave
or
orb
jne
sub
jp
ja
je
mov
mov
mull
nop
in
mov
add
daa
inc
mov
xchg
nop
in
jne
push
pusha
cmp
xchg
movsl
add
sbb
cmp
jns
or
push
mov
or
fcoms
jne
jecxz
jae
sbb
scas
jo
stos
daa
aad
stos
dec
ret
dec
jl
mov
or
sbbb
push
mov
adc
cmp
mov
rcll
jge
mov
popa
sub
cmp
shlb
jg
inc
add
fimuls
das
cmc
stos
pcmpeqb
or
test
jp
and
mov
inc
push
arpl
mov
mov
frstor
andb
daa
mov
add
or
dec
loopne
inc
loop
adcl
adc
xchg
pop
scas
iret
inc
or
inc
inc
fsubrs
dec
sahf
loope
cs
repz
jecxz
mov
lods
xchg
pxor
mov
aaa
aad
mov
add
mov
add
lods
adc
insl
cli
xchg
jo
into
jb
ss
decb
pop
pop
dec
mov
aad
pop
ds
addr16
andl
pop
pop
nop
push
sahf
es
xchg
xlat
fstps
push
pop
jb
add
sbb
sbb
pushf
jb
outsl
out
aas
push
and
mov
add
add
leave
mov
call
mov
inc
popl
out
inc
sub
inc
in
rcr
iret
jmp
inc
incl
adc
push
pushl
scas
shll
popa
push
jmp
loopne
fwait
sbb
mov
xor
and
add
dec
xor
test
pop
dec
arpl
adc
xor
into
mov
or
add
adc
or
pop
into
push
and
loopne
pop
insb
adc
push
adc
fnsave
push
xchg
and
int3
dec
mov
sub
sub
outsl
loope
adc
imul
mov
lods
mov
push
xorl
popa
jecxz
push
outsb
adc
cmpsl
and
and
test
cmpsl
pop
jo
cs
test
call
ljmp
xor
fdiv
jo
pop
add
xorb
pop
aas
inc
movsb
sbb
add
in
push
into
adc
sbb
sub
scas
pop
xchg
pop
out
cmp
inc
add
adc
les
mov
add
fadds
pop
cmp
mov
xor
mov
add
pushf
add
mov
mov
adc
ja
pop
shrl
inc
jnp
or
lods
loope
mov
and
movsl
imul
pop
test
das
in
xchg
and
sbbb
push
dec
push
adc
lods
mov
pop
icebp
rorl
ret
xchg
mov
gs
inc
imul
push
sub
shl
adc
stos
inc
cmp
insl
shlb
lahf
add
bound
pop
mov
xchg
mov
inc
inc
aaa
roll
out
dec
scas
bound
lods
movsl
fisttpl
push
sbb
ret
mov
mov
push
shll
push
add
jnp
call
dec
adc
mov
adc
and
dec
xor
or
sbb
lds
add
push
lea
shlb
xlat
movsl
rcll
test
xlat
sti
pop
dec
or
shlb
add
int
add
pusha
or
lcall
stos
jmp
fwait
xchg
fsubr
sbb
xor
push
sub
xor
xchg
sub
jecxz
add
inc
xchg
stos
lods
sub
add
aaa
sbb
rclb
sub
jge
or
roll
add
and
mov
pop
push
sar
ja
mov
subl
test
push
lds
int
and
mov
add
push
stos
in
xchg
inc
lods
test
pop
cmp
insl
adc
mov
je
stos
shll
or
and
mov
sub
or
sbb
cmp
inc
ljmp
adc
sbb
sub
test
add
pusha
adc
dec
movsl
adc
jo
daa
fwait
popf
or
inc
push
imul
add
or
adc
shrl
mov
xor
push
ret
pop
movsl
mov
pop
iret
dec
inc
dec
pop
stos
push
sub
push
decl
scas
in
push
sbb
dec
mov
xor
adc
pop
xchg
adc
cmp
inc
leave
icebp
or
out
movsl
bound
lods
ljmp
mov
sti
jne
sub
inc
bound
or
push
sub
jg
pop
add
sub
or
xor
and
mov
mov
ja
fstl
sub
sbb
mov
in
jno
inc
aad
xchg
or
jecxz
out
or
add
push
or
add
imul
xor
in
sub
mov
aas
pop
sub
call
shr
sub
call
sub
dec
pop
sbb
fisubrs
or
cltd
mov
lds
shll
xor
scas
inc
ret
pusha
xor
and
and
jnp
dec
movsl
jnp
ljmp
lret
jnp
inc
inc
or
push
and
sti
mov
or
jg
xor
xor
dec
add
les
mov
outsb
out
or
insl
or
fdivrl
scas
pop
or
mov
lea
daa
xchg
jp
mov
test
xor
pop
mov
sbb
or
or
mov
jne
inc
cs
sbb
mov
or
xorl
add
negl
jno
and
push
dec
inc
pop
or
in
jge
jg
sub
flds
dec
or
sti
cld
mov
adc
sti
jg
xchg
fstpt
add
and
std
add
cld
jl
outsb
imul
dec
fwait
add
inc
out
mov
or
sahf
add
add
insl
add
sbb
add
inc
jno
push
fwait
inc
add
sub
xchg
sarb
imul
ja
sbb
es
loop
inc
cmp
jnp
pop
inc
and
or
test
dec
jnp
out
xor
xor
dec
or
or
inc
sub
add
mov
and
jmp
daa
rorl
mov
insl
sbb
out
pop
push
xor
inc
cmp
fcomi
ret
rcll
int
push
push
daa
notl
out
and
shrl
mov
push
pop
popa
dec
mov
sbb
pop
ss
xchg
add
dec
ffree
inc
ja
dec
or
jmp
daa
jecxz
add
pop
out
pop
adc
insl
dec
jne
or
inc
gs
mulps
or
adcl
insl
lods
imul
mov
jne
lcall
or
mov
out
inc
jmp
jns
ret
shll
jle
imulb
out
js
mov
dec
js
repz
adc
insl
sub
hlt
mov
add
xchg
mov
int3
xchg
int
mov
and
cmpsl
hlt
or
xor
pop
xchg
xor
pop
push
or
cmp
out
xchg
jge
popf
push
sbb
lods
add
jnp
fwait
sti
rorl
fisttpll
clc
fistpl
mov
cmp
nop
sub
ljmp
push
adc
add
mov
call
test
les
mov
sub
sarb
fldl
mov
mov
adc
add
xlat
out
mov
mov
jne
cltd
arpl
mov
sub
or
iret
cwtl
adc
jne
adc
mov
inc
clc
cmpsl
cld
add
lret
inc
add
jnp
test
mov
lds
push
sub
dec
imul
xchg
lds
ret
push
add
mov
pop
mov
pop
out
test
andl
movsb
cmp
mov
inc
loope
or
js
je
add
int
pop
jo
mov
ret
into
add
jle
into
xor
add
aam
lock
sti
sbbl
pop
out
inc
call
scas
adcb
add
dec
lock
int
pop
adc
hlt
stos
adc
ret
push
mov
or
xor
or
sub
mov
and
ds
mov
icebp
push
bound
mov
adc
pop
and
and
das
pop
hlt
xchg
aad
push
lahf
outsl
pop
in
sub
pop
mov
movsb
mov
cvtdq2ps
ret
push
jmp
xchg
repz
dec
hlt
xor
xor
adcl
lahf
add
mov
add
add
mov
xchg
add
add
dec
jecxz
stc
imul
sbb
jg
call
in
add
aaa
sub
lds
jp
mov
mov
add
ffreep
dec
xchg
or
adc
dec
rolb
mov
push
sub
test
lock
xor
pop
cli
lahf
cmp
mov
inc
je
jbe
fisttps
push
push
test
xchg
add
or
subl
lret
push
fwait
jmp
test
inc
mov
mov
or
mov
sub
in
pusha
aaa
sbb
gs
pop
clc
dec
ljmp
mov
dec
pop
cld
push
sti
pop
inc
cld
push
add
js
ja
pop
add
mov
sbb
insl
lds
shl
cmp
push
out
jo
cmp
mov
add
adc
jecxz
mov
mov
jl
jle
scas
mov
loopne
jecxz
fildll
xor
js
pop
addr16
mov
insb
jp
adc
adc
scas
or
mov
fsubs
mov
outsb
scas
lret
xchg
pop
cmp
cmp
push
mov
push
mov
or
cmp
xchg
or
push
out
neg
shrb
add
pusha
mov
and
insb
loope
or
cmpsl
pop
or
pusha
sub
xlat
ds
es
mov
add
call
mov
pop
je
xchg
insb
cli
sahf
dec
sbb
aam
jo
jo
out
inc
push
fdivs
pusha
cmpsb
leave
adc
fs
js
imul
mov
cmc
or
xchg
sbb
push
sub
insb
sbb
std
fmull
push
lock
fcoms
cld
or
cmpb
shlb
pop
lock
or
wrmsr
ljmp
mov
mov
jp
lods
cmpsl
scas
add
stc
bound
aad
rcrl
jecxz
push
inc
mov
icebp
fcmovu
xor
popf
lret
xorb
adc
xchg
mov
sub
jle
loopne
mov
pop
ja
sbb
push
push
outsb
sbb
push
pop
outsl
sbb
jnp
jbe
push
in
pop
cltd
rclb
push
push
aaa
xchg
push
lock
push
and
cmpsb
adc
mov
pop
dec
pop
mov
push
outsb
push
lret
push
mov
jmp
ret
lods
shll
jb
jl
or
adc
loop
push
cmp
pop
or
xchg
pop
mov
jl
and
test
sahf
push
dec
and
loopne
pop
stos
push
repnz
cmc
pop
outsb
jg
repz
jae
daa
mov
mov
jns
popa
fsubrl
pop
add
push
int3
loopne
jnp
pop
in
lret
jg
repz
add
jmp
pop
add
xlat
mulb
in
mov
mov
adc
fs
adc
xchg
mov
xchg
xchg
mov
enter
and
clc
or
loop
mov
xchg
out
mov
cmp
cmp
cmp
nop
mov
jnp
pop
mov
mov
inc
pop
xor
cmp
sub
fisubrl
jbe
mov
pop
mov
bound
mov
decb
inc
xchg
lods
push
lods
adc
pop
or
push
inc
into
cmp
pop
jo
loope
cmp
push
hlt
sbb
ret
cld
or
iret
leave
pop
add
loopne
add
jmp
inc
mov
xchg
mov
ds
jno
jp
je
test
lcall
or
loop
jle
push
movd
arpl
je
mov
mov
fidivs
roll
and
mov
jmp
pusha
stc
dec
xchg
mov
mov
frstor
lahf
mov
add
imul
push
sbb
popf
mov
inc
adc
cli
pop
das
inc
cmpsl
adc
mov
pop
adc
pusha
shll
pop
bound
movsb
sbb
inc
add
or
or
loopne
or
and
or
mov
pusha
test
sbb
insl
cmp
mov
pop
sbb
mov
mov
movsb
jp
add
mov
outsb
in
add
xchg
push
pusha
pop
add
cmpsb
leave
or
jle
std
add
push
xor
xchg
inc
push
sub
in
adcb
cmp
fs
fildl
test
mov
lahf
in
or
insl
mov
xorb
scas
or
cltd
test
mov
out
xor
scas
dec
lret
and
cmp
insb
sub
mov
adc
js
lods
imul
jl
shlb
enter
or
out
repnz
fdivrs
hlt
pop
jle
pushf
pop
repnz
and
dec
pop
imul
adc
xor
ret
ja
mov
jp
or
out
xor
sub
push
lcall
clc
jbe
push
fwait
add
dec
addr16
sbb
js
and
ficomps
push
mul
fwait
sub
mov
mov
mov
test
imul
pop
dec
push
call
xchg
sbb
xor
mov
roll
push
aam
pushw
dec
loop
hlt
out
pop
xor
sub
or
pop
sub
mov
jle
push
filds
push
lods
mov
jne
jecxz
push
and
repnz
ds
push
popf
mov
movsl
dec
mov
mov
ret
jns
stc
mov
pop
loop
dec
imul
rcrl
mov
loopne
dec
jmp
push
and
js
sbb
rol
loopne
jb
push
sbb
mov
faddl
fs
aad
or
iret
cmp
jnp
add
xchg
ljmp
adc
sbb
lock
pop
xchg
cmp
pop
loope
ljmp
xor
into
inc
fucomp
into
icebp
ss
mov
sarl
daa
shr
daa
xchg
push
cmp
cmove
lods
sahf
sahf
sub
pop
push
les
bound
loop
xor
push
scas
mov
mov
sub
int3
fldcw
icebp
or
shll
hlt
mov
outsb
mov
mov
pop
cmp
in
out
int3
mov
sbb
bound
scas
inc
mov
xacquire
mov
xchg
loopne
mov
or
mov
or
fiaddl
enter
pop
inc
pop
push
lock
das
inc
cmp
add
pop
pusha
sbb
aas
adc
add
push
lret
subb
loopne
or
fdivrs
cmp
mov
jb
aad
loop
push
mov
mov
mov
add
in
testb
xchg
adc
dec
push
lret
clc
aam
add
dec
sub
push
cmp
sub
cmpsl
aad
test
add
mov
mov
cmpsb
ds
and
fcmovbe
push
push
hlt
adc
mov
in
int
jbe
sub
adc
lcall
adc
cmp
mov
xor
lcall
cmp
xor
das
push
jne
adc
mov
inc
pop
popa
jns
shlb
cmp
inc
sbb
pusha
dec
test
push
gs
push
bound
pop
aad
xor
xchg
add
or
fwait
and
out
loopne
inc
decb
shlb
ss
testl
aaa
out
inc
scas
fistps
xor
mov
test
shrb
jl
mov
outsb
sub
and
inc
adc
lcall
add
jge
in
and
and
sub
add
shll
xchg
fsubs
cmp
and
sub
stos
mov
push
iret
cli
out
lods
or
mull
ds
xchg
xchg
sbb
mov
push
inc
xchg
dec
cmpsb
ret
mov
pop
icebp
sub
in
mov
loopne
mov
add
js
jecxz
out
xchg
das
and
les
push
jecxz
jb
push
lds
xchg
vcvtsi2sdl
movsl
xor
push
jno
aam
fs
rcrl
xor
sti
mov
nop
rol
jae
mov
ret
mov
add
mov
hlt
inc
and
xor
jno
flds
les
mov
xor
dec
lock
pop
xchg
add
xor
inc
hlt
ljmp
add
movsl
cmpb
cs
jb
fnstsw
jbe
ja
xchg
mov
mov
lock
or
ja
imul
xchg
dec
stos
call
idivb
inc
xlat
or
repnz
lahf
ds
cmp
mov
pop
mov
lock
pop
mov
jno
lea
ss
mov
push
push
or
loopne
sub
mov
push
jp
mov
xchg
jbe
int3
loope
xchg
adc
out
xchg
das
shll
xorl
stc
pop
add
fidivs
sub
orl
pop
lahf
sbb
roll
sbb
push
rolb
adc
or
into
pushl
push
je
cmp
nop
ss
pop
xor
xor
add
jo
mov
cmp
cli
mov
or
and
lahf
dec
jp
mov
add
mov
cmp
shl
mov
push
out
cltd
cmp
push
push
pushw
adc
xorb
mov
and
hlt
out
popf
clc
or
mov
adc
mov
jo
push
cld
cld
test
push
ljmp
out
loopne
cmpb
mov
pop
mov
pop
mov
sbb
insb
call
or
push
dec
pusha
mov
orb
incb
hlt
and
iret
outsl
lea
fwait
hlt
hlt
cmpsb
xchg
rclb
pop
into
lret
cmp
aaa
pop
std
add
sub
adc
pop
popa
out
rorl
mov
ret
pop
sbb
out
jbe
mov
andb
pop
pop
mov
ficoms
jns
or
mov
and
and
xchg
xor
les
fsub
pop
adc
mov
xor
fadds
jmp
popf
and
push
pop
and
inc
and
arpl
lcall
aas
dec
mov
adc
jl
xorl
inc
push
orl
outsl
push
es
push
inc
in
add
sub
xchg
pop
cmp
cmp
adc
or
or
pop
test
xchg
int
jge
and
xor
cwtl
add
add
in
mov
add
jl
mov
mov
jb
cmp
cmp
push
lock
aad
push
add
sbb
popf
push
mov
decl
inc
jge
jo
loop
lock
jmp
or
cwtl
mov
push
mov
mov
cltd
xchg
clc
js
lds
int
cmp
subl
andl
cs
test
mov
dec
push
push
xchg
mov
cs
aaa
bndstx
and
adc
aam
sub
mov
adc
insb
stc
push
fstpl
in
inc
push
add
bound
cs
fbld
out
hlt
adc
movsl
xor
sbb
pop
jnp
ds
push
jl
mov
cmp
push
into
pop
push
stos
in
psllw
pop
xchg
or
mov
xor
dec
inc
pushf
sub
or
out
and
enter
lock
or
mov
inc
pop
mov
out
xor
out
fwait
lds
add
adc
jge
mov
test
xor
jmp
cmp
adc
cli
ret
dec
in
cmpsl
insb
or
mov
adc
call
inc
lcall
sbb
fs
sarb
scas
push
inc
jo
sahf
mov
lods
lret
or
add
clc
inc
mov
pop
push
jae
mov
clc
cmp
lret
inc
test
xor
mov
sbb
add
pop
xchg
sub
jo
jecxz
push
mov
pop
gs
dec
cld
add
mov
mov
inc
mull
fdivl
push
xchg
ss
mov
pop
fists
loope
cmp
or
jecxz
loope
sub
std
jb
add
mov
mov
in
insl
lock
add
or
insb
leave
aad
je
mov
push
xchg
xor
pop
cmp
ret
mov
test
fldlg2
leave
sbb
pop
mov
mov
leave
clc
cs
cld
jb
nop
clc
sbb
orl
in
pushf
add
mov
sub
push
sbb
in
stos
mov
loope
loopne
xlat
dec
je
jo
lods
mov
push
into
fsts
xor
jo
loope
addr16
sub
faddp
pop
insl
xchg
cmp
dec
push
mov
add
xor
inc
mov
es
jmp
push
xor
jb
dec
sti
fs
cmpsb
push
jns
test
imul
mov
jb
ds
fucomip
jo
dec
sbbb
fs
mov
jo
push
loope
test
mov
cltd
jne
xchg
and
jmp
xchg
dec
add
rorb
pop
mov
shrl
lcall
push
cmp
xchg
popf
test
push
cld
pop
mov
idivl
push
push
pop
jg
dec
leave
xor
or
add
movsb
pop
fldt
cs
notb
jp
ftst
pop
jp
or
movsl
insb
jno
dec
inc
shll
ds
jp
or
je
cmpsb
fisttps
fcmovnu
notb
aaa
cmp
push
and
in
add
push
dec
push
xchg
xchg
rorl
sbb
or
sbb
push
mov
xor
jmp
sbb
push
ja
insb
xchg
pop
add
sbb
xchg
in
pop
dec
pop
cmp
jge
test
cmp
adc
fmull
mov
sbb
add
int3
cmp
ficoml
pop
inc
rcll
adc
jo
nop
in
xor
mov
pop
pop
dec
loop
movsb
cmp
push
pop
in
scas
test
fdivp
pop
sahf
into
pop
mov
and
imul
xchg
incb
fimuls
and
pop
xchg
and
lret
movsl
mov
adc
or
push
shrl
jmp
mov
bound
outsl
sub
jle
enter
jae
enter
sti
js
stos
mov
cmp
je
nop
es
mov
imul
jle
xchg
negb
xchg
and
pushf
jecxz
outsb
inc
add
pop
jae
les
lret
cld
pop
lcall
push
mov
in
cmp
lcall
repnz
pop
jle
sub
add
sub
sub
push
aad
aad
subb
daa
xchg
pop
enter
fmull
in
mov
jmp
jle
hlt
push
xchg
lea
xchg
push
popa
outsb
push
lret
mov
nop
lds
adcb
scas
mov
mov
xchg
fistps
je
cltd
cwtl
pxor
mov
je
mov
mov
stos
mov
cmp
mov
cld
xchg
test
ljmp
ror
jae
leave
icebp
scas
pop
or
push
mov
sbb
fadd
jnp
mov
jl
mov
adc
and
pushf
jg
sub
hlt
or
mov
lock
inc
xor
dec
sbb
addr16
rcrb
mov
dec
mov
mov
inc
data16
add
add
adc
leave
push
outsb
clc
adc
arpl
lods
sbb
and
sbbb
or
ljmp
xor
pop
xchg
dec
sub
mov
seta
mov
or
pop
mov
mov
jnp
inc
add
scas
call
push
or
mov
or
push
jge
push
shll
xchg
jge
stos
movsb
adc
ret
test
lods
stos
or
es
pop
in
jno
ret
repz
adc
lret
mov
aaa
mov
adc
mov
sub
decb
cli
mov
xor
das
and
fisttpll
or
loope
fwait
or
or
cli
xor
std
loop
adc
sub
sbb
and
add
sbb
mov
push
sti
mov
dec
jnp
scas
inc
xlat
jnp
mov
rep
add
ds
arpl
icebp
iret
xor
mov
into
mov
lods
inc
fs
ljmp
je
repnz
mov
rorb
cltd
sbb
fs
cmp
sub
dec
sub
test
fsubrl
in
clc
js
cmp
sahf
xchg
xchg
orb
movsb
push
and
push
lock
push
fcmovb
sbb
xchg
mov
fwait
pop
jecxz
mov
out
xchg
xor
lds
sbb
dec
insl
jb
pop
loop
into
in
cs
fwait
ret
mov
add
cltd
jecxz
cs
test
sub
ljmp
ss
lods
imul
add
adc
push
xchg
ds
mov
lret
inc
loopne
adc
xor
mov
sub
sub
mov
and
jmp
sbb
xchg
sub
jge
pop
and
lret
mov
mov
fstpt
jp
and
dec
dec
mov
into
add
or
mov
roll
xchg
sub
adc
in
and
mov
mov
jg
test
out
add
and
aad
cmp
scas
jl
or
mov
cli
push
sub
pop
in
bound
mov
add
fildl
adc
pop
js
lock
das
clc
jne
jo
lds
sbb
dec
mov
in
or
xchg
es
jnp
lcall
jne
or
xor
push
xchg
jne
in
rcr
push
add
ret
or
xchg
sub
leave
fimull
subl
jne
stc
fidivrl
outsl
cmp
cmp
incb
cmp
jns
outsb
add
or
std
add
in
fsubs
fcompl
add
push
rorb
loopne
mov
lahf
lret
inc
add
push
sbb
gs
add
fldt
push
mov
movsb
cmc
stos
inc
ret
dec
sub
jmp
xchg
dec
fidivs
pushl
or
cltd
jecxz
add
jo
add
mov
and
lret
add
dec
imul
mov
inc
xchg
outsb
mov
movsl
ss
pop
xchg
mov
scas
fisubrl
add
cmp
push
rorl
cmp
js
inc
add
sbb
les
push
xor
shrb
adc
xor
hlt
adc
test
ja
add
add
inc
test
xchg
jo
scas
inc
cltd
ljmp
pop
imul
popf
pop
mov
mov
push
test
add
gs
dec
aaa
loop
out
ret
mov
inc
inc
stos
xchg
xchg
push
dec
test
ds
push
dec
cld
shlb
or
jmp
lret
add
push
xchg
ljmp
sti
add
mov
add
or
dec
add
or
popa
ret
or
push
sbb
inc
or
icebp
dec
push
pop
das
xchg
dec
add
out
mov
clc
cs
mov
xchg
cmp
or
dec
inc
mov
push
add
cmp
mov
aas
push
xchg
xor
and
push
jecxz
mov
bound
fwait
cs
xor
dec
pop
fists
jg
cmpsl
push
shrb
adc
sahf
mov
add
ret
pop
cmpsl
cmp
lds
lcall
pop
insl
loopne
stos
ss
rorb
nop
mov
js
loop
pop
test
jp
jle
les
dec
mov
mov
aas
xchg
cltd
sar
jp
fs
lret
in
loop
stc
lea
add
cmp
js
sub
mov
cmp
cmp
dec
es
mov
out
stc
lret
adc
rcll
popf
adc
adc
adc
add
pusha
mov
arpl
fcomps
xor
and
adc
mov
andb
pop
xor
or
cmp
jl
movsl
pop
or
daa
sbb
xor
dec
sahf
xor
shrl
gs
in
clc
inc
in
jbe
xchg
pop
and
sbb
and
es
arpl
adc
push
cli
push
clc
mov
fldenv
or
xor
push
rcrl
cmp
pushf
mov
dec
cmpsb
in
loope
jnp
ja
leave
dec
inc
add
add
mov
cs
push
stos
mov
inc
incl
aaa
loopne
leave
and
add
enter
in
add
inc
shrb
inc
sub
in
inc
orb
adc
loope
andb
adc
or
mov
cli
call
jmp
cmpb
add
cmp
jecxz
stos
ss
xor
js
nop
cmpsl
addl
xchg
pop
cli
dec
mov
hlt
enter
mov
and
insl
int
push
test
cld
push
shr
movsl
adc
cmpsb
pop
cs
adc
xor
movb
shr
adc
cli
jbe
lods
stos
xor
les
push
pop
push
push
stos
mov
mov
scas
lea
gs
mov
lods
or
xor
add
jmp
test
int3
jo
mov
add
add
lock
clc
or
pop
mov
xchg
jl
jae
mov
outsl
mov
ja
ret
pop
out
add
jno
lret
jl
neg
xchg
add
aam
mov
shlb
sub
lock
lock
cmc
aam
cmp
add
mov
test
pop
and
add
add
pop
lcall
dec
data16
dec
out
sbb
adc
sub
clc
dec
pushl
ja
pushf
mov
mov
outsl
sbb
cmp
cmp
int
jge
add
sbb
jbe
inc
fildl
sahf
pop
sbb
mov
test
div
aaa
mov
inc
mov
pop
pop
mov
or
push
mov
adc
adc
adc
mov
mov
sbbb
jp
pushf
sahf
out
jmp
and
out
fidivrs
jmp
push
jo
inc
xchg
mov
hlt
mov
push
add
loopne
mov
stos
jbe
cwtl
repz
pop
fcoml
mov
push
pop
out
mov
repz
ror
es
loop
add
roll
jl
or
adc
shll
jo
rorb
jle
inc
pop
rorb
xorl
shl
aaa
fs
loopne
push
pop
outsb
pop
mov
push
cld
push
mov
dec
xchg
push
inc
stc
add
jb
mov
sub
and
dec
icebp
stc
cmp
mov
ljmp
ljmp
jne
pop
push
loop
or
cmp
popa
add
je
push
mov
ljmp
dec
xor
jle
mov
stos
inc
ss
mov
lock
push
and
jbe
inc
add
jo
test
in
pop
pop
cld
and
xchg
xor
dec
add
mov
mov
add
push
add
xchg
pop
xor
rcrb
jns
fsubrl
pop
fcoml
mov
xor
and
rcrb
clc
mov
mov
scas
imul
mov
add
inc
test
stc
rcrl
sub
add
stos
mov
pop
push
xor
mov
xchg
or
mov
cmc
pop
mov
addr16
adc
fdivr
push
mov
xchg
jg
cmp
subl
mov
sub
imul
jle
lea
pop
stos
push
mov
gs
or
cmp
mov
cmp
insb
push
push
dec
ljmp
push
dec
dec
jb
lock
mov
shll
xor
vmread
mov
bound
adc
add
sbb
es
jbe
shl
push
shll
or
dec
mov
add
lock
pop
pusha
shlb
adc
ds
enter
cmc
repnz
push
je
mov
hlt
push
loopne
mov
add
push
jns
pop
je
das
and
sub
aam
and
ds
mov
xor
ret
js
pushf
cmp
ljmp
ret
adc
into
xor
lea
adc
popf
pushf
or
xorb
iret
or
sub
jo
icebp
mov
dec
mov
mov
and
ret
sub
testb
scas
xchg
sbb
fdiv
sbb
mov
ds
xor
inc
lds
jecxz
aaa
push
and
inc
mov
push
mov
insb
addr16
ja
mov
out
subl
rclb
jle
inc
adc
pushf
jbe
or
push
in
lds
adc
ror
jnp
aas
mov
call
sbb
ficoml
cmp
test
adc
lods
or
and
push
fldcw
push
test
insl
sbb
mov
push
add
hlt
jg
sub
or
inc
or
imul
sbb
jge
or
cmp
imul
inc
push
add
ror
jmp
mov
push
arpl
xor
and
bound
inc
and
sbb
push
pop
fdivr
shlb
cmpl
mov
sub
inc
pop
and
push
sbb
mov
inc
mov
xor
pop
sbb
push
xchg
pop
flds
mov
adc
or
stos
mov
or
mov
les
lret
jmp
pushw
fdivl
loopne
cld
test
sbbb
fwait
decb
mov
leave
add
insl
push
push
inc
or
stos
and
add
adc
scas
nop
neg
pop
shlb
mov
imull
int
and
fbld
fiadds
xor
lahf
inc
pop
jne
scas
mov
icebp
outsb
cmp
and
adc
cmp
mov
ds
jle
mov
mov
rclb
outsl
dec
xor
cmp
cmp
adc
cmpsl
je
stos
cmp
imul
inc
cmp
test
jmp
add
cltd
push
out
adc
and
clc
mov
mov
cmp
jl
testl
je
fldenv
int
push
inc
push
pop
and
add
mov
or
and
mov
or
loop
pop
jg
rclb
mov
pusha
adc
dec
jne
fmuls
xor
ret
hlt
test
sbb
mov
push
js
pop
lock
adc
sub
adc
and
pop
jo
dec
mov
cmp
mov
mov
outsb
inc
cli
pop
or
add
hlt
sub
pop
and
mov
fimull
test
fisubs
leave
fstps
adc
enter
sbb
ljmp
mov
ds
lock
jbe
sub
mov
push
cmp
sbb
out
sbb
push
jp
imul
cld
dec
or
insl
add
cmp
jbe
addl
xchg
scas
fsts
add
push
fidivl
add
divb
movb
and
std
pop
jno
sbbb
jge
jecxz
psllw
je
xchg
lcall
ficoml
jp
imul
mov
jl
mov
cmpsl
test
sbb
add
xchg
daa
jno
lds
pop
es
rol
js
fcmovb
pop
mov
adc
or
adc
jb
pop
and
movsl
inc
pop
pop
and
lods
pop
fidivl
jnp
and
fbld
addl
cmpl
mov
ds
and
lock
or
lret
and
cs
mov
sbb
cmp
ret
inc
adc
or
jb
dec
or
or
or
fldz
stos
js
or
mov
sbb
push
mov
xchg
dec
out
ret
fnstenv
or
and
jo
icebp
mov
daa
xchg
push
jecxz
jo
or
fbstp
sub
cmp
add
jmp
repz
pop
das
add
add
pop
sub
sbb
sbb
jg
xor
or
in
popf
pop
inc
pop
mov
mov
jbe
sbb
mov
xchg
maskmovq
divl
outsb
fwait
fwait
jecxz
jmp
repz
jnp
ret
pop
lret
inc
roll
or
or
enter
add
or
jae
sarb
addr16
imul
adc
push
xchg
cmpsl
stos
sbb
pop
xchg
mov
sbb
fwait
cltd
jecxz
repz
std
fcomps
sbb
sub
fists
pop
daa
cmpsl
sub
lock
xchg
out
sbb
inc
repnz
inc
mov
and
sub
jl
addr16
cmp
dec
sub
pop
mov
sbb
jecxz
ljmp
xlat
por
cmpsl
out
in
or
sub
sub
cltd
xchg
in
ret
push
sub
aaa
sti
push
pop
addl
out
dec
sti
or
fmul
dec
xchg
or
scas
lsl
mov
push
inc
push
aaa
scas
sub
push
testl
xchg
out
bound
fcmovnb
sub
idivb
out
or
adc
xchg
jnp
sub
xchg
ljmp
stos
pop
mov
in
aas
jecxz
push
sub
sub
imul
push
in
sbb
or
cmp
mov
sbb
imul
mov
inc
and
mov
cltd
mov
repz
movl
add
jnp
push
fimull
addr16
inc
add
push
or
jge
rclb
fwait
sub
icebp
idivb
lret
or
das
ss
ss
mov
out
or
cmp
jnp
scas
loope
outsl
mulb
lahf
or
fistpll
mov
xor
pop
cwtl
or
iret
lods
jnp
mov
mov
push
into
call
pushl
xchg
shr
jge
pop
xor
or
sbb
in
sbb
push
jl
out
in
xchg
sbb
jae
cmpb
ret
xor
xor
scas
pop
mull
mov
xor
pop
push
add
jne
cltd
gs
decl
ret
sahf
add
divl
nop
xor
fdivs
sar
cmp
xor
cmp
and
xor
pop
divl
ja
jnp
dec
cmp
int
pop
les
cmp
cltd
xor
add
jnp
push
xor
shlb
or
je
ret
fists
sub
sub
xor
pop
xor
loope
jae
push
movsb
sub
scas
adc
cmp
xor
adcl
mov
or
das
ja
or
add
cmpsl
adc
adc
jecxz
ss
add
jb
stc
and
cltd
push
xchg
xchg
fnstsw
add
xor
mov
cmovnp
mov
adc
or
fildll
xchg
sbb
iret
insb
cmp
repz
pop
in
mov
daa
cmp
adcb
lods
jo
push
or
cmpsl
sbb
jae
sub
iret
in
xchg
mov
divl
pop
sub
cmp
mov
cmp
sbb
cmp
adc
or
dec
int
out
jnp
mov
mov
fincstp
sub
push
xlat
push
add
xor
push
jae
push
or
bnd
mov
cmp
mov
mov
daa
xchg
xchg
or
icebp
sti
mov
xlat
and
cmp
cmpsl
jl
aaa
add
or
cmp
pushf
mov
cmp
or
stos
push
lret
or
loopne
inc
mov
xor
sub
sub
mov
xchg
in
call
dec
mov
adc
cs
or
add
lods
xor
jno
fnstsw
popw
xchg
lea
je
add
les
repnz
mov
daa
lea
or
mov
add
pop
adc
xchg
movsb
repz
add
adcl
inc
addr16
xor
mov
sbb
xchg
subl
das
dec
adc
movsb
fistl
popf
or
test
mov
jge
add
or
insb
or
cwtl
notb
or
dec
or
outsb
jo
es
pusha
or
mov
in
andb
subb
mov
add
mov
scas
mov
pop
int3
popl
xchg
sbb
inc
dec
xor
add
lea
daa
movsl
and
pop
mov
jno
fwait
sbb
push
sbbl
mov
repz
or
dec
pop
push
dec
adc
push
or
dec
insl
dec
xor
push
mov
add
and
mov
out
sbb
inc
or
add
cwtl
jl
or
inc
xor
or
and
add
sbb
mov
dec
into
pop
adc
add
out
testl
arpl
xor
add
xchg
movsb
xor
xchg
cs
dec
cld
fisubrs
cmpsl
daa
adc
fidivs
cmp
sub
dec
js
lock
call
je
outsl
shl
mov
insl
mov
loopne
push
inc
add
repnz
mov
lahf
jp
add
dec
pop
shll
mov
xchg
cmp
mov
fwait
jle
and
add
sbb
lea
sbb
sbb
jnp
sub
out
sti
pop
insb
cmc
ss
pop
in
mov
pop
cli
test
jp
loopw
adc
je
dec
mov
cmpsl
adc
out
push
jl
jbe
fnstsw
das
or
mov
sub
ja
aas
das
push
xor
std
insl
movsb
ret
popf
xorb
sbbl
into
sti
or
xor
movsb
cmp
adc
lcall
out
iret
mov
xchg
sub
sub
jnp
add
in
sub
fwait
adc
dec
xchg
cmp
in
ds
jno
dec
xor
jmp
je
jo
es
jb
xorl
popa
xchg
out
inc
jne
arpl
xor
pcmpgtb
stos
shlb
mov
and
addr16
jmp
lahf
pop
rorl
xlat
aam
add
mov
xchg
pop
and
fildl
push
lods
mov
pop
comiss
dec
cmc
ss
xchg
add
push
dec
push
aaa
add
imul
stos
js
add
test
push
mov
add
int3
fiadds
stc
outsl
sbb
lret
ja
pusha
and
out
out
enter
sbb
daa
dec
js
je
divl
and
cmpsl
pop
das
mov
mov
and
sub
insb
sbb
mov
mov
sub
mov
out
add
btrl
in
and
pop
mov
xlat
jnp
adc
jne
pushl
jbe
sbb
int
arpl
add
inc
pop
mov
jmp
pop
xor
int3
xchg
mov
imul
into
xchg
cmp
jecxz
push
pop
imul
imul
mov
fwait
mov
aam
imul
arpl
add
mov
popf
aam
adc
and
stos
pop
fnsave
jae
push
jnp
pop
pop
nop
mov
inc
in
lea
push
daa
pop
xlat
fsubrs
and
dec
jl
addl
lods
xchg
xchg
dec
and
mov
sbb
sbb
push
inc
cs
mov
jnp
push
or
jecxz
rorb
aaa
sti
mov
xchg
lahf
test
mov
xchg
adc
and
cmc
push
sub
push
fs
shll
aas
push
mov
dec
xchg
pushf
sbb
setnp
sbb
fldcw
es
and
jp
and
outsl
sbb
retw
dec
mov
movl
jle
sub
add
pop
sub
cmpsl
lods
add
inc
sti
xchg
daa
fs
adc
movsl
aam
xchg
test
scas
fwait
shll
jecxz
iret
out
shrl
jmp
repz
mov
sti
and
ret
sbb
sbb
das
jg
push
into
push
mov
fucomi
adc
ljmp
sub
jns
cmp
add
fs
ret
add
andb
add
dec
adc
in
mov
sbb
imul
jne
and
pop
inc
jnp
scas
jnp
add
inc
xor
inc
dec
sub
das
jno
adc
sbb
inc
sub
lds
mov
pop
pop
jae
pusha
push
and
movzwl
sub
dec
inc
dec
inc
fstps
inc
add
roll
fisttpll
sbb
or
jge
adc
pop
mov
xchg
sub
and
add
aam
cmp
stos
hlt
inc
lock
and
inc
mov
jae
xlat
pop
push
daa
push
adc
adc
add
mov
mov
mov
lea
imul
fwait
int
inc
shll
cmpsb
psrlq
mov
sbb
in
fwait
cmp
scas
les
mov
jns
subb
mov
clc
dec
movsl
fldt
sub
mov
fs
push
test
cmp
or
ficoms
mov
jne
push
and
hlt
xchg
cmpsl
pop
in
aas
mov
fbstp
orl
out
mov
xchg
adc
mov
fwait
repz
pop
scas
sbb
xchg
xor
sub
or
sub
loope
bound
insl
imul
mov
sub
icebp
ss
mov
adc
fdivrs
add
push
daa
test
xor
pusha
in
ljmp
andl
jne
testl
pop
scas
cmp
jo
push
test
int3
mov
push
mov
out
imul
inc
sbb
mov
iret
and
push
xchg
out
push
pop
jg
lods
add
mov
insl
jno
or
jnp
jae
fnstenv
movsb
mov
pop
into
adc
das
lock
lods
movsl
dec
lcall
cld
push
pushl
incb
or
popa
mov
cmp
lret
pop
shl
sub
cmp
movsl
mov
aad
and
fdivr
das
add
jmp
js
adcb
xlat
xchg
xchg
sub
sbb
mov
add
call
out
sbb
xor
fistpl
shrb
fcoms
pop
mov
popf
dec
icebp
and
fisttpl
adc
add
adc
cmpsl
add
std
test
into
ret
mov
sub
lds
sbb
outsb
inc
jecxz
adcl
jno
out
lahf
sbbl
sti
stc
push
insl
pop
mov
mov
jno
mov
add
movsl
push
lods
loop
adc
fdecstp
push
adcb
sub
sub
sbb
mov
lea
or
jnp
jns
jne
arpl
in
imull
mov
lahf
lea
popa
sub
mov
je
lods
cmp
jnp
outsl
cmpsb
xor
pop
xlat
sbb
outsb
scas
imul
int
lock
mov
lods
ret
xlat
add
addr16
push
xchg
add
pop
push
or
into
mov
dec
xor
faddl
out
out
repnz
sbb
incl
and
xor
outsl
daa
lahf
sbb
or
ja
testl
ret
and
lcall
sbb
jmp
fisubrs
ja
inc
pop
jg
jmp
je
ret
movsl
and
dec
pusha
jnp
cmp
xchg
inc
movsl
loopne
mov
push
pop
add
sub
cmpsb
test
adc
add
js
cld
sub
jbe
mov
sbb
mulb
mov
mov
sbb
xor
fbld
xor
lds
xchg
stc
fbld
jnp
lock
stos
leave
sub
rorl
inc
scas
add
jbe
push
inc
pusha
shrl
xor
jns
fstpt
xor
jnp
inc
jns
pop
dec
cmp
sbb
dec
dec
fwait
orb
dec
add
jmp
inc
out
dec
mov
xchg
pop
outsb
add
out
nop
jbe
pop
stos
and
nop
adc
arpl
push
pop
inc
popf
ret
sti
and
rcpps
test
in
pop
mov
and
stos
adc
adc
mov
inc
mov
aaa
sbb
pop
xchg
sbb
inc
out
out
or
addr16
out
mov
xchg
aad
adc
int
mov
ret
dec
cs
lret
mov
jge
dec
sbb
addl
push
out
sti
mov
movsl
pop
adc
add
insb
pop
sub
maxps
pop
push
test
adc
xchg
sub
and
adc
push
out
xchg
sub
test
xchg
inc
add
or
fs
mov
or
rcr
push
dec
jecxz
xchg
test
mov
or
push
fs
xchg
sbb
and
mov
mov
add
jmp
cmpsb
or
and
popa
push
mov
push
scas
push
sti
push
adc
stc
add
notl
mov
aaa
xor
cmpsl
ja
scas
rorb
jnp
orl
and
pop
xor
iret
push
inc
xor
sub
mov
dec
test
xor
sub
imul
sbb
out
sub
jnp
xor
icebp
mov
das
fistpl
mov
fsincos
sbb
pop
movsb
lods
outsb
add
pop
push
ret
out
jae
es
jp
xchg
pop
outsl
and
sti
js
sub
add
inc
sub
push
add
pop
sub
add
dec
push
dec
and
ja
fcompl
inc
lds
xchg
jge
ffree
jbe
cmc
xchg
gs
sub
dec
sti
jp
mov
add
sti
mov
sub
daa
push
popa
out
inc
push
bound
adc
xchg
xchg
mov
adc
ss
pop
fldenv
or
add
js
outsb
or
sub
xchg
adc
lahf
add
adc
jecxz
shlb
shr
and
fs
mov
sbb
jbe
sbb
insl
jnp
pop
jl
andl
mov
das
test
xchg
insl
enter
dec
loope
enter
movsl
and
cwtl
cwtl
or
jbe
ret
cs
or
fidivs
sbb
inc
xor
and
and
outsb
sbb
fstl
mov
dec
mov
pop
sub
sarl
inc
cli
ret
and
xlat
orl
mov
jecxz
xchg
idivl
sbb
or
mov
scas
mov
push
mov
pop
iret
dec
nop
mov
jae
repz
pusha
adc
adcb
mov
xor
pusha
sub
lahf
std
shrl
out
sub
ja
fwait
fwait
bound
or
jmp
mov
add
push
mov
data16
cmpsl
lods
push
mov
fdivrs
mov
xchg
mov
repz
or
addr16
mov
mov
jp
stc
add
sbb
mov
insl
jo
mov
mov
lods
add
out
jg
pop
loope
dec
std
imul
hlt
push
cmpsl
sbb
push
push
adc
addr16
mov
jnp
sbb
inc
pop
mov
lahf
out
cmp
aad
mov
push
jne
shll
push
and
xorl
mov
adc
sbb
or
adc
cmp
xorb
stc
add
incb
pop
sbb
neg
push
pop
adc
pop
mov
outsb
cmp
test
rclb
sub
adcb
push
js
in
fcomi
cmp
aad
add
pop
pop
push
mov
mov
cmp
imul
cmp
dec
aas
popa
data16
adc
cmp
jo
mov
or
sbb
scas
int
pop
mov
leave
pop
sbb
addl
jo
xchg
dec
add
jl
and
rolb
fisttpll
mov
inc
mov
mov
mov
mov
popa
jbe
adc
xchg
scas
pop
inc
sarl
push
fucomip
jge
out
and
mov
in
push
mov
stc
xchg
pusha
pop
and
lea
xchg
mov
and
add
shll
fmull
add
xor
mull
roll
dec
outsl
mov
pop
mov
pop
xchg
sbb
pop
cmp
adc
scas
lahf
add
push
dec
lahf
je
in
push
and
add
add
repnz
or
bound
loope
adc
stos
iret
jns
rorb
jae
rcrl
dec
repz
stos
adc
jmp
or
aas
subl
cmpsl
jmp
mov
insl
xchg
cmp
mov
mov
adcb
adc
aaa
insb
inc
add
hlt
xchg
xchg
test
movl
enter
rcll
add
xchg
mov
int
daa
iret
fistpll
mov
xor
jae
sbb
bswap
repnz
aaa
add
add
mov
sbb
or
leave
xlat
adc
inc
movl
data16
jne
jmp
add
lretw
add
jl
jmp
push
xchg
addr16
jle
cmpsb
popa
ret
push
inc
cmp
push
bound
mov
call
xor
mov
and
movsl
pop
fdivrs
add
and
sbb
and
sub
mov
and
lcall
loop
ljmp
cmc
sbb
das
push
and
or
jbe
jmp
xchg
sub
or
nop
cmpsl
or
mov
pop
add
dec
or
movsl
movl
push
jne
jne
roll
shlb
aad
scas
pop
cmp
lds
add
xlat
mov
aas
jo
pop
lds
mov
cmp
mov
xor
sbb
or
and
mov
out
arpl
imul
rolb
xchg
sub
stos
or
push
fldt
pop
aas
dec
movsl
stc
sbb
out
lcall
out
pop
imul
and
push
out
jnp
aad
iret
mov
cmpsb
mov
pop
jae
sbb
sbb
sbb
mov
arpl
or
dec
jo
fmul
dec
jmp
test
dec
divb
std
test
fnsave
mov
inc
mov
iret
add
sbb
sbb
pop
cltd
ja
mov
addl
dec
pop
jae
mov
popa
cmp
loope
les
imul
jo
jae
sub
out
dec
adc
pop
add
mov
add
test
mov
movsb
mov
fistpl
inc
sbb
dec
out
loope
lock
add
ret
pop
cmp
and
add
mov
nop
loop
enter
adc
adc
pop
insl
lds
and
mov
inc
pop
mulb
and
test
in
jns
ret
sti
aam
adc
dec
mov
xor
ret
jae
dec
rcrl
scas
shl
inc
in
sbb
xor
rorb
popf
sub
inc
mov
or
ja
mov
mov
pop
jecxz
je
xor
sbb
lods
jge
adc
or
xchg
dec
and
jmp
dec
jecxz
pushl
sbb
mov
add
arpl
jge
jge
movsb
inc
popa
fstp
es
xlat
cmp
invd
insl
in
popa
rcll
repz
push
inc
mov
es
popa
icebp
popf
lock
nop
jnp
ret
adc
pop
orl
sub
or
adc
jmp
adc
sub
lods
popa
or
daa
sbb
popa
fwait
ret
add
shlb
icebp
jae
jl
push
push
outsb
ja
sbb
pop
data16
or
insl
inc
inc
test
lahf
stc
jae
int
sbb
dec
mov
call
add
jns
roll
stos
inc
jmp
aam
loope
sbb
scas
arpl
mov
cmc
das
add
scas
or
xchg
and
sbb
ror
nop
pop
and
jmp
repz
add
imul
dec
jae
xor
inc
testl
shr
enter
das
rol
stc
int
jecxz
mov
push
add
js
inc
aad
xor
leave
adc
jmp
and
outsl
mov
rcrb
in
pop
xor
sbb
xchg
dec
ja
mov
es
add
insl
push
rorl
sbb
cmp
mov
enter
ret
jnp
inc
pop
shrb
out
fsts
out
loopne
fstpl
sbb
mov
js
pop
lds
mov
rcrl
push
faddl
fiaddl
and
in
or
aas
adc
and
sub
jno
andnps
and
add
pop
fisubrl
in
and
sbb
mov
add
test
jg
test
push
pop
add
adc
stos
lea
jb
rcll
xchg
and
cmpsl
mov
decl
stos
je
add
inc
loopne
dec
stos
iret
and
rcrb
jl
js
jg
and
mov
test
dec
ja
les
insb
sbb
push
sub
sbb
inc
or
mov
jae
xor
add
aaa
out
movsl
arpl
mov
xor
jmp
xchg
nop
add
daa
gs
pop
mov
mov
and
jne,pn
insb
mov
imull
test
jae
mov
dec
rcl
inc
jns
inc
scas
push
pusha
xor
jecxz
int
rorb
dec
sarb
js
or
pop
dec
inc
cmp
add
stos
sbb
xlat
test
sub
jnp
shlb
jbe
mov
jb
insb
loopne
hlt
pop
into
popa
or
arpl
fimull
dec
pop
test
imul
ss
pop
xchg
mov
iret
es
mov
loopne
jg
into
imul
push
mov
sub
into
and
xor
pop
xor
cwtl
mov
xor
sbb
pushl
dec
mov
pop
sbb
push
sbb
addl
push
dec
adc
add
negl
mov
pusha
xchg
sbb
sbb
loopne
movsl
or
mov
adc
lods
sub
adc
cs
jae
mov
hlt
mov
and
mov
pop
jbe
cmp
xchg
out
int
jnp
adc
or
jecxz
rorb
inc
mov
jmp
je
sub
scas
add
test
sub
pusha
nop
dec
cmpsl
mov
xor
pop
inc
stos
js
imul
mov
cmp
or
fmul
jb
out
push
add
jmp
mov
mov
mov
xchg
sbb
int3
into
xchg
sub
lahf
sbb
mov
or
loope
or
lahf
insb
shrl
adc
sti
int
loope
jecxz
sbb
mov
aaa
xchg
daa
adc
ret
imul
sbb
sti
mov
inc
mov
aas
push
jno
stc
pop
jns
xor
cmpb
fwait
fwait
mov
scas
int3
js
cmp
push
mov
int3
mov
adc
subb
loope
add
fdivp
fildll
and
jo
out
cmpl
and
push
mov
jmp
sbb
xchg
out
fcoms
dec
or
jo
das
cmp
inc
lods
push
cmp
dec
leave
das
ja
add
test
imul
xchg
cmp
cmpsb
xchg
cmpb
pop
push
push
mov
mov
jns
adc
cltd
pop
cmpsl
jl
popf
pop
loop
cmp
add
jo
mov
stos
sub
lahf
lcall
cltd
xchg
aas
movl
xor
sub
dec
mov
stos
xorb
shr
lret
test
test
adc
fimull
pop
cmp
lret
cmc
pop
push
fisubl
std
shl
inc
sub
ljmp
aad
lahf
ja
dec
pop
mov
sub
adc
fbld
es
cmp
aad
adc
jae
and
fcomps
sub
mov
fs
cmp
fcoml
or
das
add
xor
inc
mov
and
fldlg2
scas
sbb
jmp
xchg
dec
dec
mov
out
xor
sbbl
iret
and
jge
fsubrl
mov
dec
repz
nop
pop
repz
leave
xor
in
sbb
add
jo
xor
sbb
daa
push
dec
negl
push
popa
mov
or
or
or
mov
sti
inc
jbe
dec
add
out
or
pop
push
movsb
mov
les
int3
or
repz
add
outsl
push
mov
cltd
mov
or
cmp
and
xor
xchg
leave
mov
imul
pusha
or
push
lahf
push
inc
sub
or
enter
and
sub
es
xlat
pushf
inc
and
mov
push
subl
mov
jo
inc
mov
test
sbb
je
je
cltd
jae
pop
sbb
dec
ja
outsl
repnz
jbe
fnstsw
ficoms
push
and
loopne
in
add
cmpsb
inc
and
mov
mov
rolb
pop
mov
mov
dec
xor
sbb
int
pop
pop
in
jmp
ret
dec
pop
cld
cmp
adc
ss
jo
das
push
iret
fnsave
popa
xchg
mov
pop
aas
aaa
arpl
add
lea
pop
test
lds
inc
je
test
push
testl
ljmp
outsl
adc
jns
movsb
push
mov
inc
dec
pop
jnp
pop
pop
add
loop
imull
mov
push
outsl
mov
icebp
iret
push
scas
adc
mov
movl
adc
adc
pop
test
mov
mov
add
add
jo
push
out
sub
lock
or
xchg
iret
lods
aam
ret
jnp
bound
add
jno
std
das
roll
fidivrs
lret
jno
cs
arpl
aam
xchg
aas
jae
add
stos
mov
sbb
cmp
sbb
stos
hlt
inc
test
or
mov
xchg
cmp
mov
or
jg
fwait
sbb
fsts
pop
fisubrs
shr
mov
pop
popf
xchg
sub
insb
jae
fstps
aaa
mov
shrb
mov
mov
mov
xor
out
sbb
out
fs
aaa
inc
test
pop
repz
sti
mov
fisttpl
cwtl
mov
and
xlat
sub
add
or
loope
aad
inc
fists
sbb
or
add
iret
push
sub
popf
roll
lds
mov
mov
mov
js
and
mov
fcoml
or
loope
mov
dec
nop
ret
jnp
movl
dec
cmp
and
adc
jge
push
mov
scas
out
sub
xchg
or
sti
sub
lds
mov
push
jnp
jmp
stc
inc
push
and
inc
paddusb
aaa
sarl
jnp
xor
test
add
or
adc
adc
push
mov
sbb
jge
lea
cmp
test
test
out
adcl
jge
dec
pop
inc
daa
fdivrp
jbe
jno
xchg
add
leave
jge
pop
int3
sbb
icebp
sub
adc
dec
nop
xor
add
aas
mov
into
ljmp
orl
or
imul
mov
mov
sbb
daa
jg
jle
in
adc
sbb
jb
loope
jno
dec
xchg
mov
adc
ret
jo
dec
and
sub
jl
dec
add
add
mov
jns
push
xchg
jle
inc
pop
xchg
adc
adc
xchg
pop
clc
sti
insb
push
pop
popw
inc
lods
imul
push
cmpsl
inc
imul
aaa
push
dec
add
sub
jns
dec
daa
flds
pop
idivl
sbb
sti
adc
add
sbb
icebp
js
jo
or
dec
xor
or
roll
push
jae
pop
inc
loope
push
sub
mov
lret
push
or
push
sub
pop
mov
out
push
push
out
pop
es
sbb
xchg
mov
or
popa
jnp
xlat
pop
jge
ja
popa
adc
jno
sbb
push
movsl
lcall
ja
mov
pop
adc
int
add
ja
inc
or
and
repz
or
dec
jae
iret
adc
sub
pop
xor
scas
pop
andl
add
scas
pop
sti
mov
and
cmp
popf
or
or
ret
and
das
add
mov
inc
aas
push
cmp
stos
out
loope
daa
xor
mov
into
adc
mov
mov
xor
out
in
ss
xor
out
push
or
cmpsl
test
stc
leave
idivl
rcll
mov
pusha
inc
pop
jno
outsb
pop
loopne
push
push
dec
push
dec
dec
add
xchg
and
inc
cmp
fwait
cmp
aam
push
push
push
jbe
testb
dec
and
shlb
data16
cmp
test
je
dec
dec
push
fstl
cmp
imul
lods
fs
xor
fs
push
popf
and
add
outsb
push
jle
mov
les
mov
jb
sbb
inc
jle
clc
add
push
mov
push
outsb
arpl
clc
jle
gs
jb
inc
push
or
inc
push
enter
or
jb
jne
fidivs
adc
jns
cld
inc
xorb
fsubrs
jno
xor
ss
cs
inc
inc
ja
inc
pop
add
int
sub
dec
push
push
roll
popa
jbe
adc
push
xor
push
outsl
pop
clc
fldenv
gs
jae
dec
mov
call
aam
add
scas
int
push
nop
mov
add
rclb
gs
or
xorb
fldl
adc
fs
inc
inc
ljmp
lods
sbbl
and
mov
push
xor
mov
rclb
pop
int
rcrl
stos
jae
inc
push
inc
cmp
cltd
mov
mov
hlt
jne
push
pop
dec
and
popa
rcrb
je
xorl
mov
push
inc
cltd
xor
cltd
and
popf
ss
dec
add
mov
addr16
add
push
push
ret
andl
mov
dec
jbe
dec
push
adc
je
inc
push
mov
in
push
jbe
pop
popa
insl
and
clc
mov
icebp
outsb
iret
and
inc
push
xor
and
jbe
in
les
je
and
jbe
jle
inc
push
mov
insb
mov
es
jne
or
inc
aad
dec
inc
push
add
push
mov
lcall
test
xchg
lds
push
sub
dec
call
mov
addr16
inc
rcll
cmpb
cmp
sbb
pop
subl
jge
inc
sub
dec
shll
jmp
jne
ja
mov
push
push
roll
inc
mov
push
cmp
out
test
sub
daa
out
cmpsl
or
xor
shlb
or
pop
cmpsl
ljmp
pop
test
xchg
mov
sub
je
imul
aad
or
lahf
shlb
adc
xlat
adc
ljmp
fmull
mov
xchg
mov
hlt
mov
mov
fldcw
push
push
test
sbb
jbe
daa
mov
push
push
test
loopne
xchg
jnp
cmp
jbe
in
roll
mov
aam
popf
sbb
or
int3
push
pop
mov
inc
jae
pop
mov
xor
addb
pop
pop
inc
sub
outsb
push
dec
push
dec
jb
lock
out
lock
push
xchg
xor
popa
xchg
enter
push
push
cmc
pop
xor
mov
push
push
pop
cmp
ja
xor
or
call
rcrl
aam
add
jmp
add
mov
sub
inc
mov
dec
or
xor
jle
pop
xor
lahf
inc
or
insb
add
or
bound
pusha
mov
mov
cmp
cmp
inc
mulb
cld
cmp
adc
inc
jg
ret
mov
shlb
in
sarb
cwtl
fnstenv
lods
sbb
xor
mov
xchg
xor
push
out
jecxz
daa
push
dec
adc
stos
bswap
sbb
sub
cli
jb
outsb
mov
test
push
outsb
mov
adc
inc
cmp
js
in
add
xchg
arpl
inc
mov
test
xchg
sbb
addr16
dec
fiaddl
out
mov
cmp
cmp
xchg
sarb
xchg
bound
repnz
pop
cmc
and
inc
mov
add
imul
scas
insl
inc
scas
jb
cmpsl
pushf
ffree
mov
js
fldenv
scas
fstpt
xlat
add
xlat
add
adc
pop
pcmpeqd
outsb
sub
dec
or
data16
addr16
hlt
out
stos
push
fcomp
js
ss
mov
push
or
cmp
jp
push
in
jo
testl
cli
pop
fidivl
js
sar
dec
cmc
jo
loope
pop
shll
inc
or
rorb
dec
or
stos
imul
stos
dec
addr16
ret
cmpl
jbe
cld
push
inc
stc
inc
add
ds
push
pop
das
or
inc
ror
or
inc
int
cmc
add
adcb
mov
push
push
xor
add
pop
je
push
cmp
stos
sbb
inc
add
gs
in
rorl
sbb
adc
ret
adc
loope
mov
add
sbb
sbb
jnp
mov
fs
add
sbb
mov
loop
loope
jno
pusha
pop
inc
sbb
push
fs
inc
dec
call
jmp
or
addr16
inc
imul
mov
pop
adc
inc
mov
cld
loope
out
sbb
pop
out
enter
xor
pop
pop
cld
push
add
sbb
fcom
fidivrs
add
jmp
jge
repnz
mov
out
jbe
outsb
or
inc
ficoml
fiadds
addr16
mov
js
in
call
cmpsl
xchg
loope
jecxz
mov
cld
inc
shll
add
push
dec
push
mov
or
push
lds
js
lock
neg
pop
or
dec
out
fs
pusha
lods
mov
pusha
repnz
and
cmp
push
in
mov
rcl
insl
cmp
out
loope
loope
out
shr
xchg
cmp
lock
call
das
or
fsub
add
sub
enter
std
push
sbbb
out
shll
mov
adc
std
data16
out
jo
int
sti
jae
inc
sub
add
fcom
and
sti
loopne
jno
or
mov
mov
ret
out
lds
std
mov
andb
mov
xchg
imul
div
add
daa
xchg
movsl
repz
pop
xlat
mov
xacquire
add
fsubs
inc
jmp
add
rol
jp
shll
and
aad
or
inc
ds
xor
and
stos
add
fdiv
adc
jno
imul
cmp
pop
aad
add
not
add
pop
imull
mov
sbb
fneni(8087
loop
dec
fstl
add
jge
adc
push
jbe
mov
add
pop
addl
add
mov
adc
sbb
fdivs
ret
or
adc
add
or
sbb
in
outsb
jae
repz
pop
dec
je
jo,pt
pop
push
xorl
paddsw
insb
jno
push
loopne
loop
stos
rcl
ss
push
inc
js
inc
js
push
inc
lods
call
das
jo
push
add
es
add
push
xchg
pop
repz
mov
aaa
stos
adc
ret
push
jb
imull
outsl
test
adc
xor
add
inc
jp
jo
inc
pop
dec
in
adc
cltd
mov
push
rcl
mov
pop
aad
ret
add
mov
lds
in
popa
sbb
jne
mov
cltd
add
xchg
mov
mov
mov
inc
pop
scas
sub
mov
jl
inc
lea
mov
or
ret
jae
mov
sbb
ret
ja
xchg
aad
jle
andl
inc
xorl
shrb
dec
pop
cmp
mov
lea
ja
or
jo
or
jmp
in
sahf
loop
rcrb
add
test
mov
inc
jge
popf
pop
mov
sarl
insl
lea
dec
cmc
sub
mov
rol
sbb
in
stos
lds
roll
inc
scas
adc
orl
xchg
push
xchg
add
imul
or
mov
jne
mov
ja
lea
cmc
push
sub
lock
imul
pop
cmc
loopne
es
push
dec
pop
mov
xor
mov
adc
inc
mov
dec
mov
pop
shrl
mov
xor
add
sub
lds
leave
jle
daa
lcall
rcl
inc
addr16
lea
shr
outsl
out
jae
add
aad
in
loopne
bound
test
loope
in
xchg
lea
testl
add
outsb
stc
push
imul
dec
add
dec
add
or
cltd
adc
nop
mov
mov
imul
aaa
insb
sbb
xchg
popf
xor
pop
mov
nop
sub
add
xor
add
jne
out
pop
addl
fimull
jg
sub
mov
xlat
add
mulb
mov
add
xchg
xchg
icebp
sbb
xchg
sbb
bound
incl
mov
pusha
xchg
inc
and
movsl
jmp
sti
popa
dec
and
add
daa
inc
cmp
jp
js
mov
setne
aaa
pusha
pop
and
xor
pop
add
sub
sti
test
push
xchg
call
loope
mov
int3
sbb
loope
imul
arpl
and
jb
rolb
fisubrs
inc
push
imul
jmp
push
lea
shlb
jg
push
or
mov
out
mov
push
out
cltd
push
jl
xor
lock
shl
ss
jo
pop
outsl
add
adc
pop
push
and
pop
enter
cli
stc
jae
in
in
fcmovnbe
inc
js
rclb
push
test
mov
push
arpl
loopne
stos
pop
addr16
out
cmp
adc
inc
movsb
mov
sub
scas
mov
cmp
dec
out
pop
cmpsb
les
test
aad
sub
popf
adc
pop
mov
imul
inc
add
aad
or
bound
or
pop
jp
push
rcrl
inc
rcrb
mov
mov
ss
decl
jle
inc
add
xchg
fdecstp
sbb
add
in
pop
sbb
fcmovnb
shr
add
push
push
addr16
push
sbb
imul
jg
cmpsl
adcl
test
js
xor
mov
sti
mov
push
push
mov
mov
push
cmp
andb
adc
mov
inc
push
inc
into
movsl
sbb
jmp
pop
add
cmp
mov
inc
mov
add
cmc
pop
push
lds
add
adc
out
or
outsl
add
dec
mov
roll
in
adc
sub
out
test
mov
popa
lea
cmp
sbb
inc
mov
push
and
push
jno
pop
add
movsb
or
mov
lea
xor
pop
pop
and
push
stos
or
add
test
add
lea
repz
adc
xchg
ret
dec
lods
icebp
xchg
daa
in
cmp
sbb
jg
sub
fisubl
sbb
mov
jmp
sbb
jmp
jbe
adc
mov
fcoms
jo
inc
cmp
icebp
cld
jns
movsb
push
out
ja
push
inc
shrb
ret
rcl
movsl
sti
js
add
pop
mov
cwtl
push
mov
icebp
imul
add
ds
lock
insl
inc
out
xor
push
bound
adc
loopne
add
xor
xlat
xlat
insb
adcl
mov
adc
clc
add
mov
aaa
dec
inc
gs
pop
lods
adc
lods
push
and
rclb
imul
cs
jmp
sub
and
js
xchg
loopw
mov
jg
push
add
sub
clc
add
mov
cltd
and
sub
jne
daa
push
js
fs
mov
lcall
bound
in
inc
scas
mov
inc
pop
aaa
push
xchg
flds
pushf
dec
push
xor
fcoml
and
mov
push
sbb
mov
xchg
dec
daa
mov
sarb
inc
ja
mov
add
mov
dec
inc
add
push
or
pop
jnp
push
lock
imull
lods
lcall
inc
pop
mov
mov
push
push
out
clc
sbb
jae
push
push
xchg
iret
dec
push
bound
and
mov
outsl
mov
lods
jne
mov
ss
mull
sbb
inc
pop
flds
and
xor
filds
sbb
or
dec
mov
inc
jns
inc
adc
pusha
mov
enter
push
sbb
push
aam
testl
mov
dec
mov
lret
into
inc
inc
push
test
add
mov
cmp
dec
sbb
push
ffreep
std
fistpl
daa
sbb
ret
loopne
xor
repnz
in
cmp
dec
pop
push
aas
and
fs
xor
jb
dec
adc
push
pop
ds
dec
inc
js
inc
dec
call
jmp
fsubl
ljmp
cwtl
xor
hlt
pop
jo
mov
mov
sub
popa
dec
dec
and
rcr
test
and
pop
mov
cwtl
add
jg
testb
inc
jge
rcl
sbbl
push
push
push
dec
int3
sub
out
push
mov
std
hlt
movsb
mov
loope
push
jnp
sti
cs
insb
inc
dec
push
sarl
fimuls
ficoms
inc
adc
fldcw
dec
dec
rclb
hlt
out
jmp
dec
inc
xchg
daa
dec
das
sub
or
lret
dec
add
loopne
mov
add
aaa
mov
jp
push
push
dec
inc
push
xorb
cmp
add
dec
stos
pushf
rorb
js
sbb
mov
addb
outsb
stos
call
jnp
stos
fisttps
inc
jecxz
inc
push
cmp
adc
inc
inc
daa
jno
pop
aad
mov
test
bound
sub
imul
inc
or
ret
les
xchg
dec
pusha
jne
stos
push
sub
inc
pop
xchg
shll
mov
cmc
or
sub
xor
shrb
rcl
sub
ret
stos
sbb
sub
or
add
iret
fisubrl
inc
fadd
lods
aas
xor
xor
int
jmp
or
and
adc
aaa
jmp
lods
xorb
lahf
movsb
push
push
mov
mov
das
sub
sbb
adc
lods
xorb
and
test
pop
push
push
mov
add
mov
push
or
aaa
and
insb
test
add
inc
in
rcrw
sbb
and
dec
jns
mov
pop
dec
add
inc
add
xor
imul
inc
ret
mov
and
fiaddl
push
pop
push
imul
pop
cmp
daa
inc
test
adc
push
mov
adc
stos
insl
inc
xor
lds
sub
push
dec
xchg
push
addb
pop
pop
sub
mov
aas
mov
test
inc
cmpsl
aad
mov
adc
mov
stos
add
pop
aaa
cmpsb
mov
mov
and
stos
imul
pop
push
imul
mov
push
push
pop
insl
les
ret
jge
aam
add
xor
and
or
add
outsl
lods
movsl
push
lods
or
or
test
xchg
sbb
std
dec
inc
loop
outsl
mov
push
xor
push
movl
or
addr16
xor
mov
pop
xchg
pop
sub
aad
dec
push
mov
push
add
in
or
imul
cltd
inc
bound
dec
or
imul
add
or
xchg
xor
mov
stos
fstl
add
sbb
xchg
cmc
ljmp
nop
pusha
sub
jne
dec
cmp
mov
inc
inc
subb
cwtl
mov
push
xchg
mov
test
add
mull
stos
inc
mov
sub
out
and
inc
push
repz
inc
pop
lret
movsb
inc
lods
outsb
jg
or
shlb
sub
push
aad
push
jae
mov
xchg
adc
and
inc
adc
adc
sub
mov
adc
sub
inc
push
sti
bound
addr16
fcoms
arpl
jno
rcll
adc
pop
roll
int
push
stos
lods
sbb
push
gs
push
dec
push
xchg
mov
test
lods
aad
adc
repz
push
mov
add
push
ss
mov
push
mov
ja
ret
ret
and
push
and
or
iret
push
fdivp
cltd
jl
xor
sbb
push
pop
mov
daa
dec
adc
xchg
movsl
mov
or
dec
imul
and
incl
fiaddl
xchg
fstps
jne
push
test
jmp
xlat
lea
inc
popa
movsb
sbb
mov
daa
or
push
aam
or
loope
shl
sbb
or
push
push
adc
push
or
or
mov
push
arpl
bound
add
pop
add
testl
les
in
test
xor
add
ret
aam
sub
sub
hlt
pushf
shrb
push
dec
cmp
mov
push
add
sbb
or
xor
daa
dec
insl
adc
push
fadds
lods
add
add
mov
sub
dec
fdivr
pop
add
clc
call
scas
lcall
rcll
adc
mov
add
call
js
pop
inc
cmp
daa
in
adc
jo
out
inc
daa
inc
cmpl
and
jmp
cmp
dec
jo
and
lods
inc
lods
or
sub
add
add
dec
push
outsb
add
add
aad
pop
cmp
je
out
pop
sbb
push
lcall
shll
inc
jecxz
imul
into
or
adc
xlat
popf
andb
push
push
insl
cmp
pop
push
cmp
inc
jne
mov
jmp
dec
inc
imul
inc
or
inc
daa
je
mov
fs
int3
or
mov
adc
add
gs
mov
xlat
aas
adc
dec
push
push
pop
push
in
add
popa
push
jnp
cmp
xor
pop
cmp
add
sti
daa
add
daa
add
adc
sbb
arpl
cmpsb
js
loop
aad
mov
xchg
xor
sub
add
fadd
xchg
add
dec
cmp
and
add
adc
lret
int3
roll
ja
xor
bsf
sbb
inc
popa
and
cmp
nop
mov
les
xchg
inc
orl
push
stc
loopw
mov
aad
es
push
enter
nop
imul
movsl
mov
push
push
pusha
sbb
daa
popa
inc
inc
mov
push
ret
jo
pusha
inc
outsb
test
loope
push
push
push
push
dec
js
pop
push
cmp
inc
pop
clc
and
push
or
cmpsl
xor
movsl
push
cmc
fcoml
xchg
out
push
cmpsb
inc
movsl
xor
jmp
into
adc
ds
xor
xor
pushf
inc
sbb
mov
or
xor
out
test
cmp
or
push
sbb
enter
xor
subl
jne
dec
jbe
cld
adc
or
pop
inc
jmp
sbb
movsl
xor
aaa
and
or
sbb
sbb
imul
sub
add
or
adc
insb
pop
adc
xor
adc
mov
imul
jne
in
mov
js
adc
js
xor
add
lds
push
imul
and
push
mov
pop
pop
push
cmp
sub
jae
cmc
sbb
int
sub
sub
sbb
xor
pop
movsb
gs
mov
mov
and
push
adc
arpl
mov
test
cmp
test
add
or
ds
dec
adc
ret
dec
js
adc
addr16
jmp
std
test
push
mov
fsts
push
adc
outsl
lds
sub
imul
mov
lods
dec
addl
stos
ljmp
ficoml
mov
stos
xchg
fdivl
push
mov
pop
test
push
xor
add
scas
insl
mov
mov
imul
repz
push
rcrl
push
pop
pop
xchg
sub
push
xchg
std
mov
mov
push
std
rcl
test
jnp
fstpl
push
imul
push
cmp
ja
mov
sub
and
addb
sub
push
mov
adc
stos
shlb
push
movsl
or
scas
mov
cvtdq2ps
add
adc
push
mov
scas
inc
jno
test
inc
pop
dec
or
push
lods
add
in
pusha
jne
mov
dec
aaa
repz
push
push
jge
orb
leave
das
lods
stos
adc
adc
insb
xlat
mov
stos
add
pop
stc
adc
push
push
add
push
add
pop
lods
addb
aad
stos
arpl
or
ret
push
or
inc
push
push
mov
rcll
pop
push
push
adc
arpl
push
push
mov
sub
adcb
icebp
adc
push
fsubr
loop
lods
aad
push
lods
mov
fbstp
test
mov
stos
sbb
pop
adc
add
xchg
mov
divl
xchg
mov
push
adc
push
xchg
pop
stos
sub
and
test
sbb
adc
sub
dec
sub
lods
bound
fildll
inc
inc
push
mov
adc
add
pop
xor
ret
stos
movsl
addb
add
jno
imul
das
dec
or
inc
or
movsb
add
lea
ret
imul
mov
mov
stos
and
push
adc
adc
aad
inc
mov
shlb
aaa
cmc
push
mov
xchg
jns
or
add
or
test
addb
flds
aad
les
mov
mov
jno
stos
imul
aad
sub
in
push
test
nop
incl
enter
aad
add
sub
outsl
pop
leave
pop
sub
add
sub
orb
das
fcoml
and
sub
push
call
add
lahf
pop
pop
testb
mov
jbe
cmp
jns
cmp
movsb
scas
adc
fcoms
leave
xchg
rorl
xchg
int3
ret
into
addr16
daa
lds
inc
xor
push
dec
mov
cmp
pop
pop
adc
xchg
popl
das
bound
paddsw
aas
out
xor
mov
cmpsl
fdivs
xchg
inc
out
cmp
dec
push
pop
aas
push
outsb
adc
jnp
mov
icebp
xchg
rcll
mov
add
dec
in
lahf
pushf
push
aas
ret
mov
fwait
bound
rcll
mull
aaa
popf
mulb
scas
pusha
pop
aas
adc
jbe
push
int3
sub
pop
inc
cmpsl
inc
fisubl
ds
fisubrl
push
les
xlat
aas
clc
push
popf
lds
cmpsl
nop
push
jb
out
pop
mov
scas
fwait
pusha
cmpsl
jo
aaa
jp
xlat
and
add
ret
cmp
mov
cmp
push
daa
out
pop
jg
xorb
lds
jae
mov
xor
daa
loope
add
or
aaa
adc
jae
jb
lahf
std
movsl
scas
push
sbbb
mov
mov
jns
xchg
outsl
push
cmpsl
sahf
mov
mov
in
adc
dec
cmpsl
jecxz
in
and
or
jmp
testb
xor
aaa
push
popf
popf
pushf
pop
pop
push
xchg
test
and
jbe
test
insb
xchg
mov
fisttpll
mov
in
adc
outsl
xchg
pusha
scas
mov
loope
je
scas
push
jb
popf
jnp
das
sub
sbbb
mulb
enter
aaa
nop
movsl
push
add
mov
mov
mov
dec
in
lods
das
or
or
push
cld
out
sahf
dec
push
fs
lret
add
sub
scas
loop
and
add
push
xchg
or
stos
andb
addb
mov
dec
repz
push
push
or
add
roll
sbb
push
mov
adc
jb
je
arpl
lcall
pop
out
and
xor
push
or
pusha
fildll
inc
gs
roll
xchg
add
std
sti
cs
dec
inc
dec
inc
push
adc
fs
dec
popa
outsb
fs
jg
or
xchg
sbb
jb
outsb
je
aas
roll
dec
fs
push
jnp
mov
push
outsl
xchg
jo
je
jne
dec
jnp
in
data16
inc
js
jae
arpl
shll
shlb
ficompl
sub
jnp
pop
jns
push
gs
je
sub
gs
pop
inc
xor
jne
jns
or
dec
jnp
pop
push
cmp
into
add
adc
inc
cmp
jb
fcmovne
shrl
or
in
outsl
ja
add
insl
push
outsl
adc
mov
fisttpl
dec
dec
pusha
addr16
mov
insb
fs
add
je
push
dec
dec
fidivl
xchg
shlb
sbb
gs
mov
inc
xchg
cmp
cmp
dec
call
jne
je
dec
gs
jo
inc
pop
jae
cmpsl
ret
sbb
push
insb
and
jl
enter
inc
sbb
jns
arpl
xchg
arpl
std
sbb
or
pop
xor
jb
addr16
lret
dec
ja
jo
je
inc
es
inc
push
jns
inc
adc
cli
jg
fcompl
sub
or
or
add
mov
fdivrp
outsl
decl
push
add
sbb
sbb
testl
and
add
incl
inc
push
push
add
lock
add
push
mov
in
in
rorl
add
or
mov
add
sbb
or
cs
rolb
pop
lock
push
dec
test
add
test
or
lock
mov
cmp
add
and
lock
out
fs
adc
add
inc
hlt
insl
movsb
pop
add
pop
inc
sub
loopne
mov
add
add
adc
pusha
sbb
mov
int3
pop
add
pcmpgtd
iret
insl
mov
sbb
adc
out
mov
add
mov
push
and
xor
adc
in
lock
inc
dec
inc
inc
dec
dec
and
add
mov
es
inc
inc
push
lahf
shlb
mov
bound
push
dec
inc
push
rolb
xchg
in
mov
mov
shrb
add
pop
out
popa
add
loopne
push
add
gs
inc
pusha
and
fwait
rclb
lock
add
jae
dec
ja
mov
dec
or
pop
loope
mov
adc
inc
push
add
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
