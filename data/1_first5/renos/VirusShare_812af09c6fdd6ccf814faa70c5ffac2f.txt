jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ss
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movb
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
mov
push
mov
push
call
push
push
lea
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
incb
cmpb
jne
mov
pop
ret
add
xor
xor
aaa
xor
xor
add
xor
xor
xor
add
add
in
add
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
push
push
lea
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
push
push
lea
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
pop
ret
xor
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
in
add
mov
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
mov
cmp
je
jmp
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
xor
divl
test
jne
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
cmp
je
jmp
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
sub
mov
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
push
mov
mov
xor
call
mov
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
mov
mov
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
push
mov
mov
xor
call
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
lea
mov
push
jmp
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
sub
add
add
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
lea
pushl
call
mov
pop
ret
push
mov
add
mov
mov
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
push
call
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
mov
movl
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
pop
ret
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
push
cmp
testb
mov
xchg
lcall
cld
mov
xchg
sahf
mov
mov
mov
mov
cld
cld
mov
mov
mov
cwtl
mov
xchg
lahf
mov
xchg
cltd
mov
lahf
nop
lods
mov
mov
xchg
lahf
mov
fisubl
cld
cld
xchg
cld
lahf
cld
mov
lcall
cld
into
cld
mov
cld
cld
cld
cld
cld
scas
jne
jge
add
mov
mov
xchg
test
loopne
repnz
fidivrs
mov
fidivrs
cwtl
fidivrs
jl
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
mov
cmp
mov
xor
jae
or
cmp
mov
cld
scas
jne
jge
xor
mov
ja
sub
jne
aam
jne
xor
mov
xor
lods
mov
mov
jne
xor
mov
xor
mov
sbb
movsb
jne
sbb
or
cld
cld
jne
or
hlt
jne
sbb
enter
jae
or
mov
cld
cld
jae
and
mov
cld
stc
subb
and
cld
std
mov
adc
cld
cld
xchg
cld
xchg
cld
jne
xor
clc
std
mov
xor
lods
shlb
adc
xchg
stc
subb
cld
jne
xor
cld
nop
jecxz
mov
mov
jne
xor
in
std
mov
adc
jne
in
std
mov
jne
xor
in
std
mov
adc
adc
mov
or
cld
cld
lods
jne
adc
jne
xor
lods
les
sbb
adc
jne
and
jae
sub
mov
lods
jne
adc
jne
xor
lods
les
sbb
jge
sbb
jge
and
jne
and
cld
push
jge
xor
jne
xor
clc
cld
stc
jg
or
or
or
mov
jae
add
mov
jae
adc
cmp
pop
mov
mov
lods
jne
cmp
movsb
xchg
cld
jl
cld
xchg
cld
jne
xor
mov
xor
lods
mov
cld
jl
cld
xchg
cld
jne
hlt
lods
jne
xor
lods
mov
scas
add
lahf
adc
loopne
or
or
push
jnp
cld
or
or
cmp
push
jne
cmpsl
ds
cmp
jne
pushf
jne
hlt
jne
clc
or
lret
and
xchg
cld
cld
cld
lea
lret
xor
cld
cld
cld
call
cld
cld
cld
fisttpll
mov
cld
cld
cld
in
cmp
adc
adc
cld
cld
cld
shll
in
adc
cld
cld
cld
adc
nop
mov
xor
sbb
pop
adc
cld
cld
cld
cld
xchg
cld
idivb
lea
jge
mov
jae
dec
sti
mov
or
inc
or
cld
cs
pushl
ret
cmp
sbb
or
jmp
adc
or
or
ds
cld
ja
cld
jae
jae
inc
or
or
into
cmp
pop
inc
or
or
shll
xor
jnp
add
or
jae
or
hlt
jl
cld
cld
inc
push
jl
cld
cld
inc
mov
jbe
add
insb
clc
jl
cld
or
cld
adc
push
cld
jne
or
or
or
add
stc
xorb
cld
inc
mov
jbe
push
jne
or
dec
jbe,pn
add
or
or
mov
mov
mov
add
sub
push
cld
inc
mov
jbe
push
int
jbe
add
add
or
std
ds
jbe
add
jl
cld
std
fisttps
cld
cld
cld
je
push
int
jbe
add
mov
int
jbe
push
jbe
add
jl
cld
or
cld
dec
jne
cmpsl
cmp
jne
stos
je
or
cmp
hlt
jl
cld
mov
cld
pop
hlt
jl
cld
int
pop
repz
cld
int
jbe
hlt
jl
cld
stc
push
outsb
clc
jl
cld
std
fisttps
cld
cld
cld
pop
repz
cld
int
pop
hlt
jl
cld
jbe
clc
jl
cld
je
pop
int
pop
repz
cld
jbe
clc
jl
cld
int
jbe
hlt
jl
cld
je
clc
jl
cld
int
pop
repz
cld
jbe
pop
je
clc
jl
cld
int
pop
hlt
jl
cld
stc
push
jl
jl
cld
int
jbe
repz
cld
stc
push
outsb
clc
jl
cld
std
fisttps
cld
cld
cld
je
pop
int
jbe
pop
jbe
clc
jl
cld
into
mov
jbe
or
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
mov
mov
call
mov
cmpl
je
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
cmp
je
mov
subb
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
xorb
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
incl
mov
cmp
jne
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
mov
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
push
mov
push
call
cmpl
je
mov
push
call
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
push
mov
push
call
mov
pop
ret
push
mov
add
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
mov
mov
mov
xor
mov
mov
cmp
jne
call
add
cmp
jne
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movb
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
mov
pop
ret
mov
push
mov
add
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
call
call
call
test
jne
mov
jmp
movw
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
call
lea
mov
pop
ret
nop
push
mov
add
movl
mov
mov
mov
push
mov
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
xchg
cmp
jo
xchg
mov
inc
lea
lea
inc
mov
mov
mov
xchg
lea
dec
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
push
call
mov
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
mov
pop
ret
add
add
xor
xor
xor
xor
xor
aaa
add
cmp
cmp
xor
cmp
add
add
xor
xor
xor
cmp
xor
xor
aaa
xor
add
cmp
xor
cmp
xor
xor
xor
xor
cmp
add
add
aaa
cmp
xor
xor
add
cmp
xor
cmp
xor
add
push
outsb
push
inc
jae
fs
insb
and
add
add
jae
mov
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
movl
mov
push
mov
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
mov
mov
push
push
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
push
push
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
movl
mov
push
mov
push
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
mov
mov
push
push
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
movl
mov
mov
push
push
push
call
mov
mov
mov
lea
mov
mov
lea
mov
inc
inc
dec
je
lea
mov
mov
mov
mov
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
mov
inc
inc
dec
je
mov
xchg
lea
mov
xchg
mov
mov
dec
inc
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
mov
cmp
jne
xchg
lea
lea
lea
xchg
mov
mov
mov
mov
mov
mov
inc
lea
mov
inc
movl
movl
mov
push
mov
push
push
call
mov
cmp
jno
dec
inc
mov
mov
mov
mov
xchg
xchg
lea
lea
mov
lea
xchg
inc
inc
dec
je
xchg
mov
dec
inc
dec
movl
mov
mov
push
push
push
call
lea
mov
cmp
js
lea
lea
mov
xchg
mov
xchg
lea
lea
dec
je
mov
inc
inc
lea
mov
mov
inc
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jg
jmp
inc
xchg
xchg
mov
dec
inc
inc
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jae
lea
lea
xchg
lea
lea
xchg
inc
inc
xchg
mov
mov
lea
lea
xchg
mov
mov
mov
mov
lea
call
cmp
jns
mov
mov
xchg
mov
lea
inc
dec
mov
inc
mov
mov
lea
xchg
lea
lea
dec
jne
mov
dec
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
add
xor
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
add
add
xor
add
xor
aaa
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
xor
xor
cmp
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
lea
es
testl
ss
cld
pop
sti
xor
mov
add
pop
add
popa
push
xchg
lret
pop
rclb
push
pop
mov
into
loope
add
clc
test
or
xor
sub
loop
jne
fiadds
or
outsb
mov
imul
loope
loop
add
add
ds
mov
popa
sub
imul
mov
fld
in
jnp
sbbl
push
xchg
xchg
xlat
jl
les
push
sti
mov
add
repnz
xlat
test
push
das
test
sahf
fsubr
repz
sbb
add
add
add
ret
xor
inc
cmp
mov
dec
sbb
aas
add
insb
cmp
sub
xchg
in
rolb
add
mov
das
sub
adc
faddl
ret
mov
push
add
jl
leave
add
push
add
push
or
push
adc
add
ss
xor
add
mov
dec
nop
lock
xchg
test
dec
movsl
mov
add
test
shlb
out
out
icebp
push
stos
inc
add
adc
or
add
insl
mov
add
push
add
fwait
int3
std
inc
sti
nop
jnp
jne
xorb
add
sub
mov
add
add
add
add
add
cltd
add
xor
push
xor
dec
out
jle
rolb
inc
rorb
lds
sub
jp
cmpsl
mov
add
sub
mov
movsb
cmc
lret
sub
jmp
out
or
or
into
in
adc
add
add
add
lea
insl
or
add
fsubr
mov
cmc
test
jle
in
cmp
push
in
xlat
leave
add
lret
xor
pop
pop
add
aas
add
outsb
xchg
push
pop
movsl
xchg
add
cltd
subl
loope
add
arpl
push
add
add
add
and
mov
add
add
mov
or
andl
mov
mov
dec
add
add
adc
mov
js
push
push
add
or
add
add
add
sub
test
imul
xchg
mov
add
fcmovu
sub
add
jmp
insl
test
faddl
sbb
adc
add
add
add
testb
push
addb
lea
pop
mov
add
xchg
push
add
push
out
das
add
inc
push
add
pop
icebp
arpl
push
fs
mov
add
mov
jmp
lahf
lahf
int3
int
add
add
add
mov
dec
cmpsl
test
mov
dec
ret
jge
lods
dec
fs
arpl
sahf
clc
and
insl
addb
fwait
repz
gs
dec
xchg
jl
rolb
add
adc
outsl
add
pushf
sti
rcr
push
push
xchg
add
test
mov
rorb
movb
push
add
push
popf
jle
test
pop
hlt
add
adc
cmp
pop
xchg
jae
inc
movsb
mov
dec
add
jnp
jl
rolb
inc
add
push
sti
add
mov
cwtl
mov
add
movsl
push
test
add
add
push
stos
mov
xorb
add
mov
in
dec
jno
or
inc
add
clc
cltd
enter
jbe
mov
imul
add
pushf
std
push
dec
xchg
cmc
repnz
and
xchg
inc
lcall
add
roll
adc
cmp
xchg
aad
mov
dec
xchg
lods
inc
xor
mov
repz
enter
lahf
xchg
lea
mov
ljmp
adc
stc
fstps
daa
mov
jle
in
and
in
das
lret
mov
dec
xor
js
loopne
jecxz
pop
dec
scas
aad
std
imul
xchg
dec
jnp
xorl
loop
mov
popf
adc
das
fcmovnbe
movsl
mov
jge
pop
and
xchg
aad
lea
xchg
testb
lret
insl
push
add
lods
jns
cmpsl
add
mov
das
push
cld
mov
push
lret
js
hlt
mov
dec
movsl
and
aaa
iret
insl
pop
mov
mov
mov
jne
aam
add
es
and
xchg
mov
push
sub
xchg
push
daa
ljmp
std
lods
clc
xchg
xor
sbb
xchg
sub
addr16
jnp
int3
or
cltd
cld
fsubp
test
sbb
jnp
jmp
call
xchg
xor
sbb
xchg
out
cmp
out
xor
add
cmp
in
and
xchg
or
xchg
sub
loope
mov
shl
outsl
mov
jbe
push
ja
loopne
dec
sub
inc
cmp
mov
fwait
pop
sarb
jne
cmp
out
mov
out
and
jns
and
in
out
lds
cli
sahf
mov
mov
bound
jp
pop
jne
test
mov
xor
or
in
cli
pusha
mov
aas
mov
push
add
mov
xchg
mov
cld
sbbl
outsl
out
outsb
jnp
jo
sub
les
jo
push
mov
clc
insb
repz
jnp
stc
jle,pt
xlat
or
xor
iret
sarb
mov
subl
push
stos
xchg
rcrb
fs
inc
stos
inc
fs
mov
cmpsb
sbb
popa
inc
imul
inc
scas
das
inc
rol
xchg
mov
push
mov
out
imul
xchg
and
cmp
cmp
aaa
adc
inc
or
incl
inc
adc
pop
dec
push
movsb
fimuls
lret
mov
iret
cmp
mov
add
es
fstpt
fnstenv
cmp
jbe
bound
enter
daa
add
cmp
or
xchg
sub
testl
test
movsl
popf
cs
and
mov
test
popf
jge
inc
sbb
xor
lcall
pop
je
test
cmc
inc
loope
push
mov
fnstenv
or
push
fcmovnu
andb
sbb
pop
adc
inc
repz
jnp
scas
int
jne
sub
inc
mov
push
cltd
lcall
pop
fmull
jb
sub
jnp
push
mov
aaa
jg
push
out
mov
mov
mov
mov
pop
push
rcrb
mov
push
dec
je
jecxz
fmul
movsb
push
sub
test
mov
fs
sbb
sti
sahf
sbb
mov
outsl
and
push
pop
stc
out
or
mov
imul
inc
lods
sarl
and
or
cli
jge
add
icebp
push
jmp
or
into
mov
gs
loopne
aas
rcrl
into
dec
adc
xlat
shrl
jecxz
lock
shll
cmp
add
mov
push
scas
jl
arpl
sub
inc
shlb
test
psubq
dec
push
fucomp
aad
out
into
nop
mov
in
inc
inc
shll
fld
gs
dec
xchg
repz
lea
call
dec
imul
adc
xchg
pushf
sbb
loope
dec
inc
test
int3
inc
pop
and
aas
into
daa
xchg
jb
stos
push
je
inc
or
sbb
sbb
adc
mov
mov
pop
orl
xor
fnclex
fidivrs
pop
popa
lock
bound
cmc
mov
xor
push
and
ja
rcr
stos
testb
in
xor
dec
test
and
ljmp
cld
mov
daa
lret
out
jmp
aad
xchg
and
rcr
jle
stos
insl
and
xchg
push
mov
bound
aam
pmaxsw
jecxz
jecxz
pop
in
push
call
inc
je
popa
test
lods
arpl
arpl
jae
jl
push
imul
push
ja
xor
testl
sbb
dec
push
fnstenv
test
int3
int
test
push
or
xchg
cltd
ret
push
add
out
dec
dec
call
xorl
inc
pop
adc
rcrl
adc
fcmovb
es
xor
ja
hlt
mov
cltd
jbe
rcll
or
orb
mov
and
ljmp
mov
inc
imul
mov
outsb
jns
pop
aad
and
pusha
mov
xchg
mov
xchg
mov
jp
cltd
push
mov
or
mov
mov
lods
in
xchg
frstor
dec
mov
xchg
daa
mov
clc
xchg
push
xorb
sbb
popf
xchg
mov
mov
add
lds
or
sahf
insb
pop
roll
jl
xchg
jle
mov
adc
clc
hlt
ret
lcall
jb
inc
fcoml
jae
in
push
outsb
scas
sbb
int3
or
out
not
inc
sub
fisubl
repnz
xor
dec
jbe
xchg
jl
adc
sbb
popf
ja
repnz
das
sbb
arpl
shll
sbb
mov
scas
or
divl
add
into
int3
rorl
jle
jp
test
mov
in
xchg
cmp
insb
scas
test
test
cmp
out
push
test
xorb
repz
loopne
dec
enter
daa
add
mov
test
in
bnd
jl
mov
lea
push
test
and
lahf
mov
scas
cld
test
push
je
cmpsb
sbb
repz
sarl
stos
pop
mov
xchg
pusha
adc
xor
mov
cmp
push
rcl
inc
or
int
ret
lds
sbb
or
lods
xor
push
push
mov
ds
int
ss
sub
jbe
lcall
pop
fdivrl
leave
dec
outsb
lret
dec
cld
test
test
add
xchg
mov
mov
ja
and
mov
cs
mov
lret
jl
sbb
dec
mov
fwait
or
mov
jle
xor
fstps
add
shl
std
cs
fs
dec
push
fistpll
lods
mov
jb
out
ds
mov
push
xor
dec
pop
cmp
xchg
popa
or
cmpsb
cmp
lahf
rcll
es
jmp
and
fsubrs
push
push
adc
jno
add
add
pop
in
mov
mov
xlat
mov
lahf
xor
in
adc
std
ja
sbb
enter
lcall
inc
pop
jge
frndint
test
repz
jg
hlt
call
call
push
lcall
mov
cs
inc
das
lods
push
inc
and
out
aas
insl
mov
dec
and
je
std
dec
jecxz
pop
cs
mov
cli
std
mov
dec
cwtl
pop
aaa
add
xor
mov
dec
leave
aam
fistl
repz
xchg
mov
movsb
arpl
mov
fidivrs
orb
jmp
data16
lods
mov
testb
testb
lock
add
fwait
mov
fnstsw
dec
cld
loope
or
mov
xchg
pop
leave
push
add
gs
sub
mov
dec
jb
ret
jb
fidivs
fst
lods
idiv
jl
outsl
xchg
rcrb
ljmp
pop
lods
into
mov
sub
mov
mov
paddw
add
std
cltd
push
xchg
test
mov
mov
fidivl
mov
mov
test
or
lcall
or
mov
pop
sub
stos
sub
push
out
cld
dec
faddl
or
pushl
lret
inc
cld
or
dec
dec
xor
sub
xchg
mov
dec
pop
in
rcl
add
inc
push
xchg
xchg
clc
iret
jne
jb
mov
bnd
jo
cld
bound
or
inc
in
scas
out
xchg
fbld
pop
mov
add
sub
orb
jp
mov
mov
adc
mov
adc
in
add
hlt
xor
mov
cltd
xchg
cli
mov
pop
xchg
and
xorl
and
mov
push
mov
stos
aaa
outsl
js
and
push
sub
stc
push
in
ret
or
iret
hlt
and
ret
mov
inc
out
into
jae
jne
push
xor
or
imul
insb
xchg
ss
sbb
pop
test
or
sub
jb
faddp
das
push
sti
mov
cld
adc
hlt
add
leave
inc
aaa
int
jge
insl
sbb
push
inc
or
inc
adc
outsb
mov
int3
mov
inc
jp
push
into
scas
xor
imul
scas
mov
dec
xor
int3
movsb
jo
inc
push
sarl
in
or
enter
daa
add
inc
jno
xchg
push
or
enter
cmc
and
inc
push
iret
es
cmp
fldl
imul
lock
call
out
ds
repnz
push
jg
loope
xchg
out
sub
addr16
cmp
iret
mov
adc
push
popa
rorb
pop
push
sbb
inc
and
dec
xchg
mov
add
int
sub
loop
push
mov
adc
sub
push
outsb
cs
je
fwait
adcb
lock
jge
mov
fdivs
enter
aad
cmp
leave
xor
mull
outsl
lret
inc
shll
inc
sbb
ret
pop
xor
and
dec
loop
mov
stc
push
cs
jae
add
pop
push
nop
and
cmp
xchg
cli
jecxz
in
xor
sub
or
in
into
and
gs
loopne,pt
or
pop
inc
xchg
test
in
pop
imul
push
add
mov
sbb
leave
js
xlat
loope
gs
stos
clc
mov
jle
or
sbbb
aad
out
nop
jne
out
movsb
cmp
fnstenv
nop
inc
in
jbe
repz
inc
xchg
adc
cli
out
dec
call
addr16
push
adc
loop
add
addr16
cmpsl
pop
testl
repnz
or
fidivs
dec
inc
dec
cltd
xor
je
or
jecxz
imul
mov
je
cwtl
sbb
sti
mov
enter
shrb
fildl
lcall
ds
imul
adc
and
and
ss
jae
not
xor
dec
sahf
inc
sbb
push
mov
mov
lret
lds
jbe
fwait
inc
movsb
and
or
pop
call
negb
aam
sub
es
jbe
mov
adc
sub
rcll
mov
cmp
xchg
add
push
or
cli
subps
out
cltd
mov
dec
jnp
int3
lahf
imul
and
test
jecxz
xchg
or
pusha
pop
cmp
xchg
out
pop
pop
add
and
aas
call
fidivrs
or
dec
loop
xchg
int3
push
mov
cmpsl
enter
cmpsl
dec
dec
add
fadds
stos
push
or
adcb
xor
mov
mov
out
dec
incl
fisubrl
cmp
xchg
cs
cmc
sub
jge
push
addr16
addr16
std
sub
or
mov
mov
cmp
hlt
in
ss
aam
pusha
sub
gs
xchg
int
in
insl
hlt
cmp
sub
out
mov
popf
in
mov
out
and
add
stos
stos
push
sbb
cmp
lods
insb
xor
jl
fidivl
cmpl
push
push
xor
jne
jecxz
and
push
push
aaa
ret
lcall
inc
into
inc
repnz
jae
dec
adc
hlt
push
lods
or
in
cmc
inc
daa
fisubrs
fimull
xchg
insb
xchg
lea
sbb
xchg
push
imul
dec
scas
pop
shll
dec
rorb
mov
dec
push
add
aam
jmp
dec
out
pop
arpl
cmp
jge
xor
sbb
adc
push
xchg
testb
cmp
mov
test
orb
clc
cmp
jo
mov
scas
repz
fcomip
sarb
dec
mulb
mov
sub
scas
stc
xor
daa
incl
mov
jno
mov
jl
xor
dec
jge
test
lea
xchg
and
negl
mov
jg
push
and
cmpsb
and
mov
pop
xor
addr16
xchg
loope
pop
jns
outsl
and
cmp
orl
sar
leave
lds
cltd
pop
outsb
sbb
aad
xor
xchg
int
gs
sub
int
lcall
fmull
ret
adc
mov
mov
mov
mov
popf
mov
sbb
dec
adc
out
test
in
jge
mov
mov
mov
cmc
mov
xchg
xor
jge
mov
push
sar
add
movsl
adc
add
gs
jge
mov
std
mov
inc
pop
out
ss
push
addl
cmp
xchg
push
or
cmc
mov
aam
push
loopne
xchg
jecxz
pop
jp
adc
movsl
ljmp
xlat
jmp
sbb
add
inc
xlat
and
sub
mov
jmp
jge
mov
ja
nop
push
inc
mov
push
inc
jle
lock
out
testl
mov
aad
icebp
lea
inc
call
out
into
pop
gs
lcall
scas
lods
cs
mov
inc
pop
stc
xchg
aas
stos
push
ss
insb
cli
dec
adc
jecxz
mov
in
add
mov
xor
xor
sbb
inc
dec
lahf
xchg
fcmovnu
outsl
addr16
rorl
xchg
lock
push
das
push
cld
jmp
pop
and
and
adc
ror
adc
notb
and
inc
cmpsl
inc
out
or
icebp
mov
jle
xor
call
and
mov
pop
not
or
aam
xor
ret
nop
jl
es
frstor
mov
clc
repnz
xchg
xchg
push
xor
ljmp
enter
jno
mov
arpl
push
out
pop
btc
jp
fcom
push
test
xor
mov
test
push
outsl
in
xchg
or
es
or
jb
out
shrl
jbe
in
sub
ret
add
aas
mulb
jb
dec
xor
fimuls
push
xchg
test
and
xchg
push
aad
iret
outsb
aad
bound
ja
inc
inc
dec
testl
or
cmp
jnp
rcll
jne
cmp
out
cs
test
jns
in
jnp
ret
rcrb
jle
push
cmp
js
fisubl
addr16
jp
sbb
loope
jb
loop
out
mov
bound
xlat
cli
out
in
or
fucomip
iret
pop
xchg
mov
mov
flds
movsb
add
popf
or
push
mov
rclb
lock
push
xor
sub
js
jle
mov
push
jp
and
mov
sbb
pop
scas
inc
pop
xchg
dec
inc
std
adc
push
mov
into
or
pop
mov
outsb
xor
xchg
in
pop
sbb
mov
scas
mov
xor
movsl
mov
mov
bound
xchg
jns
arpl
bound
sbb
pop
sbb
rcll
adc
xchg
add
in
pop
pop
jg
ficomps
mov
stos
scas
inc
xchg
cmp
cmpb
jno
loopne
aaa
outsl
push
xchg
lret
xchg
rorb
sbb
or
jl
cmp
dec
in
int
push
jo
movsl
mov
mov
push
xchg
lds
mov
test
leave
pop
inc
inc
pop
and
cmpsb
movsl
mov
pop
ss
js
mov
inc
push
fisubl
sub
lods
ret
cmp
xor
in
movsl
dec
rcl
inc
jmp
ljmp
sbb
add
addr16
addl
xchg
dec
sub
cltd
roll
mov
dec
bound
fdivrl
into
int
hlt
test
test
inc
add
ret
mov
mov
dec
pop
xor
push
js
and
cmp
fisttps
popa
lret
add
loope
sub
pop
xor
cmc
jl
out
xor
cmp
outsl
sahf
fwait
or
stc
ret
mov
and
movsl
js
ss
mov
mov
xchg
out
clc
in
dec
xor
xor
or
or
cmc
pop
into
dec
std
xor
test
and
data16
mov
imul
sbb
data16
lea
aas
xchg
xlat
pop
scas
mov
xlat
loopne
mov
push
lcall
loopne
repz
insb
dec
nop
sub
dec
bound
cwtl
fldenv
icebp
dec
loop
cwtl
dec
lea
xor
gs
pop
sbb
adc
jbe
jmp
mov
push
inc
fistpl
aas
dec
ret
int3
mov
add
cmp
push
cld
mov
leave
ret
cwtl
mov
stc
mov
and
incl
mov
int3
pop
in
scas
movsb
mov
sahf
out
into
inc
inc
das
ss
xlat
mov
adc
cwtl
and
inc
popf
rcrl
clc
inc
negb
sub
call
cmpsl
std
gs
mov
bound
cld
rolb
mov
inc
and
ds
pop
es
rcr
mov
sub
stos
sbb
scas
xchg
inc
ret
pop
popf
mov
fisttpll
hlt
clc
sub
addr16
popa
xorb
mov
leave
mov
mov
bndldx
mov
rcrb
in
bound
jmp
test
xchg
cmpl
lds
pop
nop
xor
call
add
pop
push
inc
call
ss
xor
int3
aam
test
or
xchg
dec
cmpsl
mov
sbb
imul
inc
cmp
xchg
lods
or
iret
cs
dec
jle
push
jbe
outsl
jne
mov
mov
jae
out
or
sub
jns
mov
test
dec
add
jecxz
jb
jae
inc
addr16
jmp
jp
mov
mov
pop
js
dec
mov
mov
fisttps
pushf
pop
jmp
adcl
out
int3
lret
popf
xor
add
sub
stos
nop
ds
insb
or
stos
jle
dec
mov
rorl
adc
fwait
pop
mov
movsb
mov
ds
mov
jp
insl
or
fimull
mov
fidivl
pop
xchg
cmp
fildl
xchg
scas
push
mov
or
or
mov
cmc
mov
daa
hlt
loop
shll
pushf
sub
jge
insl
inc
sbb
xchg
getsec
iret
cwtl
push
add
xor
ss
sbb
ds
xchg
jl
pop
scas
and
adc
insb
pop
aam
adc
push
rolb
in
jl
xlat
enter
daa
std
dec
pusha
cmp
jno,pn
test
sbb
dec
pop
push
mov
push
fwait
sbb
mov
lahf
xor
lret
test
xchg
loope
inc
out
pusha
cmpsb
sub
pop
pop
dec
idivb
test
pop
scas
mov
push
push
lea
sub
movzwl
inc
xor
pop
or
adc
scas
xlat
loopne
dec
dec
sub
stos
flds
add
dec
test
push
jne
dec
mov
mov
cltd
pusha
mov
lcall
push
fsubl
ret
sub
lods
and
push
and
out
fstpt
cs
mov
push
mov
xor
push
jge
loope
out
lret
fdivr
loopne
negl
and
js
jno
pop
mov
inc
xchg
fnstenv
xor
das
rep
jge
xor
dec
int
stc
jns
mov
adc
and
hlt
andnps
jmp
add
lock
sbb
fdivrl
mov
jl
pop
xor
movsb
cmp
loope
or
stc
in
gs
loope
xchg
pop
pop
popf
push
adcb
repz
imul
xor
sub
pop
sbb
jp
xlat
sahf
les
sub
push
mov
mov
nop
incb
mov
aad
lds
dec
rcl
inc
movsb
xor
xor
or
lret
lret
clc
cmp
xchg
adc
pop
lret
mov
out
mov
jmp
mov
rorb
or
aas
jmp
inc
icebp
dec
inc
cmp
push
jecxz
xor
shrl
push
lret
dec
ss
mov
lods
pushf
mov
imul
dec
jne
and
pop
nop
addb
fs
sub
sub
adc
sbb
pcmpeqb
lret
mov
negb
adc
cmpsl
cld
mov
icebp
cmp
lret
adc
fimull
inc
mov
clc
pop
inc
mov
mov
xor
inc
je
scas
add
es
clc
push
push
xor
xchg
jg
cltd
push
int3
lods
jp
add
in
xchg
jmp
push
popf
cmpsl
mov
jns
roll
leave
adc
cltd
inc
sub
test
ljmp
push
lods
xchg
jnp
push
inc
dec
test
fcmovne
xchg
sbb
dec
xchg
rcrl
cmpsb
pop
cmp
cld
stos
call
lock
add
jne
cmp
adc
mov
xor
movsl
pop
mov
loop
mov
pop
fcoms
adc
fucomp
mov
or
xor
loopne
sbb
jne
xchg
cmp
in
shrb
mov
cmp
fldenv
nop
xchg
sbb
mov
cmp
sub
outsb
cmpsb
addr16
repz
dec
fnsave
cmp
mov
push
es
popf
repnz
in
lahf
push
pusha
pusha
xchg
mov
sub
test
jmp
dec
lahf
xor
stos
pop
lds
xchg
imul
orl
jg
cmp
or
out
mov
fidivrl
or
popf
iret
jo
call
pop
hlt
fadds
scas
jae
gs
push
cmp
into
xchg
push
movsb
sbb
xchg
xchg
and
sbb
aaa
push
les
lds
or
mov
pop
xor
cmp
test
inc
inc
cmp
lods
sbb
popa
or
cli
imul
lret
int3
push
pop
pop
gs
jg
loope
xchg
xor
xlat
sbb
add
stos
and
mov
movsb
pushf
lea
jbe
lods
and
arpl
inc
enter
daa
cld
xor
cmp
and
jl
leave
sbb
sahf
out
ss
scas
movsl
push
push
lahf
push
cmc
nop
push
sbb
clc
test
pop
mov
sbb
test
js
loopne
pop
out
stos
xor
add
in
mov
push
cmp
xor
jle
xor
rorb
add
adc
stos
sbb
cmpsl
or
xchg
and
cmp
or
pop
sub
adc
fiaddl
fs
mov
and
cmp
adc
jno
mov
outsl
addb
in
jg
bound
mov
mov
mov
xchg
jmp
adc
push
in
scas
cmp
mov
sbb
lret
faddp
movd
inc
fcoms
sbb
popf
loop
or
fidivs
mov
daa
outsl
pop
iret
dec
stc
xor
fs
into
pusha
adc
adc
cs
mov
jmp
out
or
xor
push
in
cmp
movb
test
into
push
jmp
cmp
sub
dec
cmp
xor
popa
imul
out
add
xor
mov
out
fstpl
sub
adc
sti
sarb
sub
orb
pop
inc
mov
xchg
les
mov
pop
xchg
push
popf
out
lea
push
adc
arpl
adc
mov
fndisi(8087
cs
pop
les
xor
cmp
shr
adc
test
cmpsl
jb,pt
add
je
andb
in
cmc
std
cli
scas
cmp
insl
mov
mov
pop
test
dec
pusha
gs
rcll
xor
mov
lea
test
das
hlt
mov
jle
cltd
and
movsb
inc
shll
lds
mov
loop
sti
aaa
cs
adc
cld
mov
sub
cli
and
je
out
fs
rolb
aam
dec
jae
cmp
or
xchg
jmp
clc
mov
pop
mov
stc
mov
lods
in
repnz
andps
xchg
sbb
push
or
fsub
pop
add
adc
test
jecxz
mov
pop
push
push
outsl
fsub
dec
mov
add
mov
enter
out
pop
out
sti
stos
xlat
dec
inc
out
jmp
out
push
in
add
popf
xlat
xor
mov
xor
pop
adc
in
inc
mov
xchg
stos
cwtl
ja
ds
or
or
outsl
xlat
fwait
test
mov
jne
xlat
cmp
lret
pop
jb
es
jns
inc
sahf
in
shrb
xchg
push
ds
in
xchg
sub
imul
xor
sarb
arpl
inc
mov
fcoml
pusha
sti
fisttps
repnz
sbb
jmp
pop
cmp
out
mov
popf
xorl
push
jge
mov
and
fbld
jle
pop
mov
xchg
iret
iret
xor
inc
icebp
push
pop
sub
push
jae
dec
or
add
loope
outsl
adc
mov
xlat
add
sbb
rol
mov
aam
in
nop
lds
dec
inc
mov
fwait
xor
hlt
js
adc
sti
faddl
inc
inc
jnp
jge
adc
clc
mov
or
cmp
int3
push
mov
pop
xchg
adc
test
jo
cltd
aad
jecxz
adc
cmp
out
sti
movsb
daa
adc
push
pop
pop
std
jbe
jnp
in
dec
xchg
mov
xchg
fs
sti
sahf
inc
cmp
loop
jl
dec
dec
dec
cmp
dec
movsl
into
nop
int3
and
jl
lahf
jae
xor
mov
cmpsl
daa
movsb
push
sub
ja
add
std
xor
stos
xchg
popf
js
into
jl
sub
test
ret
sub
dec
aas
cmp
xchg
dec
adc
gs
mov
sbb
sbb
xor
push
mov
int
jb
sub
stos
cli
lcall
push
fdivrl
mov
outsb
sbb
jne
sbbb
icebp
mov
loope
mov
sbb
stos
and
add
out
add
sbb
rcr
mov
lret
iret
shll
mov
sahf
lea
push
xor
push
inc
outsl
cmp
loop
push
mov
out
push
sub
xchg
xchg
or
ss
subb
roll
cli
loop
in
shr
push
cmp
jg
or
movsb
into
icebp
int3
leave
gs
loopne
imul
fildl
adc
rcl
imul
std
add
fsubs
lcall
lock
xlat
sbb
cmc
sub
jbe
mov
xchg
sbb
decb
sahf
aad
movsb
cmp
mov
push
xchg
inc
lret
flds
out
and
jle
loope
xchg
jmp
es
loop
pop
pop
xor
dec
adc
aad
jmp
ja
cs
sbb
inc
pop
mov
inc
fnstsw
jb
icebp
xor
pop
imul
jecxz
mov
mov
xchg
std
mov
sub
mov
sub
sub
dec
decb
fldt
orb
mov
imul
hlt
cmp
and
shl
roll
int
insl
mov
cmpsl
cli
xchg
mov
out
xor
jecxz
fxch
lock
icebp
and
fs
subl
rclb
ja
and
bnd
int3
xchg
mov
lock
rcr
mov
mov
aaa
ljmp
in
push
add
mov
fs
cmp
sbb
aaa
movsb
addb
inc
jl
mov
loop
push
sbb
mov
jae
push
xor
mov
int3
mov
adc
ds
daa
ror
pop
pop
xchg
mov
stos
xchg
or
dec
jnp
add
stos
out
out
out
push
pop
xor
aam
xor
mov
call
sbb
push
ja
out
jle
ret
pusha
outsb
inc
bnd
or
jge
fwait
xlat
dec
dec
push
pop
je
jne
jle
mov
cmpsl
sub
stos
add
bound
clc
xchg
in
rorb
xchg
mov
adc
cwtl
xor
or
addr16
jo
cld
out
mov
sbb
mov
out
in
lds
pusha
xchg
cmp
iret
xchg
in
push
inc
xchg
loop
jnp
nop
mov
out
ficoml
test
or
mov
popa
inc
and
enter
aaa
pushf
jle
rclb
push
xchg
adc
in
repz
jne,pn
ret
adc
sti
mov
sub
jae
je
push
ret
insl
adc
push
mov
loope
xchg
inc
add
imul
xchg
lds
out
mov
out
cmp
leave
daa
dec
cltd
hlt
ret
ljmp
dec
sub
ficompl
sbb
jg
or
mov
pop
int3
inc
cmp
pop
ret
pop
scas
fisubs
mov
lahf
jo
ret
imull
mov
rolb
movsb
mov
push
push
lods
cs
mov
mov
orb
cli
fwait
cmp
jge
jno
imul
dec
test
addr16
cld
iret
sub
pop
mov
loopne
sarl
test
cmc
jae
inc
xchg
mov
mov
mov
js
push
lahf
pop
insb
sub
loope
jo
sub
sub
push
jnp
les
adc
inc
add
cmp
stos
sbb
jecxz
mov
mov
mov
adc
int
jo
sub
das
js
bound
lock
mulb
push
fsubl
bound
mov
mov
cmpb
cmpb
push
mov
notl
mov
push
ret
and
xlat
jb
ljmp
fsubrs
ret
add
lret
pop
sarl
inc
sbb
sar
xor
or
inc
xor
loop
out
stc
sahf
rcrb
mov
inc
adc
insl
fs
pop
lods
or
xor
fldcw
add
adc
push
cmp
or
or
push
into
aam
dec
imull
sbbb
jno
or
addr16
inc
adc
fmuls
sbb
sub
push
sub
jle
in
add
sub
pushf
imul
sub
dec
ficoms
icebp
fnstcw
and
cs
repz
sub
push
stos
push
call
popa
cli
pop
pop
in
rcll
in
mov
pushf
xor
sub
stc
push
roll
xchg
popf
inc
fisttps
aas
pushf
push
jb
adc
dec
je
aaa
daa
jecxz
pop
mov
std
dec
and
cwtl
jp
std
mov
pop
xor
fstps
add
imul
pop
lock
mov
or
pop
das
mov
pop
mov
in
mov
inc
rcll
mulb
insl
and
jl
cmpsl
stc
sbb
mov
mov
loope
lret
pop
shrb
in
clc
cmp
pop
subl
stos
sbb
pop
mov
movsl
push
sub
sub
aam
push
mov
es
sub
clc
sbb
and
fisttps
popa
ficomps
xchg
push
mov
push
push
lock
xchg
imul
jmp
js
adc
cmc
push
cmc
mov
dec
mov
inc
or
icebp
ffree
shll
stc
mov
xchg
stos
mov
and
mov
addr16
sahf
outsl
decl
push
fmull
popa
lcall
pushf
cmc
outsl
mov
jmp
jno
adc
mov
ja
and
dec
mov
cmc
inc
mov
add
xchg
pop
fwait
push
imul
fildll
mov
loopne
out
mov
cmpsb
jns
push
xchg
in
sub
xchg
or
mov
push
test
mov
addr16
and
mov
sbb
mov
sbb
dec
inc
mov
in
out
xchg
pusha
xor
xor
aaa
push
inc
xchg
lods
outsb
rolb
xor
popf
iret
xlat
idivb
sti
mov
fwait
and
pcmpeqw
xchg
jnp
push
stos
jle
cmp
push
fstl
std
iret
lea
stos
pop
cltd
or
inc
xor
dec
jae
loop
push
xchg
or
pop
xor
fidivrl
and
push
imul
inc
lds
in
and
dec
repnz
jp
leave
sahf
fucomi
hlt
push
sbb
sbb
test
sbb
jnp
fsubrs
lret
out
mov
int3
sub
pop
fmulp
fistpll
jo
add
scas
mov
mov
out
movsb
cmp
inc
xor
jno
in
sbb
inc
enter
daa
stc
add
cmp
bound
rol
jl
rcll
pop
push
xchg
push
fistps
jno
fdivl
loope
clc
xlat
pop
lahf
mov
xchg
push
xchg
sbb
dec
push
rorb
cltd
nop
cmpsb
xor
negb
arpl
js
data16
pop
stos
scas
or
sbb
loope
adc
sub
cmp
sub
adc
sbb
xchg
pop
dec
nop
orb
sbb
sub
inc
push
js
int
push
subb
inc
push
pop
loope
sub
dec
aam
fcoml
mov
xchg
outsb
jecxz
test
cs
adcb
jg
adc
mov
inc
adc
shll
cmp
out
cmp
out
adc
lcall
rcl
inc
mov
rclb
xchg
sahf
shrl
cmc
pop
je
xor
mov
or
push
subl
adc
adc
jnp
repnz
cli
mov
xchg
push
out
jle
cli
dec
xor
xor
insl
fisttpll
push
jb
into
mov
lds
or
pop
sbb
rclb
test
out
inc
adc
mov
add
sbb
leave
inc
sbb
data16
xlat
lcall
mov
imul
decb
adc
nop
jb
testb
enter
out
mov
mov
cmp
repz
dec
xchg
addr16
test
orl
pop
xchg
lcall
inc
fdivrl
pusha
jmp
jae
cs
jge
inc
addr16
incb
xor
gs
cmp
sub
mov
and
int
pop
std
out
mov
cwtl
xor
out
mov
pop
lock
fisttpl
dec
mov
arpl
das
xchg
mov
mov
mov
sub
shll
aaa
sbb
adc
cmpsl
clc
push
repnz
xchg
and
cmp
lret
into
dec
sub
pusha
aaa
sbb
pop
shll
sub
in
aam
pop
xor
ljmp
fisttpll
mov
push
jmp
inc
ljmp
xchg
lods
es
mov
js
push
xchg
repnz
ret
pmaddwd
push
add
test
test
xchg
mov
jno
push
mov
aaa
in
test
jmp
pop
sbb
pop
pop
out
mov
adc
incb
loope
sbb
sub
jae
pusha
mov
cmp
bound
inc
stc
mov
mov
les
sbb
cli
dec
test
lret
jl
jmp
push
movsl
cmp
pop
mov
sub
inc
filds
or
push
or
add
add
mov
mov
sub
pop
lock
cmp
bound
mov
xchg
pop
inc
dec
sub
in
jl
pusha
int3
ss
fildll
dec
dec
jmp
js
subl
dec
popf
neg
fstpt
cmp
popf
stos
iret
push
aaa
and
or
dec
jnp
cmpsl
jle
xchg
xor
lods
and
loopne
fcmove
in
add
dec
pop
rol
addr16
aas
add
xchg
push
push
dec
outsl
arpl
inc
and
lock
dec
sbb
push
jns
orb
stos
repnz
rolb
lea
xchg
jmp
leave
adc
fwait
mov
inc
dec
in
xchg
jge
xchg
arpl
xchg
arpl
mov
add
pushf
int3
push
mov
push
fisubrs
or
jo
push
jp
orb
in
mov
movsb
enter
dec
lahf
sub
lcall
js
frstor
clc
std
cmp
je
cmp
xchg
jo
push
ret
movsl
jecxz
jno
xchg
and
lahf
shr
xor
xor
or
inc
inc
mov
cwtl
cmpsb
mov
pop
pop
and
jge
repnz
ljmp
loope
fldt
cmp
test
xchg
add
shl
xlat
in
and
stos
sbbb
xor
add
mov
xor
pop
sbb
int
pop
in
sub
repnz
pusha
cmp
lcall
pop
fdivrl
sub
test
inc
jg
pop
es
rcr
xchg
adc
or
jmp
dec
push
ljmp
stc
fsubs
daa
push
lret
icebp
shrl
mov
pop
mov
sahf
jbe
or
es
aam
fsubs
loop
movsl
push
stc
or
es
sub
jg
sbb
cmp
hlt
mov
dec
hlt
out
pop
aam
jnp
enter
lds
mov
into
lcall
loopne
popa
jns
cmp
adc
imul
jno
add
pop
clc
data16
mov
sbb
mov
out
fwait
sub
jp
in
or
sti
cli
es
mov
sub
inc
pusha
pop
nop
dec
clc
fisttps
sub
inc
add
xchg
les
repz
rcll
push
inc
inc
call
pop
dec
int
dec
lahf
sbb
lcall
jmp
push
test
mov
les
aas
add
dec
jb
testl
je
cmp
jecxz
jnp
rolb
aad
lock
mov
or
xor
rcrl
mov
in
mov
sbb
lock
fsubrs
jo
aaa
mov
pop
adc
and
push
push
shl
in
imul
lcall
jbe
and
mov
insb
popa
into
cld
fs
lret
cmp
jle
and
loopne
or
loopne
cli
rcl
aam
sub
inc
inc
aam
scas
push
ret
jns
frstor
jns
or
xor
clc
ffree
xchg
or
ljmp
cmp
in
mov
cmp
xchg
andps
faddl
sub
or
daa
mov
popa
push
jnp
jge
pop
out
iret
test
pop
sbb
push
ret
xchg
ror
fwait
mov
stos
xchg
push
or
ja
syscall
jo
dec
add
cmp
xor
inc
daa
xor
and
mov
icebp
movsb
stos
mov
jg
add
adc
push
inc
mov
add
lahf
fwait
fs
jno
dec
nop
pop
jne
lret
fnstenv
inc
cmp
jb
cmpb
push
xchg
cmpsb
mov
xor
dec
or
sahf
addr16
xlat
push
jp
xchg
dec
mov
xchg
mov
stc
or
dec
or
mul
or
pusha
rcrl
es
xchg
or
and
repnz
cmpl
sbbb
and
push
jns
fildll
repnz
xchg
insb
mov
jnp
rolb
push
imul
mov
push
popa
ret
push
pop
pop
sbb
inc
dec
out
and
mov
push
or
fisttpll
mov
rcr
fisubl
fisubrl
mov
adc
jo
dec
lds
jo
shlb
jecxz
roll
cli
leave
mov
jae
movsb
jno
arpl
lea
inc
push
sti
mov
sbb
jp
dec
or
add
mov
test
adc
stos
xor
sahf
mov
push
and
insb
cmp
cmp
cmp
jmp
out
or
jae
iret
daa
idivl
cmp
dec
xor
dec
cmc
mov
movsl
cwtl
add
orl
mov
cmp
lahf
push
push
cli
outsl
inc
inc
or
cmpsb
cmp
out
sub
inc
subl
push
loope
loopne
mov
fs
sbb
rcl
loopne
popl
test
sbb
dec
fwait
add
xchg
pop
xor
mov
fcompl
jecxz
jnp
cmpsb
pop
ja
xor
sub
addr16
or
mov
insb
outsb
test
ja
orb
loopne
pop
jb
mov
push
mov
push
in
and
sbb
repz
mov
pop
fxch
negl
movsl
cmp
adc
inc
aad
fistpl
jl
int3
sahf
sbb
cli
xor
outsw
mov
in
mov
lret
push
sar
adc
das
push
ss
outsb
lods
sar
mov
mov
aam
scas
mov
sbb
int
into
jge
pusha
gs
or
xor
outsb
pop
push
dec
lds
dec
cld
jmp
and
adc
xchg
test
cmp
enter
adc
fsubl
addr16
mov
push
in
inc
pop
sbb
test
sub
aad
adc
dec
sti
jl
inc
push
and
shl
jg
mov
in
mov
inc
call
fidivrs
sbb
repnz
pushf
xor
sub
out
pop
and
sub
add
mov
mov
dec
enter
dec
cmp
jecxz
out
lahf
rorl
std
cmp
or
mov
test
mov
dec
imull
rcrl
ret
cmp
das
dec
adc
mov
cltd
shl
roll
dec
imulb
sub
dec
jno
push
cmpsl
testb
sbb
icebp
inc
les
lret
lods
xchg
and
jnp
cltd
pop
pushl
movsb
sub
inc
mov
cmp
ret
or
add
cld
lock
fstpl
and
lret
xchg
dec
ds
ljmp
push
lods
cld
pop
mov
mov
int
push
mov
sarl
cltd
nop
mov
test
inc
test
adc
push
ds
lret
dec
mov
push
sbb
or
sub
mov
dec
stos
sbbb
fiaddl
lret
add
pop
daa
cltd
ljmp
xor
pop
pop
or
push
xchg
xor
cmp
hlt
leave
inc
mov
cmp
les
aad
dec
mov
mov
fwait
xchg
and
jmp
pushl
add
addb
add
inc
sbb
sbb
sbb
xor
aaa
or
mov
jp
mov
mov
repnz
jle
dec
out
mov
push
pusha
add
xlat
xchg
cmp
adc
xchg
push
xor
or
out
out
lock
stc
into
push
mov
adc
and
jbe
insb
divl
sub
push
mov
out
adc
cmpsb
push
pop
sbb
push
lret
pop
jae
ret
dec
push
iret
inc
and
aaa
push
inc
sahf
addb
push
pusha
daa
xchg
pushf
push
sbb
imul
scas
shl
add
sarb
imul
push
leave
add
hlt
out
fwait
lret
arpl
inc
inc
push
jge
jge
inc
enter
fs
or
mov
lods
push
inc
sbb
in
lea
fidivs
das
push
jo
xor
scas
lods
cmp
or
ret
mov
mov
jmp
dec
jle
int
cli
enter
daa
idivb
cmp
ret
and
rorb
hlt
push
mov
scas
movsl
icebp
mov
and
mulb
push
or
jecxz
push
and
xor
test
cmpsb
mov
dec
lds
and
push
data16
cs
sub
jmp
pop
ds
xchg
jp
and
cmp
loop
in
addb
sub
flds
xchg
xor
in
enter
sub
repnz
sub
add
pop
pop
push
push
mov
fcoml
push
sub
inc
outsb
or
ja
mov
les
mov
pop
clc
mov
and
and
xchg
mulb
addr16
pop
pop
fdiv
xlat
cmpsb
stos
lret
sub
cltd
xlat
insb
mov
sbb
sahf
mov
addb
mov
dec
outsl
xchg
lret
dec
xor
stc
jp
imul
lods
rorb
mov
xchg
out
cwtl
jp
loope
dec
xor
mov
pusha
mov
gs
mov
iret
mov
cmp
and
stc
imul
icebp
inc
add
data16
jne
sbb
pop
sbb
sub
clc
mov
lods
jge
sti
pop
repnz
clc
ljmp
add
ja
pop
rcl
inc
sub
fstps
cmp
pop
stc
push
repz
mov
rorl
clc
dec
pop
lods
or
mov
loop
dec
inc
cld
pushf
fldl
aad
aad
mov
inc
cld
xchg
inc
dec
mov
mov
dec
aas
mov
je
nop
jecxz,pn
cmpsl
sahf
mov
std
in
cld
cwtl
ss
lret
and
pop
sbb
dec
loop
cmpsl
fistl
pop
rcrl
in
gs
mov
cltd
das
cs
sbb
mov
and
rcll
mov
daa
dec
insb
xor
dec
in
inc
icebp
sbb
cld
mov
dec
or
jns
jno
jne
out
mov
push
add
shlb
jae
imul
fcmovnbe
push
pop
add
xchg
xor
fldl
addb
stos
sbb
push
lods
addr16
fnstcw
loope
ljmp
adc
movlps
mov
test
jmp
push
add
or
or
xor
movsl
xchg
js
sarl
insl
pop
call
jl
out
cmp
xchg
iret
add
daa
int
or
outsl
xor
or
mov
cmp
mull
mov
cmc
xlat
or
aaa
sbb
adcb
in
lea
xchg
xor
mov
mov
mov
lea
add
pop
pop
jns
xor
xchg
inc
mul
mov
xchg
xchg
dec
push
add
push
fwait
data16
aaa
les
gs
int3
mov
mov
dec
rcrb
in
jnp
pusha
popf
inc
adc
xchg
or
mov
xchg
fld
mov
aas
pop
pop
popf
imul
xor
lret
push
negl
stos
sub
lea
and
sti
insb
bound
xchg
jle
out
push
stc
push
les
jno
dec
iret
or
xor
mov
sub
inc
pusha
cld
push
jae
inc
insl
push
xchg
xlat
gs
mov
dec
inc
sbb
ret
repz
cmp
xor
imul
scas
ss
aas
xchg
inc
rcrb
mov
lea
leave
jp
push
cmp
adc
push
std
push
inc
pop
jae
jge
repnz
les
ret
aaa
dec
aad
lahf
lret
jmp
inc
int3
xlat
xor
pop
scas
loop
ficoms
jge
ljmp
scas
sbb
cmpsl
cmp
adc
inc
mov
xchg
into
xchg
in
mov
mov
imul
xorl
lret
rcll
sub
movsl
clc
and
fs
lahf
sub
mov
test
in
idivl
cmpsb
inc
int3
cli
pop
xchg
mov
mov
cmpsl
in
sbb
inc
mov
sub
ljmp
jae
pop
adc
xchg
push
popl
testl
ret
dec
ret
xor
jnp
bound
xor
jno
dec
pop
fnsave
lcall
lods
fdivrl
xor
outsb
outsl
inc
lret
test
lds
pop
cmp
add
mov
lret
dec
mov
mov
and
sbb
stc
jp
cmp
shlb
notl
js
xor
rcrb
test
pop
mov
jnp
xorl
lcall
loope
fdivr
xor
adc
add
fldt
enter
aam
mov
adc
jnp
fcoml
aas
or
cmp
into
inc
sub
push
mov
adc
dec
subb
rclb
rolb
out
adcw
push
test
xlat
xchg
push
sti
sub
pushf
and
pop
je
sti
pop
jle
sbb
jnp
test
sub
fsts
aam
repz
into
adc
push
push
outsb
call
fsubl
push
adc
out
ljmp
scas
popl
jg
inc
data16
jb
shll
loopne
xchg
jecxz
mov
cmp
mov
push
cwtl
and
inc
mov
jb
mov
sbb
dec
int
xchg
inc
popf
jns
test
lret
mov
int3
das
or
jg
mov
scas
lret
repnz
divb
outsb
dec
ud0
inc
mov
icebp
cmc
cwtl
cld
in
lret
mov
mov
pop
in
xor
mov
bound
cmp
mov
fwait
aam
stos
cmc
ret
es
add
xor
ljmp
stos
lods
rcrb
clc
mov
add
xchg
xchg
push
mov
orb
lods
mov
dec
push
sub
les
lea
test
aaa
filds
jo
cltd
rcl
sbb
stos
stos
pusha
pop
cmp
mov
in
add
in
test
jno
lods
push
fisttpll
mov
stos
xor
pusha
stc
mov
cli
outsl
fs
mov
mov
loopne
dec
jne
repnz
jl
loopne
sub
xchg
push
xor
jne
fwait
insl
mov
sub
in
je
sub
inc
in
adc
movsb
outsb
pop
sub
inc
xchg
sbb
push
ret
out
cs
push
mov
ss
nop
and
mov
fs
mov
in
in
cwtl
out
cmp
lahf
fbld
mov
jmp
movsb
lods
incl
ret
popf
xchg
fsubrp
mov
shll
and
outsb
subb
jnp
dec
scas
jle
xchg
adc
inc
add
adc
iret
push
cmpsl
enter
inc
inc
imul
push
push
loop
or
sub
outsl
push
fidivrl
inc
sbb
mov
imul
scas
cltd
out
push
shlb
mov
loopne
pop
leave
icebp
pop
xchg
test
mov
inc
pop
fstpl
jg
inc
aaa
xchg
mov
xchg
subl
orb
ret
pop
fisttpll
adc
scas
gs
and
movsb
xlat
cmp
mov
movsb
hlt
fsincos
push
xchg
pop
in
fwait
out
and
daa
hlt
or
sbb
outsb
jno
sbb
dec
inc
addb
dec
cmc
mov
and
sbb
push
mov
popa
test
mov
inc
inc
out
mov
cmpsb
ret
test
js
cmp
push
rorl
or
jmp
imul
adc
bound
mov
adc
stc
add
daa
xchg
xor
aaa
cmc
int
adc
sub
addr16
pop
pop
mov
add
fsubrl
dec
sub
test
xor
enter
dec
jg
mov
mov
shll
cld
jle
cmp
enter
push
cmp
lea
lret
notl
fmulp
out
and
insl
mov
push
int3
sahf
add
jge
inc
sbb
inc
loop
push
ds
loop
xchg
call
fs
mov
lods
jne
rorb
call
xor
mov
xlat
into
es
xor
add
jnp
adc
mov
push
adc
rcrl
pop
shlb
sub
cmp
shlb
ret
in
cmpb
sti
mov
inc
ds
in
aad
jge
nop
mov
xchg
dec
mov
fld
pop
nop
les
insb
repz
cmp
lods
lea
and
lcall
lock
pushf
xor
call
inc
or
mov
outsl
aas
sbb
jb
sub
fbstp
mov
jmp
mov
std
xor
pop
cwtl
faddl
mov
popf
xchg
dec
aas
inc
dec
mov
movsl
movsb
pop
dec
ret
pop
mov
in
inc
lock
jle
das
in
cmp
mov
ss
shrl
jg
div
scas
adc
cmp
cmpsl
repz
cmpb
les
lret
stc
and
aas
cli
arpl
dec
iret
cli
pop
pop
test
fwait
sub
and
pushf
push
aaa
ret
mov
popf
es
cmpsl
add
clc
jnp
push
xchg
add
cmp
popa
push
ficoml
daa
lds
push
add
push
push
popf
test
rcrb
add
cltd
xor
aam
mov
xchg
xchg
push
xchg
sbb
mov
test
std
cmpsb
xchg
rcl
sub
scas
stos
dec
add
out
add
xlat
add
push
ficompl
mov
xor
mov
std
lock
mov
imul
ja
sub
dec
push
xchg
fwait
and
push
aam
push
jne
loopne
xchg
fdivr
out
ret
frstor
mov
cmc
popf
in
adc
xchg
loop
lahf
mov
mov
ret
or
mov
jp
stos
pop
mov
push
jb
mov
push
dec
cwtl
jnp
in
sbb
roll
repnz
ljmp
shlb
outsl
jmp
out
andl
pop
cmp
jne
enter
out
dec
and
insb
cmp
jnp
jmp
mov
push
xchg
jl
daa
adc
iret
mov
ret
pop
pop
jecxz
xchg
inc
jbe
push
push
or
or
test
int
sbb
xchg
mov
ficomps
scas
cld
iret
pusha
lds
and
mov
and
xor
imul
les
rclb
jl
jae
add
mov
bound
cmp
cltd
or
ljmp
pop
or
jbe
pushf
shll
jo
sbb
scas
fcmovnu
mov
ret
aam
cmp
std
and
pop
sti
jbe
xor
inc
enter
daa
repz
dec
cmp
dec
jno
stc
adc
out
dec
mov
popa
push
xor
ja
push
jno
and
jne
push
xchg
xor
addb
jge
or
jecxz
jle
sbb
mov
push
adc
loope
fcmove
sub
imul
mov
fs
cmp
dec
mov
sarl
mov
push
push
daa
dec
cmc
sub
movb
daa
insl
lcall
aas
fcoml
mov
xor
mov
popa
jg
out
mov
inc
mov
sarb
mov
flds
xchg
sub
jl
cmp
dec
fs
adc
or
pop
push
mov
insb
test
movsl
iret
push
cmc
or
in
outsl
xor
repnz
xchg
pop
stc
lahf
or
or
or
inc
lods
pop
fisttpl
rclb
cli
jp
lods
xor
sbb
in
mov
into
or
sub
loopne
loopne
pop
rcll
leave
imul
es
add
sbb
xchg
dec
sbb
enter
adc
and
enter
fldenv
in
in
fmul
sti
gs
popa
loopne
aad
mov
xchg
dec
ja
addb
aas
fsin
cltd
les
pop
repz
lret
mov
and
jnp
gs
leave
dec
adc
jmp
jmp
ds
jg
inc
xchg
lcall
pop
jne
jb
mov
inc
je
test
jecxz
addr16
std
fxch
pop
cwtl
xchg
sub
mov
dec
mov
and
xchg
in
sbb
mov
cltd
adc
mov
dec
das
lret
dec
mov
in
sbb
and
push
inc
sarl
mov
insl
jbe
inc
dec
pop
mov
cmpsl
repnz
xor
lahf
mov
cld
cmp
lret
push
sti
cmp
out
mov
shr
fsts
ret
inc
mov
test
sbb
add
dec
popa
jg
adc
mov
dec
popf
ret
xchg
pushf
fisubs
comiss
jg
xchg
cltd
cltd
insb
inc
pop
test
fwait
mov
lret
dec
mov
pop
loopne
test
push
lods
xchg
dec
adc
roll
enter
imul
adc
jnp
out
sbb
push
pop
adc
mov
fbld
add
push
mov
es
scas
dec
pop
push
pushf
inc
stos
pop
into
or
mov
push
push
ja
mov
fidivl
mov
sbbl
into
or
inc
mov
xchg
xor
mov
cmpl
cmp
xchg
lahf
dec
jp
jno
mov
or
mov
xchg
dec
jnp
jmp
sub
jno
outsb
add
xchg
test
jecxz
clc
cmp
cmp
orl
lods
out
inc
mov
in
iret
push
mov
stos
stos
addl
push
jnp
je
jle
leave
xlat
push
into
test
adc
cld
lock
sbb
pop
sbb
inc
addl
clc
or
and
cmc
inc
lcall
xchg
clc
adc
imul
subl
mov
push
mov
xchg
nop
leave
xor
sbb
jle
popa
or
and
cmc
aad
aaa
add
repz
lds
mov
lret
and
cmp
jmp
aas
movsl
mov
gs
scas
mov
cmp
dec
out
loope
or
push
and
push
ret
in
imul
mov
subl
jl
ss
and
repnz
or
lea
lahf
mov
inc
push
pop
or
test
dec
push
inc
or
and
pop
or
js
xor
les
loope
jns
sub
out
cmp
inc
push
fsubl
adc
sbb
mov
pop
xor
adcb
fiaddl
xlat
fnstenv
aaa
shl
stos
loop
int
imul
loop
int
pop
dec
xchg
lcall
out
mov
leave
insb
outsb
cwtl
icebp
push
test
addl
inc
and
mov
lock
push
das
push
add
cmp
add
mov
lret
jne
cmc
lea
mov
fcompl
addr16
sub
cmc
rorb
or
loop
ret
push
cmp
or
sbb
int3
rorb
mov
dec
dec
cli
lods
pop
push
xor
dec
cmp
inc
dec
or
into
in
mov
gs
testb
repnz
aad
outsb
inc
out
hlt
xchg
push
adc
loopne
add
imul
fwait
sbb
add
sti
xlat
push
shll
adc
pop
dec
mov
incb
push
outsl
ja
dec
dec
cmp
jne
jge
xor
pop
xor
shl
xchg
mov
outsb
into
call
pop
sahf
cmc
pop
jl
adc
cltd
jmp
add
inc
sbb
sub
jb
jg
dec
sbb
xorl
jecxz
xor
loop
mov
cwtl
push
movsl
pusha
mov
jle
mov
sbb
mov
dec
pop
xchg
push
mov
stos
mov
das
stos
ret
aas
mov
movsb
insb
pop
and
xor
idivb
insl
pop
subl
icebp
inc
inc
mov
jbe
cld
retw
xlat
add
in
xchg
adc
mov
lcall
sub
ljmp
rcr
adc
mov
xor
icebp
mov
sbb
ja
push
popa
xchg
mov
lods
adc
pop
mov
insl
imul
mov
add
lret
imul
pop
push
or
out
subl
mov
rcr
jecxz
pop
xchg
in
stos
sub
cltd
testl
test
xchg
or
arpl
hlt
mov
add
mov
loope
inc
ja
push
mov
dec
mov
dec
or
or
sbb
mov
jnp
out
andl
jns
dec
add
shrb
sbb
mov
stos
or
fidivrl
addr16
push
sbb
in
xchg
mov
sub
adc
xchg
xor
dec
pop
imul
xor
pusha
or
jp
push
stc
jmp
add
shr
out
jle
popf
pop
stc
pop
mov
repz
dec
stos
hlt
ret
fldenv
jl
xchg
insb
push
cmp
insb
scas
outsb
jle
rcl
push
adc
neg
iret
test
ret
and
push
cmpsb
xor
mov
fidivl
loopne
push
sahf
mov
pop
push
sbb
inc
xchg
dec
pop
mov
imul
adc
ret
lds
repnz
xchg
mov
fnstenv
hlt
pop
in
arpl
shll
push
xchg
cmp
mov
mov
ret
or
add
adc
sbbl
pop
push
cmp
loop
into
xor
rol
scas
cltd
addr16
and
rorl
add
push
je
cmc
jbe
imul
push
jb
enter
daa
icebp
cmp
cmp
test
mov
push
mul
pop
movsl
adc
stos
and
mov
push
sub
dec
test
sbb
std
inc
fwait
mov
push
pop
xor
js
call
mov
mov
shl
mov
cmp
js
or
ljmp
adc
repz
pop
andb
int3
add
lods
mov
push
pop
pusha
outsb
out
int
insb
movsl
sub
cwtl
pop
fldz
adc
fldcw
add
ret
scas
sub
mov
mov
jg
mov
mov
aam
or
sbb
mov
enter
mov
mov
imul
aad
mov
or
xchg
out
dec
sahf
jmp
enter
xorb
scas
hlt
outsl
icebp
mov
stc
or
test
adc
inc
and
mov
push
out
mov
mov
cmp
push
or
cmp
repnz
jne
add
fcoml
inc
push
inc
imul
out
out
add
pop
lret
movsl
pop
sbb
ds
sti
xlat
xchg
pop
pop
sub
pop
test
ret
xchg
sti
ret
push
sub
cmpsl
repnz
aad
insl
popf
nop
dec
jge
dec
xor
fisubrs
les
cmpl
out
call
rol
fsubs
adc
xchg
jmp
add
inc
lahf
inc
test
nop
aas
aas
pop
mov
jb
ja
dec
xchg
mov
dec
jecxz
cmp
in
xchg
std
daa
dec
sub
or
xor
jp
adc
jae
add
pop
xor
movsl
mov
and
mov
mov
adc
mov
fisubrl
cmpsl
lock
stos
mov
dec
or
cld
xchg
clc
mov
mov
fcoms
sbb
inc
mov
xchg
loope
sub
enter
mov
es
cld
push
inc
mov
leave
xchg
ret
ljmp
adc
mov
nop
sub
mov
and
in
or
rcrb
je
jns
in
pop
adc
xchg
in
dec
sub
out
test
lds
xchg
xchg
adc
cmp
into
shll
ret
add
push
stos
sbb
adc
sub
sahf
add
mov
jae
xor
sub
or
popf
fbld
push
sub
mov
pushf
lea
dec
inc
aam
inc
fsubs
inc
fwait
lods
or
push
mov
jle
mov
push
pop
bound
pop
jns
imul
pop
clc
repz
iret
fcompl
sub
xor
addr16
mov
jp
sbb
mov
insl
test
cmp
inc
shrl
cmp
jno
movsb
cmp
xchg
sub
jecxz
out
mov
rclb
out
sub
mov
xor
xchg
stos
arpl
xchg
push
ds
jns
mov
jle
iret
es
pop
xchg
rclb
pop
sbb
in
js
adc
fs
xchg
fisttpll
shll
or
sbb
pop
fimull
ror
mov
imul
and
loop
mov
filds
mov
sub
ljmp
jge
arpl
or
sbb
imul
aaa
addb
or
push
add
cli
std
int3
outsb
jecxz
pop
cltd
leave
pop
fiadds
inc
les
mov
scas
js
mov
sahf
fistpll
mov
xor
add
in
aaa
mov
pusha
daa
lock
jbe
out
push
jno
je
jl
mov
sub
fcmove
fsubl
imul
enter
incl
test
jecxz
ret
hlt
scas
cmpsb
iret
out
sub
sub
js
xor
push
pop
int3
loope
and
cmp
and
inc
ror
dec
and
mov
loop
jbe
incl
xlat
out
xor
inc
mov
xor
int
push
scas
sub
sbb
fcompl
pop
inc
and
adc
popf
sub
jp
pop
subb
sub
sbb
mov
add
fnstcw
push
or
cmp
jns
das
notl
ror
mov
inc
hlt
mov
stc
sbb
push
icebp
sahf
mov
cmc
pop
sub
outsl
rclb
loop
rcll
les
and
mov
push
sub
lods
adc
sub
iret
mov
push
xor
fstp
cmp
sbb
or
sub
into
mov
xchg
gs
mov
pop
xor
rclb
adc
pop
imul
push
std
add
and
or
cmp
inc
xlat
rcl
repz
adc
mov
cs
sti
jb
scas
dec
imul
and
pop
pop
inc
fwait
clc
fldenv
pop
adc
sub
xchg
inc
scas
jne
push
inc
cmp
outsl
add
das
lahf
pop
loop
dec
adc
cltd
pushf
fcomip
enter
test
xlat
fimuls
xor
cld
push
jg
push
mov
xor
jecxz
mov
std
into
cwtl
enter
popa
jo
mov
sbb
dec
cmp
xor
pop
xlat
loope
mov
sti
pop
lock
push
js
mov
outsw
mov
push
or
add
scas
dec
dec
push
pop
cmpsl
out
jae
mov
and
test
mov
cli
out
lret
mov
and
mov
and
dec
sub
inc
push
aam
xor
xchg
es
ds
imul
clc
addr16
adc
ljmp
movsb
lods
jmp
cli
jl
mov
ljmp
mov
pop
add
hlt
cltd
adc
arpl
or
push
xchg
inc
mov
test
fisttpl
sbb
js
roll
lcall
sbb
add
aam
mov
ret
pop
ret
xor
push
or
in
xor
incb
mov
or
mov
push
aam
ja
addl
movsb
mov
or
mov
add
pusha
jne
jne
jno
mov
imul
bound
sbbb
mov
xchg
call
repz
sub
sub
inc
cmpb
out
mov
aad
mov
jno
push
dec
and
mov
inc
add
fcomp
mov
dec
shr
fldl
push
xorl
fstps
xchg
mov
jns
ficompl
stos
push
enter
sarl
insl
xor
sar
mov
sub
inc
push
mov
and
or
hlt
push
jae
enter
in
or
xchg
pop
dec
inc
pop
outsb
fidivrl
rclb
xchg
std
dec
sub
imul
lahf
scas
mov
xlat
lds
cs
repz
jg
jg
inc
hlt
cld
repz
scas
lods
mov
jge
mov
or
inc
jg
or
inc
add
test
sbbb
enter
sub
dec
xor
jbe
call
and
lahf
push
cmp
or
shlb
and
dec
in
push
call
daa
out
repnz
sbb
jl
pop
ret
dec
insl
adc
push
mov
sar
push
push
out
out
cmc
push
shrb
cmp
scas
shr
inc
mov
jmp
pop
jg
arpl
adc
and
push
sub
sub
push
fidivrl
int3
out
ds
rol
adc
test
repz
scas
sbb
push
xor
pop
int
sbb
sub
inc
pop
xlat
enter
mov
xchg
fdivrl
inc
enter
sbb
imul
andb
jg
insl
mov
push
sbb
scas
push
out
rcrl
cmp
xor
push
notl
and
lret
test
xor
push
sbb
adcb
xor
push
cmc
and
mov
outsl
scas
and
or
fs
in
adc
sub
xchg
cmp
clc
ds
out
ss
inc
hlt
xchg
xor
push
add
fdivrs
xchg
rorl
or
ds
dec
sbb
adc
adc
fsts
add
mov
xchg
in
sbb
mov
jg
adc
and
xchg
adc
in
cltd
sahf
xchg
sti
and
or
in
aam
aad
stos
clc
nop
add
les
push
inc
scas
push
xchg
out
les
lods
inc
xchg
add
mov
cmp
xor
test
jmp
dec
shrb
cmp
out
or
leave
aas
fwait
incl
jb
add
je
push
inc
jecxz
and
jmp
insl
std
jne
hlt
cwtl
orl
mov
xor
inc
adc
fistpl
adc
or
idivl
xor
and
fisubrs
inc
sub
mov
icebp
mov
sarl
jl
insl
adc
dec
dec
insl
aas
cmpsl
out
shlb
mov
sti
ljmp
and
pop
mov
mov
ja
testl
xchg
mov
jmp
ret
andb
adc
stos
fstl
ja
xchg
inc
dec
or
rcl
sub
lods
push
add
lods
dec
and
mov
push
fwait
bts
mov
cltd
dec
cmp
mov
mov
push
push
imul
divl
test
test
xchg
out
or
mov
in
inc
pop
xchg
xor
out
repnz
or
out
push
jmp
aas
xor
sbb
aad
js
mov
aas
test
mov
dec
daa
sub
stos
mov
clc
push
add
or
shll
iret
je
popf
jmp
gs
mov
ss
sub
sub
addr16
xchg
jp
xchg
pop
mov
popa
sub
cltd
test
in
jp
pusha
fcmovb
push
xchg
shl
hlt
jmp
data16
addl
aam
xchg
rorl
and
js
stos
dec
aaa
xchg
shll
jnp
repz
movsl
adcl
arpl
mov
xor
notb
mov
lods
sbb
pop
and
push
out
xchg
or
testb
lods
sbb
pop
sbb
sbb
cmp
jmp
add
lock
dec
rclb
dec
repnz
hlt
inc
mov
popl
fstpl
dec
test
fdivs
add
dec
add
insl
int3
inc
cmc
inc
pop
testl
mov
xlat
mov
and
pop
nop
movsb
ss
mov
ret
and
in
add
jo
daa
out
adc
cmp
push
jno
jns
jl
pop
push
dec
fcoml
push
mov
mov
gs
push
movsl
dec
pop
test
jns
xor
cmpsb
aad
push
pop
cmpsb
xchg
test
pop
pusha
jno
push
repnz
sub
and
cmp
cmc
jo
pop
mov
test
sbb
lods
sbb
xor
add
sub
jae
pushf
mov
and
sub
push
sub
jo
pop
push
testl
push
or
int3
sub
pushf
das
outsb
and
dec
test
xchg
jne
jl
and
mov
nop
mov
fucomi
mov
xchg
cs
in
lret
and
mov
xor
out
push
movsl
test
int
rcll
mov
sub
sbb
jo
sahf
aam
popa
cmc
in
fdivrs
outsl
mov
call
stc
xor
cmp
leave
fcoms
lods
fisttps
mov
cmp
jns
jge
mov
inc
dec
or
dec
das
into
js
mov
cmp
outsb
dec
inc
adc
xor
adc
ja
pushw
xor
out
cmpsb
xlat
dec
repnz
sub
enter
xlat
sub
popa
das
sti
sarb
not
or
push
aaa
dec
push
add
inc
rcr
fsts
pop
ret
les
sub
enter
and
inc
call
push
rclb
pop
dec
mov
add
pushf
xor
lcall
xor
out
inc
and
aas
cmp
dec
mull
ja
in
add
out
mov
out
cwtl
ds
shlb
jns
adc
push
jg
mov
or
sub
fisubl
das
jmp
mov
jl
xor
or
testb
mov
pop
pop
cmpsl
in
mov
mov
rclb
test
xchg
stc
mov
mov
scas
pop
push
cld
cltd
rorb
repz
sub
pop
fadd
shufps
mov
xor
jg
push
ljmp
adc
push
int
std
adcl
loop
add
cmp
cltd
jg
inc
test
loop
push
sbb
icebp
test
ret
xchg
loope
sbb
sub
xor
mov
ja
push
outsl
cs
or
sbb
add
inc
xor
jno
or
hlt
pushl
mov
mov
sbb
out
mov
ja
movl
popf
or
or
mov
fwait
cmp
dec
jne
sub
mov
icebp
out
std
movsb
jl
xor
aam
dec
dec
xchg
mov
and
sub
and
mov
mov
adc
dec
out
outsb
dec
ljmp
pusha
jne
loop
std
aas
xchg
xchg
mov
cmp
dec
adc
cmp
push
in
popf
mov
ljmp
rol
and
inc
inc
insb
mov
cmp
jmp
xor
stos
iret
add
ret
lea
shrl
jae
sarb
fdivrs
ds
adc
pop
ret
xchg
stos
sarl
imul
mov
lds
push
shlb
or
repnz
mov
jmp
int
int
jo
dec
jge
ja
sbb
jecxz
aaa
inc
mov
mov
cmp
pop
es
fisubrs
scas
xor
sub
jns
adc
cmp
cmp
xchg
cmp
or
jbe
dec
sbb
in
in
mov
inc
and
movsb
cmp
xor
jl
jnp
dec
dec
fistpl
movsl
xor
jno
cmp
mov
push
js
sub
inc
push
inc
inc
xlat
das
pop
cmpsb
pop
inc
or
and
mov
pop
lahf
shrl
insl
add
sub
lds
mov
mov
pop
test
cmp
movb
popf
jp
sbb
xor
gs
jp
insl
int
pop
aam
dec
js
pop
aad
ds
pop
fcoml
mov
icebp
test
sub
xchg
outsl
sub
push
dec
adc
mov
dec
mov
and
and
out
or
adc
cmp
stos
or
testl
pop
testb
jns
ja
push
xor
add
outsl
insl
shrl
jns
cmp
jmp
jb
adc
movsb
xorb
xchg
push
lods
and
int3
mov
inc
xor
dec
or
push
inc
gs
lds
inc
inc
popf
pop
lea
adc
mov
adc
insl
bound
sbb
push
cwtd
xrelease
sub
pushf
xlat
mov
sub
pop
mov
outsl
imull
jg
add
aad
jp
nop
mov
in
mov
jmp
les
call
or
inc
jns
aam
negl
jecxz
adc
fstps
stos
fisubrs
add
add
inc
ds
aas
fstps
dec
pop
in
outsb
cmp
je
dec
mov
icebp
or
ret
hlt
aaa
cwtl
stc
mov
mov
cmp
xor
jge
outsb
das
mov
and
dec
pop
pop
sarb
mov
loopne
lock
add
jecxz
mov
pop
les
rcll
push
insl
loopne
inc
dec
aas
xlat
cmpsw
in
sbb
mov
test
sbb
mov
and
mov
adc
xor
pusha
jno
movsl
xchg
adc
sub
mov
sahf
push
sbb
sar
sbb
ljmp
shrl
inc
call
xchg
inc
xor
push
dec
cmc
hlt
punpckhwd
into
add
inc
lds
mov
mov
push
fcoml
jbe
lds
pop
xchg
sbbl
mov
mov
mov
jns
add
and
insb
jae
xor
sbb
mov
adc
jmp
pop
mov
push
ja
scas
push
dec
or
jne
or
xor
fwait
imul
jg
xchg
mov
mov
fdivrl
lds
in
push
xchg
or
jae
mov
arpl
or
xchg
addr16
xchg
dec
jp
loopne
mov
in
mov
mov
lock
push
nop
shlb
sahf
hlt
fistps
or
ret
xchg
cld
mov
push
out
pop
pop
popf
lret
mov
cs
add
out
out
or
jnp
dec
cmpl
insb
stc
adc
sbb
pusha
mov
and
cmp
inc
ret
jns
jae
mov
or
push
xchg
ret
push
push
aad
xchg
add
lret
sbb
xor
mov
or
pushf
mov
mov
js
sbb
test
dec
imul
jge
jge
sub
aaa
jle
lods
or
fwait
xor
cmp
cltd
int3
sbb
pop
push
dec
nop
ficoms
lahf
int
jmp
dec
sbb
enter
xchg
insb
ja
dec
mov
jbe
loope
in
rol
jg
cmp
sbb
in
loope
cmp
setae
in
mov
fdivrl
and
pop
lahf
inc
inc
jle
dec
sub
test
leave
inc
data16
cmpsb
fistpl
sarl
and
pop
ficomps
push
pushf
es
sub
sub
cmp
cmp
cmp
ds
adc
int
cmp
cwtl
flds
add
sbb
es
jne
cmp
iret
lods
sub
adc
pop
push
out
lcall
mov
rcl
sub
sahf
or
or
pop
xorb
add
daa
nop
sti
mov
test
and
jle
push
adc
xlat
cmp
gs
popf
testl
push
sarl
mov
jbe
sbb
enter
push
jne
ds
and
lods
pusha
loop
xor
stc
mov
mov
adc
rolb
dec
inc
lods
lods
or
mov
enter
jecxz
xor
sbb
mov
xor
gs
mov
loopne
inc
sahf
pop
lods
lods
mov
imul
stos
jecxz
sbb
push
sbb
gs
fst
int
mov
in
dec
shll
fisubl
sti
fildl
fwait
ja
nop
xchg
jg
adc
pushf
inc
out
and
enter
fs
cltd
xchg
dec
mov
call
push
sbb
adc
jl
jmp
jle
arpl
inc
inc
aad
pop
pop
in
js
mov
dec
in
je
out
jecxz
je
hlt
int
std
push
inc
cwtl
mov
jnp
pop
addl
and
adc
adc
in
jbe
pop
arpl
mov
dec
adc
xor
sbb
in
jo
xchg
sbb
mov
xchg
fldl
testb
mov
dec
cmp
lds
dec
xchg
cld
push
adc
mov
lret
out
mov
push
loop
shlb
jle
hlt
pop
adc
sub
shlb
pop
push
es
push
push
test
sub
adc
and
aad
xchg
movsl
lods
mov
aas
ss
xchg
hlt
push
sub
dec
bswap
fcomps
or
jbe
in
outsl
dec
test
fs
lahf
xchg
imul
stc
dec
xchg
xor
pop
xchg
cmc
cwtl
stos
mov
inc
add
inc
je
aas
pop
popf
xor
xchg
inc
xor
lret
lds
adc
push
rcrl
mov
ja
sbb
inc
lret
add
or
scas
inc
fwait
cwtl
lahf
fstpl
in
scas
jne
and
mov
aaa
mov
mov
pop
cmpl
pop
sbb
call
or
addr16
pop
clc
jp
xchg
add
adc
mov
sbb
in
xor
pusha
stos
sub
cmp
jne
mov
xchg
jbe
icebp
das
popf
out
dec
call
mov
insl
inc
rep
cmpsb
aaa
and
sarl
outsl
jnp
sbb
jle
or
mov
incl
add
xor
inc
into
repnz
jae
fcoml
xor
sbb
adc
inc
adc
lret
fiaddl
aas
xlat
xchg
pop
out
sbb
sti
lahf
imul
scas
lds
shll
pslld
sub
leave
and
ss
sub
push
inc
jbe
pop
jge
shrl
push
mov
or
ret
cs
add
aam
fidivs
xorb
xor
pop
test
mov
xlat
jmp
or
out
mov
mov
dec
in
jmp
mov
jno
adc
jl
das
inc
dec
sub
movsl
ds
lea
jb
lods
lahf
arpl
xchg
test
ficompl
mov
pop
sbb
xchg
js
push
lcall
or
sub
and
lret
test
cmp
adc
adc
adc
fcomps
adc
pop
adc
xor
stos
and
int
sub
aas
inc
adc
shll
rcll
adc
fsubrl
xor
mov
xchg
dec
test
lcall
mov
cmpsb
xor
fildl
add
pop
movsl
arpl
and
mov
lret
sti
rcll
mov
fisubl
sahf
mov
lret
push
xor
lea
stc
push
push
mov
loope
sbbb
mov
mov
pop
out
push
addr16
adc
and
inc
cmpsb
daa
cmp
mov
or
insb
into
and
mov
pop
lret
in
adc
dec
imul
xchg
data16
shrb
cmp
subl
xchg
xchg
ret
in
inc
mov
fwait
jns
xor
loop
ret
nop
insb
inc
mov
outsl
jns
inc
cli
stos
fcompp
mov
scas
shrl
repz
xchg
adc
cmc
lea
insl
call
rcrb
inc
adc
mov
jmp
push
ret
loop
inc
leave
cmpsb
xchg
inc
je
mov
pop
lret
cmc
xchg
pop
push
or
into
xlat
out
jecxz
sbb
testl
les
push
adc
sbbl
cs
push
cmp
adc
cmc
lock
adc
mov
movsl
cmpsb
stos
and
dec
stc
shl
popa
outsb
notb
fs
scas
xchg
jo
xor
jbe
mov
push
pop
add
xchg
mov
cmp
ret
mov
jae
lods
rolb
push
mov
ret
mov
push
dec
jecxz
clc
mov
xchg
xchg
cmp
mov
popa
aaa
decb
mov
bound
sub
out
fidivrl
pop
hlt
sbbb
cmp
mov
and
push
bound
xor
xchg
aam
sbb
cli
sarl
repz
stos
mov
insl
out
jle
cwtl
add
pop
push
aam
ficoms
aad
ljmp
xor
shll
push
xor
xchg
fimuls
loope
ja
or
inc
bound
fwait
cmp
push
jle
jne
or
mov
pushf
sbb
lcall
jns
movsb
sub
lahf
fwait
lea
inc
cmc
lds
adc
les
scas
jp
sti
pop
mov
clc
insl
mov
pushf
xchg
in
xor
movsb
fistps
rcll
mov
mov
xchg
mov
subb
popf
sbb
pop
push
lods
loope
stos
sbb
cld
insb
sti
out
jg
xor
ret
push
das
mov
fimull
repz
push
mov
fistps
out
inc
inc
fnstcw
or
repz
or
sti
scas
nop
inc
xchg
add
fidivrl
es
sbb
cltd
outsb
imul
xchg
lds
pop
rolb
or
push
jb
leave
xchg
pop
mov
jae
lret
arpl
arpl
jns
int3
jge
cmp
sbb
and
or
imul
pop
mov
pop
ficoms
aad
ja
xorb
jne
mov
scas
and
lods
pop
cmp
or
movsb
bound
mov
popf
jae
jbe
jo
in
mov
mov
sub
sbb
jno
xor
mov
push
sub
mov
and
cmp
push
icebp
xchg
test
movsl
pusha
incb
iret
pop
cmpsb
loope
call
js
adc
pop
pop
pop
in
push
pop
push
loope
add
mov
dec
ds
add
push
shl
outsl
jmp
subb
push
shlb
xor
mov
int
data16
mov
in
lcall
mov
sub
or
test
call
addr16
scas
in
mov
cld
jle
adc
mov
and
push
stos
cmp
fldt
es
jg
lods
mov
imul
aam
sahf
pusha
xor
push
hlt
push
scas
outsl
or
loop
lahf
call
fs
adc
ret
in
fwait
lods
jnp
xchg
mov
push
cwtl
xor
aam
cmp
jg
or
rcrl
ret
mov
loopne
jle
pop
ljmp
imul
lock
ret
sbb
fcmovne
xor
dec
arpl
mov
mov
sar
push
cmp
pushf
cmp
sub
cmp
std
inc
inc
or
xorb
fsubp
mov
add
xor
shlb
call
push
inc
jo
adc
push
adc
pushf
loope
mov
or
sub
inc
push
ljmp
mov
adc
ljmp
sbb
jecxz
add
std
mov
inc
jmp
mov
lods
incl
out
cmpsb
fisttpl
sbb
daa
jp
fimull
lock
mov
pop
sbb
and
or
roll
notb
leave
dec
xor
mov
mov
mov
cs
sar
mov
dec
mov
mov
sub
xchg
fsubrs
rcrb
into
sub
loop
ret
dec
lock
mov
mov
jnp
sub
popa
dec
dec
insl
lods
imul
mov
test
gs
sbb
dec
push
fdivrp
jbe
cltd
sbb
rorl
mov
mov
orl
jg
xchg
leave
jecxz
xchg
into
cmpsb
pop
in
lcall
loope
add
shlb
aaa
add
or
xor
jg
dec
sub
mov
sbb
ret
mov
mov
jle
dec
out
mov
or
push
jbe
negb
enter
jb
and
pop
out
jns
cwtl
bound
jns
inc
adc
sub
icebp
xchg
clc
lods
xchg
mov
int
sub
rsm
push
addr16
addl
push
mov
mov
or
mov
in
lahf
pop
pusha
loope
mov
xchg
out
int3
inc
jmp
pop
dec
push
orl
jge
arpl
jb
clc
ss
push
jmp
cmp
xor
std
insb
data16
jnp
or
jle
imul
dec
ficoml
mov
mov
ret
imul
loopne
jae
fbstp
push
mov
mov
je
pop
push
adc
fisubrl
into
xchg
pop
mov
aaa
or
scas
fimull
lds
pop
js
test
leave
bnd
outsb
leave
push
xor
popf
packsswb
out
movl
lcall
mov
ficomps
int3
fistpl
dec
fdivrp
stc
push
xor
cwtl
xchg
and
sar
movsb
in
insb
or
in
leave
enter
xchg
in
mov
or
cmp
jno
jle
jl
xor
dec
pop
popf
push
shrd
movsl
dec
jno
and
mov
pop
test
jo
or
cmpsb
fs
adc
ss
js
push
pop
fwait
and
dec
arpl
gs
cmp
nop
lcall
jae
ror
nop
orb
lahf
cmp
imull
xor
jle
push
xchg
sub
pop
aas
pop
shrl
jb
mov
enter
filds
test
loopne
jg
cs
mov
xchg
mov
mov
sub
mov
cmp
xchg
mov
testl
and
sbb
cwtl
xor
iret
pusha
xor
dec
lcall
lds
fs
adc
stos
sbb
daa
and
mov
out
decb
daa
stos
xor
and
hlt
or
icebp
into
out
sbb
flds
pop
or
adc
sub
imul
or
movsl
or
cmp
inc
cmpsl
xlat
mov
in
sub
les
sbb
dec
mov
xor
sub
fldenv
in
jmp
cmp
daa
int3
pop
call
shrb
pop
pop
insb
adc
xchg
pop
jmp
xchg
cld
cs
cmovne
xchg
loop
stos
pop
push
inc
in
jb
cmpl
jecxz
sub
std
shrl
in
lcall
sti
mov
dec
rcrl
fstpt
fcomps
or
lock
push
cmp
andl
mov
xor
xchg
push
add
insl
jl
aaa
dec
sub
ret
mov
add
jns
lret
mov
jo
and
cmc
xchg
and
mov
stos
shrb
movsb
jb
push
and
loope
shrb
add
outsb
xchg
mov
sub
popa
gs
loopne
mov
xchg
mov
sub
in
dec
add
insl
cltd
xchg
push
xor
push
call
mov
test
mov
ljmp
int
pop
xchg
sub
xchg
mov
mov
add
adc
xor
aad
xor
xlat
push
fs
sub
sbb
jne
dec
flds
sbb
xor
sub
lea
aad
pcmpeqw
mov
dec
bound
fwait
hlt
jns
xorl
inc
mov
mov
sbb
lret
or
mulb
fildl
xchg
in
mov
pushf
or
xchg
add
mov
cmpsb
dec
pop
push
fs
insb
or
inc
stc
fistps
xchg
mov
sahf
inc
cli
xchg
sub
cld
sbbl
ds
pushaw
gs
sub
cld
and
lock
sarl
dec
jle
or
push
xchg
cmpl
fmul
sti
pop
inc
xor
jmp
cmp
push
push
jns
aam
fisttpl
mov
nop
dec
xor
and
sbb
push
mov
scas
cmp
stos
cmpsb
shlb
cmp
les
dec
hlt
or
arpl
mov
cmpl
mov
inc
jg
aaa
jp
mov
add
or
pop
adc
xchg
ficomps
nop
cmpsl
jo
sbb
scas
jo
sahf
and
imul
js
xor
jbe
into
pop
in
outsl
adc
enter
daa
call
movsl
fbstp
ljmp
jbe
lods
push
repnz
bound
inc
jge
lahf
sarb
push
xchg
push
sbb
cmp
push
inc
mov
adcb
xor
lods
pop
fisubrl
mov
insb
add
cmp
sbb
shlb
out
enter
pop
sbb
dec
sub
clc
inc
xor
dec
dec
insb
jl
xchg
lea
mov
in
pop
push
hlt
mov
push
adc
aaa
fsubrl
sub
pusha
test
jl
push
outsb
mov
mov
mov
inc
mov
mov
faddl
and
sub
push
push
adc
dec
jecxz
lret
push
rcr
sbb
pop
loopne
cmpsb
jb
cmc
xchg
inc
sbb
stos
xor
inc
cmp
pop
fisubs
stc
jl
mov
adc
pop
ss
das
lods
dec
cmp
mov
sbb
stos
push
xchg
fwait
jnp
stos
xchg
aaa
or
into
mov
loopne
or
pop
sub
icebp
imul
mov
data16
aas
cmp
loop
leave
mov
sub
fwait
push
in
xchg
sti
ljmp
aad
push
mov
std
xor
jecxz
xor
fstps
cmp
repz
movsb
fimuls
scas
ret
dec
dec
adc
jp
mov
or
icebp
pushf
aaa
inc
xchg
out
shrb
out
and
inc
lds
aas
hlt
or
out
dec
and
je
mov
movsl
movb
sub
push
xchg
xchg
cwtl
mov
jge
out
cmp
dec
mov
mov
lret
fnstenv
mov
push
les
lret
and
mov
negb
outsl
insl
arpl
sub
in
cmpsl
out
xor
icebp
fsubrl
cld
adc
push
lret
sub
in
pop
and
nop
stos
mov
rolb
xchg
cmp
js
aam
mov
adc
frstor
rorl
stc
inc
cwtl
ljmp
pop
lods
inc
imul
into
sbb
xchg
loopw
inc
neg
add
stos
cltd
leave
pop
roll
add
and
in
push
xchg
sbb
icebp
inc
pop
inc
nop
popa
stos
xorl
cmpsl
inc
jmp
loopne
sub
lods
pop
cwtl
mov
ja
or
fsubr
mov
and
mov
das
fimull
test
jae
inc
daa
mov
aaa
fwait
push
lods
les
js
adc
jp
pop
mov
inc
push
out
aaa
cld
sub
outsb
std
jns
mov
pop
dec
xchg
xchg
add
mov
fcmovb
sub
add
mov
jp
push
jecxz
mov
add
in
popf
js
pop
sbb
mov
mov
jmp
repz
popa
subl
mov
outsb
push
mov
imul
call
insb
cmp
stos
jnp
or
push
fildl
adc
jg
cmp
ret
ret
pop
ja
repz
cli
push
add
pop
dec
push
cmp
xchg
or
insb
ret
or
mov
daa
xchg
mov
ss
push
imul
scas
mov
push
mov
pop
xchg
hlt
push
jbe
arpl
into
mov
cmpb
fiaddl
sbb
decb
mov
or
jecxz
add
dec
jp
inc
movsl
adc
inc
movsl
sub
int3
mov
sbb
cmpsl
repz
es
movsb
add
push
mov
jbe
lods
inc
in
push
pop
sbb
and
push
cmp
jnp
jl
mov
xchg
mov
movsl
pop
and
lahf
ffreep
jne
push
clc
test
push
cmpsl
test
sar
cmpsb
push
fstps
sbb
js
rorb
push
push
es
xchg
mov
repnz
dec
repnz
pop
xchg
rcll
push
pop
jae
ret
mov
push
add
push
repnz
mov
int
jbe
sub
leave
inc
pop
iret
rcrl
pusha
cmp
fcoml
xchg
add
jnp
xchg
outsb
fnstenv
mov
cmpb
inc
jg
cmp
mov
aaa
lods
mov
test
and
and
and
mov
or
sti
testl
shll
mov
test
pop
xchg
outsl
cmpsl
xor
loop
dec
daa
stc
xor
fs
cli
lods
adc
movsl
daa
lods
xor
mov
mov
cli
fisubrs
jno
aad
xor
and
aam
lods
ret
jl
and
outsl
push
pop
inc
in
mov
imul
pushf
push
stos
add
and
mov
xlat
or
add
sub
push
in
and
icebp
loope
sti
cltd
test
aad
inc
push
nop
fadds
imul
inc
sbb
xchg
pop
fwait
incl
rep
sti
xchg
sbb
lods
and
sub
pop
into
inc
pop
pop
sub
mov
shr
sbb
push
inc
loopne
or
xchg
aam
jb
dec
push
dec
cmp
je
loopne
jecxz
push
add
add
std
lods
sub
cwtl
pop
or
mov
mov
mov
cmp
fsubs
xlat
mov
insb
mov
aaa
pusha
lock
pop
imul
jo
ss
dec
dec
push
shll
lret
lods
negb
repnz
dec
cmp
dec
and
adc
dec
mov
icebp
mov
in
cld
aas
mov
xchg
mov
pop
andl
aam
pop
out
out
rcl
aaa
jbe
outsl
test
ret
clc
fldlg2
es
clc
jp
adc
push
sbb
lods
out
adc
and
push
fcoms
outsl
mov
mov
cltd
add
lret
test
fs
add
push
outsb
jmp
icebp
test
mov
fistpl
cmp
rcll
enter
push
out
or
cmp
mov
pop
pop
test
fisubs
xor
fisubl
and
mov
pop
ljmp
dec
mov
loop
or
jl
fwait
sbbl
sbb
add
mov
cli
xchg
push
out
sbb
jbe
jns
out
push
in
in
mov
mov
push
fs
add
cmp
pop
hlt
jp
lahf
lds
ljmp
dec
pop
cmp
in
xor
pusha
mov
jb
jb
xchg
push
divb
mov
dec
mov
popf
mov
idivb
test
int3
stos
in
jnp
jns
insb
cmpsl
fadds
jnp
mov
jle
pop
arpl
rclb
inc
repnz
lcall
pop
scas
or
inc
add
adcb
decl
or
out
ret
inc
mov
xor
cmp
imul
scas
add
lds
mov
shr
jle
repnz
nop
leave
jae
nop
hlt
lahf
loopne
arpl
and
inc
test
into
sbb
adc
xchg
les
mov
pushf
pop
in
outsl
add
fsubp
call
cwtl
jo
jp
scas
cs
adc
cmp
cli
imul
fidivl
std
jl
cmp
dec
jmp
out
enter
xchg
jno
xor
jl
jo
dec
push
mov
cmp
jns
out
lahf
decb
push
cmp
inc
mov
dec
inc
shlb
pop
js
in
pop
pop
mov
push
jge
loope
out
sub
pop
fnstsw
std
enter
push
and
xchg
jl
rcrb
rclb
or
sbb
fbstp
jmp
add
iret
divl
int
inc
shrb
cmpsb
fsubr
pop
dec
adc
adc
lret
imul
outsb
cmp
mov
adcb
stos
lds
mov
pop
jb
icebp
out
mov
mov
mov
cmp
dec
xchg
test
or
push
mov
into
sbb
jg
cmc
and
add
pusha
pushf
xchg
outsl
xchg
cwtl
loop
in
add
ljmp
adc
adc
pop
test
mov
pop
out
fadd
cli
adc
mov
or
stos
ss
pop
cmp
imul
int3
loope
cs
jp
dec
jne
cmp
xor
adc
sub
test
in
pop
inc
outsl
sti
dec
lea
aad
fwait
adcb
aaa
out
inc
pop
imul
leave
out
les
or
repz
outsl
xchg
loopne
add
call
dec
hlt
add
adc
test
jmp
mov
inc
insb
loopne
inc
sti
push
fidivrl
xor
jno
scas
ret
inc
jne
jecxz
dec
movb
pop
std
push
test
aad
dec
orl
jl
pop
xor
clc
fs
pop
int3
das
push
ss
mov
cmp
and
pop
adc
maxps
mov
pop
dec
sbb
outsl
cmpsl
in
push
mov
mov
ret
hlt
dec
lret
or
mov
mov
push
cmc
push
shlb
push
aam
in
ret
xchg
es
ret
mov
icebp
sbb
ja
inc
ljmp
sbb
mov
insb
xchg
aaa
adcb
add
test
test
addb
rcr
add
and
test
jge
xchg
arpl
in
mov
pop
stos
popa
imul
insl
fidivrl
out
jl
add
enter
sub
xor
fdivr
xor
xlat
dec
mov
daa
xchg
mov
pop
movsl
arpl
ja
jne
dec
mov
pop
inc
push
dec
stos
or
in
or
mov
imul
cmc
jecxz
enter
sbb
xor
shll
mov
or
icebp
xor
jp
mov
mov
lahf
into
mov
sub
dec
add
stc
in
sub
fcomip
inc
rcll
lds
mov
mov
outsl
jo
popf
fisttpl
dec
push
out
pusha
stos
pop
mov
and
and
cmpl
jmp
adc
ficoms
iret
stc
orb
loop
mov
inc
adc
cltd
push
ret
or
bound
fidivrl
jge
xchg
arpl
imul
add
cmovne
or
repnz
call
pop
arpl
xchg
inc
mov
jge
std
sbb
je
cwtl
aaa
mov
xchg
or
mov
sub
xchg
pop
sahf
and
push
xor
add
dec
scas
or
rclb
movsb
sbb
push
sub
pop
jbe
ret
and
push
enter
daa
in
fdivrs
sbb
jno,pn
or
jl
sub
testl
push
cwtl
out
lahf
sbb
xchg
ljmp
and
inc
dec
aam
cmpsb
jo
je
add
mov
push
cltd
mov
sub
mov
in
mov
pushf
or
aaa
fdivrl
addb
hlt
add
dec
shlb
mov
imul
test
lcall
adc
insl
stos
adc
pop
inc
or
mov
test
nop
jl
dec
push
jno
xor
xor
xlat
dec
push
sub
cmp
andb
lret
xchg
mov
xchg
sub
lret
sahf
je
cmc
jmp
in
mov
and
loop
ret
jmp
fs
ljmp
mulb
mov
mov
or
les
cli
inc
add
xor
cmp
in
or
dec
xchg
into
jae
outsl
mov
ret
pop
test
adc
lret
out
sub
add
dec
sub
outsl
fsts
add
sbb
xchg
push
mov
jp
sti
negl
decb
pop
aad
push
test
mov
dec
dec
test
hlt
flds
sbb
repz
jp
ret
sbb
repz
int3
sub
pop
xchg
adc
cmp
jmp
mov
clc
inc
repz
jecxz
push
push
and
shll
jb
out
dec
es
fdivs
dec
jecxz
test
or
imul
or
cwtl
shrl
mov
xchg
mov
aas
aaa
andl
cmpsb
sub
xor
pop
xchg
mov
push
hlt
lock
mov
mov
out
clc
mov
ror
xchg
in
jecxz
js
sbb
dec
pop
lahf
mov
in
je
mov
out
icebp
popa
ret
mov
xchg
sbb
mov
jae
popa
arpl
pop
sub
pop
in
pop
hlt
out
aam
js
ret
push
pop
inc
xor
adc
sbb
lcall
cld
or
dec
lret
roll
lods
xorb
cmpl
xchg
jle
into
push
and
ss
add
add
clc
lock
push
hlt
rcrb
test
out
cmp
mov
xor
stos
push
mov
rclb
cmp
std
sbb
lcall
cmp
or
das
xor
aam
mov
sub
dec
mov
pusha
push
mov
out
fimuls
sti
push
inc
in
shrl
fwait
loope
mov
popa
lret
iret
cmpsl
mov
out
aam
add
and
jge
push
in
push
pop
xchg
addl
jb
lock
jne
addr16
arpl
jp
sub
mov
ret
mov
ss
in
lea
fists
popf
xchg
push
lret
cmp
xchg
push
lret
fidivl
mov
repnz
mov
es
stos
lret
imul
outsl
in
jge
mov
jle
add
cmp
iret
pop
sbb
inc
pop
sbb
mov
mov
inc
int
test
arpl
fisttpll
aaa
inc
mov
mov
in
shr
xchg
mov
scas
dec
imul
scas
leave
int
lds
stc
inc
shlb
js
mov
outsb
pop
leave
popa
lock
xor
pushf
fildl
sbb
push
das
es
jbe
outsb
or
mov
add
xchg
test
jb
dec
pop
int
fisubrs
dec
les
pop
sub
scas
in
in
xchg
and
jmp
dec
dec
jge
movsb
jb
push
ja
and
cld
test
or
jae
in
jno
dec
sahf
xchg
push
sub
or
jle
ret
movsl
outsl
xchg
insl
and
jo
push
jecxz
pop
test
loopew
inc
fidivrs
cwtl
cmpsb
rep
ljmp
lds
pop
mov
sub
sub
mov
cmp
jmp
adc
adc
nop
inc
push
sbbb
dec
add
push
mov
int
mov
sub
cmp
jns
sub
mov
sub
add
jmp
adc
jg
call
mov
fbld
popa
mov
mov
and
or
sub
aaa
cmp
cmp
repnz
push
and
mov
dec
movb
xor
cmc
mov
movsl
xor
push
out
inc
sbb
loop
int3
or
pop
ror
cmpsl
stos
adc
dec
push
lods
in
sbb
jae
cmpsb
out
test
cli
ja
mov
cmp
mov
or
test
push
push
nop
gs
cmp
loopne
adc
mov
imul
jnp
and
lds
and
dec
cmp
test
mov
xor
jae
outsb
push
leave
aad
jno
nop
imul
jmp
fnstenv
repnz
les
xchg
ret
repz
jge
sub
call
dec
in
pop
inc
shll
mov
pushf
jecxz
lcall
and
inc
jp
sti
inc
xor
aas
jo
bnd
addb
rcll
jecxz
add
or
data16
mov
add
push
imul
cmpl
dec
fstpl
mov
jge
or
xchg
das
fsubrl
mov
mov
ljmp
mulb
test
insl
decl
dec
adc
cmpsl
jecxz
dec
mov
cmp
cmp
rclb
jmp
push
mov
dec
sbb
dec
popa
ja
push
and
aam
pop
inc
movsl
daa
cmpsb
es
test
aas
aaa
adc
xchg
cmc
xchg
mov
shll
fsubrs
das
lods
in
jo
mov
push
cmpsl
fsts
add
clc
xadd
add
mov
mov
inc
push
mov
aad
fs
pop
test
hlt
pop
xchg
imul
stos
aas
jno
out
xor
or
sbb
mov
or
es
jg
inc
xchg
adc
pop
sbb
rorl
das
inc
cmpl
ret
dec
imul
xchg
dec
cld
mov
xchg
xchg
out
mov
aad
out
les
insb
popf
xchg
xchg
shl
xchg
mov
arpl
sub
icebp
lea
dec
insl
jp
jge
mov
stos
mov
mov
mov
dec
repz
jmp
xchg
jno
and
mov
jne
int3
popf
sub
or
gs
stos
ds
and
cmp
andb
mull
repnz
mov
cs
int3
pop
push
fwait
test
mov
inc
xchg
or
pop
cmc
dec
inc
or
xchg
adc
sbb
sbb
imul
sub
mov
cli
sbb
arpl
mov
fcomps
or
mov
jmp
sbb
add
aaa
xor
pop
sidtl
lea
fmulp
imul
push
add
and
and
jge
cmp
call
sbb
arpl
jbe
test
lret
enter
daa
jecxz
test
jle
int
and
bound
push
dec
mov
or
movsl
jbe
jae
dec
arpl
lahf
pop
pop
dec
push
mov
pop
test
xor
push
inc
insl
in
cmpsb
jbe
pop
push
ljmp
xchg
imulb
jmp
loope
stos
ret
mov
dec
ds
or
out
arpl
subb
cltd
add
sbb
pop
repnz
scas
dec
xchg
add
sub
pop
pop
lret
pop
cmc
lcall
sub
ret
adc
sub
or
adc
movsl
pusha
lahf
jg
sbbb
push
cmp
mov
xor
xchg
push
das
int
cmp
clc
divps
add
mov
adc
je
into
xorl
cmp
mov
sub
xchg
sahf
aad
shl
jns
mov
jno
shrl
sbb
loop
or
fs
or
ss
jge
mov
lahf
out
push
cmp
stos
inc
xor
add
cmp
dec
decl
mov
gs
scas
mov
push
lret
ret
xor
fildll
clc
fwait
adc
and
data16
arpl
js
mov
sub
lock
popf
arpl
xchg
xor
inc
add
dec
addr16
inc
xchg
sbb
outsb
insl
push
les
push
sub
stos
add
lea
orb
lret
pop
stc
and
adc
sbb
mov
fiadds
inc
add
aam
nop
jb
push
pop
dec
adc
mov
jecxz
enter
push
js
dec
ja
cwtl
inc
daa
int
adc
decl
push
xor
dec
push
les
pop
push
push
jge
dec
xchg
jno
addr16
das
mov
sub
pop
xor
and
xchg
insl
je
imulb
daa
insl
out
sbb
cltd
mov
loop
xchg
mov
syscall
mov
lret
pop
pop
xor
cli
sbbl
imul
pop
xlat
xor
dec
hlt
mov
pop
lcall
cmp
adc
data16
clc
data16
xchg
xor
sub
xor
jne
out
jbe
lods
pop
inc
popa
mov
jp
adc
fcmovne
pop
nopl
add
movsl
int3
test
int
mov
ja
push
jp
lea
mov
test
mov
sbb
jp
shl
mov
inc
stos
cs
out
xchg
pop
xchg
add
xor
bnd
insl
push
xor
mov
mov
xchg
movsl
mov
pop
xor
sbb
dec
mov
mov
or
cmp
aas
mov
push
cmpsl
or
pop
push
fdivl
xchg
fnstsw
sbbl
xchg
and
imul
inc
mov
pop
mov
out
mov
adc
fimull
ja
in
outsb
dec
pusha
push
mov
fists
mov
mov
mov
xchg
ljmp
out
push
or
xchg
mov
push
and
ja
insb
push
add
jnp
out
fnstcw
mov
cmp
mov
cli
iret
push
pop
cmpsb
ret
jns
mov
inc
xor
test
adc
push
or
adc
push
mov
xchg
push
push
xchg
imul
mov
inc
clc
cltd
rcrb
mov
mov
xlat
leave
dec
jmp
hlt
lret
shrl
arpl
mov
jge
and
sbb
shrb
test
add
mov
scas
pop
sub
fisubrs
pop
xor
adc
out
popf
and
sub
push
adc
lret
fnstcw
xor
or
daa
loop
add
mov
xor
imul
pop
inc
dec
adc
mov
movsl
jge
inc
and
data16
jp
push
mov
push
push
std
push
and
rcrl
stc
push
pop
jp
lret
testb
push
clc
push
push
and
cli
mov
cmp
out
adc
enter
dec
xchg
sbb
inc
add
cwtl
divb
daa
lea
int
popa
sub
xchg
repnz
pop
dec
adcl
fsubrl
lods
sub
cwtl
and
daa
cli
test
push
add
add
sbb
mov
dec
mov
lock
mov
std
jecxz
xchg
mov
push
xor
fdivs
adc
shll
mov
mov
and
inc
mov
aad
add
shl
jnp
stc
movb
fs
insl
aad
cld
push
dec
lods
mov
sbb
rorl
xor
push
int
lods
mov
es
sbb
dec
gs
xchg
loopne
xchg
xor
xchg
popa
adc
test
push
sbb
inc
data16
sbb
mov
push
xlat
inc
add
or
or
cmp
add
xchg
mov
push
popa
fsubrs
pop
xor
push
inc
movsl
adc
fldenv
outsb
ret
scas
adc
clc
hlt
test
nop
lret
dec
out
pop
lods
cmp
adc
ficompl
loope
cs
pop
bound
push
daa
inc
addr16
mov
jb
push
and
mov
je
push
add
stc
shlb
adc
std
lock
add
xchg
mov
lret
mov
frstor
adc
ret
pop
shl
mov
call
stos
das
lcall
mov
add
and
imulb
popa
dec
or
loope
inc
mov
out
cmpsl
cld
push
test
lret
insb
mov
and
xor
cltd
pop
mov
shl
addb
push
aam
sub
es
in
clc
mov
pop
fs
sbb
dec
push
mov
push
and
mov
movq
jmp
adc
test
cmp
push
xor
push
cmp
push
mov
iret
mov
xchg
mov
mov
imull
stc
outsl
mov
dec
xchg
cmp
mov
xor
int
or
les
popf
inc
add
mov
xchg
data16
lods
popa
dec
jle
incb
inc
xor
std
fcomps
dec
into
das
jne
mov
add
bound
sbb
ss
in
mov
xchg
jo
sbb
daa
lret
out
push
addr16
mov
jp
aas
lea
sarl
subl
in
neg
pusha
mov
mov
xchg
jmp
mov
mov
xchg
loope
jnp
mov
mov
jecxz
dec
stos
and
popf
and
mov
insb
mov
imul
push
test
inc
adc
add
ret
jl
rcr
inc
cmp
jbe
loop
ficoms
into
jo
lods
push
push
push
or
fcomp
add
mov
sbb
dec
jbe
repnz
lret
or
and
or
push
fmulp
hlt
push
loopne
arpl
shll
sbb
test
mov
in
fwait
aad
add
daa
sbb
push
xchg
ficoms
xchg
jo
test
and
sti
push
cmp
add
or
jbe
pop
add
enter
daa
loope
cmp
cmp
jno
aam
jl
gs
dec
jg
inc
push
daa
je
movsl
test
add
pop
imul
push
enter
mov
js
jl
sub
js
in
mov
xchg
frstor
loope
inc
loope
mov
cmp
fidivrl
das
insl
rclb
mov
scas
incl
scas
pop
add
scas
test
imulb
sahf
ret
mov
dec
pop
leave
lea
jne
rcr
sbb
imull
adc
xor
cmp
jg
mov
sahf
mov
mov
and
and
pop
adc
outsb
int
testl
outsb
jmp
sbb
iret
and
pop
push
jge
daa
test
loop
and
fs
push
xchg
adc
pop
inc
lods
lcall
out
ds
and
test
aas
cmp
stc
mov
mov
jge
cmpsb
shl
xchg
pop
add
mov
imul
pop
add
mov
mov
sbb
out
lock
orb
mov
jae
stos
sti
mov
sbb
aad
and
nop
cli
jp
dec
and
aas
sahf
dec
pop
les
cmp
dec
sahf
mov
pop
scas
shr
cmpsl
xor
enter
pop
or
pushf
in
cmpsl
jmp
and
movsb
rolw
sbb
and
xor
je
inc
xchg
jecxz
sbb
mov
cwtl
mov
shll
in
addl
mov
stos
mov
popf
pop
lock
cmp
loop
inc
mov
mov
or
out
xchg
subb
aas
dec
add
cmpsl
loopne
ds
mov
sti
xchg
lret
ss
testb
dec
mov
test
pop
loop
cmp
ret
push
es
mov
xor
fcompl
xchg
mov
dec
ljmp
cmc
lods
cs
mov
ror
xchg
lcall
paddusw
iret
add
mov
cltd
dec
fisubl
mov
xor
push
add
ds
cltd
cmp
test
jge
xchg
sub
shll
addb
ja
add
imul
rorb
pop
xorb
insl
mov
ss
dec
mov
dec
pop
shll
ret
decl
xor
inc
dec
pusha
mov
fwait
popf
jl
push
in
or
jne
mov
mov
out
push
in
adc
jns
xchg
movsb
in
inc
dec
xchg
mov
lret
jb
push
pop
pop
or
dec
push
addr16
sub
jp
scas
jae
adc
sbb
in
sub
repnz
mov
in
in
pusha
push
inc
mov
nop
sbb
pop
ds
jmp
xorb
out
add
mov
and
add
add
jmp
sub
scas
jnp
cmpsl
test
push
int3
imul
movsl
movsb
iret
aam
adc
inc
mov
pop
clc
out
fadds
sahf
jae
out
sub
xchg
loope
or
leave
sub
inc
mov
out
mov
data16
cmp
imul
loope
push
daa
pop
lds
fwait
rorb
jo
pop
jnp
leave
cmp
inc
andb
push
inc
xchg
dec
inc
jge
add
aaa
jb
int3
or
inc
sbb
push
xor
mov
xchg
xor
lret
jl
scas
push
pop
inc
cmp
cltd
aas
movsb
sar
ficoml
or
imul
enter
daa
loopne
idivb
pop
xlat
sbb
popa
pusha
jl
inc
pop
dec
out
lcall
mov
and
stos
jp
mov
popa
mov
push
xchg
sbb
inc
sbb
cmpsb
call
fstps
ds
inc
pop
push
scas
fabs
sub
push
cmp
in
ds
out
adc
jle
xchg
or
flds
out
jle
stos
sbb
lds
and
sub
rorb
aaa
pop
push
int3
jne
fadd
push
outsb
mov
adc
imulb
dec
mov
xchg
mov
cwtl
shlb
mov
into
push
cmp
stc
cmp
sub
push
testl
add
sbb
mov
int
sbb
xchg
into
push
pop
xor
xor
stc
xor
fisubs
cmp
out
adc
lods
adcl
out
js
cli
inc
ljmp
add
leave
or
add
loop
jecxz
lods
pusha
and
pusha
pop
pop
and
adc
imul
xor
pop
jge
inc
add
cmp
mov
push
sub
popf
mov
fdivp
stos
sti
iret
cli
jnp
aad
into
mov
test
pop
fsts
mov
les
repz
out
jb
fs
dec
adc
xchg
jge
inc
mul
pop
adc
push
pushf
nop
jp
pop
and
mov
or
inc
popf
xchg
mov
in
shlb
xchg
mov
lahf
xlat
je
shll
sbb
std
ds
or
push
cmp
mov
mov
push
adc
mov
mov
lock
mov
pop
inc
dec
mov
sbb
and
test
rcrl
divb
ftst
insl
fwait
jecxz
dec
in
cmpsl
filds
mov
xchg
jne
cld
insb
inc
jge
movsl
loope
mov
and
and
push
xchg
jge
cwtl
jo
sub
inc
cmpsl
aam
inc
std
ret
loope
push
roll
fstp
and
pop
xor
ljmp
push
lods
cltd
mov
mov
jecxz
pop
xchg
loope
cmpsb
push
insb
cs
icebp
pop
add
aaa
das
cltd
sub
sub
ret
add
test
shlb
sbb
in
shl
sbb
stos
sti
lods
or
mov
mov
aas
pushl
mov
or
es
mov
mov
cmp
jb
pop
loopne
ja
pop
mov
inc
fistps
xlat
fwait
int3
test
jne
mov
out
out
das
sti
loope
cmp
jns
pushf
loopne
cwtl
pop
out
xchg
push
fnsave
cmc
int
or
mov
addr16
daa
insb
jp
sarb
ljmp
mov
adc
imul
pusha
out
mov
rcll
dec
adc
dec
jge
andl
mov
mov
popa
int3
adc
sbb
cli
jnp
test
jle
jae
push
adc
adc
test
xor
ret
dec
pop
das
test
inc
push
aaa
scas
jae
inc
xlat
push
push
jo
or
inc
addr16
pop
scas
xor
imul
xchg
insl
xor
in
outsb
imul
mov
vpcmpgtb
stos
jbe
mov
scas
add
leave
mov
test
lods
clc
or
out
cli
inc
lcall
sbb
cmp
or
lret
or
into
pop
mov
jb
xor
es
shrl
aas
dec
push
cmp
mov
push
add
pusha
jbe
out
in
mov
pop
enter
daa
dec
cmp
cli
jno
adc
add
fimull
sbb
lods
repnz
xchg
add
lahf
xlat
mov
push
add
daa
push
pop
jge
inc
test
push
dec
pop
out
inc
or
xchg
popa
pop
adc
push
add
loope
add
sub
ret
pop
push
jne,pt
jp
test
pushf
imul
cmp
and
sbb
jp
xchg
cmc
test
and
cwtl
int
shlb
add
inc
lcall
mov
outsl
xlat
iret
sub
rcl
outsb
icebp
sub
adcb
test
mov
sbb
mov
repnz
in
push
push
cmp
cmp
in
leave
testl
scas
jmp
mov
and
sbb
push
sub
xchg
mov
inc
outsl
lahf
inc
popa
loop
or
fs
push
add
ss
xchg
ss
lods
push
rcl
mov
addr16
push
adc
cmp
clc
cmp
cltd
out
sbb
lds
inc
loopne
lods
pop
aas
mov
lea
add
adc
add
retw
sbb
sbb
fs
xlat
add
sub
mov
popf
in
dec
and
aad
sbb
loopne
nop
mov
adc
mov
inc
fidivs
outsb
rol
push
stos
xor
dec
sbb
sub
sbb
mov
mov
lock
cmp
cs
stc
inc
sbb
sbb
aas
mov
mov
lods
call
jecxz
subl
std
in
xchg
cwtl
xor
je
jp
sbb
dec
out
sub
dec
sub
popf
mov
xor
jns
aaa
pop
pop
mov
cmp
and
add
div
jne
add
inc
jl
stc
jl
cmpsl
fsubp
jmp
jecxz
or
imul
cld
xchg
arpl
adc
or
push
pushf
jns
add
add
out
inc
shrb
jb
daa
movsb
fcmovbe
inc
int
ret
jo
sbb
inc
std
cmp
add
test
add
popa
dec
adc
mov
push
test
xchg
sub
mov
setnp
rolb
sbb
cltd
mov
jne
mov
add
push
xchg
dec
addr16
and
inc
mov
sbb
out
rorl
cmp
stos
ljmp
add
lahf
mov
aaa
xor
ss
or
mov
shlb
cmp
lds
ret
ja
jg
dec
push
pop
mov
or
cmp
push
xor
jne
push
pop
mov
jne
out
push
or
inc
jns
inc
repz
push
adc
data16
sub
fdivs
inc
jp
test
push
mov
rcl
loop
aaa
not
in
ljmp
into
push
popf
xchg
add
rcll
mov
add
gs
in
sbb
push
mov
jle
and
cmp
ljmp
jnp
outsb
hlt
jle
cwtl
add
mov
adc
sbbl
addr16
pop
add
pop
hlt
push
jae
push
pop
jae
or
mov
mov
cli
xchg
les
js
nop
xchg
xchg
imul
lock
sbb
lds
lret
xchg
pop
mov
ror
xchg
jno
testl
pop
inc
popf
popf
icebp
jge
jae
sbb
stos
fimull
je
mov
jl
outsl
int3
hlt
ret
ja
out
neg
sti
push
cmc
xor
sbbl
fnstcw
xchg
cwtl
lock
out
sub
pop
movsl
jbe
xlat
addr16
jne
fmul
negb
inc
daa
fiadds
cmp
mov
jl
sbbb
sarb
sbb
push
cmp
arpl
in
test
sub
inc
cmp
in
cmpsb
add
sub
pop
push
movsl
dec
push
or
push
outsl
test
cmp
dec
ds
mov
adc
xor
les
or
aam
push
mov
add
call
not
out
fs
mov
mov
lcall
out
sbb
mov
outsb
push
adc
fadds
mov
loopne
mov
xorb
add
add
fcomps
orb
dec
sub
rcr
mov
dec
int3
sbb
cmpl
pop
test
xor
addr16
jle
enter
hlt
stc
mov
ljmp
or
stc
lods
dec
pop
dec
mov
jmp
cli
test
repnz
mov
or
mov
fsubl
lret
push
jge
pop
pop
sub
imul
inc
add
inc
stos
cs
lahf
mov
jp
aaa
scas
imul
rcrb
inc
out
aad
push
sbb
inc
push
inc
icebp
sti
cld
flds
adc
xchg
clc
lahf
rorb
jl
clc
movl
adc
or
jmp
jns
cs
xor
mov
aas
sub
cli
dec
addr16
lea
call
push
sbb
std
mov
sbb
insl
enter
clc
cmpsb
dec
ljmp
pop
dec
mov
shl
adc
mov
lock
and
mov
sar
rorl
imul
jge
push
mov
icebp
inc
pop
outsb
cld
ret
lret
andl
sarl
and
sahf
into
mov
push
out
push
sarb
xor
sub
stos
aam
lods
mov
es
addr16
repnz
xchg
outsl
jl
popa
bound
lods
outsl
shl
mov
sub
push
and
dec
psubd
add
loopne,pn
out
idivb
test
out
dec
iret
iret
push
dec
inc
cmp
sub
mov
cmp
sbb
push
mov
lock
stos
lret
out
test
add
mov
sub
xor
pop
in
or
fdivl
icebp
xor
aas
stos
add
pop
jge
insl
ja
and
dec
jg
inc
or
dec
out
sub
fwait
push
sbbb
inc
dec
insb
mov
fmulp
out
in
and
pusha
fiadds
jle
dec
in
fsubs
lods
movsl
arpl
ret
popa
adc
roll
addr16
xor
mov
cs
mov
aas
data16
sbb
in
add
pusha
and
inc
sub
shll
mov
add
add
xchg
inc
popf
adc
mov
fcomip
add
lock
mov
dec
add
sbb
jg
push
mov
push
mov
or
iret
icebp
lds
jp
mov
popf
push
addl
jae
mov
sti
or
cmp
cmp
rcr
xor
cmp
push
imul
push
out
or
loopne
pop
mov
push
cmpsl
pop
leave
mov
popa
pop
arpl
jae
jge
subb
dec
dec
mov
or
sub
adc
fisttps
pop
push
ficomps
xor
fmull
sbb
cmp
movsb
jno
test
lds
cmp
in
pop
pop
je
icebp
adc
daa
insl
cmp
loopne
jl
fiadds
cmp
push
mov
mov
mov
movsb
fs
adc
cmpb
hlt
cmp
mov
cmp
js
lea
pop
lcall
insl
add
cmp
jl
mov
scas
pop
rorb
xor
pop
insb
ljmp
dec
jle
xor
mov
sub
push
pop
lds
lcall
aam
lds
jmp
ror
loop
mov
mov
jmp
mov
jg
bound
mov
daa
add
mov
cmp
stos
mov
arpl
jle
nop
lret
jb
pop
cmc
sahf
mov
jbe
sahf
cmpsl
imul
xor
outsl
lods
loop
mov
es
xlat
adc
cmp
ss
pop
adc
push
loope
out
ds
cli
fdivrl
xor
fidivrs
inc
orb
sbb
mov
sub
repnz
mov
imul
ljmp
leave
stos
sub
fisubl
push
stos
push
sbb
rcl
push
in
pop
cli
sti
outsl
inc
test
arpl
aad
cs
pop
mov
mov
clc
cmp
mov
int
repz
push
sti
xorb
les
pop
sub
in
adc
into
sbb
leave
jg
xor
imul
cbtw
aas
leave
xchg
jno
dec
fidivs
test
inc
cmc
and
mov
test
les
pusha
xchg
sbb
std
push
pop
lock
shlb
mov
test
cmpsl
inc
iret
and
mov
jae
sti
pop
xor
lods
push
dec
out
in
fsubrl
icebp
sbb
adc
in
sbb
dec
jmp
movsb
xor
mov
and
fisubs
adc
fdivp
ret
mov
test
dec
inc
pusha
fstl
fwait
clc
enter
scas
inc
xchg
ljmp
sti
lods
ficompl
mov
mov
jg
std
inc
dec
mulps
cltd
cltd
es
push
inc
sahf
mov
loopne
push
or
in
xor
dec
jge
add
negb
cmp
jbe
fwait
mov
stos
enter
call
mov
test
xor
or
jp
xor
dec
mov
inc
cwtl
mov
cmp
jl
fimuls
dec
cmp
lds
xor
pop
cmp
push
jns
popf
jne
scas
mov
out
int3
cmp
xor
mov
xchg
sti
fiadds
mov
add
sub
into
gs
cmp
inc
jp
jae
mov
inc
sbb
mov
aam
lds
outsb
fisttps
jo
cmpsb
icebp
add
xor
dec
xchg
lods
fsub
adcl
out
mov
loop
notl
push
push
leave
test
and
add
cmp
inc
cmp
mov
fwait
adc
lods
stos
iret
push
sbbb
lea
outsl
inc
jae
sub
fisubrs
popf
aam
or
mov
add
imul
test
inc
xchg
jb
out
sbb
sub
imul
lds
cmpsl
sar
cmp
test
xor
sbb
hlt
lea
jge
int3
sbb
inc
mov
jne
sbb
xor
aaa
outsb
mov
adc
stos
ss
movsl
ficompl
int
fiadds
divl
aaa
push
scas
in
out
clc
inc
push
movsb
cld
mov
mov
sbb
jne
enter
daa
fcoml
xchg
jno
std
adc
test
sub
push
xchg
stos
les
xchg
rcrb
jnp
in
test
mov
mov
pop
mov
push
pop
into
adc
and
loope
mov
jl
roll
ficoms
adc
ljmp
xorb
xchg
sbb
scas
mov
or
xor
ret
insl
loope
int
inc
push
sub
pop
inc
sahf
aad
adc
fdivl
or
shr
outsb
sbb
cltd
test
test
jg
adc
and
mov
mov
es
inc
fidivl
push
in
fcoms
sarb
shr
or
sub
mov
xor
popa
xor
mov
loop
imul
and
imul
mov
pop
fistpl
insb
cmp
stos
mov
out
and
sub
ljmp
nop
mov
adcl
sub
lcall
sbb
adc
out
sub
push
pop
in
mov
adc
xchg
rcl
or
inc
add
dec
add
ss
pop
sub
out
mov
scas
repz
dec
push
xchg
jle
xchg
lea
inc
call
inc
dec
add
fimuls
mov
cs
out
inc
mov
cli
inc
or
aas
push
lods
repnz
push
lods
push
je
dec
pop
jecxz
xchg
test
and
inc
std
fiaddl
imul
jne
jb
rolb
fcompl
ret
pop
xchg
cmp
mov
push
xor
push
lcall
and
mov
inc
push
push
rcll
outsb
sahf
insl
aaa
mov
dec
ljmp
mov
lock
cld
sbb
rorl
mov
mov
inc
push
or
in
js
or
ds
gs
sbb
cwtl
fnsave
cmp
xchg
in
add
ljmp
shrl
adc
outsl
sbb
push
fdivs
into
pop
add
jge
pop
xchg
pop
test
shlb
iret
push
pop
dec
pushf
xchg
out
mov
lret
sub
sbb
sahf
jmp
pop
inc
loopne
stos
mov
xchg
out
dec
call
stos
add
xchg
pop
ljmp
xchg
data16
jae
or
adc
or
imul
jo
inc
stc
cmpb
ret
popf
negb
inc
cmp
adc
fwait
mov
push
sbb
sbb
mov
in
daa
out
stos
pop
dec
bound
push
xchg
in
loope
xchg
dec
pop
sub
xchg
test
or
sbb
inc
jp
addr16
mov
jp
mov
sbb
pop
jnp
int3
popa
and
jb
fildll
sub
jns
movsb
jmp
ja
rolb
out
popf
popa
cld
dec
mov
pop
and
pop
and
add
jnp
push
adc
mov
repnz
ds
mov
cmc
lock
jle
mov
mov
xor
xor
cmpsl
inc
add
outsl
fidivl
jp
xchg
leave
lret
adc
imul
rol
ret
push
xor
repnz
sbb
mov
arpl
pop
faddl
jnp
jge
dec
mov
ret
aaa
sub
pop
xchg
add
xchg
mov
repz
je
in
scas
xor
xchg
movsb
mov
and
in
movsb
xchg
adc
pop
jbe
arpl
in
sub
enter
daa
fstpt
cmp
jo
jno
cmp
adc
mov
loop
scas
adc
lahf
push
push
das
push
dec
inc
das
test
mov
inc
in
inc
cmpsb
mov
test
ss
mov
adc
xchg
push
fwait
xchg
test
cmp
xchg
cmp
rol
nop
fmull
inc
lcallw
stc
mov
rdpmc
sarb
in
xor
mov
sub
fcmovu
pop
ret
fwait
or
jg
fcompl
fcmove
sub
mov
testl
mov
jo
outsl
mov
in
arpl
mov
ss
shl
ds
mov
fcmovb
xchg
sbb
outsb
mov
mov
mov
dec
std
or
loop
inc
push
stc
fisubrs
mov
adc
ja
sarl
dec
mov
out
push
cli
inc
adc
mov
sbb
in
or
clc
into
push
mov
rclb
loopne
aas
je
mov
sub
imul
pop
test
iret
or
cmc
mov
dec
xlat
cld
test
nop
les
mov
cmc
es
sti
int
push
test
or
or
lahf
inc
inc
sub
les
rorl
xchg
inc
push
leave
leave
sarl
in
cmc
mov
pop
xchg
xchg
in
adc
lds
mov
imulb
jno
and
mov
jb
sbb
dec
int3
dec
push
je
jl
jecxz
jns
daa
es
or
sti
mov
pop
adc
or
imul
fisttpl
inc
xchg
pop
ss
mov
adc
lock
mov
das
mov
push
mov
adc
ret
fs
xchg
testb
cmp
in
pop
cmpsl
fiaddl
cmp
stos
idiv
inc
and
lret
shrb
mov
add
mov
arpl
xor
aam
inc
mov
lods
push
cmp
sahf
push
pop
clc
ds
xchg
sub
mov
popa
cmpsl
out
pop
lods
mov
xchg
mov
xchg
rcl
xchg
inc
test
mov
or
pop
adc
cltd
xchg
xlat
insb
test
cs
int
push
xchg
xchg
dec
add
fwait
test
sub
xchg
in
pop
sbb
mov
stos
cmpsb
icebp
xchg
out
scas
cmpsl
or
or
mov
sbb
ja
lret
xor
lds
push
movsl
xchg
sbb
scas
sub
add
inc
shr
dec
or
jnp
fwait
mov
push
jne
xchg
inc
mov
xchg
sbb
mov
sbb
pusha
in
fs
cltd
sbb
test
or
imul
jp
push
add
out
nop
mov
ret
mov
in
cmpsb
shlb
inc
fisttps
xlat
xchg
dec
add
jmp
inc
fs
xorl
out
mov
mov
fs
pushf
add
adc
insb
stos
adc
sti
jle
mov
push
jbe
ficoms
mov
push
iret
push
add
inc
loop
inc
mov
cltd
jae
out
test
and
dec
or
stos
aaa
cmc
inc
subb
xlat
scas
xchg
and
cmp
jmp
scas
cmpsl
inc
test
jl
mov
xor
repnz
cmpsl
dec
leave
pop
ja
hlt
and
ljmp
jge
push
pop
sbb
sti
aaa
in
xor
inc
sbb
add
xchg
int3
mov
and
push
xor
in
dec
push
scas
mov
xchg
imul
inc
jb
adc
cmpsl
push
lea
cwtl
in
adc
enter
daa
cmp
dec
inc
sub
jl
ljmp
pop
insb
cmp
mov
mov
mov
or
push
and
jle
out
push
dec
push
inc
je
xor
mov
mov
pop
dec
xchg
push
das
iret
loope
xchg
cltd
sub
sbb
cmp
xchg
dec
ds
xor
mov
xor
sbbb
sbb
aaa
mov
xor
dec
int
pop
sbb
push
sub
inc
sbb
aam
xchg
jns
insb
fisubrl
sahf
jg
outsb
loopne
or
cwtl
addr16
jg
mov
mov
inc
outsb
and
stc
dec
push
dec
test
fmuls
das
or
int3
pop
rcrl
addr16
out
sahf
nop
fbld
xor
mov
bound
stc
jle
push
fs
pop
sbb
lods
jmp
sbb
inc
addr16
cli
jne
mov
mov
pop
cmp
repnz
les
jecxz
xor
in
xlat
dec
and
cmpsl
clc
pop
fiaddl
mov
ss
mov
mov
outsb
push
push
xor
mov
xlat
cmp
cmpsb
mov
pusha
jns
sti
jl
lahf
dec
lret
cltd
adc
dec
mov
and
fstps
out
les
pushf
jg
add
and
xor
ret
mov
pop
inc
dec
lea
int3
sbb
xchg
rorb
jmp
push
shrb
pop
pop
loope
rolb
aas
in
cmpl
js
repz
inc
mov
jno
mov
sub
sub
sub
adc
fidivrl
mov
lock
mov
cld
nop
andl
ss
pop
fldenv
call
das
xchg
call
dec
mov
pop
lds
xor
xchg
lock
jns
dec
loopne
cmc
cmpsl
fnstcw
aad
sahf
and
cld
outsb
xchg
lret
aas
mov
into
and
or
sub
mov
lret
sub
sub
cmp
ret
cmp
je
rcrl
push
xchg
imul
aas
mov
or
mov
mov
sbb
push
mov
and
jbe
sub
cltd
lret
mov
addr16
stos
in
push
push
xor
test
testl
push
mov
roll
movsb
out
pushf
add
out
adc
add
es
ljmp
xor
or
xor
pop
shlb
pop
mov
imul
dec
push
xor
add
or
fdivl
fwait
out
lods
push
bound
jne
and
imul
xor
fidivrl
pop
xchg
call
icebp
out
sub
mov
jecxz
jp
imul
sbb
xor
sti
arpl
cmpsb
or
in
dec
sti
pusha
xchg
inc
push
fildll
ficoml
pop
jno
xchg
or
cmpsl
adc
popf
scas
pop
sarl
fldt
stos
mov
xchg
stos
insb
push
push
jb
aam
loope
ficomps
into
adc
xchg
iret
insl
pop
mov
jno
xchg
xchg
test
fcoml
push
out
dec
or
es
popf
jmp
insb
sbb
vpackssdw
push
scas
or
in
lds
lret
dec
or
repnz
mov
outsb
and
arpl
scas
cld
inc
lods
push
or
cld
movsb
aad
cmp
aaa
stos
stos
test
xor
daa
add
ret
scas
gs
shlb
fisubrs
adc
xor
dec
or
dec
and
dec
mov
popf
lds
fmull
jbe
pop
adc
clc
pop
ror
fnsave
fwait
cmp
jno
sub
jl
xchg
into
dec
mull
or
aas
cmp
movsl
mov
or
lahf
xchg
lret
hlt
xlat
movsl
test
and
cmpsb
xchg
inc
movsb
pop
sub
outsb
pusha
pop
mov
mov
sub
dec
cmp
loopne
lret
ds
out
pop
adc
jnp
jge
movsl
jns
subb
sbb
jns
imull
lods
xor
push
mov
sbb
sub
jne
pop
shll
lcall
sbb
jno
jmp
out
cmp
lock
and
mov
int3
out
cld
inc
mov
and
xchg
cmp
inc
jecxz
idivl
std
lret
mov
mov
repz
ljmp
aas
dec
pusha
xor
outsl
cmp
imul
loop
popf
mov
mov
aas
fwait
ss
jmp
push
out
jle
cli
test
icebp
xor
mov
or
mov
data16
pop
stc
orb
adc
adc
test
mov
sbb
lcall
jbe
lock
lret
lahf
push
out
sub
stos
nop
sarb
dec
sbb
lock
jns
les
lods
imul
jecxz
stc
mov
mov
adc
shlb
cmp
sub
call
or
inc
inc
sub
inc
pop
jmp
aas
inc
jno
jb
xchg
outsl
dec
mov
fstps
jecxz
or
je
iret
or
xchg
insb
fs
pop
scas
mov
or
orl
xlat
pop
jl
or
cmc
xor
mov
or
and
sbb
roll
pusha
xchg
das
rorb
mov
fdivs
mov
jne
xchg
cld
cltd
jl
lret
scas
cwtl
sbb
xor
mov
movsl
dec
xchg
pop
mov
popf
push
aam
repnz
lret
es
dec
dec
fucomp
or
clc
mov
cmpsl
xchg
stos
dec
jmp
popa
aad
push
lods
xchg
or
fcomps
xchg
shlb
cmpsb
pmullw
push
cltd
add
jl
sub
sbb
dec
shl
int
and
xchg
testl
pop
jecxz
pop
inc
jmp
test
jp
je
imul
es
decl
movsb
xor
test
mov
dec
xchg
mov
dec
aam
mov
and
scas
ja
adc
dec
or
inc
add
add
push
add
adc
dec
int3
pop
bound
xor
jns
lods
jle
gs
xchg
aaa
insb
divb
inc
jmp
nop
cmp
jp
js
mov
stc
mov
inc
push
mov
mov
in
pop
inc
pusha
sub
mov
xchg
repnz
jmp
fdivrs
push
orl
test
mov
sbb
stos
das
loope
and
bound
andl
add
push
add
xor
inc
hlt
icebp
iret
int3
xchg
pop
ret
loope
mov
push
inc
lahf
inc
daa
jae
push
xchg
push
test
jne
push
xor
ficoml
mov
sbb
dec
iret
imul
scas
insl
lcall
addr16
xchg
hlt
push
xchg
leave
cmc
inc
xor
and
arpl
mov
out
mov
lcall
es
add
imul
pop
add
call
jo
fisttps
and
cmp
testb
sub
and
add
ffreep
xchg
enter
daa
fcomps
cmp
fsubrs
jl
pop
pop
dec
data16
movsl
ret
xchg
fsubl
repz
jp
mov
xchg
push
outsl
cmp
jmp
mov
cmpsb
pop
stos
mov
js
cwtl
ficoml
lret
push
stc
and
std
subb
add
ds
fstl
push
mov
popl
mov
sahf
dec
sti
add
cmp
cmp
mov
int
add
sub
inc
pop
inc
lods
lcall
jl
sbb
scas
sub
outsb
cmpsb
xchg
inc
test
out
pop
or
mov
lret
jae
push
mov
and
sub
adc
push
movsb
cmp
add
dec
idivl
lahf
and
add
rorl
mov
mov
sahf
pushf
pop
cmc
push
outsb
lods
xor
call
loop
pop
sub
in
push
fs
fsts
pop
stos
loope
lcall
mov
dec
out
fmuls
xor
sbb
pop
mov
or
insb
push
gs
das
loopne
mov
pop
sbb
cmc
adc
std
ljmp
jmp
add
dec
andl
sti
sarl
add
adc
mov
sub
ds
ss
adc
je
lods
jae
dec
jl
jge
arpl
inc
fxch
add
pause
add
push
repz
aas
fistpl
stos
aad
adc
mov
jmp
aam
cs
test
inc
into
jne
inc
jne
loopne
in
xchg
jb
mov
add
jecxz
mov
call
cwtl
push
out
fwait
mov
mov
inc
adc
sahf
inc
fistpl
mov
xchg
jp
push
adc
das
push
ds
mov
cmp
frstor
les
testb
insl
ror
xchg
dec
int
cmpsl
xlat
stos
and
dec
jl
cld
les
lret
sbb
pop
push
and
inc
movsb
jl
rclb
xor
sub
inc
lock
enter
inc
xchg
fldcw
fstl
mov
lock
jmp
cmp
sahf
lods
icebp
add
mov
sbb
sysenter
in
fldl
mov
jg
cmp
xchg
mov
xor
push
fcmovnu
cs
cmp
xchg
pop
sbb
inc
or
or
xlat
popf
mov
add
ljmp
popf
jae
das
iret
divl
lea
push
add
fwait
pop
test
dec
cld
adc
xchg
lcall
inc
pop
fistpl
test
mov
mov
cli
inc
out
daa
cli
sbb
inc
scas
jns
shrl
xchg
xchg
jp
cmp
sub
mov
mov
aaa
xchg
bnd
cmp
mov
shrl
fsqrt
pop
dec
insb
mov
in
int
pusha
fs
cmpsl
sub
xchg
lds
cwtl
jmp
mov
ja
out
sub
cmp
push
pop
mov
cmp
shlb
mov
jle
dec
iret
push
dec
push
jl
sbb
aad
sub
ret
pushf
pop
out
test
xor
xor
insb
ss
and
mov
fiaddl
sub
xchg
and
movsl
jns
dec
adc
shlb
jae
adc
rolb
sub
leave
insb
popf
mov
add
jge
pop
setb
sti
jge
mov
aaa
sub
push
or
push
insb
add
fcoms
pop
xor
fidivs
mov
jo
lds
scas
aas
push
shlb
xlat
pushf
sarl
xchg
inc
xchg
movsb
mov
rcll
inc
sbb
and
in
dec
adc
shl
sub
cmp
clc
adc
jl
imul
aad
iret
push
add
loope
and
push
cmp
cmp
push
mov
in
inc
and
pop
daa
imul
lea
pop
or
add
loope
push
out
ds
lock
xor
arpl
adcb
lods
add
xchg
fdivs
or
stc
cmp
int
sub
outsl
pop
mov
inc
rcll
test
fadd
sbb
sub
subb
pop
test
mov
jg
shll
mov
cld
jbe
ljmp
and
xchg
insb
push
push
jmp
sbb
xor
lret
inc
shl
pop
mov
outsl
sbb
sahf
jns
pop
cmc
int
mov
mov
cmp
loop
lds
mov
and
ss
push
lods
mov
and
mov
inc
cli
push
mov
in
cmp
adc
or
sti
push
into
frstor
pop
loopne
pop
dec
pop
aaa
mov
imul
xorl
data16
test
xchg
xlat
fdivrl
cmp
lods
xlat
clc
and
dec
mov
mov
loopne
xor
jp
nop
mov
pop
inc
jbe
mov
add
les
cwtl
pusha
xchg
dec
stc
out
lea
ljmp
dec
sbb
test
pushf
pushf
xchg
mov
fsubrs
cmpb
inc
push
and
fstpt
cmpl
jno
dec
dec
test
hlt
je
test
jecxz
mov
xor
cli
cwtl
or
mov
rcl
adc
jne
push
pop
loop
sahf
sub
mov
xor
das
das
outsl
repz
icebp
push
adc
and
push
testb
pop
dec
roll
cmpsl
push
mov
and
cld
out
and
lret
mov
imul
mov
fisttpl
jns
add
jo
fwait
repz
call
add
fnstsw
push
jns
sub
xchg
ljmp
pop
lods
pop
lds
adc
cmp
pusha
push
in
pop
mov
add
push
or
xchg
test
mov
fmul
push
sahf
in
dec
lahf
aaa
push
test
fsubrs
xchg
adc
sbb
push
into
lds
cmp
hlt
add
ud0
push
xor
mov
xor
and
and
xchg
mov
lcall
dec
out
jbe
inc
cs
or
cli
sbb
dec
jmp
jne
sbb
out
push
sub
bound
mov
lcall
aad
das
mov
repnz
adc
jl
mov
inc
addr16
clc
jp
mov
mov
lods
inc
mov
dec
in
call
in
mov
push
ffreep
xor
xchg
cwtl
xchg
fucomip
cld
lds
subl
popf
and
cmpb
scas
in
stos
adc
js
insb
push
pushl
jnp
sub
jle
adc
xchg
mov
out
iret
mov
fwait
ret
mov
inc
mov
push
jae
cmp
xchg
or
xchg
jns
inc
jle
neg
mov
lock
jl
xchg
sbb
rorb
scas
xor
dec
rcrb
test
lcall
hlt
dec
and
pusha
inc
mov
mov
fdivs
aaa
call
and
add
sbb
pop
pop
push
pop
ficoms
ret
xor
pop
sar
push
dec
mull
push
sarb
dec
ss
movsb
ds
leave
test
out
in
lods
mov
jno
fstpt
cmp
sahf
cltd
jl
xchg
dec
dec
inc
call
push
call
xchg
and
stos
dec
lahf
out
pop
lods
push
insl
cmp
test
subl
ljmp
test
pop
dec
mov
aas
loope
clc
pop
sub
mov
in
push
ds
ret
popa
sti
rorb
push
pop
xor
sbb
or
add
dec
jnp
fildl
mov
sarb
scas
sub
icebp
pop
ds
fs
dec
fdivl
add
pop
rcll
test
enter
lahf
lret
mov
arpl
mov
stos
mov
dec
or
dec
std
incl
push
dec
ret
lahf
outsl
fdivs
fdivp
mov
sbb
push
mov
daa
pop
mov
sahf
sbb
push
xor
xor
outsl
jbe
jns
scas
cmpsb
xor
pop
cld
scas
fs
lahf
fists
std
dec
xchg
and
mov
mov
xchg
cli
inc
jb
xor
lock
cmp
outsb
inc
or
enter
adc
pop
push
sbb
adc
sbb
adc
push
add
in
pop
data16
sbb
ja
outsb
xlat
aaa
pop
jge
iret
mov
or
or
dec
sti
cmp
enter
push
aad
bswap
nop
arpl
or
mov
fnstcw
sti
push
les
je
xchg
adc
mov
call
cmp
xor
adc
lret
jp
cmp
push
outsl
inc
fdivrl
dec
inc
stos
pusha
pushf
aas
and
adc
cli
cmc
je
pop
cmpsb
jecxz
jmp
push
std
les
xorb
jo
cmp
inc
fcomi
sahf
xlat
pop
gs
mov
xor
adc
push
movsb
sbb
test
and
adc
shll
not
gs
insl
mov
iret
mov
mov
cli
mov
lret
sti
sbb
fnstenv
or
out
rcl
dec
push
sub
jmp
rol
ja
cmp
fisttps
das
frstor
cwtl
clc
gs
pop
xchg
addr16
ljmp
add
push
loope
cmpsl
test
push
cli
jle,pn
repnz
out
add
enter
loope
mov
lds
push
popa
pop
aaa
cmpsl
test
cmc
cmp
sbb
jns
pop
dec
inc
sbb
push
pop
pop
out
popf
mov
add
xchg
push
jmp
imul
xor
or
mov
push
ret
inc
mov
push
out
xlat
ja
shr
dec
loop
ret
inc
vpaddsb
std
lret
push
out
movsl
pop
jne
xor
add
in
lds
or
jns
pop
xchg
push
and
add
rcr
sub
stos
xchg
sti
addr16
fimuls
push
mov
mov
xor
pusha
in
fcmovne
pusha
std
aad
inc
fcoms
repz
xchg
cmp
cmpl
push
out
mov
dec
int
mov
xlat
and
stos
mov
out
and
arpl
insb
ret
jnp
aad
jle
lret
fnstcw
adc
cmp
iret
jmp
je
pop
push
and
jae
cmp
push
repnz
addr16
adc
std
xchg
imul
jl
xchg
aam
imul
rol
pop
mov
mov
in
popa
sub
pop
inc
xchg
hlt
lcall
inc
mov
pop
icebp
sbb
add
cmpsl
rorb
ljmp
das
int3
aaa
push
xchg
push
mov
lret
jo
into
test
std
stc
mov
add
inc
movsb
leave
mov
inc
jbe
mov
in
xchg
adc
enter
daa
aad
bound
dec
cmc
jno
mov
jl
and
adc
les
loop
inc
outsl
xchg
test
dec
push
rolb
sbb
bound
pop
or
add
mov
loope
stos
sub
push
test
rorl
adcl
mov
and
or
inc
ret
and
xor
inc
or
cmp
sub
fwait
jns
mov
lods
stos
push
mov
sahf
fcompl
push
sub
test
popa
ja
pop
shrb
cmp
mov
std
lahf
mov
lcall
pop
test
push
pop
sbb
fdivs
into
pop
divl
ror
pop
jle
rcll
and
lahf
setle
sub
outsl
push
mov
sub
adc
sbb
dec
test
arpl
push
mov
or
cli
je
scas
xor
stos
or
gs
gs
std
cltd
loopne
pop
jne
sub
push
movsb
aad
out
stc
outsb
adc
test
add
pop
mov
mov
push
xlat
jbe
shrb
inc
jmp
mov
ja
repz
out
add
jnp
cli
aad
or
nop
fldenv
cltd
jne
inc
pushf
sub
jo
addr16
lds
repz
xchg
jo
shll
sahf
lea
in
call
mov
insb
jnp
jg
leave
pushf
call
fdivr
cs
cmp
arpl
aam
rcrl
dec
xchg
outsl
jnp
inc
adcb
pop
cmp
std
imul
sub
or
xchg
insl
aad
sub
arpl
pop
or
dec
mov
fwait
imul
sbb
mov
mov
ud1
cmp
notb
movsl
test
repz
cs
cmpsl
aam
sub
rcll
sub
push
mov
pop
mov
mov
sbb
pushf
lock
mov
aam
inc
int
push
mov
bound
aad
mov
nop
inc
ljmp
std
lods
xor
pop
mov
fs
dec
push
aad
orb
in
push
add
getsec
cltd
fsubp
scas
test
testb
insl
sbb
xchg
cmp
sbb
aaa
jp
mov
rcrl
stos
inc
mov
gs
lods
pop
decl
push
out
or
mov
pop
push
movsl
mov
adc
imul
aad
aad
incl
mov
fwait
shll
push
xchg
push
or
mov
mov
push
fucomi
les
leave
jns
pop
or
xchg
push
outsl
xchg
jae
ljmp
nop
inc
or
add
jp
mov
cmc
mov
es
dec
adc
js
pusha
cwtl
sub
filds
dec
jmp
add
or
and
jge
jb
push
mov
push
sbb
and
jno
insb
sub
inc
and
ja
push
and
jp
dec
jecxz
ret
cli
pop
mov
jnp
lret
bound
push
mov
gs
lea
xor
mov
les
ds
xchg
imul
scas
stc
mov
lds
jle
mov
inc
and
hlt
in
out
inc
popf
mov
mov
sbb
sbb
inc
sbb
data16
xlat
or
loope
add
and
and
pop
mov
cmpsb
push
jo
icebp
push
scas
fdivrl
xor
mov
or
jbe
xor
jnp
arpl
les
adc
jnp
push
jno
repz
dec
and
rorl
scas
xchg
ret
pop
and
je
sub
leave
push
adc
mov
pop
dec
fiadds
ret
stos
cmpsb
and
scas
pop
pushf
sub
js
or
push
incl
sub
lods
jmp
dec
int
ds
bound
ret
popl
mov
sbb
dec
add
test
data16
test
int
add
dec
pop
mov
cmp
dec
lcall
jb
enter
cmp
push
test
lock
fadds
mov
lret
and
mov
dec
and
xchg
push
pop
bound
fsubr
cli
icebp
divl
and
shll
repnz
jbe
sahf
bound
shll
insb
add
cli
xchg
loop
add
xchg
fs
xchg
or
fwait
decl
lods
push
out
mov
cpuid
out
push
shll
pop
bound
movsl
or
test
hlt
add
loopne
mov
test
imul
cmp
add
nop
std
fs
push
les
in
out
and
mov
or
mov
sbb
mov
lret
push
xchg
add
sahf
imul
dec
clc
push
test
clc
and
cmpsl
test
shlb
repz
idivl
lea
jne
cmp
lock
jnp
pushf
xchg
in
jmp
or
cs
test
rolb
adc
pusha
mov
jb
xlat
sub
mov
je
mov
cmp
add
adc
xchg
mov
xor
fwait
subl
jmp
pop
stos
mov
mov
fs
mov
sbb
mov
push
and
lcall
notb
pop
insl
outsl
push
fmuls
and
cmpsl
sarl
jnp
test
fdivr
jo
adc
fldz
mov
and
lods
ret
cmp
fcmovbe
jl
xchg
les
mov
ret
xchg
shl
es
aad
scas
imul
ljmp
mov
mov
xchg
adc
mov
filds
aam
xor
test
imul
out
add
test
in
mov
sbb
cmp
pop
sahf
push
xchg
stos
das
loopne
out
arpl
es
cmpsb
sub
daa
into
in
xor
push
or
fdivs
fidivl
xchg
clc
mov
lret
dec
call
dec
enter
repz
or
mov
push
xor
das
jne
xchg
jnp
repz
aas
out
mov
sahf
mov
int3
ss
adcb
pop
add
or
das
jp
rcll
decb
mov
xchg
pop
testl
jp
pusha
xor
push
xchg
adc
iret
jmp
iret
mov
pop
out
mov
popf
cltd
fnstsw
push
push
xchg
cmp
mov
or
out
je
jle
sbb
push
cmp
xchg
dec
iret
cmpsl
rorl
ret
dec
bound
and
add
push
js
mov
push
sti
jnp
fcmove
pop
in
cmpl
xchg
scas
pop
sbb
lds
imul
das
pop
pop
repnz
sbb
leave
dec
jae
hlt
xor
arpl
sbb
mov
call
aaa
and
into
add
stc
adc
or
js
fdivrp
add
aam
push
and
and
idivl
jb
inc
movsb
fildll
popf
jbe
sbb
cmp
mov
jbe
cmp
push
xlat
jl
add
dec
xchg
mov
add
cli
cld
lcall
out
push
test
loop
xchg
inc
pop
scas
push
cmpsb
cmpsb
addl
js
pop
sbb
add
ret
loope
jge
sub
add
cli
das
test
sbb
xchg
adc
popf
daa
popa
fistpll
sbb
push
sbb
push
xlat
xor
stos
dec
or
sub
es
pop
mov
out
push
aaa
ret
cmp
jae
in
daa
pushf
shrl
or
adcb
jg
sbb
mov
lahf
cwtl
mov
xorb
lret
pop
sbb
sub
test
inc
div
mov
sub
mov
test
sbb
adc
add
in
inc
xor
test
outsl
adc
repz
cmp
jg
fisubs
adc
mov
bound
push
xor
out
push
ficompl
loop
xor
or
loopne
into
imul
in
loopne
mov
pop
mov
inc
adc
shrl
frstor
jmp
out
in
sbb
sub
jp
hlt
push
sbb
sub
fwait
in
dec
ljmp
roll
hlt
cmpb
push
xor
inc
adc
dec
repz
lahf
sbb
add
call
mov
add
pushf
ds
test
addb
push
or
inc
jno
and
cld
mov
dec
cmc
jb
out
dec
test
je
into
jecxz
sub
aas
ss
mov
and
add
les
fidivl
fildl
xchg
pop
mov
xchg
xor
das
stos
pop
xor
int
out
and
cltd
in
cltd
jg
insl
push
sub
in
cmpsl
rorb
icebp
jg
mov
lret
dec
jg
mov
fs
mov
pop
out
rorb
inc
sub
out
ret
and
imul
jecxz
fst
mov
xchg
out
and
jae
fs
push
popa
pop
push
aaa
mov
stos
loope
xchg
jl
iret
push
mov
addl
jge
cltd
dec
or
test
and
push
stos
test
lea
add
pop
xchg
ja
sbb
and
lods
pop
dec
push
sub
push
leave
shr
repnz
add
jecxz
jl
daa
lea
mov
mov
andb
xor
sarb
pusha
outsb
mov
xchg
ja
xor
dec
mov
mov
pop
mov
ljmp
fldl
dec
loope
sbbb
bound
and
push
xchg
adc
xchg
pushf
cltd
addr16
xchg
jp
xchg
pop
mov
les
inc
jp
mov
out
fcomi
ret
fisttps
inc
test
xchg
in
jmp
lcall
out
testl
mov
xchg
xchg
stos
stos
loope
lcall
sub
jnp
push
jle
lods
push
push
scas
sub
pop
iret
push
movsb
ret
mov
pop
cli
pop
int
loope
xorl
in
movsl
or
cmp
inc
jp
mov
adcb
sbb
shll
cli
test
mov
rorb
popf
mov
out
push
leave
mov
push
mov
inc
rorl
sbb
jno
in
loope
fsubrs
add
mov
pop
push
xor
lds
scas
lcall
cmp
gs
movsb
push
and
fistl
mov
push
enter
daa
rolb
aam
loope
aad
imul
jl
jl
dec
add
add
je
stc
movsl
in
das
das
and
je
push
mov
pop
sub
mov
cmpsb
sub
jmp
pop
inc
sub
push
cmp
loope
pushf
repnz
aam
cmp
test
das
sarb
stos
fnstsw
xor
or
call
pop
xor
pop
mov
int
pop
add
inc
lret
cmp
push
mov
data16
sarb
push
addr16
adc
xorb
jg
test
pop
add
mov
xchg
lea
xchg
push
bound
xlat
xchg
sbb
adc
divl
mov
rcl
cltd
mov
rcl
inc
jno
sahf
test
jle
mov
jp
jl
mov
bnd
loop
xor
stc
ss
cmc
fs
adc
ret
sub
jns
and
xchg
mov
out
out
enter
mov
jne
pop
sub
cmp
nop
into
dec
lock
pop
xor
pop
shlb
adc
push
into
imul
pop
imul
push
push
push
add
arpl
mov
xor
sub
adc
in
mov
out
pop
in
cwtl
aad
dec
int
iret
repnz
inc
aad
mov
adc
jle
repz
jg
sbb
pushf
lea
addr16
cmp
es
fcoml
adc
fwait
jmp
rclb
jno
fldl
outsb
push
pop
adc
pop
jb
sub
sti
cmpsl
xorl
inc
movb
std
pusha
outsb
push
cwtl
mov
popa
mov
push
mov
pop
sbb
fcmovnu
mov
scas
pop
icebp
pop
ds
and
lock
ja
mov
or
and
mov
dec
neg
sbb
insl
cmp
ret
add
jp
out
push
jmp
cld
lret
mov
and
jno
nop
mov
jp
mov
and
lret
aam
mov
ret
mov
aaa
es
icebp
xchg
xchg
clc
push
or
arpl
pop
popa
jbe
dec
lods
jae
lcall
sub
notl
xchg
pop
movd
xor
cli
add
cltd
adcl
test
cltd
xchg
insl
into
xor
sbb
test
xor
xchg
daa
sbb
sub
sarl
mov
jae
sub
add
xor
xor
icebp
add
mov
arpl
sbbl
pop
ja
or
inc
and
cmp
mov
negb
jp
mov
xchg
mov
mov
out
out
popa
popa
and
add
adc
inc
in
mov
pop
mov
add
xchg
test
or
adc
jp
xchg
cmp
jno
int
jae
test
out
in
test
pusha
imul
arpl
iret
js
xchg
gs
mov
ja
sbb
stos
scas
mov
out
mov
rcrl
fldcw
pop
jae
insb
outsb
add
push
divb
scas
push
cmc
test
cmp
mov
pop
test
pop
xor
addr16
fcmovu
push
rorb
sbb
xor
dec
repz
stc
subb
das
and
sbb
and
imul
pushf
scas
and
adc
cmp
sarb
lahf
pop
leave
ss
hlt
fs
arpl
adc
rorl
xor
jp
adc
aaa
mov
les
daa
jmp
int3
jecxz
cmpsb
pop
dec
cltd
scas
fiadds
jle
out
fnstenv
shlb
jns
mov
and
cmp
mov
movsb
cmc
icebp
jl
push
xchg
test
push
mov
enter
daa
rcrl
cmp
hlt
jno
adc
pop
enter
rorb
movsl
hlt
rorl
xor
add
mov
test
js
mov
cmpsb
lods
ss
adc
cmp
out
out
fsts
adcl
adc
loope
fildll
test
inc
insl
ds
outsl
pushf
adc
push
adc
movsb
addb
push
add
scas
stos
xor
js
into
sahf
jl
aad
jmp
mov
fimuls
push
in
addr16
fcoms
add
stos
iret
test
ret
mov
int
scas
outsb
mov
mov
cmc
inc
and
out
or
push
stc
jmp
jb
bswap
daa
dec
outsl
shrl
mov
xchg
adc
ja
fdivl
xlat
pop
pop
outsl
rol
psrad
sbb
sbb
mov
jbe
outsl
lret
fildll
adc
or
mov
leave
cli
inc
adc
xor
add
or
faddl
loopne
fnop
pop
icebp
adc
imul
out
add
adc
les
sahf
inc
mov
jb
jb
push
adc
mov
and
sar
pop
xchg
pop
aad
mov
adc
mov
stos
icebp
sub
mov
scas
iret
jne
call
mov
arpl
adc
xchg
and
inc
inc
cs
fwait
inc
jg
adc
mov
aas
cmp
mov
jne
insb
imul
std
inc
movb
std
pop
lahf
cwtl
cwtl
insl
stos
xorb
push
adc
fchs
je
loope
mov
mov
sbb
int
xchg
das
imul
dec
mov
cmp
dec
negb
sub
insl
and
mov
cmpsl
sarb
loopne
sub
std
pop
lret
es
xor
js
cmc
mov
cltd
movsb
pushf
shl
sub
fdivrs
outsb
or
frstor
cmp
dec
lahf
pop
popa
out
stc
lods
fidivrs
aaa
mov
or
push
inc
popf
fmull
int
aam
or
mov
data16
popa
xchg
push
xor
test
xor
xchg
ret
pushf
loop
rcll
out
or
mov
mov
repnz
pop
movsl
incl
adc
pop
imull
jo
xchg
xor
xchg
pushf
push
outsl
xchg
xchg
cld
and
ja
pop
xchg
dec
mov
sbb
xor
xor
sbb
xchg
and
inc
stos
sub
adcb
mov
xchg
scas
inc
loop
adc
pop
sub
xchg
sub
aad
pop
inc
lret
sub
mov
loop
ret
dec
mov
aad
pusha
add
filds
mov
jmp
xor
ret
stos
shl
fucompp
popf
push
and
mov
adc
stos
mov
mov
jnp
mov
pop
push
cmp
adc
inc
inc
iret
les
jno
xchg
test
sub
push
shrl
push
js
cmc
sub
xchg
xchg
and
dec
test
scas
test
adc
aas
stos
repnz
mov
cmp
lods
or
push
arpl
lea
fisttpl
lret
sub
mov
lea
sbbb
in
ja
lods
jp
jo
inc
aas
scas
pop
into
push
and
jo
cmp
xchg
and
jbe
popf
jl
pop
sbb
enter
daa
shlb
xchg
jno
dec
jl
xchg
push
dec
fisubs
push
cmp
movsl
sti
xlat
adc
lahf
test
rsqrtps
inc
mov
cmpsb
das
aas
sti
pop
cmp
js
mov
pop
push
inc
fwait
loope
inc
lods
sub
dec
das
cmp
lock
adc
sub
cld
scas
incb
push
push
mov
xor
xchg
into
int
aas
jb
cmp
test
cmp
sbb
stos
stos
fdivl
sub
dec
sbb
in
jmp
aad
andb
xorl
les
push
push
imul
xor
es
sub
add
cmp
jnp
sahf
out
mov
cmc
ds
xor
sarb
mov
stos
loop
xor
stc
movsb
adc
subl
xlat
xchg
mov
lods
icebp
xchg
mov
out
cmp
xor
xlat
nop
cmp
add
or
xlat
leave
into
adc
loopne
or
adc
sti
imul
leave
mov
dec
push
out
data16
call
cmp
xor
sub
dec
shr
cmp
das
sub
js
test
or
jmp
inc
sti
inc
clc
flds
sub
xchg
mov
push
int
ss
mov
inc
and
adc
lea
pushf
aas
sub
jmp
test
aaa
jmp
inc
push
loop
inc
dec
addr16
aas
fsubrl
int3
jb
dec
std
dec
jmp
aaa
data16
into
pop
dec
ss
std
scas
mov
cwtl
sub
pop
mov
or
orl
mov
pop
aaa
mov
lock
xchg
das
dec
xor
sarb
loopne
rorl
enter
mov
or
shlb
loopne
out
icebp
add
mov
lret
xchg
enter
xchg
cli
and
sbb
inc
pop
mov
sub
mov
ret
rcrl
add
dec
push
add
push
fsts
mov
out
lods
dec
dec
mov
mov
push
into
aas
push
sbb
testl
and
rolb
out
push
repz
jb
jne
roll
dec
dec
lods
shll
jp
dec
jo
stos
jmp
call
add
xor
fdivrp
mov
scas
inc
or
jb
xor
cmp
push
xchg
xchg
mov
scas
ja
cmp
dec
xchg
xor
pop
cmp
fwait
mov
or
and
sbb
pop
stc
aam
push
jp
addb
in
test
xchg
repz
gs
or
pop
fidivrl
movsl
ds
adc
mov
push
notb
in
push
pusha
lahf
or
lahf
jmp
xchg
pop
push
jmp
sti
adcl
fcompl
mulb
xorps
sub
mov
push
inc
cmp
jnp
jecxz
jle
and
bound
repz
iret
and
ret
mov
inc
add
jae
ret
test
orl
scas
test
notl
js
fstl
mov
iret
cwtl
scas
call
pop
and
pop
call
mov
leave
and
hlt
pop
std
andl
jp
lret
jge
shrl
sbb
push
add
mov
push
add
cmp
mov
leave
xlat
fimuls
push
call
scas
aaa
sbb
in
cmp
sbb
leave
in
test
in
inc
inc
enter
daa
iret
shrb
jp
fidivs
aas
sub
dec
dec
and
mov
mull
cmp
sbb
subb
sub
inc
cltd
add
cmpsb
mov
inc
pop
pop
xchg
xchg
js
sbb
pop
add
mov
loope
shrl
jg
jle
mov
add
movsl
xlat
and
or
pop
pop
cmp
repz
add
push
or
test
dec
int
mov
mov
sahf
pop
mov
xor
xchg
inc
movsb
fcompl
bound
sub
pop
lahf
outsb
and
sbb
shll
mov
fildll
mov
mov
or
imul
fcoms
push
lret
pop
lcall
sbb
or
add
pop
mov
loop
addl
push
aaa
mov
es
ss
or
fdivrs
fmuls
scas
ss
cli
cmpsb
fcmove
xor
sar
cmp
sub
mov
jp
cmc
sahf
gs
shl
insb
dec
xor
pusha
lahf
adc
in
mov
jmp
add
popa
adc
repz
dec
sbb
adc
mov
lock
pop
sub
popa
pusha
mov
stc
stos
sbb
add
dec
aad
adc
nop
pusha
shlb
fcmovne
inc
push
adc
mov
repz
out
xchg
gs
adc
mov
add
mov
lret
pop
cmc
xchg
jecxz
mov
lods
jmp
mov
lcall
inc
push
push
mov
or
dec
pusha
movsb
call
jecxz
loop
dec
push
push
lods
sbb
add
mov
orb
fstpt
adc
fidivrl
mov
xor
das
daa
xchg
mov
push
jle
rcrl
movsb
cld
insl
repnz
mov
test
repnz
fildl
imul
push
jecxz
and
mov
mov
rcrb
jecxz
aam
sbb
pusha
aaa
out
es
inc
fnsave
push
clc
add
pop
ljmp
push
lods
mov
aad
lea
mov
push
imul
pop
jnp
lret
sub
ljmp
scas
ljmp
and
lock
xchg
sbb
cld
sarl
mov
stos
ficoml
add
dec
sbb
incl
xor
fwait
movsl
or
shlb
fnstenv
insb
and
pop
push
rcrb
inc
pop
ja
fwait
out
dec
xchg
jg
out
cs
mov
ds
arpl
jne
loopne
mov
push
out
decb
std
sbb
jns
lock
rcrl
call
mov
in
sub
mov
mov
jp
mov
push
mov
rolb
dec
addr16
in
pop
xor
cmp
sub
mov
jge
jmp
cmp
and
dec
out
lea
mov
nop
shrb
lods
mov
xchg
cli
jnp
jmp
jne
lret
adc
sahf
or
xchg
xor
pop
clc
addr16
or
pushf
push
inc
aas
jl
push
insl
and
mov
fimull
adc
inc
adc
scas
dec
jb
stos
shlb
mov
xor
leave
fwait
test
hlt
cmpsl
inc
aaa
arpl
pop
std
jge
ds
xchg
sbb
loopne
xor
movsb
sti
lret
add
ds
int3
movsb
xchg
jnp
xlat
xchg
fisubrs
xor
xor
xor
scas
push
jo
and
cmpsb
adc
add
int3
push
push
inc
dec
insl
jbe
mov
cmpsb
iret
andb
jae
cmp
push
dec
jl
movsb
mov
mov
pop
mull
add
in
out
cmp
mov
push
fstps
adc
aas
cmp
xchg
pop
inc
fstps
movb
cmp
arpl
enter
cmp
imul
mov
push
xor
les
mov
jo
mov
push
insl
xchg
pop
loop
int
mov
sub
and
lcall
rcr
in
sub
cmp
outsb
test
test
es
sbb
mov
mov
in
mov
loop
mov
pop
cmc
and
lds
push
outsb
nop
add
dec
sub
imull
int3
lret
shll
mov
xchg
stos
sahf
xor
in
int3
xor
call
mov
loop
add
cltd
push
imul
ja
cmp
lods
mov
xchg
lods
mov
rdtsc
popf
out
xor
or
scas
or
stc
and
fcoms
sub
loopne
cmpsl
and
or
adc
lcall
sub
push
add
data16
lods
sbb
dec
into
data16
das
jp
sub
andb
out
in
sti
mov
pop
jo
fcmovbe
in
leave
xchg
nop
cmp
cwtl
inc
and
add
and
repz
loop
xchg
sub
lea
mov
pop
test
in
adc
in
lock
xchg
xchg
jmp
pop
inc
cs
inc
sub
in
inc
orl
aas
sbb
mov
xlat
xchg
inc
je
int3
clc
jecxz
cmp
std
cld
mov
cwtl
sahf
lret
or
popf
pop
in
xorl
xor
pop
jge
mov
lock
std
das
push
fildl
lret
repz
outsl
pusha
shr
es
insl
rorb
idivl
mov
mov
pop
cld
jb
je
jae
sbb
cld
sub
pop
neg
psrld
ljmp
cmp
ret
out
pop
imull
cltd
movsb
fs
cmp
arpl
mov
inc
in
pop
call
and
filds
push
shlb
icebp
add
mov
pop
lcall
cmp
dec
ds
sub
jne
mov
rcll
jne
stos
leave
shl
out
mov
dec
add
push
or
loope
sbb
push
mov
pop
xor
lds
outsl
xor
ja
jg
dec
jp
flds
mov
fwait
sbb
sub
jne
sbb
adc
mov
mov
in
loope
xchg
pushf
sbb
sub
and
addr16
xchg
mov
das
fstpl
in
mov
pusha
aad
inc
lds
stos
pop
dec
xchg
xchg
in
push
xorl
scas
popf
subl
insb
push
addr16
iret
push
mov
and
xchg
and
mov
nop
jle
jecxz
push
adc
cmpsl
adc
dec
push
ret
or
or
mov
jae
mov
lock
ljmp
fiaddl
xchg
push
xchg
mov
imul
mov
push
les
rclb
and
test
leave
adc
repnz
arpl
jae
jge
mov
cld
daa
outsl
aaa
lahf
fsubl
xchg
and
int3
pop
ret
or
add
jo
adc
scas
cmc
mov
cmp
iret
push
nop
adc
jbe
xor
lret
mov
cwtl
mov
jno
lea
or
dec
sub
mov
jecxz
insb
movsl
adc
and
xor
test
movsb
sub
rcll
lods
mov
pop
jg
cli
push
sbb
fstl
sub
xor
ds
movsl
adc
mov
or
orb
sbb
and
jnp
jns
and
int
or
test
pushf
jne
mov
push
inc
xlat
jno
jne
cmp
outsb
out
insb
test
inc
xor
or
jl
mov
pop
cmp
nop
push
popa
mov
lret
rcll
adc
fmuls
fs
repz
xadd
mov
push
popa
sbb
leave
mov
cmc
xchg
sahf
repz
jl
dec
or
mov
fs
scas
adc
into
test
lods
cmpsb
xor
add
add
lods
mov
sub
je
mov
xor
mov
addr16
into
mov
data16
mov
mov
dec
imul
data16
arpl
pop
insl
push
cmp
push
pop
sub
jle
mov
iret
add
sti
pop
and
xchg
sub
xor
cmpsb
nop
push
pop
cltd
dec
xchg
enter
pop
fldcw
sbb
repz
stos
xchg
jmp
or
cmpsl
dec
loop
mov
pop
pop
pop
lcall
inc
shrb
sbb
in
pusha
pop
rolb
pop
inc
sahf
clc
aad
mov
xchg
dec
sub
jecxz
jg
push
dec
scas
std
mov
test
xor
nop
push
icebp
orl
enter
js
and
or
cmp
js
pop
jbe
mov
addr16
shll
cmpps
out
ja
sarb
dec
lahf
div
cmpsl
int3
cmp
mov
mov
data16
popf
push
ror
cmc
sbb
xchg
loopne
mov
adc
pop
mov
test
add
mov
jecxz
jp
adc
shlb
clc
js
ret
ficoml
ljmp
dec
lods
mov
xchg
mov
jl
cmp
lods
nop
mov
add
mov
test
loop
mov
or
dec
movsl
inc
add
xchg
mov
sbb
vunpcklps
sub
sbb
aaa
add
test
incl
adc
or
xor
add
mov
jb
sahf
mov
call
out
dec
insl
or
inc
adc
dec
or
xor
push
test
mov
inc
out
mov
xchg
movsl
lods
in
sti
lcall
imul
sub
mov
es
int3
mov
lahf
pop
mov
sahf
jbe
dec
sub
jno
pusha
jo
cld
jne
xchg
mov
xchg
pop
cmc
inc
addl
out
adc
popf
stos
movsb
cli
mov
push
insl
popf
stos
xchg
xchg
int
iret
icebp
sbb
jnp
inc
mov
movsl
xor
push
pop
adc
dec
iret
inc
inc
mov
mov
pop
mov
and
jae
sbb
int
adc
gs
enter
fidivl
xor
imul
cmc
shrb
jge
leave
mov
hlt
cmp
sbb
adc
ja
test
aaa
pop
gs
mov
mov
int3
jp
fcomps
push
std
fidivs
push
xor
out
leave
scas
aam
or
sub
test
sbb
jbe
dec
mov
mov
mov
daa
int3
inc
ja
adc
mov
dec
lcall
movsl
pop
fcoms
lahf
and
fs
stos
gs
add
push
push
outsl
add
inc
inc
mov
cmp
popf
pop
aam
xlat
js
stos
insl
pop
mov
lret
iret
loope
dec
jge
shrb
cmp
push
or
push
lcall
lcall
andb
sbb
mov
add
dec
lea
icebp
push
and
popf
std
mov
fdivrs
pop
xor
stos
lcall
fsubl
jmpw
cmp
outsb
dec
jp
test
pop
pop
adcb
mov
shrb
mov
mov
mov
rcrl
and
lahf
dec
push
je
cmpl
xor
sub
mov
pop
mov
xchg
sbb
in
jp
adc
xor
imul
scas
mov
adc
push
ss
test
out
dec
cli
aas
dec
push
xor
loope
pop
sahf
lods
or
sub
into
sahf
ret
cmc
gs
cmp
cmp
jo
adc
vpmacsdd
add
sbb
sbb
lds
ja
dec
sbb
in
cmp
es
push
adc
mov
sbb
jnp
movsb
nop
icebp
inc
mov
lock
aam
inc
leave
mov
les
insl
add
inc
cmpsb
out
scas
popa
adc
and
xor
mov
push
sub
adc
mov
jmp
cmp
cs
insb
test
js
inc
mov
in
jb
add
dec
lds
jecxz
mov
inc
mov
push
mov
cwtl
adc
jmp
cmp
leave
stc
and
xor
int3
mov
lds
xchg
jl
das
les
pop
mov
repnz
or
xchg
mov
outsb
inc
or
dec
lcall
mov
pusha
data16
enter
push
loop
mov
sub
mov
xor
jmp
sub
aam
jb
ret
or
pusha
or
out
cmp
mov
or
mov
popa
add
lods
cmc
rcrb
mov
insl
iret
cmc
push
mov
adc
test
bound
insb
gs
test
xchg
fsubs
leave
dec
or
jae
popa
call
and
sbb
ret
out
pop
test
stos
cmpsl
xchg
out
jnp
fiadds
mov
or
negl
xchg
xor
les
adc
jae
mov
rolb
pusha
sub
lret
sub
push
dec
pop
jg
ds
fucomi
fwait
pop
ret
or
pop
addb
cmp
mov
or
or
pop
adc
cmp
mov
or
xchg
frstpm(287
cmp
mov
fistps
lods
xchg
xchg
test
cmpsb
cltd
xchg
daa
push
pop
adc
inc
out
jg
popf
sarl
jns
dec
or
stos
push
or
mov
lock
jg
xchg
cld
jle
jno
push
lahf
les
iret
lahf
inc
cmp
shlb
inc
cs
gs
rorl
mov
fisubrs
pusha
xchg
out
xchg
fisubl
xchg
xchg
cmp
into
imul
mov
mov
fistpll
sub
in
add
jmp
arpl
lahf
lods
inc
sti
jge
xlat
sbb
mov
or
pop
add
arpl
fs
ret
ficoms
fdivl
inc
stos
and
and
loope
movsb
aaa
fwait
or
imul
nop
xlat
sub
pusha
daa
enter
daa
lret
outsb
cmp
movsb
jno
imul
pop
cmc
mov
or
cwtl
push
test
sarb
and
dec
push
lahf
inc
loop
push
jle
cli
test
cmp
jb
aad
xor
sti
mov
js
pop
xchg
pop
std
add
push
cs
sub
repnz
cmp
sub
xor
mov
shlb
ljmp
ja
sbb
sbb
xor
pusha
cmp
sub
xchg
fcomps
out
std
dec
fmul
fs
jg
test
pop
subb
push
mov
xor
mov
mov
cmp
cmp
ja
jle
push
xchg
outsl
imul
mov
insl
shl
int
inc
cwtl
stc
sbb
fnstenv
stc
push
adc
leave
mov
mov
cmc
cmp
xor
lods
je
cltd
mov
adc
out
push
sbb
jb
mov
and
xor
pop
or
dec
into
andl
loopne
sub
stos
sub
adc
incl
add
cmp
incl
sbb
add
sub
imul
jno
lret
lods
out
sti
mov
lods
cs
inc
nop
int3
aas
outsl
dec
dec
lds
pop
insl
pop
fsts
adc
jno
adc
popf
fisttpll
mov
clc
pop
shrl
in
das
pushf
xchg
mov
cs
cmpsb
inc
test
adc
aas
negl
jl
cmp
cmp
lcall
inc
and
icebp
jbe
cwtl
iret
and
mov
imul
cmpl
sub
pop
data16
and
out
pop
call
mov
test
mulb
stos
fdiv
mov
sbb
dec
xchg
mov
cmpsl
lret
mov
aaa
stc
paddb
cmpsb
jecxz
rclb
and
pop
sbb
pop
push
aas
test
out
bound
jae
push
aam
lea
pushf
push
movsl
andb
push
enter
daa
notb
cld
andl
loope
lods
pusha
xchg
dec
and
mov
mov
cmp
cmpb
inc
xchg
jg
sub
add
sub
jp
push
ret
dec
jae
in
fsubl
xchg
add
into
cli
mov
pop
mov
mov
outsl
add
mov
test
push
jnp
cmp
xor
mov
dec
xchg
sahf
mov
pop
jns
ja
inc
push
dec
push
fs
inc
daa
xor
mov
adc
out
xchg
jnp
add
mov
out
jp
mov
jns
sti
cmp
ljmp
xchg
mov
mov
mov
or
je
cmpsb
addr16
pop
jp
and
lea
push
mov
dec
repz
in
pop
mov
cmpsb
fistpll
out
xchg
jl
pusha
jmp
repnz
andl
out
arpl
popf
clc
mov
add
sub
jns
mov
std
mov
lret
test
jle
cmpsb
enter
jo
cmp
iret
incb
ret
adc
aad
inc
cmp
inc
push
push
rcrb
or
pop
mov
push
ficompl
push
cmc
xchg
nop
jno
sbb
mov
imul
scas
xlat
stos
imul
loope
fdivrl
jle
loope
ja
fcomip
sarl
jp
fldcw
jge
shrb
pop
or
faddl
xor
jo
out
dec
push
mov
pop
xchg
sub
fidivs
popf
outsb
jo
xchg
stos
scas
xchg
jecxz
and
repz
sbbb
ret
push
jge
mov
fsub
in
addl
iret
cmp
sub
adc
mov
mov
mov
sub
insl
sub
adc
test
add
loope
cmpsb
inc
test
and
js
fwait
das
pop
cmp
inc
push
inc
xor
and
jecxz
and
ds
mov
adc
push
dec
hlt
mov
mov
xchg
mov
cmp
xor
jmp
loop
sbb
in
lcall
pop
fdivl
aam
mov
outsb
adc
test
js
orb
jg
arpl
cmc
imul
xchg
inc
and
mov
cmp
cmp
pop
lret
call
mov
push
aaa
sbb
mov
xor
outsl
ljmp
stc
out
xor
lds
fbstp
inc
sbb
lods
pop
aad
mov
data16
test
sbb
mov
xchg
mov
das
into
ljmp
jae
push
pop
lret
adc
sub
in
sbb
clc
xchg
test
xor
loopne
sbb
cmp
adc
jmp
sub
jo
mov
adc
sti
insb
cmp
cld
pop
lret
aad
xchg
cmpsl
push
je
scas
leave
addb
cmp
les
pop
jecxz
loop
adc
mov
push
call
pop
je
js
cmp
das
pushf
inc
in
pusha
jmp
das
int3
mov
inc
xor
xchg
aas
xchg
pop
mov
dec
mov
inc
je
in
jecxz
inc
and
pop
jb
std
cwtl
jecxz
cwtl
mov
mov
imul
dec
inc
mov
fldt
pop
inc
pop
or
mov
ret
dec
push
movsl
das
adcb
pop
ss
and
jle
shll
and
hlt
inc
xlat
insl
jne
add
imul
leave
or
mov
push
mov
cld
push
sub
lret
das
pop
dec
mov
add
mov
jb
daa
sarb
test
xchg
ret
sub
es
cld
fnsave
mov
xchg
pop
pop
into
ljmp
shrl
enter
fmulp
xchg
sti
daa
arpl
sbb
xchg
jnp
cltd
cmp
test
lret
jbe
iret
push
test
fisubl
adc
sbbl
cmp
inc
xor
add
addl
inc
je
mov
scas
xor
xchg
out
add
inc
les
sbb
lcall
jl
or
fwait
mov
push
xchg
mov
or
pop
and
fsubrl
stc
in
inc
and
in
cs
outsl
jmp
jg
mov
jae
mov
jmp
mov
in
add
inc
or
mov
dec
out
jmp
mov
loopne
out
mov
adc
pop
sahf
push
lret
int
stos
in
adc
jnp
mov
mov
push
sub
bound
pop
dec
outsb
ret
sbbl
adc
pop
jae
fnstcw
push
push
pop
pusha
or
mov
inc
icebp
xor
fcmove
movsb
mov
sbb
xor
popa
pop
scas
cmp
sar
mov
gs
repnz
test
hlt
push
cmpsl
push
jmp
push
insb
jge
scas
fcomps
call
pop
test
add
out
and
cmp
test
pop
cs
xor
clc
xchg
or
loope
sub
cwtl
enter
push
notl
sarl
in
push
mov
dec
cmp
jl,pt
stc
leave
dec
out
imul
sub
aam
or
ja
and
ja
in
jae
rcl
sbb
cmpsb
les
test
js
jno
pop
jnp
in
test
or
shlb
sarb
lock
adc
sub
lea
fwait
sarl
das
jge
pop
pushl
out
stc
int
cmc
jmp
xchg
lret
pop
mov
fstps
popf
mov
fsubl
fidivs
jge
mov
jae
sub
arpl
jg
bound
inc
adc
mov
mov
fildll
push
jge
aad
mov
fdiv
push
and
push
ret
lods
sub
and
pushf
mov
faddl
sbb
cmp
repz
scas
cmp
xor
xchg
mov
and
mov
fsts
add
popa
xchg
cmc
mov
push
mov
test
pop
cli
fmuls
cld
cmp
test
into
inc
mov
push
mov
pop
jmp
xchg
adc
es
add
mov
inc
sbb
jbe
xlat
push
mov
cmpsb
sub
mov
jnp
inc
sti
sbb
pop
add
aad
xor
dec
or
push
mov
add
xchg
les
mov
mov
ficoms
pop
pop
shr
xchg
ret
mov
and
daa
adc
pushf
in
dec
lret
jmp
iret
in
in
dec
les
ret
or
aas
xor
stos
pop
dec
sub
sbb
jecxz
jo
push
pop
adc
cwtl
inc
call
push
mov
subl
dec
fwait
pop
lods
jge
mov
fcoms
movsl
pop
adc
popa
mov
mov
xchg
adc
pop
xor
hlt
imul
sub
mov
repz
in
jno
dec
jg
lret
sahf
aas
cmp
pusha
int3
adc
push
or
rorb
and
mov
mov
mov
rcrb
pop
mov
fs
xchg
lcall
popa
inc
cmpsl
jmp
mov
or
out
sbb
pop
pextrw
push
pop
add
das
fwait
test
jbe
inc
clc
and
lret
inc
cmp
lock
sbb
xchg
enter
testl
syscall
cmp
icebp
pop
inc
cld
addl
imul
xor
rcrb
jle
in
mov
aam
xlat
ja
lods
aam
cmp
mov
jo
imul
test
mov
mov
mov
out
cmp
arpl
fsubrs
xchg
daa
and
mov
loop
sub
push
mov
jp
or
mov
push
cmpl
scas
dec
mov
dec
loope
fcoml
fistpll
cld
xchg
and
mov
jle
cmp
push
out
xchg
mov
or
dec
stos
pop
test
and
adc
jnp
pop
in
xor
add
sub
lock
fwait
iret
mov
or
pop
and
inc
dec
aaa
mov
sbb
push
fsts
or
push
cmp
jo
dec
fiaddl
pop
int3
sbb
inc
mov
scas
popf
adc
cli
sbb
mov
and
insb
leave
fstps
imul
lea
lods
mov
sbb
mov
or
sbb
jbe
stos
int3
es
pop
icebp
adc
std
or
enter
movsl
cmc
scas
push
mov
and
cmp
inc
movsb
fcomps
push
sbb
xorl
outsl
or
daa
enter
fildll
jno
lds
fistpll
and
push
int3
pop
movsl
xor
test
mov
push
testl
inc
orb
inc
rcll
js
fcompl
push
xchg
pop
loope
and
inc
into
cmp
adc
lcall
rolb
mov
adc
push
push
jo
mov
xor
movsb
into
int
jp
sub
stc
sub
xor
or
inc
in
int3
pop
ret
jo
outsb
inc
adc
cld
jns
cmpb
jg
cmp
dec
dec
mov
aaa
fisubs
sbb
mov
orb
cmp
mov
sbb
sub
lret
sarl
push
sbb
icebp
cmc
jbe
movsb
xor
pop
nop
outsl
test
jle
mov
mov
fs
sbb
dec
jg
ss
lods
sub
aaa
out
cwtl
xor
or
push
cmp
jnp
or
or
jns
loopne
pop
mov
or
adc
sbb
mov
adc
cmpsl
sbb
loop
data16
sbb
mov
aad
test
xchg
push
mov
out
xor
lret
incb
gs
cmp
and
ficomps
xchg
xchg
js
cmp
repz
mov
push
mov
das
mov
add
ljmp
jmp
xor
dec
and
dec
lods
inc
and
ffreep
jb
testl
je
push
jecxz
fimuls
std
out
ret
stos
inc
mov
outsb
stc
mov
add
sbb
cltd
fisttpl
rcr
mov
push
jecxz
add
das
inc
sub
mov
stos
movsb
aam
push
std
xlat
rol
xchg
loop
jp
or
cltd
fisttpll
popf
cmp
js
sbb
mov
test
jle
inc
leave
shll
lock
push
pop
mov
dec
shlb
jne
pop
inc
mov
ret
dec
out
push
or
out
sub
clc
lahf
mov
fldl2e
pop
ljmp
push
lods
mov
addr16
cmp
mov
xor
xorb
mov
lahf
roll
popf
adc
or
test
inc
mov
sbb
add
rcrl
pushf
repz
mov
push
add
pop
hlt
jge
rcrb
or
aam
fwait
or
xor
mov
xor
inc
jge
and
dec
mov
icebp
fidivl
test
popf
inc
pop
xchg
cltd
or
pop
jbe
xor
mov
fsubr
pop
jne
mov
mov
mov
out
pop
clc
punpckldq
and
in
insb
rcll
imul
sub
gs
addr16
ja
jp
cmovae
pop
add
mov
in
cld
pusha
ja
or
xchg
cmc
mov
jmp
push
or
xor
popf
insl
setge
dec
mov
inc
and
or
movsl
jnp
addl
adc
aad
iret
sbb
ret
test
inc
pop
xorb
pushf
ret
and
int3
push
std
inc
out
mov
xor
xchg
mov
imul
xor
sbbl
mov
ja
pop
leave
fdivl
mov
pop
arpl
push
mov
loop
dec
jge
sbb
sbb
add
sbb
mov
dec
ret
or
xchg
sub
mov
je
jo
lret
sbb
pop
inc
push
cmp
inc
inc
movsb
arpl
sbb
dec
shlb
dec
in
ss
enter
daa
dec
mov
adc
jl
dec
dec
dec
lds
movsl
cmp
repnz
mov
cwtl
jne
shrl
push
data16
cmpsb
lret
pop
xchg
mov
leave
pop
stc
and
cmp
xlat
pop
mov
mov
ds
or
shl
imul
add
push
sbb
lods
add
pop
adc
cld
dec
xchg
insb
mov
int
jecxz
sub
mov
lcall
cmp
sub
das
outsb
cmp
xor
jmp
dec
mov
shll
lea
loop
and
out
push
cmpl
cmp
insb
fcoml
imul
cwtl
jo
movsl
mov
nop
push
mov
outsl
negl
dec
adc
test
pop
out
gs
outsl
xchg
loop
ds
stc
adc
fs
pop
adc
imulb
loop
push
out
mov
cli
ds
xor
mov
adc
gs
fcompl
daa
xor
adc
andl
mov
dec
dec
or
sbb
in
mov
mov
mov
push
out
jns
mov
gs
aad
scas
rcll
out
cmp
cmpsb
add
push
pop
in
repz
xor
push
aad
xchg
call
scas
push
pop
pop
lea
pushf
inc
jl
jmp
pop
addr16
lcall
aaa
sarb
sub
mov
and
je
sub
jecxz
adc
std
lea
scas
mov
int3
jle
inc
aam
sbb
ss
mov
mov
sbb
mov
xor
lock
cmpsb
enter
test
ror
cwtl
mov
test
adc
in
sub
dec
adcl
mov
xchg
lods
or
lahf
cmpsl
mov
jl
add
mov
inc
fstps
iret
dec
test
xor
mov
dec
add
aam
inc
push
ret
fsubrs
iret
sarb
ljmp
cwtl
lods
or
stos
mov
dec
pop
fcoms
iret
push
pop
jae
and
loopne
lock
lret
mov
test
dec
femms
xchg
test
psubd
lcall
pop
dec
push
stos
push
insb
test
push
xchg
add
daa
dec
jmp
xor
in
xor
xchg
cmp
push
mov
mov
dec
sub
inc
sahf
push
insb
or
jns
fwait
arpl
or
jnp
in
jne
cmpsl
mov
out
imulb
bound
inc
mov
xchg
mov
fldcw
pusha
shl
es
cmpb
pop
mov
mov
dec
cmp
mov
and
dec
jg
cmpsl
in
adc
pusha
adc
stos
xchg
enter
insb
xchg
fcoml
cmp
in
popf
xchg
popf
out
mov
mov
xchg
stos
inc
jmp
push
insb
pop
es
jnp
cmpsb
hlt
jle
add
add
sbb
jp
mov
pop
mov
jnp
gs
outsb
push
pop
movsl
jle
mov
ret
push
outsb
cli
aaa
shll
in
sbb
dec
or
cs
jb
arpl
loope
dec
xchg
gs
lret
leave
push
mov
hlt
ljmp
arpl
es
inc
in
dec
jge
mov
inc
aaa
fsubrs
or
mov
int3
cld
stc
in
pop
dec
or
fiadds
push
xor
or
sub
lcall
movsb
out
fcomps
jbe
gs
in
sbb
cmpsl
js
or
cmp
xor
jl
mov
dec
xor
jmp
sbb
mov
flds
add
fcomps
add
inc
mov
xorb
add
js
insb
xor
cmp
je
add
sub
dec
adc
fstp
js
loopne
push
adc
mov
mov
adc
jl
mov
or
lret
push
aas
das
xor
sub
mov
lcall
cmp
and
xor
dec
mov
roll
mov
jmp
mov
mov
push
loope
mov
jae
cmp
sbb
fsubs
and
lret
add
jecxz
mov
ja
sbb
jmp
cmc
add
es
push
outsl
data16
loop
pop
xchg
stc
lret
fs
pop
dec
adc
mov
sbb
fldl
jmp
jno
movsb
xor
sbb
loope
or
mov
arpl
xchg
pop
inc
std
daa
adc
or
add
std
ret
mov
ja
sub
add
daa
pushf
out
decl
js
mov
ret
movsb
decb
test
adc
dec
sub
sub
lods
lock
sub
xchg
inc
inc
call
call
sub
dec
movups
push
imul
movsl
inc
mov
adc
xchg
push
inc
pop
mov
aas
adc
jb
sub
dec
xor
jecxz
mov
data16
daa
std
xor
jg
jbe
mov
mov
xchg
dec
repnz
sar
xchg
pop
out
mov
jno
lock
insl
das
adc
mov
sbb
adc
int3
call
pusha
fnstenv
add
nop
dec
jl
mov
mov
push
movsl
cld
lret
lret
jmp
mov
and
es
iret
rolb
mov
aam
pushl
andps
sarl
clc
adc
lea
ljmp
adc
adc
jno
dec
xchg
pop
mov
push
stos
cmp
psrad
testb
pop
push
cltd
pop
insb
push
mov
mov
push
xchg
fwait
outsb
dec
jbe
test
inc
insl
bound
dec
cmp
ror
dec
dec
pop
clc
stos
mov
inc
dec
sbb
int
mov
inc
or
fldenv
mov
jmp
addr16
xor
inc
insl
mov
xchg
pop
mov
add
sub
faddl
cmp
dec
imul
xor
jne
add
mov
cs
aad
jp
sub
cmpsb
repnz
in
xchg
adc
jp
icebp
mov
or
push
addr16
xor
mov
cmpsl
sbb
dec
bound
insb
pusha
lods
lahf
in
inc
repz
fwait
dec
add
arpl
ret
pop
dec
subl
lret
out
mov
mov
movl
xchg
jnp
nop
mov
push
dec
adc
adc
mov
ret
insl
pop
lds
inc
jo
stos
jae
cmp
or
ret
inc
in
out
popf
ficompl
dec
rcrl
std
imul
adc
popl
je
push
cmp
repnz
xchg
sbb
dec
test
arpl
jae
jge
adc
aaa
xchg
xchg
xchg
or
cwtl
invlpg
rcrb
out
repnz
jle
and
out
cmp
cmp
inc
jo
push
shrb
sub
inc
dec
movsb
jns
hlt
push
or
jno
and
mov
daa
lds
cmp
movsl
jno
xchg
mov
push
sti
mov
movsl
dec
loop
and
lahf
std
add
push
jo
je
sarl
push
cld
jge
inc
das
data16
test
pop
in
movsb
js
xchg
test
ja
push
push
inc
in
xchg
cld
xchg
sub
push
or
mov
imul
adc
xchg
aaa
push
adc
and
mov
mov
js
rorl
xor
and
int
bound
pop
lods
fdivs
push
stc
rorl
int
mov
cmp
outsb
jmp
out
iret
adc
sub
mov
in
mov
xor
and
jae
mov
dec
cmp
loop
mull
cmp
mov
jg
ret
sbb
dec
stos
cmc
lret
adc
xor
sbb
outsl
inc
pop
push
loop
mov
stc
add
lcall
jle
lods
fidivs
and
movsb
jle
cli
movsb
ljmp
mov
or
cld
inc
into
roll
gs
test
jp
push
pop
gs
adc
sub
dec
and
andb
push
sbb
bound
add
jb
jmp
sti
cmpsb
sub
sti
xlat
push
int3
stos
adc
aad
mov
adc
sbb
inc
int3
mov
fchs
shll
in
mov
xchg
add
nop
lea
jl
lods
cmp
pop
repz
push
adc
xchg
inc
pushf
cwtl
push
jmp
testl
rorl
inc
jbe
pushf
aas
mov
shll
adc
push
out
je
cmpsb
mov
lods
inc
repnz
imul
fcompl
jbe
add
push
xchg
fmuls
call
pop
cmp
lock
das
fisttpll
mov
mov
loope
testb
insl
clc
xorl
les
mov
inc
pop
pop
cld
cmc
pop
bswap
pop
leave
lcall
adc
pop
or
sbb
sub
adc
es
adc
clc
sbb
clc
push
sbb
ljmp
fsubrl
nop
pop
mov
pop
pop
daa
push
test
testl
icebp
inc
fstps
pop
xor
push
push
leave
arpl
jo
test
pop
test
in
aam
sbb
arpl
and
jno
mov
ljmp
push
pop
imul
loopne
js
xorb
add
add
and
mov
mov
jae
movsl
or
ja
mov
dec
add
inc
mov
fwait
shl
push
rcr
jne
sarb
dec
mov
out
mov
sub
push
push
in
mov
jecxz
xor
dec
sub
push
xor
add
mov
dec
dec
mov
push
rcrb
in
imul
xchg
outsb
gs
pop
xlat
notb
and
out
cmp
popf
loop
fdivrl
push
mov
shlb
xchg
insb
fstl
jle
jmp
dec
adc
iret
cmp
loope
cld
pop
cmove
add
mov
fisttpl
cmp
addr16
fimull
xchg
lcall
imul
scas
sub
loope
xorl
bnd
cli
leave
inc
pop
out
xchg
cmp
xor
roll
popf
pop
jge
fistpl
pop
fbstp
push
cmp
or
adc
shlb
pop
lods
adc
xor
mov
mov
and
fildll
movsb
add
fcoml
inc
jbe
fs
in
jmp
push
enter
daa
les
cmp
stos
shll
loope
jl
add
dec
adc
popa
push
ficomps
movsl
dec
cwtl
push
and
daa
mov
inc
hlt
jmp
mov
mov
add
or
daa
js
dec
jae
mov
and
xchg
mov
lods
adc
cmp
fmul
ds
adc
jb
jg
cli
mov
ljmp
xor
jo
mov
cltd
int
js
sub
outsb
add
lcall
jecxz
js
test
sub
inc
outsb
bound
test
sub
sub
lods
jg
pushf
xorl
jb
mov
faddl
push
mov
cmp
popf
data16
and
and
mov
or
cmc
xchg
add
sub
loop
aas
in
cmp
fs
jge
adc
push
inc
lods
lds
mov
mov
out
sub
cli
xlat
arpl
mov
aaa
or
sub
mov
adc
pop
dec
loopne
imul
pop
xchg
imul
mov
add
jns
xchg
adc
into
cmp
or
sub
dec
les
xchg
adc
xchg
sbb
into
jnp
aad
pop
dec
nop
leave
pusha
push
dec
call
cltd
and
les
push
movsb
xchg
xlat
jge
or
call
sub
pop
cmpsb
negl
adc
icebp
pushf
inc
jg
jmp
imul
fldt
fwait
inc
pop
fs
aas
push
sbb
jb
sub
dec
jge
cmc
je
arpl
mov
adc
andb
cwtl
in
js
mov
add
mov
mov
sbbl
mov
mov
and
das
mov
xor
xchg
mov
sar
sub
mov
fucomip
fwait
dec
jb
cmpsb
cmpsl
ret
outsb
mov
sbb
movsb
cld
and
mov
sarl
mov
sub
cmp
lods
fcmovne
sub
repnz
js
ret
test
es
pushf
or
mov
jmp
aad
mov
and
mov
mov
dec
sahf
mov
mov
jne
movsl
xchg
hlt
push
pusha
inc
rorl
mov
sahf
or
arpl
mov
fdivr
push
pop
imul
cmp
jnp
imul
mov
xchg
sarl
rcrl
inc
stos
pop
dec
cmp
xchg
jmp
cmpsb
add
sbb
pop
dec
cmp
sub
jnp
pop
xor
mov
lea
jle
dec
or
jnp
ja,pt
rolb
clc
jns
inc
arpl
or
lret
xchg
fwait
lock
or
rorl
jbe
pop
mov
std
cld
out
xchg
xlat
mov
jns
cmp
int3
scas
rcll
stos
scas
sub
push
int
and
or
and
mov
out
mov
test
dec
sub
xchg
je
adc
loopne
fists
in
adc
push
outsb
call
orl
out
dec
std
popf
or
or
jnp
stos
sahf
adc
and
pop
push
jle
lret
xlat
dec
dec
adc
lods
mov
ret
dec
pop
xor
rolb
jae
adcb
jge
mov
test
push
js
icebp
mov
fisubrs
dec
enter
test
popf
aaa
lcall
out
bnd
or
pop
hlt
loopne
and
inc
out
cmp
jge
fwait
sbbb
mov
dec
or
fwait
outsl
int3
mov
cmp
fisubrs
into
xor
sbb
stc
and
lds
loop
xchg
movsb
popl
push
jbe
xchg
aas
in
rclb
enter
daa
ret
data16
fisubs
add
jo
mov
xchg
dec
add
xor
stos
xchg
in
cmp
pop
push
push
shl
test
xchg
dec
inc
dec
ja
cmpsb
jmp
outsl
js
fwait
stos
pop
cmc
jle
push
lcall
orl
ds
pop
jno
dec
push
push
rorb
jns
iret
ja
or
xchg
jmp
or
js
cltd
int
jno
sub
addl
mov
daa
push
cmpsl
cmp
and
mov
outsb
test
in
jg
mov
mov
xchg
insl
mov
pop
mov
and
push
push
insl
insl
cmp
pop
addr16
lret
lcall
xchg
sahf
xor
pop
cmp
outsl
add
loop
cld
xchg
stc
out
scas
mov
xchg
xor
lods
sbb
testl
or
or
loope
or
dec
gs
test
mov
xchg
jns
adc
out
cmpsl
imul
je
xchg
movsb
xchg
popw
fucomip
sbb
fdiv
lret
xlat
in
fldt
pop
aas
imul
jo
sti
xor
push
aad
pop
dec
nop
movsb
test
inc
repnz
jae
mov
shl
cmp
xchg
mov
lea
mov
stos
xor
pop
pop
fstpt
adc
shl
jmp
mov
insb
inc
loope
adc
aas
out
jb
jb
jnp
dec
hlt
cmp
cmp
lret
outsl
push
adc
sub
ret
push
arpl
push
mov
cltd
dec
mov
lahf
pop
jle
daa
mov
pop
lock
das
lret
mov
sbb
jnp
cmp
js
rorl
leave
xchg
push
insl
cmp
insl
mov
call
icebp
out
lahf
jmp
lret
cmp
mov
fiaddl
divl
pop
sarb
mov
sub
aam
xor
adc
mov
cwtl
jmp
fldl
and
mov
aas
ljmp
xor
mov
fiaddl
lea
cmp
ud0
mov
pop
das
pop
cltd
mov
push
ds
shrl
push
fiaddl
jg
mov
mov
data16
stc
dec
jmp
out
testb
add
loope
xor
xchg
or
scas
pop
xor
mov
mov
nop
mov
mov
ss
pop
ja
push
add
jmp
and
ret
or
cmp
fwait
pop
pushf
sbbb
cwtl
das
jne
push
mov
addb
jb
sub
into
adc
shlb
xchg
add
cmpsl
mov
das
sbb
dec
stc
pop
addr16
jle
and
or
mov
hlt
nop
mov
or
jnp
xor
lahf
xor
xor
xchg
adc
pop
jmp
dec
dec
cmp
pop
iret
push
xor
push
test
ljmp
dec
inc
jnp
in
jle
mov
pop
adc
push
dec
iret
imul
loop
jnp
loopne
push
cmc
inc
xchg
fnop
jae
mov
imul
push
push
aam
mov
pop
xchg
dec
test
inc
dec
cs
loopne
out
ficoms
sarb
mov
push
ja
leave
das
sbb
hlt
sub
arpl
push
inc
icebp
dec
push
std
mov
sbb
sbb
or
pop
dec
add
ss
test
mov
fmulp
xor
xor
jne
inc
scas
mov
sub
cltd
mov
adc
jbe
xor
in
mov
jae
daa
ret
cmp
sbb
fildl
jl
sahf
fisttps
ja
push
movsb
loope
movsl
pop
xor
lahf
pop
inc
add
fistpll
push
pop
xor
fsub
xchg
cmpsb
pop
dec
jb
pop
or
js
jge
pop
xor
sub
loope
lods
jg
out
dec
lcall
imul
sub
bound
pop
jl
add
sbb
pop
daa
or
cmp
mov
pop
sub
mov
push
mov
mov
outsb
sub
andb
sbb
shlb
mov
or
lods
aas
pusha
mov
mov
jbe
cmp
cmp
adc
or
mov
or
mov
test
fcomps
cmc
and
xlat
xor
mov
sub
cmpsb
lcall
sub
pop
ss
pop
pop
lods
xchg
mov
mov
out
out
or
cli
cmp
dec
inc
cmp
sahf
jle
sub
mov
gs
mov
pop
ret
adc
mov
adc
xchg
mov
lcallw
mov
lock
and
pop
inc
mov
in
push
mov
adc
mov
nop
jg
iret
dec
cmpsb
jl
inc
add
mov
les
push
in
fadds
or
lock
pop
or
mov
hlt
add
jmp
lahf
repnz
adc
retw
aas
mov
test
inc
ljmp
je
xlat
dec
jecxz
adc
and
rcrb
cwtl
bound
mov
bound
add
or
out
sbb
mov
fstps
and
push
das
jp
aaa
mov
hlt
jle
and
pop
dec
rcrl
and
outsb
jle
push
xor
mov
jbe
cld
jbe
jmp
cmpsl
cmp
xchg
mov
mov
push
or
push
sti
cmpsb
sub
imul
ret
mov
push
mov
xchg
push
add
popa
out
mov
mov
std
cmp
push
mov
cmp
sub
cs
repz
test
inc
mov
or
out
adc
les
imul
ret
fs
movsb
and
fsubrp
pop
sbb
add
scas
aam
call
and
xor
mov
pop
mov
xchg
fildll
icebp
jge
ja
fs
dec
ficoms
imul
popf
sbb
stos
bound
jne
push
scas
mov
sbb
out
push
fistps
je
cwtl
jns
or
add
std
daa
mov
or
cmp
jae
jp
out
mov
xorb
arpl
adc
sbbb
sbb
fists
adcb
mov
xchg
adc
jge
out
xor
xor
inc
push
ret
jg
stos
test
and
xor
insb
push
insb
movsb
jnp
fisttps
push
gs
adc
adc
push
adc
mov
pop
mov
sbb
fists
scas
adc
or
andb
lahf
mov
out
fstl
flds
scas
push
outsl
rol
stos
lods
rcl
je
pop
lahf
stos
repnz
hlt
jbe
jne
popa
push
sub
shll
movsb
mov
sbb
sub
aaa
xchg
dec
sub
sti
mov
add
inc
push
pop
cmp
fidivs
inc
xor
rclb
scas
imul
or
movsb
movsl
dec
push
inc
push
call
in
mov
cwtl
aam
rorl
mov
xor
push
dec
pop
out
add
xchg
mov
loopne
std
lahf
jns
sub
mov
adcl
inc
imul
pop
add
mov
push
mov
dec
sub
pop
dec
cmp
les
jno
adc
add
sbb
xorb
ficomps
push
xchg
add
scas
and
test
jp
int
adc
sub
imul
push
or
push
das
pop
fdivrl
add
outsb
mov
incb
cmp
jg
out
xchg
mov
mov
mov
imul
adc
xchg
mov
xchg
fmul
and
mull
push
lret
rol
fsubl
ja
out
sahf
jnp
mov
out
lahf
xor
arpl
loop
adc
stc
pop
sub
fs
out
adc
pop
ss
in
lods
jp
icebp
mov
jo
out
ds
cli
jo
insl
xor
pop
or
fwait
add
cmp
loopne
inc
inc
pop
loope
jge
rcrl
cmp
xor
scas
addr16
sbb
sbb
dec
cwtl
lods
xlat
bound
loop
push
jnp
shrl
dec
aaa
imul
dec
add
add
fnstcw
mov
xchg
setle
call
test
pusha
pop
mov
sbb
push
pop
stc
cs
imul
inc
test
jb
mov
dec
loop
movsl
je
nop
sub
call
bound
std
ja
and
sbb
fldenv
mov
loope
andl
mov
sarl
pop
ficoml
lock
pop
das
pop
xchg
inc
mov
stos
or
adc
jmp
leave
testb
insl
xchg
test
dec
arpl
jg
rorb
fnstsw
clc
icebp
popf
jno
cld
mov
xchg
xor
and
sub
sub
and
add
aam
movsl
mov
es
xchg
outsb
fstl
push
xchg
xchg
test
and
lods
mov
mov
and
mov
jp
out
push
icebp
ljmp
cmp
mov
pop
mov
mov
dec
jns
insb
test
in
daa
xchg
pop
pop
sbb
or
ret
pop
dec
pop
stos
in
adc
pushf
add
leave
clc
movsl
push
and
xor
addr16
xor
sti
andl
jl
mov
lods
lock
sti
mov
shl
insb
inc
sub
ds
nop
data16
jge
ret
push
dec
and
jne
mov
sub
pop
sbb
in
sar
xchg
lahf
sti
in
mov
xchg
mov
or
lods
and
jp
aad
mov
test
mov
pop
mov
lret
push
in
lds
fbstp
xor
or
xor
mov
pop
xor
mov
add
or
jecxz
mov
mov
jmp
add
push
lods
adc
adc
loopne
iret
mov
dec
ret
cmp
aad
inc
cmpsl
scas
mov
push
icebp
jns
or
sub
inc
push
sub
divb
cld
imul
test
lds
clc
call
mov
mov
movsl
sub
ror
arpl
in
inc
test
cltd
sbb
mov
push
push
fs
cld
cmp
xlat
ror
iret
jp
imul
xor
sub
xor
or
pushf
cmp
adc
xor
les
push
int3
jbe
rorl
xchg
or
push
aas
daa
shlb
ja
mov
jl
mov
push
push
shlb
jnp
sbb
fwait
dec
test
repz
push
cli
mov
pop
addr16
pop
test
inc
js
std
repz
mov
sbb
mov
adc
or
inc
loop
idiv
sub
mov
add
rcr
pop
mov
addb
sbb
push
push
xor
mov
int
mov
sub
and
pop
sub
lcall
and
sub
xchg
mov
mov
cmp
jg
adc
mov
rorl
or
push
cwtl
push
aam
xchg
inc
hlt
fmuls
mov
mov
jae
xchg
mov
sbb
xchg
push
imul
loop
sub
out
shl
push
insl
idiv
adc
xor
adc
imul
mov
clc
push
cli
mov
push
mov
or
scas
lock
inc
pop
pop
lea
push
pop
add
bound
movsb
popa
inc
imul
xchg
data16
outsl
pop
cmp
sbb
adc
test
pop
mov
int3
nop
xor
shr
inc
sub
vpsllq
sub
repz
mov
lea
data16
daa
xchg
pop
jb
inc
adc
lds
aas
jecxz
addr16
inc
jbe
mov
aas
int3
xchg
js
out
mov
je
pushf
jg
imul
adc
js
cmp
push
sbb
fadds
ljmp
jne
dec
je
mov
add
pop
sarb
mov
xor
lock
mov
mov
bound
ja
cmp
push
notb
cmpb
mov
scas
repnz
je
or
int3
lret
test
stos
and
enter
test
mov
sub
inc
inc
aam
pop
mov
roll
and
stos
clc
ja
cwtl
xchg
rcl
sbb
in
insb
popa
adc
sub
jnp
mov
rcll
int3
dec
je
sbb
imul
popa
xor
test
push
add
jp
dec
loopne
jmp
xchg
test
jg
and
xlat
jne
cli
pop
nop
stos
fisttpl
fwait
add
in
nop
call
aam
or
loop
lcall
xchg
out
pop
imull
ja
pop
inc
dec
les
or
jp
fwait
lods
jmp
push
lock
mov
mov
maskmovq
bound
jb
in
xor
xchg
out
call
pop
sub
cmp
out
jp
js
mov
lods
jecxz
ja
hlt
mov
dec
mov
frstpm(287
nop
xchg
cld
pusha
dec
push
out
insl
enter
shr
sub
ss
addl
mov
cmpsb
push
xor
xchg
lret
jb
and
adc
insb
hlt
and
jnp
push
fdivrl
xlat
dec
push
repz
adc
imul
inc
mov
mov
push
mov
pop
or
movsb
divb
fcmove
cmpl
sbb
jge
imul
jae
mov
pop
jp
fwait
push
sub
xchg
pusha
scas
hlt
or
push
arpl
cmp
jge
pop
jp
ss
aaa
adc
or
stc
in
vmovupd
imul
dec
fidivrs
loop
jo
into
in
daa
sub
and
mov
mov
jbe
into
pop
in
outsb
mov
enter
daa
mov
insl
ja
pusha
insl
dec
jl
mov
add
dec
lret
jb
mov
push
sbb
ret
push
bound
test
mov
leave
inc
cmpsb
loop
mov
iret
out
js
pushf
ss
icebp
sbb
loope
mov
push
cmp
pop
mov
sarb
xor
cmpsb
sbb
ss
movsbl
test
int
aas
jp
arpl
sub
cmpsl
lods
mov
push
add
adc
shr
xor
sbb
xorb
jg
cmp
test
mov
or
and
loope
cmp
inc
xor
loopne
sub
rorl
orb
lods
sahf
rorl
cmc
jne
jp
cmp
jg
loop
cli
sub
lret
xor
fs
jns
ss
mov
sahf
out
ss
dec
js
ss
lods
cmp
pop
insb
or
popf
into
and
add
loopne
cmp
pop
pop
add
ja
outsl
imul
cld
addl
cmp
and
mov
xlat
loopne
inc
sub
shlb
test
call
stc
aad
dec
fwait
nop
adc
jmp
inc
idivb
les
adcl
or
jmp
cmpsb
push
rcrb
jb
adc
mov
pushf
lcall
cs
inc
std
leave
sbb
inc
fidivrl
imul
jb
shr
rcrb
add
push
inc
add
std
lds
cwtl
xchg
jge
mov
push
les
nop
push
xor
enter
add
mov
inc
lock
in
das
pop
mov
mov
sbb
xor
mov
imul
pushf
lahf
cmpsl
mov
fnstenv
icebp
dec
shrl
lret
hlt
cmp
negb
arpl
and
ror
mov
sub
and
ret
push
and
movsb
or
adc
mov
ret
test
pusha
cmp
and
nop
xchg
or
push
cmpsl
mov
into
add
cltd
cltd
cwtl
and
pop
fistl
pop
dec
dec
inc
stc
test
xchg
xor
mov
pop
movsl
mov
stos
lret
out
orb
add
jl
pushl
jo
xor
add
into
mov
xor
xchg
jl
stos
dec
dec
xchg
out
pop
and
fisttpl
push
jb
or
cmp
fstpt
pop
push
xchg
jp
jne
insl
mov
out
out
mov
bound
fwait
cli
in
jecxz
xchg
cmp
enter
bound
addr16
out
jp
iret
es
stc
sub
mov
in
lret
xor
popa
stos
fildll
dec
aas
jmp
jbe
imul
gs
int3
push
jnp
loope
pop
push
and
stos
fisttpll
and
cmp
dec
add
jl
push
cmp
inc
adc
mov
jb
dec
ret
jae
inc
in
mov
jae
pop
jo
ja
sahf
or
pop
inc
mov
pushw
sub
jle
fists
lock
scas
jnp
cmp
shlb
xor
and
leave
or
pmuludq
test
mov
inc
std
sbb
add
icebp
das
cwtl
aaa
rolb
adc
aam
lcall
popa
push
pop
mov
xor
loope
add
push
mov
cmpl
setge
xchg
jns
idivl
xor
enter
daa
mov
icebp
or
jl
sahf
dec
lods
jmp
movsl
jns
or
mov
fistps
xor
mov
push
mov
std
inc
sbb
cmpsb
gs
pop
testb
push
into
xor
xor
push
loope
xchg
xor
mov
ds
cmp
rclb
insb
subb
xor
mov
push
xor
jns
inc
jle
int
lods
sub
div
pop
es
mov
or
mov
sub
or
outsb
mov
xchg
test
leave
orb
mov
ljmp
or
push
sahf
and
cmp
call
negl
dec
and
mov
xchg
repz
sahf
sub
cwtl
xchg
dec
outsl
pop
adc
stc
subb
adc
fnsave
push
test
mov
clc
es
or
in
or
lcall
or
gs
jmp
loopne
rorb
ds
mov
dec
pop
push
adc
lds
data16
lcall
jmp
inc
xlat
pop
mov
dec
mov
adc
mov
mov
ljmp
jmp
pop
dec
and
mov
fldenv
pop
repz
mov
sub
faddl
or
pop
fcomp
pop
adc
clc
pushf
inc
loope
jmp
aaa
nop
cs
cmp
test
or
jb
adc
dec
inc
int
je
mov
jecxz
fucomi
jle
add
insb
jae
cwtl
dec
pop
mov
int
clc
andl
push
fistpl
pop
pop
lods
xchg
pop
mov
nop
sub
mov
bound
testb
sti
jl
mov
mov
hlt
rcr
mov
negb
shrl
lret
inc
imul
mov
icebp
and
jne
and
pop
lret
arpl
mov
push
inc
and
inc
jg
out
rcl
sahf
stos
inc
sub
test
aam
lds
es
clc
pop
fisttpll
push
cmpsl
clc
in
pop
jg
dec
mov
ljmp
test
imul
push
addb
fiaddl
add
mov
test
test
fs
scas
pop
push
test
sub
sbb
das
roll
loopne
stos
mov
icebp
inc
add
sbb
sbb
xor
dec
xorb
stos
mov
lahf
or
ffree
hlt
ja
fidivl
stos
mov
mov
movsl
lret
or
push
ss
cltd
mov
dec
push
xchg
rclb
in
ljmp
or
or
sbbl
and
fwait
mov
imul
mov
push
fisttpl
cmc
gs
fs
pusha
test
xchg
xor
psubsw
insb
mov
andl
mov
sbb
pop
push
mov
pop
das
and
test
insb
lret
jnp
insl
gs
adc
dec
adc
push
iret
rcl
aaa
ret
lcall
data16
mov
push
cmp
pop
or
lcall
fidivl
push
cs
sti
add
xchg
data16
fidivrs
out
sahf
rolb
mov
mov
in
add
hlt
mov
mov
fdivrs
xchg
mov
aaa
jnp
int3
aas
push
fdivrp
popa
fdivl
cmp
cmp
and
mov
cmp
insl
push
adcb
in
cmp
mov
daa
mov
sub
jl
mov
jmp
adc
sbb
dec
fsubr
lahf
cmc
or
test
push
xchg
sbb
or
cmpsb
call
cltd
lds
xchg
fwait
pop
outsl
adc
or
movsl
int
add
pop
enter
and
outsl
mov
cmpb
sbb
mov
xor
test
stos
int
std
sub
inc
pop
movsl
adc
lcall
xor
and
call
pop
test
insl
arpl
and
sbb
push
lahf
cli
and
popa
dec
push
mov
out
mov
negl
pop
lret
pusha
sarl
pop
mov
add
and
sahf
pop
ds
add
shrb
stos
cmp
or
sub
aam
ficoml
mov
mov
lods
push
xor
mov
and
pushf
ds
cli
cmp
cs
outsb
test
or
int
jmp
or
ss
push
jge
pop
pop
fdivrp
adc
inc
rclb
in
jmp
add
sbb
sbb
cmp
cmp
pop
aam
sub
cmpsb
mov
mov
pop
in
jg
fwait
sti
dec
cld
cmp
ret
std
je
movsb
xchg
int
push
xchg
dec
subl
fstps
outsb
mov
xchg
sbb
add
push
mov
movsb
jle
pop
mov
xor
cmpsl
pushf
lock
jmp
pop
push
cs
movsb
or
adc
daa
aas
test
fwait
stc
dec
mov
mov
mov
sub
pop
cwtl
or
outsb
mov
movsl
mov
dec
xor
ja
pop
push
imul
aad
outsl
mov
xchg
and
scas
push
daa
mov
negb
xor
leave
sbb
xchg
mov
stc
fdivrp
dec
and
lret
rcrb
and
cltd
xor
pop
add
fsub
sub
shrb
cmp
ret
outsb
movsl
popa
es
push
cmp
xor
clc
sub
xchg
mov
ljmp
mov
mov
lods
cwtl
or
xchg
std
cmp
fidivrs
std
filds
mov
fstpl
mov
fnsave
insb
xchg
test
mov
outsb
sbb
call
ss
test
and
dec
dec
push
add
xor
iret
push
xor
cmc
inc
or
mov
mov
out
pop
cwtl
adcl
mov
imul
nop
xor
fwait
cmp
into
push
fldenv
pushf
mov
inc
lods
out
lods
mov
stos
jns
cltd
inc
icebp
xchg
fisttpl
mov
int
sub
cs
mov
push
lcall
clc
ret
fwait
mov
jmp
in
popa
mov
fucomip
mov
xchg
push
mov
jg
xchg
or
out
xorl
shl
push
loop
sbb
idivl
adc
and
repz
insb
xor
cmp
jle
mov
or
xor
pop
iret
xor
ret
or
xchg
xchg
inc
rorl
jae
pop
lahf
push
std
insb
ret
push
and
mov
push
xchg
push
mov
xchg
imul
lds
cmpsb
rcrb
mov
or
add
stc
push
hlt
in
pushf
mov
inc
add
cmpl
sbb
jp
dec
adc
mov
mov
pop
and
lods
sub
xchg
cltd
inc
scas
out
xor
pop
adc
cmp
sahf
andl
jle
in
and
xchg
dec
std
movsl
daa
mov
push
xchg
jno
xlat
cmpl
adc
testb
xchg
and
sar
lahf
adc
pop
push
fildl
imul
data16
imul
pop
inc
enter
out
sbb
push
bound
sub
pop
clc
cmp
fsubl
adc
dec
xor
push
icebp
dec
sbb
mov
int
xor
pop
and
add
push
or
stos
mov
sub
xor
test
je
ret
jg
leave
loopne
jge
jbe
ja
add
mov
mov
push
movsb
cli
pop
cmp
jne
xchg
negl
mov
sub
push
lods
sahf
stos
inc
arpl
lret
xor
mov
inc
dec
loop
fistpl
pop
jno
adc
aas
jno
out
push
pop
lods
std
ret
enter
push
out
or
xor
xchg
ja
movb
into
into
popa
sub
in
loopne
cmp
notl
lock
imul
push
mov
jp
jo
lods
adc
scas
mov
cmp
cmp
popf
outsb
mov
jge
cmp
ljmp
out
pop
aad
push
adc
loopne
jbe
ja
pop
fxch
loop
fdivr
lods
repz
repz
fimuls
lea
mov
and
fistps
lds
mov
jno
sti
lcall
xchg
push
jo
imul
fdivl
push
and
je
adc
push
movb
cwtl
add
mov
jl
push
mov
dec
and
jp
mov
jg,pn
pushf
jg
lock
loop
das
mov
lods
mov
imul
negb
push
xor
pop
jmp
mov
shlb
cld
js
dec
inc
leave
pop
mov
sti
repz
xor
or
and
lret
rolb
sub
mov
ffreep
std
dec
test
sub
mov
clc
arpl
jo
int
mov
mov
in
lods
movsl
imul
mov
fstl
push
cmp
insb
add
pusha
test
push
xor
leave
cmpsb
dec
jl
loop
adc
addb
jne
shll
cmp
pop
cmpsb
mov
stos
xchg
push
sti
out
stos
xchg
sbb
push
fnstenv
decl
test
or
insb
mov
mov
movsl
pop
mov
push
fisubl
dec
nop
leave
test
out
test
fwait
push
es
scas
or
mov
pop
mov
out
dec
jns
in
pop
in
repz
sub
mov
jge
sub
sub
addr16
fs
or
stc
mov
std
lret
inc
aad
in
ret
mov
rclb
or
mov
add
js
in
pop
mov
inc
cmpl
cmp
adc
and
subl
test
push
psubusw
adc
sbb
iret
add
in
pop
jmp
lods
inc
fiadds
push
rorb
testb
push
jecxz
inc
ficoml
xchg
lret
sbb
stos
and
mov
jp
jbe
cmp
pop
or
hlt
cmp
mov
inc
push
jl
jge
pusha
loop
and
aaa
or
cmc
fiadds
and
int3
adc
sbb
std
xor
repnz
mov
and
movsb
and
lcall
push
push
jo
jbe
dec
cltd
in
or
enter
daa
mov
mov
jno
cwtl
mov
daa
dec
stc
enter
lods
inc
movsl
mov
mov
push
scas
stc
test
ljmp
cmpsb
out
popf
cmpsb
pop
imul
js
in
clc
push
add
pop
sub
sub
and
adc
and
sbb
movsl
mov
add
sbb
xor
xchg
enter
repz
sub
lcall
xchg
fdivrl
jbe
repnz
jne
test
xchg
insb
sbb
xor
add
mov
mov
mov
push
cmpsl
xchg
cmp
xor
daa
lret
mov
retw
and
dec
xor
dec
inc
shl
xchg
adc
outsl
sti
out
loop
cmp
cmpsl
cmc
push
fs
xor
lods
in
into
mov
push
mov
xor
dec
jle
xor
inc
loope
mov
push
loopne
adc
pop
fwait
lret
ret
test
imul
adc
sbb
mov
in
xlat
fmull
mov
push
xor
sti
lods
pop
pop
decb
add
jl
jmp
inc
mov
flds
loope
jecxz
mov
xchg
mov
dec
test
dec
lds
mov
dec
pusha
adc
mov
jmp
repnz
push
xor
push
inc
test
aas
out
shlb
push
dec
lods
cmp
je
lds
inc
cmp
std
popa
and
cwtl
jg
and
mov
fdivrs
dec
or
scas
pop
xchg
call
xlat
lock
add
das
xchg
pop
ret
mov
cmc
clc
adc
shl
mul
sbb
orb
sti
cmpsl
mov
mov
cld
mov
mov
call
mov
inc
icebp
jne
pop
rol
sub
adc
ret
mov
mov
mov
jb
jle
sar
sahf
dec
add
or
push
ljmp
lods
adc
mov
repnz
xchg
and
push
push
adc
maskmovq
idivl
add
sahf
xchg
daa
mov
bnd
dec
jecxz
adc
loop
mov
movsl
stos
rorl
pop
xchg
stos
xchg
out
push
aam
add
imul
scas
ds
xor
mov
stos
repnz
xor
scas
cmp
test
xchg
mov
push
lds
cmp
fwait
dec
sbb
inc
mov
inc
or
js
fwait
xchg
adc
and
mov
mov
jge
out
push
adc
jns
addr16
cmpsb
mov
xchg
jns
ret
mov
insl
or
mulb
syscall
jp
xor
mov
nop
or
sub
dec
and
pop
pusha
push
fs
sub
mov
xchg
mov
cwtl
cmp
popf
push
pusha
xor
dec
test
insl
cmp
jnp
and
sbb
addr16
arpl
out
mov
ret
jp
and
movb
jae
push
pop
or
or
inc
bound
fimull
out
xchg
add
pop
imul
scas
pop
adc
pop
add
test
mov
xor
adc
hlt
cmp
arpl
out
inc
or
xchg
fwait
gs
imulb
or
sbb
int3
add
pop
subl
fsubp
and
dec
fisubl
xor
and
scas
cmp
jo
jb
push
insl
inc
cmpsl
jbe
lea
enter
daa
mov
or
jno
jge
jl
xor
dec
push
or
movsl
xchg
xor
and
scas
das
push
subl
add
cmpsb
jno
jno
xchg
rol
js
pop
xor
sub
ss
pop
dec
loope
mov
sub
push
cmp
cmpsl
movsb
test
enter
add
ja
mov
ds
xor
mov
push
test
int
dec
sub
and
mov
cld
fsubl
add
outsb
inc
scas
daa
test
mov
jg
cmp
mov
or
mov
int
ss
and
sbb
push
stos
movsb
es
jmp
cmpsl
mov
sar
mov
fldt
sbb
xor
xor
pop
outsl
fimull
es
pop
add
fs
cld
adc
lahf
mov
sub
cli
aad
pop
xor
hlt
cmp
xlat
sub
movsb
aas
into
xchg
sbb
pusha
loopne
sti
mov
adc
fildl
or
ss
push
sbb
jmp
push
xlat
sbb
insb
sub
bound
rolb
sti
pop
xlat
mov
aad
sti
sbb
dec
sahf
das
mov
fnstcw
pop
ja
rclb
xchg
fs
adc
push
call
and
lds
adcb
lods
movsb
aas
pushf
icebp
pop
mov
mov
mov
rep
inc
lahf
mov
jb
imul
jecxz
jecxz
mov
and
or
push
cwtl
cmp
and
mov
and
lods
fistpl
jl
pop
cmp
test
cli
ss
das
jb
mov
mov
mov
lds
mulb
or
adc
test
inc
cmp
icebp
jle
xor
into
jmp
lret
pop
outsb
jne
lods
mov
and
push
int3
pop
bound
pop
sub
sub
aam
mov
ret
sbb
xor
sub
movsl
mov
jmp
dec
lods
fs
mov
mov
adc
sub
push
out
sbb
push
inc
ds
insb
add
shrl
out
data16
push
mov
ljmp
out
xchg
das
sbb
dec
aad
cld
fisubrl
pop
mov
add
xchg
pop
xor
ljmp
pop
enter
incl
shr
jb
leave
inc
scas
ja
xchg
cmp
or
pop
and
ret
jne
mov
jns
dec
sahf
xor
jns
add
cmp
enter
adc
imulb
pop
mov
jp
bswap
mov
nop
popa
mov
fistl
dec
push
test
pusha
icebp
out
dec
es
xchg
jg
sti
jmp
insl
loope
sbb
adc
repz
loope
mov
mov
popf
jns
test
lahf
jnp
cmp
jle
add
push
popf
jecxz
adc
mov
push
ret
ficomps
ficoml
hlt
repnz
push
inc
gs
cmc
lret
jns
inc
loope
pop
pop
rclb
cmp
imul
scas
push
imul
mov
cmc
mov
add
leave
pop
cmp
arpl
xor
inc
or
inc
jge
mov
xorb
adcl
stos
popa
add
test
jmp
and
fimuls
fldl
jo
sbb
scas
popa
fcomps
adc
cmp
inc
add
std
jbe
push
mov
inc
push
enter
daa
mov
adc
jl
pop
cltd
dec
xlat
xor
movsl
pushf
xor
and
out
and
xchg
jge
push
rcrl
cmp
inc
jecxz
dec
cmpsb
hlt
adc
pop
mov
jne
pop
imul
fldcw
loope
pop
and
cmp
icebp
js
cmpsl
repnz
psraw
rcr
cltd
mov
test
int3
sbb
repnz
xor
push
jmp
xlat
sub
outsl
pop
mov
rclb
mov
shr
int
insl
or
outsb
mov
dec
roll
popf
jl
mov
push
mov
xorl
cmp
cmpsb
cmp
negl
or
out
insb
push
mov
cmp
sbb
nop
lods
sahf
xchg
sbb
xor
fldt
xor
push
nop
inc
stc
adc
ja
adc
push
fisubrs
pushf
nop
mov
cli
or
fwait
xor
jl
cmp
or
into
lret
jmp
inc
loopne
mul
pop
fld
push
adc
leave
imul
mov
insl
xor
sbb
es
xlat
pop
push
pop
sub
dec
bound
sub
xchg
decb
out
aad
in
nop
xor
dec
std
ja
inc
mov
jg
je
fadd
stc
mov
xchg
xchg
daa
hlt
repnz
gs
mov
insb
iret
adc
pushf
mov
jle
sbb
mov
pop
in
mov
sub
jne
lcall
jecxz
iret
xchg
lea
sbbb
pop
loop
mov
dec
dec
loope
ret
mov
pop
fdivl
in
icebp
push
std
lock
jg
das
push
insl
mov
arpl
and
or
shll
and
addr16
insl
int3
dec
jge
cmp
cmpsl
mov
lcall
stc
adcl
nop
cli
cld
and
add
outsl
sarb
loop
aam
mov
ret
stos
filds
es
int3
lock
js
xchg
mov
ljmp
movsb
lods
out
sarb
cmp
xchg
mov
movmskps
adc
add
add
je
xor
inc
add
test
enter
es
and
pop
cmpsl
sub
out
aam
cmpsl
add
mov
mov
sbb
cwtl
jmp
xor
xor
jae
scas
mov
mov
test
ja
dec
xor
and
inc
loopne
fmull
adc
cmc
sbb
push
gs
jne
sub
mov
add
out
sub
bound
add
xchg
pop
or
es
sbb
sbb
and
je
movsb
clc
or
jmp
cmp
jb
push
jg
jmp
cmp
subl
out
fcompp
popf
mov
pop
mov
cli
cltd
out
outsl
andb
adc
insb
loope
lret
sbb
jle
pop
xchg
aam
mov
sbb
dec
pop
nop
daa
fwait
jae
mov
push
or
insl
push
pusha
inc
mov
xchg
scas
add
repnz
jne
inc
mov
scas
int
imul
cmc
sarl
push
sarb
jo
hlt
sbb
sahf
inc
pmaxsw
jge
mov
mov
dec
pop
pushf
or
sti
mov
pop
loope
out
fisubrs
mov
imul
inc
orl
insl
ljmp
mov
jbe
imul
mov
jmp
cmp
iret
pop
jno
mov
jl
pop
orb
test
sbbb
and
sub
push
daa
stos
pop
test
dec
sub
inc
jb
cmpsb
ja
out
loopne
imul
mov
loope
and
sub
cmp
clc
ds
adc
mov
or
sbb
or
jle
mov
mov
mov
fld
and
sub
push
test
lcall
jo
jl
stos
sub
outsb
push
fildl
repz
shl
leave
aam
mov
xor
int3
dec
shlb
or
dec
push
mov
repz
popa
xchg
jns
sbb
add
loop
popf
shrl
jo
mov
and
or
icebp
jl
out
pushl
mov
fisubs
stc
int3
add
fs
mov
aas
push
mov
lods
cltd
repz
xchg
pop
pop
cli
cmp
clc
xor
adc
cmp
insl
cmp
sbbb
lds
inc
pop
clc
lret
cmp
jp
ljmp
add
outsl
sbb
popa
adc
sub
aas
mov
xchg
daa
jge
mov
test
sbb
or
les
fldcw
cmpb
ljmp
call
pop
imul
or
adc
les
xchg
jmp
inc
scas
es
aad
fdivrl
les
jb
dec
lret
push
je
into
jmp
outsl
ljmp
shrl
cwtl
mov
jge
sub
jge
jg
jno
mov
pop
dec
int3
jnp
fstpt
or
int
mov
push
mov
mov
adc
xor
andl
subb
xor
dec
imulb
addr16
ss
shlb
mov
icebp
sub
cmp
in
out
lret
std
and
mov
jge
daa
sarl
mov
xor
rclb
inc
cs
loop
ret
cmp
rcr
and
dec
insb
jo
leave
mov
add
jno
lods
push
das
or
pop
jne
xchg
stc
xchg
popa
push
movsb
adc
unpcklps
out
add
rol
cltd
sbb
dec
test
jg,pt
add
adcl
mov
sbb
test
cmp
sbbl
jo
rorl
push
shrb
aaa
dec
xor
add
xchg
xor
add
divps
repnz
adc
mov
ja
aas
std
lahf
ja
test
pop
push
je
ja
mov
fwait
and
push
push
or
cmp
pop
testb
xor
stos
jns
test
in
cmc
adc
fwait
jmp
or
add
jp
loop
mov
cld
mov
iret
xchg
lcall
add
in
cs
pusha
daa
clc
add
xchg
and
jns
xchg
add
cmp
test
stc
pop
outsl
popf
fst
loopne
jle
cmp
xchg
add
add
mov
and
pusha
jnp
mov
inc
push
sub
adc
mov
ret
jmp
call
jae
jge
push
int3
dec
ja
xchg
jb
push
fbstp
fisubl
pop
xchg
add
sbb
scas
xor
vsqrtpd
adc
mov
cmpsl
gs
dec
dec
jg
test
inc
adc
adc
mov
add
or
xchg
add
sub
shl
pop
adc
push
jae
xor
pop
shll
scas
pop
xor
aaa
out
or
jbe
xchg
movsb
adc
mov
jbe
or
in
cmpsb
sub
daa
mov
in
cmp
inc
jno
add
jl
xor
mov
inc
push
gs
movsl
stos
bound
out
jmp
leave
push
cli
cmc
subl
add
sub
pop
adc
in
pop
dec
pop
jmp
fwait
lret
or
xchg
adc
in
sbb
adc
xchg
xchg
pop
popl
mov
sbb
cwtl
mov
pushf
or
int
lcall
lahf
test
dec
push
mov
xor
sub
mov
test
cwtl
pop
orb
jg
pop
jae
sbb
test
lret
mov
aaa
jmp
push
mov
xor
sbb
cld
neg
xchg
mov
aad
cli
rol
jne
pushf
dec
push
sbb
inc
sahf
fnstcw
cmpsl
xor
mov
loop
mov
stc
cmp
fs
je
adc
jb
lods
cmp
mov
mov
cli
outsb
xchg
out
insl
push
cmp
jbe
or
sub
gs
sub
loopne
sub
pop
pop
rol
adc
mov
imul
jp
add
das
cmp
into
cmp
jecxz
mov
mov
in
add
sti
imul
lea
mov
out
rorb
lgs
xchg
lods
push
sub
inc
andb
sahf
pop
daa
pop
mov
mov
pushf
repnz
ja
cmpsb
cli
mov
inc
xor
dec
mov
jb
or
dec
mov
cmp
or
jg
jle
into
jnp
std
sub
cwtl
imul
mov
fsubrs
orl
push
push
and
or
bswap
popa
mov
rcrl
xchg
roll
cmp
in
ret
lcall
cmpsl
mov
ja
fstpt
icebp
add
sar
dec
sub
lret
insb
and
push
push
clc
mov
mov
das
and
mov
mov
es
aaa
clc
mov
outsb
xchg
or
das
popa
jecxz
imull
lds
mov
inc
fucomip
push
jg
lahf
test
mov
push
pop
jns
repnz
aam
shll
lods
push
fstpl
dec
jg
mov
xchg
inc
cmp
shl
clc
inc
pop
std
dec
ret
sbb
add
xlat
lods
ljmp
dec
push
xor
mov
or
or
mov
mov
fnstsw
cli
aaa
test
inc
inc
dec
dec
xor
inc
or
clc
jns
push
xor
jne
xor
fistl
cmpsl
fwait
jns
icebp
loop
fildl
xchg
mov
push
mov
mov
push
or
and
addr16
ja
jp
mov
push
cmp
scas
mov
in
xorl
mov
jns
fsubl
into
movsb
sbb
mov
dec
out
push
outsb
popf
add
inc
mov
js
mov
and
jnp
insb
mov
shll
jle
cmc
sub
jb
aam
push
dec
pop
iret
push
ffree
pop
je
pop
in
inc
adc
mov
push
jno
or
testl
mov
dec
enter
pop
push
scas
xchg
mov
sar
idivl
cli
ds
leave
ret
lret
jge
scas
scas
inc
arpl
cmpsl
popl
jle
jge
insl
aaa
sbb
std
push
aaa
enter
insb
andb
insl
mov
lods
enter
or
fidivs
mov
jo
dec
scas
in
and
subl
sahf
icebp
mov
xor
in
lea
adc
cs
adc
mov
stos
cmp
xchg
jno
js
jl
fsubs
and
lds
dec
cld
xchg
movsl
mov
out
mov
lahf
into
ret
pop
push
int
in
test
loope
xchg
inc
nop
int3
dec
cmpsb
jge
je
cs
and
xor
pop
sub
mov
ret
xchg
loope
sbb
sub
ret
addr16
imul
shrb
mov
mov
sbb
mov
js
scas
xor
int3
or
mov
push
sub
mov
rclb
mov
xchg
sub
jno
outsb
int3
sbb
test
and
fs
sarl
push
std
mov
insl
sbb
bound
and
pop
mov
mov
in
cmp
xlat
or
notl
mov
mov
mov
sahf
jl
cmc
je
dec
xor
shrl
inc
dec
loop
sbb
stc
cmp
or
jno
andb
mov
cwtl
ret
cli
mov
jmp
cmp
push
or
mov
shll
inc
loopne
gs
pop
fistpll
loop
bound
divl
add
push
fwait
mov
sbb
xlat
imul
pop
loopne
sub
jno
mov
insb
cwtl
xchg
sbb
mov
clc
mov
sbb
inc
jmp
and
les
cmp
repz
cs
jo
xchg
mov
dec
sbb
fistl
or
pushf
popf
outsb
push
jmp
es
inc
int
inc
mov
add
aas
add
jb
jmp
je
and
lea
adc
std
movsb
push
xchg
gs
loop
fistpll
xor
in
pop
mov
scas
test
data16
das
out
jg
mov
mov
and
test
divb
push
imull
dec
jl
sub
sbb
push
stc
fcomi
fiaddl
stc
lret
aad
cmp
mov
jle
pop
fmulp
adc
ss
add
mov
cltd
aam
mov
ret
push
aad
es
pushf
iret
fldl
push
clc
lds
adcb
cli
addr16
cli
popl
daa
mov
movsb
mov
test
xchg
jl
sarb
add
or
cltd
xchg
sti
test
mov
pop
push
rcl
dec
out
lea
pop
adc
adc
and
pop
test
sbb
std
pop
jg
ds
add
lods
iret
dec
sbb
xor
mov
or
cs
jne
mov
mov
call
pop
mov
repz
mov
inc
movsl
mov
or
sub
dec
cmp
jne
into
mov
out
lds
bound
and
push
fiadds
xchg
add
xor
fisttpl
inc
addr16
test
mov
xchg
jecxz
xchg
push
or
cmp
pusha
pop
imul
xchg
lret
push
sub
shl
out
cltd
cmp
sbbl
mov
popf
sub
mov
mov
sub
loopne
sbb
mov
dec
fnstcw
jl,pn
mov
neg
iret
leave
adc
ret
xchg
pop
xor
mov
mov
push
or
or
jb
std
inc
fstl
fcmove
scas
fstl
repz
and
mov
mov
js
rcrb
mov
repnz
dec
call
hlt
cli
sub
arpl
je
jge
sbb
sbb
fimuls
pop
xchg
add
outsl
xor
out
xchg
ficoms
outsl
mov
jo
fisubrl
scas
fstpl
in
in
movsb
sub
push
clc
pop
in
push
lahf
jecxz
je
sbb
sub
mov
add
test
outsb
jno
adc
dec
xchg
xor
push
sub
insb
movsl
mov
in
lahf
in
adc
test
lods
stos
mov
pop
scas
jne
add
pop
push
add
js
xchg
push
pop
addr16
push
loope
dec
dec
sub
lds
cmp
xor
jns
sub
jp
inc
in
popl
jmp
adcb
nop
sbb
dec
xor
push
scas
xor
add
sbb
testl
push
ret
push
push
imul
inc
sub
jo
outsb
das
sbb
cmpb
jg
mov
pop
mov
or
cmp
push
mov
cmp
notl
and
mov
hlt
add
inc
xchg
cmp
arpl
lret
lock
outsl
xor
scas
dec
stc
icebp
rcll
shrl
scas
mov
lods
dec
mov
mov
pop
cli
aam
mov
pushf
lea
cmp
inc
into
add
aad
sub
jb
mov
clc
imul
mov
dec
inc
js
sbb
adc
cwtl
xlat
push
push
mov
mov
xlat
mov
jmp
pop
aad
jno
nop
sahf
aam
dec
jns
xor
cld
ljmp
and
int
xchg
xor
lea
jno
call
pushf
ret
and
jbe
pop
sbb
pushf
dec
pop
mov
cs
in
inc
inc
loope
inc
shll
mov
es
je
lret
data16
daa
lret
mov
xchg
cwtl
loope
es
mov
incl
lea
ret
pop
push
xchg
xchg
shrl
int
lods
mov
aas
lret
sbb
stos
push
rcrl
int
insl
push
dec
dec
cmpsl
mov
and
inc
sub
icebp
mov
call
lret
dec
jo
mov
adc
mov
std
fwait
add
or
ret
fdivp
ret
out
fisubl
ret
idiv
add
push
xchg
xchg
fldenv
push
loopne
xchg
jne
mov
les
xchg
into
lahf
imul
pop
data16
jb
cltd
mov
roll
mov
push
js
test
dec
dec
movl
fsubrl
xor
inc
pop
push
mov
stos
and
or
pusha
push
fwait
add
or
in
in
insb
call
xchg
xor
xor
mov
mov
lds
ja
push
dec
dec
xor
testb
push
fwait
mov
or
icebp
push
cltd
mov
add
jmp
cmp
outsb
pop
in
call
and
ret
or
adc
sarl
bound
push
insl
mov
mov
dec
jne
jo
fstpl
pusha
clc
aas
xlat
fcomps
sahf
mov
jmp
and
popf
in
out
xchg
push
mov
mulb
stos
pop
rcrl
divl
insb
lea
jnp
pop
cmp
push
add
or
jmp
sub
ret
cld
pop
insb
int3
inc
inc
sub
inc
notl
or
in
and
inc
pop
pextrw
les
sbb
lahf
movsl
imul
out
pop
cmpb
and
xor
cwtl
mov
mov
mov
hlt
inc
lcall
and
xor
jge
scas
imul
inc
out
or
insl
add
jge
sub
pop
popf
xchg
push
fidivrs
insb
jle
outsl
jl
scas
mov
dec
pop
cmp
cmp
push
inc
les
xchg
cwtl
dec
in
pop
test
pop
daa
mov
in
fcmovnb
pop
jno
into
xor
jb
add
pushf
movsl
mov
xorb
jae
subb
daa
lret
inc
scas
aad
cmpsb
andl
js
nop
insl
pop
cmpsb
aad
push
cs
loope
movsl
mov
cmp
jecxz
ds
jge
adc
and
mov
subb
stc
sbb
sub
sub
pop
cmpb
sub
sub
add
shrb
fsubrl
lds
sbb
movd
je
sbbb
mov
stos
mov
lcall
dec
mov
xchg
cmp
dec
shrb
adc
and
roll
inc
sbb
pushf
ficompl
add
push
xor
cwtl
outsb
outsl
adc
loope
xor
mov
fs
mov
jnp
mov
push
pop
mov
orl
out
call
sbb
jae
xchg
cmp
mov
outsl
es
out
inc
gs
jo
lds
dec
pop
je
xchg
adc
pop
lods
adc
mov
add
sarl
les
cmp
mov
xchg
rolb
mov
inc
pop
sbb
jbe
xchg
decb
in
nop
jns
xchg
dec
fcomps
pop
flds
inc
ret
mov
xchg
test
lea
push
call
sbb
add
mov
setl
sbb
jmp
lret
or
lods
inc
inc
mov
aas
inc
test
in
negl
jecxz
addr16
pushf
ficoms
cwtl
pushf
xor
mov
int
mov
mov
dec
js
sbb
xor
pop
or
lock
jo
lods
cmc
stc
mov
not
jmp
and
shr
adc
divb
mov
adc
je
fcomi
mov
nop
cld
rcr
or
mov
mov
and
or
inc
pop
sbb
popf
rcr
cwtl
inc
sub
dec
ret
jne
pop
es
or
pop
clc
cmp
jg
push
sbb
lods
std
xor
mov
out
mov
adc
aam
seto
adc
cmc
jmp
test
push
cmp
inc
daa
rorl
nop
test
fucomi
xchg
out
jecxz
xchg
shr
out
pop
sub
stos
movsbl
out
ret
aas
icebp
add
sub
sbb
pop
ret
mov
inc
adc
mov
add
ja
pushf
imul
imul
loopne
fistpl
xchg
mov
jne
das
cmpsb
mov
mov
out
adc
bound
and
mov
push
xchg
mov
dec
into
sub
add
shlb
pop
jp
test
mov
jne
arpl
je
in
fcmovb
pusha
xchg
sub
add
xchg
jno
cld
jmp
das
pop
push
cmp
ret
popf
jns
aad
push
sbb
xor
pop
push
and
xlat
insb
clc
in
xchg
jnp
ljmp
inc
arpl
xchg
dec
ret
pop
pop
mov
sbb
adc
fcoms
addr16
fisttpl
fisubrl
mov
xchg
popa
mov
sbb
leave
popf
imul
mov
lds
dec
nop
mov
repz
leave
sub
push
nop
and
inc
inc
push
mov
std
sbb
adc
aaa
add
lods
add
fldenv
int3
insl
cmp
pop
int3
decb
ficomps
xor
lret
scas
fwait
adc
enter
nop
movsb
aas
pusha
cmc
push
xchg
jb
jbe
add
enter
daa
mov
inc
cmp
or
jl
leave
jno
jno
add
movsl
jb
and
fistps
inc
sub
js
inc
clc
mov
inc
lods
cmpsb
push
push
xchg
pop
mov
push
iret
pop
in
out
push
jno
loope
and
xor
fcmovb
inc
jns,pt
inc
adc
std
andb
cmp
leave
adc
pop
dec
xor
cltd
dec
test
adc
out
and
daa
push
cmp
lcall
mov
sub
mov
loopne
pand
xorb
push
mov
pop
sub
mov
sub
and
je
mov
mov
fmuls
adc
not
mov
lret
mov
mov
add
clc
mov
sahf
gs
cmc
leave
xchg
xor
jne
loop
jne
stc
pop
cmp
fs
pop
adc
lret
ss
jecxz
lods
sbb
sbb
out
push
sbb
cmp
xor
pop
cmp
jecxz
or
mov
gs
xchg
pop
xchg
sbb
adc
pop
imul
jge
inc
pop
pop
sbb
mov
mov
aam
and
mov
and
lods
testl
sub
aad
nop
xor
aaa
jle
inc
and
jns
cmp
mov
jnp
cli
xchg
mov
icebp
inc
call
lcall
adc
lods
cmp
bound
outsb
cwtl
jo
push
cld
push
pop
lods
sarb
fistps
jb
adc
je
sbb
jecxz
jmp
lahf
jbe
std
cltd
jbe
cwtl
push
sbb
in
fimull
movsb
sub
push
out
pop
scas
add
jmp
das
mov
dec
mov
test
inc
sarl
cmpsl
xchg
insl
ss
add
enter
scas
xlat
mov
pop
in
aaa
cld
sti
push
lret
sub
int
loop
sbb
cmpsl
out
xor
cmp
shrb
mov
aam
andb
enter
mov
mov
xchg
add
sub
dec
inc
test
pop
lock
les
out
push
cwtl
add
push
cltd
sub
hlt
test
das
sbb
movd
push
or
dec
sbb
lahf
test
xor
mov
roll
cmp
jp
es
add
inc
es
cmpsb
fwait
adc
adc
and
bound
mov
mov
shlb
pop
out
dec
ja
insb
rorl
int
inc
push
jbe
mov
ficomps
aaa
mov
cmp
bound
or
jl
in
ficoml
icebp
and
mov
adc
sub
cld
pop
jne
adc
in
jp
mov
lods
mov
in
dec
dec
cmp
imul
sub
xchg
inc
add
jmp
cli
jmp
or
dec
out
cmpsl
dec
popf
mov
sbb
je
mov
and
jbe
jnp
pusha
add
xchg
fwait
push
mov
xchg
ret
iret
out
pop
ret
loope
fiaddl
inc
inc
dec
je
jecxz
mov
or
jecxz
fadds
or
or
sbb
mov
scas
pop
inc
imul
mov
ss
inc
lods
loope
lahf
xor
hlt
fistpl
adc
push
cmpl
inc
mov
or
into
jecxz
jo
test
pop
pop
pop
pop
sti
sub
fdivrp
or
addr16
std
or
push
fiadds
movsb
lret
push
in
dec
jbe
out
in
sub
inc
enter
daa
mov
push
cmp
ss
mov
jl
shr
loopne
rorb
aam
shlb
cmc
repz
lahf
dec
sbb
test
or
out
cltd
cmpsb
mov
int
lret
js
inc
sub
and
popa
push
push
xor
shll
insb
je
pushf
sub
scas
rcr
out
lock
push
mov
sbb
lcall
fiaddl
repz
imul
dec
inc
pop
sub
sub
push
outsb
push
jbe
jle
fsubrs
testb
pop
lret
xchg
movsl
add
imulb
push
mov
mov
jne
ret
cmp
ret
out
notl
mov
mov
sbb
daa
xchg
popf
sahf
or
pop
cmc
nop
mov
movsb
outsl
sarb
repz
cmpsl
mov
fs
mov
sbb
mov
cmp
jns
test
cli
insl
and
xor
adc
into
lods
sub
gs
aaa
jbe
sti
paddusw
aaa
sbb
imul
jae
lret
sbb
ret
adc
xlat
adc
subl
lret
mov
pusha
in
sbb
sti
aam
cmp
inc
mov
rclb
loop
inc
xor
movb
dec
inc
sub
dec
mov
sbb
stos
adc
pushf
dec
adc
xchg
shrl
inc
fcomps
sbb
aas
jle
clc
jb
aam
dec
fistl
adc
outsb
jecxz
mov
mov
inc
cs
adc
mov
ret
cmp
xor
xchg
lea
mov
popf
sub
shrb
xchg
mov
fs
and
adc
rorl
mov
mov
cmpsl
mov
dec
mov
ss
cld
es
lret
xchg
mov
shll
cmp
mov
cmpb
sub
into
test
es
dec
dec
fstp
cld
mov
mov
ds
inc
push
popa
ljmp
sbb
dec
repz
mov
lods
popa
cmovle
inc
add
sahf
cltd
arpl
test
pop
pop
mov
cli
loope
int
or
orb
fbld
lods
xchg
hlt
sbb
push
rcrl
nop
push
stos
in
push
or
add
pop
jbe
incl
pop
xor
das
or
andb
mov
std
mov
ret
setne
mov
mov
adc
mov
or
cmp
rolb
push
fisubrl
mov
push
xchg
inc
pop
xchg
bound
adc
xchg
rol
xchg
inc
lods
mov
dec
cmpsb
sub
negl
addr16
adc
mov
lahf
push
mov
push
or
pop
in
or
pusha
leave
cmp
xchg
pop
sti
popf
jmp
adcl
out
fbld
popf
movl
and
mov
jns
mov
pop
and
xlat
insb
into
rorb
jnp
lcall
aad
out
popf
outsb
jl
inc
xchg
inc
ret
mov
inc
dec
lret
inc
jae
aam
push
pop
jmp
or
pop
fnstsw
inc
fsts
ficoml
out
icebp
sbb
cwtl
lods
imul
xor
adcb
rolb
repnz
mov
leave
push
in
hlt
outsb
dec
arpl
mov
aam
jge
mov
out
aaa
cmpl
add
cwtl
int3
inc
push
cmp
pop
xor
mov
or
sbb
scas
pop
lahf
and
test
cmp
push
xor
imul
xchg
adc
daa
mov
and
je
sub
and
mov
mov
jne
push
mov
xor
aam
andb
lret
cltd
lahf
imul
test
fcoms
push
cmpsb
or
push
icebp
xchg
ret
divl
pop
arpl
lea
adc
loope
orb
adc
cmp
xlat
fidivrs
mov
jae
shlb
jo
andb
sbb
fnstenv
scas
mov
xor
xchg
mov
cs
sbb
mov
ret
xor
pop
cltd
into
push
lcall
sti
fsubrl
out
lret
adc
outsb
mov
aam
sub
xchg
or
push
stc
xchg
mov
pop
and
pop
push
lds
inc
fdivrs
lcall
int3
ljmp
push
sbb
in
sahf
stos
call
xor
push
adc
add
stc
int
dec
fs
dec
sbb
push
push
insl
lods
ljmp
out
mov
jne
clc
jl
cmp
adc
or
cwtl
jmp
divb
shl
lods
int
rcll
adc
or
imul
shlb
pop
jns
cmp
jmp
xlat
push
pop
fwait
sub
dec
mov
xorl
addr16
aad
ds
or
cmc
dec
out
inc
dec
arpl
les
push
repz
dec
xchg
aas
dec
inc
lea
fmulp
cwtl
les
out
sbb
adc
push
int3
jmp
jle
cs
sub
pop
cmpsl
xor
xlat
dec
aas
sbb
lret
xlat
dec
push
pushf
js
int3
mov
jecxz
mov
cmp
repz
cwtl
int
arpl
and
jl
shrb
daa
dec
cmp
fcmovnb
loope
pop
hlt
xchg
je
sub
mov
sub
inc
mov
mov
fwait
mov
fisttpl
idivb
fsubrl
adc
dec
adc
adc
or
add
push
cmp
mov
imul
jns
rcl
lret
ret
mov
adc
es
sbb
fldl
cmp
in
dec
cld
xchg
cmpb
popa
insl
shrl
imul
movhps
xchg
ljmp
shrd
jmp
cltd
lcall
mov
mov
ljmp
movsb
mov
sbb
cmp
shl
sbb
stos
faddl
in
mov
sbb
jns
mov
xor
outsl
movsb
xor
outsl
or
xchg
in
push
mov
pop
mov
push
dec
add
inc
cwtl
mov
xchg
jo
insl
aad
push
jge
sti
jne
mov
mov
aas
ja
and
pop
bound
mov
jns
sbb
xchg
mov
mov
clc
xchg
sub
repnz
cmp
or
mov
jecxz
mov
ret
dec
add
loop
stc
mov
pusha
fs
int
pusha
dec
arpl
cmpsb
pop
jbe
nop
pop
inc
and
jmp
popf
out
sub
mov
repnz
daa
push
push
and
lret
add
jnp
xchg
pop
jle
cwtl
fs
sbb
cmp
js
mov
ret
and
dec
push
inc
push
mov
daa
push
and
jb
arpl
das
inc
pop
sbb
xchg
push
pop
sbb
and
daa
mov
in
lock
push
push
mov
in
lcall
jno
hlt
arpl
mov
jge
loope
sbb
pusha
or
inc
mov
or
sub
add
push
sub
pop
aad
fiadds
push
xor
fcmovne
ss
cmp
and
cltd
cmp
cmp
adc
xchg
in
divl
adc
lea
cmpsl
add
jl
sub
lahf
push
lcall
and
mov
lahf
mov
adcl
out
test
mov
pop
lds
sbb
js
inc
xchg
pop
mov
jae
loope
imul
cmp
add
es
mov
push
xorb
sbb
pop
roll
fiaddl
xor
into
jl
sbb
lds
cwtl
jl
pop
sbb
mov
aad
lods
push
sbb
dec
out
sub
out
outsb
push
pop
jnp
movsb
data16
xor
divb
or
add
and
sub
test
out
cmp
cmp
notl
jne
lret
popf
shl
adc
mov
sahf
cmc
push
fstl
outsl
nop
int
loop
cmpsb
add
test
cld
adc
cmp
lods
rcll
xlat
mov
in
out
mov
jmp
cmp
out
or
test
into
jb
mov
xchg
shl
xor
pop
lock
adc
dec
mov
adc
inc
rolb
dec
lret
data16
in
adcb
cmp
pop
push
xlat
xchg
loope
sub
scas
fisubl
out
lret
xor
sar
mov
aad
lods
test
push
mov
inc
pop
add
arpl
les
repz
pop
jmp
call
pop
dec
rcrb
pop
push
adc
sbb
pusha
xchg
das
inc
dec
cs
notl
inc
out
sbb
or
aas
mov
idivl
leave
lds
out
adc
test
loopne
mov
shlb
pop
aam
subl
rcr
stc
jle
xchg
lret
lock
sti
lock
adc
shrb
and
push
mov
sub
xchg
test
mov
jmp
push
fisubl
inc
mov
icebp
in
cmp
jne
push
mov
mov
push
pop
cwtl
in
pop
shrb
test
sub
push
es
pop
mov
clc
daa
fsubrp
xchg
shrl
popa
test
lods
test
cmpsb
fnstcw
xor
sahf
push
jl
add
or
jbe
orb
test
scas
test
jl
xchg
push
push
adc
test
mov
inc
sbb
sbb
pop
stos
inc
dec
stos
lret
stc
repnz
dec
jne
add
xchg
push
push
incl
cli
add
xor
rol
mov
leave
cmp
cmp
pop
add
ja
repz
dec
hlt
and
das
mov
jg
mov
pushf
sahf
insl
push
and
ja
mov
hlt
lret
jns
fisubs
xchg
mov
inc
jmp
test
inc
jp
dec
pop
mov
dec
or
in
dec
in
daa
in
movl
fistpll
enter
nop
jmp
pop
xchg
push
xorl
out
stos
scas
popf
adc
mov
push
xor
stos
lcall
insb
movsb
pop
insl
jnp
pop
pushf
jle
mov
push
arpl
push
iret
add
ret
aas
pop
jg
cmp
cmp
mov
lods
or
push
ds
inc
xlat
gs
mov
je
cmc
mov
imul
in
sub
sarb
mov
aas
loopne
leave
add
cmp
mov
mov
inc
sub
sbb
dec
mov
add
lock
imul
pop
mov
fsubrp
inc
divl
ss
scas
pop
cmp
iret
inc
pop
cmp
mov
pop
push
rcl
mov
in
fisubs
lds
scas
mov
cmp
adc
jno
lcall
sub
fdivrs
loop
andb
mov
lahf
cmpsl
inc
adc
movsb
fwait
test
outsb
and
jns
jecxz
adc
js
pop
call
loope
into
push
xchg
je
sub
xor
xchg
clc
and
add
jg
shrb
repz
cmp
orb
filds
pushf
rcl
mov
shrl
adc
xchg
movsl
xchg
lcall
inc
fdivrl
repnz
jge
outsb
orl
rolb
rcl
sub
subb
mov
popa
hlt
and
xor
lods
pop
sub
not
adc
sarl
mov
mov
adc
in
outsb
xor
or
outsl
outsl
popf
mul
adc
cmp
pop
adc
mov
push
xchg
subl
mov
into
cli
push
rcl
cmpsb
dec
cmpl
test
push
dec
add
push
pop
loopne
and
shld
adc
clc
ja
mov
lds
lea
cmp
xlat
shrb
cmpsl
sub
mov
pop
mov
int3
lods
sbb
cltd
nop
sarb
inc
outsb
xlat
xor
lcall
repz
cmp
jge
loop
adc
or
xchg
pop
pop
pop
push
dec
adc
jg
dec
inc
iret
jmp
lret
cli
test
inc
inc
enter
pop
cmpsl
jno
imul
je
mov
stos
pop
push
std
xor
jns
mov
pop
xor
add
aad
pop
sbbb
shll
sahf
les
pop
loop
mov
mov
inc
sarl
adc
add
insl
int
or
mov
mov
jmp
lret
in
ja
outsb
aas
xchg
and
adc
push
sar
lods
outsb
sub
xchg
push
mov
ret
inc
or
aam
cmpsl
fstl
ljmp
cwtl
mov
popa
fwait
out
lods
adc
out
insl
sti
xor
js
lods
push
push
mov
imul
add
leave
cli
test
sbb
push
pop
or
iret
ret
arpl
xchg
dec
sbb
xor
sahf
inc
negb
mov
out
mov
xchg
add
scas
fdivp
jmp
sub
xor
or
cmp
xor
xchg
mov
int3
add
mov
rcr
mov
dec
out
and
stos
fmull
mov
fwait
lret
sub
leave
stc
xorl
leave
bound
jns
pop
inc
je
xor
mov
lods
bound
call
pop
and
and
cmp
push
je
mov
jno
in
cmp
pusha
lcall
xchg
nop
pop
shr
int3
test
es
addl
out
cmp
aas
mov
jo
subb
mov
stos
jnp
fildll
push
stos
mov
iret
jo
divl
pop
mov
lods
inc
insl
inc
ret
push
es
cmpsl
xlat
xor
iret
int3
insb
inc
push
ss
scas
or
adc
stos
sbb
add
in
scas
stos
ds
mov
lcall
sbb
jb
jnp
aam
pop
shrl
jle
gs
sub
shll
aaa
shrb
or
sbb
int3
add
lcall
lea
mov
shlb
xchg
out
dec
scas
testb
and
es
dec
jmp
push
and
leave
jbe
hlt
leave
in
lds
mov
cmp
das
jnp
cmp
xor
jmp
lret
lods
in
push
gs
test
cmp
cmp
or
cmpsb
xchg
cld
jle
data16
js
xchg
and
push
dec
jle
cmpsb
mov
ret
scas
fidivrs
sub
mov
sbb
sbb
inc
imul
pushf
mov
sbb
adc
xor
mov
int
mov
in
pop
push
xlat
popf
lcall
loop
sub
sub
mov
test
dec
insb
jg
inc
in
mov
lock
stc
xor
and
mov
cmp
scas
add
testl
ljmp
jecxz
int3
sahf
xchg
shll
cmc
lods
mov
xor
fsubrs
jno
loop
jne
stc
bnd
fs
and
adc
pop
ss
lea
sar
mov
xor
add
or
and
cmp
loopne
cli
test
rorb
imul
and
data16
adc
sbb
scas
cmc
mov
sub
fs
pop
inc
in
les
sti
nop
sub
aad
mov
nop
fwait
std
jmp
inc
sbbl
les
cmc
xrelease
in
in
call
adc
cmc
test
sarb
cmc
sti
push
jmp
push
mov
inc
hlt
xchg
daa
inc
jecxz
stc
aas
cli
push
lds
jmp
test
lods
xchg
adc
add
cmp
fcompl
cwtl
incb
mov
mov
mov
dec
cli
fdivs
pop
fstl
ljmp
ret
fldt
out
clc
mov
inc
xchg
ja
cmp
fcmovnbe
enter
dec
mov
cmpsl
dec
add
lods
cmpsl
lods
cmc
test
icebp
xchg
scas
cld
rcrb
dec
mov
imul
ret
xchg
ror
out
sub
or
push
push
push
iret
imul
fnstsw
into
clc
popf
ret
aas
or
ljmp
inc
lods
jg
pop
mov
mov
psrad
push
enter
or
cmpsb
add
cltd
aas
loope
test
movsb
mov
xchg
mov
cmc
cmpsl
dec
push
outsl
cmc
test
mov
dec
sbb
mov
pop
add
stos
test
enter
stos
sbb
lret
inc
pop
xor
adc
loopne
jecxz
test
cmp
cmpsb
sub
pop
lea
out
ss
dec
fcmovu
jae
pop
icebp
int
push
mov
fwait
cli
jl
push
pop
inc
jne
mov
mov
jg
out
mov
jmp
mov
mov
add
mov
mov
sub
jecxz
adc
lret
and
cs
mov
xchg
pop
loopne
bswap
fmull
mov
in
adc
std
fistpll
ficoms
mov
xchg
icebp
cmpsb
inc
adcl
ficomps
int3
mov
xchg
stos
and
and
mov
jnp
sub
jle
inc
pusha
push
icebp
repnz
adc
es
iret
rcll
or
pop
in
mov
nop
jae
mov
push
push
aaa
or
dec
out
sbb
mov
fisubl
mov
sbb
daa
test
xchg
aaa
mov
shl
leave
mov
in
js
repnz
lea
inc
xor
mov
mov
pop
fists
or
decb
arpl
int3
out
jbe
pop
out
cwtl
fisubrs
jl
xor
in
sbb
scas
aad
mov
cmc
loopne
cmp
pusha
push
jo
mov
push
push
in
lods
cmpsl
or
daa
lods
js
cmp
jno
call
nop
dec
or
jecxz
inc
bound
and
icebp
lret
lahf
in
or
cmp
movsb
test
add
pop
inc
xchg
push
loop
sbb
nop
pop
lea
js
cwtl
mov
pop
divb
push
lret
mov
mov
xchg
ds
adc
adc
pop
cmp
stc
xor
mov
fldt
imul
mov
cmp
push
int
xor
sub
xlat
adc
xchg
mov
and
pop
push
pop
sub
push
mov
cmp
adcb
jg
mov
mov
stos
mov
or
xor
push
shll
and
push
jns
dec
fimull
shrl
push
sbb
outsl
ficomps
jae
wrmsr
mov
dec
test
cmp
and
adc
shrd
mov
leave
cli
insb
push
in
push
lods
les
pop
sbb
inc
fildll
adc
add
add
pop
pop
dec
add
adc
mov
adc
pusha
fs
jbe
pop
aam
sbb
ljmp
sub
int
mov
das
adc
repz
ja
adc
pop
nop
jbe
popf
dec
jno
push
mov
sub
push
pop
aas
xchg
dec
push
lea
sub
sbb
xchg
push
into
pop
mov
pop
mov
mov
and
dec
inc
jnp
sub
sbb
jb
mov
dec
sbb
clc
fstpl
jecxz
cwtl
das
mov
std
sbbl
mov
push
xor
cs
dec
in
add
jge
call
mov
rorb
das
lds
sub
negl
es
cmpsb
daa
rcll
pop
sub
mov
arpl
push
xlat
dec
call
adc
icebp
imul
ret
mov
repz
cmc
mov
shlb
xchg
jg
jmp
push
and
fcmovu
frstor
adc
xchg
jle
nop
ljmp
dec
lods
ljmp
mov
push
inc
mov
or
mov
add
popf
push
test
sti
mov
callw
add
dec
test
dec
test
jb
xchg
mov
rorl
pop
stos
mov
stos
cwtl
mov
out
js
popa
add
in
sti
jmp
cmp
add
jmp
xor
in
lods
mov
shr
and
dec
dec
inc
ja
push
aas
dec
int
arpl
pop
ret
das
int3
fwait
sub
mov
push
shrl
mov
mov
push
bound
add
in
lea
mov
xor
sub
fiadds
addr16
xor
sub
push
mov
jle
repnz
jmp
scas
pusha
rol
push
stc
mov
fnstcw
or
xchg
mov
fcmovu
out
rorb
test
rcll
mov
stos
repz
and
or
jnp
ss
jle
adc
fcoms
in
aam
and
std
ret
mov
inc
cmpl
sub
dec
inc
push
push
arpl
ficoml
in
xchg
ret
sbb
sbb
imul
jno
ret
lds
jnp
mov
cmp
mov
imul
mov
pushf
pop
loopne
xor
jge
push
sbb
xchg
aaa
ds
loopne
cli
adc
int3
ficoml
jp
roll
das
xor
inc
pop
lret
scas
mov
pop
and
pop
and
cmpsb
jo
lods
mov
in
xchg
adcb
sub
daa
lods
mov
and
jl
negb
jp
inc
push
es
movsb
and
pop
push
or
addr16
iret
inc
es
mov
imul
bound
sahf
das
pop
push
stc
dec
loope
insl
xchg
sub
push
hlt
cmp
push
add
sar
and
pop
xor
add
je
adc
jmp
std
xor
cmpsl
sub
loop
mov
inc
push
faddl
ficompl
stos
out
test
cwtl
out
xorb
jg
and
mov
cwtl
insb
mov
sub
sub
rol
push
aam
add
and
add
lret
sarl
jo
mov
mov
sahf
fidivl
cmc
cmp
mov
mov
clc
loop
adc
stc
pusha
ficompl
cvtps2pd
adc
adc
lods
insl
add
mov
ds
enter
mov
xor
xchg
cmp
adcl
mov
or
call
sbb
mov
popf
out
pop
insb
xor
adc
push
imul
stc
add
shlb
or
sbb
and
xor
lods
jmp
into
in
lcall
push
pop
aad
dec
loop
push
mov
sbb
cmpsl
or
fnstcw
jbe
les
pusha
inc
xchg
push
cmp
mov
or
sbbb
pop
outsb
pusha
mov
outsb
imul
and
inc
add
roll
aas
cmp
mov
ror
je
jp
jecxz
clc
mov
std
sub
inc
cwtl
je
stos
mov
mov
mov
addr16
lds
or
jg
lods
add
pop
and
sub
lock
inc
nop
das
movsb
insb
enter
dec
mov
push
rcr
add
into
ljmp
cli
sub
mov
inc
adcl
mov
mov
push
and
in
pop
adc
mov
je
xchg
sub
aam
mov
ret
in
idiv
es
icebp
jp
out
clc
adc
push
ljmp
pushf
lods
push
add
mov
mov
xchg
sbb
mov
int3
cltd
lods
std
pop
test
int
mov
test
dec
in
pop
ss
xlat
mov
sbb
rcl
mov
mov
shr
fucomi
inc
add
add
ret
fidivl
push
jecxz
or
sahf
fsubl
aad
inc
mov
add
aam
insl
mov
dec
shrb
mov
sub
test
or
lods
lock
jne
push
scas
mov
push
jg
jnp
mov
push
mov
push
in
jnp
xchg
sbb
or
loope
pop
or
jl
addr16
cmp
loopne
mov
push
test
shll
pop
dec
jo
js
sbb
and
dec
cmc
scas
adc
jns
dec
xchg
xchg
cwtl
xorl
xor
inc
aaa
pushf
push
sub
sbb
mov
insb
push
popa
fistpll
or
jle
push
push
jg
adcb
stc
or
jg
add
xor
xchg
pop
pop
sldt
shll
into
push
lock
jb
data16
xor
lock
mov
sub
mov
or
scas
lds
mov
mov
repnz
popa
leave
loopne
sub
arpl
cld
push
jge
ljmp
std
dec
mov
add
and
inc
loopne
fidivs
xor
mov
pushf
jmp
cmp
fmuls
movsb
xchg
dec
out
push
push
jne
jbe
mov
xchg
enter
daa
stos
dec
mov
cmpsb
pop
jecxz
sub
pop
jl
mov
mov
or
and
jge
lahf
and
int3
push
ficomps
test
lcall
cmpsb
push
push
in
fldt
fcoms
fucomp
xor
loope
or
sub
pop
xor
ds
sbb
adc
aad
inc
mov
sti
adc
cli
sbb
mov
icebp
cwtl
cmp
mov
icebp
jge
pop
add
jmp
add
iret
call
mov
jg
loop
or
pop
fiadds
dec
fwait
in
mov
mov
inc
mov
shll
iret
xchg
jg
xlat
in
cmp
loopne
mov
int3
mov
lret
mov
fcompl
sbb
int3
sahf
jge
jecxz
add
xor
push
outsl
jmp
lret
mov
stc
pop
sub
adc
jge
popa
test
mov
jg
mov
cli
sarb
into
cmp
jl
or
and
and
loopne
cld
pop
pop
mov
repz
imul
loop
stc
jmp
mov
cmp
sbb
int3
nop
jne
and
popa
in
add
jp
cmp
aad
stos
enter
js
das
adc
inc
mov
sarl
les
cmpsl
fstl
sbb
sbb
pop
and
adc
xchg
outsl
pushf
negb
das
jmp
xchg
shrb
sti
lods
inc
mov
pop
inc
xor
pop
aas
xlat
jno
jb
fistpl
sbb
clc
je
push
jecxz
pushf
ffree
mov
push
std
ror
xor
mov
xorl
dec
mov
out
popa
pop
and
lock
test
das
orl
in
mov
and
sub
push
notb
xor
dec
cmc
iret
sub
aas
int
icebp
pop
xchg
lods
cld
push
lods
push
lret
mov
or
adcb
pop
xor
pop
sub
call
jg
out
jl
mov
loopne
mov
clc
dec
outsl
cmpsb
xchg
cld
jl
ljmp
sahf
lods
shlb
mov
and
jmp
push
ret
sbb
lahf
add
mov
mov
aam
push
and
dec
push
movsl
and
cmp
rolb
cs
dec
sar
dec
je
add
cmpsl
out
ds
add
sbb
dec
lcall
pop
push
or
jp
xor
mov
out
fcomps
loop
mov
jp
dec
mov
loop
and
xor
dec
cmpsl
mov
mov
jae
out
pop
ss
test
push
fsub
pop
mov
sub
enter
aam
fldenv
das
xor
in
inc
sub
mov
pop
arpl
dec
push
xor
clc
shlb
mov
sbb
xchg
fsubrl
jmp
push
cmp
addl
out
adc
popf
fadd
adc
insb
jno
stos
fld
xchg
and
mov
fs
popf
inc
jle
mov
push
movb
iret
sbb
inc
cmc
adc
inc
cltd
addb
mov
or
mov
mov
pushf
xchg
jo
adc
test
push
xchg
int3
cmp
mov
fiadds
leave
push
mov
cmp
mov
out
push
jge
gs
sbb
pop
mov
shlb
add
pop
jae
movsb
ficoms
sti
mov
aaa
in
jo
pop
xor
scas
push
lahf
cmp
stc
movsb
and
pop
xchg
jbe
inc
shr
popa
fiadds
bnd
daa
stos
jg
cmp
in
aas
jno
jmp
jl
push
orl
push
jle
add
loopne
lahf
inc
orl
into
dec
xchg
push
adc
inc
repz
cmpsb
mov
sbb
and
pop
sbb
lods
push
je
loope
enter
jl
cmp
xor
ds
mov
mov
dec
push
xor
sub
jae
add
add
mov
inc
andl
int
inc
and
jp
mov
adc
add
push
es
int3
inc
sub
subl
or
test
ret
jg
push
dec
mov
adc
mov
mov
in
fisubrs
lea
fwait
pop
cmpsl
testl
and
mov
mov
enter
mov
insl
outsl
lret
loop
andl
and
push
xor
movsb
and
lods
cmp
mov
dec
out
push
aas
xor
leave
idivb
dec
movsl
or
xchg
add
loopne
and
pop
stos
test
adc
das
adc
lret
sbb
jno
add
rcrb
sbb
fwait
sbb
xlat
or
sub
movsl
mov
sti
dec
jb
pop
cmp
nop
pop
int
dec
mov
jae
lods
shr
les
xor
xchg
xchg
pop
stos
lea
push
out
adc
pop
aam
push
sbb
jae
mov
in
or
jmp
dec
push
aas
jbe
inc
jb
aas
popa
dec
xchg
xor
fldcw
int3
mov
mov
bound
leave
jmp
lahf
dec
cmpsb
xchg
lods
fisttpl
lahf
jge
imul
imul
bound
add
sbb
mov
push
sub
insl
push
fs
or
jb
push
cld
jle
sahf
lret
pmullw
fstpl
mov
pop
push
mov
imull
dec
test
aam
adc
inc
arpl
fstl
jnp
xchg
cmp
jg
iret
jecxz
popa
push
adc
sbb
inc
mov
or
cmovbe
or
orl
dec
dec
mov
pop
push
xchg
lcall
and
pop
lods
inc
jne
gs
into
out
mov
ljmp
notb
xor
fisttpll
xchg
in
xor
std
mov
pop
pop
jns
cmc
ja
in
or
roll
outsl
adc
sbb
mov
inc
push
repnz
mov
lods
xchg
mov
in
pop
out
cmp
bound
pop
jns
out
outsb
in
push
mov
mov
pop
or
iret
sub
or
or
arpl
mov
scas
push
mov
lret
enter
inc
add
sub
pusha
mov
sub
add
addr16
mov
sbb
push
jbe
and
sub
jmp
inc
mov
stos
xchg
je
dec
and
and
mov
repz
divl
outsb
xor
push
or
sbb
aaa
ret
insb
pop
leave
or
push
jae
rorl
jbe
loopne
xor
bound
inc
mov
add
fisubrl
and
sbb
cmc
test
inc
lds
push
xor
rcrb
inc
cs
xor
mov
into
nop
or
arpl
icebp
xor
push
mov
les
aaa
jnp
jnp
ret
lcall
fiaddl
mov
bound
xor
pop
sahf
aam
push
data16
jle
js
mov
push
lods
ffree
jbe
ss
in
dec
arpl
enter
daa
test
imul
inc
jl
mov
js
iret
in
movsl
or
imul
pop
dec
lahf
popa
add
push
test
test
xor
inc
roll
push
pop
sub
in
pop
repz
push
sarb
popa
outsb
jns
mov
cmc
xlat
hlt
add
mov
jne
roll
mov
and
xor
sbb
inc
lds
cmc
mov
loop
mov
lahf
jbe
xor
jmp
rcll
test
xor
lea
sub
xor
incl
pushf
cmp
push
data16
testl
pop
roll
mov
xchg
sbb
jecxz
sahf
ret
add
adc
xor
icebp
leave
outsl
test
mov
stc
test
das
adc
std
mov
lods
and
mov
out
incb
xor
jmp
or
gs
into
cmpsl
inc
std
gs
pop
leave
call
sbb
fdivl
add
insl
stos
bound
cmp
xchg
cmp
dec
fnstenv
sub
ja
mov
xor
jg
scas
aad
cltd
push
loop
orl
mov
ftst
jae
les
add
out
fucomi
repz
lock
nop
mov
xchg
lods
adc
sub
or
dec
inc
xchg
repz
inc
push
inc
aas
adc
dec
or
mov
jecxz
mov
mov
mov
movsl
fistpll
mov
stos
inc
mov
int3
dec
xchg
adc
outsb
pop
or
inc
mov
roll
lock
sbb
mov
repz
rcll
or
xchg
sbb
insl
cmp
mov
jmp
push
cmpsl
test
xor
lds
xor
jle
mov
sub
and
mov
popw
jno
in
shr
adc
sub
test
adc
dec
xchg
es
xlat
fnstsw
cs
les
leave
xchg
jp
inc
ljmp
subb
mov
and
pushf
push
jns
ss
jno
add
mulb
test
stc
push
test
in
dec
and
int3
test
xor
sarb
inc
shrl
mov
push
pop
ss
add
xor
push
lret
insb
fdiv
mov
push
xor
or
repz
xor
stos
mov
hlt
lods
or
jmp
and
ja
in
dec
cltd
andb
push
imul
in
mov
jne
ss
cmp
mov
iret
jmp
in
aas
sti
xchg
pop
mov
stos
jmp
or
pop
or
jp
xor
sbb
mov
repnz
in
cs
pusha
cmp
insl
fistps
pop
xchg
or
jmp
call
pop
mov
popf
es
mov
ljmp
and
adc
cmp
push
adc
push
push
sarl
iret
pushf
jecxz
ret
lret
pop
add
jl
scas
sbb
jae
notl
cmp
and
mov
mov
in
jnp
loopne
out
xchg
push
test
push
imul
loop
std
dec
cmc
or
ja
xchg
mov
test
leave
inc
or
hlt
leave
jb
arpl
mov
enter
sbb
add
jg
cmp
lock
inc
mov
pop
rcll
inc
ficomps
xor
mov
add
aam
mov
das
sub
cmp
adc
lahf
mov
enter
daa
test
movsb
cmp
xor
jl
call
ss
stos
push
mov
and
add
and
addb
test
sti
cwtl
fiaddl
pop
xor
cmpsl
and
bound
pop
lcall
loope
mov
sub
xor
cmp
mov
adc
data16
aam
insb
orb
lcall
out
pop
inc
add
sti
add
or
int
addr16
sub
mov
lcall
and
sub
sub
outsb
ss
test
or
fidivs
sub
mov
stc
pop
bound
jl
push
and
movsl
dec
push
loopne
enter
adc
adc
outsb
testl
ret
fwait
adc
sbb
push
sahf
sbb
cmc
push
repz
outsl
mov
stc
cmp
cld
cmp
sub
mov
dec
out
sbb
cli
imul
cmp
pusha
or
mov
gs
mov
pop
call
lds
imul
ja
cmpsb
adc
callw
sbb
adc
xlat
sub
loop
xchg
and
sti
stos
lods
pop
mov
es
nop
mov
stos
inc
repz
sbb
nop
repz
pop
xchg
xchg
sbb
lea
cmpsb
call
rdpmc
lea
cmpsl
and
lret
pushf
imull
and
scas
cmp
push
lcall
mov
and
mov
cmp
and
and
std
cmp
dec
mov
push
test
and
fldt
and
mov
lock
inc
push
das
and
and
mov
and
outsb
push
shll
mov
pop
dec
out
fldenv
fdivs
or
aam
ja
in
or
and
push
xchg
inc
pop
nop
cmpsb
xchg
rol
xchg
cmp
aam
out
adc
sub
es
dec
clc
decl
xchg
mov
loop
popa
cmp
inc
lods
add
mov
mov
xchg
imul
aam
add
incb
sbb
mov
jno
xchg
pop
cmpsl
mov
jbe
push
imul
mov
data16
xor
ficomps
inc
pop
add
cmc
stos
inc
xor
out
addr16
mov
jecxz
jnp
sub
mov
movsl
xor
stos
pop
mov
loope
idivl
out
or
ja
popa
mov
inc
out
pop
or
fadds
adc
mov
cmp
dec
mov
sbb
out
div
add
jns
adc
in
jle
xchg
push
fmuls
sub
lds
addr16
aaa
push
jp
mov
mov
cltd
jmp
mov
inc
enter
adc
inc
adc
ja
stos
xchg
push
lret
sub
or
mov
sub
cmc
out
testb
or
sub
stos
xor
jo
and
insb
cld
cli
out
jnp
testl
adc
xchg
push
iret
sti
jno
ret
pusha
pop
aaa
pushf
push
inc
mov
cli
adcl
add
inc
inc
iret
pop
or
xchg
fisubrl
jne
sbb
push
sbb
scas
pusha
movsl
fadd
popa
dec
mov
mov
xlat
pop
lock
mov
mov
out
roll
inc
jge
sub
xchg
aaa
stc
movsb
decb
test
stos
mov
jno
in
add
mov
jo
xlat
scas
cmovo
cmp
xchg
push
fdivs
jl
in
push
sbb
jecxz
xchg
daa
cmpsl
sub
cmp
in
jno
xor
dec
movsl
mov
push
xchg
fisttps
sahf
subl
or
test
pop
pop
inc
icebp
imulb
rorb
popf
loope
pop
es
jb
loope
fstpl
cmp
push
out
sbb
push
das
rolb
xchg
xor
andb
jno
and
sbb
int3
push
jbe
jmp
jae
mov
xchg
push
sub
mov
fisubrl
or
and
stc
push
icebp
jg
mov
jns
mov
jecxz
ds
int3
xor
enter
add
ret
mov
dec
sub
adc
sbb
xor
loop
xor
stc
repz
jle
sbb
insl
mov
lods
lock
mov
fsub
xchg
or
pop
sub
xchg
test
popa
into
insl
cmp
loopne
push
scas
pop
pop
jne
adc
fisubs
imul
xchg
add
loope
sbb
dec
dec
outsl
xlat
enter
in
add
mov
mov
xchg
pop
icebp
loopne
aad
pop
mov
dec
stos
cmp
inc
push
enter
cmpsb
lret
test
repz
outsl
in
fnstsw
lea
dec
mov
pop
in
cmp
adc
mov
pop
jmp
cltd
shrb
adc
movsb
inc
mov
jl
jb
mov
push
je
jae
jecxz
aam
mov
std
insl
mov
fsub
pop
mov
mov
fistl
xchg
popf
mov
sub
icebp
ja
clc
push
mov
inc
mov
dec
shl
pop
aad
sbb
jne
dec
loope
jecxz
cmpsb
lcall
jae
mov
lret
pop
dec
orb
sub
addr16
scas
scas
adc
xchg
sub
sub
adcb
mov
sbb
clc
cmp
mov
clc
mov
mov
lods
insb
dec
nop
mov
scas
lahf
test
mov
test
icebp
cmp
arpl
jecxz
sub
movsl
test
filds
push
ficoml
dec
out
mov
push
xchg
pop
adc
cli
sbb
rcll
mov
lods
jae
stos
xor
mov
lret
add
xchg
fdivr
sbb
fidivs
negb
icebp
or
sti
int
in
add
mov
in
and
pop
stos
and
sub
dec
jg
popf
inc
jle
ds
jbe
fwait
inc
and
cmpsb
jne
rorb
push
out
in
cmc
fimull
in
adc
movsl
imul
sub
rolb
jp
in
dec
mov
inc
jecxz
stos
fstl
mov
xchg
rorb
xor
jb
jo
xchg
jp
xchg
sub
adc
dec
xor
xchg
jle
mov
out
sub
je
jbe
imul
imul
addr16
jnp
pushf
dec
jle
out
push
loop
inc
adc
imul
pop
outsb
fldenv
jae
je
push
mov
in
add
adc
dec
dec
inc
fiaddl
arpl
clc
inc
imul
clc
scas
ret
icebp
icebp
xor
lods
cmc
pushf
mov
sub
xor
adc
pop
repz
arpl
daa
lea
ds
cmp
sbb
imul
lds
add
inc
pop
das
psrlw
mov
mov
mov
and
insb
jmp
popf
call
rcll
js
jbe
into
in
std
dec
adc
fiadds
inc
daa
cmpsb
imul
pop
out
jl
sti
dec
dec
adc
arpl
js
hlt
movsl
and
fistps
std
adc
push
xchg
outsb
cld
inc
adc
cmpsb
lods
shl
pop
sahf
sub
pop
sbb
push
fcmovbe
loope
sub
sub
cmp
ds
pop
push
adc
sbb
add
xor
xchg
sbb
add
mov
stos
in
mov
vpcomw
mov
pop
push
repz
sar
out
cmpb
faddl
inc
inc
outsb
cld
push
rolb
adc
lret
jg
sub
bound
adc
inc
and
mov
push
out
xor
xchg
testl
xchg
dec
mov
mov
sbb
iret
sahf
lods
sub
cmc
in
fnstenv
and
arpl
mov
repnz
stos
pop
gs
fldenv
adc
dec
int
mov
mov
cmp
fcomps
cli
rorl
or
rol
or
jg
push
and
gs
les
pop
es
adc
jg
dec
out
adc
and
les
mov
out
into
inc
sbb
xchg
xlat
pop
and
sub
lods
mov
sbb
loop
or
test
aad
insl
add
or
jae
sbb
rcr
xor
mov
xchg
mov
or
add
or
sbbb
fwait
pushf
dec
mov
jne,pn
and
inc
filds
push
pop
aas
repnz
outsl
jb
aam
dec
outsl
mov
push
jecxz
int3
pop
mov
std
adc
cmc
cwtl
pusha
call
mov
test
and
pop
cmc
dec
or
lock
mov
das
fsubrp
cmpsl
mov
clc
mov
iret
roll
cwtl
mulb
cmp
xchg
dec
dec
fdivrl
scas
mov
dec
push
sbb
sub
fcmove
lret
dec
mov
imul
mov
into
mov
cmpsb
sub
push
sti
ret
inc
jg
outsl
in
fnsave
je
xchg
aaa
xor
punpcklwd
xchg
lods
xlat
mov
mov
xchg
notl
sbb
ret
add
cli
int3
cltd
divl
pop
mov
mov
adc
dec
push
jp
test
pop
outsl
xchg
loope
lods
adc
pop
pop
sbbb
daa
pop
out
sub
push
mov
mov
adc
xor
mov
insl
testb
cmp
out
fsubp
inc
pop
gs
pop
ja
in
dec
jb
sub
mov
xchg
icebp
push
jle
icebp
jne
lcall
mov
icebp
bound
leave
mov
xchg
hlt
xor
dec
in
push
or
jnp
jp
xlat
aas
mov
adc
fisttpll
ret
in
in
fldenv
xor
fbstp
fs
inc
add
orl
repnz
rcll
popf
fwait
xchg
sub
push
cmpsl
dec
push
stos
sbb
jl
sarb
aam
cli
pusha
add
cmp
out
iret
mov
mov
pop
movsl
mov
xchg
xor
push
adcb
shlb
fwait
inc
int
sbb
stc
imul
sbb
add
imul
mov
lds
xor
enter
rcll
jge
xchg
leave
stos
inc
sbb
stos
mov
arpl
je
jge
rcrl
xor
mov
or
in
int3
inc
jle
pop
pop
xor
fiadds
sub
les
scas
int
cmp
lea
cmp
movsb
fld
fcoms
ficomps
in
in
jns
fstps
daa
movsl
xor
cmp
pop
jmp
ss
xchg
dec
cmpl
movsl
sub
and
and
rolb
into
test
pop
xlat
and
clc
pop
cmpsb
xor
pop
js
lcall
aad
fndisi(8087
jne
sub
cmp
arpl
mov
icebp
cmpb
xchg
or
add
push
cld
xor
js
push
fmull
mov
xor
pop
enter
dec
xor
mov
test
outsb
pop
nop
inc
test
lock
mov
or
mov
pop
fmulp
and
sbb
cmp
inc
push
push
testl
lret
mov
sbb
sbb
push
xor
mov
loop
cmpsl
and
fsubrl
adc
sbb
repz
or
cmp
out
jle
cli
add
ret
lret
lahf
cmp
mov
or
incl
outsl
mov
ficompl
test
adc
stos
pop
imul
push
ret
add
pop
data16
push
sbb
ret
xlat
inc
lcall
fldt
in
xchg
test
aad
es
nop
dec
shrb
dec
imul
fld
push
lods
repz
dec
xchg
arpl
rorb
fisttps
mov
pop
push
jle
adc
mov
pop
jmp
xor
es
mov
mov
aas
xchg
sbb
cmpsl
cmp
dec
out
cmp
insl
jecxz
or
leave
pop
mov
mov
pop
shll
mov
out
dec
dec
cmp
mov
pop
cwtl
add
mov
adc
lock
mov
mov
scas
fldenvs
mov
xor
mov
sahf
ljmp
and
mov
and
xchg
cld
push
and
or
lods
shll
mov
in
int
sarb
adc
sub
stos
xchg
ret
repnz
clc
mov
in
xchg
jbe
add
push
cmpsl
pushf
popa
add
movsb
mov
hlt
or
ds
push
in
pop
mov
jbe
push
mov
xchg
jge
push
mov
clc
dec
mov
into
addr16
add
sbb
nop
roll
cmp
stos
adc
out
nop
push
add
mov
es
xor
stos
xor
cmpsl
sbb
ljmp
pop
and
rorb
js
inc
lods
mov
or
cmp
and
mov
fstps
test
sub
xchg
aad
bound
xchg
cmp
xor
inc
pop
mov
sub
mov
jp
add
add
ja
mov
or
add
pop
mov
aas
fwait
dec
movsl
call
mov
sbb
into
call
jmp
adc
popl
mov
mov
fbld
shrb
jne
insb
cmp
xor
jle
into
xchg
push
jo
in
mov
xor
dec
pop
fdivrl
and
jae
xor
push
inc
pop
and
aaa
inc
les
sub
fisubrl
add
lcall
mov
or
jecxz
and
rolb
leave
and
hlt
cmc
ret
xchg
arpl
fildl
push
and
stc
fistpl
out
xchg
sub
ss
sub
subb
mov
popa
int3
xor
xchg
pop
lea
aam
jmp
or
jo
inc
fsubrs
and
jo
fs
push
aaa
mov
in
lret
push
in
enter
daa
movsb
jns
cmp
sub
jno
mov
clc
dec
repnz
push
ds
jbe
das
cltd
and
in
lahf
cld
mov
push
mov
aam
push
daa
xchg
aas
inc
sahf
pop
jp
mov
mov
in
arpl
pop
xchg
mov
push
lds
sub
xchg
and
sbb
mov
adc
rclb
jns
push
pushf
clc
sbbb
sbb
cmp
add
imul
iret
dec
adc
cmpsl
sub
pop
or
mov
push
xor
and
outsb
ret
test
mov
push
jg
push
jle
inc
pop
mov
mov
add
mov
cmp
std
cmp
addr16
mov
mov
das
enter
mov
xor
lods
ret
outsl
add
loop
mov
stc
sbb
leave
fs
lret
adc
in
ss
dec
lods
movsl
mov
or
subl
xor
shlb
jge
or
inc
in
push
iret
bound
jle
loopne
mov
adc
int
adc
jo
add
pop
cmp
hlt
add
fnstsw
std
test
test
inc
sbb
loope
repnz
scas
sti
push
sar
mov
lock
sub
ljmp
fadd
fincstp
aas
or
loopne
imul
es
ljmp
or
cwtl
adc
int3
push
pushf
mov
sub
inc
cmp
lcall
adc
scas
loop
fwait
sub
jecxz
mov
int3
mov
cmpsb
cwtl
dec
lock
adc
dec
mov
jge
or
sub
jno
and
addr16
cmp
dec
lock
jp
das
pushf
jecxz
mov
data16
and
pop
and
fdivp
mov
out
pop
insl
mov
nop
push
cmpsl
mov
adc
icebp
clc
pop
mov
lret
test
and
and
mov
jecxz
rorb
out
sub
dec
aam
xchg
es
jg
incl
xchg
clc
jmp
fcoml
adcl
lods
lods
lret
adc
pop
xor
xchg
test
decb
subb
add
cltd
unpcklps
mov
push
ja
dec
dec
and
aad
cltd
shr
xchg
and
adc
inc
rcrl
and
scas
adc
jmp
add
fmuls
xor
idivl
out
out
jne
or
cltd
xor
clc
cmp
xchg
popa
in
sub
jg
fldt
ja
js
dec
pop
mov
pop
or
dec
or
les
jne
jl
mov
imul
hlt
push
ljmp
mov
mov
repz
sub
mov
mov
add
mov
mov
and
mov
gs
pop
in
or
pusha
inc
je
fcomip
lock
xchg
mov
lea
subl
jmp
xor
and
mov
and
push
xor
jle
pop
insb
test
fwait
jnp
and
out
mov
jb
xchg
push
mov
enter
adc
inc
out
sub
push
or
push
or
sbb
inc
lret
xor
leave
mov
sbb
add
imul
ja
in
mov
jge
xor
inc
mov
and
and
cwtl
stc
inc
hlt
inc
sub
inc
dec
cmp
jge
mov
sbb
aas
add
jne
adc
dec
scas
clc
int3
sbb
rcr
mov
stc
xor
jp
pop
scas
mov
xchg
and
aad
movsb
out
cmp
xchg
jbe
jp
in
mov
iret
shrl
inc
mov
ds
jecxz
in
push
jl
lods
and
popa
rcrl
and
movsl
xor
and
lret
sbb
push
jbe
pop
test
repnz
add
cmpsb
ss
cmpl
xchg
aad
sahf
push
dec
xchg
loope
icebp
cmc
sub
jp
cmp
adc
ds
fwait
mov
lods
mov
scas
mov
sbb
add
add
sbb
call
fcomps
add
push
fisubs
in
mov
mov
cmp
in
pop
bound
and
cmpl
sub
dec
outsl
outsb
and
arpl
addr16
jg
call
and
repz
mov
int3
cmp
mov
scas
xchg
lret
xchg
rorl
sub
call
loop
cmc
cmp
push
xor
test
adc
imul
data16
iret
push
xacquire
mov
daa
jns
mov
mov
jo
out
push
cli
push
movsl
xor
push
loopne
popf
and
cwtl
gs
icebp
loopne
adc
pop
cmpl
imul
push
inc
data16
inc
sbb
cmp
jmp
mov
dec
std
in
pop
jle
sti
adc
jnp
aad
les
add
dec
daa
movsb
loope
push
mov
and
jmp
cmpsb
repz
jmp
cmp
mov
pop
mov
sbb
dec
mov
push
loope
cs
pop
push
inc
or
movsb
aas
iret
push
jb
cmpsb
mov
aam
out
je
mov
call
std
or
into
cwtl
pop
push
dec
mov
xchg
mov
ret
xlat
aam
adc
fistl
add
fidivrs
mov
lock
jnp
das
jnp
fisubs
sbb
push
shrl
mov
push
int
push
cmpsl
mov
out
mov
iret
cmp
lret
sbb
fimuls
mov
sub
pop
sub
inc
rcr
lret
mov
or
aas
aam
int3
ds
hlt
pop
push
es
sti
insb
frstor
out
clc
es
xchg
hlt
push
fs
test
mov
cmp
xchg
int3
mov
push
fwait
add
pandn
ja
les
into
dec
dec
mov
sub
mov
mov
xchg
mov
loop
mov
mov
pop
sahf
fildll
push
mov
add
xrelease
xor
cmpsl
or
mov
mulb
lock
cmpl
and
es
dec
lods
push
inc
fidivl
cmp
fstpl
lods
popa
jne
or
pop
outsb
jp
push
aad
bound
cmp
daa
jmp
mov
rclb
sbb
cwtl
sub
lods
mov
fnstsw
rcll
mov
aam
mov
in
xor
fists
lret
ljmp
dec
adc
or
lcall
mov
add
and
popf
scas
jnp
fstpt
jle
test
push
sub
jb
out
jne
ret
pop
pop
dec
xor
imul
or
lret
push
adc
xchg
xchg
ret
xor
ficoml
xchg
sbb
inc
sbb
out
scas
dec
stos
xor
add
adc
sbb
push
leave
cmovns
in
arpl
sub
push
into
or
dec
sbb
cmp
mov
and
add
enter
sub
pop
jmp
lret
call
or
inc
loopne
push
aas
and
or
jns
fisubs
test
push
in
cltd
cmc
mov
daa
mov
fcomip
jno
and
dec
rolb
sub
movsl
int
lahf
cmp
cmp
test
mov
mul
cmpsb
mov
cs
js
add
pop
adc
sbb
andb
cmp
cmp
es
out
pop
adc
mov
push
fistpll
sbb
adcl
fwait
mov
out
jns
fwait
out
stos
int
cmp
sub
roll
or
lcall
mov
cs
sub
rcrl
push
outsb
sbb
jg
sbb
jmp
in
mov
push
andb
hlt
lock
repnz
mov
jae
iret
testl
dec
in
jecxz
jg
pop
stos
mov
cmc
add
mov
popa
loop
pusha
aad
xchg
cmpsl
fs
sbb
or
out
ss
xor
sub
shl
orl
inc
cmp
xorl
leave
addr16
fmull
gs
enter
cmp
pop
mov
data16
imul
push
add
xchg
pop
data16
or
sbb
jae
and
add
out
and
popa
in
enter
les
and
outsl
dec
xchg
inc
gs
add
fidivrl
divb
fs
lods
adc
sti
call
or
dec
pop
insb
test
sbb
pop
imulb
add
inc
dec
js
inc
daa
or
aas
outsb
mov
or
dec
int
xor
inc
shl
mov
mov
adc
ret
mov
cli
in
mov
mov
stos
adcl
lret
sbb
xorb
mov
flds
orb
mov
aam
and
ror
sarl
imulb
insl
lea
sub
mov
cmpsl
mov
jge
icebp
cmpsb
xchg
and
popl
or
cmc
xchg
fisubl
repnz
pop
dec
sbb
mov
xlat
sub
push
lret
ret
subl
fisttpll
pusha
clc
popa
lods
rcll
addr16
mov
mov
pop
push
fs
adc
notb
mov
push
add
sti
cwtl
test
mov
insl
push
std
andb
lcall
jns
popf
rorl
pcmpgtd
enter
add
mov
mov
ljmp
bound
or
movsl
xor
xchg
cmc
mov
repz
jno
jp
jecxz
push
xchg
push
ja
sbb
dec
ds
jg
jno
xor
clc
arpl
or
add
in
cmp
xor
shll
or
jns
in
in
xchg
xor
mov
jo
sub
cmpsl
clc
jae
add
pop
jp
mov
cld
mov
aas
mov
mov
dec
and
pusha
jns
fbstp
test
or
pop
cmpsl
adcb
popa
out
testl
push
mov
addr16
lods
mov
insb
jle
dec
jnp
push
and
int
push
inc
inc
cmp
dec
int3
xchg
iret
xor
out
andl
jp
mov
mov
push
movsl
inc
inc
leave
mov
cwtl
xchg
jg
cltd
sbb
push
fisubrl
inc
cmpsb
scas
mov
sub
mov
push
shlb
mov
leave
pop
leave
xchg
hlt
bnd
inc
shrb
push
aam
jge
leave
test
and
cmp
jae
orl
xchg
lds
ja
aam
repz
inc
pop
sbb
out
lods
xor
xor
scas
dec
sub
xchg
cmp
std
lock
add
and
jbe
xor
enter
daa
mov
push
jno
mov
insb
lock
dec
aas
cld
push
out
int3
movsl
inc
xchg
scas
and
dec
lahf
pop
mov
test
mov
dec
inc
dec
sub
cmpsb
cmp
adc
imul
push
lods
dec
push
imul
mov
mov
mov
mov
sbb
insl
push
stos
adcb
cld
add
mov
xor
xor
int
jge
sub
dec
fildl
mov
lcall
sti
clc
arpl
aad
adc
jmp
aaa
test
xchg
test
xor
add
mov
outsl
out
push
cmc
pop
mov
into
pop
aam
jl,pn
testl
mov
mov
enter
sahf
cmc
or
out
or
lahf
outsl
loop
push
or
fs
cwtl
adc
sti
call
bound
and
js
cmpb
cli
shr
xor
push
jnp
in
into
mov
add
loopne
push
push
sarl
xor
test
add
cmp
scas
aas
mov
inc
fwait
cmc
sub
ret
xor
mov
xchg
or
loope
mov
lock
inc
js
outsl
fstps
pop
repz
insl
xchg
outsl
idivb
lea
leave
or
lret
inc
jnp
mov
pop
jne
adc
and
pushf
movsb
stos
sub
popf
mov
fs
inc
iret
aas
pop
inc
inc
imul
jb
loopne
dec
ret
je
enter
aad
pusha
std
push
push
jmp
mov
icebp
loop
push
add
dec
jmp
inc
pop
pop
and
dec
mov
repnz
cmp
mov
and
xorl
scas
out
insl
je
orl
push
inc
icebp
jge
ja
add
scas
lret
mul
test
enter
lea
pop
imul
subb
and
ret
adc
es
movsb
pop
fnsave
clc
pushf
in
cmp
fiaddl
lods
out
shll
incl
sub
pop
adc
mov
popf
fwait
cli
add
push
inc
mov
call
or
pop
xchg
mov
enter
sub
cmpsb
shll
mov
stos
int3
jae
out
sbb
mov
push
fld
add
mov
jg
call
jbe
xor
in
mov
negb
and
sbb
ja
xor
xor
insb
or
mov
pop
dec
jo
lods
xor
cmpxchg
js
addr16
repz
inc
icebp
in
arpl
xchg
jg
into
mov
pop
fsubrl
mov
stos
jp,pn
sti
add
mov
mov
imul
cmpsb
add
insb
push
fists
xchg
xchg
sbb
jmp
inc
and
adc
fs
loop
popf
pop
stos
push
mov
loop
inc
stos
push
sbb
insb
jmp
xchg
jno
test
mov
fwait
iret
xchg
pushf
ret
aas
pop
mov
xchg
jae,pn
jecxz
push
push
adc
or
mov
inc
dec
sarl
js
xchg
xchg
sti
mov
cli
cmp
imul
jbe
adc
rorb
mov
sbb
mov
std
shrl
and
arpl
xchg
inc
push
dec
jae
sub
sbb
jnp
aaa
xor
or
or
push
push
int3
fisubrs
dec
pop
xor
jne
shll
mov
push
and
cmp
xchg
movsb
nop
pop
std
push
jae
lahf
jbe
cmp
and
enter
daa
mov
arpl
jno
pop
test
xchg
rorb
scas
mov
push
lret
movsl
dec
pop
mov
lahf
js
inc
push
out
aad
test
push
iret
sub
mov
sbb
mov
js
test
pop
xchg
push
sub
or
loope
cli
lods
sub
das
les
xlat
adc
adc
cmp
repz
cmpsb
aas
scas
sbb
sbb
xor
jmp
int
mov
pop
pop
or
xchg
dec
xchg
test
lds
rdtsc
test
in
mov
in
and
ss
pushf
ja
jnp
pop
mov
ljmp
clc
ss
jne
fsubr
mov
or
shll
mov
mov
xor
sahf
jle
xchg
cmc
mov
test
inc
adc
outsl
subb
stc
hlt
bnd
xchg
sub
ss
jl,pt
inc
push
cmp
pop
mov
cli
add
cs
fxch
or
pop
mov
mov
mov
popf
pop
loopne
adc
outsl
imul
incl
push
loope
data16
nop
sbb
jmp
movsl
jns
adc
push
mov
sahf
adc
sti
and
scas
mov
mov
jecxz
inc
popf
cmp
and
add
les
cmp
fadds
xchg
xor
lea
mov
movl
hlt
sbb
sbb
pushf
dec
sti
mov
pop
mov
sub
push
imul
pop
fsubrl
jb
dec
mov
jge
je
gs
jecxz
xor
fcom
mov
repnz
mov
insb
cli
mov
or
aam
movsl
fneni(8087
pushf
clc
pop
mov
pop
lock
cmp
sbb
scas
mov
inc
dec
lret
and
mov
sbb
gs
sub
insl
pop
sbb
mov
mov
push
stos
sbb
sub
dec
lret
gs
mov
inc
loop
sub
test
mov
rcrb
loope
lock
imul
jne
ret
mov
daa
in
mov
xchg
mov
jb
dec
decb
hlt
sti
mov
rcrl
xchg
mov
gs
add
js
test
jp
insb
sub
orl
mov
xchg
pop
sbb
nop
sub
mov
fcomps
stos
mov
lret
icebp
add
inc
je
pushl
adc
or
dec
das
xor
test
xchg
in
or
push
fnsave
iret
rorl
shlb
das
clc
dec
fwait
mov
push
push
push
mov
out
out
repnz
mov
in
inc
lock
into
shlb
sub
popf
xor
jmp
sbb
call
leave
mov
fldt
jo
je
scas
out
fildll
int
in
adc
xchg
or
mov
out
inc
inc
popf
test
icebp
mov
and
lret
and
xchg
insb
insb
push
out
in
jp
and
cmp
adc
andb
adc
dec
pop
out
jne
inc
adc
adc
cmp
or
add
popl
dec
fisubrl
clc
xlat
xchg
sub
repnz
imul
dec
lds
cmp
div
outsl
aad
leave
je
push
arpl
popl
cmp
jge
jb
sbb
sbb
add
dec
loopne
js
mov
sbb
ret
xor
out
inc
scas
pop
inc
xchg
and
in
fdivrl
sahf
mov
movsb
sbb
mov
jbe
mov
in
dec
nop
push
enter
daa
lahf
mov
les
enter
test
push
lods
out
movsl
push
sbb
jbe
mov
push
ret
test
push
xor
imul
pop
scas
mov
pop
roll
lahf
push
pop
fsub
incl
sub
push
pop
ds
and
rcrb
fdivrl
sub
cmpb
js
jne
mov
push
sub
in
adc
rep
adc
ret
repz
xchg
jnp
jecxz
vcomiss
cmpsb
sub
add
test
idivl
outsb
fidivl
repnz
jle
pop
mov
and
adcl
fsubs
imul
ljmp
sbb
jo
push
outsb
lds
popf
pop
mov
pop
mov
xchg
stc
stos
dec
loop
push
mov
adc
mov
inc
lods
sub
mov
jle
adc
ss
xor
or
in
ret
pop
dec
das
into
test
pop
gs
shl
jl
xor
inc
cmp
xlat
hlt
and
ret
jno
mov
cmp
sbb
and
push
xlat
shlb
sub
cmpsb
in
or
sti
rcrl
ss
mov
nop
jo
adc
dec
jl
sahf
mov
dec
les
out
push
repz
mov
dec
in
jmp
in
movl
mov
push
jmp
imul
inc
js
hlt
aas
dec
push
push
jb
jmp
dec
mov
shlb
jecxz
add
fstpt
std
movsl
stos
lcall
shrb
mov
cli
leave
xorl
mov
ud1
pop
push
mov
daa
daa
cmc
lock
inc
mov
testl
sbb
popa
call
cmpsb
divb
jl
dec
mov
and
mov
outsb
jl
push
outsb
leave
lret
aam
jns
sahf
in
out
sbb
negl
cmpsl
mov
shrb
stos
sub
out
pop
aam
add
xor
sti
es
or
ret
clc
adc
push
xchg
lock
lods
ljmp
sub
data16
mov
call
pop
adc
pop
cli
in
add
fucom
cltd
js
jns
cli
negl
mov
mov
push
inc
pop
cmp
cmpsb
mov
xchg
gs
sbb
fnstcw
add
and
add
pop
inc
cmp
in
xor
mov
js
mov
xchg
repnz
outsl
int
pop
subb
ja
out
aas
dec
pop
test
inc
ss
or
setnp
mov
jne
xchg
out
into
add
bound
repnz
in
je
xchg
sbb
xchg
jns
pushf
lahf
sub
cwtl
xor
jp
testb
mov
mov
nop
lods
outsl
dec
imul
sbb
ja
push
pusha
dec
jne
fisttps
in
jmp
shrd
les
out
inc
dec
ficoml
sub
stos
cmp
cmp
inc
jnp
pop
push
jle
pusha
mov
loopne
adc
negl
push
daa
lcall
roll
sbb
rcrl
push
xlat
mov
subb
mov
fcmovu
test
push
xor
xchg
jae
rolb
mov
ret
leave
jmp
cmp
arpl
add
jge
popf
sub
aaa
mov
pop
or
push
add
fmulp
mov
jle
cmpsl
nop
fidivrs
dec
shll
xor
scas
out
jmp
xchg
popa
std
cmp
fldenv
sbb
push
test
in
xor
fidivs
cmp
popf
jl
or
dec
mov
push
nop
icebp
sbb
and
movsb
adc
xchg
popa
movsl
test
jmp
pop
mov
lds
js
push
stos
pop
adc
push
gs
loope
mov
sub
jne
cmp
shrb
hlt
fsubs
mov
sbb
das
add
jmp
xor
aam
cmpsl
mov
int
cltd
fisubrl
cmpsl
jp
push
setp
mov
cmp
sub
fiaddl
mov
out
mov
in
dec
lock
sbb
mov
push
mov
aad
and
inc
sahf
cmp
pop
out
jno
jg
push
lret
call
mov
into
add
sbb
test
clc
mov
insl
loop
cs
stc
bound
test
jbe
ss
invlpg
adc
js
cli
imul
cmp
cmp
enter
push
or
loopne
and
pop
push
mov
adc
fildll
add
jge
push
mov
sbb
pop
or
xlat
incl
sub
dec
std
mov
je
aas
sti
add
incb
andnps
cmp
mov
or
xorb
and
repz
lods
xchg
mov
push
push
call
add
adc
xor
lock
hlt
jne
lea
inc
fs
outsl
inc
xchg
incb
jb
mov
dec
je
jp
jecxz
sbb
ficomps
and
in
push
mov
sahf
jp
stos
inc
fstpt
cltd
mov
mov
or
lock
test
das
and
mov
mov
pop
and
cltd
pop
sarl
or
insl
sub
andl
add
cld
andb
inc
add
mov
pop
pop
mov
mov
sar
and
sub
cmpsl
and
ret
mov
mov
jmp
es
xchg
das
pop
imul
and
lods
das
sub
mov
jmp
adc
push
loop
outsl
btsl
add
repnz
mov
mov
subl
mov
das
xchg
pop
sbb
insb
shll
sti
pop
mov
stos
cltd
sahf
ret
out
inc
sahf
sbb
jp
cmp
adc
xor
stos
mov
and
les
cltd
adc
xor
cmp
xchg
stos
dec
or
into
inc
int
or
fwait
ljmp
jne
adcl
lods
sbb
bound
inc
inc
jns
aas
xchg
in
sti
setae
mov
fldenv
or
sub
jp
adc
mov
incl
dec
fidivl
in
lds
pusha
in
mov
lods
dec
test
xchg
jmp
jmp
mov
sbb
movsb
popf
shll
add
or
mov
jl
or
fwait
insb
sub
in
fsub
pop
jle
jp
push
popa
xchg
iret
mov
push
ret
push
pop
pop
aam
inc
sub
push
jae
mov
push
lcall
push
ficoml
int3
enter
out
jne
imul
mov
push
jnp
adc
jb
hlt
add
jge
call
jge
lods
test
or
add
outsl
and
or
out
mov
int3
lahf
test
ficomps
mov
jo
mov
inc
and
cld
movsb
xor
push
pusha
mov
add
sbb
pop
enter
daa
popf
call
lods
jno
xchg
js
sbb
dec
sti
jge
push
jae
push
movsl
pusha
add
and
jge
push
dec
mov
inc
xchg
pop
std
cmp
gs
dec
push
push
and
sub
push
sti
cmp
hlt
and
jnp
repnz
iret
jmp
push
sbb
pop
sbb
ja
mov
xor
ret
push
imul
push
sub
add
lcall
and
test
sub
lret
dec
test
mov
mov
mov
les
mov
out
mov
je
cmp
sbb
push
idivl
push
cmp
sbbl
mov
mov
sahf
addr16
cmc
jecxz
xor
push
xor
loop
movsb
xchg
sbb
ret
mov
bound
or
lods
imulb
stc
mov
loopne
out
ds
dec
dec
xor
jmp
lahf
or
jbe
into
dec
cs
gs
loopne
push
cmp
cmp
add
negl
ss
iret
push
mov
cmp
faddl
push
sbb
xchg
pop
repnz
fistps
mov
das
mov
and
inc
nop
es
mov
inc
les
js
pop
les
jns
xchg
jnp
jmp
mov
jg
movl
mov
inc
lods
lock
jmp
sub
lods
push
aas
mov
pop
jb
mov
sahf
xchg
fbstp
push
jecxz
jns
loope
cmp
enter
sbb
mov
hlt
outsl
mov
les
sahf
popf
dec
xchg
mov
pop
mov
gs
dec
popa
lock
and
das
mov
imul
mov
and
lahf
cmp
pop
incb
mov
out
dec
scas
movsl
cmpsl
cmpsl
pushf
in
sbb
fstps
cld
lods
es
mov
cmp
and
stc
cmpsb
mov
rcl
shlb
aam
adc
ret
dec
ja
or
fstl
stc
cmpsb
clc
mov
xchg
ljmp
or
fistpl
xchg
jbe
mov
jns
nopl
add
cmp
cltd
out
in
adc
insb
mov
xchg
rclb
es
cmc
dec
lds
les
sbb
dec
xchg
mov
ss
stos
mov
pusha
out
test
fs
xchg
adc
call
and
xor
ret
cwtl
xchg
xor
popa
pop
mov
add
mov
clc
sbb
ja
mov
cmp
adc
or
sub
fstpl
cmp
es
xor
bound
das
dec
in
aad
xchg
mov
xchg
lock
mov
outsl
addr16
mov
jp
rorb
das
mov
add
mov
inc
pop
pusha
or
cmp
jmp
insb
dec
inc
adcl
and
popf
cli
sub
ficomps
stos
and
inc
and
testb
mov
jnp
xor
jle
xchg
test
or
xchg
and
ret
cmpsb
pop
xchg
jns
inc
xor
fists
pop
add
inc
push
inc
or
xchg
xor
push
imul
mov
aaa
sarb
xor
push
cltd
cmp
dec
es
mov
sub
mov
stos
sbb
mov
xchg
or
xchg
int3
mov
lret
pop
add
bound
xor
mull
scas
movsb
mov
cmp
adc
fs
scas
imul
add
add
lods
pop
call
cmp
mov
jl
cltd
dec
dec
push
inc
push
push
jecxz
movsl
addr16
inc
and
jae
hlt
loopne
push
cmp
or
cltd
inc
push
and
cmpsb
lret
popa
rcrl
in
or
jbe
pop
mov
lock
nop
xchg
loope
lcall
rorb
cmp
pusha
xlat
adc
stos
push
loopne
dec
pop
adc
cmpb
shl
sub
and
pop
add
inc
lcall
sbb
xor
sub
pushf
lods
test
loope
andb
sub
jge
mov
sbb
call
and
sbb
dec
adc
aad
idiv
mov
mov
scas
xchg
fisttpl
jns
sahf
or
aas
xor
add
stc
shlb
ljmp
pop
xchg
lods
fldl
mov
into
mov
cli
iret
jecxz
xor
jbe
or
sahf
outsl
mov
xchg
adc
xchg
out
adc
ret
imul
into
nop
add
ja
or
negb
aad
pop
xlat
jge
mov
fstl
mov
dec
ret
sub
fisubs
incb
mov
lret
cmp
popf
dec
shlb
xlat
lods
sub
scas
or
les
pop
std
repz
xlat
xchg
ds
lea
leave
imul
inc
jge
add
pop
sahf
sti
cmpsb
adc
lcall
pop
cwtl
cs
lcall
jb
jbe
leave
jo
aas
sub
ret
jb
add
dec
adc
fidivrs
in
push
std
lcall
mov
jg
mov
aaa
sahf
xorl
movsl
aad
push
and
mov
clc
push
lock
lods
pop
das
xchg
pop
call
mov
add
mov
idiv
mov
dec
dec
stos
clc
in
fwait
pop
pop
mov
mov
jbe
fadd
ja
and
sub
xchg
lods
xchg
pop
add
lcall
lahf
cmpsb
aam
cwtl
or
lea
cmp
xchg
lods
push
and
sbb
movsl
popa
push
dec
sub
mov
xchg
xchg
mov
test
vmread
mov
test
sub
call
mov
test
iret
xchg
stos
dec
adc
dec
pop
push
mov
stos
ja
outsl
out
or
add
mov
out
js
xor
sti
mov
mov
add
cli
adc
icebp
pushf
ja
cmp
pop
jne
sti
loope
or
out
fwait
dec
push
add
fdivrl
mov
imul
inc
xchg
jl
lods
les
test
mov
lds
or
mov
out
mov
lock
cmpl
mov
mov
mov
mov
call
fucomip
xor
cmp
cltd
xchg
aaa
xor
mov
dec
dec
daa
popf
and
cmp
repnz
push
sbb
and
and
or
jnp
inc
push
jle
mov
add
outsl
xlat
lods
iret
outsl
push
insb
ret
jb
lret
ret
ds
jae
cmp
push
and
push
mov
lock
pushf
inc
ret
cmpsl
es
data16
mov
sbb
and
push
mov
scas
add
xchg
lds
stc
sub
repnz
gs
hlt
cwtl
sub
arpl
jl
jge
jne
sbb
xor
sti
add
jae
int3
jne
ficompl
mov
sbb
jo
mov
mov
cmp
stc
movsb
inc
and
inc
jbe
xor
in
ljmp
daa
fwait
ds
jno
repz
jl
popf
lea
jmp
cmp
jp
outsb
adc
lahf
adc
xchg
test
dec
sti
popa
inc
movsl
in
andb
adc
popa
in
pop
int
daa
push
mov
loope
fisubl
cmp
xchg
rcrl
rolb
inc
lods
addb
js
mov
insb
mov
lock
cmpsl
int
mov
int3
pop
cmpl
test
mov
fildl
sub
insl
outsb
cmp
cmpsl
mov
cmp
xor
outsb
mov
mov
and
ss
mov
xchg
jns
mov
pop
pop
roll
mov
stos
sbb
daa
sahf
lods
pop
jmp
xor
push
xchg
outsl
sub
or
fs
sbb
ss
leave
imull
push
push
cmp
jp
cmp
xor
xor
push
cmp
scas
push
adc
add
loopne
in
pop
jnp
and
imul
adc
add
ret
jmp
sbb
adc
loopne
mov
popa
in
sarl
mov
enter
stos
imul
dec
pop
aaa
xlat
inc
ljmp
les
hlt
repz
push
xchg
add
pop
call
add
pop
push
jmp
pushf
cmpsb
cmc
mov
lret
cs
lahf
inc
stc
and
inc
in
mov
sbb
jb
jo
dec
mov
int
ds
and
inc
out
mov
cwtl
fists
lahf
mov
lea
push
pop
or
int3
sub
fcmovne
rcr
pop
negb
inc
push
mov
decl
das
jae
aas
mov
aad
aaa
and
cmpsb
pop
shll
inc
xchg
insl
push
dec
movsl
fucomip
cmpsl
lcall
icebp
xchg
xor
add
lret
nop
pop
push
mov
mov
xchg
mov
and
shlb
and
ret
xchg
jmp
ret
insb
or
adc
xchg
fcoml
mov
ret
popa
addr16
lods
jo
mov
push
pop
adcb
jmp
pmovmskb
mov
punpckhdq
test
loopne
mov
addl
test
or
xchg
dec
sbb
shrl
add
popa
stos
lods
loopne
outsb
add
jnp
mov
decl
test
xor
cwtl
pop
mov
or
jg
outsb
pop
push
ja
xchg
inc
dec
jecxz
scas
inc
xchg
ror
or
jne
fwait
ja
xlat
push
jg
inc
jne
leave
clc
mov
imul
mov
xchg
pop
icebp
mov
push
sub
test
push
addr16
dec
out
sbb
mov
mov
dec
lcall
xchg
push
jnp
or
xchg
or
or
loopne
lcall
mov
shr
into
popf
dec
hlt
mov
pop
xchg
and
dec
ds
jnp
sbb
jle
jge
push
ss
adc
sbb
into
sbb
jae
in
add
es
loop
push
jecxz
xor
imul
inc
enter
std
xchg
loopne
leave
sbb
sbb
inc
jl
addr16
lds
repnz
jle
xchg
mov
leave
aam
hlt
jecxz
ljmp
scas
pushf
jge
xor
sbb
xchg
or
aad
add
adc
pop
arpl
and
inc
aad
xor
lods
adc
fidivrs
ret
cmp
xor
push
dec
int3
lods
jbe
cmc
jbe
rorl
enter
daa
lcall
jno
pop
push
jl
jne
dec
dec
sub
movsl
jne
pusha
and
cmpsl
lahf
xor
push
loope
and
ds
push
adc
cld
cmp
pop
jb
push
js
out
pop
or
cmpsl
push
mov
sub
repz
cmp
mov
ds
pusha
xchg
sbb
sbb
aaa
sbb
inc
adc
jnp
xor
inc
mov
ror
divb
xchg
sub
cmp
push
lcall
loopne
xchg
sub
sbb
test
shr
sbbb
jg
lock
mov
lcall
cmp
push
or
addr16
dec
dec
sbb
lret
lret
rcr
xor
xor
sahf
push
mov
cmc
cmp
xor
outsl
mov
cmp
jmp
adc
cmpsl
clc
lods
stos
adc
mov
inc
out
test
cli
xor
sbb
les
into
hlt
pop
mov
loopne
dec
aad
lcall
imul
scas
icebp
add
pcmpgtd
dec
push
sbb
dec
cs
xlat
sti
mov
sub
and
push
in
and
decb
cmp
mov
jecxz
jle
repz
std
test
fstps
cmp
xchg
lret
adc
call
add
jno
mov
int3
pushf
push
cmp
push
sbb
inc
andb
data16
jb
adc
dec
add
je
xchg
add
xor
icebp
std
call
insl
xor
stc
cmp
andl
sbb
rol
cltd
mov
pop
add
mov
mov
aas
and
test
shl
mov
lds
cmpsw
cltd
stc
in
mov
pop
pop
frndint
jno,pn
lret
cmp
mov
inc
sbb
inc
xchg
cmp
dec
adc
sub
mov
push
fldl
fists
ljmp
imulb
leave
sbb
dec
xor
pop
sub
dec
cltd
mov
test
in
mov
inc
pop
or
dec
sub
cmp
inc
popa
add
pop
pop
mov
stos
push
cmp
add
out
dec
ljmp
xor
les
xor
aad
rolb
mov
and
ja
dec
push
dec
jecxz
inc
sub
sbb
xlat
arpl
and
mov
and
out
sub
mov
in
pop
pop
xchg
test
pop
mov
or
jle
stc
bound
mov
lret
imul
mov
add
in
adc
push
push
fildll
sub
fisttps
shr
xlat
scas
mov
cmpl
push
popf
outsl
ss
dec
push
fwait
stc
int3
stos
jl
mov
insb
in
sbb
mov
jle
push
push
jge
mov
and
fbld
ret
das
pop
cmp
inc
push
push
out
sbb
cmp
cmpsb
jge
or
out
pop
inc
shrl
in
aaa
xchg
cmpsl
mov
imul
or
ret
stos
sbb
or
lods
mov
popa
cmp
leave
ds
imul
push
inc
jge
into
cmp
clc
rcll
or
mov
das
or
int3
dec
jmp
xchg
fsubrp
jl
xor
or
scas
inc
hlt
ja
jno
cmc
cmp
cmp
movsb
pop
sub
push
pushf
bound
ret
lea
