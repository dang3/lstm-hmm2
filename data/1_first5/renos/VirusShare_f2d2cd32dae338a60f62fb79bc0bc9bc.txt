push
mov
add
mov
mov
mov
mov
adc
mov
decl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
push
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
mov
call
call
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
mov
mov
add
mov
decl
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
inc
mov
xor
cmp
jne
mov
mov
mov
add
or
mov
mov
mov
mov
call
mov
mov
mov
push
mov
mov
mov
push
call
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
call
push
push
push
push
push
call
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
andl
mov
mov
mov
mov
mov
adc
mov
mov
cmpl
jb
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
or
mov
mov
sub
jne
mov
mov
mov
push
pushl
call
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
call
mov
mov
mov
call
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
push
push
push
mov
push
call
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
call
push
call
sub
push
push
call
mov
mov
push
add
push
call
mov
mov
push
call
mov
mov
sub
cmpl
jge
mov
mov
xor
mov
mov
inc
cmp
jne
mov
sub
mov
push
push
call
mov
push
call
mov
mov
call
call
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
subl
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pushl
push
call
mov
push
mov
push
push
push
call
mov
mov
subl
pop
ret
int3
int3
push
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
lea
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
call
and
call
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
add
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
mov
mov
leave
ret
mov
mov
mov
mov
mov
sub
push
mov
push
call
mov
adc
push
push
call
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
pushl
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
mov
push
call
mov
push
push
call
mov
mov
pushl
mov
push
call
mov
mov
call
mov
mov
call
call
mov
mov
mov
pushl
pushl
call
mov
mov
push
sub
push
call
mov
mov
orl
push
push
call
and
call
mov
mov
push
mov
push
call
mov
push
add
push
call
addl
pushl
mov
add
push
call
mov
mov
push
call
mov
call
mov
sub
mov
call
mov
subl
call
push
call
mov
call
mov
mov
push
call
mov
mov
mov
add
push
push
call
call
mov
mov
push
xor
push
call
mov
mov
push
push
call
mov
mov
mov
push
call
mov
mov
pushl
push
call
mov
call
mov
call
mov
mov
pushl
mov
push
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
call
mov
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
push
call
mov
mov
push
call
mov
push
call
mov
mov
mov
push
pushl
call
mov
mov
push
mov
push
call
mov
mov
mov
add
push
push
call
mov
push
call
mov
mov
call
mov
mov
mov
pushl
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
call
push
call
push
call
mov
mov
push
push
call
push
push
call
mov
mov
mov
sub
push
mov
push
call
mov
mov
push
push
call
mov
pushl
mov
sub
push
call
mov
andl
mov
push
call
mov
mov
call
mov
movl
add
push
pushl
call
or
mov
push
call
mov
mov
push
call
mov
mov
push
pushl
call
mov
call
mov
mov
push
call
mov
push
pushl
call
mov
mov
mov
push
call
mov
push
call
and
mov
mov
push
call
push
pushl
call
mov
call
mov
call
mov
mov
push
call
mov
push
push
call
mov
mov
mov
push
call
push
push
call
and
push
push
call
mov
push
call
mov
mov
call
mov
push
push
call
mov
mov
mov
push
call
mov
push
mov
push
call
push
call
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
call
push
push
call
addl
push
push
call
mov
mov
mov
mov
push
push
call
push
push
call
mov
mov
mov
push
call
mov
mov
mov
push
sub
push
call
mov
mov
push
push
call
mov
mov
push
mov
push
call
mov
call
mov
sub
push
mov
pushl
call
mov
mov
push
call
mov
mov
orl
push
call
mov
mov
pushl
push
call
mov
mov
push
push
call
mov
push
call
mov
mov
push
mov
sub
push
call
mov
call
call
mov
mov
mov
mov
push
mov
push
call
mov
push
call
mov
push
pushl
call
mov
mov
push
call
mov
push
call
mov
call
mov
mov
call
mov
mov
push
sub
push
call
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
push
push
call
push
push
call
mov
mov
push
call
mov
push
mov
push
call
mov
push
call
mov
push
call
call
mov
push
call
mov
call
mov
mov
push
call
mov
mov
call
mov
mov
push
mov
push
call
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
call
mov
orl
push
call
mov
mov
mov
pushl
push
call
mov
push
call
mov
mov
push
mov
push
call
mov
call
mov
mov
mov
pushl
mov
push
call
mov
call
push
call
mov
mov
push
call
mov
mov
mov
push
push
call
call
mov
push
push
call
mov
and
mov
mov
push
push
call
and
call
mov
mov
push
push
call
movl
mov
mov
call
mov
mov
sbb
push
push
call
mov
mov
pushl
push
call
mov
mov
add
push
pushl
call
mov
push
push
call
mov
mov
mov
mov
push
call
push
push
call
mov
pushl
mov
push
call
mov
mov
push
push
call
mov
push
push
call
mov
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
push
call
mov
pushl
pushl
call
call
mov
mov
call
mov
call
mov
mov
push
call
mov
mov
call
mov
mov
add
push
mov
pushl
call
mov
push
push
call
mov
push
mov
pushl
call
mov
pushl
push
call
mov
push
push
call
mov
mov
pushl
mov
push
call
mov
pushl
pushl
call
push
push
call
push
call
mov
mov
pushl
push
call
mov
mov
call
mov
push
call
addl
mov
mov
pushl
mov
pushl
call
mov
mov
push
mov
push
call
mov
mov
mov
call
mov
mov
push
pushl
call
mov
mov
pushl
mov
push
call
mov
pushl
push
call
subl
push
push
call
mov
sub
push
pushl
call
mov
call
mov
mov
push
call
mov
mov
add
push
push
call
mov
mov
mov
push
call
mov
mov
mov
push
mov
mov
push
call
mov
xor
push
call
mov
mov
mov
push
push
call
mov
pushl
mov
mov
push
call
mov
sub
call
mov
mov
mov
sub
push
push
call
mov
mov
mov
push
mov
push
call
mov
mov
pushl
push
call
or
push
push
call
push
call
mov
mov
mov
push
call
and
add
mov
push
call
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
add
push
push
call
mov
mov
call
mov
sub
push
push
call
mov
mov
push
push
call
mov
mov
pushl
mov
pushl
call
call
mov
call
mov
mov
mov
push
call
mov
push
call
mov
mov
pushl
sbb
push
call
mov
mov
pushl
push
call
mov
push
call
mov
mov
call
mov
pushl
mov
push
call
mov
sub
mov
pushl
push
call
mov
push
push
call
mov
mov
add
push
pushl
call
mov
mov
mov
push
call
mov
push
push
call
mov
mov
or
push
call
mov
mov
push
push
call
mov
push
call
mov
pushl
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
push
call
mov
call
mov
add
push
push
call
mov
mov
pushl
mov
push
call
mov
push
pushl
call
mov
mov
call
mov
mov
mov
push
push
call
mov
push
push
call
mov
call
call
mov
pushl
mov
mov
push
call
mov
mov
mov
push
push
call
mov
push
push
call
push
call
mov
mov
mov
push
call
mov
mov
push
push
call
mov
push
call
mov
push
push
call
mov
mov
mov
push
push
call
call
mov
mov
mov
mov
push
sub
push
call
mov
mov
pushl
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
mov
mov
push
call
mov
push
push
call
mov
push
push
call
xorl
mov
call
call
movl
mov
sub
push
pushl
call
mov
push
call
mov
mov
pushl
pushl
call
mov
push
call
and
mov
push
call
mov
mov
push
call
mov
push
call
mov
push
mov
push
call
mov
mov
push
push
call
mov
mov
mov
pushl
push
call
mov
mov
mov
push
call
mov
push
mov
push
call
add
mov
mov
call
mov
mov
mov
push
push
call
mov
mov
mov
call
mov
push
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
add
push
call
pushl
push
call
mov
mov
pushl
push
call
call
mov
push
push
call
mov
mov
push
pushl
call
mov
mov
push
call
mov
mov
call
mov
mov
push
call
mov
mov
call
mov
mov
mov
pushl
mov
push
call
mov
mov
push
call
mov
push
mov
push
call
mov
mov
mov
add
push
pushl
call
pushl
push
call
mov
mov
call
mov
mov
push
pushl
call
mov
mov
mov
mov
push
mov
push
call
mov
mov
push
mov
push
call
mov
pushl
mov
push
call
mov
pushl
push
call
addl
mov
push
call
mov
call
mov
mov
call
mov
mov
push
push
call
mov
push
push
call
mov
push
push
call
mov
mov
mov
push
or
push
call
mov
mov
push
call
push
pushl
call
addl
mov
push
mov
push
call
mov
push
call
mov
mov
mov
push
call
mov
push
pushl
call
mov
push
call
mov
call
mov
push
call
xorl
mov
mov
push
push
call
mov
mov
push
call
mov
push
call
mov
mov
call
mov
call
mov
mov
push
push
call
mov
mov
mov
push
call
push
push
call
mov
call
mov
push
call
pushl
pushl
call
mov
mov
push
call
add
mov
push
call
add
push
push
call
mov
mov
pushl
mov
push
call
mov
pushl
pushl
call
mov
or
mov
call
mov
mov
mov
mov
push
mov
mov
push
call
mov
call
mov
call
mov
mov
mov
push
call
mov
mov
push
mov
push
call
push
call
mov
mov
adc
push
mov
push
call
mov
mov
push
call
mov
mov
call
mov
push
mov
push
call
mov
call
mov
mov
push
push
call
mov
mov
push
push
call
mov
mov
pushl
push
call
mov
mov
and
push
mov
pushl
call
mov
mov
push
call
mov
mov
push
mov
push
call
mov
mov
push
call
mov
mov
mov
push
push
call
mov
call
mov
push
push
call
pushl
pushl
call
mov
mov
call
mov
pushl
push
call
add
push
push
call
mov
call
mov
mov
push
call
mov
add
add
push
mov
push
call
push
mov
push
call
mov
mov
push
call
mov
push
call
mov
push
push
call
addl
mov
push
call
mov
push
mov
push
call
mov
call
mov
add
push
push
call
push
call
mov
call
mov
push
call
mov
call
mov
mov
call
mov
mov
mov
pushl
pushl
call
call
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
push
mov
pushl
call
push
add
push
call
call
mov
mov
push
call
mov
mov
push
push
call
mov
mov
mov
mov
add
push
push
call
subl
mov
mov
push
push
call
mov
xorl
add
and
push
mov
push
call
mov
addl
mov
pushl
pushl
call
mov
push
sub
push
call
subl
mov
call
mov
mov
call
mov
push
pushl
call
mov
mov
pushl
mov
push
call
mov
mov
call
mov
push
call
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
push
pushl
call
mov
mov
call
mov
mov
call
mov
mov
mov
push
mov
push
call
mov
mov
call
mov
mov
sub
push
pushl
call
xor
push
push
call
mov
mov
mov
push
call
mov
mov
or
call
mov
pushl
push
call
mov
mov
mov
push
call
mov
mov
push
push
call
mov
mov
mov
mov
push
push
call
mov
push
call
mov
mov
push
call
mov
subl
mov
push
call
mov
call
mov
call
mov
mov
push
push
call
mov
mov
push
call
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
push
mov
pushl
call
mov
mov
call
push
mov
sub
push
call
mov
pushl
push
call
mov
call
mov
mov
mov
call
mov
push
call
subl
mov
mov
pushl
push
call
mov
mov
mov
mov
pushl
mov
mov
push
call
mov
push
call
mov
push
pushl
call
mov
mov
push
mov
push
call
mov
call
mov
mov
mov
push
mov
push
call
mov
call
mov
push
mov
push
call
mov
mov
push
push
call
push
push
call
mov
mov
pushl
mov
push
call
mov
push
call
mov
mov
mov
push
call
and
mov
call
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
call
mov
call
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
push
pushl
call
mov
push
push
call
mov
call
mov
mov
mov
pushl
mov
push
call
call
mov
push
mov
sub
push
call
mov
push
call
mov
push
push
call
mov
mov
mov
push
call
mov
mov
pushl
push
call
call
mov
call
pushl
push
call
pushl
push
call
mov
push
mov
pushl
call
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
push
add
push
call
pushl
pushl
call
call
mov
mov
add
push
mov
push
call
mov
mov
mov
push
push
call
mov
movl
call
mov
mov
push
call
movl
call
mov
mov
push
mov
mov
push
call
mov
call
mov
mov
mov
push
call
mov
mov
call
mov
call
mov
mov
push
call
mov
mov
mov
call
mov
mov
push
call
and
mov
mov
push
call
mov
push
mov
push
call
mov
call
mov
mov
mov
push
mov
push
call
mov
mov
call
mov
mov
push
call
mov
call
mov
call
mov
mov
push
pushl
call
mov
push
call
mov
mov
sub
push
push
call
mov
mov
sbb
push
pushl
call
and
mov
mov
push
push
call
mov
mov
push
call
mov
call
mov
mov
call
mov
call
mov
mov
and
push
push
call
mov
mov
mov
push
push
call
mov
mov
mov
push
call
mov
push
push
call
mov
pushl
push
call
mov
mov
push
call
mov
mov
push
sub
push
call
push
mov
push
call
mov
call
mov
call
mov
pushl
push
call
call
mov
mov
push
call
mov
mov
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
call
mov
mov
mov
pushl
pushl
call
mov
mov
add
push
mov
pushl
call
mov
mov
mov
call
mov
push
pushl
call
mov
mov
mov
push
call
push
mov
push
call
mov
call
mov
mov
push
mov
push
call
mov
mov
pushl
pushl
call
push
push
call
mov
mov
mov
push
push
call
mov
push
push
call
mov
mov
push
call
mov
subl
mov
mov
push
mov
pushl
call
mov
mov
push
mov
pushl
call
addl
mov
mov
push
add
push
call
mov
mov
mov
pushl
sub
push
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
push
mov
mov
push
call
mov
mov
push
call
mov
mov
call
mov
mov
push
push
call
mov
call
mov
mov
push
push
call
mov
call
mov
mov
push
push
call
mov
mov
mov
mov
push
push
call
mov
mov
push
sub
push
call
mov
push
call
mov
mov
call
mov
mov
pushl
pushl
call
mov
mov
push
call
addl
push
call
mov
mov
mov
push
add
push
call
or
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
call
mov
mov
push
call
mov
push
call
mov
call
mov
push
mov
push
call
or
mov
push
push
call
mov
mov
push
call
xor
push
mov
push
call
mov
mov
push
push
call
mov
mov
pushl
pushl
call
mov
mov
push
push
call
push
mov
pushl
call
mov
mov
mov
call
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
call
push
call
mov
call
call
mov
push
mov
push
call
push
call
xor
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
mov
push
push
call
push
call
mov
sub
push
call
mov
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
add
push
add
push
call
mov
mov
mov
push
call
mov
mov
push
push
call
sbb
call
mov
mov
pushl
mov
push
call
mov
mov
add
call
movl
mov
push
call
push
call
mov
mov
call
add
push
sub
push
call
mov
mov
mov
push
push
call
mov
push
push
call
mov
call
mov
mov
push
call
mov
push
call
mov
push
call
mov
call
mov
mov
mov
push
call
mov
mov
push
call
mov
call
pushl
pushl
call
mov
mov
pushl
push
call
mov
mov
push
call
mov
add
call
mov
mov
push
call
mov
mov
add
call
mov
mov
push
call
push
push
call
mov
mov
push
mov
push
call
call
sbb
call
mov
push
push
call
mov
mov
call
mov
push
mov
push
call
mov
mov
mov
push
mov
pushl
call
mov
call
mov
mov
push
push
call
mov
mov
xorl
push
call
mov
push
mov
mov
push
call
mov
call
mov
call
push
call
mov
adc
pushl
mov
pushl
call
mov
push
call
mov
mov
push
mov
push
call
mov
mov
pushl
push
call
mov
pushl
add
push
call
mov
call
mov
push
call
mov
mov
sub
push
push
call
mov
and
push
mov
sub
push
call
mov
push
call
mov
call
mov
mov
call
mov
mov
push
push
call
mov
call
mov
push
add
push
call
mov
mov
call
mov
mov
push
push
call
mov
mov
mov
push
mov
push
call
mov
mov
call
mov
push
mov
push
call
mov
mov
call
mov
call
push
mov
push
call
mov
push
call
mov
mov
call
mov
mov
push
mov
push
call
mov
mov
call
mov
call
mov
mov
push
mov
add
push
call
mov
mov
push
push
call
mov
push
call
mov
mov
push
call
mov
mov
push
push
call
call
xor
push
push
call
mov
andl
call
mov
sub
push
push
call
mov
xor
push
add
push
call
mov
push
push
call
sub
call
mov
call
mov
pushl
mov
push
call
mov
add
push
mov
push
call
mov
call
mov
mov
push
call
mov
push
call
mov
mov
mov
push
add
push
call
mov
mov
add
push
pushl
call
mov
mov
call
mov
pushl
mov
push
call
mov
push
call
mov
mov
push
mov
push
call
mov
call
mov
call
mov
mov
push
call
pushl
pushl
call
mov
call
mov
mov
mov
call
mov
mov
push
call
mov
mov
pushl
mov
push
call
sub
push
push
call
mov
call
mov
mov
push
pushl
call
mov
mov
mov
mov
push
sub
push
call
mov
push
call
mov
mov
push
pushl
call
mov
mov
mov
push
call
push
call
mov
mov
mov
call
mov
call
mov
push
call
mov
push
push
call
mov
mov
pushl
push
call
mov
mov
push
call
mov
push
sub
push
call
mov
push
mov
push
call
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
add
push
call
sbb
pushl
push
call
mov
mov
push
push
call
mov
mov
push
mov
pushl
call
mov
call
mov
call
mov
mov
call
mov
mov
push
call
mov
mov
mov
push
push
call
xor
mov
mov
push
mov
push
call
mov
mov
call
mov
mov
push
call
mov
mov
mov
push
pushl
call
and
call
mov
mov
push
call
mov
mov
mov
push
push
call
mov
add
push
mov
push
call
mov
pushl
push
call
mov
mov
push
call
mov
mov
call
mov
mov
mov
pushl
mov
push
call
mov
mov
push
call
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
call
mov
push
call
mov
mov
mov
mov
push
push
call
push
push
call
mov
push
mov
push
call
mov
mov
pushl
pushl
call
mov
mov
call
mov
mov
push
call
mov
mov
push
call
mov
call
mov
push
push
call
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
push
call
call
mov
mov
push
push
call
mov
mov
mov
push
call
mov
mov
push
sub
push
call
mov
mov
push
call
mov
push
call
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
pushl
pushl
call
mov
mov
push
call
mov
mov
push
pushl
call
mov
mov
call
mov
mov
mov
mov
push
add
push
call
mov
mov
mov
call
or
push
push
call
mov
mov
mov
push
pushl
call
add
mov
mov
pushl
push
call
mov
mov
mov
push
call
mov
pushl
push
call
mov
mov
push
mov
push
call
mov
push
mov
push
call
mov
mov
push
call
mov
mov
mov
push
call
call
mov
adc
push
pushl
call
mov
mov
push
call
mov
call
mov
call
mov
push
push
call
mov
push
pushl
call
mov
mov
push
mov
push
call
andl
push
or
push
call
mov
mov
mov
call
mov
mov
pushl
push
call
mov
mov
mov
call
mov
mov
push
call
call
mov
orl
call
mov
mov
call
mov
mov
call
mov
mov
sub
push
push
call
mov
mov
push
call
sbb
mov
push
push
call
mov
push
pushl
call
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
call
mov
call
mov
mov
push
mov
push
call
mov
mov
mov
call
mov
push
call
mov
push
mov
push
call
mov
mov
push
call
mov
call
mov
call
mov
mov
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
push
pushl
call
mov
mov
mov
call
mov
mov
push
push
call
mov
mov
mov
push
mov
push
call
mov
mov
call
mov
push
pushl
call
mov
mov
mov
mov
push
mov
push
call
mov
call
call
mov
call
mov
push
call
mov
mov
push
call
mov
mov
push
mov
push
call
mov
mov
pushl
push
call
mov
mov
mov
call
call
mov
call
mov
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
push
call
mov
mov
call
mov
mov
push
pushl
call
mov
mov
mov
push
call
mov
mov
mov
push
pushl
call
mov
push
call
mov
mov
sub
sub
test
jl
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
mov
sub
sbb
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
dec
jne
mov
mov
mov
pushl
mov
sub
push
call
mov
push
push
call
mov
push
call
mov
push
push
call
mov
and
push
call
mov
push
push
call
push
mov
push
call
mov
mov
pushl
mov
push
call
and
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
push
push
call
mov
push
call
call
mov
mov
mov
push
push
call
mov
call
mov
mov
mov
push
call
mov
pushl
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
mov
push
call
mov
mov
call
mov
mov
mov
call
mov
pushl
push
call
mov
mov
mov
push
pushl
call
sub
call
mov
mov
sub
push
push
call
mov
and
push
push
call
mov
mov
call
mov
mov
push
push
call
mov
push
mov
pushl
call
mov
mov
mov
push
call
mov
mov
push
push
call
push
call
push
call
mov
push
push
call
movl
push
mov
push
call
mov
mov
call
mov
pushl
push
call
mov
push
push
call
mov
push
call
push
push
call
push
mov
push
call
mov
call
mov
call
mov
mov
mov
push
mov
mov
push
call
mov
mov
push
mov
add
push
call
mov
mov
push
push
call
mov
call
mov
push
call
mov
mov
call
mov
mov
add
push
mov
push
call
mov
pushl
push
call
push
push
call
mov
push
call
mov
mov
mov
push
call
mov
call
mov
push
push
call
orl
add
push
mov
push
call
mov
mov
mov
push
call
mov
mov
call
mov
mov
push
call
mov
mov
push
call
mov
mov
push
mov
pushl
call
andl
mov
push
push
call
mov
adc
push
call
push
pushl
call
xor
mov
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
call
call
or
mov
push
call
mov
mov
mov
call
mov
push
call
call
mov
mov
push
push
call
mov
push
mov
push
call
mov
push
pushl
call
mov
mov
push
call
mov
mov
call
mov
push
sbb
push
call
mov
mov
push
mov
push
call
mov
push
push
call
mov
mov
push
push
call
mov
call
xor
mov
call
mov
push
call
mov
mov
call
mov
call
mov
mov
mov
call
mov
mov
push
push
call
mov
push
call
mov
push
call
mov
call
mov
mov
call
mov
push
call
mov
mov
pushl
mov
pushl
call
mov
mov
push
call
mov
mov
push
push
call
mov
mov
sub
push
push
call
mov
pushl
push
call
mov
mov
push
pushl
call
call
mov
mov
sub
push
pushl
call
mov
mov
push
call
push
call
mov
call
mov
push
push
call
push
mov
push
call
subl
mov
push
mov
push
call
mov
push
push
call
mov
mov
push
push
call
mov
call
mov
mov
pushl
mov
push
call
mov
mov
sub
push
pushl
call
mov
push
call
mov
mov
push
call
mov
mov
push
mov
pushl
call
mov
push
call
mov
call
mov
mov
mov
push
sub
push
call
mov
add
push
push
call
mov
mov
mov
mov
push
pushl
call
call
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
push
push
call
mov
push
push
call
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
adc
xor
mov
mov
inc
mov
cmp
jne
mov
mov
push
push
call
mov
mov
push
call
mov
mov
sub
push
mov
push
call
mov
call
call
mov
sbb
call
mov
mov
mov
mov
call
mov
subl
mov
call
subl
mov
mov
mov
mov
call
call
mov
mov
push
pushl
call
mov
mov
call
push
call
mov
mov
mov
call
mov
mov
pushl
push
call
mov
mov
call
mov
mov
push
call
mov
mov
call
push
call
call
mov
mov
mov
mov
call
mov
mov
call
mov
push
push
call
call
mov
mov
mov
call
mov
call
mov
mov
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
push
pushl
push
call
mov
mov
push
call
mov
mov
mov
ret
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
xorl
mov
pushl
push
pushl
call
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
sbb
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
mov
mov
mov
xor
push
call
mov
push
push
pushl
sub
push
call
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
call
mov
push
call
mov
mov
mov
mov
ret
int3
int3
push
mov
add
mov
add
push
push
call
mov
mov
orl
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
push
call
subl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pushl
push
call
mov
mov
mov
mov
mov
pop
ret
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
orl
mov
push
push
add
push
mov
pushl
call
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
adc
mov
push
mov
push
push
push
call
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
pushl
pushl
push
call
push
mov
pushl
push
mov
push
call
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
ret
cmp
add
and
and
imul
rcl
lcall
add
out
xchg
call
push
test
call
dec
movsb
mov
imul
dec
push
popf
imul
enter
inc
cmp
std
out
popa
jle
addb
out
jecxz
call
adc
add
pop
pop
mov
shl
std
jo
test
in
or
imul
adc
ja
rorl
hlt
jae
push
or
xor
xor
inc
loope
pop
mov
rol
popa
push
and
loopne
data16
jg
std
and
push
mov
inc
add
imul
xchg
int3
sahf
lea
icebp
aad
fildll
mov
sbbb
and
push
roll
scas
aad
sti
out
outsb
xchg
insl
scas
dec
in
xchg
out
dec
jno
lret
and
jae
lret
dec
mov
daa
push
dec
pop
call
adc
repz
jecxz
dec
add
mov
lods
dec
mov
jne
add
and
mov
inc
push
rolb
jmp
push
mov
sbb
push
mov
add
stos
sbb
testb
std
and
cmp
push
std
and
dec
add
call
and
std
out
or
pop
ljmp
in
arpl
sub
mov
jb
cmp
std
and
addl
out
outsb
std
insb
and
jge
add
call
and
call
cmp
dec
pop
call
cmp
std
and
call
jp
dec
xchg
dec
inc
and
add
adc
mov
out
dec
out
out
inc
std
sbb
mov
imul
mov
inc
js
mov
add
mov
dec
pop
inc
fisttpl
in
adc
push
fistl
mov
mov
dec
lock
push
jmp
call
add
cmp
jnp
push
nop
add
xchg
sub
out
loope
insl
movsb
add
addr16
jle
jl
fisttpll
icebp
cmpsb
into
sbb
jae
xchg
addr16
jmp
and
repnz
pusha
lods
dec
test
push
add
out
test
loopne
inc
and
xor
int
pop
aad
jmp
dec
cmp
icebp
int
in
cmp
and
lods
fbstp
dec
add
adc
cmc
movsl
dec
pop
out
roll
testb
dec
call
add
std
and
sub
cmp
lret
leave
pop
call
push
add
mov
and
push
add
xchg
push
add
jecxz
jecxz
push
sbb
or
push
mov
std
addr16
insb
repz
add
call
and
and
dec
add
out
out
std
addr16
dec
stos
xor
mov
out
mov
cmp
dec
pop
jmp
dec
add
push
dec
pop
call
jecxz
inc
outsb
and
call
es
lcall
fbld
mov
in
ficoml
loopne
inc
dec
cltd
loope
jo
dec
add
movsb
add
add
or
fisubrs
pushf
and
push
add
xchg
push
pop
mov
dec
add
int3
add
xchg
out
hlt
mov
and
mov
dec
add
call
jno
pusha
lods
dec
test
push
add
out
test
loopne
inc
and
xor
int
pop
aad
jmp
fisttpl
aaa
movsl
cmp
pop
add
cmp
sahf
sbb
cmp
popl
mov
adc
test
and
and
call
push
add
addr16
pop
call
sub
push
call
adc
or
dec
pop
cmp
add
out
sar
and
inc
adc
loopne
sbb
push
dec
add
call
push
cmp
push
add
imul
lahf
and
sahf
fbld
add
push
inc
dec
pop
call
fisubrl
and
dec
add
call
and
inc
call
push
add
fbld
out
sub
mov
dec
xlat
call
pop
sbb
jle
xchg
std
dec
push
cs
xchg
pop
lcall
mov
insl
call
and
pop
fiaddl
and
jbe
shlb
scas
push
lea
jmp
dec
dec
pop
out
lea
push
ret
fildll
sbb
call
fildl
mov
jmp
test
aam
mov
push
add
insl
test
cld
out
xor
icebp
cmpsb
pushw
out
add
fildll
lret
pop
dec
pop
add
imul
jge
add
out
rorb
out
add
ljmp
mov
or
std
addr16
adc
push
fsin
mov
adc
jne
add
sub
dec
push
inc
push
repz
add
cmp
int3
mov
push
adc
or
pop
push
imul
sarl
std
out
xchg
push
gs
sti
call
and
call
dec
add
and
fistl
std
out
add
xchg
and
call
pop
ret
jae
cmp
fdivs
pop
inc
push
sbb
or
xchg
add
addr16
dec
pop
testb
call
fimull
call
dec
mov
mov
cmp
mov
lea
dec
pop
call
dec
add
jmp
push
add
cld
dec
add
or
sub
std
out
or
push
inc
aam
push
push
add
addr16
scas
call
pop
add
push
es
out
mov
and
cmp
out
pushf
call
inc
iret
call
in
fidivrl
jnp,pn
jo
push
add
out
and
and
je
mov
and
call
ss
and
test
les
pop
scas
xlat
or
dec
add
adc
aam
dec
add
jno
xchg
sub
dec
and
cwtl
pop
hlt
aas
and
cld
out
mov
and
scas
cmp
or
std
and
fildll
jmp
jmp
movsb
stc
adc
mov
in
mov
fldcw
out
pop
fsub
inc
repz
ja
and
ja
or
dec
pusha
mov
inc
insl
movsl
int3
mov
push
scas
imul
xchg
frstor
cmp
sub
pop
inc
lock
mov
test
add
push
pop
lret
xor
subl
out
lods
out
dec
cmpsb
insb
test
mov
pusha
jle
and
xchg
dec
add
dec
add
out
int
dec
into
pop
mov
ds
out
shrb
push
insb
addr16
push
jle
scas
lret
ss
out
lret
pop
cmpsl
lcall
aad
repz
fs
and
shlb
mov
pop
dec
inc
push
mov
add
fs
mov
lret
mov
fsincos
insl
pusha
clc
stc
insl
lahf
mov
mov
sub
inc
jne
and
add
icebp
sbb
push
in
sub
or
aam
jp
mov
das
sti
imul
inc
int3
imul
push
sbb
dec
das
sbbb
mov
scas
stc
jle
in
into
jle
movsl
and
mov
pop
mov
pop
sub
dec
pop
mov
mov
insb
pop
ss
std
mov
jp
mov
inc
jo
jl,pn
fsubp
hlt
fucom
push
jne
fs
mov
mov
sbb
dec
inc
std
and
call
dec
add
pushf
inc
adc
call
pop
outsb
stos
neg
jns
sbb
mov
jmp
or
cmp
into
outsb
call
fstpt
stos
jge
add
out
fsin
xor
add
test
les
loopne
jbe
push
movsl
inc
and
and
sbb
sub
lock
fsubr
cmp
sub
sbb
addr16
jecxz
scas
lea
pop
repz
add
add
in
subl
std
and
adc
std
out
test
and
mov
mov
adcb
jmp
call
push
dec
pop
call
pusha
ljmp
pop
test
out
add
stc
jmp
out
add
mull
dec
pop
adc
adc
dec
mov
pop
std
out
scas
mov
outsl
push
add
clc
sbb
inc
push
adc
add
addr16
pop
call
rorl
std
and
call
shlb
std
addr16
sbb
pop
test
call
mov
aad
mov
and
ret
add
dec
add
sub
outsl
cmp
dec
adc
mov
add
cmp
iret
and
dec
add
sub
popa
sarb
add
out
lret
in
and
not
lock
out
pop
repz
out
mov
hlt
cmp
pop
fimull
cs
cli
std
fldt
xchg
call
or
divb
dec
mov
in
cmc
out
out
mov
jmp
dec
mov
lock
cmp
dec
add
test
repnz
ret
test
fidivl
subb
aad
jae
pop
cld
out
add
cltd
loope
pop
cwtl
or
cld
jno
bound
imul
fildl
lods
mov
or
or
std
addr16
stos
aaa
pusha
mov
repz
rcll
fdivr
adcb
push
jae
push
cld
out
add
mov
in
add
pop
addr16
movsl
cld
mov
and
popf
mov
sbb
call
push
add
out
dec
mov
cmpsl
dec
add
out
inc
or
fiaddl
sub
xor
cld
aas
fisttpl
addr16
dec
mov
jmp
add
into
in
fdivs
mov
ror
add
imul
and
out
add
das
xor
dec
add
add
insb
pop
mov
lret
or
cli
and
or
add
jmp
xchg
sbb
sarb
add
sub
call
dec
mov
push
or
fmul
jmp
cmp
dec
lret
imul
call
add
add
dec
add
add
add
cmp
add
add
add
add
push
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
xor
push
add
add
add
imul
add
xor
add
outsb
add
add
inc
add
jb
cmp
add
add
push
add
add
imul
add
add
add
add
push
add
add
add
add
add
cmp
add
xor
add
jbe
dec
add
inc
push
add
add
xor
add
pop
add
add
inc
add
add
add
add
insl
add
add
inc
add
add
add
add
pop
outsb
add
add
add
jbe
imul
add
add
add
add
add
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
js
add
push
add
add
dec
add
add
jne
add
add
add
dec
add
add
add
add
add
inc
add
add
add
add
dec
jno
add
add
add
add
add
add
add
push
add
jbe
add
add
add
xor
add
add
add
jo
add
add
xor
add
add
push
jp
add
add
add
add
add
add
pop
add
push
add
add
jb
add
add
add
add
add
dec
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
dec
je
add
add
add
add
add
insl
add
dec
add
add
add
add
add
push
add
add
add
jbe
add
add
add
add
add
dec
add
xor
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
call
test
xchg
jae
mov
es
xor
sbb
xchg
stos
jp
ds
lock
divl
jmp
movsb
xchg
add
cld
lods
test
lods
jo
iret
mov
enter
or
shll
test
sbb
int
lcall
decb
jmp
addr16
jecxz
jnp
mov
movl
jmp
stos
mov
mov
scas
bound
scas
mov
lds
cmp
out
rcll
out
cmp
into
je
out
call
nop
pop
push
push
pop
cli
ja
or
stc
stos
stos
push
add
jge
dec
ret
icebp
and
roll
cmpsl
ret
in
pop
mov
and
inc
lret
xor
mov
jb
test
and
cltd
mov
lea
pop
cmp
jnp
dec
sub
in
popf
inc
and
iret
xorl
scas
pop
test
out
data16
lods
xor
or
test
js
inc
in
add
add
sub
xchg
or
ret
sub
imul
in
out
push
adc
jmp
or
mov
xorl
xor
push
sbb
mov
push
push
xchg
scas
push
push
idivb
enter
pop
mov
out
xchg
jl
icebp
gs
mulb
mov
sbb
into
mov
bound
pop
inc
aas
cmp
jg
adc
mov
hlt
mov
dec
dec
imull
mov
lcall
cli
xchg
cmp
enter
lret
int3
or
sti
les
ror
inc
mull
sub
inc
sbb
push
stos
les
stc
mov
mov
mov
or
enter
cmpb
pop
xor
add
cmpb
sub
andl
xor
in
mov
push
inc
not
add
sub
dec
outsl
pusha
add
mov
jmp
cmpl
cli
cmpb
jp
jne
pop
sbb
rorb
mov
add
aam
xor
je
inc
jo
icebp
push
mov
adcb
dec
push
out
pop
stc
pop
xchg
in
stc
cmp
push
test
lock
xlat
jb
sbb
dec
mov
adc
ret
mov
pop
xadd
scas
push
pop
mov
loop
ret
adc
sub
nop
jl
push
jle
das
dec
inc
arpl
call
push
iret
xor
mov
clc
pop
int
xor
cmc
xchg
ja
pop
add
sub
fldcw
push
dec
shl
xorb
xchg
add
in
pop
jne
and
cmp
fmulp
push
scas
test
scas
test
scas
sbb
mov
inc
pushf
jge
call
mov
mov
mov
fiadds
addr16
xorb
xchg
lcall
lock
pop
jmp
mov
dec
in
add
push
push
call
dec
jg
jg
mov
call
and
loopne
lahf
rolb
shll
out
mov
andl
mov
bound
xchg
jno
sti
jle
pop
imul
lahf
lahf
scas
adc
ja
push
lea
bound
test
mov
lret
adc
add
mov
jnp
push
push
adc
insl
leave
mov
add
and
cmpsl
mov
outsl
mov
call
add
mov
loope
adc
jmp
test
lahf
cmpsb
cmp
jmp
addr16
mov
hlt
call
adc
cld
pop
into
lcall
pushf
jnp
outsl
ds
leave
mov
fbstp
push
in
lock
push
lea
mov
adc
xorl
mov
into
mov
into
shll
aas
push
aas
push
pop
pop
push
jb
clc
in
in
adc
push
mov
jbe
xor
lock
test
rcrl
mov
daa
add
jle
aas
and
leave
pop
mov
testb
add
mov
adc
mov
sbb
cmp
mov
sub
inc
fidivs
xchg
sub
test
and
outsb
leave
xor
or
add
out
aad
add
add
push
sub
shrl
and
lods
retw
in
pop
inc
jg
jbe
push
mov
clc
xchg
mov
xchg
int3
fstpl
add
imul
cwtl
sahf
xlat
dec
stc
mov
pop
jg
xchg
rcl
cmp
fisubs
add
shll
mov
mov
int
mov
xchg
dec
mov
test
sahf
jo
mov
add
iret
xchg
mov
sbb
xchg
cmp
movsl
jp
or
movsl
dec
add
call
negl
mov
bound
lods
mov
cmpsl
iretw
mov
lret
mov
mov
fnsave
push
xor
dec
iret
imul
aam
clc
sub
int
inc
xor
and
lods
sub
shll
leave
rcll
ja
je
test
enter
movsl
pop
pop
mov
inc
mov
jg
push
iret
push
jmp
mov
aaa
cmpsl
or
ret
add
loopne
test
inc
jbe
fsubs
fdivr
cmp
mov
adc
aam
cld
dec
dec
loope
mov
lcall
fs
mov
arpl
sbb
push
sbb
js
pop
push
subb
xchg
fmull
mov
push
test
scas
jg
mov
mulb
ret
lods
sti
dec
imul
mov
mov
rorb
inc
les
pop
call
mov
xchg
push
pop
aaa
sub
jnp
push
addr16
std
cmpsb
xchg
mov
call
cmp
dec
mov
mov
cmpb
test
sarb
into
or
add
ds
outsl
or
jb
icebp
mov
lcall
mov
lods
rcrb
sub
rcl
addl
xor
lds
xor
mov
mov
leave
dec
addr16
lock
into
sbbb
cmc
cmp
and
clc
in
sbb
cli
add
lret
mov
pop
or
jl
in
movsb
inc
push
inc
mov
cli
arpl
loopne
sub
xlat
and
outsl
jmp
xchg
add
and
leave
mov
sub
xorl
sbb
inc
cmp
dec
pop
out
jge
in
cltd
mov
out
lea
pop
sub
test
jo
dec
sti
mov
pop
push
out
pushl
mov
push
push
icebp
dec
aaa
ret
jno
xchg
inc
fcmovne
jmp
mov
mov
bound
negb
and
mov
mov
mov
sbb
subb
mov
in
les
lcall
xor
outsl
push
sbb
mov
sub
inc
xchg
fbstp
inc
stc
pop
lods
jo
inc
loopne
ret
sbb
call
movzbl
pop
jno
mov
mov
sub
mov
cmp
add
ror
sbb
std
mov
or
jae
dec
iret
sub
ds
xorb
ret
cmp
sub
xor
mov
xchg
popf
imul
dec
xor
xor
ret
iret
addr16
and
test
cmpb
aaa
cmpsb
iret
loop
xlat
mov
pop
or
lret
jl
into
inc
pop
inc
incb
pop
dec
loopne
fs
inc
cmpsb
adc
push
cmp
jle
cmp
je
adc
call
dec
jmp
push
jbe
test
sub
pop
cmpsl
cmp
cmp
or
xor
xchg
xchg
je
repz
push
addr16
inc
xor
jge
jne
ljmp
je
pop
adc
dec
xlat
lock
fldl
mov
int3
cltd
scas
add
jb
jo
jno
in
push
icebp
es
push
test
stc
fcompl
nop
repz
cmc
mov
data16
cmpsl
mov
jge
lret
mov
add
int
fdivrs
adc
std
adc
test
cli
ss
imul
pop
cltd
idiv
mov
bound
add
mov
dec
push
loop
ljmp
xor
jp
sbbl
idivb
leave
leave
mov
rcrw
cmp
sbb
jb
add
ffreep
adc
jmp
divb
dec
in
and
pop
and
out
sub
push
dec
add
xor
or
jmp
in
addb
jne
adc
adc
out
repnz
add
add
lret
push
mov
push
lret
popa
mov
pop
mov
inc
stos
add
lds
push
dec
add
rcrb
mov
movsl
les
stos
cmp
pop
sti
add
shll
adc
lret
jo
jecxz
into
in
cli
mov
shlb
daa
sbb
rcl
leave
hlt
fs
cli
fcomip
sub
sbb
fsubs
nop
jb
and
js
fs
in
ret
rorb
inc
adc
add
add
pop
ja
repnz
or
pop
add
xchg
loopne
iret
mov
cmp
xor
add
loope
fdivr
out
outsb
stos
xorl
fs
cmpsl
cs
int
jne
and
sub
loop
ret
push
lret
ret
sub
fsubs
stc
filds
das
or
out
push
sub
push
into
int
adc
lods
mov
inc
roll
inc
adc
and
mov
pushw
fwait
je
mov
lret
add
mov
ret
adc
xchg
and
je
mov
adc
push
xchg
jnp
pop
push
and
loopne,pt
mov
je
roll
push
ljmp
mov
mov
ret
mov
in
push
lock
popa
pop
mov
pop
loope
ret
add
aam
into
loop
iret
lea
pop
jmp
sub
add
sbb
andl
jg
cmp
incl
inc
dec
ljmp
and
fiadds
cmp
jg
in
cmp
out
ficoml
xor
push
adcl
call
lea
sub
adc
xchg
ja
mov
hlt
or
xchg
add
mov
adc
xor
jmp
sub
imul
push
std
sti
push
mov
jae
aas
cmp
sbb
sarb
scas
sahf
lahf
jp
std
js
rcr
loop
iret
nop
mov
test
mov
sar
iret
aam
lock
sti
or
leave
sbb
and
bound
iret
mov
loopne
and
bound
mov
clc
arpl
xor
loop
stc
push
iret
push
leave
movsb
scas
mov
in
clc
enter
mov
xor
inc
jp
leave
insb
scas
js
bound
fdivrl
mov
leave
and
cmp
push
mov
fsubrl
and
stc
dec
iret
mov
mov
aam
fmul
lock
add
jecxz
push
das
cmp
stc
pop
iret
push
leave
xchg
scas
lods
shlb
in
jecxz
cli
adc
and
stc
pop
iret
jo
test
leave
mov
lock
lock
lcall
jp
leave
pusha
scas
insb
js
mov
nop
iret
pushf
mov
mov
fdivr
in
iret
cld
scas
or
jecxz
jp
leave
cmp
stc
push
jp
leave
mov
stc
lods
iret
mov
leave
fsubrl
cli
add
jmp
sub
leave
push
scas
pusha
js
mov
movsb
iret
mov
leave
hlt
lret
or
scas
and
jo
mov
jp
sti
sbb
leave
xor
stc
test
pushf
mov
or
leave
and
cmp
bound
or
mov
shrb
hlt
pop
std
push
loop
or
adc
sbb
and
bound
inc
iret
dec
mov
pusha
scas
push
mov
pushf
mov
fsubrl
cli
add
pop
sub
sub
inc
mov
test
stc
cld
cli
or
adc
stc
sub
xor
dec
scas
push
mov
stc
aam
cld
lods
sub
mov
mov
mov
fdivr
in
hlt
mov
loop
mov
js
lods
mov
mov
mov
cli
sbb
and
stc
cmp
inc
mov
insb
scas
je
bound
in
jp
sti
or
lds
jb
loop
insl
call
aaa
loop
sti
arpl
imulb
sub
sbb
pop
and
cmp
nop
mov
jnp
adc
dec
cwtl
ds
addl
shll
fdivr
mov
cwtl
hlt
ret
shrl
jmp
and
mov
mov
stos
xlat
inc
dec
mov
cld
jp
pop
loope
mov
mov
add
sarb
pop
cmp
mov
push
leave
ret
scas
add
data16
add
jne
pop
add
add
add
add
inc
add
add
dec
jno
add
add
aaa
add
add
add
add
add
jno
add
add
add
add
dec
insl
add
aaa
add
add
add
add
add
add
add
push
add
add
add
add
add
add
dec
xor
add
insb
add
add
add
bound
add
imul
add
insl
add
add
imul
cmp
add
add
push
add
push
add
add
add
add
add
add
add
add
add
add
push
add
bound
add
inc
add
add
add
add
push
add
add
js
cmp
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
xor
add
add
xor
add
cmp
add
add
add
add
xor
add
add
add
jae
add
add
add
add
inc
add
dec
add
jo
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
add
push
add
add
add
data16
add
add
add
je
add
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
imul
add
add
add
inc
add
cmp
add
add
add
add
add
dec
add
xor
add
data16
add
aaa
jne
add
add
jns
add
add
add
add
outsl
jb
add
add
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
push
push
add
add
add
add
arpl
add
add
add
inc
add
add
add
add
add
add
dec
add
add
add
outsl
add
add
add
add
add
add
add
add
jge
fsubs
jmp
stc
or
dec
call
push
push
push
dec
inc
push
loopne
pop
out
insb
cwtl
adc
cmp
and
add
and
push
imul
rorl
test
jecxz
xor
orl
dec
repz
je
cmpsl
call
cmp
xchg
popl
ret
push
dec
jg
fdivs
inc
push
xchg
mov
es
stc
stos
cmp
jp
xchg
mov
movsb
inc
pop
clc
mov
mov
repz
jne
out
pop
outsl
out
lods
mov
xchg
sub
sub
je
sub
fnsave
incb
push
jno
mov
int3
add
push
leave
call
adc
lods
mov
cmp
shrb
jmp
mov
mov
lods
test
out
xor
add
jmp
lds
call
ljmp
add
xor
call
and
sub
inc
lods
dec
loopne
orl
outsl
jb
jmp
or
icebp
out
out
cmp
frstor
and
lret
or
push
lods
enter
mov
or
xchg
ret
sahf
int3
popf
mov
ret
orb
in
xor
or
fbld
and
sub
dec
add
push
and
imull
push
imul
or
xor
cli
pushf
jge
lret
sub
inc
rcl
push
nop
lahf
inc
and
loopne
in
test
cld
push
xor
shlb
in
loope
jl
nopl
add
xor
lods
faddl
adc
cmp
test
mov
inc
cmp
outsb
aas
push
in
add
cmp
and
es
dec
out
addr16
into
loopne
loop
call
pop
xchg
mov
dec
loopne
mov
imul
outsl
mov
adc
push
jle
add
cmpsl
mov
mov
aam
insl
dec
xchg
jnp
arpl
das
dec
fisubl
jle
mov
stc
pop
into
test
add
cwtl
iret
mov
cltd
rorb
icebp
jp
hlt
push
mov
jle
cmp
in
pop
and
lds
shrb
idivl
in
outsl
jp
insb
cmp
push
insb
mov
insb
es
pop
gs
rorb
pop
jbe
les
add
sbb
fucomi
arpl
add
pop
or
inc
or
icebp
outsl
and
sbb
les
enter
jbe
lods
dec
push
push
stc
mov
push
call
lcall
pop
mov
xchg
lahf
gs
sub
mov
mov
mov
inc
out
sbb
fwait
ljmp
xchg
lock
popa
sti
dec
jns
sbb
pop
in
jnp
push
lds
pop
and
dec
jo
test
shrb
fsubr
ds
push
insl
dec
fldenv
mov
dec
push
mov
movsl
popa
inc
stos
insb
sbb
push
push
call
push
leave
ds
movsb
test
and
sti
push
push
shr
or
push
mov
arpl
jmp
push
xchg
mov
push
pop
mov
aam
into
inc
imull
lcall
lds
sti
les
icebp
pop
cmp
imul
cwtl
imul
repnz
push
mov
dec
push
lcall
adcb
inc
fsubrl
push
mov
or
mov
jb
xor
shlb
aaa
movsl
hlt
popa
mov
xor
loopne
and
in
cmp
call
fsub
popa
cmp
call
and
mov
sbb
popf
jne
imul
divl
ffreep
std
push
push
scas
imul
adc
push
bound
mov
or
sub
jne
dec
js
arpl
sbb
lods
lods
arpl
sti
jl
pop
insl
and
icebp
mov
popa
pusha
and
xor
lock
push
call
lock
mov
xor
jl
cmp
jg
and
cmpb
inc
jb
push
jmp
mov
jp
testl
cltd
pop
mov
or
pop
lret
adc
std
pop
and
inc
add
add
add
push
inc
add
add
add
add
add
add
add
add
add
xor
add
dec
inc
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
dec
add
add
add
xor
add
add
add
add
add
add
add
jae
add
add
pop
add
jp
add
add
add
add
add
add
outsb
je
add
add
dec
pop
add
push
add
add
add
imul
add
add
add
inc
insb
add
add
add
push
add
add
add
add
add
push
add
popa
add
add
add
add
add
pop
add
add
add
add
add
add
add
dec
jo
pop
add
add
add
add
pop
add
add
add
cmp
dec
add
inc
add
inc
add
add
insb
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
dec
inc
dec
add
add
add
add
add
add
push
add
add
add
xor
inc
add
add
xor
add
add
add
add
add
push
add
add
add
arpl
ja
add
add
add
add
push
add
add
data16
add
add
add
add
outsb
add
inc
add
add
add
xor
add
add
add
add
lock
in
in
pop
leave
fdivrp
pop
xor
mov
mov
insl
mov
movb
jne
jbe
cmc
mov
jns
jo
aam
rorl
jmp
adc
cmp
or
dec
scas
mov
mov
leave
ds
in
popa
mov
fldcw
push
xchg
add
xor
icebp
pushf
es
and
stc
js
cmp
add
jmp
add
stos
or
lcall
mov
lret
mov
or
sbb
data16
or
aas
gs
mov
mov
ret
sbb
es
int3
pop
add
add
or
cmp
xor
aad
xchg
jno
enter
insb
mov
mov
idivl
outsl
test
arpl
leave
imul
sbb
adc
outsb
inc
idivb
movl
ret
testb
icebp
xchg
jns
mov
sbb
hlt
lods
jo
ja
lcall
jmp
inc
pop
arpl
and
outsl
jo
mov
add
je
cmp
adc
enter
xor
and
call
push
leave
les
dec
stos
add
bound
push
or
sbb
xor
jp
dec
xor
sub
out
dec
icebp
pushf
xchg
sub
loop
jne
xor
rorb
push
jg
test
rcr
mov
int3
mov
nop
push
les
pop
jge
pushf
add
out
xchg
mov
jne
jl
cs
lock
mov
fs
int3
dec
mov
mov
jecxz
lret
jmp
mov
in
test
lds
pop
stc
add
fists
jo
pusha
sar
in
mov
cmp
call
fdiv
sbb
mov
daa
fiaddl
fwait
add
xchg
repz
iret
cmovno
adc
addr16
add
add
int3
or
lock
and
cli
scas
and
inc
daa
sahf
dec
sbb
lret
or
or
sub
cltd
shl
test
dec
stc
or
mov
lcall
addr16
cmp
jb
mov
loope
xor
insb
bound
sbb
mov
cmp
das
test
and
mov
ljmp
sarl
mov
in
add
int3
lods
cmpsl
sbb
push
adc
roll
mov
mov
arpl
dec
shll
add
push
inc
scas
lock
imul
jno
in
gs
or
mov
lret
inc
mov
iret
mov
dec
outsb
mov
and
sub
call
xchg
inc
cmp
jne
push
call
jecxz
mov
xchg
and
dec
das
stos
je
xor
pop
pop
adc
push
mov
scas
sub
rorb
pop
std
testb
clc
cli
add
xor
repnz
inc
jecxz
mov
cwtl
dec
adc
je
jns
dec
sbb
lea
lock
ret
stos
mov
add
xchg
insb
push
mov
cmp
adc
pop
loopne
std
or
dec
jbe
mov
cmpsb
dec
outsb
movl
dec
inc
jbe
dec
cmpb
xor
in
pop
cwtl
mov
xor
stc
fmull
push
rorl
test
inc
test
cmpsb
mov
cwtl
jecxz
add
test
mov
or
inc
lret
push
pop
pop
xor
jmp
push
dec
or
inc
jg
shll
cmp
pop
push
in
cmc
add
pop
rcrl
lods
dec
mov
add
xchg
hlt
sti
mov
mov
loopne
push
sbb
out
popa
fnstcw
cld
sti
aaa
adc
outsl
test
or
xchg
add
add
adc
sub
mov
mov
jg
sbb
fsubs
out
lods
nop
pop
xchg
int3
into
and
out
insl
push
xor
fsubrl
loop
push
repnz
or
and
aas
dec
aad
lret
mov
pop
loope
cmp
fists
push
cwtl
into
lea
sub
test
in
sub
or
dec
loope
das
xor
lret
jnp
and
dec
cmp
lahf
outsb
mov
fsubl
insb
std
orl
push
add
add
dec
jbe
push
add
push
dec
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
push
add
add
add
add
add
data16
push
add
add
add
dec
inc
add
xor
add
add
pop
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
popa
jo
add
add
add
outsb
add
dec
jb
add
add
cmp
add
data16
add
js
add
outsl
insl
add
add
add
add
add
dec
add
add
add
add
ja
add
outsl
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
dec
jo
add
add
jb
inc
add
popa
add
add
add
add
add
add
add
add
insb
add
add
add
xor
inc
add
pop
pop
add
add
add
add
add
add
add
push
xor
add
add
add
popa
dec
add
pop
add
jb
bound
add
push
add
add
add
add
add
add
outsl
add
add
add
add
add
xor
add
add
add
add
add
xor
add
xor
pop
inc
add
pop
mov
fwait
pop
xchg
insb
push
or
scas
sbb
sbb
rolb
add
in
push
outsl
or
jmp
cltd
push
add
cli
adc
xchg
mov
loop
xchg
out
loop
push
mov
movsb
add
pop
divb
les
mov
jmp
loopne
mov
insb
cli
xor
into
fcoml
popa
fmull
add
mov
rcrb
mov
mov
scas
int3
test
fmull
sub
mov
in
sbb
mov
xchg
sbb
in
inc
jge
loopne
adc
mov
aas
out
imul
cld
add
adc
cmc
add
in
andl
or
cltd
les
popf
jl
or
insl
insl
mov
in
or
divb
out
test
pop
popf
imull
rorl
lcall
inc
and
push
mov
mov
inc
and
mov
mov
xchg
lods
sbbl
sbb
mov
xor
andl
mov
adc
jnp
add
inc
xor
mov
cmpl
je
iret
fdivrs
cld
or
in
adc
pushl
jle
push
mov
mov
mov
sbb
rcl
mov
dec
lock
jmp
cmp
hlt
je
push
cmpsl
stc
lea
out
push
mov
mov
ret
sub
jne
pop
cmp
mov
jb
pop
add
and
mov
into
pop
movsl
je
pop
movlps
stc
shll
jb
mov
adc
or
mov
icebp
jl
mov
lods
push
out
and
sub
data16
je
repnz
push
sbb
push
ja
ja
ret
jb
cli
test
adc
insl
aaa
or
shlb
mov
je
xchg
das
mov
dec
mov
popf
jnp
jecxz
lret
test
add
je
cmp
shlb
js
scas
in
aam
inc
sti
push
inc
imul
cmp
ja
jb
test
adc
inc
add
mov
iret
jae
inc
icebp
pop
out
pop
insl
in
pop
mov
cld
andb
sbb
cmp
leave
orl
fsts
push
lods
std
dec
lods
mov
mov
or
lock
enter
call
jmp
movsl
or
fst
push
fcoml
adc
test
or
pusha
scas
inc
call
and
xor
stc
arpl
mov
loopne
add
add
adc
and
call
jo
dec
cmp
stos
jecxz
pop
xchg
lock
dec
xlat
cmp
movsb
cmp
push
imul
addl
cmpsl
pushf
push
test
xchg
repnz
in
dec
pusha
stc
jmp
sti
lock
dec
stos
jno
xor
jmp
stc
cmp
mov
or
call
push
loop
fsubrp
push
je
adc
cmp
cmp
jo
sbb
jecxz
push
clc
jp
fs
jnp
dec
xor
cmp
je
sti
sbb
mov
pop
jl
sub
js
test
lcall
lds
repnz
repz
jne
push
mov
out
hlt
push
je
inc
testl
and
ss
cmp
in
jmp
mov
fsubrs
outsb
fld
push
jp
dec
lods
lret
push
stc
jmp
and
out
mov
sti
icebp
lret
call
frstor
xor
stos
in
stc
lret
and
mov
add
cmp
cmpsl
aam
dec
stos
loope
add
cltd
aad
les
mov
add
adcl
adc
cmp
loopne
dec
cmp
inc
mov
cmpsl
adc
mov
xor
cmp
push
pop
dec
dec
push
xor
lea
inc
out
cli
dec
ljmp
insb
jl
ret
xlat
bound
jo
fildl
jb
push
sub
sbb
test
ret
stos
push
movl
push
push
cmp
out
push
mov
cmp
dec
add
das
repz
je
sbb
fwait
call
pop
fstpl
mov
pop
aas
mov
fiaddl
pop
or
dec
jl
pop
mov
insl
cmp
fnstcw
sbb
arpl
fisubl
xorl
in
mov
movsb
cwtl
jns
adc
incl
test
sub
and
test
add
add
add
add
add
add
inc
push
add
ja
add
xor
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
jo
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
cmp
add
add
add
push
add
add
add
inc
add
add
add
add
add
add
dec
xor
add
add
add
cmp
add
add
add
add
insl
add
inc
add
push
add
add
add
add
outsb
add
add
add
add
add
xor
add
add
add
imul
add
inc
add
add
push
add
add
add
add
add
add
dec
add
add
add
add
pop
add
add
push
pop
xor
xor
add
inc
add
add
add
add
add
push
add
cmp
add
add
add
add
add
jp
add
pop
add
add
add
add
add
cmp
add
xor
add
jne
add
add
add
add
add
inc
jbe
add
ja
dec
add
add
dec
add
add
add
inc
ja
pop
add
add
add
push
add
add
add
dec
add
add
add
add
add
add
push
jo
add
add
add
add
add
je
add
add
add
add
dec
add
add
jbe
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
insb
bound
add
add
add
add
add
dec
add
add
add
add
add
add
data16
add
dec
add
add
add
add
add
add
add
add
inc
insb
add
add
add
push
add
popa
add
add
add
add
jbe
add
add
add
add
add
insb
dec
add
add
add
add
add
add
in
insl
add
bnd
mov
inc
outsb
lcall
push
jecxz
add
mov
in
add
cmpsl
push
stc
add
jecxz
jmp
out
adc
and
add
dec
fisttps
sar
addb
and
in
pop
mov
in
sub
mov
jo
sti
dec
add
xor
movsl
inc
js
hlt
inc
divl
or
fiadds
xor
incb
pop
in
call
popa
je
mov
push
pop
mov
inc
in
cs
insl
scas
or
sarb
or
fwait
arpl
pop
pop
and
sub
sbb
jmp
inc
call
popa
inc
imul
mov
js
cli
jl
pop
ret
push
mov
icebp
fpatan
mov
gs
xchg
mov
xor
mov
and
fistl
jns
call
pop
sbb
pop
cltd
lret
les
mov
sbb
enter
and
mov
xor
mov
cmp
and
xchg
cwtl
out
insl
test
lret
mov
fldcw
test
jo
test
lret
mov
mov
mov
mov
and
repnz
int3
out
insl
push
out
insl
scas
aam
nop
adc
loopne
fsubs
shll
sbb
and
test
cmp
inc
scas
dec
leave
push
cli
pop
jecxz
outsl
test
push
out
loope
mov
test
arpl
cmp
adc
lret
les
scas
aam
fdivr
in
dec
call
mov
mov
jle
out
test
or
in
adc
lock
hlt
insl
test
lret
sub
cld
xor
out
aaa
leave
cmp
add
inc
insl
test
lret
or
push
adc
pop
repnz
pusha
insl
test
lret
sbb
jo
and
xor
out
insl
test
lret
sub
mov
repnz
mov
test
lret
cmp
mov
les
test
jecxz
outsl
test
cmp
inc
scas
dec
leave
push
cli
pop
loop
cli
insb
jecxz
popa
xor
je
aam
xchg
outsl
adc
adc
leave
lods
cli
mov
mov
loopne
scas
mov
cli
int3
mov
inc
fsts
dec
mov
out
insl
test
lret
push
and
pop
fsubr
gs
pop
repnz
pusha
insl
test
lret
sbb
push
repnz
jo
test
lret
cmp
js
inc
fnstcw
out
insl
test
lret
pop
and
repnz
jo
xchg
jnp
and
repnz
cmp
ss
mov
movsb
dec
hlt
sti
fs
lret
out
test
cld
outsl
add
mov
sbb
and
sub
test
inc
arpl
leave
pop
cli
fs
outsl
test
test
scas
xchg
leave
pushf
ret
gs
inc
cli
fwait
and
and
repnz
mov
and
pop
fld1
repnz
test
lret
shrb
or
aam
adc
fsubrs
sbb
fdivrl
and
repnz
call
in
jnp
and
repnz
out
popa
stos
push
gs
stc
out
out
leave
int3
cli
aam
mov
or
sub
out
mov
arpl
sbb
and
sub
xor
test
dec
arpl
dec
loopne
pop
mov
popa
mov
jae
mov
cmp
insb
sti
add
jo
or
je
or
js
test
adc
subb
jecxz
arpl
push
testl
icebp
push
aaa
sub
ss
popf
jecxz
cmp
movsb
jecxz
jecxz
mov
outsl
and
call
or
lock
arpl
and
hlt
mov
int
fwait
loopne
pop
fs
clc
call
pop
test
imul
in
movsbl
push
xchg
hlt
and
sub
or
gs
imul
imul
test
xlat
aaa
mov
mov
jae
adc
subl
cld
call
les
and
push
sub
lods
lcall
or
lock
sbb
repz
add
or
inc
call
add
jae,pt
je
ljmp
add
jge
test
or
mov
mov
ljmp
jl
mov
repz
mov
push
pop
scas
les
lds
pop
mov
pop
dec
popa
es
andb
cltd
out
mov
dec
inc
add
push
idivl
movsb
adc
adc
dec
cli
js
loope
inc
bound
jge
cmp
mov
cmc
fstl
jbe
jbe
ljmp
and
ret
insb
stos
pop
orl
out
dec
push
outsb
dec
push
je
sti
xchg
cs
cmp
stos
gs
es
dec
and
pop
jno
out
stc
inc
mov
movsb
or
pop
ficomps
dec
cmpsb
stc
or
ret
loope
aam
push
sub
mov
dec
ljmp
cwtl
xor
je
push
fimuls
call
push
jnp
jmp
jno
pop
push
outsb
mov
sbb
lahf
push
daa
jg
dec
stos
fiadds
dec
dec
rolb
inc
fs
sbb
and
stos
pop
in
mov
test
add
sbb
stos
and
std
push
or
test
mov
sub
mov
pcmpeqd
or
aad
clc
mov
push
cltd
rcl
fs
imul
inc
push
rcrb
push
gs
xor
cmp
lahf
dec
daa
sbb
jle
push
pop
outsb
push
sbb
xor
popf
xchg
add
or
sti
stc
testl
add
jne
xor
dec
std
mov
push
mov
cs
push
pusha
and
add
cli
icebp
push
cld
outsb
fsubrs
neg
sbb
outsb
fcmovnb
inc
and
cmp
sub
dec
std
dec
mov
add
ljmp
inc
stos
psubsw
lods
xchg
subb
jg
pusha
dec
outsl
cmp
movsl
pop
pop
add
fs
ljmp
or
mov
and
gs
push
cmp
mov
shlb
xchg
cmc
lret
sbbb
loopne
or
mov
push
rcll
mov
pop
xor
bound
movsb
inc
sti
int
xchg
add
adc
pop
inc
pop
push
in
hlt
sbb
xchg
aam
dec
xchg
dec
jno
add
push
jmp
and
and
pop
sbb
and
or
mov
test
mov
pop
jp
rorb
push
pop
pop
addr16
outsl
pop
xor
pop
dec
es
or
mov
repnz
or
shll
or
sub
pop
lock
push
ret
cmp
xor
adc
cmp
xchg
cs
push
and
add
sub
pop
jb
into
stos
jmp
jne
pop
xchg
aaa
mov
in
jbe
popf
sbb
sbb
xor
push
cmp
mov
int
andb
shll
dec
ss
vpcmpeqw
adc
jge
xchg
cld
and
jo
inc
outsb
fnsave
je
lret
jg
sub
pop
enter
adc
push
std
insb
cmp
dec
movsl
out
lods
mov
pushf
scas
das
mov
arpl
mov
aas
and
out
cmpsb
inc
popa
test
ja
das
call
fnsave
imul
jecxz
mov
mov
mov
and
cmp
pop
lods
pop
outsl
test
pushf
jg
cmp
jmp
adc
dec
repz
push
leave
or
popf
mov
sub
shl
lahf
nop
int
out
dec
push
lock
retw
andl
or
loopne
jge
cmpsb
xchg
es
push
adc
or
enter
mov
mov
aaa
out
call
or
cmp
inc
fidivl
push
leave
or
in
jge
sub
xchg
cli
je
dec
pusha
mov
sub
xor
mov
cmp
je
push
push
int3
adc
pop
jmp
roll
push
and
call
sbb
enter
dec
sarb
popl
sar
dec
loop
dec
pop
xor
sub
mov
shrl
sub
scas
push
jecxz
xor
sahf
cmc
stos
push
adc
loopne
push
pop
rcrb
ss
or
call
xor
jmp
jns
movsb
jmp
paddw
sub
sbb
movsb
add
mov
or
jmp
add
add
adc
imul
sahf
arpl
mov
lea
gs
shl
stos
pop
mov
repz
shlb
popf
ret
fstl
stos
dec
mov
push
or
in
sub
mov
nop
mov
je
mov
mov
out
pop
aad
add
test
mov
sti
adc
cltd
add
fcom
fisubl
ds
jl
in
inc
dec
aad
jle
loop
ret
mov
hlt
data16
ret
fsubrs
pop
add
cmp
and
sub
pop
add
pop
cmpsb
cs
mov
pop
out
xor
adc
mov
dec
and
mov
sub
iret
add
inc
call
cmp
in
cs
cld
jmp
lret
xor
dec
sub
xchg
push
pop
test
sub
push
xchg
fstpt
cmp
jae
out
sub
add
mov
lcall
repz
stc
inc
jg
in
cmpsb
mov
fldt
cmpb
push
push
mov
and
out
loop
xor
and
mov
jp
mov
mov
lea
sbb
mov
mov
sbb
sbb
cli
and
addr16
stos
mov
outsl
in
jno
iret
in
dec
loop
inc
dec
lahf
in
sub
icebp
sub
loopne
decl
cmp
dec
dec
loope
insb
imul
or
mov
sub
pushf
mov
inc
sbb
pop
addl
xchg
ja
add
insb
mov
dec
pusha
stos
test
sahf
outsl
sub
inc
xchg
aad
mov
sbb
jmp
lret
sbb
mov
xor
push
ficompl
mov
xor
sbb
push
imul
lret
push
jb
xor
sub
dec
fwait
push
stos
pop
mov
sti
sbb
sbb
cmc
stos
out
ljmp
call
sbb
mov
hlt
mov
lret
ret
push
xchg
popa
jmp
mov
loope
outsb
fcomip
mov
loop
stos
loopne
out
loope
mov
out
gs
jg
ret
lret
and
mov
fld
push
insb
fs
sub
ret
sub
repz
add
jns
cmp
shlb
sbb
clc
sub
sbb
fbstp
add
inc
adc
cmp
ds
add
cmpb
movsl
add
mov
lcall
xchg
mov
or
sub
inc
bsf
jge
adc
adc
popf
neg
test
sub
cmp
sbb
mov
aas
mov
ret
stos
jnp
mov
lret
shlb
push
lds
adc
mov
stos
or
add
jnp
xchg
push
in
lods
dec
int3
xchg
add
xlat
sub
in
sub
jmp
mov
mov
add
das
adc
jmp
inc
stos
push
into
insb
fldl
mov
lds
mov
add
push
xor
or
add
jnp
add
nop
xchg
add
push
mov
pop
mov
jne
ud2
xor
and
ljmp
es
lret
sbb
adc
add
lea
sub
add
mulb
sbb
adc
imul
insb
push
jg
aam
sbb
add
fidivrs
ss
mov
inc
mov
cmc
push
push
imul
adc
xchg
xchg
ljmp
inc
icebp
pop
in
lods
mov
xor
sub
ret
fldenv
decl
cmp
add
or
ror
pop
mov
call
adc
jns
in
repnz
cmc
imul
repz
jge
mov
fsubrs
enter
cmp
pop
fists
outsl
imul
loope
push
insl
lcall
inc
mov
call
sti
or
shlb
aaa
jae
or
xor
cltd
push
daa
dec
jb
sub
add
pop
adc
push
mov
enter
push
sbb
push
mov
sbb
ret
inc
repz
jmp
adc
pusha
xlat
lock
repz
jno
sub
push
loope
add
push
push
lar
add
dec
add
pop
add
jae
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
jno
imul
add
inc
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
aaa
add
xor
add
add
add
add
add
add
add
add
add
jae
add
add
add
add
add
add
dec
add
add
add
push
add
js
add
outsl
add
inc
add
jne
add
add
add
xor
add
add
add
add
add
add
add
push
add
jp
bound
add
add
add
add
add
push
add
add
add
push
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
jp
add
add
add
add
add
add
inc
imul
add
push
add
add
add
add
add
add
arpl
add
add
inc
add
add
xor
add
add
add
add
add
add
push
add
push
add
add
add
add
add
add
add
add
arpl
add
add
dec
add
add
add
add
add
add
jo
add
dec
add
add
add
add
add
add
add
add
inc
push
push
jns
pop
outsl
xor
add
add
add
dec
add
add
add
add
add
add
add
xor
add
dec
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
push
add
inc
jno
add
outsl
add
dec
add
pop
faddl
les
clc
movl
loopne
pop
enter
aam
cmp
popf
out
movsb
rolb
fwait
and
aam
cmpb
leave
sub
sub
inc
sti
cmovo
adc
iret
pop
pop
sbb
shrl
iret
add
jae
sbb
scas
and
add
loope
outsb
notb
cmc
sarl
leave
cli
xor
xor
jb
cltd
out
mov
iret
jmp
jo
sahf
dec
cmc
daa
lret
xor
cli
imul
fists
cmp
ret
lea
add
jo
arpl
test
push
call
push
in
clc
adc
push
arpl
cmp
add
fdivs
scas
stos
aam
push
loope
std
add
jmp
sti
mov
shrl
lock
push
fs
mov
pushf
adc
add
mov
add
jns
inc
add
jne
imul
out
pop
lods
lods
sub
out
mov
lret
jp
movsb
lds
cmp
inc
cmp
mov
dec
adc
push
lock
stos
in
push
and
in
push
jb
out
pusha
out
into
shr
bound
jmp
mov
cmp
push
mov
or
inc
rolb
mov
or
andb
ret
stos
shlb
bound
shll
xlat
cmpsb
mov
push
ror
mov
subb
jge
call
pop
push
test
dec
mov
pop
pop
cmpsb
push
bt
pop
add
cmp
test
daa
push
jl
cli
push
in
int
inc
repz
in
outsb
dec
iret
and
rol
lds
add
or
lret
sahf
inc
movsb
jno
mov
cmp
shlb
dec
jge
je
movsb
dec
pop
loopnew
test
xchg
mov
adc
inc
or
mov
or
or
call
cmp
test
xor
mov
mov
ret
jmp
mov
pop
enter
mov
in
mov
push
movb
enter
inc
mov
cmp
jg
jb
ror
sub
cmp
sub
fidivrs
adc
clc
dec
mov
fsts
call
jmp
mov
add
jge
cmp
ficomps
stc
or
lcall
mov
fldl
inc
cltd
in
std
adc
cmpsl
ds
jp
aas
adc
mov
pop
ret
clc
inc
jne
mov
xor
cwtl
xor
mov
fucomip
mov
lcall
lret
outsb
fwait
in
mov
mov
std
rcrb
std
or
cld
mov
loope
add
sarb
add
aad
loop
out
cld
ror
add
lret
sub
mov
movsb
push
mov
dec
lret
out
jae
stos
jecxz
cmp
incb
out
adc
add
iret
mov
jno
outsl
je
out
sub
scas
jae
xor
lret
mov
arpl
pop
addr16
test
call
xor
mov
sahf
in
push
or
add
adc
cmp
push
inc
pop
sub
xchg
push
cltd
pop
lret
pusha
idiv
sbb
cmp
jae
push
add
rorb
push
push
rolb
sub
pop
cltd
idiv
cmp
mov
cld
jne
jmp
lock
ja
jge
pop
lea
dec
adc
add
in
cld
sub
add
cmp
je
test
out
push
out
lock
jmp
cmp
cwtl
shrl
test
jbe
bound
dec
mov
clc
test
fcmovne
xchg
dec
mov
inc
ret
pop
jbe
mov
push
cmp
and
push
ja
add
inc
or
js
out
adc
and
push
in
adc
in
call
inc
out
push
pop
push
push
stos
dec
pop
and
mov
sbb
dec
daa
stos
pop
in
add
mov
test
hlt
or
mov
andl
push
push
stos
push
dec
into
dec
pop
xlat
mov
xor
mov
shrb
push
stos
insl
repnz
clc
outsb
cld
push
insl
lret
outsl
sti
mov
divb
add
fildll
and
xorb
stc
leave
and
notl
jae
ljmp
lea
jp
shl
in
sub
jns
add
cld
dec
cmp
fbstp
inc
icebp
mov
in
mov
xchg
stos
sti
adc
xadd
sahf
cmpsl
inc
sub
mov
mov
imul
test
pop
mov
stos
push
cmpsl
insl
pop
add
pop
gs
push
int3
pop
xchg
pop
lret
bound
dec
mov
mov
int3
or
sbb
test
cmp
jge
pop
in
pop
mov
clc
aad
xchg
push
mov
test
add
adc
rcrl
test
loope
bound
sarl
aam
dec
jle
outsl
in
sbb
loop
mov
lock
out
sub
and
jg
stos
cld
pop
popa
jmp
mov
stos
int3
jle
adc
sub
js
and
push
jmp
pop
dec
outsb
xlat
ret
inc
mov
inc
jmp
andl
adc
or
fistl
lret
not
fnstsw
lds
lret
shrb
ljmp
sbbb
stos
push
add
cmpl
fimull
xchg
fnstsw
xor
repnz
mov
test
int
sub
mov
xlat
sub
sub
mov
cmpsb
pusha
pop
mov
xchg
rol
xchg
jge
aad
pop
ds
jle
loop
popa
ja
dec
mov
jp
test
lret
add
dec
add
dec
adc
pop
cmpsb
or
and
stc
add
clc
stos
jmp
mov
movsb
stos
push
dec
pop
cmp
jno
clc
ret
xchg
aad
xchg
popa
repz
jl
fwait
adc
pop
push
lds
xchg
sub
jns
adc
nop
js
add
pop
push
pop
mov
xchg
cs
test
mov
xor
or
clc
test
adc
test
enter
and
mov
pop
ja
jb
mov
sub
aad
sub
cmp
pop
sbb
pop
fisttpll
mov
mov
jnp
imul
pop
cmp
mov
pusha
mov
jbe
push
loopne
or
push
lea
pop
int3
sub
cmp
mov
add
or
xchg
mov
incl
repnz
out
pop
inc
push
lds
enter
lret
jecxz
or
mov
jge
jb
scas
jp
gs
mov
jl
mov
out
arpl
mov
fildll
dec
std
loopne
shll
and
arpl
test
mov
enter
cmp
sbb
lcall
mov
test
pop
cmc
dec
add
repz
ret
mov
loopne
sbb
mov
fwait
cmpsl
pop
outsb
flds
or
nop
scas
sti
add
mov
scas
sti
or
jno
cmp
lahf
loop
add
xchg
mov
cmp
je
pop
xlat
mov
mov
movsl
push
push
pop
sahf
lcall
jns
jge
fnstsw
sub
pop
or
adc
mov
sti
decl
add
js
sbb
push
aam
mov
mov
mov
add
lcall
and
jge
and
pop
mov
pop
js,pn
rcrl
mov
cmp
and
push
dec
loopne
aam
mov
loop
inc
rolb
jmp
sub
in
adc
clc
mov
aaa
clc
xor
mov
cld
data16
sarb
data16
dec
dec
pop
call
scas
inc
dec
mov
imul
mov
push
inc
incl
and
sub
add
mov
jno
xlat
mov
mov
ret
in
jne
adc
mov
mov
pushf
loop
mov
movsb
std
arpl
pop
iret
and
mov
push
je
outsl
pop
push
lods
cmp
enter
sub
cmp
shlb
aad
dec
fcoms
jne
mov
mov
sbb
lods
push
add
push
test
pop
call
loopne
xor
adc
inc
pop
push
mov
orb
dec
jg
pop
fisttps
jne
lret
sbbb
mov
pop
push
xor
pop
outsb
dec
xor
dec
dec
into
dec
xor
ds
dec
cmpsl
and
cli
imul
dec
pop
call
mov
pop
test
pop
sti
scas
cmp
int3
mov
pop
jle
inc
mov
lods
xchg
sub
and
push
lret
stc
and
pop
iret
and
sub
clc
mov
test
jmp
cmp
imul
inc
push
xor
insb
insl
mov
and
lods
in
maxps
xor
pop
pop
outsl
lock
shlb
cwtl
cmp
cmp
in
dec
fmuls
push
call
push
lock
pushf
dec
lock
fsubrp
fnstsw
fadds
stos
sti
add
xchg
addr16
cmpsl
movsb
popa
mov
insl
enter
mov
iret
mov
dec
jecxz
add
fldl
ret
mov
inc
nop
ret
xor
ja
jnp
and
add
dec
in
jne
and
mov
cmpsl
test
push
jl
rep
add
mov
repz
sarl
shld
xor
into
gs
clc
push
dec
dec
mov
imull
pop
fnstenv
loop
fnstenv
negb
sub
fchs
cmp
in
inc
call
mov
int
cli
into
mov
mov
call
jle
or
loopne
add
imul
push
add
mov
xor
pop
xor
ret
or
in
sub
fidivl
cwtl
cmp
clc
call
fistpl
mov
int3
mov
les
addr16
push
push
push
rcr
call
jp
lock
jg
mov
sti
xor
ljmp
or
sub
cmpsl
mov
dec
sub
jno
sbb
in
and
mov
xchg
mov
mov
inc
mov
leave
xchg
call
pop
xorl
popa
fnsave
outsl
jno
leave
adc
cmc
push
std
jl
jae
icebp
dec
adc
inc
sbb
cmpsl
and
lods
pop
adc
sbbb
sub
loopne
or
push
lock
scas
cmp
mov
jbe
nop
mov
xor
arpl
test
cmp
fucomip
dec
xlat
push
xchg
imul
call
mov
call
stos
lea
add
jno
cwtl
pop
mov
ja
mov
addr16
adcb
decb
lret
adc
jecxz
outsb
dec
sub
in
clc
cmc
mov
jno
fdivs
dec
inc
dec
jnp
mov
and
pushl
and
push
adc
xchg
sar
dec
cli
mov
repz
push
mov
pop
mov
cmpb
adc
idivb
jg
int3
or
jge
fstpt
add
push
mov
jmp
mov
insl
aam
notb
lret
loopne
mov
jg
cmp
jb
mov
int
fs
adc
ret
xchg
or
sbb
add
movsb
push
jno
mov
fdivs
push
lea
mov
push
sbb
mov
outsb
fidivrl
les
push
pop
mov
ret
loop
pop
jg
mov
rclb
jno
mov
clc
xchg
inc
pop
push
ret
push
xor
sub
cs
sub
push
cmc
or
xlat
sahf
insb
jne
dec
xor
dec
inc
ffree
or
loope
cld
and
sti
pop
and
mov
popa
aas
mov
jl
xor
xor
push
sub
or
push
rcll
inc
out
sarb
ret
popf
jns
fldl
subb
jmp
mov
pop
or
lcall
call
call
addl
jl
or
cmp
or
xor
cmp
push
movsb
adc
push
in
add
pop
inc
xchg
scas
inc
mov
mov
test
pop
adcl
mov
xor
xor
xor
repz
dec
or
aad
push
loop
push
push
mov
cmp
stos
pop
cmp
sbb
xor
pop
xor
aaa
pop
jg
sti
call
or
mov
sbb
pop
inc
jne
mov
jno
jp
or
repnz
xor
pop
cmp
cmp
mov
test
loope
imul
stos
les
add
lods
cmpsb
lret
dec
cmp
aas
scas
jb
in
bound
call
xor
repnz
push
inc
mulps
sahf
pop
lds
fcmovnb
shl
repnz
pop
add
add
add
add
add
je
add
dec
add
add
dec
add
add
js
add
add
insb
jo
add
add
add
add
add
add
add
inc
add
inc
add
push
add
dec
add
jo
add
dec
add
add
data16
add
popa
add
add
add
cmp
add
inc
dec
add
jno
add
add
add
add
add
dec
popa
add
add
inc
add
add
add
cmp
add
add
add
inc
inc
add
outsb
add
imul
add
add
add
jns
add
add
add
add
add
add
outsb
add
add
add
pop
add
je
add
add
add
je
push
add
pop
add
add
add
js
add
insl
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
add
add
push
add
imul
add
add
add
add
jne
add
push
add
add
dec
add
add
add
jo
add
add
add
add
add
inc
add
inc
add
add
add
insl
add
jp
jno
add
add
cmp
add
add
jb
add
add
add
add
scas
adc
jbe
scas
jg
jle
in
lret
mov
fidivs
push
dec
mov
lods
movsl
pop
xor
adc
icebp
pop
and
out
daa
pop
sbb
xchg
mov
mov
dec
imul
mov
pop
hlt
jecxz
shl
sub
ret
xor
enter
adc
repnz
jns
mov
pop
scas
imul
mov
cmp
cld
pop
ss
sbb
dec
out
sbb
dec
out
pop
dec
mov
adc
ret
loop
outsl
pusha
jg
insl
in
subl
push
call
mov
out
or
mov
dec
fisubs
orl
jo
mov
sub
aam
jg
aam
mov
sub
mov
cmp
lret
adc
push
push
insl
test
loop
mov
imul
orl
pop
push
sub
filds
in
mov
arpl
movb
jnp
out
add
cmp
add
lret
enter
out
insb
sbb
clc
fs
mov
fisubrs
data16
jecxz
fwait
insl
insb
test
lret
lahf
mov
std
lock
jle
fsub
data16
hlt
and
lcall
or
aad
aas
mov
jnp
mov
mov
xchg
cmp
mov
inc
adcl
std
subl
aaa
mov
mov
or
xor
mov
jge
push
pop
pop
inc
push
dec
rolb
lea
sub
mov
nop
cmpsb
mov
push
rol
rcl
lds
jle
popa
mov
lds
jmp
jl
inc
cli
insb
lret
loope
sub
js
xor
scas
xor
cmp
leave
test
cmp
mov
inc
lret
inc
arpl
cli
dec
jecxz
outsl
test
push
arpl
cli
pop
jecxz
outsl
test
arpl
into
bound
gs
ljmp
or
push
aas
ljmp
pop
nop
scas
xchg
clc
sbb
rcrb
aad
cmp
jg
dec
push
xchg
repz
es
cs
clc
movb
jecxz
ficomps
add
das
nop
testb
push
push
cld
clc
jne
push
orb
test
push
or
pop
cmp
das
dec
sub
jnp
ret
ror
xor
jmp
xchg
int3
into
adc
je
cmc
add
stos
push
call
sarl
cli
sti
sti
cmpsl
and
fsubr
loop
in
in
jl
sbb
rclb
int3
xchg
push
xor
fcoml
aas
test
push
pop
mov
pop
shlb
push
pop
sub
pop
sub
int
lods
xorb
test
mov
jae
mov
push
frstor
push
repz
xlat
cli
clc
sarb
ret
adc
mov
xor
xorb
sub
xchg
jp
cld
add
pop
iret
in
lret
dec
push
mov
inc
mov
js
movsb
push
int3
test
and
out
jbe
sbb
call
lret
in
ret
push
mov
pop
push
sti
push
insb
pop
mov
into
es
xlat
and
mov
inc
popf
adc
mov
pop
test
dec
push
push
fisubl
mov
aad
in
xor
xor
jecxz
lret
pop
or
ja
push
into
je
test
mov
lock
dec
add
sbb
shrb
movl
jecxz
and
adc
push
imulb
je
andl
push
mov
mov
add
jp
jl
stc
loopne
cs
into
xor
xor
mov
pushf
sarb
xor
and
outsl
mov
mov
or
mov
incl
movb
movsl
pop
lods
mov
push
and
mov
xchg
cwtl
fwait
sbb
dec
pop
push
jbe
mov
sbb
data16
push
out
cld
mov
popa
jmp
mov
clc
call
inc
shrb
into
push
adc
adc
jmp
dec
xchg
outsl
int3
leave
out
push
inc
mov
fcomps
mov
insb
inc
pop
out
mov
notl
imul
or
push
call
ficomps
jne
add
add
add
add
add
add
add
push
add
add
push
dec
add
add
add
add
add
add
add
add
add
add
add
ja
xor
add
add
push
imul
add
outsl
add
add
je
add
push
add
add
push
add
add
add
push
add
add
add
add
jno
add
add
add
add
add
add
add
add
add
add
imul
add
je
add
add
add
add
add
add
add
add
add
push
add
popa
jns
inc
add
add
add
dec
xor
add
add
add
add
push
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
add
pop
jo
add
add
cmp
add
add
add
add
push
add
add
ja
add
add
add
add
add
add
add
add
add
push
dec
add
xor
add
aaa
je
add
cmp
add
add
dec
add
add
add
add
add
jp
add
add
push
data16
add
add
xor
add
arpl
add
jbe
add
add
add
insl
jae
xor
add
add
add
imul
add
add
inc
add
arpl
add
add
jp
add
add
add
add
add
dec
add
add
add
add
inc
add
add
add
xlat
icebp
out
sti
ljmp
loopne
jle
shlb
pushf
mov
mov
jo
push
add
pushf
aad
lret
xchg
jg
call
aas
jnp
iret
push
jo
in
mov
movsb
push
add
cmpsl
add
and
cmp
push
cmp
jp
cmp
into
push
adc
in
fcomps
stos
mov
inc
pop
arpl
int
dec
aas
jecxz
pop
lods
fdivrl
les
push
popf
adc
cmpsb
mov
clc
inc
pop
mov
jae
dec
inc
stos
enter
jb
sarb
je
adc
cmpsb
neg
ror
fs
test
pop
sbb
lcall
enter
mov
pop
dec
push
call
addb
stos
test
pushf
inc
es
or
xchg
lds
dec
push
or
dec
mov
popa
add
cwtl
jno
iret
jl
mov
jle
or
dec
fldt
scas
jp
rolb
addr16
mov
cwtl
sbbl
das
xchg
loopne
test
inc
cld
mov
test
mov
shrb
rorl
ret
out
or
xor
iret
test
das
xlat
jmp
adc
push
and
mov
ret
addr16
inc
addr16
push
outsl
stos
push
or
pop
out
fldpi
push
pop
sbb
or
sub
pop
shrb
aam
mov
pop
test
and
dec
mov
mov
push
test
std
or
pop
les
into
mov
gs
out
xchg
pop
push
popl
push
enter
pop
dec
pop
push
divl
push
push
mov
sbb
pusha
movsl
or
mov
data16
inc
xchg
bound
repz
insb
arpl
arpl
push
mov
sub
shl
cli
rclb
daa
bound
and
cwtl
and
mov
movl
inc
addr16
xchg
sbb
enter
mov
pop
bound
sub
and
aam
mov
test
xor
sar
cwtl
pop
cld
push
jne
lahf
in
push
mul
test
sbb
ror
int3
enter
in
lcall
add
pop
or
cmp
or
mov
enter
in
dec
mov
call
bound
in
add
rcl
mov
int3
mov
je
xor
xlat
lock
mov
and
dec
sbb
dec
je
push
rcrb
lds
test
out
into
jecxz
lahf
mov
dec
js
dec
sbbb
jge
fadd
in
imul
dec
or
outsl
addr16
lret
in
test
outsb
into
mov
xor
mov
stc
inc
je
push
xchg
call
adc
shl
outsl
add
xor
les
les
pop
imul
cmc
pop
push
stos
push
push
or
dec
bound
ret
xor
cmp
mov
into
mov
adc
out
das
push
aam
repz
cmp
mov
pop
push
andl
mov
stos
xor
cmc
ret
adc
mov
mov
call
icebp
stos
test
fstpt
pop
cmp
mov
mov
insb
or
dec
pop
imul
push
xor
push
and
add
mov
loop
pop
dec
dec
mov
dec
push
nop
loop
je
push
ss
cmpsb
cld
mov
and
add
pop
mov
mov
push
push
rcrl
xor
xorb
pop
push
dec
pop
outsl
inc
andl
hlt
roll
push
call
push
leave
mov
ds
push
mov
jns
imul
jno
mov
in
jbe
xchg
mov
lea
outsb
push
push
leave
rorb
add
jmp
cs
imul
and
jmp
mov
je
idivb
xor
test
outsb
sbbb
mov
push
jbe
push
jo
dec
jo
lahf
jge
lods
jle
push
sbb
xor
xor
xlat
mov
xor
sahf
jge
lods
inc
mov
ds
pop
push
shll
into
push
fildl
inc
addr16
fists
outsl
ret
pop
imul
jle
cwtl
xchg
mov
lock
cvtpi2ps
jg
ret
mov
mov
bound
add
add
push
add
add
data16
add
jae
add
add
add
add
cmp
add
xor
add
add
add
add
add
add
dec
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
add
pop
add
add
add
inc
imul
add
add
add
add
add
add
cmp
xor
add
add
add
dec
add
add
push
add
arpl
dec
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
aaa
inc
inc
add
add
add
xor
add
add
add
je
add
add
add
add
add
add
add
xor
add
data16
dec
dec
add
xor
add
je
inc
add
jbe
add
add
add
pop
add
add
add
bound
add
add
add
add
add
dec
add
add
add
add
add
dec
add
xor
add
xor
add
arpl
add
arpl
add
add
popa
add
xor
ja
add
pop
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
popa
pop
dec
add
add
pop
add
add
add
insb
add
xor
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
ret
and
mov
in
inc
jl
testb
aas
je
js
pop
stos
outsl
fs
dec
fisubrl
std
mov
fsubrl
dec
jle
and
inc
imul
repz
loopne
lret
std
call
test
mov
jmp
sarl
sbb
push
ja
and
push
stos
call
and
out
xchg
add
push
lcall
jecxz
mov
loopne
mov
loope
std
pop
arpl
mov
shlb
mov
sbb
bound
mov
loope
jecxz
pop
mov
mov
mov
test
ret
mov
inc
add
jg
dec
xchg
or
and
ds
arpl
inc
push
test
mov
cmp
sub
stos
jmp
xor
subl
inc
stos
add
in
cmp
jecxz
xor
arpl
push
mov
in
out
outsb
neg
orb
dec
inc
call
mov
loopne
xorb
mov
cli
dec
and
loopne
cmp
mov
xor
dec
mov
push
lcall
insl
addr16
cli
loopne
mov
scas
xchg
popf
enter
sub
and
pop
xchg
stc
mov
mov
pop
jp
rcr
stos
stos
cmpsl
add
jno
mov
test
xlat
shl
divps
lods
orl
repnz
pop
pop
sbb
jmp
inc
cli
adc
jmp
mov
lods
cld
jmp
in
xchg
ds
adc
mov
mov
mov
incl
xor
pop
call
sbb
ds
fwait
push
fnstcw
ret
xchg
push
jbe
fdivl
ja
int
cltd
xor
mov
int
outsb
mov
cltd
pop
hlt
repz
lret
xchg
xor
mov
push
mov
ror
je
rol
test
loop
call
mov
xchg
or
xchg
clc
jnp
dec
xacquire
mov
int
mov
xchg
jmp
fbld
aaa
push
icebp
cmpsb
push
ljmp
and
mov
push
mov
dec
dec
mov
arpl
out
xor
cmp
cmp
adc
dec
push
mov
push
stos
add
test
cmpsb
mov
outsb
test
test
ret
loopne
adc
dec
pop
or
sub
lcall
scas
ja
andl
mov
cld
pop
add
adc
clc
movsl
lret
les
mov
cmp
ret
arpl
ja
add
mov
rol
iret
and
iret
mov
sub
mov
ret
jnp
das
mov
rolb
call
insl
pop
mov
or
cmp
pop
mov
cmpsb
sub
mov
lcall
mov
mov
int3
xor
lods
mov
add
adc
sbb
test
add
mov
test
int
icebp
nop
jle
iret
adc
push
andl
cli
mov
sbb
mov
addr16
mov
cmp
test
int
pop
and
mov
enter
fstps
dec
in
sbbb
xor
add
push
mov
jno
lret
loopne
out
sbb
ret
push
test
mov
out
xchg
sbb
xor
sbb
xchg
mov
cmc
jl
mov
loop
and
std
pop
sbb
movsl
push
dec
jge
cmp
jae
loopne
push
clc
movsl
cld
add
push
mov
push
out
imul
and
lret
inc
insb
lret
pusha
insl
scas
stos
or
enter
lret
mov
lock
bound
rcrb
mov
loope
mov
sbb
in
or
jl
sub
rcrb
push
flds
lret
inc
in
lds
stos
add
lods
adc
inc
xchg
jl
fwait
dec
mov
add
fsubl
mov
rclb
out
push
fwait
lods
fs
adc
outsl
sahf
mov
incl
push
rcrl
shrb
loopne
les
and
lcall
push
call
push
pop
or
ljmp
in
add
aam
sti
inc
in
aam
leave
dec
jae
je
jo
inc
add
bound
arpl
cmp
mov
movsl
dec
add
pop
shl
jo
les
jle
mov
jae
push
adc
push
jb
jne
rcrl
adc
loopne
mov
js
arpl
dec
jbe
xor
ret
push
loope
leave
mov
jb
xlat
int3
stc
adc
iret
mov
cmp
dec
mov
adc
aad
jbe
clc
pop
ljmp
jns
mov
xchg
jle
add
ss
mov
dec
cmp
or
and
fwait
inc
mov
sbb
in
xor
adc
pushf
movsl
add
in
cmpsb
push
or
dec
mov
roll
or
push
adcb
cmp
fldt
jb
mov
adc
sbb
loope
out
outsl
jmp
lret
ret
jne
test
lcall
pop
push
adc
lods
lret
addb
fnstcw
fistl
pop
movsbl
dec
mov
ret
push
mov
imulb
xor
cwtl
std
test
mov
roll
lea
lods
adc
call
sbb
ja
push
test
mov
out
sub
jno
ja
fcomps
outsl
mov
mov
inc
cmp
fisttps
test
leave
jle
add
fsubrp
xchg
arpl
out
or
sti
sub
loope
cmp
in
sbb
arpl
sti
movsb
lock
rol
ljmp
cmp
pop
arpl
push
xor
and
mov
arpl
fnstcw
mov
pop
pusha
pop
movsb
add
push
gs
push
adc
out
mov
fistl
mov
leave
sbb
rclb
and
cmpsl
loop
adc
cmp
cmp
lret
bound
cmovle
int3
jp
xor
mov
outsl
jns
call
xchg
pop
add
fcomip
cmp
jp
or
pusha
cld
xor
mov
loop
or
loopne
cmp
arpl
mov
push
inc
mov
imul
lods
adc
add
push
push
cs
loop
arpl
pop
pavgb
jae
movsl
or
out
out
mov
movsb
push
ret
jge
out
cmp
je
insb
push
mov
call
lcall
or
jne
jle
xchg
cmp
imulb
jl
inc
les
shl
arpl
mov
cmp
or
xchg
cwtl
popl
push
sbb
and
filds
fistl
test
loop
cmp
jle
nop
jecxz
cmp
jmp
jmp
and
push
aam
add
fsubs
xor
inc
xlat
add
out
xchg
dec
inc
test
cmp
imul
push
inc
adc
movsb
add
sti
mov
loope
lea
adc
jle
mov
test
mov
inc
fisubs
scas
ret
adc
dec
mov
push
mov
sub
inc
mov
push
and
add
mov
popf
cmp
ret
jp
rcrb
jae
inc
mov
icebp
fwait
into
add
loope
icebp
mov
divb
loop
cmp
push
cmp
sub
inc
push
out
jne
test
push
adc
popf
cmp
lcall
mov
lods
mov
stc
dec
imul
flds
sub
push
jl
lock
loopne
sub
mov
pop
daa
sbb
andb
push
mov
scas
cmp
scas
fistpl
outsl
lret
addr16
ret
and
jge
pop
lcall
mov
nop
stos
or
adcb
mov
lock
das
or
xor
sub
xchg
xor
push
sub
jo
sbb
xchg
mov
pop
and
call
jmp
sub
ds
sahf
scas
mov
or
repz
pop
aam
insb
test
add
cmp
push
adc
pop
adc
insb
in
mov
inc
pop
data16
out
test
xor
dec
jge
test
mov
cld
and
add
mov
cmp
test
add
fs
cmpsl
cmp
push
test
lods
adc
and
or
add
insb
add
add
cmp
add
add
add
add
push
add
dec
add
inc
inc
add
jb
push
push
add
add
add
add
add
add
add
add
add
bound
pop
add
add
data16
cmp
add
dec
inc
add
add
add
add
add
add
add
dec
inc
add
add
add
js
add
popa
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
outsb
add
add
add
add
add
jae
ja
add
add
add
add
aaa
inc
imul
insl
add
add
bound
add
add
xor
add
add
aaa
add
add
push
add
xor
dec
add
pop
add
inc
add
popa
add
add
dec
add
add
bound
push
xor
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
add
push
add
xor
add
add
add
add
add
jo
aaa
add
add
add
add
jbe
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
inc
add
add
add
add
add
add
add
imul
add
add
add
dec
add
add
dec
xor
add
jp
add
add
add
add
add
imul
add
add
add
add
add
add
xor
add
add
insl
inc
push
add
add
add
push
add
jp
add
add
add
add
push
dec
dec
add
bound
add
jne
inc
je
mov
adc
out
fdivrl
test
adc
inc
iret
bound
jne
mov
mov
shrb
lcall
cmpl
dec
mov
push
mov
shl
mov
rorb
mov
stc
or
dec
test
xor
inc
xor
cmp
cmp
in
out
inc
jecxz
decb
push
sti
add
jbe
ret
gs
popa
or
ret
sub
mull
rorb
xchg
popf
push
into
and
fwait
rol
outsb
lret
sbb
pop
add
sbb
jmp
mov
jb
push
loop
mov
pop
mov
or
in
dec
xor
cltd
scas
dec
call
lea
mov
inc
sbb
repnz
dec
mov
cli
lock
lods
outsl
push
ret
rorl
dec
in
mov
inc
lret
jmp
mov
mov
mov
sti
or
or
or
or
inc
in
jns
incl
pop
mov
test
in
mov
cld
fldcw
mov
push
test
test
insl
mov
fistps
test
inc
arpl
push
scas
add
cmpsb
pop
sub
ret
mov
push
inc
mov
icebp
cmpsb
inc
rorb
js
push
and
icebp
mov
add
imul
dec
test
xor
adc
jg
cmp
fadds
push
or
je
adc
jge
push
pop
jb
jg
pop
insl
into
popl
shr
std
out
xor
shl
push
das
ret
iret
mov
ja
pop
pop
call
dec
cmpb
imul
movsl
out
push
jl
stc
push
dec
xchg
jge
mov
pop
inc
cmp
and
loopne
push
cmpsb
loopne
in
aam
cmp
cld
mov
loopne
push
call
lds
jno
pop
fwait
push
cs
leave
xor
mov
add
ficoms
call
std
and
aas
out
sbbb
mov
popa
jae
mov
lods
sub
mov
in
mov
mov
pushf
push
jmp
lcall
jg
jl
jae
sub
out
sub
push
test
sbb
sahf
or
add
lds
mov
mov
sahf
jne
lret
fbstp
clc
cmpsl
testl
les
mov
mov
mov
js
fdivrl
test
mov
in
cmp
sbb
adc
mov
cwtl
mov
pop
lds
cmp
lret
dec
and
in
push
in
add
dec
pop
scas
rcr
clc
cs
xor
in
stc
stos
xor
test
test
inc
je
adc
mov
stos
pop
test
mov
mov
les
fcmovnbe
push
loop
dec
andl
mov
dec
or
dec
mov
cmpsl
sahf
test
popf
pop
inc
add
enter
xchg
cmp
mov
test
repnz
loopne
cmp
cld
ret
or
push
test
pushl
or
aas
lock
mov
mov
mov
xor
std
sbb
and
and
jbe
add
iret
sub
aas
or
mov
inc
movsb
ret
int
cmpsl
int3
or
dec
sbb
cmp
loope
outsl
out
fiaddl
fwait
push
loopne
mov
out
add
and
pop
lds
stos
mov
decb
mov
sub
push
jbe
mov
aas
lods
popa
xor
inc
cwtl
into
inc
mov
inc
mov
and
adc
pusha
dec
mov
mov
cmc
ja
scas
jns
jns
jbe
jnp
inc
jb
add
fcmovnb
add
bound
shrb
mov
dec
gs
lea
jp
add
mov
jbe
jns
jne
mov
mov
sbb
jl
fdivr
ret
test
lret
or
mov
mov
add
and
dec
jae
aam
sub
fwait
sub
and
inc
int
mov
push
lret
cmp
add
aad
sti
dec
outsb
jb
daa
lcall
pop
xchg
rol
lock
notb
ret
lds
sub
out
fsts
psubd
pop
mov
add
add
jmp
test
mov
push
pop
aaa
mov
mov
cltd
shll
xchg
idivl
and
xor
jae
mov
mov
push
sbb
push
popa
stc
mov
or
data16
sub
jns
jae
jg
jl
stos
add
call
lea
mov
sbb
arpl
decb
push
or
mov
jle
cmpsl
jne
dec
rcrl
cmpsl
adc
stos
loopne
clc
cmp
or
pop
xchg
sub
call
jmp
adc
clc
lock
loop
push
test
push
dec
mov
je
xlat
stos
sbb
fwait
cmp
xlat
cmp
push
mov
mov
sub
das
call
dec
pop
xlat
jbe
pop
movb
mov
into
insl
lcall
imul
js
mov
dec
scas
jge
jb
mov
ss
mov
shl
pop
enter
loope
cli
cwtl
jecxz
outsl
mov
fs
sti
sub
jnp
popa
movsb
lret
add
negl
enter
ret
jbe
dec
ljmp
mov
call
cmp
and
call
dec
or
adc
mov
icebp
push
jge
lret
or
test
aas
cwtl
cmp
cmp
push
xchg
daa
pushf
xor
jle
imul
xchg
js
outsb
jns
into
xchg
jmp
xchg
dec
push
bnd
iret
inc
loop
or
mov
enter
out
xchg
ljmp
lds
push
mov
test
fsubr
lds
stc
or
add
or
js
stos
fnsave
and
add
push
call
or
and
xchg
out
push
mov
or
test
std
sbb
ret
movsb
dec
xor
insb
les
incl
jb
lret
movb
pop
push
mov
jl
cmp
js
test
shll
cmp
stc
jle
cmp
fidivl
xor
les
mov
pop
daa
icebp
pop
push
xor
mov
sub
out
and
cmpsb
or
cmp
orl
pop
iret
inc
cmpsl
pop
popa
add
cmp
and
insl
jge
and
out
cmpb
hlt
imul
cmp
sub
xor
add
jecxz
fldt
sub
ja
test
sub
mov
icebp
fidivl
int
adc
das
or
es
sub
lods
xchg
push
inc
stos
jbe
sbb
and
sub
push
popa
call
imul
push
shll
and
shr
mov
push
andb
sahf
or
pop
iret
clc
mov
js
jns
push
cmp
sbb
and
push
mov
std
enter
out
push
sbb
mov
call
jge
lods
cmpsl
pop
mov
push
mov
pop
mov
sets
rorb
push
out
xchg
std
cmp
cmpsl
popa
xchg
lcall
sub
mov
xorb
mov
andl
loope
or
arpl
std
ljmp
mov
mov
jne
shl
add
pushf
pop
ror
bound
mov
iret
imul
jne
jae
into
movsb
push
mov
int
int3
jns
mov
leave
test
push
dec
fsub
orl
insl
js
inc
mov
out
add
nop
cltd
arpl
or
jge
imul
in
dec
add
add
mov
add
scas
leave
cmp
test
movsb
or
dec
or
dec
or
or
and
js
and
js
fnstcw
imul
fimull
clc
bnd
nop
mov
aam
xor
test
jmp
pop
pusha
push
jmp
nop
sbb
pop
jnp
incb
jmp
xadd
cmpsb
sbb
fs
fistps
mov
push
outsb
js
xor
test
dec
or
das
shl
int3
fdivrs
lahf
pop
mov
stc
or
inc
mov
inc
dec
or
push
mov
scas
dec
add
adc
js
pop
imul
pop
ret
sub
sub
sti
shlb
mulb
add
xor
icebp
jbe
jmp
loopne
pop
pushf
dec
loope
cli
inc
std
mov
lahf
fistps
std
fwait
clc
xlat
ret
or
lods
arpl
jecxz
xlat
dec
je
xchg
mov
jmp
outsb
mov
fucomp
loope
aad
enter
sti
sbb
jne
push
int3
pop
cwtl
fstpt
push
jecxz
push
gs
dec
mov
in
repz
sarl
scas
mov
add
mov
stc
mov
jnp
nop
arpl
loop
int3
xchg
int3
mov
repnz
cmc
push
cmp
jb
fdivrs
cmp
shl
repz
aas
js
je
movsl
in
lods
inc
loop
pushf
mov
ficoms
pop
rcrb
pop
sbb
lcall
fnstsw
sub
cli
or
mov
pop
cli
scas
inc
push
movsb
repnz
fwait
movsl
rcll
mov
sti
pop
or
in
mov
fiaddl
push
int
ret
aaa
dec
dec
dec
repz
dec
lock
gs
lahf
scas
inc
lahf
dec
mov
aas
push
dec
out
fisubrs
jo
lret
mov
mov
testl
and
cli
pop
adc
lret
or
lcall
xlat
clc
in
dec
inc
sbb
sbb
jp
pop
and
sti
stc
test
inc
shl
xchg
lock
jecxz
mov
aas
stos
inc
jmp
test
inc
iret
cmp
dec
mov
scas
test
cli
or
mov
pop
ret
imull
loopne
jecxz
and
sbb
iret
cli
dec
jecxz
inc
fwait
scas
mov
inc
sbb
push
ljmp
repnz
loop
stc
into
iret
in
lock
push
aam
push
scas
inc
sub
cli
cld
push
jmp
int3
jp
leave
mov
jbe
jb
lret
jb
push
cli
add
loop
push
cli
xchg
leave
ds
out
scas
sarb
cli
rorb
repnz
leave
fimull
xchg
cli
into
dec
out
loop
arpl
dec
push
stc
sub
ljmp
adc
jle
inc
insb
loop
bound
ds
sub
scas
push
sub
stc
inc
iret
push
mov
jb
jl
bound
mov
out
out
cld
bound
inc
push
loop
jmp
ljmp
xchg
mov
enter
push
xor
cmpsb
stc
mov
ret
dec
ljmp
insb
sub
sbb
sbb
jno
xor
xchg
cmp
sbb
outsb
out
xorl
in
cmpb
imul
sbb
out
mov
xchg
andl
lret
test
push
jp
cs
push
int
adc
lret
sub
in
sub
fbstp
push
lahf
xchg
add
fs
push
pop
rcrb
add
jb
enter
sub
pop
mov
fcompl
out
scas
jns
inc
xchg
call
test
push
add
in
int3
xchg
insb
mov
ljmp
cmpsl
ret
mov
pusha
cmp
add
lods
aaa
jge
imul
dec
lahf
jae
movsl
add
pop
xchg
dec
add
cmp
subb
jae
imul
out
push
scas
aas
sub
mov
mov
scas
cmp
mov
iret
jb
icebp
ljmp
pop
and
in
xor
and
sbbl
std
fs
mov
and
jp
iret
jno
mov
add
sbb
fs
test
sub
jae
aad
mov
lods
out
imul
data16
and
stc
insl
mov
jbe
sbb
in
aas
call
pop
or
push
xchg
in
into
pop
xchg
or
stos
adc
add
dec
fwait
xlat
add
mov
sbb
adc
cmp
in
dec
jae
int3
lods
in
or
or
xchg
sub
mov
out
xor
arpl
add
in
setno
outsb
mov
push
adc
mov
cmpsl
jmp
stos
cmp
in
sub
leave
add
int3
push
mov
xchg
mov
add
jbe
stos
dec
inc
add
fidivrl
adc
imul
sti
test
cmc
icebp
jne
add
insl
push
jl
es
ss
add
xchg
add
stos
sub
sbb
push
les
cmpsl
mov
and
add
arpl
aaa
add
pusha
add
mov
ret
cmp
xchg
repnz
lds
adc
add
imul
add
add
jae
add
jae
add
add
add
add
dec
add
add
add
add
add
jb
add
add
add
add
add
add
add
inc
inc
add
add
push
jns
add
xor
inc
add
add
push
add
add
add
dec
outsb
add
add
add
add
add
dec
add
add
add
bound
add
add
add
add
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
dec
add
add
add
jae
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
inc
add
add
inc
add
add
add
add
add
add
push
add
push
push
add
add
add
push
add
add
add
jp
add
add
add
jbe
add
add
add
jae
cmp
add
insb
add
add
add
inc
add
add
add
xor
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
xor
add
insl
add
add
add
pop
add
add
push
add
add
add
add
imul
add
dec
add
xor
push
jo
add
add
push
inc
add
add
inc
add
jb
add
dec
add
pop
add
add
inc
pop
pop
aam
outsb
and
jl
adc
push
cs
inc
loopne
sbb
mov
out
dec
movsl
imul
pushl
icebp
push
cld
pop
jae
dec
popa
inc
shlb
pop
test
jg
inc
jnp
int
inc
xor
outsl
mov
sbb
inc
push
gs
jge
mov
dec
push
cmp
movsl
xor
inc
jnp
inc
gs
jne
jb
outsb
pushf
push
xchg
fs
dec
std
push
push
jne
fisttpl
int3
js
fwait
popaw
jne
das
std
dec
dec
sub
addr16
xchg
or
add
fisttpll
pop
dec
cmc
push
add
cmp
and
imul
lret
sahf
mov
or
mov
jecxz
cmpsl
dec
cmpsl
inc
rorl
repz
pop
fs
insl
jbe
insl
add
dec
push
push
inc
sbb
dec
push
dec
cmc
sbb
or
into
sub
dec
xor
or
or
sub
inc
push
dec
daa
dec
xor
pushf
add
inc
jns
push
and
cli
movl
and
jae
stos
call
jo
out
push
out
inc
push
jne
sub
mov
jae
repz
push
cmp
mov
inc
inc
push
jb
dec
mov
outsl
dec
inc
repz
dec
jae
rclb
test
insl
xchg
add
jb
ret
xchg
mov
jo
jns
mov
outsb
decl
das
inc
js
inc
jnp
mov
ret
cltd
ret
dec
ret
mov
ret
jmp
mov
into
mov
or
lea
and
jo
shlb
cmpsb
ds
mov
push
inc
addr16
lcall
xlat
sti
pop
into
data16
pop
stos
fstpl
sub
xchg
add
cmp
push
push
inc
and
je
lret
movsb
pop
das
sub
sub
rcll
push
pushl
nop
xchg
insb
inc
sub
inc
push
arpl
jno
pop
and
xchg
dec
xchg
push
lidtl
lods
mov
insl
addl
lock
push
popf
sahf
fs
int
pushf
data16
lret
push
mov
rcll
sti
dec
in
subl
mov
mov
loopne
hlt
insb
sbb
push
push
xor
jae
jg
or
test
test
mov
call
jno
outsb
shll
and
jno
iret
dec
lret
imul
jne
cmpsb
dec
pop
loope
inc
jns
loop
outsl
data16
leave
ficomps
lea
xchg
xchg
inc
cld
cmp
mov
ss
ret
ret
pop
push
ja
fwait
xor
mov
xchg
add
arpl
mov
insb
adc
jecxz
cli
cmp
jecxz
jp
sti
popa
sub
sahf
scas
fistpl
stos
sub
iret
leave
or
out
dec
mov
jecxz
lahf
cli
cmpsl
leave
mov
aas
rolb
or
dec
dec
push
push
push
push
cmp
inc
cmp
loope
ss
cmp
xor
cmp
lcall
xor
xorb
incb
pop
jae
add
stos
stc
sbb
mov
imul
fisttps
mov
in
sub
rcrl
rcr
xchg
lahf
mov
mov
mov
ljmp
push
and
or
dec
addr16
pusha
jo
jecxz
mov
js
insb
out
and
jb
pop
ds
xor
mov
stc
fs
rorb
sub
je
or
xor
jns
cmp
ds
or
xchg
in
insl
bound
push
jne
mov
cwtl
arpl
ret
fldcw
outsl
push
fs
jg
cmp
xor
fildll
xchg
je
push
test
and
dec
jmp
adc
mov
stos
jmp
popf
ss
push
inc
push
cmp
mov
shrl
insl
cld
sti
push
inc
inc
mov
ja
xor
mov
mov
loopne
cmp
adc
and
lret
jo
arpl
adc
mov
addr16
fnsave
insb
pop
addr16
lret
pmovmskb
inc
cmpb
rcll
mov
addr16
xchg
inc
andb
inc
bound
mov
jge
lret
or
mov
xchg
cwtl
cmp
add
add
add
add
add
add
imul
add
add
add
add
add
insl
jp
add
add
outsl
add
add
add
add
xor
add
data16
add
add
pop
inc
dec
add
outsl
add
add
add
add
add
inc
add
add
add
xor
add
jns
add
add
add
insb
add
add
add
add
add
jo
add
add
add
jae
add
arpl
add
jne
add
add
imul
add
push
add
add
add
add
arpl
cmp
jne
add
add
jb
add
xor
add
add
jp
add
add
xor
add
add
dec
add
add
add
add
jbe
dec
add
add
add
outsl
add
pop
add
add
add
inc
add
add
xor
bound
add
add
add
outsb
add
add
add
push
dec
add
add
add
inc
push
add
dec
add
add
add
add
add
add
add
pop
add
dec
xor
add
add
inc
add
add
add
add
add
add
add
add
add
cmp
jb
add
add
cmp
add
inc
js
add
data16
add
inc
add
dec
add
add
add
dec
add
add
add
add
inc
add
xor
xor
add
dec
add
add
add
dec
add
dec
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
inc
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
inc
add
pop
add
bound
add
cmp
aad
je
sub
std
les
adc
sub
pop
jae
ljmp
cltd
xchg
fstps
repz
mov
lock
sbb
ficoml
aas
push
adc
mov
fisubrl
pop
sub
cli
and
ja
jle
xchg
sub
pop
in
adc
popa
pop
sub
jbe
ja
dec
jl
jge
divl
nop
mov
lret
cltd
xchg
neg
lret
aad
jle
repz
imul
adc
xchg
out
outsb
sti
sbb
rorl
mov
xor
and
inc
mov
mov
ret
imul
fwait
xor
pop
sbb
stc
jne
inc
pop
pop
mov
inc
and
das
jl
lcall
ret
popa
push
or
jmp
add
movsb
outsb
mov
xchg
repz
test
push
shll
test
and
outsl
jmp
push
divl
jle
stos
stos
call
push
cmpsl
iret
sub
push
xor
adc
jmp
lock
pop
cs
fbld
cld
or
test
pop
dec
daa
leave
or
cmc
stos
push
nop
push
loopne
out
pop
or
fs
mull
int3
lods
xchg
lret
push
mov
icebp
xchg
cld
xor
mov
lea
cmp
mov
test
out
lods
mov
mov
push
xor
push
cmp
mov
mov
xchg
xrelease
inc
arpl
popf
pop
sub
jae
inc
jmp
xchg
or
sbb
scas
mov
mov
cmpsl
xchg
lods
xchg
cltd
mov
inc
fwait
pop
add
bound
sub
dec
cld
dec
xchg
les
jl
push
mov
pushf
inc
andb
das
pushf
fsts
dec
in
cltd
mov
jle
push
fs
mov
shrb
mov
jmp
cwtl
notb
mov
dec
lea
and
sti
inc
rcrl
jmp
dec
outsb
xchg
shll
push
sbb
xchg
sbb
test
scas
xchg
aaa
add
ja
jmp
pop
pmaxsw
add
mov
daa
call
dec
ja
int3
leave
fidivl
test
mov
push
shll
mov
movsb
lret
xor
mov
shl
jmp
popf
push
pop
cwtl
das
mov
pushf
xchg
arpl
rcll
jmp
iret
mov
shlb
push
shlb
jbe
shll
mov
xchg
and
adc
cmp
das
jmp
add
mov
xchg
push
xor
movsb
xchg
orl
ja
iret
jmp
loop
repnz
repz
out
sbb
add
adc
aad
mov
mov
test
jle
iret
jle
enter
jmp
jle
jae
push
push
das
mov
cmpsl
nop
mov
lret
cltd
cmp
pop
aaa
int3
mov
mov
mov
outsl
mov
xchg
je
dec
lods
pop
repnz
xor
adc
in
cmpw
aad
jne
fwait
and
jne,pn
dec
mov
jnp
mov
or
fisttps
test
mov
sub
out
jne
push
xor
stc
mov
dec
xchg
mov
xchg
mov
outsb
dec
cmp
or
out
movsb
pop
pop
dec
lretw
add
gs
stos
push
call
js
or
jle
pop
dec
jecxz
mov
enter
test
rorl
jmp
cmpl
js
shlb
scas
or
xor
lds
aad
mov
mov
das
xchg
int3
flds
inc
xchg
insl
stos
mov
push
dec
imul
jne
inc
ror
js
mov
rol
loop
mov
arpl
mov
mov
push
movsb
jns
mov
mov
push
stos
sbb
imul
mov
paddq
mov
pop
outsb
add
insb
jmp
mov
xchg
mov
mov
fsub
sub
int
mov
jecxz
mov
lret
mov
loop
jge
pop
out
call
mov
add
jp
add
popa
out
jmp
pop
xchg
or
pop
loope
push
mull
xor
psrld
movsl
sbb
xor
ror
int3
xchg
out
rcr
xor
xor
cmc
int3
cwtl
pop
or
call
xor
mov
push
pop
lret
inc
mov
pop
add
sbb
or
mov
mov
xor
sub
shrb
jp
inc
add
or
xor
fwait
rclb
pop
psrad
mov
cmp
adc
int3
lods
push
bound
jmp
call
fiaddl
push
adc
outsl
inc
fistl
adc
mov
popf
mov
push
lcall
inc
or
lcall
andb
sbb
call
push
mov
rcrb
and
pushf
lock
js
aaa
sbb
repnz
aad
loopne
daa
jbe
pop
sbb
les
daa
jbe
xorb
mov
or
inc
cpuid
aas
cwtl
mov
faddl
mov
lret
sbb
int3
mov
nop
pop
clc
clc
push
jnp
xorl
pop
push
insl
mov
rorb
pop
push
loopne
pop
and
sub
loopne
fwait
or
sbb
and
or
in
push
add
leave
aaa
aas
pushf
push
popf
int3
mov
ds
std
lea
std
ds
push
cmp
sub
pop
icebp
pop
add
scas
add
pop
mov
sub
dec
xor
outsl
jp
and
mov
mov
sub
mov
into
adc
sub
call
jl
xchg
adc
ds
shlb
mov
ja
mov
pop
idivb
js
ljmp
imul
sub
pop
xchg
test
daa
jecxz
cmp
fisttps
mov
gs
in
pop
jge
mov
cmp
pop
fisttps
movsb
insb
test
fsts
mov
ja
sbb
push
push
dec
jle
loopne
push
ret
clc
mov
mov
dec
add
push
loopne
sub
mov
ljmp
and
mov
insb
std
mov
movsb
enter
jbe
outsb
mov
gs
cli
mov
jl
jp
mov
pop
dec
mov
scas
inc
les
or
mov
cmp
push
lret
mov
or
mov
cmp
pop
les
cmp
lret
popf
les
rol
pop
cs
cmpsb
fildll
lcall
cmp
cmp
or
and
add
and
pop
nop
mov
and
repnz
int3
imul
imul
arpl
mov
inc
arpl
movsl
arpl
lea
mov
adc
mov
mov
jmp
rcll
test
lret
scas
stc
sarb
mov
mul
test
dec
test
cmp
lods
cmp
mov
testl
mov
mov
mov
xlat
pop
shrl
lods
and
mov
inc
dec
cwtl
push
mov
xchg
mov
pop
out
add
dec
jae
mov
adc
push
sub
mov
and
or
sub
icebp
adc
les
jge
rorb
pop
sub
jmp
movb
push
lret
pop
cmpsl
and
pop
out
jl
loopne
sub
xor
pop
push
xor
dec
dec
cmp
dec
cmp
adc
pushl
lock
and
add
xchg
inc
add
push
daa
push
push
inc
push
int3
pop
add
jns
mov
call
pop
scas
pushf
push
dec
xchg
mov
jbe
pop
jbe
jns
imul
scas
or
or
dec
rclb
aad
xchg
inc
push
mov
int3
dec
dec
xchg
dec
mov
mov
cmp
sub
jb
lea
cli
test
outsl
mov
add
xchg
pop
pop
mov
int3
mov
mov
mov
jle
ja
or
dec
mov
xor
push
sti
jnp
xchg
je
insb
lcall
dec
out
imul
dec
jb
or
bound
add
dec
push
and
inc
lret
repz
dec
in
loopne
test
add
add
push
add
jno
add
add
add
add
add
add
xor
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
jp
add
add
add
push
add
add
add
add
dec
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
inc
arpl
add
aaa
add
add
add
inc
add
add
add
add
insl
add
add
add
add
dec
add
add
jo
add
add
add
outsl
arpl
add
add
add
add
add
add
dec
add
push
add
push
add
je
jno
add
add
add
add
add
add
add
add
add
push
add
add
js
outsl
add
add
add
add
add
add
xor
arpl
pop
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
bound
xor
add
add
jb
add
jbe
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
push
dec
add
xor
add
add
add
inc
add
add
pop
add
add
add
pop
imul
add
dec
add
outsb
pop
add
add
add
add
add
push
add
dec
add
add
push
add
pop
add
dec
add
insb
in
fnstenv
mov
cwtl
stos
and
push
push
push
sbb
outsl
outsl
push
jae
pop
inc
call
les
sub
test
icebp
jbe
or
mov
data16
mov
fwait
xor
mov
and
movsb
in
je
mov
shlb
or
pushl
bound
sbb
aas
call
sti
lds
sbb
mov
mov
add
stos
or
cmc
cmp
paddusb
xor
mov
incb
repz
push
jb
cld
push
shrl
push
push
call
or
pop
int
add
inc
popa
fs
xor
icebp
add
fbstp
cmp
fisttpl
mov
push
and
dec
cmp
call
ljmp
cli
int
loope
or
cmp
icebp
jae
std
pusha
sbb
into
mov
lret
je
lock
add
mov
cmpsl
iret
leave
cmp
movzwl
push
push
or
add
cmp
sbb
cli
pop
sbb
popa
bound
and
sub
lahf
das
xchg
sbb
cmp
sub
stos
dec
dec
test
inc
push
xchg
int3
jmp
out
inc
sbb
mov
add
test
and
inc
push
lcall
scas
or
cmp
push
clc
sbb
add
int3
xor
pop
sbb
dec
push
test
lock
and
in
push
stc
jbe
cmpsb
add
xor
pop
pop
mov
xor
roll
cmpb
xchg
ficoml
bound
enter
jnp
clc
xchg
les
pop
mov
mov
pusha
out
lods
xchg
push
jmp
ljmp
lock
sti
xorb
int
lods
ljmp
orl
sub
add
inc
sti
xor
sti
shlb
scas
test
not
not
fs
loopne
mov
shl
outsb
cli
loopne
lock
jmp
lret
jl
lock
ror
push
cmp
test
push
mov
xchg
inc
cmpl
add
cli
mov
push
shrb
lret
rcl
and
sbb
mov
imul
enter
mov
mov
arpl
lock
pop
or
mov
add
insl
es
mov
jb
data16
enter
aas
shl
mov
jnp
rolb
leave
or
jle
or
movl
loopne
lret
orb
mov
inc
scas
add
stos
add
enter
clc
mov
rol
fwait
scas
repz
ret
mov
mov
mov
std
adc
xor
and
je
cli
fwait
cmp
je
ret
stc
mov
push
inc
or
into
insb
xor
xor
mov
popa
adc
jne
mov
lahf
je,pn
mov
mov
pop
lahf
and
dec
pushf
sub
mov
push
sub
pop
add
mov
movb
mov
jne
mov
xlat
popf
outsl
mov
movsl
es
cltd
sbb
inc
and
ja
outsb
loope
mov
cmpb
lock
popa
push
push
mov
ret
imulb
xor
fxch
mov
xlat
loope
or
mov
mov
xchg
dec
inc
bound
std
or
sub
jg
cmpb
insb
loope
push
mov
call
imul
pop
mov
sbb
add
cwtl
out
jl
arpl
mov
cwtl
clc
movl
jns
cmp
push
call
rcrl
xor
jns
pop
push
mov
add
shl
cmp
in
inc
je
jmp
mov
pop
jmp
testl
xlat
add
add
inc
in
add
add
pop
cmp
aam
dec
xor
sub
and
sbb
adc
pcmpeqw
sub
por
shl
push
dec
or
loope
add
mov
outsl
stc
add
mov
pop
popa
pop
dec
dec
daa
pop
rolb
or
imul
andb
xchg
ljmp
iret
lds
dec
clc
cld
jne
sarb
hlt
leave
les
mov
sbb
popa
pop
mov
pop
stos
scas
pop
rcr
pusha
xor
or
adc
add
loopne
sbb
leave
push
push
adc
rorl
pop
pop
mov
pop
sti
test
add
ljmp
sub
neg
sbb
inc
jae
test
jmp
pop
inc
and
rcl
pop
das
mov
lds
mov
dec
fstpl
adc
bound
sub
je
iret
adc
inc
jle
orb
stc
flds
jle
repnz
mov
shlb
xchg
mov
jg
push
mov
icebp
push
sbb
pop
mov
and
scas
cmp
sub
das
out
std
cmp
lea
jnp
jno
stc
les
add
stos
push
push
insl
test
and
pop
dec
clc
addl
int3
xorl
pushf
incl
int3
test
mov
std
xor
mov
repnz
push
fisubrs
call
adc
mov
hlt
sbb
jne
iret
mov
xor
les
outsl
inc
or
jecxz
jl
cmpb
mov
fyl2x
repz
adc
in
push
or
testl
dec
mov
mov
sarl
mov
adc
loop
sbb
push
xor
sti
jp
mov
movsl
sbb
or
push
push
mov
push
jmp
pusha
outsb
push
sbb
pop
arpl
push
ds
jae
movsb
mov
hlt
dec
push
xor
pop
loop
jecxz,pn
je
mov
in
sbb
xor
mov
add
mov
data16
ja
push
push
jle
mov
adc
jmp
stc
out
adc
rcrl
je
push
rcll
pop
mov
jmp
repz
gs
push
call
cmp
xchg
mov
push
pushl
rcrl
cmp
cmp
scas
imul
jecxz
jp
sbb
and
mov
mov
stc
inc
inc
ret
jno
test
pop
mov
into
push
push
ret
mov
sbb
std
iret
mov
mov
and
in
rcrl
int
into
in
xchg
push
and
mov
add
cmc
das
andl
and
fstpl
sub
or
dec
dec
jl
and
mov
js
test
loop
incl
into
insb
sbb
gs
sbb
dec
pushf
negl
add
lods
pushf
mov
cmp
jle
sub
js
movsl
lret
add
xchg
into
movsl
int3
adc
cmovo
std
cs
leave
inc
int3
ret
cmp
mov
dec
shlb
scas
lods
testl
adc
adc
cmpsl
test
push
mov
mov
and
lods
dec
orb
insb
rorb
int
fwait
dec
div
lods
cmp
shrb
outsl
mov
cltd
mov
pop
or
rcrb
xchg
je
lahf
outsb
ud0
cmp
ds
inc
fidivrs
shlb
orb
std
data16
repz
sbb
mov
rcrl
arpl
mov
pop
js
fs
shrl
or
sbb
lahf
push
ja
mov
sbb
std
test
call
mov
mov
cmp
cmp
xorb
rcrb
into
adc
or
sahf
and
push
sbb
ljmp
or
mov
aas
jns
xor
outsl
lcall
scas
shrb
push
shlb
sahf
ss
mov
add
mov
mov
or
ja
lret
loopne
pop
xor
movsb
xor
dec
mov
push
arpl
adc
cld
add
loop
mov
inc
pop
jae
push
sbb
movsb
enter
or
jl
xchg
aaa
mov
inc
mov
fwait
push
out
sub
add
stos
nop
push
xor
sub
cmp
adc
push
cmpsb
filds
inc
or
push
dec
and
or
inc
jecxz
jne
push
mov
icebp
dec
xchg
clc
mov
adc
push
sbb
mov
push
xchg
nop
into
push
sbb
cmpb
jmp
mov
lods
pop
pop
inc
sahf
cmpl
jne
pushl
mov
inc
adc
add
add
or
add
dec
mov
xor
inc
cld
add
jo
pop
or
addb
fstpt
ss
dec
jg
jecxz
add
lea
pop
pop
pop
leave
ret
xor
cmp
or
cmp
je
dec
push
jecxz
int3
dec
mov
jmp
mov
mov
pop
loope
xchg
and
or
lret
scas
gs
and
movsl
adc
in
mov
mov
mov
inc
icebp
shr
push
call
call
test
xor
test
mov
push
dec
or
pop
pop
fs
fstpt
push
inc
add
pop
jmp
leave
fs
adc
and
imul
dec
inc
inc
call
pop
pop
leave
mov
loope
inc
add
stos
push
scas
nop
pop
jnp
xlat
enter
and
pop
pop
jp
jmp
ret
mov
jns
js
fs
jl
out
adc
cltd
dec
sub
orl
cmpsl
mov
sbb
add
inc
bnd
outsl
push
dec
fisttpll
test
adc
fnstenv
repnz
out
lahf
scas
call
adc
ret
js
cli
mov
sub
es
in
push
fcoml
negb
cmp
movsl
cmp
xorl
push
mov
or
xor
pop
pop
xor
mov
dec
mov
stos
or
jnp
repz
pop
stc
push
inc
nop
dec
in
scas
fidivrl
lret
stc
in
dec
call
repz
dec
stc
sete
popf
sub
icebp
xor
pop
inc
mov
xor
jnp
push
mov
sub
test
scas
lret
iret
jmp
lea
dec
addr16
je
rcll
arpl
add
pop
or
setne
je
cmpsl
sbb
rorl
out
jae
notl
mov
mov
push
popa
iret
push
and
clc
aad
clc
pop
xor
repz
mov
in
mov
repnz
push
jecxz
push
mov
cmpsl
sub
or
pop
fldenv
lahf
dec
sub
jne
jp
xchg
cmp
pop
jge
jp
subl
popf
mov
sahf
data16
enter
sbb
out
jns
arpl
add
loop
sub
sub
scas
test
scas
lea
mov
call
movsl
cmpsl
push
xchg
jp
mov
enter
std
mov
popf
jo
leave
or
xor
enter
fldt
int3
in
icebp
inc
jmp
inc
mov
jp
scas
sti
leave
test
insl
cli
adc
shrb
inc
in
cmp
lds
jae
pusha
fdiv
outsb
icebp
enter
sarl
adc
adc
cld
aam
push
cmp
sbb
jo
xchg
mov
mov
mov
mov
rcrl
shll
jno
out
aad
nop
pop
insb
out
mov
sub
iret
insb
mov
push
jmp
dec
mov
sub
dec
sbb
add
in
push
sub
aas
cmp
ret
adc
adc
jge
into
jns
test
jl
stc
push
imul
push
stos
insb
out
sub
adc
add
loop
decb
bound
jg
mov
lock
je
mov
loopne
sti
call
cli
xor
xor
ret
push
jns
add
mov
inc
mov
call
test
je
push
pop
jmp
mov
test
or
pop
dec
pop
inc
and
out
call
or
dec
push
repnz
inc
std
pop
inc
call
aad
std
out
add
out
neg
sbb
jmp
add
insl
shrb
in
sbb
add
pop
or
rorb
test
insb
imul
call
data16
dec
fdivr
jecxz
dec
dec
stc
hlt
mov
pop
ss
and
mov
add
and
push
ret
mov
test
add
enter
sbb
lea
and
stos
jno
sti
lods
sbb
test
jp
sbb
test
jne
push
push
pop
mov
outsb
in
sbb
add
add
aaa
add
add
dec
add
add
cmp
add
add
add
add
inc
add
add
add
add
jno
add
add
add
add
dec
add
jne
push
dec
add
add
add
add
add
add
pop
add
cmp
add
add
dec
add
add
add
add
add
outsl
dec
inc
push
add
add
dec
dec
push
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
outsb
add
add
add
xor
outsl
add
add
outsb
data16
add
add
add
jne
add
add
ja
add
inc
add
add
add
add
add
add
add
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
arpl
add
add
add
add
inc
add
add
add
jp
add
pop
add
add
dec
add
push
add
add
add
jno
add
add
dec
add
add
outsb
add
add
add
pop
add
add
add
jae
add
add
jne
add
add
add
add
add
add
add
add
add
jns
jno
pop
add
jae
add
add
outsl
inc
pop
ja
cmp
outsl
add
xor
imul
add
dec
add
add
add
outsl
dec
add
add
inc
add
add
add
add
add
pop
add
inc
add
add
js
push
add
add
add
imul
add
add
insl
add
fidivl
push
sbb
shrb
loopne
clc
mov
nop
dec
xor
sub
jg
call
loope
in
ljmp
stc
mov
xor
add
mov
jl
out
mov
xor
lret
call
cwtl
std
cmp
inc
and
cmpl
dec
or
mov
xchg
mov
andl
popf
mov
leave
and
sbb
mov
out
cmovno
fxch
ja
outsl
lods
cld
add
lea
dec
adc
dec
lret
ljmp
shl
roll
leave
lock
or
and
movsl
mov
or
lds
mov
imul
rorb
icebp
mov
cli
dec
cmpl
not
rorl
mov
rorb
out
or
xor
push
loopne
adc
push
pop
pop
es
adc
push
in
adcl
mov
push
lahf
mov
add
mov
adc
or
daa
jne
add
test
mov
scas
imul
mov
int
enter
adc
jg
xor
adc
and
add
lods
mov
sti
mov
add
adc
add
pop
pop
out
or
cmp
cmp
shlb
mov
or
inc
lock
stos
loopne
and
sti
sub
lret
mov
adc
xchg
fnstenv
sti
lret
sti
adc
or
enter
stc
lret
es
add
and
loop,pt
popa
jne
adc
cwtl
out
pop
fwait
rorb
sbb
icebp
adc
mov
int
adc
sub
aam
and
pushf
or
iret
pop
aaa
test
jecxz
out
and
xor
or
or
mov
in
pop
clc
pop
fisubl
movsl
mov
out
aam
in
adc
das
cmp
mov
insl
adc
mov
xchg
imul
inc
jg
call
add
into
lods
fdivrl
test
pop
pop
pop
mov
clc
jmp
jno
xchg
clc
cld
out
cld
push
std
es
mov
loop
pushf
add
orl
mov
addr16
mov
stos
loope
dec
pop
call
cmp
inc
in
mov
push
cs
or
cmp
fs
jmp
add
sahf
cmpsl
cld
dec
sub
inc
cmp
decl
stos
sbb
imul
push
push
push
loope
lock
mov
int3
sti
push
divb
xchg
mov
fldt
jmp
lcall
cltd
loop
inc
jp
and
insl
leave
aaa
lret
adc
mov
push
addr16
push
test
dec
iret
adc
in
jns
fsubp
pop
aas
cmc
aad
add
test
out
mov
or
clc
mov
mov
inc
ljmp
sbb
fwait
add
jb
mov
cli
ret
xor
test
and
mov
and
into
hlt
scas
fiadds
xor
orl
xor
repnz
push
xor
lahf
rclb
jae
jmp
mov
mov
mov
push
in
stos
call
fwait
sub
jb
inc
xchg
fisttps
mov
std
daa
mov
dec
xchg
pop
idiv
icebp
add
mov
repnz
add
movsb
lret
adc
xor
into
adc
mov
leavew
aad
lret
mov
dec
stos
scas
int3
pop
sbb
add
ret
inc
lret
ljmp
or
lea
jp
jp
out
cmp
aam
xchg
gs
cmp
mov
int
out
in
gs
inc
fnstcw
out
mov
shl
push
loope
and
into
lock
pop
xchg
adc
clc
jl
pop
mov
jp
loop
imul
call
pop
ds
into
pop
inc
fnsave
mov
jecxz
push
lods
les
xor
call
fistl
xor
sub
stos
mov
hlt
outsl
stos
sbb
push
ljmp
imul
jp
push
or
xchg
ljmp
inc
arpl
push
cmp
jnp
mov
gs
clc
pusha
add
bound
add
add
push
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
dec
add
add
add
push
add
inc
add
inc
add
inc
add
add
add
add
add
dec
add
push
add
dec
add
add
add
add
add
jne
add
add
jo
add
insb
add
push
add
add
add
inc
add
cmp
add
pop
add
add
inc
add
add
data16
add
imul
jno
add
add
add
xor
add
add
bound
add
add
add
add
add
add
push
add
pop
add
imul
add
outsl
jno
xor
add
outsl
add
add
bound
add
add
add
add
xor
add
dec
xor
add
add
xor
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
inc
add
add
xor
add
inc
js
inc
add
add
add
imul
add
pop
add
add
add
add
add
add
add
je
add
jp
add
add
add
add
add
add
add
add
inc
add
dec
add
cmp
sbb
add
push
jnp
pop
cwtl
add
pop
dec
scas
dec
mov
insb
and
push
lret
inc
push
push
and
sbb
or
add
data16
out
fsubr
jae
jbe
repz
mov
loope
sbb
lret
repz
sub
jo
cli
pop
clc
jle
xlat
pop
sub
mov
cltd
sub
aad
and
cmc
or
repz
out
inc
add
or
mov
mov
in
dec
inc
pop
es
and
jmp
shrb
push
push
icebp
imul
cmp
jmp
mov
lret
daa
or
inc
call
hlt
jno
mov
jg
add
iret
or
push
out
sub
pop
jg
add
xor
sub
ret
push
lcall
loope
loop
imul
xor
lea
sti
push
xchg
jae
test
sbb
repz
insb
mov
sahf
fcomi
sbb
push
mov
sti
jb
jle
out
dec
push
push
jp
repz
lahf
mov
adc
push
jle
test
sbb
bound
cltd
xchg
mov
cmp
cmp
pop
jp
stc
je
test
pop
push
sbb
mov
xchg
and
jo
addb
xchg
stc
cmpsb
xor
in
iret
into
or
lods
mov
push
dec
cmpsl
stc
jmp
mov
xlat
sub
mov
add
aad
mov
mov
xor
and
ds
lods
rcll
in
mov
cmpb
xlat
push
test
mov
sbb
dec
and
fsubr
cmp
sti
inc
cs
lret
sub
aam
cmp
xchg
outsl
jge
test
adc
push
jg
or
aas
sub
lods
jns
cmc
adc
test
mov
fcmovnbe
loope
sbb
test
jle
dec
ja
add
pop
cmp
and
mov
inc
jp
pop
jl
test
sahf
add
loopne
shl
stc
push
in
sti
push
pop
nop
test
sahf
push
xor
add
sub
jp
insl
fadd
loopne
xlat
cmc
adc
or
shr
and
or
and
ds
pusha
mov
leave
std
sbb
call
int3
fidivl
daa
aaa
sbb
or
cmpb
push
je
icebp
lds
ljmp
mov
push
mov
pop
push
cmp
test
jecxz
add
sbb
jl
or
fistl
sub
jecxz
inc
outsl
stc
xorb
and
cli
lret
out
sbb
daa
fistl
xchg
popf
mov
aaa
pop
mov
xor
cmp
xchg
aas
sub
push
imul
call
std
pusha
fldcw
stos
dec
push
xchg
cmpsl
add
and
jbe
jmp
mov
dec
pop
out
mov
fcmovne
pop
lahf
cmp
xchg
mov
push
loope
dec
add
cld
pop
sub
mov
call
fbld
push
push
in
or
xchg
es
clc
dec
xor
mov
add
addr16
lret
cmpsl
inc
jo
arpl
aam
pop
sub
cmp
fs
pop
ss
add
addr16
stc
or
hlt
movsb
add
xchg
in
in
adc
jp
jno
xchg
insl
inc
mov
add
jmp
addl
shll
or
ljmp
xchg
adc
cld
int
out
mov
iret
dec
pop
add
psubsb
mov
xchg
add
test
sub
pop
fimuls
pop
sbb
idivb
jo
lods
or
stos
mov
and
in
in
dec
push
cmpsl
cwtl
scas
ror
inc
xchg
test
mov
in
sub
aas
xchg
aaa
inc
inc
add
xor
in
popa
push
add
xchg
repz
xchg
aaa
daa
outsb
and
fistpl
out
add
std
cmpsb
shrl
cmpl
notb
push
xchg
or
movsb
notl
add
fidivs
cwtl
int3
shlb
dec
add
outsb
hlt
inc
imul
in
lock
lret
cmp
daa
ss
imul
pop
loop
sub
dec
addr16
ljmp
push
js
cmp
mov
pop
xchg
dec
testl
js
hlt
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
jb
push
add
add
add
pop
inc
dec
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
aaa
inc
add
add
inc
add
push
add
add
xor
add
popa
add
cmp
add
add
add
add
push
add
add
add
add
add
arpl
push
add
add
add
add
add
dec
add
add
add
add
add
add
add
pop
add
pop
dec
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
push
jb
add
add
add
add
add
dec
add
add
add
push
dec
add
jbe
add
add
add
add
add
add
arpl
add
add
add
xor
add
add
add
add
add
push
add
add
add
inc
add
add
dec
add
add
add
add
add
add
js
add
add
dec
add
add
add
add
add
add
add
add
aaa
jb
add
add
add
cmp
add
add
add
insb
add
dec
add
add
add
add
cmp
add
add
add
jns
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
pop
push
add
cmp
clc
notl
scas
dec
dec
int
sbb
out
cmp
mov
mov
inc
stc
jg
imul
cmp
clc
je
cmpb
jnp
pop
adc
pop
out
cld
sbb
pop
in
xchg
ret
xchg
loop
or
xor
les
mov
or
rorb
fstpt
out
negl
inc
jmp
leave
je
lcall
jmp
push
scas
out
push
cmp
bound
cli
mov
mov
push
ret
cltd
imul
mov
jnp
imul
jo
sub
push
lea
shl
out
sti
dec
mov
jl
inc
inc
outsl
jmp
inc
xchg
jno
in
movb
aaa
imul
jb
push
pop
pop
pop
xchg
pop
push
fadds
jo
movsb
add
and
pop
into
roll
xchg
lods
cmc
loopne
jno
ja
sub
call
scas
push
pop
adc
loop
mov
adc
jno
stos
cmp
sbb
das
call
mov
imul
xor
rorl
push
incb
add
call
add
push
push
inc
addr16
inc
outsl
sub
jbe
fcmovnu
add
mov
fwait
int
imul
lds
lea
rorl
xor
jl
imul
xchg
arpl
push
ret
adc
inc
outsl
or
nop
mov
mov
and
push
ret
xchg
mov
in
lret
test
test
add
add
jmp
sbb
mov
test
pop
ret
mov
pop
adc
xchg
popa
mov
adc
mov
inc
pop
repz
cmp
jb
orb
outsl
std
mov
inc
aaa
sbb
add
adc
sti
jl
pop
les
mov
lret
mov
clc
add
cmp
mov
int
into
jno
cmp
mov
movsb
add
es
daa
cmp
or
out
shrb
loopne
lret
adc
inc
lahf
repz
jb
fmuls
push
dec
loopne
inc
xor
adc
imul
sbb
les
mov
dec
inc
jmp
push
inc
mov
hlt
je
orps
pusha
lret
sbb
mov
jne
addl
popa
loop
les
pop
fwait
inc
jb
add
mov
inc
mov
jl
add
mov
cwtl
cld
call
dec
xchg
popa
hlt
data16
cltd
push
cmp
jae
out
inc
pop
push
push
out
int
push
push
ds
icebp
fcompl
push
mov
mov
fs
stc
leave
outsl
inc
and
in
push
push
call
fwait
xor
dec
int
mov
repnz
or
mov
mov
rorl
bound
lods
push
outsb
movsl
popf
xchg
test
ds
std
or
stos
xchg
scas
jg
clc
imul
aaa
stc
imul
sbb
aaa
movsl
cmp
jmp
fs
roll
lea
xlat
popa
mov
sbb
cmc
or
ljmp
pop
insl
cmp
lds
jg
fistpll
out
or
sbb
mov
inc
mov
into
call
mov
mov
adc
or
sbb
enter
cmpsl
dec
mov
iret
nop
dec
dec
hlt
and
push
add
shr
jno
lret
mov
call
mov
and
jg
ror
cld
scas
shr
into
mov
lret
call
add
push
insl
cld
call
mov
aam
cmpsb
popa
sbb
ret
scas
out
scas
les
pop
inc
jae
jge
in
adc
aaa
xorb
cltd
ror
or
enter
movb
inc
dec
sbb
ret
mov
rorl
mov
or
mov
in
inc
xor
pop
stos
loope
data16
or
mov
and
not
jnp
inc
pop
or
dec
and
add
ret
shl
stos
jmp
jae
and
mov
iret
xchg
lret
lods
popa
dec
aam
ljmp
xor
fs
aas
cmp
das
push
arpl
fsubrs
scas
testl
pop
loopne
ret
scas
push
dec
cmovbe
mov
bound
data16
inc
stc
sub
add
scas
xlat
push
mov
dec
add
add
add
add
xor
inc
bound
add
add
add
add
add
push
add
inc
add
jb
add
inc
add
add
add
add
jns
add
add
add
add
add
jno
add
add
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
xor
add
jno
add
add
add
jns
push
add
jae
add
add
add
push
add
add
add
add
add
xor
add
add
xor
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
add
add
add
inc
add
insb
add
add
add
add
add
add
add
jne
add
inc
add
add
outsb
add
add
add
xor
add
data16
add
add
add
add
add
add
add
add
add
add
add
data16
add
dec
add
insb
add
dec
add
add
add
add
push
add
aaa
add
add
add
add
outsb
add
add
add
xor
add
add
xor
add
add
add
add
add
inc
add
data16
inc
add
push
add
add
add
jns
pop
add
add
outsl
add
add
add
ss
add
add
add
add
lock
ret
pop
call
xchg
adc
xchg
or
out
lret
cmp
test
cld
push
push
push
and
or
dec
in
ror
mov
lret
jnp
mov
mov
das
loop
sbb
fdivs
add
pushf
adc
mov
repnz
jnp
fs
fldenv
mov
xchg
in
jl
mov
lock
pushf
sub
nop
jae
mov
push
stos
fsubrs
cli
cmpsb
incl
icebp
mov
jmp
and
add
sub
add
and
repnz
xlat
sub
and
insl
shlb
movsb
adc
in
mov
ret
movzwl
mov
fsubs
cmc
push
pop
fistpl
scas
shrl
mov
imul
push
movsb
aas
sub
or
call
hlt
ret
iret
ror
stos
mov
adc
test
lret
xor
out
out
stc
call
ss
roll
js
clc
push
mov
out
sbbb
push
add
xchg
stc
push
push
ficoml
iret
jl
dec
rorb
xchg
je
dec
sbb
negb
jne
xor
dec
dec
pop
aam
add
aam
popf
sub
adc
xor
push
mov
ljmp
addr16
cld
adc
dec
repz
and
jge
and
lahf
testl
pop
pop
lods
adc
out
ljmp
andl
lods
pushf
push
aam
andl
cmp
movsl
or
clc
jg
and
call
inc
dec
push
jge
and
std
pop
or
daa
lret
out
jbe
insb
inc
add
lahf
sub
mov
jmp
popf
pop
pop
push
shr
pop
ret
lea
add
stos
test
pop
cmp
stos
bound
push
push
dec
push
pusha
in
push
ret
xor
lock
ror
pop
mov
jge
adc
in
incl
je
out
or
or
mov
enter
std
jne
xor
push
push
nop
sti
mov
xchg
mov
push
jne
mov
js
in
inc
or
push
add
data16
testb
scas
adc
ficompl
jecxz
dec
sub
ret
shll
add
jnp
mov
je
cmpb
or
xor
sti
mov
movsl
xor
push
dec
popa
mov
or
mov
fisttpll
cmp
test
sar
or
into
int
movsl
sbb
jnp
lds
nop
les
mov
jmp
fsubs
stc
enter
outsl
notb
mov
cld
das
cli
ftst
ljmp
loop
fcmovnbe
sti
mov
and
fnop
jmp
lods
shlb
mov
ja
stc
mov
push
test
xchg
sub
add
jge
sbb
loop
jmp
loopne
inc
adc
mov
repnz
out
pop
cltd
jecxz
mov
mov
jmp
pushf
or
loop
insb
mov
jmp
fcoms
test
out
fcoms
mov
mov
xchg
enter
sbb
inc
lret
xor
adc
lock
stc
daa
pop
stos
pushl
lret
rolb
mov
loope
mov
rclb
ret
or
insb
add
sti
test
stos
lock
into
fst
outsl
scas
mov
repz
jbe
jnp
arpl
jnp
jnp
add
test
test
pop
or
bound
push
int3
mov
mov
inc
subb
xor
repz
bound
sarb
leave
jle
and
jmp
and
inc
jne
pushf
push
dec
clc
inc
xor
xchg
mov
cld
cmovs
lahf
insb
xchg
cwtl
lret
repz
test
or
pop
lret
jae
mov
xor
cmp
mov
xchg
loop
movsb
mov
ljmp
cwtl
jmp
fmuls
stos
loop
cwtl
xorl
adc
mov
cmpb
ret
aam
and
scas
pop
mov
mov
mov
push
ret
nop
repnz
cs
cmp
in
xchg
arpl
mov
icebp
shl
cmc
hlt
cmpsl
jg
xchg
out
add
movsb
cwtl
shrd
push
shrb
inc
aam
mov
fstp
and
stc
jp
enter
pop
orl
cli
push
push
or
ja
lock
jp
and
add
js
mov
data16
nop
cltd
cltd
shlb
mov
scas
add
add
jp
leave
or
or
push
leave
sbb
es
push
enter
and
push
mov
push
arpl
jne
fisttpl
lock
shrd
int3
rcl
testl
or
cmc
fisubrl
decb
mov
lock
inc
sub
fcmovnb
sbb
data16
inc
lahf
loope
inc
ret
cmp
fisttpl
jp
and
jp
push
pushf
gs
mov
pop
mov
sbb
mov
shl
jne
movl
xor
das
lock
stc
rorb
ficompl
or
jmp
mov
cli
fs
imul
pop
sarl
and
shlb
mov
mov
rcr
mul
gs
push
enter
leave
adc
test
mov
xor
jo
cwtl
aaa
or
fdivl
out
fisubrl
mull
or
ficoml
sub
sub
aaa
insb
jp
push
push
lods
pop
leave
add
ret
lods
mov
mov
ja
fdivs
lods
push
mov
shl
lret
jecxz
aaa
lods
loopne
jmp
or
push
or
mov
adc
push
cmp
fwait
sbb
push
dec
jecxz
pop
leave
scas
add
jbe
pop
mov
xchg
push
scas
or
stc
or
fwait
mov
bound
xor
inc
test
int3
dec
jg
adc
pusha
pop
fstpt
ret
pop
mov
jnp
sbb
ja
mov
ret
jecxz
sub
dec
adc
arpl
mov
and
ljmp
into
ja
rorw
fisttpl
mov
cs
leave
ret
cmc
ror
imul
gs
in
push
idiv
pop
int
push
add
ret
dec
jecxz
or
add
imul
cs
dec
rclb
mov
idivl
test
bound
fadds
cmp
mov
fcomp
fwait
loope
jmp
andl
aaa
ret
ret
scas
inc
test
and
enter
jmp
ljmp
popl
mov
ret
jp
leave
add
das
jae
xchg
sbb
lret
or
pop
mov
int3
and
les
enter
lock
mov
adc
xchg
add
mov
jb
scas
mov
jne
int
lcall
flds
stc
add
jl
jne
lods
dec
or
pop
movsb
cmc
lods
push
nop
sbb
adc
xchg
rcrl
scas
cwtl
cltd
popa
jb
mov
add
repz
and
pop
dec
jmp
push
repnz
mov
lcall
xchg
repnz
cmp
adc
ret
mov
xchg
int3
xchg
mov
jo
dec
mov
sbb
dec
sub
inc
push
cs
or
xor
and
in
popa
jae
arpl
je
pop
outsb
addr16
faddl
cmp
or
cmc
lahf
imul
xchg
sub
outsl
arpl
cmp
push
inc
xchg
inc
lds
mov
push
imul
add
dec
adc
dec
push
add
arpl
mov
gs
mov
dec
dec
or
inc
jmp
mov
bound
dec
fstps
mov
xor
outsb
inc
loope
dec
mov
sub
outsb
jo
jae
mov
imul
xor
outsb
dec
dec
xchg
outsb
adc
inc
inc
lods
sbb
fisttpll
mov
mov
inc
inc
aas
pop
push
xchg
sahf
xor
pop
sbb
pop
push
mov
out
add
gs
mov
rclb
ss
fadds
clc
inc
imul
outsl
mov
mov
dec
pop
jns
cmpsl
inc
inc
lcall
mov
inc
dec
mov
jns
pop
mov
xor
aas
jae
ja
mov
dec
daa
dec
push
js
repnz
loope
push
rcl
outsl
mov
inc
bound
jle
mov
dec
aad
cmpsl
bound
push
add
add
stc
js
fidivrs
mov
adc
call
jecxz
add
add
mov
in
or
es
ja
leave
aaa
stc
into
jbe
mov
popf
mov
mov
xlat
ljmp
rorl
fs
out
and
add
inc
add
das
add
jns
hlt
cmp
rcrl
mov
pop
jae
mov
xchg
and
icebp
mov
inc
stos
add
fwait
sub
popf
xchg
cld
lods
scas
add
sahf
test
fwait
cmpsb
ljmp
insb
imul
jmp
push
repnz
and
loop
jno
mov
xor
mov
jno
pop
and
mov
rcll
in
adc
xchg
mov
and
into
out
pop
cmp
add
shl
inc
hlt
sub
scas
mov
test
push
pop
mov
out
inc
fistpll
lcall
pushf
out
or
push
lock
jecxz
mov
loop
sub
pop
out
add
lods
movsb
pop
aam
lods
fldl2t
pop
adc
and
add
inc
jle
adc
push
loopne
dec
pop
mov
les
cmp
shr
in
inc
push
pop
jl
mov
add
adc
loop
mov
or
cmp
insb
xchg
scas
inc
sbb
mov
clc
jmp
xlat
add
push
add
mov
inc
in
in
pop
sub
pop
sti
mov
adc
mov
xor
add
cmc
jbe
cwtl
xlat
call
or
outsl
stos
and
inc
jmp
lcall
mov
add
sarl
push
jb
mov
loop
out
mov
jb
add
movsl
push
mov
insl
xlat
and
add
andb
insb
fidivs
mov
jo
outsb
iret
imul
jl
std
jnp
fnstcw
ljmp
jg
jge
stc
adc
movsb
fcmovnu
jp
call
push
inc
stc
mov
xor
cltd
leave
ja
inc
test
jae
mov
cld
xor
jnp
stos
push
out
xor
mov
sbb
shll
mov
cmp
sub
in
dec
add
mov
sti
into
ljmp
mov
add
push
orb
jb
hlt
push
mov
jno
dec
mov
lret
dec
hlt
test
lods
jo
push
sahf
fucomip
and
jl
pop
mov
pop
aad
push
mov
push
xchg
rcrb
lcall
je
jmp
xchg
imul
add
into
adc
dec
movsb
clc
pop
sbb
add
test
sub
jbe
mov
sar
ss
jmp
fs
mov
cs
fistpl
idiv
ret
jmp
lret
jnp
std
or
push
pop
add
jb
mov
std
add
in
add
add
jp
or
shrl
imul
push
test
push
outsb
cwtl
int
jmp
mov
scas
ja
in
xor
in
dec
fnstsw
mov
cltd
and
decl
mov
sti
xchg
add
imul
jbe
fdivrp
and
filds
cltd
xchg
push
adc
insb
and
add
cmpsb
imul
mov
add
and
jo
push
fwait
pop
jmp
pushf
cmp
lea
fstps
push
out
sub
fcmovnbe
ja
je
sub
nop
mov
bound
lods
mov
xor
mov
and
sub
lret
stos
push
or
iret
pop
add
enter
mov
pusha
pop
xchg
inc
inc
sbb
xchg
and
sbb
sti
dec
jecxz
repz
arpl
imul
jmp
adc
and
push
dec
jp
pop
leave
fldcw
lahf
add
ljmp
stos
mov
lcall
repz
add
jb
inc
adc
add
inc
ja
insl
cwtl
add
dec
jle
push
mov
loopne
jnp
fs
out
jnp
sub
jb
cwtl
mov
mov
inc
enter
xor
mov
mov
repnz
lods
aas
add
xchg
mov
stos
add
mov
add
push
cmp
arpl
cmp
mov
add
test
test
outsb
rcr
jbe
ret
jns
push
inc
add
inc
add
dec
add
add
add
add
add
add
insl
push
add
xor
add
dec
add
add
add
add
jns
add
add
add
add
popa
add
add
jno
add
add
add
add
push
add
add
add
add
aaa
add
add
xor
add
add
add
add
add
add
add
add
add
jo
pop
add
add
add
add
add
add
add
aaa
add
outsb
xor
add
add
add
add
add
add
add
add
outsl
add
dec
add
add
arpl
add
dec
add
add
add
add
pop
add
add
add
inc
add
data16
add
push
add
data16
add
add
add
push
add
insb
add
xor
add
dec
add
pop
add
add
inc
add
add
add
add
add
insb
insb
xor
add
push
add
add
add
add
cmp
add
add
add
add
add
add
jp
add
add
add
add
add
add
add
pop
add
add
add
push
add
dec
add
inc
add
add
add
add
add
push
add
add
add
cmp
jp
outsb
add
add
add
add
add
bound
add
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
jns
add
add
add
cmp
add
add
add
add
push
push
add
push
add
inc
jb
add
add
add
add
add
add
add
add
add
add
add
repz
clc
fdivl
mul
pop
loop
dec
fdivs
push
cmp
cmpsl
add
imul
std
call
mov
call
lret
jne
adc
xchg
pop
rorl
gs
pop
jo
stos
mov
pop
sbb
inc
sarl
or
jmp
mov
cmp
pop
shr
popf
mov
loope
and
push
add
jnp
push
fdivr
push
insb
sub
in
dec
scas
lret
loop
add
mov
int
das
dec
lods
mov
orb
pop
es
jbe
gs
mov
cmp
cli
mov
push
jl
sbb
call
mov
sar
call
xlat
push
and
dec
pop
cmp
ret
mov
ljmp
push
or
fs
mov
popa
popf
and
pop
cmp
or
jle
rcrb
icebp
sub
rorl
mov
fcomp
and
enter
les
mov
mov
sbb
mov
pushf
loop
aaa
xchg
cmp
xorb
pop
cmp
push
xor
push
mov
adc
das
lret
dec
or
jp
push
test
scas
adc
lcall
add
mov
pop
add
add
fincstp
ficompl
shlb
sarl
loop
je
mov
adc
loop
lea
dec
leave
jl
and
or
repz
sti
or
xchg
adc
cli
jg
test
inc
cmpsl
je
or
or
and
dec
add
adc
or
mov
pop
jb
mov
push
aas
and
ret
aas
inc
mov
lods
mov
jb
mov
test
popf
lret
adc
lds
mov
aam
mov
xor
mov
roll
out
mov
dec
loopne
repnz
push
inc
cmpsl
xchg
inc
pushl
xor
dec
stc
inc
fidivs
and
in
fsubrs
shufps
scas
xor
mov
hlt
into
in
cwtl
scas
dec
mov
mov
fdivrs
jge
mov
push
mov
aam
rorl
repz
call
cmp
out
cs
lahf
push
ljmp
insb
out
fidivs
sahf
lea
pop
test
mov
test
jmp
fdivrs
callw
lahf
adc
in
cmp
idiv
rorb
adc
in
jbe
add
lret
xor
push
cmp
sarl
dec
mov
bound
les
sbb
stc
ret
mov
movsl
jmp
or
cltd
out
mov
jmp
push
arpl
into
or
das
repnz
icebp
movsb
sahf
out
xor
xchg
xchg
leave
mov
xchg
insb
mov
mov
test
jmp
jno
stos
bound
add
mov
arpl
lock
lock
add
dec
xchg
data16
or
cmc
adc
sbb
or
lret
popa
bound
adc
outsl
lods
movsb
mov
out
inc
outsl
mov
test
aas
and
gs
shrb
arpl
mov
shl
popa
int
push
add
call
mov
jg
divl
pushf
in
xchg
repnz
push
mov
jnp
dec
cwtl
and
into
sti
fwait
push
dec
stos
sahf
pop
loope
clc
sub
iret
push
repz
loope
fwait
rol
xchg
push
gs
out
rclb
mov
enter
jecxz
jae
jae
and
mov
mov
lods
decb
adc
in
inc
pop
cmp
mov
ja
test
sti
adc
or
mov
testl
sub
leave
rol
scas
add
dec
mov
imul
or
jmp
pop
fwait
cmpsl
jo
call
int
shlb
sarb
xchg
in
cmp
mov
data16
sarl
cmp
mov
rcr
cmp
dec
jle
xor
js
aad
xchg
repnz
aam
lods
adc
les
add
pop
stc
bound
mov
mov
inc
fwait
xchg
shll
or
ja
fucomip
dec
push
clc
push
inc
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
