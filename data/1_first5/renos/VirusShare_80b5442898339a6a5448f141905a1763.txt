jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
xor
xor
cmp
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
mov
mov
cmp
jbe
mov
xchg
lea
xchg
lea
lea
inc
dec
je
lea
mov
mov
mov
mov
xchg
xchg
mov
dec
dec
mov
cmp
je
jmp
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
mov
xor
divl
test
jne
xchg
cmp
jb
lea
lea
mov
mov
mov
inc
mov
dec
mov
mov
lea
dec
dec
jne
mov
xchg
xchg
dec
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
mov
cmp
jne
mov
mov
lea
dec
mov
mov
lea
dec
xchg
lea
lea
mov
mov
dec
inc
dec
je
mov
inc
inc
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
lea
cmp
jne
lea
lea
mov
lea
lea
mov
lea
mov
dec
dec
inc
mov
dec
dec
mov
mov
mov
inc
dec
mov
cmp
je
jmp
xchg
cmp
jp
xchg
lea
mov
xchg
xchg
lea
xchg
mov
mov
xchg
mov
lea
mov
xchg
xchg
inc
dec
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jb
mov
mov
lea
xchg
mov
lea
mov
mov
inc
dec
dec
xchg
mov
mov
mov
mov
dec
dec
jne
inc
dec
mov
cmp
je
jmp
xchg
cmp
jp
xchg
lea
mov
xchg
xchg
lea
xchg
mov
mov
xchg
mov
lea
mov
xchg
xchg
inc
dec
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
jmp
lea
mov
cmp
jne
mov
mov
lea
dec
mov
mov
lea
dec
xchg
lea
lea
mov
mov
dec
inc
dec
je
mov
inc
inc
mov
sub
mov
cmp
jge
lea
xchg
xchg
jmp
mov
xchg
dec
lea
mov
mov
mov
inc
lea
mov
mov
lea
xchg
lea
inc
push
mov
mov
xor
call
mov
xchg
cmp
jb
lea
lea
mov
mov
mov
inc
mov
dec
mov
mov
lea
dec
dec
jne
mov
xchg
xchg
dec
mov
mov
mov
call
mov
lea
cmp
jne
lea
lea
mov
lea
lea
mov
lea
mov
dec
dec
inc
mov
dec
dec
mov
mov
mov
inc
dec
push
mov
mov
xor
call
mov
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
cmp
jbe
mov
xchg
lea
xchg
lea
lea
inc
dec
je
lea
mov
mov
mov
mov
xchg
xchg
mov
dec
dec
lea
mov
push
jmp
cmp
jge
lea
xchg
xchg
jmp
mov
xchg
dec
lea
mov
mov
mov
inc
lea
mov
mov
lea
xchg
lea
inc
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
xchg
cmp
jp
xchg
lea
mov
xchg
xchg
lea
xchg
mov
mov
xchg
mov
lea
mov
xchg
xchg
inc
dec
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jb
mov
mov
lea
xchg
mov
lea
mov
mov
inc
dec
dec
xchg
mov
mov
mov
mov
dec
dec
jne
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
mov
sub
add
add
mov
lea
pushl
call
mov
pop
ret
lea
push
mov
add
movb
movl
movl
mov
push
call
cmp
jbe
mov
xchg
lea
xchg
lea
lea
inc
dec
je
lea
mov
mov
mov
mov
xchg
xchg
mov
dec
dec
push
push
call
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
push
push
call
mov
lea
cmp
jne
lea
lea
mov
lea
lea
mov
lea
mov
dec
dec
inc
mov
dec
dec
mov
mov
mov
inc
dec
movl
movl
mov
push
call
incb
cmpb
jne
mov
pop
ret
push
imul
pop
gs
add
add
imul
pop
gs
add
add
in
add
mov
mov
mov
lea
cmp
jne
lea
lea
mov
lea
lea
mov
lea
mov
dec
dec
inc
mov
dec
dec
mov
mov
mov
inc
dec
push
call
mov
push
mov
push
call
mov
mov
mov
xchg
cmp
jb
lea
lea
mov
mov
mov
inc
mov
dec
mov
mov
lea
dec
dec
jne
mov
xchg
xchg
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jge
lea
xchg
xchg
jmp
mov
xchg
dec
lea
mov
mov
mov
inc
lea
mov
mov
lea
xchg
lea
inc
mov
mov
movl
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
mov
cmp
jne
mov
mov
lea
dec
mov
mov
lea
dec
xchg
lea
lea
mov
mov
dec
inc
dec
je
mov
inc
inc
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
je
jb
arpl
fs
jae
add
push
cmp
testb
mov
mov
xchg
xchg
sahf
sahf
repnz
fwait
xchg
test
mov
repnz
test
test
repnz
test
test
sahf
mov
xchg
lahf
mov
repnz
mov
test
popf
xchg
test
loopne
sahf
sahf
repnz
repnz
repnz
mov
repnz
repnz
xchg
repnz
repnz
repnz
jge
jne
or
adc
xor
jne
cli
mov
shlb
repnz
mov
and
mov
sub
mov
push
shlb
repnz
mov
hlt
shll
repnz
mulb
bnd
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jnp
or
mov
jge
or
xor
sub
add
xor
mov
xor
jge
jne
cmp
cli
jnp
cmp
mov
cmp
fisubl
mov
mov
mov
jge
cli
jnp
push
jge
cmp
mov
mov
mov
jge
cmp
mov
jnp
push
xchg
jge
ret
bnd
push
jnp
cli
jge
push
jge
into
cmc
mov
jnp
add
add
jb
repnz
sub
sub
div
add
repnz
sub
cmc
mov
jnp
sbb
repnz
repnz
bnd
es
cmc
mov
mov
mov
jne
sbb
add
repnz
es
repnz
jge
es
cmc
mov
jnp
push
jge
es
loop
mov
jnp
adc
jge
loop
mov
jnp
push
jge
es
loop
mov
jnp
adc
or
jge
push
jge
xlat
adc
repnz
jge
cmp
mov
jnp
sbb
jge
push
cmc
hlt
jnp
and
and
hlt
mov
jge
cmp
mov
jnp
jne
adc
jne
push
idivb
push
jne
xacquire
es
mov
jne
repnz
adc
adc
add
mov
jnp
or
cmp
fidivrs
push
cmp
repnz
loop
mov
jne
mov
jge
cmp
mov
repnz
bnd
cmp
shlb
mov
repnz
bnd
cli
mov
mov
jge
push
jg
repnz
adc
pushf
repnz
xchg
push
repnz
adc
ret
xor
adc
pop
scas
xor
repnz
jge
xchg
jge
cli
jge
decb
inc
jb
sub
lahf
repnz
ret
cmp
xchg
repnz
ret
xor
lods
repnz
inc
hlt
mov
loop
shl
repnz
test
xchg
pop
sbb
repnz
xchg
sbb
pop
and
xchg
arpl
sbb
repnz
repnz
repnz
jb
testl
addr16
inc
repz
adc
cmp
repnz
idivl
loop
xor
and
adc
jecxz
sbb
adc
adc
cli
bnd
bnd
jnp
dec
adc
adc
les
add
dec
adc
adc
fstpt
jnp
xor
jae
or
adc
jnp
push
cmp
cli
push
mov
repnz
sti
push
mov
repnz
jl
or
push
mov
adc
xacquire
cmp
push
sbb
adc
mov
or
add
repnz
jl
or
cmpsl
push
jl
hlt
lds
cmpsl
or
adc
adc
mov
jl
or
mov
xchg
cmp
or
xchg
cmp
or
mov
lds
cmpsl
or
or
adc
cmc
xor
and
cmpsl
or
push
mov
cmc
xor
adc
repnz
or
xor
jl
push
mov
jp
or
xor
jl
or
push
mov
adc
xacquire
pop
scas
xor
jge
mov
xor
push
mov
mov
adc
repnz
cli
push
mov
lds
push
sti
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
sti
push
mov
lds
push
cli
push
mov
jl
push
mov
jp
pextrw
xor
push
mov
jl
push
mov
lds
out
push
mov
jp
push
mov
lds
push
sti
push
mov
jl
push
mov
lds
push
cli
push
mov
add
push
mov
lds
out
push
mov
add
push
mov
cmc
xor
adc
repnz
pextrw
xor
jl
push
mov
les
jl
adc
xor
add
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jb
mov
mov
lea
xchg
mov
lea
mov
mov
inc
dec
dec
xchg
mov
mov
mov
mov
dec
dec
jne
inc
dec
movl
cmp
jge
lea
xchg
xchg
jmp
mov
xchg
dec
lea
mov
mov
mov
inc
lea
mov
mov
lea
xchg
lea
inc
movl
lea
push
push
mov
sub
push
mov
push
push
call
mov
mov
call
mov
cmpl
je
lea
mov
cmp
jne
mov
mov
lea
dec
mov
mov
lea
dec
xchg
lea
lea
mov
mov
dec
inc
dec
je
mov
inc
inc
mov
mov
call
mov
cmpl
je
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
mov
cmp
je
mov
subb
mov
mov
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
mov
mov
xorb
lea
mov
cmp
jne
mov
mov
lea
dec
mov
mov
lea
dec
xchg
lea
lea
mov
mov
dec
inc
dec
je
mov
inc
inc
incl
mov
cmp
jne
xchg
cmp
jp
xchg
lea
mov
xchg
xchg
lea
xchg
mov
mov
xchg
mov
lea
mov
xchg
xchg
inc
dec
mov
call
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
mov
push
mov
push
call
cmpl
je
mov
push
call
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
cmp
jbe
mov
xchg
lea
xchg
lea
lea
inc
dec
je
lea
mov
mov
mov
mov
xchg
xchg
mov
dec
dec
push
mov
push
call
mov
pop
ret
push
mov
add
cmp
jbe
mov
xchg
lea
xchg
lea
lea
inc
dec
je
lea
mov
mov
mov
mov
xchg
xchg
mov
dec
dec
mov
mov
mov
add
xor
add
mov
cmp
jne
ret
add
xor
cmp
jne
xchg
cmp
jb
lea
lea
mov
mov
mov
inc
mov
dec
mov
mov
lea
dec
dec
jne
mov
xchg
xchg
dec
movb
cmp
jp
mov
mov
jmp
mov
mov
mov
mov
mov
lea
inc
inc
inc
lea
mov
lea
mov
lea
lea
dec
je
inc
dec
mov
mov
pop
ret
mov
push
mov
add
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
call
call
call
call
test
jne
mov
jmp
movw
mov
lea
cmp
jne
lea
lea
mov
lea
lea
mov
lea
mov
dec
dec
inc
mov
dec
dec
mov
mov
mov
inc
dec
call
lea
mov
pop
ret
push
mov
add
cmp
jo
lea
mov
xchg
mov
mov
mov
mov
mov
mov
mov
lea
xchg
lea
dec
inc
dec
jne
mov
xchg
cmp
jb
lea
lea
mov
mov
mov
inc
mov
dec
mov
mov
lea
dec
dec
jne
mov
xchg
xchg
dec
push
call
mov
cmpl
je
push
call
call
cmp
jge
lea
xchg
xchg
jmp
mov
xchg
dec
lea
mov
mov
mov
inc
lea
mov
mov
lea
xchg
lea
inc
mov
pop
ret
add
push
add
je
data16
add
add
add
add
add
add
pop
add
add
add
add
add
jae
movl
xchg
cmp
jp
xchg
lea
mov
xchg
xchg
lea
xchg
mov
mov
xchg
mov
lea
mov
xchg
xchg
inc
dec
mov
mov
mov
lea
call
lea
mov
cmp
jne
mov
mov
lea
dec
mov
mov
lea
dec
xchg
lea
lea
mov
mov
dec
inc
dec
je
mov
inc
inc
ret
mov
ret
lea
and
rclb
push
dec
add
dec
cmpsb
inc
add
xor
in
out
popf
sbb
ficoml
mov
add
mov
js
out
lds
mov
jno
fdivs
push
add
call
add
pushf
imul
add
push
loop
sub
add
xchg
mov
lret
je
add
jbe
push
clc
dec
pop
adc
mov
add
popa
add
push
add
out
xlat
xchg
lds
cmp
mov
mov
add
js,pt
inc
add
arpl
add
pop
cli
mov
cltd
add
pop
or
and
stos
add
add
in
add
add
inc
add
pusha
push
imul
add
sbb
cmp
add
test
add
in
mov
add
jo
enter
in
sbb
into
mov
rcrb
add
inc
xchg
fiadds
pop
lods
fnsave
add
dec
shlb
cli
xor
test
or
paddq
add
js
mov
add
movsl
adc
ret
jl
add
jnp
aam
add
add
pop
xor
jae
sub
add
xchg
add
mov
mov
sub
xlat
add
movsl
add
jl
cmp
dec
test
sub
dec
cmc
in
add
ljmp
add
mov
pop
ja
sub
leave
adc
adc
jle
fimull
fs
das
mov
popf
cli
movsl
add
aas
and
push
add
in
add
pusha
lret
mov
add
xor
and
add
add
add
daa
enter
std
int3
jmp
aaa
lea
push
fidivrs
add
sbb
insb
adc
inc
add
pop
add
sbb
insb
ja
fcmovbe
add
add
jne
addl
pop
cmp
add
pop
add
push
add
pop
add
sahf
add
out
add
jb
jl
fmull
dec
cmp
add
lret
push
add
mov
push
add
sub
stos
add
sbb
or
mul
aad
in
outsl
filds
imul
lahf
ret
fsub
int3
add
or
dec
add
notl
add
stc
add
add
test
data16
pop
push
pop
int
add
push
lods
aam
add
dec
fisttps
add
jnp
pop
inc
in
movb
lcall
xor
int3
sub
push
in
add
add
nop
inc
lods
mov
add
add
cltd
aas
add
adc
les
adc
scas
ret
xchg
sub
mov
pop
adc
add
divl
lods
add
push
addl
testb
add
ja
sbb
loopne
add
mov
cmpsl
jns
inc
mov
jl
lahf
add
or
cld
mov
call
ret
scas
jl
or
cwtl
mov
add
add
mov
leave
lea
add
add
inc
add
add
lds
fiadds
sub
sarl
repnz
mov
scas
add
add
fwait
cmp
xor
mov
xchg
add
add
mov
pop
ret
in
or
adc
test
adc
mov
lcall
add
adc
add
add
aaa
xor
add
mov
aad
add
rcll
mov
push
sbb
js
lds
jne
dec
xchg
add
xor
dec
push
inc
lods
cli
xor
dec
xor
jb
popf
enter
cld
and
pop
sbb
popa
inc
mov
std
pop
ficompl
dec
sahf
jmp
dec
inc
mov
icebp
arpl
sbb
das
jae
lret
int3
jle
mov
xchg
arpl
jmp
call
mov
pop
jecxz
aam
stc
and
sub
push
es
add
adc
cli
cmpsl
push
mov
add
ret
sub
dec
dec
mov
mov
cltd
mov
pop
cmpsl
and
cltd
mov
lahf
test
sti
into
mov
mov
push
sti
fnstsw
xchg
push
aaa
xchg
push
sahf
movsl
roll
push
pop
frstor
xchg
stos
mov
xchg
stos
xchg
mov
cmp
sar
movb
std
leave
or
in
xor
or
xchg
subb
cmpsl
xor
stos
sahf
fadds
xor
repnz
or
mov
push
push
mov
add
mov
pop
decl
gs
jns
dec
in
or
xchg
adc
ret
daa
inc
popa
pop
adc
dec
das
jmp
mov
hlt
adc
push
inc
dec
imul
sbbb
dec
pop
bound
movsl
ficoms
add
lods
sub
lock
addr16
lret
pop
in
and
lock
push
jnp
inc
lea
dec
push
in
scas
mov
mov
add
fdiv
ret
pop
pop
push
imul
pushw
outsl
mov
popf
fs
push
push
fcoms
stos
push
not
xchg
mov
rcll
jae
inc
push
shl
push
adc
xor
lret
ret
cmp
and
fcomip
lret
arpl
out
cmc
popf
push
or
xlat
and
inc
mov
lcall
mov
cmp
icebp
rcr
sbb
ficoml
push
cmp
and
or
jbe
inc
cmp
pop
movsb
sbb
inc
and
dec
pop
pusha
jno
movsl
lret
jl
popa
fmull
sub
xor
cltd
adc
and
inc
sub
lods
inc
lock
pop
pop
mov
enter
daa
push
xchg
jg
push
roll
das
dec
sub
adc
cmp
adc
movsl
adc
and
dec
lahf
lods
dec
push
lods
push
rcrl
dec
movl
aas
add
pop
mov
js
mov
fldcw
test
imul
lcall
adc
dec
or
and
nop
mov
mov
and
test
int
dec
dec
sub
pusha
pop
lcall
push
mov
sbb
pop
add
addb
fimull
stc
lcall
adc
call
add
mov
adc
mul
addr16
mov
and
cld
nop
or
mov
into
add
repz
and
and
imul
mov
add
fisubl
cmpsb
pop
lods
flds
insl
shr
out
lea
mov
dec
or
sti
js
inc
cwtl
push
xor
aaa
pop
xchg
push
rcr
mov
rep
gs
push
je
clc
cmp
cmp
jge
sub
ja
adc
aad
jge
in
jmp
mov
cs
lret
mov
lcall
pop
mov
jb
in
mov
lea
pop
jge
les
cmc
sti
cmpl
and
pop
movsl
js
inc
sbb
movsb
inc
jmp
pop
aas
bound
movsb
jb
adc
mov
les
psadbw
jbe
std
add
nop
cwtl
push
dec
jecxz
pop
jmp
leave
icebp
cmp
push
cld
pop
add
add
cmpsb
push
adc
inc
xlat
inc
das
dec
add
mov
push
or
ret
mov
mov
pop
or
insl
loope
cli
dec
or
cmpsl
adc
xchg
addr16
pop
in
lods
pop
sbb
add
scas
mov
xchg
aaa
sbb
ds
daa
rclb
jmp
cltd
out
lock
push
sbb
add
push
mov
cs
movsl
ret
lods
xchg
cmpsl
push
sub
rcrl
outsb
mov
xchg
arpl
xchg
out
test
loope
rdmsr
push
push
add
mov
or
inc
xor
repnz
xchg
mov
stos
test
fistpll
mov
shr
inc
add
dec
rcrl
cs
movsl
add
rorb
xor
in
jns
mov
in
xor
mov
stos
xchg
mov
xchg
dec
test
push
push
mov
mov
add
mov
testl
jg
mov
mov
and
ja
jmp
jns
roll
dec
mov
cmp
jmp
add
push
mov
and
shrl
jnp
out
mov
add
in
out
pusha
cmp
adc
xchg
stos
cltd
push
pop
xchg
das
jns
add
push
xor
jno
aam
inc
push
pop
enter
arpl
rol
mov
scas
addr16
sbb
ret
iret
sub
popa
leave
lcall
arpl
ds
clc
adc
push
cmp
jl
add
mov
mov
loope
fdivp
push
imul
repz
mov
sub
cmp
movsb
or
jno
pop
and
jbe
inc
jge
mov
sbb
aaa
out
or
fldl
es
add
dec
fisttpll
or
scas
xor
hlt
and
cmp
imul
jg
dec
cmpsb
loopne
aad
aam
movsb
enter
daa
adc
sbb
gs
sub
xchg
jp
faddl
out
adc
mov
add
mov
dec
jl
push
orb
add
inc
hlt
xor
push
add
jbe
inc
mov
pop
cmp
push
leave
inc
cmp
pop
xchg
mov
mov
adc
daa
mov
incl
sbb
pop
and
jnp
int
aas
imulb
adc
xor
std
jne
lcall
mov
sbb
fcoms
test
dec
sbbb
jg
pop
inc
mov
stc
sub
push
ljmp
mov
inc
cmp
jb
lret
divl
jb
xor
fstps
sbb
pop
or
dec
and
jecxz
adc
fwait
sub
stos
push
sub
pop
shl
test
imul
out
aas
add
fnstcw
lods
scas
daa
mov
mov
hlt
jae
cli
mov
cwtl
mov
mov
push
sti
daa
int
mov
mov
loopne
popa
mov
adc
std
cmpsl
les
test
adc
sbb
repnz
xlat
mov
push
sub
cmp
jmp
and
cs
sub
cmp
jp
jle
imul
hlt
insl
dec
cs
je
test
jecxz
push
dec
jns
xchg
fcmovnb
cld
xchg
les
insl
xor
dec
pop
dec
push
inc
mov
adc
jb
mov
icebp
and
dec
loop
decl
stos
aaa
xchg
cwtl
roll
mov
cmpl
adc
scas
cld
test
lret
stos
lret
sahf
mov
rcrl
lock
cmp
mov
or
dec
mov
inc
mov
mov
es
dec
pop
cmp
adc
pusha
mov
jno
dec
lods
jb
mov
movsb
popf
push
and
push
pop
sbb
shr
cmp
test
pop
mov
shll
jne
enter
loopne
in
out
pop
ljmp
and
hlt
stos
add
out
inc
nop
pop
xchg
cs
notl
pushf
fisttpl
xchg
test
rorb
aam
sbb
das
jae
mov
xor
dec
lods
lods
js
dec
xchg
pop
xchg
sub
adc
or
sarb
push
shrl
add
and
xor
jns
sub
shrl
movsb
mov
pop
fwait
mov
push
sub
ja
pop
mov
adc
cmp
mov
data16
dec
push
ss
pop
mov
test
out
add
sbb
es
xchg
inc
lods
inc
orl
mov
sub
out
add
clc
xor
and
and
lods
insb
insl
push
jnp
pop
xor
in
test
filds
xchg
jle
lea
hlt
sub
jae
out
sahf
push
cmc
sub
mov
dec
mov
push
rcr
cmp
lods
sbb
cwtl
jo
pop
and
cmp
pushf
push
pusha
out
adc
in
sub
mov
ret
push
leave
adc
or
and
mov
scas
or
int
xchg
adc
ficompl
add
stos
mov
pop
in
ficomps
sbb
rclb
and
shl
scas
repnz
sti
je
movsb
xchg
and
or
jbe
shlb
popf
inc
sbb
pop
int
cmpsb
xchg
xlat
or
push
sbb
cli
fnstcw
inc
dec
bound
movsl
push
out
cltd
fbstp
dec
inc
mov
shlb
xor
push
aam
inc
push
inc
and
mov
inc
xchg
daa
adc
out
cmp
mov
arpl
mov
sub
lahf
lahf
lahf
insb
dec
inc
push
push
repz
mov
lahf
hlt
xor
fbstp
js
add
push
rorl
push
and
shrl
js
int3
outsb
jb
sti
adc
add
orb
pusha
mov
sub
push
push
pushf
ret
loopne
subb
subl
jmp
mov
mov
mov
sahf
mov
push
pop
cmpb
jg
xor
cmc
popa
stc
or
fs
push
adc
nop
xor
cmp
sub
jae
lret
xchg
xor
pop
cmp
xor
or
mov
enter
jmp
loop
repnz
imul
sub
push
rcr
data16
pop
or
arpl
out
fldl
mov
and
sub
pushf
push
fisubs
xor
fsub
loopne
inc
sub
mov
adc
jmp
out
stc
les
fldt
xchg
sbb
sbb
sub
insl
pop
sub
mov
pop
pushf
rcll
jmp
push
lret
cs
mov
nop
pop
adc
mov
dec
dec
dec
lock
and
jecxz
dec
jl
xchg
fiaddl
push
jnp
enter
adc
pop
sbb
fistl
pop
inc
sub
inc
and
aas
mov
xchg
mov
push
pmulhuw
dec
inc
rorl
pop
notb
mov
push
mov
xchg
cmp
call
movsl
and
sbb
leave
mov
sbb
cld
sbb
das
or
repnz
add
inc
aam
jb
ret
aad
js
and
push
out
dec
add
cmpsl
adc
sbb
mov
std
mov
movl
mov
pop
jl
inc
sarb
pop
test
or
mov
lahf
adc
out
int3
fs
sbb
ret
aas
je
dec
and
pop
fiadds
mov
mov
mov
push
lock
push
add
aas
or
mov
mov
popf
xor
test
int
mov
pop
icebp
inc
xor
cld
fwait
inc
gs
push
je
testb
leave
mov
xor
jnp
in
jl
xchg
add
fs
xlat
jne
sbb
cmc
pop
or
or
dec
mov
mov
aad
lds
inc
dec
jne
jb
mov
ficoml
jecxz
jp
pop
or
and
dec
sbbl
push
sub
loope
mov
and
jp
mov
and
mov
jnp
mov
lock
push
in
test
fbld
sbb
pop
add
inc
push
repnz
jae
je
push
mov
add
dec
lock
cmp
stos
scas
pop
leave
xchg
shll
sub
imul
scas
pushf
inc
fsts
jne
adc
inc
iret
out
mov
leave
mov
lret
arpl
pop
lds
dec
out
inc
cmp
push
fimull
pop
dec
add
jmp
mov
repnz
fidivrs
pop
lds
pop
shrb
push
mov
rcll
mov
mov
push
idivb
or
lods
lret
jge
xchg
or
aaa
addl
aam
adc
dec
dec
shl
clc
push
shll
pushf
xor
stos
jns
scas
sti
mov
arpl
test
and
out
out
mov
mov
cld
mov
adc
loope
mov
sub
adc
and
pop
iret
pop
movsl
es
rcrl
imul
adc
dec
dec
xor
jnp
pop
add
lret
adc
pop
inc
lock
push
xlat
xchg
push
ja
mov
inc
sub
inc
outsb
aad
add
fstpl
pop
mov
sbbb
push
mov
jmp
nop
push
lahf
jge
int
into
push
sub
xchg
add
sti
sub
lcall
mov
mov
pop
dec
ds
inc
jl
test
aad
xchg
les
mov
lret
mov
jecxz
adc
push
push
sub
repz
xchg
push
divl
ror
xorl
cmp
or
or
shrb
dec
lock
or
loop
outsl
shrb
pop
pop
adc
data16
loope
and
out
lods
jl
push
pop
jnp
out
lret
mov
sbb
xchg
mov
call
mov
add
cmp
inc
ss
adc
sahf
mov
push
rclb
les
fimuls
fistl
mov
insl
rcr
cmp
mov
sub
mov
pushf
jle
mov
cs
mov
aad
loop
nop
xor
sub
xchg
das
jnp
add
mov
add
jo
sbb
mov
jg
mov
call
cli
add
addl
ret
xor
inc
mov
flds
in
insb
aas
aas
jbe
jb
mov
adc
ljmp
stc
and
cwtl
aaa
mov
aam
push
pop
out
mov
mov
lret
mov
add
sti
lods
stos
lock
pop
shrl
mov
mov
sti
push
push
aam
in
das
ret
fs
or
test
cmp
xchg
pusha
inc
dec
std
mov
cmpsl
adc
dec
mov
lahf
pop
mov
les
ljmp
mov
fwait
repz
rorb
pop
push
test
arpl
push
ljmp
clc
push
adc
fs
ljmp
adc
jnp
pop
rclb
push
pop
icebp
xchg
mov
dec
cmovg
add
or
xor
cmpsb
cld
mov
mov
and
test
mov
xchg
or
cmp
or
pop
mov
push
pop
out
add
and
push
repnz
jne
fwait
aam
in
sahf
addr16
push
leave
adc
mov
lods
jb
xchg
jns
dec
sti
adcb
xchg
das
dec
sbb
pop
jne
mov
dec
out
ret
and
sbb
jns
sub
jl
push
scas
in
or
arpl
jb
xchg
jp
cld
push
insb
inc
cmpsl
test
sbbl
out
in
ljmp
adcb
and
addr16
cmp
inc
and
push
push
jnp
imul
aam
pop
stos
and
cld
xchg
sbb
or
aam
push
imul
mov
jmp
pop
adc
and
ret
inc
leave
incl
hlt
mov
xor
or
ret
movsl
add
adc
fcmovb
pop
mov
rolb
int3
cmp
jno
adc
dec
dec
sub
es
cmp
shlb
lods
pop
jbe
push
ss
outsb
mov
aaa
and
testl
stos
loopne
jl
dec
aad
inc
pop
enter
adc
pop
sub
scas
ficompl
sub
divb
mov
jbe
movsb
push
in
leave
mov
sub
xchg
mov
cmpsb
daa
adc
enter
ljmp
das
mov
jl
test
aad
leave
lahf
stos
add
sbb
enter
dec
lahf
xor
loop
dec
mov
pop
sub
js
mov
pop
test
and
push
fcompl
jg
push
lock
inc
mov
mov
sbb
mov
fidivl
and
mov
imul
xorb
jp
cmp
adc
fbstp
xchg
mov
xorb
jbe
or
xchg
adc
shll
insb
sub
pop
fstps
mov
adc
xor
mov
pop
into
mov
xor
loop
and
imul
js
jo
jl
stos
in
lods
arpl
mov
cmp
icebp
cmp
pop
mov
clc
ficompl
and
lods
gs
mov
mov
adc
sti
test
push
das
jno
es
pusha
xchg
pop
add
sbb
mov
outsb
or
adc
jecxz
pushf
sub
jmp
or
cs
mov
adc
test
pmulhw
dec
notb
loop
adc
addr16
je
sbb
sub
add
and
lea
sbb
jns
fwait
pop
sbb
lods
sbbl
inc
xchg
pop
xor
push
inc
cmp
inc
push
ja
aas
ficoms
xor
and
aaa
jnp
in
jle
negb
mov
cwtl
repnz
mov
pushf
test
icebp
xchg
jo
cld
push
xchg
idivl
movsl
push
inc
mov
aas
push
lock
add
lret
mov
repnz
ret
repz
mov
cmpsl
adc
xlat
mov
mov
lods
mov
xor
or
lahf
outsb
mov
mov
pop
sbbb
adc
mov
shrb
lods
mov
cmp
cld
cld
xchg
mov
cs
sar
jne
pop
xor
and
imul
cmp
scas
int
add
fisttpl
cmp
xor
fists
int
out
mov
scas
sbb
mov
scas
cmpsb
inc
popa
xlat
fs
pop
xor
sahf
and
push
mov
stos
arpl
ds
jle
movsl
repnz
inc
out
imul
mov
jb
repnz
mov
aam
mov
orl
out
push
mov
stos
pop
mov
mov
dec
dec
das
shll
arpl
jmp
jle
bound
xor
add
xchg
sub
xlat
jecxz
addr16
pop
jp
notl
pushf
ljmp
mov
and
push
mov
pusha
test
jo
xchg
idivl
pop
jno
mov
adc
adc
ds
daa
mov
lods
push
adc
shrb
lret
jg
pop
imul
clc
scas
arpl
shlb
and
add
leave
jbe
out
hlt
push
or
arpl
je
or
ds
sub
mov
jne
add
int3
and
fiadds
icebp
in
shlb
lods
ret
jns
inc
cmp
cli
inc
movsb
xor
lret
in
jge
sub
outsb
aaa
jecxz
out
or
cmc
jno
mov
dec
scas
nop
add
xchg
or
es
pop
jo
and
and
sbbl
mov
mov
in
jo
or
cmc
xor
cmp
loope
push
movsb
sub
jecxz
cmp
addr16
popf
and
lahf
leave
loopne
push
int3
bound
pop
and
movsl
test
push
getsec
pop
push
aad
js
ljmp
push
jp
push
and
xchg
sub
aaa
outsb
fwait
xchg
rcll
inc
into
fldl
or
mov
frstor
movsl
dec
xchg
int
in
movsb
sub
imul
stc
repz
add
and
lods
lahf
js
dec
dec
sbb
xchg
aam
jge
mov
jg
ret
out
push
stc
sub
rcrb
adc
lcall
mov
shll
divl
inc
xor
imul
xor
jmp
and
outsl
movsb
loopne
mov
jmp
pop
insl
dec
outsl
adc
loop
push
loope
or
adc
cs
decl
sub
lods
dec
inc
into
mov
out
xor
cli
cmp
mov
arpl
idiv
inc
dec
sub
push
sbb
push
pop
xor
adc
mov
les
loopne
repz
pop
xchg
pop
and
sbb
fdivrp
push
xlat
mov
pop
sub
add
sbb
jecxz
mov
push
insl
aad
xchg
lcall
cld
les
insl
mov
je
xchg
and
cmp
adc
call
clc
mov
pop
iret
daa
mov
dec
sbb
les
mov
scas
inc
jb
dec
aas
jge
divl
pop
xor
jnp
scas
sarl
push
xlat
negb
add
inc
mov
divb
add
push
icebp
insl
sub
cld
xor
xchg
xor
mov
inc
lock
inc
hlt
mov
jmp
ficoms
es
or
insl
fs
dec
repz
cmpsl
adc
mov
in
sbb
int
push
lods
push
jl
mov
xor
jle
mov
insl
jb
fnstenv
dec
cltd
cli
or
test
leave
mov
adc
push
jo
lods
frstor
clc
int3
jl
xchg
loop
xchg
ljmp
je
fistps
stos
cmp
dec
out
int3
cmc
out
xchg
dec
ret
jno
orl
add
push
mov
loope
fildll
fdivl
dec
dec
and
test
pop
push
xchg
pop
nop
sbb
pop
inc
clc
xor
je
push
fwait
int
and
pop
out
testl
inc
push
xor
jb
in
fistps
mov
add
mov
cmp
xchg
ja
movsl
mov
mov
outsl
mov
mov
adc
dec
loope
fdivs
jb
mov
out
out
or
bound
in
inc
jmp
jo
sbb
inc
imul
lcall
shl
or
jp
cmpsb
mull
mov
or
cwtl
jnp
mov
nop
in
loopne
pusha
inc
push
sbb
xchg
xchg
lret
pop
test
das
inc
aaa
cmc
clc
jae
popf
cli
push
add
pop
popf
dec
inc
mov
push
push
leave
es
pop
sbb
mov
sbb
aaa
and
jae
scas
lds
pop
adc
push
iret
add
pop
ret
lcall
lods
inc
arpl
fisubs
or
mov
push
fisubrl
jno
add
fs
push
fbld
dec
movsl
fisubs
stos
sarb
mov
int3
insb
and
xlat
ret
xchg
movsb
shlb
jbe
sub
xchg
sbb
inc
sub
or
add
pop
push
sarb
dec
push
mov
xor
mov
stos
iret
and
sti
push
orl
inc
dec
xchg
cmpsb
outsl
mov
dec
enter
daa
adc
cmp
jge
sub
mov
inc
leave
jns
ret
movsl
cmp
inc
lahf
call
lcall
lcall
roll
push
js
mov
pop
add
push
pop
push
jl
fcomp
mov
sub
mov
aam
adc
outsb
pop
mov
adcb
mov
sbb
fcoml
int
push
sub
adc
js
stc
lcall
mov
mov
sahf
mov
test
adc
xchg
cmpsb
push
inc
or
stc
in
sub
ret
inc
pop
adc
shlb
repnz
divl
mov
pop
mov
jne
repnz
or
inc
into
push
test
cmc
jle
sahf
xor
mov
loop
and
imul
paddq
mov
data16
mov
mov
test
out
lods
push
mov
push
ds
scas
in
into
cmp
push
push
gs
cld
pop
loopne
mov
push
add
adc
ret
fstps
repz
and
sbb
sbb
out
xlat
icebp
jle
sub
mov
adc
lahf
pushf
jg
ljmp
xchg
cwtl
aad
jle
nop
lds
dec
mov
adc
or
movsl
je
pop
pop
jecxz
outsl
push
mov
lea
outsb
call
ja
mov
or
hlt
rcr
push
lods
xor
inc
inc
int
inc
leave
aas
aas
sbb
das
jb
or
xor
xchg
mov
mulb
mov
cwtl
push
fimull
inc
or
lret
aad
xchg
mov
shll
push
xchg
mov
in
shrl
loopne
mov
push
pushf
jp
xor
pusha
insl
dec
in
dec
out
mov
fdivrs
in
int
mov
mov
mov
mov
arpl
rorb
lret
xor
test
sub
xor
push
clc
pop
xchg
je
and
xor
std
in
and
cmpsl
pop
push
stos
sub
into
xchg
xchg
dec
in
push
pop
outsb
test
insb
movsb
xchg
add
or
repnz
dec
xchg
mov
test
jp
test
mov
xchg
rorl
or
fwait
cld
icebp
jl
add
add
je
lret
jmp
mov
adc
mov
in
sbb
xchg
mov
mov
inc
lret
adc
aam
add
pop
dec
mov
xchg
pop
dec
dec
out
pushf
jne
in
mov
addr16
out
pop
push
mov
stos
mov
xchg
cmp
scas
out
cmp
sub
int
andl
or
lret
insb
test
fwait
jle
pop
and
jno
pusha
fisttps
xchg
mov
jbe
fildll
inc
inc
sahf
les
xor
les
mov
xchg
push
sub
sbb
xor
imul
ljmp
lcall
arpl
push
ret
aas
leave
fs
mov
ds
or
sub
push
aaa
jmp
fcmovu
mov
add
std
inc
pop
call
and
lds
lret
jmp
xlat
repnz
xor
movsb
dec
fwait
out
xor
ret
jge
push
lcall
pop
aaa
or
mov
jno
repnz
sub
dec
jge
pop
lds
push
sbb
and
jge
push
dec
mov
inc
flds
jo
js,pt
enter
daa
js
loope
or
sub
add
cmp
cmp
inc
or
sbb
push
jb
pushf
sbb
ret
movsl
dec
cwtl
xor
mov
xchg
jb
pop
lahf
ja
js
adc
pop
inc
lea
aaa
in
rclb
cmpsl
push
fcompl
ljmp
and
movd
or
dec
test
fwait
pop
add
loop
insb
mov
push
and
repz
xchg
push
stos
icebp
loope
jecxz
arpl
repz
and
test
push
rcr
pop
mov
push
rcrl
adc
hlt
sahf
shll
test
push
mov
mov
fistl
fwait
mov
dec
or
sub
cmp
aam
mov
xor
out
lret
in
push
cltd
loope
sbb
out
jno
xor
test
int
pop
outsl
iret
cwtl
loop
insl
imul
inc
mov
sbb
xchg
mov
mov
jnp
out
stos
sar
out
adc
cmp
std
decb
aas
jmp
lods
rclb
adc
and
les
cwtl
repz
fsubrs
xchg
movsl
mov
cmp
xlat
xor
sub
xlat
adc
rolb
sub
jle
jle
ss
popa
aad
iret
je
mov
fnstcw
dec
mov
jle
jecxz
orl
mov
or
icebp
sub
mov
andl
adc
jg
fcompl
sbb
inc
test
leave
aas
mov
call
shlb
adc
rcr
roll
mul
mov
std
xchg
scas
adc
and
mov
int3
push
mov
andb
or
or
adc
mov
dec
enter
mov
mov
xlat
add
aam
and
mov
add
imul
sub
mov
sti
mov
fs
jbe
push
and
rep
mov
pop
xor
fisttpl
cltd
push
or
mov
pusha
rcll
push
insb
fnsave
cmp
jo
stc
sar
inc
pop
xor
push
or
xchg
pusha
xchg
fdivs
and
mov
and
jae
stc
or
sbb
cli
cmp
add
pop
mov
test
ficomps
ss
sbb
insl
inc
es
mov
fwait
sub
lds
mov
clc
aam
cmp
mov
jns
lahf
xchg
in
jno
xchg
idiv
mov
mov
mov
mov
pop
ja
loopne
dec
pop
mov
mov
add
dec
cmpsl
mov
test
out
ds
lods
jmp
push
add
out
dec
jl
mov
call
jp
and
and
xor
insb
out
adc
cltd
add
jle
ret
addr16
fcmovu
loop
xchg
jo
dec
pop
push
or
fwait
daa
jae
or
mov
mov
shlb
stos
in
sbb
cmp
imul
js
mov
lock
adc
ret
ret
lret
out
hlt
out
aaa
arpl
push
push
inc
or
sarb
cmpsl
inc
mov
fimull
push
cltd
int3
in
nop
pop
pop
add
lds
dec
out
mov
cs
jb
adc
inc
inc
pop
movsb
loop
push
sbbl
inc
sbb
fnsave
in
fdivl
pop
cwtl
jl
jae
dec
cld
lret
fwait
push
inc
femms
xor
jno
or
and
jnp
push
icebp
mov
inc
push
sub
in
and
pop
pop
daa
push
sub
loope
mov
jbe
movsl
jb
or
movsl
dec
fistl
and
cwtl
lahf
es
xor
cmpsb
lock
dec
add
lahf
fdivl
xchg
sahf
sub
push
push
jae
sahf
jecxz
loopne
test
cmpb
push
xor
push
sub
fmull
xchg
pusha
sub
les
adc
and
sahf
cli
iret
xor
mov
jbe
lcall
push
scas
lock
sub
or
jbe
xchg
lcall
pop
mov
iret
iret
sahf
je
add
sbbb
jg
jns
mov
loope
stc
push
adc
fldcw
inc
adc
stos
inc
cmp
popl
cs
out
xor
mov
cmp
mov
or
jecxz
into
sbb
cmc
cmc
or
mov
outsl
scas
push
or
xchg
ds
iret
addb
xor
lods
cmp
out
sub
bound
movsb
in
cwtl
sti
lock
gs
loopne
sub
mov
adc
or
les
or
out
bound
xor
outsl
lahf
out
sub
adc
push
jmp
mov
clc
aad
test
jnp
mov
int
inc
popa
jmp
adc
jecxz
lea
call
jne
stos
pop
call
cmp
dec
fcmovu
sbb
scas
sub
inc
push
shlb
aas
pop
sub
push
mov
sbb
out
sub
imulb
and
std
cmp
cwtl
fisubs
mov
mov
arpl
repnz
cld
mov
icebp
lret
mov
mov
fisubrs
lock
lret
inc
cmp
or
sbb
ds
das
sbb
insl
sbb
fimull
add
or
fmul
popa
adc
or
pop
mov
int
fsubs
ss
shrb
jmp
fbstp
mov
pop
popf
clc
jge
jbe
lahf
dec
push
ljmp
add
push
stos
or
dec
out
cmc
cmpl
pop
cmpb
call
jns
xchg
adc
rorb
or
scas
mov
test
fwait
xchg
xchg
enter
adc
rcrb
inc
and
add
stos
pop
and
and
repz
sub
in
aaa
dec
xchg
fsubrl
outsb
mov
cmp
aam
insl
out
ja
les
mov
xchg
mov
mov
dec
dec
mov
jne
notb
push
cmpsb
fsubrp
sbb
mov
xor
xor
out
aam
sub
ret
stos
rep
add
jp
in
jmp
insb
pop
cmp
ret
sbb
pusha
adc
adc
xchg
inc
and
inc
pop
in
shll
sub
popf
ret
xchg
sub
psubd
stos
pusha
sub
sub
push
scas
out
mov
push
iret
and
mov
ljmp
hlt
xor
inc
adc
or
sub
sbb
adc
fiaddl
sbb
ret
and
int3
iret
mov
pop
inc
andl
xchg
das
rol
rolb
pslld
pop
cmpb
clc
mov
push
shl
pop
jbe
shr
adc
or
cmp
movsl
aaa
mov
xlat
push
pusha
jno
xchg
movsl
jl
dec
imul
push
and
xor
int3
arpl
movsb
and
aad
into
test
in
flds
inc
dec
cmpsb
clc
nop
dec
in
or
dec
enter
daa
or
sub
sub
jno
cmp
sub
movsl
movsl
push
or
imul
cmp
flds
inc
xchg
xor
cwtl
sbb
mov
pop
mov
xor
cmpl
add
add
outsb
daa
push
pop
adc
call
out
pop
inc
sub
rorb
in
and
jb
push
mov
sbb
mov
adc
jmp
mov
lcall
add
add
pop
sub
test
xchg
xor
imul
or
lret
pusha
dec
ss
xchg
ja
dec
movsl
imull
push
add
mov
lahf
cmp
xchg
lcall
sar
into
xor
stos
sti
loop
movsl
xor
jo
adc
lods
insl
add
push
jae
cmp
mov
jge
in
xor
cli
dec
push
mov
lsl
shl
xor
loopne
xchg
gs
lods
or
fldcw
adc
pop
aam
repz
push
xchg
sub
dec
cmp
xor
xlat
scas
jne
sub
push
mov
pushf
addb
pop
xor
aad
sahf
adcb
je
dec
mov
lcall
ja
xchg
push
lea
jb
hlt
lret
pop
fwait
pop
inc
orl
or
pop
inc
inc
ficomps
aas
stc
pop
cmp
inc
mov
and
dec
iret
shll
mov
std
jecxz
aaa
cwtl
cltd
inc
mov
ror
aaa
icebp
leave
jle
cld
and
mov
jns
add
and
and
aam
mov
ret
mov
into
dec
insl
add
dec
filds
das
cmpsl
or
and
popa
sub
lods
lret
mov
mov
sub
sub
rolb
and
xchg
mov
mov
in
fldl
test
clc
mov
mov
outsl
shrl
jecxz
clc
pop
adc
pop
fwait
and
data16
push
in
inc
int3
jns
xor
or
xor
mov
mov
in
jae
es
and
test
repnz
push
incl
and
sbb
jmp
jne
add
xchg
inc
add
xor
mov
in
push
pop
xchg
sub
cmpsb
mov
sub
aas
ja
sub
dec
lods
jle
mov
out
mov
out
insl
xor
and
cld
pop
bound
fucomi
loop
fistl
test
out
sub
mov
enter
imul
lds
movsb
jle
push
jb
mov
cmp
push
xchg
push
fwait
pop
pop
test
jnp
arpl
cmp
or
mov
dec
adc
shr
or
adc
insl
scas
push
iret
out
cwtl
push
xchg
adc
mov
adc
std
notb
leave
adc
arpl
ds
adc
in
push
mov
xchg
shufps
push
adc
mov
leave
sub
mov
add
shr
sub
sbb
mov
in
insl
jle
pop
out
imul
mov
mov
push
sbb
imul
or
sub
or
dec
ficompl
push
push
adc
jo
es
adc
xor
push
lds
mov
inc
xchg
mov
in
repz
es
daa
or
test
loope
addb
add
cmp
sub
ds
xchg
sti
movsl
push
mov
aas
lahf
fs
push
jmp
ficompl
jb
data16
aas
outsl
xor
inc
outsl
pop
adc
insb
js
movsl
mov
sub
push
push
fdivrs
pop
fsubl
xchg
sub
vmovd
mov
rcr
ja
mov
sub
mov
jb
xor
mov
subl
sub
pop
je
lcall
popa
mov
stc
sbbb
xor
adcb
jg
pop
jl
lea
pop
fs
pop
mov
push
sti
repnz
mov
and
imull
or
mov
cmp
sub
or
push
or
mov
cmc
lcall
outsl
insb
push
pop
loop
mov
imul
add
sbb
mov
cmp
stos
cli
jg
lds
jp
and
dec
stos
xor
imulb
xor
jge
and
mov
cli
fstps
and
test
jg
jle
mov
add
iret
fldt
out
sbb
pushf
sub
imul
add
mov
xor
dec
xor
inc
inc
xchg
xchg
je
xlat
jecxz
push
scas
xchg
scas
sub
bound
jae
out
dec
out
mov
mov
inc
fisttpl
imul
push
inc
bound
inc
stc
pop
sarl
cwtl
xchg
jle
inc
mov
ja
xor
sbb
mov
std
mov
cs
push
mov
mov
mov
psllw
inc
dec
lret
xchg
mov
notl
stos
lock
les
add
adc
xor
push
sub
rol
cmpsb
mov
cmp
mov
mull
in
xor
xor
xchg
mov
mov
je
scas
rclb
cltd
or
cld
shlb
std
int
daa
out
clc
repz
stos
ljmp
iret
pop
ss
lock
out
inc
out
mov
dec
outsl
push
enter
call
icebp
cmp
add
mov
mov
orl
rol
xchg
mov
inc
jmp
or
lret
mov
mov
add
loopne
or
pop
js
xor
adc
sbb
mov
cld
xchg
jp
repz
test
lret
pop
jecxz
divl
pop
orl
pop
popa
mov
dec
cmp
out
jne
cwtl
mov
divb
jmp
addr16
pop
adcl
test
std
aas
inc
sub
mov
adc
jp
sahf
and
es
int
cmpsb
stos
movsb
jle
stos
and
pusha
dec
mov
mov
jmp
mov
inc
outsb
mov
shrb
popf
adc
xchg
mov
lea
inc
xchg
jns
sbb
pop
enter
mov
mov
adc
jmp
adc
rol
adc
mov
hlt
enter
or
faddl
pushf
in
xor
mov
inc
xor
cmpsl
stc
jns
icebp
lods
push
int3
movsl
sar
movsb
shrl
ficoms
lds
xchg
mov
imul
push
stos
movsb
ja
inc
push
outsb
cmp
jbe
jcxz
pop
pop
xchg
sbb
ja
or
jb
jl
ret
mov
dec
jmp
push
jmp
mov
scas
repz
sub
sti
daa
in
test
jp
xor
adc
cmpsb
mov
in
ficoml
add
xlat
mov
daa
or
cmp
popf
pop
sub
xor
jno,pt
and
adc
lahf
subl
mov
mov
add
lea
mov
insb
pusha
js
push
fs
cmp
inc
sub
gs
or
lret
in
jne
in
xor
push
sti
adc
mov
mov
xorb
inc
mov
xchg
lock
aam
push
mov
ret
test
fwait
pop
repz
lcall
jmp
xorb
sahf
pop
mov
test
and
push
mov
sub
stc
ja
mov
adc
dec
lret
cmp
shrb
sub
je
sbb
es
movsl
jle
test
into
shrl
cmc
popa
pushl
outsl
dec
pushw
loop
lods
outsl
imul
fs
pop
jns
data16
subl
ss
sub
cli
mov
mov
in
sti
std
pop
sbb
xorb
loopne
stos
sti
pop
jmp
pop
adc
xor
mov
repz
pop
push
xchg
mov
pop
sbb
inc
inc
xor
sub
fsubrs
add
adc
rcll
jmp
popf
hlt
cs
jb
add
cmp
dec
pop
ret
cmp
dec
jl
jno
outsb
inc
mov
xchg
jnp
xchg
data16
lea
lods
call
repnz
pop
add
jbe
mov
push
inc
pop
cmpsb
inc
out
inc
jmp
jne
aas
aaa
lret
popf
jb
insl
sub
mov
std
mov
icebp
sbb
cwtl
btc
mov
and
xor
xchg
lret
add
mov
shlb
das
das
das
jecxz
mov
mov
pop
aam
xchg
push
ret
fcoml
shlb
into
out
dec
aad
xchg
pop
jmp
popa
push
cwtl
cmp
mov
add
and
pop
pop
sbb
xchg
dec
xor
daa
outsl
iret
cltd
inc
mov
push
hlt
sbb
add
fisttpll
xchg
clc
mov
jnp
cmp
mov
pop
add
imull
push
cmpsb
pop
xchg
hlt
in
mov
add
or
and
mov
nop
xchg
mov
test
dec
sbb
xor
imul
xchg
fstps
das
jmp
add
sti
xor
xorl
push
stos
ss
and
leave
arpl
mov
leave
mov
sahf
rol
ja
xchg
xchg
jb
mov
cli
push
mov
mov
jge
jne
push
mov
sbb
mov
cs
jmp
xor
lods
andl
inc
sub
mov
leave
addr16
scas
jp
test
and
mov
mov
sub
jne
andl
pusha
out
cld
fistpll
jmp
mov
in
inc
jns
pop
jae
sbb
push
xchg
adc
cmp
mov
pop
daa
mov
stos
mov
sbb
sub
sbb
rcrb
scas
pop
aam
push
es
adc
inc
iret
les
leave
mov
daa
hlt
adc
arpl
xchg
sbb
or
sbb
fwait
imul
ficompl
add
add
pop
shll
enter
jb
and
and
mov
repnz
into
test
adc
jge
push
cmp
aaa
sbb
sahf
or
pop
xchg
jl
fcmovne
dec
mov
ret
xchg
cmp
jo
out
scas
rol
repz
sub
inc
rorb
aad
xorl
enter
daa
or
xchg
cmp
fsubl
popa
cmc
dec
ds
addb
sti
cmpsl
and
push
push
xchg
sub
inc
add
das
dec
xor
icebp
sbb
arpl
pop
bound
or
xchg
mov
push
pop
add
scas
fdivl
xlat
xlat
outsb
push
popa
mov
nop
jge
jbe
jmp
enter
xor
inc
inc
and
imul
out
pusha
sub
mov
lcall
adc
xor
test
movsb
jnp
mov
fnstcw
push
pushl
cs
fs
std
adc
test
cmp
jnp
inc
imul
xor
lret
dec
xor
xchg
or
or
pop
mov
movsb
push
sub
mov
sub
and
sar
sbb
int3
dec
mov
cwtl
ds
add
sbb
retw
lods
fwait
dec
sub
jmp
cld
adc
push
ds
lods
aad
cmp
fsubs
push
loopne
push
test
or
sbb
cmpsb
xor
or
mov
leave
xchg
je
pop
sbb
jnp
sbb
imul
sub
sub
jl
scas
pushf
sbbl
cs
or
xchg
nop
out
testb
dec
inc
lods
adc
dec
repz
mov
xchg
aaa
loopne
dec
call
jno
icebp
pop
mov
xor
xchg
add
mov
inc
jo
adc
mov
mov
push
xchg
mov
dec
adc
shll
divb
sbb
sti
shrl
test
aaa
imul
outsl
mov
mov
ffree
lock
ljmp
loop
sub
add
ret
imul
inc
loop
insl
mov
push
dec
shlb
cmpsl
or
cmpb
imul
mov
and
das
pop
mov
mov
ret
clc
xchg
cltd
jnp
testl
pop
rcr
push
test
imul
mov
scas
or
shll
sahf
cmpsb
stos
lds
out
sbbl
sub
cmpsb
mov
rolb
mov
icebp
aam
xor
jns
mov
mov
cmp
xchg
and
sbb
fwait
push
mov
adc
push
cmpsb
sti
lcall
rcrl
push
in
cltd
mov
sbb
push
mov
pop
adc
dec
jnp
dec
xchg
movsb
mov
mov
outsl
mov
inc
dec
dec
push
vmwrite
lret
rcll
out
cltd
cmp
jl
pop
or
mov
and
scas
mov
imul
test
push
lret
popf
insb
push
aaa
mov
jle
or
mov
xchg
pusha
orl
test
pop
sub
add
mov
push
push
or
popf
pop
ret
cwtl
fdivrs
push
or
stos
sub
popf
xchg
daa
std
jp
xlat
outsb
mov
scas
jp
cld
push
insl
mov
iret
popf
lret
ss
leave
and
dec
mov
xchg
fildl
hlt
or
push
pop
lahf
inc
xor
mov
int3
jnp
mov
add
ficomps
lods
imul
movsl
inc
repnz
pop
cmp
aaa
pusha
movsb
lea
jbe
fisubs
jge
xor
fistpl
or
loopne
jl
xchg
dec
daa
aam
push
scas
rorl
pop
sbb
jo
in
scas
mov
jle
and
test
adc
inc
xor
pop
cmpsb
add
in
test
insb
enter
daa
or
pop
cmp
adc
loope
aas
pop
sub
aas
lret
cmp
add
movsl
insb
mov
mov
push
shrl
add
and
rcl
es
pop
mov
cmp
mov
and
sbb
mov
sub
dec
adc
imul
aad
inc
sbb
aam
lods
daa
mov
and
xchg
push
mov
or
pop
icebp
scas
push
lcall
aas
mov
add
ja,pn
sahf
mov
jb
andb
daa
mov
or
frstor
adc
inc
gs
std
in
cmp
ss
sahf
lret
pop
xor
push
and
arpl
cwtl
into
xchg
cmc
out
xchg
cwtl
xor
push
cmpsb
outsl
or
imul
ret
fadd
adc
insb
insb
add
jp
inc
xor
addb
sub
or
call
repnz
mov
adc
mov
pop
sub
push
adc
or
inc
pop
ja
mov
push
repz
mov
mov
repz
cmp
testb
sarl
sub
push
jmp
sbb
aad
jmp
nop
ret
dec
dec
iret
int3
inc
rcrb
je
and
jecxz
popl
popf
xor
call
lock
mov
sub
xchg
add
pop
in
adc
or
fucomip
aas
jne
sub
mov
shrl
out
ja
cmp
jg
out
cwtl
test
test
and
int
lret
fsubrp
adc
mov
repz
sub
mov
mov
arpl
rclb
insl
pushf
icebp
aam
lret
les
mov
test
lods
jbe
sti
mov
dec
aaa
and
xchg
dec
nop
pop
rorl
ror
mov
cltd
mov
cwtl
test
mov
test
xor
pushf
popa
into
clc
movsb
dec
adc
and
fs
aaa
scas
scas
stos
mov
lock
in
clc
xchg
and
push
pop
jbe
syscall
adc
or
pusha
xor
cmpsl
daa
mov
mov
into
dec
test
sti
lret
xchg
and
sbb
inc
mov
outsl
or
scas
data16
inc
bound
jns
add
sub
cmp
dec
xor
out
jns
xchg
in
add
xchg
addr16
mov
mov
mov
adc
jb
or
xor
mov
sahf
jle
xor
lcall
xchg
mov
mov
and
bound
ret
enter
mov
inc
add
or
adc
xor
and
imull
outsl
jnp
cmp
in
pop
daa
pusha
sbb
fistpll
mov
pop
pusha
sub
inc
insl
arpl
mov
lea
rcrl
sbb
jle
adc
xor
imul
sbb
adc
xor
iret
cld
aam
ret
xchg
movsl
sbb
hlt
test
fisttps
or
xchg
loop
inc
mov
dec
fcmovb
out
test
int3
pushw
adc
mov
cmp
xchg
cmpsb
xchg
mov
fs
sarb
and
movsb
sbb
pop
mov
xchg
jge
cmc
sbbl
lcall
jno
int
jl
mov
push
xchg
aam
xor
xchg
idivl
nop
xchg
mov
test
fildl
inc
ret
cmpsb
xchg
in
and
enter
daa
or
jmp
pop
nop
pop
loope
mov
lods
test
cmp
inc
dec
movsl
jae
or
jecxz
mov
aaa
test
pop
add
outsl
cld
xor
scas
jmp
cmp
xchg
pop
cli
cmp
push
movsl
mov
lods
sub
or
or
lods
stc
call
adc
inc
rol
xor
push
sub
int3
mov
mov
pop
popf
ljmp
outsb
xor
mov
xor
pop
jo
popf
lcall
ljmp
jle
sahf
inc
lahf
mov
mov
push
jle
stc
pushf
in
sbb
cwtl
or
fdiv
add
mov
repnz
xor
pop
push
cmp
or
into
push
adc
mov
xor
lea
popf
clc
cmp
imul
and
enterw
imul
add
out
inc
cli
dec
fwait
lret
mov
es
sti
or
sar
dec
lock
add
loopne
loopne
pop
dec
mov
adc
fnstcw
inc
les
adcb
inc
jb
icebp
aaa
fcmovnbe
jmp
imul
pushf
xlat
out
jmp
jge
cs
call
nop
popf
mov
cmp
pop
cmp
jno
je
nop
jecxz
jg
mov
sub
call
outsl
js
pop
sbb
test
sub
enter
imul
cmp
gs
aas
adc
jge
mov
inc
and
xchg
or
add
and
mov
insb
inc
cwtl
inc
inc
cmpsl
mov
repz
adc
cld
mov
and
dec
in
mov
insl
or
inc
dec
fsubrs
orb
sub
ret
mov
sbb
dec
xor
insl
or
dec
cmpsl
lds
mov
ja
lods
loope
jg
xchg
mov
xlat
and
xor
pop
pop
lock
mov
cltd
jmp
aam
mov
dec
jp
dec
mov
ffree
push
in
filds
mov
ljmp
stc
pop
loop
mov
out
inc
pop
xchg
leave
mov
xor
stc
pcmpgtb
or
xchg
fidivs
sub
xchg
xchg
cli
dec
call
xor
sbb
mov
inc
inc
stos
popa
or
stc
mov
je
ficompl
sbb
add
dec
ret
xor
in
insl
in
ret
mov
shlb
sub
pop
iret
dec
lods
ja
out
sbb
xorl
adc
dec
fmull
inc
jne
mov
mov
inc
movsb
out
push
adc
cmpsl
jmp
xchg
into
mov
or
lahf
or
insb
pop
jp
jae
and
stos
mov
lcall
cwtl
or
pusha
mov
fstp
xlat
jns
xchg
xor
inc
repnz
lcall
push
fdivl
popf
lods
xor
push
imull
stos
adc
xchg
aad
jge
sub
pop
pop
scas
inc
cmpl
adc
dec
fmul
pop
jecxz
ret
movsb
leave
sbb
ja
hlt
and
dec
inc
and
or
or
fildl
fbstp
add
sbb
push
lds
fsubp
icebp
aaa
vpinsrw
jb
push
mov
mov
imul
scas
pusha
movsb
mov
sbb
sub
fwait
sbb
rcrb
or
fstl
dec
sbb
dec
add
lret
push
xor
out
sbb
cltd
and
inc
test
cmpsb
xchg
or
in
jbe
bswap
ret
lock
add
push
shr
cmpsl
jno
sub
sahf
jg
outsb
popa
arpl
std
nop
mov
jle
enter
gs
or
jle
std
or
test
pop
xlat
mov
js
cmp
lcall
push
mov
outsb
jns
jp
insl
add
shlb
pushf
bound
add
inc
mov
dec
movsl
and
pop
push
ret
cltd
pop
int
idivl
pop
out
rcrl
xchg
daa
orl
sub
sbb
and
sub
mov
mov
mov
cmpsb
and
adc
pushl
dec
jle
cmp
lods
mov
imull
pop
lret
xchg
xor
shl
or
into
dec
inc
mov
jge
repz
or
pushf
imul
mov
lods
push
out
xchg
mov
sub
cli
jle
pop
mov
xchg
in
sbb
mov
fimull
test
je
addr16
adc
pusha
pusha
fnstenv
lcall
mov
pop
pushf
cmp
push
xlat
sub
sub
mov
adc
ljmp
repnz
aad
push
nop
js
xor
in
xchg
shll
pop
fisttps
jecxz
mov
mov
or
xchg
out
mov
dec
sbbl
adc
fcomi
jp
pop
xor
popa
inc
sbbb
jb
xor
mov
jmp
push
idiv
mov
test
cmp
mov
xor
cld
fcomip
fmul
mov
inc
enter
hlt
lock
js
das
pop
cli
jg
adc
sub
inc
jae
sbb
ret
insl
push
rorb
push
push
cmpsl
push
mov
mov
mov
xchg
lods
dec
pop
jno
inc
mov
mov
mov
mov
mulps
jae
ficomps
sbbb
and
pop
push
push
sar
fucomp
daa
cmp
sbb
xchg
pop
pop
sahf
ljmp
jp
lea
xchg
jne
out
stos
sub
adc
xor
ret
xor
or
fdivl
repz
dec
dec
mov
mov
cs
xor
insb
testl
clc
imul
xchg
outsb
movsl
jp
mov
lret
das
cmc
inc
in
aad
xchg
add
cmpsb
sbb
pop
mov
ja
outsb
mov
lret
sub
push
mov
js
aad
mov
andb
xchg
lods
je
xchg
pop
into
outsl
sbb
cltd
out
cmp
or
dec
add
sub
and
movsb
jnp
rolb
cmp
in
push
xor
pop
mov
test
xchg
or
out
into
add
jae
imul
push
mov
aam
lock
enter
test
xor
cmp
scas
mov
dec
ljmp
cmc
sbb
outsl
aas
sub
xchg
repz
hlt
aas
adc
arpl
or
or
xchg
lret
fisubl
push
adc
in
icebp
int3
cmp
cmp
orb
mov
lds
mov
lea
sbbb
cmp
loopne
movsb
cs
xor
mov
adc
mov
aaa
sbb
or
jno
adc
jl
test
dec
je
ja
pop
mov
xor
dec
pop
sbb
and
movb
sbb
inc
loopne
or
pop
mov
mov
push
shll
mov
mov
ds
mov
sbb
lahf
push
jg
push
sbb
mov
add
xor
test
pop
out
js
cbtw
pop
js
sbb
rcrb
loop
xchg
bound
sub
into
mov
sar
js
repnz
mov
mov
xor
mov
jp
mov
int
inc
cmp
inc
test
outsb
cwtl
mov
mov
and
sub
mov
xchg
sti
sbb
lods
mov
dec
xlat
xor
mov
lret
mov
fs
or
add
pop
adc
insb
mov
addr16
popa
mul
pop
xchg
lret
sbb
xchg
mov
cmp
outsl
xchg
mov
add
xor
out
add
std
outsl
cmpsb
adcl
imul
aas
sbb
lods
aaa
cwtl
pop
mov
int
cli
mov
outsl
mov
cld
iret
in
push
pop
je
mov
mov
push
adc
sub
fldl2t
popf
les
repz
inc
xchg
xchg
xorb
push
adc
rorl
in
adc
aaa
sti
pushf
sub
nop
push
cs
outsl
sub
gs
mov
dec
push
sahf
inc
stc
jns
dec
iret
lock
fs
push
cmpsb
lret
jl
add
inc
lcall
adcb
subl
mov
testb
mov
aas
push
and
jb
out
mov
je
mov
testb
std
je
and
mov
xor
mov
jmp
stos
jp
cld
or
mov
mov
add
idivb
mov
xchg
fcmovnb
cmpsl
lods
arpl
dec
push
fsubrs
xor
sub
cmpsl
add
sbb
popa
lret
lods
mov
cmpl
add
inc
xchg
pop
cs
rolb
out
push
mov
jbe
repnz
fstl
loope
clc
push
daa
in
xchg
jb
ljmp
push
pop
cmp
mov
out
or
add
push
ljmp
add
movsb
outsl
or
out
xor
daa
or
rorl
mov
fldt
lods
push
pop
sbb
push
mov
fwait
shr
pop
push
pop
dec
roll
subb
lcall
mov
xor
mov
in
cmp
xchg
push
or
ds
pop
inc
aad
ja
jb
dec
push
and
add
pop
mov
out
dec
dec
mov
ffree
mov
rcl
adc
rcl
jmp
sub
outsl
subl
out
popa
leave
sub
fwait
sti
lret
mov
jp
xchg
xchg
and
jo
jnp
test
push
in
xchg
mov
mov
xchg
xchg
jb
mov
lods
jae
test
lods
popf
sti
xor
mov
pop
sub
stos
clc
jmp
xchg
xor
sbb
jge
imul
scas
push
push
pop
push
mov
adc
or
iret
sbb
ret
inc
leave
or
adc
mov
arpl
mov
or
add
mov
fcmovu
aaa
call
int3
daa
mov
in
fisubs
insl
in
iret
imul
and
repnz
adc
cmp
push
dec
cmpsb
xlat
jbe
cmp
xchg
fcompl
adc
out
aaa
xlat
xchg
cmp
outsl
int3
data16
imul
mov
aad
push
cmp
daa
jo
cmpsb
sbb
sub
dec
subl
outsl
out
cmpsb
adc
imul
push
stc
daa
add
cmp
loope
xor
sub
dec
dec
cmp
rolb
or
lods
mov
mov
gs
cmp
push
adc
inc
or
fcmovbe
stos
xor
js
mov
push
pop
ds
cmp
sbb
or
ljmp
sti
loopne
rcl
imul
daa
rolb
mov
fwait
push
and
dec
dec
int
jne
sub
sbb
es
mov
jb
sbb
sub
test
xchg
call
jg
jbe
mov
loop,pt
shl
fs
stos
sbb
ror
mov
fsubs
aam
mull
xor
insb
pop
outsl
cmp
loopne
or
out
into
adc
inc
cmc
or
xor
out
test
mov
mov
mov
mov
adc
imul
push
add
lods
push
es
or
in
mov
mov
addr16
sti
pop
test
jmp
push
gs
pop
push
loopne
lret
movsl
sbb
adc
sub
cmpsb
les
mov
pop
sbb
mov
mov
sub
mov
int3
jmp
inc
fisubrs
mov
js
nop
cs
dec
leave
sbb
or
jmp
inc
cmpsb
lret
int
jecxz
out
test
jge
call
in
pminsw
mov
dec
sbb
mov
dec
inc
adc
inc
mov
loopne
icebp
jb
jb
int
mov
incl
shr
xor
orl
sbb
cwtl
jno
sbb
push
in
cld
xor
jb
mov
jl
fnsave
xchg
push
adc
loopne
xchg
jge
xchg
aam
sbb
ret
ss
rclb
stos
insl
cmp
cmpsl
add
dec
mov
loope
pop
lods
and
pop
mov
aam
pushf
and
add
pop
pop
dec
ja
rcrb
mov
cltd
mov
xor
aam
push
xchg
mov
push
clc
nop
xchg
xchg
or
out
dec
lret
shll
pop
jecxz
pop
stos
jo
jmp
jo
imul
jmp
add
int
or
xor
movsb
andl
mov
push
xchg
xchg
sbb
jg
or
int3
or
iret
out
fwait
add
or
xchg
or
mov
jg
jns
repnz
xor
dec
mov
imul
int
pop
add
das
ja
cli
fmull
cs
xlat
xchg
push
mov
push
cmp
jne
fwait
test
hlt
jbe
sti
mov
xchg
xchg
hlt
leave
cmp
xchg
cld
mov
xchg
mov
test
cwtl
sbb
mov
and
jmp
inc
jnp
push
les
and
lods
je
pusha
mov
inc
fbstp
cld
xchg
scas
shll
cmp
icebp
inc
mov
sub
and
mov
mov
fs
xchg
fimull
imul
imul
aam
pushf
mov
js
cmp
xchg
imull
leave
sbbl
arpl
inc
sub
push
or
jge
xchg
mov
sbb
adc
pop
int3
adc
loop
in
mov
lds
cltd
rol
hlt
mov
mov
sbb
imul
movsb
inc
mov
add
jge
out
sbb
ja
aaa
xchg
inc
je
bound
jno
call
nop
dec
push
add
push
push
push
and
scas
or
pusha
and
or
test
pop
inc
sbb
int
cmpsb
xchg
jge
in
sub
cld
daa
add
lds
jmp
cwtl
loope
dec
cmp
loop
cmp
pop
xor
and
and
adcl
sbb
add
push
loopne
xor
sti
cmpsb
pop
dec
and
inc
inc
pop
testb
push
nop
pop
xor
mov
insl
subb
cmp
inc
in
shlb
sub
lods
mov
jno
mov
inc
stos
and
shlb
mov
sub
es
insb
and
push
mov
mov
and
sbb
inc
and
rorb
icebp
subb
mov
mov
dec
cli
stc
js
andl
shll
movsl
jno
cmp
fcomp
inc
div
gs
push
lret
hlt
xor
repnz
and
insl
into
negb
cmc
shlb
xor
jne
loop
sub
adc
cmp
or
push
bound
adc
jecxz
ss
pop
dec
jge
push
jle
in
rclb
mov
mov
decb
xor
gs
aad
push
jmp
pop
out
sahf
adc
test
shrb
cld
inc
jg
push
or
sbb
fnstsw
xlat
in
shrl
and
pushf
sub
jmp
mov
cs
pop
aad
adc
fmull
xor
movsb
dec
mov
mov
lods
push
xchg
lea
dec
call
imul
out
xor
or
xchg
fildl
mov
dec
jg
roll
aas
nop
sub
mov
and
orl
cmp
std
ret
cwtl
sub
movsb
mov
xchg
icebp
pop
je
cld
pusha
call
lret
mov
int
mov
cmp
lock
orl
sub
aam
jle
ret
lds
es
inc
imul
jecxz
mov
or
add
sahf
mov
clc
inc
xor
sub
mul
or
pushf
jnp
insb
or
shr
ja
cltd
lds
mov
mov
push
push
pop
cmpsb
fstpl
add
lret
fwait
sbb
popa
jbe
sarl
outsb
sbb
rcll
xchg
in
push
push
mov
cld
sbb
inc
sub
xor
jne
mov
int
stos
dec
test
or
stos
add
sub
mov
or
imul
movsb
sbb
add
mov
mov
xor
cmpsl
daa
jns
out
in
add
xchg
mov
jnp
mov
mov
add
mov
mov
lds
xchg
jne
mov
sub
mov
mov
xchg
dec
sub
mov
xchg
sub
xchg
xchg
les
add
jp
mov
and
pop
sub
in
jnp
leave
jp
and
cli
in
mov
pusha
and
pop
fists
mov
jae
test
or
fs
pop
push
call
ret
adc
test
cmp
xor
sbb
jl
imul
fisubrs
pop
mov
adc
mov
xlat
inc
lret
ret
add
clc
mov
arpl
fsub
or
clc
cs
lock
xchg
rolb
test
or
sbb
fisubrs
mov
push
repnz
cmp
dec
inc
movsb
iret
popf
jb
out
jo
call
push
sbb
insl
pop
or
popf
jno
mov
jl
mov
dec
shr
push
add
mov
jo
jg
scas
jmp
and
xor
push
rcl
pop
inc
clc
and
adc
dec
scas
insb
outsl
daa
add
cmp
mov
loope
xchg
sub
dec
scas
cmp
push
sarl
mov
movsl
xchg
jge
and
pop
pop
lahf
jnp
imul
inc
sbb
movsb
add
into
xor
push
mov
adc
ss
xor
scas
sub
lahf
inc
fsubl
xchg
push
mov
outsb
add
dec
cld
rorb
int
orb
mov
arpl
cld
pop
push
iret
int
int
test
sub
and
lcall
leave
mov
movsl
sahf
sbb
pusha
sahf
jne
cli
test
jge
addb
jg
mov
dec
stc
das
fists
adc
gs
pop
out
xor
cwtl
inc
or
and
mov
xor
inc
sbb
aas
mov
into
fstps
push
xor
adc
xlat
call
or
add
in
push
pop
aam
in
in
fmull
loop
inc
cli
dec
jne
mov
cmp
mov
xor
add
lock
lcall
ja
imul
scas
xor
lret
sub
and
sbb
and
cwtl
adc
pushf
cs
pushf
jmp
in
test
jle
xor
cmp
and
xchg
inc
xor
fidivl
mov
or
scas
jbe
lea
jnp
ljmp
xorl
arpl
inc
and
cli
inc
in
std
xchg
das
and
jb
cmp
mov
adc
packuswb
or
cwtl
out
fidivl
dec
insb
cmp
das
daa
cld
mov
dec
lret
js
cmp
imul
das
frstpm(287
jmp
sub
push
aam
cmp
fsubr
dec
insl
push
outsl
adc
lods
ret
add
arpl
movups
clc
scas
inc
mov
sbb
sbb
stos
pop
mov
jno
cld
mov
xorb
jno
fldl
xor
xchg
push
leave
ljmp
jbe
cmp
stos
dec
adc
xchg
sub
push
jnp
mov
aas
sahf
in
add
orb
cs
xor
lcall
rclb
sub
sub
ret
fldt
dec
xlat
jmp
push
inc
lock
mov
out
push
dec
pop
xor
add
jns
cmpb
inc
inc
mov
fdivrs
jbe
inc
ja
xchg
cmpsl
dec
sub
mov
jmp
ja
xor
scas
dec
dec
mov
mov
out
mov
mov
and
shr
mov
testl
pusha
dec
mov
mov
ss
hlt
sub
prefetch
cmc
icebp
pop
insb
repz
jnp
mov
in
pop
sub
mov
sub
stos
pop
popf
inc
rorl
daa
jae
sti
loopne
stos
push
mov
push
les
stos
push
das
cmp
sbb
cmp
sub
icebp
scas
das
pop
fistl
mov
push
iret
ss
ret
add
hlt
imul
arpl
out
popf
or
jae
xor
cmp
inc
or
mov
mov
cmp
fs
sar
fidivrs
push
mov
cmp
verr
icebp
push
jbe
ret
test
sbb
pop
aaa
adc
in
dec
push
adc
dec
lods
jl
insl
jge
xor
jne
iret
inc
sub
or
and
and
test
popf
mov
inc
sbb
cmc
cmpsb
cltd
lret
stc
dec
je
stos
std
add
add
dec
cmp
psraw
in
sub
mov
cmp
mov
ret
movsl
popf
sti
xchg
and
sar
push
sub
aaa
sbb
adc
xor
in
jnp
std
pop
lcall
pop
je
cld
push
push
push
or
sub
push
outsb
push
sbb
shrb
cmpsl
outsb
jo
andb
mov
sub
mov
push
sarb
int
sub
or
pop
push
je
jg
xor
sbb
inc
sahf
sbb
push
test
test
jg
mov
std
stc
out
jl
pop
sbb
adc
addr16
lods
push
cmp
push
mov
jecxz
lretw
push
icebp
adc
cmp
sub
or
into
mov
outsb
arpl
insb
lahf
cmpsl
outsl
and
loop
ficoml
adc
fdivrl
add
nop
data16
shll
xor
loope
mov
jge
jbe
subb
sti
and
add
push
fidivrs
loopne
push
pop
adc
push
dec
inc
jl
lcall
sbb
push
mov
xlat
arpl
mov
xor
dec
pushf
fldcw
jmp
call
pmullw
mov
mov
inc
and
dec
stos
sahf
push
jecxz
mov
mov
sbb
call
imul
orl
int3
cltd
fnclex
arpl
inc
test
imul
jl
jb
mov
or
rcr
jecxz
testb
adc
mov
out
mov
mov
push
decb
lret
out
sahf
mov
inc
addr16
jl
lock
mov
bound
popf
ret
jecxz
pushf
es
push
je
in
mov
push
cmpsl
add
mov
es
lods
arpl
stos
mov
cmp
rcrb
stos
inc
sti
rclb
add
test
mov
mov
clc
inc
pusha
ficoml
inc
in
shrl
and
in
pop
stos
cmp
test
jae
pop
push
push
push
and
sahf
inc
les
push
pop
or
adc
mov
sarl
inc
test
xchg
push
xchg
cltd
jbe
rcll
or
sbb
push
ljmp
add
idivb
xor
fdivrl
mov
into
xchg
nop
arpl
mov
clc
xlat
mov
xor
fbstp
test
push
mov
leave
inc
mov
mov
out
sbb
xor
cltd
scas
and
xchg
cld
xchg
bound
dec
xchg
push
mov
in
out
xchg
sub
xchg
dec
jp
dec
cmpsb
and
mov
ja
jl
cmpl
insb
in
arpl
pop
je
fists
dec
es
loope
stos
inc
fcoml
jae
dec
jecxz
outsb
daa
popf
xchg
jecxz
mov
add
loope
fildll
inc
sbb
int3
push
imul
xchg
scas
xchg
xchg
adc
push
sbb
iret
xchg
lea
leave
out
xchg
hlt
mov
shll
jno
inc
xor
mov
push
sub
xchg
fisubl
lret
insb
int3
shll
inc
fidivs
imul
repnz
jne
movsb
in
les
out
jbe
fdivr
jge
aaa
imul
inc
add
rcll
or
call
mov
dec
lahf
pop
testl
xchg
dec
or
scas
test
jns
test
push
sbb
loopne
dec
enter
daa
add
cmp
mov
cltd
lcall
iret
imul
and
mov
aas
pop
sbb
in
add
cmpsb
xchg
xor
mov
ds
pop
shll
pop
mov
stos
push
rcr
push
xchg
xchg
clc
fdivrl
mov
lret
or
adc
inc
cmc
pop
int
outsb
xorb
mov
mov
xor
and
scas
sbb
aad
test
and
sub
imul
sbb
rorb
and
sahf
mov
divb
cmpb
jg
fadd
mov
mov
stc
popf
pop
mov
adc
fistpll
cmp
push
pushl
mull
add
enter
ja
lret
jmp
into
lahf
add
cmc
daa
mov
xor
inc
mov
add
loop
call
adc
stos
cmp
out
test
pop
push
lods
lods
mov
mov
jne
mov
andb
test
sti
sarl
ja
outsb
gs
in
jl
vmaxss
addl
cmp
repz
rcrl
push
mov
mov
adc
pushf
test
nop
test
cs
fwait
sub
enter
lcall
inc
pop
into
ljmp
mov
jecxz
xorb
jg
sbb
call
andb
pop
add
push
fistl
js
pop
add
inc
das
cli
cmp
test
aas
insl
frstor
jb
jb
mov
sub
xor
sub
or
into
paddw
rorb
xor
call
cld
loope
mov
push
cmp
mov
mov
lock
repz
pop
and
jb
jp
ficoms
dec
mov
jle
mov
cmp
rcrb
mov
sub
insl
daa
repz
leave
jecxz
shlb
mov
les
and
clc
fst
fisubrl
xchg
rorb
shr
pop
popl
out
cld
or
mov
popf
jle
std
in
xchg
add
leave
or
out
xor
loope
mov
pop
mov
test
test
sbb
ja
push
das
mov
mov
jns
add
or
in
pushl
xchg
xor
pop
fs
popf
fsub
lods
sub
xchg
fisttps
mov
fs
pop
in
dec
jbe
add
dec
adc
mov
int
mov
adc
jnp
adc
jne
jg
mov
pop
or
jo
and
xchg
xchg
and
and
sahf
repnz
adc
addr16
pusha
mov
lret
and
mov
insb
leave
fidivrl
jle
pop
mov
leave
rclb
pusha
hlt
pop
dec
fbstp
xor
pop
sbb
sbb
mov
push
xor
fstpl
stos
pop
or
inc
insl
sub
xchg
ss
fstpl
xor
imul
mov
cmc
sbb
adc
push
je
hlt
mov
ret
ds
pop
in
hlt
add
arpl
outsb
or
mov
inc
test
fstp
pop
insb
adc
outsb
scas
outsl
int3
mov
lret
sbb
dec
xor
jb
insl
shrb
inc
mov
cld
and
cmp
adc
push
shll
jns
mov
les
sbb
sbb
or
xor
jl
pop
adc
push
stos
cmp
xor
imul
mov
and
test
xor
cmp
out
cmpsb
lahf
out
in
jns
enter
daa
add
cmp
mov
shl
jl
cmp
aam
repnz
and
adc
sbb
and
add
nop
mov
in
sbb
pop
call
clc
mov
push
lock
push
in
inc
sbb
lods
sbb
and
mov
mov
rcrb
dec
lret
ret
jae
xchg
pop
mov
daa
push
and
in
bound
fdivs
int
enter
xor
lcall
adc
cltd
sub
inc
enter
sub
xchg
push
pop
jg
add
jno
pop
stc
push
mov
jae
jae
pop
sti
outsb
and
daa
fmul
mov
push
lret
add
lahf
sbb
cmp
addb
xchg
sbb
cmc
out
or
xor
cli
loopne
loopne
mov
nop
pop
mov
leave
out
xchg
push
add
xor
lods
mov
fsubrs
fildll
cli
jecxz
fisubl
jle
push
sbbb
gs
stos
loopne
xor
adc
in
dec
fnstenv
insl
or
repz
xchg
adc
sbb
leave
subl
sbb
adc
jns
pushf
das
xor
jmp
sub
cmpsl
sbb
nop
jne
daa
dec
movsb
into
fs
imul
je
ret
aaa
nop
mov
out
cmp
addr16
mov
cmpl
loop
fildl
xlat
pop
cmpsl
push
loope
cmp
inc
mov
pop
xlat
mov
mov
jp
sub
rclb
xor
sbb
push
jno
int3
mov
mov
add
or
pop
lret
lds
mov
dec
mov
das
js
cli
mov
push
pusha
test
sbb
ret
add
es
xchg
jb
mov
int
lcall
mov
popa
push
push
clc
lods
cmp
mov
and
or
pop
call
xchg
test
inc
les
arpl
jmp
clc
mov
movsb
xchg
adc
clc
rcll
scas
xchg
pop
cmp
scas
out
pop
xchg
add
sbb
cld
jno
pop
lcall
xchg
cmp
mov
fldcw
dec
and
push
lods
mov
mov
cmpsl
cmpsl
or
sbb
in
movsb
imul
cmp
test
call
xor
jns
and
cmp
push
mov
cmpsl
push
mov
rcrl
imul
mov
cmc
stc
mov
adcl
jne
xor
dec
sbb
pop
fidivrl
jmp
jmp
cmp
out
shlb
or
mov
jp
fsubl
and
mov
jnp
aaa
dec
jle
in
mov
outsl
cmp
xchg
int
lock
dec
push
bound
arpl
mov
push
hlt
cmp
mov
cmpl
stos
xchg
lea
imul
cmp
push
xor
ror
push
out
ret
leave
aam
ja
dec
test
arpl
or
in
dec
inc
daa
shll
or
iret
add
mov
fdivrp
mov
rorb
mov
dec
daa
mov
sub
movsb
sti
jae
push
and
sub
sbb
cmpsb
aaa
push
dec
popf
or
cs
jno
je
jl
lea
jge
jmp
xor
and
addr16
and
jno
lret
pushf
xor
mov
cmpsb
and
enter
daa
pushl
cmp
xchg
xchg
pop
fisubl
cmp
xchg
ds
int
and
mov
idivl
push
mov
push
aam
push
into
in
xor
aad
bswap
or
xchg
popf
pop
xor
rcll
sbb
jp
adc
outsb
xchg
add
movsl
stc
sar
mov
mov
sbbb
test
and
jo
push
fildl
int
push
or
mov
ret
cwtl
fadds
mov
inc
sahf
add
movsl
test
jmp
mov
push
jg
sub
stc
or
fs
xor
iret
ss
push
test
mull
fdivl
jge
das
xor
les
push
inc
into
gs
xor
pop
outsl
mov
out
imul
cwtl
add
int
lods
mov
cltd
out
stos
sar
xor
jmp
cmp
mov
or
pop
mov
mov
fldcw
pop
testl
cmp
jns
or
xlat
and
sub
adc
fdiv
pushf
fcmovbe
xchg
jmp
je
or
nop
push
xor
inc
jle
gs
adc
je
and
inc
in
mov
xor
out
pop
pop
gs
shlb
dec
lahf
sub
pop
dec
push
addl
lret
mov
jns
lret
mov
inc
loop
leave
clc
mov
std
add
pop
xor
sbb
mov
lret
xor
loopne
jle
jbe
xchg
lock
out
das
push
adc
mov
inc
inc
nop
aam
insb
mov
es
cmpsb
insl
mov
cmpsb
pop
cmpsl
aaa
cmpsl
mov
imul
mov
cmpsb
add
mov
xor
or
cltd
fdivs
mov
or
movsb
frstor
loope
clc
repnz
test
mov
xchg
xor
stos
or
cli
out
ret
xchg
dec
clc
push
push
out
lods
btc
add
xor
xor
js
mov
fdiv
dec
dec
xchg
xchg
lret
cmp
inc
xchg
mov
or
int
sbb
ds
rcl
xor
aas
lahf
icebp
pushl
outsb
xor
mov
in
cmp
mov
cltd
sti
mov
in
dec
ja
cld
stos
dec
idivl
and
loope
inc
mov
lock
xchg
cmp
jne
dec
cmp
stos
bnd
cmpsb
sub
mov
jl
mov
inc
adcl
movsb
and
orb
cmp
addr16
fsubrl
jp
xor
and
xchg
mov
mov
jle
mov
in
hlt
pusha
sub
out
movsb
inc
xchg
mov
sti
in
inc
std
or
mov
int
or
adc
push
rorb
xchg
in
sbbb
push
imul
daa
scas
mov
jb
adc
sbb
ret
push
leave
dec
sti
hlt
xchg
xor
arpl
xchg
inc
cmp
daa
jmp
pop
out
ds
cmpsb
arpl
add
fcomps
add
ficomps
sbbb
int
mov
mov
jle
movsb
xchg
cmp
fdivl
shrb
pop
aaa
adc
add
jno
leave
int3
jl
xchg
fmuls
adc
pop
insb
xor
and
mov
inc
fwait
xchg
and
fisubrl
leave
xchg
xchg
inc
pop
leave
xchg
cmpsb
movsl
aam
in
xchg
aaa
pop
enter
daa
pop
or
sbb
leave
fs
push
cmp
xor
movsl
mov
mov
lahf
push
push
push
sbb
add
pusha
out
subl
xchg
mov
xor
nop
enter
jb
push
dec
mov
fdivrl
xchg
or
imul
aam
lods
subb
mov
adc
and
aaa
inc
push
fiadds
sub
push
fiadds
data16
lcall
dec
mov
add
sahf
movsb
add
or
jnp
ret
mov
out
stc
ret
mov
push
ss
jbe
and
fdivrs
icebp
shl
mov
xor
cmp
sub
into
dec
ds
jl
xor
movsb
mov
sahf
mov
loop
test
imul
push
add
mov
mov
rclb
cli
dec
jecxz
mov
push
mov
sti
loopne
mov
loopne
push
mov
jle
aaa
adc
daa
inc
add
aaa
repz
mov
xchg
cwtl
test
sbb
aas
pushf
jb
pop
jecxz
sub
push
add
nop
pop
fwait
pushf
test
jmp
orb
insl
repnz
popf
stc
dec
nop
sub
mov
bound
xchg
or
xchg
jecxz
jl
mov
push
in
sbb
xchg
gs
pop
sbb
fimuls
mov
pop
in
das
pop
inc
les
addr16
jae
push
dec
pop
sahf
jb
shlb
mov
int3
mov
mov
pop
je
std
lods
jbe
cwtl
mov
xchg
mov
shll
sub
mov
or
lock
scas
mov
mov
ds
lret
fs
pop
inc
or
addr16
out
mov
dec
xchg
push
fwait
cmpsl
std
fidivl
popa
subb
lods
bsr
mov
cmp
add
pop
fildll
fiadds
cltd
jge
jecxz
push
test
fisttpll
psubb
pushf
xor
adc
popa
rol
mov
mov
and
xchg
bndldx
xor
mov
push
or
inc
andb
jmp
dec
out
jmp
test
adc
xchg
mov
inc
sub
push
cmc
push
jbe
lds
pop
ljmp
xor
jns
pop
sub
dec
inc
jp
int3
mov
mov
jbe
dec
pop
sbb
and
ljmp
mov
pop
mov
insb
jne
ret
lret
mov
fcoml
or
std
enter
mov
adcl
fisubrs
jae
xchg
pusha
and
aas
out
push
movsb
ret
xchg
repnz
mov
fisubrs
pusha
lds
pop
xchg
jae
mov
jl
inc
or
fwait
push
jp
push
mov
lcall
stos
nop
scas
or
cmp
xchg
imul
pop
scas
push
popa
sub
rcrl
iret
adc
ret
ljmp
adc
inc
inc
adc
or
fcmovbe
leave
inc
and
xchg
loop
xor
xchg
int3
jg
ret
pop
ss
fidivrs
jp
lds
test
rolb
test
cmc
int
cmp
movsb
adc
xchg
push
cmpsb
jge
sbb
in
sbb
or
inc
pop
jno
inc
mov
dec
pop
cltd
lret
fcompl
jo
jmp
pop
and
test
push
xchg
sbb
inc
out
mov
in
jl
add
xchg
jle
daa
std
mov
loope
faddl
sub
inc
cmp
pop
or
movsl
rorb
mov
xor
push
ficomps
stos
mov
add
inc
push
xor
dec
dec
adc
pop
jl
js
mov
scas
out
push
xchg
fsubl
cwtl
sub
jno
outsb
push
cmc
adc
scas
sarb
fldl
inc
cmc
fidivl
inc
mov
int
adc
cltd
sub
pop
in
mov
sarl
mov
and
bound
sahf
inc
push
pop
test
cltd
std
and
jg,pn
cmpl
popa
adc
jns
pusha
fs
adc
hlt
divl
jmp
mov
fdivr
imul
lret
inc
xor
cmp
cmp
or
cmp
inc
out
xor
cwtl
mov
dec
repz
sahf
das
imul
or
sub
imul
xor
lock
or
cli
jl
andb
or
xchg
stc
incb
mov
gs
xor
xchg
decl
adc
out
cli
les
xor
xchg
pop
fnstenv
cmp
pop
xlat
sahf
stc
push
sub
mov
pushf
xor
subl
dec
leave
aad
push
xlat
nop
push
dec
decb
imul
movsb
xchg
dec
popa
jecxz
mov
mov
mov
fisttps
xchg
fimull
in
out
pop
lret
mov
loopne
jne
cmp
int
lea
add
add
inc
mov
and
jmp
pop
cmp
push
inc
test
addr16
jne
push
ja
cwtl
dec
mov
jno
add
icebp
cmp
lea
lret
adc
mov
mov
jno
lock
cmc
mov
xor
jle
ret
scas
cmpsb
push
es
dec
nop
inc
cmpsl
cld
add
mov
cltd
rcll
jp
mov
mov
inc
mov
fnstenv
pop
inc
nop
ret
shlb
or
lock
lret
mov
jmp
push
lods
ja
fnsave
aam
push
push
xchg
rcrl
jge
cmp
pusha
stos
call
mov
xchg
js
push
popf
nop
mov
add
gs
cld
or
mov
ret
loop
sub
push
das
push
test
movsb
fiadds
fdivrs
les
mov
jns
jnp
sbb
and
add
ret
pushl
jb
jns
mov
fstps
cmp
mov
dec
pop
fcomp
inc
ja
jecxz
fstp
or
cmp
sub
popf
xor
jne
mov
xchg
out
in
aad
bound
pop
mov
dec
fcom
xorl
out
sub
sub
outsb
out
sahf
addr16
push
fsubl
jg
in
jne
int
out
xchg
jle
in
insb
dec
pusha
pusha
mov
sub
hlt
mov
bnd
lret
cmp
dec
mov
xchg
je
push
ds
stos
add
pop
sbb
adc
scas
xorl
loopne
jo
gs
leave
cmp
pop
arpl
aas
and
fidivs
iret
mov
sahf
inc
movsb
adc
add
mov
jle
gs
ss
lds
lds
sub
dec
outsl
lcall
push
loop
btr
jge
lea
aaa
mov
mov
cli
pop
test
filds
jl
and
lret
push
ss
scas
xor
xlat
jmp
scas
add
or
cwtl
inc
xchg
test
pop
notl
jbe
data16
stos
xchg
mov
arpl
mov
cld
cmpsb
inc
cmp
adc
cmp
ss
jle
aad
and
and
xchg
dec
lahf
push
lret
sbb
xchg
and
and
lret
stos
je
push
jmp
mov
shlb
dec
jne
fcoml
pop
mov
outsb
mov
pop
dec
rorb
cwtl
stos
adc
add
mov
dec
fsubl
adc
sbb
sub
cltd
lcall
mov
inc
jno
sbb
push
repnz
aad
jg
mov
mov
nop
xor
aas
adc
mov
cmp
mov
pop
negl
ret
xchg
mov
sti
fistpl
or
in
dec
into
push
sub
cmc
or
dec
xor
in
loop
in
imul
pop
add
push
cltd
lods
cmp
sbb
cli
scas
popa
loop
or
push
es
aam
sub
pop
push
adc
pop
aas
jb
les
mov
repz
movsl
xchg
push
jle
sbb
mov
rcl
fstl
adc
lret
and
fstpt
mov
xor
dec
nop
loope
xor
test
inc
mov
push
dec
jne
xchg
je
cmp
jecxz
js
mov
loop
orb
arpl
add
xchg
pop
stc
dec
pusha
loopne
cld
pop
ds
xor
std
inc
sarb
jp
test
cld
fwait
jb
adc
and
sbb
nop
neg
es
std
cli
pop
adc
insl
insb
sub
icebp
adc
push
cld
mov
jb
mov
test
lock
mov
sub
jp
inc
test
ret
cmp
sub
push
xchg
dec
mov
cmpsl
sti
lods
icebp
mov
mov
adc
mov
ret
and
je
sub
fs
inc
rolb
in
sti
fsubrl
mov
rcr
outsl
mov
cmpsb
clc
mov
loope
stc
adc
pop
out
jp
xlat
out
jmp
hlt
xchg
sbb
aas
lock
add
bound
xor
sarb
in
mov
mov
lret
mov
stc
mov
push
xchg
or
or
push
mov
xor
add
bnd
cmp
or
loopne
fs
pop
xchg
push
inc
mov
dec
leave
mov
xchg
xor
ja
repz
dec
sarb
sbb
xor
dec
sbbb
mov
ljmp
es
xchg
jmp
pop
je
addl
insl
out
fadds
mov
test
imul
pop
jp
jno
and
clc
cmpb
add
pop
mov
in
int
pusha
sti
pop
adc
dec
sti
lahf
xchg
sbb
jbe
sub
inc
push
mov
int3
push
add
rcrl
sarb
subb
cmp
lea
push
js
in
cld
push
dec
adc
adc
sub
ret
sbb
mov
push
hlt
js
and
inc
inc
sbb
or
rclb
inc
and
pop
add
and
push
push
mov
fiadds
shlb
jmp
cmp
dec
andl
fsubr
jge
jecxz
sbb
cmpsb
aaa
dec
arpl
or
sub
lahf
or
dec
cmp
sbb
sbb
insl
jo
add
jecxz
mov
test
sub
popf
inc
add
push
aas
in
dec
add
xchg
daa
sti
adc
mov
xor
sub
and
mov
xchg
push
into
pop
loope
ret
lahf
jae
test
sbb
testl
rolb
ss
xlat
lods
pop
sub
sbb
fdivrl
jnp
outsb
sbb
lahf
std
shlb
push
popl
pop
jo
in
inc
mov
mov
and
pop
and
insl
int
pop
into
sub
mov
enter
jo
xor
mov
test
ret
sbb
out
das
mov
repnz
out
sbb
add
xchg
out
inc
ss
xor
jo
negl
popf
lret
xor
cmp
fsubs
into
icebp
or
wrmsr
jmp
test
loop
and
add
jge
or
dec
push
or
mov
dec
mov
sbb
out
lret
cwtl
cli
loop
jg
and
je
in
mov
fldenv
subl
inc
pop
fistl
rcll
add
flds
xor
and
mov
loope
pop
sbb
lock
sub
out
adc
scas
pop
jmp
cmp
cs
jb
and
jg
push
inc
lret
dec
in
clc
sub
jecxz
fsubrl
movl
xlat
loop
xchg
pop
xor
cltd
dec
dec
xchg
pop
fldt
add
sub
fcmovnbe
inc
les
jmp
lds
repnz
insl
dec
add
add
cs
std
mov
mov
mov
sti
mov
icebp
out
push
cld
jecxz
mov
lock
sub
mov
sarl
hlt
or
sub
xor
pavgb
ret
int3
cmp
insl
divb
cmpsl
cli
fildl
mov
mov
mov
xor
out
mov
cmp
rclb
and
push
adc
mov
xor
fnstsw
lds
ljmp
mov
xchg
mov
out
dec
cmp
xchg
mov
push
push
add
aaa
cmp
out
xchg
mov
ljmp
mov
call
bound
int3
orl
sub
bnd
or
push
out
fwait
xlat
into
mov
add
stos
xchg
loope
out
stos
repz
push
in
out
dec
rcll
adc
mov
dec
pop
loope
jl
xchg
dec
ret
push
xor
mov
lods
xchg
pop
dec
arpl
pop
jne
mov
mov
adc
out
stos
adc
lahf
jmp
loop
push
adcl
pop
sub
xrelease
add
jp
cwtl
loop
lods
mov
insb
dec
loope
jnp
cmp
jle
rorl
pusha
xchg
xor
push
test
pop
fadds
jae
flds
popf
test
cld
mov
mov
rolb
sbb
imull
scas
inc
cmp
xchg
lock
out
iret
or
push
rclb
daa
in
hlt
ret
mov
pop
inc
dec
into
mov
popf
loopne
push
mov
adc
clc
icebp
push
int3
inc
shll
pop
ret
movsb
cmp
lds
pop
mov
out
dec
mov
movsb
mov
jle
lods
adc
inc
sbb
data16
xor
or
stos
fidivs
test
jns
loopne
test
les
cld
adc
xor
lea
scas
ret
and
mov
push
cmc
lods
mov
cmpsb
mov
test
enter
daa
cli
add
cmp
cs
in
repz
inc
xor
push
addb
aad
fisubl
pop
leave
push
xchg
cmp
push
ror
sbb
jbe
mov
sub
xchg
cmc
cmpsl
pop
shlb
sub
insb
pop
pop
push
jno
push
mulb
fsubl
mov
mov
xchg
add
inc
jmp
sbb
cmp
jl
movsl
adc
and
cld
jb
ljmp
sub
clc
repnz
bound
out
sarl
es
inc
movsl
sahf
xor
test
or
mov
sahf
das
xor
pop
adc
push
lret
ss
les
sub
fldt
cmp
jp
test
gs
into
aam
and
cwtl
inc
wrmsr
inc
ljmp
add
adc
dec
jnp
add
xor
repnz
aad
or
scas
mov
mov
out
popf
hlt
cli
adc
sti
std
in
add
stos
insb
cmpsl
fs
imul
cli
adc
adc
sahf
and
jge
jp
cs
call
xchg
movsb
and
sbb
sub
or
sub
lret
out
pushf
xor
jmp
pop
lock
adc
mov
add
dec
fisubrs
inc
fnsave
xchg
dec
arpl
mov
lret
lea
adc
or
popa
out
inc
pop
in
rolb
add
fistpl
outsb
pop
jns
and
loopne
lcall
icebp
add
mov
clc
int3
add
push
push
mulb
std
dec
rcr
cwtl
jp
mov
icebp
mov
cmp
lret
pop
pop
orl
sbb
cmp
inc
das
mov
sub
sbb
aam
mov
ret
pop
insb
stos
es
xor
dec
stc
dec
add
cmpsl
stc
mov
mov
ficomps
xchg
mov
push
mov
mov
mov
ss
jmp
xchg
test
mov
push
push
cmc
cwtl
popf
fucom
push
xor
sbb
shr
ffreep
shll
ss
stos
mov
ret
outsl
insl
xchg
stos
cmpsl
xchg
push
fstps
setbe
and
add
push
or
das
xor
scas
push
mov
jmp
aad
mov
test
shrl
icebp
push
mov
or
clc
sbbb
pusha
cmc
add
movb
lea
xor
mov
in
mov
xchg
mov
or
mov
or
xchg
dec
mov
jne
adc
mov
mov
mov
mov
dec
fs
mov
pop
jmp
lods
cmpsl
dec
sbbl
cmp
xor
in
pop
push
mov
jp
je
and
mov
insb
mov
stos
jnp
push
idivl
cmp
pusha
xor
stc
fisttps
push
xor
jmp
arpl
inc
aaa
push
xchg
mov
dec
mov
sti
xchg
xchg
xchg
bound
xchg
sbb
scas
stos
push
push
fstpl
mov
iret
lea
ret
ljmp
shrb
inc
dec
hlt
mov
and
fidivrl
shrb
pop
bnd
fmulp
pusha
lahf
lds
es
shr
ret
push
lcall
mov
movsb
cmp
sub
jbe
shlb
sbb
rcrl
fdivs
aaa
lret
mov
rcr
insb
jno
lea
jl
sub
dec
pop
pop
pop
push
fistps
xor
call
mov
and
cmp
push
rolb
cmpsb
xor
clc
in
sbb
es
stc
jns
cmp
add
sub
cmc
cli
cmp
lret
adc
movsl
fdivr
lea
clc
add
mov
bound
scas
mov
add
es
xor
pop
jmp
stc
nop
dec
js
outsl
aad
stos
in
push
jge
push
dec
adc
adc
out
outsb
jecxz
sub
sbb
movsl
pop
loop
orb
aam
sbb
fnstenv
pop
out
push
in
xchg
mov
ucomiss
loope
adc
aam
sub
lret
shl
cli
test
inc
sub
imul
stc
push
fimuls
fs
dec
add
xor
sub
test
leave
fsub
adc
negl
popa
xchg
andb
or
push
into
mov
sbb
pop
cmpl
loop
jl
imul
jmp
and
lods
repnz
mov
fdiv
and
mov
imul
decb
aad
loopne
jns
pop
sbb
adc
scas
lock
pop
lret
repz
pop
xchg
addr16
sbb
data16
hlt
xlat
lcall
adc
movsb
pushf
fcoml
in
jmp
cmp
cs
ds
aad
mov
cmp
jne
inc
lock
dec
ficompl
je
dec
cltd
jecxz
jo
int
cmp
adcl
aad
pop
xchg
xor
sbbl
sahf
fisttpl
shlb
inc
addr16
dec
inc
cli
jo
aas
gs
jb
jge
mov
andl
mulb
popa
sbb
mov
movsb
adc
xchg
fistpll
rolb
into
cmpb
xor
lock
push
stos
das
xchg
lret
sbb
sbb
adc
aam
xchg
pop
ret
ljmp
insl
or
push
dec
jnp
mov
mov
cmc
iret
dec
lods
es
mov
js
mov
mov
sarl
xor
test
pop
mov
movsl
push
mov
push
enter
loopne
lret
ljmp
pop
pop
out
pusha
stos
movsb
ss
adc
adcb
les
cmc
jno
adc
push
xor
sbb
mov
out
xchg
aam
icebp
and
test
mov
xchg
mov
enter
adc
scas
negb
movsl
mov
sub
loope
int3
ljmp
mov
jns
mov
in
dec
inc
xchg
push
out
mov
push
push
mov
les
inc
dec
test
sti
lahf
mov
mov
jne
add
sti
out
push
sar
jmp
js
dec
subl
inc
sub
pop
inc
add
mov
jp
add
and
mov
jnp
xor
mov
dec
pop
pusha
int3
pop
sbb
test
cmp
rcrb
mov
dec
stc
fsts
dec
push
dec
popf
testb
mov
cmp
bound
out
stos
mov
xor
xchg
imul
mov
adc
mov
pop
ret
leave
adc
push
xchg
loopne
inc
dec
mov
imul
inc
mov
jmp
addr16
push
push
dec
pop
and
outsb
lds
fdivs
repnz
cld
into
cmp
movsb
enter
dec
test
ret
aas
xchg
xchg
in
outsb
aaa
mov
or
enter
mov
es
xchg
inc
xor
inc
mov
adc
in
in
mov
dec
push
mov
xchg
cmpsb
mov
pop
in
call
outsb
enter
daa
clc
jb
cmp
shl
add
sub
jnp
cmp
test
movsl
jecxz
push
xchg
dec
fcompl
addr16
imul
mov
add
sbb
cmpsl
pop
and
js
sbb
ljmp
push
movsb
loop
fdivrl
lock
inc
out
adc
test
and
loope
push
xchg
jg
xchg
scas
pop
mov
mov
and
push
lock
int
add
sub
mov
mov
imul
mov
clc
mov
sahf
jbe
pop
test
jecxz
jl
call
stc
or
adc
mov
cmp
cmpl
jno
negl
xchg
lret
mov
push
or
xor
lcall
xor
test
loop
jbe
imul
stos
jecxz
idivb
lods
fldenv
mov
cwtl
mov
xlat
int
cli
jnp
xchg
mov
and
cmp
mov
adc
xor
cmp
adc
fldpi
mov
les
repz
iret
xchg
sub
cmp
and
sub
pop
jns
xchg
inc
cs
in
and
dec
loope
dec
pushf
rorl
push
sub
jecxz
mov
mov
call
pop
inc
or
sarb
icebp
addl
mov
gs
inc
out
adc
adc
negl
mov
outsl
or
int3
or
repnz
ljmp
cwtl
lock
imul
nop
cld
cmp
cmp
mov
pop
lock
je
jo
pop
mov
or
aam
call
into
es
push
insl
repz
testl
jnp
xchg
in
lcall
in
inc
and
loopne
mov
rcl
gs
cltd
pop
adc
daa
mov
mov
mov
and
xor
xor
lds
add
pop
xchg
jle
stos
xchg
lret
sub
cmp
xlat
push
in
out
andps
repz
adc
ffree
mov
icebp
inc
pop
dec
pop
test
sub
xchg
hlt
jmp
mov
mov
cmp
fwait
fs
push
dec
adc
add
jecxz
dec
lock
jns
push
fnsetpm(287
nop
dec
movsb
xchg
cmpsb
hlt
and
pusha
daa
dec
pop
jg
loop
mov
lds
ret
mov
stc
push
and
jne
fcomps
out
inc
adc
bound
mov
and
sub
cmp
push
jl
dec
sub
or
dec
mov
and
lods
sti
insb
mov
cmpsl
jle
call
mov
ffreep
sti
mov
pop
pop
clc
cli
inc
dec
out
jae
out
pop
push
or
mov
mov
jns
push
stos
inc
dec
mov
sbb
or
imul
scas
jo
movsl
push
imul
iret
dec
jmp
aad
mov
mov
aaa
mov
inc
push
pushf
cltd
or
mov
jb
mov
stc
mov
add
push
addr16
ficoms
mov
shlb
out
rcrl
repnz
lea
mov
loopne
push
loopne
push
lcall
jge
repnz
lock
dec
mov
cmp
pop
or
dec
cmc
rorl
push
movsl
fldcw
pop
in
xor
and
pop
setb
ja
jmp
subl
inc
scas
mov
cmp
pop
in
out
std
enter
daa
imul
inc
cmp
inc
imul
lods
and
sub
sub
in
lahf
out
add
add
cmc
daa
push
add
mov
xor
cmp
fdivrl
inc
repz
js
pop
addr16
sub
push
scas
jne
sti
xlat
sbb
loopne
sub
sti
rclb
ror
stc
popl
stc
lods
mov
hlt
movsl
mov
popf
insb
and
loopne
repz
push
sub
xor
fistpll
pop
roll
iret
mov
insb
adc
jl
mov
test
les
mov
dec
jg
cmc
into
mov
xorl
push
dec
call
ss
mov
stos
fcomps
negl
pop
sub
adc
xor
ret
adc
into
jge
lods
cmc
in
es
push
lock
outsl
mov
lods
loop
mov
push
adc
sarb
jnp
mov
mov
ljmp
scas
imul
jge
mov
sti
test
sub
gs
and
xor
add
adc
cmc
fldenv
bound
les
outsb
repz
cltd
xchg
in
and
cmp
cs
xlat
sbb
sub
xor
adc
fcmovu
pushf
xor
lock
inc
adc
and
aad
sahf
leave
nop
sub
dec
sti
adc
inc
push
mov
dec
enter
dec
cmc
and
mov
out
xchg
lea
or
fisubrs
add
orl
pop
lret
out
faddl
inc
or
aas
mov
enter
popl
cltd
dec
jns
inc
mov
imulb
das
cwtl
stos
xchg
aas
mov
pop
out
mov
and
lret
lods
int3
fimuls
mov
push
push
das
dec
sub
mov
jmp
aam
xchg
push
ret
or
out
ficompl
inc
cmpsl
idivb
mov
lods
cld
xor
mov
mov
cwtl
ja
jnp
daa
pop
decl
out
mov
data16
test
cmp
sbb
fstpl
iret
clc
lret
xchg
dec
jae
ljmp
stc
pop
cmp
and
out
fcmovb
inc
xchg
sbbb
mov
cmp
cmp
or
xrelease
fs
dec
mov
xor
sbb
cmc
cmp
cmpsb
decb
xchg
dec
fwait
xchg
jmp
push
jmp
mov
add
rolb
ljmp
call
jns
mov
add
push
mov
pop
mov
ja
mov
cltd
scas
mov
mov
sub
cli
divb
push
imul
lds
jmp
push
imul
test
sub
push
jmp
addr16
insb
mov
and
repz
add
mov
in
adc
test
popa
xchg
cmp
push
push
les
out
stos
push
iret
and
popf
inc
ret
jb
stc
xlat
dec
push
mov
test
xchg
pushf
cmpsl
ficompl
mov
imul
scas
shll
sub
xchg
mov
in
ret
dec
leave
add
xor
push
jmp
inc
push
push
xor
aaa
xor
inc
sahf
ja
ficoml
add
int3
in
es
pop
jg
and
lds
or
cmp
cmp
pop
movsb
fiadds
xchg
push
jmp
stos
pop
jge
icebp
sbbl
sbb
aaa
or
fnsave
xorb
cmpsl
xchg
dec
fs
push
mov
xor
stc
popf
lret
scas
ds
or
fcoms
fs
rorb
cmpsb
mov
into
mov
daa
div
dec
cmp
push
push
sub
add
or
xchg
add
leave
pop
and
or
into
pushf
add
shrb
lahf
cmp
pop
outsb
jp
js
sub
push
xlat
xchg
push
push
icebp
fcoml
inc
mov
outsb
or
scas
adc
lods
out
loop
jge
inc
xchg
daa
mov
fdivrl
push
test
int
cmp
sub
int
pop
pop
rorb
cltd
aam
mov
mov
sbb
push
rolb
movsb
insl
or
inc
les
jp
insl
fs
mov
sbb
lock
cmp
pop
out
not
pop
dec
lret
cmp
add
loop
or
int
cmc
mov
xor
fildll
imul
sub
adc
movsb
data16
xchg
pop
lods
cmpsl
push
pop
mov
rcrb
cli
loope
mov
lods
xchg
pop
mull
clc
jmp
adc
addr16
jbe
pop
adc
lcall
pop
repnz
dec
pop
stos
xchg
mov
push
sbb
pop
es
push
add
adcb
jge
pushf
fstp
mov
aad
xor
test
aad
mov
nop
add
push
dec
pop
data16
sub
enter
sbb
int
leave
sub
in
pop
shr
rorl
mov
rolb
incl
pop
add
aam
inc
dec
data16
aas
inc
or
jb
mov
fs
sbb
or
jo
sar
in
sahf
cwtl
mov
out
stos
mov
or
cld
mov
xchg
iret
mov
sbb
cmpsb
mov
cld
mov
testb
aam
xchg
add
xchg
jg
jg
push
insl
sarl
jns
cmpsl
cmc
orb
popf
cli
popa
cmp
lods
addr16
push
mov
loope
mov
jne
and
pop
push
fmuls
shlb
dec
cltd
pop
roll
push
and
fldl
mov
ljmp
sbb
xchg
stos
jno
enter
push
xchg
or
push
lcall
add
add
cmp
pop
mov
testl
lock
iret
cmp
sbb
lret
pop
or
enter
sbb
push
mov
dec
add
rclb
decl
mov
xor
ret
jns
lea
in
inc
adc
popa
repz
pop
cmc
pusha
mov
dec
addb
jo
lahf
mov
xlat
clc
sbb
pushf
or
test
push
out
add
sub
jmp
fsin
jo
pop
mov
aas
jns
sub
dec
fwait
sub
adc
sti
call
jns
xlat
das
jnp
fs
jle
addr16
push
dec
shlb
jbe
add
mov
pop
jne
cmove
fbstp
cmpsb
mov
xchg
mov
scas
mov
testl
dec
sbb
cmp
imul
scas
ss
push
stc
jecxz
adc
xchg
iret
or
pop
leave
jp
outsl
hlt
cmp
int
push
and
pop
adc
or
mov
cmp
lods
test
add
mov
int3
xlat
int
pop
scas
pmaxub
push
lds
in
rcrb
mov
lea
add
sub
jbe
das
outsb
jge
lahf
lods
sbb
mov
aaa
movl
cmp
sbb
dec
rcrl
imul
xor
push
sub
scas
sbb
js
test
in
xor
inc
pop
xor
cmpsb
inc
in
in
in
mov
adc
daa
cmc
jne
cmp
pop
adc
inc
test
sub
add
cmp
popa
movsl
clc
in
push
and
lahf
sub
inc
sbb
clc
add
inc
jb
lret
bound
pop
xchg
in
js
nop
jecxz
cmpsl
and
in
dec
push
test
jns
sub
scas
outsb
outsl
add
imul
popl
mov
push
arpl
push
out
jns
mov
stc
sbb
pop
lods
cmp
jno
xchg
pop
frstor
lcall
loope
mov
inc
sbb
jle
sahf
pop
or
test
jmp
mov
nop
mov
stc
xor
mov
adc
add
xchg
fcom
decl
notl
lock
xor
push
test
jnp
clc
or
jge
into
inc
imul
or
mov
jne
mov
loope
and
mov
je
mov
mov
jle
enter
aam
add
adc
jl
stos
jg
in
pop
lea
pop
xor
sbb
sahf
loopne
xor
pop
xchg
cmp
adc
fiaddl
fsts
int
repz
scas
insl
sbb
push
mov
xlat
xchg
cmp
adc
enter
pop
cltd
cs
sub
cmp
mov
pushf
dec
mov
in
loopne
sbb
fmul
sbb
or
outsl
push
xchg
fcoml
jmp
dec
int
jge
inc
and
test
faddl
int3
lahf
inc
xor
loope
aas
jb
loop
mov
scas
inc
xchg
rcr
xlat
mov
std
mov
mov
daa
fmuls
icebp
mov
cld
in
push
lret
mov
in
pop
cs
mov
scas
div
add
std
das
or
push
pop
sub
push
pop
aam
in
ret
es
movsl
add
popa
dec
addr16
test
hlt
leave
mov
popa
push
or
lods
shlb
xchg
mov
add
fsubs
mov
test
cmp
xor
cli
incb
add
cmp
popf
ljmp
add
xchg
in
stos
pusha
and
out
mov
sbb
jne
mov
add
sub
mov
mov
mov
cli
adc
scas
add
xchg
test
jo
and
adc
jae
icebp
adc
add
dec
in
ljmp
fs
in
aas
adcl
iret
jne
push
mov
ja
xchg
mov
lea
mov
repz
mov
inc
repnz
dec
mov
out
jne
test
mov
xchg
inc
out
in
stos
bound
pop
or
or
inc
xchg
movsb
out
sub
lahf
out
push
push
sub
inc
fistps
cs
xor
aaa
jmp
insb
int
leave
jnp
push
pop
jle
xchg
jne
sbb
inc
and
fwait
xchg
fimuls
adc
lods
fistpl
imul
test
push
push
ret
stos
popf
xchg
or
push
or
stos
fwait
adc
loop
fimuls
mov
cltd
test
push
inc
mov
iret
push
clc
xor
icebp
cmc
xchg
hlt
test
push
inc
pop
jle
or
sub
fs
fidivrl
dec
int3
ret
pop
fisttpll
fs
sub
mov
loopne
cmpsb
cmp
jmp
movsb
hlt
push
adc
xchg
insb
jbe
sub
jge
xor
sbb
iret
aaa
xchg
xchg
or
aad
jl
jae
dec
inc
out
dec
ss
xor
scas
into
push
scas
cld
xor
and
jne
test
mov
stos
inc
out
push
je
ret
movsl
xchg
fwait
pop
jle
fs
stc
daa
hlt
jle
cmp
in
mov
sub
fsts
ds
jne
movsl
jmp
cmp
incl
lahf
dec
repz
push
mov
nop
sbb
and
xor
sbb
pop
mov
mov
push
inc
fists
nop
stc
fsubrl
sbb
pop
mov
jo
mov
mov
mov
data16
outsl
cltd
xchg
mov
push
mov
push
cld
loop
int
add
in
xor
pop
jg
lcall
or
std
sahf
add
sbb
pop
jg
jecxz
mov
rol
stc
call
cmp
ss
test
lret
lods
jmp
push
jmp
lret
or
mov
into
cmp
sbb
jle
pop
into
es
cld
cmc
inc
lea
push
push
lahf
loop
fs
push
mov
lods
add
add
add
sub
mov
pop
insl
out
pop
outsl
cli
inc
jnp
mov
adcb
mov
in
ds
mov
stc
sub
add
push
inc
adc
dec
jne
cmp
les
in
mov
add
rcr
xlat
aad
out
sub
jmp
imulb
ss
adc
cs
pop
hlt
aad
or
nop
mov
sbb
pop
leave
dec
sub
out
shl
jmp
mov
lea
out
cmp
pop
push
push
add
dec
cmp
dec
mov
sub
pop
dec
inc
scas
inc
or
dec
inc
sbbl
int3
jb
ds
mov
cmp
sub
std
xor
jae
gs
push
icebp
enter
adc
add
stc
gs
aas
cmp
mov
stc
movsl
lock
out
das
in
push
andb
aas
mov
pushf
mov
mov
ds
mov
cmpsl
repz
movsl
mov
push
repz
mov
daa
aaa
and
dec
clc
sbb
pop
jle
rcrb
test
es
idivb
xchg
scas
xor
xchg
add
lods
hlt
shrl
into
sub
bts
adc
xchg
push
xchg
jle
push
xchg
shl
fadds
je
decb
sub
dec
xor
sub
lret
push
xchg
xchg
xchg
dec
hlt
mov
testl
adc
lods
fwait
and
fwait
push
aam
addl
inc
das
bound
dec
add
in
lea
mov
pop
pop
mov
imul
dec
push
lret
inc
mov
mov
xchg
dec
cwtl
mov
mov
inc
ret
out
ret
repnz
mov
xor
js
out
movsb
dec
sub
inc
mov
addr16
in
jp
pop
mov
insb
cmp
push
add
jle
mov
in
out
pusha
shrl
filds
clc
xchg
mov
dec
pop
jecxz
mov
jbe
sub
outsb
int
sbb
popf
mov
push
dec
push
jne
ljmp
xor
sbb
mov
imul
subl
sahf
lcall
dec
ffreep
fsub
add
push
lret
insl
arpl
cld
inc
pop
pop
jo
outsb
outsl
add
inc
sbb
or
sbb
ss
lods
xchg
or
js
ficomps
pop
mov
out
dec
popf
jne
xor
out
cmp
jbe
push
inc
sbb
xchg
fdivrs
test
xorl
pop
push
or
mov
jl
xchg
sbb
cmc
mov
xor
push
jo
test
and
movsl
fs
cmpb
jge
mov
in
cmp
enter
daa
repz
cmp
push
loope
push
mov
orb
mov
jne,pt
lcall
push
xchg
sbb
cwtl
mov
xor
js
call
addr16
sbb
lret
fsub
push
test
push
adc
mov
outsb
xor
icebp
pop
sarb
loop
cmpb
mov
insl
pop
mov
xchg
fwait
and
sbb
xchg
sub
lds
fistpl
lcall
loopne
mov
sahf
movsl
push
addb
inc
dec
jg
cmp
test
clc
stc
lahf
push
xorb
or
mov
sarl
dec
in
xchg
adc
and
loope
mov
mov
cmp
jno
or
idivl
cmc
or
mov
outsl
xor
insb
loop
bound
imul
pop
mov
xchg
lods
pop
insb
xor
ror
push
cli
jp
mov
in
cmc
xchg
sti
gs
popa
loope
sub
loopne
or
pop
shrl
adc
jbe
les
insb
repz
lods
or
enter
adc
sbb
enter
dec
cmp
pushf
ficomps
push
jmp
mov
cs
inc
and
stos
dec
cmp
ja
lahf
inc
bound
imul
test
lea
arpl
ficoml
mov
leave
jp
and
cs
mov
popf
mov
inc
pushf
lgs
pop
lret
pop
int
mov
lds
push
idivb
mov
gs
xchg
mov
mov
add
jle
inc
icebp
lahf
je
cld
cmp
cmp
xor
lret
adc
mov
fcmovnbe
mov
xchg
inc
xor
es
enter
lret
shrb
jecxz
mov
jg
adc
test
xor
dec
sahf
std
and
out
sahf
pop
jnp
mov
out
push
cltd
insb
pop
je
pop
movsl
shlb
dec
insl
fcmovu
not
js
mov
pop
xchg
inc
fmul
ljmp
lcall
test
out
xchg
sub
lods
comiss
test
xchg
mov
popl
mov
add
jnp
movsb
pop
pop
xchg
cmp
cli
inc
stos
adc
or
push
jmp
push
ja
xor
orl
out
dec
xor
les
sub
xchg
xor
mov
mov
es
movsl
ja
mov
dec
pop
inc
inc
mov
jmp
mov
hlt
dec
jnp
in
in
rcrl
mov
or
mov
push
mov
xchg
cmp
xor
enter
shr
adc
cmp
shlb
dec
jp
and
gs
insb
mov
jns
jle
lret
sub
pop
pusha
outsb
sub
xchg
test
pop
sbb
inc
addl
popf
loopne
jbe
in
and
stos
xorl
sbb
mov
imul
repnz
pop
insl
sahf
push
into
adc
iret
lods
ret
add
leave
fbstp
hlt
sbb
arpl
scas
movsb
or
and
ljmp
cwtl
mov
aas
es
aam
lods
shrb
inc
repnz
dec
cmp
shll
divb
ja
jge
add
sbb
pop
mov
or
cwtl
jno
mov
stc
dec
and
cli
push
adc
lret
xor
gs
lret
mov
and
or
push
mov
xchg
inc
or
test
leave
jb
in
imul
daa
repnz
cmp
testb
leave
inc
cs
jns
xor
movsl
dec
push
pop
cltd
les
or
int
in
pop
xor
and
outsl
pop
or
js
cmp
pop
fs
loopne
jge,pt
push
scas
mov
sti
sub
mov
adc
sbb
lds
nop
or
mov
sbb
inc
popl
add
mov
mov
sub
jecxz
pop
pop
xor
cmc
mov
mov
mov
sahf
dec
loope
test
rorb
jg
xchg
out
mov
or
fs
std
aas
ss
xor
cmp
add
xchg
not
mov
xor
jo
cld
sahf
push
or
into
in
hlt
scas
cmc
rcrb
push
xor
push
loop
xchg
gs
sbb
push
mov
subb
xor
cli
lods
or
dec
sub
pop
push
add
test
gs
ret
pop
loopne
xchg
pop
pop
repnz
fnstenv
push
sub
mov
push
mov
push
jg
push
testb
movsb
outsb
pushf
pushf
mov
shrb
adc
aad
lock
nop
outsl
pusha
aas
dec
filds
dec
sbb
mov
shl
jecxz
push
leave
loop
jg
mov
call
pop
xchg
cmp
push
lret
cmpl
pop
fcmovnbe
xchg
xchg
jmp
inc
sbb
movsl
inc
mov
insb
aas
mov
nop
or
push
test
pop
idivb
std
addb
push
shlb
jno
dec
icebp
jbe
insb
cld
sbb
xlat
dec
pop
mov
mov
mov
mov
rolb
jae
xor
fcmovb
roll
dec
insl
pop
lock
insl
ljmp
sahf
dec
popa
xchg
xor
mov
insl
push
and
cmpb
lcall
cltd
mov
rcl
mov
lods
sbb
aaa
mov
sbb
ret
dec
xchg
cmpl
ljmp
out
pop
xchg
mov
ljmp
test
and
mov
or
add
lods
mov
out
dec
ret
test
or
pop
sbb
lret
jmp
mov
push
sbb
add
sahf
cwtl
adc
test
add
movsl
cmp
in
es
xchg
sbb
mov
sbb
mov
loope
dec
ja
add
shlb
lds
xchg
jbe
dec
pop
lods
pop
jne
cld
push
mov
in
out
cmpl
jmp
add
ja
out
lahf
in
sub
aaa
and
addr16
enter
popf
test
insb
push
push
push
jnp
mov
jle
shrl
pusha
or
test
xorl
push
xorl
add
jae
inc
sbb
sahf
fwait
xlat
popf
pop
es
repz
stos
hlt
xor
xchg
dec
xchg
cli
sbb
xchg
or
lock
ret
push
adc
loopne
iret
test
sub
push
inc
leave
push
and
hlt
data16
arpl
je
or
sahf
xchg
sbb
out
add
mov
xorl
fsubp
in
xchg
lds
cmc
rol
sarl
add
sahf
movsb
xchg
mov
in
jbe
int3
mov
inc
hlt
sbb
mov
ret
jno
in
jl
pop
add
push
mull
scas
xor
shrb
and
mov
push
push
sbb
inc
fwait
bound
dec
xchg
in
push
fildll
push
adc
daa
icebp
mov
cmp
out
dec
push
inc
cmp
push
ljmp
movsl
adc
mov
lahf
test
sbb
lret
add
cmpsb
shll
push
les
pop
xor
js
icebp
lcall
sub
add
pushf
aam
and
jg
adc
repz
lret
cmpsl
pop
mov
add
add
adc
add
pop
fldt
pop
fwait
dec
pop
pop
lcall
dec
mov
in
sbb
gs
pop
call
subb
xor
idivb
mov
cmc
mov
fs
and
adc
movsb
stos
cmp
mov
and
xor
inc
int3
cmp
mov
pushf
into
iret
pusha
and
xor
fisubrs
sahf
pop
loop
stc
js
jmp
mov
imul
add
add
cmp
sub
mov
xchg
out
xor
cli
loopne
jnp
pop
fdivs
ret
scas
nop
sti
ret
pop
push
cmpsl
repz
loopne
jecxz,pn
adc
mov
insb
fldcw
xchg
add
xchg
jg
xor
cmp
cmpsb
fcmovnbe
xchg
cmp
sub
les
jmp
scas
je,pn
fst
cmp
jns
dec
data16
dec
xor
das
imul
fstpt
jecxz
popa
push
in
push
out
aad
call
fcomps
xlat
adcl
sbb
fildl
pop
xor
test
lahf
xchg
sub
aas
pop
pop
push
jb
mov
rcrl
push
or
sbb
xchg
std
daa
test
mov
ljmp
dec
cld
xchg
push
xchg
lret
inc
jecxz
mov
sbb
lock
fs
mov
lock
loope
aam
ja
ret
bound
dec
insl
inc
inc
lret
dec
push
pushf
lock
sub
lods
jle
dec
mov
nop
sub
cwtl
mov
mov
mov
jb
cltd
fcmovbe
dec
test
mov
insb
mov
fldl
clc
sub
rclb
and
shll
add
aas
scas
or
sub
add
loope
jge
in
mov
pop
or
push
mov
push
int
dec
sub
mov
sbb
inc
inc
fsubs
cs
lods
mov
add
mov
enter
cmp
mov
pop
jno
xchg
iret
rol
mov
add
pushf
push
in
ja
fdivrl
mov
sub
mov
add
pop
jne
mov
mov
shll
pusha
inc
out
bound
sub
xchg
ror
addb
dec
hlt
sub
xor
cmpl
mov
jns
mov
sbb
ja
cmp
mull
fs
xorb
pop
lods
inc
xchg
mov
push
popa
jbe
popf
cs
outsb
mov
xor
mov
xchg
cmpsb
std
xchg
sbb
sub
imul
push
and
and
adc
jge
ret
push
leave
int
dec
hlt
mov
arpl
scas
pop
or
sbb
ds
cwtl
outsb
movsb
fimull
imull
int3
outsb
jl
pop
cltd
dec
and
test
fcmovb
fcomip
in
mov
sub
and
mov
cmp
push
ret
out
jbe
xchg
cli
jge
fs
sbb
jns
xorb
jno
xor
jl
cld
jmp
sbb
xor
sbb
cmpsb
scas
js
andl
inc
insb
jecxz
jecxz
fwait
inc
sub
or
aaa
sub
or
daa
lock
out
xchg
loope
mov
pop
cmp
fbld
movsl
sbb
lahf
enter
call
mov
add
shrb
xor
negb
pop
jo
lret
pop
loop
imulb
mov
push
pop
jge
fcoml
fisubrs
adc
popf
outsb
pop
inc
dec
adc
into
aaa
ljmp
jp
mov
inc
mov
cmp
and
jb
or
mov
fsub
in
pop
pop
or
test
and
ret
enter
fcmovbe
sahf
mov
and
inc
test
pop
aas
mov
adc
and
and
test
mov
fdivrs
shl
cmp
mov
lcall
cmp
into
mov
inc
cmc
pop
cmp
outsl
shrb
loop
xchg
test
cmp
adc
mov
data16
lods
adc
loope
iret
sub
mov
cs
adc
jb
dec
push
gs
fistps
pop
xor
clc
adc
mov
mov
add
repz
dec
xchg
inc
mov
cmp
jle
roll
out
sub
test
adc
sub
mov
aad
addr16
dec
xchg
mov
inc
fwait
dec
repnz
or
ret
jecxz
mov
call
xor
call
push
and
pop
loop
xchg
subl
repz
xlat
bound
inc
in
insb
das
aas
cld
stos
in
jb
mov
mov
callw
push
testb
lret
std
into
mov
enter
popa
and
icebp
and
cmpsl
cld
mov
aas
xor
xor
jmp
enter
push
dec
or
rcrb
enter
icebp
in
loope
xchg
pop
clc
insl
sub
mov
adcb
les
inc
lods
jmp
jmp
mov
cwtl
and
mov
cli
xlat
shrb
mov
jg
mov
mov
es
cmpsl
clc
addr16
push
ljmp
jecxz
ljmp
out
fstpl
mov
nop
or
rclb
or
addl
xchg
push
pop
dec
nop
cmpsl
cltd
test
movsb
into
xchg
test
mov
push
xchg
fcoml
push
pusha
divb
add
aam
and
ret
lods
jnp
dec
jbe
jns
lea
in
xchg
push
out
jmp
repz
test
ja
cmp
jp
dec
mov
jno
cli
dec
and
pop
jne
jle
mov
rolb
out
aas
adc
bound
push
sub
frstor
filds
push
push
sub
sub
mov
jp
stos
int
insb
in
jnp
jb
jle
rol
inc
rolb
pusha
aas
lahf
popa
fistpll
loopne
pop
mov
call
nop
sub
in
popf
push
push
mov
jno
dec
stos
fcmove
xor
xor
xchg
push
scas
mov
scas
adc
in
inc
ret
mov
hlt
cld
lods
dec
arpl
pop
ds
xchg
call
fidivrl
add
int3
pop
sbb
sub
lds
leave
sar
xlat
mov
jg
repnz
push
movsb
stos
dec
add
movsl
lock
rorl
jge
imul
inc
xor
or
dec
jno
mov
pop
dec
insl
push
sbb
mov
pop
xor
shrl
pshufw
scas
or
mov
or
in
push
push
stos
enter
daa
out
loopnew
sbb
jns
pop
jo
cmp
rorl
ds
aam
movsl
and
data16
out
jle
rol
xchg
sbb
dec
xchg
xor
pop
pop
jg
lea
sbb
pop
and
push
fwait
xchg
xchg
push
fdivrl
pop
push
outsb
shl
adc
test
mov
mov
daa
mov
rcrl
ret
or
pop
xlat
mov
popa
sarl
push
sahf
xor
test
mov
popa
fadds
jg
ret
hlt
gs
stc
jnp
mov
scas
pop
jne
inc
pop
mov
xchg
in
cmp
xor
notl
fadds
xor
adc
cmp
push
inc
or
adc
cmc
and
sbb
scas
cmp
loop
pusha
mov
adc
aas
cld
add
push
mov
lods
clc
stos
xchg
mov
stos
xor
inc
movsl
sti
mov
cltd
mov
sti
and
aad
gs
loopne
loopne
movsb
mov
dec
icebp
cmc
adc
mov
les
repz
mov
jmp
sbb
xlat
adc
sub
iret
pushf
mov
cmp
cmp
aad
cmp
add
in
scas
mov
fbstp
jo
ss
enter
lea
std
or
xor
addl
aaa
fistpl
jnp
jp
jae
lods
int
inc
or
jb
adc
mov
icebp
add
mov
std
jne
sub
and
into
mov
cltd
icebp
sti
cmpsl
test
lret
and
into
mov
inc
push
lock
das
inc
aas
pop
mov
mov
popf
aam
mov
lret
es
subl
jecxz
dec
mov
cmpsl
out
inc
cmpsl
mov
fistpl
push
mov
xchg
and
push
loopne
pop
mul
mov
cltd
dec
sbb
test
mov
push
fstl
xor
inc
jge
ljmp
pop
xchg
or
stos
cli
jnp
out
repnz
mov
cmp
bts
mov
xor
insb
bt
sbb
xchg
lret
jmp
nop
dec
push
xchg
jecxz
sbb
ret
scas
or
push
ret
in
push
add
jge
das
dec
cmp
out
add
jmp
and
sahf
loop
jns
testb
add
mov
jge
mov
adc
aad
jo
lret
dec
daa
sbb
push
push
mov
mov
fidivrs
jne
aad
mov
call
mov
popf
mov
dec
xchg
cmp
addl
aam
pop
sub
sub
lods
jp
inc
addr16
xor
insb
dec
pop
jecxz
jns
add
jmp
test
in
int
fisubs
xchg
shlb
pop
imul
adc
movsb
jae
xchg
popf
jl
or
mov
push
dec
test
xchg
push
cmp
loopne
subl
lcall
outsb
adc
pushf
iret
mov
adcl
hlt
inc
ja
arpl
jle
or
emms
push
xchg
mov
dec
jne
or
mov
inc
mov
pop
testl
and
lock
xor
rclb
mov
ss
push
popa
cmpsl
fdivl
test
jge
push
or
loope
mov
add
or
jl
mov
mov
mov
lret
roll
scas
ss
insl
test
jns
inc
inc
dec
rclb
cmpsb
aad
sub
add
mov
idivb
dec
stc
aam
out
mov
cmp
test
push
fsubrl
and
cmp
movsl
loopne
sbb
wbinvd
add
and
cmp
pop
cmpsb
ret
sahf
js
mov
push
arpl
push
or
je
push
inc
sub
popa
sub
mov
cmc
rolb
in
sbb
dec
mov
xor
and
enter
adc
sub
dec
pop
push
in
dec
lcall
pusha
mov
clc
sbb
cmc
push
sahf
aam
cmp
jl
pop
jg
sub
lods
stc
xor
mov
fdivs
xlat
fsubr
fsubr
test
mov
dec
cmp
fwait
or
xchg
test
in
in
xor
push
loop,pt
popa
dec
imul
dec
jg
mov
push
push
stc
lods
fbstp
and
lods
jo
jns
mov
in
add
xchg
rol
push
adc
jo
cmpsl
jl
pop
outsb
sbb
mov
les
lea
sbb
out
scas
push
xlat
dec
daa
sub
pop
cmp
add
in
jmp
pop
lret
cs
clc
movsb
aad
outsb
rcll
cltd
pop
inc
shrl
dec
test
clc
jecxz
sbb
orb
push
out
push
lds
dec
mov
aad
cmp
fistps
stos
fiaddl
cmpl
cmp
pop
jb
movsl
inc
mov
jl
inc
rorl
inc
jbe
mov
pushf
std
sbb
lock
fstpl
mov
dec
adc
in
lret
xchg
inc
sbb
mov
out
lock
movsb
das
es
mov
scas
inc
aam
pop
mov
packssdw
es
inc
sbb
mov
dec
cmpsl
in
sub
fimuls
popa
repnz
int
mov
insl
push
mov
lods
mov
out
jge
pop
push
shl
rorb
test
xchg
leave
cmp
sbb
into
fnstsw
cmp
xchg
jg
fsubr
inc
ljmp
inc
jns
stos
jmp
xor
jb
in
or
add
lea
cmc
xchg
popa
xor
jbe
mov
nopl
pop
add
test
mov
xchg
lahf
xlat
inc
popf
or
daa
bound
cmpsb
mov
add
or
push
xor
andb
push
add
xchg
mov
test
mov
int
jle
das
jl
dec
sbb
mov
into
mov
mov
xor
dec
ljmp
mov
adc
out
std
mov
xchg
jmp
xor
adc
pop
out
add
or
and
scas
addr16
sar
xchg
xchg
xchg
and
mov
adc
inc
nop
jle
xorb
jne
and
std
adc
xchg
mov
mov
inc
mov
and
xor
mov
out
roll
shlb
xchg
stos
push
sub
imul
cs
dec
pop
dec
push
xor
jae
dec
cwtl
ror
add
scas
ret
pushf
leave
xor
hlt
xchg
xchg
test
orb
adc
or
mov
push
fisubl
aaa
mov
pop
es
fisubrs
arpl
ja
mov
xor
or
repnz
out
movsb
shrl
push
mov
movsb
jbe
test
stos
sbb
mov
jno
out
idivb
mov
push
subl
and
sbb
xor
dec
cmp
lock
xlat
aam
cmpsb
pop
popa
fucomi
in
pop
mov
daa
in
sub
hlt
loope
sub
icebp
cmp
cmc
mov
movsl
xor
negl
js
sti
sbb
jp
add
inc
xor
dec
jp
addr16
int
adc
pop
lahf
pop
addr16
fidivrs
popa
sub
sub
addb
xchg
sbb
pop
outsb
and
out
sub
mov
fimull
and
adc
push
adc
int
inc
cmp
dec
inc
popw
aad
xor
shr
push
sbb
sahf
sahf
ja
mov
adcb
mov
lcall
fs
jmp
adc
mov
ss
leave
cmp
stos
xchg
jge
mov
aaa
xor
jecxz
xchg
cli
into
pop
cwtl
push
mov
dec
xor
insl
outsw
insl
out
loop
xchg
bound
iret
pop
adc
cmpsb
testb
mov
pop
lods
mov
xor
int3
xor
cli
lods
cmp
mov
outsl
adc
sti
jg
cwtl
xor
arpl
inc
imul
adc
dec
push
les
dec
inc
xchg
mov
mov
xlat
mov
sub
adcl
xchg
jmp
outsl
and
add
xchg
nop
mov
jp
mov
adc
out
dec
outsb
fxch
je
add
jecxz
cmp
icebp
stos
adc
call
aam
cltd
pop
sti
adc
subl
mov
mov
mov
icebp
inc
jle,pt
aas
fnstenv
out
mov
pop
cmp
xchg
lret
daa
xchg
std
ret
mov
fwait
mov
in
fisttps
test
jb
lret
add
jle
test
xchg
lock
add
add
mov
sub
dec
pop
ret
sahf
xsavec
sbb
lock
loopne
xchg
dec
aas
and
cmpsl
in
xchg
add
or
lods
sub
mov
sbb
xchg
and
mov
cmp
xor
icebp
popa
cltd
mov
and
sbb
push
fdiv
in
fucom
imul
mov
aas
insl
rorl
mov
fdivrs
cs
inc
mov
rorb
jo
add
xchg
inc
or
xor
sar
mov
adc
sbb
test
test
pop
xchg
into
sbb
test
inc
xor
sbb
int
fwait
imul
add
and
jbe
xor
jns
mov
in
jecxz
xchg
or
dec
mov
add
mov
mov
aam
or
mov
loop
mov
xor
jne
scas
inc
mov
dec
jge
fcoml
popa
jmp
cld
hlt
inc
andl
out
subb
push
iret
jg
dec
or
xchg
cmp
out
imul
mov
jnp
dec
dec
jle
dec
test
pusha
adc
adc
sbb
dec
xchg
jbe
push
pop
fs
lds
push
push
push
insl
imul
mov
cs
rsm
xor
xchg
add
sbb
or
imul
push
js
sub
and
sbb
pusha
dec
mov
leave
test
pop
lahf
arpl
inc
aad
jae
inc
or
add
mov
and
cmp
hlt
int3
sbb
xchg
pop
push
iret
push
ficoms
and
cmp
dec
pop
repnz
js
inc
cmp
lahf
cltd
push
pushl
jbe
inc
ljmp
mov
push
or
mov
xchg
int3
push
jl
rorb
stos
push
push
sbb
jmp
mov
scas
hlt
lcall
and
inc
sbb
fstpt
cmp
cmp
dec
daa
in
push
pop
cmp
movsl
subb
test
jecxz
push
ds
push
movsb
movsl
aaa
movsb
fwait
and
out
outsl
lahf
inc
sbb
push
dec
mov
dec
add
shrl
cmp
mov
pop
pop
ficoms
push
mov
test
fisubrs
into
inc
adc
cmp
cwtl
outsb
mov
daa
sub
std
and
mov
add
sub
fdivrl
lcall
sub
pop
xor
sbb
test
les
mov
pop
jg
adc
mov
xchg
add
mov
xor
movsl
xchg
ss
stos
mov
loope
enter
popf
testl
js
imul
adc
test
into
ds
and
dec
ret
or
xor
mov
pop
adc
stos
dec
jmp
lods
lods
jne
mov
cmp
mov
jp
sub
fidivrl
sti
loopne,pn
push
iret
sti
gs
sbb
pop
lods
cmpl
jg
loop
enter
fs
cmpsb
xchg
dec
push
sbb
gs
in
mov
test
inc
sub
arpl
jp
fwait
add
nop
xchg
scas
lock
adc
push
dec
in
cmp
jecxz
cltd
data16
hlt
outsb
adc
ret
push
jbe
pop
scas
and
addl
sti
aam
arpl
fwait
inc
inc
adc
inc
pop
add
js
mov
mov
xchg
push
int
cmpsb
push
fcomi
push
sti
xlat
std
push
fstps
pop
cmp
sbb
icebp
orb
cld
push
pop
xchg
mov
dec
mov
push
lock
pop
das
in
test
xchg
jmp
sub
daa
ret
sub
icebp
xor
push
fmull
xor
mov
and
lods
xchg
mov
cmpb
mov
mov
push
mov
shlb
push
test
sub
push
lahf
jne
fldl
dec
cltd
clc
push
jno
xchg
std
bound
shl
js
pop
xchg
into
fsubrs
sbb
xchg
lea
push
sub
cmc
bswap
insl
mov
or
xor
mov
adc
in
xlat
test
ret
xchg
dec
mov
inc
lret
incl
imul
cwtl
and
push
in
dec
mov
add
in
aas
insb
add
jns
or
adc
pop
xchg
pop
dec
xlat
mov
icebp
adc
inc
inc
stos
ja
iret
scas
dec
add
lods
mov
cltd
cli
mov
sub
pop
insb
jne
xor
imul
bound
sub
shlb
aam
out
jo
sub
sbb
addr16
aam
jp
inc
jge
push
jb,pt
nop
fisttps
xchg
and
push
in
pop
in
pusha
stos
push
dec
fistpll
jge
xchg
dec
xor
push
or
jae
sub
push
xor
in
mov
insl
jbe
stos
cmpsb
outsl
ja
pop
and
loope
imul
fistl
sub
adc
imul
mov
xorl
into
dec
arpl
inc
test
or
sbbb
fiaddl
jo
add
rclb
test
fidivs
mov
mov
lret
cmp
movsb
xlat
bound
push
dec
inc
mov
push
fs
outsb
out
sbb
fldl
sbb
int
jl
mov
sub
cmp
dec
fidivl
loop
mov
pop
jp
test
fcmovbe
pop
inc
cmc
movsl
cltd
cmpsb
pop
xchg
mov
xchg
js
jmp
xchg
cmp
jge
loope
inc
cmp
cmp
adc
movsl
ds
bound
jb
popf
lahf
arpl
loop
mov
pop
add
pop
xor
adc
add
pop
sbb
icebp
js
pop
mov
sbb
icebp
mov
sbb
imul
sub
push
ficoml
adc
insl
into
adcb
xor
and
jbe
push
pop
inc
int
push
push
sub
or
pop
rcrl
rcll
sbb
pop
add
xchg
or
imul
mov
stc
push
mov
fs
sbb
addb
mov
xchg
and
testl
and
inc
arpl
cmp
or
into
and
cmp
inc
fmul
xor
mov
out
imul
sub
data16
repz
xchg
sub
lret
cli
adc
in
inc
mov
push
jns
sub
aam
loopne
jle
pop
lret
mov
cmpsl
fnstenv
addr16
repz
es
mov
mov
sub
xor
add
mov
fcmovnu
cs
mov
push
dec
outsl
push
jmp
cli
sti
add
lock
mov
jb
cmp
mull
push
call
rclb
sbbl
inc
pop
push
mov
pop
inc
je
repz
pop
pop
cmp
mov
sbb
inc
notb
xchg
std
adc
fcompl
sbb
jnp
push
add
icebp
push
sbb
cld
xchg
cli
mov
mov
xchg
jnp
adc
pop
das
ret
stos
mov
xchg
jno
aam
sub
ret
mov
js
insl
scas
add
dec
xor
jmp
mov
aaa
jnp
lods
add
push
mov
bound
cltd
mov
jae
jnp
xchg
cltd
and
and
test
bound
adc
clc
mov
mov
cmp
jnp
pushf
push
not
cmp
push
pop
inc
mov
stos
mov
out
jle
loope
aam
loop
add
xor
daa
outsl
or
pop
inc
ja
pop
stc
dec
xor
mov
push
pop
mov
xchg
cmp
xchg
leave
fwait
sbb
fiaddl
mov
or
xchg
fcomps
call
add
fisubs
xor
fwait
cmp
add
in
adc
xchg
test
push
mov
fildl
pop
push
ja
mov
cmp
ds
inc
mov
mov
mov
add
pop
jmp
aas
sbb
addl
loop
or
or
fsubl
and
jp
lods
xchg
and
pop
cmp
mov
jle
ret
xchg
in
add
fistps
imul
lret
aam
fnstcw
jns
repz
mov
lods
push
es
sbb
dec
xchg
mov
mov
mov
imul
cmp
mov
lods
iret
push
push
cs
mov
hlt
jae
cmp
mov
or
sti
js
inc
xchg
cmc
data16
mov
xor
mov
cmpsb
ficoms
inc
or
jb
orl
mov
add
movsb
bound
push
popf
pop
xchg
shll
in
jb
int
mov
or
pop
jno,pt
repnz
dec
cwtl
or
push
sub
jno
ja
mov
cmp
pop
sub
out
jle
test
movsl
cltd
jg
test
loope
scas
in
mov
add
scas
cmp
adc
sub
mov
xchg
hlt
push
stos
movsl
inc
cld
jno
or
push
push
push
icebp
addr16
sbb
nop
dec
add
mov
xor
xchg
push
pop
inc
dec
ss
sbb
test
mov
push
sbb
fcoml
jnp
sub
int
adc
lock
fisttpl
sub
jb
es
ret
and
cld
push
sbb
sub
fcmovu
lcall
mov
sbb
pop
stc
sahf
pusha
mov
test
xor
movq
add
mov
or
lcall
cmpsl
lds
in
or
push
test
ds
xor
xchg
dec
cmp
fsubs
add
cmp
or
xor
hlt
jg
outsl
or
ret
sub
adc
mov
add
dec
into
data16
mov
xchg
mov
out
fstpl
mov
mov
xchg
mov
paddd
push
loopne
cmpsl
jbe
ljmp
fldln2
pop
dec
inc
repz
mov
lods
stc
push
cmp
aam
xlat
dec
cwtl
xchg
sub
adc
adc
pushf
loope
mov
sub
aad
sub
inc
mov
repnz
or
icebp
xor
pop
jecxz
and
cld
rcrb
call
push
aaa
push
pop
adc
add
out
rcr
dec
cwtl
popf
pop
test
aaa
mov
inc
mov
jb
sti
sahf
mov
test
lods
roll
notb
jle
sub
cmp
or
sub
mov
jle
mov
push
mov
ljmp
mov
mov
das
aam
sbb
mov
xchg
jg
xor
out
mov
dec
int3
push
lods
imul
mov
test
sti
and
pop
mov
sub
pop
jae
cltd
pop
stc
into
test
add
xchg
and
and
mov
sti
xchg
jnp
fwait
ljmp
loop
in
jae
stos
movsl
push
sub
inc
lret
lods
dec
push
fsubp
daa
jbe
ljmp
dec
jecxz
mov
sbb
into
test
dec
or
and
jg
stc
xchg
mulb
dec
push
xor
inc
add
mov
xor
popf
sub
xchg
clc
xchg
cs
bsr
sub
ja
xor
mov
cmc
lods
mov
or
rorb
mov
jne
bound
and
out
jns
mov
jl
je
cmpsl
jle
xchg
pop
test
out
stos
jmp
out
sti
or
repz
addr16
clc
or
scas
and
or
outsl
jnp
adc
jle
insb
in
push
mov
loope
push
fistpll
leave
xchg
out
pop
je
or
adc
push
mov
pop
popf
aas
inc
lock
jmp
adc
mov
xchg
pop
enter
in
imul
inc
push
dec
mov
adc
jne
xchg
xor
push
rcr
hlt
mov
adc
inc
jl
ret
out
ds
adc
fisubrl
pop
add
flds
loop
or
cli
jp
lds
rolb
add
mov
in
push
in
scas
and
aas
jge
inc
into
sbb
hlt
push
or
iret
pop
jno
cmp
jl
jmp
push
pmaxsw
ds
jo
lock
scas
xchg
inc
repz
adc
push
jo
sub
xchg
cmpsb
fs
in
mov
mov
sub
jmp
vmulpd
insl
sub
lods
cmp
xchg
inc
ds
in
fsubl
test
xlat
lahf
mov
mov
sbb
mov
xor
movsb
xchg
mov
pop
fwait
pop
mov
push
mov
mov
popf
outsb
adc
aaa
adc
lret
jns
mov
cli
cmpb
pop
mov
sti
and
pop
dec
sub
daa
pop
rcrl
in
roll
mov
jns
push
sbb
lcall
mov
jg
sbbl
out
int3
stc
vpaddusw
inc
adc
sub
daa
xchg
cmp
xchg
inc
inc
testl
loop
cmp
jns
or
aad
out
das
cmc
iret
insl
inc
xor
push
outsl
jmp
jne
imul
scas
adc
mov
js
enter
js
jnp
mov
mov
sti
cmp
mov
mov
cmpsb
loopne
jecxz
pop
or
xchg
fnstcw
jmp
hlt
or
ror
leave
cmp
push
xlat
mov
pushf
sub
ficoml
mov
mov
push
out
mov
nop
and
dec
sub
loopne
dec
dec
xchg
pushf
je
insl
jnp
nop
push
hlt
std
jb
lea
mov
mov
pop
mov
or
repz
jns
leave
pop
dec
mov
fsubrp
inc
stos
add
aas
push
pushf
lea
xchg
mov
lea
