ss
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
movl
movl
mov
push
mov
push
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
mov
pop
ret
xor
add
add
add
xor
xor
xor
add
add
xor
xor
xor
aaa
xor
xor
xor
cmp
cmp
aaa
xor
add
add
xor
xor
cmp
xor
aaa
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
aaa
xor
ss
xor
xor
add
xor
cmp
xor
cmp
xor
add
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
cmp
xor
cmp
add
xor
xor
cmp
xor
xor
add
xor
xor
xor
cmp
cmp
cmp
aaa
xor
add
xor
xor
xor
xor
add
add
add
add
add
add
xor
xor
xor
xor
cmp
xor
xor
add
add
xor
aaa
add
add
add
add
add
add
add
xor
cmp
add
add
xor
xor
cmp
xor
add
push
mov
add
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
push
call
call
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
movl
mov
push
mov
push
call
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
movl
movl
mov
push
mov
push
call
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
mov
push
call
mov
pop
ret
add
xor
xor
xor
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
xor
ss
cmp
cmp
add
xor
xor
xor
xor
add
add
cmp
xor
add
add
xor
aaa
xor
xor
xor
add
ret
lea
push
mov
add
mov
mov
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
mov
cmp
je
jmp
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
mov
xor
divl
test
jne
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
mov
mov
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
mov
cmp
je
jmp
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
je
jmp
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
mov
sub
mov
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
push
mov
mov
xor
call
mov
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
mov
mov
mov
call
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
push
mov
mov
xor
call
mov
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
mov
mov
movb
movb
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
lea
mov
push
add
jmp
mov
mov
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
lea
mov
push
mov
jmp
lea
mov
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
mov
add
mov
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
mov
sub
add
add
mov
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
lea
pushl
call
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
mov
cmp
je
jmp
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
lea
push
mov
add
mov
mov
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
mov
mov
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
mov
mov
movl
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
mov
pop
ret
mov
push
cmp
testb
pop
sbb
addb
jle
sbb
jnp
pop
cmpl
jae
jb
sbb
dec
subl
jle
insb
andl
dec
subl
jle
insb
ja
sbb
pop
subl
insb
jae
sbb
pop
ja
dec
insb
cmpl
insl
insl
sbb
test
xorb
sub
jbe
jle
sbb
sbb
sbb
sbb
sbb
jle
jle
sbb
sbb
inc
movsl
popf
repnz
movsb
push
icebp
popf
repnz
icebp
ss
sub
sbb
inc
pop
sbb
sbb
pop
sbb
inc
pop
sbb
pop
sbb
inc
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movsl
push
repnz
push
dec
frstor
jecxz
enter
mov
push
fstp
movsl
fcmovu
lahf
pop
sbb
lahf
pop
sbb
popf
loop
push
and
into
dec
test
push
loop
pop
inc
dec
movsl
push
loop
pop
and
push
loop
dec
pop
movsl
push
loop
pop
and
loop
pop
ss
movsl
push
loop
pop
cmp
push
decb
push
loop
dec
push
movsl
push
mov
pop
sub
sbb
movsl
pop
out
mov
movsl
pop
cs
ljmp
sbb
mov
rcrb
xchg
int
sbb
movsl
push
shlb
mov
sbb
sbb
movsl
pop
push
sbb
push
loop
dec
mov
add
and
movsl
push
popf
xor
adc
sbb
mulb
or
cli
add
movsl
pop
or
mulb
or
cli
add
call
push
movsl
push
mulb
sbb
dec
movsl
push
add
push
loop
dec
xor
add
movsl
inc
negb
movsl
push
lret
sbb
movsl
push
add
push
loop
dec
xor
popf
push
cli
push
popf
push
notb
movsl
push
negb
popf
push
movb
push
popf
jb
sbb
xchg
das
icebp
icebp
icebp
movsl
push
ljmp
mov
loop
pop
mov
lea
test
movsl
push
loop
ficompl
dec
movsl
push
fimuls
push
loop
dec
push
sbbb
sbb
test
movsl
push
loop
pop
cmp
push
loop
dec
inc
sbbb
sbb
test
movsl
push
and
push
loop
dec
inc
movsl
inc
repnz
ja
lahf
xchg
ss
icebp
icebp
test
xor
addr16
fwait
sbb
icebp
icebp
sub
icebp
cld
movsl
testl
pop
sbb
jp
and
out
lods
lcall
jg
sbb
insl
call
sbb
sbb
sub
add
sbb
insl
cmp
or
popa
sbb
sbb
fisubrl
addr16
add
sbb
inc
shll
add
sbb
pop
or
add
cli
and
sbb
sbb
sbb
lcall
jno
sbb
pop
xchg
mov
mov
add
pop
movsb
or
int3
jecxz
add
icebp
icebp
icebp
or
add
icebp
icebp
icebp
insb
in
fnstsw
fsubl
sbb
mov
icebp
icebp
sub
in
shlb
loop
leave
fisttpll
repnz
icebp
mov
and
sbb
fcoms
and
sbb
fcoms
sbb
movsb
inc
cmc
mov
sbb
push
cmc
lcall
push
hlt
sbb
icebp
icebp
icebp
bound
repz
xchg
movsb
sbb
sbb
push
cmc
sbb
movsl
inc
out
movsb
push
sbb
int3
movsb
inc
cmc
mov
icebp
icebp
lock
hlt
movsb
push
hlt
xor
repz
fcoms
sbb
push
cmc
lcall
push
hlt
sbb
push
cmc
sbb
sub
and
icebp
icebp
sbb
inc
cmc
and
sbb
sbb
mov
movsb
push
cmc
movsb
lcall
repz
movsb
inc
repz
sbb
push
cmc
lcall
testl
movsl
decb
push
icebp
sub
pop
sbb
icebp
sbb
sbb
fidivrl
sub
dec
pop
sbb
test
push
dec
pop
sbb
sbb
mov
sub
pop
sbb
mov
mov
movsb
lcall
movsb
pop
and
sbb
sbb
pop
sbb
dec
pop
sbb
pop
sbb
test
push
dec
pop
sbb
dec
pop
sbb
test
push
dec
pop
sbb
sbb
mov
movsb
push
out
movsb
lcall
icebp
mov
lock
dec
fldl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
mov
mov
call
mov
mov
cmpl
ja
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
push
call
mov
lea
mov
subl
movb
movb
movb
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
mov
mov
call
mov
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
mov
mov
call
mov
cmpl
je
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
lea
push
push
mov
sub
push
mov
push
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
mov
cmp
je
mov
subb
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
xor
add
mov
xor
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
incl
mov
cmp
jne
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
mov
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
mov
push
mov
push
call
cmpl
je
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
push
mov
pushl
xchg
push
jmp
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
mov
pop
ret
imul
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
cmp
jb
add
lea
mov
sub
inc
add
lea
sub
and
lea
mov
jmp
lea
lea
and
mov
mov
add
and
inc
lea
sub
cmpb
jne
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
movb
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
push
call
mov
mov
mov
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
jmp
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movb
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
mov
mov
pop
ret
popa
add
add
jae
add
je
add
add
add
add
in
add
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
call
test
jne
mov
jmp
movw
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
call
mov
pop
ret
push
mov
add
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
movl
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
movl
movl
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
push
call
mov
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
movl
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
movl
movl
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
xchg
lea
mov
lea
lea
mov
mov
and
mov
and
mov
mov
mov
mov
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
jmp
mov
mov
lea
and
mov
inc
mov
mov
jmp
mov
sub
mov
mov
mov
xchg
mov
inc
dec
je
xchg
sub
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
call
xchg
cmp
jo
and
xchg
and
mov
xchg
xchg
mov
sub
mov
mov
lea
mov
mov
mov
jmp
and
and
dec
mov
pop
ret
add
add
xor
xor
add
add
cmp
xor
ss
xor
xor
ss
xor
cmp
cmp
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
cmp
add
add
add
add
add
aaa
add
add
add
add
add
xor
ss
ss
xor
aaa
xor
xor
add
add
xor
cmp
cmp
aaa
xor
add
xor
xor
cmp
add
add
cmp
xor
xor
add
cmp
xor
cmp
cmp
add
add
xor
cmp
xor
xor
cmp
add
xor
cmp
add
add
add
insl
add
add
je
add
add
add
add
inc
icebp
inc
mov
push
mov
add
cmp
jno
mov
mov
xchg
mov
add
dec
mov
lea
jmp
mov
mov
add
add
mov
xchg
mov
lea
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
call
cmp
jp
xchg
lea
xchg
add
and
lea
add
and
mov
mov
lea
lea
mov
movl
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
movl
movl
mov
push
mov
push
call
cmp
jp
xchg
lea
mov
jmp
and
mov
mov
and
lea
lea
add
xchg
mov
lea
xchg
lea
xchg
and
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
call
movl
mov
push
call
mov
pop
ret
add
xor
add
cmp
xor
cmp
add
xor
ss
xor
xor
add
xor
cmp
xor
ss
xor
add
xor
xor
xor
aaa
add
add
xor
add
add
add
add
xor
xor
xor
add
xor
cmp
xor
xor
add
aaa
ss
xor
aaa
add
xor
xor
aaa
cmp
xor
add
subl
jae
mov
jmp
and
mov
mov
mov
mov
and
and
dec
je
mov
inc
mov
xchg
xchg
jmp
lea
sub
mov
mov
sub
mov
mov
lea
call
cmp
je
mov
lea
lea
mov
mov
mov
mov
add
dec
jmp
mov
inc
mov
add
jmp
xchg
and
xchg
and
xchg
ret
nop
mov
icebp
or
rolb
test
xchg
popf
inc
inc
adc
dec
xorl
fwait
adc
sbb
dec
sahf
in
pop
daa
mov
pop
mov
sarb
add
mov
cmpl
in
sbb
test
pop
call
xchg
pop
or
cmp
mov
inc
inc
rol
add
jg
sub
js
iret
pop
adc
fsubrp
adc
ret
xor
inc
or
mov
jo
cltd
push
idivl
pushf
and
lret
inc
insb
mov
cmc
mov
push
cmpsb
fcomps
jbe
adc
inc
lods
xchg
xchg
pop
xchg
in
or
and
loope
inc
pushf
jns
bound
dec
stc
es
out
inc
add
divl
jl
clc
aas
and
mov
mov
pop
inc
pushf
lret
push
pop
push
dec
insb
fistl
add
lea
mov
hlt
xchg
fsts
repz
and
shlb
jbe,pt
jg
sbb
push
js
mov
lahf
sti
inc
xlat
iret
clc
jg
int3
mov
andb
or
or
mov
mov
push
pop
in
dec
fnsave
lret
cld
pop
insl
out
iret
xchg
push
lea
ljmp
je
jnp
lcall
fwait
sti
jl
lods
les
push
xchg
and
enter
pop
fwait
in
movsb
outsl
pop
cmpsb
sbb
lods
xor
scas
xchg
inc
mov
mov
xor
mov
jg
xchg
inc
mov
xor
mov
lahf
mov
jae
sub
rolb
inc
mov
jno
or
fisubrs
jle
jb
out
test
loopne
rcrl
test
aad
adcb
es
fisubs
pop
xchg
lods
push
aad
mov
imul
xor
lret
idivb
xchg
adc
sub
or
lcall
daa
repnz
push
mov
jg
icebp
sbb
adc
push
add
repnz
push
jecxz
enter
jmp
pop
leave
sbb
out
cmpb
sub
cmp
jnp
xlat
push
or
mov
arpl
mov
jg
mov
mov
repnz
iret
push
pop
stos
popa
mov
cmp
psubq
scas
movsb
fimuls
lods
mov
sub
sti
repnz
sbb
sarb
out
pop
pop
and
xor
sub
pushf
arpl
rcr
mov
xchg
add
mov
jmp
xchg
nop
inc
bound
inc
aaa
leave
sub
ret
pop
fwait
mov
mov
in
mov
sar
sbb
jecxz
adc
push
sub
mov
add
pop
xorl
iret
sbb
mov
xchg
mov
cmp
dec
fcompl
push
testl
negl
xchg
xchg
cltd
das
push
in
and
loope
flds
mov
bound
cmpb
test
pop
lods
adcl
stos
cmp
aas
sbb
adc
ret
addr16
call
mov
sahf
imul
and
xchg
push
scas
and
in
jb
xchg
sbb
push
stos
cmc
ret
fwait
sub
pop
inc
lret
mov
cltd
imul
sbb
out
cmc
cmp
pop
lds
xchg
inc
fistps
lret
mov
xchg
cmp
inc
sahf
xor
adc
out
inc
pop
jp
jnp
inc
mov
inc
mov
enter
das
mov
scas
ret
ja
movsl
xchg
arpl
cmp
out
not
in
jle
adc
psubsb
cmp
mov
fisubs
jp
or
jl
in
lret
adc
mov
cmp
jl
test
pop
pop
pop
arpl
jnp
ss
xchg
call
jns
push
into
scas
push
add
int
sahf
adc
mov
fcmovnu
jp
aaa
jbe
pop
popf
es
inc
test
dec
arpl
pop
jno
sub
pop
mull
push
add
adc
jno
jle
es
mov
xchg
repnz
lcall
das
pop
sub
out
sbb
fistl
scas
jne
or
jb
ljmp
std
jl
mov
add
cmp
lods
aam
fmuls
mov
mov
jge
lahf
pop
cmp
aad
mov
divb
pop
add
nop
inc
icebp
push
ljmp
fstpl
cmp
icebp
dec
jle
ds
xchg
das
jge
sub
mov
dec
addb
filds
leave
jo
xor
ds
notl
pop
out
and
insb
mov
jmp
push
push
std
test
insl
push
xchg
jb
and
jnp
dec
imul
sarl
mov
cmpsl
in
hlt
xor
dec
push
lret
add
and
inc
idivl
jns
gs
and
sarl
mov
cltd
out
xchg
jae
pop
imulb
inc
jmp
cmpsl
lret
leave
test
xchg
mov
scas
pop
ret
add
repz
xchg
cmp
call
mov
scas
pop
adc
dec
mov
cltd
dec
and
testl
stos
pop
ds
sbb
cwtl
pop
xchg
aam
stc
push
pop
inc
stos
cmp
stos
jb
add
pushf
jl
pop
cmc
stos
fmulp
xchg
fisttpl
das
adc
sub
ficoml
lods
clc
insl
jecxz
push
dec
mov
pop
jle
mov
jecxz
pop
adc
jns
xor
xor
sbb
jne
add
popf
or
sub
pop
mov
push
sbb
add
pop
subb
shlb
pop
out
or
loopne
btc
sub
faddp
xor
jne
aaa
pushf
fcomps
inc
sbbl
or
lcall
mov
adc
cmp
loopne
shr
enter
jge
loopne
mov
push
mov
jne
inc
add
mov
cwtl
jg
push
adc
repz
imul
stos
dec
jecxz
xchg
in
jmp
lret
sbb
and
cmp
std
push
mov
inc
daa
push
lret
ja
xchg
adc
adc
sub
mov
xchg
ja
or
add
enter
pop
cmp
je
cli
sub
movsb
push
leave
cmp
mov
sub
xchg
cli
mov
jb
psllq
cld
jnp
xchg
push
and
mov
sub
gs
data16
or
adc
lea
xor
or
aam
rcrl
cmp
sbb
dec
mov
or
outsl
mov
add
roll
mov
mov
jmp
xor
rcrb
adc
lock
in
in
mov
dec
inc
jo
sti
sahf
xchg
xlat
ljmp
outsl
sarl
in
mov
lret
ds
adc
and
in
fwait
arpl
and
dec
xchg
mov
data16
testb
mov
inc
sub
xor
int3
sbb
xchg
push
dec
or
and
mov
adcb
mov
aad
jg
icebp
add
jmp
in
and
mov
jae
push
hlt
sahf
jp
sub
les
orl
lea
pop
sbb
in
inc
cmp
sbb
fwait
push
jp
mov
dec
mov
mov
pop
push
int3
adc
and
push
mov
cmp
add
test
in
mov
or
out
pop
mov
push
insl
jle
outsl
loope
jne
hlt
jnp
sahf
sbb
scas
push
lret
add
dec
test
xor
rcl
fsubrl
aas
outsl
mov
add
push
adc
hlt
push
in
shl
mov
fmull
jge
out
adc
loop
push
sbb
cld
out
cs
lahf
xchg
fs
mov
pop
push
fisttps
inc
add
fcoml
adc
fnstenv
push
repz
adc
mov
dec
std
and
fwait
mov
dec
add
les
data16
cmp
and
mov
test
popa
sbb
mov
cmp
arpl
cs
std
scas
lea
jp
jns
xor
ljmp
js
and
jnp
scas
inc
jl
es
pop
xor
push
subb
pop
aas
push
mov
mov
xorl
mov
adc
jge
cmp
push
pop
xor
fcmovbe
adc
bnd
dec
fbld
pop
ds
or
add
xor
sahf
mov
push
repz
das
push
es
inc
cmp
test
rcll
mov
jge
xor
pop
or
mov
repnz
sub
daa
fsub
xchg
sub
repnz
add
in
mov
xor
std
cmovnp
mov
gs
into
jnp
out
xchg
ret
les
and
jecxz
loopne
dec
mov
cli
scas
fistps
std
cmp
in
shrl
mov
hlt
mov
cmp
clc
jmp
and
or
jb
jg
sbb
loopne
mov
enter
je
in
jb
mov
xlat
daa
leave
out
enter
lcall
add
or
inc
jo
pusha
jle
xchg
test
pop
and
push
inc
pop
repnz
cmpsb
lcall
cmp
mov
test
imul
xchg
sbb
inc
idivl
mov
add
pop
mov
test
fwait
leave
leave
lods
rorb
repnz
cs
push
fwait
lahf
mov
cmpb
lcall
or
iret
lods
stc
xchg
sahf
pop
inc
ss
sub
adc
mov
mov
or
loopne
in
pushl
mov
and
popf
mov
fcmovnu
aad
cltd
stc
jbe
adc
adc
dec
add
dec
xor
out
shlb
dec
test
adc
push
inc
and
sub
mov
mov
out
iret
jge
in
add
lds
in
pop
mov
adc
shr
aam
dec
rorb
rcll
sbb
lock
repnz
into
call
rorl
cmpb
jp
dec
popa
push
in
sarb
test
sub
roll
xchg
icebp
push
push
dec
setnp
and
mov
inc
int3
jecxz
sub
xor
loopne
les
lods
xor
push
xchg
out
sub
and
popf
loopne
out
stc
mov
push
add
jnp
lea
add
movsl
cmp
cmp
sub
adc
adc
sti
int
aad
jnp
xchg
cltd
jne
in
loopne
xchg
lea
fisubrl
leave
rorb
enter
push
mulb
dec
cmp
dec
cmc
cmp
cld
es
aas
mov
pop
or
rdtsc
xchg
hlt
push
in
lret
test
jne
and
aad
pushf
and
aad
xor
aas
repz
lcall
cmp
push
jecxz
mov
mov
ficompl
adc
xchg
mov
fisubrl
push
adc
cmp
inc
xrelease
xor
test
test
mov
out
cmp
and
out
or
push
mov
hlt
mov
jmp
popa
dec
inc
or
mov
andb
sub
and
and
mov
std
negl
mov
push
lcall
pop
dec
add
xchg
inc
xor
lods
rolb
sbb
mov
cld
stc
pop
sub
xchg
arpl
out
adc
shrb
pop
mov
cld
in
and
mov
mov
ljmp
aas
popa
xchg
xchg
sub
fdivl
dec
out
fs
sub
stos
sbb
pop
lods
push
rcll
sbb
xor
cmp
dec
adc
xor
sahf
mov
dec
int3
xor
jmp
pop
out
mov
mov
addl
lcall
sbbb
stos
cmp
test
sub
jl
in
mov
gs
push
enter
pop
insl
xchg
stos
add
sub
mov
divl
in
outsb
aam
iret
mov
xchg
xchg
outsb
lcall
add
cmp
dec
lock
cmpsb
in
jae
pop
dec
les
cwtl
pop
cwtl
mov
xchg
or
insb
pop
js
scas
out
roll
and
into
into
ret
cmpsl
mov
pop
jge
ret
test
xor
ja
mov
push
je
out
mov
pushf
ljmp
xor
loope
test
cmp
aad
fisubrs
dec
cwtl
lret
xor
push
mov
lods
mov
jl
add
mov
adcl
lret
xor
add
mov
jmp
es
aad
mov
fsubrs
loopne
mov
imul
pop
pop
jo
push
shrl
jp
mov
xor
rcrl
dec
fstpt
sub
sbb
pop
test
into
xchg
sar
int3
xchg
enter
inc
mov
mov
incl
add
mov
cmp
lods
xor
mov
sub
into
sbb
or
lret
pop
jae
inc
sub
xchg
jo
push
mov
dec
sub
push
add
subl
out
add
cwtl
adc
push
call
cmp
ss
jg
gs
cmpsl
inc
in
sbb
xchg
std
push
mov
add
jge
lods
xchg
cmovno
dec
xchg
ds
push
into
mov
subb
mov
data16
nop
mov
pop
push
pop
cmp
sti
mov
call
mov
cmp
cmp
ljmp
mov
inc
nop
es
mov
aam
call
mov
lret
cmpsl
adcl
or
cmpsb
inc
xlat
xchg
in
cs
fstps
inc
mov
push
lods
aaa
frstpm(287
iret
cmp
mov
hlt
jecxz
inc
jecxz
gs
pop
cmpsl
pusha
imul
test
cmp
inc
sbb
push
fisttpl
add
nop
aas
popa
sbb
push
pop
mov
sbb
or
fisttpl
out
fisubrs
iret
cmpsb
mov
mov
out
gs
nop
mov
les
dec
xchg
jns
cmp
loope
cmp
dec
andb
inc
scas
lcall
inc
insl
int3
cmpsb
mov
push
repnz
test
inc
into
or
cltd
add
out
jae
aad
out
lods
cltd
testl
jecxz
cmpsb
xor
push
dec
mov
cld
in
adc
lret
lcall
push
dec
popa
insb
stos
bound
into
jno
decb
sbb
push
repz
fdiv
ret
push
mov
mov
inc
pop
lcall
inc
mov
cmp
hlt
in
dec
rcll
sub
idivl
rol
scas
inc
xchg
mov
out
mov
test
inc
sub
addr16
or
jl
mov
ds
inc
mov
sbb
les
adc
sub
dec
sub
or
and
and
pop
test
sbbb
ss
push
scas
shrl
pop
stos
movsb
mov
test
push
out
xor
mov
mov
je
cmp
test
gs
insb
sti
js
xlat
sub
pop
jecxz
sbb
cltd
sti
cmpsl
mov
lret
mov
rolb
js
das
aas
xor
jle
test
push
jl
push
clc
mov
jo
xchg
cmp
pop
loopne
ss
test
stc
fistps
es
xchg
je
loope
push
sub
xchg
shlb
imul
and
enter
push
xor
fnstsw
shlb
fnsave
pop
xor
stos
std
loope
jb
adc
jns
fiaddl
std
push
inc
lcall
mov
insl
pop
inc
xchg
xchg
sahf
add
push
aam
pop
das
cmp
mov
xor
jg
push
push
cmp
data16
mov
repnz
xor
jb
push
sbb
push
adc
pop
cs
mov
xor
jnp
and
gs
test
pop
pop
cmp
push
ja
cmp
int3
pop
test
mov
xchg
lahf
inc
gs
cmp
jne
mov
push
dec
dec
push
mov
sub
pop
dec
mov
outsl
mov
cmpsb
or
mov
and
stc
das
aam
cld
push
lock
lret
cwtl
inc
push
fildl
scas
dec
xchg
pop
sub
mov
ss
es
inc
mov
pop
hlt
mov
das
scas
pushf
adc
push
inc
adc
pop
inc
xor
ljmp
jge
mov
sbb
jo
inc
jle
insl
lret
pop
ds
mov
adc
or
ret
pop
out
mov
popf
or
mov
es
dec
and
push
lcall
outsl
mov
sbbb
popa
fwait
inc
cld
dec
shr
jecxz
stos
sub
or
adc
jp
imul
icebp
sbb
cmpsl
rep
popf
sahf
or
lea
pop
push
icebp
xchg
mov
mov
fsubs
adc
dec
lods
lret
jg
lret
cmp
sub
fcmovnbe
daa
sbb
insl
fcomps
adc
dec
ficompl
mov
xchg
mov
fldl
rolb
mov
xchg
lds
ljmp
mov
incb
sbb
cmp
lret
ja
dec
andl
mov
mov
testb
es
lods
sbb
push
mov
push
mov
mov
ja
sbb
clc
in
insl
sbb
or
outsb
push
fcomp
jl
xlat
out
jno
add
arpl
sbb
push
mov
rorb
add
ja
imul
lock
mov
inc
popf
pop
jecxz
push
hlt
js
loopne
jae
call
movsl
int3
stc
mov
adc
mov
iret
ss
test
lahf
or
jnp
orb
dec
xor
stc
mov
icebp
xor
scas
std
out
mov
mov
adc
in
mov
int3
int3
ret
loop,pn
ret
push
cmc
mov
add
sub
adc
mov
in
sbb
add
pop
call
aas
dec
scas
fisubs
addl
das
lcall
std
imull
ret
jmp
pop
adc
mov
xchg
loope
rcrb
mov
stos
add
jne
fwait
sub
test
hlt
data16
sub
cmc
mov
scas
gs
cli
sbb
cld
add
mov
dec
or
cmpl
dec
repnz
hlt
decl
mov
jnp
mov
mov
pop
in
movsb
push
lret
sub
add
xchg
fcomi
dec
es
adc
xor
mov
les
and
mov
insb
xchg
mov
fs
clc
adc
jns
cld
pop
aam
in
hlt
cmp
push
loop
adc
mov
pusha
call
jo
pop
push
mov
or
fstl
outsb
mov
cmpsl
loop
in
mov
insl
test
je
push
nop
sahf
icebp
lea
pop
mov
inc
clc
push
sbb
mov
mov
cmp
lcall
clc
les
xchg
fnstenv
testb
pop
rcrl
enter
push
scas
pop
sub
xorl
xor
mov
aam
icebp
and
push
jecxz
xorb
addr16
int
inc
push
movsl
adc
lods
insl
aam
jg
jmp
sub
sub
mull
cltd
pop
sti
ficoms
fs
notb
sbb
add
leave
fwait
add
popf
in
dec
ret
outsb
dec
imul
nop
mov
cs
mov
and
mov
add
test
mov
pop
out
stc
cmp
ja
push
divl
cmpsb
xor
inc
mov
dec
xchg
mov
add
push
jne
inc
loopne
or
jge
int3
sub
dec
fidivrl
ja
data16
push
and
dec
ss
jnp
iret
push
rcll
push
ja
cmpsb
cmp
divb
xchg
in
mov
insb
and
arpl
into
fidivs
xor
in
mov
repz
jae
inc
push
insb
and
jns
cld
std
pop
fnstcw
jl
repz
jmp
insl
popa
mov
movsl
pop
cmp
mov
test
imul
inc
mov
loop
stos
icebp
std
mov
fwait
add
and
mov
movsl
aam
dec
cltd
out
cmp
mov
scas
mov
sbb
dec
imul
roll
inc
mov
popf
cmp
enter
add
cmp
mov
sub
inc
fnstcw
push
iret
mov
jno
push
fs
mov
push
xor
pop
pop
cld
xlat
out
arpl
jae
cmp
jecxz
lret
pop
inc
mov
xor
mov
and
mov
hlt
nop
test
adc
sbb
decl
cmp
test
mov
test
dec
lcall
jl
push
mov
mov
push
xchg
dec
adc
xchg
jecxz
fst
sub
adc
mov
jns
out
mov
dec
into
aad
add
mov
and
repnz
scas
arpl
das
add
int
xchg
popf
pop
xchg
sub
mov
sbb
iret
stc
pop
rorb
aam
je
fisubrs
mov
test
lods
lock
dec
ljmp
or
jl
cmp
in
dec
orl
out
pop
sbb
out
pop
pusha
int
enter
xlat
sub
fcoms
adc
adc
stos
rcll
or
jo
daa
and
jae
jl
in
add
mov
jmp
pusha
call
arpl
int3
jmp
add
fisubl
andl
dec
loop
push
imul
jnp
je
xor
in
js
ret
fwait
inc
int
in
xor
sub
xor
adc
adc
pop
xchg
pop
jge
jno
push
xor
jnp
inc
mov
ret
or
push
or
push
gs
xchg
iret
adc
into
ja
jecxz
cmpsb
xchg
or
test
cwtl
mov
jne
jg
jmp
test
iret
cwtl
dec
addr16
mov
dec
cli
stos
push
outsl
out
push
ja
xor
fiaddl
sbb
shrb
pop
jmp
xchg
sbb
fdivs
push
or
sub
mov
popa
sbb
psrlq
xor
pop
pop
pop
rolb
sub
ja
pop
xor
cmp
fwait
js
es
sub
ret
loop
pop
faddl
cmp
pusha
adc
push
stos
adc
lcall
cs
imul
jae
dec
sarb
int
jb
pusha
test
test
sbb
pop
aas
fwait
stos
and
stc
insb
and
sbb
mov
push
cmc
push
mov
push
inc
lret
mov
and
jmp
push
imul
enter
dec
dec
mov
out
mov
mov
das
ds
mov
test
into
inc
lret
rcrb
decb
cmc
lods
nop
add
jnp
dec
js
test
dec
fidivrs
jae
mov
adc
cmc
and
sbb
dec
dec
je
imul
lods
jns
mov
add
aas
jecxz
aas
scas
cmp
js,pt
adc
dec
adc
std
pop
push
frstor
and
lcall
leave
popa
mov
arpl
test
imul
xor
fcompl
insl
mov
jbe
cmp
pop
ds
adc
pop
push
xorb
loop
cwtl
std
dec
js
xlat
arpl
dec
push
cld
mov
sub
int3
jb
gs
pop
xchg
mov
jb
mov
push
and
imul
mov
lret
cli
push
fisubl
addl
pop
mov
and
sub
cwtl
test
test
mov
xor
push
push
dec
xchg
out
inc
into
les
mov
lods
je
fistl
popa
outsl
dec
mov
mov
sti
ljmp
inc
fnsave
rclb
add
ja
lock
pop
addr16
insl
lods
div
movsb
js
repnz
repnz
sbb
mov
xor
pop
push
fs
clc
loopne
aad
movsb
cmp
inc
sub
stos
js
jo
cltd
add
insb
fdivp
dec
add
and
adc
sbb
arpl
sbb
jl
outsl
js
fldt
sub
inc
in
xchg
sahf
jl
xchg
out
cmp
loope
adc
xorl
and
mov
das
xor
push
sub
sbb
lret
or
or
pop
pop
decl
fidivl
adc
xchg
adcl
fnstsw
popl
es
or
adc
push
ret
mov
lcall
dec
lret
push
roll
insb
or
pusha
arpl
leave
fcmovb
mov
mov
jae
out
popa
cltd
lcall
fsts
in
dec
xchg
fnstenv
jg
out
lods
mov
dec
loope
cltd
rolb
push
sar
jmp
addb
fdivp
mov
std
out
scas
mov
jno
jns
pusha
mov
jns
dec
mov
test
das
loope
jbe
pop
sbb
pushf
or
mov
das
fwait
jb
adc
mov
jp
xchg
mov
push
jl
pop
push
mov
popl
lods
jle
mov
movsl
arpl
shr
mov
push
and
lods
stos
xchg
std
sub
fldt
mov
rcrb
out
xor
mov
jnp
push
lock
push
mov
testb
mov
cmp
xor
jb
cwtl
dec
dec
rorl
ljmp
jb
mov
pop
inc
sub
push
cmp
dec
call
inc
sti
lock
movsb
cmpsl
test
mov
pop
ljmp
jno
mov
rorl
jb
sahf
mov
cmp
cli
mov
imul
neg
out
out
mov
xchg
fs
push
pop
outsb
dec
mov
sub
shrb
adc
fisubrs
mov
pusha
dec
sub
sbb
fidivrl
add
xchg
xchg
aam
test
mov
insl
mov
iret
leave
or
ret
fnstcw
cmp
cmp
pop
add
pusha
jno
aas
mov
mov
fnsave
stos
outsl
push
push
inc
mov
jecxz
push
push
cmp
jp
and
ret
shll
sti
cmpsb
int3
pop
sbb
mov
cmp
test
jae
repnz
orl
xchg
dec
push
stos
pop
mov
mov
clc
push
popf
fbld
inc
mov
mov
mov
sub
adc
inc
test
sub
or
fistpl
sbb
outsl
jae
mov
cmpb
in
mov
ss
test
dec
fldl
dec
fdivrl
movsl
aaa
jmp
stos
inc
call
sbbl
arpl
xchg
fists
lcall
imul
xor
pop
arpl
ret
cmp
rcll
push
dec
push
clc
adc
ficompl
and
popf
jnp
leave
jp
fwait
test
andl
outsl
mov
jecxz
aaa
cmp
fisttpl
mov
inc
movsb
int
push
imul
inc
into
fwait
adc
mov
dec
lret
rol
hlt
out
xor
mov
pop
mov
and
pop
shlb
jl
inc
and
jnp
sub
lea
xor
adc
jae
divb
adc
push
pushf
aas
scas
lods
xchg
popf
cmpl
xor
mov
addl
int3
int3
mov
xchg
imul
or
xor
and
cmc
or
out
inc
out
mov
xchg
ss
xchg
pop
leave
dec
loope
xchg
mov
shlb
enter
dec
ficoml
mov
adc
adc
jno
cmp
or
inc
mov
jl
jl
popf
xchg
es
pop
addr16
push
push
stos
mov
pop
add
repnz
dec
mov
push
or
push
into
aaa
leave
pop
pop
xchg
pop
aam
mov
movsl
test
jecxz
and
ljmp
ds
sbb
sbb
mov
out
addr16
hlt
xchg
adc
sbb
xor
adcl
mov
sub
and
adc
hlt
lahf
orb
pavgb
dec
push
push
aad
stos
mov
mov
arpl
fmull
sbb
arpl
mov
jo
aas
mov
in
pop
stc
movsb
pop
scas
mov
jae
xor
fsts
xor
adc
sbb
adc
and
ss
adc
insl
push
fstl
lods
sar
fldt
das
xchg
lret
sub
push
ds
pop
lea
int
jl
in
test
dec
arpl
ret
cmp
push
sub
mov
fsts
mov
mov
ja
mov
movsb
insb
insb
mov
mov
inc
pop
ds
xor
fisubl
dec
and
mov
cld
cli
ds
dec
gs
xchg
fldln2
or
pusha
xlat
xor
cmpsb
mov
cld
cwtl
insl
out
loope
jge
sarl
dec
aam
lods
lcall
rcrb
mov
das
add
sarb
insb
cld
mov
repz
inc
lock
outsl
push
and
sub
es
sbbb
in
lret
mov
testl
aas
pushf
clc
inc
mov
outsl
mov
xor
and
xchg
mov
push
or
mov
cmc
ret
mov
mov
aad
insb
stc
or
xor
and
push
sbb
rcll
movsl
ret
jmp
rolb
mov
adc
vcvtps2dq
jne
lds
inc
sub
cmpsb
mov
inc
call
jno
sub
jbe
adc
jnp
shl
std
es
imul
sub
fwait
cld
jne
sar
sbb
inc
js
test
dec
mov
cld
out
or
xor
xchg
push
jg
leave
ficoms
mov
sub
mov
mov
sbb
lcall
loop
pop
add
add
sti
das
sbb
sub
std
cmp
jle
xchg
addr16
push
sahf
dec
mov
imull
mov
in
loope
pusha
sbb
fdivs
ss
adc
push
adc
cmp
push
in
add
mov
add
bts
popf
les
sub
movsb
out
sub
dec
pop
dec
sub
nop
test
rorb
outsb
cmpb
dec
les
pop
xor
out
mov
or
push
cs
mov
dec
inc
pushl
add
orl
fcoms
subb
adc
push
adc
ficompl
xchg
pop
mov
shll
dec
add
sbb
shrb
loop
lds
repz
mov
movsb
mov
dec
outsb
clc
ljmp
mov
and
rcl
into
sbb
cltd
cmpsl
and
js
rcrl
in
gs
popf
hlt
popa
lods
pop
mov
jge
jns
inc
mov
mov
cltd
cmpsb
mov
push
dec
stos
push
ljmp
movsl
mov
data16
add
mov
jle
jns
fdiv
sbb
dec
pop
mov
sub
int3
push
push
xchg
and
cld
ljmp
push
xchg
add
sub
cltd
sbb
lcall
movsl
icebp
aad
ret
fnstcw
add
mov
sub
mov
mov
inc
and
xor
cmp
xor
or
and
aam
adc
je
loopne
sub
mov
leave
mov
in
and
pop
or
rolb
add
push
sahf
xor
mov
push
rol
int
sahf
div
and
jo
lcall
pop
jns
test
mov
lcall
subl
jle
or
enter
inc
mov
jne
pop
clc
sbb
mov
jo
or
xor
push
and
in
pushf
push
iret
imul
add
leave
es
mov
mov
scas
fimuls
ret
fs
arpl
xchg
int
adc
dec
jb
in
dec
xchg
aam
adc
push
cmc
fnstcw
js
testl
hlt
ja
cmpsl
lds
dec
push
jp
fdivl
pop
js
push
ja
jb
data16
andl
or
dec
bound
adc
cltd
mov
mov
adcl
xor
cld
repnz
fbstp
iret
lret
jle
stos
cltd
pop
test
xchg
jbe
jg
fs
sahf
jl
dec
mov
jl
push
test
maxps
orl
jno
cld
xorl
jle
ds
inc
xor
inc
cli
add
fimull
inc
pop
in
sub
inc
jno
fadd
dec
xor
test
pop
addr16
mov
jmp
pop
dec
pushf
xchg
pop
xchg
pop
push
les
dec
push
out
xchg
sbb
mov
ds
pop
xchg
jecxz
sub
adc
imul
push
fs
fisubrl
cmp
inc
cmp
sti
inc
jns
sbb
popf
xchg
adc
adc
add
cmp
mov
push
mov
jne
lret
mov
stos
out
add
sub
inc
mov
pop
mov
flds
daa
cmpsb
sti
add
cs
mov
scas
dec
sbb
int
push
jmp
ror
mov
into
es
push
test
mov
movsb
xor
pmaddwd
mov
sbb
shr
mov
movsl
inc
jmp
out
inc
and
push
jb
ss
in
pop
push
push
scas
jbe
mov
jl
cmpsl
call
repz
imul
sbb
into
call
outsb
cld
and
orb
inc
or
or
xchg
dec
hlt
pop
pop
pop
je
mov
mov
fisttps
dec
lret
pmullw
mov
mov
popf
sub
lcall
scas
dec
jle
and
pop
out
xchg
and
pop
xor
enter
popa
pop
jo
fimuls
lods
insl
sub
pop
adc
fcmovb
sub
and
cmp
add
dec
insb
les
repz
inc
sub
scas
push
ds
jae
mov
and
std
filds
push
andl
fildll
stos
pushf
sbb
xchg
add
sub
insl
fbld
jmp
cli
daa
std
outsl
mov
xchg
and
mov
jo
pop
push
sub
pop
sub
in
inc
push
call
inc
mov
sti
sub
jns
xchg
xchg
sub
jae
out
cmpsb
mov
sub
adc
and
push
xor
push
in
or
dec
in
sti
orl
jnp
sbb
jae
push
int3
xlat
lock
xlat
and
dec
mov
rclb
es
cli
sbb
and
repz
inc
ljmp
xlat
std
hlt
push
into
and
mov
das
frstor
sub
xor
cmp
push
cmp
inc
jnp
int3
jle
cwtl
mov
xor
and
push
push
xlat
fs
stos
push
insb
in
jns
lahf
andl
cli
test
mov
jl
shrb
jno
cmp
add
mov
mov
in
lds
xor
mov
outsl
jb
sub
bnd
dec
jg
rorb
arpl
and
jno
js
sub
pop
cs
sub
push
insb
call
mov
ja
jmp
jp
mov
xchg
ret
pop
cwtl
nop
stc
clc
cwtl
aas
je
push
outsl
in
test
jo
hlt
test
int3
pop
adc
enter
fstps
loop
or
jmp
cmp
pop
fiadds
xchg
mov
mov
leave
decl
repz
cmp
or
cmp
inc
rcrb
inc
pop
inc
les
or
pop
or
inc
les
repnz
jp
in
sti
mov
add
push
fsubs
sbbb
mov
shrb
sbb
pusha
subl
nop
outsb
lea
cltd
incb
in
mov
aas
xchg
cltd
es
insl
mov
mov
or
cmp
and
cs
jl
mov
mov
dec
insb
add
pop
test
or
xchg
clc
jg
lss
fsubl
enter
mov
jecxz
rcr
jl
test
sbb
pop
mov
jo
add
ret
aas
aam
adc
fistl
stc
mov
adc
xor
iret
fcoml
icebp
xchg
jnp
or
in
out
out
fxch
test
fisttps
jo
loop
jno
movsb
mov
or
xchg
push
lret
nop
mov
out
push
test
xor
repnz
js
in
cmpsl
sbb
ficompl
push
mov
lods
in
push
push
adc
jl
insb
fwait
subb
add
aad
adc
adc
popf
jg
inc
stos
sub
sub
or
add
data16
lds
sub
repnz
js
jno
push
mulb
mov
push
cmp
imul
outsb
lret
sub
pop
push
jp
sarl
xchg
stos
push
mov
cld
loopne
dec
rorb
lods
pop
test
jge
out
adcb
fstps
mov
ds
ficompl
sbb
adcb
cmp
rcr
arpl
aam
push
repnz
lahf
xlat
jb
lea
js
mov
mov
pop
icebp
addr16
dec
dec
pop
sub
fsubrl
or
pusha
and
sti
pop
sub
jo
adc
lret
es
mov
lds
je
stos
cmpsb
int3
cmc
mov
dec
cmpsl
rcrl
and
enter
subl
fsts
imul
xor
xchg
xchg
push
mov
push
les
cmp
sub
mov
and
mov
mov
jecxz
push
push
jnp
push
push
mov
dec
xor
clc
fsubrp
jmp
and
into
fstpt
imul
sub
mov
sahf
mov
popa
mov
mov
filds
cmp
lret
pop
pop
into
push
pop
fisubrs
cvtps2pd
aas
aaa
lock
mov
rcl
jbe
xor
xchg
cli
aad
pop
mov
and
jge
sbbl
enter
jl
adc
inc
push
outsb
mov
xchg
aam
pop
lcall
das
or
inc
add
inc
sbb
es
outsb
scas
mov
jns
ja
xchg
push
and
pop
sub
arpl
cs
in
mov
pop
test
xlat
cmp
cmp
mov
outsl
pop
bound
stos
adc
sub
inc
dec
dec
inc
xchg
ret
sbb
or
aaa
jp
test
mov
dec
xor
shr
sub
lock
inc
outsb
das
cmc
and
out
cmp
roll
je
in
ficoml
clc
cmpsb
fcoml
hlt
ljmp
cmp
or
xor
inc
iret
xchg
xchg
out
push
mov
arpl
push
gs
add
pop
mov
call
imul
adc
sbb
pop
stos
cli
mov
outsl
and
jg
xchg
out
imul
jbe
popf
js
movsb
fdiv
fdivrs
lret
test
stos
sub
scas
js
into
pop
jl
xchg
lret
in
aad
adc
dec
and
sub
push
in
stc
pop
ret
cmp
add
cmp
bound
mov
popa
or
jge
dec
mov
pop
mov
out
add
pop
add
ss
sti
jns
dec
push
pusha
enter
cmpsb
adc
addr16
pop
pop
or
inc
sahf
inc
bound
jnp
pusha
mov
rclb
sbb
dec
xor
xchg
ljmp
and
pop
imul
xlat
leave
cmp
loope
lock
mov
inc
push
ss
pop
jo
sub
jb
je
add
xlat
addr16
jne
inc
push
movsl
popf
scas
movsl
sub
or
xorl
xlat
inc
push
repnz
fistps
out
push
test
mov
jb
and
fs
sti
aam
inc
addr16
sub
or
push
cmpsb
cmpsb
pop
bsf
ljmp
cli
bswap
and
movsb
insb
sarl
data16
sub
rclb
sbb
mov
ja
cmpsl
cld
cmp
mov
popa
jae
cwtl
cmp
iret
and
or
adc
in
icebp
mov
hlt
pop
dec
cmp
test
or
mov
add
or
cmp
in
adc
into
inc
outsl
push
and
movsl
push
enter
mov
push
int3
inc
push
cmp
push
dec
lahf
xchg
cmp
jge
imul
lcall
inc
xor
and
mov
mov
nop
call
pushf
pop
mov
or
bound
push
pop
fbld
pop
sbb
pop
js
inc
and
out
cmp
test
in
int
mov
stos
pop
shlb
sbb
jno
int3
cmpl
xor
icebp
aam
loop
pop
xchg
adc
arpl
pop
addr16
pop
in
sub
dec
outsb
int3
xchg
mov
and
inc
repz
loopne
sub
mov
stc
jp
imul
jmp
mov
push
pop
mov
ss
jmp
in
fsts
mov
loop
or
out
test
pusha
clc
dec
sub
jmp
movsb
shll
push
lods
out
xlat
gs
sub
jnp
mov
ret
lcall
lds
mov
and
fimuls
in
adc
outsb
add
jecxz
lods
inc
jnp
and
imul
ja
pop
jg
sbb
sbb
shrb
sbbb
xchg
sbb
mov
xchg
popf
dec
dec
xor
out
sub
adc
fst
aam
stos
lcall
std
and
dec
mov
fisubrl
mov
outsb
out
mov
cmc
dec
mov
fwait
std
and
xchg
loopne
imul
xchg
popf
jae
cli
ret
fwait
test
das
xchg
fwait
cmp
sarb
or
ficoml
jg
shrl
xor
sarb
xchg
mov
mov
inc
popa
fistpl
adc
popf
mov
pusha
ljmp
into
nop
loopne
mov
test
lods
dec
cli
or
mov
repz
pop
jnp
pop
sbb
push
bound
or
shll
inc
dec
xchg
sub
mov
cmpl
xor
mov
or
ja
repnz
add
pop
loop
xchg
mov
hlt
jbe
push
je
inc
insl
out
ror
mov
sub
mov
mov
pop
sub
inc
shlb
ds
xchg
add
or
push
mov
lret
cld
scas
and
outsb
dec
rcr
lcall
jne
pop
cld
cli
add
andl
cmp
xor
pop
out
arpl
mov
jno
nop
inc
pop
lea
xor
sbb
xor
push
mov
mov
jge
sub
fmuls
push
mov
jne
cmp
mov
lock
pop
dec
dec
iret
popa
fucom
std
orb
cltd
aad
inc
mov
mov
dec
imul
outsb
mov
aas
enter
mov
je
fwait
dec
jecxz
aad
call
fcomp
popa
cmp
loope
mov
sub
push
push
ret
sbb
lcall
movsb
sbb
and
sbb
mov
aaa
push
mov
mov
xchg
dec
mov
aam
nop
mov
mov
or
out
in
loopne
sub
jmp
int
andb
jbe
ficompl
lock
pop
arpl
cmp
or
mov
fsubs
lods
inc
fwait
dec
mov
ljmp
clc
dec
ror
cmpsb
jnp
repnz
adc
fisttpl
adc
cmp
lcall
das
jl
jo
xlat
das
xchg
and
test
inc
mov
jno
out
incb
movsb
dec
lods
test
in
cmpsb
xorw
mov
roll
fwait
lret
push
cld
data16
dec
mov
popa
dec
in
cmp
and
push
sti
in
push
subl
and
push
mov
sahf
popf
loopne
sub
pushf
icebp
movsl
out
and
xchg
mov
arpl
sahf
inc
push
cmp
cmp
sbb
sub
out
cmp
cmp
rcl
arpl
sbb
loop
jecxz
and
clc
jecxz
dec
xchg
fld
fs
jnp
pushf
sarl
rolb
pop
or
aaa
or
mull
ret
mov
mov
shrl
or
rol
sbb
or
mov
jl
fmull
hlt
xchg
push
lahf
enter
cmpb
mov
std
cmpsb
adc
lds
les
loope
push
es
lock
hlt
rclb
enter
adc
sub
cmp
stos
xchg
scas
outsb
push
fstps
aaa
sbb
mov
pop
push
arpl
inc
cmp
sub
das
aaa
cmp
xchg
andb
mov
sti
and
arpl
sbb
xor
xchg
adc
xlat
pop
mov
push
insb
ret
insl
repnz
push
and
jb
adc
sub
stos
mov
push
in
in
in
mov
mov
mov
sbb
adc
or
pop
out
shrb
cli
and
gs
dec
lods
fisubrs
pop
outsl
or
lahf
das
lods
movsb
and
test
arpl
and
sub
es
dec
cwtl
rolb
pop
mov
jb
in
adc
inc
ds
stc
push
scas
pop
mov
or
imul
scas
popf
lahf
insl
sub
in
xchg
mov
inc
insl
clc
movsl
lret
push
mov
js
push
jecxz
cli
lds
or
cmp
ret
ljmp
adc
fidivrs
insb
mov
pop
push
mov
fsubs
mov
out
inc
dec
stc
xchg
mov
fstpt
jl
das
rcrl
movsl
xchg
pusha
jne
dec
fsubrl
or
sub
mov
xchg
insl
dec
shlb
push
pusha
lods
mov
mov
push
jmp
cmp
mov
mov
mov
std
inc
mov
gs
test
in
adc
cli
rol
rcr
sbb
xchg
out
out
jnp
inc
das
repz
daa
mov
and
int
pop
cmc
js
xor
ljmp
in
inc
and
sbb
mov
or
fwait
in
adc
push
arpl
call
je
xorl
cmp
ss
mov
mov
mov
and
mov
and
mov
insl
mov
call
jo
dec
xchg
xchg
inc
jo
and
das
in
stc
inc
daa
fdiv
add
cltd
movsb
or
and
dec
test
pop
cmp
das
xchg
or
test
mov
fdivl
lods
test
inc
testl
dec
inc
jge
sub
dec
lea
cmpsl
in
add
mov
mov
lods
fst
add
rcll
stos
xor
sbb
mov
sbb
push
jge
and
insl
fnsetpm(287
mov
jge
sbb
push
cmovo
popf
mov
pop
lock
loop
sub
dec
icebp
dec
mov
inc
addb
jo
and
outsl
arpl
pop
int3
inc
sbb
cmp
shll
xor
mov
mull
add
push
imul
cmpsb
fistpl
movsl
inc
dec
or
sub
mov
scas
push
mov
ljmp
aaa
push
push
lret
mov
mov
xor
popl
adc
xchg
pop
dec
mov
add
nop
mov
movsb
inc
subl
dec
stc
cltd
add
arpl
scas
popf
sub
sbb
movsl
ja
pop
jl
pushf
cld
or
jne
adc
adc
je
leave
popf
arpl
das
push
call
xor
dec
in
jae
cmpsl
call
fstpt
jne
jo
mov
mov
leave
fldl
pop
ret
pop
jae
xor
notb
je
scas
inc
mov
cmp
xorb
ljmp
mov
mov
or
leave
adc
out
jmp
mov
aas
popa
pusha
and
cmp
cwtl
loope
jne
scas
loope
bsr
xor
xchg
in
jecxz
xor
sbbl
cmpsl
insb
mov
mov
incl
pop
test
dec
add
sbb
adc
test
pushf
leave
in
inc
icebp
fidivrs
mov
je
pop
arpl
call
iret
ja
push
insb
lock
es
outsb
repz
insb
nop
sub
cmp
ljmp
fmulp
pop
lret
or
lret
test
cs
lock
jge
ja
fstps
or
decb
sbb
cmp
xchg
mov
add
add
mov
data16
pop
inc
icebp
inc
add
insl
out
popf
icebp
int3
pusha
adc
movsl
sub
xchg
mov
dec
stc
jbe
dec
sub
xchg
sbb
bound
aaa
cmpsb
pushf
push
add
or
xor
lock
push
jp
lcall
jno
lea
jne
popa
lea
loope
or
loop
roll
cwtl
cli
xchg
adc
lea
and
lds
and
sbb
and
aad
xchg
orl
fsubrs
pop
sub
sbb
xchg
pop
inc
and
aam
fisttpll
jge
mov
lret
das
cmp
inc
ja
push
aam
inc
xchg
sti
sbbl
mov
xor
cmp
xchg
dec
push
mov
dec
pop
mov
mov
dec
addl
pop
xlat
xchg
mov
dec
pop
cltd
out
pushf
sarl
mov
mov
aad
jnp
in
push
testb
push
jne
mov
ja
shrl
in
sti
cmp
je
lods
shlb
cmp
test
dec
jb
inc
and
mov
pop
in
das
hlt
daa
jmp
int3
and
dec
fsubrl
pop
stos
imul
jne
mov
adcl
lret
out
stos
icebp
mov
adc
xor
push
pop
jmp
pop
mov
inc
xchg
cmpsb
mov
loop
out
cmpsl
aad
cmpsl
aad
aas
pop
dec
mov
and
in
pop
mov
xor
xor
int
xchg
stos
push
pushf
xor
daa
xchg
pop
setp
ja
out
fs
pushf
mov
jno
int
xchg
sbb
nop
mov
loop
jns
je
xor
arpl
pop
in
mov
push
daa
clc
or
das
and
mov
out
lret
imul
xor
test
fs
inc
jg
push
push
push
cmc
fidivrs
ja
cmp
ret
dec
aaa
xor
sbb
push
pusha
sub
ret
aam
mov
lret
xchg
call
dec
mov
cmp
scas
add
add
pop
ds
sub
mov
call
and
push
popa
adc
divb
cmp
dec
pop
rclb
mov
xor
pop
jecxz
jmp
std
mov
pushf
out
mov
push
and
js
xor
mov
test
rcll
jae
aad
adc
jl
rolb
nop
xor
pop
xor
push
or
push
adc
call
pusha
hlt
sbb
fcmovnb
add
and
push
in
stos
cli
dec
int
insl
mov
mov
dec
and
cmp
enter
test
mov
cmc
add
and
mov
cmpsb
rcrb
or
mov
movsb
cmp
es
mov
popa
insb
and
mov
bound
sbb
inc
xor
dec
dec
mov
push
cmc
pop
leave
jmp
mov
or
sbb
or
jmp
sub
mov
xor
xchg
repnz
outsb
dec
cmc
and
int
add
loopne
shrl
clc
es
lahf
cld
adc
mov
scas
out
adc
xor
lock
in
mov
mov
mov
call
jo
int3
sarl
hlt
nop
sbb
adc
and
jo
out
shl
dec
outsl
cld
dec
jmp
pop
inc
les
movsl
mov
xchg
cmp
movsb
clc
inc
push
das
dec
call
or
sbb
mov
dec
popf
adc
push
test
ja
add
dec
add
test
nop
cmp
or
jb
es
mov
addr16
mov
jbe
push
outsb
cltd
ret
jg
xor
mov
scas
mov
shrl
mov
cmp
scas
gs
lea
movsl
pop
loope
test
ror
dec
lea
rorl
sbb
sub
push
test
mov
lds
add
xlat
jno
xlat
or
fmull
mov
cmp
sub
xor
mov
fsubl
bnd
rclb
jae
dec
sbb
aam
hlt
adc
push
dec
adcl
pop
test
int
jo
or
jecxz
mov
or
lret
sarb
jmp
fwait
and
cld
fdivl
je
shlb
in
test
scas
push
fsubrs
inc
shll
pop
xor
inc
cmp
add
and
imul
imul
xchg
lret
or
xor
aas
ret
fucomip
aam
jp
je
push
push
ljmp
gs
mov
jbe
mov
stos
sub
ss
sub
sub
inc
dec
xor
aas
mov
pushf
push
or
mov
js
ret
inc
add
dec
xchg
and
stc
pop
loop
or
mov
les
add
push
sahf
jmp
popa
add
sbb
pop
popa
cmpsb
inc
sbb
shlb
testb
test
testb
mov
jnp
add
inc
jle
mov
add
xlat
call
insb
aas
mov
pop
jge
sbb
jg
mov
movsl
add
pop
cmp
stos
sbb
gs
mov
movb
fstpl
or
jge
out
and
rcr
push
cmp
aad
lret
add
push
pop
test
daa
push
pop
adc
fnstenv
sarb
adc
mov
test
mov
cmc
es
outsl
insb
into
dec
jbe
jmp
int3
das
outsb
cli
jne
inc
pop
mov
ljmp
popa
add
movsbl
xor
sbb
push
repnz
lds
mov
icebp
rorb
ja
ss
fcoml
test
dec
push
sbb
pop
mov
cli
push
xlat
mov
test
mov
add
pushf
and
xor
divl
sub
cld
cmp
and
pop
xchg
push
hlt
or
out
lock
adc
add
xor
push
jns
sbb
jno
push
jl
cmp
enter
and
dec
imul
jnp
mov
fcomip
or
push
les
pop
xchg
or
push
dec
call
and
ret
sub
mov
pusha
dec
xor
push
push
add
inc
sub
jg
lods
dec
ljmp
cwtl
jp
xchg
dec
stc
je
ss
roll
cltd
ds
jae
popf
nop
das
sub
pusha
xchg
scas
enter
xchg
xchg
mov
xchg
sahf
lds
repnz
cmp
mov
mov
cmp
out
mov
inc
add
aad
scas
mov
pushf
jle
enter
push
int
iret
mov
or
pop
fcmovnb
pop
aaa
sbb
mov
jl
inc
cmpb
and
icebp
mov
int
xchg
mov
lret
shll
xor
mov
jl
ss
xor
cmp
imul
inc
les
int3
inc
stos
in
stc
mov
inc
xor
addr16
jg
out
fidivs
dec
idivl
add
xchg
jmp
rcrl
mov
mov
jne
insl
push
sbb
jb
flds
lock
mov
push
sahf
nop
dec
mov
adc
push
jae
mov
cmp
cmp
leave
cmp
fildl
or
cmp
movsl
scas
outsl
add
daa
ret
scas
dec
mov
fdivrs
js
movb
in
cmp
fcomps
jno
stc
push
out
leave
inc
imul
and
gs
js
sbbb
in
int3
xchg
sub
mov
les
sub
pop
into
and
movsb
in
cmp
add
mov
ljmp
mov
mov
mov
data16
mov
in
bnd
mov
fldlg2
cs
rorl
adc
xor
sub
arpl
push
dec
fcomip
leave
dec
xor
jle
ja
sub
enter
sahf
inc
jo
aas
jle
addr16
xchg
mov
push
stc
pushf
aas
dec
inc
jbe
iret
adc
rcll
cmpsb
pushf
xor
sbb
fdivl
xchg
stc
mov
bnd
gs
out
lock
inc
bound
push
mov
sub
sub
push
subb
out
int
push
push
mov
add
push
aaa
xor
into
adc
inc
mov
jnp
popa
out
shl
lods
scas
dec
pop
sbb
aad
jmp
mov
sub
adc
in
mov
xor
jecxz
rcll
cli
cmp
repnz
sahf
js
xchg
xor
inc
xor
in
out
mov
dec
fsubrl
neg
rcpps
jae
jo
mov
mov
fisttpll
cmp
mov
arpl
mov
push
fsubrs
and
mov
adc
jo
xchg
es
sbb
push
or
arpl
jno
push
icebp
pop
push
mov
fildl
test
cmc
pminsw
adc
out
jb
cmp
ljmp
stos
std
pushf
negl
sbb
jecxz
and
rclb
dec
outsl
shrl
and
fs
adc
dec
mov
push
cs
lds
inc
adc
subl
dec
in
mov
or
fsubs
pop
iret
jge
mov
cmc
out
outsb
dec
test
loopne
push
cmpsl
test
repz
mov
shlb
test
mov
add
leave
je
mov
inc
ja
jle
popf
xchg
aad
aas
aas
mov
sbbb
mov
inc
lock
test
jmp
and
dec
and
xor
ljmp
sbb
lods
popf
mov
in
push
jo
dec
in
in
push
and
sbb
ret
sub
jb
or
ljmp
cmc
cmp
fimull
add
mov
leave
mov
pop
inc
add
pop
into
xor
ds
push
push
dec
stc
es
jb
fistpll
dec
lret
sbb
cwtl
cmp
jnp
push
aaa
ficoml
clc
xchg
dec
xlat
outsb
pusha
stos
pushf
sub
pop
cmp
xchg
sub
mov
push
add
push
xlat
mov
neg
mov
cmc
cmp
push
nop
sbb
and
xchg
jnp
or
mov
imul
ljmp
xchg
popa
mov
test
jg
mov
loope
xor
scas
icebp
sub
ret
xchg
cli
test
xchg
mov
push
repnz
jle
rorl
cltd
ss
mov
imull
lret
fiaddl
les
lea
jno
and
cmp
mov
mov
repnz
xchg
rolb
mov
push
inc
stos
addr16
xchg
mov
pop
or
rcr
out
jb
jl,pn
roll
or
in
stos
xchg
jg
xor
fiadds
das
movsb
ja
mov
push
dec
icebp
sub
adc
cmpsl
subb
push
cmp
cli
loopne
sti
sub
loop,pt
inc
xchg
leave
outsb
into
out
into
sbb
sbb
push
cmc
ret
imul
pop
push
add
cmp
mov
sbb
and
cmp
push
ja
fs
stos
xor
jg
jns
add
scas
push
inc
pop
jb
arpl
lret
inc
repnz
aaa
inc
mov
lahf
cwtl
fldl
rorb
jno
add
pushw
add
testl
int
invd
xchg
cmp
add
std
in
and
call
or
mov
cmc
cmp
dec
mov
jle
mov
add
push
cmpb
rcrl
inc
sarb
inc
or
and
push
pop
ja
arpl
test
ret
enter
mov
jecxz
mov
dec
xchg
cmp
lcall
mov
outsb
out
fwait
cmp
jae
leave
xor
mov
lahf
fdivrs
out
arpl
sub
lods
jle
push
push
es
popa
inc
aam
fists
icebp
or
shlb
mov
jo
sub
xor
push
dec
pop
outsb
xchg
jb
out
sub
test
sbb
pop
aaa
je,pt
or
push
das
inc
mov
clc
inc
imul
lds
sbb
xchg
add
inc
jne
insl
test
dec
leave
cmp
lods
mov
stos
scas
das
lods
jmp
shll
outsl
das
jge
pop
mov
subb
push
cmp
pop
les
in
mov
jl
in
out
ftst
jle
loope
les
lret
add
fwait
mov
rorb
add
enter
test
lcall
push
ljmp
cld
movb
push
leave
add
icebp
aam
sbb
std
inc
jbe
repnz
add
in
pop
pop
cmp
mov
mov
mov
jno
notl
lods
int
push
in
inc
cmp
and
outsl
sbb
fcmovnu
cmpsl
cmp
mov
into
pop
scas
mov
bound
pop
and
imul
pop
jbe
jge
gs
add
add
cs
loope
jp
lds
sub
jl
aam
xlat
repnz
fidivs
add
mov
rcrl
insb
sub
movsb
js
das
mov
pop
inc
adc
xchg
or
fnsave
lea
mov
imul
or
jecxz
nop
sbb
pop
dec
push
pop
push
stc
jo
js
push
sub
repz
mov
pop
cmp
xchg
testl
dec
jbe
aas
sub
jo
adc
inc
push
addl
cs
fs
pop
add
cli
jno
test
mov
adc
inc
stos
xchg
int3
add
popf
mov
in
pushfw
cli
aaa
mov
daa
add
push
lock
sub
shrl
cli
arpl
test
mov
or
jne
cmpsb
les
fdivs
or
mov
xor
outsb
mov
frstor
rclb
xchg
insb
insb
imul
dec
jmp
rclb
mov
ja
repnz
and
aam
test
bound
sub
jmp
or
loopne
inc
shl
fucomp
add
cmpsb
and
push
jge
jecxz
pop
xchg
xchg
mov
cltd
loop
fcom
mov
add
scas
loop
sbb
scas
mov
or
int3
pop
pop
out
loop
es
mov
jmp
loop
andb
out
not
cld
cmp
mov
mul
inc
aam
xchg
fmuls
push
inc
add
xchg
jmp
ja
mov
movsl
mov
mov
and
jl
mov
dec
inc
and
sbb
shlb
lahf
das
adc
pop
cmp
push
inc
in
and
jmp
cmp
fldenv
orb
int3
and
sub
sub
gs
jnp
adc
mov
sbb
pop
enter
lcall
iret
mov
xor
data16
or
add
aaa
repz
scas
insl
jp
adc
jmp
hlt
sub
dec
std
in
loopne
or
mov
pop
fidivs
sbb
xchg
cmp
xchg
idivl
push
fiadds
mov
cmc
mov
dec
mov
lock
jecxz
push
mov
in
add
out
cmp
dec
shlb
iret
xor
xchg
enter
repnz
xchg
xchg
ror
mov
mov
sub
lea
xchg
lar
lcall
sbb
mov
push
sahf
jo
fidivs
xor
int
lret
ja
jns
mov
jmp
nop
pusha
dec
inc
sbb
xor
add
test
push
sub
shrd
in
jnp
mov
mov
gs
xchg
mov
inc
lcall
pop
lahf
ret
push
sar
out
pushf
out
pop
stos
shrl
andl
bound
lahf
mov
pop
addb
out
cmpl
in
mov
test
stos
fs
aaa
push
or
out
lea
mov
and
fdivs
mov
enter
jmp
dec
push
ljmp
xchg
push
mov
out
mov
out
testb
jmp
jno
push
xchg
mov
pop
test
fdivl
cmp
xor
push
imul
loop
je
pop
pop
fbstp
jns
test
in
xor
fwait
push
or
xor
jmp
loope
pushf
add
mov
filds
and
dec
cwtl
cmp
mov
sub
mov
or
fmull
dec
fcoms
dec
fsubrl
xchg
push
leave
jnp
push
popf
cmpsb
fs
adc
push
xchg
dec
pop
xor
xlat
sub
sarl
add
out
push
mov
std
jnp
in
ds
sbb
ret
iret
sarb
mov
test
test
xor
inc
imul
fdivrs
or
dec
aaa
notb
pop
xchg
and
mov
fstl
enter
sub
call
cld
sbb
cltd
cmp
jg
mov
enter
lret
ret
sbb
sub
or
inc
mov
dec
ja
inc
sbbb
pop
notb
ret
dec
mov
push
shlb
adc
sbb
mov
inc
mov
mov
inc
inc
pop
push
adc
in
imul
loop
mov
aam
or
mov
jp,pt
jl
loopne
inc
push
sbb
mov
xchg
push
mov
js
pop
pop
jb
xor
testb
push
jge
iret
in
sub
es
movsb
scas
xorb
test
sti
outsb
mov
out
xchg
mov
stos
dec
scas
lock
repnz
cmpsl
xchg
es
out
or
sbb
test
cmpsl
mov
cltd
dec
movsl
nop
adcl
int3
out
cmpsl
mov
fbld
pop
jbe
mov
mov
add
repnz
mov
and
fldenv
scas
push
aam
sahf
mov
mov
inc
pusha
mov
add
push
fldl
cwtl
and
push
fwait
sub
pop
mov
das
add
mov
dec
aaa
push
lahf
pop
pop
or
sub
out
mov
sahf
pusha
push
and
or
imul
dec
popa
insl
sbb
imul
push
loop
inc
fsubrs
sbb
sbb
pop
hlt
xchg
dec
inc
pop
mov
xchg
dec
mov
push
ljmp
jle
pushf
int3
jge
xchg
pop
or
jge
lods
push
sub
stos
fisubl
ds
insl
fucomip
cs
into
pop
sbb
les
or
jle
add
mov
xchg
pop
mov
mov
jmp
fsubrs
std
or
jmp
gs
icebp
cltd
or
fwait
mov
and
shlb
mov
fldcw
in
adc
xor
jno
lock
jb
xchg
mov
cmpsl
in
push
andl
ffree
std
xchg
ret
out
mov
sub
xchg
arpl
fsts
xchg
xor
mov
xchg
lea
in
pop
lock
xchg
scas
push
rorl
inc
out
sbb
pop
push
stos
dec
xchg
mov
mov
inc
fs
xor
out
aas
sbb
enter
push
aam
fistps
and
in
insb
repz
loope
pop
lods
xchg
into
cmp
sub
pop
stos
jnp
mov
test
out
inc
aad
jle
push
add
mov
test
and
and
icebp
shll
pop
push
sbb
ds
adc
push
and
xchg
mov
xor
sub
clc
xor
pop
push
cld
mov
cmp
mov
push
bound
xchg
pop
push
push
push
ret
push
pop
scas
jne
mov
aaa
or
lock
sbb
mov
cmpsb
and
test
mov
sahf
sahf
shrb
inc
add
inc
pop
mov
xchg
aam
fisubrl
cmp
or
enter
call
out
scas
sbb
inc
or
xchg
jp
mov
dec
push
push
insl
adc
push
mov
sahf
push
shlb
stos
add
imul
clc
loopne
jle
and
mov
xor
shlb
sub
adc
stc
int
mov
sub
pushf
mov
pushf
or
and
mov
repz
xor
pop
mov
shlb
sub
lods
and
sbb
xchg
sbb
repz
aam
fiaddl
es
stc
xor
sbb
jno
push
lahf
and
jae
xor
inc
mov
xor
lods
mov
xchg
inc
adcb
or
aas
pop
sub
jp
sahf
out
dec
inc
adc
imul
sbb
adc
pop
xor
das
mov
aaa
fldcw
aad
mov
lahf
sti
push
mov
push
iret
jno
jg
adc
mov
js
cs
sbb
mov
setns
mov
insb
ds
popf
int3
mov
jns
lock
dec
sub
mov
lret
xchg
cli
daa
ret
cmp
lock
aam
lods
xchg
or
sub
cs
or
aam
mov
xchg
sub
ret
repnz
orl
jns
and
mov
add
loop
fisttpl
aaa
mov
or
fdivrs
into
and
cld
les
pop
out
daa
outsl
pop
cmp
fistpl
cmovge
rol
iret
test
mov
clc
das
jmp
mov
mov
dec
cltd
push
add
push
sub
scas
sbb
insl
aad
mov
sbb
in
push
call
cli
pop
cmc
lahf
cld
jecxz
repz
in
xchg
loopne
mov
xor
sub
jne
push
and
lcall
inc
into
inc
sbb
adc
ret
data16
jb
jl
sarb
out
cmp
jmp
xchg
lcall
bound
hlt
inc
push
ljmp
lods
xor
pop
cmp
mov
scas
enter
mov
addb
or
xchg
lahf
mov
mov
push
sub
pop
sub
dec
mov
lcall
fstps
or
push
out
mov
xor
adc
pop
xlat
imul
sub
lahf
jne
or
xchg
imulb
imul
mov
mov
popa
stos
mov
xchg
jnp
jbe
mov
pusha
jge
jecxz
pop
push
outsb
sbb
cltd
movsb
cmp
popa
push
mov
jne
hlt
decb
sbb
sbb
dec
jp
or
jge
in
cwtl
dec
sti
pop
cmp
cld
jp
repz
in
sub
mov
add
dec
lret
outsl
aas
daa
mov
dec
clc
fistpll
ficoms
in
test
inc
pusha
insl
std
xlat
std
push
inc
xor
push
or
mov
ds
fists
aam
sbb
fcompl
les
jl
in
xchg
push
or
sarl
movsl
lock
lret
pop
ja
xor
and
out
push
push
sub
mov
jbe
dec
fcmovnb
add
aas
cmp
jb
js
xorb
imul
mov
ficoml
jne
xor
push
je
pop
inc
pushf
and
pop
cmp
xor
loope
adc
dec
mov
push
lods
es
cmpsl
sbb
push
xchg
lea
lods
sbb
jbe
sub
call
xchg
jecxz
and
test
dec
fsts
inc
sahf
dec
dec
lods
sub
inc
jo
ret
mov
adc
mov
insl
popf
aaa
out
pop
sub
cmp
loop
or
xchg
mov
incb
aam
je
sbb
fwait
xor
aad
inc
jle
xor
xchg
or
xchg
xchg
in
clc
xor
pmulhuw
loopne
outsl
iret
adc
fcompl
loope
sub
cmp
outsl
loop
sbb
dec
push
shll
jmp
test
or
xchg
sbb
lcall
xor
xor
testl
mov
adc
into
mov
or
movsl
fwait
and
sbb
imul
cmc
inc
cmp
or
gs
mov
loope
pop
repnz
neg
cwtl
xlat
sbb
int
mov
jg
sbb
push
mov
test
pop
jnp
aas
xlat
jmp
sub
push
mov
mov
dec
mov
outsb
roll
mov
stos
and
sub
iretw
cmp
jno
sbb
fidivl
add
mov
sbb
push
cmp
test
or
jecxz
cmc
fstpt
jns
cmc
push
into
mov
in
inc
lock
in
or
sahf
movsb
xchg
repz
push
xor
es
mov
add
ret
sti
ffree
pop
sub
xchg
mov
sbb
lods
repz
sbb
test
fisubrs
push
pop
leave
mov
pop
movsb
dec
xor
xchg
pushf
cvtpi2ps
or
lock
stos
ja
test
jle
dec
xor
into
push
fcomip
pop
mov
aaa
lea
sub
sbb
enter
lret
sub
mov
jno
push
xchg
mov
dec
stos
jnp
cmp
dec
cmp
subl
adc
imul
or
aam
xor
jns
jae
imull
jle
jb
jl
mov
sbb
jp
inc
pushf
cmpb
loop
jb
xlat
or
es
test
inc
insl
xor
cmp
mov
mov
push
jns
pusha
lock
push
jmp
pop
xor
mov
push
lods
movsb
ds
sub
or
xchg
ljmp
js
les
ret
cmp
mov
push
into
pop
daa
out
scas
fsubrl
jo
inc
aam
or
push
dec
mov
scas
inc
mov
or
or
loope
xchg
jo
and
pop
jg
cmpl
add
repnz
mov
dec
fimuls
addr16
adc
in
test
inc
cmp
adc
pop
mov
std
mov
push
cld
jg
into
pop
aad
daa
xor
xchg
stc
xchg
cmpsb
stc
push
xlat
jge
sbb
data16
inc
dec
and
dec
push
dec
insl
fwait
sub
xor
loop
notb
inc
aaa
in
pop
es
mov
rclb
popf
stc
or
push
ret
sti
hlt
mov
mov
inc
jne
test
and
xchg
jnp
in
adc
notl
out
or
sbb
cwtl
loopne
pusha
aaa
xchg
fistpl
mov
mov
jg
dec
xorl
push
add
stc
and
cmpsb
inc
icebp
sub
pop
outsb
repnz
arpl
pusha
movb
mov
frstor
mov
sbb
jne
or
dec
pop
inc
pop
test
mov
sub
test
sub
sub
or
cltd
xor
xor
mov
lret
and
mov
sub
cmp
loopne
rorb
ret
sub
or
xchg
push
cmp
jecxz
mov
inc
or
cld
push
push
pop
push
cltd
and
rorb
inc
fcoml
mov
push
dec
xchg
cld
and
frstor
jecxz
dec
dec
fdiv
xor
fs
gs
sub
dec
pop
xchg
add
sub
insl
mov
loop
and
sahf
insl
add
lret
pop
cwtl
hlt
aas
lds
cmp
jno
push
xor
inc
sub
in
popa
mov
aam
jnp
inc
popa
pop
xchg
pushl
ret
dec
mov
dec
bound
aad
int
jb
push
sbb
pushw
outsl
mov
decl
es
mov
sbb
push
ss
stos
fwait
dec
jb
jmp
or
mov
flds
jmp
or
xor
push
in
add
xlat
push
and
jne
out
cmp
xchg
sbb
push
sub
sub
fwait
jecxz
sbb
clc
out
loop
shrb
icebp
jecxz
xchg
jle
mov
adc
iret
pop
xor
mov
push
xchg
inc
cld
data16
add
and
testb
pop
adc
lock
dec
jecxz
add
cmp
mov
rcll
fstps
shll
cmpsl
pop
pop
xor
aad
lds
scas
mov
rcrb
cmpsl
cltd
push
xor
mov
loop
and
inc
mov
jmp
jp
cmpsl
movsl
rorl
inc
mov
leave
cmp
dec
push
lds
dec
add
pop
sub
inc
mov
push
hlt
test
fs
cmp
into
pop
data16
testl
xchg
rcll
mov
adc
inc
lret
adc
add
loope
sub
mov
sub
fs
xor
jo
xor
enter
scas
cmc
push
dec
mov
xchg
and
sub
je
pop
in
and
xchg
and
adc
push
xchg
and
mov
add
repz
decl
mov
or
or
mov
push
xor
or
in
outsb
xchg
mov
jge
aam
adc
fcomps
es
mov
mov
scas
push
mov
xchg
bswap
js
rcr
scas
xchg
loope
jmp
add
leave
dec
inc
jb
inc
cld
add
push
lods
xchg
dec
add
shll
and
mov
cs
mov
popf
mov
dec
mov
lods
cmc
sbbb
fdiv
or
sub
xchg
and
and
stos
imul
fisubrl
cmp
mov
pop
mov
lcall
inc
enter
imul
xor
in
test
shl
dec
mov
fs
cmp
xor
ja
call
int
jmp
mov
mov
xchg
pop
addr16
sarb
mov
push
add
cmc
mov
aaa
pop
mov
cwtl
fisubl
call
popa
int3
addr16
push
mov
jae
jg
rdmsr
cmc
dec
into
pop
xchg
sub
sbbb
adc
fidivrl
lcall
adc
jl
cmp
lods
xlat
jmp
or
shl
push
sub
inc
sbb
pop
mov
push
jns
test
ljmp
bound
ljmp
insl
mov
in
out
push
pop
pop
add
sti
sub
xor
scas
push
xor
jbe
in
in
gs
cmp
jae
rcr
add
shrl
add
loopne
cmp
iret
fcmovb
and
jnp
scas
lea
inc
add
jnp
fistl
int3
icebp
rclb
jp
lret
pop
leave
sub
push
pop
mov
jae
das
scas
mov
sub
lock
dec
ss
inc
pop
dec
das
movsb
dec
push
cmpsl
push
adc
cmp
push
aaa
sub
add
xor
add
xchg
sti
je
push
ja
addr16
jns
dec
jp
rol
sbb
jp
and
jns
mov
pop
dec
mov
xchg
pusha
sub
cmpsb
fwait
data16
mov
mov
xchg
and
lcall
fsubr
mov
mov
inc
sahf
dec
xchg
cld
push
fimuls
es
jb
rcll
lret
sti
iret
mov
repz
cli
sbb
or
popf
enter
enter
popf
xor
mulb
push
int
add
sarb
dec
outsb
cld
sahf
sbb
jno
into
pop
dec
test
push
jecxz
xor
fs
mov
dec
jnp
mov
fsubrs
fadd
imul
pop
sarl
enter
sub
sub
cmp
imul
movsb
xorl
icebp
push
add
stc
loope
cmp
and
jecxz
in
adc
ret
rol
push
mov
notb
xchg
test
inc
je
inc
iret
lea
jns
push
sub
push
in
xor
push
pop
outsl
into
out
mov
add
or
sub
xchg
mov
sub
mov
or
lods
cld
jbe
cs
adc
add
popf
and
notb
dec
jbe
rcr
leave
inc
push
pushf
xchg
clc
pop
mov
sbb
enter
inc
cmp
mov
mov
in
jle
repnz
sarl
add
into
test
sbb
mov
loope
rcrb
mov
pop
int
xchg
and
jne
and
testl
stos
inc
mov
push
add
arpl
in
mov
mov
sbb
push
mov
enter
or
aam
add
jo
clc
push
sbb
mov
xchg
fbld
iret
shrl
lds
mov
mov
jg
xchg
pop
daa
sub
loopne
adc
xchg
jae
popf
mov
mov
pushf
cs
shlb
sbb
sbb
mov
imul
inc
xor
push
mov
std
push
pop
mov
pop
adc
std
mov
movsb
or
push
adc
addb
push
adc
loop
push
lea
mov
insb
aad
xor
int
mov
pushf
jno
and
push
lret
pop
enter
scas
adc
pusha
fwait
mov
mov
fimuls
mov
loope
scas
push
sub
in
movsb
dec
les
push
xor
pop
pop
add
jae
stos
push
sbbb
and
gs
mov
xchg
xor
fstps
adc
psrad
lcall
clc
sub
aas
adcl
movsb
sahf
jnp
dec
stc
fstl
pop
cmpsl
xor
test
mov
mov
dec
movsl
xchg
xor
add
sbb
fidivrl
pusha
nop
adc
and
daa
sbb
cmpsl
aaa
adc
xchg
pop
xor
popw
popf
cmp
add
into
jecxz
je
cld
or
xor
shrb
mov
add
fstpl
out
xlat
sub
popf
mov
cli
mov
in
pop
pop
subl
sub
insb
outsb
jno
ja
rcll
fistps
adc
xor
pop
leave
pushw
dec
jp
sbb
outsb
insb
hlt
out
and
or
fdivp
fists
pop
xor
pop
dec
xlat
mov
adc
sub
icebp
out
xchg
shrl
mov
xchg
adc
xor
jnp
in
sub
mov
sti
push
pop
jnp
repz
mov
testb
pop
xor
and
jp
adc
fldenv
push
dec
adc
push
insl
sub
push
es
into
into
cli
arpl
xor
push
jg
sbb
aam
sub
adc
rol
fucomi
rcrb
add
sbb
inc
jb
sub
rolb
stos
sahf
incb
jne
add
outsb
and
cmp
mov
stos
stos
stos
insl
movsb
clc
loopne
shlb
stos
xchg
jle
popa
fwait
sub
jne
xchg
adc
mov
dec
into
add
leave
test
cmpsl
sbb
jg
mov
push
out
cli
in
pop
add
sbb
in
mov
xchg
fmuls
int
dec
sub
sub
test
es
mov
fnstsw
in
fisubs
or
push
dec
xor
popa
mov
or
jno
mov
sub
jge
in
int
fcomps
shll
lcall
jecxz
push
xchg
out
pop
or
mov
ret
sbb
add
or
jl
icebp
and
pop
pop
dec
or
push
in
cltd
scas
sbb
inc
pushf
xchg
add
out
out
hlt
std
data16
lods
mov
mov
xchg
inc
jle
mov
or
into
pop
insb
xchg
jmp
push
or
sub
lods
cmp
push
movsb
and
inc
pop
or
incb
xchg
faddl
les
adc
leave
lds
jae
jle
and
enter
fiadds
push
popf
dec
or
xor
push
fbld
test
xor
jmp
mov
sahf
into
adc
pop
sbb
jno
test
lea
push
inc
test
inc
iret
or
aas
repnz
shl
fdivr
mov
jne
ret
jge
sbb
inc
bound
add
mov
mov
pop
ja
mov
cmp
lcall
push
jge
and
cld
mov
pop
out
scas
inc
cmpsb
and
mov
les
mov
add
dec
mov
gs
mov
sbb
scas
mov
xor
xchg
jb
not
add
test
roll
cltd
fsubr
data16
and
push
aas
lods
dec
xchg
pop
sub
and
stos
fmuls
scas
sub
sub
popa
arpl
pop
add
pop
mov
in
inc
rorb
xor
fsts
fsubl
or
stos
iret
sbb
adc
mov
mov
sbb
dec
cmp
call
add
lock
repnz
inc
or
cmp
lods
mov
or
sub
movsl
mov
repz
mov
out
sub
movsl
dec
xor
add
int3
out
adc
cmpsb
fisttpl
and
xor
adc
call
fldcw
inc
ficoms
repz
rorb
sbb
mov
jp
cwtl
mov
lea
sbb
repnz
mov
ret
pushf
stc
hlt
sub
dec
popa
xchg
fstl
adc
leave
xchg
ret
sbb
jle
rcrl
pop
lret
lods
jge
out
jne
jae
pop
leave
jne
imul
mov
xchg
imul
insl
dec
and
dec
pop
rcrl
inc
dec
in
int3
ret
div
bound
insl
pop
push
add
mov
cmpsb
pop
xchg
cld
jg
outsb
int
dec
aaa
movsl
and
xor
mov
add
or
push
test
dec
ret
adc
pushf
pushl
inc
popf
in
int3
jecxz
int3
or
fistps
mov
xlat
sbb
pop
cltd
pop
clc
out
aad
test
in
arpl
xor
cmpl
push
bound
adc
xchg
lret
push
dec
fsubr
mov
push
fldt
push
xor
test
pusha
inc
fsubs
cmpb
mov
scas
mov
xor
dec
jae
inc
cmp
inc
pushf
call
dec
pop
sbb
pusha
xlat
sbb
mov
cli
fcmovnb
cmp
es
xlat
jae
mov
loop
pop
test
pop
xor
pop
les
or
es
sar
outsb
test
popf
filds
push
jl
cmp
adc
ss
aas
test
jno
dec
jns
int
hlt
mov
cmp
cmpsl
mov
jnp
push
in
inc
mov
imul
ljmp
or
ret
mov
lahf
stc
movsb
shlb
push
mov
add
cli
stos
inc
ret
jecxz
cmp
xchg
pop
cmp
inc
stos
dec
pop
incl
cs
pushf
and
nop
jg
sbb
insl
push
out
and
notl
xchg
mov
cmp
pop
inc
add
inc
aaa
les
push
rcrl
rorl
cli
pusha
jecxz
add
das
loopne
scas
loopne
sub
js
push
xorb
scas
pop
mov
gs
xchg
fsubl
orb
mov
fnstsw
icebp
mov
mov
enter
sub
flds
lea
pop
jae,pt
jecxz
mov
stos
sahf
xchg
out
popa
cmpsb
or
push
cld
pop
adc
jge
fnsave
push
rorb
popa
mov
jecxz
mov
fcoml
inc
cmpsb
sbb
insl
and
scas
fisubrs
mov
jmp
cmp
mov
adc
inc
gs
add
push
ror
mov
and
pop
dec
pop
enter
lahf
xor
mov
ja
rolb
cli
and
into
pop
cmp
or
outsb
mov
xchg
push
mov
insl
sbb
xor
and
pushf
xchg
inc
aas
or
adc
out
fadds
in
pop
xor
mov
out
cwtl
jmp
cmp
cmp
jecxz
and
and
sub
out
shlb
and
shrb
cmp
insl
adc
pusha
call
addb
mov
arpl
scas
repz
jb
push
loope
sub
add
xchg
rcll
out
pop
push
in
rol
pop
pop
sbb
xchg
add
rorb
out
mov
mov
push
lahf
jns
mov
pop
loopne
sahf
insb
push
hlt
sub
mov
add
xor
sub
mov
hlt
js
shll
ss
pushf
add
dec
cmp
xchg
push
jo
cli
lret
and
push
xor
dec
arpl
lods
arpl
sar
and
mov
out
fprem
das
sbb
add
ja
in
negl
data16
shll
out
sahf
or
shll
and
sbb
sub
fildl
ljmp
fs
popf
in
arpl
pop
cwtl
xchg
sar
push
movsb
into
mov
in
inc
mov
xchg
mov
jnp
mov
movsl
push
and
mov
out
sbbl
push
mov
out
nop
mov
cmp
add
hlt
daa
xchg
and
fs
lret
inc
add
leave
jae
in
leave
fcompp
and
cmc
add
mov
inc
adc
mov
vmread
xor
xchg
dec
mov
push
pop
push
cmc
mov
and
jbe
sbb
outsl
push
jg
ss
or
scas
push
xchg
mov
test
push
jge
repnz
jmp
hlt
xchg
push
out
cs
cmp
mov
sahf
xchg
lret
enter
into
andb
test
pusha
jno
sti
iret
cli
xor
jmp
dec
fidivrs
or
insb
mov
dec
push
fwait
lods
mov
je
in
jecxz
sbb
and
and
mov
add
xchg
add
sarb
arpl
and
aaa
pop
in
jno
mov
and
inc
jp
fucomip
cmp
cmc
int3
out
call
outsl
xlat
push
sub
sub
leave
lret
sbb
repz
mov
lcall
cmp
je
lret
rorb
inc
sbb
xchg
pop
jmp
cmp
dec
stos
je
es
jno
pop
jns
insl
lret
dec
rcr
in
fcmovne
lea
xor
adc
xchg
push
ja
stc
push
add
mov
rol
mov
adc
sub
shll
loop
in
loope
fldt
fisubl
js
pop
xchg
out
fcoms
xchg
ret
repnz
out
push
jo
test
jno
or
mov
cmp
test
mov
into
push
aaa
movsl
lret
mov
xchg
sbb
test
pop
pusha
push
cmpsb
mov
cmc
or
jle
cltd
fwait
js
mov
das
mov
ljmp
sti
mov
scas
ja
jle
sbb
lahf
lahf
jnp
cwtl
fidivl
je
cmp
mov
fbld
in
cmc
pop
roll
mov
aaa
jg
fwait
jne
iret
iret
add
add
sub
fs
fadds
out
stos
dec
rolb
bound
enter
and
and
mov
lods
mov
xor
addl
sub
sbb
out
popa
or
inc
mov
les
pop
sbb
jae
pop
les
fwait
icebp
cmp
lret
xor
mov
xchg
pop
sub
mov
lcall
outsl
adc
xchg
xor
ds
and
popf
or
loope
lahf
sbb
xchg
mov
pop
call
lret
js
shll
cmpsb
bound
faddl
ficoml
xor
sahf
xchg
mov
out
imul
or
fstpl
jbe
mov
test
andl
push
inc
dec
xor
cmp
xchg
dec
jmp
sbb
inc
stos
cmp
std
das
lret
mov
testb
leave
fwait
jo
or
les
aam
bound
pushf
test
xor
inc
add
addl
add
ja
mov
push
pop
orl
jp
andl
sbbl
lahf
jle
out
aad
xor
out
xorb
nop
iret
sbb
outsb
adc
and
inc
cmp
xchg
dec
in
jecxz
xchg
mov
sbb
das
xchg
or
adc
sbb
imul
js
popf
arpl
sbb
stos
cmp
inc
inc
mov
sub
out
fisubrl
out
cmp
xor
push
inc
loope
sbb
sbb
loopne
dec
or
jbe
cmp
pop
and
and
jmp
into
in
dec
push
and
sub
fwait
mov
fs
aaa
sub
and
insb
nop
movsb
loope
pop
sub
fwait
leave
in
dec
or
cmc
daa
mov
shr
cs
lcall
xchg
mov
lret
test
std
fistpl
outsl
jae
sub
dec
xchg
adc
mov
in
sub
cmp
mov
sbb
adc
insb
jle
adc
ror
sti
push
notl
inc
aaa
inc
rorb
cmp
mov
popf
aam
pop
into
insb
jbe
cmp
mov
testl
inc
xor
xlat
lea
push
fwait
sbb
pop
lret
add
ljmp
mov
cltd
pop
notl
mov
jl
mov
int3
xchg
adc
fs
inc
push
xchg
push
pop
sbb
scas
mov
push
aad
add
mov
cld
sub
mov
mov
push
movb
sub
fcmovb
xchg
out
cmp
out
divl
outsl
or
push
enter
sbb
pop
mov
xchg
fcmovnbe
cmp
xor
aas
les
dec
and
ds
mov
aaa
cmp
pop
sbb
das
push
inc
les
std
rclb
and
scas
push
movsl
jb
adcl
inc
jmp
sarb
clc
jmp
imul
mov
jp
push
mov
stos
fcmovnbe
repnz
pop
popa
fwait
mov
dec
out
push
aad
imul
jnp
int3
adc
ja
popa
mov
jo
mov
data16
xor
jmp
jg
inc
push
leave
pop
adc
jle
and
pop
and
rolb
xor
mov
xor
jo
in
imul
mov
cs
pop
filds
pop
push
xchg
test
ja
sub
scas
push
ja
push
das
inc
xor
push
setne
cmc
pop
mov
or
lods
imul
inc
mov
lds
cmp
movsb
mov
push
cli
in
mov
xor
mov
add
cmp
repz
jle
jb
mov
repz
sbb
or
rcll
icebp
inc
jg
sahf
mov
sbb
dec
stc
cwtl
fstpt
stos
mov
hlt
int3
lds
aaa
andb
ds
mov
lret
and
sub
push
push
mov
fmull
add
cmp
adc
sbb
or
js
sbb
sbb
daa
inc
popa
mov
dec
pop
cmp
ja
bnd
repz
adc
ret
push
push
jbe
and
sahf
mov
test
fdivrp
movsl
xchg
je
scas
rclb
sbb
sub
ljmp
add
arpl
sbb
mov
aam
jl
ja
mov
or
xchg
ret
cmpsb
and
idiv
or
aas
jmp
pop
xlat
sbbb
mov
mov
xlat
stos
adc
cmp
call
lret
push
in
push
and
xchg
add
and
out
push
fs
cmp
inc
insb
je
cld
dec
lods
repz
movups
xor
jo
push
mov
mov
adc
pop
sarl
pop
fldl
std
xchg
add
sbbl
dec
add
sbb
addr16
dec
clc
repz
ss
lahf
pop
adc
cmp
or
shl
jae
inc
in
fstpl
inc
andb
xchg
movsb
jl
add
sub
xorl
pusha
jae
out
xchg
mov
pop
ret
push
sti
stos
cwtl
std
push
and
adc
xchg
add
push
or
cli
xor
addl
and
push
data16
imul
xchg
pop
ret
xchg
int3
lcall
mov
in
push
clc
push
movsb
iret
fst
cld
push
lods
jnp
add
push
je
add
pop
or
cmpsl
and
or
adc
jmp
loop
pushf
pop
dec
fs
add
rol
xchg
incb
or
xor
mov
mov
inc
and
inc
adc
mov
pop
cmc
jns
flds
sbb
shr
push
push
xchg
pop
insb
xor
mov
out
mov
xchg
or
fisttps
jo
mov
dec
jno
in
sub
mov
push
fistl
xchg
xchg
cmp
mov
rclb
jecxz
adc
ficomps
pop
cltd
jecxz
mov
jp
rcrb
xchg
stos
addr16
or
rorl
dec
xchg
int3
mov
sbb
cmpsl
adc
pop
jns
jmp
sub
lods
dec
and
pop
push
cmp
and
lahf
subl
pusha
xchg
dec
mov
jns
pop
imul
or
loopne
enter
das
inc
fsubs
mov
repz
fs
push
into
and
pop
sbb
xchg
mov
pop
xchg
xor
pop
adc
iret
repnz
cmpsl
mov
xlat
push
lods
xlat
mov
or
jb,pt
push
fdivs
jmp
xchg
or
es
pop
jle
outsb
xchg
loope
cmp
pop
int
mov
je
xlat
rorb
repnz
jno
mov
xor
pop
mov
adc
mov
lock
cmp
mov
mov
sbb
fimuls
arpl
push
dec
inc
or
out
into
pop
bound
mov
mov
outsb
lods
mov
push
jg
xlat
add
imul
aam
hlt
gs
ds
daa
push
jb
jle
push
pop
sbb
xchg
or
jl
adc
sbb
outsl
insl
and
or
outsb
aaa
jl
mov
sbb
out
pop
cmp
cmp
push
movsb
orb
ds
inc
loope
pop
outsb
popa
mov
adc
push
mov
es
sub
jp
in
cmp
ja
xchg
fs
dec
idiv
std
pop
xchg
jnp
jnp
test
jecxz
cld
lcall
dec
aad
push
sti
add
or
cmpsb
mulb
clc
rep
jle
es
mov
sbb
jmp
rorl
sub
sub
mov
leave
test
shrb
jl
or
mov
pop
out
mov
popf
push
bound
pushf
and
ss
iret
movsl
into
add
fsubrp
jl
or
aas
pusha
pop
adc
in
int3
xor
xchg
or
inc
jns
mov
pushf
lods
mov
test
and
adcl
cli
push
and
sub
sbb
lcall
fbstp
add
lea
or
mov
xorl
repnz
lods
cmp
pusha
mov
xor
pushf
mov
pop
test
cmp
lret
cmpsb
pop
out
mov
adc
shr
dec
iret
cltd
ret
push
jns
movsl
ficomps
dec
pop
leave
push
lock
xchg
in
out
mov
sub
cmp
or
inc
xchg
xor
stos
fistps
das
jg
jo
aaa
lods
push
test
gs
test
jno
push
pusha
cld
mov
jge
imul
xor
push
xchg
and
or
pop
dec
mov
sbb
rcr
jmp
insl
inc
xchg
movsl
push
mov
mov
lock
fidivl
push
push
jp
add
cmp
sub
cs
mov
fimuls
rorl
jg
shll
push
test
rcll
test
dec
pop
and
scas
xor
xchg
mov
pop
push
mov
mov
cmc
cli
test
mov
dec
les
insb
rcll
push
sub
sub
lahf
scas
movsb
test
inc
outsb
cld
adc
mov
cbtw
sub
rol
dec
jo
stos
ljmp
pop
daa
fiadds
in
mov
mov
mov
jle
mov
scas
test
mov
test
cmp
cmc
test
out
or
jmp
repz
jp
push
aas
subb
xchg
push
aad
add
imul
gs
cmpsb
xor
int3
mov
pop
cwtl
cmp
data16
rorl
cmpsl
nop
inc
push
lock
arpl
lock
repz
aaa
ds
jge
inc
jns
cmp
cmp
mov
fsincos
mov
aad
aad
js
push
dec
andl
in
push
pop
jge
sub
mov
ljmp
stos
xor
cmp
push
outsl
test
movsb
inc
mov
mov
sahf
jno
lods
in
or
fwait
ret
push
jmp
les
sbb
mov
stc
std
nop
outsb
xor
jmp
arpl
xchg
in
ret
lods
mov
mov
fs
mov
and
aam
xlat
push
out
add
inc
mov
pop
loopne
js
mov
enter
xchg
popf
push
fcmovnb
aaa
outsl
idivb
scas
mov
sbb
xor
inc
pop
xchg
imul
or
shll
adc
jge
movb
jp
inc
adc
repz
fsub
sub
adc
pusha
and
addr16
stc
hlt
mov
or
pop
cmp
add
sub
loope
lcall
cmpsl
mov
mov
jns
xor
cli
xchg
je
and
mov
inc
xchg
sahf
sti
mov
outsb
xor
pusha
xorl
pop
bound
adc
imul
or
cli
ror
or
dec
lcall
rorb
sbb
push
in
pop
adc
movsl
cmp
in
iret
sub
mov
xor
mov
rorl
imul
add
test
xchg
xor
cmp
sub
je
cmpsl
sub
push
mov
xchg
sub
xchg
inc
shl
pop
dec
in
inc
ss
hlt
xchg
mov
daa
mov
jns
ja
mov
gs
cmp
mov
or
int3
arpl
out
loopne
rcr
ret
lock
jns
into
call
push
jge
adc
mov
mov
inc
pushf
fbstp
cld
xor
xor
out
ljmp
inc
cwtl
pop
push
push
clc
icebp
add
fdivs
push
push
fwait
andb
mov
cli
jl
push
pop
shr
hlt
cmp
and
jno
mov
dec
out
pop
out
mov
je
mov
sub
imul
into
dec
xchg
push
daa
int3
shll
sub
dec
enter
pusha
add
test
add
leave
push
dec
sub
ljmp
outsl
mov
enter
xchg
out
pop
clc
repnz
iret
cmp
and
test
sti
xchg
fistl
pushf
xor
adc
mov
popf
and
addr16
jno
lsl
testb
push
mov
andl
or
mov
cmc
outsb
lea
push
cmp
sub
mov
outsb
jae
mov
ds
xor
adc
arpl
inc
push
pshufw
push
mov
dec
xorb
cltd
int
adc
loope
loop
pop
push
push
mov
fldl
jg
out
pop
xor
mov
cmp
pop
cmpsl
pop
stc
jecxz
adc
pushf
sbb
xchg
cmc
ljmp
mov
mov
mov
repnz
test
daa
adc
cmova
aam
jmp
aam
inc
addl
outsl
fiadds
sbb
jb
adc
inc
std
or
add
and
loope
jmp
loopne
divb
xorb
xor
movsb
or
xchg
fsts
hlt
inc
jl
in
xchg
lahf
outsb
add
xchg
lea
pop
adc
pop
xor
lea
jnp
das
dec
sbb
pop
lods
or
test
rolb
insb
xchg
jns
insl
incb
sub
fcoms
testl
mov
sub
push
mov
daa
dec
addr16
fnstenv
add
nop
dec
ja
mov
es
mov
jge
cmpsb
sti
sub
clc
movsb
or
add
inc
scas
xchg
xor
push
femms
jmp
inc
rorb
or
add
mov
xchg
out
addl
aas
ja
inc
mov
nop
sub
pop
shl
mov
mov
fsubr
xchg
sti
shrl
mov
leave
mov
stos
jns
gs
mov
cmp
in
fstp
or
bound
and
mov
add
jb
mov
push
push
repnz
inc
mov
adc
mov
addl
sub
enter
pop
das
ja
fwait
lods
cmpsb
sub
dec
cmc
bound
dec
cmp
clc
pop
xchg
or
or
jge
scas
mov
mov
sbb
in
jl
xor
push
dec
inc
and
lods
jns
nop
dec
jmp
sbb
lods
inc
and
maxps
sbb
xchg
push
and
mov
jp
xchg
mov
in
add
jp
gs
mov
jmp
scas
std
jle
mov
xchg
pop
sahf
mov
mov
stos
repz
sub
pop
mov
imul
shl
notb
sbb
cmp
roll
xor
xchg
mov
sub
mov
test
pushf
cltd
cmpsl
dec
sbb
sbb
inc
aas
mov
xlat
imul
cmp
gs
fdivl
jb
lahf
lock
test
sub
xchg
lmsw
mov
sub
stc
push
push
push
push
mov
imul
sub
and
inc
idivl
jle
add
jno
fsub
clc
sbb
add
lock
or
fwait
xor
jmp
scas
xchg
out
outsb
adc
ljmp
insb
cld
cmp
test
mov
xchg
inc
dec
sub
dec
cmp
mov
mov
mov
addl
cmp
and
or
in
ja
test
shrl
jmp
mov
jmp
addr16
jae
mov
mov
pop
dec
push
xchg
ss
andb
cltd
fstpl
or
into
lcall
out
aad
xor
testl
addr16
and
dec
xchg
cmc
sbb
stos
mov
jnp
imull
inc
imul
jmp
pushf
bnd
pop
in
ss
mov
dec
xor
inc
push
sbb
outsb
int3
imul
ljmp
jmp
add
or
nop
adcb
popf
xchg
ja
cltd
mov
mov
add
inc
dec
pop
xor
inc
lods
dec
inc
cmp
push
cli
jae
cmp
fcoml
scas
mov
add
arpl
inc
add
les
ret
xchg
mov
sub
testb
mov
xchg
lahf
shll
pop
push
pop
scas
xor
sub
xchg
loopne
mov
jmp
cmp
dec
xlat
mov
data16
mov
sbb
mov
loop
push
push
shlb
dec
enter
push
aas
dec
xor
mov
das
fisttpll
pop
and
inc
daa
dec
aas
sahf
lock
scas
outsb
mov
inc
adc
xor
cmpsl
jae
dec
add
push
dec
push
fwait
test
test
into
add
cmp
and
js
dec
mov
push
sub
mov
fidivrs
xchg
jb
lock
fmul
sub
std
rcr
jmp
sub
adc
call
lcall
out
pop
cmp
pushf
out
jne
inc
int
into
dec
loopne
add
mov
jge
scas
shr
xchg
adc
test
leave
inc
jle
scas
jp
dec
outsb
in
ret
mov
fidivs
fdivrl
cmp
jno
pop
mov
mov
lds
aad
pop
xchg
jnp
movsl
xchg
cmp
adc
shr
push
es
lret
jl
fs
jg
add
mov
mov
mov
adc
push
jnp
mov
int
mov
mov
stos
mov
dec
ljmp
add
cmc
in
mov
bound
nop
inc
add
shrl
js
shl
cmp
push
test
fstps
in
ja
int3
repz
mov
jb
test
icebp
imul
std
add
inc
cmp
jne
fstps
and
pop
xchg
out
out
jo
or
lock
push
inc
into
cmp
push
sub
mov
xchg
cmc
std
mov
mov
loope
jo
lods
jp
lock
xchg
cld
mov
movsl
outsb
int
xchg
cmp
push
loop
mov
arpl
fwait
daa
or
xor
lea
or
test
jmp
adc
out
je
sub
dec
cmp
and
outsl
gs
repnz
dec
scas
xchg
jge
pop
add
cmp
aas
xlat
int
xor
fsubrl
decb
xchg
or
sbb
add
rclb
jg
pop
or
fcoml
rorl
and
cmp
mov
mov
cmc
mov
movsl
fsubs
out
insb
cltd
jne
ss
roll
mov
push
jns
mov
into
mov
lret
or
xor
arpl
push
and
or
daa
pushf
insb
push
jns
and
cmc
and
vxorpd
xchg
ljmp
and
aas
test
out
test
mov
jb
in
scas
adc
adc
inc
inc
fsub
cmpsb
and
shlb
xor
dec
inc
lods
adc
ljmp
push
add
cmp
test
sbb
xor
and
out
inc
dec
mov
flds
mov
sub
mov
mov
jmp
hlt
xchg
in
sub
sbb
add
std
sbb
cmp
dec
mov
mov
pop
cmp
sub
push
std
mov
jl
test
cmpsl
cmpsl
stc
arpl
cmp
fcomps
fisubrs
or
or
lret
das
mov
pop
adc
dec
loope
add
pop
sub
int3
inc
xor
test
loope
xchg
xchg
repz
xor
jb
push
test
outsb
jb
push
mov
lcall
rcrb
push
repz
dec
mov
mov
push
cmp
mov
repnz
adc
fisttpll
test
or
data16
loope
ret
mov
je
pushf
int
movsl
cs
cmp
fsubrs
sub
test
fnstsw
jno
popf
inc
cmp
jg
adc
bound
mov
pop
push
sbb
xchg
sbb
insl
lods
push
push
iret
mov
mov
sbbb
in
mov
fmuls
push
jmp
cmc
iret
dec
dec
xchg
cmp
out
lret
dec
adc
cmpsb
xchg
sbb
push
mov
sub
mov
xchg
push
fimuls
push
js
aaa
int3
sub
scas
jmp
pop
sbb
push
fldenv
ljmp
dec
mov
pop
inc
stos
mov
mov
sbb
or
adc
push
icebp
lea
rcl
inc
sub
mov
std
mov
repz
test
data16
add
mulb
mov
jg
add
add
cmpb
mov
imulb
in
and
outsl
mov
add
xor
dec
xchg
pop
adc
cmp
outsb
push
fistpll
jecxz
das
dec
aas
hlt
nop
inc
inc
push
jp
jg
cwtl
jp
idivb
data16
sbb
out
jns
sahf
xchg
jl
add
aad
mov
mov
inc
jo
ss
dec
mov
fsub
aaa
call
imul
hlt
push
xchg
mov
inc
push
push
pop
out
adc
add
out
std
push
pop
or
cmpsl
popf
bound
jne
inc
xor
loopne
mov
lods
cmpsb
cmc
mov
das
cmp
sub
xor
outsl
lds
push
pushf
mov
dec
shrl
loopne
jge
ret
xlat
jl
jno
movsb
pop
icebp
lret
pop
mov
xchg
cmp
leave
in
lock
mov
jb
cltd
jae
push
mov
cmpsl
aad
inc
incl
clc
add
dec
shrl
loop
notb
sbb
mov
and
push
adc
insb
inc
push
xor
sbbl
loop
shll
orb
and
mov
aad
fs
sarl
mov
inc
loopne
cmp
inc
stos
stos
ljmp
xchg
xchg
idivb
fisubrl
cli
mov
dec
or
push
xchg
adc
ret
xchg
test
sub
loope
jmp
xchg
add
jb
in
rcrl
roll
daa
pop
lock
cltd
add
jb
jl
mov
or
fisubrs
xchg
jae
dec
loop
test
jno
mov
fiaddl
scas
push
inc
push
mov
gs
push
adc
aaa
xchg
dec
in
jecxz
push
imul
into
lahf
daa
xchg
je
push
push
jle
dec
xchg
pusha
jb
aam
out
loope
push
and
bound
enter
adc
imul
and
movsl
inc
gs
xchg
xchg
mov
mov
cmp
push
xchg
adc
test
mov
rorb
dec
shrl
jge
sarl
fwait
add
lahf
mov
sti
repnz
icebp
mov
xlat
add
ret
dec
cwtl
dec
mov
jmp
lret
nop
inc
xor
push
jmp
inc
iret
shll
iret
mov
pop
jge
popf
push
loop
pushf
xchg
loope
lock
push
mov
hlt
clc
jno
mov
loop
arpl
xor
mov
lds
enter
xchg
addr16
mull
cs
xchg
lock
aad
push
pavgb
mov
adcb
call
shrb
test
jae
mov
ds
stos
lahf
arpl
out
fcoms
roll
out
leave
rol
gs
sbb
pop
xor
adc
push
cmp
xchg
jl
jle
in
or
sahf
jne
fwait
out
push
subl
js
inc
xchg
pusha
into
mov
out
das
out
xchg
cmp
jp
cli
pop
lds
cmp
add
push
dec
stos
dec
jle
ds
jecxz
iret
mov
outsb
setnp
mov
inc
enter
popf
ss
jl
daa
adc
pop
and
jmp
dec
cmp
inc
movsl
cmp
enter
mov
out
insb
ljmp
or
icebp
xor
sub
insl
jmp
and
xchg
adc
lea
xchg
cmc
jnp
rep
or
rcrb
jmp
punpckhbw
out
pop
insb
push
mov
loope
jb
and
add
or
stos
pop
sar
in
dec
scas
ds
adc
jb
add
mov
loopne
mov
add
ret
movsl
lds
jb
test
popf
mov
jl
push
adc
sub
push
inc
mov
adc
or
mov
cmpsl
repz
jbe
add
das
cmp
ret
in
je
sbb
inc
addl
fiadds
flds
into
in
mov
leave
dec
out
sub
mov
inc
pop
sub
int
inc
loop
cltd
popa
insl
outsl
cmc
and
mov
mov
or
xchg
imul
push
cld
push
ja
lret
inc
in
iret
stc
adc
icebp
pop
imul
dec
xchg
sub
ret
pusha
out
push
sbb
insl
ficomps
and
cmp
mov
jge
cmp
bound
out
inc
push
mov
push
nop
xchg
jl
movsl
into
jecxz
mov
inc
movb
popa
leave
shrl
test
dec
lret
inc
shlb
sahf
jb
repz
imul
sub
dec
xlat
das
mov
or
fsubl
adc
dec
pop
icebp
divl
dec
mov
mov
arpl
loop
addl
test
addr16
hlt
sti
sbb
cmpb
adc
xchg
adc
sub
xor
js
mov
into
mov
cmpsb
adcl
rol
xchg
pop
pop
push
add
fidivl
nop
dec
shlb
or
jl
hlt
jae
dec
std
mov
and
fs
jp
sub
loopne
loopne
sub
nop
out
pop
mov
cmp
cmc
sbb
cs
and
xchg
fidivrl
jns
addr16
sbb
sbb
push
inc
shlb
adcb
xor
icebp
pop
out
ret
in
push
es
mov
sbb
mov
xchg
add
pop
or
and
adc
rcrb
ret
cmpsb
scas
pop
push
repnz
cmp
add
outsb
inc
push
repnz
lcall
xchg
nop
push
dec
sbb
mov
std
pop
mov
mov
sbb
mov
sub
or
xor
sar
aas
lahf
push
fisttps
dec
xlat
dec
pop
outsl
popf
push
cmp
pop
add
shll
mov
pop
mov
out
dec
mov
xchg
mov
add
addr16
sbb
push
les
sub
repnz
negl
ds
ss
jmp
imul
xchg
in
and
xchg
inc
cmpsl
mov
test
add
jle
jnp
mov
loopne
fs
fdivl
push
fs
cmpsb
sbbl
leave
imul
inc
pop
or
idiv
outsb
test
xor
push
mov
inc
out
or
and
scas
inc
bound
enter
jmp
roll
call
nop
add
mov
ret
hlt
dec
cld
or
int
rolb
bound
push
sbb
stc
jb
out
mov
cmp
cs
mov
inc
mov
pop
add
aam
pop
pop
cmpsl
xchg
fadds
mul
lcall
push
sub
out
jo
lock
hlt
sbb
sti
mov
das
mov
adc
jecxz
add
outsl
jg
adc
dec
fistps
sub
mov
cmpsl
call
mov
add
shll
lods
sub
bound
mov
push
add
imul
iret
cmp
or
pop
cmp
stos
pop
loopne
dec
leave
jp
imull
sub
cltd
cs
stos
and
push
stos
jb
js
or
jae
fwait
adc
fcoms
fs
add
xchg
in
pop
adc
ljmp
inc
aad
fistpll
xorl
lods
and
in
cltd
adc
js
xor
push
stos
jne
pop
scas
in
jae
imul
fsubs
fnsave
pop
dec
imul
mov
jae
lahf
inc
stos
out
cmpsl
lahf
dec
or
cmp
ficoms
mov
jecxz
adc
and
add
sub
fwait
push
dec
test
add
in
push
sub
ret
pop
mov
jl
pop
aaa
and
sbb
addr16
nop
xor
ss
lock
xchg
push
shlb
sahf
pop
or
std
popl
xlat
fnsave
mov
xchg
cli
mov
mov
mov
fldcw
mov
outsb
movsb
lcall
ja
insb
mov
call
mov
lock
shrl
dec
push
dec
mov
movsl
stc
xor
mov
sub
test
aad
sti
loope
xor
popf
xchg
xchg
xor
pop
sbb
cwtl
push
pusha
inc
test
js
and
jp
sbb
and
test
jae
sbb
scas
dec
shll
xor
mov
inc
sub
add
mov
and
inc
inc
sbb
or
push
and
aas
pusha
cmp
movsb
loop
and
adc
mov
test
stc
or
out
sub
push
mov
or
int
sbb
imulb
lods
nop
or
fldcw
imulb
sbbl
cmp
inc
lea
insl
std
pushf
mov
mulb
jg
fidivs
pop
hlt
xchg
xchg
clc
cmp
pop
lds
cmp
mov
aaa
call
pop
notb
pop
mov
push
in
adc
jno
fs
jne
gs
into
nop
xor
addr16
cmp
hlt
inc
imul
fnstcw
hlt
addl
sbb
leave
stos
jl
jbe
arpl
lock
mov
in
enter
movsb
loop
incl
stc
scas
xchg
scas
stc
sbb
orb
loope
rolb
mov
xor
dec
mov
add
mov
inc
push
dec
js
cmpsl
shll
sub
or
shll
mov
ror
lahf
xor
or
or
push
lret
fdivrl
loope
movsl
popf
imul
add
sub
mov
dec
sbb
ljmp
movsb
and
mov
sub
jp
and
rcrb
dec
cmp
inc
sbb
aas
fisubl
jnp
es
rcr
xchg
out
cmc
loop
fs
and
cmp
inc
sub
rclb
aaa
cs
push
loop
outsl
or
add
fisubs
movsl
repnz
into
adc
xor
or
aam
or
and
lcall
hlt
test
dec
push
out
inc
mov
mov
sbb
jno
xor
jnp
les
xor
adc
xchg
xchg
jge
sbb
inc
idivl
adc
rolb
lret
fnstcw
push
stos
aad
imul
pop
imul
pop
js
add
xor
inc
call
xchg
aas
cmp
pop
ror
loope
in
xchg
and
rclb
xor
dec
leave
adc
mov
je
push
or
fistpl
fsubs
or
loopne
les
ja
int3
jnp
stc
mov
push
add
xchg
mov
sub
outsl
sbb
mov
addr16
and
xchg
jnp
or
aam
jge
mov
xor
mov
jp
mov
das
ret
arpl
adc
lds
adc
outsb
pop
outsl
insl
push
fwait
mov
movsb
cmpsb
push
sub
mov
lea
mov
stos
adc
popf
dec
insb
and
xor
sub
and
pop
sub
push
add
mov
or
or
cmp
or
imul
decb
sbb
jno
int3
add
jl
stc
loope
xor
mov
dec
and
out
cmp
sub
aam
clc
imul
in
nop
mov
sbb
cli
sar
in
add
mov
cs
loop
fwait
sub
fidivl
ss
cmp
dec
movsl
out
imul
push
es
inc
in
adc
inc
sub
das
mov
fsub
popa
pop
dec
xchg
test
add
lret
pop
pop
movsl
sahf
pop
or
jle
sub
xchg
xchg
cwtl
fsub
shll
jns
jno
mov
ja
xor
and
fldenv
pop
test
mov
sbb
cwtl
adc
mov
lods
sbb
push
notb
sub
mov
push
ret
add
rorl
nop
or
pusha
xor
dec
mov
fsts
jmp
fwait
push
daa
int
push
sahf
std
or
cmp
add
push
testl
push
dec
dec
int
in
and
jge
in
sbb
or
shll
int3
cli
sbb
gs
rcl
xchg
or
fmuls
inc
pop
add
fcmovnu
jo
movsl
push
jmp
lods
mov
jno
pop
ret
push
jge
inc
xchg
adc
fcompl
jnp
je
push
xor
cmp
adc
dec
fiaddl
and
pop
mov
xor
fst
add
push
jb
and
adc
fwait
movq
daa
xchg
loope
bsr
scas
inc
pop
loop
add
jmp
jns
call
gs
xor
xlat
cmp
and
fdivrl
idivl
push
loopne
mov
pop
outsl
pop
mov
mov
int
out
and
clc
mov
sbb
insb
adc
mov
xchg
mov
mov
adc
nop
mov
mov
and
sub
fcoms
roll
test
push
cld
pusha
roll
gs
js
xchg
mov
adcb
lret
lahf
lret
mov
cmpsl
mov
add
cltd
mov
aad
dec
dec
int3
jle
icebp
mov
fldt
push
jecxz
out
popf
pop
test
xchg
mov
arpl
dec
inc
mov
ficomps
nop
out
sbb
andl
in
mov
cmp
sbb
dec
cltd
inc
jge
xor
jmp
shr
sahf
inc
rcr
mov
push
xchg
adc
movsb
xchg
aam
push
out
mov
shr
lods
xchg
sbbl
or
and
lds
icebp
push
mov
adc
jno
mov
lcall
push
pop
or
cmp
faddl
outsl
push
sbb
add
pop
nop
mov
cwtl
or
pushf
pushf
xor
pop
xchg
push
mov
push
jae
mov
lahf
cmp
jge
push
inc
inc
dec
fimull
imul
mov
adc
insb
sbb
and
les
lods
push
mov
push
or
xchg
fisttpl
fidivrl
ljmp
dec
sar
mov
jecxz
and
lock
sub
cmp
imul
add
or
jle
daa
mov
xor
lods
push
test
lcall
incl
jp
jmp
push
cltd
add
inc
adc
addr16
and
dec
mov
pop
clc
enter
cli
test
mov
ret
mov
mov
jmp
sub
mov
rcrl
xlat
test
mov
in
jp
mov
push
sti
cmp
cmc
dec
clc
sub
mov
int3
pop
test
push
dec
add
ja
sbb
stc
adc
dec
cs
shr
or
jbe
xchg
mov
popf
sbb
pop
cli
cmp
cs
cwtl
mov
fsubrl
dec
ficoml
std
in
adc
ret
mov
mov
mov
movsl
mov
scas
cmp
dec
test
incl
stos
test
scas
lahf
ss
cwtl
xchg
or
movsb
push
push
mov
mov
rcrb
out
xor
sbb
push
jp
push
and
add
cmp
sub
gs
loopne
mov
jne
mov
inc
xor
fidivl
lea
outsb
mov
inc
jle
jle
jno
push
movsb
ljmp
ljmp
loop
cwtl
cmpsl
mov
push
repz
mov
repz
test
fdivs
lahf
inc
mov
rcl
scas
sub
insl
mov
fwait
lods
or
inc
aaa
mov
in
gs
inc
sub
lods
push
xchg
sub
pop
in
outsb
in
js
das
jl
cwtl
loopne
xor
leave
xor
jge
pop
adc
js
sbb
test
xlat
push
sub
mov
jne
pop
hlt
das
xchg
mov
aas
aaa
dec
pop
xchg
stos
pusha
xchg
roll
pop
jge
adc
loop
jp
sub
es
pop
sti
mov
lods
fbstp
fsubs
ljmp
jl
pop
mov
lds
lea
jno
shrl
add
ret
lcall
add
jge
loop
ss
cmp
cmpsl
ds
loop
faddl
cmp
inc
js
xchg
xor
jb
inc
lcall
inc
addr16
mov
fnsave
cmpsl
sbb
andl
xchg
roll
lods
pop
movsb
out
lock
jle
jg
iret
push
je
arpl
jno
mov
dec
push
and
int3
cltd
popa
faddl
addb
loopne
mov
cli
cmpsl
sub
aam
pop
test
data16
loop
sbb
push
jmp
xchg
movsb
jmp
fstpl
inc
dec
sub
in
rorb
jge
into
out
insl
rcrl
scas
xchg
xor
int3
add
aad
jmp
push
imul
mov
add
xor
negl
nop
jmp
cmp
mov
jae
jbe
push
or
mov
push
sahf
xchg
pop
hlt
lahf
dec
xchg
out
dec
cmpsl
hlt
cmp
cli
cs
push
sbb
cmpsb
jle
clc
inc
daa
or
inc
ret
enter
iret
je
adc
shrb
loop
pop
mov
aam
adc
xor
mov
cmp
decb
lret
xor
adc
gs
fcompl
mov
xor
out
or
repnz
cmp
arpl
les
sbbl
cld
sbbb
xor
mov
ja
inc
cmp
sahf
pushf
scas
mov
aas
inc
jnp
mov
xchg
add
shl
adc
cmc
cli
mov
sub
and
iret
insl
ret
jge
std
pop
dec
insb
int3
in
xchg
mov
orl
outsb
dec
dec
dec
lret
sub
mov
add
into
pop
inc
cmp
lods
test
adc
mov
xchg
push
push
mov
dec
jl
mov
xchg
pusha
imul
dec
inc
mov
movsb
call
mov
cmp
jmp
imul
dec
stos
mov
dec
fsubr
or
icebp
xor
push
pop
es
cmp
dec
xchg
inc
sub
add
bound
mov
or
xor
and
pop
xchg
push
imul
stos
mov
mov
sbb
movsb
frstor
mov
push
jl
xchg
fildl
dec
dec
inc
shrb
jo,pn
enter
sub
lds
cwtl
in
sbb
xor
pushf
xchg
dec
lcallw
leave
bound
add
xlat
push
imul
lret
pop
lret
stc
sbb
int
xor
mov
pop
cmp
int
das
pusha
xchg
fucomip
or
xchg
jbe
mov
xor
mov
out
add
adc
imul
mov
iret
test
cmp
fmuls
mov
sub
pop
pop
out
or
out
das
pusha
push
int
add
or
addr16
pop
pop
ljmp
xlat
data16
xor
mov
mov
inc
test
xor
or
fneni(8087
pop
mov
add
test
leave
xchg
data16
cmpsl
and
dec
ja
mov
int3
pusha
and
pushf
jnp
pop
cmp
arpl
scas
jg
imulb
xchg
roll
mov
lret
mov
jns
cwtl
push
and
xor
movsl
inc
cmp
iret
pop
dec
loop
push
lcall
loop
stos
lret
mov
adc
rcll
inc
jnp
mov
dec
jb
xor
popf
mov
sbb
xchg
invd
lahf
and
cmc
or
push
inc
dec
mov
mov
xchg
lods
mov
jb
rorl
push
aad
mov
fadds
mov
pop
les
and
mov
ret
dec
movsb
adc
xchg
cmpb
xor
push
out
xchg
fildll
sbbl
or
xchg
xchg
cltd
mov
aas
hlt
mov
fnsave
cmp
arpl
ficomps
mov
xchg
pop
push
into
cmp
ljmp
mov
push
jb
scas
mov
cmp
add
dec
mov
mov
mov
cld
into
jmp
outsb
negl
lahf
fwait
dec
and
dec
adc
push
mov
mov
or
addr16
xchg
add
nop
mov
mov
jnp
into
dec
clc
lods
enter
xchg
xchg
inc
jne
daa
ret
xchg
ljmp
adc
js
inc
popf
inc
cmp
or
out
sbb
adc
inc
cmp
jnp
push
fldenv
sub
jle
and
jg
add
dec
add
add
sahf
add
or
inc
repz
sbbl
jl
imul
adc
ljmp
and
xchg
leave
push
jae
mov
xchg
jbe
orb
adc
aam
xlat
js
sub
pop
xor
imul
push
adc
add
cld
inc
inc
xor
les
add
hlt
sub
jns
lahf
push
pop
rcrb
xchg
pop
dec
movsl
cmpsl
and
insb
dec
jns
dec
mov
mov
call
pop
lea
and
cmpsb
pushf
shll
addb
outsb
mov
stos
jl
push
out
shr
push
push
jmp
xchg
sub
and
rclb
dec
scas
hlt
xchg
mov
lds
inc
sub
sub
fisubl
je
fidivl
cmp
imul
mov
imul
negl
out
push
pop
imul
pushf
es
fnstenv
call
lcall
cmp
add
gs
fisubrs
mov
push
push
mov
in
sbb
fldl
jne
lcall
jmp
add
sub
cmc
xchg
jne
pop
fidivs
push
clc
jbe
jecxz
xor
sbb
inc
adc
shl
xor
pop
imul
sti
jno
lret
movsl
cmp
div
ljmp
hlt
test
push
add
mov
xor
xchg
les
imul
dec
dec
ss
outsb
inc
arpl
sarb
clc
push
mov
mov
sarb
popa
xchg
leave
pop
add
push
fwait
ret
cmp
ret
addr16
mov
pushf
popa
mov
mov
xchg
outsb
mov
cmp
aad
cmp
insb
xchg
jg
cld
mov
test
mov
pop
inc
rcl
ret
arpl
mov
pop
cmpsl
and
fwait
call
push
lds
shrl
jge
mov
pop
mov
xlat
cmp
cwtl
xor
repz
add
push
in
xchg
sahf
xchg
gs
adc
addr16
jg
xchg
add
xor
ret
cld
mov
pop
push
or
xorl
sbb
int
sbb
pushf
ss
xchg
cs
dec
data16
jle
std
jno
add
adc
out
jb
dec
jns
fsub
jmp
xchg
inc
push
cmp
in
push
jmp
add
mov
jb
repnz
bound
imul
mov
mov
lcall
mov
xor
daa
pop
push
movsb
mov
scas
push
pop
xor
or
inc
cmp
push
xor
sahf
data16
jmp
jp
or
xor
imul
rcrb
pop
in
mov
pop
mulb
scas
jmp
into
hlt
mov
daa
pop
xlat
push
sbb
ret
fcmovnb
fwait
clc
dec
es
sbb
aaa
lods
xchg
in
lds
rcrb
dec
adc
insb
xor
and
xchg
imul
inc
push
jbe
cmp
mov
icebp
adc
push
pop
or
test
push
rcll
sub
fldt
push
inc
fxch
jo
mov
mov
jg
or
dec
jno
adc
dec
insl
loop
je
das
iret
scas
orl
test
mov
sbb
sub
add
and
add
ss
or
jge
sahf
pop
push
mov
xor
jp
xor
adc
inc
lret
iret
ret
in
pop
xor
negb
in
xchg
pop
and
cwtl
je
jno
sub
dec
pushf
push
fdiv
loopne
loope
push
mov
fwait
jb
pop
adc
pop
or
iret
test
cmc
int3
addl
je
mov
inc
into
inc
enter
push
fucomi
pop
adc
aas
cs
inc
or
fwait
xchg
cs
cmp
add
dec
std
sbb
mov
push
imul
fsubrs
lret
inc
mov
daa
add
scas
or
stos
xchg
cmp
insb
jne
fldt
inc
mov
lcall
int
pop
jmp
sub
lds
test
mov
insl
rep
incl
inc
repnz
insb
lcall
inc
std
cltd
sub
xchg
repz
test
xorb
add
adc
fwait
adc
or
lret
arpl
jb
add
sub
cmp
and
fildl
add
and
mov
cld
arpl
mov
xchg
ja
sub
outsl
pop
popa
aaa
dec
inc
or
jns
popa
push
mov
out
push
push
push
xor
inc
jg
xlat
push
xchg
xor
cmp
shrb
push
dec
sti
ror
push
std
jecxz
cmp
movsb
dec
push
adc
jg
dec
out
arpl
mov
sbb
mov
mov
sub
pop
in
frstor
push
and
pop
xchg
sahf
pop
push
ja
repnz
out
je
das
dec
jnp
add
out
or
sti
pop
roll
xor
popf
xchg
add
std
add
or
addl
cwtl
sub
hlt
adc
sbb
in
sub
mov
push
xchg
in
frstor
push
jne
add
out
lahf
adc
mov
pop
cmc
or
outsl
mov
inc
or
pop
pop
sti
cmp
cld
dec
cli
mov
jecxz
sbb
lods
das
nop
addb
mov
jo
insb
fwait
aaa
cmp
and
mov
jl
sarb
sbb
mov
push
pop
jns
test
das
inc
outsb
shrb
fdivrl
pushf
adc
rcll
pop
aam
push
inc
xor
aam
adc
mov
cltd
cli
jmp
push
stos
clc
pop
data16
xor
and
jmp
or
pop
and
mov
test
push
loop
mov
testb
cwtl
sbb
mov
push
std
add
add
addr16
rolb
add
xchg
filds
jp
pop
dec
mov
sbb
addr16
pop
sub
add
out
jg
jmp
push
jne
adc
dec
addr16
js
xchg
dec
mov
push
cld
mov
and
loop
int
jg
movsb
or
inc
mov
push
popa
pushf
inc
xchg
sbb
and
xchg
cli
cmp
cmp
add
aad
add
add
test
sub
cmp
inc
add
cmp
pop
das
fstpt
sub
out
adc
adc
and
push
and
cs
sub
mov
push
fwait
sub
js
mov
mov
jne
arpl
jo
add
lcall
adc
mov
xorl
dec
rcrl
addr16
inc
mov
xlat
mov
sbb
mov
mov
push
cmpsl
mov
call
cltd
mov
cltd
movsl
enter
push
xor
mov
in
hlt
pop
sbb
in
sub
xlat
fwait
cmpsl
loopne
test
loop
cmp
fstps
pushf
sbb
int
cmp
add
fldenv
pop
xlat
stc
outsl
add
sub
dec
movsb
popf
jns
testb
inc
gs
shl
xor
in
sbb
push
fs
xchg
les
sub
adc
push
dec
notb
or
fnstsw
aam
jns
xchg
add
xor
fwait
addr16
stos
push
lahf
or
ss
lock
add
inc
push
lcall
pushf
xor
out
add
pop
popl
jnp
and
adc
lcall
pop
flds
js
lods
mov
add
add
insb
pop
arpl
xchg
nop
jbe
aaa
cmpsb
stos
mov
sbb
repnz
aas
fidivs
add
jecxz
and
push
fcomps
fxch
out
push
inc
fcompl
cmp
dec
lods
fnstenv
sbb
sub
rcrl
xchg
mov
fadds
dec
push
in
push
mov
mov
sub
enter
and
dec
repnz
jo
xor
pop
cmp
gs
sub
movsb
xchg
adc
push
mov
fs
pop
xor
jb
jle
inc
cmp
js
popa
orb
call
lret
lret
repnz
negl
jmp
pop
or
mov
xor
xlat
fidivs
and
out
add
push
mov
sbb
jmp
popf
cmp
or
nop
idivl
icebp
jae
loopne
mov
sbb
cmp
add
orb
scas
mov
sarl
sub
inc
rcrl
xchg
xchg
int
sub
outsl
mov
cwtl
inc
mov
insb
ficoml
jmp
pop
or
es
jnp
repnz
in
xor
mov
jmp
dec
adc
jno
pop
sbb
insb
pop
stos
cli
dec
lock
jbe
stos
sub
dec
sub
inc
adc
test
lret
cwtl
gs
adc
or
out
cltd
inc
cmc
in
push
xchg
test
gs
fxch
cmpb
in
mov
pop
dec
sub
insl
push
add
lods
jo
das
mov
cmp
xorl
std
lock
aas
sarb
lea
mov
pop
pop
push
mov
fstps
mov
rclb
or
mov
push
mov
into
dec
ficomps
rolb
dec
add
in
cmp
push
lods
lret
push
lret
mov
xor
mov
lods
ja
aam
or
xor
inc
sub
jge
push
pop
push
mov
fisttps
xchg
cmp
insl
jmp
add
fwait
movsb
shrb
mov
imul
add
pop
xlat
int3
jo
iret
jl
cmc
outsl
xor
push
mov
repnz
dec
inc
adc
push
sub
add
jno
sbb
out
cmp
jle
out
jg
inc
adc
xchg
inc
mov
fldt
clc
into
loop
xor
sub
or
push
insl
outsl
outsl
jo
divb
cmp
jbe
sbb
xchg
ja
ljmp
mov
scas
negl
mov
cs
push
mov
jmp
jne
leave
xchg
jno
mov
les
xor
lret
hlt
neg
push
ret
xor
push
push
push
mov
test
bound
or
xchg
cmp
mov
movsb
mov
mov
dec
fimull
push
cmp
lahf
push
out
dec
push
mov
xorb
add
pop
mov
and
jnp
jl
bswap
das
mov
es
cmp
sti
push
mov
mov
jp
nop
int
scas
js
js
orb
and
cmp
data16
sub
jne
cld
sbb
bound
es
and
jge
in
popf
mov
adc
or
inc
adc
clc
mov
jb
mov
lahf
cltd
mov
adc
loope
pop
lods
mov
cmpl
push
push
data16
or
mov
cmc
daa
int
pusha
cmp
lret
pop
mov
push
das
adc
in
jno
icebp
enter
mov
adc
popf
mov
dec
inc
dec
add
scas
xor
nop
push
lea
mov
sarl
cmp
test
scas
sbb
shlb
rol
xchg
fdivrl
xor
mov
ret
inc
fwait
cmp
fdivrl
repz
lods
popa
fwait
cmp
cmpsl
cmp
in
push
shll
pop
inc
push
lret
daa
inc
out
add
call
and
nop
jno
or
lods
sub
or
mov
bsf
adc
test
jge
lret
mov
in
xchg
push
mov
jnp
xor
xchg
mov
inc
ja
jle
inc
pop
sub
faddl
fucomip
pop
jge
and
lock
inc
adc
mov
sbb
jb
fdiv
inc
or
fs
bound
in
and
repnz
insb
cmp
push
negl
mov
pop
push
xchg
xorl
aad
lea
scas
sahf
push
push
inc
push
popf
pop
mov
push
mov
ja
inc
popa
push
add
cmp
stos
rorb
inc
jno
mov
loop
push
inc
in
loopne
push
in
idivl
xchg
sub
mov
enter
cmpsl
lret
sbb
fiadds
fisttpl
xor
int
mov
outsl
fwait
mov
mov
push
pop
pop
cwtl
out
jecxz
lods
leave
loop
sub
pop
mov
cmp
pop
fsubl
lret
mov
stc
movsb
aam
fdivp
dec
xor
es
xor
out
scas
push
cmp
xlat
lcall
pusha
mov
sar
outsb
xchg
cmp
push
add
call
inc
stc
ljmp
push
lock
stos
pop
clc
mov
test
cmc
mov
mov
jmp
pop
ret
jnp
push
push
xor
mov
sub
xchg
hlt
mov
lret
push
dec
ret
rclb
cld
gs
jns
pop
test
repz
mov
addl
imul
cmc
pusha
and
jmp
test
sbb
sub
scas
xchg
xchg
mov
test
daa
pop
int3
fwait
enter
xchg
les
stc
cmp
addl
cmc
ja
pop
sti
es
adc
xor
xchg
clc
jl
pop
out
jp
xchg
cld
js
popa
push
das
jmp
test
lock
or
cmp
mov
jecxz
mov
outsb
stc
rorl
cmc
imull
adc
or
outsb
fstpl
mov
and
into
inc
xchg
push
outsb
add
sbb
aaa
ret
in
test
inc
sbb
aad
std
xchg
sbb
adc
pop
fmul
in
test
lret
lret
es
dec
cmpsl
push
push
mov
mov
aas
sub
scas
ret
xor
dec
push
mov
jp
cltd
les
cmp
stos
jmp
test
pop
cmp
mov
repnz
and
inc
inc
dec
loope
xchg
iret
mov
int
das
rcll
iret
pop
xchg
outsb
fucomip
mov
push
xlat
sbb
js
lea
scas
addl
mov
sbb
dec
jmp
hlt
popf
sbb
adc
in
pushf
mov
xorb
and
jnp
cmpsl
mov
ljmp
int3
call
mov
pop
lret
push
imull
mov
jp
xabort
mov
cli
jecxz
cmp
push
mov
insb
sub
sub
and
shlb
inc
subb
adc
push
cs
xor
ret
sbb
jmp
jle
out
pop
push
inc
repnz
outsb
and
js
in
mov
xor
fwait
sub
mov
int
in
cld
insb
adc
test
mov
mov
fists
push
sahf
cmpsl
ret
sarl
cmpsl
sbb
stc
xchg
lcall
dec
push
enter
in
das
lods
dec
mov
inc
test
cltd
and
imul
mov
insl
orb
push
sbb
add
push
mov
jbe
pop
into
or
mov
rol
mov
and
adc
in
std
rcrb
xor
mov
mov
sbb
nop
jl
jp
sbb
nop
loopne
stos
pop
or
clc
cld
ljmp
out
push
inc
mov
dec
out
and
sbb
ss
imul
sbb
hlt
inc
stos
sub
sub
fiadds
cmp
add
pop
pop
and
mov
sub
movsl
addr16
adc
dec
fld
add
cltd
adc
fwait
mov
mov
mov
lock
arpl
cmp
iret
cmp
cwtl
addr16
mov
mov
adc
sub
js
test
mov
sbb
rcr
and
inc
test
fcmovb
ds
test
cmp
sahf
mov
adc
repnz
pop
xlat
push
adc
and
in
outsl
les
div
lcall
and
xchg
mov
daa
add
ja
mov
cmp
in
push
inc
mov
or
dec
cs
push
fstpl
stc
jno
flds
stos
adc
ret
int
push
sar
adc
inc
cltd
pushf
outsl
add
sbb
xor
push
inc
gs
sahf
fisubrl
stos
pop
ficomps
pusha
out
xchg
test
xchg
dec
pop
xchg
insl
in
or
out
cs
stos
rep
dec
add
and
fs
mov
shll
push
and
jmp
ljmp
inc
pop
addr16
pop
fadds
das
mov
push
divl
push
mov
movsb
aad
xor
or
sti
call
mov
ret
push
jne
sahf
push
fsts
repnz
fdivs
jmp
push
xor
jmp
cmp
mov
rorb
lock
inc
pop
push
les
dec
add
pop
nop
sub
addl
jp
xor
pcmpeqw
je
lds
push
push
or
xchg
call
test
push
jecxz
mov
mov
xchg
and
dec
xor
test
jo
inc
mov
adc
xor
loop
and
movb
or
add
cmp
jne
add
flds
dec
inc
cmpsl
test
in
push
out
jb
dec
test
mov
aam
ret
outsl
push
repz
or
int
sbb
movsl
mov
lret
sti
test
fsubrs
or
jo
or
cmp
jp
xchg
hlt
jnp
mov
clc
loope
mov
push
cmpsb
dec
xlat
adc
testb
jle
int3
mov
imul
mov
jle
cmp
fiadds
add
jns
loope
mov
jge
xlat
dec
pop
xchg
aas
mov
leave
shlb
sahf
xchg
cld
ja
xor
or
outsl
cmp
test
mov
sbb
push
pop
imulb
and
test
push
popf
fimuls
xlat
outsl
adc
arpl
push
mov
pop
adc
cmp
xor
cmp
jbe
jp
xchg
mov
repz
push
in
jne
or
gs
arpl
jo
mov
lret
cwtl
ja
pop
jo
int
mov
push
mov
daa
push
push
or
rorl
mov
addr16
test
cmp
add
sub
pop
add
rorl
push
in
sbbb
sub
pop
add
cs
lods
cmp
fisubs
aam
dec
repnz
lret
sub
ds
xor
mov
mov
jnp
clc
sub
and
aas
lcall
js
inc
into
inc
iret
mov
dec
es
sbb
adc
js
lea
sbb
movsb
lcall
sbb
or
adc
fisubl
xchg
push
nop
insb
push
pop
mov
jbe
mov
adc
enter
insl
sbb
emms
mov
out
jl
lea
out
hlt
mov
testl
inc
rol
cmp
xlat
sarb
adc
cmpsb
inc
loopne
rclb
mov
mov
sahf
cwtl
test
push
mov
jle
and
in
sub
sbb
outsb
and
jb
daa
inc
clc
out
mov
lods
mov
rcll
inc
inc
stos
push
jbe
rorb
stos
pop
lret
xchg
das
ds
cmp
outsl
push
add
push
rcll
test
mov
idiv
cmc
inc
adc
scas
push
in
sub
fisttpl
rcll
inc
and
scas
in
jo
sub
popa
mov
in
or
pop
lret
imul
xor
mov
xor
adc
adc
mov
xchg
push
ret
out
cmpl
rcl
or
cmp
imul
fsub
pushf
lret
dec
mov
xor
dec
jnp
add
xchg
movsl
ret
inc
xchg
xchg
lahf
ljmp
xchg
stos
out
adc
mov
mov
hlt
push
sbb
or
repnz
sbb
stos
outsb
daa
sub
mov
mov
dec
mov
aaa
add
lcall
jae
out
out
mov
pop
add
filds
adc
lds
sahf
incb
dec
loope
stos
mov
jg
lock
icebp
das
sti
pop
mov
movsb
sbb
mov
imul
mov
mov
sbb
sbb
cmp
pop
pop
es
push
andl
inc
ficomps
add
pop
jmp
mov
mov
pop
pop
rorb
int3
loopne
push
mov
pop
arpl
insb
push
sarl
test
sub
add
mov
arpl
sub
cmc
cmp
movsb
mov
pop
or
ljmp
stos
jp
out
hlt
or
jecxz
fs
fldcw
push
inc
xchg
or
xchg
sbb
pop
adc
lds
cs
mov
notb
or
out
sub
sub
mov
mov
mov
or
cld
mov
repz
dec
aad
or
ljmp
jb
jnp
xchg
xchg
rorl
cld
xchg
xchg
cmp
jno
stos
add
jno
jecxz
adcl
leave
scas
add
divb
xchg
jmp
int
push
shll
es
loope,pn
dec
ficomps
sub
mov
xor
adc
mov
or
lods
xor
xor
or
aas
jle
push
add
xor
cmp
sbb
xlat
data16
ss
dec
push
jge
xchg
xor
mov
shlb
or
mov
dec
or
cmp
xor
add
mov
jne
imul
cmp
jbe
dec
pop
sub
das
add
icebp
aas
lods
sbb
jecxz
cmpl
cmp
xor
psubsw
sub
mov
test
push
lret
out
nop
push
lds
push
fwait
and
lahf
adcb
dec
xchg
xchg
adc
mov
fdivrs
xor
out
lods
test
mov
hlt
pop
cmc
dec
push
lahf
dec
movsl
sub
ret
cltd
mov
lock
out
xchg
int3
std
repz
or
mov
cmp
jg
pop
add
add
aam
mov
add
sub
jno
dec
jo
and
hlt
lock
add
sub
cmp
mov
adc
test
xchg
test
fwait
jns
stos
daa
or
pop
out
adc
bound
add
push
jmp
repz
out
xorl
xchg
or
sarl
jb
add
push
fs
or
addb
daa
loop
daa
lea
and
stc
out
pop
scas
sbb
pusha
es
scas
sub
test
xchg
pop
push
je
movsb
push
lahf
and
test
jae
mov
mov
push
xchg
cli
imul
or
mull
or
cmp
jae
jl
cmpsl
test
mov
ret
arpl
shll
xchg
add
cmp
std
pushf
jne
stc
jo
jge
mov
sub
stos
outsl
clc
aaa
pop
dec
sub
loopne
and
pusha
cli
xchg
cmpsb
sar
and
jb
lea
xchg
pop
and
push
add
aad
es
inc
add
test
add
fs
jge
out
xchg
stc
jae
cli
ficoms
pop
pop
clc
in
leave
dec
lret
repz
mov
jo
fs
divb
sar
cmp
xor
mov
lock
jl
lock
lret
mov
in
inc
dec
mov
jp
or
add
or
insb
aaa
mov
mov
inc
jg
sub
or
cmpb
hlt
insb
jmp
mov
fisubrl
xor
mov
push
adc
lods
in
pop
je
addr16
sub
stos
inc
mov
pop
add
aam
dec
jl
ret
cld
push
jns
mov
out
stos
test
adc
inc
add
arpl
xor
mov
add
mov
sub
mov
push
data16
mov
fs
mov
nop
xlat
lahf
jge
in
pop
sub
xchg
test
sub
xlat
and
jmp
dec
lea
add
push
add
jnp
or
je
sarb
mov
lock
out
mov
push
shrl
enter
loope
int
mov
cli
in
or
stos
out
mov
adc
push
and
mov
inc
lods
cmp
jae
add
pop
adc
stos
add
dec
test
cmpsb
fwait
out
inc
lods
ret
jmp
in
add
sbb
enter
xchg
mov
mov
xchg
shrb
ficoms
in
loope
outsl
inc
ret
rolb
xchg
inc
inc
icebp
or
fnstenv
andb
divb
outsl
scas
mov
push
push
pop
or
shrl
xorl
cmp
std
nop
inc
or
sbb
sub
dec
fdivrl
mov
lret
es
push
shlb
cltd
daa
sarl
dec
mov
rorl
adc
lock
adc
dec
mov
push
push
and
mov
in
mov
stos
es
mov
fildl
pop
sub
sbb
aaa
mov
jmp
or
sbb
dec
mov
dec
and
nop
rcrb
or
imul
imul
mov
outsb
cltd
js
jae
test
ja
cwtl
cmpsb
test
xchg
push
and
mov
mov
pop
pop
jnp
dec
xor
daa
cmp
mov
mov
inc
pop
lock
fwait
push
dec
mov
xchg
mov
fcomi
sbb
mov
bound
js
sbb
adc
jne
hlt
in
jne
fbld
pop
push
push
jg
aaa
in
lock
xor
rcl
mov
je
sbb
mov
sbb
pusha
pop
mov
das
cmp
mov
ret
inc
and
lock
inc
and
or
stc
xchg
pop
movb
jno
xchg
inc
mov
pop
cmp
push
sub
mov
in
and
and
fnsave
inc
outsl
xchg
fstpl
jae
lock
fcompl
lds
adc
push
mov
jl
enter
mov
sub
sub
pop
lcall
rorb
das
inc
push
rorl
mov
xchg
pop
jne
xchg
or
test
in
mov
nop
ret
sbb
adc
nop
jne
cmp
cmp
xchg
scas
mov
test
enter
ljmp
cmp
rorl
mov
aam
scas
cmp
mov
pop
jae
mov
jnp
mov
push
sbb
stc
cli
negb
lret
out
popa
cmp
jg
in
pusha
or
sub
fisubs
movsl
ret
cmp
or
jg
dec
daa
dec
push
or
aas
shll
jbe
xor
sub
xor
imul
test
lahf
syscall
sbb
jecxz
dec
sbb
into
ds
adc
repnz
mov
mov
jae
ds
jnp
pop
mov
add
xor
xor
mov
jno
test
js
popa
mov
mov
mov
mov
adc
jg
mov
cltd
mov
in
addl
mov
ficompl
loopne
jg
add
in
adc
push
es
loopne
enter
clc
test
inc
cmp
sub
ljmp
jnp
in
jb
jecxz
in
push
scas
std
dec
shr
push
and
je
mov
sub
cli
pop
pop
xor
sti
sbb
cs
push
shrb
stos
push
out
arpl
fcomi
or
pop
pop
inc
dec
adc
cmp
or
cmpsb
and
hlt
xorl
leave
push
shlb
mov
test
clc
xor
in
cmp
xchg
jg
xchg
ret
mov
mov
push
dec
push
xchg
xchg
repz
lods
sbb
push
jl
fstl
push
notl
inc
pushf
mov
jo
in
shlb
out
pop
xchg
mov
into
rorl
imul
test
sub
cmp
subl
inc
and
aad
lcall
lahf
inc
outsb
stc
cmpsl
or
mov
fnsetpm(287
cmp
lret
lea
jno
push
or
ljmp
mov
repz
push
scas
int
les
cmp
adc
pop
gs
addr16
jae
stos
mov
mov
test
leave
sbb
imul
inc
or
cmpsb
xchg
xor
out
cmpsl
fs
inc
xor
loopne
mov
inc
stos
adc
pop
testb
jmp
dec
adc
cmp
dec
iret
sbb
xor
jbe
xchg
mov
js
int3
pop
jmp
jle
jbe
jmp
jae
in
pop
mov
in
addr16
jmp
decb
or
and
jo
mov
xor
add
sbb
clc
das
inc
lahf
filds
dec
dec
out
arpl
mov
orb
jbe
pushf
stc
dec
mov
cmp
push
push
fsub
in
test
inc
xchg
or
insb
xchg
sbb
stos
insb
rorl
xchg
test
and
jno
adc
push
sub
les
or
lret
add
cld
arpl
cmc
mov
popa
std
mov
add
and
dec
into
jo
jns
push
ja
add
mov
mov
pop
sti
jecxz
xor
cmp
jle
cmp
push
cli
xor
pop
xchg
mov
mov
aaa
inc
data16
out
test
out
mov
rcr
decl
adc
orb
adc
imul
repnz
pandn
testb
aam
aas
and
inc
adc
les
cmpsl
hlt
dec
push
xor
jp
xchg
xlat
sub
dec
mov
cmpsl
inc
and
cs
jge
in
icebp
lcall
mov
cmp
fwait
lds
movsl
lahf
sarl
cwtl
push
cs
ret
inc
pusha
mov
pop
jmp
aaa
pop
out
xchg
inc
and
mov
pop
std
lcall
and
sub
add
repz
shl
into
xor
or
outsl
dec
xlat
notb
push
and
lahf
adc
add
and
jnp
shll
imul
test
aas
cmp
rcll
jmp
dec
jg
xlat
arpl
jecxz
mov
sub
std
sti
pop
add
mov
lcall
nop
push
dec
cmp
mov
rcrb
imul
push
fwait
cmp
sub
inc
push
add
xor
into
std
lods
sub
push
nop
mov
mov
btr
stos
call
xor
sub
mov
ljmp
movsb
mov
cmpsb
fs
fcom
and
loopne
adc
es
fisubl
or
mov
sbb
mov
scas
dec
pop
dec
jle
pop
loope
sub
das
adc
cld
in
pop
inc
nopl
jae
jge
xchg
push
jbe
sbb
and
cmp
test
jnp
xchg
mov
ds
in
add
test
inc
add
xlat
mov
sub
insb
mov
add
test
cmpsb
cmpsb
leave
xor
push
sbb
push
rorl
cs
sub
sbb
leave
sub
das
pushf
sbb
mov
repnz
lea
stc
popf
test
adc
lods
xchg
loope
fs
pop
add
mov
jo
int
jge
loop
inc
push
div
or
add
hlt
bound
cmp
jnp
sub
insb
pop
rclb
mov
push
aaa
sbb
xchg
icebp
mov
shll
ficompl
fisubrs
imul
lds
dec
js
push
push
xchg
mov
add
jge
mov
dec
mov
sbb
je
and
or
cmp
xchg
loope
inc
sbb
mull
inc
daa
dec
lods
and
rcl
pop
shll
movsl
ret
cmpps
add
jl
stos
mov
pop
add
mov
mov
xchg
test
mov
and
sbb
lret
pop
add
xchg
scas
lahf
scas
mov
incl
sbb
pop
notl
mov
jmp
cltd
call
call
add
push
mov
int
or
pop
cmp
add
push
xor
push
xor
in
push
mov
pop
pop
lcall
xchg
ss
and
and
in
adc
mov
xchg
fcompl
mov
xchg
cltd
adc
in
fldenv
repz
dec
dec
test
imul
or
js
and
pop
test
mov
pop
stc
dec
push
jge
sub
addb
mov
xor
data16
out
ja
test
jo
inc
int
cltd
cmpsl
imul
xor
mov
and
icebp
add
inc
lahf
sbb
mov
push
test
add
sbb
aaa
popf
mov
popf
inc
and
stos
repnz
shrl
aad
mov
pop
or
push
insl
stos
mov
mov
es
mov
sahf
mov
push
xor
push
inc
aam
inc
mov
inc
lahf
xor
sub
xorb
in
inc
xlat
jge
jmp
je
gs
in
fs
add
setle
sti
sub
popf
scas
mov
dec
dec
scas
idivb
leave
sub
sub
hlt
inc
inc
sbb
outsb
mov
sbb
and
fsts
insl
adc
sub
in
in
test
sbb
and
shl
adc
mov
pop
dec
cmp
fildll
cld
xchg
por
mov
lea
fldt
xchg
xchg
push
mov
shll
xchg
jge
addl
out
dec
sub
loopne
cmp
cpuid
pop
mov
and
and
mov
call
sbb
add
jp
sub
mov
out
push
add
and
add
test
call
aaa
cmpsb
jae
dec
imul
icebp
sub
hlt
lea
das
aam
mov
mov
rclb
ret
jecxz
testl
ret
push
inc
sub
push
and
add
movsb
ret
sub
lods
push
or
inc
popf
pop
scas
lds
adc
sahf
push
inc
pop
stos
and
and
icebp
push
and
mov
xchg
adc
cmp
int
popf
std
jp
dec
push
popf
push
daa
pop
test
fwait
nop
in
fs
dec
cmp
movsl
lods
mov
mov
pop
lds
adc
add
sbb
test
inc
in
jmp
push
mov
and
insl
adc
cld
xchg
cs
stc
jne
xor
stc
sbb
sbb
sbb
pop
arpl
ljmp
cmp
mov
pop
pop
cmpsl
add
lcall
cmp
nopl
and
push
dec
loope
rcl
lret
ja
pop
and
xchg
push
cs
cmp
dec
addr16
ds
xchg
addl
pushf
sbb
roll
xlat
xorb
and
xchg
subl
stc
scas
and
pop
test
sub
mov
dec
add
fs
ficoms
mov
in
insl
lds
dec
test
sbb
faddl
and
and
mov
mov
add
cmc
mov
lcall
cli
aaa
imul
sbb
cmpsl
dec
inc
es
sti
cwtl
ljmp
rolb
icebp
xchg
cmp
lds
pop
out
addr16
movl
xor
jp
xlat
fcmovnb
daa
adc
loope
mov
inc
fstpl
lods
or
or
inc
mov
add
mov
xchg
lret
dec
rcl
idivb
rorb
add
mov
mov
pop
in
pop
xchg
pusha
fisttpl
pop
sarl
or
xchg
aaa
outsb
shl
mov
jnp
clc
cld
mov
sub
mov
ljmp
out
out
inc
lret
xor
stos
int3
pop
insl
movl
enter
sub
out
cmp
and
mov
and
mov
add
pop
jecxz
pop
scas
xor
arpl
jo
lret
adc
pop
imul
push
sbb
cltd
jnp
dec
cmpb
int
jne
sti
xlat
jl
jle
mov
xchg
adc
js
gs
daa
ret
pop
into
jl
or
mov
xchg
das
push
or
out
sub
sub
cwtl
xor
xor
pop
stos
arpl
les
mov
pop
jne
fsubrs
fidivs
jo
lret
loop
ss
das
pop
pop
inc
sub
cmpsl
filds
pop
sub
xor
sub
mov
les
add
cli
push
sbb
daa
in
push
xor
idivb
xchg
pop
aas
xchg
jne
and
sub
test
xor
dec
and
enter
inc
je
dec
push
dec
rcll
iret
fstpl
jmp
mov
and
hlt
popa
cs
xor
imul
inc
sahf
and
jg
cmc
inc
inc
add
fldt
cs
adc
stos
mov
push
pop
add
icebp
xchg
mov
je
fwait
jl
pop
mov
mov
out
js
mov
adc
int
fwait
lcall
mov
cmp
mov
outsb
loope
pop
xchg
cwtl
hlt
pop
popf
dec
mov
test
fwait
push
xchg
mov
mov
gs
mov
push
push
jecxz
jp
pop
push
add
mov
lods
mov
insb
ljmp
mov
cmp
push
cmp
push
xchg
test
ret
mov
pushf
or
mov
das
test
push
jle
in
jnp
cmpsb
fdivr
or
sub
dec
sub
push
xchg
or
jg
xchg
cmpb
mov
mov
inc
adc
js
and
call
or
lcall
mov
xchg
sbb
sbb
mov
mov
sub
xor
mov
fadd
enter
push
stc
outsb
push
pushl
filds
inc
pop
xchg
repz
cli
inc
lret
jge
mov
cmp
adc
filds
out
imul
sbb
push
pop
mov
arpl
dec
add
scas
mov
fimuls
fisubrs
outsb
loopne
imul
dec
mov
into
fisttpll
dec
xor
jp
adc
mov
stos
mov
shr
je
test
test
and
push
mov
pop
jle
cmp
mov
stos
add
or
and
xchg
mov
jp
movsb
push
imul
sbb
lret
push
sarl
sub
rcrb
fst
lock
movb
inc
or
dec
insb
xor
xor
xlat
das
or
add
xchg
jns
bound
jbe
jbe
xor
xor
jp
mov
sbb
into
pop
ret
in
pushf
in
outsb
inc
mov
aam
mov
je
sbb
jg
mov
pop
pop
sbb
push
inc
mov
fwait
loopne
sti
fldenv
mov
mov
push
ss
mov
or
gs
sub
fs
ds
cli
jne
scas
dec
les
aas
add
test
daa
fldt
addr16
outsb
mov
aas
xor
imul
int
js
nop
popw
jnp
jle
les
adc
add
adc
clts
xchg
mov
add
xchg
or
sbb
dec
sahf
and
xchg
mov
add
push
cmpsl
cwtl
pop
repz
add
pusha
or
or
fisttps
mov
inc
stc
pop
repz
es
cmpsl
sub
and
or
and
testb
js
pop
push
std
jnp
add
inc
fsubrp
sti
clc
mov
sub
fisttpll
in
mov
loopne
repnz
xchg
cmc
ja
mov
inc
je
add
negl
push
mov
gs
stos
jg
pop
cmpsl
mov
daa
nop
in
xchg
pop
popf
lret
mov
pop
dec
push
push
mov
mov
leave
mov
xchg
ds
mov
jo
dec
ss
adc
loop
test
jp
loopne
add
jg
or
fs
adc
pop
mov
dec
sub
int
dec
test
test
mov
fwait
push
stos
pushf
test
mov
test
movsb
enter
xchg
inc
and
stos
adc
mov
mov
pop
push
ret
sub
adc
out
div
outsl
mov
jl
shlb
sar
xor
inc
fisubrs
fld
push
mov
mov
mov
push
mov
ret
or
jle
dec
jle
or
dec
std
in
mov
cmpl
loope
jno
pop
mov
xor
hlt
or
fmull
pop
repz
stc
popa
jecxz,pt
test
mov
dec
mov
pop
mov
adc
test
stos
inc
adc
and
pop
rorl
xchg
subl
frstor
pop
jmp
inc
test
mov
sbbb
push
push
xor
pusha
xchg
mov
xor
fidivl
mov
leave
movb
mov
movl
pop
mov
in
leave
push
lcall
mov
das
xor
jmp
loop
sub
stos
repnz
cmc
std
xchg
push
lcall
nop
xchg
mov
lcall
adc
and
mov
mov
add
test
push
cld
in
jmp
addr16
sbb
push
cmpsb
inc
adc
rcrb
push
aas
sub
jecxz
xchg
or
aas
icebp
xchg
sbb
sbb
call
iret
loopne
loope
out
ret
add
sbb
push
push
les
inc
cwtl
push
call
into
insl
jne
mov
orb
movntq
out
mov
mov
cmp
and
adc
fwait
push
int3
addb
lcall
xor
pop
lret
stc
imul
das
sub
sahf
mov
push
inc
lods
in
les
cli
into
mov
inc
mov
fs
push
push
jge
test
xor
mov
or
sub
pop
cmp
cmp
and
dec
push
pop
jo
mov
and
mov
sub
clc
sbb
and
push
push
mov
mov
orb
add
shlb
enter
test
mov
push
lret
addl
test
cmc
sti
sbb
dec
mov
and
sbb
lods
inc
lcall
loop
aaa
lcall
inc
ss
jae
dec
cli
loopne
jmp
hlt
cmc
or
jp
push
and
jno
push
out
test
or
cmp
addr16
jae
pop
mov
in
xor
scas
roll
lock
pop
pop
mov
ds
fnstenv
stc
pop
mov
movsb
cmpsl
adc
xchg
lock
add
popa
add
mov
and
cmp
test
mov
pusha
cmp
mov
out
enter
decl
cmpsl
cltd
dec
push
mov
xchg
and
inc
ret
stc
and
and
cs
rclb
push
cltd
sbb
pushf
inc
lock
dec
aad
mov
mov
sbb
stos
adc
roll
lea
shr
rclb
mov
xor
push
dec
xchg
loop
imul
call
pop
loopne
inc
sbb
imulb
rcrb
std
xor
insb
call
or
out
push
sbb
jb
push
sub
rorl
inc
mov
lods
flds
ss
rcrl
testb
cli
ret
popa
cmpb
out
testb
push
shlb
fbstp
sbb
jb
out
enter
pop
int3
xlat
add
push
lods
or
sub
lods
mov
mov
push
insl
ja
out
jg
pop
call
in
and
mov
mov
pop
sub
add
scas
js
jmp
mov
outsb
cpuid
push
xchg
xor
aaa
mov
jbe
das
ljmp
cmpsl
clc
popa
shrb
aam
pop
pop
mov
lods
outsl
push
or
lods
pop
loopne
mov
ss
inc
incb
sbb
test
or
and
push
test
ljmp
hlt
in
lods
fstpl
push
sbb
mov
ret
cmp
int3
add
pop
mov
ret
mov
rcrl
xchg
sbb
sub
jl
mov
xor
ret
mov
or
icebp
ljmp
movsl
stos
pop
xchg
in
scas
push
jg
inc
test
int
pop
add
int
mov
sub
cmp
jmp
jno
cmp
stos
push
mov
jb
aad
les
pop
das
mov
aam
jge
es
jns
dec
push
jbe
xlat
test
jp
out
ljmp
sar
push
icebp
sub
aad
or
sbb
mov
xchg
ret
mov
out
int
add
mov
push
je
inc
mov
mov
pop
push
ror
sub
rcr
inc
movsl
rorb
fs
shl
pop
jl
std
les
popa
sbb
ss
xchg
in
push
subl
pop
mov
add
imulb
mov
sub
mov
arpl
mov
dec
dec
xchg
popa
cwtl
sbb
roll
xor
push
add
pop
sahf
filds
loop
sbb
xlat
mov
imull
int3
in
mov
sbb
aaa
or
cmp
aaa
xchg
mov
lcall
sahf
fsub
sub
fdivrl
xchg
inc
mov
adc
mov
dec
or
in
or
or
mov
in
in
pop
cld
jne
scas
and
jb
cmp
pop
fdivl
aaa
jb
jecxz
iret
dec
in
jle
shr
into
sbb
test
out
mov
mov
pop
iret
adc
and
mov
mov
ja
pop
leave
pusha
outsb
scas
imul
adc
jb
daa
sub
outsb
and
fisttpll
cmp
ret
jnp
and
notb
dec
pop
mov
inc
dec
jbe
popa
sbb
mov
es
push
jl
fwait
jns
mov
push
loope
sbb
dec
sbb
push
pushf
inc
clc
stos
push
inc
sbb
pop
jnp
push
js
cmp
pop
fistps
imul
inc
fs
pop
xchg
sub
xchg
ss
aad
fwait
je
mov
sarb
ret
push
testl
pop
std
adc
ljmp
and
adc
in
lret
xor
lds
xor
dec
dec
dec
sub
or
stos
xlat
out
mov
data16
jno
dec
bound
std
in
fcoml
inc
stc
popf
stos
dec
je
and
xor
test
or
rol
roll
jp
dec
rorb
lods
std
faddl
inc
pushf
mov
add
xchg
sbb
stos
mov
stos
stos
lahf
sbb
cmp
fwait
push
rcr
movsb
je
ret
icebp
rolb
imul
shll
push
inc
jg
mov
nop
mov
js
lcall
mov
sbb
jle
pop
jge
test
mov
jns
fucomp
shll
push
imul
lahf
sahf
dec
xchg
aaa
rcll
pop
or
jne
mov
jb
scas
hlt
mov
lock
sarl
aad
std
lods
rorl
inc
dec
out
jp
mov
cmpsl
xor
jg
cmpsl
lahf
imul
in
jg
stc
mov
and
xor
lea
pop
ror
mov
cmc
fistl
in
inc
lock
stos
test
mov
lock
je
dec
cmpsb
jp
es
adc
adc
pop
je
sbb
and
int
mov
inc
insb
dec
lahf
jle
cs
dec
jg
dec
out
push
mov
imull
adc
adc
pop
push
std
push
inc
incl
lret
lock
pop
fnstenv
inc
push
or
leave
je
push
ret
jne
scas
gs
cmp
sbb
sub
test
add
aaa
cmpsb
fadds
xchg
sbb
in
mov
pop
xor
mov
imul
fcompl
aad
adc
push
inc
jne
add
dec
pop
les
lea
dec
pop
repnz
lods
nop
jnp
ss
rcrb
popf
mov
sub
adc
inc
cli
outsl
cltd
movsl
dec
mov
jmp
pop
mov
repnz
mov
pop
jge
or
les
pop
ret
push
shlb
fmul
jmp
stos
movsb
rol
pop
repz
push
ja
call
in
test
pop
add
loopne
mov
pushfw
dec
daa
cmp
aad
mov
jg
mov
sub
icebp
add
setno
insb
lds
pop
pop
cmpsl
or
push
fsubl
push
addr16
insb
in
aas
xchg
rcrb
sbb
arpl
cld
mov
mov
movsb
int3
in
test
xor
enter
mov
out
push
out
test
jp,pt
inc
push
mov
bnd
test
sbb
push
pop
rorl
inc
xorl
adc
push
adc
in
add
push
lahf
int3
pusha
adc
pop
int
mov
xchg
push
rclb
cmp
push
scas
subl
std
shll
cmp
shrl
xchg
fcmovnbe
push
adc
test
mov
mov
and
lcall
popa
out
add
pop
stos
imul
sbb
cmp
inc
mov
mov
sbb
andl
sub
cmp
or
push
mov
adc
movsb
fimull
inc
in
pop
shll
iret
icebp
std
pop
lahf
xor
pop
fidivrl
add
notb
pop
push
in
ljmp
add
cs
stos
add
ret
adc
dec
and
sub
or
mov
pop
jae
pusha
push
cmp
xchg
in
push
jbe
adc
pop
mov
xchg
dec
sub
loopne
push
add
pop
push
or
in
sub
scas
pushf
out
or
push
fwait
or
push
sbb
out
xchg
faddp
inc
and
add
inc
in
sub
bound
jns
leave
push
push
xor
jge
xor
sub
push
not
ficompl
inc
mov
xlat
sub
xor
mov
adc
iret
add
out
jbe
out
mov
pop
push
xlat
and
out
push
sub
xchg
jns
bound
insl
push
mov
cld
leave
jl
adc
push
loop
xor
sub
fnstenv
sarb
leave
xchg
in
insl
test
and
cmpsb
push
rcrl
ss
negb
pop
aad
daa
mov
cs
mov
jmp
or
add
sbb
xor
orl
xorb
mov
sbb
scas
ss
or
lds
push
push
movb
cmpsl
push
stc
push
sub
fdivrs
mov
cld
inc
jg
lcall
or
push
pop
sti
cltd
cmp
loopne
push
arpl
pop
dec
mov
pop
sub
dec
sbb
push
lock
lea
xor
sub
in
movsl
sbb
aad
push
loop
ficompl
add
inc
lret
shll
rclw
insb
lret
push
fimuls
dec
dec
and
aaa
sbb
xor
push
xor
imulb
or
call
mov
xchg
sbb
dec
stc
in
or
cmpsl
aam
mov
sahf
cmpsb
mov
lret
cli
and
inc
cltd
out
sub
inc
loop
adc
out
push
jecxz
js
in
mov
iret
flds
mov
sub
lock
ret
mov
sarb
fldcw
out
loop
pop
jbe
pop
sub
pop
mov
cmovno
les
loope
jle
cmp
lea
mov
jne
jae
pop
xchg
in
sbb
mov
xlat
mov
pop
xchg
dec
sbb
aad
lds
nop
xchg
cmp
bound
add
xorb
out
xchg
dec
in
dec
mov
sub
rol
sub
mov
cmp
mov
shl
sbb
inc
or
lea
aad
out
into
fidivl
mov
mov
push
mov
iret
and
out
imul
aaa
adc
out
pop
movsb
movsl
jae
dec
dec
nop
or
sub
shl
gs
adc
mov
mov
outsl
out
cmp
orb
pop
movsb
inc
sbb
pop
dec
test
das
cltd
in
xor
das
mov
mov
addb
mov
ljmp
test
dec
push
xchg
cmpb
addr16
mov
jbe
or
shl
es
jmp
pushf
sarb
mov
loope
out
cltd
mov
jle
lahf
data16
pop
js
pop
xchg
mov
xor
sbb
push
mov
pop
mov
jb
call
sbb
test
xor
dec
jl
int
insb
inc
inc
es
in
xchg
cmp
inc
push
and
mov
rcll
pop
xchg
shlb
push
push
xor
fiaddl
ljmp
xor
inc
dec
push
divl
jmp
cs
fldl
ss
mov
cmpsl
xor
cmp
jl
imul
push
cmp
cmpsl
lret
mov
xor
or
inc
xor
and
and
or
fimuls
adc
aam
jnp
dec
mov
fildl
insl
fwait
loope
add
popf
fcoms
roll
imul
push
bound
lret
les
inc
jmp
push
loope
xchg
sbb
add
notb
lea
lea
sub
in
out
gs
push
xchg
lock
mov
andl
rol
push
test
sahf
dec
in
jne
repnz
popa
sbb
jl
sarb
push
sbb
hlt
in
mov
in
xlat
jo
jae
mov
popf
xchg
mov
push
jl
xchg
add
test
mov
les
xchg
mov
sub
in
sbb
push
adc
add
pop
dec
fisubrs
ljmp
scas
cmp
rcrb
incb
sub
and
cmp
fimuls
rclb
stc
push
out
fldenv
scas
sbb
or
sbb
jg
mov
fcoml
sub
insl
inc
jecxz
scas
push
or
cmc
cs
jg
in
push
mov
jl
out
in
inc
mov
jns
std
cmpsb
rcrb
mov
jnp
iret
mov
imul
arpl
jno
jo
subb
pop
movsb
lods
mov
cmp
xchg
es
inc
mov
outsb
dec
jecxz
cmp
mov
mov
je
mov
lock
addb
push
jno
daa
mov
incl
cmc
mov
push
jle
sti
jle
pop
lock
mov
mov
mov
jecxz
pop
cwtl
je
aas
inc
dec
dec
dec
int3
test
repz
adc
sbbl
stos
loopne
sbb
aas
into
js
imull
mov
das
adc
shrl
pop
out
mov
hlt
push
jo
ret
mov
xor
into
xlat
pop
push
xor
clc
test
and
loope
and
add
aas
add
pop
or
jl
and
negl
push
sbbb
pop
stos
ljmp
mov
cmp
dec
pop
lods
jge
pusha
xacquire
cmp
add
test
jno
adc
and
int3
dec
xchg
out
cld
xchg
xor
push
cli
push
mov
sub
add
pusha
test
fisubs
mov
xchg
sarl
inc
mov
cmp
or
mov
sub
sub
clc
jno
jle
test
cld
repnz
and
fldenv
stc
jg
or
arpl
xor
jb
je
stc
push
and
sbb
imulb
mov
shll
or
jl
mov
testb
fsub
imul
pop
inc
pop
cmp
leave
loop
test
lret
dec
call
pop
cmp
test
add
movl
adc
popa
out
scas
adc
cmpsb
movzwl
mov
repz
out
rol
xchg
pop
call
aam
roll
rclb
and
mov
mov
sar
dec
js
ret
cmp
mov
ficompl
push
adc
repz
inc
repz
popf
adc
lock
call
shlb
inc
fistpll
cmc
dec
jle
xchg
or
sti
mov
sub
fidivl
dec
jecxz
popa
icebp
jp
jo
adc
mov
out
inc
inc
dec
imul
pushf
cmp
and
xor
insl
addr16
jns
enter
gs
or
pop
subb
cmp
and
push
xorl
icebp
imul
arpl
dec
cmpsb
sub
loop
in
or
sub
xor
sbb
add
jmp
push
cmpsb
jbe
pop
fsubl
jmp
fsts
jno
lcall
shll
mov
inc
cmpsl
sub
std
shr
lea
repz
xor
mov
lds
inc
lahf
mov
mov
inc
push
and
pushf
mov
ja
jnp
out
adc
mov
out
dec
fisubrl
cmp
cmp
cmp
nop
hlt
sub
xchg
add
or
imul
out
mov
jo
enter
add
pandn
lods
xchg
dec
cs
and
mov
lcall
es
xchg
pusha
and
sbb
xlat
js
or
bound
mov
or
inc
inc
je
or
ljmp
fdivl
xor
dec
adc
lods
xchg
or
nop
xchg
leave
int3
mov
cmp
jle
sub
pusha
dec
and
jl
mov
cmc
add
push
mov
or
xchg
mov
xchg
inc
jbe
inc
mov
fiadds
jns
mov
jmp
pushf
push
sbb
fcmovnbe
out
test
push
push
jl
cwtl
inc
jbe
adc
mov
rorb
xchg
dec
lcall
out
insl
push
mov
ljmp
fistps
sarl
scas
push
dec
inc
add
fstpl
pop
nop
push
push
gs
xor
adc
inc
cmp
scas
les
cli
fidivs
jecxz
ss
fwait
xchg
sahf
adc
add
mov
repz
fs
shll
xor
aad
stc
jnp
push
data16
aaa
ficoms
test
mov
jmp
iret
push
xchg
add
jo
jb
xor
mov
gs
fcoms
scas
cmp
xorb
cwtl
inc
jnp
stos
jno
cmp
out
dec
dec
inc
loop
into
int
loop
cmp
jns
sti
int
roll
sbb
xchg
jno
push
sub
dec
sbb
push
leave
aaa
movsb
xor
shrl
jle
mov
xor
sbb
cli
jle
stc
fwait
sti
and
dec
pop
inc
popa
inc
dec
push
xchg
test
add
gs
cmc
lods
add
pop
cmp
stc
xchg
and
popf
pop
mov
add
pop
push
int
mov
pop
mov
jmp
cmp
aam
sbb
and
repz
jbe
inc
clc
test
rcll
add
cltd
vpcmpeqw
rorl
cld
pop
cmp
pusha
add
dec
mov
fcoml
pop
jecxz
stos
push
or
xor
jb
cli
dec
add
ror
and
dec
mov
add
sub
lret
jp
dec
mov
jge
dec
pop
xchg
and
ja
repz
mov
out
andl
inc
add
hlt
imul
aas
addl
lea
push
mov
aad
mov
into
adc
cmpsb
push
stos
jmp
jmp
dec
or
jns
pmulhuw
filds
imul
into
cmpsb
pop
aam
sub
jle
jecxz
xor
aaa
into
les
les
fucomip
in
popa
adc
fidivl
cmp
adc
lret
lahf
or
push
mov
push
sub
je
jl
jnp
sub
add
mov
hlt
push
cmp
sbb
scas
int3
or
add
pop
pop
insb
pop
adc
pop
pop
push
lods
iret
dec
jp
pushf
js
arpl
lods
fimull
xchg
daa
repz
mov
cltd
mov
mov
cvtpi2ps
pop
outsb
add
ret
in
shrl
mov
fwait
stos
mov
inc
xchg
or
jecxz
push
lds
js
push
mov
pop
adc
aad
push
xlat
sbb
jmp
pop
dec
scas
lcall
xchg
or
test
adc
cwtl
cli
in
and
pushf
cs
rcr
cli
and
and
or
mov
imul
lret
xchg
sbb
jb
push
loop
jge
shl
out
icebp
lahf
adc
shll
std
sbb
sub
popf
sbb
fsubr
out
icebp
cld
cmpsb
mov
insl
int
cld
nop
imul
xor
mov
sub
pop
xor
jg
add
repnz
cmpsl
outsl
mov
pop
mov
mov
jmp
enter
inc
mov
push
xchg
leave
xor
leave
jb
sbb
mov
xchg
mov
fldt
and
xor
lods
je
xchg
adc
push
lods
push
aad
mov
lods
rorb
xor
pop
xchg
dec
or
lahf
jg
jg
jnp
cmp
mov
cmpl
cs
xlat
in
cld
js
xchg
sbb
inc
jbe
mov
dec
xchg
sbb
cmc
out
push
add
mov
xchg
and
inc
sahf
rclb
vpxor
mov
stc
pop
jno
loopne
rcr
ds
push
pop
outsb
mov
add
in
mull
test
sub
pusha
push
mov
fs
outsb
sbb
std
pop
in
pop
ret
repz
push
adc
fwait
aad
and
mov
mov
sti
adc
insl
aas
and
xor
leave
mov
inc
lcall
mov
cld
xor
dec
inc
jne
cs
fldt
push
je
dec
sbb
lahf
nop
cmp
lods
xor
dec
add
mov
push
jmp
xchg
iret
adc
or
sbbl
test
or
jecxz
aad
out
and
xor
sbb
xchg
imul
test
xor
jo
mov
and
sbb
inc
sar
movsl
in
fucomip
loopne
and
cmpsb
xor
repz
jecxz
sbb
mov
xor
adc
and
mov
lods
mov
shrb
filds
cmp
lret
and
xchg
jo
xor
xchg
push
loope
mov
and
push
dec
lahf
scas
jo
mov
lret
pop
mov
jge
mov
repz
mov
cmp
xchg
ficomps
jo
xchg
xchg
lds
add
mov
lds
and
push
pop
iret
sub
cmp
xor
test
jne
pop
cmp
add
add
xor
add
cwtl
push
mov
pop
cltd
push
clc
loope
stc
out
icebp
inc
mov
mov
xlat
fs
test
dec
cld
mov
ret
insl
cmpsb
daa
or
jo
sbb
int3
sahf
xchg
dec
jecxz
and
lods
push
xor
scas
fcoml
mov
addl
popf
adc
ret
adc
cmpsl
es
int3
sbb
imul
lcall
loop
pop
aas
iret
adc
or
or
push
sbb
push
mov
cltd
mov
xor
lock
out
xchg
dec
stos
ret
dec
add
push
out
mov
xlat
cmp
jle
imul
xor
test
ja
xchg
adcl
push
or
sub
fiaddl
mov
sbbb
into
push
ret
pop
xor
mov
js
mov
mov
fwait
out
adc
pop
pmuludq
mov
mov
lods
lret
fisubrl
mov
mov
test
and
lret
or
addl
and
lcall
push
rorb
pop
and
adc
mov
aad
sbb
inc
and
or
pop
test
hlt
and
pop
sbb
mov
pop
dec
xor
mov
sub
and
xor
fistpll
ret
mov
or
or
and
je
sbb
add
or
xor
cmpsl
nop
lcall
jmp
sub
out
cmp
and
out
push
idivl
in
mov
enter
mov
adc
dec
nop
push
sbb
in
aaa
cwtl
icebp
sbbl
or
shll
movsl
insl
mov
popf
clc
sub
mov
jae
jecxz
mov
nop
mov
mov
or
jo
jae
push
push
xchg
sub
fmuls
mov
rcrb
lret
adc
mov
ds
xor
ds
mov
ss
rolb
add
push
ror
add
repz
lcall
sbb
addl
sbb
mov
pop
adc
scas
adc
adc
sub
fnsave
std
test
pop
ret
outsl
dec
sbb
add
jne
sti
adc
cmp
mov
jns
ret
and
mov
push
out
popa
in
pop
mov
outsl
sti
movb
mov
repz
hlt
dec
dec
shlb
jo
dec
mov
fisubrl
mov
mov
and
dec
insl
xchg
pushf
fisttps
lret
test
fsubrl
outsl
push
lcall
cmp
dec
and
rorl
xchg
movsb
xchg
jb
andb
cwtl
push
add
movsb
fsts
repz
mov
popa
mov
pop
or
xchg
dec
xchg
mov
jp
pop
mov
or
cwtl
jo
add
orb
adc
mov
pop
and
or
or
call
mov
fldcw
sub
and
xor
shl
les
ljmp
cmp
leave
cmc
mov
pop
imul
stos
mov
int
push
cli
lahf
inc
fisubrs
mov
mov
mov
les
xchg
sub
shll
arpl
fcoms
idivb
pop
xchg
lea
xchg
dec
push
mov
insb
xchg
jge
and
sbb
jl
mov
cmpsb
iret
or
lods
icebp
pop
lods
popw
stos
shr
mov
and
or
in
or
sbb
or
std
add
adc
jnp
insb
es
pop
ret
js
in
fstl
ret
leave
insb
cmpsl
loopne
insl
cltd
ja
mov
mov
out
xchg
pop
sbb
movsb
outsb
mov
test
adc
or
popa
stos
add
add
bnd
in
pop
sbb
mov
js
or
adc
and
rolb
dec
lock
cmpps
jb
inc
xchg
cmpsl
push
ljmp
fisttps
stos
dec
xor
pop
je,pn
mov
cltd
fdiv
out
lea
ds
dec
xchg
add
decb
loopne
inc
dec
adc
sar
std
insb
mov
xchg
daa
or
lret
je
stos
das
fsubrs
or
dec
and
in
jl
inc
enter
sub
gs
shl
pushf
cmpsb
add
mov
push
leave
sarb
lea
mov
fidivrl
sbb
loop
inc
icebp
push
test
mov
jns
push
jg
sahf
std
imul
js
mov
ja
pop
xchg
xchg
das
jmp
mov
cmp
push
jnp
jne
push
jbe
xor
idivb
adc
sub
and
add
lahf
out
les
sbb
outsb
idivl
or
mov
fcomps
jl
std
rcll
mov
cwtl
cmpl
notl
ret
dec
aad
sub
mov
cmp
in
xchg
mov
mov
leave
mov
push
les
mov
mov
repz
mov
push
mov
push
and
das
cmc
mov
mov
jne
mov
jge
xlat
out
jl
mov
lods
insb
movsb
sti
cli
mov
sbb
cmpsb
adc
cmp
sbb
inc
or
push
std
sbb
jmp
aam
cmp
cmp
sbb
add
int3
arpl
in
in
pop
adc
add
mov
popf
xor
or
test
cmp
xchg
cmp
or
stos
fldenv
bound
push
daa
ja
mov
daa
pop
push
jnp
ret
mov
xorb
push
xchg
pop
pop
lds
lcall
jle
xchg
inc
lods
xchg
pop
add
adc
dec
data16
xchg
sbb
lahf
xor
add
sub
mov
push
xor
inc
lods
iret
std
push
inc
dec
push
jmp
mov
mov
bswap
imul
in
repnz
sbb
jo
jae
push
sti
scas
pop
mov
fdivs
pushl
cs
cmpsl
mov
cmpsb
push
ljmp
popf
arpl
dec
imul
dec
cmp
incb
test
stos
push
stos
xchg
mov
cwtl
repz
lods
cld
add
lret
scas
push
popf
sbb
push
pop
pop
pop
sar
arpl
outsl
sub
mov
cmpsb
stos
or
rcll
mov
cmp
out
mov
sbb
mov
mov
pop
adc
push
pop
jns
fiadds
addr16
lret
stos
pop
ss
lahf
sbb
inc
pop
scas
add
xor
mov
jge
int3
test
nop
js
push
mov
push
pop
sub
jle
fdivl
inc
xchg
xchg
jns
inc
incl
push
outsl
scas
mov
and
lods
add
enter
in
stos
stos
jae
fwait
cmp
es
xor
arpl
pop
push
add
xchg
loop
lock
in
xchg
iret
iret
xchg
push
lahf
and
out
xor
mov
add
mov
aad
mov
enter
dec
icebp
mov
lea
mov
xor
iret
pop
pop
std
jbe
cmpsl
inc
cld
sub
loope
sub
add
int
inc
xlat
ret
mov
popf
add
push
adc
stc
lret
sub
nop
cli
fwait
cmp
or
icebp
adc
js
and
dec
test
pushf
pop
lcall
stc
out
xchg
xor
push
and
rol
jne
xorl
cwtl
cmp
inc
jp
icebp
xchg
mov
fs
xor
mov
scas
popf
xor
mov
gs
jns
leave
or
movl
dec
stos
xchg
jb
outsb
pop
push
mov
adc
loope
leave
into
ljmp
fisttpl
in
adcl
rolb
mov
out
lret
mov
cmp
fcomps
adc
fstps
out
mov
loop
rcrb
pop
and
or
lds
and
mov
add
push
mov
popa
jle
or
rolb
sbb
or
in
jmp
aad
dec
jns
cmpb
fbld
icebp
pop
sarl
mov
scas
fdivrs
cs
cmpsb
adc
mov
decl
ret
std
dec
pop
mov
imul
sahf
pop
stos
adc
mov
mov
mov
rcl
jecxz
cli
rcrb
push
int
or
add
xchg
jg
dec
negb
aad
out
sbb
shlb
mov
loopne
out
loopne
data16
stos
je
xchg
mulb
jae
sbb
fwait
jg
add
xor
dec
outsb
jo
adc
sub
xchg
or
aas
call
mov
sub
or
dec
lods
sub
dec
ret
stos
fsubs
and
mov
daa
xor
mov
dec
lods
cmpsb
add
or
imul
cmpsl
mov
or
xchg
out
inc
sub
mov
aas
or
enter
scas
pop
jno
adc
inc
in
lahf
popa
int3
roll
shll
inc
notb
push
repz
pop
lods
sbb
into
out
add
inc
cmp
lea
js
and
jnp
pop
test
cmpsl
sub
loop
xchg
fisubl
add
push
inc
int
insl
cltd
nop
jb
jecxz
push
mov
mov
push
mov
out
repz
pop
fwait
push
pop
loop
mov
cmp
cmp
pop
loop
dec
lds
cmp
jb
xchg
mov
add
outsb
mov
dec
mov
push
jmp
and
nop
roll
sbbb
lock
mov
out
popf
and
mov
jo
inc
or
loop
push
loopne
sbb
loope
stc
int
stos
loop
frstor
loopne
xlat
adc
shrl
fs
jl
cmp
inc
dec
test
fistl
add
ret
shrb
sbb
mov
dec
xlat
fisttps
lret
sub
dec
loop
test
mov
mov
xchg
cmpsb
fs
jns
pop
test
leave
repz
insl
addb
mov
daa
aad
xor
hlt
lahf
dec
sti
mov
or
sub
leave
pop
adc
out
inc
inc
push
scas
imul
ret
pop
and
into
lcall
cmpsl
pop
addr16
dec
jl
leave
push
xchg
or
mov
lret
mov
fistl
sbb
cmp
loope
pop
lds
in
repz
rorb
jge
test
test
fistps
pop
cmc
inc
mov
pop
gs
pop
push
push
push
lahf
rcrb
shlb
or
or
jae
mov
fs
or
adc
xor
sub
xchg
out
std
icebp
dec
add
dec
sti
pusha
push
inc
sub
push
arpl
dec
add
addr16
cmp
xchg
popf
fmull
out
mov
fsts
xor
sub
push
ds
and
lahf
test
data16
sbb
movsb
sub
mov
repnz
xchg
xchg
fwait
or
pop
jge
je
xor
add
mov
or
push
xor
mov
out
add
sarl
mov
dec
jmp
frstpm(287
call
cld
das
xor
inc
scas
lcall
cltd
mov
movsl
in
sbb
popf
jae
stos
ror
sbb
fisubl
rcrl
hlt
aas
mov
inc
std
cli
add
fsubp
stos
mov
loop
adc
cltd
lret
nop
jne
mov
push
inc
adc
mov
out
jecxz
cmp
gs
mov
mov
lods
jmp
xor
adcb
cwtl
adc
xchg
insl
adc
mov
sar
jns
inc
push
out
pop
mov
mov
jg
xor
add
lcall
push
sub
inc
pop
cmpsl
adc
adc
addr16
mov
clc
into
bound
arpl
inc
sarl
cmp
dec
sahf
push
sbb
adcl
xchg
aaa
sbb
jecxz
cltd
ret
adc
jno
pop
fnstsw
cmp
aam
inc
fiaddl
stos
insb
xchg
jno
test
pop
fidivrl
and
mov
pop
movsl
sub
test
xor
push
mov
cltd
sbb
leave
mov
or
dec
xchg
and
jl
fwait
xchg
xorl
in
in
mov
xchg
test
and
xchg
cmpxchg
fwait
mov
xor
mov
mov
or
pop
out
imul
jp
xchg
pop
pop
scas
or
repz
outsb
or
mov
outsl
push
mov
dec
mov
test
lods
mov
or
call
mov
neg
jbe
cli
icebp
das
push
xchg
adc
stos
lahf
xchg
aas
test
push
pop
lret
jecxz
insl
and
in
dec
xor
xchg
lods
fidivl
adc
inc
pop
jnp
or
ja
mov
arpl
pop
lods
sbb
mov
in
cltd
adc
fs
dec
or
lods
popa
jge
jnp
mov
cld
ss
xor
mov
pop
xchg
fistl
and
out
mov
xchg
mov
inc
popf
jp
insb
sbb
sub
sbb
inc
jnp
lahf
lret
adc
push
cltd
and
xlat
adc
enter
xchg
and
pop
ret
xor
push
or
int3
jnp
or
mov
jnp
xchg
push
rorl
pop
adc
pushf
aad
jecxz
xor
or
adc
ret
cltd
sti
push
in
hlt
fdiv
jp
and
jmp
mov
cld
or
pop
outsb
cmpsl
xchg
fldl2e
dec
roll
shl
or
cmpsl
pop
xor
adc
adc
adc
lcall
pop
addr16
fisttps
or
orl
lds
pop
loopne
pop
mov
mov
fsqrt
mov
rclb
in
mov
xchg
jecxz
inc
fildl
lcall
daa
dec
jbe
insb
ds
cmp
push
scas
xlat
jae
ret
popf
sub
lods
xor
daa
aad
pop
dec
xlat
mov
pop
jg
cmp
jg
cs
or
pop
ds
mov
ds
sbb
lods
xchg
ljmp
jecxz
into
cwtl
mov
jl
clc
mov
xchg
mov
das
js
inc
fcompl
and
sbb
xchg
jg
inc
shrl
sub
xor
ret
push
out
xchg
nop
jmp
inc
inc
hlt
dec
cmp
adc
mov
hlt
push
es
outsb
mov
push
inc
rolb
outsb
push
test
out
das
mov
ret
or
gs
cmp
and
js
outsb
test
xchg
clc
inc
add
mov
or
sbb
stos
jmp
sbb
jo
mov
test
jns
outsl
insl
cmpsl
add
sub
jnp
arpl
mov
daa
mov
ror
cmpl
cmp
ds
push
cwtl
mov
mov
push
mov
inc
push
insb
or
cmp
sbb
fdivrl
in
inc
push
cltd
sbb
popf
mov
es
xor
inc
rorb
jp
xorl
sub
mov
inc
xchg
es
jb
xor
popf
push
loope
stos
sbb
bound
dec
imul
xor
nop
scas
js
pop
popa
push
imul
ret
mov
dec
loop
mov
inc
fwait
cmpl
pushf
push
inc
std
or
repz
fs
cmpsl
popa
in
cli
fldenv
or
mov
add
or
or
loopne
adcb
rclb
mov
arpl
pusha
dec
push
jb
add
sahf
arpl
xchg
inc
jb
js
lods
fldlg2
into
jae
or
fsubrs
popf
aad
lahf
or
sbb
fisttps
sbbb
arpl
push
in
dec
loopne
mov
jge
sub
mov
fcompl
rorb
roll
xchg
mov
repz
inc
and
xor
movsw
dec
mov
adc
outsb
jbe
push
lcall
or
fisttps
dec
pop
in
push
inc
shrb
icebp
fwait
cmp
xor
xor
inc
cmp
iret
jae
incb
sarb
mov
sub
xlat
movsl
push
loopne
sub
and
out
repnz
mov
dec
cmp
or
cld
xchg
mov
imul
or
sub
push
pop
pop
setp
pop
test
mov
xchg
xor
and
push
rcll
pushf
in
xchg
mov
inc
int3
loop
dec
in
inc
arpl
mov
pop
adc
and
icebp
mov
subb
or
mov
les
out
add
ljmp
popa
gs
int
outsb
sub
mov
push
aaa
pop
movsl
popa
jb
mov
ret
lret
or
jl
cmpsb
adc
cmc
std
es
push
xor
mov
mov
pop
dec
jno
jl
mov
or
out
cmp
add
mov
push
mov
aad
mov
sbb
sbb
scas
nop
testl
sub
and
xchg
repz
inc
sarb
xlat
gs
dec
mov
ficomps
or
daa
stos
lock
fdivr
hlt
ret
xor
testl
xchg
outsl
cmp
adc
mov
int
jge
scas
xchg
sub
sbb
pop
push
fsubp
adc
adc
fldt
dec
call
sbb
fildl
insl
sbb
test
jge
cmc
sub
pop
pop
imul
jg
cmp
sbb
pop
movsb
mov
mov
pop
jecxz
cmc
icebp
or
cmpsb
imull
sub
lds
pop
push
sub
insb
push
cmpsl
cmpsl
in
adc
fsubrs
push
mov
and
into
or
es
imul
data16
stc
stos
enter
xor
and
jae
fcompl
mov
or
xor
sti
data16
mov
leave
scas
hlt
push
mov
inc
mov
mov
mov
mov
arpl
mov
push
pop
push
xor
push
arpl
pusha
pushf
pop
fidivs
shlb
dec
xor
sahf
jne
es
mov
sbb
sahf
add
js
pusha
xchg
adc
mov
xchg
roll
stos
icebp
xchg
lret
mov
movsl
addl
shl
in
test
jbe
adc
mov
jae
push
xlat
pop
stos
daa
mov
rcl
and
das
dec
ss
dec
mov
int3
cmp
dec
inc
in
push
lret
mov
scas
aaa
sbb
call
mov
mov
and
shrl
jg
jl
mov
or
cs
scas
pop
out
pop
data16
xchg
and
xchg
add
dec
jne
xor
push
cmp
lcall
das
imul
push
mov
dec
lahf
inc
sar
jae
mov
loope
fwait
cmp
or
pop
adc
push
inc
rcr
or
mov
mov
in
add
js
sbb
shrb
dec
lods
lret
out
out
outsb
sub
sbb
rcll
push
stc
push
xlat
jmp
loope
cmp
xchg
das
aam
dec
cmp
popf
sub
pop
pop
lret
mov
xorb
mov
movsb
icebp
mov
les
out
cli
out
mov
in
mov
dec
popa
pop
arpl
mov
and
pop
jb
cld
inc
psubusw
and
leave
fsubrs
mov
lods
mulb
adc
mov
ja
lods
iret
push
pop
shrl
movsl
or
xchg
shrb
jbe
pusha
push
sti
lds
aaa
jo
adc
filds
mov
pop
push
push
sahf
adc
je
movsb
jle
insl
jp
push
ljmp
ljmp
loopne
dec
enter
movsl
push
jl
lret
xchg
movsl
push
or
divl
xchg
fs
cmp
insl
lss
out
lahf
lods
fidivl
out
stc
xchg
sub
test
loope
in
out
scas
xor
cmpl
lcall
out
adc
rorl
dec
pop
leave
jmp
inc
sbb
inc
push
inc
xlat
sub
insl
insb
and
jne
xor
popf
lock
dec
lock
stc
dec
fcompl
movb
mov
mov
mov
shll
in
aas
adc
jle
cltd
inc
stos
adcl
jo
sub
push
inc
in
mov
jbe
mov
shlb
sub
popf
sub
in
rolb
mov
out
sarl
pop
loopne
pop
rcl
out
xlat
push
lret
movsb
shll
mov
mov
adc
mov
scas
or
mov
addr16
push
nop
sub
push
or
adc
orl
es
cld
pop
sbb
aad
pop
repnz
inc
mov
xchg
jae
xor
mov
pop
sub
pop
jl
cs
out
jbe
dec
aaa
adc
push
adc
popa
call
ljmp
jae
xor
adc
shlb
pop
lds
mov
jno
in
aam
lea
sub
pop
aad
xchg
adc
cmp
in
leave
sbb
adcb
addr16
lcall
lods
sarl
xlat
repz
out
mov
movl
jnp
xor
ss
mov
outsb
mov
test
pop
lahf
sbb
insb
push
jns
lock
ljmp
vphaddubq
rorb
mov
lock
xor
js
add
leave
in
and
std
lret
das
cld
fistpll
fcomps
jle
fisttps
rcr
jmp
pusha
cmp
ja
imul
dec
mov
stos
ret
imul
mov
inc
fisttpll
lea
lds
xor
or
or
jne
mov
fistpl
mov
out
jp
cmpsl
xor
inc
sarb
push
mov
pop
pop
out
xchg
inc
jle
dec
push
push
inc
icebp
sbb
int3
lds
mov
fstpt
cmpb
add
cmp
fdivrs
jae
mov
test
sbb
cmp
sub
leave
push
inc
sbb
adc
jo
mov
mov
ret
call
cmp
push
sbb
pop
xchg
cmp
cmp
outsb
stos
jb
mov
bound
push
movsl
xor
jge
lock
aad
dec
setp
repz
lea
mov
or
fldcw
js
push
fmull
negl
or
jae
sbb
dec
mov
xor
cld
fstpt
mov
je
xchg
popa
add
insl
add
sub
mov
mov
imul
add
adc
mov
test
insb
jg
jmp
and
outsl
jl
mov
pop
jecxz
dec
mov
loop
mov
stos
aad
jge
add
or
add
pop
lret
mov
cmp
mov
scas
ficoml
cmp
mov
fs
daa
xchg
add
shl
cwtl
fucomip
pop
pop
push
push
pop
add
inc
xor
shlb
jmp
jl
ljmp
cld
pop
cmpsl
xchg
sbb
dec
jg
sbb
sbb
pusha
cmp
test
mov
test
cli
jo
pop
dec
ret
adc
mov
movsb
cld
inc
mov
out
call
rcrb
movsb
into
addr16
movsl
lahf
jl
mov
add
imul
cmp
mov
cmpsl
cld
daa
pop
or
mov
andl
push
adcl
jno
pop
cmp
pop
jle
icebp
inc
jbe
js
adc
shrb
gs
sub
aad
testb
push
aas
pop
jp
add
aam
sub
mov
lock
or
push
clc
push
shlb
add
dec
sub
sub
call
in
ljmp
adc
and
ja
pop
stos
jnp
jecxz
fs
sbb
cmc
int3
imul
push
lcall
push
pop
lcall
adc
sbb
in
int3
mov
push
push
insb
mov
mov
jg
dec
arpl
mov
mov
lret
fdivs
xchg
jg
scas
fwait
pop
and
sbbl
in
cs
mov
jb
loopne
push
hlt
adc
aad
adc
sahf
lret
fwait
pop
push
xchg
std
push
pop
loope
mov
mov
rolb
inc
pop
cwtl
add
test
dec
pop
push
stos
xor
ja
or
add
mov
ss
addr16
es
cld
pop
mov
js
cmp
fldt
or
out
ja
sahf
fistpl
add
add
mov
fst
gs
jns
into
mov
jae
sub
lcall
jl
jb
sub
pop
pop
rolb
in
jns
test
iret
rol
pcmpeqw
sub
loop
test
mov
imul
movsl
sbb
sbb
lcall
test
arpl
xor
mov
aad
dec
test
insb
jae
push
sbb
cs
ret
sub
xor
mov
jle
hlt
mov
or
clc
inc
lahf
pop
xor
cmp
pop
push
insb
inc
sbb
dec
in
xor
repz
shrb
rcrl
add
or
shlb
fcmovne
xor
xchg
popf
jmp
add
cmp
fcoms
fidivl
test
add
inc
ret
clc
outsl
pusha
inc
pop
push
cmp
int
aad
sbb
add
mov
ljmp
mov
sbb
cli
sbb
xchg
aas
add
dec
inc
jnp
stc
xor
dec
and
push
cmpsl
fcoms
fistl
push
mov
lds
inc
or
push
rcrb
cwtl
pop
lods
jge
cli
ret
js
mov
subb
inc
xorb
inc
or
dec
jg
dec
mov
sbb
sbb
outsb
mov
adc
jo
insl
lds
adc
add
aas
mov
cmpsl
push
out
in
out
mov
in
sub
push
mov
xchg
clc
adc
out
mov
jns
sbb
test
mov
push
cmpsl
jmp
adc
test
push
gs
dec
shrb
mov
repnz
sub
push
cmpsb
sbb
mov
rorb
scas
adc
loopne
push
and
push
mov
sub
out
and
iret
test
out
addr16
das
mov
add
in
jnp
arpl
sahf
mov
xor
loopne
xchg
es
aam
or
lret
in
jbe
fistps
insb
mov
mov
ss
cld
fimull
jle
jnp
push
xchg
repz
in
mov
hlt
cld
repz
ret
dec
jmp
aad
inc
add
mov
pop
push
fistpll
sbb
mov
push
mov
out
sub
push
popa
loope
cmp
adc
push
rorb
xor
icebp
rcr
cmp
push
mov
add
sti
xor
call
lcall
dec
stc
mov
xchg
and
shlb
and
enter
xchg
mov
loop
jecxz
cmp
popa
popf
and
inc
imul
mov
inc
xlat
pop
outsb
sbb
es
aaa
outsl
repz
das
add
xlat
sbb
imul
fbld
adcl
mov
or
lahf
pop
repz
fcmove
cld
sub
scas
outsb
dec
dec
cmp
jnp
and
add
cmpsl
call
jb
aas
jb
fwait
fs
jb
jae
push
movsl
mov
fwait
pop
or
mov
lock
clc
ja
mov
je
insb
stos
das
dec
xchg
xchg
stc
xor
xlat
sbb
data16
jne
push
and
cmpl
popa
popf
in
mov
adc
push
cmp
jecxz
sti
cmp
xchg
lods
pop
sbb
mov
enter
mov
les
cmpsl
cmp
pop
inc
sarl
pop
adc
enter
inc
and
sbb
call
int
mov
fcompl
mov
jmp
stc
out
das
add
std
icebp
pop
enter
mov
mov
fdivl
add
aas
movsb
fistl
imul
sar
mov
add
imul
int
mov
xchg
mov
fsub
dec
aad
xchg
scas
lock
push
jnp
mov
sub
sub
mov
pop
push
jp
cwtl
mov
fdivrl
test
xlat
js
inc
loope
push
ss
lods
and
in
pushf
push
mov
jbe
out
pop
ljmp
xchg
icebp
cltd
ja
jp
pop
mov
roll
in
or
mov
inc
cmp
fsubp
mov
enter
arpl
pusha
rclb
movl
sub
es
push
pop
pop
ror
rclb
inc
mov
ss
sbb
sub
cmp
push
sbb
movsb
adc
cmc
int
loopne
cmpl
aad
roll
mov
daa
cmpsl
js
xchg
out
dec
cs
and
and
rolb
mov
cs
insl
cmp
adc
mov
xlat
pop
int
data16
xcrypt-cfb
cmpsl
addr16
xchg
adc
mov
loope
mov
popl
jns
and
lret
stc
add
pop
fmul
addl
cmp
add
imulb
lahf
mov
es
pop
jmp
addb
ljmp
mov
mov
or
ss
int3
fldenv
enter
mov
shl
pop
mov
jge
xor
shll
lcall
mov
mov
mov
jne
adc
outsb
mov
arpl
xor
shrb
int3
jge
mov
mov
bnd
fnstcw
push
fidivs
jp
rcll
std
ficompl
xor
and
xchg
cs
flds
lds
stos
xchg
cwtl
cmp
sub
jecxz
mov
sahf
lcall
mov
insl
aas
int
cld
lret
inc
out
xchg
dec
pop
jne
test
into
fstpl
inc
test
xor
xchg
fbstp
push
mov
loopne
xchg
lds
leave
int3
and
jp
test
mov
push
xchg
pop
das
mov
js
cmp
xchg
jecxz
xor
and
aad
faddp
cwtl
jbe
jg
add
repnz
inc
mov
dec
xor
cltd
push
and
sbb
sar
dec
push
pop
push
jbe
fmuls
and
sahf
sahf
mov
xchg
mov
jnp
push
lock
jae
lods
jl
push
jmp
into
scas
mov
test
and
test
push
add
sti
xor
mov
mov
and
mov
sub
sub
ja
xchg
xlat
jne
add
and
fcom
inc
or
cmpsb
sub
push
push
xor
cmp
adc
xor
mov
pop
jnp
push
jns
sub
adc
scas
adc
mov
pop
jo
data16
bound
stc
test
scas
jp
mov
sbb
fdivrl
test
cltd
stc
aas
dec
pop
shlb
push
es
popf
in
add
jp
add
push
xorb
or
inc
xor
das
mov
div
add
mov
push
outsl
sub
fdivrl
in
int
jo
sbbb
add
shrl
mov
fs
sbb
push
nop
fnsetpm(287
dec
fmuls
mov
xchg
and
adc
mov
dec
or
mov
pop
adc
icebp
sub
pop
inc
fstl
cmp
hlt
imul
sbb
in
xchg
mov
das
hlt
movsl
int
inc
cmpsb
inc
les
sub
rorb
call
popf
rorb
dec
shrb
and
sub
push
mov
gs
sbbb
sti
add
inc
sti
fdivrs
xchg
xchg
sub
repz
lea
aas
or
dec
pop
sub
mov
and
push
enter
jae
dec
test
in
mov
sub
xchg
and
inc
mov
movsl
xchg
pop
cwtl
cli
andb
mov
push
push
lods
or
sbbb
aas
into
push
jecxz
ror
dec
aas
push
add
lret
loope
fmuls
lret
stc
popa
addl
mov
jl
cltd
xchg
rclb
xchg
jle
ret
rolb
out
clc
xchg
pop
das
adc
inc
mov
int3
rorl
lods
jae
inc
or
fisubs
popa
cmc
pop
cmp
cmp
out
icebp
push
and
add
jns
push
test
inc
push
lods
call
fstps
inc
adc
in
ds
inc
enter
push
sbb
add
addr16
adc
insb
and
mul
sub
sahf
scas
imul
add
ficoml
ja
pop
mov
push
push
and
jl
sub
sti
jg
popf
pop
jge
lock
sub
subb
adc
dec
xchg
mov
and
cmp
js
shrl
sbb
in
adc
push
js
mov
fldl
dec
int3
xor
push
jp
popl
rclb
cs
fs
and
ja
adc
fwait
add
stos
jmp
jmp
pop
push
and
dec
sbb
push
mov
or
dec
jl
incl
dec
mull
mov
jl
cmpsl
loopne
ret
mov
sbb
pop
rcll
jmp
mov
jbe
mov
mov
aas
inc
unpcklps
cwtl
jo
push
pop
aaa
lret
insb
movsl
dec
xor
out
std
mov
add
cmp
ds
mov
adc
cmc
add
mov
ja
pop
addr16
data16
push
and
int3
mov
stos
ds
xchg
mov
and
scas
and
imul
sti
flds
out
sti
aaa
fdivrl
jnp
out
nop
pop
pop
sub
std
jg
add
jb
in
ret
je
mov
jae
shlb
or
pop
jne
adc
in
xchg
mov
cs
pop
and
movsl
mov
add
or
lret
flds
cld
xor
lcall
stos
inc
xchg
mov
out
scas
mov
jns
xor
movsb
test
mov
out
sbb
lret
pop
xchg
sbb
jmp
jno
xchg
enter
xor
jno
push
inc
and
aaa
arpl
xor
stos
loope
lea
jne
mov
ljmp
ja
sub
xor
movsl
mov
sbb
jb
jg
nop
fwait
test
push
incl
pop
call
pop
aam
cmc
jp
jnp
mov
repz
xor
adcl
in
lods
rcrb
push
mov
pushf
ss
add
data16
inc
in
test
je
out
ja
pop
mov
rcll
cmp
shrl
in
ljmp
pop
inc
flds
jg
in
notl
repnz
lods
jo
test
bound
xchg
xor
mov
jmp
insl
mov
jecxz
and
cltd
mov
xchg
cmp
lahf
and
js
movsl
lods
mov
jns
mov
mov
sahf
imul
xchg
nop
js
mov
pop
push
and
bound
xchg
lods
jmp
sbb
cs
out
fucomip
lods
lds
fdivl
push
inc
xchg
loopne
fdivrp
cli
fisttps
outsb
pop
cmpsl
cmp
push
sbb
rcrl
adcl
ds
sub
fimull
push
jno
addr16
mul
out
call
lcall
jno
xlat
jae
mov
push
addr16
sub
lsl
push
scas
adc
dec
mov
adc
adc
outsl
xor
inc
xor
idiv
inc
lock
stc
cmp
xlat
mov
push
in
sti
dec
mov
cmp
push
push
push
shrl
pop
push
sub
in
insl
xchg
jb
aam
push
fists
icebp
sub
jg
test
stos
jnp
and
jmp
ds
and
push
or
jl
mov
add
pop
and
enter
xchg
xchg
add
lret
pop
movsb
adc
jns
call
inc
stc
mov
jmp
push
mov
fs
test
add
mov
insb
call
scas
dec
adc
inc
int3
push
test
loope
xchg
ficomps
repz
jnp
xchg
push
and
pop
fiaddl
add
add
fsub
std
ds
test
es
mov
aam
mov
lret
mull
loopne
ja
addb
es
movl
jo
aas
in
imul
ret
aam
push
sahf
adcb
aad
mov
dec
outsb
int
xchg
sbbl
stos
or
mov
xor
leave
addr16
mul
dec
inc
push
pop
sbb
sbb
in
mov
hlt
fdivp
push
cltd
push
fistl
jecxz
rclb
cs
push
mov
or
ffree
push
mov
adc
cmp
pop
sbb
mov
aaa
push
aam
dec
scas
push
pop
sbb
jmp
push
sbb
mov
adc
jo
repnz
mov
lock
dec
add
xchg
cmc
mov
scas
cmp
adc
pop
lock
jmp
pop
cmp
mov
dec
sub
iret
xor
scas
jo
cwtl
mov
jo
mov
xchg
dec
aaa
hlt
adc
mov
lods
sub
pop
and
fildll
fs
inc
jmp
cli
das
mov
mov
dec
sbb
gs
inc
cwtl
and
mulps
cmp
mov
test
shr
add
test
lods
inc
stos
jno
adc
xchg
jnp
pop
popf
mov
pop
pusha
insl
incb
push
xchg
sub
cld
lea
mov
jle
repnz
lds
icebp
add
adc
test
divl
or
xorb
sbb
jl
inc
jae
or
arpl
je
data16
icebp
dec
and
lds
adc
fwait
int3
mov
add
xchg
dec
popf
aam
pop
adc
sahf
ficomps
imul
and
mov
je
mov
inc
sub
test
mov
cmp
cmpsb
or
push
sti
pop
jnp
push
sbb
arpl
jmp
xorb
lock
cmp
add
pusha
dec
or
leave
xchg
xchg
inc
xor
mov
in
inc
mov
dec
cmpb
loopne
ds
incb
mov
add
inc
xchg
lfs
add
add
jns
add
sbb
in
pop
pop
data16
xor
push
push
fsubp
nop
test
adc
or
out
loop
aaa
jl
jbe
mov
pop
outsb
xor
in
sahf
nop
push
ficompl
pop
push
mov
mov
jbe
enter
inc
xchg
repnz
xchg
fimuls
xor
add
and
xor
and
sti
sahf
test
flds
movsb
popf
xor
sub
std
add
shl
jbe
mov
sbb
xchg
into
add
lods
jae
dec
jo
sub
add
lds
mov
sub
adc
jmp
pop
or
lods
cmp
cltd
add
cmp
fs
ds
js
adc
es
mov
das
xlat
cmpsl
imul
mov
aad
mov
lret
dec
pop
push
and
xor
push
xor
das
nop
push
or
jbe
add
jl
cmc
fldl
xchg
insl
leave
adc
pusha
test
mov
jne
mov
out
ja
sahf
cmp
xorb
data16
mov
sub
mov
sbb
adc
inc
inc
sar
das
in
cmpsb
mov
popf
ficoml
xchg
shrl
int3
cmp
insb
push
sahf
add
push
pop
mov
sahf
repz
dec
pop
test
shlb
pop
lret
push
movsl
hlt
rorl
push
mov
or
mov
stos
pop
pushf
inc
pop
xchg
jecxz
loopne
fs
cmp
and
or
adc
aad
cltd
jo
movsl
ret
iret
mov
mov
jecxz
fcompl
lods
xchg
mov
xchg
scas
mov
xchg
pusha
or
fs
loope
xchg
cmp
mov
bnd
cmpsb
sbb
sbbb
mov
add
jae
mov
jp
lcall
insb
adc
adc
mov
mov
xor
jnp
je
fstp
ljmp
fnstcw
and
jp
push
push
cmpsb
pop
xchg
jno
fmull
test
mov
decl
and
cmc
push
pop
xchg
in
shrl
sbb
add
cmp
sbb
mov
iret
adc
cmpb
xchg
push
mov
ret
push
je
icebp
rolb
lea
jp
push
aas
fs
sbb
paddq
adc
popf
adcl
mov
mov
and
push
adc
push
js
mov
sarb
dec
fcmove
add
in
rcrb
int
pop
and
dec
cmpsl
push
nop
add
sub
mov
lods
xor
jl
inc
push
xchg
cmpsl
aaa
jge
stos
jecxz
jp
popa
jmp
outsl
jmp
jae
incb
jl
nop
lea
cbtw
fs
adc
loope
push
pop
imul
lahf
std
or
fsubr
pop
in
and
sbb
lock
mov
lods
or
subb
popa
clc
mov
repnz
or
sub
pop
push
cs
fistpl
mov
psrlq
dec
mov
aaa
xor
mov
inc
and
push
pop
inc
ss
gs
pop
cmp
jp
mov
test
popa
fiadds
mov
mov
xchg
mov
sub
rorl
xchg
mov
sub
push
mov
inc
cmp
lds
out
and
lret
cmpsb
mov
pop
in
or
lcall
lods
pop
outsb
mov
inc
icebp
xchg
aad
xchg
rcll
enter
jbe
pop
jne
mov
popa
push
or
aas
push
lods
lret
jno
pop
hlt
lods
push
gs
in
dec
fwait
xchg
adc
pop
fildl
lcall
popa
mov
xchg
outsb
mov
dec
fs
jo
xchg
sbb
mov
mov
std
mov
inc
mov
lods
into
adc
enter
ss
popa
test
mov
sahf
pop
scas
addl
hlt
push
jo
or
cli
and
push
fs
ljmp
stos
mov
sbb
jge
arpl
jmp
outsl
pop
or
iret
pop
and
int
nop
or
sub
jbe
and
jo
pop
push
mov
adcb
fbld
xchg
mov
push
push
fcoms
dec
mov
sbb
dec
push
sarl
loop
add
mov
insb
arpl
add
fisttpl
call
xor
fdivs
inc
shl
sub
lods
mov
xor
jl
in
pop
jg
xor
ss
jbe
stos
adc
dec
xchg
xchg
push
cli
mov
sti
adc
lock
push
sti
or
cltd
push
mov
sub
popa
add
mov
in
push
sbb
pop
fbstp
outsl
cmp
ljmp
roll
push
fwait
lret
fs
sub
adc
clc
cwtl
out
lock
ret
scas
xchg
lods
xlat
inc
repnz
cmp
push
add
push
push
add
fildl
je
insl
cmp
clc
ret
and
negl
lret
adc
clc
or
mov
ja
sbbb
cwtl
add
clc
sub
fidivl
mull
loop
in
sub
pop
nop
mov
mov
daa
cltd
push
inc
pop
lret
repnz
push
jns
movsb
push
cmc
dec
sti
clc
mov
call
mov
hlt
ja,pn
gs
xor
out
aaa
cmpsb
enter
xacquire
iret
rolb
pop
sub
sarb
sbb
cmp
arpl
daa
insb
mov
mov
sbb
or
lds
cwtl
sub
jmp
mov
jge
pop
jbe
add
cmp
leave
subb
dec
leave
lods
in
rcll
test
rcll
test
sti
je
push
or
insb
sahf
jle
mov
stos
out
or
iret
iret
cmp
xchg
ss
xchg
and
mov
loope
add
and
cmp
std
pop
in
pop
ds
fdivr
inc
mov
and
xor
jle
mov
jo
adc
xchg
hlt
jge
inc
sahf
sbb
xchg
mov
imul
ja
scas
mov
mul
or
inc
and
scas
mov
xorb
jo
pop
lahf
cmpl
push
in
in
xchg
mov
fwait
inc
int
in
popa
xchg
xchg
lret
dec
rcll
inc
jmp
das
ss
adcb
mov
popa
stos
xlat
xchg
xchg
mov
mov
sub
xor
sbb
lcall
enter
dec
mov
out
fadd
fs
in
into
scas
push
btcl
and
fucom
mov
test
in
jne
lcall
sub
dec
and
pushl
outsb
pop
int
mov
in
cmp
push
insb
and
pop
or
mov
xchg
fldl
fisubrs
out
fadds
xchg
cli
jge
call
iret
inc
js
int3
mov
negl
push
mov
lds
rclb
ret
and
pop
imul
inc
addb
das
inc
adc
xlat
mov
pop
fmuls
ficoml
sbb
mov
xchg
cmp
push
xchg
pop
xchg
loope
call
pop
mov
sbb
cwtl
inc
add
popf
insl
xchg
inc
nop
adc
jecxz
or
andl
add
int
fcmovne
mov
or
int
xor
mov
xor
inc
and
stos
dec
mov
jl
xchg
mov
loopne
cmc
sbb
jge
mov
ss
cld
or
flds
addl
pop
and
daa
cmp
insl
xor
cltd
fwait
subb
xor
into
addr16
clc
pushf
in
imul
pop
mov
nop
inc
mov
jg
cld
hlt
xchg
andl
scas
movsl
pop
mov
ljmp
test
sarl
jnp
icebp
fwait
xor
sub
mov
cmpsl
shll
loop
imul
out
xchg
or
lds
sbb
imul
jp
sub
lock
xor
and
leave
jae
shl
sahf
sub
sub
xchg
push
out
clc
lret
push
mov
out
jo
inc
cltd
outsb
ss
push
insl
xchg
dec
repz
ljmp
jg
adc
cmp
in
test
cmp
aas
cmp
dec
xorl
lahf
xchg
sbb
cmp
xlat
je
jge
repnz
rcrb
xchg
sbb
outsb
push
lahf
dec
fdivs
mov
jp
es
mov
mov
pop
mov
push
xor
je
inc
push
ret
mov
adc
xchg
jecxz
jg
xor
in
jb
mov
test
xor
insl
mov
add
loopne
xchg
mov
imul
orl
push
and
dec
xchg
test
xlat
sahf
pop
movsl
fs
sub
daa
ret
addr16
ret
lock
and
leave
movsb
mov
rorl
cmp
push
cmpsb
push
out
jl
shr
insl
push
push
test
pop
les
pushf
sbb
es
xor
xchg
jmp
sbb
pop
and
or
scas
cmp
rcrl
iret
or
in
inc
adc
jb
sbb
sbb
mov
in
sbb
sbb
cmp
mov
xchg
movsb
sbb
dec
dec
das
mov
ret
repz
mov
decl
or
jl
js
leave
jp
filds
dec
cmc
call
adc
and
push
stc
imul
sbb
lock
cmp
lea
push
fadds
add
ss
lcall
mov
stos
add
cs
stos
jnp
lret
enter
dec
std
or
pop
fistps
fstp
push
mov
imul
sbbb
or
push
sub
push
fcoml
std
ljmp
sbbl
fidivrl
loope
push
dec
sub
xor
lea
ret
fistps
fwait
cmpsb
xchg
cwtl
lea
repz
ja
fldl
fdivl
stos
test
push
and
jbe
flds
jns
lods
fldenv
jp
add
xchg
movsl
ja
mov
std
leave
aad
pushf
inc
and
jno
leave
iret
add
fincstp
mov
jecxz
and
popa
dec
pop
push
mov
pop
sbb
add
rorl
subl
sbb
inc
mov
or
sbb
push
mov
xor
icebp
test
adc
pop
fsubl
loop
inc
out
sub
inc
mov
in
loopne
jns
mov
ror
jnp
and
and
pop
stos
sbb
leave
test
movsb
jae
lock
push
mov
js
jg
inc
mov
daa
js
imul
mov
mov
aas
sbb
movl
daa
push
movsb
xchg
outsb
cmp
and
cmpsl
adc
mov
xorb
cmp
push
push
jbe
xchg
fwait
es
sarb
cmpsb
or
pop
push
sub
out
adc
popa
push
jle
adc
cmc
jbe
jl
jo
nop
leave
les
shll
test
mov
hlt
push
pop
lods
insl
out
cmpsb
jo
rcll
adc
addr16
out
ja
push
sbbl
sub
int
loopne
inc
setl
ret
repz
or
outsb
dec
xchg
in
popa
rolb
cmp
lock
add
add
sbb
sbb
int
popa
push
imul
push
subl
mov
insl
pop
pop
mov
movsl
jb
inc
call
dec
out
in
test
lods
mov
mov
xor
xlat
out
roll
in
jbe
test
int3
and
add
xor
stos
in
or
xor
data16
sbb
sarl
movsb
orb
mov
rcr
clc
aaa
xchg
cltd
jne
sub
cltd
xor
stc
shrl
cmpsb
sahf
xchg
outsb
icebp
loopne
cmp
add
xchg
pop
in
in
idivb
mov
fnsave
mov
aam
inc
int
movb
xor
je
mov
rorl
mov
dec
xor
std
lock
sbb
pusha
sbb
aas
dec
dec
pop
sbb
cmpsl
xor
fisubrl
cmp
lahf
sub
pop
outsl
and
cmpsb
shrb
in
je
loope
cmpsl
mov
dec
pop
mov
shrl
xchg
dec
cwtl
adc
fwait
pop
mull
mov
xor
or
dec
andb
push
dec
mov
fiadds
dec
mov
dec
std
jmp
daa
sahf
sub
in
mov
xchg
and
lods
xchg
jmp
xchg
ret
lret
dec
xchg
mov
inc
sbb
jecxz
jle
shlb
fisubl
pushf
jbe
les
pushw
xchg
int
pop
xorb
cmp
mov
mov
adc
push
xor
loope
sbb
stos
int
sarl
jb
sbb
inc
insl
hlt
cli
lock
neg
cmp
data16
jmp
mov
fiaddl
notl
insl
and
inc
xchg
xor
jecxz
lret
mov
ljmp
dec
cli
mov
xchg
imul
mov
mov
pop
cmp
roll
pop
cld
out
xchg
ficomps
xchg
lret
stos
daa
sub
mov
stos
cmp
into
or
jecxz
adc
sbb
cmpsl
shl
sbbl
xchg
adc
add
push
cltd
out
in
in
out
add
adc
cmpsl
push
cmp
adcl
mov
nop
inc
push
mov
test
push
in
sub
dec
and
pusha
inc
stos
out
push
mov
cmc
lcall
jne
cmp
popf
addl
hlt
out
and
push
sub
les
and
xchg
in
cmp
xor
sbb
data16
xchg
into
inc
inc
dec
mov
jmp
cltd
dec
dec
dec
dec
clc
das
lea
por
shl
out
pusha
mov
sbb
sbb
mov
pop
fcompl
cmpsl
cmp
or
add
stc
repz
ja
sub
rol
xor
sub
gs
jns
aaa
mov
inc
push
mov
es
mov
pop
imul
sub
inc
jl
fisttpl
loope
mov
and
es
jae
xchg
mov
aas
dec
in
std
sbb
adc
or
xchg
mov
push
into
ret
lcall
dec
cld
sbb
jge
adc
push
into
mov
sbb
push
scas
aaa
sub
xchg
rcl
js
mov
enter
mov
into
push
xchg
dec
pop
inc
mov
sbb
in
sbb
pop
cmc
imul
cli
dec
cltd
mov
test
orl
lods
cmp
xchg
pop
dec
sub
sub
dec
mov
xchg
inc
sub
leave
pop
repnz
rcr
cltd
mov
cld
subb
and
or
mov
insl
xor
je
mov
dec
test
rcll
aaa
adc
xor
fcmovnb
push
dec
fcomps
int
leave
cmc
pop
out
jnp
sub
loop
or
jecxz
jns
xor
das
add
xchg
dec
cmp
or
cmpsb
add
xchg
inc
xchg
icebp
popf
mov
lahf
stos
adc
mov
mov
test
sub
jecxz
cmp
add
stc
in
lret
push
daa
int
sub
and
leave
or
jecxz
arpl
call
loop
jecxz
sbb
test
sbb
pop
cmp
sub
loope
js
push
mov
cmpsl
sub
pop
shll
enter
mov
jge
adc
jnp
enter
or
xchg
inc
cwtl
enter
insb
mov
orb
loop
je
je
pushf
loop
sub
out
jb
shl
xchg
mov
and
or
out
lods
cmp
das
mov
mov
aaa
mov
xlat
inc
aad
test
ds
mov
or
or
bound
rcrb
xchg
add
mov
clc
je
jle
mov
adc
push
dec
sub
jno
insl
push
dec
hlt
ljmp
bound
testl
nop
cmpsl
std
pusha
adcb
flds
ljmp
dec
popf
dec
mov
mov
addb
in
scas
clc
cmc
cmpsb
loopne
adcb
mov
int
in
nop
cmp
xlat
adc
xorb
addb
xor
pop
std
fsubrl
test
lds
lds
in
xor
je
repnz
in
xor
sbb
pop
jb
push
in
popf
shl
arpl
sbb
mov
repz
loopne
mov
lds
ret
ret
push
push
add
idivb
push
xlat
xchg
inc
sbb
mov
mov
xlat
jbe
enter
stc
cltd
inc
fadds
xor
sbb
sahf
insb
imul
sub
jecxz
xlat
arpl
jne
jb
imull
push
cmpsb
mov
movsl
daa
mov
push
adc
popf
in
mov
push
cltd
stos
imul
testl
add
mov
add
mov
loope
sub
test
xchg
add
jb
sbb
mov
xchg
ror
dec
cmpsl
jb
icebp
mov
sti
cmpsl
stos
xorl
fs
push
repnz
call
repz
cmp
jne
or
push
repz
negl
mov
int
push
push
and
movsb
cs
pop
ret
mov
adc
pop
mov
aad
mov
es
outsl
stc
xchg
enter
and
lahf
inc
cmp
mov
and
inc
je
xor
js
das
decl
ljmp
cwtl
sbb
sbb
pushf
dec
inc
push
and
addr16
sub
inc
pop
loope
in
dec
popa
test
sbb
lock
insb
into
shrl
pop
dec
pop
inc
xor
das
fisubl
iret
shl
ret
jno
insl
sbb
jmp
push
popa
gs
pop
test
fstps
stc
outsl
arpl
hlt
xchg
pop
or
dec
enter
xchg
mov
push
mov
inc
pop
mov
or
push
xchg
add
flds
imull
sarl
inc
push
xchg
std
adc
mov
and
xor
pop
inc
call
dec
js
add
jo
pop
push
adc
or
bnd
fistps
loop
jl
data16
dec
lahf
push
pop
jl
lret
mov
scas
loop
pop
leave
fldenv
and
dec
jo
xor
popf
les
sbb
imul
mov
inc
inc
pop
shll
ljmp
fcmovu
dec
cmc
sub
out
push
ja
or
lock
mov
lock
test
mov
shrb
add
or
loope
stc
dec
test
out
mov
popa
test
lcall
jns
bound
push
sar
lea
mov
adc
mov
mov
fsub
daa
fdivs
inc
arpl
xchg
push
xor
sarb
adc
popa
stc
int3
mov
mov
cmp
dec
int3
dec
mov
iret
mov
test
iret
pop
mov
pop
sbb
or
and
das
sbb
into
push
mov
sbb
pop
jo
icebp
push
jp
mov
repnz
or
or
insl
pop
inc
bound
jl
adc
mov
fs
addr16
repnz
shll
call
testl
cli
std
add
mov
and
xor
push
xor
sub
or
fwait
jne
adc
outsb
adc
in
cmpsl
or
subl
xchg
outsl
sub
push
inc
outsl
sub
jmp
cmp
xor
mov
sub
rcrl
mov
out
xchg
adc
sbbl
lods
or
mov
and
lds
movsl
mov
mov
dec
xor
inc
xor
movsl
jb
es
jno
push
in
ret
ret
arpl
sbb
xor
nop
in
mov
dec
bound
rorb
push
xchg
inc
ds
jge
lods
inc
imulb
adc
in
scas
arpl
and
adc
mov
or
push
in
push
mov
jp
jecxz
pop
jg
sbb
bound
cwtl
stos
iret
call
adc
push
or
fstpl
or
loope
cli
inc
repnz
xchg
dec
jne
xchg
jne
push
xchg
icebp
inc
jo
mov
mov
mov
sbb
lahf
cmp
sub
push
jne
es
xchg
dec
lret
sahf
outsl
cmpsl
test
iret
cmp
lds
xchg
jae
fld
mov
scas
cli
mov
adc
test
cwtl
jmp
loopne
fistpll
dec
movsl
scas
ret
dec
shl
jmp
bswap
xlat
frstor
lret
dec
inc
rcr
pusha
pop
sarl
cltd
mov
fidivrs
ds
into
lea
lods
or
xor
test
xchg
sub
ret
xor
mov
jg
mov
add
roll
insl
test
dec
dec
sub
addr16
dec
xor
imul
cmp
cmp
fimull
stos
cmp
andb
xor
int
jnp
or
adc
in
xchg
sub
add
jmp
push
jne
leave
in
nop
pop
mov
fstpl
mov
jmp
or
adc
xor
mov
inc
ss
imul
jmp
fldt
rcll
aam
jmp
jmp
insb
push
push
mov
pop
popa
add
pop
mov
shlb
cmp
std
sahf
ljmp
push
xchg
inc
shl
pop
stos
mov
or
sbb
mov
pop
adc
in
push
je
aam
pop
movsb
testb
xor
idivl
mov
sbb
add
js
iret
std
ror
idiv
jge
daa
push
test
pop
sarl
iret
popa
mov
jle
mov
icebp
mov
push
sbb
jb
stos
push
popf
loopne
mov
outsb
mov
fcmove
jecxz
cmp
call
sub
or
scas
std
data16
cli
mov
xchg
addr16
idiv
mov
sti
outsb
sub
push
jmp
test
mov
mov
int3
out
and
nop
lret
scas
and
int3
mov
test
loopne
or
ljmp
into
push
js
test
cltd
sub
jmp
mov
rolb
inc
mov
popa
mov
push
shrb
mov
adc
sbb
cmp
lcall
cltd
out
pop
xchg
xor
mov
cli
decb
fisubl
or
pop
sbb
outsb
stos
pop
sti
stos
adc
ss
daa
fadds
add
pop
js
jnp
call
xchg
fnstcw
add
jnp
mov
mov
jge
mov
adc
sbb
rorb
int
outsb
addr16
mov
jae
insb
pop
sbb
xor
mov
xchg
movb
push
push
insb
aaa
int3
sub
stc
pop
in
push
hlt
cmp
clc
popa
push
sub
jae
dec
xor
popf
imul
mov
into
insl
pop
push
add
mov
push
or
insb
xchg
jl
call
cltd
lods
add
inc
mov
push
pushf
pop
sti
pop
pop
adc
adc
popf
addr16
inc
frstpm(287
fwait
das
cmp
inc
xchg
sbb
jl
dec
js
out
movl
imul
push
jg
nop
ja
bound
movsb
pushl
add
stos
out
jb
test
jnp
inc
or
push
cmpsb
iret
jo
add
push
xchg
dec
add
mov
push
insl
idivb
dec
mov
lret
adc
loop
pop
mov
sbb
jnp
test
jl
push
loop
std
cmp
out
mov
dec
pop
or
xchg
xor
jmp
test
movsl
out
lds
push
scas
loop
imul
jmp
dec
or
xchg
aaa
lret
xor
loope
jae
inc
cmp
push
sbbb
mov
rolb
jne
cli
jae
mov
xchg
mov
inc
mulb
pop
lret
push
mov
mov
mov
lahf
mov
dec
sub
pop
lret
or
mov
ja
inc
rcr
cmp
int
out
sub
das
mov
lods
ss
test
push
roll
or
push
in
xor
movsl
mov
xchg
fcomps
sbb
cmp
adc
std
ja
int3
subl
or
pushw
pop
out
dec
loope
inc
mov
ss
push
lea
roll
mov
call
jbe
adc
mov
les
lods
or
jnp
xchg
int
adc
adc
aas
shll
pop
and
xorl
xchg
pop
pop
dec
mov
jnp
leave
sarb
mov
in
fcomps
xchg
mov
in
jle
in
pop
jnp
jle
mov
ficompl
mov
jae
mov
or
xor
stos
push
sub
jnp
cmp
jge
loopne
into
jb
jle
xor
cmp
movsl
and
mov
add
or
call
mov
adc
cmp
lock
test
ret
stc
test
call
in
push
cmp
mov
push
mov
mov
cmp
mov
imul
inc
fldl
cmpsl
mov
sbb
in
pop
mov
aam
out
outsb
xchg
mov
push
test
lock
push
sbb
cltd
jmp
test
fs
inc
mov
imul
add
iret
in
scas
ret
fisubrl
bound
test
loop
scas
daa
roll
mov
cmp
lds
xadd
inc
dec
pop
pop
lds
xchg
sub
mov
scas
cmpsl
dec
lret
rcl
jl
cmpsb
sub
xor
adc
fwait
xor
cli
jae
or
jg
mov
inc
call
sbb
inc
pop
clc
add
jne
xorl
cmp
ljmp
mov
int
adc
adc
jecxz
xor
out
mov
pop
rolb
scas
sarb
lea
sti
imul
cmc
sub
fisttpll
dec
cmpsl
jmp
adc
iret
cmp
sub
add
or
pmaxub
cmp
pushf
fiadds
jecxz
sub
dec
inc
jae
adc
or
jp
dec
jns
iret
inc
call
inc
test
enter
xor
mov
jo
pop
xchg
mov
xchg
mov
sahf
loop
test
test
pop
jnp
test
jl
cltd
imul
mov
xchg
int
push
mulb
adc
es
and
jl
mov
movhps
out
sbb
cmp
inc
and
mov
fdivrl
mov
sbb
adc
or
xor
jmp
mov
xor
out
mov
adc
adc
test
jmp
mov
jne
dec
cmpsb
and
pop
jp
adc
movsb
xchg
xor
popa
or
and
pop
bound
jb
out
and
pop
std
sbb
pop
xor
dec
fidivl
push
movsb
inc
mov
cmpsl
pop
mov
jle
and
call
icebp
leave
mov
nop
dec
sbb
push
xlat
aam
cltd
je
jg
pop
push
pop
outsb
out
je
or
xchg
out
ja
mov
sbb
sahf
jnp
jns
shll
jmp
jb
sub
negl
inc
and
mov
mov
pop
mov
cmp
jb
into
inc
popl
out
or
sub
push
and
push
xchg
fs
sub
ja
sti
test
imul
xor
push
inc
adc
push
mov
testl
inc
bswap
xchg
xchg
aam
mov
push
or
fmull
add
loope
mov
test
sub
cmp
sub
inc
lahf
sub
rorb
jnp
int
das
cmp
hlt
movsl
adc
enterw
mov
pop
mov
xchg
jne
or
jns
inc
lds
das
daa
imul
push
jne
and
jo
pop
xchg
inc
push
repz
or
shll
sarl
aas
fisttpl
scas
xchg
jp
repz
dec
or
push
ret
arpl
sub
dec
mov
out
jl
shll
add
xchg
lds
dec
dec
or
imul
dec
pusha
jmp
add
push
jp
lods
mov
add
sub
cs
mov
cld
mov
sbb
lock
mov
cmpsl
mov
sub
push
mov
pavgb
mov
ss
add
mov
and
xlat
and
pop
test
or
imul
jecxz
or
mov
cmp
sbb
test
mov
inc
sbb
xchg
repnz
lahf
subl
cmp
add
insb
xchg
aad
pop
fidivrl
xchg
inc
subl
adc
add
pusha
lods
xchg
cmpb
dec
xchg
nop
dec
andl
icebp
rclb
test
loop
loopne
repnz
cld
gs
cmpsl
push
adc
push
xchg
cltd
dec
mov
or
jnp
pop
jno
sub
cmp
jnp
in
cltd
decb
ret
out
push
fwait
rorl
lret
cmc
xor
mov
js
adcb
mov
cmpsl
pop
inc
sub
xchg
sbb
and
in
in
push
lcall
mov
ds
mov
sbb
or
enter
mov
and
shll
jnp
or
fistl
repnz
stos
push
in
push
adc
hlt
nop
ljmp
shr
pop
sub
mov
iret
or
dec
scas
pop
jge
lods
xchg
mov
lret
les
and
adc
mov
cmpsb
push
les
and
imulb
pop
cli
jnp
pop
insb
xchg
and
jnp
adc
in
ss
or
pop
divl
jne
scas
sbb
mov
jae
imul
xor
cmpsl
insb
inc
pop
xchg
sarb
pop
dec
out
hlt
ror
mov
movsb
repnz
adc
pop
stos
adc
inc
xchg
mov
jecxz
call
mov
sti
loop
hlt
jge
jns
jmp
aas
ljmp
mov
shll
mov
mov
pop
mov
sub
add
cli
sahf
ret
out
sahf
sbb
mov
inc
xchg
insb
jl
add
adc
mov
data16
loop
ja
sbb
sbb
js
add
rcr
clc
cmp
xor
fwait
jae
stos
gs
pop
cs
push
arpl
sysexit
ret
sub
pop
sbb
mov
inc
rcr
dec
jno
icebp
pop
aas
out
xor
nop
sbb
fstps
ret
jp
push
in
mov
in
divb
arpl
std
sub
cmp
adc
ret
push
sub
push
aam
movsb
lds
dec
out
or
movsl
or
cmp
or
das
jne
pop
int3
xlat
andb
lcall
fnstcw
jne
cli
cmp
arpl
xchg
mov
and
xor
or
pop
aad
sahf
cmpsl
out
dec
pop
fisubrl
arpl
ja
and
shll
jb
add
mov
insb
cli
jno
mov
xor
mov
imul
lret
out
fbld
mov
pop
inc
test
pmaddwd
ret
jb
or
test
and
out
iret
push
test
mov
dec
ljmp
lods
mov
scas
or
xor
hlt
or
push
jl
sbb
fdivp
repz
mov
ja
cld
jb
daa
push
shrl
imul
or
ret
jg
stos
mov
aaa
roll
inc
and
icebp
dec
inc
cmp
adcl
push
test
iret
lret
stos
or
test
cmc
pop
mov
adc
leave
inc
or
jno
out
mov
jle
push
sub
fcmovb
xor
addr16
push
fwait
loopne
add
aaa
ljmp
ret
or
mov
ret
push
mov
mov
cmc
inc
negl
bound
jae
cmp
sbb
out
xor
gs
jb
cli
pop
shll
out
adc
pop
pushf
sbbb
xor
rclb
cmp
pop
cltd
push
mov
mov
mov
and
test
xchg
aas
inc
loope
adc
outsl
lahf
xchg
jge
sub
jae
idivl
data16
xchg
mov
push
sbb
pop
jle
roll
imull
mov
and
aad
adc
sbb
lods
pop
adc
adc
aaa
push
pop
shl
or
aam
outsl
aaa
insl
jmp
iret
shll
pop
aad
xchg
cmp
js
add
and
sub
jbe
mov
xor
pop
out
dec
push
pop
lret
xchg
enter
sub
dec
popf
inc
fists
out
std
loop
mov
adcb
adcl
mov
add
sahf
pop
sub
add
push
fsubrl
adc
lock
lock
add
es
in
aam
cmpsl
rcr
leave
lods
sub
mov
jl
mov
loop
cmp
sti
mov
aad
fisubrs
and
shrb
inc
cmpsb
ficoms
clc
push
imul
stos
cmc
je
fisttps
adc
push
xchg
or
test
gs
ss
shlb
sbb
aas
mov
roll
or
outsl
std
xor
push
lea
and
leave
jns
mov
mov
sub
mov
call
test
subl
roll
jne
mov
mov
fs
jecxz
xlat
mov
jbe
inc
lods
adc
sub
not
adc
or
adc
jns
jl
and
lahf
mov
testl
mov
jnp
ss
pop
popa
lods
xor
fidivl
pop
pop
sahf
movsl
pop
pop
or
sub
shr
push
add
xlat
or
push
pop
mov
pop
ds
cmp
xchg
fwait
orb
lock
push
addr16
pop
leave
sbb
orl
mov
shll
scas
adc
mov
scas
xchg
mov
sub
push
pop
xchg
repz
dec
sahf
test
xchg
icebp
mov
stos
popf
rcrl
scas
shrb
cli
push
rcl
xchg
sarl
sahf
popa
into
stos
cs
pop
mov
xor
add
or
adcb
divb
loopne
es
out
hlt
out
xor
pop
push
testl
icebp
push
mov
inc
movsl
int
pushf
popa
mov
cmp
add
rorl
add
hlt
movsl
in
outsb
cmp
imul
adc
and
outsb
inc
ljmp
lahf
jae
inc
or
xchg
and
cmp
cld
pusha
mov
jne
out
xor
pop
sub
xlat
addb
fstpl
movsl
xor
in
adc
jb
pop
push
les
xchg
adc
mov
seto
cs
jne
push
bound
mov
push
sub
test
xor
lods
push
xchg
pop
fs
pop
mov
push
test
sahf
inc
test
mov
outsl
jmp
aaa
dec
jl
in
adc
fprem
jnp
sahf
lds
cmp
bound
push
setp
mov
int
push
or
sub
adcb
fsubl
bound
pop
fdivs
or
aaa
adc
jae
inc
and
jg
add
xor
lcall
sbbb
adc
out
lock
repz
push
stc
and
fimull
push
out
jbe
ret
mov
jecxz
push
push
adc
and
xchg
std
inc
mov
mov
add
arpl
cmp
and
das
lret
imul
add
pop
xchg
or
sbb
or
imul
test
sbb
and
movsb
push
sbb
sbb
dec
mov
imul
jmp
cmc
jecxz
xchg
jo
cmp
orl
aas
push
mov
fdivrl
gs
adcl
pop
push
popf
add
push
int
addl
add
sbb
fistps
or
call
cltd
orb
pop
mov
mov
fmull
int3
jo
je
pop
mov
inc
hlt
mov
repz
inc
dec
mov
shr
fisttpl
adc
jnp
cmp
jno
mov
jb
push
push
xor
out
jl
xor
jne
inc
mov
leave
push
ds
jne
icebp
mov
sub
and
out
ja
xchg
and
xor
mov
sbb
loopne
xor
push
xchg
adc
sub
std
dec
cmp
mov
aaa
test
adc
cs
xor
vcvtdq2ps
xor
mov
dec
aam
mov
aad
bound
decb
push
outsl
out
arpl
xchg
and
mov
sbb
mov
jne
jnp
mov
je
mov
movsb
cld
dec
icebp
fldenv
fnstsw
ds
jmp
lock
xor
mov
adc
daa
dec
dec
cli
int3
lds
flds
adc
push
fldt
sahf
adc
sbb
jb
ja
sbb
lock
data16
pop
mov
sub
jge
aaa
adc
add
push
enter
dec
es
pop
sub
sbb
movb
mov
das
and
mov
and
iret
in
mov
pop
mov
cmp
je
das
fucomi
shrl
inc
xor
sub
cmc
cld
aad
ljmp
cmp
outsb
mov
leave
push
sbb
xchg
jl
popa
mov
sbb
mov
mov
mov
lret
cs
xchg
int3
mov
mov
jo
scas
cld
shll
lock
mov
ffree
sahf
adc
cld
ljmp
call
sub
jp
daa
iret
push
lcall
test
aas
fs
pop
mov
adcl
clc
sub
stos
mov
cmp
push
dec
jbe
std
jae
ret
fucomip
out
adc
jnp
cmp
cmp
push
andb
ds
inc
das
aaa
xchg
mov
das
xor
push
pop
ljmp
ja
sahf
lahf
movsw
jne
dec
leave
scas
das
inc
sbb
mov
push
xchg
inc
lahf
pushf
sti
scas
inc
inc
fcompl
sbb
pushl
sbb
aam
dec
fidivrs
es
loopne
sbb
filds
stc
mov
push
jne
jnp
sbb
inc
pop
or
jbe
xor
aam
cli
outsl
pop
push
push
pop
jle
sub
push
into
mov
cld
arpl
xchg
adc
or
mov
jno
xchg
mov
push
cltd
push
sub
jnp
pop
sahf
cmp
jb
sbb
xor
push
mov
test
mov
cli
jb
and
addr16
pop
and
xchg
ss
mov
test
insb
cwtl
popa
call
push
stc
test
test
adc
insb
add
and
pop
pop
adc
pop
in
cmpsb
movsl
jmp
push
sbb
out
mov
in
cld
inc
stc
shlb
or
cld
pop
out
jne
sbb
mov
xor
jp
movl
int3
subb
scas
lahf
mov
mov
sub
sahf
shrl
out
orb
xchg
fstl
bound
jge
xor
inc
cmp
cld
sub
scas
aad
in
mov
and
jnp
dec
loopne
cmpsb
and
ret
push
inc
cmp
stc
lock
inc
sahf
jge
mov
pushf
jle
ja
mov
cld
leave
push
psubsw
fiaddl
shr
dec
push
push
sub
mov
cmpsb
add
jl
cmc
je
es
cwtl
mov
sub
or
fdivl
jle
rclb
sahf
jbe
adcb
jbe
mov
adc
mulb
mov
mov
add
mul
push
mov
inc
ds
popa
cltd
mov
cmp
mov
lcall
cmp
sub
adc
call
push
decl
ficomps
mov
xor
cmc
fucom
mov
xchg
adc
xchg
repz
adc
xchg
jle
mov
js
clc
push
sub
les
lcall
andb
mov
jp
in
sahf
popa
subl
call
out
adc
bound
adc
shrl
mov
xchg
loopne
xchg
iret
sub
das
mov
sbb
push
xchg
icebp
cmc
fwait
adc
je
dec
loopne
sub
mov
movsb
push
roll
mov
pop
sub
inc
dec
jmp
xor
int
push
dec
mov
cltd
adc
sbb
cmp
mov
and
test
mov
movsl
add
jb
jnp
cmp
cmc
mov
pop
enter
ret
xchg
lods
repz
lret
ret
bswap
mov
sub
loopne
arpl
xchg
aam
sarl
ret
jle
inc
xor
stc
sti
shl
ja
aad
int3
mov
pusha
adc
mov
xor
popa
neg
xchg
mov
pop
fwait
lea
cwtl
pop
rclb
xchg
stos
sbb
xchg
aas
roll
mov
ja
push
cmp
pop
jmp
addr16
sub
push
mov
cwtl
rolb
outsb
test
hlt
push
push
stos
mov
out
mov
out
movsb
aaa
lret
out
roll
mov
cld
or
outsl
adc
outsb
cld
sub
cld
out
mov
stc
out
and
xchg
xchg
mov
mov
in
jnp
lods
les
lea
xchg
mov
adc
testb
push
aam
insl
std
out
sub
push
into
add
loopne
std
sbb
ljmp
push
mov
es
mov
sub
aad
add
mov
add
sti
adc
push
sub
jb
cmpsb
and
dec
ljmp
stos
dec
mov
pop
mov
sbb
pushw
aam
sub
jne
mov
add
mov
movsb
sti
test
xlat
sbb
mov
inc
mov
jge
cmp
inc
mov
data16
push
std
negl
push
cwtl
mov
inc
lret
fisubs
movsb
ret
push
into
cmp
bound
push
xchg
jp
mov
fdivr
add
out
outsb
in
sub
pop
add
inc
push
xor
inc
lods
push
mov
ljmp
subb
cmp
icebp
mov
pop
out
push
jle
cwtl
sub
aam
xchg
ficomps
cmp
cmpsl
insb
lods
sbb
mov
imul
add
mov
pop
and
inc
inc
into
sbb
mov
add
and
add
lret
mov
mov
cmpsl
loopne
push
dec
inc
pop
adcb
cld
fisubs
mov
or
lret
dec
lea
adc
mov
cld
bound
and
add
mov
xor
jmp
sahf
xor
xchg
xchg
mov
sbb
sti
lcall
fisubs
pusha
dec
fwait
arpl
stos
push
cltd
xchg
mov
int3
inc
negl
and
filds
popa
int3
repz
cwtl
mov
imul
cltd
test
insb
pop
mov
arpl
dec
leave
pop
cmp
icebp
and
lahf
jle
sbb
sbb
adc
jle
mov
inc
push
lea
pop
pop
fnsave
sbb
xchg
neg
loop
mov
and
shl
iret
call
fldenv
sub
add
push
rorb
mov
add
int
add
loop
jl
or
adc
cmp
sub
pop
sbb
out
add
jnp
dec
and
sahf
inc
pop
pop
or
xor
pop
mov
push
mov
add
mov
call
mov
sub
popa
xchg
inc
roll
cltd
adc
cmc
xor
mov
pop
mov
jno
cmp
movsl
add
and
mov
mov
adc
imul
cmp
add
mov
cmp
scas
and
cwtl
or
or
sbb
loope
xchg
add
dec
popa
in
data16
mov
pop
fwait
roll
cwtl
lds
scas
fcoml
inc
sub
adc
ret
fldl
mov
int3
mov
or
mov
scas
movsb
out
in
or
gs
mov
xor
les
lods
sbb
jg
int3
pop
sbb
sub
lock
popa
pop
mov
xchg
mov
and
addr16
inc
or
call
int
mov
shl
sbb
inc
jl
lods
scas
push
insl
ja
into
scas
test
flds
cmpsb
test
test
aad
out
imulb
test
push
repnz
mov
outsl
mov
jle
shrb
fs
out
out
adc
repnz
in
adc
mov
jmp
test
jp
adcl
or
mov
pusha
mov
mov
fcomip
call
ficomps
sub
xlat
pop
lret
js
into
int
pop
push
mov
imul
push
push
add
sbb
lret
adc
out
mov
xchg
addr16
clc
pop
push
adc
in
cld
or
pop
xor
scas
mov
out
pop
or
xorb
jg
fs
or
in
inc
sbbl
gs
cmpl
or
cmp
pusha
mov
xlat
bound
xchg
xchg
sbb
enter
mov
test
insb
cmpsl
repz
and
mov
lcall
sbb
push
or
jbe
insb
pop
mov
mov
push
cmp
shll
loopne
mov
leave
pop
or
ss
jle
lret
lcall
addl
dec
xchg
adcl
add
xchg
pop
fadds
iret
xchg
mov
dec
mov
xchg
out
xlat
ret
cmp
add
les
cltd
repz
push
xor
mov
scas
sbb
dec
or
lret
xor
push
lds
icebp
xchg
adc
push
jecxz
dec
xor
xchg
int
xchg
jbe
xor
clc
jns
cmp
loope
dec
xlat
pop
inc
std
push
pop
jmp
jnp
aad
add
push
loopne
or
mov
sub
int3
push
jl
jb
xchg
stos
mov
sub
dec
jb
mov
sahf
stc
fidivl
adc
jnp
and
sahf
sti
in
aam
mov
adc
ret
out
dec
cmpsb
clc
mov
xchg
adc
sbb
hlt
and
shl
mov
xchg
fwait
inc
insl
les
pop
inc
leave
mov
fbstp
leave
xchg
addb
int3
rcrl
and
lods
jo
xchg
xor
stos
sti
lds
sbb
jae
cmp
push
adc
sbb
adc
incb
outsb
cmpsl
pop
and
imul
lahf
pop
pop
xchg
dec
push
jg
pop
pop
adc
out
das
sub
xor
and
xor
or
dec
insl
xlat
push
and
rorl
mov
fists
ret
ret
rcll
pop
sahf
jbe
movsl
xor
cmpsb
sbb
lcall
ds
lcall
mov
xchg
rolb
xchg
pop
dec
outsw
lea
adc
fdivrs
mov
push
mov
jnp
xor
movsl
inc
sbb
cmpsb
jae
faddp
cmp
inc
popf
mov
imul
movsb
pop
aad
dec
adc
or
or
int3
call
test
jge
xchg
push
mov
out
pop
int3
int
xor
adc
or
les
pop
or
push
outsl
ds
dec
rcll
sti
shlb
out
roll
or
and
test
dec
push
leave
call
outsl
push
not
ret
test
rorl
mov
or
loopne
pop
iret
pop
adc
aaa
add
push
adc
in
pop
inc
jp
xchg
rcr
lret
addr16
fimull
dec
add
xlat
jo
xlat
dec
imul
adc
mov
iret
xorb
push
cmp
xchg
mov
sub
xor
dec
cld
add
jo
movsb
sbb
or
pop
xchg
hlt
and
add
and
negl
lcall
lcall
mov
jp
stos
dec
mov
ret
xor
mov
rcrl
mov
adc
xchg
aas
movsl
andb
add
push
cltd
push
iret
fs
cmp
insb
dec
and
sbb
push
add
inc
rol
mov
cmp
mov
mov
movsb
out
es
cmp
or
fidivrl
mov
pop
popf
mov
jl
and
dec
push
fwait
mov
nop
cmp
call
cld
mov
icebp
mov
jns
lock
push
addr16
or
je
cmp
sbb
movsl
call
outsb
out
arpl
or
pop
mov
fadds
mov
pop
cmc
add
xchg
xlat
dec
int
sbb
fnstcw
fcomps
inc
add
cmc
out
fcompl
adc
mov
aaa
into
cmp
and
leave
jmp
int
imul
lds
sbb
les
push
cltd
or
fwait
rcl
ss
in
imul
mov
inc
dec
mov
push
mov
mov
adc
or
jge
adc
sub
jg
sub
dec
pop
pop
outsl
jns
mov
dec
adc
pop
inc
push
inc
enter
xchg
cmp
inc
arpl
nop
test
lret
loopne
idivb
dec
test
mov
in
ret
xor
lret
cli
out
inc
mov
rclb
xchg
dec
fs
dec
inc
jmp
cld
push
test
inc
dec
sub
lret
mov
jle
fsubs
cltd
sub
popf
ja
outsl
lods
xchg
inc
loope
les
scas
inc
mov
std
xchg
pop
cmp
add
xor
pop
cmp
push
cwtl
test
push
popa
ds
sub
mov
in
aas
in
adc
mov
loope
fists
jb
pop
rdpmc
dec
pusha
leave
mov
cmpsl
mov
in
pushf
shr
enter
mov
add
lods
sub
ja
out
into
cmc
daa
jge
ficomps
xorl
ss
cmp
and
xchg
int
repnz
cmp
clc
or
adc
pop
sarb
adc
lods
jecxz
in
inc
jg
out
jge
mov
mov
jecxz
nop
adc
lahf
ja
sahf
and
iret
push
dec
or
push
or
or
xchg
out
and
pop
popa
mov
pop
js
cs
dec
push
clc
mov
and
add
inc
lcall
xor
mov
xchg
call
movsl
loopne
dec
dec
mov
jp
ss
ds
fildll
jp
xchg
mov
and
in
or
jb
xor
push
imul
sbb
mov
sub
sub
in
jnp
jle
jns
adc
add
mov
jno
mov
sbb
push
in
xor
mov
aas
xchg
push
loopne
popa
and
and
ret
xchg
mov
mov
xchg
push
shll
or
shrb
ss
lret
mov
rcll
xlat
jmp
mov
je
idiv
mov
dec
les
inc
gs
push
cmp
jecxz
inc
iret
nop
aam
xchg
dec
inc
xchg
test
and
test
adc
ror
add
and
fs
iret
jo
cmp
dec
dec
enter
outsb
stos
dec
push
shlb
fildl
fidivrl
test
and
adc
movsb
jae
mov
mov
js
jo
stc
push
pop
out
push
xor
jae
js
sbb
xchg
repnz
gs
out
ret
xor
adc
or
push
mov
add
loope
adc
daa
sub
out
arpl
mov
cmc
imul
xor
lods
or
loopne
das
cmpsb
loopne
test
mov
mov
cltd
adc
imul
mov
push
nop
xor
sbb
mov
fdiv
push
mov
pop
roll
push
sbb
and
mov
jno,pt
jle
sbb
adc
mov
sbb
cmp
ds
fdivrs
jmp
repnz
mov
shrl
je
mov
and
in
or
sahf
rcl
in
mov
push
xchg
lock
subl
mov
push
fisttpl
sub
lods
popa
les
mov
jne
jle
mov
xor
push
dec
jo
hlt
mov
add
fnstenv
nop
lret
add
pushf
mov
loope
dec
cmpb
cmp
sbb
imul
insb
jecxz
pop
int
cmpsb
mov
add
pop
movsl
int
sbb
sub
ds
xchg
rolb
out
pop
fs
int
imul
mov
leave
repnz
rcrl
pushf
xchg
add
outsb
mov
inc
or
stos
cmp
adc
stc
sahf
es
test
cmp
add
aaa
adc
and
xchg
scas
mov
inc
dec
jnp
call
cmp
mov
daa
or
xchg
enter
ss
fisttps
mov
xor
mov
adc
in
orb
fcmovbe
test
and
lds
mov
cmp
inc
data16
aaa
xorl
xrelease
jp
mov
ss
jns
push
ja
ja
mov
mov
sub
lods
and
mov
repnz
shr
dec
adcb
mov
mov
cld
inc
int
xchg
fwait
add
cld
inc
and
popf
push
movsb
das
call
mov
fistl
cwtl
fcoml
pop
or
xor
imul
mov
movsl
xor
xchg
cmpsb
jmp
pop
sub
mov
cmp
sub
push
jg
cmpsl
push
or
inc
pop
test
lea
leave
or
mov
ss
mov
push
pop
inc
sti
pop
sbbl
out
sub
and
jb
mov
and
push
mov
mov
pop
dec
add
imul
or
push
daa
stos
xor
xor
cltd
std
adcb
cld
jl
fwait
mov
push
repz
xchg
mov
lahf
pop
popf
xor
mov
xchg
repz
test
jo
push
loope
mov
sub
dec
jnp
cmc
push
lods
push
jl
push
shl
push
push
xchg
jo
iret
jnp
jle
xchg
mov
popa
mov
fwait
idivl
mulb
mov
sbb
push
outsl
adc
insl
sub
sbb
mov
cmp
mull
nop
mov
mov
jo
inc
mov
jb
jmp
mov
rcl
sti
or
test
inc
mov
dec
fisttpl
out
add
lea
fidivrl
pop
dec
mov
imul
jns
pusha
and
cmpb
outsb
add
adcb
popf
and
jg
loop
xchg
jne
imul
iret
or
rolb
sarl
xor
xchg
inc
cmpl
jmp
insb
jg
sbb
cs
mov
ds
cmpsl
push
mov
ret
jne
es
or
or
repz
xchg
int3
cmpsb
in
push
xchg
popa
mov
popf
dec
cmc
lds
dec
loop
mov
int
jle
mov
lock
pop
push
mov
jmp
dec
adc
xchg
les
jo
sub
daa
mov
xor
cli
imul
shlb
push
or
out
push
out
aad
pop
mov
mull
hlt
xchg
fldt
mov
mov
fmull
xchg
xlat
scas
sbb
imul
jbe
scas
enter
addr16
out
xor
repnz
leave
inc
push
rcrl
sbb
dec
cmc
cmc
jmp
jecxz
cld
cmp
cmp
xor
outsl
addr16
and
in
aam
test
push
mov
dec
rcr
mov
lea
movsl
in
push
cmp
push
jp
repnz
adc
pop
jns
mov
add
movsb
rep
mov
mov
das
sbb
add
push
sub
mov
sbb
mov
pop
mov
icebp
int
insl
sub
lods
mov
and
cld
outsl
mov
inc
lret
lods
push
lret
push
push
fildll
lea
out
or
jo
xor
mov
push
push
mov
in
cmp
push
cmp
das
jne
push
inc
cmp
rcll
testb
and
pop
sbb
into
sub
pusha
cmpsb
push
int
icebp
jmp
dec
sub
cmc
xchg
push
mov
lcall
mov
jp
mov
inc
jecxz
fld1
dec
sbb
test
mov
mov
das
sbb
xchg
add
mov
lret
xor
cld
lahf
xlat
pushl
mov
stos
lock
mov
add
jae
dec
xor
hlt
mov
adc
lret
ret
mov
je
dec
xchg
insl
and
mov
push
jb
out
addr16
or
sahf
mov
jnp
cli
pushf
and
jo
out
cvtpi2ps
andl
pop
cwtl
pop
cmp
mov
sub
pusha
xchg
cld
adc
pusha
ss
inc
pop
mov
cmpl
pop
push
lret
aad
dec
and
xchg
push
cmpsl
cmp
fldt
cmp
addr16
and
mov
arpl
adc
jbe
sub
pop
sbb
cld
testb
xor
adc
fcom
cltd
iret
in
pop
sub
mov
sbb
xor
pop
mov
jecxz
in
xchg
mov
ja
jne
cwtl
rcr
pop
lods
adc
es
pop
sbb
add
or
jnp
sahf
inc
cltd
add
repz
inc
es
inc
mov
dec
xor
push
cmp
scas
mov
clc
movsb
jp
inc
lss
insb
push
ds
orb
push
xchg
push
xor
fisubrl
lret
push
add
sti
inc
mov
lock
xchg
pop
lret
sbb
cmp
pop
push
xchg
dec
or
xchg
dec
inc
outsl
mov
imul
pop
fucom
jns
xorl
push
mov
or
mov
or
repnz
adc
pop
dec
imul
dec
pop
sub
shrl
and
inc
pop
cmp
ljmp
mov
mov
and
mov
int3
out
cmp
push
and
pop
mov
and
and
int3
cmp
daa
xchg
jo
push
scas
imul
xchg
pop
cld
ret
xchg
jl
inc
adc
pop
mov
insl
shr
stos
dec
pop
icebp
sbb
xchg
jb
push
jae
lahf
jno
in
addr16
and
loop
cmc
cmp
loope
add
fisubl
loop
dec
mov
call
cmp
mov
jmp
jo
idiv
dec
xchg
subl
pop
push
pushf
mov
add
cmp
dec
mov
add
aas
sbb
std
mov
mull
pop
mov
bound
sbb
das
push
sahf
mov
fildl
fldt
loopne
test
sub
cmp
divl
test
dec
orb
stos
mov
dec
fsubs
sub
push
notl
or
es
movsb
popl
lea
pop
or
mov
rcll
scas
dec
push
sti
sub
cltd
xchg
mov
xor
xchg
std
mov
cld
cmp
test
ss
inc
in
sti
fidivl
fnstenv
rorl
pushf
mov
sahf
test
jns
push
mov
lret
push
push
fs
push
jbe
dec
xchg
xchg
pop
push
mov
leave
in
push
ja
push
orb
leave
test
ret
dec
movsb
sti
dec
cld
push
int
mov
jp
mov
lret
xchg
xorb
out
cltd
icebp
add
lcall
mov
pop
xchg
stos
fimuls
sub
sbb
and
jnp
and
push
and
xlat
lahf
or
inc
adc
xchg
outsl
mov
pop
iret
nop
sub
in
mov
xchg
jns
mov
in
loopne
xor
test
jnp
and
pop
or
shlb
aam
jg
out
xchg
mov
into
test
arpl
jecxz
inc
push
arpl
inc
fisubl
cmp
stos
push
ficoml
xchg
jnp
add
outsb
ficoml
roll
aam
mov
push
xor
add
mov
cmc
hlt
sub
inc
test
mov
call
pop
hlt
out
ret
test
jge
adc
cmpsl
inc
or
inc
and
xor
out
lcall
lret
mov
icebp
in
xor
push
mov
in
repz
push
jns
lret
mov
fisubl
jecxz
hlt
adc
icebp
sub
testb
push
rorl
enter
push
push
loope
or
sub
ljmp
ret
cli
add
xor
ja
dec
and
test
into
sti
and
add
xchg
jae
stos
push
mov
and
loopne
es
xlat
or
fdivl
or
dec
xor
addr16
xor
sbb
cwtl
sbb
pop
adc
push
je
or
fcoml
xor
enter
or
xor
pop
push
lcall
ds
sbb
pop
and
dec
inc
gs
in
mov
sbbb
sahf
into
push
pop
inc
add
push
lret
push
icebp
or
mov
in
hlt
xchg
mov
cltd
sysenter
sbb
push
or
rcpps
cltd
fstl
out
mov
fcoms
dec
sub
movsb
je
in
xor
xchg
das
dec
ja
in
dec
out
ret
inc
popf
and
xchg
mov
fwait
adc
pop
lods
ret
push
cmp
ds
cli
fdivrl
add
dec
scas
mov
push
jl
jl
xchg
sbb
in
ds
mov
mov
xor
ret
push
fs
ja
in
xchg
push
pushf
div
jl
lods
sub
mov
int
push
or
push
jno
jle
or
push
or
jo
dec
xor
adc
jmp
jecxz
pushf
pop
sti
cmp
sbb
mov
xchg
wrmsr
add
outsl
sbb
xchg
jmp
xchg
andl
adc
cmp
mov
clc
xchg
xor
mov
aas
mov
xchg
adc
frstor
cmpsb
adc
addr16
test
fs
push
outsb
xchg
popa
jp
jns
sub
push
mov
pop
jno
mov
xor
mov
mov
test
gs
mov
cmp
ljmp
test
push
dec
inc
push
adc
popa
inc
mov
push
dec
repnz
testl
mov
loope
rclb
push
fimull
mov
jo
adc
sbb
paddusb
fbld
or
add
testl
and
inc
aas
and
ljmp
cld
or
addl
cmp
cmp
jne
aad
pop
push
cmpsl
fildll
orl
mov
pop
lar
inc
test
or
and
aad
enter
push
sub
out
mov
push
mov
dec
jne
or
dec
aas
faddp
hlt
adc
nop
sbb
fwait
inc
arpl
sub
jecxz
inc
out
sbb
sub
test
in
dec
cmpl
or
jae
xchg
bndldx
xor
and
out
lods
jmp
dec
in
push
pop
push
out
xchg
cwtl
incl
jg
imul
imul
insl
xor
and
sbb
cmp
pop
adcl
cld
cmpsl
cld
cmp
sub
mov
lret
das
scas
ret
stos
outsl
subb
sldt
mov
add
aaa
push
push
es
movsb
jp
pop
test
cmp
pop
mov
mov
mov
jmp
sbb
mov
xor
mov
mov
test
inc
add
sub
ss
cmp
outsb
sti
sub
leave
jg
gs
pop
inc
loopne
cmp
mov
std
adc
mov
movsb
pop
cmp
frstor
mov
or
repz
adc
out
jl
sub
rorb
test
dec
or
clc
sbb
cmpl
push
sbb
cld
or
adcl
add
dec
call
cmp
and
insb
rcll
jp
stos
jge
or
pop
das
ds
lods
sub
fwait
ja
adc
mov
test
cmpsb
cwtl
incb
sbb
sub
and
dec
pandn
pop
hlt
and
out
fs
sub
shrb
mov
xchg
mov
and
loop
jmp
repnz
imul
in
aas
pop
inc
sub
std
aam
sub
jp
jg
xorl
jbe,pt
mov
mov
repnz
cmp
sbb
cmp
mov
inc
jg
ljmp
sub
mov
repnz
mov
enter
in
inc
jae
dec
inc
jae
mov
rcrl
push
fisttps
in
icebp
pop
movsl
push
sbb
mov
fdivrs
addl
mov
test
test
mov
sub
fucomp
mov
ret
cmp
jne
push
test
sbb
loope
enter
rol
push
pusha
repz
push
lods
std
add
push
and
sbb
les
add
adc
mov
repnz
mov
adc
add
in
xchg
jecxz
fwait
mov
cmp
into
lods
pushf
mov
adc
cld
xor
xchg
pop
adcb
popa
pop
mov
jl
xchg
sub
cmp
iret
mov
cmpsl
aas
loope
rclb
test
clc
iret
add
inc
dec
dec
popa
xchg
enter
pushf
in
add
mov
dec
dec
lahf
sub
ds
inc
neg
lret
inc
ja
xchg
scas
in
fldl
cmp
push
in
shlb
sub
or
push
je
mov
lods
xchg
lcall
mov
push
inc
stos
insb
ficoml
aam
push
aam
xor
adc
inc
inc
jb
loope
cli
std
mov
ds
and
insl
outsb
pop
xor
mov
lock
scas
sbb
int3
pop
out
outsb
jge
stos
push
sub
inc
jg,pt
xor
lods
mov
stos
sub
imul
aam
cmp
push
push
jle
insl
pusha
lods
pop
in
call
lods
imul
push
flds
gs
dec
pop
xor
sbb
adc
xor
or
jle
sub
loop
add
iret
enter
push
pop
mov
dec
repz
sbb
inc
push
not
lcall
movsl
mov
std
push
fwait
push
add
test
mov
xorb
inc
and
fcmovnu
pop
or
sbb
push
aam
pop
pop
fsubrl
imulb
hlt
push
repz
inc
fnstcw
lods
pop
stc
pop
sub
push
cmp
sti
cltd
stos
outsb
push
inc
mov
xchg
shlb
xchg
or
dec
adc
sbb
xor
scas
cmpsb
jge
xor
push
aad
jmp
and
popf
jle
jb
jns
push
in
call
aad
push
arpl
cltd
cmp
bt
push
adc
sub
pusha
adcb
pop
dec
jne
jle
jns
outsl
add
xchg
and
sub
pop
sbb
iret
scas
in
push
jnp
mov
stos
or
aaa
cmp
shll
nop
jb
dec
sahf
or
or
jae
add
bnd
repz
gs
lea
mov
lret
push
int3
bound
sbbb
sub
dec
cmp
subb
movsl
fadd
lret
movsl
sub
inc
adc
mov
jle
repnz
mov
lcall
mov
orl
incb
sbb
mov
fisubrl
cmp
andb
lret
cmp
dec
jb
insb
out
test
mov
lret
mov
and
mov
shll
sti
sub
add
push
and
call
pop
lods
xor
push
repz
push
fsubs
pusha
stos
ret
inc
sub
push
outsl
push
mov
shlb
pop
mov
in
fcmovne
xor
fistl
jge
inc
arpl
xlat
xchg
in
or
enter
cld
es
in
jecxz
arpl
jo
push
or
mov
outsl
xchg
pop
es
dec
fucom
cmc
enter
cs
cmpb
push
in
xchg
insb
cmp
fldt
in
fwait
mov
and
mov
mov
aam
fisttps
mov
jo
push
out
sub
adc
fcoml
les
pop
cmp
add
jecxz
fwait
sbb
cmpb
fdivs
outsl
shlb
inc
sub
into
add
mov
and
loop
fdivrs
pop
in
iret
lret
push
imul
push
std
dec
dec
movsl
sbb
lods
jne
mov
mov
clc
mov
inc
outsl
xchg
inc
inc
in
mov
cltd
sub
lret
dec
xchg
test
push
pushf
adc
xchg
cltd
lds
xchg
sub
xchg
mov
gs
push
enter
xchg
cmp
hlt
mov
out
pop
push
dec
jecxz
repz
je
pop
movsb
mov
push
add
outsl
or
movsb
out
hlt
jl
mov
mov
mov
test
fnstenv
lods
xor
dec
mov
stos
push
cld
aam
por
pop
xchg
and
push
or
sti
sbb
pop
xor
add
loop
mov
mov
cs
jg
mov
adc
or
addr16
std
jl
xor
cmp
lcall
pop
xchg
idivb
mov
push
pop
hlt
pop
fistpll
cld
in
and
inc
in
or
and
push
pop
ret
dec
test
inc
adc
cs
cmpsb
shlb
repnz
pop
frstor
divb
sti
rcrb
lock
out
cmp
mov
enter
in
popa
dec
xchg
jp
cmp
push
pop
orl
sbb
pop
sbb
mov
adc
pop
imul
leave
stc
js
js
mov
int
scas
jo
adc
xchg
scas
jge
in
fldenv
jb
push
vcvtss2sd
or
or
add
shl
push
cmpsb
sbb
btl
in
add
inc
sahf
mov
mov
nop
and
sbb
mov
add
lods
xchg
cmp
mov
mov
inc
jmp
jp
repz
add
fisttpll
fucomip
sub
sub
fnstsw
mov
mov
xchg
mov
ja
jnp
jmp
inc
pushf
in
and
out
outsb
repz
cmp
adc
push
sub
test
arpl
push
out
mov
jge
xchg
jp
jecxz
xchg
or
rol
movsb
test
mov
push
mov
leave
dec
sbb
insl
or
push
push
jmp
into
ret
into
jnp
data16
jp
ds
push
std
arpl
mov
movsb
mov
push
pusha
and
mov
xchg
repnz
pop
inc
sub
mov
popf
loop
out
dec
fs
mov
pop
cmp
mov
sbb
scas
mov
cwtl
or
or
inc
xor
jne
movsb
fstl
clc
lds
cmpsb
inc
xor
xchg
clc
mov
scas
cmp
sbb
mov
ds
ficompl
jae
insb
xchg
mov
dec
jnp
popa
pop
mov
scas
sbb
and
mov
mov
xor
in
pushf
push
mov
xchg
jle
mov
div
jnp
out
xor
push
lret
jecxz
xor
jae
paddsb
nop
cmp
mov
jle
push
loope
xchg
cmp
add
push
and
stos
xchg
xchg
pop
inc
mov
inc
movsb
mov
fidivs
mov
pop
xchg
lahf
mov
lret
sub
loopne
mov
daa
int
aad
mov
mov
sub
dec
inc
and
test
aad
sahf
add
mov
or
fsts
sti
adc
fcmovnu
jg
add
dec
nop
int3
ss
xchg
pop
js
and
jge
sbb
xor
add
test
xchg
mov
dec
dec
xchg
push
push
mov
cmp
sub
insb
in
cmpsl
scas
out
clc
mov
sub
jno
in
fdiv
shlb
dec
mov
into
cmp
or
arpl
adc
sub
popf
pop
in
inc
jo
xor
or
mov
jge
jge
cmp
or
sbbb
xor
iret
rolb
enter
add
sbbl
mov
mov
sbb
rclb
inc
adc
pop
insb
add
add
xchg
out
inc
fldl
push
insl
pop
xor
jne
lcall
jmp
xchg
jle
sti
mov
roll
popa
push
or
mov
mov
es
pushf
xor
inc
mov
push
or
push
arpl
stos
test
out
mov
test
aam
cmp
addr16
lods
inc
add
in
sub
cs
sub
mov
inc
dec
repnz
test
std
add
mov
mov
jp
pop
lea
pop
enter
or
adc
fwait
xchg
inc
or
cmp
aaa
es
inc
add
fs
inc
mov
pop
or
pop
enter
movsl
jns
pop
jp
insl
mov
outsb
mov
push
loope
nop
in
dec
movsb
fwait
jae
or
mov
jns
mov
dec
fcmove
sbb
fdivl
inc
ja
add
shlb
mov
test
arpl
pop
mov
sub
push
outsl
mov
decl
sbb
xchg
inc
jmp
int
lock
sti
lret
adc
fwait
lcall
jae
inc
dec
pop
push
into
mov
out
lahf
and
jl
and
sub
mov
sbb
cmp
fistpll
adc
inc
dec
push
das
pop
mov
mov
adc
and
call
es
mov
ss
sbb
push
dec
mov
outsb
inc
int
loop
fwait
cmpsb
jmp
dec
mov
push
pop
mov
xchg
sbb
lret
xor
pushf
mov
and
sbb
or
jmp
sbb
in
jg
mov
movsb
pusha
ds
push
cmp
dec
push
or
xor
jb
mov
fwait
int
add
xchg
pop
mov
ret
jae
stos
or
pop
pop
inc
incb
jge
nop
xor
push
pop
cmpsl
shrb
push
fnsave
or
imul
lcall
add
jle
mov
in
movsl
cmc
movsb
pop
fwait
test
push
and
lret
push
stos
jp
repz
ds
add
fmulp
adc
and
adc
jl
xchg
fisttpll
iret
in
insb
fsubrl
bound
lods
insb
int3
mov
or
dec
cmpl
push
fwait
adc
ds
lret
into
jmp
mov
orps
mov
dec
push
xor
out
cld
gs
jbe
sbb
ror
add
push
pusha
aas
cmp
ret
ds
cmp
mov
shl
xchg
mov
call
out
jo
jl
sbb
inc
stos
pop
or
cmp
mov
outsb
and
mov
push
cmp
movsb
aas
or
and
xchg
and
js
inc
cmp
xorb
stos
aas
data16
pop
jl
aaa
xchg
push
adc
cltd
mov
xchg
arpl
insb
sahf
push
xchg
pop
adc
xchg
imul
pushf
dec
outsb
cmc
cmpsb
mov
dec
pushf
sub
push
test
sti
jl
fnstenv
pushf
push
jg
into
stc
pop
sub
dec
idivb
ja
and
lods
pop
cmp
in
xchg
cmpl
daa
cmpsb
dec
mov
cmp
cltd
dec
or
mov
hlt
popf
and
cmc
dec
mov
std
aad
daa
inc
mov
inc
adc
cmp
sbb
mov
and
jne
mov
xor
sbb
xor
das
sbb
jmp
sbb
mov
rcrb
mov
sbb
jmp
push
test
hlt
faddp
mov
movsl
mov
xor
lret
sti
jno
call
push
mov
dec
dec
pop
inc
and
mov
cmp
mov
mulb
lcall
pop
imul
negl
lret
dec
cmp
adc
enter
mov
data16
ds
xchg
imul
sbb
push
push
push
enter
lahf
scas
sub
data16
cmp
xchg
mov
js
fs
insl
jbe
daa
int
js
jle
cltd
fiaddl
sbbl
fistps
cld
xchg
sub
cmp
xchg
xor
movsl
adc
jnp
push
jnp
adcb
mov
aam
add
das
cwtl
int3
inc
sbb
fwait
andb
xor
or
push
stos
std
pop
jnp
inc
fnstcw
cmp
fisubl
jmp
daa
addr16
jno
fimuls
mov
xor
pop
push
pop
dec
sbb
sub
sub
in
mov
cs
xor
lods
arpl
jge
dec
std
mov
and
outsb
nop
adc
jle
dec
pop
xchg
push
int
cld
jns
sti
js
inc
aas
adc
xor
sub
sub
or
pop
push
cmp
mov
xor
or
add
cmp
add
mov
sbb
pop
xchg
sti
inc
mov
pop
divb
xchg
js
sub
add
dec
movnti
mov
mov
int
repnz
xor
cmp
pushf
in
popf
pop
jno
enter
jns
add
nop
push
movb
mov
loopne
add
test
cmpsb
cmp
mov
xchg
leave
pusha
mov
xchg
dec
add
dec
movsb
cmp
sub
out
rclb
adc
adc
pop
cmp
in
push
scas
ret
push
xchg
and
lods
rcrb
addr16
iret
add
or
cmp
stos
lds
jno
orb
sbb
xchg
add
js
lods
dec
or
adc
test
mov
dec
cmp
or
mov
js
mov
cmp
in
push
xchg
in
jmp
push
add
cmovbe
mov
sub
lea
jl
inc
lds
dec
adc
mov
inc
les
cmpsb
push
push
movsl
mov
sub
imul
xor
rclb
movsl
stos
fadds
push
daa
lcall
fwait
mov
rol
mov
mov
das
negb
sub
pop
sub
stos
push
push
lret
jl
js
rcrl
pop
mov
push
fcmovbe
cmp
lret
fcomps
sub
and
in
fidivrs
scas
les
xor
call
rcr
add
and
in
xor
imul
ret
mul
jl
ret
mov
les
pop
mov
pop
xchg
xchg
sub
bound
and
sbb
mov
daa
dec
cld
sub
xchg
pop
jae
jmp
js
inc
xor
stos
das
jp
inc
mov
mov
pop
mov
lret
arpl
pop
xchg
sub
out
pop
insb
pop
lret
xor
cmp
or
fisubrl
test
in
stc
inc
xor
mov
jecxz
bound
imull
dec
or
mov
inc
testb
aas
sub
push
enter
imul
xchg
pop
push
ficoml
jb
fwait
add
das
cmp
and
popf
xchg
loope
sbb
sahf
rol
adc
mov
dec
inc
test
pop
and
sti
lret
mov
rorl
mov
test
adc
jg
shlb
xchg
mov
mov
mov
pop
pop
jp
das
and
jns
push
lea
jnp
sub
mov
jl
out
xchg
jbe
popf
mov
lods
lods
in
jg
inc
arpl
mov
arpl
add
cmpsl
pop
outsb
mov
int3
pusha
xchg
jmp
insl
add
aam
jne
inc
add
push
sub
stos
jmp
lock
out
lea
loope
pop
sar
pop
xchg
ja
lret
mov
push
cs
lock
jmp
push
pop
inc
or
add
sbb
loop
and
pushf
cmp
xor
jmp
pushf
outsb
out
and
xchg
sbb
jo
mov
xchg
mov
adc
push
cwtl
lods
pop
push
lret
sub
add
stos
mov
loop
mov
mov
xor
xchg
shlb
bound
xor
add
add
lcall
hlt
adc
popa
mov
imul
insl
pop
jg
mov
in
cwtl
push
inc
out
das
sbb
fdivrl
sahf
rcll
addb
shlb
repnz
fistps
dec
pop
or
push
cltd
out
rolb
pop
cmc
cmpb
jo
ret
nop
xor
movsl
add
and
cld
lcall
arpl
iret
push
out
adcb
aaa
adc
xchg
mov
mov
mov
je
xchg
push
jae
push
jb
sti
lret
gs
iret
xchg
test
push
std
xor
iret
lahf
jns
loope
loope
cld
lods
add
mov
in
ds
add
pop
sbb
mov
call
or
call
mov
pop
das
push
lahf
test
xor
mov
cmc
inc
test
mov
mov
in
int3
and
cmp
push
adc
shrb
push
adc
movsb
mov
dec
cs
je
sahf
push
push
fildll
push
pop
mov
mov
lret
aad
push
test
push
add
push
enter
arpl
adc
jbe
push
mov
jecxz
pop
pushf
jg
jo
cmc
add
add
xchg
push
sbb
mov
mov
outsl
mov
and
adc
push
xchg
pusha
mov
or
cmp
jno
ds
mov
cmpsl
mov
sbb
jo
mov
xchg
pushf
stc
push
sbb
jne
mov
xor
faddl
push
push
inc
in
loop
jne
xchg
ror
and
mov
shll
jl
jo
loopne
ret
xor
inc
xchg
mov
imul
jl
sub
push
sti
nop
xchg
aas
mov
mov
jmp
dec
push
rcrl
xor
ret
leave
fwait
jnp
and
and
add
add
lock
mov
mov
int3
subl
and
in
push
pusha
push
stos
lods
push
push
dec
fcoml
repz
dec
push
push
jge,pt
xchg
cmp
in
ret
rorl
int
mov
inc
loope
or
jmp
stc
push
insb
mov
leave
dec
lods
outsl
jo
cs
into
mov
dec
in
jge
fidivs
sub
fwait
aad
pop
ljmp
outsb
jb
or
aas
dec
dec
push
jle
push
mov
insl
mov
inc
int3
add
jae
mov
inc
inc
jns
sbb
loop
mov
sbb
cmp
pop
dec
ret
repz
and
out
loop
mov
idivl
mov
movsl
call
fsubs
rorl
jae
out
pop
iret
daa
sbb
jno
ret
adc
test
or
hlt
sub
lret
fldl
mov
pop
mov
mov
ret
jb
ror
mov
or
xchg
imull
jb
jne
cmpsl
daa
mov
in
in
cmp
mov
fsubrp
and
jbe
xchg
in
pop
orb
out
in
orl
sbb
popfw
mov
mov
and
inc
lahf
dec
sub
insb
arpl
out
dec
loopne
rcrb
and
stos
jp
aas
and
lock
pop
cmpsl
mov
jne
fsubr
ja
outsb
push
sub
lahf
insl
leave
ret
pushf
pop
dec
sub
push
lahf
inc
cld
xor
mov
movb
jl
in
or
cmp
aam
inc
ret
mov
inc
add
test
lock
inc
sti
sbb
cmpsb
sbb
sub
lock
iret
lahf
xchg
inc
or
je
out
imul
lea
subl
jae
call
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
ret
pop
and
add
dec
add
add
pushf
int
and
movsl
add
add
pushf
mov
test
mov
add
add
addb
lret
cmpsb
add
add
movb
clc
and
add
add
lret
adc
add
add
mov
pop
add
add
inc
cmp
std
adc
add
add
xchg
lock
out
xchg
sub
add
add
add
rolb
add
mov
add
add
fstpl
inc
pop
fildl
add
add
add
cmpsb
add
add
and
fcmovnb
ret
add
add
bound
add
add
stos
in
mov
add
add
add
mov
test
xchg
add
add
cmp
das
pop
aad
add
add
es
mov
fldl
add
add
xchg
cmp
add
lods
pop
icebp
lret
add
add
mov
add
jle
add
add
out
mov
add
push
xchg
ret
cmp
add
sbb
jno
add
add
add
add
test
and
add
add
jmp
add
add
push
jno
ucomiss
add
add
jmp
addl
add
out
lods
jl
add
insl
add
add
add
sbb
add
add
roll
add
test
jb
add
movsb
lods
add
add
sbb
add
add
lods
ja
mov
add
xor
lcall
add
add
daa
inc
mov
add
in
add
add
or
mov
add
and
add
insl
arpl
cmpsl
add
add
mov
cmp
add
add
add
add
add
pop
in
mov
push
add
add
std
jge
xchg
xor
add
add
mov
lahf
dec
add
inc
mov
add
add
clc
dec
pop
test
adc
xchg
je
jae
add
add
mov
add
sldt
add
mov
stos
add
add
fwait
dec
jne
mov
add
add
xchg
leave
rorb
add
add
scas
sub
xchg
insl
add
add
aaa
addr16
mov
jle
mov
add
sub
add
add
fcomp
iret
ret
add
out
jmp
add
add
add
filds
add
add
addl
add
int3
out
jnp
aad
add
add
ret
flds
add
add
ljmp
or
inc
add
add
sbb
mov
add
push
adc
add
add
push
add
add
cltd
outsb
iret
cmp
add
add
inc
enter
add
int
add
add
push
add
add
xchg
mov
add
rorb
add
pop
movb
add
repnz
cmpb
add
lock
add
or
or
add
add
add
int3
lret
ret
add
add
repnz
sbb
add
add
std
lods
add
add
jbe
int
xor
orb
add
add
outsl
add
add
jo
in
adc
add
add
pop
cmp
push
jg
add
add
pop
xor
add
or
add
add
pop
nop
add
add
add
movsb
dec
dec
add
insl
add
add
push
push
or
add
add
push
fcoml
ss
add
add
cs
in
mov
add
add
faddp
add
add
jecxz,pt
or
add
and
lahf
pop
sub
add
add
rclb
add
pop
mov
js
paddusb
add
add
sub
cmc
add
add
shlb
daa
add
cmpsl
flds
add
add
aam
add
add
xor
cli
sbb
add
lcall
ret
add
fsubrl
add
add
adc
add
add
cltd
enter
add
imul
filds
or
add
sahf
iret
push
adc
add
add
add
subb
add
add
push
add
add
fadd
push
and
add
out
add
add
imul
xchg
addb
add
fidivrs
sbb
sub
add
add
push
mov
add
jo
add
add
fs
xchg
loop
add
add
mov
add
cmp
and
ljmp
mov
or
add
add
lret
test
movsl
cmp
add
add
mov
add
add
mov
add
add
adcb
out
loopne
add
add
pop
rcr
add
add
gs
add
add
mov
shll
add
add
sub
into
add
lods
jg
add
add
pop
mov
add
add
inc
gs
add
add
les
xor
add
add
xchg
jecxz
adc
test
add
add
xlat
xor
add
add
cs
xlat
push
add
addl
into
pop
add
addl
sbb
inc
cmp
add
add
call
add
adc
add
add
outsl
fs
add
add
popa
jmp
and
add
add
jb
std
js
add
rolb
add
add
addr16
repnz
add
repz
add
movl
mov
fwait
add
add
add
push
cmc
push
add
add
dec
xor
adc
mov
mulb
fwait
dec
add
mov
add
in
add
add
push
add
insw
adc
add
add
icebp
adc
add
into
add
add
add
pop
add
add
aas
enter
add
add
mov
add
add
aad
adc
add
add
fsub
mov
stos
test
add
add
shr
add
add
es
push
leave
mov
add
add
enter
add
add
mov
and
add
add
dec
add
add
clc
xor
add
add
add
add
ljmp
add
add
mov
add
add
roll
add
xchg
add
add
add
add
cmp
fstpl
filds
add
add
add
add
add
adc
add
xchg
fisttps
mov
add
xchg
dec
add
mov
test
jecxz
cmp
add
add
sub
roll
add
cmp
insl
pop
add
add
xor
add
inc
add
add
and
mov
add
add
mov
add
add
or
cld
loopne
xor
add
add
adc
add
add
in
dec
inc
add
mull
add
add
mov
sbb
add
add
push
ja
inc
fadds
add
add
jb
add
cmc
or
mov
jge
cmp
add
add
addr16
add
add
or
dec
pop
add
pop
fildl
add
add
sub
sub
add
add
sub
addb
add
xchg
dec
orl
xchg
xchg
cli
in
sbb
add
add
sub
add
add
mov
add
stos
add
add
jle
not
test
add
add
out
loop
push
mov
add
lds
add
xor
add
jecxz
add
add
mov
out
xchg
add
add
adc
in
add
fcmovnb
add
add
ret
outsb
adc
add
add
xchg
je
mov
xor
add
add
sub
pop
add
xchg
push
add
add
sbb
inc
xchg
gs
push
lock
jne
jbe
add
add
mov
sub
add
add
add
fisubrs
pusha
add
push
movl
arpl
add
add
add
add
leave
mov
add
sbb
out
add
add
add
or
add
add
add
add
and
dec
sub
add
add
add
add
add
and
add
add
mov
add
push
mov
add
add
mov
sub
pop
add
add
cmpsb
xor
xchg
add
add
push
sbb
jo
add
add
pop
pushl
pop
pop
add
add
and
incl
add
add
xor
pop
and
add
add
pop
inc
push
sahf
scas
add
add
push
xchg
addb
stc
cmp
add
add
push
imul
add
add
movsl
scas
push
int3
add
add
add
dec
add
cs
add
add
xchg
cmp
add
add
pop
push
mov
add
or
add
mov
add
add
rclb
ret
mov
add
add
outsb
sbb
leave
add
add
sub
xor
add
pop
inc
add
add
lcall
add
add
sub
add
mov
pushf
mov
add
add
add
mov
xor
popf
add
add
stos
ror
jo
inc
add
add
mov
mov
add
mov
fidivrl
sub
add
mov
pop
add
insb
add
add
fdivrs
cmp
and
add
add
inc
shll
add
add
xor
pop
add
sti
add
add
add
in
lcall
imul
sbb
add
mov
in
add
xlat
add
add
cmp
ljmp
add
cmc
bnd
add
add
adc
sub
mov
data16
jmp
add
jecxz
out
and
add
add
scas
leave
lea
add
add
cmc
popa
cwtl
in
sldt
add
loop
imul
lahf
filds
add
flds
add
add
lds
or
add
add
lods
lcall
add
inc
mov
adc
add
add
pusha
xor
in
bound
add
add
dec
add
add
pushf
and
add
sbb
add
add
mov
add
add
and
dec
stos
ja
add
add
dec
pop
scas
add
xor
add
add
call
xchg
add
add
pop
jne
cmpsb
das
cmp
add
add
insl
nop
add
mov
add
add
jb
cwtl
push
mov
add
or
sbb
add
add
test
add
add
mov
add
push
mov
add
add
and
cli
lods
add
pop
add
add
add
pushw
and
cmp
add
add
mov
jo
add
add
mov
xor
add
add
lock
add
lret
add
add
faddl
add
add
data16
add
es
add
add
loopne
add
add
lret
sub
sbb
add
add
mov
add
push
loop
add
add
mov
add
add
test
add
add
jne
add
add
mov
xor
add
add
jbe
mov
insl
add
add
push
negl
add
add
add
imul
testl
fwait
popa
sbb
add
daa
push
add
add
add
and
add
adc
mov
adc
add
add
sbb
pop
lcall
inc
push
pushf
inc
add
add
fmulp
xchg
add
add
xor
jbe
add
sbb
add
add
xchg
sbb
add
call
mov
add
add
inc
aas
inc
add
sahf
imul
add
add
jo
xchg
add
add
mov
or
dec
and
add
add
and
add
iret
mov
dec
fmul
sbb
cld
add
add
adc
adc
add
add
or
add
mov
add
lods
fstpl
faddl
add
add
add
add
mov
add
add
add
dec
or
xchg
push
add
add
outsb
and
repz
out
aad
add
jnp
add
add
or
cld
inc
je
add
add
mov
inc
pop
add
add
pusha
ret
sbb
add
add
xchg
and
inc
xchg
add
add
jne
subl
add
add
add
dec
cmc
add
add
add
in
inc
cli
add
add
inc
stos
and
add
add
push
mov
pop
out
insl
add
add
inc
jnp
movsl
fcmovb
add
add
scas
insb
pop
js
add
insl
add
add
adc
scas
scas
jp
add
add
clc
cli
pop
xchg
cmp
add
add
push
add
and
add
add
fistpll
add
add
iret
add
add
repnz
in
inc
add
add
hlt
shlb
shrl
add
aad
or
add
add
popf
adc
pop
add
add
fimuls
mov
add
sub
add
add
mov
add
mov
add
sub
add
add
add
add
jo
mov
popf
add
add
and
test
call
add
insl
push
push
xchg
and
cmp
jg
add
add
jl
cltd
jmp
add
add
add
xor
add
add
xchg
add
inc
mov
add
add
sahf
add
add
xchg
nop
daa
and
cmp
add
add
sub
in
add
in
cld
add
add
and
add
add
mov
add
add
js
sbb
add
add
add
push
sbb
mov
add
add
pop
movsl
cmp
popl
add
add
add
add
add
add
mov
test
add
add
loopne
add
add
add
add
mov
add
xor
add
jne
das
jecxz
add
add
push
outsl
daa
mov
add
add
add
sub
lods
ss
js
push
pop
pop
push
add
add
and
mov
add
les
add
add
icebp
add
add
pop
and
cmp
add
add
lret
xchg
add
in
ret
add
add
mov
popf
sbb
add
add
lret
cli
test
pop
pop
add
add
fs
sub
add
add
stc
loopne
pop
fadds
add
add
inc
pop
scas
add
add
into
jns
cltd
add
dec
addb
add
xor
add
add
iret
test
add
add
mov
int
add
add
cli
ljmp
add
sub
sbb
add
adc
lret
push
add
imul
adc
rorl
adc
add
lods
add
add
in
fisttpll
repnz
add
shll
add
adc
inc
add
add
xchg
imul
add
mov
add
add
fisubrs
add
add
nop
test
lock
dec
or
add
add
sarl
add
add
ret
repz
mov
add
add
andl
add
add
add
add
daa
int3
aad
and
add
add
je
mov
js
add
add
dec
xor
and
add
add
mov
or
mov
add
add
test
sbb
add
add
movsb
les
add
dec
push
and
add
add
add
add
add
mov
addr16
incl
add
add
sbb
shr
leave
add
add
mov
add
add
add
add
hlt
in
std
mov
add
add
cld
sub
sub
add
mov
add
add
fadds
add
add
icebp
das
sti
lret
jnp
add
add
js
ret
add
xorl
add
add
lods
insl
mov
add
add
and
dec
ficomps
add
add
mov
add
push
add
add
rcrb
mull
add
add
or
ret
je
fiadds
add
add
je
movsl
add
lcall
lods
cwtl
sub
cli
lds
add
add
inc
and
add
add
mov
mov
add
add
jne
xchg
je
repz
add
out
incb
add
add
lret
cltd
add
add
xor
sbb
das
add
add
test
addb
add
add
inc
cwtl
ja
pop
add
add
lret
sbb
outsb
inc
in
add
add
ret
add
xor
add
add
sbb
add
mov
dec
or
add
add
add
add
add
push
out
and
add
add
add
std
call
popf
cmpsl
add
add
mov
mov
add
jmp
add
in
in
fdivp
add
add
mov
rolb
add
add
add
add
add
loop
mov
add
addb
add
jp
adcl
add
add
add
add
clc
clc
jne
sahf
sbb
xchg
sub
add
int3
out
add
add
cmp
movl
or
jp
add
add
lods
mov
add
add
pusha
pop
pop
add
add
add
push
adc
test
push
add
add
mov
add
add
mov
add
add
in
add
add
pop
push
scas
add
or
inc
jno
scas
jecxz
add
add
dec
out
popf
nop
mov
add
add
sbb
out
pop
add
aad
add
add
scas
iret
je
xchg
add
add
fs
push
sbb
add
addr16
add
add
add
add
sub
add
js
xchg
test
push
add
add
rcrb
loopne
add
add
mulb
add
add
mov
add
add
or
push
lea
add
add
add
int3
mov
rolb
add
add
lds
add
enter
add
jbe
aam
push
xor
add
add
or
add
add
test
xor
add
add
enter
add
add
sub
cmp
sub
add
add
dec
test
add
mov
add
add
cmp
adc
lds
add
add
rcrl
add
add
sbb
add
add
xorb
add
add
je
in
sbb
nop
add
add
sub
lds
inc
insl
add
add
ds
cltd
add
testb
add
bnd
mov
add
sbb
add
jns
add
add
js
jp
fcompp
add
add
push
arpl
cmp
rorb
and
add
add
add
cmc
add
add
js
xor
or
add
add
add
hlt
add
add
fsubrl
add
add
dec
mov
lock
add
add
jae
add
add
push
jb
lret
cmpsb
mov
pop
pop
mov
add
add
add
add
addb
add
cld
add
add
push
xor
add
add
xrelease
add
add
add
lret
decb
add
add
jmp
or
add
add
or
add
les
add
add
fs
xor
pusha
sbb
add
add
inc
cmp
add
add
lock
add
add
add
into
pop
aam
xchg
add
add
mov
pop
add
add
data16
loope
add
cli
add
add
mov
add
add
mov
adc
add
add
sub
pushf
add
mov
add
fsubp
jp
pop
add
add
int3
movsb
add
add
sub
cmp
add
add
dec
orb
jae
filds
mov
add
add
jbe
jp
add
push
add
add
xchg
sub
sahf
mov
add
add
sbb
add
add
cmpl
inc
add
add
nop
pop
jno
out
sub
add
add
mov
add
add
sar
iret
add
mov
add
lcall
add
sbb
rorl
add
jb
imul
add
add
cmp
add
jnp
lea
cli
inc
add
add
dec
jle
jge
add
add
aaa
leave
repz
add
add
out
jg
out
push
add
add
imul
push
jecxz
add
leave
add
add
cwtl
inc
add
add
add
icebp
add
add
lock
scas
add
add
mov
std
add
add
push
dec
add
add
mov
add
cld
push
jge
aaa
jmp
add
add
xchg
add
add
aam
cltd
mov
add
mov
add
add
sti
outsl
pop
aaa
add
xchg
cmpsl
and
pop
add
add
mov
add
add
add
mov
roll
add
jbe
sub
add
clc
loope
cmpsl
add
shrl
out
jns
pop
add
add
rorl
rolb
add
add
add
js
add
dec
lock
add
test
sti
inc
mov
cld
sub
int
pop
add
add
pop
test
adc
add
add
cmp
push
push
addl
rorl
cltd
push
xchg
pop
add
lret
add
add
je
add
add
mov
aas
add
add
add
mov
add
adc
add
add
adc
mov
add
add
gs
add
add
or
lds
add
add
add
add
ret
add
fildl
mov
sub
das
jge
add
add
ja
jae
add
add
dec
into
stos
push
add
or
add
add
mov
icebp
inc
sbb
add
add
jle
loop
sub
add
add
daa
dec
popl
add
add
jno,pt
or
add
add
pop
mov
xor
xchg
mov
add
add
xchg
cmc
imul
add
sub
add
add
adc
add
add
add
jle
mull
add
stos
ja
mov
pop
add
add
push
push
icebp
inc
add
paddd
add
add
flds
add
add
push
add
add
adc
adc
add
add
ret
mov
add
fdivrs
add
add
fiaddl
data16
mov
add
add
sbb
add
add
add
add
add
add
hlt
push
lock
add
filds
add
add
insl
jp
hlt
add
add
cmp
add
add
ficoms
dec
add
push
add
add
shlb
add
shrb
push
xor
add
add
sbb
cld
enter
add
lahf
mov
add
add
scas
call
add
add
and
cld
add
adc
add
add
movsb
test
add
add
jge
aad
add
add
jl
fnstsw
add
addl
add
push
addr16
add
add
add
out
scas
leave
adc
add
add
cmpsb
mov
add
add
inc
dec
push
fs
add
add
push
jno
cs
add
add
and
or
add
nop
xchg
add
add
fistpll
add
pushl
lret
imul
and
out
add
add
sub
push
pop
icebp
test
add
add
movsl
les
add
add
add
mov
add
addl
fisubrs
add
jo
pop
rol
outsl
add
add
outsb
imul
add
add
add
shl
jecxz
sub
add
les
out
lock
add
add
dec
pop
into
add
jge
add
add
lcall
add
add
xor
push
xchg
lock
add
mov
jg
add
pop
insb
add
add
mov
icebp
aad
adc
add
add
int
call
add
sbb
add
add
sahf
pop
popa
stc
xlat
lret
add
in
and
imul
add
add
jg
mov
add
add
fsubrs
add
add
pushf
scas
sarl
add
add
xor
mov
add
add
loop
out
shrl
add
add
adc
adc
addr16
add
cli
push
lahf
scas
add
fisttpll
add
add
xor
add
add
jg
cmc
inc
and
add
add
adc
sbb
add
das
add
add
data16
xchg
out
jp
add
add
inc
leave
out
mov
add
add
pop
aaa
inc
add
jge,pt
add
add
mov
add
add
fildll
daa
fildl
add
add
cs
jo
add
add
push
faddl
add
ret
lock
repz
add
add
inc
clc
in
add
jo
add
add
les
add
add
out
loopne
dec
cmpsl
stos
add
add
pushf
and
dec
add
mov
cs
jp
sub
add
add
ret
add
add
push
cmp
add
mov
add
add
call
xchg
add
add
sub
stos
xchg
inc
ret
add
dec
push
add
add
mov
add
add
jecxz,pn
mov
add
add
leave
add
add
dec
imul
add
add
icebp
add
add
and
push
lahf
add
adc
add
add
imulb
and
xor
add
add
mov
enter
add
mov
mov
add
add
lock
cmp
add
add
mov
add
add
imul
add
pop
popf
add
add
mov
dec
add
add
repnz
lret
jbe
xor
add
add
add
mov
add
add
aam
jnp
mov
add
insl
hlt
int
add
add
lods
outsb
dec
loopne
add
add
add
mov
cmp
add
add
pop
jmp
add
push
inc
jp
add
cmpsl
movsb
add
add
clc
sbb
clc
call
add
popa
pop
push
xor
add
add
dec
repnz
ret
add
add
sbb
add
add
pop
les
add
add
lods
aad
add
adc
pop
das
pop
fsub
xchg
add
add
sbb
xchg
in
add
add
bound
add
movsl
aad
add
add
out
add
add
xchg
push
add
add
push
sub
rcl
add
add
add
add
add
call
incb
add
add
cmp
add
dec
mov
inc
dec
add
add
pop
sbb
fst
cltd
add
add
out
movl
add
add
dec
xor
add
adc
dec
add
add
mov
add
add
add
push
movsb
fadds
add
add
mov
loop
add
add
ds
add
jg
add
add
or
and
and
lods
mov
fs
add
add
adc
add
adc
add
add
sub
add
add
add
push
aam
add
add
stos
xlat
imul
add
add
add
insb
imul
std
in
loope
add
add
inc
xchg
add
add
fldl
add
add
rorl
xorl
mov
out
add
add
scas
xchg
mov
add
inc
add
add
adc
add
add
scas
dec
pop
cmp
add
loope
add
js
add
add
subps
add
add
out
imul
loopne
add
add
pushf
adc
add
inc
add
add
hlt
mov
add
add
out
or
add
add
pop
mov
cmp
fdivp
push
mov
enter
add
add
jbe
jae
add
aaa
pushf
add
add
sbb
xorl
in
pop
add
add
jo
sbb
add
push
ret
add
add
and
or
add
add
or
repz
cld
add
add
cmp
sub
add
add
jl
mov
add
add
mov
jge
push
add
add
push
rorl
add
fbstp
cmpsb
aas
xchg
push
dec
std
add
add
xchg
daa
and
add
xchg
cltd
imul
add
add
pop
ss
xor
add
add
xlat
pop
test
add
add
cli
js
add
add
fmul
mov
add
add
add
andb
inc
add
scas
add
add
add
clc
andl
add
add
arpl
pop
or
inc
add
add
faddl
ljmp
add
outsb
into
pop
cld
xchg
add
mov
dec
pop
lret
add
add
push
js
jno
add
add
enter
pop
add
add
aad
push
or
sub
add
add
add
fwait
add
add
mov
fidivs
pop
xor
shlb
hlt
lods
lods
add
add
lret
add
orl
add
add
add
add
sbb
add
add
adc
add
mov
add
add
ss
addl
add
add
testl
and
add
add
add
xor
sbb
adc
add
add
shrl
je
loopne
add
add
add
inc
add
add
cli
subl
imul
lock
jns
add
add
test
sbb
add
add
mov
add
add
lods
sar
add
add
in
push
pop
icebp
add
or
add
add
cmp
push
fnsave
stos
movsl
pop
pusha
filds
add
add
add
add
add
cmp
repnz
add
add
addr16
add
add
nop
adc
inc
lret
add
inc
or
xlat
mov
cmp
pop
and
add
out
add
inc
pop
add
add
pushf
iret
test
nop
dec
add
add
inc
pop
aad
cld
cmp
add
add
lcall
add
pop
jo
push
ret
add
dec
mov
add
add
pop
inc
xlat
add
out
add
add
inc
ffree
dec
das
push
add
add
sbb
add
add
add
add
add
mov
xor
lret
stc
add
add
das
sbb
pusha
lods
inc
add
add
mov
add
add
add
sub
out
jecxz
add
add
std
jle
xchg
add
add
cld
lods
cmp
dec
add
add
mov
out
inc
push
add
add
jns
das
cwtl
out
add
add
add
sub
add
add
add
dec
ds
push
jnp
add
add
out
icebp
aam
and
add
add
add
add
add
rcr
push
jb
add
add
mov
ret
and
xchg
add
add
ljmp
nop
add
add
lods
fstps
add
add
mov
add
add
test
dec
add
mov
add
add
push
add
jle
add
add
jl
xor
out
call
add
ss
add
add
push
lods
sub
add
popf
push
cltd
ror
add
add
test
pop
add
in
je
add
add
pop
add
add
pop
xor
add
add
mov
mov
add
add
add
push
stos
dec
inc
push
repz
add
or
lds
add
add
rclb
pop
in
add
add
fstps
push
add
add
add
add
add
add
pop
inc
les
add
rcl
inc
pop
xchg
add
add
mov
sti
aaa
add
pop
push
add
add
bound
mov
add
pop
aaa
xchg
dec
jb
add
add
jp
shrb
add
cmpsl
add
add
mov
pushf
add
add
jmp
jne
or
xchg
mov
and
add
add
rcrl
add
mov
jg
jg
add
add
gs
add
xor
add
add
pusha
das
mov
add
xchg
lahf
jmp
add
add
add
mov
stos
dec
rcrb
ficompl
sti
mov
add
add
ret
xchg
add
dec
loop
add
add
xor
pop
add
add
cltd
fcompl
add
add
cmp
add
add
push
add
add
lds
iret
jae
adc
add
add
aad
add
pop
dec
add
add
push
mov
add
add
cltd
xchg
lods
sub
add
add
ljmp
add
add
repnz
xchg
jnp
xor
add
add
mov
fcomip
movb
add
or
imul
add
add
int3
dec
cltd
lcall
inc
cwtl
lds
ret
add
add
mull
jbe
lock
jge
add
add
fsub
aaa
jno
mov
add
add
sub
ss
add
add
jo
pop
mov
sub
add
add
cmp
enter
add
enter
add
lcall
mov
mov
sbb
jno
dec
popf
fs
add
add
add
add
add
add
push
sahf
insl
sub
add
jns
into
mov
add
mulb
add
add
ds
sbb
std
add
add
jne
lahf
pop
fs
xor
add
add
js
sbb
sbb
das
or
jg
add
add
add
cltd
mov
test
add
add
insl
add
add
mov
xor
mov
add
add
add
add
scas
das
xchg
add
add
dec
mov
add
add
mov
xor
add
mov
add
add
push
jnp
pop
pop
or
add
add
movl
add
add
add
adc
adcb
mov
add
add
jo
mov
inc
add
add
fsubs
mov
add
add
lret
cmpsb
push
or
add
add
sbb
sub
add
add
ret
into
ret
fdivl
sahf
into
pushf
inc
into
add
add
xchg
push
cmp
add
add
cli
pop
add
add
into
add
add
add
arpl
add
add
add
add
bound
mov
add
add
in
xor
add
loopne
mov
add
int3
jecxz
add
add
push
jbe
je
add
add
mov
add
add
sub
add
or
in
mov
insl
xchg
add
add
cwtl
test
loopne
add
add
les
pushf
mov
add
add
mov
es
inc
lret
rolb
add
add
stos
cmp
add
or
add
add
nop
lock
hlt
sub
add
add
mov
add
add
call
add
pop
add
add
add
int3
add
mov
add
add
jb
lods
stc
add
jle
add
add
je
inc
xor
test
add
add
lea
lds
add
add
mov
add
xchg
add
add
pop
ljmp
add
dec
mov
add
add
divb
mov
add
add
cwtl
jae
roll
add
add
mov
in
add
add
lock
movb
mull
add
add
lea
add
add
add
add
mov
add
mov
add
add
xlat
pop
mov
add
divb
cmpsl
ret
add
add
cmpl
add
add
es
cmpsl
rolb
add
nop
ret
sbb
add
add
mov
add
inc
add
add
mov
mov
lods
push
sub
pop
add
add
clc
xchg
lahf
loop
add
les
add
add
inc
std
fwait
loop
add
add
outsb
mov
add
add
inc
jg
add
jg
add
add
test
aaa
adc
add
dec
fldl
adc
add
add
mov
add
add
out
bound
loopne
add
add
sbb
pand
data16
add
xchg
add
adc
add
add
les
add
add
fcmovbe
mov
add
movsl
xchg
add
sub
add
add
xor
or
add
add
pusha
mov
add
add
xchg
lods
add
out
add
add
or
add
scas
adc
add
add
add
add
add
arpl
add
add
mov
dec
cmc
pop
and
add
add
push
ja
inc
xchg
add
add
dec
ja
dec
add
mov
add
push
add
add
dec
cmp
xchg
or
xchg
add
popf
fwait
add
add
jp
cmpsl
icebp
xlat
arpl
add
add
add
add
xchg
inc
dec
add
dec
testl
push
int
ljmp
sub
add
add
movsb
add
sub
add
add
jle
mov
add
add
sbb
add
add
push
push
popf
test
add
clc
add
add
mov
loopne
add
add
andl
add
add
pop
cmp
pop
add
add
ret
ret
cmpsb
nop
add
add
adc
jae
mov
add
add
ficompl
push
add
sbb
add
add
sbb
sub
add
add
push
lcall
hlt
aaa
adc
add
data16
add
add
aaa
imul
adc
add
cmp
fwait
add
add
add
add
add
add
add
dec
push
leave
imul
add
add
sbb
pushf
mov
add
movl
mov
fwait
push
sub
add
add
pop
daa
mov
add
adc
adc
add
add
add
add
loope
jge
test
add
add
jl
cli
in
add
cmpsb
into
add
add
push
adc
jns
inc
add
add
mov
mov
cmpsb
inc
jle
add
or
add
add
enter
cli
xlat
add
add
jmp
sbb
add
add
xchg
leave
add
test
push
adc
add
add
and
js
jbe
add
add
aaa
cmp
add
add
add
sub
add
nop
add
add
imul
add
leave
mov
add
movsb
add
add
daa
xor
mov
add
xor
nop
mov
add
add
outsb
xchg
aaa
mov
add
xor
add
add
je
jbe
push
add
add
mov
xchg
add
add
sub
inc
stc
add
add
lcall
add
add
sub
pop
ja
add
add
add
add
add
mov
push
jbe
sub
add
add
int
add
add
add
mov
xchg
push
add
pop
jb
add
add
data16
add
mov
jg
popa
mov
add
add
dec
mov
addb
add
fcomp
mov
add
add
roll
ljmp
ret
or
add
lods
add
add
loop
adc
add
stos
loopne
lds
add
jmp
or
add
add
cmp
in
lods
mov
cmp
add
add
adc
cld
testl
add
add
in
lods
pop
add
add
fstpt
out
out
jne
add
add
cmpb
add
inc
mov
add
add
xchg
leave
xor
mov
add
add
imul
incb
add
fmul
add
add
sub
addb
add
add
sti
add
add
mov
hlt
add
add
les
add
add
dec
test
add
add
in
add
add
cs
add
add
add
test
add
pop
xor
add
cmp
add
add
call
cmc
add
add
add
adc
add
inc
adc
jae
add
add
add
jb
xorb
add
jecxz
sbb
add
add
mov
and
add
add
dec
sub
add
add
push
add
add
and
aaa
pusha
add
je
add
add
idiv
inc
and
add
mov
mov
lds
add
add
add
add
outsb
sub
add
add
lock
add
add
mov
movsl
add
add
mov
ja
add
add
lret
ret
xor
sarb
outsl
add
fisubrl
add
add
dec
sbb
shlb
add
add
popa
jno
test
add
lods
scas
mov
xor
add
add
xor
add
add
stos
pop
inc
mov
add
stos
dec
add
push
fadds
add
add
int
add
add
fisubrs
mov
add
push
bound
add
add
add
push
xlat
test
xchg
inc
mov
loop
add
add
sbb
ja
add
inc
popf
add
add
pop
xor
xor
add
out
xchg
scas
out
xchg
add
add
inc
and
add
xchg
xchg
inc
add
add
sub
xor
add
add
push
xchg
and
add
add
cli
test
add
in
adc
movsl
dec
ljmp
lea
jmp
add
or
add
add
fwait
push
sub
add
add
and
add
rclb
add
add
in
sbb
sbb
idivl
add
add
lock
add
add
dec
pop
sti
mov
add
mov
loope
add
add
mov
add
xchg
add
add
or
push
and
add
mov
fadd
stos
add
add
pusha
gs
inc
add
add
xchg
adc
xor
add
add
addl
cwtl
add
add
stos
xor
xor
add
add
shll
add
and
add
add
push
add
nop
xor
add
add
sbb
add
add
add
push
pop
sbb
mov
loop
add
add
adc
leave
push
test
add
add
cmp
pop
frstor
add
dec
addl
stos
inc
add
add
ficoml
mov
add
add
int
add
add
xchg
cmp
push
add
add
hlt
xorb
mov
or
sbb
add
add
pop
rorl
add
loope
add
add
inc
test
add
add
pop
jno
cmp
add
inc
dec
add
mov
add
add
sbb
add
add
add
jge
add
add
sub
add
add
and
add
add
sete
shlb
lock
std
add
add
jl
push
push
lods
push
add
add
stc
inc
xor
add
add
inc
add
cmpsb
enter
mov
add
add
mov
add
add
sti
mov
cmc
add
add
and
cmp
add
test
fnstcw
add
add
js
adc
add
cmpl
into
add
add
in
cmp
add
add
sbbb
add
rorl
add
add
das
jmp
add
inc
inc
pop
jge
dec
add
add
faddl
jne
add
add
outsb
notl
sbb
add
add
scas
sbb
add
add
push
orl
add
cmp
cmp
add
add
test
push
adc
add
add
or
add
add
incb
add
add
jge
and
add
add
adc
add
add
add
add
sti
xor
add
add
lods
add
sub
add
add
mov
fs
xchg
add
add
pushf
jno
mov
add
into
lret
mov
add
jg
add
add
xor
ss
dec
xor
add
add
jns
add
add
add
add
sbb
mov
aad
add
add
or
add
adc
orl
add
add
lcall
add
push
lods
jbe
call
in
pop
es
add
add
mov
add
add
cmc
ret
test
add
add
add
add
cmp
push
jae
add
add
inc
sbb
adc
add
add
add
add
inc
inc
sahf
xchg
in
add
add
insb
fdivp
lds
add
add
pop
imul
add
add
pushf
rorb
add
add
jge
add
xlat
add
add
je
add
add
add
popa
les
test
sbb
add
push
add
add
pop
xor
add
rorl
add
add
xchg
and
lret
add
add
xchg
dec
push
test
add
add
cwtl
jmp
lret
add
add
hlt
add
add
add
cwtl
add
add
mov
add
dec
add
add
and
cmp
sbb
add
add
in
std
jae
and
add
add
sub
sbb
add
add
mov
hlt
pushf
jmp
add
aam
add
add
mov
add
adc
dec
das
jnp
jecxz
add
add
add
pop
add
add
add
mov
add
mov
rclb
rolb
dec
mov
add
add
ljmp
and
lods
sbb
add
add
push
add
add
test
repz
add
add
stc
ljmp
sub
xchg
out
lods
jo
add
add
sub
lods
add
add
push
cmp
add
add
cltd
data16
add
add
test
aas
and
add
add
js
clc
negb
arpl
or
add
add
xor
mov
xor
fistps
add
jb
dec
jne
imul
add
or
sti
xchg
add
xchg
push
add
add
push
mov
add
add
jns
call
mov
mov
dec
and
add
out
add
add
rclb
add
cmp
inc
in
ja
add
add
add
add
xor
ret
cmp
add
add
mov
add
add
jp
jb
add
add
add
mov
sub
add
add
jne
sti
add
add
xchg
in
or
add
adc
out
jb
cmpsb
mov
cmp
add
add
jle
mov
add
jge
add
add
pusha
add
insb
add
add
cmpsl
add
jb
cmp
add
add
add
ret
add
add
stos
mov
add
add
sar
pop
add
add
add
int
cltd
add
dec
jnp
add
add
or
add
jns
jp
roll
add
add
lds
add
add
scas
and
adc
inc
add
add
push
lods
add
add
inc
jecxz
add
add
insb
add
add
push
mov
lods
out
mov
roll
add
sarb
cmp
add
add
bnd
add
add
and
or
movsl
add
add
or
fbstp
add
add
int3
or
and
jo
add
add
dec
lds
add
movsb
cmp
fwait
add
mov
add
add
jbe
and
add
xlat
gs
scas
inc
lds
add
add
in
out
add
jb
add
add
jo
stos
test
add
inc
mov
inc
sub
enter
add
dec
lahf
add
add
cmp
push
inc
push
add
add
xchg
ljmp
push
mov
idivl
add
add
push
incl
add
add
jae
sbbl
add
add
lcall
add
add
push
or
fadds
add
add
add
add
lods
lret
inc
add
cmp
add
add
jmp
cli
cld
add
add
bound
loope
ret
add
add
sub
inc
add
sub
add
or
add
add
xor
mov
add
add
add
add
add
fdivl
add
add
in
adc
add
add
push
push
add
add
push
test
mov
add
add
fidivs
add
add
sahf
mov
add
add
andb
add
add
mov
enter
add
fcoms
into
add
push
int
add
add
divb
add
add
sbb
add
loop
das
push
add
mov
add
mov
out
add
add
sbb
cmp
add
add
jecxz
add
pusha
mov
into
scas
daa
cmpsb
push
add
add
mov
sub
add
add
pop
insb
add
jmp
add
add
mov
add
add
xchg
push
xor
xor
loopne
les
add
add
rcr
jmp
pushf
add
add
mov
add
add
sub
roll
add
add
lret
xor
add
add
or
add
add
les
pushf
add
xchg
mov
add
add
push
sbb
add
add
ror
stc
add
cwtl
stc
add
add
nop
addl
add
int
fldcw
fstp
add
add
call
add
mov
add
add
in
push
xchg
js
add
add
or
pop
dec
jg
add
add
ret
aaa
add
jge
add
add
je
fmul
sbb
add
add
inc
lea
add
dec
add
add
mov
add
add
pop
rorl
add
push
js
test
xlat
add
add
idivb
movsb
add
cmp
add
add
cwtl
movsb
subl
add
add
xchg
xorl
xor
inc
jae
add
add
fiadds
add
add
or
add
add
add
inc
add
add
cld
pop
scas
mov
mov
loope
mov
xchg
push
add
add
aam
aad
add
add
add
es
add
add
into
and
add
add
add
adc
add
add
adc
add
add
into
add
add
clc
inc
push
inc
add
push
add
cltd
mov
add
add
mov
add
add
jl
ret
jae
add
add
test
add
add
mov
movsl
add
add
pop
xchg
xlat
add
add
out
mov
add
add
psubb
imul
add
xchg
pop
add
add
test
in
ret
xor
add
add
add
add
add
xor
add
add
pop
dec
pop
insl
aad
add
add
jp
aaa
xor
jo
mov
add
inc
add
add
or
mov
lods
mov
add
add
add
add
in
and
add
or
add
add
sbb
add
add
mov
add
add
add
add
mov
leave
sub
add
ja
jns
pop
mov
add
add
or
sbb
add
add
jp
gs
add
add
movsl
mov
push
add
add
xchg
mov
pop
jle
add
add
add
add
mov
repnz
add
insb
adcb
add
test
add
add
mov
pop
lcall
fildll
cmp
add
add
mov
roll
add
add
mov
dec
add
add
jae
and
add
adc
sbb
add
std
xchg
add
add
ret
lahf
xchg
xchg
add
add
inc
mov
cld
pop
les
add
add
ja
sub
add
and
add
add
into
iret
jnp
add
add
jmp
push
outsl
pop
push
add
add
hlt
sbb
push
add
popa
hlt
add
add
inc
out
jae
in
add
add
int3
jo
inc
pop
incb
add
add
and
pop
add
pop
xchg
add
add
rclb
add
add
fadds
add
add
add
add
add
add
or
add
add
pop
mov
add
add
and
pop
push
add
out
add
add
movsb
mov
add
add
jge
orb
out
mov
add
add
mov
add
add
inc
adc
add
add
add
add
add
enter
xor
add
xor
and
stos
add
lahf
daa
add
add
push
mov
add
add
inc
inc
and
add
push
test
add
add
and
add
add
movsl
out
into
xchg
add
add
add
divl
add
add
jo
xor
ret
add
add
pop
push
pop
dec
clc
xchg
add
add
outsb
mov
enter
add
rolb
add
add
dec
sbb
add
sub
dec
cmp
add
add
sub
add
add
jl
out
jg
add
add
mov
ror
add
adc
add
add
add
add
dec
ror
and
add
sbbl
add
sahf
sub
add
add
sub
jg
jl
add
add
adc
xchg
add
add
fcoms
dec
imul
add
add
stc
push
add
add
xor
mov
add
add
prefetch
clc
add
add
cmp
add
add
and
add
jl
add
add
cmp
sbb
add
add
aad
add
add
subl
loope
add
add
movsl
push
out
int
add
add
jmp
aam
add
add
loopne
mov
xchg
push
add
add
pusha
test
add
add
cmp
sub
add
add
shlb
add
add
sti
or
add
inc
push
out
add
ja
add
add
and
add
add
mov
filds
add
add
and
add
add
cs
cmp
add
add
xchg
dec
lahf
fimuls
add
add
addr16
or
add
and
add
add
sub
add
add
lock
adc
add
inc
fs
mov
jb
xor
flds
add
add
out
jecxz
cld
jecxz
add
add
add
add
iret
loopne
add
add
and
pushf
dec
add
add
and
inc
addl
add
add
sarl
rolb
add
add
mov
mov
add
add
add
add
jg
mov
add
push
sbb
add
add
dec
and
mov
add
xor
add
add
lret
adc
or
add
add
test
add
add
add
scas
mov
dec
push
add
add
pop
mov
add
add
lods
lock
jno
add
add
out
add
add
pop
pop
mov
add
push
shl
into
add
push
add
add
clc
jle
push
cmpsl
sahf
add
add
mov
jge
add
add
mov
add
push
mov
add
add
or
mov
add
add
add
sbb
insl
or
add
cmp
add
add
out
sbb
add
add
dec
jb
test
add
add
xor
adc
stos
add
add
xchg
add
add
push
sbb
add
add
lcall
mov
add
pop
stc
cld
add
add
lds
or
add
add
pop
out
adc
add
add
dec
arpl
add
add
fwait
testl
icebp
add
nop
jbe
add
add
movsb
lret
add
add
and
add
add
mov
add
add
add
dec
add
movsl
jecxz
add
add
outsb
dec
out
lret
add
add
out
inc
int3
add
xchg
std
add
add
or
push
lds
js
pop
outsl
sbb
add
add
sbb
cltd
add
add
xchg
mov
add
add
add
add
stos
mov
add
adcl
out
add
add
cmpsb
push
in
movsb
bound
add
add
mov
add
add
push
arpl
loope
dec
add
add
cmp
sbb
add
add
add
pop
add
add
adc
in
mov
add
mov
push
add
add
add
fisubrl
mov
inc
push
add
add
stos
stos
imul
out
add
add
mov
outsb
add
add
hlt
arpl
add
inc
xchg
or
add
add
loopne
test
add
add
add
faddp
ds
loopne
add
add
mov
add
add
cs
add
cmp
add
add
sbb
add
add
add
xor
add
jo
jmp
add
mov
add
add
and
rorl
add
add
xchg
push
int
xchg
add
add
cmp
sti
push
add
add
in
pop
dec
add
add
scas
xchg
xor
add
add
scas
add
cmp
add
add
cmpsb
push
enter
add
add
mov
add
add
ds
add
in
cwtl
add
add
and
fbld
add
ljmp
add
add
pop
and
add
add
add
push
pop
sub
xorb
add
sbbb
inc
add
add
add
pop
mov
add
aaa
pop
repnz
add
add
faddl
add
adc
add
add
gs
pop
add
add
pop
rorl
add
add
mov
jbe
add
add
stos
push
push
xor
add
add
mov
push
dec
mov
add
add
add
pop
add
add
mov
pop
inc
aad
add
add
pop
stos
and
cltd
add
add
lret
sbb
add
add
add
add
add
jo
test
add
fs
gs
add
add
ss
popa
dec
frstor
add
std
clc
idiv
jbe
add
add
into
je
or
add
add
add
xor
or
scas
and
add
add
mov
add
add
mov
pop
bound
add
add
mov
jl
addl
add
sub
add
cmpsl
add
add
adc
repz
insl
pop
add
add
adc
imul
add
push
add
add
in
mov
fcompl
add
decb
add
add
fstps
adc
xchg
inc
lds
add
add
cmp
and
add
jbe
mov
add
add
add
add
lret
std
add
add
xchg
push
repz
or
add
add
test
add
xchg
test
pushf
shr
insb
mov
add
aad
aas
ret
add
add
je
xchg
test
add
add
add
push
xchg
mov
add
ret
movl
hlt
pop
add
pop
loope
add
add
sbb
fbstp
add
add
dec
sbbl
add
add
add
addb
add
mov
lret
add
add
push
xor
jp
pop
add
add
mov
add
test
add
add
inc
sub
xchg
add
add
jp
std
push
add
cld
scas
pop
lds
add
add
add
mov
add
add
xchg
das
rolb
add
adc
add
add
dec
and
ja
add
add
add
icebp
fdivrp
or
add
add
add
add
lret
pop
jp
add
add
mov
jnp
adc
add
add
jg
testl
add
add
add
add
scas
frstor
add
add
mov
add
lcall
add
stos
imul
add
add
push
std
adc
add
adc
add
add
pop
push
addb
add
out
ficompl
add
add
add
jmp
add
add
xchg
shlb
add
add
fsubr
stos
aad
push
add
add
xor
push
mov
xor
scas
sub
mov
lock
stos
push
pop
add
add
or
movsl
testl
add
add
mov
add
add
into
xor
lods
aaa
iret
add
add
mov
cmp
add
add
add
adc
mov
add
and
test
add
mov
sub
add
add
add
add
in
lcall
add
xchg
sub
add
sub
add
jmp
add
add
add
add
mov
pushf
outsl
adc
add
add
dec
stc
add
add
out
pop
cmpsl
pop
dec
add
add
sbb
movsb
add
add
jle
nop
mov
add
add
add
punpckhwd
add
addl
call
nop
add
add
stos
cld
cld
dec
add
add
xor
cmpb
push
lret
add
add
add
inc
aam
ret
scas
lea
add
add
popf
out
xor
add
add
sbb
pop
fiaddl
add
add
mov
shlb
lods
xchg
inc
in
in
xchg
add
sub
add
sahf
add
push
movl
rorb
add
add
repnz
call
add
xor
arpl
mov
add
add
or
adc
add
add
int3
lret
ss
sub
in
lds
fiaddl
add
add
sbb
jbe
fs
fld
add
add
push
loope
jmp
addl
jg
repnz
xor
jo
test
add
add
mov
add
add
sbb
fwait
icebp
add
add
cmp
add
add
fisttps
outsl
loop
add
add
dec
int
add
add
add
push
pusha
xchg
mov
add
mov
adc
add
add
mov
add
xlat
push
add
add
xchg
add
add
nop
add
add
negb
test
add
add
repnz
jle
add
add
out
loope
sarb
add
sarb
clc
mov
add
add
pushf
add
add
push
xchg
xor
add
lcall
mov
add
add
mov
sbb
lcall
adc
add
add
push
add
add
push
loope
add
jmp
addl
jae
mov
add
add
xor
adc
or
and
mov
or
add
add
xchg
add
insb
sbb
add
add
iret
cld
and
add
add
stc
sbb
leave
add
add
loop
fs
add
add
add
fs
pushl
leave
add
add
mov
cmp
add
add
or
add
stos
sub
add
add
push
das
sbb
pop
add
add
lret
mov
sbb
add
add
add
je
add
jns
add
add
mov
cmc
fiaddl
add
add
addb
add
loopne
jo
add
xchg
lahf
add
add
adc
stc
mov
add
add
add
sub
jbe
add
add
in
or
cmpsb
xlat
popl
add
add
cltd
add
add
fldenv
leave
add
add
xchg
pop
inc
pop
pop
and
add
add
mov
add
add
cs
jmp
add
test
add
add
nop
adc
add
add
xchg
add
add
call
add
inc
add
add
pop
aaa
adc
dec
adc
add
add
in
add
add
jb
lods
mov
add
add
add
je
imul
xlat
xchg
and
add
add
lret
add
test
add
add
adc
add
add
inc
aas
test
fldl
add
add
inc
ljmp
add
add
sub
add
add
cmpl
add
xor
mov
add
add
mov
mov
lcall
add
add
add
add
fnstenv
lock
add
pop
fdivs
add
add
inc
bound
add
lock
add
add
xchg
inc
pop
xchg
inc
add
add
test
add
add
add
add
add
add
xchg
repz
xchg
mov
clc
hlt
xor
add
mov
add
add
ljmp
add
add
in
testl
add
sub
add
add
add
mov
lcall
scas
cmp
add
adc
add
add
mov
add
sti
add
add
jb
unpckhps
add
add
add
or
add
add
mov
cwtl
sbb
add
add
add
js
add
add
xor
pop
add
add
pushf
pop
mov
add
add
icebp
push
add
add
or
fisttpl
popl
add
add
or
addb
add
in
movsl
fwait
add
fmulp
add
add
mov
enter
add
add
mov
sbb
add
add
rorb
add
add
add
mov
cmc
mov
inc
add
add
jp
jns
out
lret
add
or
xchg
xchg
add
jno
add
add
jp
ja
xchg
jne
add
add
dec
mov
add
xchg
xor
pop
add
add
xchg
sbb
nop
ja
add
add
mov
add
add
and
add
rolb
add
jle
insl
loope
cmp
add
add
inc
mov
add
add
push
jmp
mov
add
add
mov
pusha
add
add
dec
test
sti
pop
movsb
add
add
adc
push
addb
add
ret
pop
dec
enter
add
jae
loope
add
add
ficoml
mov
add
add
sbb
jecxz
cmc
add
add
add
sub
add
hlt
stc
xor
add
rclb
add
add
pop
test
out
add
add
in
inc
rorb
add
fimuls
mov
add
cmpsl
ds
adcb
into
leave
xor
add
sbb
aas
xchg
add
mov
add
add
data16
adc
add
loope
pop
inc
test
add
test
movl
add
add
add
add
or
xlat
add
add
jl
sub
add
add
add
push
bound
cmp
add
add
jnp
scas
mov
add
cmpsb
push
and
pop
add
add
enter
adc
add
add
dec
jno
xor
add
add
and
arpl
add
xor
push
pop
out
dec
lods
add
add
inc
into
inc
shlb
add
add
push
sub
add
add
sub
mov
gs
mov
aas
add
add
add
sbb
add
sbb
mov
add
add
sbb
pop
or
aam
add
add
mov
add
cmp
add
add
rclb
add
add
leave
xchg
sbb
mov
add
add
sub
ret
add
add
sub
add
add
sub
add
add
add
add
mov
repnz
add
int
dec
mov
add
add
lea
sahf
push
das
inc
dec
xor
pop
inc
jg
mov
add
fidivrl
add
jo
add
add
fadds
cmpsb
out
add
add
shrb
mov
xchg
add
add
xor
add
add
add
loop
fstl
sub
mov
bound
add
add
sbb
sldt
xor
add
add
cmp
shrb
dec
add
add
outsb
push
cmc
inc
cmp
adc
fwait
push
add
insb
inc
add
add
cbtw
mov
add
add
sbb
add
add
push
divl
add
in
add
add
loopne
add
adc
add
jmp
dec
mov
add
add
cmp
push
add
push
sub
add
add
sub
xchg
add
add
shl
sbb
add
xchg
ret
add
and
add
add
in
add
add
add
cmp
add
add
pushf
daa
testb
add
add
pop
mov
add
add
scas
nop
dec
mov
add
jo
lds
add
add
add
call
adc
add
add
aam
mov
add
inc
mov
push
add
in
add
add
jb
mov
add
add
add
add
mov
dec
add
cmpb
add
add
dec
std
pop
add
add
sub
add
add
and
inc
xchg
add
bound
add
testb
add
add
fnstenv
add
add
add
cli
add
add
lock
sub
add
add
mov
dec
fiadds
add
add
loop
add
loop
add
add
mov
dec
add
add
pop
or
pop
and
add
add
jo
nop
add
jb
add
add
aam
cmp
sub
add
add
insl
adc
movsb
add
add
lods
xor
add
mov
mov
and
mov
pop
add
mov
push
sbb
add
rcrl
clc
das
test
add
add
push
popa
sub
scas
add
add
push
test
in
add
js
add
add
enter
add
add
add
inc
mov
inc
repnz
add
sbb
mov
add
jg
add
add
pop
xor
cmovge
add
add
push
add
add
xor
fnsave
add
add
xchg
add
add
inc
sti
xchg
add
push
call
mov
add
add
add
add
add
or
daa
add
add
pop
pop
lret
add
dec
cmp
cmp
mov
add
add
xor
add
add
mov
add
pop
add
add
in
and
insb
movsl
add
add
mov
add
add
mov
add
add
or
pushf
add
add
add
addr16
mov
out
out
add
mov
add
cmc
cltd
add
sbb
cmp
loop
sub
add
add
xor
add
mov
add
mov
fistpl
add
add
stos
loop
xor
add
test
add
add
jp
test
add
add
adc
sub
sub
add
add
scas
add
push
adc
add
add
lods
pusha
cmp
and
add
add
cltd
in
add
add
scas
adc
cmp
add
add
pop
mov
pop
push
add
add
lret
daa
and
push
add
incl
add
add
inc
pop
inc
sahf
pop
add
add
cmp
imul
add
xchg
filds
add
aaa
add
add
hlt
inc
mov
adc
add
add
xchg
clc
or
add
add
mov
xor
add
add
mov
stos
mov
add
insb
mov
add
add
sub
add
popf
add
add
sbb
or
sbb
add
add
xchg
add
add
jo
bound
add
xor
add
add
and
mov
add
add
lcall
add
cmp
mov
add
add
jl
jecxz
out
add
add
imulb
add
add
push
testb
add
add
add
add
push
mov
daa
pop
adc
ds
dec
add
sahf
rolb
add
and
inc
les
add
rolb
add
add
add
adc
add
sbb
add
nop
ret
mov
add
add
pop
add
add
add
ja
dec
imul
add
cmp
stos
add
add
faddl
jne
add
ret
add
add
dec
fcom
xor
add
add
xchg
add
add
push
xchg
inc
faddl
add
add
add
sub
aad
shlb
loopne
push
sbb
cld
add
add
subb
sbb
add
add
pop
add
add
pop
out
jnp
cmc
add
add
lret
cmp
add
mov
add
add
add
add
jnp
test
jmp
fs
inc
add
dec
mov
add
add
sbb
add
add
xchg
and
add
add
into
sbb
mov
add
cmc
mov
xor
add
add
mov
add
add
mov
in
add
sub
add
dec
pop
mov
add
dec
aad
push
push
out
add
add
adc
mov
add
dec
pop
add
add
adc
xor
cwtl
add
add
add
lods
loopne
or
add
add
loope
push
add
sbb
add
add
jne
cmp
xchg
add
add
movsl
jp
ja
fwait
add
add
xchg
lea
sub
add
add
jl
jg
pop
add
add
sti
mov
popf
mov
add
add
mov
add
add
lret
adc
add
add
data16
add
pop
popf
pop
add
and
sarb
add
add
aad
cmpsl
into
add
add
je
adc
cwtl
add
add
jae
idiv
add
add
inc
sub
and
pop
add
mov
add
add
push
in
test
add
add
cmc
dec
call
add
cwtl
dec
sub
add
pop
add
add
mov
in
sub
add
add
data16
cmp
add
add
mov
add
js
add
add
inc
lods
mov
add
std
pop
mov
add
add
cld
das
sbb
and
mov
into
in
mov
add
das
outsl
push
adc
es
sti
push
add
scas
testl
adc
fsubs
add
cltd
icebp
arpl
xchg
add
add
mov
add
add
add
rolb
xchg
hlt
movl
pop
ret
sub
add
fdivrs
push
add
add
add
add
push
and
add
add
jmp
add
add
push
fimuls
data16
add
add
addb
add
out
jp
js
add
add
add
push
pop
test
cmp
add
add
xlat
jae
mov
mov
add
add
add
add
stos
cmp
push
dec
add
add
lret
stos
stos
mov
add
xor
mulb
add
add
add
add
subl
add
add
ret
add
add
mov
addr16
add
dec
decl
add
mov
cmp
add
cmc
mov
pop
fiaddl
add
add
inc
outsb
add
add
add
add
aad
fstpt
divb
add
add
jp
mov
add
inc
ja
add
add
add
add
aaa
cli
jne
addr16
add
add
out
add
add
out
pop
xor
sbb
add
add
data16
add
jle
add
add
add
pop
mov
add
dec
mov
cmp
les
add
add
add
sbb
add
add
add
add
cmpsb
out
jnp
out
add
add
ret
dec
add
mov
add
out
adc
add
add
add
add
add
sbb
imul
rolb
add
add
inc
add
add
lret
mov
lret
add
add
inc
cmc
xchg
mov
add
add
push
push
add
add
xor
xchg
mov
add
rcr
addl
xchg
testl
fisubrl
in
pushf
add
add
xor
xlat
add
add
or
add
xorb
mov
add
add
sub
add
add
fdivl
jbe
mov
add
add
aaa
sub
cmp
add
add
sub
add
add
jo
pop
pop
addr16
add
add
inc
add
add
enter
add
xchg
pop
add
add
cmp
negl
or
add
add
push
lods
mov
add
push
aas
add
add
push
rcrl
add
push
mov
in
mov
add
ds
add
add
ds
dec
add
add
ss
lahf
outsl
adc
add
add
aas
jle
add
push
icebp
add
add
js
sub
add
add
ss
add
add
add
dec
push
xor
add
jg
add
add
cmc
add
add
sub
add
add
lcall
jb
add
add
mov
bnd
add
add
rorb
add
add
mov
sbb
fwait
add
add
push
xchg
mov
add
add
pop
pop
jle
adc
add
add
add
add
add
addb
testl
fisttpll
add
add
mov
push
add
gs
add
add
lret
pusha
repz
add
add
out
add
add
out
insb
and
add
add
sbbl
add
popa
movsl
cmp
add
add
cmpsb
loop
add
or
add
add
add
stc
test
add
add
lock
mov
jne
add
add
mov
out
add
add
mov
push
cmpsb
add
add
out
mov
and
add
loopne
pop
xchg
add
sub
adc
sbb
add
add
sbb
xor
pop
add
add
sub
xchg
sldt
adc
add
add
in
dec
xor
add
orl
cli
mov
add
add
xchg
push
andb
or
xchg
xlat
ja
ljmp
mov
stos
add
add
nop
mov
add
add
xor
jns
roll
add
add
xchg
jl
add
adc
pop
push
sbb
add
add
push
lret
sarl
add
jb
imul
add
les
add
add
push
insb
push
add
add
fs
lea
cwtl
add
add
dec
orb
cmp
add
add
xor
adc
add
add
add
notb
lock
add
dec
xchg
add
add
cwtl
push
rcr
push
add
add
cmp
rolb
add
add
inc
and
add
inc
loopne
add
add
incb
add
add
and
add
add
add
test
add
add
pop
scas
fsubp
adc
jb
mov
ret
add
add
cmpsb
loop
add
data16
add
es
push
sub
mov
add
add
jl
adc
add
mov
add
push
add
add
mov
jmp
inc
xor
push
sbb
clc
movsl
dec
rolb
mov
add
dec
cmp
mov
add
add
inc
pop
mov
add
add
out
mov
add
add
add
add
leave
mov
add
add
pop
mov
sub
add
add
fstl
jno
add
add
sub
add
add
xchg
cld
daa
add
add
test
jmp
add
add
popf
mov
add
add
add
push
aad
add
add
add
xor
aas
jae
mov
add
add
mov
add
add
sbb
sti
add
add
or
je
push
lock
add
mov
xchg
add
add
inc
sbb
aad
add
add
cmp
rcll
push
cwtl
sldt
add
dec
jb
daa
add
addb
add
mov
aad
rclb
xchg
jns
dec
and
add
add
jmp
in
add
push
dec
add
add
jp
fadd
push
iret
add
add
in
mov
sub
add
add
xchg
stos
repz
add
stos
add
add
xchg
jns
and
add
inc
push
sub
add
add
sub
add
add
mov
add
add
or
add
add
xor
int
add
add
jns
add
add
and
sub
add
add
adc
aaa
add
jo
add
add
push
lcall
add
jae
push
int3
add
add
fisubrl
loop
add
add
sbb
insb
test
add
mov
adc
add
add
fidivl
push
add
andl
mov
add
add
xor
inc
cmp
add
fdivp
or
add
in
add
add
sar
cmp
xor
idivl
add
add
sbb
add
lods
flds
add
add
aas
imull
cmp
fimull
into
andl
add
and
int3
mov
add
add
add
add
rcrb
cmp
add
add
jl
pop
push
add
jo
add
add
push
or
test
add
add
push
scas
cmp
add
cmpsb
loopne
mov
add
add
enter
xchg
les
add
add
repnz
add
and
outsl
add
ds
push
and
dec
add
add
inc
addl
mov
push
push
push
add
mov
add
add
sub
rolb
add
mov
add
add
das
je
add
adc
add
dec
repnz
add
add
jne
mov
add
push
cmp
add
jo
add
add
daa
push
sbb
add
std
sbb
add
sub
adc
add
add
lcall
add
add
sub
add
mov
push
movsb
add
stos
nop
add
add
mov
xor
imul
add
jne
int
jno
add
add
mov
pop
add
jp
add
add
sahf
push
nop
jle
add
add
cmp
add
add
add
mov
sti
loopne
add
add
jb
out
cli
add
add
mov
add
add
xor
pushf
lods
add
add
loop
andb
add
out
mov
add
add
cli
mov
mov
add
add
cmp
fadds
jo
add
add
out
cmc
fwait
cmc
push
add
add
adc
pop
push
add
mov
add
inc
imul
add
add
in
hlt
jne
add
add
mov
jnp
add
add
loopne
sub
mov
add
sub
imul
repnz
testb
mov
add
add
sub
add
add
test
mov
inc
fmul
loope
add
add
add
add
add
sar
sbb
add
add
inc
mov
mov
add
add
dec
fnstenv
jns
xchg
add
jmp
add
cmovns
add
lret
mov
add
inc
push
add
or
jb
adc
inc
and
adc
cld
call
add
add
add
and
pusha
add
add
and
add
add
and
cmp
add
out
rolb
add
notb
int
int3
add
add
push
clc
mov
xchg
xchg
add
add
mov
or
add
lods
add
add
lock
add
add
xchg
dec
mov
add
add
inc
or
add
add
xchg
add
add
adc
sub
add
add
jmp
in
add
add
aam
mov
push
add
add
cmpl
add
lods
jb
xor
add
add
roll
add
sub
pop
pop
pop
popf
add
add
push
fs
add
cmp
add
add
clc
loopne
shl
xor
add
add
popa
jno
incl
add
add
out
add
jmp
add
add
add
jbe
lds
loopne
rorl
xchg
add
add
adc
add
cmpl
out
add
add
leave
push
xchg
cs
add
add
xor
cltd
test
add
add
sub
fwait
inc
xchg
push
add
add
push
shll
add
rol
add
add
add
ljmp
add
xchg
or
nopl
add
add
mov
add
add
add
dec
adc
add
add
cli
cmp
add
add
lret
add
add
pop
ret
add
add
in
xchg
lea
orb
lds
add
add
movsl
les
add
add
jo
add
add
add
sub
add
add
add
add
bound
testb
add
or
sub
stc
mov
mov
mov
pusha
fdivr
add
jecxz
add
add
xchg
jle
cmpl
add
add
add
or
add
add
stos
cmp
int
add
add
jecxz
cmc
add
add
imul
inc
or
aaa
add
add
push
cmc
movsb
sarl
nop
adcl
add
scas
cmp
mov
add
add
adc
aaa
ja
xchg
add
add
iret
xchg
pop
int3
xchg
add
add
movsl
add
adc
add
pop
lods
mov
add
inc
shrl
movsl
fildl
add
add
cmpb
add
add
hlt
and
add
add
testl
add
add
aad
add
test
add
cltd
js
push
adc
add
add
ds
add
add
cmp
add
dec
lcall
out
adc
add
roll
mov
add
jo
lea
add
fnstenv
add
add
sarb
jecxz
add
add
cmp
insl
sub
add
add
mov
dec
pushf
add
add
jl
fsubrs
add
shll
add
add
push
push
jo,pt
add
repnz
add
cmpsb
arpl
xor
add
add
daa
adc
mov
ds
inc
add
aam
add
add
and
add
add
dec
xchg
test
add
add
enter
xor
add
add
sub
add
add
add
add
orb
push
add
xchg
jae
add
add
mov
jnp
add
add
pop
rcrl
rcrl
or
loop
add
add
roll
add
add
lret
add
add
add
pushf
mov
push
add
add
sub
add
add
or
add
add
add
std
add
add
mov
and
xchg
add
add
xchg
lds
test
push
add
add
lret
jb
add
add
add
add
sbb
add
add
fs
push
js
add
pop
add
add
ss
ljmp
pop
xchg
jne
sbb
add
add
idivb
add
add
push
leave
data16
add
add
lret
pop
stc
or
fiaddl
add
add
add
mov
add
add
out
jae
jmp
add
add
icebp
or
add
adc
lods
add
out
stos
add
add
adc
ljmp
add
lods
xchg
mov
add
add
in
and
mov
add
add
int
inc
add
add
or
add
add
xchg
xchg
sbb
add
lret
add
cmp
add
add
aad
mov
add
add
add
add
sahf
mov
add
fdiv
or
cmp
add
add
mov
mov
pushf
sar
lds
add
add
mov
aad
xchg
leave
add
add
je
mov
add
test
add
add
jl
mov
add
test
jnp
scas
add
add
pop
jmp
jnp
add
add
add
inc
and
and
add
in
test
dec
pop
jns
add
add
add
leave
add
add
mov
mov
cmp
add
add
inc
and
xchg
xchg
add
add
mov
add
add
xor
cld
and
add
add
outsb
inc
add
add
cld
mov
mov
add
add
mov
cwtl
fwait
icebp
inc
add
add
gs
or
aam
add
add
and
adcl
add
sub
add
dec
aaa
icebp
call
add
mov
add
add
add
sarb
add
add
lcall
add
ljmp
mov
lods
fucomp
mov
add
dec
add
add
test
cmc
int3
add
jle
add
add
push
daa
sbb
add
inc
push
xchg
and
add
out
mov
cli
add
add
add
mov
dec
push
add
add
xchg
mov
push
xchg
test
loopne
add
das
xchg
add
add
sbb
repnz
sbb
add
add
filds
add
add
lahf
fcompl
add
add
sub
mov
sub
add
add
or
push
push
add
push
mov
add
add
je
popf
pop
cmp
add
add
sldt
add
mov
push
inc
add
xor
add
add
sub
add
add
inc
xor
add
add
mov
and
add
cmp
add
add
in
or
add
xchg
add
add
add
jp
dec
add
add
pop
add
add
mov
out
add
add
jne
in
add
add
xchg
psrlq
add
mov
add
add
in
and
incb
add
add
mov
add
add
or
add
add
pusha
jae
mov
add
fmul
jmp
add
add
add
add
xchg
add
add
enter
xor
ret
adc
add
loopne
add
add
sbb
inc
add
add
mov
rolb
add
add
in
insl
add
mov
add
mov
add
add
pop
add
add
inc
push
jne
add
add
add
icebp
movsl
sarb
cmc
out
shll
shrb
inc
add
dec
stc
add
add
repnz
add
add
arpl
add
or
mov
add
dec
movsb
notl
xlat
mov
insl
pushf
inc
add
add
movsb
pop
scas
test
add
add
daa
pop
inc
pushf
add
add
add
aaa
add
add
add
rcrl
add
cmp
add
add
jo
ret
or
popl
add
add
cmp
add
enter
add
sub
add
out
jg
lods
mov
add
add
rorl
cmp
add
add
jmp
movsb
add
add
push
and
add
add
dec
mov
sub
aas
faddl
add
add
pop
mov
addl
add
mov
lahf
mov
popa
add
add
mov
ret
je
add
add
js
fwait
data16
add
add
icebp
cmp
xchg
xchg
add
add
rcr
mov
xchg
add
add
jecxz
add
add
js
mov
push
ret
