decl
nop
add
in
cmp
dec
cmp
js
data16
mov
and
lea
inc
inc
mov
mov
mov
mov
dec
mov
mov
mov
sbb
inc
dec
mov
inc
mov
mov
push
jg
in
xor
xchg
dec
inc
cmp
je
mov
mov
pushl
and
xchg
jno
lea
lea
mov
out
push
out
lret
cmp
lea
add
or
fwait
popf
mov
sbb
mov
cmp
dec
sbb
in
outsl
rcr
sub
in
and
inc
mov
lcall
push
lock
jp
lea
sbb
pushl
clc
mov
xchg
inc
pop
lock
jb
cmp
jle
inc
inc
mov
and
fdivp
mov
cld
cmp
sarb
dec
or
sbb
lea
inc
mov
inc
cmp
js
decl
orb
dec
mov
mov
xchg
lock
push
rcr
inc
mov
xchg
mov
push
mov
js
mov
hlt
nop
mov
into
in
push
inc
xchg
lods
loopne
mov
adc
insb
mov
sub
cmc
aas
sbb
rcr
int3
cmp
jge
xchg
cld
ret
mov
decl
fmull
ljmp
adc
pop
cld
lds
mov
jnp
lea
mov
test
js
adc
inc
xchg
dec
xchg
lea
ljmp
decl
sbb
and
mov
mov
mov
imul
mov
jg
and
push
push
call
ret
push
rorb
leave
leave
leave
enter
and
leave
leave
leave
leave
sbb
adc
leave
leave
leave
leave
or
add
in
fs
sar
lock
in
in
call
in
xor
cmp
jb
jb
inc
mov
jb
xchg
nop
mov
jb
mov
jb
je
insb
jb
jb
push
jb
jb
push
push
push
mov
add
mov
aaa
rorl
push
sub
das
fdivrp
pop
pop
pop
pop
push
push
push
push
inc
mov
mov
mov
outsl
jbe
add
cmpl
je
mov
call
test
jb
inc
push
in
std
pushl
mov
cmp
je
xor
mov
cmp
je
xor
popf
imul
or
rdmsr
ret
push
lock
mov
mov
dec
push
test
sti
sti
xor
jge
roll
dec
mov
pop
pop
pop
pop
pop
ret
mov
test
xchg
mov
add
or
nop
adc
lahf
fiadds
pop
dec
in
mov
push
or
cmpl
mov
or
addl
lea
in
pop
in
addr16
cld
add
pop
sbb
or
xor
push
adc
mov
pushf
loope
ljmp
add
loop
clc
imull
imul
push
or
idivl
sub
pop
sub
pop
sub
sbb
mov
in
idiv
lret
cmpsb
xchg
bound
adc
add
stc
std
addr16
mov
push
sub
jae
in
mov
mov
xchg
and
xlat
fisttpll
scas
es
mov
fcmovu
dec
shll
and
adc
adc
loop
and
jno
and
jg
and
in
mov
mov
enter
aad
push
outsl
aas
jae
mov
inc
pop
scas
scas
pop
je
fs
dec
mov
mov
outsb
pop
in
jle
addr16
pop
ss
testb
cmpsb
scas
aad
xor
sub
sub
xlat
std
mov
pop
pop
in
cmpsb
cmpsl
and
pop
mov
lahf
in
sbb
mov
and
test
loop
jecxz
out
jle
orb
test
nop
sub
mov
pop
cmpsb
dec
mov
stos
dec
xlat
lock
lahf
cmpsb
mov
adc
xor
pop
stos
sbb
repnz
mov
movq
in
push
add
int3
fistps
sti
mov
and
sub
int3
loop
cli
lods
stc
xor
into
bound
sub
loopne
mov
scas
and
xor
addb
dec
inc
sahf
dec
sbb
jnp
add
push
xchg
insl
xchg
inc
fists
ss
imul
mulb
lcall
insl
idivl
repnz
in
imul
lods
movsb
iret
faddl
pop
adc
sub
sub
stos
jbe
fadd
and
mov
mov
cmpxchg8b
jl
and
popf
push
movsl
iret
mov
outsb
outsb
and
cmpsb
shrb
mov
imul
scas
mov
mov
inc
inc
sbb
xor
mov
out
jbe
imul
lret
loop
aam
lock
loop
in
mov
shlb
lcall
xlat
mov
jp
xor
data16
inc
imul
add
adc
or
mov
pushf
scas
sbb
ret
ss
sub
test
nop
aam
rorl
pop
mov
pushf
cmp
cmpsl
pop
sub
sub
out
xchg
fsubrs
dec
ret
bound
stos
pop
pop
out
int3
sbbl
sub
in
pop
aad
or
sbb
sbb
mov
lods
inc
hlt
xchg
addb
pop
repz
mov
jecxz
int3
mov
and
sbb
ds
loope
mov
out
stos
and
sub
std
pop
inc
dec
cmpsb
inc
mov
aas
dec
pop
cld
add
ret
lea
jg
xor
divl
pop
add
test
jne
push
daa
inc
imull
js
movsb
add
lahf
call
lock
push
call
inc
push
stc
ljmp
push
mov
inc
push
dec
test
jb
mov
inc
in
movl
mov
mov
inc
ret
sbb
mov
add
cmp
mov
fcomp
jbe
inc
jmp
add
cmp
je
pop
or
xchg
fs
or
or
push
push
push
cmp
in
sbb
push
lock
cmp
sahf
out
xor
inc
dec
rcll
add
ss
ljmp
decl
jne
lahf
roll
ret
dec
outsl
popa
fs
imul
ljmp
aas
push
dec
jo
outsb
push
push
outsb
insl
popa
jo
imul
mov
add
je
popa
insb
inc
insb
insb
outsl
arpl
push
bound
xchg
lds
sub
push
and
jb
pop
cwtl
clc
int
or
pop
fldlg2
pushf
hlt
pop
iret
shll
mov
push
push
lock
clc
int
push
out
fistl
cmp
in
and
test
add
clc
xchg
addb
loope
sub
jnp
mov
mov
js
xor
inc
loopne
decl
xor
inc
dec
andb
aad
pop
mov
loop
mov
hlt
jo
dec
hlt
dec
inc
push
or
and
arpl
lea
mov
pop
out
cmp
dec
inc
inc
mov
bnd
test
or
jl
fistl
sti
mov
loopne
inc
xchg
call
pop
mov
ret
pop
in
mov
cmp
jo
mov
mov
loopne
sub
and
dec
cmp
sub
das
and
mov
inc
in
xchg
or
dec
jb
push
cld
lea
sbb
adc
pop
fcmovnb
decl
pop
fnstsw
cmp
mov
mov
jo
adc
or
or
push
inc
mov
inc
dec
cmp
js
mov
lcall
shll
mov
iret
mov
sarl
std
cmp
lods
rolb
mov
pop
xchg
mov
mov
loopne
push
mov
inc
cwtl
dec
stos
loopne
iret
loopne
and
insb
or
and
and
fbstp
call
xchg
or
imul
xchg
cmp
mov
cmp
jne
xchg
xchg
cltd
in
cmp
imul
or
pushf
mov
nop
adc
inc
inc
inc
lcall
mov
xor
jne
movsb
cmp
outsl
or
roll
cmp
jne
shrb
hlt
clc
bnd
jbe
hlt
sahf
mov
shll
xchg
cmpsb
loopne
test
lock
mov
lock
lock
add
dec
xor
loope
inc
inc
inc
push
mov
pop
cmpsb
fcoml
mov
adc
andl
jecxz
push
push
fcomp
aad
das
jle
mov
cmc
xor
cmp
jl
dec
loopne
add
mov
int3
mov
loopne
imul
hlt
cmp
adc
or
incb
cmp
jnp
push
cmp
sub
pop
decb
repnz
sbb
mov
out
in
mov
dec
cmp
jmp
fstl
jnp
push
popf
or
jg
adc
and
sub
push
clc
sbb
dec
xchg
xchg
inc
and
loopne
lods
xchg
cmp
push
mov
sbb
insl
lahf
test
lock
test
mov
mov
inc
pop
pop
cmp
sub
jge
mov
aam
rclb
lret
rorb
xor
stc
mov
lea
mov
loopne
rol
enter
mov
xor
add
xor
xor
lcall
add
aas
lock
xor
push
gs
jb
arpl
fs
sub
lock
add
pushf
push
sar
popa
add
xor
rorb
loopne
cmp
sbb
push
push
das
cmp
cmc
shrb
int3
push
mov
xor
inc
repnz
add
loope
add
push
and
sbbb
das
out
mov
xchg
inc
dec
jb
jno
jo
adc
sub
dec
inc
flds
mov
mov
push
push
cmpsb
shrl
lahf
rol
jge
add
ret
jmp
loope
rcr
mov
or
sbb
stos
in
add
xchg
test
adc
mov
jecxz
mov
xor
mov
fs
pushf
aas
add
mov
sbb
sbb
mov
jno
insb
mov
call
mov
mov
call
aas
cmp
mov
mov
js
dec
push
daa
inc
mov
stc
add
jl
mov
push
mov
sub
les
push
shrd
cld
daa
cld
push
or
hlt
add
mov
rolb
fs
cmp
movsb
xchg
inc
push
or
sbb
ret
ret
jnp
jl
dec
lock
inc
cld
lock
and
cmp
and
jo
or
fildl
rcrl
repz
jmp
sbb
test
int
or
jbe
sbb
rcr
or
lods
scas
add
xor
in
adc
je
pop
testb
push
idivb
insb
jae
and
data16
decl
jne
hlt
cmpsb
push
cld
cmpsl
and
push
pop
mov
adc
out
push
cmp
and
mov
notb
push
pop
add
add
cltd
and
sbb
or
rclb
das
mov
in
dec
in
and
sub
jb
xchg
mov
ja
push
pusha
aam
and
jne
stos
sub
sbb
sbb
inc
cld
push
sub
fimull
push
mov
stos
imul
add
int3
imul
jno
ret
cmpl
sbb
adc
add
das
add
js
mov
jmp
insb
xor
sti
out
xor
fs
insb
pop
add
gs
and
or
add
cs
mov
push
imul
arpl
jo
jbe
popa
jbe
pop
aaa
jg
jo
add
jo
imul
jbe
jns
insl
jo
data16
sti
fstpt
je
push
ss
addr16
pusha
push
jo
mov
insl
jae
dec
data16
outsb
push
inc
arpl
push
jbe
dec
insl
je
rol
idiv
outsl
insl
jb
ja
outsb
add
inc
push
adc
je
shll
xchg
ss
cld
mov
push
test
cmpb
pop
in
adcl
and
stos
adc
dec
add
bound
pop
lods
gs
inc
sbb
arpl
in
pop
xor
into
fdivl
fcoms
icebp
mov
push
sub
dec
dec
dec
pop
loopne
lea
jno
out
push
pop
push
aam
int
sarb
or
int3
sbb
mov
jns
push
mov
inc
lret
fsub
add
and
mov
rcrb
lea
mov
lock
sbb
test
pop
sub
je
cmpsb
call
jnp
stos
and
push
sub
xchg
call
dec
dec
inc
mov
mov
inc
cmp
add
pop
fs
xchg
xchg
mov
scas
clc
aas
mov
mov
lea
dec
in
jb
mov
pop
imul
xor
mov
adc
push
mov
pusha
rclb
mov
jne
mov
mov
xchg
js
mov
dec
inc
loop
outsl
mov
leave
push
jo
push
lock
mov
loope
jg
pusha
jmp
and
mov
dec
inc
jo
sar
cld
lea
push
idivl
pop
mov
lahf
add
cmp
xor
ss
xor
xor
xor
jle
mov
push
sbb
add
cmp
xor
xor
popf
add
int3
mov
jle
test
inc
cld
movb
aaa
inc
mov
aam
cmpl
jne
outsb
pop
sbb
mov
fs
push
add
or
pop
xorl
mov
push
lahf
nop
pushaw
inc
dec
sar
pop
mov
sub
add
rorl
or
cmp
fwait
arpl
lret
add
lahf
inc
jmp
adc
int3
mov
cmp
inc
lcall
stc
jns
fimuls
int3
pop
cld
cmp
mov
pop
pop
or
mov
mov
scas
pop
mov
das
mov
subl
cwtl
test
test
push
push
and
add
lock
mov
or
mov
pop
movsb
add
add
add
cwtl
push
imul
int
mov
jl
lock
push
xchg
cwtl
push
add
cltd
xor
xor
stc
ja
cmp
xor
aaa
aaa
xor
xor
xor
xor
js
adc
lods
inc
loop
not
jmp
push
adc
incl
xchg
xchg
cmpb
adc
add
test
add
test
push
andl
lds
jo
adc
inc
jns
push
cmp
jne
shll
add
leave
jmp
push
add
popf
je
mov
aas
jp
cld
dec
hlt
mov
int
ds
insb
xor
decl
lahf
adc
hlt
xor
adc
push
sub
sti
xlat
in
ss
adc
xchg
sbb
add
lcall
pop
aad
ljmp
push
adcb
mov
lret
sub
pusha
pushf
inc
push
add
mov
or
mov
add
adc
hlt
movb
stos
clc
mov
sub
push
lods
lea
js
loope
cmpsl
add
dec
push
sbb
xchg
test
add
aaa
jne
call
decb
mov
mov
dec
mov
shlb
xorb
xor
cmp
test
or
xor
mov
addr16
or
divb
in
mov
lahf
test
fbld
jge
xlat
pop
ja
add
loope
jecxz
movsl
push
stos
and
xchg
dec
jl
inc
pop
add
sub
loopne
mov
cmovae
jae
cwtl
sbb
pusha
mov
pop
js
lcall
sub
jae
in
push
push
cmp
pusha
imul
and
mov
push
loopne
xchg
and
sbb
ljmp
aam
js
push
push
mov
scas
adc
xor
and
or
std
cmp
and
add
sub
fmull
fisubrs
mov
jae
lret
mov
adc
fiaddl
test
mov
mov
and
loop
adc
cmpsb
jbe
jo
ret
xor
sub
inc
push
cmp
aaa
xor
xor
xor
xor
mov
sbb
aas
inc
jbe
sbb
lock
arpl
jl
cmp
mov
scas
sub
insl
mov
dec
repnz
and
mov
mov
sbb
gs
sbb
cld
sbb
lock
dec
mov
lock
sub
out
clc
das
ret
cmp
jne
cld
dec
lea
dec
pop
sbb
das
movsb
or
test
aas
cld
jg
movb
mov
inc
dec
dec
dec
lcall
cmp
ja
or
mov
dec
inc
cmp
jle
sarl
mov
adc
cmp
push
mov
dec
mov
std
mov
pop
in
clc
lea
mov
inc
push
lock
loopne
rolb
ja
push
ljmp
inc
mov
pop
mov
sub
pusha
outsl
iret
mov
in
dec
sub
rclb
dec
dec
jbe
pop
or
pop
mulb
ja
mov
mov
out
insb
jb
xor
cld
arpl
lcall
pop
jno
mov
dec
mov
add
push
pop
cwtl
sbb
mov
mov
movsl
adc
push
cmpb
loope
aad
hlt
jge
repnz
lods
iret
stc
push
dec
mov
cmpsl
mov
dec
sbb
adc
lret
adc
xor
das
clc
out
mov
mov
pop
jo
mov
push
xchg
jne
mov
loope
jmp
inc
inc
sbb
mov
push
inc
mov
adc
mov
hlt
mov
mov
xor
mov
testl
outsl
inc
pusha
adc
daa
inc
inc
and
decl
mov
movsl
roll
aam
jp
mov
pop
mov
inc
inc
mov
dec
adc
or
push
jne
jmp
mov
cmp
js
add
pusha
adc
adcb
outsl
cs
push
jne
ret
in
dec
dec
dec
fsubr
jl
fstpt
test
das
lea
sub
clc
mov
xchg
inc
popa
or
je
adc
mov
sub
inc
adc
movl
lock
les
and
dec
pop
rcrb
dec
cmpsl
dec
lods
call
pop
jbe
pusha
add
std
jmp
mov
cmp
jno
dec
and
loopne
cld
mov
into
add
and
sahf
pop
mov
mov
pop
xchg
pusha
lock
out
inc
mov
inc
fmull
add
gs
cmp
popa
adc
inc
dec
pusha
pop
mov
mov
jbe
gs
icebp
sbb
cmp
xorb
mov
in
loopne
stos
mov
cmp
add
xchg
push
jne
cwtl
aam
push
sub
loopne
aas
adc
shlb
xchg
aaa
hlt
andb
inc
aam
arpl
add
nop
ds
add
stos
mov
push
xor
subl
sbb
add
inc
insb
pop
mov
std
rcrb
stos
inc
mov
inc
push
sbb
mov
fs
and
div
mov
sbb
repz
push
clc
clc
push
clc
cld
test
stc
stos
inc
hlt
xchg
imul
add
mov
dec
out
test
mov
lods
ljmp
push
sub
add
scas
add
fwait
adc
arpl
in
fsub
ss
leave
sahf
fsubrs
clc
and
sub
adc
movsl
ja
lahf
mov
dec
orl
cmovbe
loop
xor
adc
cld
sbb
popf
adc
nop
nop
add
decl
leave
dec
or
push
shrl
decb
inc
add
cltd
loop
add
or
lock
rcll
sbb
xchg
pop
adc
mov
pop
mov
sti
daa
add
daa
or
fadds
push
lahf
adc
fidivs
sbb
addr16
add
and
adc
aaa
or
popf
add
sub
add
ljmp
aam
jg
add
dec
add
push
pop
push
add
dec
mov
incb
dec
pop
add
dec
dec
push
push
add
inc
inc
pop
xor
sbb
mov
dec
push
arpl
je
dec
pop
inc
add
add
idivb
clc
sub
sub
pop
add
sbb
lcall
test
or
sub
mov
adc
sub
sar
sbb
add
cmp
mov
adc
push
pop
sbb
cs
fimull
add
pop
sbb
add
add
faddl
lods
xchg
adc
adc
cmpb
jp
sbb
cmp
sbb
or
cld
add
add
scas
mov
mov
pop
adc
ss
and
jmp
jae
and
cmp
add
and
fdivrp
out
aaa
inc
xor
fisubl
pop
adc
xchg
out
fsubs
mov
aaa
or
xor
stos
fcomp
out
popa
sbb
insb
jmp
daa
sbb
add
daa
cmp
mov
lods
ja
sti
daa
dec
pop
inc
addl
mov
dec
dec
add
fld1
mov
or
int
jne
loopne
mov
popa
pushf
pop
xor
jns
je
pop
inc
adcb
inc
inc
add
ja
dec
and
dec
and
std
out
jle
fwait
or
daa
mov
negb
and
or
xchg
xor
sbb
push
and
sub
outsl
adc
lods
bound
mov
dec
add
mov
mov
rorl
xlat
lret
imul
fwait
mov
xchg
sbb
mov
test
adc
pop
stos
outsl
aas
mov
mov
lods
pop
test
sbb
int
adc
fcmovu
fidivl
inc
out
jmp
xchg
and
into
cmp
jbe
add
add
mov
add
test
push
adc
xlat
or
test
pop
add
mov
dec
mov
mov
test
and
push
jmp
jbe
dec
cld
into
lds
dec
sbb
cli
sbb
add
xor
xchg
notl
add
adc
es
popl
mov
fisubrs
dec
and
xchg
inc
add
inc
inc
lahf
adc
fnsave
cmp
negl
out
and
xlat
add
in
mov
shll
inc
div
cmc
fbld
add
repz
and
jne
iret
inc
push
xor
xchg
std
es
mov
mov
inc
inc
dec
dec
das
mov
fsub
fimuls
inc
aas
inc
decl
insl
pop
mov
sbb
dec
dec
adc
out
mov
cs
arpl
imul
sbb
imul
mov
push
and
jg
mov
sbb
dec
xchg
pusha
push
dec
inc
push
add
popf
std
lcall
inc
test
mov
or
int
repz
jnp
sub
jno
ret
das
lret
sub
fldt
movsb
mov
jmp
repnz
cmp
add
xchg
xchg
adc
pop
arpl
fldlg2
idivb
mov
sbb
add
add
shlb
loope
push
push
add
dec
andl
rcll
add
xor
fimuls
stos
push
dec
and
cmp
add
in
je
mov
xchg
stos
std
xor
add
jbe
rorl
shrl
popa
xlat
in
out
mov
mov
lahf
mov
inc
mov
or
pusha
in
xchg
iret
xchg
xchg
out
adc
movl
loopne
mov
mov
mov
mov
mov
and
and
or
xchg
daa
fsubrs
add
xor
mov
jle
in
jbe
xchg
addr16
cmp
mov
mov
test
jmp
xchg
mov
lahf
arpl
fwait
int
adc
imul
mov
lret
or
cltd
pop
jbe
lea
cmp
dec
gs
dec
add
xchg
mov
insl
sbb
scas
mov
popa
test
adc
jae
sbb
rorb
insl
cmp
out
jg
je
jmp
add
out
loope
push
or
je
xchg
leave
pop
fstps
jae
sub
daa
cltd
scas
outsl
sbb
sbb
lret
or
aaa
adc
sub
xchg
pop
inc
cmp
repnz
popl
pop
out
add
outsb
test
lahf
lret
sbb
insb
xchg
jae
mov
repz
ficoml
and
ss
cs
or
in
sbb
in
ss
cmp
dec
shll
pop
lock
add
fbstp
push
jge
scas
xchg
pop
mov
pusha
mov
pop
and
xchg
jbe
scas
insl
cmpsl
fnstsw
insb
imul
or
add
sbb
xchg
pop
sub
mov
mov
push
dec
hlt
mov
das
loope
ret
fiaddl
push
fwait
xchg
es
inc
pop
js
insb
jmp
repz
sti
mov
jnp
js
dec
es
arpl
and
push
inc
xorl
ror
shlb
lock
sub
pop
xlat
adc
cmp
dec
sub
pop
popf
mov
push
das
xor
mov
mov
cltd
add
and
inc
ja
mov
cmp
xchg
lods
orl
lea
push
pop
and
loop
adc
mov
xchg
fldenv
or
addr16
gs
dec
data16
out
iret
mov
and
in
ret
jae
cli
cmp
dec
lock
lahf
pop
xor
repz
xor
sbb
inc
out
and
pop
shl
test
mov
fidivl
adc
lret
rcr
inc
sub
ficomps
arpl
imul
sub
mov
std
inc
xchg
cltd
inc
push
push
pop
scas
mov
cmp
mov
mov
mov
fcoms
enterw
pop
and
in
les
int3
outsl
ret
pop
test
sub
scas
or
mov
call
das
es
clc
mov
add
xchg
xchg
ja
adc
pusha
dec
sbb
dec
test
mov
xor
adc
cmp
sub
fists
cmp
pop
das
sbb
fildll
sub
pop
xchg
cmp
add
xor
pop
or
pop
mov
and
jo
fdivs
sti
addr16
cmp
cwtl
and
adc
sub
negl
mov
inc
xchg
adc
outsl
sub
jecxz
push
lock
add
push
jo
mov
push
sbb
push
jecxz
hlt
push
outsb
push
pop
dec
pop
daa
ficomps
mov
lea
cmp
rorb
js
inc
mov
fwait
inc
xchg
xchg
mov
mov
in
scas
add
add
cmp
sbb
dec
cmp
jo
or
mov
outsl
insb
dec
ja
sbb
insl
fcoms
rolb
ds
jnp
or
scas
cmp
add
pop
pop
in
pop
jo
push
aas
inc
outsl
dec
int3
mov
mov
dec
push
cld
inc
cmp
add
jg
push
add
jmp
data16
iret
adc
in
mov
mov
mov
cmp
int
scas
loopne
lcall
mov
iret
hlt
add
aaa
popa
fadds
jno
mov
jle
fadd
ja
ret
imul
add
mov
je
pop
cmp
sbb
mov
js
add
and
into
orl
loope
xor
je
pop
mov
jecxz
mov
inc
xor
ss
loope
add
fdivrl
testl
es
pop
test
mov
out
dec
adc
jb
lret
dec
sbb
add
pop
or
add
rolb
in
inc
inc
mov
std
mov
xor
and
pop
adc
scas
bound
test
imul
or
or
push
je
mov
call
add
jo
cmp
outsb
iret
test
xor
xchg
mov
mov
jne
mov
inc
imul
and
ss
fdivs
je
pop
lock
push
lods
idivl
add
xor
inc
cmp
je
lods
fdivrl
mov
scas
adc
sub
xchg
push
iret
push
scas
pop
dec
add
pop
mov
fisttps
or
pop
out
cs
loop
mov
aam
pop
or
push
cmp
in
jns
push
and
jmp
sub
push
or
lods
loopne
and
jg
outsl
cmp
clc
inc
add
add
iret
test
popa
mov
mov
mov
scas
inc
adc
str
imul
mov
es
ja
add
mov
scas
cmp
pop
daa
jbe
push
xor
add
aaa
sbb
push
xchg
or
dec
aam
addr16
adc
aam
push
sbb
shrb
and
cli
inc
sbb
cmp
mov
add
int3
inc
cmp
cmp
cmp
mov
cmp
imul
dec
in
pusha
enter
push
mov
in
loope
lods
testb
add
in
fsts
data16
and
repnz
aad
mov
in
push
fmuls
div
adc
sub
push
aaa
inc
xchg
stc
pop
mov
add
xchg
cmp
insb
lods
in
pop
sbb
inc
xchg
int3
mov
int3
cmc
test
mov
jl
ret
add
pop
jge
and
cmp
pop
sub
and
inc
cmp
push
popa
cltd
and
pop
shlb
add
xor
cmp
cmp
or
push
es
mov
inc
iret
mov
sub
jne
in
xchg
movsl
loopne
das
push
outsl
outsl
shlb
out
sub
jns
daa
jge
fstpt
push
jl
push
repnz
ljmp
inc
jne
gs
fcmovnu
jle
jae
add
pushf
mov
stc
stos
es
pop
mov
ret
loop
add
movl
xchg
add
jl
mov
jo
ljmp
int
jl
dec
jge
out
ja
add
cmpsb
add
out
and
mov
iret
test
inc
scas
mov
dec
xor
xchg
call
subb
pop
lds
cwtl
and
push
mov
insb
push
fwait
stos
scas
jle
ds
mov
jo
sbb
xor
lds
loopne
and
scas
push
in
xor
ja
call
int
inc
dec
dec
dec
dec
inc
add
ret
pushf
in
in
jecxz
stos
mov
sbb
imull
mov
and
outsl
xchg
test
in
aas
push
jo
outsl
ljmp
sub
subl
add
ret
orb
je
dec
loopne
cwtl
test
ret
ret
and
js
ljmp
lahf
scas
or
xchg
cmpsl
sbb
lea
sub
sbb
inc
mov
and
js
push
test
or
fildl
shlb
test
ja
andl
or
xchg
testb
cmpb
or
ds
in
add
mov
rcll
jae
sub
ljmp
ficoml
loope
addr16
cltd
shr
mov
test
lcall
sub
outsl
mov
push
call
out
pop
mulb
into
push
pop
stos
adc
xchg
fucomp
mov
loopne
pop
adc
idivl
mov
sub
pop
cmp
xchg
mov
lea
shll
cmpsb
into
fidivl
data16
je
add
adc
jo
fiaddl
hlt
addr16
push
adc
xchg
jnp
add
xor
cwtl
sbb
inc
inc
adc
mov
sbb
sbb
mov
sbb
pushf
sub
mov
xchg
ret
test
sbb
into
fs
push
push
lds
dec
and
subb
shlb
mov
jb
add
jo
adc
lcall
xor
mov
cmpsl
pop
mov
ficoms
or
ja
adc
ja
stc
das
scas
mov
fmul
add
movsb
xor
jo
lahf
push
add
jo
fbld
pop
or
pop
sahf
pop
fisubs
cltd
jae
shrl
adc
fisubs
mov
add
mov
cmp
hlt
fiaddl
xor
cmpsl
jmp
sbb
lcall
test
je
push
dec
sbb
in
popa
je
mov
adc
mov
clc
jo
adc
cmp
inc
es
shrl
clc
mov
sub
dec
lcall
es
or
sarl
adc
adc
mov
arpl
stos
sbb
or
popa
mov
add
pusha
sbb
xor
push
stos
fcompl
pop
imul
mov
mov
push
sub
sub
stos
sub
andl
jae
stos
sbb
in
bnd
mov
mov
jo
jg,pt
pop
in
cmp
adc
mov
mov
jnp
mov
pop
xlat
jne
jns
mov
js
push
sbb
inc
adc
stc
push
pop
sbb
adcl
push
into
out
and
mov
out
out
imul
jl
stos
sub
adc
inc
rolb
ds
xor
xor
dec
aas
dec
push
push
push
lock
addps
pop
bound
out
sub
iret
mov
lods
fmull
mov
mov
jecxz
inc
shll
test
aaa
lods
ret
inc
xchg
test
jmp
adc
xchg
clc
pop
xor
pop
pusha
add
mov
dec
adc
add
adc
flds
xchg
adc
addr16
add
mov
ror
ss
cli
mov
cmpsb
in
ljmp
xor
mov
push
add
xchg
add
inc
lods
out
sub
cmc
jno
or
lret
std
shl
mov
sub
cmpsb
in
jno
dec
insb
xlat
push
es
adc
lahf
xor
jno
mov
scas
jg
jno
sbb
xchg
sbb
and
lcall
cwtl
movsl
sub
sub
lea
adc
inc
popf
sahf
jbe
gs
imul
insl
add
jg
rclb
enter
mov
jns
sbb
and
add
cmp
add
mov
mov
sub
fwait
xchg
adc
fidivl
or
dec
call
fstp
sbb
jle
add
pop
loope
push
dec
lods
mov
jl
jge
or
sub
jb
aam
jae
add
push
test
rol
ret
mov
iret
insb
jl
cs
fldt
sub
jno
push
lods
inc
iret
std
or
sbb
int
addb
shll
jl
jmp
add
xchg
test
test
add
pop
fs
inc
testb
testl
add
cmovb
out
movsl
push
dec
and
xchg
je
div
sub
xor
mov
loop
xorl
xchg
orl
and
ds
pop
jbe
mov
aaa
dec
and
hlt
cmp
lahf
add
loopne
sbb
jle
lret
out
nop
pop
inc
pop
mov
xchg
xchg
sbbl
xchg
jb
addb
or
addr16
jae
fwait
lods
adc
or
xchg
rep
lods
and
and
add
add
mov
cmp
lock
mov
jecxz
sub
loopne
xor
xor
jmp
sub
mov
mov
movsl
imul
rcl
adc
push
xchg
in
mov
repz
push
outsl
insl
arpl
sbb
xor
div
inc
in
cmp
andl
jne
ljmp
push
fdivl
fs
lods
rcrb
jl
inc
inc
mov
aad
clc
rcll
mov
mov
idivb
and
nop
or
mov
sti
jge
mov
addl
adc
cmpsb
int
cmp
rolb
sub
jb
int3
lahf
inc
dec
sbb
pop
lods
jle
push
mov
or
cmc
fldl
jp
xor
and
rolb
std
gs
js
cmp
sbb
cltd
pop
adc
iret
adc
or
or
shl
shrl
outsl
adc
aam
push
hlt
les
and
rcll
sbb
xchg
in
out
mov
add
pop
aad
js
test
pusha
daa
enter
mov
lock
inc
adc
pop
jge
out
xor
aam
or
pop
nop
mov
in
call
mov
xor
scas
fcomps
sbb
mov
or
cmpsl
ficoms
and
mov
mov
daa
adc
sbb
add
sbb
dec
dec
push
dec
daa
and
sti
sahf
mov
push
sahf
adcl
push
out
ret
sbb
pop
push
add
repz
push
cmp
mov
pop
popf
and
or
push
cmp
jno
jno
push
js
push
mov
inc
push
das
xchg
dec
scas
aad
daa
sahf
dec
xchg
daa
adc
loopne
fsub
repnz
sub
adc
cmpsb
rcr
not
in
mov
outsb
add
cmc
ds
push
pop
jl
add
aam
jmp
std
push
test
add
cmp
shl
je
adc
xchg
pop
adc
lcall
aas
test
mov
adc
sub
inc
subl
mov
mov
and
rcl
push
cli
sbb
or
fists
outsb
xchg
ds
lea
and
mov
xorb
inc
xor
xchg
lret
cmp
adc
aas
arpl
pop
arpl
pusha
iret
pop
loope
push
xchg
arpl
pop
sarb
cmp
mov
xchg
add
or
arpl
add
xorl
xor
pusha
out
hlt
popf
dec
icebp
test
add
sub
lock
cmp
inc
pushw
mov
dec
aaa
lock
dec
scas
adc
int3
ss
movl
xchg
lock
addr16
in
aaa
fcoml
filds
insl
stos
cmpb
pushf
cmpb
lods
push
inc
adc
cli
mov
out
in
hlt
cmp
dec
in
lret
add
popf
mulps
mov
adc
or
sahf
enter
lods
sbb
push
push
mov
pop
or
cwtl
ja
jp
iret
dec
out
mov
push
sar
xlat
push
add
icebp
adcl
fwait
adc
mov
pop
add
inc
mov
mov
mov
shl
and
pand
cmpb
aam
jle
push
cmp
push
mov
jnp
xchg
sub
dec
in
jge
sti
out
test
push
add
daa
ljmp
pop
loopne
scas
and
lea
int
clc
aam
adc
sbb
rcrl
jo
push
rcll
pop
pop
mov
push
das
mov
orl
cmpsl
inc
or
shrd
lcall
cs
in
pop
xor
lock
and
add
xchg
out
jmp
outsb
movsl
loopne
test
add
jo
mov
lret
pop
lock
movsl
sbb
sahf
xor
jnp
jo
aad
jl
push
out
mov
icebp
iret
call
into
jp
pop
push
xlat
push
pop
sti
idiv
fbld
xchg
push
cmp
jnp
add
cmp
mov
add
iret
adc
dec
mov
and
add
dec
mov
dec
mov
pop
loopne
cltd
aaa
shll
mov
add
or
sbb
movsb
push
mov
cltd
and
sbb
cmp
pop
test
sbb
push
adc
shll
out
mov
aaa
add
test
dec
inc
mov
cmp
cmp
cmp
out
lret
or
inc
daa
fcom
jmp
xacquire
scas
adc
cmp
cmp
or
xor
ljmp
adcb
mov
xor
sub
xchg
jecxz
cltd
stos
inc
jecxz
ja
mov
jmp
or
or
outsl
or
lahf
add
fs
out
hlt
loopne
stos
fists
jecxz
cld
jno
xor
jmp
mov
cs
cs
pushf
and
cmp
push
add
mov
rcl
add
inc
jg
lret
cmp
imul
mov
push
fchs
xchg
jno,pt
les
pop
cli
je
les
outsb
imul
fnstsw
adc
cs
sbb
add
das
pop
addr16
cmp
in
in
aad
cmp
icebp
fisubrs
sbb
adc
out
std
fnstenv
sti
xchg
sahf
add
into
int
lock
in
adc
mov
sub
cmpsl
fldenv
mov
add
xchg
shlb
cltd
cmpsl
hlt
in
lea
jecxz
scas
xor
mov
popf
cmp
les
pop
in
cwtl
mov
inc
xchg
xorb
das
orl
scas
or
or
lock
mov
sub
stos
cmp
jl
push
loopne
pop
testl
add
pushf
pop
ror
jge
adc
mov
adc
adc
and
cmpb
fisttpll
lret
roll
test
aad
inc
cmpsl
adcb
movsl
shrb
lret
and
das
cmp
sbb
icebp
jp
push
jle
stos
adc
inc
add
out
sbb
cmpl
or
xchg
inc
fcoms
popa
and
outsl
daa
loopne
add
out
sbb
lret
mov
mov
sub
iret
push
pop
dec
and
mov
xor
es
jno
add
mov
addr16
mov
xchg
inc
mov
add
cmp
movl
xor
imul
sbb
ja
fstpl
ret
aas
test
popf
aas
dec
mov
inc
mov
dec
pop
ficomps
add
sub
scas
push
pushf
and
icebp
fldl
fucomp
and
mov
and
scas
scas
shl
lds
cmpsb
pop
push
mov
cmpsl
inc
or
xchg
fwait
std
or
push
lods
loope
in
or
jbe
ret
dec
mov
mov
js
jnp
lods
pop
nop
sbb
hlt
sarl
jmp
roll
stos
dec
and
das
inc
add
movsl
push
movaps
imull
jecxz
push
add
flds
and
rcrl
call
frstor
mov
les
jae
pop
sub
pop
add
push
pusha
scas
push
test
es
sub
test
lock
loope
pop
mov
mov
jle
pop
aam
shll
fidivrs
imul
shrb
or
popa
xor
pop
ret
mov
cmpsl
sub
xchg
inc
xor
jne
push
mov
outsl
or
mov
inc
dec
imul
or
lea
pop
scas
int3
lock
mov
sti
pop
mov
mov
mul
iret
mov
add
xor
or
or
inc
adc
mov
mov
sbb
jo
sub
push
mov
lret
sahf
push
pop
adc
push
dec
test
loope
sbb
lds
iret
xchg
add
pop
es
ja
lods
inc
loop
sarl
fidivrs
xchg
dec
aas
add
add
sub
clc
gs
adc
iret
xor
inc
testb
call
jnp
and
aam
pop
pop
push
push
push
fildl
and
je
inc
jnp
enter
enter
add
rcll
add
les
in
or
sbb
dec
mov
mov
adc
push
jns
pop
iret
xor
cwtl
out
sub
shll
stos
sub
out
jbe
mov
pop
add
nop
test
and
aad
lcall
mov
in
fistps
adc
jo
loopne
xor
push
out
inc
in
xchg
loope
push
test
out
xchg
mov
add
fstps
inc
iret
add
mov
ret
test
jl
aaa
cmp
pusha
mov
inc
or
sbb
push
rclb
jbe
pop
adc
adc
inc
xchg
or
mov
pop
pop
sbb
jnp
data16
inc
divb
sbb
neg
xlat
pop
lahf
push
push
mov
push
jg
mov
nop
dec
mov
iret
or
test
push
out
sub
or
adc
add
push
sahf
shrl
insb
xchg
sub
sbb
and
lods
in
in
pop
jns
daa
add
popa
in
fsubrs
push
out
xchg
xor
add
testb
push
xor
cmp
jb
sbb
mov
cmp
and
xchg
js
addb
xchg
inc
lahf
inc
lret
dec
cwtl
xor
xchg
jge
xchg
sub
out
sbb
lods
shufps
adc
cmc
pop
adc
jno
mov
out
loope
mulb
inc
das
inc
push
xchg
das
lods
popa
sub
xchg
loopne
mov
dec
sbbb
push
sub
add
sbb
pop
addl
cld
mov
mov
test
jecxz
cmp
jns
ja
push
cmp
push
push
push
dec
das
push
shlb
jmp
fwait
iret
mov
fcoms
mov
lods
pop
jae
jge
sbb
rorb
int3
add
pop
push
xchg
out
push
dec
xor
add
imul
sub
lds
loope
fldl
pop
adc
ljmp
pop
jecxz
dec
scas
popf
sub
ds
xor
sbb
loopne
and
jnp
cmp
or
sub
jo
aas
add
jp
mov
out
jbe
sub
scas
popfw
sbb
pop
cltd
and
sbb
xchg
ret
sbb
mov
jecxz
divb
dec
add
jecxz
mov
dec
testl
sbb
or
push
add
mov
add
sub
loopne
and
pop
pop
icebp
mov
push
dec
lock
iret
push
adc
pop
jl
sub
jle
fsubs
pushf
push
and
mov
xchg
addl
cmp
xor
leave
sub
sub
pop
inc
cltd
xchg
mov
sbb
and
xor
rcrb
subb
sub
xchg
cmpsl
dec
push
mov
subl
jge
adc
cmp
adc
xchg
jb
xchg
pop
jmp
stos
ss
ljmp
cmpsb
shlb
fcoms
fisubs
fmulp
outsb
cmp
lret
and
pusha
sub
jo
pop
xor
pop
jo
push
pop
jecxz
lea
jp
push
fwait
pusha
orl
fildl
cwtl
int3
and
xchg
sbb
cmp
push
inc
ljmp
enter
je
les
dec
cmp
sbb
mov
and
rcl
iret
mov
into
add
sahf
ret
mov
mov
int3
scas
popa
and
rorb
cmp
pop
or
or
sti
lock
loop
pop
push
sbb
inc
je
loope
xchg
lods
js
pop
popf
inc
mov
push
sbb
cmpsl
mov
sbb
insb
mov
jnp
ds
add
inc
add
loopne
push
lods
pop
push
jae
adc
add
das
jno
std
mov
inc
cmp
daa
mov
jle
mov
adc
cs
ret
jg
inc
test
sub
sbb
push
push
add
or
fnstsw
cs
mov
cmp
jecxz
add
or
movl
add
stos
jmp
sub
enter
fdivs
adc
pop
adc
sbb
add
sub
mov
in
lahf
dec
pop
fnstsw
stos
in
shlb
mov
sub
mov
sbb
icebp
mov
xchg
add
jg
cld
sub
adc
jmp
das
mov
adcb
adc
inc
lock
add
lods
push
hlt
lods
jmp
sub
scas
das
add
or
movsl
stos
dec
daa
jbe
mov
adcb
mov
ret
sbb
arpl
sub
cmp
push
das
or
adc
pusha
std
ds
lcall
roll
xchg
popa
es
notl
daa
sahf
push
cmp
adcb
push
daa
and
fstpt
mov
mov
outsl
addl
test
or
scas
sub
lret
imul
lock
push
xchg
push
pop
test
push
push
addl
syscall
mov
add
cmpl
rcrb
fsubrl
inc
xor
filds
push
es
add
dec
lret
cmp
push
js
pop
leave
push
into
push
movsl
cmp
or
dec
sub
or
push
test
hlt
inc
sbbl
ja
or
dec
or
mov
lds
push
jns
adc
shll
and
sub
jne
mov
xor
jo
dec
pusha
push
cmpsl
outsl
and
or
add
pop
mov
jb
lret
mov
neg
sub
fcomps
xchg
mov
mov
xchg
sub
in
bsr
mov
xchg
dec
push
add
adc
outsb
or
stos
lods
sub
call
mov
xchg
scas
outsl
movsb
sub
add
mov
adc
or
add
pop
and
jl
and
cmpsb
dec
iret
or
mov
jg
add
clc
pushf
sarl
in
cmc
popa
les
jbe
jbe
push
leave
lea
fs
aas
je
adcl
int3
pushf
and
and
jmp
sahf
dec
push
mov
mov
or
push
out
cmpl
aam
je
and
stos
rcr
or
iret
orb
adcl
jbe
mov
mov
sbb
or
scas
cmc
push
mov
les
sbb
cmp
scas
jne
adc
ljmp
leave
mov
mov
ja
stos
pop
arpl
push
or
sub
mov
mov
or
jg
dec
aaa
loopne
sti
test
jb
cmp
or
loope
loop
mov
pop
sahf
lret
mov
or
xchg
add
out
sbb
jl
das
and
xchg
aaa
adc
lods
loope
mov
mov
jbe
mov
loope
aad
mov
push
repnz
pop
mov
fbld
sub
cmp
pop
les
and
push
scas
sbb
roll
jge
push
jae
aam
mov
aas
movsl
push
nop
add
pop
js
sub
adc
arpl
sbb
loope
cmp
and
push
sarb
sbb
sbb
mov
adc
loop
stos
lock
push
xlat
rolb
lcall
fldl
and
jge
sbb
js
mov
xor
lret
jne
add
mov
add
dec
jo
lods
aaa
sbb
pop
sub
cwtl
push
int
test
loopne
cmp
out
push
addr16
into
add
outsl
push
push
push
addb
sub
adc
andb
lahf
jne
shlb
xor
jmp
xchg
sbb
jo
jb
or
loopne
mov
out
pop
jo
cmp
push
inc
clc
scas
dec
cmp
lahf
dec
sub
and
dec
popa
inc
stos
adc
xchg
icebp
cmp
mov
insl
and
fstl
mov
jecxz
xor
out
rcrl
mov
xor
mov
sbb
pop
lock
shll
sbb
bsf
iret
icebp
fisubrl
in
adc
cmp
shlb
xor
das
fiadds
mov
idivb
jo
mov
push
and
movsl
mov
sti
pop
sahf
sbb
mov
and
inc
mov
sbb
enter
sbb
sar
add
pop
jb
or
push
or
or
outsb
sbb
inc
bound
or
xchg
rcrb
add
push
idivl
push
adc
sbb
mov
insb
test
and
inc
jl
movsl
pop
xor
iret
int3
enter
sbb
arpl
sbb
ja
pop
and
or
sbb
jnp
add
call
inc
xor
adc
add
jle
fadd
push
xchg
push
repnz
js
dec
push
lods
cmc
mov
sub
ret
sbb
lods
or
xlat
jbe
jo
push
es
ja
jb
inc
fisttps
les
ret
fmull
dec
add
out
push
inc
inc
sarl
dec
movsl
cmpsb
cld
jo
imul
outsb
loope
iret
cmpsl
pop
fsub
and
addr16
fists
movsb
out
xchg
rcrb
mov
loopne
cmpb
adc
mov
lods
push
xor
fsubl
fadds
dec
cmp
lahf
sub
dec
pop
mov
subb
adc
lret
and
imul
lahf
mov
cmp
enter
aam
sbb
mov
lods
scas
push
lret
je
cmp
out
adc
push
outsb
bound
je
scas
fwait
ss
pop
aaa
or
inc
xor
je
jecxz
es
xor
sbb
xlat
in
push
in
xor
inc
jno
popf
push
dec
push
nop
sbb
pop
jns
scas
adc
sub
cmp
jg
or
das
add
loope
inc
loopnew
dec
push
jnp
xchg
mov
gs
scas
mov
mov
xor
push
xlat
mov
movl
andb
sub
inc
jae
adc
push
iret
or
lock
pop
push
push
sub
sub
pushf
iret
mov
sub
dec
loop
inc
add
sbbb
and
popf
jg
adc
sbb
pop
or
nopl
mov
data16
mov
es
pop
push
cmp
mov
mov
jne
or
loope
dec
and
lods
in
daa
push
dec
mov
cmp
or
cmp
and
repnz
scas
test
mov
sbb
jns
nopl
mov
add
cmp
and
mov
xor
adc
dec
daa
popf
mov
js
push
stos
lcall
das
mov
push
xchg
mov
jns
sbb
daa
add
sub
mov
dec
xor
mov
fcmove
ret
add
mov
aad
sarb
mov
push
lret
and
pop
adc
lods
fdivp
aaa
xchg
scas
pop
lret
call
push
das
dec
xor
dec
pop
ret
pop
mov
ret
xor
or
jno
rorl
jg
dec
xchg
adc
pop
dec
gs
pop
lods
mov
fmuls
mov
fstpl
jle
add
cltd
mov
add
pop
sbb
mov
sub
shl
adc
clc
xor
shll
or
fsubrl
icebp
insb
ss
imul
sti
inc
push
jnp
push
loop
or
adc
ffreep
push
out
fnstenv
je
mov
lods
jnp
in
dec
mov
ret
scas
xor
das
jmp
cmp
sbb
iret
roll
inc
ret
mov
arpl
dec
test
push
lcall
push
mov
inc
int
mov
mov
das
mov
add
jo
repz
jns
sub
or
pop
popa
cmp
adc
bound
lods
jo
add
cmp
pusha
loopne
imul
cmp
ret
xchg
mov
cmp
je
inc
dec
jge
mov
inc
adc
jge
adc
ret
adc
xor
imul
cmpb
xlat
jno
or
mov
loopne
mov
addr16
push
mov
push
out
adc
push
aaa
jbe
test
push
sub
push
rolb
sahf
sbb
sbb
or
xlat
pop
cmp
xchg
push
jne
loopne
scas
push
mov
scas
sbb
xor
sbb
and
push
mov
sbb
sahf
lea
push
notl
addb
jo
addb
pop
pushf
dec
roll
inc
xchg
orl
mov
mov
incl
sbb
pop
sbb
cltd
push
mov
fdivs
testb
insb
ds
and
mov
cmp
sbb
add
cmp
ds
dec
rol
push
adc
add
mov
or
sub
xchg
xchg
ss
adc
xchg
push
sbb
adc
lahf
inc
jle
ret
fistpll
ret
dec
and
xor
jno
cmpsb
jmp
loope
pop
cs
and
or
inc
call
cmp
inc
sbb
mov
lods
ss
fisubrl
pop
or
dec
dec
push
pop
mov
adc
ret
dec
xor
daa
add
fdivl
repz
sar
mov
jge
subb
fadds
cltd
js
add
push
jle
popf
mov
and
mov
enter
jbe
fists
loopne
xor
addr16
sub
sub
ds
loope
push
and
test
add
xor
fcom
mov
adc
xchg
test
pop
push
adc
aas
and
stos
out
jo
in
daa
add
es
aad
daa
int
adc
xchg
sbb
pop
and
mov
inc
inc
mov
or
daa
lahf
jecxz
add
push
xchg
iret
inc
dec
repnz
cmp
push
add
inc
push
daa
sbb
and
idivb
xchg
push
femms
push
add
jns
xchg
faddp
cltd
adc
or
adc
xchg
dec
mov
fldt
shlb
xor
xorl
ret
dec
repz
mov
pop
push
or
orb
adc
sbb
dec
cs
scas
imul
dec
mov
bound
insb
xor
adc
or
and
in
and
iret
mov
jb
data16
cmpsl
imulb
mov
mov
pop
add
int3
sti
jmp
mov
lret
imul
pop
adc
sbb
inc
pop
or
fildl
cmp
mov
ret
cmp
jne
xor
jmp
mov
icebp
movsl
dec
lahf
inc
add
cmpsb
push
mov
in
sbb
pop
test
xchg
pop
dec
pushf
rol
xchg
add
pushf
test
push
rol
lods
mov
fists
xor
bndstx
lock
std
icebp
aad
push
loope
sbb
in
mov
cmp
out
add
cltd
aam
pop
dec
pop
dec
mov
dec
add
and
pop
lret
imul
xlat
fdiv
mov
fcomip
pop
mov
cmp
stc
mov
hlt
sub
es
add
dec
push
jge
loop
popf
dec
fstpt
inc
sub
mov
ret
insl
iret
or
test
insl
stos
pop
or
idivl
lods
lods
or
nop
ds
pop
xor
and
outsb
stc
xlat
mov
scas
push
xlat
push
sarl
xlat
jbe
cld
jbe
mov
rcll
push
sarl
mov
mov
sub
ret
sub
loop
aaa
and
ret
xchg
popa
sbb
addr16
mov
jne
jne
mov
hlt
out
jecxz
aas
adc
pop
adc
push
js
cmpl
out
inc
in
test
out
jp
mov
iret
movsb
dec
icebp
popf
lret
outsl
push
mov
push
roll
add
dec
cmc
push
jne
cmc
pop
mov
jecxz
in
adc
mov
int3
sbb
test
push
xor
lret
pop
sarl
push
push
pop
and
pop
sub
fdivs
loope
jmp
popf
in
xchg
sarb
sbb
pop
mov
aaa
ss
and
scas
jecxz
pop
jno
adc
or
add
repz
ret
pop
bound
sbb
fwait
push
out
pop
movl
sub
sbb
xchg
rcrb
pop
pop
add
dec
push
decb
loop
and
mov
dec
lret
push
inc
pop
loop
add
icebp
push
cmp
inc
ret
sub
cltd
hlt
sbb
ds
fbstp
jle
xchg
in
test
add
fs
inc
mov
xchg
and
frstor
mov
cld
addr16
cmp
sbb
dec
cmp
xchg
stos
xorb
push
stos
push
orb
mov
sbb
sub
add
loop
int3
hlt
push
push
int
test
mov
shll
movsl
cmp
push
inc
clc
nop
jle
cmp
xor
clc
xor
mov
mov
push
jecxz
sarb
movl
and
js
les
push
nop
add
into
loopne
mov
lods
in
fldenv
repz
js
sti
adc
je
sbb
ljmp
sbb
ds
test
pop
jo
ficompl
mov
or
push
call
mov
repz
lock
cmp
call
iret
mov
cmp
cwtl
pop
jo
daa
pop
cld
loopne
or
js
sbb
das
dec
dec
or
aam
outsl
jno
add
dec
jae
inc
dec
or
call
or
jae
xchg
sbb
cwtl
or
and
jns
bound
sahf
xchg
pusha
into
rorl
test
fst
add
into
inc
cmp
add
jl
pop
mov
sbb
pop
sbb
lret
push
stc
xchg
fsubr
loop
loopne
std
ror
push
test
xchg
js
data16
add
push
mov
lods
call
ret
flds
insl
imul
lock
insl
dec
mov
lock
xchg
fcompl
das
mov
add
loop
add
lahf
add
imul
arpl
jp
lods
adc
xor
insl
outsb
cwtl
pop
es
clc
lods
add
mov
mov
call
xchg
add
fmull
cli
popa
adc
pop
lods
xor
or
xor
xor
movsb
fcompl
mov
xchg
loope
inc
jae
dec
js
xor
push
in
lods
add
cmp
iret
or
jle
imul
out
data16
jg
push
add
cltd
insb
in
mov
mov
dec
movsl
inc
push
pop
pop
inc
sub
xchg
aaa
arpl
pusha
sbb
arpl
mov
cmpsl
ret
std
xor
push
cmpsb
mov
cli
loopne
rolb
push
or
movb
and
and
push
cli
shrb
out
add
inc
push
ret
push
jl
cmp
pop
dec
jg
fwait
xchg
mov
add
nop
jns
subl
rcrb
jno
sub
scas
daa
roll
cmp
sbb
push
jns
pusha
sbb
mov
lahf
sub
sbb
sub
mov
loop
inc
cmp
and
sub
ret
mov
jl
popa
subb
jp
add
jle
jge
fistps
rol
out
popa
cmpsb
pop
inc
xchg
js
pop
es
scas
sub
jno
cs
setp
shl
sbb
push
in
pop
lcall
out
sbb
das
cmpsl
addr16
adc
loopne
popf
mov
arpl
int
push
cmp
loop
xchg
xchg
test
rcrb
movl
lods
adc
test
add
addl
aas
cmp
jno
faddl
lds
jb
jnp
rorb
and
arpl
inc
inc
loopne
fs
outsb
push
lods
push
and
scas
adcb
ja
test
add
stos
push
ja
xor
cmp
push
and
sbb
data16
orl
or
sbb
xchg
xlat
out
popa
inc
pop
call
popf
pop
sub
sub
or
fnstenv
shl
cs
dec
je
xchg
pusha
loopne
lret
mov
push
sarb
ror
sbb
out
fmuls
fisubrl
lcall
adc
jp
jne
mov
call
les
jge
add
cltd
inc
lret
ljmp
dec
roll
xor
pop
push
xor
or
jp
fisubl
jns
push
mov
sbb
or
dec
test
out
shlb
jne
popf
faddl
lock
js
cmp
stc
dec
dec
call
lods
dec
nop
add
leave
xchg
pusha
movsb
or
add
add
add
push
lea
jecxz
ret
mov
aam
fs
clc
mov
add
ret
out
sub
lret
pop
bound
push
adc
xorb
das
mov
out
bound
or
daa
cltd
mov
sbb
add
lret
jne
cmp
cmc
test
cltd
lock
dec
aaa
fldt
xchg
or
xchg
fisubrs
add
ret
cmp
and
inc
bound
push
sub
in
mov
or
jmp
icebp
subb
mov
cmp
insl
scas
pop
push
cmp
pushf
clc
gs
add
sarl
add
data16
stos
or
push
call
outsb
and
jle
das
jl
mov
push
jle
and
adc
adc
sub
sbb
push
mov
and
lret
jp
int
daa
push
jmp
lods
add
pop
fstpt
repnz
pop
push
pop
push
aam
fidivrs
mov
aaa
push
xor
mov
fsubr
adc
je
iret
bound
dec
lods
and
lret
mov
rclb
lahf
add
insl
test
das
dec
daa
jecxz
sbb
movsb
cli
mov
and
lcall
and
fldenv
or
or
dec
scas
inc
jno
es
sbb
lret
sbb
ret
ja
fs
js
inc
iret
or
insb
addr16
cli
out
cmpsb
dec
pop
cmpsb
out
cmpsl
adc
mov
fucomi
add
movb
daa
jns
mov
jns
dec
mov
mov
iret
push
scas
or
jo
sub
js
clc
xchg
mov
and
inc
xor
iret
bound
mov
cmpsl
cmpsl
push
jo
out
jbe
addl
out
pop
mov
sti
xchg
jne
lods
fsubrs
and
js
gs
outsl
jle
xchg
jns
sub
ffree
dec
mov
adc
cltd
int3
add
sub
cmc
mov
out
jo
rorl
pop
sar
mov
jns
inc
pop
sar
cmp
je
scas
jb
lds
dec
push
ret
out
sbb
ljmp
jg
rolb
iret
dec
mov
jp
loopew
out
fcoms
xchg
mov
mov
lret
cmp
test
clc
ljmp
movsb
fcomip
out
and
fnstcw
cmpsl
add
aam
pop
sbb
outsb
mov
ret
test
mov
lock
push
ljmp
jl
mov
inc
xchg
loopne
ret
fsubrs
loopne
das
sub
pop
sbb
rclb
dec
xchg
jl
int
mov
popf
movl
pop
add
xchg
outsb
and
add
movl
stc
scas
add
pop
test
and
adc
incl
rcrl
or
add
lret
sub
adc
xchg
je
sysenter
push
sub
in
xor
sbb
dec
enter
icebp
into
or
push
jo
pushf
inc
mull
jno
outsl
add
in
sub
mov
push
cs
push
sahf
rolb
mov
je
js
pop
bound
cmp
mov
pop
sub
pop
mov
and
add
xchg
stos
xor
pop
icebp
push
fisttpl
jnp
mov
mov
addr16
out
pop
mov
dec
dec
lea
cmp
ds
scas
cmp
xchg
test
mov
adc
movb
xlat
xor
insb
in
cli
aam
xchg
ret
rorb
adc
add
mov
mov
jecxz
jl
or
fbld
or
mov
xor
call
shlb
lods
pop
js
cmp
fldcw
pop
push
iret
rorl
stos
cmp
cli
xchg
sbb
add
jae
aam
jne
aaa
xchg
push
sub
xchg
adc
jnp
add
dec
push
pusha
and
dec
mov
into
std
add
inc
jbe
std
xchg
inc
add
lcall
ljmp
xor
xchg
or
add
xor
inc
push
movsl
jge
adc
jb
push
push
iret
push
int
adc
or
cmp
iret
xchg
ja
loope
les
nop
dec
in
dec
xchg
addr16
ret
mov
jp
rcrb
and
dec
xor
xchg
add
xchg
adc
addr16
lods
push
das
or
sub
sub
inc
iret
cmp
and
push
roll
ret
pop
or
and
ja
bound
xlat
jmp
sahf
js
or
ljmp
out
les
mov
scas
daa
dec
int
inc
add
inc
mov
mov
jno
inc
scas
das
pop
inc
insl
out
icebp
dec
lret
not
sub
pop
cmpsl
sbb
pop
mov
insl
inc
movb
cmp
das
mov
int3
xchg
sbb
iret
push
xchg
add
in
and
and
xchg
lea
or
shlb
cmp
xchg
lock
dec
jmp
push
inc
mov
add
rclb
push
out
mov
cs
xor
adc
push
add
pusha
push
xor
popa
xor
or
push
dec
repz
push
add
sti
stos
cmc
jp
jo
push
addr16
push
mov
push
jle
jmp
lea
xlat
jne
or
cwtl
je
sbb
pop
clc
mov
mov
push
xlat
mov
std
insb
jmp
jp
xchg
movsl
inc
sbb
mov
cmp
lods
xor
cmp
jbe
cmp
inc
xor
jo
and
mov
imul
std
fcmovnb
out
jo
inc
lret
jne
jb
dec
sub
test
data16
pop
pushf
add
and
shl
stos
inc
inc
mov
xchg
inc
mov
inc
lds
insb
and
sub
sub
sbb
aas
jecxz
insb
cmp
pop
jl
and
inc
dec
fldcw
in
pop
js
scas
mov
packuswb
fs
lret
and
insb
popa
lods
into
jg
jmp
sar
je
add
sbb
push
adc
mov
sub
mov
aad
xor
jle
shll
mov
lods
jl
lods
lods
cmpsb
lods
cwtl
add
out
add
push
and
push
sbb
xchg
adc
test
call
test
push
and
add
loope
fs
iret
jl
or
pop
lret
dec
push
lds
movsl
pop
or
add
sbb
das
cmp
stos
dec
push
xor
and
adc
mov
push
out
and
stos
add
enter
fdivp
mov
iret
jbe
in
sub
dec
mov
fs
shlb
iret
push
add
data16
xor
cmp
xlat
xchg
sbb
sbb
movups
or
lret
enter
pushw
xchg
xchg
lahf
arpl
jb
mov
add
movsl
insl
in
sub
lcall
or
movb
jb
pop
sahf
push
sub
sbb
add
xchg
push
and
clc
adc
jge
mov
jo
pop
imul
call
sub
push
fimuls
push
cmp
imul
push
sub
sub
push
cmp
movsb
es
mov
push
ds
stos
add
sub
sbb
sbb
cli
xorb
mov
arpl
stc
push
rorl
cs
push
or
xchg
dec
addr16
call
repz
psadbw
out
xor
ja
jecxz
xorb
cmp
sub
adc
add
mov
sub
in
mov
mov
cmp
fcomps
xchg
lds
call
pop
dec
sbb
out
inc
cmp
xor
add
push
xchg
jecxz
mov
das
xor
loope
inc
nop
adc
lods
cmp
aas
mov
lahf
lahf
subb
cmp
lods
out
daa
int
shrl
mov
ror
mov
xor
xchg
jae
mov
popf
js
or
lret
push
int3
outsb
jb
cs
shll
and
out
test
xor
nop
int3
and
data16
inc
or
inc
lret
lret
mov
arpl
mov
push
cmp
dec
adc
mov
xor
rolb
xchg
sbb
mov
movsl
dec
out
push
cs
sub
aam
jp
xchg
shl
mov
jno
lock
shlb
or
inc
ljmp
dec
jne
outsl
cmp
sbb
imul
ss
out
cmp
orb
orl
sbb
mov
xchg
aaa
movsb
pop
xchg
leave
out
add
fdivs
xchg
mov
dec
mov
stos
cmc
xor
dec
mov
mov
shlb
sahf
mov
imul
inc
enter
outsl
sbb
adc
pop
mov
mov
or
add
add
loopne
in
inc
ror
daa
stos
in
inc
xorb
scas
jmp
pop
je
cwtl
mov
xchg
aam
cmp
lods
fimuls
cmp
pop
inc
fsts
pop
stc
sub
lret
cli
push
add
inc
shll
push
arpl
iret
iret
cmp
dec
add
jecxz
jnp
push
cmp
rcrb
stc
pusha
sbb
in
dec
shlb
imul
pop
ret
sub
outsl
test
cmp
mov
mov
imul
je
aas
inc
loopne
xor
inc
arpl
jbe
les
xchg
subl
iret
jns
outsl
push
pop
push
call
inc
pop
jno
mov
mov
push
push
pop
jne
adc
push
xlat
add
add
sub
sbb
fldt
jbe
addr16
jl,pt
in
lods
jo
popa
push
jae
sbb
dec
push
xchg
lods
arpl
stos
or
sub
ja
xor
mov
pop
aam
sbb
cld
mov
add
fmull
aam
push
push
xchg
jo
sbb
push
jecxz
xchg
cmp
inc
push
push
mov
sbb
andb
and
mov
sub
movsb
aas
and
das
or
and
pushf
shrb
adc
dec
loop
dec
loopne
movsl
pop
cmp
mov
lods
cmc
test
cmp
inc
sbb
jo
rorb
lods
xchg
das
xlat
ja
jmp
dec
or
leave
aas
jp
notl
outsb
add
cmp
dec
push
dec
cmp
and
out
loopne
mov
pop
lds
push
xchg
cmp
dec
shlb
in
mov
nop
mov
loop
add
or
add
sbb
pop
iret
hlt
pop
pop
mov
ror
adc
jmp
imull
enter
adcl
fcmovb
dec
cli
call
pushf
dec
xchg
mov
ret
insl
out
add
cltd
cmp
fsubrl
ja
sbb
into
ja
iret
pop
inc
repnz
ja
push
jg
mov
iret
add
sarb
sbb
inc
cli
cmp
out
jg
jmp
xchg
dec
idiv
dec
sub
mov
stos
daa
loope
jmp
push
aas
mov
mov
inc
cli
js
out
nop
nop
jp
and
jnp
or
call
loope
push
cmp
ret
mov
loopne
inc
push
jecxz
lea
js
sub
out
adc
jge
mov
lahf
pop
outsb
sub
mov
cmp
adc
clc
add
sbb
arpl
cmpsl
sub
and
sub
inc
loope
fs
add
call
jg
pop
loopne
out
pop
dec
sub
out
es
pop
sahf
add
popa
mov
jl
sbb
into
xor
notb
cmp
arpl
pop
mov
and
popa
and
xor
jg
sbb
addr16
pop
or
in
push
clc
or
sub
subb
loop
enter
pop
incb
shll
das
lea
outsb
inc
dec
call
out
fistpl
jmp
mov
jb
add
imul
lds
das
mov
out
push
jne
stos
fs
je
lods
arpl
and
out
inc
popa
jle
pop
mov
cltd
sbb
pop
lea
xchg
pop
sbb
loop
jo
pusha
adc
xor
push
movsl
test
xchg
and
sarb
jns
dec
fadds
shlb
push
std
adc
add
lods
inc
xchg
adc
cmp
clc
adc
cltd
fisttpl
sub
mov
xlat
insb
mov
push
xchg
enter
inc
push
leave
dec
dec
addb
in
add
sub
gs
mov
mov
push
cs
cmp
lea
xor
lods
jmp
sbb
dec
xchg
or
mov
add
jnp
xlat
jbe
sub
cmpsb
xor
jne
add
jae
mov
add
ret
sub
std
mov
push
into
aam
dec
pushf
mov
scas
ja
iret
fcmove
jb
sbb
inc
dec
xchg
movsl
xchg
arpl
outsb
mov
fndisi(8087
add
jbe
leave
pop
stos
cmc
in
inc
inc
pushf
push
push
inc
lods
xor
pop
dec
sbb
hlt
mov
andb
pop
jbe
cmp
fildl
mov
jg
cmp
mulb
sbbb
fwait
add
add
into
mov
subl
and
mov
lea
pop
lods
push
popa
sbb
test
sbb
jnp
inc
movsb
ja
pusha
test
fcomps
pop
sbb
jl
dec
scas
adc
sub
jmp
aaa
fdivrp
add
or
cmp
pop
add
cltd
jo
sub
sti
cmp
inc
ljmp
or
mov
fwait
mov
adc
test
adcb
sarb
aaa
js
push
ret
std
mov
xor
xchg
into
mov
je
adc
sub
outsb
push
fsts
iret
ret
jp
sbb
push
cmp
lods
or
pop
cli
xor
xchg
mov
cmp
pop
in
gs
stos
add
je
inc
clc
rolb
ja
inc
xor
dec
js
insb
cwtl
outsl
mov
sub
push
and
mov
pop
mov
pop
add
inc
inc
ljmp
push
iret
cmc
mov
xor
scas
sub
lcall
push
jmp
adc
outsb
push
jg
lahf
xchg
inc
cmpsb
call
movsl
pop
enter
shll
sub
fdivs
xor
icebp
addb
mov
and
and
cmc
call
cmc
jne
lret
push
lcall
xlat
inc
bound
jge
push
pop
clc
scas
nop
cmp
in
sbb
fildl
and
and
fsubrl
lods
ret
or
scas
xor
das
ja
ficoml
adc
cmpl
addr16
fcoml
xor
cmc
xor
adc
mov
rolb
xchg
pop
pusha
and
or
xchg
jno
cmp
adc
add
inc
inc
cltd
xchg
clc
cmp
or
test
xchg
nop
daa
movsl
in
testl
push
fs
outsb
bound
add
sbb
cmpsl
sbb
ja
push
je
pushf
cmp
cli
imul
cmpsb
aad
mov
aaa
bswap
adc
js
lods
push
jbe
sbb
add
dec
dec
addr16
fcomps
or
jle
pop
adc
addr16
adc
add
or
ds
mov
nop
jo
imul
pop
add
mov
or
pop
jp
pop
movsb
add
inc
aad
andl
pop
mov
xchg
adc
jl
call
xchg
push
add
jl
int3
sbb
outsl
popf
lock
xchg
lock
pop
lret
jb
imul
aam
mov
fbld
add
popa
sub
inc
test
sub
pop
add
add
dec
leave
cmp
mov
popa
cmp
xchg
ret
xor
sbb
addl
or
lahf
aam
mov
adc
std
xchg
sub
test
repnz
outsb
adc
sbb
orl
cwtl
dec
mov
loope
es
jo
cmc
add
je
sahf
movsl
mov
inc
cmp
sbb
push
dec
out
mov
stos
hlt
xchg
rorb
sti
cs
test
mov
xor
rclb
jmp
call
aam
in
js
das
push
and
push
pop
jnp
hlt
mov
testl
sub
fbstp
icebp
iret
adc
sbb
stos
or
imul
push
push
mov
jb
xor
icebp
icebp
rclb
or
int3
out
int
iret
imul
add
mov
mov
pop
clc
dec
and
mov
pop
addr16
and
out
shlb
lcall
addb
inc
lea
rcll
cmpsl
or
ret
xor
loop
fucomip
popf
and
mov
or
pop
dec
cltd
xor
add
call
mov
pop
outsl
sti
adc
insb
dec
call
jae
add
fadd
rorb
fcoms
cltd
shl
pop
test
xchg
inc
sub
push
jbe
mov
add
flds
imul
iret
push
stos
push
dec
mov
mov
fdiv
outsb
inc
cmp
dec
out
sbb
ret
mov
clc
aas
mov
pop
jmp
push
mov
xorb
or
mov
out
xor
push
imul
sub
mov
dec
dec
pop
cmpsb
daa
or
and
dec
push
and
add
add
push
cwtl
sbb
aam
ja
mov
jle
sbb
adc
imul
push
lods
lea
subl
arpl
loope
xor
pop
rclb
push
arpl
cs
sti
push
es
insl
push
cmpsl
ret
dec
cmp
adc
jg
and
push
mov
add
lods
jno
mov
pop
int
inc
cwtl
xor
mov
add
call
leave
shlb
aad
daa
arpl
movb
shrb
es
pop
outsb
in
out
add
xor
loopne
aaa
sub
mov
xchg
pop
adc
loopne
notb
mov
sbb
orb
add
xchg
and
xor
push
add
push
and
das
and
popa
daa
ficompl
lea
iret
xchg
xor
jo
stos
or
dec
and
aas
mov
les
popa
adc
cmp
cmc
mov
push
mov
push
xor
mov
mov
xchg
lcall
mov
add
hlt
add
iret
iret
sbb
jb
pop
enter
and
and
les
dec
mov
push
push
inc
and
dec
jmp
shlb
sub
add
roll
sbb
add
icebp
and
hlt
nop
arpl
cld
fs
add
cwtl
inc
outsl
test
aam
stos
out
xchg
xor
fsts
jo
mov
sbb
les
leave
popa
xchg
xorl
imul
shll
mov
sub
call
icebp
lods
add
add
jbe
jnp
fs
add
es
stc
pop
imul
fimull
mov
add
xor
test
adc
out
xchg
loopne
in
xchg
out
jmp
cmp
arpl
cmp
xchg
xchg
test
in
movsl
mov
adc
pop
cmp
popa
xchg
jne
jb
sub
test
push
push
arpl
outsl
xor
push
mov
lock
cmc
lret
loope
dec
fmuls
movsl
fwait
mov
and
xor
xchg
push
gs
mov
loop
xor
sub
cmp
sub
xor
pop
push
add
mov
and
inc
jbe
arpl
or
outsb
popa
cs
fs
or
and
out
add
mov
and
loope
loop
mov
icebp
out
and
cmc
test
add
xchg
jbe
lahf
loopne
jle
jg
ja
mov
imul
popa
xchg
dec
xchg
gs
loope
push
fstl
add
jo
ljmp
sbb
and
out
sub
adc
fmuls
or
adc
adc
cmpsb
test
ss
adc
test
mov
arpl
out
in
enter
push
or
xchg
adc
cmp
xchg
ljmp
call
add
xor
pop
cmp
or
mov
inc
pop
jnp
mov
lods
add
or
fsubl
xor
jae
iret
test
daa
ljmp
test
sbb
xor
mov
pop
push
sub
sbb
rclb
jle
mov
xchg
or
imul
push
xchg
or
inc
push
psubusw
push
or
je
inc
fs
mov
dec
cmp
cmp
add
add
sub
stos
js
adc
test
nop
shlb
hlt
in
loope
lods
push
sub
inc
dec
xchg
les
jne
mov
ror
xor
jl
and
add
insb
in
test
pop
leave
cld
rcrb
adc
fnstsw
inc
or
pop
movb
lret
push
sub
jne
inc
jge
xchg
inc
loopne
test
je
je
xchg
sbb
sbb
mov
and
loopne
push
mov
daa
adc
push
xor
das
loopne
sub
adc
xlat
mov
add
repz
fisttpl
pop
sub
jg
jne
addr16
adc
sahf
sub
pushf
adc
or
xchg
lahf
insb
cmpsl
adc
jp
cmp
int3
pop
cmp
iret
mov
lret
xor
fwait
add
sbb
in
sti
cli
icebp
mov
mov
mov
or
pop
mov
mov
mov
data16
pop
mov
jle
jle
or
cwtl
adc
jmp
ja
dec
xchg
insb
bound
mov
add
sub
push
cmp
pop
add
push
cmp
push
aaa
and
test
adc
lods
cld
push
sbb
fcmovnbe
pop
xor
mov
out
push
dec
xor
mov
add
hlt
dec
and
mov
jbe
push
cmp
jo
add
adc
mov
pop
sub
sahf
push
cs
or
xorb
adc
and
mov
cmp
push
outsl
add
popf
cli
stos
js
xchg
sahf
mov
pusha
sarb
arpl
pop
adc
cmp
or
cmpl
je
mov
or
xchg
jmp
stos
push
push
mov
jne
push
sbb
add
mov
es
xchg
daa
xchg
test
call
rorl
jmp
xchg
dec
enter
add
scas
jge
or
andb
int3
add
or
test
adc
xor
pop
push
add
test
cmp
pop
mov
mov
mov
and
adc
mov
sub
mov
or
sbbl
adc
jp
mov
jmp
clc
or
sbb
sub
and
loope
or
or
hlt
and
dec
es
add
mov
fidivl
les
lods
dec
mov
mov
or
inc
js
call
add
add
pop
cli
mov
sub
pop
inc
sub
push
enter
add
xchg
or
sub
insb
mov
movsl
ret
or
call
dec
add
fcompl
mov
xchg
test
lahf
sti
jnp
js
outsl
pusha
in
add
pop
pop
cmp
rcrb
dec
sarb
add
or
out
dec
jmp
push
insb
out
hlt
jae
je
adc
aam
sbb
and
push
xchg
or
lahf
hlt
mov
xor
fdivrs
inc
popa
add
pop
cmp
mov
out
roll
int
hlt
push
mov
mov
orb
cmp
push
cld
nop
ds
xchg
sar
js
or
or
aas
adc
inc
mov
call
popa
mov
or
push
mov
loopne
rcl
lcall
mov
loope
add
add
rcrb
inc
das
pop
pop
jb
nop
add
jp
lret
mov
js
add
and
aam
pshufw
xchg
or
pop
sbb
shll
lods
cmp
popa
or
fwait
cli
push
bound
add
test
scas
fcomps
int
jecxz
pop
or
iret
js
or
inc
popf
adc
dec
and
insb
mov
xchg
adc
mov
daa
movl
roll
es
push
mov
jp
insl
aam
fdivrs
out
imul
sbb
dec
lds
adc
mov
add
push
jmp
jmp
into
dec
cmp
jg
je
jns
iret
in
dec
and
mov
lds
lock
sbb
js
ret
or
xor
ja
cmpsb
addr16
ds
lret
pop
adc
lods
bound
xor
or
les
pop
mov
xchg
mov
xchg
fdivs
fmull
jl
cmp
mov
fdivr
sbb
sub
or
push
cmp
cmp
or
test
jp
push
lock
ficoml
sub
sub
and
push
add
dec
lret
push
ret
cmp
dec
cmp
and
jl
mov
leave
nop
cmp
iret
testl
mov
mov
mov
push
pop
shrl
movsb
rorb
loopne
loope
add
xchg
popa
jne
or
xchg
stc
or
in
adc
fcomps
iret
ss
std
dec
dec
cmp
dec
cmpsl
mov
mov
imul
pop
push
mov
js
sbb
fstl
popf
mov
push
pop
push
cmpsb
imul
mov
mov
fsts
add
push
push
mov
cmp
xor
roll
cmpsl
fstpl
add
lods
negl
and
addb
inc
and
insl
push
in
pop
out
data16
push
xchg
and
lds
mov
fcompl
mov
xchg
scas
xchg
ja
sbb
insl
pushf
out
test
popa
mov
mov
cmp
push
repz
mov
repnz
inc
push
push
dec
mov
jb
xorl
or
jle
and
mov
or
sub
js,pn
mov
ret
mov
lea
and
fucomi
sbb
daa
cmp
stos
and
test
test
mov
cmp
stos
xchg
adc
push
dec
inc
cmpb
sub
jne
dec
add
dec
push
and
pop
jg
loop
loopne
mov
or
add
std
push
ss
pop
dec
ficomps
mov
add
push
push
mov
addr16
push
das
out
rcll
mov
mov
cmpsb
mov
decl
out
sub
iret
out
push
imul
sub
lret
shll
add
lock
xor
out
pop
cltd
test
add
jmp
cmp
loop
icebp
mov
ja
iret
or
lea
fwait
jl
push
dec
sbb
push
pop
or
lea
mov
js
xchg
ja
jbe
adc
icebp
shll
test
subl
sbb
push
inc
jns
mov
add
sarb
mov
push
imul
jo
sub
movsl
mov
mov
mov
cmpsb
lret
mov
xorl
hlt
int3
and
add
xor
jno
insb
gs
shrl
xlat
sbb
sbb
int
xor
icebp
or
movb
lahf
clc
cmc
mov
lea
dec
arpl
nop
bound
ja
test
nop
icebp
sub
roll
test
aad
jecxz
iret
daa
xchg
mov
bnd
mov
stos
ret
sub
ss
add
pusha
daa
push
lret
add
mov
rolb
das
subl
add
inc
push
shlb
mov
adc
cmp
mov
dec
ret
add
push
into
mov
inc
jl
stos
jnp
xor
lea
insl
inc
and
and
mov
scas
mov
mov
inc
sbb
pop
jg
mov
add
dec
sub
xor
sbb
test
adc
ja
xor
ret
cmc
cltd
jnp
and
sub
hlt
insb
inc
and
cltd
subb
fisubrl
lret
addb
cmp
js
popa
loopne
aad
arpl
cmp
ret
add
rclb
lods
test
ret
movl
ja
ja
mov
enter
les
jbe
sti
filds
test
ljmp
push
ret
fs
mov
or
pop
pushf
rol
push
inc
gs
in
into
sbb
popf
add
out
adc
cltd
pop
sahf
adc
pop
xchg
lods
mov
sbb
mov
out
push
aas
nop
movsl
inc
sbb
repz
mov
fistpl
loopne
xor
xor
push
mov
test
pop
and
jns
jbe
js
add
and
mov
sbb
cwtl
sub
sub
mov
cwtl
xor
pop
cld
pop
xor
lods
into
mov
subl
jge
and
je
aas
cld
or
je
jb
add
pusha
and
inc
jno
and
mov
fstl
test
pop
js
xor
sub
adc
cmp
add
add
and
xor
in
add
imul
push
hlt
and
pop
pop
bnd
jg
outsl
push
pop
movsl
shr
sbb
mull
iret
dec
adc
pop
cwtl
rorb
push
ljmp
lods
jns
add
sbb
sub
cmpsl
mov
or
push
mov
dec
cmp
cmp
sbb
push
jmp
and
xchg
es
mov
repnz
xor
scas
pusha
cmp
sbb
sbb
sub
dec
das
cld
push
add
or
cs
xchg
outsl
cmp
add
shrd
loope
fisubl
sub
sbb
andl
shll
xchg
cmp
xchg
sahf
add
push
or
push
add
and
push
lock
inc
xchg
adc
mov
xchg
mov
push
sbb
cmp
push
stos
cmp
add
js
or
dec
cs
fildl
jbe
cltd
pop
popf
shll
sbb
sub
cmpsl
sub
movsb
sahf
push
pop
add
lret
iret
mov
adc
sbb
scas
xor
mov
pusha
add
or
andb
pop
add
dec
or
mov
jo
xorb
cmp
pop
mov
jo
xchg
insb
in
xchg
imul
dec
xor
xor
sub
dec
out
adc
outsl
stos
add
aad
scas
and
lock
lods
aam
mov
fildll
add
sbb
push
xor
dec
pop
or
xchg
orb
fldenv
mov
ss
int
add
inc
inc
fstl
aad
rcl
sbb
popf
je
aas
idiv
sarl
dec
imul
jnp
js
push
rorl
jne
mov
int
and
callw
incl
fidivrl
or
push
ja
lret
jb
stos
test
sub
pop
scas
shrb
fadds
shrb
xchg
push
jno
loope
inc
shld
push
call
movups
sub
enter
test
push
sub
inc
xchg
pop
pop
sub
cmp
shll
adc
xchg
orl
in
loopne
cmp
popf
sarl
stos
movsl
fldcw
outsl
stos
or
sub
out
cmc
xor
sub
imul
xchg
push
or
aad
mov
dec
jecxz
push
das
mov
das
ja
roll
mov
pusha
popa
gs
push
xchg
mov
xchg
mov
xor
inc
xor
sbb
popa
or
addr16
jb
leave
or
js
jp
in
enter
jb
pop
push
in
push
add
or
adc
pop
arpl
xor
test
xchg
pop
jge
adc
add
xor
fisubl
jno
sbb
mulb
mov
mov
lods
mov
mov
and
sarb
rcr
mov
sub
stos
sbb
psubd
pop
call
xor
aam
cmp
fstpt
inc
lods
fimuls
mov
xchg
out
and
jae
ja
sbb
jb
jno
dec
mov
adc
push
divl
jbe
push
dec
roll
daa
jl
inc
push
dec
cmp
loope
into
pop
pop
jno
jmp
push
xchg
push
js
mov
pop
pop
pop
hlt
in
jnp
into
mov
popa
sub
movsb
daa
imul
mov
xchg
pop
ja
fsubrl
dec
clc
pop
add
add
test
pop
in
and
das
aaa
xchg
incl
jl
push
lods
addr16
dec
mov
scas
rcrl
outsb
xchg
jae
add
pop
rolb
push
aas
add
sub
pusha
fcoml
pop
mov
adc
pusha
cltd
movsl
and
push
arpl
movsl
adc
push
ja
and
adc
dec
repnz
push
test
ja
outsb
and
dec
and
shlb
pop
lock
push
das
popaw
add
pop
push
andl
fsubr
mov
xchg
xchg
dec
jge
jne
sub
in
push
adc
xor
or
jmp
add
xchg
lahf
scas
data16
je
jp
add
lea
mov
dec
pop
clc
test
rolb
test
clc
mov
push
cmp
dec
or
add
pop
into
pop
adc
push
pop
push
jmp
sub
nop
gs
mov
jns
add
jle
pop
rcrl
imul
xchg
cli
and
xchg
cmpsl
sub
je
andb
lods
test
sub
mov
jae
jo
mov
xchg
lods
jbe
das
roll
sub
jle
imul
mov
in
or
xor
push
cmpl
xchg
inc
clc
xchg
test
add
sarb
jae
sub
or
dec
sbb
sub
push
inc
fldl
jmp
test
ret
adc
pop
rcrl
lret
outsb
mov
sahf
test
sub
insb
loope
mov
mov
std
jmp
xor
js
aam
cmp
and
xor
imul
in
inc
xchg
push
sub
mov
jle
js
mov
cmpb
cltd
dec
mov
lock
mov
cli
mov
inc
dec
ss
insb
mov
iret
loop
add
or
lret
or
clc
mov
sbb
outsb
push
bound
mov
jno
adcl
sub
cmpsb
test
xchg
or
jl
xchg
adc
push
mov
clc
jo
dec
andb
fmuls
pushl
lods
test
data16
and
mov
ds
pop
das
stos
pusha
push
xchg
scas
scas
clc
aam
xor
xchg
xlat
mov
adc
cwtl
je
cmpsb
loopne
mov
sub
jp
bound
popf
add
pop
jne
lea
js
pushf
pop
mov
sbb
or
insb
cmp
mov
xchg
call
push
clc
xor
cmp
xchg
imul
xchg
iret
sub
mov
and
push
rorb
gs
add
ret
sub
push
xchg
push
dec
fsts
pop
js
test
fcoml
mov
shll
xchg
push
imul
mov
and
in
jle
cmp
inc
sub
pop
sbb
aas
inc
or
xor
mov
test
test
sub
pop
xchg
inc
jecxz
add
imul
add
stc
push
loope
pop
xlat
xorb
add
inc
push
dec
das
jl
push
xlat
push
jnp
sbb
daa
testl
cs
ds
test
punpcklwd
pusha
pop
iret
push
mov
arpl
or
aas
jbe
lret
iret
mov
xor
std
je
loopne,pn
outsl
add
and
jne
addr16
push
iret
and
pop
pop
cmp
arpl
add
out
jge
cmp
jo
sub
jne
daa
adc
jbe
xor
out
out
mov
pop
pusha
jle
subl
push
int3
or
stos
mov
jne
sbb
dec
add
mov
mov
inc
and
aad
adc
shlb
pusha
push
out
push
movsl
cmpsb
lret
repz
mov
push
dec
cmpsb
jmp
push
push
movsl
hlt
pop
mov
inc
push
inc
and
and
mov
push
aas
cmp
inc
dec
movsl
mov
add
sbbl
jno
loope
mov
mov
dec
filds
inc
push
pop
fimull
mov
push
mov
outsb
mov
or
add
inc
xor
aaa
ja
outsb
insb
lea
add
add
jl
fdivrl
pop
xchg
inc
and
shl
sbb
jo
mov
rorb
sub
lret
shll
arpl
and
inc
sbb
jnp
sub
and
and
jo
mov
in
cs
add
lcall
sub
loopne
adc
dec
add
xor
je
insb
sub
adc
jae
add
insl
and
cmp
into
push
or
sti
xor
jo
mov
xchg
cmpsl
iret
pop
dec
jae
pop
cmp
inc
pop
outsb
pushl
popf
mov
and
aas
sub
mov
xchg
mov
mov
mov
inc
fdivs
adc
cmpsb
negl
orb
lea
lea
mov
lods
xchg
jno
xor
negl
ja
jne
add
cmc
insb
in
cwtl
inc
ljmp
sbb
sub
xchg
xorl
cwtl
loopne,pt
pop
daa
mov
sbb
or
sbb
sbb
push
push
lods
xlat
inc
and
icebp
add
cmp
pop
or
loope
ds
xchg
dec
sbb
dec
into
dec
or
mov
rolb
sub
adcw
inc
dec
pop
jae
pop
adc
mov
outsl
xchg
adc
lahf
jne
inc
add
ficoms
xchg
pop
test
data16
push
or
inc
jno
mov
xchg
cmp
add
fst
adc
lds
in
cmpsl
cmpb
lods
and
stos
adc
add
sahf
and
add
sbb
dec
orb
add
jecxz
inc
push
aam
aam
js
out
pop
subl
or
testb
adc
mov
and
mov
lock
pop
enter
inc
scas
mov
scas
lods
stos
pop
add
push
jg
add
nop
jge
rcll
int3
inc
cwtl
or
push
js
int3
insb
lods
stos
jmp
pop
sub
lods
test
repz
leave
push
scas
jg
mov
cmpsb
mov
mov
dec
sub
adc
push
jp
push
daa
pop
jnp
push
bound
imull
inc
leave
jge
iret
cmp
pusha
sbb
or
orb
mov
mov
lret
inc
or
stc
rcrb
cltd
les
adc
cs
cwtl
mov
xchg
in
scas
xchg
aam
push
lock
mov
xchg
inc
jo
push
mov
fsubrl
mov
mov
ljmp
inc
imul
testb
xchg
inc
mov
mov
scas
jae
pop
mov
mov
add
xchg
fdivrs
sbb
mov
push
or
loopne
lds
cmpb
add
adc
popa
cmpl
add
subb
inc
dec
es
jbe
jb
outsb
inc
iret
outsl
aad
push
imul
and
pop
dec
pop
xchg
leave
mov
jecxz
outsl
adc
adc
inc
add
adc
cs
inc
add
push
fnsave
out
mov
xchg
cmp
shlb
push
jge
cld
outsl
add
scas
aaa
xchg
out
cs
pusha
aaa
cmp
push
les
adc
push
outsl
and
aam
cmpsl
adc
mov
gs
sbb
sbb
adc
mov
sahf
and
pop
mov
or
pop
cs
aad
jp
cmp
pop
sub
dec
es
enter
mov
or
xor
cvtps2pi
add
pusha
pop
lods
sbb
pop
or
bound
xor
add
cmp
rol
mov
push
lods
adc
insb
jmp
push
test
sbb
fwait
popa
mull
and
jo
stos
cmc
cs
adc
mov
mov
fldt
xlat
push
mov
pop
pop
movsl
bound
dec
adc
or
cmpsb
das
pushf
add
scas
add
mov
popa
fs
dec
jbe
dec
push
fisubrl
add
rcrb
shl
es
cmc
pop
and
popf
ret
sub
add
and
ret
pusha
ss
inc
das
fimull
ljmp
cmp
adc
jg
jp
or
jb
enter
and
add
or
imul
fcmovnb
out
mov
xchg
iret
mov
int
jo
xor
repz
ss
jnp
and
inc
sub
incl
lcall
xor
jne
pop
loope
and
xor
pushf
push
cwtl
mov
mov
pushf
push
pop
ss
lret
inc
inc
ja
lcall
loope
xchg
dec
mov
and
dec
es
lcall
bound
xchg
dec
jne
aaa
or
insb
out
call
lcall
sub
outsb
dec
jmp
push
out
jmp
js
adc
pmulhuw
ret
adc
mov
mov
sbb
adc
dec
adc
mov
pop
movsb
inc
fwait
mov
or
sbb
andl
xchg
mov
clc
push
cli
ljmp
push
inc
int3
or
push
lock
dec
jl
dec
xlat
jle
inc
sub
cltd
push
rcrb
arpl
add
and
fsubl
mov
jo
inc
pop
sub
pushf
dec
aad
das
pop
hlt
sbb
in
movsb
push
cmp
aad
inc
pop
or
add
cmp
pop
mov
cmovb
cmc
mov
and
shlb
aam
and
xor
pop
dec
xlat
inc
and
pop
pop
out
aaa
jmp
add
subb
out
pusha
or
addb
adc
sub
rcrl
mov
sub
xchg
out
in
sbb
push
xor
dec
add
outsl
pop
and
pusha
dec
mov
int
cmc
jecxz
adc
test
cmp
cmp
stos
sbb
std
sbb
and
xor
pop
cmc
rcrl
inc
bound
adc
inc
or
jecxz
sub
mov
xor
popf
mov
out
aas
adc
cwtl
mov
dec
loope
and
nop
sbb
adc
inc
sbb
sbb
ss
and
xlat
test
jg
mov
sub
pop
sub
sbb
fsubl
sahf
sub
adc
daa
ljmp
lahf
aad
test
or
popa
pop
decl
mov
xchg
aad
add
aam
lods
push
or
jo
dec
inc
adc
and
sbb
add
and
sub
inc
pop
inc
pop
mov
xchg
push
inc
sub
mov
int
and
or
inc
jno
loope
and
lahf
xor
sarl
pop
or
test
sub
js
jns
sar
std
push
insl
stos
sbb
lock
fists
sbb
fst
nop
sbb
leave
jge
sbb
out
fprem
jo
inc
add
movsb
js
mov
mov
movsb
and
nop
andl
xchg
rorl
pop
loop
nop
mov
mov
in
stos
popa
movb
or
mov
bound
sbb
fs
inc
test
and
dec
pop
mov
daa
scas
gs
adc
dec
iret
push
push
mov
cwtl
sbb
pop
call
pop
adc
sub
cmp
testl
lods
and
mov
les
and
adc
mov
fdivrl
mov
ljmp
add
cmp
add
mov
scas
push
pop
add
pop
imul
bound
out
test
add
ret
ret
mov
xchg
call
data16
sarb
adc
shrl
aaa
insl
fimull
iret
jne
dec
cmp
cmp
pop
and
sbb
inc
mov
iret
push
stos
xor
test
add
ficompl
out
popa
lret
sub
loope
mov
test
pusha
dec
gs
fnsave
mov
fst
lea
mov
or
arpl
mov
or
iret
fldcw
fcoms
stc
add
pop
out
push
cmp
push
dec
and
sub
stos
xor
xor
and
and
mov
mov
add
mov
mov
pop
ds
add
add
js
stos
js
push
xchg
push
mov
xor
pop
push
jnp
mov
lock
xlat
nop
pop
addr16
adc
adc
sbb
sbb
jecxz
daa
dec
xor
jo
nop
cmp
in
or
sbb
in
and
addl
adc
shlb
sbb
rcll
push
sbb
mov
pop
aaa
adc
or
loope
imul
sbb
popf
pop
sub
xor
jne
aaa
sbb
add
xchg
sub
jo
loopne
shlb
cli
pop
loope
mov
add
adc
sbb
gs
sbb
jo
jl
xchg
mov
cltd
out
sub
aam
inc
lahf
mov
and
mov
mov
xchg
cmp
inc
xorl
lods
xlat
cmpl
icebp
push
call
pushf
arpl
rorl
insl
push
ja
mulb
stos
sub
dec
xor
mov
mov
or
arpl
stos
jp
or
outsl
pop
cli
mov
pop
mov
xchg
push
jns
inc
or
loope
inc
and
int3
insb
shlb
ja
fimuls
jge
in
inc
addr16
arpl
sahf
addr16
and
fsubs
push
mov
add
cmp
negl
and
mov
mov
pop
push
mov
sbb
jp
int3
sti
in
cmp
das
cmp
pop
xchg
mov
add
mov
jns
pop
xchg
aad
cmp
cmpb
mov
addb
xchg
lock
jbe
mov
les
adc
mov
and
and
jle
jecxz
xor
hlt
push
pop
cmp
std
enter
mov
popf
test
inc
cmp
and
jp
shr
insb
iret
or
outsb
jmp
fcompl
arpl
stos
stos
insb
and
and
ret
mov
pandn
bound
pop
icebp
or
mov
push
add
add
push
sub
inc
push
outsl
pop
popf
push
dec
cmp
pushf
or
iret
fstpt
push
xor
or
jge
xor
mov
inc
loop
sti
adc
lret
and
sub
lock
inc
leave
adc
pusha
pusha
aas
jne
sahf
rcrl
daa
sbb
push
insb
lods
ljmp
push
cmp
pop
push
or
push
adc
add
jmp
sbb
fucomi
mov
cmp
lret
iret
movsl
pop
test
lods
adc
imul
rclb
jle
lods
and
push
adcl
and
imul
mov
sti
pop
test
or
orl
xchg
jbe
test
pop
shr
data16
jbe
enter
add
out
and
nop
add
and
pop
or
js
xor
sub
pop
in
or
aam
mov
jle
pop
or
lods
out
add
cmp
movsl
clc
out
stos
fcmovnu
ret
mov
mov
cmc
xor
cmc
adc
jge
mov
xlat
inc
jae
jle
and
jmp
fcoms
lods
lods
xor
push
mov
iret
or
stos
dec
jne
mov
mov
incl
add
xor
xchg
rolb
iret
xor
push
lret
cltd
inc
nop
fcmovb
and
inc
jo
pop
xor
out
xor
adc
jmp
lods
xor
jl
cwtl
pushf
add
lods
add
movsb
shrb
cmp
mov
mov
cmp
ret
scas
mov
push
loope
push
es
mov
add
and
add
push
loope
inc
sub
xlat
ljmp
jecxz
cmpsl
sbb
push
js
cmp
call
mov
dec
and
scas
das
fwait
lock
xor
nop
mov
xchg
push
pop
adc
xchg
jg
sbb
add
ss
gs
outsl
les
xor
cmp
mov
and
xchg
and
iret
sti
cmp
add
sbb
rcll
push
xorl
mov
inc
lods
das
push
stos
jno
push
ss
test
add
lods
movsb
scas
xor
pushf
shr
scas
outsl
sbb
lret
sarb
xor
aas
cmp
idivl
mov
movlps
xchg
daa
ret
js
lret
pop
pop
mov
aas
test
sbb
cs
sub
test
jae
movsl
mov
das
sub
popf
iretw
insb
insb
lods
xor
scas
insb
cvtpi2ps
popa
cmp
outsl
cmp
in
cmp
shll
sub
flds
es
mov
xchg
sbb
and
mov
lods
in
add
mov
iret
ds
daa
in
call
setle
mov
dec
or
into
daa
jno
pop
or
lock
cmp
in
movsb
adc
ljmp
mov
outsl
inc
ljmp
push
and
popf
jmp
push
inc
sbb
sub
push
push
andb
clc
cmp
cld
rorb
into
je
add
xor
pop
add
adcb
push
add
mov
and
jl
push
ror
sti
iret
add
sub
cmp
or
stc
pusha
imul
add
pop
idivb
cmp
fistpl
jbe
xchg
loopne
lret
and
into
adcb
loopne
test
pop
jns
lds
ficompl
xlat
sub
cwtl
iret
adc
mov
add
xor
orl
mov
dec
sti
and
jecxz
add
xor
mov
jbe
pop
ret
cmp
and
xchg
js
adc
and
out
pushf
cmc
shl
cmp
repz
scas
push
pop
cmp
or
jg
out
sbb
push
jnp
std
pop
repz
fsubl
sti
lcall
xchg
fidivs
adc
scas
adc
aas
dec
and
loopne,pt
loope
jle
out
pop
pop
shll
popf
xchg
jo
lret
in
sti
xor
mov
jb
sub
push
add
ja
adc
add
aaa
dec
stos
pop
xlat
pop
loopne
les
jl
movsb
data16
outsb
or
adc
rolb
push
data16
adc
add
add
in
push
push
adc
cltd
xchg
in
or
in
push
or
pop
push
add
scas
popa
cmp
sbb
push
das
mov
add
or
push
jnp
fistpl
mov
lods
cmp
jo
cmp
jl
xor
mov
out
jp
push
pushf
and
fwait
adc
pop
cs
test
mov
call
dec
sbb
ret
add
popf
das
cmp
dec
add
mov
lcall
push
and
mov
push
or
push
push
push
rcrb
lods
mov
push
ja
std
push
das
iret
xchg
sub
mov
int3
jle
and
jo
scas
jle
push
jl
push
rolb
jno
jns
lods
mov
pop
mov
and
mov
add
int3
lret
and
jae
ja
push
subl
lock
shlb
mov
in
dec
adc
imul
js
push
add
push
flds
mov
hlt
and
xor
aas
aam
int3
out
stc
or
out
mov
inc
ss
je
ds
xor
push
pop
clc
add
pusha
cwtl
fistpl
js
xor
nop
push
add
ret
ret
popf
hlt
mov
das
inc
insl
test
js
and
cmpl
jge
add
xor
xor
xchg
movsb
fs
lret
cwtl
pop
dec
jo
shrl
push
insb
xlat
out
fldcw
and
push
adc
inc
lock
inc
xlat
fldenv
dec
fiadds
add
out
lods
sub
sub
sub
js
repnz
cmp
loopne
lods
add
hlt
inc
adc
popa
in
jno
fwait
jo
repnz
loope
rorl
scas
pop
in
xchg
orl
xchg
test
jne
stc
push
clc
jno
jp
push
add
add
inc
dec
sbb
lahf
imul
adc
xchg
aaa
pop
jp
cmp
push
sub
les
xchg
dec
cwtl
sbb
add
mov
inc
add
call
iret
pcmpeqb
cmpsb
dec
cmpsl
or
mov
cmpsl
scas
pavgb
andl
iret
mov
ror
stc
adc
or
roll
mov
rclb
mov
popf
sub
sahf
dec
push
or
cmpsl
mov
and
pusha
mov
add
ljmp
imul
xor
jne
lods
aam
cld
js
hlt
pop
dec
inc
pop
add
sub
jne
loope
loop
scas
fiadds
sub
or
sbb
rcrl
ja
dec
jns
sub
and
les
imul
das
shll
cs
out
and
les
les
loope
sbb
mov
iret
xlat
jne
inc
inc
push
sbb
stos
lcall
or
xchg
xchg
lock
inc
es
adc
pop
nop
scas
and
movb
das
pop
and
test
out
and
or
add
jmp
xor
add
jmp
dec
add
mov
dec
sub
or
or
dec
insb
gs
test
lahf
and
and
or
xor
outsl
and
lcall
dec
push
loop
jo
jne
fildl
mov
fsubl
add
je
andl
and
mov
inc
jmp
xchg
fs
and
inc
mov
jno
sub
pop
fisubs
ss
jo
mov
iret
jo
insb
loope
push
mov
or
lods
shll
adc
iret
inc
and
sahf
xchg
ret
add
enter
jmp
das
sbb
fucom
pusha
les
iret
jp
jg
rol
shl
mov
je
imul
cltd
daa
cmpsl
pop
bound
cmpsl
add
cmp
mov
sbb
fnstenv
clc
ja
iret
xor
add
sbb
mov
das
movsb
pop
das
orl
and
sarl
dec
xchg
push
scas
pushf
ret
bound
push
jb
mov
add
pop
jl
cmp
hlt
add
adc
adcb
push
xchg
in
in
fs
sbb
adc
jp
xor
fs
and
push
xor
push
lret
mov
dec
pushf
fucomp
push
add
in
outsb
out
in
aam
lods
dec
pop
push
in
test
outsb
cmp
ljmp
mov
jecxz
add
addr16
shlb
jecxz
cwtl
sub
xlat
bound
sarb
push
mov
mov
subb
shrl
out
sub
xor
aam
rclb
in
or
dec
js
push
xor
cli
sub
pop
out
pusha
loope
mov
fstpl
mov
mov
ficomps
xchg
js
sbb
xor
push
dec
mov
push
mov
loope
sub
cmpsb
or
adc
popf
shrb
push
inc
ficoml
mov
ljmp
js
sub
enter
push
inc
adcb
in
sub
xor
mov
and
pop
movsl
xchg
sbb
pushf
xchg
addl
call
jle
cmpsl
adc
add
mov
jne
clc
imul
fs
nop
and
push
xor
push
subb
fsubrl
in
jl
iret
and
mul
pop
and
pop
ljmp
shrl
jns
inc
add
loope
outsl
fwait
pop
fstpt
mov
dec
mov
sub
mov
pop
or
jp
cmp
out
outsb
es
loopne
popf
sub
rorb
lahf
in
dec
aam
pop
inc
push
add
ret
and
faddl
das
fwait
cmpsb
out
add
fistl
pop
inc
pusha
imul
ret
loop
lock
xchg
mov
inc
lods
je
cmp
pop
cmp
lods
cmp
in
scas
fs
addr16
daa
movsb
ret
fs
addr16
inc
mov
repnz
lock
push
mov
pop
jmp
or
es
xor
and
cs
and
lahf
dec
pop
jo
mov
push
lods
sub
sub
mov
jecxz
cmp
pop
jp
jmp
mov
xlat
mov
sub
inc
imul
gs
xchg
nop
push
cmpsl
push
je
subl
xor
loope
pusha
dec
and
lock
addl
push
jl
inc
or
xor
cmp
mov
or
in
stos
aas
sbb
push
jle
or
int3
add
push
pop
sub
xor
fisttpl
push
icebp
push
push
add
sahf
lods
mov
int3
in
cli
fs
and
and
add
jno
fadds
aas
sbbb
and
loope
test
xchg
pop
pop
stos
ja
ds
int3
and
mov
stos
or
aad
sbb
xlat
andb
orps
and
sbbl
mov
or
outsb
shrb
fldt
or
jge
adc
aas
test
push
push
push
ss
fbstp
push
sub
jge
push
inc
add
popa
arpl
stc
pushw
loope
arpl
dec
repz
pop
pusha
push
iret
cmp
cmpsb
and
push
not
pop
mov
cmp
insl
push
and
xor
cmp
adc
adc
inc
aad
pop
out
jb
pusha
iret
stos
imul
icebp
push
cmp
inc
loopne
fdivrp
mov
add
lea
push
lock
sub
hlt
sahf
lahf
mov
inc
loopne
add
sub
and
pop
aad
daa
cmp
lods
jbe
push
out
insb
add
sbb
sbb
lret
xchg
sub
mov
jp
xlat
cld
add
pop
xchg
in
sub
gs
push
and
cmp
sub
out
adc
push
mov
imul
pusha
and
outsb
and
mov
pop
jecxz
adc
mov
ret
pusha
push
dec
imul
jns
cltd
push
sub
and
xchg
push
xor
jle
pop
mov
push
lahf
loope
mov
rorb
adc
xor
and
sarl
sbbb
imul
adc
cmp
das
mov
test
dec
popa
sub
mov
shl
movsb
aaa
in
movsl
into
sbb
sahf
stc
or
pop
sub
pushl
xor
mov
or
mov
jle,pt
fadds
add
push
out
insb
frstor
das
daa
fbstp
xchg
leave
inc
dec
dec
pop
in
and
pop
dec
test
sbb
loopne
jno
mov
jp
pusha
add
push
jl
movsl
cmp
xor
xor
ret
push
sbb
rol
cmp
mov
push
outsb
shlb
inc
and
fildll
pusha
lock
xchg
and
imul
fildl
jle
mov
vmptrst
divb
or
sahf
mov
and
mov
es
rcrb
inc
mov
fs
repz
cmp
clc
sub
aas
push
cmp
mull
ffree
or
scas
pop
jl
lods
mov
mov
shl
push
pop
paddusb
adc
addr16
xchg
and
fs
jo,pt
fsub
rclb
push
mov
jle
mov
cmp
sbb
lock
shll
xorl
sub
enter
push
rcrb
mov
inc
das
pop
inc
add
add
stc
std
pop
sbb
cmpb
fldl
subb
push
sub
mov
aaa
sbb
pusha
icebp
or
es
lret
cmp
xlat
les
mov
mov
dec
popa
hlt
ror
xor
andb
dec
adc
sbb
cmc
mov
xchg
js
fs
and
iret
adc
sub
xorb
ja
jg
in
mov
int3
add
jno
iret
cmpb
mov
lock
jp
rcr
outsl
xor
push
popa
adc
adc
shrb
or
dec
jbe
dec
rcrl
push
push
mov
mov
sbb
xor
test
in
inc
cmp
jo
fists
inc
call
or
jnp
dec
or
outsb
adc
mov
push
mov
ret
rcll
and
rorb
jo
sub
push
shll
insb
sub
adc
add
mov
jno
mov
shlb
mov
repz
ja
mul
int
int3
sub
add
mov
mov
sar
fnstcw
jbe
add
aad
es
outsb
testl
adc
repnz
insl
test
in
cmp
imul
rorb
add
sbb
movsb
sbb
pop
cwtl
lock
adc
stos
cmp
push
push
cmp
xchg
lods
pop
loopne
shll
mov
pop
cs
loope
out
pop
inc
mov
jbe
clc
lahf
int3
loop
mov
xchg
shlb
jle
or
aam
ret
xchg
ret
bound
pushf
aam
jp
and
or
pushf
add
jnp
lods
dec
sub
in
jp
inc
mov
or
pop
js
adc
js
shlb
and
add
frstor
sbb
mov
cmp
outsl
bound
push
and
inc
faddl
dec
pusha
movsb
addr16
push
cmp
outsl
or
daa
lods
or
loop
daa
sbb
scas
das
movsl
rolb
ja
aam
das
in
inc
rcr
lcall
fldt
int
add
js
sbb
inc
in
test
lods
cs
and
jbe
sub
jmp
jo
arpl
testl
aad
sbb
addr16
jne
mov
iret
aam
cwtl
mov
lock
and
adc
ret
add
mov
movsb
lock
js
divb
nop
es
hlt
orl
jo
sbb
inc
cs
hlt
dec
push
adc
out
cmp
rcrl
out
inc
xor
in
pushf
and
aas
ljmp
js
negb
sub
rorb
add
cmp
and
fwait
jle
lock
psubq
push
notb
inc
iret
dec
aas
jo
loop
test
daa
hlt
cmp
test
subl
xor
adcb
mov
repnz
aaa
in
shrb
push
jo
hlt
sbb
les
movl
sbb
dec
add
rcrb
iret
repz
cmp
scas
shll
lret
and
mov
jbe
lock
fisubl
sbb
into
mov
ja
nop
xchg
add
inc
cmpsb
sbb
or
scas
pop
sti
icebp
add
testl
mov
mov
jmp
into
inc
xchg
add
push
xchg
fsubp
mov
lods
xor
dec
aam
xor
mov
xchg
or
cmp
inc
test
shrb
bound
je
sbb
lods
mov
lock
fistps
je
pop
je
dec
pop
adc
push
sub
cmp
lcall
jnp
loope
mov
jmp
lods
dec
clc
inc
inc
fcmovb
test
out
dec
and
dec
or
loopne
lahf
rclb
mov
test
fistl
shl
sbb
dec
add
pop
out
mov
add
add
out
scas
lods
or
xchg
mov
push
xor
sbb
push
xorl
ret
pop
adc
js
sti
fidivs
dec
or
dec
fadds
aaa
js
or
repz
push
push
pop
sbb
sub
pop
aad
mov
repz
push
stos
mov
push
shl
inc
clc
iret
jmp
lret
inc
movsl
daa
out
fiadds
push
push
iret
adc
call
rcll
mov
and
jmp
es
fmuls
add
mov
sarl
and
subl
fcompl
lcall
loope
add
push
mov
pop
iret
pop
fmull
pop
repz
add
adc
mov
jecxz
add
lcall
mov
lds
mov
push
ret
cmp
idiv
jmp
sub
jle
push
add
add
lods
push
das
mov
cmp
cmp
xchg
test
sbb
mov
int3
adc
ret
aad
dec
mov
aam
cmp
mov
push
int3
adc
loopne
mov
cmp
arpl
repz
aaa
sub
and
stos
jbe
sub
gs
aaa
stos
pusha
fcompl
mov
push
add
push
test
mov
xchg
leave
adc
adc
or
lods
movsl
mov
fdivl
sbb
sbb
and
pop
add
add
cmovnp
es
jl
or
pop
push
sbb
rcrb
sub
sbb
xlat
inc
loopne
mov
sbb
add
push
jno
insb
adcl
in
das
mov
jo
and
mov
mov
mov
pop
loopne
xlat
push
jecxz
and
push
pop
cmc
sub
sbb
loopne
push
mov
push
mov
bound
lods
das
or
fs
adc
sub
push
inc
sbb
or
push
sub
test
ja
or
push
das
mov
sub
lock
fs
push
out
aaa
mov
mov
mov
cmpsb
xchg
mov
frstor
movsl
fsubl
fcmovb
mov
test
lcall
mov
iret
popf
sbb
adc
lret
jne
cmp
loope
lds
jp
adc
or
xchg
and
push
or
aas
sbb
and
jge
dec
lock
test
inc
cmp
daa
rcrl
mov
xorb
das
xor
lcall
fstl
inc
or
mov
rorb
scas
int
je
mov
int3
xchg
push
sahf
pop
add
jns
bound
lds
dec
xchg
addb
test
mov
insb
push
adc
js
int3
mov
lahf
and
test
add
mov
popa
xchg
dec
push
sbb
enterw
xlat
lret
sahf
pop
push
mov
pop
xor
mov
push
ret
mov
xor
mov
adc
mov
imul
loope
les
int
stc
pop
add
jp
pop
jo
adc
imul
sub
pop
and
fldt
fsubs
mov
shlb
movsl
xchg
ds
jne
out
mov
sbb
shrb
aad
pushf
and
mov
mov
clc
push
rcrb
andl
outsl
movsl
ret
aad
and
popa
jecxz
inc
inc
xlat
mov
inc
xchg
cmp
pushl
sbb
push
add
inc
out
mov
filds
aas
push
fs
orb
repz
ret
xchg
ret
sub
or
ja
ret
adc
adc
daa
mov
fsub
add
xchg
push
pop
fadds
mov
inc
mov
push
gs
mov
out
mov
sub
push
test
cmp
ljmp
fstps
inc
mov
pop
push
popf
cmc
pop
jo
inc
repnz
sub
shlb
pop
les
xor
fcmovu
femms
cmp
lcall
sub
sub
js
dec
sub
in
es
insl
sub
or
dec
pop
aas
jnp
loopne
sub
aaa
test
jne
push
mov
mov
les
mov
pop
test
in
mov
and
push
adc
lods
sub
cmpsl
adc
jl
jle
xor
into
mov
stos
mov
pop
xor
xchg
push
sbb
lret
cmpl
lods
movd
scas
xor
lods
sub
sub
inc
xchg
sub
inc
or
dec
mov
imul
push
shrb
push
daa
push
sub
jmp
arpl
test
xchg
mov
lds
or
pop
ret
bound
sbb
aaa
sub
xchg
mov
inc
push
inc
mov
loopne
fidivrs
sbb
or
pop
adc
or
xor
out
mov
mov
mov
inc
aaa
sbbb
in
imul
xchg
push
push
push
sti
xor
loopne
mov
cmp
popf
inc
sub
or
fsubrs
pop
add
add
mull
adc
outsb
cmpsl
xchg
lcall
je
cmp
call
and
in
mov
push
je
pushf
cmp
mov
or
or
cmp
jae
jo
loopne
xor
nop
sar
pop
das
push
addr16
mov
movsl
and
icebp
mulb
cli
jae
or
add
mov
or
pop
xor
int
push
add
sti
pop
shlb
mov
addr16
rol
mov
inc
mov
jnp
test
pop
test
mov
cli
mov
cmpsb
les
pushf
cmpb
popf
jb
dec
mov
gs
js
xor
pusha
test
pop
sbb
into
shll
add
iret
push
test
sbb
cld
cmp
ds
jmp
cmp
in
lahf
jle
cmp
ds
push
mov
xor
sbbb
mov
js,pt
fistps
lcall
out
xchg
mov
aam
sub
mov
xor
mov
fildl
je
cmp
scas
push
xchg
inc
mov
add
adc
and
push
inc
pop
gs
nop
fs
and
inc
shl
mov
lock
arpl
mov
inc
and
addb
loopne
pop
cwtl
push
lods
aaa
xlat
push
sub
cltd
aad
jmp
sarb
test
adc
jnp
nop
push
js
movsb
ret
add
or
lods
and
mov
mov
lods
mov
insl
bound
and
insl
push
sbb
cmp
daa
into
pop
movsb
pop
cs
stos
lods
jge
ret
pop
int3
sbb
inc
xor
or
or
das
xor
inc
and
nop
xor
movsl
pop
fs
mov
movsb
mov
cld
pop
lock
sbb
jecxz
fsubrs
ret
fsts
sbb
sub
nopl
shrl
xor
leave
mov
iret
xchg
lret
cmpsl
addb
dec
push
mov
loope
lea
xchg
sbb
add
and
lea
je
sti
xor
movsb
sbb
jge
rcr
dec
ret
out
adc
inc
addr16
out
cmc
std
fbld
inc
jmp
or
pop
es
sbb
lods
lods
ja
xchg
adc
and
fnsave
pop
cmp
imul
mov
inc
jl,pt
shrb
testb
mov
out
js
xor
cmpsl
rorl
roll
adc
adc
call
int
jno
pop
sub
pop
sbb
lea
mov
push
pop
pop
test
sti
or
cmp
or
cld
sbb
add
push
sub
mov
xchg
jmp
ss
inc
js
stos
add
push
icebp
ljmp
cld
or
orl
push
mov
xchg
push
cwtl
pop
iret
sub
fcompl
add
fildl
xchg
aad
xchg
roll
movsl
stos
xchg
lock
fisubrl
jp
jecxz
mov
add
mov
cmp
mov
data16
push
shll
add
call
loope
jg
cwtl
dec
inc
loop
mov
or
sti
popf
pusha
mov
fldt
xchg
movsb
dec
aaa
aaa
ss
data16
in
loope
cli
jge
sub
pop
shlb
add
cmpsl
add
inc
or
or
xlat
je
shlb
ret
out
addr16
jmp
js
fs
je
adc
inc
dec
dec
and
add
mov
push
mov
mov
test
loope
leave
pop
in
adc
jne
xchg
add
insl
adc
test
fsubs
andl
shlb
mov
add
inc
add
jo
mov
xor
push
push
dec
out
cltd
icebp
jo
cmp
mov
add
cmp
ffreep
notb
mov
enter
imul
adc
roll
xchg
out
sbb
imul
dec
data16
icebp
cmp
cwtl
into
sbb
mov
mov
outsl
popf
sbb
xchg
push
push
popa
sti
sbb
mov
dec
js
movsl
sbb
push
pushf
ljmp
pop
push
adc
mov
cmc
bound
xor
xor
std
dec
mov
or
sti
pop
orl
jle
roll
retw
jo
inc
nop
aaa
and
jge
into
inc
fmull
inc
xor
daa
loope
mov
dec
clc
mov
jl
data16
mov
sub
mov
mov
orb
or
mov
mov
add
mov
and
fmull
xchg
inc
inc
mov
lock
rcr
xor
push
adc
mov
add
jmp
js
adc
sbb
rclb
jmp
pop
imulb
ret
jg
jle
cmp
pusha
lea
shl
aam
clc
in
sub
sahf
push
imul
pushf
je
jns
cmp
and
sbb
jno
icebp
dec
and
outsb
xchg
fwait
sbb
inc
or
fidivrs
inc
inc
pop
pop
inc
add
arpl
add
pop
push
mov
and
push
inc
ljmp
imul
in
lea
pop
daa
add
rorb
xchg
xchg
mov
stos
loop
roll
dec
fwait
add
arpl
push
lea
xor
push
test
bound
bound
ds
insw
ficomps
inc
xor
and
or
or
add
adc
xlat
and
sub
les
pushf
cmp
xlat
xchg
xchg
cmpsl
out
aas
insb
mov
fisubrs
lods
inc
add
inc
mov
jg
fadds
cmpsb
loopne
shrb
adc
add
rcrl
sbb
in
fistpll
cmp
adc
ret
pop
addr16
mov
or
sub
mov
nop
xor
dec
cmpsl
pop
jmp
inc
stc
pop
aaa
cli
add
dec
sarb
jg
sub
data16
jl
jo
clc
dec
adc
inc
repz
cmpsb
dec
add
xchg
sub
imul
and
into
das
push
xor
or
jecxz
or
js
insb
fadd
imul
and
jp
pop
fwait
xchg
cltd
jmp
cmpsl
dec
dec
jo
add
lahf
hlt
dec
mov
imul
sbb
sbb
pop
jo
add
nop
mov
xchg
shlb
ret
adc
movsb
add
iret
ficoml
mov
ret
adcb
lret
loopne
andl
int3
test
ds
mov
mov
out
mov
ss
jnp
cmp
pop
imull
cltd
sbb
adc
mov
xchg
inc
adc
test
mov
faddl
pop
dec
movsl
out
das
mov
je
arpl
xlat
sub
fwait
dec
out
ret
sbb
sub
jmp
loopne
inc
mov
cmpsl
xor
add
cmp
or
pop
cmp
xchg
xor
and
sbb
jle
imul
adc
cmp
and
sub
aam
xchg
add
push
mov
andb
in
lret
cmpsb
lret
das
pop
xchg
xchg
or
sbbb
push
push
mov
sbb
insl
jo
rorl
sub
jp
and
and
jae
das
sub
repnz
add
daa
or
push
sti
add
js
jnp
jp
and
stc
adc
dec
test
ds
add
je
jge
data16
in
fists
adc
test
add
leave
jg
sub
push
call
push
test
lock
mov
mov
dec
jmp
cltd
movsb
add
and
sub
arpl
adc
bnd
and
ljmp
aam
cmp
test
push
lahf
mov
jl
clc
les
repnz
add
shl
inc
and
pop
mov
cmp
jge
jnp
addr16
and
repz
loope
and
aas
or
out
fdivr
ds
les
adc
sbb
sub
sub
daa
cmp
pop
dec
stos
jp
mov
sbb
mov
stos
loopne
lock
lea
sbb
pop
xorl
sbb
mov
shlb
clc
xchg
bound
ficoms
push
pop
loopne
add
adc
jle
inc
aas
push
cwtl
add
dec
cmpl
jg
rorb
dec
or
or
ds
add
adc
mov
scas
or
jns
andl
xchg
mov
pop
sbb
xchg
push
mov
bound
jl
sahf
in
or
jp
jl
or
pushf
and
or
adc
cmp
xchg
or
and
add
mov
repnz
pop
in
mov
pop
jmp
inc
sub
pop
jp
push
movsb
add
push
cmpsl
or
mov
les
enter
int3
aaa
push
mov
mov
adc
adc
lahf
es
fs
ret
or
or
adc
aam
push
ss
adc
out
jmp
adc
aad
jno
sbb
or
pop
or
push
and
xchg
dec
adc
adc
push
out
and
sub
jo
sub
icebp
imul
jbe
inc
stos
inc
mov
push
ss
xor
ret
mov
out
mov
fcoml
mov
sub
daa
aad
push
cmp
or
psubsw
pop
stos
ja
data16
loopne
popf
fs
clc
pusha
icebp
das
fisubrs
mov
xor
movsl
fmuls
dec
mov
mov
sbb
xchg
das
daa
movb
in
xchg
test
or
and
add
imul
add
mov
jno
jmp
xor
loopne
pusha
es
jns
fildll
insb
cmp
sbb
pop
push
call
sbb
cmpsl
sub
paddusw
stos
fs
leave
mov
pop
lea
inc
cmpsl
jne
mov
les
xlat
add
mov
cmpl
pop
and
mov
jae
mov
sbb
stos
or
or
mov
cmp
or
mov
mov
loope
ret
loope
dec
dec
jbe
add
js
popa
inc
cmc
test
int
jmp
fsubrs
push
je
mov
xchg
clc
movsb
jne
adc
sbb
arpl
and
push
dec
ja
ja
and
push
leave
and
movsb
ret
dec
mov
jl
pushl
shrl
jecxz
jle
jbe
js
mov
or
xchg
rorb
pop
and
dec
and
xorb
xor
xchg
inc
rcll
pushf
es
dec
sub
fidivl
sub
adc
jbe
pop
pop
cmc
movsb
lds
cmp
rolb
jnp
sub
pop
and
call
iret
jbe
mov
mov
dec
adc
daa
mov
clc
ss
icebp
mov
jmp
into
mov
or
mov
out
sbbb
sahf
xchg
dec
cld
fld
aas
or
xchg
subb
dec
jge
addr16
or
sahf
add
inc
jp
jnp
add
shll
add
push
cs
test
inc
and
cs
pushf
out
xchg
pop
inc
sbb
or
pop
mov
jl
xor
sbb
ret
inc
out
sbb
pop
pop
inc
cmp
xchg
lret
jbe
xchg
out
cmc
sub
scas
rorb
sbb
pop
outsl
jge
pop
rorl
ficoml
cmp
push
ret
pop
out
cltd
pop
push
cmp
xor
loopne
pusha
popf
pop
jmp
mov
mov
or
pop
mov
mov
mov
cs
es
mov
loope
aaa
pop
shrl
xchg
push
jnp
pop
xchg
sbb
xor
imul
or
std
or
loop
pop
xor
push
dec
dec
mov
xchg
daa
hlt
jbe
repnz
and
or
xor
sub
and
in
and
mov
and
ja
add
aad
xor
test
sahf
xor
mov
jl
sbb
and
adc
sbb
push
or
xor
cmp
dec
testl
lods
or
sti
adc
dec
rorl
shl
and
rcrl
outsl
insl
pop
pop
bound
daa
jae
clc
lcall
rorb
loopne
push
xchg
add
sbb
xor
pop
adc
movsl
adc
mov
inc
fsts
jp
pop
cli
or
adc
sub
movsl
subb
add
or
outsl
add
out
cld
les
sbb
lods
add
js
sbb
int3
cmp
adc
dec
jns
dec
add
add
push
mov
push
add
jo
cwtl
les
iret
imul
addl
jo
adc
and
loop
dec
inc
pop
jns
add
movb
sub
mov
adc
inc
mov
push
pusha
and
or
mov
cmp
test
pop
inc
xor
mov
andnps
mov
js
aas
push
pusha
adc
adc
std
mov
mov
rorl
xor
pop
sbb
push
adc
cltd
popa
cmp
ljmp
jge
jp
iret
xchg
shrl
xor
xchg
fucomp
add
sbb
orl
ds
jge
negl
xchg
sub
jbe
je
sbb
mov
out
imul
sbb
xchg
jge
ja
mov
lea
xor
inc
frstor
rclb
rcrl
sbb
add
lret
xchg
dec
sub
enter
scas
jo
lret
and
pushf
xchg
xchg
lea
xchg
cmp
add
mov
rclb
insb
xor
insl
add
push
jge
stos
and
add
and
and
das
pop
shl
cmp
lods
sbb
push
mov
sub
faddp
arpl
shrb
mov
js
ja
add
ljmp
ja
cli
and
cwtl
sub
and
dec
add
test
mov
mov
fmuls
push
mov
pop
add
jg
jo
loope
iret
inc
add
xor
push
test
cmovle
add
dec
jl
jmp
call
stc
push
call
push
arpl
enter
scas
jmp
dec
pusha
pop
aaa
xchg
ret
push
sbb
ja
int3
ss
sub
jecxz
stos
add
push
push
pop
rorb
daa
sbb
dec
fwait
pop
and
xchg
mov
insb
adc
scas
iret
push
adc
rclb
dec
adc
xor
sahf
xchg
orb
sbb
add
loop
jno
adc
add
dec
xchg
jno
or
dec
jae
sub
push
jnp
push
je
test
pop
pop
cmp
mov
add
insb
sub
das
cltd
or
fsubr
xchg
mov
pusha
cmpb
and
pop
fsubl
rorl
rolb
jecxz
cmp
pop
pop
adc
push
ja
mov
xlat
repnz
ret
fwait
and
dec
cwtl
add
mov
lahf
xchg
in
push
sbb
sub
inc
insl
cwtl
pop
movsl
jle
in
sub
jno
or
adc
jp
test
xor
fbld
push
sbb
sbb
imul
pop
add
push
ret
daa
imul
mov
jle
shrb
xchg
cmc
testl
mov
les
popa
test
xor
mov
aam
loopne
add
lock
xor
lret
shll
push
mov
mov
push
and
dec
js
dec
xor
lods
inc
mov
subb
out
addr16
ret
in
ret
inc
shrl
cmp
addb
sub
jb
dec
mov
jp
scas
or
add
int3
add
sbb
push
pop
jmp
icebp
xchg
outsl
icebp
push
or
xorb
daa
dec
adc
add
fsubl
inc
cmpsb
in
jae
or
adc
rorl
add
jae
sbb
pop
adcb
ljmp
inc
pop
mov
jne
bound
mov
int
lods
imul
mov
loopne
fimuls
sbb
ja
mov
and
add
sbb
ja
xchg
add
add
stc
push
outsl
jmp
push
add
push
ret
je
xchg
xor
push
in
int3
data16
or
jnp
sub
mov
mov
jecxz
fistpll
push
cmp
adc
inc
jg
push
add
sub
mov
push
push
cwtl
push
or
push
mov
inc
js
sub
adc
mov
push
jb
mov
jl
stos
pop
xor
int
add
push
ret
sub
dec
scas
xchg
push
and
sub
mov
fstl
pop
inc
jecxz
push
dec
les
or
mov
loope
popf
jp
dec
dec
pusha
stc
adc
popf
mov
mov
pop
insb
repz
fwait
insl
aad
shrl
jns
adc
push
mov
adc
cmc
xorb
xor
fcomi
scas
push
jp,pn
dec
ret
add
testl
scas
sbb
aaa
sbb
mov
sbb
das
jo
jmp
xchg
push
jmp
jb
cmp
sbb
gs
int3
xor
pushf
push
cmpb
add
mov
push
push
jbe
stos
inc
mov
dec
sub
adc
iret
xchg
pusha
insl
icebp
rclb
jmp
loopne
jns
push
mov
mov
dec
xchg
sbb
xor
sbb
lods
mov
jle
ret
inc
mov
hlt
mov
or
mov
movsb
pop
mov
dec
or
add
pop
inc
dec
adc
adc
xchg
or
insb
popf
sub
ret
pop
pop
sub
outsl
dec
cmp
sub
icebp
dec
ret
jg
out
or
movsl
push
mov
pop
push
pop
add
jbe
jmp
add
pop
mov
dec
pop
inc
iret
sbb
xchg
sahf
daa
pushf
mov
or
es
xor
add
jns
adc
fidivrl
add
mov
dec
adc
test
in
cli
incl
fisubs
add
or
adc
in
cmp
movsl
pop
mov
fidivrl
jl
or
push
mov
jnp
inc
das
ja
sbb
outsb
in
repnz
mov
loopne
outsb
inc
inc
push
arpl
adc
in
sarl
ja
iret
xchg
cmp
dec
jnp
fsubr
ret
jge
add
orl
xchg
xor
xchg
push
xchg
ds
setle
in
ja
or
jbe
or
inc
pop
and
and
iret
es
or
outsb
pop
mov
mov
movsb
stc
add
adc
ds
dec
es
rorb
scas
jg
loop
daa
das
popa
jecxz
sub
or
xor
test
dec
jae
xchg
mov
lahf
push
jl
mov
mov
dec
push
aam
aaa
loope
pop
mov
adc
pop
pop
ds
hlt
sbbb
xor
add
or
mov
scas
xchg
xchg
test
mov
jo
inc
or
loope
push
cwtl
mov
cmpl
inc
clc
jmp
jb
xor
mov
push
jo
out
fwait
mov
or
sbb
push
mov
adc
lock
fbstp
mov
and
push
cld
jns
and
push
mov
and
jmp
mov
dec
cli
repnz
daa
mov
add
jmp
lea
mov
adc
iret
loop
push
setp
lds
lret
scas
add
jnp
fsubs
jge
lahf
mov
pop
sahf
fisttps
rorl
xchg
ss
cld
push
je
mov
popa
xor
xor
loopne
mov
add
fmuls
mov
adc
add
das
lods
mov
dec
aaa
mov
mov
xor
pusha
jbe
push
nop
add
movsb
sub
and
insl
cwtl
jae
mov
js
roll
das
mov
cmp
cmp
leave
aaa
test
repz
idivl
or
jle
adc
or
andb
xchg
jl
lock
icebp
stc
dec
rorb
sub
xchg
push
dec
jmp
bndldx
pop
test
and
and
and
push
outsb
loope
test
add
dec
pop
sbb
jno
scas
sub
inc
subl
mov
push
or
mov
add
aam
pop
iret
pushf
es
pop
bound
inc
and
jne
inc
das
inc
out
bnd
push
fsubrp
outsb
mov
adc
int3
xor
sub
jmp
add
out
add
clc
dec
dec
shl
pop
inc
cs
gs
xchg
ljmp
inc
imul
mov
js
sbb
cmpsb
push
movsl
mov
and
pop
lods
popf
mov
insl
sbb
lds
mov
mov
xchg
lea
push
jle
loopne
movsl
cmp
push
mov
addr16
adcb
jge
jo
cwtl
mov
movsl
bound
xorl
pop
sub
jne
push
shrb
jbe
mov
push
dec
inc
push
sbb
sub
adc
adc
mov
imul
into
mov
in
or
aaa
subb
or
xchg
popa
aam
lcall
movsl
loopne
jl
ljmp
add
cmp
adc
add
or
xchg
push
stos
add
xchg
scas
enter
pop
fwait
jecxz
add
add
cmp
lahf
sbb
fcomp
sbb
pop
pop
adc
and
insl
dec
iret
and
jge
js
inc
shll
cltd
or
push
xchg
jb
jbe
inc
arpl
cmp
dec
lds
add
xor
fldt
push
pushf
and
xchg
lds
imul
ljmp
jnp
add
leave
dec
ret
fsubrs
hlt
aas
jbe
pop
mov
pop
xchg
mov
add
mov
fistl
jns
and
and
push
sub
pop
loope
cmp
icebp
add
in
ret
hlt
repz
add
push
pusha
imul
and
add
cmc
ljmp
inc
cld
daa
inc
inc
adc
add
cmpb
xchg
sub
fwait
xchg
xlat
inc
ret
ds
jmp
jecxz
fwait
mov
in
cmp
int3
or
call
mov
mov
push
xor
ja
jno
dec
cmp
sbb
push
mov
and
mov
mov
into
ret
mov
scas
icebp
xchg
mov
pop
in
into
rol
ljmp
pop
lods
jns
xchg
test
les
shll
cld
sub
pop
cmp
scas
into
ds
inc
adc
sub
push
mov
mov
inc
insb
fwait
push
cmpsb
test
jl
adc
stos
cmpsb
push
lds
sbb
adc
in
hlt
cwtl
cmpsb
outsb
push
adc
fimuls
movsl
sub
iret
sub
iret
mov
push
sbb
or
push
pop
and
sub
lret
repz
cmp
lods
inc
jmp
push
add
test
pop
add
dec
lods
dec
mov
test
stos
negb
sub
sbb
out
xor
lods
mov
int3
clc
pop
pop
test
xchg
jg
iret
aad
out
into
into
xlat
dec
pop
test
pop
in
data16
cmp
dec
sbb
mov
dec
mov
in
dec
sub
dec
mov
add
adc
cmp
add
jnp
mov
jecxz
mov
lret
xchg
xlat
push
aam
pusha
push
loope
addb
or
hlt
loopne
cs
sub
push
add
adc
sbb
add
int3
rcrl
push
push
data16
jno
push
bound
mov
in
add
or
add
sub
mov
xchg
mov
and
test
clc
add
dec
int3
xor
inc
dec
imul
cltd
mov
sub
sub
add
shl
outsb
pop
and
dec
pusha
ja
sub
mov
je
push
and
and
jle
andb
sub
xchg
sub
movsl
jo
jbe
mov
enter
mov
push
jnp
in
push
push
fdiv
je
hlt
imull
and
mov
mov
and
lods
rclb
lods
jne
mov
dec
loopne
jns
sti
inc
push
sub
and
sub
push
push
ret
stc
add
mov
adc
iret
cwtl
ds
movsb
jbe
pop
das
push
add
jg
sub
ret
sub
xorb
fldenv
shll
faddl
dec
sbb
sbbb
pop
push
pop
outsl
sub
add
and
and
andb
rcrb
lods
je
lods
js
adc
popa
pop
push
adc
and
cld
mov
scas
or
lea
mov
sbb
clc
mov
xor
popa
outsl
insb
mov
xchg
push
pop
outsb
push
sbb
inc
aad
out
lret
cmpsb
lcall
xchg
outsw
ret
sbb
sahf
aaa
mov
out
mov
lcall
sbb
push
jge
sbb
cmp
push
scas
push
dec
call
add
push
outsb
mov
scas
outsl
sbb
pop
add
cmp
push
xor
jo
pop
mov
sbb
pop
mov
divl
cmp
sub
popa
cmpsb
adc
mov
push
mov
jae
loop
mov
mov
fsubrl
push
je
mov
adc
sub
adc
cmp
inc
inc
sub
xchg
inc
insl
mov
push
daa
fs
pop
lcall
sub
push
pop
dec
mov
repz
bound
or
or
jmp
or
icebp
inc
leave
jl
pop
lock
loopne
icebp
jecxz
dec
fld
add
push
jne
mov
pop
dec
addr16
mov
jb
ja
xchg
sbb
test
mov
jns
dec
pop
jo
pop
mov
icebp
or
mov
sbb
cmp
sub
es
sbb
test
or
mov
scas
xchg
sbb
fs
bnd
xlat
shrb
shrl
sbb
sbb
fcomps
inc
stos
fisttps
push
clc
sbb
add
rcr
add
shlb
add
stos
stc
xchg
roll
ret
flds
mov
out
rolb
bound
push
mov
shlb
add
pusha
add
fildl
add
add
out
lahf
or
pop
cmp
cmp
pop
add
dec
add
sahf
add
or
or
add
test
or
inc
adcb
enter
push
enter
aam
add
pusha
mov
das
push
add
lahf
add
rclb
add
push
add
loopne
orb
cmp
adc
add
outsb
mov
sub
xchg
pop
pop
fadds
int
push
jns
fxch
aam
or
lods
push
iret
xchg
pop
das
xlat
push
push
push
loopne
lcall
push
cmpsl
fcoms
fdiv
add
cld
mov
or
aam
rolb
pop
lods
sbb
jmp
xchg
sbb
push
push
out
lods
jmp
adc
push
dec
ljmp
add
repnz
sbb
cmc
out
cmp
mov
mov
nop
rorb
mov
pushf
loopne
cmpb
adc
pop
sarb
sbb
into
cmc
add
arpl
subb
sbb
and
andb
jmp
sbb
or
sub
sub
stc
cld
add
or
add
loop
fstp
mov
xorb
out
fmuls
movsl
out
jae
in
test
dec
jbe
test
adcb
addb
call
jae
add
test
loope
inc
xor
push
add
scas
xchg
push
jle
inc
pop
or
ss
push
mov
pop
loope
and
pop
flds
or
out
in
clc
and
pop
adc
ret
inc
jo
dec
push
or
add
testl
inc
adc
lcall
fisubrs
pop
fdivp
dec
adc
and
ret
xorb
pop
in
push
repnz
add
imul
mov
inc
ss
arpl
fucom
sub
push
aas
shl
add
sub
xchg
add
jns
or
int3
jno,pn
jge
into
jecxz
sub
mov
rorl
mov
adc
in
sbb
jecxz
shl
sbb
in
add
data16
pop
scas
dec
jge
mov
ljmp
push
fs
sbb
push
xor
lret
inc
pop
ss
loope
fistpl
insb
in
int
call
jp
clc
jb
sbb
mov
sub
mov
jle
push
enter
xchg
sbb
lods
aam
and
pop
pop
sub
pop
xor
dec
mov
and
push
xor
push
in
mov
mov
shll
in
inc
addr16
cltd
ret
xor
xor
push
scas
xchg
sub
test
jo
jecxz
push
jmp
adc
ja
sub
mov
dec
sbb
xchg
lret
dec
int
xor
jo
addr16
lods
fistps
shlb
adc
cld
and
js
inc
and
imul
jbe
mov
gs
out
subps
jp
lods
jmp
push
push
cmp
or
xor
and
push
out
mov
mov
nop
or
add
cmpsl
pop
or
push
andb
insl
nop
call
cs
in
call
sbb
push
sub
mov
in
pusha
aas
ucomiss
imul
imul
push
xor
push
add
and
sbb
fs
push
imul
xchg
xlat
mov
mov
jo
adc
cmp
jl
pop
inc
or
lods
shlb
jecxz
add
adc
push
inc
arpl
jo
xor
push
ljmp
je
mov
cwtl
int
sbb
mov
imul
push
inc
cld
xor
adc
add
imul
mov
outsl
xor
fcomps
mov
inc
xor
adc
inc
sbb
push
fcmovnb
mov
and
sahf
aaa
or
test
and
cmp
lret
inc
mov
xchg
adc
add
pop
ret
js
add
mov
push
lods
lods
mov
adc
es
add
adc
hlt
imulb
pxor
jns
jbe
push
aaa
and
sbb
insb
fsubrs
xor
sub
gs
mov
xchg
inc
cmp
mov
push
das
cmpsl
adc
jbe
movl
imul
ficoms
sub
addr16
xchg
das
push
loopne
pusha
inc
or
inc
popf
pop
jecxz
mov
push
lock
cmp
or
push
or
fcoms
dec
pop
jno
daa
push
test
cmp
lods
enter
je
sbb
sahf
jp
adc
push
xor
lcall
je
sbb
mov
or
cmp
cmpsb
xor
out
repz
sub
imul
and
adc
mov
out
lea
inc
loop
sub
dec
sbb
out
js
jno
jp
dec
jmp
aaa
sbb
mov
ljmp
sbb
sub
call
or
pop
out
add
add
addr16
sbb
jp
xor
xor
in
push
jmp
or
add
out
lea
in
enter
sbb
mov
pop
jmp
and
call
loopne
rclb
pushf
dec
dec
enter
and
shlb
jg
pusha
lahf
js
dec
add
add
out
jmp
cmp
fisttpll
and
in
jbe
sbb
and
push
arpl
call
cmp
stc
add
adc
adc
adc
jno
inc
insl
sbb
shl
je
call
notl
sahf
insb
hlt
and
jne
lar
pop
or
scas
and
or
subl
out
and
sub
pop
data16
out
add
and
xor
xchg
int
push
das
add
sbb
sub
push
dec
xchg
and
sbbl
out
es
add
je
pusha
sub
dec
sub
stc
das
pop
nop
inc
enter
cmc
push
enter
or
in
loopne
xchg
cmp
inc
add
mov
add
loope
push
ja
sub
hlt
and
and
shlb
sub
addb
push
sbb
xor
adc
xchg
lcall
push
xor
inc
sub
xor
fsub
pop
adc
push
and
stc
cltd
add
inc
addl
cmp
loopne
adc
or
lock
jp
outsl
add
mov
popa
xor
aaa
pop
repz
inc
add
mov
inc
mov
sub
ficoms
insl
sub
enter
push
push
jo
aad
lods
inc
sub
lcall
pop
and
movsb
adc
in
mov
add
loopne
add
out
dec
pop
in
xor
fisttpll
mov
jecxz
push
pushf
or
data16
add
add
stos
jnp
scas
sub
cmpb
shl
add
or
lods
and
push
sub
push
sub
adc
dec
sbb
mov
das
xorb
fadds
lea
ret
and
mov
arpl
loopne
notl
enter
aas
and
mov
mov
add
adcb
add
clc
push
mov
out
pop
in
add
dec
addb
push
mov
sub
adc
filds
sbb
inc
hlt
pop
add
sbb
ds
enter
jecxz
int3
dec
in
jp
sbb
adc
xor
add
js
inc
aaa
mov
mov
inc
add
adc
sbb
dec
sub
add
insb
test
outsl
push
gs
nop
mov
repnz
aad
lock
xchg
adc
int
adc
iret
cltd
aas
bound
mov
push
and
mov
and
idivb
xchg
add
arpl
xlat
cmp
sub
fisubl
test
and
cmp
jo
adc
sbb
sub
cmp
lea
pop
pusha
jo
inc
ja
xchg
mov
push
movsb
xchg
jo
ret
cmp
jge
frstor
add
push
mov
cmp
and
shll
hlt
sub
fs
sub
mov
cmc
and
lods
xchg
loopne
mov
xchg
mov
popf
in
fsts
pop
pusha
inc
bound
pop
mov
movsb
mov
ljmp
pop
sbb
cmp
add
test
cmp
or
pop
push
add
iret
lcall
shll
fldl
add
cmp
aaa
and
ljmp
mov
int
in
jno
inc
add
xchg
xor
mov
and
and
mov
add
sbb
jo
leave
mov
ret
jno
repnz
nop
stc
dec
fisubs
push
aaa
mov
js
aaa
testb
jb
dec
outsb
cmp
push
and
cmp
adc
pop
add
xchg
jg
sub
lods
ds
push
add
jo
sbb
nop
lea
xchg
mov
gs
cmpsl
outsb
xchg
pushf
inc
jno
push
xor
insb
mov
call
push
xor
jns
inc
int3
xchg
push
or
jge
and
add
out
mov
mov
jb
xchg
ret
lea
jbe
cmp
mov
or
cld
fucomi
xchg
inc
movsb
jecxz
in
xchg
xor
loop
push
cmc
addr16
dec
jle
or
add
int3
mov
push
iret
mov
cmp
xchg
or
hlt
js
mov
xor
xchg
dec
out
arpl
cmc
sbbl
jbe
pop
xchg
adcl
leave
roll
pushf
movhps
lcall
cltd
lods
jp
shll
pop
inc
imul
push
push
shlb
sub
fs
add
ret
mov
jecxz
mov
adc
jno
hlt
mov
rol
sub
arpl
aam
mov
movsl
sbb
jbe
push
xchg
add
icebp
bound
push
div
outsb
shlb
xor
pusha
sti
cmp
xchg
sbb
dec
mov
out
jg
gs
sbb
push
sub
hlt
clc
mov
and
ja
shrl
and
cmpsl
jl
sbb
rol
inc
jl
push
mov
popl
adc
push
ja
pop
insb
cli
call
cmp
fwait
pop
push
fimuls
andnps
lret
lock
aam
pavgb
loopne
dec
shl
dec
xchg
loopne
cmp
inc
scas
ror
push
add
inc
xor
cmp
daa
cltd
push
into
test
shll
push
shrb
sub
add
sti
sub
loope
xlat
pop
out
mov
je
adcb
and
sub
inc
stc
mov
cmp
subl
mov
ljmp
jecxz
fadds
pusha
fwait
lea
fnstenv
popl
fucomp
es
push
or
mov
bound
mov
mov
cmp
mov
inc
loopne
push
dec
test
ja
and
inc
aas
mov
sahf
pop
dec
pop
sahf
jmp
popa
cmp
shll
inc
add
int
sbb
lcall
ss
fnstenv
movsl
test
add
mov
wrmsr
sbb
xchg
or
sbb
stc
popa
inc
cli
jl
fbstp
loopne
add
jg
test
mov
imulb
jb
adc
test
in
mov
adc
xchg
adc
cmp
subl
sub
divb
sbb
cmpsl
in
loope
js
pop
push
jge
cmpsl
inc
inc
jg
ss
je
mov
xor
sbb
cmc
popa
pusha
dec
arpl
and
xchg
push
push
add
movsb
repz
or
mov
test
fs
rorl
push
lods
jnp
mov
iret
xchg
push
cltd
gs
mov
test
xchg
aad
and
rolb
lods
dec
and
dec
sub
add
aaa
movsb
and
mov
inc
loopne
sbb
xchg
imul
sbb
mov
cmp
movsb
mov
jno
and
xchg
sbb
xchg
inc
mov
push
xchg
push
sbb
adc
add
call
mov
xchg
inc
es
stos
adc
sub
aam
nop
dec
ljmp
iret
dec
pop
cmp
hlt
popf
push
push
pushf
fisttpl
push
adc
iret
nop
out
adc
xorl
stos
add
add
add
pop
out
jnp
movsl
sub
lea
inc
jmp
sbb
push
push
cmp
mov
or
sbb
add
out
movsl
rcll
jp
sbb
clc
pop
arpl
js
into
add
pminsw
das
ljmp
pop
mov
xchg
push
pusha
pop
or
mov
pop
push
xchg
popf
or
sub
daa
and
mov
adc
outsl
pushf
and
xor
pop
pop
jo
out
popa
add
in
xchg
xchg
outsb
pop
cmp
mov
dec
adc
and
pop
xor
dec
imul
pop
xor
in
fwait
mov
clts
xor
outsl
pop
mov
sub
jle
xchg
ja
and
gs
jo
push
in
test
xor
vpminub
adc
jmp
loopne
xchg
hlt
mov
xor
insb
dec
adc
adc
xlat
vprotw
or
mov
adc
adcb
pop
rcrb
gs
ret
adcl
arpl
mov
shll
ret
or
add
dec
push
pop
pop
and
and
cmp
mov
and
xor
loope
cmp
lea
inc
and
push
jp
inc
xchg
push
jl
insl
rorb
sbb
stc
jnp
fstpt
xchg
sbb
ss
pop
imul
pop
pop
inc
outsb
inc
push
jns
or
xlat
dec
lcall
fildl
xchg
stos
test
sub
sub
fsub
xchg
pusha
fs
mov
lret
inc
nop
mov
mov
add
loope
loop
or
sub
mov
or
add
sbb
aad
pop
and
jno
rolb
adc
movsl
adc
pop
and
loopnew
hlt
fwait
push
lahf
shrb
test
jecxz
icebp
sbb
push
jbe
sbb
decb
or
sahf
cmp
arpl
icebp
push
add
imul
mov
jmp
mov
pusha
repz
push
test
subl
push
test
lods
xor
and
test
mov
push
sub
iret
push
lret
add
jmp
adc
adc
adc
loop
push
xor
mov
test
mov
ss
jbe
loopne
pop
outsl
bound
js
mov
jne
dec
inc
scas
add
push
push
fadds
popa
inc
push
push
or
cmp
jno
sub
mov
into
ljmp
sbb
dec
call
sbb
in
iret
jb
les
and
jp
sub
mov
mov
dec
inc
ret
ret
and
ret
or
pop
fcoml
pop
jl
stos
add
sbb
add
pop
or
movsb
dec
imul
test
cmpb
lds
sub
and
mov
adc
adc
jecxz
pop
sub
or
push
addb
add
dec
push
test
sbb
add
rolb
and
push
xchg
jne
lret
fwait
xchg
fiaddl
and
pop
dec
lcall
leave
testl
pop
leave
jmp
test
aad
rol
pop
mov
pop
or
mov
or
and
sub
and
add
xlat
jne
out
sub
mov
out
push
or
lods
pop
in
lods
pop
and
add
jmp
jo
call
outsl
popf
mov
je
xor
sub
adc
adcb
mov
dec
shl
addr16
push
sub
and
roll
rcl
jp
rolb
ja
or
roll
insb
mov
mov
call
shrl
imul
xchg
mov
pop
cmp
pop
ja
xchg
cmc
xchg
rolb
test
enter
inc
sti
adcb
mov
sub
fs
rcll
loope
stos
mov
jae
dec
sar
pop
xor
clc
add
mov
jnp
sub
or
int
push
shlb
mov
xor
jle
mov
das
loope
movsb
adc
add
add
and
fstps
rcrl
movsl
bound
mov
test
jnp
mov
fistpl
int3
sahf
xchg
add
add
fwait
inc
mov
out
jg
sbb
lcall
push
aam
cmp
in
jl
push
inc
inc
fldenv
inc
shlb
or
pop
stos
ret
mov
cmp
sbb
add
popf
sub
pop
xchg
out
xchg
mov
mov
push
sbb
insl
lds
mov
push
or
xor
ret
in
popa
sbb
add
popa
pop
xor
cmp
adc
or
push
inc
jp
lds
dec
and
aam
add
stc
in
imul
xorb
shrl
push
dec
lret
test
arpl
inc
test
mov
cmc
jbe
cli
enter
mov
push
popf
repz
inc
adc
arpl
xor
xor
repz
mov
and
js
mov
mov
add
out
rorl
out
push
dec
xchg
inc
lcall
adc
xorl
stos
aaa
test
enter
pop
inc
push
je
pop
in
call
add
xchg
cmp
fstps
xlat
js
dec
or
les
paddd
xor
nop
push
int
xorb
out
insl
push
sbb
pop
add
pop
jle
test
push
push
test
shll
and
lds
sub
insl
inc
fucomp
push
inc
loope
cmc
fwait
movsl
rolb
scas
inc
sbb
and
sub
xchg
inc
inc
mov
pop
aam
or
add
orb
xor
add
lods
fs
adc
mov
add
fimuls
xor
lods
add
repz
pop
mov
inc
jp
cli
fs
push
add
inc
push
dec
daa
enter
mov
test
testb
aaa
es
adc
cwtl
xor
repnz
mov
lods
fists
ljmp
lods
cmpsl
lahf
inc
sub
and
xor
push
jle
pop
inc
dec
xor
inc
jmp
rcll
fistl
jle
add
and
push
sbb
push
mov
xchg
inc
inc
xchg
imul
mov
repnz
mov
cwtl
aam
aad
push
or
push
xchg
icebp
pusha
nop
dec
and
out
or
mov
mov
lock
movsb
loope
jp
jmp
js
sub
jge
cmp
jmp
cltd
adc
or
pusha
and
ror
adcl
push
or
fmul
das
lock
inc
andl
ret
pop
xchg
adc
mov
fwait
add
jne
lds
sbb
jbe
push
into
mov
push
femms
adc
std
adc
sub
fiadds
in
lods
push
rcrb
or
jecxz,pn
cmp
adc
push
in
dec
inc
push
mov
mov
and
shlb
fsubs
sbb
jne
sbb
inc
adc
mov
inc
cmp
outsl
dec
mov
test
sbb
cmp
cli
dec
or
lret
rorl
rclb
movsb
sbb
adc
mov
test
adc
sub
sbb
xor
dec
insb
pusha
aad
push
sbb
out
fcoms
dec
je
subl
sbb
subb
and
inc
and
jl
in
sbb
or
push
xchg
pusha
sub
xlat
aaa
icebp
xchg
push
js
mov
fmuls
pop
add
fisubrl
dec
ret
adc
jnp
pushf
sub
jb
push
subl
repz
mov
loope
out
pusha
gs
add
aad
cs
jl
pop
mov
mov
dec
int3
aam
es
out
nop
dec
jo
ftst
in
pop
ret
pop
sbb
shlb
loope
push
or
cmp
push
in
mov
lods
fs
loopne
or
push
not
rclb
adc
jg
rcll
insb
test
inc
test
pop
ret
dec
dec
cmc
sahf
jae
mov
adc
jl
int
mov
hlt
mov
movsb
fistps
and
dec
or
jno
adc
add
add
add
xchg
adcb
add
test
and
push
lock
add
push
stos
dec
mov
adc
xchg
data16
ret
xchg
movb
pushf
rolb
adc
sub
jbe
add
add
sub
dec
adc
sub
int3
stc
cmc
dec
sbb
add
mov
das
stos
xor
and
sahf
or
xor
or
jl
test
sub
pop
sbb
jge
stos
push
roll
pop
xchg
call
xchg
cli
mov
lock
ret
cwtl
rcrb
push
insb
xchg
and
or
cmpsb
call
sub
sub
sbb
sbb
dec
fcom
loopne
xorb
cmp
addr16
inc
into
pop
and
sub
push
add
ret
out
pop
mov
jle
pop
and
fisubrs
cmp
adc
mov
dec
outsl
ljmp
cs
fs
imul
sbb
adc
push
xor
cmpsb
pop
sbb
testl
xor
xor
inc
out
mov
into
inc
sub
push
addr16
pop
jo
lea
jp
sub
ja
out
push
xor
push
pop
add
inc
ret
in
pusha
push
sub
dec
fstp
cmc
nop
or
shrl
and
ljmp
or
inc
xlat
jb
add
jl
sbb
inc
and
sbb
notb
addr16
mov
test
enter
dec
enter
jo
or
hlt
clc
add
and
scas
popa
das
cmpsb
mov
mov
je
cmp
adc
inc
pop
adc
gs
add
jbe
mov
or
push
xor
cs
pop
dec
aaa
rol
push
mov
add
xor
cmp
xchg
mov
mov
lock
aas
inc
in
orl
test
mov
xchg
sbb
or
jp
sbb
xor
push
cmc
pop
leave
pushf
arpl
cmp
les
pop
imul
les
mov
add
xchg
add
jae
popl
test
inc
push
mov
push
push
lock
icebp
fs
lea
jle
push
movsb
sahf
or
sbb
add
insl
lods
push
lock
xchg
mov
inc
mov
mov
add
inc
lret
dec
pop
jo
cltd
loopne
iret
insb
stos
outsb
orl
jg
fdiv
adc
and
adc
jmp
or
jne
mov
sbb
stc
adc
lods
subl
bound
mov
daa
xchg
pop
les
xchg
jp
jp
jno
pop
das
ret
ljmp
insb
ror
int
fsubs
mov
xchg
ficoms
enter
pop
inc
mov
aad
or
xor
mov
push
sub
test
jbe
xchg
sub
pop
mov
xchg
inc
mov
xchg
mov
cmpsb
lahf
fildl
push
nop
sti
lret
aas
leave
mov
sarl
sub
jp
rorl
cmp
add
adc
and
mov
enter
inc
pop
mov
adc
movsl
xchg
shlb
mov
pop
pextrw
adc
call
aam
or
out
daa
loope
lock
out
ljmp
rcr
dec
loopne
adc
aaa
mov
mov
out
mov
shrb
mov
or
dec
sbb
movsb
inc
arpl
inc
mull
scas
rcrl
inc
imul
jecxz
aaa
addr16
shrl
add
push
clc
xchg
dec
jo
sarb
icebp
mov
sub
push
das
jecxz
add
cmpsb
inc
push
cmpl
cmpsb
into
push
push
sti
push
push
push
inc
mov
outsl
mov
xor
aam
push
add
push
fcomi
xchg
test
bound
movsl
fs
popa
jl
push
shrb
stos
es
enter
mov
loopne
fsubl
ss
and
add
ljmp
lret
fdivp
mov
and
xchg
out
inc
loopne
sahf
inc
sbb
cmp
sbb
sbb
sbb
sub
sbb
mov
sbb
jle
test
enter
lahf
add
and
adc
sbb
add
jle
xor
push
js
inc
and
sarb
loope
mov
outsb
ret
jns
xor
rcrl
fstpt
mov
loopne
push
clc
add
imul
shrb
jae
adc
leave
and
lods
push
gs
and
add
daa
int
push
and
nop
iret
push
inc
roll
mov
inc
or
mov
iret
sbb
or
loope
cmp
loopne
jo
cmp
jmp
ss
push
xchg
inc
out
pop
mov
loop
mov
xchg
push
mov
insb
xchg
xchg
es
lock
in
shr
adc
ja
mov
add
mov
rcll
inc
cmpsl
jo
rcrb
xor
sbb
xor
pop
sbbb
xchg
inc
or
dec
jb
or
sbb
or
and
mov
push
stos
xor
xor
insb
addr16
out
add
loop
and
inc
and
test
jbe
dec
jo
cmpsl
pop
xchg
dec
sbb
movsb
lret
push
cmp
cmp
ja
sub
outsl
loop
or
mov
inc
mov
push
push
pop
xor
cmp
push
scas
jbe
jno
or
inc
or
popf
or
mov
out
in
adc
test
dec
push
inc
in
mov
cmp
ds
lcall
xchg
push
pop
sub
ss
and
inc
inc
add
outsl
lock
clc
inc
jne
movsb
push
cmp
jne
pop
xor
sarl
add
push
popa
dec
sub
push
popw
stos
pop
cli
dec
imul
push
je
pop
jne
adc
addr16
pop
sbb
xchg
jb
cmp
sbb
xchg
adc
lds
into
fs
stos
notl
dec
mov
pop
outsb
sub
loopnew
dec
cmp
stc
adc
mov
xor
sub
mov
adc
push
dec
and
cmc
mov
inc
loop
push
adc
and
gs
jo
popa
iret
xchg
push
scas
or
mov
stos
inc
fisubl
jo
mov
lods
lds
jp
loop
and
pop
xchg
cmp
jno
xchg
ss
push
adc
notl
jns
and
stos
enter
outsl
cli
int3
and
mov
fcmovne
sbb
lock
xlat
cmpsb
add
add
push
rolb
scas
push
cmp
lret
xchg
push
mov
xchg
leave
mov
cmp
push
inc
lods
shrb
and
in
xor
xchg
lcall
or
dec
inc
push
jg
rolb
mov
push
pop
inc
pop
dec
xchg
mov
xor
inc
scas
inc
sbb
cmp
add
dec
fsubs
xor
jo
mov
xchg
inc
sbb
dec
out
fs
adc
add
push
inc
mov
xchg
lcall
cmpsl
test
mov
or
ret
fsubr
lods
imul
or
dec
xchg
cmpsl
mov
add
nop
and
movsl
aam
cmp
add
pop
add
adc
xchg
inc
aad
jno
add
inc
enter
adc
movsb
inc
and
xor
push
dec
out
adc
sbb
or
push
les
jne
dec
shlb
sti
popf
or
fisttpll
jb
nop
ffree
loope
daa
jne
pushf
out
das
loope
out
jnp
jne
xchg
jne
clc
jne
cmp
out
mov
scas
daa
je
sbb
loopne
and
push
fimull
mov
sti
jl
test
xchg
scas
test
popa
fdiv
xchg
ja
int
call
addb
mov
test
add
mov
mov
and
jecxz
scas
es
call
jmp
cmp
loope
lahf
push
lods
xchg
dec
sbb
lret
divl
cmpb
xchg
pop
cmp
rcrb
out
mov
or
and
sub
out
dec
cmp
aam
add
fisubrl
xchg
pop
push
jo
outsl
inc
insb
mov
out
mov
sbb
mov
inc
xor
jmp
shlb
jle
out
add
gs
and
add
inc
hlt
aam
jnp
dec
and
xchg
mov
and
jae
test
dec
push
sbb
add
adc
and
xchg
outsb
movsl
dec
mov
inc
xchg
dec
sub
clc
rorb
inc
ja
imulb
add
andb
in
rclb
jmp
cmpl
sub
mov
cs
rorl
push
adc
fdivl
insb
es
out
lock
out
push
push
lret
daa
add
loope
in
cmpsb
pop
add
fnstcw
xchg
and
rcll
push
adc
cmp
xchg
mov
js
cli
dec
mov
or
popa
push
or
into
clc
push
adc
lods
int3
popf
movsl
negb
push
jb
sbb
cmp
test
faddp
push
gs
popf
imul
cmp
sub
and
push
push
mov
add
pop
push
scas
jns
xchg
test
xchg
sub
lret
pop
es
and
add
lret
clc
mov
jge
sbb
orl
mov
nop
mov
push
outsl
push
test
mov
mov
adc
gs
loopne
cmp
pop
inc
sar
push
pop
pop
mov
push
pop
adc
cltd
ret
push
std
or
imul
adc
add
xorb
cmp
loopne
outsl
or
push
iret
fimull
sub
test
ret
cli
mov
jbe
dec
add
sub
clc
push
or
xorb
popa
sbb
fstpl
adc
pop
ljmp
lret
and
add
cmp
leave
and
lods
mov
std
fs
ffreep
or
movl
jge
lcall
lea
or
cmp
test
mov
pop
insl
add
movsl
and
push
test
cltd
push
sbb
filds
loop
jo
mov
in
xchg
cmp
stos
adc
lods
and
fcmovnb
cmp
shr
sbb
repnz
dec
pop
add
and
pusha
loop
andb
xchg
cmpsl
sbb
jnp
push
insl
repnz
repnz
or
sub
mov
push
pop
je
push
shlb
xchg
stos
mov
loope
jmp
sahf
or
lahf
jo
not
fisubrl
pushf
lret
lret
xchg
dec
cs
sub
ds
push
sub
sub
mov
das
dec
mov
push
imul
loope
dec
sbb
dec
pop
jle
add
inc
icebp
adc
and
jle
je
push
mov
mov
in
shl
inc
aad
and
mov
out
jno
int3
add
lock
mov
adcb
push
popa
pop
dec
mov
jp
mov
dec
repz
cmpl
rolb
inc
sbb
lea
adc
fdivs
sub
cs
inc
outsb
out
rolb
pop
scas
pop
ja
and
mov
sbb
add
or
xor
cmp
cmp
clc
pop
jle
sbb
testl
or
push
and
push
xor
js
iret
ljmp
or
sti
sub
mov
insl
std
sub
sahf
xchg
sub
aaa
add
pushf
pop
mov
js
out
and
cmp
fdivrl
daa
imul
push
sbb
cmc
jbe
out
cmpsb
ds
cltd
dec
aaa
inc
xor
push
dec
cmp
dec
push
pop
add
push
dec
pusha
movsb
adc
sub
cmpsb
insb
stc
mov
ds
sbb
xchg
and
iret
movsb
mov
xor
addr16
outsb
mov
sub
lock
mov
inc
pop
cwtl
aad
lods
movlps
jg
icebp
add
add
mov
scas
popf
mov
jp
push
cltd
dec
inc
das
orb
test
mov
mov
mov
mov
mov
lods
fmulp
xchg
mov
rorl
pop
xor
push
sub
fcoms
jno
js
imul
stos
add
ret
aaa
add
ja
xor
dec
jae
add
jl
mov
xchg
sub
dec
mov
out
rorb
pop
cmp
xchg
jmp
sbb
aam
xor
pop
sub
pop
xor
pop
jno
and
mov
lods
add
cli
cs
sbb
stos
jle
loopne
xor
sub
sbb
clc
xchg
sbb
pusha
and
sbbl
add
sbb
test
rolb
sbb
mov
sbb
add
or
pop
xchg
ret
outsb
adc
sub
sbbb
out
sti
add
push
or
xchg
je
push
add
push
aaa
jecxz
push
lea
iret
ret
inc
aam
sbb
inc
sbb
test
mov
addr16
out
xchg
jb
jnp
lock
cltd
and
popf
lea
mov
out
pusha
mov
aaa
add
xchg
sahf
cmovge
jnp
jne
shll
sub
mov
push
inc
jecxz
lods
adc
xchg
mov
xchg
iret
pop
or
pop
lea
call
jge
sbbb
insl
adc
inc
in
jo
push
outsl
pop
rorl
inc
pop
or
fadd
push
ret
je
and
push
pop
jns
ficoms
stc
add
add
and
and
sahf
test
push
rcl
xchg
pop
inc
cmpsb
pop
jp
mov
stos
mov
and
mov
sar
xchg
inc
imul
jae
xchg
js
xor
das
out
ret
inc
cmp
add
idivb
movsl
je
scas
hlt
into
sub
aaa
sbb
add
push
jns
cmp
mov
xchg
dec
sbb
xor
dec
or
mov
jecxz
xor
xchg
dec
iret
xor
popf
cmovnp
sub
push
push
test
mov
mov
iret
adc
xor
dec
loop
int3
lret
int3
les
dec
or
xor
xor
sarl
sub
iret
cmpsb
mov
jl
xor
cltd
cmp
xchg
adc
in
and
int
ja
inc
inc
inc
sub
jl
cmpsb
xor
jb
jno
js
inc
pop
push
mov
inc
and
jecxz
dec
inc
test
and
xor
inc
cmp
pop
pop
and
ja
jbe
push
pop
es
mov
sbb
cmp
sbb
in
imul
shlb
lea
jp
adc
es
or
call
sub
fwait
imul
outsl
stos
adc
xchg
jnp
mov
cmp
or
jecxz
daa
and
and
jae
pop
sbb
movsl
pop
mov
inc
push
orb
dec
inc
addb
push
jp
dec
pop
jb
int3
jne
je
lret
gs
sbb
jb
inc
or
and
push
jecxz
xor
xor
jno
fs
orl
dec
js
and
xchg
imul
loope
pop
cmp
stos
cmove
and
outsl
pop
imul
les
mov
shrb
ret
imul
daa
sub
pop
add
fwait
movl
addr16
ja
fs
lock
or
cmp
mov
xor
mov
inc
arpl
outsb
mov
mov
sub
dec
pop
or
ret
sbb
loop
xor
sub
loop
test
dec
out
arpl
divl
and
int3
add
mov
mov
es
loope
cmp
out
aas
add
popa
mov
lcall
js
cli
add
leave
cmp
arpl
lods
or
add
sbb
mov
test
cltd
test
sub
xchg
sahf
sbb
or
adc
cmp
jo
nop
sub
cmp
inc
ljmp
cwtl
sbb
push
cmp
aad
jae
cmpsl
movsb
sub
bound
test
mov
in
mov
jmp
mov
gs
clc
pop
fidivs
loopne
dec
xor
loope
push
mov
inc
add
ror
imul
sub
out
jg
adc
addl
push
repnz
and
push
and
inc
cld
imul
std
push
xorb
into
pop
loopne
insb
mov
dec
inc
pop
inc
pusha
and
cmpsb
adc
stos
xchg
iret
cltd
and
mov
adc
cmp
es
pop
sbb
push
imul
mov
addr16
out
stos
jno
sarb
mov
adc
lret
loop
cmp
jo
sub
dec
add
test
shrb
call
adcl
test
les
aas
pop
popf
dec
pop
pop
ja
adc
loope
cmp
mov
test
dec
mov
mov
push
fidivrl
dec
and
mov
mov
adc
push
adc
jp
pop
sub
push
cwtl
popa
or
insl
pop
sbb
pop
xlat
xor
xor
call
repz
gs
mov
pop
xorb
xchg
xor
daa
fists
shlb
pinsrw
sbb
enter
mov
repnz
dec
rorl
imul
call
rolb
inc
cmp
mov
shl
or
inc
out
ret
aaa
pop
clc
sub
addr16
cmpsl
sub
and
adc
cltd
dec
pushf
xchg
rclb
mov
movsb
lods
loopne
mov
pop
mov
and
xchg
sbb
mov
inc
xor
sbb
daa
add
and
sub
test
pop
iret
sbb
xchg
int3
adc
insb
jecxz
add
xchg
or
and
pop
add
leave
mov
inc
call
xchg
shll
icebp
inc
mov
cmpl
outsl
xchg
mov
inc
imull
and
or
inc
cmpsb
inc
pusha
andb
xor
addr16
les
add
std
aad
mov
jmp
out
add
xorl
imul
je
or
sbb
push
or
lods
lock
and
cmc
sub
mov
lods
mov
dec
pop
shld
addr16
push
mov
sarl
std
int3
adc
cld
out
adc
arpl
lahf
sub
stc
and
mov
inc
sar
imul
movb
add
jmp
popa
mov
lahf
mov
les
rcll
scas
push
cmc
sub
jbe
arpl
shlb
iret
and
inc
sub
imul
loop
push
add
dec
iret
push
fs
push
sub
adc
and
das
xchg
or
daa
mov
rolb
jnp
jno
mov
js
inc
cmp
jno
add
daa
out
or
orb
jno
test
into
and
pop
jo
inc
cmp
fwait
adc
aam
cmp
das
jl
and
loop
mov
mov
xlat
sbb
shll
stos
dec
sbb
data16
aaa
mov
mov
outsb
std
xor
dec
ss
cli
mov
sbb
dec
add
bnd
mov
out
test
shld
mov
stc
cmp
add
push
jne
sbb
shl
and
notb
cmpsl
cmc
sbb
js
out
ficomps
lock
js
inc
jp
mov
and
pop
sbb
out
mov
lods
xchg
sbb
cwtl
outsb
xor
pop
inc
loope
and
test
ljmp
in
mov
lock
les
mov
mov
dec
add
roll
pop
movsl
adc
or
jl
add
add
cmp
loopne
pop
sub
movsb
push
pop
pop
xlat
xor
jns
and
push
mov
fwait
andb
hlt
add
test
add
jmp
dec
decl
insb
mov
mull
decl
add
loope
insl
sbb
cwtl
mov
push
adc
inc
ljmp
sbb
push
call
shlb
inc
lcall
push
add
popa
sarb
ss
xchg
mov
sbb
imul
pop
jecxz
jecxz
and
ret
out
adc
int3
movsb
pop
into
push
sbb
repnz
cmp
mov
mov
and
xlat
xchg
push
jo
insb
mov
sbbb
push
sub
or
and
dec
bnd
jg
or
mov
ret
out
mov
subl
inc
add
sub
dec
inc
sbb
or
fadds
mov
mov
push
jp
xchg
add
inc
in
ss
mov
cmpsl
push
mov
jecxz
int
cmp
push
pop
or
movsb
or
push
or
ret
call
inc
push
add
popl
loopne
adc
cmp
cmp
dec
or
js
xor
jbe
test
mov
inc
jns
mov
inc
xchg
cmpsb
mov
sbb
cmc
loope
data16
or
xchg
js
add
or
push
pop
xor
js
cwtl
aaa
push
lret
jle
call
xchg
push
ret
inc
or
fidivs
adc
in
lods
pop
es
or
mov
gs
sbb
xchg
in
test
sbb
jno
pop
stos
hlt
ret
add
cmpsb
test
push
popa
fcoms
mov
les
repz
pusha
aad
xor
lcall
pop
bound
stos
das
pop
lds
push
or
ljmp
rorb
fisubrs
test
inc
imul
fldcw
lods
ja
movsl
ficoms
outsl
mov
wbinvd
adc
fcoms
dec
adc
ret
ja
push
inc
int
add
iret
jecxz
push
mov
mov
mov
aam
aam
adc
fdivrp
mov
scas
in
pop
add
push
jns
adc
push
shll
icebp
xor
sub
inc
jb
cs
out
xor
mov
or
arpl
mov
xchg
inc
flds
testl
mov
jmp
push
xorb
test
stc
iret
fbld
pop
shrb
mov
and
mov
push
shrb
sub
sbb
push
jmp
movb
fnsave
pushf
xor
adc
orl
mov
cld
inc
mov
mov
inc
repnz
pop
aad
cmp
sub
jb
shrb
imul
and
ljmp
sub
mov
mov
jmp
push
or
or
jne
inc
dec
or
push
js
sbb
xchg
insb
and
pop
fldt
mov
mov
enter
push
sbb
jno
xor
outsb
test
int
imul
xor
orb
enter
jp
lea
test
aam
or
adc
subb
movl
mov
xchg
cmovbe
sub
cmp
pop
cmp
popa
cmp
es
addl
je
stc
xor
movsl
lahf
jmp
sub
push
jo
and
xchg
sbb
cmpsl
push
xlat
inc
cmp
jo
adc
add
or
inc
jo
adcl
loope
jo
cld
xor
or
xorl
push
xchg
leave
push
filds
dec
mov
daa
adc
clc
jmp
clc
pushf
inc
fdivrs
add
cmpsb
adc
fsts
push
dec
les
fisttpll
insl
inc
xchg
adc
xchg
inc
mov
enter
in
xchg
mov
dec
xor
add
jle
dec
pop
xorl
add
es
and
pop
rcrb
push
pusha
add
sbb
adc
push
cmc
jmp
jnp
dec
das
jg
in
pop
adc
lret
pop
xchg
push
and
scas
aas
mov
cmc
cld
sub
add
jp
jl
cld
sbb
add
jo
add
sbb
sbb
add
divb
xchg
xor
add
popl
cmpsl
adc
dec
inc
push
jl
in
aaa
cmp
dec
pop
push
mov
mov
jp
xchg
sub
push
mov
shl
xor
das
rcl
adc
popf
mov
xor
out
inc
pop
mov
add
sbb
mov
cmc
jbe
sub
xchg
xorl
mov
cmp
jmp
and
incl
aaa
adc
test
sbb
shll
and
xor
nop
mov
push
pop
addr16
or
pop
add
push
xor
mov
gs
xchg
inc
dec
aaa
cmp
int
mov
jge
ja
jo
sub
idivb
push
iret
mov
push
sahf
inc
fnclex
arpl
lods
sub
mov
rclb
scas
push
out
stos
addr16
add
push
sbb
xor
mov
or
adc
test
nop
lods
out
cmp
loopne
movsb
ret
sub
iret
xchg
push
rcrb
dec
scas
dec
push
inc
and
mov
xor
in
xorl
aaa
xlat
sbb
cmp
cmc
pop
rcrb
faddl
movsl
out
pushf
cmp
aad
mov
pop
and
lea
iret
adc
adc
rclb
adc
lock
flds
jbe
ja
or
lock
outsl
sbb
repz
sub
out
dec
push
jne
mov
add
mov
mov
or
dec
dec
hlt
mov
iret
inc
and
push
add
mov
dec
mov
lods
pushf
shlb
push
jo
jmp
xor
dec
sbb
fdivs
shlb
sbb
into
xchg
hlt
or
mov
lahf
fsubrs
or
faddl
inc
or
inc
mov
jns
call
aas
add
hlt
pop
popa
aaa
mov
bound
mov
lea
mov
shrb
pop
mov
xlat
fyl2xp1
add
mov
rclb
xor
push
add
test
mov
test
sbb
inc
mov
fnstcw
pop
sarb
jo
sub
stos
cmpsb
sbb
loope
push
xchg
mov
jp
call
nop
jl,pn
dec
enter
faddl
stos
mov
xchg
lret
lret
mov
cmpsl
pop
add
mov
loope
popf
cmc
and
add
scas
push
adc
pop
sub
leave
sub
add
test
dec
push
xchg
adc
xchg
jmp
sub
push
or
shlb
aaa
stos
rcll
pop
add
mov
push
jne
push
cmp
pop
int
sub
imul
xorb
test
iret
inc
xor
dec
rorl
jnp
daa
mov
mov
imul
mov
insl
cmpsl
testb
les
test
lret
test
outsl
fisubl
loop
push
xchg
pop
dec
lds
shlb
sbb
jno
or
fisttps
and
and
pop
enter
add
inc
inc
inc
dec
xchg
and
cltd
lds
sbb
and
imul
mov
in
gs
sub
mov
xor
jo
pusha
arpl
dec
mov
jge
mov
xchg
dec
push
sarl
cmp
inc
sub
lds
push
ret
xor
int
adc
xchg
add
and
sub
mov
test
imul
leave
push
jo
mov
cmp
imul
pop
loopne
adc
outsb
daa
fnstcw
sbb
sahf
rol
lahf
outsl
icebp
insb
faddl
test
cmp
inc
or
jae
rcl
lea
cmp
mov
mov
pop
jno
add
sub
xchg
push
sbb
cmp
pop
or
mov
mov
inc
mov
outsl
mov
movsl
add
cmpsl
adcb
pushf
les
sub
push
test
sbb
icebp
or
loopne
test
repnz
inc
ljmp
push
fsts
dec
ljmp
xor
mov
mov
add
int
mov
adc
loope
sbb
sub
fwait
dec
and
dec
inc
push
mov
or
jp
scas
inc
sub
cmp
mov
pop
pop
adc
fs
adcl
addr16
ret
adc
xor
fsub
pop
andl
mov
out
js
out
pusha
loope
loope
lods
aam
icebp
add
xchg
pusha
sub
ss
insl
mov
push
imul
add
daa
aam
xchg
add
aas
or
and
mov
xlat
mov
icebp
ficoml
in
inc
js
gs
cmp
sbb
arpl
lods
fwait
in
mov
call
gs
insl
xchg
cli
jge
pop
inc
jmp
loop
insb
clc
push
add
mov
jg
enter
jnp
lea
sbb
addb
dec
dec
sub
fisubrl
sbb
rcrl
nop
test
imul
xor
lds
inc
lcall
adc
add
bound
xchg
add
in
xor
or
lret
push
and
jmp
div
or
and
xchg
cmp
mov
js
aaa
outsb
inc
lock
fidivl
inc
push
aas
es
unpcklps
stc
mov
sbb
insb
out
nop
fs
add
add
add
stos
shll
add
loop
aaa
je
test
add
hlt
push
jnp
adc
fadds
call
add
mov
lea
adcb
jae
test
dec
adc
pop
mov
add
xchg
push
movsl
push
mov
mov
jp
lods
repz
mov
sarb
js
test
movsl
arpl
mov
xchg
fdiv
adc
sub
je
xor
dec
xor
cs
cmc
adc
shll
aaa
pop
and
pop
mov
out
out
test
xor
loop
xor
jle
pop
add
inc
pop
xor
cmp
movsb
cmp
not
inc
adc
pop
or
pop
add
mov
ss
int3
mov
fcomps
fcomps
popf
imul
je
push
add
xchg
test
pop
adc
out
push
mov
roll
add
add
sarl
pop
loopne
inc
loopne
or
ja
and
jp
cwtl
insl
push
out
ss
das
push
inc
push
add
dec
add
and
int3
ljmp
jae
xor
adc
lods
pop
pshufw
les
sub
movsb
xchg
jecxz
ffree
push
sbb
pop
dec
sub
popa
fistpl
insb
mov
sub
aaa
pusha
cwtl
shrl
nop
add
and
push
sub
pop
and
dec
jl
add
dec
jae
add
mov
pop
pop
sub
push
pop
jl
sbb
xor
enter
in
aad
loop
adc
push
jae
sbb
fiadds
add
pop
cmp
inc
adc
ret
mov
lods
mov
mov
inc
loope
call
mov
mov
sarb
jne
loop
or
shl
pop
orb
mov
outsb
sbbb
es
sub
add
dec
fsubs
mov
push
jg
sub
pusha
mov
xor
je
cwtl
gs
and
out
ss
or
outsb
lods
ss
shrb
stos
jno
mov
mov
loopne
and
mov
test
fcompl
xchg
pushf
and
mov
xor
loop
push
adc
and
and
addr16
mov
mov
and
or
push
aas
inc
imul
test
lods
mov
daa
dec
cmp
mov
push
dec
ljmp
jo
cmpsl
lock
pop
jnp
in
push
addb
pop
movsb
pop
adc
sub
or
insb
test
xchg
dec
cmpsl
sub
add
test
pop
loopne
lret
movsb
rsm
xchg
bound
mov
lret
test
aas
adc
iret
cmpsb
test
rcrl
subl
test
ljmp
push
jne
sbb
enter
js
inc
outsb
pusha
push
sbb
lods
idivl
mov
jmp
sarl
cs
ret
push
adc
pusha
rolb
fs
sbb
sub
sbbb
adc
sub
repz
inc
sub
cmpsl
aas
fxch
movsb
test
int3
add
push
jp
movsb
xchg
push
push
aaa
test
push
loop
mov
push
subl
adc
scas
cmp
add
loope
adc
sbb
jp
cltd
loope
stos
jecxz
imulb
jg
add
dec
das
lods
add
das
push
xor
mov
add
sbb
in
mov
or
mov
xchg
out
adc
jg
add
jle
jno
jno
shrl
int3
add
je
lret
fstpt
pusha
in
xchg
movb
push
addr16
push
lods
add
add
mov
pop
sbb
aam
test
adc
fidivl
dec
sbb
mov
enter
push
movsb
or
adc
push
mov
cmpsb
lahf
pusha
inc
cmp
fdivrp
cmp
adc
mov
addr16
lahf
cmp
loop
cmp
mov
popf
nop
push
inc
clc
push
push
cmp
out
std
jo
cmp
sub
push
pop
adc
imul
sub
mov
outsb
push
ret
test
cmp
mov
bound
add
loope
decl
inc
pop
ret
mov
sub
es
add
sub
pop
scas
sar
into
inc
jo
sbb
xchg
xchg
sub
test
mov
movsl
pop
les
jns
xchg
imul
adc
inc
test
push
in
mov
dec
dec
cwtl
daa
pushf
inc
jno
push
jecxz
mov
sbb
cmpsb
fdivrs
out
push
sub
fiadds
fistpll
repnz
add
push
push
sbb
orl
push
test
or
lods
or
es
mov
je
xorb
mov
jmp
lods
cmp
sbb
mov
repz
pop
mov
adc
push
gs
enter
std
scas
pop
sbb
cmp
sbbl
push
bound
popl
mov
popa
xchg
xor
fsubl
add
mov
mov
enter
pop
push
out
orl
int
pop
mov
in
add
loop
xchg
cmc
addb
push
mov
jle
push
sub
inc
jg
je
inc
repz
cwtl
or
cmp
xchg
and
loop
add
adc
mov
out
or
add
add
or
fidivl
mov
repnz
arpl
jno
stos
adc
shll
shll
lods
inc
xchg
jmp
adc
mov
ds
loope
pop
gs
cmpsb
add
test
lods
mov
sahf
clc
mov
xor
addr16
mov
addr16
mov
adcl
cmp
je
pop
loopne
push
pop
sbb
aaa
jae
mov
jo
js
xor
jno
mov
imul
jno
loopne
pop
loop
das
push
xor
mov
dec
pop
or
pop
adc
test
dec
sbb
sqrtps
popa
inc
adc
jne
inc
add
out
push
fldt
mov
leave
mov
imul
jo
adc
jno
clc
and
xorl
push
fsubs
pop
sbb
xchg
add
xorl
or
push
push
leave
je
ja
push
scas
jmp
test
icebp
push
in
xchg
loope
add
iret
dec
or
ss
jmp
popf
clc
lea
in
aaa
dec
jo
scas
fistpl
xchg
jg
dec
push
xor
inc
jns
outsl
push
jbe
pop
push
mov
lods
mov
or
ja
fstps
jae
dec
maxps
and
imull
xor
lret
inc
insb
sbb
adc
jecxz
dec
mov
adc
mov
add
mov
outsb
sbb
fcmovb
dec
clc
xchg
rcrb
sub
mov
dec
xchg
inc
push
rcl
push
scas
or
std
dec
ss
jp
mov
adc
xor
mov
nop
cltd
sbb
mov
adc
cmpsl
and
test
mov
add
adc
mov
fs
das
rorl
fistpl
push
add
xchg
dec
daa
enter
or
les
test
or
movsl
xchg
inc
mov
test
lock
add
ss
lahf
scas
bound
fwait
imul
ss
lods
call
js
xor
sub
in
idivl
mov
dec
and
push
jl
jge
jns
sti
inc
or
xchg
inc
push
orb
push
movsl
cmpsb
lds
lds
rcrl
loope
mov
pop
js
mov
xor
jle
sub
aad
xor
mov
push
xchg
mov
lret
xor
aam
mov
xorb
stc
and
and
xchg
jns
mov
adc
dec
mov
or
mov
pop
das
jo
jno
fldl
jnp
push
mov
cmp
inc
inc
aam
and
popa
inc
out
sbb
push
xchg
add
pushf
es
imul
xchg
push
push
aad
sbb
shrb
mov
fistps
pop
pop
int3
das
jl
clc
sahf
add
jp
cld
sbbb
addr16
mov
adc
dec
nop
adc
repz
popf
push
test
mov
cmc
cmp
mov
jp
lret
cmp
xchg
js
add
lock
rcr
inc
sbb
shr
xor
sbb
orl
cmpsl
shlb
dec
int
call
jge
sbb
in
movsl
add
cmp
mov
test
iret
dec
jecxz
mov
mov
sub
jno
stos
repnz
pop
add
lods
mov
out
and
mov
or
outsb
fs
sbb
insl
call
xor
sub
add
xlat
mov
cld
call
test
imul
mov
xchg
sarl
flds
jb
sbbl
mov
out
mov
out
add
scas
and
pop
pop
jp
stos
mov
inc
pop
or
ss
or
lcall
leave
aam
push
pop
cltd
ds
lods
fldln2
dec
loopne
inc
add
bt
dec
push
mov
push
pop
xchg
push
rorb
leave
cmp
test
or
mov
mov
push
inc
adc
inc
mov
std
iret
imul
out
test
outsb
xchg
in
inc
dec
cmp
ffree
insw
movsl
loopne
loope
stos
jne
sti
in
add
and
push
jmp
pop
fadds
xor
adc
test
pop
jb
lcall
aad
cwtl
daa
icebp
pop
sub
fadds
adc
pop
dec
pusha
fwait
push
mov
mov
sub
cmp
sbbb
sahf
jge
push
ret
popa
cmc
dec
sbbl
and
repz
in
aaa
jecxz
dec
sbb
push
outsb
add
cli
xor
push
arpl
hlt
aaa
adc
in
stos
push
and
fldt
sub
mov
push
movsb
xchg
xor
sub
call
popa
stos
jge
pusha
sbb
and
je
push
and
stos
es
push
imul
and
cld
or
inc
subb
je
xor
repnz
xchg
push
sbb
adc
adc
jb
loope
inc
mov
arpl
and
add
xchg
push
adc
push
frstor
add
daa
or
pop
mov
aam
mov
sub
adc
or
sub
pop
mov
pusha
add
pop
mov
inc
pop
mov
jae
xchg
testb
dec
mov
outsb
and
mov
or
in
push
add
fstpt
and
jmp
cmpsb
and
and
lahf
movsb
jecxz
adc
iret
or
inc
popa
fisttps
adc
push
xchg
loopne
add
or
cmp
pusha
dec
xchg
and
rclb
subl
shlb
stos
jg
dec
outsl
in
addr16
add
mov
xor
mov
dec
mov
mov
pop
jno
popa
dec
add
aam
jl
fistl
pusha
movsl
cmpsl
stc
mov
mov
repz
out
cmpsl
enter
mov
nop
inc
flds
inc
xor
push
push
push
push
lock
jb
lods
cmp
movsb
jnp
stos
add
ret
and
push
sbb
stos
adc
xor
fdiv
mov
and
mov
or
das
or
mov
test
adc
sbb
mov
popa
jno
leave
sbb
daa
cmp
cli
cwtl
xchg
add
imul
scas
popa
xor
and
or
mov
ljmp
xchg
sarb
jo
inc
dec
insb
and
push
mov
sbb
pusha
mov
scas
aam
iret
push
insl
jmp
mov
xchg
popa
test
cltd
cmp
icebp
das
dec
shlb
out
int
pop
js
pop
xchg
test
pusha
cld
sub
cs
test
mov
push
add
inc
popa
test
mov
xchg
mov
push
cmp
cmc
fidivrs
out
pop
imull
dec
out
inc
push
inc
and
in
aad
pop
jb
test
aam
int3
inc
inc
dec
lret
mov
inc
xor
out
jmp
cmpsl
push
movsb
cmp
xor
adc
adc
inc
jp
hlt
test
sub
push
popa
lahf
js
sbbl
aam
mov
clc
fs
jmp
pusha
pushf
daa
out
pop
xchg
scas
add
out
pop
dec
add
loope
dec
mov
cld
lods
jg
in
push
pop
push
aaa
xor
fldpi
add
add
repnz
lret
and
or
rcrl
inc
sub
sbb
mov
push
aad
aam
dec
rolb
aad
aaa
notl
push
mov
ret
dec
rcrl
push
sbbl
and
aas
inc
test
jmp
adc
pop
adc
pop
or
js
mov
movsb
xchg
mov
push
pop
test
aam
es
int3
popa
dec
fdivl
xor
add
lock
add
mov
add
rcrb
pop
das
or
cmp
adc
mov
mov
ss
shlb
fldt
repz
pop
fwait
mov
orb
xor
sbb
sub
movsb
sbb
pop
add
aam
imul
add
push
inc
mov
xor
xor
lret
pushf
fcmovu
mov
ja
sbb
out
cmp
test
pushf
adc
jo
mov
adc
cmp
fwait
iret
jp
inc
movsl
mov
insl
cs
arpl
xchg
and
or
lret
hlt
loop
jp
jns
adc
adc
or
fsubrl
cmp
imul
mov
aam
or
sub
out
xchg
jb
or
push
aaa
and
fmul
mov
jmp
test
add
leave
ret
inc
pop
xchg
fs
mov
je
inc
pop
or
fdivrs
push
lcall
dec
mov
fwait
test
and
mov
test
outsl
int3
xchg
mov
cmpl
scas
jnp
adc
rorb
ret
push
add
fcoms
mov
scas
jecxz
xchg
adc
pop
add
sub
in
pop
test
lcall
cmpsb
mov
mov
mov
iret
lcall
xor
mov
push
pop
jle
adc
or
cmp
scas
pusha
xor
add
in
shrl
jo
xchg
jmp
clc
or
jecxz
mov
rcrl
out
lock
je
lcall
ds
sbb
lods
daa
xchg
stos
pop
pop
jecxz
pop
sbb
lds
lock
mov
jecxz
lahf
and
push
jg
and
loopne
ja
lods
sbb
inc
mov
ljmp
dec
or
sub
push
loope
sub
push
inc
push
scas
push
cli
and
cld
xchg
xor
xchg
lock
push
ja
inc
popa
xor
xorb
popa
mov
cmp
movsb
pop
pop
stos
xor
aad
cmc
xlat
sbb
xchg
and
inc
jo
and
pusha
mov
xor
test
out
sar
inc
cwtl
in
sbb
jmp
popa
icebp
and
lock
mov
mov
rorl
les
cs
fldcw
jno
or
inc
sbb
aam
xchg
test
aaa
xchg
push
mov
and
sahf
les
mov
mov
movsl
aaa
push
or
stos
push
mov
pushf
shr
add
inc
sbb
add
pop
mov
jo
imul
sub
gs
ret
call
lahf
rclb
mov
dec
jmp
mov
shrl
xchg
xchg
mov
pop
sub
ja
js
movsb
stos
xchg
sahf
ds
bound
adc
aaa
outsb
cmp
inc
mov
mov
pop
add
add
lahf
int
test
sbb
xchg
xchg
nop
test
loopne
xor
fs
mov
fcmovnbe
pop
test
and
xor
cmp
push
sub
lahf
push
add
cltd
mov
xor
ret
xorl
dec
cmp
and
cmc
inc
test
or
das
mov
jne
xchg
jb
outsb
jbe
imul
push
cmpsb
xchg
lcall
sbb
xor
mov
inc
pop
jecxz
sub
xor
rolb
scas
outsl
ljmp
ffreep
pop
pushf
adc
add
sub
ljmp
or
pop
push
iret
inc
ja
xchg
inc
test
loopne
jns
movsl
loopne
enter
mov
adc
mov
mov
es
jmp
das
out
sub
dec
sbb
pop
add
sub
imul
adc
dec
insl
add
xor
and
push
iret
int
ret
mov
mov
sbb
movsl
loope
and
pop
movsl
sbb
test
xorb
icebp
bound
icebp
add
imul
sbb
and
nop
sub
dec
pop
sub
mov
adc
adc
lret
sub
sub
inc
pop
xor
rorl
cld
pop
test
and
xor
add
mov
add
aad
insl
es
mov
insb
xchg
into
pop
imul
push
adc
push
xchg
fbld
outsl
lahf
pop
test
scas
pushf
mov
xlat
cli
sbb
cwtl
dec
cli
xchg
push
iret
push
sbb
xor
and
push
cmp
inc
mov
scas
filds
lea
inc
jmp
or
test
out
lds
fdivs
push
pop
sub
mov
in
add
cld
push
jnp
adcl
movsl
pop
rolb
or
mov
test
jae
dec
and
sbb
cs
lea
lret
cmp
dec
pop
xchg
xchg
pop
into
rcl
xchg
pop
add
or
movsb
test
add
mov
fwait
sub
sub
shll
mov
add
or
cmp
mov
icebp
dec
ret
int
scas
add
pop
jmp
ds
pop
push
dec
loop
fs
je
mov
sub
add
dec
mov
sbb
xor
mov
pop
mov
pop
push
test
shlb
jmp
cmp
dec
pop
mov
js
sbb
outsl
and
test
movsb
xor
push
pusha
jnp
or
in
or
or
lret
jno
mov
push
test
mov
lret
iret
outsb
imul
adc
je
lret
dec
imul
hlt
mov
sub
insl
jne
cs
push
jg
push
inc
outsl
call
lret
andl
push
loope
xor
mov
imul
fwait
cmpsl
sub
loop
and
fimuls
fnstsw
jns
pop
add
adc
daa
push
xchg
xchg
mov
lahf
adc
imull
test
add
inc
mov
and
push
push
mov
sub
inc
jg
stos
aaa
push
push
pop
jbe
dec
hlt
sbb
hlt
rorl
iret
int
movsb
mov
adc
or
dec
inc
add
xchg
adc
ja
xchg
sub
int
or
sub
sub
sbbb
scas
xchg
inc
push
pop
stc
push
inc
push
imul
test
or
xchg
dec
dec
xchg
dec
ret
pop
mov
push
mov
dec
jl
push
push
vrcpss
aaa
jg
ret
jg
js
mov
aam
daa
sbbb
aad
xlat
ja
aaa
pushl
out
dec
add
mov
add
or
addr16
adc
pop
inc
cmpsb
sbb
push
cmp
sub
sar
adc
or
add
add
gs
xchg
notb
testb
inc
adc
rorb
shlb
and
dec
lcall
jecxz
push
jns
add
sbb
dec
ss
icebp
repz
add
rcrl
add
daa
test
dec
add
sub
mov
cmp
cmp
popa
push
movsb
dec
in
pop
or
sbb
pop
push
inc
sbb
pusha
add
lea
mov
sub
enter
push
scas
mov
push
in
test
push
and
cwtl
ss
jmp
cmp
and
sbb
pop
or
adc
loop
nop
add
cmpsl
lea
mov
inc
sub
jbe
pop
rolb
sbb
pop
inc
and
adc
xchg
adc
lods
pop
jle
sub
popa
lds
in
and
push
push
jecxz
lds
jbe
mov
ja
mov
inc
sti
test
insl
iret
xor
sub
mov
pop
jg
cmp
sub
lahf
add
push
mov
cmp
ret
fstl
add
adc
push
and
sub
lahf
sub
ja
aad
push
jp
push
lock
and
add
lahf
xchg
mov
orb
test
test
test
gs
mov
push
sub
dec
push
push
inc
add
das
js
cwtl
cmp
and
neg
jecxz
cmc
xchg
inc
pop
add
adc
or
pusha
popf
mov
daa
jl
pop
dec
mov
cmp
push
cld
mov
add
dec
add
out
jns
test
cwtl
outsl
scas
adc
xor
xchg
or
adc
aad
inc
mov
test
push
popl
cmp
movsl
inc
sub
cmc
push
lock
cmp
scas
in
in
sbb
js
mov
mov
and
pop
cli
cwtl
push
sbb
repnz
sub
loopne
lret
xchg
fdivl
jle
jo
je
fisttpl
add
and
movsb
fistps
adcb
sub
dec
shrb
xchg
sarl
or
sbb
movsl
addr16
imul
fwait
sub
iret
pop
xchg
mov
jns
lret
filds
movsl
sub
push
pop
push
push
and
add
jb
in
cli
sbb
fadds
aas
aaa
add
lret
jbe
sti
nop
adc
ret
bound
div
nopl
and
sub
mov
insl
pop
mov
sbb
imul
cmp
loope
pop
int3
mov
mov
xlat
loopne
jmp
imul
sub
xor
xlat
sub
iret
cmp
push
add
or
loope
or
jns
cmp
xchg
fimuls
push
or
movsb
leave
jmp
pusha
loope
loop
out
inc
dec
push
hlt
adc
fs
push
push
xchg
add
sahf
pop
push
ret
xchg
imul
mov
cmpl
imul
jb
dec
pusha
cmp
or
add
cwtl
and
push
dec
fcomps
mov
push
inc
sub
mov
lret
sub
add
fldl2e
xchg
es
mov
in
stc
pushf
add
imul
jo
lcall
test
fmuls
and
xor
jecxz
cmp
jne
push
jp
pusha
jo
cmp
mov
cmp
adc
int
bts
push
cmp
sti
add
movsl
icebp
push
and
sub
add
imul
icebp
jae
mov
test
inc
add
sahf
dec
mov
mov
push
sarl
sbb
fldcw
pusha
push
push
aas
adc
punpckldq
ret
inc
aam
cmp
jg
fwait
add
xor
mov
add
xor
test
adc
repnz
bound
cmpsb
sbb
in
test
sub
hlt
push
dec
add
lahf
jp
orl
aam
mov
bnd
fmuls
dec
lahf
add
lock
cmpsl
add
xchg
sbb
inc
pushf
in
sbb
mov
adc
pop
filds
test
and
lcall
imul
imul
sub
mov
cmp
icebp
sbb
loope
ret
jmp
sub
inc
fcoms
clc
insl
sbb
jp
and
lret
cli
pushf
adc
fldenv
jae
rcll
xchg
pop
jg
jne
add
push
shll
out
add
sub
inc
out
pop
inc
sub
mov
enter
xor
ss
xchg
or
push
sbb
mov
cmp
test
sbb
xchg
and
sbb
rorl
adcl
arpl
sbb
push
pop
test
mov
test
in
sbb
jnp
loope
add
movsb
aas
cmpsl
pop
clc
jo
mov
testl
cmp
jnp
push
push
pop
adc
push
lahf
stos
aam
movsl
add
pop
sbb
gs
mov
xchg
push
inc
sub
xor
jg
test
call
xchg
or
push
sbb
daa
cmc
jmp
cmp
xor
sti
addr16
shrb
test
inc
cwtl
outsl
add
mov
inc
push
iret
dec
and
jmp
mov
fwait
sub
mov
or
rorb
stos
jg
add
scas
repnz
xor
add
jno
pop
stc
mov
pop
pop
xchg
mov
pop
pop
insb
mov
int3
push
jecxz
mov
pushf
mov
add
ds
aad
ja
mov
mov
mov
push
add
add
loop
fst
add
inc
dec
jae
clc
aaa
iret
pop
gs
ret
test
or
fcomp
adc
adc
cmp
lock
xor
fbstp
imul
lods
sub
pop
aaa
inc
das
cs
and
xchg
or
xor
mov
mov
mull
add
les
loope
leave
shlb
adc
dec
sub
fists
test
enter
ret
or
sahf
popa
mov
xchg
sub
sbb
pop
cmp
add
ds
pop
push
xchg
and
or
push
jge
shr
inc
hlt
lds
inc
sbb
fs
xor
xchg
sub
orb
orb
fistl
popf
shr
push
add
add
xchg
mov
cmp
sub
bound
add
fidivl
mov
aad
add
sbb
and
push
inc
ret
push
add
movsb
and
pop
das
xchg
jbe
das
bound
mov
push
out
push
ljmp
out
sub
pop
fcoms
shl
mov
sub
nop
outsb
loop
mov
es
mov
addr16
sub
inc
imul
add
cld
lods
loope
xchg
lods
addr16
xor
sahf
rcll
or
rolb
dec
bound
dec
cmc
scas
xchg
push
add
mov
test
mov
loope
mov
add
mov
inc
cmove
lock
sbb
mov
sbb
push
inc
push
mov
xlat
xchg
fucomp
fmuls
or
dec
insl
std
test
lret
xchg
adc
mov
mov
std
mull
sbb
jge
jne
test
aam
pop
lods
popf
scas
das
lods
testl
xchg
int3
adc
popf
or
movsb
enter
xchg
adc
arpl
and
loopne
jmp
xor
jecxz
mov
testl
mov
xchg
scas
or
inc
xor
aas
clc
xchg
fimull
dec
movsb
push
push
shll
insl
inc
jle
out
popa
std
or
pop
nop
insl
mov
or
ja
mov
add
fistl
xor
xorl
movsl
inc
cld
repnz
ljmp
mov
adc
sbb
fwait
add
leave
scas
dec
sbb
imul
aaa
and
cltd
cmc
imull
call
sbb
ror
sbb
cmc
push
jae
fs
xchg
cmp
fwait
pusha
and
sub
push
enter
clc
sbb
inc
ss
add
push
aad
ret
cmp
mov
or
mov
mov
or
es
stc
inc
loopne
pop
mov
js
ds
pushf
add
rorl
loopne
jge
repz
mov
cmp
and
mov
fdiv
sub
test
out
adcl
add
mov
adc
push
lret
lcall
mov
inc
adc
xor
inc
pop
sbb
popl
inc
ret
and
imul
fisttpll
lods
jae
push
add
xchg
jmp
addr16
sub
mov
inc
or
andb
mov
lods
mov
popa
shrl
daa
aaa
cmp
ss
mov
mov
mov
mov
pop
sbb
ds
mov
test
ret
test
jle
fmul
sti
iret
and
cmpsb
repz
sub
xchg
jne
adc
add
nopl
cmp
aad
mov
inc
inc
jl
sbb
push
cmp
test
loope
dec
cmp
inc
cmp
push
ja
punpcklbw
stos
imul
pop
ret
rdtsc
and
lods
cmp
mov
cmp
mov
pusha
add
divl
inc
aad
in
add
in
sbbb
inc
add
mov
add
nop
andl
mov
cltd
inc
out
loop
and
xchg
push
xchg
cmpb
xor
mov
mov
and
test
in
adc
xchg
dec
push
dec
enter
rorb
dec
xchg
push
popa
aaa
fwait
inc
adc
push
imul
cltd
ficoml
fs
test
dec
add
push
test
loope
pop
mov
push
jmp
adc
adc
cmp
in
mov
lock
and
pop
fdivrs
sbbb
in
mov
inc
xchg
add
sbb
dec
mov
cwtl
ret
aad
lods
rcrb
addr16
add
shrb
jbe
js
adc
int3
clc
daa
movsl
and
push
add
movsl
mov
pushl
rcrb
or
je
sub
loopne
mov
jbe
aaa
mov
and
and
mov
dec
jecxz
addb
add
mov
test
xchg
popf
jecxz
pop
sbb
push
test
popf
or
dec
insl
lea
jecxz
fwait
outsb
cmp
mov
mov
insb
push
mov
mov
inc
mov
mov
jnp
sti
cmp
repz
add
cwtl
cmp
jecxz
shrb
sub
lcall
fisubrs
cmpsb
out
out
in
sub
mov
popa
mov
mov
mov
fucomip
mov
xorb
pop
pushf
xor
xchg
or
lea
repz
lock
sub
pop
divl
sahf
out
sbbb
adc
pop
ja
jp
dec
sub
scas
push
sub
add
out
and
test
or
and
xchg
cmpsl
lock
out
inc
ja
xor
push
scas
mov
and
or
and
pop
mov
rorb
push
mov
lahf
push
call
and
clc
mov
sbb
xor
movsl
push
in
push
std
sbb
lret
out
sbb
inc
push
fbld
dec
lret
movsl
rcl
lret
test
shl
mov
stos
movsb
mov
mov
and
pop
aas
jo
mov
sbb
outsb
insb
std
addb
sub
or
es
je
loopne
xchg
and
mov
or
test
sbb
sub
ja
push
repz
das
out
lahf
rcrl
mov
hlt
cmpb
ficoml
pusha
movsl
mov
in
rorb
xor
push
mov
adc
and
adc
out
sbb
pop
out
imul
cmp
mov
in
adc
push
sahf
push
sub
and
fsts
inc
jnp
cmp
das
dec
inc
and
mov
sbb
out
adc
int3
and
mov
flds
or
leave
mov
add
das
mov
push
loope
aaa
dec
dec
dec
add
mov
jl
js
sub
ds
mov
add
or
movsl
lret
insb
loope
xor
dec
add
mov
dec
dec
mov
adc
add
or
das
mov
xor
inc
sbbl
fisttpl
jo
pop
adcl
mov
lods
sub
or
mov
jg
ljmp
sbb
insl
outsl
mov
jecxz
gs
add
out
shlb
jno
pop
or
pushf
jecxz
add
mov
rolb
dec
pop
push
je
sti
in
inc
push
call
and
fcmovnbe
incl
pop
jp
jl
and
jle
sub
xor
movl
test
mov
inc
or
pop
push
pusha
test
jmp
movsl
pop
xchg
or
popf
jno
mov
push
lock
jae
lret
jg
or
inc
jecxz
mov
mov
imul
jnp
ficoms
pop
push
mov
xchg
dec
orl
popf
lods
call
xchg
add
sub
scas
and
and
mov
add
add
push
push
xchg
inc
sbb
sub
push
pop
gs
pop
sahf
pop
sbb
adc
cmp
push
scas
adc
pop
push
push
addb
je
mov
fidivs
mov
xchg
or
imul
push
cmpsb
ja
pop
ss
xorb
xor
lods
adc
dec
pop
movsb
xchg
addb
adc
mov
addb
jo
jae
mov
and
xor
mov
notb
popf
roll
xchg
add
or
jmp
mov
cmp
fchs
adc
pop
inc
dec
push
scas
js
scas
in
push
jp
inc
cmp
sbb
adc
cmc
dec
push
sub
mov
punpcklwd
lods
xchg
sahf
dec
pusha
jae
das
sbb
test
pop
iret
lods
loope
sub
or
stos
cmpsb
and
xchg
dec
stos
mov
and
bound
hlt
dec
xchg
cltd
lock
sub
push
xchg
test
fmull
js
ja
ret
rolb
movsl
mov
or
adc
das
subb
fists
sub
push
jb
and
sbb
dec
pop
or
add
inc
jge
jns
jns
xchg
inc
iret
lods
or
fmuls
add
or
cmp
or
stc
pop
cmc
push
push
cmp
sbbl
push
fmuls
ja
add
and
mov
or
jns
dec
mov
imul
inc
xorl
push
loope
daa
pop
into
mov
cli
leave
mov
in
jp
mov
enter
jecxz
lea
or
jns
aaa
add
sub
lahf
adc
dec
lea
pop
jae
sub
adc
push
push
add
mov
cwtl
dec
jno
sbb
inc
or
adc
jo
cmp
xchg
jo
fcmovnbe
das
jns
jo
push
iret
or
mov
dec
iret
sub
sub
fucomi
mov
add
or
add
fldl
xchg
sub
xor
mov
mov
loope
aaa
lds
mov
fldt
push
xchg
push
fs
scas
rclb
iret
mov
add
icebp
xchg
stos
jle
iret
dec
loopne
arpl
cmpsb
jno
stos
push
xchg
xchg
push
test
popf
inc
and
inc
xorb
inc
je
rorb
inc
pop
test
mov
stos
rol
push
adc
xor
pop
jmp
mov
xchg
iret
xorl
and
sub
xchg
or
inc
gs
movsl
out
fiadds
xor
fisttpll
outsl
and
push
pop
dec
call
jae
mov
pop
xchg
rorb
iret
add
lock
or
sub
xchg
dec
pop
pop
cmc
adc
cs
mov
fisubl
adc
add
and
out
xchg
outsb
xor
mov
pop
call
push
cmc
mov
or
and
add
lock
jae
sub
fcmove
pop
cmp
fiadds
jge
sub
jno
arpl
scas
push
jnp
pop
rorb
inc
mov
dec
sbb
push
lods
and
pop
shrl
ret
decb
fwait
iret
lcall
push
icebp
js
push
rclb
cmc
icebp
xchg
addl
sub
xchg
add
ds
cs
cwtl
or
push
outsb
xchg
cli
lret
iret
push
adc
mov
ret
enter
sub
cmp
or
add
mov
arpl
pop
push
jl
mov
call
mov
aam
sbb
nop
cmpsl
pop
mov
insl
cmp
sbb
add
mov
rcrl
add
outsb
lods
mov
dec
add
outsl
cmp
cmc
adc
test
sub
mov
xor
dec
sub
ds
loope
hlt
daa
out
mov
adc
fs
js
xor
cmp
jne
sub
jecxz
mov
pcmpgtd
sbb
dec
xchg
and
cmp
jl
xchg
inc
aaa
repz
push
mov
lds
scas
in
flds
dec
xchg
inc
in
or
mov
jns
push
scas
and
ss
add
pop
popf
out
mov
pop
ret
add
mov
and
xchg
lods
aaa
insl
xor
xor
jecxz
sbb
inc
test
ret
mov
xchg
pop
out
test
push
push
push
sbb
in
adc
dec
clc
stos
pop
xchg
out
sbb
mov
mov
mov
dec
cli
andb
xchg
mov
iret
insl
push
js
lcall
pop
pushf
xor
icebp
add
mov
jae
pop
add
lret
sbb
pop
in
xchg
pop
scas
cmp
int3
xchg
pushf
cmp
dec
cmp
mov
andb
mov
push
push
in
xor
pop
stos
inc
jmp
rclb
dec
mov
ret
xchg
and
sub
and
pop
das
xchg
out
mov
out
pop
and
adc
lret
cld
inc
jle
xor
sub
mov
ds
push
lods
fidivs
push
pop
pop
or
xchg
enter
lds
push
mov
loope
pushf
or
and
pop
test
mov
outsl
sub
jmp
dec
jle
pusha
mov
sbb
mov
or
mov
lds
xorb
add
jae
or
popa
adc
inc
adc
sbb
or
addl
xchg
imul
mov
cmc
gs
adc
icebp
and
adc
sarl
insb
ret
je
mov
inc
push
jecxz
aaa
outsl
aam
push
adc
jmp
mov
mov
pop
jbe
adc
iret
sahf
add
loopne
add
fistpl
bnd
jl
add
fisttpl
subl
sarb
xchg
dec
js
or
inc
outsl
enter
push
pop
fstpt
or
lock
jb
iret
int
je
not
push
cmp
mov
jo
pop
mov
lock
arpl
push
scas
ja
aaa
push
push
jecxz
jno
mov
popf
jb
vpunpckldq
lahf
cmpsb
fs
in
lods
dec
add
push
jg
cmp
fdivrl
out
repz
outsl
jecxz
and
fstpt
cmp
repz
icebp
fstl
or
xor
mov
pop
jb
sub
shll
loope
add
dec
mov
cmp
fsubrs
test
jns
jo
xlat
add
ud2
xchg
dec
jl
sub
fdivs
stos
jo
sbb
paddusw
iret
inc
or
xor
fiadds
ds
jbe
sub
push
pop
sbb
xor
push
push
fisubs
arpl
icebp
inc
fcmovu
push
inc
shll
fs
ljmp
cmp
test
std
sub
add
cmpsl
sbb
jl
mov
sub
mov
xor
add
xchg
sub
sbb
mov
leave
pop
add
mov
pop
xor
mov
lret
loope
pop
jle
inc
dec
adc
aam
or
cwtl
nop
stc
sub
outsb
arpl
sahf
scas
xor
ret
xchg
push
das
cwtl
fmul
ss
sbb
push
je
mov
je
push
adcl
pop
sbb
xor
or
sub
fmull
mov
lahf
mov
int
sub
inc
pop
or
sub
repz
and
push
jmp
es
xchg
rolb
push
mov
outsl
mov
cmp
call
sub
jo
std
mov
cmp
mov
push
imul
inc
jno
sbb
adc
jmp
or
daa
xchg
jno
push
add
je
fsubs
cmpsl
popa
loop
inc
xchg
test
test
add
mov
push
mov
notl
shlb
dec
xor
sti
clc
das
out
insl
add
jns
nop
mov
pop
push
jo
mov
xor
testl
add
mov
faddl
adc
cmpsb
cli
xor
pop
adc
push
outsl
xor
adc
or
mov
inc
or
xor
sub
roll
fldenv
xchg
mov
aas
test
or
and
add
add
or
dec
or
shlb
pop
or
and
inc
shrb
mov
dec
sbb
loopne
and
cmc
dec
fnstenv
cmp
inc
enter
repz
adc
jnp
in
xchg
cwtl
jecxz
fcoms
mov
out
loopne
pusha
xchg
push
cmp
add
inc
dec
rclb
loopne
scas
mov
les
sub
jb,pt
sbb
dec
and
dec
in
pusha
fidivrl
jmp
xor
jb
mov
pop
popa
dec
mov
mov
mov
sub
lret
add
or
sbbb
push
sahf
mov
push
sarb
add
mov
push
fsubs
xor
and
sbb
in
xchg
add
lret
push
mov
and
add
inc
ss
mov
dec
and
sbb
inc
mov
test
shrl
or
insb
xor
add
repnz
sub
int
test
jnp
movd
xchg
mov
mov
in
insl
insb
ds
adc
outsb
inc
enter
jge
mov
fists
pusha
adc
dec
inc
loopne
xchg
push
movl
pop
mov
out
fs
add
xchg
xor
sbb
aad
xor
test
sbb
leave
inc
mov
andps
or
push
js
jmp
pop
xor
push
cmpsb
sbb
adc
negb
iret
xor
adc
inc
call
ret
je
cmp
mov
dec
jmp
cmp
inc
or
add
mov
inc
test
mov
pop
jbe
inc
lcall
jmp
adc
aas
adc
lods
nopl
loop
clc
cmpsl
sub
sub
sub
or
bound
push
xchg
addb
repnz
push
cmpsb
pop
nop
push
jne
lcall
push
xor
jno
cmp
mov
adc
pop
addr16
add
xor
shll
fwait
xor
cmp
lock
adcl
std
cmp
xchg
xorl
icebp
sbb
adc
add
pusha
ret
andl
int
xor
adc
jmp
fists
arpl
nop
dec
leave
adc
pop
xor
mov
add
fcomps
dec
sbb
fs
add
popa
aas
inc
rcl
mov
nop
aam
ret
sahf
clc
shr
jne
jno
dec
loopne
pop
or
ja
mov
sbb
sub
jge
sbb
lock
sbb
cmp
jbe
rorb
daa
sbb
inc
add
add
xchg
sbbl
imul
cmp
mov
xor
hlt
imul
insb
pop
fwait
je
hlt
in
dec
cmp
inc
imul
loope
seto
rolb
xchg
mov
test
gs
and
jno
ds
mov
add
inc
push
adc
loopne
insb
jmp
mov
bound
das
jae
push
ja
das
and
cmp
xlat
inc
outsb
sbb
test
enter
and
lock
rol
loopne
das
jo
or
lcall
xchg
cmc
sbb
addl
das
ret
rorb
xchg
test
inc
jo
call
inc
mov
std
sub
loopne
jno
and
sbb
imul
xchg
shrl
dec
adc
lret
add
sbb
rol
xor
xchg
ret
es
lock
fistpl
cwtl
jb
inc
and
and
cmp
jecxz
gs
pop
out
ss
mov
dec
adc
mov
je
mov
sbb
or
and
inc
lcall
adc
mov
pop
dec
sti
mov
xchg
imul
sbb
add
mov
mov
cmc
mov
inc
push
mov
mov
add
or
jne
push
sbb
mov
add
push
xchg
pop
push
jno
dec
push
push
pop
and
xchg
inc
xchg
and
jnp
sbb
mov
push
sub
icebp
fsts
rclb
dec
iret
cmpsb
mov
mov
jno
stos
pop
scas
aad
pop
lods
nop
aad
push
aad
push
popl
inc
sub
adc
rclb
jae
jne
aad
je
adc
push
ja
ret
add
daa
add
add
inc
inc
or
out
add
icebp
adc
add
ret
enter
mov
sub
mov
clc
push
add
inc
in
int
rol
mov
mov
fmuls
adc
push
xor
sbbl
push
xchg
or
push
cmp
imul
addb
mov
lods
or
inc
ror
movsb
adcl
sbb
mov
imul
loopne
shl
out
push
dec
mov
aas
clc
jbe
dec
add
gs
das
pop
adc
sub
push
add
pop
mov
dec
push
inc
popa
dec
loope
mov
pop
or
cld
pop
jo
jle
fcomps
or
or
ficoms
adc
insl
sti
test
pop
xchg
mov
xor
into
pop
aaa
add
sahf
js
iret
xlat
pop
in
shrb
sbb
mov
xor
ljmp
or
push
xor
mov
xchg
dec
or
push
sbb
xchg
push
lret
jbe
push
lods
dec
cli
insb
insl
cmc
xor
jnp
insl
into
mov
fucomip
popf
sti
cs
loop
fwait
sbb
daa
sub
mov
lods
mov
pop
xchg
outsb
adcl
int
push
call
fbld
jge
repz
mov
mov
scas
push
xchg
test
jmp
leave
and
adc
jae
outsl
pusha
dec
cmp
xor
loopne
sub
ret
stos
outsb
mov
push
sbbb
popa
xor
or
lahf
jge
and
dec
stos
mov
pop
add
lret
movsl
arpl
aaa
push
inc
es
xchg
aam
aas
fistps
xchg
adc
ficoms
inc
cli
and
pop
mov
rcll
inc
or
cld
sbb
adc
femms
inc
add
xor
in
into
lods
int3
and
xchg
aad
jg
pop
push
xchg
fwait
mov
test
imul
xor
xchg
call
xchg
jmp
scas
push
iret
mov
or
sub
or
pop
dec
hlt
sub
popl
xchg
sbb
xor
aas
fildll
mov
mov
std
jl
es
mov
add
sbb
mov
xchg
push
jbe
mov
inc
mov
jmp
xchg
sbb
mov
sahf
add
jbe
add
ds
xor
test
lods
stos
test
and
popf
push
out
xor
sbb
dec
sub
les
ja
pusha
or
insl
cli
cmpsb
fs
in
push
lock
inc
jmp
pop
orl
jns
dec
push
shll
mov
jge
aas
push
out
iret
lcall
jl
jp
shll
popf
or
and
call
add
xchg
jp
mov
mov
lods
xchg
inc
cmp
cs
dec
push
sub
test
fldt
jp
shl
xchg
or
fwait
sarl
xchg
int
ss
pop
push
cmpsb
adc
addl
and
mov
scas
fwait
roll
scas
dec
pop
add
and
rolb
add
add
xchg
daa
dec
and
xchg
stos
cmp
mov
push
das
or
and
xorl
sbb
lock
cmp
subb
fcomps
push
notl
insl
adc
xor
push
mov
sbb
ret
out
xor
std
andl
les
insl
xchg
push
std
jecxz
mov
inc
xor
xchg
jns
or
pop
xlat
daa
jg
dec
out
or
outsl
pusha
sbb
fadds
jle
nop
push
ljmp
loopne
sub
jb
xor
cwtl
mov
outsl
std
loope
or
push
gs
sub
flds
es
or
adc
mov
repz
sub
add
push
xchg
ret
jbe
test
outsl
test
adc
subl
or
jb
cmpsl
lods
inc
jg
lret
je
out
daa
str
inc
rclb
cmp
ffree
mov
aaa
movsb
cmc
push
sub
scas
clc
xor
cmp
or
adc
adc
mov
pop
sub
sub
add
mov
sbb
xor
push
push
int
mov
jae
mov
jae
pop
mov
sbb
imul
push
or
cmc
dec
icebp
lock
shll
add
in
aam
scas
push
jo
loopne
ja
xorb
add
test
xchg
mov
outsl
or
leave
sbb
cmp
daa
dec
shrb
ror
cmp
or
call
leave
add
insl
inc
and
add
xchg
push
or
jns
adc
cmp
sbb
es
das
fs
dec
popl
xor
cmpsb
inc
fmuls
inc
mov
pop
adcl
add
jge
pop
nop
push
mov
rclb
pop
sti
jmp
fcoms
pop
push
jmp
outsl
into
xor
mov
pushf
lea
push
mov
and
push
das
je
pextrw
sbb
outsb
js
dec
and
sarb
es
mov
pop
xor
stos
jno
aam
adc
add
lock
addb
push
sbb
test
add
fisubs
pop
adc
jge
pop
sbb
imul
and
or
mov
push
shlb
mov
js
inc
dec
adc
adc
les
and
out
push
mov
add
xchg
mov
mov
inc
addr16
andb
mov
loope
cmp
bound
jno
xlat
sub
xor
inc
rol
push
imul
mov
out
popa
shll
mov
or
subl
cmpsl
mov
jp
fucom
inc
xchg
adc
orb
aaa
cwtl
dec
mov
or
cmp
mov
push
and
test
xchg
adc
daa
aaa
mov
mov
shlb
xor
out
mov
mov
es
rol
fdivrs
dec
sbb
test
dec
pusha
cmpsl
add
cmp
js
mov
in
movsb
add
movsb
mov
xchg
imul
subb
outsb
aam
adc
mov
sbb
push
rolb
sbb
movsl
inc
nop
push
dec
bound
mov
fidivrl
pushf
rcl
push
sti
sub
or
mov
leave
das
lods
insb
dec
adc
dec
fsubs
es
or
int
dec
xor
mov
mov
mov
sub
dec
bound
cli
rorb
add
jl
scas
sub
push
mov
sbb
xchg
push
pop
sbb
sbb
cmp
jae
dec
xchg
pop
sub
adc
cli
jnp
sub
push
adc
js
jns
scas
add
jl
jno
adc
inc
mov
out
inc
pop
in
jl
fs
jb
add
lret
push
xchg
sub
sbb
pop
adc
cmp
lods
ret
lret
add
adc
aaa
pusha
std
fidivrl
sahf
and
sbb
push
mov
lock
ljmp
jl
icebp
dec
push
fwait
cmp
ja
push
jbe
xchg
adc
loope
addb
aaa
insb
adc
push
rolb
sbb
out
lods
inc
adc
into
mov
icebp
or
cmp
fld
pop
adc
rol
mov
pop
dec
push
mov
add
les
jns
push
add
movsl
jno
inc
mov
sub
and
testl
and
test
pop
push
and
inc
gs
inc
sbb
cmp
jnp
mov
jo
test
mov
pop
jo
mov
or
ror
cli
mov
adcb
ja
int3
inc
push
es
dec
fsub
sahf
sbb
adc
lcall
sbb
jl
out
jnp
push
xchg
cmpsb
adc
pop
and
inc
arpl
jecxz
int
ljmp
lods
shrb
cmp
xor
scas
andl
pop
xchg
sbb
icebp
mov
pushf
movsl
ja
lods
add
lea
je
mov
mov
mov
movsl
punpcklbw
js
leave
rcrl
fimull
mov
in
sub
ljmp
xchg
cmp
push
xchg
jno
jo
mov
jg
jg
push
pop
gs
xor
sub
push
xchg
pop
aaa
mov
roll
loopne
mov
and
adc
sbb
jbe
pop
push
orb
sub
data16
ja
popa
push
and
imul
pusha
mov
addr16
pop
hlt
adc
adcl
xor
adc
cmp
cmp
xor
cmp
push
xor
cmp
test
inc
inc
pop
mov
and
jmp
adc
fsubs
stos
xchg
es
pop
dec
cmc
xchg
mov
cmc
push
dec
sub
fildll
fisubl
iret
icebp
and
push
fistpll
adc
xchg
push
mov
push
fiaddl
mov
dec
add
cmpsl
xor
jns
fldl
ja
test
addr16
dec
dec
rcrb
and
gs
aam
and
enter
adc
push
mov
cs
xor
es
sub
sbb
cmp
or
cmp
cmp
popf
or
jae
dec
jbe
ss
push
iret
pop
xor
push
push
rclb
add
popf
xor
aad
ja
adc
adc
xchg
rcrl
fs
nop
out
aad
jmp
mov
rclb
rorb
dec
stos
shll
test
fldt
cmpsb
test
cltd
cmp
adc
inc
inc
enterw
jb
mov
xor
push
subl
push
scas
ja
pop
xor
jl
stos
cld
scas
clc
push
je
iret
ret
repz
sub
fstpt
mov
dec
ljmp
imull
fwait
add
jmp
mov
fnsave
or
orl
das
inc
push
cwtl
mov
push
sbb
dec
lds
dec
nop
jl
push
loop
sbbb
sbb
add
fisubrl
xlat
or
incb
call
outsb
jg
mov
jge
rcr
lahf
ljmp
les
and
xor
jmp
sbb
shrb
mov
and
lods
fs
ror
test
popf
lret
addl
xchg
cmp
shll
xor
xor
sub
je
enter
sub
mov
xchg
inc
or
inc
or
xor
mov
sbb
mov
call
pop
sbb
out
add
pop
movsb
mov
sbb
shlb
mov
inc
lret
cmp
dec
adc
imul
les
and
push
push
fisubl
cmpsb
fdivrl
js
out
mov
out
xor
popa
popa
loopne
stos
aas
and
dec
sbb
and
out
mov
out
ja
sbb
xchg
inc
mov
push
xchg
dec
mov
rcrb
aas
adc
and
stos
lcall
imul
pop
or
and
jecxz
dec
adc
loope
push
cmp
adc
fimuls
add
adc
mov
sbb
cmp
pop
in
add
shlb
mov
dec
add
in
shrl
sub
faddp
or
loopne
sub
or
ret
jg
std
jno
dec
sbb
xchg
xchg
and
fs
lock
push
mov
aas
push
xchg
pop
movsb
std
das
dec
adc
lret
jo
jb
or
sbb
mov
fwait
mov
cmpl
std
iret
mov
xor
xchg
enter
ficoms
push
decb
ss
arpl
testl
jo
inc
pop
jecxz
push
fadds
fimull
pop
and
adc
push
jns
lds
mov
and
push
or
adc
cltd
xchg
sbb
rcrl
pop
jo
xchg
pop
stos
push
push
dec
pusha
or
push
mov
js
bnd
ja
in
nop
inc
icebp
xchg
xor
xorl
jae
and
jecxz
mov
and
or
sahf
sbb
lods
mov
movsb
fldl
dec
ret
or
lods
inc
loopne
mov
mov
mov
dec
dec
gs
adc
or
cmp
das
lods
mov
repz
inc
xchg
jo
loopne
jle
cmc
std
or
lds
mov
push
inc
rcrb
in
lock
cmpsl
test
cmp
dec
std
cli
sarb
sub
mov
ja
xchg
adc
adc
out
cwtl
or
loopne
sbb
arpl
mov
sbb
test
scas
test
enter
test
and
mov
jno
xor
inc
mov
jle
mov
iret
mov
push
dec
mov
add
inc
push
addb
test
mov
inc
add
push
xlat
or
dec
pop
adc
inc
insb
in
mov
inc
sub
icebp
xchg
inc
push
jl
cs
cmpsl
gs
roll
xor
add
push
cmp
rclb
fdivp
cmp
xor
ret
cmp
xchg
mov
mov
es
mov
sub
mov
xor
cmp
test
ret
jle
or
push
clc
or
mov
pop
xor
add
adc
inc
jge
pop
jnp
bound
mov
rcr
and
sbb
mov
push
fnstenv
mov
mov
mov
aam
pop
dec
adc
pop
cmp
adc
rorl
jmp
aad
push
jmp
xchg
or
push
add
jg
push
and
add
xchg
imul
push
sbb
daa
movsb
cmc
lret
mov
fisubrl
jmp
cli
iret
cmpsl
cmpb
shll
lds
popa
sbb
adc
mov
in
mov
das
pop
sahf
outsl
sub
jecxz
call
mov
sbb
and
sbb
or
call
jmp
cmp
lock
xor
aas
lods
inc
dec
cmp
push
push
sub
or
mov
les
push
mov
adc
dec
into
pop
or
adc
test
dec
scas
inc
push
inc
sbb
aaa
movsl
dec
sbb
xchg
sub
aam
push
ret
or
rcll
popa
sub
mov
and
sbb
fadd
imul
js
add
dec
enter
or
dec
xor
xorl
test
xor
mov
rcll
enter
mov
fistps
out
lock
adc
aad
sbb
div
jbe
fisttps
xlat
in
test
xchg
test
in
push
fildl
push
iret
dec
cmp
shlb
outsl
cmp
test
jae
xchg
fcmovnu
mov
push
mov
jo
fisubrs
pushf
jne
sbb
push
shl
jo
xor
fstpl
or
in
rcr
or
imul
dec
sbb
mov
and
jnp
out
fcoml
scas
inc
xlat
adc
adc
negl
adc
mov
popf
add
jg
fidivrs
cwtl
xchg
add
out
daa
mov
or
fbld
cmpb
aad
test
iret
in
xchg
mov
les
xchg
iret
or
mov
or
ss
les
push
aam
nop
jecxz
mov
push
adc
or
adc
ljmp
add
imul
loopne
pop
popa
sti
xchg
inc
subl
gs
inc
nop
repnz
fists
push
adc
sbb
ret
cmp
ror
and
add
add
aaa
popa
jp
push
mov
xchg
hlt
mov
xor
adc
adc
jecxz
sbb
or
add
in
jl
inc
fiaddl
pop
inc
out
jno
movsl
cwtl
clc
enter
nop
pop
push
enter
fldenv
cmp
aas
fists
mov
das
jecxz
add
daa
mov
or
and
xor
mov
leave
sub
cs
cwtl
adc
lds
ja
out
es
sub
mov
pop
xchg
sti
pop
sbb
imul
mov
test
and
and
lret
pop
mov
mov
push
cmp
inc
cmp
insb
push
mov
lock
fadds
scas
add
sti
inc
lea
jmp
sti
lahf
pop
dec
and
xor
fcomps
jle
jo
mov
or
add
lock
aad
push
stos
adc
dec
or
push
ja
cwtl
test
lret
inc
pop
lahf
pusha
mov
inc
jae
sub
fmul
sbb
ds
iret
and
nop
mov
inc
push
mov
mov
adc
pop
fwait
mov
or
shll
mov
adc
in
and
fucomi
cmc
daa
adc
ss
push
ret
scas
xor
mov
clc
pop
das
fbstp
sbb
ffreep
ljmp
adc
dec
call
jp
movsb
mov
ret
push
fildll
push
inc
popa
mov
dec
and
pop
mov
out
iret
mov
adc
push
add
iret
pop
pop
mov
push
data16
dec
add
scas
iret
pop
dec
adcl
jmp
cld
in
lock
jne
or
fwait
jbe
mov
and
jle
add
cmpsl
pop
xor
lret
xchg
inc
test
hlt
sbbb
cmp
jbe
test
inc
mov
iret
shlb
xchg
inc
loop
loop
adc
pop
aam
adc
mov
inc
jecxz
fdiv
andb
xor
das
rclb
ret
shl
xor
push
adc
test
mov
jo
xchg
jl
test
inc
mov
push
repnz
add
and
lods
sbb
outsb
mov
sbb
lret
push
sub
adc
push
pop
adc
arpl
test
test
pop
icebp
pop
dec
push
cmpsb
xor
add
mov
add
sbb
dec
fsts
mov
push
test
push
xchg
mov
data16
mov
xchg
inc
test
inc
push
cs
lret
and
cmpsl
jp
daa
stos
jnp
inc
das
lods
cwtl
mov
scas
loope
out
and
es
jbe
jg
cmp
ror
or
dec
mov
aam
aad
pop
mov
xor
dec
iret
addr16
jle
jb
nop
sbb
jo
add
pop
or
pop
test
hlt
or
xchg
push
push
movsl
jg
rcrl
rcrb
fcoms
outsb
fldl
jne
pop
jg
jo
orl
dec
pop
pop
push
cli
pop
rorb
cmp
arpl
add
dec
sub
mov
mov
pusha
push
daa
push
and
push
aaa
and
sbb
rclb
sub
int3
test
out
push
and
pop
mov
pushf
aaa
xchg
loope
cmp
lahf
add
rcll
add
jle
xlat
sbb
ds
mov
ja
or
inc
pop
mov
addb
push
jbe
icebp
mov
int
rorb
sbb
shlb
sub
add
cmp
or
lods
dec
pop
add
add
or
repz
cmpsb
jecxz
sbb
mov
cmp
pusha
daa
jno
mov
cmp
and
call
lock
xchg
mov
sub
mov
mov
cmp
repz
test
adc
fld
aad
jle
and
pop
xchg
inc
cmpb
add
sub
push
xor
sbb
xlat
dec
xor
mov
inc
or
mov
add
sub
orl
or
inc
sub
mov
orb
adc
jecxz
pop
mov
dec
rorb
ss
aad
shrb
fs
jne
dec
dec
pop
adc
add
inc
dec
sub
jge
imul
js
lods
xchg
das
xor
xor
and
sbb
int3
pusha
lods
adc
out
pop
dec
pusha
and
inc
xchg
adc
arpl
jnp
push
xor
sub
hlt
out
std
mov
in
popa
dec
das
add
xchg
subb
aaa
and
ds
xchg
imul
popf
adc
pop
jecxz
int
lahf
jnp
pusha
xor
mov
cmc
xchg
add
test
pop
lds
popa
loope
or
jge
cld
pop
iret
pop
pop
inc
insb
sahf
cmp
repnz
testl
test
cmp
lds
xchg
dec
cmpsl
leave
adc
das
mov
inc
fmul
idivl
or
add
jmp
inc
mov
or
push
mov
test
jge
add
dec
stos
xor
andb
nopl
mov
clc
xchg
inc
inc
push
sub
xchg
mov
ret
sub
out
cs
cmpsb
das
dec
into
sbb
rolb
push
xchg
data16
in
out
rolb
sub
dec
sbbl
test
xor
mov
push
pop
add
or
sbb
pop
ret
dec
bound
iret
push
push
mov
adc
rorb
iret
dec
sbb
jb
or
pop
fs
adc
ret
lahf
inc
rcl
and
push
dec
shlb
push
dec
xchg
push
jno
and
loop
or
add
inc
ja
xchg
inc
xor
int3
push
outsb
add
xchg
rcrb
mov
pop
aas
dec
mov
and
cmp
mov
outsl
inc
sub
icebp
mov
mov
dec
sub
jl
hlt
xchg
or
imul
sub
jae
cwtl
fidivl
mov
mov
js
loope
inc
sbb
sbbl
das
insl
adc
mov
xchg
xchg
jo
inc
das
scas
call
bnd
add
push
sub
and
mov
cltd
push
pop
call
in
int
ds
jo
loop
or
jae
dec
movsb
adc
sub
adc
xchg
into
fmul
dec
loope
mov
int3
xchg
loopne
mov
jmp
mov
jg
xor
and
mov
mov
pop
das
shlb
scas
cmp
ret
inc
dec
imul
cmp
rcr
movb
test
adc
test
leave
js
test
and
xor
cs
xchg
inc
inc
fsubs
into
pop
insb
or
enter
fsts
push
stos
and
xor
adcb
imul
pop
jno
rolb
add
aam
iret
sub
mov
push
push
sub
dec
ds
jbe
pop
and
pop
rorl
negl
mov
std
dec
dec
out
rcrb
shrl
pop
dec
inc
and
stc
iret
int
mov
add
and
add
inc
pop
pop
add
mov
popf
std
mov
push
lret
or
shrb
dec
sbb
jecxz
pop
cwtl
mov
dec
neg
lods
pop
or
or
or
mov
sub
sbb
sub
movsl
enter
test
nop
stos
lock
jne
in
jne
dec
cmp
mov
les
fs
ret
mov
lock
test
testb
out
push
lea
fildl
test
std
iret
and
push
arpl
mov
aam
lock
mov
sub
inc
nop
xor
sbb
xchg
orb
or
or
xor
iret
add
insb
jmp
jbe
and
les
cmc
inc
sub
xchg
dec
es
push
add
and
jle
add
lcall
iret
push
push
ficompl
jp
jno
xchg
xor
nop
mov
ds
cmp
sub
dec
jnp
push
mov
movsb
in
scas
jb
lods
jnp
mov
addr16
rcr
jle
data16
mov
xchg
ret
jno
test
lods
and
rol
roll
mov
aas
out
daa
inc
aas
inc
fistpll
in
aam
inc
inc
mov
addr16
cwtl
xchg
sbb
cmovnp
adc
sub
and
cmp
xorb
sbb
pop
jb
sbb
push
mov
mov
jnp
aam
dec
movsb
popa
dec
sub
xor
add
dec
and
inc
xlat
insl
pop
sbb
xchg
in
test
push
push
push
cmpl
shlb
and
pop
adc
sbb
jno
cmp
add
lret
cmp
fstps
xorl
or
xchg
sbb
rorl
pop
xchg
pop
mov
roll
and
push
lods
subl
orb
add
cmp
loopne
scas
and
leave
cmp
adc
pop
or
mov
pop
add
pop
or
add
push
sbb
lret
in
sbb
pop
pop
sarb
je
or
pop
adc
push
iret
add
jle
add
mov
inc
sbb
or
pop
das
lcall
das
nop
mov
sbb
push
aas
push
sarl
daa
iret
mov
lock
inc
push
mov
sub
pushf
gs
jp
les
stos
popl
ret
jns
pop
push
add
nop
into
jne
xchg
rol
leave
pop
lret
leave
add
lret
fucomi
out
call
test
xchg
push
mov
ja
push
push
xchg
mov
sub
loope
and
jmp
iret
mov
rcl
and
dec
int3
jo
jle
mov
adcb
mov
ljmp
mov
shlb
cld
add
or
and
push
pop
or
movsl
out
cltd
rorl
sahf
and
loop
movsb
adc
add
addl
sub
jmp
cmp
movsb
aaa
xor
mov
out
daa
dec
insl
push
sbb
loop
bound
and
sub
dec
mov
iret
hlt
jmp
jae
jmp
and
mov
jae
btr
mov
push
cwtl
fdivrs
jg
pop
cmp
sub
inc
filds
psllq
orl
jns
sbb
rorl
loope
outsl
movsl
xchg
xor
in
mov
inc
push
in
fimull
pushf
add
pop
xor
push
or
add
fadd
pusha
sbb
jae
stos
add
outsb
xor
push
cmp
jbe
lahf
xor
inc
inc
add
movsb
insl
pop
loopne
mov
xor
ret
adc
push
subl
or
rclb
aam
dec
jmp
sbbb
push
aaa
mov
cmpsb
ss
push
jecxz
adc
jns
les
pushf
xchg
sub
mov
rcll
add
or
pop
or
es
repnz
mov
call
add
cld
add
jp
or
mov
jge
fs
subb
pop
call
daa
add
call
sub
outsb
mov
mov
push
inc
xchg
xchg
shrb
or
mov
fcomps
push
pop
add
lock
and
jle
push
in
stos
pop
pop
mov
hlt
sbb
negl
call
fidivrl
push
xor
and
or
inc
add
pop
or
add
inc
or
inc
movsb
nop
cmc
leave
sub
std
push
cs
outsl
pop
mov
lods
inc
jnp
mov
add
or
sbb
sbb
push
imul
add
xchg
mov
mov
and
xchg
std
pop
fs
rclb
das
std
in
pop
add
or
and
sub
hlt
loopne
fists
movsb
call
dec
movhps
fildl
fsubl
lods
imul
popa
ret
mov
push
fs
pop
sbb
adc
aaa
push
and
movsb
scas
xchg
cs
cmp
stos
or
add
lods
xor
ds
movsb
inc
fwait
dec
xchg
and
add
fistpll
jmp
scas
je
pop
dec
push
fiaddl
fistps
add
dec
push
xchg
in
pop
jmp
mov
enter
shr
int3
aaa
jo
jbe
sbb
pop
add
add
dec
rorl
lds
fstl
or
sub
mov
mov
add
ror
nop
popf
jbe
call
pushf
sub
pop
lock
jno
inc
xor
icebp
adc
or
je
addr16
push
rcrb
lahf
ds
fucomp
int3
push
in
add
in
shr
xor
add
or
mov
mov
inc
xchg
daa
push
pop
jb
cmc
or
cmp
push
roll
push
pop
inc
mov
sar
aam
mov
add
roll
sbb
and
je
push
jnp
js
cmp
dec
outsb
push
popf
call
jno
and
stos
cmpsb
xchg
cmpsb
enter
push
and
js
mov
popf
sub
enter
inc
mov
orl
inc
jmp
pop
out
push
and
dec
sub
mov
inc
jbe
xor
loopne
je
jecxz
xchg
dec
jbe
dec
cmp
into
hlt
inc
insl
inc
jo
or
jg
fimull
clc
fsubp
pop
nop
sbb
scas
loop
xor
mov
fildl
in
fistpl
jp
push
sub
sti
and
mov
mov
jmp
out
out
pop
or
add
and
add
js
fisubs
sahf
cmpsl
pop
mov
sub
xor
cli
push
pop
negl
lock
ret
psubusb
scas
sbb
aad
add
xchg
mov
dec
les
loopne
scas
push
cld
add
scas
push
jbe
mov
push
lahf
inc
js
fldl
into
or
loopne
mov
jnp
scas
ds
sbb
idiv
dec
pusha
sub
xchg
je
testl
sbb
or
and
arpl
daa
jbe
push
lret
cmp
stc
jb
inc
out
add
addr16
pop
cmc
shrl
sahf
mov
iret
stos
push
xor
inc
stc
jo
bound
push
scas
or
mov
fcomps
fnstcw
fucom
sbb
pop
pop
daa
or
mov
icebp
fs
fists
addb
addr16
jge
pop
aad
aaa
fdivl
into
and
inc
sbb
lret
pushf
lods
aaa
ret
shll
cmpsb
je
ret
fld
lock
cwtl
adc
mov
xlat
adc
aad
nop
pusha
push
mov
js
xor
xor
dec
or
and
in
push
and
jl
iret
xor
jno
dec
jo
add
popa
and
test
or
add
lret
jbe
jno
faddl
pop
inc
mov
mov
or
es
addl
add
inc
arpl
loope
outsl
into
fsubr
push
mov
lret
or
js
push
add
mov
roll
and
ret
rclb
xor
xor
pop
inc
push
and
and
mov
lcall
and
insb
sbb
fbld
mov
add
jge
jg
cmpsl
mov
cmpsl
mov
orl
cmp
dec
mov
inc
lcall
lea
add
mov
cmp
aas
push
lea
xchg
mov
add
loopne
mov
mov
ret
out
aas
mov
lods
pop
rorl
daa
add
lret
lods
mov
int
jo
hlt
mov
out
push
add
or
fwait
mov
mov
xlat
outsb
mov
dec
or
push
cmp
je
cmp
dec
adc
mov
mov
scas
stos
inc
sub
lret
add
sbb
and
adc
mov
data16
xor
xchg
sbb
cmpsb
int3
fld
aas
xchg
jnp
stos
pop
jae
pop
ds
add
push
loopne
push
xchg
test
fcmovnu
and
pop
push
mov
pusha
add
xor
ja
add
test
aas
adcl
bound
rolb
pushf
adc
and
pop
lods
test
mov
sub
and
jne
push
in
loop
mov
pop
aam
pop
testl
adc
insl
repz
inc
movsb
push
cmp
xchg
sbb
js
loopne
adc
pop
inc
cmp
das
call
idiv
cwtl
jge
rol
xor
cmp
jmp
cltd
xchg
loop
hlt
into
jle
xchg
test
xchg
fildll
add
and
jg
ds
js
dec
out
sbb
sub
sbb
or
or
dec
pop
inc
inc
js
add
imul
std
jmp
jp
add
pop
daa
jecxz
shll
dec
ror
ss
sbb
loope
fs
iret
ret
ror
cmp
xor
sub
iret
pusha
jae
ljmp
adc
push
into
adc
lret
shlb
jns
add
inc
cmp
test
push
in
inc
loopne
push
cmp
imul
cld
cmc
andb
xorb
jmp
dec
adcb
sub
fbstp
int3
shlb
adc
rolb
jnp
inc
ja
dec
mov
mov
inc
adc
inc
dec
or
mov
adc
je
or
aas
and
pop
bound
rorl
fmull
mov
adc
adc
push
movl
addb
add
sbb
push
mov
je
imull
pop
or
sbb
inc
dec
imul
xor
and
xor
pop
cmp
nop
cmp
cmp
add
inc
jae
push
or
cwtl
mov
addb
loopne
push
add
mov
imul
xchg
in
adc
dec
mov
or
aaa
js
mov
xor
sbb
xor
add
push
psrlq
mov
sti
or
jge
movsb
and
arpl
imul
dec
inc
rep
add
push
and
daa
inc
mov
add
loop
jmp
cmpsl
lods
xor
pop
in
sar
and
lcall
fcomps
cmpsb
sar
divl
or
lods
repz
sub
xor
mov
outsb
mov
push
pop
mov
fcomp
in
das
bound
mov
inc
mov
xor
dec
push
fcmovnbe
add
xchg
aad
fimuls
fildll
xlat
lret
popa
and
insb
sbb
shlb
mov
cmp
xchg
mov
push
rolb
shr
mov
push
fdivs
ja
sub
dec
and
notb
ljmp
shl
je
cwtl
mov
xchg
fistpl
lret
popa
hlt
ss
jge
inc
addb
cmpl
fsubl
and
push
adc
scas
in
add
xchg
iret
aad
cmovbe
sar
jl
lahf
ret
ja
int3
div
mov
bound
pop
pop
xchg
jo
jp
pop
scas
sbb
popf
mov
xchg
iret
inc
lahf
ja
lock
imul
jmp
loopne
mov
pop
dec
lret
imul
add
cmp
scas
mov
pop
popf
inc
rolb
and
aas
xchg
add
les
xor
jmp
push
fiadds
jns
test
xchg
pop
or
es
inc
addb
or
and
jnp
cmp
xchg
loopne
add
and
imul
sbb
mov
fadds
or
mov
in
test
push
cmp
imul
pusha
sbb
inc
jae
mov
shrl
cld
ficoms
cltd
or
dec
xor
lods
sub
es
push
jmp
sbbb
mov
inc
sub
add
mov
dec
or
sub
sbb
pop
mov
inc
cmpsb
call
test
dec
dec
pop
and
sbb
mov
imul
pop
or
xchg
push
ret
pop
or
push
das
adc
mov
sub
adc
and
les
cltd
repz
adc
or
xor
sbb
orb
add
sbb
popa
insl
call
xchg
push
jmp
rclb
lahf
xchg
iret
pop
cmp
cmc
pop
inc
add
sub
mov
addr16
push
cs
pop
or
ja
insb
ds
sbb
adc
push
sbb
cmc
push
xchg
push
enter
pop
shlb
mov
add
cmp
inc
cmp
nop
cli
iret
test
inc
pop
jp
xchg
sahf
cmp
stos
adc
cmpsl
hlt
test
outsl
add
push
test
jmp
sub
test
jne
xchg
fildl
jae
imul
inc
and
nop
or
fs
fcoms
fiadds
push
js
call
sub
pop
sbb
push
fbld
sub
cmp
out
jmp
xchg
dec
out
xor
das
jmp
aas
jno
iret
sub
dec
sub
je
pop
xlat
pop
and
jg
dec
add
stos
rcrl
cmp
daa
push
bound
ss
cli
hlt
pusha
pusha
pusha
jo
loope
dec
movsb
int
xchg
lea
stos
add
insl
clc
fadds
mov
inc
ret
das
stos
popf
sarl
stc
push
sahf
dec
adc
xlat
sarl
cmp
test
inc
sbb
jae
push
nop
push
dec
adc
or
jb
mov
sti
mov
jo
and
dec
shlb
insl
push
insl
int3
pop
lret
mov
mov
pop
sub
mov
adc
dec
test
cmp
bound
sub
dec
lods
jo
popa
or
adc
push
inc
loope
es
ret
sub
roll
jp
aaa
or
in
jbe
sbb
jmp
aas
adc
mov
fdivs
sub
push
iret
xlat
std
cmp
xchg
or
mov
fdivrs
or
push
jo
adc
std
or
or
jmp
add
mov
cltd
inc
cltd
clc
mov
adc
fsub
xchg
or
fstp
adc
push
sub
sub
out
add
sbbb
push
fadds
push
push
gs
fsubrs
push
jecxz
je
roll
lret
xor
sbb
pop
ljmp
cmpsb
push
inc
or
repz
cli
pop
adc
push
and
rcll
hlt
and
pusha
xchg
imul
clc
sub
rorb
int
pop
js
inc
and
xchg
jo
in
cs
lods
xchg
pop
stc
push
cltd
jo
ljmp
xchg
rcrl
clc
clc
sbb
xchg
ret
lcall
xchg
sbb
sub
scas
bound
mov
scas
sbb
cmovne
imul
mov
dec
or
test
sub
arpl
ret
mov
jo
clc
sbb
sub
mov
push
pop
daa
in
sti
cmp
sub
push
dec
xor
lea
mov
ja
inc
pop
adc
mov
xchg
and
test
or
shr
daa
fwait
sub
clc
add
and
dec
rcrb
test
lock
mov
add
cmp
icebp
stos
aaa
ret
add
push
pusha
loope
dec
push
adc
inc
test
scas
aaa
lods
lahf
push
push
push
mov
fs
jg
ror
sbb
or
inc
test
shlb
aaa
add
and
loop
cltd
xor
or
imul
mov
fdivrl
mov
mov
ss
mov
sub
fisttpl
push
popf
mov
mov
push
cmpps
cs
rclb
xor
push
enter
aaa
jo
adc
pop
sbb
enter
xchg
mov
fidivl
aaa
pop
iret
cwtl
xor
inc
in
adc
inc
out
mov
mov
mul
jecxz
rclb
call
jno
and
repz
mov
push
mov
dec
imul
stos
dec
imul
jnp
dec
inc
cwtl
inc
dec
pop
sbb
rolb
repz
gs
pusha
iret
in
cmpsb
inc
lret
jle
mov
xchg
cli
jmp
push
addb
scas
inc
sbb
repz
cmp
push
cmp
dec
movsl
scas
aam
add
xchg
imul
inc
test
sub
dec
adc
shrl
loope
jge
das
mov
mov
dec
jmp
je
ret
icebp
or
jmp
mov
inc
das
ss
imul
movsb
movsb
lock
call
cmp
fidivrs
push
data16
int
es
icebp
int3
push
jmp
sbb
adc
mov
push
push
jecxz,pn
subl
cld
cmpsl
dec
push
dec
xor
dec
pop
inc
xchg
sbb
mov
xchg
subb
mov
and
inc
dec
adc
sub
ss
inc
or
xorb
jecxz
inc
dec
jo
popf
rcl
jbe
pop
add
adc
fwait
rolb
cmp
icebp
inc
arpl
je
rorl
sub
shlb
and
call
dec
lea
adc
adc
xlat
cmp
inc
fistl
xor
in
add
adc
out
inc
push
rolb
xchg
add
xor
jecxz
cmpsl
pop
jp
out
leave
in
xchg
je
or
jno
ret
stos
dec
and
ja
xor
jl
scas
ret
imul
sbb
pop
or
addr16
hlt
inc
sbb
xchg
popf
push
add
xor
cmp
hlt
xlat
add
pop
inc
dec
clc
jmp
cmp
enter
stc
lock
sub
ret
movsb
xchg
xor
mov
loope
rorb
ret
andb
mov
adc
sbb
loop
adcb
loope
loop
into
pushf
mov
mov
pop
jo
icebp
pop
push
gs
add
mov
and
call
or
and
cli
lcall
mov
cmp
pushf
and
leave
arpl
fildll
loop
pop
add
aad
clc
inc
add
inc
and
popa
sbb
lcall
js
repz
int
mov
cltd
stos
lods
push
call
sbbb
in
fisttpl
ret
aaa
xor
sub
add
subb
sbb
mov
cmc
jo
testb
sub
rcrl
push
ljmp
loope
movsl
inc
push
aas
fsubr
pop
fldl
or
nop
jge
inc
xchg
or
fidivrs
sub
sahf
testl
xor
arpl
lea
das
pop
bound
out
iret
cmp
loop
cwtl
jo
or
lea
ficoml
push
leave
xor
inc
dec
js
or
ret
mov
in
lods
std
rclb
sub
adc
or
xor
sub
ficoms
xchg
push
push
sbb
sub
xchg
aas
cltd
in
dec
inc
mov
xchg
dec
lea
cmp
rorl
push
mov
inc
cmp
dec
xchg
add
mov
shll
sbb
idiv
xor
roll
mov
adc
add
jbe
xor
dec
fldt
sub
shrl
ret
jno
sub
dec
loope
es
xor
fmuls
xor
sbb
and
iret
outsb
pop
fwait
push
shrl
add
dec
mov
push
das
aam
sub
outsl
call
lret
or
xor
xchg
addr16
jmp
mov
aam
shll
cmp
or
and
cmp
cmp
mov
jecxz
xchg
aaa
xchg
pop
push
pop
jle
xchg
push
and
fcompl
dec
add
fwait
outsb
push
adc
pop
dec
xor
push
jl
test
xchg
testw
addr16
mov
repnz
arpl
push
pop
xor
sbb
sbb
loope
aad
sar
add
mov
fadds
sbb
imul
push
jnp
test
and
rclb
add
adc
dec
cld
jbe
sub
adc
mov
pusha
sub
push
loop
and
xor
out
xor
ljmp
pop
test
gs
cwtl
sub
hlt
add
call
xchg
ret
add
sub
rclb
push
pop
inc
push
xchg
push
jle
jp
jle
add
dec
push
rorb
fwait
ja
adc
test
xor
ja
push
inc
xor
add
mov
push
mov
add
adc
stos
lret
cmp
cmpsb
add
loopne
pop
adc
enter
lret
fsubrs
test
push
add
pusha
addr16
shr
cli
mov
xchg
sbb
adc
int
mov
int
imul
dec
out
pushf
iret
mov
imul
jno
sbb
xor
in
push
pop
jnp
inc
call
pop
loopne
cmp
loop
inc
jmp
loopne
outsl
and
lahf
push
adc
inc
sbb
iret
mov
bound
add
jp
pop
not
and
loop
sbb
cs
pop
int
jo
fs
jl
adc
adc
cmp
js
add
sbb
mov
xchg
test
mov
or
cltd
popf
rcl
pusha
push
xchg
or
inc
inc
loopne
jp
cltd
or
lahf
jge
je
add
cmp
inc
pop
jne
add
andb
push
das
hlt
lock
inc
push
addr16
xchg
shlb
inc
adcl
sbb
sbb
mov
in
loopne
push
push
add
and
and
add
mov
fldcw
aaa
test
mov
icebp
ret
and
pop
push
in
lods
hlt
rcl
pop
arpl
jo
fninit
mov
and
xchg
shl
fiadds
push
jae
mov
pop
fwait
adc
add
std
push
ret
daa
ret
movsb
pop
and
sub
cwtl
and
test
sub
pop
ljmp
push
mov
inc
dec
insl
dec
mov
mov
movb
cld
addl
jb
mov
jbe
sbb
lods
push
fdivs
sarl
mov
mov
fwait
sbb
xlat
dec
aaa
and
movsb
mov
fs
pop
adc
or
xor
push
push
cmp
insl
pop
movsl
push
es
mov
add
sub
mov
xor
es
outsb
and
adc
jmp
push
popa
mov
mov
je
xchg
inc
pusha
or
sub
or
sbb
aam
pop
sub
add
cmc
daa
jno
push
pop
decb
fs
inc
sub
sarb
mov
dec
je
add
sbb
sub
adc
pop
fidivl
push
mov
popa
daa
icebp
sbb
and
xchg
or
leave
lret
push
xlat
mov
mov
dec
insb
in
out
xchg
lods
sahf
jmp
cltd
cmpsl
adc
xchg
or
stc
scas
fs
adc
lds
sbbb
or
int
mov
out
call
inc
add
cmp
xchg
mov
cmp
hlt
sub
jp
push
arpl
mov
xchg
and
add
lds
pop
scas
mov
inc
sub
mov
push
lock
movsl
sbb
adc
test
mull
xchg
fmuls
inc
rep
cmp
arpl
push
sbb
js
sbb
cmp
fstl
sarl
loopne
je
cld
shrb
jne
mov
add
sbb
mov
push
push
push
add
cmpsl
rcr
mov
cmp
add
in
jp
jo
mov
loop
sbb
movsl
adc
imul
sub
das
sub
mov
push
out
faddp
inc
fmuls
insb
jp
ja
leave
push
ds
pop
push
sub
sub
lret
jge
ljmp
xchg
mov
aaa
push
je
loopne
add
lcall
ja
iret
sbb
shll
les
inc
add
dec
mov
sti
sub
ds
inc
or
cmp
jne
inc
cmp
jle
loop
int3
test
ds
pop
pop
lock
sub
cmc
jns
push
cld
mov
pop
daa
push
sub
test
add
mov
sub
jg
dec
dec
loopne
mov
iret
add
mov
lods
cmpsb
std
dec
sub
rorl
dec
add
ss
fcompl
shll
loopne
les
das
cs
inc
sbb
sub
cmp
nop
xor
iret
out
pop
cmpsl
sbb
sbb
dec
mov
xchg
les
mov
dec
xor
repz
dec
and
sub
loope
js
dec
lods
dec
cmp
mov
popf
mov
icebp
push
cmp
adc
negl
fnstcw
adc
shlb
daa
movsl
add
sbb
aam
jecxz
or
jo
call
add
inc
lret
insb
and
stos
fs
hlt
add
pushf
or
fisttpll
or
nop
ret
fnstcw
shlb
cmpsl
add
pop
popa
insb
imul
push
mov
adcl
add
stos
sbbb
dec
dec
xchg
sub
das
dec
jl
push
pop
jle
add
add
cwtl
push
ja
mov
cmpsb
out
mov
mov
add
jle
dec
pop
or
out
int3
add
xchg
mov
or
dec
std
out
mov
dec
push
mov
pop
cmpsb
and
mov
fsubrs
cmpsl
popf
rcrb
mov
mov
jae
adc
test
cmp
mov
xor
mov
adc
lea
and
addr16
push
daa
loopne
sub
jmp
or
pop
or
rorb
jbe
push
add
adc
inc
mov
scas
add
mov
sub
mov
rorl
popa
ret
xchg
jp
outsb
xchg
lock
fldenv
mov
cwtl
mov
push
popa
xor
clc
scas
add
xor
shl
add
out
mov
push
clc
es
lahf
mov
dec
in
loopne
popf
mov
jl
jo
insb
cs
push
sub
sub
push
push
mov
aaa
scas
movsb
in
pusha
into
test
pop
gs
outsl
es
xlat
lret
shrb
add
pop
popa
rorb
jp
arpl
sbb
and
jbe
pop
sub
sahf
sub
pop
dec
rclb
mov
and
xchg
dec
dec
rolb
jp
push
mov
push
lods
dec
ret
sbb
or
and
inc
jno
jl
mov
push
iret
inc
lds
int3
push
cwtl
push
dec
ret
mov
bound
jge
and
inc
in
leave
cmpsl
push
sub
daa
cltd
and
mov
cmpb
jb
xchg
dec
lods
nop
les
push
sbb
ret
adc
push
adc
sbb
push
add
push
mov
test
add
scas
sbb
shl
xlat
inc
lods
dec
fstpt
out
cmpsb
ss
and
push
in
push
ljmp
sets
and
sub
adc
ret
jns
jg
negb
add
pop
push
mov
popl
add
ret
mov
push
loope
adc
and
mov
pop
hlt
add
add
pop
addr16
mov
or
aaa
fisttpl
push
daa
or
ret
fdivl
mov
jnp
shlb
int3
xchg
push
mov
mov
or
jno
int
lea
ljmp
mov
cwtl
push
cmpsb
inc
std
nop
arpl
add
xchg
xchg
inc
sub
fs
roll
mov
or
sub
je
push
lods
imul
stos
xor
rcl
dec
push
jge
and
es
dec
jno
ss
dec
jp
xchg
hlt
and
pop
inc
mov
inc
sbb
mov
jmp
std
mov
adc
les
or
mov
inc
icebp
loop
cli
inc
add
js
nop
xor
pusha
pop
test
adc
add
test
pushf
pop
les
mov
add
jmp
in
loopne
clc
loopne
mov
test
xlat
shll
loopne
and
add
sub
inc
or
mov
iret
addb
mov
fcmovne
in
sub
mov
and
or
or
xor
loope
mov
jmp
adc
jmp
call
movl
xchg
cmp
add
jb
sub
ficomps
lods
mov
sub
iret
ss
sbb
rolb
dec
je
mov
cmp
pop
sbb
add
adc
add
or
add
int3
add
or
mov
test
ja
xor
mov
push
or
xorw
push
push
jge
dec
push
sub
sbb
add
inc
add
push
jecxz
lods
adc
out
test
push
adcl
push
mov
jle
jno
stc
mov
or
dec
je
pop
add
fldcw
mov
mov
gs
mov
sub
ret
clc
fisubs
pop
addl
dec
repnz
add
push
cltd
cs
push
mov
inc
mov
leave
push
jecxz
addb
jb
jmp
cmc
ss
xchg
adc
jae
and
js
and
movsb
lahf
sub
cmpsl
sbb
sub
sub
and
and
or
imul
mov
les
pop
fsub
xlat
insl
and
int3
add
shll
fwait
mov
in
mov
adc
mov
add
cmp
mov
dec
fs
lods
add
push
fst
or
inc
jb
or
dec
and
test
add
cltd
mov
roll
or
shll
movsl
jmp
add
xchg
mov
sbb
add
mov
arpl
mov
pusha
lock
shrb
adc
lods
jle
in
pop
jae
in
adc
mov
and
add
popl
jo
xor
adc
cmp
sub
daa
adc
adc
das
cmc
sub
pop
mov
adc
cmp
pop
int
or
lods
in
add
pop
insb
outsl
mov
pop
add
bound
add
adc
clc
mull
test
xor
clc
xor
xor
lods
and
out
push
rcrb
popf
ret
cwtl
push
or
push
xchg
xchg
xor
frstor
cs
mov
js
mov
sub
add
sbb
imul
js
mov
dec
jnp
pop
jge
pop
lock
xor
imul
pop
arpl
arpl
push
mov
test
sbb
pop
punpckhbw
ss
add
jns
adc
adc
test
dec
loop
jne
pop
stos
adc
sbb
jno
ss
xchg
imul
pop
push
mov
popa
adc
shll
pop
sbb
arpl
or
addr16
dec
mov
sub
xor
fists
add
lahf
push
and
nop
add
loopne
add
mov
jo
subb
add
sub
sub
jno
mov
insl
mov
inc
dec
lods
push
or
in
add
rclb
mov
sub
pop
xlat
stc
movsb
jmp
mov
push
xor
xchg
cwtl
lret
dec
push
imul
stc
stc
rorl
aaa
lods
add
add
push
imul
pop
sbb
mov
sbb
add
jmp
add
bound
dec
mov
add
jo
xchg
arpl
adc
adc
push
xchg
or
lcall
lods
add
push
add
push
inc
lcall
popa
jne
pcmpgtb
cmc
adc
push
add
out
loopne
dec
lods
mov
dec
ret
outsl
fnstcw
sbb
into
sbb
inc
sub
stc
inc
hlt
and
int3
xor
in
lahf
cmp
pop
sub
jae
mov
mov
test
cmc
aad
outsb
and
imul
pusha
jle
loopne
mov
and
imul
adc
in
push
xor
pop
jo
sub
xor
push
pusha
cmp
sub
add
xchg
les
add
or
inc
ret
testl
outsl
repnz
push
xor
psubsw
sub
out
and
cli
cmpsb
test
rcrb
adc
in
mov
jbe
jmp
mov
jno
push
outsb
mov
jb
loope
cltd
repnz
mov
jge
enter
scas
daa
test
ret
outsl
insl
and
mov
nop
and
ror
aaa
repnz
sub
insl
repnz
lods
loope
daa
add
sbb
sti
lahf
push
cwtl
pop
mov
xor
pop
add
loope
sub
loopne
xchg
pxor
fstp
sti
jecxz
inc
add
loop
into
cmpsl
mov
insl
les
inc
mov
push
sbb
movsl
pushl
lods
or
add
cli
mov
adc
repnz
repz
sub
pop
das
and
or
pop
jb
pop
lock
outsl
and
ss
or
loop
test
stos
add
cs
pusha
aam
movsl
insl
mov
xchg
mov
mov
imul
in
add
fs
fists
pop
mov
insl
add
nop
loopne
mov
and
inc
or
add
push
inc
pextrw
ja
jnp
sbb
lock
xchg
stos
and
lods
lahf
sbb
add
nop
add
pop
cmp
sbb
icebp
jns
fs
dec
jle
cmc
adc
js
adc
xchg
sahf
or
xchg
mov
dec
inc
add
cmp
daa
sbb
inc
add
filds
adc
dec
loop
push
jb
jp
into
or
pcmpeqb
adc
inc
mov
or
es
leave
pop
mov
jecxz
or
aam
insl
xlat
sub
adc
popa
push
out
inc
sbb
insb
push
arpl
jo
and
add
ffreep
test
cmpsl
jnp
add
mov
and
sbb
sub
outsb
inc
cmp
cmc
mov
jne
and
orb
jae
cmp
sub
jno
adc
shrb
popa
dec
dec
sbb
adc
fstpl
or
sub
sub
mov
cmp
xchg
insb
movb
jge
loop
insb
shlw
mov
mov
out
sub
rclb
mov
mov
or
ret
push
or
jecxz
sub
imul
jo
add
adc
adc
cmp
pop
dec
fiaddl
xlat
xchg
cmp
lods
sbb
aaa
pop
or
cmp
push
imul
aas
cmpsl
sub
adc
inc
andb
adc
lcall
movsb
push
mov
fsts
or
mov
mov
push
arpl
pop
test
stos
loope
push
aam
bound
pop
and
add
jp
cmc
add
out
outsl
or
mov
xchg
xchg
ret
or
or
add
mov
mov
andb
popa
rclb
inc
movsb
xor
pop
add
add
adc
adc
cs
add
ss
adc
or
dec
insl
mov
push
mov
adc
dec
add
add
rcrl
in
popf
imul
sahf
fsts
pop
popf
mov
jbe
sub
inc
test
sub
stos
jg
inc
lcall
imul
adc
cli
and
dec
inc
scas
cwtl
pop
es
int
jmp
xchg
jo
and
cltd
mov
mov
aas
inc
xchg
sub
fidivs
lahf
xchg
jecxz
mov
jecxz
and
or
xchg
imul
add
lods
in
add
iret
sarl
outsl
fcom
dec
xchg
insl
and
pop
or
mov
imull
in
jne
mov
aas
xor
out
dec
in
aaa
adc
jbe
mov
push
cmpsl
popa
sahf
adc
data16
sbb
insl
lods
or
hlt
test
data16
inc
int
mov
sbb
xor
jae
sub
outsl
mov
in
add
cmpsl
mov
insb
popf
xor
mov
mov
pop
inc
js
ror
fcompl
mov
fisttps
pop
icebp
scas
mov
fdiv
adcb
jno
fnsave
out
out
out
pop
popa
push
outsl
jbe
fsubrp
test
lea
push
call
xor
jne
pop
aas
mov
sub
loope
test
jecxz
push
fimuls
iret
xchg
out
fnsave
in
loope
mov
das
sbb
xor
in
cmp
mov
js
sbb
push
or
inc
stos
lea
adc
addl
fnstsw
sub
sbb
shl
push
mov
fldenv
lahf
aas
push
push
dec
daa
stos
mov
dec
fnsave
jp
nop
add
addr16
cmpb
lods
lods
pop
add
pop
lods
cmp
pop
dec
mov
movsl
adc
inc
ja
loope
sbbb
out
mov
xchg
xchg
lea
mov
lahf
sub
inc
dec
cld
lea
or
cltd
mov
add
test
and
push
pop
xchg
aaa
sbb
test
es
mov
nop
mov
das
sbb
mov
fwait
dec
out
or
and
aas
cmc
nop
jo
insl
cmp
icebp
popa
scas
jmp
rcl
cld
outsb
add
cmp
jg
ret
add
pushf
popf
dec
sbb
xchg
cmp
movsb
xchg
popf
shlb
push
adc
ret
sub
loop
fisubrl
fs
adc
scas
lret
inc
nop
xchg
sbb
imull
cwtl
sub
jle
mov
mov
popa
sub
cmp
shl
add
insl
sbb
gs
jge
sbb
mov
and
jg
jmp
jae
mov
xor
dec
add
xchg
push
rclb
mov
test
cmpsl
or
andb
dec
sbb
mov
subb
in
imul
cwtl
add
pop
int3
jbe
fs
sub
or
std
dec
pop
rolb
jnp
sub
xor
sub
sub
lcall
push
xor
mov
add
les
mov
mov
or
add
cmp
lods
movsl
jo
loopne
mov
jns
mov
scas
push
xor
push
xchg
sbb
filds
jnp
jnp
imul
ret
mov
daa
add
pop
add
inc
sub
adcl
mull
pop
push
adc
pusha
add
pop
sub
add
popa
lds
fsubrl
lea
mov
inc
cmp
subb
sub
nop
mov
adc
push
bound
or
mov
test
and
lcall
sbb
orl
inc
sbb
jmp
sub
or
subl
push
lds
push
sbb
scas
pop
lret
divl
scas
addr16
adc
lret
add
mov
stos
cld
add
add
mov
xor
add
or
pop
add
nop
nop
movl
mov
jl
mov
jp
and
fwait
das
adcb
jo
rcrb
and
mov
movsb
test
inc
test
cmpb
sub
ss
cli
or
pop
push
addb
xor
cs
scas
jno
add
cmp
lods
adc
add
lea
jo
jl
rcrl
add
jae
test
mov
lock
mov
enter
push
and
loope
mov
mov
jle
loop
inc
rol
enter
nop
mov
or
push
stos
int
leave
packssdw
fadd
ret
cmp
ret
and
test
push
andb
push
xchg
lret
sbb
add
les
aaa
out
lahf
sub
addr16
or
popa
dec
and
je
lock
jb
les
icebp
jae
xor
xor
imul
lret
add
and
iret
add
ja
add
push
and
dec
pop
iret
add
add
test
sbb
sub
and
xchg
add
sbb
xor
imul
outsl
xor
inc
gs
push
sub
fiadds
push
scas
xchg
mov
insl
xchg
push
add
fstpl
pop
mov
adc
cmp
scas
mov
ja
sbb
sbb
into
mov
into
push
test
adc
inc
add
mov
jns
push
push
mov
dec
ljmp
sbb
lahf
cwtl
mov
push
sub
cli
inc
sub
or
jbe
sbb
std
add
sahf
add
or
dec
adc
add
cltd
or
sub
xor
lea
xchg
add
mov
and
push
mov
pop
add
add
cs
lret
inc
add
into
pop
loopne
pop
add
xor
mov
pop
add
pop
mov
in
xor
pop
xor
es
sbb
adcl
pusha
in
fbld
mov
add
jnp
and
es
bound
loopne
cmp
popf
jae
gs
fwait
add
cltd
jo
ja
je
scas
xor
pop
lods
cmp
push
xchg
xor
xor
pop
lret
cmc
push
cli
sbb
insl
icebp
cs
imul
push
push
pop
sbb
fnsave
mov
add
sbb
outsl
mov
push
xor
xchg
popf
jnp
mov
inc
jnp
lret
mov
daa
mov
outsb
imul
jle
or
add
add
adc
iret
mov
cmp
and
pop
pop
or
subl
jo
xchg
in
sbbb
insb
bound
add
sarl
in
add
cmp
inc
jne
imul
or
mov
cmpsb
push
ficoms
in
jbe
add
adc
xlat
aas
iret
ljmp
xlat
je
out
jne
loopne
xor
sahf
shlb
pop
dec
lods
rcll
sub
xlat
popl
hlt
xor
sub
pop
xchg
iret
scas
jg
adc
sub
mov
lea
mov
add
rolb
ja
jns
dec
scas
pop
insl
sub
push
add
pusha
mov
jo
adc
sub
je
and
movsb
push
inc
mov
push
or
adc
mov
fdivs
add
subb
mov
push
lock
jp
icebp
add
add
cmp
js
push
add
add
inc
or
jae
push
fs
jbe
js
adcb
or
add
pusha
or
outsl
jp
add
add
xor
bound
dec
add
mov
push
fcoms
sbb
xor
scas
adc
daa
add
data16
shlb
or
add
pop
shlb
lock
add
inc
xchg
xor
pusha
jo
pop
jno
stc
jo
mov
jp
roll
or
pop
push
ds
daa
cmp
add
test
mov
add
mov
addb
add
pop
sub
push
loopne
sti
and
add
pop
sub
into
sub
push
addb
inc
xchg
rcl
push
add
decl
adc
movsb
add
daa
push
adc
sub
or
out
push
sub
or
xchg
and
cmp
cli
sub
cmp
std
dec
xorb
dec
loopne
lock
outsl
jp
hlt
mov
mov
repz
xor
push
fdivrs
add
daa
jmp
push
xlat
das
imul
jmp
add
cs
int
and
addb
xor
mov
ss
call
or
scas
rcr
mov
daa
ret
insb
adcb
lods
icebp
xchg
mov
in
es
dec
add
mov
xorb
inc
fwait
jmp
add
std
pusha
mov
pop
lcall
in
sbb
push
jmp
adcb
jecxz
sbb
pusha
jmp
xor
pushf
les
xor
pop
inc
pushf
sbb
add
out
scas
and
les
lret
and
addb
aaa
push
jo
hlt
xchg
pusha
xchg
xchg
cmc
jmp
lock
in
ja
jl
shlb
shl
stos
adc
sub
aaa
push
hlt
inc
cmp
shrb
or
and
and
cmc
mov
add
ds
sbb
add
in
icebp
pusha
add
sub
insb
add
and
fstps
les
mov
daa
mov
in
xchg
les
cmp
repnz
push
push
sub
pop
lods
add
dec
push
jecxz
mov
or
or
mov
xchg
scas
lcall
outsb
and
stos
insl
inc
add
aas
dec
pusha
fnstsw
add
aaa
fs
scas
or
push
cmp
sahf
push
ss
adc
or
mov
push
or
adc
sub
das
daa
sar
sbb
int3
and
xor
pop
enter
add
mov
lret
jnp
pop
push
movb
xor
iret
xor
or
jbe
mov
mov
jo
mov
mov
pusha
lret
sbb
out
out
adc
inc
add
dec
add
adc
popl
xchg
mov
das
xchg
push
call
cltd
push
imul
stos
add
sahf
pop
adc
push
nop
push
int3
push
pop
movsb
cs
lods
outsb
push
and
mov
jle
xchg
xor
adc
add
stos
cmp
inc
lea
sub
sar
and
mov
stos
clc
gs
and
fldt
pusha
adc
icebp
mov
pushf
mov
int3
test
cmp
add
in
imul
pop
or
out
push
test
or
fiaddl
out
sahf
out
shl
or
add
ds
mov
or
push
out
daa
add
lods
shr
out
or
shr
fwait
out
cwtl
inc
lock
into
add
xchg
fadds
adc
adc
mov
aaa
and
loopne
add
decl
inc
inc
iret
adcb
jp
test
sbb
int
mov
hlt
cltd
inc
jge
shll
sub
mov
add
push
mov
xchg
jo
mov
jbe
sbb
int3
push
mov
push
pop
adc
push
lahf
outsl
jp
pop
dec
xor
push
push
jbe
fwait
sub
and
inc
inc
subl
sbb
fldt
cmp
push
pop
sub
flds
xor
inc
jmp
cmc
jnp
dec
ljmp
out
push
pop
inc
fincstp
dec
and
jne
add
test
xor
add
out
and
leave
insl
out
popl
sbb
and
sbb
cmpsl
or
pop
aam
cmc
xchg
iret
jb
or
mov
dec
jns
adcl
lock
das
shl
adc
pusha
out
mov
sub
clc
rcrl
es
pop
add
mov
shlb
lret
adc
inc
sbb
or
adc
push
dec
or
je
xor
clc
or
mov
mov
imul
sub
dec
aam
les
cli
mov
out
pop
adc
mov
xchg
jae
adc
je
dec
aas
inc
mov
sub
sbb
ja
jb
add
dec
lahf
adc
lds
fadd
pusha
cmc
add
mov
or
out
test
outsl
mov
mov
insl
xchg
js
movsb
push
pop
call
cmp
cmp
pop
filds
cmp
popf
inc
jge
sub
and
adc
sub
and
call
sbb
and
aad
scas
sbbb
sub
or
cli
add
test
xor
lret
mov
push
nop
adc
adc
je
sub
jp
sub
mov
mov
iret
sub
popa
mov
lods
stos
pop
dec
or
add
mov
mov
mov
and
ffree
cltd
loop
cli
cltd
jp
mov
lods
popf
jl
roll
jg
mov
rcrb
aad
ss
sbbb
aad
sti
or
test
add
xor
cmp
and
dec
cmpsb
jge
dec
push
add
rorb
sub
in
movsb
pop
enter
cmpsb
dec
xor
cmp
jmp
and
add
addl
push
sub
leave
fcoml
inc
rclb
fstpl
push
aas
pop
mov
cmpb
sub
arpl
dec
xor
dec
or
push
sbb
dec
pop
adc
insl
mov
enter
pop
and
pop
mov
cmp
fdivs
outsl
add
dec
pop
jecxz
aad
cmpsl
pop
xchg
jb
mov
add
popf
and
mov
sub
mov
xor
sub
inc
test
clc
add
xor
xor
sarl
dec
iret
test
or
sub
lods
mov
inc
push
outsl
mov
in
mov
xor
cmpb
aaa
je
fstpl
or
call
sbb
sbb
adc
add
mov
imul
inc
cli
or
sbb
mov
sbb
add
inc
or
push
mov
add
sbb
int
imul
int3
outsb
lds
jae
jne
add
mov
adc
ss
xchg
inc
push
mov
push
or
iret
enter
sub
test
icebp
mov
jae
movsl
push
push
sub
popa
xchg
jo
iret
add
sbb
adc
js
mov
call
jmp
jb
mov
cmp
add
out
int3
inc
jp
mov
nop
push
or
adc
pushf
punpckldq
adc
xor
imul
test
dec
stos
test
int3
rcl
orb
movsl
out
push
push
push
adcb
jae
pushf
mov
xchg
xor
lret
sarb
andb
test
out
mov
sub
imul
pop
incb
lea
icebp
xorl
jns
jge
cwtl
clc
lock
cmpsl
addb
movsl
test
xchg
out
les
mov
or
or
test
fisttpll
mov
pop
test
sub
fs
loopne
inc
sarb
loop
sbb
cmp
clc
pop
xor
push
ud2
js
push
jg
or
pop
mov
xor
aas
xorb
push
or
mov
mov
and
add
mov
xchg
and
jno
or
leave
test
dec
and
mov
inc
mov
mov
add
pop
mov
inc
push
push
jne
ljmp
add
mov
mov
push
dec
cmp
xor
sub
add
inc
xchg
test
add
js
pop
fbld
fcoml
push
mov
sbb
fs
orb
mov
popf
es
or
xor
adc
in
jo
hlt
mov
xchg
rclb
dec
jmp
mov
scas
in
jl
dec
dec
jmp
outsl
dec
mov
mov
in
xor
daa
add
mov
pop
in
sbb
jo
in
pop
test
jbe
lds
pop
popa
xchg
push
or
out
fdivrs
jl
into
in
xor
movsl
shrl
shll
dec
jle
xchg
aaa
add
xchg
xchg
push
sub
scas
mov
call
sbb
sub
data16
cmpsl
xor
pop
pusha
add
lret
sub
push
adc
pop
dec
inc
or
scas
je
orb
push
and
add
mov
popa
stos
mov
sbb
loop
jmp
icebp
push
test
add
and
adc
mov
add
push
addr16
jns
aad
neg
jne
mov
push
clc
iret
mov
andl
mov
mov
inc
mov
mov
xor
ds
push
jg
pop
ljmp
ja
mov
nop
pop
xchg
cmp
xchg
and
jo
add
test
iret
xor
sub
mov
mov
rolb
enter
mov
pop
dec
jo
xchg
faddl
cmp
mov
add
push
dec
addb
xchg
fldenv
sbb
or
mov
add
pop
jp
jno
xchg
xlat
xchg
add
push
sub
sbb
shlb
mov
dec
rcl
push
pop
and
lahf
jae
jge
stos
add
xchg
scas
pop
cmp
cmpsl
cmp
insl
push
rcrb
cmp
jg
cmp
pop
hlt
add
mov
push
outsl
pop
sti
cmovle
pop
pusha
adc
test
or
cmc
jmp
cmp
pop
les
subb
mov
mov
out
push
cmp
loop
jbe
les
adc
or
in
and
sub
sbb
pop
sbb
cli
xlat
xchg
dec
adc
cmp
ret
push
sub
push
push
pop
into
fildl
outsl
inc
nop
shlb
nop
jne
cs
sti
xchg
shlb
lods
sbb
xor
push
add
xor
jns
outsl
sub
cmp
lods
and
jnp
mov
mov
leave
mov
and
out
xchg
imul
fdivl
and
leave
add
std
test
ja
scas
mov
scas
xchg
mov
xchg
and
jp
scas
repz
sbb
out
cld
cmpsl
shld
fstpl
xchg
into
mov
xchg
push
ret
cmc
push
jbe
rolb
xlat
adc
fistl
pop
and
xchg
stos
adc
loop
ret
add
push
jb
or
les
jns
data16
in
outsb
imul
outsb
or
cltd
inc
in
mov
or
and
icebp
push
adc
adc
add
mov
fdivrl
neg
jo
cs
jne
fs
insl
add
adc
sarb
push
test
cmp
orl
dec
mov
pop
gs
sbb
sub
jecxz
adcb
sahf
loope
es
add
dec
loope
xchg
mov
xchg
inc
repnz
push
or
mov
jnp
pop
dec
daa
jae
or
sub
mov
mov
mov
dec
lods
movsb
insl
addl
jbe
vphsubbw
imul
sub
std
and
dec
into
pop
cmp
not
and
xor
xchg
add
test
pop
ficoml
inc
add
test
lods
inc
push
mov
xor
rcl
inc
pop
cltd
mov
or
lea
iret
hlt
dec
jge
popa
insl
push
in
xchg
in
or
jo
shlb
stos
fistpl
dec
xchg
sbbb
mov
lea
cmp
movsb
scas
leave
lea
sub
and
fdiv
into
andb
add
test
push
xor
push
jle
xor
jmp
gs
repnz
cmpsl
xchg
mov
cli
or
daa
sub
jl
push
push
bound
adc
lret
sub
xchg
jno
add
ret
loopne
mov
sbb
orl
imul
dec
fs
bound
sbb
inc
pushf
xchg
or
popa
test
add
stc
add
leave
mov
add
sub
ror
xlat
dec
mov
cld
fs
dec
lock
sbb
mov
out
imul
fbld
inc
inc
outsl
int
or
push
mov
loope
add
shlb
lods
mov
out
or
jae
jno
insl
adc
movsl
ficoms
sahf
fldl
xchg
hlt
inc
xchg
pop
push
pop
fistps
xor
and
fcoml
sbb
add
fs
loope
sub
leave
or
sarl
inc
addb
xor
adc
rcrb
sub
pop
jg
sub
test
push
push
sub
push
popl
mov
add
lods
xor
jo
fs
inc
gs
dec
scas
xor
cmp
cmpsl
sbb
sbb
daa
movsb
jae
mov
push
rcl
xchg
fwait
inc
lock
aas
shld
adc
in
dec
sbb
pop
sbb
imul
and
jle
ret
mov
movsl
stos
dec
inc
prefetchwt1
or
xchg
je
adc
push
adc
int
add
adc
sbb
jae
cmp
movsb
adc
cmp
sbb
inc
cmpsb
sbb
inc
popa
and
xor
lahf
loopne
inc
sub
jbe
les
pusha
insl
fdivl
jo
cmp
rclb
lcall
out
add
popa
icebp
mov
cwtl
lret
enter
jae
aaa
cmpsb
test
addr16
dec
test
add
or
ffreep
pusha
push
dec
push
sbb
add
xchg
inc
mov
cmp
sbb
inc
xchg
xchg
mov
out
fists
dec
in
and
adc
mov
fwait
dec
movsb
or
xchg
jno
or
push
inc
shlb
sarb
xchg
rcr
out
sub
scas
xor
add
xor
loop
aam
or
jns
and
sub
loopne
cmp
push
insb
push
mov
pop
jb
leave
ret
mov
into
pop
sub
movsb
aas
ss
sub
fisubs
aaa
sbb
adc
mov
push
sub
cmpsb
push
lods
or
mov
mov
add
iret
xor
and
mov
adc
sbb
mov
adc
sub
loopne
int
mov
mov
movsb
ds
or
sahf
inc
mov
sbb
push
movsl
popf
xor
xchg
jecxz,pn
movsl
call
adc
cmc
adc
adc
fiadds
pop
xchg
mov
call
out
cmp
loope
pusha
std
aam
sbb
jecxz
ret
or
sub
pop
loop
add
xor
inc
xchg
hlt
cltd
pop
or
cli
cmpsb
adc
insl
add
adcl
xor
push
add
push
test
mov
pop
adc
xor
js
and
dec
xchg
imul
sub
enter
ja
mov
xor
sti
mov
mov
mov
cmc
add
aam
ljmp
pop
dec
mov
or
xor
fdivrp
js
mov
out
outsl
or
cmp
dec
test
sbb
mov
rcll
sub
xor
cmpsl
cmpb
push
shlb
negl
mov
jp
sbb
sbb
inc
pop
pusha
lock
sub
sub
or
jmp
fistpll
pop
popa
inc
sub
dec
adcl
push
add
mov
xchg
adc
mov
sbb
popf
xchg
or
lea
jnp
hlt
clc
lea
into
jnp
push
lods
add
sbb
andl
cmp
pop
js
gs
jle
out
mov
jbe
dec
or
inc
inc
mov
outsb
lods
add
jbe
xchg
sub
mov
bound
jmp
xor
jl
adc
orl
push
jb
or
sbb
sub
daa
inc
mov
aaa
sti
pop
and
lock
mov
aaa
push
mov
insb
aas
mov
inc
xchg
dec
jnp
lods
add
mov
dec
es
mov
push
pop
rolb
mov
andl
inc
pop
daa
mov
ret
mov
mov
orb
add
mov
adc
notb
cmp
add
and
movsb
clc
or
push
jns
xor
ret
mov
mov
cld
xor
mov
xchg
sbb
jp,pt
test
scas
pop
adc
and
sbb
ja
sbb
les
sbb
cmpsl
push
out
jne
rolb
inc
lahf
inc
mov
sbb
adc
adc
inc
inc
out
mov
out
xor
sub
popa
sbb
cmp
leave
and
aam
xlat
inc
sti
push
orl
movb
jae
inc
inc
push
adc
stos
or
and
lock
xchg
xchg
lret
js
pop
cli
and
imul
pusha
jns
cmp
fs
push
iret
popf
testl
shrb
inc
cltd
xchg
mov
shll
jo
dec
or
movsl
sahf
ret
inc
add
pop
popf
xor
push
idivb
stos
fucom
adc
into
test
xchg
or
enter
sub
or
mull
loopne
sar
lret
std
jo
leave
add
and
andb
in
data16
mov
push
add
je
fbld
imul
in
ja
add
adc
adc
xchg
push
loop
mov
cs
repz
cmp
jmp
xor
pop
das
sub
mov
sbb
jmp
movsb
dec
xlat
or
dec
je
xlat
iret
adc
sub
mov
or
popa
and
pop
imul
add
imul
fs
rcl
mov
in
inc
pusha
dec
dec
sbb
out
pop
xchg
adc
inc
xchg
add
fs
lock
inc
xchg
add
cmp
mov
test
push
insl
jo
pusha
adc
adc
sub
jle
push
addr16
sub
push
or
mov
rcrb
dec
lea
dec
mov
cmp
rorb
je
cmp
pop
enter
mov
push
sbb
inc
vmwrite
push
sbb
pop
cltd
aam
and
sub
shll
jle
dec
loope
int3
mov
add
iret
inc
das
xchg
pop
sub
aaa
imul
xor
add
stos
sbb
subl
lea
movsl
pop
mov
aas
sbb
add
movsl
addr16
aam
mov
ret
jge
xchg
mov
xchg
loop
cmp
arpl
mov
mov
insl
stos
outsl
add
cmp
loopne
xor
dec
adc
ljmp
mov
mov
pop
dec
stc
in
mov
mov
sahf
xor
jbe
nop
roll
fsts
mov
jecxz
xor
or
fld
jmp
test
pop
fmull
scas
mov
sub
leave
jae
and
mov
dec
popf
adc
bound
sub
push
je
loope
adc
add
inc
mov
pop
les
popl
test
ret
movsl
dec
mov
mov
loopne
or
je
imul
mov
ret
jge
jo
or
pop
and
lahf
xlat
pop
ret
pop
movsl
mov
jge
sahf
aaa
test
pop
lahf
push
ss
xchg
dec
arpl
mov
or
push
movsb
push
xchg
mov
loope
out
pop
pop
xor
and
dec
add
out
sub
add
mov
lds
adc
xor
shrb
mov
rol
add
add
cmp
ret
jp
pop
lods
adc
bound
shl
in
adc
jae
sbbb
jmp
ljmp
sti
aad
or
add
xchg
mov
jle
push
adc
sbbl
push
es
mov
test
pop
mov
inc
mov
iret
aam
dec
pop
cmpsl
dec
call
mov
dec
fwait
addl
or
lahf
push
imul
adc
push
jno
loopne
ret
fisubl
cmpsl
push
jo
and
adc
add
loopne
sbb
lahf
es
add
cmp
sub
mov
add
mov
out
push
or
dec
adc
inc
shll
xchg
iret
lea
mov
loopne
imul
push
pushf
aaa
adc
mov
lock
ss
cmp
push
and
push
fcoms
lret
addb
jmp
lods
mov
push
xor
cmp
popf
adc
fildl
push
inc
inc
dec
loope
push
sub
ds
and
push
scas
icebp
rcll
push
jp
inc
test
mov
mov
inc
and
fstp
aam
sub
jb
sub
xlat
cli
lock
in
loop
xor
push
scas
adc
and
and
dec
inc
xchg
or
xor
mov
adc
inc
hlt
sti
sub
sahf
mov
adc
ljmp
push
test
test
mov
ret
arpl
in
pop
or
mov
addb
lods
xchg
add
mov
cs
xchg
cltd
and
mov
add
pusha
push
inc
loope
sub
punpcklwd
lahf
xor
test
in
popa
cmp
leave
je
xlat
jbe
enter
and
mov
iret
fldcw
orl
add
jae
jge
js
jmp
mov
push
das
pop
scas
and
push
rcrb
sub
jno
leave
xchg
push
adc
jo
adc
movsb
xlat
pop
sbb
xor
push
sbb
call
fwait
cmpl
dec
stos
push
jbe
dec
fisubl
sbb
shrb
jb
mov
movsb
sub
mov
movsb
bound
lock
inc
mov
mov
push
cmp
js
xchg
int3
xor
scas
cmp
arpl
xchg
or
fnop
sarl
inc
cmc
xchg
adc
pop
mov
sbb
cmc
sub
fsubs
in
add
dec
inc
xor
dec
sbb
gs
xchg
sub
push
add
dec
sub
data16
mov
loopne
in
xchg
or
xchg
cmp
mov
out
sub
xchg
add
imul
cwtl
or
stos
mov
lret
inc
add
xchg
push
mov
scas
and
jns
icebp
popf
push
jnp
push
arpl
sar
inc
mov
movsb
leave
movb
or
jmp
pop
xor
and
pop
insl
jo
test
sub
outsl
mov
pushf
cmp
pusha
mov
movsb
xchg
in
and
xchg
movsl
mov
inc
dec
mov
xchg
push
pop
fs
jle
call
and
test
lds
and
arpl
js
inc
xchg
aas
dec
mov
dec
pop
ja
loopne
shlb
xor
adc
mov
push
mov
push
bound
imul
or
xchg
jge
push
movups
pop
adc
and
adc
subl
dec
fwait
and
ss
test
test
and
pop
inc
jmp
mov
daa
movsl
inc
pop
jl
in
pop
xchg
mov
jno,pn
or
inc
in
repnz
cmp
mov
mov
add
enter
fcomp
pusha
and
int
popa
jnp
cmp
xchg
in
loopne
enter
shlb
inc
mov
das
sbb
subb
jge
addr16
or
mov
mov
ret
add
push
stos
or
out
scas
int3
in
movsb
es
pop
addr16
daa
sbb
test
jmp
int
add
jp
imul
mov
mov
movsb
add
xchg
mov
ljmp
popa
add
or
nopl
lock
movsl
stc
aas
call
adc
ficomps
leave
in
sub
cmpps
lods
and
jne
inc
xchg
mov
and
cmp
test
ja
fldt
inc
add
inc
xchg
test
lret
sbb
push
inc
outsl
add
jp
or
bound
aad
fiaddl
push
and
dec
push
dec
sub
sahf
sub
int3
mov
loop
sti
test
neg
xchg
ja
jae
loope
and
pop
gs
loop
pop
loope
inc
rorb
int
pop
loopew
inc
nop
inc
neg
jbe
dec
sub
xorb
les
pushf
std
insb
insb
or
pop
fistpll
jmp
sbb
out
mov
aas
fsts
lods
fists
inc
test
outsb
jo
xor
insb
fsubs
mov
xor
xchg
mov
push
lahf
push
movsl
adc
or
cmp
popa
lods
imull
stc
rorb
fisttpll
imul
add
add
roll
test
add
addl
fdivr
push
andl
and
jecxz
mov
adc
repnz
test
push
jle
nop
mov
pop
ret
xchg
mov
xchg
xor
add
aas
add
mov
gs
xchg
jp
or
cmpsb
fistpl
add
pop
inc
mov
inc
subb
mov
lea
sbb
arpl
dec
or
gs
add
inc
and
or
insb
adc
pusha
stos
adc
rorl
sub
xor
rcrl
push
push
in
cwtl
pop
nop
pop
add
mov
jb
in
add
xorb
xchg
ret
imul
ds
iret
dec
cltd
loop
cmpsb
cmc
jmp
ja
sub
pop
pop
pop
sbb
mov
push
or
or
jge
ja
or
or
mov
insb
and
frstor
push
xchg
inc
bound
outsl
sub
cmpb
les
inc
cmpsl
negl
loop
xchg
repz
xor
js
sbb
daa
jle
mov
and
cmp
push
xlat
arpl
lea
test
test
adc
xorl
cs
push
adc
xchg
loope
ret
push
pop
fisttpl
xchg
clc
and
pushf
pusha
pop
add
aam
call
pop
pop
inc
lea
aam
adcb
dec
and
insl
mov
sbb
enter
dec
fistpll
ds
ja
adc
jp
mov
dec
cmp
arpl
addr16
add
sti
stos
outsb
adc
add
mull
and
mov
or
pusha
in
insl
mov
cmp
fisubl
xchg
or
lret
inc
outsb
mov
rcrb
cwtl
fsubs
aad
sbb
pop
cmp
shr
push
les
je
or
dec
adc
and
pop
test
and
ds
xor
in
add
test
in
push
add
aam
les
jo
insb
into
cmp
jmp
test
or
or
push
out
pop
and
pop
or
rcrl
les
test
sarb
push
imul
insb
and
mov
outsb
and
movb
push
and
push
pop
movsl
dec
mov
in
out
lods
lcall
or
or
dec
mov
pop
xchg
dec
pop
aas
dec
pop
cmp
mov
rcrb
loopne
decb
mov
jmp
push
lock
push
cmp
movsb
and
lods
adcb
scas
mov
iret
enter
arpl
cmp
jnp
inc
test
popl
test
or
add
add
test
xchg
jne
ret
mov
xor
lock
mov
push
jae
and
mov
fld
jae
fsubs
fcmovb
imul
ficoms
or
test
adc
sbb
or
rcrb
jmp
movsb
push
sub
fildl
data16
ret
sarl
fdivrp
lret
or
push
xlat
add
cmpsb
enter
sub
cs
mov
adc
loope
add
mov
imul
push
mov
cmp
pop
pop
adc
xor
xchg
jo
mov
sub
inc
pop
loopne
add
inc
movsb
addr16
push
add
xchg
fs
arpl
bound
mov
mov
cmpsb
mov
fnstenv
pop
push
pop
and
sahf
push
fcmovnb
add
das
jns
pusha
loop
fldenv
insb
add
insl
jo
and
pop
cmp
xchg
xchg
in
test
push
jbe
jne
pop
and
xchg
sbb
xor
add
xor
scas
aaa
sbb
jo
or
fs
inc
cs
sub
jnp
or
adc
nop
add
cmp
rorb
mov
add
sbb
sub
push
push
pop
adc
xchg
aam
or
xor
dec
cmp
push
sahf
cmp
std
sbb
dec
push
lret
sahf
and
in
into
push
in
into
inc
fnstsw
dec
sbb
inc
cmp
add
add
and
jo
jge
pop
das
stos
xchg
or
test
test
xor
mov
fcomps
addr16
mov
dec
shll
inc
adc
pop
or
rol
cmp
loopne
roll
in
pop
jnp
dec
insb
inc
mov
std
nop
ret
fsubs
shrb
movsl
push
jecxz
add
stos
mov
xor
and
and
out
mov
aam
ja
mov
xchg
xlat
add
push
dec
arpl
hlt
dec
adc
mov
mov
push
ret
popf
out
xorl
add
in
pop
iret
aam
push
dec
popf
aaa
in
add
fisttpl
jmp
ret
es
sub
gs
out
rol
dec
incl
pusha
lea
scas
or
movsb
cs
loopne
jg
andb
add
mov
ljmp
leave
jns
aaa
iret
dec
aad
cmp
enter
aad
sub
sti
inc
pop
push
or
or
test
xor
ljmp
ja
xor
pop
jg
shl
push
roll
scas
add
push
xchg
pop
shll
fmuls
pop
cmp
xchg
ret
pop
cltd
sbbb
pop
std
inc
sbb
scas
sahf
aam
sbb
mov
push
shll
add
mov
xlat
dec
push
adc
sub
push
xchg
xor
daa
mov
aad
outsl
mov
ljmp
push
pop
imul
dec
and
lods
cmc
movb
ret
or
mov
shll
scas
xchg
daa
push
movsb
jnp
sub
xchg
test
sub
push
es
sub
lret
es
lods
add
sub
orl
push
xchg
leave
xor
rol
mov
add
mov
sub
pop
lret
iret
and
in
mov
lcall
addr16
add
daa
imul
jmp
aam
insl
xchg
add
fiaddl
cltd
rolb
sub
imul
mov
add
sub
and
test
or
xor
sbb
dec
ljmp
in
mov
xchg
dec
xor
rcr
dec
ljmp
je
jbe
outsb
repz
xchg
jb
mov
jne
lret
dec
and
adc
mov
pop
push
imul
mov
push
adc
pop
imul
add
aam
and
mov
faddp
pop
lcall
mov
lods
mov
mov
in
movsb
in
push
and
mov
mov
push
add
inc
push
and
or
mov
or
mov
push
xchg
push
fidivl
fiadds
pop
adc
sarl
stos
adcb
dec
and
mov
loop
es
les
dec
or
push
mov
jp
push
jnp
adc
jbe
stc
cwtl
loop
cmc
adc
scas
shrl
sub
add
adc
cmp
inc
nop
adc
push
es
inc
fnstsw
xchg
jne
add
lods
bound
cmp
xchg
jns
inc
sub
or
mov
push
cmp
add
xadd
fldt
ljmp
pusha
push
test
add
bound
mov
mov
mov
scas
inc
or
mov
mov
pop
mov
dec
flds
pop
gs
imul
dec
int3
es
and
inc
flds
add
daa
mov
add
push
add
pushf
imul
lahf
je
pop
and
pop
xchg
pusha
aaa
inc
jo
add
and
lods
add
and
mov
cmp
setb
daa
adc
jg
pop
pop
or
jo
xor
cwtl
dec
pop
push
xor
sub
inc
insb
jg
test
dec
enter
test
xchg
mov
imul
sbb
push
ss
mov
and
cmp
inc
test
pop
test
or
dec
xor
sbb
insl
push
pusha
rclb
mov
or
jecxz
repnz
addw
std
sub
dec
adc
pushf
rcrb
pop
mov
cmpsb
out
and
xchg
pop
add
mov
and
cwtl
sub
and
push
and
xor
shl
mov
dec
xchg
fucomp
test
adc
adc
sbb
nop
sub
popf
cli
adc
aas
cli
ret
ds
mov
ret
bound
dec
xor
jmp
sbb
jg
fmuls
sub
outsb
push
int
sbb
popa
mov
push
icebp
jl
add
sub
push
jg
stc
cmp
enter
lock
shrb
movsl
and
leave
pop
adc
shr
push
adc
aas
out
sbb
cmpsl
pop
and
mov
dec
and
outsb
pop
fwait
jecxz
enter
mov
sbb
lods
sbb
jo
sbb
push
lock
sub
ds
jo
hlt
in
js
mov
roll
inc
jl
out
rcrb
notb
cmp
jl
lahf
popa
push
out
or
ds
sub
add
insl
mov
pop
dec
cltd
mov
cmc
push
lea
into
out
mov
int
rclb
push
aam
insl
and
mov
inc
or
insb
cmovl
shlb
icebp
sub
xor
scas
ds
addl
mov
push
sbb
pop
or
in
pop
pop
jle
in
adc
outsb
repnz
aad
sbb
ds
not
xor
xor
push
into
jmp
jge
mov
push
rclb
jle
int3
stos
jl
xchg
and
push
ss
mov
aas
inc
cmp
inc
addb
js
enter
insb
xchg
jmp
push
push
cld
roll
add
xchg
es
dec
add
aaa
fcoms
rolb
out
add
call
clc
cltd
int3
es
sub
cmp
jno
xlat
or
aas
test
test
hlt
pusha
add
or
mov
cmp
mov
add
out
xor
ret
popf
divb
jno
push
nop
cli
pusha
fists
push
add
or
adc
push
rcll
cs
in
push
or
rcrb
aas
or
aaa
gs
mov
aam
mov
and
repz
bswap
xchg
mov
cmp
adc
aaa
adc
mov
mov
xchg
outsl
ljmp
jmp
rclb
stos
sbb
push
mov
jge
pop
andb
push
cmp
or
or
sbb
inc
ret
mov
adc
cmpsl
mov
mov
cmp
mov
shl
xchg
rorb
jge
dec
std
and
mov
imul
testb
xchg
nop
lcall
cltd
jp
mov
sbb
push
inc
push
and
xor
popa
mov
sbb
jecxz
popf
push
loopne
and
or
sbb
and
dec
loopne
sub
test
ja
push
repnz
mov
push
test
iret
lds
shlb
aam
fimuls
rcrb
pop
cwtl
xor
mov
mov
shrl
aad
jo
imul
imul
repz
or
adc
pusha
dec
adc
sub
sub
sbb
add
sbb
test
jbe
add
pop
xor
and
xor
popf
push
fnsave
mov
int3
jo
mov
pop
repnz
daa
fcmovnb
adc
cmp
adc
add
pop
rcrb
inc
mov
fsts
dec
mov
cmp
mov
mov
rcll
xor
jge
mov
jbe
jb
jne
and
movb
lds
push
orb
add
adc
mov
ja
dec
pusha
fld
in
ljmp
fwait
and
negl
test
add
mov
and
ss
jp
or
movsb
cwtl
cmp
push
sub
outsl
lret
cmp
adc
mov
pop
inc
add
mov
inc
cmpsb
repz
fbstp
and
dec
es
pop
loop
and
add
test
rolb
sbb
mov
mov
push
stos
inc
loopne
push
sub
push
and
mov
adc
nop
and
or
ror
sub
add
add
xor
xchg
aam
js
insl
xchg
cs
adcl
mov
daa
daa
add
jno
subb
push
add
js
rcrb
aas
es
and
call
mov
cmp
cmp
mov
mov
test
cmp
jge
mov
cmp
bound
jecxz
jl
inc
addr16
inc
or
pop
add
and
les
xor
adc
daa
adc
es
pop
cmpsl
cmp
pop
cmp
clc
inc
jge
sbb
jne
cld
jle
dec
pop
dec
add
mov
sub
ret
aam
popa
push
add
xsaves
inc
xchg
hlt
mov
jle
je
fisubs
das
pop
mov
movsb
jns
insl
push
or
icebp
imul
push
ret
cli
mov
leave
sub
js
jb
mov
cmp
and
push
pop
add
jbe
lock
sub
aaa
jge
mov
push
push
popf
mov
mov
test
xorl
hlt
mov
movsl
inc
popa
adc
movsl
inc
mov
pop
mov
mov
dec
test
xchg
xchg
jnp
ja
xor
jmp
rorb
jl
and
xor
je
das
fmuls
bound
sub
nop
or
adc
inc
jo
je
and
xchg
sub
and
dec
lcall
out
and
fstpt
aad
push
and
cmc
shlb
orl
sarl
shll
mov
int3
dec
mov
fists
adc
mov
xchg
in
clc
add
sub
mov
jge
in
jno
and
sub
das
inc
jb
xchg
jle
les
pop
out
cmp
clc
test
cmc
and
movsl
test
ficoml
cmp
xchg
int
test
xor
sarl
and
push
sbb
push
adc
enter
sti
mov
sub
adc
into
insl
add
rolb
popa
xchg
fcoms
das
mov
insl
ds
xor
js
add
or
xchg
push
sub
inc
add
insb
popa
xchg
lods
adc
fmuls
das
cld
cmpsl
movsb
push
inc
insb
daa
sub
push
pop
dec
jge
jae
and
ds
mov
in
ret
dec
xchg
jo
test
or
sbb
xchg
ror
cmp
add
inc
xchg
outsb
loope
inc
pop
je
add
lea
pop
xchg
sbb
mov
insl
int
rorb
mov
sti
pop
jne
adc
mov
xor
fildll
nop
dec
ret
jg
pop
mov
add
mov
sbb
cli
cmpsl
inc
inc
iret
mov
insl
push
jg
and
daa
cmp
mov
sbb
and
test
add
lgs
leave
insl
scas
jmp
arpl
pop
sub
int
nop
cmp
arpl
sarb
add
push
ja
div
imul
mov
sub
xlat
xor
test
ja
add
arpl
push
dec
mov
insb
ret
imul
es
inc
loope
paddusb
pop
rcr
inc
pop
aas
jb
cs
cmp
ffreep
cmp
or
int
aas
add
cmp
dec
cmp
add
jmp
jno
add
cmpsl
popa
aas
test
stos
cmp
cmp
inc
int
mov
add
mov
mov
dec
fsubl
sbb
pop
popa
adc
add
cmp
dec
aaa
mov
add
add
xor
int3
add
mov
cmp
mov
and
ds
fs
sub
dec
pop
inc
ror
call
xor
ds
mov
adc
xchg
es
push
rcrb
mov
jnp
add
into
leave
test
sbb
cltd
pop
shlb
pop
sub
dec
mov
arpl
and
mov
sub
and
cmp
xchg
xchg
mov
adc
xor
repz
fwait
adc
sbb
mov
mov
xchg
scas
push
inc
cmp
ja
lcall
cmp
jo
scas
and
and
mov
xor
pop
sbb
jo
jns
mov
mov
cli
cmp
jne
cwtl
lahf
scas
adc
dec
scas
adc
outsb
leave
filds
jl
jp
sbb
lock
in
pop
ret
or
imul
inc
dec
repz
xor
pop
adc
aas
cmp
lret
sahf
mov
adc
fwait
pop
sub
xchg
ds
mov
in
adc
pop
and
addb
cmp
dec
imul
xor
mov
stos
xchg
int
lock
or
dec
mov
inc
nop
pop
aam
adc
sbb
sbb
or
hlt
in
sub
stos
pop
stos
mov
sbbl
popa
pushf
sub
pop
xor
lds
mov
or
cmp
xor
lret
scas
pop
inc
pop
imul
or
stos
loope
jbe
adc
es
xchg
aaa
mov
pop
mov
mov
cltd
mov
lea
aaa
jp
push
andb
mov
xor
adc
add
inc
test
cmpsb
outsb
ret
ljmp
daa
out
jmp
icebp
mov
and
sarl
cwtl
pop
add
adc
push
loopne
std
push
adc
xchg
adc
pop
lcall
push
movsl
mov
pop
and
shlb
mov
inc
out
pop
notb
mov
or
xchg
mov
push
pop
inc
inc
dec
shlb
ljmp
mov
cmp
mov
jge
inc
popa
push
xchg
testl
mov
or
jmp
xchg
and
push
push
cmp
rorl
pop
xchg
ss
xor
je
jb
ss
lret
js
pop
pop
push
sbb
xor
xchg
push
push
ret
sub
pop
mov
shll
ror
into
mov
cmp
sbb
sti
lock
sbb
movsb
loopne
pop
test
mov
xchg
test
xor
rclb
pop
jo
pop
adc
ja
add
andb
subl
out
cmpsb
mov
popa
sbbb
sub
and
xlat
add
add
mov
jne
push
adcb
sbb
adc
ror
inc
xor
fcom
jno
pop
enter
add
jecxz
jne
arpl
or
inc
ss
cmp
stc
subb
fadds
into
push
adc
sub
pop
mov
mov
lahf
dec
push
adc
jae
xchg
nop
jae
pop
xchg
add
js
add
into
sbb
xchg
pusha
ss
push
and
mov
or
jb
rclb
repz
xlat
xorb
xor
addb
add
sub
cld
xor
or
stos
push
icebp
sbb
xchg
xchg
xor
xchg
or
pop
ret
add
mov
mov
les
mov
pop
adc
loopne
bound
or
push
outsb
out
sbb
add
pop
aam
jno
shlb
rolb
xor
and
add
push
pop
cwtl
mov
and
cltd
adc
and
gs
jg
es
and
in
add
fildll
pop
jp
into
outsb
mov
jl
inc
jg
shr
ja
add
add
sbb
lock
ret
arpl
mov
cmc
fcomi
psrlw
pop
pop
jp
add
mov
adc
lret
test
daa
push
js
jg
shll
cld
add
jge
jl
repnz
fdiv
mov
repz
daa
and
jbe
cmc
repz
jne
mov
addr16
stc
xorl
das
test
jns
sahf
add
push
sahf
mov
jns
pop
xchg
ja
or
insb
sbb
cmc
mov
mov
gs
popf
push
out
fldenv
dec
push
push
fstpt
loopne
fisttpl
aam
push
dec
cmp
out
imul
mov
xchg
es
stos
xor
dec
dec
mov
cwtl
sub
mov
add
pop
loope
lret
jns
mov
imul
lea
mov
je
sbbb
add
mov
add
adc
inc
jle
pop
bound
movsb
das
aas
and
nop
pop
add
pop
cmc
jb
mov
jns
subl
inc
sbb
daa
or
call
add
addb
add
test
xor
sbb
push
and
pop
jns
sbb
fnstsw
cmp
andb
add
mov
xor
sub
and
adc
push
cmp
iret
xor
lock
push
aaa
push
ret
sub
pop
sbb
mov
outsb
cli
inc
sbb
cmp
pop
jno
cmp
cmpsb
outsb
aam
lcall
pop
sub
rol
sbb
xor
pop
add
push
test
and
popa
rcll
mov
stos
mov
and
sbb
movsb
into
push
stos
cmp
insl
pushf
fnstsw
adc
loope
sbb
jle
xchg
dec
stos
scas
lahf
sub
adc
mov
adc
or
lods
mov
cltd
adc
ret
test
sbb
sbb
test
in
repnz
into
mov
inc
sarb
ret
lods
in
ds
fisubrs
dec
and
sbb
pusha
sbb
movsl
mov
loopne
dec
add
imul
jo
xchg
aam
mov
rol
rcll
test
aas
mov
pop
xchg
add
sarl
mov
inc
cmp
mov
lds
cmpsb
add
lods
sub
les
aaa
mov
lock
push
mov
ret
popa
icebp
scas
and
dec
jnp
adc
sbb
sub
adc
fs
lods
sub
test
mov
in
cltd
fdivs
in
and
lahf
ja
aas
add
movsl
jae
hlt
jg
add
or
lds
pushf
sbb
pop
loope
jbe
rolb
fisttps
push
pop
mov
iret
cmp
imul
xchg
push
mov
pop
mov
push
xor
out
sbb
mov
sub
dec
out
xchg
pop
andl
push
insl
xchg
outsb
scas
mov
lock
add
cmp
pop
loope
es
jle
popa
pop
xchg
and
ja
insb
cmp
add
lcall
hlt
xor
push
cs
lock
nop
add
adc
fists
dec
fiadds
cmpsb
movl
inc
cmp
das
fidivrs
mov
jnp
rcrb
enter
rorl
lods
push
add
daa
adc
shrb
orl
add
cmp
jo
popl
or
test
stos
bound
icebp
mov
pop
mov
ret
inc
mov
mov
or
jp
test
mov
ret
mov
clc
lcall
mov
or
fldenv
cmpsl
pop
push
cs
mov
add
sbb
dec
pop
gs
hlt
add
cmp
ret
popa
loop
or
mov
int
add
or
pop
sub
pusha
int3
cli
xor
jmp
inc
push
std
mov
fcoms
cld
and
mov
test
insb
popa
iret
lds
inc
xor
shll
stos
and
repnz
jge
movsl
shr
pop
mov
rclb
fnstsw
leave
cld
pop
xchg
mov
jg
jl
sbb
sub
popa
cwtl
push
and
sub
pusha
out
lret
mov
shll
sbb
jbe
ficoml
ds
sbb
mov
lods
inc
adc
aad
inc
sbb
cmp
sbb
mov
and
int
fisubs
sub
enter
mov
cmpsb
movsl
jbe
dec
adc
jae
addr16
adc
sub
sbb
jg
sarl
in
inc
ds
mov
iret
sbb
push
int3
xchg
jle
arpl
test
sub
lcall
add
aas
pop
jecxz
cwtl
fcomps
add
jo
adc
push
xor
cwtl
shlb
jnp
mov
push
outsl
cmpsb
std
mov
and
insw
and
add
cmpb
ljmp
add
je
repz
addl
imul
int3
lret
xchg
pop
adc
add
daa
pop
leave
ret
push
nop
jo
aam
je
mov
cmp
push
pop
popf
nop
jl
xor
mov
stos
push
fistpll
mov
pop
sbb
pusha
mov
dec
rcrb
and
mov
jmp
sbb
int3
and
dec
sub
pushf
iret
jg
notl
sub
mov
insb
xor
rcrb
loopne
jae
sbb
cmp
shlb
mov
mov
mov
ss
xchg
lods
xorb
ljmp
mov
movsl
push
xor
dec
sbb
int3
lds
mov
hlt
loope
iret
aam
scas
out
and
cs
stos
insl
inc
or
daa
cmp
jo
jl
sbb
jno
add
mov
arpl
pusha
push
inc
jmp
es
loopne
jle
sbb
jnp
jp
dec
cmp
adc
push
push
xchg
push
rcl
jmp
sub
inc
leave
inc
ljmp
and
das
movsl
and
cmp
dec
stos
inc
xlat
adc
add
add
push
sub
sbb
aaa
in
aas
mov
mov
cltd
cmp
cmp
dec
shlb
test
dec
add
inc
xchg
push
mov
imul
cmp
test
xlat
xor
mov
loop
les
stos
test
stc
or
aas
push
or
dec
and
and
xor
ss
mov
dec
lcall
pusha
int3
rcl
movsbl
push
out
pop
xchg
pushf
dec
lret
jl
and
sub
push
dec
mov
pop
and
pop
sbb
add
inc
add
out
int3
inc
loope
pop
xor
cmp
mov
cmpl
add
mov
scas
mov
pop
out
ret
cmp
push
cmp
cmp
addr16
int
sbb
sbb
popf
xor
mov
lods
sti
ja
cmp
sbb
test
cld
jnp
in
xchg
jo
in
jns
sub
mov
jb
adc
jmp
jp
aad
add
xchg
sbb
jne
xor
or
addl
test
iret
fs
xchg
fldcw
arpl
test
jge
jecxz
mov
mov
aam
movsl
mov
les
dec
out
test
scas
test
mov
rcr
inc
dec
in
inc
cli
adc
inc
cltd
sub
mov
fs
jno
jo
mov
jl
fsubl
arpl
add
movsl
test
movsl
sub
cmp
add
in
inc
fwait
sarb
xchg
cmp
cmc
or
add
sub
cmp
dec
repz
rclb
cmpsl
in
mov
mov
iret
mov
lods
addr16
rol
orb
cltd
pop
sub
and
mov
xchg
int3
jle
daa
out
and
add
lcall
pusha
inc
out
fisubrl
loopne
call
sub
imul
fwait
repz
pop
sub
mov
iret
add
xchg
shll
xchg
and
ret
test
inc
leave
and
imul
test
sbb
test
sub
adc
test
and
test
or
mov
xor
dec
loope
dec
lods
lahf
stos
and
dec
push
fsubs
ret
cwtl
sub
push
sbb
and
push
fisttpll
lods
cmp
filds
sub
sub
adc
jno
xor
mov
xor
lcall
add
loope
xor
xor
push
test
sub
mov
xchg
cmp
sub
jae,pt
mov
add
lds
cmp
addb
mov
js
into
mov
mov
mov
jo
xchg
ret
and
in
adc
pop
add
fcoms
ja
xchg
or
lea
icebp
push
pop
test
and
cmp
pusha
jl
mov
pop
jp
sbb
orl
push
inc
mov
dec
mov
xor
inc
mulb
cmp
mov
xor
lds
or
jbe
mov
ficoms
inc
inc
je
pop
cmp
adc
fldenv
adc
ret
test
cmp
pop
pop
push
xchg
test
std
stc
mov
fisubrs
adc
and
mov
pop
pop
aaa
loop
sub
dec
sub
or
pop
pop
xchg
iret
mov
cli
mov
or
mov
inc
popf
fidivs
addr16
aaa
and
sti
scas
dec
cld
stos
add
orl
fsubl
cmp
daa
fnstenv
adc
pop
fbld
stos
add
out
nop
ffreep
ficompl
sbb
xor
jae
dec
sub
push
push
dec
pop
or
mov
fwait
not
xlat
push
sub
sbb
mov
xchg
sbbl
adc
std
dec
push
jb
xorl
mov
push
outsl
das
cmp
xor
jo
ficomps
pusha
cmpsl
test
and
lahf
xor
lret
sub
pop
or
pop
in
into
adc
loope
push
pusha
cmp
popa
add
jge
aad
mov
mov
mov
add
rolb
aas
add
adc
xchg
add
or
js
out
mov
jbe
pop
mov
push
mov
mov
mov
test
in
sub
iret
shl
outsb
sub
add
push
xchg
jne
stos
std
das
pusha
in
movsb
jg
mull
pop
xchg
xchg
in
sbb
mov
psubsb
sub
ds
int3
xor
sbb
shlb
sbb
xchg
xchg
mov
mov
pop
loope
ret
xor
push
fsts
imul
ss
enter
pop
or
push
out
add
adc
lcall
and
and
outsb
mov
loopne
mov
dec
addr16
inc
testb
fsubs
fsubl
js
out
mov
mov
dec
movsb
lock
pop
or
adc
xor
scas
jae
xor
ljmp
cmp
cmp
popa
sbbl
and
pushf
cmp
and
insb
sub
xor
pop
insb
push
movsl
mov
cmp
and
lret
xchg
xor
mov
jmp
subb
movsl
sub
mov
and
outsb
scas
aaa
mov
cltd
mov
and
add
sub
icebp
and
rcr
addl
cmp
adc
in
in
jge
xchg
mov
rcr
mov
mov
xchg
lret
inc
js
xchg
push
mov
sub
loope
loope
or
mov
aam
orl
pop
mov
cmp
xor
pop
or
push
popa
dec
int3
ret
rorb
cmpl
mov
hlt
fcmovnb
and
pop
popf
mov
ret
pop
or
ja
sub
jo
jb
insl
notl
cwtl
aad
fnsave
je
mov
add
xor
dec
out
fwait
push
pusha
pop
xchg
xchg
imul
ds
mov
lods
pushf
cmp
addr16
cmp
add
mov
pop
mov
nop
popa
roll
cmp
cltd
push
out
pop
mov
je
movsb
nop
or
inc
push
scas
insb
fs
aas
cmpsb
mov
add
sub
icebp
mov
sub
adcl
and
mov
cmp
pop
or
loope
inc
add
sbb
add
dec
rcrl
or
std
incb
add
roll
out
adc
mov
lahf
popf
dec
ja
sbbb
in
xchg
int3
push
inc
sbb
xchg
mov
add
or
mov
or
cmp
loop
into
daa
jle
mov
or
or
and
xchg
gs
stos
test
pusha
mov
cmp
je
dec
incl
add
orb
xchg
cmp
sbb
loopne
aas
lods
pop
sub
push
jmp
add
add
les
lods
mov
sbb
bound
and
in
rcrl
test
adc
arpl
movsb
js
add
push
adc
cmp
popa
add
movsb
fldt
push
stos
jnp
cmpsb
dec
outsl
test
popl
xor
xchg
jle
scas
movsb
fs
jle
je
push
adc
jno
loopne
xor
inc
add
mov
mov
das
and
ret
xor
sbb
arpl
pop
pop
lcall
push
pop
mov
cmc
bound
enter
pop
and
std
add
iret
cmp
adc
stc
aaa
pop
movl
mov
pusha
sbb
lret
pop
andl
jno
adcl
push
test
test
mov
pop
cmpsb
xorl
movsl
hlt
and
lret
sbb
and
add
fwait
pop
mov
loope
inc
test
jmp
and
or
adc
hlt
sbb
jo
ret
push
mov
and
mov
mov
add
or
push
inc
mov
jns
xchg
and
cmp
icebp
out
mov
adcl
cmp
mov
inc
jbe
imul
addl
pop
pop
cmc
ja
push
inc
xor
mov
mov
dec
dec
add
movsl
lret
and
add
add
nop
jl
outsb
cltd
loop
xor
inc
movsl
sub
lret
push
inc
adc
iret
aas
sbb
out
push
mov
or
or
add
sub
cltd
movsb
faddl
pop
or
out
scas
fwait
adcb
push
stos
lret
and
addb
xlat
in
mov
daa
inc
sub
jnp
push
mov
fldt
loop
test
and
std
std
testb
jno,pn
jb
fwait
stc
out
jb
rolb
xor
sub
add
xorl
adc
mov
mov
push
sbb
mov
jmp
ret
je
push
inc
push
inc
sbb
movsl
imul
leave
xor
js
imul
ljmp
aam
sbb
sub
test
daa
sub
and
inc
lcall
mov
daa
negb
rcrb
add
xor
mov
call
mov
es
mov
or
nop
mov
lds
lgs
outsb
dec
pop
add
das
and
or
xorl
xor
mov
adc
add
scas
test
scas
hlt
mov
push
aad
mov
push
jo
fildll
les
lcall
inc
mov
fistpll
stos
inc
loope
xor
push
lods
add
cwtl
cwtl
dec
or
jecxz
ret
jbe
inc
xorl
inc
nop
pop
incl
icebp
in
dec
scas
xchg
fs
pusha
adc
dec
in
dec
jp
lods
and
sub
in
lahf
hlt
insb
loopne
pop
outsb
out
in
lods
or
pop
mov
sbbl
push
shl
leave
call
pop
addl
pop
xor
cmp
jbe
dec
sub
adc
jno
jbe,pn
sbb
loop
setbe
jl
adc
shl
loopne
sarl
lcall
or
mov
mov
subl
pusha
and
and
int
cmpb
xlat
xchg
fldcw
cmp
mov
adcb
and
dec
inc
pop
xor
sbb
mov
mov
dec
dec
in
adc
xor
ret
mov
test
pop
sub
andl
push
adc
aas
fbstp
in
jno
mov
pop
add
cmpsb
and
sbb
movsl
xchg
jmp
cmc
cli
loop
adc
loope
decl
faddl
adc
in
ror
add
test
shlb
adc
mov
adc
mov
jp
lcall
pop
scas
sti
shlb
movsb
jbe
jbe
lret
or
aas
call
dec
mov
imul
hlt
xor
ljmp
test
jnp
test
adc
jecxz
flds
dec
ss
loope
cmp
lret
pop
xchg
nop
sub
negb
cmp
pusha
cld
fisubrl
adc
scas
cmp
push
add
in
outsl
cmp
call
sub
popf
cmp
mov
leave
mov
ret
mov
andb
orl
add
rcrl
push
and
xlat
insl
dec
xchg
test
leave
bound
fwait
dec
mov
sahf
pop
dec
or
shufps
xchg
add
cmp
imull
cmp
inc
rolb
dec
mov
push
test
sbb
mov
pop
xorl
add
mov
jbe
ljmp
inc
test
or
mov
sti
add
sbb
mov
lds
ret
ret
or
dec
cmp
push
pop
rolb
pop
adc
repnz
or
insl
sub
add
orb
dec
dec
mov
rolb
scas
inc
or
mov
aam
inc
icebp
je
pop
or
pop
add
in
sub
lock
jb
adc
or
push
or
outsw
test
xchg
dec
and
add
adc
pop
cli
cmp
sub
adc
iret
ret
shrb
daa
popa
jl
inc
and
into
xchg
scas
cs
xchg
shlb
pop
movsb
pushf
mov
pcmpgtb
testl
jecxz
jo
push
inc
add
mov
mov
aam
cmp
loope
gs
add
mov
dec
lahf
add
jle
and
adc
mov
fld
mov
push
dec
adc
adc
in
adc
ret
ss
adc
ds
add
loope
sbb
sub
jmp
out
imul
dec
rcrl
add
dec
xrelease
adc
mov
daa
in
mov
push
push
add
daa
dec
les
cmc
sbb
sbb
sarl
add
xchg
sbbb
call
lods
sti
mov
and
pop
and
xor
sub
into
popf
push
pop
jne
ljmp
daa
inc
sbb
jo
mov
xchg
push
testl
and
sub
loopne
mov
shlb
test
xor
push
lods
xchg
js
mov
stc
out
cld
mov
iret
push
xchg
cmp
pushf
icebp
gs
push
sbb
sub
jo
shlb
pusha
rorl
pop
jns
mov
xor
test
adcl
aaa
movsl
or
das
jmp
jne
subl
jne
adc
int3
jp
dec
xchg
das
loop
inc
pop
add
xchg
out
xor
jecxz
leave
push
add
jb
inc
mov
xchg
jbe
cltd
fs
push
mov
sahf
lods
mov
sbb
std
outsl
enter
sub
mov
mov
loopne
add
shr
jo
dec
icebp
jmp
inc
push
pop
leave
or
inc
sub
mov
movsb
mov
fiadds
movsl
mov
cmp
ret
les
test
pop
loop
jb
adc
or
cmpsl
jns
je
sub
cld
jo
cmp
sbb
cmp
add
dec
sbb
and
movsbl
lods
adc
pop
data16
add
add
push
bound
insl
leave
call
xchg
lock
rorl
inc
rorl
lea
or
xchg
jmp
ret
xor
mov
or
jle
loopne
aam
scas
imul
cmp
lock
scas
icebp
scas
push
cwtl
cmp
cli
xchg
andl
push
adc
add
mov
sub
xor
insb
sbb
loopne
lcall
daa
jo
add
test
inc
ret
xlat
mov
popf
aam
mov
int3
sub
mov
xorb
jo
into
andl
loopne
pushf
test
adc
push
fisubrl
xchg
mov
scas
scas
push
out
iret
clc
add
xchg
jo
ds
and
pushf
push
mov
dec
sti
bound
popf
cmpl
xchg
movsl
xchg
adc
pop
adc
fidivl
or
or
pop
fwait
push
rcrl
xor
inc
add
mov
and
pop
mov
leave
movsl
jne
pop
insl
mov
pop
adc
das
dec
or
sub
pop
cmp
jecxz
sti
inc
jo
mov
daa
mov
fists
add
movsb
jle
push
adc
adc
insb
push
mov
adc
dec
fadds
in
test
mov
xchg
ret
xchg
xchg
and
les
rcl
push
iret
jmp
lods
pop
and
mov
nop
inc
sbb
pop
or
pop
mov
mov
mov
xchg
ret
test
cmp
jp
add
jge
out
jmp
push
jb
clc
or
jg
stc
sbb
aad
mov
lea
add
or
adc
ret
js
loop
sbbb
and
mov
bound
mov
push
push
test
in
xor
cmp
sti
insb
xor
test
push
dec
cmp
cmp
movsb
or
mov
xchg
mov
sbb
xor
mov
lret
sbb
dec
lret
imul
sub
push
cli
or
cltd
dec
dec
test
out
jmp
dec
cwtl
arpl
push
jecxz
das
jb
inc
push
test
lret
enter
fidivl
inc
stos
je
mov
addl
xchg
push
hlt
mov
sbb
add
xlat
rclb
jb
jle
ds
in
xchg
hlt
or
dec
xlat
cmp
cmp
mov
mov
and
dec
js
stos
adc
jle
lret
mov
rclb
mov
dec
xor
fidivrs
fsubrs
mov
adc
pop
sub
dec
sbb
pushf
and
xchg
icebp
or
or
out
movsb
sbbl
inc
pop
mov
test
mov
adc
cltd
adc
sbb
cmp
inc
mov
sub
lock
cs
inc
lods
push
add
adc
pop
mov
inc
sbb
out
inc
pop
cmpsl
cmp
add
pop
scas
cmp
roll
jb
push
movsl
add
lods
xchg
xor
xchg
imul
arpl
fidivrs
lret
or
sbb
std
insl
add
sub
add
into
sbb
mov
mov
fdivrl
jno
filds
push
pop
dec
add
sbbl
and
or
push
and
scas
lods
test
inc
cmp
dec
pop
push
inc
inc
xor
outsl
mov
push
and
xor
mov
push
and
adc
mov
imul
aaa
imul
mov
mov
push
inc
sbb
inc
and
jg
pop
inc
imul
loop
adc
mov
test
cmp
inc
fistps
popf
xor
addr16
add
cli
cmpb
or
clc
and
mov
movsb
out
pop
push
jns
sub
hlt
push
sub
mov
arpl
js
add
les
or
gs
or
cmp
add
cmp
cmp
in
nop
dec
xor
stos
add
ss
test
andb
lock
sub
jle
cmp
or
jne
or
pop
rcr
out
cmp
test
fcoms
sahf
push
add
jb
sbb
pop
add
inc
cmp
mov
rorb
inc
cmp
aaa
out
outsl
inc
inc
and
dec
mov
and
outsl
pusha
dec
cmp
jbe
push
addb
imul
xor
incl
pop
cmp
mov
pusha
lea
jmp
adc
cltd
add
lret
daa
mov
ror
loope
cmpsb
rclb
push
add
roll
pop
iret
cltd
outsb
adc
adc
sar
cmp
adc
jg
mov
sahf
add
add
imul
ljmp
iret
and
dec
mov
fwait
push
jne
jp
insb
fisttpl
mov
movsb
mov
mov
fdivl
pop
orl
aam
add
adc
dec
aam
and
daa
or
dec
js
add
xchg
inc
adc
das
mov
shrb
dec
xchg
movb
jg
xor
bound
push
sbb
jle
test
or
mov
sbb
cld
add
mull
push
or
and
ljmp
mov
shlb
inc
and
shl
or
testl
adc
call
loopne
pop
cwtl
mov
mov
in
mov
inc
test
shr
cmp
mov
test
mov
or
mov
adc
add
cmp
sub
mov
mov
iret
mov
jmp
pop
mov
mov
sub
or
mov
je
fcmovnbe
add
mov
or
adc
js,pn
push
dec
les
cmc
push
testb
aas
mov
dec
ret
pop
out
je
shll
xor
out
mov
add
xorl
lret
aam
cmc
mov
sahf
dec
mov
das
adc
dec
add
jnp
jl
repnz
push
cmp
and
inc
xor
arpl
cld
pop
test
enter
fsub
pmulhw
sub
xchg
lock
nop
adc
cli
call
movsb
and
iret
in
sub
add
pop
or
add
mov
daa
jecxz
popa
subl
lret
push
imul
xor
bound
nop
mov
outsb
mov
loopne
ret
sub
icebp
lret
jne
loopne
je
push
and
in
sub
sbb
lahf
push
dec
aas
test
xor
cs
lea
xor
jle
leave
les
cwtl
push
rorb
mov
mov
mov
orb
int3
sub
shrb
dec
test
pop
mov
add
xchg
sub
popf
lahf
repz
xchg
mov
cwtl
cmc
and
sbb
test
or
out
fistpll
les
xorb
cltd
sub
push
rorl
shlb
mov
fisubrl
addr16
fs
insb
mov
rcrl
shll
cmp
leave
xchg
xchg
pop
iret
mov
test
roll
in
sub
in
sbb
mov
add
popa
lea
mov
fnstenv
ret
movsl
imul
inc
aaa
jns
mov
imul
xor
mov
mov
mov
addl
lea
add
sbb
pop
adc
les
je
popa
scas
in
fsts
lea
xchg
inc
adc
lods
out
aam
lret
mov
or
add
fs
push
dec
out
mov
enter
pop
add
insl
into
sbbb
fnsave
sar
adc
lock
in
sub
jb
dec
icebp
imul
ret
subl
movsb
push
lock
mov
or
jb
jno
inc
mov
push
and
rorb
or
lcall
fmul
jp
lahf
push
fdivrl
jnp
incb
dec
add
and
pop
jmp
cmp
add
cmpsb
pop
ss
jo
call
test
pop
insl
xor
fcmovb
add
and
and
sbb
ss
cmp
sub
ret
shll
rclb
out
imul
or
cwtl
xchg
dec
sbb
pop
shl
push
int
mov
pop
pop
sub
movsl
leave
and
inc
mov
sub
inc
dec
negl
pop
xor
inc
pusha
xchg
jno
test
xchg
call
popf
ds
outsb
push
mov
shlb
insb
test
out
xchg
adc
mov
sbb
mov
in
nop
int3
xchg
add
pop
fst
push
pushf
xchg
rcrl
pop
add
push
loope
push
in
int
cmp
dec
jge
out
shr
nop
shl
mov
fbld
add
xchg
mov
adc
mov
adc
and
cmp
jno
mov
cmpsl
mov
es
and
cwtl
rorb
mov
dec
dec
cli
out
out
mov
shlb
loopne
pop
clc
testb
sahf
pcmpeqb
xchg
lods
outsb
or
push
out
data16
mov
sbb
lea
mov
dec
out
imul
cmp
add
and
jge
and
jmp
mov
ss
add
mov
rclb
push
scas
mov
inc
mov
and
fcompl
and
xor
sub
pop
or
in
sbb
clc
or
rol
push
es
insl
xlat
adc
or
leave
movsb
add
fildl
or
fsubs
pop
inc
and
add
jbe
out
dec
andb
fcomps
xchg
mov
aas
out
add
pop
mov
clc
add
iret
inc
and
xlat
xchg
mov
fisttpl
and
push
stc
dec
pop
push
push
and
dec
push
adc
push
inc
jge
int3
pop
rcr
and
jl
pushf
xchg
enter
shrl
push
idiv
lods
adc
mov
dec
add
test
xlat
and
inc
popa
loop
sub
daa
cld
test
js
add
shrl
add
cmp
push
push
cmovnp
or
call
in
mov
sub
sbb
push
sub
adcl
sub
outsl
adc
mov
into
sbb
pop
dec
jo
push
jnp
mov
das
in
loop
loop
jne
addb
clc
arpl
add
jae
push
bndldx
fwait
mulb
cmp
push
cwtl
mov
lcall
xchg
ss
jno
dec
mov
dec
mov
mov
pop
das
in
push
pop
adc
clc
nop
sbb
xchg
and
test
push
sbb
ds
jo
mov
and
mov
shrl
xor
sti
notl
push
nopl
sub
cmp
sbbl
adc
loope
push
mov
js
mov
xchg
add
addb
movsb
in
push
dec
adc
xchg
adc
xchg
es
cmc
jne
les
adc
loopne
insl
sahf
dec
clc
dec
loop
outsl
out
lods
xchg
les
stc
sbb
adc
loop
adc
and
add
stos
in
dec
xchg
mov
daa
stc
adc
dec
bound
mov
cmpsb
push
add
xchg
and
add
scas
dec
push
xchg
arpl
jp
xlat
pop
add
push
add
aaa
and
and
xchg
les
cmc
les
or
popa
jmp
lods
dec
cld
jle
aaa
ja
push
cmp
loop
repnz
mov
add
outsl
mov
inc
sbbw
fistl
jb
shl
add
into
pop
stos
add
in
and
and
ljmp
jg
jb
xchg
popf
dec
jg
xlat
test
in
or
mov
mov
adc
js
loope
les
jae
dec
sub
cltd
adc
or
jmp
adc
imul
cltd
enter
dec
mov
adc
add
fwait
cmp
or
dec
rcrl
ds
jne
movl
push
popa
scas
adc
sahf
dec
test
push
xchg
int
out
push
xchg
xchg
jl
in
xchg
xchg
lds
lret
pop
adc
push
es
fwait
xchg
push
jge
push
imul
jno
out
adc
dec
and
jmp
sbb
scas
push
pop
mov
flds
scas
outsl
or
loopne
imul
je
jne
leave
dec
sub
inc
mov
in
int
pusha
das
out
les
mul
out
add
mov
test
ja
popf
xchg
lock
mov
ret
push
nop
jo
xor
loop
inc
cmp
pop
sbb
push
lret
pop
lock
and
insb
xchg
js
xchg
add
dec
in
cmp
leave
jecxz
popa
xor
xchg
dec
xor
inc
sub
addb
dec
sbb
shll
daa
xchg
dec
in
loopne
test
imul
icebp
dec
loop
nop
mov
lahf
test
mov
add
movsb
daa
or
sahf
andl
adc
lcall
dec
or
aas
out
xor
adc
fstpl
outsl
in
stos
shlb
and
in
mov
cmp
and
lret
jbe
cmp
add
sub
sub
daa
sahf
loop
ror
push
or
bswap
nop
mov
cmp
adc
cld
inc
rclb
or
sbbl
jecxz
shrb
and
std
sub
arpl
xor
adcb
movsb
add
sbb
rcrb
gs
mov
subb
outsb
dec
push
jge
scas
pop
mov
js
xor
rcr
inc
and
lds
xor
lahf
mov
push
dec
mov
push
addl
ljmp
outsl
dec
jo
jno
lret
orl
mov
inc
aas
sbb
xchg
cmp
mov
dec
pop
pop
add
xchg
loop
lods
pop
out
test
fsubs
mov
xlat
jns
movsb
pop
add
mov
pushf
loopne
adc
fists
mov
mov
add
andb
and
xlat
arpl
pop
cltd
mov
xchg
lock
aaa
xlat
movsw
rclb
js
in
jmp
push
mov
push
dec
out
shll
push
sub
fdivr
mov
into
and
divb
out
jno
sbb
jb
cwtl
mov
jae
mov
xchg
ds
push
adc
sbb
dec
sub
shrl
jne
and
arpl
add
out
fistps
xor
lods
aaa
test
mov
aam
dec
loop
arpl
sbbb
outsb
adc
sti
add
cmp
call
mov
pop
sbb
adc
sbb
fcmovu
loopne
xrelease
jl
and
and
xchg
popa
cmpsl
inc
xchg
andb
rolb
ror
ret
js
inc
jne
aam
pop
adc
pop
push
add
ret
inc
mov
js
add
jo
jns
data16
adcl
rcl
dec
fsub
push
lret
sub
push
pop
int3
push
loopne
rcll
push
imul
rorb
pushf
lahf
cmp
mov
pusha
xchg
arpl
lock
and
xchg
mov
arpl
cmp
and
jecxz
mov
xlat
imul
jo
sub
rclb
and
adc
movsb
nop
or
add
mov
xor
lcall
inc
out
sbbl
xchg
clc
push
test
adc
loopne
dec
lods
xor
fs
mov
dec
cmpsl
not
xor
aam
inc
mov
fwait
inc
in
daa
mov
scas
es
sub
or
ss
ja
nop
adc
xchg
add
inc
or
insb
push
movups
ss
xchg
sub
frstor
mov
sbb
or
mov
mov
pop
add
or
dec
nop
push
sbb
xchg
push
test
ret
loope
into
adc
push
adc
lahf
mov
jb
movsl
inc
andb
fwait
aam
xor
and
and
dec
inc
pop
push
jp
or
sbb
orps
jbe
incl
rol
mov
inc
repnz
sbb
iret
add
or
dec
add
push
xchg
cmp
lcall
cmpsb
icebp
sub
mov
xor
dec
gs
lea
jmp
arpl
push
add
xchg
push
cs
sbb
xor
pop
dec
js
xor
sub
iret
sahf
xchg
fisttpl
fsts
cli
mull
xor
push
sbb
jno
ss
rorb
pop
xor
in
mov
inc
add
cmpb
mov
ja
mov
lcall
clc
or
orb
cmc
xor
jle
xor
inc
xor
test
pop
pop
bound
sbb
cmp
popa
lods
sub
jge
decb
cmp
ud0
rcl
cs
pop
or
pusha
mov
pop
xor
mov
jb
test
jb
or
loope
repnz
rcrl
sbb
mov
les
add
js
in
hlt
xchg
mov
adc
outsl
sbb
mov
out
adc
mov
sbbb
add
adc
pushf
pop
cmpsl
sbb
cmpsl
fcomp
add
iret
add
adcl
insb
mov
inc
xchg
jnp
cmpsb
mull
xchg
stos
ret
nop
rcr
mov
and
add
adc
push
pop
imul
into
jl
xor
xchg
es
cmp
dec
cwtl
push
inc
adc
je
iret
out
pushf
jnp
fisubl
aaa
xor
je
lock
xchg
arpl
outsb
and
cmpsl
pop
jmp
stc
and
daa
add
mov
sub
out
xchg
push
mov
sub
mov
mov
lret
push
dec
mov
or
push
jnp
add
add
mov
mov
xor
ljmp
repz
das
lods
decb
das
lock
jae
testl
pop
stos
fs
ja
sbb
fwait
add
in
adc
xchg
xchg
dec
fcmovnu
and
popa
cmc
cmp
notl
push
cmpb
shl
xorb
and
adc
jne
hlt
add
in
rcl
outsl
dec
cmpsl
fucomp
xchg
rorb
fcmovne
dec
inc
loope
or
pop
xor
js
addl
push
push
or
or
or
mov
and
add
jp
or
rolb
ss
add
fwait
sub
add
inc
sbb
pop
movsl
pop
out
mov
stos
jl
es
jne
pop
or
xorb
insl
mov
or
sbb
inc
add
test
dec
int
inc
fwait
lods
cmovnp
jmp
add
movsl
sub
out
icebp
and
mov
inc
cld
pop
xor
in
pushf
cmp
sbb
adc
mov
les
dec
daa
rorl
or
fildl
outsl
les
inc
ss
jmp
pushfw
or
sbb
dec
push
addr16
or
push
ss
roll
adc
inc
sbb
pop
in
ss
cmc
dec
sbb
pop
ret
push
mov
xor
flds
outsb
pop
xor
mov
stc
mov
bound
jno
std
pop
and
inc
cmp
shrl
por
nop
cli
pusha
inc
incl
dec
pop
dec
loopne
lods
xor
arpl
cmpsb
jae
xor
mov
inc
pop
lock
dec
pop
add
and
add
and
jge
lret
mov
aaa
or
ret
inc
mov
sub
xor
or
jo
and
pop
inc
sbb
jno
and
addl
mov
add
mov
and
cmc
stc
adc
dec
ds
add
addb
and
pop
andb
testl
or
jno
push
pop
ss
fsubrl
mov
inc
dec
jmp
and
aad
jg
sub
sub
addr16
pop
sub
dec
mov
lea
ja
lock
xor
adc
dec
in
or
add
add
rcl
adc
sbb
rcll
cmpsb
pop
add
push
inc
xchg
inc
mov
jnp
cli
mov
popa
arpl
adc
dec
loop
or
lret
cmp
mov
in
jmp
lret
dec
fisubl
xchg
mov
je
mov
clc
push
pop
iret
ret
mov
jge
dec
enter
loopne
cmp
cmp
xchg
hlt
ret
add
mov
and
xchg
dec
xor
sub
and
sbb
or
adc
addr16
pop
xchg
out
loope
adc
pop
push
cmp
imul
loope
dec
pop
sub
stos
mov
in
mov
gs
mov
cli
cs
add
sub
inc
or
fnsave
lea
or
dec
frndint
mov
cmc
inc
out
fmuls
push
sbb
and
pop
or
subl
and
icebp
popa
jge
fwait
add
test
out
mov
pop
jb
jge
test
fmul
xchg
mov
popa
aad
mov
cmp
inc
ret
dec
mov
ret
cwtl
sbb
jbe
out
add
sbb
xchg
push
pop
xchg
sub
push
pop
xor
call
imul
in
cmp
push
subb
movsb
push
fildll
cmp
iret
jp
cmp
mov
jg
popa
xchg
push
daa
jno
pop
and
sub
fldcw
xchg
inc
lea
dec
loope
cltd
sar
push
sbb
in
dec
pusha
ficoms
jl
insl
ss
mov
imulb
add
inc
add
adc
mov
les
xchg
cmp
pop
fsub
sbb
loope
stos
and
jnp
adc
fidivs
rcll
sub
cmp
loope
das
dec
pop
sub
adc
daa
fwait
dec
movsl
adc
push
sahf
mov
xor
add
dec
js
je
ss
and
outsb
jl
decl
and
lods
sbbb
int3
mov
push
sub
sbb
mov
pop
fistpl
outsl
decb
aam
je
adc
rol
cli
cmp
lds
inc
sub
leave
dec
mov
or
out
imul
and
cmpsl
mov
and
cmpl
adc
adc
adc
and
andb
mov
mov
sar
xchg
mov
jnp
inc
and
movsl
sub
ss
loope
mov
shrb
les
ret
iret
fmull
dec
pop
out
pop
iret
into
dec
adc
pusha
subl
out
or
pop
fstpt
dec
fsubrl
shlb
inc
int3
push
std
dec
adc
mov
push
inc
sbb
or
and
mov
and
push
dec
test
sub
cmpsb
pop
xchg
or
push
xor
iret
inc
jge
xchg
test
mov
fmull
dec
inc
cmpsb
fnstcw
sub
xor
dec
rcrb
adc
test
sub
xor
mov
mov
adc
push
dec
pop
movsl
test
fisttpl
add
inc
ja
jp
rcrl
popf
and
cmp
inc
pop
pusha
xchg
cmp
pop
and
adcb
orl
pop
sub
ret
addr16
push
in
sub
jno
sub
add
iret
mulb
xor
je
aas
xchg
add
jecxz
xchg
xchg
ret
cmp
mov
hlt
mov
push
scas
out
jo
stos
mov
ljmp
out
out
xchg
es
clc
xor
out
lret
add
mov
ret
cmp
loope
je
push
call
inc
and
jae
outsl
and
rclb
filds
mov
lcall
cs
xor
cs
xchg
movsl
mov
jecxz
dec
or
in
and
cmpsl
scas
xor
test
js
pushf
rclw
nop
lock
xor
ss
fcoms
mov
fwait
es
xchg
push
xor
lahf
push
inc
push
push
iret
out
add
and
or
xchg
pop
xor
xor
mov
sub
and
inc
mov
dec
cltd
jle
lods
js
and
and
add
enter
out
xor
pop
loopne
cwtl
or
loopne
dec
bound
sbb
push
ret
adc
jb
mov
mov
adc
xor
std
add
or
popa
mov
int
xchg
jp
xchg
sbb
out
insl
sub
imul
pop
ret
adc
lds
stc
pop
arpl
or
and
dec
add
dec
or
orl
cmp
add
loope
clc
adc
std
push
loopne
arpl
movsl
daa
nop
setbe
imul
cmp
or
sub
push
mov
add
leave
and
add
mov
ret
fadd
test
dec
and
insl
push
mov
dec
lock
out
cmpsb
loope
pusha
sbb
cmpsl
jmp
mov
or
lods
add
insl
add
pop
dec
pop
or
insl
fcmovnb
sbb
push
mov
adc
jp
xchg
out
sbb
fildll
or
icebp
add
mov
mov
dec
sub
rclb
mov
dec
andb
inc
imul
or
fmul
add
fldcw
out
xchg
sub
iret
and
cmp
cmp
or
in
dec
lret
or
dec
push
fnstcw
rep
icebp
fs
rolb
add
add
adc
imul
inc
lods
add
dec
ss
or
push
pop
inc
popa
leave
push
add
fistps
in
lods
xchg
fstl
xor
xor
fcoms
mov
clc
xchg
popa
xchg
mov
in
imul
das
add
adc
pop
fisttps
cmpsl
lods
test
movsl
fldcw
js
add
xchg
pop
ret
lods
add
fildll
push
push
push
ret
movsb
test
in
pop
pushf
shrb
stos
out
add
push
add
daa
pop
pop
aam
lea
mov
cltd
insb
mov
cmpsl
pop
cmp
lea
cmp
daa
mov
pop
and
lock
add
popa
mov
leave
arpl
int3
push
stos
insb
pop
sub
sub
loope
movsb
xor
lods
arpl
lds
gs
imul
xor
shll
sarb
repz
loopne
and
xor
push
and
inc
push
xor
dec
sbb
scas
push
or
xor
mov
adc
mul
adc
push
or
xchg
rcll
test
jne
jbe
mov
or
mov
out
inc
daa
mov
mov
xor
sbb
ret
mov
sub
xchg
mov
mov
cmc
daa
push
sbb
push
jecxz
sub
or
in
sub
cmpsb
hlt
out
add
scas
cmc
stos
pop
and
push
dec
rol
lahf
jmp
jge
sub
push
mov
sub
rolb
jns
daa
push
js
adc
add
mov
adc
inc
loop
dec
scas
xlat
jge
or
in
arpl
aaa
or
jns
es
or
lock
test
aad
cmp
js
add
push
push
pushf
mov
add
pop
sahf
call
enter
popf
iret
xchg
mov
xchg
cli
mov
gs
and
orb
mov
or
arpl
jns
or
mov
rorl
or
int3
adc
pop
sbb
xchg
add
mov
insb
in
inc
mov
lods
imul
ljmp
or
push
sub
or
sbb
push
add
dec
sarb
cwtl
add
data16
insb
dec
les
push
aam
loop
adc
inc
xor
push
push
ret
bound
add
call
push
inc
push
enter
les
adc
rolb
add
inc
cmp
add
and
mov
add
je
jno
ficompl
jb
fwait
sbb
xor
lock
add
call
add
or
add
loop
push
das
pop
ss
dec
mov
mov
out
add
es
adc
or
enter
scas
push
ja
fadds
add
sbb
dec
add
les
pop
loope
clc
and
enter
add
scas
and
lock
add
cmp
mov
lods
stc
add
andl
or
sbb
test
xchg
add
cmp
pop
pop
add
xsha1
cmpsb
lret
dec
fildll
jg
sbb
sub
loopne
das
jg
pop
push
add
rolb
and
and
and
push
jae
push
adc
daa
orl
pop
or
push
mov
add
xor
xchg
jns
arpl
or
dec
rcrb
loopne
lea
addb
jae
mov
sbb
push
sbb
stos
rclb
pusha
sub
aaa
cld
sbb
mov
push
sbbb
ret
xchg
in
test
jne
mull
outsb
add
mov
pop
mov
inc
inc
test
leave
adc
outsb
sbb
in
out
push
shl
cmp
mov
rolb
dec
mov
popf
mov
mov
aad
stos
xor
and
push
cmp
or
int3
adc
sbb
add
fs
xchg
adcb
sub
push
add
cmpsb
pop
sbb
test
mov
into
sub
inc
xor
mov
bound
hlt
mov
es
in
pop
cmpsb
shlb
rcl
cmp
arpl
popa
sbb
sbb
inc
aas
lds
jle
jne
faddl
lds
jo
mov
adc
push
pop
inc
loope
sub
es
add
repnz
add
mov
stos
jbe
cmp
adc
lods
arpl
cmp
iret
shrl
ret
sub
add
cld
es
pop
je
lock
pop
xchg
fadd
add
adc
insl
or
mov
push
inc
add
add
and
fstpt
cmp
jge
jbe
sbb
push
cmp
ja
xor
enter
les
test
add
push
xchg
add
fwait
dec
pop
les
insl
fildll
imul
add
out
add
leave
fadds
lods
add
pop
xchg
ret
imul
fildl
je
xor
jge
fidivs
test
mov
xlat
fchs
and
test
es
ret
scas
cmp
add
add
sbb
popf
dec
add
inc
push
mov
ljmp
outsb
orl
js
xor
scas
fsubrs
stc
inc
and
ret
jecxz
movb
imul
inc
or
sbb
loope
jno
lahf
ss
les
sbb
and
scas
inc
push
xor
test
in
ss
mov
push
inc
add
sub
pop
push
xor
add
sub
adc
adc
add
xor
notl
xchg
pop
aad
adc
leave
pushf
and
sbb
cmpxchg
je
movsb
or
pop
dec
lods
adc
jmp
lods
push
roll
sbb
lahf
sbb
adc
cmovae
xlat
cmp
cmpsl
shll
push
and
in
pop
add
add
and
out
mov
cmp
mov
or
cmp
mov
cmpsb
popa
adc
add
cmp
ss
sbb
sbb
sbb
lea
and
mov
add
loope
add
mov
xchg
loop
test
sbb
and
add
iret
les
in
push
add
popf
pop
movsl
loopw
jmp
lock
call
sti
add
leave
adc
jae
loope
dec
clc
rolb
ljmp
rcll
loope
rcrb
pop
fwait
push
mov
ja
and
insb
leave
add
add
sub
add
stos
sbb
sbb
mov
fwait
and
mov
jnp
fimuls
jge
pop
dec
outsb
push
pop
mov
mov
iret
adc
outsb
repz
xchg
cltd
adc
and
cmpsl
out
loop
jg
gs
xchg
rolb
jmp
dec
dec
cmpsl
pop
insb
pop
pop
loope
pop
cmp
inc
fstps
imul
push
sub
jns
idiv
cli
pop
adc
lcall
dec
rolb
fwait
cltd
cmp
push
adc
jo
and
fsubs
jae
xchg
add
sbb
popf
mov
mov
mov
or
xor
in
dec
popl
xor
xlat
cwtl
ret
das
sbb
add
pop
ret
push
pop
push
aaa
loope
outsl
jg
jge
ret
add
pmulhw
add
xor
mov
or
fwait
mov
pop
sub
les
cmp
addr16
pusha
es
insl
cmpsb
mov
out
or
inc
dec
or
pop
push
pop
fsubl
inc
push
out
mov
pusha
mov
out
test
push
outsl
fsubs
adc
mov
dec
test
and
es
cmc
or
jnp
mov
xor
mov
mov
mov
push
shlb
and
pop
cmp
stc
adc
lods
add
push
inc
and
push
scas
lock
add
inc
pop
mov
stos
sub
adc
mov
scas
and
rcl
adc
cmp
cmpsb
xor
sahf
push
dec
jl
xchg
add
out
pop
fwait
inc
movsl
add
enter
mov
sub
pop
fs
add
pop
add
mov
xor
add
xchg
mov
sbb
fwait
add
push
or
add
and
mov
xchg
inc
push
out
push
mov
lods
adc
sbb
mov
aad
lea
roll
sub
adc
inc
cmc
cmp
test
mov
rcr
mov
addr16
pop
arpl
test
test
cmpsl
sbb
pop
cmp
cmpsb
jo
or
jbe
into
movsl
in
lods
xor
sbb
add
rclb
pop
insb
or
ljmp
addb
jp
ror
adc
fistpll
or
icebp
aaa
mov
add
lods
mov
or
adc
lea
fisubl
add
mov
cmpsb
jo
mov
push
add
mov
add
pop
ss
nop
mov
and
ret
lret
test
pop
xchg
imul
scas
add
add
stos
in
ret
sub
fimuls
and
hlt
les
sarl
sub
fmulp
in
adc
pop
add
pop
arpl
xchg
mov
sub
xchg
cmp
ljmp
inc
ds
push
mov
adc
xor
in
or
mov
insl
mull
dec
imul
xor
sbb
aam
jnp
loopne
pop
loope
push
pop
fs
popa
push
add
jae
ret
mov
mov
jb
xor
mov
js
loope
dec
mov
cmp
lret
mov
jecxz
inc
xor
mov
xor
jno
push
call
xchg
xchg
pop
pop
ret
loope
cwtl
inc
outsl
xor
int3
dec
mov
pop
adc
dec
add
jo
pop
adc
sub
add
int3
dec
test
jnp
les
jo
jb
sub
mov
ja
fldt
inc
clc
pop
bound
lea
push
lock
test
or
sbb
push
test
xor
shlb
adc
and
ss
or
add
js
adc
cmp
push
arpl
inc
jae
inc
icebp
pop
adc
fsubs
iret
and
cwtl
lds
jb
xor
sub
cmp
outsl
addr16
jle
sbb
out
insb
add
popa
cmp
or
jae
ret
inc
scas
lds
cmpb
test
mov
dec
and
jno
and
mov
je
cmpsb
fidivl
in
aas
pop
mov
jae
ja
inc
or
jl
rcrl
dec
sub
movhps
mov
or
xchg
clc
inc
adc
dec
idiv
xchg
out
or
scas
pop
cwtl
fcoms
push
jne
pop
mov
push
popa
xchg
xchg
popa
das
outsl
ret
inc
sbb
add
jno
jb
dec
jecxz
int3
jp
add
xchg
in
sub
push
ror
jne
test
mov
push
add
test
test
shll
and
jmp
mov
lcall
adc
xor
push
imul
adc
pop
or
sub
loope
or
sub
leave
jl
lret
push
mov
cmp
push
xchg
sub
sarl
inc
pop
pop
or
loopne
insl
add
jo
mov
stos
popa
dec
pop
mov
loopne
fwait
push
pop
and
pop
ja
fldl
loop
popf
outsl
mov
adcl
cmp
adcb
dec
clc
nop
iret
aam
test
outsb
push
hlt
lret
pop
pop
rolb
xor
sbb
pushf
jle
mov
js
jg
cmp
rclb
add
mov
cli
icebp
inc
inc
divl
lds
sbb
jo
lret
xchg
insb
jge
or
and
dec
rorl
mov
je
in
jbe
or
push
mov
pop
mov
pop
scas
js
add
ja
ret
lock
scas
mov
push
aas
inc
ret
outsl
pop
push
test
adc
and
mov
inc
jecxz
mov
fsubrs
cmp
js
aaa
add
cmp
sarb
pushf
cmp
ret
movsl
sbb
rol
mov
xchg
and
mov
cmp
sub
push
cmp
repz
inc
popf
mov
ja
or
lret
icebp
test
cmp
push
shlb
out
rorb
sub
mov
mov
insb
xor
or
pop
insb
or
ret
stos
clc
xor
mov
xchg
and
xchg
or
push
sub
fisttpl
xor
mov
js
mov
jns
xlat
loope
mov
pop
dec
clc
xchg
in
sub
or
mov
add
mov
and
jae
xor
push
add
es
ss
cmp
in
addl
inc
xor
cmp
aad
mov
mov
jne
xor
sti
adc
popa
adc
or
gs
mov
jo
ret
mov
xor
test
xor
xlat
push
lret
mov
test
es
jnp
in
or
imul
xor
and
scas
es
jnp
inc
imul
and
sbb
mov
sub
or
sub
insb
mov
dec
testl
jmp
mov
xadd
insb
inc
inc
andb
and
ja
pushf
dec
nop
jl
pop
push
pushf
mov
add
lods
push
adc
imul
xchg
push
add
pusha
push
inc
or
dec
dec
sub
cmp
xor
mov
pop
scas
aaa
xor
loop
cs
in
or
addl
insb
dec
cmp
shll
stos
mov
lods
xor
pop
dec
aad
add
pop
or
or
push
fcoms
mov
mov
mov
sub
in
add
arpl
insl
sbb
movsb
clc
push
test
xor
or
adc
sub
dec
and
sbb
add
iret
add
dec
mov
repnz
stos
jno
andb
aaa
stos
stos
aaa
pop
rcrb
lret
mov
mov
mov
mov
dec
and
or
jge
addr16
add
inc
or
aas
add
les
stos
sti
in
pop
fcomps
xor
jae
aas
sub
stos
mov
clc
mov
push
cmpsl
aas
xchg
sbb
sub
sar
out
lods
and
cld
es
xor
xchg
pop
insl
inc
or
mov
in
and
and
stos
add
inc
lcall
add
jo
mov
insb
dec
lock
je
jno
or
and
sub
add
push
xchg
sub
test
push
sbb
and
out
loope
in
ss
sub
inc
jl
cmc
insb
jmp
pop
jmp
cs
lock
mov
enter
test
fcmovnbe
mov
adc
mov
dec
lcall
mov
fmuls
adc
js
sub
pop
jo
pop
mov
pop
loope
dec
dec
mov
shrl
push
or
add
add
push
sbb
push
sub
and
mov
cmp
daa
jae
or
mov
xchg
dec
pop
dec
mov
inc
jge
shrl
add
jo
adc
subl
mov
insl
or
cmp
cmc
cltd
test
jp
call
rcll
dec
jbe
push
or
lcall
or
inc
mul
pop
jp
pop
xor
fstp
push
ficompl
test
insb
add
or
pop
cmp
aaa
sub
inc
aaa
shrl
mov
xor
idivb
inc
jmp
dec
adc
es
flds
cmp
xor
lds
xchg
jl
pop
daa
lahf
mov
sbb
test
add
subb
xor
inc
jo
sbb
jns
loope
push
dec
pop
xor
popa
shlb
nop
pop
xchg
sbb
jmp
inc
mov
add
sub
jbe
sbb
sbb
xchg
in
test
fisubl
lock
add
inc
orl
and
adc
insb
dec
mov
sbb
mov
fsub
negb
adc
mov
xchg
and
iret
add
push
loope
push
psrlw
jmp
dec
cltd
addr16
sub
sub
sbb
ret
nop
mov
cmpsb
sub
inc
shr
pop
add
add
xchg
cli
loope
push
addr16
cmpsl
cmp
aam
sub
imul
fiadds
adc
andb
push
inc
adc
cmp
pushf
inc
loop
adc
dec
sbb
pop
or
ja
sbb
cmp
scas
push
adc
add
jo
dec
push
fldt
xor
pop
aaa
fisubrl
push
push
add
test
fnstsw
push
mov
cmp
inc
das
jge
push
into
test
add
test
mov
or
call
mov
pop
inc
mov
dec
add
sub
adcl
or
sahf
ret
jecxz
pop
in
push
nop
push
imul
loopne
addl
cmp
sbbb
int3
or
ret
nop
pushf
fistps
and
or
add
loope
add
adc
pushf
orb
scas
es
xchg
inc
add
push
nop
pop
pop
mov
std
mov
jecxz
sub
mov
or
jmp
jae
push
push
sub
fdivs
mov
xchg
adc
adc
adc
jne
mov
mov
and
loope
adc
arpl
pop
es
xor
dec
popa
or
sarb
adcl
pop
adc
add
mov
mov
mov
mov
add
xor
arpl
cmpb
bound
sub
sbb
push
pusha
or
movsb
js
hlt
mov
cmpb
jmp
xchg
mov
nop
out
mov
pop
cmp
ret
or
daa
push
mov
in
shl
inc
or
mov
int
popa
and
in
flds
add
shlb
bound
cmc
shlb
test
in
popf
sbb
movsb
or
movlps
mov
push
addr16
loope
mov
ja
adc
std
sub
ja
pop
and
sbbb
mov
jbe
mov
push
inc
lods
xor
out
scas
xor
sbb
adc
test
cmpsb
mov
les
dec
sbb
inc
inc
pop
jns
sbb
adc
dec
adc
mov
insb
into
add
pop
xchg
mov
mov
sub
jmp
jmp
mull
and
mov
scas
shll
adc
and
cmpsl
imul
xor
or
out
push
cmp
jo
fisubrs
addl
or
leave
scas
or
in
shrb
add
push
rol
cmc
push
mov
test
or
push
inc
out
dec
pop
push
outsl
mov
ret
dec
push
stos
aam
and
popa
inc
mov
pop
sbb
mov
jo
sbb
pusha
iret
lods
mov
pusha
push
xor
dec
dec
fidivrl
mov
add
xchg
mov
and
push
and
dec
and
jg
dec
adc
or
ds
shlb
mov
ss
divl
and
add
pop
adc
sub
add
sub
pop
cmpsb
ds
inc
daa
lret
mov
pop
and
and
or
mov
imul
test
iret
push
add
pop
icebp
imul
int
insl
or
xchg
loop
xchg
sub
or
sbb
xor
aam
inc
cmp
into
mov
fadds
call
add
cmpb
add
pop
or
cmpsl
xor
sub
mov
push
daa
mov
push
divb
or
testl
adc
push
dec
inc
fmuls
in
sub
dec
and
cmp
cmpsl
inc
push
xor
xchg
or
mov
mov
mov
hlt
xchg
or
add
add
mov
jno
and
sarl
imul
rolb
push
cmp
shll
add
xor
xor
scas
inc
add
pop
cwtl
lock
aaa
pop
or
or
movsb
addr16
insb
fsts
xchg
pop
pop
sarl
mov
sub
inc
ljmp
test
or
pop
sbb
sbb
testl
sub
sub
or
cmpsb
sub
push
xchg
and
test
jmp
xchg
cmp
loop
sbb
cmc
and
das
jnp
jae
ficoms
jg
std
cmp
inc
adc
loope
adc
pop
and
repz
mov
add
xchg
or
daa
push
or
sub
into
fwait
jb
bound
adc
or
push
cmp
and
sbbb
roll
xor
les
mov
and
icebp
cmpsb
dec
pop
or
inc
push
jbe
mov
mov
fimuls
in
lock
stos
adc
popf
shll
ret
push
xchg
in
addr16
inc
adc
xchg
push
leave
out
rorl
add
pusha
dec
enter
adcb
in
mov
mov
addr16
cmp
mov
pop
lock
jmp
and
rol
loopne
and
icebp
or
ret
add
call
push
add
test
push
sub
inc
sbb
adc
jo
int3
adc
push
cmp
dec
pop
fadds
xor
and
cmp
imul
cmpb
mov
gs
jb
jp
inc
dec
pop
ja
orl
sub
mov
push
rolb
fstl
dec
jecxz
dec
add
iret
pusha
cmpsl
daa
jecxz
inc
xlat
rolb
incb
xchg
and
loope
xor
mov
cltd
mov
jecxz
adc
sbb
or
jecxz
lret
pusha
out
mov
adcb
sti
xchg
or
cmpsb
xor
int
add
aad
sbbl
cmpsb
add
sub
stos
cmpsb
test
test
js
mov
mov
int3
and
inc
sub
mov
outsb
loopne
dec
adc
rclb
pusha
xchg
lods
fwait
add
or
or
dec
or
rorl
xor
out
push
inc
and
sbb
aas
push
je
push
ss
ret
outsb
test
loope
and
insl
imul
fmull
push
rol
xchg
fldcw
incb
push
mov
aas
mov
dec
ret
or
inc
dec
mov
ja
pop
add
inc
push
mov
push
fisubs
add
add
push
mov
andb
mov
aam
mov
sub
xor
dec
dec
popf
xor
adc
mov
dec
jo
cwtl
arpl
add
push
and
pop
xor
nop
shrl
jae
dec
sub
mov
cmpsl
add
test
push
mov
sub
xor
fnstcw
imul
inc
sub
jo
aaa
cmp
scas
or
cmp
and
push
pop
push
jbe
pop
js
leave
pusha
add
add
nopl
lret
mov
inc
shr
jbe
adc
cmpsb
push
sbb
and
pusha
mov
mov
or
or
mov
movsb
lods
xchg
add
fiaddl
mov
cmp
add
xor
sub
mov
shlb
lods
iret
jne
sbb
dec
lret
adcb
or
sahf
imul
ljmp
pop
fisubrl
loopne
add
sbb
or
sbb
sub
and
add
push
mov
nop
or
test
test
iret
pusha
pop
enter
and
addl
sbb
std
out
add
adc
mov
fwait
loopne
aam
addr16
das
fnstcw
mov
daa
leave
mov
inc
test
mov
movsb
mov
sbbb
xor
sub
mov
iret
mov
and
jbe
mov
std
jmp
sarl
and
sbb
sbb
pop
inc
cwtl
push
xchg
clc
dec
call
loopne
or
pop
stos
jbe
aas
cmp
xchg
scas
jbe
xor
les
les
add
imul
sbb
sub
add
pop
sar
jne
jle
es
sti
test
out
and
sarb
push
and
xor
rclb
sbb
dec
ret
rcl
adc
imul
es
sbb
ret
push
clc
push
outsb
mov
int3
cmp
adc
lock
test
push
icebp
sarl
dec
xchg
addb
adc
clc
push
shll
and
add
xchg
add
and
mov
xor
adc
gs
jo
nop
xchg
je
pop
dec
add
adc
sub
vmovsd
dec
mov
jmp
mov
pop
and
stos
mov
adc
mov
enter
and
dec
aam
mov
add
inc
out
or
sbb
xchg
or
sub
pop
cmp
inc
das
icebp
cwtl
test
pop
movsb
in
adc
xchg
es
xor
mov
pop
jo
push
out
rsqrtps
inc
in
or
or
in
and
jo
fwait
cs
sbb
stos
test
js
push
add
lods
mov
or
or
lahf
shl
pop
pop
movb
push
sbb
xor
xor
ljmp
cmp
or
add
andl
mov
pop
xor
aad
fs
cmpsb
shll
jbe
rolb
ret
and
roll
mov
and
lret
xchg
mov
and
bound
jmp
cmp
cmp
daa
rcrb
dec
xor
or
aad
sub
add
sub
sbb
adc
ret
xchg
and
mov
ja
sbb
in
sbb
fs
adc
mov
dec
insl
and
jge
pop
inc
add
test
lret
sbb
test
enter
push
dec
pop
add
orl
das
movsl
xor
aas
sub
leave
gs
sbb
out
sarb
jg
add
dec
add
fidivrl
xchg
adc
jecxz
xchg
lds
pop
rolb
adc
mov
pop
fs
mov
adc
js
andb
aam
rorl
xchg
insb
jno
or
pop
movsb
loope
aas
push
fiaddl
pop
pop
push
mov
add
rorl
xor
pop
test
stos
imul
shrb
push
and
push
imul
sbb
das
sub
stc
outsl
xchg
stos
push
movsl
xor
sbbb
test
cmp
aad
pop
jg
jmp
or
push
xchg
dec
jmp
rolb
lods
test
mov
sbb
add
mov
popa
test
cmp
outsb
out
inc
aas
jae
sbb
pop
add
loopne
add
add
or
add
or
pop
lods
pop
ss
push
data16
mov
arpl
call
out
fistps
sbbb
push
add
mov
or
sub
jb
push
call
mov
fildl
push
mov
and
ffree
xchg
test
inc
sarb
mov
add
sub
jne
mov
pop
add
rcrb
fadds
sbb
ret
mov
arpl
fsubrl
jns
cmp
test
add
inc
adc
dec
add
mov
pop
cs
daa
ret
std
lret
iret
sub
jl
dec
inc
and
sbb
pop
popa
sbb
add
add
ret
sub
stos
inc
es
int
ror
sub
and
mov
mov
mov
mov
nop
out
jo
and
pusha
loope
mov
add
jo
xor
lds
outsl
rorb
popf
loop
xchg
stos
dec
hlt
push
mov
inc
into
mov
nop
popf
daa
rcrl
ss
xchg
fisttpl
hlt
notl
pop
outsl
and
popa
pop
pusha
and
or
mov
inc
and
out
add
shl
jae
das
pop
mov
push
pusha
sub
popa
fisubl
shlb
loopne
nop
dec
adc
hlt
fildll
jo
adc
add
andl
test
pop
hlt
setnp
fcomps
bound
push
or
rol
push
xchg
rorb
xor
jg
repz
mov
aas
ds
add
sbb
cmp
inc
push
out
sub
idivb
das
sub
jmp
shlb
jecxz
mov
in
int3
in
jbe
xor
sbb
jae
in
jp
mov
lods
in
inc
cmp
sbb
lock
popf
lcall
js
sarl
xor
and
out
out
negl
scas
enter
aam
js
jo
js
xor
jnp
jecxz
movsb
pop
ja
enter
out
scas
ljmp
mov
outsb
shrl
popf
fisttpll
mov
adc
mov
or
dec
enter
mov
sahf
pop
push
movsb
inc
stos
aaa
pusha
dec
out
lds
stos
mov
andl
clc
scas
insb
inc
mov
pop
fcomip
sbb
stos
mov
mov
push
mov
les
mov
inc
fbld
mov
pop
and
daa
and
sahf
insl
dec
aas
stos
rclb
scas
dec
shlb
sbb
cmpsl
sbb
test
testl
add
fildll
sbb
jbe
bound
push
dec
in
pop
or
insb
inc
xor
int3
add
das
xchg
outsb
movb
insl
adc
inc
jmp
bound
adc
cmpsl
out
add
iret
rclb
add
mov
xchg
cwtl
in
pop
sbbb
fisubs
sub
mov
imulb
inc
inc
cmp
add
pop
sbb
jecxz
cmp
bswap
xchg
inc
add
ret
aaa
mov
aam
shr
push
adc
pop
mov
loopne
addr16
out
fmuls
fs
lret
xor
cs
sbb
cmpsb
mov
test
inc
clc
xchg
add
imul
mov
cmpsl
pop
xor
clc
sub
sub
mov
ror
adc
adc
int
cmpxchg
aam
mov
mov
mov
dec
jg
lcall
cmp
pusha
sbb
xor
inc
push
sbb
lods
in
xchg
pop
inc
push
pop
shlb
rorb
icebp
lds
push
loopne
add
in
and
cmpsl
ret
les
push
sub
and
pop
mov
les
jg
cwtl
cmp
adc
and
inc
fs
imul
out
sbb
int3
adc
jmp
push
xlat
stos
and
push
aam
push
xor
mov
xor
add
or
cwtl
icebp
jae
inc
and
add
inc
jo
sbb
xor
adc
sbb
pop
cmp
add
pop
clc
and
adc
sbb
in
and
or
loope
sbb
lret
out
fdiv
rclb
mov
sbb
jle
mov
faddp
popa
mov
sub
xor
sahf
neg
clc
ret
cmp
add
and
add
xchg
xor
push
lret
or
fdivrl
xor
ljmp
sub
lock
push
lret
jb
dec
testb
mov
or
icebp
and
dec
push
pop
cmp
add
cmp
jnp
push
insl
lods
mov
mov
loope
inc
jl
add
push
shll
jnp
cmpsb
push
push
push
outsl
jo
pop
cmp
and
adc
hlt
pop
repz
lret
dec
lods
push
push
push
outsb
add
jno
rol
push
or
daa
pop
sbb
es
repnz
aam
into
sbb
push
add
int
and
insb
mull
mov
dec
dec
std
xchg
push
inc
adc
push
cmp
in
add
repz
push
or
in
aam
sbb
test
fcmovnb
lahf
insb
mov
fstl
inc
in
or
xor
adc
rcr
mov
mov
mov
das
loop
add
xchg
aam
or
adc
mov
imull
xorl
mov
lods
imul
fmull
inc
pop
lock
out
xor
lea
pushf
ret
sub
xlat
adc
insl
inc
xchg
lret
sahf
xchg
pop
pop
add
lods
nop
push
inc
leave
mov
cmp
or
adc
adc
cmpsb
push
and
and
adc
out
pop
test
sbb
mov
popa
and
or
add
pop
sbb
sbb
fadd
movsb
sahf
xchg
aad
add
aad
adcb
mov
sarl
mov
sub
loopne
cmp
cmp
fadd
bound
inc
push
and
mov
xchg
cli
jbe
cld
add
jb
dec
outsl
pusha
aaa
test
sub
cmp
mov
cltd
xor
pop
adc
adc
iret
test
pop
jp
fnsave
and
sbb
pop
ds
les
or
out
xor
ds
mul
ret
arpl
pop
arpl
orl
or
and
jg
jmp
in
dec
pop
or
cmp
mov
mov
call
stos
or
mov
dec
sub
es
jne
lds
call
push
ret
sub
loopne
inc
loope
jnp
pop
in
adc
lds
inc
sar
and
adc
aaa
xor
add
fisubrl
add
inc
pop
pop
and
xchg
das
mov
adc
cs
sti
call
cltd
and
jne
or
cli
jp
shrl
pusha
sbb
pop
mov
add
cmp
rorl
pusha
scas
and
inc
dec
sub
and
addr16
sbb
stos
shrl
or
lea
lea
shr
loope
lcall
add
loopne
mov
push
popa
arpl
adc
xchg
pusha
fbstp
orl
sets
jecxz
inc
out
jecxz
or
out
push
jecxz
xchg
pop
hlt
adc
or
movb
test
out
cmp
inc
popa
fisttpll
bound
jb
mov
mov
mov
mov
push
scas
and
fidivl
mov
cwtl
adc
testb
repz
mov
pop
mov
xor
out
in
add
test
pop
pop
pop
imul
xchg
dec
adc
ret
jge
xchg
lea
lods
jno
frstor
pop
xor
xchg
ret
test
test
jbe
inc
rolb
lret
adc
inc
mov
movsl
bound
sahf
push
xlat
push
pop
outsb
cmp
dec
pop
mov
data16
add
insl
test
rcll
loopne
cld
aam
and
push
inc
es
es
js
jecxz
push
and
iret
inc
iret
incl
leave
sub
inc
popa
xor
clc
add
stos
repnz
push
dec
jae
arpl
aas
inc
pop
push
out
cmp
pusha
sub
inc
mov
xchg
shll
cmpsb
adc
pushf
cmp
add
fcompl
xor
lock
jmp
mov
into
xor
mov
sarl
mov
pop
cwtl
pop
ss
stos
mov
xor
mov
push
mov
ret
jl
test
addb
out
call
sub
xorl
test
and
or
loopne
pop
cmp
mov
sub
cmc
fwait
pop
jmp
test
mov
or
xor
push
movsl
pop
and
or
ds
adc
shl
aaa
jne
call
negl
jl
mov
jecxz
call
iret
add
mov
ret
add
sarl
mov
shlb
scas
jge
mov
mov
cs
or
iret
stos
incb
xchg
mov
das
test
sub
xor
test
addb
orb
xchg
add
iret
ss
jo
sbb
pop
rorl
mov
mov
mov
push
enter
pop
pop
jecxz
sub
cltd
pusha
pop
imul
pop
dec
xlat
and
lahf
pushf
cmp
push
jecxz
fistpll
insl
lods
xchg
lea
adc
inc
pop
aad
or
rdtsc
jnp
fsubrl
push
outsb
stos
addr16
aam
movsl
sub
ds
jp
dec
cmp
loope
jnp
cmp
add
lcall
or
push
jb
icebp
outsl
jp
out
sub
cmc
test
adc
cmp
in
or
push
es
and
xor
test
ss
js
mov
adc
sbbb
jne
xchg
imul
mov
scas
sub
pop
fwait
jb
gs
sbb
es
mov
sbb
pop
je
add
fdivl
jbe
lock
sbb
push
aas
push
lret
mov
push
js
nop
mov
or
and
lods
jne
add
lret
dec
and
inc
xchg
dec
push
cwtl
inc
add
pmaddwd
insb
in
xor
loope
sub
mov
ret
jmp
arpl
sahf
js
cmp
mov
out
mov
hlt
add
addl
jmp
mov
and
dec
or
and
shlb
cwtl
inc
in
lret
in
or
lahf
xchg
fsubl
dec
ds
and
movsl
or
xchg
int3
xchg
mov
sub
jecxz
or
ficompl
add
inc
test
loop
pushw
bound
push
pop
subl
sbb
dec
or
or
or
mov
push
cmp
ds
xchg
mov
daa
leave
mov
scas
jae
pop
enter
push
cmpb
cmp
jecxz
or
mov
inc
adc
loope
sbb
or
xlat
shlb
mov
or
inc
and
aad
inc
push
out
lret
xchg
add
cmp
adc
mov
push
dec
insb
mov
adc
and
push
daa
push
jp
mov
in
dec
jo
mov
mov
inc
nop
or
inc
enter
xchg
dec
dec
mov
and
pop
inc
mov
shlb
aam
adc
mov
and
leave
shlb
iret
ficompl
arpl
aas
push
icebp
dec
lods
addb
mov
lock
sbb
push
gs
or
ja
push
inc
jecxz
cli
aaa
sbb
pop
jl
lock
sub
cltd
je
rorb
iret
push
cltd
jbe
stos
imul
addr16
rolb
ljmp
rcrb
adc
dec
hlt
xchg
imul
sbb
pop
ror
xchg
push
mov
test
adcl
push
js
mov
std
mov
inc
lds
mov
icebp
call
mov
lea
xchg
dec
or
std
in
pop
sub
inc
pop
sbb
dec
add
sbb
rol
rol
cmp
mov
adc
repz
cld
push
push
cli
xchg
jmp
add
or
dec
lock
ja
jmp
into
sub
adc
addl
or
enter
or
add
cld
xor
in
ds
xor
xchg
mov
jecxz
adc
xchg
dec
dec
sbb
mov
imul
dec
iret
nop
xchg
arpl
shlb
jb
adc
xchg
js
cmp
dec
fs
jle
and
push
fs
cmp
mov
dec
jne
jecxz
sbb
insl
int
imulb
popa
sbb
push
in
daa
into
int
jge
pushf
dec
cmc
and
outsl
mov
cmp
push
xlat
ret
and
icebp
add
inc
cmc
push
lods
pop
fistl
or
push
push
movsl
jbe
lock
rcr
jg
mov
inc
shrl
jp
fsts
shlb
sub
xor
push
and
lahf
inc
lret
push
sbb
or
xor
mov
or
js
iret
and
mov
mov
rolb
xor
out
pop
pushaw
sbb
sbb
inc
pop
loope
pop
pop
or
pusha
arpl
mov
hlt
pop
xor
fldcw
outsl
xor
stos
cmc
movsb
js
aad
pop
idivb
and
test
add
and
adc
in
add
das
or
sbb
jno
js
sub
movsb
or
pop
inc
or
js
lret
pop
fidivl
insb
and
test
jl
push
dec
lahf
test
icebp
test
fcomi
je
mov
data16
es
mov
adc
mov
mov
movsb
aad
dec
mov
movsb
hlt
pusha
push
inc
sahf
icebp
push
imul
addl
jp
jle
roll
pop
add
pusha
add
sub
jb
inc
add
int3
loope
lret
ss
psubusw
sbb
lock
and
jle
add
xchg
in
add
clc
add
xchg
xlat
jnp
pushf
mov
ret
cmp
dec
into
or
sub
popf
sbb
jle
bound
enter
or
enter
push
testl
ficomps
xchg
pop
mov
fnstenv
int3
add
mov
cmp
mov
fistl
mov
lea
lea
lahf
jle
orb
orl
xor
or
cmp
and
sbb
shll
mov
add
in
jg
add
popa
and
addr16
or
outsb
les
loopne
ficoml
adc
divb
and
mov
imul
adc
adc
movsb
pop
jnp
mov
test
or
loope
sbb
push
xchg
ret
and
popa
or
xor
or
pop
xlat
es
xchg
add
inc
cwtl
or
ljmp
adc
stos
test
add
inc
jno
push
ds
cmp
lcall
or
cmp
jge
jbe
mov
sbb
cmpl
movsl
sub
fwait
daa
lds
sarl
fisttpl
dec
test
push
push
sub
pop
insl
and
mov
inc
pusha
sub
pusha
pushf
movb
adc
test
dec
sbb
std
or
popa
lods
popa
ljmp
xor
subb
pop
icebp
and
adc
sahf
and
mov
inc
jecxz
shlb
xchg
fs
shl
sub
push
sub
push
adc
test
popa
imul
aad
sbb
lds
and
adc
xor
or
shlb
adc
insl
cmpsb
je
dec
inc
sbb
cld
or
and
inc
pop
insl
mov
cmp
and
sbbl
mov
xchg
test
sub
add
mov
dec
lret
adc
pusha
xor
out
or
mov
or
in
push
sub
jmp
jno
movb
xor
je
gs
xchg
insb
pop
enter
push
jno
xor
cmp
xchg
or
push
insb
push
and
xor
fdiv
xor
fisubl
or
add
loope
cs
sbb
shlb
cli
aaa
sarl
loope
mov
mov
cmpsb
jno
jecxz
aas
pop
and
popa
iret
pusha
leave
addb
and
cmpl
sub
jb
xchg
jmp
out
jns
sahf
or
sbb
mov
rcl
mov
lret
pop
aaa
test
sub
adc
daa
jge
add
iret
add
mov
scas
adc
mov
dec
test
sub
push
cli
add
dec
movsl
push
add
in
and
sbb
stos
mov
push
pop
push
outsb
mov
mov
pop
ja
add
jmp
sbb
mov
sbb
pop
mov
dec
inc
fisubrl
sub
lods
in
adc
js
cmp
das
test
rcr
jmp
pop
incb
cmp
cltd
sti
in
or
jg
arpl
test
ret
sahf
iret
mov
fsubrs
enter
mov
lret
fdecstp
add
mov
ja
push
addb
aad
xor
dec
jno
in
inc
fs
pop
push
inc
xchg
jb
mov
mov
add
movsl
rolb
das
push
mov
fistps
loopne
push
xchg
pop
jae
mov
jno
push
sbb
fmull
adc
in
loopne
sbb
mov
insl
cmpsb
and
test
test
je
sbb
mov
nop
mov
adc
mov
shll
icebp
or
pop
sub
mov
mov
pop
dec
sub
adc
in
mov
mov
sbb
or
rorb
adc
loopne
dec
fucom
add
test
scas
cmp
sbb
data16
or
ds
adc
pop
or
fstpl
xchg
ss
daa
or
xorl
add
xchg
and
inc
lods
jbe
sbbl
and
pusha
xor
faddl
fcomps
inc
out
lds
lods
and
sub
sbb
inc
fstps
xor
aad
andl
pop
stos
and
psrad
ss
daa
push
out
ret
adc
push
add
sub
jmp
xlat
jecxz
lock
jno
mov
jmp
loop
test
sbb
sub
inc
js
mov
push
add
shll
adc
in
or
inc
cmp
pop
mov
mov
call
jge
in
xchg
inc
roll
pusha
lea
mov
jmp
inc
inc
add
adc
jecxz
cli
ss
inc
push
repnz
cmp
rolb
jae
push
inc
add
adc
cmp
pop
or
lods
pop
jo
cmp
mov
inc
jp
mov
or
lods
push
or
dec
jmp
xchg
and
dec
test
hlt
or
stc
mov
inc
cmp
addr16
js
fldenv
xchg
inc
into
test
out
jecxz
mov
push
xchg
lods
xchg
or
xchg
inc
adc
test
inc
iret
stc
inc
data16
xorl
icebp
mov
cmp
and
roll
arpl
adc
stos
inc
lret
cmp
or
or
push
mov
cmc
inc
mov
out
cwtl
push
outsb
mov
pop
jmp
push
and
pushl
mov
adc
cwtl
mov
sub
mov
push
pop
dec
iret
fwait
xor
scas
xlat
push
das
dec
fadds
push
shlb
add
es
adc
cmpsl
enter
add
cmp
or
add
jl
test
sahf
imul
add
inc
bound
mov
dec
ret
movaps
push
adc
jno
jp
loop
dec
lods
adc
lret
pop
dec
jnp
inc
mov
mov
mov
xor
xor
outsl
das
jno
es
xor
xchg
subl
sub
push
push
sahf
push
dec
sbb
rolb
movsl
loopne
test
in
mov
outsl
das
pop
pop
inc
sub
xor
jp
fidivs
popf
or
dec
iret
js
call
push
jmp
push
es
dec
rorb
cmp
cmpsb
adc
out
into
movlps
not
mov
cmp
out
dec
jecxz
adc
xchg
adc
aas
nop
pop
leave
shrl
cmp
inc
or
scas
or
fcomps
and
jo
lods
movsb
rcll
add
test
add
add
rcl
roll
ljmp
mov
add
add
imul
cltd
push
push
aas
ret
xorl
inc
dec
and
push
popl
mov
and
mov
mov
cli
push
mov
imul
dec
stos
or
mov
inc
pop
mov
lods
push
adc
dec
dec
push
mov
add
je
test
sub
add
push
loopne
mov
sub
lret
adc
push
imul
pop
stc
inc
ret
mov
xor
sbb
in
cmp
add
popl
sbb
and
xorl
cwtl
jl
arpl
cmp
pop
ret
in
xchg
sarb
shlb
cmp
stos
lock
xchg
jns
inc
sub
mov
cmc
shll
jl
dec
inc
cmp
cmpsl
jns
imul
inc
or
inc
and
xor
in
cli
shlb
cs
push
add
adc
int3
insb
sti
dec
add
xlat
fiaddl
arpl
sti
or
add
inc
inc
inc
faddl
sub
add
das
add
dec
cmp
xchg
or
mov
icebp
jge
or
cmp
mov
sub
dec
add
xor
cmovl
push
push
jo
daa
or
push
cmp
mov
movsl
xor
xchg
dec
imul
push
adc
fs
adc
les
mov
inc
cmp
sti
addb
lods
and
or
std
dec
mov
xchg
mov
pop
add
jge
pop
jl
clc
imul
cmp
push
add
mov
sbb
adc
les
pushf
push
fsubl
add
sbbl
sbb
lds
sub
rolb
jecxz
popa
aaa
cmp
dec
ja
adc
sahf
repnz
scas
push
lods
xor
pop
or
push
mov
jbe
add
mov
adc
ret
mov
pop
insl
iret
xchg
rorl
dec
jmp
fisttps
ds
cmp
pusha
xchg
adc
rcrl
xchg
fdivrs
dec
jg
sbb
xor
xor
cmpsb
sbb
or
dec
fst
pop
adc
lret
sbb
dec
mov
add
mov
cmp
aad
fwait
mov
test
addl
mov
sbb
mov
lods
dec
adc
pop
push
pop
mov
jl
test
insl
and
cmp
stos
cmp
or
outsl
xchg
cmpsl
in
push
fxch
sub
imul
sub
ud1
push
add
cmp
mov
adc
mov
push
movsb
into
xchg
insl
orb
movsl
test
dec
xchg
or
movsb
push
pop
pop
sahf
sub
mov
push
fs
push
mov
das
mov
cli
xor
pushf
outsl
mov
mov
mov
int
xor
pop
or
xchg
pushf
popa
in
cmpsl
fstps
subb
lret
repnz
jns
and
sarb
mov
mov
rclb
inc
sub
loope
mov
dec
sahf
inc
gs
dec
xlat
dec
and
cmc
das
sahf
lea
arpl
test
test
int
xor
adc
mov
pop
iret
xor
aaa
cmp
dec
sbb
dec
fnstenv
nop
out
adc
add
xchg
jecxz
mov
push
jo
add
xor
lods
dec
rclb
cmp
cltd
cmp
sbb
aam
sbb
and
ljmp
mov
fnstenv
sub
pop
sbb
jne
cltd
pushf
and
cs
jae
les
sub
xchg
or
adc
frstor
hlt
outsl
push
jbe
mov
mov
push
cli
test
push
dec
inc
js,pn
dec
add
add
rorb
mov
inc
in
sub
iret
push
pop
aas
dec
add
inc
adc
and
mov
mov
jle
movb
add
cltd
jecxz
aas
mov
cmp
add
mov
std
push
jbe
popa
add
adc
inc
aam
nop
mov
fst
pop
add
dec
mov
mov
xchg
jo
or
or
xchg
nop
sahf
jle
push
and
add
push
xchg
loope
cmpsl
movsb
inc
fidivs
data16
imul
push
jns
xchg
aas
lea
bound
test
subb
ja
out
orl
icebp
testl
and
and
add
adc
les
int3
jno
xor
call
pop
inc
aaa
pop
ret
jmp
pop
inc
dec
stc
xchg
mov
add
add
inc
popa
adc
lret
sub
das
inc
loope
cwtl
sbbl
xor
ret
or
adc
adc
loopne
test
jbe
xor
mov
or
lods
sbb
dec
shlb
xor
mov
mov
xchg
mov
dec
fwait
leave
movsb
loope
mov
dec
rolb
lret
popa
lahf
jg
mov
scas
and
jb
cmp
inc
xchg
pop
or
jb
mov
add
and
outsb
sbb
ret
ss
push
pop
test
sbb
leave
mov
notb
aaa
cmpsl
sub
je
push
xchg
icebp
lods
mov
fsubl
or
es
cmp
add
push
adc
rol
adc
mov
aam
shrb
pop
ret
pop
pop
cs
test
push
push
data16
dec
add
popf
xchg
int3
add
movsl
testl
fisubl
jno
popa
mov
jno
push
test
inc
cmpl
jo
jo
push
pop
aaa
xor
dec
andb
in
mov
add
js
les
ljmp
scas
push
sarl
jo
lods
xchg
hlt
add
sub
jno
mov
cmp
dec
dec
jle
mov
js
in
movsb
cmc
es
and
cmc
mov
push
inc
mov
in
and
inc
popa
mov
rclb
jnp
faddl
or
lds
test
add
adc
frstor
rcrl
cld
das
test
adc
xchg
stos
dec
test
sub
inc
stos
inc
sbb
in
cmp
fwait
pop
pop
icebp
int3
jmp
iret
jbe
sarl
and
int3
mov
mov
xor
inc
sbb
sub
xchg
xchg
xchg
sbbb
push
std
pop
pop
add
lock
cmp
dec
xor
mov
bt
mov
and
popf
test
and
mov
aam
outsl
xor
leave
cmp
mov
mov
dec
xor
pop
lods
popa
pop
and
and
xor
dec
decb
adc
scas
and
std
and
adc
sbb
or
nop
and
mov
and
arpl
dec
aaa
dec
cmpsl
movsl
xor
xor
sub
iret
mov
inc
cmc
sub
add
int3
andps
add
cmp
and
add
mov
sub
jmp
sbb
or
loopne
xchg
test
or
cmp
mov
loope
sbb
clc
pop
sub
and
test
inc
or
or
inc
or
in
mov
loope
add
fistl
fs
pushf
imul
add
arpl
or
out
aas
adc
in
push
sub
and
enter
push
inc
cmpsl
pop
fs
xor
mov
daa
test
xlat
in
xchg
mov
and
or
push
cmc
mov
leave
and
and
cmp
inc
inc
sub
mov
out
jecxz
das
pop
movsl
pop
jo
in
mov
cmp
shll
fmul
xor
xchg
xor
les
sahf
pop
mov
push
sub
jp
sbb
and
jae
les
stos
dec
testl
dec
and
pop
sbb
and
sbb
push
ds
xchg
out
push
and
xor
or
sbb
gs
add
or
pop
mov
mov
je
mov
ret
jg
in
leave
cmp
push
fcmovb
inc
xor
mov
push
mov
nop
out
xorl
lock
mov
mov
psubb
jb
dec
pop
nop
inc
adc
bound
lahf
fisubrl
or
add
pop
push
scas
sbb
js
into
aaa
push
and
je
pusha
push
lahf
xor
add
lea
inc
add
xor
cwtl
aas
push
fnstcw
test
adc
mov
mov
inc
sbb
arpl
push
push
out
push
inc
cmpsl
inc
mov
jno
jo
push
in
je
add
xor
enter
dec
jecxz
sbb
mov
pushf
add
push
push
or
xor
and
daa
dec
add
push
push
ja
mov
or
push
dec
rclb
dec
mov
mov
sub
jo
mov
xchg
sub
adc
adc
test
popf
out
mov
mov
psubusb
or
inc
dec
push
jle
pop
orb
loope
add
or
pop
dec
mov
push
dec
mov
add
sub
push
cmpsb
push
cmc
inc
xlat
xchg
inc
add
mov
fs
dec
mov
pusha
mov
and
add
loopne
movsl
sbb
lock
sub
and
daa
ds
test
roll
shrb
jmp
insl
adc
adcb
xor
adc
jecxz
mov
movsl
pop
xor
cmp
pusha
jmp
mov
sbb
enter
jae
sub
movsl
inc
cmp
popf
and
test
fidivrl
pusha
mov
and
insb
cld
sbbb
sbb
bound
add
and
cwtl
test
pop
shlb
and
sub
test
addr16
add
loop
sbb
mov
add
lcall
fcoml
xchg
inc
outsb
mov
loopne
mov
pushf
test
xor
fiaddl
adc
jge
jmp
push
addr16
out
mov
push
mov
inc
jne
sbb
push
leave
ret
jne
imul
inc
arpl
lea
xchg
pop
add
push
mov
subl
mov
adc
popa
adc
push
imul
or
arpl
loopne
or
mov
inc
cmp
test
aam
scas
test
jbe
roll
mov
add
sbb
movsb
pusha
adc
dec
dec
xor
sub
mov
sub
ds
pop
outsl
jle
push
stos
or
mov
mov
pushf
sub
mov
sti
in
jp
rclb
dec
mov
push
xchg
push
and
js
push
dec
and
and
shl
pop
popa
insb
jl
imul
xlat
aaa
and
sub
xor
in
addb
pop
sbb
add
dec
stc
inc
loopne
scas
cld
imul
xor
add
inc
ret
stc
inc
iret
sbb
xchg
xchg
xchg
out
pusha
push
sbb
pop
and
fdiv
inc
and
add
cmp
dec
mov
fdivs
push
mov
push
add
pop
aam
mov
cmp
xchg
sbb
dec
test
mov
adc
pop
push
or
jae
mov
mov
sbbl
add
add
inc
mov
out
add
mov
icebp
sub
cmovg
das
mov
cld
mov
imul
iret
js
pusha
movsb
pushf
push
adc
xchg
ret
cmp
mov
add
andb
jno
add
sub
sub
iret
pop
cmpsb
test
mov
mov
add
pusha
cmpsl
add
xchg
imul
pop
cmp
pop
xor
jmp
lock
pop
imul
dec
inc
mov
jmp
call
pusha
xchg
je
mov
hlt
test
sub
stos
or
jecxz
add
in
rep
fimuls
dec
aaa
pop
push
dec
pop
adc
dec
sbb
xor
bound
push
dec
sahf
aas
xorl
and
fwait
inc
mov
stos
or
jbe
dec
sbb
or
push
or
jmp
adc
pop
xor
aad
lret
and
pop
jecxz
jle
call
adc
ret
fwait
lcall
ret
dec
popf
jno
add
push
mov
push
mov
add
sub
cld
push
cmp
lret
mov
xchg
mov
or
or
fisubrl
adc
push
push
pop
push
pusha
xchg
or
test
sub
or
adc
aad
test
pop
add
jns
dec
or
out
es
loope
daa
pop
push
mov
and
lcall
mov
fsubs
pop
sub
jp
xchg
dec
pop
sub
cmp
xorl
fadd
aas
fldcw
pop
int3
dec
xchg
rorb
cmp
fsubs
xor
pop
push
mov
inc
cmpsl
enter
xchg
mov
clc
and
xor
sbb
iret
sbb
xor
adc
loopne
daa
mov
scas
mov
leave
jbe
into
xchg
push
jno
cmpsl
push
icebp
mov
xor
push
add
lods
add
xchg
mov
lea
hlt
xor
push
push
test
mov
mov
push
xor
add
adc
imul
dec
xor
jmp
jo
gs
icebp
mov
xor
or
inc
jnp
push
loopne
mov
or
mov
loope
mov
xchg
daa
ss
cmpsb
sub
lods
pop
lds
mov
adc
add
inc
test
xchg
imul
jbe
sub
add
aaa
or
push
clc
icebp
rorb
mov
notl
jmp
mov
sbb
leave
dec
cmp
sarl
cli
rcll
cs
ficompl
gs
test
add
sbb
xchg
sbb
or
arpl
jmp
les
shll
mov
push
aas
jge
sub
lret
inc
scas
or
add
mov
xchg
cmpb
fmul
insl
js
mov
test
and
mov
xorb
inc
pusha
imul
sbb
scas
fiaddl
outsl
in
test
int3
movsl
push
dec
movsb
pop
pop
leave
cwtl
ss
ret
aad
imul
jbe
sti
pop
out
sahf
mov
mov
push
les
xor
ret
test
cli
mov
movsl
aam
add
mov
das
dec
or
nop
and
add
mov
dec
adcl
ret
out
popa
and
mov
sti
or
mov
or
movsb
cltd
pop
and
mov
sbb
or
cmpsl
add
xchg
sub
sub
push
push
insl
sbb
shll
mov
inc
mov
gs
out
lock
into
mov
dec
sub
mov
out
lcall
xor
lret
xlat
cltd
xchg
pop
fisttpl
dec
mov
mov
pop
loope
pop
test
push
or
jp
xchg
push
xor
lds
test
or
push
fadds
lea
jbe
sbb
es
popa
mov
sti
add
and
outsl
jno
mov
notl
loopne
mov
notb
sub
rol
xor
subb
cmp
imul
xor
mov
adcl
punpcklwd
jno
pop
cmp
push
add
nop
jle
fdivr
push
pop
xchg
stos
lods
and
lea
add
sub
jmp
lds
stc
xor
je
add
jge
mov
loope
cmpsb
xchg
dec
mov
mov
mov
pop
cs
add
test
mov
js
imul
or
aad
hlt
into
and
xor
and
arpl
pop
inc
and
fwait
sub
mov
jae
outsl
pushf
aam
shll
lea
mov
add
inc
push
mov
inc
jae
sbbb
jl
or
fisubrs
popf
outsl
pop
sbb
sbb
xor
mov
lock
lock
push
cmp
aam
fmul
je
and
pop
das
pop
bound
dec
call
dec
out
xor
scas
fcoml
popf
fs
lds
imul
scas
or
outsl
add
mov
inc
sbb
shlb
cmp
loop
or
divl
sbb
jo
insb
push
mov
ret
int
inc
adc
push
push
lods
aas
jle
lret
dec
int3
insb
or
mov
push
js
sbb
add
push
test
sub
jbe
add
mov
sbb
pop
xor
mov
adc
shl
clc
jge
shll
add
leave
dec
fldl
out
xchg
adc
xorl
fldt
lret
push
xchg
stos
stos
mov
insl
dec
test
js
stos
lret
add
sbb
je
mov
iret
ljmp
cmp
add
lahf
lcall
cmp
mov
or
push
pop
ja
add
inc
and
dec
xchg
insb
mov
jp
mov
stc
add
stos
or
popa
mov
iret
imul
push
rorl
int3
hlt
sbb
gs
sbb
mov
insl
mov
and
inc
fstpl
sbb
xor
push
inc
lahf
add
push
out
mov
dec
je
fcompl
dec
sbbb
xor
imul
mov
scas
pop
sbb
popa
mov
lahf
cwtl
gs
add
jo
pop
xor
add
fmuls
enter
out
rcrl
ror
ret
adc
and
xor
sub
inc
adc
cld
xchg
cli
push
push
xchg
loop
mov
mov
shl
sbb
inc
fcom
leave
dec
dec
mov
xadd
ss
je
sbb
mov
lock
and
aas
adc
addl
add
dec
jecxz
pop
adc
push
mov
sub
push
ss
lods
fmuls
dec
mov
arpl
cmp
xor
sbb
sbb
fwait
shll
aad
mov
iret
xor
js
cli
lods
gs
pop
inc
jnp
filds
scas
ret
mov
scas
lcall
inc
je
sbb
add
loope
xlat
push
cmpsl
rorl
lods
adc
adc
and
out
aaa
cmp
cmc
push
imul
jmp
adc
int3
push
ljmp
dec
cmc
mov
es
add
scas
xchg
test
xchg
lods
cs
out
xor
inc
or
fs
rclb
adc
cmp
pop
or
mov
and
loope
ss
pushf
scas
movsl
sbb
sub
push
push
push
jbe
mov
and
mov
push
aam
dec
daa
xchg
cmp
and
vhaddps
mull
mov
xchg
ret
inc
sbb
pusha
or
and
add
pop
adc
and
lea
mov
adc
jae
ss
pop
mov
sarl
and
or
mov
es
into
adc
leave
jae
cs
loopne
jl
sub
and
xchg
ret
mov
mov
call
xchg
popa
push
pop
push
scas
ja
sbbl
cmp
mov
add
stos
cltd
sbb
iret
sbb
mov
xlat
cmpsb
inc
popa
out
inc
mov
sbb
mov
mov
aad
repz
ficoml
bt
jnp
outsb
adc
cmp
out
sarb
jmp
dec
jmp
je
inc
sub
clc
jno
push
inc
dec
adcb
rolb
shll
pop
shlb
mov
fadds
add
dec
sti
inc
push
push
cs
test
dec
jp
test
inc
bound
or
mov
test
fisttps
outsb
xor
mov
sub
push
add
pop
mov
shll
push
rolb
pop
mov
rol
add
sub
or
int3
bound
in
mov
nop
lock
aas
push
cmpl
sbb
rolb
mov
dec
insb
adcb
or
xchg
lds
loope
roll
dec
das
movsb
push
pop
test
sub
sbb
pop
sub
inc
adc
inc
or
cmpsb
jo
add
aam
mov
mov
mov
cmp
jbe
adc
add
mov
fisttps
loope
mov
fisubs
inc
sahf
dec
inc
mov
and
nop
ss
cmp
add
dec
xchg
iret
enter
fs
fstpl
dec
sbbl
xor
pop
ret
popf
andl
xor
stos
jmp
cmp
pop
lahf
mov
dec
nop
cmpsb
pop
or
bound
inc
in
jmp
mov
andl
add
pop
arpl
test
adcl
sub
pop
mov
push
in
mov
in
enter
subb
or
dec
add
mov
add
sbb
aad
jp
xor
add
ret
jge
mov
or
jno
xor
mov
das
mov
xchg
mov
add
dec
add
fs
adc
and
xchg
sbb
mov
sub
or
inc
sbb
pop
adc
lea
inc
sbb
fstl
add
nop
ret
sbb
sbb
mov
flds
stos
scas
sub
or
mov
fstpl
sahf
add
xlat
ret
push
adc
cmp
test
dec
inc
pop
imul
test
sbbb
in
adc
dec
jb
mov
sahf
mov
jmp
shlb
mov
pop
mov
mov
sub
sarb
fs
sbb
or
and
jecxz
cmpb
mov
mov
ss
adc
xor
jge
dec
adc
imul
icebp
aas
stc
cmpsl
stos
ss
and
mov
xchg
mov
es
dec
in
fdivrl
inc
adc
or
loopne
push
in
dec
push
outsb
sub
lahf
add
in
dec
mov
or
mov
decb
jecxz
das
lds
inc
fstpt
mov
loope
pop
sub
dec
dec
pop
sarl
jb
xor
movsb
or
xchg
mov
je
mov
mov
test
jne
inc
andb
setns
add
adcb
stos
rolb
cmc
lods
lret
movsb
loope
jnp
add
adc
leave
stos
push
push
mov
rep
sti
imul
sar
or
jbe
rcll
loopne
andb
cwtl
shrb
ss
sbb
xchg
test
fdiv
adc
pop
dec
pop
mov
and
mov
mov
ret
fiaddl
rorl
xchg
outsb
or
shrb
sub
pop
ret
jns
rorb
adc
icebp
lock
fidivrl
sbb
sbb
inc
sarb
adc
mov
sbb
add
int
cmp
sub
ret
popa
inc
mov
jae
add
cmp
aaa
lods
dec
cltd
add
ret
jge
ret
in
dec
lahf
adcb
popa
or
or
dec
outsb
cmp
xor
push
cwtl
enter
mov
dec
fcoms
inc
add
jo
pop
or
mov
mov
sahf
jne
cmc
in
adc
xchg
adc
hlt
imul
jle
push
loopne
adc
dec
xor
push
push
jo
adc
lea
xchg
add
in
xor
popf
dec
sahf
lds
push
and
fdivl
push
cli
xchg
jle
int
or
scas
gs
inc
mov
xchg
or
push
in
or
cmp
pop
mov
push
pop
fistpl
sti
or
shlb
cmc
andb
mov
fnstcw
mov
in
add
pop
mov
mov
test
arpl
lret
dec
fcompl
mov
std
lret
fidivrs
xchg
jns
out
pop
push
pusha
sti
and
mov
dec
jmp
sbb
sbb
bound
cmp
xchg
popa
insb
addr16
bound
push
or
or
shlb
pusha
pop
mov
insl
push
jmp
dec
push
dec
movsb
popa
mov
xor
and
inc
jmp
pushf
sub
xor
insl
out
add
push
shl
mov
addb
and
sbbb
inc
mov
xchg
addl
sbb
ss
test
sub
or
or
loopne
inc
aaa
decl
jp
adc
cmp
stos
test
dec
ret
jecxz
addl
dec
gs
je
cld
cmp
inc
stc
rcll
xchg
das
test
ret
add
popf
insb
xchg
cmp
mov
shlb
call
cmc
adc
or
and
inc
loope
lods
js
ret
inc
dec
test
xchg
mov
es
out
xor
das
fcomip
sub
aas
imul
adc
ficompl
lods
loop
addr16
in
lods
pop
shlb
lods
ja
and
xor
adc
cmp
andl
lods
or
push
cmp
push
test
add
pusha
imul
push
mov
dec
adc
mov
stos
xlat
xchg
add
pop
dec
xlat
push
in
jecxz
int
fwait
cmp
addb
les
loopne
mov
add
out
in
and
lret
inc
and
test
sub
xchg
sub
je
pop
add
adc
lds
mov
lret
nop
idiv
xchg
add
and
add
popf
jo
jmp
inc
push
sbb
imul
xchg
rolb
cmp
and
push
mov
cltd
dec
ss
les
imul
gs
jmp
dec
nop
loope
int3
xchg
or
popl
lret
cmp
sub
mov
shrl
rolb
add
add
xlat
jae
jecxz
bound
push
jo
pop
mov
repz
aas
adc
das
pop
dec
inc
in
scas
jg
fdivs
pop
xlat
into
pop
fadds
add
popa
inc
rorb
adc
fists
aaa
push
clc
popa
inc
movsb
xor
andl
dec
jae
fsubrs
in
jno
mov
inc
add
sbb
aam
lret
xchg
adc
sbb
ret
and
bound
lock
sti
push
clc
mov
cmp
xchg
ret
and
sbb
or
lock
aam
roll
aad
ret
xor
stos
or
vpaddd
mov
and
push
mov
dec
cmpsl
xlat
pusha
xchg
sahf
or
mov
push
rorb
test
scas
test
and
daa
lret
movb
jle
sbb
fmull
movb
mov
rclb
out
les
fisubl
imul
dec
movl
sub
into
enter
stc
mov
sub
lea
inc
shl
insb
sub
pop
sbb
sub
loope
ja
push
mov
and
add
pop
lods
or
outsb
adcl
xchg
jne
hlt
jns
sub
pushf
jae
aam
dec
lahf
mov
jle
dec
add
loope
sbb
cmp
inc
stos
inc
loopne
add
icebp
insb
sbb
xchg
jne
push
rorl
lock
xor
cmp
cmp
stc
or
mov
xor
pop
in
inc
ljmp
insl
jne
in
push
cmc
mov
movsl
or
sahf
and
rorb
mov
add
lock
xor
xchg
nop
sti
test
std
push
add
xor
and
scas
ljmp
lea
iret
or
ret
loope
rorb
shr
jno
daa
das
rolb
cmp
fcmovnb
rcll
lahf
pop
lods
add
and
lock
xchg
into
addr16
xor
mov
rcrl
test
and
iret
vpaddsb
sbb
rorl
jo
push
jmp
cmp
ljmp
adc
mov
shlb
inc
mov
cs
add
mov
inc
insl
fnstenv
push
lods
inc
xor
mov
mov
aam
jae
xchg
pusha
dec
sbb
jnp
xchg
aad
ret
mov
adc
jmp
xor
push
and
sarl
popa
cmp
gs
arpl
aad
shll
sub
roll
and
jmp
jo
push
xor
js
cmp
pop
popa
sub
sub
sti
addr16
daa
stos
jp
aam
push
add
loope
add
fcomps
je,pt
mov
jmp
xor
add
pop
pop
lock
out
jnp
adc
jl
cmc
xchg
lods
push
push
add
push
jmp
lret
fmul
pop
cmp
inc
scas
daa
bound
jbe
pop
inc
sub
daa
gs
or
lcall
xchg
wbinvd
sbb
shrb
ja
push
arpl
mov
test
fbstp
push
or
adcb
and
cmp
test
mov
adc
mov
subl
and
sub
cmp
dec
mov
in
or
ja
and
jne
out
dec
pop
hlt
aam
push
std
addr16
rorb
mov
push
xchg
xchg
and
leave
int3
movb
mul
movsl
pop
jo
xor
pop
xchg
xchg
pop
mov
jb
xchg
addr16
popa
mov
test
mov
pop
pop
aaa
daa
dec
dec
pop
pop
push
mov
inc
pop
movsb
inc
sub
inc
shll
std
xchg
mov
sub
or
lods
popa
insb
inc
or
mov
push
xchg
or
faddl
clc
test
jne
pop
test
rcr
jge
push
push
inc
addb
dec
sbb
mov
test
adc
pop
loop
add
loope
ja
sahf
add
pop
dec
les
in
enter
cmp
dec
enter
jne
or
push
pop
or
inc
and
fs
adc
and
fdivrs
lods
xchg
mov
xor
mov
lock
or
mov
subl
and
subb
push
inc
cmc
jmp
js
js
mov
sub
jae
push
adc
sub
and
xor
and
jmp
movsl
sub
cmpsl
fbld
xor
inc
jnp
icebp
lods
push
sar
pop
xlat
lds
inc
sbb
repz
add
iret
jmp
cmp
test
scas
dec
mov
jne
repnz
adc
into
sbb
cmp
mov
adc
and
mov
shrb
dec
testb
stc
ja
pop
inc
push
xor
imul
mov
sub
out
or
adc
daa
mov
pusha
dec
add
das
fistl
js
inc
sbb
and
push
outsl
mov
lods
cmpsl
adc
add
or
add
in
cs
pop
mov
cmc
and
or
push
shlb
sbb
daa
orb
es
dec
mov
lock
fsubrs
pop
xchg
jno
call
jb
and
adc
lds
or
push
xchg
bound
fwait
aad
mov
mov
daa
repz
insb
mov
addr16
test
add
add
hlt
or
push
mov
movsb
cld
lret
jbe
cli
rorl
cmp
pop
rorb
pop
dec
mov
cmpsb
cmp
add
fwait
movsl
out
or
pop
rolb
mov
loopne
lcall
sbb
int3
insb
inc
xchg
sub
or
xor
or
push
in
dec
pop
adc
mov
jae
jo
js
loopne
mov
popf
imul
mull
ja
push
jne
inc
fsubs
push
and
lret
cmc
icebp
test
jo
aaa
jecxz
mov
fcompl
call
cli
int3
das
nop
in
rolb
shll
and
lods
cmpsb
popa
cwtl
loope
imul
out
dec
or
sub
and
add
hlt
addr16
jnp
xchg
bound
lods
bound
ret
push
movb
push
push
shrb
es
fildl
fstpt
cmp
push
sbb
sub
mov
mov
inc
jmp
fdivs
inc
pop
or
jae
movsb
push
and
jge
adc
xor
sub
loop
cmc
inc
sahf
sub
or
test
xor
pop
and
mov
shr
lods
imul
dec
sub
outsl
fcompl
lods
lret
insl
popa
shrb
je
jno
jae
lahf
sub
aaa
test
mov
sub
addl
lea
es
insb
adc
sbb
mov
pushf
adc
js
or
cmp
and
dec
xchg
shll
sbbl
xor
push
add
pop
mov
fstl
mov
fwait
mov
xchg
push
mov
push
push
lea
dec
and
xchg
aas
out
push
mov
int3
rcrl
mov
fcomps
pushf
adc
or
addr16
push
into
pop
loopne
ds
pop
dec
gs
lahf
jnp
ja
and
adc
mov
fs
pop
sbb
jae
sub
and
add
mov
lcall
idivl
rorl
icebp
daa
insb
push
mov
dec
int
clc
push
inc
mov
push
dec
push
or
movq
mov
rorb
or
daa
inc
rcl
mov
xchg
js
das
mov
cmpsb
adc
mov
pop
adc
bound
test
inc
mov
jb
sbb
sbb
nop
jo
sarl
pop
lods
sub
fisubl
mov
and
xor
adc
add
test
inc
scas
jge
adc
fsubl
dec
push
pop
stos
dec
inc
inc
and
lcall
xor
and
mov
ja
es
push
inc
in
cmp
inc
push
and
sbb
jo
mov
add
lret
bound
jge
inc
loope
fcoml
and
popa
push
lods
jne
pop
jo
xorb
adc
mov
in
adc
test
xchg
into
xchg
dec
icebp
mov
lods
stos
addr16
mov
fwait
fwait
push
xchg
cmp
test
in
das
int
testb
repz
lods
cmp
jb
and
mov
xchg
sbb
enter
and
fdivrl
push
cltd
push
and
enter
or
stos
shll
sub
test
add
ret
and
ljmp
mov
fcomps
test
icebp
dec
daa
testb
movsl
into
xorb
test
xlat
stos
fnstsw
fwait
je
subl
mov
jo
push
xor
cmc
xor
jo
jno
xor
jbe
sbb
fisubrl
and
xor
loopne
les
fldcw
inc
push
fdivrl
push
sub
shlb
cmp
sbb
in
push
mov
dec
sti
in
cmp
mov
push
mov
lods
movsl
cwtl
xor
mov
popa
popf
push
add
bound
adc
cmpsb
mov
xchg
nop
hlt
popa
lahf
inc
mov
and
ret
daa
mov
cmpsl
addb
sbb
in
fsubrl
mov
jno
mov
sbbl
lret
out
scas
sti
cmp
add
imul
mov
int
inc
dec
sarl
jle
ja
cmp
mov
sub
and
inc
rcrb
into
and
push
jnp
ss
sub
add
or
test
sbbb
and
fstl
xchg
mov
or
cltd
jl
add
adc
addr16
sbb
mov
rcll
lds
aad
aaa
push
dec
mov
or
pop
and
xchg
xchg
outsl
ret
add
fldenv
leave
sbb
loop
rcl
movsl
lock
adc
push
mov
sahf
lret
and
js
inc
jg
and
push
adc
mov
push
ficoml
pop
push
sarb
inc
sub
daa
adc
mov
rorb
das
add
pop
jp
adc
add
out
cwtl
icebp
xor
pop
jle
add
sarb
add
aas
sbb
jno
push
sub
xor
dec
inc
incb
test
push
or
or
xchg
in
cmp
mov
es
insl
pop
mov
pushl
mov
iret
push
rorl
scas
push
jg
ror
cwtl
cld
and
ja
por
pushf
pop
inc
or
lea
add
xor
cmpsb
inc
inc
jmp
stc
mov
gs
out
scas
add
inc
cmove
into
xchg
xchg
mov
add
bound
daa
adc
and
and
push
das
mov
cmp
cmp
xchg
stos
jp
add
insl
insb
fcmovnbe
loop
out
in
and
scas
add
dec
dec
and
enter
push
fsubs
js
dec
pop
sub
shlb
aam
xor
mov
ljmp
jmp
push
mov
sbb
iret
and
je
adc
ja
into
push
pushf
pop
mov
xor
pushl
sub
sar
xor
inc
push
cmp
jb
inc
push
add
fcoml
lret
push
leave
cmp
in
inc
add
sbb
inc
sub
add
push
pop
add
imul
mov
mov
scas
xchg
in
outsl
xchg
mov
lea
dec
and
loope
add
sub
jmp
popa
jg
mov
inc
adc
xor
fs
dec
ss
mov
sbb
mov
inc
add
pop
rorb
add
or
or
aaa
cmpsl
mov
and
ja
movb
iret
add
sahf
xor
sub
add
fadds
pop
mov
les
sahf
push
pop
sbb
je
mov
or
loope
lds
cmp
nop
sub
adc
mov
loopne
adc
pop
sub
test
insl
and
es
hlt
cmp
sub
je
fs
hlt
add
ljmp
icebp
pop
jg
je
orb
pop
sahf
ja
aaa
lods
sbb
push
dec
mov
fldl
repz
ret
or
cmp
ja
mov
lret
insl
icebp
ds
mov
call
call
test
sbb
lock
test
mov
das
js
lahf
inc
pop
cmp
ficomps
pop
test
lds
mov
mov
or
or
mov
test
in
inc
das
add
jns
outsb
bound
adc
mov
cmp
mov
mov
imul
aaa
mov
push
sub
enter
sbb
cmc
dec
inc
xchg
outsb
cmp
sub
sbb
scas
mov
pop
cmpsl
pop
cmpsl
mov
imul
push
movb
icebp
mov
xor
pop
pop
mov
sbb
inc
outsb
popf
sub
jne
inc
mov
into
fidivs
cmp
test
sbbb
push
sub
shrb
arpl
int
jae
xchg
jno
pop
xchg
jno
ret
sub
jno
les
outsl
sub
adc
sub
adc
push
loopne
arpl
cmp
push
stc
aaa
add
nop
fldenv
dec
adc
push
or
mov
dec
pop
adc
jecxz
and
sub
outsl
or
jb
js
dec
sub
pushf
cmpsl
cs
test
or
add
mov
jae
dec
cmc
mov
outsl
dec
cmc
scas
bound
jmp
sub
or
dec
or
push
ret
xchg
pop
or
arpl
dec
adc
fdivs
ret
cmp
mov
push
movsb
mov
out
mov
out
mov
pop
mov
rclb
fildl
stc
add
cli
imul
scas
aam
js
sbb
test
pop
inc
xor
dec
jno
cmp
mov
add
push
mov
and
popa
imul
cli
add
cwtl
xor
mov
and
fs
nop
and
clc
add
shl
add
add
fiaddl
xchg
mov
cmc
pop
cmovae
or
push
loope
rclb
or
pop
mov
pop
mov
scas
icebp
pop
mov
jb
rcll
outsl
push
sbb
add
adc
add
popf
cs
out
icebp
ds
mov
jae
lock
jg
ja
or
xor
push
lock
xchg
scas
jg
jmp
call
mov
stc
jle
add
jnp
rcll
fcompl
and
xchg
adc
mov
push
inc
xchg
sarl
pop
push
test
add
fimuls
and
cltd
dec
pop
mov
sbb
in
mov
adc
jecxz
add
or
pop
push
int
add
out
push
ret
sub
xchg
lods
adc
sbb
jg
push
sub
stos
mov
add
or
mov
pop
arpl
es
shl
jbe
mov
sbb
xor
ret
pop
push
imul
or
inc
cmpsl
call
xorb
pop
cmc
dec
add
dec
loope
pop
xor
adc
pop
out
popa
sub
bound
in
add
or
cmp
inc
jne
test
or
mov
sub
mov
or
and
xchg
lds
inc
jecxz
lods
push
push
sub
movsl
sbb
sub
push
xchg
movb
int
sbb
lds
and
sbb
iret
add
aad
sub
lea
aad
mov
sbb
xacquire
js
fs
lods
push
leave
mov
mov
in
fcoms
fwait
inc
pushf
mov
adc
push
mov
arpl
xchg
add
cmp
mov
mov
cmpsl
and
out
jge
ror
add
shlb
add
mov
cmp
and
mov
push
xchg
cmp
loope
mov
shrb
pusha
mov
mov
and
fmulp
aam
mov
adc
arpl
inc
sbb
out
test
xor
test
daa
daa
das
fnop
popa
add
lods
sub
call
les
cmp
mov
adc
and
push
push
add
and
and
inc
movb
mov
out
jecxz
dec
popa
pop
mov
mov
jo
scas
dec
sub
or
cmpsl
loope
dec
dec
inc
jne
shlb
adc
mov
lods
fsubp
push
push
or
sub
orb
sub
hlt
pop
inc
jne
or
add
mov
fwait
imul
add
mov
sub
stos
hlt
ficoml
insl
daa
add
sahf
mov
jb
push
add
xor
rcrb
popl
test
loope
push
rcr
xchg
sbb
icebp
xor
push
mov
movsl
lahf
dec
push
js
mov
sbb
and
push
sbb
mov
shll
lea
or
push
inc
pop
mov
or
pop
jnp
es
xchg
cwtl
add
inc
jmp
add
lahf
and
sub
call
jo
mov
dec
into
loopne
mulb
mov
and
jp
imul
cmp
leave
bound
xlat
xchg
pusha
xchg
sbb
popa
and
icebp
mov
cld
adc
dec
mov
add
das
or
xor
and
add
nop
shlb
into
hlt
cmp
xchg
inc
rcl
icebp
leave
xchg
adc
stos
gs
cmp
fildll
ret
inc
leave
adc
pop
xlat
adc
test
cmp
sbb
dec
or
mov
mov
xor
mov
and
add
std
ficoml
jno
mov
adc
mov
push
dec
push
add
adc
cwtl
cmpsb
jo
cmp
addr16
jnp
inc
or
or
in
mov
or
cmp
outsl
outsl
jmp
cmpsl
cltd
cmp
add
outsb
or
add
mov
dec
pop
lods
mov
push
lods
push
icebp
xchg
adcb
test
xor
push
mov
jle
inc
sub
and
in
push
fstpt
scas
bound
jge
iret
lea
cltd
cmp
test
inc
stc
cs
roll
add
push
in
shlb
das
fists
aam
push
aad
cld
stos
mov
js
adc
mov
xchg
lds
arpl
push
add
pop
cmp
sahf
cmc
pop
push
clc
call
jge
aam
pop
fistps
cs
aam
add
mov
jge
cmc
and
test
std
rorl
sbb
add
icebp
icebp
nop
mov
jne
in
xchg
shlb
dec
lret
pop
jp
mov
clc
aas
cmc
sub
scas
inc
dec
and
mov
inc
mov
xadd
lcall
pusha
addr16
addb
jmp
pop
incb
fisubl
rcrl
adc
cltd
shlb
mov
add
or
nop
iret
pushf
aas
inc
in
add
push
pop
mov
aam
out
inc
push
sbb
jnp
xor
jecxz
jo
or
jecxz
aas
cltd
xchg
add
js
sbb
sti
xchg
pop
add
fwait
mov
and
lahf
sub
test
icebp
inc
xor
add
mov
push
push
test
icebp
aad
ja
fs
dec
sbbl
cld
loope
xor
stos
jnp
mov
mov
jmp
xchg
add
mov
pop
bound
int3
shll
jmp
add
add
pusha
pop
lret
and
xchg
xor
xchg
mov
cmp
push
rol
and
fbstp
add
es
add
pop
sbb
loop
cmp
mov
and
int3
fcoms
in
and
fiaddl
mov
fld
or
ja
cltd
push
xchg
ss
jg
fadds
mov
bound
loopne
repz
rclb
and
jmp
lds
push
mov
unpckhps
test
outsb
inc
and
dec
enter
es
mov
and
jle
push
cmp
xor
enter
jo
push
mov
dec
or
arpl
sbbb
sti
push
adc
ret
push
push
les
add
ret
cmpb
xor
lahf
sub
in
call
sbb
and
and
mov
jg
es
pop
or
addl
addb
lcall
sti
add
out
jne
cs
mov
aam
arpl
mov
jecxz
mov
test
mov
shrb
std
sub
data16
icebp
mov
stos
cmp
or
in
popf
xor
out
ja
mov
fwait
and
and
sub
andb
pusha
xchg
push
leave
dec
adc
int
mov
movb
push
imul
xchg
clc
cmp
and
add
sbb
mov
or
add
jmp
loop
stos
mov
xchg
mov
in
popa
or
push
loope
cmp
push
fnstcw
cmp
popf
packuswb
jge
orb
add
mov
xchg
push
int
xchg
pop
fsubs
inc
loope
push
push
and
icebp
and
pop
rorb
pop
dec
jnp
push
test
test
cmpsb
adc
popl
push
ss
lea
jbe
pop
inc
andb
xchg
andb
sub
fmul
clc
cs
mov
popf
pop
and
ret
pusha
in
js
loopne
sarb
jb
scas
lock
or
imull
psrld
add
adc
subl
mov
add
adc
xor
cmpsl
pop
stc
inc
or
lea
leave
std
popl
lcall
test
push
mov
push
sub
mov
ja
in
or
add
call
add
fldcw
imul
mov
lahf
movsl
adc
and
pop
mov
mov
mov
adc
cmp
xor
sub
ss
das
movsb
lret
mov
xchg
aad
imul
out
mov
push
pop
std
cmp
pop
cmp
jbe
cmp
nop
orl
stos
test
hlt
jg
pop
push
dec
lea
roll
enter
repnz
adc
or
mov
sub
pop
sub
sub
repnz
iret
ss
inc
push
add
cmpsb
fdivs
adc
sbb
adc
or
fwait
mov
fs
mov
lea
test
push
xor
addr16
mov
add
jns
arpl
pop
addl
sti
sbb
dec
arpl
cmpsl
cmp
sub
xorb
xchg
inc
adc
iret
pop
xor
mov
dec
push
imul
test
xor
dec
jbe
xor
push
add
ret
push
scas
mov
and
movsl
comiss
pop
repz
or
sub
test
repz
xor
nop
sbb
dec
adc
es
add
jp
in
jns
cmc
lds
dec
dec
sbb
or
jmp
jecxz
sbb
lock
add
loopne
ret
push
movsb
xor
inc
sub
dec
sub
mov
nop
adc
ljmp
mov
add
cmp
lret
jns
ret
cmp
out
jecxz
in
mov
cmp
xchg
je
sbb
imul
dec
popf
ret
cmp
rclb
sbbl
enter
jecxz
orps
and
out
push
push
push
cmp
dec
inc
adc
ret
out
or
jns
xor
adc
cmp
lods
add
ljmp
push
sbb
test
cltd
xor
adc
test
lea
icebp
or
push
push
shrl
add
loope
mov
je
xchg
sbb
orb
mov
mov
jl
sarl
les
inc
jne
push
pop
push
sub
mov
pushf
xchg
int3
xchg
gs
cmp
stos
popa
push
mov
mov
cmpb
push
pop
mov
and
rorl
sbb
leave
add
pusha
xchg
push
lret
fsubrs
jmp
ret
cmp
test
ja
nop
cmc
pop
sbb
mov
sub
subl
int3
aaa
gs
xor
add
ja
add
xchg
inc
test
or
std
inc
loope
adc
mov
cwtl
and
lods
lds
cmp
clc
ja
add
sub
pop
inc
scas
imul
ror
test
push
js,pt
mov
jge
mov
imull
sub
mov
cmp
hlt
gs
mov
sub
pop
and
fcmovne
sbb
push
popa
push
xor
dec
or
imul
pop
aam
cmp
xor
fsubrs
pop
dec
cmp
popf
xchg
mov
push
xor
cmp
cmp
std
dec
jno
les
orl
push
das
iret
shr
push
mov
push
retw
fwait
jnp
lahf
xor
pop
add
outsb
iret
imul
test
insb
in
ljmp
lcall
mov
inc
inc
fidivrs
dec
dec
lret
or
or
dec
pop
movsb
dec
xorb
ret
add
shrb
sbb
push
insb
adc
pop
xchg
sahf
adc
sbb
xorl
mov
mov
pop
pop
icebp
push
add
ja
jb
dec
mov
mov
jge
lock
loope
test
jnp
call
je
in
mov
xor
or
xor
sub
mov
scas
cmp
aad
test
call
les
push
sub
fisttps
mov
in
bound
hlt
push
cmpl
mov
les
lock
xor
sub
mov
push
add
xor
addb
aaa
icebp
jmp
dec
inc
lods
inc
lea
or
sbb
mov
mov
lahf
lock
icebp
mov
in
xor
ljmp
mov
ret
shrb
xchg
lods
add
mov
test
cmpsb
xor
add
cld
movsl
test
push
test
pop
add
xor
fs
adc
pop
pop
fdivl
or
dec
aaa
jnp
out
fmuls
sub
push
push
ret
jo
mov
jmp
jne
push
popaw
and
mov
lods
mov
loop
enter
push
mov
imul
inc
jo
push
daa
iret
xchg
sub
lea
mov
sbb
pusha
push
jl
test
push
and
inc
dec
sbbl
pop
or
mov
cmp
cmp
push
rclb
fwait
inc
rcrl
out
inc
inc
ficompl
mov
cs
mov
setg
rcll
inc
sbb
dec
lods
sub
enter
les
push
xchg
xorl
push
cltd
inc
cwtl
ret
mov
aas
cmp
outsb
lods
jns
lahf
mov
loop
jmp
xchg
xchg
hlt
jno
jo
movsl
fnsave
arpl
dec
and
lds
sbbl
dec
fldl
cmp
cmp
ret
add
xchg
xchg
sub
or
ret
push
xchg
sbb
sbb
icebp
dec
test
std
sub
inc
push
mov
imul
dec
jns
clc
rorb
jno
sub
test
leave
and
jo
cmpsl
inc
daa
fnsave
mov
jne
or
push
cli
or
add
movsl
xchg
adc
cmp
ja
xor
shrl
mov
ja
xor
pop
adc
lahf
jle
repnz
mov
stos
cld
jae
push
dec
cmc
in
fiaddl
jl
adc
sbb
add
sub
lret
test
shll
ja
or
push
loopne
and
and
and
xchg
cld
sub
or
test
test
dec
inc
rcl
mov
adc
dec
or
fs
mov
out
sbb
leave
fiaddl
aad
test
or
std
mov
pop
dec
popa
pop
jge
iret
dec
jmp
fadd
push
mov
add
xchg
jecxz
adc
mov
cmp
dec
popa
inc
inc
pop
and
xor
clc
rcrb
pop
xchg
adc
insl
in
in
push
sbbl
insb
cmc
mov
pushf
push
insl
sbb
mov
sub
inc
test
movsb
xor
insl
jl
inc
inc
jmp
shrb
inc
iret
pop
loopne
or
xchg
mov
or
add
mov
xchg
xchg
add
sub
add
mov
btc
push
add
inc
dec
cmp
rclb
mov
fsubl
jno
mov
and
sti
sahf
or
fadd
push
push
enter
shrb
push
ja
xchg
or
sbb
je
test
adc
cmp
xchg
add
ljmp
sub
xor
dec
pop
pusha
cmp
and
dec
add
dec
outsb
daa
int
dec
and
push
es
pop
xor
push
or
jg
pop
sub
popa
shll
int3
jmp
enter
jae
lahf
jbe
stos
inc
cltd
and
mov
enter
inc
jl
lret
mov
test
rcrb
mov
mov
aam
cmp
mov
lea
cmpsl
add
pop
iret
xchg
fisttpl
push
or
out
lea
or
or
sub
sti
in
push
push
xor
pushf
int3
dec
sbb
iret
rolb
mov
pop
pop
push
add
add
mov
sarb
outsl
aad
mov
jge
insb
jne
rcrb
shl
or
aam
push
xchg
jo
inc
mov
mov
mov
icebp
or
cmp
and
sbb
mov
xlat
out
mov
xor
call
ret
shlb
in
and
aaa
or
aaa
das
cmc
inc
mov
add
jmp
mov
cmp
mov
mov
icebp
add
inc
cltd
and
adc
cmpsl
out
adc
and
push
pop
pop
jo
or
mov
xor
inc
add
xor
cli
popa
sub
fisubrl
pop
loopne
jne
inc
cmp
test
sub
mov
jae
xchg
jno
mov
aas
faddl
xlat
sub
or
push
aaa
imul
and
and
mov
adc
jnp
and
jl
adcl
dec
xchg
jg
xchg
add
out
iret
xchg
ljmp
and
or
or
and
add
aam
or
sbbb
xchg
cld
push
rcl
ret
test
jno
jle
adc
cmp
sub
sarb
mov
or
faddl
xchg
or
mov
dec
daa
add
push
rol
rcl
sub
fisttps
lret
popf
xor
pop
mov
jbe
pop
add
push
xchg
xchg
pusha
xor
sbb
pop
test
push
and
sub
cmp
cmp
aad
adc
insb
adc
push
jnp
cs
xchg
mov
jmp
loop
cld
cltd
bound
or
xchg
or
pop
jmp
jo
inc
push
es
mov
push
shrb
inc
sbb
imul
xor
mov
dec
das
call
or
or
jb
jbe
inc
adc
jecxz
add
pop
je
scas
add
test
sub
push
sbbl
es
loope
xchg
xchg
adc
pop
dec
sub
nop
jo
lea
out
push
rol
xorb
lcall
aaa
and
mov
rcrb
pop
jae
sub
xchg
jg
adc
add
movsb
imulb
adc
and
push
adc
clc
cli
and
lahf
or
and
xchg
jns
or
lds
mov
cmp
or
adc
add
ja
jns
mov
cmp
cmp
jo
aaa
fsts
bound
jno
shrl
aam
add
add
scas
lret
adc
addb
jo
jne
mov
lods
push
inc
push
movsl
and
add
addr16
sbbl
pop
scas
js
xchg
or
add
add
xchg
add
iret
rolb
mov
icebp
je
adc
inc
test
xor
lds
das
add
sahf
aam
shrb
xchg
shll
mov
sets
out
and
test
or
flds
add
lea
inc
imul
es
fisttpl
dec
or
loope
mov
and
nop
sbb
xchg
je
dec
add
aad
outsl
call
fcoms
or
lret
arpl
lods
and
xchg
jmp
in
lods
add
data16
jge
arpl
sub
adc
in
testl
test
ljmp
and
in
cmp
jbe
fmuls
xchg
gs
enter
push
xchg
jp
push
or
lods
xchg
scas
mov
jmp
adcl
adc
pop
jmp
xor
and
and
mov
lods
pop
add
jmp
jbe
mov
test
jge
cmp
loopne
lret
les
dec
scas
mov
and
xchg
dec
dec
pusha
pop
jle
cs
sub
or
xor
pop
sub
adc
pop
sbb
push
rcr
mov
xchg
fdivr
lret
movsl
jne
mov
xlat
mov
loop
dec
movb
out
rcll
xchg
xor
sub
aaa
insl
jno
sub
add
sbb
pop
ret
arpl
push
in
arpl
inc
shrl
orl
inc
mov
add
pusha
addr16
add
cmc
aaa
xlat
add
cmp
mov
addr16
or
push
rorl
push
dec
push
or
test
movsb
incl
xor
mov
or
or
lret
sbb
jnp
testl
out
fsubs
fcomps
push
pop
sbbb
mov
cmc
test
push
lods
and
dec
arpl
out
movb
jecxz
cwtl
cltd
and
push
or
cltd
mov
sbb
sub
loop
mov
outsl
loop
inc
addr16
loop
les
jne
pop
movsb
cmp
jle
xchg
or
push
test
add
fld
pop
sub
ret
mov
sbb
pusha
and
movsl
dec
add
lahf
adc
sbb
insb
xor
cmp
mov
sahf
fwait
mov
adc
outsl
dec
and
test
js
mov
xchg
insl
test
pop
ss
cmpsl
push
sbb
ss
sub
das
cmp
popf
xchg
pop
loopne
mov
fwait
or
cmp
jecxz
adc
add
loop
lods
inc
outsb
jecxz
ret
adc
xchg
mov
out
ss
fnstsw
ficomps
aam
and
adc
aam
pushf
sbb
and
jne
in
inc
sar
cmp
jle
add
pusha
outsl
in
fldenv
xor
insl
fnstenv
add
lods
pusha
imul
dec
aas
cmc
add
adc
pop
pop
add
ss
push
sub
xchg
mov
nop
inc
test
inc
stos
push
cmpsb
mov
or
pusha
inc
mov
test
sbb
or
bound
rclb
adc
xor
rclb
inc
push
dec
xchg
pop
ret
adc
test
add
add
ja
dec
or
outsb
inc
xchg
icebp
jbe
adc
pop
xor
adc
pop
fbld
aaa
jno
loope
and
scas
and
ds
jne
fsub
insb
push
das
orl
add
test
ret
push
pushf
adc
pop
insl
mov
adc
fcoms
jo
jecxz
xor
push
shll
movsl
in
imul
ja
add
aam
rorb
jno
or
mov
imul
mov
scas
push
ljmp
loopne
imul
rorl
iret
ss
cmpl
js
adc
and
sbb
sub
pop
sbb
mov
enter
xchg
add
bound
jmp
test
jo
dec
sbb
jecxz
clc
dec
cmp
into
pusha
popf
add
in
sub
add
add
lret
cwtl
and
popa
fsubrs
inc
ljmp
out
adc
popw
add
gs
and
out
pop
and
or
mov
mov
and
adc
mov
shlb
mov
inc
sub
lods
data16
jne
inc
movsb
and
add
rcl
popa
rcrl
hlt
out
ja
cs
mov
fwait
inc
xchg
out
sub
mov
xor
pop
adc
daa
lods
scas
add
fistl
data16
mov
mov
inc
jmp
divb
cld
add
lfs
jb
push
aam
adc
je
adc
adc
jnp
mov
jae
aaa
push
das
push
jmp
push
mov
movb
data16
aaa
xlat
rcll
mov
sbb
sarb
js
push
xor
mov
ret
outsl
jnp
imul
xor
ss
xlat
sbb
dec
repz
adc
or
inc
or
popa
mov
push
mov
sbb
cmp
mov
and
in
dec
outsl
pusha
mov
mov
mov
sbb
lds
inc
enter
adc
je
dec
ret
imul
mov
movsb
je
inc
lret
or
mov
out
mov
adc
inc
and
int3
test
movsb
mov
sub
pusha
nop
xchg
pop
dec
iret
aas
sti
adc
pop
mov
cmpsb
cs
pop
leave
push
sahf
and
icebp
pop
pop
rcr
xchg
cmpsl
mov
mov
jg
or
jo
or
or
fnstcw
aas
mov
test
xchg
loopne
scas
xchg
lret
add
cmpsl
daa
add
scas
lea
xchg
leave
inc
push
stos
ds
movsb
mov
sbb
xor
push
sbb
add
out
pop
lods
jbe
sbb
stos
lods
and
aaa
xor
int3
pop
push
je
sbbb
pop
and
add
idivl
sub
shrb
mov
sub
pushf
cs
fwait
mov
push
clc
cwtl
aam
scas
bound
sub
cmc
mov
mov
add
inc
mov
lds
fwait
pushf
mov
in
into
push
ss
or
es
data16
cltd
or
inc
or
xchg
popa
jbe
sarb
in
in
add
loope
cmp
mov
shlb
mov
inc
sub
mov
add
inc
jmp
mov
ss
pop
jno
aaa
mov
out
mov
or
sub
push
pop
cmp
shll
loop
sub
pop
jle
jp
xor
inc
mov
add
sbb
subl
add
xorb
fld1
dec
and
cmpsl
sahf
dec
arpl
sub
orb
cs
hlt
fisttps
xchg
testl
dec
nop
add
jae
mov
xchg
add
dec
in
jo
pop
adc
sub
dec
mov
pop
imul
bound
xchg
adc
push
aas
add
xchg
lret
dec
add
xor
scas
xchg
mov
shlb
sub
cmp
inc
dec
dec
xchg
and
add
mov
sub
pop
pop
mov
push
js
jo
adc
les
xchg
sbb
dec
rolb
cmp
xchg
xor
lea
push
cmp
ficoml
push
or
push
add
mov
inc
lock
add
push
adc
adc
popf
or
enter
push
lock
add
sub
sub
fsubs
jp
test
or
xchg
mov
cld
sbb
push
and
fcompl
daa
outsb
push
inc
loopne
das
mov
stos
lcall
ret
ret
int3
daa
and
std
jo
and
mov
adc
dec
inc
test
repnz
inc
push
pop
decl
loop
jne
jmp
andl
dec
add
shl
dec
int
stos
add
aam
cmp
mov
fst
cmpsl
add
shlb
push
and
test
push
arpl
add
mov
push
mov
jp
inc
fstp
gs
mov
test
bound
inc
adc
dec
jno
fadds
mov
and
jae
push
xor
jmp
cmpl
or
roll
mov
inc
hlt
mov
mov
xchg
scas
fildll
xlat
popf
push
mov
or
push
xchg
jmp
inc
ret
xchg
inc
js
sti
hlt
out
pop
pop
add
aas
shrl
loopne
add
fildll
mov
jg
popf
sub
jecxz
out
mov
dec
xlat
sbbb
inc
pop
decb
lea
pop
add
in
rcrb
test
lahf
xlat
sbb
mov
jns
mov
into
lahf
imul
mov
sti
cmpsb
mov
clc
adc
out
jnp
and
jmp
sbb
add
fmul
add
icebp
inc
jmp
outsl
pop
and
jne
repz
mov
ffreep
mov
push
imul
mov
addl
dec
and
es
add
outsb
jnp
loop
pop
cmp
mov
data16
jo
cwtl
test
add
enter
lcall
pop
add
faddl
push
mov
leave
and
ficoml
lret
cs
rol
daa
add
mov
sbb
jg
push
add
js
es
sub
mov
sti
jg
addl
jnp
divb
ljmp
jo
adc
ss
add
sbb
cmp
dec
in
mov
out
shll
fs
int3
jle
mov
xchg
push
stos
mov
and
pop
sub
xchg
dec
pop
ds
fcompl
shll
xchg
and
mov
jnp
daa
and
mov
pop
xchg
rorl
lea
add
icebp
filds
out
loop
adc
adc
mov
rcrl
int
push
pop
rcrl
mov
out
xor
cmp
out
jecxz
jmp
push
dec
cmp
push
test
adc
insb
cmp
add
add
mov
mov
jo
push
mov
lods
das
cltd
sahf
adc
mov
inc
sub
adc
pop
rcrl
pop
cwtl
add
je
pop
jmp
stc
scas
orb
sbb
sbb
mov
adc
test
jno
sub
cmp
es
sbb
out
sub
pop
outsl
imul
stos
lds
repz
add
xor
lahf
dec
movsl
pop
sbb
iret
dec
out
fwait
xor
sti
incb
popa
iret
ja
outsb
imul
inc
cmpsl
push
sub
test
outsl
sbb
xorl
lret
ljmp
inc
sub
mov
inc
div
sub
popf
dec
mov
loope
jae
xorl
fdivrs
nop
pop
pop
inc
aas
push
sbb
xchg
mov
into
data16
push
sbbb
adc
insl
scas
xchg
iret
sbbb
rcrb
mov
stc
scas
daa
sbb
sub
ja
test
imul
arpl
dec
or
pop
movsb
inc
js
and
stos
andl
or
xchg
imul
lcall
mov
loope
push
xchg
push
mov
fldenv
mov
and
mov
fstpt
xor
sarl
iret
outsb
add
stos
xchg
add
dec
xchg
mov
out
ret
into
clc
in
dec
test
pop
mov
nopl
fistpll
lret
push
out
int
or
outsb
jle
mov
or
aad
leave
testl
mov
xchg
or
mov
xlat
popa
push
pop
sub
incl
mov
xchg
faddl
out
sbb
out
outsb
mov
int3
ss
cmp
add
imulb
roll
push
xor
push
inc
subl
sub
outsl
loop
jns
cmpsl
xchg
ret
aas
mov
ret
jmp
pop
fxch
test
dec
cmp
add
xchg
jns
mov
push
inc
ds
pop
dec
mov
clc
mov
int3
in
pop
pop
jne
or
push
add
push
inc
mov
in
jecxz
inc
mov
or
mov
lea
adc
pop
pop
aas
test
lock
adc
arpl
insb
cmpsb
pop
ja
aam
add
test
cld
ficoml
pop
fldcw
pop
jbe
mov
cmp
icebp
xor
mov
push
sbb
jnp
out
cmp
arpl
cmpsl
push
push
das
jb
and
mov
cmp
jb
sbb
arpl
movb
aaa
add
pop
pop
sbb
xlat
or
mov
cmp
mov
adc
into
xor
xchg
lods
mov
xlat
scas
test
fnstsw
iret
in
dec
xchg
pop
dec
pop
push
or
push
lret
pop
lahf
aas
stc
push
sti
and
ja
mov
addr16
fidivs
test
cmp
int
xor
sbb
dec
push
mov
das
jae
cmp
fldenv
xchg
loope
movsb
jecxz
sti
ret
push
xor
inc
lea
sti
lret
loop
pop
testl
mov
in
inc
out
insl
jns
outsl
outsl
xlat
jle
or
pop
sarw
pop
sub
in
dec
gs
data16
lods
xlat
dec
xchg
pop
jg
data16
jmp
mov
testl
mov
pop
cmpsl
mov
jl
loopne
ret
int
inc
into
adc
add
inc
pusha
aas
nop
cmp
jmp
testb
repnz
sub
pop
add
mov
insl
and
gs
lret
cmp
push
and
dec
mov
push
xchg
enter
mov
mov
add
aas
imul
stos
xor
rcll
sub
cmp
or
call
js
mov
mov
ja
pop
xlat
lds
mov
push
jecxz
lahf
outsb
fs
pop
push
sub
addl
iret
cs
stos
and
add
lods
lods
add
cmc
sbb
jl
fs
addr16
dec
add
insb
in
pop
pop
scas
adc
mov
loopne
sub
mov
fsubs
push
out
pop
stos
sbb
mov
out
add
adc
xor
popl
fldcw
js
add
mov
xchg
in
cmp
insl
vpunpckldq
outsb
sahf
xor
mov
je
stos
jl
add
jo
fcompl
ret
and
mov
cltd
push
movsl
leave
push
addr16
jmp
adc
add
mov
mov
mov
jb
dec
adc
arpl
ja
xchg
push
inc
cmp
push
inc
dec
loope
inc
push
xchg
adc
sbb
sbb
roll
inc
jnp
pop
pop
sbb
js
mov
push
movsb
or
inc
mov
and
dec
mov
jmp
call
dec
fsubrl
mov
mov
sub
sub
mov
cmp
pop
cmp
out
xor
mulb
and
sub
out
shll
or
lahf
fbld
dec
xchg
mov
data16
jp
movsb
imul
outsb
mov
add
cmp
jnp
loope
push
pop
lretw
and
xchg
add
dec
mov
insb
sbb
or
mov
in
or
loope
xor
push
jle
pop
push
lds
fbld
dec
sub
popa
add
inc
mov
mov
pusha
add
cmp
ret
inc
fldl
rcl
out
outsb
je
push
loope
lret
aaa
sahf
dec
lea
lretw
xchg
mov
je
mov
xlat
or
cmp
es
lret
pop
cmp
sub
int3
jns
mov
rcrb
adc
insb
shrd
fwait
jns
cmp
add
fbstp
xor
ja
aad
ret
pop
fildl
or
and
cmpsl
ret
pop
outsl
adc
push
cmp
or
pop
jne
sbb
cmpsl
imul
shrb
pop
ja
inc
add
and
pop
lea
mov
push
es
fisubrs
cs
pop
dec
dec
mov
daa
jmp
test
push
sbb
mov
ror
out
push
mov
fs
cmp
std
rcll
das
adc
mov
push
cmp
push
outsb
pop
cli
add
loope
outsb
inc
lret
ja
outsl
popa
cmp
fdivrl
les
add
push
dec
pop
out
popa
sub
sbb
jmp
pop
sbb
xor
fistpl
adc
push
inc
adc
loopne
jno
sbb
push
jae
shrb
jmp
pop
push
outsb
jmp
movsl
push
fldcw
out
mov
lcall
fisubrl
movsl
jecxz
sarb
pop
sub
lret
aas
ret
xor
mov
fwait
xchg
ja
out
add
in
jl
adc
mov
cmpsl
loop
notl
je
mov
negl
mov
clc
mov
in
ret
adcb
xorl
inc
aam
mov
and
push
movsb
insl
bound
mov
add
and
inc
out
in
outsb
sbb
je
scas
loopne
call
jg
dec
push
loopne
or
js
outsb
xor
bound
das
adc
shlb
push
push
enter
outsb
stc
xor
int
mov
inc
out
enter
pop
push
push
insb
jnp
sub
movsl
jmp
cs
test
mov
add
int3
dec
jge
xor
jecxz
rcll
mov
std
aam
mov
stc
mov
popa
xchg
negl
mov
jmp
lahf
mul
fnstenv
xorb
pop
call
stos
xor
push
fcoml
fwait
dec
in
insb
add
je
mov
xchg
mov
ja
shll
imul
into
outsl
mov
mov
inc
sbb
dec
sbb
mov
jnp
xchg
testl
mov
add
push
push
sbb
loope
lods
insl
imul
xchg
sbb
dec
popa
js
std
cld
add
fwait
dec
hlt
jae
test
in
and
lret
adcl
add
iret
xlat
insb
sub
dec
fwait
add
add
add
test
push
shl
pop
ret
sub
jg
je
or
xchg
popa
lods
repnz
push
lahf
sbb
mov
arpl
dec
jae
lea
fadd
push
stos
sbb
cld
xchg
xor
std
and
ja
jnp
rclb
xor
mov
sbb
mov
xchg
lock
les
push
cmp
add
push
imul
pop
mov
outsl
push
jle
inc
jl
lahf
push
stos
cmpsl
pop
cmp
mov
lods
jge
jb
mov
add
adc
xor
mov
mov
sub
and
mov
aaa
sti
filds
xor
lods
ja
dec
xlat
mov
xlat
pop
dec
jl
test
jno
cs
jo
sbb
aaa
jmp
shl
mov
mov
xchg
rorb
aaa
pop
cmc
pusha
jns
xchg
jp
sub
adc
pop
jp
dec
ja
pop
aaa
push
daa
jecxz
addr16
jg
hlt
ret
std
and
cmp
fistpll
fdivr
js
mov
add
push
add
cmp
cltd
adc
or
xor
cmp
imul
lds
mov
fimull
and
and
push
js
mov
shll
rcrb
mul
lahf
push
jg
ja
cmp
stos
fwait
loopne
ret
xchg
sbb
adc
ret
cmp
ja
xchg
dec
xchg
mov
ret
fimuls
jbe
cmp
mov
out
movsl
jecxz
sbb
clc
pop
loop
stos
aas
ss
imul
ja
cmp
pop
mov
imul
fldcw
xor
mov
aas
cmp
jne
in
pusha
into
cmpsb
pop
jl
sbb
popf
cmp
add
mov
ret
inc
ret
or
sbb
push
push
jne
pop
hlt
and
leave
jecxz
lods
mov
pop
and
push
push
or
pop
cmp
xchg
subb
je
xchg
or
sub
stos
test
lock
movsl
sub
xchg
add
lock
rcrl
out
push
outsb
ret
aad
xorb
out
test
push
rolb
outsl
sub
jle
adc
lcall
stos
mov
mov
add
sub
insl
push
mov
lea
sbb
mov
lock
je
mov
jge
lcall
xor
call
and
fidivrl
lea
stos
stos
es
xchg
insb
cmp
xor
push
popa
repnz
aad
hlt
shr
push
xchg
or
ret
dec
fsubrs
jo
push
or
cmp
mov
push
ret
lock
sub
add
xor
jae
jae
sbb
xchg
add
in
inc
and
jnp
clc
cmpsl
jmp
scas
fisubrl
jg
out
rcrb
fdiv
pop
adc
imul
mov
jnp
aaa
jmp
fisubs
mov
mov
fadds
mov
cld
add
xor
mov
and
add
iret
pop
mov
outsl
pop
mov
test
sbb
cmpnleps
fwait
mov
inc
xchg
das
inc
lods
sbb
mov
mov
mov
das
jb
ret
add
jb
dec
cmp
mov
xchg
je
sbb
sub
pushl
xlat
lcall
dec
add
cmc
movsb
in
les
or
loopne
inc
mov
add
fdivl
cmp
pop
nop
jbe
ret
jnp
jge
mov
test
in
nop
inc
mov
fsubs
push
sbb
sti
aaa
into
sbb
lahf
push
pushl
jg
lret
fiaddl
or
lds
cmp
shlb
jne
out
jno
push
jnp
cmp
adc
leave
es
mov
fdivl
xchg
push
dec
out
jae
dec
loope
and
adc
inc
push
mov
das
add
cmp
imul
lods
pushl
xchg
dec
insl
popf
xor
mov
cmp
cmp
add
movsl
das
xchg
jb
mov
cwtl
popa
or
jmp
xchg
bound
xchg
jecxz
sub
lcall
add
adc
sbbl
jo
push
mov
insb
mov
lods
xor
pop
mov
inc
out
push
jp
sub
push
repz
adc
imul
mov
xlat
xchg
jecxz
mov
cmc
fsubrs
adcb
pop
mov
daa
cld
aas
jg
sub
sbb
cltd
mov
jmp
hlt
add
aas
sub
inc
ret
adc
scas
das
rorl
andl
push
xchg
sub
xchg
adcb
inc
roll
push
pop
xchg
in
pop
mov
rcrb
lahf
lahf
lock
sbb
imul
cmp
lret
fdivr
fistpll
add
xor
int
or
inc
cmpsl
or
add
lds
jle
subb
fyl2xp1
clc
mov
icebp
ss
pop
stos
push
jp
out
mov
rcrl
dec
shr
mov
push
lret
cmpsl
mov
mov
into
mov
sbb
out
inc
xchg
test
mov
jl
test
inc
fwait
push
cs
and
movsl
sbb
popa
mov
into
jo
cmp
jno
cmp
outsb
push
mov
js
sbb
pop
hlt
test
repz
inc
ja
jmp
fstpl
inc
pop
xchg
flds
cltd
jle
xchg
mov
lods
out
inc
cmp
mov
and
test
sbb
push
push
sbb
dec
mov
add
or
fldl
adc
popa
or
fwait
mov
jl
scas
cmp
cwtl
dec
mov
adc
push
sbb
jmp
mov
hlt
add
jl
outsb
mov
mov
and
jb
inc
int3
enter
jl
add
out
xor
ss
add
popf
sbb
sub
inc
sub
cmp
add
add
inc
rcrb
dec
add
mov
add
pop
testl
dec
subl
push
dec
fcomps
roll
sbb
mov
add
jb
mov
incb
inc
lahf
jns
add
aam
fdivl
lds
inc
mov
sub
in
das
jp
dec
jno
mov
sub
insb
stc
fwait
add
inc
sbb
stos
mov
mov
cmc
xchg
jge
mov
add
sbb
out
insb
cwtl
jecxz
sbb
aam
add
pop
insb
stos
mov
out
sbb
outsl
lods
nop
cmp
pop
dec
jp
mov
mov
adc
addb
ficoml
bt
movsb
inc
fidivrs
insb
arpl
hlt
mov
repz
in
lods
mov
subb
iret
and
cmp
add
insl
and
pushf
sbb
xchg
ja
xorb
repz
out
aaa
jnp
mov
pop
mov
sbb
cld
out
jge
sbb
jns
mov
add
sub
mov
xchg
xchg
pop
into
stos
push
add
fmuls
out
fcmovnb
cld
dec
js
xor
imul
xchg
add
jg
xlat
push
inc
cmc
add
sbb
shrb
push
xor
inc
sub
add
add
mov
sub
cmp
jnp
and
jns
and
pop
dec
mov
fs
lahf
mov
add
add
rorl
testl
mov
cmp
xchg
inc
jge
aaa
cmp
mov
jno
or
cmp
rorl
test
fnsave
out
fiadds
or
jbe
das
or
sahf
fsubrl
into
sub
sub
mov
std
adc
xor
add
push
cmpsb
add
dec
pushf
push
sbb
xor
mov
test
jae
shlb
mov
mov
mov
dec
xor
into
mov
ficomps
out
mov
mov
jecxz
call
jo
push
es
aas
std
xchg
mov
jb
push
push
lahf
scas
and
pop
add
out
sbb
dec
dec
push
call
mov
inc
stos
inc
mov
insl
fsubrs
iret
lea
mov
jmp
adc
mov
mov
or
call
push
or
fcmove
outsl
add
add
inc
adc
daa
push
fbstp
sti
pop
lods
pop
add
xchg
daa
in
out
cmp
jle
movl
or
mov
pop
inc
pop
or
daa
sbb
sbb
mov
inc
push
sub
test
and
sarb
clc
jle
rol
testl
sarl
scas
push
std
jmp
push
push
das
push
push
xchg
out
dec
adc
insl
xor
lret
divl
lods
push
ret
sbb
aas
adc
add
stos
mov
xor
insl
or
add
or
push
jns
scas
mov
insl
stc
pop
jmp
mov
push
or
out
adcl
jne
into
movsl
or
arpl
dec
and
dec
xor
add
jmp
nop
add
stos
or
cmp
dec
push
add
dec
dec
sbb
sbb
dec
insl
sti
add
scas
dec
or
ds
add
addr16
and
jbe
sahf
out
mov
adc
dec
in
mul
dec
inc
xlat
lods
cld
and
add
push
pop
xchg
or
push
inc
jge
mov
or
mov
sbb
pop
push
sub
pop
cmc
es
fistpl
leave
in
stc
js
jbe
or
or
popf
mov
xchg
pop
push
test
stos
pop
pop
push
sub
pop
xchg
adc
lahf
cmp
xor
xlat
pop
notl
cmp
cmc
adc
mov
pop
fists
sub
jle
bound
or
sbb
scas
sti
push
rclb
scas
push
and
xor
pop
xchg
aaa
mov
mov
out
adc
cmpsl
mov
leave
and
and
cmp
aaa
mov
jns
call
shll
jno
in
daa
popa
icebp
adc
pop
sub
ret
mov
imul
stos
push
pop
dec
imul
int
add
jecxz
dec
sub
fs
mov
sbb
popa
mov
push
ds
mov
andb
push
in
and
mov
dec
pop
sub
push
inc
into
mov
jnp
xor
not
pop
push
pop
enter
icebp
ss
out
scas
imul
enter
pop
mov
add
data16
add
int
loop
mov
mov
fisttpll
xchg
lea
add
inc
jle
aam
scas
mov
mov
mov
cmpsb
stos
inc
jmp
inc
call
adc
in
or
mov
outsl
into
loope
mov
xlat
mov
pop
or
xor
adc
cmp
fdivs
test
xchg
pop
icebp
testl
cmp
fsubr
pushf
inc
decl
xor
imul
jle
add
or
int
fsubs
ds
mov
pop
jo
nop
lcall
imul
and
dec
rcr
outsb
cs
into
cmpsl
jl
xor
into
cmp
mov
int
inc
push
outsb
jg
addb
loope
test
mov
mov
mov
mov
js
fildl
das
dec
insb
push
or
mov
add
cltd
aam
in
clc
xlat
mulb
mov
add
pop
lret
shlb
test
push
push
das
or
mov
out
push
cmp
out
pop
mov
adc
push
mov
imul
jno
adc
adc
jo
cmovp
aaa
or
dec
sub
bound
scas
sbb
cs
nop
jo
enter
sahf
xchg
test
int3
cvtps2pi
push
popf
xor
es
movmskps
in
inc
dec
jle
mov
fisubrl
adc
add
jbe
jbe
xchg
inc
sti
das
push
out
mov
imul
movsb
xchg
sub
sbb
fisttpll
loopne
sbb
pop
sub
pop
mov
jo
packssdw
jo
lods
rcl
and
cs
aaa
cld
ret
and
jge
loopne
pusha
inc
cmp
subb
movsb
mov
cld
test
mov
fs
fcomip
or
xor
mov
add
cld
push
jns
mov
mov
insl
cli
aaa
jl
aaa
push
pop
int
or
test
or
movsb
or
scas
in
ds
out
je
clc
divb
push
ja
push
push
inc
mov
cli
push
sti
dec
mov
fcomps
aaa
outsl
aam
out
js
inc
pop
and
mov
cli
and
rolb
test
push
ficomps
sahf
es
pop
pop
pushf
xchg
push
push
sub
mov
xor
aam
or
pop
pop
xchg
scas
push
iret
xor
sbb
cmp
rolb
rcrb
mov
pop
pop
and
pop
jne
fdivr
ljmp
push
cmpsl
js,pt
and
push
dec
push
insb
mov
mov
dec
lahf
xor
and
add
mov
lds
or
jb
fistl
mov
push
ret
mov
mov
insb
jmp
mov
stc
cmp
cmp
jmp
add
xchg
add
mov
lods
or
jo
insl
pop
or
add
test
jo
or
ljmpw
pop
or
fildll
xor
mov
enter
fldpi
push
loopne
sub
adc
ss
and
adc
clc
cmc
and
push
mov
mov
das
mov
adc
rorl
outsb
pop
push
mov
adc
mov
xorl
and
js
in
jbe
mov
xchg
arpl
mov
mov
or
jle
push
mov
add
xor
pusha
xchg
or
mov
mov
add
pusha
imul
mov
sbbl
jne
addb
addb
push
cmp
push
xor
fdivp
aas
enter
jecxz
or
or
into
mov
jb
add
inc
xchg
pusha
dec
inc
icebp
leave
sti
cmp
mov
dec
test
or
std
mov
push
aad
mov
or
fcompl
xor
dec
mov
out
dec
pop
std
add
icebp
dec
insl
addb
add
in
mov
inc
or
sbb
mov
xor
bound
push
fwait
ja
fmull
shrb
clc
pop
lods
xchg
stos
pop
fcmovu
xchg
scas
or
mov
lods
add
inc
pop
lret
lods
ds
cmp
sub
and
out
sahf
sahf
imul
pop
push
mov
mov
add
out
enter
jp
mov
dec
inc
popa
fadds
test
fcomps
jp
dec
sbb
xchg
mov
pusha
leave
dec
jno
pusha
insb
dec
cmpsl
dec
add
mov
loope
cli
adc
dec
sbbb
popa
js
addr16
add
rol
das
clc
loopne
lock
sbb
jmp
cmp
in
add
sub
push
adc
repnz
enter
test
in
jecxz
fxch
sbb
ja
pusha
outsl
sub
insb
int3
push
inc
inc
or
push
pop
push
cli
jb
cli
push
sbb
inc
out
xor
jns
clc
adc
in
mov
sbb
add
ret
int3
jecxz
aam
mov
mov
inc
pop
repz
jne
imul
stos
xchg
adc
or
movsl
sbb
aam
loope
scas
stos
jo
clc
ret
cmp
testb
in
ljmp
push
ror
popa
dec
fistl
jbe
push
or
imul
mov
ficoml
jne
daa
fimull
scas
leave
xor
sub
sbb
push
lods
add
test
insl
pusha
cmp
scas
rcl
scas
push
xor
xchg
inc
rorb
fistl
sarb
fmul
outsl
inc
std
hlt
loope
and
aad
int3
xor
data16
scas
push
inc
xchg
scas
js
fidivrs
test
lods
insb
mov
jno
mov
and
les
xchg
pop
jo
shll
repnz
test
dec
fisubrs
stos
push
sbb
or
add
bound
sti
jmp
arpl
imul
push
outsb
jmp
mov
adc
cmp
add
jo
push
mov
xchg
dec
js
or
inc
cwtl
in
ficoml
pop
lea
scas
lcall
inc
adc
gs
addr16
rcrb
addl
push
out
add
xor
in
hlt
dec
andb
push
push
push
fldt
mov
fldcw
jp
lahf
inc
out
divb
pusha
adc
jbe
dec
sbb
adc
pop
imul
cld
in
icebp
sbb
clc
ret
mov
push
lret
ret
inc
jo
pop
ret
pusha
notl
imul
es
leave
push
push
and
jo
popa
inc
sbb
push
mov
adc
push
je
sub
mov
jb
hlt
pop
xlat
and
hlt
push
jecxz
push
or
pop
or
push
nop
mov
cli
int
ret
xchg
and
cmp
fistpl
adc
inc
push
mov
nop
fwait
mov
xchg
push
insl
fisubrs
add
in
loop
sub
xchg
mull
pop
cld
in
push
sbb
out
insb
adc
mov
mov
push
cld
hlt
scas
cli
cmp
xchg
mov
mov
aam
sbb
mov
sbb
jle
lds
not
xor
addr16
pop
push
sub
cwtl
sub
xchg
mov
lret
rclb
ja
pop
scas
lods
addr16
call
ljmp
call
push
aas
sbb
inc
cltd
push
movb
jp
and
pop
int
inc
test
push
jb
dec
or
mov
inc
add
sub
push
sub
pop
lds
sub
xor
sub
sub
cmp
int
adc
add
int
clc
outsb
dec
dec
rolb
imul
mov
pop
ds
shl
cmpsb
movsb
cmpsb
ja
or
pop
leave
sti
xchg
lcall
orl
xchg
fimuls
jp
aam
ds
push
int
xchg
xor
movsb
test
in
push
add
dec
leave
js
dec
jl
shl
lock
addb
outsb
cmp
loope
or
mov
loopne
pop
mov
mov
test
cmp
add
ret
xlat
jno
pop
xor
loope
repnz
ficoml
dec
pop
fwait
test
pop
addr16
je
pop
call
or
loop
mov
xchg
dec
mov
insb
decb
sbb
or
les
dec
sbb
fisttps
and
pop
mov
std
xchg
aad
dec
or
in
sbb
test
test
push
mov
pop
je
fisubrs
subb
xchg
jbe
ret
stos
testl
addb
scas
enter
pop
or
push
pushf
les
mov
xchg
mov
mov
loop
push
and
std
mov
push
sub
subl
js
data16
adc
enter
xor
test
cmp
sbb
sbb
mull
pop
insl
mov
rclb
ss
jg
stos
mov
stos
mov
push
clc
xor
sub
dec
lods
xchg
ds
ss
clc
popf
ficomps
xor
jno
push
scas
push
jp,pt
fdivrs
icebp
push
aam
cmpb
sti
push
push
sub
inc
or
shrb
xchg
test
nop
sub
rcrl
xchg
fbstp
cmp
mov
addr16
arpl
outsb
pop
pop
lods
insb
insb
aad
nop
inc
xchg
jo
out
pop
rcrb
jne
push
scas
mov
sbb
cmpb
fwait
add
push
cmpsl
xchg
mov
xchg
cltd
jge
adc
sub
jmp
push
hlt
and
cmp
mov
dec
mov
mov
cmp
fiaddl
mov
add
fcoms
add
aaa
mov
mov
sub
fwait
or
subb
and
sub
notb
clc
mov
out
pop
insl
sahf
xchg
add
add
fldenv
jo
mov
loope
mov
loope
mov
das
mov
outsb
dec
dec
pop
jg
pop
pop
push
test
out
push
fs
cwtl
gs
sbb
dec
push
and
ds
dec
cmp
dec
dec
call
jnp
xor
addl
out
and
adc
test
push
sahf
xchg
je
xor
scas
xor
xor
sti
pop
mov
adc
push
pop
ret
outsl
xlat
sarl
cwtl
inc
lret
cli
mov
xor
jecxz
fdivrl
xchg
sub
or
mov
iret
adc
ret
loopne
mov
pop
fnstenv
cmp
and
sub
add
loop
into
fisttpll
test
es
out
inc
inc
mov
mov
and
ss
push
pop
ja
out
int3
mov
lods
xchg
jo
lcall
mov
pop
adc
fcmovnb
das
scas
lahf
mov
push
xor
pop
sarb
dec
lret
sub
pop
mov
inc
int3
jl
pop
lret
sbb
scas
jge
and
leave
push
andl
loopne
movsb
adc
mov
xor
ljmp
sbb
xor
or
mov
cld
or
lcall
xchg
faddl
enter
sub
dec
inc
lahf
fiadds
sbb
fcmovnu
mov
les
stos
push
add
and
out
mov
xchg
push
pop
push
or
cmp
sub
mov
cmp
test
sub
or
ret
enter
sub
int3
push
pusha
ds
push
mov
loop
cs
filds
cld
leave
lcall
decb
adc
popf
loope,pt
push
and
add
adc
push
mov
push
jo
dec
mov
stos
aad
mov
fimuls
dec
pop
cmc
add
mov
scas
mov
mov
in
push
push
xchg
pop
ss
sbb
loopne
pop
or
fs
jmp
jbe
or
sub
xchg
fidivs
ret
ret
data16
ds
mov
mov
cmp
jmp
sar
sti
lea
jae
xchg
sbb
and
push
sub
hlt
mov
mov
ss
inc
pop
sub
xor
add
push
jo
subb
push
sbb
lock
and
fimuls
mov
mov
pop
insl
fcoml
xchg
xor
jge
push
lret
and
adc
jecxz
roll
fs
cwtl
scas
shl
dec
pop
mov
leave
push
or
ret
js
shrl
ja
adc
add
movsb
leave
push
dec
aam
push
sbb
ret
xchg
jo
aam
inc
jge
jo
fcmovnb
inc
push
lret
test
pop
adc
or
sub
rorb
es
enter
xchg
sub
les
scas
sahf
push
subb
sub
mov
mov
insb
mov
loopne
adc
rcrb
pop
lea
jae
lcall
dec
cmpsb
in
int
sub
push
rcl
push
lods
xchg
pop
cmpsb
lret
cmpsb
shlb
pop
leave
loopne
and
pop
push
or
dec
push
jbe
xchg
sbb
sub
sub
fwait
or
add
ss
enter
stos
ret
ffree
dec
insb
sbb
bound
adc
stos
fs
cmpsb
pop
jg
cmc
lea
insb
mov
add
mov
pop
lahf
sub
je
mov
or
pusha
das
call
mov
mov
cltd
push
sbb
jno
addr16
roll
cli
jnp
pop
mov
push
sub
ljmp
addr16
enter
mov
rcr
mov
notb
inc
sbb
fcmovu
jo
popa
mov
lock
or
hlt
shll
aad
adc
fidivl
jmp
addl
adc
negl
insl
pop
add
push
dec
fadds
add
cmp
and
dec
fstps
enter
pop
xor
add
outsl
push
push
cmp
insb
add
lock
cmpsb
lahf
mov
lret
cwtl
stc
clc
mov
fcompl
insb
ja
fwait
add
test
cmp
lea
pop
outsb
lods
and
xchg
sahf
inc
cmp
xchg
inc
aad
cmp
jns
push
adc
cmp
gs
je
popa
xchg
cmp
add
and
pop
inc
insl
push
push
ss
or
cmp
push
sbb
sbb
cmp
add
sbb
adc
or
fstl
sbb
shr
int
push
out
dec
pmulhw
xchg
and
xor
int3
ret
je
nop
mov
jbe
jne
jle
sub
mov
loop
aam
or
pop
stos
sbb
pop
aad
dec
and
jnp
fiadds
pop
loopne
mov
mov
movsl
xor
adc
shlb
dec
aam
leave
xchg
rorb
push
scas
sbb
repnz
js
test
xor
inc
movsbl
pop
cmpsb
pop
adc
mov
ret
push
loope
imul
xchg
adc
ficompl
push
shlb
or
lds
cmp
mov
adc
rorb
subb
in
ficoml
xor
cld
inc
push
inc
faddp
hlt
sahf
add
pop
movsb
inc
mov
sub
sbb
pop
push
addr16
clc
inc
lods
movsb
jecxz
sub
push
jge
and
inc
mov
and
push
sbb
fidivl
ds
outsl
loop
aaa
or
test
je
popf
test
push
mov
outsb
adc
shl
out
loop
cltd
cwtl
stos
hlt
adc
negl
mov
cs
mov
add
sub
pop
mov
stos
mov
cmp
dec
inc
cmp
sahf
loopne
cmp
or
shrl
lock
sbb
gs
jecxz
mov
pop
jmp
es
xchg
les
testb
je
mov
nop
ret
rcrl
aas
xor
push
push
hlt
data16
js
cwtl
out
cs
adc
rclb
out
add
js
or
push
rcrb
add
jmp
xor
mov
iret
ljmp
mov
out
subl
xor
xchg
jle
xor
fsubrs
jnp
xchg
out
xchg
fsubs
daa
andl
pop
cmp
movsl
fisubrl
lock
jg
dec
jbe
lds
push
jae
mov
inc
xchg
sbb
or
stos
mov
xor
shll
pop
shlb
mov
xor
jno
int3
pop
ret
dec
pop
addr16
adc
sub
repnz
fiadds
mov
popa
xchg
push
pmaddwd
cmp
cmp
mov
rcll
mov
cmpsb
or
sub
insl
popa
fcmovnbe
in
jne
into
mov
cmpb
jo
ds
xchg
ret
lahf
rorb
or
sbb
js
scas
mov
push
call
sahf
inc
ds
pop
and
popf
clc
add
xchg
xor
inc
mov
out
and
lock
imul
aad
or
xor
or
lods
lret
daa
inc
cli
or
push
xor
jl
inc
xor
lret
jb
jbe
clc
fldl
pushfw
cmp
pusha
inc
fmul
lcall
fidivrl
jnp
push
movaps
popf
and
out
sbb
daa
int3
es
shrb
addb
sbb
sbbb
xor
lock
in
and
inc
insb
lods
dec
pop
xchg
or
dec
or
insb
mov
mov
mov
cmp
lret
pop
xlat
shl
and
mov
mov
aaa
popa
stos
clc
xchg
lock
mov
cwtl
mov
cmpb
xor
sub
fistps
out
inc
xchg
sbb
adc
cmpb
jp
mov
push
mov
popa
sahf
inc
cwtl
mov
dec
cmpsb
push
outsb
cmp
in
js
xor
jno
int
jo
fcmovb
lods
add
sarb
push
xor
stos
notb
fsubrp
loopne
adc
push
xor
or
inc
mov
fadds
xchg
in
lret
xlat
dec
fwait
aaa
pop
sbb
out
or
ss
mov
xchg
cmpsl
jp
and
or
jp
jbe
mov
lea
push
jle
pop
add
insl
cmpsl
ret
push
cmpsb
push
shlb
adc
or
pop
rolb
arpl
cmp
adc
xlat
sbb
imul
pushf
jne
cs
clc
add
std
lods
int
imul
jno
push
int
xor
enter
adc
lcall
push
ss
fwait
pusha
mov
mov
data16
imul
mov
ds
mov
inc
add
inc
push
mov
test
adc
sub
push
and
push
jp
shll
lret
mov
dec
dec
je
and
stc
pop
jl
inc
mov
xor
ficoml
lds
fmull
and
sub
addl
push
stos
aad
imul
cwtl
dec
add
cmp
add
incl
sbb
mov
nop
mov
add
push
int3
cmp
push
xchg
aam
pop
int
aad
inc
mov
sub
ret
fstps
mov
fwait
push
xchg
xchg
add
out
add
dec
ss
mov
add
loop
pop
pop
movsl
push
mov
adc
mov
add
add
pop
mov
cmp
add
dec
fisubl
pop
sub
inc
pushf
push
sbb
rcrb
aas
inc
jecxz
sub
js
cltd
daa
xor
xor
call
jp
jnp
jb
pop
push
ret
pop
cmpsb
rcl
jecxz
cltd
or
inc
xchg
shlb
gs
sub
xchg
sbb
fisttpl
jle
je
call
sub
lods
xchg
fldln2
and
xchg
sbb
repz
jl
insl
js
dec
neg
dec
mulb
fsts
fwait
test
push
cs
add
jg,pn
aad
add
push
pop
fcomps
shrl
scas
enter
fdivr
scas
cmpsb
mov
add
mov
push
pop
dec
aaa
test
dec
or
adc
and
test
sub
cmp
inc
test
roll
add
push
mov
ret
test
test
add
fldln2
jecxz
jbe
push
fsub
sahf
clc
dec
jo
jg
mov
js
es
imul
push
sbb
push
clc
sub
adc
stos
orl
out
shll
push
addr16
daa
rcrb
pop
jo
aas
pop
mov
or
mov
xchg
shll
cmp
xchg
xchg
pushf
clc
and
or
sub
enter
mov
push
sbbl
sbb
push
push
addr16
sub
mov
imul
call
mov
das
mov
mov
xor
push
ljmp
mov
insb
and
xchg
ss
mov
sti
repz
js
cmp
movsb
pop
dec
pop
out
pop
jle
sbb
inc
xorb
insl
mov
lcall
and
push
mov
adc
xchg
orb
or
add
pop
adc
or
jmp
shr
and
mov
pop
or
cmp
jp
inc
fcompl
xor
ss
or
outsl
and
jge
rcl
dec
dec
and
lods
insl
mov
insb
stos
sti
and
and
sub
scas
jle
sahf
sub
inc
mov
cs
adcb
iret
out
dec
mov
dec
mov
popl
adc
movsb
cmp
push
insl
push
pop
mov
sub
inc
hlt
jp
add
test
ret
icebp
imul
dec
stc
mov
int
dec
cmp
call
inc
jle
loopne
lcall
mov
fistl
push
jl
or
mov
fiaddl
dec
push
roll
dec
sub
fildll
insb
xor
dec
jge
aad
sub
push
jmp
mov
push
mov
jge
xor
xchg
scas
add
ljmp
mov
dec
mov
stos
test
mov
dec
sahf
outsl
inc
pusha
shll
cmp
mov
push
pop
in
aad
mov
mov
adc
hlt
dec
and
pop
dec
ss
jmp
cli
mov
adc
stos
ds
push
inc
xchg
or
loope
outsb
mov
pusha
inc
push
jl
movl
stos
xor
rcl
es
cmc
js
insl
xchg
push
dec
repnz
test
lcall
or
sahf
mov
rolb
das
mov
in
fcmove
adcb
mov
jae
aas
aam
les
cmp
lods
insb
push
gs
test
push
in
loopne
sbbl
loope
push
xchg
jne
jbe
pop
rclb
out
stos
or
xor
or
ljmp
mov
sbb
cld
testl
int3
in
cmp
movsl
test
jnp
cli
notb
rclb
jl
cld
mov
testl
push
mov
stos
out
and
pop
repnz
sbb
push
push
and
imul
and
lret
pop
add
ss
pop
dec
cli
popa
sbb
sarl
jnp
mov
push
xorl
jl
jl
in
ljmp
pusha
roll
test
mov
inc
mov
mov
mov
jle
aam
dec
push
mov
test
test
sar
jmp
repnz
clc
idivb
or
fildll
cmovae
fimull
push
xlat
mov
test
jle
mov
sbb
scas
ja
lds
push
in
and
mov
outsb
dec
mov
lods
add
inc
rolb
sub
or
jne
pushf
jg
sub
in
inc
add
cmp
cwtl
das
test
lret
leave
push
aam
lcall
push
call
mov
mov
cmp
cli
or
cmpb
call
or
dec
sti
jp
daa
pop
fbstp
scas
outsb
lcall
sub
in
xlat
test
xor
mov
lods
shlb
mov
fidivl
mov
decb
mov
inc
ret
xor
pop
add
mov
fadd
push
subb
ret
dec
insb
xor
lods
fwait
jo
jge
pop
sub
lcall
testb
movsb
in
mov
xor
pusha
and
or
push
enter
in
fisubrl
std
jl
lock
or
push
inc
ffreep
inc
ret
jo
jo
in
add
sub
cmp
or
mov
daa
lret
mov
mov
pop
test
lods
sub
js
push
aad
sbb
mov
cli
pop
lret
pusha
cs
mov
cmc
add
and
pusha
adc
inc
inc
dec
shlb
push
push
lods
mov
ss
fisubrl
inc
sbb
push
daa
pop
cmpsb
sahf
and
lret
or
xor
pop
jne
jmp
jmp
pop
lahf
push
lock
jge
jb
int3
jne
data16
push
and
rcl
mov
std
addps
push
sbb
mov
cmpsl
mov
sbb
jle
xor
fimull
fdivrl
xor
pushf
sub
push
lock
mov
stos
in
dec
enter
mov
ds
mov
mov
mov
insb
xor
xor
or
bound
mov
sub
jle
mov
jbe
mov
pop
into
mov
pop
int3
es
lahf
inc
xchg
push
loop
lds
pop
push
mov
adc
lea
out
push
test
aas
xor
ljmp
add
mov
lret
jg
mov
enter
pop
rolb
insb
test
stos
xor
xchg
stos
in
mov
call
sbb
mov
xor
mov
and
bnd
push
push
mov
sub
lret
out
sub
mov
lahf
mov
dec
and
into
pushl
cmp
or
and
cmp
and
lea
aaa
rorb
js
sub
int
mov
sbb
arpl
lock
sahf
dec
mov
sub
push
divl
sbb
inc
fs
add
jge
mov
mov
xchg
js
xchg
data16
fldl
subl
call
in
mov
cmpsb
in
inc
pop
jg
adc
test
in
fsubrs
mov
xchg
lahf
enter
dec
push
jbe
adc
add
ret
scas
cmc
rcrl
or
sahf
lods
xchg
mov
lret
jne
fimull
push
fcompl
push
ret
nop
sub
clc
popl
or
leave
xchg
push
shrb
xchg
xlat
test
out
push
lahf
nop
push
ds
jnp
and
rcrb
dec
xlat
mov
xor
aaa
xor
push
andl
lock
sbb
inc
imul
or
xor
arpl
sub
xor
xlat
in
inc
xor
cmp
xor
pop
in
xor
xor
outsl
outsb
in
outsb
das
ja
jnp
inc
push
pop
out
jmp
mov
mov
mov
mov
mov
shlb
add
cmp
lret
cmpsl
js
cmp
sbb
xor
xchg
out
daa
xor
pop
cmp
and
jge
ja
adc
or
daa
outsl
jbe
frstpm(287
cmp
das
inc
dec
insb
push
mov
jge
push
mov
mov
pop
divl
fldt
das
xor
or
cmp
ret
add
dec
pop
cmp
sbb
mov
imul
sbb
mov
adc
mov
or
cmpsl
sbb
mov
mov
sbb
fdiv
and
jge
or
sub
or
idivl
sub
sbb
push
ds
sub
or
sub
dec
xlat
outsb
pushf
cmp
ja
add
pop
dec
push
daa
jg
es
add
daa
push
pop
and
fstps
call
mov
ds
cmp
or
xlat
jne
cmp
pop
sbb
jg
dec
cmp
push
add
xchg
xchg
pop
fwait
divl
jl
jmp
sbb
pop
fildll
imul
das
cmp
or
jno
dec
addr16
jge
mov
pop
and
mov
fisttps
jp
jle
sbb
lret
or
cmp
cmp
outsl
std
clc
push
imul
add
rcr
mov
fwait
ds
and
sub
mov
and
xchg
cmp
or
out
or
scas
sub
aad
out
or
cmp
sub
jp
mov
aaa
xchg
or
mov
inc
push
fucompp
mov
notl
daa
pop
mov
sub
xchg
pop
xchg
or
sbb
pop
popa
pop
mov
dec
pop
or
mov
mov
and
pop
mov
outsl
jl
push
pop
or
filds
mov
push
or
push
jg
push
fwait
jge
pop
sub
insl
xlat
outsb
movsb
lahf
or
jecxz
testl
mov
push
and
inc
mov
jecxz
or
adc
cli
and
add
sar
fldl
fwait
pushf
ret
pop
xor
mov
sti
imul
inc
or
stos
loopne
jne
or
sbb
cmp
or
pop
add
xlat
jne
dec
unpcklps
sbb
push
pop
faddl
pinsrw
or
das
jo
mov
and
cmp
add
xlat
cmp
stos
add
imul
iret
add
jge
push
and
sbb
jmp
fwait
xor
or
cmp
push
mov
lea
sbb
add
lret
sti
jbe
jnp
lea
push
cmpsl
stos
pop
add
pop
xchg
or
inc
repz
pop
sbb
mov
xor
jne
lret
shrb
inc
adc
or
addr16
das
arpl
imul
sub
out
loope
and
scas
or
mov
xchg
adc
hlt
loopne
aad
bsr
pop
mul
icebp
push
and
enter
outsb
in
inc
dec
push
inc
and
push
inc
pop
xchg
sbb
fxch
cmp
or
push
pop
push
sbb
jae
jnp
in
mov
xchg
xchg
testl
clc
cmp
xchg
or
sbb
fucom
mov
sub
outsl
or
js
enter
stos
pop
xlat
jge
addr16
xchg
pop
fwait
adc
jge
subb
das
or
add
pop
test
or
shlb
or
adc
jg
adc
mov
pop
jp
fnsave
jb
enter
cmp
gs
xor
push
out
push
add
pop
add
cmp
or
add
imul
adc
sub
arpl
repnz
sub
test
add
gs
mov
inc
pop
dec
mov
xchg
fiaddl
aam
add
in
mov
or
inc
adc
mov
movsl
outsb
shrb
inc
jo
mov
and
ss
addr16
add
insb
das
mov
fisubrl
add
cmpb
into
dec
xor
xor
fstpt
cmp
addr16
add
add
jmp
push
add
jbe
testb
pop
or
pop
adc
je
adc
dec
sahf
sysret
xor
mov
insb
lcall
rcrl
dec
movsb
add
xor
out
daa
sbb
dec
call
nop
negl
out
xor
or
rorb
add
stos
fdiv
xorb
stos
lds
in
push
inc
jmp
sub
sbb
inc
ret
sub
cmpsb
and
movswl
adc
shlb
push
mov
out
out
add
add
cmp
int3
mov
test
cmp
out
out
test
shlb
mov
push
xlat
jge
imul
loopne
ss
push
mov
inc
test
rorb
cmp
into
cmp
sub
cmp
out
mov
cmp
mov
push
sub
mov
scas
mov
sbb
in
and
adc
mov
jle
pop
mov
ss
xor
add
sbb
add
out
dec
xor
add
daa
add
add
lahf
dec
inc
insl
adc
ret
popf
cmp
inc
xchg
daa
xchg
daa
and
daa
cmpl
insl
xor
popa
inc
ss
inc
inc
scas
push
adc
stos
imul
sub
test
xor
decb
inc
add
or
ljmp
imul
lds
xchg
mov
xchg
popf
mov
mov
cmp
mov
cltd
pop
aaa
insb
popf
cmp
je
cmpsb
movsl
cmp
add
fwait
jg
test
sub
push
outsl
add
jmp
pop
dec
adc
ficoms
cmp
or
test
sub
pusha
rorb
push
or
into
pop
dec
jge
adc
mov
jnp
adc
lahf
in
pop
mov
mov
add
push
std
imul
bound
jbe
loopne
repnz
cmpsl
adc
or
ds
xchg
test
mov
pop
jecxz
fs
outsl
jmp
mov
xor
adc
fisttpll
popa
das
xchg
dec
lea
and
mov
lret
inc
lea
add
leave
daa
pop
or
cmp
nop
pop
adc
xlat
sbb
dec
inc
add
pop
call
push
in
int3
push
and
jnp
out
mov
movsb
fistl
sarl
ss
sbb
aaa
aam
pop
lea
jb
push
ja
lods
shrl
mov
inc
cmpsb
ficomps
daa
cmpsl
add
adcb
ret
cmc
sub
lea
testl
daa
popf
xchg
push
jl
fs
ja
pop
and
insb
mov
dec
js
xorl
add
pop
jb
cmpsb
mov
aad
pop
pop
mov
and
aaa
mov
mov
jns
jg
cwtl
jb
and
mov
sub
test
mov
mull
ds
jg
inc
and
int
negl
cmp
iret
stos
add
imul
sbb
xor
sbb
mov
add
dec
add
addr16
insb
insb
xchg
jns
aad
push
push
aad
mov
pop
xchg
mov
inc
xchg
outsl
sub
sbb
aad
idivl
fcompl
adc
pop
mov
dec
insb
push
int
xor
cmpsl
and
and
or
cmpsl
or
jne
push
das
dec
xchg
std
xchg
aas
lods
or
aad
pop
add
iret
lds
lds
sti
ljmp
xor
cmpsb
adc
xchg
gs
xchg
mov
cwtl
mov
out
cmc
dec
mull
jp
arpl
cmp
std
or
lea
sub
aam
push
xor
add
push
pop
ja
push
jge
or
cltd
push
fistpl
jae
aam
andl
adc
mov
pop
add
jmp
pop
sbb
cmovle
sbb
in
inc
andl
xchg
adc
stos
xchg
mull
mov
jbe
mov
test
fcmovb
inc
add
xchg
dec
out
scas
inc
out
outsl
sub
cltd
push
fucomip
das
sbb
push
imul
sbb
pop
fisubrl
mov
rcrl
pop
aas
xor
jno
fisttps
ret
pusha
loope
and
dec
mov
jecxz
js
adc
adc
arpl
xchg
adc
ja
push
xor
xlat
nop
xor
push
and
fldcw
inc
and
adc
pop
orb
push
rcll
nop
pop
mov
add
inc
mov
popa
xor
fidivl
stos
ret
add
in
sub
aaa
sub
pop
dec
xchg
jne
jmp
insl
push
lahf
das
out
xor
movsbl
out
cmpsl
cmc
out
popf
and
js
jbe
and
pop
loopne
fwait
lcall
sbb
in
vpmullw
cmp
pop
push
add
das
adc
inc
add
jo
xor
ds
lock
or
hlt
jno
loop
int
loope
mov
dec
adc
mov
fcmovnb
outsl
inc
iret
ja
faddl
in
in
jg
inc
leave
outsl
mul
adc
pop
push
pop
scas
push
stc
mov
and
jnp
stos
push
mov
in
pop
int3
and
mov
dec
mov
xor
jecxz
sub
or
andl
xor
fwait
mov
jb
jg
in
lds
sbb
scas
bound
mov
in
rcrl
sub
pop
test
lock
add
or
inc
dec
add
cli
jo
insl
sub
mov
fistl
daa
jp
xor
pop
jno
adc
mov
mov
sahf
lock
cmp
jb
lods
movsl
lods
cmp
inc
addl
mov
pushf
pop
out
or
fiadds
mov
je
xchg
mov
cmpsl
lret
in
pop
in
rcrl
mov
sti
jne
outsl
xor
das
mov
jmp
das
sub
shrb
pop
rclb
sahf
lods
sub
mov
inc
out
mov
or
add
sbb
xor
xchg
out
jne
sbb
outsb
arpl
idivl
notl
imul
jb
xor
jp
xchg
out
icebp
fidivs
cltd
pop
xor
add
cmp
sbb
imul
mov
xor
mov
mov
fbstp
test
and
mov
xchg
jae
mov
orb
ret
mov
xchg
cmc
dec
dec
jp
sub
and
call
lahf
push
and
bound
mov
push
fbstp
repnz
push
insl
imul
jge
faddp
add
sbb
sub
or
push
xor
xchg
shll
bound
xorb
ss
push
subl
pushf
or
in
xor
cmpsb
test
test
add
pop
arpl
mov
out
pop
inc
pop
add
cwtl
rorb
outsl
scas
dec
mov
pop
dec
mov
dec
dec
jl
dec
mov
dec
int
leave
repz
jmp
mov
mov
pushf
arpl
sbb
jo
jge
repz
xor
push
add
shrb
push
mov
sub
add
and
imul
mov
jecxz
mov
sbb
cwtl
mov
xor
mov
outsb
fmul
adc
or
xlat
aas
jmp
out
arpl
add
mov
cltd
xor
cmp
pushw
or
in
stos
xor
or
pop
mov
inc
iret
inc
pop
mov
add
push
fiadds
das
pop
jnp
out
sbb
out
fidivl
jo
pusha
and
push
aad
push
pop
jae
mov
adc
mov
push
sbb
cmpsl
sbb
test
xchg
inc
imul
sub
das
gs
sbb
int
loope
inc
out
fwait
out
das
pop
cwtl
outsb
movsb
sub
adc
xor
mov
loope
ret
or
push
push
aaa
lret
add
add
or
dec
push
ret
push
in
adc
stc
fwait
scas
les
mov
pop
fisubs
sti
and
jne
xchg
add
aaa
jecxz
popa
lock
push
test
push
pop
pop
arpl
pop
subl
cmp
pop
gs
sub
stos
filds
xchg
dec
fnstenv
xchg
pop
pop
cld
fs
inc
mov
lea
fistps
sub
jno
pop
or
mov
rorl
pop
rorl
out
or
fsts
insl
out
jno
jecxz
mov
inc
aad
and
xor
cmp
sbb
ficomps
and
lods
jne
xchg
sub
add
cmpsl
adc
xor
inc
or
jp
dec
cmp
popa
bound
and
lock
mov
cmpsl
arpl
push
roll
enter
test
or
pop
jl
andl
arpl
mov
loope
outsl
inc
mov
out
sub
mov
punpckldq
sub
jmp
and
or
sbb
or
es
mov
pop
push
sub
jnp
jge
ret
in
xchg
sbb
jmp
and
add
push
loopne
mov
fildl
daa
incl
mov
mov
je
stos
push
rcrb
xchg
cmp
mov
and
popa
addl
or
fwait
lds
xor
mov
popf
mov
pushf
pop
and
popa
add
aam
test
cmpsl
mov
mov
mov
sub
scas
inc
insb
jae
mov
lret
sbb
mov
xchg
pop
add
ret
cltd
and
out
in
sub
and
sbb
ret
mov
jae
popa
xchg
mov
and
fisttpll
mov
adc
xor
insl
adc
rolb
or
mov
adcl
push
lods
push
pop
jp
lds
jbe
push
mov
sbb
or
negb
daa
stc
and
rolb
out
or
sbb
arpl
aaa
jae
mov
pop
mov
arpl
imul
loope
dec
xor
lock
mov
xlat
lds
mov
sbb
aaa
pop
ja
movsl
aas
outsl
cmpsl
mov
mov
mov
daa
lds
outsb
pop
mov
adc
jne
cld
imul
push
add
imul
jecxz
mov
fadds
cmp
or
pop
stos
jge
jmp
fimull
shll
sub
out
movsl
ljmp
loopne
and
add
rcll
lock
scas
test
loop
stos
das
add
pop
fcoml
jae
idivb
adc
xor
stos
outsb
pop
sbb
mov
xor
adcb
push
jae
stos
ja
fucomp
jnp
and
or
pop
scas
jle
add
sub
cs
ret
sbb
shll
stos
outsb
gs
ficomps
mov
lock
and
sbbl
lods
xchg
adc
adc
pop
add
pop
jecxz
jmp
popw
in
aaa
repz
cs
out
nop
shll
mov
dec
rorb
xlat
dec
andb
mov
xchg
and
pop
outsl
add
mov
aas
sbb
aam
stos
pop
fsubs
mov
lea
adc
mov
jo
mov
xlat
sbb
inc
sub
inc
sub
sub
xchg
dec
lock
dec
mov
test
stos
jno
iret
push
or
std
fiadds
std
mov
stc
xchg
mov
fwait
xchg
int
jecxz
add
adc
insb
xor
pop
jbe
push
jnp
adc
mov
dec
sbb
jg
adc
sbb
or
test
push
popf
out
pop
ljmp
loopne
fldenv
and
inc
out
and
cs
gs
push
mov
shll
push
fldl
xlat
push
movsl
cmp
inc
shrl
jns
and
xchg
and
aas
repnz
or
jbe
mov
mov
dec
fmul
mov
jge
rolb
or
cmp
adc
movl
lret
mov
sbb
daa
ret
xchg
shlb
dec
imul
out
pop
jl
and
arpl
fucomip
add
jne
cmp
pop
sub
add
mov
jae
adc
push
inc
xlat
add
scas
push
mov
inc
arpl
js
subl
add
enter
shl
or
push
mov
or
xchg
add
and
shrl
fidivrl
cs
repz
rcl
cmp
jecxz
test
mov
mov
add
add
xchg
mov
cwtl
pop
xor
mov
cmc
cmc
sbb
xor
aad
pop
loopne
add
pop
cmc
testl
dec
or
lods
data16
imul
test
jp
sti
add
filds
movsl
das
and
lret
mov
loop
lret
adcl
sub
lea
add
xor
imul
sbb
mov
daa
fidivs
sub
inc
adc
mov
sub
stos
js
imul
push
xor
insb
pop
loope
adc
mov
inc
addr16
ja
mov
mov
in
cmp
mov
jp
and
jno
and
push
je
sbb
fld
sbb
loop
fcomip
fistpll
xor
lock
jnp
sub
mov
xchg
imul
and
outsb
mov
in
fucomip
xor
mov
test
xor
dec
and
ret
popf
rcl
add
lret
and
and
popf
outsl
stc
mov
xor
call
rorl
and
add
pop
dec
rcrl
stc
mov
inc
gs
push
imul
decl
dec
pusha
adc
sbbb
scas
push
lds
sbb
in
ja
sub
jno
cmp
cmpl
fistps
std
jnp
jo
adc
subb
lds
movsl
pop
add
or
popa
in
inc
in
frstor
lods
jno
ret
outsl
fadds
jbe
mov
xlat
ljmp
jmp
and
ss
insl
mov
jp
push
jge
adc
test
test
cltd
inc
pop
out
daa
cmpsb
jl
es
pusha
inc
add
mov
adc
push
jno
bound
and
xchg
mov
insl
pushf
pusha
insl
adc
dec
fwait
test
mov
lods
mov
shufps
test
movsb
int
mov
ja
inc
mov
mov
and
std
mov
mov
sbbb
add
stc
stos
ss
inc
ja
nop
dec
sub
jp
adc
xchg
add
xor
int
mov
ret
das
imul
jmp
fmull
das
data16
mov
adc
add
sbb
xor
mov
jg
sahf
sub
cmp
sbb
add
orl
or
ja
push
sbb
sbb
lds
fldenv
neg
add
add
mov
mov
in
cmc
pop
repz
popa
fadds
mov
fistps
lods
and
mov
sub
je
adc
adc
cli
jae
adcl
jmp
mov
xor
and
jmp
arpl
mov
fxch
outsb
lret
xlat
aaa
sbb
pop
mov
pop
nop
std
fisttps
add
arpl
addl
and
inc
ja
and
jo
ret
adc
push
add
test
sbb
adc
sub
xchg
int
or
xchg
mov
xor
and
in
ja
sbbl
push
dec
icebp
mov
mov
and
vxorps
das
mov
jmp
nop
push
popa
pop
in
fsubp
sbb
out
stos
mov
sub
mov
jne
shll
daa
push
xchg
inc
test
sub
mov
movsb
popa
xlat
sub
add
jnp
mov
add
xlat
cmp
fisttpll
js
sarb
inc
in
shl
jmp
inc
out
and
xor
sysret
jno
scas
adc
fiaddl
mov
jp
decl
gs
fnstsw
dec
outsl
pop
shrl
mov
out
mov
outsb
inc
ret
xor
mov
mov
xchg
inc
fmul
and
jno
test
pop
loopne
loope
fwait
sub
imul
jl
cmpsl
sbb
das
fstl
push
in
stos
in
mov
mov
add
pop
je
out
imul
mov
jle
mov
inc
and
ljmp
adc
gs
pop
mov
push
scas
add
mov
sbb
mov
xchg
jo
pop
sub
add
cmp
mov
nop
mov
inc
hlt
sbbb
cmp
popf
lcall
ja
or
mov
in
jbe
lahf
mov
fucomp
jg
subl
dec
sbb
jmp
and
popa
cmp
lea
push
inc
and
hlt
jae,pn
aaa
or
mov
and
testb
je
arpl
out
adc
mov
jb
pop
sbb
mov
mov
jae
testb
fnstcw
sbb
fmull
inc
and
sbb
rcll
out
adc
pusha
add
insb
cmc
sbb
add
cmp
lret
adc
fistpll
adc
ja
mov
mov
sub
mov
lcall
dec
jle
fadds
sub
add
add
movsb
mov
mov
dec
xor
fistpll
push
mov
add
fisubs
sbb
out
or
lcall
inc
fs
mov
or
stos
sub
lret
inc
jge
adc
imul
pusha
rcrl
les
jbe
pop
or
pop
jo
lds
jmp
cmc
lock
ret
or
int3
sub
cmp
sub
test
jl
adc
sub
cmp
fdivl
sub
in
sbb
lret
push
nop
loope
jo
pop
les
in
sbb
add
lret
pop
push
cmpb
mov
and
fs
and
int
lods
insl
dec
imul
stos
sbb
and
adc
aaa
out
jp
adcl
imul
rclb
xor
mov
adcb
test
add
cmp
sbb
aaa
inc
sbb
mov
aaa
jnp
loop
insb
stos
sub
sti
dec
fldl
jnp
iret
or
data16
ja
xchg
inc
out
xlat
or
outsl
and
jg
and
add
add
dec
fisubrl
mov
shl
jmp
lods
push
push
jne
insl
imul
pop
stos
imul
mov
mul
arpl
mov
cmp
jp
inc
mov
daa
push
inc
mov
inc
mov
popa
jp
add
cwtl
adc
jns
dec
jmp
inc
xor
xorl
sbb
lods
add
icebp
mov
and
in
scas
pushf
sti
icebp
outsb
ja
int
fisttps
out
jb
jge
sar
popf
push
sbb
pop
add
into
sbb
pop
fistps
and
add
les
push
js
xor
mov
aaa
adc
and
add
movsb
je
dec
sbb
sbb
icebp
xlat
jns
jne
movsl
pop
mov
clc
mov
pop
sbbb
mov
or
lock
loopne
or
fstps
push
pop
xchg
ja
mov
mov
mov
push
js
sub
jg
lahf
sub
out
push
or
leave
out
push
in
or
and
outsl
push
and
ja
mov
shll
cmpsl
dec
fisttpll
sub
cmp
sub
fidivrl
dec
inc
add
cmpl
sub
lods
pop
orb
inc
stos
leave
xchg
fldt
movl
jae
xchg
pop
inc
mov
jmp
loopne
cmc
sub
outsb
dec
add
mov
mov
cwtl
adc
das
jg
sub
mov
imul
pop
pop
and
test
cmpsl
inc
jno
xor
repz
push
sub
or
rorl
push
nop
daa
pop
sbb
lcall
jae
rol
shlb
icebp
xor
mov
jne
outsb
lods
mov
sbb
jmp
jno
jecxz
lahf
imul
stos
js
add
ljmp
aas
int
nop
mov
notl
adc
xchg
add
ja
adc
cmpsb
inc
ja
sub
sbb
sub
dec
push
cmovbe
in
or
mov
fcoml
movhps
xor
pop
xor
push
inc
sub
lods
or
jo
stos
aas
inc
sbb
mov
inc
xchg
dec
lods
add
sbb
mov
cld
sarl
loope
outsl
daa
in
dec
insb
js
pop
cmp
mov
insb
or
adc
mov
arpl
push
daa
test
daa
mov
movb
jl
pop
dec
lahf
cmp
and
sti
cmp
leave
adc
clc
sti
xchg
pop
test
push
mov
adc
and
dec
outsl
inc
or
push
ds
je
inc
ja
or
sti
cmp
jl
push
andl
xor
leave
jb
insl
and
dec
adc
lcall
push
xlat
sarl
add
sbb
pop
mov
out
dec
xor
aas
xchg
sbb
lahf
or
xchg
lods
add
imull
ja
inc
or
lods
inc
arpl
scas
mov
popa
jae
dec
idivl
push
xchg
xlat
sbb
inc
or
inc
dec
or
or
mov
or
popa
or
inc
pushf
adc
mov
sbb
popf
push
rcll
mov
dec
or
or
pop
test
jl
aaa
pop
add
jo
mov
or
push
mov
push
dec
mov
outsb
xor
or
repz
and
push
scas
and
or
push
repnz
mov
inc
push
or
sub
cmp
push
cltd
or
test
loope
iret
push
or
adc
dec
sub
ret
test
add
dec
icebp
or
dec
push
mov
adc
dec
aas
popa
mov
adc
repz
sub
jb
jno
inc
dec
inc
jge
sahf
fmull
dec
and
ret
add
imul
or
cmp
sbb
xchg
das
sbbl
mov
inc
add
stc
stos
and
popf
pop
mov
inc
or
pop
das
push
dec
or
add
or
popa
cmp
xor
out
xchg
std
rcll
aam
dec
and
cmc
lods
sti
xor
xor
jae
or
jns
neg
lret
pop
or
or
jne
or
sub
add
xchg
cmc
mov
imul
iret
popa
cmpsl
add
std
mov
sti
cmpsl
push
sub
adc
inc
lret
jbe
repnz
add
add
in
inc
and
jo
dec
adc
push
into
mov
andl
cmp
cmpl
outsl
int
dec
pop
lock
sub
stos
cmp
fcoms
adc
add
faddl
nop
jne
push
outsb
inc
daa
cs
mov
arpl
fs
dec
dec
inc
dec
inc
imul
inc
data16
out
ja
sub
xchg
xchg
jae
mov
orb
popf
xlat
out
jecxz
data16
dec
mov
jge
cmpsb
pushf
push
enter
cmpsb
add
data16
mov
insb
mov
idivb
jno
and
fs
mov
lods
xor
inc
dec
outsb
ret
jb
push
insl
jbe
xor
andb
imul
mov
push
dec
add
outsb
dec
dec
push
dec
inc
jbe
popf
ret
je
push
sbb
je
out
jge
push
inc
push
nop
dec
dec
push
push
cmpsb
dec
jle
push
fiadds
pop
push
outsl
and
int3
push
pop
push
jae
jo
mov
scas
adc
xchg
dec
mov
and
push
mov
addl
or
fdivrl
and
dec
dec
inc
imulb
dec
inc
push
mov
and
stos
fisttpl
lcall
mul
fucomp
and
xchg
dec
and
dec
pop
or
fldl
ljmp
test
push
inc
sbb
or
loope
push
pop
jnp
mov
or
loopne
inc
push
ss
dec
mov
add
mov
paddusw
pop
cmc
aad
rcl
test
pop
mov
fiadds
into
add
cmp
fdivrl
in
xor
je
push
push
lods
std
push
inc
dec
xor
daa
fistpll
roll
mov
fiadds
mov
push
dec
pxor
lds
gs
in
ja
push
out
sbb
inc
xor
xor
pop
xor
insl
pop
or
add
inc
inc
daa
bndldx
mov
sahf
dec
and
ror
push
insb
bound
sbb
loope
jnp
add
mov
add
mov
test
xor
sbb
jl
popa
dec
imul
sbb
dec
or
pushf
imul
rclb
add
ret
int3
pop
mov
inc
lcall
shlb
hlt
rcl
daa
jl
jbe
jle
inc
push
push
and
adc
dec
fdivrl
sub
adc
leave
inc
jle
adc
out
and
xchg
xchg
and
jne
pop
sub
push
add
sar
dec
popf
int3
mov
ret
bound
daa
mov
ret
pop
dec
pop
sar
cwtl
pop
lret
jecxz
je
sub
dec
cmp
sub
hlt
pop
sahf
jb
lret
js
xchg
add
mov
push
imul
push
pop
xchg
inc
lret
insb
xor
popf
jecxz
out
cmp
dec
push
pop
jno
loope
mov
push
push
mov
addr16
gs
add
fistpll
sub
pop
xchg
dec
adc
data16
inc
sub
data16
jmp
pop
adc
outsb
xor
out
dec
and
cld
out
xchg
and
enter
jp
pusha
dec
inc
or
push
and
sbb
cmp
mov
sahf
lea
fidivrs
jp
bound
rorb
sbb
lcall
lods
jge
add
call
cs
sub
pop
in
sub
inc
xchg
push
pop
xlat
mov
inc
inc
adc
inc
mov
or
push
inc
mov
mulb
addr16
jge
mov
push
mov
addr16
inc
shlb
adc
loopne
mov
aas
mov
add
into
out
mov
repz
inc
add
mov
dec
jbe
jmp
ja
push
outsb
addr16
ffreep
out
add
jp
jae
pop
data16
and
lock
add
repnz
subl
js
add
mov
cmc
cld
subb
sti
fs
add
data16
testb
xchg
jge
insl
sub
pusha
int3
into
inc
dec
out
arpl
int3
fistl
pusha
out
leave
out
jbe
repz
add
sub
add
pop
add
add
pusha
mov
mov
divl
iret
add
imul
and
outsb
or
mov
and
jno
test
sub
or
repz
add
add
clc
push
mov
push
or
add
dec
mov
sub
lsl
or
inc
sbb
pop
and
sti
es
rcr
sbb
icebp
jmp
fldl
mov
adc
fimull
pop
out
jmp
push
jbe
out
dec
arpl
mov
mov
mov
in
cmpsl
adc
add
inc
add
in
jmp
test
jo
add
add
sti
cmc
addr16
je
out
outsl
out
add
sbb
clc
add
jmp
into
scas
lock
inc
fimuls
test
adc
fdivs
xor
test
ss
and
fs
mov
jge
adc
mov
pop
push
std
mov
inc
cmp
shll
inc
jmp
sub
sbb
inc
mov
aas
cmp
popf
and
adc
xor
faddl
and
dec
imul
pop
sbbb
xor
and
xchg
in
je
sbb
and
outsb
push
push
adc
add
repz
xor
inc
cwtl
and
add
adc
xchg
stos
insl
repz
call
cmp
pop
adc
icebp
pop
xchg
adcb
or
mov
icebp
sbb
and
xchg
mov
in
push
push
inc
xor
mov
imul
testl
adc
in
or
or
cmp
jo
call
fadds
adc
std
adc
fstp
pop
push
jge
add
lock
mov
out
enter
and
jg
stos
ficomps
addr16
push
lods
add
adc
cmp
inc
shll
sub
adc
addl
cld
fdiv
mov
pop
inc
dec
inc
jnp
mov
clc
sub
and
sysret
mov
mov
cmp
xchg
addb
pusha
push
inc
sub
loop
adc
pop
jae
ret
in
test
jnp
adc
mov
imul
bound
xor
lret
mov
and
push
out
push
sub
in
fsts
adc
scas
test
cli
pop
add
gs
and
jne
and
cwtl
cltd
mov
sub
lcall
imul
cmp
or
dec
jmp
addl
mov
mov
mov
addl
stos
xor
mov
cmp
add
icebp
mov
rclb
dec
add
iret
shll
movsb
pop
or
stos
or
push
sbb
out
sub
test
pusha
jo
jg
adc
daa
int
lcall
pusha
or
out
push
pop
shl
cmp
adc
andl
fnstenv
jg
mov
inc
cwtl
ljmp
mov
outsb
xchg
shll
xchg
out
cltd
out
imul
inc
pop
cld
and
sbb
or
mov
sub
sbb
pusha
dec
cwtl
pop
pushf
add
add
sbb
fstl
icebp
incl
fucomi
cmp
in
loopne
mov
movsb
rclb
icebp
pusha
sub
imul
push
insb
pop
pop
repz
int
stc
or
sbb
mov
push
add
push
jnp
inc
xor
loopne
inc
jle
flds
xchg
push
xchg
sub
push
mov
mov
imul
adc
cmp
imul
daa
inc
inc
xchg
mov
mov
out
push
rcr
pop
clc
enter
add
js
idivl
add
jns
in
movl
xor
or
cmp
test
imulb
mov
cmp
aam
mov
insb
sbb
pop
lods
shlb
sti
jge
out
and
ja
arpl
mov
das
pop
push
lods
sbbb
jb
bound
jbe
xor
jns
aaa
fimull
pop
ja
push
in
sahf
push
lods
mov
jnp
jge
jb
inc
dec
test
fistl
inc
push
push
test
cmp
pop
adc
cld
jmp
add
mov
cwtl
or
mov
push
cltd
add
mov
insb
mov
or
enter
push
push
jmp
inc
lds
jecxz
jmp
paddq
cmp
push
jg
daa
sbb
mov
adc
mov
popa
int
jno
ret
sbb
xor
imul
jmp
mov
sbb
mov
rcrl
or
push
fiaddl
jg
loopne
cmp
xchg
mov
js
fnstenv
sarb
dec
push
push
pop
sbb
dec
inc
dec
icebp
add
mov
xor
sarb
inc
cmp
loope
and
lods
adc
sbb
jg
sbb
add
xor
pop
jo
fstl
je
imul
jno
aad
add
ss
push
push
adc
xchg
mov
mov
leave
shlb
and
pop
fimull
mov
and
add
xchg
jle
sbb
sub
push
push
shll
sbb
sbb
push
pop
and
pop
rcll
adc
std
outsb
std
and
cmp
and
je,pn
dec
pop
xorl
test
sub
jp
mov
ljmp
int3
mov
popa
cmp
xor
lods
rorb
push
outsb
aam
push
pop
add
shr
stc
ficompl
push
ret
insl
sarb
pop
daa
jbe
shr
pop
mov
or
add
dec
in
ljmp
or
jg
dec
icebp
sbb
lods
jle
xor
push
popa
lret
push
sub
dec
cmp
pop
xor
pop
bound
sbb
xchg
test
xor
xor
cmp
add
ret
frstor
inc
push
sub
mov
mov
js
mov
outsl
dec
push
push
js
cs
pop
push
les
dec
inc
sub
inc
or
mov
sub
test
lretw
push
out
inc
mov
dec
mov
adc
xchg
adc
adc
or
pop
xchg
push
mov
int
dec
imul
dec
push
lret
cmp
and
dec
fwait
sbb
add
iret
fldt
xchg
aad
stc
not
rolb
imul
adc
aam
push
pop
repnz
push
das
add
sbb
in
push
xchg
fucom
shll
inc
mov
cmpsl
push
arpl
out
jae
lds
cmp
mov
fs
push
add
push
jecxz
add
or
movsl
pop
imul
mov
add
push
sbb
je
cmp
cltd
and
inc
nop
outsb
push
data16
pop
popa
loop
jo
ret
cld
int3
inc
add
push
daa
in
je
rorl
mov
ss
mov
mov
nop
adc
mov
push
add
xor
out
inc
push
sbb
mov
xchg
ficompl
add
test
outsb
sbb
shll
sbb
nop
outsl
test
jbe
out
dec
cmp
jl
jno
js
pop
xor
push
pop
inc
ja
sbb
push
mov
cmpsb
pop
or
adc
add
testb
lock
and
inc
jnp
xor
sbb
repz
dec
mov
test
loope
pop
stos
mov
imul
mov
out
push
mov
xor
lcall
mov
loop
pop
es
enter
mov
xchg
cmp
out
jecxz
jmp
cs
mov
dec
fildl
xchg
test
mov
adc
test
inc
loope
sub
mov
pop
add
jne
sbb
lock
push
xchg
imul
out
and
cmpb
xor
lock
sbb
outsl
les
dec
cmp
outsb
pop
popa
dec
dec
dec
lret
jnp
push
lea
xchg
mov
aam
bound
xor
mov
fidivrs
lock
fldenv
mov
divb
pop
push
scas
add
sub
jns
or
cmp
test
cmpb
cmp
inc
jl
push
movsl
xor
mov
test
dec
int3
sub
lret
xchg
fstpt
dec
push
add
dec
and
in
mov
xchg
push
cmp
cmp
subb
dec
inc
mov
dec
shlb
rclb
or
push
mov
sti
or
fidivrl
pop
bound
cmpl
inc
js
adc
and
pop
popa
mov
sub
movsl
movsl
push
roll
aad
inc
or
jmp
mov
dec
fldt
inc
pop
inc
pop
adcb
adcb
lea
xor
and
push
adcl
dec
or
adc
inc
imul
and
sbb
mov
inc
or
addr16
xor
xor
sbb
movsb
fstpt
or
popf
pop
or
sbb
es
insb
sbb
add
jmp
jmp
or
mov
aad
or
mov
dec
daa
mov
dec
or
je
dec
call
or
filds
scas
or
mov
add
or
in
add
daa
mov
and
mov
pusha
and
adc
arpl
leave
adc
out
fwait
xchg
jo
pop
or
dec
fmull
adc
or
add
push
mov
subb
mov
push
pusha
xor
insl
xor
mov
xor
jae
dec
add
adc
or
sub
in
add
add
aam
scas
add
xchg
push
pop
outsb
push
push
add
jmp
mov
pop
cmp
sbb
push
movsb
lahf
cs
sub
dec
xor
dec
add
loopne
push
xchg
dec
or
or
and
clc
mov
xor
bound
filds
mov
mov
add
sub
xor
das
stc
fiaddl
xor
ss
add
aad
push
insb
xor
das
add
sbb
fmuls
adc
pop
adcl
add
mov
xor
add
out
add
add
sub
mov
fists
jno
mull
adc
mov
and
sahf
int3
lea
xchg
xor
outsb
rorl
adc
xchg
add
jo
inc
fs
add
adc
aad
call
adc
jo
sbb
sbbl
mov
xchg
or
rorb
arpl
xchg
sbb
mov
push
fildl
jecxz
das
pop
xor
inc
js
inc
movsl
dec
fiadds
cmp
fs
dec
push
mov
jo
inc
inc
jmp
jae
push
sbb
xor
add
cli
loope
dec
rcll
in
sbb
cmpsl
dec
shrl
mov
pop
adc
push
push
sbb
dec
shll
pop
adc
aam
test
adc
outsb
push
add
adc
add
or
in
or
adc
adc
jne
jecxz
pop
sub
adc
fiaddl
pop
adc
sbb
sbb
mov
stos
outsl
pop
movsb
fidivl
add
mov
mov
add
ljmp
inc
cmp
sarb
fiadds
outsb
sbb
clc
test
cmp
sub
inc
orb
mov
aad
ds
mov
jno
rorl
sbb
pop
adc
mov
or
push
sbb
addr16
inc
jae
add
sub
popf
nop
adc
stos
sub
jne
push
mov
add
js
dec
into
mov
push
adc
cmp
pop
imul
mov
add
aaa
dec
das
in
mov
scas
dec
adc
push
push
and
rorl
scas
jmp
pop
cmp
mov
jne
cmp
mov
mov
xchg
out
mov
cmp
aad
aaa
lods
lahf
cmp
into
dec
jae
das
into
aas
jecxz
aam
fistpl
ljmp
mov
and
cmovle
mov
test
aas
and
pop
xchg
add
jae
rorl
mov
mov
insl
cmp
push
nop
cmc
fisttps
add
add
test
and
sub
pusha
stos
dec
in
add
das
or
aas
jnp
or
das
and
testb
addr16
andl
lea
loope
pop
dec
and
cmp
adc
add
orl
and
fiaddl
repz
in
jl
daa
adc
mov
cmp
dec
cmp
pop
sarb
outsl
push
adc
xlat
push
cmc
push
add
cmp
in
push
xchg
mov
ds
lea
mov
add
xchg
pushf
dec
push
inc
xchg
mov
jmp
xchg
aaa
cwtl
fiaddl
lcall
mov
push
testb
bound
push
and
push
jb
lods
xchg
insl
divb
inc
mov
dec
movq
mov
aaa
pop
pop
pusha
addr16
dec
mov
addr16
outsb
pop
jbe
jge
and
mov
in
push
xchg
mov
stos
pop
pushf
daa
mov
pop
leave
add
mov
nop
mov
stc
aas
ds
repz
sbb
dec
push
push
fs
and
xor
insb
lret
dec
and
or
pushf
inc
jnp
sbbb
fs
adc
or
pop
push
cmpsl
fadds
addb
outsl
jb
push
mov
jge
mov
sub
inc
adc
aas
inc
push
in
fdivs
jae
jb
gs
add
outsb
inc
pop
push
add
mov
jb
je
arpl
rcrb
pop
mov
inc
js
pop
mov
push
add
int
jg
mov
dec
jne
bound
dec
dec
or
outsb
jae
hlt
dec
outsl
jne
gs
sar
testl
dec
outsb
outsw
push
pop
push
mov
in
out
imul
xchg
outsb
je
fcomp
movntq
es
xchg
imul
sbb
xor
flds
push
jns
gs
mov
divb
sbb
into
fs
imul
addl
lahf
push
outsl
inc
imul
pop
dec
popa
outsb
mov
push
pop
cmp
xchg
insb
gs
pop
inc
int3
dec
pop
sarl
sub
rolb
mov
sub
addr16
jne
jns
push
xchg
push
icebp
fldcw
add
push
xchg
jb
adc
jne
inc
jb
rcrl
inc
adc
ja
mov
sub
xor
jne
je
loopne
adc
push
jp
arpl
inc
imul
or
les
insl
fs
fmul
jnp
and
push
jae
popl
or
adc
mov
outsb
fs
xchg
mov
jae
sub
dec
js
fnstsw
gs
outsl
ja
xor
je
das
pop
mov
sub
push
aad
inc
scas
adc
outsl
jb
push
mov
lea
sub
data16
je
mov
jae
inc
insl
jo
jns
in
loope
sbb
xor
insl
jae
out
cmp
xor
dec
push
addr16
inc
fcmovne
adc
sub
and
dec
ss
push
loopne
inc
cs
pop
lret
jbe
mov
mov
pop
push
inc
jmp
orl
hlt
divl
fsubs
mov
sbb
test
jo
inc
scas
mov
xchg
sbb
in
inc
inc
insl
push
outsl
adc
int
ja
repnz
jae
jb
inc
es
push
add
jg
cmp
jp
add
push
dec
add
add
pop
inc
cld
pop
sbb
add
sbb
pop
mov
daa
insb
data16
push
jo
inc
pop
fcmovnu
mov
add
push
push
sbb
fdivl
jnp
imul
js
mov
loopne
insb
popl
stc
test
dec
add
and
or
inc
fcompl
pop
inc
add
pop
stc
and
pusha
inc
inc
push
inc
pushf
xor
aaa
adc
pop
in
inc
rolb
or
xchg
and
mov
xchg
add
and
popa
add
rorb
add
cmp
dec
add
stos
jae
jbe
pushf
loope
test
sarb
push
add
add
inc
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
