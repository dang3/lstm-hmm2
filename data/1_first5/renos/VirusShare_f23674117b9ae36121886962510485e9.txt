cmp
imul
inc
add
mov
mov
lods
test
cmp
cmp
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
loopne
dec
dec
dec
dec
hlt
lock
call
in
dec
dec
dec
dec
aam
int3
pop
loope
daa
daa
and
push
dec
daa
daa
daa
daa
dec
inc
fs
daa
daa
daa
insb
clc
hlt
lock
daa
daa
daa
in
call
daa
daa
aam
daa
daa
daa
daa
int3
enter
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwtl
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
push
mov
add
mov
mov
cmpsb
mov
add
push
call
clc
clc
pop
pop
pop
ret
aas
outsl
mov
push
inc
mov
mov
cmpl
aas
div
add
test
add
add
test
jb
jge
inc
mov
xor
add
rorb
cmp
or
mov
pop
repnz
mov
and
xor
mov
out
ret
dec
cld
mov
and
xor
jle
pop
aas
lock
movsb
outsb
icebp
add
dec
hlt
mov
js
clc
cld
lock
sub
add
xor
decb
jne
or
xor
mov
mov
push
int
jmp
add
add
cld
xlat
std
sbbl
add
fldcw
fs
lock
lea
lea
loopne
jo
sbb
dec
sti
pop
cmpb
jne
mov
adc
decl
push
incl
decl
dec
and
lea
mov
and
cmp
xchg
stos
lea
mov
xchg
jg
lea
dec
inc
inc
mov
and
dec
lea
inc
lea
inc
and
mov
push
and
mov
push
hlt
xchg
out
push
in
mov
mov
ret
mov
je
jg
xchg
or
adc
add
dec
mov
fisubrl
inc
add
xor
or
mov
out
cwtl
mov
mov
inc
dec
mov
cmp
jnp
dec
inc
dec
cmp
js
inc
dec
fists
or
flds
aaa
out
hlt
dec
ret
dec
mov
cld
fstpt
outsb
mov
sbb
dec
xchg
or
lea
or
add
pop
je
jmp
sarb
fldt
or
and
push
cmp
call
in
xorl
idivl
xchg
adc
push
dec
inc
bound
fldt
dec
out
les
inc
mov
jecxz
inc
cmp
jbe
std
out
iret
adc
dec
dec
mov
in
dec
lods
mov
sub
es
pop
inc
jns
lock
data16
das
clc
jne
jo
mov
sbb
or
xorl
clc
mov
fistl
outsl
andb
jbe
scas
push
test
jl
jle
inc
xchg
xchg
movsl
mov
xchg
mov
inc
loop
mov
pushf
adcl
ja
pop
cmp
jno
inc
push
mov
roll
fs
cmpsl
ret
fistpl
movsb
add
inc
cmp
jbe
dec
mov
mov
dec
test
in
or
movsl
mov
cltd
dec
in
mov
xchg
nop
jo
sti
pop
lock
cmp
xchg
inc
mov
rclb
mov
call
fmuls
lea
fadds
sbb
fidivs
imulb
jl
dec
popa
cmpsl
or
inc
inc
out
mov
scas
clc
xchg
inc
inc
cmp
enter
fcomip
sub
and
stos
decl
lods
ds
mov
jg
loopne
nop
lahf
push
fisttpl
mov
call
pop
adc
pop
xchg
mov
jge
das
inc
dec
daa
inc
jp
inc
pop
push
mov
xchg
sbb
adc
mov
cmp
cmp
jg
jns
inc
push
jns
aam
mov
cmpsl
push
call
push
add
cmp
jnp
sar
adc
dec
mov
mov
push
andb
popa
or
sbb
hlt
and
inc
ds
add
lea
bound
cld
lcall
mov
dec
mov
inc
mov
pop
idiv
lds
repz
jl
xchg
clc
outsl
clc
mov
pop
outsb
xchg
add
jnp
mov
pop
pop
icebp
jg
in
stos
add
and
mov
subl
int3
out
mov
test
ror
rolb
or
nop
pop
pop
shl
inc
fmulp
xor
cmp
add
or
es
rol
aam
inc
dec
mov
cmp
clc
jbe
dec
dec
add
and
dec
mov
push
or
gs
icebp
add
bound
jmp
inc
lret
xchg
aas
in
mov
inc
dec
dec
cs
xlat
dec
addl
clc
imul
in
popa
cmpsb
inc
mov
sarb
fs
cmp
sbb
les
fidivl
mov
imul
xchg
cld
stc
loopne
aad
adcb
cmp
jg
shlb
negb
es
adc
jne
jg
cwtl
adc
xor
dec
dec
dec
sbb
jg
sbb
pop
inc
cli
jg
insl
je
rorb
in
mov
mov
dec
mov
ret
xchg
mov
inc
bound
inc
or
dec
cmc
xorb
movsb
sbb
mov
mov
int
enter
mov
imul
insb
sarb
cli
mov
mov
loopne
jns
mov
lods
sbb
jns
not
test
push
lods
mov
mov
mov
std
lock
adc
mov
pushf
mov
push
shlb
xor
in
jns
mov
or
mov
test
vmread
aas
mov
cli
add
test
sub
adc
or
shl
sub
je
dec
fs
cmp
mov
jo
mov
push
cmovg
or
sbb
lret
fdivr
mov
xor
jns
cmpb
mov
add
jge
mov
push
mov
pop
xor
or
or
fs
jle
mov
push
push
sub
int3
out
push
in
or
cs
xor
dec
jae
lcall
inc
repnz
sahf
lret
sub
cmp
mov
mov
xor
sub
data16
and
mov
or
sub
and
inc
dec
dec
test
inc
and
movb
mov
aas
sbb
push
clc
cmpsb
xor
xor
xor
xor
mov
cmp
xor
add
add
push
fmulp
out
mov
add
cmp
xor
xor
xor
mov
iret
daa
xor
xor
xor
xor
cmp
xor
cmp
jnp
xor
xor
cmp
cmp
ss
pop
xor
pushf
adc
cmp
sbb
mov
insl
data16
sub
xor
xor
pop
ss
std
out
imul
cmp
add
jb
sbb
xor
addr16
adc
xchg
out
fstps
sub
sub
xchg
xor
idivb
pusha
cmp
decb
mov
xchg
in
or
nop
pop
adc
sbb
loopne
adc
xchg
push
or
jp
xor
mov
fadds
leave
pop
xchg
fdivr
je
loope
xor
or
aam
push
xchg
out
lcall
jae
adc
xchg
xchg
jbe
mov
enter
xchg
int3
xchg
test
in
inc
les
cmp
dec
cmpsl
mov
adcb
sub
test
adc
stos
mov
adc
insb
jns
adc
js
jmp
cwtl
aad
sub
in
push
ljmp
adc
fisubrs
inc
jne
les
mov
mov
shrl
add
inc
cltd
dec
mov
push
test
or
adc
lods
push
out
or
mov
movsb
push
movsb
push
and
add
dec
xchg
bnd
stos
cwtl
mov
aam
and
fs
push
cmpsl
sub
xchg
pop
sahf
nop
xchg
insb
mov
pushl
add
data16
mov
add
mov
bound
cmc
lea
pop
out
cmp
mov
jg
cwtl
outsl
cmp
adc
insb
arpl
bound
adc
arpl
add
or
pop
mov
pusha
leave
xor
fs
adc
subb
mov
std
push
lret
inc
les
jl
les
enter
in
jecxz
xor
stos
inc
sbb
push
inc
xchg
cmp
xor
lcall
add
add
test
push
daa
xor
jb
mov
adc
mov
cs
cmc
mov
sub
fsubl
jb
data16
sub
and
and
push
in
repnz
sbb
push
sbb
dec
and
lret
sbb
outsb
jo
cmpsb
sub
push
movsl
pop
scas
sbb
cs
push
test
call
lea
add
pop
adc
call
xor
inc
push
mov
jb
add
sbb
push
mov
mov
push
push
popa
mov
pusha
xchg
test
loopne
addb
cmp
lcall
std
outsl
add
xorl
xor
aaa
xor
xor
mov
fists
xor
xor
xor
add
popf
add
xor
sahf
out
fnsave
push
xor
adcl
divl
mov
es
add
xor
mov
add
test
xor
cmp
push
add
mov
ret
add
sub
ds
xchg
mov
inc
and
hlt
cmp
and
add
popf
shrl
xor
xchg
test
jo
or
sub
bound
and
lds
mov
test
mov
int3
xlat
mov
rorl
xor
inc
sub
push
xchg
dec
mov
push
sub
add
adc
fisttpll
mov
rorl
test
imul
pushw
mov
or
movsb
stos
xchg
pop
loope
or
test
je
mov
sets
jne
nop
pop
cmp
insb
aam
pop
jbe
cltd
mov
nop
outsb
mov
xchg
add
adc
movsl
imul
jbe
pushl
nop
dec
or
addb
fs
pop
adc
and
xchg
js
sub
and
aas
jno
dec
push
add
dec
cs
mov
cwtl
cmp
sarb
pop
or
xor
inc
sub
xchg
mov
mov
pushf
dec
in
inc
inc
mov
lock
add
dec
fwait
repnz
inc
xchg
arpl
and
or
shrl
sub
add
dec
repnz
sti
and
sub
mov
test
rcll
and
repz
adc
ds
mov
sahf
adc
adc
push
test
enter
enter
fistl
in
dec
or
int
dec
out
add
mov
test
aad
movsl
dec
in
test
mov
fiadds
pushf
hlt
push
mov
and
test
add
push
jns
cmp
lock
adc
movsl
mov
pop
jo
ret
dec
add
repnz
loopne
sbb
aas
add
out
inc
inc
lods
and
add
data16
les
and
test
insb
add
jge
xchg
pusha
mov
mov
fstpt
sbb
jns
xorl
push
fsubp
jmp
cmp
pusha
loopne
jno
movsb
mov
xor
data16
mov
lods
sbb
add
inc
repnz
ret
fisubrs
add
add
loop
outsl
ret
cmp
xor
aaa
add
add
xor
xor
xor
mov
inc
xor
pop
xor
add
xchg
add
add
xor
clc
xor
xor
test
or
int3
mov
mov
and
or
out
aaa
dec
xor
xor
xor
aaa
js
sarl
xor
xor
loopne
fwait
shrl
cmp
xor
mov
hlt
sub
cmp
mov
ljmp
sub
cmpsb
movsl
pop
pop
mov
pop
jp
add
jb
bnd
add
inc
pop
sti
add
jb
sti
outsb
call
stc
dec
cld
jae
add
movsb
movsb
test
daa
je
pcmpeqb
mov
bound
psrld
pop
sti
idivb
mov
sub
cli
rclb
pushf
and
jp
repz
ljmp
mov
sub
cmpb
mov
sbb
gs
lcall
popf
jb
popf
loopne
or
call
fcomi
idiv
jmp
div
dec
sub
cmp
pop
cld
jmp
pop
stc
push
outsb
push
mov
daa
nop
jo,pt
pop
ss
mov
adc
add
xor
push
jb
test
fcos
fwait
pusha
cmpsb
or
or
jl
add
stc
in
ja
idiv
sbb
fmuls
mov
std
jp
adc
out
fistl
enter
jnp
adc
sub
adc
pop
stc
fmul
pop
call
in
stc
adc
and
adc
jo
psadbw
jb
outsl
fisttps
aaa
dec
push
pop
repz
inc
stos
xchg
sti
xchg
test
sti
mov
push
jl
in
xchg
push
and
std
mov
bts
ret
adc
xchg
lods
xchg
mov
dec
inc
cmp
cmp
js
inc
mov
repz
scas
div
adcb
mov
add
iret
mov
xor
inc
fistl
adc
push
lret
insl
fists
jne
in
jge
xor
nop
mov
push
push
jg
pop
pop
out
dec
mov
in
mov
pop
fisubrl
aas
clc
stc
mov
pop
adc
lahf
jb
mov
mov
and
pop
in
cmp
mov
cmp
adc
or
aaa
adc
sahf
jnp
aaa
jp
inc
ss
sti
imul
insb
sti
pop
xor
sbb
in
push
addr16
push
jo
jp
jo
imul
adc
lds
cli
in
out
jbe
arpl
in
cltd
lcall
je
xor
scas
xor
aaa
arpl
push
aas
stc
inc
loopne
ret
xchg
bound
push
insl
or
jp
into
pushf
testl
jno
std
mov
mov
mov
hlt
sub
jnp
jbe
dec
inc
jb
cmp
adc
fsubrs
repz
pop
mov
dec
nop
dec
cmp
aas
add
icebp
mov
dec
add
sbb
jecxz
inc
test
mov
fistpl
adc
mov
mov
jp
testl
sub
lahf
mov
repz
je
test
sbb
adc
outsb
cld
xor
lock
lea
pop
incl
dec
outsl
hlt
xor
divl
test
jne
in
dec
mov
daa
inc
imull
push
dec
arpl
hlt
push
rorb
int3
ljmp
out
push
cmp
inc
push
call
movzwl
mov
test
add
in
fucomi
test
lock
mov
inc
ret
jg
adc
sbb
mov
add
cmp
jbe
std
xchg
jmp
jl
or
je
enter
pop
or
xchg
or
fs
or
push
push
push
cmp
jle
cs
push
adc
cmp
jae
iret
inc
aam
out
xor
adc
sbb
inc
cld
ss
decl
jne
loope
xchg
add
clc
push
adcl
add
and
cld
aas
popa
add
je
jb
arpl
fs
jae
add
je
std
pusha
lea
pop
pop
inc
movsb
mov
fsubrl
dec
imul
outsl
mov
outsb
push
push
insb
outsl
jae
dec
popa
outsb
fs
add
popa
imul
addr16
bound
arpl
insl
popa
jo
imul
dec
inc
imul
insb
inc
insb
outsb
arpl
pushl
outsl
jbe
dec
gs
jo
inc
bound
lahf
movsb
pop
sub
sbb
pop
shlb
inc
fcoml
fimull
sub
sub
pop
inc
fsubrs
push
push
imul
push
subl
dec
mov
sub
je
pop
push
inc
push
sti
push
idivl
add
hlt
bound
lcall
cmp
push
mov
cmpl
and
or
adc
mov
push
faddl
and
and
mov
cmp
lods
mov
shrb
das
pop
out
fdivs
mov
rorl
xor
sub
outsl
inc
js
sbb
mov
sub
xor
rclb
enter
ret
scas
adcb
push
repnz
rclb
fdivrs
pop
rol
daa
add
cmpsl
push
push
stc
aaa
cmpb
push
or
add
sub
pushf
mov
mov
cmpsb
inc
cmp
or
sub
xchg
push
mov
add
add
lods
iret
inc
insb
sub
inc
cld
pusha
cwtl
pop
mov
js
loop
add
out
sahf
lret
inc
and
and
adc
xor
out
cmp
mov
nop
movb
push
mov
jecxz
jl
mov
dec
add
in
insl
sbb
add
stos
cmp
xor
and
mov
push
cmpsb
lods
fcomi
popa
push
cld
adc
mov
xchg
jbe
cwtl
shl
call
stos
popf
out
call
push
sbb
shll
add
sbb
sbb
rclb
das
jmp
lcall
jo
push
sti
adc
jb
jmp
ja
adc
sarb
push
cmp
jne
clc
gs
push
popa
jno
push
pop
push
les
jne
les
lea
inc
arpl
test
int3
cs
ljmp
cmpl
or
mov
jmp
ljmp
add
jbe
add
add
add
hlt
shll
sbb
xor
add
sub
jo
je
popa
inc
pop
inc
jo
je
mov
inc
imul
insb
je
jns
outsl
jb
data16
jno
dec
mov
add
cs
insb
pop
movb
cmp
mov
fwait
cs
sbb
add
jnp
leave
cmpsb
jne
inc
add
adc
adc
jge
push
ror
xchg
lahf
shlb
enter
mov
push
hlt
add
add
test
add
cli
push
clc
or
subl
add
fcompl
movd
loope
imul
push
fs
test
lods
aam
xchg
add
push
adc
xchg
add
push
mov
pop
js
or
dec
jne
mov
ret
test
jmp
push
xor
ret
into
je
mov
dec
icebp
push
or
clc
cld
rolb
std
inc
pop
fxch
add
dec
or
dec
mov
push
aam
inc
mov
adc
js
hlt
pusha
sbb
or
mov
data16
sbb
clc
cmc
add
hlt
fdivrs
xor
and
addb
cmpsb
test
add
nop
ds
bound
add
and
fcomps
push
xor
adc
xor
std
add
and
add
movsl
jmp
jg
out
int3
cmpw
ja
xor
div
cmp
and
lds
dec
push
dec
inc
cld
pop
pop
inc
mov
xchg
clc
sbb
pusha
add
cmp
rcrl
insl
sbb
or
lea
clc
pop
push
rclb
mov
and
xor
add
mov
mov
outsl
sbb
add
lret
and
mov
pop
std
push
shr
cmp
je
mov
addl
ret
cmp
jle
int
jne
add
movb
cli
inc
adc
cmp
fsubr
cwtl
addr16
inc
fchs
adc
pop
mov
lds
shll
call
loop
xor
decb
negl
or
push
cmp
adc
test
push
add
andps
adc
add
dec
push
add
add
movsl
sti
or
dec
and
adc
cmp
add
jns
dec
inc
push
icebp
inc
dec
incl
add
dec
pop
xchg
add
add
and
cmp
cmp
and
sub
sub
es
outsl
adc
and
sub
imul
add
and
sbb
ds
das
add
add
add
outsl
cmp
dec
leave
add
and
je
add
inc
add
test
out
imul
adc
and
test
sbb
jg
fistpl
and
pop
add
sbb
pop
adc
xchg
ja
pusha
sbb
sbb
or
stos
fimull
adc
shrb
jne
out
sarl
sbb
fistpll
lret
jo
fimull
and
or
pop
pop
andl
push
or
lcall
xchg
add
inc
sub
mov
dec
xor
xchg
dec
adc
imul
outsb
dec
arpl
and
fwait
gs
dec
rcll
xchg
or
and
dec
adc
fbstp
or
or
add
dec
and
jmp
daa
add
mov
cmp
addl
imul
adc
adc
aas
jl
or
cmp
and
dec
in
cmp
or
data16
das
sub
fidivrl
xor
jbe
sbb
in
fidivrl
das
sarb
shll
mov
iret
aas
jnp
lea
mov
inc
pop
jnp
ret
add
push
xchg
mov
rorl
xor
mov
or
push
lods
lods
loope
jns
push
pop
or
aaa
mov
adc
ret
popa
cmp
mov
xorb
add
adc
sub
xchg
insl
mov
mov
add
bound
sub
add
adc
lds
mov
mov
pop
mov
rorl
add
jmp
or
jbe
aaa
js
call
sbb
call
push
cmc
mov
add
push
dec
push
xchg
sbb
add
sbb
nop
inc
lods
mov
sti
sub
xchg
mov
rolb
call
or
inc
fs
out
js
and
xor
mov
or
xchg
adc
dec
push
inc
add
add
sbb
fiadds
adc
ret
fidivl
xchg
and
jecxz
stos
jbe
ja
int3
fimuls
sti
add
or
in
es
cltd
popf
or
mov
mov
mov
es
out
notb
fwait
mov
xchg
xchg
and
sti
sbb
inc
mov
inc
inc
dec
jne
mov
andl
sti
jge
mov
mov
inc
cli
pop
add
inc
sub
js
frstor
adc
push
jns
pop
mov
imul
jnp
mov
and
add
and
jnp
jb
sub
add
pop
insl
pop
ja
and
xchg
dec
pop
sti
sbb
addr16
pop
insl
inc
adc
das
dec
or
shr
xchg
sbbl
mov
pop
xchg
jle
fiadds
clc
mov
sub
jnp
call
negb
jmp
cmp
data16
xchg
or
mov
aas
pushl
add
lahf
repnz
mov
or
neg
mov
cmp
outsl
and
les
mov
fucomp
ja
cmovle
pop
insl
cmp
cmpsl
pop
mov
imulb
mov
sbb
sub
lret
add
mov
mov
aaa
ret
scas
jo
xor
lret
push
and
pop
xchg
push
cmp
add
xor
fildl
aad
push
sub
in
ror
mov
pop
fdivl
inc
mov
jecxz
mov
fst
jbe
jbe
popf
fstpt
negb
jne
cmpl
or
fstp
xlat
add
cs
inc
stos
test
xorl
inc
xchg
out
scas
or
gs
sbb
repz
fmull
mov
lret
aam
push
pop
in
sbb
cmp
push
daa
and
data16
and
jns
inc
pop
daa
arpl
cmp
in
xlat
je
dec
fwait
loop
dec
xchg
push
add
pop
ret
rcll
jmp
cmp
or
pop
mov
ud0
dec
neg
jnp
fldl
or
lahf
xchg
scas
scas
lock
cmp
cmpsl
cmp
xorb
aas
fdivl
imul
adc
pop
jae
xorl
adc
sbb
or
into
cs
sbb
fmull
outsl
sub
pop
out
jmp
add
std
fidivs
sub
pop
addr16
js
sbb
mov
fbstp
iret
xor
jae
imul
sti
fmulp
inc
data16
ffreep
sbb
or
repz
jbe
pop
inc
fwait
add
out
cmp
outsl
jo
sbb
sti
inc
pop
popa
repz
jno
push
jo
mov
adc
adc
fcompl
scas
and
or
sbb
mov
xchg
add
and
add
fwait
rolb
mov
adc
xor
test
jp
jl
xor
inc
dec
roll
sbb
rcl
out
lret
repz
mov
inc
jmp
je
icebp
mov
imul
ja
xor
je
jmp
inc
or
iret
dec
push
or
in
sbb
inc
xlat
daa
out
xchg
out
insl
fistps
push
lea
dec
pushl
dec
adc
divl
push
loopne
jmp
lds
mov
fwait
scas
sub
bound
or
flds
loop
call
push
xlat
cmp
rcrl
sarl
xadd
jae
jb
jg
test
mov
lock
int3
data16
dec
or
cmp
xor
push
stos
sbb
push
insb
sbb
sub
in
jmp
shrb
out
cwtl
and
xchg
outsl
imul
and
add
adc
and
mov
cmpsl
sbb
add
enter
xlat
stc
inc
jbe
psrlw
mov
and
jl
sub
insb
add
push
jbe
insl
ljmp
push
subl
fstps
jle
mov
dec
stos
xchg
cmpsl
fstpt
dec
mov
mov
cmp
jns
sbb
les
dec
and
sbb
dec
mov
sbb
aas
rcr
aaa
adc
rcr
scas
iret
inc
fs
test
out
mov
sbb
call
outsb
nop
mov
mull
lahf
adc
xchg
scas
adc
mov
aaa
mov
das
mov
shlb
dec
adc
pop
inc
rolb
add
push
ljmp
lret
out
dec
and
mov
pop
sub
idivl
rcrb
inc
sbb
clc
jnp,pt
inc
ss
imul
sti
cmp
xchg
arpl
int3
sub
test
pop
xchg
and
nop
xlat
pop
mov
sbb
outsb
dec
test
in
scas
mov
das
sbb
jne
inc
iret
mov
push
pop
mov
mov
gs
loope
sbb
add
pop
push
bound
scas
jmp
dec
int3
and
not
out
hlt
add
push
inc
push
gs
jp
mov
add
add
dec
dec
addr16
lret
mov
in
lcall
fnstcw
jae
addr16
add
jl
sub
sub
js
xor
nop
mov
arpl
mov
mov
sub
xchg
add
insl
jg
or
aam
movsl
rol
mov
in
stos
sub
add
pop
imul
movsb
std
mov
mov
outsb
gs
rolb
push
into
or
fistpl
push
test
push
mov
inc
dec
es
cmp
dec
sbb
jnp
arpl
sbb
xlat
mov
fcmovbe
push
or
add
outsl
adc
in
adc
push
push
sbb
cmpsb
mov
mov
bnd
add
fiadds
xor
push
int
add
mov
mull
mov
cltd
dec
and
repnz
pop
mov
push
and
fsubs
cmp
adc
cmp
and
ljmp
das
fisubrl
enter
xor
mov
mov
sub
xor
push
pop
push
push
pushf
ret
or
cmp
js
dec
push
ret
add
ja
push
ljmp
sahf
enter
mov
inc
mov
loop
lret
jne
cmpsb
mov
test
packuswb
stos
cs
mov
in
popf
pop
dec
adc
pop
add
pusha
mov
or
fisubrl
loop,pt
lcall
rcr
popf
into
pop
or
fistps
mov
cmp
mov
test
lret
push
add
roll
repnz
adc
adc
mov
push
sub
insb
add
outsl
and
and
flds
lret
je
adc
adc
scas
pop
add
push
mov
mov
mov
inc
xchg
mov
xchg
inc
cmpsb
rorl
or
mov
pop
mov
jns
push
movsb
adc
jle,pn
jle
or
les
add
pop
hlt
into
or
test
dec
movsb
mov
ja
pop
mov
add
adc
sub
push
jnp
dec
lods
sbb
add
inc
mov
xchg
cmpsb
cmp
hlt
hlt
das
shlb
sti
imul
add
lcall
cld
outsl
add
std
xchg
xor
inc
push
push
mov
js
outsb
andl
mov
bound
pop
push
pop
pusha
push
add
mov
into
leave
push
mov
dec
push
cmpsl
out
stos
adc
push
add
cmp
mov
mov
cli
hlt
in
ja
rdmsr
mov
mov
mov
add
mov
mov
mov
cmp
mov
cmpsb
jp
js
ds
dec
lahf
push
ss
ja
add
ret
sbb
lcall
lds
ror
push
stos
repnz
mov
popf
stos
push
jns
pop
adc
cmpb
or
jns
dec
mov
leave
add
subl
or
push
mov
push
orb
pop
repz
test
jo
imul
insl
add
shl
adc
out
js
lea
push
jnp
push
push
jl
je
movsl
adc
sub
mov
imul
sbb
scas
sahf
sbb
into
lret
je
mov
sbb
inc
add
pop
cmp
data16
ret
inc
add
cwtl
fwait
into
sub
mov
inc
jne
movsb
test
mov
pop
pop
int3
fstps
mov
pop
cmp
add
test
mov
fs
int3
pop
push
fwait
das
adc
jmp
inc
bound
sub
outsl
lcall
arpl
imul
ss
testb
mov
loopne
adcb
sub
jb
loop
sahf
outsb
cmpsl
sub
sbb
test
iret
add
into
push
fs
push
push
xchg
sub
ja
mov
xorl
jbe
lcall
push
mov
adc
xchg
sarb
pop
aas
xchg
inc
addr16
je
call
sbb
idivl
nop
adc
pop
add
nop
sbb
ret
xor
xor
add
pop
inc
adc
sub
xor
negl
inc
lds
fmul
lret
adc
lret
in
jnp
or
jnp
pop
jp
jne
sub
in
into
jns
daa
inc
js
jg
out
jnp
inc
pop
fidivrl
inc
cmp
lock
sbb
jae
clc
fcompl
dec
push
jno
jle
add
and
enter
mov
fnsave
pop
outsl
jne
pop
dec
jg
loope
xor
fidivrs
adc
mov
lcall
inc
jae
sbb
lret
rcrl
sbb
hlt
sbb
sbb
iret
jmp
insl
sub
push
lret
call
test
pop
aas
sub
and
enter
add
and
add
inc
mov
cmp
xor
mov
jecxz
ret
stos
adc
lods
popf
add
mov
add
clc
push
icebp
sbb
pop
cmp
pop
pop
mov
xchg
test
cmp
cli
imulb
aad
inc
push
add
jae
mov
sub
push
test
dec
fisttpll
sbb
sbbl
stc
ds
ficompl
mov
ror
push
mov
popa
jl
cmp
jb
insl
bound
mov
adc
pop
cmp
xlat
jl
sbb
insb
sti
push
dec
gs
inc
cmp
or
cmp
add
je
pop
pop
adc
lret
inc
xchg
into
add
push
scas
sbb
sbb
insl
leave
sbb
jmp
push
int3
pop
sbb
pop
mov
add
sbb
js
sbb
push
adc
out
jnp
jns
adc
pusha
in
insl
notb
pop
in
pushw
imul
lret
pusha
adc
leave
hlt
cmp
jge
push
sub
filds
das
pop
or
cld
add
add
shrd
mov
add
gs
enter
xchg
jge
and
xchg
std
cmp
movsl
add
push
lcall
add
loope
mov
ret
xor
sbb
adc
outsl
mov
xor
pop
pop
insb
cmp
ret
call
add
insl
cmp
xor
dec
jp
dec
adcl
push
inc
pop
fidivrs
es
jno
daa
sub
stos
mov
xchg
out
add
shl
test
or
mov
or
mov
scas
scas
mov
loop
mov
add
push
mov
xchg
xorl
cld
pushf
divb
mov
mov
dec
call
cmpsb
and
jle
xchg
ret
roll
in
pop
mov
fnstsw
adcl
mov
pop
cmp
das
add
js
cwtl
jg
adc
mov
jno
pusha
cltd
aam
js
std
adc
jb
and
inc
mov
movsb
xor
xor
push
test
mov
xchg
jb
inc
data16
adc
loope
and
sub
mov
add
outsb
sub
imul
lcall
push
sbb
add
adc
mov
mov
insb
mov
rcll
icebp
adc
aaa
lret
jo
lcall
stos
push
rclb
add
cmpsb
and
inc
fisttps
dec
arpl
xor
push
cmp
xlat
or
cltd
jge
outsb
cs
ds
call
lock
aas
lods
cmpsb
repz
dec
inc
mov
test
sub
arpl
pop
jo
dec
cmp
mov
mov
mov
rcrb
add
add
jge
stos
cmp
out
int
mov
adc
xchg
add
out
loop
loope
mov
and
mov
mov
jns
pop
push
fisubl
mov
jb
jno
jge
push
mov
dec
rorl
or
in
and
jnp
sahf
add
dec
jne
adc
call
add
cmp
fnsave
cmpsl
int
not
addr16
pop
jo
push
enter
dec
adc
adc
mov
or
mov
repnz
adc
xchg
sub
jb
pop
sbb
mov
mov
mov
push
jp
aad
jno
sub
dec
outsb
jge
iret
dec
jle
ja
incb
rorl
inc
push
and
inc
sbb
dec
outsl
mov
xlat
cmp
rcl
ret
cmp
faddp
push
aad
les
add
or
add
mov
mov
int
pop
int
loopne
cmp
flds
mov
lcall
sub
add
xor
mov
jp
push
pop
mov
lret
scas
push
xor
out
lock
fwait
sbb
rcrb
ret
pop
sahf
xchg
pushf
xchg
jne
repz
mov
iret
sub
dec
leave
add
mov
or
sub
dec
cmp
sbb
mov
pop
nop
iret
cmp
repnz
rcr
mov
rcl
test
cwtl
xor
mov
add
push
mov
or
cld
jle
xchg
faddl
das
adc
orl
mov
fidivs
sbb
add
leave
sub
test
fbld
push
jae
pop
cmc
xchg
aam
rorb
adcl
inc
test
loopne
xchg
roll
stos
imul
xchg
xchg
cltd
call
push
add
push
call
push
leave
aas
mov
imul
sahf
cmp
jnp
int3
push
push
push
jmp
pop
in
or
pop
addl
xchg
enter
dec
jne,pn
cld
bound
and
push
in
cmp
in
mov
popl
xchg
xor
fwait
inc
jg
loopne
and
shll
sysret
or
jl
in
lea
jno
sub
popa
ret
fsubrs
mov
push
sahf
jae
testb
ss
test
or
push
scas
mov
test
out
aas
aas
dec
ret
mov
mov
rorl
ficomps
push
loop
call
adc
xor
sub
pop
fisttpl
inc
cmp
stc
mov
cmpsb
push
dec
adc
lods
aas
add
or
and
test
xlat
mov
or
into
push
xlat
loope
fs
push
and
xchg
xchg
jecxz
sub
or
repz
add
mov
mov
call
and
cmp
jge
popa
xchg
jnp
pop
stos
pop
out
mov
mov
cmp
in
lcall
sbb
jecxz
add
js
insb
inc
jb
adc
pop
or
sti
stc
mov
cmp
mov
hlt
dec
dec
sbb
push
sbb
pop
jmp
gs
mov
mov
push
jne
and
sub
jbe
cmpsb
mov
pop
mov
xchg
jno
push
imul
loopne
mov
add
rcrl
jbe
ljmp
sub
xor
jge
js
loop
insb
fildl
not
xchg
or
add
lahf
xor
leave
jno
mov
jbe
and
inc
and
das
push
mov
cmp
xor
cmc
sbb
cmp
push
fbld
mov
movsl
jg
hlt
push
in
test
add
loopne
out
mov
add
xchg
cmp
rclb
dec
ds
shr
aam
gs
dec
dec
mov
xor
add
sub
cltd
push
inc
jae
loop
push
call
ds
lcall
ljmp
inc
mov
mov
sbb
mov
mov
jle
add
mov
sarb
xchg
sbb
jbe
adc
das
cmc
mov
pop
out
mov
jecxz
adc
pop
fnstsw
ljmp
leave
inc
hlt
jb
adc
scas
pop
push
in
pop
fnstsw
jle
lods
sub
fwait
adc
lret
rorl
or
or
mov
dec
jle
mov
lods
test
cmp
rorb
push
mov
push
addb
out
mov
cmp
push
sbb
ds
mov
imul
fs
xchg
popf
cmp
dec
sub
outsb
ja
cltd
dec
xchg
mov
jecxz
jne
dec
pusha
dec
or
push
in
les
push
mov
adc
aam
imull
mov
adc
rcll
dec
inc
call
adc
rolb
test
inc
push
rolb
cmpsl
mov
pop
or
inc
mov
je
or
jg
sti
push
lock
test
shll
or
inc
hlt
adc
scas
test
rorb
insb
ljmp
ret
dec
fimuls
fwait
add
push
fwait
add
push
leave
sub
mov
sbb
mov
cmp
fwait
inc
imul
out
sbb
and
ret
xor
fwait
mov
dec
lcall
pop
pusha
cltd
adc
outsb
outsb
dec
push
cld
inc
pop
out
call
fdivs
or
pushw
call
sbb
cwtl
jg
xchg
adc
sbb
out
imul
movsl
or
xchg
jno
cmp
and
mov
sub
fwait
cmp
pop
flds
mov
pop
dec
adc
orl
cmc
dec
jmp
shrl
cmp
mov
or
test
jp
jge
sarl
add
inc
pusha
aad
adc
cmp
push
scas
repz
and
rorb
sbb
mov
adc
mov
ret
xor
sbb
out
pop
pop
cmc
jg
dec
inc
jl
lods
push
fs
add
testb
orb
ret
push
mov
add
xor
cld
aas
lock
pop
ret
or
clc
add
pop
and
or
pop
pop
mov
add
mov
pop
rorb
inc
sbb
iret
xchg
pop
xor
imul
mov
mov
aam
xor
cwtl
loopne
mov
push
lods
push
jno
bound
mov
pop
jns
jne
adc
adc
mov
sahf
ljmp
xlat
add
dec
sbb
adc
sbb
jecxz
jmp
inc
test
pop
sbb
xor
stos
sbb
inc
inc
fnstsw
cmp
or
mov
xor
adc
lahf
mov
inc
pop
dec
mov
or
insb
in
jb
adc
inc
sub
sarl
xor
xlat
push
test
insl
mov
inc
ret
adc
les
dec
clc
and
daa
outsb
add
test
popf
xchg
push
sbb
int
inc
push
sbb
ds
dec
mov
and
push
or
dec
xor
in
adc
sub
jb
leave
adc
enter
out
sbb
dec
scas
mov
or
arpl
fwait
xor
dec
lcall
ljmp
mov
pop
pop
divb
jae
sbb
jbe
rcll
inc
mov
lret
xor
jp
or
int
and
fbld
js
mov
fucomi
idivl
imul
xor
sub
lods
xchg
mov
pop
jb
lock
pop
xchg
push
xor
push
mov
lahf
fidivrl
out
sbb
scas
sbb
mov
and
test
lods
xchg
cmpsl
dec
call
pusha
fbstp
mov
lods
sub
sub
dec
or
or
inc
rolb
hlt
sbb
sbb
ljmp
mov
inc
stc
ja
lock
popa
sarb
and
ds
sub
shlb
adc
sbb
popa
fs
sbb
ficoml
notb
out
inc
int3
mov
adc
dec
mov
add
sub
sub
bound
sbb
pop
push
fwait
adc
outsb
jae
inc
xchg
adcb
mov
and
pop
pop
outsl
pusha
cltd
jecxz
mov
out
insb
cmc
addr16
rol
xor
ret
inc
push
add
pop
push
inc
inc
adc
lret
enter
push
cmp
outsl
movsl
jno
popa
mov
repnz
andb
mov
mov
insl
jg
mov
sti
dec
cmp
into
pop
xchg
jle
mov
or
shl
test
lods
jns
cwtl
jmp
subl
xor
jmp
add
sbb
popf
ds
mov
int
inc
xchg
je
adc
xor
sahf
test
in
dec
popf
and
or
mov
inc
shll
rol
les
sbb
icebp
in
enter
lret
adc
dec
mov
pop
icebp
pop
cmp
aaa
dec
xor
mov
faddl
mov
into
sahf
ret
sbb
jnp
push
rclb
dec
pop
dec
lahf
clc
jmp
pop
leave
xchg
push
jmp
daa
lock
popa
adc
aaa
and
pushf
mov
out
jge
sbb
mov
jmp
push
xchg
xor
loopne
add
mov
mov
cmpsb
push
xchg
or
clc
mov
cmp
testb
inc
lods
sarb
outsb
pusha
push
test
push
outsl
sbb
adc
or
jp
mov
ficomps
mov
push
or
add
inc
imul
insl
mov
push
sbb
lret
data16
daa
cmp
jnp
xchg
mov
bound
mov
mov
adc
in
dec
pop
scas
jne
sub
iret
sub
mov
cs
add
in
lret
sub
orb
and
fsubr
push
in
pushf
pop
cmovge
ds
push
mov
sub
cs
mov
mov
sbb
ja
mov
outsb
ljmp
add
outsl
outsl
ja
aas
sub
dec
repnz
jl
js
fs
mov
xorb
cmp
xchg
xor
adc
cmp
andb
xor
scas
push
lock
loopne
mov
shlb
js
or
cmpsl
int3
arpl
divl
push
mov
ficoml
fisubs
mov
inc
dec
mov
mov
xor
stos
sbb
lds
into
lret
xor
ret
push
arpl
jmp
sub
push
sub
jecxz
gs
pop
and
fsub
ret
mov
xorl
xchg
idivl
jge
ficoml
aam
inc
enter
fdivl
add
mov
pop
jle
and
pusha
pusha
xor
fmull
dec
rolb
or
mov
sbb
cmp
jl
mov
leave
dec
lea
inc
orb
pusha
sub
sub
pop
cmp
mov
dec
push
aaa
push
in
push
jmp
rorb
push
dec
sarb
push
xorl
jo
mov
cmp
lahf
lock
fmul
hlt
mov
push
mov
cmp
cmp
scas
ss
mov
dec
out
xor
std
cld
ret
push
mov
popa
int
mov
enter
lods
stos
cmp
push
mov
outsb
lahf
dec
inc
adc
xchg
pushf
adc
xor
in
sub
xchg
mov
jecxz
jg
icebp
mov
push
mov
mov
xorl
andl
dec
aaa
push
or
add
push
mov
push
push
dec
fmuls
fisttps
dec
sub
pop
pop
in
push
pop
add
sub
aam
sbb
mov
and
mov
add
push
lock
mov
lcallw
pop
loope
call
stos
sbb
dec
dec
sbb
pop
aad
std
cltd
adc
jbe
jl
clc
xchg
js
andl
add
lods
dec
gs
sbb
or
mov
push
cmp
dec
xor
pop
push
sub
ds
add
cmc
mulb
outsl
fsub
xor
mov
fwait
icebp
shlb
or
loope
gs
cltd
out
lock
dec
adc
enter
mov
lret
jbe
movsb
iret
and
pop
int
cld
ja
xchg
outsb
jl
dec
or
xor
mov
popa
aam
xchg
push
inc
das
lds
add
das
lods
xchg
sbb
jae
mov
repnz
or
outsl
gs
test
sbb
mov
sbb
mov
mov
sub
cmp
sub
outsb
dec
sub
inc
ss
or
xor
shlb
push
pop
add
add
mov
inc
jae
fsts
xchg
jne
popa
xorl
pop
shl
sarb
pop
mov
and
loopne
dec
push
dec
add
add
mov
dec
or
test
das
rolb
add
mov
sub
mov
mov
adc
or
or
xchg
jns
ljmp
inc
out
loope
xor
rcrl
lret
xchg
fistl
ss
mov
add
pop
push
ret
ss
and
inc
and
sub
mov
test
gs
pop
loopne
xchg
popf
icebp
mov
shl
dec
cmc
pusha
or
add
adc
dec
xlat
shl
dec
and
testl
jno
or
inc
sti
jmp
inc
jns
inc
mov
rorb
jmp
in
dec
or
jno
add
call
add
add
sbb
enter
push
int3
daa
adc
add
inc
sub
mov
sub
sub
push
or
add
pop
loope
push
in
movsl
pop
ja
inc
arpl
xor
sub
push
push
xchg
repnz
mov
into
xchg
test
push
lret
mov
adc
push
dec
mov
jp
rolb
xchg
jnp
ds
sbb
ja
fistpll
lock
out
ja
lds
push
xor
push
sbb
push
cmp
lock
or
cwtl
add
mov
shlb
add
or
rcrl
or
cltd
dec
clc
dec
add
mov
sub
push
jg
mov
dec
sbb
jne
or
rolb
xchg
stos
cld
inc
cmp
arpl
mov
and
mov
inc
add
in
js
jecxz
ds
or
pop
sub
outsb
loope
mov
sbb
mov
test
xor
icebp
jo
icebp
lock
repnz
jnp
ja
inc
jmp
aad
dec
adc
push
icebp
dec
fmull
sbb
sbb
add
jle
adcl
or
loop
mov
cmp
in
dec
pop
call
les
add
fdivl
shrb
inc
fnsave
push
sbb
sbb
dec
mov
xlat
pop
jl
and
pop
jo
xor
xor
mov
xor
mov
cwtl
loope
dec
test
mov
push
ror
jp
out
mov
out
jbe
xlat
sbb
fcoms
pusha
mov
ja
dec
fnsave
lea
inc
fmull
mov
push
pop
scas
inc
pop
scas
repz
mov
mov
movsl
add
or
rolb
test
stc
cmp
push
fnstcw
mov
andl
dec
outsl
xchg
or
cmpsb
sub
aaa
jbe
mov
mov
xchg
cmpsb
and
mov
dec
fisttps
and
mov
subl
ljmp
dec
push
divps
mov
add
and
fisubrl
mov
dec
dec
clc
popa
adc
decl
push
popa
stos
add
mov
or
cmp
repz
rcll
data16
js
fdivrl
mov
loopne
mov
scas
push
pop
pop
add
mov
test
mov
pop
arpl
sahf
dec
mov
addl
mov
dec
dec
and
in
je
fcomps
jp
and
inc
pusha
dec
call
jle
or
dec
call
add
in
add
mov
clc
in
sbb
ja
and
ret
data16
jmp
xchg
ds
sub
and
daa
stos
je
inc
mov
push
jno
sub
adc
inc
pop
cmpsl
test
xchg
fisttps
data16
loopne
push
xor
jbe
roll
ret
and
xlat
call
xor
mov
jb
cli
or
and
inc
or
and
sub
shlb
xor
les
add
testl
fs
dec
dec
pop
push
lret
adc
movsl
push
sub
stos
and
call
cmpsl
add
inc
popa
enter
fwait
add
loopne
xor
aad
pop
push
pop
mov
fdivrl
mov
fldln2
mov
sub
jo
jbe
push
sbb
fnstcw
add
sbbb
xor
jl
bound
mov
cmpsb
add
inc
cmp
jo
mov
xchg
cmp
les
add
adc
imul
dec
sbb
subb
andl
xchg
or
xlat
xchg
sbb
out
imul
add
add
sbb
add
pop
and
adc
pop
jmp
loope
inc
scas
jecxz
movsl
dec
and
push
or
jnp
imul
cmp
jnp
inc
cmpsl
pop
and
mov
push
dec
mov
pop
fdivrp
xor
cmp
pop
ds
mov
and
mov
sub
add
sbb
rcr
push
sti
movsb
push
xor
subl
pop
aas
and
add
cmp
inc
push
test
pop
inc
mov
ljmp
hlt
jp
cmc
rorb
or
dec
dec
pop
cmovle
sbb
mov
cmp
add
pop
adc
adc
lahf
pusha
pop
scas
push
mov
pop
cmpl
movsb
cltd
test
into
sub
repz
xchg
rolb
sub
shrb
add
rorl
fiaddl
mov
out
sbb
ret
inc
adc
cli
loop
scas
inc
ja
push
ret
xor
xor
mov
add
cmp
jp
in
pop
dec
add
jns
jg
mov
add
add
ss
pop
push
in
push
dec
movsb
daa
test
or
inc
pop
jge
xchg
rolb
ret
hlt
adc
test
dec
xor
mov
rorb
xor
jmp
add
add
fsubr
and
in
push
xchg
sbb
hlt
push
mov
ss
out
out
add
mov
sarl
inc
xor
add
mov
aas
rorb
or
xchg
aas
push
jp
into
mov
and
sbb
aas
mov
mov
in
push
in
fisubrs
sahf
dec
xchg
andl
sbb
call
push
lock
addl
xchg
insb
mov
cmpsb
sbb
cmp
das
mov
sbbb
flds
push
push
sahf
mov
sub
adc
lret
or
pusha
jo
inc
movsl
sbb
das
and
inc
or
sbb
mov
ds
ja
mov
in
cmp
inc
int3
fs
js
pusha
cmpsl
mov
dec
out
mov
and
stos
dec
leave
shr
dec
xchg
lret
into
fisubrs
cmpsb
sub
jbe
out
js
fimuls
mov
mov
dec
out
and
add
pop
cmp
and
push
je
jmp
inc
inc
fnstenv
insb
int
shll
repnz
mov
stc
inc
and
cmp
push
inc
mov
ret
mov
inc
xchg
dec
jl
sti
push
clc
or
mov
jnp
and
pop
push
fwait
fs
sbb
push
fwait
sub
inc
mov
aam
pop
pop
dec
add
mov
testl
inc
xchg
mov
mov
add
sbb
cmp
daa
xor
nop
cwtl
sub
incl
mov
jl
shrb
rcrb
jo
and
mov
lret
jp
xor
inc
and
add
sbb
add
cmp
rol
adc
sbb
call
loop
and
push
push
inc
jb
outsl
popa
jo
ss
xchg
ret
mov
adc
add
or
mov
and
cmp
add
push
std
add
gs
add
pop
sbb
jb
test
loop
sbb
arpl
jecxz
mov
mov
and
push
sbb
fsub
shrl
fdivrl
push
inc
in
call
cli
push
xchg
or
pop
push
xchg
mov
jo
pop
pop
xor
stos
push
cmpsl
inc
or
ficoms
push
das
xchg
dec
or
jp
sbb
popf
xchg
pop
or
pop
cmp
scas
outsl
loope
adc
mov
inc
pop
pop
sbb
mov
hlt
inc
xor
ds
arpl
loop
mov
out
mov
mov
adc
and
mov
andb
push
xchg
push
scas
mov
pop
ss
pushf
mov
add
add
xor
pushf
aam
addl
out
gs
fidivs
mov
xor
loopne
repz
in
mov
cs
dec
popl
loopne
in
jmp
aad
fnstenv
lds
fs
int
push
push
mov
inc
xchg
cmp
push
movsl
sub
hlt
cmp
jae
es
scas
mov
adc
add
pop
jecxz
test
and
add
mov
push
imul
adc
xchg
loopne
loopne
jno
nop
out
ret
jo
pop
xchg
pop
pop
scas
pop
and
xchg
out
out
xor
mov
adc
push
loope
sbb
mov
sti
xchg
xchg
xchg
push
adc
loope
push
mov
iret
xchg
xchg
stc
mov
pop
sbb
adc
outsb
fs
mov
stos
jbe
mov
stos
dec
and
push
std
clc
ret
pop
imul
push
mov
push
mov
add
lahf
ret
jne
mov
adc
xor
jp
pushf
mov
push
test
mov
aad
pop
imul
xchg
bound
xor
das
mov
cli
inc
mov
and
mov
adc
xor
dec
sbbl
loopne
outsl
loop
mov
popa
or
loop
xlat
int
orb
andb
aam
ljmp
sbb
orb
imul
loop
shll
and
adcb
popf
rorb
pop
jo
or
fcomps
hlt
dec
pop
xlat
popa
in
sbb
lds
mov
jp
xor
mov
add
mov
bound
sbb
mov
jno
cmp
xchg
ffree
push
pop
add
push
dec
mov
xchg
xchg
and
xlat
and
iret
or
test
add
aam
dec
mov
int
js
adc
push
or
inc
scas
in
jmp
sub
test
loop
dec
xor
sti
dec
or
jp
add
inc
or
aam
rorb
nop
xor
push
aas
lods
mov
sbb
int
push
sub
fbld
jg
mov
push
xor
adc
sbb
push
push
negl
adc
jne
push
shrd
repz
outsl
or
jne
cmp
sbb
mov
dec
test
adc
imul
lods
mov
mov
push
add
lea
or
orl
mov
sbb
push
sbb
xchg
clc
mov
sub
push
push
sti
ljmp
dec
popa
icebp
add
cmc
and
inc
and
mov
imul
mov
mov
mov
cmpsb
imul
leave
sahf
js
or
xchg
sub
stos
lcall
sbbl
sbbl
push
out
add
lahf
xchg
mov
sub
jb
jge
push
jmp
imul
sub
stos
adc
xchg
push
jns
push
adc
pop
loopne
in
or
loopne
adc
test
ja
mov
pop
sbb
cwtl
xor
jmp
call
mov
push
ljmp
add
or
xchg
jbe,pn
and
outsb
mov
divb
test
mov
int3
cmp
push
icebp
outsl
inc
cwtl
call
clc
sub
jge
sbb
adc
pop
outsb
pop
sub
push
mov
sbbl
mov
test
mov
scas
stos
mov
or
jle
and
add
and
or
xor
in
sbb
dec
pop
lret
pop
cs
dec
ljmp
jb
mov
or
leave
lods
sub
fucomp
mov
enter
dec
xlat
mov
cmp
push
jmp
and
jb
push
scas
rorb
mov
aam
sub
invd
adc
xor
push
lret
mov
mov
pop
in
call
inc
into
jmp
mov
dec
inc
call
addr16
xlat
sbb
and
and
popa
or
outsb
movsl
ljmp
inc
lods
mov
test
push
mov
jo
out
inc
pop
out
add
jecxz
xor
jmp
lret
aas
imul
xchg
or
ret
adc
cmp
out
ret
mov
out
mov
aam
xchg
popa
dec
mov
js
pop
dec
daa
xor
dec
lods
dec
mov
inc
insw
mov
icebp
xor
cmpsb
cmp
adc
iret
imul
pop
mov
aam
sbb
push
pop
leave
popa
das
jns
cwtl
push
xchg
scas
jne
add
out
lods
xchg
mov
and
dec
cmc
loope
push
rclb
pop
xor
dec
sbb
ja
call
adc
xor
das
lea
in
mov
out
sub
add
les
shr
push
sbb
int
sbb
ret
or
aaa
jae
icebp
pop
dec
orl
mov
sbb
sub
cmc
sub
jp
sbb
les
xchg
fiadds
mov
insb
shl
xor
mov
fs
mov
add
or
push
or
adc
add
pusha
adc
nop
mov
sub
mov
push
xor
clc
push
loop
cmc
adc
mov
subl
push
or
fsubrs
mov
mov
push
or
mov
pop
pop
inc
imul
inc
inc
inc
lods
rorl
xchg
inc
push
call
and
aad
pop
sbb
push
pushf
jecxz
add
aam
push
and
cmp
mov
cmp
sbb
rolb
push
data16
cs
mov
ret
pop
inc
mov
scas
nop
loopne
mov
mov
pusha
bound
mov
add
movsb
dec
mov
xlat
mov
hlt
insb
fidivrs
lahf
xlat
push
jne
jno
out
in
add
adc
adc
std
inc
ret
out
or
test
out
mov
in
inc
decb
ljmp
orb
pop
or
mov
jo
aaa
ljmp
jmp
sbb
push
mov
inc
fimuls
arpl
xor
jno
cmpsb
int
inc
push
testb
das
enter
rorb
scas
out
sbb
dec
rcl
ret
punpcklwd
dec
jnp
stos
mov
cld
lods
xchg
sbb
cmpb
test
testl
jle
pusha
movsl
xchg
push
movl
pop
push
pop
test
ss
pusha
mov
lret
dec
xor
add
cwtl
sarb
arpl
sti
mov
dec
sbb
and
sbb
pop
push
pop
jno
lods
sub
aas
hlt
pop
cmp
sbb
inc
push
adc
rclb
aaa
cmp
add
fnstcw
mov
sub
push
cmpsb
je
mov
sbb
jg
ret
shrl
jae
popa
popf
cwtl
loop
iret
inc
inc
jmp
popa
lea
and
dec
je,pn
lods
dec
das
pop
aad
sbb
add
xchg
enter
in
adc
mov
ds
lret
sub
inc
sbb
ss
push
push
mov
mov
and
dec
jne
ret
sbb
pop
mov
sbb
and
ds
call
mov
pusha
outsl
and
jecxz
pop
lret
add
pop
scas
adc
mov
add
jns
xor
outsb
add
mov
mov
and
int
enter
rolb
push
cmpsb
mov
mov
xor
cmc
das
rcrl
cmp
mov
gs
and
test
adcl
aaa
adcb
ret
jmp
add
addr16
pop
aas
je
repnz
lock
sar
loopne
cmp
sbb
loopne
or
ja
sbb
mov
in
push
inc
mov
adc
jne
jp
mov
and
wrmsr
jmp
cmp
sbb
test
test
inc
outsb
cmp
ds
ret
dec
jg
lea
pop
enter
setl
ds
or
xor
adc
ss
outsb
xor
jmp
lahf
adc
push
mov
push
pop
imul
jb
adc
loop
movsb
jb
int
xor
or
addr16
jae
ret
jb
imul
sub
push
dec
jo
ja
add
lret
je
cwtl
in
js
imul
inc
imul
js
sub
add
jecxz
rcll
fadds
jbe
in
loopne
add
loopne
xchg
jg
sbb
in
cmpsb
mov
leave
adc
enter
shlb
xchg
icebp
cmpsl
stos
push
or
add
inc
xlat
idivl
inc
hlt
push
movsb
popf
pusha
xor
pop
jo
js
mov
fldenv
imul
lds
jnp
es
push
mov
cmp
loopne
add
lret
and
mov
repz
dec
sbb
sub
xchg
in
sub
inc
push
sbb
rorl
mov
lahf
sub
dec
push
stos
mov
ss
rorb
jl
xchg
xor
fdivl
loope
mov
push
aad
test
cmp
out
ret
inc
push
jo
mov
cmpsb
sbbb
scas
jae
movsb
pop
and
and
xchg
push
imul
xor
cmp
add
jecxz
sbb
mov
lock
adc
lret
sbb
lret
loopne
movsl
jmp
push
and
adcl
and
xor
add
push
sbb
sbb
cli
and
mov
push
mov
mov
adc
add
cmp
sbbl
cmp
push
and
adc
bound
call
adc
push
adc
cwtl
insb
fldl
mov
mov
pop
mov
in
sbb
inc
pop
stc
adc
lock
packssdw
dec
cmpsl
mov
lds
sbb
outsb
aad
enter
test
adcb
adc
jno
popf
jmp
fwait
pop
cmp
inc
and
movsb
inc
cmc
std
xchg
xor
movsl
lret
icebp
popa
sub
add
lods
adc
xchg
dec
push
jae
inc
mov
sub
mov
jle
add
jo
je
add
add
push
jp
xchg
nop
pop
js
jo
jno
or
lds
clc
push
adc
xor
lds
and
nop
or
mov
negb
push
xor
das
sub
inc
xor
sbb
dec
in
roll
popa
xor
xchg
mov
mov
cmp
aad
xchg
insb
pop
push
lock
hlt
ljmp
fsts
pop
insl
popf
cmp
gs
xchg
add
mov
es
inc
add
aad
mov
mov
jle
inc
cmp
and
or
rorb
fwait
pop
or
movsb
hlt
out
jns
loope
ss
movzwl
dec
je
jmp
aaa
cmc
push
push
sbb
outsl
mov
and
sbb
dec
add
inc
and
scas
adc
fwait
xchg
dec
add
mov
dec
cmp
cltd
dec
fadd
mov
sub
inc
cmp
adc
cmpsl
lcall
test
or
push
jnp
std
jno
out
xchg
inc
iret
mov
xchg
fnstcw
cmpsl
and
add
test
cmp
cmp
jecxz
pop
add
xchg
sub
xchg
rclb
cs
add
mov
mov
mov
lea
inc
rcrb
lret
push
mov
xchg
jae
movsl
pop
addr16
inc
dec
fmuls
cmp
push
js
je
mov
js
jg
inc
mov
pop
cmp
push
jg
sub
jmp
cmp
xchg
aaa
push
loop
push
rclb
jnp
fwait
mov
or
inc
loope
inc
jp
pusha
cmpsl
push
daa
call
mov
sbb
and
ret
inc
fstpl
jb
mov
jge
stos
pop
repnz
add
es
adc
mov
std
xchg
mov
or
mov
or
ret
and
pop
stos
inc
pop
mov
cmc
sar
repnz
inc
sbb
adc
aad
out
pop
or
out
fsubl
xchg
aad
mov
and
fcompl
scas
push
call
nop
or
mov
scas
pop
pop
xchg
rolb
je
out
es
and
jmp
and
mov
push
mov
push
rorl
mov
mov
clc
adc
test
or
inc
insb
nop
and
adc
xor
std
lods
or
xchg
fmull
pop
imull
ret
adc
fs
je
add
out
gs
mov
xchg
pop
mov
ret
xchg
test
add
add
cli
mov
push
test
js
lods
lret
aas
add
push
xchg
in
xchg
ja
cltd
push
aas
sbb
je
mov
cmp
dec
cmp
add
cmpsl
xchg
jnp
fisttps
push
loop
in
movsb
pop
bound
sbb
cmpsl
or
ret
data16
aas
mov
xchg
pop
rolb
inc
dec
mov
mov
xor
mov
sbb
popf
lock
xchg
mov
pop
add
and
icebp
add
sbb
out
jecxz
cs
xor
mov
insb
add
cmp
sbb
jl
movl
sub
pop
push
lahf
mov
enter
ja
xor
test
xchg
std
dec
mov
push
dec
pop
dec
and
xchg
popa
jne
insl
cltd
test
dec
cld
cltd
push
imul
orl
xor
aam
add
clc
test
fidivs
pop
sbb
faddp
test
jge
push
dec
pop
popf
push
test
mov
in
push
sub
dec
into
mov
and
sbb
sti
inc
cli
adc
dec
rolb
cmpsb
add
inc
outsl
or
test
fisubrs
cmc
ret
adc
mov
and
cmc
sbb
movsb
cmp
sub
jo
cmp
insb
ret
mov
cmpsl
or
nop
jae
fadds
shl
add
dec
mov
shlb
jle
sbb
mov
or
adc
or
and
add
sbb
popa
push
and
mov
push
jno
mov
fcomip
jmp
iret
stos
mov
dec
jecxz
clc
pop
pop
inc
aas
dec
ret
inc
movsl
push
jl
stos
lock
fdivl
push
xor
sbb
gs
pop
xchg
adc
addl
dec
dec
mov
mov
push
inc
push
gs
push
jmp
mov
add
and
mov
pop
scas
adc
sbb
jge
inc
pop
outsl
jno
pop
jo
push
stc
cmp
xor
iret
adc
push
push
cmc
mov
stos
xchg
pop
or
xchg
dec
fs
jbe
mov
dec
lret
pop
pop
pop
fs
in
xchg
add
lea
mov
jge
mull
xlat
or
adc
cs
adc
sbb
test
cmp
or
dec
pop
inc
ret
ret
jo
fs
mov
xorb
fistpll
pop
dec
ret
or
roll
es
xchg
jb
pop
test
jge
ret
cmp
pop
xchg
movsl
mov
ret
fnstsw
add
test
adc
movsb
xlat
das
mov
and
call
jecxz
add
and
add
mov
adc
fadds
bound
dec
ret
mov
popf
test
or
mov
add
ret
ret
adc
add
movsl
inc
repnz
cltd
mov
xchg
pop
pop
call
ss
test
xchg
inc
jp
fistpl
add
xlat
fst
jae
mov
inc
add
cmp
rol
or
and
and
test
cmp
push
test
inc
fwait
sarl
test
pop
push
xchg
or
sbb
jo
inc
shrb
fildll
xchg
arpl
ret
and
pushf
xor
loop
cmp
sbb
insb
popf
push
test
fdivp
mov
cwtl
sti
and
jae
loop
mov
mov
lods
push
call
xchg
mov
mov
jmp
scas
sub
push
loope
sbb
out
or
mov
loope
dec
aas
daa
and
jecxz
add
or
adc
jo
adc
and
mov
cmpsl
in
data16
pop
inc
inc
mov
sbb
std
add
mov
inc
iret
sarb
push
pop
dec
decb
or
pop
or
sbb
or
mov
pop
pop
ret
fidivrl
mov
xchg
pop
pop
repnz
adc
push
popf
test
popa
rol
out
testb
stc
loop
int3
xchg
cs
push
cmp
jne
insb
xchg
shl
outsb
icebp
jne
andl
jae
inc
pop
xchg
or
nop
sbb
std
das
inc
arpl
lmsw
or
sbb
xchg
sbb
inc
mov
jnp
vmload
sub
push
mov
mov
push
push
andb
nop
mov
sbbl
ss
cltd
fbld
and
les
or
jae
jne
ret
sub
jl
outsl
mov
out
jecxz
jne
lcall
mov
dec
repz
orl
push
pop
popa
mov
ret
push
lods
sti
sub
mov
add
sbb
mov
lods
sub
inc
sbb
loope
dec
leave
inc
mov
fcomp
add
inc
inc
or
push
insl
dec
add
add
push
daa
fistps
sbb
fmuls
sub
sbb
js
cmp
inc
aad
lds
mov
enter
jb
adc
add
cmp
mov
inc
or
add
sub
lcall
push
mov
divl
inc
iret
rol
or
pop
setno
iret
dec
aaa
ret
ret
inc
icebp
pusha
inc
aas
add
sub
cmpsb
jne
int3
dec
rcrl
roll
sub
jno
mov
loope
mov
scas
pop
inc
mov
enter
and
mov
jmp
or
mov
jns
lcall
hlt
jno
in
cltd
addb
int3
insl
imul
sti
sub
dec
imul
mov
push
jbe
andl
or
imul
ja
adc
cmpsl
add
ss
or
cld
sub
sbb
shl
jp
shll
aam
sbb
xchg
iret
sbbl
push
cs
jne
cmp
clc
in
adc
mov
sbb
pop
or
shrl
jmp
push
addb
rol
and
cmp
mov
pop
int3
imull
xchg
cmpsl
adc
cmp
dec
add
push
sbb
mov
fldl
and
push
push
out
ds
mov
dec
fsubs
inc
test
cmp
dec
sub
add
or
jno
call
addr16
pushf
xchg
jle
push
lock
sbbl
sub
add
scas
pop
leave
push
add
xor
int
push
popf
ds
add
movsb
jle
cmc
mov
mov
shl
cmp
loopne
cs
mov
fadds
jg
pop
cmp
push
fistpl
gs
pop
adc
cmpsb
dec
int3
fisttps
and
test
adc
test
mull
lds
jg
or
ret
lret
imul
scas
or
push
adc
enter
jb
mov
nop
or
inc
aam
pusha
lret
rol
fcmovu
in
xlat
xchg
sbb
scas
xchg
add
cmp
inc
jae
push
cld
test
jmp
aad
loopne
fildl
daa
fidivrs
xor
fisubrs
loopne
jo
sub
mov
pop
mov
addr16
xchg
pop
jl
or
mov
xor
lret
out
mov
mov
sub
jmp
ret
outsl
fistl
lock
in
add
xor
cmpsb
jnp
je
inc
or
test
sub
jp
ret
jne
add
push
fcmovnb
shll
jge
jns
xchg
xor
push
xchg
enter
add
cmpl
les
bound
adc
inc
imul
popf
mov
xchg
mov
outsb
sub
mov
add
les
push
shl
addb
and
outsb
sbb
push
mov
inc
popl
push
push
test
pop
jnp
js
pop
cmpsb
div
adc
in
int3
pushf
test
das
fcmove
popa
fwait
iret
bound
sbb
inc
jp
les
xor
cmc
icebp
adc
jmp
out
imul
das
pop
imul
out
xor
sbb
jae
dec
push
xor
cltd
inc
adc
mov
jp
fsub
jne
ljmp
jb
enter
push
adc
cmp
mov
add
or
cmp
inc
sbb
stc
cli
push
cld
cmp
test
imul
popf
xor
lret
mov
adc
xchg
add
dec
test
cmp
fdivrl
movsl
shrl
mov
sbb
and
sbbb
andb
jne
nop
clc
icebp
cmp
sti
dec
push
loope
inc
das
jle
jbe
pop
hlt
inc
addr16
adc
ljmp
adc
xchg
repz
nop
and
jl
stos
adc
sarl
shr
inc
mov
sub
test
aas
pop
jno
cmova
mov
sbb
sbb
sbb
push
pop
fsubrs
push
stos
or
lahf
dec
std
cmp
pop
ret
push
mov
aas
jmp
jae
repz
sbb
pshufw
add
pop
mov
or
movsl
pop
push
rolb
pop
inc
mov
test
pop
pop
xchg
sbb
sbb
popf
imul
add
stos
imul
push
nop
jns
ret
outsl
adc
sub
cs
cmpsb
xorb
push
outsl
xchg
ffree
adc
xor
aam
push
mov
int
mov
jl
iret
dec
lds
mov
pushf
call
mov
pop
js
pop
jecxz
popf
sub
in
inc
pushf
sub
xchg
sbb
cmc
aas
inc
dec
cmp
pop
cmpl
sbb
fdivs
je
sub
shld
ds
popa
or
andb
sbb
xchg
dec
ret
mov
rcl
cmpsb
lds
cmovo
mov
hlt
adc
or
mov
mov
mov
xor
add
call
mov
rol
push
push
sbb
subl
sbb
sbb
sbb
jnp
inc
stos
flds
push
nop
mov
xchg
aam
sti
test
inc
adc
stos
add
aad
xchg
sbb
adc
lock
or
push
sub
arpl
div
test
jge
mov
ds
add
das
mov
push
and
inc
scas
nop
mov
push
push
jne
sub
add
lods
xchg
shlb
icebp
mov
loope
addl
lods
or
sub
ret
push
adc
add
sbbl
mov
sub
leave
push
pop
loope
mov
cmpsb
mov
hlt
sbb
mov
xchg
push
jbe
js
icebp
stos
add
sbb
iret
cltd
dec
sbb
inc
cmp
ffree
in
fiaddl
ljmp
sub
ret
cs
orl
and
mov
push
sbb
xor
pop
xchg
popf
mov
add
addr16
in
inc
and
jmp
loop
bound
mov
add
lods
add
jg
jg
jno
pop
frstor
push
cmpsl
rcr
jg
sbb
test
sbb
sbb
add
push
sbb
int3
add
or
push
test
cmpsb
cmpsl
icebp
jnp
sbb
les
mov
mov
sub
movsl
jno
shl
push
add
or
push
outsb
push
mov
loope
jnp
rorb
dec
ret
test
sub
pop
inc
adc
jmp
imul
sbbl
cmp
sbb
mov
adc
cmp
out
jge
pusha
push
adcl
jecxz
xchg
ret
pop
popf
test
stos
xchg
sub
push
aad
mov
stos
cmc
addl
mov
cmp
or
xchg
add
dec
or
rcrl
das
mov
sub
sbb
push
testb
pop
pop
push
or
push
cmp
addr16
arpl
movb
dec
push
jo
pop
add
push
mov
inc
or
data16
shrl
ret
or
dec
scas
mov
or
mov
sti
add
mov
sarl
lds
lcall
xor
or
xor
fdivrs
lds
cmpb
add
lret
sub
lret
sbbl
lods
xchg
ret
test
bound
xchg
push
dec
stos
mov
pop
sti
or
andb
adc
call
or
or
aaa
orb
mov
mov
push
sub
push
and
mov
test
xchg
cmp
outsb
add
ss
xchg
mov
pop
or
sti
das
add
js
mov
and
js
ret
dec
dec
and
jb
jmp
inc
add
test
mov
mov
rcll
addr16
jmp
cmp
mov
loope
push
hlt
subb
mov
aaa
and
pop
add
inc
ret
jge
mov
rcl
pop
adc
fiaddl
lods
or
mov
push
sub
sbb
and
imul
adc
shrl
jnp
mov
pop
fnsave
cmp
push
pop
dec
lcall
scas
mov
push
and
aad
xor
or
lret
mov
or
sbb
inc
loopne
out
jp
mov
hlt
and
mov
pusha
stos
add
lahf
xor
addr16
xchg
cs
pop
lret
xor
test
mov
jo
mov
adc
roll
push
mov
mov
mov
lods
dec
sbb
jae
pop
jne
pusha
stos
sub
imul
popa
dec
pop
ja
mov
sbb
add
jmp
pop
or
out
mov
fisubl
orl
mov
mov
loop
fadds
xchg
add
ds
dec
mov
shrd
mov
dec
cmp
sbb
xchg
jmp
push
jge
movsb
ds
inc
aas
xor
lock
fwait
pop
xorl
cmp
adc
lret
inc
jo
jbe
in
cmpsl
cmp
jp
dec
cmp
dec
test
add
int
in
jb
jne
aas
sbb
aad
std
aas
mov
mov
insb
int
repnz
scas
mov
fistl
cmp
lret
aad
fsubrs
into
ljmp
pop
jg
mov
pop
add
push
xorl
ds
aam
inc
ja
adc
pusha
inc
popa
and
and
pop
adc
popa
dec
out
insb
jge
jl
ds
shlb
rol
jmp
test
ret
pop
ljmp
mov
or
dec
lret
cmpb
inc
add
mov
mov
or
push
dec
pop
sub
inc
addr16
aam
sub
outsb
mov
push
sub
or
jp
adc
or
adc
lahf
jmp
popa
ljmp
aaa
pop
add
stc
ret
jb
or
pop
push
popa
dec
inc
repz
dec
xor
test
outsb
shll
xchg
in
jp
inc
adc
sbb
pop
daa
sub
mov
mov
ret
mov
sbb
or
xor
nop
push
dec
mov
fsubl
insb
dec
rorl
pop
sub
sahf
add
and
mov
xchg
arpl
push
mov
mov
lock
xor
adcb
fdiv
sbb
inc
sbb
shrb
int
aas
xchg
push
stos
adc
incl
cld
test
mov
insl
pop
jae
shl
push
pop
and
push
jecxz
outsb
mov
ja
xor
push
add
pop
cmpsl
dec
ljmp
push
adc
nop
pop
jp
mov
xor
xor
rcrb
pop
ja
pop
data16
dec
cmp
fwait
cmp
sub
sbb
rorl
adc
add
xor
xor
jnp
jo
lahf
or
xchg
int
push
arpl
arpl
pop
hlt
lods
xor
jae
lds
inc
imul
xchg
addr16
data16
sub
enter
add
adc
add
sbb
jl
enter
addl
negl
mov
movsb
jl
outsl
test
xchg
xor
jg
jne
idivb
icebp
pop
mov
push
mov
es
in
sbb
gs
pop
jecxz
pushf
dec
aas
pop
out
dec
loopne
setl
aaa
or
mov
rorl
popa
xorl
add
lock
lret
jl
scas
jne
loope
fbld
loope
and
push
bound
gs
outsl
jecxz
mov
jmp
dec
insl
mov
xchg
out
iret
adc
jno
fildll
cmp
pop
sbb
sbb
xor
mov
test
add
hlt
sbb
dec
mov
lods
clc
adc
cmp
adcl
cmp
addb
ret
jmp
enter
test
lret
push
mov
mov
mov
mov
cltd
andb
add
inc
outsl
push
mov
cmpb
add
jle
aas
jmp
enter
mov
and
das
mov
testl
mov
shrd
xchg
scas
insl
fbld
xchg
mov
mov
dec
jb
xor
jmp
jo
lcall
push
or
lock
xchg
xor
jns
mov
xor
sarb
in
push
ljmp
adc
xchg
inc
mov
add
sub
sub
pushf
mov
or
inc
sbb
out
jp
jge
sub
shlb
sub
mov
cmc
fld
inc
pop
iret
add
adc
divb
adcb
mov
cli
test
push
mov
xor
aaa
adc
lret
dec
stos
lret
lea
mov
sub
mov
jae
out
push
sbb
ret
sub
cmp
sub
inc
stc
dec
xor
dec
dec
jge
popa
adcl
push
jno
mov
rcrb
call
push
fadds
imul
xor
pusha
jae
ret
ljmp
xor
push
out
xchg
mov
add
inc
dec
lock
pusha
pusha
and
icebp
xchg
add
dec
cmp
sub
fwait
dec
mov
sti
inc
jge
pop
jp
lret
and
or
rolb
adc
xor
adc
pop
pop
sbb
ret
fdivr
sahf
adc
pop
sbb
xchg
xor
xchg
adc
insb
xchg
aad
inc
xor
insb
test
inc
call
rolb
add
mov
or
dec
sub
adc
pop
pop
sahf
fadds
sub
jnp
mov
inc
pop
pop
shlb
push
gs
inc
bound
xchg
push
rolb
pop
shr
inc
fs
int3
and
dec
sub
daa
js
inc
jo
inc
imul
popf
xor
imul
inc
dec
sbb
push
inc
jne
xchg
jbe
daa
jns
lahf
xor
test
aas
pop
or
mov
dec
stos
jae
mov
mov
or
sub
push
insb
iret
xor
push
mov
jg
jmp
loope
push
add
leave
jbe
std
ja
lods
adc
mov
jo
addr16
sti
and
fs
movsl
sbb
fdivrl
out
mov
dec
ret
movsl
sbb
lret
adc
lea
fiaddl
push
inc
mov
mov
cmpsb
neg
and
add
cmp
xchg
jo
add
stos
mov
dec
cmp
xchg
cmp
pop
jge
jns
daa
xchg
addl
call
mov
pop
inc
inc
sbb
in
xchg
nop
cmp
push
aad
inc
dec
test
push
mov
jae
data16
dec
add
mov
sub
push
sbb
xor
mov
inc
and
fisttpl
test
cwtl
add
rcrb
mov
or
jb
mov
add
or
mov
mov
mov
imul
stos
scas
fists
mov
sbb
pop
dec
gs
pop
sbb
jp
sbb
mov
fs
test
adcb
rol
mov
mov
xorb
mov
dec
jne
xchg
lock
jmp
es
dec
sbb
ja
dec
imul
mov
dec
enter
movsl
es
outsb
dec
scas
fistps
inc
movsl
push
cltd
sub
xor
lar
flds
jno
jmp
loope
xor
lret
addr16
cmp
bound
push
pushf
mov
mov
fucomi
nop
outsb
popa
jl
js
inc
mov
sub
cmpsl
xchg
scas
pusha
push
mov
add
add
fldl
shl
push
dec
popa
mov
cmp
loopne
mov
push
mov
pop
add
call
push
sbb
jge
inc
lret
outsl
or
stos
or
enter
mov
xor
adc
insl
ds
adc
fldenv
cmp
mov
fs
xchg
fimull
pop
test
ja
aaa
add
or
test
js
fnstsw
push
pusha
mov
ljmp
popa
add
popa
adc
decl
xor
sahf
push
mov
dec
xor
or
inc
ret
imul
mov
jp
call
nop
pop
shll
lock
xchg
daa
addl
icebp
test
lcall
hlt
dec
dec
and
mov
lcall
fs
mov
rorl
pop
popf
push
sub
push
mov
push
adc
dec
mov
or
rcrl
inc
clc
pushf
pop
dec
xor
or
insb
pop
bound
not
sbbl
jle
jb
cmp
cmp
scas
or
mov
xor
mov
popf
sbb
sbb
jmp
push
fisttpl
jl
popa
jmp
sbb
and
lret
jns
mov
pop
je
cmp
mov
push
or
mov
fcomps
jl
ss
mov
inc
dec
add
sbb
bound
rorb
and
pop
pop
test
andb
insb
mov
lret
mov
jae
lock
jge
jo
pop
ja
add
pand
movsb
adc
xor
int
pop
push
sbb
push
popf
out
dec
lea
inc
loope
scas
loopne
dec
mov
sub
dec
loop
xchg
std
add
rcrl
dec
stos
mov
test
dec
pop
fdivrl
cltd
lods
popf
push
ljmp
addps
loope
lods
outsl
add
iret
movb
fs
lods
push
unpckhps
in
aaa
movsb
popf
inc
pop
fwait
pop
inc
sub
jmp
or
sub
add
lock
test
sub
scas
movsb
add
lods
adc
pop
mov
add
push
add
push
dec
mov
fwait
jp
or
and
and
into
clc
fdivs
mov
pop
sub
divl
bound
repz
xchg
mov
jle
mov
jne
imul
sti
and
test
leave
or
stos
loop
xorl
jmp
movsl
fwait
mov
das
inc
cmpsl
addl
or
mov
pop
lret
and
fiadds
pop
jge
and
dec
jmp
test
test
pop
pusha
mov
jmp
sub
movsb
dec
lock
ljmp
dec
pop
xor
or
cmc
scas
xor
add
xor
inc
ss
push
cmpsl
adc
fmuls
cmp
mov
dec
push
pop
mov
mov
popa
icebp
xchg
or
jl
fidivrl
mov
pop
lret
add
outsb
enter
pusha
fldt
ja
mov
push
jnp
vmovddup
push
push
mov
test
mov
stos
add
scas
insl
subl
lds
add
lods
cwtl
frstor
stos
and
scas
sarb
and
or
cmp
sbb
arpl
mov
push
je
or
pop
add
cmc
mov
adc
sbb
push
mov
xor
sub
je
pushl
cmp
add
add
and
pop
inc
mov
jnp
mov
mov
test
ret
mov
pop
and
fcoms
inc
push
pop
dec
add
test
pop
test
push
add
sbbl
fwait
or
push
pop
cmp
dec
pop
mov
out
sbb
dec
pop
sbb
scas
mov
push
sbb
pop
shr
sti
pop
rorb
push
inc
inc
and
mov
mov
pop
adc
stos
int
mov
adc
pop
ret
adc
add
add
addl
idiv
dec
add
add
ss
sub
xchg
inc
js
xchg
pop
bswap
push
inc
cmpsl
inc
insl
xchg
jbe
sbb
dec
inc
test
sub
mov
or
or
sbb
sub
adc
pop
sbb
subl
and
arpl
pop
in
and
jb
or
cmp
ljmp
adc
push
mov
leave
inc
imul
into
jle
dec
dec
pushf
jp
or
xadd
gs
add
scas
lds
sbb
addr16
and
jbe
cmp
adc
jge
sbb
scas
jns
lock
rorb
loopne
xorl
sbb
imul
pop
shl
ret
push
xchg
inc
test
and
repz
and
or
loope
pop
inc
rclb
lods
scas
jge
push
fcompl
dec
pop
add
or
ret
scas
adc
sub
dec
add
std
dec
insl
test
push
aas
pop
push
outsb
mov
xor
out
push
popa
add
js
rorb
cwtl
jo
outsl
stos
xor
popf
xor
adc
pop
jp
jp
mov
cmpsl
sbb
cltd
mov
lds
cmc
leave
or
inc
mov
and
push
inc
int
popf
add
arpl
clc
js
cmpsl
push
mov
mov
inc
nop
add
and
shl
mov
imul
stos
add
daa
sub
pop
bnd
unpckhps
les
adc
jns
leave
bound
mov
push
das
push
scas
xor
push
xchg
xchg
sahf
movsb
push
sbb
and
outsl
fs
les
les
cmp
jbe
jns
push
inc
pop
xchg
dec
lahf
rcrl
xlat
jb
daa
test
jp
test
sbb
in
add
mov
into
inc
icebp
push
pop
sub
imul
push
or
imul
xor
add
shlb
lods
cmpsl
mov
mov
sub
pop
pop
icebp
dec
xlat
lret
scas
and
or
and
or
loopne
fwait
jmp
pop
ror
mov
ret
dec
mov
mov
mov
out
dec
leave
inc
addps
insb
jnp
pop
inc
dec
push
jo
adc
push
pop
rorb
popa
xchg
mov
ds
pusha
inc
test
dec
setg
aad
daa
mov
dec
rolb
xchg
pop
stos
test
pop
out
inc
add
sbb
test
inc
add
adc
add
imul
push
inc
movsb
push
xor
dec
cmp
or
mov
pop
pushf
dec
leave
arpl
daa
pop
mov
or
hlt
movsl
imul
mov
mov
aaa
and
pop
and
out
ret
mov
push
pop
data16
aaa
shll
ja
lds
das
loopne
pop
xor
sti
mov
and
sbb
mov
lods
sarb
mov
daa
test
xchg
sub
xchg
dec
push
shll
cmc
adc
pop
popa
dec
shr
xchg
rorb
nop
cmp
in
sub
popf
les
inc
rcll
pop
pop
popa
int
lods
ss
cmp
fsubl
lcall
addl
dec
roll
or
push
rol
fidivrl
test
pop
push
jge
movsb
rcrl
push
imul
mov
dec
sti
sbb
sbb
sbb
xchg
in
adc
cmp
dec
or
movsl
jmp
cs
jmp
xor
mov
pushf
push
out
push
pop
adc
add
test
mov
test
imul
mov
mov
imul
sbb
mov
pop
aaa
sahf
scas
outsb
out
xchg
lock
stc
cs
gs
dec
push
push
js
pop
shl
in
mov
jl
sub
pop
test
orb
testl
jns
mov
xor
pop
jmp
jmp
das
cwtl
repnz
in
cmp
dec
inc
loope
sbbl
mov
js
pusha
mov
aam
mov
jb
inc
movsl
add
sti
aas
cmp
and
insl
mov
add
pop
bts
mov
cwtl
jns
push
or
jns
test
mov
and
out
mov
sahf
jnp
adc
inc
and
das
or
movsl
add
lcall
adc
mov
mov
sbb
mov
push
out
hlt
mov
stos
shr
pushf
cmp
pop
mov
insl
filds
dec
xchg
xchg
xchg
lods
loop
aam
and
mov
jb
xchg
and
push
push
stos
or
nop
lcall
lahf
fyl2x
push
stos
insl
imul
push
cmp
les
mov
mov
push
or
lcall
cmp
rorl
xchg
push
push
out
push
push
addl
mov
out
jl
stos
ret
mov
cmp
or
flds
xchg
sbb
and
test
mov
mov
push
cmp
jo
fs
xchg
jmp
pop
sbb
orl
cmpb
movsl
mov
adc
cmp
popa
add
xchg
int
adc
js
pop
mov
fmuls
pop
sub
inc
sbb
adc
loope
nop
or
inc
leave
lcall
cmp
inc
jg
push
or
in
inc
outsb
lret
sbb
and
xor
adc
mov
movsl
mov
cmp
sbb
imul
sahf
cmc
mov
jno
sahf
jg
mov
and
pusha
jne
daa
xchg
pop
sub
xchg
sub
cmp
jecxz
and
mov
and
scas
mov
push
mov
shl
imul
mov
daa
jno
cli
mov
sbb
leave
jge
or
and
es
daa
repz
repnz
fistpl
aas
cs
pop
mov
pop
mov
jl
and
dec
xorl
mov
scas
in
popa
sbb
stos
push
pop
sbb
movsw
repnz
inc
add
mov
add
insb
push
sahf
addr16
sbb
sbb
cmpsl
subl
ret
sub
xor
dec
lret
mull
mov
jnp
lret
xchg
inc
stos
adc
and
inc
leave
js
imul
jle
clc
and
loope
ret
loope
iret
mov
pop
lods
push
inc
xchg
cltd
or
loope
adc
mov
outsl
pusha
xor
test
xor
push
adc
loop
xchg
imul
adc
pop
dec
mov
adcl
jne
sub
das
imul
mov
popl
sahf
sahf
and
dec
or
sbb
call
and
or
addr16
add
cmp
jo
dec
popa
sub
aas
ret
add
push
enter
sbb
add
xchg
sahf
pop
and
movsb
ret
add
pop
push
loop
aad
mov
lock
sub
rcrb
xchg
adcl
ja
or
xchg
or
inc
bound
or
add
dec
mov
and
fnstcw
sbb
pop
add
adc
jbe
jge
into
adc
pop
pop
and
mulb
xchg
xor
mov
inc
cmp
jns
dec
stc
push
mov
fwait
test
cmp
cli
mov
cmpsb
ficoms
xchg
add
jmp
or
inc
push
dec
js
jp
ljmp
scas
sub
ret
jb
adc
mov
sub
lret
bound
idivb
mov
jl
inc
cmpsb
mov
push
mov
pop
popf
fstps
sti
ret
js
aad
pop
sti
stos
ret
pop
rol
inc
pop
and
out
pusha
mov
gs
lret
sbb
or
inc
mov
dec
imul
sti
xlat
adc
mov
lds
test
mov
mov
loope
lds
repnz
js
pop
pop
cs
mov
je
lahf
jo
data16
pop
adc
lahf
enter
leave
pop
or
cmpsl
add
movsb
fcompl
aas
loope
xor
mov
lds
cmpsl
or
pop
mov
and
jb
and
mov
je
jl
jbe
push
pop
or
loop
clc
mov
push
inc
xor
dec
xor
mov
inc
adc
cmp
push
fildl
dec
push
xchg
sbb
pop
sub
clc
and
mov
push
or
xchg
sub
or
pusha
test
mov
mov
cmp
je
xchg
incl
xchg
push
fistl
sub
push
movsb
sbb
sarl
jns
and
dec
adc
xor
sbb
and
push
roll
xor
add
in
lds
sbb
test
ret
jno
outsl
orl
ret
or
jge
sbb
shrl
cmp
or
mulb
mov
ret
adc
das
add
adc
fldl
ret
into
cmp
jmp
fucomp
iret
xor
adc
inc
icebp
lds
xor
adcb
push
lock
dec
mov
dec
pop
ret
mov
leave
mov
jmp
jmp
cmc
mov
inc
cld
and
inc
jmp
sbb
sub
fadds
test
or
xchg
or
decb
ds
mov
mov
xor
pop
or
mov
loope
lahf
cmp
jo
cmp
pop
enter
imul
jmp
lret
cltd
loopne
and
add
jnp
adc
dec
or
jge
pushf
popw
and
rclb
dec
loopne
cmp
sbb
icebp
mov
pusha
fistpl
and
aam
adc
outsb
sbb
lret
movsb
hlt
pop
decl
adc
rolb
jnp
lcall
dec
push
addr16
rcll
aam
faddl
ja
sbb
cs
push
pusha
or
les
cmp
aam
or
or
adc
enter
cmpsl
push
iret
and
fnsave
mov
sbb
or
xor
cmp
lods
and
daa
jbe
inc
inc
frstor
imul
xchg
insl
shr
cmpsl
xchg
lds
mov
or
sub
stc
pop
sub
adc
out
inc
mov
cmp
cmovp
inc
jnp
inc
mov
jg
or
mov
rorl
jge
jne
mov
sti
and
pop
outsl
push
add
inc
cmp
xor
jp
inc
pop
lahf
sub
sbb
inc
es
or
testl
cli
xchg
add
pop
or
jb
mov
mov
cmp
jmp
ds
in
add
sbb
cmp
sub
adc
push
sbbl
push
mov
sub
or
xchg
mov
out
les
inc
in
in
cwtl
inc
pop
mov
cmp
fcoml
inc
dec
rclb
scas
test
or
mov
add
or
inc
sbb
aaa
cmp
pop
movsb
adc
lock
ja
jno
cmpsl
scas
pop
lea
sti
loope
fistps
mov
dec
rorb
stos
jecxz
inc
out
cmp
aas
xchg
mov
inc
sub
inc
subl
lret
xchg
inc
loop
xor
cs
fimull
dec
dec
pusha
bt
rcrb
jo
sti
nop
or
push
addl
stos
xchg
daa
sub
inc
test
add
dec
jno
push
test
mov
add
add
xchg
out
push
sub
cmovae
test
or
pop
imul
push
scas
and
sbb
and
jmp
arpl
lock
sub
xchg
imul
add
ficoml
and
movl
lods
inc
movsb
sbb
push
jo
mov
xor
nop
jo
mov
in
pop
sub
ret
jg
xorb
adc
mov
push
mov
push
mov
icebp
pop
mov
nop
push
add
pop
test
sbb
mov
sar
inc
cmp
add
lcall
mov
add
insl
movl
add
cmp
mov
in
mov
xchg
clc
in
jo
mov
in
jl
icebp
ds
test
or
inc
rorl
iret
daa
mov
add
xchg
cli
xor
imul
roll
aam
sbb
mov
lock
mov
out
pop
xchg
pop
test
js
push
inc
mov
adc
sbb
or
fisubrs
add
mov
scas
mov
push
out
add
test
lds
xor
ds
xor
inc
insl
lret
gs
sub
add
sub
pop
mov
push
xchg
adc
mov
sub
sub
push
and
orb
and
xchg
dec
dec
pop
fwait
sbb
xchg
cltd
mov
imul
mov
add
das
xlat
lret
mov
orb
adc
test
ss
ret
das
pop
or
adc
lods
lahf
inc
in
lods
or
add
adc
std
xchg
les
mov
inc
push
ds
pop
push
cmpsl
jbe,pn
xchg
clc
ret
pop
es
xchg
xchg
negl
jmp
xlat
call
sub
pushf
xor
mov
mov
jl
loop
lods
andb
sbb
push
inc
mov
sahf
dec
or
adc
scas
sub
mov
push
leave
rclb
add
cltd
push
imul
pop
data16
xor
or
add
popa
dec
dec
fcompl
lea
insb
mov
pop
scas
call
add
pop
and
fiadds
out
out
pop
pop
out
add
ret
das
xchg
lock
cltd
lea
dec
repnz
fcmovnbe
pop
test
test
xor
cmp
add
fxch
add
xor
mov
repnz
ret
dec
push
outsb
and
pop
dec
xor
mov
add
dec
enter
push
push
sbb
cltd
push
js
sahf
shll
leave
push
xlat
orb
push
xlat
sbb
rorb
xor
ljmp
sub
pop
jns
aam
dec
adc
and
imul
mov
xchg
cld
das
push
sbb
lds
movsb
mov
shl
add
popf
rclb
cmp
inc
push
pop
lret
and
je
push
mov
mov
cwtl
xor
ja
and
sbb
sbb
sub
adc
jl
and
add
sbb
iret
dec
stos
pop
inc
mov
sub
scas
int
pushf
inc
mov
push
out
push
jae
mov
rorb
addr16
inc
shll
test
and
mov
push
push
jecxz
bound
cmp
add
mov
lret
rclb
dec
sub
aam
clc
movsl
aas
pop
neg
ds
lret
imul
push
push
fucomi
movsl
dec
out
out
adc
into
cli
dec
jne
push
mov
out
mov
test
inc
andb
add
fs
and
daa
ja
fisttpll
daa
add
jle
mov
jae
int
and
ror
xchg
sbb
roll
pushl
sub
push
jmp
dec
or
sub
xchg
push
stc
jbe
add
dec
add
or
jbe
in
pop
aam
fucomp
mov
sub
mov
mov
and
push
sbb
xchg
xor
fldl
mov
pop
fcos
repz
fisubs
hlt
mov
xor
mov
add
mov
or
icebp
and
movsl
sbb
or
insl
outsb
xor
aam
xor
pusha
dec
pop
cmp
cmp
ds
push
sub
push
push
push
or
push
xchg
mov
sbb
jo
mov
mov
cmpsb
pop
ljmp
aas
add
dec
addl
sbb
pop
lods
adc
xadd
std
repz
xor
sub
mov
call
scas
notl
aaa
fs
xchg
push
out
popf
add
or
adc
dec
hlt
xor
int
cmp
push
testl
mov
and
pushf
test
sbb
or
pop
lds
adc
adcb
negl
addr16
or
roll
loopne
je
xchg
xchg
incb
push
inc
sarl
into
push
test
inc
jns
lds
push
pop
mov
cld
xor
pop
ret
ss
test
rcrb
xchg
mov
mov
add
out
and
movsl
push
aaa
out
adc
and
daa
test
fimuls
push
hlt
add
int3
cmc
pop
push
popf
stos
push
push
sub
jnp
mov
add
adc
addb
adc
sub
aam
push
xchg
cmp
adc
cmp
push
add
out
ret
inc
jo
push
push
sbb
addl
pop
cmp
into
inc
mov
xor
stos
mov
xchg
dec
or
and
popa
mov
jg
mov
push
fcomps
adc
cmp
cmp
mov
inc
outsl
or
loope
add
xchg
adc
nop
mov
data16
push
daa
inc
shl
sub
data16
pop
mov
xor
or
pusha
clc
and
ljmp
mov
cltd
jg
xchg
add
xor
dec
mov
dec
mov
xchg
xchg
or
mov
adc
clc
xchg
loopne
adc
or
or
pop
repnz
xchg
fistl
test
inc
xchg
sbb
lods
xor
adc
sub
jge
popa
and
jno
scas
dec
sbb
mov
dec
cmp
mov
popf
adc
sbb
fcmovnu
bound
enter
in
in
and
mov
test
insb
fcmove
xchg
dec
xor
fadd
cmp
je
lret
loop
xor
mov
dec
or
jecxz
pop
in
daa
xchg
into
jl
dec
pop
pop
add
inc
adc
push
in
or
out
add
dec
fistpll
sub
xchg
sbb
pop
fnstcw
jb
xchg
add
mov
xchg
xchg
stc
sub
and
inc
add
add
pusha
lock
cs
push
lea
loope
stos
mov
pop
mov
paddsb
mov
add
lcall
fcomip
lock
sahf
xor
add
mov
add
cs
mov
or
ret
push
add
add
mov
mov
rolb
shrb
mov
testb
iret
addb
aaa
jns
loope
ret
add
sarb
stos
sbb
push
ret
popf
xchg
mov
pop
add
jne
mov
sbb
sbb
repz
dec
outsb
add
iret
and
rcll
xor
pop
test
jns
mov
inc
pop
push
mov
ja
repnz
adc
cmp
adc
roll
jp
pop
outsl
dec
shll
dec
ret
add
inc
jbe
pop
sub
jmp
xlat
xor
push
and
outsl
and
cmpsb
addr16
mov
sbb
inc
stos
pop
fidivrs
add
or
push
test
les
arpl
cmpsb
sarb
push
inc
add
ret
mov
sbb
add
dec
fldl
sub
cld
jo
sbb
cmp
jp
xchg
sub
ret
xchg
filds
adc
cmpsl
xor
inc
lods
sbb
bound
test
pop
test
inc
xchg
mov
mov
inc
loope
mov
jp
add
pop
jo
and
or
ja
scas
cmp
int3
shlb
push
hlt
ds
cmp
or
dec
push
fs
es
jo
sub
push
inc
rorb
std
bound
jo
mov
cmp
outsb
cmp
imul
out
das
mov
adc
mov
mov
jp
ds
xchg
sbb
inc
mov
cmp
pop
rclb
shlb
xchg
gs
xlat
or
mov
lcall
or
jno
jp
cmpsl
sbb
fs
and
lcall
sub
lods
je
imulb
inc
mov
inc
xchg
je
cmpsl
mov
leave
arpl
in
dec
sbb
in
sbb
iret
mov
mov
ja
sbb
add
add
std
xchg
lock
xchg
out
scas
loop
jo
cmpsb
sahf
lock
push
loopne
pop
dec
imul
adc
flds
dec
push
push
mov
roll
inc
mov
add
outsl
sysret
decl
out
loopne
xor
mov
add
dec
xor
frstor
jno
ss
mov
int3
mov
mov
daa
lock
addb
dec
mov
ret
push
arpl
push
mov
mov
adc
mov
ror
or
add
adc
ds
mov
mov
and
jle
fcoms
sbb
push
add
scas
and
or
fisubrl
mov
pop
add
or
push
pop
inc
inc
add
mov
jle
dec
adc
frstor
inc
insl
jmp
inc
jge
sub
inc
adc
scas
inc
ficoms
movb
dec
fiaddl
add
jl
push
sbb
cmp
jne
cmp
push
xor
pop
into
mov
xchg
ret
es
xor
push
test
cmp
or
mov
fidivs
loopne
push
mov
cli
stos
dec
int3
xchg
adc
int
push
les
sub
mov
dec
in
lods
add
pusha
inc
ja
inc
push
cmp
sarl
mov
sbb
scas
push
push
out
shlb
sbb
or
xchg
scas
test
pop
sbb
add
lods
push
sti
adc
xchg
xchg
sub
dec
test
mov
inc
sub
inc
iret
loop
shll
out
shr
addl
repz
fsubs
rcrl
cltd
cmp
mov
push
pop
aaa
jb
cmp
xchg
cmp
gs
jl
mov
mov
aas
imul
mov
or
dec
and
lock
in
loopne
test
rcll
push
pop
bnd
sbbb
fadd
sbb
in
adc
lock
xchg
add
mov
push
aas
cs
pop
fcoml
pusha
or
inc
jge
inc
mov
pop
cs
push
push
mov
clc
mov
dec
sbb
inc
pusha
mov
cmpl
mull
ret
cmp
and
jmp
push
stc
push
push
rorl
mov
xor
sbb
xabort
pop
scas
mov
js
testl
cmp
cltd
stc
dec
hlt
js
pusha
xor
or
pop
inc
pop
bndstx
mov
inc
push
sub
popf
lods
mov
or
outsl
ljmp
xlat
loop
in
adc
push
xchg
cwtl
aas
pop
rolb
imul
sti
imul
icebp
loope
xchg
es
clc
inc
ds
dec
xchg
and
jmp
sbb
ljmp
sti
dec
repnz
mov
pop
inc
sub
jmp
in
add
xchg
mov
out
add
cmp
in
add
jno
outsl
adc
adc
push
pop
cmpsl
sub
xor
rorb
mov
out
dec
push
cmp
push
ja
imul
inc
stos
ficoms
fiadds
cmpsb
adc
icebp
mov
mov
add
movsl
enter
in
test
shll
ds
into
adc
add
iret
jle
sub
jb
cmp
pop
mov
addr16
lock
dec
adc
js
cmovg
cmp
scas
lahf
les
lods
mov
xchg
inc
js
call
out
inc
nop
pop
js
test
pusha
roll
adc
dec
fmulp
dec
frstor
mov
bound
sbb
into
clc
popf
cld
pop
mov
and
sbb
add
fstpt
pop
sub
repz
lods
mov
sbb
jp
les
mov
jge
and
shl
mov
and
jp
je
sub
and
add
jae
mov
popf
clc
jb
xor
push
mov
js
popf
arpl
push
out
loopne
psubd
inc
pop
adc
and
cltd
mov
and
inc
jl
icebp
sahf
add
ret
mov
xchg
mov
movsl
adc
inc
jmp
fiaddl
inc
ja
std
adc
js
ret
cmp
pop
sti
inc
sub
loop
push
arpl
popf
add
push
jns
ss
jbe
ljmp
xlat
stc
int3
push
mov
inc
add
cmp
mov
or
ds
das
pop
fcoms
and
dec
test
or
loope
add
mov
adc
jp
dec
mov
lahf
icebp
rorb
sbb
out
dec
notb
jge
push
adc
insb
andb
mov
cld
popa
jo
inc
dec
add
sbbl
roll
iret
sti
cli
dec
dec
xor
hlt
cmc
sbb
sub
jb
sub
mov
ficomps
mov
dec
sub
movsb
and
and
adc
xor
xor
and
xchg
pop
jb
xor
aam
ret
imul
dec
ret
push
pop
loop
pop
lds
xchg
push
addl
out
js
add
pop
push
nop
mov
adc
daa
push
xor
clc
and
pop
out
sbb
and
lods
cmpsb
loopne
push
outsl
xor
fidivs
fwait
xor
ss
jo
call
inc
mov
jl
test
std
sub
out
in
rorb
clc
inc
lods
add
add
ret
dec
dec
ds
ret
insb
cltd
out
fnstcw
xor
faddp
loopne
in
sar
loopne
sbb
pushf
iret
xor
xorl
outsl
and
push
mov
ficompl
mov
sbb
ret
mov
test
adc
add
mov
mov
loopne
int3
out
rolb
dec
push
add
push
xor
insl
daa
enter
add
fwait
pop
add
je
movsl
test
mov
imul
mov
cmpsl
or
cwtl
jmp
add
mov
fs
in
test
pop
jo
add
or
sbb
orb
outsl
xor
mov
lea
mov
or
lea
ror
in
lret
sbb
lock
pop
lods
popa
cmp
into
ret
out
divl
mov
mov
rcrb
loope
jo
inc
pop
sarl
xor
inc
daa
xchg
cwtl
insb
push
xor
sbb
inc
popw
cmp
xchg
in
cmpsl
into
out
hlt
or
aad
pusha
or
outsl
bt
push
dec
cmpsb
and
xchg
je
mov
inc
jg
ret
xor
sub
pop
mov
cmp
jb
mov
dec
dec
out
jmp
out
fldenv
cmpsl
shll
call
mov
pusha
cmpsl
pusha
addr16
jno
dec
aas
movsl
or
sbb
pop
loopne
cmp
push
or
dec
sbb
mov
cmp
pusha
cmp
xorb
lcall
loope
cmp
adc
scas
xchg
fisubrs
push
fisubs
clc
rcrb
sub
movsb
ret
inc
mov
mov
mov
bound
out
ret
mov
mov
rolb
ds
bound
jae
inc
adc
ds
rcrl
mov
roll
sub
inc
xor
inc
push
push
mov
or
adc
or
xchg
loopne
or
aam
scas
and
cmp
adc
jbe
inc
mov
jns
addr16
push
add
les
and
loope
mov
out
push
clc
mov
dec
cmp
lods
dec
mov
push
adc
mov
out
xchg
mov
pop
sbb
add
fisubl
adc
sub
jo
aas
pop
push
push
std
outsb
mov
stos
leave
push
enter
mov
enter
nop
add
push
loop
cmpl
ret
adc
sbb
mov
push
xor
js
mov
inc
sysenter
mov
test
push
jge
pushf
pusha
and
fnsave
or
xor
inc
sbb
and
inc
fmulp
or
xchg
ds
psubsb
test
pusha
mov
mov
add
xchg
pop
jbe
loopne
int3
mov
dec
orl
fcoms
loop
mov
ds
push
mov
xor
lods
orl
loop
and
inc
aas
xor
inc
roll
add
sub
pop
fstpl
enter
lods
aam
lcall
lods
mov
mov
aaa
jmp
test
cs
cmpsb
mov
mov
mov
les
fs
icebp
jl
fnsave
mov
mov
sub
mov
gs
ja
cmpsl
jno
sbb
inc
std
push
mov
call
mov
add
dec
pop
jp
push
adcl
sub
scas
stos
repnz
not
add
dec
mov
cs
pop
sti
mov
aaa
into
pop
mov
jbe
push
mov
lcall
rclb
add
mov
mov
sbb
lods
add
add
lcall
cwtl
hlt
dec
pusha
mov
icebp
mov
into
xchg
rorl
xor
movsb
movb
orb
jo
add
xchg
add
les
cld
mov
sbb
addl
test
jo
xchg
scas
int
icebp
push
mov
sbb
iret
or
test
mov
pusha
adc
push
mov
les
push
cmp
xchg
sahf
je
pop
int3
adc
push
fsts
pushf
mov
jb
mov
push
jmp
mov
ss
daa
fcompl
dec
xor
test
xchg
ja
mov
push
popa
outsb
testl
jnp
stc
pop
sbb
dec
adc
mov
movsb
push
inc
sti
rcll
sub
or
std
inc
mov
xchg
aam
pop
add
cs
mov
lret
xor
fldt
aaa
or
sahf
fistpll
sub
pop
add
cmp
lret
test
dec
lahf
shlb
cmp
sbb
loop
rolb
inc
inc
xchg
sbbl
cs
jmp
sbb
adc
inc
add
pop
xor
or
sub
mov
cwtl
cmp
cs
add
mov
imul
mov
sbb
and
mov
ret
adc
fucom
divl
sub
pop
mov
outsl
or
or
mov
adc
loope
mov
movsb
addb
mov
xorb
cwtl
xchg
cwtl
jb
mov
sarl
je
jg
fdivs
or
dec
push
xor
mov
inc
icebp
insb
or
std
sub
inc
mov
ret
outsb
or
mov
adc
insb
fisttps
mov
fildl
test
sbb
rcrb
dec
je
mov
jb
cmpsl
mov
or
pop
in
and
push
icebp
jge
xorb
jnp
or
or
sub
mov
packssdw
push
jnp
cmp
jnp
jno
out
jp
sbb
xor
mov
jp
loop
push
fistps
js
add
mov
aad
sbb
sbb
pushf
fdivrs
mov
add
mov
adc
sbb
cltd
je
jb
mov
dec
mov
rclb
add
dec
out
adc
sbb
and
inc
js
movzbl
dec
pop
and
sti
add
jl
inc
mov
sub
cmc
ljmp
inc
pop
in
mov
add
pop
mov
push
bound
jnp
popf
mov
popa
xor
push
sub
push
xor
test
mov
fcoms
stc
call
inc
add
dec
mov
pop
inc
pop
loope
data16
aam
sbb
sbb
dec
mov
dec
inc
outsl
fdivrl
pop
loopne
xchg
imul
sbb
mov
scas
push
xchg
js
movsb
dec
mov
add
inc
xor
in
pop
push
and
jmp
cmp
cmp
cmc
aas
sub
mov
cs
daa
push
mov
fcomps
sbbb
into
pop
lea
mov
cmpb
jne
mov
or
inc
adc
adc
push
or
jecxz
js
lock
aam
rcrb
jle
lock
aad
lea
addr16
mov
push
jmp
sbb
and
rcrl
dec
ljmp
mov
mov
push
inc
pop
mov
inc
xchg
call
es
add
ljmp
add
fadd
in
repz
push
jge
add
dec
rol
aaa
ds
xchg
add
xchg
pop
adc
ret
ljmp
in
out
in
es
popf
adc
xchg
push
test
inc
mov
cmpsl
jns
stc
push
jbe
mov
mov
aaa
lock
ffreep
ljmp
cmp
pop
cltd
mov
adc
or
stos
push
mov
mov
subl
fistpll
add
pusha
inc
insl
pop
pop
nop
shrl
mov
mov
popl
mov
icebp
xorl
xor
mov
adc
cs
adc
jp
add
sbb
ret
xchg
adc
jl
ja
insb
movsl
adcl
cmp
push
push
sub
leave
mov
mov
sub
sbb
xchg
dec
and
pop
mov
popl
call
xor
mov
mov
jbe
ss
mov
pop
in
pop
out
push
fs
mov
dec
stos
aam
inc
iret
ds
lahf
cmp
dec
adc
pop
mov
aaa
fildll
add
xchg
rol
adc
push
xchg
les
int3
mov
fbstp
sti
sub
scas
out
ds
mov
scas
xchg
mov
mov
dec
stos
mov
push
not
sbb
push
fwait
and
fstl
das
notl
daa
sbb
movsl
out
scas
fstl
scas
into
and
pop
mov
arpl
pop
nop
popw
negb
push
aad
push
iret
mov
dec
rcl
add
mov
ja
repnz
adc
pusha
outsb
inc
call
lret
cmp
fdivrs
js
hlt
lahf
out
fcoml
jp
sbb
loop
mov
jno
sbb
mov
or
mov
mov
test
inc
ret
add
dec
repz
xchg
push
adcb
fsubl
aad
fidivrs
fildl
push
sti
loope
cwtl
mov
js
orl
cmpsl
ljmp
inc
add
orl
inc
lods
jmp
adc
enter
sub
icebp
sbb
cmp
lock
outsb
cld
cltd
dec
mov
xchg
pop
push
xchg
dec
scas
sbb
roll
aas
mov
cmpb
cs
dec
cmp
mov
sbb
add
js
dec
pop
les
mov
adc
and
clc
shl
mov
or
mov
pop
mov
xor
inc
and
add
mov
lret
sub
jge
jae
and
pop
lret
ja
xchg
mov
inc
je
xor
add
movsl
sub
or
gs
mov
xchg
push
add
jo
dec
mov
pop
ret
sub
arpl
sub
adc
add
rcrb
xor
or
test
inc
sub
jnp
iret
ja
mov
pop
push
rcl
sub
aad
push
jbe
mov
add
push
ds
adc
cwtl
mov
fs
test
adc
ss
jmp
mov
push
ret
mov
or
mov
xchg
ret
and
in
adc
cmc
in
xor
mov
add
ret
ret
jnp
jne
or
sahf
fiaddl
inc
ret
out
add
lds
xchg
mov
in
popa
and
dec
aam
mov
cmp
sub
imul
icebp
test
in
xor
sbb
shll
ret
and
push
mov
mov
jp
pop
inc
fs
test
pop
jnp
dec
mov
fisubl
ret
push
scas
ret
ja
outsl
cwtl
mov
in
icebp
cs
mov
push
lods
pop
dec
sbbb
insl
lods
lods
adc
scas
rorb
add
or
jno
or
lods
les
push
mov
sti
pop
mov
jecxz
ret
mov
pop
jl
mov
and
repnz
jmp
add
jae
sbb
loopne
in
ja
pinsrw
push
loope
cmp
and
add
movq
out
in
in
add
add
add
cs
mov
loopne
fdivs
and
loopne
dec
pop
mov
cmp
and
jae
xchg
arpl
add
mov
jae
icebp
and
push
pop
pop
psrlw
mov
or
aam
dec
sub
lea
mov
aaa
xor
jecxz,pt
pushf
add
addr16
push
fsubs
mov
cmp
inc
xchg
jb,pn
mov
stc
mov
scas
dec
rorl
std
arpl
arpl
inc
test
js
ja
add
adcl
mov
nop
mov
push
add
dec
insl
pop
pop
adc
dec
mov
dec
arpl
adc
movsl
icebp
push
fiaddl
aaa
in
dec
xor
dec
push
sub
sti
push
lock
rcrl
loope
pop
push
ljmp
js
add
movsb
ficomps
sub
aad
movsl
test
sarl
push
pop
pop
cmp
inc
and
fsubrs
or
mov
pop
jecxz
imul
xchg
jge
adc
js,pt
sub
ret
outsl
jmp
push
mov
dec
sti
ja
xchg
fwait
int3
mov
jecxz
dec
jo
xor
sub
sti
push
push
push
divl
cmp
fcoms
sub
test
pop
es
lock
ret
add
inc
mov
mov
push
dec
loop
bnd
push
enter
push
cmc
pop
ds
in
addl
jbe
pop
jecxz
pop
addr16
or
adc
imul
push
icebp
mov
sahf
fdivl
xor
and
dec
add
movsl
icebp
jb
adcl
cmp
popa
add
out
dec
sbb
xor
adc
arpl
mov
dec
out
ds
fadds
sbb
loope
rcrb
jmp
xchg
inc
jb
push
test
subl
repz
pop
iret
insl
mov
xor
les
shlb
add
or
adc
xchg
ret
test
xor
push
aaa
loope
mov
pop
sub
sbb
cmp
pop
mov
mov
rcrl
rcrl
mov
rorl
subl
aas
arpl
fistps
test
aas
shll
addr16
hlt
sbb
cmp
or
enter
mov
sbb
xchg
lds
jmp
int
push
imul
ds
push
aam
fcom
call
jl
sub
jo
arpl
ffreep
jo
mov
mov
sbb
mov
push
dec
shlb
movsl
push
adc
stos
adc
mov
cmc
jb
add
add
sbb
sbbl
adc
dec
inc
je
out
andl
fsubl
xchg
sbb
andl
pop
fnstcw
inc
lds
jae
dec
lea
mov
ljmp
decl
add
mov
sahf
mov
inc
inc
pop
imul
mov
pusha
inc
loope
mov
imul
xor
lds
shlb
sub
jl
add
dec
movsb
out
xor
xchg
mov
cmp
mov
cmc
or
and
jns
cmpsl
mov
adc
mov
fisubrl
test
or
mov
push
inc
mov
pushf
xlat
aaa
push
jl
push
push
pop
xor
dec
xor
push
dec
rclb
sti
repnz
pop
in
add
gs
cmpsl
test
add
adc
ja
rolb
mov
dec
fwait
add
inc
ja
xor
shl
data16
pop
gs
mov
sub
repz
sbb
loopne
add
jo
incb
lods
dec
jo
pushf
add
fsubs
jbe
jmp
test
add
dec
inc
loope
je
imul
insl
lcall
push
or
add
cwtl
into
inc
les
into
push
xchg
fdivl
fisubs
jbe
scas
adc
adc
dec
adc
xchg
mov
enter
mov
jne
or
lods
cmp
dec
sbb
mov
repz
add
xor
sbb
loopne
gs
or
or
inc
xchg
push
sub
dec
inc
pop
dec
sbb
sbb
cmp
mov
push
lcall
and
loope
jo
idivb
jo
sub
enter
fsts
jmp
movsb
outsl
sahf
lcall
add
jle
jbe
xor
cs
mov
or
std
leave
nop
push
dec
cmpsl
movsl
mov
dec
scas
into
in
pop
movsl
mov
sub
mov
add
test
lea
push
lea
fdivs
rcrb
sbb
pop
push
xchg
out
adc
sbb
mov
bound
adcl
pop
xorps
sbb
faddl
mov
xchg
les
ds
push
add
mov
cltd
mov
push
pop
pop
dec
mov
pop
adc
test
dec
gs
clts
cmp
cmp
rcrl
repnz
add
xlat
xor
sbb
pop
mov
mov
enter
jbe
pop
sbb
inc
sbb
mov
adc
inc
addb
dec
add
or
sbb
add
loope
pop
mov
testb
add
mul
sarb
push
mov
jo
repnz
gs
and
jne
rorb
add
inc
addr16
mov
xor
lahf
aam
mov
fs
lea
mov
mov
sub
faddl
pop
add
lea
js
or
aaa
sub
add
mov
add
outsl
rorb
mov
add
xor
shll
cmpsl
mov
ja
fldcw
sub
cmp
ret
mov
mov
inc
pop
jb
jb
or
jo
ds
xchg
js
bound
sbb
add
lods
test
sbb
mov
add
lret
add
bound
loopne
cmp
in
xor
mov
test
inc
hlt
adc
dec
mov
pop
dec
lret
mov
cmpsb
adc
sub
xor
or
sub
inc
push
and
or
push
pop
jmp
mov
and
sbb
testl
cmp
jo
xor
inc
divb
push
out
xchg
add
outsl
or
and
lahf
add
rcrb
jbe
insl
xchg
sub
arpl
pop
mov
add
dec
sbb
imull
xorl
adc
ss
adc
adc
addr16
lret
repz
movd
dec
push
jno
and
call
jb
pop
add
rcrb
jmp
cmp
fnstsw
mov
arpl
sbbb
and
xor
sub
mov
inc
mov
sbb
dec
jmp
add
cwtl
jecxz
call
test
push
add
push
mov
mov
popa
dec
jae
test
mov
xor
inc
push
mov
sbb
sti
in
add
mov
shll
adc
jnp
mov
outsb
lds
cld
pushf
dec
mov
dec
cmp
hlt
push
xchg
fwait
mov
shl
mov
inc
jnp
or
adc
hlt
rorb
ret
jo
ret
or
adc
popa
or
and
insl
add
mov
pusha
fs
pop
sbb
mov
jno
ljmp
xor
pop
sbb
ja
xor
mov
mov
mov
cmp
hlt
or
pop
jne
mov
jbe
mov
sub
outsl
mov
push
and
mov
les
jno
icebp
adc
cs
rcll
mov
inc
loope
mov
jo
jl
gs
sbb
push
in
jge
int
shll
jae
into
ficoml
addb
lds
xchg
faddl
and
jcxz
jge
add
lds
adc
inc
adc
sbb
dec
call
dec
popa
addl
ja
xor
mov
imul
push
mov
lea
int3
ja
movsb
and
sahf
or
xchg
sbb
dec
nop
add
pop
test
call
xchg
pop
arpl
push
lea
stc
inc
cmp
mov
add
add
or
iret
pop
test
cmc
push
ds
sub
dec
jge
sub
imulb
add
cmp
and
bound
push
movsb
mov
push
dec
stos
lods
cmp
xchg
xlat
pop
sub
mov
loope
test
dec
inc
jae
mov
ds
jl
daa
je
or
push
fs
add
cmp
nop
in
insl
inc
add
dec
je
daa
xchg
enter
lret
sub
and
and
dec
imul
push
and
inc
inc
mov
or
sbb
inc
mov
xor
or
xchg
push
je
push
inc
sbb
mov
fcomps
adc
push
scas
mov
or
stos
lods
mov
popa
xchg
movb
test
dec
ret
dec
sbb
dec
mov
scas
mov
xchg
or
jnp
std
adc
mov
push
out
sub
addr16
jno
mov
test
xchg
ljmp
mov
xchg
pop
insl
push
or
push
fnstcw
call
and
daa
sti
mov
pmuludq
pop
ficoml
xchg
sbb
movsl
jecxz
and
test
inc
repnz
ss
sub
cmp
xor
mov
sbb
mov
leave
loopne
cmp
pop
push
push
pop
dec
mov
and
movsl
test
mov
adc
dec
dec
add
imulb
aaa
enter
or
xchg
loopne
orb
stos
jae
fmulp
aam
loop
inc
sarb
addr16
or
fdivl
and
jbe
push
lret
mov
mov
mov
pop
dec
sub
xor
add
outsl
cmp
subb
repnz
jb
cmp
push
inc
inc
insl
push
ret
sbb
mov
notb
jle
test
jne
cmp
jb
sbb
jae
sub
les
das
adc
movsl
xchg
test
loope
jnp
int3
js
test
mov
gs
sbb
jns
outsb
popa
jl
xor
mov
mov
pmovmskb
pop
jl
cs
popa
fsubs
pop
push
stos
inc
cmp
sub
xor
sub
pop
pop
mov
inc
cmpb
adc
jne
cmp
movb
imul
hlt
cmp
jg
sti
dec
ret
mov
sbbl
repz
push
out
or
stos
ret
imul
fsubrl
cmp
rol
test
xorl
loope
lods
mov
ret
mov
mov
shrl
sub
pop
sbb
push
ficoms
mov
xchg
mov
sbb
iret
mov
and
pop
dec
push
mov
andb
add
jmp
aad
test
cmp
insl
fildll
and
imul
lods
sub
add
adc
sarb
inc
add
mov
invd
arpl
add
fcomps
test
inc
mov
loope
pop
adcb
imul
js
add
scas
xchg
inc
loop
push
push
arpl
xchg
push
mov
push
sub
pop
push
or
loope
push
sbb
xchg
in
pop
ss
mov
sub
sti
outsl
rorl
or
ret
inc
dec
jmp
dec
call
clc
xchg
repnz
imul
jne
adc
dec
jne
add
ficompl
jl
and
scas
jp
movlps
or
push
mov
data16
mov
lahf
daa
add
sbb
mov
add
dec
pop
and
hlt
cmp
sbb
lods
mov
test
xchg
sahf
out
add
jno
push
fcoml
loop
into
inc
cmpsb
fiaddl
jns
sub
inc
hlt
mov
or
imul
sbb
mov
push
and
test
lret
sarl
loop
mov
push
mov
inc
cld
jl
movsl
push
jg
cmc
adc
push
sbb
cmp
xchg
rclb
mov
add
sbb
imul
bound
push
pop
pop
aaa
aam
les
mov
nop
pop
lods
or
dec
dec
fidivrl
jnp
dec
or
mov
xchg
add
sbb
push
adc
push
jo
jbe
lret
outsl
jb
cmp
inc
lods
push
adc
out
ror
aad
or
jp
ret
jmp
lea
or
aaa
sbb
iret
cmp
or
pusha
sbb
adc
or
shlb
fidivrs
sbb
lret
mov
or
jge
push
pop
jmp
inc
punpckhdq
inc
xor
lock
fdiv
dec
mov
mov
push
mov
dec
xchg
outsl
inc
adc
add
mov
and
mov
pop
dec
inc
cmp
sarl
out
adc
lods
pusha
lds
xor
pop
movsb
pop
xor
fisubs
xor
xor
cmp
lret
pusha
js,pn
adcb
rcll
fidivs
cmc
sahf
les
sub
add
mov
mov
jp
mov
sti
aam
cmc
push
nop
dec
pop
push
mov
test
into
sub
ja
fwait
and
push
push
mov
and
shlb
xchg
ret
push
xchg
ret
imul
inc
testb
inc
imul
dec
aad
cwtl
jne
cmovp
adc
lret
ret
call
mov
daa
pminub
xor
jle
jae
lret
or
mov
out
sbb
outsl
pusha
xor
and
mov
or
lock
push
mov
mov
loope
jecxz
enter
ret
adc
divl
sbb
outsl
sbb
cmp
inc
or
push
push
pop
loope
mov
add
ror
shll
lret
sbb
inc
std
or
int3
jo
dec
lret
mov
pop
sahf
pop
test
pop
jbe
hlt
add
je
ljmp
cmp
rorb
ss
mov
lock
jg
bound
xor
sbb
orb
push
stos
xor
mov
ret
sbb
pop
inc
seto
in
aam
sbb
dec
ret
dec
xchg
mov
jecxz
xchg
adc
scas
addl
sbb
aad
sbb
js
or
dec
test
adc
ss
or
adc
frstor
mov
jno
dec
or
jno
lret
mov
popa
or
pop
add
or
ret
movsl
dec
inc
mov
and
and
pop
mov
rcr
ds
add
fbstp
cmp
outsl
adc
or
or
ret
bnd
fwait
loopne
pop
add
lock
jmp
hlt
lret
adc
fwait
shll
jmp
push
stos
pop
pop
movsl
popa
inc
adc
es
inc
js
cmp
test
dec
stos
lods
insl
imul
out
mov
mov
ja
xchg
pop
je
movsl
mov
pop
mov
iret
in
outsb
dec
test
addr16
pop
and
mov
push
inc
mov
dec
pop
sbb
lcall
pop
mov
outsl
enter
pop
loope
data16
in
add
test
sbb
mov
sbb
int3
rcrl
cmp
adc
sub
rcrb
test
push
sub
cmp
popf
mov
adc
mov
push
scas
adc
pop
and
mov
adc
jmp
icebp
scas
sbb
fwait
mov
inc
mov
pop
sbb
fs
pop
aam
add
sbb
pusha
nop
lods
leave
test
push
mov
jmp
pop
cmp
aad
push
lahf
sub
out
xor
insl
call
pop
mov
cs
hlt
das
iret
test
add
inc
dec
add
pop
dec
xchg
sahf
insw
push
push
fsubrp
js
jnp
cmp
push
sbb
xcrypt-cfb
cmpsl
jecxz
loope
cli
xor
inc
xor
cmp
cmp
das
fildll
mov
and
inc
dec
mov
push
pop
test
mov
xchg
pop
inc
dec
pusha
push
sub
fwait
xchg
fcom
test
mov
cmp
add
imul
cmp
sbb
rcrl
fiadds
shlb
push
dec
rolb
ss
out
mov
ljmp
roll
dec
adc
sbb
adc
or
hlt
inc
and
cmpsl
inc
add
out
cmpsl
aaa
lret
add
or
stc
or
flds
movups
paddusb
and
jl
jp
inc
mov
xor
pop
outsb
lods
cmp
shlb
pop
mov
or
pop
adc
xor
sbbl
pop
or
xor
out
adc
mov
test
aam
je
jbe
push
jmp
and
and
adc
test
ret
popa
pusha
cmp
aaa
call
enter
jbe
and
pop
aas
ja
jle
xor
stos
or
xor
push
shrb
fidivrl
cmpsb
jl
ret
lahf
adc
bound
movb
sti
adc
add
sbbb
insl
add
add
add
adc
adc
and
test
test
mov
lret
pop
jmp
mov
aas
or
xchg
push
daa
movsl
icebp
and
or
leave
pop
pusha
fstp
push
or
pop
fs
mov
sarl
and
mov
fs
outsb
jno
sub
lds
mov
fcompl
or
lock
arpl
data16
jg
rcll
add
shlb
fdivrs
outsl
shlb
adc
loope
inc
pop
add
stc
icebp
mov
mov
fmuls
or
or
pusha
mov
or
xchg
add
adcl
or
ja
xor
add
sahf
popa
ret
cmpsl
int
orl
jo
jle
clc
ret
pushf
xor
jle
ljmp
dec
mov
orl
mov
in
add
sub
sbb
pop
or
shrb
pop
mov
lea
addr16
das
icebp
add
add
lods
add
xchg
adc
ds
sarl
mov
xlat
mov
xlat
xor
push
scas
xchg
or
sbb
stos
mov
repz
pop
or
movsl
add
jno
inc
add
dec
lods
pop
and
pop
adc
testl
bound
push
xchg
das
mov
mov
push
pop
lahf
sub
jno
pop
notl
repnz
pop
movsb
insb
xor
dec
int
sub
xor
mov
popa
test
movsb
inc
hlt
cltd
lds
rcrl
push
dec
lret
fwait
push
leave
movsl
lahf
xchg
mov
bound
pop
aam
add
cmpsb
mov
ret
mov
and
mov
lea
arpl
push
fcmovb
or
pop
js
cltd
xor
and
dec
jo
test
pop
mov
rorb
cs
aaa
add
mov
mov
mov
push
out
adcl
xor
xor
inc
lods
int
dec
pop
loopne
adcb
inc
orb
xlat
mov
inc
daa
aaa
mov
ja
test
jecxz
inc
ret
push
sahf
inc
sbb
dec
arpl
and
subl
xchg
loopne
stos
clc
dec
inc
mov
loop
sbb
pop
and
loopne
mov
pop
xorl
inc
cltd
jo
xor
mov
inc
repz
add
pushf
aaa
int
mov
rolb
jo
aas
into
test
ss
pusha
sbb
cmp
icebp
add
pop
dec
enter
xchg
mov
sbb
clc
add
fdivrl
xor
jl
mov
ret
xorl
adc
sub
mov
add
cmp
hlt
insb
cwtl
insb
pusha
popa
pop
mov
add
adc
arpl
icebp
andb
mov
xchg
or
daa
and
jge
push
ror
test
mov
push
into
inc
jb
addr16
mov
mov
subl
push
int
mov
inc
test
fwait
and
ret
pop
sbb
sub
insl
pop
push
mov
jg
je
imul
and
sahf
int3
mov
push
mov
call
fidivrl
pop
mov
jb
aaa
inc
ja
dec
stos
sub
sbb
push
pop
cwtl
pop
inc
shl
ss
ss
sub
sbb
push
mov
sbb
dec
mov
mov
sub
push
push
dec
lock
inc
mov
stos
push
push
loopne
jp
sbb
sbb
sub
iret
addb
push
loopne
mov
mov
jl
fsts
ds
les
jo
jecxz
cmpsl
fiadds
inc
decb
fcoms
xor
lock
add
adc
loopne
sbb
sbb
inc
enter
xchg
xor
lea
mov
dec
jp
inc
mov
fcomps
ss
or
cmp
jne
insl
icebp
popf
mov
das
arpl
add
mov
shlb
mov
popf
inc
call
jns
scas
adc
xchg
fists
xchg
mov
xor
xlat
ljmp
mov
icebp
outsb
add
rcl
shrl
lds
out
mov
push
cmp
sbb
and
cmovg
pop
sbb
mov
mov
xchg
rorb
addl
stos
test
ret
sbb
pop
sbb
add
aad
enter
addr16
lock
nop
push
cs
add
aam
inc
add
test
add
sbb
pusha
inc
sbb
jno
mov
fwait
cmp
popa
insl
jl
mov
add
sti
imul
mov
add
popa
movsb
mov
ds
add
cmpsl
or
sbb
dec
in
add
mov
add
loope
loopne
jp
sbb
jb
jmp
inc
dec
orl
fwait
add
pop
addr16
js
ret
in
cmp
nop
movb
dec
das
or
jae
hlt
and
rolb
mov
sbb
sahf
aaa
xor
lds
outsb
ljmp
mov
jb
inc
sub
cwtl
loop
add
mov
sbb
rcll
cli
xor
mov
mov
loope
imulb
shll
mov
pop
ret
sbb
cmp
sub
icebp
hlt
popa
leave
cld
insb
jecxz
jmp
adc
cmp
push
movsb
iret
sub
inc
aas
lods
mov
sbbb
ret
inc
rcll
cld
adc
sub
push
leave
sbb
inc
jbe
or
cmp
std
dec
sbb
mov
pop
xchg
icebp
lock
add
fildl
sub
test
jne
mov
out
lret
mov
mov
inc
frstpm(287
sub
jns
jmp
cld
sub
pop
inc
xor
lods
cmc
repz
hlt
mov
cmc
or
jge
dec
sub
xor
nop
xor
outsb
loop
daa
mov
and
xchg
adc
loope
cltd
test
or
nop
add
mov
xorl
mov
test
movb
push
sti
cmp
add
add
jo
rolb
sbb
sti
inc
lock
sbb
shrb
sub
inc
dec
xchg
pop
or
mov
mov
inc
cli
mov
loope
test
sbb
outsb
shrd
push
push
movl
cld
adc
testl
xor
testl
iret
repnz
adc
lods
jno
mov
xor
sub
jo
add
push
stos
rorl
xor
outsb
stos
sbb
xor
dec
sub
cmp
jnp
inc
lea
push
pop
call
xchg
sub
inc
and
adc
cmpsl
or
and
mov
ja
pop
das
call
mov
mov
pop
add
aas
addb
push
lods
jp
loopne
adc
mov
orb
ss
pop
fsubl
rolb
stos
dec
lea
cmpsb
imul
outsb
mov
bound
loop,pn
out
mov
xor
xor
bound
test
push
shrb
jp
pop
ret
mov
lods
in
mov
rolb
pop
sub
add
pop
xchg
push
sbb
push
imul
sub
and
push
in
cmp
jnp
pop
shl
adc
jne
ss
imul
cli
ret
cmp
adc
fldl
mov
pop
imul
test
test
dec
adc
hlt
sbb
add
xor
sbb
orb
movsl
adc
daa
sbbb
xor
movsb
cmpsl
push
rolb
jle
imul
add
subb
jmp
and
and
dec
rcrb
cmpsl
or
les
mov
fidivl
pop
aam
adc
pusha
xor
push
sarb
mov
aam
or
pusha
push
leave
xchg
in
add
sbb
cwtl
pop
jbe
mov
and
psubusb
in
xor
mov
dec
pop
ret
mov
jp
inc
or
aas
add
add
or
xor
dec
cmp
inc
inc
and
adc
jb
dec
fmuls
imul
adcl
add
push
cmp
mov
mov
add
mov
js
aam
xchg
in
ds
push
jbe
push
sahf
sbb
cmp
cld
mov
xorb
mov
fnsave
push
pop
adc
jnp
mov
sub
cli
ret
pop
outsb
push
mov
cwtl
dec
sbbl
cld
nop
movsl
negb
adc
es
in
imul
mov
mov
sub
movsl
das
popa
sub
inc
imul
cltd
or
mov
mov
lret
lock
push
cld
inc
mov
movsb
xlat
inc
jnp
jg
enter
cmp
ret
sbb
cmp
sub
sub
jmp
cmp
pop
add
adc
jne
jnp
rcrb
ret
stc
test
add
xchg
mov
inc
sahf
mov
mov
pop
xchg
arpl
mov
stc
push
cmp
pop
push
mulb
pop
cmp
loope
xchg
fdivrs
push
dec
lods
fnsave
dec
and
pop
adc
sbb
cmpb
and
shlb
cmp
add
enter
mov
lds
or
pusha
jo
cmpsb
roll
xchg
or
mov
pop
and
lds
cmp
je
outsb
inc
das
sub
movsl
mov
mov
adc
mov
jne
xor
and
shll
daa
sbb
lahf
fisubrs
pop
sub
xor
int
mov
jp
mov
addr16
test
cmc
inc
mov
mov
ret
adc
push
enter
jmp
push
inc
lods
jo
or
add
loope
push
mov
sbb
pop
mov
add
push
repnz
xchg
orb
jl
adc
sbb
idiv
jo
inc
sub
pop
aam
cmp
inc
jb
inc
xor
data16
les
dec
mov
push
or
js
adc
or
subl
xor
push
pop
mov
iret
gs
inc
add
add
jl
int
or
or
jo
push
push
cmp
add
loopne
push
inc
lret
dec
mov
mov
mov
loop
lahf
inc
testl
jmp
testb
or
ret
dec
cmp
pop
xchg
gs
add
jb
cltd
je
inc
and
xchg
dec
add
pusha
add
icebp
ss
push
adcb
addr16
mov
mov
orb
and
lods
add
or
repz
mov
push
sub
sbb
push
sahf
jp
hlt
pop
outsl
xor
add
add
cli
pop
stc
insl
nop
aas
xor
rclb
dec
add
inc
pop
sbb
dec
push
xor
div
mov
cld
popf
add
les
mov
icebp
loope
xchg
lock
add
popl
int3
fwait
xor
mov
inc
push
jne
mov
mov
and
inc
inc
cmp
jo
add
lock
in
add
cltd
add
dec
out
adc
or
jmp
xchg
addr16
daa
pop
enter
dec
outsl
cltd
dec
adc
push
loopne
ds
out
test
pop
sahf
test
or
icebp
ss
push
mov
sub
in
add
fmull
movb
dec
push
pusha
add
ret
je
adc
mov
cmpsb
mov
xor
in
sbb
xchg
pop
into
add
add
pop
ljmp
mov
lock
jns
push
pop
dec
add
rorb
cmp
enter
cmp
fiadds
lret
xor
jbe
pop
cmp
xlat
stos
mov
cmp
xor
inc
dec
cltd
mov
ret
add
adc
ljmp
jns
andl
lds
mov
fs
xor
loop
rcrb
filds
add
int
fcomps
mov
jp
jo
adcl
sub
nop/reserved
ret
lds
ret
pop
pop
cmp
jecxz
cmp
pop
negb
xchg
sbb
cmp
cmp
mov
ss
mov
fldl
test
mov
cmpl
in
xchg
jo
shrb
push
inc
inc
jb
fdivl
adc
mov
sbb
inc
push
ret
js
sbb
sub
pop
sbbb
jns
pop
dec
fs
xchg
rolb
mov
adc
push
test
add
dec
ret
or
or
sbb
or
sbb
lods
cs
add
dec
xchg
xor
push
add
xor
xor
jno
das
mov
pop
repz
xor
push
bswap
xchg
add
stos
lods
ja
pop
clc
xchg
fs
jbe
jmp
in
into
pop
adc
push
push
subl
push
cmp
ss
cld
or
push
push
rorl
adc
adc
push
inc
fs
xchg
ret
in
movsb
ret
test
or
insl
adcb
xchg
cmp
test
addl
out
jle
out
add
lret
mov
or
inc
jmp
push
jnp
jae
jg
pop
in
and
fimull
cld
jo
jg
call
outsl
sub
in
xor
dec
movsl
loop
jne
dec
cs
enter
pop
inc
mov
ja
daa
xchg
push
pop
jo
adc
flds
xchg
aas
push
jge
lods
sarb
test
or
out
inc
jo
jns
iret
or
ret
sub
jno
jo
push
fistpl
je
mov
cmp
cmp
jl
cmp
sbb
xor
ficoml
call
inc
inc
lea
lea
lret
sub
adc
ja
mov
dec
int3
sbb
sbb
or
jbe
aam
xchg
test
imul
test
pop
les
jnp
gs
mov
inc
push
sub
jle
in
jb
lret
inc
dec
ss
jecxz
adcl
out
pop
stos
push
mov
mov
push
mov
enter
add
xchg
cmp
push
repz
xor
rorl
sahf
adc
inc
xchg
push
sbb
data16
xor
pop
fmull
cld
mov
es
lret
add
cmp
mov
mov
sbb
inc
stc
orb
jno
pusha
adc
mov
stc
add
pop
ret
pop
sbb
cmp
push
jo
ret
ret
scas
test
pop
cmp
add
cli
ret
jo
gs
jbe
ljmp
lret
and
or
stc
js
pop
pop
mov
aaa
dec
ljmp
testb
pop
or
add
add
scas
out
inc
and
jmp
iret
xor
aad
mov
and
sarb
jbe
dec
xchg
dec
sti
push
mov
fsts
or
pushf
xchg
xchg
and
mov
adc
sbb
push
and
lods
addr16
aam
test
and
data16
rorb
inc
push
test
dec
push
mov
sub
pop
rcll
push
rcll
aaa
into
test
shll
ret
roll
xor
not
inc
cltd
dec
mov
dec
or
in
dec
push
xor
loopne
add
mov
fmul
sbb
jmp
inc
adc
pop
jo
mov
nop
inc
pushf
icebp
inc
scas
or
repz
mov
pop
lahf
js
loopne
mov
or
jp
lds
or
cld
mov
pop
ret
ret
jbe
add
ljmp
mov
xor
imull
jle
stos
pop
call
push
sbb
addr16
test
test
je
andb
push
in
ljmp
or
jnp
mov
and
cmc
and
mov
stc
fsubrs
adc
mov
sti
dec
fs
add
add
std
dec
hlt
call
cmp
repz
shrl
mov
int
iret
int3
aam
xchg
jmp
iret
add
popf
idiv
add
aaa
icebp
sbb
mov
xor
call
push
or
mov
rorb
add
add
push
lock
cmpb
lock
add
sbb
add
mov
rcrb
push
or
add
adc
mov
mov
imul
rclb
xchg
add
xchg
add
pop
and
mov
cmpb
dec
push
inc
insl
or
sahf
mov
inc
cltd
rorb
nop
testb
mov
add
sahf
xchg
push
xorl
mov
pop
push
adc
mov
inc
pslld
ret
lods
or
add
and
push
pushf
xor
mov
gs
imul
mov
mov
mov
ret
push
fcomps
adc
fiadds
je
xchg
imul
scas
adc
add
pop
stos
inc
repnz
movsb
add
xchg
xor
dec
inc
jae
inc
pop
movsl
mov
add
jb
filds
and
xor
cmp
add
add
add
dec
mov
ret
add
outsl
movsl
mov
lock
mov
sbbl
add
lcall
sbb
inc
cs
or
or
sbb
lock
mov
mov
push
mov
jl
mov
rolb
jo
dec
push
mov
push
sbbl
cli
cmpsl
dec
dec
or
or
push
add
dec
mov
iret
or
adc
rcll
xchg
movsb
or
daa
mov
ret
mov
sub
aas
push
sbb
pop
sbb
imul
adc
pop
or
shrl
sarb
cwtl
pop
enter
pop
inc
add
subb
xchg
adc
mov
std
pusha
pop
push
inc
add
inc
inc
fiaddl
jg
and
inc
lcall
cmp
mov
imul
int
pop
jle
add
cmp
daa
ret
add
jo
lret
push
pushf
mov
incb
cmc
dec
rorb
ss
cmp
dec
sbb
dec
ds
test
addb
jne
cmp
adcb
jp
mov
shrb
ljmp
sbb
adc
mov
and
clc
cli
and
sarb
mov
add
jmp
dec
cmp
lods
inc
jo
enter
lock
enter
push
adc
aam
dec
sbb
and
sbb
popfw
and
cmp
sub
addb
insb
dec
adc
xchg
stos
sub
rcl
ljmp
cmp
jge
dec
mov
jae
or
push
pop
js
enter
out
jbe
data16
lahf
imul
add
mov
inc
icebp
mov
sub
dec
and
inc
sbb
orb
into
ficoml
xchg
adc
or
push
loopne
xchg
test
mov
hlt
lock
jge
sub
cwtl
xchg
push
dec
mov
adc
hlt
sbb
mov
add
mov
movsl
movsl
dec
test
pop
loop
xchg
hlt
pop
inc
dec
mov
pop
add
jge
or
out
add
mov
js
ss
ljmp
sti
jb
fs
mov
je
cli
call
pop
add
enter
sahf
push
and
outsb
xchg
lods
push
cmpsb
and
js
pop
cmp
xchg
mov
lea
sbb
dec
popa
mov
mov
mov
cmp
xor
mov
insb
sbb
sbb
addb
mov
xchg
dec
sbb
sbb
xchg
lret
int
hlt
xor
movl
arpl
addr16
frstor
in
jnp
mov
xchg
clc
call
mov
out
cmpsb
adc
into
aaa
cmpb
test
add
mov
test
jb
cmc
cmpb
movsl
enter
mov
sbb
mov
mov
mov
mov
mov
and
cmpsb
push
mov
jb
popa
repnz
std
sti
sbb
jecxz
in
les
arpl
cmc
mov
push
xchg
mov
pop
push
xor
pop
or
test
in
inc
or
dec
mov
frstor
or
mov
hlt
add
popf
or
mov
cwtl
push
mov
scas
push
add
adcb
adc
negb
cmpb
mov
sub
je
xor
js
xor
adc
cmp
sbb
dec
stos
mov
push
das
inc
jae
pop
xlat
jmp
jb
in
inc
pusha
popa
les
sti
lret
lock
push
push
push
push
pop
addl
xchg
sbb
cmp
xchg
sbb
or
outsl
cs
aas
add
jb
pop
jbe
push
jmp
or
dec
pusha
jb
mov
lods
out
aaa
add
sbb
mov
out
sub
mov
sbb
lock
aam
mov
data16
das
xor
out
xchg
mov
pop
movsl
push
xchg
loop
or
mov
sub
sbb
sarl
aas
sbb
and
shlb
mulb
iret
jp
dec
adc
dec
sbb
sbb
push
sub
cld
push
cmpsb
mov
inc
sbb
or
stos
xchg
and
or
inc
pop
add
add
daa
into
je
mov
jmp
dec
push
dec
jmp
out
adc
mov
data16
mov
outsl
lods
int3
orb
add
or
loope
dec
call
dec
xchg
sbb
jnp
xchg
add
out
int
sbb
dec
mov
xor
mov
insb
cmc
icebp
pop
repz
cld
adc
add
pop
inc
dec
push
mov
ret
dec
aad
push
ret
dec
loopne
and
or
inc
sbb
in
aam
mov
lahf
cmp
adc
adc
xor
inc
in
or
imull
nop
clc
xchg
push
xchg
mov
and
adc
sub
push
push
imul
jmp
dec
jecxz
test
xchg
dec
sub
ss
mov
cmp
rorb
jb
out
ds
xchg
jmp
inc
fs
sub
popf
cmp
add
dec
cmc
xor
and
sub
test
dec
sbb
and
push
imul
push
data16
jns
jno
xor
lods
sub
cmp
cmp
xorl
call
jecxz
popa
std
pop
inc
divps
sub
arpl
xchg
popf
arpl
hlt
push
fwait
pop
mov
xor
bound
rol
dec
xorl
movsb
and
movsl
adc
push
mov
push
adc
test
subl
inc
adc
imulb
inc
xor
mov
or
mov
adc
nop
sub
lds
dec
and
mov
or
ds
jne
in
les
push
daa
jmp
mov
dec
dec
mov
int
push
in
lea
push
mov
js
add
push
mov
inc
mov
cmp
mov
dec
stc
push
test
jge
add
movsb
gs
in
add
bound
fildll
adc
sub
imul
mov
aam
push
adc
mov
push
cmp
xchg
adc
xor
adc
movsl
lea
or
sub
movsl
push
in
test
ja
imul
and
jns
mov
jno
jo
das
jmp
ret
cmpsl
push
rorb
xchg
dec
orl
imul
pop
jb
xchg
mov
imul
mov
push
js
mov
xorb
cwtl
add
jmp
push
xchg
sbb
add
ret
lcall
mov
push
sarb
mov
orl
ljmp
decl
pushf
cltd
mov
xchg
leave
orl
jp
and
add
add
add
scas
pop
push
inc
pop
dec
dec
cmp
adc
pop
pop
or
mov
or
dec
das
into
fdivs
bnd
fisubl
add
cmp
sbb
and
push
add
mov
dec
mov
lea
shll
dec
imul
xor
sub
pop
popa
lret
insl
sub
xor
rcl
ljmp
movsl
mov
loop
inc
sbb
movsl
add
mov
mov
sub
mov
call
mov
xchg
dec
sahf
out
enter
pop
lods
push
add
out
xor
aam
stc
xlat
mov
pusha
xchg
add
sbb
push
fcomps
pop
sti
and
movsb
test
xchg
dec
sub
mov
rolb
mov
cmp
dec
sub
add
xchg
sub
add
mov
sbb
aaa
jno
roll
push
subl
sbb
xlat
pop
cmp
sbb
or
sahf
pop
mov
xchg
iret
sub
xchg
cmc
je
cmp
jbe
push
imul
xchg
enter
out
lock
push
rcrb
clc
mov
jo
inc
pop
dec
and
sbb
inc
hlt
inc
aam
jl
arpl
xchg
push
andl
les
xchg
push
lods
ror
xor
cmp
jecxz
push
push
packsswb
insb
imulb
in
cmp
cmp
push
mov
lret
ljmp
pop
sarl
into
add
jmp
imulb
ret
movups
mov
stos
sub
cmp
jecxz
sbb
adc
rcrb
xor
cmpsb
fwait
pop
lods
push
lds
fwait
mov
pop
leave
mov
xorb
subb
adc
outsb
dec
ja
repnz
add
inc
cmp
bound
in
popa
aaa
enter
sbb
cmpl
addr16
pop
cmp
and
xchg
and
in
adc
add
pop
sbb
lods
into
jg
mov
adc
cmp
xor
cmpsb
mov
xorb
rcrb
aaa
dec
nop
movb
lods
sub
dec
jle
jecxz
and
or
push
cmp
jb
jecxz
add
cltd
cmp
sbb
pusha
mov
or
je
test
mov
fcom
xlat
and
mov
add
bnd
es
cld
shrl
add
fwait
xor
and
or
push
ret
cmp
ljmp
add
jb
repz
test
inc
mov
mov
shrb
push
rcl
jno
dec
xor
mov
and
mov
aaa
xor
mov
jnp
sbb
sbb
xor
push
and
push
subb
imul
cmp
popl
push
push
popa
jno
pop
push
xchg
insl
xor
push
sbb
xchg
lea
fwait
clc
jo
pop
cmp
sar
jmp
shld
mov
mov
aam
mov
arpl
movsl
sub
and
dec
subb
add
cmp
dec
jecxz
dec
mov
cmpsb
xlat
in
mov
mov
jns
ljmp
int
lret
fimull
xchg
lret
sarb
jecxz
xchg
xor
mov
test
js
aas
movsl
xor
lds
pop
inc
gs
mov
pop
gs
xchg
leave
sahf
inc
and
push
fwait
sbb
mov
push
stos
shlb
pushf
xchg
sbb
aad
push
stos
dec
test
lock
mov
jb
fsubl
gs
bound
sbb
enter
lea
add
test
divb
test
in
mov
jmp
dec
ret
imul
rclb
sbb
stos
sahf
dec
insl
and
cmp
lret
iret
jle
in
or
and
push
or
push
mov
nop
dec
pop
adc
or
and
clc
cwtl
push
mov
into
stos
and
lea
aam
cmp
dec
sahf
inc
mov
pop
push
in
mov
out
pop
xchg
jl
xchg
xchg
in
mov
cmp
mov
and
xchg
add
test
cmp
and
lods
lcall
push
pop
je
loop
sbb
mov
test
insb
aas
cmp
or
sarl
sub
icebp
mov
mov
aaa
clc
test
testl
jns
je
inc
ror
je
jmp
inc
cmp
outsb
notl
inc
test
push
orl
push
fisubs
push
dec
bound
aas
inc
adc
in
repz
ret
pop
fiaddl
ljmp
loope
je
jecxz
xor
movsb
push
mov
push
cltd
std
mov
incl
popa
and
pop
inc
pop
mov
cltd
mov
and
repz
mov
test
hlt
mov
pop
cmp
add
and
add
loopne
inc
inc
adc
ret
sbb
rcrl
in
je
in
dec
sahf
cmp
cmp
test
mov
insl
push
xchg
pop
rcl
cmpsb
add
fldl
ret
mov
aam
das
adc
pop
sbbl
jle
mov
mov
js
popa
adc
inc
add
sbb
xor
and
xchg
enter
mov
mov
mov
pop
jb
mov
ficomps
sbb
dec
add
mov
cmpsl
mov
lret
fcomps
or
fsubl
mov
or
call
or
mov
popa
sbb
push
inc
dec
test
dec
dec
sub
adc
mov
pop
jl
iret
mov
jmp
ja
xchg
sahf
shrb
or
mov
adc
mov
inc
and
sbb
loopne
push
int
mov
ds
push
add
dec
sbb
xchg
mov
sbb
lea
cmp
mov
push
test
jo
sarb
inc
sbb
inc
mov
test
scas
push
xlat
ret
sar
sarb
cmp
inc
cmp
sbb
xor
call
push
pop
cmp
nop
push
lret
jo
add
sbb
and
pop
xor
jb
xlat
add
or
shll
cmp
pop
inc
pop
out
cmp
fisubl
xchg
insb
xchg
cmpsb
out
push
sarb
mov
mov
pop
or
mov
or
nop
push
mov
lea
adc
fucomi
popa
push
sbb
dec
ja
stos
and
and
das
or
addb
stos
test
dec
test
fadds
push
xchg
sbb
fwait
ret
inc
add
cmp
mov
xchg
mov
push
fcomp
xchg
jbe
loopne
push
mov
call
pcmpeqw
mov
outsb
adc
outsl
cld
jne
aaa
sub
sarb
jne
rcrb
mov
jne
pop
or
dec
stos
dec
push
mov
icebp
pop
inc
push
adc
xor
sarl
push
iret
mov
and
add
and
pusha
rcrb
mov
rolb
rolb
outsb
pop
outsb
js
mov
dec
bound
dec
or
pushf
and
nop
xor
jo
in
or
inc
enter
push
aaa
xchg
mov
es
rcr
push
insl
mov
xor
sbb
pop
mov
xchg
cmp
dec
cwtl
and
popf
xchg
enter
mov
out
pusha
mov
adc
mov
xchg
mov
ja
mov
pusha
mov
sbb
push
xor
mov
push
sub
dec
lods
sbb
cmp
addl
ret
mov
mov
mov
and
fimuls
add
mov
cwtl
xchg
stos
movsb
push
sbbb
out
or
mov
stos
add
sbb
lcall
out
add
and
arpl
popa
cmc
push
mov
and
fistpl
add
add
inc
jmp
shll
mov
or
cmp
mov
push
xchg
pop
adc
inc
addl
inc
dec
pop
hlt
loopne
mov
xchg
push
shrb
or
loop
mov
shll
push
loopne
push
mov
sbb
mov
icebp
push
cli
dec
shl
lcall
fdivl
popa
inc
jecxz
adc
into
in
ds
push
pop
insb
cmp
mov
push
mov
add
mov
add
xor
test
fmull
push
xchg
cmp
pop
inc
mov
jo
insb
std
pop
mov
enter
imul
sub
adc
mov
pop
push
ss
ficoml
pop
lret
leave
mov
roll
add
adc
jb
xchg
sbb
cmp
mov
jo
lock
sub
out
cmp
sub
inc
cmp
dec
xchg
mov
xor
int3
pop
push
pop
or
push
aas
icebp
mov
imul
sti
pop
jle
lret
pop
mov
and
mov
mov
jo
jl
movsl
dec
inc
mov
pop
jo
mov
cmp
sahf
movsb
xor
inc
test
mov
rcr
and
fiadds
aaa
ja
cmp
mov
inc
and
insl
test
inc
or
mov
or
std
sub
push
dec
loop
mov
pop
mov
stos
add
mov
loope
jge
or
mov
lods
xchg
test
imul
mov
or
inc
and
jg
pusha
hlt
mov
dec
pushf
bound
icebp
sbb
jmp
aas
cmp
jecxz
adc
mov
mov
add
mov
sbb
pusha
sub
cmp
jno,pn
movsb
or
add
pop
lods
test
sahf
jae
arpl
inc
orb
call
sbb
icebp
in
adc
inc
or
inc
rolb
adc
into
dec
sub
jge
insl
add
cmp
add
test
daa
outsl
repnz
imul
push
jp
xor
popa
add
arpl
arpl
and
stos
gs
repz
cmp
push
or
sbb
in
and
fcmove
sbb
mov
cmpsl
pop
in
cmp
popa
sbb
adcl
mov
push
inc
pop
test
dec
int
jbe
outsb
lds
or
daa
and
mov
mov
ds
and
or
xchg
adc
es
push
sbb
jmp
add
pop
mov
insb
stos
sub
leave
shl
jbe
ss
lods
imul
jge
lret
rorb
fs
dec
aaa
mov
rdpmc
adc
adc
ror
xor
repz
or
pop
dec
push
xchg
rorb
imul
loop
aad
insl
add
rorb
imul
mov
add
mov
imull
shll
or
cmc
adc
sbb
add
sarl
outsl
add
frstor
push
push
scas
test
xchg
popf
lods
imul
pushf
push
or
mov
xchg
push
sub
pop
test
add
push
mov
inc
ret
xchg
mov
out
dec
outsb
inc
sub
mov
dec
fnstcw
dec
pop
xor
cmp
or
or
dec
mov
push
dec
test
pop
dec
fiadds
int3
std
testl
mov
cmp
xor
stc
mov
dec
or
mov
sbb
sub
sbb
and
popa
inc
add
add
loop
push
or
push
ljmp
ret
jno
inc
or
sbb
mov
or
dec
cmp
mov
ret
loope
xor
xor
dec
cld
and
pop
inc
jae
cmp
lea
jnp
mov
sbb
imul
mov
dec
pop
adc
shll
ja
inc
or
push
shlb
and
mov
cltd
sbb
jmp
outsl
xchg
mov
leave
add
adc
les
pop
pop
and
fisttps
sbb
pop
clc
add
in
arpl
dec
adc
daa
shr
hlt
pop
mov
imul
adc
and
push
pop
dec
aaa
pop
insb
xor
add
cmp
sub
cld
mov
gs
sub
sbb
cwtl
rorl
pusha
scas
mov
out
jno
mov
and
js
pop
and
shl
repz
in
mov
jg
cs
popf
cmp
mov
inc
and
dec
cli
lods
mov
inc
sub
add
add
push
adc
push
mov
sahf
cli
int3
push
insb
sbb
cmpsb
inc
pusha
inc
add
inc
in
gs
mov
lods
adcb
in
mov
imul
shll
pop
mov
sti
push
cmp
mov
ss
mov
sbb
push
aaa
xchg
mov
and
mov
push
pusha
dec
push
lret
test
jmp
mov
cltd
add
popf
outsb
xchg
icebp
ss
repnz
jmp
outsl
push
sqrtps
push
in
rclb
dec
cmp
je
inc
dec
clc
fidivl
lret
cltd
pusha
ror
lcall
cmpsb
cmp
sahf
imul
fnstenv
inc
pop
sub
inc
mov
movsl
xor
sbb
adc
enter
cmp
mov
js
test
or
daa
mov
push
fnstsw
push
push
jno
bswap
jge
add
jnp
pushf
xor
cmp
xlat
psrlq
test
xor
mov
pop
dec
ss
es
cmp
jmp
cmpsl
inc
loop
dec
lods
test
jg
xchg
dec
adc
xchg
mov
sbb
mov
inc
loope
orb
imul
rclb
sbb
sbb
enter
xchg
sbb
cs
gs
vmovhpd
xchg
rorb
mov
pop
fwait
push
ret
enter
out
not
ret
popa
or
out
sub
add
clc
pop
add
pop
daa
dec
and
movsb
add
xchg
mov
addr16
shl
mov
clc
lret
loop
lea
stos
mov
xlat
rcrb
jle
shl
xor
dec
jp
push
add
mov
add
fldl
fcoml
mov
mov
out
shll
mov
adc
js
lret
js
xchg
push
int
and
inc
movsb
add
imull
xor
leave
stos
arpl
mov
imul
push
sub
add
js
adc
out
inc
push
and
sub
in
mov
icebp
fwait
call
xchg
imul
xchg
xchg
rorl
fs
xor
cmc
push
movsb
clc
sbb
adc
in
mov
out
loop
sbb
sbb
sub
adc
cmp
sub
out
sub
test
sub
sbb
dec
pop
ss
pop
pop
rolb
pand
or
inc
imul
and
clc
pop
jl
mov
je
in
jmp
gs
fs
fstpl
sti
ret
mov
sbb
jmp
or
push
icebp
ficompl
bound
add
rol
aaa
xchg
or
cwtl
movsl
ja
pop
sti
pushf
adc
adc
cmp
lods
jmp
sbb
test
sbb
or
int3
sbb
jecxz
cli
repnz
ret
test
dec
rcrb
dec
or
enter
lods
ret
nop
add
popa
loope
xchg
mov
popa
jne
mov
bound
inc
addr16
mov
pushf
push
sarb
fldt
aaa
xchg
add
test
nop
jecxz
es
xchg
aaa
inc
or
mov
ja
arpl
frstor
sub
movsl
sbb
enter
lods
inc
rcll
xor
test
xchg
notb
stos
mov
dec
stc
cmp
push
adc
adc
jmp
mov
mov
dec
dec
pop
sbb
popa
cmp
add
mov
or
xor
push
add
or
mov
add
fistpll
faddl
jbe
js
scas
xlat
add
insb
decb
icebp
aam
incb
mov
lea
std
pop
bound
add
js
push
insl
mov
mov
pushf
fwait
push
imul
mov
shll
loopne
orl
xchg
loope
or
bound
test
imul
jns
dec
inc
mov
and
ss
mov
pop
inc
ljmp
xor
or
push
pop
jp
movsb
dec
ret
push
pop
mov
scas
adc
add
cld
adc
cmp
mov
popa
movsb
or
mov
dec
je
dec
gs
jae
shll
adc
push
lock
test
test
jp
in
les
loop
cwtl
orl
popf
sub
insl
xor
cli
or
sub
loopne
js
sub
adc
icebp
add
stos
cmp
shlb
fs
xor
fisubrl
in
push
pop
mov
dec
test
ret
xchg
push
out
fnstenv
sub
lea
cmpl
jle
jnp
cmp
dec
out
sti
push
enter
adc
pop
rorb
fs
ljmp
sti
pop
jnp
adc
loop
movsl
mov
cmp
out
cmp
js
sbb
sbb
adc
bound
ret
pushl
pusha
push
sub
jo
movsb
adc
xor
mov
mov
mov
jp
fldl
push
insl
mov
bound
lea
sbb
outsl
push
inc
fldcw
mov
xlat
pusha
lea
sbb
enter
outsb
dec
cli
stos
dec
inc
mov
loopne
inc
into
or
rolb
gs
jle
shr
call
data16
shll
xor
fcmovnb
cmp
add
lock
sbb
and
gs
adc
pop
cmpsb
dec
sbb
rclb
cmp
jbe
cwtl
loope
rclb
adc
or
int3
sbbb
and
sub
enter
mov
loopne
cmp
jecxz
adc
xor
or
or
in
bound
jno
test
shlb
scas
out
jmp
or
loopne
xor
les
or
jbe
mov
mov
or
pop
js
rol
xchg
and
adc
js
push
or
sarb
repz
pop
add
sub
sub
mov
add
jl
and
mov
lea
dec
jb
mov
push
insl
add
mov
movsb
inc
daa
cltd
arpl
cmc
jne
adc
inc
mov
stos
icebp
dec
inc
into
add
dec
mov
call
mov
jnp
push
sbb
sbb
xchg
fadds
clc
test
xorb
xor
mov
insl
dec
mov
xchg
sbb
mov
cltd
imul
mov
xchg
xchg
jle
xchg
dec
loop
mov
fildl
stos
jae
mov
add
das
jns
rcl
fucom
push
xchg
cmc
and
inc
adc
pop
arpl
fidivrs
cli
cmpsb
inc
push
cmp
jge
pop
cmp
cmp
mov
cmp
lock
and
pop
adc
leave
nop
out
sub
call
push
outsb
pop
lret
xor
lret
and
shlb
fwait
or
and
add
popa
sbbl
sbb
mov
shrl
icebp
add
jnp
dec
push
jmp
addl
xchg
ret
push
mov
mov
mov
sbb
xchg
mov
ss
daa
or
mov
sbb
pop
cmp
xchg
outsl
adc
mov
xchg
ret
and
mov
sbb
add
loopne
mov
sbb
lods
inc
loopne
xor
jmp
arpl
cmpsl
sbb
orl
jle
add
jge
jl
xchg
cmpsl
and
movb
jle
jp
fs
pop
and
jle
movsb
in
cmp
pop
or
push
pop
out
xor
add
cmp
std
jno
push
fs
jmp
pop
xor
sub
mov
ja
sub
insl
mov
ret
or
cmpsl
mov
stos
sarl
adc
add
movsb
add
das
repnz
xor
or
arpl
fstl
cmc
or
add
cld
lea
lea
jg
cmp
inc
push
sbb
adc
inc
and
jge
push
into
mov
add
and
dec
ja,pn
call
das
dec
nop
cmp
movsb
jno
jg
jle
sarb
lock
popf
mov
xchg
sub
sbb
imul
and
add
js
addr16
sub
aas
inc
imul
jmp
mov
imul
aam
dec
push
jnp
lea
mov
loope
popf
mov
mov
lcall
add
jge
aas
movsb
dec
jno
enter
rorb
lahf
add
mov
jg
xchg
sbb
push
jp
lods
sub
lods
shlb
mov
lahf
or
rclb
cmp
test
inc
mov
sub
loop
int
lods
pop
out
xlat
popa
in
roll
data16
in
ret
xor
fs
adc
xchg
cmp
pusha
lds
jle
sub
cmp
or
orb
arpl
add
mov
cmp
jle
xchg
cmc
sbb
pop
mov
sbb
xchg
xlat
inc
mov
mov
or
arpl
jne
daa
sbb
mov
mov
and
popa
mov
insb
jnp
sbb
pop
repz
xchg
fsubrs
out
mov
or
xchg
and
loopne
mov
add
imul
imul
jno
inc
sbb
test
push
cmpsb
and
cmp
loop
adc
mulb
sbb
rorb
sub
sbb
repz
ja
mov
jmp
sbb
jmp
pop
sbb
jl
ret
xor
cmp
and
lds
sub
sbb
add
mov
or
adc
popf
dec
cmpsb
aam
test
inc
sbb
stos
loope
pop
mov
cmp
add
subb
inc
sbb
inc
and
aam
mov
setle
or
inc
mov
jecxz
pop
inc
out
in
movsl
addr16
jo
sbb
repnz
mov
daa
rorl
adc
popa
in
inc
imul
sbb
mov
imul
pop
add
jge
in
mov
jle
in
jnp
stos
ret
bswap
xor
movsl
test
xchg
into
ss
mov
jae
aam
mov
rcll
dec
sti
pop
pop
loope
adc
test
push
xchg
or
mov
push
add
in
hlt
in
adc
jmp
sbb
inc
into
adc
xor
mov
adc
jno
imul
jmp
push
xchg
test
xor
jae
push
and
or
jnp
add
and
les
push
ss
mov
shlb
mov
push
in
loopne
push
push
jne
jl
inc
sete
push
mov
int
sti
push
pusha
rcl
mov
add
out
sub
loopne
seta
das
js
pop
adc
dec
or
scas
mov
andl
das
pop
outsl
inc
test
xchg
outsl
lods
xchg
shrl
pop
in
xchg
sbb
dec
jmp
adc
lods
mov
push
sbb
or
mov
popf
arpl
cmovo
sub
shr
andb
mov
mov
divb
mov
fdivrs
push
arpl
scas
xor
imul
sbbb
mov
orl
jecxz
les
inc
mov
mov
and
pop
xchg
mov
mov
fldt
dec
out
mov
das
fwait
pusha
repnz
adc
aaa
dec
jae
flds
cmp
aad
cmc
shll
lea
cmp
cmp
lods
nop
cli
adc
pop
insl
add
sub
mov
mov
add
add
mov
and
adc
or
fimuls
and
scas
xchg
je
sub
outsl
mov
in
dec
push
adc
mov
subl
lea
or
xchg
or
sub
add
cmp
jle
or
and
lods
jo
call
aaa
js
jcxz
sbb
push
and
iret
adc
mov
ss
inc
out
xchg
paddusw
push
lgs
daa
fsubrp
xor
push
rdtsc
stc
jmp
mov
cmp
pop
dec
dec
sbb
icebp
push
sub
lock
cmpsl
call
sub
push
dec
xor
pop
outsb
push
adc
mov
mov
popa
pop
push
mov
pushf
xchg
aam
pop
jnp
or
ljmp
pushf
inc
adc
cmp
mov
pop
mov
repz
leave
in
ror
mov
and
shll
subl
xchg
xor
lcall
cmp
sub
sbb
sbb
mov
lea
sbb
sbb
stos
mov
mov
lcall
out
ljmp
jmp
inc
sbb
call
decb
mov
add
add
inc
enter
jmp
xchg
fwait
add
add
add
rdpmc
xchg
cltd
mov
adc
jp
xchg
shlb
loopne
test
aas
fidivl
mov
and
xchg
lret
js
adc
cmc
pop
and
jp
in
push
pop
jmp
cltd
lock
shlb
inc
rorb
lea
call
lahf
mov
mov
and
fbstp
jl
xchg
invd
mov
add
jae
rclb
lea
sarb
jg
dec
sub
mov
sbb
sbb
mov
aam
mov
std
test
dec
imul
mov
lret
xor
mov
pop
and
mov
shl
cltd
stos
add
adc
es
sti
add
hlt
cltd
aam
subl
add
lret
das
jbe
jo
xor
movsl
cmp
popa
pop
ljmp
push
inc
movsl
test
je
ja
imul
imul
aad
or
and
ljmp
fsubrs
pusha
xchg
cltd
sbb
xchg
push
bound
add
lods
ret
les
mov
sub
rcl
mov
je
push
data16
push
cmp
push
dec
ljmp
ret
fcoms
mov
jo
cmpb
lods
xorb
rolb
arpl
test
out
iret
add
pop
mov
jp
lcall
ret
cmp
inc
mov
add
xor
xchg
push
or
fs
lock
inc
sbbb
pop
sub
pop
xchg
adc
mov
ret
outsl
mov
movsb
ss
test
pop
xchg
sbb
sbb
push
testb
in
sbb
add
cmp
cmpsb
sbb
cmp
mov
enter
scas
or
aad
mov
dec
push
outsl
loopne
push
out
sbb
ja
sub
ja
mov
inc
sub
gs
add
lea
xchg
insb
xchg
mov
add
scas
dec
insl
mov
adc
inc
pop
dec
arpl
sti
or
mov
or
in
int3
adc
inc
or
iret
cli
or
into
mov
dec
sbb
pop
xor
mov
or
xchg
inc
fs
inc
or
or
test
divps
add
cmpsl
jl
mov
mov
xlat
mov
push
lret
in
inc
hlt
or
je
and
dec
pop
ljmp
pop
lret
inc
adc
dec
add
movb
ljmp
push
mov
sarl
fildl
call
js
sti
out
or
pop
xchg
fmuls
sbb
outsb
push
mov
loop
test
push
jne
testl
push
repnz
or
push
dec
mov
adc
scas
rcl
loope
outsl
xchg
shll
mov
pop
xchg
dec
dec
ds
xor
xor
adc
mov
incb
mov
sbb
push
add
cmp
sbb
and
push
mov
outsl
imul
subb
mov
popa
jg
fisubrs
jl
or
aaa
test
pop
addr16
clc
jge
je
add
mov
rol
sbb
pop
pop
les
sbb
fstpl
add
xor
or
gs
rcr
and
or
adc
hlt
mov
out
xchg
mov
cmp
pop
and
sbb
mov
pop
xorl
push
add
popf
in
movsb
xor
dec
push
aam
add
mov
xchg
sbb
insl
xor
adc
ljmp
inc
lcall
fisubs
aaa
push
adc
das
add
push
iret
cltd
addr16
test
loopne
adc
xchg
shll
pop
jnp
push
pop
xchg
jmp
push
push
adc
test
adc
or
add
xlat
adc
popf
int
inc
xlat
loopne
inc
sbb
sub
test
adc
mov
cwtl
enter
popa
fs
add
stos
mov
sahf
fiadds
flds
cli
mov
imul
pushf
scas
and
dec
in
add
dec
push
leave
loop
sti
adc
fstp
lret
lea
inc
dec
cmp
and
inc
adc
inc
xlat
mov
int3
xchg
pop
daa
icebp
ja,pn
lds
xchg
enter
icebp
mov
mov
hlt
mov
push
addr16
inc
cmpsb
inc
sub
lahf
jnp
mov
pushf
or
loope
add
cmp
jbe
emms
pop
lea
bound
jle
xchg
xor
pop
xchg
nop
inc
sbb
test
shrl
sahf
add
mov
xchg
add
sahf
cwtl
xor
sbb
loope
insb
jo
add
pop
test
xchg
lret
inc
in
pushf
test
xchg
add
mov
jmp
xor
stos
ja
daa
aas
xor
push
push
push
and
std
xor
fidivrs
pop
inc
bound
mov
pusha
mov
ret
pop
push
push
xchg
scas
sub
mov
pop
lea
test
adc
pop
pop
and
sti
inc
add
push
push
sbb
adc
inc
and
out
xor
inc
outsl
push
push
or
je
jb
jae
xor
sub
iret
xchg
pop
push
adcb
cmpsb
fisubrs
sub
pop
shlb
outsb
inc
xor
ret
push
xchg
or
jl
orb
jns
pop
add
andb
pop
mov
mov
jae
mov
add
imul
adc
add
dec
sahf
dec
test
sub
jbe
mov
lcall
fsubp
outsl
lret
icebp
movb
in
popf
pop
push
xor
cmp
push
mov
xor
dec
lcall
or
loope
inc
cmp
push
ja
js
pop
ds
je
sub
or
xchg
nop
xchg
subb
icebp
adc
and
cmpsl
jo
mov
push
mov
mov
lar
nop
mov
ret
jae
mov
adcl
and
add
mov
lret
xchg
xor
inc
sbb
add
sbb
ret
xor
frstor
adc
add
cs
leave
mov
add
dec
faddl
ss
icebp
cmp
or
jg
push
and
lea
push
xor
mov
xchg
ljmp
push
pop
sub
call
loopne
jle
inc
insl
push
adc
sub
imul
scas
aas
xor
xor
shll
dec
and
hlt
adc
add
adc
add
out
sarb
jns
add
dec
call
movsl
rorb
or
push
cltd
jno
fisttpl
loop
inc
adc
cmp
loopne
mov
fadds
mov
xacquire
sub
add
cmp
daa
mov
sti
out
aaa
add
rcrb
shrb
inc
inc
imul
arpl
or
mov
cltd
pop
ret
mov
jge
cmp
pop
sbbb
dec
push
sbb
add
insb
adc
js
mov
push
insb
xor
xor
out
icebp
pop
ret
sbb
fwait
mov
inc
rcll
adc
mov
cmp
inc
mov
push
jecxz
popf
orl
jmp
mov
xchg
rcrb
movsb
jmp
push
ja
cmpsb
push
mov
inc
xchg
xchg
mov
sbbl
push
scas
dec
mov
rcll
sbb
rclb
cld
cmpl
fstps
jno
and
push
ss
int
inc
repz
xor
and
push
adc
into
mov
jae
mull
cmp
adc
jbe
dec
xchg
rolb
pavgw
insb
mov
fdivl
outsb
stos
outsl
xor
and
sbb
cmp
adc
inc
movsl
and
pop
test
pusha
xchg
and
jp
jno
mov
roll
sbb
push
loopne
ja
sbb
dec
xchg
fwait
dec
mov
xlat
jmp
ss
shrl
jae
mov
or
mov
or
inc
add
pusha
fs
pop
into
ret
and
sbb
ret
lods
xor
add
lods
push
or
push
dec
and
mov
insl
xchg
or
mov
and
shll
pop
and
fildl
jecxz
jg
dec
cmpb
push
or
pop
xor
rorl
jecxz
add
pop
ljmp
pushf
sbbl
pop
sbb
outsb
scas
or
aaa
imul
out
fcoml
pop
sti
cmp
push
lahf
xchg
pop
lcall
ljmp
ror
testb
mov
ficoms
mov
outsb
add
adcb
jno
popa
push
sbb
ds
pop
push
pop
shlb
insb
or
mov
dec
fstp
inc
test
jne
jl
mov
sti
mov
and
and
sbb
xor
sub
data16
cmp
incl
or
js
inc
cmpsb
insb
adc
add
pop
mov
jmp
inc
push
mov
mov
nop
lock
popa
shlb
cmp
push
outsb
and
and
cmpsb
mov
fbstp
insl
insb
mov
dec
add
iret
inc
dec
fmull
push
cmp
pop
xchg
enter
push
andb
es
lea
test
icebp
push
add
outsb
push
pop
add
sqrtps
mov
and
pop
push
lret
cmp
inc
sub
mov
inc
push
stc
aam
xor
dec
and
adc
loope
sahf
sbb
jne
rorb
jmp
in
mov
dec
dec
sbb
mov
lret
js
pop
add
mov
jne
lcall
and
enter
cmpb
xor
pop
sub
jmp
cmp
jmp
fcomps
shlb
add
dec
or
add
mov
andl
and
pop
imul
add
mov
ret
leave
add
cmpsl
test
lea
cmpsb
mov
xchg
xor
jne
sti
neg
out
pop
or
adc
inc
jl
push
adc
mov
or
enter
rorl
add
mov
pop
push
sbb
shlb
in
push
cmc
cmp
sbb
pop
jmp
lea
push
jg
cmp
mov
mov
inc
sbb
mov
cmp
lcall
dec
push
cmpsl
testl
std
mov
dec
call
fisubrs
out
dec
scas
and
imul
lea
inc
sbb
mov
lods
xchg
add
xor
xor
inc
cltd
stos
sub
clc
stc
out
sub
push
push
call
push
movsl
sub
or
loopne
cmpsl
mov
lods
pusha
lret
xchg
dec
mov
pushf
jmp
cmpsl
jns
movsb
jecxz
jns
xor
xor
gs
xchg
adcl
iret
add
cmpsb
push
xchg
icebp
mov
inc
mov
push
or
shlb
out
add
inc
jl
mov
sahf
pop
and
filds
jne
and
xor
stc
xor
and
outsl
loope
xchg
lods
adc
dec
imul
or
xchg
out
imul
cmp
and
add
and
and
add
adc
push
inc
outsl
mov
jl
cli
test
sbb
mov
psllq
dec
adc
or
repz
add
sub
insb
jg
clc
dec
imul
jo,pn
mov
subl
xchg
push
dec
ljmp
sbb
out
es
mov
mov
sub
adcl
outsb
rcll
add
adc
jecxz
divb
sub
loop
in
xchg
cmpsl
sub
adc
fwait
test
arpl
and
xchg
stos
outsl
sub
daa
andl
jle
inc
mov
push
lea
pop
xchg
or
popf
mov
push
stos
fidivl
adc
ja
xchg
pusha
shlb
add
add
or
mov
push
sti
xchg
xchg
loop
jnp
mov
pop
inc
adc
jp
add
add
sub
int
sub
imul
mov
lea
cmp
in
popa
pop
loopne
lea
mov
jo
sbb
cli
add
and
mov
sbb
dec
xor
cltd
adc
push
dec
dec
ret
pop
pop
mov
testl
test
jne
stos
mov
subl
mov
call
jp
jmp
xor
push
aam
jp
imull
jb
xchg
ret
mov
xchg
std
add
dec
push
push
lods
pop
mov
push
inc
push
je
xchg
into
inc
into
sbb
popa
mov
adc
jge
jae
add
jge
aas
rorb
sarb
xchg
add
xor
inc
int
pop
scas
lods
jbe
lods
mov
xchg
bound
jmp
pop
adc
push
mov
dec
pop
divl
xchg
cmp
mov
push
cmp
aam
cmp
imulb
test
daa
into
adc
add
sub
pop
push
push
inc
jecxz
jge
int
pop
pop
addb
jmp
fwait
mov
dec
fucomp
lahf
cmp
orl
inc
out
mov
roll
inc
inc
pop
fwait
shll
addr16
fisubrl
jg
popf
cs
xchg
dec
lds
in
cmpsb
sarl
or
inc
mov
xor
sub
or
mov
lea
add
out
xor
and
push
xchg
int
dec
adc
ficoms
pop
mov
push
pop
sub
xor
daa
adc
fwait
ss
and
movsl
into
pop
adc
adc
out
mov
lret
push
jg
dec
out
sbb
mov
mov
push
jecxz
call
jnp
insl
push
aas
jno
rolb
test
push
adc
stos
add
mov
lods
pop
jp
mov
push
inc
int3
out
addr16
jno
jno
loopne
testb
xor
or
ja
pusha
add
jl
add
dec
dec
mov
inc
push
jg
dec
push
push
push
imul
jbe
cmp
and
jo
shrl
adc
dec
dec
xor
push
sbb
adc
push
rorb
jbe
imul
lret
or
xor
ja
or
mov
adc
mov
push
jge
shlb
aas
xchg
out
sub
ljmp
and
and
add
out
xchg
inc
mov
pop
pop
pop
mov
mov
sbb
in
ret
jmp
mov
jae
jp
cmc
inc
test
or
mov
mov
test
push
push
es
fstl
dec
push
sbb
roll
or
dec
aas
or
icebp
add
jb
mov
cmp
push
xor
pop
inc
mov
mov
and
pop
ja
cmp
adcb
test
addr16
inc
ss
push
fwait
dec
adc
out
sub
jno
aaa
sti
das
rolb
push
add
cmp
shll
inc
jge
jb
inc
int
add
jae
cmp
psubq
mov
icebp
sahf
aam
shl
rcl
imul
dec
sub
lods
test
inc
inc
push
jg
out
cs
push
mov
or
pop
fwait
cmc
add
add
inc
js
sub
or
dec
test
and
ffree
test
pop
xchg
inc
dec
push
push
jecxz
cld
ss
les
cmc
ja
clc
sbb
push
dec
cmp
ljmp
sarl
cli
jae
push
jae
ljmp
psubb
in
jge
ret
outsl
or
adc
nop
sti
bnd
add
jne
jo
sbb
dec
bnd
aad
popa
mov
pushf
sub
test
pop
push
js
mov
fld
add
mov
sbb
inc
jge
lods
push
pop
cmp
sbb
sbb
xchg
inc
push
xchg
inc
bound
dec
cmc
adc
in
and
mov
add
sub
inc
add
mov
jno
repnz
fstpl
mov
roll
jmp
sbbb
pop
or
popa
into
test
adc
stos
popa
loopne
loopne
jae
push
adc
shrb
adc
cmp
or
popa
mov
popa
jns
dec
dec
out
adcb
lods
rcll
xchg
aaa
add
push
rclb
imul
int
sbb
test
dec
xchg
adc
adc
cltd
gs
push
pop
sub
xor
rol
xlat
push
inc
xor
ficompl
inc
idivb
test
jg
stc
test
lret
sub
push
pop
sbb
icebp
mov
rolb
push
xchg
mov
dec
fstpt
or
lret
cmp
movsl
arpl
xlat
cmpsb
das
insb
dec
lods
sub
add
cmp
mov
mov
insb
sub
dec
add
xlat
bound
data16
jno
mov
jge
push
pop
mov
inc
jp
xchg
movsb
cltd
xor
dec
xor
mov
je
std
sub
mov
cmp
roll
insl
dec
jne
rorb
jmp
inc
shlb
add
jp
pushf
mov
fildl
mov
sub
ret
popl
cmpsb
mov
lret
sbb
fisubrs
sub
shll
int
jecxz
sbb
and
ret
mov
and
sub
and
xchg
pop
ret
adc
dec
mov
aad
sbb
jecxz
mov
sbbl
jbe
iret
and
jecxz
in
or
pop
repz
adc
mov
addb
rol
mov
repnz
xchg
scas
push
inc
mov
jnp
je
lret
mov
push
dec
in
push
jno
addr16
lods
add
lahf
push
fstpt
cmp
icebp
movsl
test
ret
mov
repz
cmp
xor
add
int3
and
xor
out
xor
dec
mov
lods
mulps
or
push
gs
int
pop
add
pop
movsb
jecxz
add
mov
dec
dec
aas
pop
mov
add
cmpb
sbb
or
loope
inc
mov
iret
repz
fstp
pop
push
push
or
push
inc
pop
repz
sbb
mov
rcl
mov
or
bound
jg
lret
add
sub
xchg
inc
pusha
loopne
stc
imull
gs
sbb
cmp
xchg
lea
ds
scas
lahf
mov
dec
rol
xchg
add
and
add
arpl
sub
add
les
test
lods
and
inc
pushf
sub
arpl
cmp
mov
scas
xor
je
xchg
enter
addr16
pop
mov
jne
jge
mov
loopne
xchg
orl
pushf
ret
and
ss
out
je
jae
lea
add
scas
add
sub
push
repz
adcb
ja
addl
push
mov
dec
test
jns
push
add
xchg
int
lahf
dec
cwtl
inc
js
aad
insb
add
adc
inc
inc
and
js
fsubl
cwtl
js
movsb
int3
aad
and
sbb
xor
mov
pop
mov
mov
inc
mov
imull
sbb
jecxz
mov
cmp
inc
xchg
mov
std
pop
sahf
push
pusha
ljmp
dec
subl
and
mov
push
arpl
divl
lods
popa
add
xor
scas
mov
push
lods
add
push
mov
mov
aas
add
add
xchg
or
test
arpl
subb
outsb
push
adc
adc
sub
sub
cmpsl
pop
sbb
jecxz
jns
rorb
int
sarb
push
sti
jo
adc
and
mov
mov
call
inc
stos
add
pop
nop
repz
ss
cmpsl
aaa
jo
mov
mov
ss
or
jnp
lahf
add
pusha
sub
scas
mov
popa
inc
pop
pop
ja
js
inc
jge
clc
mov
pop
rclb
mov
ds
std
out
pop
mov
andb
filds
les
sbb
add
fwait
xorb
xchg
jp
xor
mov
repnz
inc
add
push
cli
loope
and
stc
cmp
jp
out
xor
jno
and
adc
fsubs
ja
stos
mov
pusha
jmp
test
sub
push
in
sarb
or
add
daa
mov
shll
dec
sub
dec
push
cli
sahf
stc
out
mov
mov
sub
sub
pop
push
test
movsl
sarl
mov
cmp
fisttpl
test
dec
loope
scas
imul
mov
mov
hlt
sbb
js
inc
aaa
mov
push
sbb
fadd
add
jecxz
fcompl
push
xchg
mov
inc
jp
lock
dec
pop
jle
fiaddl
add
add
inc
fcmovnu
inc
adc
bound
sbb
cmp
add
and
add
movq
xchg
jb
or
fsubl
mov
jbe
mov
jo
xchg
jae
rclb
add
jge
and
push
and
add
fldl
mov
out
pop
loope
fistl
jl
pushf
dec
add
push
dec
cmp
insl
fbstp
jo
sub
jns
push
push
jo
std
popa
shlb
adc
xchg
add
aam
push
scas
xchg
repz
ret
sub
mov
pcmpgtb
adc
call
loope
daa
mov
inc
daa
pop
ret
push
js
cmpsb
mov
and
xor
and
sub
push
loope
icebp
inc
bound
jmp
mov
ds
pop
movsb
inc
ljmp
icebp
insl
sub
sbb
add
andb
mov
fiaddl
jmp
add
pop
pop
mov
mov
nop
es
or
add
outsl
push
pop
rolb
sbb
jae
inc
add
sbb
mov
sbb
rolb
ficomps
sub
fxch
xchg
cmpsb
pop
cmp
sub
mov
or
adc
dec
aas
push
in
arpl
ss
sar
sbb
push
repz
popa
arpl
sub
shlb
push
xor
sub
mov
sub
jo
ds
movsl
cltd
lock
mov
aam
sbb
dec
adc
add
inc
mov
test
rcl
aam
and
adc
dec
or
cmpsl
test
mov
sti
pop
pop
mov
xor
arpl
dec
mov
data16
cmpb
mov
sub
xor
xchg
aad
jno
imul
fstpt
mov
lods
cmpsl
imul
inc
add
add
cmp
jns
popf
lret
and
sub
in
cmpsl
ret
sub
mov
ret
popf
fcmovbe
int
pop
ljmp
cli
or
shlb
sbb
jmp
icebp
sub
test
adc
insb
add
ret
mov
add
mov
pusha
inc
mov
sub
dec
mov
test
or
and
push
arpl
enter
mov
test
push
rcrb
rol
mov
bound
divl
insb
mov
ljmp
fucomp
xchg
jb
adc
leave
add
ret
adc
push
inc
imul
outsb
or
cltd
mov
or
rol
mov
sti
add
cmp
mov
loopne
call
add
arpl
add
nop
mov
test
push
mov
push
jmp
bound
test
dec
pusha
mov
push
ret
and
mov
jnp
add
sbb
loopne
sbb
sbb
fisttpll
mov
and
jmp
mov
mov
xor
push
cli
and
pop
pop
js
inc
test
fnstsw
ret
lock
adc
pop
mov
cmp
push
and
or
sub
fidivrl
xchg
jg
rolb
cmpsl
in
dec
fbstp
sarb
mov
cs
idivb
lods
cmp
stos
loopne
add
ficompl
lds
jne
inc
pop
inc
add
xchg
negl
pop
ljmp
aas
imul
mov
push
ds
pop
test
test
push
pop
push
cmp
call
pop
push
outsl
repnz
clc
lret
stc
push
shlb
dec
add
pinsrw
push
shlb
mov
dec
add
jmp
dec
or
int
xchg
pop
mov
dec
jno
xchg
add
pushf
dec
xchg
ret
cmp
xor
andl
push
xor
inc
sbbl
addb
mov
add
push
mov
into
sub
rcl
loopne
push
out
ret
sbb
loopne
or
xor
xor
mov
and
lods
mov
std
mov
lds
jno
and
xor
fiadds
hlt
sub
mov
add
fmull
inc
or
dec
icebp
je
cltd
adcb
hlt
inc
es
std
inc
sub
arpl
jo
inc
popa
xor
xor
mov
rorl
inc
imul
shll
push
test
bound
lea
adc
pop
and
ds
fdivl
mov
pushf
roll
or
push
pushf
mov
scas
adc
add
mov
leave
mov
outsl
jecxz
inc
out
mov
shlb
popf
js
lret
and
dec
mov
lock
cmc
cmpsb
fwait
mov
addb
xchg
push
inc
pminsw
pop
out
fldl
imul
loope
dec
dec
stc
rorb
sub
adc
gs
aaa
mov
lea
inc
jge
jne
aam
cli
dec
icebp
cmp
leave
lret
sbb
cmpsb
mov
or
enter
push
dec
push
sbb
sahf
cmp
push
jo
jb
test
test
xchg
mov
or
dec
push
lret
add
popa
mov
scas
jne
les
add
scas
movsb
je
loopne
push
movsl
clc
add
repnz
xorl
cmpsb
and
add
jecxz
and
mov
nop
xchg
xchg
xchg
adcl
push
sub
or
sbb
test
push
cmp
imul
loope
cmp
mov
dec
leave
push
imul
cmp
aas
repz
loopne
shlb
loope
push
mov
dec
jmp
js
jecxz
dec
mov
es
dec
scas
xchg
das
sbb
ret
jge
popa
in
jmp
fst
pop
lcall
cmpsl
and
adc
data16
ja
push
popa
jne
pop
leave
fdivp
pop
jp
inc
mov
fnsave
outsb
or
jb
lods
and
nop
lock
test
add
push
faddp
stc
sbb
mov
sub
dec
movl
push
pop
aas
jecxz
imul
mov
or
or
mov
xor
xor
mov
xor
adc
sbb
es
jno
addl
and
pop
cwtl
ret
es
inc
push
lods
nop
mov
or
pop
cmp
mov
aam
insl
xchg
jg
jbe
jle
leave
fsubrs
insb
mov
out
xor
popa
and
mov
or
pop
aad
push
push
fnstenv
mov
xor
add
js
fcomps
fisubs
ret
jmp
jb
imul
pop
cmp
xor
push
push
in
push
in
scas
mov
arpl
imul
or
dec
add
push
leave
add
dec
gs
stos
mov
dec
xchg
enter
inc
mov
pusha
jl
adc
or
rcrl
and
les
dec
testl
test
insb
xor
jnp
test
inc
scas
and
inc
and
push
sbb
call
lcall
pop
inc
push
pop
aaa
nop
inc
push
fwait
jno
fwait
lea
add
xor
cld
add
mov
addb
inc
mov
int
repz
add
sub
mov
push
jp
call
mov
cmp
out
xor
ljmp
popa
in
cmp
inc
adc
push
shlb
je
subb
xor
cmpsl
rol
ret
adc
add
cltd
in
pop
xor
and
cmp
add
mov
out
mov
inc
mov
xorb
pop
and
ret
jne
loope
in
les
xor
and
pop
loopne
jge
xor
sub
dec
ljmp
mov
shrl
mov
movsb
hlt
jo
pop
lret
pop
fimuls
add
fbstp
ds
or
into
xchg
sbb
cwtl
adc
loope
mov
xchg
or
icebp
push
xchg
xchg
push
sub
cmp
push
mov
push
cs
cmp
or
pop
roll
jnp
or
jo
roll
push
inc
mov
std
cmp
xor
push
pop
outsl
dec
pop
add
dec
jecxz
xor
push
mov
mov
jns,pt
inc
pop
mov
jae
call
mov
pop
mov
pop
or
lahf
mov
dec
inc
sbb
jo
cld
and
pop
test
xor
sub
and
imul
lcall
pop
xchg
jns
ss
jno
adc
imul
mov
cmc
cmp
lods
and
or
jo
cvtpi2ps
cltd
movsl
ret
mov
leave
cmp
les
enter
mov
lahf
es
repnz
pop
in
xorb
and
pop
push
jne
daa
roll
pop
shlb
mov
stos
sbb
shrl
sarb
or
lods
imull
gs
cwtl
call
stos
xchg
ljmp
mov
and
add
xlat
fistpll
cwtl
cmp
popa
dec
adc
pop
xorb
adc
mov
stc
sbb
pop
pop
push
mov
lods
add
out
cs
sub
inc
inc
out
jmp
notl
movsl
shlb
sbb
dec
jnp
xlat
add
sarb
mov
lret
lds
jecxz
and
mov
insb
adc
setne
dec
sub
jno
arpl
pushf
je
cs
sub
cmp
loope
in
dec
mov
ss
pop
push
arpl
flds
lret
dec
scas
out
mov
push
xchg
cmpsl
push
or
imul
cmc
arpl
mov
cmp
fwait
sub
jecxz
arpl
shll
out
cmp
xchg
arpl
xor
mov
mov
xor
fidivrs
lret
mov
push
loop
imul
xchg
fldcw
xchg
lock
xchg
push
arpl
push
lods
test
fnstcw
out
or
cmp
xchg
sbb
inc
sub
add
daa
in
dec
dec
mov
xor
lret
dec
inc
xchg
fs
jo
xlat
les
ljmp
xchg
mov
lret
push
mov
xchg
inc
movsb
or
scas
lds
mov
xor
cvttps2pi
jp
mov
lahf
or
xor
and
dec
aad
sahf
ret
gs
ja
addr16
js
sbb
and
dec
les
test
rolb
outsb
lods
adc
add
xlat
mov
push
negb
insb
outsl
mov
mov
push
repz
outsl
push
add
scas
outsb
shrb
lcall
inc
loopne
clc
les
and
cltd
mov
pushf
or
cmc
cmc
and
mov
dec
cmp
adc
nop
js
inc
dec
arpl
jl
hlt
addr16
mov
mov
fwait
test
cmp
and
cmc
jns
into
dec
pushf
shlb
sbb
lret
jl
lock
mov
dec
in
inc
lods
or
je
and
icebp
add
pop
sysenter
frstor
sbb
iret
imul
jb
adc
and
xor
xchg
inc
inc
xor
lcall
jbe
addb
sub
add
xchg
inc
enter
test
scas
dec
xchg
mov
cs
push
xor
jmp
sbb
imul
adc
pop
pop
push
loop
xor
mov
in
or
xor
fwait
xorl
adc
pop
fidivs
jmp
mov
xorl
jns
mov
pop
lret
or
fcmovbe
sbb
addl
es
loopne
inc
sbb
clc
sbb
inc
loopne
and
lret
xlat
mov
clc
jae
fs
xchg
movb
xchg
push
rcr
mov
adc
mov
arpl
and
pop
add
hlt
xor
or
add
lea
xchg
inc
imul
hlt
mov
imul
orl
daa
adc
sub
mov
test
mov
insl
scas
lods
stos
je
xchg
cmp
shll
dec
bound
or
ss
cmp
inc
imul
add
in
pusha
sub
in
or
xchg
and
xor
in
mov
pop
add
dec
add
loopne
aam
scas
int
mov
push
jb
popa
dec
cmp
mov
jbe
mov
xor
xor
repnz
adc
xor
popa
push
jl
roll
pop
decl
cmp
pop
push
dec
cmp
mov
cmpsl
inc
or
ret
pop
inc
mov
xlat
or
add
fildll
pusha
pop
cwtl
sbbb
hlt
sbb
fldl
fwait
sbb
or
aas
jns
movsb
out
fildl
fcompl
add
ljmp
pop
insb
and
add
adc
xchg
and
sarl
sub
repnz
pop
xor
jo
out
sub
movsl
sahf
dec
xchg
lea
cmpsl
lods
shl
and
jecxz
add
sub
or
sbb
daa
aad
int3
adc
inc
sbb
sub
cmpl
xor
popa
iret
nop
cmova
movsl
stc
mov
loope
pop
fidivrl
xchg
stos
dec
cmpsl
add
fists
pop
jle
dec
push
nop
shll
mov
jns
push
fisubrs
ds
sarl
sbb
inc
fbstp
out
imul
inc
push
int3
jle
jb
sbb
inc
push
pop
pop
stos
adc
insb
movb
and
movsb
fadds
pop
jns
adc
and
fiaddl
sbb
mov
add
in
xchg
xor
imul
and
dec
dec
xor
push
push
lea
or
push
mov
jmp
fwait
clc
add
mov
xlat
add
sub
add
fildll
addr16
push
movl
ret
inc
adc
push
pop
inc
insb
rcrl
lods
push
mov
jecxz
dec
or
pop
test
xchg
ljmp
jo
scas
add
test
jnp
loopne
mov
or
repz
add
mov
jne
pop
pop
mov
scas
loopne
loopne
push
incl
push
jecxz
fistps
inc
js
jecxz
cmp
add
or
xchg
inc
ljmp
add
mov
mov
incb
into
xchg
rol
frstor
push
mov
sbb
mov
stos
ret
pop
dec
addr16
jge
pusha
pop
lods
add
pushf
inc
out
jmp
inc
lods
mov
and
lret
push
incb
and
insb
cmp
out
mov
clc
fstps
pop
sub
adcb
push
mov
adc
sub
lret
dec
fwait
dec
test
lret
mov
ss
cmpsl
mov
jle
adc
ficomps
stos
fldcw
mov
mov
adc
insl
push
popa
cmp
cmp
out
outsl
loopne
enter
shlb
mov
or
clc
ror
mov
cli
and
pop
outsl
xlat
jecxz
dec
push
push
aas
cmp
mov
sub
lcall
sub
sub
xor
mov
push
xchg
mov
inc
and
ja
push
mov
iret
js
jo
ja
inc
add
ret
leave
mov
jnp
int3
push
hlt
leave
sub
loope
fcoml
push
mov
jmp
outsl
adc
iret
int
pop
dec
inc
into
mov
dec
pop
roll
lock
cmp
add
xor
xor
jae
movsb
mov
out
aaa
inc
in
xchg
adc
add
xor
mov
stos
inc
imul
and
cmp
insb
sbbb
pusha
repnz
xchg
sbb
loop
add
pop
push
xchg
fcoms
loopne
daa
ja
test
andl
mov
or
jmp
and
pop
xor
add
int
mov
es
sub
jnp
imul
scas
arpl
fiaddl
sub
adcl
movsb
push
lret
push
sub
or
fisttpll
dec
jns
leave
jno
lods
mov
addr16
cwtl
outsl
xlat
add
lcall
mov
sti
and
mov
adc
popl
imul
pop
in
das
mov
sbb
sbb
add
mov
ret
push
inc
fdivrl
sbb
adc
outsl
mov
and
jg
mov
cmpsl
arpl
mov
adc
jge
mov
popa
xlat
jno
pop
jmp
adc
mov
adc
push
test
lds
mov
cmp
outsb
lock
sub
jmp
pusha
mov
mov
shl
push
out
fmul
movsl
gs
mov
es
icebp
popa
lods
je
sahf
add
ljmp
add
mov
adc
out
push
loope
cmp
rcrb
scas
out
rol
je
sub
daa
sbb
xorb
dec
aad
mov
push
mov
push
mov
or
test
fadds
add
shl
das
or
sbb
sub
popf
xor
lock
mov
addr16
and
xchg
pop
dec
popa
ja
imul
mov
adc
test
dec
test
mov
fwait
adc
loope
popf
mov
mov
pop
add
les
xchg
gs
and
das
pusha
xchg
pusha
orb
addr16
arpl
loop
pop
sbb
pop
mov
punpckldq
cli
cmp
rol
adc
xchg
adc
add
mov
pop
addb
fisubrl
mov
mov
add
xchg
test
loope
mov
mov
fidivrl
mov
mov
and
mov
inc
gs
add
mov
sub
inc
jnp
mov
push
jmp
pop
in
mov
and
sbb
mov
sahf
mov
push
pop
shrb
mov
popa
xorl
xor
leave
sbb
ss
daa
xchg
mov
pop
mov
cli
daa
fwait
push
movsl
jne
test
dec
and
sub
add
adc
sub
xchg
les
mov
mov
pop
out
sbb
push
mov
jle
shl
ret
xchg
out
push
nop
in
lea
sub
mov
sbb
scas
cmc
jp
pop
dec
out
mov
add
jae
or
or
mov
addr16
xchg
and
jmp
out
out
je,pt
add
sub
xor
jno
mov
andb
arpl
insl
rcrb
or
and
inc
icebp
and
icebp
mov
dec
push
jl
mov
mov
dec
imul
popf
mov
push
or
sbb
loopne
insl
add
add
lock
jmp
dec
and
shll
xchg
xchg
push
jle
dec
jmp
sbb
and
stos
push
loopne
xchg
mov
xor
icebp
daa
movsb
shl
hlt
dec
mov
jns
xlat
inc
stos
xchg
nop
jb
push
jno
daa
shll
add
loop
popw
sahf
sbb
pop
aam
add
push
xchg
inc
dec
push
cmp
test
popf
fstpl
out
inc
nop
out
pushf
imul
add
mov
pop
inc
test
cli
and
sbb
fcmovnu
pop
push
xor
sbb
mov
dec
sbb
xchg
test
xchg
cmpsb
ret
cs
hlt
addr16
mov
shrl
jp
jg
nop
xchg
and
xchg
add
cmc
xor
ds
pop
imul
jl
jo
adc
inc
push
dec
inc
add
shlb
cmpsb
mov
pop
mov
adc
adc
cmp
imul
pop
rorb
ud2
jns
outsb
iret
popf
add
fwait
stc
add
dec
imul
cs
movsb
inc
xchg
and
int
sahf
out
out
xor
cmp
adc
xor
jnp
xchg
mov
or
orl
mov
mov
add
mov
mov
jp,pn
cmp
add
xchg
sahf
or
ds
lret
inc
dec
test
or
testl
mov
leave
jb
pop
mov
jp
fdivl
dec
xor
jl
mov
jne
add
jecxz
addb
cmpsl
mov
out
sbb
repz
int3
and
in
mov
sbbl
icebp
dec
cs
jmp
mov
add
lahf
aaa
rclb
xchg
out
pop
scas
xchg
sub
ret
shll
xor
mov
scas
cmp
shrl
push
cmpsl
and
sbb
nop
filds
fst
call
ss
call
xchg
add
pop
xor
adc
xchg
xchg
dec
sub
sbb
pusha
or
arpl
fiadds
and
mov
mov
stos
shll
imull
dec
cltd
cwtl
inc
stos
shl
inc
sbb
clc
mov
hlt
testl
push
ret
push
fiaddl
fwait
pop
adc
les
decl
mov
insb
ss
clc
addl
loop
aad
pop
dec
movsb
jo
lret
sub
daa
fiadds
pop
push
leave
push
sub
push
push
inc
jnp
ret
mov
in
dec
pushf
mov
and
xorb
jae
sbb
ret
mov
pusha
mov
mov
pop
shrl
cmovp
adc
sbb
inc
cld
and
or
mov
dec
mov
mov
insl
inc
cmp
sub
sbb
je
lahf
cmp
pop
inc
mov
loop
in
push
orl
nop
hlt
pop
mov
pushf
sbb
jb
adcl
or
stc
insl
adc
call
xor
or
mov
mov
in
fldenv
cmc
mov
add
fisttpll
sbb
sti
inc
push
jecxz
lea
sub
pop
shrb
xchg
xor
mov
cmp
mov
xchg
mov
ljmp
inc
aas
inc
pop
and
shl
into
mov
dec
push
mov
inc
int3
clc
dec
xchg
sbb
sahf
dec
inc
les
mov
pop
jne
mov
pop
push
xor
sbb
clc
push
push
xorl
mov
test
xchg
push
and
and
push
js
pop
xchg
or
cmp
mov
sbb
xor
mov
jno
adc
push
lods
rorb
push
jle
test
clc
dec
push
sbb
es
jle
add
push
inc
sub
cmp
xor
jg
mov
fimuls
or
cld
nop
sub
sub
push
pop
orl
adc
sub
push
mov
add
rcrl
mov
or
arpl
xor
test
insl
scas
xor
mov
sub
cmpsl
jnp
inc
add
adcb
or
jo
sub
inc
js
jmp
fs
sbb
inc
cld
test
add
cmp
and
mov
mov
xor
loope
nop
repz
or
inc
fwait
cmp
push
inc
imul
adc
scas
icebp
or
mov
dec
pop
sub
jne
lds
mov
mov
movsl
adc
test
call
sbb
mov
mov
sbb
add
adc
loopne
stos
insb
movsb
jg
out
vaddps
in
add
xor
xchg
jo
loope
cmpsl
aas
inc
or
add
inc
jns
aad
sub
cmc
mov
xlat
xchg
sub
sub
adcb
clc
movsb
cmpsl
mov
mov
add
sub
addr16
or
jb
dec
jmp
inc
jns
call
aas
add
push
jns
leave
add
dec
js
dec
daa
arpl
sbb
adcb
or
pop
cmp
jle
aaa
adc
cmpsl
loopne
imul
shlb
adc
in
xor
mov
js
adcb
or
stos
push
or
push
sbb
mov
cmp
sbb
test
push
clc
mov
scas
inc
add
mov
addr16
jo
dec
addr16
inc
mov
adcl
addl
or
pop
dec
test
ret
test
out
jo
jno
push
adc
fcomip
or
inc
loopne
pop
fs
in
xchg
xchg
sub
add
add
adc
cmp
adc
aam
jno
cmc
sbb
mov
xchg
dec
imul
subb
add
adc
inc
pop
add
imul
jge
dec
faddl
xchg
gs
adcb
and
ds
jp
cltd
aad
sti
xchg
incb
jl
adc
ret
jecxz
adcb
pop
mov
pusha
arpl
test
and
pop
pusha
daa
pop
pusha
out
aad
pushf
cs
adc
sbb
stc
xchg
shrb
xchg
push
adc
and
int
mov
or
dec
ja
nop
addl
cs
push
pusha
insl
insl
mov
out
fs
and
push
jmp
mov
push
push
adc
cmp
pusha
mov
inc
lea
add
push
cmp
and
iret
rclb
stos
enter
adc
push
adc
ds
or
mov
popf
daa
insl
stos
clts
mov
pop
cwtl
int
mov
pushf
jns
pop
mov
pusha
subl
dec
les
mov
scas
aam
hlt
adc
sub
dec
xchg
xor
mov
fnstcw
adc
xor
or
sbb
add
mov
push
test
xchg
jnp
push
push
cmp
and
loope
push
dec
push
in
test
rorb
daa
mov
sbb
movl
xchg
push
mov
push
cld
xor
in
mov
lahf
xchg
mov
loopne
add
dec
push
inc
js
orb
lods
aas
mov
ds
sub
aad
add
push
into
add
cld
sub
cwtl
mov
push
sti
or
rcrl
sub
dec
jo
addl
dec
mov
mov
mov
inc
mov
call
test
daa
loopne
sbb
mov
sub
aad
dec
mov
mov
xor
pushf
sub
mov
dec
out
pop
or
xchg
gs
and
imul
fdivr
popa
xabort
push
popa
adc
pop
mov
rcrl
and
sub
call
sbb
mov
jne
and
add
and
add
nop
add
push
lods
adc
and
sub
dec
roll
call
jp
xchg
adcl
pop
and
sub
and
addb
or
adc
add
shrb
subl
pop
inc
and
in
jg
xstore-rng
cmpsl
adcl
imul
movsl
ret
cmp
adc
js
add
sub
push
push
sub
or
or
cld
ret
add
jge
xchg
sti
pop
adc
cmpsb
outsl
push
or
aad
sti
sbb
jge
add
jge
mov
mov
cwtl
mov
cmpb
mov
inc
sbb
roll
jge
pop
mov
adc
movsl
jne
pop
mov
in
emms
inc
lds
mov
cltd
cmp
lea
ret
pop
mov
out
jo
push
add
xor
xor
cmpsb
xchg
pop
clc
mov
cmpsb
ret
and
dec
sbb
sbb
and
jmp
push
or
jmp
fisubrs
mov
mov
jecxz
sbb
scas
and
inc
xor
or
xchg
cmpsl
dec
leave
pop
push
xchg
add
std
cmp
pop
pop
cmp
popa
dec
loopne
andl
sbb
jge
lock
movsl
stc
xchg
push
lret
inc
and
ds
jb
popl
jns
sub
and
lret
xor
sbb
mov
imul
fmuls
jecxz
jnp
jbe
or
mov
inc
sub
pushf
pusha
outsl
dec
negl
pusha
xchg
or
mov
imul
fs
mov
adc
jbe
imul
cmpsb
shld
adc
adc
mov
pop
or
inc
das
add
and
push
mov
sub
mov
arpl
mov
adcl
dec
daa
inc
push
or
sbb
mov
lea
add
pop
mov
fdivrl
imull
and
rclb
or
dec
mov
stos
insl
nop
add
dec
orb
pushf
and
adc
sti
scas
add
adc
movsb
push
xchg
mov
and
out
mov
push
mov
out
fs
mov
arpl
sbb
pusha
sub
roll
cltd
aam
cmpsb
rclb
sbb
pop
xchg
in
dec
test
xor
dec
arpl
imul
test
sbb
leave
cmp
cmp
add
sahf
mov
mov
add
int
sarb
inc
or
inc
pusha
add
pop
xchg
pop
adc
fwait
in
fimuls
or
xchg
jne
inc
inc
rcll
arpl
mov
cmpsl
fidivs
mov
sbb
or
xchg
push
mov
and
fisttpll
pop
fldenv
adc
and
xor
outsl
popf
dec
mov
decl
lahf
inc
dec
mov
enter
xchg
add
pushf
cmpsl
lcall
loopne
jo
fldt
int3
jl
pop
mov
add
aad
push
xchg
imul
or
idivl
sub
jecxz
sbb
mov
jo
fisttpl
clc
cltd
stos
and
pop
jb
loopne
cmp
clc
inc
jecxz
ret
mov
push
fiaddl
adc
xchg
sbb
push
outsb
and
add
sbb
inc
adc
sub
cmpsl
pop
sbb
xchg
or
repz
fldt
popa
subl
jo
pop
mov
fs
pop
imul
jne
jnp
lods
pushf
xor
pop
xchg
in
pop
xor
push
push
xor
out
mov
div
rolb
push
dec
aas
pop
scas
insl
inc
cwtl
jno
inc
inc
sub
mov
push
pushf
lods
mov
add
test
ja
daa
or
mov
lods
arpl
mov
ss
aas
and
inc
scas
nop
xchg
popa
add
adc
cmp
jne
jb
mov
sbbb
scas
lahf
and
mov
push
shlb
lcall
mov
test
rcll
cmpl
push
dec
aaa
xor
fbld
pusha
pop
push
movsl
mov
sub
loope
inc
stos
movsl
addl
dec
xor
cld
mov
mov
adcl
mov
lock
sbb
add
enter
xchg
rcrl
jmp
imul
inc
or
dec
leave
add
or
sbb
addl
push
push
pop
and
dec
adc
and
rclb
jo
call
ljmp
jne
jae
fsub
ret
jb
pop
into
xchg
lock
add
popa
or
test
add
sbb
fidivrl
inc
push
jmp
dec
clc
dec
xchg
jo
stos
sbbl
push
sbbl
adc
cli
adc
jns
iret
xor
pop
fisubl
adcl
add
push
inc
adc
mov
cltd
mov
push
adc
push
cmp
fstl
andl
sbb
xchg
sbb
mov
jne
xchg
and
add
test
cltd
out
sub
inc
frstor
sbb
mov
loope
fisttpll
popl
mov
mov
js
incb
nop
mov
ds
pop
add
sbb
aas
test
fimull
sbb
or
lcall
mov
pop
adc
push
add
fisubrs
repz
mov
fadd
or
lea
sbb
orb
mov
addr16
pop
push
inc
and
ret
fisttpl
xchg
popf
out
insl
das
fcompl
in
sub
sub
cli
int
dec
jo
lcall
inc
add
fwait
pop
std
clc
pop
ljmp
mov
or
stos
fwait
sbb
pop
mov
call
mov
inc
or
jl
xor
pushf
test
rclb
movsl
les
cmpsb
cmp
aas
test
jb
sub
sub
test
fwait
rorl
test
adc
jbe
mov
cli
lcall
addl
mov
leave
cmpsb
inc
dec
pusha
or
rolb
add
fwait
or
mov
outsl
test
mov
imul
outsb
sbb
out
mov
arpl
sub
and
imul
fistpll
jecxz
mov
std
sbb
ss
sbb
inc
into
inc
dec
or
fs
arpl
insb
sbb
testl
js
mov
stos
filds
dec
mov
cmpsl
int3
roll
xorb
ds
push
sbb
mov
ret
pusha
mov
xlat
cmpsb
sub
ja
call
cltd
mov
jne
rolb
or
fldenv
hlt
mov
pop
add
sti
mov
loope
cmp
push
movsl
mov
fdiv
ret
xor
scas
iret
add
loop
sbb
imul
sub
mov
add
in
shll
faddl
test
mov
pop
xor
pop
and
popl
test
inc
fldlg2
push
popa
or
sahf
movsb
adc
xchg
cmpsb
rcll
shrb
notl
insb
ljmp
mov
cltd
dec
push
add
filds
push
rolb
mov
dec
sub
and
add
sbb
scas
in
inc
rclb
mov
and
xor
fildl
mov
mov
push
and
cmpb
pushf
push
adc
xor
addr16
push
cmp
jne
mov
lock
inc
call
xlat
out
popf
xor
pop
xchg
movsl
je
aas
ret
pusha
adcl
push
ret
les
addl
mov
das
inc
mov
add
jae
ror
js
sti
and
mov
jne
cltd
outsb
insb
and
jne
mov
or
sub
inc
sub
gs
int
inc
mov
lea
and
or
sbb
std
adc
stos
fnstenv
sbb
pop
mov
jl
pop
add
jp
add
xor
or
sti
in
adc
daa
dec
push
sub
fcoml
icebp
mov
aas
jmp
std
cltd
ljmp
fnstcw
push
mov
cmp
pop
xchg
nop
sub
sbb
adc
adc
cmp
das
push
or
std
in
lods
push
inc
rcpps
sbb
mov
repz
repz
roll
mov
jecxz
adc
and
adc
xchg
loopne
mov
lret
sbb
out
sbb
fnstcw
mov
jnp
fstp
add
sahf
pop
xor
dec
sub
mov
dec
imul
les
outsb
sbb
jecxz
mov
jno
imul
cmc
xchg
andb
push
arpl
call
add
cmp
das
dec
inc
outsb
add
mov
icebp
lods
jmp
xor
rcll
filds
add
movsl
lret
pop
nop
outsb
push
pop
jge
inc
test
or
out
xor
jae
test
popa
imul
cmp
test
imul
stos
test
pop
mov
push
repz
push
mov
icebp
xchg
rolb
dec
mov
cmp
addr16
mov
push
add
and
leave
push
fldcw
sbb
inc
sub
sub
je
arpl
push
daa
dec
mov
ror
dec
imul
mov
fcoms
out
and
xchg
or
pop
ljmp
imul
mov
sub
sbb
stos
add
adc
or
sub
std
fimuls
xchg
push
les
inc
inc
and
popa
loope
int
sbb
outsl
mov
or
pop
mov
les
mov
adc
pop
or
mov
sbb
push
out
and
pop
les
nop
mov
rorb
subl
pop
test
cmp
adcb
mov
sbb
imul
pop
rolb
repz
dec
jmp
daa
mov
or
pop
push
test
xchg
adc
out
mov
dec
adc
sbb
cmpsl
cmp
pop
fcmovnb
inc
sub
cltd
loopne
or
movntq
out
js
mov
scas
sub
rcr
loopne
mov
fimuls
lahf
aam
mov
pop
cmc
xorb
jno
dec
outsl
dec
outsl
sbb
or
cmp
test
pop
test
outsl
into
push
bound
or
ja
pushf
cmc
adc
fisttpl
or
cmp
mov
xchg
pop
xchg
adc
rcrb
push
popf
or
test
loope
test
add
add
add
mov
cmc
arpl
test
adc
jmp
mov
cmp
fcomps
or
lea
xchg
dec
mov
leave
dec
jmp
push
sbb
mov
addl
xor
mov
outsb
mov
addl
lods
adc
inc
faddp
inc
rcll
and
sahf
stc
lea
pop
mov
inc
mov
ja
inc
test
imul
addr16
lea
enter
mov
mov
dec
rolb
xor
push
jae
pop
addr16
imul
pop
mov
popa
xchg
test
fcmovnu
loope
mov
add
repz
roll
and
pop
js
lds
sbb
jle
add
rolb
mov
imul
cli
sahf
jnp
and
push
pop
mov
je
test
pop
aad
loopne
stos
mov
dec
mov
add
out
ljmp
loopne
adc
mov
loopne
xorb
jo
imul
xchg
gs
jns
mov
rclb
cltd
mov
dec
push
shlb
pop
sbb
cmp
scas
add
inc
lret
fistps
lds
xchg
adc
ret
push
adc
fnstenv
outsb
dec
mov
test
add
inc
imul
sub
movsb
ret
daa
pop
mov
shll
outsb
adc
jns
sbb
test
mov
mov
or
cmp
dec
add
add
mov
xor
mov
inc
mov
int3
fimull
pop
dec
cmp
adc
mov
push
fdivp
push
push
mov
pop
jp
dec
pop
mov
xlat
dec
ds
push
adc
xchg
jecxz
pusha
add
sbb
mov
mov
in
push
loop
mov
std
add
das
pop
cli
mov
dec
nop
mov
test
rolb
push
sbb
clc
enter
add
push
sbb
ret
and
or
jo
push
pop
mov
lret
lods
xchg
rcl
cmp
push
sub
popf
test
testl
or
sub
adc
lret
dec
ffreep
pop
xor
or
sbb
ret
inc
push
rolb
dec
imul
or
sbb
add
addr16
lret
add
push
dec
cmpsl
mov
aad
lods
movsb
add
into
or
pop
mov
mov
xchg
in
pop
mov
cwtl
dec
call
add
mov
pushf
fsubrl
or
add
and
pop
mov
dec
js
push
or
subb
outsb
mov
mov
or
or
pop
sti
insb
xchg
add
push
sub
shlb
imul
jge
adc
shlb
and
pop
add
addr16
mov
add
mov
test
dec
dec
or
mov
fstps
jnp
mov
or
cltd
cmp
inc
dec
test
scas
lea
pop
xor
cmc
and
jb
imul
rorb
jne,pt
stc
add
cs
cmp
dec
add
sbb
mov
adc
xchg
xor
push
insl
fs
es
add
mov
xchg
or
mov
clc
in
daa
dec
dec
cmp
clc
sbb
jg
decb
pushf
xor
orl
xchg
or
jmp
test
popa
cmp
sub
mov
add
out
xor
fwait
ret
or
adc
inc
cmp
int3
stos
adc
sbb
shll
push
or
pop
fidivs
mov
fsubs
add
test
sbb
push
dec
sbb
mov
loopne
and
sti
dec
push
sub
xchg
sbb
sbb
mov
mov
sbb
adc
sti
lret
roll
jo
sub
imul
imul
mov
sbb
xchg
mov
add
in
mov
mov
out
std
fstpl
rcr
inc
dec
pop
popa
adc
add
push
ss
sub
lods
clc
lea
push
add
pop
fstl
xchg
or
push
dec
insl
data16
or
adc
fisttpl
push
cwtl
sub
daa
movsl
cli
sbbb
adc
es
add
pop
in
push
aaa
movsl
daa
insl
mov
ljmp
dec
andl
inc
adc
lret
pop
out
add
fldenv
pop
and
jns
loopne
inc
or
pop
mov
and
int3
mov
or
push
in
or
xchg
xchg
rclb
push
push
fs
push
ss
add
and
mov
adc
xchg
int
or
cmp
imul
pusha
push
adc
or
mov
sub
adc
stos
add
movsb
fcom
punpckhwd
xor
pop
loope
outsl
adc
pop
sbbb
add
cli
sbb
jo
adc
imul
sbb
dec
or
add
neg
xchg
push
mov
aam
gs
sbbb
adc
nop
pop
cmp
enter
shlb
clc
jno
jb
dec
or
mov
inc
inc
sub
outsl
lods
enter
mov
lods
imul
cmpb
fidivrl
adc
ret
aas
adc
lods
ds
pop
lea
aam
int
pop
loop
push
mov
sbb
and
sbbl
adc
int
mov
mov
jecxz
rorb
ret
sbb
adc
mov
xchg
dec
jb
push
push
movsb
xlat
ret
mov
dec
mov
jg
imul
mov
into
fldl
or
ss
out
fiaddl
es
adc
add
int
pop
lret
dec
pop
sarl
fistpll
ja
mov
ret
jl
sub
or
pusha
mov
sub
pop
enter
addr16
je
ret
orl
and
adc
mov
xchg
push
mov
pop
push
and
xchg
outsl
pop
jp
inc
sub
pusha
push
adc
mov
push
xchg
imul
sahf
jnp
mov
jb
daa
xchg
jnp
jg
sub
out
add
xlat
mov
inc
sbb
mov
pop
outsb
xorb
mov
xchg
adc
dec
pop
pop
test
mov
or
shlb
adc
inc
cmp
fisttps
fistl
stc
xchg
sbb
add
into
subl
cwtl
mov
adc
sbb
sub
das
cmpsb
jne
dec
or
in
iret
mov
push
mov
jge
jl
test
inc
xor
sti
dec
sub
adc
jg
sbb
add
xchg
or
loopne
jno
notb
dec
mov
das
ret
push
lahf
cmp
ljmp
scas
jno
xlat
sahf
loopne
adc
fbld
lock
daa
test
pop
cltd
je
faddl
subb
stc
rcl
ss
sub
and
fs
jae
push
in
push
test
or
sub
or
ret
xchg
add
sahf
and
xor
scas
pause
dec
addb
jmp
ficompl
out
mov
rcll
or
xchg
out
test
xor
mov
push
shlb
test
test
xor
daa
or
inc
sbb
push
and
dec
jge
ret
loope
nop
cld
test
cmc
push
or
test
push
loope
loope
or
das
add
jmp
enter
mov
sub
mov
popf
xor
mov
mov
dec
adc
or
std
ret
sub
mov
ja
daa
mov
scas
cmc
sbb
xchg
and
cmp
or
enter
test
jp
add
sbb
fdivrs
sub
ret
loopne
sub
xor
loopne
icebp
ret
xchg
subl
lahf
inc
iret
jecxz
aam
add
dec
mov
pop
nop
mov
pop
mov
adc
mov
jp
sbb
xor
rorl
jnp
inc
pop
push
sar
in
jp
add
push
fcomps
cwtl
adc
aad
dec
arpl
js
mov
lods
cmc
das
inc
mov
or
add
ret
ja
js
adc
shlb
sbb
and
test
sub
lcall
rclb
xchg
pop
jb
adc
and
sbbb
lods
pop
fs
add
mov
js
js
cli
push
cmpsb
inc
mov
xchg
lret
lahf
push
cld
nop
jp
mov
xor
or
sub
call
shlb
sbb
push
add
ret
xchg
mov
xor
data16
xor
dec
mov
enter
sahf
fsubs
push
cmpsl
orb
mov
jne
shlb
mov
sbb
scas
jnp
sub
clc
rorl
sub
xchg
adcl
add
inc
mov
mov
es
xlat
mov
out
andb
outsl
ret
jnp
push
js
leave
fistpl
jl
mov
call
mov
inc
pop
in
cmp
sbb
inc
inc
cmp
jle
movsb
mov
mov
cmc
popf
adc
xchg
lahf
sbb
lret
mov
push
pop
push
nop
scas
adcl
add
and
pop
repz
inc
into
add
jbe
mov
fmull
mov
lds
pop
or
sub
rclb
hlt
inc
orb
mov
jmp
insb
pop
jo
xchg
dec
sub
or
movsl
sub
or
loope
jmp
mov
jmp
or
mov
push
sbb
mov
movsb
jae
or
je
lock
mov
pop
jb
inc
add
dec
ja
xor
pop
sbb
xchg
outsb
jg
jne
mov
shr
outsl
sub
and
into
ret
cli
data16
dec
push
push
mov
lcall
xor
jmp
call
das
add
outsb
add
mov
sbb
jns
mov
cmp
lea
in
shlb
xor
jp
pop
and
enter
cmp
mov
lock
cmp
pop
xchg
test
push
cltd
aas
mov
dec
add
xor
sbb
je
bound
dec
pop
sbb
jge
lock
xchg
pop
adc
jecxz
iret
adc
jo
mov
dec
outsb
testb
jecxz
xor
dec
sbb
xchg
imul
inc
mov
jecxz
push
sub
in
shrb
add
fisttps
jge
xchg
jmp
mov
jmp
outsl
pop
or
sub
pop
scas
lea
into
rol
push
sbb
mov
sbb
imul
jo
jno
inc
or
inc
loope
std
sbb
and
sbb
mov
into
mov
repnz
ja
and
xor
mov
dec
pop
jae
jmp
dec
scas
jo
pop
fisttpl
dec
test
das
push
xchg
cwtl
dec
rclb
or
mov
xor
enter
xorl
bound
xchg
enter
movsb
sar
xchg
xchg
sub
ret
scas
test
adc
push
ljmp
inc
sbb
dec
push
pusha
and
sbb
adc
mov
mov
in
pusha
test
pop
xorb
mov
mov
call
xlat
mov
mov
mov
in
cmp
ret
add
mov
sbbb
into
scas
xor
insl
in
mov
sbb
das
ss
jne
mov
pop
inc
pop
xor
lock
lcall
adc
outsl
sarb
jno
adc
adcl
push
push
mov
inc
ret
sbb
roll
xchg
inc
xchg
mov
pusha
add
or
lret
mov
or
out
aaa
cmp
adc
push
insb
xchg
xorb
sub
add
and
xor
ror
mov
sbb
pop
pop
out
add
fwait
movsl
dec
sbb
dec
cmp
test
adc
test
std
jne
jne
pop
jo
pop
sub
enter
clc
cmp
in
add
mov
dec
sbb
insb
test
push
out
in
mov
mov
pop
aaa
fisubrs
mov
cmp
sbb
test
faddl
inc
lret
stos
ds
je
sbb
fldl
out
push
or
inc
ret
pop
adc
sarl
fsubrs
xor
sbb
arpl
sbb
sbb
xor
adcl
pop
inc
dec
xchg
add
lock
in
sbb
cmp
dec
xchg
push
sub
mov
or
cmp
adc
arpl
fistpl
add
int
sarl
iret
and
call
mov
fiadds
loop
cmpsb
push
sbb
sbb
sub
imul
int
int
stos
mov
stc
add
mov
addb
pushf
mov
jno
mov
ret
inc
addr16
dec
xor
jle
push
fcomps
jne
cmp
ret
movsb
cwtl
cmpsl
mov
xchg
shrl
add
dec
mov
cmp
rcrl
dec
inc
bound
or
xchg
adc
add
adc
xchg
stos
mov
incb
iret
cmpl
mov
lock
mov
dec
call
mov
insl
xchg
xchg
insl
sub
add
mov
adc
in
std
movsl
dec
push
inc
jp
imul
pop
mov
and
stos
fistl
xlat
mov
add
lret
xor
push
pop
jmp
mov
jno
jno
shlb
dec
shlb
call
and
sarb
bound
and
std
or
test
clc
inc
pop
aaa
out
mov
push
hlt
js
in
pusha
add
jge
cmc
std
sbb
add
icebp
mov
pop
arpl
pop
jmp
sub
jb
sbb
pop
arpl
push
lods
cs
dec
push
add
lock
lods
fisubl
mov
inc
bound
mov
and
mov
test
adc
xlat
sha1nexte
ret
inc
cmp
sub
lret
loop
test
sub
jo
push
jl
mov
ficomps
mov
sbb
ret
pop
in
out
sbb
or
pop
pop
or
lea
js
icebp
repz
and
pushf
adc
inc
jl
jae
mov
inc
ret
jns
outsl
xchg
or
in
push
out
shll
push
adc
sub
test
push
dec
mov
mov
and
dec
mov
inc
test
xchg
repnz
xchg
dec
lods
inc
pop
enter
addb
xor
mov
iret
mov
fwait
test
and
leave
repnz
pop
rorl
mov
imul
and
adc
cmc
scas
mov
jns
xchg
mov
jmp
jle
stos
pusha
lods
repnz
icebp
ret
call
popl
mov
jns
sbb
push
xlat
push
jae
jg
and
push
pop
dec
pop
mov
mov
jmp
inc
inc
call
pushf
daa
and
popf
out
cs
sbb
sub
pusha
rorl
cwtl
sbb
jno
adc
jle
adc
lea
push
adc
sub
cmpsb
cmp
cltd
push
das
adc
adc
jge
push
mov
nop
push
lods
daa
fadds
mov
xor
mov
xor
rol
inc
repz
sub
cmp
add
and
fsubl
insb
stc
xchg
jbe
fcoml
mov
lods
mov
fidivs
mov
lahf
test
xor
jp
cmpsb
push
pop
enter
fistpll
ret
gs
push
outsb
push
mov
lods
sbb
add
aaa
cmp
mov
add
add
dec
dec
xlat
jle
jo
xchg
pusha
punpcklwd
dec
mov
inc
scas
inc
leave
lahf
inc
xor
jae
aas
sbb
and
in
aas
sbb
ja
add
daa
cmc
cltd
lret
mov
daa
add
inc
popf
or
sarb
jo
mov
cmp
cmpsb
leave
and
test
mov
pop
xor
pop
xor
sub
cmp
out
inc
pop
xchg
data16
fidivrl
lods
leave
bound
sub
jnp
push
bound
iret
pop
add
push
mov
sahf
xor
mov
outsl
loop
out
add
mov
jge
sub
sub
pop
sbb
inc
fiadds
xchg
and
imul
ret
or
cmp
cmp
cmp
sbb
out
dec
mov
ljmp
pop
mov
movsb
rolb
mov
jle
setp
dec
dec
outsl
sbb
xor
outsl
pop
scas
rolb
fwait
jbe
les
test
shl
add
sub
and
dec
movb
dec
xchg
inc
xchg
rolb
cmp
mov
cmp
jns
add
mov
lret
cmp
sub
and
dec
sub
mov
sarl
push
in
mov
mov
jp
or
add
cmp
test
scas
mov
nop
enterw
mov
jb
js
mov
lcall
adc
mov
sti
push
or
lret
and
mov
fs
gs
xor
mov
mov
mov
jbe
pusha
sbb
insl
push
test
outsl
ss
mov
cmp
xchg
into
adc
sbb
test
sub
out
sub
mov
jp
add
idiv
dec
enter
push
inc
insb
fwait
aad
mov
xchg
pop
rolb
or
pop
mov
cld
testl
daa
dec
xchg
push
mov
and
lret
ret
jo
or
dec
inc
in
sub
push
inc
fwait
cmp
cmp
cmpsb
mov
imul
js
inc
aas
inc
lret
imul
sbb
pop
mov
lea
adc
mov
push
sbb
xor
add
add
pop
jmp
jp
push
sub
jmp
sub
push
mov
dec
and
sub
inc
das
sub
mov
sub
shlb
push
sahf
xlat
jnp
lock
test
adc
push
js
cmp
jbe
int3
test
ds
sbb
adc
jno
adc
add
adcb
dec
mov
add
and
xorl
jmp
push
inc
push
and
jnp
stos
xorl
ds
cmpl
loopne
lea
mov
nop
xorb
dec
jbe
mov
push
imul
aas
les
pusha
shl
imul
cltd
dec
pop
mov
and
mov
movl
fmuls
dec
adc
mov
push
sbb
mov
sti
push
pusha
cmp
push
push
stos
dec
mov
inc
inc
iret
lods
movsl
xchg
lahf
pop
jo
lods
xor
mov
inc
in
popa
insl
xchg
sbb
sbbl
rorb
lcall
adc
mov
pop
pop
sbb
gs
push
test
pop
nop
insl
pop
sub
rorl
inc
repnz
in
es
jle
add
xchg
ds
xor
adc
add
rclb
sbb
daa
fmulp
in
jnp
loop
dec
adc
mov
into
je
test
mov
setg
mov
ljmp
sbb
xchg
jne
enter
adc
sub
repz
sti
mov
xchg
mov
mov
and
adc
push
sti
pop
in
es
fiadds
pop
mov
pop
mov
add
xchg
and
mov
or
lods
daa
cmp
mov
jmp
shrb
aas
inc
add
dec
xor
cmpsl
mov
add
add
inc
xchg
fdivrl
ja
pop
lret
cmpsl
int
movsb
sbb
mov
push
pop
pop
shlb
push
inc
cmp
xor
hlt
dec
sub
add
divb
aad
inc
sub
sbb
gs
xchg
jecxz
pusha
insl
mov
jo
aam
popa
enter
in
repnz
jg
mov
or
mov
sarb
inc
xor
out
cltd
mov
add
add
je
xor
jae
sub
push
mov
pop
adc
jo
stos
add
mov
add
movsl
fildl
insl
mov
push
inc
mov
lea
mov
gs
sbb
lea
mov
inc
or
cmp
mov
arpl
adc
cmp
data16
mov
pop
sbb
mov
mov
push
ret
xchg
mov
and
cmc
test
jp
and
push
inc
ret
xchg
and
push
fdivrs
movsl
cmovs
dec
loop
cmp
mov
push
sub
mov
insl
pusha
mov
adc
outsl
and
movsb
cmp
jo
notb
pop
dec
push
pop
imul
lods
daa
movsb
or
xor
adc
add
mov
adc
or
outsb
jge
fimuls
dec
dec
pop
push
jne
popa
add
sbb
fbstp
mov
mov
jne
cmp
xor
sbb
insb
cmpsb
mov
fistpl
push
adc
pop
pop
sbb
pop
add
pop
or
dec
loopne
mov
adc
cmp
pop
add
arpl
sbbb
jo
xchg
xchg
push
loope
and
adc
shrl
cmp
into
cmpsb
or
lcall
ds
loopne
cmp
dec
mov
mov
and
icebp
pusha
adc
dec
cmc
add
xor
adc
sub
fs
inc
add
dec
das
test
imul
push
mov
sbb
pop
xchg
mov
je
lods
and
sbb
push
mov
dec
xchg
outsl
sbb
cltd
xor
and
pop
and
mov
and
ret
xor
es
jb
outsl
xor
inc
adc
ret
xorl
in
mov
andl
loop
out
in
movsb
jl
nop
dec
xchg
sarb
mov
test
lods
add
inc
test
insl
and
pop
dec
xchg
xor
into
ficompl
rcll
adc
pop
and
push
mov
loop
call
aaa
pusha
test
imul
xchg
fists
xor
inc
cwtl
add
mov
inc
add
or
ret
or
call
dec
xchg
inc
outsl
pop
xor
je
lret
adc
cli
xchg
mov
test
pop
call
enter
ret
add
mov
addb
xchg
in
lock
ret
xorl
xor
insb
cltd
add
lds
mov
cs
insl
adc
ret
jecxz
mov
inc
pop
dec
dec
xlat
lds
lds
and
add
vmovaps
jno
sar
loopne
test
fbstp
dec
icebp
popl
lcall
test
mov
mov
cmpsl
testb
scas
sarl
rolb
sub
sbb
mov
sbbb
enter
or
orb
sbb
mov
sub
mov
or
xor
add
mov
mov
xor
jmp
testb
dec
pop
add
stos
scas
fadds
mov
dec
je
push
sub
mov
fsubl
movsl
orl
sbb
outsl
stos
adc
invd
pop
xor
imul
addl
daa
and
push
mov
out
adc
xor
and
jecxz
pushf
push
add
cmp
ret
and
pusha
les
sarl
or
dec
and
sub
shlb
mov
sbb
xchg
dec
lea
adc
xor
pop
add
xchg
dec
inc
pop
inc
popa
mov
sbb
into
add
add
xchg
jne
or
cmp
xchg
jbe
movsb
add
add
adc
sbb
add
xor
add
cltd
xchg
add
xchg
or
pop
adc
into
adc
mov
fiadds
add
sub
movsb
pop
data16
push
inc
sbb
xor
mov
xchg
in
jnp
test
xor
and
dec
cmp
pop
add
add
jo
cmp
and
mov
add
sub
mov
sbb
add
xor
cmp
loope
and
pop
push
mov
jmp
movb
imul
call
enter
nop
in
and
dec
iret
jo
add
rclb
xor
pop
xchg
xchg
jmp
iret
mov
push
fstl
add
movsb
out
fstps
push
jae
inc
add
out
inc
cmp
leave
xor
pop
dec
sbb
mov
lods
clc
xchg
cli
les
add
adc
in
pop
js
add
add
aaa
pushf
gs
xor
pop
jbe
and
jp
pushf
outsb
ds
cmc
shlb
ljmp
cmpsb
push
push
xlat
xchg
inc
ja
mov
pop
mov
and
push
mov
add
fs
or
pop
mov
out
inc
call
jne
pushf
pop
js
mov
dec
cmpsb
mov
ljmp
mov
imul
push
jae
cs
imul
int3
andl
into
mov
or
ds
mov
mov
test
and
push
dec
add
cmp
call
mov
mov
xlat
int3
pop
fmulp
push
nop
push
add
xor
aaa
ret
pop
addb
ror
test
mov
in
es
nop
sbb
fdiv
adc
push
push
outsl
js
mov
cmp
gs
shrb
inc
lret
inc
dec
inc
cltd
add
orb
lcall
and
and
dec
aam
xor
rcrl
pushf
add
daa
clc
nop
pop
nop
call
jae
add
sbb
push
jno
mov
push
ja
or
mov
and
mov
jb
jae
jle
and
push
sbb
jo
inc
mov
xchg
push
mov
xor
cmp
sbb
leave
pushf
mov
clc
aas
faddl
add
jae
jo
and
mov
out
add
out
mov
mov
add
pop
cmpsb
pop
add
pop
adc
inc
or
xor
aad
mov
jno
ret
mov
inc
sbb
in
or
pop
aam
add
dec
test
dec
movsb
and
push
loope
pop
mov
xchg
sbb
pop
and
loop
fcmovbe
cltd
pushl
xor
dec
arpl
mov
cmc
or
push
shr
inc
cmpb
jb
mov
pop
enter
shl
pop
nop
in
mov
movsb
fisttps
jp
mov
xchg
or
push
in
into
mov
sbb
cmp
add
adc
add
mov
inc
jmp
jbe
call
add
xor
dec
adc
stos
fadds
out
ret
xor
data16
scas
scas
inc
sub
sub
mov
lods
or
pop
mov
push
mov
cmp
sub
adc
fmuls
pop
outsb
cmpsl
inc
jns
mov
pushf
retw
fs
adc
sub
mov
jno
pop
mov
push
jp
cmpsl
adc
fsubs
aam
push
inc
pop
add
mov
or
sbb
or
fisubrl
jp
arpl
pop
xchg
imul
ss
repnz
sub
push
xor
add
mov
add
lret
ljmp
xor
addr16
push
bound
dec
and
shrl
ret
fwait
pop
mov
sbb
ret
ret
mov
into
cs
bound
push
add
gs
jbe
jnp
sub
push
mov
imul
dec
imul
and
xchg
pusha
jns
mov
inc
repnz
push
pop
lock
dec
cmp
lret
cmp
cmp
mov
pop
mov
mov
ljmp
inc
sti
or
and
and
jg
inc
insb
ljmp
cmpsb
lahf
xor
ss
jbe
sub
outsl
cltd
add
int3
add
pop
fwait
cwtl
push
xchg
xchg
sar
shll
pop
repz
and
arpl
stos
xor
mov
int3
adc
add
dec
pop
arpl
clc
jle
mov
mov
rcr
cltd
pop
or
xchg
or
adc
sub
addb
jp
push
jge,pt
cmp
testl
jmp
xor
xlat
pop
js
jno
adc
pop
sbb
ret
imul
xchg
jae
pop
sbb
add
int3
lahf
cmpb
sub
scas
repz
popf
inc
int
jg
inc
mov
jecxz
sbb
movsl
or
scas
mov
dec
enter
cmp
insb
orb
and
pop
aas
pop
cmp
jg
ss
shlb
xchg
out
add
jne
adc
jle
sti
enter
lods
push
faddl
or
jo
es
mov
imul
jne
pusha
das
ljmp
mov
fcompl
jne
js
test
loop
xlat
xor
and
mov
fnstenv
mov
sti
sbb
add
nop
js
lods
mov
add
fists
jecxz
ds
xor
loop
ja
dec
and
lea
push
pop
dec
fcmovnbe
ds
lret
mov
fcmovbe
ljmp
mov
push
repnz
xor
xor
mov
into
or
mov
xor
pop
sub
and
or
inc
jl
mov
imul
lahf
adc
push
push
popf
push
shlb
xchg
adc
ret
pop
fldenv
xorl
daa
xchg
and
mov
fldpi
bound
add
popa
or
inc
mov
pop
mov
xor
mov
xchg
jg
xor
dec
subl
add
or
dec
sbb
push
fisttpll
sbb
icebp
add
dec
jae
add
arpl
sbb
imul
xchg
out
movups
push
sub
or
pop
mov
mov
lods
les
daa
test
std
and
rolb
inc
js
pop
rclb
lahf
das
cmp
mov
loop
mov
sub
dec
arpl
jbe
xor
subl
lea
xor
mov
stc
push
and
pushf
ljmp
inc
stos
add
inc
jge
xchg
sub
mov
dec
js
or
shr
xchg
mov
add
add
lock
adc
xchg
lods
stos
loop
xor
jb
out
sbb
or
call
aad
lods
lea
in
dec
jbe
stos
add
sbb
push
lcall
jb
sbb
rolb
in
insl
and
aad
popa
add
dec
insl
lcall
dec
leave
jbe
andb
imul
push
jne
divb
sarl
xor
jno
mov
and
iret
and
outsl
jne
mov
test
sub
add
int
leave
test
dec
mov
push
sbbl
adc
arpl
xchg
outsb
push
outsb
insl
loop
dec
cmpsb
and
pop
push
dec
fsubrl
mov
or
lods
mov
movsl
jp
pop
jl
imul
or
jmp
pop
add
enter
movsl
test
adc
xor
sub
jnp
xor
sarb
ljmp
add
or
pop
jo
jbe
lahf
adc
inc
lret
inc
dec
mov
andb
inc
test
inc
pop
or
lea
push
sub
outsl
arpl
and
lds
or
loope
ret
imul
add
or
sbb
inc
cmpsl
push
mov
nop
sbb
push
int
cmpb
fstl
or
in
and
cmp
mov
popa
inc
dec
movsl
push
xor
dec
lret
xor
pop
cmp
push
and
xchg
or
arpl
cmp
rorb
les
mov
xor
adc
sbb
rorb
or
aas
insl
daa
inc
xchg
and
mov
sbb
xor
jge
add
fmuls
or
and
and
das
mov
inc
pop
dec
push
cmp
insb
ret
mov
rolb
sub
or
les
jns
jne
pusha
mov
dec
inc
mov
fdivrs
clc
push
pop
jne
lahf
mov
push
in
push
std
push
or
enter
out
ret
loope
mov
dec
movsb
push
mov
fisttpl
sub
jns
lock
fcmovu
iret
dec
mov
fbstp
or
lea
and
mov
loop
dec
lret
cwtl
lea
push
insl
mov
push
cwtl
xchg
shrb
jae
sbb
ret
sbb
xchg
push
jno
arpl
xchg
cmp
push
add
or
popa
push
jns
rcr
push
and
imul
mov
inc
stc
call
push
add
inc
sub
mov
fsubl
mov
add
imul
xor
xor
cmp
cmc
loope
inc
and
das
sub
push
clc
pop
shlb
movhlps
andl
and
cs
mov
push
nop
stos
loope
rcll
adc
fwait
ljmp
mov
movsb
xchg
dec
sbb
popa
pop
add
mov
inc
stos
in
cmp
pop
pop
jmp
push
cmove
mov
das
cmp
out
jmp
inc
xchg
add
or
push
ljmp
mov
or
jmp
out
mov
test
mov
sbb
out
mov
sub
xor
jg
fcoms
popa
imul
loope
adc
adc
or
movsb
xchg
lea
nop
in
sbb
and
addb
ss
pop
xchg
cmc
xchg
popa
mov
lods
inc
ror
mov
loop
movsl
pusha
dec
rolb
xchg
outsl
adc
sub
inc
les
jb
or
push
add
push
push
adc
dec
pushf
cld
inc
insl
and
xlat
dec
mov
jecxz
mov
mov
pusha
and
in
jmp
enter
dec
ja
pop
rolb
dec
dec
sbb
lea
dec
js
mov
adc
mov
gs
pop
pop
mov
je
xor
nop
ds
cmp
out
rolb
lods
or
lret
mov
fbstp
ret
mov
outsl
dec
adc
mov
pop
addl
pop
sub
or
add
fbld
stos
mov
loop
adc
test
add
xchg
xchg
lret
fwait
outsb
or
lods
inc
jl
insb
xchg
scas
mov
push
or
mov
mov
xchg
sbb
sub
xorb
jge
or
sbb
pop
mov
pop
outsl
inc
stos
mov
rcrb
lret
push
mov
jl
popa
dec
dec
mov
sbb
loopne
pop
pop
aaa
dec
into
testl
push
orl
test
xlat
out
cmp
mov
mov
adcl
mov
sti
adc
fdivr
xlat
rolb
mov
insl
ret
inc
ds
pop
and
lret
mov
sbb
adcl
add
xor
adc
xor
or
shl
imul
pusha
xchg
popf
add
gs
cmp
add
jno
cmp
mov
outsb
dec
sbb
dec
jmp
repnz
pop
mov
outsl
add
mov
clc
mov
rol
sub
mov
dec
mov
jle
rclb
push
push
mov
ljmp
inc
xchg
rcrl
push
xchg
pcmpeqw
gs
int3
push
shlb
pop
lods
mov
repnz
or
clc
add
dec
add
adc
flds
inc
jbe
arpl
and
sbb
dec
inc
dec
imul
iret
dec
inc
add
jo
adc
pop
mov
mov
sbb
or
cli
std
lahf
out
arpl
sub
push
mov
push
pop
jmp
sub
push
adc
adc
rolb
orl
pop
fwait
adc
lods
mov
inc
ret
add
ja
mov
sbb
xchg
lahf
jp
jae
hlt
paddd
and
mov
xor
mov
xchg
adc
fwait
cwtl
mov
jnp
cmc
or
push
jp
jl
rcrl
push
push
popf
mov
and
adc
add
mov
dec
inc
and
jne
pop
cmpb
nop
or
mov
and
insl
dec
push
sarb
stos
push
test
shrb
dec
inc
or
scas
sub
mov
orl
push
pop
aaa
xchg
dec
imul
mov
sub
pop
mov
popf
mov
mov
dec
mov
int3
push
mov
jmp
add
arpl
bswap
insl
add
movb
or
jmp
popa
pushf
lock
jmp
mov
sub
dec
cmp
xor
xorb
loop
test
mov
stos
sti
dec
ror
fucomp
enter
fcom
les
mov
dec
sbb
xchg
in
loop
xlat
push
lret
out
lods
notb
clc
mov
add
dec
and
inc
sub
int3
and
or
out
mov
or
bound
in
inc
cmp
aam
jbe
or
aad
jbe
int3
pop
ja
mov
les
jecxz
sbb
adc
mov
imul
stc
cmp
inc
bound
pop
incl
leave
fnop
in
mov
cmc
push
out
test
loop
xchg
ja
das
inc
sub
or
jb
sub
test
pop
add
push
stos
xor
fcomps
inc
mov
ret
mov
xlat
in
add
pop
xchg
push
mov
insb
sbb
mov
push
sbb
push
rcll
mov
inc
icebp
sahf
stos
je
test
inc
jo
call
sahf
mov
pop
dec
sub
sub
aam
xor
adcl
pop
mov
fildll
ret
movsl
shrl
arpl
cld
mov
lret
fildl
sti
pop
mov
dec
ret
jne
jle
dec
sbb
mov
sbb
jno
add
ret
mov
push
mov
test
movsl
cmpsl
xchg
shlb
xchg
dec
jmp
inc
clc
jne
sub
frstor
inc
insl
dec
add
sub
je
mov
ret
pop
aas
jp
repnz
cmp
ja
push
lods
shlb
mov
addl
or
mov
jle
sub
sub
pusha
and
rcrb
lea
rorb
mov
and
jg
test
scas
inc
jo
lea
arpl
mov
inc
mov
xchg
clc
sbb
gs
movhps
pop
jns
sbb
mov
push
stos
xor
inc
nop
int
xchg
xchg
jmp
shrb
leave
push
shlb
sub
mov
rcll
mov
dec
pop
sbb
and
cmp
ja
roll
dec
xchg
pusha
or
les
in
adc
push
inc
or
cs
std
jge
and
and
hlt
jne
add
or
ficomps
cltd
pop
dec
out
pop
addr16
mov
adcb
jl
add
adc
pop
test
add
cmovge
sbb
shlb
ret
or
aas
push
addr16
es
adc
xchg
xchg
ret
mov
inc
nop
push
lcall
lcall
ret
movsl
mov
or
nop
adc
hlt
clc
aas
jg
push
inc
jge
inc
dec
jecxz
cmp
sbb
divl
dec
mov
lret
and
add
xchg
mov
inc
inc
arpl
xchg
push
jle
fdivrl
push
add
dec
add
mov
pop
es
jno
cmp
mov
insl
mov
and
ret
sbb
sti
movsl
outsb
pop
mov
push
nop
dec
add
popf
xchg
xchg
in
pop
add
loop
xchg
jbe
and
sub
push
sub
in
dec
les
and
adc
fdivrl
loopne
xor
mov
and
cld
or
shll
or
dec
ljmp
mov
movsl
gs
xor
arpl
and
clc
lcall
gs
dec
mov
popa
aad
popf
in
cmp
cmp
xchg
imul
add
cwtl
push
mov
in
popa
arpl
ret
cmpl
or
shrb
jae
daa
add
adc
lock
mov
adc
pop
inc
scas
sbb
pop
ret
adc
rolb
sti
push
sbb
es
add
inc
rolb
pop
lods
popa
das
loope
fwait
cs
dec
pop
or
test
orb
in
and
sbb
sti
nop
and
or
mov
jns
inc
rolb
pushf
roll
jg
inc
jnp
mov
inc
or
movb
xchg
xchg
mov
inc
in
mov
jnp
ljmp
sbb
dec
push
inc
fildll
push
dec
fs
stos
jb
clc
mov
rcr
or
movsb
mov
lock
loop
outsb
mov
call
or
cmp
mov
mov
imul
jge
dec
or
les
scas
and
push
mov
xor
imul
add
inc
pop
rorl
push
jge
mov
jnp
jge
jb
aam
insl
and
adc
xchg
dec
sbb
and
jecxz
xor
enter
inc
add
and
push
or
push
notb
and
mov
mov
mov
fwait
je
add
add
jmp
inc
pop
bound
xchg
mov
mov
dec
jp
pop
dec
or
pop
cmpl
add
arpl
pop
enter
dec
dec
imul
fsub
mov
and
icebp
insb
sub
jbe
pop
mov
jbe
lods
or
scas
orl
jnp
dec
nop
mov
mov
inc
clc
ss
mov
loope
test
mov
mov
popa
gs
stos
dec
xchg
sub
xchg
andl
and
push
mov
bts
and
or
sub
inc
pop
sbb
push
push
inc
test
mov
movsb
pop
adc
cmp
or
lock
scas
je
loope
mov
and
bound
shll
ds
add
mov
mov
shrl
xchg
add
fisubrl
adc
and
sbb
inc
cwtl
dec
enter
push
pop
fisubl
push
pop
sbb
sbb
in
inc
mov
js
jmp
adc
jbe
and
add
dec
push
pop
faddl
test
mov
popf
cmpsb
shlb
mov
sub
lcall
pop
or
xchg
jg
iret
cmp
je
fwait
out
outsl
test
mov
aaa
pop
jns
icebp
and
pushf
xchg
push
mov
rorl
inc
sbb
iret
or
dec
rorl
pop
loopne
movsb
or
xchg
clc
imul
adc
addl
fs
or
popa
movsb
adc
cmp
stc
data16
fs
inc
cmp
mov
rcrb
arpl
mov
or
pop
sarl
out
or
dec
push
test
mov
cmc
add
push
pop
or
mov
sub
stos
pop
add
adc
add
lahf
xchg
xor
lret
dec
fadds
mov
fstl
mov
pop
mov
scas
add
repnz
add
insl
lods
mov
jno
mov
nop
xor
cmp
mov
sbb
add
sub
jo
xor
mov
dec
or
ficoms
int3
clc
jge
js
dec
or
jne
or
andl
bound
add
inc
cmc
les
sub
pop
jg
mov
dec
popf
pop
mov
xchg
push
leave
dec
call
lcall
jno
clc
jg
sarb
dec
imul
dec
jmp
xchg
adc
push
or
xchg
inc
shll
mov
in
push
xor
xlat
adc
movsb
push
mov
push
insl
jecxz
xchg
xor
jg
test
outsl
ja
jno
pop
jge
mov
or
dec
ret
mov
out
xor
inc
push
insb
mov
xchg
push
arpl
inc
xchg
lea
fistpll
and
orb
cmp
jnp
out
cs
ja
lods
test
pusha
mov
jno
rol
daa
inc
and
inc
mov
mov
or
inc
add
pusha
push
stos
sub
fsts
dec
clc
push
xor
jo
sbb
pop
jns
push
ret
div
roll
add
or
cmp
popf
out
mov
ret
sub
insl
xor
and
jo
cmp
dec
lea
pusha
test
sbb
adc
andl
inc
add
js
mov
or
rorb
shlb
sbb
xor
fisttpll
xor
enter
mov
add
inc
or
sbb
cmp
mov
ret
popf
in
push
push
dec
test
add
dec
lock
sbb
add
dec
pop
jbe
xor
mov
push
repz
lock
mov
mov
test
sub
cs
inc
addl
xchg
push
mov
adcl
mov
or
jne
mov
sbb
add
mov
mov
add
push
enter
or
pop
push
in
pusha
xchg
mov
pusha
test
cmp
lds
cs
mov
inc
rclb
and
add
pop
enter
fwait
sti
out
cmc
jne
or
int
loopne
shlb
inc
jns
sub
adc
icebp
sub
jo
push
inc
loopne
ret
mov
adc
jb
mov
lahf
shrb
testl
addl
sub
aaa
xlat
add
adc
je
add
adc
das
fmuls
and
call
sbb
sti
push
js
mov
add
inc
xchg
inc
shr
xchg
je
pop
clc
or
cmp
aad
adc
sub
loop
xor
jb
into
lcall
shll
xchg
mov
add
push
or
jns
or
mov
push
aaa
sub
scas
fcoml
lea
mov
movsl
or
addb
mov
inc
inc
sub
enter
push
push
aad
adc
loope
adc
and
enter
xchg
or
rcll
out
mov
mov
shl
cs
movsb
pop
paddw
add
dec
aas
test
sub
mov
and
leave
aaa
loope
hlt
push
dec
dec
cmp
lret
insb
or
jecxz
cmp
push
xchg
jmp
or
xchg
jno
mov
mov
pop
sub
enter
mov
mov
rcll
lods
mov
lcall
xor
test
push
das
jl
stos
lea
inc
add
addr16
test
sbb
push
aad
rorl
arpl
orl
add
cmp
movsl
inc
addr16
test
or
add
test
icebp
rcl
add
das
popf
dec
push
dec
sub
icebp
ja
imul
mov
add
mov
add
adc
fwait
cltd
adcl
cltd
xchg
enter
adcb
addb
and
mov
dec
in
popa
push
or
pop
out
jae
jmp
and
pop
mov
jecxz
ja
add
mov
shrb
mov
mov
cmp
fcoml
nop
and
jns
xchg
pop
add
orl
cmpsb
cmp
mov
mov
lahf
aad
ret
mov
lods
insb
fisttps
jo
push
call
pop
xor
fisttpl
insb
mov
popl
adc
movsl
cmc
addl
xor
dec
test
lds
cmp
sub
test
shrl
loopne
lea
jecxz
jecxz
jne
adc
sbb
push
sbb
mov
nop
adc
shlb
sub
jae
cmpb
ds
cmp
mov
cmpl
dec
sub
pusha
in
or
and
fldt
cs
xor
mov
stos
imul
movl
inc
xchg
fcmovnb
jge
sbb
inc
popf
push
jl
movsl
shl
je
sub
dec
lahf
add
pop
lea
mov
xchg
jl
add
scas
jge
loopne
sub
jae
fwait
xchg
adc
loope
repz
repnz
pusha
sub
cmp
mov
jmp
fsubrl
je
daa
pop
or
sbb
imull
add
dec
pop
or
or
push
xor
push
adc
fs
xchg
mov
outsb
mov
bound
enter
das
dec
sub
xchg
inc
mov
shlb
xchg
mov
les
mov
dec
add
popa
inc
enter
and
dec
mov
insl
jmp
popl
jl
mov
pusha
loope
or
mov
roll
or
scas
and
sub
inc
add
mov
push
jle
aad
dec
pop
push
dec
jnp
fistps
and
push
es
dec
sub
xor
adc
pop
lahf
jg
mov
and
adc
std
jne
mov
sarl
add
notb
in
xor
and
pop
add
in
adc
mov
add
inc
andb
adc
or
daa
sub
pop
dec
or
test
jo
or
jmp
xor
jl
cmp
aam
jge
adc
mov
jmp
stos
mov
sbb
ret
xor
or
adc
mov
in
insl
sub
push
jecxz
mov
cmp
pop
and
sti
sbb
xchg
lods
and
sbb
loopne
stos
mov
movsb
or
push
pop
roll
push
adc
lds
outsb
testl
push
xchg
lret
not
or
or
sub
sub
adc
xchg
fadds
lock
leave
xchg
lret
add
mov
or
mov
popa
sbb
sbbl
push
loopne
add
mov
sahf
pop
movsl
lock
bound
jbe
add
cmp
dec
cwtl
das
pop
dec
or
push
mov
xor
repz
sub
dec
push
xchg
imul
or
and
cmp
or
rolb
shrb
pop
andl
outsl
or
push
int3
adc
jmp
inc
and
ja
mov
mov
into
fidivl
jbe
xor
outsl
neg
aaa
add
stos
xor
lret
or
mov
inc
pop
mov
das
pop
add
dec
fisttpl
das
jns
xlat
push
add
inc
pop
mov
and
pop
lea
addb
sub
mov
sub
je
push
fwait
dec
cmpl
push
cmpb
pop
das
sbb
aam
and
xchg
mov
and
pop
adc
jmp
pop
inc
sbb
xor
add
cmp
push
clc
or
jge
out
xor
xchg
pop
loopne
pop
xchg
adc
mov
pushf
push
fidivrl
add
pop
mov
mov
sub
popl
aaa
test
rol
adc
push
or
and
ja
jne
jb
sahf
repz
jmp
dec
jl
and
stos
xlat
repz
and
jne
mov
cmp
add
adc
xchg
pop
in
leave
sahf
fdivs
adc
fwait
addl
pop
xlat
dec
mov
mov
jno
aas
roll
add
mov
rol
mov
fdivr
mov
mov
call
and
sbb
ficoml
filds
inc
push
mov
cld
and
rclb
fidivl
lret
jb
ss
call
xchg
add
daa
mov
adc
lcall
movsl
sarb
mov
sbb
or
sub
xchg
aam
and
in
mov
pop
adc
mov
inc
adc
call
das
shl
scas
mov
out
jne
cmp
pushf
xor
outsb
lcall
sbb
mov
xor
fiaddl
test
sbbb
mov
mov
mov
pushf
lock
jg
push
lea
lds
pop
push
test
fwait
lret
orb
push
je
sub
addr16
rcr
cmp
int
mov
cmp
addl
xchg
imul
add
push
cwtl
sub
shrl
adc
xchg
psubusb
pop
dec
outsl
mov
sbb
xchg
mov
dec
test
clc
andl
jl
mov
adc
fimull
xchg
in
cmc
cmp
or
jae
add
lds
xor
adc
push
mov
mov
ret
add
cmp
addb
push
push
movsl
iret
aas
mov
stos
sbb
pushf
shll
sub
stc
out
add
out
arpl
push
popf
mov
pop
xchg
int3
sbb
pop
push
icebp
mov
sub
jne
or
add
ja
adc
cmpsb
test
pop
cmp
stos
xchg
add
outsb
jo
out
sub
xor
pop
jne
sub
out
lea
push
cmp
ja
xor
imul
lahf
fcoms
add
mov
xor
or
cmp
rcll
jb
add
or
push
sub
jb
add
cmc
pushw
outsl
pop
push
sbb
jg
fadd
imul
mov
or
add
xor
in
test
mov
pop
faddl
sahf
faddp
inc
orb
xor
shrb
lea
jo
cld
pusha
daa
outsl
mov
cwtl
xor
cmp
push
icebp
add
data16
daa
lret
mov
sub
mov
jns
aaa
mov
jo
push
xor
pop
das
mov
or
add
adc
addr16
xor
add
dec
xor
movl
sbb
push
sbb
or
xchg
dec
cmp
ret
lods
jle
roll
push
out
outsl
lds
test
dec
mov
push
push
dec
ficomps
adc
test
dec
sbb
jo
cmp
in
sarl
out
dec
mov
jae
loopne
incl
leave
xchg
add
js
sbb
dec
cmp
cmp
or
dec
add
arpl
int
push
sub
add
jne
mov
insl
fldl
enter
jno
xor
add
jno
repnz
sub
or
or
cmpsb
cmpl
mov
add
push
lock
mov
mov
and
out
ret
jb
lahf
cld
add
fcoms
mov
xor
xchg
inc
cmpl
cltd
and
ret
cmp
xorl
dec
cmp
xor
mov
or
std
adc
pushf
popf
idivl
pop
clc
lods
jae
pop
gs
fstpl
xchg
jp
push
cmp
sbb
imul
dec
das
mov
push
fisttps
divl
daa
and
and
mov
jb
cmp
mov
jns
repz
test
in
push
dec
jnp
sti
xchg
es
sub
or
inc
xchg
push
cmp
or
xor
cmpsb
xlat
mov
insb
in
fs
adc
cld
mov
stc
in
icebp
inc
out
ret
push
ror
add
ret
adc
fsubrp
xor
sub
pop
inc
or
adc
adc
cmp
pop
sbb
fwait
test
sub
cmp
and
addr16
ds
ret
popa
push
aam
outsb
aas
lahf
sub
lea
jb
pop
xchg
and
aaa
iret
in
sub
movl
fcmovnu
aad
data16
js
xchg
add
out
inc
fistl
cmp
sti
mov
add
lcall
xchg
test
mov
sti
mov
popa
cmp
repz
sti
xchg
shlb
ja
inc
vrcp14sd
into
loop
sti
jl
lea
stos
loop
mov
outsb
pop
dec
push
dec
loope
inc
sub
adc
addr16
call
imul
rcr
or
jg
dec
rcl
fisubrs
pop
popf
ja
popf
mov
jbe
xchg
ja
scas
pop
testl
mov
pop
inc
daa
and
mov
xor
iret
adc
cmpsl
je
mov
push
mov
stos
decl
insl
sbb
and
lock
push
pop
repnz
insb
je
add
out
sub
fs
cmp
pop
inc
add
or
add
imul
mov
ljmp
dec
pop
pop
addb
xchg
pop
cmp
out
jl
scas
xor
orl
push
xchg
xorl
or
ljmp
imul
dec
fbld
ds
incb
aas
adc
pushf
add
out
xor
loopne
push
sub
and
inc
push
out
sub
inc
xor
pop
adc
lcall
scas
es
repz
negl
incl
jbe
fwait
cmp
cli
sub
aas
xchg
call
or
sub
repnz
mov
adc
push
mov
lea
dec
inc
jne
mov
jge
dec
xchg
push
scas
add
imul
fadds
aas
or
xor
sub
popa
pushf
fs
add
inc
mov
test
stc
fildll
lea
jno
push
pop
mov
add
cmpsb
push
mov
mov
imul
pop
cmp
pop
add
add
adc
xorb
sub
cmpsb
mov
imul
popf
add
push
or
outsl
inc
pop
fsubr
push
push
loope
data16
mov
hlt
add
mov
cld
test
add
mov
jmp
dec
fdivs
out
inc
dec
shl
pop
and
das
test
pop
cwtl
xor
sbb
inc
mov
mov
dec
add
roll
sub
xchg
mov
or
mov
mov
out
add
sbb
fcmovnb
xchg
aas
jo
inc
or
inc
clc
mov
inc
pop
es
cmp
test
pop
sbb
jb
ljmp
adc
fimuls
loop
leave
mov
xchg
xor
add
or
je
mov
pop
fisubl
xchg
xchg
test
push
adc
jo
pop
syscall
mov
cwtl
jmp
test
xchg
cmp
add
insb
cmp
fiaddl
int3
push
and
jb
shrb
push
cmc
lock
ja
or
cmp
ss
insb
mov
icebp
jns
push
and
outsb
adc
clc
sub
es
or
cmp
push
shlb
xorb
or
mov
stos
aas
mov
mov
inc
cmp
ds
mov
dec
in
movsb
fsubs
jmp
sbb
lods
add
cmp
cmp
scas
mov
add
adc
mov
scas
movsb
or
ds
add
dec
je
sbb
js
out
add
imul
mov
ja
add
mov
daa
add
aaa
dec
sarb
and
xchg
stos
scas
push
or
mov
stos
pop
cmp
popa
rcl
add
pop
ja
aas
scas
jns
adc
dec
inc
push
andb
js
jle
popf
mov
dec
add
cs
dec
rcrl
rolb
shlb
jp
fistpll
push
add
je
add
mov
mov
add
fisttpl
or
imul
dec
mov
jge
ret
sbb
or
rolb
insl
mov
cmp
mov
pusha
dec
ret
fcoms
cmp
and
push
push
jp
or
imul
and
dec
inc
jo
add
add
cmp
lea
scas
mov
or
sbb
imul
adc
add
sub
add
movsl
xchg
lea
add
cmp
popa
imul
cs
sbb
sub
inc
add
cmp
inc
insb
dec
cmc
inc
mov
xorb
sarb
xchg
rcrb
lock
jbe
cli
sbb
outsb
xchg
sbb
xor
xchg
mov
and
inc
and
out
pop
andl
jne
adc
shlb
add
adc
mov
cwtl
bound
push
mov
add
mov
pop
jmp
sub
addl
or
loopne
add
jge
leave
sbb
pop
add
pop
add
fnstcw
pop
sbb
sbb
dec
fmuls
xor
mov
popa
mov
adc
data16
ds
loopne
mov
add
pop
aas
mov
mov
repz
daa
jp
adc
or
and
pushf
add
xchg
add
rcrb
or
pop
xor
adcb
xor
iret
mov
xchg
sub
aad
lret
loopne
adc
or
popa
in
jge
pop
sbb
jns
inc
shr
add
dec
xchg
pop
mov
mov
rorb
dec
insb
cmpsl
jnp
inc
add
sub
pop
or
adcb
int
add
add
repz
in
daa
push
push
pextrw
xor
test
pop
clc
jge
jge
mov
les
out
sti
or
movsb
fcmovb
mov
test
inc
int3
push
xchg
sti
sbb
mov
inc
inc
xchg
cs
lods
jns
test
aam
dec
rol
lret
or
or
int3
jmp
push
addr16
outsl
or
pop
pop
adc
adc
adc
dec
gs
or
add
ret
ss
loopne
loopne
lcall
ljmp
orb
push
or
dec
push
mov
inc
addb
and
add
add
ret
sbb
add
jo
mov
push
add
std
sub
and
add
jo
or
je
or
or
imul
or
les
int3
add
mov
cwtl
pop
add
and
push
pusha
and
dec
cmp
test
nop
xor
sub
pop
and
arpl
and
dec
popw
sbb
jne
pop
add
or
rcrb
add
mov
xor
mov
loopne
add
int3
les
fwait
mov
insb
shlb
xchg
or
sbb
and
mov
jb
add
add
jg
push
in
addb
add
sbb
cwtl
enter
xchg
wrmsr
xor
orl
jl
add
mov
pop
lock
sbb
push
add
lret
xor
aaa
leave
out
scas
dec
or
dec
pop
cmp
add
add
push
xlat
popf
push
loope
sbb
adcb
jns
orl
dec
adc
or
add
mov
add
jecxz
gs
insb
mov
icebp
inc
jno
pop
sbb
push
popf
sbb
jl
pop
adc
add
sub
add
inc
hlt
pop
fcoml
dec
ljmp
pop
or
clc
ret
or
loopne
or
push
xchg
loopne
imul
sbb
or
scas
popf
mov
sarl
mov
mov
or
stc
pop
xchg
out
es
test
scas
rorl
loopne
sti
add
add
push
loopne
pop
rorl
add
add
mov
shl
aas
push
add
sarl
dec
out
out
lds
sbb
clc
test
add
or
mov
add
loopne
dec
fs
fcoml
sub
pop
popf
add
sbb
ds
or
cmp
adc
imul
add
add
out
js
cmp
add
jecxz
jnp
adc
jle
jl
mov
add
add
pop
push
sbb
in
cwtl
lcall
adc
sbb
xchg
xchg
xchg
pop
rclb
inc
mov
xchg
xchg
add
inc
ds
fnsave
andl
or
mov
fadds
add
addl
sub
jne
jbe
jnp
or
add
pop
es
jnp
xorl
pop
clc
insb
addl
inc
aad
mov
pop
add
cmp
jnp
pop
rorb
aas
into
lock
adc
sbb
jns
or
ret
mov
xor
pushf
jo
xor
inc
cmp
iret
out
sahf
mov
int
enter
inc
or
add
divb
rorl
xor
and
push
add
pushf
add
lret
data16
push
movsb
inc
setno
or
addb
ret
ljmp
sub
mov
jnp
jo
dec
inc
mov
cmp
cs
add
xchg
and
int3
sbb
into
hlt
mov
cmp
loope
add
or
push
sbb
dec
push
or
add
into
jge
shl
dec
mov
stos
add
pop
add
aad
jl
add
add
subb
movsl
mov
jnp
mov
cmpsl
stos
cmp
imul
add
mov
jae
jp
addl
outsb
or
insb
scas
and
add
jge
stc
add
orl
mov
xor
mov
cwtl
out
and
dec
add
add
sbb
and
sub
or
inc
inc
in
push
xchg
inc
shlb
push
sub
ret
cmp
fcomps
add
xchg
dec
xchg
je
jecxz
adc
push
mov
nop
or
sub
mov
mov
lods
mov
adc
push
or
or
mov
aaa
aam
aam
shrl
cmp
mov
popa
rcll
sub
push
sub
add
mov
stc
inc
fld
dec
xchg
sbb
icebp
xor
movb
cmp
jle
add
pop
push
xorb
icebp
stos
es
rorl
popa
sub
or
xchg
dec
pop
jno
rcrl
inc
sbb
add
loop
add
in
sub
jbe
lret
push
sbb
xor
dec
rcrb
mov
in
scas
cld
cmp
or
mov
mov
data16
inc
movsb
add
dec
or
and
or
mov
shll
sub
mov
xchg
scas
shl
mov
push
stc
ret
popf
sbb
or
imul
mov
mov
popa
idivb
mov
scas
jge
push
sbb
dec
jbe
addr16
jbe
xchg
mov
jbe
inc
loop
mov
and
cmp
or
push
negl
clc
loope
mov
in
mov
push
cwtl
add
xchg
gs
inc
imul
loope
scas
sub
xchg
cmp
add
arpl
js
xchg
rcll
shlb
xlat
push
xchg
test
cwtl
dec
fs
arpl
jb
popa
jnp
or
sub
or
iret
inc
or
addr16
lret
push
sahf
andl
push
inc
xor
scas
test
pushf
dec
adc
sbb
lds
lss
imul
das
movsb
adcb
std
or
xchg
inc
dec
movsl
xor
dec
aas
mov
xchg
and
xchg
cmc
loop
inc
dec
xor
pop
mov
shrl
pop
or
add
cwtl
insb
adc
loope
inc
in
mov
pop
push
mov
shlb
pop
xlat
push
jo
xchg
lods
orb
ret
aam
adc
adc
js
sub
nop
and
ja
clc
and
addl
jno
mov
sub
imul
movsb
jae
adc
insl
fdivs
xchg
cwtl
jp
bound
mov
into
xchg
mov
loope
jmp
loopne
inc
inc
jo
inc
jae
xlat
xchg
scas
sub
inc
rol
shl
inc
shrb
mov
xor
jo
mov
test
out
cmp
fwait
enter
inc
addl
sub
pusha
cld
nop
je
andb
add
mov
subb
jp
xchg
mov
cs
iret
dec
sub
test
push
and
xorl
test
call
std
mov
out
inc
xor
imul
mov
adc
pop
adc
add
nop
cmp
sub
push
aad
rolb
or
imul
cmc
and
insb
xchg
mov
scas
sarb
sarl
sub
adcl
add
push
lock
ficompl
pop
mov
insb
jge
dec
out
icebp
sub
jmp
divl
cmc
shll
mov
add
adc
divl
movsl
mov
in
jnp
aam
or
add
popa
xor
jmp
sub
mov
or
in
adc
xchg
push
mov
adc
add
ljmp
movsl
addb
test
sarb
push
movsl
mov
aam
push
push
xorps
push
add
sbb
and
mov
jb
cltd
cs
mov
idivl
inc
ds
sub
push
test
movsb
push
mov
imul
add
mov
iret
hlt
add
rolb
cmp
gs
inc
jno
jbe
cmp
inc
std
pop
add
and
and
pop
pop
fistpll
mov
xorl
mov
aas
xchg
inc
adc
scas
cmpsl
mov
push
mov
jg
sahf
jo
aas
dec
repnz
jle
and
pop
into
sub
into
add
dec
dec
xchg
pop
aam
mov
and
pop
push
addb
stc
xchg
test
sub
add
xor
adc
lret
aaa
pop
enter
shrl
popf
imul
sbb
jbe
cli
sti
mov
popf
adcb
adc
stos
inc
jmp
lret
ret
adc
xlat
add
xchg
stos
fs
test
push
sub
or
loopne
rcl
lret
cmc
mov
add
cmp
insl
xchg
sbb
jge
inc
sbb
cmp
stos
sbb
mov
sub
xor
xor
imul
imul
sarl
xlat
jnp
ret
int3
xlat
cmp
sbb
sti
xor
arpl
jno
add
hlt
adc
adc
popa
cmpsb
mov
in
mov
rorb
add
adc
pop
cld
ret
sbb
rolb
in
es
push
std
ljmp
add
and
jbe
mov
les
jmp
xor
adc
and
mov
in
adcl
xchg
mov
daa
mov
lcall
stos
jmp
ret
call
mov
dec
fsubs
add
xchg
out
in
lods
cmp
mov
xchg
movsb
mov
jno
imul
or
mov
outsl
mov
loope
repnz
in
pop
mov
mov
fsqrt
mov
and
and
jecxz
push
dec
bound
inc
out
jbe
add
xlat
pop
mov
add
js
and
xlat
nop
out
loopne
mov
lds
jbe
mov
and
jno
push
mov
lock
movsb
insl
xchg
push
pop
push
movsb
imul
rcll
cld
jp
dec
aas
jmp
inc
fisttps
push
jecxz
and
mov
sbbb
jne
in
cmc
xchg
and
aam
test
or
or
mov
je
std
jmp
loope
cmp
push
sub
cmpsb
lcall
add
push
push
cltd
andl
dec
mov
test
xchg
scas
and
mov
jmp
jmp
aad
sub
add
or
adc
mov
out
lock
mov
push
cmp
out
xor
rol
std
cmp
decb
jb
mov
push
mov
mov
adc
fwait
sub
mov
out
push
mov
ljmp
pusha
mov
xor
fadd
sub
in
pop
pop
xchg
pop
dec
cmp
adc
nop
mov
repz
imul
mov
cmp
pusha
xor
rclb
xchg
lods
xchg
add
push
fstpl
fidivrl
sub
stos
lret
in
shlb
dec
mov
into
dec
mov
pop
inc
jmp
fsubr
movsb
cmp
out
int
or
or
push
scas
and
xchg
jo
push
pop
bound
ret
loope
inc
adc
lret
mov
jne
cmp
fwait
cwtl
lret
cmp
jmp
cmpsl
ja
fldt
outsl
aas
push
jno
or
xchg
shll
push
xorl
leave
cmp
push
es
sbb
jp
sub
aad
add
xor
xor
sbb
lea
xor
lahf
mov
add
sub
jbe
sbb
push
cwtl
xchg
pop
gs
jp
mov
test
jecxz
rcll
cmp
dec
mov
push
cmp
xor
adc
mov
fs
jecxz
push
dec
sub
icebp
jmp
adcl
movsb
ret
inc
xor
adc
inc
or
out
test
jp
shll
adcb
xor
lods
mov
int3
xchg
mov
shll
nop
test
dec
push
lahf
pop
lret
xor
jmp
orl
pop
sub
lock
xchg
inc
sub
jne
aaa
or
mov
jae
cmp
xchg
xchg
and
repnz
ja
fs
and
enter
call
dec
pop
adc
adc
ficomps
push
inc
iret
sti
pop
add
add
mov
xor
xchg
push
pop
stc
and
inc
xchg
leave
mov
mov
inc
rcrl
mov
stos
add
add
rorb
dec
mov
sbb
shl
xchg
outsb
mov
push
fcoms
nop
repnz
adc
add
push
lret
add
lods
daa
jl
mov
jne
mov
dec
out
add
and
mov
add
jo
mov
lret
jae
iret
addb
arpl
pop
in
fwait
hlt
frstor
test
dec
lock
add
xchg
insl
and
sbb
sbbb
adc
mov
leave
jnp
jbe
cld
rclb
inc
js
loop
push
movsl
jecxz
jmp
add
roll
mov
sub
loope
inc
xchg
pushf
add
rcll
inc
cwtl
loop
les
aaa
xor
jl
sahf
lcall
movsl
sahf
dec
or
mov
jo
inc
push
add
sub
or
ret
shr
in
and
xchg
adc
mov
cmp
lcall
inc
mov
test
adc
xchg
fisttpl
arpl
fdivl
mov
loope
dec
scas
popf
mov
scas
inc
add
sub
loopne
xorps
xor
ret
inc
bound
inc
lods
sbb
push
lret
inc
sahf
sub
and
cwtl
cmp
push
inc
les
popf
in
ja
mov
fistl
cmp
testl
mov
mov
dec
sbb
fs
stos
or
adc
roll
adc
sbb
out
daa
adc
lock
jno
dec
jmp
pop
mov
adc
pop
sub
jnp
and
adc
fcmovb
in
mov
mov
rcrl
pop
or
loop
mov
pushf
cmp
je
mov
mov
das
out
mov
popf
das
pushf
data16
dec
in
out
or
ret
push
cmp
imul
mov
sub
inc
push
cmp
mov
bound
hlt
mov
into
xchg
je
pop
aam
inc
adc
mov
inc
and
mov
mov
or
bound
loopne
add
or
mov
pop
filds
xchg
xorl
inc
adc
or
inc
imul
pusha
pusha
mov
pop
pop
pop
pop
cmp
fsubs
hlt
adc
inc
sbb
in
in
ret
pop
daa
inc
mov
jbe
das
inc
mov
imul
jge
cmp
mov
test
or
mov
pop
sbb
adcl
inc
ss
js
dec
loopne
lea
or
push
popa
dec
rorl
push
ret
repz
jp
pusha
jge
or
insb
push
out
mov
into
xchg
dec
in
cmp
and
xchg
adc
and
add
add
xor
cmp
mov
push
adc
test
mov
jb
lds
popa
xlat
push
jge
pop
dec
dec
xor
xorl
pop
pop
pop
push
ltr
mov
movsb
idivl
xchg
pop
mov
mov
xchg
pop
and
mov
push
pushf
std
add
or
jae
sub
ljmp
aaa
sub
into
sbb
jne
push
add
pop
cs
ja
dec
jge
outsl
adc
stos
pusha
sbb
xchg
push
add
adc
cmp
incb
in
rcrl
dec
into
add
fisubrl
loop
inc
orb
xchg
pusha
test
push
pop
mov
mov
aas
mov
add
mov
or
les
push
je
mov
xor
pop
sbb
inc
outsl
aam
xor
es
movsl
jno
jbe
jmp
in
jb
std
bswap
rol
jae
pusha
bound
test
ret
inc
push
sub
lock
out
adc
jbe
pushf
inc
or
push
les
jno
addr16
xor
pop
outsl
mov
aaa
cs
xchg
inc
and
sbb
add
adc
push
dec
inc
sahf
aam
mov
push
mov
or
sbb
iret
arpl
adc
sub
or
test
and
shlb
das
adc
in
aas
push
or
mov
mov
shrb
adc
loope
cs
mov
adc
pop
fistpl
mov
mov
dec
sbb
inc
rorb
pop
imul
sub
ret
stos
xchg
lea
mov
cwtl
xchg
and
jle
pop
dec
testl
leave
into
sub
push
nop
inc
mov
or
xchg
es
jle
xorb
jno
dec
pusha
pop
add
cmp
gs
lods
movsl
inc
or
xor
mov
add
mov
add
sbb
mov
xchg
test
xor
fcmovbe
clc
movsb
fdivs
insl
push
add
push
or
outsl
xchg
mov
cmp
shll
dec
or
test
addr16
xchg
jmp
and
or
loopne
adc
pusha
lret
es
hlt
mov
lods
ret
out
dec
dec
mov
sub
shll
cmc
add
movsl
dec
push
lods
imul
cwtl
inc
sahf
lret
jbe
xchg
cltd
inc
repz
addl
cmp
aas
hlt
mov
adc
insl
sub
fldenv
sub
push
insb
stos
mov
jae
add
sbb
movsb
sbb
daa
and
callw
mov
test
vpaddusw
adc
add
inc
jae
sub
jae
in
adc
jmp
in
jl
pop
outsl
inc
inc
inc
rolb
xor
inc
inc
daa
bound
test
xor
outsb
mov
clc
aad
xchg
ret
sbb
xchg
push
push
add
pop
nop
push
mov
int3
aam
push
arpl
repnz
lea
mov
sbb
jecxz
lea
dec
cmp
cmp
into
adc
lret
or
mov
push
inc
push
loopne
inc
xor
fs
cmp
les
mov
in
adcb
mov
dec
test
lret
ret
movsb
add
mov
mov
xor
xchg
add
insb
sub
lea
xlat
pop
dec
mov
cmc
xchg
loope
push
add
addr16
and
and
xchg
scas
daa
mov
sahf
mov
adc
push
xchg
pop
dec
mov
pop
lock
jo
sbb
outsb
pop
adcl
es
push
cltd
daa
xor
cmp
in
fcmovnbe
repz
jmp
rcrl
dec
adc
call
adc
out
out
lock
ret
push
mov
pop
sbb
lret
xchg
or
adc
insb
mov
add
lret
push
mov
inc
adcl
sbb
inc
fucomp
ljmp
add
and
or
sub
je
ljmp
iret
mov
incl
lds
dec
in
mov
test
jge
dec
cmpsl
pop
aam
stos
lcall
test
pop
gs
js
sbb
push
js
xor
enter
mov
add
xor
push
out
adc
roll
sahf
pop
pop
mov
movsl
mov
pop
mov
inc
or
or
cltd
insl
sbb
jnp
cmpsl
inc
mov
lcall
xor
pop
ss
jmp
xchg
popf
stc
frstor
sbb
inc
pushf
push
jg
pop
inc
pushf
pop
fimuls
icebp
pop
adc
adc
pusha
sub
mov
mov
mov
testl
mov
loopne
sub
sub
adc
jle
rsm
addl
lcall
ss
fistl
mov
movsl
subb
pop
leave
shlb
mov
xorb
or
data16
add
daa
dec
imul
daa
cmpb
sbb
sub
cmpsb
pop
or
add
ret
lds
pop
xorl
inc
adc
xchg
cmp
or
call
enter
inc
or
ja
pop
mov
mov
inc
cmc
mov
lea
stc
pop
sub
pop
or
ds
xchg
ret
in
jnp
shl
cmp
mov
xchg
ret
add
xor
xlat
and
fsubrs
dec
ja
or
sub
push
push
mov
clc
xchg
jl
mov
cmp
rdtsc
xchg
xor
loopne
mov
dec
movsb
mov
xchg
sub
pushf
push
jg
and
hlt
and
sub
mov
bound
jns
roll
std
push
enter
in
adc
out
mov
sbb
iret
inc
cmp
outsb
dec
in
adc
push
mov
jge
pop
movsb
mov
loop
and
popl
xor
sbb
push
jo
cmp
inc
in
xchg
mov
mov
outsb
pop
loope
cmp
sbb
sub
sbb
cmp
leave
lock
popa
fcompl
pop
mov
idivl
repz
pop
pushf
mov
test
cmp
cmp
cli
sbb
add
or
mov
nop
mov
cmp
outsl
pop
pop
stos
imul
mov
or
gs
addl
loopw
cmpb
std
xor
mov
and
shll
mov
push
jecxz
pop
les
and
fldt
and
xchg
dec
or
pusha
leave
sbb
or
scas
dec
sbb
push
pop
inc
cmp
pop
pop
sbb
dec
xchg
dec
js
add
jge
cli
inc
inc
mov
xorb
aad
cmc
inc
and
inc
xchg
jae
sqrtps
lahf
cmp
sbb
popf
add
lret
xor
push
aas
mov
loop
adc
add
mov
sbb
scas
add
inc
adcb
inc
jge
ss
xor
andl
scas
mov
push
pop
dec
arpl
shrl
mov
arpl
and
xlat
call
xor
dec
testl
pop
sub
sub
mov
or
aaa
adc
daa
push
in
shll
in
xchg
iret
popl
sbb
adc
cmp
inc
inc
cmp
int
sbb
or
mov
in
and
pop
sub
xor
add
arpl
push
rcr
add
ret
stos
sbb
xchg
mov
add
mov
lea
js
push
arpl
xor
cmp
and
push
inc
or
sbb
cmp
shlb
insb
push
sbb
dec
push
loope
or
outsl
sbb
es
jno
dec
jae
push
mov
imul
sub
scas
outsl
push
jo
addr16
inc
xlat
sub
aaa
xchg
push
mov
loopne
ds
xor
add
ret
imul
sarb
cmp
push
add
dec
shlb
and
add
add
lea
in
sarb
insl
inc
adc
scas
dec
sub
mov
mov
mov
mov
imul
dec
push
or
pop
scas
sti
xchg
in
and
stc
lods
pop
sbb
mov
add
sub
push
js
ss
out
lea
inc
jo
aas
inc
push
pop
sbb
adc
mov
mov
adc
add
cmp
dec
inc
and
pop
pop
xor
loopne
mov
mov
mov
ds
push
jo
arpl
xchg
outsb
inc
lret
dec
mov
jns,pn
dec
pusha
sub
pop
jo
cmpsl
test
js
adc
gs
popf
mov
repnz
add
mov
adc
ljmp
sub
mov
push
roll
mov
in
pop
and
sbb
jns
jnp
mov
addb
test
cmc
and
imul
test
outsl
push
jae
ljmp
stos
push
cmpsb
sbb
push
lahf
sbb
push
add
cli
and
mov
imul
sahf
add
pop
out
testb
and
jbe
sbb
xor
mov
mov
lods
imul
jecxz
repz
cmp
mov
push
mov
sbb
cmpsb
xor
add
pop
cmpb
ja
mov
mov
add
nop
pop
pop
int
adc
cmc
pop
jno
xorl
fldenv
mov
sbb
pusha
mov
add
or
or
pop
nop
pusha
mov
sub
int
shlb
jae
and
shl
sub
push
add
inc
cmpb
jb
mov
add
sub
cmpsb
pop
jmp
bound
ljmp
roll
ret
adc
jno
pop
and
or
inc
ret
jo
sbb
les
adc
inc
and
or
xchg
pop
mov
xchg
mov
mov
inc
popf
imul
leave
addl
sbb
mov
ja
cmp
and
sbb
sub
mov
stos
movsb
test
nop
and
sbb
lods
dec
insl
aaa
sbb
adc
xor
mov
mov
arpl
or
mov
lds
popf
mov
nop
push
mov
xor
push
push
pop
sbb
les
ret
xchg
ja
cvtdq2ps
jb
push
pushf
loopne
fadd
xor
adc
cli
mov
mov
je
adc
clc
jmp
sbb
add
or
add
or
xor
shlb
sub
add
bound
add
pop
addr16
ds
cmp
adc
imul
rcll
int
lret
ljmp
mov
scas
cmc
sbb
or
push
shr
andl
xchg
js
jns
push
pop
sbb
lahf
mov
mov
rcll
pop
push
xchg
mov
outsb
fs
sbb
loop
out
adc
fbstp
fisttpll
pop
mov
nop
iret
cltd
xchg
aaa
sub
xorb
test
xor
cmp
xorl
adc
xor
repnz
adc
dec
push
add
jno
dec
and
in
pop
adc
pop
inc
push
mov
xor
fcom
add
insl
movsl
fnstsw
icebp
shl
jl
mov
mov
push
jle
dec
adc
adc
enter
mov
mov
loop
je
aas
fadds
adc
pop
stos
xchg
je
repz
add
push
mov
movsb
dec
mov
ljmp
mov
add
jp
cmpb
jo
cmp
inc
mov
sub
add
pushf
add
push
mov
test
push
add
mov
push
rorb
mov
jle
jmp
inc
mov
arpl
dec
movsl
adcl
rclb
rorb
fistpll
jp
dec
mov
pop
leave
inc
nop
cmp
cmp
rorb
mov
mov
lret
xchg
mov
lret
mov
popa
adc
push
nop
mov
pop
add
jecxz
jo
inc
cmpsb
cli
mov
or
mov
ja
sub
jl
and
add
cmp
or
push
mov
ret
push
xchg
leave
push
in
and
cwtl
rorb
outsl
xchg
mov
xchg
dec
xchg
mov
or
mov
add
xchg
sub
sub
inc
loope
lea
mov
mov
xor
push
cltd
pop
dec
cmp
xor
xorl
sub
inc
stos
dec
daa
dec
sbb
jnp
cmp
or
aam
aam
mov
loopne
jnp
sub
sub
sbb
and
inc
adcl
and
loop
scas
imul
or
mov
dec
or
orl
lods
inc
clc
push
inc
mov
sbb
and
xor
pop
push
sub
cmp
or
and
mov
inc
jge
mov
add
int3
mov
adc
fs
in
in
fsubs
xchg
ljmp
cwtl
jge
ficompl
adc
xchg
loope
outsl
adc
nop
dec
and
or
dec
inc
mov
imull
cmp
pop
lods
stc
sbb
and
sbb
or
jmp
aam
sbb
icebp
jge
fsubs
pop
xor
mov
jnp
jl
shlb
rolb
cmp
jl
mov
sbb
addr16
loopne
adc
nop
jp
ud1
sarb
test
push
repz
je
jmp
mov
push
sub
pop
imul
xor
sbb
xor
sbb
mov
inc
sub
adcl
mov
loope
dec
call
movsl
mov
cmp
ljmp
dec
ds
fimull
add
pop
mov
insl
jne
popf
push
add
pop
mov
dec
jmp
scas
and
sbb
push
and
adc
mov
iret
push
sbb
push
rolb
in
fidivl
xlat
sub
dec
clc
imul
and
test
sbb
jge
jp
cmp
jo
add
outsl
mov
mov
jnp
or
sbb
shll
add
cmp
es
loopne
jmp
pop
movb
in
pop
adc
add
jge
inc
subb
sub
mov
or
push
shlb
mov
pop
inc
mov
loop
sbb
test
push
popa
shl
loope
loope
inc
enter
test
in
lcall
xchg
nop
fcmovb
les
inc
subb
cmp
fs
mov
mov
pop
sarb
mov
cltd
jno
xor
xor
push
mov
xchg
dec
int3
and
fists
pop
mov
jo
jg
stos
jae
or
mov
mov
and
fistl
add
into
cltd
xchg
or
sbb
test
mov
pop
fmuls
add
inc
ret
cmp
xchg
add
sbb
cs
int
inc
ja
and
mov
pop
xor
enter
cmp
dec
js
jp
dec
iret
and
nop
push
mov
mov
xchg
xor
call
dec
pop
call
jbe
cmp
addr16
repnz
fmul
cld
repnz
inc
mov
into
dec
push
cmp
inc
fmuls
adc
mov
push
push
les
mov
inc
inc
or
push
movsl
call
cmp
push
dec
ja
add
jno
and
lea
sbb
mov
jo
inc
xchg
sub
mov
ja
push
notl
jae
xor
loope
or
outsl
std
insb
inc
dec
ret
or
mov
jns
xor
in
cmp
dec
loope
cli
or
xor
fsubs
sbb
loope
pusha
in
and
xorl
add
rorl
mov
dec
or
dec
jnp
cmp
inc
mov
mov
imul
and
iret
sub
pop
sub
add
and
int3
cmpsb
fdivrl
fisubs
adc
adc
dec
lods
lods
jnp
dec
shlb
add
arpl
cmp
add
push
mov
lea
add
sbb
imul
sub
xchg
cld
xor
add
pusha
and
jno
xchg
xor
push
xchg
jne
xchg
xor
fldl
jmp
mov
pushf
adc
ret
mov
sbb
add
and
inc
fimull
ss
adc
xor
movsl
sub
test
cwtl
adc
aad
jb
movsb
and
nop
add
test
pushf
cmp
and
subl
sub
mov
int3
int3
inc
addl
int3
aad
add
pop
shrl
add
int3
mov
gs
jmp
push
cwtl
rorb
sub
imul
ljmp
add
loope
or
xchg
lret
pop
adc
adc
outsb
xor
sub
jecxz
push
xchg
jno
sub
push
les
push
out
pop
cmpsb
pop
aam
add
push
push
mov
test
cmp
push
mov
cmp
add
xchg
mov
xchg
sti
xchg
aam
push
loope
sub
adc
xchg
lcall
pop
or
fsubr
ret
jb
xor
jne
sub
push
aam
jmp
adc
jecxz
inc
adc
imul
notb
dec
push
jo
and
jecxz
and
xchg
and
scas
xor
cmpsl
movsb
filds
jg
or
mov
arpl
aam
sub
adc
pop
dec
cmp
or
dec
stos
or
cmpsl
test
cltd
lea
inc
addr16
xchg
out
pop
les
out
and
fsubrl
adc
fisubs
xor
mov
push
pushf
or
push
dec
dec
into
loopne
or
and
jecxz
add
test
pop
in
pop
flds
aaa
and
xchg
andl
outsb
test
sub
inc
enter
sbb
xor
cltd
sarb
jne
xlat
data16
fcoms
mov
daa
or
add
sarb
mov
testl
add
and
dec
jge
rcl
push
jp
xchg
jne
in
xor
add
cmpb
pop
dec
add
inc
add
adc
mov
iret
ret
push
add
and
stc
aas
imul
jle
or
movsb
in
loopne
rclb
push
or
cmp
js
inc
loopne
fwait
bound
loop
pop
into
push
test
mov
jo
push
fisubs
or
repz
sahf
jae
pop
or
nop
andb
inc
ror
or
xchg
sub
push
arpl
xchg
stos
xchg
cmpsl
pop
pop
pop
xchg
mov
xchg
sbb
adc
pop
ret
popf
out
cltd
repz
jmp
bound
mov
filds
jae
rorl
imul
pop
mov
mov
notl
or
add
xchg
addb
push
pop
and
mov
lret
shll
subl
out
xorb
add
imul
daa
pop
jl
enter
fstl
sbb
sub
mov
sbbl
dec
inc
lods
nop
adc
loope
scas
cmp
and
push
mov
or
adc
mov
and
and
and
inc
or
mov
add
xchg
sbb
mov
add
insl
or
add
cmp
ja
cmpsl
mov
adc
mov
inc
shlb
inc
add
test
scas
cmpsl
mov
popf
dec
mov
inc
inc
icebp
push
nop
sbb
dec
adc
cmp
stc
sbb
ss
mov
mov
xchg
lcall
push
sahf
cli
pop
push
jmp
pushf
mov
xor
mov
xchg
popf
scas
fmull
push
sarb
int
push
sbb
sub
daa
dec
adc
dec
ud0
loope
or
shr
add
scas
repnz
in
add
in
pushf
cmpl
enter
stos
dec
adc
lods
lods
sbb
dec
push
mov
ret
xchg
cmpsl
xor
rclb
xchg
or
cwtl
dec
pop
test
or
mov
nop
mov
adc
dec
or
add
mov
pusha
pop
jecxz
out
lcall
pop
dec
jo
cmovns
add
adc
pusha
and
dec
cld
sub
data16
subl
je
mov
adcb
push
pop
cmp
jl
jns
xchg
ret
je
pop
inc
sbb
or
enter
mov
dec
pop
adc
je
aam
mov
push
add
es
mov
mov
loop
nop
shll
xor
mov
clc
sbb
or
adc
loope
mov
dec
mov
add
pop
adc
ret
testb
jle
rcrl
fcoml
rorb
ret
push
ret
les
cmp
cs
add
push
dec
add
cmc
dec
sti
dec
int3
jle
rclb
ffreep
xchg
lcall
addr16
mov
outsl
jge
or
notb
push
sarb
out
add
dec
out
sbbb
test
dec
stc
fs
add
pusha
dec
add
xor
mov
xchg
or
adc
mov
push
xlat
das
in
andb
mov
test
mov
inc
shlb
inc
ret
ljmp
push
ja
dec
rcrb
imul
add
adc
es
ljmp
mov
loopne
mov
dec
mov
jo
or
cmc
add
cmp
cmp
cmpsb
mov
or
jo
mov
enter
push
pop
pop
imul
sub
das
out
mov
pusha
dec
xorl
popl
aas
mov
push
call
es
jno
mov
mov
ficompl
jg
add
sbb
xor
test
push
xchg
inc
xchg
pop
or
dec
sub
xchg
push
dec
cli
xor
add
dec
sbb
addl
ret
jns
inc
add
jns
sbb
rcrb
dec
xor
loopne
insb
rcrl
push
stos
pop
cwtl
fmull
add
xor
lret
inc
cmp
dec
dec
or
fisubl
add
push
stc
mov
add
js
data16
xor
dec
jmp
fs
and
or
jp
es
roll
xchg
sti
push
arpl
cmpsl
ja
in
test
bound
andl
push
mov
loopne
push
inc
pop
jne
rol
shrb
insb
andl
mov
and
in
and
rolb
and
sbb
test
jmp
mov
pfnacc
add
add
les
lods
dec
inc
mov
jo
add
add
and
jne
rclb
pop
mov
pop
ja
cmpb
inc
and
mov
mov
xchg
in
outsb
and
lahf
cltd
jns
repz
orb
mov
sbb
mov
inc
and
or
jmp
fisttpll
addl
mov
cmp
dec
sub
xor
hlt
push
lea
mov
inc
or
cmp
inc
inc
jmp
dec
xchg
adc
add
mov
sbb
push
cmpl
push
xor
sbb
or
jb
jb
push
rolb
mov
in
adc
jo
leave
pop
bound
dec
inc
jo
add
add
pop
mov
xor
or
cld
sub
loope
mov
cmp
icebp
inc
xchg
movsl
arpl
pop
jmp
or
inc
jo
mov
mov
ret
std
xchg
xchg
rorb
arpl
mov
add
mov
pop
xor
test
mov
push
push
add
or
xor
push
add
fmul
mov
mov
push
push
add
lods
jnp
ds
inc
fimuls
xchg
fwait
dec
jmp
test
jmp
pop
lcall
mov
jg
mov
nop
adc
cmp
pop
adc
cs
add
sub
xor
adc
xchg
enter
cmp
and
and
pop
cli
les
cmpsl
sub
int3
stos
mov
adc
or
fwait
push
lahf
int
adc
push
rclb
sbb
sub
xor
cmp
mov
lret
or
xorb
push
pop
xchg
jo
rorb
fiaddl
faddl
fcompl
push
mov
mov
dec
xchg
idivb
pop
inc
and
add
and
inc
push
mov
inc
mov
mov
loope
add
add
addl
js
sub
ja
or
das
fwait
stos
sarb
sub
lea
pop
sub
test
mov
pop
xchg
nop
xor
push
mov
ret
add
fsubs
jae
pop
push
pop
inc
or
mov
fbstp
or
fildl
xchg
aas
add
add
js
add
movsb
inc
fstpt
shlb
lret
ds
sbb
bound
insb
push
lea
dec
test
lahf
cwtl
and
jno
xchg
insl
adc
es
adc
mov
jl
rcr
rcrl
jns
dec
mov
mov
mov
mov
inc
dec
movl
or
cmpsb
mov
dec
push
jo
daa
push
daa
loop
push
fnstenv
cmp
sub
sbb
movsb
clc
imul
sbb
nop
stc
outsl
mov
cs
fiaddl
or
inc
and
pop
repz
jb
dec
inc
inc
imul
mov
aam
add
lea
mov
cmpsb
jo
dec
xchg
lock
fimull
push
cmpl
adc
xor
repz
dec
push
jge
mov
mov
dec
in
add
xor
ljmp
adc
stc
ret
adc
push
sub
sub
in
sub
jo
mov
into
shlb
orl
mov
or
mov
mov
insl
fwait
mov
sub
cmp
inc
push
xchg
add
or
lods
xchg
mov
push
pusha
mov
and
pop
test
add
add
xchg
mov
pop
push
mov
inc
aam
notl
adc
cwtl
inc
stos
mov
mov
dec
dec
cmpsl
sub
adc
push
add
sub
add
cli
xor
push
push
fs
adc
sub
and
sbb
mov
add
lret
mov
adc
add
add
cmp
inc
pop
pop
pushf
and
call
js
imul
xor
sub
pop
pop
insb
fsave
push
mov
add
add
push
vandnps
imul
push
push
pop
scas
cmpsl
fs
rclb
insb
or
dec
ljmp
pop
xchg
dec
call
adc
or
sbb
call
push
jle
call
mov
push
imul
push
loope
inc
sbb
sbb
push
lds
rol
xchg
mov
in
cmp
jmp
inc
loop
or
and
sub
adc
push
fstpl
mov
or
xchg
xor
mov
clc
imul
sub
xor
mov
inc
es
dec
lea
xchg
jmp
mov
mov
adc
inc
dec
pop
dec
add
xchg
push
mov
mov
dec
in
mov
pop
add
and
mov
or
xlat
sbb
in
pop
pcmpgtw
add
ss
pop
inc
and
gs
test
lahf
out
inc
sbb
dec
add
xchg
mov
mov
or
mov
pop
adc
gs
and
test
mov
jge
test
rcl
xchg
jmp
pop
inc
and
mov
test
jmp
add
cmp
xchg
mov
pop
mov
rcll
inc
int3
push
mov
pop
rcl
jae
dec
cmp
out
mov
xorb
and
and
xor
push
mov
aaa
pop
cmp
movl
adc
in
pop
outsl
dec
iret
and
mov
stos
mov
cmp
cmpsb
loope
and
mov
adc
jmp
mov
sub
xor
xchg
xchg
jecxz
mov
dec
arpl
inc
adc
shlb
and
dec
sub
adc
lock
mov
mov
lea
jbe
ja
adc
outsb
lcall
mov
dec
sub
test
dec
sbb
and
outsl
popa
adc
jmp
cwtl
lods
arpl
arpl
jno
sub
sub
nop
and
daa
cmp
outsb
mov
add
add
inc
pop
cs
notl
jns
add
pop
or
les
xchg
ret
adc
sbb
inc
outsl
lret
jno
neg
mov
lock
std
mov
sbb
bound
mov
rcrl
dec
add
sbb
jmp
adc
add
xorb
jmp
inc
test
push
gs
outsl
dec
inc
dec
movl
into
js
or
xor
xor
push
push
pop
aam
push
sub
lea
inc
push
imul
xor
ljmp
pushf
sbb
ret
ret
xor
mov
sbb
iret
testl
xor
imul
mov
daa
dec
aam
xor
xchg
ret
std
push
mov
ja
test
and
js
jle
inc
push
jo
add
rol
xor
pop
scas
inc
mov
sbb
call
mov
mov
clc
dec
mov
jecxz
outsl
sbb
test
jecxz
and
mov
mov
xchg
loopne
push
push
inc
loope
in
in
push
mov
hlt
dec
nop
or
dec
pop
pop
or
push
aad
jecxz
push
cmp
cmpsl
dec
rcr
and
jo
pop
adc
pushf
test
inc
dec
rol
sbb
adc
testl
mov
fadd
insl
adc
mov
inc
jo
push
xchg
push
stc
sbb
adc
popl
or
mov
dec
insb
cmp
cmp
jle
adc
jecxz
pop
adc
push
das
sbb
int3
pop
mov
pop
jno
pop
mov
je
mov
jb
push
mov
jl
ljmp
jo
jbe
loopne
jbe
js
call
inc
pop
or
movb
pop
das
adc
repnz
fmull
add
inc
cmp
adc
sbb
into
mov
jge
ret
es
xor
jns
add
sbb
fwait
xor
adc
pop
sbb
add
rcl
mov
xchg
mov
orb
int
or
mov
movsb
scas
imul
mov
clts
pop
push
sub
aam
jo
mov
dec
fistps
adc
rorl
xchg
imul
xor
jns
pop
mov
in
testl
out
mov
test
cmc
jl
mov
mov
sbb
subl
cld
dec
jnp
jmp
jge
out
js
cmpsl
repnz
popa
out
dec
gs
movsl
cwtl
and
add
dec
iret
jno
fadds
lahf
add
jmp
mov
std
jmp
sahf
jg
repnz
add
xchg
jge
inc
jnp
xchg
pop
xlat
arpl
jnp
js
mov
mov
out
repnz
popf
mov
pop
cmp
clc
pop
repz
filds
loope
inc
jae
sbbb
repz
cltd
out
repnz
lock
dec
and
adc
push
push
adc
inc
mov
sbb
inc
or
mov
mov
dec
stos
mov
aad
cltd
inc
sub
adc
jmp
or
mov
lock
jecxz
pop
xor
push
lret
push
lods
cmove
mov
inc
jecxz
loope
adc
cwtl
call
push
imul
adcl
mov
adc
xchg
push
add
loopnew
and
out
mov
add
sub
sahf
nop
xor
xor
subl
sbb
aaa
roll
xchg
mov
jecxz
add
sbb
ror
or
pop
inc
lahf
shlb
sbb
inc
cmp
lea
dec
and
iret
aaa
mov
add
fsubl
cmp
dec
orl
dec
push
test
add
add
and
push
int
xor
out
pop
jno
push
mov
xor
repz
xor
scas
jno
add
les
popa
sbb
xchg
rolb
xor
jmp
test
or
out
out
mov
inc
rcrb
pop
mov
sub
gs
aas
pop
ret
jp
aad
lahf
or
adc
imul
sbb
or
mov
shlb
xchg
push
and
in
das
mov
fmull
in
dec
jle
jecxz
arpl
outsb
adcl
xchg
inc
shlb
mov
xor
mov
inc
nop
dec
dec
jmp
arpl
push
jge
push
es
subb
arpl
inc
stos
inc
mov
mov
xchg
fmuls
push
add
cli
dec
xchg
mov
adc
clc
lods
mov
cmpsb
lock
pusha
loop
outsb
das
jnp
cs
sbb
test
mov
or
icebp
push
sbb
push
js
test
push
imul
push
mov
ds
aam
xor
hlt
or
inc
shrl
mov
push
adc
adc
lahf
cwtl
lret
dec
dec
imul
sub
pop
aad
cli
scas
and
inc
adc
pop
enter
cmp
and
rclb
dec
mov
adc
subl
int
sahf
outsl
push
test
cmpsb
in
js
push
jge
inc
inc
cmp
outsl
push
cwtl
xor
ret
pop
fwait
xchg
or
lea
jb
js
sbb
inc
add
stos
mov
add
sub
andl
xor
leave
test
add
fwait
xchg
lds
dec
add
je
test
mov
gs
mov
lret
sbb
push
and
pop
and
jo
rorl
std
adc
jp
push
dec
pop
test
xchg
movsb
rorb
pop
cmpsb
stc
or
arpl
adc
inc
pop
movsb
jo
jl
cltd
aam
les
lcall
out
int
add
jge
lret
add
add
inc
pop
jge
push
jne
cmp
repz
push
insb
and
inc
orl
gs
out
int
jmp
push
cs
xor
xorb
lods
dec
ret
xlat
adc
aad
xchg
push
lret
fwait
sarl
sar
cmc
push
iret
jmp
jne
dec
pop
out
lods
aas
cwtl
push
adc
dec
xorl
lret
in
inc
pop
add
pop
pop
sub
icebp
fwait
shlb
adc
ja
or
lock
xor
mov
fxch
jns
and
push
hlt
mov
push
cmpsl
fs
or
test
popf
inc
mov
call
xorl
fadd
aad
insb
and
fsubs
jbe
stos
or
add
out
inc
out
loopw
leave
jle
mov
in
int3
jp
scas
mov
mov
or
lret
outsl
jae
sbb
mov
ret
shll
stos
loop
add
fwait
stc
inc
call
icebp
dec
sub
insl
pop
push
sub
outsb
push
mov
sbbl
shr
inc
sahf
mov
aas
mov
sub
dec
ljmp
pusha
mov
adc
push
adc
jmp
aas
and
sub
das
test
mov
imul
push
pop
dec
xor
push
xor
or
inc
mov
dec
cmp
pop
insl
jbe
testl
hlt
jb
notl
xchg
addb
pop
push
and
addr16
mov
je
sub
add
daa
daa
cld
mov
dec
xchg
add
mov
movsb
pop
add
enter
movsl
gs
push
jns
sbb
js
mov
sbb
mov
push
push
mov
xor
push
sbb
sub
jno
sub
movsb
ja
fwait
push
les
arpl
push
push
xchg
nop
dec
dec
out
and
sbb
nop
mov
scas
jns
stos
or
sbb
inc
adc
aas
scas
lret
ss
add
and
shll
xchg
add
sub
ret
push
lcall
xchg
lea
sub
dec
ret
gs
outsb
add
jne
mov
mov
in
ss
mov
xchg
cmpsb
ss
xor
pop
inc
jae
ret
lds
pop
addr16
add
orb
jle
xchg
push
sbb
xor
dec
loope
sarl
scas
dec
jae
jecxz
aas
mov
push
pminsw
idivb
mov
push
pop
jae
add
rclb
mov
xlat
ja
inc
decb
pop
push
push
jecxz
subb
xchg
push
arpl
cs
movsl
dec
gs
add
inc
mov
or
mov
sub
mov
pop
mov
test
and
lea
push
ljmp
or
push
xor
xchg
xor
dec
sbb
nop
sub
repnz
push
dec
mov
sbb
adc
movsb
mov
push
xor
push
shlb
enter
rorl
rorl
call
addl
sbb
imul
sbb
add
mov
xchg
pop
sbb
or
and
aas
xchg
mov
adc
push
mov
sbb
aaa
cmpsl
ja
adc
xchg
ss
stc
cmp
pop
insb
jg
mov
popa
adc
jne
and
fisttps
movsl
sbb
loopne
pop
inc
adc
push
sub
cmc
xchg
ds
loopne
hlt
cmp
sahf
call
aad
jnp
imull
leave
ret
mov
mov
mov
fidivl
mov
inc
cmp
inc
xchg
adcb
test
mov
popa
adc
addb
fistl
dec
xchg
inc
int3
push
pushl
loope
jbe
adc
ss
cli
push
cmp
push
imul
or
push
add
sub
sbb
or
js
ds
mov
ja
arpl
add
adc
bound
push
mov
lock
or
mov
xchg
imul
adc
int
or
xchg
sub
fiaddl
xchg
jb
enter
pop
xchg
inc
test
and
sub
add
imul
xor
adc
loopne
xor
push
mov
inc
dec
loop
inc
cs
and
cli
lahf
mov
lahf
xlat
fmull
adc
fcoml
imul
mov
daa
std
or
lds
ficomps
cs
stos
sbb
push
inc
jo
adc
or
xor
ret
xchg
mov
and
xor
cmp
addl
jge
sbb
out
or
sbb
dec
test
pop
dec
jb
dec
push
or
xor
mov
test
sbb
jne
jnp
pop
sub
jno
sahf
sbb
in
rcll
add
jno
cmp
dec
outsl
adc
sub
pop
jmp
stc
sub
mov
ja
loopne
jge
jmp
sbb
mov
or
add
jecxz
mov
pop
repz
loopne
jp
andl
sbb
das
or
andl
andb
pop
imul
or
sbb
sbb
inc
push
ret
jecxz
cwtl
ljmp
mov
imul
xor
push
addb
mov
nop
les
ss
lahf
cmp
cmp
jno
rolb
sub
test
sbb
fdivrs
fcoms
adc
xchg
das
cmp
scas
bound
xchg
jne
xchg
mov
cltd
and
mov
add
xchg
or
push
lea
cmpsl
dec
and
je
mov
loope
es
shlb
sbb
adc
mov
push
cmpsl
mov
das
cmp
dec
in
les
adc
jae
push
das
sbb
ret
add
sub
sub
movsl
scas
jmp
or
icebp
xchg
ret
push
and
jae
add
or
dec
and
xchg
int
mov
cmp
xchg
xchg
shll
pop
sub
lock
add
in
and
rclb
dec
das
call
xor
bound
outsl
push
add
rorl
movaps
or
add
mov
add
arpl
pop
xchg
mov
pop
rol
stc
cmp
mov
add
cmp
test
inc
push
push
mov
shlb
stc
and
fisubrl
ljmp
or
inc
out
jnp
jb
dec
mov
inc
loop
orl
fwait
sub
push
and
mov
add
cld
xchg
hlt
sbb
push
popf
sbb
das
add
cli
xchg
ret
push
xchg
push
mov
lock
lea
sbb
jl
ljmp
test
gs
xchg
jbe
or
mov
rcrb
in
xchg
mov
out
cli
xchg
xchg
lods
or
ret
call
or
push
dec
frstor
push
cmp
sbb
daa
xor
inc
push
cmp
xchg
jnp
scas
rorl
adcl
rcrl
mov
mov
cmpsb
push
sub
imul
xor
pop
sti
cmpsb
add
out
fsubs
gs
shll
add
inc
fidivl
push
repnz
imulb
imul
pusha
lret
or
adc
imul
jno
mov
add
xchg
add
inc
psrlw
pop
ds
add
mov
insl
add
pusha
and
mov
mov
dec
sub
mov
imul
faddl
or
bound
outsl
and
mov
cs
jno
push
and
fldt
adc
or
rcll
adc
lock
cmc
rorl
sbb
sbb
outsl
mov
xchg
inc
push
lahf
ret
les
pop
and
adc
enter
popa
sbb
adc
add
cmp
push
fs
xlat
jmp
pop
pop
sub
cmp
xchg
rcrb
aad
aam
gs
pop
cmpb
xchg
cmp
dec
and
xchg
sbb
adc
in
xor
pop
and
in
jb
pushf
push
push
sbb
test
shll
mov
add
adc
sub
xor
lcall
inc
sbb
add
jle
rcr
push
mov
inc
jmp
arpl
fists
les
shrl
jb
push
lea
adc
or
sbb
pop
dec
sub
inc
lods
test
mov
std
dec
mov
xor
pop
cmp
mov
or
xchg
sahf
inc
xchg
inc
mov
shlb
cmp
scas
dec
cmp
xchg
pop
cwtl
ss
push
out
xchg
or
dec
aas
adc
mov
fdivrs
mov
in
pop
movsb
sbb
push
pop
mov
inc
out
push
js
fiaddl
sub
mov
xchg
std
mov
jmp
mov
mov
sbb
cmp
mov
aam
loop
jl
divl
pop
xchg
adc
pop
lods
jge
fimull
leave
adc
nop
and
jecxz
pop
sub
sbb
inc
add
aam
shlb
mov
sbb
mov
or
loope
fwait
jnp
sub
inc
mov
std
inc
xor
mov
sbb
jl
xchg
mov
scas
lcall
dec
movsb
and
out
int3
ljmp
pop
push
lock
or
lahf
mov
adc
pop
jnp
adc
dec
pop
movsl
ret
pop
add
imul
sub
inc
jno
xchg
adc
cmc
push
sub
fdivrs
fnsave
jb
rolb
inc
fiadds
push
push
mov
push
sub
aam
mov
pop
cmp
or
adcb
mov
and
jle
push
adc
jae
hlt
or
loop
or
out
jg
addb
cmc
repz
pop
daa
mov
ja
cs
xor
mov
aad
add
push
aam
inc
out
add
sbb
jo
xor
sbb
insl
xchg
sbb
xchg
nop
scas
out
imul
mov
adc
in
popa
add
fsubrs
inc
dec
dec
push
js
in
sbb
dec
pop
xor
popf
cmpsl
mov
cwtl
ljmp
or
filds
das
int
dec
aas
cmp
xchg
add
xor
sbb
arpl
jg
push
cmp
inc
fists
pop
mov
push
jge
sbb
cwtl
dec
cmp
mov
xor
ja
lahf
jle
dec
test
add
adcl
push
in
fs
lods
inc
mov
fldenv
mov
scas
flds
aam
lret
in
shll
push
test
jg
sbb
and
popa
dec
mov
jne
add
repnz
lods
test
filds
fadds
cmc
leavew
fnsave
pop
jns
jmp
xchg
xchg
or
push
inc
xchg
hlt
loop
iret
add
dec
lods
mov
pop
shl
or
jmp
les
lods
imul
pop
out
jmp
inc
and
cmc
add
call
popf
mov
lea
inc
push
arpl
roll
push
adcb
and
sbb
push
and
xchg
sbb
jmp
les
sbb
mov
and
or
arpl
js
jnp
addr16
dec
xchg
incb
pop
adc
rorb
lea
out
push
jnp
xchg
out
popa
lret
imul
ret
xor
sub
pop
mov
add
mov
jb
sub
rorb
mov
pop
int
dec
and
mov
mov
movsb
mov
add
ds
out
and
cmpsl
inc
sub
lods
cmc
inc
fwait
loope
pop
jmp
xor
ret
mov
shll
inc
xchg
or
mov
or
insb
sti
inc
lret
divb
lahf
loopne
xor
jp
jle
cmp
mov
aam
cltd
push
inc
test
adc
pushf
pop
aam
add
jl
loop
imul
jle
add
rcrb
add
sub
mov
or
xabort
scas
ficoms
lret
inc
or
sub
or
sbb
jle
push
lcall
gs
test
enter
xchg
push
nopl
imul
repz
jne
sub
rcrb
adc
mov
adc
dec
and
leave
loope
add
subb
mov
push
jnp
jmp
aad
nop
scas
mov
add
jecxz
mov
lahf
lret
daa
shll
ret
repz
subb
lcall
jae
xchg
aas
sti
sbb
fstps
aam
popl
mov
sub
fiaddl
push
add
shrl
mov
jle
aaa
pop
mov
xor
dec
dec
adc
pop
pop
and
push
mov
and
lcall
cmp
xor
sbbb
pop
sbb
je
arpl
loope
jae
push
fisubl
cltd
jl
xlat
and
add
sti
push
cmp
fadd
je
xchg
mov
pop
int
cmc
xchg
aam
pop
jb
les
daa
aaa
add
das
ljmp
xchg
mov
ljmp
pop
push
sbb
mov
out
sbb
stos
or
mov
ds
sub
xor
add
sbb
fnsave
das
loop
fwait
aad
pushf
out
addl
cwtl
fs
xchg
inc
mov
shrb
xor
or
adc
or
les
jmp
mov
cltd
or
pop
and
movsl
in
add
xchg
mov
cmp
popf
out
cltd
add
mov
adc
inc
in
dec
push
fdivs
lods
or
loopne
mov
push
push
mov
add
and
jno
dec
nop
rolb
push
inc
and
in
sub
or
add
push
pop
mov
jne
sbb
jl
out
cli
push
in
lea
sub
lods
xchg
lock
aas
sbb
mov
fwait
jno
mov
rorb
pop
out
ds
mov
pop
mov
iret
cmp
jno
pop
inc
add
in
adc
daa
add
fnsave
jae
into
std
xor
pop
and
inc
inc
xor
mov
loop
orb
sbb
jmp
sbb
cltd
mov
and
ffree
mov
mov
mov
dec
add
sub
push
add
mov
mov
and
orl
and
cmp
mov
sbb
pop
add
je
fwait
mov
or
or
fs
fnstcw
sub
out
lea
push
adc
ds
data16
mov
pop
lds
insb
jbe
and
mov
mov
jge
ret
lea
add
and
leave
and
dec
subl
jge
stos
pop
mov
add
xor
inc
test
inc
xor
push
xchg
add
inc
cli
test
ds
jnp
xchg
dec
or
negl
fwait
dec
sub
stos
xor
in
add
test
jbe
iret
cmp
and
cmpsb
lods
inc
fsubp
test
pop
ficompl
mov
test
push
xor
mov
aam
adcl
ss
lds
sahf
jle
cmp
lock
sbb
sub
add
call
mov
add
loopnew
xor
int
cli
cmp
sbb
jecxz
add
adc
cmp
jl
lahf
push
dec
mov
xor
and
sti
cmp
jns
push
mov
push
arpl
cmp
mov
lods
les
push
add
adc
daa
loope
and
cmp
dec
mov
lahf
test
leave
or
daa
pusha
adc
dec
outsb
sbb
mov
xor
addr16
mov
mov
dec
push
cmpsl
pushf
pop
and
jmp
or
inc
push
je
xor
adc
test
push
and
dec
push
jle
addb
rclb
int3
add
mov
mov
icebp
dec
mov
test
or
aad
xor
mov
test
in
and
mov
loopne
lea
or
and
mov
mov
xchg
pusha
xor
roll
jo
shrb
mov
arpl
into
cwtl
daa
je
mov
cmp
test
pop
add
jne
cmp
sub
add
sbb
cld
pop
dec
popl
in
xchg
jo
loop
ja
xchg
es
xchg
xchg
das
dec
pushf
jge
inc
ja
pop
and
inc
sbb
rolb
and
loopne
mov
add
stos
clc
dec
aaa
adc
add
jecxz
mov
and
and
dec
lret
or
inc
subps
roll
inc
lret
mov
add
repz
cmpsl
inc
movsl
xchg
sahf
sbb
inc
sarb
cwtl
mov
pop
les
jp
sub
js
or
cmpl
xchg
pshufw
pusha
jecxz
xor
or
add
cmpsl
mov
ja
adc
mov
dec
cmp
push
jp
gs
cmp
orl
cmp
les
pop
add
pop
jbe
mov
lret
insb
xor
add
mov
shrl
or
popf
repz
sub
insb
inc
inc
setb
mov
fsubl
out
pop
pop
adc
mov
jp
jb
xorl
add
inc
sbb
out
fwait
inc
fstp
sbb
mov
imul
sbbb
testb
cmp
add
movsl
sbb
add
hlt
ret
mov
ret
xor
pop
push
cmpsl
cs
jne
js
aad
enter
lret
leave
sbbl
or
adc
xchg
lods
or
rcpps
out
add
cwtl
lods
xchg
dec
inc
shrl
addr16
dec
xchg
cmp
sarl
jne
int
mov
add
in
dec
shlb
push
or
int
adc
cmpsl
lret
sarl
stos
mov
hlt
push
test
inc
cs
push
adc
cwtl
mov
ret
shll
push
dec
mov
lahf
popf
inc
mov
lods
stc
and
adc
push
add
bound
sbb
mov
pop
testl
sub
mov
xchg
push
pushw
or
ret
leave
jecxz
jno
pop
add
and
pop
push
cmpsl
repz
cmpsl
sbb
sbb
in
or
adc
add
mov
xorl
je
ret
call
and
daa
popf
aaa
test
mov
cmp
jo
fnstsw
stos
and
movsl
std
add
insb
dec
add
sbb
imul
insb
xchg
das
movsb
mov
jp
int
gs
mov
mov
mov
add
inc
loop
pop
xor
inc
push
cmc
adcl
ret
sbb
add
cld
inc
adc
sar
sub
ss
fldenv
test
mov
sbb
mov
or
ret
or
xor
andb
push
aaa
sbb
fnsave
push
sbb
jmp
jecxz
in
scas
mov
arpl
inc
pop
int3
jl
outsl
add
mov
loopne
add
cmpsl
add
add
push
mov
xchg
sbbl
xchg
and
test
sti
sub
push
imul
aad
add
jge
push
cs
enter
loop
insb
sub
jo
cmp
jo
cmp
or
sub
rorb
insl
sbbl
push
loop
sbbl
jl
add
lea
dec
adc
fwait
xchg
and
dec
flds
inc
mov
adc
pushf
inc
jp
and
into
cmpsb
mov
push
cs
add
sub
push
iret
cs
push
add
mov
sbb
arpl
xor
add
pop
cmp
pop
add
notb
mov
and
sub
add
jo
inc
or
or
call
jp
sub
mov
adc
sbb
mov
or
inc
jmp
and
lcall
dec
adc
add
leave
or
adcb
int
push
add
test
movsb
movb
inc
add
and
cld
push
dec
jb
test
and
pop
ret
iret
sbb
in
mov
in
mov
call
add
sbb
outsl
insl
decb
add
inc
sbb
lret
mov
enter
push
sbb
xchg
aad
add
dec
or
or
mov
adc
jns
pusha
insl
cmp
jb
loopne
cltd
stc
and
or
cmp
fldenv
ret
pop
dec
sbb
push
gs
rclb
lds
adc
and
iret
test
xor
cltd
fdivrl
enter
popw
xor
andb
sbbb
cmp
jo
adcl
pop
enter
push
movsb
push
pop
push
inc
loopne
sbb
jmp
sub
into
negl
shll
pop
pusha
mov
or
or
leave
jmp
inc
xor
enter
outsb
test
lds
sub
cmp
xchg
xchg
and
sub
pop
jmp
inc
mov
cwtl
add
add
shr
adc
adc
shll
push
mov
inc
mov
iret
roll
push
pop
pop
push
pop
dec
xor
les
pop
mov
or
sbb
jb
xor
pusha
mov
mov
push
mov
add
or
ret
sbb
cmp
sbb
mov
xor
xchg
icebp
mov
popa
ljmp
lret
mov
adc
pop
mov
mov
ret
outsb
add
mov
push
and
loope
add
fsubs
out
clc
sbbl
iret
jp
clc
mov
or
insl
mov
daa
push
sub
lods
insl
or
sti
and
outsb
and
or
and
test
clc
or
pop
outsl
add
push
adcb
jbe
adc
dec
xchg
add
add
cmc
or
stos
das
sub
jmp
add
outsb
add
pop
dec
movsb
and
pop
mov
push
cltd
jne
enter
es
jo
negb
jno
bswap
adc
jmp
sbb
and
ja
adc
mov
sbb
fmuls
das
sbb
pop
push
pop
add
sbb
cmp
sbb
inc
testw
mov
mov
dec
shl
sti
das
bound
call
cld
or
gs
adc
push
mov
pusha
mov
imul
add
pop
add
out
je
push
sti
push
pop
sub
in
push
sbb
std
jb
xchg
movsb
jbe
inc
ss
add
jbe
insb
adc
rcll
dec
inc
lds
push
lock
movl
or
ds
cmp
test
stos
cltd
test
fld
outsl
dec
sbb
jecxz
adc
scas
scas
mov
mov
lea
ds
lods
mov
xchg
out
cmp
xor
cmp
popl
mov
pusha
jmp
mov
or
movsl
xchg
je
pop
imul
test
dec
dec
aas
out
inc
pusha
testb
rolb
mov
mov
add
clc
sarb
jbe
test
repz
sub
sbb
xchg
jo
xor
sbb
repnz
repnz
add
mov
rol
aam
adc
ret
jae
add
pop
pop
fmuls
ljmp
mov
cmp
mov
enter
fcompl
scas
sarl
mov
inc
cmp
sarl
mov
fildl
pop
push
inc
dec
dec
or
fdivrl
inc
xor
xor
popf
fcompl
movsl
sti
fdivr
xlat
sub
xlat
scas
dec
sub
xlat
sti
pusha
inc
jge
popa
into
add
movhps
roll
dec
pop
out
imul
sbb
mov
mov
into
mov
adc
in
dec
ja
out
scas
lret
jnp
pop
xchg
movsb
gs
sub
pusha
push
or
cltd
inc
inc
addb
sbb
das
dec
mov
lcall
mov
mov
jecxz
xchg
fs
pop
jb
ss
pop
pop
adc
push
pop
add
jmp
mov
stc
out
rolb
rorl
pop
sbb
jecxz
push
adc
divl
in
mov
in
mov
cmpsl
or
adc
lods
mov
mov
add
cmp
sub
mov
int
xchg
add
lret
and
push
mov
or
ret
pushf
mov
cbtw
pop
mov
mov
pop
or
mov
js
or
add
xor
jmp
jmp
jp
add
int
add
push
aam
pusha
dec
pushf
mov
daa
lea
pop
ret
loop
testl
xchg
and
sub
pop
scas
mov
push
pop
xchg
mov
fwait
sbb
out
popf
inc
scas
cmp
inc
mov
sub
iret
push
jno
push
outsl
or
cmpb
leave
and
cltd
mov
sti
faddl
mov
and
mov
test
insb
ss
push
mov
inc
jo
dec
fs
mov
das
mov
addl
fwait
cmp
gs
push
push
mov
push
add
cmp
sbb
push
xchg
pop
dec
rorb
pop
gs
jl
cmpsl
jnp
jecxz
fnstenv
movsl
mov
loop
lfs
push
jne
add
xlat
rolb
lea
daa
push
mov
adc
orb
addr16
cs
xchg
inc
loope
add
sub
or
call
mov
xchg
dec
cmpsb
push
mov
jae
add
add
cmpsl
fistl
pop
adc
inc
or
imul
es
push
into
test
or
lea
xor
add
lcall
and
jg
pop
inc
add
imul
mov
das
sbb
aaa
hlt
xor
fsubs
mov
adc
cmc
mov
sarb
inc
inc
inc
adc
daa
addl
inc
push
and
or
mov
nop
call
pop
inc
ret
or
push
pusha
seto
pusha
in
les
insl
or
adc
xchg
mov
test
dec
or
pusha
jne
and
dec
mov
je
clc
adc
mov
xchg
cld
add
jle
clc
adc
out
or
movb
fdivrs
dec
lds
dec
addb
shr
in
nop
dec
jmp
add
push
and
dec
das
lock
les
push
rolb
out
cmp
cmp
scas
add
or
lods
xchg
push
addb
mov
sub
push
push
cmp
cmp
inc
or
or
xchg
mov
jo
fsubs
push
mov
push
ret
sbb
cmp
int
or
sbb
sbb
mov
cltd
add
dec
setl
stos
fists
jae
jecxz
pop
fdivs
mov
mov
add
or
loope
push
ds
outsb
adc
mov
js
or
rclb
or
cs
pop
or
out
cmp
or
push
push
loop
xchg
insl
jge
and
lock
lret
sub
add
pusha
or
daa
push
mov
adc
mov
sub
negb
push
xchg
push
dec
dec
lret
jne
mov
loop
push
jle
dec
adc
imul
sub
push
add
movsl
mov
fists
es
shlb
push
sbb
pop
dec
cmpsl
enter
es
and
jmp
dec
rorl
and
dec
jo
ret
or
push
xor
int
inc
bound
push
lds
out
jnp
scas
inc
sub
outsl
test
daa
dec
mov
add
mov
andl
xchg
mov
rolb
mov
mov
cmp
mov
dec
add
sbb
push
ret
outsl
daa
dec
scas
ds
imul
dec
loope
and
add
jb
aaa
adc
or
jb
pop
ja
mov
and
nop
sub
mov
ret
adc
add
outsb
inc
add
xchg
jo
pop
or
xor
dec
mov
add
aad
and
outsl
es
pusha
sbb
xchg
iret
sbbb
xchg
and
sub
arpl
outsl
orb
push
es
scas
xchg
cs
xchg
ret
pop
dec
xchg
pop
sbbb
xor
xchg
js
xor
pop
ret
daa
adc
pop
dec
into
xlat
xor
sbb
mov
andb
cltd
les
out
clc
adc
push
sbb
mov
xor
and
ret
outsl
add
dec
movsb
add
outsl
out
dec
stos
xor
sbb
imul
loopne
mov
scas
jb
dec
dec
dec
dec
loopne
fildll
adc
xchg
sub
out
sbbb
mov
icebp
mov
push
xchg
mov
movsl
lcall
dec
pop
mov
adc
test
adc
inc
shlb
fdivl
jo
rorb
icebp
ljmp
sub
push
addl
push
lcall
mov
and
sub
add
jb
and
inc
mov
sub
lods
dec
in
add
pop
dec
or
or
or
out
jnp
es
adc
ficomps
cmpsb
test
stos
or
and
add
add
and
xchg
and
or
test
mov
fstl
outsl
xchg
cmp
into
add
mov
xchg
pusha
not
sub
lods
xor
add
shrb
add
dec
fstl
and
adc
out
lcall
mov
xchg
add
ljmp
pop
or
dec
add
xor
push
clc
dec
sub
and
mov
inc
ret
push
xor
xor
sbb
xchg
xchg
cltd
adc
inc
add
adcb
adc
xchg
das
adc
pop
aas
out
mov
daa
lcall
mov
or
sbb
sub
pop
jo
push
sarl
dec
ret
adc
xchg
mov
mov
push
fstp
lods
aad
lds
mov
pop
iret
sbb
sbb
cmp
xor
dec
push
insb
mov
cmpb
shlb
cmp
shl
test
arpl
rclb
inc
inc
sbb
aam
dec
ss
sti
mov
inc
cmp
pop
jo
dec
fcomps
dec
jmp
jge
mov
data16
adc
fwait
negl
add
es
xchg
pop
or
repz
loop
pusha
mov
and
xor
mov
andl
orl
ret
imul
fsubs
sub
loope
pop
int3
or
xor
push
popa
lret
jne
add
mov
adc
xchg
xchg
movsl
and
lcall
or
cwtl
icebp
dec
rcrl
xchg
xchg
lock
pop
adc
rorb
xchg
xchg
nop
sbb
rol
sub
mov
nop
inc
and
mov
roll
orl
shl
xor
add
inc
pusha
ret
add
lahf
mov
jno
jo
cwtl
inc
test
pop
mov
mov
lods
jle
loop
lahf
add
ds
fcompp
pop
push
cld
das
shlb
or
outsl
movsb
mov
clc
stos
lret
lock
cli
sub
cmp
pop
adc
inc
rcrl
clc
xor
fld
dec
sub
and
test
sub
add
rorb
lcall
subb
add
repz
add
mov
pushf
cltd
pop
and
ficomps
jge
push
push
dec
dec
jae
mov
aaa
cld
adc
dec
push
jns
testl
clc
xchg
sub
jnp
sbb
and
inc
inc
andl
leave
pop
dec
stos
cltd
adc
xchg
stos
push
pop
movsb
push
lock
adc
rorb
and
outsl
test
scas
ds
adc
cmpsb
adc
mov
and
cmpsl
inc
push
or
fdivr
jns
ret
push
mov
jecxz
jge
ficomps
rorl
dec
sarb
ljmp
testb
enter
or
cmp
test
push
dec
adc
xor
push
dec
jae
adc
adc
subl
arpl
arpl
xchg
adc
mov
inc
adc
dec
push
sub
fsubr
lahf
popa
ja
add
and
mov
cs
sti
cmp
clc
xor
mov
mov
pop
xchg
push
cltd
add
aaa
lods
test
push
repz
sbbl
sub
xchg
ret
mov
popf
enter
or
pop
push
cs
insb
and
ds
xchg
test
adc
xorl
mov
or
add
push
push
xor
test
add
mov
jmp
insb
cmp
cmp
shll
shrb
movsb
sub
movsl
xor
dec
aaa
rolb
test
mov
bound
sbb
add
pop
cld
jg
out
packssdw
es
xchg
push
scas
push
movsb
or
cwtl
pop
lcall
ljmp
xchg
lcall
xchg
jbe
lods
and
dec
mov
pop
adc
sub
xchg
push
mov
sub
nop
push
dec
pop
loop
and
aas
daa
xor
mov
push
add
xor
ret
sub
pop
aam
pop
cmpsl
clc
push
out
cwtl
leave
mov
pop
lcall
pop
and
jecxz
jns
jne
xchg
repz
push
or
jo
or
or
clc
mov
sti
jmp
into
ja
sti
xor
mov
xor
push
cmp
cmc
dec
cmpsb
dec
or
pop
fwait
and
and
mov
jno
in
movsb
jo
jl
pop
add
clc
add
pop
stos
das
fisubrl
xlat
imul
jne
xchg
mov
jg
test
jnp
add
outsl
fistpl
add
pop
popf
mov
pop
test
icebp
push
and
mov
mov
out
gs
adc
pop
add
rclb
and
mov
add
in
add
outsl
jns
or
jbe
arpl
negl
mov
xor
pop
clc
or
pop
test
inc
lcall
add
orl
pop
hlt
mov
cmp
in
adc
pop
inc
mov
adc
and
pusha
jo
aas
orb
xor
xchg
add
push
rorb
scas
adc
rol
inc
mov
cmpsl
cmpsb
sbb
ja
pop
and
mov
popa
pusha
lods
add
shll
mov
mov
into
mov
inc
and
stc
dec
xor
addr16
sub
mov
and
push
outsb
stc
sub
fists
pusha
jno
loopne
mov
mov
dec
xchg
ds
dec
popa
inc
push
adc
loopne
pop
and
xchg
mov
inc
icebp
adcb
inc
sbb
jle
std
lret
cmp
je
out
test
inc
or
mov
add
or
insb
inc
add
loop
push
mov
dec
ret
mov
push
js
icebp
xchg
xor
fsubrs
xchg
ret
xchg
addl
xchg
jno
pop
or
subb
push
rorl
jne
ret
mov
mov
add
push
add
mov
xchg
adc
push
mov
pusha
and
and
lock
sti
ss
in
jecxz
pop
inc
or
stos
jge
lods
jno
adc
push
ss
or
cmc
mov
test
and
or
scas
or
lahf
movsb
jo
cmpsb
jle
adc
imul
and
xchg
push
pop
add
call
jo
movsb
or
movsb
mov
or
pop
xchg
popa
in
mov
pop
and
inc
leave
ljmp
add
iret
mov
punpckhbw
in
sbb
dec
insl
mov
dec
imul
or
add
adcb
sbb
mov
dec
pop
inc
mov
or
inc
sti
fldl
shll
mov
mov
and
aam
loope
andl
jno
inc
sbb
outsb
aam
rcll
sbbl
cmc
adc
fildl
mov
imul
hlt
sub
adcl
sahf
ret
or
loopne
add
adc
sub
icebp
sub
stos
iret
aam
dec
inc
mov
aas
adc
xor
cs
push
and
iret
and
out
mov
pop
cltd
add
and
push
shll
push
jno
mov
add
dec
or
mov
xchg
icebp
imul
push
inc
loope
add
or
insl
and
and
pop
lcall
adc
sbb
push
lods
ret
inc
jg
sub
xlat
xor
addb
mov
xor
jbe
mov
leave
and
mov
pop
inc
sbb
xchg
dec
test
inc
imul
add
call
aad
rcll
xor
icebp
mov
add
icebp
sbb
loop
daa
ret
push
pop
imul
icebp
or
icebp
mov
mov
mov
xor
fists
sub
daa
adcl
jb
mov
adc
imul
mov
ficompl
icebp
lods
or
dec
adc
and
mov
push
data16
clc
or
dec
loop
pusha
mov
sbb
mov
mov
sub
jl
popa
push
adc
arpl
dec
ja
inc
sbb
gs
sub
adc
mov
add
xor
mov
imul
test
adc
and
sub
adc
imul
jecxz
and
rcll
pop
lcall
ficoml
add
das
mov
and
mov
xchg
pop
test
mov
orl
push
xor
lret
dec
test
dec
test
or
sub
xor
mov
or
add
pop
sub
pop
adc
insl
arpl
sbbl
scas
jno,pn
dec
adc
adc
cmp
xlat
into
cmp
xchg
jo
jo
mov
ljmp
lea
sbb
mov
add
sbb
rcl
and
and
jbe
adc
cmp
bound
adc
and
stos
or
call
sbb
and
mov
xorb
xorl
negl
mov
pop
sub
repz
lock
mov
xor
xchg
xor
nop
inc
sbbl
adc
scas
dec
shll
sbb
cmc
adc
mov
mov
pop
mov
cmpsl
add
adc
add
jo
dec
push
daa
les
jg
and
loope
xchg
shl
rorb
insl
cltd
les
dec
dec
insl
and
daa
and
adc
and
add
push
mov
cwtl
cmp
push
add
test
roll
subb
and
dec
xor
rcrb
mov
dec
dec
shrb
cmp
adc
mov
or
loopne
pop
fadds
loopne
cmc
xchg
jecxz
jo
insb
and
add
jnp
push
pop
loope
rclb
shlb
adc
frstor
dec
cmpsl
add
push
pop
dec
daa
out
mov
jecxz
fidivl
jnp
push
or
mov
call
xor
je
push
and
mov
lea
popa
insl
in
es
push
adc
sub
test
mov
mov
negb
outsb
dec
mov
cmp
sbb
je
lret
lea
adc
xor
je
sbb
xor
xchg
add
shrl
mov
rol
push
lea
lods
add
add
repz
into
xor
add
push
test
lods
push
sbbl
push
pop
jns
ret
sbb
es
nop
test
sub
scas
jle
add
dec
and
aam
loop
xchg
sub
xchg
loop
adc
xchg
push
subl
push
and
and
adcb
sub
xlat
orl
mov
sub
pop
add
les
movsb
nop
jno
or
mov
or
je
cmp
icebp
cltd
lret
aas
add
pop
dec
pusha
pushf
mov
ret
lret
inc
cmp
sub
mov
or
cmp
adc
sbb
shrl
push
push
and
ja
adc
ret
and
and
adc
and
mov
mov
call
jae
mov
lret
cltd
in
xor
ret
inc
outsl
xchg
shl
leave
and
and
shlb
cmpb
lret
dec
test
and
clc
jecxz
sar
out
jecxz
xor
push
mov
je
adc
pop
enter
mov
fmuls
xor
mov
jp
mov
addl
push
shl
loope
push
imul
sti
sub
add
sub
nop
sub
pop
push
ljmp
popf
push
add
sbb
fdivrl
pop
xchg
adc
sbb
mov
mov
adc
orb
cmpsl
frstor
push
imull
nop
or
mov
dec
inc
ja
lea
std
subb
sub
mov
pop
pop
mov
mov
sbb
sbb
add
movsl
addl
cmpsl
push
insl
roll
cmp
inc
scas
rcrl
adc
adc
cmp
mov
pop
pushf
test
mov
imul
out
js
pop
mov
inc
jns
inc
sbb
pop
pop
mov
imul
adc
mov
aam
or
stc
jo
rorl
or
int
inc
loope
or
test
add
mov
dec
cmc
xorb
sbb
sub
inc
mov
es
lods
popf
or
sub
ret
jb
jmp
es
sub
rol
rolb
pop
adc
or
in
pop
sti
dec
fidivrl
dec
add
fsubr
sub
cmp
mov
xor
cltd
ret
mov
sbb
ret
inc
popa
adc
adc
in
fwait
mov
test
shl
rcrl
jb
sub
jbe
popl
inc
sub
ret
ret
sbb
adcl
mov
lret
pop
ret
xor
fdivl
into
negb
or
dec
ss
xchg
and
fstpl
mov
adc
add
leave
mov
popa
mov
xor
pop
insl
test
jne
mov
sbb
add
xchg
sbb
sub
rcrl
mov
inc
loope
jecxz
mov
rorl
push
popf
cmp
clc
or
pop
dec
fidivrl
push
cmpsb
fnsave
xor
ss
add
add
pushf
mov
int
mov
push
rorl
mov
mov
js
push
les
imul
xchg
mov
sbb
ja
cmc
scas
ds
lahf
sbb
outsb
sbb
inc
sbb
sbb
out
scas
mov
xor
test
mov
pusha
shrb
insl
and
lea
sub
sbb
add
cld
inc
dec
rolb
xor
sub
sbb
inc
cmpsl
movsb
add
push
or
bound
iret
dec
or
jae
add
push
cmp
cmp
jb
add
rcll
out
data16
ss
pusha
adc
adc
ret
dec
xor
lcall
and
xchg
sbb
adc
inc
mov
add
sbb
add
pop
lock
jno
pop
or
inc
fidivrl
nop
test
popf
test
testb
dec
ret
je
stos
push
sbbl
inc
daa
inc
inc
add
jno
lret
add
icebp
dec
pop
les
pop
popa
rcrb
into
bound
mov
add
ds
in
sub
idivb
inc
testl
clc
and
push
sub
lds
push
push
testl
jnp
add
inc
jl
cmp
das
add
in
add
jg
push
mov
jmp
and
int
aam
pop
pop
cwtl
popa
mov
popl
sbb
dec
inc
dec
call
aam
mov
mov
sarb
popa
inc
inc
inc
cmp
sbb
adc
sbb
or
cld
pop
inc
insb
pop
dec
add
popa
loope
inc
insb
ret
sub
and
push
sub
daa
les
push
fisttpl
or
mov
rclb
sbb
sub
pop
inc
push
add
cmp
add
cmpsb
mov
pusha
and
mov
pop
nop
push
or
add
ret
adc
subl
icebp
orl
arpl
add
inc
mov
push
xor
mov
push
push
test
mov
pop
sub
test
lea
sbb
sti
sub
sub
adc
and
lds
ja
dec
imul
into
add
jne
outsb
inc
in
fcomps
fwait
xchg
add
sbb
jle
pop
sbbl
mov
lock
push
jp
repnz
sub
or
dec
push
or
js
cmp
and
adc
mov
adc
div
sbb
sub
mov
popa
loope
pop
mov
mov
pop
cmp
sbb
andl
dec
inc
inc
sbb
addl
icebp
dec
sbb
add
jmp
pushf
add
sub
cmp
jae
cmp
cmp
fstpl
and
shll
sub
cmp
pusha
shlb
dec
ljmp
or
jge
add
sti
sti
jo
or
dec
pop
sbb
sbb
jo
pusha
adc
pushf
inc
insb
or
sbb
lea
cmpsl
in
or
add
mov
mov
test
outsb
aaa
cmpl
das
xchg
mov
inc
or
sub
jo
sbb
ja
xchg
rcrb
cmp
nop
mov
outsb
xor
dec
xchg
mov
mov
jbe
mov
test
push
ret
dec
push
ss
sub
popa
stc
pop
add
jge
add
xchg
nop
cmp
inc
push
add
fwait
es
add
xchg
push
test
pop
rcrl
test
lock
aad
xchg
or
rcrb
ret
testb
jle
mov
out
inc
add
rclb
sub
and
jmp
imul
dec
mov
mov
test
inc
out
push
add
aad
jo
mov
jecxz
or
test
pop
dec
and
xchg
addb
ljmpw
or
or
cwtl
mov
into
pop
fldl
pop
out
add
mov
or
push
sbb
mov
pop
sbb
mov
add
comiss
popa
xchg
adc
add
jge
mov
sbb
xchg
call
sbb
into
sbb
dec
rcl
adc
dec
add
outsl
sbb
lcall
test
mov
loope
dec
popa
push
lret
mov
movsb
iret
jp
inc
insb
out
pop
lret
leave
pop
adc
push
lea
push
mov
rol
push
fstpt
fldenv
inc
addr16
fsubl
lods
pop
mov
shrl
imul
mov
sbb
sbb
mov
scas
adc
mov
imul
test
add
fmull
hlt
jne
insl
lods
sub
jbe
rol
data16
sbb
jnp
movl
jns
inc
push
test
inc
out
test
pushf
jno
rcrb
pushf
lret
lock
push
dec
jo
add
cmpsb
cmp
cmc
xor
cli
push
sti
dec
add
lret
nop
cmpsb
or
imul
es
mov
mov
loopne
pop
adc
or
lods
add
or
pop
inc
aas
aas
inc
add
imul
addr16
dec
add
popa
mov
cmp
lods
lret
dec
cmp
repz
push
adc
int
mov
arpl
ffreep
sub
add
pop
push
fs
pop
insb
jp
loop
mov
xchg
pop
pop
or
test
adc
sub
mov
mov
dec
jle
xchg
push
add
outsl
add
ds
jg
cmp
imul
xchg
popa
and
call
push
cmp
ds
pop
inc
dec
adc
fs
sti
cmpsl
and
gs
pop
push
int
mov
inc
insl
popa
xchg
dec
push
lods
mov
mov
sbb
out
jb
add
xlat
dec
mov
mov
sub
lds
or
or
sub
jne
daa
push
inc
inc
ret
cltd
ret
dec
pusha
sub
cs
dec
repz
outsb
jo
jns
repz
jno
push
cmpsb
lock
pop
nop
push
and
dec
cmpsb
xor
xor
xchg
ds
sahf
test
cmp
jecxz
fwait
xor
and
fwait
pop
outsb
or
adc
stos
subb
push
fwait
adc
jecxz
lcall
rorb
aad
sbb
rolb
xor
mov
cmp
sub
and
loopne
adc
js
push
mov
jns
fimuls
mov
jle
andl
xchg
xor
xor
notl
loope
dec
pushf
sbb
add
push
rcr
repz
mov
icebp
in
mov
fstpt
push
lock
pusha
mov
inc
mov
shlb
push
adc
sub
lods
inc
sbbb
mov
scas
stos
xchg
test
xlat
icebp
shrl
jo
loopne
sarl
mov
sub
sub
lret
mov
xor
add
pop
jecxz
sarl
mov
in
inc
cltd
cmp
je
int3
pop
push
push
adc
push
test
sbb
cmpsb
mov
adc
pop
fdivs
lea
xor
adc
inc
push
imull
and
cmp
mov
xor
add
aaa
push
pop
sub
loope
mov
dec
imul
add
movsl
int
pop
sbb
add
test
clc
cmp
add
lret
inc
lret
fistl
or
xchg
mov
dec
and
mov
outsl
fstpl
loope
xchg
jecxz
and
icebp
mov
jae
stos
pop
pushf
lock
adc
inc
cmp
jb
mov
subl
jno
sbb
ret
or
pop
mov
mov
or
shl
or
pop
mov
idiv
push
fucomip
xor
add
inc
add
mov
xchg
sarb
mov
fs
sbb
pop
js
pop
jmp
fnstcw
ds
xor
icebp
push
and
sub
add
inc
or
push
xchg
lods
mov
aam
inc
mov
jecxz
sahf
sub
adc
mov
addr16
xchg
ret
jnp
jg
xor
cmpsb
icebp
sbb
mov
dec
inc
jne
les
jg
rcll
adc
rorb
jb
xchg
xchg
xchg
inc
int
sbb
pop
lea
xor
push
test
pop
cld
ja
faddl
movsb
mov
cmc
xor
shll
movsb
pcmpeqd
xor
lea
cltd
or
cmp
roll
loop
idivb
xorb
loope
insl
loop
movsl
and
ret
fadds
jl
sub
dec
or
nop
out
sub
es
add
mov
loop
jg
stos
jl
fmuls
or
dec
pop
pop
xchg
push
inc
xchg
push
xchg
sbb
add
push
and
jne
in
dec
adc
in
push
adc
jecxz
mov
pop
mov
xor
leave
dec
dec
push
push
mov
xor
mov
addr16
jnp
cs
sbb
arpl
lds
add
addb
jmp
ret
add
iret
dec
inc
pop
inc
or
mov
mov
loope
sbb
clc
fnstsw
je
mov
adc
dec
jns
leave
scas
adc
or
shll
jl
popf
loope
push
jbe
pop
mov
nop
mov
xor
inc
les
add
js
adc
push
pop
fsubs
lret
mov
inc
cmp
add
mov
adcb
inc
ret
mov
dec
push
fsubrs
ljmp
aam
pusha
sub
xchg
cmp
dec
adc
jmp
inc
inc
adc
cmpsl
and
movsb
adc
fld
test
ret
add
mov
push
mov
movsl
rol
add
fisttpl
lcall
mov
adc
push
inc
jns
ficoms
outsl
dec
add
adc
dec
push
popa
add
add
push
dec
popa
ss
ds
add
adc
or
cmc
jne
nop
cmp
test
or
pushl
add
int3
int3
xchg
repz
pop
popa
adc
mov
mov
pop
inc
and
pop
icebp
data16
cmc
ffreep
inc
and
add
dec
dec
std
add
pusha
xchg
lods
adc
sbb
pop
int
jp
inc
fst
mov
mov
lods
inc
nop
ret
add
mov
std
scas
mov
mov
gs
test
mov
and
cmp
push
daa
dec
jae
xor
lock
ret
filds
sbb
popa
or
inc
sbb
dec
imul
cmp
rcrl
inc
cmpsl
mov
pushf
pop
add
popf
adcb
xchg
mov
jae,pn
test
pop
aam
push
scas
fbld
pusha
mov
ret
or
sbb
dec
movsb
or
cs
movsl
imul
add
daa
pop
mov
gs
xor
aaa
xchg
lahf
test
sbb
fbstp
inc
pop
movsl
fidivl
sbb
ds
push
cld
insb
sbb
int
cmp
cmp
les
shr
add
es
fnstenv
xor
std
iret
test
pop
mov
xchg
add
xlat
push
sbb
ret
test
mov
inc
jb
addr16
jo
sub
loope
mov
nop
cmp
rclb
imul
add
sbb
mov
and
fsub
xor
inc
in
pushf
pop
mov
loop
imul
fisttps
cmc
push
dec
mov
or
out
xchg
int
cmp
in
pushf
inc
loopne
dec
lods
mov
push
mov
adc
xchg
test
int
mov
cmp
icebp
or
add
leave
mov
ss
cli
push
pop
pop
je
shlb
sbb
lcall
dec
and
repnz
mov
push
adc
js
addr16
mov
adc
inc
lods
and
dec
ljmp
sbb
sbb
dec
loopne
push
rorl
loopne
jae
aad
insb
mov
data16
xor
insl
insb
inc
inc
fisttpl
mov
adc
cmp
cli
push
push
ret
xlat
pop
orb
cli
pusha
in
jg
mov
sbb
loopne
mov
orb
push
adc
dec
aas
sub
lahf
sbbl
adc
mov
push
pop
push
testl
xor
inc
or
insl
lds
daa
mov
fs
mov
fiaddl
sarl
pop
jne
sbb
lock
add
adc
or
push
call
ucomiss
or
fs
addl
and
jbe
add
imul
inc
rcrb
subb
mov
ret
xchg
xchg
pop
lods
pop
ds
mov
test
cmp
test
mov
addb
popa
mov
adc
or
sar
mov
add
add
sub
rolb
loope
mov
frstor
or
pop
mov
add
inc
mov
or
mov
mov
mov
loop
lods
fldt
dec
lret
xchg
add
pusha
dec
inc
mov
push
addb
loope
je
outsl
add
inc
xchg
sti
mov
mov
mulb
sub
int
fsubp
and
or
or
jp
mov
cmp
xor
xor
add
and
lods
mov
les
mov
ret
cmp
sti
sbb
icebp
mov
mov
lea
loope
cmp
clc
les
jnp
cmp
loopne
mov
sbb
sti
xor
push
insb
dec
stos
add
mov
and
cs
push
icebp
cmp
add
dec
or
sub
push
fisubrs
std
in
sahf
movsb
xchg
sbb
mov
or
inc
mov
imulb
xchg
adc
inc
daa
jbe
lret
fwait
cmp
jge
jecxz
dec
dec
and
sbb
jns
repz
push
mov
push
sbb
rcrb
and
and
or
ret
pushf
ret
inc
shrl
add
mov
xor
and
sti
cmpsl
test
les
ret
sub
mov
jb
popa
pop
pop
test
aad
popa
insb
sbb
hlt
mov
inc
sbb
or
scas
cmp
mov
mov
dec
jl
das
mov
cli
and
add
mov
and
add
das
rcr
xchg
fiaddl
in
repnz
or
jbe
icebp
sarb
stos
pop
fstl
mov
pop
repz
push
sbb
adc
mov
mov
negb
lret
pop
add
add
les
bnd
addl
lcall
add
push
mov
stc
dec
cmp
adc
push
rclb
loope
sarb
sti
push
movsl
and
mov
mov
pop
cmp
mov
rorb
test
cs
cmp
popf
nop
dec
je
jbe
inc
or
jno
call
je
and
lret
sub
pop
test
adc
push
test
push
or
aaa
mov
push
push
adc
js
mov
cltd
mov
mov
mov
sbb
loopne
xor
test
fwait
sbb
add
daa
lock
fwait
cmpsl
mov
cmp
cmc
pusha
inc
test
pop
movsl
sub
ret
icebp
cmp
leave
ret
or
mov
imul
pop
or
sub
in
inc
push
jle
pop
insb
movsb
push
pop
inc
adc
push
mov
sub
mov
add
imul
scas
cs
and
mov
xor
add
xor
mov
shr
jae
orb
das
pop
sub
xor
negl
adc
jmp
pusha
cmp
dec
ja
adc
shl
fbld
xchg
xor
xchg
fcoml
push
jne
xchg
mov
xchg
mov
popa
mov
xchg
dec
les
dec
dec
and
test
and
sbb
movsl
mov
flds
pusha
mov
xchg
add
jmp
cmp
xchg
mov
adc
mov
aad
das
mov
sarb
inc
outsl
aam
xchg
mov
sarb
das
or
inc
shl
sub
sbb
inc
imul
jnp
mov
pop
imul
loopne
xchg
cltd
sbb
sbb
push
inc
mov
int3
aam
xor
push
addr16
imul
cmp
mov
fwait
add
xchg
inc
cmp
inc
shll
mov
dec
xchg
gs
and
ds
or
dec
gs
in
das
add
test
data16
xchg
das
sub
jg
sub
loopne
pushf
test
xchg
inc
nop
xchg
outsb
idivl
adc
inc
add
xchg
inc
fs
adc
push
mov
dec
add
jle
pop
and
and
mov
pop
xor
loop
add
and
mov
push
sub
pushw
xor
mov
adc
jge
inc
xchg
or
inc
xor
addl
popa
fmuls
adc
cmc
repz
cltd
adc
es
stc
dec
jno
popf
and
int3
xchg
sub
or
inc
mov
pushf
dec
sub
xchg
jae
xor
aam
dec
bound
addr16
mov
inc
cmp
pop
gs
push
mov
cltd
movsl
loopne
test
rcrb
movsl
cmp
outsb
or
add
add
xchg
jge
cmp
pop
mov
repnz
mov
xor
pop
mov
and
cmp
ret
fwait
jb
les
sarl
loopne
adc
movsb
ffree
imul
sti
xchg
add
sahf
inc
lret
or
cmp
adc
js
lods
sub
xchg
daa
sti
mov
push
mov
xor
add
inc
mov
add
rorl
sahf
push
dec
add
loopne
cld
xor
loope
jecxz
rclb
jge
rcrb
inc
outsl
loope
test
pop
xlat
pop
popf
je
mov
rorl
mov
push
into
sbb
dec
and
xchg
add
adc
fildl
fildll
inc
sub
and
dec
daa
and
orl
sahf
in
loop
cmc
addr16
or
or
shl
movsb
loope
xchg
pop
add
test
push
or
pushf
xchg
pop
adc
mov
dec
scas
sbb
jne
adc
inc
jne
push
pop
mov
cmpl
movsl
jo
cmp
jp
add
add
inc
dec
aas
push
lods
xor
enter
mov
mov
ret
or
xchg
movsb
adc
and
popf
fwait
inc
lods
mov
aas
push
int3
mov
mov
aaa
rclb
pusha
mov
icebp
push
and
adc
sub
cmp
xchg
mov
or
js
jno
xchg
lds
lods
adc
xchg
js
push
adcb
mov
popa
fnsave
popa
mov
mov
sub
loopne
mov
shrb
inc
pop
xor
xor
les
fucomip
jnp
sub
sbb
dec
sub
mov
mov
dec
jecxz
ss
pop
popa
or
adc
pop
jae
cmp
clc
push
es
out
xlat
aas
jb
pop
adc
xchg
pop
sub
mov
and
adc
test
mov
adc
sub
add
push
aad
sub
mov
or
push
jmp
pop
movsb
add
sub
mov
adc
adc
and
ret
add
jo
adc
outsl
test
and
sbb
lds
int
insb
test
shlb
int3
and
add
ret
xchg
mov
adc
xor
inc
sub
dec
test
sbb
popf
ds
aas
stos
imul
fsts
gs
mov
lret
insl
shll
mov
adc
insl
loope
test
push
or
xadd
and
jno
xor
add
push
sbb
frstor
test
sbb
jg
mov
push
cmp
push
cmp
xchg
xchg
mov
enter
imul
jnp
fwait
pop
adc
cmp
les
or
or
pop
inc
mov
or
adc
lea
add
sbb
orb
popa
and
mov
adc
or
pop
xchg
rcr
arpl
pop
adc
mov
rorl
mov
add
shlb
ret
push
in
scas
insb
popa
push
xchg
dec
add
sub
and
adcb
or
ret
pop
push
js
ffreep
and
dec
lret
jno
nop
dec
or
adc
jb
sbb
dec
add
add
pop
push
add
or
adc
das
arpl
push
mov
dec
pop
sbbb
ljmp
rolb
test
inc
jecxz
jbe
and
testl
sbb
adc
adc
add
ljmp
mov
cli
pop
and
xlat
shrb
xor
repnz
sbb
push
inc
lea
sbb
mov
push
dec
push
adc
fisttpl
aaa
aas
push
push
stos
or
in
nop
bound
sbbb
mov
mov
or
cli
adc
and
mov
mov
cs
mov
sub
sbb
adc
imul
push
xlat
cmp
outsb
mov
push
jge
add
pop
xchg
mov
or
divb
jmp
test
jnp
cltd
jae
orl
push
pop
sub
sbb
stos
inc
push
jle
rorb
sbb
and
pop
aad
or
add
testb
xchg
leave
sbb
addl
or
in
adc
test
add
or
add
push
mov
xchg
cmp
mov
ds
jmp
or
add
push
add
nop
adc
inc
cmp
cmp
in
and
lcall
scas
movsl
pop
add
sub
lcall
mov
imul
scas
test
test
into
or
pop
add
or
push
pop
sub
inc
js
push
mov
adc
jmp
ret
sub
out
pop
je
outsl
lahf
mov
add
add
loope
out
push
hlt
dec
ret
popl
push
cmp
dec
popf
jno
pop
insb
test
aam
sbb
mov
push
cmp
icebp
js
ss
mov
xor
inc
inc
adc
and
fsubs
fsts
scas
sub
outsb
add
dec
sbb
das
aaa
ss
add
mov
mov
push
add
aas
mov
or
orl
jbe
xor
pcmpeqd
adcl
push
fldcw
sbb
mov
fstpl
mov
xor
jmp
mov
xor
add
roll
insb
sarl
jmp
push
add
js
pop
jns
mov
int
and
out
push
lods
sbb
sbb
mov
pop
and
fs
inc
addb
lcall
push
push
sbb
inc
jne
push
out
mov
and
aas
and
xor
mov
xchg
add
inc
in
xchg
test
and
flds
xor
pop
add
push
es
subl
ds
dec
dec
cmp
push
ds
push
fisubl
lret
les
adc
jecxz
cltd
shrl
fildll
outsl
loopne
jbe
sbb
imul
add
or
cmp
adcl
jne
ja
or
daa
mov
and
add
pusha
xchg
sbb
jo
mov
int
cmpsb
pusha
sbb
incb
pop
xor
push
dec
mov
cmp
stos
or
or
ja
xchg
call
ret
stos
sbb
add
lock
xor
rolb
scas
inc
adc
xchg
add
jo
sahf
leave
sarb
mov
push
sub
jbe
addr16
inc
mov
cmpsb
outsb
push
shll
add
xor
imull
rorl
push
sbb
lret
out
xchg
inc
and
stos
icebp
aaa
adc
sbb
push
push
mov
inc
imul
or
sbb
shll
jge
push
fisubl
cmp
sbb
adc
xor
adc
or
mov
or
scas
sbb
lock
jmp
mov
les
lcall
mov
dec
dec
xor
aad
lret
or
sub
outsb
adc
rcl
mov
rcr
cmc
inc
mov
cmp
and
inc
scas
and
pop
int
mov
adc
pushaw
mov
outsb
dec
xchg
loopne
xchg
aad
mov
sbb
xchg
ss
push
les
mov
xchg
repz
lods
in
mov
add
sbb
ds
cli
or
or
mov
inc
push
cmp
pop
dec
fsubr
xchg
je
test
sbb
mov
adcl
dec
test
in
cmp
pop
or
mov
xchg
push
pop
or
push
mov
cs
or
cmp
sub
inc
mov
mov
mov
sbb
pusha
clc
and
jecxz
and
inc
mov
rolb
or
mov
ljmp
jo
cmp
xor
sbb
inc
iret
mov
jo
and
push
into
pop
and
mov
sbb
jmp
lret
inc
push
inc
arpl
and
push
rorl
pop
push
cmp
in
push
xor
dec
clc
ret
sub
shrb
push
ret
xchg
loope
lret
sti
aaa
adc
dec
popa
ret
ljmp
sbb
mov
add
aaa
nop
jns
and
inc
sub
pop
dec
out
xor
test
mov
adc
push
aam
xchg
push
add
jae
mull
pop
cmp
into
sti
jae
pop
lock
sub
cmp
rcrb
mov
push
adc
xorb
add
xchg
add
jge
mov
ret
repnz
imul
movsb
cmpsl
adc
jae
or
out
mov
inc
leave
mov
mov
cmp
push
mov
psubd
add
mov
mov
sub
in
and
cwtl
cmp
lret
mov
les
ds
push
jno
sbb
cmpb
fimuls
pop
call
out
xchg
test
mov
mov
push
ss
call
sbb
dec
and
into
pushf
lock
aam
fstpt
dec
bound
imul
sub
push
sbb
dec
sbb
dec
mov
xor
es
mov
sbb
inc
inc
fwait
dec
dec
and
inc
and
xlat
ret
fistpl
dec
nop
sub
mov
jl
lret
movsb
xor
add
add
xchg
fnstcw
test
or
and
negl
nop
cltd
loopne,pt
push
outsl
testb
icebp
pop
inc
jl
out
bound
je
stos
mov
push
xor
cs
mov
fildll
xchg
jb
test
inc
inc
fimuls
dec
mov
pop
popf
xchg
icebp
xchg
sub
pop
cmp
shlb
insl
xchg
sti
mov
sub
mov
adc
mov
repnz
ss
push
or
mov
or
inc
out
mov
xchg
mov
test
subl
jl
and
push
or
xchg
xorl
test
lea
or
ucomiss
aas
data16
test
lea
inc
in
lcall
push
jo
mov
inc
pop
jo
les
sbb
in
jmp
into
pop
jo
ds
pop
mov
addb
lcall
outsl
push
fiaddl
mov
mov
imul
inc
dec
inc
jnp
pop
cmp
xchg
jno
jno
fistl
jo
inc
jl
jns
xor
sub
sbb
dec
cmpsb
pushf
push
sbb
jno
push
pop
das
cmpsb
pop
mov
add
and
xchg
insl
xchg
roll
push
mov
dec
inc
xchg
dec
xchg
lods
cmpl
arpl
in
pop
in
xchg
push
in
xadd
loopne
ja
pop
push
sbb
sbb
or
mov
pop
or
ret
cmp
pop
push
inc
outsb
add
xchg
mov
out
dec
ds
idiv
adc
popf
mov
inc
xlat
lods
pop
orb
or
ljmp
addl
mov
stos
fiadds
pop
out
push
js
pop
sbb
in
ja
mov
pop
pushf
cmpsb
pop
pop
dec
mov
or
sub
ret
and
and
inc
push
or
insl
iret
push
mov
call
jns
out
add
push
xadd
inc
xor
add
dec
jmp
mov
mov
and
test
test
xchg
inc
mov
mov
mov
insb
xchg
mov
mov
add
jp
mov
mov
testb
ds
insb
xchg
jb
loope
sub
push
and
or
push
inc
repz
adc
jp
ss
mov
mov
mov
push
push
lods
inc
push
jae
movsl
pushf
test
cmpsl
add
lds
in
cmp
jge
hlt
mov
xor
pushf
mov
movsb
mov
js
jbe
sti
or
mov
pushf
xchg
inc
push
mov
cmp
push
incl
mov
cmp
sbb
test
ret
ss
dec
dec
ja
inc
mov
cmpsl
repz
sub
outsb
push
mov
dec
lahf
add
inc
adc
mov
dec
js
mov
mov
or
cli
or
jp
rolb
push
lods
xchg
mov
dec
out
leave
call
clc
outsb
mov
lahf
and
add
ljmp
push
inc
jmp
fs
push
cmp
sbb
loopne
add
pop
add
outsl
je
inc
inc
es
mov
mov
inc
sub
lods
add
ret
jnp
inc
inc
pusha
xchg
icebp
and
jecxz
repnz
pop
js
xor
std
int3
pop
xchg
push
mov
push
out
dec
xchg
fwait
mov
mov
cmp
outsb
mov
dec
adc
cmpsb
xor
mov
insl
mov
adc
shlb
pop
push
push
cmp
jle
mov
xchg
lret
hlt
add
sbb
ret
ret
stc
xor
or
popl
xchg
lret
inc
add
dec
or
lods
ljmp
sbb
test
inc
rcrb
xchg
ljmp
and
inc
fdivl
inc
push
cmp
js
dec
rcrb
or
stos
lods
aam
add
sbb
add
xor
cmpsl
mov
rorb
js
roll
cld
js
clc
popf
jle
lods
xchg
push
add
sbb
pop
pop
sbbb
add
ret
popf
mov
cmp
mov
addl
out
scas
jl
nop
add
mov
arpl
xor
cld
rcr
jae
jo
add
inc
sahf
mov
testl
mov
xchg
cmp
inc
jmp
mov
adc
cltd
mov
dec
dec
lock
dec
inc
js
orl
adc
mov
movsl
sarl
mov
pop
adc
sub
add
mov
xchg
sbb
xor
mov
loop
pop
je
lock
stos
pop
andl
mov
cli
jns
mov
adc
add
pushf
mov
and
sahf
jp
mov
fwait
out
add
adc
jge
popa
xor
sub
push
aas
xor
jns
dec
mov
push
sbb
push
hlt
jne
ja
push
dec
scas
icebp
ja
mov
cmpsb
dec
mov
xchg
ljmp
sub
sbb
sbb
rcll
arpl
push
push
and
dec
enter
mov
outsb
mov
dec
or
adc
insb
hlt
insb
roll
adc
push
pop
add
xor
int3
iret
sub
add
mov
sbb
dec
pop
sub
push
fcmovnb
jne
iret
data16
jb
mov
mov
mov
scas
adc
std
adc
jb
cmp
bound
xchg
sub
pop
fdivl
sbb
cwtl
jns
adc
add
lods
pushf
and
dec
dec
mov
js
js
cmp
mov
nop
int3
push
xchg
add
inc
inc
lds
push
mov
aas
outsb
imul
cmp
stc
rcrb
aaa
test
inc
or
jae
inc
lret
js
int
mov
mov
daa
in
cmp
js
or
add
or
push
shrb
ds
jecxz
cmp
sub
aam
in
ljmp
add
jae
jg
mov
fs
std
add
mov
sbb
inc
push
xor
and
ret
push
push
shrl
pusha
mov
mov
mov
test
test
dec
test
pop
pop
push
fwait
sub
add
lret
imul
inc
mov
or
or
sbb
inc
sbb
pop
mov
fbld
jecxz
pop
mov
mov
pop
mull
mov
clc
movsb
fidivl
xchg
or
cmp
div
cmc
sbb
mov
jl
fbld
add
sub
xor
andl
rcrb
sub
test
jae
mov
mov
int3
dec
pop
dec
cmp
ljmp
stos
cmp
jle
mov
inc
jnp
mov
test
dec
mov
jnp
fcomps
sub
pop
pop
aam
leave
adcb
bnd
dec
cmp
sub
mov
outsb
cmp
pop
dec
popa
xor
mov
mov
inc
jp
jo
iret
mov
rorb
cltd
push
pop
orl
xchg
xor
xchg
shll
fisttpll
ret
pusha
xchg
xchg
push
test
clc
cmp
push
push
pop
cli
xchg
aaa
loop
dec
es
sub
dec
xchg
mov
xchg
xor
lcall
jo
pop
stos
add
or
inc
and
fisttpll
sbb
out
call
mull
popl
dec
ja
xchg
cmp
clc
mov
xchg
dec
stos
mov
idiv
cmp
dec
lock
pop
popa
jns
mov
add
and
inc
shrb
jno
shr
push
stos
dec
dec
ds
cmp
xlat
cmp
push
mov
mov
or
pop
pop
inc
mov
lds
int3
xchg
popa
sub
les
pop
fcmovnbe
mov
push
mov
cmp
aas
inc
jo
ds
or
sub
aad
lods
inc
add
and
push
sub
dec
sahf
and
loop
mov
pop
or
aam
push
stos
loopne
pop
pop
lods
xchg
inc
add
clc
dec
or
aaa
push
pop
hlt
enter
sahf
cmp
faddl
fcomp
lcall
into
inc
jae
or
dec
cmpl
out
data16
ffree
addr16
pop
imul
mov
add
or
fwait
mov
dec
mov
shlb
mov
adc
addl
ds
mov
nop
sub
sbb
cmp
mov
mov
mov
rcll
mov
test
mov
inc
or
sub
inc
outsb
in
or
pop
pavgb
fistps
ret
add
dec
mov
pop
lock
xlat
sub
test
inc
inc
ss
adc
orl
add
pop
xor
ret
and
mov
and
out
into
rclb
testb
mov
adc
pop
stc
add
adc
pusha
inc
jmp
enter
dec
or
fisttps
sub
loop
sbbb
xchg
mov
push
loopne
ss
cmp
add
push
push
mov
stc
stos
lods
or
cmp
adc
add
add
inc
js
cmp
mov
mov
ret
or
outsl
pop
or
call
mov
push
xchg
in
dec
mov
add
and
add
daa
pop
pop
sub
xor
out
add
rorl
mov
xchg
sub
imul
and
outsb
fdivl
shrb
adc
scas
test
cmp
xor
jl
testb
adc
xor
add
inc
inc
pusha
mov
popf
btc
ss
sub
cs
jno
jl
popf
add
sbb
aad
dec
mov
sub
cltd
pushf
add
cmp
cmp
or
jp
loope
push
ja
ficompl
int
sub
xchg
cmpsl
cli
cs
xchg
je
add
gs
mov
inc
int3
loope
fwait
pop
sbb
or
adc
push
rolb
pop
icebp
cli
jp
dec
push
dec
aas
out
subl
jbe
out
cltd
rcl
lcall
cmpsl
sbb
inc
inc
add
jae
xchg
dec
xchg
push
pusha
push
inc
in
in
jp
mov
test
ret
dec
push
sahf
pushf
in
pop
dec
mov
add
fcmovnb
cmp
sub
push
ret
or
lods
adc
sub
movsl
lret
mov
in
mov
add
push
push
std
mov
jnp
popl
test
xor
loop
bound
sbb
fimull
adc
push
jle
test
xchg
int3
es
outsl
mov
adc
dec
pop
lahf
mov
or
dec
pusha
cmp
insl
fcmove
aaa
xchg
pop
lret
mov
or
int
lock
or
push
sbb
or
lret
loope
data16
pop
xor
or
mov
bound
or
adc
mov
out
loopne
ret
pusha
add
sti
scas
or
fucom
jnp
and
imul
ljmp
inc
mov
es
cmp
addl
imul
fldenv
pop
or
out
sub
add
adc
mov
pop
test
pusha
imull
outsb
jp
mov
mov
adc
cmp
or
sub
mov
push
dec
or
dec
shrl
fucom
jmp
das
aaa
inc
xchg
jo
lret
jae
sub
pop
mov
les
mov
and
inc
sbb
jmp
sti
jl
mov
add
inc
cmp
aaa
xchg
jne
movsb
pop
or
addl
loope
mov
mov
sbb
xor
inc
inc
pushf
sbb
pop
xor
push
rolb
cmp
pop
dec
sbb
and
mov
pop
loopne
push
dec
jo
pop
cmp
aam
add
out
sbbl
push
add
mov
xchg
cmp
arpl
adc
js
add
xlat
sbb
es
fwait
je
jbe
push
cmp
imul
cmpsb
dec
gs
mov
sub
sub
xchg
cmp
mov
into
lods
insb
add
stc
jo
movb
cmp
ret
push
xor
mul
rol
sbb
lds
das
add
ret
sbb
je
ja
jl
roll
mov
ret
test
inc
jmp
icebp
jle
outsl
inc
mov
insb
mov
stos
rcl
sub
pop
adc
sub
or
mov
enter
inc
popa
xchg
or
addl
test
or
sub
inc
xchg
sub
outsl
loopne
fwait
lret
jbe
push
add
xchg
outsl
adc
lret
dec
bound
or
inc
xor
andl
add
insl
movsl
cli
adc
dec
mov
mov
or
fdivrl
sbb
jge
jbe
mov
dec
mov
imul
lea
mov
pop
push
mov
mov
insl
insl
repz
orl
dec
sbb
mov
pop
outsb
pusha
adc
sub
orl
popa
or
inc
fxch
aad
dec
test
add
pop
pop
or
adc
aas
mov
xchg
lods
pop
pop
mov
cld
and
ds
repz
inc
or
stos
mov
adc
sar
sbb
ret
mov
stos
add
inc
sbb
mov
lcall
addr16
adcb
inc
lea
loope
xor
or
sbb
stos
stos
jne
jne
inc
push
aam
sbb
jmp
pop
cmpl
je
mov
popa
shrl
mov
arpl
popa
mov
or
cmp
mov
popa
sbb
fwait
jns
movsb
dec
mov
xchg
lcall
mov
push
popa
add
jl
stc
cmp
sub
lcall
add
ret
inc
popa
xor
ud1
mov
push
pop
pop
pop
cmp
lods
add
stc
test
ja
scas
or
jmp
inc
mov
xor
leave
test
aaa
movsl
imul
jo
fistl
adc
push
cmp
push
adc
add
fdivrl
fiadds
inc
outsl
push
and
daa
adc
inc
cwtl
gs
sub
push
push
andl
movsl
iret
out
add
outsl
xor
xchg
sub
xchg
daa
es
lret
rcr
les
xchg
xchg
or
popf
jnp
ljmp
gs
sbb
xchg
adc
dec
lcall
sub
mov
popf
shl
jbe
push
inc
adc
add
xchg
imul
pop
adc
addb
fsubrl
ret
mov
icebp
outsb
std
sub
dec
mov
test
add
dec
cmp
mov
dec
push
ds
inc
and
ficoml
dec
pop
or
mov
push
or
aam
dec
pop
sbb
sub
adc
icebp
xchg
hlt
adc
push
mov
sub
js
inc
ljmp
addr16
fistl
in
mov
and
jp
sbb
push
movsl
sbb
je
mov
push
lahf
enter
out
sub
sub
inc
mov
aaa
pusha
test
pop
jnp
or
jecxz
and
lea
fdivs
mov
das
xadd
sub
addl
adc
lds
inc
mov
pop
mov
sub
mov
fs
add
mov
xchg
clc
xchg
xor
pusha
lcall
sbb
inc
loop
fdivrl
mov
mov
cmpsl
mov
loop
outsb
mov
jb
lahf
icebp
push
rorb
icebp
xchg
xchg
inc
pop
fbld
or
fs
push
fdivs
pop
push
xlat
or
adc
ficomps
or
or
cmp
mov
sbb
sub
cmp
mov
sbb
lret
mov
or
add
or
test
pop
ret
inc
add
jmp
and
pop
add
mov
inc
push
popf
mov
dec
push
fcoms
mov
or
and
or
scas
or
or
cmp
ret
xor
sub
pop
push
jns
sub
add
and
xor
sub
and
xchg
push
lret
mov
add
push
mov
xchg
inc
sub
pop
cld
mov
sub
mov
adc
add
movsl
icebp
push
jmp
add
add
mov
push
sbb
push
pop
movsl
movsb
push
mov
icebp
and
pop
inc
dec
or
stos
imul
or
fistpl
adc
pop
mov
xchg
int3
pop
ja
testb
sbb
pop
inc
add
or
xor
jbe
ret
adc
ss
sbb
ret
dec
adc
or
push
js
inc
cwtl
test
sub
adc
dec
sti
add
or
loope
sub
adc
add
or
and
add
bound
xor
cmp
or
ret
in
incl
push
xlat
in
mov
push
daa
xor
xor
sbb
xchg
mov
push
lods
mov
dec
mov
xorb
testb
mov
xchg
and
test
in
aad
hlt
inc
mov
hlt
sbb
lret
push
rcrb
aam
xchg
and
ret
mov
or
adc
scas
jge
pop
dec
and
xchg
ljmp
jne
mov
jl
adc
push
add
pop
xchg
daa
push
cmp
decb
sub
jae
js
ficoml
mov
lds
int3
add
xor
jl
mov
fcom
movsl
orl
or
pop
jmp
inc
mov
mov
popf
rolb
push
mov
ds
gs
sbb
adc
inc
cmp
add
xchg
int3
xchg
xchg
adc
and
jnp
inc
xchg
pop
dec
jmp
add
loopne
shll
jns
inc
cmc
outsl
movsb
dec
and
xor
pushf
inc
hlt
or
insl
inc
push
inc
lods
adc
insl
xchg
incl
sub
push
or
lds
adc
and
push
sub
sub
jp
dec
mov
popa
cmp
fldl
sbb
test
cld
clc
jb
push
mov
xchg
xchg
inc
popl
and
dec
test
inc
pop
mov
push
add
pop
xchg
sarl
jo
or
movb
push
push
sti
jne
xchg
aas
lods
js
and
lods
pusha
sub
or
inc
insl
test
dec
push
push
xchg
sub
sub
inc
pop
xor
jmp
mov
test
inc
stos
insb
inc
rorb
je
inc
icebp
or
lea
fstpl
je
or
or
push
mov
cmp
insb
jp
mov
xor
mov
add
mov
add
fisttpll
sbb
xor
xor
js
or
and
xchg
sbb
addb
or
filds
cmp
addb
sbb
cmp
inc
in
popa
outsl
call
mov
jecxz
xor
int3
push
pop
daa
pop
inc
jo
mov
push
push
leave
sub
adc
mov
add
adc
xor
mov
inc
and
xchg
pop
xlat
mov
pop
dec
imul
ja
push
shrb
imul
jl
scas
jg
xchg
and
sub
or
sbb
in
adc
or
pop
mov
inc
or
jmp
xchg
inc
movl
mov
jg
add
or
jmp
ljmp
dec
out
pop
sub
aam
xchg
mov
cli
inc
das
mov
lds
dec
adc
ret
repnz
push
add
gs
and
cld
js
imul
shll
bound
test
or
das
push
xchg
lea
or
and
lock
movsl
push
fwait
and
dec
jg
in
aaa
not
loop
dec
push
push
adc
aas
xorb
mov
clc
imul
je,pn
scas
fimull
and
xchg
outsl
xchg
sub
xchg
movsb
push
inc
jmp
into
je
fiaddl
lea
push
adc
popa
andl
stos
loopne
adc
pop
cmp
xchg
and
in
mov
push
call
fadds
mov
fsubr
and
pushf
cmc
lock
icebp
xchg
adc
adc
or
mov
aad
push
out
xchg
repnz
push
testl
mov
pop
and
xor
popa
sbb
sbb
dec
loop
stc
xor
shrb
jno
jmp
or
mov
inc
mov
pop
xchg
or
je
into
sbb
scas
mov
cmp
addl
mov
jne
stos
pusha
push
mov
dec
ljmp
and
test
jp
push
je
xchg
das
mov
aam
mov
push
or
aas
js
adc
lods
adc
mov
sub
fnstcw
push
out
and
call
insl
and
insl
mov
push
out
ljmp
fs
loopne
add
push
pop
adc
and
inc
or
pop
xor
lahf
add
add
sub
add
inc
adc
inc
in
dec
sub
inc
divl
test
jg
inc
mov
inc
mov
call
jl
enter
mov
cmp
mov
jns
popfw
cmp
hlt
mov
add
clc
and
cli
sbb
and
and
jb
xor
adc
movsl
mov
xchg
and
es
and
mov
or
xchg
test
fildll
sbb
xor
add
clc
cmp
add
sub
in
imul
lods
or
xor
xorb
jge
enter
dec
mov
mov
xor
pop
xor
lret
cld
fisubl
mov
xor
inc
imul
add
test
cmp
aaa
or
lret
add
addl
xor
flds
inc
jecxz
dec
add
adc
and
xor
cmp
scas
pop
xor
adc
add
mov
pop
pushf
jmp
ror
je
xchg
ret
jne
or
lods
push
dec
sbb
jmp
inc
lret
cmp
loopne
ret
cli
cmpsb
jbe
fwait
dec
pop
cmp
xchg
add
xor
mov
add
xor
sub
cmp
orl
orb
ret
arpl
cmc
push
popf
or
push
roll
imul
inc
ret
aas
push
push
adc
cwtl
fadds
add
fwait
mov
add
ja
and
pop
mov
inc
xchg
adc
test
sub
or
jnp
rorl
imul
cmp
cli
add
and
pop
mov
xchg
sti
mov
sub
fcmovnb
add
addr16
mov
sub
dec
ss
jecxz
mov
andb
or
push
xchg
adc
cmc
push
loope
sahf
gs
or
add
pop
fisubl
sti
jo
or
enter
test
pop
loopne
jecxz
movsl
cmp
sbb
mov
cmp
jo
cltd
and
push
subl
sbb
fsubrs
and
sbb
arpl
xchg
xchg
sub
mov
mov
xchg
outsb
sub
repnz
mov
sbb
orl
add
loopne
inc
das
inc
inc
add
mov
js
enter
add
mov
mov
xlat
fistpll
jl
mov
repnz
gs
popa
mov
out
or
and
jno
jns
pop
mov
or
or
stc
pop
inc
jno
sub
imul
aaa
mov
mov
cmp
fsubrs
pop
xor
sbb
or
add
cmp
pop
insl
inc
mov
jge
movsl
mov
stos
add
sub
or
nop
lcall
dec
push
mov
or
imul
movsb
add
dec
arpl
xchg
mov
push
decb
lods
add
mov
mov
aas
ja
jne
or
mov
inc
scas
push
cmp
push
dec
add
pop
sub
cwtl
mov
jne
and
add
add
push
xchg
xor
add
push
adc
setnp
and
jo
lods
popf
jae
mov
xchg
xchg
roll
push
ret
rcrb
aaa
ret
dec
enter
xor
ss
xor
and
xchg
jo
add
scas
lea
les
or
sub
popf
jnp
pop
cmp
iret
pushf
fs
cmp
dec
sbb
cmp
xor
pop
mov
je,pn
ljmp
dec
rcl
xor
xor
cwtl
out
outsb
xchg
shlb
fbld
push
fwait
mov
dec
xor
push
std
mov
leave
lcall
test
lods
movsb
cmp
inc
mov
push
cmp
jecxz
test
adc
xor
gs
jae
jae
hlt
mov
jnp
or
and
inc
xor
sarl
fldenv
in
mov
fsubr
ja
rorb
enter
ret
imul
fsts
xchg
push
vshufps
jnp
js
add
cltd
pop
mov
lret
fcmovu
sbb
popf
loop
inc
fwait
insb
js
pop
jecxz
push
push
lock
mov
inc
jne
addr16
or
fidivrs
addps
popa
jle
mov
lods
push
adcb
jno
cmp
dec
aad
mov
mov
dec
pop
jle
jmp
test
jl
dec
scas
cmp
cmp
call
add
addr16
pop
add
das
sub
xor
addr16
cmpsb
subl
adc
rcrl
pop
imul
and
fucomi
pushf
inc
or
lea
icebp
mov
xchg
inc
dec
pop
daa
adc
inc
nop
outsb
loopne
test
dec
jl
test
xlat
sarb
push
pop
push
dec
dec
nop
daa
xorb
mov
adc
adc
xchg
roll
leave
jle
mov
rcll
cmovge
push
ds
inc
addr16
and
xor
push
pop
mov
xlat
xchg
mov
mov
xor
jmp
gs
popl
pop
mov
add
jecxz
cmp
and
inc
adc
js
arpl
pop
pop
jo
cmp
fldcw
mov
iret
rclb
mov
cmpxchg
loopne
aaa
ficompl
add
jecxz
ret
push
jg
mov
mov
pop
mov
mov
mov
jo
adc
std
and
pop
dec
add
sbb
adc
push
lods
pop
data16
push
loope
ja
or
leave
jl
sub
sbb
shr
push
adc
inc
orl
push
cmp
imul
xor
popa
and
sbb
daa
pop
cmpsl
repz
addl
mov
orl
sub
xchg
repz
rorl
mov
or
sub
mov
add
inc
stos
movsb
imul
and
xchg
mov
jg
or
sbbb
add
and
sbb
pop
into
std
push
add
xlat
jno
xorb
mov
xchg
xchg
cwtl
or
xor
sbb
mov
pop
and
xchg
cmp
add
andl
rcrb
xchg
fsts
jle
ret
test
ret
inc
clc
pusha
aad
inc
sub
adc
test
inc
subb
adc
mov
dec
push
jne
pop
dec
add
xor
add
in
inc
jae
clc
mov
loopne
into
stc
insb
adc
mov
jp
pop
cmpl
add
mov
and
inc
nop
lret
cmp
orl
test
cli
movsb
adc
in
fistps
daa
or
push
movsb
fisttpl
adc
push
or
inc
adc
push
and
loopne
clc
adc
imul
push
or
stc
inc
cmp
sti
adc
push
xor
xor
cwtl
inc
push
movsl
add
add
clc
xchg
shrl
int
outsl
andb
inc
aam
dec
mov
pusha
fsubr
adc
push
cmpb
leave
xor
into
xor
sbb
xor
scas
mov
inc
mov
testb
pop
and
bound
jp
adc
mov
add
gs
cmp
cmp
adc
add
and
xor
pop
push
inc
adc
inc
adc
loope
mov
xchg
and
dec
jne
daa
adc
inc
mov
stos
mov
and
inc
or
mov
sbb
mov
imul
inc
or
mov
xchg
das
ret
aas
sbb
pusha
popf
testb
pop
push
ret
je
dec
jo
xchg
and
mov
int3
mov
mov
or
out
fisttps
xadd
jno
mov
push
dec
jo
or
adc
jecxz
adc
and
push
fwait
shll
sbb
dec
aaa
mov
sbb
loopne
add
pop
jno
jno
imul
add
or
mov
jecxz
lods
call
push
inc
mov
mov
fidivs
pusha
pushf
andb
fstpt
push
movsl
dec
mov
arpl
loope
imul
mov
movsl
cmp
adc
test
sub
popa
pop
sbb
ror
les
push
mov
movsb
jl
add
inc
sub
sub
dec
mov
and
sbb
dec
cmpsb
aad
in
cmovge
dec
jecxz
mov
sbb
jnp
sbb
shlb
fcoml
inc
cmp
sub
aad
and
icebp
fs
jmp
xor
mov
idiv
imul
lcall
sbb
cmovge
pop
test
pop
rorl
adc
in
pusha
sub
or
clc
mov
mov
inc
int
xor
rcll
jne
inc
cmp
mov
icebp
push
ficompl
adc
add
push
push
mov
sub
dec
sub
inc
adcl
cltd
ljmp
push
insb
and
adc
std
cmp
and
xor
fnstenv
cs
and
sub
lret
jge
dec
ja
xor
cmp
mov
repz
sbb
add
sub
rcll
xlat
push
add
xor
pop
cltd
or
xchg
and
or
mov
incb
add
pop
push
push
popa
ja
xor
xchg
push
mov
add
push
inc
scas
push
add
icebp
sub
jo
ds
loope
test
mov
test
leave
jb
sub
or
push
xchg
ds
enter
sbb
pusha
or
dec
outsl
add
aaa
lock
xchg
inc
sbb
xor
loop
in
add
cld
test
loopne
or
inc
stos
fs
mov
pusha
cmp
fcomps
int3
sub
dec
ret
cmp
dec
add
push
popa
jo
add
sbb
in
sbb
imul
dec
xchg
add
add
jmp
add
jmp
loopne
cmpsl
or
xor
inc
rolb
es
or
jp
push
mov
pop
mov
enter
xchg
jo
cmp
sub
add
pushf
fs
or
push
inc
or
dec
movsl
mov
xchg
mov
test
mov
pop
add
icebp
sbb
mov
sub
jae
insb
and
pop
cmp
add
add
or
arpl
lahf
xor
js
and
std
and
aaa
test
jno
ficoml
test
dec
es
adc
mov
sub
gs
pop
fwait
push
aas
add
sbb
pop
add
add
dec
cmc
inc
insb
fcmovb
pop
aas
push
and
cmpsl
adc
jmp
adc
inc
adc
mov
mov
pusha
movsl
mov
xchg
push
sbb
xor
inc
push
in
test
mov
sbb
add
push
lds
mov
xor
fs
inc
rcl
xchg
pusha
lock
insb
sub
or
mov
in
mov
inc
or
add
xchg
add
push
or
push
xor
pop
popf
push
cmp
add
out
sbb
stos
push
and
xchg
xor
cmp
xchg
iret
insl
inc
ret
lods
popa
jb
ss
fistpl
push
push
fiadds
roll
mov
lods
lret
pop
repnz
pop
inc
pop
pcmpgtd
and
mov
mov
jns
mov
dec
insb
cmp
lret
jae
push
jp
sbb
and
push
or
lods
cmp
mov
clc
hlt
sub
add
add
add
and
jne
sbb
sbb
or
add
mull
hlt
aad
pusha
fxch
aad
or
cmc
and
xchg
scas
mov
mov
lods
in
bound
jecxz
dec
push
ljmp
lods
push
popf
mov
aas
lock
imul
fisttpl
pusha
mov
repz
or
cmp
mov
repnz
outsl
icebp
push
sbbb
mov
jo
sub
mov
pop
out
inc
xchg
mov
loope
mov
mov
dec
inc
imul
inc
rcr
sub
testl
jmp
aam
das
outsl
jb
js
and
xchg
adc
mov
daa
adc
pop
les
inc
jge
popa
in
inc
rclb
mov
ljmp
sbb
add
mov
mov
or
mov
movsl
add
lea
add
sub
in
ret
fwait
lret
sbb
mov
dec
into
sbb
xor
pop
mov
inc
dec
addl
enter
popa
and
mov
dec
imul
jecxz
or
sbb
lahf
xor
add
mov
dec
xchg
cwtl
push
in
xorb
out
or
dec
inc
or
test
push
imul
inc
push
sbb
mov
or
outsl
fdivrp
xchg
mov
pusha
xchg
dec
fldl
jecxz
shlb
sarl
popa
sub
test
sahf
and
push
cmp
pop
xlat
es
or
sub
pop
imul
inc
pop
ljmp
or
arpl
adc
dec
fsin
add
add
adc
ret
aad
addr16
add
imul
shll
sub
popf
xchg
lcall
sbb
ret
inc
jmp
pop
sub
jbe
orb
pop
sbb
cmp
addr16
push
add
inc
fucom
add
sbb
and
mov
mov
add
dec
out
xchg
sub
push
fwait
insb
mov
clc
or
scas
push
rolb
insl
enter
fmull
movsl
adc
pushf
mov
pop
mov
lcall
fucomp
or
adc
inc
shrb
mov
add
xor
jmp
xchg
cmp
subl
lret
sbb
int
int3
ss
mov
mov
shll
cltd
adc
ret
add
and
mov
inc
dec
out
out
out
push
popa
and
pop
roll
clc
xor
cmp
lock
sbb
adc
jp
sbb
push
shl
or
icebp
jmp
in
pop
push
pop
dec
out
sbb
or
call
inc
xchg
sub
js
shrl
add
add
mov
repz
inc
fldl
sbb
add
mull
pop
or
inc
dec
xchg
addr16
shll
popa
out
xchg
jecxz
push
jbe
sarl
add
fsubrs
mov
and
xor
int
adc
sub
shlb
inc
imul
das
cmpsl
frstor
arpl
adc
pop
jno
imul
pop
pop
mov
ret
popf
or
addr16
es
test
dec
inc
ret
push
cmp
bound
add
cmpsb
test
pop
adc
sub
out
xchg
and
lcall
in
into
dec
dec
pushf
in
sarl
jns
inc
mov
cmp
adc
outsl
push
dec
sub
or
adc
popa
out
data16
sub
nop
outsb
mov
les
ljmp
dec
mov
adc
push
out
push
or
adc
addb
cmpsb
pop
adc
sub
lods
sbb
idiv
adc
mov
mov
ss
leave
popa
loopne
push
or
or
movsb
hlt
lret
jo
and
test
dec
fidivs
cs
and
sub
arpl
addl
sbb
mov
rclb
and
ret
dec
xchg
pop
gs
mov
sarb
fsubp
ljmp
cmp
and
jb
pop
lock
mov
adc
sub
jmp
loop
je
cmp
gs
mov
test
mov
sub
mov
add
xchg
dec
imul
jecxz,pt
mov
mov
mov
or
pop
dec
inc
ljmp
sahf
sti
cmp
hlt
xchg
or
rcll
sub
sbb
ficoml
jmp
xor
or
std
jmp
les
adc
push
and
shrl
pop
dec
nop
rorl
lods
sub
add
jae
sbb
popa
test
mov
sub
imul
das
cmp
daa
add
dec
push
xchg
dec
stos
cmp
push
out
insb
and
insl
sbb
sbb
pop
push
outsb
lcall
dec
movsb
pop
xchg
arpl
pop
movsb
clc
sbb
xchg
sahf
mov
cmc
lods
xchg
cwtl
ljmp
leave
call
adc
fmuls
and
stc
sbb
dec
sbb
jo
scas
inc
mov
pop
push
push
and
movsl
sub
mov
pusha
add
push
cmp
jmp
out
and
pop
test
pop
jp
adc
inc
sbb
out
or
sub
xchg
mov
ret
pop
sub
and
or
inc
fildll
test
insl
sbbl
lock
or
notl
mov
imul
insl
mov
or
or
jne
or
mov
sub
in
cmp
add
sub
adc
lds
pop
cmp
shll
xor
test
mov
hlt
outsl
xor
gs
cmpb
mov
cmp
add
inc
lods
push
sbb
call
sbb
or
mov
or
push
or
ja
push
adcb
xchg
dec
fdivrs
inc
scas
mov
loopne
xor
mov
jge
jno
call
xor
cltd
push
push
dec
sbb
pop
or
scas
mov
stos
adc
shlb
mov
shrl
movsl
or
lds
dec
mov
inc
loopne
and
decl
pop
addb
out
and
andl
push
fildl
jns
nop
rorl
out
ss
mov
pop
push
mul
loop
inc
lret
cmp
ret
loopne
addl
subl
mov
sub
xchg
cmp
lahf
cmp
outsb
xchg
jp
inc
test
or
add
pop
and
mov
pusha
push
cld
or
cmp
ret
dec
es
adc
loopne
jmp
mov
xchg
sbb
adc
cmc
mov
adc
xor
cmp
pop
fwait
lea
jl
mov
jnp
addr16
pop
pop
cmc
pop
or
es
shlb
bound
mov
enter
mov
jl
inc
sub
dec
pop
xor
int
sbb
mov
inc
xlat
stos
cwtl
shl
jo
cmp
xchg
adc
movsb
adc
jmp
xchg
xchg
sub
jge
push
jp
adc
sub
jnp
arpl
dec
xor
adcl
and
scas
rolb
adc
jno
les
push
mov
mov
sub
scas
leave
test
sbb
addl
inc
fidivrl
notl
xchg
and
and
xorb
dec
inc
push
dec
inc
jge
sub
ja
or
cmpl
outsl
test
scas
adcb
cmpsb
shlb
lds
outsb
cld
mov
jge
mov
dec
cli
movsb
sub
mov
lret
psubw
lea
xchg
push
ret
inc
xchg
in
in
mov
or
mov
xchg
sti
push
sub
dec
dec
insl
ljmp
fidivl
test
push
popf
or
inc
repz
cwtl
inc
push
call
push
fimull
test
xchg
inc
and
inc
xor
mov
or
xchg
lret
sub
inc
dec
loopne
push
shl
adc
push
outsl
out
inc
sub
dec
cmp
push
sub
add
movsb
dec
scas
jne
pusha
dec
dec
mov
out
jnp
mov
sbb
and
mov
testb
rcrb
imul
movsb
pop
les
xchg
mov
lock
xchg
inc
arpl
xor
xor
push
jmp
adc
lahf
fistl
outsl
sub
lret
mov
and
adc
cmp
mov
fs
mov
loopne
push
iret
mov
sbb
inc
movsl
cwtl
cmpsl
pop
and
mov
stc
rcrb
and
dec
cmp
hlt
mov
mov
adc
loopne
fisttps
cmpsb
push
mov
loop
mov
pushf
das
cmp
cltd
push
sub
fdivl
cli
xchg
test
xlat
jl
push
push
add
lods
xor
xchg
cmpsl
imul
xchg
js
and
fsubrs
mov
rorl
dec
out
lods
stos
cltd
rorl
mov
xor
subl
les
cmp
dec
or
test
les
cmp
inc
mov
xchg
and
dec
and
stos
sbb
xor
xor
add
add
and
xchg
adcl
mov
movb
stc
pop
loope
xchg
mov
push
adcb
andl
stos
lret
pop
inc
lret
ret
push
inc
mov
test
add
ret
lods
sti
scas
add
testl
repz
es
and
pop
in
xor
fwait
mov
fstps
fcoms
push
sbb
inc
dec
test
adc
fiaddl
popa
dec
out
leave
cltd
mov
int
shlb
jp
je
xchg
hlt
adc
lret
and
xor
jo
inc
fmuls
mov
or
push
inc
sub
push
les
adc
ret
push
orl
mov
mov
mov
movsb
mov
sbb
pop
aad
mov
gs
adc
popf
add
add
imul
cmp
pop
js
cmp
out
sbb
xchg
adc
xchg
mov
lods
push
sub
push
aaa
or
lret
and
push
mov
adc
ret
loope
xor
mov
add
mov
pop
push
es
xor
into
add
scas
mull
xchg
cld
rcll
nop
push
cltd
or
mov
add
out
popa
pusha
pusha
pop
mov
aas
inc
jnp
cmp
call
push
movsb
fisttpl
flds
add
add
or
aam
jo
out
roll
sub
sbb
inc
push
imul
push
sub
add
sbb
add
pop
test
pop
sub
mov
add
stos
inc
daa
test
clc
xchg
lret
mov
jne
xorl
shrb
xchg
fnstenv
fcmovnb
mov
orl
mov
insb
inc
test
cmpsl
sub
test
or
pop
clc
lods
lret
lock
or
cmp
pop
sahf
xor
xchg
inc
dec
cltd
xchg
in
inc
ja
outsl
dec
mov
and
ljmp
aam
insl
lods
fcmovb
push
sbb
push
cld
and
movsl
add
xor
clc
and
fisubrl
addr16
fnstcw
out
and
enter
fstps
mov
push
sub
or
cwtl
dec
cmc
sti
push
andl
jno
adc
aaa
or
fiaddl
jecxz
pusha
lret
int
mov
dec
mov
test
adc
xor
sti
cmp
sub
pop
and
adc
mov
ret
not
sbb
out
lret
aas
add
push
rol
push
cmc
add
and
scas
cmpsl
push
cmp
cmp
pop
pop
daa
imul
loopne
leave
push
mov
inc
add
imull
lea
mov
push
pop
fmull
inc
adcb
sbb
fst
clc
in
push
fmull
idivb
repz
push
aas
add
cli
inc
mov
xchg
push
std
shlb
inc
adc
inc
aam
add
sbb
xor
aam
lcall
loope
addb
imul
mov
fdivr
mov
cwtl
push
mov
mov
push
imul
and
xchg
xor
xchg
ret
jp
xlat
pop
or
shlb
adc
andb
xchg
ret
or
fdivl
adc
das
sti
popa
ret
fdivrl
jnp
ret
jae
cmc
cmp
fs
mov
and
das
xor
add
xchg
daa
or
fsts
mov
or
adc
jp
fisttpl
cmc
adc
xchg
and
xor
mov
loop
sbb
int
cmpsl
mov
movsb
xor
inc
mov
out
xchg
movsb
inc
pop
jae
ss
xchg
xor
mov
rcrb
je
scas
jbe
movsl
jne
xor
adc
jae
andw
xchg
or
pop
cmpsl
xor
fs
in
and
aam
jl
into
inc
and
fstpl
pop
movsl
xchg
in
leave
pusha
adc
aam
adc
dec
inc
bound
lret
mov
sub
mov
imul
mov
cmpsl
addb
scas
pop
ja
adc
sbb
loopne
jge
cmp
inc
shr
and
or
adc
xor
cmp
sbb
sbb
mov
jp
push
inc
or
fildll
shl
dec
push
inc
insb
push
aam
imul
mov
les
imul
and
dec
fbld
std
sub
mov
or
pop
out
inc
or
rorb
aas
hlt
sub
fcomps
ret
xor
cmpl
dec
ja
jle
jno
add
pop
add
mov
mov
pop
ljmp
sbb
ret
jbe
cli
sbb
cmp
adc
andl
push
shl
ljmp
or
lods
inc
movsb
loope
or
stos
push
or
fildl
or
push
lds
add
dec
pop
pop
cmp
imul
mov
dec
stos
mov
add
mov
rcl
rorb
dec
mov
jmp
scas
add
inc
pop
add
mov
mov
dec
add
add
outsl
ja
nop
pop
nopl
int3
add
add
roll
repnz
in
rcll
fs
adc
mov
mov
mov
inc
cmpsl
sbb
pop
inc
shll
or
shrl
insb
pop
test
call
push
sub
mov
addb
rcl
xchg
mov
push
jbe
sub
add
mov
pop
subl
testl
mov
leave
sti
xchg
test
push
push
or
subb
sbb
jp
jo
and
jp
push
jb
ret
adc
push
mov
mov
inc
rcrl
or
inc
and
dec
push
insl
sub
or
andb
adc
inc
std
lret
push
cmp
cmpsl
or
sbb
adcl
sub
push
dec
cmp
mov
movb
movsl
adc
mov
adc
arpl
push
popa
aam
cmp
test
push
xchg
add
cmpsb
push
ret
nop
fistps
mov
test
or
and
pop
and
pop
imul
lahf
inc
pop
movsb
mov
add
es
adc
inc
js
adcl
imul
mov
lret
dec
loopne
imul
sub
adc
mov
dec
cmp
sbb
push
les
aaa
js
ret
jae
int
push
cltd
mov
mov
xchg
add
mov
sub
mov
push
dec
in
sub
mov
cwtl
clc
std
pop
sti
pop
pushf
cltd
clc
sub
inc
and
mov
push
adc
inc
cmp
dec
or
ret
or
pusha
hlt
iret
sahf
mov
xlat
sub
imul
add
sbb
xor
shll
insl
inc
addr16
ds
and
or
mov
movhps
movsb
add
and
rorl
xor
pop
cmp
ret
cmp
andl
push
push
mov
loope
sub
cmpl
inc
test
push
xor
lds
insb
xor
std
movsl
or
imul
bound
lds
mov
adc
test
add
inc
das
sahf
xchg
add
jge
add
push
add
add
mov
cltd
pop
dec
mov
in
inc
call
push
out
inc
inc
jb
inc
ret
or
jo
repz
pop
cwtl
and
adc
inc
shrb
xor
jp
test
sbb
adc
out
sub
jae
mov
mov
dec
pop
ret
out
inc
push
sbb
and
in
push
aad
or
scas
and
and
paddq
icebp
and
xor
cmpsb
shl
xor
cmp
xchg
dec
adc
xor
mov
xlat
pop
test
fs
cmpsl
gs
mov
notb
jecxz
or
jo
add
loop
and
jbe
adc
add
popf
daa
inc
or
aas
add
ret
inc
dec
pop
jno
sub
push
sbb
inc
sbb
into
enter
lock
mov
cmpl
and
or
jmp
lahf
add
mov
dec
loopne
or
sarl
imul
rclb
xor
imul
sub
xchg
xchg
xchg
icebp
inc
and
lret
or
out
movsl
mov
in
or
or
arpl
push
xchg
jo
and
jp
ret
lods
push
jecxz
lea
inc
sbb
xor
fsubrs
sbb
adc
jae
add
sbb
inc
xor
pop
orb
jne
aam
xor
mov
mov
andb
pushf
jp
xor
mov
mov
pop
jo
je
and
pop
add
jmp
mov
mov
mov
outsl
das
test
add
jecxz
in
ret
ret
sarl
xor
stos
pop
or
adc
aaa
add
pop
and
ret
sbb
jmp
fs
icebp
cmp
jle
cs
xchg
or
adcb
mov
outsl
sub
dec
imul
mov
mov
cmp
les
dec
sub
leave
fucom
adc
lods
adc
or
jnp
mov
mov
sbb
rcrl
dec
jb
test
push
mov
mov
inc
cmp
rorl
sbb
inc
inc
push
xchg
pop
or
repz
and
adc
loope
mov
test
loopne
jge
nop
mov
shl
adc
dec
sub
lods
movsb
sahf
outsl
lahf
push
es
inc
mov
stc
out
add
and
loopne
imul
jp
ror
and
push
dec
jo
dec
add
xor
lret
mov
adc
icebp
add
xor
pop
dec
ds
mov
mov
jns
cvtps2pi
loope
sbb
add
test
pusha
dec
call
mov
jo
mov
cmp
jl
or
mov
or
insl
push
jo
popa
lds
fdivl
pop
mov
out
xchg
jno
test
push
jne
cltd
add
iret
push
daa
add
mov
mov
sbb
add
adc
add
mov
imul
aaa
xchg
cmc
or
push
push
jne
adc
cmp
jecxz
scas
dec
insl
sbb
insb
adc
sahf
xor
and
sti
sbb
inc
movb
loopne
adc
loop
addb
jp
add
mov
jb
sub
mov
mov
fnstenv
and
or
fistps
push
adc
sub
mov
push
dec
jg
call
pop
test
popf
sub
fcoms
or
inc
mov
rorl
jnp
aam
pop
dec
adc
or
call
sbb
adc
pop
sbb
push
clc
adc
pop
push
and
mov
add
mov
xor
in
or
and
or
in
push
sbb
push
inc
add
cmpsb
or
inc
add
pop
push
jo
in
test
dec
mov
jge
mov
inc
add
loopne
cmp
popa
adc
das
subl
sub
insl
pop
loopne
push
inc
pop
pop
add
lret
pop
cmp
aam
or
xchg
jbe
sub
xor
and
andb
js
and
sub
add
pop
mov
push
add
and
dec
sbb
cmpsl
inc
add
mov
mov
pushf
test
adc
pushf
test
lret
loop
shl
pop
pusha
mov
inc
sub
mov
sbb
add
loope
adc
pop
imul
in
pop
jmp
jmp
mov
fisubl
test
fcompl
dec
in
leave
cmp
cltd
add
ficomps
aaa
mov
mov
jg
ret
sbb
jno
loope
adc
mov
mov
in
dec
movsb
dec
add
out
add
add
xchg
iret
pusha
mov
or
mov
lret
dec
xchg
sarl
push
cs
inc
aad
inc
xor
fcompl
ljmp
push
mov
aam
add
push
repz
adc
push
push
push
icebp
push
pushf
jno
add
jmp
and
lret
push
daa
addl
shlb
loop
jl
icebp
pusha
mov
imul
inc
dec
ret
adc
lock
push
mov
add
mov
leave
fiaddl
scas
test
sar
jmp
or
dec
fnsave
rol
pop
std
ret
pop
es
add
outsb
push
inc
mov
push
add
dec
xchg
mov
cmp
sub
inc
mov
lret
lods
movsl
lods
stos
imul
gs
adc
inc
and
int
mov
add
push
or
mov
notl
lret
add
mov
dec
sub
mov
loope
sbb
fistl
push
cltd
sbb
adc
inc
pusha
xor
cmp
xor
push
inc
mov
jae
inc
dec
xor
clc
rol
mov
call
loope
testb
push
ret
repz
dec
dec
imul
dec
filds
xchg
or
stos
test
lret
iret
pushf
cmpl
push
mov
stos
and
and
xchg
mov
mov
fcoml
lea
into
enter
mov
push
ret
or
popa
out
sbb
adc
push
arpl
test
mov
stc
cld
hlt
pop
rcll
lret
loope
xor
inc
xor
arpl
or
aad
sub
sub
and
inc
dec
jno
ds
or
hlt
pop
jno
jnp
mov
cmp
jnp
mov
sbb
sub
nop
sti
dec
nop
sbb
mov
and
xchg
lret
enter
or
dec
shll
inc
dec
das
rorb
test
mov
imul
pop
loopne
clc
test
push
adc
sbb
insl
pop
orl
cltd
adc
pop
and
and
mov
scas
push
popf
adc
adc
mov
mov
je
cmc
and
cmp
mov
mov
testl
mov
in
add
or
insl
add
inc
cmp
adcl
xor
pop
stc
inc
fs
aam
dec
lahf
and
lds
and
and
gs
inc
sbb
xchg
xchg
pop
test
mov
repz
mov
mov
mov
cmp
aad
add
jnp
ds
inc
xchg
push
mov
arpl
sbb
sbb
clc
xchg
sub
test
les
or
pusha
ret
shl
lret
imul
cmp
test
mov
aam
test
or
fs
test
popa
or
addb
xor
or
lret
pop
test
imulb
arpl
fs
dec
gs
out
test
outsb
mov
lret
pop
sub
xor
int
add
into
nop
gs
xchg
ficoms
bound
xor
xor
insl
imul
mov
sbb
lret
sbb
lea
cmc
imul
inc
adc
imul
xchg
shlb
dec
cmp
mov
sahf
fldl
imul
lods
orl
movb
add
dec
shl
mov
roll
aas
or
ret
test
mov
out
imul
addl
pop
push
inc
inc
pop
dec
cmp
pop
movsb
stos
imul
push
adc
mov
jae
push
ds
clc
popa
fisttps
xchg
inc
adc
sahf
push
mov
aaa
pop
fstl
lret
sbb
jg
mov
fldcw
mov
adc
jbe
imul
lods
fcompl
jecxz
inc
push
inc
add
mov
push
sub
push
push
scas
cmp
mov
cmp
mov
mov
loope,pn
sbb
pushf
rclb
icebp
sbb
fimuls
pop
pop
imul
in
lret
dec
rcr
or
fstps
lds
add
fucomp
movsl
inc
xor
push
fwait
insb
mov
xchg
or
lcall
lret
push
mov
pop
xor
and
xorl
mov
adc
shll
pop
xor
pop
dec
jae
js
and
imul
movsl
nop
lea
jae
mov
ror
cs
add
xor
dec
adc
nop
mov
dec
jno
lea
push
push
insb
and
leave
pusha
xor
dec
jmp
loop
test
hlt
cmp
push
mov
aam
or
jle
dec
dec
add
cmp
or
mov
sbb
cmpsb
sahf
clc
sbb
ss
inc
add
and
push
sahf
adcl
in
adc
cli
addr16
insl
mov
or
and
cmp
mov
xor
loop
mov
xchg
xchg
adc
and
push
cmp
mov
mov
into
dec
mov
push
xchg
aaa
mov
lahf
add
jle
inc
subl
adc
pop
aaa
mov
aaa
pop
add
je
push
adc
in
shlb
jne
xchg
xchg
js
adc
sbb
pop
cli
jno
push
mov
sbb
pop
or
mov
adc
xor
int
adc
inc
icebp
or
mov
add
inc
add
arpl
xchg
xchg
frndint
test
ret
inc
add
xor
movsl
dec
les
xor
insl
popf
addr16
test
dec
add
sbb
cmpsb
add
icebp
ja
inc
xchg
xor
imul
int
cli
add
sbb
scas
rcll
cmp
nop
loope
sti
push
add
arpl
xor
xor
cmc
mov
enter
pop
or
cmp
mov
data16
mov
mov
outsb
push
and
imul
adc
xchg
es
lret
lock
xor
pop
dec
xor
dec
arpl
lds
xor
cmp
and
mov
mov
movlps
lahf
ja
jmp
and
add
fisttpl
jae
imul
in
insl
into
sub
mov
leave
cwtl
sub
or
bound
rorb
mov
and
cwtl
data16
imul
inc
cwtl
shrb
push
xchg
jno
add
lret
stc
xchg
sub
dec
les
or
fists
mov
pop
int
dec
xor
shlb
mov
add
add
push
xor
out
in
insl
ret
roll
test
xor
addl
roll
adc
jns
cwtl
inc
loopne
mov
icebp
outsl
jo
sub
xchg
add
xchg
mov
adc
jp
shll
adc
xchg
jge
addr16
aaa
cltd
add
jo
jno
shlb
les
sarb
loop
xor
and
mov
arpl
sbb
sbb
inc
sub
and
lods
enter
push
cmp
arpl
negl
jmp
sub
dec
cmpb
cmc
mov
push
mov
out
push
or
adc
xchg
sbb
xor
roll
enter
inc
and
cmp
push
in
or
xor
add
imul
mov
dec
enter
mov
push
add
push
mov
lods
test
es
push
push
icebp
shlb
or
xchg
and
das
push
mov
dec
sbb
mov
inc
stos
das
and
xchg
mov
xchg
and
pop
nop
inc
xchg
mov
xchg
sbb
outsb
adc
sbb
imul
cmp
lahf
push
nop
dec
pop
sbb
xchg
add
push
mov
xchg
cmp
add
xor
push
dec
call
jno
into
inc
rcll
arpl
movsl
lret
lods
stos
push
scas
mov
outsb
cmp
and
pop
xchg
dec
xchg
pusha
or
insl
sbb
and
pop
cmc
pop
icebp
imul
pusha
gs
xchg
mov
mov
jo
ja
and
xchg
fwait
fwait
and
adc
or
xor
and
imul
test
inc
scas
movsb
push
cmp
in
pushf
mov
dec
das
xor
sbb
adc
enter
out
enter
int3
push
push
mov
push
xchg
bound
add
popa
mov
mov
rcrb
pop
push
cmpsl
out
inc
inc
test
jge
sbb
push
xchg
imul
mov
cwtl
inc
les
dec
addr16
adc
inc
pop
gs
and
sbb
cmp
mov
inc
and
imul
imul
inc
aas
xchg
push
inc
in
out
imul
mov
xor
add
test
inc
dec
fiaddl
dec
xlat
xchg
lret
adc
add
stos
inc
push
insb
mov
leave
inc
sbb
movb
push
je
pop
inc
inc
sbb
push
adc
lahf
pop
pusha
xor
jecxz
lret
popf
pop
pusha
pop
inc
fistps
adc
adc
add
inc
lds
pop
xlat
or
icebp
sar
add
ja
into
das
mov
and
or
xchg
and
adc
je
mov
enter
aam
sti
sub
ljmp
arpl
or
dec
and
pop
call
xor
jmp
sub
mov
jg
aas
adc
sbbb
movsb
shrb
das
lahf
mov
inc
ret
pop
popa
es
xor
inc
rorb
idiv
or
push
pop
xchg
and
sub
outsb
imul
xor
jmp
loopne
cld
adc
mov
jmp
add
into
xchg
fsubs
dec
xor
sub
dec
jp
mov
aam
mov
sub
sub
inc
or
test
pop
rorb
sarl
ret
dec
mov
xor
mov
inc
clc
pop
flds
shll
mov
pushf
fldcw
cmp
xor
or
sub
sbb
cmp
lock
xchg
sbb
ljmp
jle
inc
pusha
and
xor
sbb
mov
sbb
mov
push
mov
mov
xor
push
xchg
push
xchg
adc
mov
push
or
je
movsl
push
xchg
pop
imul
inc
and
inc
and
pop
pop
mov
popa
lret
push
out
fildl
or
mov
sbb
cmp
mov
ss
pop
xchg
lcall
jnp
scas
jecxz
jecxz
inc
mov
or
inc
psraw
jecxz
frstor
lock
mov
add
inc
clc
test
push
or
cltd
fs
in
mov
pop
xchg
movsb
ret
cmp
jnp
lods
add
out
mov
dec
cwtl
ret
test
in
and
xchg
mov
cmpsb
jp
sbb
aaa
pusha
mov
push
sbb
mov
aam
xor
or
and
jo
aaa
sahf
dec
leave
dec
pop
add
push
ss
shll
and
je
fs
insl
ret
pop
addb
inc
or
out
loopne
mov
mov
ret
sub
mov
mov
jle
inc
mov
fcoms
fcompl
cwtl
pop
cmp
and
mov
push
aas
mov
repz
sbb
xor
in
add
xchg
call
cmpsl
add
mov
fsubrs
or
dec
and
mov
imul
push
sbb
sbb
testb
add
int3
cmp
data16
push
mov
dec
mov
add
add
fsubs
ret
or
icebp
jnp
aas
add
stc
popf
repnz
mov
dec
movsb
xchg
mov
out
add
inc
nop
mov
inc
sbbl
insl
sbb
dec
xchg
mov
es
push
jae
mov
int3
mov
les
xor
cwtl
mov
xorl
jns
mov
adc
or
sub
test
xor
xchg
sbb
enter
insl
cmp
lock
push
sub
push
loope
daa
add
movsb
ss
es
outsl
sbb
fmull
cmp
xchg
and
add
out
xchg
cli
sbb
int
push
test
jno
mov
add
sub
cmp
inc
daa
inc
or
and
and
adc
pop
cmp
fucom
stc
jl
lea
push
mov
fldenv
or
push
test
pop
sbb
push
jmp
xor
movb
pop
sub
icebp
lods
mov
push
ds
inc
sysret
cmpsb
scas
aas
xchg
loopne
jg
repz
pusha
and
shr
jg
shlb
mov
jmp
ret
lods
faddl
fadds
sbb
mov
fs
pop
imull
cltd
dec
enter
add
xor
xor
xor
leave
pop
mov
mov
or
xchg
jl
aad
test
enter
popf
shll
es
or
sbb
inc
arpl
ret
or
ret
sbb
mov
cwtl
mov
imul
dec
jg
jmp
pusha
push
js
scas
inc
jnp
je
cld
and
sbb
push
add
jae
add
mov
dec
mov
and
xor
or
mov
mov
push
add
xor
jle
xor
jo
out
or
pop
lcall
dec
xor
or
and
es
add
adc
daa
dec
add
js
imul
pop
addb
adc
es
xor
sub
mov
shl
lahf
adc
sub
cltd
cs
call
mov
jno
sti
daa
push
ret
rolb
stos
call
inc
bound
and
push
cmpsb
adc
popa
cwtl
outsb
xchg
enter
lret
sbb
loop
cmp
fwait
sub
jo
shll
fldl
push
jecxz
lock
imul
cmpsb
cmpsl
shll
add
testl
mov
or
test
pop
sbb
addb
addl
lods
jns
adcl
fwait
and
adc
mov
or
scas
jg
sbb
and
xor
sbb
inc
mov
xchg
andb
mov
or
or
mov
push
and
inc
mov
cwtl
pop
rolb
xor
dec
jmp
sbb
gs
or
cmpsl
test
and
jo
test
loopne
cmp
addr16
sbb
mov
xchg
cmp
dec
pop
cwtl
xchg
jb
rcll
roll
out
and
aas
addb
js
jp
pop
jge
push
ja
cmp
test
clc
adc
mov
mov
outsb
cwtl
mov
add
inc
lret
insb
dec
push
test
mov
es
push
dec
imul
adc
and
hlt
inc
and
xchg
xchg
es
and
and
pop
cmp
das
push
adc
add
cmp
cltd
xchg
ret
jo
ffree
mov
inc
dec
sahf
iret
sbb
lods
push
lea
or
sub
dec
push
mov
insl
movsl
xchg
andb
or
xchg
add
xlat
push
test
movsl
leavew
push
and
push
aam
inc
ret
cmpsl
add
rcrb
or
jb
mov
out
mov
ret
inc
jno
ret
cmp
stos
adc
sbb
and
pusha
daa
mov
popa
xchg
inc
mov
test
adc
ret
dec
inc
add
cmp
adc
sub
jp
mov
adc
xchg
arpl
aaa
icebp
xor
pusha
aam
outsb
push
mov
add
ror
arpl
adc
test
sub
jmp
pusha
jecxz
sbb
ja
push
add
pop
adc
add
lods
cmpsb
orb
cli
and
leave
sahf
test
imul
cwtl
iret
adc
mov
mov
movsb
adc
mov
xchg
xor
sub
adc
and
add
mov
jmp
movsl
inc
das
cli
adc
inc
fimuls
and
test
fadds
or
sbb
push
movsl
push
lahf
rclb
jmp
add
call
insb
push
fdivs
push
sbb
or
or
push
adcb
jle
dec
push
prefetcht1
pop
je
fadds
add
mov
push
nop
sbb
pop
xor
ret
jp
stos
add
loopne
and
cmp
push
sub
jae
aas
inc
pop
and
inc
jge
dec
lahf
jmp
sbb
test
push
dec
test
adc
ret
adc
mov
sub
cs
das
in
add
inc
push
out
scas
mov
js
rcrb
xchg
nop
mov
xchg
mov
lds
xchg
test
shrb
cmp
std
ja
pop
sbb
sbb
jo
je
inc
in
inc
jno
xor
adcb
fcoms
ljmp
pusha
push
data16
xor
push
and
adc
loopne
jecxz
int3
aad
sub
ds
mov
and
imul
sub
and
adc
mov
ret
xchg
jnp
jge
lods
rclb
lods
in
or
rcll
xor
mov
push
xchg
dec
movsl
add
mov
or
inc
std
inc
dec
mov
dec
adc
cltd
mov
loopne
scas
ret
lea
lods
fcompl
cwtl
inc
mov
test
js
stos
jae
mov
pop
push
xorb
inc
cmpsl
lret
imul
jle
int
pop
pushf
xchg
cmp
filds
gs
xchg
xchg
movsl
mov
dec
mov
xchg
jp
sbb
jmp
or
int3
pop
shlb
outsl
inc
gs
sub
and
movsb
lea
cmp
add
xchg
movsb
xor
mov
dec
clc
ret
lods
xor
rol
mov
fwait
std
add
adc
es
push
xor
hlt
nop
les
sbb
push
cmp
data16
addb
test
sbb
cmc
xchg
pop
mov
adc
outsb
aaa
movsb
int
sarl
mov
nop
and
cmpsl
scas
icebp
es
popf
aaa
out
mov
jb
sbbl
cmp
xchg
push
dec
outsl
xor
js
mov
arpl
xorl
dec
dec
nop
sub
and
dec
ljmp
imul
lahf
mov
jle
rcrb
shl
adc
and
jnp
cwtl
fisubl
jnp
or
and
pop
pop
rolb
adc
sbb
jb
movsb
aam
xchg
popf
xchg
pusha
popf
cs
inc
xor
push
rorb
inc
test
outsb
fbld
xor
push
test
pusha
pop
sti
aas
rclb
sub
arpl
or
popf
aad
pop
xor
or
not
sti
push
xchg
inc
js
mov
or
pop
and
dec
or
orb
test
adc
ds
iret
push
inc
xchg
sub
xchg
cmp
aam
movsl
scas
or
nop
xor
mov
push
popf
sub
popa
jo
sahf
xlat
inc
mov
pusha
inc
ret
push
or
or
add
mov
icebp
lods
mul
xchg
sbb
cmpsl
test
cmpsl
pop
andl
unpcklps
aas
and
pop
pusha
mov
sbb
mov
xor
insl
xlat
push
mov
mov
cmp
dec
mov
inc
ret
jbe
mov
sub
inc
loop
f2xm1
scas
push
stos
nop
sub
sbb
sti
sub
pop
xor
imul
movsb
push
fcom
test
sub
or
lods
adc
fs
imul
push
mov
or
daa
pop
lcall
pop
mov
sub
insb
pop
and
pusha
inc
dec
xchg
hlt
jo
inc
shl
push
movsb
inc
cmpsb
xchg
ficompl
pop
and
seta
jo
std
and
aaa
arpl
nop
mov
loope
mov
xchg
mov
mov
les
cmpsl
ret
and
adc
adc
incb
jecxz
jmp
inc
cmp
inc
mov
jmp
icebp
adc
mov
dec
pop
popa
pop
cmp
clc
mov
jo
sbb
test
iret
mov
jge
cmpsl
xor
jmp
outsl
pop
xor
xorb
fistps
push
adc
les
sbb
loopne
scas
or
xchg
jbe
sbb
xchg
cmp
or
xchg
test
push
inc
std
insb
fildl
fwait
sub
out
out
and
cltd
aas
pop
pop
pusha
cmp
xor
test
pop
mov
aas
pop
cmp
ret
lret
cli
adc
mov
outsb
add
mov
sub
lds
in
and
jmp
mov
outsl
mov
xor
adcl
xchg
inc
cwtl
imul
fidivrl
mov
push
cs
pusha
dec
lods
adc
bound
or
div
sbb
lcall
or
mov
sahf
arpl
idivl
aas
and
pushf
sbb
cld
mov
push
jmp
roll
ja
ret
xchg
lds
iret
dec
xor
addl
sbb
and
dec
sub
dec
xchg
and
xlat
out
cmpsl
maxps
jne
and
or
lahf
xor
xor
sbb
adc
aaa
mov
xorl
or
adc
dec
cmc
fwait
stos
rorb
pushf
or
ja
mov
sub
test
lea
dec
aam
mov
int
mov
leave
repz
push
mov
xchg
shll
lret
les
cmp
push
lds
xlat
xor
lock
pop
lea
cmp
icebp
adc
mov
adc
inc
mov
or
or
pop
adc
out
lods
scas
mov
adc
inc
cltd
in
xchg
arpl
testl
dec
into
fdivrs
enter
lods
pop
push
xor
inc
scas
cmp
sub
add
push
xchg
jbe
or
mov
xchg
addl
dec
jecxz
sti
push
fwait
insl
jge
andl
push
inc
icebp
sub
pop
pop
mov
mov
call
jbe
inc
cmp
ja
xchg
adc
dec
adc
xor
jmp
or
xchg
aad
add
push
setg
mov
nop
jle
jg
loopne
and
jns
std
lret
dec
adc
dec
xorl
sbb
sbb
cs
cld
pop
inc
adc
loopne
add
sub
or
inc
rorl
hlt
cli
pop
xchg
mov
mov
ret
insl
movsl
pop
dec
cmp
les
pop
inc
xchg
or
sub
ret
xor
mov
push
dec
lds
and
add
inc
mov
subb
inc
cmp
push
das
jno
ds
add
outsb
inc
pop
add
adc
or
scas
add
and
and
nop
sbb
cmp
xchg
inc
inc
mov
test
xchg
gs
jmp
xchg
out
mov
dec
or
dec
xor
and
push
inc
aaa
inc
aam
addb
in
push
stc
push
mov
or
or
popa
lea
and
add
sbb
popa
inc
xor
jae
mov
cltd
dec
adc
sub
dec
js
and
dec
xchg
xchg
aad
pop
dec
out
je
aaa
sub
xor
sub
inc
inc
fsubs
popa
arpl
lods
mov
ss
xchg
push
dec
pop
test
mov
push
dec
dec
test
jbe
rol
inc
xchg
mov
ret
lcall
popa
fiadds
cmp
adc
inc
mov
lahf
cmpb
push
push
int
scas
add
pop
icebp
xchg
dec
dec
push
sbb
fwait
sub
adc
xor
dec
fldt
mov
pop
nop
inc
sub
mov
mov
outsl
cmp
lret
jne
out
sub
out
jo
xor
mov
and
loopne
loopne
adcb
cmp
jo
xchg
andl
movsb
lret
cmp
mov
inc
xor
stos
ret
lret
pop
insl
and
or
mov
push
sbb
ret
or
add
fstl
push
mov
jmp
inc
test
aas
mov
add
pop
add
or
pop
sub
sbb
cltd
icebp
mov
adc
or
mov
aas
out
loopne
pusha
arpl
cmp
mov
loop
mov
sbb
push
mov
ljmp
lods
cmp
insl
add
pop
pop
ret
push
pusha
scas
js
fwait
repnz
sub
mov
mov
xchg
xlat
sbb
out
ret
xchg
mov
adc
nop
xchg
mov
std
sub
dec
xor
push
aas
fldl
add
fwait
dec
mov
loopne
sub
out
sbb
add
rolb
adc
ja
and
mov
test
cmp
adc
addr16
xchg
jo
sbb
xchg
xor
lods
or
dec
or
sub
mov
jl
mov
dec
sahf
pop
mov
adc
out
sbb
into
orb
out
mov
jb
loopne
pop
inc
repnz
pop
dec
xor
add
push
xchg
adc
dec
fldenv
push
inc
out
sub
cmp
or
mov
or
mov
and
adc
or
inc
sub
sub
and
and
lods
pushf
lcall
out
add
jp
test
and
por
mov
stc
push
inc
inc
xchg
or
out
gs
subb
push
jns
or
icebp
jne
push
insb
sbb
xlat
scas
sbb
or
mov
adc
jle
test
dec
or
iret
cmp
mov
add
movsb
and
and
and
rcl
mov
test
xorb
dec
push
enter
lahf
adcl
inc
mov
loop
movsb
mov
subb
push
notb
ljmp
sub
ljmp
testl
push
jp
sbb
jo
mov
xchg
ret
mov
jae
adc
mov
movsb
or
push
fisubl
sahf
aaa
jne
mov
push
outsb
add
xchg
loop
js
xchg
sbb
jbe
insl
inc
outsb
xor
imulb
repnz
adc
push
dec
push
mov
sbb
and
imul
jmp
pop
xlat
rcll
ror
pop
dec
ja
outsb
fildll
notl
inc
lret
shlb
or
add
mov
ss
call
sbb
js
jae
aas
mov
xchg
aaa
rclb
outsb
cmpsl
push
cmp
add
add
mov
push
add
xor
xchg
scas
pop
add
fidivrs
movb
mov
dec
add
rolb
cmp
pop
lret
mov
xor
sub
xchg
jbe
pop
cmpsl
movsb
adc
and
stos
cmp
add
in
sub
out
inc
push
and
sbb
and
mov
push
ljmp
and
xchg
inc
or
sub
push
xchg
inc
xchg
pop
test
addl
ss
dec
rolb
pop
dec
mov
daa
xchg
stc
loopne
jnp
jns
dec
and
lea
adc
ja
sbb
dec
ds
or
ja
xchg
scas
xchg
push
mov
pop
adc
hlt
faddl
rorl
add
push
cmpsb
ljmp
lret
inc
test
scas
cmc
sahf
pop
inc
in
dec
dec
adc
dec
loop
mov
cmpb
dec
xor
idivl
cwtl
jle
push
scas
or
add
mov
insb
adc
cmpsl
push
and
adc
and
sbb
shll
jge
cli
jecxz
cwtl
andb
ja
jae
cmp
jo
add
lock
dec
push
xchg
movsb
and
inc
cmp
js
mov
push
lods
pop
mov
rolb
adc
movsl
int3
addr16
imul
xchg
xor
jl
shrb
cmp
es
pusha
sub
xor
mov
imul
test
and
pop
je
test
adc
inc
cmpsl
dec
mov
stos
or
mov
mov
inc
outsl
sbb
stos
dec
cwtl
adc
xchg
add
xchg
fnsave
es
push
ja
lret
nop
xchg
pop
popf
mov
inc
dec
inc
neg
or
or
rclb
lahf
jmp
add
add
xchg
inc
xor
mov
sbb
inc
push
mov
lods
dec
out
adc
inc
cmp
add
and
cmp
sbb
cmp
mov
mov
mov
pop
push
or
nop
lods
nop
sbb
pop
sarb
push
cmp
dec
lock
xorb
aad
imul
or
pop
ja
xchg
mov
mov
and
lret
mov
cmp
imul
orb
sti
loopne
rclb
sahf
mov
lret
stos
push
sbb
pop
adc
mov
push
push
negl
popf
mov
jge
lret
mov
mov
and
mov
push
sahf
fnsave
xchg
push
lock
movsb
sbb
dec
adc
das
sub
fwait
rcll
sub
lret
fstl
jmp
fucomi
rcll
and
cltd
insl
orb
inc
mov
push
mov
or
inc
movsl
add
aam
loopne
aas
xlat
mov
ffree
mov
out
or
mov
sahf
adc
push
dec
call
pusha
and
sbb
lret
stos
out
add
inc
jmp
dec
pop
lock
pop
shr
jecxz
addb
push
jnp
fidivs
pop
fnstsw
sbb
arpl
dec
ja
and
sbb
dec
xor
in
sahf
add
cmp
jno
dec
ja
cmp
jle
out
out
mov
mov
mov
dec
nop
inc
pop
insb
push
lock
xlat
out
xchg
pop
xchg
mov
dec
adcb
sbb
push
loopne
or
or
xchg
out
xchg
shll
icebp
loopne
sub
add
outsb
inc
pop
adc
movsl
cld
sbb
faddp
je
jmp
xor
adc
add
adc
or
jo
push
dec
mov
lcall
mov
leave
stos
scas
fidivs
insl
imul
loopne
and
mov
xlat
fwait
jecxz
imul
int3
cmp
or
add
test
inc
repz
lret
pop
arpl
add
mov
and
loope
gs
mov
sbb
movsl
jnp
repz
xchg
out
data16
inc
mov
mov
add
add
int3
inc
mov
loopne
mov
sbb
shl
or
movsb
and
mov
or
sub
out
mov
inc
or
pop
loop
ret
ret
dec
enter
pop
mov
and
xchg
or
mov
push
push
or
inc
fdivrs
call
lock
sbb
push
nop
orb
jl
sub
sti
stc
add
imul
or
mov
mov
repnz
dec
lret
add
mov
pop
ret
repz
pop
lahf
andb
in
add
pop
negb
dec
daa
mov
or
fs
add
sbb
jle
out
pop
fwait
adc
fimull
decb
mov
mov
and
pop
cmp
loope
popw
push
je
lret
xchg
ret
push
jae
add
repz
jbe
sub
rol
adc
jno
je
jne
mov
cmp
or
das
xchg
xor
adc
or
mov
andb
adc
mov
dec
shlb
cwtl
mov
dec
inc
jbe
lock
mov
sub
andb
in
lahf
nop
jnp
jb
gs
push
fsubrl
xchg
push
add
sub
mov
movsb
scas
jb
inc
lea
das
ret
daa
jno
pop
pop
xchg
cs
test
inc
inc
mov
jae
popa
or
mov
jo
and
jle
fwait
push
fisttpl
jmp
aas
mov
dec
xchg
dec
push
inc
or
out
jmp
or
inc
mov
aam
push
dec
aaa
je
or
pop
mov
xchg
aaa
push
fcoml
sbb
and
push
or
dec
aaa
xor
push
cmp
xchg
cmpsb
and
pop
mov
add
test
cmp
jp
xor
call
sbb
mov
mov
cmp
pop
pop
cmp
ljmp
test
adc
cmp
jnp
sbb
xchg
lret
popf
pop
imul
mov
add
mov
jnp
ss
imul
sbb
mov
mov
add
inc
cmp
mov
xchg
mov
pop
shlb
mov
sbb
add
mov
jecxz
out
or
or
add
xor
mov
or
xchg
push
jo
xorb
icebp
jbe
mov
inc
nop
rcll
mov
pop
scas
ss
mov
xor
addl
fsubrp
movsb
fadd
push
mov
cmpsb
adc
pusha
add
sub
int
cmp
sahf
lret
lahf
adc
pop
add
sub
mov
mov
sarb
hlt
stos
jmp
sbb
lods
push
cltd
push
mov
add
cmp
cmp
dec
hlt
sahf
jno
inc
shrl
mov
loope
xchg
mov
roll
mov
mov
in
loopne
rorl
test
test
push
and
fadd
mov
mov
sbb
jns
fiaddl
mov
cmp
mov
mov
in
mov
add
jg
push
sub
mov
lret
enter
add
mov
dec
cmpsl
dec
ret
rcr
sbb
pop
cwtl
inc
pushf
and
cmpsb
or
bound
insb
cmpl
xchg
cltd
sbb
mov
inc
out
rcll
and
inc
test
cld
jo
mov
mov
scas
mov
inc
or
sbb
push
cli
pop
lahf
lahf
xor
sub
inc
ja
insl
push
stos
and
ljmp
dec
push
pop
mov
popf
aam
ljmp
test
inc
sbb
inc
cwtl
fbstp
cmc
lret
sbb
lods
cmp
push
in
dec
jmp
pusha
loope
xchg
sub
cltd
jbe
inc
sti
jle
imul
adc
and
pusha
aaa
pop
pushf
not
xchg
mov
xchg
sub
fidivs
lock
popf
dec
sbb
insl
fwait
pop
or
lods
outsl
imul
lods
xchg
aaa
jno
mov
dec
jnp
lahf
imul
cmp
xor
fldenv
jns
aas
or
add
pop
mov
faddl
sbb
jb
jb
clc
xchg
mov
mov
mov
mov
cltd
adc
inc
mov
add
mov
insl
in
inc
add
push
dec
sbb
incl
cmp
divl
iret
xor
ffreep
xor
inc
mov
and
pop
pop
das
imul
inc
leave
mov
enter
jne
jmp
xchg
mov
xor
aas
insl
sbb
mov
add
cmp
std
int3
add
inc
mov
mov
lods
std
or
adc
mov
stos
mov
add
insb
jl
ret
add
or
add
clc
mov
scas
xchg
sub
repz
dec
mov
scas
xor
jae
cmpb
jb
imul
jge
fwait
add
cmp
add
dec
push
mov
mov
dec
push
adc
push
sbb
push
pop
repnz
jp
subl
push
outsb
dec
call
aas
sub
or
mov
cwtl
xchg
idiv
sbb
mov
mov
push
and
push
loopne
mov
mov
inc
mov
not
sbb
mov
and
mov
loop
roll
jecxz
pop
shl
cmp
adc
popf
xchg
mov
push
pop
cmp
sub
xchg
daa
gs
jge
popf
adc
jnp
mov
cmpsl
not
jecxz
inc
dec
pusha
movl
in
pop
pop
jle
or
outsb
fldenv
mov
push
andw
add
cmp
dec
xor
stc
loop
sub
aad
mov
ret
cmp
mov
insb
fists
cmp
pop
adc
or
jg
sub
inc
and
jo
ja
dec
repnz
les
mov
gs
bound
inc
pop
repz
xchg
sub
jmp
cs
ficomps
addl
fsubp
rcr
lods
cmp
insb
mov
stos
sub
cmp
pop
and
push
mov
mov
aad
or
lcall
je
ljmp
mov
push
ds
jo
js
and
loop
outsb
cmp
pushf
mov
jl
inc
mov
push
mov
and
xchg
xlat
repz
jo
add
loop
ret
pusha
mov
les
dec
mov
mov
xchg
push
cmp
mov
out
mov
jecxz
ret
loopne
jmp
lds
mov
cmp
pop
sbb
arpl
ljmp
adc
lock
jmp
pop
sub
sbb
out
loopne
adcl
outsl
arpl
dec
repz
pop
fstpt
shlb
or
aaa
jb
fmuls
cmp
lock
xchg
mov
bound
dec
jp
int3
out
ret
add
shll
stos
or
mov
jnp
pusha
mov
add
xchg
lea
inc
xchg
cli
or
jle
movsb
loope
roll
xchg
loope
sbb
mov
jmp
cmp
rcr
sarl
rcrb
fwait
xor
jne
add
sbb
arpl
push
loope
push
pop
sbb
sub
xchg
add
ret
dec
xor
cmp
mov
call
pop
inc
lret
mov
imul
es
rcrl
shlb
gs
sub
ss
mov
dec
lcall
jo
cmpsl
dec
icebp
xchg
ret
xchg
dec
test
sbb
or
add
mov
push
sahf
add
divl
add
and
sti
xchg
pop
movsl
lock
lret
sub
pop
loopne
push
fnstcw
push
pop
fisubrl
jns
scas
jb
mov
loopne
les
aaa
jecxz
pop
xchg
xchg
in
lea
int3
test
mov
add
aad
jno
jl
js
lret
mov
add
sub
push
and
mov
sbb
dec
mov
sbb
ja
imul
push
out
mov
push
pop
imul
sti
loope
sub
pop
xor
push
arpl
lds
sub
pop
test
or
cwtl
add
push
mov
mov
sbb
in
test
jno
popa
dec
incl
xor
mov
cmpsb
push
jb
mov
jno,pn
xchg
pop
lahf
addr16
pop
sbb
adc
mov
jo
and
xorl
inc
jge
and
sbb
rep
loop
cmp
jmp
sbb
lret
lods
jge
arpl
movzwl
inc
testl
arpl
dec
in
cmpsl
adc
mov
aam
push
icebp
test
inc
and
cmp
cmp
xor
jnp
mov
jmp
dec
sub
or
int
adc
das
in
inc
sti
mov
push
xor
bound
xchg
push
out
inc
add
dec
lahf
mov
mov
push
sbb
call
mov
scas
sbb
add
int
sbb
pop
cwtl
adc
jnp
push
push
mov
fadd
loopne
adc
mov
cmp
xor
movsb
mov
shll
adc
movsl
popf
stos
push
pop
ret
shll
loope
mov
into
cmc
mov
ss
adc
sbb
cmp
ret
lret
xor
xchg
test
mov
cmp
pop
xchg
mov
jnp
fdivl
adc
xchg
push
cmpsl
xor
cltd
faddl
xor
addr16
ja
popf
pop
pop
sbb
sbb
lds
or
cltd
add
scas
jecxz
lahf
into
add
or
mov
lds
pop
lret
outsb
out
mov
mov
push
jnp
scas
pop
rolb
sub
cmp
push
jecxz
dec
scas
push
enter
jecxz
jb
xor
xor
fdivrl
adc
and
imul
inc
shl
shll
sbb
inc
mov
ja
jb
cli
dec
inc
stos
mov
lock
fisubl
rolb
jmp
push
negb
ret
lods
dec
mov
sbb
mov
ret
xor
push
adc
hlt
test
iret
mov
fldcw
jge
push
jne
sbbl
loope
ret
inc
in
xchg
sarb
jmp
dec
pop
shll
xchg
sbb
aaa
hlt
xlat
decl
adc
jnp
getsec
divl
mov
dec
mov
jmp
inc
add
mov
cmp
inc
sub
mov
adc
adc
and
xchg
mov
popa
loop
daa
ljmp
inc
pop
xor
out
mov
inc
shl
mov
mov
or
push
adc
insb
cmpsl
subl
inc
add
fidivs
sbb
inc
in
xorl
mov
arpl
sti
mov
mov
shl
stc
mov
sti
mov
and
pushl
xchg
aam
pop
pop
add
dec
mov
mov
filds
std
fxch
xor
mov
out
jmp
mov
mov
xor
pop
and
cmp
fsts
dec
mov
out
out
or
xor
cmp
sub
or
pop
lea
lahf
push
mul
stos
out
sub
sbb
out
sub
sti
std
and
sbb
mov
loope
stos
pusha
pop
jne
enter
sbb
jnp
pop
in
push
stos
iret
sbb
xor
add
addl
mov
int3
adc
add
xor
fcomi
xchg
push
push
add
add
xchg
push
daa
movsl
mov
test
bound
js
fisubrs
std
addr16
jge
xlat
xor
sbb
bound
icebp
fcomp
sahf
adc
icebp
push
subl
or
dec
add
insb
leave
pop
rorb
fxch
fcmovnu
popf
sbb
jns
push
cmpsl
push
push
xchg
lret
cld
rorb
pop
fildl
adc
sbbl
mov
push
mov
jge
popa
dec
mov
add
lods
adc
pop
push
jmp
out
sbb
mov
imul
add
mov
arpl
outsl
add
mov
mov
cli
sub
add
lods
mov
sub
push
dec
ret
mov
daa
sub
jp
fisttpll
jnp
js
pop
xchg
imul
aad
mov
lods
ja
std
sub
adc
lods
xlat
inc
ret
lahf
sub
cltd
ret
daa
jnp
jno
mov
ja
add
cmp
or
repnz
cmp
dec
mov
je
xlat
mov
out
xor
mull
rclb
xchg
xlat
xor
lods
push
fcmovu
scas
ret
mov
cmp
cmp
mov
cmp
mov
movsl
jns
mov
pop
and
xchg
add
fs
push
mov
xlat
mov
dec
add
popf
adcl
adc
push
imul
sub
inc
movsl
and
std
xchg
lock
sarb
jle
xor
mov
pmullw
push
leave
jecxz
loopne
popf
sti
sbb
add
scas
int
mov
sub
add
ja
test
sub
jbe
push
lods
cli
arpl
xchg
pop
push
imul
daa
or
popf
xchg
movsl
push
add
aaa
inc
xchg
mov
negl
popa
inc
add
aam
mov
stos
mov
stc
lods
mov
dec
adc
mov
pop
sub
xor
inc
and
sub
sbb
sbb
xor
mov
imul
add
add
pop
or
int3
mov
and
lcall
ljmp
mov
push
jne
adc
fwait
mov
xorl
xchg
sub
cmp
sub
inc
jae
les
in
lods
sub
xor
dec
aam
adc
add
push
sub
or
jns
pop
js
push
dec
inc
push
call
clts
add
ror
inc
push
and
das
inc
test
or
pop
mov
mov
in
cmp
test
sbb
mov
mov
sbb
mov
das
std
pop
add
lods
leave
rclb
or
push
inc
repz
adc
dec
xlat
or
sub
test
repnz
arpl
push
xchg
jge
leave
sub
push
orl
dec
push
mov
sbb
xchg
dec
mov
lcall
test
xchg
mov
cs
sbb
sbb
push
pop
pop
sbb
xchg
jmp
and
vhsubps
inc
jecxz
xor
fldt
inc
add
lret
adc
test
add
xchg
sti
rolb
lods
jne
jno
inc
or
sub
loope
jmp
jae
test
shll
or
inc
add
push
lods
scas
mov
sti
xchg
rorb
sub
mov
test
cltd
fistpl
cmp
imul
xor
data16
cmp
add
sub
loopne
jp
mov
push
cltd
xchg
add
inc
cmpsl
mov
xor
xor
mov
stos
imul
data16
jbe
adcl
bound
push
pop
ret
pop
pop
sub
repnz
test
push
pop
dec
adc
pop
xchg
pop
repz
pop
test
aas
pushf
or
add
mov
mov
inc
mov
aad
mov
push
lahf
sub
stos
sub
scas
test
sub
and
xchg
pop
inc
add
inc
movl
add
mov
stos
xlat
stc
test
dec
clc
and
loop
push
or
xchg
sti
lock
push
and
fwait
sar
mov
cwtl
int
outsb
and
fdivs
aas
test
out
push
lods
dec
fsubrs
pop
lahf
cmp
xlat
inc
pusha
mov
mov
out
cmpsb
adc
aam
ja,pt
and
push
pop
sahf
inc
test
andb
cltd
mov
and
pop
or
iret
stos
dec
add
add
dec
roll
jo
call
push
fdivs
lret
jne
sbb
pop
sbb
lret
xor
out
lock
cmpsb
out
lods
cmp
nop
inc
dec
push
sub
or
cmp
add
lret
test
jmp
je
divb
in
inc
cmp
sti
cmp
in
push
shlb
xor
or
xchg
cmp
imul
dec
in
cmp
mov
pop
loope
xchg
fst
imul
pop
pop
call
pop
imul
je
sahf
mov
sbb
call
daa
std
sbb
add
mov
fs
and
pushf
inc
mov
sub
lock
aad
sub
pop
pop
lret
jecxz
push
ret
popf
sbb
xor
mov
test
arpl
sub
xor
mov
and
stc
in
and
and
xchg
add
roll
push
xchg
xchg
adc
inc
pop
sbbb
adc
and
mov
jmp
popa
mov
leave
cmp
mov
sbb
dec
mov
pop
into
and
cmp
dec
cmpl
or
mov
mov
inc
jg
dec
subl
orl
add
and
js
sub
inc
xlat
xchg
test
xchg
fcoml
mov
pop
pop
rcrb
sub
int3
aaa
idivl
or
repz
inc
loopne
jecxz
and
sbb
jl
stos
daa
cmp
jb
hlt
loopne
mov
inc
es
xchg
jae
and
push
mov
bound
cld
sbb
es
mov
cmp
sub
or
sbb
testb
mov
scas
aam
sbb
insl
iret
sub
mov
adc
mov
lret
add
xlat
pop
pop
pop
push
pop
std
cmp
push
andl
scas
repz
js
or
pop
repnz
imul
xchg
es
lock
push
adc
inc
pop
and
fucomip
cmp
mov
sbb
scas
add
or
movsb
dec
inc
daa
jnp
mov
gs
or
outsl
sbb
ja
sbb
xor
mov
adc
adc
xchg
imul
in
sub
sbb
repnz
cld
and
je
xlat
mov
movsl
xchg
popa
sub
int3
das
and
leave
scas
nop
loopne
add
jo
or
shlb
jne
scas
adc
add
mov
rorb
cmp
in
scas
notl
lret
dec
push
cmp
loopne
mov
mov
push
mov
jg
lds
jp
mov
fnstenv
jne
jecxz
add
dec
pop
push
sbb
movsb
mov
fistpl
mov
movsl
jo
lahf
movsl
push
mov
loope
cmp
jno
test
loope
subl
in
lods
push
adc
loope
cmp
dec
gs
loope
call
stos
mov
rclb
mov
cltd
jnp
push
xor
pop
into
shr
xchg
xchg
dec
sbb
xchg
adc
movsl
test
cmp
bound
adc
dec
fs
jnp
jecxz
aam
inc
cmp
js
jbe
mov
arpl
mov
mov
jno
incl
jb
in
ja
add
sub
push
in
mov
pop
repnz
setno
mov
xchg
out
notl
iret
dec
pop
jnp
dec
repz
xor
add
inc
jo
mov
or
and
pop
and
stos
adcb
inc
imul
sub
popa
push
fisubrl
inc
inc
add
push
fildl
push
mov
xor
dec
push
inc
pusha
sub
rcll
or
gs
pop
dec
mov
nopl
pop
imul
shll
sub
push
xor
insb
add
add
loop
in
add
out
outsl
test
xor
idivl
mov
or
imul
or
ja
cmp
out
add
in
ror
mov
adc
add
movsl
jns
and
cmp
push
cmp
addr16
ja
jae
add
cmp
and
jbe
fmulp
add
mov
or
mov
add
ds
mov
jmp
sbb
fstpt
add
pop
fistl
into
push
pop
adc
divl
pop
sbb
add
lods
or
sub
lds
adc
pop
cmp
in
fidivrs
in
enter
imull
mov
and
jg
jnp
dec
adc
in
leave
or
xor
sbb
aas
je
and
mov
dec
or
or
out
jne
cmp
or
mov
ljmp
jne
and
cld
jle
push
jg
ss
fnsave
insl
xor
adc
jle
or
xor
and
jnp
pop
adc
or
in
pop
mov
jecxz
push
movsl
daa
sti
int3
add
popf
sub
pop
rorl
test
mov
rorb
stos
ret
fcomi
cltd
fwait
push
testl
loope
mov
or
pop
in
sub
push
jge
arpl
ja
in
scas
add
inc
and
push
cmp
outsl
and
int
and
lods
or
aas
pop
or
push
push
mov
int3
and
addr16
jge
cltd
int
out
or
sbb
fnstcw
xor
sub
xchg
je
adc
imull
jle
inc
sub
add
push
mov
add
lahf
or
sti
hlt
jmp
icebp
imull
add
or
xor
pop
in
pop
xchg
testl
jmp
adc
push
nop
cmpb
into
xchg
mov
cmpsl
jl
int
inc
dec
or
or
daa
xor
push
add
add
adc
jecxz
add
les
rolb
ja
out
fcomi
in
add
add
push
add
add
les
add
adc
idivl
pop
pop
push
adc
mov
xchg
pop
movsb
jle
add
push
jnp
xlat
dec
lock
loopne
lcall
cmp
adc
in
scas
stos
pusha
dec
nop
push
aam
mov
xchg
aad
fcompl
cli
in
xchg
loopne
cmpsb
xchg
pop
test
sbb
sahf
add
add
out
sarb
xor
cmp
pop
xlat
add
adcb
add
insb
fcoms
rolb
mov
fwait
stos
and
xor
into
mov
xor
cld
jle
in
cmc
in
sbb
jmp
or
sbb
sbb
jecxz
mov
push
pusha
out
aaa
mov
adc
and
pop
and
push
xchg
out
jo
or
add
pop
cli
xchg
push
mov
out
sbb
pop
repz
inc
mov
and
dec
sbbl
fdivs
mov
fs
lcall
mov
es
xchg
lret
sbb
decb
mov
imul
adc
mov
mov
push
inc
mov
in
mov
cmpsb
loope
sahf
add
ljmp
ds
mov
mov
cld
pushf
lret
add
cld
subl
adc
inc
cs
inc
subl
cs
pop
ljmp
cli
dec
xor
notb
and
jle
mov
mov
je
or
repz
bnd
xor
outsb
fwait
push
loopne
out
movsb
fmull
repnz
popf
je
push
insb
jp
and
movsl
shlb
adc
ret
push
imul
dec
loopne
add
in
test
sub
je
nop
push
addb
sbb
fisubrl
aaa
pushf
ss
in
je
xor
ret
lahf
int3
or
sub
mov
dec
mov
pop
push
loopne
jmp
test
orb
mov
and
lods
xchg
mov
in
mov
insb
cwtl
ret
add
shr
loope
test
ljmp
icebp
lock
push
lds
cwtl
push
daa
pusha
sbb
dec
adc
icebp
mov
mov
loop
jmp
mov
dec
into
das
push
jne
mov
mov
jp
mov
rol
inc
int3
xchg
sar
test
push
or
fwait
fiadds
sarl
sarb
fcoms
xchg
pop
mov
ss
clc
les
jb
jne
lds
pop
xchg
sbb
stos
bound
leave
mov
mov
jge
stos
jnp
pop
stos
mov
sbb
inc
dec
outsl
xor
sbbb
ljmp
adc
sbb
sbbb
cli
mov
add
or
call
rcl
xor
out
add
pop
in
pop
daa
outsb
or
lcall
arpl
adc
xchg
push
jmp
mov
push
mov
shll
orb
rcll
out
hlt
add
push
aaa
imul
je
lods
fisubs
jo
in
sbb
or
insl
mov
add
add
pop
push
mov
shlb
mov
xchg
mov
jno
inc
fcmovbe
fstps
loopne
test
into
sbb
pop
ja
rol
sub
vmovups
pop
loopne
add
mov
cmp
push
mov
mov
mov
jno
rcll
jb
and
inc
inc
imul
add
dec
sbb
add
xlat
inc
ljmp
cld
xor
daa
cmp
es
push
sbb
xchg
jp
lahf
jb
jo
aaa
mov
dec
adc
or
and
add
imul
adc
add
pop
daa
mov
adc
call
or
push
add
pop
scas
scas
push
jo
lret
out
mov
pop
cltd
out
mov
push
jl
dec
outsb
aad
dec
mov
push
inc
push
str
pop
fadds
inc
push
push
insb
add
pop
shll
mov
sbb
mov
xchg
mov
cmp
iret
js
adcl
in
mov
add
scas
rcl
jle
ret
jg
pop
adc
push
lods
push
out
pop
xchg
stos
xchg
add
cmp
pop
decb
mov
in
jbe
fsubrl
outsl
add
into
nop
mov
push
inc
fidivl
incl
xchg
cmp
hlt
push
mov
mov
mov
pop
insb
inc
insb
fildll
push
out
pop
data16
jle
xchg
sub
and
adc
and
dec
out
cltd
and
inc
stos
add
xchg
icebp
xor
lods
or
pusha
pop
sub
mov
dec
call
subb
adc
mulb
adc
jo
xchg
push
sub
ss
xorb
movups
pop
iret
nop
shlb
jae
popf
pop
lret
jae
ret
add
test
movsl
pop
imul
xchg
aas
mov
mov
aad
push
sbb
out
shlb
xchg
out
or
mov
mov
scas
sbbb
lock
mov
cmp
add
rcr
lret
sahf
sbb
mov
add
lea
clc
inc
add
cmp
jne
mov
bound
popf
inc
adc
ds
data16
pop
xchg
sbb
out
add
sbb
imul
adc
xchg
pop
inc
push
sbb
mov
lea
mov
sti
jp
xlat
xor
lock
pop
dec
push
cmpsb
movl
xchg
lea
sbb
push
jbe
jo
lock
push
inc
mov
test
mov
movsb
add
mov
test
orb
sbb
fstps
iret
inc
sub
mov
cld
dec
add
movsb
cmp
xchg
sbb
push
push
jge
jmp
mov
dec
push
dec
paddsb
fadds
xor
fstpl
ss
jg
xor
add
ret
push
add
push
xchg
push
idivb
movsl
xchg
scas
mov
adc
pop
lock
popa
cs
rclb
mov
fdivs
and
jne
aaa
jle
rol
jnp
dec
sub
dec
mov
ja
add
or
cmpsl
sbb
lods
clc
into
inc
aam
or
das
dec
lock
cmp
pop
popf
mov
fisttpl
xchg
and
out
sub
clc
rorl
adc
or
lds
stos
jo
add
push
and
cld
fidivrs
outsb
adc
sbb
repnz
stos
sbb
adc
in
add
xorb
je
movsl
fisubrl
pop
out
add
rcrb
ss
js
je
mov
push
mov
or
fisubrs
jns
testb
mov
mov
sub
or
adc
std
mov
jp
pop
mov
mov
sbb
ja
mov
fcmovbe
movsl
mov
xor
sub
push
dec
cmp
clc
push
cmpsb
imul
mov
pop
xchg
loopne
add
pop
jl
sbb
cli
or
icebp
jb
fstps
dec
shr
test
inc
pop
jl
add
add
cmp
adc
imul
nop
push
pop
xchg
mov
inc
mov
sub
loopne
sub
jbe
jecxz
fbld
add
pop
test
add
jnp
xor
in
fisubrl
or
movsb
adc
mov
cmpsl
cmpsb
adc
mov
sub
xchg
lods
pusha
cld
sbb
push
push
mov
popf
cld
pop
sarb
bnd
jo
or
movsb
dec
adc
insb
mov
cs
ljmp
dec
cwtl
call
in
push
jp
mov
mov
inc
lea
xlat
pushf
cmp
lcall
push
xchg
jecxz
jmp
inc
out
push
pop
mov
lret
notb
fcomps
call
dec
mov
aam
xchg
mov
mov
shrl
addr16
pop
cmp
sub
fdivl
cmp
or
icebp
pop
jo
adc
cmp
scas
test
ret
add
lcall
fisubl
cs
ret
sub
repnz
xor
jb
push
sbb
or
fsubr
fnsave
adc
in
enter
and
mov
subl
and
xlat
mov
cmpsb
push
stos
or
andl
xor
in
push
shrl
testb
fbstp
xchg
lock
fdiv
mov
lcall
adc
lahf
and
lock
es
clc
push
jl
int
mov
xchg
cmp
stc
and
ss
push
lods
test
mov
loop
fisubl
pop
mov
add
lock
icebp
adc
sub
ret
call
fstpl
lods
add
pushl
insl
add
loop
push
mov
pop
leave
into
xchg
xor
js
cs
movsb
out
iret
push
insb
fmull
fcom
sub
mov
mov
in
xchg
lods
push
jmp
loop
fistpll
add
scas
xor
test
sbbb
mov
lret
cld
lret
mov
or
testl
sub
pop
mov
sub
fisttpl
js
fiadds
test
and
stos
mov
scas
jle
push
hlt
xchg
pop
rcll
or
movsb
push
adcl
add
mov
mov
insb
push
jno
pop
clc
and
lret
sbb
push
sahf
stc
scas
lods
inc
dec
hlt
repz
inc
inc
testl
pusha
jge
add
stc
adcb
push
loopne
and
test
cld
pop
mov
roll
std
fsts
rorb
fiaddl
add
mov
add
mov
and
cld
imul
stos
xor
sahf
xchg
lock
push
ljmp
daa
xchg
aam
xchg
push
mov
inc
int3
cld
ljmp
sub
ljmp
jmp
ret
inc
lea
int
xor
and
dec
sbb
xchg
mov
push
push
lds
cmp
mov
push
les
dec
add
pop
adc
jbe
incl
insb
aad
cwtl
push
sub
loopne
test
aad
sarb
push
orb
in
push
mov
push
push
lret
call
inc
or
pushf
daa
test
or
adc
inc
loopne
cld
filds
pop
add
movsl
pop
xchg
aam
push
pop
sbb
mov
add
sbb
rcr
call
adc
cli
fs
loope
xchg
cmp
or
xchg
stos
adc
outsb
adc
add
std
push
shll
int3
dec
jg
fidivl
aam
adc
cltd
out
movsbl
lods
into
mov
outsb
sbb
cmp
or
subb
push
aas
icebp
ret
adc
pop
or
sbb
push
dec
out
fsubs
mov
cwtl
xor
mov
arpl
test
xchg
test
push
stos
push
or
push
ret
dec
shlb
ret
mov
scas
arpl
andb
push
rclb
pop
xchg
mov
sbb
adc
into
or
or
popf
mov
mov
imul
add
repnz
or
inc
lods
sub
mov
aas
adc
mov
cmpsl
inc
jmp
mov
dec
dec
shlb
mov
mov
iret
mov
inc
push
andl
out
je
loopne
pop
mov
in
sbb
aas
aas
out
push
stos
push
push
jl
sbb
jo
pop
pusha
sub
cwtl
shll
inc
fwait
fs
adc
xchg
mov
pop
rol
outsb
adc
jo
negb
lods
cmp
nop
shrb
lret
xchg
and
adc
sbb
insl
pop
lock
sub
and
call
push
jae
and
and
jno
adc
or
pop
mov
ret
pop
dec
cmp
cmpsl
jnp
mov
cwtl
adc
pusha
cmp
orb
inc
xor
pop
sarb
ret
jno
pop
sub
ds
adc
inc
xchg
lds
cs
xchg
xor
lret
into
add
je
inc
cmpsb
pushf
rorb
enter
inc
cmc
adc
flds
jecxz
movl
pop
dec
inc
cmp
dec
repz
push
add
sar
test
jb
lock
add
sbb
pop
test
xchg
pop
test
lock
sbbb
push
outsb
mov
add
jp
jo
pop
addb
fidivs
mov
scas
mov
xor
xchg
push
fisubs
loop
mov
add
gs
arpl
mov
lock
cmc
xorb
xchg
cmp
int
xchg
lods
mov
dec
out
xor
stos
push
push
call
pop
fcmovb
pop
mov
outsb
mov
pushf
outsb
mov
bound
push
in
jb
add
mov
xchg
mov
jge
insb
xchg
xor
in
popa
push
xor
sub
movl
push
pop
rclb
jns
rcll
add
jl
adc
scas
into
xor
cmp
sbb
push
loop
adc
push
pop
pop
lock
adc
fs
jno
je
jl
xchg
orb
jecxz
jbe
ja
sti
insl
xor
dec
fwait
and
adc
inc
sub
or
dec
pop
cmp
rclb
inc
add
mov
sub
mov
mov
inc
pusha
jl
inc
stos
in
loope
dec
push
adc
movsb
add
jge
mov
push
dec
dec
jge
aaa
jae
mov
ja
mov
xchg
jge
xor
in
filds
adc
pop
test
push
vrsqrtps
clc
stos
xchg
pop
mov
mov
or
and
mov
cmp
pop
rcrb
cmp
xchg
test
cli
fs
jg
adc
xor
test
test
iret
inc
insb
and
lds
adc
or
cld
sti
mov
xor
adc
ret
call
sub
mov
jp
xor
int3
push
mov
stos
je
add
fsts
fbld
mov
add
orb
sarb
loope
adc
add
rcl
mov
fmuls
jg
cmp
push
stos
add
or
push
adc
xor
xor
cmp
push
outsl
push
gs
sbb
mov
nop
xlat
out
add
xor
cmpsl
loopne
mov
cltd
push
cmc
mov
mov
add
or
stos
lock
jo
outsb
outsb
cmc
stos
push
mov
mov
les
pop
call
add
insb
ljmp
int3
sub
scas
stc
out
xor
aad
or
cmp
ss
sahf
imul
xor
inc
xchg
cmpsb
xlat
fst
rclb
mov
push
insl
rorb
andb
in
adc
aad
sub
orl
adc
cmp
pop
fstp
xor
loop
and
and
or
adc
addl
adc
dec
test
cld
clc
sbb
loope
hlt
jp
enter
rcrl
roll
or
fnsave
sub
mov
insb
sub
xchg
sub
add
test
fcompl
jp
mov
aam
test
fcomi
push
sahf
insb
mov
jg
mov
fildl
xchg
xchg
add
xchg
data16
inc
xchg
or
cli
nop
xchg
fdivs
imul
pusha
dec
fldenv
fcoms
jp
fisttpl
pop
add
pop
add
sbb
in
mov
sbb
sub
add
mov
popf
or
fcmovnbe
insl
adc
or
loopne
pop
dec
fdivp
pop
cmc
jo
int
les
fisttpll
shrl
xlat
test
addr16
movsb
mov
pop
push
ds
enter
push
andb
out
inc
add
fcomp
ljmp
jecxz
je
xchg
push
es
popf
out
sahf
stos
popa
inc
sti
cmpsl
aas
mov
fiaddl
std
mov
add
aam
or
push
ljmp
iret
fsubs
mov
xor
push
sbbb
add
dec
or
popa
jbe
dec
insb
push
fcmovne
mov
pop
das
xchg
aas
imul
faddl
int3
add
test
pop
adc
int
jo
push
or
pop
mov
ja
jmp
addl
inc
push
enter
lock
dec
loop
mov
mov
das
cmp
mov
push
shrd
outsb
js
out
movsl
jl
rolb
xchg
ljmp
outsb
and
add
xchg
xchg
paddsw
mov
jecxz
inc
pop
dec
and
or
fsubl
inc
jo
xchg
stos
mov
fildl
lcall
xchg
jmp
pop
aaa
stos
cli
js
test
hlt
js
sub
dec
inc
mov
iret
add
push
in
add
mov
sub
and
andl
les
sbb
std
lcall
ror
notb
dec
rol
jbe
pop
test
and
xchg
mov
loope
das
fldenv
fidivrl
mov
mov
cmp
jmp
add
scas
int3
lret
mov
iret
mov
ja
push
fistl
std
or
or
mov
xchg
mov
rcrl
hlt
mov
mov
ljmp
and
inc
fnsave
fidivs
adc
add
cmp
insb
cmpl
hlt
xchg
cwtl
or
cmp
shlb
mov
or
lcall
outsb
popl
pslld
dec
cli
or
fwait
subl
int3
jge
lock
mov
testl
int3
push
in
lds
inc
cmpsb
xchg
stc
or
add
add
sub
sub
add
fadds
add
xchg
mul
mov
imul
int
sbb
sbb
mov
add
fsub
cmpl
ficomps
fistps
scas
sub
in
sarb
mov
xchg
je
jecxz
pop
out
or
mov
inc
jbe
add
push
cmp
sbb
scas
shlb
pop
pusha
jl
lods
or
int3
add
fwait
mov
jbe
outsl
stos
pop
pop
mov
adc
sbb
cmp
adc
mov
fimuls
jmp
scas
dec
dec
push
xorb
xlat
dec
adc
push
sub
dec
call
xor
packsswb
mov
pop
lahf
aad
decl
movsb
push
add
leave
sbb
add
xlat
pop
xchg
jmp
ss
jb
sbb
sub
mov
js
jo
fcoms
inc
push
inc
or
mov
popf
push
and
cwtl
inc
push
lock
lods
cmp
ljmp
lcall
or
cmp
mov
cmp
ljmp
jne
mov
pop
andl
dec
pop
xor
test
int3
cmpsl
roll
insl
add
aaa
mov
imul
mov
call
or
pop
dec
adc
test
dec
test
mov
outsl
dec
or
cs
push
add
mov
and
sbbb
mov
fsubrs
call
mov
jo
pop
loope
cli
push
xor
add
push
xchg
mov
imul
add
es
std
adc
mov
mov
ss
xor
cs
xchg
out
mov
adc
pop
mov
adc
je
sar
adc
stc
hlt
sahf
add
and
lock
aaa
test
cli
dec
filds
out
test
fidivrl
jbe
inc
push
jb
ret
jnp
stos
mov
cmp
cmpsb
outsb
inc
inc
push
ja
lods
cmp
cmpsb
add
xor
sub
jb
mov
adc
clc
ficomps
push
mov
push
or
jle
fidivrl
push
mov
sbb
push
stos
outsl
mov
add
cmp
out
xor
mov
fsts
cmp
dec
mov
mov
ss
adc
rcrb
scas
loopne
mov
xor
mov
out
pop
or
lahf
aam
rcr
movsl
cmpsb
das
inc
jl
adc
stos
cmp
add
or
pop
rorb
push
mov
add
pop
es
inc
sbb
dec
mov
lea
mov
movsb
lds
and
sub
or
jge
mov
stc
fildl
enter
cmp
sub
stos
lock
sahf
call
out
dec
cld
xor
add
dec
adc
shlb
and
addr16
lea
shrb
outsb
jnp
sub
bound
or
test
imul
in
shlb
inc
cld
enter
and
lret
dec
inc
inc
add
and
ja
popa
push
iret
push
sarb
push
or
mov
inc
sbb
popl
push
jno
in
add
rolb
mov
cmpsl
add
xchg
loope
xor
roll
cmp
cwtl
jecxz
xchg
test
ljmp
dec
mov
sub
outsb
dec
mov
test
ljmp
xchg
jo
add
shlb
es
insl
cmpsb
mov
mov
test
into
out
push
sbb
xchg
add
hlt
mov
cld
mov
pop
jne
bnd
inc
fmuls
mov
dec
xchg
int3
sub
call
sbb
js
sbb
mov
jl
cmp
xor
shll
jbe
iret
or
outsb
push
insb
push
jae
sti
inc
cmp
xchg
or
fisubs
jb
sbb
xchg
data16
mov
pop
or
sbb
insb
push
outsl
xor
loopne
pop
test
data16
jp
int3
imul
xlat
rcrb
cld
aas
inc
and
fildl
cmp
adc
ljmp
test
xchg
jge
lcall
mov
jb
and
sbb
movsb
mov
setno
ljmp
push
loopne
js
jne
mov
push
jbe
inc
inc
push
ljmp
xor
or
in
adc
out
inc
inc
scas
mov
fnstsw
or
cwtl
mov
mov
jmp
jb
mov
cmpsl
aad
outsb
loope
cmc
or
and
xor
mov
cs
jmp
ljmp
shrb
ds
subb
push
es
jmp
ja
sub
into
aad
mov
jle
mov
repz
inc
aaa
dec
and
mov
and
dec
arpl
and
inc
adc
push
sbb
mov
sarb
add
xor
push
cld
lea
push
js
out
sbb
jb
pushf
push
and
rclb
in
dec
xor
ljmp
lret
mov
cmp
fmull
sbb
enter
popf
ds
sbb
mov
add
mov
out
bound
sahf
mov
add
lea
xor
int
orl
jns
push
pop
ret
adc
jno
inc
adc
cmp
jmp
scas
pop
lods
in
int3
push
movsl
orb
js
call
cmp
int3
mov
fildl
cld
jp
push
xchg
mov
mov
jecxz
mov
adc
xor
inc
mov
mov
lret
add
pop
and
lods
mov
jb
mov
jmp
adc
ss
xchg
and
data16
lea
sbb
sub
mov
jnp
hlt
push
pop
xor
dec
jo
movsb
fimull
imul
mov
mov
push
dec
pop
jno
cmp
in
adc
out
mov
lahf
pop
rcrl
add
aas
xor
push
add
and
push
negb
in
jl
pop
cs
push
loopne
in
call
push
sbb
leave
pushf
mov
shll
cwtl
add
sbb
in
cmp
subl
mov
aam
push
sub
fdiv
and
les
ret
pop
xchg
movsl
enter
sahf
xchg
dec
das
or
xor
xor
hlt
inc
stos
mov
mov
adc
scas
pop
pop
ja
dec
or
xchg
adc
dec
sbb
in
xor
add
lds
test
call
or
fs
int3
call
stos
cmc
loopne
pushl
or
mov
xchg
dec
insl
jp
pop
stos
fs
and
test
or
pop
xchg
ret
xchg
and
cmpl
incl
sbb
or
loop
add
sbb
imulb
push
aas
mov
out
push
inc
jnp
pop
popl
js
jo
sti
cmpsb
imul
test
sub
test
mov
mov
ja
adc
push
mov
cld
loopne
stos
aaa
lods
sbb
push
aad
pop
mov
inc
mov
xor
movsb
inc
ret
mulb
test
inc
jae
test
lock
lods
cwtl
push
outsl
pop
mov
pop
clc
shl
and
mov
cmp
pop
loopne
push
mov
dec
pop
and
cli
inc
or
stos
js
dec
les
out
mov
ficompl
rcrl
or
in
je
daa
cmp
or
cmpsb
rcll
repz
and
rcrb
clc
aaa
andl
popa
push
or
outsb
jbe
or
nop
dec
sub
dec
testb
add
les
fbstp
add
push
inc
push
mov
loop
and
loopne
mov
data16
mov
fidivs
pop
cmc
mov
pop
aas
push
js
and
mov
loop
or
sub
xchg
sbb
push
and
jmp
jae
push
or
or
adc
lcall
sub
push
inc
outsb
out
adc
sbb
add
mov
pop
loope
div
test
sub
push
sbb
test
mov
ss
adc
cmpsb
ss
stos
mov
push
push
pop
sbb
xor
sbb
call
jg
jno
add
push
cli
cmpsb
jle
inc
add
loopne
push
mov
andb
add
shlb
data16
les
mov
push
fnstsw
mov
testb
cmp
or
call
pop
adc
call
imul
or
repz
sub
and
pop
in
mov
add
fbstp
pop
pop
push
push
cmp
push
cmp
push
outsw
cmp
outsl
fwait
outsl
and
or
push
outsb
jge
out
jmp
imul
or
ja
sbb
adc
lcall
jne
mull
ret
adc
jmp
insb
idivb
es
out
jmp
mull
mov
lahf
adcl
aas
shlb
mov
inc
insl
or
xchg
sti
mov
inc
insl
inc
sub
cmovno
aaa
cmp
or
mov
cwtl
sub
daa
jp
fisubrs
aas
cmp
shlb
hlt
das
add
sub
sub
arpl
ret
out
mov
dec
insb
leave
insb
insb
out
add
add
insb
das
fisubrs
aas
adc
jmp
ja
out
or
es
adc
pushf
cmp
add
or
sbb
xor
arpl
in
ud0
xchg
dec
mov
lret
bound
bound
ja
pop
mov
and
xor
push
jmp
sti
out
out
jmp
mov
lahf
push
mov
data16
inc
popa
fnstcw
sbb
popa
and
adc
data16
inc
lret
or
fidivrs
pusha
aad
inc
pop
out
cmp
sbb
sub
xor
mov
or
or
add
and
out
pop
pusha
jnp
lahf
dec
stos
mov
cmp
adc
or
adc
addr16
mov
and
or
fists
out
addr16
lret
ret
sti
cs
push
mov
insb
divb
mov
jae
pop
cmp
int3
and
lret
sub
mov
jmp
xor
pop
push
lahf
mov
ja
mov
gs
or
mov
cmp
jne
fisttpl
fwait
dec
scas
in
push
push
sahf
cwtl
fs
or
push
jg
stc
cmp
sbb
add
aaa
or
fs
or
mov
adc
xor
jnp
jnp
xor
mov
xor
pop
xlat
pop
outsb
fucomp
or
sti
jge
aaa
inc
or
xor
add
movsl
addr16
pop
jge
jmp
jp
sub
sbb
in
sti
ds
pusha
pop
sti
push
mov
xchg
xchg
inc
scas
or
jbe
cltd
or
pop
fsub
push
lcall
jmp
mov
or
out
call
fdiv
jge
divl
sbb
xchg
scas
dec
xor
add
sbb
add
dec
js
cwtl
ja
jmp
lret
daa
orl
push
pop
sbb
jg
hlt
repz
fnsave
sub
cmp
mov
sub
jmp
fmul
fsubp
inc
or
nop
imul
or
jle
or
pop
jle
and
push
jmp
inc
xor
or
mov
jge
jle
and
push
rorb
or
das
xor
aaa
in
aaa
filds
jge
shr
mov
adc
xchg
popa
neg
push
into
cmpsl
jl,pt
push
jl
jl
into
sti
mov
xor
or
add
in
mov
and
jne
iret
lock
adc
rcrl
add
pop
repz
xchg
mov
jae
or
loopne
ja
filds
or
jae
fst
jns
sub
lret
and
aaa
jecxz
sti
jae
or
xchg
stos
and
jb
out
pusha
es
jb
jb
arpl
cs
cmp
das
push
jb
or
xchg
mov
movsl
sub
lcall
sbb
jno
in
push
dec
mov
xor
sbb
aaa
sbb
daa
fbstp
jmp
jecxz
pop
divl
pushl
and
aaa
fidivrs
ja
pop
jo
or
sub
or
inc
call
ja
pop
sub
sub
cmp
popf
sbb
push
insb
jg
fs
lahf
popa
push
inc
mov
adc
dec
pop
insl
sub
or
iret
push
mov
pop
imul
outsl
or
inc
lret
nop
push
sbb
in
imul
lret
ljmp
or
or
and
add
mov
and
jge
jne
pop
sub
std
push
mov
and
mov
dec
outsl
fdivrp
ret
popa
sahf
ss
inc
sub
loopne
inc
pop
cli
hlt
add
insb
cmpsb
repnz
cli
cs
add
outsl
mov
add
imul
fsubrs
xor
pop
mov
add
jecxz
push
or
adc
mov
push
sbb
adc
xchg
addb
std
leave
lret
into
add
sti
aam
sbb
inc
add
stc
dec
test
dec
dec
rolb
sbb
hlt
and
jb
and
jl
mov
mov
mov
pusha
adc
xor
xchg
mov
adc
fwait
je
jle
cli
shl
lock
pop
roll
sahf
jge
psubb
fldl
fcomps
cs
in
mov
rcr
jge,pt
mov
fcomp
sbb
fmuls
xor
xchg
pop
push
push
cmp
fimuls
nop
push
or
sbb
repnz
stos
test
push
call
aaa
negl
mov
jno
sbb
js
outsl
and
in
ficomps
or
sub
dec
pop
insb
scas
roll
pop
das
pop
cmpsb
hlt
js
mov
inc
sub
in
stc
inc
inc
add
push
data16
jne
lret
das
add
inc
sub
add
add
ja
add
xor
push
out
pop
hlt
clc
movsl
inc
push
das
xchg
loopne
mov
or
or
pusha
sub
sbb
fwait
adc
and
ja
add
jg
sbb
pop
push
test
enter
pop
inc
push
testl
dec
pop
adcb
lods
inc
jl
ret
stc
ret
jo
jae
xlat
out
push
add
loopne
jbe
aaa
std
add
inc
xlat
hlt
ss
dec
lds
subb
add
pop
add
add
add
insl
sub
push
mov
nop
mov
or
add
sub
addb
add
ret
mov
jg
push
test
jl
aam
mov
pop
jp
je
das
add
pop
cld
pusha
cltd
pop
cld
add
mov
xchg
scas
jle
add
jge
aas
push
lret
add
inc
mov
xchg
jmp
lock
les
dec
inc
lcall
pop
push
pop
jne
cmpsb
stc
pop
sub
pop
imull
cmp
push
or
arpl
call
in
shl
sbb
mov
aas
add
fmuls
rcll
inc
ja
sub
cwtl
dec
pusha
repz
test
cwtl
xchg
inc
jecxz
mov
push
push
imul
dec
cmp
in
jne
insl
add
mov
mov
sub
pop
ret
xor
pop
pusha
pop
int
adc
repz
add
sbb
mov
and
data16
lahf
ja
js
dec
aaa
stos
sub
fsts
jbe
fimull
jg
mov
or
sbb
mov
jno
divb
or
inc
roll
nop
mov
stos
and
in
mov
ja
and
mov
inc
adc
mov
les
enter
sbb
adc
out
sub
in
fisttpl
int3
nop
stc
aas
sbb
add
xor
repz
jl
or
dec
jno
jb
fisubl
sbb
decb
inc
imul
daa
int3
test
ja
mov
out
out
arpl
fldenv
icebp
push
mov
subb
pop
inc
xchg
cwtl
add
mov
in
mov
mov
jnp
movsl
rolb
sub
cld
insl
outsl
adc
outsl
js
roll
ja
xchg
mov
cwtl
inc
test
add
ror
push
sbb
sub
mov
std
lahf
das
mov
cltd
and
push
in
inc
jo
imul
mov
jbe
incl
in
or
shll
mov
cltd
ret
cmp
adc
aaa
xchg
mov
fwait
cmpsb
ret
imul
add
outsb
fdivs
and
mov
out
lods
push
outsl
stos
outsl
xchg
push
mov
fdivp
fmuls
or
add
js
lret
scas
and
test
dec
movsl
rcr
ficompl
and
negl
xor
xor
das
aam
rcll
fiaddl
xchg
lock
fwait
or
mov
imul
mov
mov
in
cmp
jnp
jo
sub
call
test
sti
mov
lahf
sub
push
push
dec
subl
icebp
cmpsb
dec
add
insb
shrb
add
subl
adcl
in
mov
xor
sub
dec
inc
imul
pop
mov
adc
inc
jae
out
fstp
scas
jae
mov
mov
pusha
cmp
mov
adc
imul
adcb
cmp
add
add
and
add
lea
lea
scas
les
mov
mov
out
dec
fwait
inc
lods
cs
and
loope
jge
mov
ret
cmp
shll
xchg
jmp
jg
jmp
jl
mov
dec
xor
ficoms
mov
sub
ja
pushf
jecxz
add
sahf
add
xchg
adc
push
add
ja
add
jp
mov
dec
cmp
jge
lock
sub
lds
nop
mov
es
inc
xchg
imul
js
iret
movsl
or
das
orl
jnp
les
mov
push
imul
push
xchg
clc
clc
pop
rorl
push
jae
mov
lock
push
mov
inc
popf
sbbl
cmp
mov
inc
adc
pop
out
sbb
jbe
pop
push
sbb
xchg
dec
insl
mov
cs
js
dec
outsl
jbe
sti
movsl
jns
dec
jo
dec
sbb
mov
sbb
testb
dec
sub
mov
add
iret
sbb
aaa
pop
push
popw
je
iret
dec
inc
xor
inc
jl
xlat
lret
fistps
xlat
pop
pop
outsl
jnp
push
xchg
cs
xor
xor
mov
imull
pushw
outsl
pop
bound
push
mov
mov
out
test
int3
insl
inc
xlat
add
jno
xchg
jge
cmp
sub
fwait
testl
dec
ficoms
mov
push
xor
pop
mov
or
fcomi
std
test
jl
inc
pop
or
dec
sbb
xor
rorb
mov
mov
push
insl
movsb
dec
jne
xchg
add
cltd
add
mov
fldt
fldcw
pop
add
cmp
jns
xlat
lcall
inc
enter
test
sbb
push
pusha
mov
cld
sub
bound
lods
stos
pop
add
pop
add
outsl
in
xchg
sbb
loope
cmp
scas
xor
fisubrl
jo
inc
cmp
inc
sub
fiaddl
pop
inc
sarb
scas
push
sbb
mov
pop
xchg
mov
shlb
popa
mov
sbb
adc
lds
fnstenv
in
mov
mov
jno
rclb
std
pop
mov
jge
stos
popl
out
insl
jno
mov
add
imulb
andl
mov
and
add
inc
mov
mov
adc
lcall
cwtl
inc
cs
push
xchg
outsb
mov
add
jnp
mov
xor
iret
mov
dec
push
sbb
mov
and
mov
xlat
lods
cmp
mov
roll
or
ja
cmpsb
pop
lret
mov
jae
fnstenv
roll
lahf
jge
mov
leave
dec
adc
les
sub
mov
xchg
xor
das
ret
push
loope
sub
add
push
call
or
ja
scas
push
jmp
mov
push
lods
das
out
addr16
adc
adc
push
push
popa
push
jae
or
push
jno
sub
or
push
ja
jecxz
sub
in
pop
pop
mov
imul
jno
imul
pop
pop
cmp
insl
sbb
xchg
jge
in
mov
xchg
dec
popa
iret
jno
fwait
adc
jno
pop
stos
or
jmp
jno
test
push
ja
sub
call
enter
das
mulb
mov
jne
lret
test
sub
push
in
icebp
xchg
fsubrp
test
adc
jno
push
mov
loope
and
out
add
xchg
dec
add
mov
lods
imul
or
or
jae
sub
jge
mov
fwait
mov
sbb
rcrl
aaa
pop
sti
or
cmp
ret
mov
std
rolb
imul
cs
pop
cmp
add
cmp
test
lods
arpl
push
daa
aaa
sub
dec
jg
in
jnp
sub
movsb
mov
sbb
inc
pop
in
jno
adc
mull
call
sbb
cld
ja
fnstsw
outsl
jo
bound
push
ljmp
test
incl
add
jecxz
push
push
dec
lods
leave
cwtl
pop
dec
jecxz
leave
dec
jno
adc
test
mov
out
lea
xor
jns
mov
aaa
jae
pop
sub
adc
pop
sti
lea
lea
notl
fistl
mov
int3
loope
add
sub
or
outsl
sub
xchg
aam
outsb
adc
scas
aam
jnp
adc
mov
add
paddb
sbb
mov
sbb
mov
xchg
pop
test
js
dec
lahf
nopl
xchg
addr16
jle
dec
mov
push
sub
fcmovnu
xor
or
or
mov
sub
test
ret
sub
sub
push
add
fs
dec
mov
or
cmp
xlat
mov
adc
cmpsb
jecxz
pop
sbb
dec
xchg
add
inc
repz
mov
jg
xchg
mov
adc
adc
xor
popf
sbb
mov
sbbb
xor
outsl
mov
dec
js
ret
insb
pop
mov
add
xor
or
sub
fs
call
sub
call
sub
dec
pop
int
outsl
scas
rorl
mov
pop
xor
fs
jp
bound
cmpsl
mov
pop
mov
mov
ret
fistpl
pusha
js
enter
adc
pusha
sbb
movsl
jnp
test
pop
inc
push
mov
movsl
xlat
stos
sbb
xor
xor
jnp
add
outsb
sarb
or
jne
jae
dec
lahf
jno
dec
fdivl
ja
lock
xlat
pop
arpl
sbb
daa
xor
aas
cmp
mov
sbb
shrl
ret
addb
jae
fisttpl
ja
sti
dec
rorl
mov
add
jecxz
jg
sub
pop
jp
mov
xor
movsl
fldenvs
jo
xlat
fs
stos
xchg
sahf
push
aaa
daa
push
jg
mov
adcl
inc
rorl
sti
mov
test
out
out
dec
inc
scas
mov
sub
iret
arpl
dec
sbbl
mov
sti
cmp
xor
sbb
lods
negl
jg
popf
ja
ffree
jb
xor
nop
pop
pop
jno
jg
add
add
adc
sbb
movsb
inc
inc
loope
mov
add
dec
and
pop
cmp
xor
dec
cltd
lret
dec
popa
ret
das
mov
in
popa
dec
pop
shr
push
fs
push
arpl
sti
adc
iret
mov
inc
gs
sti
movsl
subl
lds
idivb
xchg
pop
stos
popa
cmp
push
addl
and
ret
xchg
push
sahf
dec
dec
sub
outsl
pop
sarb
dec
push
loope
cmpsl
outsb
inc
mov
pop
mov
out
adc
dec
lea
mov
daa
mov
jbe
dec
pop
adc
das
nop
pop
sbb
pop
xlat
mov
sti
loopne
aaa
aas
jae
add
fistps
dec
fstp
pop
dec
outsl
in
in
out
dec
inc
push
mov
std
add
loope
jb
mov
repnz
dec
lea
dec
adc
xchg
add
pop
mov
adc
jp
in
imul
sbb
mov
pushf
out
movsl
sub
out
loope
add
cmp
stos
lds
push
dec
mov
mov
popf
int
dec
jnp
add
push
stos
or
repnz
sarb
fistl
mov
sti
shrl
dec
jmp
ret
lret
sbb
enter
inc
popa
flds
sarl
test
add
jmp
pusha
aam
mov
adc
push
divl
cwtl
fnsave
cmp
or
jae
push
mov
cmc
fcoml
addb
or
or
inc
jns
test
xor
mov
or
cld
pop
dec
push
push
add
add
arpl
fs
mov
fbstp
sub
dec
cmp
std
addl
adcl
lds
mov
push
mov
or
sbb
sub
and
adc
ret
leave
push
imul
xchg
rol
xor
pop
and
sbb
cmpsl
or
fwait
jae
xorl
push
add
add
xor
adc
int
shll
xchg
xor
sbb
mov
lea
sub
xchg
inc
pop
push
dec
mov
sti
dec
dec
cmp
push
adc
testl
popl
xchg
popf
xchg
leave
mov
mov
jge
mov
sarl
mov
mov
inc
mov
xchg
mov
adc
outsl
push
cltd
xor
pop
dec
jnp
dec
mov
les
adc
faddl
inc
out
adc
adc
loopne
dec
and
cmc
cmp
fiadds
pushl
jmp
add
les
pop
adc
mov
xchg
pusha
fstpl
ljmp
loope
clc
push
popw
cli
dec
dec
adc
movsl
mov
mov
inc
addl
cmp
add
and
ret
add
gs
dec
dec
mov
mov
and
loope
jmp
xlat
push
sbb
dec
push
pop
gs
jle
sub
push
push
sbb
pop
add
push
ret
inc
sub
or
movsl
pop
sub
push
rcrl
mov
aam
stc
jno
adc
sbb
pop
pop
or
inc
pop
xchg
mov
iret
push
ljmp
jno
ret
sub
test
jmp
aad
push
cmc
outsb
lods
cmp
sub
pop
push
push
in
and
jmp
dec
mov
push
lcall
xorb
out
jge
sub
mov
fnsave
scas
jp
aam
stos
addb
test
mov
cltd
cmpsl
bound
sub
or
jl
xchg
icebp
lock
dec
popl
fisttpl
test
jg
xchg
repz
mov
add
sbb
and
mov
pop
adcb
pop
sub
push
mov
cmp
mov
lahf
push
mov
or
cmp
in
and
mov
lods
pop
fdivrs
adc
mov
push
insl
adc
je
sub
jo
cli
dec
xor
xchg
mov
xlat
subl
sbb
sub
lods
lods
lock
pop
cltd
mov
sub
test
dec
push
fdivs
dec
mov
push
test
push
xchg
dec
repz
and
scas
add
pop
ja
mov
add
insb
bound
cmpsb
sti
test
shrl
mov
or
add
xor
and
mov
sbb
add
dec
repz
mov
insb
mov
call
and
and
cmp
pushf
mov
pusha
es
and
fbstp
pop
adc
and
addl
das
jnp
fadds
inc
icebp
ror
xchg
or
enter
scas
jge
jecxz
decb
xor
imul
mov
jae
ja
sbb
add
add
inc
mov
cmpl
movsl
movsl
mov
into
jne
and
pop
stos
xor
push
dec
dec
sub
out
jb
xor
jae
fwait
lock
nop
or
add
push
pop
sbbb
dec
adc
test
sti
rorl
sti
je
ja
mov
sub
lret
adc
sbb
rcrl
fsts
inc
or
out
push
lock
mov
fisttpl
stos
pop
xchg
test
fwait
inc
imul
jnp
pop
mov
xor
inc
loop
inc
popa
push
add
mov
int3
pop
icebp
outsb
inc
dec
gs
pusha
pop
movsl
inc
pop
and
xor
pusha
add
aaa
push
ja
test
mov
xchg
mov
insl
mov
lea
sub
jmp
test
stos
ja
mov
cmp
iret
mov
or
das
sub
adc
add
test
stos
fidivl
stc
cs
cmp
loopne
hlt
mov
test
add
cmp
ja
loope
jecxz
stos
jns
add
cmp
push
fcomps
cmp
add
jecxz
push
inc
pop
outsl
sbb
loope
nop
je
mov
fmull
pop
popf
jecxz
jnp
adc
mov
mov
xor
add
cmpsl
pop
mov
mov
ja
fidivs
jle
and
sub
sub
pop
and
jmp
mov
fbstp
or
aaa
pop
xlat
stos
xor
xchg
sbb
and
insl
js
add
xchg
repnz
sbb
xchg
sarl
loope
dec
aaa
jno
inc
xor
loope
mov
jecxz
test
ds
and
ret
inc
orl
mov
jae
ret
dec
jo
fisttps
adc
or
xchg
jo
mov
pop
xchg
mov
adc
dec
jae
pop
sarl
and
test
cmpb
inc
pop
xor
outsb
loop
push
mov
add
inc
pusha
popa
cwtl
mov
jecxz
or
xchg
testl
xchg
pop
xor
adc
iret
and
inc
push
push
sbb
ud1
jno
test
xchg
sub
mov
popa
push
inc
or
scas
and
or
mov
ret
jnp
mov
jo
dec
or
leave
jle
lods
adc
or
fcoml
sub
cmpsl
and
shl
mov
dec
shrb
xor
jge
int
dec
adc
adc
mov
mov
movsl
dec
jmp
pushf
or
add
mov
aaa
ret
das
inc
mov
push
mov
add
sub
ljmp
rol
je
lds
adc
jno
inc
or
and
stos
pop
or
pop
sub
pop
xchg
rolb
and
lock
add
xor
adc
andl
stos
mov
inc
insb
insl
in
adc
jo
repz
inc
mov
xor
jne
xlat
rcrl
jae
test
sub
ja
jae
and
or
adc
or
jnp
and
and
ret
lret
dec
inc
sti
jb
add
add
jp
test
pop
or
xchg
ljmp
dec
jecxz
jle
push
ljmp
adc
jne
arpl
call
out
in
push
sub
fistpll
and
loope
push
fdivs
fwait
movsb
push
arpl
mov
mov
addr16
fwait
or
lds
js
leave
inc
push
inc
inc
cmpsb
movsl
push
fwait
loope
sbb
and
ja
jo
imull
mov
in
loop
jge
das
jne
loopne
add
or
inc
lcall
orl
es
xlat
mov
sbb
mov
ret
filds
test
movsl
adc
loop
outsl
jecxz
or
movsb
mov
std
outsb
test
test
aaa
mov
enter
xchg
jg
xchg
fisubs
inc
ja
lahf
das
pop
cltd
inc
addr16
jecxz
pop
push
adc
jns
jle
push
pop
lds
je
sbb
repz
jl
mov
mov
inc
shl
xchg
mov
in
and
sbb
xchg
and
or
sub
mov
xchg
jg
mov
xorl
lret
pop
add
push
mov
into
pop
mov
push
bnd
mov
pop
call
pop
sbb
in
mov
mov
jge
rolb
loop
adc
and
mov
or
test
call
and
jno
loope
xor
add
cs
into
lahf
xor
filds
fldl
sbb
out
mov
js
mov
shlb
mov
jno
icebp
rcl
outsb
pop
stos
jmp
mov
mov
pop
mov
hlt
pop
rcrl
das
sti
cmp
mov
xchg
fldlg2
daa
push
add
or
dec
in
outsb
test
mov
sub
pop
iret
js
sub
das
pop
mov
or
cmp
loopne
lods
adc
jp
aaa
sub
imul
addr16
pop
out
sbb
sub
aad
aaa
dec
test
jne
sub
sub
fwait
cmp
xchg
pop
ja
loop
loopne
jecxz
cmpsl
in
test
cmp
dec
pop
mov
fmull
dec
xchg
and
daa
fcompp
push
arpl
cltd
jns
lret
js
mov
mov
rorb
sbb
or
insl
adc
popf
addr16
jno
insb
adc
jmp
or
mov
cwtl
sahf
sbb
dec
out
cmp
ficoml
xorb
dec
push
fcmovnu
add
cmp
sbb
imul
popf
loope
mov
je
gs
scas
jnp
fldt
arpl
jmp
cmp
addr16
iret
jbe
mov
dec
lret
aas
or
popf
xlat
cmp
iret
rolb
mov
fcoms
jno
negl
in
inc
cltd
dec
add
sti
mov
rcrl
testl
fidivrs
nop
xchg
or
pop
push
dec
cmp
and
xor
sub
mov
call
inc
xchg
or
mov
mov
aaa
test
jnp
ja
pop
cmp
pop
xchg
loop
or
mov
lods
jnp
inc
mov
adc
rol
outsb
lea
nop
lret
adc
test
or
or
pop
or
or
adc
int3
and
cltd
fldl
enter
and
mov
add
push
test
jle
mov
leave
in
leave
jae
or
pop
xor
orl
mov
test
or
pop
mov
xor
aaa
test
jne
mov
sub
cmp
adc
xor
test
adc
sti
inc
xor
sti
or
or
pop
cltd
or
or
lret
add
lret
loopne
popf
lret
inc
push
rol
mov
cmp
fldl
sti
xor
aas
fstpl
jmp
mov
jne
divl
arpl
push
and
inc
inc
aam
sub
in
fnstsw
ret
lahf
add
and
jne
xchg
and
movsl
test
mov
inc
push
int
pop
mov
popf
sbb
jne
loope
pusha
or
outsl
or
ja
add
popf
sbbl
ja
dec
and
xchg
imul
ficoms
lea
adc
std
stos
sbb
sbb
imul
in
jne
or
rcl
adc
pop
inc
popa
sar
lret
pushf
fnstsw
xchg
shlb
or
das
popa
sbb
ljmp
sub
mov
cs
je
js
or
sbb
jp
cmpsl
sbb
push
cmc
sahf
push
add
fdivrl
push
pop
mov
adc
inc
add
idivb
cmpsb
movsb
pop
push
cmp
push
cmp
je
rclb
sbb
dec
sbb
inc
jecxz
mov
ret
xor
pop
sti
mov
ja
sahf
xor
cmp
or
in
scas
idivb
xchg
hlt
fildl
xchg
fmull
mov
cmp
add
ds
je
testl
daa
adc
in
mov
or
dec
push
sub
pslld
mov
aas
and
add
cmpsb
cmp
sbb
mov
and
push
add
push
ss
pop
loopne
sarl
mov
sbb
sub
adc
cs
xchg
mov
daa
pushf
or
pop
adc
mov
or
and
setg
inc
aas
out
pusha
jnp
jg
or
cmp
add
mul
loopne
xor
in
out
sub
imull
xor
cs
sbb
loope
dec
jbe
sbb
cmp
xchg
sbb
jb
pop
and
sub
or
add
popa
icebp
orb
lods
js
add
cs
aas
cltd
inc
sbb
push
push
pop
cmp
cmp
pushf
insb
push
fldenv
mov
cmp
jb
or
xor
jl
movsl
loop
das
mov
adc
add
js
scas
or
shlb
fidivrs
or
mov
jo
mov
pop
xor
loopne
pop
das
add
fidivrs
sbb
sub
pusha
jae
dec
push
and
fimull
push
outsb
and
pop
loope
sub
sbb
push
pop
add
daa
andb
cltd
pop
jnp
aam
sub
adc
sbb
or
mov
ret
push
fsubl
bswap
dec
jno
or
lcall
jmp
and
in
dec
add
call
ds
mov
cmp
inc
and
insl
xlat
aas
imul
loop
in
xor
mov
or
gs
mov
sbb
aas
loope
cmp
rclb
push
gs
ja
cmp
inc
push
roll
jnp
push
das
test
cmp
xchg
imul
fcomps
out
push
sbb
lds
xor
iret
rorl
sbb
and
and
dec
push
ja
sbb
pop
test
div
repnz
roll
loop
ds
xor
rcrb
outsl
mov
mov
inc
adc
stos
js
sub
and
repz
outsb
sbb
add
xor
out
xchg
xor
push
cmpsl
or
fildl
sub
push
cmp
nopl
inc
js
xor
daa
out
dec
xor
jmp
xor
or
sub
cmovnp
mov
xor
mov
cmpsb
sub
mov
or
dec
and
into
mov
pusha
xor
stos
mov
cmp
pop
dec
jo
popf
xchg
shr
add
or
inc
lock
pop
mov
imul
cmp
fistps
sub
cltd
sub
xor
cmp
sub
dec
push
scas
cmpl
jb
rorl
ja
and
cmp
jns
cmp
sbb
push
or
add
je
and
scas
mov
fxch
and
lock
aad
ror
push
enter
nop
or
int
clc
fidivs
mov
cmp
pop
or
sbb
sub
add
adc
dec
pushf
xchg
pop
mov
jo
loope
jecxz
in
shl
mov
or
pusha
pop
pusha
dec
mov
shr
stc
repnz
test
rcrl
fimuls
notb
inc
add
fcompl
sahf
sub
or
sbb
fs
neg
popf
shl
cmp
scas
mov
stc
mulb
cmp
jbe
cmc
inc
hlt
sbb
xor
sbb
sbb
or
out
jb
mov
push
fnstsw
adc
loop
rcll
lret
and
lds
int
outsl
add
pop
out
xchg
add
xlat
inc
sbb
mov
shrb
xchg
pusha
mov
daa
hlt
loope
fisttps
mov
lods
adc
mov
sbb
fdivs
add
pop
push
add
jecxz
add
cmp
inc
jno
out
push
cmp
into
loop
dec
cmp
or
cmp
sbb
or
mov
sbb
push
sbb
or
adc
lock
filds
add
and
adc
dec
loop
or
mov
jae
adc
add
mov
mov
xchg
in
lock
pushf
xchg
add
jns
jp
jo
sbb
fadds
adc
push
jg
mov
cmp
push
jne
lea
sti
stc
scas
int3
bound
sti
xor
aad
xor
std
adc
iret
mov
fimull
add
sbb
sbb
adc
adc
call
dec
fld
or
adc
pop
fstl
adc
add
int
inc
xchg
pop
ljmp
std
std
cli
fs
sbb
fildl
inc
sbb
ljmp
das
leave
sub
flds
repz
sbb
add
jmp
add
add
mov
mov
psubusb
cmpsb
push
push
push
adc
mov
xlat
sub
incl
sti
sub
mov
pop
or
adc
add
nop
cmc
pop
rorl
add
mov
je
cmp
add
or
bound
add
jmp
add
div
jo
or
std
adc
inc
or
test
sub
dec
xorl
add
sbb
jbe
ljmp
adcl
jle
movsl
dec
call
xor
adc
in
adc
aad
cwtl
mov
lods
add
fsts
loope
mov
ljmp
or
sub
imul
inc
std
outsb
rorl
adcl
or
dec
in
push
ds
push
mov
pop
jae
outsl
push
mov
mov
pop
push
add
wbinvd
jns
jno
add
inc
loop
je
pop
ja
cmp
xor
jbe
into
rcll
jne
inc
or
cmp
add
add
outsl
sbb
insl
jae
pusha
addb
add
pop
pop
fisttps
push
adc
lret
sub
xor
mov
pop
inc
push
dec
mov
push
mov
or
or
xchg
nop
adc
mov
mov
test
nop
ds
mov
or
jmp
mov
adc
mov
adc
or
xchg
push
loopne
mov
adc
dec
pop
add
rorb
out
aaa
or
and
sub
sti
xchg
js
mov
std
test
jp
aas
mov
ret
mov
and
xchg
or
pop
lcall
and
mov
orl
out
jb
pop
and
daa
sub
sahf
adc
imul
xlat
and
xchg
add
fwait
mov
adc
sbb
or
add
pop
pextrw
adc
adc
pop
sub
mov
mov
add
stc
test
mov
lahf
loopne
push
cmp
add
test
cmpsl
xchg
shll
cmpsl
pusha
pop
cmp
arpl
mov
pop
adc
jo
imul
loop
inc
mov
add
out
fistl
xchg
sbb
xchg
fildll
add
mov
lods
leave
sti
stc
movsl
jecxz
mov
lcall
mov
inc
xchg
std
xchg
or
adc
ljmp
outsl
aas
xor
ret
cmc
cli
jne
roll
mov
fiadds
xorl
outsl
imul
aas
add
inc
imul
push
not
push
outsb
jecxz
or
adc
inc
mov
data16
fwait
pop
mov
fwait
pusha
fldcw
std
pop
fisubrl
jb
outsl
dec
imul
sub
push
lock
push
cmp
adc
xor
pop
rclb
push
or
jnp
sbb
xchg
imul
pop
pop
movb
adc
call
cmp
js
aad
sub
or
dec
pop
sbb
mov
cwtl
and
or
out
xchg
add
add
cmp
push
stos
or
sub
ds
sub
xchg
sbb
sub
outsl
lock
mov
xor
imulb
adc
rcrl
and
out
insb
mov
jno
sub
nop
test
test
sar
or
das
jge
add
xchg
cmp
jnp
push
mov
pop
adc
jns
imul
or
add
test
jno
cmp
pop
add
mov
inc
ja
aaa
call
push
loope
fsubl
inc
mov
dec
add
rorb
inc
std
sti
mov
xchg
add
dec
sub
rol
adc
punpckhbw
sbb
js
sbb
xchg
push
cmp
sub
pop
pop
push
popa
mov
movsl
or
xor
mov
mov
decb
push
lret
inc
pop
dec
es
and
add
adc
je
imul
push
lods
mov
mov
addl
in
adc
mov
add
adc
mov
fbld
or
insl
or
aad
loope
xor
jg
fiaddl
sbb
out
clc
mov
push
jg
or
cmp
outsl
adc
outsb
lret
ret
lcall
adc
add
xor
jno
loope
roll
jnp
jb
cltd
call
pushf
daa
fwait
pop
adc
imul
iret
and
ljmp
jne
adc
je
daa
rcll
mov
movzwl
dec
dec
adc
ret
mov
inc
sub
or
cwtl
popa
sbb
pop
in
mov
mov
pop
and
add
aas
add
jnp
mov
pop
inc
jnp,pn
pop
mov
inc
mov
sbb
cmp
mov
lea
andb
ds
pusha
adc
lods
inc
mov
add
imul
stos
cmp
jp
imul
outsl
inc
loop
sub
dec
mov
jne
hlt
mov
push
or
push
push
pop
or
jns
add
mov
lea
stos
fwait
stc
dec
adcl
leave
inc
mov
xchg
dec
mov
rcll
cltd
sbb
test
add
aad
jmp
fstpt
push
lods
adc
mov
loope
imul
add
test
lea
xchg
adc
mov
into
pop
mov
add
pop
add
ret
jb
pusha
aad
imul
movsl
cwtl
je
add
mov
lea
aad
repz
cwtl
jo
pop
or
arpl
popa
shl
inc
add
sbb
loope
jo
push
cmc
dec
loope
sbb
dec
adc
xor
mov
es
add
add
andl
cmp
mull
ss
fmull
mov
inc
shrb
inc
jmp
xor
out
fisubl
es
into
inc
mov
mov
ss
adc
lods
jo
sub
pop
push
or
andl
xchg
fucomp
cs
push
cmp
and
dec
stos
addr16
adc
xchg
insb
dec
das
jns
addb
add
dec
jns
sbb
jbe
popf
push
incl
push
test
push
rcrl
xchg
js
ds
mov
mov
in
dec
add
xchg
xor
arpl
dec
fldl
outsl
xor
push
cmp
dec
cmpl
int
cltd
mov
xchg
xor
mov
outsb
push
dec
insl
push
dec
out
cmpsl
stc
iret
gs
aas
lcall
push
and
std
and
sarl
xchg
hlt
sbb
insl
cmp
push
mov
movsl
fbstp
leave
jl
pushf
pop
cmc
add
add
push
push
outsl
jecxz
stos
or
popa
push
ljmp
or
and
xchg
mov
and
scas
jg
cmp
push
push
dec
cwtl
dec
xchg
lock
sarl
mov
aas
or
addl
pop
shlb
xacquire
or
sub
cs
adc
sub
xchg
push
fildl
and
xchg
in
ds
cmp
nop
mov
ss
sahf
stc
mov
adc
cmp
fnsave
fbstp
and
sbb
out
sub
mov
xor
push
cld
icebp
clc
sub
and
sub
pop
or
xchg
inc
hlt
push
pusha
mov
mov
rcl
xor
add
ficomps
inc
adc
dec
adc
sub
add
test
mov
addr16
dec
or
aas
or
cmp
add
jo
ljmp
add
jl
push
arpl
or
sub
sbb
push
push
pushf
and
pop
aas
les
inc
sbb
cmpsl
and
nop
and
ret
mov
add
pop
push
add
adc
insl
and
test
lea
mov
andb
push
adc
push
rol
sub
mov
int
insb
insl
inc
xlat
mov
pusha
sub
mov
or
out
pop
add
pop
or
adc
jbe
or
adc
and
shlb
imull
jno
add
neg
mov
or
fmull
sbb
in
push
xchg
in
inc
pop
in
divl
in
mov
daa
inc
lret
jbe
fiaddl
jecxz
or
cmp
fbld
and
add
pop
in
or
inc
and
inc
js
inc
lahf
xor
and
inc
adc
and
int
loopne
dec
mov
jl
int3
es
mov
icebp
mov
hlt
add
inc
in
out
adc
xchg
push
push
mov
ret
add
and
mov
test
inc
addr16
shlb
jecxz
xor
in
leave
mov
jl
fmuls
or
xor
xchg
mov
add
jecxz
out
pop
pop
aam
subl
das
cs
cs
insb
sbb
add
dec
dec
dec
add
or
or
cli
outsl
push
std
inc
hlt
inc
push
mov
psubusw
popa
push
mov
or
inc
fbld
imul
dec
sub
ds
push
out
add
aas
dec
jno
jns
xchg
mov
dec
xchg
dec
in
lahf
cmp
xchg
xchg
leave
xor
shl
and
outsl
add
jnp
sarl
or
cmpsl
testb
stc
jmp
cmp
pop
sub
mov
pop
add
rolb
add
xor
mov
cmp
push
push
push
or
add
or
mov
mov
dec
std
cmpsb
shll
out
es
fbstp
push
sbb
dec
loopne
sub
dec
sub
lods
das
push
cmp
sbb
test
add
jg
pusha
leave
shl
scas
lods
xchg
push
loope
or
subl
pop
mov
push
aad
mov
pushf
je
pop
jmp
xor
ret
pop
add
push
push
divl
mov
stc
push
arpl
arpl
push
sahf
stos
push
pop
loop
daa
popa
scas
and
addr16
push
pusha
mov
mov
adc
cmp
mov
test
add
mov
sub
inc
dec
jle
add
idivb
jns
add
xor
add
iret
ss
add
push
test
pop
push
push
or
loop
dec
add
insl
les
mov
xchg
aad
mov
dec
int3
push
pop
mov
or
mov
mov
adc
or
ret
xchg
sbbl
push
xchg
mov
and
inc
mov
out
lret
scas
or
sub
xchg
les
push
pop
add
sub
push
mov
fstl
xchg
mov
cmp
fidivl
or
xor
test
jl
push
nop
incl
into
push
add
jbe
das
push
and
das
es
pop
repnz
and
in
and
in
push
add
daa
add
xor
das
es
mov
cmpsb
jbe
ss
inc
inc
ret
daa
and
into
cld
add
dec
aaa
movsl
nop
adc
sub
aas
push
jl
sbb
fdivs
lret
lahf
pushf
fs
hlt
mov
cmp
test
cmp
aaa
in
push
scas
dec
daa
dec
aas
push
lahf
jbe
imul
das
pop
inc
pusha
aaa
jbe
or
testb
dec
mov
leave
das
or
sub
out
aam
aad
adc
xchg
mov
pop
push
jno
mov
ss
pushf
in
in
out
aas
inc
jb
or
out
xlat
icebp
cmp
push
in
cli
cli
aaa
dec
sbb
daa
ret
and
jbe
xchg
les
mov
cmpsl
jbe
addr16
inc
cmp
inc
daa
add
inc
lock
push
add
aam
lds
inc
xchg
push
jnp
outsl
lds
ds
iret
daa
bound
in
sub
and
mov
aas
in
mov
pop
and
and
outsl
or
fmul
getsec
mov
daa
cmpsl
popf
mov
sbb
push
inc
pop
sbb
fucom
and
pop
cmc
imul
jbe
sub
jg
aas
xchg
jl
dec
fistpl
fstps
insl
les
lods
pop
ss
pusha
rorb
push
daa
popa
rcl
jb
daa
movsb
push
aad
ficompl
dec
dec
lods
clc
cmc
aas
mov
mov
dec
adc
les
incb
mov
pop
adc
cmp
das
ret
pop
out
pop
fisubrl
jbe
loop
aas
sub
aaa
and
jbe
jl
jge
sub
jbe
orl
repnz
aas
data16
test
test
cmp
lods
lds
lds
and
aaa
fsub
pop
cli
fsubs
testb
add
loope
add
lds
aaa
jbe
sbbb
das
lret
pushf
insl
jbe
aas
das
leave
bound
jp
adc
test
mov
addr16
lahf
jge
es
xchg
daa
jno
aas
mov
pop
mov
daa
mov
popf
xor
push
xor
popf
fimull
jns
ja
mov
daa
loopne
scas
frstor
dec
sti
es
cmpsb
das
cmp
jbe
aas
mov
jb
dec
mov
aaa
sub
and
lods
xor
dec
int3
aaa
cmc
scas
mov
fwait
scas
data16
insb
mov
adc
mov
adc
sbbb
aaa
fildll
push
inc
scas
in
mov
iret
nop
push
in
aad
xor
fwait
in
sahf
orb
pop
jae
push
pop
aam
mov
cmpsl
ss
out
adc
push
sbb
cmp
jne
lahf
out
insb
lret
rolb
mov
push
adc
mov
inc
inc
dec
pop
mov
sub
fs
adc
and
mov
pop
and
mov
push
in
adc
inc
and
add
mov
sub
sub
test
pop
add
xorl
aas
inc
inc
inc
ror
rolb
add
insb
jae
jb
outsb
inc
xor
jb
je
arpl
add
gs
mov
sbb
and
idiv
mov
jl
pop
dec
jae
inc
inc
push
dec
pop
inc
jns
xor
js
insl
mov
je
jns
gs
inc
gs
jne
mov
inc
pop
xor
pop
aam
add
adc
push
and
pop
push
imul
in
inc
jne
jbe
push
dec
fs
insb
jne
push
lods
sar
outsl
imul
data16
imul
repz
outsb
jne
cmp
movsb
jge
gs
popa
sub
inc
jle
or
popa
bound
or
sub
fdivs
imul
pop
sbb
aam
outsl
jb
adc
outsl
das
mov
fnstenv
cmp
adc
push
outsl
sub
or
imul
push
jb
or
sub
fdivl
xor
imul
ret
inc
mov
clc
bound
addr16
push
fsubl
frstor
mov
push
xchg
push
pop
add
lahf
or
pop
ds
gs
inc
jo
popa
pop
roll
sahf
insb
mov
ja
jge
sbb
inc
jo
dec
adc
jns
mov
sub
pushf
push
push
arpl
mov
cmpsb
mov
and
std
jl
pop
ljmp
jp
repnz
pop
adc
hlt
inc
push
dec
xorb
outsb
imul
cmpl
arpl
dec
push
jbe
fs
pop
push
mov
fisubrl
jb
pop
push
pop
imul
sub
pop
dec
mov
lea
cld
js
xor
jo
push
mov
lds
push
imul
notb
xchg
cwtl
je
dec
out
sub
dec
outsb
jo
hlt
jb
addl
mov
sub
ds
jmp
fs
adc
push
je
dec
adc
mov
cmp
push
push
and
jo
pushf
jb
sub
inc
push
inc
inc
push
jo,pt
cltd
loopne
inc
dec
outsl
stos
inc
mov
inc
jb
push
xor
inc
rclb
inc
jb
and
push
inc
lret
xor
add
xor
enter
test
jbe
stos
fidivl
repz
inc
jno
pop
sbb
lods
mov
lods
lret
jae
pop
icebp
loopne
push
ds
push
ja
arpl
cltd
out
pop
inc
xor
inc
sbb
jns
stos
pop
mov
arpl
lea
mov
add
jo
sbb
std
mov
arpl
pop
ljmp
lds
adc
xor
ljmp
dec
add
add
pop
inc
sub
mov
popl
add
push
daa
aam
or
mov
mov
push
sbbb
pop
add
mulb
fistpl
xor
cmp
jo
mov
cmp
jg
or
lock
stc
push
and
inc
inc
les
es
and
add
push
pusha
inc
inc
push
inc
bound
sub
inc
add
in
fs
inc
rolb
or
inc
jb
add
popa
xor
loopne
or
pusha
add
out
into
div
dec
inc
jae
iret
add
insb
xor
xchg
inc
cwtl
cs
das
lds
xchg
and
add
inc
incl
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
