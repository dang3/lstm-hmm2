push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
push
push
pushl
push
call
and
mov
mov
mov
mov
mov
mov
add
cmp
jp
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
movl
mov
lea
mov
push
call
mov
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
sub
mov
mov
mov
mov
sub
sub
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
add
call
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
sub
mov
mov
sub
cmp
jb
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
cmp
jg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
xor
push
call
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
add
cmp
jae
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
xor
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
call
mov
mov
add
mov
add
mov
mov
mov
mov
call
mov
mov
sub
add
mov
cmp
jl
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
and
mov
mov
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
add
call
mov
mov
mov
sub
mov
mov
sub
mov
mov
or
mov
mov
push
mov
push
call
sbb
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
xorl
mov
mov
push
call
mov
and
or
mov
mov
mov
push
mov
push
call
mov
sub
mov
sub
orl
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
sub
mov
mov
movl
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
add
add
cmp
jb
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
or
mov
sub
mov
sub
add
cmp
jbe
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
or
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
xor
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
xor
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
add
cmp
jbe
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
or
push
call
mov
mov
mov
mov
and
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
orl
mov
mov
mov
push
push
call
mov
mov
mov
mov
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
lea
or
mov
mov
or
mov
mov
adc
mov
call
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
movl
call
mov
mov
sub
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sbb
add
mov
sub
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
adc
mov
mov
mov
mov
mov
mov
mov
or
sub
push
call
mov
mov
add
mov
mov
mov
mov
lea
push
call
mov
mov
mov
add
mov
mov
mov
movl
mov
mov
pushl
call
mov
mov
sub
sub
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
adc
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
xorl
mov
push
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
or
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
orl
push
push
call
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
or
subl
xor
call
mov
mov
add
mov
add
mov
addl
mov
call
mov
mov
sub
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
add
sub
mov
mov
mov
mov
call
mov
mov
mov
or
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
cmp
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
decl
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
and
mov
mov
mov
mov
or
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
or
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
and
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
and
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
adc
cmp
ja
mov
and
mov
mov
mov
mov
mov
add
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
sub
mov
mov
mov
mov
push
call
adc
add
mov
mov
mov
mov
pushl
call
mov
mov
mov
xorl
mov
mov
mov
pushl
call
mov
mov
sub
xor
mov
sub
mov
mov
mov
mov
lea
push
call
mov
add
mov
mov
or
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
pushl
call
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
and
mov
mov
sbb
mov
pushl
call
mov
sub
sub
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
sbb
mov
lea
push
call
sub
sub
mov
subl
mov
mov
push
mov
push
call
mov
mov
mov
sub
cmp
jb
and
mov
mov
mov
mov
sub
call
mov
mov
add
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
cmp
jne
mov
and
mov
sub
mov
xor
mov
mov
mov
call
mov
sub
mov
mov
or
mov
sbb
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
sub
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
or
mov
mov
mov
mov
mov
sbb
xorl
push
push
call
mov
sub
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
mov
push
call
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
mov
sub
cmp
jae
mov
and
mov
sub
mov
mov
decl
mov
call
mov
mov
mov
cmp
je
mov
mov
mov
sub
and
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
sub
xorl
mov
mov
call
mov
add
mov
mov
xorl
mov
mov
mov
push
call
mov
mov
add
mov
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
cmp
jp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
orl
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
push
mov
push
call
mov
add
mov
add
mov
mov
mov
call
mov
or
mov
mov
add
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
sbb
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sbb
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
sub
cmp
jb
mov
mov
add
mov
mov
mov
mov
mov
mov
add
push
call
mov
or
mov
sub
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
cmp
ja
andl
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
add
mov
cmp
jne
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
pushl
call
mov
mov
mov
add
sub
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
sbb
call
mov
mov
mov
add
add
mov
mov
mov
or
mov
mov
mov
push
call
mov
mov
add
sbb
mov
sub
mov
mov
mov
mov
sub
call
mov
mov
sub
mov
add
mov
mov
call
mov
add
mov
mov
mov
mov
mov
mov
sbb
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
andl
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
mov
sub
mov
mov
mov
pushl
call
mov
mov
mov
or
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
xor
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
and
xorl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
sub
mov
mov
mov
mov
call
mov
sub
sub
mov
mov
mov
movl
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
sub
mov
mov
decl
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
add
mov
mov
mov
push
call
mov
sub
mov
mov
sub
mov
mov
mov
push
mov
push
call
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
subl
mov
sbb
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
cmpl
jb
mov
adc
add
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
cmp
jb
sbb
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
addl
mov
mov
push
push
call
mov
mov
sub
add
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
sub
push
call
mov
mov
mov
sub
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
sub
or
xor
call
adc
mov
add
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
add
orl
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
test
je
mov
or
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
cmp
ja
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
or
mov
mov
cmp
jne
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
sub
sub
test
jne
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
andl
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
orl
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
add
cmp
je
or
mov
mov
and
mov
mov
mov
mov
mov
adc
and
push
mov
push
call
mov
mov
mov
sub
mov
mov
cmp
jp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
sub
cmp
jb
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
push
call
mov
mov
mov
cmp
je
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
call
mov
sub
xor
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
adc
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
sub
sub
mov
mov
mov
mov
mov
push
mov
orl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
add
mov
mov
add
mov
mov
mov
mov
and
or
lea
push
call
mov
mov
mov
mov
mov
mov
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
cmp
jae
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
and
mov
pushl
call
mov
mov
sub
mov
and
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
mov
push
call
mov
mov
mov
add
mov
add
cmp
je
mov
mov
adc
mov
sub
sbb
sub
mov
mov
sub
mov
mov
lea
mov
push
call
mov
mov
mov
mov
mov
cmp
jne
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
subl
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
add
sub
cmp
jbe
mov
sbb
mov
sub
andl
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
call
and
add
mov
or
mov
mov
mov
mov
pushl
call
mov
sub
sub
mov
mov
push
call
mov
or
mov
mov
mov
orl
mov
mov
add
cmp
jb
mov
mov
mov
adc
sub
mov
mov
mov
mov
mov
push
call
mov
and
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
xorl
andl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
pushl
call
mov
mov
mov
mov
sub
cmp
jb
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
movl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
addl
mov
push
call
mov
mov
add
mov
mov
mov
add
pushl
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
add
mov
mov
mov
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
add
mov
sub
incl
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
cmp
jl
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
lea
mov
mov
addl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
xor
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
or
push
push
call
mov
mov
add
mov
adc
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
sbb
pushl
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
and
pushl
call
mov
mov
mov
andl
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
or
and
call
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
call
mov
xor
add
mov
xor
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
movl
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
mov
mov
sbb
push
orl
push
call
mov
mov
sub
mov
cmpl
jl
mov
mov
mov
sub
sub
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
and
mov
mov
mov
xorl
mov
mov
mov
call
mov
mov
add
mov
mov
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
lea
mov
push
call
mov
mov
mov
sub
mov
mov
mov
cmp
je
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
sub
cmp
ja
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
mov
add
cmp
jne
mov
mov
mov
mov
and
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
add
mov
mov
and
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
cmp
jge
add
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
push
mov
push
call
mov
mov
xor
mov
mov
mov
mov
movl
mov
call
mov
sub
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sbb
mov
call
mov
mov
mov
test
jg
xor
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
cmpl
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
ja
mov
add
mov
sub
add
mov
and
mov
mov
or
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
add
mov
mov
xor
call
mov
sub
and
mov
mov
mov
mov
call
mov
or
add
mov
mov
mov
xorl
mov
mov
call
and
add
mov
mov
mov
mov
mov
mov
push
push
call
mov
sbb
sub
sbb
mov
mov
mov
mov
mov
call
mov
add
mov
and
call
mov
mov
mov
sub
mov
mov
mov
and
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
add
mov
mov
xor
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
add
mov
add
mov
mov
cmp
jne
mov
mov
mov
mov
add
movl
mov
add
or
mov
push
push
call
mov
mov
mov
sub
mov
cmp
jb
mov
mov
mov
mov
orl
mov
add
mov
call
mov
mov
add
sbb
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
xor
mov
mov
mov
mov
add
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
sub
mov
add
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
sub
cmp
jae
mov
mov
mov
or
sub
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
lea
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
and
mov
mov
mov
adc
mov
call
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
cmpl
jae
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
xor
mov
andl
mov
addl
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
ja
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
xorl
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
call
mov
sub
xor
xorl
mov
mov
call
mov
sub
mov
mov
mov
mov
pushl
call
mov
or
mov
mov
mov
mov
mov
xorl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
lea
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
add
add
mov
mov
mov
mov
call
mov
mov
xor
and
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
push
xor
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
subl
push
call
mov
mov
sub
and
mov
mov
mov
or
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
incl
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
cmpl
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
mov
mov
call
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
lea
push
call
mov
sub
andl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
add
cmpl
jne
mov
mov
mov
adc
sub
mov
mov
mov
mov
call
mov
xor
or
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
sbb
add
mov
mov
mov
mov
mov
call
mov
mov
xor
mov
or
xorl
mov
mov
push
mov
push
call
mov
mov
sub
sub
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
and
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
xorl
mov
push
call
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
and
sub
mov
mov
mov
or
mov
call
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
add
mov
adc
mov
mov
mov
mov
mov
push
call
mov
mov
or
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
or
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
sub
add
mov
mov
mov
mov
mov
sub
subl
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
sbb
and
mov
mov
call
mov
mov
add
mov
mov
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
mov
sub
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
push
call
mov
mov
mov
sub
or
mov
mov
mov
mov
mov
push
push
call
mov
mov
sbb
add
mov
and
mov
mov
mov
mov
mov
push
call
mov
mov
mov
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
test
je
mov
mov
mov
mov
add
mov
mov
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
or
sbb
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
or
mov
mov
add
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
xorl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
or
mov
mov
mov
mov
add
mov
push
mov
push
call
mov
mov
mov
mov
movl
mov
mov
add
mov
push
call
mov
mov
mov
mov
cmp
jb
mov
mov
mov
sub
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
call
adc
mov
mov
sub
mov
mov
mov
pushl
call
mov
add
mov
mov
movl
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
subl
mov
call
mov
mov
add
mov
cmp
jl
and
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
add
push
call
mov
add
mov
add
add
mov
and
mov
mov
call
mov
mov
add
mov
mov
mov
movl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
sbb
mov
and
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
mov
and
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
sub
mov
mov
xor
xor
push
call
mov
sub
mov
mov
adc
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
mov
mov
push
call
mov
sub
mov
mov
sbb
mov
call
mov
mov
mov
sub
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
add
cmpl
jle
mov
mov
mov
add
mov
mov
mov
mov
sub
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
sbb
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
push
push
call
mov
xor
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
adc
mov
mov
xorl
mov
push
push
call
mov
mov
add
mov
mov
cmp
jb
mov
mov
mov
xor
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
add
mov
mov
mov
mov
addl
lea
mov
push
call
mov
mov
mov
mov
mov
lea
push
call
mov
mov
sub
mov
cmpl
jg
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
adc
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
cmp
jae
mov
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
or
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
call
mov
mov
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
adc
xorl
pushl
call
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
add
mov
mov
mov
mov
mov
lea
push
call
mov
mov
add
mov
mov
add
mov
mov
mov
call
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sbb
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
xor
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
and
mov
mov
cmp
jp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
subl
mov
mov
push
mov
push
call
mov
mov
mov
or
mov
sub
cmp
jno
mov
mov
mov
sub
mov
orl
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
call
mov
mov
mov
add
incl
mov
mov
cmpl
je
mov
mov
sub
mov
mov
mov
movl
push
push
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
mov
adc
addl
mov
call
mov
mov
mov
add
incl
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
test
jb
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
call
mov
mov
and
mov
mov
xor
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
cmp
ja
mov
mov
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
incl
mov
push
mov
push
call
mov
mov
mov
sub
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
add
or
or
mov
push
push
call
mov
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
adc
mov
sub
mov
mov
mov
movl
mov
push
call
mov
mov
mov
mov
mov
mov
xorl
mov
mov
adc
pushl
call
mov
mov
add
mov
or
mov
mov
mov
mov
call
mov
add
add
mov
mov
sbb
mov
push
push
call
mov
mov
sub
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
push
push
call
mov
mov
mov
add
cmp
jbe
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
and
mov
sub
mov
mov
mov
mov
mov
mov
push
push
call
mov
adc
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
cmp
jg
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
or
add
sbb
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
mov
mov
mov
mov
mov
pushl
call
mov
xor
add
sub
cmp
jo
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
adc
mov
mov
mov
mov
push
push
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sbb
mov
mov
mov
mov
orl
mov
pushl
call
mov
mov
add
mov
sub
cmp
jle
sbb
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
and
mov
mov
decl
mov
mov
push
push
call
mov
mov
mov
sub
sbb
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
call
mov
mov
or
mov
mov
mov
addl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
sbb
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
sub
and
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
adc
mov
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
sub
lea
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
decl
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
incl
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
and
call
mov
or
mov
mov
or
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
sub
mov
mov
cmpl
jbe
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
add
mov
add
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
sub
pushl
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sbb
sbb
sub
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
adcl
xorl
mov
mov
mov
push
call
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
andl
and
mov
push
push
call
mov
mov
add
mov
mov
mov
call
mov
mov
mov
sub
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
sub
xor
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
adc
sub
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
add
mov
mov
mov
mov
mov
call
mov
mov
add
mov
sub
sub
mov
mov
orl
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
add
mov
mov
call
mov
mov
add
mov
or
or
mov
mov
adc
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
mov
mov
add
mov
call
mov
mov
sbb
add
mov
mov
mov
add
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
add
mov
mov
add
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
lea
sub
mov
sub
cmp
je
mov
mov
mov
sub
mov
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
sub
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
pushl
call
mov
mov
mov
or
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
mov
mov
sub
cmp
jne
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
sub
mov
incl
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
call
mov
mov
or
mov
mov
mov
mov
push
push
call
mov
lea
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
add
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
xorl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
mov
cmpl
jae
mov
mov
mov
add
mov
mov
mov
movl
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sub
mov
mov
cmp
jne
mov
mov
sub
mov
mov
mov
mov
or
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
and
mov
add
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
xorl
mov
cmp
je
mov
mov
add
add
mov
adc
mov
sub
mov
mov
dec
jne
mov
mov
adc
mov
mov
mov
mov
mov
mov
push
call
add
add
add
add
je
add
insl
add
xor
dec
add
insb
pop
insb
cmp
push
add
inc
add
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
and
mov
call
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
cmpl
js
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
adc
add
mov
mov
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
call
xor
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
mov
pushl
call
call
mov
mov
mov
add
mov
mov
add
cmp
ja
mov
mov
mov
add
mov
mov
mov
push
call
mov
add
sub
mov
mov
mov
mov
call
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
andl
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
mov
mov
mov
lea
mov
push
call
mov
sub
mov
mov
mov
mov
call
mov
sbb
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
call
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
test
jae
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
push
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
push
lea
push
call
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
add
lea
mov
mov
mov
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
push
mov
mov
mov
sub
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
and
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
add
mov
mov
pushl
push
call
mov
mov
or
mov
mov
mov
call
mov
sub
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
or
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
pop
ret
int3
push
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
add
mov
mov
mov
mov
call
leave
ret
int3
push
mov
add
mov
mov
and
mov
mov
add
mov
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
mov
mov
pushl
call
mov
mov
sub
sbb
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
je
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
xorl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
push
mov
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
ja
mov
and
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
addl
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
and
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
cmpl
je
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
call
mov
mov
sub
or
mov
mov
mov
mov
mov
sub
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
cmp
jb
mov
sbb
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
add
mov
mov
adc
mov
mov
mov
mov
inc
mov
cmp
jne
mov
mov
mov
mov
mov
xor
sub
cmp
jbe
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
push
call
mov
mov
mov
sub
mov
mov
mov
mov
inc
mov
mov
mov
or
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
subl
push
push
call
mov
mov
mov
mov
cmpl
jae
mov
mov
mov
mov
or
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
or
mov
and
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
adc
mov
sbb
mov
mov
sub
sub
mov
mov
add
add
mov
mov
mov
mov
dec
jne
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
mov
add
mov
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
sub
mov
mov
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sub
test
jo
mov
mov
mov
add
mov
pushl
mov
pushl
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
mov
mov
pushl
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
cmp
jle
mov
mov
mov
mov
mov
mov
incl
mov
incl
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
ja
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jno
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
sub
push
push
mov
push
or
push
call
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
sub
mov
add
test
jne
mov
mov
mov
add
mov
mov
mov
mov
lea
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
sub
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
mov
mov
sub
test
jg
mov
sub
add
xorl
mov
orl
mov
mov
mov
sub
mov
mov
mov
cmp
jg
mov
mov
sub
mov
sub
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
add
mov
add
mov
mov
andl
xor
mov
mov
sub
addl
or
mov
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
adc
add
mov
mov
mov
mov
push
mov
push
call
mov
mov
add
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
mov
mov
call
or
mov
cmpl
jg
mov
mov
mov
movl
or
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
add
mov
pop
ret
xor
inc
pop
add
add
dec
add
xor
add
add
add
dec
push
push
inc
add
outsl
add
inc
add
add
add
push
push
je
add
insb
xor
add
add
add
outsb
add
add
push
jo
add
dec
add
jb
add
add
inc
jp
add
add
dec
jbe
xor
push
inc
add
add
add
inc
dec
add
add
add
add
inc
outsl
add
pop
add
jae
add
aad
push
pop
add
flds
sar
mov
stos
inc
pop
stos
clc
sbb
pop
ljmp
sub
dec
iret
jecxz
fmuls
and
add
dec
test
in
pop
xlat
add
rcll
enter
aam
xlat
add
jb
js
jmp
add
adc
test
pop
lret
mov
fwait
mov
addl
add
gs
pop
dec
hlt
add
outsl
mov
jb
loop
je
leave
mov
lret
add
cmp
cld
stos
call
stc
mov
mov
jnp
gs
outsl
arpl
mov
adc
repz
xor
call
es
nop
fcmovu
push
mov
mov
adc
shlb
ficomps
push
call
mov
mov
mov
call
roll
mov
stos
ror
xlat
mov
repz
mov
shll
or
test
iret
adc
lods
mov
pop
cwtl
cli
mov
enter
int3
stc
mov
pop
cwtl
aam
lret
fcoms
mov
loopne
rcrb
in
aam
call
jmp
loopne
cwtl
hlt
cli
in
clc
adc
lahf
cld
stc
in
rcrb
in
je
push
hlt
pushf
or
dec
clc
adc
cld
in
and
inc
cwtd
cli
sbb
lret
sbb
or
and
add
jmp
sbb
cwtl
xor
and
add
sub
inc
xlat
xor
inc
cli
xor
dec
adc
mov
xchg
cld
cmp
dec
push
adc
pop
xchg
ret
inc
mov
xlat
dec
pop
cwtl
push
adc
jmp
pop
pop
cwtl
js
pusha
dec
jl
fs
test
insb
pop
cwtl
mov
jo
mov
je
nop
jmp
jl
cwtl
pushf
cli
orb
test
mov
mov
mov
adc
enter
cwtl
int3
cli
mov
mov
jl
pop
add
fdivrp
mov
lahf
mov
outsb
rorb
ret
push
mov
mov
clc
mov
lahf
call
dec
in
adc
stc
mov
jmp
cld
push
mov
and
inc
or
adc
aad
lret
cld
jae
insl
icebp
aam
sti
sbb
pop
loop
push
inc
int3
mov
ret
hlt
add
xor
mov
movswl
push
push
push
lods
lea
jmp
mov
add
in
out
jmp
mov
add
adc
pop
jne
es
inc
shrl
movsbl
in
ret
push
push
roll
lret
mov
or
xchg
and
js
out
psllw
cmpsb
jne
daa
scas
cmpsb
lret
lock
lret
add
pusha
stc
mov
and
imul
jne
mov
lods
adc
frstor
adc
je
pop
and
xchg
les
lret
test
pandn
pmovmskb
std
sub
aam
ret
mov
dec
push
lock
jle
outsl
xchg
push
mov
or
jecxz
int3
lret
stc
out
iret
mov
ss
push
dec
xchg
fbld
add
mov
cmp
sbb
arpl
test
je
clc
rolb
ret
cmpsb
in
in
mov
call
in
outsl
pop
cwtl
leave
or
mov
stc
rol
push
inc
sahf
sbb
lret
mov
push
dec
add
sub
push
xlat
movsl
fs
mov
outsb
mov
add
xchg
inc
mov
push
mov
jp
in
xor
xor
add
xor
pop
sti
or
mov
not
dec
je
jno
shl
xchg
jo
ret
call
xchg
push
xchg
or
dec
das
mov
adc
in
addr16
dec
clc
call
lahf
inc
repnz
es
push
pusha
imul
mov
jno
aam
mov
cmp
je
push
loope
hlt
leave
lcall
mov
call
cltd
push
mov
and
pop
les
mov
push
testl
add
or
dec
mov
imul
fsin
pop
cmp
jne
nop
test
stos
pop
jmp
sti
jle
push
pop
pop
sub
mov
imul
ljmp
jp
call
mov
mov
dec
mov
pushl
sbb
inc
jg
adc
repz
dec
add
mov
push
add
mov
jecxz
cli
lock
pop
mov
jno
pop
push
push
int
scas
pop
stc
or
mov
lret
in
dec
dec
loop
mov
xor
mov
sub
mov
rolb
cld
call
fdiv
mov
jbe
jg
lret
enter
lcall
rep
je
mov
sub
ret
jmp
ljmp
pop
fidivs
sub
lods
lock
xor
call
rcll
jg
dec
lea
or
fdivr
mov
cltd
nop
leave
ss
clc
lock
push
fs
push
call
or
push
push
call
out
gs
push
cltd
shlb
cmc
or
push
clc
pop
repnz
jb
jg
rorb
in
sahf
sbb
xor
leave
jmp
jne
push
xchg
repz
out
sbbl
mov
movsl
cmc
dec
or
ror
lea
ficoms
shr
sbb
mov
mov
lret
fdivl
shl
mov
jge
dec
rcll
in
shll
sbb
push
aad
adc
addr16
call
stc
adc
and
out
gs
in
push
mov
add
roll
jl
repnz
test
and
dec
pop
jbe
mov
mov
or
incl
sbb
testb
add
sub
test
movsb
xchg
enter
ljmp
push
in
stos
mov
jmp
call
outsw
andb
inc
push
je
jb
cmp
push
mov
dec
push
mov
jmp
cmc
gs
pop
ret
sbb
ljmp
rorl
cld
xrelease
loopne
lret
stc
mov
pop
ret
outsb
add
sbb
mov
jns
push
hlt
jle
jl
xchg
call
pop
sub
leave
je
shr
or
jnp
std
incl
testl
lret
outsl
pop
out
dec
mov
pop
rcl
xchg
call
in
dec
leave
adc
mov
jne
jb
or
sahf
and
adc
push
repz
mov
or
or
into
aas
mov
adc
jmpw
into
neg
xchg
push
adc
stc
pop
inc
push
xchg
and
mov
and
aas
lret
lcall
divl
pop
add
lret
iret
jp
jmp
test
jmp
icebp
call
push
mov
mov
push
faddp
add
pop
hlt
mov
mov
cmp
les
ret
lahf
xor
loop
pop
pop
push
pop
jo
rclb
clc
jp
mov
fsubrs
iret
fnsave
andb
fcmovnu
push
pop
pop
icebp
jp
lcall
fadds
xor
sub
add
dec
jns
lret
sub
add
dec
xlat
push
dec
pop
dec
pop
loope
cld
dec
add
mov
sbb
xchg
lret
add
jns
popf
or
sub
push
jns
mov
pop
int3
cltd
call
cwtl
inc
push
int
repnz
cmpsl
mov
adc
add
adc
pop
jecxz
or
rcr
mov
fadds
shrb
add
sub
into
xor
sbb
lock
sbb
adc
push
xchg
mov
mov
push
cld
decw
stos
mov
test
push
cmp
jae
std
ret
or
sbb
xor
or
shl
dec
add
sbb
sahf
pop
cmp
cmp
pop
sahf
mov
mov
adc
adc
mov
xchg
adc
int3
xor
mov
add
testl
mov
pop
push
fidivrl
call
mov
out
out
pop
cltd
mov
jne
mov
cmp
or
pop
add
out
dec
push
dec
iret
mul
ret
add
repnz
xchg
mov
pop
leave
xchg
imul
mov
mov
gs
mov
dec
dec
push
rclb
enter
lea
sbb
or
pop
add
mov
call
add
stc
out
rcrb
negb
adc
gs
in
push
mov
xchg
cmp
add
testl
adc
push
imul
adc
mov
addl
dec
call
repz
sub
test
fists
mov
add
in
mov
dec
xchg
or
push
push
push
pushl
not
fbld
xor
jmp
xchg
aaa
outsl
stc
or
dec
cli
cmp
pop
push
test
andb
test
imul
int
add
jp
call
testl
sbb
rep
cmp
dec
cmpsl
jb
loope
add
stos
mov
xchg
add
out
rclb
adcl
mov
imul
xchg
loop
xchg
fcom
sub
cmp
cmc
stc
mov
mov
pop
cmpsb
sub
jne
fists
int
jmp
xchg
adc
mov
push
push
call
orb
mov
adc
push
mov
inc
push
nop
call
inc
insl
and
sbb
adc
add
pop
adc
repz
aam
orb
add
xchg
pop
andl
dec
loope
push
mov
scas
jb
inc
sbb
imul
icebp
push
push
mov
call
push
inc
mov
dec
push
call
push
out
mov
mov
bound
cmp
into
mov
popf
mov
in
sbb
xchg
movsb
enter
xchg
mov
jp
push
rolb
fimull
sti
lcall
in
push
mov
fdivs
in
dec
mov
mov
inc
sbb
in
or
sti
aas
push
inc
and
adc
imul
fistpl
fstpt
sar
call
jbe
inc
push
push
pusha
dec
push
add
inc
out
xlat
dec
insl
cmp
gs
dec
push
cmp
aaa
sub
mull
icebp
call
sbb
sbb
sub
add
cmpsl
jl
cmp
jle
call
bound
popa
cld
jp
test
sub
das
pushf
push
sbb
pop
dec
nop
add
ljmp
cmp
push
dec
dec
inc
pop
dec
dec
cwtl
mov
stc
sahf
mov
push
xchg
add
and
jns
pop
jmp
adcb
push
testb
shll
faddl
pop
inc
call
push
mov
rolb
xchg
out
mov
mov
mov
mov
cmp
iret
popf
inc
push
adc
ljmp
into
call
xchg
out
jns
mov
push
mov
cmc
pop
dec
pop
adcb
push
push
dec
lock
sbb
leave
shl
xchg
dec
lock
sti
popf
dec
pop
mov
insl
call
jmp
push
popf
jecxz
mov
sti
mov
xchg
pop
mov
lea
idivl
je
stos
nop
adc
arpl
ds
jne
in
int
mov
mov
adc
mov
xor
push
push
jnp
adc
ret
sbb
sbb
and
mov
cmp
ret
test
adc
xchg
out
mov
mov
mov
rcll
inc
mov
cmp
add
out
cwtl
stc
lock
lcall
sub
insb
cli
push
sbbb
adc
hlt
dec
mov
fdiv
push
mov
or
es
lock
mov
stc
cmp
ret
push
pop
shr
out
cmp
fstps
jmp
mov
push
dec
mov
inc
add
jne
mov
sahf
push
fstl
call
out
jle
push
push
xchg
dec
data16
loope
into
call
les
pop
sbb
loopne
xchg
les
jbe
jmp
ret
sbb
pop
push
cmpl
push
adc
aam
cwtl
cmc
lea
pop
sarl
movsl
mov
and
mov
mov
add
adc
lods
adc
add
adc
int3
inc
or
outsl
lret
push
mov
sti
fisttpll
mov
shlb
fstpt
adc
xor
pop
push
push
push
sub
cmp
je
fmull
test
cmp
outsb
pop
sbb
mov
shr
dec
fsubrs
mov
sbb
mov
dec
in
or
inc
mov
test
call
or
test
xchg
ja
mov
lahf
int3
loop
mov
sub
jnp
mov
lret
call
adc
inc
popf
addl
xor
call
lock
cmp
mov
loopne
pop
mov
adc
sbb
xchg
pop
leave
push
imul
testb
xchg
push
test
sbb
repz
mov
rolb
daa
mov
cmp
xchg
and
mov
mov
idiv
jbe
repz
int
cwtl
sub
repz
insb
shl
fadd
add
fcoms
jns
push
or
mov
lods
sub
fsubrp
xor
mov
rolb
int3
and
push
out
jle
fisttpll
lds
jbe
repnz
jb
push
mov
sub
ficompl
jae
cltd
stos
jbe
loopne
loopne
cwtl
in
pop
loopne
fsubp
into
addr16
pop
push
sub
imul
sahf
repz
je
fiaddl
pop
inc
add
adc
jne
repnz
adcb
icebp
pop
mov
fnstenv
push
or
lret
out
cltd
out
sbb
jo
in
cltd
repz
sahf
cld
into
xor
movsb
push
mov
sbb
add
xor
lahf
cmp
test
adc
call
cltd
jo
rcrb
push
icebp
mov
aad
push
push
aam
push
lea
mov
cmp
jp
movl
imul
mov
imul
sbb
mov
xchg
mov
notb
add
mov
call
mov
jge
jecxz
std
daa
decb
sub
loop
jo
sub
out
cmp
sbbl
ds
cvttps2pi
in
mov
mov
jge
inc
sub
mov
xlat
dec
iret
rclb
sbb
sub
add
adc
cld
push
mov
aas
dec
lret
jns
pop
stc
dec
xor
inc
lock
adc
push
pop
add
fld
xor
pop
cmp
lock
xchg
pop
ret
or
idivb
jb
adc
call
adc
pop
cmp
leave
sbb
loopne
in
adc
dec
fsubrs
rolb
fildll
push
stos
shll
addr16
insb
fsubl
stc
fidivl
mov
nop
pusha
aam
mov
push
iret
clc
outsl
mov
inc
or
roll
iret
mov
mov
xor
push
lea
push
push
popa
stc
imul
pop
imul
xchg
cmp
es
mov
lock
lret
adc
or
cld
jno
sbb
sbb
cmp
ds
test
jbe
push
pusha
fwait
push
add
mov
xor
sub
repz
stc
xor
shrl
ret
fwait
or
xor
imul
lock
or
pop
lcall
push
jge
mulb
cli
adc
sub
sarb
mov
sbb
fxam
push
adc
sbbb
xchg
insl
fwait
call
xchg
int3
mov
jmp
ret
ret
je
rorb
mov
xor
leave
push
cli
add
or
sbb
movsl
add
test
adc
loope
mov
sbb
imul
mov
rorb
jl
mov
neg
insb
dec
mov
inc
lds
dec
cwtl
add
push
insb
test
daa
dec
and
dec
fdivl
sub
movsb
mov
gs
dec
sub
adc
in
pop
ret
ret
rcll
push
jo
lcall
rolb
ds
shl
adc
sub
mov
outsb
add
icebp
mov
cmp
jno
push
call
mov
push
call
adc
bound
pop
push
push
cmc
jno
push
push
and
fsubr
mov
or
popa
int3
adc
inc
sti
cli
leave
mov
sub
hlt
push
lahf
shlb
jae
stc
pop
inc
test
pop
test
aad
and
cmp
or
jge
lods
hlt
push
lahf
rcrl
in
push
mov
enter
pop
mov
push
sbb
mov
mov
add
xor
pop
lret
xchg
lea
stos
mov
repz
aas
stos
pop
test
lahf
stc
jmp
pop
test
push
mov
fwait
enter
xchg
adc
xor
or
mov
shl
cmc
and
dec
jle
xchg
lds
mov
jnp
sete
mov
ret
mov
pop
xchg
cmp
cmp
enter
fs
scas
sbb
xchg
xor
lds
js
pop
mov
loopne
cmpsb
rcrb
xchg
pop
je
mov
pop
inc
ret
push
dec
sbb
mov
in
lahf
xchg
pop
mov
mov
pop
hlt
fiadds
icebp
mov
arpl
push
xor
pop
mov
idivb
ja
xor
mov
hlt
sbb
cmp
mov
rolb
cmp
das
cmp
mov
shlb
xchg
and
dec
xor
and
sahf
push
xor
or
mov
test
shlb
fnstenv
push
push
dec
pop
call
mov
cmp
push
je
cmp
mov
cld
aas
les
loope
mov
push
mov
xor
sub
mov
in
out
es
mov
pop
push
push
and
cs
pop
push
add
in
adc
cmp
add
adc
mov
or
jbe
fisttps
jo
dec
rcll
add
xchg
jle
mov
or
pop
inc
lahf
pop
xlat
addr16
xchg
ss
sub
xlat
adc
xchg
jo
sbb
filds
lods
nop
jmp
cltd
sub
iret
dec
xchg
repnz
gs
decb
dec
lahf
aam
scas
daa
repnz
pop
pop
xchg
cltd
xor
mov
dec
and
clc
sub
xor
add
sub
add
and
cmc
jmp
push
add
mov
js
push
or
sub
out
dec
mov
mov
lret
dec
lahf
adc
mov
xchg
push
inc
out
lret
sub
out
int3
xor
xchg
or
hlt
mov
push
rclb
sbb
adc
sahf
leave
incl
lret
je
push
pop
rorb
adc
pusha
mov
adc
push
imul
cmp
test
dec
movl
mov
xchg
jg
stos
mov
mov
lret
or
in
push
adc
jmp
xchg
arpl
push
add
fs
push
xlat
adc
pusha
adc
or
in
jl
inc
jecxz
jle
dec
pop
imul
or
push
out
fwait
jns
shr
ret
xchg
xchg
out
xchg
inc
push
adcb
sub
or
pop
pop
sbb
gs
fisttpl
popf
in
mov
mov
insb
pop
xorb
ficoml
repz
movsl
out
icebp
out
fsubs
xchg
mov
cmp
xchg
arpl
mov
jl
mov
leave
hlt
ds
push
inc
inc
dec
in
mov
xchg
mov
fs
in
mov
xor
inc
leave
adc
xor
mov
sub
divb
idivl
sub
sbb
adc
mov
sub
popf
cmp
je
mov
pop
mov
and
cmp
xchg
add
lcall
cmpsb
push
sbb
arpl
pop
xchg
mov
add
fwait
je
insl
rcrb
sub
shll
bound
stos
hlt
lea
je
adc
shll
pop
xchg
sbbl
pop
mov
nop
sbb
in
xor
xor
gs
push
sub
loop
movsb
hlt
and
sbb
sbb
and
inc
mov
cli
pop
fwait
repz
mov
lea
pop
cld
mov
push
sub
xor
rol
lret
and
enter
add
cmc
xchg
mov
fistl
aas
mov
rorb
rclb
cmp
cmp
jl
push
out
lcall
cmpsl
pushf
sbbl
enter
mov
dec
push
daa
push
lods
call
mov
insl
mov
mov
pop
or
lret
jg
test
insl
xchg
mov
popf
push
mov
int3
out
stos
sub
lret
std
cs
ror
mov
fs
lahf
push
notl
inc
lret
insb
cltd
adc
xchg
aad
jp
arpl
cwtl
or
pop
clc
xchg
jecxz
dec
add
cmp
push
lods
cltd
add
lret
out
or
aaa
and
lea
xchg
pop
mov
adc
cltd
arpl
lret
push
adc
cwtl
add
fistps
jns
xorl
pop
cmp
fucom
test
push
popw
mov
cmpb
lea
xor
pop
dec
lret
push
shl
push
jns
cmc
pop
out
mov
push
jle
lret
cwtl
test
test
mov
testb
sti
fisttpll
outsb
call
imul
iret
add
jae
test
ljmp
dec
mov
rcrl
jmp
cmp
loope
inc
rcr
jne
lods
icebp
jne
cltd
test
mov
movb
hlt
shrb
int
ror
shrb
sub
mov
or
fwait
jmp
js
mov
fs
ljmp
inc
mov
cmp
push
jb
jge
sahf
xor
loop
sahf
outsl
xchg
pushf
inc
dec
andl
or
vdivsd
mov
fistpl
lock
test
adcb
mov
xchg
sbb
mov
lcall
aam
add
dec
aad
pop
dec
in
sahf
ja
sub
scas
repnz
lods
xchg
clc
push
xor
dec
xchg
lds
cmp
and
call
cltd
inc
pop
or
jb
imul
xor
jbe
bound
loopne
jns
hlt
push
sub
xchg
mov
call
jmp
jno
and
lock
pop
jbe,pn
negb
imul
inc
or
push
xchg
sub
mov
sti
aaa
or
cli
cmc
xchg
or
icebp
adc
push
push
scas
jge
xor
push
test
sub
xor
addl
cmp
xor
sub
sub
inc
loope
push
xor
aam
ss
lret
add
mov
pop
into
cmp
mov
cli
mov
dec
xchg
test
stos
dec
cmp
shr
mov
or
shrb
cmpsb
je
sbb
xchg
ljmp
mov
cwtl
addl
mov
jae
shlb
sbb
mov
pop
fnsave
mov
in
fs
out
or
and
movntps
stos
pop
mov
dec
arpl
in
sbb
stc
fldl
pop
je
out
adc
pop
lahf
mov
pop
pop
pop
nop
mov
ret
pop
mov
xchg
iret
and
lds
cmpsb
test
mov
cltd
lods
push
daa
ss
push
nop
cli
or
inc
xchg
inc
mov
sub
sbb
xchg
nop
push
cli
push
cmc
push
nop
es
scas
movsl
cmp
mov
add
les
lcall
lds
push
call
cmc
push
fbld
cld
pop
mov
xchg
insb
mov
cltd
add
daa
adc
xchg
mov
or
clc
sbb
xor
dec
shlb
or
pusha
mov
cld
sbb
leave
inc
push
pop
dec
xchg
fnop
flds
call
inc
push
mov
pop
jmp
xchg
push
mov
push
dec
xchg
lret
or
pop
fnstenv
adc
or
cmp
mul
or
outsl
dec
jecxz
or
push
sbb
cmp
sub
test
push
call
inc
dec
xchg
jae
push
inc
mov
inc
ret
mov
jge
loopne
sub
push
mov
cmc
adc
adcb
popa
mov
mov
adc
data16
pop
repnz
xchg
lock
movsl
or
lcall
data16
cmpsl
movsb
pop
inc
mov
mov
test
icebp
pop
mov
test
mov
icebp
pop
fs
fimull
adc
sbb
out
mov
sub
call
outsb
dec
push
adc
push
jge
sbb
xchg
out
add
cmp
adcb
fistl
dec
cmp
insb
lret
nop
jne
push
push
jmp
call
inc
jle
cmp
ss
sbb
xchg
fs
movsl
bound
sub
push
lahf
sbb
pop
jns
mov
and
sbb
cltd
sub
cmp
lahf
dec
js
sub
xor
cmp
cmpsl
sub
jl
cmp
inc
or
imul
push
add
repz
fiadds
out
mov
or
sbb
and
mov
and
inc
fisttpll
sub
cmp
sahf
fdiv
test
jbe
sub
and
add
lcall
mov
or
mov
cmp
ret
xchg
jmp
in
stos
mov
jne
pop
out
add
sub
push
mov
cmp
cmp
shrl
dec
and
push
sbb
push
inc
mov
shr
cmp
inc
push
mov
inc
inc
stos
or
cmp
adc
mov
das
inc
adc
stc
jg
rcrb
movsl
addr16
pop
jb
jg
jecxz
mov
jae
push
mov
inc
push
daa
mov
and
inc
pop
ret
dec
inc
add
out
push
inc
inc
lahf
mov
xor
leave
daa
nop
or
js
aam
inc
inc
cmp
lahf
test
aaa
sub
sub
push
xchg
mov
mov
nop
push
sub
into
fnsave
out
dec
cli
adc
push
push
pop
cwtl
push
mov
in
pop
and
data16
mov
movsl
bound
mov
pop
mov
push
fsubrl
cld
xor
mov
pop
sbb
mov
leave
mov
fsubs
push
inc
lret
clc
inc
outsb
push
or
lahf
mov
fcoml
dec
movb
add
xchg
dec
dec
outsl
ret
push
push
into
call
ret
popf
insb
xlat
out
jmp
rcll
shr
cli
pop
movsl
xorb
xchg
pop
mov
lea
call
mov
fst
orl
dec
mov
iret
sbbb
or
jmp
mov
push
mov
aaa
das
inc
ds
pop
jo
jge
push
scas
jle,pn
mov
lret
sbb
repz
or
mov
frndint
push
call
repz
fcompl
repnz
push
lea
shll
mov
jne
or
outsl
call
jge
into
leave
pop
and
repnz
dec
lahf
loopne
jno
loope
inc
das
jb
mov
repnz
lods
mov
jne
cmp
or
int
mov
in
and
out
lcall
push
mov
jg
fldl
push
adc
stos
insb
inc
sbb
nop
xchg
sub
jp
lock
inc
add
sbb
test
cltd
jns
cli
lea
mov
ljmp
roll
and
push
mov
inc
or
les
push
pusha
idivl
and
insl
fsubl
lret
mov
mov
sub
mov
pop
dec
iret
shlb
and
aaa
mov
fiadds
dec
mov
loopne
or
mov
cmp
lock
or
and
sbb
xor
push
inc
cmp
nop
or
inc
pop
mov
xor
xlat
cmp
push
add
mov
jns
testl
or
rclb
rcrb
mov
push
or
cmp
les
clc
push
push
mov
pop
jecxz
call
stos
inc
mov
push
sub
mov
aad
fcoms
or
ret
sub
add
shrl
push
mov
jae
mov
xchg
sbb
mov
xlat
fimuls
cli
loopne
jmp
aas
fsubr
por
pop
out
mov
mov
xchg
or
sbb
mov
scas
out
jae
leave
add
lcall
inc
mov
or
xchg
mov
lret
pop
xor
shrb
xlat
outsb
pushf
and
dec
addb
xchg
push
cmp
int3
shrb
mov
loopne
sub
jp
cmp
mov
xchg
xorl
sub
mov
addr16
lock
pop
pop
jecxz
push
and
sbb
xchg
xchg
mov
push
mov
sub
pop
call
xor
xchg
sub
cld
xor
dec
xchg
pop
clc
xchg
aam
or
jns
xchg
push
xchg
lock
call
stc
das
sbb
dec
adc
stc
insb
jge
mov
insb
pop
sub
push
je
sub
sbb
dec
scas
fs
stc
pop
pusha
cli
adc
jl
xchg
call
pop
xchg
add
add
fcomi
xchg
int3
scas
push
sbb
rclb
add
repnz
int3
stc
jo
adc
add
push
inc
pop
leave
popf
jp
cmpsb
cld
ss
or
lret
adc
mov
aam
adc
push
mov
push
loopne
mov
adc
fistps
ljmp
jge
in
leave
jns
popf
imul
jg
in
jp
cmp
scas
inc
mov
dec
sar
in
call
push
jl
xchg
dec
iret
cmp
add
fsts
jge
or
mov
xor
and
jns
add
test
leave
ja
addl
loop
je
dec
adc
out
lret
out
mov
push
cwtl
aam
addb
sbb
mov
js
fcomi
mov
push
lock
cmp
mov
sahf
out
imul
add
ljmp
inc
mov
push
dec
and
xlat
call
push
sbbl
pop
and
pop
nop
inc
cmp
dec
cmp
dec
cld
sbb
fsubrl
xor
inc
inc
sahf
push
rclb
ja
ret
mov
sbb
cmpl
je
sbb
mov
int3
jge
pop
lcall
xchg
jmp
outsl
sbb
out
and
gs
and
xchg
sub
push
in
fs
xchg
inc
rorl
sbb
sub
adc
or
ljmp
push
and
dec
push
inc
jbe
push
sbb
cmp
cwtl
jp
mov
aaa
sbb
pop
inc
stos
js
adc
fmul
jb
dec
and
pusha
out
cltd
cwtl
hlt
hlt
mov
pushf
popf
lock
or
call
jge
and
and
push
or
pusha
shr
out
xchg
movsb
jmp
dec
sub
xor
rolb
rclb
fcoml
and
push
push
out
iret
xor
dec
movsb
gs
cltd
cmp
shrl
push
movsb
out
inc
inc
sti
push
in
or
cltd
rcll
mov
fisubs
pusha
clc
inc
jns
pop
or
roll
fcmovnbe
add
popa
cmpsb
or
or
test
inc
push
pop
inc
repz
push
add
iret
ficomps
adc
sti
dec
jmp
add
inc
jl
hlt
inc
mov
push
add
dec
sahf
cmpsb
outsb
sbb
sbb
add
add
icebp
fmull
xchg
mov
add
jbe
pop
call
inc
std
add
xchg
inc
int
and
lock
and
and
mov
xchg
inc
lcall
adc
push
mov
jp
test
cmc
enter
jg
jl
stc
fs
data16
lock
bound
mov
dec
inc
dec
sar
mov
jle
push
std
ja
lods
push
jae
sbb
je
inc
sahf
mov
lret
inc
jl
cmp
dec
dec
push
or
sahf
shl
inc
add
inc
rorb
aam
sbb
cmp
inc
int3
lret
cmp
mov
dec
add
jg
or
dec
ja
les
mov
mov
jns
xchg
adc
inc
lret
jle
mov
sbb
scas
scas
fs
mov
incb
and
enter
mov
enter
or
pop
push
ss
jge
je
xor
lods
hlt
push
sti
sahf
pop
insb
mov
in
push
sbb
mov
call
or
pop
or
shl
or
cmp
pusha
sarl
pop
jge
dec
mov
scas
aad
ja
fucomp
jl
mov
jl
mov
sarl
pop
cli
sbb
add
jmp
hlt
cwtl
xchg
lods
xchg
or
fwait
into
int3
dec
or
or
pop
aas
push
xor
sti
cmp
jne
arpl
sarl
mov
cmp
or
fwait
add
sbb
mov
mov
hlt
dec
pop
sub
cli
push
roll
test
adc
call
cmp
in
dec
lock
shl
out
int3
jae
dec
pop
mov
mov
fcoms
fsubs
call
mov
dec
dec
jmp
stos
test
add
push
add
fidivrl
xor
or
pop
scas
popf
testl
btr
cwtl
adc
mov
add
outsb
push
mov
xchg
imul
jge
popl
pop
inc
jecxz
neg
dec
push
pop
mov
add
cmpl
dec
xchg
test
lock
sub
aam
dec
or
mov
lret
lock
xor
call
shrl
pop
je
push
movl
or
pop
call
aad
jne
or
adc
fs
jg
xor
sbb
jg
dec
or
lret
jo
pop
cltd
or
cmc
xchg
rol
xchg
push
mov
imul
dec
ret
out
adc
int
or
mov
clc
aas
xlat
xchg
adc
fnclex
adc
xor
dec
in
ja
pushf
inc
int
ret
rolb
mov
cmc
pop
lahf
fsubr
loope
xor
adc
repz
mov
mov
xchg
xchg
sbb
or
xorl
inc
xor
into
loopne
sbb
call
shrb
leave
cli
fldenv
fisubl
jns
stos
xor
lods
call
push
sbb
nop
rcll
push
jne
iret
arpl
sub
iret
test
mulb
mov
xor
jns
pop
adc
arpl
push
xchg
jo
lock
ds
cmp
outsl
ljmp
ror
pop
cltd
lret
fcomps
mov
xchg
fbld
and
xchg
jge
push
push
mov
push
mov
xchg
sub
fmuls
lea
insb
leave
sub
repnz
sbb
dec
or
insb
inc
subl
add
in
push
in
xchg
push
and
or
dec
imulb
pop
subb
mov
pop
push
sbb
dec
mov
test
inc
pop
xor
push
andb
mov
lods
cmp
dec
mov
xor
mov
mov
cmp
sti
jb
pop
iret
or
std
popf
xor
inc
lds
inc
xchg
sbb
fstpt
in
test
out
mov
xchg
xchg
pop
and
es
lods
xor
shlb
idiv
or
rolb
stos
pusha
enter
test
push
sbb
in
cmp
add
out
in
sbb
lods
ret
push
sub
ds
ficoms
mov
movsl
repz
sub
mov
das
push
cmp
std
enter
inc
imul
mov
mov
icebp
insb
jno
push
dec
pop
dec
jbe
out
sti
xchg
push
sbb
xchg
xor
lret
pushl
iret
pop
ljmp
mov
mov
int3
adc
rolb
and
test
push
es
mov
dec
dec
sub
pop
xor
mov
pushf
push
push
push
rolb
insl
lock
cmp
cltd
pop
inc
mov
call
pop
inc
ret
jns
fmuls
cmpl
lods
jecxz
icebp
add
xchg
jp
lock
pop
sbb
lcall
inc
int
add
jp
mov
dec
sub
test
sub
adc
sub
enter
xor
enter
jp
loop
in
sub
pop
jns
lret
sbb
sbb
fstpt
lret
xchg
jbe
leave
or
inc
pop
iret
pusha
enter
push
test
adc
dec
sub
decl
sahf
push
movsb
inc
test
pushf
cs
in
pop
lahf
mov
cmp
fnstcw
imul
pop
call
xor
push
leave
mov
rclb
lods
pop
and
gs
jbe
mov
call
sbb
xchg
inc
popf
sbb
cmp
xor
push
mov
add
cmc
push
pop
sub
lods
inc
xchg
mov
jge
or
inc
inc
mov
mov
fisttps
les
dec
repz
mov
fnstcw
test
orl
cmp
sub
jmp
mov
mov
jo
ret
mov
nop
sub
push
mov
push
jo
icebp
pop
jno
test
jbe
sar
flds
fsubl
xchg
dec
mov
shlb
gs
cmp
cmpsl
pop
je
daa
enter
mov
fs
int
sbb
add
mov
lea
ret
shlb
rolb
or
cltd
mov
fimull
xchg
push
jmp
and
enter
sarb
or
add
je
cltd
call
loop
popa
shll
pop
fldt
xor
add
repz
cmp
jnp
loopne
imul
adc
xchg
push
fiaddl
arpl
xchg
call
shll
aam
pop
mov
xchg
pop
shrl
mov
cwtl
pop
enter
rol
push
popa
mov
rcrl
setns
fnstsw
fmull
nop
mov
sbb
fistpl
inc
lcall
shr
or
push
outsl
outsb
jo
jmp
add
xor
cmp
aaa
ret
or
test
popaw
xor
ja
call
loopne
pop
dec
lock
call
adc
mov
je
repnz
ja
or
ljmp
xor
or
pop
cli
sub
mov
notb
add
test
jns
sub
sub
repz
ljmp
pop
lahf
cwtl
mov
jge
inc
pop
rcrl
mov
push
cmp
xor
xchg
sbb
dec
adc
push
movsl
rcrl
jecxz
ret
cmp
sbb
push
push
stos
imulb
add
sarl
xchg
jnp
test
in
js
inc
imul
pop
push
pop
pop
push
jg
pcmpgtb
outsl
push
push
sti
dec
nop
jbe
lret
push
lret
cmpb
or
je
out
dec
adc
adc
sbb
mov
pop
sbb
add
insl
inc
cmp
dec
cmp
nop
pop
jbe
lret
imul
and
lret
adc
ljmp
xor
xor
jg
push
or
sbb
repnz
rolb
pop
mov
pop
mov
test
jle
dec
call
out
add
aas
test
bnd
iret
das
xchg
sub
push
mov
mov
cmp
inc
andb
inc
and
jno
mov
add
test
scas
dec
popf
icebp
mov
sbb
dec
pop
push
pop
ret
gs
pop
cmp
cmp
clc
je
sahf
cmp
inc
into
pop
push
dec
jns
pop
popa
mov
jmp
in
jno
leave
pop
jne
mov
cld
inc
pusha
push
jo
cmp
push
mov
lahf
test
xchg
or
movsl
pop
stc
movsb
dec
cld
hlt
mov
dec
pop
push
push
in
adc
push
mov
lcall
adc
clc
lods
stos
cmc
or
jl
fucomi
cwtl
push
stc
mov
mov
loopne
dec
mov
xchg
jmp
fs
imul
dec
js
in
inc
mov
dec
clc
jle
mov
fcoml
push
fwait
iret
jno
ret
mov
leave
push
imul
xchg
mov
fcmovnb
jb
pop
add
cmp
xlat
jae
pop
repnz
je
xor
negb
dec
je
aam
cmp
cltd
mov
adc
repz
imul
jle
fisttps
dec
lea
xchg
xor
shll
push
jge
repz
out
jno
sub
jae
sub
add
je
push
push
call
icebp
sub
imul
dec
lock
fmuls
jl
adcb
call
js
in
mov
sbb
pop
addr16
test
imul
cmp
and
test
jmp
rorl
loopne
sbbl
sbb
das
les
flds
call
mov
jg
sbbb
xchg
or
jne
and
lods
add
push
repz
pop
mov
or
lahf
repz
mov
sub
sub
std
iret
cli
jmp
pop
jae
repnz
cmc
leave
ljmp
or
jmp
loopne
jg
flds
ret
cmp
je
dec
sub
or
push
fcmovnbe
push
add
jns
cmc
ljmp
movsl
mov
sbb
xchg
icebp
sub
jne
mov
mov
js
je
jo
add
xchg
mov
mov
inc
jle
mov
mov
fmul
pop
pop
mov
lock
sub
adc
cmp
sbb
sbb
lcall
iret
cmp
jne
ja
out
jns
push
imull
lock
pop
jecxz
out
xchg
out
in
mov
pop
xchg
dec
cmp
mov
in
rorb
cmp
je
sub
enter
mov
lea
roll
inc
insb
leave
pop
repnz
mov
aaa
or
push
daa
ficompl
movl
out
jp
push
or
icebp
sub
push
leave
or
xchg
insb
pop
push
push
idivl
xor
out
or
push
das
push
adc
pop
mov
push
call
mov
test
push
leave
mov
sub
insb
int
push
in
mov
cli
adc
subl
jmp
test
or
push
xor
mov
add
incl
or
or
push
xor
sub
fsts
stc
mov
sbb
ss
inc
push
rorl
mov
mov
test
sub
inc
sbb
out
adc
cld
stos
adc
add
dec
xchg
pop
mov
push
cmpl
sub
loopne
jns
outsl
popa
inc
lret
lcall
pop
sbb
sbb
pop
pop
jecxz
pusha
outsl
sbb
call
jmp
sbb
nop
xor
push
movl
sbb
into
dec
pop
and
int
lock
xor
and
lret
adc
sub
cli
sub
popf
xor
xor
cmp
addl
lret
std
pushf
cli
xor
cmp
cmp
addb
lret
dec
pop
gs
jno
aam
inc
or
cli
inc
mov
xorb
pop
cltd
js
jl
mov
clc
je
frstor
cltd
je
js
jl
imul
xor
lock
jecxz
push
lahf
dec
repz
mov
mov
push
xchg
lahf
cwtl
stc
pushf
int
sar
aas
xchg
mov
xchg
sbbb
mov
push
lods
adcl
shlb
lret
sub
test
cwtl
lods
ja
push
cltd
push
cli
pop
lret
pop
imul
push
or
adc
pop
aad
pusha
ljmp
pop
jo
lahf
mov
jecxz
push
lahf
or
push
sbb
sarb
push
cmpsl
adc
roll
std
outsl
xchg
std
ror
cmp
mov
lock
ret
and
dec
mov
cltd
mov
jmp
shrl
fidivs
sarb
lret
je
cmp
int3
ret
add
push
push
cmpsb
scas
dec
mov
or
sub
adc
add
jl
mov
test
repz
call
mov
fldenv
cld
add
inc
pop
mov
mov
cmovp
mov
shll
adcb
and
mov
sub
fsub
jecxz
mov
nop
ret
push
sahf
sar
and
jno,pn
dec
pushf
in
jmp
ret
mov
shl
push
orb
adc
and
imul
dec
insb
mov
dec
test
sub
shrb
int
aaa
adc
mov
mov
test
cmp
xchg
enter
add
mov
and
fabs
stos
cmp
adc
hlt
jl
ds
jp
jbe
xor
jg
jbe
and
and
and
cmpsl
dec
mov
fucom
lods
sbb
rorb
lret
shl
push
test
insl
adc
adc
cmpsb
dec
dec
xchg
push
popf
cmpl
sbb
adc
leave
sub
mov
aas
jae
xorl
jne
dec
mov
dec
sbb
and
add
mov
repz
nop
icebp
insl
push
notb
inc
mov
nop
xchg
dec
fisttps
or
jne
dec
push
fidivrl
scas
cmp
aad
fsubs
repz
adc
and
xor
mov
incb
shll
mov
outsb
sub
sahf
xchg
xor
rcll
hlt
cmp
push
lcall
mov
rolb
hlt
or
mov
outsb
add
fadds
test
jmp
push
stc
cmp
sbb
lea
jmp
adc
popa
jl
sbb
data16
sti
std
leave
testb
test
adc
mov
das
inc
cmp
cmp
xchg
and
mov
jl
dec
shrb
int3
je
mov
push
xchg
add
sub
repz
clc
lock
inc
mov
sbb
jno
xchg
xchg
les
add
hlt
cmp
cli
or
movsb
inc
insl
sub
push
sub
test
cmp
nop
add
pop
jne
jns
mov
push
push
mov
popa
ret
out
inc
jmp
hlt
or
cmpb
mov
push
mov
cmpsl
cli
stos
add
adc
sbb
stc
mov
mov
into
pop
mov
pop
or
jmp
sub
fistpll
shll
or
jmp
nop
jbe
aad
leave
xor
imulb
fisttps
and
into
out
das
mov
out
test
into
enter
mov
dec
push
add
mov
mov
aaa
stc
push
cli
jg
adc
cmp
imul
movsl
adc
loope
cmpsb
insl
pusha
cld
sbb
test
mov
adc
scas
iret
pop
and
lahf
daa
clc
nop
aaa
cmpsb
or
pop
mov
or
lds
leave
push
and
push
add
jg
mov
shll
arpl
xchg
daa
insl
jg
inc
lods
xor
sub
dec
jnp
mov
adc
decb
push
call
jns
nop
xor
mov
add
xchg
cli
insl
test
inc
inc
or
xchg
sbb
and
jmp
mov
test
xlat
mov
nopl
adc
data16
fcomps
lods
or
add
mov
cmp
or
out
popf
sbb
mov
test
clc
pop
cmpl
orb
push
repz
mov
pop
or
stc
cltd
jecxz
lahf
aas
push
call
idivb
add
sub
mov
sub
sub
ss
or
daa
adc
push
dec
mov
mov
loope
adc
xor
lods
outsl
xor
and
scas
xchg
xchg
test
cltd
dec
arpl
adc
andl
das
add
adc
rorb
mov
loopne
ljmp
push
cmp
fsts
ret
push
inc
sub
les
add
movsb
ret
sbb
test
push
mov
fwait
adc
mov
popf
mov
cmpsb
fs
jns
lcall
loop
mov
aas
pop
fcmovnu
jbe
cmp
jne
mov
pop
cmc
out
xor
adc
dec
pop
dec
or
out
cmp
jle
lock
or
push
xor
outsb
mov
imul
sub
mov
cmp
loop
sub
dec
roll
adc
movlps
mov
add
jns
imul
push
mov
sub
add
idivb
push
xor
and
orl
push
fwait
in
cld
push
inc
rol
push
jnp
aas
push
outsb
and
mov
lar
js
sub
mov
push
popa
into
inc
je
addr16
incl
mov
xor
enter
lds
loop
cmc
cmp
xchg
jp
aam
pusha
push
inc
adc
int
xor
mov
nop
cmc
adc
pop
mov
incl
or
sbb
pop
out
leave
rcl
ss
scas
or
xchg
jns
sbb
mov
dec
xor
daa
jne
or
mov
xor
pop
mov
fstps
insl
into
test
sub
or
lret
push
push
fcomp
push
mov
dec
add
lcall
lock
hlt
enter
sahf
mov
cmp
push
push
push
nop
cmp
outsb
sbb
xor
in
int
pop
sub
mov
mov
subb
sub
pushf
xor
jb
test
dec
add
or
sub
add
in
lcall
dec
sbb
mov
cmc
mov
lret
test
pop
dec
popf
mov
outsl
aad
dec
fcoms
xchg
fdivrp
or
shrb
xlat
test
adc
and
in
xchg
and
cmp
jb
pop
leave
xor
cmc
fcoml
push
test
imulb
sub
call
int3
add
dec
lea
aam
negl
loopne
add
pusha
jecxz
int3
jno
mov
dec
cmp
clc
into
mov
iret
call
adc
or
shrb
mov
and
xor
lds
ja
into
mov
rcrb
les
daa
dec
or
pop
xor
cwtl
xchg
xor
mov
insb
and
mov
push
decl
cld
and
cmp
sub
nop
mov
adc
movsl
les
jbe
mov
or
lret
repz
push
push
call
xor
mov
and
pop
or
xchg
icebp
sar
adc
jg
shrb
sarl
xlat
mov
dec
jbe
mov
push
shrb
mov
dec
cltd
es
mov
push
mov
pusha
mov
icebp
dec
push
inc
or
push
mov
mov
mulb
and
xorl
and
mov
mov
mov
vminpd
repz
stc
dec
mov
sub
adc
hlt
push
sub
push
aas
and
out
imul
loope
sub
xor
cmp
jae
cmp
out
rorl
jge
sub
out
fmull
xor
repnz
inc
jp
hlt
mov
or
fnstcw
sbb
iret
push
mov
mov
mov
and
push
ljmp
mov
fisttpl
mov
cltd
sbb
lea
icebp
daa
cmp
or
mov
xchg
in
adc
mov
cmp
ss
jge
orb
and
jmp
data16
lea
das
clc
sbb
pop
orb
mov
cld
cmp
xchg
ret
inc
add
sbb
out
cmp
xchg
dec
dec
loop
lahf
xor
insb
testl
jb
std
adc
push
rorl
mov
dec
test
mov
ljmp
push
stc
fsubl
jnp
lahf
sbb
inc
adc
mov
mov
push
scas
xor
inc
cmp
jmp
aam
ss
jle
cmpsl
cli
leave
in
or
addl
fbld
lods
pop
pop
aad
mov
sub
int
push
dec
and
sbb
add
rclb
sub
imul
mov
pop
inc
jo
stc
mov
jns
movsb
dec
imul
stos
fs
xchg
hlt
loope
je
xor
in
aas
dec
je
mov
cmpsl
adc
lret
negb
dec
push
push
outsb
and
adc
roll
jl
sbb
dec
pop
push
mov
adc
adc
xchg
int3
call
or
or
push
and
mov
icebp
mov
dec
imul
push
adc
shlb
ret
mov
hlt
and
pop
sub
inc
loope
rolb
add
roll
pop
pop
xor
inc
fsts
pop
pop
pop
lock
outsb
rcll
fimuls
imul
pop
jecxz
shl
pop
xor
es
cli
sub
fwait
call
lahf
loopne
push
or
ret
rol
push
in
push
ja
cmp
addr16
test
cmpl
pop
data16
push
sarb
mov
push
mov
push
and
ja
jp
push
shlb
leave
cmpsb
pop
test
dec
je
mov
dec
adcl
push
push
dec
xor
aam
and
clc
mov
dec
in
xor
fdivrl
mov
mov
xchg
mov
ja
cwtl
stos
jp
lock
insb
dec
js
mov
sbb
insl
push
mov
incl
mov
push
mov
jb
popa
dec
imul
data16
pop
or
inc
cmp
push
enter
push
push
add
loop
testb
add
jge
dec
shrb
add
subb
mov
cmpb
inc
loopne
out
mov
add
push
or
xchg
repnz
and
test
or
cmp
sub
fiadds
pop
cmp
pop
lret
sbb
sub
or
sbb
mov
push
in
jmp
ret
and
rorb
jecxz
pop
lea
add
es
push
push
mov
add
idiv
lea
cli
or
sub
in
popa
roll
data16
imul
in
mov
xor
imul
inc
inc
ret
call
ret
push
pop
divl
fwait
cwtl
sub
imul
ror
lret
call
roll
sub
sbb
sub
shll
fcmovne
jnp
testb
lea
shll
inc
push
out
jno
push
jnp
cmp
inc
stos
jb
sub
push
subb
arpl
or
imul
lcall
loope
cmp
xor
xorb
push
xor
sub
vpacksswb
repnz
in
xchg
test
ss
inc
push
adc
mov
lock
jmp
and
out
xor
stc
lahf
xor
add
pop
xor
push
xchg
push
inc
dec
inc
push
xchg
jmp
bnd
jns
test
and
stc
sahf
fimull
xchg
add
jg
mov
mov
sahf
push
loopne
xor
aaa
pop
clc
insb
in
shl
leave
lock
push
mov
lods
lahf
and
lcall
pop
lds
fdivrl
cmc
je
jle
push
nop
or
ret
inc
je
xchg
mov
movb
push
rorl
loopne
inc
xor
mov
lcall
dec
cltd
fnop
sub
cmp
movsl
popf
test
jbe
sub
cld
adc
mov
loop
push
push
into
push
push
psllw
mov
and
push
lea
push
push
push
out
adc
int
loop
in
cs
mov
sti
ss
subb
icebp
cmp
div
jbe
xchg
nop
rorb
inc
sbb
xchg
mov
dec
icebp
hlt
nop
iret
shrd
leave
mov
shll
xchg
push
mov
push
aas
pop
inc
stc
mov
sbbb
adc
leave
test
xor
adc
mov
fwait
adc
subl
out
out
rcr
ds
or
addl
jmp
std
or
mov
cmpb
fucomp
div
sub
cld
mov
call
jno
out
or
jmp
data16
xor
sahf
lret
push
push
mov
in
add
dec
push
mov
loope
jne
pop
in
push
push
push
dec
test
pop
cmp
mov
jns
lahf
or
mov
ljmp
fimuls
cmp
or
push
rep
mov
jo
cs
shlb
gs
aam
mov
cli
jo
call
jbe
das
sub
adc
xchg
shrl
xor
daa
popf
out
mov
leave
pop
bound
cmp
pop
lret
push
jo
or
cmp
mov
xchg
adc
lock
in
and
pop
jo
push
test
int
push
int3
inc
push
faddl
pop
dec
fdivrs
xor
push
inc
mov
mov
andl
sbb
pop
pop
push
mov
lret
pop
cmpsl
ja
cmp
cmp
cmc
notl
mov
and
movsb
imull
inc
insb
adc
fimull
cmp
lcall
jno
add
jo
sbb
call
leave
and
mov
aaa
repnz
jle
jecxz
push
rorl
decb
mov
dec
sbb
cmp
test
rolb
sbb
imul
inc
jle
or
enter
sbb
jle
dec
xchg
mov
imul
dec
adc
or
xor
sarb
xor
xor
pop
add
adc
add
jnp
nop
inc
inc
roll
mov
cmc
test
push
jp
daa
mov
or
cmp
call
lea
add
mov
sbb
xchg
mov
cmpsb
mov
cmp
jbe
sbb
je
shl
cmp
into
or
cld
jb
lcall
sbb
fnstsw
cmp
pop
or
mov
lret
in
pop
mov
cmp
ret
push
outsb
lahf
pop
jg
testl
xor
sbb
mov
es
sub
cmp
add
add
aaa
lret
dec
ljmp
nop
sahf
xchg
cmp
adc
pop
iret
ds
scas
jle
inc
lock
lock
bound
adc
or
mov
insb
inc
ja
pop
cmp
sbb
ljmp
movsb
cmp
cwtl
lret
jo
xor
mov
hlt
clc
mov
mov
inc
xlat
adc
into
pushl
iret
add
push
arpl
jp
push
popa
cmc
out
je
mov
or
push
jns
xor
fimuls
lea
adc
pop
xor
incb
stos
stos
stos
mov
and
sub
push
push
xchg
pop
cmp
cli
push
pop
sub
jecxz
mov
xchg
push
jnp
mov
sbb
shr
shrb
addl
add
jbe
or
popf
push
jmp
js
cs
stc
in
ret
adc
out
loop
mov
sub
leave
insb
xor
add
cmp
rol
je
aad
push
adc
ret
scas
mov
push
push
pop
lcall
pop
sub
lahf
jne
fiadds
inc
ret
mov
ja
push
add
pop
clc
mov
mov
nop
fsubrs
lea
jbe
shl
xchg
pop
or
jmp
cmp
jno
xchg
sub
lret
mov
mov
cwtl
push
dec
stos
fwait
mov
pop
inc
add
jnp
sub
mov
insb
mov
insb
inc
jl
adc
xchg
push
inc
out
cltd
inc
clc
dec
lret
pop
out
repnz
aaa
mov
sub
sub
cli
insb
xchg
xchg
pop
divb
orps
lret
mov
dec
stos
cs
dec
ror
lea
in
dec
stc
ds
dec
mov
ljmp
cltd
push
sub
fistpl
pop
and
xchg
call
xchg
ds
jne
loop
mov
inc
insl
and
divb
out
mov
mov
mov
or
dec
ret
push
sti
dec
jne
jo
cmp
insb
jb
mov
jle
xchg
repnz
bound
sbb
push
cwtl
pop
mov
or
inc
fcomi
mov
jp
cmp
lcall
inc
aas
subl
out
shrl
sbb
push
mov
sub
dec
imul
loop
cmp
sbb
gs
sub
outsl
clc
sbb
sub
icebp
jmp
xor
sub
push
fsubp
iret
in
mov
jo
fnstenv
fmuls
das
int
cwtl
outsl
sti
jg
jnp
pop
incl
jae
mov
ljmp
dec
shrl
xor
sarl
int
dec
push
add
mov
jg
or
xchg
sub
cltd
int
adc
int
stc
test
clc
and
jle
loop
fstpt
adc
jmp
and
cmp
mov
mov
mov
xlat
sbb
jne
mov
sbbl
jae
pop
fdivrl
mov
aas
jl
xlat
add
dec
out
jae
mov
popa
push
dec
jo
rol
mov
dec
fwait
dec
or
jp
ret
mov
cmp
xor
push
test
orb
leave
cld
jne
lcall
pop
cmp
imul
lds
fdivrs
jae
cmpsb
lea
mov
inc
adc
into
sub
cmp
mov
jnp
inc
add
cmp
jne
das
pop
mov
add
loope
jmp
and
scas
cltd
arpl
repnz
cmp
xchg
test
mov
jb
cmc
jnp
add
or
xchg
push
dec
iret
cwtl
xchg
lock
jne
notb
rcrb
mov
jns
lcall
aaa
jo
inc
call
sub
xor
shll
sub
xor
add
mov
sbb
push
aam
push
pushf
mov
jmp
cmp
pop
repz
imul
outsb
adc
xor
lahf
jmp
mov
icebp
push
xor
jle,pt
imul
jnp
repz
push
push
pop
pop
and
xchg
mov
add
sti
je
cmc
ror
push
call
aas
push
lea
sbbl
adc
sahf
clc
mov
loop
push
mov
pushf
sub
cmp
ljmp
leave
ljmp
call
sbb
cmpsb
xchg
cltd
or
jmp
call
mov
push
pushf
jmp
adc
mov
mov
xor
push
in
popf
add
rorl
push
call
jno
xor
leave
push
xor
rclb
sub
shlb
cmp
ficoml
mov
jecxz
mov
or
mov
gs
test
icebp
pop
sbb
nop
shll
pop
push
mov
insl
mov
mov
pop
in
lea
out
dec
out
icebp
nop
lahf
test
fcomps
push
adc
scas
xor
push
shll
push
push
test
mov
sub
repz
push
fmuls
pop
mov
addb
xor
rcl
and
mov
or
adcl
addr16
push
push
cli
mov
out
pop
arpl
push
or
push
roll
ljmp
pop
int
mov
xor
out
mov
push
sbb
pop
call
sarl
sub
call
xchg
dec
sub
or
jle
call
add
push
cmp
movsb
jns
push
arpl
jae
cwtl
jg
mov
addl
mov
xor
sbb
es
std
popf
imul
xor
xchg
int
add
pop
adc
hlt
add
shll
jp
adc
subl
aas
ss
leave
xchg
cmpl
jp
and
or
dec
jo
aas
js
movb
inc
sbb
scas
push
call
sbb
cmpb
rcll
push
xchg
cltd
cld
ljmp
int3
iret
flds
jmp
mov
mov
iret
loope
dec
paddd
stc
inc
lret
lcall
mov
idiv
shl
iret
sub
pop
testb
test
jmp
push
adc
push
mov
rorb
mov
jno
es
mov
or
loope
mov
movb
movsb
cld
mov
jo
cmp
aam
hlt
lods
outsl
dec
aad
push
ljmp
xchg
popf
push
test
and
mov
jbe
add
mov
dec
fidivs
aas
or
xor
add
mov
mov
repnz
test
repnz
ja
leave
adc
sub
sub
shr
cmpsl
hlt
iret
sub
mov
scas
rorb
push
inc
dec
cwtl
repnz
sahf
hlt
popa
cld
inc
int
ret
outsb
popa
mov
sub
mov
lea
dec
push
aad
loopne
sub
int
dec
iret
adc
inc
jg
jp
ja
ret
fildll
bound
xor
incb
mov
popl
jl
xchg
and
lods
jbe
iret
cmp
sbb
mov
push
mov
int
aas
decb
jecxz
cmp
lea
cli
pushf
add
cmc
jmp
adc
mov
inc
fxch
pop
call
jno
dec
mov
push
pop
sbb
repz
jmp
jl
mov
pop
aas
jo
pop
add
neg
and
fs
lds
dec
pop
sub
and
addw
and
cmc
sbb
cld
xchg
cmp
mov
jne
pop
or
cmc
call
xchg
hlt
popf
xor
mov
int3
dec
jbe
repz
push
push
adc
iret
repnz
lock
or
or
ds
lcall
sarl
inc
mov
pop
mov
ret
jno
scas
cmpsl
mov
test
test
jbe
scas
aas
cmc
dec
xor
out
sahf
lret
lods
xlat
jecxz
sbb
lret
mov
mov
std
mov
add
push
lods
popf
dec
dec
sti
rolb
lods
int3
or
xchg
in
hlt
js
lea
ret
add
mov
enter
pop
jle
add
push
out
loopne
push
std
call
bound
pop
jae
sub
pop
sub
fsubs
mov
and
movsl
xor
dec
pop
push
adc
jb
or
pop
cld
inc
dec
mov
mov
or
jbe
inc
fcomip
sub
sbb
jl
mov
mov
fwait
lret
jne
insb
cmp
sub
adc
push
add
inc
movl
imulb
cmpsl
cmp
stc
pop
in
ret
daa
and
aaa
cld
mov
hlt
paddb
das
dec
sbb
mov
jb
dec
call
or
sub
repnz
scas
testb
scas
popf
call
aaa
jae
aad
mov
int
inc
call
sbbl
pop
adc
mov
push
mov
lcall
inc
add
cmp
test
jle
fwait
int3
movl
fwait
adc
negb
pop
outsb
sub
repz
ja
shll
push
jg
inc
cs
ja
add
add
jmp
or
sub
ret
xchg
add
mov
call
cmp
or
xor
leave
jb
push
fwait
cld
jge
icebp
loope
xor
fisttps
fisubs
jne
ret
fnstsw
fnstcw
sub
sbb
xchg
and
mov
cli
sbbb
cmpsl
push
sub
stc
adc
and
repnz
nop
push
sbb
or
jns
lods
add
and
dec
outsl
mov
repnz
jne
scas
xor
ret
mov
iret
rcl
jne
inc
jo
lea
jecxz
adcb
or
inc
xor
xlat
je
xlat
movsl
push
test
shlb
add
fisttps
xchg
fidivs
divl
inc
inc
add
add
cmp
xor
xlat
lods
xchg
push
pop
push
icebp
les
cmpb
cmp
add
dec
xor
mov
iret
dec
pop
out
inc
fldl
xlat
jmp
xor
inc
aam
xor
adc
sub
mov
aam
sbb
sub
add
into
popa
ret
ret
cmpsl
sub
add
lds
push
mov
pop
cmp
dec
xchg
inc
adc
fs
mov
ret
inc
xor
hlt
testl
lret
push
jne
push
sti
jbe
cmp
test
ret
dec
cli
icebp
dec
loope
add
lock
or
dec
stos
pushw
xor
dec
adc
xor
dec
push
dec
je
lahf
ds
sub
icebp
mov
dec
aas
push
dec
xchg
std
add
pop
pop
add
dec
ds
inc
call
sahf
gs
jmp
jmp
pop
mov
mov
adcl
js
mov
psrld
or
add
sbb
dec
mov
rcll
jb
leave
iret
roll
push
cmp
push
add
cmc
mov
mov
and
jno
xchg
push
lret
push
leave
outsl
arpl
pop
or
je
nop
in
or
sahf
stos
xchg
mov
mov
dec
inc
mov
push
je
jno
dec
push
cmpl
scas
loopne
inc
pop
jge
lea
cmp
fbstp
call
or
mov
inc
fnstcw
and
lea
xlat
jle
push
shrl
adc
sub
and
pop
push
jno
xor
xchg
scas
cwtl
and
in
adc
rcrl
fsin
cs
pop
repz
pop
inc
ss
inc
xor
cmpsl
pop
xchg
or
xor
sahf
in
sbb
push
mov
xorl
cmc
movb
fimuls
iret
cmpb
xlat
je
pop
aad
inc
lret
incb
lods
in
jp
dec
outsb
mov
stos
pusha
int
je
stc
jae
pop
xor
lea
jle
jp
lcall
fwait
lret
xlat
insl
jae
add
fwait
arpl
negb
jae
xchg
jmp
mov
popa
pop
daa
or
jl
into
dec
aaa
iret
jle
fs
xor
into
ret
lods
mov
pop
lcall
cld
sbb
push
mov
js
add
sahf
jno
push
repz
mov
shrb
rolb
dec
lret
cwtl
lret
arpl
push
aas
bound
ret
cltd
xchg
push
aas
push
test
fdivrl
popa
lds
rcll
jae
insl
jle
add
cmp
call
arpl
lea
ja
add
jo
pop
mov
jbe
je
push
pop
xor
inc
bound
cmp
and
xchg
inc
dec
fcomp
js
inc
call
cwtl
imull
and
daa
outsb
subb
push
fcomps
inc
test
and
mov
movsb
out
xor
mov
arpl
call
mov
mov
pop
jb
adc
sbb
test
mov
daa
mov
mov
lret
mov
testb
xor
int3
jnp
orb
adc
push
scas
adc
imul
pop
int3
cmp
cmp
pop
mov
mov
jmp
dec
cltd
xor
mov
dec
sbb
mov
inc
test
sar
and
xor
mov
pop
call
mov
sub
daa
sub
jne
sbb
neg
push
outsb
xchg
sbb
push
add
mov
int3
fdivs
jb
cs
insl
arpl
or
sub
push
jno
scas
popa
enter
or
scas
jnp
enter
xor
mov
pushf
push
lret
cli
fmul
sti
xor
jp
loopne
push
and
inc
fildll
dec
adc
xor
leave
push
inc
loopne
xchg
fs
ret
movsb
xchg
cmp
dec
or
outsl
sbb
jp
outsl
xchg
mov
ds
xor
mov
push
adc
mov
outsl
out
mov
loope
pop
clc
mov
xor
add
sbb
xchg
fwait
lret
pop
out
or
fsubp
ja
orl
leave
cmp
mov
push
jne
dec
adc
sbb
dec
ror
lahf
in
lock
imul
stc
jg
lea
test
stos
push
mov
mulb
push
subb
int3
dec
xor
add
push
cmp
push
shlb
ret
sbb
mov
fstpt
sar
roll
push
push
dec
push
jbe
xor
jbe
dec
pushf
push
jmp
mov
mov
mov
add
cld
sbb
decb
repz
mov
orb
stc
add
adc
cli
dec
sbb
jge
fstpl
cwtl
xchg
or
dec
or
jl
adc
sbb
cmp
jg
fldl
in
into
insb
push
adc
out
mov
push
mov
jmp
decb
jl
pop
mov
mov
daa
add
dec
and
lock
xchg
adc
push
leave
dec
lea
push
mov
xor
xchg
mov
arpl
adc
les
test
negb
xchg
lea
fwait
add
stos
add
jmp
cmpsl
cmp
jae
sub
fmuls
std
shr
jge
mov
jl
xor
mov
lds
and
push
xor
shrb
ljmp
push
in
push
and
test
pop
xor
loopne
imul
xor
movb
cmp
cmpsb
in
push
inc
inc
or
in
adc
hlt
jae
arpl
adc
movb
push
mov
mov
and
into
xor
cltd
stc
pop
mov
out
lahf
cmp
dec
cwtl
pop
sub
push
repnz
roll
inc
push
hlt
cmpsb
arpl
adc
nop
push
sub
in
ljmp
mov
loopne
mov
mov
fistl
dec
push
cmc
inc
dec
adc
xchg
out
mov
mov
mov
jl
add
cmp
out
xchg
jnp
rclb
and
sbb
cmp
jle
or
mov
cli
cmp
xor
imul
gs
inc
xchg
insl
jne
je
inc
cs
movl
outsb
mov
lahf
mov
aas
iret
mov
jmp
dec
adc
aad
push
call
test
jnp
cmp
push
shr
test
mov
ret
xchg
setp
ret
cld
sub
adc
sub
sub
lret
call
xchg
adc
xchg
jmp
lds
push
add
push
test
xor
jae
popf
adc
and
jnp
popa
cltd
movsb
dec
push
mov
and
xchg
add
push
int
rclb
dec
lock
mov
in
xchg
test
jne
mov
in
icebp
inc
jo
pop
mov
movsb
int
outsb
fnstcw
je
std
xor
cmpsb
mov
adc
mov
outsl
shld
jle
in
mov
xchg
pop
scas
jp
test
repz
stos
xor
xchg
push
call
lea
aam
stc
hlt
and
lcall
sub
add
neg
sbb
ffreep
repz
inc
call
push
xchg
xor
testb
je
mov
enter
cmc
dec
mov
and
sbb
pop
rcrb
shlb
lods
pop
pop
pop
jne
mov
adc
cmp
dec
or
cmpsb
add
rorb
fstpt
cltd
adc
push
mov
or
into
filds
mov
push
movsb
ret
imul
sub
ficoml
xchg
loopne
mov
mov
divl
mov
ficompl
imul
cmp
mov
icebp
decb
jbe
cwtl
push
test
or
add
cmp
and
push
dec
es
push
cli
hlt
stos
adcb
cltd
xchg
adc
sbb
jae
scas
xor
out
jno
mov
push
cld
jle
and
xlat
icebp
sub
dec
mov
mov
enter
or
daa
jo
rorl
cld
dec
and
mov
lret
clc
arpl
push
jbe
movsb
leave
dec
gs
aaa
sbb
mov
sub
or
in
and
and
movsb
dec
sbb
hlt
ss
je
dec
adc
pop
aam
cmc
subb
jle
loope
sub
repz
dec
xlat
call
push
pop
dec
aas
cs
xor
inc
xchg
or
out
pop
rclb
pop
pushf
xlat
mov
dec
sbb
sar
jmp
neg
push
and
mov
mov
mov
mov
pusha
lock
sbb
das
les
bswap
cwtl
and
pop
cltd
push
cli
xor
and
sub
cmc
adc
loopne
in
pop
sub
shlb
in
popa
push
mov
add
xor
add
push
pop
push
lea
cltd
inc
sub
mov
mov
adc
xchg
sbb
fs
adc
inc
lret
ss
ljmp
jle
sub
sub
mov
aad
sbb
lret
push
jp
mov
test
xchg
cmp
jge
ljmp
orb
cld
call
xchg
clc
in
sbb
mov
push
jne
jle
call
mov
push
push
push
sbb
lock
jmp
out
push
call
sbb
adc
or
pop
sbb
sti
adc
insb
std
negb
mov
adc
shll
sahf
pop
insl
call
dec
arpl
cwtl
and
roll
and
rcll
test
je
loope
sub
adc
jg
cltd
lret
add
mov
sbb
add
push
mov
and
aad
xchg
fiadds
incl
xchg
divb
push
fsub
out
cwtl
cmp
mov
push
pop
add
scas
xor
decb
jecxz
adc
leave
lods
popa
hlt
rcrl
lods
in
lods
xchg
sbb
shrl
int3
mov
rorb
iret
push
rol
fadd
xorl
std
icebp
rep
clc
adc
ss
cmp
push
icebp
pop
hlt
shll
test
pop
jmp
rcll
sbb
xor
sub
cmc
flds
pop
testb
popf
stos
mov
xor
lret
or
jb
scas
inc
scas
inc
jb
rcll
xlat
mov
es
cmp
and
in
out
clc
je
push
sbb
xchg
ds
shr
add
outsl
in
negl
xor
repnz
in
pop
push
xor
add
mov
inc
pop
mov
push
iret
pop
lods
or
call
and
std
push
orb
push
sub
testl
je
inc
int
js
inc
leave
lods
pusha
icebp
ljmp
push
ljmp
addr16
add
cltd
adc
push
and
std
test
cmp
in
lods
je
push
add
lock
inc
pushl
jb
mov
insl
jg
fbstp
inc
mov
inc
popa
mov
mov
lods
pop
mov
mov
insl
jle
and
cmpl
cmc
push
dec
aaa
and
pop
loop
xchg
stos
push
and
inc
stos
test
addr16
aas
aaa
fs
stos
roll
mov
mov
lds
iret
adc
dec
call
es
dec
daa
faddl
leave
cmpsl
mov
fmul
or
push
sub
fiadds
js
insb
ret
or
xchg
je
lcall
or
aaa
jle
pop
insl
ret
or
dec
sbb
cmp
push
std
hlt
dec
jle
sub
sbb
icebp
inc
shrb
xchg
dec
push
dec
or
lock
sar
mov
mov
xchg
popf
fs
or
fwait
mov
int3
inc
fs
sub
hlt
and
pop
fsubrp
cmp
fisubl
xchg
adc
xor
jae
xchg
or
cld
leave
ret
and
testl
lahf
test
cli
add
mov
or
std
cli
sbb
popa
lret
jg
mov
test
and
mull
hlt
decb
idivb
mov
stc
rorb
inc
cmpsb
or
addl
pop
fwait
movsl
cmpsl
xor
adc
xchg
adcb
cmp
xchg
rcl
sub
roll
adc
out
sub
leave
inc
imul
orb
mov
cmpl
mov
jmp
stos
inc
lock
pop
xchg
cmpsl
bound
add
mov
cwtl
push
xchg
inc
icebp
cmp
cmp
lret
push
movsb
outsb
rcrl
lahf
inc
jae
dec
mov
call
mov
xor
jo
adc
jmp
inc
rclb
adc
fmul
dec
ds
stos
shl
push
ds
cld
adc
mov
out
cmp
hlt
push
xor
mov
push
jnp
movsb
cmp
cli
mov
mov
ret
aas
leave
xchg
fimull
cmpsb
and
mov
push
mov
enter
aaa
call
in
pop
jae
push
push
movsb
adc
mov
dec
inc
xchg
adc
or
sahf
xor
push
xchg
jb
adc
leave
repz
cs
lret
sub
sub
out
mov
scas
sahf
aaa
imul
movsb
dec
pop
xchg
inc
pop
pop
clc
inc
xor
jo
dec
lods
pop
or
enter
lods
jo
lods
mov
push
int
dec
sub
pop
enter
jo
popa
lret
cli
adc
jns
hlt
ret
in
loope
push
daa
jmp
pop
xchg
mov
shrb
mov
inc
scas
adc
and
cmp
sub
lret
sarb
sbb
jge
adc
in
mov
movsl
mov
mov
pop
push
push
call
dec
jb
adc
testl
iret
sti
dec
roll
mov
pusha
enter
and
lahf
or
pop
lock
sahf
jbe
test
shr
mov
mov
jnp
test
mov
lods
pop
cld
stc
mov
es
rorl
insb
or
mov
lea
inc
ficoms
inc
push
mov
call
sbb
rorb
pop
mov
popa
mulb
mov
xor
push
push
cmpsb
jmp
outsl
ja
dec
daa
xor
movsl
or
mov
and
lods
mov
jge
sti
cmp
xor
xor
push
push
dec
xor
cmp
xor
add
and
js
and
push
push
pop
cmc
push
ja
pop
repz
cmp
out
add
repz
push
and
cmp
addr16
mov
aaa
cmp
or
sub
push
add
arpl
push
push
fdivrp
push
mov
pop
mov
lock
mov
test
and
add
mov
iret
sub
and
das
popa
insl
es
mul
mov
ret
mov
je
into
sbb
and
mov
lea
popf
add
mov
sbb
imul
rcrb
mov
je
stos
fidivrs
sub
gs
or
push
stos
or
sbb
and
push
sbb
add
adc
mov
jbe
pop
mov
inc
push
dec
in
ret
adcb
psubsb
pushf
push
cmp
cmp
jp
mov
int3
test
mov
adc
mov
mov
inc
call
data16
cmp
ja
imul
lret
into
call
dec
shrl
jo
aas
fs
pop
add
imul
call
and
xor
or
push
cmp
popf
idivl
jno
in
call
push
sti
push
bnd
xchg
mov
cmp
ret
adc
cmpsl
aas
mov
gs
jmp
dec
mov
jle
push
test
xchg
or
mov
aaa
fildll
ret
testb
shl
in
xchg
xor
cli
cmp
fs
int
jg
dec
jno
fsubl
rorl
loopne
cmpb
test
jmp
popf
sbbl
roll
xor
mov
rcr
mov
ret
and
fwait
push
enter
fs
inc
mov
lea
inc
or
push
call
or
jle
push
inc
ret
mov
enter
sub
or
pop
mov
sub
mov
and
cmp
push
dec
sar
fwait
movsl
adc
mov
sti
mov
call
jge
lret
js
push
daa
imul
ret
cli
jne
jo
les
xor
je
adc
into
fwait
cli
xor
xchg
inc
test
call
movsb
sub
inc
lahf
pop
inc
aaa
cmp
je
mov
lcall
insl
adc
push
push
mov
jo
cmpsb
mov
movsb
sub
dec
cmp
pop
adc
loop
int3
aas
cmp
jo
adcl
std
insb
lahf
std
sbb
push
adc
push
jg
jmp
or
outsb
lcall
pop
or
sub
int3
ljmp
dec
push
or
leave
sbb
out
inc
and
rclb
push
loop
subl
sbb
jne
mov
or
cmp
lret
and
inc
pop
push
sub
sub
mov
popf
enter
cmp
sbb
cmp
jne
dec
push
icebp
in
inc
aaa
push
cld
push
xor
jmp
adc
mov
sbb
sti
xchg
jmp
pop
push
dec
sub
sub
scas
les
call
cmpsb
xor
push
stc
pop
inc
or
xchg
add
and
cmp
cmp
enter
sub
xchg
mov
popf
push
fsubp
push
call
push
mov
cld
testl
testb
sub
pop
insb
dec
mov
push
call
inc
outsb
dec
or
cwtl
rcrl
dec
imul
mov
sub
test
fucomp
pop
out
add
mov
mov
add
jne
dec
lods
push
push
enter
mov
or
pop
ds
and
jecxz
sbbb
xchg
andl
int
mov
movsb
push
scas
mov
movsb
in
sti
and
add
mov
and
dec
push
ret
es
shlb
pop
pusha
fcom
je
fisttpll
add
xchg
fwait
cmp
cmp
or
push
push
pop
es
sub
mov
je
push
push
adc
mov
or
dec
push
enter
lahf
and
push
xor
or
jp
cmp
nop
scas
sbb
shr
jle
movsb
hlt
jmp
or
ljmp
pop
cld
outsb
add
sub
sbb
in
iret
daa
jno
cli
dec
cltd
addr16
cltd
cmpsl
imul
cwtl
xor
lea
push
fsts
cmp
xchg
mov
add
aam
ljmp
adc
pop
outsb
sbb
mov
or
mov
mov
test
test
and
jns
mov
call
xor
in
inc
cmc
fcom
enter
ja
lods
hlt
pop
icebp
mov
xchg
fdivrs
fcompl
icebp
daa
add
je
daa
nop
lock
jmp
xchg
clc
cmp
loopne
fwait
push
xor
fs
and
xchg
jb
es
dec
setnp
dec
mov
push
movsb
cmp
or
or
dec
ljmp
out
cld
test
cld
and
subb
sub
enter
sub
and
xorl
cmpl
scas
jns
lcall
push
nop
xor
push
fcomps
incb
inc
scas
lea
rorb
inc
test
js
les
jbe
sub
adc
dec
lods
repz
mov
sub
cmp
in
xchg
insb
ss
repnz
lret
add
dec
or
fs
add
dec
adc
pushf
or
icebp
add
repnz
jp
or
andl
in
subl
jns
das
daa
lret
sub
add
or
xchg
cmp
outsb
outsb
lret
cmp
repz
inc
xor
lret
test
repnz
xor
adc
xor
pop
inc
std
divl
int3
cltd
or
xor
out
mov
pop
pop
xor
or
xor
add
inc
lods
fdivrl
js,pt
test
mov
loopne
dec
cmc
mov
ret
push
mov
or
fcoms
daa
push
xchg
or
adc
sub
dec
dec
fidivl
pop
js
inc
stc
or
jmp
mov
hlt
sbb
push
repz
add
sbbb
insb
test
dec
dec
and
inc
das
call
mov
mov
cwtl
mov
fs
mov
leave
loope
push
jns
mov
hlt
push
mov
enter
in
leave
leave
push
sub
fs
enter
xchg
dec
mov
add
inc
popf
icebp
ljmp
fiaddl
setb
icebp
ss
insl
in
jmp
xchg
ljmp
test
shrl
je
add
mov
fwait
push
or
dec
mov
aam
mov
add
dec
jle
repz
or
lock
addr16
clc
jne
sbb
jb
ds
push
lods
outsb
or
sub
es
enter
or
test
cmp
jmp
xor
xor
gs
jns
jo
push
dec
int3
sbb
daa
jge
int
les
mov
test
stos
cmp
cmp
and
filds
inc
push
pusha
mov
and
add
jmp
or
lock
push
fnstenv
jns
movl
adc
sub
jnp
jmp
lea
mov
and
mov
jbe
mov
xor
inc
jmp
mov
aad
or
lcall
nop
dec
push
div
out
rcrb
ljmp
add
pop
jno
mov
push
out
inc
xor
cmp
jne
push
and
push
jg
call
testl
inc
or
aad
cmc
sbb
loop
mov
lret
or
fwait
stc
in
and
inc
adc
lcall
shrb
pop
shll
dec
pop
testl
pop
sarb
in
lds
fidivrs
inc
adc
add
rcrl
jg
rol
adc
adc
in
mov
loope
ss
jmp
xchg
mov
mov
je
idivb
orl
sbb
pop
add
pop
into
push
jne
mov
mov
dec
scas
or
rorb
lds
or
jmp
inc
pop
hlt
mov
cmpsb
jns
fisubrs
cltd
sbb
sbb
sbb
dec
sbbb
inc
adc
lret
repnz
iret
je
dec
or
aas
adc
popa
orl
test
sbb
xor
mov
ss
test
jle
stc
xor
lock
lods
in
imul
lcall
pop
jmp
dec
ret
mov
pusha
pop
add
lret
mov
cmc
cli
mov
aam
adc
xor
cmp
bound
ljmp
pop
pop
xchg
popl
dec
xor
cli
xor
pop
sbb
inc
cmp
outsl
push
push
xor
cmp
and
dec
dec
adc
data16
xor
lret
adc
test
push
mov
push
fdiv
xor
dec
or
xchg
dec
ja
push
xor
sub
sub
cmp
mov
jns
loopne
in
xor
inc
xchg
iret
je
mov
icebp
push
outsb
pop
lods
adc
dec
lcall
dec
fs
mov
dec
mov
jmp
stos
fisubs
sub
or
xlat
pop
movl
mov
outsl
dec
dec
adc
add
xor
cmpl
adc
inc
cmp
std
jmp
cmp
xor
ficoms
idivb
cmp
movsb
repnz
pop
leave
pop
adc
or
arpl
cmp
lahf
and
out
in
pop
es
xchg
dec
and
into
fldcw
and
je
jne
gs
push
mov
movl
lea
movsb
inc
je
push
dec
insl
call
outsl
pop
jl
adc
sti
xchg
fisttps
mov
lcall
mov
pop
sbb
fs
push
pop
push
push
icebp
inc
shrb
out
lds
and
in
and
jmp
ret
jno
push
cmp
xchg
push
mov
mov
jb
push
jns
icebp
jns
jnp
jmp
inc
xor
xor
movsb
and
ffree
inc
adc
inc
and
popf
xor
cmp
xchg
push
call
ret
add
push
dec
mov
data16
ret
push
pop
sarl
xor
in
jp
inc
ljmp
add
push
adc
sub
push
jno
adc
sub
add
or
xchg
adc
lods
lret
dec
cmc
inc
ja
sti
pop
pop
mov
les
sti
negb
add
xchg
inc
test
push
stc
lahf
in
dec
dec
lods
or
repz
jo
and
dec
xor
pop
pop
xchg
inc
fbld
sbb
pop
push
dec
loopne
cmp
jmp
mov
inc
dec
pop
fwait
repnz
sbb
sub
cmp
jnp
cmp
xorl
dec
inc
out
out
fimull
push
out
pop
jmp
xchg
jns
xor
dec
outsb
imul
pop
imul
es
sbb
adc
add
adc
add
pop
rorl
or
or
dec
scas
pop
in
add
push
mov
inc
or
dec
pop
enter
pop
mov
ret
or
mov
cmp
sahf
or
shlb
clc
insb
push
adc
iret
xchg
cmc
stc
jne
and
jmp
mov
mov
add
rclb
adc
es
std
aas
xor
cmp
mov
fbstp
inc
ss
stc
push
xchg
sbb
enter
mov
dec
add
into
mov
mov
pop
test
ja
cld
repz
shlb
mov
pop
in
and
mov
cmpl
sbb
or
dec
repnz
loope
mull
pop
loopne
mov
push
and
cmp
cltd
jmp
adc
fisubrs
call
cmp
adc
mov
cmp
pop
xor
int
dec
cmc
fs
stc
jecxz
inc
xchg
enter
sub
mov
pop
and
mov
add
adc
fistpl
add
shlb
inc
xchg
gs
adcl
cmpsl
jl
mov
add
pop
and
mov
jo
xchg
lock
lret
mov
jne
arpl
out
xor
lahf
cmpsl
call
lret
dec
mov
push
push
outsb
lea
inc
push
aaa
fistps
jne
pop
adc
mov
or
ss
dec
cld
aam
or
test
roll
add
jno
sbb
sub
mov
fsubr
xchg
daa
add
aad
loope
iret
divb
fs
mov
add
les
loope
dec
jnp
push
xchg
fldenv
leave
cs
and
insb
iret
sti
outsb
xchg
or
sub
xor
fcomps
call
jg
outsl
shrl
test
xchg
aaa
add
pusha
je
mov
pusha
push
push
sbb
and
test
call
sub
jb
pushf
push
jbe
ljmp
lret
popf
xchg
xchg
fnstenv
dec
shll
xor
enter
or
js
add
jmp
xor
cmp
stos
ret
jae
jg
dec
rolb
xchg
int
je
repz
xchg
jne
imul
lahf
sub
jg
sbb
cmp
jns,pn
movl
and
in
mov
rcrb
sub
cld
jmp
push
mov
scas
mov
xchg
lret
mov
mov
and
jbe
sti
push
dec
mov
testb
xor
cmp
dec
sbb
ffreep
xor
cmp
movb
cmp
jmp
add
mov
pop
fwait
pop
sub
stos
nop
fisttps
sahf
mov
add
lret
pop
pop
xchg
aam
ds
std
adcb
cli
bound
add
idivl
xchg
popa
lahf
mov
insl
mov
cmp
outsb
das
fildl
push
push
div
fldenv
adc
jl
inc
mov
xor
mov
add
fxch
ss
jno
aas
push
cmpsl
testb
mov
pusha
or
mov
xlat
cmpl
jle
mov
push
sbb
adc
and
jp
icebp
jae
xor
pop
hlt
data16
clc
shlb
insl
gs
jbe
cmp
xchg
iret
mov
jg
popa
jecxz
pop
nop
jge
mov
add
scas
cli
test
or
push
jb
mov
pop
jmp
pushf
cmp
and
push
out
dec
inc
xor
std
popf
testl
inc
jo
out
jne
mov
add
dec
mov
mov
dec
push
push
lds
iret
call
jne
in
push
jle
xchg
xchg
aad
mull
xchg
arpl
cmp
mov
mov
ret
jae
push
cltd
int3
call
sahf
mov
imul
jns
dec
iret
add
and
int
into
pop
fwait
lret
sahf
popf
mov
xor
andl
or
notb
aad
lret
stos
call
jl
or
or
cmpsb
jle
push
call
and
negb
xor
nop
cmp
and
xchg
push
sbb
pop
and
call
in
pop
and
add
push
and
xor
jl
sub
add
adc
add
outsl
mov
push
jl
testb
mov
inc
cmpsl
pop
xor
clc
fdivp
dec
int
sbb
jmp
or
pop
jp
pop
sarb
mov
ret
mov
and
int3
mov
push
push
mov
call
cmp
push
push
pop
adc
push
mov
jo
jg
sub
fsts
sub
call
or
xor
inc
outsb
xchg
jg
jne
cmpsb
in
adc
jl
or
jge
xchg
adc
sbbl
xorl
pop
loop
cltd
xor
xlat
cmp
mov
nop
mov
inc
jns
int
enter
loope
mov
mov
sub
jmp
or
push
pop
int
cmp
and
jge
test
lahf
dec
ror
dec
sbb
xchg
xor
push
rorl
cmp
jno
out
mov
mov
jnp
shlb
pop
out
sahf
mov
in
das
aam
push
mov
pop
dec
pushf
jns
sbb
sub
jmp
or
xor
addb
test
aam
aam
jmp
mov
rclb
xchg
out
push
mov
bound
cmp
inc
mov
mov
xchg
clc
push
out
xor
stos
mov
push
push
cmp
mov
shlb
insb
imul
or
cltd
adc
lea
pop
fwait
xor
es
mov
dec
and
xchg
sar
sahf
clc
in
lret
and
js
lcall
jg
daa
adc
iret
test
and
inc
cltd
not
fisttpll
cltd
inc
loopne
cld
dec
xchg
adc
add
inc
out
jbe
stos
jge
pop
iret
pusha
push
jne
test
inc
aam
push
push
fisttpl
icebp
arpl
loope
cmpb
push
dec
inc
sub
rcrb
pop
ds
add
loop
cmp
push
fwait
fs
push
jb
xlat
das
push
arpl
sub
sahf
xor
push
push
call
xchg
adc
popf
aam
data16
nop
je
lahf
rcl
fisttps
sbb
cmpb
je
jnp
out
mov
dec
add
leave
clc
jmp
inc
xor
pop
jge
andb
aas
mov
jae
fildl
es
test
or
in
mov
mov
mov
jle
push
mov
stc
insb
lahf
mov
ret
sti
int3
push
loop
mov
inc
or
or
leave
push
jo
pop
push
addl
pop
or
rclb
int
jb
shl
fdivrp
pop
add
and
push
xchg
mov
in
add
cmp
movsb
insl
sbb
lret
mov
jno
movsb
cltd
mov
stos
cmp
push
mov
inc
shlb
fildll
xor
int3
ljmp
popa
adc
int
jb
mov
pop
mov
mov
jecxz
inc
js
pop
scas
xchg
mov
fsubrl
arpl
outsl
sarl
xchg
scas
jo
cmp
mov
lcall
jl
out
jecxz
add
js
loope
sbb
sub
repnz
mov
inc
arpl
add
imul
fcoml
les
xchg
fldt
adc
mov
inc
xchg
jmp
clc
add
xchg
rorl
fnstenv
inc
and
jbe
cli
and
push
mov
and
orb
xchg
outsl
rorb
mov
imul
rcl
and
xor
enter
mov
loope
jle
in
inc
ftst
flds
jb
push
addr16
dec
loopne
jl
jge
jo
in
mov
sub
subl
cmp
sub
xchg
and
xchg
adc
push
sti
pop
pop
adc
out
iret
and
mov
cmpsl
jg
int3
enter
dec
insb
pop
jns
cmp
int3
mov
arpl
pop
xlat
xchg
add
or
push
mov
mov
nop
inc
call
cli
cmp
push
mov
sbb
mov
cmp
or
insb
cmp
rcl
insl
dec
sbb
add
push
push
mov
call
and
jbe
loopne
pusha
jp
jae
sahf
dec
jmp
jne
dec
dec
xchg
ret
push
adcb
push
loop
lock
pop
cmp
mov
popf
cmpsl
push
aad
sbb
pushf
popf
cmpb
jne
ret
dec
addr16
fisubrs
adc
inc
lret
shrb
mov
jmp
mov
push
cmpb
or
dec
aam
or
lret
xchg
js
mov
sub
mov
cs
mov
xor
inc
or
lods
outsb
or
push
je
popa
push
js
pop
imul
je
stos
loope
mov
cli
fs
jbe
mov
jns
dec
fsubrp
add
mov
pop
ljmp
push
arpl
cmp
das
aam
adc
cmp
nop
movsb
int
add
pop
je
lods
gs
pop
insb
and
sub
call
cmpsb
gs
sbb
dec
aaa
in
repnz
nop
cld
mov
fcmovbe
out
enter
pop
push
sub
das
jecxz
notb
xchg
data16
sub
and
shll
insl
sbb
add
lods
mov
imul
inc
in
mov
adc
xchg
push
arpl
push
push
pusha
add
push
adc
outsl
repnz
pop
and
adcb
lock
aas
dec
test
inc
xor
and
push
cmpsl
mov
into
add
mov
mov
call
hlt
popa
adc
subb
xor
push
push
insb
test
imul
shr
sbbl
out
enter
popa
repnz
dec
aad
popa
jge
inc
enter
mov
push
call
lock
imul
add
mov
xchg
pop
xchg
mov
jne
cmp
loope
fldt
lods
inc
adcb
cmc
dec
push
mov
push
imul
call
scas
decb
outsb
jl
fldl
lret
lea
xchg
int3
imul
pop
sbb
and
sub
fisttps
jbe
xor
xor
call
test
divl
mov
push
push
test
lock
cli
lods
in
fsubs
les
jo
adc
lock
mov
push
mov
add
pusha
mov
loope
xchg
and
std
test
dec
jg
ret
mov
jno
pop
sub
outsb
lods
shll
hlt
xchg
jmp
aas
xchg
test
cmpsb
loope
cmpb
cwtl
push
cs
mov
xchg
mov
inc
int3
or
test
dec
push
cmp
sub
int3
out
jmp
push
mov
sub
push
adc
jl
mov
and
sbb
and
js
sub
jb
adc
cmp
push
add
mov
js
push
jo
cmp
sbb
ret
xchg
pop
or
and
add
decb
xchg
mov
cltd
imul
inc
daa
aad
test
negb
clc
outsb
inc
and
iret
sub
xor
or
out
mov
int3
enter
jmp
and
xchg
clc
xchg
xchg
test
out
call
or
jg
inc
pop
jge
jns
adc
sub
fs
fisubl
imul
rolb
int
fidivs
icebp
mov
loop
and
sbb
add
pusha
insl
inc
dec
inc
xor
gs
test
sbb
rorb
and
shl
sbb
xor
and
xchg
std
or
jnp
outsb
xchg
test
sahf
shll
pushf
sub
sarb
nop
out
cmpsb
inc
rcrb
mov
std
fsubrp
js
insb
mov
jo
stos
dec
or
loope
sbb
pusha
push
mov
dec
push
mov
dec
shl
xchg
mov
mov
fs
outsb
sub
test
out
xor
push
imul
push
int
and
fucomi
cmp
rorl
rcr
lret
and
dec
mov
adc
rcrl
dec
add
dec
dec
xlat
push
nop
int
jo
dec
mov
bnd
sahf
cs
push
jbe
bound
movsl
pop
in
jae
push
mov
mov
jp
stos
mov
cwtl
lock
or
aam
cld
fadds
add
inc
enter
ljmp
jnp
dec
call
in
pop
aad
push
push
cs
jle
mov
outsl
jns
test
pop
lock
insw
xor
addr16
mov
push
cmp
mov
nop
xor
call
mov
mov
mov
fs
xchg
gs
jmp
push
pop
stos
fisttpl
sub
call
pusha
xchg
daa
inc
cmp
inc
xchg
mov
lret
xor
mov
test
mov
mov
sub
ret
in
mov
dec
xorb
inc
xchg
lock
adc
add
fidivrs
mov
repnz
jns
pop
pop
call
outsb
jno
mov
mov
xchg
pop
scas
mov
xor
dec
call
into
mov
push
dec
add
sarb
mov
ficomps
sbb
flds
cwtl
mov
mov
pop
mov
test
popa
mov
repnz
idivl
or
push
cwtl
mov
jne
bound
repz
imul
rorb
cmp
or
iret
adc
out
hlt
je
dec
lret
scas
mov
pop
xchg
into
shr
adc
lock
fwait
xorb
jg
jmp
inc
push
mov
push
andb
sbb
sbb
push
pop
jne
addr16
dec
xchg
mov
adc
pop
jno
push
add
sub
icebp
sub
je
or
or
ret
roll
push
call
sbb
jle
ret
mov
mov
imul
jmp
mov
loope
mov
outsb
lret
mov
data16
outsb
sbb
adc
cmpsb
mov
bound
test
add
mov
ret
adc
rcr
das
cmc
out
pop
and
push
mov
and
out
sbb
addr16
cltd
es
int
pop
ret
mov
xlat
enter
clc
cmp
sbb
js
sbb
jp
push
mov
sbb
sbb
mov
xor
or
lret
gs
and
jp
rcll
mov
or
push
cwtl
and
pop
cmp
mov
lahf
cmp
data16
sbb
sub
sub
lret
negb
adc
mov
push
push
data16
push
mov
lods
push
cwtl
sub
pop
cmp
cltd
push
pop
call
adc
push
decl
jmp
push
call
or
xlat
gs
iret
loopne
cli
inc
mov
subl
mov
stc
gs
xor
xchg
or
cli
xor
cli
xor
cltd
sub
mov
dec
pop
add
cltd
in
jnp
in
mov
push
push
or
loope
pop
ss
dec
and
hlt
test
dec
pop
xchg
push
and
jmp
xlat
dec
and
pushf
nop
mov
xor
data16
imul
stos
int
xor
sbb
pop
fwait
fwait
add
fldcw
push
mov
cmp
rcll
xchg
mov
jl
pop
loopne
or
sti
lcall
adc
push
mov
cltd
movsb
cmp
test
sbb
sbbb
adc
mov
jmp
movsb
xchg
add
gs
push
pop
inc
popf
stc
mov
je
jmp
mov
nop
lahf
add
mov
test
mov
cmpsb
and
test
test
jae
mov
sub
fsts
xchg
add
scas
test
movsb
pusha
pop
adc
mov
inc
xchg
shrb
cmp
data16
adc
xor
push
add
cs
mov
push
push
mov
adc
loopne
repnz
mov
cmpsl
repz
stc
loopne
cmc
jge
aam
testl
loope
cld
jle
pop
and
adc
or
test
push
mov
dec
mov
fdivrs
mov
mov
dec
aad
xchg
dec
push
imul
mov
clc
fs
or
ljmp
dec
push
mov
push
hlt
shrb
xor
pop
fdiv
xadd
adc
adc
jne
iret
pop
xor
call
sub
ret
add
sbb
pop
insb
imul
mov
inc
dec
push
outsb
push
push
sub
cmp
cmc
and
je
or
pop
xchg
push
and
pop
fldcw
pop
lret
pop
lock
testb
dec
dec
pop
xor
push
jg
es
xchg
cmp
daa
imul
mov
scas
scas
repnz
test
test
mov
je
pushaw
or
in
xor
push
push
mov
lcall
cmp
and
adcb
push
dec
aam
sub
pop
js
dec
sub
and
test
pushf
ss
mov
inc
sub
xchg
push
sub
or
or
aaa
imul
sub
pop
mov
adc
push
sub
mov
call
jo
jl
jecxz
xor
pop
sbb
and
push
pop
and
sbb
test
je
sti
rcll
ret
rorb
inc
cmp
jle
stos
rorb
mov
clc
adc
std
add
add
dec
push
outsl
popf
pushf
dec
addr16
and
dec
or
bound
xchg
insl
xchg
int3
jmp
jo
test
or
testb
pop
sub
sbb
jge
sti
pop
out
imul
lods
dec
movl
dec
lret
xor
dec
addr16
xorl
imul
arpl
or
nop
pop
jno
cmp
hlt
es
push
or
arpl
adc
daa
adc
dec
dec
popa
arpl
xchg
jbe
sbb
cmc
leave
push
push
push
push
adc
jecxz
aas
test
sbb
iret
add
cmp
hlt
movl
add
push
icebp
inc
das
push
mov
nop
and
daa
repnz
dec
in
add
dec
pop
aaa
movsb
jg
loop
in
or
xchg
jle
pop
cld
scas
lock
push
jne
or
hlt
leave
and
aaa
mov
push
dec
xchg
enter
mov
leave
sub
push
or
pop
iret
mov
leave
cmp
out
xchg
sub
adcl
call
daa
cmp
dec
icebp
mov
inc
jmp
roll
mov
fistpl
cmpsb
out
ret
cmp
lahf
xor
fists
lods
or
insl
add
cmp
repz
adcb
push
dec
addb
cmp
notb
and
inc
mov
shlb
cs
cmp
xchg
ret
sub
and
push
out
xor
out
shrb
sub
dec
loope
mov
and
hlt
daa
out
lea
and
inc
mov
dec
ret
leave
cmp
xchg
xor
hlt
inc
insb
sub
sbb
nop
out
xor
cmp
jge
cmp
rcrl
in
ret
adc
dec
cs
jge
cs
ss
and
dec
icebp
daa
or
sub
and
sub
leave
sub
sahf
cwtl
aad
cmp
sub
jl
xchg
xchg
inc
icebp
mov
and
inc
sub
or
push
enter
jg
cli
lods
decb
lock
push
daa
xchg
sub
pusha
loopne
stc
add
sbb
dec
cmp
iret
jne
das
xor
mov
dec
lods
aaa
adc
adc
dec
rolb
mov
stos
sbbb
shrl
test
jmp
imul
daa
iret
mov
add
push
mov
adc
pop
cs
call
int3
fdivrs
in
pop
invd
xchg
aam
add
dec
mov
push
xchg
ss
push
push
scas
dec
idivl
rorb
or
popa
lods
outsl
jg
addr16
dec
mov
cmpsb
mov
jl
pop
cli
andb
addr16
cltd
in
jnp
in
je
out
inc
pushf
shll
hlt
movsb
int
xchg
dec
mov
xchg
jmp
mov
lret
jbe
aaa
outsl
xchg
inc
jno
les
lock
jge
jp
rep
mov
cmp
call
adc
in
cmp
les
js
xchg
xor
xchg
std
fldl
fnstsw
stc
inc
inc
fstpt
std
mov
leave
test
adc
adc
shll
testb
sbb
cld
pop
mov
sbb
xchg
loope
sti
mov
push
mov
and
shr
jmp
fwait
call
lea
and
xchg
cmc
out
mov
inc
mov
call
fidivrs
pop
je
dec
mov
push
adc
data16
clc
mov
mov
push
add
shlb
in
pop
into
push
dec
sbbb
scas
add
ret
call
test
and
pop
cld
ss
mov
fidivrl
icebp
je
lea
fs
pop
call
dec
pushf
cmp
xor
pop
fnsave
jns
iret
jne
or
mov
iret
repz
loopne
push
sub
cld
call
mov
dec
movsb
inc
mov
push
cmpsl
mov
mov
push
xor
cmpsl
test
lock
xchg
jp
push
xchg
lahf
adc
jmp
out
in
dec
sub
cmovp
jno
ret
dec
stos
inc
lcall
push
arpl
fmull
sub
or
outsl
xchg
int3
call
dec
cmc
sub
psubq
call
cmc
inc
in
shlb
dec
mov
lret
adc
sbb
lret
push
push
ror
cltd
or
mov
scas
leave
pusha
and
xchg
and
mov
mov
inc
add
pop
push
cltd
push
mov
call
repz
jl
sahf
daa
mov
push
push
pop
sti
xchg
test
lock
lcall
push
outsb
movsb
cld
or
mov
cltd
shrb
push
jg
andb
pop
call
lahf
and
inc
testb
js
and
jb
js
test
hlt
repnz
xchg
inc
and
sub
lea
fisttps
adc
or
out
jnp
in
test
scas
jp
mov
inc
lods
dec
ror
pop
push
push
lods
int
adc
cmp
sbb
sub
mov
outsb
hlt
mov
leave
pop
mov
pop
xchg
pop
push
shr
daa
cs
add
shll
les
add
jmp
pop
fs
pop
iret
iret
mov
xor
mov
pop
jnp
test
sub
cmpsl
gs
cmp
ret
xchg
or
inc
sub
dec
arpl
popf
pop
lea
sub
xchg
pop
aad
mov
mov
push
negl
in
xchg
push
stc
mov
push
dec
divl
or
clc
lret
mov
xchg
jg
test
popf
xchg
jmp
push
or
cs
add
push
inc
push
sbb
push
xor
adc
inc
xor
xor
andb
add
cmp
cltd
xchg
mov
xchg
or
in
inc
sub
out
aaa
sbb
neg
add
aad
add
lret
or
in
add
cmp
xchg
shrb
hlt
rcrl
inc
cmc
outsb
or
xchg
adc
popf
add
sahf
inc
fsubrl
add
stos
or
subb
imul
stos
push
pop
mov
fstps
push
aaa
dec
add
adc
dec
and
mov
ret
jo
add
pop
je
jl
and
bound
cmp
je
cmp
pop
xor
push
test
into
cmp
aaa
sti
std
jbe
repz
sub
pop
lea
add
aas
iret
jp
push
loope
or
negl
insb
xchg
sti
in
mov
inc
test
mov
cmp
fisttpll
fstpl
sarb
xor
call
push
jl
clc
jo
lock
outsb
popf
loopne
xor
push
mov
movsb
jmp
adc
adc
or
insb
pop
call
clc
or
lods
mov
pop
lea
add
push
fs
jae
rcr
call
ret
xor
shlb
cmpsb
imul
call
and
loop
add
hlt
mov
cmp
fisttpl
sahf
aam
clc
jl
inc
out
sub
fmul
cmp
fs
fcoml
es
mov
pop
jno
test
and
sbb
cmp
aas
cmpsb
inc
xchg
xlat
mov
jne
test
push
js
mov
lods
push
dec
jmp
or
push
or
cmp
jo
loop
leave
call
sbb
add
xor
call
add
mov
xor
xchg
xor
jecxz,pt
xor
jg
jecxz
push
fs
mov
fistps
orps
aas
mov
adcb
or
mov
mov
jne
fcoml
mov
pop
adc
sub
stc
in
inc
dec
or
shl
and
push
aam
mov
cld
and
adc
in
lds
int3
mov
leave
lcall
cmp
jmp
int
sub
xor
mov
gs
cmp
fmul
in
call
xor
or
ret
insl
pop
push
mov
lret
call
dec
pusha
sub
mov
xchg
jg
push
jle
daa
mov
jne
add
push
lahf
in
les
dec
cs
pushf
loopne
cmp
pop
ds
dec
je
test
js
add
je
cwtl
dec
and
lret
lea
out
push
jmp
xchg
imul
dec
adc
ja
les
enter
stc
aas
jl
mov
cltd
pushf
cwtl
bound
sar
idivb
push
inc
dec
or
out
rclb
in
je
into
xchg
mov
push
fsts
jmp
adc
cltd
add
sub
je
xor
push
iret
jne
lods
inc
dec
mov
xor
inc
mov
push
pop
cmp
xor
fdivrs
sbb
xchg
jecxz
push
push
push
mov
cmp
inc
aaa
xor
mov
aas
xchg
push
ss
inc
sti
mov
out
push
lock
mov
push
add
push
cmp
stos
hlt
rcrb
xchg
stos
movsb
push
test
push
cmp
ds
imul
in
loopne,pt
cmp
mov
push
or
and
test
pop
jne
mov
cmp
nop
gs
and
xor
scas
dec
les
cmpsl
imul
hlt
dec
add
gs
push
dec
in
sub
mov
ljmp
outsl
movsb
loopne
stc
popa
pushf
pop
outsl
push
cltd
mov
sahf
mov
mov
xor
jg
mov
sbbb
dec
in
push
mov
inc
and
pop
repnz
test
hlt
daa
push
jg
mov
stc
call
mov
cmpsb
pop
insl
push
stos
dec
cmpl
sbb
xor
fcmovnbe
call
movsb
ret
notb
aam
test
sbb
movsb
and
in
clc
jmp
into
iret
adc
sahf
rorb
adc
lods
lea
add
inc
test
jnp
lock
pop
rcr
dec
sub
in
enter
pop
outsl
je
or
jno
cs
dec
xchg
lock
scas
xchg
adc
das
sub
lods
mov
imul
jo
lods
and
insb
push
xchg
adc
dec
gs
xchg
xor
mov
addr16
lcall
out
out
dec
xchg
sub
mov
int
insb
jp
insl
jns
dec
sub
iret
clc
mov
sub
sub
das
out
shll
xlat
lret
insb
xor
mov
int
push
xor
mulb
insl
mov
cmp
mov
mov
add
mov
xchg
dec
xchg
lods
mov
icebp
jmp
jno
push
sbb
or
or
cwtl
sub
or
cwtl
addr16
push
inc
test
add
push
pop
mov
lret
pop
xchg
cld
xchg
bound
enter
movsl
push
dec
lds
cli
fmuls
test
cmc
pop
cli
pop
lahf
add
ret
out
rorb
add
jns
sub
stos
dec
mov
ror
add
ljmp
addr16
or
movsl
hlt
mov
lds
rclb
xchg
loopne
push
mov
xor
sti
out
mov
cltd
aam
fildl
shlb
movsb
pusha
cmp
adc
loopne
lock
push
push
ret
vrsqrtps
in
adc
adc
jmp
pushf
push
fsubrp
adc
xchg
leave
in
push
sub
mov
dec
pop
mov
adc
push
cltd
cmp
out
les
xchg
popa
mov
int
jae
test
dec
mov
adc
call
hlt
mov
hlt
addr16
push
xor
loope
dec
push
mov
pop
dec
sub
leave
mov
xor
dec
and
jbe
or
push
shr
inc
int
cmp
imul
gs
pop
mov
xchg
data16
mov
dec
lret
test
ja
dec
pop
jle
mov
xor
mov
ret
cmp
icebp
mov
inc
pop
cmp
popa
cmp
repz
xchg
hlt
add
clc
or
jmp
popf
xchg
pop
push
or
cs
loop
subb
test
aam
fidivs
mov
mov
add
push
sbb
lret
daa
data16
shlb
sti
loopne
jae
call
faddp
push
out
jmp
aam
sbb
dec
cmpsl
lods
cwtl
in
sub
loop
leave
adc
fwait
call
cmp
jmp
stos
mov
shl
rcll
inc
es
fcoms
mov
fistpll
cmp
fbld
fdiv
lret
pop
xor
adc
xchg
dec
shl
cmpsl
movsb
cmpsl
pop
cmp
and
ret
or
sub
jbe
push
push
add
ret
call
mov
sbb
in
sbb
xor
scas
mov
push
mov
int3
jb
dec
jbe
jno
sbb
and
pop
je
mov
fwait
sbb
iret
push
mov
sbb
jb
mov
movsb
in
ficoms
mov
mov
sbb
jmp
push
jle
jnp
mov
dec
pop
xchg
in
adc
call
pop
adc
adc
cs
xchg
aad
xchg
push
sub
popa
inc
orl
mov
push
push
push
lret
dec
push
lahf
add
dec
pop
jo
aam
or
into
xor
movsl
sub
cmp
or
inc
lea
xchg
fadds
sahf
test
pop
pop
and
stc
aas
push
mov
xor
repnz
mov
push
orb
pavgb
push
fnsave
push
xor
hlt
sbb
negl
lock
push
sub
jmp
aas
insl
jno
outsl
inc
cwtl
stc
cli
iret
nop
mov
push
jmp
adc
push
lgdtl
jbe
push
jo
cmp
pusha
repnz
leave
pop
and
lea
orb
test
fildl
dec
sub
fisttps
mov
push
add
int
imulb
lret
sbb
outsb
ds
aas
inc
jb
push
negl
arpl
push
xchg
scas
lahf
mov
or
sub
mov
push
movsl
insl
repz
fistpl
inc
push
addr16
inc
xor
out
aam
cli
jae
pop
xor
int
and
push
lea
popa
mov
lret
inc
adcb
xchg
leave
push
shl
inc
push
xchg
push
cli
mov
ja
stos
push
xor
sub
adc
jne
fdivp
pop
push
and
ss
nop
xor
adc
movsb
mov
xchg
adc
and
fs
nop
hlt
cmpsl
sub
data16
and
add
repz
push
xchg
cmp
jns
repz
loope
into
and
xchg
in
es
cld
push
cmp
iret
into
sbb
cwtl
adcb
call
daa
test
adc
xchg
mov
push
jg
push
mov
fisttps
pop
jbe
dec
out
pop
sub
push
push
push
daa
fiaddl
xor
sbb
and
xlat
sub
push
imull
add
sbb
shlb
popf
mov
shl
mov
nop
and
add
fwait
je
cmp
lret
sti
je
mov
in
jmp
ret
jo
stos
std
jle
incb
mov
ja
call
and
test
icebp
lcall
dec
in
inc
icebp
mov
cld
mov
inc
repz
dec
fisttpll
into
aad
lret
inc
sub
push
std
push
push
aam
or
outsl
ja
cwtl
jle
stos
xor
xchg
or
shr
enter
cld
adc
xchg
lcall
mov
sub
adcb
add
outsb
adc
jl
inc
subl
pop
xchg
shrl
icebp
in
int
mov
ret
xor
adc
lock
in
fwait
incb
lcall
dec
adc
pop
or
cmp
inc
stos
fiadds
mov
mov
sbb
and
je
pusha
pop
cmc
mov
pop
aaa
mov
dec
test
add
push
push
repz
add
xchg
pop
xor
sub
mov
pop
subb
dec
mov
orl
je
push
xor
out
push
stc
dec
dec
push
roll
test
pop
das
inc
sub
sti
and
fcoml
sub
data16
jne
int
or
add
sub
add
inc
pop
xchg
call
inc
loop
movsl
lods
out
and
insl
ficompl
mov
add
mov
xlat
push
pop
adc
push
mov
push
enter
jl
sub
jmp
bound
pop
cli
dec
dec
out
push
pop
push
lods
pop
gs
mov
scas
call
mov
lock
and
pop
dec
push
push
or
ja
in
push
mov
imull
adc
jge
push
pop
sub
inc
iret
dec
out
leave
cs
stc
ret
lahf
das
lock
imul
cld
pop
adc
call
cmc
push
fcoml
repz
xor
call
loopne
fmull
call
mov
stos
iret
stc
mov
mov
loopne
cli
xor
sarb
xor
gs
clc
popf
add
cmp
int3
jp
pushf
jae
xchg
mov
mov
push
xchg
dec
repnz
push
push
cltd
lcall
jmp
fbstp
leave
fxch
sub
add
ss
outsb
xor
mov
xchg
insb
add
into
pop
dec
cs
div
cmp
inc
mov
js
outsl
lds
and
pop
outsl
push
cmc
or
push
add
loopne
sbb
sub
or
push
sbb
lret
es
daa
ret
sbb
jmp
ret
mov
add
sbb
mul
fiaddl
fcoms
adc
inc
dec
or
imul
and
dec
cli
sub
neg
roll
mov
cmp
mov
lock
add
roll
push
mov
jb
mov
mov
xchg
jns
mov
adcb
mov
mov
nop
xchg
jmp
bound
inc
mov
call
inc
pop
mov
xor
ljmp
sub
or
pop
cli
lea
iret
popf
testl
or
ds
cmp
sbb
sbb
and
dec
cmp
cmp
inc
mov
fs
or
push
test
mov
imul
lock
test
fstl
pop
mov
je
sbb
sub
ja
mov
cs
daa
cmpsl
out
pop
dec
cld
cmp
jne
jg
rcll
cwtl
scas
inc
insl
cltd
xchg
sbb
push
jo
stos
fwait
ja
dec
imul
scas
xchg
lock
jae
xchg
fistl
mov
jnp
and
hlt
cmp
ret
or
lods
cli
aad
and
hlt
push
test
jbe
xchg
int3
fnstenv
mulb
fsubl
pop
mov
fcmovnbe
mov
mov
push
xchg
push
test
frstor
adc
jno
sbb
es
movb
push
push
sbb
push
lea
sbb
add
mov
jae,pt
lock
les
pop
ret
mov
dec
pop
shll
shlb
push
push
scas
mov
pushf
fadd
jbe
fwait
ret
mov
mov
cmpb
xchg
cmp
in
ds
push
aas
das
je
leave
aas
clc
push
jge
ss
cmp
push
je
sbb
jno
aaa
cmp
pop
pop
movsb
ja
das
and
or
int3
dec
adcb
notb
push
testb
hlt
jl
outsl
sub
in
gs
pop
lret
shll
std
pop
or
adc
stos
sahf
jne
enter
jno
dec
pop
and
or
scas
fs
mov
sti
sbb
ret
stos
mov
cmp
mov
call
cmpsl
sbb
inc
out
ds
mov
push
clc
and
fadds
lock
dec
mov
and
jl
mov
test
xlat
mov
mov
mov
cs
insb
inc
dec
xrelease
je
adc
loope
int3
adc
jo
data16
cwtl
data16
xchg
lret
sbb
shrb
shll
call
cli
mov
pop
add
sub
data16
lods
dec
aas
loop
mov
lock
lea
lret
jl
push
sbb
jne
cld
pop
rorl
cmp
stos
ds
in
or
or
jns
idivb
adc
mov
adc
mov
movsb
insb
cltd
andl
sbb
cmpsb
mov
and
xchg
jbe
dec
cmc
movsb
stos
pop
dec
aaa
jbe
ja
pushf
jae
dec
cs
loopne
push
jno
and
sub
xor
sbb
fsubrl
jo
pop
xchg
push
fsubr
push
push
shll
in
mov
jl
aad
repnz
lret
jmp
add
data16
repz
gs
adc
jecxz
jg
arpl
add
cmp
pop
adc
test
call
test
roll
repz
add
jmp
push
mov
in
or
jge
or
jl
lea
dec
dec
fisttpll
mov
call
mov
stos
xchg
bound
mov
push
outsl
fs
push
inc
or
idiv
dec
aas
pop
mov
jge
fidivl
cld
negb
js
stos
pop
sub
sarb
sti
or
mov
push
and
dec
cwtl
int3
cli
aam
je
mov
sar
je
or
cmp
enter
lret
call
dec
pop
pop
sbb
ljmp
aaa
add
lahf
clc
pop
and
iret
jae
jmp
lods
push
dec
lret
adc
ja
mov
pop
xor
lea
insb
add
daa
xor
add
adc
pop
inc
mov
sahf
mov
in
outsl
mov
sbb
dec
xchg
mul
in
xchg
in
repz
cmpsb
adc
cltd
nop
adc
stos
push
das
adc
push
jb
mov
pop
jne
fs
push
inc
mov
cmpsb
mov
mov
das
lods
push
sub
pop
push
test
pop
aas
jo
jb
cwtl
jecxz
or
out
mov
or
adc
jo
lcall
jle
stos
cmp
lock
or
sbb
lahf
fwait
cmc
neg
in
call
test
repnz
jmp
negb
loopne
aaa
dec
push
dec
xchg
jae
stc
adc
je
inc
test
push
mov
addr16
pop
cld
dec
test
test
loopne
pushf
dec
and
or
int
adc
push
lahf
rcr
pusha
es
out
ret
mov
addr16
adc
std
sub
dec
mov
mov
lret
push
les
add
imul
pop
dec
xchg
jmp
lcall
mov
dec
sbb
sub
jns
jnp
and
cld
mov
test
mov
inc
sbb
mov
lahf
and
call
dec
sahf
pop
mov
and
outsb
mov
push
in
cltd
mov
es
js
lret
call
gs
xchg
adc
fwait
or
jg
inc
cmpsb
cli
popf
and
dec
enter
jmp
pop
jl
lods
mov
sahf
or
inc
and
mov
jbe
fdivl
outsb
cmp
cmpsb
loopne
sub
inc
pop
push
jle
rcrb
lret
pushf
popa
test
xor
adc
lea
out
push
push
xchg
lret
cmp
adc
mov
mov
xor
xchg
dec
lods
fdivrp
hlt
inc
scas
cltd
adc
push
popa
push
inc
imul
ljmp
mov
sarb
mull
lods
lea
cltd
popa
sub
add
stc
xchg
xor
aas
sbb
jae
test
popa
cmp
push
test
mov
loope
stc
mov
push
pop
loope
mov
call
add
mov
fs
ljmp
or
and
shr
xor
xchg
mov
xchg
out
pop
jne
fbld
out
mov
mov
mov
jmp
fst
into
mov
call
mov
arpl
xchg
mov
outsb
sbb
call
inc
push
cmpsb
lcall
dec
cmp
and
or
or
bound
pop
mov
mov
mov
sbb
xchg
pusha
dec
call
sahf
and
pop
daa
pushf
xor
loopne
inc
sahf
shlb
push
sti
mov
inc
sub
jae
nop
pusha
xor
ds
jl
dec
adc
mov
inc
xchg
push
mov
jge
mov
push
dec
push
data16
pop
xor
pop
cmp
lret
gs
adc
int
shrl
push
ret
lret
push
xchg
mov
sbbb
divb
shlb
dec
mov
testb
sahf
pop
movsl
inc
insb
addl
jne
sub
in
pusha
xchg
jge
sbb
mov
gs
neg
dec
aad
subl
dec
popa
int3
mov
adc
inc
mov
or
mov
jae
xorb
mov
mov
adc
push
push
sub
sub
sbbb
imul
cmc
inc
jecxz
cwtl
lret
push
ret
sti
popf
xor
cmp
out
ret
adc
lahf
int
movsl
hlt
jae
or
xor
dec
push
mov
pop
or
fnstcw
pop
dec
push
out
and
and
js
dec
fcmovne
lret
pop
inc
or
xor
jbe
xor
sub
sti
mov
test
cs
xchg
mov
ja
in
arpl
xchg
scas
mov
dec
cs
or
out
repz
enter
hlt
jno
adc
icebp
mov
cld
rorl
lret
rcrl
movsl
mov
lahf
mov
call
cmc
insl
lret
or
test
outsb
jge
jmp
jb
or
inc
pushl
call
mov
enter
mov
scas
not
or
adc
popa
lret
xor
pusha
hlt
push
pop
mov
std
sbb
mov
gs
enter
mov
dec
addl
sbb
aad
or
adc
shrl
je
dec
dec
fldt
fistpl
adc
lret
das
call
sub
xor
bound
pop
xor
shr
cmpsb
sub
test
sbb
in
inc
and
mov
mov
push
lcall
divb
jo
push
jns
cmp
push
cmp
mov
jb
lahf
xchg
pop
stos
nop
mov
or
pop
push
or
lret
adc
popa
adc
fwait
aad
incl
push
inc
mov
hlt
sbb
in
imul
xor
ret
mov
push
jb
aaa
fcomps
jmp
xor
or
test
cwtl
or
rcrl
out
mov
mov
js
push
add
mov
les
call
jge
int3
xlat
lahf
add
bnd
xor
dec
arpl
out
hlt
loopne
je
add
les
loope
push
gs
pop
sti
cli
pop
dec
fst
divl
mov
jmp
cmpsb
mov
add
push
and
pop
fnstsw
and
iret
mov
mov
cmp
xor
outsb
mov
cltd
cmc
pop
push
ds
lods
lock
cmpsb
sbb
or
jl
xchg
mov
mov
stos
sar
cwtl
aam
flds
xchg
add
in
leave
add
dec
add
iret
loope
test
add
sub
insl
mov
mov
incl
xchg
pop
les
lock
adc
mov
movsb
ss
add
mov
fistps
lcall
adc
std
repz
sub
iret
enter
nop
je
wbinvd
enter
mov
cwtl
movsb
pop
lea
add
in
jo
cmp
pop
push
rcl
mov
pop
pop
repnz
in
popf
pop
push
xchg
fcom
call
mov
cmc
pop
aam
fsubs
dec
push
lret
pop
or
fcoms
xlat
jb
lret
push
leave
lret
mov
es
das
mov
outsb
xchg
push
sbb
jbe
push
ret
or
sub
lret
or
xlat
addr16
cmc
xor
fs
sbb
stos
push
or
mov
lret
sub
test
call
movl
and
ficoms
adc
jmp
and
mov
fdivrl
daa
aam
dec
sbb
enter
clc
xchg
xor
movsb
jmp
adc
insb
pop
xchg
loop
sub
ja
jae
adc
outsb
mov
divb
push
jno
mov
decl
pop
mov
mov
test
inc
push
lods
test
push
pop
push
pop
dec
xor
js
dec
sub
clc
push
lcall
push
push
xchg
lock
popf
dec
cs
icebp
pop
mov
xor
icebp
mov
enter
pop
movsb
and
pop
leave
rcrb
add
in
dec
add
adc
fldenv
out
inc
inc
cmp
xchg
gs
sbb
push
cmp
xchg
repz
out
push
cmp
xchg
cltd
add
lds
push
loopne
mov
xor
mov
adc
loop
inc
mov
loopne
jecxz
nop
cmp
mov
lock
in
cmc
inc
lret
pop
jle
adc
stc
cld
clc
out
pop
hlt
and
incb
mov
nop
popa
pop
mov
gs
xchg
dec
adc
xor
pop
add
jmp
iret
test
nop
popa
push
mov
call
xchg
mov
lcall
or
xor
mov
or
imul
movsl
cld
test
cli
shrl
xor
out
mov
clc
mov
ljmp
lret
pop
inc
lock
cli
adc
mull
in
dec
xchg
mov
pop
repnz
stc
xor
mov
or
addr16
mov
inc
mov
push
cwtl
pop
lret
arpl
cmc
std
clc
mov
hlt
push
stos
negb
in
xchg
or
fstps
or
addr16
enter
inc
mov
pop
sbb
push
jno
jae
repnz
xor
push
and
sahf
test
out
jge
mov
push
addb
nop
push
or
outsb
stc
popa
lods
mov
pusha
jae
push
sbb
sub
notb
pop
mov
pop
fs
inc
sahf
xchg
xchg
fmul
and
cmp
mov
xor
mull
pop
roll
cli
xor
orl
mov
js
push
popf
in
push
mov
push
jl
mov
lock
nop
cmp
icebp
pop
aas
cwtl
push
inc
mov
scas
xor
lea
int3
rclb
mov
lds
pusha
cmpsb
pop
loopne
bnd
dec
mov
nop
test
cld
sbb
fisubl
adc
cmpb
jg
stos
cmpsb
adc
cwtl
or
lahf
push
lock
lret
xchg
cli
cwtl
mov
aad
nop
xchg
push
test
push
addr16
popf
cwtl
dec
mov
jle
push
add
data16
adcl
lock
push
jle
sub
pusha
push
push
lahf
inc
pusha
jecxz
les
jo
sub
aas
or
dec
insb
scas
xchg
je
and
test
ja
pusha
jns
cmp
cmc
mov
jne
xor
dec
sub
dec
aad
jg
call
dec
mov
jne
add
loopne
dec
dec
sbb
aam
push
cmp
or
jle
testb
xchg
push
push
xchg
repz
pop
lcall
incb
push
pushf
sbb
shll
pop
mov
push
dec
sbb
jb
daa
cmp
mov
push
outsb
test
daa
or
pusha
sarb
adc
call
iret
sbb
movsb
dec
xchg
ja
out
jmp
enter
xchg
sarl
idiv
mov
sarb
rcl
cmp
xchg
pop
mov
cmp
out
rorb
fsubrp
jmp
pop
xchg
and
xchg
leave
into
in
mov
cmp
adc
call
lds
xchg
xor
jmp
stc
rorl
int
xor
ret
add
aaa
sbb
push
ror
cli
je
out
mov
jae
sub
cli
fcom
mov
pop
sahf
fdivs
jne
pop
xor
adc
mov
and
es
in
sti
in
jbe
sbb
shrb
int3
iret
call
testl
idiv
sub
dec
loopne
or
arpl
outsl
test
cmp
cmp
hlt
jecxz
jne
add
adcl
adcl
imul
hlt
xchg
jmp
inc
stos
lods
sub
add
ret
subl
enter
jb
xor
cwtl
ret
insb
cmpsl
mov
mov
mov
xchg
push
add
mov
xlat
sbb
out
or
decb
fs
ss
ljmp
jne
and
call
enter
je
mov
inc
or
jle
cmp
lock
cli
fs
shr
pop
sbb
sahf
jg
mov
out
rorl
lods
xchg
or
call
and
and
cmp
and
sbb
xor
inc
push
push
adc
xchg
sbb
enter
xor
sub
aam
outsb
jmp
adcl
sub
ljmp
dec
push
std
and
dec
add
aam
cmp
jae
lret
stos
pop
rcr
adc
push
xchg
jle
mov
in
cmpsb
inc
jno
cmc
xchg
es
mov
xchg
adcb
rorl
lock
xor
pop
xchg
pop
cmc
dec
xor
lret
sbb
push
mov
cwtl
mov
push
lret
jl
movsl
cmp
sub
rcrl
push
push
add
adc
xor
cli
push
add
lock
sub
jl
leave
pushf
fstpl
push
or
sbb
rcrl
adc
xchg
sub
daa
inc
adc
inc
mov
les
jne
adc
notb
push
add
adc
test
nop
push
mov
enter
jno
mov
xor
mov
lahf
out
add
call
inc
es
movsl
aaa
mov
adc
fidivrl
pushf
mov
jne
mov
imul
out
xchg
xor
inc
pop
cld
mov
jnp
adc
sub
std
in
dec
mov
xchg
iret
and
or
sub
test
or
mov
fldl
jmp
lcall
dec
xor
lret
dec
jg
pop
pushf
inc
lret
sbb
lret
clc
addr16
push
sbb
push
cli
sbb
inc
call
sarl
rorb
or
sahf
sub
push
sbb
and
pop
lods
push
stos
and
add
aas
and
notb
outsl
in
clc
sbb
push
xchg
lret
pop
sub
dec
sub
shl
inc
imul
std
dec
pusha
jmp
xor
cmp
pop
jecxz
push
xor
pop
out
test
pop
mov
jmp
sub
lods
out
push
push
jge
add
mov
cmp
pop
pop
fmull
pop
or
mov
cmpsb
ret
ss
ja
push
push
add
or
inc
jno
lea
es
hlt
nop
pop
js
sbb
push
lret
pop
cmpb
xor
push
lcall
ret
adc
fldl
dec
push
mov
call
stos
fsubs
dec
scas
imul
push
ret
cmp
jne
aad
adc
scas
mov
xchg
rorl
xchg
jno
inc
pop
xor
outsb
mov
mov
leave
pop
rorb
lea
mov
inc
outsb
adc
sub
call
repz
xchg
or
dec
stc
jl
aam
es
fnstcw
inc
or
cmp
pop
jne
pop
xchg
stc
addl
icebp
incl
cld
lods
xchg
int3
adc
sti
pushf
push
cmc
dec
sbb
jle
mov
cmp
or
icebp
dec
pop
xchg
sbb
push
push
jbe
xchg
cli
ljmp
lret
and
add
push
xor
jne
cli
mov
mov
lahf
cmp
push
fs
and
or
scas
aas
xor
dec
jb
pop
sti
sub
sbb
fldcw
xchg
into
sbb
jae
pushf
dec
sti
sbb
and
sti
rorb
fstl
sti
lock
cli
into
xchg
jnp
popf
imul
xor
dec
and
mov
es
sbb
lods
push
sti
dec
add
ret
cli
lock
leave
sbb
and
out
icebp
sbb
pop
jne
sub
add
shrb
out
add
jle
adc
cld
inc
push
jns
pop
dec
call
jg
jmp
jl
cmovne
dec
ss
ficomps
les
ss
psrlw
mov
ja
mov
cmp
inc
sub
stc
popf
pop
repz
xchg
or
mov
jmp
pop
jle
xchg
testb
mov
add
or
mov
sub
xchg
inc
enter
in
xor
decb
mov
dec
ds
sahf
push
xchg
loope
inc
lret
cmp
nop
pop
lcall
incb
xchg
enter
or
add
pusha
lea
xor
xchg
sete
inc
fwait
mov
sub
inc
xchg
push
rolb
dec
mov
add
or
push
adc
cmp
mov
pop
outsl
rolb
call
js
out
faddl
filds
rclb
lahf
jl
mov
cmpsb
sub
daa
rclb
lock
std
dec
pop
into
call
aaa
cmpsl
xchg
inc
or
mov
lcall
int3
wrmsr
adc
nop
gs
lods
lret
pushf
add
aas
shrl
mulb
mov
pop
xchg
or
enter
call
adc
push
xor
or
cld
push
and
int3
dec
dec
daa
mov
test
lahf
imul
testl
mov
add
push
mov
lahf
add
nop
lret
jns
imul
dec
lds
fistl
inc
jmp
pop
dec
sbb
stos
subl
rol
cmpsl
or
push
mov
or
jge
fnstsw
cmp
je
and
jge
int
cli
xor
sub
je
outsl
jo
add
sbb
lret
add
mov
mov
insb
lods
leave
cmp
pop
mov
jne
push
lret
pushl
mov
xchg
popa
adc
jle
mov
lret
dec
xor
or
or
xor
popa
shr
jae
sbb
in
mov
iret
dec
dec
loope
jns
lahf
enter
inc
mov
sbb
xchg
or
cs
adc
dec
dec
clc
push
lret
push
mov
leave
mov
mov
mov
mov
mov
lret
adc
jae
push
xchg
shrb
adc
push
ljmp
adc
xchg
adc
call
hlt
negl
inc
scas
leave
nop
mov
test
popa
jmp
repz
cmc
mov
xor
stos
inc
or
pop
scas
pop
int3
js
inc
dec
loope
jbe
aaa
inc
movsl
sub
ret
xchg
sbb
push
sub
ret
movsl
insb
cmp
mov
bound
cmp
add
jns
cmpb
pop
cmp
cs
and
mov
jp
xchg
sub
jns
lds
sti
push
icebp
je
rclb
mov
jge
adc
fildl
das
ja
adc
jae
orb
stos
ds
xor
call
outsl
mov
mov
cmpsl
gs
xchg
xor
push
or
into
call
aad
xor
std
push
dec
xor
repnz
lcall
pop
iret
outsb
and
jne
jp
dec
dec
cmp
and
popa
jp
or
cmp
pop
int
xor
icebp
jmp
lahf
mov
cmp
pusha
cmp
cmp
out
outsl
mov
pop
pop
test
stos
int3
inc
pop
adcb
call
sahf
les
test
int
nop
cmp
push
jo
fwait
sbb
xor
sub
lock
loope
xor
icebp
push
stc
jbe
jmp
lods
dec
cmp
mov
push
mov
or
push
dec
cmc
xchg
jne
xchg
int3
repnz
mov
pop
cmc
and
std
xor
jp
es
mov
adc
cltd
out
pop
pop
dec
inc
imul
sti
gs
leave
or
mov
cmp
enter
addl
fnstenv
push
lea
mov
mov
adc
sar
mov
movsb
insl
mov
push
repnz
enter
aas
push
sbbb
ret
je
test
mov
dec
pop
mov
jnp
lods
sub
add
pop
dec
inc
xlat
push
sbb
ret
push
nop
dec
add
cltd
sub
add
push
push
cmp
js
call
push
jne
clc
imul
pop
insl
push
cmp
mov
dec
sub
pop
push
push
mov
bound
dec
add
loopne
adc
mov
adc
xchg
je
divl
sbb
push
cmp
inc
push
enter
loopne
shll
or
out
sub
cltd
dec
add
inc
add
jge
or
test
mov
out
arpl
call
or
enter
pop
mov
jae
or
dec
into
and
mov
dec
lea
sti
dec
js
mov
sbb
cwtl
decl
popw
push
cmp
lret
loop
sbb
jnp
sbb
inc
test
add
add
jp
enter
or
mov
sbb
int
add
pop
rcrl
cli
int3
cmp
push
aam
jmp
cli
aaa
stos
jno
push
push
mov
lods
push
popf
sbb
jmp
cmc
cmc
lret
dec
xor
cwtl
cmp
jno
cld
jno
lahf
push
or
push
xchg
add
call
dec
or
imul
push
lret
in
sbb
fs
int
sbb
cli
cmp
mov
inc
cmp
sbb
idivl
dec
imul
leave
je
push
push
dec
sbb
addr16
shr
cmp
cld
ficomps
add
mov
pop
xor
mov
pop
sti
fcompl
xor
jmp
mov
leave
sub
pop
movl
mov
push
mov
shll
rorb
movsb
mov
push
call
int
jg
sub
inc
je
fbstp
cmp
sub
inc
pop
dec
mov
sub
jne
scas
fsubrp
std
outsb
and
push
cmp
adc
inc
pop
out
push
call
in
std
inc
sbb
adc
daa
insb
dec
shll
iret
inc
mov
or
in
jnp
movl
cmp
pop
scas
jmp
int
sub
sub
and
hlt
push
fimuls
sbb
inc
jg
mov
repz
xchg
repnz
ret
pop
pop
aas
imul
ss
cwtl
add
jge
fwait
insb
je
xor
pop
pop
test
cmp
stc
in
push
and
jb
lds
mov
xlat
push
nop
mov
jns
inc
cltd
je
fucom
cmp
push
shll
xchg
adc
js
call
fldl
rorl
je
mov
or
jp
neg
lcall
mov
mov
out
cmp
mov
in
cmpsl
mov
sahf
repnz
das
dec
stc
arpl
adcl
mov
mov
sub
mov
ds
stos
adc
push
push
push
xor
mov
mov
mov
add
jecxz
test
adc
pop
mov
lds
mov
mov
push
dec
or
adc
mov
or
imul
mov
xor
or
pushf
xor
cli
xor
lret
xor
push
xor
pop
xor
jns
enter
div
mov
cli
sub
out
movsb
daa
int3
rcl
xor
rorl
xor
lahf
xor
push
xor
adc
lret
bound
stos
xor
mov
nop
fcmovu
xor
mov
push
lock
or
mov
dec
add
mov
stc
dec
leave
push
jae
pop
int3
mov
in
fiadds
lret
and
adc
jmp
std
add
outsl
inc
add
rol
xrelease
pop
jbe
imul
mov
aam
jbe
cmc
addr16
jge
inc
mov
subb
mov
jae
cmp
mov
sub
cmp
addr16
xor
stos
ja
sbb
fstpl
int3
fwait
sub
fst
add
dec
push
sbb
mov
xor
repnz
lods
idivb
cli
cwtl
js
stc
into
cmp
and
inc
sub
je
or
mov
push
mov
fcomip
and
push
call
sub
jne
push
xor
popf
cmpsl
ja
mov
push
mov
adc
dec
xor
inc
jbe
dec
fs
xor
mov
mov
insb
dec
jbe
push
jnp
inc
or
dec
cmp
pop
pop
ret
lock
adc
xchg
stc
pop
xor
roll
test
loopne
mov
insb
cs
xchg
sbb
adcl
push
sbb
psubw
xor
sar
das
in
rorb
xor
jmp
sub
movsb
sahf
mov
xor
jge
dec
sbb
cwtl
dec
stos
jo
mov
movsl
xchg
mov
subl
fidivrl
jmp
pop
pop
cmc
push
push
jge
or
sti
xor
dec
cmc
sub
inc
jae
cltd
and
adc
add
cmp
dec
cmp
xor
into
dec
cs
adc
mov
jne
hlt
push
dec
lret
dec
insb
jae
sbb
imul
popf
dec
inc
mov
dec
rcrb
add
stos
jns
push
popf
dec
inc
mov
cwtl
dec
jg
or
je
out
sbb
call
movsb
cmp
int
jmp
jne
inc
mov
ret
push
daa
inc
xchg
or
jbe
adc
leave
xchg
adc
push
int
jo
jge
fimull
data16
movsl
imul
ficomps
sub
pop
or
push
imul
cmp
adc
add
mov
xor
sub
mov
test
xor
cmc
mov
dec
std
and
pop
ljmp
jne
repz
or
daa
push
bound
scas
pop
sub
fdivrp
sbb
icebp
push
jl
fsubr
push
int
loop
mov
mov
pop
stc
cmp
std
lret
enter
add
or
pop
je
divb
dec
sub
jle
push
pop
mov
sbb
outsb
addb
jmp
push
iret
inc
test
xchg
ret
movsb
sub
test
test
int
push
sub
push
xor
add
insb
std
and
adc
jecxz
cmpsl
int
mov
lret
cmp
push
or
sub
aad
mov
stc
cwtl
sub
inc
or
clc
jmp
xor
mov
xor
ret
adc
popf
cmp
jmp
push
adc
mov
jb
mov
enter
into
jge
in
cmpsl
das
decl
lcall
jg
dec
lods
call
inc
sub
pop
popf
dec
mov
jo
icebp
je
cltd
es
lea
lret
call
imul
jbe
xchg
mov
mov
jbe
mov
dec
push
mov
notl
inc
aam
mov
rcrl
jns
jge
cmp
mov
clc
sub
popf
subl
xor
pusha
pop
decl
icebp
xchg
jge
sub
ret
inc
in
lret
pop
mov
inc
add
stos
and
dec
xchg
imul
push
inc
lret
push
pop
dec
mov
pop
xlat
jg
sbb
negb
imul
jnp
inc
jge
leave
push
mov
push
lds
mov
and
push
push
incl
xor
inc
popa
dec
imul
inc
cwtl
cmp
mov
push
adc
mov
jnp
sub
sbb
jne
sub
call
and
jnp
das
sub
insl
scas
dec
sti
outsb
mov
or
pushf
inc
decl
sahf
and
xor
jge
imul
adcb
sti
push
addr16
nop
ds
enter
es
dec
mov
out
mov
mov
jmp
inc
cltd
sbb
cmpb
cmp
sbb
fistps
add
sub
lret
inc
insb
jae
sbb
mov
push
cmp
movsl
pop
shr
sbb
inc
test
insl
movsb
cmpsl
pop
sbb
cmpsb
pop
rcrl
sbb
cmp
popa
sbb
popf
and
sub
aad
jne
stos
cmp
and
sbb
xchg
add
pop
inc
cmp
faddl
push
sbb
push
lds
jp
xchg
inc
add
xchg
jne
add
jle
data16
mov
mov
incl
lods
ss
cmp
movsl
push
xor
pusha
inc
stos
dec
or
outsl
aaa
cltd
cmp
cmp
mov
mov
inc
loopne
cmpsl
je
and
pop
sub
nop
popf
aas
and
xor
inc
addr16
movsl
dec
inc
das
cmp
push
jo
inc
mov
lcall
cwtl
and
cwtl
and
cwtl
pop
cld
push
pop
call
pop
xor
lret
sbb
or
shll
pop
and
lahf
mov
jp
sbb
sub
jl
sub
and
cmp
and
arpl
cmpsl
cwtl
and
cli
and
rcll
push
daa
sbb
sbb
shrl
push
into
rcll
cmp
push
push
ret
sub
loopne,pn
cmp
subb
sub
mov
or
or
push
mov
cmpsl
pop
out
cltd
mov
out
sub
cmp
cwtl
adc
cmp
shrb
fs
xor
cmp
jecxz
jmp
popf
cmpl
clc
adc
cwtl
movsl
dec
inc
das
cmp
push
jo
cmp
adc
jl
jae
shl
je
mov
push
fs
loop
inc
inc
dec
aas
sub
pop
xchg
lahf
sbb
push
xor
iret
or
jmp
sbb
xchg
cltd
push
cmp
sub
sub
cmpsl
and
call
clc
sub
dec
xchg
add
push
lea
in
cmpsb
repz
int
xor
imul
clc
adc
adc
mov
lock
push
insb
xchg
lods
lret
add
clc
adc
imul
xchg
push
sub
adc
or
fildll
add
or
ss
cs
xchg
and
or
mov
mov
add
pop
fiaddl
rcll
xor
sysexit
divps
xor
sub
shll
pop
mov
movsb
aas
xor
ds
mov
ficompl
mov
xor
mov
imulb
nop
push
jae
sub
adc
sbb
fldcw
fisubrs
fmuls
ret
dec
fwait
mov
sbb
jns
jle
test
adc
imul
mov
xchg
and
mov
mov
mov
dec
shlb
in
adc
add
adc
cmc
les
cmp
push
adc
pop
aas
mov
adc
jne
dec
lea
imulb
in
sbb
or
jmp
sub
int3
loopne
jns
or
insl
or
and
push
push
inc
adc
or
cltd
imul
pop
in
jns
aas
sti
fld
call
daa
ficompl
shl
adc
or
call
jle
movd
loope
lahf
jmp
inc
lret
call
pop
cwtl
sbb
cli
cltd
fs
lret
sbb
movsb
sahf
jnp
popf
inc
jns
int
faddl
mov
movsl
negl
or
inc
jl
xchg
or
ss
or
cld
sbb
scas
cmp
sub
and
mov
das
jns
jns
int3
sub
lret
stos
inc
rolb
and
xchg
add
mov
cli
xor
dec
js
addr16
xor
pop
xor
sub
or
and
xchg
or
fldt
test
push
jge
repnz
sbb
push
mov
add
loope
or
pop
pop
mov
xchg
xchg
sbb
or
xchg
add
gs
and
stc
and
dec
xchg
sbb
pusha
jae
dec
gs
cmp
shlb
in
dec
enter
cmp
jne
adc
sub
jbe
jo
jmp
mov
push
push
mov
jb
inc
leave
mov
and
inc
sub
xchg
cmp
lahf
stc
cmc
rcrl
idivb
ds
iret
rolb
jle
adc
add
add
lock
rorb
mov
lret
ss
stc
add
lcall
push
or
lea
add
add
stos
nop
xrelease
or
ljmp
jne
int
jbe
or
std
push
sub
adcl
or
pop
bound
aas
adc
aas
sarl
push
sti
xchg
push
xchg
pop
xchg
push
daa
dec
or
out
pop
cs
jnp
cmp
test
pusha
or
shll
or
sti
lock
pcmpeqd
mov
js
outsl
ds
mov
shll
xor
pop
imul
icebp
cmp
or
iret
sub
fisttpll
js
call
dec
stos
pop
imul
cmp
sub
mov
adc
mov
and
ret
dec
sarl
hlt
mov
stos
leave
add
push
popa
sub
movb
je
loopne
xchg
jecxz
std
jbe
ja
and
leave
mov
test
sub
dec
sbb
pop
mov
aaa
dec
adc
xorl
dec
xchg
adc
sti
adc
repnz
into
ficompl
or
sahf
and
fisttpll
aam
cmp
cwtl
fistpll
pop
insb
jno
lods
or
mov
sbb
ret
loopne
mov
push
sbb
sbb
int
xor
dec
sbb
and
xor
dec
sbb
in
adc
sub
iret
ljmp
pushf
xchg
inc
mov
jnp
xchg
jnp
testb
test
adc
dec
push
cli
lret
mov
leave
frstor
xor
mov
mov
xchg
ret
pop
push
mov
mov
mov
sub
xor
loop
jle
lock
test
inc
enter
pushf
lods
sub
in
shrb
cmp
movsb
push
sbbb
movsb
ss
push
pushf
mov
mov
out
movhps
push
rolb
push
ja
lret
xchg
and
mov
add
call
dec
or
iret
add
adc
jnp
ror
or
daa
in
call
arpl
call
adc
push
mov
dec
or
sbb
repz
out
jns
cmp
push
xor
xor
call
insl
mov
lock
push
test
les
sbb
and
add
outsb
lahf
mov
dec
mov
leave
repz
and
xor
and
ja
or
and
not
fmulp
push
push
xchg
shlb
movsb
fcmovne
iret
call
adc
mov
sub
test
fildl
test
sub
jg
cmp
lea
add
xlat
movsb
xor
out
test
sub
out
jle
inc
push
mov
push
stos
inc
or
aaa
mov
ja
dec
gs
lods
jo
fists
jbe
mov
lods
aam
inc
or
ret
out
cmp
pushf
pusha
sbb
and
lea
push
xor
pop
pop
mov
adc
out
or
repz
sti
inc
cmp
xor
xchg
jne
mov
icebp
jmp
or
mov
ja
fsts
mov
shll
je
sub
pop
cld
mull
cmp
loopne
sbb
push
xchg
inc
sahf
add
hlt
xchg
push
xor
or
notl
fsts
add
or
push
ret
mov
fisttpll
and
ljmp
jmp
inc
dec
test
rcrb
mov
push
jb
jbe
les
into
push
pusha
or
outsl
int3
lret
je
popa
xor
adc
and
je
lods
xor
pop
sbb
sub
inc
sbbb
hlt
push
mov
or
filds
mov
pop
push
mov
pop
sti
mov
lock
fwait
xchg
fstl
push
testb
jg
fwait
cmp
push
mov
adc
jmp
hlt
mov
mov
push
sbb
outsl
and
test
push
xor
and
mov
mov
add
or
inc
lea
fstps
jno
mov
test
push
cmp
jns
dec
push
add
mov
and
enter
adc
jo
xor
negl
std
sub
loop
add
cltd
push
pop
push
and
icebp
mov
iret
adc
insl
pop
dec
sub
imul
push
xor
lock
push
inc
add
push
jle
push
imul
add
xchg
sub
sti
or
call
xor
cmpsl
negb
or
mov
test
mov
sti
push
stos
aam
imul
arpl
sub
test
hlt
add
jne
sti
orl
sub
mov
or
jns
insb
xor
pop
rorb
push
icebp
push
push
jle
fwait
loop
jo
lods
mov
jle
jl
mov
and
pop
pop
add
push
dec
insb
nop
jo
pop
out
cmpsl
xor
pop
sub
iret
into
push
xchg
xor
lcall
decl
xchg
mov
add
mov
and
jae
push
mov
mov
cltd
mov
sbb
add
sub
mov
adc
and
sub
xor
in
dec
adc
insb
dec
add
push
inc
lahf
mov
mov
sub
in
nop
cmp
push
sub
negl
pushl
pop
dec
mov
push
push
push
mov
fimull
xor
sub
sub
xor
dec
aas
fmuls
iret
jne
mov
inc
sub
call
das
ror
or
jne
cli
lods
push
push
push
fucomip
ja
push
xchg
push
xorb
call
rol
movsb
jbe
fdivl
jb
xor
push
jae
pop
lcall
ss
loope
inc
sbb
repz
call
mov
ja
aam
pop
jns
mov
faddl
jmp
add
sub
or
sar
js
or
dec
outsl
cmp
loopne
jl
rorb
jecxz
pop
xchg
pop
sub
push
pop
pop
cmp
jbe
mov
jmp
jb
ja
add
lea
or
push
push
mov
dec
nop
dec
fisubs
inc
xor
xchg
ljmp
pop
xchg
add
ficoml
jne
test
inc
mov
and
cmpsl
stc
ss
into
jmp
sbb
negl
ds
call
jg
outsb
sbb
jle
js
sbb
jb
jle
rorb
pop
loopne
add
out
or
ljmp
jne
sub
fdivrs
push
xor
roll
push
add
nop
popf
pop
pushf
fcomp
pusha
ret
push
out
std
movl
mov
mov
inc
je
xchg
maskmovq
imull
test
dec
fcompl
sar
test
push
lret
sub
aad
call
sarl
js
pushf
lds
ret
incl
add
repnz
imul
or
xor
push
and
cmpsl
mov
push
add
lea
mov
mov
add
dec
jmp
sbb
jnp
ljmp
ffreep
mov
and
push
push
push
cwtl
imul
mov
outsl
mov
dec
xchg
xor
xchg
leave
movl
push
int
add
jmp
test
adcb
movl
pop
je
xchg
sahf
push
jge
dec
jge
ds
sbb
jmp
lret
stos
shl
sbb
xor
sbb
add
jb
js
sti
dec
hlt
sub
xor
popf
gs
call
fwait
pop
jl
push
adc
int
pop
call
gs
stos
pop
inc
cmc
mov
jno
xor
cmp
and
jns
push
mov
jb
push
jbe
outsb
adc
loopne
cmpsl
adc
in
inc
lret
mov
inc
sub
cmpsb
imul
mov
xchg
mov
inc
call
push
xchg
mov
call
sub
dec
or
dec
je
sbb
pusha
mov
adc
lds
stc
adc
inc
mov
dec
xchg
int3
push
xchg
xchg
lret
fimull
sub
cld
push
je
xchg
lea
jg
rorl
imul
lods
mov
clc
call
dec
cltd
orl
call
mov
dec
cld
push
push
scas
push
roll
adc
jmp
call
add
pop
imulb
fs
mov
pusha
fstpl
js
das
adc
xchg
ror
cmc
adc
sub
mov
push
call
sti
adc
push
int
push
sti
arpl
mov
leave
push
push
or
imul
xchg
repnz
adc
push
push
mov
stc
movsl
shr
mov
call
adc
repz
aas
push
mov
add
rorb
cli
sbb
add
push
or
cld
enter
aaa
divl
mov
frstor
lret
stos
push
mov
mov
lods
and
push
inc
pop
lahf
jne
jmp
adc
add
pop
xchg
loop
ret
and
push
jmp
cmpsb
ss
xor
cmc
fstl
mov
scas
mov
js
xor
jno
sbb
adcl
pusha
or
cli
adc
xor
push
lret
dec
cmp
and
adc
add
adc
rcl
push
pushf
cmp
loopne
or
subl
call
outsb
adc
dec
lock
nop
pop
and
shl
subl
loope
add
add
leave
jno
jmp
or
dec
inc
push
push
add
push
adc
sub
das
xor
xor
or
mov
mov
push
dec
out
adc
inc
aam
in
mov
xchg
stc
lea
jne
cltd
loop
mov
add
push
sbb
push
stos
xchg
mov
mov
rol
dec
jmp
pop
sbb
pop
or
mov
mov
dec
pop
rcrb
cmp
or
xor
add
dec
enter
and
ret
call
cmp
test
sahf
cmp
sti
fwait
daa
push
sbb
add
jle
xchg
push
or
bnd
ljmp
jg
rolb
xor
bound
js
xchg
cmp
mov
cmpsl
jnp
mov
cmpsb
sbb
lret
xor
jg
add
cmp
es
jmp
xor
dec
mov
push
dec
mov
stc
iret
hlt
add
iret
push
jne
pop
pop
mov
add
mov
inc
sub
cmp
in
and
inc
adc
ret
cli
ret
inc
xor
adc
or
push
sbb
outsb
sbb
xchg
jg
sti
imul
idiv
repnz
sbb
lret
inc
in
push
jg
xlat
aad
jne
jo
dec
adc
xchg
and
clc
dec
pop
lret
imul
xchg
lret
and
arpl
push
sarl
lret
xor
rorl
into
insb
les
mov
sbb
xor
push
jnp
mov
iret
xor
sar
ret
and
je
or
cmp
std
sahf
adc
daa
orb
or
clc
repz
jnp
adc
iret
mov
pop
mov
call
xor
xor
push
call
adc
xchg
push
sub
mov
mov
fstpl
push
jp
push
hlt
mov
shlb
inc
lea
sbb
inc
pushl
lods
pop
add
jecxz
mov
gs
cmp
orb
dec
sub
push
imul
les
testb
lcall
mov
sbb
out
xchg
arpl
out
fcmovnu
push
push
add
sbb
lock
cmp
adc
xor
pop
xor
or
dec
or
ret
inc
jle
or
es
push
mov
adc
sbb
add
lret
fsts
push
in
cli
cltd
pop
ret
fisubl
inc
stos
push
sbb
jge
aaa
lods
push
mov
mov
fwait
rol
xchg
mov
mov
sub
mov
pop
pop
jp
fstps
mov
add
dec
enter
and
out
inc
sbb
jo
aas
dec
add
jnp
sub
je
dec
pop
or
loop
xor
mov
cmp
xor
mov
inc
and
aaa
call
sbb
cmp
pop
int3
sbb
lahf
adc
sbb
shrl
lret
dec
sbb
out
xchg
xchg
pop
aaa
loop
in
in
push
push
ljmp
mov
dec
push
jg
pusha
mov
xchg
cmp
stos
or
mov
mov
scas
dec
sub
sub
lods
repz
inc
stos
shl
icebp
movsl
cli
adc
or
push
sahf
jecxz
jbe
cmp
inc
mov
mov
dec
or
cmp
repnz
push
push
mov
fs
ret
push
pop
cwtl
mov
leave
push
loop
sar
dec
inc
cmp
xor
xchg
push
popf
inc
push
inc
stos
or
negb
mov
push
fwait
sbb
lea
jnp
xchg
adc
cld
pop
fsubs
jle
testb
leave
clc
fldcw
movsl
movl
dec
push
dec
and
inc
push
rclb
push
push
fcmovbe
push
call
add
test
pop
pop
je
or
push
ljmp
dec
int
mov
jns
nop
aas
pshufw
popa
in
sub
mov
xchg
outsb
cmp
movl
ljmp
xor
fcompl
mov
push
notl
lods
shrb
aaa
dec
cmp
pop
cmp
hlt
dec
jmp
ret
inc
or
repnz
dec
push
sbb
movsb
cmp
in
inc
add
pop
add
xor
enter
lea
hlt
rolb
xor
adc
divl
dec
das
daa
movsb
sbb
push
pushl
or
xor
rcpps
adcl
call
add
gs
jl
mov
cmpl
inc
dec
pop
push
xor
jmp
and
repz
xlat
ja
pop
out
jns
inc
sar
or
iret
jne
jg
lods
cs
dec
loop
push
in
jmp
or
leave
call
sbb
lds
mov
xchg
mov
cmc
adc
inc
jle
xor
add
xorb
and
jae
adc
leave
test
call
xchg
cmp
mov
inc
add
icebp
xchg
xchg
dec
pop
into
adc
jno
cld
or
ljmp
lcall
call
xor
lret
push
out
mull
ljmp
cltd
xchg
push
push
push
stc
pushf
or
dec
xor
mov
xchg
or
jnp
dec
dec
and
outsb
fadds
push
pop
fnop
call
jmpw
adc
imul
adc
push
aas
lahf
dec
test
leave
xchg
xor
xor
xor
add
call
das
mov
jmp
rolb
sbbl
fdivl
or
inc
sbb
mov
in
je
icebp
lcall
adc
push
fdivrp
adc
mov
mov
xchg
add
cmpsb
sbb
sbb
lods
mov
out
inc
sti
fildl
pop
test
cli
dec
xor
aam
sbb
rcrb
pop
xor
call
push
lcall
pop
sub
xor
or
cmp
sbb
pop
xor
push
xor
fwait
lret
xor
xor
jo
fcmovbe
call
push
ret
xchg
aaa
dec
cmp
dec
xor
loop
cs
push
mov
push
push
push
inc
adc
cmp
or
lods
lods
rcll
leave
dec
sbb
int3
adc
ficompl
mov
xchg
inc
call
push
sub
pushf
ljmp
and
out
and
jb
jb
dec
out
into
ret
sbb
jle
dec
lret
dec
xor
push
lret
and
sbb
fmull
push
blcic
or
mov
xor
push
adc
inc
test
loope
sub
dec
sub
int3
ds
jno
lea
imul
mov
mov
adcl
cmp
loope
mov
test
add
jae
mov
in
jmp
outsl
dec
test
ljmp
push
int3
adc
insl
imul
je
je
jns,pn
ret
aas
jl
cmp
jne
in
lret
push
in
pop
fisubrs
bound
or
pop
cs
adcl
dec
cmp
dec
pop
dec
lret
or
setno
mov
sub
imull
pop
pop
test
ljmp
sub
sub
insl
imul
arpl
data16
cmp
iret
lock
repnz
cmp
popl
pop
pop
cltd
bound
or
or
lock
daa
cltd
ret
adc
das
push
jl
loopne
bound
shr
fidivrl
jl
int3
dec
push
mov
test
leave
addr16
mov
ljmp
push
pop
mov
mov
mov
dec
js
je
lods
adc
pop
and
inc
iret
pavgb
movntps
add
push
enter
aas
push
shlb
or
das
or
cmp
xchg
mov
adc
sbbb
sbb
inc
jle
add
or
ds
mov
mov
call
or
dec
sbb
add
jo
adc
mov
push
cmpsb
lret
jb
push
jb
cli
repnz
sbb
fildll
int3
jp
and
lea
cmp
push
mov
cld
pushf
fstl
pop
cld
push
syscall
sub
adc
ja
dec
into
jne
inc
push
add
mov
mov
fsubrs
push
pusha
mov
and
hlt
dec
or
in
in
mov
pop
jecxz
xchg
or
loop
mov
shl
repnz
pusha
lahf
dec
push
lret
ret
scas
mov
dec
add
and
lods
and
jno
test
push
xchg
ret
int3
call
clc
jae
stc
int3
dec
xor
jmp
sub
push
add
xor
call
mov
push
in
inc
mov
xchg
push
push
push
pop
aaa
mov
jne
test
lds
xchg
sbb
mov
dec
in
push
push
push
js
into
adc
rcr
xor
xchg
push
fcomps
movsb
adc
bnd
xor
movl
inc
mov
movsb
out
addl
jae
lea
sub
add
scas
sub
pop
cmpsb
xchg
icebp
icebp
iret
rorb
and
cmp
adc
dec
or
mov
or
adcl
pushl
aas
fnstcw
shl
shrb
iret
jnp
cmp
jge
adc
mov
sbb
pop
das
pop
ret
cmp
call
jge
mov
push
jb
or
test
sub
outsb
aas
arpl
inc
sarl
call
mov
adc
jno
lret
aas
jae
push
adc
les
push
add
div
repz
dec
outsl
pop
bound
jecxz
mov
mov
out
sahf
rclb
cs
jecxz
sbb
push
movsb
push
inc
ljmp
mov
pop
rorl
in
mov
cmpsb
sar
push
inc
pop
push
cltd
push
es
std
sub
clc
mov
es
mov
test
mov
xchg
push
and
hlt
out
movsl
mov
sbbl
shl
sub
outsl
bound
fwait
call
fwait
dec
push
sbb
mov
aad
xchg
and
xchg
inc
dec
cmpsb
xchg
lret
jae
cli
outsb
inc
pop
ljmp
mov
and
and
aas
loope
icebp
pop
dec
xchg
xchg
stos
loopne
dec
sahf
sbb
dec
pop
add
cmp
je
sub
push
push
lret
das
jns
iret
pushf
out
mov
or
testb
pop
sub
out
lea
or
ret
sahf
sub
fnstcw
push
cmp
jp
pop
sub
mov
lock
jmp
add
pop
mov
pop
in
mov
mov
nop
cltd
sub
add
push
xchg
xlat
ret
mov
xchg
push
test
scas
fdivs
jle
hlt
jmp
xor
outsl
inc
push
and
jle
lea
mov
and
push
xchg
xchg
cmp
fucomp
jp
fwait
js
pop
pop
xchg
inc
aam
jmp
dec
andl
mov
xchg
je
mov
mov
fmuls
ss
adc
dec
dec
loopne
mov
pop
mov
dec
mov
leave
pop
xchg
jo
scas
xchg
sub
dec
daa
sub
inc
jmp
into
ljmp
sbb
ret
adc
xchg
mov
xchg
sub
pop
jge
fs
sti
adc
loope
aas
jp
mov
push
inc
and
mov
out
out
jle
mov
xchg
jg
push
xchg
sub
xchg
sbb
push
inc
mov
pop
push
adc
leave
sbb
jno
icebp
loope
fistpll
fidivl
ja
incl
int
xor
jb
sub
shrl
jmp
imul
mov
jnp
jne
scas
or
movl
mov
push
push
xor
iret
add
cs
adc
jo
stc
sbb
sarb
sbb
lock
push
cmp
pop
cmp
xor
jb
call
std
cmp
xlat
jbe
aad
std
push
out
rclb
cmp
adc
stos
mov
inc
cmp
add
adc
pop
shlb
pop
mov
pop
in
xor
adc
in
pop
add
hlt
inc
ret
cltd
cmp
dec
jmp
movb
or
in
pop
cmp
cmp
xchg
mov
leave
sbb
pop
sub
xchg
clc
push
hlt
daa
popa
jl
cmp
mov
ja
orl
loopne
and
add
aaa
insb
dec
pop
jmp
je
dec
mov
adc
sti
inc
adc
sub
jl
inc
adc
jmp
ljmp
out
mov
xchg
cmpl
cmpsb
aad
leave
mov
inc
lods
mov
rorl
lea
jmp
aad
dec
mov
repnz
ds
push
inc
or
or
adc
adc
pop
in
aam
aad
push
aam
pop
pusha
lahf
push
push
xor
clc
or
cmp
lret
xchg
leave
xor
push
arpl
es
pop
and
gs
shlb
movsl
fwait
test
cmpl
sahf
rorl
lea
pop
rol
nop
dec
cld
mov
jo
iret
call
into
cmpsb
sbb
or
sbb
adc
add
add
sahf
jo
and
fs
stc
xor
xorl
or
jle
pop
mov
jecxz
imul
pop
add
adc
fincstp
mov
divb
or
cmp
jg
setne
rol
lret
addb
pop
sahf
add
dec
cld
fiadds
scas
dec
sbb
mov
nop
or
push
out
sub
xchg
test
out
sbb
outsl
call
arpl
push
stc
dec
orl
cli
or
dec
test
mov
mov
imul
cmp
lods
pop
jg
test
jmp
push
lret
ret
sbb
push
sbb
mov
adc
or
lea
fwait
icebp
mov
ret
jecxz
lods
out
mov
jae
cwtl
in
jbe
in
roll
sub
cwtl
push
fxch
mov
pop
rol
jmp
and
fidivrs
jp
push
out
ds
or
lret
mov
in
loopne
shrb
mov
rorb
lret
scas
fwait
adc
or
fldcw
mov
icebp
stos
or
push
push
adc
xchg
in
addr16
pop
pop
pop
js
or
pop
push
loopne
or
lods
mov
ja
cmp
or
notl
movsb
push
je,pn
insl
sahf
testb
mov
mov
movsl
push
or
ljmp
push
inc
rcl
push
pop
je
scas
mov
add
mov
repnz
mov
xor
cmp
jne
enter
pop
lds
push
inc
xchg
test
sub
sub
or
frstpm(287
pop
and
adc
xor
ficomps
imul
imul
in
in
ret
enter
inc
jnp
lock
faddl
cmp
mov
pushl
add
aam
dec
add
adc
adcb
loope
sub
hlt
add
fs
ljmp
insb
sub
int
mov
aas
clc
push
enter
jns
jmp
repz
jmp
pop
inc
push
notb
call
sub
inc
lcall
iret
enter
xor
hlt
jg
popf
pop
gs
fnstenv
adc
jne
jno
xlat
xor
jns
enter
xchg
call
scas
cmp
inc
cmpb
test
jmp
xlat
adc
mov
ret
add
movsb
inc
xchg
push
mov
out
xchg
or
jmp
xchg
xchg
lret
dec
xlat
stc
pop
sahf
fwait
sbb
add
and
or
push
add
jo
mov
push
or
std
and
lock
push
enter
ss
hlt
incl
xor
mov
bound
lea
hlt
sub
mov
mulb
daa
sbb
stos
test
sbb
xor
or
inc
popa
or
or
add
mov
add
jb
jecxz
and
jl
xchg
push
cmp
sub
cmpsl
sub
and
adc
push
xchg
pop
aaa
gs
icebp
ret
or
mov
push
hlt
sub
xchg
jne
pop
out
push
xchg
xchg
push
add
add
cli
xchg
sahf
sbb
jbe
mov
iret
mov
cli
cwtl
xchg
xor
jo
pop
loopne
shrb
xchg
jo
cmc
ljmp
inc
pop
movsl
out
lahf
jae
sahf
cmpl
mov
leave
cmp
je
mov
enter
jae
adc
jae
sub
je
or
aaa
push
outsb
or
xchg
or
mov
sbb
mov
aaa
mov
ret
cmp
xchg
push
push
mov
ret
mov
inc
shr
in
enter
sbb
pop
sub
and
sub
push
cwtl
add
and
sub
xchg
into
cmp
xor
lret
es
or
xlat
mov
cli
mov
test
dec
fsub
leave
xor
add
test
addb
sub
aaa
jne
sbb
jbe
inc
in
rcrb
cmpsl
ret
push
je
gs
daa
in
mov
add
subb
add
mov
adc
dec
adc
xchg
mov
cmp
xchg
xchg
insb
sbb
call
jbe
adc
jg
or
psubd
arpl
rcll
stc
jge
sub
mov
shrl
add
movsw
inc
sarl
pop
sub
rorb
lahf
sbb
sbb
adc
rcll
mov
test
dec
loop
push
aam
sub
fisttpl
inc
add
dec
imul
xchg
pushl
inc
push
lahf
enter
lcall
loopnew
ljmp
lds
ja
js
sub
sahf
dec
push
cmpps
jmp
and
repz
fiadds
data16
jns
pop
add
imul
cli
jge
push
ds
xor
jge
and
ret
or
xchg
inc
inc
mov
dec
dec
mov
pop
inc
jne
pop
mov
mov
stos
push
pushf
cld
jns
mov
lret
xlat
sete
icebp
inc
pop
xchg
mov
xorl
lahf
xchg
in
sub
fistl
jl
or
daa
jle
xor
imul
mov
xchg
pop
repnz
jae
out
mov
dec
adc
lcall
call
in
dec
movsb
pop
ljmp
les
adc
sbb
xor
xor
addr16
mov
cld
push
adc
stc
jmp
sub
add
outsl
inc
inc
and
jg
mov
lds
dec
jle
mov
dec
lea
dec
aad
sbb
vandps
jp
jbe
nop
push
and
pop
adc
pop
es
push
int3
fdivrl
mov
inc
shlb
adc
jbe
adc
push
ret
sbbl
jnp
test
les
idivl
xchg
mul
rcll
xor
shl
aam
pop
push
popa
or
in
jnp
mov
pop
fwait
push
js
inc
mov
nop
add
jge
pop
cld
cld
je
push
std
jmp
iret
mov
mov
pop
sbbl
divb
out
xchg
lock
je
mov
jns
cmp
std
cwtl
adc
push
sub
cmpsl
and
mov
xchg
sub
fcmovu
cmp
jne
xchg
dec
testl
mov
jnp
ffreep
inc
and
rcll
pop
adc
or
pop
jae
jo
test
fadds
add
and
inc
decl
or
lret
lcall
jmp
mov
in
cmp
not
insb
xchg
out
xchg
adc
gs
cli
pop
stos
adc
push
je
sub
mov
dec
mov
mov
jns
jns
std
orl
push
push
mov
pop
stos
sbb
xchg
and
mov
jne
or
mov
cmp
adc
sar
add
rorl
stos
mov
pop
sbb
test
pop
jg
gs
xorb
lahf
inc
mov
pop
push
or
mov
add
imul
imull
jo
sub
insl
xchg
jae
xchg
cmp
xchg
pop
subl
aas
cmp
inc
sahf
addr16
and
dec
sbbb
jmp
fldl
xor
cwtl
inc
jmp
mov
xchg
inc
push
add
add
dec
mov
mov
mov
and
repz
ror
movb
mov
xor
xchg
sbb
test
leave
je
sti
ret
adcl
repz
into
sahf
clc
call
loopne
push
xchg
lock
jmp
push
cmove
adc
push
int
mov
les
shll
or
das
data16
xor
lcall
iret
outsl
xor
icebp
sti
shl
enter
sub
jmp
add
cmovg
ret
cmc
pop
nop
pop
loope
cmp
mov
mov
inc
or
popf
adcb
add
cmp
mov
scas
mov
pop
push
or
ss
int3
jmp
mov
dec
inc
adc
rcrb
sbb
sub
arpl
enter
sti
mov
pop
loop
pop
ss
cmpsl
inc
cwtl
test
aam
push
dec
sub
push
stos
js
imul
dec
add
lret
push
push
cltd
je
push
pop
xchg
pop
pop
mov
jno
add
adc
scas
je
and
adc
pop
jae
or
or
leave
repnz
sub
cmp
je
xor
mov
idivb
cmp
jmp
stc
mov
enter
lock
movsb
call
dec
sbb
add
cltd
notb
repnz
inc
sbb
pop
scas
lds
inc
imul
push
cld
lock
rorb
cmpsl
push
fsubrl
lret
ljmp
dec
lods
imul
mov
inc
sti
test
dec
push
cwtl
fstpt
xor
mov
ljmp
mov
inc
cmp
adc
inc
hlt
add
popf
ds
cmp
mov
cmpsb
xor
push
add
xorb
dec
push
mov
iret
call
std
or
or
or
mov
bnd
imul
dec
les
mov
test
fimull
and
mov
arpl
data16
mov
negl
mov
rcrb
pop
push
ret
repz
rorl
jno
shr
cmp
cmp
pushf
nop
sbb
notl
xchg
xchg
fwait
mov
adc
adcl
mov
mov
test
lods
test
data16
lret
mov
clc
push
mov
adc
lret
stc
sub
adc
add
int
rolb
pop
cmp
fstpl
nop
or
outsb
rol
sub
ss
mov
xchg
and
adc
das
sti
fstpt
jno
or
cld
popa
mov
aad
cwtl
push
daa
cli
pop
pop
inc
cmp
test
adc
jl
out
sarl
inc
cmp
cli
push
out
cmpsl
push
insb
xor
popf
cmc
or
or
es
jge
sub
jae
ja
jne
add
stc
adc
call
lcall
push
incl
sub
jge
out
cmpl
mov
cli
and
in
cltd
xorl
or
inc
push
adc
sbb
sbb
cmp
adcl
lahf
adc
je
sbb
push
sbb
jne
push
push
add
jbe
dec
adc
mov
xor
dec
or
xor
lret
push
out
gs
dec
ret
add
push
in
notb
lret
or
fistl
arpl
xchg
shll
xor
out
pop
cmp
je
aaa
inc
or
dec
fwait
les
orl
pop
aas
cwtl
adc
adc
inc
movsb
out
push
out
test
cli
ljmp
ret
cmp
jne
inc
inc
or
addr16
mov
andl
jge
hlt
dec
mov
push
and
and
mov
dec
mov
iret
gs
push
call
out
addr16
leave
adc
enter
jno
adcl
cli
jp
mov
and
das
add
push
inc
xchg
adc
dec
and
jle
and
pop
adc
cmc
test
fimull
mov
inc
mov
jle
std
or
cwtl
or
ret
subb
sub
xor
adc
sbb
test
fdivs
rorb
aaa
rolb
clc
aad
and
dec
xchg
xor
stc
loop
push
mov
lea
cmpsl
insl
test
arpl
or
sub
repz
fildl
shr
inc
cmp
or
cwtl
outsl
insl
test
hlt
xchg
pop
jl
cmp
or
push
lea
mov
cmp
mov
dec
pushaw
mov
xchg
adc
mov
leave
jge
lods
insb
pop
jmp
xchg
je
push
cmp
pop
loop
jmp
ret
inc
mov
xchg
adc
fmuls
je
adc
pop
lret
xchg
roll
push
arpl
pop
rcl
roll
jne
mov
repz
std
shr
mov
adc
hlt
sub
stc
cmp
jbe
jecxz
cwtl
sti
ret
mov
adc
scas
cmp
sub
dec
lret
xchg
dec
dec
data16
adcl
pushf
adc
adc
ficompl
pop
add
repz
cltd
sbb
je
stos
insb
jns
or
shll
cld
fwait
sub
cmpb
cmp
testb
push
mov
dec
cmp
stc
lahf
push
shlb
insb
xchg
adc
mov
cld
cmp
rcl
in
cmp
pop
cltd
aad
es
lock
mov
dec
imul
aam
or
dec
dec
or
mov
jmp
inc
xchg
mov
sahf
jmp
push
adc
pop
push
cmp
push
push
in
in
xchg
lret
loopne
test
pop
shr
or
addr16
add
icebp
cmpsl
ds
call
cmp
adc
aad
add
sti
and
std
mov
push
out
jmp
sub
cld
gs
and
add
sub
in
ret
out
inc
stos
sbb
nop
adc
xchg
xor
sub
testb
cmp
mov
jmp
xlat
je
mov
or
int
xchg
or
loop
mov
add
push
rcrl
nop
adc
mov
movsl
loopne
mov
sbb
stos
and
push
push
or
ja
or
int3
mov
jg
mov
xchg
andl
idivb
movsb
jmp
loopne
inc
fwait
sub
cli
cmp
jb
fs
nop
imul
add
fildl
xchg
sub
lds
add
adc
xchg
pop
mov
push
xchg
js
cmpsl
gs
inc
cli
vmovq
sbb
adc
jmp
dec
jmp
adc
jo
scas
cli
pop
jae
in
pop
shlb
mov
jb
ret
mov
sub
inc
pop
aam
pop
std
je
add
adc
jno
outsb
xchg
sub
xchg
outsl
sbb
inc
fisttps
test
dec
mov
outsl
outsl
addb
stos
fld
movsb
leave
cmp
aaa
imul
ror
cltd
adc
ret
dec
loop
adc
sub
pop
orb
add
pop
cmp
push
jns
decl
mov
into
je
mov
testb
add
or
ret
cli
jns
adc
insl
lahf
mov
notb
xor
and
sti
cli
loop
pop
out
sbb
roll
addb
xchg
out
push
stos
jmp
push
dec
clc
test
je
xchg
sbb
aaa
and
dec
adc
push
imul
dec
xor
cli
popa
je
adc
scas
leave
or
ja
sbb
roll
mov
pushl
fs
sbb
dec
scas
lds
xchg
aad
dec
inc
jg
inc
mov
ror
cmp
lret
inc
decb
int
js
xor
add
xor
lret
jmp
fildl
adc
xchg
xchg
cmp
inc
pop
hlt
and
add
xor
mov
xchg
mov
lret
cmp
adc
inc
mov
imul
fcomps
mov
push
cmc
int
lds
out
js
push
ja
mov
out
pop
ror
dec
nop
jl
wrmsr
leave
clc
int
xlat
cli
pop
push
aas
adc
lahf
or
pop
add
mov
add
xchg
les
dec
cld
sbb
test
sub
cli
enter
sti
push
std
mov
sti
sub
jl
adc
dec
outsb
cli
orl
mov
xchg
clc
loope
pop
mov
sbb
aaa
popa
sahf
scas
testb
dec
mov
loop
pop
ret
pop
pop
mov
pop
push
cmp
dec
xchg
push
jmp
jns
stos
xor
jl
int
sbb
lods
out
int
adc
sbb
mov
lods
aas
cld
jecxz
rcl
ret
shl
jne
cmpsl
repnz
dec
arpl
les
rep
dec
inc
push
fistps
lcall
leave
test
push
push
gs
and
cltd
jl
cmp
adc
test
mov
test
lahf
push
cmp
inc
or
jge
jge
std
inc
mov
dec
pop
cmp
lahf
inc
loopne
adc
jge
mov
es
dec
and
pop
xlat
and
rorb
mov
adc
cld
sub
clc
jmp
mov
jle
jb
and
enter
inc
push
cmc
rcll
cmp
add
outsb
mov
lds
adc
fcmovu
mov
push
fs
lds
cmp
outsb
divb
aas
in
stos
dec
insl
push
call
rcrb
dec
sbb
sub
mov
rcll
cmp
inc
dec
fs
out
mov
mov
sbb
clc
adc
sub
push
mov
dec
add
xchg
call
pop
scas
add
push
mov
xor
push
dec
pop
dec
cmp
jne
jg
stos
negl
jae
add
repz
sub
das
mov
xchg
cmp
ret
dec
cltd
sbb
movsb
lret
aas
adc
mov
fstpt
out
jmp
subb
sbb
lock
pop
dec
push
push
es
std
ficoml
mov
add
cltd
xor
outsb
push
mov
enter
push
mov
jp
push
mov
sbb
shr
das
fwait
pop
cmp
mov
test
jmp
sub
inc
out
das
push
cli
mov
sub
jns
loope
jge
fisttpll
jle
mov
sbb
icebp
in
cmc
shll
sarl
mov
mov
inc
sub
mov
and
push
mov
adc
andb
cwtl
jne
int3
ljmp
jmp
and
test
sbb
test
cwtl
dec
or
mov
rol
xlat
push
jbe
jg
pop
fildll
cvtdq2ps
clc
and
test
jecxz
mov
popa
sub
shl
sbb
lret
jo
jp
fisttps
cmp
push
lock
hlt
ror
and
xchg
lock
lods
call
jae
rcrb
sub
push
mov
fdivrs
mov
sub
test
cltd
nop
inc
xorl
rorl
out
pop
xor
jne
push
dec
cmpsb
icebp
ljmp
lret
pop
xor
dec
stc
lds
inc
cwtl
sub
mov
inc
or
xor
js
and
not
mov
mov
mov
pop
je
jmp
mov
or
mov
testl
push
mov
mov
shr
inc
or
in
icebp
xor
or
adc
inc
jge
jl
inc
or
xchg
pop
rcrl
or
outsl
aad
jnp
mov
pop
cli
adc
sahf
movsl
lret
or
pop
xchg
mov
push
push
jl
xchg
ljmp
sub
popf
inc
sbb
add
jl
lods
dec
dec
jno
sub
cmp
mov
and
lock
cmpsl
lea
adc
jg
and
mov
rcrb
jle
repnz
or
jnp
or
or
test
sbb
pop
push
add
clc
xlat
fwait
bnd
test
idivb
jbe
xchg
mov
sbb
inc
or
pop
ret
or
rcrl
dec
dec
sub
mov
mov
inc
call
inc
je
mov
lcall
mulb
fistl
ljmp
xchg
orb
xchg
fcoml
push
es
ret
sub
cld
sub
imul
push
or
pop
sub
mov
fwait
adc
out
mov
add
test
inc
push
test
fbld
lock
add
shrl
xchg
pop
int
mov
fmuls
clc
mov
andl
mov
or
cmp
lcall
jl
or
pop
xchg
cmp
dec
fs
mov
jle
and
daa
or
and
cmp
add
rorl
pusha
pushf
mov
adc
push
push
out
cmp
out
cmp
jnp
cmp
push
rcrb
dec
xorb
add
call
dec
call
jg
popa
ja
dec
sub
es
jl
mov
cmp
xchg
push
into
divl
jo
pushf
inc
test
cli
xchg
stc
dec
rorb
inc
test
adc
lea
mov
xor
mov
sbb
mov
or
dec
insb
or
push
add
adc
arpl
lcall
cli
dec
xchg
data16
add
daa
pop
jg
adc
jg
and
mov
inc
adc
adc
and
cs
ds
inc
cmp
std
and
mov
xchg
movsl
jge
enter
mov
out
jnp
rolb
test
pop
or
mov
ss
and
pop
mov
enter
cmp
dec
addl
stos
incl
lret
sub
add
and
int3
fcoms
adc
xor
stc
xor
repnz
or
outsb
clc
add
sbbl
or
inc
push
les
mov
cld
lahf
lea
pop
or
inc
neg
decb
test
mov
shrl
pavgw
fisubrl
dec
jno
mov
aas
cmp
pop
rcll
push
lods
rcrl
mov
and
add
sahf
pop
pusha
sarb
pusha
lods
arpl
mov
ds
inc
gs
gs
pop
cmp
xchg
mov
ror
cli
add
adc
lods
scas
stos
inc
gs
add
or
shlb
cs
clc
jmp
sbb
das
sub
mov
lea
jecxz
xchg
push
scas
mov
xchg
pop
xchg
test
and
add
jp
inc
pop
sbb
cmpb
push
clc
repz
pushf
jne
dec
xchg
test
nop
inc
shr
mov
jb
clc
pop
dec
aas
dec
mov
movsb
fprem1
inc
or
test
pop
sbb
int
adc
mov
and
sub
inc
add
sbb
rclb
repz
or
xchg
pop
pop
mov
sub
test
cmp
jne
dec
push
push
gs
and
adc
lea
dec
cs
push
mov
clc
movb
jmp
data16
mov
test
or
jmp
jmp
inc
rclb
in
xchg
add
inc
repz
sub
mul
mov
stos
popa
xchg
insb
aad
insl
fld1
and
xor
jae
push
lods
jne
xchg
cmp
pop
and
mov
sub
pusha
insl
jno
jns
jae
xor
fmul
test
jbe
aas
jmp
sbb
dec
fcmovnu
jo
cmp
sbb
pop
repz
clc
xchg
inc
dec
ror
jb
rcrl
xlat
out
iret
pop
push
lds
jmp
mov
sbb
cmp
mov
sahf
add
or
jmp
scas
test
xchg
push
mov
sbb
es
leave
jns,pt
jmp
sahf
push
push
jne
add
mov
imul
adc
dec
jnp
ret
repz
loopne
lea
popa
mov
push
test
jp
inc
shll
leave
test
or
pop
jbe
int
popf
sub
sbbb
loop
adc
outsb
test
lahf
pop
je
inc
loop
out
pop
pushl
ljmp
jg
dec
cmp
push
leave
shr
negb
jbe
test
das
lea
add
or
ja
jmp
push
call
test
lret
xchg
dec
sbb
inc
adc
adc
icebp
xor
fs
cld
sbb
imul
dec
scas
pop
sbb
xlat
roll
add
xchg
push
sbb
jne
cld
lret
dec
mov
enter
and
add
pop
sahf
push
and
int3
xchg
mov
lods
push
out
jmp
in
into
je
sbb
dec
cmp
ja
and
repnz
pop
cli
mov
pop
cwtl
inc
sbb
pushf
xchg
or
jp
sbb
inc
and
pmaxub
in
imul
fildll
fmuls
in
or
call
cmc
mov
mov
mov
cmp
fwait
inc
dec
cld
es
lahf
add
xchg
aad
jns
into
inc
fists
repz
pop
xor
movsl
pop
xchg
and
lea
xor
push
mov
xorl
ljmp
int3
xor
cmp
jle
jae
iret
dec
adc
jp
decl
mov
mov
daa
mov
cltd
cmc
inc
lcall
rolb
repnz
popa
push
stos
test
fxch
dec
ret
inc
cs
mov
popa
out
jge
xchg
flds
dec
mov
pop
adc
jns
ja
fwait
mov
mov
bnd
sbb
in
jo
cmp
stc
clc
mov
jg
sahf
sub
mov
flds
pop
sarl
jo
and
pop
inc
jns
test
xchg
rorl
fimull
cmp
xchg
pop
xor
mov
inc
xor
xor
jmp
in
and
add
add
push
test
sub
std
call
and
ss
imul
mov
lret
sti
pop
lret
jge
push
lock
push
dec
rolb
mov
inc
jle
mov
pop
dec
adc
push
push
push
push
adc
mov
xchg
mov
dec
mov
push
mov
mov
loope
xchg
dec
mov
repz
sub
cmpsl
or
jg
jl
xor
rcrl
push
inc
mov
mov
movsl
cltd
mov
dec
mov
cltd
lds
jp
cmpl
xchg
cmp
lret
xchg
pmaxsw
hlt
fld
push
jmp
push
scas
pop
cmp
aad
pop
cmp
or
ret
int
cltd
lret
mov
clc
xchg
xchg
leave
ret
pop
cwtl
sbb
fisubs
lret
call
and
fists
pop
inc
test
nop
fiadds
mov
cmp
mov
mov
aam
aaa
mov
cmp
sbbb
pop
out
lret
cmp
rorl
sub
add
inc
dec
loop
stc
enter
dec
cltd
inc
xchg
lret
rcr
stc
std
pop
cmpsl
test
mov
mov
lret
or
adc
and
repnz
dec
inc
xchg
sub
orb
pushf
hlt
mov
popf
mov
dec
imulb
notb
cmovns
call
lea
cmp
dec
dec
jno
mov
leave
je
dec
push
xchg
xchg
fwait
dec
push
bound
aas
inc
shrl
sub
dec
pusha
test
inc
adc
fimuls
test
jo
push
pop
xchg
pop
decb
repz
inc
inc
rcrb
outsl
dec
lea
mov
sbb
adc
push
push
push
rclb
fsts
cli
mov
cmp
fmulp
mov
lret
lods
xchg
or
push
xchg
fsubl
jg
out
addl
jp
push
jo
add
xchg
out
mov
lret
cmp
rcll
roll
ret
pop
push
sub
adc
jge
mov
push
jmp
aaa
int
xchg
div
and
jmp
cltd
lods
jecxz
out
bnd
push
xlat
xchg
test
pop
jmp
clc
or
sub
push
cmpl
enter
push
sub
pop
or
cli
or
lods
jmp
test
hlt
aaa
notl
pop
fdivr
lret
cmp
sub
repnz
pop
mov
lahf
je
xlat
cwtl
xchg
adc
mov
push
loopne
adc
stos
mov
adc
dec
push
js
pop
mov
fs
lret
test
pop
cmp
lret
jns
ja
push
ficoml
jp
or
stc
dec
popf
js
bts
xor
cltd
cltd
dec
push
mov
icebp
cmp
inc
clc
jbe
dec
mov
dec
aas
or
jmp
jne
jbe
clc
js
mov
loopne
jl
hlt
popl
xchg
out
into
mov
in
outsb
push
call
jle
jp
rolb
mov
mov
es
push
repnz
pop
jg
ss
mov
jb
jno
jg
or
ljmp
push
stc
sarl
jp
jge
or
leave
pop
lods
pop
add
mov
clc
sbb
cmp
inc
add
test
mov
cmp
xchg
cmpsl
push
ja
inc
push
shll
cli
je
adc
xor
ret
cld
ror
push
push
xor
mov
int
outsb
sub
jnp
cli
mov
jge
add
or
es
repz
push
lret
push
lret
sbb
push
sub
cmp
pop
xchg
jo
jb
mov
aam
movsbl
sbb
jns
dec
or
inc
xchg
clc
push
pop
push
push
jae
inc
xchg
fisubrl
scas
icebp
mov
int
jge
dec
mov
ja
cmp
hlt
push
js
xchg
fsubl
xor
enter
jmp
xchg
stos
sbb
lods
jp
add
clc
add
inc
xor
sti
shl
int
inc
push
pop
outsb
pushf
adc
jg
rol
out
mov
outsb
call
push
adc
into
push
leave
popf
mov
xchg
add
adc
and
xchg
dec
or
add
push
stc
add
aad
filds
xor
inc
rcrb
outsl
lret
fdivs
xchg
sbb
add
lret
shlb
push
stc
stos
mov
loop
or
hlt
adc
add
add
and
jmp
push
rcrb
imul
dec
int3
stc
jmp
xchg
repz
cmpsl
push
ror
iret
mov
pop
ret
dec
iret
inc
dec
rcrb
mov
stc
enter
push
add
pop
mov
lahf
mov
jmp
xchg
std
push
or
popf
jae
mov
and
out
adc
lret
stc
shlb
fisubrl
mov
nop
movl
ss
clc
aas
mov
pop
inc
out
and
mov
clc
inc
cltd
pusha
mov
pop
xchg
leave
or
cli
sub
in
aas
inc
jns
cmp
mov
les
int
je
gs
in
push
pop
mov
mov
lea
cld
test
sub
pop
popa
ror
pop
sbb
push
pop
lock
scas
sbb
xchg
pop
movb
stc
stos
popf
pop
mov
lds
jbe
aad
pop
pop
ret
aam
xor
lea
xchg
mov
jmp
lods
mov
inc
push
imul
hlt
dec
ds
pop
add
pop
repz
pop
fcmovnu
call
mov
jmp
and
jne
pop
push
call
mov
cli
jne
lret
stc
lcall
sub
sbbb
lret
inc
mov
dec
call
mov
or
jae
call
xchg
xchg
jns
mov
pop
inc
fwait
out
jmp
mov
lds
call
or
fwait
je
sahf
push
jne
stc
xchg
divl
dec
sbb
push
pop
push
ret
mov
xchg
stc
or
add
fistps
xchg
xor
fwait
iret
mov
adc
cmp
xchg
leave
cmpsl
decl
xchg
inc
jle
jecxz
bound
or
push
cld
test
mov
cld
add
sub
ljmp
pop
out
insb
sbb
dec
adc
cmp
sub
outsl
inc
subl
lret
je
and
arpl
in
xchg
inc
sbb
pusha
cli
stos
inc
mov
pushf
sbb
pop
xchg
test
dec
inc
push
pushf
xchg
push
rcll
hlt
jmp
shll
in
arpl
push
icebp
std
pusha
gs
inc
lcall
inc
jmp
cs
out
cmp
xor
icebp
call
dec
ret
mov
inc
xchg
cmc
jne
rcl
xchg
and
jmp
repz
cltd
adc
mov
adc
test
pop
pop
adc
push
ja
push
rcr
push
jmp
outsl
jbe
loopne
push
rcrb
ret
lret
jo
xchg
dec
jo
cli
adc
test
xchg
or
inc
cli
ljmp
dec
push
adc
jmp
or
leave
jnp
iret
pop
dec
sbb
imul
or
hlt
leave
imul
dec
dec
mov
sbb
int3
in
cmp
shl
or
xor
enter
sbb
stc
xor
rol
in
ljmp
inc
enter
push
mov
push
sub
mov
adc
xlat
or
rcrl
pop
ficompl
fdivr
ljmp
lret
mov
pop
push
outsl
rolb
call
stc
rolb
bnd
dec
sarb
fwait
iret
mov
lret
rcll
iret
hlt
es
jns
mov
int3
insl
rcl
lea
test
xchg
ss
rcll
cmp
jecxz
iret
cwtl
xchg
rorb
fiadds
je
js
loop
xchg
cmpsb
push
pop
mulb
dec
mov
inc
repz
sub
adc
mov
xchg
cltd
pop
sub
adc
cltd
sbb
dec
pop
jp
xor
out
fwait
add
lahf
add
int3
cmp
addb
inc
loopne
cmp
aaa
js
lret
ret
fidivrs
inc
dec
xchg
nop
pushf
xor
or
test
inc
pop
jmp
xchg
outsb
rol
call
dec
insl
or
push
ljmp
mov
call
cmp
xchg
push
push
es
lret
cli
cmpsb
decl
cld
mov
push
adc
fs
ret
frstpm(287
stos
sbb
movsl
dec
or
cmpsl
pop
or
mov
loope
cmp
inc
std
idiv
adc
popw
aam
dec
jmp
ss
mov
scas
les
daa
mov
lahf
xchg
lods
push
sub
dec
dec
mov
test
decl
mov
sub
fildll
xor
xor
adcb
or
idivb
ljmp
and
xchg
pop
cwtl
mov
push
push
and
add
xchg
xchg
scas
insb
jbe
sar
add
cmpsl
add
mov
adc
rcrb
iret
insb
mov
sbb
leave
ljmp
push
push
jle
in
shlb
lock
cmpsl
jb
lock
jl
lea
jmp
push
dec
ljmp
lret
sub
push
mov
rolb
jmp
pop
mov
mov
inc
push
test
idiv
int
jbe
sbb
add
sub
jae
bound
icebp
push
fprem
pop
lret
adc
dec
add
xchg
flds
ljmp
push
cmp
sbb
aaa
loopne
cmp
mov
mov
data16
or
lods
sub
jbe
mov
push
dec
imulb
push
sbb
sub
dec
fwait
cld
cmp
test
pop
mov
sub
je
cs
insl
dec
orb
xor
inc
out
jge
xchg
fmull
add
add
cwtl
dec
add
pop
leave
jbe
cmp
into
xchg
pop
rolb
es
lea
xor
inc
jecxz
test
sub
add
iret
pop
sbb
jne
jbe
xor
stc
test
dec
sbb
pop
std
push
xor
ljmp
push
sti
xlat
push
sub
inc
arpl
push
pop
add
mov
pop
jl
mov
paddw
add
xchg
xchg
imul
cltd
pop
decl
sbb
clc
outsl
ret
fcomi
jg
sub
popa
add
call
inc
jg
jns
inc
lret
mov
jg
or
xor
mov
call
jno
jl
rcrb
pop
lret
je
jae
ljmp
adcl
stc
jno
or
ror
sub
daa
shr
pop
roll
leave
in
imul
xor
leave
movb
sbb
xlat
jl
pmulhuw
dec
add
mov
and
cmpsl
inc
jmp
or
push
push
sub
mov
int
inc
scas
iret
push
test
xchg
popa
push
push
push
xchg
lods
jl
imul
lea
popa
les
push
rep
jne
lcall
dec
jo
sub
and
xor
test
sub
test
std
ret
xchg
and
hlt
fimuls
and
adcb
aad
int3
push
cmp
sub
sbb
out
pop
popa
daa
pop
setl
roll
fwait
sbb
jns
cli
aam
test
cmp
xchg
ds
pop
into
mov
and
data16
and
pop
lods
sbb
ficoml
jno
xchg
adc
xchg
jge
pushf
subl
lcall
and
sbb
sbb
inc
cltd
lock
jge
neg
push
repz
lods
lret
outsl
lea
sbb
or
cmpsb
pop
shrb
mov
cmpsb
leave
outsl
xchg
jno
repnz
push
or
jmp
imul
sub
mov
mov
mov
jne
icebp
or
xchg
jne
testl
mov
in
pop
jmp
push
in
mov
call
les
xorl
inc
shll
jmp
clc
lea
xor
enter
inc
xor
insb
out
enter
dec
xchg
push
jecxz
xchg
in
pop
jno
add
mov
mov
push
fadds
and
call
adc
test
stos
int
movhps
xor
aas
pop
push
fwait
or
iret
aas
push
mov
push
add
cld
cwtl
mov
push
push
pop
mov
std
or
ljmp
popa
lods
cmp
leave
jo
daa
mov
mov
pop
sub
hlt
gs
add
pop
cmp
mov
mov
sbb
sub
mov
out
arpl
cmpsl
adc
shr
out
out
aas
adc
or
jg
shll
mov
add
jmp
mov
js
mov
cmp
jae
add
inc
cmc
cmc
cld
mov
push
inc
call
jl
mov
sbb
jns
scas
test
adc
cli
adc
aam
sub
aas
sub
shr
loop
decb
or
sub
jmp
es
mov
dec
mov
sub
mov
lds
sbb
scas
inc
sub
imull
mov
out
mov
in
and
lret
or
jae
dec
imul
lock
dec
int3
int3
jae
jne
mov
push
jle
cwtl
add
inc
arpl
divl
scas
and
iret
xchg
inc
sahf
pop
in
lret
adc
or
add
dec
or
repz
xor
xchg
and
lods
or
inc
stos
push
incl
mov
and
pusha
dec
lods
imul
mov
out
shlb
cmpsb
sub
cli
rcrl
adc
pushf
and
jl
xchg
data16
push
inc
push
xor
jmp
xor
dec
mov
icebp
lahf
das
mov
and
dec
loope
lret
cmpsb
xchg
pop
mov
aas
sbb
cmp
mov
fsubs
push
shrb
or
mov
jg
push
jecxz
jno
clc
test
adc
jg
test
daa
imul
popf
incb
test
pop
jge
pop
dec
sub
loope
repz
mov
jl
shrb
sub
pusha
in
lods
stos
or
nop
gs
jmp
sub
nop
push
mov
fsubrp
enter
xchg
xchg
fwait
sub
ret
sbb
icebp
ja
jge
cld
rep
mov
sbb
rorb
or
in
dec
pop
xchg
jne
ljmp
jae
inc
xchg
lods
xor
mov
int
aaa
movsb
and
xor
testb
lods
enter
gs
jno
xchg
nop
sbb
mov
pop
pushf
popa
push
xor
clc
adc
inc
xchg
rclb
leave
in
loop
add
inc
mov
movsb
stc
pop
push
or
cld
push
xor
jmp
mov
lret
out
pop
shl
shll
iret
aas
aad
or
pop
add
xor
hlt
sbb
in
xlat
fdiv
shr
ljmp
sbb
mov
mov
imul
orps
ret
shr
popf
or
sub
fstps
mov
stos
xlat
neg
jge
test
and
lahf
test
sar
xsha256
cmpsb
adc
add
pop
and
xchg
add
jns
mov
push
and
or
sub
dec
push
sub
into
mov
in
push
xor
mov
pop
add
enter
inc
push
sub
mov
xchg
jne
cmpsb
or
jno
mov
not
jge
fstl
roll
in
add
push
add
push
add
push
scas
cmc
dec
sti
xchg
push
or
and
jb
into
cli
xchg
pop
mov
cvtpi2ps
xchg
xchg
mov
out
stc
push
xchg
loope
pop
jne
in
or
aas
push
mov
dec
xchg
add
clc
mov
icebp
ja
enter
push
mov
int
push
or
adc
adc
mov
jno
leave
ror
mov
mov
int3
int3
cli
call
outsb
or
adc
pop
and
ret
pusha
mov
sbb
mov
fisubrl
add
stc
mov
jmp
sbb
je
rcrl
in
xchg
out
movsl
xchg
lret
mov
fld
sti
in
fcomps
push
fwait
or
imulb
add
add
sbb
dec
ljmpw
push
or
inc
inc
cmp
test
xor
mov
scas
imull
ds
call
ljmp
and
push
mov
sarl
pop
inc
mov
xlat
iret
jle
int
movsb
mov
push
xchg
scas
adc
sti
lea
mov
jmp
push
leave
shr
and
adc
add
mov
into
into
out
inc
sub
or
jb
pop
out
push
in
jmp
push
pop
mov
inc
lahf
ljmp
test
gs
or
dec
or
push
rclb
fildll
mov
cli
inc
xchg
js
or
subb
jge
xchg
lret
ret
adc
jge
dec
pop
shll
adc
mov
mov
jns
lahf
xchg
ja
push
loopne
mov
pop
pop
xchg
jno
cwtl
std
ret
inc
mov
xor
mov
cmpl
test
fs
and
lods
adc
repz
push
inc
jbe
pop
xchg
ret
sahf
xchg
sbb
mov
mov
scas
xchg
push
lds
rcl
push
push
aas
ret
ret
imul
orl
push
dec
and
loopne
add
adc
bound
jnp
inc
paddusb
xchg
fs
lret
xchg
push
js
mov
bound
filds
dec
xlat
in
addr16
xor
jb
sub
hlt
iret
into
push
call
inc
stos
dec
shlb
das
adc
cmp
sbb
mov
test
ret
xor
lcall
or
push
sub
mov
rolb
push
ret
test
loop
sti
lret
inc
test
adc
rcll
pop
es
adc
push
xchg
xor
inc
movsl
adc
add
nop
inc
jb
xchg
cwtl
into
sti
and
mov
jb
mov
push
adc
or
mov
ret
lret
repz
call
mov
sbb
aaa
adc
xchg
les
pop
adc
out
xchg
out
call
mov
pop
mov
push
cli
ret
ljmp
test
xchg
add
mov
pop
call
in
mov
out
push
data16
jmp
jae
add
rcll
mov
bound
cmc
mov
sub
inc
mov
push
dec
out
push
jge
loope
icebp
or
mov
mov
cmp
popf
push
stc
mov
ror
sti
shl
in
jns
xchg
loopne
and
push
lods
lahf
xchg
mulb
pop
mov
call
xlat
push
inc
stos
dec
imul
mov
adc
addr16
shl
int
and
sbb
pop
mov
loope
jle
leave
jmp
fimull
lods
cmp
aaa
ret
or
fs
push
xor
stc
jb
imul
and
dec
cmpsb
mov
stc
lea
mov
xchg
hlt
mov
icebp
and
cmpsb
jno
addr16
jp
jnp
push
cmp
push
std
outsl
mov
dec
or
or
insl
dec
mov
inc
or
pop
and
inc
push
cmp
push
jo
sub
enter
lahf
xlat
aad
lcall
add
ja
or
icebp
jnp
popf
dec
and
xor
dec
aad
repz
inc
pop
scas
xchg
mov
clc
mov
sub
mov
mov
popf
jle,pt
leave
push
popa
push
flds
outsl
cmpsb
dec
dec
mov
pop
mov
int
addr16
jo
int
sub
ss
mov
mov
subl
pushl
xor
jb
jne
xchg
call
mov
pop
sbb
enter
sbb
xor
out
lods
cld
lret
add
inc
cmp
aaa
inc
sbb
call
lcall
scas
cld
std
xor
jg
addr16
adc
js
call
mov
jns
sbb
test
insl
jmp
gs
gs
adc
sar
mov
mov
sahf
lcall
xor
xor
mov
nop
int
push
push
mov
frstor
insl
add
mov
lods
jecxz
sti
mov
pop
inc
rorb
push
dec
mov
out
xlat
jp
mov
push
shl
mov
jae
outsb
lahf
out
cli
mov
push
mov
add
cmp
enter
lock
fmuls
in
add
mov
push
je
mov
mov
sti
out
jmp
push
rclb
movb
xor
cmc
jnp
inc
leave
ljmp
mov
xchg
push
or
int
pop
test
call
adc
add
int
pop
xchg
pusha
dec
mov
daa
lock
cld
cli
mov
xor
push
mov
lret
xorb
xor
inc
mov
xchg
cli
jno
popa
ficomps
shl
gs
pop
add
mov
dec
movsb
and
or
and
iret
inc
lret
jb
lret
dec
stc
fmull
jle
sub
icebp
stc
add
aam
mov
push
add
call
aaa
loopne
jge
das
inc
mov
and
cmp
xor
or
insb
xor
mov
adc
roll
adc
int3
daa
mov
hlt
pop
sbb
iret
cld
sti
std
lods
popf
xchg
jb
dec
mov
data16
dec
or
mov
add
push
dec
nop
sbb
jmp
rcll
and
mov
ja
dec
dec
adc
mov
jne
rclb
lock
mov
sti
arpl
sbb
pop
xchg
outsl
and
out
cli
cmpl
enter
push
enter
fdivrp
into
inc
pop
cli
jmp
into
outsl
cmp
cmp
mov
lret
shl
mov
es
push
mov
nop
jmp
adc
lds
iret
movsb
sti
jecxz
add
mov
orl
xchg
sub
jl
mov
int3
xchg
lret
inc
pop
repz
and
les
lahf
cmp
int
push
repnz
mov
push
and
xlat
call
dec
mov
ljmp
call
add
stos
cmp
mov
roll
inc
and
loop
mov
icebp
in
sbb
enter
mov
cmp
and
ret
push
adc
or
test
dec
and
inc
adc
das
sub
xchg
lret
push
hlt
or
call
rorl
push
pop
and
or
aad
dec
lock
inc
mov
xchg
stos
push
mov
inc
mov
add
add
sub
jb
notl
rorl
adc
push
push
shrb
sub
pop
cmp
sti
adc
mov
pop
pop
xor
push
int3
xor
leave
ret
jg
shll
mov
pop
gs
dec
cld
call
dec
dec
loopne
inc
xchg
aam
mov
ljmp
pop
xchg
int3
or
xchg
sub
daa
push
push
mov
or
movsb
hlt
and
pop
inc
notl
movb
jle
out
out
pop
pop
ret
out
jne
stc
lock
stc
insb
dec
cs
mov
push
pop
sub
pop
or
call
aad
xchg
or
xchg
clc
xchg
sub
gs
scas
pop
xchg
test
ds
shlb
mov
adc
test
mov
dec
xor
fcoms
push
dec
xor
test
dec
dec
lahf
call
sbb
out
in
jmp
and
and
or
loopne
fmuls
add
adc
jmp
mov
fwait
pop
adc
add
stc
mov
ror
bnd
call
jle
ret
push
mov
xchg
add
or
bound
push
mov
adc
leave
out
aad
mov
fcomp
sub
sub
insl
addb
dec
push
imul
xlat
xchg
cmp
fbstp
daa
cmpb
fisubrs
leave
push
adc
mov
mov
sbb
es
loope
in
int
hlt
std
xchg
adc
sub
pushf
mov
inc
xor
cmpsb
je
fmuls
add
xchg
xorb
add
pop
dec
sub
and
enter
arpl
cmp
dec
or
enter
clc
sub
mov
push
loop
iret
call
leave
and
test
popf
std
mov
lock
enter
adc
nop
and
adc
clc
call
test
outsb
rcr
popf
dec
inc
fisubs
sub
outsb
shlb
push
cmp
adc
cmp
sub
or
xor
or
sub
insb
cmc
stos
imul
mov
sub
xchg
data16
push
sub
mov
mov
push
decl
mov
test
les
mov
jmp
or
jmp
mov
inc
pop
pop
inc
addr16
repnz
sub
sbb
shrb
inc
dec
push
test
mov
add
in
mov
inc
pop
shr
int
decb
and
sub
test
mov
mov
nop
and
mov
enter
jo
push
xchg
out
les
dec
and
out
adc
jo
scas
pop
sbb
repnz
std
leave
add
lock
fs
pop
outsb
add
aad
push
xor
mov
popf
or
lret
cmp
mov
imul
push
in
mov
call
xchg
and
lea
cs
jb
pop
add
dec
into
pop
sub
fwait
je
jb
scas
cld
in
mov
es
imul
rorb
mov
imul
mov
jmp
call
ret
lods
mov
and
push
and
std
add
cli
jmp
mov
sub
loopne
sti
dec
add
jae
into
xchg
jl
push
aaa
push
cmpb
lock
cmp
rorb
cmp
push
hlt
xor
mov
mov
testl
push
dec
aam
pop
in
add
insl
and
cmp
js
jge
cmc
xchg
and
cmp
stos
xlat
shlb
xlat
inc
add
sub
jmp
ljmp
aaa
mov
fsubrl
add
pushf
add
enter
xchg
adc
xor
popa
push
mov
in
lock
incl
jg
adc
mov
xor
lock
into
cmp
out
std
fnstenv
jo
add
inc
jle
sbb
ret
hlt
cld
push
dec
pop
xor
rcll
jmp
lahf
and
outsl
and
jnp
out
std
push
sarl
sbb
incl
pop
jae
push
out
jne
pop
call
js
xor
push
xchg
xchg
rorb
insb
jmp
push
jge
in
dec
lret
out
jns
icebp
lock
mov
adc
lea
scas
les
in
pop
mov
stc
cs
addr16
dec
js
call
popf
add
enter
jno
pop
inc
push
push
incb
cltd
std
sub
out
std
pop
in
js
mov
test
mov
push
push
std
push
sub
shr
add
mov
or
cmp
imul
sub
mov
add
push
sub
xor
imul
adc
add
pop
mov
dec
push
mov
xor
sub
cmp
jbe
repz
test
decb
lahf
inc
xor
add
push
push
jp
cwtl
ret
je
xor
adc
shll
in
test
push
fdiv
jb
mov
lock
fsubr
lcall
mov
inc
leave
xor
lret
jo
sub
inc
hlt
in
adc
leave
mov
int3
xor
repnz
mov
decb
jo
ret
call
xchg
jns
jo
mov
mov
jecxz
push
cmc
dec
addb
jne
mov
fcmovne
and
lea
lahf
adc
leave
push
ja
cmp
xor
test
leave
aam
cmp
int
inc
mov
mov
mov
int3
leave
adc
cld
xchg
adc
jne
fistl
sbb
mov
enter
in
or
fbld
scas
xchg
lcall
lea
subl
dec
shll
fprem1
and
sbb
push
and
jne
pop
push
loopne
xchg
incb
pop
sbb
pop
mov
push
xor
inc
cmp
xchg
enter
pop
mov
xor
mov
cmp
movsb
sub
popa
popa
mov
and
outsb
out
in
mov
icebp
pop
push
shr
dec
push
pop
and
repz
scas
aaa
pusha
pop
push
dec
cmpsb
push
add
pop
sbb
fadd
test
push
shlb
add
add
add
cmp
popf
push
inc
mov
cmpsb
test
in
cwtl
std
pop
xor
and
mov
mov
sbb
dec
cmc
popa
subb
rcll
pop
stc
push
adc
pop
popa
arpl
out
sti
jo
cmp
xchg
sub
jmp
mov
movaps
aad
pop
and
or
and
jo
fsqrt
pop
xor
repz
adc
push
adc
or
jne
cld
test
add
mov
cmpsb
jmp
stc
adc
push
and
adc
stos
inc
notl
jmp
jge
fdivrl
fidivs
lcall
adc
pop
rolb
jae
ret
dec
push
popa
inc
adc
mov
or
xchg
cld
cmp
xchg
dec
mov
push
xchg
rcl
push
insl
mov
push
dec
jmp
bound
es
cmp
jmp
rcrb
inc
and
int3
cld
dec
mov
jnp
mov
xchg
mov
pavgw
jne
loope
xchg
subb
xlat
out
lods
std
mov
and
mov
sub
push
mov
les
mov
pop
popa
rep
mov
imul
std
dec
ds
push
imul
es
insb
call
mov
neg
movl
sbb
lds
fs
sub
shrl
xchg
insb
imul
scas
dec
mov
jg
addr16
dec
fcoms
call
jne
shrl
xchg
leave
push
sub
mov
cmc
shr
jmp
mov
add
mov
rol
adc
add
sub
in
push
shll
or
xchg
loopne
jmp
push
mov
xor
cld
mov
sub
fs
xchg
fwait
dec
stc
or
inc
jle
rolb
fmull
loopne
fsubrl
xchg
clc
sub
xor
and
lahf
into
cmp
push
push
push
jne
popf
idivl
push
fmuls
in
hlt
out
adc
dec
sahf
jo
sub
pusha
push
out
insl
xor
mov
mov
lahf
xchg
adc
sbb
xchg
dec
adc
xchg
inc
fmul
dec
pop
dec
pop
test
or
dec
inc
sbb
jbe
xor
sub
sbb
in
std
cmp
and
sar
in
outsl
shr
push
add
jmp
xor
hlt
inc
test
mov
push
add
pop
xor
mov
push
xchg
orl
xchg
or
adc
movsb
repz
pop
jg
es
mov
iret
je
lock
jmp
dec
imul
xchg
inc
mov
xor
jl
push
aam
jg
shlb
push
push
das
dec
aaa
aaa
cwtl
or
sub
add
ljmp
cli
lock
in
decb
rcl
mov
enter
inc
jecxz
hlt
pop
jo
inc
dec
imul
ret
xchg
dec
dec
stos
mov
sti
cwtl
mov
cmp
xchg
ret
mov
mov
cmc
inc
mov
inc
mov
and
loope
fdiv
repz
add
cld
push
adc
mov
cli
dec
mov
lods
fwait
call
mov
shll
std
scas
test
inc
cld
pop
mov
dec
push
inc
add
mov
xor
or
cld
add
xchg
idiv
subb
xbegin
inc
lahf
xchg
jge
pop
call
inc
dec
arpl
cmp
xchg
xor
and
ds
cwtl
pushl
xor
cli
or
cwtl
or
ss
fs
repz
movsb
out
lahf
or
push
or
dec
mov
pop
push
fwait
cmc
adc
push
pop
mul
pop
and
sbb
fists
std
xor
lods
jo
cmp
popa
scas
cmp
fstl
into
movsb
je
fcmovnu
fistpl
lret
jmp
push
lods
sub
sbb
push
push
test
call
jne
loope
test
jle
jb
sub
clc
mov
mov
scas
movups
mov
or
sub
cli
or
nop
push
cmp
es
mov
push
mov
push
call
lock
or
xor
cmp
add
pop
lea
in
xchg
push
pop
push
lcall
xor
and
adc
push
pop
fs
call
and
push
js
push
enter
push
adc
stos
cmp
scas
clc
xchg
and
fisubl
nop
push
sub
aaa
xchg
or
iret
testb
cwtl
lret
mov
ret
test
outsb
cmpsb
arpl
or
mov
and
dec
and
mov
bound
dec
es
es
pop
andl
push
dec
cmc
lret
repnz
jne
mov
inc
ror
mov
or
outsb
leave
mov
fwait
test
sbb
mov
push
push
pop
leave
or
cmp
pop
mov
mov
icebp
push
repnz
scas
mov
mov
ret
repz
in
push
call
mov
mov
ret
mov
nop
pusha
jns
dec
daa
xlat
imul
fistl
inc
pushf
xor
iret
mov
cld
xchg
or
mov
mov
xchg
sbb
mov
outsb
sbb
pop
dec
dec
into
xor
cmp
push
cmp
movsl
mov
mov
add
jecxz
inc
mov
jne
aad
pop
cli
daa
test
mov
pushf
xchg
hlt
imulb
mov
mov
jp
call
into
mov
je
test
jge
xchg
shr
fisttpll
iret
fsubrs
pop
aas
pop
repz
pop
loopne
adc
hlt
leave
movsl
sub
and
or
sub
insb
pop
inc
dec
add
lods
push
mov
lds
enter
ja
xchg
ficompl
test
jmp
mov
mov
jmp
shlb
cmpsb
add
or
xor
adc
push
mov
out
mov
inc
push
rep
pop
mov
cltd
pop
and
cs
cmp
jae
or
jno
push
hlt
shlb
or
enter
or
push
inc
addr16
ror
mov
les
sub
xchg
mov
testl
push
mov
enter
orb
sbb
or
icebp
push
dec
hlt
incb
mov
dec
pop
int
into
push
push
mov
daa
sub
movsl
arpl
lea
loopne
add
adc
cmp
pmuludq
das
jmp
or
push
in
enter
dec
call
push
cld
cmp
mov
das
and
add
push
xchg
ret
rorl
jmp
pop
fsts
mov
dec
fmul
mov
mov
mov
push
push
les
pop
cmp
je
mov
loope
push
fyl2xp1
sarl
push
add
adc
repnz
dec
pop
imul
test
jns
cmpsb
or
xchg
nop
jae
cmp
push
lret
mov
adc
pop
xlat
and
mov
sbb
inc
icebp
sub
adc
xor
pop
iret
cmp
sub
shr
add
cmpsb
lock
push
inc
push
cmp
mov
dec
adcb
jb
sub
sub
add
or
in
add
movb
rorb
iret
addr16
cmpsl
inc
cmp
lret
lahf
lock
cwtl
rorb
loop
sub
push
dec
add
sub
or
imull
and
dec
sub
xor
mov
jne
cmp
stos
jmp
dec
jle
add
stc
adc
cmp
cmp
xor
das
pop
xor
enter
pop
dec
jns
dec
leave
test
icebp
lret
inc
cmp
mov
arpl
imul
cltd
xlat
or
pop
dec
dec
jns
mov
enter
inc
inc
sbb
lret
or
sub
push
clc
sub
mov
into
push
call
cmc
icebp
pop
fs
cli
jne
cmp
cmpsb
xchg
daa
test
pop
rcrb
jle
cwtl
sbb
jne
jmp
scas
cmpsl
mov
cmpl
adc
test
clc
cwtl
xor
cmp
scas
ret
fs
sub
jmp
inc
sub
adc
push
in
sbb
ja
xor
imul
pop
std
xor
aad
pop
pop
push
add
and
gs
cmp
dec
push
nop
and
lea
xor
les
mov
pop
or
mov
mov
inc
scas
vrcpss
push
add
call
and
sbb
imul
je
mov
cmp
out
xchg
xchg
mov
sub
ror
push
pop
dec
cmp
into
mov
insl
imul
int
das
xor
jmp
push
pop
movsl
pusha
jge
leave
cmp
jne
jp
sub
fs
jne
push
jge
lcall
sub
xchg
mov
int3
xchg
add
sub
or
cwtl
test
jecxz
dec
and
clc
dec
fsts
testl
sahf
idivl
push
push
cmovbe
adc
jge
push
sub
and
dec
add
outsb
mov
stos
xor
sbb
shrl
out
push
enter
pop
pop
hlt
sbb
popf
push
lret
mov
dec
xchg
test
jno
out
dec
push
gs
adc
movsl
jecxz
xor
inc
sbb
and
inc
jo
lret
movsb
mov
stos
sbb
sub
aad
rorb
sub
and
push
cli
test
int3
hlt
xor
shll
jbe
in
fnsave
mov
icebp
sub
push
push
call
mov
mov
xor
out
adc
sbb
clc
test
lcall
js
idiv
jne
loopne
or
shrb
push
jmp
mov
movsb
aaa
aas
push
movsw
inc
adc
int3
push
sahf
inc
lcall
pop
cmp
imul
jae
inc
flds
sbb
push
movsl
mov
iret
push
mov
inc
sbbb
inc
loope
jb
mov
nop
sub
sub
mov
dec
mov
icebp
inc
lea
add
cmp
jae
sub
repz
movsl
dec
xor
dec
test
push
jnp
adc
in
aaa
push
xor
cmp
jl
add
push
jbe
fidivl
jmp
sub
test
pop
mov
fisttpl
inc
push
int3
mov
xor
mov
das
enter
mov
add
in
call
ss
adc
pop
leave
fsubs
test
or
push
mov
lock
mov
gs
enter
pop
les
or
stc
adc
mov
sub
repnz
test
popa
cld
cltd
iret
outsl
pop
adc
decl
cmp
xchg
jmp
push
jnp
push
data16
cmp
xor
jmp
or
mov
jns
fwait
push
faddl
mov
jnp
jbe
lea
mov
enter
push
popa
outsb
push
and
push
call
or
sub
mov
push
dec
ja
xor
inc
shll
xchg
cli
pop
jne
push
xor
push
pop
fsubr
in
shr
out
lcall
sbb
pop
fucomp
pop
lock
xchg
movsl
aam
or
xchg
xor
leave
call
sub
loopne
cmp
jmp
leave
pop
insl
jo
ja
loopne
sub
int3
cmp
je
inc
sub
enter
fiaddl
call
xor
pop
inc
jae
xchg
cmp
push
lock
jne
sbb
or
stos
aad
sbb
push
mov
scas
cmp
xor
xor
cli
iret
std
nop
cmp
xchg
loopne
daa
test
cwtl
fnstenv
rclb
cltd
stos
out
push
pop
test
rorl
sub
hlt
sti
and
push
insb
jp
call
cli
fs
jnp
and
imul
dec
cltd
aam
int
sub
push
push
shrb
fcmovne
outsb
xor
fs
and
pop
cld
fwait
xor
cld
jmp
mov
dec
jns
cmc
jnp
lret
stc
imul
clc
sub
fidivl
fcomi
fnstcw
rorl
mov
jnp
sub
jb
push
jp
add
push
or
adc
xchg
and
pusha
cmp
or
jp
sub
or
or
dec
fimuls
aam
jmp
adc
jecxz
or
cli
icebp
dec
cwtl
push
ror
sub
pop
mov
add
lock
xchg
sbb
outsl
roll
dec
dec
mov
lret
xor
ljmp
dec
outsb
psrlq
shlb
gs
inc
add
cltd
stc
jnp
in
push
imul
cmp
movsb
add
shr
jo
cld
test
jmp
leave
clc
scas
fisttpl
push
js
pushf
lret
xchg
xor
cmp
test
add
or
ss
jg
decb
mov
sbb
fs
push
cmc
add
lcall
popl
je
xchg
test
mov
cmp
stos
cld
icebp
repnz
sbb
sbb
sbb
jae
call
lea
stos
cmp
shr
xor
mov
or
rorb
pop
push
mov
sub
jmp
negb
les
in
in
repz
pop
je
xchg
push
hlt
out
mov
and
and
movsb
out
xchg
gs
sbb
lret
aad
cmp
in
cli
push
mov
call
nop
sub
xchg
inc
les
je
cmp
mov
je
dec
sub
lret
std
push
cmp
das
std
mov
sti
cmp
lret
xchg
aam
or
jb
cmpl
inc
movsb
xchg
add
aaa
ljmp
aaa
cmpl
add
xchg
and
pop
add
cltd
sbb
lret
cli
cmp
dec
mov
fsts
sbb
push
repz
or
popa
dec
ret
shr
mov
push
lea
push
mov
mov
cmp
mov
push
mov
mov
dec
lret
clc
lret
nop
sub
xor
mov
pushf
or
dec
cmp
xchg
enter
pop
sbbb
or
aaa
insb
imul
fists
xchg
or
or
call
outsl
xor
pop
mov
inc
pushf
jb
mov
inc
leave
mov
xchg
push
push
dec
out
movb
dec
dec
cld
cltd
adc
rcll
or
arpl
jg
data16
push
pop
xor
call
and
movsl
inc
outsb
xchg
add
aad
adc
int3
fst
lcall
mov
or
xor
jo
push
or
popf
pusha
cli
or
push
mov
lea
cli
add
pop
mov
aas
xor
leave
movsl
xchg
pop
mov
pop
dec
jo
inc
adc
cmp
incb
xchg
repnz
pop
pusha
and
sub
fistps
and
jg
imul
pop
mov
jecxz
enter
cltd
sbb
cmpl
jle
dec
jno
xchg
or
cmp
jb
add
test
cmp
add
sub
pop
pop
push
stc
cwtl
and
ret
fcoml
dec
add
lret
pushf
ret
mov
repz
and
aad
imul
lcall
cmpsl
cmp
in
pop
push
stc
pop
sub
add
shl
sub
or
xor
and
jne
fs
push
cld
into
daa
and
clc
repz
push
add
fwait
jmp
or
jne
or
icebp
pop
iret
mov
std
sub
mov
int
jge
mov
les
and
sbb
xchg
test
jmp
ficoms
sbb
xor
push
jp
xor
fldcw
lds
sahf
out
sbb
add
and
cli
xchg
cltd
insb
call
dec
dec
jne
icebp
adc
repz
xor
in
hlt
dec
ja
cmc
push
movsb
mov
jg
aam
repz
insb
add
pop
mov
in
pop
jns
stc
shl
and
out
cmp
dec
outsb
scas
nop
fcoml
xchg
add
inc
repz
mov
cmp
es
mov
out
popa
mov
iret
push
cmpsb
dec
lods
lock
fimuls
je
push
sub
xor
xchg
clc
jno
in
add
push
cli
popa
addl
add
push
cltd
int3
mov
gs
mov
mov
push
in
out
jns,pn
jns
into
jle
jnp
pop
sbbb
movsl
jge
cld
pop
cld
or
cmpsb
lret
add
repnz
aas
inc
stc
add
cltd
push
cmpsl
pop
mulb
add
rorb
inc
xor
jno
ret
mov
scas
imul
scas
push
lret
jmp
push
call
pusha
je
mov
dec
mov
stos
fsubrs
push
scas
cli
mov
xchg
lock
pop
mov
loope
xchg
xor
cmp
in
hlt
xor
jbe
ja
xchg
xor
pop
push
add
dec
repnz
push
inc
mov
out
inc
push
stos
xor
push
sbb
mov
test
mov
cmp
mov
xchg
push
xor
fwait
idivb
xorb
push
push
enter
outsl
xor
push
inc
aam
ret
dec
mov
xchg
enter
sub
incl
cli
xchg
push
mov
ja
gs
jae
int3
add
push
nop
dec
pop
pop
aam
rorb
stos
and
lahf
mov
fstpt
fstpl
dec
jge
ret
mov
popa
fimuls
sub
and
or
aas
jmp
loopne
int3
xor
popa
stos
mov
push
es
jge
sbb
xchg
rclb
loope
pop
pop
into
sbb
std
icebp
stc
imul
fwait
iret
jo
xor
cli
jne
xchg
push
push
xor
lods
or
cli
mov
divl
mov
dec
dec
push
testb
push
repz
call
rorl
mov
mov
testb
mov
shrb
jmp
jbe
sub
call
and
mov
add
sti
push
xorb
roll
enter
and
iret
jnp
sub
sub
pop
in
sub
outsb
in
dec
inc
ss
inc
mov
mov
nop
rolb
push
mov
data16
xchg
sbb
jns
inc
lahf
enter
push
push
adc
or
and
call
movsb
xchg
pop
movsl
mov
mov
mov
add
mov
push
sbb
ljmp
test
mov
push
inc
push
xor
ljmp
lret
xchg
and
test
dec
dec
or
add
in
mov
jnp
psrlq
add
cmpsl
dec
iret
or
shlb
mov
inc
fiadds
xlat
mov
shll
das
xor
adc
inc
xchg
movsb
je
repnz
ror
jae
in
mov
ljmp
adc
rolb
push
push
imul
in
push
xchg
jb
mov
and
ss
sub
je
add
cmp
scas
xchg
dec
inc
inc
test
jbe
ss
or
lret
inc
dec
inc
dec
std
mov
rclb
mov
out
clc
lcall
mov
sub
lcall
jp
stc
fldcw
hlt
jno
pop
sahf
push
hlt
pop
cli
or
jo
rcrl
notl
pop
inc
sbb
stos
adc
outsl
xor
pop
cld
scas
repnz
sub
adc
push
or
test
xchg
pop
push
lahf
sbb
and
jne
movsl
js
clc
lret
xlat
jmp
repnz
sub
lret
mov
cmp
ja
dec
adc
insb
mov
test
dec
jno
cmpsl
inc
or
icebp
add
mov
xchg
stc
dec
jae
dec
fsubrs
pop
cltd
mov
xchg
adc
push
mov
call
leave
ret
leave
call
xchg
adc
sbb
inc
cmp
jle
or
mov
stos
mov
mov
out
pop
pop
call
jne
mov
or
call
inc
mov
jg
add
dec
nop
push
mov
jmp
cmpsb
cmp
xor
xchg
or
aam
call
sbb
inc
pop
roll
cld
ret
stc
cmpsb
sbb
jl
xor
fwait
dec
lret
inc
test
cltd
neg
test
cld
pop
in
mov
sbb
mov
popf
arpl
notb
pop
add
out
xchg
dec
daa
xor
lods
mov
mov
es
push
push
dec
push
push
add
and
and
lods
cmpsl
jp
jg
xor
xor
cmp
leave
or
fists
repz
pop
or
movsb
dec
shll
mov
push
int3
ja
sub
cltd
mov
adc
test
fimull
dec
sti
sub
cwtl
int3
enter
cltd
jmp
pop
push
jns
and
xchg
pop
imul
xchg
int
adc
aam
shr
repz
rolb
cli
int3
fildll
mov
fistpl
lahf
movsb
mov
insl
inc
mov
je
push
push
jnp
cmp
push
dec
mov
mov
mov
dec
call
ret
xor
cmp
push
mov
lret
je
adc
mov
push
jno
sub
add
inc
outsb
movsl
xchg
sti
jne
dec
jl
sub
jbe
or
testl
outsl
movsl
cs
sbb
pop
pop
dec
add
testb
rcrl
into
mov
inc
dec
cld
sbb
repz
inc
lret
pusha
xchg
mov
add
loopne
push
sbb
clc
adc
fcoms
jle
adc
hlt
pop
mov
push
jl
xor
dec
rclb
sbb
pop
or
inc
mov
dec
lcall
pop
xor
push
adc
shll
inc
mov
adc
sbb
roll
jg
stc
jbe
cmp
ds
pop
sub
stc
sub
cmp
shll
sahf
sub
push
add
sub
sbb
push
std
pop
mov
mov
jmp
test
cli
cmp
fidivs
arpl
sbb
jae
cmp
push
cmp
and
test
orl
loope
rorl
sub
cmpb
scas
dec
or
mov
cltd
sbb
and
xor
lods
or
imul
sbb
andb
les
push
daa
or
lods
jno
int
lea
incl
fs
cmp
jmp
sti
mov
mov
test
dec
mov
sbb
fnsave
enter
fnstenv
push
daa
xchg
pop
into
dec
test
lods
sbb
stc
cmp
and
scas
dec
das
dec
cmp
sbb
je
pshufw
push
push
xor
popa
lret
imul
lcall
and
insl
and
inc
add
adc
dec
int3
inc
sbb
es
data16
in
cmp
int3
mov
neg
repz
rcll
push
incb
scas
xchg
cmp
inc
cmp
faddl
jae
cmp
sub
call
lret
mov
mov
inc
push
repz
dec
and
and
jmp
fs
push
push
int
out
icebp
dec
iret
mov
cli
push
cmp
push
iret
sub
sub
stc
mov
mov
add
cltd
lea
icebp
and
cmp
call
xchg
repz
andb
mov
lock
into
mov
sub
scas
imulb
xchg
fnstcw
int
out
in
pop
es
cltd
popf
add
cmpsl
add
xchg
sub
enter
mov
xor
pop
mov
mov
mov
xchg
adcb
scas
jp
scas
rorb
sbb
je
sbb
adc
sub
push
xor
inc
out
mov
cmpsb
in
jl
and
mov
mov
ja
std
cld
jg
sti
rep
add
je
dec
jmp
lret
sbb
enter
repnz
xor
mov
je
and
mov
mov
adc
repnz
insl
add
xchg
cmp
mov
aad
stos
xchg
fwait
popf
repz
je
sbb
jne
outsl
adc
and
or
pop
shlb
testb
loope
and
and
cmp
mov
iret
in
stos
jno
sub
mov
cmp
imul
shll
int3
xor
pop
cmp
and
inc
or
cmc
jmp
xchg
jle
jbe
lock
mov
adc
in
dec
or
lret
sbb
fsubs
imul
imul
or
cmp
xor
push
add
rorl
lods
dec
nop
lret
cmpsl
call
lret
add
lret
or
dec
das
loope
test
orl
pop
lea
pop
std
jl
subl
outsb
mov
dec
or
test
popa
idiv
ret
xchg
shl
xor
push
lret
mov
inc
mov
dec
fs
pop
cmp
pop
lea
shrl
and
mov
sub
dec
sub
or
sti
mov
lret
in
stos
std
and
stos
std
jge
jbe
cmp
lea
std
xor
in
add
ljmp
adc
or
jmp
jae
adc
sbbb
adcb
jo
adc
call
leave
push
je
mov
cltd
jl
inc
lock
repnz
and
jecxz
ret
pop
push
mov
add
pop
xchg
nop
mov
dec
pop
pop
lcall
in
dec
loopne
mov
adc
shrb
mov
push
outsb
mov
jne
mov
push
adc
outsl
push
test
mov
test
notb
in
ret
sub
fsubr
dec
xlat
and
lock
into
mov
movsb
loopne
call
push
mov
inc
mulb
xchg
in
mov
jns
lahf
imul
xor
subb
pop
call
xor
mov
cmp
mov
sbb
bswap
mov
mov
js
or
xchg
scas
inc
test
shrb
lret
fs
loopne
iret
int3
xor
mov
mov
insb
sub
daa
push
push
and
sbb
aam
and
jl
dec
push
rorb
fstp
inc
testl
aaa
dec
mov
sahf
or
add
pop
mov
ds
jb
or
or
sbb
stos
adc
rorb
loopne
inc
xchg
lods
mov
leave
mov
leave
push
sub
mov
cwtl
fsubp
inc
fidivrl
cs
lock
mov
mov
testb
or
pop
dec
adcb
clc
out
repnz
or
jbe
xchg
dec
dec
cmpsb
mov
mov
mul
and
icebp
rcrl
jae
pop
lcall
cwtl
nop
cltd
jge
adc
adc
lahf
jnp
cltd
sti
aas
jae
dec
jns
xchg
inc
imul
insl
cmp
movsl
lea
sub
dec
int
push
push
test
add
jle
aad
enter
in
cld
push
mov
mov
xchg
movsb
adc
sbb
jmp
mov
mov
aam
lahf
sub
cwtl
mov
fxtract
push
call
mov
mov
enter
and
call
and
or
mov
imul
pop
lods
mov
mov
in
sahf
lock
testb
out
jecxz
adc
xlat
xor
hlt
and
xor
add
jo
cmp
popa
push
pop
push
mov
xchg
jae
push
inc
lock
es
out
mov
insb
loop
jmp
inc
push
sbb
mov
mov
outsb
or
xorl
cmp
and
or
into
call
xor
loope
test
xor
out
xchg
xor
scas
mov
xor
repz
add
adc
xchg
sarb
incb
push
push
xchg
rorl
pop
xchg
sbb
adc
cmp
inc
add
jle
push
push
mov
mov
cld
push
repnz
jnp
or
adc
gs
popf
lods
jg
cltd
dec
decb
push
into
fwait
rcrb
sti
inc
lret
enter
sbb
dec
xlat
out
add
and
pop
or
fnsave
sbb
rorl
fadds
push
jl
mov
mov
je
out
dec
jg
xchg
andb
cmpsl
mov
and
xor
sbb
mov
insl
mulb
fisubrs
add
xchg
pusha
push
stos
xchg
jno
pop
cmc
ret
sub
mov
js
pop
jo
js
test
adc
shll
xchg
ret
jl
adc
int3
xlat
fcomp
fcompl
loopne
in
call
cmp
mov
cmc
shrb
push
ret
scas
repnz
cmp
mov
fadd
sbb
pop
rorl
pop
fsub
push
cmp
or
orl
ret
jae
xchg
sub
mov
mov
adc
mov
or
xchg
ljmp
aad
adc
or
pushl
gs
in
mov
xchg
dec
cmc
inc
out
imul
dec
xor
in
sub
push
and
lock
cld
and
sub
leave
ret
cmpl
jne
xor
dec
popf
mov
and
data16
gs
sub
or
mov
call
mov
lods
movsl
arpl
cmpl
je
add
jmp
scas
lock
mov
int
daa
inc
mov
imul
into
dec
sub
gs
mov
push
imul
in
lret
adc
loopne
sbb
or
jnp
and
add
rorl
popf
mov
je
popf
cmp
fadds
or
shr
xchg
nop
and
push
cmpsl
ficompl
fisttpl
ljmp
hlt
div
sbb
popf
cmpsl
adc
add
jb
cmp
ja
xlat
pop
ret
xorb
dec
inc
mov
jno
xchg
dec
adc
rorb
cltd
fucomip
test
sub
mov
xorl
pop
pop
adc
or
or
or
cli
add
loope
pop
push
xlat
call
shl
sub
jg
xchg
aam
into
or
imul
pusha
pop
jle
decl
enter
pop
pop
or
jne
push
add
mov
pusha
andw
mov
mov
ror
mull
cmp
jmp
dec
adc
cld
xchg
arpl
xor
stc
push
lea
cmp
lock
dec
push
imul
loope
out
int
ljmp
lahf
leave
pop
repnz
push
enter
stc
ficoml
fbstp
push
or
dec
divb
inc
push
pop
mov
sti
enter
add
mov
or
push
call
stc
enter
adc
push
jnp
imul
xchg
mov
icebp
adc
ljmp
dec
xchg
negb
mov
and
je
adc
mov
inc
imul
hlt
pop
cwtl
clc
stc
cld
dec
add
shrb
push
mov
mov
sbb
dec
fsubrs
rcl
sti
notb
ret
fmulp
aaa
push
mov
cmp
inc
mov
pop
or
cmp
sbb
dec
lret
popf
inc
adc
dec
ss
mov
popf
push
mov
dec
daa
fisttpl
fdivrp
xchg
dec
ret
dec
and
call
mov
nop
xlat
adc
ljmp
pop
xchg
addb
push
cmpl
dec
popa
sub
fidivs
fstpt
jmp
lods
pop
insl
push
iret
call
lea
dec
fwait
pop
mov
pop
loop
repz
ljmp
fwait
pop
push
sbb
lea
cli
cmp
mov
and
hlt
adc
dec
dec
icebp
sbb
incl
je
cwtl
or
or
push
clc
aaa
pop
lret
int
jne
loopne
push
xchg
and
sbb
inc
jo
mov
dec
mov
jmp
out
stos
aam
aad
ret
aad
fstpl
fs
push
push
mov
push
data16
xchg
inc
dec
inc
xor
push
xor
push
jl
loopne
popa
cs
pop
xchg
test
or
pop
xor
lea
sub
je
test
loope
xchg
dec
or
jbe
dec
gs
dec
lock
push
mov
test
movsl
adc
jle
aas
xchg
sub
or
cmpsb
and
out
insb
enter
lret
insb
je
orb
loop
dec
push
or
xchg
inc
sbb
push
and
or
xchg
xchg
or
xchg
cmp
xchg
and
jmp
jbe
xor
lahf
je
adc
ret
int3
ficompl
out
sbb
pop
je
test
imul
push
adc
cs
lret
stos
mov
pop
pop
push
and
aad
imul
sti
je
ss
cltd
xchg
dec
sahf
push
loopne
mov
pushf
jb
cmpsl
cmp
test
clc
call
notb
and
call
fs
mov
mov
xchg
mov
xchg
lahf
adc
sarb
jb
cmp
adc
cli
jmp
call
adc
test
jmp
inc
pop
lods
dec
add
and
adc
add
pop
cli
das
aas
xor
lahf
inc
jecxz
jmp
xchg
push
lret
es
lods
insb
cwtl
adc
in
sub
pop
push
push
mov
sarb
adcb
int3
call
aas
sahf
lods
add
es
xor
mov
push
leave
into
add
xchg
push
dec
hlt
call
or
mov
ja
add
xchg
imul
dec
adc
std
int3
cmp
inc
cwtl
outsl
xchg
push
xchg
lahf
xor
lods
cmp
xor
sub
or
cmc
xor
or
imulb
insb
pop
or
jmp
jmp
add
mov
cmpsb
inc
mov
mov
xchg
add
mov
rorl
nop
xor
xlat
sub
sub
imul
sti
into
jle
lret
cltd
pop
std
lock
push
fucomip
cmp
and
jne
lds
push
push
add
decl
cmp
leave
and
mov
adc
sub
mov
push
scas
in
push
mov
dec
dec
push
je
sbb
and
stos
es
mov
mov
fcom
sbb
inc
inc
scas
pop
sbb
mov
jne
inc
fisttpll
dec
jne
pop
cmpsb
adc
mov
add
ja
push
push
les
adc
sbb
jmp
sbb
inc
fadds
in
add
jmp
enter
sahf
pop
xor
fisubs
cli
push
dec
and
dec
cmp
je
nop
cmp
mov
mov
mov
pop
inc
pop
pusha
sbb
shll
add
mov
shl
std
ret
popf
push
repz
inc
push
les
fiadds
push
ljmp
clc
fisttpll
hlt
sbb
bound
inc
jl
xor
adc
js
jl
fimuls
rdpmc
into
push
or
push
int
test
add
and
xchg
xor
jmp
roll
cld
xor
mov
and
xor
sbb
inc
fcmovbe
cmp
jmp
push
ljmp
jb
iret
dec
push
pop
loop
jae
jge
sbb
xorb
lods
cmp
ficoms
sub
mov
xchg
ds
xor
push
pop
jae
sub
jno
fcomp
cmp
iret
fldl
shr
mov
fimuls
push
lea
jo
or
dec
imul
push
mov
out
sbbl
xchg
inc
sub
call
and
sbb
ja
mov
lret
cmp
sarb
inc
ss
and
stos
mov
cwtl
or
mov
lea
adc
ss
xor
cwtl
push
inc
int3
add
and
mov
xor
inc
add
push
dec
test
xor
sub
pop
arpl
sti
fwait
sub
or
xor
wbinvd
andb
cmp
aad
jge
pop
aam
dec
jb
leave
ljmp
sbb
or
gs
icebp
out
push
cs
movsb
pop
xchg
and
pop
sar
push
cmp
adc
pop
js
icebp
icebp
mov
mov
cmp
jmp
mov
lcall
fcoml
push
mov
fldcw
sub
push
push
repnz
cmpsl
call
jo
fwait
jne
idivl
jmp
aad
shr
or
or
sbb
je
mov
mov
jmp
sub
lock
sub
shlb
add
jg
add
cli
mov
and
in
push
sub
ljmp
xchg
fisttps
jg
test
iret
imul
push
ret
inc
cmp
cmc
les
xchg
shrb
push
in
mov
cli
mov
lods
sub
and
not
cltd
dec
xlat
inc
and
outsl
lcall
inc
jle
mov
xchg
sbb
dec
xchg
mov
lret
cli
enter
iret
push
mov
sar
add
ja
cs
call
pop
xchg
icebp
test
xchg
cs
mov
adc
mov
fwait
je
cmp
xor
adc
and
cltd
dec
scas
rolb
and
cmp
mov
iret
call
xchg
rorb
jmp
lahf
and
pop
jmp
adc
xchg
push
pushf
iret
and
xchg
fidivrs
roll
mov
mov
rcrl
pop
push
pop
jp
pusha
xor
pop
cwtl
and
mov
jecxz
out
inc
out
xorb
xchg
pop
push
testl
xchg
iret
jmp
push
inc
subl
or
xor
or
mov
push
mov
pop
and
xchg
adc
call
push
int
orl
add
and
jb
pop
dec
scas
dec
push
lret
mov
fwait
mov
mov
in
dec
cmc
mov
push
fucomp
insb
shll
into
pop
dec
push
mov
pop
inc
subl
enter
popa
inc
sahf
shll
xchg
cltd
add
and
sbb
rorb
inc
in
lods
std
pop
repnz
aad
add
add
push
or
pop
cmp
fcmove
or
test
sbb
rcl
call
lea
ret
test
loop
mov
push
or
mov
push
lahf
adc
push
fwait
dec
mov
add
sbb
jmp
lret
leave
mov
lods
xchg
push
dec
dec
data16
jne
push
rcr
or
mov
dec
lahf
mov
jno
sahf
push
je
roll
roll
and
sbb
inc
fidivrl
pop
cmpb
cs
sub
xor
xchg
or
push
out
popf
or
cltd
inc
lahf
dec
enter
ljmp
inc
dec
loopne
sub
add
jg
mov
dec
push
dec
sub
mov
roll
xor
adc
ja
mov
jo
add
movsb
mov
or
inc
mov
lret
mov
push
or
pop
push
call
ljmp
adc
pop
mov
dec
sub
and
dec
fwait
cmpsb
fs
dec
scas
cmc
outsb
xchg
cli
lret
rcll
sub
or
push
repz
jbe
mov
adc
lea
shl
in
or
jmp
ljmp
mov
add
xor
jmp
lahf
push
popa
pop
popa
pop
xor
jne
call
adc
or
and
adc
shr
pop
enter
xchg
adc
or
jmp
cmpsb
out
sbb
aad
xchg
mov
inc
dec
dec
notl
jg
jne
xchg
and
inc
das
daa
xchg
push
cmp
inc
jne
jecxz
icebp
or
mov
ds
rcrl
sub
iret
cwtl
mov
mov
adc
sbb
pop
fisttpl
rcr
or
lods
divl
repz
daa
jno
pop
inc
repnz
mov
mov
and
jp
dec
dec
aad
loope
or
lcall
je
mov
stc
or
orb
or
jmp
inc
xchg
jmp
pop
arpl
mov
mov
jle
xchg
mov
fistpll
xchg
add
lret
dec
ljmp
hlt
call
jg
ret
mov
fistpll
or
or
or
or
ficoml
jb
or
add
or
call
cmp
pop
xchg
inc
adc
or
cmpsl
jns
mov
cmp
pop
sub
dec
mov
jle
push
test
and
mov
jp
and
mov
jne
je
fsubs
jmp
out
mov
pop
jb
jmp
pop
cwtl
xchg
adc
mov
dec
in
adc
call
and
cmc
mov
jl
mov
xor
mov
out
add
test
inc
jg
xor
lock
cmpl
adc
push
mov
andl
pop
adc
mov
add
inc
sahf
xor
cld
cmp
clc
cmp
lret
outsl
adc
mov
cmpsb
sbb
pop
add
sbb
cwtl
mov
adc
mov
dec
or
adc
cld
cmp
dec
cmp
inc
or
sbb
stos
or
subl
sbb
pop
sub
out
or
jp
add
dec
jp
push
inc
das
cmp
jle
sbb
sub
jns
test
inc
jb
sub
out
popf
jb
gs
imul
jle
das
shl
lea
addb
cwtl
test
sub
mov
ret
rol
hlt
add
mov
sub
imull
cli
add
mov
nop
add
and
fwait
ja
push
xor
or
xchg
sti
push
dec
cmpsb
sbb
xchg
outsl
cmp
jo
test
ror
or
mov
lret
inc
or
stc
orb
or
xchg
les
sub
sub
fwait
stc
xor
mov
call
sub
mov
xor
or
and
stos
sbb
xor
pop
int3
and
push
cltd
sbb
push
add
aas
xlat
cmp
mov
shlb
lret
mov
cld
pop
fwait
sub
push
mov
mov
test
rcrb
movsb
enter
decb
notb
mov
shll
jo
insb
fcoml
rcll
push
leave
call
mov
cmpsl
iret
ret
cmp
pop
push
xchg
pop
push
enter
pop
jle
lods
lahf
lcall
leave
adc
xor
sti
ret
lock
in
xor
push
and
addb
dec
je
adc
fdivp
sub
xlat
movl
and
mov
mov
shll
iret
push
sbb
pop
aad
in
jmp
cld
loope
imul
clc
test
jo
shll
xor
push
leave
aas
loop
sti
adc
adc
sub
cmp
shrb
or
dec
repnz
out
mov
pop
add
sub
je
adc
ret
stc
lahf
or
aam
mov
mov
sarl
sti
lret
loope
cmp
subl
and
popf
jg
pushf
fwait
dec
outsl
jae
pop
dec
or
jnp
jno
inc
hlt
add
mov
enter
cmp
je
mov
scas
fcomps
mov
add
decb
pop
pop
pop
fwait
pop
xchg
roll
sub
mov
sbb
jmp
xor
das
pop
mov
nop
adc
mov
mov
push
cmc
jbe
stc
and
ret
popa
sub
lcall
adc
or
ljmp
and
pop
sbb
enter
xlat
sbb
push
jnp
std
out
and
adc
xchg
or
int3
das
xchg
daa
or
and
push
push
push
adc
adc
cmp
aam
mov
lahf
dec
test
and
xor
dec
adc
lcall
icebp
adc
adcb
jbe
add
sub
pop
fsts
pop
mov
adc
cmpl
popf
xor
jge
xchg
lock
pop
add
pop
hlt
pop
test
mov
push
data16
pushl
xor
sub
push
push
mov
add
mov
cld
pop
lret
mov
cmp
lea
push
cmp
jmp
jmp
movsb
or
cltd
fnstenv
xchg
push
cltd
into
fidivs
cltd
dec
lods
movsl
repz
repz
inc
or
pop
fcoms
add
or
mov
jge
mov
mov
arpl
dec
fidivrl
or
lea
pop
sbb
xchg
push
and
xlat
enter
add
and
loopne
iret
pop
push
jb
mov
sub
inc
dec
ret
lret
ret
test
push
cmp
pop
pop
icebp
sti
mov
jb
adc
hlt
sub
sbb
xor
fistpl
das
xor
xor
jo
aaa
xor
out
cmp
pop
pop
and
xorb
imul
hlt
pop
xor
push
inc
inc
out
in
pushf
xor
mov
inc
and
pop
dec
cmpsl
and
push
je
and
jge
xchg
add
inc
and
lea
sub
sbb
enter
xor
pop
push
test
inc
movsl
fistl
xchg
lea
leave
dec
repz
push
dec
push
lds
pop
mov
das
or
inc
pushf
hlt
mov
sub
dec
add
and
lods
jmp
iret
add
pushf
push
jae
paddw
mov
push
cwtl
add
imulb
push
cmp
or
ret
push
jmp
pop
mov
and
xchg
and
or
int
pop
and
ljmp
ss
adc
inc
jne
mov
movl
aaa
addr16
push
lahf
int
insl
push
hlt
out
push
out
push
xchg
jmp
add
bnd
sub
cld
stos
cmp
xchg
adc
xchg
mov
adc
lock
addr16
popf
xor
roll
jmp
movb
or
cmpsb
jmp
sbb
pusha
mov
hlt
das
xlat
sub
and
in
pop
push
dec
sbb
or
negl
add
cmpsl
iret
mov
cmpsl
clc
push
cmp
sbb
pop
movb
test
ja
test
push
jbe
push
sub
repnz
inc
inc
hlt
jmp
popf
dec
test
lcall
jl
xchg
inc
dec
mov
jg
outsb
jae
out
mov
les
or
jnp
leave
jmp
mov
ljmp
pushf
outsl
clc
pop
lret
aaa
push
add
and
adc
sub
or
repz
and
repz
stos
push
movsl
and
sub
repz
jne
popa
adc
lret
xchg
cmp
push
lahf
shr
or
xor
fdivs
int
cmp
fs
test
fildll
outsb
repz
dec
pop
mov
pop
sub
sbb
adc
imul
jo
jle
dec
rol
inc
rcll
popf
sub
dec
push
fninit
sbb
nop
stos
shlb
iret
add
imul
aad
fmuls
pop
push
nop
push
cmc
pop
ds
imul
dec
lret
fdivs
stc
shlb
into
sub
sti
ljmp
stc
repnz
add
ret
add
lret
test
ljmp
lods
jp
xor
push
cmpsl
ja
sub
adc
xor
shr
cmp
lret
test
push
add
push
dec
js
pop
add
add
sbb
ja
xor
pop
mov
je
add
outsb
fmull
lea
inc
lds
das
sub
add
adc
push
cmp
jmp
sbb
push
xchg
mov
jecxz
push
or
leave
sub
xchg
pop
dec
jp
jp
stos
loope
and
xchg
loopne
and
push
ret
mov
and
fs
cmc
pop
dec
sar
call
inc
push
rclb
pop
or
in
nop
or
jg
pop
gs
mov
mov
pusha
push
test
mov
xchg
jmp
das
jnp
mov
int3
or
ljmp
push
pop
lods
movsl
out
outsb
or
push
add
sub
mov
mov
lcall
je
andl
into
lret
out
push
fstpt
add
outsb
push
lret
call
dec
inc
mov
add
xor
call
xor
jmp
pop
dec
cltd
cltd
or
sbb
pop
call
fstp
jmp
xchg
dec
addr16
mov
aas
outsb
outsb
push
cmp
mov
or
or
stc
daa
lret
mov
stc
cmp
popf
call
mov
xor
fmull
adc
daa
jns
movsl
or
cli
imul
dec
fs
or
pop
inc
inc
and
into
pop
ja
and
mov
enter
jmp
stc
mov
leave
ficompl
add
jne
xchg
lds
adc
call
icebp
or
cmp
jl
cmp
repnz
fstl
dec
cmpsl
sbb
xchg
js
mov
xchg
push
call
cld
inc
mov
xchg
jo
sbb
int
int
popa
pop
mov
sbb
sbb
ret
in
sub
mov
sbb
or
mov
push
lahf
and
jg
pushl
push
call
inc
or
in
jg
jbe
icebp
xor
mov
push
push
mov
or
adcl
mov
xchg
pop
nop
loopne
aad
adc
cmp
repz
jmp
jecxz
dec
dec
stc
imul
pcmpeqw
mov
int
movsb
mov
jg
lret
sahf
loope
shr
insb
inc
outsb
test
and
int
pop
call
xlat
dec
popl
shlb
fldl
push
adc
pop
xchg
sub
mov
xchg
cld
sub
fs
push
ljmp
mov
xlat
push
das
pop
cltd
popf
fists
mov
cmovno
fs
in
mov
or
xchg
lods
xlat
sub
mov
add
mov
and
loope
and
testb
fucomp
in
nop
cmpsb
push
push
inc
pop
or
in
jmp
ljmp
rol
inc
mov
lods
stc
jecxz
stc
mov
aam
int
aas
cmp
cmp
or
jnp
mov
cmp
inc
pop
test
std
cmc
adc
iret
inc
mov
mov
iret
shrl
std
mov
mov
dec
push
cmp
pop
popa
add
jmp
enter
imul
bound
dec
pop
pop
sbb
mov
push
lock
iret
and
mov
inc
test
pop
cld
rorb
filds
rcrl
mov
insl
test
xlat
push
lret
aad
adc
pop
mov
add
mul
lret
jmp
inc
dec
adc
xchg
lods
sub
leave
lods
aas
test
jae
data16
push
or
or
daa
xor
pushf
rcrl
mov
add
cmp
std
mov
movswl
push
test
push
loop
adc
clc
je
imul
fwait
jno
mov
ret
push
push
push
jmp
inc
hlt
iret
roll
stc
jae
jns
dec
sbb
insb
pop
xchg
mov
fcomi
cld
xorb
mov
sub
dec
stos
add
adc
xchg
push
dec
incb
pop
inc
xchg
jge
nop
adc
fmull
stc
call
add
push
sbb
push
add
xor
test
aam
or
inc
add
daa
leave
xor
dec
dec
stc
push
lahf
xchg
cs
mov
mov
and
nop
xor
movsb
xlat
inc
mov
inc
dec
pushf
mov
mov
pop
mov
jnp
mov
fcoml
inc
mov
inc
xchg
lcall
insl
fidivl
add
rorb
mov
xchg
sbb
or
push
mov
rol
nop
push
es
add
pop
je
daa
fimuls
ja
fisttps
add
inc
push
adc
cmp
dec
dec
jne
sbb
negb
in
pop
inc
or
enter
push
jmp
xchg
add
icebp
leave
jns
cmp
xchg
lret
nop
insb
cmp
and
sub
mov
ffreep
or
inc
dec
jle
mov
cmc
test
cli
fbstp
mov
leave
push
sub
pop
cltd
not
push
add
es
clc
cmp
lods
dec
xor
pop
and
lahf
clc
push
fld
inc
add
lret
adc
cli
test
jne
jmp
xchg
insb
jno
loop
push
mov
xchg
popf
cmp
dec
stc
dec
js
nop
push
push
push
push
pop
movsl
add
or
leave
test
adc
sbb
int
dec
cmp
or
xacquire
xchg
hlt
mov
mov
sbb
mov
out
inc
sarl
jg
mov
stos
popa
loopne
mov
jle
call
cs
cmpsb
movsl
mov
jecxz
dec
cmp
cmp
loop
mov
push
pop
and
test
cmp
add
pop
xor
or
mov
rorl
call
cmp
add
push
dec
in
in
cmp
push
call
xchg
pop
push
xor
pop
dec
je
lcall
xor
insl
cmc
cltd
add
adc
push
fmull
inc
cwtl
rorl
fimuls
and
adc
sbb
sub
test
je
decb
lret
sbb
repnz
pop
leave
mov
dec
test
cltd
or
mov
jge
inc
adc
movb
cli
cmp
nop
mov
int3
or
ljmp
je
out
outsl
lahf
popa
out
jp
jmp
lret
push
jp
in
jecxz
pushf
imul
mov
xchg
popa
rorb
leave
call
outsb
pop
inc
leave
cmp
cmc
jae
jo
icebp
push
rorb
dec
mov
rcrl
into
inc
or
dec
push
jmp
push
sub
dec
ljmp
ja
dec
xor
fldcw
test
xor
icebp
pop
and
pop
test
ja
jae
pop
cltd
dec
xchg
sub
aad
jmp
pop
and
lock
lret
aas
out
sti
or
or
lret
in
inc
and
inc
nop
test
insb
pop
es
lcall
mov
dec
fisttps
xor
imul
movq
mov
in
lret
and
push
push
lds
rorl
and
mov
or
in
lds
fs
in
popf
cmc
jge
mov
leave
adc
jge
jmp
jg
sub
sbb
rcrl
shll
sub
pop
scas
pop
inc
xchg
dec
pop
mov
push
and
add
xor
cmp
pop
iret
stc
jmp
pop
push
xchg
dec
fidivrl
inc
fsubs
mov
cli
push
dec
ror
mov
jb
or
push
mov
push
nop
dec
orl
scas
jbe
stos
jbe
cs
faddl
rcrl
push
push
scas
or
push
sub
sbb
ficompl
or
inc
xlat
dec
mov
xchg
xor
add
fnstenv
mov
ja
negl
xchg
push
test
fwait
cwtl
rclb
mov
xchg
inc
repnz
ret
adc
sahf
jp
adc
jmp
or
movsb
jmp
test
and
or
data16
or
lock
sbb
dec
cltd
mov
mov
push
sahf
or
jae
inc
dec
pop
xchg
into
faddl
push
call
sub
add
adc
adc
movsl
stos
lods
cli
inc
std
sbb
stos
jmp
inc
xchg
mov
shr
fmull
xor
jl
pop
fwait
cmp
jne
pushf
jns
dec
or
mov
fisubrs
pop
xlat
fs
dec
push
sub
jl
mov
insb
fwait
push
fs
and
add
push
mov
mov
sub
test
out
mov
push
popl
xchg
inc
cmp
lcall
inc
jp
sbb
xor
mov
aam
sbb
add
sbb
push
sub
int3
sbb
or
mov
dec
mov
ljmp
rcrb
in
test
sahf
cmp
add
movsl
scas
dec
fs
push
dec
sbb
sbb
or
out
xchg
push
fdivrs
leave
mov
lahf
add
add
mov
and
adc
cmp
cmp
cmpsl
jne
iret
cmp
pop
sti
pop
iret
bnd
int3
push
fsubs
jmp
sub
inc
leave
or
adc
mov
xlat
daa
push
je
arpl
adc
push
hlt
sub
test
mov
dec
adc
mov
sarb
add
xor
dec
iret
mov
mov
ljmp
hlt
cmp
pushf
test
xor
push
pop
enter
push
ficoml
pop
mov
jne
fisubrl
mov
iret
sub
lock
inc
cmp
vmaskmovdqu
leave
imull
dec
fisubs
adc
jg
add
sbb
sarl
mov
and
sbb
icebp
or
cltd
xchg
stc
mov
into
popf
adc
insl
push
dec
dec
pop
insb
xor
and
cmpb
imul
movsl
nop
iret
sbb
hlt
inc
and
inc
xchg
or
pop
xchg
xchg
push
mov
pop
nop
inc
dec
inc
jg
lahf
pop
dec
push
fs
negb
repnz
ret
add
ucomiss
xlat
jp
pop
in
mov
jmp
xchg
je
notl
mov
mov
in
cwtl
outsb
scas
cmp
inc
cmp
cs
sbb
je
pop
es
sub
jae
jmp
add
xor
sbbl
lods
addr16
out
push
int3
sub
mov
inc
lahf
and
xor
mov
sahf
and
xchg
rep
shlb
je
add
jmp
mov
fcoms
ret
adc
push
icebp
jne
cld
scas
mov
or
incl
push
leave
pop
jge
jns
mov
movlps
push
aaa
pop
add
mov
mov
cmp
lret
lret
adc
pop
and
call
pusha
and
jmp
jne
fwait
imul
dec
mov
sub
push
push
in
dec
lret
in
lret
test
mov
sbb
add
sub
addb
in
ficoml
pop
pop
mov
add
mov
pop
ret
mov
std
daa
lret
fisubrl
shll
jecxz
into
imul
ret
jg
ret
push
inc
sbbb
xor
leave
push
cmp
fists
add
rorb
ja
or
or
int3
add
and
inc
mov
sub
inc
aam
or
stos
xor
lods
add
inc
add
vpcmpeqb
add
mov
lods
jmp
movsb
xlat
push
push
stc
aad
jne
xchg
mov
adc
mov
xchg
or
ss
jp
std
rcrl
jb
mov
sbb
sbb
sbb
mov
or
mov
xchg
dec
lret
shrb
jmp
subb
jp
or
xchg
les
sub
rcl
xor
mov
ret
ss
loopne
mov
add
jns
and
push
jmp
and
cmp
fwait
es
insb
sbb
jno
stos
xchg
push
jns
adc
lock
lods
adc
sar
push
or
inc
sub
jmp
inc
mov
addr16
mov
mov
add
dec
add
pop
or
or
push
fsts
ret
push
mov
pop
lea
mov
jne
sbb
inc
sbb
xchg
sbb
jne
test
pop
jbe
iret
or
inc
ror
inc
push
adc
loope
jle
mov
mov
and
cmp
add
mov
mov
gs
dec
adc
mov
repnz
shrb
add
and
dec
sti
push
and
je
add
imul
pop
mov
aas
repnz
mov
repz
mov
cmp
pusha
sub
adc
and
sarb
clc
lahf
push
dec
aas
pop
push
mov
push
movsb
push
ds
and
call
pop
sub
and
inc
pop
imul
push
push
dec
repnz
jmp
pop
sti
inc
inc
addr16
lahf
cmp
stc
cmc
push
sahf
sbb
data16
nop
mov
leave
shll
test
lea
scas
adc
dec
jg
inc
cwtl
sbb
sub
mov
fldt
jb
ret
lea
into
stc
inc
daa
sbb
lahf
xor
push
sbb
mov
lock
push
cmc
jmp
dec
push
cltd
call
fs
int3
dec
and
lret
pop
lret
sbb
mov
rcrl
out
fsubrl
addr16
ret
rorl
ljmp
cs
xchg
out
pop
call
mov
add
nop
jl
pop
addr16
rcrb
sbb
jmp
or
xchg
mov
xor
adc
xor
jmp
cld
inc
or
mov
mov
lock
and
sbb
push
dec
scas
cwtl
shlb
dec
mov
jge
mov
mov
inc
fucomp
jmp
iret
dec
push
shll
lahf
les
jl
scas
fnstsw
push
or
out
pop
aam
js
fadds
push
cmc
pop
or
or
iret
jg
sbb
cmp
jbe
pushf
cmp
cmp
enter
and
stc
flds
dec
xchg
div
jmp
or
test
mov
sti
adc
rcll
jg
and
stc
inc
jo
sti
add
lahf
mov
sub
lcall
rcll
ret
icebp
push
out
sub
daa
mov
or
adc
and
cmp
push
pop
push
push
push
and
jge
inc
jecxz
cmpl
je
xor
dec
nop
jb
xchg
sub
adc
or
scas
shr
mov
mov
push
int3
sarl
xor
pop
imulb
jmp
sahf
enter
fs
xor
aad
xor
ret
lock
inc
into
lahf
adc
in
mov
xchg
int
or
mov
aas
mov
cmpb
mov
inc
lods
mov
and
loop
shr
repnz
loopne
mov
pop
push
pop
call
lea
lock
or
and
les
adc
es
jae
popf
sbbb
add
fisubrl
sbb
rcrl
mov
subps
clc
push
rolb
jmp
pop
add
repnz
fsubrl
jno
push
pop
scas
in
hlt
cmpsb
call
cmp
xchg
and
bound
rorb
cmp
and
push
mov
clc
scas
cmp
cld
jmp
add
or
adc
mov
add
ret
cltd
mov
pop
push
inc
cltd
push
fstps
inc
push
push
push
dec
cld
notl
mov
cmp
imulb
cmp
call
rcrl
enter
xor
or
mov
into
inc
cmp
dec
and
arpl
outsl
ss
xlat
pop
roll
adc
leave
out
xor
jbe
sub
fyl2x
jo
dec
std
sar
pop
cmp
out
sub
sub
flds
addr16
inc
cmp
sbbb
je
stc
movsb
pop
test
mov
jbe
xchg
lret
fistps
xchg
sahf
xor
cmp
adc
cmpsl
push
std
je
insb
lahf
and
adc
jmp
iret
rcll
jns
pop
xchg
or
push
aaa
stos
sbb
aaa
push
bound
faddl
or
push
dec
lds
fstl
xorb
je
imul
dec
inc
cltd
inc
stos
ret
rcr
sbb
inc
push
mov
insb
pop
shl
inc
sub
sub
mov
xchg
inc
ret
ljmp
xor
pop
sub
movsb
xor
imul
jmp
sbb
ja
movsl
imul
inc
inc
loopne
jecxz
lahf
mov
roll
sarl
imul
and
or
movsb
push
add
xchg
mov
push
in
out
dec
test
pop
adc
outsl
adc
dec
fsubl
adc
movsb
incb
in
or
adcl
repz
inc
inc
or
mov
jbe
pop
mov
test
jne
mov
out
pop
call
cmpsb
sarb
cmp
fnstsw
fisubl
and
lret
mov
in
inc
fs
push
into
push
adc
sbb
jne
pop
or
lret
cmp
in
rclb
mov
xor
push
test
add
imul
mov
ret
mov
fidivs
push
call
adc
fisttpll
push
push
mov
out
call
ud2
shrl
sub
icebp
in
incl
sarb
sub
lahf
in
call
mov
sub
movsl
pop
mov
inc
or
and
or
xor
stos
push
inc
scas
imul
nop
sahf
js
push
loopne
dec
loopne
adc
das
mov
sub
push
fdivrs
mov
enter
dec
mov
lret
out
or
xor
mov
daa
push
or
sbb
fimull
repnz
mov
out
rcll
push
das
sub
mov
push
dec
jnp
shl
dec
mov
cmc
imul
pop
and
movsb
shrb
lahf
jge
clc
or
pop
xchg
lods
les
mov
xchg
std
std
flds
push
scas
dec
shrb
lods
rcl
stos
xchg
fbld
jns
lret
push
push
std
push
data16
popa
orl
dec
add
lahf
roll
pop
gs
add
add
push
push
sbb
lret
call
cmp
aaa
gs
lock
cwtl
cmp
out
movb
sub
clc
stos
push
jb
in
mov
push
xor
enter
repnz
into
push
or
out
dec
jecxz
scas
fs
cli
push
cmp
lahf
popf
cld
out
call
and
or
ret
je
jne
aas
sti
add
fdivl
stos
popa
fdivrp
adc
jns
ret
dec
call
pop
hlt
fisttps
call
or
push
out
mov
cwtl
ret
dec
lods
jo
push
ljmp
lock
repz
xchg
dec
cmp
jecxz
test
or
hlt
push
jae
mov
and
pusha
test
mov
mov
jne
push
adc
jmp
call
psrad
mov
and
fcomp
pusha
call
ds
shlb
cmovns
push
pop
mov
and
mov
mov
clc
mov
andb
jmp
lret
and
xor
dec
mov
int
je
out
bnd
sahf
dec
mov
rcl
mov
into
lds
cmp
jle
mov
xlat
sub
sub
mov
loopne
mov
push
int
stos
out
icebp
fisttps
mov
adc
dec
movsb
shr
push
or
add
mov
hlt
push
and
mov
pop
lea
mov
nop
push
mov
jg
cwtl
lock
das
xlat
inc
cmp
xchg
gs
cwtl
sbb
push
call
adc
sub
add
push
cld
push
sub
iret
sti
sub
leave
mov
push
cmp
cltd
mov
inc
call
xchg
xchg
pop
xchg
inc
mov
and
cltd
test
imul
jle
pop
test
lods
cmc
jns
mov
orb
dec
sub
sub
pop
cld
push
mov
xchg
pop
adc
push
jne
sub
mov
orb
imul
mov
sti
dec
or
cmc
in
jmp
jno
and
cmp
jmp
mov
pop
xor
mov
mov
inc
pusha
adc
ss
sub
lock
mov
mov
or
call
pusha
dec
jmp
dec
sub
mov
dec
jne
pop
jmp
inc
dec
icebp
jno
mov
inc
xchg
notl
push
adc
lcall
jns
int3
pop
pop
aaa
fidivrs
add
test
mov
adc
ret
push
or
dec
stos
add
stos
movsb
push
cmp
imul
cwtl
ret
pop
xor
xchg
pop
stos
xor
mov
call
xchg
sbb
cmp
cmp
adc
fdivrs
out
ljmp
scas
xchg
xor
call
or
inc
fldenv
mov
sti
cli
mov
test
jmp
cmp
lahf
dec
rcrb
lea
or
test
jne
jg
je
lea
mov
dec
mov
add
xchg
roll
cmp
and
stc
push
xor
lea
jnp
push
dec
das
jl
pop
or
add
lret
out
pop
inc
or
adcb
cmp
push
adc
sbb
int
xchg
jecxz
mov
insb
dec
insl
int3
or
jl
or
cld
or
std
cmpsb
push
or
mov
mulb
ljmp
mov
mov
daa
xor
pop
pop
pushf
cmp
cmpsb
loop
adc
in
mov
mov
pop
je
daa
repnz
cmp
sbb
pop
pop
push
xor
add
adc
push
jns
adc
fs
outsb
je
cmp
call
leave
leave
jne
jae
fwait
and
xchg
cmpsb
xor
rol
mov
inc
or
xor
cld
lea
enterw
dec
jbe
jg,pn
xchg
repz
sub
iret
jne
dec
hlt
push
jbe
inc
xor
push
push
ror
je
cmp
add
xchg
cmc
inc
push
or
cmp
ret
loopne
bound
cmp
pmulhw
pop
cld
push
inc
mov
and
xchg
inc
mov
stos
cltd
insb
out
fnsave
sbb
es
or
push
cmc
push
adc
xchg
test
mov
aaa
or
inc
and
add
xchg
dec
add
mov
cmp
pop
ret
adc
dec
cld
mov
lret
dec
sbb
mov
cmp
mov
subb
or
sbb
pop
jle
sbb
std
je
adc
jp
add
aaa
jae
shr
add
movsb
push
dec
ret
std
mov
jae
push
call
xorl
bound
cmp
ret
adc
jno
je
push
push
mov
scas
mov
inc
dec
mov
jmp
sbb
mov
pop
xorps
push
cmp
sub
lods
movsb
scas
mov
enter
mov
aas
add
int
cmp
fdivs
mov
jmp
xor
das
pop
add
inc
jno
je
xor
mov
xchg
mov
ljmp
pop
pop
adc
sbb
cwtl
or
dec
xor
jg
sti
sarb
sub
xchg
std
jb
cli
xchg
cmp
xchg
xchg
cmp
jnp
sbb
rolb
jmp
std
cltd
sti
ret
jb
mov
insb
fisttps
leave
push
insl
test
or
adc
inc
pop
pop
mov
jbe
rorb
mov
pop
je
cmp
jne
jmp
es
inc
je
adc
jno
adc
cmp
jae
mov
popf
or
enter
sub
shlb
xor
adc
dec
cs
popa
call
jmp
fdivrl
xor
ret
and
movb
pop
ret
mov
mov
cld
hlt
and
adc
aad
sub
lcall
adc
jl
pop
lret
shlb
dec
pop
inc
xchg
ret
fdivl
mov
iret
push
loope
add
cwtl
lea
jbe
push
mov
jns
cmp
and
call
pop
inc
scas
inc
ret
or
push
xor
jmp
pop
fsts
dec
ret
and
stc
nop
xchg
or
fmull
lds
dec
popf
rcrb
xchg
jl
add
fs
lea
xchg
mov
and
xlat
pop
xchg
dec
dec
push
test
leave
mov
rcl
sar
sbb
jae
jmp
pop
mov
add
mov
pop
mov
sub
lods
aas
or
cmp
je
add
xor
shll
jmp
push
loop
cld
divb
in
or
les
cmovbe
sub
shr
ficompl
jne
lock
movsb
cmc
mov
dec
in
les
mov
sub
js
stos
mov
add
ret
movsb
push
pop
mov
imul
movsl
int
fidivrs
or
inc
xchg
lock
jne
cmc
scas
pushf
sarl
ja
rorb
sub
and
call
xchg
inc
mov
inc
push
cmp
sbb
cmpsb
stos
imul
cmp
lret
int
pop
nop
dec
cwtl
test
adc
jp
test
pop
mov
test
jb
enter
adc
je
rcl
nop
lret
imul
mov
scas
dec
es
bound
push
leave
add
shll
xor
jno
or
xor
lock
adc
mov
push
or
repnz
sbb
rcrb
or
mov
sub
xchg
cmp
and
cmp
notb
cmp
fadds
fists
sbb
add
jmp
add
pop
pop
bound
stos
mov
in
idivb
lea
jne
mov
imul
aaa
stos
sub
pop
sub
sbb
jne
loope
xchg
jae
je
inc
dec
enter
xor
pop
sahf
lret
cmp
push
push
aas
movsl
or
push
je
ja
sysexit
lods
inc
orl
fnsave
inc
fwait
shr
nop
or
hlt
push
mov
fidivl
icebp
aaa
mov
adc
xlat
mov
xchg
push
das
movsb
push
dec
roll
xchg
out
je
cli
in
cmp
clc
mov
pop
mov
dec
bnd
mov
xorb
dec
adc
das
xor
rorl
aaa
cmp
loop
inc
cmp
dec
push
push
sub
clc
ljmp
pop
cld
outsl
inc
out
call
push
pushf
leave
ret
mov
lcall
int3
rcrl
dec
aaa
mov
pop
mov
add
scas
xor
ja
repnz
negl
ret
jo
pop
push
adc
inc
inc
repz
gs
pop
jbe
std
xorps
shlb
and
cs
adc
mov
das
inc
adc
or
jnp
cmpsl
sub
ja
push
pop
push
push
cmp
push
out
add
adc
nop
jl
mov
inc
leave
dec
fldl
leave
xlat
jmp
push
or
mov
cltd
jo
stc
xor
cmp
sub
imulb
frstor
jmp
sti
add
ret
cmp
clc
sbb
jnp
fwait
imul
xchg
or
cmp
decl
push
mov
mov
mov
xlat
sbb
dec
push
dec
std
jne
mov
mov
xlat
mov
sbb
lock
fwait
cmpsb
outsb
adc
dec
inc
or
push
jle
mov
iret
adc
inc
mov
ljmp
inc
adc
aas
lahf
dec
std
std
and
jb
or
dec
or
xchg
mov
sbb
sahf
jmp
shll
push
scas
adc
enter
addb
pusha
inc
ds
mov
sub
adc
inc
xlat
jbe
jo
incl
or
push
add
inc
cmc
jne
adc
push
pop
and
ss
dec
push
ror
push
in
leave
mov
int
insl
jle
sub
into
shr
jmp
nop
mov
outsb
sti
stos
push
inc
mov
mov
dec
jmp
inc
xor
shl
push
outsl
pop
aaa
push
movsl
movsl
insl
pop
ficoms
pop
cltd
or
mov
int
sub
pop
pusha
inc
iret
mov
outsb
fsts
je
dec
add
push
cmpsl
loope
push
ss
xlat
sbb
dec
mov
lock
jne
fbstp
or
dec
mov
popa
dec
and
push
mov
adc
cmp
lea
push
push
push
imul
xchg
lea
enter
mov
ret
je
es
repnz
in
test
pushf
inc
or
enter
outsb
mov
mov
lahf
sub
pop
or
sbb
aam
jecxz
or
sub
rep
push
movsb
xor
mov
jg
lds
scas
cmp
mov
push
jne
ror
xchg
push
fisttps
jp
pop
mov
xor
mov
sbb
lcall
inc
cmp
push
xor
push
ffree
inc
sub
cwtl
mov
mov
repnz
jno
jb
pop
aas
rorb
cwtl
test
data16
std
arpl
jae
rcrl
xor
aas
or
fucomp
xchg
out
cmp
add
adc
mov
adc
inc
sub
adc
push
push
les
xchg
imul
pop
inc
scas
xor
fisttps
pop
movl
sub
push
cmpsb
insl
sti
push
mov
jle
push
sbb
add
notl
rcl
icebp
jne
out
test
inc
dec
into
and
mov
std
add
xlat
cwtl
je
lret
aad
inc
xchg
jmp
fldt
ds
and
push
stc
scas
clc
xchg
mov
fmull
sub
sarl
cmp
setne
pop
scas
je
sub
outsb
mull
aas
clc
add
push
lds
xchg
xchg
lock
lods
jne
xor
jnp
or
add
aad
mov
mov
call
int
push
orb
inc
les
fdivl
loopne
ja
mov
jne
xchg
lea
decb
push
fwait
or
sub
ret
jnp
jno
jno
xor
mov
fadd
mov
dec
push
sub
xchg
les
xor
add
or
mov
xor
mov
push
xchg
sbb
xor
xchg
mov
add
pop
pop
xchg
cmp
jno
into
leave
into
scas
lock
adc
lock
cltd
lret
jae
adc
cmp
jp
shr
enter
mov
shrb
sar
xor
jg
icebp
je
and
dec
mov
jmp
leave
dec
jnp
dec
sbb
cmp
je
inc
scas
xchg
xor
mov
ret
out
pop
fbld
ja
repnz
dec
mov
fidivl
shl
stos
inc
imul
push
mov
mov
pop
fstps
mov
xchg
sub
or
xchg
adc
call
stc
dec
pop
jne
xlat
sbb
xor
or
and
mov
sub
lret
ret
outsl
scas
outsl
dec
popf
sbb
enter
sbb
adc
mov
mov
out
pop
sbb
pusha
pop
in
jbe
sbb
add
lret
test
repnz
jbe
out
sahf
insb
push
xchg
mov
ret
ja
test
rcl
adc
inc
dec
mov
imul
mov
inc
sbb
rcl
xchg
fstps
pop
ret
pop
ljmp
sbb
xor
movsb
dec
jns
je
and
pop
pop
ss
jno
icebp
jae
push
nop
or
xchg
dec
or
dec
iret
mov
adc
pop
mov
pop
jl
sub
jle
mov
int3
lea
xor
push
mov
xchg
xchg
push
sahf
add
dec
inc
stc
pop
in
add
mov
fsubrp
mov
mov
fs
call
add
lods
inc
mov
jne
and
loopne
js
xchg
mov
dec
xchg
mov
mov
data16
test
stc
xchg
inc
arpl
outsb
ss
andl
add
push
int
loop
cmp
add
jle
je
cmc
push
push
in
and
push
and
mov
rdmsr
mov
test
dec
xor
push
cwtl
xor
mov
push
icebp
cmp
mov
int
sti
imul
out
sub
out
or
iret
inc
sub
aaa
pop
inc
and
mov
stos
call
mov
lcall
loopne
pop
in
into
loopne
movsl
or
js
mov
ficompl
dec
dec
jp
dec
scas
jecxz
jp
inc
cs
mov
mov
orb
subl
inc
lea
mov
out
clc
insl
xchg
cmpsb
inc
mov
pop
dec
jno
jl
xor
push
lods
jle
gs
scas
enter
or
add
aad
nop
lock
fstl
sahf
jle
sar
sbb
mov
insl
sbb
pop
fwait
pop
and
into
call
add
jmp
adc
mov
lods
lret
sahf
cmp
cmp
sbb
stc
mov
pop
outsb
pop
ret
push
movsl
popf
mov
push
or
or
pushf
mov
popf
hlt
rorl
call
rclb
or
leave
xlat
sar
jno
mov
cmpsb
dec
push
int
pop
sti
jae
jbe
adc
xor
sub
xor
lret
mov
ret
jns
mov
xor
lret
fcoml
jg
mulb
pop
or
subl
call
cmpsl
xchg
sbb
rolb
inc
lret
loopne
pop
push
push
cli
mov
and
sahf
mov
mov
outsb
outsl
push
jmp
or
sar
inc
mov
push
add
or
call
outsb
lret
fnop
push
jns
lods
repz
add
mov
cli
mov
push
xchg
repz
icebp
jmp
inc
mov
cld
fs
and
leave
adc
call
movsb
test
jne
lea
cltd
clc
sysexit
and
pop
push
ds
je
les
add
inc
loop
push
mov
js
jl
ret
cmp
shr
int
mov
add
mov
loope
inc
push
lret
daa
pop
xor
pop
xchg
sub
or
dec
pop
xchg
aad
mov
movsb
out
into
gs
std
orb
rcl
fisttpl
cmp
data16
sbb
icebp
pop
jp
pop
fisubrl
jg
dec
jo
nop
push
and
cmp
inc
jmp
mov
lea
and
dec
push
fisttps
test
sub
sub
sub
mov
pop
cwtl
test
mov
stc
sub
lea
and
das
lcall
cmp
jns
jge
iret
popf
push
jp
adc
bswap
mov
negb
sub
jmp
sub
adc
call
aad
arpl
idivb
gs
inc
jne
cli
test
iret
adc
inc
into
clc
push
movsb
xchg
in
push
outsb
rorb
xor
adc
inc
sbb
add
xchg
ljmp
sbb
inc
rcrb
fsubrp
push
cmp
sub
adc
and
inc
jbe
push
pop
rolb
test
cltd
jmp
je
call
and
push
mov
shr
dec
push
jmp
pop
sti
add
push
push
add
out
cwtl
cltd
and
mov
pop
js
fs
lcall
int
lock
and
sti
mov
dec
jle
jmp
cmp
inc
dec
nop
movsl
sub
cwtl
adc
outsb
imul
cmp
ss
loope
push
mov
cmp
in
in
xor
lcall
and
fisttpl
push
add
rcll
test
lret
imul
inc
popa
rclb
test
inc
gs
int
pop
pop
int3
mov
mov
cli
push
cmp
add
push
addb
ja
cmpb
mov
dec
jno
mov
movd
add
pop
pop
inc
add
add
dec
cmp
sbb
dec
jle
xlat
js
andl
jle
push
shrl
mov
mov
addl
pop
test
add
test
sti
add
fwait
add
call
pop
call
cli
cld
or
mov
movsl
jbe
mov
movsb
pushf
push
ficomps
jo
inc
sub
xchg
ds
sub
cmp
in
cs
xchg
inc
add
adc
pop
scas
add
xchg
mov
les
aam
adc
jne
inc
mov
in
xchg
push
lcall
xor
in
lret
and
adc
add
shrl
int3
lret
and
std
push
subb
pop
inc
mov
iret
sub
pop
or
fistpll
push
enter
ljmp
push
popf
cmp
aam
push
test
sub
pop
cmp
inc
inc
test
lds
mov
leave
or
sub
push
pop
inc
repz
ja
sub
cli
push
lds
jb
cltd
pop
cli
lret
in
lahf
or
or
or
mov
mov
or
xchg
aam
xlat
xchg
xchg
or
arpl
push
and
inc
mov
pop
fs
jns
or
lods
cli
decl
xchg
jmp
xchg
sahf
pop
mov
pop
mov
dec
jg
pusha
xor
cs
mov
fwait
and
dec
mov
pop
sbb
out
das
push
arpl
mov
and
shr
repnz
aam
std
inc
test
xchg
das
pop
cmp
les
mov
xchg
popa
add
mov
lds
adc
jnp
jge
roll
mulb
lea
andl
xchg
jns
ljmp
add
enter
into
cli
incb
xchg
lea
and
addl
jae
adc
lahf
subl
testb
adcb
bound
outsb
dec
fs
fst
mov
scas
fimull
pop
jne
lock
fisttps
inc
enter
pop
sbb
fisttpll
inc
jmp
mov
sub
into
xor
or
je
and
scas
xor
sbb
es
aaa
cmp
paddusb
cmp
or
sub
out
add
adc
and
andl
test
insl
pop
aam
mov
test
fldt
push
pop
adc
jae
add
adc
add
clc
cmp
sbb
pop
adc
xchg
rclb
sub
dec
sbb
imul
and
add
ss
shl
pop
inc
or
pop
jmp
jp
xlat
lret
pop
xor
aad
mov
xchg
fnstsw
scas
lcall
gs
or
popa
push
imul
pop
incb
mov
mov
jge
test
roll
inc
int3
dec
add
cmp
jne
jg
mov
aad
add
push
lahf
ret
ljmp
xor
imul
jne
lcall
cmpsl
pop
mov
pop
adc
rorl
mov
sbb
add
adc
mov
ficomps
fyl2x
pop
xchg
mov
pop
sti
push
jmp
mov
icebp
das
inc
faddl
inc
nop
xchg
adc
movsl
push
push
jns
or
push
push
call
das
cld
adc
xchg
mov
roll
push
pop
jp
nop
rcll
sbb
stos
pop
loope
in
dec
lret
js
aas
mov
js
std
pop
jle
mov
sub
imul
and
out
jbe
mov
add
clc
mov
sbb
jne
dec
jmp
and
push
adc
and
pop
push
mov
scas
xor
loopne
cld
popa
pop
divb
enter
int3
mov
and
cmpsb
repz
mov
aam
movsbl
pop
rcll
cmpsb
adc
pop
pop
mov
fists
int3
das
jmp
adc
mov
add
or
lea
and
jne
shr
sub
cmp
inc
enter
jnp
sbb
inc
push
lcall
sahf
and
add
and
jp
testl
inc
cli
jnp
jmp
pop
xchg
and
mov
hlt
pop
ja
push
call
mov
xor
pop
testl
push
adc
sti
clc
mov
pop
add
jne
mov
pushf
pop
mov
push
sub
adc
or
cmc
xlat
mov
jmp
pop
subl
addl
sbb
addl
add
push
cltd
mov
repnz
add
fsubs
lret
jne
out
xor
cmp
sub
push
add
fs
adc
popf
mov
out
push
aaa
mov
out
jnp
loope
mov
jle
cmpsl
lods
cltd
sub
cmp
push
cwtl
lcall
cmpsb
bnd
nop
push
aad
lods
rcr
sar
jmp
xor
dec
sbb
mov
cmpsb
mov
sahf
add
sub
arpl
jae
mov
or
inc
add
mov
sub
add
enter
adc
loope
out
loopne
add
decb
and
mov
adc
cmpl
test
adc
jge
mov
sub
sub
sti
flds
fimull
xor
xor
add
inc
and
xchg
cld
stos
cld
or
cmpsb
cmp
cmp
cmpl
pop
lret
shl
mov
shrl
adc
push
data16
fsubrs
jns
dec
and
sub
xchg
movl
adc
sub
out
mov
pop
in
fldcw
lret
movsb
fistpll
xlat
imul
es
xchg
sbb
pop
scas
xchg
aas
mov
pop
mov
xchg
xchg
lds
or
int
lock
out
mov
movsl
add
or
pop
aas
add
stc
leave
cmp
iret
ret
push
push
mov
testb
pop
inc
loope
flds
test
int3
nop
scas
push
fnstsw
pushf
push
sar
lods
push
sti
std
push
mov
lahf
cmpsb
mov
pop
fisubrl
and
and
add
and
xor
rcr
leave
in
std
xchg
add
test
add
shrb
leave
cmp
pop
mov
aas
fs
mov
test
test
test
cltd
in
add
dec
sub
fdivrp
pop
mov
rclb
push
into
pushf
lock
nop
jmp
scas
outsl
jne
and
ret
out
jecxz
adc
or
leave
imul
jo
divb
addr16
xor
cmpsl
es
push
fs
in
nop
adcb
sub
inc
lahf
dec
dec
mov
jne
mov
xchg
stos
cmp
pop
ds
push
seta
cmp
adc
xchg
insb
arpl
inc
push
dec
or
frstor
dec
sub
mov
or
nop
or
jb
and
call
jecxz
notb
movsl
push
imul
std
cmp
adc
dec
ljmp
sbb
les
mov
shl
sub
sbb
and
sub
sahf
lret
lcall
addl
sbb
addr16
xchg
push
sub
pusha
pop
push
popa
pushf
and
lods
in
and
sbb
sub
outsl
jg
mov
popa
jns
iret
cwtl
pop
lret
in
imul
pop
lahf
and
cmp
cli
cmpsb
and
xlat
sbb
repz
cli
push
mov
cmpsb
fstps
pusha
flds
aad
sub
loope
rolb
or
add
push
pop
popf
lret
add
push
sub
test
mov
push
popf
push
cli
and
sbb
cli
pop
push
lret
and
in
adc
lret
jnp
lea
testl
fisttpl
lods
rcrl
sbb
jmp
insb
lahf
sub
dec
mov
fwait
sub
sub
mov
jo
cwtl
pop
clc
push
lret
stc
jmp
scas
ficoml
pop
and
pop
popf
fstpl
xchg
daa
inc
je
repnz
into
pop
enter
jle
pop
mov
jo
aad
dec
stos
push
sub
sbbb
ret
cli
xchg
ret
and
jl
cmp
inc
lret
sbb
or
jbe
cwtl
aas
outsb
stc
or
jp
subl
lret
mov
popa
mov
push
and
dec
enter
add
jmp
dec
xor
add
ss
les
insl
push
loop
shlb
nop
daa
pop
outsl
enter
cli
xchg
ret
roll
in
incl
mov
mov
rorl
push
or
mov
and
xchg
fsub
add
adc
sub
or
inc
jmp
or
add
rolb
lret
inc
mov
test
push
call
sub
pushf
fdivr
je
cmpsl
mov
push
call
dec
je
mov
cmp
insb
add
dec
push
fdivp
mov
mov
je
jl
out
pop
mov
insb
xlat
fdivrl
aad
xlat
into
xlat
xlat
shlb
mov
xlat
stos
es
in
pop
mov
cmp
stc
iret
adcb
push
xlat
je
dec
xchg
repnz
data16
movsl
add
xchg
push
outsb
and
mov
stc
push
imul
dec
es
gs
sbb
xchg
or
js
clc
sbb
mov
push
pop
pop
add
push
aad
scas
push
cltd
inc
gs
movsl
pop
clc
xor
lods
jbe
xchg
mov
dec
jnp
sub
jle
mov
loope
fcomp
or
hlt
mov
dec
sbb
xor
sub
fwait
mov
in
lret
adc
cmpsb
shrb
rolb
sbb
add
add
insb
sbbb
enter
mov
imul
or
arpl
decl
mov
inc
addr16
or
ss
es
mov
mov
jg
dec
jne
or
idiv
or
adc
clc
mov
rorl
in
pushf
fs
sbb
cltd
add
fiaddl
cmpsl
dec
jo
lea
add
jns
out
iret
inc
jo
movaps
cli
lret
arpl
pop
inc
adc
psubd
lcall
pushf
stc
frstor
lret
push
sbb
xor
movsb
rcll
pop
in
jecxz
daa
pushf
out
sbb
sbb
push
pop
btl
adc
nop
sub
jbe
data16
nop
lret
icebp
push
jne
cmp
lods
fmulp
rcrb
adc
dec
loope
popa
adc
mov
lret
or
sbb
iret
sbb
je
data16
dec
das
pop
adc
out
sub
xchg
sbb
xor
pop
sbb
fisttps
repnz
arpl
clc
jne
js
mov
cs
ljmp
stos
in
pop
jmp
dec
rcr
stc
jecxz
ljmp
flds
std
aad
sti
imul
push
jle
mov
push
or
es
fwait
sti
lea
inc
subl
jne
adc
adc
or
add
iret
mov
sbb
add
je
mov
and
daa
or
cmp
shlb
bound
js
enter
xor
jo
jp
inc
data16
pop
jne
or
or
rolb
test
loopne
jnp
pop
pop
dec
pop
mov
inc
inc
or
or
jne
mov
xchg
adc
pop
shlb
leave
sbb
mov
shl
sub
and
add
lock
out
sub
out
push
xor
pusha
daa
cwtl
xor
xor
popa
inc
mov
pusha
andl
fstl
sar
add
push
jle
mov
dec
dec
cld
adc
fimull
sar
inc
jnp
push
dec
or
xor
and
inc
cmc
sbb
add
jg
cs
scas
shl
fs
std
cmpsl
xchg
sub
jb
or
insb
daa
or
int3
movb
sub
ficomps
jno
lods
cmp
inc
push
sub
inc
aam
insl
jmp
cli
sub
aas
clc
in
cmp
xchg
lock
sbb
push
cmp
jne
jp
push
repnz
in
inc
mov
jae
jmp
inc
sub
adc
sub
es
icebp
sub
out
fwait
loopne
push
mov
cmp
pop
and
adc
ljmp
aas
jo
cmp
or
cmpb
jnp
in
xchg
add
mov
lret
cmp
in
mov
out
call
ret
scas
mov
xchg
test
cmp
sysret
ds
cli
add
inc
pop
add
test
fdivs
sti
in
jae
dec
hlt
push
adc
push
lea
push
push
lds
cld
je
add
dec
aaa
daa
mov
inc
outsb
mov
stos
cmpsl
repz
stc
out
lahf
and
dec
lret
mov
call
adc
push
inc
mov
shrb
mov
jp
into
jne
bound
out
push
and
sahf
cmc
sub
or
cmp
es
jno
test
push
jle
sub
out
imull
cwtl
push
stc
pop
cwtl
insb
ja
push
push
mov
mov
pop
mov
je
pushf
cli
insb
pusha
cwtl
jns
in
jl
lret
xchg
push
insb
in
adc
jl
clc
imul
mov
cltd
sbb
out
lret
js
js
jl
jp
pop
rorl
imul
cmp
xor
insl
lods
and
dec
sub
scas
mov
inc
movsb
xor
jle
stos
cmpsl
pushf
and
cmp
lret
clc
addr16
push
jo
sub
pushf
pop
cli
cmp
and
pop
loop
sarl
mov
add
mov
into
push
xor
mov
push
inc
push
enter
sub
xchg
and
enter
add
pop
push
or
add
mov
imulb
cmpsb
out
es
pop
push
into
inc
cmpsl
mov
movsb
and
shll
aas
and
out
pop
lea
dec
cmp
cmp
adc
push
iret
rclb
clc
jb
clc
pop
lret
lea
test
xchg
and
inc
rorl
pop
sub
lods
push
stos
je
add
insb
aas
pop
loopne
cwtl
test
dec
sub
adc
xchg
fisttps
loop
rorl
and
adc
sub
movsl
push
cmp
testl
sbb
xor
push
test
adc
ds
outsl
mov
dec
push
xchg
xchg
sbb
add
outsl
lret
scas
pop
jae
sbb
je
jl
inc
xor
cwtl
or
insb
or
xor
push
cli
lods
push
stos
sub
clc
jl
pushf
mov
cmp
jl
xor
inc
push
test
mov
cltd
sub
push
inc
or
aam
out
mov
push
adc
sub
sar
hlt
cmp
push
call
ja
adc
adc
add
add
dec
bswap
push
ljmp
add
cmpsl
dec
sub
or
aas
hlt
mov
pop
or
xchg
scas
push
popf
jle
test
sbb
lea
dec
hlt
cmp
out
pop
leave
pop
jne
and
push
mov
gs
cld
jmp
dec
or
int
xchg
int3
shlb
pushf
pop
jae
xor
push
stos
dec
pop
pop
dec
ds
arpl
sub
cmp
data16
adc
lret
repz
stos
push
pop
negb
int3
and
xor
sbb
stc
sub
out
je
push
xor
hlt
inc
add
call
adc
js
lcall
stc
and
inc
dec
or
aaa
fstpt
inc
rclb
adcb
add
es
inc
les
ds
rolb
ficompl
lods
stc
dec
add
adc
ror
xor
fsubr
add
cli
add
das
sbb
and
push
push
adc
gs
out
push
push
sti
sarb
fdivrs
dec
push
adc
xlat
daa
push
dec
cmpsb
rcrl
jbe
fwait
jl
ss
lds
push
out
xor
xchg
mov
int3
sub
inc
sub
sub
test
flds
cmpl
cli
xchg
scas
rcl
pop
pop
sub
push
pop
push
dec
shl
jmp
int
hlt
add
add
dec
or
inc
add
loope
mov
sub
cmp
lea
sqrtps
push
jle
dec
adc
mov
repnz
int
in
adc
cmp
dec
mov
push
push
push
inc
push
sub
push
push
addr16
inc
das
cmp
or
mov
adc
out
pop
outsb
pop
push
dec
incl
pop
dec
sahf
movsl
inc
pop
ffreep
rcll
shrl
aas
mov
cli
aas
mov
push
pop
cmpsl
sbb
mov
push
push
sbb
ljmp
sbb
jne
pop
daa
lret
outsl
xor
lock
popa
lret
sbb
test
hlt
dec
je
dec
push
or
movsb
sahf
mov
sbb
cltd
adc
pop
ret
popa
mov
std
loopne
cmc
push
les
inc
cmpsb
xor
dec
push
push
repz
mov
pop
add
or
ja
pop
cli
mov
test
stos
push
inc
andl
ds
sarb
xor
sbb
cs
adc
outsl
loope
mull
and
repz
rorb
adc
jns
xchg
outsb
dec
test
push
adc
xchg
fistps
mov
xor
pop
into
imul
cmc
filds
setl
and
xchg
insl
cmp
push
stc
orl
jne
loopne
push
dec
test
mov
leave
iret
call
stos
inc
iret
or
jnp
push
lcall
pusha
push
rorl
dec
add
and
and
jne
adc
adc
call
cmc
das
and
pop
xchg
test
push
enter
sti
dec
fwait
push
dec
pop
or
push
je
dec
in
mov
jo
push
push
dec
das
jnp
xor
cmp
and
test
cwtl
stos
pop
adc
and
mov
mov
inc
testl
lock
push
push
call
leave
inc
and
push
sahf
cmc
das
mov
jge
sub
sub
iret
cwtl
jmp
clc
sbb
inc
inc
insl
fwait
jnp
insb
sub
mov
jbe
mov
jmp
mov
shrl
adc
pusha
ja
adc
loop
and
adc
sbb
sub
mov
int3
inc
das
jnp
fbstp
xor
xor
outsl
cmpsb
mov
ret
adcb
test
movsl
sbb
lods
ljmp
mov
fisttps
pop
sarb
cwtl
cmp
loop
sbb
scas
sbb
pop
sbb
and
xorb
cmp
rcrb
push
and
fbld
adc
cmp
je
mov
loope
sbb
movsl
cli
jns
sbb
adc
movsb
mov
xor
jns
push
pop
mov
xchg
mov
pop
das
xor
and
std
arpl
mov
and
cmp
out
cltd
lcall
jno
dec
push
xorb
mov
push
mov
je
jns
xchg
mov
fstpl
loop
scas
cmpsb
mov
fsubs
clc
sub
testl
pxor
aam
fs
xchg
jmp
or
ja
outsb
mov
jae
cmc
push
adcl
xchg
push
shlb
fmull
sahf
xchg
adc
adc
insb
pop
gs
pop
mov
xchg
dec
es
pop
mov
jne
or
push
cmp
movsb
push
or
and
dec
adc
je
sbb
mov
adc
jmp
dec
bound
and
mov
add
push
enter
repnz
stc
pop
xchg
mov
jl
or
insl
cmp
inc
or
cmp
push
insb
add
insb
sarb
and
insb
push
and
insb
add
insb
xor
insb
mov
arpl
inc
push
adc
inc
adc
jns
into
cmp
inc
movsl
loop
repz
mov
mov
sub
aad
mov
jns
mov
or
or
push
mov
cmpsl
pop
out
cltd
mov
out
jl
pop
pop
cwtl
sub
cmp
shrb
fs
xor
pop
sub
jecxz
jmp
popf
sbbl
sub
cwtl
movsl
dec
inc
das
cmp
push
jo
pop
cli
sub
and
pop
movsb
cmp
mov
pop
ja
icebp
lret
gs
jl
imul
adc
imul
xor
iret
add
out
icebp
and
in
adc
cli
adc
pop
cmp
adc
push
pop
inc
aaa
lret
xchg
pop
sub
shl
cmp
and
inc
or
popf
ljmp
sub
out
dec
or
or
ret
and
icebp
lret
sub
lret
inc
ss
or
addr16
fs
jecxz
int
into
jo
pop
dec
loopne
lret
cld
into
das
cli
iret
imulb
lret
or
test
movb
inc
sahf
add
jecxz
jmp
insl
lahf
push
rorl
pop
dec
jne
or
cmp
outsb
jg
push
daa
outsl
and
xchg
dec
int
lock
imul
in
and
dec
jo
ret
sahf
or
xchg
mov
enter
xor
xor
cmpsb
fcoml
mov
sti
and
cli
xchg
cmp
and
lret
ja
push
lret
jl
push
and
cltd
and
push
pop
cmp
cmc
cli
cmp
call
cmp
sti
cltd
cmp
and
inc
xor
shrb
fwait
jo
pop
push
push
movsl
outsb
inc
fidivrl
adc
out
jne
push
or
xlat
pushf
jo
adc
cltd
mov
mov
jbe
mov
cli
mov
xor
mov
ret
les
cmp
push
insb
mov
sub
xor
insb
ret
and
push
sub
lock
insb
pop
test
dec
insb
xor
lock
insb
and
insb
fs
lahf
icebp
cmp
mov
test
dec
or
outsb
stos
ret
jnp
sbb
xor
xor
lret
jns
jo
jnp
out
push
repz
jne
xchg
push
mov
cmp
mov
dec
mov
je
insb
test
xor
test
shl
notb
xchg
mov
jmp
ja
fmul
sub
shll
adc
adc
mov
or
test
mov
rorb
add
movsl
push
mov
mov
loopne
test
push
adc
add
mov
rolb
mov
mov
push
mov
pushf
test
mov
inc
mov
push
mov
sub
gs
cmp
mull
or
inc
sqrtps
push
push
call
cmp
dec
aas
insb
jo
repz
push
aam
call
pop
dec
xor
insb
add
sub
xchg
hlt
adc
jbe
push
xor
jo
and
pop
lahf
cltd
mov
testl
inc
pushf
test
sbb
or
pop
jns
pop
push
js
adc
outsl
or
mov
lock
add
jns
shr
dec
js
push
loop
out
jle
lea
lcall
jno
add
push
in
cwtl
in
cwtl
in
cwtl
in
cwtl
in
cwtl
in
cltd
lahf
lods
jp
and
outsl
cli
daa
add
push
mov
dec
mov
sbb
jne
xchg
ret
aas
push
cmp
jmp
call
aas
aas
push
fs
lahf
pop
xor
push
lret
jmp
call
cmp
js
aaa
dec
cltd
sbb
pop
mov
js
jl
xchg
xchg
fstl
push
add
adc
sub
pop
jle
cli
jmp
xor
movl
lock
lea
inc
test
sbb
lods
ljmp
push
adc
repz
inc
inc
lea
shl
cmp
add
xor
cli
sub
pop
jno
cmp
je
xor
sub
ffreep
addl
int3
movsl
pop
ficomps
push
lret
dec
push
je
fmuls
jae
stos
enter
inc
leave
pop
add
fnstcw
jnp
push
call
gs
jb
add
roll
stc
jne
xlat
cmpsl
add
call
int3
jg
pop
xor
hlt
mov
xor
adc
popf
lock
ret
dec
add
add
cmp
jmp
mov
push
inc
mov
mov
ljmp
subps
int
fsubp
adc
sti
xchg
add
lea
pop
fldcw
pushl
mov
cmp
add
lcall
mov
fsub
sbbl
das
lahf
xor
scas
push
popa
push
jne
in
ljmp
xchg
out
inc
mov
adc
or
in
jne
call
ret
loope
movsb
sbb
jb
sub
incl
out
dec
leave
dec
daa
mov
ljmp
push
lahf
add
je
mov
popa
push
cs
mov
push
insl
aad
mov
xchg
push
mov
loopne
mov
mov
jnp
stc
pop
adc
cld
push
adc
movsl
std
iret
ja
push
out
cltd
cmp
pushl
push
notl
mov
mov
push
lock
or
jns
leave
lret
mov
pop
notb
movsb
cmp
adc
stc
es
sub
insb
decl
sbb
addb
fnstcw
sbb
pop
cmpsb
fists
andb
es
jp
call
mov
aaa
sahf
push
test
add
mov
adc
fldl
leave
pop
xrelease
rorb
test
lods
push
call
int3
out
or
mov
push
mov
add
mov
push
push
mov
je
mov
mov
jns
cmp
mov
fstpt
aam
pop
adc
lock
sub
push
pop
pop
and
mov
mov
pusha
andl
lea
mov
or
inc
cmp
pextrw
outsb
lcall
cwtl
adc
lea
mov
jle
ret
stos
mov
push
or
cmp
sub
fmul
mulb
push
inc
fcmove
and
in
add
sub
adc
sahf
dec
xchg
daa
xchg
outsl
and
or
cmp
xorb
sub
inc
cmp
mov
imul
pusha
jbe
rcrl
int
xchg
or
hlt
mov
cmp
test
stos
dec
mov
fisttps
xor
js
sbbl
stos
lret
push
call
pop
and
mov
pushf
xchg
ja
pushf
add
mov
cwtl
sub
mov
adc
sbb
notb
mov
pushl
jo
sub
mov
pusha
push
xchg
push
mov
js
lahf
inc
imul
std
and
push
rorl
inc
in
inc
lret
pusha
push
push
jge
into
add
xlat
out
je
adcb
sub
xchg
negb
push
jmp
jl
mov
icebp
xchg
rcrl
pop
fs
jl
jmp
fistpll
sbbb
sbb
push
cld
jl
xor
sbb
lret
cmp
inc
cmpsl
std
lahf
stos
mov
cmp
test
mov
stos
inc
dec
loope
dec
mov
xor
stc
and
cmp
mov
xor
shlb
sub
inc
or
jo
jl
pusha
mov
cmp
stc
push
inc
cld
adc
jnp
add
jne
push
adcl
fwait
stc
or
std
vpminub
or
movsb
ljmp
dec
dec
cmp
cmpsb
fwait
inc
rol
and
cmp
sub
adc
dec
add
je
and
cmpsb
lret
clc
ja
push
nop
adc
mov
xchg
add
ljmp
mov
mov
xor
cli
shl
loopne
jecxz
call
sarb
ficoms
push
mov
add
fwait
mov
jecxz
js
xlat
xor
in
mov
sub
dec
adc
dec
xor
xor
shr
das
xchg
es
cwtl
cltd
dec
fs
popf
push
and
imul
mov
arpl
repnz
push
iret
fildll
mov
sbb
xor
fdivrs
in
lea
outsl
mov
sbb
movsl
cwtl
and
inc
or
dec
dec
rorb
jmp
push
xor
dec
iret
popa
scas
add
add
and
xor
inc
jle
ljmp
bound
jmp
push
mov
pop
fisubrs
into
cmpb
xchg
ret
adc
xchg
push
mov
mov
insb
jp
sti
pop
or
or
and
and
nop
shll
cmp
in
je
xorb
push
seta
repnz
xchg
inc
in
sub
ljmp
rcll
btsl
pushf
lods
jb
cmpsb
push
test
into
fisttps
mov
lods
push
clc
sbb
or
adc
and
adc
or
cmp
xor
fwait
adc
xlat
adc
sub
push
mov
pop
testl
and
cmp
cmp
jne
pop
cmp
icebp
mov
out
and
cmp
out
ret
lret
mov
dec
and
test
sbb
sub
dec
mov
and
ljmp
popa
imul
cltd
cmpb
setne
test
aam
cmp
lods
nop
adc
cmpsl
aad
xchg
mov
xor
and
cmpb
xor
leave
xor
inc
cmp
inc
mov
cs
push
or
xchg
mov
push
mov
in
pop
adc
repnz
mov
jmp
cmpl
dec
sub
inc
inc
mov
xor
mov
cwtl
mov
add
idivb
mov
inc
sub
push
movl
push
testl
cmp
cmp
sub
nop
push
sub
sbb
ljmp
sti
xchg
inc
adc
sbb
xlat
inc
sbb
or
cmpsb
nop
pop
xchg
test
push
aaa
mov
out
dec
or
ja
dec
mov
roll
in
wbinvd
add
loop
push
mov
jp
insb
addb
rcl
insl
sbb
dec
dec
and
xchg
jne
mov
sbb
test
push
mov
pop
orb
jg
mov
pop
cmpsb
loop
movb
and
andb
mov
imul
repz
sysret
mov
cmp
mov
adc
push
push
pop
int
into
add
popf
pop
test
lods
jge
and
je
push
xchg
xor
rorb
mov
jl
dec
jo
cmp
mov
lahf
cmc
insb
jbe
shr
fyl2x
jnp
push
inc
sbb
cmp
imul
pop
out
testl
jle
cmp
sub
cltd
cmovns
mov
mov
nop
jno
cmp
dec
jl
push
adc
iret
jmp
or
js
fadds
sub
cli
jo
pop
jl
cli
pop
sbb
and
dec
insb
imul
insb
pop
sub
je
js
insb
inc
jg
orb
nop
cli
dec
lret
jne
pop
sbb
rol
sub
iret
das
loop
pushf
pop
sti
push
jg
dec
jne
pop
xor
xor
shlb
xchg
dec
cld
es
pop
aaa
test
dec
push
xor
lea
mov
mov
lcall
mov
jmp
mov
lahf
in
push
push
sub
cs
cmp
je
lock
ret
inc
inc
iret
jne
jno
cli
inc
movb
loop
ret
insb
sbb
xchg
xor
jmp
int
movb
mov
inc
lds
repz
ljmp
xor
sub
dec
inc
cmpsb
pop
icebp
pusha
mov
inc
mov
iret
cld
xor
pop
cmp
lcall
pop
add
or
sbb
in
mov
pop
rorb
cmp
mov
popa
push
mov
add
push
out
test
mov
mov
sbb
or
push
aad
ret
cmc
pop
stos
sub
je
clc
cmp
mov
out
jecxz
inc
scas
pushf
or
cmp
lcall
std
xor
stc
lret
jno
or
lds
and
je
movsb
jb
pop
pop
push
cld
mov
push
dec
xchg
or
push
and
and
das
repz
jecxz
filds
repz
loopne
adc
imul
in
ret
push
mov
insb
push
sub
lds
push
rorl
push
inc
mov
std
sbb
pusha
cmp
cmp
push
adc
pop
dec
pop
fucomip
jmp
fs
test
int
pop
mov
pusha
out
movsb
push
ret
inc
mov
jmp
jne
mov
cld
sahf
cwtl
push
sbb
mov
xor
push
lods
ds
jge
call
int
pusha
pop
xchg
fcomps
je
mov
dec
roll
and
f2xm1
push
in
fwait
mov
test
cmp
testl
sbb
or
pop
dec
mov
je
sub
lret
neg
push
call
sbb
add
mov
shrl
in
dec
fstpt
mov
mov
inc
repz
movl
fsubr
or
pop
mov
lock
xchg
adc
lret
fcomps
adc
icebp
iret
rcrb
inc
cs
push
lahf
dec
nop
stc
and
inc
or
xor
push
call
scas
iret
xchg
nop
repz
iret
scas
pop
fwait
dec
dec
sub
iret
imul
shrl
inc
scas
out
sub
ret
jno
lds
dec
outsb
pop
sub
test
dec
out
loope
pop
sub
jl
mov
xlat
cmp
push
insb
and
pop
dec
mov
test
je
cmp
outsl
add
cs
bound
or
and
push
jne
pusha
adc
dec
cmp
cli
insb
mov
scas
std
lahf
xchg
pop
and
insb
add
dec
jl
xchg
jge
cmp
clc
cmp
lret
xor
fwait
aam
movsb
sub
sti
insb
movsb
clc
jl
adc
and
pop
pop
xor
outsl
adcl
add
fs
xor
push
mov
push
scas
mov
scas
cmp
cmp
stc
xor
pop
mov
int
daa
call
sbb
mov
pop
sub
xor
leave
push
lea
mov
and
cmp
jmp
xor
push
sbb
push
jmp
mov
fisttpll
xchg
sbb
jl
cli
and
dec
inc
pop
stos
out
leave
sbb
dec
xchg
xor
ljmp
stc
mov
lods
daa
testl
adc
or
fistps
shld
test
dec
nop
jl
mov
in
push
and
repnz
out
jg
or
je
add
bound
daa
mov
jno
mov
dec
inc
sub
iret
add
aas
dec
testb
pop
cmp
loope
and
addr16
mov
dec
push
sbb
das
sub
andl
lea
xor
stc
or
lods
push
test
out
rcll
icebp
jmp
in
xchg
out
jne
nop
sbb
jae
mov
mov
mov
orb
sub
mov
mov
add
pop
clc
cmp
popa
jecxz
pop
fld1
push
movsb
jmp
cmp
movsl
xchg
push
mov
cwtl
lret
pusha
pop
or
pop
cli
movb
cmpsb
sahf
pushf
lret
xor
cmp
dec
ret
outsb
inc
stos
mov
mov
and
fcmovne
jecxz
mov
pop
mov
sti
inc
push
stc
pusha
add
and
shlb
stc
xchg
mov
outsb
push
gs
push
cmpsl
add
xor
movsb
sar
jb
cmp
je
enter
and
lea
sbb
scas
popf
movsb
mov
xor
xor
sub
iret
xor
add
cmpsb
xchg
adc
cmp
jne
inc
cmp
jle
rorl
dec
jecxz
inc
push
rorb
das
iret
xor
cwtl
lret
outsl
jb
pop
pop
add
jp
xor
iret
mov
fwait
dec
fnstsw
push
add
xor
xor
jmp
int3
jbe
push
sub
rep
clc
push
iret
pop
xchg
iret
inc
xor
leave
and
add
fidivrs
inc
xchg
mov
shl
xor
push
mov
fmulp
jne
inc
ret
sti
mov
jb
loope
lret
push
sbb
test
mov
inc
loop
sbb
pusha
xchg
sahf
ret
mov
jg
jl
repnz
into
nop
notb
adc
jne
inc
imul
pop
mov
mov
mov
xor
push
dec
divps
and
repz
cmp
imul
nop
fwait
lea
data16
xor
jl
push
pop
xor
mov
sti
aaa
movsb
cmp
jae
aam
enter
or
lret
jno
lock
imul
lret
inc
enter
rorl
dec
cld
leave
shlb
pusha
push
push
fs
cmp
popa
in
dec
and
popaw
pusha
outsb
negl
pop
adc
sbb
cmp
cmp
mov
repz
jbe
ss
pop
adc
adc
xor
ficomps
jne
cli
fxtract
and
in
mov
inc
sbb
fdivs
outsl
mov
dec
mov
jno
ds
mov
mov
cld
lea
jg
mov
repnz
andl
push
sbb
ja
jbe
xchg
pop
mov
cli
or
lods
jno
jmp
xor
imul
or
pop
sti
js
cwtl
std
push
mov
imul
es
xor
jg
fs
cmpsb
pop
cltd
cltd
daa
or
xchg
cmp
inc
xlat
pop
ret
mov
pop
cli
into
nop
cmpsb
xchg
sbb
icebp
dec
fwait
dec
fildl
hlt
xor
jl
or
or
addr16
dec
test
lods
int3
jge
dec
mov
dec
aaa
lret
incb
xchg
pushw
or
adc
stos
mov
cmp
or
sub
and
mov
adc
mov
xchg
xchg
lods
adc
mov
xor
icebp
push
pop
icebp
das
or
mov
sbb
or
cwtl
adc
push
cmp
and
repz
xor
adc
jb
andb
mov
sbb
or
dec
mov
inc
clc
arpl
push
adc
pop
arpl
sbb
jns
loopne
cmc
xchg
pop
jo
icebp
xchg
sbb
dec
dec
cmpsb
adc
mov
hlt
stc
or
int3
push
mov
adc
daa
sbb
add
xchg
sub
fldl
jb
mov
bound
sbb
jmp
call
bound
push
fwait
inc
lds
push
jmp
test
mov
add
sub
out
data16
test
das
mov
lahf
inc
jmp
jne
cmp
sbb
fbstp
jg
sbb
movsb
sbb
dec
sbb
mov
pop
call
ds
jle
jnp
mov
or
mov
cltd
mov
push
mov
or
pop
dec
jbe
fucomi
jmp
rcr
jae
repnz
dec
sub
and
jae
cld
call
pop
push
roll
jp
lret
sbb
and
pop
sbb
ja
data16
sub
adc
cwtl
add
push
test
aaa
cmp
test
pop
lods
add
push
push
movsl
jg
mov
fwait
andl
sarl
int
cmp
scas
sub
xchg
dec
cmp
mov
push
xchg
mov
inc
dec
push
cmp
dec
pcmpgtd
adc
push
jmp
stos
jl
mov
pusha
add
or
lea
inc
xor
movsl
cli
sub
cltd
movsb
push
pop
mov
add
cmp
xchg
js
leave
push
mov
mov
daa
pop
cld
or
adc
int
ret
insb
dec
int3
dec
sub
gs
mov
call
popa
arpl
rorb
mov
pop
xchg
stc
in
xor
xor
cmp
sete
bound
or
mov
pop
and
add
fwait
xor
call
mov
or
adc
adc
iret
adc
shrb
int
andl
xchg
rcll
pop
out
jno
lret
das
xor
xor
pop
and
add
test
test
mov
adc
fs
adc
push
push
add
pop
ret
or
mov
and
test
shrl
call
push
mov
lea
jns
in
lahf
xor
push
cmp
push
sub
pop
xor
xchg
jnp
push
xchg
fidivs
out
stc
adc
mov
stos
sub
and
mov
xor
js
shrb
mov
lods
push
cwtl
sub
in
mov
cli
jnp
out
mov
adc
vpcmpeqw
push
adc
test
cwtl
or
inc
push
jle
call
hlt
jo
pop
add
xchg
and
pop
cmp
inc
or
movb
add
aas
sbb
lods
add
push
add
or
scas
sbb
sahf
std
inc
arpl
ss
push
push
lahf
ljmp
push
data16
lret
test
stos
ret
test
movsb
clc
cmp
sub
pinsrw
aas
movsl
dec
jb
push
aad
push
movsl
dec
inc
xor
sub
xchg
outsb
testl
mov
stc
cmp
xor
push
xor
or
dec
cmpsl
popf
dec
rcll
cmpb
dec
shll
cmp
dec
dec
pop
sar
sub
sub
adc
sub
jae
cmp
jmp
sbb
cs
sub
dec
push
dec
ret
push
or
lret
pop
rcrb
pusha
mov
jecxz
mov
shrl
xorb
movsb
xchg
xchg
je
nop
ror
js
pop
jl
pushl
jmp
aaa
xchg
push
pop
mov
pushf
pop
nop
lahf
je
jmp
ret
daa
cwtl
mov
adc
mov
ljmp
hlt
mov
sub
xchg
ror
rcrb
enter
int3
clc
or
sar
push
lret
hlt
dec
lret
push
xor
lret
cmp
jae
hlt
add
inc
js
or
in
enter
fstps
pop
mov
ret
fmull
mov
addr16
mov
fcompl
leave
jg
outsl
push
je
sub
or
incl
dec
movsl
enter
inc
inc
and
ja
sub
test
fstpt
outsb
pop
cltd
jmp
adc
movsl
xchg
shlb
into
fldl
lock
icebp
daa
add
xchg
cmpb
push
or
fcmovb
sbb
push
xchg
jle
dec
cmp
adc
xor
push
xchg
mov
loope
mov
movsl
ss
shlb
add
jno
mov
bound
ret
icebp
add
stos
dec
inc
cmpsb
dec
sbb
cmc
add
mov
mov
inc
bound
jl
movsl
push
push
rep
stos
stos
mov
bound
mov
jl
mov
push
shl
inc
shl
pop
movsl
xchg
add
jns
mov
addr16
pop
call
push
loopne
mov
daa
mov
add
mov
add
je
call
cmp
jne
hlt
jmp
dec
xor
mov
ds
sbb
sub
sub
sarl
push
mov
xor
xchg
pop
mov
call
cltd
cmp
cmpsb
or
jp
enter
pop
sub
popa
stos
push
mov
push
add
out
and
push
cld
jo
arpl
in
adc
or
cmc
inc
dec
pop
mov
xchg
int
mov
std
dec
dec
or
and
xchg
std
mov
fildl
test
mov
dec
lret
enter
call
push
int
and
stc
cmp
icebp
and
xor
pop
sbbb
xchg
and
and
jle
out
sub
mov
inc
rorb
mov
sub
imul
lret
imul
mov
addr16
dec
dec
daa
xchg
jb
or
sub
push
incl
rcll
inc
or
or
xor
inc
hlt
sbb
pop
cmp
push
mov
cltd
mov
lea
and
int3
dec
ret
inc
cmp
cmp
add
shlb
sbb
jb
ficoml
daa
rcll
cld
fstpl
pop
dec
lcall
sub
add
mov
pop
pop
jb
jmp
aas
lcall
push
mov
test
sbb
sub
pop
push
jmp
jg
add
outsb
ljmp
push
inc
and
pushl
shl
xchg
int
add
ja
sbb
lea
lret
push
stos
jl
rcll
ja
push
sub
stc
test
pop
in
adc
pushf
xchg
das
add
push
mov
testb
sbb
add
sti
pop
inc
clc
out
or
stc
rclb
push
or
test
mov
or
inc
lcall
add
enter
cli
pop
jmp
jge
or
aas
and
ret
bound
push
bts
cmp
xchg
hlt
stc
sarb
sbb
and
js
ja
sti
add
loopne
fildl
jl
add
sub
arpl
shr
cmp
cld
dec
inc
sbb
xor
rorb
stos
push
shlb
stos
lock
addl
lahf
push
mov
dec
ret
xchg
xor
daa
dec
jno
cwtl
sub
pusha
adc
int
ret
dec
sti
fimuls
jmp
and
ja
divl
incl
lea
mov
mov
out
ss
and
popa
sub
rcl
lds
lahf
push
leave
mov
jbe
stos
jnp
dec
imul
mov
mov
lea
jg
outsb
dec
jnp
push
add
adc
xor
lea
sub
in
dec
and
repnz
dec
pop
jno
es
das
sbb
rorb
cmp
pop
cmp
out
push
jmp
lods
movsl
and
pop
aaa
sub
cmc
jle
xchg
jbe
inc
hlt
stc
fidivl
stos
and
mov
loopne
push
daa
nop
js
cmp
push
push
cltd
lret
sbb
mov
sti
cmp
incb
lods
and
mov
adc
int
pop
xchg
mov
movsb
imul
sub
ja
subb
jb
stc
push
pushf
adc
inc
mov
xchg
and
and
xchg
jmp
jp
clc
bound
repz
cmp
dec
ss
adc
pop
xchg
adc
or
add
inc
mov
pop
lret
leave
lea
jae
cli
adc
add
push
pop
ja
sbb
push
lcall
cs
cli
movzwl
dec
or
dec
fldcw
sarl
aad
ljmp
sti
add
pop
jge
sub
push
dec
jmp
inc
dec
cmc
divb
mov
pop
sub
add
cld
mov
sarl
outsl
addl
jmp
sbb
repnz
jg
dec
push
jo
test
lods
cltd
or
sbb
add
dec
popf
or
xchg
push
aaa
cmpsb
pop
push
ret
dec
stos
add
add
jmp
cmpsb
ret
add
push
or
rclb
ss
mov
popf
adc
pop
mov
pop
mov
mov
sbb
pop
jne
int
rorb
movsb
hlt
or
sbb
cmp
pop
mov
push
and
stos
ret
push
adc
or
cmp
rorb
inc
xor
jnp
mov
hlt
or
jmp
inc
or
push
mov
aaa
in
pop
outsl
lret
js
lahf
xor
pop
les
lea
xor
dec
sub
add
add
dec
inc
sbb
add
shr
xchg
mov
jae
cmp
cli
adc
add
cmpsb
jnp
sbb
xlat
icebp
fwait
jae
xlat
out
adc
clc
fs
cmovg
fcomip
lock
jmp
pushf
dec
pop
push
ja
xchg
xor
sub
roll
adc
fsts
and
int
push
fs
push
pop
jmp
adc
fisttps
push
enter
test
jg
rorl
into
stos
dec
inc
dec
inc
std
push
leave
jbe
ljmp
push
cmpsb
and
lahf
add
jmp
orb
push
pop
dec
cmp
dec
push
je
lea
jnp
sbb
rorl
push
pop
ret
push
sti
jne
pop
add
repz
mov
fwait
pop
je
leave
and
lods
sub
jle
dec
xlat
cwtl
adc
mov
adc
arpl
stc
inc
jae
shll
dec
push
add
movsl
ret
ret
mov
insb
sbb
loope
das
loop
lretw
in
pop
int3
lea
test
mov
jmp
int3
fimull
jp
xor
and
iret
mov
ja
and
shll
pushf
ret
adc
push
repz
out
mov
out
mov
pop
xchg
dec
or
imul
les
sbb
mov
xor
inc
stos
aam
popf
repnz
xor
sbb
cmp
repz
adc
xor
mov
pop
shr
cmpsl
stos
add
stos
mov
dec
dec
jb
inc
cli
loopne
sub
xor
arpl
cmp
pop
cmp
enter
arpl
cltd
or
adc
fadd
push
call
adc
cmp
lret
inc
imul
loop
in
into
xor
push
adc
pop
test
lock
dec
mov
push
fadd
in
mov
in
lret
sahf
lret
roll
fsubr
cwtl
mov
movsl
outsl
sbbb
shl
xchg
in
mov
push
jmp
mov
in
sarb
lock
ror
fdivrl
in
into
int3
leave
insl
imul
push
mov
push
mov
iret
cli
fldl
sti
add
mov
out
push
mov
jmp
push
popf
divb
lret
push
jmp
add
inc
push
xchg
into
divl
dec
pop
xchg
pop
push
loopne
bound
jecxz
mov
inc
cmpl
mov
xlat
mov
and
lahf
sti
pop
push
cmp
rcll
out
cmp
lret
jmp
aaa
call
lahf
xor
je
jbe
sbb
out
adc
xchg
jg
mov
pop
std
lret
stos
sbbb
imul
rolb
jmp
and
cld
loopne
jmp
lahf
cmp
lea
cli
dec
push
push
nop
add
jnp
js
jae
jge
mov
out
loope
jp
push
roll
bound
js
xorb
divl
adc
mov
xor
push
in
mov
scas
in
xchg
ret
ljmp
in
xorl
xchg
cmc
lods
imul
pop
icebp
push
repz
mov
inc
adc
fldenv
loop
or
sti
xchg
shr
enter
inc
jp
dec
mov
sub
inc
lret
clc
sarb
fistpll
jg
pop
lret
out
ficompl
fwait
int3
ret
mov
dec
imul
lret
call
cmp
test
jge
sti
sti
cltd
dec
or
bound
cmp
sub
cmp
jns
pop
lahf
out
aas
cmpsb
mov
or
rolb
jp
pushf
xchg
xchg
inc
dec
mov
ss
xchg
mov
cmpsb
stos
pop
clc
subb
and
dec
sub
jge
lret
inc
out
mov
cld
cli
jbe
fsts
cmp
sbb
cld
inc
lea
sbb
mov
jl
fdivrl
xchg
xlat
pop
xor
shl
repnz
sub
test
fsubrp
inc
outsb
lret
dec
repnz
cltd
loope
ret
repz
jnp
xor
ss
orps
xchg
xchg
jo
in
xor
adc
test
in
in
es
iret
push
leave
add
xchg
das
cmpsb
shlb
pop
cld
sub
popf
inc
je
cltd
xor
aad
cli
or
insb
cmc
decl
clc
icebp
in
cltd
cmpsl
iret
adc
rclb
icebp
call
pop
out
mov
sbb
std
jg
pop
cld
inc
xchg
ficoml
in
sar
clc
cmp
aaa
jmp
das
jmp
pop
sahf
fisttps
mov
or
ficoms
idiv
std
jg
out
out
jl
repz
jmp
jmp
cmp
sti
jecxz
push
stos
pop
lock
dec
shll
jle
pop
scas
loop
in
notb
lock
jecxz
dec
leave
cmpb
cmc
cli
enter
rcl
data16
loope
cld
jmp
pop
fwait
xchg
out
push
cld
pop
mov
repz
dec
jge
cli
arpl
pop
ret
fldenv
pop
dec
popl
mov
lds
xchg
orb
int
and
or
lock
inc
iret
push
clc
repz
sti
outsl
xchg
push
mov
clc
cli
inc
mov
repnz
sbb
rorb
push
jmp
mov
jp
mov
mov
push
dec
dec
aas
loopne
mov
into
sti
inc
stc
pop
incl
pop
or
add
push
insl
ljmp
popf
mov
lret
loope
push
ret
scas
jp
jecxz
pushf
pop
clc
rorb
sti
cli
ret
stos
add
aam
mov
xchg
xchg
fwait
mov
roll
mov
arpl
xor
cmp
and
mov
inc
add
aam
pop
cmp
in
loopne
add
loopne
mov
js
push
nop
lret
mov
push
leave
rcrb
mov
lret
rorl
cmp
repz
imul
cwtl
sti
orl
jp
ss
stc
jmp
fists
nop
push
call
push
pop
dec
and
or
or
jle
push
repz
mov
das
sbb
pop
imul
icebp
stc
shlb
inc
aas
sbb
jmp
jae
call
mov
fistpll
iret
int3
enter
lret
cltd
xchg
adc
mov
xchg
in
fwait
std
sbb
in
pop
inc
daa
jmp
mov
or
pop
ljmp
fcomp
ret
in
pop
mov
push
stc
mov
pop
in
lds
sar
out
adc
call
sub
into
lret
clc
je
fwait
mov
fwait
out
lcall
mov
xor
sub
xchg
xchg
xchg
fdivr
lret
adc
mov
adc
imul
mov
imul
mov
lds
inc
stc
fucom
xorl
add
cwtl
fwait
andl
cli
addr16
mov
pushf
int3
mov
mov
ja
addr16
or
imul
mov
jbe
pop
dec
push
xchg
fcoml
adc
mov
in
ret
nop
lock
mov
xchg
mov
mov
sub
loope
ror
stc
sub
add
mov
sbb
outsl
xchg
sub
ficoms
cwtl
fistl
sub
xchg
mov
int
movl
in
sbb
push
jae
and
mov
cli
sti
ficoml
sub
lahf
xlat
and
sub
test
cwtl
cwtl
shlb
mov
xchg
imul
mov
lret
test
dec
roll
xchg
and
mov
repnz
fnstenv
aas
arpl
mov
sti
lock
dec
mov
ret
sarb
dec
mov
js
in
test
jo
sub
stos
mov
into
clc
pop
and
cli
mov
push
pop
into
js
mov
inc
fldcw
in
stos
inc
mov
negl
inc
mov
push
mov
repz
mov
in
fadds
fsts
cld
rcll
test
mov
rclb
gs
iret
addr16
push
js
dec
pop
mull
push
mov
pusha
push
pop
stos
sub
push
outsl
movsb
pop
pop
js
int
lock
lret
mov
repnz
lahf
jl
dec
lahf
hlt
xlat
push
mov
inc
loope
adc
cmp
jle,pn
mov
ljmp
adc
mov
lret
clc
loopne
loope
movsb
iret
inc
mov
add
mov
gs
divb
inc
enter
lds
xchg
test
pop
lea
scas
dec
push
rcrl
sbbl
xchg
repz
inc
fiaddl
xor
gs
ror
mov
jb
imul
pop
push
fwait
jmp
mov
rolb
jmp
lret
lret
mov
cmp
mov
shll
dec
cmpsb
pop
push
in
and
jg
pusha
adc
mov
xchg
test
inc
jo
jmp
mov
push
int
aad
sbb
mov
in
jnp
out
into
jp
pop
fdivp
cli
int
mov
test
jmp
mov
cli
orb
jb
sub
cwtl
sti
adc
aaa
cs
enter
stos
lret
mov
pop
addr16
stc
push
clc
std
int
in
icebp
cli
fisttpl
cltd
test
xchg
into
lret
xchg
mov
out
lcall
push
mov
cld
add
inc
add
or
fcmovnbe
or
push
inc
int3
les
lret
cmpsl
movsb
fists
mov
and
loopne
jmp
loop
xchg
in
repnz
push
sbb
loope
sarl
cmpsl
or
dec
mov
push
idiv
mov
enter
pushf
test
mov
push
lret
xchg
outsl
fwait
or
pusha
lret
push
mov
outsb
movl
mov
and
push
or
cmp
dec
rclb
pop
and
jmp
lea
add
lret
add
or
jb
es
aam
jae
jp
mov
or
push
push
adc
xor
iret
mov
je
sbb
cld
cli
and
pop
or
push
add
or
add
movsl
lahf
push
repz
cwtl
mov
cwtl
ds
ss
jl
xor
test
js
fidivs
daa
sbbl
std
jmp
insl
mov
and
clc
bnd
sub
xor
xor
int3
sahf
sbb
inc
fiaddl
ret
xchg
leave
jb
bound
xor
pop
insb
cmp
es
jmp
call
lahf
cld
imul
dec
mov
or
ljmp
push
dec
inc
stc
xor
adc
fcmovbe
bound
push
arpl
jp
aas
lahf
es
gs
inc
lahf
push
push
loopne
jbe
mov
rol
clc
sbb
repnz
adc
stc
jb
lret
fnstenv
lcall
dec
scas
stc
aam
inc
shll
leave
cmp
pop
xchg
jp
lcall
inc
pop
inc
adc
hlt
popa
pop
sahf
leave
dec
cmp
dec
cmp
call
cmp
loop
lahf
cwtl
cmp
in
pop
pop
nop
leave
inc
pushl
lahf
loopne
roll
lret
xor
push
lahf
scas
or
mov
mov
sarb
cmp
lret
push
mov
stos
repz
xchg
imul
mov
mov
ljmp
xor
push
lcall
fs
insb
stc
jp
nop
movsb
push
mov
mov
data16
jae
loopne
ljmp
fucomp
addb
enter
iret
jmp
and
rol
leave
mov
cmpsb
xchg
out
dec
mov
shlb
inc
out
mov
add
xor
jae
push
push
decl
rorb
mov
adc
ret
stos
adc
push
inc
cmp
push
leave
or
inc
mov
cwtl
mov
out
fildl
fsubp
cld
je
cmp
or
imul
cmp
xchg
ret
loopne
add
out
and
out
dec
adc
je
pop
popa
xor
push
rclb
xor
subl
lret
adcl
call
dec
mov
lcall
jae
inc
ss
jmp
xchg
sub
insb
mov
push
fisubrl
stos
cwtl
daa
push
dec
or
add
mov
lock
loop
test
lret
and
insb
test
lods
jl
pushf
jmp
cmpsl
xor
cmp
push
aad
imul
loope
fiadds
or
ds
jnp
fucomi
cmp
fisttps
sbb
loope
into
orb
lret
jle
loop
jle
pop
cmp
fwait
roll
mov
xlat
jge
xchg
jae
cli
loope
sarl
lcall
add
mov
je
add
cmp
es
and
lcall
and
imul
lahf
insb
xchg
inc
ljmp
lock
js
add
mov
aas
pop
test
lret
stc
jno
pop
xchg
incl
loop
cli
pop
divl
lea
ret
cmp
sbb
jae
adc
dec
cmc
loopne
int3
or
cld
sbb
sub
push
jp
cmpsl
sub
flds
test
pop
loop
seto
icebp
ret
mov
dec
add
jl
cs
scas
enter
roll
mov
add
push
sbb
pop
stos
xor
fildl
adc
inc
push
add
push
lods
fwait
daa
or
push
jg
mov
add
and
shl
add
fstl
rcll
jns
gs
lret
xor
sub
pop
cmp
and
jmp
sbb
imul
fiaddl
cmp
cmp
faddl
lret
xchg
xchg
das
out
add
xchg
scas
add
lret
push
mov
dec
fadds
cmp
adc
in
mov
adc
imul
mov
lds
out
pop
xchg
leave
fnsave
mov
mov
and
add
lods
cmpsl
or
cmp
pop
pop
or
jecxz
call
fwait
sti
dec
and
mov
pop
inc
or
das
mov
bnd
mov
mov
cmp
or
ss
mov
xchg
push
fwait
mov
cld
pop
subl
mov
xchg
test
push
test
add
mov
pusha
jns
adc
lods
mov
cmpsl
pop
iret
inc
jp
adc
loope
movsb
andb
lret
sub
sti
sbb
push
sbb
mov
mov
sub
inc
lcall
test
xchg
mov
inc
xchg
add
xor
lret
pop
dec
divb
inc
xor
mov
ds
pop
int
mov
or
xchg
clc
adc
sub
jne
inc
or
mov
mov
cltd
cli
lods
fiadds
push
mov
sarl
xor
cmp
xchg
pop
fisubrs
rolb
out
les
idivl
cli
xor
mul
jo
ljmp
xor
jnp
sti
mov
and
or
dec
sbb
or
add
movsl
shl
cltd
mov
stos
push
push
mov
leave
sbb
add
mov
mov
sbb
push
xlat
add
xchg
add
scas
and
adc
jne
push
lret
adc
iret
add
arpl
mov
imul
push
les
popa
icebp
fwait
outsl
xlat
xchg
cmp
push
jle
inc
inc
das
sub
or
xchg
aas
fldl
push
ds
adc
or
int
add
add
push
sbb
xchg
loope
cwtl
int
int3
sub
das
sbb
push
movsl
inc
push
xchg
add
lea
shl
fstpl
mov
xchg
xchg
mov
pop
xor
jno
call
cmp
pop
sbb
push
cmpsl
push
test
iret
rol
or
mov
ss
xlat
xchg
add
mov
data16
out
xchg
dec
sub
or
pusha
nop
adc
rorl
mov
mov
lds
xchg
les
inc
pop
shrb
into
daa
int
in
mov
popf
fists
cmp
addr16
fsubr
and
sti
lods
push
push
imul
sbb
sbb
push
mov
lret
fwait
cld
add
cmpsb
mov
movsl
dec
adc
out
movsb
cmp
js
xor
sbb
xchg
or
pop
xor
jmp
int3
jle
out
mov
mov
xchg
mov
jl
imulb
add
fwait
sub
sub
add
imul
sbb
mov
rcll
pop
pop
test
imul
in
das
cwtl
in
scas
add
add
push
icebp
xchg
aaa
mov
inc
mov
movsb
mov
aaa
repnz
dec
out
mov
sbb
aas
sti
jae
lret
test
popf
enter
xlat
mov
pop
cmp
rclb
mov
ficoml
or
lret
push
subb
sbb
nop
dec
lret
add
add
xchg
xor
rcll
int
jno
sbb
ret
sub
lea
ficoml
mov
jmp
arpl
test
and
and
push
ret
pop
inc
jnp
xlat
xchg
out
mov
daa
or
js
aas
mov
mov
roll
test
mov
sti
sub
into
jecxz
in
mov
mov
mov
in
data16
cli
lea
fwait
sbb
add
test
adc
imul
pusha
pop
mov
mov
or
jbe
add
mov
dec
fnstsw
out
xchg
lret
pop
sti
or
ror
and
and
pop
imul
mov
or
mov
mov
idivb
sbb
ds
add
insb
jp
popf
test
call
inc
in
and
sub
int
out
push
scas
xchg
sub
push
xchg
call
flds
mov
fimull
mov
xchg
xchg
sub
jmp
xchg
roll
data16
add
mov
jecxz
mov
pop
mov
mov
inc
clc
cmc
call
xchg
add
pusha
mov
or
cmp
ja
pop
fiaddl
xchg
ja
dec
and
fldcw
add
lods
jp
add
inc
xchg
out
add
lret
xor
ja
fisubs
mov
add
fstpt
stos
mov
xchg
or
pop
sbb
cltd
add
mov
adc
add
mov
dec
popf
adcb
std
mov
mov
gs
dec
mov
push
inc
pop
loop
sub
pop
add
adc
rolb
faddl
and
or
testb
iret
add
jno
js
sbb
lods
mov
pushf
shlb
lahf
and
mov
clc
add
jne
leave
enter
jne
push
fs
into
push
or
lds
mov
xor
aam
mov
insl
arpl
add
jecxz
dec
stos
and
pop
jmp
stos
xor
sbb
push
aam
rorl
add
imul
mov
shll
out
int
pop
lcall
scas
outsl
lds
add
test
pop
inc
push
je
std
mov
out
mov
add
push
add
in
shll
mov
pusha
fistpll
mov
mov
xchg
aam
jl
add
cmp
and
cmp
lcall
inc
sub
dec
mov
add
inc
jge
dec
jg
fsubl
adc
adc
or
xor
push
mov
mov
add
int3
adc
jnp
jge
cmpl
pop
cmpsb
push
xor
jg
cmp
aad
pop
mov
fdivrl
push
stos
std
fwait
pop
pop
add
in
std
cwtl
roll
subb
inc
fbld
jl
add
not
pop
incl
pop
pop
out
nop
fmuls
add
jg
dec
and
aas
mov
fsubrs
adc
mov
aam
pop
pop
stc
iret
sbb
icebp
into
data16
jnp
mov
mov
cmpsb
lods
sbb
daa
mov
loop
iret
orb
add
lods
sbb
testl
jecxz
add
inc
out
sub
sbb
shl
mov
fs
pop
call
inc
add
pusha
sub
push
cmp
add
add
adc
jmp
rclb
mov
pop
cli
jno
shr
and
and
pop
imul
popf
mov
mov
xchg
pop
mov
inc
fildl
cmp
stc
cli
scas
add
sbb
xor
fisubl
or
ficompl
rcrb
stc
push
mov
popf
cli
inc
xlat
imul
or
or
jecxz
movsb
iret
mov
js
mov
stos
mov
sbb
jg
xchg
cmc
testl
cltd
loope
add
stc
in
les
jmp
stos
mov
in
int3
mov
add
and
mov
aas
in
ljmp
sbb
inc
rcll
nop
flds
xlat
dec
or
add
lock
cltd
lods
mov
pop
pop
mov
or
pop
pop
add
movsl
ficoms
out
add
xchg
xor
fcomps
jg
jne
aam
iret
popf
fstps
out
ss
dec
push
jg
mov
mov
mov
int
sbb
or
fsubr
into
or
push
aam
dec
rcll
sbb
mov
lods
pop
punpckldq
mov
sbb
adc
fwait
jns
out
and
mov
xor
sti
pusha
jmp
mov
dec
stos
fadd
cld
push
pushl
cmp
nop
cmp
pop
inc
cmp
jns
mov
out
inc
aaa
xchg
push
scas
add
leave
mov
es
add
push
mov
sub
movsl
add
ret
mov
loopne
inc
lret
data16
push
stos
mov
mov
call
sub
mov
mov
push
iret
repz
call
leave
add
data16
pop
stos
jae
imul
and
stos
xchg
sub
rorl
or
call
add
dec
fcmovbe
dec
enter
mov
add
inc
push
dec
fistpll
jecxz
add
mov
xchg
pop
jne
adc
cld
cmp
push
je
adc
cmpsl
add
ss
out
mov
add
add
add
mov
stos
andb
imul
add
add
xchg
pop
aaa
pop
sahf
pop
pusha
out
lcall
push
sub
pop
xchg
subb
aad
inc
insb
mov
jecxz
dec
mov
add
and
neg
loop
sub
pop
div
aas
and
lock
dec
ja
bnd
test
mov
mov
push
addb
aas
aaa
mov
cmp
pushl
fwait
out
test
enter
pop
outsb
mov
pop
fs
inc
add
pop
push
and
test
in
aaa
sbb
add
or
jecxz
adc
add
xchg
mov
jns
jnp
sub
xchg
sbbl
insb
std
inc
push
test
cli
or
out
sbb
xchg
sub
dec
push
or
stos
sahf
mov
ret
mov
push
xchg
add
xor
xlat
sub
jle
icebp
dec
cmp
mov
jae
xorl
sarb
fwait
sbb
or
lods
pop
sub
add
xchg
in
popa
add
inc
loopne
jae
add
cli
rcrb
push
and
cmpsl
or
pop
clc
cmp
addr16
lret
test
scas
lods
test
cli
fwait
cmpb
daa
sahf
ja
mov
aam
cmp
add
push
stos
mov
les
inc
add
movsl
sbb
fdivp
inc
pop
loop
pop
add
mov
pop
fcompl
or
pop
fldz
lcall
sbb
pop
mov
mov
das
adc
scas
punpcklwd
xchg
lea
inc
loope
cmp
fcomps
imul
or
xchg
lahf
xor
dec
dec
fcoml
mov
jge
pop
repz
xorb
adc
repz
aam
fsts
and
out
call
push
xlat
test
outsb
je
xchg
loope
out
jecxz
fcmovu
jp
mov
mov
ja
and
cmp
pushf
scas
lret
lret
pop
aam
mov
xor
jecxz
mov
push
mov
aad
stc
scas
arpl
sub
pop
fs
aam
shll
arpl
loop
jmp
iret
add
mov
shll
sbb
popf
push
xchg
mov
add
add
mov
push
fsubr
sub
pop
lods
insl
ljmp
repnz
mov
sbb
ja
jmp
das
dec
daa
cmpsb
or
mov
and
fwait
and
add
and
bound
pop
mov
push
roll
loope
sub
jbe
pop
test
insb
pop
pop
stc
xchg
dec
fwait
js
pop
add
loope
mov
das
jns
imul
inc
ficoml
shrl
pop
testl
jnp
movsb
mov
add
sbb
xorb
dec
add
jg
xchg
add
cmpsb
push
fsts
movb
ja
push
out
in
mov
mov
pop
inc
cmp
and
lea
mov
push
pop
idivb
mov
xor
jl
mov
jae
ror
inc
sbb
add
push
cltd
movsl
mov
push
aad
pop
rcll
fldl
push
jp
in
and
cmp
lret
das
pop
aad
inc
fmuls
adc
inc
ffreep
jp
sbb
ror
mov
shrb
fisttps
sbb
sub
cmp
leave
jo
test
movsb
lahf
mov
push
leave
int3
call
xchg
fmuls
stc
call
leave
sub
cmp
insb
lahf
mov
jmp
xchg
clc
gs
lahf
sub
push
push
leave
pushl
dec
nop
stc
mov
ror
in
cld
lahf
adc
shll
dec
cmp
dec
lahf
pop
push
call
les
int3
shll
cmp
push
lahf
pusha
jo
or
jmp
stc
call
sbb
shlb
push
inc
leave
pop
pushl
dec
mov
aam
in
lock
adc
lret
sub
leave
pusha
pushl
orb
pushf
lahf
lods
rclb
in
in
xchg
hlt
arpl
sbb
rcrb
leave
xor
inc
xchg
push
dec
fs
jo
mov
ljmp
clc
sti
sub
lahf
dec
pop
push
fs
pushf
ljmp
stc
in
lahf
hlt
cld
push
sub
adc
cmp
inc
dec
dec
stc
push
lahf
pusha
fs
insb
leave
mov
movsb
xchg
test
enter
in
hlt
push
or
hlt
sub
dec
lahf
push
mov
leave
cld
stc
or
fbld
xchg
cmp
stc
push
jl
test
cwtl
xchg
lods
dec
mov
in
sub
pop
js
mov
dec
rclb
jo
mov
inc
xchg
int3
push
or
lret
cmp
leave
nop
lcall
rcrb
hlt
stc
movsb
and
and
fbstp
mov
mov
pop
bnd
btc
dec
dec
dec
fimull
inc
inc
inc
inc
inc
jnp
fbstp
jle
jl
jb
add
jbe
je
push
add
outsb
outsl
insb
insl
bound
in
add
addr16
pop
add
pop
pop
pop
pop
push
push
add
push
push
push
push
dec
dec
icebp
dec
dec
les
roll
dec
sar
fiaddl
clc
cmp
mov
sti
sub
xchg
add
cld
lret
fisttps
filds
fbstp
and
xor
loop
cli
or
lock
ret
mov
icebp
les
dec
ror
jo
in
fmull
rcl
push
lret
pop
fdivs
sbb
ss
sti
sarl
mov
ljmp
sti
xor
adcb
xchg
xchg
and
cli
fists
add
ret
adc
pop
scas
jne
or
rcrl
add
fsubl
jo
xchg
lret
cmp
push
and
cmpsb
das
mov
shl
inc
stos
jb
outsl
xchg
and
aam
popa
fs
jae
mov
arpl
inc
cmp
jne
paddw
je
popa
data16
imul
lock
repnz
rcrl
iret
xlat
add
or
xor
add
push
outsb
ret
popa
bound
outsl
cmp
push
push
lds
jae
call
je
adc
pop
jecxz
psrlw
insl
add
arpl
je
jnp
imul
icebp
sarb
jno
in
scas
jne
arpl
pop
ja
fs
or
mov
repz
das
js
hlt
lock
sti
cmc
jge
pushf
cli
clc
jmp
iret
add
mov
rcll
xchg
fistps
push
pushf
sbb
and
fildll
push
mov
shl
xor
dec
cmp
mov
add
int3
jecxz
lahf
push
dec
int3
jb
jae
xchg
inc
daa
dec
fsubrl
js
fisttps
pop
js
add
and
imul
rorb
sub
push
dec
push
dec
pop
jge
inc
addr16
decl
xlat
ljmp
jne
ljmp
and
lods
js
pop
push
lahf
sub
pop
mov
cmp
jge
xor
xchg
jp
mov
out
fwait
insl
sti
scas
addb
sbb
shrb
insb
lret
sti
jp
fs
sahf
dec
inc
repnz
rclb
repz
bound
dec
ret
inc
insb
mov
sti
push
inc
gs
popa
enter
pcmpgtw
addr16
ss
bound
es
loop
sub
rcrl
data16
sub
lcall
xchg
cmpsb
jne
je
repz
jb
jno
jo
outsl
xchg
outsb
dec
insl
stc
insb
lahf
imul
leave
push
jnp
mov
bound
xchg
inc
fwait
push
sub
outsb
addb
xor
dec
inc
xor
adcl
inc
js
adc
jae
mov
dec
dec
into
jae
mov
mov
pop
pop
ljmp
push
call
push
dec
push
stc
push
lahf
push
push
push
dec
leave
dec
decl
dec
dec
dec
stc
dec
lahf
dec
dec
push
inc
leave
inc
incl
inc
dec
inc
stc
inc
sahf
inc
fldcw
sbb
je
dec
loope
xchg
pop
repz
int3
xor
jb
inc
xor
jmp
and
and
cwtl
shlb
push
jmp
jl
insb
adc
xchg
hlt
test
cmp
push
mov
icebp
repz
shl
xchg
je
stos
jno
push
mov
lret
loopne
mov
cli
in
cmp
push
jb
rcll
fmul
push
aad
push
jns
dec
testl
push
jns
das
push
mov
insb
jne
xchg
jnp
jns
sahf
xchg
dec
jo
subb
ja
jle
clc
enter
mov
mov
push
push
ss
or
stos
xchg
cmp
cmp
fisttps
xadd
aam
popa
bound
xlat
cltd
enter
inc
loop
testl
lret
xor
xor
xor
dec
and
sbb
dec
ljmp
lret
cmpsl
dec
adc
inc
inc
xor
xor
xor
xor
dec
inc
jecxz
add
frstor
pop
add
loopne
sahf
adc
outsb
nop
lahf
and
test
arpl
adc
bound
in
outsl
les
push
insl
lahf
mov
jmp
inc
add
push
pop
rorl
movl
dec
dec
push
sbb
mov
dec
mov
push
sub
adc
hlt
das
mov
movsb
dec
cmp
lahf
push
cmp
sbb
xor
rorl
stos
push
outsb
test
add
lea
imul
mov
sub
cmove
ljmp
dec
jae
dec
lret
sub
or
adc
jns
mov
or
xorl
pop
mov
outsb
pop
and
xchg
sub
popa
dec
mov
mov
mov
jbe
in
cmp
out
and
pop
fmuls
dec
cmp
lcall
ljmp
inc
arpl
sahf
jo
mov
jnp
addb
sub
iret
adc
jno
xchg
lds
ret
mov
out
ficomps
or
dec
xchg
mov
outsb
mov
push
pusha
pop
cmp
aas
nop
int
dec
mov
pop
lahf
push
jne
cmp
ljmp
sub
fwait
daa
inc
fwait
pusha
ds
ret
xor
xor
xor
jge
pop
daa
mov
pop
dec
jl
pop
lahf
pop
aas
push
sub
sub
pop
xchg
and
sub
sub
pop
jns
ljmp
pop
adc
popf
xlat
imulb
addr16
mov
leave
add
iret
pop
out
xchg
iret
and
int3
dec
enter
rclb
lcall
pop
adc
lret
push
inc
add
push
xlat
mov
lret
jo
imul
rclb
in
dec
loopne
jmp
popf
xor
adc
ret
add
xor
mov
jmp
pop
popf
subb
repz
pop
adc
push
movl
add
shll
pushf
shl
rorl
mov
dec
lock
sbb
mov
cmp
inc
inc
inc
jge
pushf
dec
clc
push
dec
pop
adc
push
stc
outsb
lahf
pop
jbe
lret
pop
rorl
leave
jg
mov
xchg
push
or
lcall
test
xchg
rol
push
pushf
sar
fstps
jmp
pop
add
mov
stc
add
lret
adc
sbb
push
sbb
dec
push
pushf
push
stc
pop
lahf
add
outsl
inc
mov
call
dec
cwtl
adc
mov
mov
lahf
or
ss
repz
jmp
repz
aas
sti
mov
cmpsl
cmp
or
add
xchg
push
aas
es
or
xchg
mov
outsb
stos
dec
pusha
repz
fbstp
mov
mov
sarb
mov
loopne
js
xchg
lcall
and
enter
dec
add
lock
imul
push
jb
xorl
push
pop
nop
test
mov
mov
shl
cwtl
rclb
mov
ljmp
push
mov
out
arpl
sub
dec
ds
add
dec
add
pop
push
pop
leave
fs
repz
or
xchg
push
mov
pop
mov
mov
dec
jmp
data16
xchg
cmp
mov
and
pop
sbb
mov
push
dec
inc
xchg
jmp
dec
rclb
mov
js
repnz
cmpl
mov
dec
loopne
jmp
jecxz
in
lds
cli
pop
xor
xchg
jmp
push
pusha
rclb
mov
push
jnp
mov
pop
in
lret
push
dec
add
insl
push
sub
rclb
aas
orb
xchg
jmp
push
jmp
stos
leave
pop
pushl
ret
adc
dec
or
or
add
rorl
aas
cmp
into
xor
and
jmp
ss
nop
add
pop
push
mov
sbb
lret
pop
xchg
add
jl
add
xchg
leave
pop
lcall
stc
test
rcrl
xchg
sarb
lahf
push
in
out
push
adc
stc
inc
roll
out
pop
adc
push
repz
lret
adc
xor
lret
cmp
mov
stc
lret
dec
stc
push
lahf
sbb
sbb
imul
jnp
lret
test
and
and
rcll
stos
dec
and
mov
and
lret
rcrl
adc
dec
sub
lock
sub
jge
sti
add
stc
lret
sbb
stc
sub
xor
iret
shl
push
dec
xor
bound
mov
out
mov
jae
nop
jmp
pushf
mov
mov
leave
roll
leave
add
dec
pop
repnz
dec
jmp
mov
aas
mov
repnz
and
adc
aas
xor
push
loop
xchg
jmp
push
add
jo
jl
roll
dec
cltd
stc
add
mov
adc
dec
iret
adc
aas
loop
or
ljmp
std
leave
psubw
icebp
aam
cmpsl
push
adc
pop
loop
sub
inc
dec
dec
adc
sbb
pop
lret
dec
push
sbb
xchg
rorl
repz
iret
cmp
lret
arpl
popf
icebp
repnz
adc
leave
adc
lock
repz
bnd
or
inc
std
sti
push
inc
jmp
out
mov
jo
adc
add
push
mov
inc
cmp
dec
repz
sub
lock
pop
lea
push
repz
lret
xor
dec
adc
jns
add
loopne
nop
cwtl
push
sbb
adc
iret
and
inc
mov
shl
dec
mov
loopne
lahf
jo
xor
adc
jecxz
cmp
lea
inc
cmp
popf
fsubrs
pusha
loop
jp
addr16
stos
nop
mov
addl
fwait
lea
adc
mov
sbb
add
add
adc
inc
shlb
xchg
mov
out
xor
imul
shlb
je
jmp
lret
push
shll
inc
mov
popf
cmc
cli
push
clc
repz
aam
sub
add
jp
aas
xchg
ror
xor
adc
orb
pop
jmp
pushf
imul
jae
sarl
adc
inc
mov
xchg
out
xor
or
push
mov
aas
mov
enter
dec
inc
addr16
pop
dec
inc
fwait
jmp
push
jo
xchg
shl
inc
mov
add
repnz
mov
push
adc
add
pop
clc
mov
inc
mul
ret
cmp
push
pusha
jnp
imul
out
mov
pusha
fwait
or
stos
mov
mov
pop
adc
sbbl
push
stc
xchg
roll
popf
idiv
or
xchg
add
in
iret
inc
repz
jge
mov
stc
jb
sbb
test
ret
xchg
lret
xchg
jge
lahf
lahf
pop
push
test
or
mov
ret
push
dec
or
shl
mov
jbe
aas
repz
shl
push
mov
dec
mov
and
push
sub
jecxz
xor
mov
rcrl
jo
aas
jo
jns
add
mov
aas
mov
stc
jecxz
adc
mov
sub
mov
stos
incl
xchg
mov
pop
stc
mov
xchg
out
xchg
stos
push
fcmovne
js
out
popf
out
popf
cld
add
dec
rclb
inc
jecxz
jo
imul
test
xchg
clc
popf
dec
test
push
mov
rclb
fnstcw
loop
jmp
mov
clc
loop
loopne
fdivs
and
cmpl
inc
xbegin
cmp
adc
push
adc
push
sub
adc
or
stos
cwtl
xor
pop
scas
lret
push
rolb
xor
rorb
dec
insb
jae
sbb
xor
push
clc
pop
mov
push
mov
sar
jmp
repz
add
sti
mov
adc
add
rcl
test
add
loop
mov
lahf
mov
iret
cld
rorb
clc
or
xor
pushf
inc
clc
push
dec
pop
adc
imul
sti
push
add
dec
ret
cmp
clc
fcmove
add
adc
loope
adc
popf
pop
sub
roll
xor
rol
jecxz
int
clc
call
or
fwait
push
dec
dec
arpl
push
lahf
rolb
push
out
iret
roll
cld
mov
sti
iret
mov
jnp
inc
test
ret
movsb
iret
rclb
hlt
icebp
add
add
mov
into
cmp
inc
leave
js
push
dec
pop
pusha
cld
sbb
repz
push
mov
mov
incl
xchg
sahf
jp
iret
stos
ret
adc
lret
dec
pushf
shl
fcom
inc
in
sahf
cmp
mov
or
ret
adc
ret
sbb
lret
mov
stc
das
pop
mov
out
push
mov
stc
jmp
jecxz
leave
pop
in
dec
xchg
adc
scas
hlt
mov
mov
dec
sahf
mov
push
sti
leave
push
jae
xchg
rcll
push
or
sbb
or
sti
adc
lahf
cmovb
sahf
dec
sbb
push
xchg
adc
xchg
imul
xor
adc
mov
fmull
clc
in
in
stc
add
mulb
mov
sub
bswap
or
sbb
adc
xor
inc
lret
sarl
pushf
adc
call
ret
dec
jge
mov
pop
cmp
push
jo
jns
xor
lret
xchg
incl
fwait
aas
mov
adc
loop
sub
fistpll
lahf
out
push
lock
add
lret
or
adc
lret
stc
sbb
dec
inc
sub
int
clc
add
inc
pop
stc
dec
inc
rcll
arpl
imul
jns
add
mov
ja
jge
mov
dec
lret
enter
icebp
adc
jl
xlat
cmp
arpl
es
cmp
add
cmp
mov
add
scas
mov
dec
dec
xchg
lret
lea
imul
rcrl
adc
pop
dec
stos
rcll
leave
jecxz
rorb
adc
pop
in
sbb
mov
jp
push
arpl
sub
sbb
in
pop
mov
sar
sbb
clc
fwait
xorb
rcl
cmp
mov
mov
repz
add
lock
push
ds
testb
jmp
push
push
xor
adc
cmp
add
jmp
inc
inc
inc
mov
push
push
test
push
dec
lock
shll
lret
jnp
or
jecxz
lock
mov
xchg
shll
jge
sub
lock
fsub
add
faddp
leave
xor
mov
rclb
xor
jo
dec
mov
rorl
sub
sahf
jp
iret
stos
rcll
mov
mov
push
ret
into
decl
xchg
fcmove
mov
clc
repz
sbb
lock
pop
inc
lock
dec
mov
iret
and
jns
repz
subb
add
cwtl
dec
mov
mov
lret
and
rol
mov
pop
and
fistpll
rorl
jl
fcmovnb
repnz
mul
sbb
xor
in
test
push
push
clc
pop
pop
roll
and
cmc
sub
push
ficoml
dec
outsl
arpl
ret
xor
push
gs
fidivrs
sar
and
sbb
xor
inc
adc
inc
inc
push
mov
jmp
inc
and
popa
aad
imul
fsubs
inc
push
xchg
stc
outsl
inc
pop
inc
adc
js
test
push
fistl
and
das
mov
int3
lcall
sbb
add
adcl
adc
lds
inc
cwtl
fisttpll
inc
bound
inc
jb
ja
cmpb
pop
dec
dec
jnp
mov
add
cli
rcl
inc
dec
sbb
popa
push
aas
outsb
jne
or
inc
addr16
js
rcl
jne
pushf
dec
mov
inc
dec
imul
clc
bound
jns
xlat
mov
mov
jo
shlb
mov
mov
and
movsb
jno
pop
jns
dec
pop
xor
pop
xor
mov
pushl
inc
jle
xchg
xlat
sub
xor
fisubs
fisubl
jmp
inc
inc
aas
repnz
fs
jno
lods
push
call
jo
push
movsb
xchg
dec
repz
lahf
repnz
mov
insb
movzwl
push
dec
roll
mov
jno
mov
or
test
dec
dec
ret
xchg
mov
mov
add
pop
dec
out
fwait
imul
xchg
roll
in
cmc
adc
xor
mov
dec
dec
dec
aaa
push
pop
dec
and
test
xor
xor
mov
dec
jb
push
dec
jb
jb
jb
dec
xor
jge
mov
push
loopne
not
jb
test
inc
adc
jae
dec
in
mov
data16
ds
faddl
xor
test
inc
xor
in
stc
push
push
jb
rcrb
shll
ja
stc
adcb
and
inc
sub
push
hlt
aad
dec
lahf
lret
push
shlb
fidivrl
lret
cmp
jp
push
aas
push
cltd
insl
popa
js
push
imul
add
cmp
and
sub
insb
sub
mov
inc
xor
mov
pop
mov
dec
jge
jg
xor
das
inc
js
push
jp
imul
xor
sub
xor
lods
int3
pop
hlt
sub
add
sbb
push
gs
leave
cmp
arpl
pop
pop
jge
inc
je
mov
jp
stc
jmp
fs
xor
xchg
sub
jns
rcrl
dec
sbb
mov
push
jno
ljmp
jae
mov
idiv
sub
cmp
fstpl
in
insb
mov
sti
dec
test
lock
jae
add
mov
pop
dec
ret
xchg
aas
jae
dec
in
cltd
sti
jnp
cltd
fs
jnp
lcall
sbb
ret
out
jne
dec
adc
jae
inc
imul
mov
rcl
xor
push
pop
pop
inc
xchg
repz
inc
adc
fwait
dec
push
push
inc
leave
push
xor
iret
aas
add
fs
inc
lock
sub
sbb
add
push
cli
mov
push
stos
in
aad
jecxz
xchg
clc
fwait
jns
mov
mov
stos
inc
sub
cwtl
push
scas
sti
jmp
dec
out
imul
inc
mov
xchg
les
loop
adc
testl
andb
popf
int
pop
inc
inc
movsb
pop
pusha
in
mov
jae
stos
sub
mov
or
push
outsl
push
js
imul
lock
jecxz
sti
sub
cmp
mov
dec
mov
dec
outsl
push
inc
pop
imul
mov
fs
mov
imul
insl
rcrl
xchg
inc
xchg
clc
sbb
inc
pop
out
cmp
jp
push
sub
imul
push
dec
push
dec
hlt
stos
mov
popa
ret
adc
pushf
jp
int
std
iret
add
sub
cli
push
xchg
ret
jne
cmpsl
loop
pushf
jns
iret
push
int
imul
ja
jns
leave
dec
mov
lds
test
js
dec
push
push
pop
cltd
pop
push
std
rorb
ret
sahf
adc
outsl
icebp
dec
xlat
mov
add
push
repz
push
sar
or
cmp
dec
push
or
arpl
dec
dec
inc
inc
push
lea
dec
add
xor
dec
insl
in
test
xchg
cmc
xor
pop
hlt
inc
inc
je
pop
enter
dec
sbb
push
stos
mov
xchg
outsl
jbe
mov
jae
or
lds
mov
call
out
lret
push
incb
push
jecxz
add
adc
mov
and
xor
out
dec
lock
movsb
dec
movsl
mov
pusha
imull
mov
xchg
add
test
cmp
cld
sbb
inc
mov
stc
mov
insl
mov
xchg
inc
rorl
cli
mov
lods
or
cmpsb
insl
gs
cmpsl
lea
push
call
inc
pop
push
cmc
outsw
jecxz
movzbl
clc
pop
fsubr
fstpl
push
and
push
dec
cld
dec
push
mov
or
adc
pop
lea
sahf
lret
jmp
cmp
aas
sub
scas
push
dec
xor
movsl
das
outsl
popf
es
add
cmp
cmp
stos
dec
mov
xor
cmp
sahf
pop
and
adc
jmp
dec
dec
pop
dec
das
outsl
or
sub
mov
push
out
sub
test
aas
sbb
ret
cmpsl
lret
inc
cld
lods
popa
sbb
std
std
test
ret
popf
lods
push
xor
pop
call
es
rclb
outsl
iret
fwait
cmp
dec
mov
mov
sbb
push
xchg
imul
fnstsw
add
dec
sti
cli
mov
ffreep
outsl
dec
push
sub
insl
dec
xchg
lret
cwtl
inc
cmc
push
movd
pop
xlat
inc
sbb
dec
popa
or
mov
insb
jecxz
jo
lds
inc
push
sarl
adc
outsb
xchg
cmp
lds
inc
jae
nop
les
jne
out
add
sub
add
mov
or
dec
shll
fcmovu
in
mov
dec
pop
andb
push
add
adc
add
dec
shlb
rolb
lock
mov
bnd
lea
rcrb
mov
push
xlat
add
push
inc
push
inc
inc
repnz
dec
sub
lods
sbb
cmpl
push
mov
jmp
leave
aam
outsb
outsb
iret
jg
fdivrl
movsb
dec
jmp
mov
cmp
pop
clc
rclb
fwait
rcr
inc
mov
shll
sub
mov
fwait
outsl
mov
inc
jo
xchg
shlb
pop
lock
dec
mov
shlb
je
repnz
push
les
ljmp
sbb
sti
mov
in
inc
push
ret
sarb
cmpsl
rcrl
fwait
cmpb
rclb
mov
pop
rorb
ds
or
and
faddl
add
shlb
aaa
cmp
lods
fnstsw
dec
jne
outsb
and
fbstp
and
iret
lret
dec
dec
push
push
push
push
xor
inc
cmp
cmp
ss
pop
shrl
inc
mov
fldenv
shrb
push
jo
das
cmp
outsl
cmp
repz
ja
xchg
daa
sub
insb
push
mov
fcoms
ret
mov
and
mov
cs
loope
adc
bound
mov
inc
call
fwait
xlat
mov
shll
fwait
pop
mov
nop
leave
loopne
lock
pop
fdivs
sti
xchg
and
ljmp
sti
jo
in
shrb
sar
push
sub
or
iret
xor
js
repnz
leave
or
aas
and
sub
jae
dec
mov
fs
cmp
xor
xchg
imul
push
adc
in
rep
xchg
sub
rorb
ja
pusha
cmp
push
sbb
mov
pop
sub
sbb
fmuls
cmc
jmp
xchg
shlb
inc
dec
repz
cmp
cwtl
std
loope
scas
jo
lock
nop
cs
mov
rorb
jl
js
jo
fs
pusha
stc
pop
lahf
dec
cmp
sub
sub
and
and
stc
sbb
xchg
or
stc
cld
sub
dec
lock
in
lahf
call
enter
lods
dec
mov
js
fs
push
incl
dec
xor
sub
xchg
or
or
adc
adc
in
fdivr
aam
int3
rclb
movsb
call
stc
insb
lahf
push
pop
lcall
push
dec
push
stc
dec
lahf
dec
inc
push
inc
leave
cmp
cmp
push
sub
and
and
adc
leave
or
or
dec
sar
les
leave
mov
dec
xchg
stc
nop
lahf
mov
jl
js
je
jo
insb
push
lcall
dec
push
stc
push
lahf
dec
dec
push
inc
leave
inc
ljmp
sbb
or
andb
lret
shl
stc
in
lahf
call
fdivr
fcoms
int3
lahf
enter
leave
mov
dec
mov
lods
mov
aad
add
roll
arpl
adc
push
sbb
sbb
xor
das
inc
xor
fisubl
cwtl
in
jno
loop
sbb
and
es
ss
and
and
and
sbb
jecxz
adc
push
jnp
arpl
push
pop
sbb
add
iret
mov
fmull
or
add
add
sub
xor
mov
negb
pop
pusha
mov
sbb
push
push
cmp
pop
sub
sub
sub
sub
lds
lret
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
xor
aas
rdpmc
adc
das
and
fnstenv
inc
cmp
inc
inc
inc
inc
dec
inc
push
inc
pop
add
inc
arpl
outsl
inc
jne
jnp
addb
inc
xchg
inc
xchg
inc
popf
inc
mov
inc
mov
mov
inc
leave
inc
iret
inc
aad
fildl
out
jmp
icebp
inc
testl
or
pop
pop
jl
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
or
adc
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
adc
or
sbb
pop
xor
and
and
push
and
ja
andb
and
mov
and
and
and
and
and
and
and
and
cmp
and
and
jb
jp
mov
xchg
and
and
and
and
and
and
and
and
ss
sub
sub
push
and
and
and
and
and
and
and
and
aaa
test
cmp
outsb
movsl
jne
jnp
test
cmpsl
movsl
lods
movsl
shlb
test
adc
sub
inc
movsl
push
movsl
pop
movsl
movsl
push
jae
jns
jg
test
mov
movsl
fisubl
hlt
movsl
stc
cmp
test
sbb
cmpsl
movsl
inc
movsl
inc
movsl
dec
movsl
pop
movsl
pop
movsl
movsw
jno
ja
jle
mov
cmpsb
movsl
scas
movsl
mov
movsl
fsubl
add
push
inc
sub
cs
inc
lds
pop
les
mov
xchg
inc
sahf
inc
movsl
inc
mov
mov
movl
testb
cmp
cld
sub
jl
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movlps
cmp
gs
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
stos
loop
or
sbb
pop
out
pushl
hlt
in
inc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
aad
sub
dec
aam
xchg
pop
push
jno
jns
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
aad
sbb
scas
xor
les
inc
xchg
inc
mov
inc
rolb
inc
jecxz
cmc
ja
dec
and
sbb
int
xor
mov
dec
in
testl
enter
out
pop
or
adc
sbb
push
out
daa
subl
ret
in
in
in
in
aad
xor
fnstcw
mov
inc
and
dec
call
sub
sub
sub
sub
or
push
das
pop
and
je
jnp
andl
daa
xchg
inc
sbb
xchg
shlb
in
in
in
std
add
dec
inc
pop
lds
jno
jns
mov
jmp
xor
sbb
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
or
js
push
push
cmp
sub
and
dec
js
push
jb
jle
mov
mov
mov
shll
and
and
and
and
and
and
cmp
out
out
in
std
xchg
mov
mov
cmp
mov
pop
or
mov
mov
mov
mov
int
shll
fldenv
fbld
in
ljmp
and
pop
mov
popf
movsl
test
xchg
mov
loopne
repnz
aad
cmp
xchg
or
aam
xchg
mov
adc
adc
adc
sbb
cmp
dec
pop
js
imul
and
and
mov
loop
cli
daa
adc
cmp
pusha
out
out
in
in
in
in
in
aad
and
inc
aam
xchg
push
push
pop
adc
adc
adc
adc
adc
adc
add
daa
out
cmp
inc
sub
push
and
imul
shll
jmp
repnz
sbb
add
or
adc
and
xor
or
data16
sub
mov
mov
xchg
sub
sub
jb
in
cmpsb
dec
ret
pop
ret
in
cmp
sub
lcall
pushl
in
inc
lret
enter
sub
cmp
int3
mov
push
dec
adc
cmp
popa
adc
xchg
xchg
ftst
test
repz
adc
adc
aam
xchg
mov
mov
or
sub
xor
jns
aaa
mov
cmp
cmp
cmp
cmp
ss
adc
cmp
incl
add
enter
lds
inc
inc
les
xchg
mov
adc
jo
fcoml
xchg
jl
sbb
cmp
cmp
ds
or
js
imul
lcall
daa
or
dec
loopne
cmc
arpl
inc
movsb
les
cwtl
add
cmp
jge
xchg
sbb
or
cmp
sub
cs
aaa
sbb
ss
push
jne
jns
cltd
movsl
ret
movsl
jecxz
in
cmp
push
loope
loopne
out
out
test
sti
ds
imul
fs
adc
jge
dec
pop
sub
out
and
and
aas
test
inc
mov
jb
js
jle
decl
lahf
xchg
add
pop
sub
xchg
pushf
outsl
aad
xor
adc
bound
shl
mul
adc
pop
aad
xor
aas
and
lds
lds
pop
les
inc
int3
inc
repz
pop
xor
dec
insl
sub
inc
leave
push
sbb
andl
aam
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sbb
xor
insl
fldenv
inc
bound
jae
mov
sub
sub
sub
sub
andl
xor
movsl
mov
movsl
call
xor
dec
inc
pop
lds
jge
mov
sbb
sub
mov
sbb
cmp
sub
ja
enter
sub
sub
sub
sub
sub
or
adc
and
in
cmpsl
cmp
push
movsl
jmp
pop
xchg
adc
and
rolb
lret
cmp
jecxz,pt
imul
adc
push
pop
cmp
insl
jp
add
inc
ret
leave
pop
adc
sub
cmp
imul
fistl
sbb
adc
dec
dec
lods
data16
js
test
xchg
sub
scas
and
xchg
mov
pop
nop
fdivrl
pop
aad
or
sub
sub
sti
movb
push
aas
adc
and
jl
sbb
cmp
aas
cld
jg
push
pop
nop
add
repz
xchg
shlb
cltd
test
cmp
xor
adc
or
lcall
xor
cmp
push
pop
and
outsb
and
jmp
daa
add
xchg
sbb
int
xchg
inc
push
dec
lcall
repz
decb
mov
pop
inc
repnz
push
xor
ljmp
jnp
inc
sub
lea
fsubs
pop
dec
jmp
outsl
scas
inc
mov
mov
ss
xchg
scas
inc
adc
aam
xchg
push
push
sbb
or
leave
movsl
das
pop
and
jo
subl
fwait
xchg
mov
ret
adc
adc
adc
adc
sbb
cmp
dec
adc
sbb
fwait
mov
or
add
repz
cld
xor
mov
and
jmp
cmp
out
aad
cmp
adc
fidivrl
adc
sbb
sub
sub
and
and
and
and
and
cmp
lods
adc
arpl
jne
andl
movsl
mov
sbb
sbb
inc
xor
cmp
inc
les
pusha
inc
inc
mov
inc
ret
inc
roll
in
in
cli
adc
adc
dec
jp
inc
cmpsl
test
leave
push
in
cli
dec
lahf
pusha
xlat
call
pop
notb
int3
jl
sbb
cmp
cmp
cmp
cmp
xor
adc
or
cmp
jg
test
pushf
in
in
not
fsubl
sbb
testl
inc
inc
mov
inc
jmp
shrb
xor
pop
and
jp
sub
and
mov
or
sub
pushf
jae
mov
sbb
or
mov
int
ficomps
cmp
adc
or
sti
lea
xchg
pop
fwait
loopne
cld
mov
xor
movsl
mov
das
sub
cmp
dec
dec
ret
pop
and
push
aam
xchg
jp
xchg
adc
push
ss
sbb
das
mov
xchg
dec
sbb
movb
inc
xlat
dec
loope
adc
addb
sbb
cmp
aad
pop
lret
in
in
in
in
in
in
hlt
out
std
repnz
aas
add
cmp
popa
leave
mov
jge
addb
dec
rcrb
push
add
scas
adc
pop
aam
bound
adc
adc
iret
ret
xchg
xlat
aad
xor
out
push
fcoml
cmpb
dec
iret
mov
sub
xchg
or
adc
loopne
out
out
in
in
in
in
mov
xlat
pop
leave
lock
testl
mov
cmp
inc
mov
push
jle
inc
mov
shrl
fldcw
in
ljmp
xchg
or
add
adc
aam
xchg
inc
push
dec
adc
adc
adc
adc
adc
adc
adc
scas
cmp
cmp
cmp
cmp
fsubrs
in
mov
aad
adc
jb
sub
in
in
in
in
in
in
std
xchg
sub
sbb
mov
sub
sub
sub
in
in
or
pushf
pop
mov
pop
pop
inc
and
xchg
jl
leave
mov
jg
fcoms
add
test
sbb
out
mov
outsb
daa
jp
lea
les
dec
lret
adc
in
stc
daa
or
cmp
loope
loopne
mulb
pop
scas
cmp
cmp
cmp
aas
imul
and
and
sbb
sub
cmp
dec
sub
and
cmpsl
and
and
out
in
ljmp
or
mov
xor
and
jle
outsl
mov
xchg
push
mov
mov
in
in
rorb
cmp
add
cmp
in
in
negb
mov
mov
xchg
adc
adc
adc
adc
adc
adc
cmp
xchg
sbb
out
divb
mov
cmp
cmp
cmp
cmp
cmp
cmp
ds
or
sub
jo
subb
and
mov
in
in
in
idiv
mov
subb
pop
loop
sbb
and
cmp
mov
xchg
cltd
outsl
mov
mov
inc
std
pop
add
push
imul
das
push
dec
inc
leave
popf
jnp
les
add
pushf
push
mov
cmp
dec
aas
pop
imul
imul
mov
sbb
lret
in
filds
in
cwtl
push
adc
push
dec
sbb
sbb
xchg
enter
mov
jge
enter
sbb
sub
xor
cmp
cmp
cmp
aas
jbe
fcomip
cwtl
pop
or
cmp
aas
clc
jnp
or
dec
dec
xchg
pop
outsb
push
je
jnp
mov
xchg
aas
sub
adc
or
cmp
jne
pop
dec
outsl
sbb
sub
and
sub
mov
or
sbb
cmp
sub
push
mov
mov
fmull
mov
int3
gs
dec
sti
adc
push
dec
sbb
sbb
les
cmp
mov
enter
sub
sub
add
movsl
fstps
add
sbb
sbb
push
dec
cmp
movsl
mov
mov
out
loop
or
sub
push
jo
fwait
and
or
lods
call
cmp
insl
scas
and
ds
inc
adc
mov
stos
pop
jne
sub
sub
sub
sub
sub
stos
rcll
test
dec
repz
xchg
jmp
xchg
or
andl
loopne
out
std
fsubrl
push
mov
aaa
sbb
cmp
cmp
cmp
cmp
cmp
cmp
aas
mov
filds
cmp
inc
mov
add
lret
and
and
leave
daa
aam
fimull
fdivl
xor
pop
cmp
dec
cmc
aam
insb
xchg
je
mov
mov
and
and
adc
shrb
jl
pop
cmp
jae,pt
scas
andl
pushf
mul
mov
mov
mov
jmp
adc
sub
int3
imul
sbb
leave
mov
sbb
lods
cmp
in
in
in
jne
imul
sbb
inc
pop
xor
aam
fisubs
xchg
xor
cmp
xor
jae
xor
and
cltd
xor
ret
add
aaa
psraw
cli
xor
pusha
mov
jecxz
in
std
lcall
mov
fcoml
adc
or
iret
or
push
daa
push
dec
pop
and
das
hlt
test
xchg
or
mov
aad
jmp
add
nop
adc
fwait
and
xor
xchg
push
sbb
push
movsl
xchg
movsl
pushf
movsl
mov
pop
cmp
push
adc
outsl
scas
mov
das
xchg
lcall
call
ja
or
dec
cmp
mov
lds
lret
jo
testb
fldenv
mov
stc
das
and
mov
sbb
dec
lds
jg
xchg
sub
mov
imul
loope
incb
aad
jl
sbb
ds
or
daa
fsubs
leave
or
popf
dec
aaa
pop
sti
push
sbb
mov
lcall
enter
frstor
add
pop
aam
xor
inc
pushl
jne
jl
and
stos
in
in
fdivrs
mov
and
and
repz
loope
and
pop
mov
movsl
jbe
mov
mov
mov
add
or
mov
inc
xchg
push
stos
imull
dec
lods
xchg
mov
jecxz
mov
nop
and
cmpl
dec
and
pop
imull
inc
cmpsb
inc
lods
dec
mov
pop
decl
pop
nopl
das
push
lcall
mov
movsl
mov
test
aam
notb
dec
sbb
leave
jb
mov
adc
adc
adc
adc
add
cmp
jmp
push
sbbb
insb
push
jg
mov
aas
adc
outsl
pop
cmc
jnp
mov
inc
stos
dec
or
xchg
nop
insl
faddl
jo
or
stc
popf
lods
nop
adc
sub
xorl
leave
scas
cmp
fimull
push
push
notl
xchg
xor
pushf
cs
inc
cmp
sarl
cmc
mov
mov
inc
cmp
pusha
cld
pop
mov
xchg
aaa
fcos
movsl
push
inc
mov
mov
cld
mov
and
push
imul
cmpl
pushf
iret
aas
out
sub
xor
lods
push
mov
cld
sbbl
lret
aas
aam
loope
adc
imul
pop
xchg
sub
xor
repz
push
xchg
and
dec
xor
mov
popa
cmp
mov
enter
cltd
pop
cmp
xchg
outsl
pop
jno
xchg
and
xor
lds
push
les
fs
jae
js
inc
xchg
dec
xchg
xchg
adc
sub
pop
lea
xchg
sbb
aas
lret
cmp
in
in
in
stos
addr16
dec
jnp
pop
outsl
xchg
les
ja
jge
xchg
mov
sub
cmp
es
inc
lds
push
les
jge
popl
mov
or
psraw
loopne
imull
js
cmc
dec
or
scas
sub
sub
add
movsl
out
mov
dec
fldcw
mov
movsl
outsb
movsl
ja
movsl
lcall
rcl
add
adc
sti
sbb
aaa
cmpsb
inc
pop
push
or
push
xor
mov
push
inc
xchg
rorl
cmp
icebp
addr16
or
mov
in
dec
sbb
xor
mov
icebp
arpl
dec
sbb
cmp
insb
popa
dec
jp
vpsubusb
xor
arpl
hlt
shrb
in
xbegin
adc
or
loopne
jmp
repz
testl
inc
pop
xchg
dec
popf
pop
or
subl
cld
sbb
cmp
or
insb
dec
js
push
scas
adc
xchg
lret
pop
frstor
adc
pop
inc
inc
dec
les
jl
and
jae
in
jmp
jg
ss
inc
cmp
push
dec
fdiv
gs
cmp
aas
mov
in
xchg
leave
stc
sub
or
aaa
jp
xchg
lahf
mov
xlat
hlt
inc
decl
cmp
and
sub
cmp
inc
das
push
insl
and
imul
inc
sbb
fwait
inc
lods
inc
mov
inc
repz
adc
jo
lds
push
les
js
test
pop
pushf
daa
movsl
daa
stos
daa
mov
fcomip
and
push
out
repnz
movsl
dec
adc
sbb
std
cmp
xchg
push
pop
les
xchg
xchg
daa
movsl
daa
lods
daa
mov
cmp
cmp
cmp
aas
divl
lret
loop
and
lds
dec
xchg
add
xchg
xchg
cmp
mov
aam
loopne
jmp
es
sbb
add
sbb
stc
test
insl
xchg
mov
lret
test
cld
xchg
fdivs
pop
dec
das
mov
sub
sub
pop
lahf
insl
sub
mov
cmpsl
xchg
les
lret
addr16
fiaddl
out
popf
jmp
or
leave
and
push
dec
sub
les
insl
xchg
hlt
stos
pop
lods
sarl
fldenv
in
cld
repz
and
xor
pop
push
mov
cmp
dec
or
in
jmp
xlat
add
sbb
xor
dec
and
and
movsl
js
xchg
push
mov
and
cli
sub
xor
cs
int
jnp
fwait
daa
mov
dec
lods
int3
loope
test
sub
add
fnstcw
mov
jae
xor
movsb
and
movsl
cli
nop
sub
dec
js
imul
mov
popf
fildll
in
loope
add
xor
cmp
xchg
aaa
movsb
imul
dec
test
aas
adc
sbb
popf
in
push
popa
pop
outsb
aas
jne
mov
fdivl
aas
enter
shl
fnsetpm(287
loope
jmp
cmp
adc
fdivl
sbb
cmp
aas
bound
in
in
in
in
in
stc
aam
lock
adc
sbb
push
or
sub
jns
xorl
loope
loopne
out
out
popa
sbb
aam
xchg
adc
adc
adc
aam
fdivp
cld
push
cltd
popa
lcall
lahf
pop
jb
and
popf
mov
shrb
cmp
jmp
ds
mov
xchg
mov
adcl
rolb
in
enter
fnstcw
enter
nop
jecxz
mov
aam
popf
adc
adc
adc
adc
mov
cmc
cmp
lds
pop
sub
daa
jecxz
inc
loop
dec
testb
pop
out
aad
inc
ficoml
xor
xchg
jecxz
add
push
pop
adc
out
cld
pop
pop
mov
cmp
clc
or
sbb
jmp
inc
cmp
cmp
nop
cmp
fbld
cmp
aas
loopne
inc
inc
pop
mov
stc
inc
lock
jno
xchg
cmp
lods
mov
mov
cmp
es
sub
xor
ds
sbbl
test
and
sbb
and
es
add
movsl
aam
lds
adc
adc
bound
xor
mov
and
xor
stos
and
test
aaa
adc
sbb
xor
dec
pop
adc
test
lcall
inc
fsubl
loope
and
repnz
xor
out
in
mulb
test
scas
and
in
fidivrs
push
cmc
testb
fs
inc
jb
testl
loope
and
cld
aad
cmp
nop
aaa
sbb
dec
cmp
push
sub
imul
and
cmc
lea
int
jnp
cmpsl
push
shlb
testb
jae
loope
jno
addl
sti
push
mov
ret
adc
mov
icebp
pop
inc
dec
cmpsl
das
int3
pop
pop
divl
jns
pop
les
movsl
rolb
inc
dec
test
je
dec
xchg
adc
adc
adc
sbb
sbb
pop
add
scas
mov
inc
fistps
xor
dec
rclb
dec
ds
jae
push
js
orl
cmp
fwait
xor
xor
aaa
ja
andl
pop
add
inc
cld
mov
gs
aas
cwtl
imul
inc
int
inc
fimull
daa
ljmp
outsl
arpl
lea
stos
scas
popf
mov
xchg
popf
idiv
fsubl
ljmp
add
jnp
jecxz
sub
out
jmp
push
mov
dec
push
pop
cmpsl
daa
mov
adc
loope
or
or
jns,pt
sub
mov
icebp
mov
adc
lcall
jmp
dec
or
push
leave
ss
sub
icebp
mov
cwtl
sub
mov
xor
movsl
fisubs
pop
pop
push
daa
cmp
xchg
mov
ret
mov
in
in
icebp
pop
pop
or
sbb
push
aas
std
movsl
outsl
nop
jl
pop
cltd
mov
mov
icebp
adcl
cmp
sbb
sub
aad
enter
das
xor
hlt
rcrb
and
and
and
out
loope
hlt
insl
lcall
pop
and
adc
daa
jns
xor
pop
or
lods
pop
mov
ds
aas
xor
fidivs
cmp
int
jp
mov
push
pop
andl
add
mov
ret
xlat
cmp
aas
repz
cmp
pop
lods
lret
xor
mov
sahf
insb
lret
sub
cmpsl
and
in
in
shrb
xor
sbb
or
icebp
fstps
in
jae
rolb
xor
mov
insl
dec
stos
mov
jae
test
mov
jae
xchg
fadds
pop
std
sbb
aaa
roll
pop
inc
arpl
push
shlb
and
sbb
mov
mov
sub
fisubrl
out
rolb
or
test
add
jmp
cmp
addr16
cmpsl
int3
mov
std
repnz
stc
arpl
idivl
ss
dec
inc
dec
int3
sub
addl
test
and
arpl
negb
or
js
rol
mov
movsl
into
sbb
and
sub
sub
int
daa
movsl
sbbl
sbbb
lahf
jae
in
xchg
aad
divb
jo
jbe
test
mov
mov
pop
or
stos
adc
sbb
lret
lds
insb
sub
aad
cmp
sbb
rclb
shrl
fstps
jg
scas
iret
int
xchg
jge
sbb
test
int
cmp
loop
or
adc
sbb
test
subl
fdivrs
adc
adc
cmp
fs
jecxz
jb
and
sub
xchg
inc
rcrb
push
sbb
jbe
jg
test
arpl
mov
lods
daa
subb
mov
mov
xchg
sbb
sub
pop
mov
pop
add
sub
daa
fwait
nop
sbbl
leave
xchg
xchg
sbb
xchg
loop
aas
adc
fisttps
ljmp
popa
mov
daa
xchg
inc
jg
cmpsb
imul
fmulp
loopne
and
or
negb
cmp
aam
pop
adc
adc
int
sub
xlat
xchg
fistps
add
mov
dec
dec
jg
sub
aam
adc
jno
and
adc
mov
hlt
or
and
push
pushl
pop
dec
inc
pop
imul
int3
push
push
les
cmp
and
repz
in
lahf
repz
and
inc
adcl
jns
cld
insl
fcoml
mov
ds
imul
daa
lds
icebp
hlt
aas
cmp
xor
lds
int3
pop
pop
jp
aam
cmpsl
adc
aam
cld
sbb
cmp
cld
daa
mov
dec
or
mov
fdivr
in
cmp
outsb
fdiv
cmp
imul
dec
dec
leave
mov
cmp
movsl
mov
movsl
ficoml
mov
testb
push
and
bound
imul
scas
and
mov
rorb
ds
pop
dec
pop
pop
jle
jae
push
mov
adc
das
enter
out
repnz
das
dec
leave
adc
xor
stc
pop
dec
daa
lahf
int3
pop
sbb
je
cmp
sbb
sarl
fadds
sbb
inc
ds
and
in
in
rorb
push
add
xchg
popa
int
jl
mov
mov
scas
xchg
aas
test
int
xlat
mov
jmp
lock
mov
insb
pop
shrl
pop
cmp
imul
insl
and
icebp
add
sbb
dec
adc
popf
loopne
and
arpl
inc
rol
pop
xchg
jl
pop
aas
mov
int3
dec
imul
stos
mov
sub
test
pop
cltd
lods
sub
jnp
in
lcall
mov
cmpsl
adc
and
inc
dec
or
pop
mov
xchg
mov
ja
jg
stc
jnp
push
gs
int
jnp
xor
leave
dec
sub
dec
sbb
nop
xchg
imul
notl
or
int
or
xchg
fcmovu
rolb
jmp
pop
and
rolb
mov
movsl
mov
enter
or
cs
xor
out
negb
adc
popf
in
hlt
mov
leave
aas
rcr
push
cmp
daa
cmp
movsl
ret
jne
jnp
xor
iret
xor
adc
xchg
sub
sbb
sub
xchg
push
and
gs
inc
dec
repz
cli
pop
or
adc
add
push
fbld
test
jnp
mov
aas
lcall
hlt
sub
dec
and
jae
jns
andb
lcall
inc
sub
int3
das
pop
push
xor
daa
das
loopne
jmp
sub
insl
daa
jne
jle
stc
nop
mov
cwtl
sub
sub
sub
sub
xchg
or
loopne
out
cld
sub
jb
int
shl
nop
lcall
negb
sbb
sbb
inc
and
push
lahf
daa
movsb
dec
add
enter
loope
gs
lcall
or
int
mov
mov
xchg
xlat
aad
ficomps
sbb
shlb
dec
cmp
push
inc
sahf
add
dec
loope
scas
or
adc
sbb
daa
sub
scas
add
xchg
mov
sbb
sub
xchg
xchg
cmc
inc
xchg
dec
push
jae
hlt
shlb
fists
sbb
push
dec
jle
negl
xchg
in
adc
adc
or
add
fmull
push
jnp
insb
push
jmp
test
pop
rep
adc
sub
push
cmp
push
inc
gs
js
mov
mov
es
es
xor
rolb
or
sub
jbe
addr16
mov
adc
pop
cmp
cmp
gs
imul
stc
xlat
dec
xchg
cmpsl
pop
scas
lret
mov
or
sbb
mov
cmpsl
jecxz
push
loopne
idiv
das
cmp
inc
ja
decl
dec
jnp
jle
lcall
call
leave
js
pop
wrmsr
sbb
adcl
adc
imul
and
movsl
fwait
pushf
jo
jns
orb
sub
sub
stos
inc
xchg
add
and
outsl
scas
fxch
scas
pop
push
leave
outsl
leave
fidivrl
clc
daa
add
inc
sub
push
inc
inc
pop
les
insl
addr16
div
mov
out
out
imulb
mov
sarl
mov
sbb
sub
das
jge
sub
mov
mov
testb
sbb
push
orl
or
jne
push
sbb
scas
mov
stc
sub
aas
xor
ds
push
outsl
int
xchg
push
test
and
sbb
jne
mov
adc
and
sub
fidivs
ja
imulb
adc
inc
cmp
dec
addr16
rorb
cmp
mov
loope
jns
mov
xchg
mov
cmp
repnz
icebp
sbb
and
nop
mov
stos
inc
and
fists
ljmp
sbb
pop
cmp
ds
in
sub
enter
shrb
pop
test
daa
jnp
scas
leave
test
pop
push
paddb
pop
dec
cltd
je
jns
insl
jnp
xchg
int3
add
mov
shll
ffree
dec
mov
xlat
stc
mov
test
and
mov
gs
hlt
adc
test
lret
cmp
sub
lahf
andb
mov
in
dec
test
pop
leave
cld
sub
push
aas
mov
cmp
xor
loop
cld
pop
mov
out
in
in
cltd
cmpl
imul
rcll
push
inc
or
aaa
xchg
cli
pushf
dec
ret
fildll
fsts
dec
pop
xchg
das
cmp
pusha
insb
fistpll
jno
daa
in
notl
xchg
iret
dec
fmul
aas
push
jno
and
scas
mov
push
les
jg
mov
pop
test
mov
repz
adc
or
loope
test
cmp
cmp
add
lret
stc
xlat
movsl
repnz
or
dec
xlat
in
xchg
inc
pop
xchg
pop
lea
leave
jp
lret
nop
stos
leave
les
imul
inc
fxch
push
jae
push
jbe
mov
lahf
movsl
movsb
movsl
stos
movsl
mov
sbb
pop
mov
xor
jmp
inc
test
nop
adc
stos
or
xchg
pop
insl
cmc
outsb
sub
jnp
lods
inc
pop
jne
daa
mov
adc
dec
imul
dec
pop
pop
dec
jno
scas
ror
lea
imul
sbb
insl
orb
or
sub
sub
gs
enter
rclb
mov
dec
jecxz
sub
xor
xchg
adc
pop
stos
jno
outsl
xchg
jns
pop
lods
lea
testl
xchg
jmp
or
and
xor
in
lds
push
adc
bound
filds
stos
stos
leave
xchg
shrl
loope
add
nop
jo
xor
imul
dec
push
nop
pop
sbb
test
rorl
arpl
fsubrl
mov
ja
das
sbb
imul
jg
mov
xchg
imul
pop
cmc
dec
pop
xchg
scas
jbe
test
sub
stos
aaa
and
lods
inc
dec
cmpsb
sub
cld
and
add
out
xor
mov
sub
inc
adc
js
jg
shl
mov
mov
mov
in
dec
testl
pop
adcl
adc
jo
aam
adcl
iret
adc
leave
adc
movsb
inc
dec
popa
rolb
pop
pushl
jl
adc
adc
mov
add
popa
push
cmpb
lahf
and
icebp
rorb
xor
cltd
dec
push
pop
mov
loopne
iret
cld
daa
cmovb
dec
mov
pushf
mov
lahf
push
pop
xchg
enter
cmp
dec
xchg
stc
adc
dec
mov
lcall
ret
jnp
push
aas
xor
inc
inc
in
pushf
xchg
jecxz
mov
jp
and
cwtl
mov
push
aam
xor
push
mov
or
xor
inc
pop
jno
ss
imul
dec
test
push
and
inc
cli
dec
popf
addr16
decb
lahf
xor
ds
stc
gs
pop
mov
inc
mov
arpl
mov
fstpl
in
and
push
lcall
aaa
add
ja
das
andb
mov
sub
mov
mov
rcrl
leave
push
ja
mov
mov
xor
popa
aas
enter
jmp
xchg
dec
pop
dec
and
test
sub
aad
aad
inc
mov
jb
leave
enter
mov
adc
xchg
mov
cmp
cmp
jmp
xor
mov
cmp
enter
xor
xchg
dec
mov
mov
add
inc
sub
cmp
nop
popa
sub
addr16
enter
xchg
mov
outsl
test
cmp
or
mov
cmp
ds
outsl
movl
and
xchg
xchg
daa
gs
xchg
jge
fstl
inc
lcall
adc
or
cmpl
filds
jbe
and
arpl
mov
fidivrs
xor
cmpsl
mov
cltd
shlb
sbb
mov
jl
inc
cmpsb
sub
shlb
cmp
outsl
mov
outsb
sub
cwtl
dec
ffreep
shll
push
and
cmp
ffreep
insl
jae
cmc
mov
inc
mov
jmp
pop
lds
rorb
xchg
addr16
dec
xor
movsl
pop
enter
push
or
xchg
imul
inc
out
cld
sarl
inc
jmp
add
fsubl
dec
aaa
mov
notb
push
loope
fucompp
cmp
ds
mov
adc
faddl
cmpsl
call
rcl
xchg
mov
mov
enter
and
push
pop
andb
add
cmp
xor
in
cmp
xchg
jmp
sbb
push
leave
in
in
fadds
sarb
lock
cli
cmp
mov
fdivl
dec
cld
pop
pushf
cli
mov
pop
pop
or
inc
lea
and
add
leave
fwait
aas
mov
xchg
test
fstps
outsl
jecxz
and
cmp
repz
test
loop
pop
cld
or
adc
inc
push
outsb
pop
jae
jge
orl
clc
add
sub
imul
xor
mov
les
lds
dec
or
mov
ja
subl
jnp
dec
dec
pop
aas
cltd
fdivl
pop
hlt
xchg
lcall
cmpsl
bswap
mov
test
enter
dec
fildll
cwtl
arpl
imul
clc
jo
cmp
xor
sub
hlt
xchg
mov
ljmp
sub
sti
leave
jae
outsl
popl
arpl
mov
test
xchg
or
stos
xchg
les
daa
enter
pop
aaa
xor
loop
test
fxch
sub
lret
out
in
std
fisubrs
dec
mov
jmp
mov
out
ljmp
stc
dec
das
fiadds
cmp
xor
pop
sub
cmp
int
nop
mov
into
xchg
aam
das
fisubrs
loop
push
cmp
addr16
xchg
jae
lahf
adc
cmpl
lods
add
mov
pop
push
xor
insb
fsubl
stc
ljmp
daa
movsl
dec
xchg
push
sub
rorl
xchg
int
repz
mov
mov
out
movsl
ret
xchg
leave
pop
in
or
dec
lcall
lods
inc
les
jae
imul
cmp
xlat
lea
and
dec
lock
push
adc
lahf
andl
stos
mov
jg
and
stos
push
inc
lret
pop
imul
hlt
orb
jg
cwtl
aaa
in
mulb
lods
jmp
mov
mov
hlt
jno
add
shlb
push
xor
imul
icebp
ss
aaa
gs
aad
stos
adc
cld
jno
pop
cld
arpl
loop
testl
shl
mov
xchg
pop
pop
jae
fs
lods
js
jl
push
enter
rcrb
loopne
and
cmp
lcall
cmc
sbb
sub
mov
enter
xchg
xchg
sbb
push
sbb
cmp
rolb
lcall
loopnew
hlt
es
loopne
les
jg
xor
lcall
hlt
aam
fcoml
adc
adc
lcall
dec
adc
dec
leave
sbb
insl
and
jge
sub
dec
rcrb
inc
test
dec
adc
jg
pop
imul
fld
push
je
js
pop
jecxz
aas
test
jmp
xchg
daa
cwtl
inc
or
les
sbb
mov
inc
jmp
fcoms
fcompl
mov
and
mov
out
lock
and
stos
inc
cmp
shr
sbb
sbb
push
hlt
and
ja
sbb
aas
xor
pop
cld
cmp
ja
inc
nop
dec
rol
push
cmp
and
out
add
iret
int
ja
loope
cld
push
sub
mull
mov
and
adc
pusha
sub
push
dec
push
int3
mov
mov
daa
shlb
dec
xchg
int3
sbb
aam
fsubrs
fsubl
push
xchg
in
cmp
aas
sub
flds
adc
mov
inc
jecxz
pusha
jecxz
or
test
sbb
aad
sub
fnstenv
mov
ftst
repz
sub
orl
jle
ret
ja
adc
adc
mov
movsl
insb
sarb
aad
mov
dec
adc
ss
stc
lds
jg
sub
push
std
cld
mov
xchg
push
cmp
loope
arpl
sbb
test
into
add
mov
adc
shll
sub
dec
and
sbb
outsb
fiadds
pushf
jnp
mov
lret
ja
iret
dec
fcompl
dec
call
add
in
add
mov
cld
lea
pop
mov
leave
mov
mov
adc
fdivl
dec
aas
dec
imul
imul
cmp
mov
ds
or
fisubrs
ljmp
pop
outsb
pop
add
dec
and
push
push
mov
int
jae
push
in
pop
pop
pop
cld
addr16
adc
cmp
inc
mov
js
jge
xorl
mov
or
jmp
and
fisttps
and
ja
jle
mov
fstpl
pop
in
hlt
adc
jnp
mov
jbe
sarb
hlt
sarb
in
mov
daa
or
adc
das
arpl
xchg
xchg
mov
xor
mov
adc
mov
sbb
dec
jecxz
cld
cltd
sub
leave
int3
jnp
repnz
dec
mov
push
mov
xchg
xchg
outsb
pop
imul
call
fwait
jo
fwait
add
xor
push
cmp
xchg
iret
sbb
fldt
out
sub
or
scas
cmp
hlt
push
shlb
mov
jmp
movsl
mov
cmc
arpl
sbbb
xchg
mov
icebp
sbb
or
dec
ja
hlt
pop
cmp
stos
and
mov
test
stc
mov
das
insl
lds
push
sub
fs
out
enter
mov
std
dec
int
xchg
push
cmp
insl
popa
sarb
jg
aam
inc
neg
xchg
jge
leave
cld
jnp
and
dec
insb
fsubl
pop
pop
outsl
jae
push
nop
sbb
mov
sti
jmp
mov
incb
aad
pop
sbb
cwtl
sub
sub
cmp
cld
inc
mov
hlt
jb
loope
and
adc
sbb
dec
add
inc
aaa
pop
inc
rcll
cmp
scas
loopne
mov
mov
stos
dec
pop
enter
jg
lea
subl
sub
adc
xchg
movsl
movsb
test
fcompl
lock
add
xchg
xor
push
xchg
movsl
aaa
in
hlt
rcrb
loopne
xchg
sub
xchg
pop
xor
pop
imul
pop
enter
neg
pop
idivl
push
ds
xor
rclb
mov
in
imulb
sbb
pop
cmp
aaa
sub
pop
and
lret
mov
sarl
idivl
in
bound
out
adc
movsl
es
mov
xchg
mov
cld
add
sbb
das
sub
dec
insb
aas
adc
ret
stos
scas
mov
addb
adc
pop
pop
jne
inc
jnp
andb
dec
mov
cld
mov
sub
insb
aas
cmpsl
nop
add
push
add
jne
cmp
imul
jo
jecxz
mov
cld
cmpb
lahf
stos
ret
and
sbb
lods
icebp
jnp
or
leave
and
sbb
dec
xchg
dec
pop
dec
pop
add
cmc
js
jle
sub
pushf
cld
mov
out
lret
popa
xchg
adc
push
inc
and
das
imul
lahf
ds
or
pop
sbb
setg
sbb
push
inc
pop
int3
insb
nop
cltd
cmpl
enter
icebp
pop
popa
add
adc
pop
lods
lahf
push
outsb
inc
mull
repz
int
aad
paddb
or
negb
lds
lds
imul
popa
and
push
jns
jg
pushf
dec
lods
xchg
jecxz
lcall
popa
add
pop
inc
sbb
sbb
sbb
xor
inc
xor
hlt
jb
mov
dec
add
cmpsl
std
and
dec
xor
negb
leave
notb
mov
or
push
cmp
mov
leave
cs
xor
in
in
idivb
xchg
out
daa
jl
push
mov
loopne
jmp
mov
xchg
pop
je
pop
xchg
pop
xchg
les
mov
push
mov
aad
fmuls
adc
lret
xor
out
cld
js
and
popf
in
cld
stc
stos
mov
leave
xor
cmp
inc
sbb
xchg
lods
fistpll
push
pop
pop
out
sub
sub
scas
pop
test
daa
negb
rolb
rdpmc
ficoms
xor
daa
out
push
xorl
scas
mov
hlt
movl
pop
pop
movsl
mov
lock
push
arpl
or
mov
mov
jecxz
std
sbb
in
stos
pop
sub
loopne
fldenv
ss
mov
lea
repz
xlat
movsl
ljmp
push
or
jp
lds
enter
cld
in
mov
mov
rorl
inc
rorl
icebp
mov
pop
mov
and
aaa
and
pushf
loopne
fisttps
sbb
xchg
loopne
cld
mov
mov
mov
or
mov
jecxz
or
push
sbb
aam
xchg
cmp
scas
or
orb
movsl
xchg
xchg
sahf
arpl
mov
xor
pop
in
adc
jmp
sub
dec
aas
xchg
test
loope
adc
mov
sbb
aam
leave
gs
cmp
scas
sbb
scas
shll
outsb
pop
mov
xor
mov
ja
int
xor
cld
movsb
sub
dec
fld
loop
lock
fbld
push
xor
or
fldenv
loope
insl
add
cmp
pop
and
js
pop
inc
mov
test
mov
in
adc
sbbl
adc
push
subb
xchg
aas
lahf
xor
movsl
incl
inc
add
xchg
lret
fimuls
int
xchg
sub
xor
outsl
xor
or
cmc
jp
dec
fnstcw
cmp
push
cmp
fwait
sahf
jno
push
cld
nop
stos
jnp
ret
call
ss
add
add
adc
pop
sub
sbb
push
jnp
fists
add
and
leave
cmp
xchg
leave
in
incb
sub
int
mov
outsl
sub
aaa
push
fdivrl
insl
jg
jnp
add
adc
pcmpgtd
cld
mov
test
mov
sub
notl
dec
inc
sub
xor
push
add
insl
test
and
movnti
inc
testl
cmpsl
inc
xchg
jl
cmp
movsl
stos
movsl
mov
add
jmp
inc
xchg
add
sub
nop
sbb
jecxz
sub
std
aas
jmp
push
aam
xor
cmp
clc
pop
outsb
sub
out
xchg
mov
cmp
cmp
push
xor
jp
mov
xchg
ret
orl
mov
vmmcall
xor
int3
lret
jnp
decb
adc
je
cmc
mov
xor
or
arpl
push
xor
xor
push
out
js
flds
mov
fnstsw
cmp
xor
inc
out
hlt
outsb
sbb
mov
ficompl
pop
imul
dec
dec
xchg
les
jno
pop
adcb
mov
mov
aam
jne
call
popf
outsb
xor
divb
sbb
inc
and
push
in
in
hlt
mov
xchg
rolb
lahf
sub
dec
movntq
out
jnp
adc
cmp
inc
cmp
and
jbe
cmp
and
xchg
mov
xchg
arpl
cmp
fcompl
aas
loop
stc
call
mov
inc
das
sub
jl
stc
mov
mov
aam
int3
adc
adc
sbb
cmp
dec
flds
in
cld
lahf
sbb
rolb
and
push
xchg
pop
sub
test
mov
shll
cmpb
decl
dec
pop
pop
xchg
sub
inc
and
push
shrl
adc
cli
daa
add
pushf
sbb
inc
dec
les
dec
imul
inc
leave
jno
lea
pop
leave
xchg
pop
andl
jecxz
inc
add
aas
sbb
call
push
cmc
push
inc
dec
flds
sti
pop
daa
fs
leave
nop
dec
int
imul
dec
jmp
jecxz
incb
xchg
pop
shrb
jg
xchg
fisubrs
sbb
sub
xor
sub
dec
and
pop
loope
ja
hlt
scas
fsubrl
fnstsw
clc
inc
movl
pop
jns
aas
leave
and
xchg
enter
adc
and
in
sbb
pop
xchg
jg
and
or
in
addr16
loop
push
lcall
repz
rorb
jge
testb
add
sub
inc
das
addb
cltd
mov
aaa
and
out
pop
cld
xor
fwait
push
ds
fs
ljmp
lahf
add
scas
mov
leave
std
cmp
adc
mov
inc
in
cld
imul
xor
push
xlat
adc
stos
cmc
repnz
adc
stc
sub
mov
inc
das
xor
dec
jno
cmp
mulb
xor
push
out
add
xchg
repz
push
shlb
addl
movsl
adcb
mov
call
test
mov
jb
pop
or
aas
or
sub
mov
pop
jnp
lea
push
mov
lcall
outsb
stos
ljmp
and
cmpsl
in
and
mov
jnp
xchg
cld
ja
pop
clc
and
add
xchg
or
movsl
push
adc
outsb
dec
cmp
cmp
scas
cmp
pop
test
scas
int
pop
dec
jo
add
int3
stos
stc
leave
fidivrs
ljmp
cmp
jbe
sti
mulb
shrl
outsl
fsub
pop
ss
dec
mov
les
repnz
lea
lcall
fiadds
mov
int
cs
sub
push
jb
add
cmp
dec
mov
test
aas
rcr
push
cmp
ja
mov
pop
fs
xchg
dec
sbb
test
pop
enter
out
out
shlb
or
jae
xchg
movsl
fld
pushf
int3
mov
push
lahf
mov
pop
mov
jnp
sub
cmc
flds
pop
daa
stos
in
mull
stc
adc
sbb
jno
insl
mov
mov
pop
insl
xor
fcompl
mov
lds
sbb
aad
sti
adc
ret
movsl
aam
xchg
repz
dec
jle
mov
fists
cmp
hlt
cmp
fcoml
mov
loopne
in
mov
fmull
pushf
inc
mov
insb
fists
and
icebp
jl
insl
cmp
pop
stos
pop
jg
add
outsl
push
sbb
arpl
push
jnp
subl
stos
int
hlt
sbb
rorb
add
mov
lds
sbb
sub
inc
ds
das
std
ret
adc
lcall
mov
mov
push
ss
cmp
pop
or
jg
arpl
in
jge
flds
fsubs
sbb
push
stos
adc
push
mov
lock
pop
sbb
inc
insl
dec
jge
sub
mov
daa
nop
xchg
jg
and
fdivr
jl
adc
xor
nop
fmull
cwtl
ds
xor
lods
test
xchg
xchg
int
ror
cmp
jl
pop
jns
pop
pop
in
aam
push
and
lea
mov
stos
aaa
xchg
scas
sarb
or
cmpsl
sahf
cmp
lretw
and
cs
stos
aad
stos
imul
lds
stos
and
mov
popa
cmp
rcrb
ret
into
dec
fisttps
xor
fldl
notb
add
jl
fisttps
xchg
cmp
movsl
orl
mov
int
shr
xor
dec
pop
jnp
lret
rcr
mov
and
mov
in
out
paddusb
sar
aaa
cmp
jl
fwait
cld
pop
pop
in
add
dec
popa
lahf
cmp
pop
lods
ret
or
mov
pop
jno
leave
adc
dec
and
movsl
sbb
pop
in
dec
int
sub
pop
and
cmp
outsl
cmp
outsb
cwtl
pop
repnz
push
mov
imull
xchg
aam
stc
pop
addl
or
addr16
hlt
mov
and
je
aaa
inc
ret
jl
push
add
pop
mov
xor
pop
cmp
push
push
incl
pop
cmpsb
aaa
jp
cmp
aad
jg
inc
cmp
dec
or
rep
xchg
adcl
adc
out
jp
cmp
and
inc
imul
and
leave
out
stc
xlat
add
seta
negb
ja
loope
rorb
xor
mov
mov
cmpsl
movsb
rolb
inc
sub
xchg
jb
lret
mov
aas
fmull
dec
call
bound
pop
dec
aaa
dec
mov
bound
mov
mov
dec
jnp
push
xor
imul
loopne
aas
push
stos
xchg
xchg
out
mov
sti
sbb
push
mov
inc
movsl
cmc
jno
mov
or
lea
dec
add
dec
mov
in
adc
ss
push
pusha
ret
fwait
repz
dec
lcall
dec
sbb
imul
cmc
xchg
mov
jnp
aad
insl
inc
mov
nop
adc
adc
xor
mov
or
psraw
xchg
loop
hlt
adc
cltd
lods
jge
popa
sub
adc
mov
icebp
jp
cmp
jl
loope
pushf
push
mov
jge
or
outsl
mov
lcall
lahf
hlt
xor
sub
push
xchg
shrl
fistps
fs
out
xor
jl
cmpb
nop
notb
ja
negl
ret
dec
es
xor
dec
flds
in
imul
sahf
dec
or
in
dec
pop
add
mov
hlt
daa
pop
std
insl
sahf
subl
mov
call
daa
add
pop
dec
jae
dec
mov
arpl
ljmp
iret
dec
pushf
pop
mov
xlat
test
sbb
cmp
loop
mov
xor
cmp
faddl
daa
cmc
mov
leave
shll
jg
push
cmp
mov
loope
icebp
pop
popa
xchg
xchg
shlb
shlb
dec
icebp
sub
lea
movsl
inc
lea
enter
in
hlt
mov
mov
push
cmp
or
xchg
xchg
in
insb
fisubrs
sub
cmpsl
addr16
mov
adc
pop
addl
iret
mov
sbb
fs
ret
fnstenv
add
fimull
xor
rcrb
push
jecxz
xor
xor
ljmp
sub
js
mov
lods
outsb
pop
popa
adc
adc
sbb
pushf
sub
cmpsl
jmp
incl
add
xchg
jns
pushf
push
mov
cli
test
aas
movsb
imul
add
sub
cmp
in
mov
addr16
std
pushf
gs
add
pop
insl
push
sti
xor
mov
fucomp
jnp
cmp
pop
dec
pop
int
sbb
xor
enter
cwtl
dec
fidivs
mov
imul
dec
mov
adc
rorb
movsl
xchg
in
int
aaa
push
xor
pop
xchg
jae
push
mov
scas
lds
aas
push
imul
dec
frstor
rcrb
cmpsl
outsl
int3
jo
movsl
hlt
cltd
or
leave
int
cmpsl
out
fwait
cmp
xchg
jnp
arpl
jne
add
or
out
loopne
stc
xor
sub
adc
fidivrs
jno
lea
jle
insb
pop
mov
jns
mov
xchg
into
aas
sub
fidivrs
jo
fisttpll
lcall
xor
mov
adc
cmpsl
xchg
push
repz
pop
test
aam
mov
xchg
cmpsl
sub
cmpsb
pop
xor
inc
fimull
xchg
dec
sti
mov
pop
lcall
lcall
sbb
std
cmpsl
xchg
std
and
jae
push
mov
or
inc
faddl
ljmp
pop
aas
mov
mov
pop
movsl
mov
or
cmp
lcall
aam
or
loope
hlt
out
and
daa
movsb
aad
stc
adc
test
pop
lahf
jae
jg
pop
lds
iret
sbb
outsb
lcall
and
aaa
push
dec
mov
test
das
mov
test
lret
hlt
loopne
lret
sbb
lcall
mov
dec
sbb
xor
sub
sbb
andl
enter
pop
sti
adc
push
cmp
push
scas
aaa
push
xchg
ja
inc
rorl
int
ja
in
cld
adc
push
mov
fmull
sbb
or
fcoml
cmp
and
shlb
pop
lcall
daa
or
cmpsl
sbb
insb
sbb
test
xor
sub
or
ja
sub
sub
xchg
in
orl
inc
cmp
mov
inc
int3
xchg
xor
mov
test
cmp
add
lods
popa
xorl
jmp
daa
leave
dec
xor
out
mov
mov
loopne
daa
dec
sub
pusha
add
jecxz
ja,pt
cmpsl
hlt
mov
jno
mov
mov
sbb
adc
xor
push
nop
hlt
rolb
mov
test
mov
loope
or
sub
ds
dec
mov
inc
arpl
cld
push
cmp
lock
ja
addb
mov
fdivrs
loope
jns
test
adc
popf
push
insb
aas
and
movsl
xchg
xchg
xchg
sbb
aam
fisttpll
orb
adc
xchg
test
mov
imul
jle
xchg
aam
mov
mov
int
add
divl
sbb
out
negb
sub
daa
cmc
inc
gs
adc
push
inc
lahf
xlat
cmpsl
jne
jle
and
sbb
and
mov
dec
out
cmp
aas
adc
aas
repz
or
int
pop
sbb
adc
mov
pop
gs
iret
int
ja
in
cld
lds
in
fdivr
adc
sbb
clc
dec
dec
or
int
outsb
xchg
out
stos
rol
inc
movsb
dec
mov
pop
outsl
out
xor
dec
add
cltd
inc
in
mov
lcall
inc
mov
mov
movsl
xlat
dec
mov
or
nop
sbb
xor
mov
testb
in
cld
ret
aas
mov
cmc
daa
add
out
xlat
push
das
pop
dec
fadd
jne
jle
inc
xchg
lods
inc
leave
mov
pop
sbb
jo
dec
das
daa
mov
hlt
sbb
push
cmp
or
inc
leave
dec
xchg
sub
rclb
mov
xchg
and
test
sbb
inc
imul
sbb
dec
gs
repnz
outsb
cmp
pop
movsb
sarb
test
mov
in
insb
inc
mov
sub
jecxz
sub
xor
push
add
arpl
cmp
dec
mov
or
jecxz
mov
mov
rorb
movsl
bswap
imul
mov
or
imul
pop
lods
add
pop
and
push
xorl
pop
leave
mov
pop
xor
inc
cmp
and
add
push
push
mov
aas
lcall
xchg
xor
or
mov
lahf
mov
inc
insl
daa
jnp
sti
mov
outsl
or
sub
lahf
or
mov
sbbl
pop
pop
lahf
mov
sub
addr16
mov
scas
cmc
in
call
xor
cmc
clc
adc
stos
vpshlw
push
dec
daa
adc
dec
push
and
add
xor
pop
cmp
in
cmpsl
jg
dec
hlt
dec
pop
jae
arpl
in
cld
pusha
fimuls
or
js
jl
jns
dec
fistps
sub
daa
cwtl
daa
pushf
fs
popl
pop
in
adc
mov
inc
fdivl
or
adc
add
push
xor
sbb
pop
in
cld
sub
add
sti
cmp
std
enter
dec
daa
push
cmpsl
xor
fisubrs
das
cmp
cmp
movsl
testl
lea
pop
jnp
outsl
scas
sbbb
test
cmp
mov
mov
aam
nop
or
ja
daa
pusha
insb
sbb
push
sub
js
mov
add
orl
and
mov
jns
adc
adc
sbb
enter
inc
loopne
daa
call
dec
jae
cld
xchg
sub
xchg
pushf
pop
arpl
and
mov
add
lods
movsl
int3
nop
ror
jns
lahf
fsubrl
jmp
stos
imul
je
push
test
jg
popa
pop
mov
movsl
movsb
repnz
enter
in
aas
lock
inc
insb
fcoml
jl
jne
movsb
lcall
andl
add
sub
inc
push
out
gs
jno
pushf
jge
lods
xchg
jns
jl
call
adc
mov
inc
adcl
xchg
mov
dec
fcoml
fucomip
add
cmc
adc
icebp
and
std
and
dec
loope
arpl
jo
mov
loope
out
add
movsl
in
lahf
hlt
add
cmp
stos
or
xchg
je
jl
cmp
rcr
call
dec
cmp
mov
mov
int3
pop
cmpsl
int3
hlt
jnp
add
cmp
into
xchg
cmp
testb
movsl
shlb
sub
in
pop
ret
cld
jno
arpl
adc
mov
xor
sbb
insb
imul
jns
decl
dec
pop
hlt
and
xchg
xor
xor
mov
xchg
aam
aaa
call
inc
sbb
xor
mov
dec
test
xchg
test
movsb
sub
dec
ficomps
dec
icebp
cld
dec
add
loope
data16
xor
shlb
sub
movsl
xchg
xchg
pushf
sub
insb
mov
dec
fbld
hlt
pop
insl
add
notl
fsubl
and
sub
idivl
cmp
rcr
fs
je
rcrb
xchg
aam
movsb
adc
rcrb
in
addr16
idiv
add
sub
arpl
adc
insb
daa
js
pushf
out
lea
std
int3
xchg
jle
jge
lock
push
sbb
xchg
out
idivb
pop
in
pop
ja
in
in
hlt
xchg
lcall
mov
fdivl
aad
jmp
insb
push
outsl
aaa
push
adc
iret
mov
aad
dec
cmp
and
hlt
fs
je
jl
mov
les
shlb
xor
mov
icebp
inc
and
xchg
push
imul
xchg
lods
sbb
icebp
imul
mov
dec
pop
lea
pop
mov
ja
fs
shll
mov
dec
test
jl
ja
dec
jge
in
out
clc
adc
stc
and
ret
incb
fs
js
daa
stc
jne
test
add
stc
inc
cmp
xor
scas
pop
std
dec
loopne
stc
xor
push
dec
lods
imul
pop
push
cld
and
xor
push
xor
orl
xchg
daa
pushf
push
out
dec
aam
pop
sbb
clc
sbb
and
mov
test
xchg
pop
inc
int3
inc
ficoms
aaa
sti
in
xchg
inc
jns
xor
popa
popf
xchg
les
jmp
mov
pop
sub
mov
aas
pushf
pop
imul
jmp
pop
enter
push
and
addr16
sub
mov
out
sbb
xlat
je
pop
push
test
nop
pop
jns
inc
inc
inc
lock
or
dec
push
or
mov
cmp
mov
jae
push
pop
inc
mov
pop
int3
popa
arpl
add
adc
mov
outsl
popa
les
out
mov
mov
std
fsts
sarl
or
dec
mov
mov
mov
in
std
in
dec
hlt
jae
loop
std
sub
outsl
std
jl
dec
mov
pushf
mov
dec
mov
shrb
rcrb
int
xor
dec
daa
cmp
icebp
std
dec
pop
mov
push
dec
or
movsb
sub
out
adc
mov
xor
rorl
dec
out
out
mov
or
pushf
out
dec
lahf
sub
inc
push
sub
cmp
daa
test
mov
dec
loope
adc
cld
push
fcompl
dec
movsb
pop
test
enter
sub
inc
mov
std
dec
jo
nop
adc
fdivr
hlt
jnp
add
or
shrb
mov
and
xor
lcall
or
cmp
dec
loope
pusha
imul
add
leave
pop
mov
adc
dec
adc
imul
push
imul
pusha
jnp
push
xor
mov
mov
mov
aas
int3
dec
stos
sbb
hlt
sbb
call
dec
clc
xchg
xchg
icebp
mov
mov
xor
xchg
mov
xchg
jecxz
aaa
fisubl
insl
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
fmul
add
sbb
add
add
add
add
add
int3
add
int3
int3
add
aam
add
inc
adc
add
lcall
out
int3
add
add
add
aaa
inc
insb
imul
insb
insb
add
imul
xor
pop
ja
popa
jb
insl
inc
jns
je
insb
inc
xor
add
