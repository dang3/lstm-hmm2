lcall
call
jmp
push
lea
lea
push
push
mov
test
inc
add
dec
pop
pop
ret
nop
add
adc
dec
mov
add
dec
sub
idiv
decl
push
push
mov
push
xor
mov
mov
cmp
mov
mov
je
mov
cmp
ja
out
jne
mov
mov
mov
je
mov
mov
push
fs
sub
aas
mov
sti
aas
push
lea
or
push
pusha
icebp
ret
les
clc
in
mov
testb
lea
push
mov
inc
add
outsb
or
mov
inc
or
cmp
je
mov
mov
enter
and
adc
jne
inc
push
pop
push
inc
inc
fucomip
idivb
adc
shlb
add
insl
pop
xor
and
cmp
test
cmp
je
push
inc
pop
pop
pop
pop
push
or
mov
movsbl
or
mov
dec
mov
popa
insb
out
insl
outsb
pop
adc
push
or
fidivs
pusha
lods
xor
mov
sub
adc
lahf
std
lods
sti
loope
or
inc
jne
mov
cld
mov
cld
mov
insb
and
push
and
mov
leave
pushl
jg
mov
or
scas
not
dec
mov
cmp
jbe
call
fnsave
into
je
mov
test
je
cmp
je
cmp
fidivs
dec
push
mov
mov
and
vmovdqu
aad
adc
adc
clc
fidivs
fistpl
ja
ret
jae
sbb
sti
call
sbb
jge
lret
mov
shr
rep
mov
and
rep
xor
xchg
pop
or
movb
lds
fstpt
push
mov
mov
inc
or
push
outsl
and
mov
or
js
mov
cmc
fisttpll
cmp
jae
out
frstor
push
add
push
js
push
dec
divb
xor
push
dec
or
sub
lock
test
out
sub
stc
incl
sbb
aas
mov
and
mov
adc
je
test
jge
adcl
push
jb
into
ret
nop
lods
pop
mov
push
push
xchg
imul
in
notb
or
mov
mov
movsl
adc
mov
and
jno
adc
sahf
sbb
je
or
jmp
pusha
sar
sbb
aas
push
inc
push
push
enter
call
clc
sub
aas
iret
xor
push
es
jb
outsl
mov
push
addr16
pop
int3
adc
pop
sub
pop
pop
fucomi
or
ret
orps
leave
push
loopne
popa
ja
and
rep
lcall
mov
fdivrs
iret
cmp
das
leave
flds
aas
inc
cmp
addr16
pop
ret
test
rolb
popa
out
out
int
lret
imull
sahf
sbb
inc
popf
in
mov
loope
jo
and
sbb
hlt
mov
or
adc
std
add
mov
insb
add
imul
push
fistps
or
and
sbb
mov
scas
inc
cmp
aam
mov
sbb
xor
mov
fldt
fimuls
cmp
scas
xchg
ds
push
jecxz
decl
jmp
sti
or
clc
and
push
push
jle
incb
pop
cmp
pop
je
cmpl
lcall
dec
cs
pop
fldcw
or
mov
mov
pop
pop
sbb
add
mov
push
inc
loop
pop
or
lods
push
jo
cld
sbb
loop
loope
cmp
aaa
neg
dec
mov
js
sub
mov
mov
jmp
push
mov
mov
clc
push
inc
lea
add
and
icebp
mov
pop
sti
imul
and
cmp
inc
dec
or
cmova
ficomps
inc
cld
insb
enter
sub
je
mov
xor
xchg
out
sub
mov
pop
adcl
and
dec
pop
int
xchg
int3
xor
repz
jle
mov
bswap
outsb
pcmpeqw
or
mov
dec
in
jno
js
add
push
in
pop
jnp
push
cmpb
mov
pop
lea
mov
insb
pop
ret
pop
mov
pop
inc
scas
mov
addb
cmp
sarl
pushf
icebp
sbb
mov
dec
adc
loopne
pusha
pop
cmpsb
fildl
sbb
shlb
data16
je
sub
adc
and
mov
nop
cmpsb
loopne
cmp
js
pop
call
pop
je
iret
mov
popa
fnstenv
lea
push
movb
add
fldl
push
sbb
test
push
jnp
adc
inc
push
add
call
push
add
xor
add
jbe
or
inc
push
mov
outsb
pop
mov
add
cmp
fsubp
mov
sbb
repnz
adc
outsb
cmp
adc
sbb
mov
inc
pusha
push
push
push
psubusw
lcall
mov
ss
or
scas
fidivrs
jbe
je
dec
and
js
inc
and
mov
cmp
lahf
movsl
aas
clc
cld
inc
sub
xchg
loope
ja
mov
and
shll
and
sub
aas
mov
or
add
xchg
mov
mov
mov
ss
sbb
loop
xchg
lds
popa
fs
cmpsb
jmp
iret
pop
movsb
mov
push
pop
sub
or
xor
je
bound
xor
test
add
inc
jg
xchg
jne
divl
inc
or
enter
je
ljmp
imul
sar
mov
shr
add
mov
sub
shr
push
mov
repnz
lret
and
shr
cmp
dec
or
call
lock
push
or
icebp
imul
fsubl
call
lea
mov
mov
push
stc
fimull
xchg
and
jl
and
leave
fisubrs
ja
mov
push
cs
push
jae
mov
imul
adc
mov
jmp
scas
jne
insl
inc
test
jle
pop
lcall
add
add
mov
xor
mov
idivb
aam
negl
adc
add
adc
mov
mov
enter
pop
xor
arpl
popf
icebp
dec
mov
jns
cmpsb
jecxz
cmp
xchg
loopne
mov
loop
roll
and
dec
aaa
fwait
rorl
pop
stc
pusha
idivb
sbb
and
push
iret
lahf
or
ret
push
or
xchg
push
xchg
xor
mov
mov
inc
mov
popf
js
xor
into
cmp
cmp
enter
push
push
outsb
std
rcrl
setne
push
roll
ficomps
xor
push
or
dec
mov
sub
fiadds
dec
mov
imul
ja
xchg
dec
jo
call
dec
jecxz
dec
cmp
xchg
push
test
push
int3
inc
std
lods
jl
jne
lock
push
and
mov
ret
xor
xchg
mov
mov
or
mov
fisttpl
xchg
mov
pop
das
cmp
push
mov
imul
dec
cmp
mov
aas
mov
xchg
add
mov
pusha
inc
adc
test
jecxz
dec
mov
or
xor
rclb
jle
sub
cmpsl
int3
int
data16
push
push
jp
jl
mov
jmp
and
xor
inc
incb
push
in
sbb
xor
out
sarl
rcrl
xor
adc
mov
and
out
call
inc
inc
int3
js
imul
inc
push
cmp
push
push
push
adc
imull
icebp
inc
mov
insb
ja
or
jg
data16
fidivs
mov
loopne
push
mov
mov
mov
add
ret
cltd
push
es
xor
inc
and
rolb
cld
pushfw
push
xchg
cwtl
push
daa
nop
in
in
fistpl
jne
addl
mov
mov
mov
addr16
scas
lret
push
or
or
pop
xchg
pop
pop
flds
mov
adc
mov
xor
ret
mov
popa
iret
sbb
leave
jl
negb
mov
outsb
push
out
aam
mov
shr
pop
test
sbb
in
xchg
dec
cmp
cltd
scas
les
cmp
je
xor
sbb
insb
and
sbb
or
lock
sub
xor
xor
dec
cwtl
cmp
mov
or
mov
sub
out
imul
or
clc
ds
int
add
push
xchg
iret
lock
mov
push
or
push
std
lds
lret
icebp
push
jne
mov
bound
int3
cli
movsb
mov
fisubl
adc
lock
fcompl
sub
fcmovu
xchg
je
fisubrl
add
sub
mov
jo
mov
sbb
outsb
push
pop
push
push
cmpsb
mov
es
cmp
rorl
daa
fldl
pop
and
jmp
sub
jo
std
pop
adc
je
cmp
je
push
cmp
stos
cmc
pop
push
iret
mov
enter
lock
arpl
or
dec
loopne
and
in
int3
fists
in
add
mov
inc
push
xor
neg
stos
repz
or
mov
pop
sbb
loopne
sub
jb
ds
in
and
ret
fwait
mulb
xor
add
leave
mov
je
cmp
aam
int
dec
adc
in
mov
add
je
mov
sub
jno
fidivrl
sub
or
mov
lahf
mov
jecxz
int
addr16
dec
sbb
daa
xor
mov
or
cltd
or
mov
fdivp
sbb
cs
mov
pop
inc
out
pop
inc
or
in
jbe
hlt
mov
xchg
push
movb
xchg
mov
daa
cmp
and
mov
cwtl
push
lock
popa
and
sub
cs
insb
and
mov
aaa
mov
mov
ret
mov
or
dec
jl
cmp
shrl
add
sahf
mov
jo
popa
shrb
mov
inc
pop
or
cmp
ss
mov
je
loopne
sahf
sbb
cmp
cwtl
pop
dec
fs
xor
sbb
imul
xor
roll
xor
popa
xor
dec
mov
imul
pop
cmp
imul
adc
mov
adc
mov
mov
mov
xchg
bound
jle
and
shrl
imul
dec
data16
jo
push
add
stos
int
pop
pop
cmp
dec
rorl
mov
pop
mov
jge
or
mov
jb
cmp
mov
mov
out
cmp
push
scas
fsub
jge
aaa
imul
pop
out
or
xor
sub
bound
enter
add
sbbb
sbb
cwtl
xchg
sub
ficoms
outsb
aas
ss
movsb
cmp
add
das
test
shlb
lcall
inc
fimull
push
in
lret
push
lea
fnstsw
jle
fdivrl
push
push
pop
sahf
mov
fdivrl
loop
mov
xchg
pushf
dec
test
add
in
or
cwtl
js
mov
adc
lock
leave
xchg
or
clc
icebp
cwtl
popf
dec
into
insb
imul
or
jle
mov
test
push
sbb
jnp
cs
movsl
cmp
je
cmpb
pop
loopne
call
pusha
inc
pop
or
mov
or
fwait
scas
scas
sub
jl
xorb
add
xchg
push
cwtl
bound
pop
pop
andb
mov
push
iret
jnp
add
push
and
and
push
cmp
fs
xchg
inc
push
int3
push
jnp
mov
dec
sbb
inc
push
push
push
rcl
add
les
dec
ja
pop
add
fwait
cmp
push
lcall
outsl
add
inc
inc
shll
add
sbb
push
mov
mov
es
add
fwait
adc
and
and
or
or
pop
popa
les
daa
and
enter
cmp
cmp
inc
sbb
fs
pop
cwtl
push
das
push
insb
je
add
loope
xorb
cmp
jne
cmp
xor
adc
mov
pop
lods
icebp
loope
dec
push
dec
sbb
in
sub
push
pusha
pop
mov
jo
adc
mov
stos
xchg
std
orl
dec
push
push
movsb
into
enter
jns
adc
and
dec
jnp
loop
or
or
lea
enter
mov
mov
roll
jae
sti
pop
sbb
cmp
in
lock
popa
lea
add
pop
pushf
subl
jnp
pop
push
pushf
js
in
add
loop
add
mov
or
push
lea
jne
or
mov
mov
sub
adc
mov
sbb
adc
repz
test
push
imul
jle
lds
sub
cmp
in
add
jbe
pop
inc
in
add
hlt
adc
dec
mov
testb
inc
or
push
pop
gs
push
shrb
pusha
pop
mov
nop
dec
dec
add
pop
std
aaa
xor
jge
cmp
je
lods
mov
and
mov
dec
adc
jne
inc
cmp
cmpsl
insl
fnstenv
inc
adc
lret
gs
adc
sbb
lret
sub
xor
lods
sbb
test
jbe
out
jnp
mov
es
int
mov
mov
mov
pusha
and
xchg
or
pop
cwtl
xchg
pop
mov
inc
or
sti
movsl
pop
xchg
repz
roll
in
add
inc
lret
jbe
inc
cwtl
inc
inc
out
dec
repz
add
add
mov
lock
aam
fildll
js
mov
movb
add
scas
xchg
insl
mov
xor
xor
fstps
vmovhps
fcomps
insl
aaa
sub
add
sbb
int3
mov
pop
in
inc
mov
sahf
stc
test
loopne
jae
aaa
bound
push
test
je
push
pop
clc
and
ss
push
sti
or
into
outsb
jmp
adc
push
stos
leave
cmove
fildl
pop
push
or
outsl
jp
mov
inc
adc
leave
push
and
in
sti
in
xchg
xchg
in
xchg
lret
pusha
mov
cmp
mov
popf
repz
gs
cmpsl
xor
pusha
or
outsl
jp
ret
mov
stos
xchg
icebp
clc
ljmp
rcrb
sub
rcl
jg
sbb
sub
inc
std
sbb
xchg
into
in
dec
dec
repnz
idivl
mov
pop
or
jecxz
int3
mov
test
dec
xchg
push
xlat
mov
push
mov
cmp
inc
xor
sub
xor
pushf
std
xor
mov
insb
ds
jne
pop
xor
xchg
mov
in
push
xchg
adc
add
andb
sbb
hlt
mov
cmp
mov
and
add
imul
mov
insb
xchg
dec
sub
fsubrl
and
add
mov
fmull
iret
sub
ret
mov
pop
addr16
addr16
movsb
pop
jb
sbb
movsb
cld
add
sub
jne
repnz
popa
dec
je
fistl
dec
enter
fildl
mov
inc
clc
jo
push
test
mov
lock
jp
pushf
rorb
jp
sarb
adc
xor
push
add
adc
adc
nop
mov
cs
xor
divl
adc
adcb
movl
xor
std
mov
xor
gs
dec
jle
nop
or
dec
cwtl
adc
pop
dec
push
mov
adc
rclb
ljmp
ss
cmp
xor
subl
popa
outsb
scas
jno
nop
adc
movsb
pop
es
mov
jl
add
out
cmpsb
push
mov
aad
adc
aad
shlb
adc
sub
or
inc
daa
shlb
inc
pop
lcall
mov
int3
push
cld
pop
popa
adc
fwait
add
jle
adcl
xor
jb
jl
cmpsb
and
jno
inc
stos
jne
js
jbe
in
adcl
inc
xor
jp
lcall
xor
out
add
jp
inc
adc
daa
loopne
imul
push
test
insb
addr16
sbb
xor
cmp
pop
xor
xor
sub
add
sbb
sub
xor
adc
xchg
scas
sub
or
xor
and
addb
xchg
push
xchg
add
cs
lret
push
push
addr16
outsl
cmp
in
xor
xlat
fldt
cmp
push
add
inc
arpl
push
xor
ret
mov
dec
mov
push
je
js
stos
sbb
arpl
pop
push
pop
int
imul
cmc
add
push
sbb
cmp
pop
inc
sub
loopne
roll
xor
fsubl
dec
push
fiaddl
cwtl
add
inc
scas
mov
shrl
mov
cwtl
jnp
sub
repz
add
xchg
mov
push
fsubrl
push
push
fwait
pop
psrlq
mov
push
push
mov
movsb
ja
iret
int3
call
aam
xor
outsb
and
or
pop
mov
enter
sub
imul
mov
lcall
dec
jo
ds
inc
mov
inc
fs
cld
popf
mov
jmp
jg
add
jmp
sar
mov
and
enter
mov
or
dec
add
push
xor
mov
stc
push
imul
roll
inc
out
sbb
lret
xor
or
lock
dec
rolb
mov
fcompl
scas
pop
stos
enter
dec
lock
loop
push
mov
push
lock
inc
data16
shrl
inc
inc
pop
test
test
add
fsts
js
add
add
and
jp
in
dec
push
xchg
and
call
loop
inc
mov
jl
or
pop
pop
xor
js
and
fwait
popa
cmp
cmp
rcr
inc
imul
or
call
es
imul
cmpl
mov
shl
out
dec
call
addr16
shrl
cmp
in
pop
sbb
iret
xchg
or
jno
sbb
mov
fistpl
adc
push
and
jl
add
jne
dec
mov
pop
into
push
mov
sub
ds
or
inc
sbb
cmp
add
cld
ss
push
or
int3
inc
or
jb
xor
jp
mov
iret
xchg
or
fsubrl
jl
hlt
or
adc
testl
add
jae
jo
mov
loopne
test
ss
mov
loop
pop
stos
xchg
subl
icebp
mov
data16
push
pop
add
in
js
mov
cmp
cld
adc
es
xchg
adc
ds
jne
lds
add
cwtl
in
loopne
mov
xchg
in
sub
add
call
sbb
pop
fmull
inc
sub
or
push
sarb
adc
xchg
adc
incb
ror
push
inc
mov
ret
dec
add
cmpsl
adc
fnsave
aaa
test
fsubr
dec
les
jge
or
mov
sbb
dec
or
push
scas
rol
enter
dec
add
jbe
sub
pushf
xchg
out
int3
pop
dec
rclb
mov
shl
pop
cmp
popf
adc
jae
clc
pop
fmull
dec
ret
in
les
lock
sub
mov
mov
push
movsb
jecxz
leave
add
or
fsubp
into
cwtl
xlat
xchg
sub
inc
popa
mov
adc
mov
mov
loopne
psrlw
sub
dec
rcr
f2xm1
out
imulb
dec
xchg
xor
mov
ret
out
adc
add
test
adc
test
iret
mov
adc
jne
fistpll
rol
out
mov
bound
jo
mov
pop
jmp
sbb
and
daa
cmp
lret
jb
pop
enter
loopne
in
push
inc
cmp
leave
push
dec
pop
xchg
xor
push
xor
test
adc
and
or
mov
scas
push
popa
lods
pop
sub
sbb
pusha
jmp
leave
and
repnz
xchg
xchg
stos
xor
or
int
push
leave
or
cmpsb
bnd
into
xchg
imul
push
fsubl
xchg
adc
fists
dec
mov
push
push
xor
lea
jge
mov
xchg
jmp
fmuls
add
jle
cld
mov
add
jno
ret
dec
jl
and
sub
mov
andb
decl
aam
cmp
aad
xor
push
mov
add
mov
das
cli
fwait
mov
fwait
xor
hlt
pop
pop
icebp
xor
mov
and
fstl
cli
int
lods
xor
imul
aam
fistpl
inc
mov
outsl
jae
dec
sub
movsb
es
js
inc
or
mov
dec
leave
movsl
sbb
and
test
pop
push
push
or
loope
adc
iret
out
push
shll
jmp
and
push
shlb
inc
push
inc
dec
imul
imul
mov
nop
fidivrs
push
in
cmp
arpl
lock
mov
leave
pop
mov
adc
stos
out
je
sbb
enter
pop
sbbb
dec
sub
enter
push
and
in
push
push
add
and
hlt
cwtl
cmp
das
das
mov
shrb
sub
imulb
jge
add
ficompl
imul
lea
jb
push
les
xchg
sbb
push
xchg
adc
andb
mov
movl
dec
lods
or
adc
fsubrl
push
and
xchg
shrl
dec
mov
xchg
les
pop
mov
push
xor
int3
call
pop
add
sbb
scas
repz
jae
int3
addb
push
dec
jns
jne
shlb
shrb
inc
pop
jb
jge
subl
fwait
shlb
in
cmp
fbld
insb
xchg
jne
dec
nop
and
addb
es
test
lds
iret
inc
cmp
test
pop
rol
sub
xchg
mov
je
add
push
imul
rclb
leave
add
dec
es
nop
mov
xchg
xor
push
push
adc
arpl
inc
div
push
jb
xor
out
pop
sti
lock
or
cmp
rcpps
fistl
pop
push
enter
test
xor
sbb
xor
adc
shlb
sbb
and
inc
dec
jno
mov
jns
pop
ss
lds
jo
stos
xchg
inc
adc
test
in
cmpl
xchg
pop
sbb
pop
mov
mov
jge
inc
popl
test
mov
in
mov
add
add
push
pushf
or
or
mov
les
mov
cltd
push
mov
inc
stos
iret
jo
rclb
dec
sti
jne
data16
adc
and
lock
dec
sbb
fstl
mov
sbb
daa
push
push
xlat
insb
push
push
cmp
sbb
in
lods
rol
or
mov
sub
pop
mov
push
cmpl
out
dec
add
xchg
push
push
fldt
xorb
inc
lret
fmull
inc
mov
mov
mov
adc
jp
mov
inc
in
dec
sbb
and
jbe
cmp
cmp
dec
pop
add
sub
cmp
push
add
mov
push
fwait
mov
cltd
mov
sti
or
cmp
mov
leave
dec
pushf
lods
mov
mov
mov
cmpsl
or
mov
xchg
in
cmp
mov
mov
shlb
shrb
mov
jnp
add
insb
cs
push
push
mov
push
and
lret
or
and
nopl
shl
push
cwtl
dec
pusha
rolb
shl
cs
lock
sub
xchg
sub
data16
pop
or
sub
lcall
outsb
push
inc
push
or
fsub
loope
leave
shlb
or
movsb
cmovle
jns
sbbl
and
sub
pop
fsts
adc
push
cltd
insl
dec
test
rcrl
jns
popf
pop
stc
es
cmp
aaa
clc
dec
push
mov
and
pop
mov
outsb
ds
test
aaa
push
dec
push
and
test
ss
stos
push
insb
mov
push
jle
mov
or
dec
push
in
shl
add
push
loop
shrl
and
push
inc
xchg
inc
sarb
cmpsb
sbbb
jmp
jnp
sbb
out
xor
lea
inc
inc
jl
inc
cmp
dec
mov
imul
and
cmp
sbb
test
adc
stos
mov
insb
add
int
ret
mov
adcl
lea
dec
or
std
ror
dec
lock
mov
or
adc
add
inc
icebp
adc
jno
loop
cmpsl
pop
jle
out
add
insl
inc
incb
sti
dec
call
push
cmp
push
aaa
push
push
jno
mov
jbe
push
ret
xorl
aas
and
shll
ja
fdivrl
mov
shrb
inc
cmpsl
or
dec
push
lods
jmp
iret
xor
pushf
sbb
test
scas
xor
movsb
lods
imul
dec
test
dec
or
xor
pusha
push
adc
mov
gs
decb
test
mov
nop
shlb
or
add
cwtl
nop
movsb
stos
sti
aam
inc
and
les
inc
add
mov
mov
adcb
sar
pop
orb
adc
scas
jge
xchg
addb
lea
push
add
mov
lods
inc
insl
jg
adc
add
les
jle
and
push
push
mov
xor
or
sub
pop
mov
aad
xchg
xor
fucompp
pusha
pushf
pop
jae
in
out
xor
xor
and
xor
and
mov
sub
arpl
xchg
or
lret
sti
scas
xchg
and
test
push
fildll
add
movswl
add
pushf
xchg
inc
add
pop
mov
pop
les
bound
jbe
sar
lods
lods
call
insl
add
cmc
call
or
cmp
data16
dec
inc
test
out
adc
or
std
adc
js
je
inc
push
cmpsb
sbb
inc
lods
xor
je
shll
push
mov
lock
sub
or
push
repnz
fisubl
mov
add
sub
pop
jo
fidivs
cmp
fdivs
loope
dec
rcrb
leave
dec
jp
nop
mov
in
mov
adc
aas
xchg
testb
xor
mov
ja
cltd
mov
and
mov
iret
popa
divl
adc
or
adc
jo
stc
jne
jo
jmp
add
shl
sbb
xchg
shlb
mov
xchg
cmp
adc
and
push
xor
xchg
xor
fsubp
inc
dec
test
mov
mov
jecxz
jnp
pop
je
mov
cmp
rclb
push
and
daa
adc
jmp
outsl
add
shl
call
test
test
adc
push
lods
xchg
mov
in
adc
mov
les
icebp
sbb
scas
jl
sub
xor
cltd
imul
jp
push
stc
add
adc
mov
mov
sub
ss
das
cmc
cmp
mov
or
adc
insl
popa
sub
pop
pop
add
enter
add
or
pushf
lea
and
sub
jp
cld
sbb
cmp
out
mov
movsb
xchg
cmp
mov
lea
and
jp
mov
fdivs
or
sbbb
xchg
or
test
nop
sbb
fwait
lock
test
test
xchg
or
andl
jl
pusha
test
jp
push
sar
decb
mov
sbb
addb
xchg
dec
inc
loopne
aam
fadd
add
je
mov
jne
cld
sub
scas
xchg
adc
test
dec
push
jmp
inc
xchg
dec
xchg
push
loopne
cmpsl
inc
mov
loopne
add
decb
sbb
jp
gs
mov
fmuls
xchg
dec
cmpsl
pop
adc
sub
and
and
or
mov
shr
add
or
push
iret
mov
call
sbb
rolb
fsubr
push
jno
rcrl
sbb
sbb
add
mov
mov
or
divl
loop
inc
scas
movsb
jo
fcmovb
out
dec
xchg
lret
push
movsb
cmpsl
lcall
add
sub
mov
xchg
xor
mul
pop
push
aad
mov
mov
pop
push
push
add
add
xchg
adc
cmp
rclb
mov
cmp
or
out
mov
shll
dec
mov
xchg
pop
adc
mov
inc
inc
ds
fisubrl
inc
cli
sub
into
and
adc
lret
loopne
movsb
xchg
push
sub
into
test
nop
cmpsb
cld
add
fchs
pop
inc
fdivrl
int3
cwtl
rolb
jmp
arpl
test
and
insb
inc
add
addr16
push
jnp
sub
dec
repz
xor
mov
pop
add
movsb
push
lret
jbe
mov
cli
add
scas
test
dec
sbb
xor
xor
xchg
lock
insb
clc
fs
arpl
mov
mov
mov
xchg
filds
inc
mov
dec
les
aam
push
jo
icebp
dec
push
ljmp
jnp
addr16
mov
decb
ret
mov
lds
mov
inc
movsb
inc
fstp
cs
jae
inc
sub
xor
mov
jbe
mov
mov
mov
inc
fldt
xor
sbb
outsb
pop
jnp
insl
imul
add
jo
insb
and
insl
ss
and
xchg
xchg
loop
adc
mov
rorl
push
jmp
dec
orl
inc
hlt
and
xor
outsl
gs
mov
insb
mov
ljmp
push
popa
inc
sub
lahf
aad
push
clc
inc
mov
icebp
jb
subb
pop
adc
nop
add
lock
je
add
mov
jb
dec
or
cli
jb
adc
inc
int
jne
add
xor
push
adc
iret
shll
cli
lods
cmp
leave
shl
sub
test
outsb
or
sub
mov
xchg
inc
pushf
sbb
sub
rcrb
jae
das
loopne
push
push
or
mov
cmp
or
pop
xchg
cmp
xchg
inc
and
loope
jne
int
divb
dec
push
lret
dec
adc
std
sbb
push
adc
cmp
jae
jno
mov
jne
pusha
xor
inc
xchg
popa
cli
imul
push
dec
mov
and
jecxz
sbb
sti
out
xchg
in
adc
and
xor
pop
inc
sbb
lea
sbb
adcl
imul
lods
shll
cmp
push
add
test
and
pop
sbb
lock
mov
in
cs
and
jle
pop
lods
ljmp
adc
cmpsb
pextrw
movsl
aam
mov
lds
or
pop
and
push
sbb
push
xchg
aad
clc
or
out
or
pop
add
data16
or
sub
shl
lret
adc
add
pusha
enter
push
push
mov
add
arpl
cmc
adc
and
ror
xchg
test
pop
enter
icebp
pop
les
loopne
jo
shl
inc
cmp
popa
sarb
cld
jmp
mov
cmp
mov
xchg
add
add
push
pop
addb
movsl
add
mov
jae
scas
fcomps
jnp
cmpl
xor
add
and
mov
test
fstps
dec
push
pusha
aam
mov
add
adc
and
movsb
fsubrp
ja
stc
dec
dec
arpl
inc
sahf
push
mov
push
jb
dec
pop
or
mov
cld
xor
repz
sbb
add
sbb
lods
mov
xchg
aad
int
jne
sbb
xchg
sbb
pop
dec
lock
and
popf
push
mov
xor
mov
roll
repz
sub
test
pop
psubb
lret
jge
jle
inc
outsl
sbb
and
loopne
repnz
mov
jle
cmc
mov
mov
lret
cmp
hlt
in
pop
icebp
fnstenv
sub
adc
loopne
in
stc
or
add
pop
jno
movsl
test
dec
inc
imul
adc
in
xchg
rclb
hlt
inc
xor
mov
in
sub
mov
mul
sbb
and
push
hlt
push
cmc
inc
sub
in
lock
push
pop
enter
and
push
cmp
inc
mov
cld
add
jmp
and
fiadds
enter
or
loope
bound
sbbb
shlb
and
push
test
pop
iret
sbb
mov
popa
inc
subl
add
mov
push
mov
add
pop
decl
sub
add
outsl
add
add
mov
mov
movl
or
push
fwait
fwait
mov
mov
loopne
mov
in
mov
rolb
sbb
movsb
test
or
add
pop
sub
insb
mov
push
shrl
pop
and
pop
or
test
inc
inc
mov
xchg
sbb
dec
add
adc
sub
adc
or
inc
scas
xchg
dec
mov
add
fdivrs
adc
jne
inc
mov
insl
inc
xor
rolb
mov
aaa
or
sbb
ret
mov
push
push
rorb
push
in
nop
inc
out
das
or
xor
adc
adc
imull
mov
testb
pop
imul
and
xor
fisubs
cmp
icebp
xor
push
cmpl
jmp
add
mov
xor
jae
or
call
lds
mov
outsb
sub
cmc
mov
push
cmc
rcrl
je
mov
cmp
push
pop
mov
fmull
popf
pop
test
push
mov
incl
pop
dec
fcomps
cmp
mov
or
imul
mov
inc
addr16
inc
adc
je
les
sti
pusha
dec
lea
outsb
jne
pop
add
add
sub
fbld
mov
jmp
icebp
adc
adc
jne
hlt
loopnew
popa
mov
dec
pop
or
xor
fimuls
xor
add
int3
lcall
cmp
mov
or
pop
mov
cmp
rcr
jo
jne
mov
and
mov
pop
or
add
dec
hlt
push
iret
push
mov
mov
fdecstp
inc
mov
push
pop
xor
push
lcall
jmp
push
sbb
std
jnp
dec
inc
shlb
jno
jmp
lods
push
pop
ss
mov
jle
adc
jb
in
ss
adc
fxch
sbb
sar
sub
inc
sub
inc
in
sbb
je
xor
fs
inc
xchg
add
daa
ret
pop
xchg
lea
lods
jmp
sub
dec
pop
mov
sbb
xchg
adc
adc
imul
fildl
mov
cmp
into
clc
jae
out
dec
jl
aaa
pop
fisttpl
repnz
mov
jne
xor
push
mov
cmp
je
adc
pop
push
popa
mov
call
pop
aas
sbb
jbe
jns
cmpb
gs
push
cmp
mov
loope
mov
jmp
pop
xor
dec
xor
mov
adc
cmp
push
xor
je
mov
inc
sti
xchg
outsb
ret
mov
inc
add
xlat
out
push
icebp
push
sbb
jae
stos
push
inc
inc
jo
pop
lcall
cli
sbb
adc
jne
push
push
rcrl
sbb
jl
into
cmp
rol
sbb
cmp
shrl
cwtl
dec
xchg
imul
dec
sub
lret
lods
add
pop
mov
outsb
mov
or
xor
push
push
mov
sahf
mov
je
pop
test
push
cmp
ficoml
cmp
dec
add
adc
ljmp
xchg
je
dec
adc
inc
loope
loope
cmp
sub
inc
jecxz
adc
add
or
mov
pop
cmp
ficoml
ds
or
dec
enter
push
dec
sub
xchg
mov
add
rsm
mov
ss
mov
or
insb
pusha
dec
insb
aam
repnz
mov
imul
inc
jbe
mov
add
jo
mov
sub
sub
jne
sub
jmp
and
or
pop
lock
inc
cmp
sub
dec
or
xchg
mov
pop
and
mov
add
fs
or
mov
sbb
mov
adc
roll
cmp
add
sbb
imul
stc
inc
sub
stos
xchg
sub
dec
and
pop
leave
or
pop
jl
test
je
rclb
push
pop
movsl
push
push
lcall
aad
jbe
mov
pop
cmp
xorl
ret
mov
push
pushf
or
xchg
fisubl
mov
cmp
mov
lret
les
lea
push
dec
fsubl
lods
ret
lock
xor
pavgw
add
pop
jl
cmp
pop
add
xchg
pop
xlat
cmp
mov
adc
fdivs
sbb
fidivl
je
push
cmp
adc
dec
xorl
mov
pop
popa
or
mov
xchg
sahf
fsts
test
lock
jne
enter
xchg
movl
mov
test
jbe
xor
dec
mov
or
xor
xor
and
insb
sti
sbb
adc
pop
sbb
repnz
push
int
mov
lds
pop
pop
lds
imul
mov
mov
pusha
push
sub
push
cwtl
xchg
xchg
fmuls
or
dec
iret
adc
inc
pop
add
in
cmp
or
leave
adc
pop
dec
cmovno
cmp
and
add
dec
mov
mov
mov
add
push
inc
mov
bnd
es
or
mov
push
gs
or
jbe
nopl
inc
leave
inc
add
dec
and
lret
push
or
jp
in
sbb
push
push
jno
pop
addr16
aas
out
lcall
sahf
xor
ljmp
dec
out
xor
or
inc
dec
dec
fucomi
dec
pop
pop
cld
adc
pop
and
xchg
xor
or
fcmovnb
pusha
and
loope
xor
cmp
pop
or
addr16
adc
or
nop
inc
testb
sub
js
cmp
lret
movq
test
jne
cmp
add
mov
dec
xlat
aam
call
or
cs
jb
notl
out
or
int
or
add
insb
or
adc
rcll
xor
fcoms
ret
out
jne
cmp
cmp
add
rcrb
int
aam
fldcw
ret
je
bound
mov
or
xor
jg
movb
push
lea
aaa
pop
mov
shrl
fidivs
jo
fdivs
inc
or
in
mov
pop
xlat
xor
cmp
jbe
cmp
jne
jp
dec
cld
leave
cltd
cmpb
jae
dec
fwait
add
mov
or
or
inc
sbb
add
cmp
loop,pn
aad
dec
ret
xchg
xor
mov
adc
mov
adc
mov
mov
mov
mov
lds
mov
mov
aad
ret
test
inc
ljmp
popa
or
add
je
add
jmp
insb
into
call
mov
rolb
test
or
cwtl
xor
cltd
rcl
cmp
inc
xchg
inc
and
sbb
shrl
xor
ret
push
bound
jo
int
cmpsb
adc
test
sbb
je
xor
dec
inc
dec
test
inc
pop
add
and
scas
aaa
lret
scas
adc
inc
adc
pop
leave
or
inc
adc
mov
mov
inc
add
out
das
sbb
ss
push
push
mov
jle
push
xor
nop
sub
cmp
push
fwait
inc
int3
lcall
dec
push
adc
jmp
shll
jbe
lock
sub
add
test
push
add
cmp
mov
jne
push
or
sti
pushf
xchg
sti
out
cmp
sbb
subl
or
push
orb
mov
adcl
les
rcll
add
add
sub
push
jae
in
shrl
adc
dec
or
outsl
or
add
mov
roll
in
add
shlb
and
cli
in
imul
repnz
ret
mov
adc
inc
mov
inc
cld
scas
cmp
pop
ljmp
adc
or
add
addr16
adc
add
inc
popa
xorb
fimull
or
lods
mov
lret
bound
je
es
fwait
inc
cmpsb
cmpsb
and
in
or
or
mov
in
sub
or
mov
cwtl
mov
sub
fnsave
out
sbb
add
into
int
cli
or
add
mov
shll
lods
fadd
jnp
xchg
cld
or
fwait
cmp
test
out
mov
lahf
enter
int
dec
mov
aam
inc
shlb
sub
sub
pop
or
mov
add
cmpsb
inc
cmp
mov
out
mov
cltd
fs
addr16
in
add
pusha
cltd
lea
mov
xchg
rol
xor
mov
adc
enter
rclb
stos
or
dec
dec
xor
bound
lahf
ret
movl
inc
mov
pop
mov
push
jg
xor
pop
mov
push
inc
les
or
mov
inc
dec
jns
movsb
daa
cli
xor
popa
push
mov
imul
popa
adc
adcl
dec
sub
add
xchg
push
or
int
push
loope
loopne
mov
mov
add
fcoms
orb
les
dec
aad
rsqrtps
or
pop
mov
pop
mov
pop
xchg
mov
push
pop
aam
mov
xchg
hlt
add
push
pop
xor
insb
mov
inc
rcrl
sarl
aas
das
ja
pop
lods
xor
push
dec
dec
cs
dec
gs
andb
mov
push
mov
jbe
repz
and
adc
mov
dec
mov
shrb
mov
call
es
rorb
cwtl
lds
sub
insb
shrl
fs
sbb
jg
xchg
in
arpl
add
mov
jp
in
lea
mov
or
add
sbb
mov
cmp
add
mov
push
pop
js
lcall
push
push
in
cli
mov
mov
fistpll
sti
jnp
iret
xchg
inc
xorb
jb
jle
xor
mov
lea
inc
inc
adc
iret
movsl
fsubs
out
adc
add
mov
cmpsl
cmp
adc
pop
negb
mov
adc
jno
xor
stos
scas
or
xchg
inc
inc
pop
imul
pop
scas
adc
hlt
sbb
aaa
push
cmp
xchg
call
push
inc
xor
enter
push
ljmp
fcoml
sbb
adc
rcrl
push
test
sub
adc
cs
std
loopne
inc
or
push
cmc
aad
sub
pop
lock
xlat
mov
insl
addb
inc
nop
bound
mov
mov
add
mov
or
mov
lret
pop
xor
inc
cmp
mov
and
cmp
dec
sar
je
push
xchg
xchg
rcrl
bound
adc
clc
cmpsl
icebp
mov
pushf
push
push
mov
cmp
loopne
add
jae
subb
adc
hlt
dec
sahf
dec
lcall
aas
mov
xchg
insl
xchg
inc
inc
adc
push
push
push
andb
cmc
int
push
cwtl
add
sub
dec
imul
mov
xchg
stos
shr
loop
scas
out
clc
xchg
adc
add
pusha
or
test
push
call
mov
pop
xor
xor
cmp
loopne
sub
xchg
push
iret
inc
xor
xchg
adc
inc
cwtl
lcall
clc
push
mov
insl
je
pop
in
data16
add
push
sub
mov
pop
neg
dec
insb
xor
mov
jo
adc
mov
mov
lea
adc
add
pop
fldl
inc
adc
or
dec
inc
stc
pop
mov
repnz
push
dec
adc
cwtl
add
or
gs
cmp
clc
inc
gs
les
stos
sub
sub
sbbb
jecxz
pushf
jno
xchg
out
aaa
icebp
and
push
sub
and
and
dec
sbb
fs
aas
icebp
dec
test
or
sub
loopne
cmp
xor
xor
insb
cld
ds
or
shl
mov
sbb
xchg
andb
and
push
es
xchg
cmc
xor
inc
lds
inc
xchg
ret
or
xor
sahf
arpl
ds
mov
mov
orl
pusha
pop
inc
sub
and
push
xor
scas
push
mov
add
fdivp
mov
jae
popa
sbb
shr
rolb
mov
sub
adc
movb
cli
push
mov
push
cld
jne
rorl
pusha
mov
mov
pop
cld
fisubrl
push
hlt
inc
and
aaa
inc
mov
stos
sbb
adc
orb
ss
movsl
xchg
jl
or
adc
dec
lock
out
fdivr
ret
xor
and
push
or
js
gs
fidivrl
ja
loop
lods
mov
pushf
stos
pop
lods
filds
addr16
xchg
sub
iret
aas
mov
adc
and
xor
ljmp
and
and
stos
adc
push
push
or
push
ds
mov
dec
add
repz
and
fs
call
int
mov
push
mov
push
mov
pop
loop
shlb
add
fcompl
xchg
cmp
mov
push
push
sbb
les
inc
lods
lock
cmpsb
nop
mov
dec
add
or
mov
mov
out
xor
and
loopne
cmp
push
shr
divb
fiaddl
cmp
js
push
cmp
or
rorb
cmp
mov
jo
fmuls
push
and
stos
cmc
push
rorb
out
mov
mov
insb
outsb
stc
std
sbbl
adc
fildl
mov
out
cmpsl
enter
sti
xchg
mov
fimuls
inc
lock
inc
mov
inc
imul
adc
test
and
pop
hlt
and
push
jbe
dec
sbbb
cmc
aam
je
pop
xchg
ds
sub
and
stos
push
data16
jo
nop
sub
adc
ds
daa
lods
or
inc
cmp
push
push
jl
loopne
adc
mov
fwait
pop
add
mov
popl
les
sub
movsb
cs
add
and
add
popa
adc
and
and
push
push
test
andl
jne
lds
sub
or
and
rcrl
and
xchg
xchg
in
movnti
or
mov
inc
adc
xor
mov
in
inc
mov
iret
pop
mov
or
push
sahf
lea
es
mov
psrad
out
out
push
inc
adcb
add
add
xor
mov
jns
and
leave
loopne
cli
lds
sarb
jl
jo
and
int3
xor
mov
mov
push
test
push
inc
push
mov
adcl
rcrl
lds
mov
or
jl
sub
mov
sbb
adc
ret
push
add
push
push
daa
in
insb
mov
jl
rorl
pop
inc
mov
mov
rorb
imul
sub
into
push
cwtl
adc
in
jno
add
push
cmp
cmp
cmp
xor
loop
xchg
xor
cmc
loopne
shrl
test
out
push
and
mov
sbb
jb
dec
mov
dec
rcr
enter
mov
pop
adc
je
inc
inc
pushf
sub
add
or
dec
push
adc
inc
xor
ss
push
cli
push
fistl
rolb
mov
and
push
adc
mov
inc
push
movl
or
inc
nop
shlb
jns
adc
mov
popa
bound
add
sbb
stos
int
stos
push
inc
movsb
mov
adc
fcoml
pop
imul
addb
jmp
ret
das
jle
mov
ds
fdivrl
dec
inc
xchg
inc
sbb
push
xor
xor
and
das
mov
inc
pop
push
jo
or
rcrl
cmp
shlb
movsl
xor
xor
jg
jbe
add
add
and
dec
or
fimuls
lock
jmp
pop
xchg
lcall
adc
adc
out
sub
add
out
aaa
cmp
outsl
std
fcmovu
or
pop
adc
das
push
popl
add
mov
shll
inc
adc
int
pushf
sbb
arpl
lock
add
cmp
lcall
xchg
fidivrl
dec
shr
add
sub
mov
xchg
sub
pop
enter
add
cmp
xchg
les
or
jne
stos
ret
pop
xor
das
sbb
ret
incb
lds
ljmp
inc
popa
leave
cmpsb
cmp
cmpl
add
pop
adc
ljmp
xor
lret
lret
jae
push
lock
or
sbb
in
xor
xor
inc
jle
mov
out
and
rolw
xor
xor
adc
pand
cs
movsb
loop
dec
les
lret
outsl
or
pop
ljmp
sahf
loop
xor
sbb
xor
add
pop
addb
std
sub
neg
mov
mov
shll
mov
mov
bound
inc
push
cmp
push
mov
sbb
and
xchg
lea
push
insl
mov
push
xchg
daa
xchg
movsb
loop
in
mov
popa
push
pop
mov
addb
ficoms
lods
jmp
jbe
xor
cwtl
inc
cmpl
adc
sbb
sbb
xor
gs
and
cmp
and
jb
mov
ljmp
ficoms
xor
mov
push
dec
lock
and
mov
shl
shlb
test
adc
nop
push
rolb
or
out
xor
popa
sbb
sahf
call
int
mov
test
add
orb
fistl
push
and
add
pop
xor
cmp
data16
push
mov
cmpb
inc
add
or
sub
cmp
and
adc
rorb
sbb
and
jo
es
mov
xchg
adc
aas
push
xor
loopne
mov
mov
test
dec
push
das
push
xlat
push
sbb
sub
or
push
shll
test
and
sbb
cmpsl
ljmp
cmp
sub
rcr
and
and
ja
ret
or
mov
lea
fisubrs
std
aas
add
shr
shl
or
inc
mov
xor
not
aas
and
and
or
dec
sub
ret
push
filds
push
mov
mov
sub
mov
in
sti
fistpll
adcl
decb
insl
test
xor
lret
mov
in
adc
call
mov
mov
mov
xor
aad
add
into
mov
fcmovnu
shl
sbb
or
add
mov
mov
cmp
scas
cmc
shll
movsl
test
inc
adc
shll
adc
and
call
lret
adc
int3
addb
xchg
push
push
jmp
xchg
fmull
sub
xchg
xlat
push
inc
es
into
or
dec
add
push
sbb
adc
test
ror
out
loopne
sbb
ds
shlb
int
ja
mov
xor
insl
fnstenv
push
loope
xchg
inc
std
push
loop
xchg
mov
scas
lods
aam
mov
shlb
imul
pop
ljmp
lds
mov
mov
sbb
ficoms
mov
xlat
aas
arpl
outsl
push
adc
imul
ja
adc
push
shll
out
inc
dec
outsl
test
pop
jge
je
mov
xor
js
aad
iret
push
clc
push
mov
add
adcl
push
and
nop
imul
adc
test
jmp
pop
or
sbb
mov
jecxz
xchg
jno
std
test
xor
or
dec
mov
pusha
fnstcw
loopne
mov
or
mov
sbb
jne
je
enter
mov
dec
add
push
add
loope
lock
popa
incl
loop
cmp
and
mov
push
mov
or
mulb
and
cld
push
jno
adcl
out
out
adc
add
push
push
aam
push
bound
mov
sbb
bound
ret
add
cmp
fidivs
mov
shlb
mov
xor
testb
push
pop
pop
es
xchg
gs
push
adc
cmc
jo
aas
fimuls
clc
cli
cmpsl
jnp
int
insl
xlat
add
int
push
jmp
addr16
mov
sarb
das
iret
shll
xor
test
stos
jge
or
dec
mov
adc
movsb
mov
ret
out
pusha
cmp
adc
inc
add
rclb
inc
and
xchg
popa
sbb
mov
pop
cmp
add
test
fildll
push
in
xor
cli
lock
and
sti
popf
fs
ret
and
mov
subl
jno
adc
lock
sub
int
and
sbb
cs
jmp
lahf
lods
jne
hlt
xor
lret
jno
mov
push
push
mov
cld
jbe
popa
pop
pop
aaa
ret
dec
clc
dec
inc
pop
inc
or
sub
popf
dec
or
and
or
popa
shll
fwait
cli
stc
and
xlat
arpl
ret
jge
cmp
in
adc
inc
fimull
mov
xor
add
add
push
rcrb
add
add
fimuls
ret
cmp
sbb
push
jb
mov
mov
in
or
sbb
xchg
jl
mov
repnz
flds
outsl
addr16
cmc
test
int3
add
sahf
out
test
js
mov
pop
pushf
shlb
xchg
push
ljmp
imul
decb
mov
pushf
or
mov
adc
push
shl
jmp
push
add
in
push
mov
test
mov
cli
mov
push
imul
js
adc
dec
xor
mov
stos
push
fidivl
fildl
decl
cli
and
addr16
out
or
add
dec
inc
pop
add
pusha
mov
add
xor
lea
ret
add
xor
xor
inc
loope
inc
lea
test
xlat
xor
inc
shrb
pop
and
insl
xor
adc
dec
std
xor
loop
mov
mov
dec
add
aad
sbb
rolb
pop
aad
pop
rcll
loopne
xor
lods
sub
jae
out
es
lea
shrb
das
or
fucompp
icebp
add
xor
add
lds
fiadds
icebp
sbb
inc
call
mov
xchg
enter
xchg
xor
mov
fs
mov
adc
iret
fimuls
push
add
mov
pop
jecxz
addl
pop
pusha
dec
mov
push
mov
andl
cmp
ds
fcmovb
out
fists
jo
mov
push
cmp
cmp
push
and
inc
jle
sub
arpl
pop
mov
cmc
mov
imul
shl
lahf
rorl
pop
stos
mov
push
lods
cmp
idiv
daa
mov
shll
and
roll
xchg
xor
mov
fst
subb
pop
rcrl
call
add
loope
and
push
sbb
sbb
lcall
shrb
int
je
shrl
fsubp
cmp
aam
pop
or
cmc
fistpl
or
orb
xchg
and
movsl
lret
sti
cli
insl
adc
lret
sub
jl
pop
lds
je
mov
int
lock
rcrl
add
adc
das
cwtl
test
iret
out
pop
xor
pop
pushf
xor
aam
mov
hlt
sahf
bound
loopne
leave
jp
push
movsl
outsl
icebp
gs
lods
les
push
cmp
call
dec
ficoms
and
or
dec
pop
add
inc
and
hlt
negb
push
or
sbb
or
sysenter
cmp
inc
fdivr
lret
push
or
and
xchg
ljmp
inc
inc
add
sbb
roll
cmpsl
and
leave
adc
xor
add
je
mov
xchg
mov
outsl
or
sbb
xor
dec
xlat
pop
push
cmp
call
out
and
fnstcw
sbb
pop
ret
pop
pop
shll
mov
push
xor
inc
mov
aam
aad
leave
jge
mov
outsl
or
or
or
xchg
jo
in
ret
pop
push
mov
xchg
je
cltd
and
or
mov
jge
out
lcall
pop
inc
js
test
pop
aad
fnstenv
rcrl
test
lock
fsubrl
push
insl
ret
fisubl
test
cmp
jo
sub
int
aam
sub
ljmp
sub
into
inc
aad
mov
shl
out
scas
data16
iret
out
push
push
aam
inc
add
adc
mov
xchg
aam
mov
cmp
and
lret
and
adc
and
dec
cmp
cli
add
cld
pop
cmpb
push
jno
mov
fdivr
pop
loopne
int3
arpl
data16
mov
and
cld
dec
xor
inc
div
iret
mov
jmp
xor
dec
dec
and
cmp
xchg
ja
jmp
sub
pop
nop
and
iret
lock
pop
in
cmp
mov
dec
dec
js
test
roll
jmp
loopne
mov
ret
adc
mov
sbb
xchg
lock
push
xchg
sub
mov
xor
adc
es
and
mov
jle
and
mov
and
or
es
scas
xchg
daa
in
jne
jb
mov
lods
das
cmp
in
pop
jmp
xchg
cwtl
jl
lock
mov
add
jo
pop
pop
movsl
call
and
sbb
iret
inc
xchg
test
jp
mov
mov
loopne
scas
or
or
push
cmpsb
sti
lds
out
sbb
lea
sub
insb
aaa
jo
or
add
test
aad
pop
rol
xchg
xchg
or
sbb
subb
jo
decb
lret
or
cmp
je
mov
jmp
xor
sub
dec
or
push
pushf
cli
sbb
pop
mov
adc
push
mov
or
cwtl
push
ret
jp
add
mov
cmpb
popf
ficomps
dec
xchg
ljmp
mov
pop
mov
inc
std
insl
and
add
sub
xchg
adc
enter
pop
ret
pop
sbb
and
and
inc
or
cmp
jb
mov
mov
pop
push
lock
mov
xorb
shr
inc
or
mov
push
mov
test
inc
stos
xor
pop
mov
rorb
scas
adc
xor
sub
jmp
pusha
inc
arpl
push
cli
or
jmp
outsb
push
push
mov
mov
shl
ficompl
inc
decb
enter
data16
mov
adc
add
stos
inc
sbb
int
mov
sbb
or
leave
cmp
or
orb
popa
mov
ror
cmp
xor
fwait
sbb
mov
push
push
js
adc
mov
ror
xor
stos
fisubs
add
test
and
push
insb
add
or
aad
jmp
imull
pushl
das
sub
mov
std
mov
lds
shrl
enter
xor
cmp
mov
or
push
shrl
add
or
add
dec
xchg
xchg
inc
stos
inc
dec
or
icebp
aaa
mov
cmp
push
jg
xor
loopne
push
les
and
mov
imul
and
stc
mov
mov
pop
push
push
xor
jne
scas
fs
sub
cwtl
in
les
push
xor
add
push
jg
clc
adc
xor
dec
push
and
xor
mov
mov
mov
dec
xchg
stc
dec
xchg
mov
mov
and
push
aam
pop
nop
dec
lea
int3
mov
mov
call
xor
aad
scas
gs
into
adc
inc
pushf
push
mov
popf
pop
push
add
pop
inc
cmpsl
bound
or
jg
dec
jne
movsl
iret
stos
sub
test
mov
mov
push
push
adc
and
xor
cmc
jnp
or
loopne
push
sub
xor
in
xor
popf
cmpsl
dec
fs
add
fildl
je
mov
loopne
inc
lret
and
inc
orb
push
mov
les
xor
pop
or
add
rcrb
adc
fbld
es
ljmp
add
lea
inc
add
xorl
mov
or
or
aas
popf
fdivl
icebp
clc
xchg
test
cmp
and
mov
mov
sbb
push
xchg
rolb
in
iret
cli
mov
xor
shrl
mov
js
inc
mov
pop
aaa
js
inc
insb
adc
push
loope
xor
aaa
add
loop
shll
sub
push
das
test
mov
ret
mov
mov
adc
gs
and
repz
dec
rclb
add
jnp
daa
test
or
mov
pusha
cmp
cmpsb
cmp
bound
adc
cmp
mov
dec
std
loope
mov
push
push
push
push
push
leave
xchg
jo
insl
inc
xor
mov
aad
push
mov
jno
insb
ja
das
inc
xchg
add
or
int3
adc
insl
add
pop
rolb
mov
dec
dec
xchg
push
mov
lock
sub
sub
cmpsb
aaa
add
inc
mov
rol
rcll
das
pusha
adc
sub
stc
int3
ret
dec
in
mov
mov
or
ljmp
aam
xor
adc
cmp
mov
sub
aas
cmp
inc
jno
push
push
test
ss
xor
cmc
cmp
jbe
add
sub
scas
jns
add
or
jne
repz
xlat
loopne
cmp
roll
xchg
pushf
mov
xchg
lods
test
adc
test
jnp
inc
pop
mov
pusha
xlat
sbb
mov
out
push
in
popf
pop
inc
movsb
add
push
in
and
in
in
call
in
mov
and
popf
add
push
int
shrb
mov
outsb
pop
icebp
mov
add
cmp
dec
sarb
xlat
clc
test
sbb
shll
dec
add
gs
addr16
mov
jbe
adc
add
sub
xor
mov
mov
adc
jecxz
push
das
mov
mov
pop
ja
dec
or
inc
callw
aam
call
push
add
or
sub
stc
push
das
push
into
into
xor
imul
xchg
or
sahf
mov
sub
pop
mov
pop
testl
push
jno
mov
mov
rcrl
push
lock
push
push
mov
movsb
imulb
fs
test
mov
pop
lods
js
or
test
or
insl
adc
mov
inc
js
push
xor
xor
adc
pop
leave
inc
das
or
inc
or
and
sbb
pop
daa
sahf
lahf
neg
dec
jp
or
inc
ret
mov
fcomps
mov
call
pop
cmp
mov
add
add
mov
and
xor
ret
jmp
repnz
dec
orb
call
xchg
xlat
push
jmp
or
xor
push
adc
cmp
sarb
cwtl
inc
ds
lret
or
pop
in
negl
mov
sbb
inc
test
clc
les
cli
lds
arpl
sahf
addb
sub
mov
mov
dec
mov
jne
xchg
mov
adc
bound
daa
sub
push
push
xchg
mov
clc
dec
pop
inc
mov
push
lods
pop
icebp
mov
call
sbbb
xchg
and
and
scas
loopne
and
in
stos
loopne
xor
pusha
or
mov
add
lea
mov
fdivrl
inc
mov
or
mov
add
stc
lahf
jecxz
mov
xchg
add
xor
pop
push
push
push
mov
push
mov
xor
fdivl
add
add
es
cmpb
into
js
jle
inc
sbb
adc
call
mov
push
xchg
sti
fnstsw
sbb
mov
out
rclb
loopne
mov
adc
push
sub
cwtl
or
andb
push
add
add
hlt
popa
cltd
mov
rcll
sbb
mov
rolb
add
dec
test
sub
in
faddl
xchg
add
enter
add
pusha
xchg
icebp
mov
stc
xor
lea
in
fstpt
pop
push
inc
add
add
jb
popf
movsl
push
icebp
aad
daa
int
aam
std
push
adc
cmp
and
lret
mov
imul
insl
cmp
add
sub
jae
xchg
fidivl
jge
sbb
loopne
inc
in
inc
cmp
mov
xor
sub
sbbb
sbbb
inc
mov
incb
push
add
pushf
jne
mov
sbb
inc
jecxz
sub
or
std
jmp
in
mov
mov
fidivl
cli
add
es
xchg
roll
movsl
lds
mov
outsb
imul
daa
and
pop
adc
mov
push
adc
in
mov
push
add
adc
jbe
or
andl
in
dec
lock
stc
adc
leave
pop
push
push
add
add
ds
inc
or
scas
xor
cmc
xchg
mov
addb
add
adc
xor
push
or
jle
lods
dec
ljmp
jnp
pop
xchg
js
sub
jo
mulb
outsl
daa
dec
sbb
add
cmp
adc
sub
push
and
aas
dec
adc
mov
pop
mov
aaa
cmp
push
push
jne
pushf
inc
loope
sbb
mov
mov
mov
ror
rorl
mov
je
mov
enter
mov
push
in
mov
in
scas
inc
enter
pusha
xor
sbb
adc
jmp
push
mov
lods
cmp
push
stc
jge
add
sub
add
ficoml
pop
enter
les
lds
push
sbb
and
inc
xor
bound
and
ret
stos
cmp
cmpsl
mov
and
lock
xchg
stos
test
sbbb
sub
xor
andb
stos
sub
outsl
and
xchg
xchg
cltd
mov
mov
mov
into
in
xlat
and
xor
aad
cmp
pusha
add
gs
push
pop
stos
mov
cwtl
hlt
mov
cmp
push
cwtl
pop
and
hlt
pop
xchg
lds
adc
test
aam
ret
aas
cmp
aaa
loope
adc
scas
and
into
insb
ja
and
cmp
jns
lcall
xchg
mov
aam
cmp
cmp
test
cmc
cmp
sahf
test
fnstenv
cmp
jge
cmp
mov
and
wrmsr
sub
imul
sbb
sbb
jecxz
mov
sbb
call
and
enter
aam
cmc
dec
dec
or
pusha
push
outsb
and
ss
stos
sbb
mov
mov
ds
adc
push
add
add
sbb
fnstcw
push
mov
orl
and
cld
loopne
inc
aam
sub
inc
mov
jne
addl
int3
cwtl
push
dec
inc
orl
enter
jecxz
mov
sub
jbe
add
rcll
stos
pusha
inc
xchg
pop
or
or
jecxz
mov
mov
sbb
sti
mov
lods
cmp
push
add
jle
sbb
inc
jnp
dec
loop
lea
mov
or
rep
push
or
fmull
sub
loop
push
addl
jp
lahf
sti
push
arpl
push
in
cmp
repz
hlt
xor
pop
jo
rorb
mov
add
cmpsb
les
enter
add
vmread
mov
push
hlt
push
push
call
mov
shrl
or
fidivl
adcl
or
movsl
pop
pushf
add
mov
add
push
stos
daa
cmc
lea
sbb
sahf
jo
stc
jo
movsb
push
adc
hlt
mov
mov
je
iret
jmp
fstl
test
and
sub
push
sar
test
jb
jle
mov
mov
sub
adc
push
or
add
ja
daa
jb
push
add
call
mov
test
subl
in
inc
rolb
sbb
sbb
adcl
xlat
add
mov
add
movsb
stos
or
cld
xchg
adc
aam
add
push
inc
loop
stos
sbb
fdivrs
ljmp
fwait
sub
add
insl
xor
icebp
addl
add
loope
mov
imulb
sub
test
rcll
push
cmp
mov
adc
push
test
xchg
into
inc
mov
test
daa
mov
mov
lds
sub
iret
mov
arpl
mov
cmp
int
push
pop
andl
addb
loopne
jb
pop
push
lea
pop
xlat
insb
xchg
test
pop
xchg
or
pusha
pop
lods
add
inc
push
and
adc
test
lea
ja
jnp
pop
xchg
iret
test
inc
movsl
int3
mov
mov
push
cmp
lds
neg
mov
mov
sbb
ss
or
sbb
sbb
daa
sbb
cmc
lahf
ret
lret
xchg
mov
cmpsl
scas
mov
dec
test
je
orb
adc
lds
nop
inc
popf
inc
mov
jmp
inc
xor
ss
adc
out
dec
jl
xchg
mov
orl
sub
push
push
lods
and
xor
mov
pushf
adc
mov
rcll
lret
lods
cs
in
in
inc
mov
add
mov
orb
push
or
jl
and
int3
mov
xchg
mov
push
popw
mov
call
in
faddl
test
xchg
sub
in
in
push
leave
push
push
rcll
data16
ljmp
lret
daa
cmp
mov
xchg
inc
jb
addr16
pop
push
xor
loop
mov
push
test
shll
das
lahf
fst
sub
int3
cmp
cmp
sub
mov
sti
push
push
inc
jnp
inc
rcrb
xor
lods
sbb
push
leave
jge
pop
xor
push
push
aaa
jecxz
test
cmp
mov
xor
mov
cltd
xchg
fsubr
ljmp
inc
push
adc
sbb
int3
ss
adcb
cwtl
sbb
sub
movsb
push
pop
pop
mov
add
xchg
push
aas
iret
adc
or
lea
cli
mov
mov
pop
push
cmp
ljmp
jl
jo
cltd
les
add
stc
inc
sbb
mov
or
dec
hlt
inc
daa
inc
mov
mov
add
movb
clc
ret
push
xorb
std
dec
lahf
mov
insb
in
cmc
adc
mov
fwait
lods
add
push
inc
shl
ret
mov
mov
into
sbb
add
repz
xor
push
div
aam
push
insb
add
adc
add
sbb
sub
icebp
js
xor
stc
jne
enter
or
pop
ret
cmovno
fidivl
adc
inc
mov
sbb
adc
mov
and
shl
xchg
push
les
bound
int
cmc
push
sbb
cmp
daa
or
mov
sbb
push
andb
mov
add
mov
pop
js
adc
sub
loop
lock
into
or
mov
cmpsl
sub
cmp
mov
dec
sub
out
fs
je
roll
fdivl
and
push
fistl
imul
xchg
enter
mov
add
mov
push
adc
andl
lods
and
xchg
insb
lock
and
xchg
mov
xchg
mov
aad
icebp
sub
mov
cmpsb
sbb
clc
cmp
lahf
loop
adc
fcoml
cmp
jbe
jno
pop
mov
inc
stc
cmp
enter
xor
push
dec
aad
fsubs
adc
or
lock
push
xor
sub
lock
leave
mov
pop
loop
or
add
and
sbb
xchg
adc
notb
jmp
test
pop
loopne
mov
rorb
or
test
push
push
mov
pushf
or
jbe
push
push
inc
add
adc
dec
loopne
and
push
in
mov
cmp
stos
shlb
mov
cmpb
mov
adc
xchg
mov
mov
xchg
adc
and
pop
ds
xor
aam
mov
inc
fiadds
daa
rcll
ffree
or
sar
push
scas
fwait
add
dec
pushf
push
dec
sahf
add
mov
or
push
stos
or
addb
test
add
cmpsb
pop
cmp
notb
mov
lds
pop
rclb
inc
insb
mov
ds
test
or
cli
stos
xchg
bswap
rcr
dec
push
jae
pop
push
mov
push
add
dec
inc
into
and
dec
lret
outsb
aad
xorb
nop
sub
into
loopne
push
int3
test
pusha
cmp
ljmp
cltd
mov
pop
add
push
mov
ja
dec
js
sub
lahf
pop
push
loop
mov
dec
inc
mov
arpl
les
adc
adc
add
scas
in
sbb
and
pop
js
xchg
cmp
sbb
adc
rorl
jge
sub
inc
daa
test
xor
into
mov
fmull
push
stc
push
test
mov
jl
cs
inc
inc
add
loopne
sub
es
ds
lea
aas
inc
add
add
push
lcall
mov
scas
das
pushf
inc
sbb
jb
mov
inc
imul
lea
into
sub
data16
mov
push
and
mov
int
mov
gs
cmp
adc
adc
pop
cmpb
mov
add
jle
lea
push
sbb
and
shrl
push
rcr
mov
push
dec
ljmp
mov
sbb
or
sarl
xlat
and
sahf
xchg
ud0
or
shll
mov
mov
adc
mov
lret
xchg
adc
pop
mov
mov
push
sbb
call
mov
adcb
test
or
scas
xchg
addb
jmp
arpl
sub
stos
and
cwtl
andl
xor
mov
out
dec
pushf
push
fwait
ss
add
adc
xchg
xor
int
aad
ficoms
add
add
cmp
push
push
mov
inc
rolb
shlb
mov
iret
mov
add
adc
mov
cmp
cltd
or
rorl
movsb
mov
or
lea
add
mov
test
lods
sub
test
pop
xchg
xchg
sbb
mov
push
or
or
push
dec
jb
pop
or
push
xchg
xor
popf
mov
or
xor
xor
nop
add
mov
or
dec
add
mov
inc
and
roll
push
add
insb
lret
pop
pop
sub
inc
add
lret
mov
dec
xor
add
mov
cmp
push
mov
lret
and
sub
mov
das
mov
or
dec
daa
adc
add
adc
test
pop
cli
and
push
xor
cmc
pop
gs
pusha
scas
ficoml
rorl
inc
cmc
jne
push
test
sub
in
jg
sti
scas
mov
mov
and
mov
pusha
mov
push
sar
mov
or
clc
jb
mov
lods
add
popa
mov
mov
mov
sub
adc
das
mov
mov
aam
xlat
jge
je
push
das
mov
jle
mov
and
mov
mov
jbe
mov
add
sbbb
push
and
imull
fiaddl
in
adc
adc
loop
xlat
pop
fcmovnbe
sbb
adc
xor
sub
dec
rcll
and
sub
int
pop
repz
add
aad
jne
pop
mov
stos
movl
pop
test
repz
pop
lahf
les
or
push
neg
add
add
pop
cltd
sub
sar
fldl
out
xlat
dec
test
cmp
adc
mov
sbb
mov
and
sub
sbb
loopw
mov
ret
sub
dec
push
push
and
jge
jne
sub
cmp
pop
adc
push
fidivrs
add
pop
out
xor
push
mov
rcrb
or
cmpl
sub
fidivrs
mov
push
push
jae
movsl
in
outsl
enter
jne
ja
sub
fbstp
es
and
inc
int3
iret
push
call
jbe
xor
sub
cmp
adc
pop
adc
mov
pop
jl
in
or
sbb
pusha
sub
add
mov
mov
or
int
ljmp
lahf
add
or
add
sub
jo
fs
test
xorl
add
subl
add
and
xchg
push
addb
hlt
cmp
jne
faddp
mov
mov
leave
inc
sbb
leave
repz
pop
inc
les
xchg
mov
pop
lahf
cmpb
sub
xchg
adc
xchg
push
loopne
mov
and
nop
iret
movsb
or
shlb
pusha
and
les
sar
push
mov
or
in
cmpsb
mov
pop
cld
mov
inc
add
fsubs
push
ds
nop
addr16
adc
and
in
push
add
int3
mov
test
lds
xabort
rclb
mov
pop
clc
aas
cmpsl
sub
fistl
loop
outsb
lods
addr16
nop
stos
pop
xor
mov
aam
rorl
inc
mov
fs
enter
divl
sub
mov
in
cli
pop
inc
xchg
fnsave
repnz
mov
sar
popa
fmuls
inc
jnp
sub
and
popw
jo
das
xor
lcall
loopne
movsl
cmpsb
js
cmpb
movsl
mov
loopne
ret
lcall
xchg
adc
push
int
jae
adc
pop
add
dec
rclb
push
scas
mov
push
dec
in
xchg
xor
adc
and
int3
dec
rolb
mov
daa
out
mov
mov
fsts
and
pop
jg
sbb
push
in
andb
inc
xchg
enter
xor
pop
cmc
sarl
dec
or
jp
lahf
insl
and
lcall
test
dec
js
add
adc
push
clc
insl
or
pop
or
fmull
adc
xor
xor
rolb
push
stc
jno
add
or
bndstx
mov
push
adcb
loopne
add
mov
bound
adcb
nop
pop
pop
pop
push
push
int3
or
pusha
lds
xchg
and
xchg
aad
loop
cs
push
jmp
push
xor
hlt
loop
loop
or
test
sti
mov
pop
cmp
add
inc
cwtl
imul
jno
test
push
sbb
out
mov
pop
dec
loopne
jo
in
sub
ljmp
popf
adc
sub
push
mov
mov
add
test
fcomi
adc
mov
lret
push
lahf
sub
jge
or
fldln2
and
and
aam
imul
add
and
mov
and
cwtl
sub
fs
mov
les
mov
jmp
add
sub
cmp
sub
orb
fnstcw
inc
nop
sub
bnd
pslld
pop
dec
enter
add
and
add
inc
adc
mov
push
fmuls
jae
mov
cmp
dec
imul
or
inc
push
push
arpl
and
test
dec
mov
jbe
call
sti
inc
mov
decl
dec
jne
mov
scas
add
clc
rcll
cmp
cmpsb
inc
gs
xchg
adc
push
lock
add
jb
pusha
dec
cmp
andl
sub
scas
mov
xchg
cmp
or
fnstcw
push
adc
test
add
adc
or
test
cld
adc
orb
inc
jp
jl
push
push
les
or
mov
or
xchg
mov
test
rcrb
addb
movsb
push
sbb
sbb
cs
mov
inc
add
mov
mov
or
std
push
enter
icebp
adc
inc
ja
push
mov
inc
jbe
or
push
and
inc
imul
pop
cltd
mov
xor
pop
sub
mov
lahf
push
jo
lea
cmp
push
xor
or
mov
out
arpl
leave
std
push
adc
mov
cld
fsts
push
sub
inc
pop
push
popf
inc
inc
in
cmpsb
mov
in
add
sbb
fwait
push
adc
cltd
mov
pop
dec
xor
les
mov
add
aaa
sub
jb
fwait
sahf
xchg
in
sbb
fsts
mov
pop
jg
sbb
add
mov
dec
and
insb
pop
adc
loopne
andl
mov
push
push
test
mov
xchg
cmp
pop
pop
bound
xor
or
je
fldt
rcll
mov
mov
je
stc
daa
jne
and
mov
and
push
push
scas
sbb
mov
inc
repnz
loop
cs
mov
cs
insb
rcr
fstl
iret
add
lods
pop
pop
xchg
pop
in
shlb
incb
mov
lea
mov
test
xchg
inc
in
xchg
fistpl
loopne
jp
mov
xor
into
push
add
outsb
sbb
sbb
mov
or
jl
and
ret
add
rcl
enter
mov
lret
shlb
inc
dec
dec
pop
pop
fisttpl
inc
ret
xor
xchg
jl
sarl
xor
popf
mov
lea
or
in
insb
lret
inc
pusha
cmp
dec
push
or
lds
pop
sub
sarl
dec
adc
push
inc
rcrl
sbbb
mov
inc
mov
shll
jae
sub
or
imul
jle
cld
or
inc
xchg
scas
out
dec
jl
push
pop
mov
and
adc
inc
repz
into
inc
xbegin
lret
sub
jns
cmp
pop
fisttps
rolb
enter
test
leave
add
dec
mov
enter
dec
jg
add
test
stc
adc
mov
push
push
and
popa
xchg
pop
or
movb
or
mov
mov
and
loop
xor
push
dec
push
mov
or
add
sub
add
daa
cmp
mov
or
ds
stos
fwait
test
in
stos
inc
and
adc
out
push
enter
in
fnstsw
out
push
or
pushf
jge
insb
pop
or
inc
out
jo
inc
cmpsb
mov
xchg
pop
in
mov
dec
dec
mov
fsts
mov
adc
inc
adc
jbe
cli
adc
test
sbbb
push
mov
rorb
dec
sub
inc
loopne
xchg
mov
adc
sbb
cmpsl
add
or
xor
push
push
sbb
mov
mov
dec
out
pop
cs
sbb
cmp
pop
jae
push
enter
fldenv
pop
insb
sahf
mov
push
inc
pop
adc
sbbl
and
push
inc
pop
fisttps
nop
daa
jns
or
xchg
int
pop
inc
pop
inc
pop
inc
pop
daa
mov
pop
dec
insb
mov
sbb
ror
mov
enter
and
adc
and
add
jo
mov
and
int3
stc
pushf
xor
lahf
xor
insb
jl
enter
xor
in
jns
pop
orl
test
add
pop
cwtl
dec
push
enter
adc
inc
xchg
dec
add
nop
xchg
dec
dec
cmc
and
pop
pop
aam
xchg
lret
mov
add
jge
and
sub
mov
js
push
sbb
aam
mov
jl
loop
push
xchg
add
jbe
dec
pusha
dec
mov
mov
fildll
sti
adc
sahf
mov
dec
jb
and
dec
mov
fisubrs
mov
add
adc
xchg
inc
leave
int
adc
loopne
lret
mov
adc
xor
pop
or
sub
nop
inc
sarl
mov
push
inc
leave
cmpsb
bound
fidivrs
mov
push
cld
clc
fiadds
lods
scas
rorl
xor
xchg
pop
xchg
xor
pushf
hlt
xchg
or
sub
divl
cltd
pop
and
adc
mov
xor
mov
jmp
sbb
je
xchg
or
fs
aam
out
shr
cmp
add
xor
sub
xchg
dec
into
in
mov
or
aaa
dec
mov
inc
sbb
dec
or
xchg
xchg
or
add
sub
xchg
push
sbb
xchg
jns
je
xor
lds
xchg
test
push
dec
jbe
and
pop
or
test
or
fisubs
jmp
mov
xchg
ret
les
push
add
push
loope
mov
fadds
or
xchg
pop
leave
aad
sahf
icebp
inc
push
push
aas
das
pop
ret
adc
cmp
fsub
adc
mov
addb
adc
aam
out
incl
roll
loop
sbb
add
roll
lock
pop
sub
xlat
or
adcb
inc
or
jno,pt
push
es
push
imul
add
das
mov
negb
push
add
mov
scas
inc
mov
int
dec
add
orl
push
mov
stc
dec
cmp
cmc
xor
fsts
cld
sti
dec
les
and
xchg
or
push
cmp
xor
xchg
popl
mov
xchg
lods
inc
rorl
idivb
or
popf
rclb
sub
outsl
sahf
frstor
sbb
push
push
xchg
adc
inc
mov
incl
xor
sti
push
pop
shll
sub
xor
adc
cs
bound
aas
fdiv
lret
push
shrl
icebp
cmp
inc
xor
cmpsl
xchg
pop
jo
mov
outsl
sub
mov
sbb
sbb
cld
add
inc
cmp
in
or
test
jecxz
addl
xor
lods
pusha
fistpll
orb
cmp
js
or
xor
lea
adc
dec
es
mov
icebp
lock
jmp
sbb
sahf
push
mov
mov
inc
sbb
fisttpll
popa
dec
jbe
sub
sbb
imul
mov
pop
adc
cmp
add
loop
jne
push
mov
fwait
jno
in
out
or
mov
arpl
cmp
pusha
leave
jne
clc
sbb
cli
daa
sub
out
dec
add
icebp
jne
mov
ficomps
pop
cwtl
cmpsb
leave
iret
sbb
test
push
sbb
bound
xchg
or
and
xchg
xor
jmp
dec
dec
mov
adc
scas
les
pop
push
xor
add
jbe
mov
push
and
adc
pop
sub
xor
test
jb
sbb
dec
add
cmp
add
adc
xor
movsb
add
pop
mov
fisttpl
fwait
subl
cmp
pusha
jae
loop
adc
lock
or
testb
fldt
pop
lret
jnp
or
lods
sub
pop
mov
addr16
and
pop
mov
jbe
dec
or
fwait
xchg
mov
call
fs
push
movsb
add
cmp
mov
pop
mov
push
dec
testl
rcrl
mov
xlat
pop
lcall
out
jo
es
sub
outsb
rclb
cmp
je
pop
xchg
fsubrl
loop
push
insb
xchg
push
fnstcw
and
jne
test
loop
push
xor
push
out
daa
pop
add
hlt
fcoms
mov
movsl
pop
push
mov
or
jno
ret
sub
pop
mov
push
aaa
jbe
dec
mov
je
mov
inc
or
push
jg
out
inc
or
mov
mov
xchg
and
pop
add
clc
shlb
mov
cmp
cmp
js
and
or
add
mov
inc
xor
sub
sub
push
hlt
pop
sub
mov
loope
xor
sub
mov
fistl
pop
mov
pop
test
inc
fmull
or
imul
or
sar
and
dec
add
mov
mov
adc
in
mov
mov
sbb
pop
pop
push
imul
pop
icebp
es
bound
add
scas
or
dec
and
lods
bound
pushf
mov
pop
jnp
push
add
push
adc
jp
add
push
mov
movsb
add
sub
inc
mov
imul
mov
sub
jbe
mov
xchg
push
xor
inc
loop
and
scas
push
lcall
loop
sub
push
sub
das
rolb
mov
test
inc
add
call
mov
fisubs
push
ret
ljmp
add
repnz
mov
out
enter
pop
cmp
or
inc
cltd
mov
das
sbb
ss
dec
push
lods
test
sub
in
push
stos
pop
inc
pop
mov
icebp
sub
mov
jo
fidivl
mov
pop
inc
and
or
lods
mov
das
xchg
sub
pushf
lahf
call
adcl
or
jmp
inc
jecxz
das
add
mov
cmpsb
adcb
cmp
pushf
bound
pusha
negl
add
lods
pushf
pop
pop
fistpl
adc
mov
add
or
int
add
push
push
into
movsb
stos
push
jno
je
outsl
dec
push
xchg
add
pusha
fildl
and
xor
mov
imul
xchg
add
or
sbb
ja
aad
pop
lea
repz
cli
pop
lods
and
push
rol
rcll
sub
push
sub
pop
push
adc
outsl
hlt
popf
pop
dec
xor
xor
xorl
mov
xlat
xchg
mov
pop
adc
orb
test
adc
sbb
xlat
push
aaa
push
das
pop
movsb
sbb
bound
js
test
inc
push
push
insl
mov
add
jle
sbb
and
mov
ret
mov
or
sbb
push
push
jnp
add
loop
jl
mov
gs
test
cs
jmp
sub
push
adc
pop
push
jg
test
push
xchg
push
mov
leave
lds
test
or
mov
xlat
movsb
cmp
jl
cmp
pause
out
and
adc
adc
mov
sbb
xor
xor
xchg
addb
outsl
cmp
pop
movsb
push
mov
push
rcll
pushf
adc
xchg
fsubs
push
push
and
test
pop
sti
or
adc
adc
andb
inc
sub
pop
push
les
or
test
xor
xlat
or
mov
inc
std
xor
inc
outsl
imul
je
neg
sub
or
data16
andl
or
mov
data16
pushf
xchg
loopne
in
pushf
imull
outsb
pusha
fcoml
cmc
adc
push
imul
shrb
push
leave
insl
out
jg
mov
stos
fnstenv
or
sub
push
push
pop
test
dec
xchg
lods
lods
scas
gs
in
mov
popa
ds
pop
mov
add
pusha
insb
inc
pop
outsb
xchg
push
xchg
jge
lods
mov
int3
out
or
add
icebp
cmpsb
dec
adc
cmpl
add
adc
les
in
sbb
xor
jmp
mov
and
or
cmp
mov
das
sbb
leave
mov
shlb
or
adc
leave
dec
jb
add
adc
addl
pop
or
add
pop
mov
push
dec
push
int3
rol
or
dec
inc
pop
jne
mov
push
cmpsl
inc
mov
lea
test
mov
mov
lods
mov
adc
mov
mov
inc
aas
add
fstps
jge
pop
inc
dec
or
test
roll
dec
adc
inc
sarl
imul
ds
and
out
push
sub
sub
mov
adc
mov
aad
in
mov
mov
int3
jno
mov
pop
adc
inc
push
ljmp
dec
hlt
imul
xchg
inc
add
dec
mov
xor
lds
pop
lock
sarb
pop
xor
outsb
inc
mov
add
jle
push
rcr
xchg
jmp
xchg
sub
clc
cmp
jle
push
pop
mov
ficomps
add
lret
fnstsw
push
sbb
or
fmull
and
loop
jbe,pt
in
inc
lea
push
scas
push
add
lods
movl
or
test
cmp
sub
inc
jae
jmp
add
inc
mov
imul
cmpsl
mov
sub
jns
rorl
lea
push
mov
add
push
mov
inc
xchg
inc
inc
jge
mov
adc
xchg
push
lock
or
cmpsb
jp
cmp
int3
add
adcb
jl
push
icebp
daa
sub
xor
stos
je
mov
jnp
push
mov
mov
loopne
dec
push
sub
sbb
ds
xor
mov
add
pop
sbb
xchg
hlt
jne
pop
gs
movsb
ljmp
cmpsb
out
aaa
movsb
aas
jbe
xchg
filds
mov
lods
das
pushf
add
add
mov
or
adc
and
xchg
add
cmpsb
adc
and
ja
add
add
lock
mov
stc
xor
pop
les
movb
popa
daa
ja
xor
pop
xchg
test
adc
jmp
lods
inc
jg
test
push
das
cmp
cmpl
ss
mov
cmpsb
call
loopne
rcll
or
push
loopne
decl
cmp
and
adc
lock
or
or
or
test
aas
jnp
xchg
movsb
add
insb
cli
fnsave
push
push
and
and
loope
add
mov
adc
mov
adc
xchg
and
add
sub
xor
xor
xorb
xor
add
mov
andb
pop
dec
hlt
cwtl
inc
sub
xor
inc
add
lea
scas
shl
mov
inc
adc
psubb
roll
mov
add
mov
cmp
imul
int3
cli
push
cmp
add
test
xchg
arpl
fisubrl
xchg
pushf
test
jmp
das
icebp
push
xchg
adc
in
xchg
jno
fcomps
stos
mov
cs
xchg
jp
push
mov
inc
push
mov
mov
mov
sbb
push
outsb
fisttps
stos
cs
orb
lods
cli
sbbb
mov
inc
outsb
cmp
push
push
dec
sbb
add
pop
nop
push
shrl
push
in
mov
add
push
push
test
shlb
aaa
aam
push
xor
dec
test
jmp
sbb
fdivl
lods
or
sbb
test
dec
aam
ss
sub
inc
xorb
mov
pop
inc
inc
adc
mov
mov
int3
xchg
and
xchg
adc
dec
pop
imul
mov
andl
mov
popf
and
add
data16
inc
fcoms
dec
cmc
inc
adc
stc
mov
push
mov
lcall
or
push
aaa
mov
push
add
adc
adc
and
ljmp
fists
js
xchg
mov
xor
lret
nop
xorb
lods
sbb
mov
push
sbb
or
pop
jns
push
bound
push
mov
and
lds
les
xchg
insl
push
jecxz
cmp
dec
jb
cmp
pusha
enter
inc
leave
inc
xor
mov
inc
pop
sbb
insb
dec
push
and
sub
in
xor
mov
pushf
ret
xchg
loopne
add
or
push
scas
ficoml
mov
or
shlb
add
fisttps
scas
pop
rcrl
and
inc
lea
inc
inc
in
les
data16
or
add
dec
int
inc
mov
xor
adc
or
jns
out
xor
lods
xchg
sbb
inc
xchg
test
mov
add
rolb
or
and
or
pop
adc
adc
fdivs
loopne
mov
adc
adc
push
adc
add
mov
push
dec
in
cs
inc
aad
add
add
hlt
jbe
das
popf
js
push
das
adcl
int3
jns
mov
mov
xor
xchg
push
scas
aas
add
cmpl
jne
test
popa
inc
std
sti
out
jle
shlb
push
pop
xchg
adc
js
ja
shrl
les
or
mov
or
pop
movsl
fistl
pop
push
popa
fcoml
pushf
sub
cmc
sub
mov
mov
adc
dec
pop
in
daa
and
test
and
cmpsb
and
jl
lods
loope
rcrl
aas
cmp
dec
test
adc
xor
ljmp
movsb
arpl
or
int
mov
lock
mov
ret
dec
aas
sbb
shl
sub
jl
into
push
push
test
cwtl
add
adc
add
push
and
inc
cmp
jl
jg
dec
or
xchg
cmp
adc
dec
and
dec
rcll
push
imul
pushf
push
push
adc
movsb
push
xlat
es
pop
andb
jge
xchg
inc
mov
sbb
int3
testl
lret
cmp
jmp
or
test
bound
dec
ret
std
push
push
xor
je
add
sub
cmp
test
lds
bound
mov
imul
std
push
sbb
fimull
test
jae
pop
scas
movsb
and
je
lea
push
fcompl
push
fs
adc
aad
fwait
xor
dec
scas
dec
sets
sub
popa
clc
mov
mov
cmpb
push
add
mov
push
lea
lcall
mov
push
jmp
adc
insl
xor
jb
xchg
cmp
push
inc
sub
pop
adc
lock
or
add
mov
ror
insl
or
inc
xor
pop
scas
pop
sub
push
pop
aas
mov
mov
mov
jmp
and
mov
or
pop
and
insb
movl
lret
xor
push
add
inc
xchg
push
and
pop
dec
sbb
mov
jnp
lock
push
push
pop
adc
cmp
inc
sbb
cmp
mov
adcb
sub
shlb
and
pop
xchg
icebp
fisubs
arpl
or
mov
pop
lds
add
sbb
loop
sub
xlat
sbb
loopne
xchg
and
andb
jb
add
das
mov
adc
je
sub
ror
add
test
jno
pop
jge
imul
xlat
push
loope
subb
inc
xchg
pop
dec
ret
aas
and
les
repz
sub
lds
push
mov
push
push
call
neg
mov
jno
and
js
jo
sahf
cmp
dec
xchg
test
mov
loopne
orb
push
test
fwait
rolb
cwtl
and
adc
gs
mov
and
cmc
pop
out
or
add
or
mov
add
adc
xor
mov
hlt
and
xchg
push
mov
je
daa
insb
es
cwtl
add
add
mov
push
shll
jo
int
adc
adc
cmp
and
inc
hlt
dec
js
mov
pop
lods
add
mov
mov
dec
dec
or
sbb
push
data16
or
jle
js
inc
test
xor
xchg
test
je
push
cld
sahf
sub
orb
pop
inc
aaa
xor
sub
daa
sub
pop
sub
lds
mov
dec
loop
inc
jbe
adc
xchg
lods
push
pop
aam
dec
mov
adc
mov
xchg
es
push
and
insb
and
and
iret
sub
push
aas
sbb
mov
nop
cmp
pop
push
mov
sbb
addb
mov
les
repnz
xor
pop
dec
imul
pop
push
jg
xchg
push
int
or
or
xor
xor
fistl
int
inc
test
rorb
dec
mov
or
or
stos
sbb
push
addb
or
sbb
adc
inc
add
mov
aaa
and
push
mov
add
enter
or
adc
sub
test
roll
fs
loop
nop
adc
outsb
push
fnstsw
and
adc
or
pop
mov
push
xor
xor
adc
test
outsl
in
and
and
inc
shlb
das
or
movb
cli
pop
test
jecxz
pop
rol
mov
push
cmc
adc
roll
add
cwtl
rorb
xchg
inc
loop
mov
sets
or
cld
add
aad
sub
push
xchg
insb
push
aaa
lea
rclb
fs
sub
or
adc
push
xchg
andb
pop
dec
lds
jmp
fdiv
punpcklbw
lea
fdivrl
stos
sbbb
mov
aam
in
pop
inc
adc
push
jp
mov
mov
nop
push
lock
fistpl
scas
push
lods
push
fwait
jp
aam
adc
push
adc
xchg
inc
sub
iret
xchg
dec
call
or
xor
adc
fisttpll
pop
add
or
enter
sbb
xor
push
stos
rcrb
add
or
xor
dec
adc
sbb
jl
inc
or
sbb
add
xor
stos
and
cli
push
adc
inc
push
mov
pusha
outsl
mov
inc
fchs
repnz
mov
mov
jb
lea
push
sub
es
cwtl
pop
cmp
inc
xor
pusha
push
addr16
or
mov
sub
lea
xchg
jnp
loop
loop
lret
pop
cmpsl
mov
add
pop
movsb
or
push
mov
add
cmp
pop
adc
and
das
out
xor
mov
adc
scas
sbbb
mov
jle
add
add
pop
or
push
pop
pusha
inc
scas
nop
adc
inc
into
mov
iret
xlat
cmp
push
adc
or
inc
pop
adc
nop
pop
pusha
mov
pop
xor
dec
nop
pushf
pop
xor
push
jb
jae
push
push
inc
adc
test
test
and
push
push
js
sbb
add
and
mov
add
or
xchg
rcrb
jne
mov
test
adc
inc
cmp
xchg
sahf
das
nop
xchg
add
xchg
inc
pop
js
push
add
cmp
cmp
inc
in
jns
jb
nop
mov
xchg
inc
adc
add
nop
addl
mov
xchg
adc
adc
push
push
sbb
jb
adc
adc
mov
push
adc
leave
adc
mov
enter
add
xor
mov
add
dec
cltd
sbb
mov
pusha
fs
mov
test
pop
jnp
push
and
movsb
cmp
mov
add
cltd
sub
ds
lcall
inc
and
mov
cmp
jno
into
lcall
ret
mov
mov
fcomip
xor
or
dec
dec
pop
jl
inc
test
sub
mov
push
cld
ffreep
or
inc
dec
jno
sti
fstpl
cmp
or
jl
jmp
cmp
and
mov
xchg
insb
inc
jne
lock
push
mov
push
iret
or
or
je
or
xchg
les
pop
inc
jns
push
ljmp
cmp
jno
dec
push
mov
inc
adc
push
mov
mov
int
cmp
out
push
or
xchg
xchg
mov
or
and
xor
or
clc
test
sbb
scas
cmp
push
push
test
xor
or
enter
mov
into
jne
shrl
push
mov
ret
dec
inc
cmp
or
popa
into
adc
push
pop
jo
mov
lock
aas
mov
jnp
mov
lods
fdivl
in
push
push
push
mov
add
mov
and
adc
sub
ds
adc
lods
mov
insl
sub
sbb
cmp
push
dec
repz
lds
mov
mov
push
lea
imul
ficoms
cmp
cmp
insb
gs
in
cmpsl
popa
dec
sub
add
push
ss
cld
xchg
add
mov
dec
xlat
sbbl
or
jg
outsb
dec
pop
test
or
dec
lds
idivb
adc
into
adc
mov
jnp
add
push
es
push
into
push
pusha
push
inc
push
sbbb
mov
push
ss
filds
or
and
and
adc
push
inc
and
fnstenv
rorb
jae
jae
mov
or
rcll
fs
add
jle
xchg
cmp
jne
push
or
push
push
or
movsl
pop
mulb
inc
into
inc
adc
dec
jns
addl
mov
inc
and
mov
fwait
jno
or
dec
add
imul
mov
mov
das
mov
decb
jecxz
mov
mov
les
add
push
cld
fstl
decb
push
xor
mov
lahf
inc
and
inc
pop
test
dec
add
adc
add
cmp
pop
and
ret
adc
sub
sub
inc
sbb
lahf
test
js
pop
adc
dec
jb
in
pop
pop
adc
mov
and
sub
jns
nop
adc
js
sub
sub
lds
insl
push
adc
dec
push
mov
pushf
lock
inc
repnz
mov
add
add
xor
push
packuswb
mov
test
fmuls
dec
mov
dec
cmp
xchg
dec
push
sub
pop
adc
insl
scas
cmpsl
stos
push
testb
mov
xor
or
bound
mov
inc
jbe
outsl
cmp
cmp
test
adc
mov
adc
inc
inc
mov
cli
xchg
add
cs
mov
xor
pop
roll
mov
loop
nop
mov
leave
and
test
push
adc
mov
push
pop
adc
inc
icebp
bound
pop
inc
pop
jecxz
xor
or
or
mov
dec
mov
sbb
adc
or
adc
bound
adc
leave
addl
dec
inc
pop
cmpsl
fs
cmpsb
adc
inc
pop
cs
and
or
push
movsb
insb
fmuls
das
enter
leave
in
imul
popa
test
xchg
push
inc
pop
adc
jb
inc
add
lds
adc
adc
cvtpi2ps
adc
add
add
push
sbb
adc
push
and
push
sub
nop
out
adc
cmp
push
push
or
and
push
icebp
xor
push
xor
and
dec
push
push
dec
pop
je
cs
dec
cs
das
dec
sbb
and
jns
jp
pop
push
mov
in
xchg
adc
sub
negb
and
lret
adc
add
push
js
xor
in
das
adc
adc
sbb
lea
mov
enter
add
test
iret
push
push
lea
pushf
adc
loope
mov
and
xor
stos
bound
dec
pop
fiadds
in
dec
pop
sub
lods
sub
adc
dec
push
xchg
inc
push
cmovno
inc
adc
adc
bndldx
inc
cmp
jae
dec
and
dec
test
insl
out
pop
cmp
dec
adc
inc
pop
inc
pop
enter
aas
adc
xchg
pop
inc
pop
iret
xor
orl
and
dec
pop
or
pusha
out
dec
pop
cltd
in
mov
and
cmp
adc
or
push
cmp
and
or
leave
dec
push
mov
sub
pop
dec
lret
pop
inc
fmuls
dec
leave
push
iret
dec
rcrb
andnps
test
sub
push
push
adc
inc
idivb
outsl
jg
stos
add
mov
cltd
mov
mov
std
or
sbb
pop
sub
jno
push
cltd
call
lcall
lods
movb
add
sub
das
add
xor
dec
rcll
add
fwait
sub
and
adc
into
lea
aad
movsb
pop
mov
add
pop
clc
and
aam
push
push
mov
push
pop
cli
pop
inc
mov
adc
fimull
xchg
or
enter
jmp
adc
mov
add
mov
add
dec
jne
pop
jb
ss
add
jmp
insl
or
push
popa
mov
outsl
ja
mov
add
pop
ret
aad
enter
daa
inc
and
out
push
push
jb
add
add
mov
ret
or
mov
add
adc
andb
adc
dec
mov
lods
cmp
lock
mov
sub
mov
sbb
inc
sti
sbb
dec
mov
fisttps
cli
add
hlt
leave
cmpsb
push
jne
test
sub
push
push
or
mov
lret
sbb
sub
push
pop
insb
outsl
push
and
add
xor
push
pop
mov
adc
stos
push
mov
inc
and
rol
jp
and
add
add
jb
and
push
add
push
jno
test
sbb
mov
sbb
nop
inc
cmp
mov
push
int3
add
cwtl
push
mov
add
decl
lret
insb
js
rcl
push
dec
pop
mov
pop
cmp
ret
sub
int
cmp
es
mov
loopne
mov
add
pop
leave
and
cwtl
test
push
push
shl
cs
or
cltd
test
fisubrs
rcl
jns
and
push
mov
je
ja,pn
mov
jl
pop
or
jno
push
sbb
ljmp
cmpsb
push
xor
sub
push
cmp
lds
nop
mov
loop
cmp
sbb
clc
es
mov
push
inc
push
adc
data16
adc
sub
sti
je
inc
inc
je
call
add
call
push
fistl
mov
into
push
orb
in
popf
add
xchg
ret
inc
add
dec
push
out
negl
mov
repz
enter
mov
ja
fcoms
jmp
push
mov
movsb
pop
adc
mov
xchg
add
sub
cmp
mov
daa
xor
cwtl
leave
imul
adc
cmp
adc
xchg
push
out
in
ret
pop
aam
inc
rorl
xchg
push
subb
sahf
push
enter
in
movsb
aad
test
scas
fmull
mov
push
push
jge
movsb
and
fcompl
stos
enter
int
movsl
adc
aam
lock
fsubrl
adc
push
mov
leave
xorb
push
push
and
add
or
add
cltd
repz
sub
scas
fdivrl
push
test
push
lea
cmp
cmovns
push
test
lock
add
dec
adc
xchg
adc
add
fmull
test
jb
pusha
inc
loope
jl
inc
out
inc
adc
les
mov
pop
sub
xchg
mov
sub
lea
and
push
push
sbbb
inc
dec
aam
call
popf
add
or
xor
ret
rcrb
mov
in
pushf
add
sbb
sbbl
add
cli
adc
add
test
loopne
push
add
mov
add
insb
dec
add
add
mov
fdivrs
ljmp
insb
test
fnstcw
pop
inc
or
bnd
cwtl
ss
in
mov
push
nop
push
xchg
out
xor
and
and
rcl
cs
sbbl
pop
or
stos
mov
scas
push
ret
inc
or
adc
and
pop
ret
movsb
push
lock
inc
filds
dec
push
out
and
mov
inc
push
and
je
mov
add
push
sub
xchg
or
cltd
or
cmpsb
xor
adc
imul
or
bound
insb
mov
jp
mov
push
repnz
fldt
loopne
adc
fstps
fadds
push
je
cltd
and
repnz
aaa
xchg
or
rcl
mov
xor
push
fs
add
js
xchg
jns
test
pop
and
imul
or
pop
jno
stos
cmp
sub
fimuls
dec
cmc
repnz
pop
mov
sub
jno
adc
into
test
in
push
lock
xor
inc
lock
add
xor
mov
xchg
inc
xchg
jecxz
jnp
and
mov
sub
insb
pusha
adc
mov
gs
add
fsubrl
push
out
jle
and
mov
adc
add
mov
mov
xchg
or
xor
jl
stos
loope
jnp
enter
pop
montmul
cmpsb
ret
mov
or
xor
and
in
add
jbe
lock
sbb
push
inc
js
push
in
fwait
test
pusha
or
dec
sahf
add
inc
add
and
loop
dec
cmp
mov
rcrb
push
loop
and
call
cmp
jge
sub
divl
fadds
call
mov
test
add
cmp
loope
clc
mov
adc
data16
add
sahf
in
cmp
adc
and
cwtl
adc
jl
mov
pop
inc
shlb
cmpsl
sub
or
adc
pop
mov
sub
push
je
sub
sbb
add
adc
cmp
and
outsl
out
shl
into
gs
lods
test
leave
int3
sub
int
call
adc
subl
shlb
rorl
add
mov
push
scas
push
or
pop
jb
jns
push
in
mov
call
or
inc
js
inc
shll
jge
mov
xor
xor
cmpl
or
pop
enter
je
jg
mov
mov
daa
sub
add
adc
add
lock
xchg
add
leave
pop
sub
cmpb
sub
pop
dec
rclb
inc
and
inc
in
sbb
loop
popf
pop
inc
mov
ss
pop
call
es
test
mov
or
stos
mov
cli
in
adc
adc
jge
mov
arpl
dec
enter
add
in
addl
jl
dec
adc
or
mov
adc
mov
aam
mov
pop
loopne
incb
inc
and
mov
outsl
push
cld
and
push
adc
cmp
outsb
in
xchg
test
push
fcoml
or
mov
mov
mov
xorb
or
add
addr16
insb
push
shll
adc
push
xchg
mov
sub
cmp
adc
add
pop
dec
push
mov
mov
sbb
nop
adc
or
sub
pop
jle
or
sbb
add
mov
testb
jbe
rcl
loope
sarb
es
and
or
nop
xchg
les
loopne
mov
lods
push
std
xchg
xor
test
or
lock
mov
push
add
or
out
mov
lret
push
nop
in
loope
loopne
test
inc
adc
dec
jae
loop
or
rolb
leave
test
or
adc
jge
add
inc
mov
inc
adc
lret
and
icebp
xor
sub
pop
aam
dec
sbb
test
fdivrl
or
and
push
mov
loop
arpl
scas
dec
fimuls
push
pop
test
test
inc
test
lock
repnz
rclb
sbb
enter
sarb
shll
jg
or
movl
jecxz
icebp
or
jl
dec
pop
mov
enter
dec
xlat
loopne
sbb
pop
push
cmp
pop
or
inc
enter
or
scas
rolb
pop
movsb
mov
cli
fisubl
rorl
orl
cmp
mov
ss
subb
xchg
test
push
pop
push
leave
dec
inc
test
push
mov
or
mov
push
sbb
cmp
cmp
add
push
or
inc
mov
sub
sbb
ret
rcl
lock
and
test
sub
int3
cwtl
shll
mov
push
add
cmp
jge
shlb
idivl
pop
aam
fs
push
mov
add
pushf
enter
test
or
insb
pusha
sti
xchg
stos
cli
add
push
jne
pushf
and
sbb
xchg
sub
dec
inc
ret
push
or
pop
push
cmpsl
sub
orb
mov
subb
movsb
xchg
es
sub
mov
mov
imulb
xchg
nop
mov
ret
iret
imul
pop
pop
je
push
movsb
sbb
call
add
add
shrl
pusha
shll
aam
mov
push
xor
add
fistps
inc
ja
insb
or
pop
jge
push
or
mov
add
cmp
mov
xlat
add
aad
cmp
push
xchg
outsb
push
insb
adc
sbb
mov
int3
xchg
pop
mov
dec
out
fmull
cmp
popa
and
jnp
xchg
dec
jae
mov
and
add
xchg
lods
mov
and
in
and
fnsave
pop
js
andl
adc
daa
adc
push
out
mov
jmp
push
cmp
imul
fiadds
lea
sub
pop
lds
push
dec
sbb
mov
sub
push
add
cmc
insl
add
xlat
mov
cmp
lds
mov
adc
adc
jge
cmpb
cmpsb
test
addr16
or
bound
pop
negb
fmull
and
push
pushf
and
mov
cmpsb
pop
sbb
inc
call
inc
or
lock
jne
sub
sbbl
sahf
sub
sbb
dec
lret
dec
xor
call
push
mov
adc
mov
hlt
or
inc
inc
inc
rcrb
adc
inc
sub
or
or
ss
and
lahf
mov
pop
test
adc
mov
sub
xor
sub
outsb
in
in
add
shrb
cmpsb
lock
mov
out
inc
mov
fdivrs
lods
fdivrs
push
push
xchg
sub
loopne
sub
adc
movsl
test
push
inc
jo
int
mov
mov
lock
mov
pop
or
stos
leave
in
gs
sub
mov
test
lock
adc
sub
shll
insb
mov
rclb
dec
xor
cmp
mov
mov
and
dec
mov
addl
es
dec
sbb
aam
sub
or
lds
push
movl
push
and
out
incb
add
push
dec
cmpsl
mov
jae
test
enter
mov
stos
mov
dec
inc
rdpmc
decl
and
add
scas
push
xchg
xchg
push
xor
xor
jmp
push
mov
pop
inc
inc
ljmp
iret
push
aam
push
add
dec
cmp
jo
clc
sub
xchg
sub
or
in
mov
mov
rclb
and
rcll
hlt
shrb
arpl
cld
sub
lar
ss
mov
pushf
bound
and
gs
mov
nop
sub
out
dec
es
mov
mov
dec
dec
push
inc
jno
push
inc
add
ret
inc
mov
int3
fisttpl
inc
jne
cmp
add
gs
lods
push
loop
mov
sahf
xor
inc
aam
xchg
shrw
int
repz
dec
push
pop
inc
add
jg
mov
in
xlat
push
shlb
popf
xor
inc
cmp
pop
movsb
outsb
ljmp
xchg
cmp
jb
pop
testl
aam
cmc
inc
cmp
pop
jl
dec
mov
xchg
lock
dec
sbb
jne
xor
rcrl
xor
dec
enter
bound
and
leave
fiadds
fsubrs
dec
into
es
xor
ljmp
andb
xorl
adc
push
xor
xchg
jno
mov
fidivrl
orl
shlb
or
pop
adc
inc
cmp
jl
add
test
test
ret
xor
adc
adc
xchg
xchg
add
or
lock
push
adc
cmp
mov
imul
mov
and
daa
outsl
lock
mov
scas
mov
mov
adc
popf
inc
xchg
or
mov
xor
test
mov
xor
sub
int
int3
and
int3
push
test
pop
enter
sub
insb
dec
and
test
sub
add
cmp
mov
pushf
icebp
push
mov
test
adc
xorl
or
lock
fs
mov
cmp
mov
dec
call
jb
push
add
dec
cmpsb
xchg
sbb
mov
add
in
dec
xor
shl
outsl
push
out
int3
sub
add
push
movsb
sbb
lock
and
movsb
stos
sbb
test
and
xchg
fs
lret
push
sbb
add
ret
add
inc
inc
xor
mov
cmp
adc
cld
cld
mov
pop
adc
shll
mov
or
mov
lock
shll
lods
xchg
push
inc
popa
inc
sbb
mov
cld
nop
das
cmp
xchg
add
outsb
pusha
xor
inc
ss
or
arpl
pop
dec
inc
or
lret
or
sub
cmp
inc
xor
dec
orl
or
adc
xor
sbb
faddl
int
subb
leave
aad
jo
inc
lods
loopne
fcompl
scas
inc
jo
arpl
outsl
push
enter
adc
and
mov
or
jno
jmp
shl
js
lods
push
jp
lods
or
dec
xchg
cmp
in
mov
sbb
jecxz
enter
stos
inc
xor
daa
and
mov
sbb
add
adc
dec
cltd
xchg
xchg
sbb
pop
adc
xchg
pushf
cmp
push
jb
adc
or
adc
orb
cmp
xor
add
test
xor
xor
inc
mov
pusha
test
hlt
aam
dec
push
and
aam
sub
mov
fs
xchg
inc
and
mov
adc
scas
pop
call
subb
movsb
jne
xor
push
clc
dec
jne
addr16
push
mov
sub
cld
mov
cmp
or
adc
pop
xor
push
fldl
ret
sbbb
fdivl
adc
fstps
cmp
shll
mov
mov
ljmp
mov
sub
sub
xor
insl
xchg
xchg
dec
nop
or
add
push
mov
leave
les
scas
push
sbb
push
xchg
pop
sbbb
adc
jnp
pop
pusha
arpl
ret
or
and
mov
sbb
movsl
scas
adc
repnz
in
mov
popf
outsl
push
lret
or
pop
adc
and
loope
out
or
in
sub
jno
filds
push
jmp
andb
divb
call
lahf
pop
dec
shlb
push
inc
mov
xchg
roll
enter
imul
sbb
push
dec
push
sbb
push
pop
add
cmp
and
and
hlt
mov
adc
mov
adc
shlb
and
mov
lods
mov
or
mov
sbb
xlat
aam
inc
dec
add
fcompp
bound
je
dec
je
inc
test
sub
inc
rorb
mov
cwtl
push
mov
mov
cmp
add
mov
or
xor
cmp
orl
test
cmpb
sub
je
cmp
pop
mov
push
xchg
xor
aaa
or
inc
xor
test
js
out
outsl
dec
in
test
bound
sbbl
and
sub
lods
arpl
or
or
inc
or
and
or
sbb
mov
or
jg
mov
pop
shl
or
mov
cwtl
push
mov
loopne
and
xchg
daa
push
lret
cltd
insb
mov
out
push
cmp
es
stos
in
repnz
call
mov
dec
mov
test
jns
mov
out
add
cmpsl
mov
push
mov
add
lea
adc
fadds
dec
mov
push
cmpsl
mov
push
int3
int3
movsb
lcall
push
ss
shll
cmp
cld
aam
inc
addl
cmp
mov
mov
push
loope
in
andb
adc
arpl
je
pusha
notb
sbb
mov
or
sub
addb
inc
or
sbb
or
mov
bound
jns
call
daa
inc
push
inc
clc
call
and
clc
lret
inc
cld
jmp
jns
sbb
cmp
pop
jmp
sbb
add
cmp
push
inc
inc
inc
dec
sub
nop
xchg
inc
sub
mov
mulb
cmp
sub
dec
add
push
lods
add
push
movsb
inc
out
sub
inc
jb
xchg
mov
jno
push
sbb
inc
cltd
jb
push
pop
sbb
adc
xor
mov
push
lret
or
push
in
mov
pop
xorl
pop
ret
popf
mov
push
lds
add
es
lcall
mov
movsb
movsb
cmp
enter
fnstcw
mov
push
pmulhuw
mov
jno
leave
xchg
pop
mov
faddl
add
add
mov
enter
and
sti
enter
and
xchg
jmp
iret
addb
sti
in
or
xor
inc
pop
in
and
and
shl
out
xor
pop
lds
subl
or
and
push
xchg
lret
inc
stc
aam
clc
or
push
pushf
mov
xlat
sub
or
outsb
repz
mov
sbb
add
test
xchg
xchg
rclb
and
add
dec
movsl
sahf
push
and
pop
ret
xor
aad
mov
add
or
inc
test
lock
push
shr
ja
iret
aas
or
subb
dec
stc
rcrb
cmp
pop
dec
lock
je
adc
push
push
aaa
push
pop
push
shlb
cld
mov
push
daa
adc
mov
pop
or
and
pop
pop
dec
and
jecxz
pop
sbbb
inc
push
ss
cmpsb
jns
lock
sarb
stos
xor
pop
pop
dec
incb
add
test
insb
in
add
and
adc
insl
cwtl
inc
sarb
stos
ds
push
add
test
arpl
jge
cwtl
stos
mov
inc
xchg
add
adc
test
add
popa
xor
jb
adc
cmp
dec
and
inc
dec
push
push
cmp
lock
incl
roll
hlt
pop
orl
pop
clc
lea
xor
or
dec
sub
gs
sbb
nop
lcall
adc
sbb
pop
popa
das
jb
cld
dec
add
sbb
dec
dec
cltd
mov
and
add
and
stos
adc
lods
orl
xor
andb
jno
add
int3
mov
mov
mov
inc
vmread
add
sbb
inc
add
push
jbe
jp
push
xchg
in
mov
mov
cmpsb
mov
dec
leave
enter
pop
sbb
add
sbb
lds
sbb
xchg
sub
and
push
daa
unpckhps
sub
fidivl
or
mov
adc
repz
inc
and
xor
mov
into
inc
jne
dec
xor
rsqrtps
adc
call
loopne
adc
add
pushf
pop
pushf
sbb
stos
add
push
inc
cmpl
test
sub
sub
cwtl
movsb
mov
loopne
add
xchg
add
or
adc
push
mov
call
test
xor
hlt
add
movsb
cli
inc
pushf
push
les
fsubrs
jmp
push
into
js
adc
or
mov
pop
cmp
cwtl
push
or
adc
fadds
ret
jge
add
add
das
fidivl
sub
shr
sbb
pushf
cmp
pushf
mov
iret
enter
xchg
push
mov
add
rclb
mov
push
adc
mov
jne
jo
popf
sbb
loope
in
clc
cmpb
mov
not
fcoms
and
sub
daa
lret
lods
mov
outsl
inc
cs
mov
push
jnp
mov
or
mov
push
inc
xchg
enter
mov
sbb
arpl
jno
mov
mov
inc
enter
mov
adc
mov
sub
faddl
in
ret
mov
adc
mov
inc
pop
icebp
imul
sbb
call
nop
cmp
jb
insl
in
push
push
test
add
or
inc
addr16
lret
adc
inc
popl
xor
jge
imul
pusha
pop
add
push
dec
mov
ror
sub
shlb
adc
add
stos
hlt
cmpsb
nop
bound
stc
inc
lods
push
in
mov
sub
push
xor
les
gs
mov
xor
and
rcl
notb
outsl
add
pop
dec
fldcw
fsts
jne
pop
shrl
in
rcrl
ret
add
pop
sbb
pop
insb
sbb
mov
mov
push
call
fstps
push
pushf
pushf
clc
xor
sub
or
inc
sbb
pop
pop
add
js
push
popl
push
pop
enter
shr
dec
mov
cmp
mov
movsb
dec
dec
rorl
enter
inc
mov
cmp
mov
or
es
inc
xor
push
add
mov
in
mov
clc
sub
test
inc
jl
xchg
inc
mov
fs
nop
push
adcl
pop
out
mov
mov
dec
add
xor
and
xchg
add
fs
je
sub
dec
mov
xor
jne
out
and
or
std
jno
sahf
push
test
and
mov
iret
mov
ficompl
mov
mov
or
or
add
mov
shlb
sbb
lods
ljmp
dec
add
or
and
mov
jo
add
inc
sbb
jmp
imul
in
mov
ret
xor
js
faddl
add
jp
add
add
mov
jle
lds
and
mov
sub
mov
xchg
int3
mov
pop
inc
add
or
or
push
cmp
shll
les
iret
rcrb
cld
in
call
test
pop
add
or
insb
fsubs
adc
cmp
repz
enter
mov
cli
mov
lds
rolb
pusha
push
sub
nop
xchg
or
out
scas
xor
mov
es
lea
punpckhdq
push
fsubs
mov
lods
push
dec
add
and
fistl
push
fsts
push
or
dec
and
insb
ljmp
mov
mov
mov
xlat
sub
dec
pop
xor
push
ret
jne
in
add
adc
stos
leave
stos
sbb
mov
lds
push
aaa
inc
test
push
nop
or
pop
fmuls
add
inc
add
enter
mov
push
pusha
leave
xor
add
sub
pop
push
int3
dec
mov
mov
addl
xor
mov
mov
xor
and
xchg
test
jno
jg
stos
fs
lcall
loop
loop
pop
xchg
fdivl
adc
call
mov
fcomps
pop
pop
mov
lods
jmp
xor
sub
rorl
mov
inc
inc
test
pop
or
outsb
xchg
jmp
in
mov
or
xlat
mov
or
pop
fs
sub
xchg
pop
and
lea
xchg
pop
push
xchg
pop
dec
and
and
and
push
sbb
int
outsb
lea
dec
mov
push
cwtl
lock
xchg
hlt
xor
push
sti
jp
add
sti
mov
xchg
mov
cmp
sbb
push
add
fmuls
cwtl
inc
lock
ds
and
movsb
mov
ret
add
hlt
mov
mov
ficoml
or
test
out
push
mov
adc
xor
enter
insb
add
mov
add
pusha
push
popa
push
adc
jae
pop
cltd
scas
inc
popa
pop
add
clc
bound
pop
hlt
repz
adc
cli
cmp
enter
enter
or
flds
mov
sbb
insb
adc
push
sti
cmc
subl
dec
mov
repz
enter
hlt
cmc
out
adc
add
pop
mov
and
pushl
in
fwait
push
xlat
xchg
out
icebp
aam
mov
mov
add
loopne
adc
movsb
jns
daa
inc
leave
sbb
mov
jle
movsb
mov
push
ret
jo
jne
add
insb
cs
leave
popf
push
xor
subb
lock
push
add
push
adc
sbb
or
push
or
push
loopne
cmp
int3
sub
inc
inc
mov
insb
jle
or
inc
or
mov
inc
add
xor
add
or
fidivrl
inc
inc
pop
dec
sti
ror
inc
add
inc
scas
inc
pop
and
inc
push
pusha
jno
mov
inc
or
loop
jne
xchg
mov
into
or
sub
add
cmp
sbb
fidivrs
cltd
test
sub
sub
jo
lcall
cmpsb
sbb
inc
loope
je
mov
mov
sbb
pop
push
pop
sahf
lods
mov
pop
rcl
nop
ljmp
subl
ss
and
or
inc
inc
rorl
xor
ficoms
and
in
or
pushf
xchg
mov
shrb
dec
push
mov
cli
lods
add
jbe
addb
adc
in
roll
sub
mov
lcall
mov
stos
sub
inc
xchg
adc
push
xor
sbb
jns
sbb
push
hlt
shrl
push
andb
jp
bound
mov
mov
sbb
sbb
pop
int3
jo
and
sti
pusha
adc
adc
xchg
jb
outsl
cmp
push
repz
and
mov
fldl
and
mov
xlat
stos
jo
insl
leave
and
movsb
mov
sub
sbb
jl
or
push
jns
movb
cwtl
sbb
xor
add
adc
sub
dec
dec
addr16
mov
stc
cld
pop
cmp
mov
popl
sbb
popa
add
mov
xor
xor
push
aas
xor
xor
andb
psllq
loopne
adc
aaa
mov
ja
or
push
int3
pusha
adc
cli
jo
popf
loop
jbe
lea
mov
rep
sub
add
sarb
add
mov
enter
mov
and
adc
and
jae
xor
push
inc
lock
std
xor
or
daa
pop
test
mov
shll
inc
xchg
rclb
xchg
dec
dec
je
dec
test
mov
sbbb
or
jecxz
sub
sarb
inc
or
imul
dec
sub
dec
xchg
lods
test
mov
inc
mov
stos
shlb
cmp
bound
rol
rcr
sbb
sub
clc
rorb
popf
adc
sub
xor
sub
lock
mov
cmp
pop
ret
pusha
mov
push
jne
lea
scas
inc
inc
shlb
push
sub
push
aas
cmp
rolb
adc
push
stc
xchg
add
imul
adc
jecxz
int3
enter
mov
xor
inc
xor
xchg
daa
or
sub
adcl
cmpsl
mov
and
or
inc
dec
cmp
sub
push
subb
cmp
inc
pop
into
dec
iret
ja
inc
push
lea
and
push
add
movl
rorb
pop
push
stos
push
xor
mov
in
dec
test
js
bound
dec
fcompl
mov
test
cmpsl
test
andb
and
push
add
jl
shll
mov
mov
adc
fwait
in
adc
cwtl
push
pop
push
loope
adc
jl
imul
sub
push
adc
jl
rclb
add
fimull
test
neg
push
out
mov
lds
popa
push
push
push
or
or
push
inc
mov
add
adc
mov
push
lods
xchg
inc
sub
adc
rcr
and
es
push
jo
insb
out
pop
xchg
push
call
mov
in
and
lea
adc
pop
push
push
push
dec
outsl
xor
or
add
jae
add
fimuls
mov
xor
xchg
lods
and
pop
add
jl
popl
orb
inc
push
add
insl
sbb
dec
or
subb
xchg
cltd
xor
fimull
xchg
dec
les
je
push
or
adc
xor
adc
adc
push
push
mov
stc
sub
sbb
test
xadd
stos
sbb
in
push
sti
push
popa
ja
int3
out
xadd
out
push
sub
xchg
pop
in
pop
add
and
dec
xchg
cmp
pusha
xchg
call
push
lahf
stc
dec
mov
test
inc
test
push
sbb
test
push
dec
data16
mov
imul
test
mov
cld
imul
mov
or
cmp
xchg
iret
add
inc
ss
sub
push
push
in
dec
add
xor
mov
dec
stos
push
push
daa
rcl
pop
add
lods
mov
fcoms
cwtl
lret
or
cmp
add
mov
jno
bound
js
aaa
cmp
mov
dec
dec
dec
pop
push
cmp
pop
adc
aam
dec
pop
dec
pop
push
mov
mov
mov
mov
mov
leave
or
xchg
out
push
add
mov
and
mov
loopne
and
mov
test
add
shlb
push
mov
fwait
test
mov
xchg
xchg
rolb
cmp
rcrb
push
subl
dec
lds
push
jmp
dec
add
call
cwtl
out
aam
adc
push
or
andl
nop
sbb
dec
pop
add
push
test
sbb
sbb
pop
sub
movsb
cmpsb
popa
cmp
add
imulb
hlt
xor
repz
ds
push
std
pop
nop
jle
pusha
adc
ret
inc
aaa
aas
adc
cmpsl
adcl
dec
out
push
test
movsb
push
cmp
fcoms
sub
adc
push
push
movsl
in
mov
or
or
push
bound
xchg
mov
sbb
arpl
out
iret
sub
xchg
filds
or
loop
inc
sarb
or
arpl
sub
jl
nop
jl
cmp
dec
pop
and
jns
lcall
loopne
inc
cmpsl
jp
adc
push
add
enter
js
sahf
ljmp
or
add
gs
in
jns
xor
jo
and
jno
xor
sub
test
xor
inc
xchg
sbb
fcom
and
test
or
outsl
repnz
adc
sub
roll
loopne
into
arpl
and
lock
lret
call
or
add
test
mov
push
jno
jbe
dec
insb
dec
dec
add
add
sbb
imul
cwtl
in
push
fs
pushf
cwtl
fs
aam
jp
xchg
add
nop
ja
mov
js
pop
push
into
ja
adc
xchg
sub
mov
loop
js
adc
xchg
inc
mov
xchg
xor
dec
adc
xchg
enter
mov
lcall
loopne
xor
inc
sub
adc
adc
adc
ficomps
xor
negb
adc
lcall
xor
mov
inc
shll
test
add
cmp
jmp
mov
dec
fmuls
mov
xchg
push
adc
ret
shll
push
dec
lock
pop
cmpl
cmp
subb
insb
jb
dec
add
and
adc
and
mov
or
jb
loop
mov
cld
insb
or
jo
shll
ficompl
lret
add
fcmovbe
xor
cltd
xchg
push
rorl
pop
lds
dec
pop
push
mov
popf
dec
dec
cltd
mov
xchg
out
pop
jo
or
adc
push
loope
bound
dec
iret
add
xchg
inc
mov
mov
xchg
dec
add
cmp
fisubl
movl
cmp
roll
mov
fincstp
and
out
sbb
cwtl
cmp
jb
fdivl
sbb
je
sbb
sbb
sub
push
fldcw
sbb
add
and
ret
fisttpll
adc
dec
hlt
sbb
je
sbb
insb
sbb
or
push
adc
mov
cld
pop
cld
pop
inc
enter
jl
in
xchg
and
sub
and
dec
fsubr
jnp
fdivrs
or
dec
pop
xchg
and
xor
in
lret
adc
xchg
add
dec
adc
or
mov
imul
xchg
sub
clc
fs
adc
push
sub
jle
or
decb
sub
add
add
or
mov
aam
jge
imul
pop
xor
mov
les
testb
nop
mov
or
push
dec
mov
leave
add
push
push
or
inc
rolb
inc
in
pusha
jbe
and
xchg
adc
or
xor
mov
mov
call
in
call
and
mov
add
inc
dec
mov
add
and
add
out
push
mov
pusha
mov
jg
adc
xor
inc
sbb
sub
lock
or
nop
pop
sbb
or
mov
test
daa
push
add
xorb
mov
jne
mov
push
push
roll
hlt
and
je
lcall
bound
add
stos
push
test
jp
mov
adc
andb
aam
mov
stc
sti
insl
push
xchg
inc
aad
xlat
cmpsb
jnp
in
jno
cmp
xor
cli
imul
out
jg
js
and
jae
pushf
pushf
pushf
es
test
out
or
push
sub
mov
cld
dec
icebp
add
mov
and
ret
inc
fs
into
loopne
xorb
sbb
lea
add
ds
shrb
add
mov
icebp
nop
xor
frstor
xor
pop
add
pop
sub
pop
jl
add
lds
adc
xor
in
enter
jg
scas
push
lea
mov
sbb
push
inc
roll
inc
lret
dec
scas
sub
lock
repz
ss
or
and
sbb
jns
push
jo
xor
jns
pop
daa
or
mov
xchg
push
adc
imul
and
sub
add
cmpsb
or
dec
sub
adc
or
mov
rol
push
push
inc
adc
mov
add
mov
sbb
lods
les
mov
adc
xor
and
pop
and
test
sub
aam
inc
sbb
mov
int
or
and
sbb
or
adc
icebp
cmp
ret
sbb
xor
add
mov
pusha
dec
iret
stos
enter
insl
rol
mov
mov
pushw
sub
pop
add
loopne
insl
lods
out
test
inc
cmp
imul
xchg
cmp
push
adc
add
test
js
stos
stc
push
rclb
adc
fs
dec
jmp
lods
fadds
sub
cmp
in
adc
jmp
lea
sbb
xor
or
popa
push
sub
sbb
icebp
pop
sub
or
inc
inc
dec
out
out
xchg
mov
xor
jge
shl
sub
in
jge
mov
jb
loopne
sbb
or
add
scas
bound
flds
lret
cmp
mov
and
mov
xor
ja
xor
adc
icebp
jno
cwtl
les
mov
inc
adc
adc
push
xchg
inc
mov
cmp
aam
adc
and
xchg
aam
sub
fldt
insb
ret
mov
cmpsb
test
pop
sub
mov
cmp
and
je
out
inc
xchg
clc
sub
ret
nop
mov
cltd
xchg
adc
and
push
cwtl
push
push
sub
inc
cmp
push
pop
clc
bound
popa
int3
push
dec
incl
and
xlat
mov
ret
add
xchg
xor
cltd
fdivs
loop
xchg
inc
jnp
adc
lods
and
adc
mov
push
dec
int3
orb
test
andb
gs
push
xor
sbb
imul
or
stos
int3
adc
cmp
int
jo
adc
pusha
add
add
push
push
mov
lds
and
or
or
imul
sbb
or
adc
pop
daa
fcmovbe
pop
rorb
pop
lods
call
repnz
das
mov
xchg
adc
inc
adc
or
mov
mov
push
inc
dec
mov
stos
rorl
adc
sbb
push
int3
das
ja
nop
mov
lea
andl
jae
orl
lock
sbb
push
rol
and
push
inc
daa
mov
stos
mov
jl
xchg
je
clc
movsl
test
mov
xor
xor
push
xor
xchg
push
push
mov
fs
xchg
les
or
sub
pop
adc
jb
loop
sarl
inc
les
sub
test
in
push
lcall
add
sub
inc
inc
jp
sbb
das
and
out
iret
xor
mov
adc
and
arpl
add
push
adc
shll
and
out
cltd
mov
mov
sub
mov
or
sub
add
sbb
pushf
andb
jecxz
lret
ss
add
push
sub
rcll
push
or
lcall
add
test
outsb
adc
push
pusha
repnz
loop
push
cmp
and
pop
push
push
sbb
lds
push
je
shlb
out
inc
and
mov
addb
test
mov
push
jne
mov
shrl
push
iret
adc
push
pop
adc
mov
sub
lock
inc
cmp
lds
adc
stc
imul
adc
cld
adc
add
dec
pop
ss
pop
add
hlt
outsb
in
es
in
in
mov
stos
lahf
lock
add
mov
in
lcall
lock
fisubrl
xlat
and
push
rcll
fcmovbe
xor
sub
adc
outsl
push
dec
inc
inc
cmp
cld
arpl
add
adc
out
add
lds
push
test
andb
sub
push
push
adc
jg
arpl
inc
jno
cmpsl
or
sub
sub
test
outsl
and
pushf
shl
sub
push
pushf
xor
or
mov
aad
mov
xchg
test
jns
or
xchg
cmp
scas
roll
mov
adc
fucomip
mov
jae
and
jb
stos
push
push
xchg
andb
adc
mov
rcrb
push
xor
movl
cli
mov
xor
jo
cs
add
pop
and
andb
test
enter
jnp
push
or
and
adc
pop
xor
jne
xchg
orb
push
mov
in
sbb
pop
lcall
lea
mov
es
lret
adc
mov
ss
mov
cltd
dec
pop
or
mov
call
pop
push
add
loop
mov
inc
andb
sbb
sbb
fnsave
inc
inc
pop
insl
or
push
in
pushf
addr16
adc
je
negl
add
pop
inc
push
loopne
icebp
inc
or
icebp
push
dec
repnz
cmp
stos
sub
icebp
mov
lcall
pop
mov
sbb
or
clc
lcall
jne
es
and
adc
scas
ljmp
push
cmp
arpl
fcompl
subb
je
sub
clc
push
sub
pop
divl
repz
lock
mov
push
adc
cmp
sub
mov
push
lock
push
push
inc
xchg
pop
out
add
push
mov
call
xchg
push
mov
imul
jbe
mov
add
and
orl
movsl
mov
pop
cmp
test
push
iret
cmp
adc
repz
and
test
lea
in
or
ds
add
in
out
pop
call
int
pop
or
lds
jp
fists
adc
mov
add
cmp
out
dec
push
in
push
push
dec
shl
scas
int
out
sub
subb
mov
fsubr
into
mov
push
xchg
mov
sbb
mov
fldt
cmp
cli
adc
sbb
out
fs
dec
or
sub
sub
cld
sub
inc
sub
pop
adc
add
add
xor
jbe
sub
fisubl
or
ficoms
push
sub
or
adc
cmp
adc
adc
repz
or
pop
aas
fbstp
pop
and
cwtl
jg
inc
adc
sbb
pusha
inc
arpl
sub
adc
test
inc
sbb
pop
adc
shll
mov
dec
adc
loop
pop
dec
inc
adc
push
les
stc
adc
out
adc
dec
sbb
push
mov
jne
sbb
je
int3
sub
icebp
fs
add
mov
dec
add
and
hlt
andl
hlt
inc
push
dec
mov
mov
cmpsb
mov
lock
push
out
add
fldcw
adc
dec
mov
pop
sub
cmp
mov
adc
add
scas
adc
xchg
sub
repnz
fwait
nop
sub
idivb
xchg
cmp
pop
pop
ret
dec
orl
or
inc
mov
cmp
cli
lods
jle
push
mov
mov
jmp
and
cmp
push
inc
or
add
or
lock
cmp
fsubrs
xor
push
stos
cmp
test
xchg
sub
inc
add
mov
and
or
mov
lds
mov
sbb
jo
or
ljmp
and
rorl
mov
jl
xor
xor
push
jbe
enter
in
inc
lock
dec
xchg
mov
and
dec
or
sarl
std
mov
inc
sarb
xor
sub
movb
inc
or
int
xchg
add
push
enter
and
std
or
inc
xor
pop
mov
dec
andb
inc
add
in
shrl
scas
push
mov
cmp
inc
adc
pop
jne
push
pop
es
jns
mov
adc
enter
gs
mov
test
inc
push
insb
jge
or
icebp
leave
movsl
inc
lret
fcompl
movl
ljmp
ret
lock
loope
int3
in
pop
mov
fisubs
dec
xchg
add
lds
xor
in
inc
inc
addr16
pop
pop
cld
or
jecxz
and
enter
scas
js
add
leave
inc
mov
mov
or
push
callw
or
clc
dec
mov
js
jb
int
push
push
cmp
xchg
adcl
jecxz
mov
fdivl
pushl
lret
mov
fisttpll
push
mov
popa
pop
jne
jecxz
push
loopne
insl
adc
inc
xchg
movups
add
leave
add
or
je,pn
sub
push
mov
cltd
and
pop
subl
lds
pusha
jnp
sub
mov
fimull
bound
sub
mov
fstl
dec
inc
pop
push
divb
mov
mov
xor
mov
xchg
or
test
ja
pop
cmp
ljmp
jle
test
into
orl
inc
xor
movsb
aaa
push
cltd
cmp
jmp
or
aam
push
icebp
fistl
or
test
loope
leave
cmpsl
adc
in
movsl
in
cmc
sbb
sub
cs
jo
stos
sti
aas
std
test
pop
xor
mov
cmpsb
or
or
push
add
or
adc
test
add
fimull
or
xor
jge
inc
repnz
int3
mov
test
adc
inc
adc
jbe
mov
dec
enter
mov
or
adc
call
inc
sbb
ret
xor
jle
mov
je
sub
sub
xchg
add
insl
or
sub
xchg
pusha
movsb
and
lret
or
add
sub
rclb
mov
ret
or
add
push
cmovl
add
test
cmpsl
movntq
out
or
sbb
mov
fcomp
or
cmp
cmp
aam
fs
iret
mov
jl
shrl
jo
mov
sbb
mov
add
fadds
dec
or
add
pop
push
xlat
mov
sbb
xchg
call
mov
test
xchg
sub
and
push
insl
and
pop
pop
sbb
ss
add
dec
and
or
jo
les
cs
push
lahf
mov
xchg
fcmove
adc
cmpsl
rcl
xor
and
stos
add
mov
push
add
or
fbstp
push
mov
adc
addl
movsb
mov
pop
xchg
mov
fwait
jns
das
or
mov
mov
cs
sub
add
inc
fldt
adcb
inc
ds
inc
add
mov
add
cmp
rcrb
push
push
aam
leave
add
sub
fst
push
xchg
push
mov
adc
mov
mov
inc
jg
push
lahf
js
xor
adc
mov
xor
inc
pop
call
xchg
inc
ret
je
leave
or
adc
pop
rclb
mov
stos
pop
insb
or
lahf
or
ds
insl
pop
xor
popa
dec
and
outsl
inc
adc
dec
or
push
mov
data16
dec
inc
icebp
dec
xchg
push
add
cmp
push
rcl
push
add
cmp
inc
js
shll
inc
push
pop
push
shlb
cwtl
daa
mov
sarl
push
push
pop
push
in
data16
inc
int3
fidivrl
nop
sbb
je
xlat
inc
daa
dec
mov
add
add
and
int
adc
pop
xor
mov
js
add
cmpl
push
inc
stos
addb
sub
mov
je
in
divb
loopne
push
mov
push
add
ret
insb
test
pop
ret
arpl
jns
push
sub
nop
mov
mov
inc
fdivr
xchg
xchg
mov
sub
mov
mov
sbb
and
out
push
dec
mov
addr16
mov
sub
sub
out
arpl
push
faddl
inc
sub
cwtl
in
cld
fisubrl
sub
push
bsr
xchg
es
adc
xor
clc
mov
push
mov
aaa
sar
push
ljmp
push
mov
pop
jbe
and
jle
orb
jp
jge
mov
push
scas
jb
inc
add
or
inc
shr
hlt
or
mov
jno
push
aam
fucomi
dec
shll
rorl
mov
dec
dec
mov
cwtl
sub
subl
add
cmc
mov
mov
or
js
ret
div
mov
aad
adc
xor
sub
sarl
mov
mov
add
mov
mov
jns
jp
push
adc
gs
rol
xchg
sahf
push
adc
nop
adcb
imul
ja
dec
leave
jbe
test
sub
fmuls
xchg
pop
add
or
xchg
mov
push
je
lret
or
mov
and
in
fbld
je
cmp
push
dec
push
and
rolb
dec
and
pusha
cmp
cmp
icebp
pop
push
adc
lea
mov
mov
mov
insl
xchg
mov
popa
bound
mov
and
add
pop
add
mov
add
mov
lds
add
xor
rorb
push
xor
adc
repnz
inc
xor
sub
or
addr16
inc
dec
idivb
das
add
jne
push
lahf
cmp
and
or
fsubs
lock
shlb
test
adc
outsl
sbb
nop
lret
test
movsb
pop
repnz
cmpsb
test
pusha
mov
and
lods
mov
push
nop
xchg
cwtl
pushf
or
add
pushf
dec
push
fs
dec
stos
insb
mov
nop
pushf
in
mov
leave
add
mov
mov
mov
int3
addb
or
cmp
mov
push
inc
push
and
add
int3
popa
adc
imul
repz
sub
cwtl
sbb
jae
jle
mov
pushf
lds
push
pop
popa
int
adc
xor
pop
push
movsl
icebp
pusha
add
pop
adc
sub
and
sti
inc
adc
cwtl
dec
mov
loopne
fcoms
add
adc
sahf
jp
jbe
mov
into
insl
inc
sbb
and
sbb
and
add
adc
adc
aas
dec
jo
add
fmul
mov
jae
pop
ja,pn
inc
and
mov
push
add
sub
adc
psubusb
push
sarl
inc
ljmp
jbe
cmp
sarl
call
cmp
push
push
xor
or
mov
adc
into
inc
mov
jae
inc
sub
jmp
xchg
xchg
in
pop
or
add
lret
lds
es
orl
rcrb
add
in
fs
adc
dec
push
mov
mov
ss
ror
mov
or
nop
add
cltd
sub
push
dec
cs
pop
sub
add
mov
mov
xor
sbb
es
shr
mov
pop
sub
push
jmp
cmp
divb
push
and
scas
cmp
push
bound
mov
and
jno
pop
scas
or
sub
pop
pop
sub
int
sub
push
std
iret
mov
inc
mov
or
clc
in
xorl
inc
adc
test
sbb
int
sbb
mov
std
add
add
pop
test
mov
les
test
adc
pop
andl
pop
mov
pop
mov
adc
mov
dec
add
and
inc
insb
xor
adc
test
andb
les
call
jmp
add
xchg
adc
add
pop
inc
fistpll
cmpsb
or
inc
hlt
push
mov
mov
aam
loop
jmp
aas
clc
mov
shl
add
popa
add
push
push
pop
cld
fiaddl
inc
mov
imul
xchg
pop
xchg
push
add
jb
stos
xlat
adc
fsts
xchg
aam
cmc
xchg
mov
mov
inc
pop
cmc
xchg
or
dec
mul
orb
xor
fsts
daa
jl
pop
and
pusha
lea
sub
sti
pop
bts
clc
fwait
rcrb
movsl
lcall
ret
lahf
pusha
mov
sub
or
or
mull
stos
neg
push
and
xlat
adc
call
sub
rorl
inc
lock
push
fcoml
lods
fcompl
test
xor
rorb
sub
sbb
je
mov
inc
and
dec
mov
cmp
cmp
int3
push
les
mov
cmp
cmpsb
sub
lea
notl
testl
and
orb
mov
jo
mov
outsb
jbe
adc
add
mov
loopne
scas
rol
inc
lock
ss
and
movl
test
pextrw
addr16
lea
and
adc
cwtl
xchg
xchg
fisubl
aaa
loop
movl
jmp
in
mov
mov
dec
out
ret
pop
callw
push
mov
leave
out
dec
rcll
push
xchg
adc
push
or
mov
aam
adc
out
pop
test
fcoms
dec
cmp
and
inc
inc
popl
adc
xchg
add
xchg
sub
pushf
add
shrl
sti
vmovaps
scas
or
or
mov
test
jge
pop
jl
xor
dec
insb
pop
push
neg
cltd
into
add
xor
push
sub
push
pop
fcmovnbe
mov
jno
lods
xchg
out
sbb
mov
sub
adc
mov
cmp
cmp
lds
cmp
pushf
mul
adc
ljmp
popf
jg
or
mov
mov
movsb
mov
sbb
sbb
xchg
mov
xchg
int3
ret
fmuls
jb
push
andl
aam
sub
mov
mov
icebp
fisttpll
inc
jnp
js
rolb
daa
mov
shr
cmp
adc
call
dec
add
add
push
mov
dec
mov
adc
out
push
adc
and
ror
test
sub
std
invlpg
dec
je
or
in
je
aaa
ret
sub
and
sbbb
popa
push
push
dec
in
sub
xchg
push
int
sub
inc
sub
xchg
mov
mov
fmuls
inc
inc
add
jg
adc
pop
and
cli
lds
jnp
jg
movsb
daa
stos
fisubs
les
inc
mov
gs
mov
mov
push
xchg
xor
ja
mov
js
pop
sti
push
push
sarl
lret
sub
int
inc
mov
mov
push
movsb
xor
outsb
rcrl
aam
ret
adc
or
clc
push
ja
add
jne
cli
xchg
je
pop
je
int
test
gs
jo
adc
fildll
inc
ret
push
scas
jl
fldenv
push
add
loope
add
inc
iret
mov
inc
push
aam
xor
add
xor
fwait
fs
ficoms
or
pushf
jge
xlat
push
dec
jp
xor
daa
cmp
add
sub
mov
push
rolb
enter
test
add
lods
stos
pop
add
cwtl
sbb
add
inc
nop
mov
add
inc
ficompl
push
and
jae
fnstenv
stos
or
mov
pop
in
adc
clc
rcll
cmp
or
shlb
mov
cmp
pop
push
jns
stos
cwtl
or
add
and
push
xor
mov
adc
loope
adc
adcl
xchg
adc
lea
mov
rcrb
add
inc
aad
add
imul
aaa
pmuludq
push
jne
ds
pop
repnz
or
sub
iret
xchg
sbb
mov
sub
lret
rcll
add
xor
iret
icebp
dec
dec
push
and
push
in
clc
clc
and
add
push
shll
and
in
das
mov
mov
push
mov
int3
mov
jl
test
cmp
dec
enter
jl
mov
or
or
pop
lock
addr16
add
jbe
leave
inc
or
add
push
mov
cwtl
add
or
xchg
fldt
adc
sbb
lock
adc
scas
adc
fmull
xchg
imul
xchg
mov
out
fcomps
ret
xor
cmp
aad
or
imul
es
popa
xchg
push
hlt
xor
loopne
and
inc
adc
or
push
lds
rcrb
pushf
cmp
adc
sbb
pop
jmp
cmpb
adc
jecxz
push
aam
lcall
mov
fcomp
aam
shlb
jg
lock
nop
cmp
inc
mov
mov
mov
add
cmp
and
loop
gs
mov
addb
inc
mov
xchg
and
in
pop
mov
sub
push
cmp
mov
xlat
aaa
jecxz
or
mov
mov
jecxz
cwtl
fisubs
iret
add
test
jo
jp
loop
and
inc
in
jmp
or
clc
push
inc
or
data16
add
adc
or
dec
mov
jno
add
test
and
fadd
mov
aaa
scas
int3
inc
jae
in
inc
lock
je
adc
loop
pop
cld
enter
js
mov
pop
inc
xor
out
adc
andb
and
adc
or
testl
push
mov
fs
add
roll
pop
test
xchg
fcompl
add
or
mov
mov
dec
js
cmpsb
in
out
lods
push
cwtl
cmpsl
loopne
mov
sub
mov
sub
ret
lods
push
shl
cmp
ss
gs
fdivrp
ljmp
loope
repz
loopne
cmp
int
pusha
inc
xchg
add
cmp
outsb
mov
dec
push
adc
jp
popa
add
sub
roll
into
xchg
cwtl
and
faddl
jge
xor
int
sub
test
daa
or
sbb
ljmp
fs
or
jmp
add
push
clc
push
and
subb
cmp
fcoms
mov
adc
sbb
rcrl
jo
cmp
dec
jge
lods
adc
push
mov
xor
push
add
push
inc
push
iret
or
or
sbbb
fcoml
jo
adc
cwtl
push
xor
mov
aad
push
lahf
pop
rolb
push
out
push
mov
mov
test
mov
dec
push
and
mov
andl
pop
das
addb
mov
pop
fcoms
sbb
cwtl
inc
dec
in
ds
filds
mov
dec
mov
sbb
scas
pop
mov
scas
gs
add
inc
fyl2x
xchg
or
push
push
add
stos
sbb
sbb
dec
push
and
sub
adc
gs
out
sub
jp
inc
pusha
fadd
and
inc
sbb
dec
mov
fcoms
and
adc
add
lea
out
cmp
mul
mov
jae
mov
push
cmp
repz
pop
loope
lock
mov
add
rolb
push
popa
out
add
pusha
push
sbb
enter
shr
enter
mov
push
jl
cwtl
inc
or
cmpsl
xor
and
cwtl
out
pop
mov
fsub
in
or
fdivl
and
add
or
dec
daa
popf
mov
sub
mov
popa
vpcomw
xor
int3
ret
stc
mov
add
sti
fisttps
aaa
and
lods
gs
out
xchg
push
or
hlt
and
cmp
push
adc
adc
in
in
or
inc
lods
int3
adc
cmpsb
out
fisttpl
jecxz,pn
ljmp
cmp
push
out
pop
je
jp
sub
jo
insb
shrb
and
insb
pushf
adc
xchg
cld
push
xlat
mov
pusha
cmp
pusha
mov
mov
dec
cmp
jno
push
jo
inc
sbb
rorb
inc
hlt
loopne
dec
imul
popa
sub
int3
mov
mov
xor
add
decl
cmpb
leave
mov
inc
or
es
lock
sbb
subl
cmp
add
nopl
popa
inc
test
insb
les
jne
mov
ret
inc
hlt
xor
mov
jge
mov
stos
add
xor
stos
push
inc
pop
roll
sbb
inc
lret
xchg
ret
mov
push
arpl
xchg
xchg
xor
out
sub
icebp
into
ret
inc
and
push
dec
enter
inc
cmp
pop
push
dec
pop
xor
stc
add
sbb
xor
xor
pusha
dec
xor
out
mov
and
add
cmp
mov
jecxz
test
mov
xor
jns
adc
rorl
jns
adc
cmp
push
movsb
mov
lock
sbb
scas
mov
xchg
addb
fdivr
mov
out
test
dec
stos
mov
push
cmp
or
shll
insl
push
out
lahf
sbb
test
push
cld
sbb
test
and
mov
leave
pop
pusha
adc
cmp
inc
jl
lcall
inc
pushf
jae
bound
inc
cmp
push
mov
je
push
inc
mov
lea
mov
or
jns
pop
add
mov
lds
adc
mov
cmp
dec
loop
lods
dec
adc
sub
cld
push
data16
loopew
adc
adc
or
xchg
test
addl
daa
mov
pop
jnp
inc
jmp
and
mov
pusha
shl
cmp
insb
insb
hlt
insb
push
fistpl
mov
push
ljmp
fdivrs
inc
xor
dec
int3
test
aaa
stos
mov
int3
and
cltd
and
pushf
std
add
xor
jl
push
and
iret
xchg
pop
or
add
loopne
pop
inc
push
enter
inc
and
add
push
repnz
mov
or
pop
xchg
adc
outsl
in
iret
add
lock
xchg
pop
or
rclb
repnz
je
jnp
in
scas
cmp
dec
and
lea
jns
push
test
rol
mov
sub
push
pop
add
andl
mov
and
insl
insl
inc
inc
add
dec
cmp
mov
push
std
add
adc
mov
addl
sub
inc
and
push
sbbb
pop
adc
cltd
movsl
addb
dec
dec
dec
push
pop
aas
arpl
pop
leave
es
cmp
pop
adc
push
xchg
loopne
push
and
movsl
adc
dec
adc
loopne
cmp
mov
adc
adc
adc
insl
push
dec
or
cmp
pop
int
mov
cmp
nop
inc
push
xchg
jae
or
leave
adc
cmp
dec
cmc
xor
add
sub
inc
mov
add
push
push
and
pop
insb
or
jecxz
pop
jb
nop
mov
jo
int
sbbl
lret
dec
int
es
jne
pushf
aam
fnsave
aam
and
loop
or
int
test
cld
push
into
jg
inc
dec
push
pop
mov
leave
pop
push
jmp
mov
orl
mov
dec
and
inc
ret
insb
mov
sbb
xor
adc
sub
filds
jl
pop
mov
sbb
push
in
or
mov
ja
adc
pop
insl
xlat
cmc
mov
mov
cmc
or
outsb
push
or
imul
out
stos
int
push
push
mov
pusha
adc
lds
pop
inc
add
jne
sbb
xchg
and
mov
sbb
and
cli
adc
push
iret
movsl
add
and
pop
cmpsl
mov
pusha
mov
sbb
int3
lds
and
roll
test
es
dec
subl
cmp
rorb
sub
or
push
jl
cmpsb
sub
xor
and
add
sub
add
fldenv
sbb
xor
add
pop
inc
add
in
mov
les
push
jmp
pop
aam
cld
test
xchg
mov
cmp
sub
and
inc
cmp
movb
rorl
add
inc
aam
sub
adc
ljmp
and
mov
int
add
add
push
push
push
scas
data16
add
jns
inc
sub
dec
push
add
mov
dec
out
push
mov
sub
add
cs
xchg
xcrypt-cfb
cmpsl
gs
cltd
push
push
dec
mov
push
sbb
add
std
inc
push
cmpsl
pop
sbb
and
xchg
sbb
jne
inc
mov
mov
adc
stos
push
inc
adc
loopne
inc
or
mov
hlt
mov
and
loop
and
idivb
and
inc
cmpsl
lcall
and
dec
or
aaa
mov
push
sbb
mov
xor
lods
dec
adc
rcrl
xchg
add
popa
push
neg
cmp
jb
add
sbbb
dec
mov
cmp
sub
hlt
mov
xor
push
push
les
fcmovb
das
stos
jnp
enter
lret
inc
add
add
pop
and
or
in
push
jmp
jne
stos
sub
mov
mov
pop
inc
pop
movsb
add
jle
sub
push
test
inc
shl
cmc
int3
dec
push
adc
or
lret
mov
lcall
sbb
test
sbb
and
ret
xchg
lea
test
cltd
insl
and
nop
dec
sbb
adc
adc
mov
imul
mov
or
or
adc
ds
aad
aam
cwtl
xor
pop
ss
test
xchg
insl
push
mov
jg
jbe
inc
jo
pop
push
and
pusha
jbe
mov
cmpsl
xor
movsb
cli
fwait
push
outsb
xor
inc
push
pop
xor
xchg
lock
bound
add
bound
add
push
sbb
cmp
inc
add
ljmp
adc
push
ljmp
or
rorb
into
mov
xchg
sarb
daa
or
std
mov
add
gs
shll
int
or
xor
sub
pop
and
inc
or
mov
jb
cmp
and
and
mov
mov
dec
push
gs
or
and
and
loopne
push
adc
or
xchg
mov
adc
cmc
ret
dec
jb
jno
mov
add
daa
repnz
loope
insb
and
pop
out
add
push
adc
push
mov
clc
push
inc
sbb
add
add
xchg
andps
push
inc
xorb
imul
test
adc
stos
pusha
inc
xchg
or
sbb
imull
push
nop
pop
xor
mov
xor
add
movb
inc
in
dec
sbb
and
xor
sbb
inc
xor
adc
dec
or
jns
sub
sbb
dec
ret
inc
mov
test
dec
sbb
loop
mov
pop
xor
inc
mov
test
pop
int3
pop
mov
pusha
mov
and
fdivrl
inc
add
aaa
xor
addb
iret
inc
mov
hlt
pop
hlt
pop
hlt
pop
push
enter
pop
lock
hlt
dec
add
adc
and
add
push
or
ret
je
fmull
or
pop
or
inc
dec
sbb
fcomip
pop
dec
pop
and
hlt
pop
hlt
pop
jns
bswap
hlt
pop
add
mov
pop
pop
in
add
add
mov
out
mov
jb
filds
or
jp
filds
dec
ds
sub
in
mov
and
imul
add
add
rcll
hlt
pop
repnz
pop
push
and
adc
jecxz
hlt
pop
sub
cltd
adc
jecxz
jecxz
orl
jns
enter
pop
in
enter
hlt
pop
repnz
add
pop
add
or
scas
xchg
inc
hlt
pop
hlt
pop
lret
adc
hlt
iret
hlt
or
xor
enter
add
hlt
cmpsb
add
hlt
pop
hlt
leave
mov
sbb
adc
mov
and
xchg
xchg
and
hlt
pop
outsl
das
inc
sahf
inc
xor
pop
mov
pop
mov
adc
scas
hlt
mov
and
in
and
push
pop
popa
pop
or
jns
add
into
add
push
pop
mov
or
fbstp
call
icebp
cld
neg
jp
push
push
cmpsl
inc
and
mov
or
les
insb
inc
pop
xor
enter
or
sbb
add
stos
pop
lcall
call
inc
or
int
repz
clc
int
mov
and
stos
push
shlb
pop
out
fs
pusha
inc
shrb
js
in
pop
adc
mov
sbb
adc
mov
and
cmp
push
jns
mov
mov
push
int
xlat
jb
nop
fwait
push
mov
inc
aam
mov
orb
xchg
into
or
push
xchg
fs
sub
aam
inc
pavgb
or
or
mov
push
in
xor
push
push
mov
dec
and
and
mov
add
inc
and
and
push
hlt
and
addr16
inc
mov
add
stos
cmp
push
shlb
xchg
jo
add
inc
cmp
add
add
xor
pop
out
and
adc
rolb
sbb
inc
movsb
xchg
insb
sbb
das
fistl
test
mov
inc
in
das
push
push
rcll
inc
and
and
add
mov
mov
inc
stos
cltd
mov
jle
enter
add
sbbl
gs
es
vpunpcklwd
add
xor
adc
sub
test
add
mov
push
inc
lods
and
punpckldq
adc
cmpsb
test
jmp
movsl
and
xor
push
cltd
xchg
xchg
jl
rdtsc
lcall
shrb
sbb
add
cmp
pop
jbe
mov
or
das
and
push
adc
xor
pop
cld
ret
inc
jns
or
xor
add
dec
mov
icebp
mov
xchg
push
lock
cmp
sub
hlt
movd
add
dec
xchg
pop
pushf
sub
xor
adc
lods
or
sbb
aad
add
add
mov
push
pop
or
orl
shrl
aad
movsb
mov
and
jns
jle
or
pop
push
add
sub
jle
into
nop
sub
sbb
pop
es
lret
into
or
add
push
mov
or
gs
push
sbb
push
enter
pop
cwtl
xor
popl
enter
mov
rorb
jbe
lock
add
xchg
jns
mov
cmp
jne
mov
ss
mov
push
sbbb
adc
out
mov
out
and
neg
sbb
pop
add
adc
sarb
adc
jb
subl
adc
sub
les
loope
aad
ret
mov
push
fidivs
pop
pop
data16
sub
push
jo
addl
enter
loop
or
cwtl
push
add
push
lds
mov
push
sub
xor
sbb
mov
cmp
or
or
push
cmp
push
add
out
fistpll
lods
dec
scas
lock
add
sti
sub
push
ljmp
xchg
mov
ficoml
repnz
sbb
push
filds
outsb
xor
in
incb
cmpb
jne
inc
or
mov
repnz
jbe
aam
sbb
adc
testb
mov
mov
aam
sub
jbe
jmp
push
pop
adc
push
call
imul
fidivs
mov
out
jae
in
loop
adc
aad
hlt
mov
arpl
nop
cwtl
test
outsb
test
adc
add
adc
lea
ret
ret
inc
shlb
and
repz
ljmp
or
push
ret
push
subl
popa
test
inc
inc
fidivrl
pop
adc
push
jg
or
sub
push
sbb
push
dec
pop
or
mov
fwait
aam
add
ja
mov
sub
add
ret
xchg
jmp
pop
cmpsl
stc
push
adc
mov
mov
push
push
lcall
loope
ret
mov
jge
xor
in
and
pop
xlat
push
and
add
subb
jb
movsl
and
out
sbb
xor
stos
inc
jne
pop
or
adc
mov
stos
fwait
or
jmp
pop
inc
sti
fistpl
outsb
lea
movsl
jbe
and
pop
cmp
pop
push
xchg
inc
mov
push
push
mov
jp
cmp
xlat
xlat
fstpt
loope
mov
je
inc
cmp
jmp
push
clc
sti
lods
jp
mov
push
or
jmp
or
rorl
sbb
inc
ds
jae
loope
and
adc
and
cmpsb
adc
loope
push
or
ds
xor
sbb
xor
cltd
sub
movsl
andl
ljmp
and
inc
je
sbbb
mov
push
enter
pop
int3
pop
rol
dec
dec
push
ds
or
or
pop
sbb
or
int3
subb
dec
adc
sbb
mov
add
or
jo
mov
adc
add
add
cmp
and
insb
dec
mov
mov
aaa
add
push
inc
ret
mov
adcb
or
fs
fsubr
sbb
sbb
in
add
sbb
push
repnz
mov
int3
dec
adc
and
lea
in
push
mov
dec
push
insb
shlb
or
test
mov
and
dec
push
push
aas
mov
fcoms
sub
mov
in
sub
leave
xchg
nop
dec
sarb
test
and
xor
pop
cmp
jne
fsubs
in
and
cmp
pop
aas
js
sbb
sbb
sbb
jb
sbb
enter
or
pusha
xchg
call
enter
xor
inc
mov
pop
repnz
or
loopne
adc
dec
add
mov
mov
push
xchg
pop
pusha
push
pop
xchg
shrb
pop
pop
mov
xchg
xor
leave
inc
push
fadds
ret
push
mov
movsb
imul
adc
sub
je
pop
and
inc
mov
mov
jae
push
adc
cmp
mov
sub
cmp
sbb
dec
push
jmp
iret
in
lret
in
or
cmpb
inc
push
jbe
adcb
or
inc
xchg
pop
fs
sub
mov
and
adc
or
and
add
aaa
test
pop
sbb
inc
enter
mov
xor
pushf
addl
or
or
cwtl
pop
lock
vpcomuw
ss
xor
fldenv
add
cmp
sbb
jl
xchg
in
add
mov
ret
adc
pop
insb
popa
nop
lods
cmp
cmp
pop
xor
xorl
push
in
and
ret
cwtl
cmpsb
adc
in
hlt
add
ret
hlt
xor
mov
and
or
xor
psubusb
shrl
xor
sbb
pop
pushf
cwtl
mov
fs
rcll
adc
fwait
mov
mov
lods
sbb
mov
popa
dec
aam
ror
pop
push
lret
pusha
and
pop
xor
loopne
sub
lret
push
fcoml
mov
jb
fs
sbb
sbbb
mov
daa
imul
sbb
dec
pop
lods
mov
test
mov
fsubs
lock
or
xchg
push
mov
mov
xchg
mov
dec
bswap
das
inc
fstps
mov
sub
mov
fsubrs
orb
jge
adc
sbb
pop
sub
add
imulb
fnsave
inc
sbb
dec
xchg
jg,pn
or
fcoml
mov
jb
push
and
sub
add
and
dec
js
shrl
and
xchg
test
test
mov
xchg
xor
data16
inc
pop
sbb
lcall
fmull
ret
mov
xchg
mov
dec
lock
jb
ret
sbb
es
push
jne
pop
xor
bound
fcoml
inc
sbb
dec
les
dec
ret
in
cmc
dec
dec
pusha
ret
mov
aad
aam
cmpsl
cltd
shrl
mov
pop
rorl
sbb
in
enter
popa
fs
mov
aad
loopne
cltd
jp
jnp
and
fstpl
inc
enter
pop
mov
int
loopne
add
add
or
push
xchg
in
mov
adc
pop
in
or
xor
or
mov
and
clc
xor
push
scas
and
push
movb
sub
insb
mov
lret
cs
and
xchg
and
add
push
xchg
in
add
pop
jbe
dec
dec
push
mov
mov
xchg
mov
pop
inc
test
in
aas
aaa
or
repnz
test
dec
ljmp
add
push
popa
or
xor
push
xchg
inc
inc
insl
clflush
mov
lcall
push
pop
mov
jo
jmp
hlt
inc
aas
fcos
call
rcll
cwtl
mov
pusha
xchg
fisubrs
pop
out
rorb
inc
dec
aaa
cmp
fcomps
cmc
mov
add
adc
dec
add
mov
insl
lahf
mov
and
and
sar
mov
adc
es
mov
add
dec
flds
sbb
fsubl
aaa
mov
jae
pop
inc
push
and
pop
inc
ret
pop
loopne
sub
int
adc
clc
cmp
add
add
pusha
pop
enter
cmp
orb
sbb
nop
pop
andl
fstp
add
sbb
pop
add
arpl
add
add
int
dec
imull
inc
clts
dec
pop
push
or
imul
rorl
addb
sbb
xchg
scas
mov
push
sbb
pop
leave
pop
aad
add
loope
in
addr16
stc
xchg
add
pop
mov
and
and
xor
push
sbb
sbbl
sbb
int
das
push
dec
mov
addr16
pop
add
ret
cwtl
orl
loopne
lock
enter
or
or
and
call
enter
xor
cmp
inc
scas
nop
add
dec
cmp
pusha
sbb
push
inc
push
orb
mov
fs
lsl
jecxz
lcall
fimull
inc
repnz
loop
iret
ljmp
ret
daa
ja
or
or
into
das
add
xor
add
dec
push
pop
push
fs
push
xchg
xorb
sbb
fs
jo
or
lock
pop
jmp
xorb
inc
or
xor
pop
cmpsb
imul
imul
push
imul
dec
rep
or
addb
push
sbb
mov
sbb
loop
mov
xchg
imul
add
cmpsb
lods
or
in
sub
or
daa
sahf
cmp
inc
and
sub
dec
inc
or
or
or
or
fsubs
outsb
ja
push
xor
and
push
xchg
lret
scas
call
nop
jno
sub
or
cmp
or
lock
mov
and
and
mov
pusha
or
or
jnp
test
nop
add
or
flds
or
outsl
decl
das
lock
xchg
or
push
dec
rorl
pop
add
xor
push
aaa
dec
push
scas
jb
mov
loopne
jo
sub
cmp
push
incl
das
inc
lcall
stos
push
xchg
data16
aas
add
nop
inc
rcr
pop
jecxz
jae
pop
jmp
scas
or
orl
dec
rorl
add
dec
pushf
popf
lds
adc
enter
jo
or
xor
add
shlb
syscall
mov
roll
test
cmpsb
stc
pop
or
imul
ret
pop
sub
in
inc
add
or
adc
nop
cmpsb
cmp
adc
clts
sub
xor
cmp
xor
pop
pop
or
dec
xor
or
pop
or
xor
adc
pop
mov
sub
adcb
inc
dec
sahf
mov
nop
cwtl
inc
push
sbb
mov
push
imul
loopne
jmp
mov
imul
rcll
pop
or
adc
xor
xor
cmp
ror
xor
adc
pop
imul
sbb
sbb
sbb
pop
test
xchg
and
shlb
int
dec
xor
and
fnop
xor
sub
adc
in
in
mov
das
add
or
cmpsb
imul
and
movsb
imul
cmpsb
pop
dec
or
roll
lcall
push
imul
sahf
insb
outsl
mov
and
rorl
pop
add
xorl
dec
xor
out
scas
testl
fmul
movlps
pop
and
dec
shll
xor
or
xor
dec
pop
movups
pop
pop
push
or
fmul
jae
jg
xchg
mov
xor
mov
shll
sbb
pop
jnp
rcrl
xchg
adc
xor
adc
and
leave
out
shlb
orl
adc
adc
push
imul
roll
jo
js
lcall
nop
cmpsb
imul
sbb
mov
pushf
cmc
in
adc
adc
js
and
mov
out
unpckhps
and
sub
pop
xor
imul
out
pop
mov
adc
dec
push
pop
and
adc
das
add
nop
or
mov
or
add
leave
enter
test
andl
add
inc
pusha
cmp
adcb
movsb
daa
dec
fisttps
fwait
push
nop
xor
popf
cmpsl
movsb
inc
add
ror
pop
loopne
or
nop
loopne
hlt
ror
xor
pop
ja
pop
sbb
cli
cltd
adc
sbb
pushl
xor
cmp
xor
or
push
nop
in
xor
orl
mov
xchg
lock
pop
ja
dec
mov
enter
pop
ret
lret
mull
jmp
sub
lahf
and
or
jl
loop
inc
test
xor
fisubl
mov
push
push
flds
add
arpl
lret
dec
push
push
adc
mov
jae
fsts
or
mov
inc
add
mov
flds
adc
popl
cld
aas
and
das
mov
rcll
xchg
adc
mov
inc
fcmovnbe
movsb
sub
xchg
jmp
and
iret
push
dec
dec
das
call
mov
mov
xchg
sbb
out
imul
daa
out
push
dec
decb
jmp
int3
cmpsl
ror
fs
test
in
jno
pop
jg
lret
out
outsl
pop
inc
int
pusha
adc
and
xor
inc
repnz
xor
add
mov
iret
adc
or
icebp
nopl
cmp
mulps
ljmp
xchg
pop
add
std
decl
cmp
cmp
xchg
fadd
fs
xchg
leave
add
lcall
pop
add
sub
cmpsb
imul
faddl
sti
dec
rol
lods
add
cmpsb
imul
inc
xor
sbb
insl
push
adc
push
add
sarb
dec
pop
xchg
add
dec
jo
pop
inc
xor
dec
roll
and
cld
push
call
cmpsb
enter
nop
lcall
dec
cmp
xor
mov
or
push
in
fmul
mov
dec
rol
lods
pushf
push
imul
pop
add
and
or
or
lock
push
sti
lcall
mov
fwait
cmpsb
imul
sar
mov
add
mov
pop
je
adc
test
rcrb
dec
movsl
daa
cmp
ljmp
push
cmp
sti
aaa
cld
imul
das
orb
push
jg
xorl
or
push
sub
hlt
push
pop
imul
xlat
stc
jge
xchg
leave
xlat
jb
lahf
cmp
loopne
adc
ljmp
cmpsl
pop
fwait
push
rorb
daa
pop
pop
fldl
xchg
and
sub
popf
and
jns
scas
mov
or
out
add
or
jmp
test
imul
mov
add
xchg
pusha
sbb
adc
xchg
xchg
pushf
dec
call
jmp
fldenv
scas
pop
bound
jle
mov
mov
iret
std
mov
cmp
pop
stos
dec
inc
fs
daa
es
repz
cld
fisubrs
mov
mov
movl
add
call
pusha
mov
in
popa
mov
sbb
out
mov
mov
mov
cli
stos
mov
dec
or
fisttps
xchg
jl
push
pop
xchg
dec
inc
pop
sub
repnz
lcall
and
pop
inc
mov
mov
cld
dec
test
sbb
into
insb
add
gs
aas
cmp
push
lcall
push
mov
mov
rolb
incl
aad
test
mov
or
mov
lds
inc
test
mov
mov
xchg
pop
lea
call
idiv
pop
jns
cmp
xchg
stos
mov
sti
inc
adc
lea
pmaxub
pop
nop
nopl
xor
push
imul
sbb
daa
jg
sbb
mov
mov
int3
add
jl
out
push
mov
or
stc
ljmp
inc
sbb
fs
or
loop
cmp
lcall
lea
mov
outsb
inc
dec
es
mov
mov
imulb
jecxz
dec
jle
imul
pop
push
xchg
ret
ret
inc
test
std
in
incl
push
mov
xchg
mov
xchg
pop
sti
push
jmp
stos
mov
movsl
dec
inc
adc
inc
jg
mov
cmpsb
mov
lcall
movsl
pop
jp
aas
xchg
sbbb
fcomip
pop
jno
je
push
xchg
inc
sar
adc
inc
pop
push
in
adcl
stos
jl
std
dec
movl
fs
adc
ljmp
lods
mov
mov
add
sahf
mov
jg
jmp
or
mov
xor
jmp
jmp
cld
pushl
sti
cmpsl
mov
pop
xchg
sub
inc
adc
loopne,pt
mov
in
add
aam
movsb
roll
aam
lods
mov
push
and
sub
jo
xchg
pop
jae
inc
adc
pop
and
xor
mov
jno
pop
mov
lock
mov
adc
dec
and
sbb
pop
aas
imul
pop
pusha
lahf
outsl
lret
fiaddl
mov
push
aam
jg
lret
ljmp
or
js
popf
pop
or
mov
ljmp
cli
pushw
mov
sub
push
scas
fisttpl
or
lods
or
jl
sub
out
sub
and
jno
pop
sbbb
jp
test
mov
add
mov
jl
cmpsb
insl
add
fldt
adc
cmp
adc
sbb
mov
add
cli
sub
mov
sahf
push
cld
lcall
jg
mov
cwtl
push
in
out
sbb
js
cld
push
int3
or
cmpl
out
add
jae
cli
fildl
in
inc
sahf
aam
arpl
xchg
fsubp
imul
jg
shll
push
in
dec
fwait
and
sub
xbegin
aam
jb
imul
sbb
push
and
add
inc
addb
aas
aas
ret
xor
js
xor
mov
call
inc
mov
imul
imul
loopne
add
loop
jb
fnstcw
shll
pop
rorl
sub
arpl
push
adc
pop
cmp
cmp
cmp
call
scas
addl
jl
sub
dec
add
insl
in
and
sbb
adc
jb
stc
fsubrl
int3
jmp
cltd
xor
lds
add
mov
mov
add
lahf
push
lcall
mov
outsl
cmp
adc
aas
push
gs
gs
and
jmp
addr16
jb
jbe
insb
gs
stos
push
lods
push
xchg
lock
jmp
push
jecxz
jbe
lahf
cs
lahf
mov
add
xchg
pop
pop
popa
push
dec
pop
add
adc
aad
jmp
popa
mov
cli
push
outsl
aaa
std
call
xchg
sbb
or
lcall
jne
insb
dec
in
bound
sub
rolb
cmp
std
stc
inc
dec
mov
pop
jo
add
add
std
outsl
fisubrs
enter
pop
je
andb
or
xchg
loope
mov
fdivs
daa
jae
adc
or
call
sahf
out
out
int3
inc
ss
mov
cli
dec
cmp
stc
mov
std
pop
xor
call
imul
bound
mov
out
push
mov
mov
pusha
cmp
jne
cmp
dec
lahf
mov
popa
mov
out
xchg
jb
jns
pop
inc
stc
dec
sub
std
out
ljmp
mov
pop
push
xor
jl
dec
ja
in
lods
xor
and
or
mov
lds
aas
jmp
add
add
push
fwait
push
push
outsl
push
in
jb
xor
pop
mov
fwait
mov
setbe
xchg
inc
mov
inc
imul
sbb
pop
mov
lcall
ds
inc
rcrl
jg
fists
cld
loop
push
test
aas
mov
arpl
loop
jno
push
push
addr16
into
mov
jno
inc
sub
cmp
aaa
mov
decl
cmp
mov
repz
fisubrs
stos
inc
das
xchg
int
push
jge
xchg
jmp
fwait
push
loop
pop
mov
lahf
push
clc
mov
cld
push
add
int3
xchg
inc
insb
in
outsl
in
push
mov
cld
mov
adc
into
popa
cs
inc
or
mov
ja
orb
mov
rolb
pop
sub
xor
jnp
mov
lods
movsl
or
lock
repnz
xor
xor
mov
aaa
inc
das
sbb
jb
imul
callw
jle
imul
fs
xchg
or
mov
sbb
mov
mov
aaa
xor
std
aam
lcall
loop
mov
and
lock
adc
pop
imull
loopne
mov
dec
fcomip
cmp
cwtl
mov
sbb
dec
and
dec
mov
enter
sbb
mov
ljmp
cs
inc
push
je
jo
pop
imul
pop
enter
cmp
sbb
mov
add
sub
sbb
outsl
push
dec
aad
insl
pop
gs
outsl
jb
mov
and
push
js
and
add
sub
mov
inc
add
add
dec
outsl
arpl
adc
jb
or
je
je
jb
jne
dec
aas
mov
inc
adc
jbe
jb
outsb
insl
outsb
je
sbb
bound
in
mov
imul
or
sbb
pushl
imul
insb
inc
inc
dec
popa
je
or
add
mov
xor
dec
jne
fcmovne
cmp
inc
jbe
or
mov
mov
bound
push
arpl
xorb
gs
dec
cmp
mov
cmp
imul
arpl
insl
mov
jb
outsb
mov
bnd
sub
icebp
push
mov
outsb
inc
push
jne
jns
pop
push
fisubrl
and
adc
aas
outsb
xlat
mov
ds
daa
insl
fistpll
mov
mov
dec
push
dec
popa
inc
fisubrl
dec
outsl
fs
hlt
dec
popa
test
adc
jge
dec
imul
popa
pop
sbb
fs
gs
outsb
outsl
popa
insl
jo
pusha
push
ret
mov
push
and
cli
jae
dec
popa
outsb
fs
into
shlb
fwait
adc
inc
jmp
rcl
ficoms
jle
imul
sub
mov
cmp
in
push
fnstenv
pop
sub
fcoml
adc
jo
mov
dec
imul
jnp
add
sub
push
out
xchg
cmpsb
or
bound
out
call
insb
and
lods
cmp
call
add
mov
aas
pop
aam
inc
popaw
arpl
mov
mov
push
inc
inc
push
inc
push
xor
xor
pop
sub
lods
jo
mov
sbb
data16
out
jo
loope
and
xchg
inc
push
mov
fistl
arpl
pop
push
popa
scas
jae
xor
adc
xor
out
jg
inc
dec
inc
inc
dec
push
inc
inc
dec
dec
inc
dec
add
dec
gs
mov
mov
cmp
jnp
lret
dec
cmpsl
push
pop
pop
mov
jle
xor
sbb
pop
pop
adc
insb
inc
imulb
aas
dec
pop
testl
lods
lds
inc
inc
or
mov
inc
dec
or
ret
pop
or
js
lcall
inc
outsl
inc
test
icebp
push
lcall
dec
inc
sbb
dec
lahf
and
sbb
and
xor
ret
inc
clc
ja
fadds
pop
mov
add
outsb
jo
xchg
sbb
out
loope
lret
jae
bound
aas
jp
xor
mov
mov
xchg
or
and
inc
pop
clc
inc
lods
inc
push
nop
inc
inc
ss
pop
test
dec
testb
adc
aas
xor
pusha
push
lds
push
imul
aaa
into
xor
xor
add
pusha
pushf
inc
add
aam
jmp
xorl
popl
inc
push
dec
cmp
sub
insb
das
inc
inc
push
inc
inc
xor
inc
pop
sahf
outsl
adc
test
aad
push
pop
add
lock
mov
pop
mov
jns
adc
ret
pop
xor
fildll
inc
daa
add
push
adc
mul
xchg
add
mov
insl
fcmovu
das
orl
ja
jae
insl
sbb
insl
jne
sub
outsb
data16
bound
nop
je
or
and
cmp
cmp
stos
add
jl
bound
mov
dec
insl
test
scas
popf
sbb
adc
out
jmp
outsb
sbb
xchg
adc
mov
push
ss
and
je
pop
sbb
mov
popa
mov
outsb
dec
scas
jbe
dec
pop
jae
jb
ss
push
daa
insl
sbb
jae
xchg
jp
xchg
inc
add
in
sti
adc
pop
jo
imul
or
dec
fnstsw
pop
jnp
xchg
fsubrl
adc
jo
adcb
jne
lret
inc
dec
push
dec
inc
aas
mov
add
push
lods
or
push
lret
pop
xor
push
jne
xor
stos
push
pop
popa
gs
mov
incl
push
pop
enter
push
push
or
xchg
in
or
imul
outsl
push
je
push
addr16
addr16
push
push
scas
jbe
insb
inc
scas
jle
xor
insb
divb
mov
jae
xor
add
pop
inc
jl
add
inc
repnz
aas
sahf
sbb
add
add
mov
add
adc
pop
add
add
mov
int
pop
add
daa
add
fstps
fcomp
or
pop
push
add
mov
jnp
ss
pusha
pop
popa
mov
sub
push
or
sbb
je
mov
aam
in
adc
cs
push
xchg
fsubrs
or
sub
xor
mov
inc
cs
dec
push
jnp
mov
push
daa
rorb
arpl
push
neg
in
pop
repz
dec
add
cmpb
adc
and
add
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
