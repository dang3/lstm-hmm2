rcrb
inc
add
and
mov
push
call
int3
dec
dec
dec
fimull
enter
daa
daa
and
shll
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cld
xchg
xchg
xchg
xchg
sar
hlt
lock
xchg
xchg
xchg
in
call
xchg
xchg
aam
ror
leave
leave
leave
cmpb
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
dec
leave
leave
inc
cmp
push
mov
add
mov
pop
mov
cld
mov
push
sbb
pop
pop
sti
out
mov
ds
mov
mov
repnz
mov
mov
ret
nop
out
in
outsl
lock
mov
mov
jg
hlt
cmpl
je
repnz
rorb
cmp
outsl
jg
inc
mov
xor
add
rorb
cmp
or
xchg
scas
sbb
je
repnz
mov
and
xor
mov
pop
sti
fbstp
and
xor
jle
pop
aas
lock
fcmovne
and
icebp
add
dec
hlt
mov
js
clc
mov
repnz
jae
pop
repz
jne
inc
push
into
add
push
mov
fidivrs
add
sbb
mov
cmp
xor
mov
and
xlat
cld
add
push
lock
inc
jle
lea
lea
hlt
add
add
or
shll
adc
adc
ljmp
add
hlt
sub
cmp
loop
clc
imull
imul
lock
push
mov
dec
and
sub
pop
sub
sti
fiadds
sbb
mov
push
aad
xchg
bound
adc
aas
jbe
mov
add
stc
std
addr16
in
push
sub
jae
out
aaa
sti
out
in
mov
mov
xchg
and
fisttpll
scas
es
jmp
and
dec
shll
and
adc
mov
sub
cmpsb
and
jno
and
jle
in
mov
cmp
ljmp
mov
enter
aad
push
jge
cs
fbstp
pop
scas
scas
pop
je
fs
dec
mov
pop
outsb
pop
in
jle
addr16
jnp
ja
les
dec
mov
xor
loopne
xor
sub
sub
xlat
cmpsb
fisttps
pop
pop
in
cmpsb
cmpsl
and
pop
mov
lea
loop
jge
fwait
mov
test
loop
jecxz
orb
test
push
and
dec
mov
dec
mov
movsb
dec
mov
stos
dec
cmpsb
mov
imul
adc
sbb
repnz
mov
sbb
jge
adc
add
int3
pop
and
sub
adc
push
cli
into
bound
jl
movsb
sub
dec
sbb
pop
xor
imulb
loop
mov
addb
sbb
jnp
mov
xchg
push
and
dec
mov
mov
insl
xchg
ljmp
aad
push
dec
imul
lcall
push
mov
repnz
mov
mov
lods
movsb
iret
fdivr
ret
orb
sub
mov
in
pop
sub
stos
and
mov
pusha
movl
and
jnp
sub
popf
push
movsl
aaa
adc
outsb
and
cmpsb
rcr
neg
outsl
ja
mov
pop
push
scas
mov
rorl
pop
xor
cmp
lcall
pop
fimuls
jp
lret
lock
loop
iret
add
sub
mov
lcall
lret
xchg
push
jp
xor
cmpsb
jmp
inc
and
dec
cmpsb
push
adc
or
mov
insb
push
jo
pushf
scas
and
sub
stos
mov
nop
aam
loop
pop
mov
mov
sub
sub
out
xchg
mov
dec
mov
sub
xor
out
sub
in
pop
aad
or
aas
pop
inc
dec
add
pop
fimull
adc
xchg
addb
int
adc
pop
mov
jecxz
int3
mov
cwtl
cmp
mov
bound
int3
loope
out
stos
cmpsl
push
pushl
pop
inc
dec
cmpsb
inc
add
mov
add
add
cmpsb
sar
rorb
jne
test
jne
push
sub
xchg
imull
sti
cmp
sahf
add
push
call
in
push
cmp
inc
push
jp
aam
flds
inc
push
dec
test
mov
lock
xchg
lea
mov
inc
ret
push
fdivr
aaa
sbb
mov
add
cmp
jbe
push
cmp
or
cmpl
je
pop
or
rcrb
mov
push
cmp
jle
fs
cs
push
or
pop
lock
jae
iret
inc
dec
enter
rcll
add
cmp
or
cld
ljmp
decl
jne
cld
mov
ret
lock
lret
adc
int
sti
decl
push
inc
gs
jb
arpl
fs
jae
push
dec
outsl
popa
fs
imul
popa
jb
inc
xchg
dec
jo
outsb
push
push
outsb
fnstcw
jo
imul
insb
add
je
popa
insb
inc
insb
insb
adc
std
fists
je
dec
outsl
jbe
dec
gs
outsl
jp
bound
pop
cmpb
or
lea
dec
dec
mov
cmp
jg
call
or
std
xor
dec
dec
mov
lea
mov
sti
lods
inc
mov
in
mov
inc
add
and
mov
cmp
in
idiv
js
lea
dec
mov
mov
cmp
ja
es
pushl
dec
and
lea
adc
mov
mov
outsl
fbld
fcompl
inc
lea
xchg
jnp
mov
fisttpl
sub
mov
dec
inc
inc
in
mov
lcall
mov
xor
mov
dec
lret
shll
mov
sub
and
jb
cmc
div
push
mov
roll
push
mov
mov
inc
cmp
sub
inc
sbb
flds
mov
xchg
data16
dec
mov
mov
int
pop
es
cld
outsl
in
dec
dec
inc
cli
cmp
je
lea
inc
data16
jne
jnp
popa
dec
cld
push
clc
mov
inc
mov
mov
push
movsl
push
inc
xchg
inc
inc
cmp
jge
lea
dec
lcall
lea
mov
lea
xor
add
cmpps
test
mov
call
inc
mov
dec
mov
dec
ljmp
lock
push
xchg
movsb
scas
cmpb
jl
xchg
and
jne
movsb
xchg
nop
ret
bound
lea
adc
push
cmpb
and
jns
inc
lea
lock
lock
cltd
xor
outsl
jp
js
xchg
insl
ret
jg
lea
pushf
movsb
cmpsb
cmp
dec
cmp
fistpl
lods
ja
cmp
imul
fs
xchg
xor
jo
insb
faddl
inc
cmp
fisttps
fiadds
jo
inc
mov
jb
rcrl
xchg
add
push
mov
subl
js
cmp
jecxz
decl
pop
outsb
dec
dec
dec
inc
lcall
insb
in
add
decl
mov
sti
addl
mov
in
push
call
in
lock
xchg
lea
cmc
inc
or
inc
push
or
lret
mov
mov
jg
xbegin
dec
or
cmp
js
les
sbb
push
push
xchg
mov
lcall
enter
cs
cmovg
cmp
pop
mov
mov
push
adcb
iret
inc
adc
sar
add
hlt
mov
cmp
jns
jp
push
pop
xlat
inc
dec
ja
loope
popa
mov
or
testl
lock
dec
lods
neg
in
mov
mov
pop
lock
mov
mov
push
cmpsl
in
dec
mov
mov
fwait
inc
xor
or
sub
pop
xor
int3
loope
int3
push
jp
out
push
rcl
fcomp
loopne
inc
jg
inc
xchg
cmpl
adc
es
pop
je
je
cmp
ds
push
mov
movsb
sbb
ss
es
inc
mov
inc
pop
icebp
jg
mov
xor
out
jecxz
push
xchg
xor
inc
cmp
jl
add
clc
mov
inc
xchg
setg
cli
sub
mov
mov
mov
inc
mov
repz
cmp
jne
inc
mov
push
push
lea
pop
call
dec
aas
insb
xor
sbb
bound
mov
pop
ja
pop
inc
inc
push
hlt
pop
sub
mov
movsl
loopne
mov
push
inc
aam
in
push
add
cmp
xor
js
in
sbb
fiaddl
push
inc
jb
ucomiss
mov
decl
repnz
inc
dec
inc
cmp
jp
mov
lea
jg
orb
mov
inc
inc
inc
es
dec
mov
and
jbe
decb
mov
dec
ss
sub
sub
roll
mov
inc
xchg
mov
ss
call
in
fneni(8087
inc
add
push
dec
push
dec
jmp
jmp
es
mov
in
int
inc
mov
cmp
inc
dec
lods
mov
sub
lea
mov
jp
sbb
les
dec
inc
aaa
push
cltd
popa
sbb
into
mov
lock
xor
in
mov
lock
stc
cwtl
mov
dec
dec
mov
orb
das
iret
cmp
jno
fdivr
cmp
cmp
mov
jg
bnd
movb
xchg
or
add
dec
hlt
jg
push
mov
cmp
mov
fiadds
push
lret
adc
pop
loopne
mov
push
push
adc
sbb
mov
stos
nop
dec
inc
cmp
sti
sbb
sbb
dec
ja
fstpl
sbb
in
mov
push
inc
push
mov
ljmp
add
mov
mov
cmp
jns
mov
loop
sbb
sahf
or
in
movsb
cs
jae
mov
mov
movsl
jg
jge
lcall
popa
sbb
in
xlat
mov
cmc
or
push
lock
mov
inc
dec
clc
dec
mov
inc
or
inc
loopne
popa
mov
inc
pshufw
je
imul
ficoms
xchg
outsb
adc
xor
lds
mov
or
mov
fcomps
mov
mov
pop
mov
push
pop
aad
mov
dec
inc
in
xor
add
xor
std
aaa
loope
cmp
add
xor
xor
xor
cmp
pushf
xchg
xchg
add
add
movd
pop
cmp
shl
inc
fsubrs
push
fimull
fsubrs
int3
add
loopne
pop
mov
fsubs
addb
and
push
sub
lds
gs
popa
adc
je
jle
fbstp
push
push
add
xor
push
push
add
enter
sub
push
les
int3
stos
add
or
decb
push
hlt
mov
adc
push
add
cmp
or
pop
iret
inc
dec
mov
sub
mov
and
bound
add
mov
call
mov
mov
push
xor
test
nop
xchg
mov
mov
cld
stos
inc
mov
push
mov
daa
inc
dec
jnp
mov
add
mov
test
push
or
push
or
loope
out
inc
add
mov
or
or
mov
adc
sahf
pop
add
add
sahf
fimull
lcall
jbe
or
xor
js
mov
outsl
add
or
and
aad
and
pop
and
addl
out
cld
and
sbb
fchs
sbb
shrb
inc
mov
movl
fcomps
and
inc
cmp
sbb
and
lods
jne
fisttpll
push
cld
mov
imul
out
shl
call
orb
sti
lds
pop
push
inc
add
shll
jae
ror
adc
sbb
pop
fildl
das
pusha
xor
aaa
ds
jb
jmp
inc
xor
fdivrl
cmp
frstor
adc
enter
xor
add
push
lea
push
lods
push
mov
add
jmp
add
int3
cs
mov
aam
aad
add
jge
les
cmpsb
add
filds
js
test
ja
out
jno
add
add
xor
cs
insb
adc
int
out
iret
add
gs
pop
and
je
shll
insb
add
verr
push
imul
arpl
pushl
insl
jbe
popa
jbe
pop
inc
jo
add
jo
imul
jbe
mov
inc
insl
jo
data16
arpl
push
ss
jge
push
ss
pusha
push
jo
outsb
insl
jae
dec
data16
or
ja
outsb
add
and
add
mov
or
pop
cld
movl
hlt
in
lock
pop
subb
in
dec
call
in
add
add
jne
mov
push
dec
cs
add
cld
fmull
push
pusha
outsb
and
xchg
aam
shl
inc
cmp
lea
fsubr
pop
pop
and
bound
jp
xor
les
dec
add
push
iret
in
push
mov
pop
std
mov
jo
xchg
insl
cs
rcrl
adc
add
inc
orb
cmp
inc
and
lods
or
movsb
mov
add
push
movsb
and
and
mov
cli
xor
cwtl
sbb
loop
les
mov
cmp
add
stc
mov
push
add
xor
jnp
and
xor
xor
cmp
add
sti
das
add
xor
push
xor
xor
cmp
push
and
int
xor
xor
xor
push
add
dec
sahf
mov
mov
aas
and
clc
dec
mov
sti
mov
inc
inc
std
cli
mov
jl
cmpb
mov
mov
jne
push
add
or
pop
cmpl
mov
cmpxchg
ja
les
add
sbbb
cld
mov
add
mov
mov
movsb
adc
push
or
inc
add
bound
dec
add
ss
aaa
lock
inc
js
dec
lock
lods
or
repnz
lock
sub
js
outsb
mov
in
daa
inc
inc
iret
or
call
jae
out
lret
fdivl
stos
aam
mov
mov
add
sbb
sub
outsb
cmp
icebp
int3
fildl
adc
stc
inc
jle
add
movsl
shlb
insl
out
add
push
xor
xor
cmp
ss
fs
push
pop
rcrb
mov
clc
incl
sbb
hlt
clc
filds
incl
jne
mov
sub
pop
push
pop
push
adc
xor
mov
inc
imul
addl
add
and
pushf
cmpsb
sbb
or
sbb
aaa
mov
rorb
clc
cld
pop
std
ljmp
xor
adc
rorl
cmp
sub
enter
rol
add
add
push
stc
pop
jg
sub
popf
sbb
add
add
scas
insb
lds
inc
or
inc
pop
stc
push
add
or
int
inc
das
pop
dec
mov
adc
and
or
out
inc
mov
sidtl
imul
mov
int3
dec
sbb
loop
loope
loopne
test
add
inc
pop
and
sarb
bound
loopne
or
mov
push
int
add
cli
in
test
mov
call
nop
add
addl
das
jnp
mov
cmpw
ja
sub
addr16
sub
jge
push
jle
negl
pushf
xlat
loop
pop
hlt
scas
es
lock
adc
add
pop
push
aam
inc
or
push
inc
sbb
lret
outsb
gs
cltd
int
or
es
imul
xchg
push
dec
sahf
adc
rclb
cmp
int3
notb
mov
and
jns
inc
enter
or
lds
add
inc
jo
lea
jge
mov
decl
adc
clc
jg
dec
cmp
xor
aaa
xor
xor
add
xorb
jo
cltd
xchg
ja
jo
add
xorl
movb
or
mov
mov
mov
mov
fcompl
jge
mov
sbb
cmc
mov
sbb
jbe
mov
std
aaa
jle
mov
adc
insb
mov
xchg
call
sti
xor
mov
loopne
jb
inc
pusha
adc
daa
inc
imul
sar
cs
iret
aad
cli
mov
movsl
roll
aam
jp
mov
cld
das
push
mov
inc
sahf
inc
mov
mov
jmp
add
sbb
jne
mov
in
mov
nop
jle
xchg
pop
clc
gs
js
inc
cld
lea
dec
inc
dec
mov
mov
dec
sahf
sub
fidivrs
jmp
sub
das
xchg
push
arpl
negl
mov
mov
cli
inc
popa
or
pop
cld
std
dec
sub
inc
cmp
clc
sbb
inc
lea
js
fistpll
jae
mov
dec
push
ret
icebp
sbb
clc
mov
dec
outsb
sub
cs
xor
pusha
js
dec
xor
add
add
adc
mov
mov
movsl
adc
jg
jecxz
cmpb
jge
sbb
testl
jle
cmp
xchg
test
movsl
jbe
cld
div
adc
sbb
adc
xor
mov
pop
sbb
lea
dec
push
xchg
jne
jmp
out
out
mov
and
gs
cld
sbb
push
dec
mov
push
sarl
loope
add
loope
lock
cmp
andl
push
dec
and
add
bswap
or
mov
xor
movb
jge
shrl
pop
in
inc
dec
or
enter
aaa
push
clc
ja
xor
fadd
mov
fidivrl
jge
jle
lea
hlt
sub
lods
fistpll
push
xchg
adc
mov
std
mov
lcall
mov
jnp
push
mov
lea
rcr
inc
mov
push
push
sub
xor
or
jo
pop
sub
pop
cmp
je
cs
imull
shll
loop
dec
cmpsl
movl
mov
fdivp
test
jp
mov
or
loope
mov
ds
cmpsl
dec
inc
adc
insb
sub
inc
inc
int3
add
lahf
jo
mov
cltd
ljmp
push
cld
outsl
adc
ss
and
daa
mov
push
sahf
pop
mov
push
and
add
das
adc
or
mov
push
or
or
mov
cmp
jle
cmp
dec
mov
loopne
or
loop
gs
icebp
sbb
cmp
sbb
xchg
xorb
mov
push
stos
mov
outsb
ljmp
mov
cmpsb
hlt
inc
test
add
test
mov
or
dec
out
icebp
pusha
add
dec
sub
and
dec
xchg
mov
add
inc
mov
add
push
adc
sbb
sub
cmpsb
inc
in
jg
orb
pop
movb
mov
les
push
div
push
xchg
xor
inc
pop
aaa
call
sub
stc
mov
xor
xor
xor
inc
pop
mov
pop
add
inc
mov
lea
gs
je
or
mov
adc
lea
sti
push
add
adc
adc
insb
push
and
rolb
adc
fmuls
jns
sub
les
lock
and
fsubrs
pop
or
fisubs
loop
dec
mov
adc
pop
enter
rolb
out
mov
cmp
xor
cmp
xchg
es
repnz
xor
dec
inc
pop
pop
xcrypt-ofb
cmpsl
in
add
inc
loope
or
push
mov
dec
movhps
push
lock
pusha
test
ljmp
outsl
decb
add
push
pushl
js
mov
jge
addb
add
xor
cmpsb
std
das
push
jge
mov
daa
and
daa
add
or
fadds
push
lahf
adc
add
fcmovnbe
pop
testb
arpl
cld
dec
or
sub
add
fistpll
dec
ljmp
add
add
dec
add
push
add
push
fnstcw
add
inc
push
inc
dec
pop
add
add
sbb
pop
inc
add
es
lods
xor
sub
push
arpl
push
imul
inc
xor
add
add
in
jbe
in
inc
lods
ret
int3
xchg
add
add
cmp
std
add
add
add
dec
or
cmp
lcall
roll
dec
or
rcr
outsl
add
add
inc
adc
cs
mov
pop
fisttpl
pop
ret
ret
sbb
sbb
fcmovu
and
sub
sbb
sbb
xor
cld
sti
xchg
bound
add
add
out
jnp
adc
cmp
pop
sub
sub
neg
mov
and
cmpsl
mov
sbb
and
pop
aaa
sbb
aaa
xor
and
and
daa
and
add
int
add
cltd
aaa
push
fadd
into
clts
aaa
test
xchg
and
mov
and
fcomp
mov
sbb
push
pop
test
dec
repnz
stc
hlt
mov
dec
dec
jnp
stc
je
aas
cmp
sbb
and
repz
clc
dec
shrl
pop
pop
or
or
mov
inc
jle
push
dec
dec
xor
lcall
scas
sbb
jbe
inc
ljmp
mov
fists
int3
mov
or
inc
mov
movsb
sub
leave
and
imul
mov
test
pusha
pop
sbb
pop
inc
in
lcall
add
push
fsubrs
add
pop
mov
pop
aas
xchg
test
repz
sbb
cmpsb
insl
mov
inc
movsl
adc
push
xor
jmp
mov
and
fmull
and
add
jbe
arpl
out
data16
in
add
int3
adc
test
lret
pop
imull
xlat
mov
rcrl
jle
in
adc
ss
aam
and
ds
ja
dec
push
into
add
mov
out
sar
add
add
arpl
das
add
addr16
pusha
add
scas
sub
or
das
pop
mov
out
sub
jns
into
dec
pusha
sub
sbb
fsubrp
xchg
jmp
push
scas
sub
sbb
add
add
add
add
fistpl
and
sub
jmp
mov
mov
negb
and
lret
test
xlat
add
js
popa
cmp
ror
or
fimull
dec
ds
add
xor
sbb
sub
sti
mov
and
sbb
sbb
insl
adc
sbb
and
sbb
pusha
in
fucomp
mov
cmpxchg
pop
test
inc
pop
inc
addr16
mov
fidivrs
arpl
imul
add
lds
insb
lock
jnp
test
jbe
aaa
out
ja
cmp
mov
xlat
or
inc
test
testb
or
sbb
jmp
mov
repz
sti
inc
ret
push
lret
jae
mov
roll
jecxz
mov
push
fsubrl
hlt
adc
mov
xor
test
cmp
cmp
adc
imul
loope
inc
add
test
xchg
outsl
add
hlt
cmp
sbb
inc
sub
dec
in
push
insl
lock
test
pushf
inc
std
test
cmp
xchg
jmp
pop
mov
sbb
sub
dec
es
mull
and
test
aaa
sbb
cmc
pop
add
shll
pop
outsl
rclb
fnstenv
xchg
xchg
enter
in
ret
mov
std
out
pop
sub
imull
xchg
mov
call
adc
add
out
add
pop
push
popl
dec
movb
xorb
rcrl
loopnew
xchg
or
mov
sub
xchg
popa
mov
into
jbe
and
sub
mov
das
dec
pushf
setbe
jnp
inc
push
inc
sub
add
sbb
in
sbb
and
sbb
fdivl
mov
repz
pop
sub
mov
emms
and
jecxz
lahf
adc
jmp
cmp
sti
arpl
scas
std
xchg
in
rcr
fstpt
mov
ja
ror
sub
push
xor
jb
mov
out
cmp
adc
sbbb
sbb
int3
push
sbb
lods
mov
mov
jnp
popa
mov
popf
cmp
fwait
jnp
jg
loop
sub
jnp
pushf
inc
and
pop
icebp
push
add
adc
verr
int
aaa
or
lea
lds
mull
stos
adc
out
aaa
pop
and
xchg
mov
mov
mov
dec
cmp
xchg
arpl
push
ss
movsl
mov
xchg
mov
sbb
out
adc
sbb
dec
fnstenv
dec
testl
nop
addb
mov
iret
mov
dec
inc
adc
xor
int
pop
fbld
push
xor
push
dec
das
and
stos
cmpsl
in
pop
dec
adc
mov
pop
and
sbb
inc
out
dec
push
push
xor
inc
test
adc
mov
das
mov
std
rorl
dec
adc
fwait
popa
int
inc
out
es
adc
mov
sti
orl
xor
dec
add
fisttpl
and
mov
mov
mov
add
cmovp
loope
lret
scas
lods
mov
sbb
xor
xchg
pop
test
addr16
cmp
xor
outsl
mov
mov
pop
mov
xchg
in
xchg
inc
mov
popf
je
pop
or
push
inc
jo
jb
mov
inc
jno
pop
pop
mov
icebp
sub
insb
testb
fwait
scas
mov
or
jecxz
ficoms
fdivl
pop
out
mov
dec
and
enter
gs
out
repz
cmp
negl
sti
cmpsl
add
adc
fcompl
ret
push
sbb
adc
inc
fucomip
mov
lret
cmpb
loope
imul
jae
add
mov
test
xchg
dec
ja
outsb
mov
dec
stos
movsb
fst
imul
push
xchg
cmp
adc
xchg
jecxz
jmp
or
sub
inc
add
mov
jmp
jne
and
es
sbb
lock
movd
xchg
ljmp
xchg
jl
lock
sbb
fstpt
aas
xchg
xchg
pop
cmp
sbb
in
fldl
push
jge
addr16
mulb
int
sub
sldt
jne
xchg
or
lahf
test
sbb
js
int
ljmp
or
add
dec
in
iret
mov
add
jle
jnp
mov
call
sub
lods
pop
add
roll
in
pushf
add
adc
pop
mov
push
mov
add
sti
pop
std
scas
or
cwtl
hlt
or
push
fsubrl
mov
aam
je
sbb
dec
cmp
lods
cmp
mov
movsb
sub
data16
sub
cmp
push
or
add
cltd
mov
cmp
push
sub
mov
out
xchg
ret
sbb
lds
xor
add
shrb
push
aaa
loop
cld
popa
add
fnstsw
pop
cmpsb
or
lahf
mov
mov
addl
jbe
add
pop
adc
mov
and
xchg
cwtl
sbb
out
es
dec
fadds
out
and
addl
call
adc
sbb
jl
iret
and
fs
arpl
and
pop
jmp
push
cmove
aaa
push
aad
pop
jb
adc
ds
pop
call
dec
or
pop
dec
add
lods
lcall
negb
dec
xchg
mov
add
btr
scas
add
jo
lret
popa
insl
lds
adc
add
push
bound
or
lods
mov
xchg
iret
mov
rcrl
ds
mov
and
lock
jge
pop
ja
and
in
loopne
je
andb
je
iret
shlb
sar
rorb
out
push
push
inc
add
shlb
xor
pop
inc
jp
sub
lods
in
les
lods
pop
dec
call
and
jge
pop
jg
cmp
jne
or
add
ss
mov
ret
in
add
add
ss
push
in
push
movsl
mov
stos
movsb
pop
mov
pop
cmp
add
dec
cmpsl
js
xor
cmp
cmp
mull
lcall
mov
adcb
jle
iret
int
dec
stos
test
lock
add
arpl
hlt
ljmp
aaa
imul
lea
les
bound
lods
aad
cli
divb
lods
mov
sbb
jge
adc
scas
sbb
pop
adc
adc
inc
cmc
cmp
adc
cmp
push
cmp
sbb
lock
divb
fdivl
mov
xchg
jb
mov
or
lahf
inc
add
insb
inc
pop
aam
ja
push
add
cmpsb
jno
add
mov
bound
sbb
pop
call
push
push
push
outsb
xor
mov
inc
ret
jg
adc
shlb
dec
push
xchg
jmp
call
test
sub
adc
dec
cmp
inc
fildll
mul
aaa
inc
add
push
ss
fildl
movq
dec
es
lods
sbb
sti
aad
cld
pop
clc
push
fists
push
push
test
cmp
pop
cltd
scas
cmp
lods
xlat
popa
lock
add
ja
sub
push
cmp
xlat
or
jmp
int3
push
scas
push
and
imul
add
jne
in
sub
push
and
es
js
aam
and
mov
cs
or
push
out
lock
lret
xchg
cli
gs
enter
cmp
jmp
add
cmpsb
in
gs
mov
xchg
in
jmp
add
insb
pusha
jo
adc
inc
xor
push
insb
loope
sbb
adc
js
xlat
lods
ljmp
pop
sbb
movb
jno
jne
lock
iret
and
out
xor
dec
pop
pop
pop
scas
sub
test
cmp
cltd
loopne
pop
dec
xor
sbb
add
sti
fldcw
push
mov
sbb
push
ds
jge
jbe
ja
or
fiaddl
sbb
cltd
testb
mov
sub
insl
or
push
mov
js
xchg
aaa
adc
mulb
movsl
jle
or
add
sub
sbb
xchg
mov
adc
mov
jo
stos
cltd
mov
testb
aad
adc
or
push
pop
fimull
test
ds
mov
jl
push
jl
fildl
push
cmpsb
or
sub
cmp
ret
add
mov
pop
pop
sbb
test
cmp
sbb
repz
mov
hlt
push
clc
incl
stos
sbb
xchg
loop
pop
movsb
loope
loopne
ss
out
daa
loope
out
or
push
push
out
add
in
aad
pop
sti
adc
add
inc
in
inc
aas
jmp
mov
ljmp
mov
sub
notl
das
daa
pop
sti
rcll
sub
aad
adc
fwait
sbb
mov
pop
lea
pop
data16
insb
out
jae
cmp
shrb
dec
xor
insb
aad
imul
xchg
into
mov
scas
lea
and
adc
adc
pop
addl
jns
pop
cmp
mov
cmp
adc
out
sti
xor
sbb
add
sbb
sbb
inc
sbb
scas
mov
fbld
iret
xchg
add
mov
imul
push
popa
mov
stc
lods
ret
mov
jno
dec
mov
jp
jo
cmpsl
daa
fimuls
cld
mov
dec
adc
add
pushf
push
dec
sub
mov
js
out
imul
ficoms
bound
adc
jo
or
cmpsl
push
push
mov
fmuls
rolb
scas
jo
stos
ja
add
je
fwait
ja
xchg
xchg
pusha
and
jle
out
xchg
fwait
xchg
iret
add
cwtl
xchg
push
fs
cmp
movsb
fisttps
stos
xchg
add
lahf
lock
xchg
in
inc
fiadds
cmpsl
add
xorb
adc
popa
stos
scas
inc
aas
jns
pusha
lock
and
or
aad
outsb
mov
shrb
add
ror
and
mov
dec
add
inc
negl
cmp
int3
int
mov
pusha
test
out
mov
mov
jne
imul
dec
adc
inc
outsb
idivb
aas
jbe
dec
pop
jne
inc
pop
sti
mov
xchg
je
jae
dec
jb
and
sub
jo
in
adc
cmpsl
cmpl
pop
jge
pop
adc
jnp
idiv
add
inc
in
pop
imul
inc
es
sub
inc
dec
jnp
testl
ret
mov
and
das
inc
outsb
push
lock
flds
iret
pop
sub
push
test
jne
cmp
cmp
lcall
lea
dec
xchg
loop
mov
ja
inc
cmpsb
mov
rcrb
fsubrs
sbb
cmpsb
xor
lods
stos
hlt
shrb
mov
pop
jae
push
fwait
es
xchg
sbb
hlt
sbb
pusha
jo
dec
ds
cltd
mov
insb
loopne
js
fidivrl
pushf
add
cmp
popf
xchg
les
cmp
jge
jne
cwtl
es
dec
popa
loopne
cmp
aas
ja
xchg
dec
das
adc
mov
daa
in
pop
mov
mov
cmp
push
inc
jo
aaa
sarb
lret
dec
mov
adc
out
pusha
pop
jecxz
test
xchg
pop
mov
push
mov
adc
icebp
daa
and
inc
sub
test
lds
movl
adc
lock
pop
lahf
pop
loopne
add
xchg
test
add
jno
icebp
jo
xchg
add
mov
xchg
cmp
mov
outsl
mov
mov
clc
or
pushf
mov
push
cmc
es
sbb
idivl
cld
inc
pop
mov
lods
out
nop
out
cmpsb
aaa
scas
pop
ret
ss
or
sahf
fiadds
dec
xor
shlb
cmp
xchg
jl
out
loopne
shrb
mov
orl
jo
fidivl
push
and
out
int3
int
push
pop
in
sub
popf
jg
inc
push
negl
xorb
sahf
sbb
xor
adc
adc
fcomp
sbbl
dec
mov
mov
mov
scas
out
outsl
sahf
cld
insb
add
and
mov
xor
jns
inc
stc
jne
rcll
sbb
dec
int3
mov
or
sbb
in
mov
adc
mov
in
adc
dec
cld
test
mov
negb
pop
dec
or
cmp
sub
add
inc
xchg
push
cmp
jge
sub
aas
shlb
outsb
mov
stos
sbb
fisttpl
add
push
lods
lods
sbb
xor
jmp
cmpsl
incb
mov
dec
cmpsb
pop
pop
mov
rclb
mov
lds
stc
xor
pop
pop
mov
notl
cmpsb
pmuludq
and
outsl
orb
adc
inc
mov
xor
das
inc
cmp
scas
adc
imul
les
add
xor
adc
in
xchg
pop
dec
loopne
mov
ja
dec
push
jle
and
inc
icebp
sahf
and
icebp
push
adc
cmc
push
imull
repz
lods
and
mov
add
add
jmp
inc
inc
iret
lods
jecxz
shrb
and
pop
mov
rcrl
daa
iret
adc
and
sbb
cmp
dec
and
lods
jecxz
and
sti
sbb
adc
sbb
sbb
and
bound
pop
sub
or
sbb
dec
daa
ja
outsb
add
xor
mov
in
mov
enter
insl
aam
fs
aas
jb
xchg
pusha
rorl
std
mov
loop
jecxz
cmp
fadd
dec
fs
pusha
or
ret
bound
adc
push
push
push
lret
out
in
popa
ds
or
orl
cmp
add
data16
cld
pop
jae
mov
fadds
nop
xor
push
mov
negb
out
shl
ficoml
xor
cltd
sub
jnp
stos
sbb
mov
nop
ljmp
out
mov
cmpsl
adc
scas
pop
fstpt
sbb
std
sbb
xchg
sbb
xchg
jb
fs
je
cs
rolb
shll
out
icebp
stos
mov
jp
cmp
jle
pop
xor
outsl
sub
iret
dec
dec
push
adc
adc
add
pop
sub
test
outsl
dec
mov
inc
insl
test
dec
js
jae
icebp
xchg
jo
push
dec
jge
fs
popf
adc
test
int3
mov
cmpsb
repnz
xor
jecxz
js
adc
lcall
ret
sub
xchg
pop
push
xchg
jns
mov
push
mov
dec
scas
mov
dec
invlpg
dec
fidivl
mov
mov
imul
imul
in
into
push
ds
sub
loopne
cmp
scas
das
aam
push
jl
xor
pop
arpl
iret
shlb
mov
aaa
jo
cmpsl
lret
or
jno
sbb
test
push
jmp
inc
dec
mov
push
iret
rolb
aad
ja
js
scas
cltd
add
popf
dec
or
fld
cmp
pop
add
mov
test
adcl
push
mov
xchg
inc
popa
mov
call
aaa
xchg
fwait
jle
iret
cmp
ja
loop
cmp
adc
lods
sub
and
jle
vpsraw
push
ss
in
movsl
sahf
stos
dec
mov
fmuls
jns
aas
aaa
mov
jne
or
adc
iret
repnz
push
pop
test
cltd
cmp
push
outsb
adc
or
xlat
inc
fisubrs
jmp
pop
jo
mov
sbb
sbb
cmp
push
and
js
cmp
add
adc
loope
pop
clc
lock
mull
cmp
loope
jo
bound
fcomp
movsl
xlat
mov
sahf
adc
dec
fadds
lret
test
push
xchg
dec
out
jg
cli
movsl
jmp
jns
or
push
aam
pop
int3
and
sbb
ds
xchg
das
fidivs
cmc
aaa
movsb
adc
andb
divl
jne
adc
pop
mov
xchg
sbb
rcrb
adc
inc
cmp
shrb
pop
push
aas
push
mov
mov
js
jl
cmp
add
loopne
cmpsb
lret
inc
daa
push
push
jo
je
mov
jmp
sbb
sahf
sbb
mov
paddb
lods
sbb
mov
test
jp
sub
sub
jl
mov
xor
jp
iret
xchg
lods
mov
add
ja
xor
es
push
scas
adc
test
test
imul
pop
sub
dec
mov
out
jae
ret
add
adc
mov
or
and
mov
shll
int3
jbe
dec
rorb
sti
sbb
sti
add
rcrb
adc
cmp
cmp
pop
adc
mov
push
clc
lods
or
js
add
fdivrl
scas
lcall
shll
pusha
mov
scas
push
mov
pop
mov
into
popa
or
rcrl
arpl
cmp
mov
out
xchg
in
push
pop
mov
fs
test
fistpll
adc
add
fstpl
jmp
cmp
xor
pop
arpl
mov
adc
push
pop
add
shr
add
cmp
add
rcll
sti
jbe
jnp
add
into
mov
out
loop
jae
or
ret
lods
and
jle,pt
loope
cmp
ret
adc
jl
push
sub
jle
pop
pop
pop
je
jmp
jmp
add
jo
shlb
test
add
loopne
loope
call
or
xchg
mov
cmp
data16
xchg
je
pop
pushf
cwtl
add
xor
or
loopne
js
or
addb
sbb
jle
inc
scas
test
cmp
or
lret
push
fimull
inc
mov
push
in
scas
aam
mov
push
mov
xchg
push
mov
sarl
lea
jg
std
adc
xchg
addl
sarl
add
fiadds
dec
les
push
insb
ljmp
jne
mov
cli
sub
ret
jae
arpl
xchg
fisttpl
and
les
mov
mov
out
add
iret
mov
push
scas
popf
rorl
cmp
inc
loope
test
mov
lcall
push
loop
shlb
jmp
add
mov
fildl
jae
push
scas
inc
xor
out
scas
sbb
out
jns
xchg
push
scas
jl
inc
cli
lock
pop
cmp
arpl
mov
push
adc
cwtl
pop
inc
insb
fldln2
lds
loopne
jle
out
add
mov
xor
jnp
data16
loopne
loopne
inc
sbb
aaa
pushf
sbbl
jo
dec
dec
addl
pop
xor
adc
cmp
rorl
pop
testl
cmp
add
cmpb
iret
pop
jecxz
sub
xor
out
xchg
jno
push
aaa
je
pop
outsb
inc
iret
jp
adc
push
outsb
fldt
cs
fxch
xchg
add
mov
and
xchg
loope
outsl
es
jo
lods
lods
icebp
push
ret
adc
mov
loope
push
aas
or
xor
fmul
subb
stos
sub
or
dec
loopne
in
adc
xchg
outsl
fldt
jle
or
dec
inc
lock
hlt
xchg
xchg
cmp
xchg
push
aaa
loope
sbb
push
adc
imul
stos
lock
ljmp
xchg
clc
dec
lods
mov
test
lret
lock
adc
inc
mov
fisubrs
scas
stos
add
icebp
fs
pop
push
arpl
inc
daa
or
es
xor
push
jne
add
stos
xor
shrb
xor
jbe
jae
pop
jns
or
pusha
cmc
sub
mov
push
gs
xor
fistps
mov
test
adc
dec
jge
mov
sti
or
add
push
mov
mov
aam
add
movsb
and
jge
jmp
mov
repz
jbe
jb
adc
mov
cmp
cmp
dec
ja
sti
adc
jae
or
popa
in
iret
fadd
xor
cmpsl
xor
cs
adc
pop
jno
inc
and
jo
rcrb
das
lods
in
stos
mov
shl
add
out
arpl
in
xor
aad
loope
or
push
or
mov
arpl
outsl
pop
daa
das
adc
pushf
repnz
dec
sub
fcoml
push
jbe
cmpb
scas
stos
and
jno
xchg
adc
in
and
dec
mov
xorb
fadds
lods
dec
mov
inc
orl
xchg
idiv
xchg
rorl
cmp
pop
ja
adc
mov
pop
add
lfence
mov
add
mov
adc
dec
fdivr
shll
sub
inc
daa
or
sbb
imul
jo
dec
fisttps
scas
jb
mov
clc
add
add
sarl
rol
test
or
lock
mov
cmp
scas
sbb
inc
jne,pt
mov
aas
pop
daa
stos
xchg
adc
aaa
cmp
and
sub
test
lcall
test
cltd
mov
sbbb
pop
ds
lods
jp
rorl
lds
jmp
sbb
std
int3
and
mov
ds
jle
xchg
ja
not
add
loopne
out
mov
jecxz
cwtl
xchg
add
insl
loope
adc
fistpll
mov
jmp
lock
cmpsl
fldl
xor
pop
pop
mov
cmp
mov
lahf
mov
dec
lock
loopne
js
inc
iret
push
mov
pop
test
je
add
and
popf
sbb
stos
rcrb
xor
jg
add
in
sbb
mov
pop
das
dec
rorl
test
xorl
sub
iret
xchg
sub
jmp
add
add
jl
xchg
adc
nop
add
or
or
xchg
movsb
mov
fistps
stos
and
mov
addb
xchg
sbb
push
out
cmp
cmp
cmp
sahf
bound
and
jmp
insb
jle
jns
int3
sub
cmp
subl
clc
rolb
add
add
adc
cmpl
loopne
cmp
jmp
mov
adc
ss
out
shlb
fcmovu
outsl
and
cmpb
xchg
mov
pop
mov
imul
ljmp
lds
scas
mov
jle
inc
xchg
push
add
or
out
add
dec
push
pusha
push
imul
movsb
scas
and
fdivs
test
js
vpextrw
lds
xchg
add
mov
imul
pushf
pop
inc
sub
dec
pusha
mov
push
and
pop
xor
gs
int3
jp
shll
test
jbe
inc
push
add
inc
push
push
lods
adc
push
pop
sbb
jl
adc
mov
pop
xor
fcompl
loope
ret
in
lea
movsb
mov
in
adc
adc
or
adc
das
push
das
xchg
pop
popa
and
iret
cmp
sarl
xor
mov
pop
data16
jge
cmp
aad
aad
inc
shrl
clc
mov
sbb
sbb
push
mov
popf
inc
ss
adc
pop
aas
jbe
jp
popf
jbe
lock
xchg
mov
dec
and
xor
loope
mov
lods
jp
sbb
das
mov
es
scas
push
push
and
lods
add
lods
inc
scas
lock
add
and
dec
push
subb
movsb
push
dec
addr16
into
lret
sbb
imul
imul
xlat
mov
out
cli
cli
add
push
and
sub
lds
shlb
rolb
mov
jmp
call
scas
and
pop
ret
ror
dec
xor
stos
push
das
idiv
mov
sbb
add
es
dec
fdivs
xor
mov
push
stos
hlt
push
fwait
in
sbb
inc
jnp
lea
movsb
int3
lods
psubusw
xchg
sbb
hlt
fstpl
stc
js
pop
stos
jl
adc
add
cltd
fstl
pop
push
pushf
xchg
pusha
lcall
pop
cmp
jnp
or
sbb
and
pop
mov
repz
inc
clc
les
rcll
pop
les
and
scas
adcl
out
stos
adc
imul
cmp
mov
shll
sbb
mov
mov
andb
inc
push
fwait
cmc
insb
mov
xor
repnz
fcmovbe
shll
push
test
and
mov
or
pop
or
xor
shlb
adc
out
pop
lock
icebp
sub
mov
repnz
push
sub
shll
cli
mov
pop
int3
and
jg
ja
arpl
cmp
adcl
ret
cld
iret
and
pop
lret
pusha
aad
dec
pop
pop
jl
xchg
sahf
lods
js
dec
inc
push
dec
pop
sub
lock
fs
aam
cmp
lock
lahf
push
cmc
mov
sbb
and
cmpsl
inc
push
ret
mov
sub
cmp
xchg
out
adc
jo
hlt
cmp
cmp
cmp
loopne
or
add
push
lret
test
iret
mov
lods
push
sub
jg
sub
enter
sti
lea
cmp
jne
dec
fmul
aaa
shl
adc
sbb
xchg
and
in
lea
jo
imul
mov
outsl
loope
jmp
movsb
pop
and
sbb
sub
jo
or
aas
data16
fcmovb
or
jp
cmpl
shll
mov
lds
mov
sub
data16
loopne
sub
or
xor
rol
jmp
adc
in
loop
fistl
popa
and
loopne
dec
cwtl
pusha
shrb
add
je
cwtl
loope
xor
addl
sub
aaa
clc
push
scas
es
pop
adc
lahf
cmp
into
jbe
sub
je
insl
int
loop
pop
mov
mov
mov
and
nop
call
push
and
inc
ss
add
ret
jg
cmp
or
fnstsw
add
jbe
push
ss
popa
shl
popa
iret
cmpsl
test
pop
push
jb
and
xor
test
icebp
stos
dec
roll
aad
or
dec
cmp
or
push
and
dec
loope
mov
sti
cmp
pminub
and
sub
daa
js
add
fdivrl
out
iret
push
adc
inc
icebp
loope
xlat
inc
ret
rclb
scas
and
jp
pop
mov
test
scas
in
xor
push
fadd
and
lahf
push
mov
cld
cmpsl
enter
clc
jp
add
mov
and
lahf
pop
xor
pop
xor
stos
mov
lock
cmpsb
test
daa
inc
or
pop
mov
stos
shrl
jg
rcll
jp
das
movsb
jbe
xor
cmp
adc
jo
test
xchg
scas
lods
cmc
gs
ret
sub
stos
mov
lods
mov
mov
jg
movsb
rcl
inc
jo
dec
pop
sbb
cmp
test
mov
pop
test
dec
push
sub
les
mov
push
xor
imul
sbb
mov
je
or
leave
mov
pushf
pop
outsl
imul
mov
and
xor
repz
mov
push
cmp
mov
mov
and
adc
cmp
sti
movsb
fistpll
add
or
sbb
push
daa
cmp
cwtl
icebp
mov
jecxz
hlt
add
inc
frstor
xchg
or
clc
dec
push
lods
add
lods
pop
sbb
call
sbb
or
mov
ret
pop
in
jbe
cmpsl
cmp
test
push
xchg
and
sub
fsts
xchg
movsl
adc
into
int3
outsb
dec
sub
test
in
lcall
add
xchg
loope
shlb
dec
xor
ret
es
push
xchg
stos
jo
and
push
sub
ljmp
test
jnp
mov
sbb
clc
cmpsl
mov
pop
loope,pn
int3
and
inc
mov
cmp
andl
add
jle
jle,pt
aam
cmpsl
jo
cmp
and
or
ja
push
push
imul
arpl
mov
mov
add
push
inc
add
shll
ljmp
add
scas
loopne
sti
dec
mov
jecxz
xchg
enter
scas
sahf
daa
xchg
nop
sub
inc
cmp
in
pop
xchg
les
mov
jge
dec
into
scas
test
and
call
cmp
push
ja
dec
mov
sub
jbe
adc
inc
rol
cmp
or
or
or
xor
jns
or
and
bound
or
cmp
or
sarl
xchg
fidivrl
sub
mov
push
scas
xor
test
aaa
outsb
xchg
icebp
lods
adc
fcomi
addr16
jmp
adc
sbb
bound
test
pusha
pop
adc
or
sub
add
scas
and
push
hlt
jnp
into
hlt
dec
mov
and
pop
or
push
dec
dec
fwait
jno
add
sbb
xchg
loopne
mov
pop
jns
adc
lods
std
out
push
sbb
add
or
insl
adc
cmp
sbb
or
add
mov
clc
mov
add
or
test
dec
pop
jmp
imul
cltd
pusha
addr16
aaa
popf
add
jbe
add
and
or
fcompl
or
inc
stc
idiv
mov
sub
adc
sbb
sti
fs
movsb
fwait
xor
add
cwtl
cmpsl
sbb
or
addr16
rcrb
xchg
mov
jo
add
loop
cmp
pop
jmp
imul
or
push
test
outsl
push
mov
jbe
rcl
jge
xor
inc
filds
push
stc
adcl
push
push
fnstcw
pop
inc
jl
movsb
shlb
int3
scas
enter
test
and
into
xchg
gs
mov
dec
insl
imul
and
insl
push
ficomps
fldenv
test
bound
in
xchg
jae
emms
mov
or
sub
outsb
jnp
jns
rclb
fwait
mov
shll
loopne
out
ficoms
add
add
pop
or
sbb
xor
cmp
inc
and
dec
loopne
sbb
dec
inc
pop
sub
jbe
add
mov
cmp
pop
je
fucomi
loopne
loopne
add
cmp
xchg
cld
jb
lods
push
popa
sbbl
cmpsl
pop
or
dec
fidivrs
pop
shr
dec
and
push
pop
xlat
lods
data16
pop
add
pop
add
or
outsb
adc
mov
and
xchg
mov
sbb
or
push
addb
fisttpl
subb
mull
push
push
cmp
push
cmp
mov
jmp
jo
pop
sbb
add
xor
inc
or
loopne
or
xchg
jg
jo
inc
mov
repz
xchg
cmp
lock
jo
iret
mov
daa
data16
scas
push
sbb
push
loope
es
and
imul
sub
xor
sub
jae
lods
in
loope
xchg
test
ret
sbb
movsl
push
rclb
xor
mov
add
xor
adc
add
push
xor
ds
xchg
sbb
xchg
or
iret
or
sbb
mov
sahf
mov
icebp
out
aas
jo
mov
je
notb
mov
ds
enter
daa
or
cmp
jno
add
inc
ja
iret
aaa
ds
dec
mov
adc
data16
pop
das
xorl
or
lock
push
ja
and
push
adc
sbb
imul
stc
inc
push
push
sub
dec
lods
adc
inc
mov
movsb
stos
pusha
pop
xor
ret
aad
sbb
movsb
xchg
ja
movb
lock
popf
scas
mov
xchg
movsb
dec
push
fistps
xor
loopne
cmpsb
dec
int
lret
xchg
sbb
add
dec
jb
iret
mov
xchg
push
int3
pop
push
and
in
and
mov
mov
testb
loope
cmc
das
ja
cltd
aas
test
addb
adc
pop
ret
push
je
shrl
movsl
lods
mov
jecxz
test
xchg
xchg
add
jle
fnstenv
outsb
je
das
pushf
pop
shl
adc
push
scas
mov
sbb
cmpl
dec
das
and
xchg
lds
fwait
dec
cmp
jmp
test
pushf
aaa
push
call
inc
aad
pop
or
in
jbe
sub
ret
pop
or
jmp
nop
sbb
inc
sub
jnp
sbb
sbb
cmp
add
leave
inc
ljmp
mov
gs
pop
xchg
out
push
hlt
pusha
pop
xor
add
jae
std
xchg
pushf
adc
or
arpl
jns
movsl
xorl
xchg
nop
and
xlat
loope
push
test
cmp
in
cli
lock
sbb
test
mov
sub
stos
movsb
insl
mov
push
and
dec
jo
xchg
into
inc
xchg
test
xchg
sti
or
sub
push
xlat
je
mov
andl
add
add
cmp
lret
add
jl
pop
imul
and
mov
add
je
xchg
xchg
pop
adc
loopne
xor
jecxz
call
ss
lahf
dec
pop
jns
pop
adc
jbe
xor
shlb
cmp
jnp
or
push
push
dec
xchg
and
inc
pop
pop
push
adc
adc
popa
call
addl
jmp
sub
fidivs
out
xor
and
or
sti
cmp
sarl
out
sub
dec
sub
js
cmpsl
rclb
popf
mov
sahf
in
rorl
mov
flds
stos
mov
add
imul
ror
ret
hlt
cmp
aad
push
outsl
sti
add
xlat
adc
subl
lahf
pop
jbe
in
lahf
pop
cwtl
xlat
sbb
mov
dec
sbb
loope
rol
dec
fwait
dec
push
popa
or
add
out
icebp
decb
add
mov
and
lret
and
enter
cld
das
loope
aaa
mov
pop
outsb
mov
xcrypt-cbc
cmpsl
aad
xor
adc
cmpsb
fmuls
push
outsb
or
push
jbe
movsb
jp
cmp
scas
imul
es
inc
cmp
outsl
pushf
ror
inc
add
dec
mov
or
mov
repz
loope
test
aas
call
add
cmc
ret
lock
mov
and
andl
lahf
and
or
movsb
repnz
fnstcw
mov
loope
jle
jle
and
ss
stos
and
ficompl
popf
popa
fcoms
into
mov
pusha
or
mov
dec
sbb
dec
dec
dec
in
insl
mov
mov
jmp
pushf
jbe
dec
sbbb
repz
scas
je
divl
or
or
mov
xchg
rcrb
pop
jbe
xlat
xchg
je
mov
mov
loope
mov
ja
aas
movb
xchg
test
test
pusha
icebp
imul
loop
mov
push
aas
push
push
scas
xchg
mov
jno
mov
sub
in
mov
mov
mov
andb
mov
mov
lods
lcall
js
mov
mov
scas
clc
or
cmpsl
dec
mov
and
push
and
frstpm(287
push
ror
push
add
adc
fadds
sbbb
js
mov
sahf
inc
pop
sti
repnz
mov
dec
imul
iret
push
cmc
jne
mov
fsubr
fwait
mov
mov
cmp
cmp
or
push
js
push
jno
inc
jl
and
bound
xchg
icebp
popf
add
sub
clc
test
and
bound
push
hlt
push
inc
cmp
and
and
ja
repz
daa
xchg
sbb
pop
jl
cmpb
add
mov
xchg
rol
add
imul
rcll
jl
ret
cmpsb
ds
int3
mov
adc
xchg
and
xchg
jne
loopne
or
jae
stos
and
jge
mov
mov
inc
pushf
je
fcompl
inc
nop
pop
testl
andb
jl
push
push
enter
xchg
inc
mov
cmp
or
mov
int
fisubrs
push
push
push
flds
lea
out
mov
aad
xchg
pop
mov
xlat
mov
rolb
adc
out
sub
bound
repz
and
adc
xchg
add
push
sub
cmp
loopne
mov
and
mov
pop
loop
sub
pop
pop
test
pop
pusha
xchg
jo
and
pop
and
xlat
sub
iret
jbe
lret
jg
scas
xor
xor
mov
jecxz
mov
test
push
das
push
sub
push
lods
ret
arpl
mov
inc
imul
andl
mov
adc
lcall
jp
fsubs
outsl
and
and
sub
mov
or
hlt
int
adc
jl
loope
sub
jl
je
repnz
cs
and
mov
push
inc
pop
sub
cltd
cs
mov
popf
sbb
push
mov
imul
and
adc
frstor
adc
jbe
jmp
and
add
dec
shlb
add
jecxz
pop
dec
ret
mov
push
cwtl
mov
jo
push
ret
outsb
dec
or
dec
jns
add
repnz
push
or
shrb
scas
inc
and
jge
test
mov
lea
and
movntps
and
inc
outsl
loop
push
sbb
nop
or
xchg
xor
inc
lock
jno
mov
ljmp
mov
pop
xor
enter
inc
inc
fisubrl
pusha
daa
pop
mov
ret
or
je
dec
push
inc
dec
lock
faddl
adc
mov
add
sbb
sub
adc
cmc
cmp
dec
rolb
mov
jp
int
aas
addr16
or
cmp
xchg
shll
dec
or
pop
ret
mov
mov
add
fiaddl
and
out
inc
sub
pop
mov
js
lret
mov
scas
inc
dec
shl
sub
addl
sbb
push
test
jnp
inc
or
sbb
test
cs
lods
bound
mov
pop
sbb
out
adcl
xchg
cmp
cmp
sub
sbbb
lea
sub
xchg
arpl
jbe
pop
cmp
push
push
pop
loopne
and
inc
xchg
inc
xchg
adc
mov
stc
push
or
sbb
lret
ds
sub
mov
rolb
push
test
cmpl
and
push
js
pop
xor
jo
xchg
lods
call
mov
dec
add
cli
in
call
xor
add
daa
xor
push
loopne
sub
fwait
popa
test
cmp
mov
bound
arpl
cwtl
mov
jno
enter
shl
pop
pushf
add
jmp
das
frstor
xchg
mov
xlat
add
cld
add
popa
mov
andb
popa
sti
adc
push
lods
mov
adc
sub
daa
cmp
ljmp
rcll
js
imul
and
inc
repnz
sahf
inc
dec
push
sub
jb
scas
fwait
stos
lret
clc
popa
xor
sub
xchg
xlat
inc
cmp
inc
xchg
int3
push
stos
push
add
je
loopne
iret
xchg
adc
lods
aaa
xchg
inc
mov
punpckhdq
or
sub
xchg
adc
movsb
xor
das
add
xchg
adcl
sub
pop
mov
in
add
popf
movsb
dec
sub
aas
andl
and
pop
mov
xacquire
xchg
bound
mov
push
ss
jecxz
xor
fs
xchg
cmpsl
lahf
push
dec
inc
sub
and
jnp
sbb
lcall
cmp
in
scas
pop
mov
xor
daa
push
js
decb
cmp
das
or
inc
rcl
add
mov
cltd
js
lret
adc
xlat
push
jb
and
ret
cwtl
addr16
xchg
or
or
xor
aaa
loopne
sti
lock
mov
loopne
popa
mov
cmpsl
sbb
pusha
mov
pop
jns
dec
das
cmp
or
movsb
dec
mov
xlat
dec
sbbl
bound
lret
pop
jle
cmpsl
cmp
mov
dec
xchg
loopne
outsb
call
cmpsb
fadds
pop
dec
lcall
iret
cmpsb
add
push
sbb
shlb
mov
jmp
inc
movsb
iret
xchg
inc
insl
push
add
push
sbb
movsb
jb
xor
test
cld
insl
outsl
insb
add
test
mov
loop
sub
xchg
mov
cmp
sbb
push
pop
mov
pop
lods
arpl
dec
jp
add
or
cli
jmp
mov
cmp
or
subb
adc
mov
xor
and
sub
jne
rolb
shll
sbb
out
test
xchg
in
gs
cmp
mov
shrb
or
add
push
into
fldcw
test
das
icebp
push
mov
sub
shll
sub
pop
js
repnz
add
push
jnp
inc
jmp
leave
arpl
jae
or
push
fsubrs
insl
xor
mov
pusha
daa
adc
jecxz
add
push
filds
push
push
xor
sbb
or
sbb
mov
add
cld
dec
js
xor
test
xor
lret
mov
mov
pop
xor
mov
add
cltd
inc
int
iret
aas
call
les
stos
out
push
xchg
out
movsb
push
cli
loop
aad
or
adc
xchg
sbbl
test
les
leave
jle
stos
sbb
loope
iret
push
loopne
pushf
aam
mov
fiaddl
mov
pop
in
xchg
pop
ljmp
mov
jns
imul
dec
out
ret
iret
mov
mov
clc
mov
test
ljmp
or
sub
pusha
aad
je
icebp
jno
andl
or
jecxz
add
mov
xor
in
inc
ss
sub
add
test
mov
filds
loop
nop
dec
mov
ja
pop
xlat
test
pop
ret
jb
in
xor
jl
loopne
add
sbb
dec
in
pop
adc
fdivrs
pop
enter
and
jne
mov
lds
jo
in
dec
test
add
cmp
push
dec
lcall
in
addl
sbb
fnstcw
xor
add
mov
and
or
mov
test
mov
sub
ds
adc
sub
das
add
mov
pop
rcl
push
dec
pop
popa
inc
or
test
xor
or
movsl
scas
add
add
insl
cmpsb
push
cmp
xchg
xchg
dec
and
fadds
js
mov
jo
cmpsl
popf
xchg
call
gs
call
rep
outsl
pop
fs
cs
fistps
push
shr
add
and
aam
fs
call
push
mov
movl
movsb
inc
jp,pt
push
subb
pop
mov
arpl
scas
loop
mov
or
test
cmp
pop
xchg
lods
inc
adc
ja
das
dec
mov
mov
jmp
pop
sub
iret
push
loop
xchg
pop
loop
mov
and
or
mov
aam
xchg
add
xor
movsl
add
and
dec
adc
addb
xchg
or
sbb
jo
loopne
sbb
je
add
add
imul
sub
mov
outsl
adc
cmpsl
cmpsl
out
and
cmp
out
push
push
sbb
lods
xchg
push
add
fisubs
mov
add
or
and
jp
test
sbb
popa
imul
or
push
lahf
jp
daa
shl
xchg
ror
cli
popf
xchg
jne
mov
call
dec
sbb
js
test
jno
sbb
or
mov
loop
pop
lcall
inc
cmp
addr16
js
sub
lea
enter
inc
icebp
inc
add
js
popa
push
cmp
cmp
leave
jo
jo
outsb
ret
and
push
icebp
les
movsl
add
push
lahf
xchg
pop
mov
sub
and
or
jbe
scas
xchg
mov
jmp
shl
movsb
and
mov
cmp
or
fnstenv
dec
outsl
rcrb
in
jnp
push
jo
and
add
lods
xchg
sti
mov
push
mov
fdivrs
pusha
xor
sahf
adc
aas
and
mov
ret
leave
dec
test
leave
sub
lea
sbb
mov
out
push
icebp
inc
loop
xor
sub
pop
add
imul
pop
js
mov
dec
stos
mov
pop
clc
inc
subb
outsl
cmp
pop
loopne
addr16
sbb
mov
mov
push
aaa
sub
cli
repz
xchg
pop
lret
mov
pop
push
enter
adcl
call
mov
das
pop
xchg
repz
out
push
hlt
mov
icebp
sub
sbb
dec
sbb
insb
cmp
movsb
cltd
and
sub
repz
arpl
push
jo
and
push
iret
push
pop
pop
test
sub
imul
outsb
shll
nop
dec
test
les
sub
repnz
sbb
sub
push
or
pop
in
jne
jecxz
pop
rorl
push
loop
sahf
in
add
push
xor
lret
jge
mov
nopl
xor
aas
adc
or
iret
dec
fwait
mov
or
lret
stos
rcpps
pop
or
fsts
ljmp
aaa
xchg
sbb
or
xchg
fdivs
sub
lret
int3
push
cli
add
std
gs
adcl
lahf
adc
test
jl
dec
sub
mov
and
xchg
mov
push
aas
push
and
xchg
xor
mov
test
dec
in
push
xchg
aad
cmpsb
nop
add
inc
aam
mov
loopne
pop
dec
pop
inc
imul
adcl
movsl
dec
out
stos
xchg
sbb
faddp
jmp
out
cmp
addb
or
or
push
xchg
or
or
cmp
jp
test
lock
cmpsl
inc
bound
cmpsl
pop
sub
out
sbb
inc
clc
dec
add
aad
mov
jl
sub
imul
and
inc
xchg
push
fsubs
cmc
sub
adc
pop
sbb
lahf
ljmp
stos
pop
xchg
rcll
rolb
dec
jnp
out
cld
rep
das
daa
loope
pop
mov
mov
jno
daa
sbb
arpl
idivb
and
mov
jg
dec
fstpl
pushf
jecxz
les
jl
add
lds
cmp
inc
dec
sti
or
push
fdivs
or
adc
jo
nop
mov
jmp
xor
loope
or
jg
cmp
sbb
ret
sbb
lods
imul
xchg
cmp
cmp
shrl
sub
inc
je
fcoml
popf
add
add
arpl
cmpsb
push
adc
push
push
or
test
mov
into
scas
add
mov
mov
or
jl
leave
lods
xor
shlb
aaa
pushf
cmp
push
sub
aaa
sub
sbb
push
sbb
jl
lds
jge
or
mov
add
aam
xor
push
and
inc
lret
lods
jmp
cmpsl
clc
xchg
scas
mov
sbb
dec
pop
out
push
cmpsl
adc
mov
jecxz
push
push
push
or
mov
inc
dec
orl
sub
pop
rol
xchg
push
adc
jb
mov
pop
imul
lret
ljmp
test
adc
sbb
out
and
and
cmp
sub
jle
cld
push
incb
mov
push
mul
cmp
and
jno
push
test
movsb
lret
sti
popa
mov
hlt
or
or
mov
fbld
pusha
stos
jo
mov
xor
xor
punpckldq
out
push
iret
dec
jb
add
add
fdivs
negb
scas
test
lock
faddp
adc
dec
ss
pop
jp
imul
das
push
xor
and
dec
out
lods
sbb
sbb
insl
adc
jmp
dec
repnz
ss
push
out
or
mov
loopne
push
push
loopne
inc
fldenv
sub
pop
mov
and
rorb
mov
add
jge
addr16
ret
std
mov
lock
mov
jp
xchg
sbb
rcrb
rcr
sub
xor
retw
es
data16
jbe
xchg
cmp
add
push
je
stc
push
ret
cmp
and
cs
push
rorb
mov
js
push
add
loop
lock
cmp
inc
daa
dec
pop
and
jo
mov
and
pop
sbb
ja
mov
push
cmp
sbb
and
sbb
cmpsb
sahf
dec
mov
das
daa
flds
notb
and
cmpb
cmp
adcb
arpl
loopne
sub
mov
mov
jno
mov
ret
pop
aaa
movsb
mov
in
mov
sahf
cmp
xchg
inc
ja
aam
fiadds
xchg
lods
sbb
mov
lds
in
push
rcll
dec
cmp
int3
sub
popf
jae
dec
and
das
repz
out
cmp
daa
and
shrb
mov
xor
and
sub
cmp
inc
pop
rcl
add
mov
mov
dec
dec
cld
movsl
loope
es
inc
xchg
adc
jb
push
cmpsl
pusha
sub
jg
push
xlat
mov
xchg
movsb
sub
mov
mov
nop
inc
jmp
xchg
or
mov
jb
fidivl
xchg
daa
std
fcmovbe
mov
sbb
push
loopne
addps
nop
mov
scas
push
push
scas
loope
inc
cmp
xchg
stc
roll
adc
leave
jmp
pop
jle
stos
inc
mov
repnz
xchg
adc
sbb
ffree
sbb
mov
mov
popa
hlt
mov
cmpsb
inc
icebp
jo
mov
add
sub
lods
or
lods
sarl
js
call
push
push
push
fisttps
add
push
xchg
ret
or
imull
call
mov
or
cwtl
rcrb
insl
push
xlat
sbb
cmp
jecxz
add
or
loop
push
mov
or
push
in
add
mov
jne
push
cltd
shrb
decl
and
or
inc
cmpsl
outsl
fisubrl
iret
add
mov
lods
popf
js
mov
jno
adc
popf
sub
xchg
jnp
push
and
je
roll
mov
fnstcw
out
mov
cmpsl
je
aam
stos
outsb
fdivp
fdivs
cli
inc
loope
cmpsl
fistpll
or
sub
nop
mov
pop
inc
jbe
outsb
call
or
and
dec
leave
dec
jecxz,pt
xor
cmp
cmp
daa
clc
jmp
xor
push
adc
push
jns
mov
sbb
shll
das
fmuls
push
xchg
mov
jne
push
mov
dec
loopne
sti
fistpll
sub
das
sub
push
cmpsb
mov
out
mov
sub
and
or
out
add
or
outsl
js
add
sbb
add
dec
cmp
xchg
push
dec
loopne
xchg
xor
pop
es
mov
notb
lock
dec
sbb
jmp
jbe
negb
sbb
or
mov
jbe
mov
sbb
inc
jl
sub
and
and
or
daa
xchg
cs
pop
xchg
into
sbb
rep
and
cltd
push
repnz
lods
adc
push
add
rcl
popa
or
push
xlat
lret
int
mov
add
ret
xchg
and
pop
push
dec
lods
cmp
sarl
loopne
or
mov
or
pop
daa
inc
pop
mov
in
push
mov
or
popf
ss
cmp
das
xchg
mov
xchg
mov
loope
pop
or
dec
mov
inc
in
pop
xchg
pushf
jne
lds
sbb
mov
in
mov
cs
sbb
loope
adc
add
push
pop
lea
sbb
push
orb
pop
xor
jmp
ja
popf
cmp
mov
jo,pn
add
stos
jp
add
in
shlb
inc
test
add
pop
clc
pmullw
dec
lods
sbb
push
stos
test
cwtl
push
push
or
jecxz
loope
inc
inc
mul
sti
jecxz
sbb
mov
neg
dec
cmp
frstpm(287
fwait
sbb
adc
mov
test
jne
repz
jns
loopne
ret
mov
stc
loope
ds
add
sti
int3
add
sbb
jmp
push
dec
in
dec
push
iret
addb
fldl
inc
adc
les
es
sbb
mov
jbe
movsb
test
lods
sub
inc
data16
data16
pop
mov
in
pusha
das
inc
fs
push
jo
xorb
loopne
mov
mov
xchg
mov
orb
outsl
xchg
or
arpl
push
add
insl
xchg
fiadds
mov
icebp
rcr
movsb
fstl
mov
dec
test
repnz
hlt
bound
sbb
jns
add
inc
repz
push
fistpll
shll
je
dec
sub
push
js
cmp
push
shrl
enter
xchg
mov
fmul
push
cmpsb
scas
adc
add
add
andl
into
les
das
add
aad
enter
les
cmp
xchg
add
sbb
inc
js
and
test
sub
cmp
popf
mov
das
inc
lret
outsl
mov
shl
bound
inc
mov
cmpsb
adc
idiv
inc
scas
pop
jle
mov
dec
push
or
xchg
add
aad
outsl
call
test
mov
sbb
push
sub
icebp
lock
je
mov
mov
mov
sub
out
loopne
es
lcall
shll
mov
aad
jmp
xchg
mov
test
aaa
movsl
repz
xchg
mov
int3
inc
push
push
and
lock
push
xchg
test
and
cli
nop
fcoms
inc
add
loopne
stos
mov
xchg
into
jo
iret
movb
in
cs
iret
pusha
enter
and
push
or
testl
scas
into
adc
clc
nop
pop
cmp
sbb
pushf
push
test
dec
mov
mov
mov
mov
xchg
or
sbb
iret
push
mov
xorb
popa
jbe
sbb
pop
mov
inc
lods
cmpsb
or
orl
mov
lea
ret
sbb
lret
dec
push
jle
add
sbb
pop
mov
cmp
dec
mov
orb
inc
mov
xchg
loope
cltd
movsl
jb
or
inc
rcrb
data16
jp
pop
mov
adc
js
fldenv
lds
mov
jge
aaa
xlat
lcall
popf
and
xor
roll
out
sar
pop
lods
cmp
xorl
jecxz
jmp
xchg
mov
cld
lock
movb
sarb
stc
pop
fwait
pop
movb
das
test
imul
movsb
xchg
dec
mov
scas
fdivs
sbb
fwait
or
iret
loope
aam
loopne
mov
pop
mov
fnstcw
pop
mov
imul
inc
xor
aas
mov
and
in
xchg
pop
xorb
mov
add
imul
add
rcrl
fcom
dec
pop
inc
ja
lea
ss
les
sbb
or
mov
test
iret
outsb
inc
pop
jmp
sbbb
pushl
ljmp
loopne
fisubrl
pop
out
jecxz
das
push
icebp
push
movsb
sbb
inc
xor
xor
xor
jmp
dec
adc
adc
lock
addr16
loopne
or
repz
imul
lahf
iret
inc
outsb
arpl
cld
sub
loope
repnz
movsl
or
daa
xor
rclb
cli
xchg
adc
xlat
or
add
mov
inc
rorb
stc
insl
test
add
stc
inc
mov
lds
movsl
cli
push
mov
cs
inc
nop
stos
movsl
rol
add
movsb
pop
dec
mov
sbb
ja
add
and
and
or
add
rcll
adc
pop
and
test
add
pop
sub
int
leave
xor
mov
lret
lock
addr16
dec
insl
sbb
sub
and
cmp
out
xchg
dec
dec
outsl
or
cld
lds
pop
js
sub
xor
push
stos
out
cltd
insl
pop
mov
mov
cmp
in
add
mov
jne
ja
stos
push
add
inc
xor
inc
dec
cmp
add
sbb
mov
mov
cmc
lods
out
packssdw
xlat
sub
push
mov
imul
mov
fldl
add
and
mov
xor
lock
mov
mov
add
js
or
jl
ret
roll
sarb
push
inc
push
dec
jecxz
clc
rcrb
inc
cmp
and
or
jnp
add
aas
mov
sbb
stos
dec
out
roll
iret
lahf
adc
add
rcrb
jns
pop
jle
push
adc
aas
in
iret
repz
mov
add
addr16
lock
and
pop
mov
bound
shlb
add
lock
pusha
cmp
ja
xor
lds
sbb
rorl
add
cmp
outsb
xor
dec
int
jno
cmc
add
incb
loopne
mov
mov
adc
push
fbstp
icebp
dec
andl
adc
in
lret
test
cld
rcpps
ret
xchg
mov
out
enter
int
cmp
fldenv
add
adc
pop
or
dec
jge
loopne
dec
xor
ret
and
js
fsubl
addl
jb
scas
les
pushf
je
jbe
and
cs
cmp
packssdw
movsl
jb
rorl
popa
lock
sbb
mov
pop
sub
xchg
push
lea
clc
and
dec
imul
ss
or
aad
cmc
xor
inc
scas
push
and
or
cld
add
pop
add
push
incl
shll
cmpsb
jae
sahf
popf
or
loopne
cwtl
iret
movsl
jns
sub
jno
cmp
or
pop
or
stos
sub
xchg
push
jb
inc
lret
or
ret
mov
scas
mov
cmp
push
mov
push
cltd
and
popa
je
jne
in
pop
stos
inc
lret
push
lods
sub
or
pop
add
faddl
fbstp
push
test
pushf
push
imul
gs
popa
mov
and
std
roll
iret
pop
scas
loopne
jge
sub
sub
xor
imul
xor
dec
sbb
mov
cmp
sub
cmc
xchg
je
dec
push
adcb
pushf
test
push
test
inc
sbb
pop
and
and
and
add
out
aas
lds
add
pop
lahf
stos
push
push
jo
mov
daa
sub
lret
adc
std
lahf
jecxz
sbb
scas
into
mov
jno
popa
adc
cmp
insl
sahf
rcrb
lock
ja
sbb
loopne
popa
mulb
lock
das
mov
fsubl
add
push
cmp
add
rorl
mov
sahf
dec
mov
lods
mov
loope
in
push
mov
jo
dec
stos
out
adc
or
sub
es
and
xchg
pop
inc
aad
lret
jb
jmp
xchg
mov
inc
xchg
imul
faddl
and
cmpsl
xor
gs
dec
add
leave
xchg
push
sbb
xor
sub
mov
pop
cmpsb
lods
repnz
fwait
adc
aam
orb
jbe
repnz
pop
pop
mov
dec
jmp
pop
adc
aad
or
ret
cld
add
mov
or
divl
push
push
jge
fidivrl
cmp
mov
rolb
lods
push
or
cmp
add
inc
std
lods
push
xor
mov
dec
xchg
rorl
jecxz
and
push
xorb
loop
into
xor
cltd
xor
add
mov
or
js
inc
or
loop
jnp
addb
in
cmc
and
mov
or
sub
int3
pop
push
nop
loope
push
lret
adc
pop
js
add
and
mov
xchg
popl
jb
movsb
pop
push
out
fdivs
iret
inc
aaa
xor
ret
iret
fsubrl
and
xchg
inc
lds
shrl
scas
jecxz
add
loope
cmpsl
mov
mov
jge
fldcw
cmpsb
add
inc
xchg
or
mov
dec
jg
int3
add
mov
rcll
cmp
sbb
mov
jne
loopne
pop
cmp
scas
sbb
hlt
cmc
aaa
iret
adc
sbb
mov
in
out
popa
scas
daa
xor
fldl
fiadds
mov
push
cmpsl
xor
mov
jbe
sbb
xchg
hlt
jo
mov
iret
in
aad
sbb
mov
int
lahf
adc
loope
lods
ret
outsb
loope
stc
jo
add
adc
insl
xor
xor
and
xorb
mov
aaa
jle
daa
or
or
cmp
or
mov
pop
jg
jnp
mov
sbbl
imul
sahf
sub
xchg
iret
sub
subl
fwait
xor
add
adc
outsl
or
dec
sbb
mov
sbb
mov
add
xor
rclb
rorb
enter
or
add
add
dec
xchg
shlb
add
test
cwtl
adc
and
addr16
and
stc
xor
add
sbb
jne
mov
push
jle
lcall
or
stos
and
mov
or
lds
add
sahf
frstor
sbb
icebp
push
mov
inc
sub
fwait
loopnew
mov
mov
leave
mov
push
pop
or
dec
add
idivb
or
and
iret
jle
mov
clc
rcll
lods
xor
mov
xchg
and
pop
daa
daa
fwait
add
cmp
aaa
dec
les
add
adc
cmpsb
out
mov
push
imul
loope
fldcw
mov
pop
dec
dec
fmull
js
cwtl
push
inc
add
or
call
or
xchg
jle
in
add
lcall
loope
lods
cmpl
or
ds
add
orl
out
lahf
jle
fcoml
pop
lds
cwtl
sbbb
xchg
in
mov
add
jecxz
call
adc
je
sbb
jmp
lock
pop
ljmp
add
or
mov
outsb
mov
push
add
mov
jbe
popa
mov
sbb
cmp
pusha
xchg
subb
lock
pop
clc
sbb
cld
xchg
inc
mov
jle
test
jecxz
out
adc
add
sbb
pop
in
xchg
sbb
ret
icebp
jbe
cmp
dec
pop
pop
loopne
sarl
add
mov
xorl
push
rolb
xchg
mov
int
pop
lcall
and
cmp
je,pn
mov
and
mov
mov
mov
inc
adc
xchg
shrb
add
and
popf
movlps
hlt
lods
or
ret
dec
add
xchg
aaa
imul
cmp
pop
sub
sbb
adc
mov
sbb
mov
adc
iret
xchg
sbb
arpl
add
jp
add
push
or
lods
sbb
sbb
testb
cmpsl
or
roll
das
les
jecxz
dec
sbb
push
inc
cwtl
dec
movnti
xor
cmpsl
mov
sarl
mov
inc
jne
pop
imul
das
lret
mov
jo
mov
or
sub
mov
xchg
stos
adc
insb
pop
ja
xor
adc
push
in
jne
mov
pusha
movsb
ja
jnp
jo
inc
sub
cmpl
shrl
sbb
xchg
nop
add
mov
pop
sahf
jecxz
shlb
xorl
dec
ja
and
mov
fwait
rcrb
push
push
sbb
imul
sbb
xchg
jb
lods
push
in
stos
js
adc
sub
sub
prefetch
or
sbb
shll
test
push
and
mov
pop
rcl
push
xchg
cmp
aas
push
sbb
loope
add
inc
imull
popa
in
adc
jmp
mov
bound
popa
xchg
addr16
sbb
pop
inc
rcrl
mov
inc
fdivr
ret
pop
lret
imull
ret
iretw
dec
xor
or
jecxz
push
push
mov
push
test
int
lahf
sub
pop
lods
mov
stos
hlt
rclb
push
pop
fbstp
xor
xor
pop
xchg
xlat
sbb
jp
push
hlt
or
pop
shlb
cmp
push
pop
dec
sbb
sub
cwtl
xor
and
push
jecxz
es
add
aad
test
roll
insb
or
adc
add
mov
sbb
lock
mov
cld
or
je
rcrb
aam
into
lods
rorb
cmp
pop
jecxz
and
mov
movsb
sti
mov
dec
rorb
sbb
inc
add
das
icebp
add
xlat
inc
sub
adc
xor
lods
imul
xchg
ret
movsl
iret
lret
inc
sub
outsb
mov
jo
sbb
adc
lods
mov
out
add
mov
pop
xchg
push
out
movb
loopne
push
xchg
mov
jmp
xor
or
xchg
into
sbb
add
ficomps
mov
sub
push
add
sub
mov
scas
sbb
add
ret
push
aam
es
loopne
fisttpl
aam
mov
or
dec
xor
or
fists
lds
push
stos
and
dec
int
dec
push
cmp
inc
push
xor
int3
mov
popa
xchg
xor
test
add
orl
js
jo
testl
cmp
int
push
xor
xor
loopne
mov
and
or
add
rcrl
arpl
ds
add
fst
xchg
ret
and
test
mov
mov
outsb
xlat
iret
mov
js
js
fmul
sbb
fisttpl
out
roll
and
call
push
or
mov
sub
shlb
or
loopne
cmc
js
icebp
enter
fnstcw
les
faddl
je
mov
jle
sti
adc
pop
lods
mov
mov
push
fildll
mov
addr16
sub
lret
push
inc
fstpl
andl
out
andb
xchg
mov
sub
ltr
into
add
popa
mov
out
test
js
add
jmp
xlat
and
popa
add
orb
or
inc
adc
pop
cs
js
push
daa
int3
dec
add
mov
or
add
test
pop
dec
and
sub
dec
xor
shll
scas
mov
push
call
mov
xchg
mov
push
jge
xchg
and
or
jo
fcmove
sbb
fsubl
xchg
rcrb
ficomps
daa
dec
shrl
pusha
popa
sbb
lds
dec
fcom
pop
lret
or
lods
cmpl
xchg
pusha
pushf
sub
pop
das
jg
fiaddl
das
stos
and
mov
mov
jle
push
sub
iret
xchg
pop
dec
and
xor
pop
cmp
mov
rcr
aaa
mov
inc
in
or
das
inc
xor
inc
sub
cwtl
dec
or
test
push
push
push
push
iret
add
fs
xlat
scas
je
sahf
jno
sub
xor
sub
mov
outsb
jl
movl
test
test
pop
mov
out
das
movsb
fisubl
fnstenv
mov
mov
mov
xor
lock
shrb
mov
pop
stos
test
es
aad
pushf
add
jbe
ss
arpl
nop
push
and
popa
cmpsb
or
push
sbb
sub
je
mov
inc
iret
mov
scas
mov
push
leave
test
fcomps
inc
rorl
cmp
fbstp
adc
daa
out
add
adc
sub
push
sub
inc
orb
pop
repnz
mov
inc
push
mov
movsb
sub
or
test
add
lods
mov
sub
addr16
jge
add
fsubs
sbb
fwait
sub
push
sub
push
pusha
push
movb
push
sub
jbe
add
push
push
dec
iret
je
andb
adc
mov
xchg
mov
xchg
push
push
pop
jecxz
rcl
ret
ret
pop
lods
jo
sub
push
and
aaa
pop
mov
xchg
mov
inc
imul
test
repnz
pushf
sub
je
rcrl
mov
loope
inc
fadds
stos
fwait
ja
fidivs
and
test
gs
in
inc
clc
mov
cld
inc
stos
inc
mov
dec
scas
and
sbb
jecxz
aas
in
js
mov
arpl
fwait
iret
shll
xor
xchg
je
pop
mov
add
jae
lahf
jne
inc
cmp
pop
mov
test
adc
xchg
push
pop
call
les
test
jno
outsb
clc
xor
cltd
xchg
aaa
std
ds
jne
loopne
pop
xorl
ja
sub
arpl
push
cmp
or
or
in
xchg
inc
push
cmp
stos
mov
idivl
add
add
mov
repz
fbld
leave
sbb
adc
jmp
aaa
pop
mov
mov
mov
mov
mov
cs
adc
mov
rcrb
sbb
aam
sbb
and
pop
dec
mov
rclb
add
adc
lods
mov
cmpsl
add
into
add
pop
inc
mov
cmp
iret
mov
xor
fisubs
inc
sbb
lods
cwtl
lods
int3
xor
cmpsl
jmp
cmpsl
jb
dec
push
pushaw
fildll
inc
movb
cmpsb
xor
sub
arpl
pop
and
inc
leave
repnz
stos
iret
int3
loope
arpl
mov
icebp
inc
or
push
inc
cwtd
orb
adc
cmpsl
or
sbb
popf
cltd
add
addr16
addb
test
cli
dec
je
cld
push
add
pop
and
adc
push
pushf
aaa
je
scas
fcmovnb
faddl
push
bound
arpl
fiaddl
sbb
xlat
or
push
rorb
xor
pop
inc
or
lret
jne
or
jecxz
xchg
push
iret
cmpb
in
dec
xchg
inc
ljmp
pop
out
in
sbb
push
sbb
aaa
fiaddl
lcall
es
adc
daa
popf
dec
popaw
mov
pop
pop
or
cmp
xchg
push
inc
push
cmp
gs
or
mov
sbb
roll
fsubrl
adc
or
aas
or
ficoms
push
js
outsb
xlat
push
add
lods
test
push
jp
push
jp
add
push
popa
addb
push
jnp
xchg
insb
das
mov
and
lret
in
jo
cmpsl
sub
jge
pop
ret
movlps
mov
in
pop
add
or
mov
out
rclb
push
sbb
iret
adc
or
ja
cmp
cmpsl
push
sbb
dec
test
cmpsb
mov
addb
lea
cmpsl
add
pop
ljmp
push
outsb
arpl
xchg
aaa
inc
jecxz
mov
rorl
mov
push
ret
into
int
mov
or
lods
xchg
sub
adc
cltd
or
and
mov
sti
addr16
jne
jo
call
icebp
sub
stc
add
push
pop
xchg
xchg
insb
xchg
imul
in
adc
insl
daa
testl
jmp
sbb
das
orl
nop
fsubrl
push
adc
add
pop
or
js
adc
add
add
loope
ss
iret
ds
rclb
and
js
jo
enter
je
pop
pop
or
xor
ljmp
cmp
gs
pushf
xchg
or
insb
push
das
in
lahf
stos
aas
jg
sbb
and
loopne
cmpsl
mov
cmp
daa
jne
sub
cmp
inc
or
lods
loope
rcll
add
add
inc
mov
imul
push
sub
jg
add
jg
add
add
inc
mov
sahf
lods
fbld
aaa
movsb
ret
lock
jl
rorb
jmp
pop
mov
sbb
lcall
lock
jb
jecxz
pop
rorb
and
inc
addr16
call
out
cmp
ficoml
xchg
ss
push
mov
pop
inc
or
shrl
loop
jbe
push
jmp
lret
scas
push
ret
push
or
jl
imul
daa
pop
lahf
outsb
add
cmp
and
imul
bound
or
stos
jbe
daa
sbb
pop
add
pusha
dec
adc
mov
mov
dec
and
mov
ficoml
sahf
fistpl
popa
or
ja
xchg
sub
xor
hlt
sar
out
cmp
sbb
test
arpl
test
and
and
mov
cmp
cmp
xlat
jbe
hlt
jecxz
fisubs
fcom
icebp
fbstp
xchg
dec
jbe
mov
outsl
and
movsl
and
jbe
xor
jne
cld
aaa
into
push
and
lock
xor
inc
movsb
cli
mov
or
dec
sub
jmp
sub
and
cmpsl
test
sub
lock
icebp
popa
jle
fwait
movsl
imul
inc
jb
loop
aam
call
sbb
lods
aam
mov
pop
inc
iret
push
cs
or
mov
mov
popf
pop
das
loop
es
sbb
cmp
xchg
clc
or
push
lock
ljmp
jg
xchg
xor
test
lcall
imul
jno
jbe
or
jp
push
inc
xor
or
das
in
mov
lcall
and
mov
je
xchg
mov
mov
clc
jecxz
sub
sub
and
inc
in
fwait
inc
pop
push
push
lods
mov
and
or
fistpll
jmp
test
dec
inc
fists
loopne
or
lcall
lds
rclb
and
mov
icebp
sbb
adc
jb
dec
xchg
push
popl
sbb
jne
push
or
xor
shll
stc
fs
mov
and
cli
pop
ret
cmpsl
dec
lock
das
mov
xor
je
and
sub
or
sbb
xlat
pop
mov
fnstcw
jle
scas
inc
mov
test
loopne
or
ja
mov
xlat
mov
cltd
mov
fistpl
loop
sbb
mov
inc
jmpw
inc
movsl
lret
xor
frstor
loope
lcall
or
cs
mov
pop
cmc
jnp
mov
xchg
scas
push
loopne
pusha
loop
data16
popf
add
add
sub
mov
jbe
int3
out
inc
sub
jg
sbb
es
jns
sub
cmp
jne
iret
mov
test
test
jo
sbb
pop
xorl
cltd
fildl
in
and
outsl
cmp
add
push
mov
sub
push
mov
cmpsb
and
xchg
xchg
and
lcall
xor
dec
aam
pop
sub
add
push
lods
dec
sub
xchg
addb
or
cmp
daa
pushf
cmpsl
mov
nop
push
js
xor
cmp
xorb
jo
jge
jns
movb
xor
cmp
push
mov
sub
cmp
rorb
add
push
push
add
xor
loopne
test
aaa
adc
dec
mov
and
ds
xchg
insl
shlb
das
loop
and
sbb
jg
push
pop
xchg
push
or
test
rorb
jne
lods
push
ja
cmp
jno
cmc
call
push
add
stos
sbb
mov
mov
ss
add
push
push
dec
fldt
and
mov
out
das
loop
popa
xchg
sub
or
push
dec
sub
add
dec
ja
test
and
lahf
inc
cltd
xor
dec
push
jne
dec
dec
cld
push
je
lods
add
dec
addr16
push
sub
push
ja
mov
jo
movsb
icebp
adc
jle
jno
xlat
push
sub
push
or
bound
scas
cltd
pushf
jo
push
push
dec
pop
jno
push
pop
stos
push
decl
sbb
movsb
jb
adc
lock
sbb
mov
xor
dec
cmpsb
jl
pop
jmp
or
mov
popf
lea
or
sbb
shrl
mov
push
rcrl
jl
sar
xchg
pushf
add
cmpsb
nop
popf
xor
lcall
dec
leave
add
inc
das
mov
mov
and
adc
orl
fildl
pop
jmp
sub
xadd
add
xchg
sti
add
mov
sar
in
and
xlat
imul
mov
inc
cmc
cmc
ljmp
inc
adc
cld
cmp
inc
xor
xor
and
in
inc
and
mov
popa
mov
mov
cwtl
out
fstps
iret
adc
add
cmp
lock
sub
cmpb
add
lods
testl
sbb
mov
add
sub
bound
or
add
insb
dec
mov
adc
xchg
outsb
add
inc
divl
ret
and
cs
sahf
pop
inc
and
popf
sub
or
adc
imul
idivb
je
pop
or
push
sarl
and
pop
jne
sbb
sbb
add
pop
mov
pop
ficoml
pop
adc
push
test
cmp
fmuls
pop
sbb
xchg
dec
push
ret
xchg
icebp
ja
adc
stos
adc
sbb
lods
push
in
daa
or
nop
mov
fistpll
jbe
xchg
ds
cltd
pop
cmp
repz
add
test
test
sahf
cmp
sbb
mov
dec
popa
mov
mov
sub
mov
outsl
popa
pop
lods
adc
mov
add
dec
sbb
pop
and
or
add
fidivl
cld
push
and
sbb
xor
fidivrl
fdivrl
jae
add
leave
add
mov
push
outsl
mov
mov
ret
cmpsb
loope
js
shlb
and
jg
cmp
push
sub
jp
mov
add
xchg
and
loope
js
or
pop
dec
stc
das
cwtl
cli
add
and
adcl
rcll
push
add
dec
lds
inc
aaa
rorl
shrl
arpl
mov
ja
lea
ret
mov
add
sbb
xlat
ret
ret
and
xchg
mov
sbb
sbb
push
add
adc
sub
push
cmpl
dec
ja
mov
loop
add
adc
mov
push
fsts
lret
adc
cwtl
push
xchg
cmp
mov
and
prefetcht0
jae
and
bound
jnp
pop
adc
add
push
movsb
xor
mov
lods
pop
leave
dec
mov
sbb
cmp
lret
loope
jecxz
cmp
dec
push
ret
push
push
mov
push
rclb
xchg
mov
fsubrs
lcall
lods
add
mov
mov
or
pusha
mov
ss
cs
inc
call
inc
xchg
adc
mov
scas
xor
sbb
jno
xor
test
xor
mov
push
cmp
scas
inc
pop
mov
cs
or
sbb
iret
cmp
lahf
sub
or
outsb
mov
es
mov
loope
es
jmp
mov
loope
or
sub
pop
adc
xchg
cs
sbb
sbb
or
loop
je
repnz
add
imul
push
pop
mov
sub
enter
imulb
data16
adc
jp
pop
jg
bound
push
xchg
aam
in
xchg
pop
lods
fdivs
pop
lods
out
daa
divb
lods
add
lds
add
stos
pop
dec
loopne
add
mov
ja
sub
cltd
sbb
mov
vmread
loopne
or
and
adc
dec
aaa
gs
mov
scas
dec
test
pop
out
hlt
cmp
dec
pop
pop
xchg
cmpsl
cmp
mov
xor
cltd
add
mov
clc
dec
sub
rolb
push
pop
mov
mov
pop
jge
or
adc
sbb
jno
xlat
mov
jnp
ret
and
push
mov
add
cs
mov
push
pushl
cwtl
movsl
int3
outsl
pop
ret
mov
js
and
add
dec
xor
je
add
push
pop
iret
push
pop
jmp
dec
inc
jbe
mov
add
jb
sub
add
ror
sbb
scas
lock
aaa
lds
cmp
xor
repnz
dec
div
pusha
pop
xchg
push
cli
push
inc
in
out
mov
xor
jno
divl
push
hlt
int3
ss
js
inc
insl
movsb
push
adc
inc
jle
fld
sbb
mov
popa
gs
mov
mov
sub
xor
stc
dec
jcxz
test
data16
xor
dec
fmuls
mov
jno
xchg
in
lds
in
sub
ds
call
out
push
pusha
add
shrl
pusha
out
das
cmp
int
mov
rclb
and
push
push
lds
cmp
mov
sbb
xor
imul
adc
jne
test
dec
fwait
mov
cmp
loope
dec
movsl
test
xorl
jmp
cmpsl
fstps
push
and
adcb
push
mov
add
or
jl
mov
cmp
outsl
rclb
push
sbb
mov
push
mov
mov
add
pop
dec
mov
add
daa
inc
enter
test
add
sub
mov
mov
pop
dec
add
push
lret
ret
mov
mov
cmp
push
ss
pusha
sarl
adc
mov
cmp
jo
adc
xor
adc
cmc
div
sbb
int3
xor
iret
push
mov
push
std
jle
cld
cmp
popa
add
inc
jne
xchg
movsl
xor
mov
push
jg
std
xchg
xor
push
sbb
pushf
xlat
inc
pop
sbb
dec
js
es
xor
idivl
mov
lea
pop
out
pushf
pop
pop
ss
mov
arpl
mov
ja
inc
sub
int3
int3
jns
dec
lret
lds
dec
aam
pop
mov
mov
rcr
cld
xlat
ja
shlb
cmc
out
fidivl
cmp
icebp
scas
sbb
cmpsb
repz
shrb
movsl
sub
addl
inc
push
mov
xchg
repz
inc
add
test
movlps
mov
pop
shlb
fists
rclb
int
xor
inc
shll
or
movsl
jno
movsb
push
sub
iret
ror
popa
out
push
push
mov
lret
sti
fcoms
das
mov
bound
or
add
jle
mov
js
cwtl
ret
ljmp
inc
xchg
push
and
mov
outsb
test
jo
aam
mov
incb
jo
iret
lea
dec
cmp
push
cmpsl
push
sbb
js
test
xchg
jo
mov
cmp
fistl
xchg
add
rcrl
and
mov
push
out
les
add
xchg
xor
or
lods
dec
jo
or
cmp
sub
outsl
dec
iret
ret
dec
jecxz
cmp
xchg
test
jmp
loop
and
xor
cmp
lcall
imul
cmpsl
out
inc
repz
or
or
hlt
aam
vshufps
dec
movsl
add
push
mov
or
dec
orb
push
jnp
ds
jno
movsb
nop
rorl
mov
nop
sbb
sub
test
cmp
sub
cmp
pop
arpl
ljmp
mov
sub
xor
cmp
daa
sbb
cmpsl
sbb
xor
es
sub
and
sbb
lret
test
sub
adc
inc
push
clc
ret
out
sbb
jmp
add
add
or
jecxz
push
or
jl
lods
xor
movb
ret
push
ss
sub
xlat
push
add
xchg
add
mov
out
iret
add
mov
xchg
jle
add
into
xchg
mov
lods
mov
pop
dec
push
xor
push
loop
pop
jle
pop
mov
testb
sub
jecxz
dec
sbb
outsl
dec
mov
adc
cmpsb
mov
pop
add
or
cs
xor
dec
pusha
xchg
outsl
jecxz
jg
jp
inc
iret
outsb
push
in
fwait
icebp
pusha
nop
adc
jl
push
sbb
push
dec
hlt
xor
insb
mov
xchg
add
loopne
add
xchg
or
pop
ds
inc
push
xor
inc
and
aas
adc
add
enter
or
addr16
dec
loopne
sti
sahf
adcl
xchg
lret
pop
ss
mov
stc
xchg
aas
adcb
adc
xchg
outsl
ja
fimuls
jnp
cmp
dec
sub
lret
pusha
subl
add
mov
sahf
shlb
pop
enter
aaa
fiaddl
repz
ret
test
jae
sbb
inc
cmp
sti
sti
cli
or
dec
pop
mov
js
imul
and
lcall
aam
pop
stc
in
mov
inc
mov
je
in
iret
or
adc
adc
je
dec
jo
mov
mov
add
push
cmpsl
xchg
jnp
inc
jo
and
mov
fcoml
ret
ljmp
sahf
jp
sahf
fldcw
cwtl
push
mov
pop
jbe
adc
pushf
xor
ret
iret
or
pop
dec
sub
test
ds
xchg
push
cwtl
orl
jle
xlat
add
xchg
rcrl
loope
push
dec
icebp
mov
into
addb
jecxz
sbb
loopne
add
and
jecxz
inc
mov
push
ds
or
nop
sub
ret
aaa
mov
cld
jnp
je
lods
loope
stc
mov
add
es
lods
nop
xchg
inc
mov
movsl
add
inc
fadds
out
test
inc
ljmp
loopne
lahf
mov
push
add
inc
push
and
ret
das
je
loope
es
inc
ja
adc
lods
in
stos
sbb
xlat
adcb
push
imul
jo
filds
lods
cmp
jo
aaa
and
pop
or
cmpsb
jecxz
add
test
push
sub
and
pop
in
add
int3
in
sub
and
push
cmp
cmp
cmp
push
jns
jbe
sbb
fsubrs
pop
adc
scas
sbb
mov
sub
pushf
rorb
adc
inc
imul
clc
or
bound
lods
pop
sbb
imul
mov
push
dec
cmp
pop
push
push
fwait
and
mov
mov
mov
ret
adc
adc
popa
scas
xor
push
lret
pop
ret
pop
mov
insb
popa
lds
mov
xor
xchg
xor
and
bnd
pop
cmp
dec
out
mov
jmp
mov
cmp
sti
cmp
add
test
ret
mov
add
shrb
jbe
mov
xlat
fcoml
shll
and
or
mov
scas
imul
in
addr16
cmp
adc
inc
xlat
or
lods
imul
fstpt
sub
inc
jge
push
insb
jl
stos
aam
jne
mov
add
add
xchg
aad
xchg
pop
js
enter
pop
and
call
into
aas
adc
or
add
pop
push
ficompl
mov
addl
and
fmuls
orl
jb
loopne
sbb
sbb
mov
popf
inc
jns
aaa
xor
add
push
sbb
dec
sub
xor
scas
mov
rolb
fildll
cs
cmp
mov
pop
pop
mov
sub
cwtl
jno
das
xchg
aam
sbb
aad
sbb
jmp
sbb
jge
jns
dec
fs
inc
das
leave
mov
out
push
out
push
add
stos
push
pop
pop
adcl
popa
adc
jns
add
sbb
inc
jns
push
add
push
les
icebp
clc
arpl
and
xchg
insl
dec
enter
iret
sbb
jmp
add
pop
outsb
xlat
mov
add
loope
rol
sub
popf
out
lods
out
imul
lods
cs
das
in
jle
jbe
scas
outsl
les
das
jl
sub
mov
xor
aas
push
cmp
int3
adc
xlat
mov
or
out
lret
jmp
adc
lods
lcall
pop
and
js
or
adc
scas
xor
aas
lock
jbe
str
xorb
push
dec
aam
adc
stos
mov
pop
add
insb
addr16
rcr
shrl
sub
sbb
sbb
test
in
iret
ljmp
pop
sub
test
adc
jno
in
xor
test
pop
ss
xchg
icebp
sub
stos
daa
int3
sub
popa
inc
add
popa
into
imul
dec
popf
jno
push
push
xchg
out
dec
add
jp
or
mov
add
pushf
js
add
mov
xorb
lds
lods
lret
pop
pop
adc
lods
adc
sbb
addl
mov
mov
add
ret
inc
sbb
scas
adc
or
sub
adc
and
shrl
es
stos
test
stc
pop
fstpt
add
mov
add
ficomps
and
or
ja
arpl
movsb
lods
push
sub
insb
in
fs
sahf
loopne
jae
ss
push
insb
loopne
push
fistpll
ja
jl
in
adc
aaa
add
pusha
out
add
rclb
and
ss
das
push
jbe
add
rcrl
imul
add
push
pusha
lods
pop
scas
jo
push
mov
push
lods
cmpsl
loopne
adc
mov
das
or
clc
push
andb
or
push
sbb
jge
jmp
and
add
sbb
sub
lods
sbb
pop
jge
fs
aam
fs
femms
sbb
push
bound
mov
pop
ficomps
add
push
sbb
ja
cmp
insl
jne
mov
or
inc
insb
inc
cmpsb
jl
sub
ret
xor
adc
data16
sbb
add
into
test
or
jle
in
sub
in
dec
sbb
pop
or
loopne
jmp
xor
mov
jo
pop
arpl
or
es
insl
or
pop
inc
add
inc
ret
cmp
xlat
sub
mov
stos
fists
imul
test
aaa
add
popa
or
xor
je
dec
sub
mov
dec
pusha
pop
fisubrs
add
out
push
fbld
mov
test
and
push
and
jns
orb
add
push
xor
xchg
add
fs
jle
iret
mov
jp
jne
pusha
roll
add
jp
pop
ficompl
cmpsl
mov
aaa
fmull
lret
sub
pop
cmp
loopne
lret
iret
sbb
mov
mov
add
je
sub
cmp
sahf
adc
xorl
mov
les
jns
cmp
out
and
loope
cmp
sub
add
pop
adc
xor
add
mov
mov
xorb
adc
sub
xchg
push
leave
mov
push
xchg
lods
in
add
in
pop
imul
xor
sub
cmp
and
inc
cmp
fbld
push
lret
xor
add
inc
shrl
jge
sub
jno
popa
repz
shrl
repnz
adc
das
in
mov
pop
lock
js
jo
rclb
loop
mov
test
or
filds
out
push
push
jbe
mov
icebp
cmp
dec
ss
mov
mov
sbb
inc
hlt
xor
inc
jae
add
add
sti
xchg
jne
and
rorl
stc
push
std
push
pusha
cli
cmpsl
das
push
cwtl
pop
pop
cmp
pop
je
mov
add
xchg
in
sbb
fildl
lock
xchg
test
mov
hlt
sbb
inc
xchg
xchg
imul
in
inc
rcl
xor
ljmp
dec
ret
push
and
or
jbe
push
cli
mov
or
into
repz
pop
push
mov
in
cli
jne
adc
pop
add
stos
out
in
lock
add
or
iret
add
xlat
iret
fcoms
mov
cmp
and
push
scas
push
inc
dec
pop
lret
stos
sbb
mov
lea
jo
das
mov
add
sbb
jp
loopne
sub
iret
push
data16
xor
dec
or
and
push
in
push
adc
xchg
pop
xchg
cmc
leave
test
push
push
stos
pop
bound
dec
xorl
cli
clc
mov
add
xor
sub
testl
loopne
enter
sbb
cmpsl
movsb
sti
loope
jg
loop
lds
xchg
and
mov
mul
incb
mov
and
inc
mov
test
imul
push
jo
fiaddl
shll
add
inc
enter
inc
stos
mov
jo
inc
xor
add
add
fabs
push
movb
add
xchg
lock
push
push
cmp
sbb
mov
pop
and
sarb
dec
or
arpl
sub
jae
sub
aaa
dec
jmp
adc
js
mov
xor
or
sbb
test
mov
jb
fdivrs
sub
push
pop
mov
outsl
rcl
lock
jno
pop
data16
sbb
scas
cmp
xchg
adc
adc
mov
insb
movsb
mov
xchg
mov
daa
outsl
push
out
add
insb
dec
loopne
pop
mov
in
xor
ljmp
int3
andl
loope
fsubs
je
jb
mov
add
pusha
adc
sti
fmuls
mov
insb
dec
fimull
push
cmp
adc
lods
popa
mov
cmp
jecxz
sbb
jl
sub
bound
and
arpl
pop
cmp
jb
movsb
out
mov
loope
push
and
pop
ljmp
ss
cmp
push
insb
mov
ljmp
addr16
addr16
inc
mov
test
mov
sbb
cmp
xorl
mov
rcll
jne
shrl
nop
push
js
pushw
sub
or
push
ficoml
xchg
aam
std
push
cmp
pop
pushf
dec
cmp
ds
jle
xor
mov
xchg
jo
stos
sub
movl
lods
sbb
dec
in
xor
add
pop
xor
nop
rol
adc
cwtl
push
sub
xchg
cmp
scas
mov
outsl
test
push
shll
dec
add
lea
rclb
ss
int3
loopne
ret
rclb
je
stc
jmp
dec
pop
inc
pop
out
sbb
push
cmp
push
dec
cmp
arpl
aas
mov
mov
ret
iret
outsb
jnp
mov
cmc
cmpl
mov
imul
aad
orb
xchg
sub
and
in
fsubl
ss
mov
and
pop
imull
mov
push
aas
mov
add
in
andb
stc
popl
mov
out
mov
xor
cmp
roll
lods
in
loopne
pinsrw
xor
push
jmp
add
pop
push
push
or
add
and
push
scas
sbb
out
cmpsb
mov
je
xor
add
les
xor
stc
inc
insb
out
ja
loopne
je
mov
imul
push
add
fiadds
lret
xchg
scas
xchg
or
pop
lret
hlt
add
outsb
int3
int3
jno
inc
inc
in
adc
add
add
sbb
imul
jp
loopne
pushf
mov
testb
mov
or
nop
xorl
leave
adc
fsubrs
sub
sbb
xor
out
shlb
push
pop
pop
jecxz
pop
or
andl
jp
lods
cmpsl
test
mov
and
pop
mov
cltd
aaa
into
mov
cmp
popa
inc
loopne
xor
inc
sub
out
in
xchg
loopne
mov
loope
jge
fsubr
push
sarb
jo
sbb
add
pushw
fwait
mov
mov
vpsrad
dec
jns
aaa
and
adc
aam
shrl
aaa
pop
push
lods
movsl
add
es
and
out
and
aaa
pop
test
clc
sub
inc
lods
xor
fadd
sbb
or
pop
repnz
mov
lahf
stos
xchg
pop
sbb
add
divl
xchg
js
ss
mov
mov
in
dec
push
rcl
lcall
push
and
fldt
in
js
cmp
popa
xor
mov
mov
or
cmp
outsl
xchg
scas
daa
or
bound
unpcklps
mov
dec
lods
iret
jno
add
cmpsl
fdivr
hlt
push
lods
jp
in
out
movsl
jns
xchg
xchg
jle
mov
and
mov
mov
rolb
cli
jecxz
mov
cmpsb
out
ret
movsb
push
icebp
sbb
sub
out
inc
aad
fcoms
testl
pop
jb
test
js
or
lock
xor
lods
sub
subb
ret
xor
pop
arpl
lock
fsub
add
frstor
mov
out
sub
ss
lret
out
bound
and
sbb
das
outsl
sub
sbb
xchg
icebp
xchg
add
adc
movb
or
out
push
jb
rolb
cld
subb
mov
mov
push
pushf
mov
pop
call
fimull
roll
cld
inc
xchg
cmpb
mov
sub
sbb
xor
loop
push
loopne
shrb
je
mov
push
mov
iret
pop
frstor
out
jae
andl
hlt
jge
xor
jbe
xchg
push
cmp
mov
cltd
iret
push
push
inc
imul
sbb
setae
ficoml
je
pushl
sbb
cmp
sbb
push
leave
subb
inc
loope
ja
cmp
jmp
lods
mov
fadds
sub
add
or
call
push
xchg
dec
lock
add
mov
in
push
pop
dec
daa
cmp
add
pushf
sub
test
add
sub
push
dec
sub
dec
ret
fbld
and
inc
aam
or
aam
sti
outsb
push
shrl
mov
pusha
int
pop
nop
xor
in
and
insb
enter
xchg
add
pop
jp
clc
sbb
fnstsw
lods
arpl
push
dec
orl
imul
push
ret
mov
js
cmp
jge
test
pop
fmull
add
add
lret
inc
mov
xchg
dec
push
out
dec
das
or
push
fbstp
jle
inc
dec
mov
cmp
and
xchg
or
sbb
pusha
retw
pop
ror
aaa
add
push
test
mov
fisttpl
std
stos
sbb
lock
push
shll
jno
jnp
movsl
pop
je
bound
clc
es
scas
pop
addb
ds
sbb
fldenv
adc
mov
add
ss
push
popa
stos
adc
fbstp
enter
mov
mov
pop
push
xchg
or
scas
hlt
lret
sti
add
mov
out
jge
jb
ja
fdivs
inc
xor
das
push
xor
ds
xor
cwtl
sub
xlat
mov
outsb
addr16
clc
xchg
jo
push
add
xchg
adc
or
jb
pop
iret
in
imul
test
push
push
or
ss
test
pop
into
icebp
cmp
xchg
mov
push
sahf
test
fistl
in
stc
ret
addb
mov
lea
ja
lock
push
ljmp
aam
push
dec
arpl
pushf
xchg
cmp
push
repnz
in
cmp
jno
mov
push
mov
stos
adc
insb
fsubs
fs
rclb
sub
stos
loope
mov
add
mov
inc
cmp
mov
movsl
add
mov
data16
adc
imul
shr
cmpsb
pop
sub
xchg
les
int3
and
and
mov
lock
or
cmp
push
js
add
cmp
pop
xor
sbb
andb
xchg
pop
mov
cltd
outsb
or
mov
sub
pop
adc
loop
dec
and
or
ficoms
mov
cmp
jbe
pop
out
loope
sahf
pop
jge
pusha
popa
lods
jbe
inc
lret
pop
clc
mov
sub
push
ss
pop
scas
and
arpl
xor
nop
lea
or
into
lods
xor
out
dec
mov
mov
movb
in
into
pusha
push
adc
movsb
je
fsubrl
jno
outsl
in
push
ds
add
and
mov
sub
push
or
mov
jns
sbb
xor
es
insl
cmpsb
push
imul
push
movsb
into
inc
sbbl
push
adc
movsl
sbbl
enter
cmp
mov
or
jp
xchg
iret
fimull
sbb
loopne
cmp
lea
xchg
push
push
sub
sti
fsub
nop
pusha
mov
sub
push
jb
loopne
push
iret
aas
rcr
pop
sub
push
push
jo
aaa
push
dec
outsb
imul
ljmp
popf
mov
dec
popa
push
mov
lret
push
out
jl
iret
andb
ret
les
ret
je
jnp
cmc
stos
imul
gs
add
jg
int
loope
daa
mov
mov
mov
mov
pop
shl
mov
jno
xlat
inc
daa
stos
in
push
rcr
xor
loopne
sbb
mov
call
inc
dec
ljmp
inc
loop
push
stos
and
jg
push
incl
jp
clc
add
and
test
lret
xchg
rcr
lea
mov
mov
gs
call
jp
loope
dec
xchg
in
push
popf
inc
repz
std
insl
dec
inc
orb
imul
mov
mov
nop
add
addl
stos
pusha
cmp
mov
stos
xor
cs
je
call
insb
cmp
shrl
cmp
and
in
mov
add
cmp
iret
sbb
jecxz
mov
push
dec
add
loopne
sbb
lock
fistl
into
lcall
popf
xor
add
xchg
cmp
fisubs
or
test
out
in
lock
rcr
push
pop
pop
bswap
outsl
ficompl
mov
add
adc
mov
mov
fimuls
outsb
pop
lods
add
jecxz
ret
stc
notl
xchg
iret
add
push
xchg
mov
paddq
pop
xchg
sbb
mov
push
and
cmpsl
repz
pop
mov
repz
xchg
sti
adc
mov
push
and
mov
xchg
cmpsb
push
cmpsb
fstpl
dec
adc
jmp
into
pushf
popa
or
cmp
add
std
jne
jne
shlb
push
xor
pop
insl
sub
jle
mov
pop
fcmovnu
dec
cwtl
enter
fsubl
loopne
push
mov
pop
push
pop
cmpsb
adc
ret
sbb
pop
faddl
push
notl
incl
fiadds
gs
mov
push
into
add
pop
adcl
cld
jp
inc
addr16
jmp
push
popl
dec
dec
int3
inc
or
ss
inc
add
add
stos
mov
add
adc
push
jle
jbe
andl
iret
andl
mov
sub
leave
pop
or
aad
add
icebp
dec
shrb
or
dec
jge
push
test
outsb
xchg
aaa
dec
call
jb
addb
pusha
and
mov
xchg
cmpsl
ds
test
add
popf
loope
mov
or
into
push
mov
imul
xor
mov
push
or
popa
sub
aas
test
xor
add
iret
subb
cmp
jl
xor
in
add
jo
pop
lds
lcall
dec
pop
stos
push
das
jge
rclb
jmp
sbb
lret
inc
pop
pop
movsl
aam
and
movsl
push
scas
dec
mov
mov
pusha
test
aam
xor
sub
jno
push
sbb
fnstenv
fidivl
sbb
aam
push
pop
pop
mov
cmc
loope
lock
popf
push
add
data16
xchg
cli
mov
cmp
push
push
pop
mov
mov
int
mov
mov
cmc
aam
aaa
xor
mov
loope
cld
cld
sbb
adc
orl
call
sahf
out
xchg
out
and
mov
xor
test
mov
cli
dec
add
and
dec
ret
add
sbb
cmp
mov
stos
pop
aaa
add
sbb
and
shll
push
sub
fistps
jecxz
add
or
or
jne
sarb
sub
sbb
or
and
inc
push
lret
ret
addr16
and
loop
mov
pop
imul
mov
xlat
movsb
cmpb
push
lret
push
test
pop
add
add
push
cmp
mov
mov
jbe
mov
xchg
dec
loope
addr16
mov
pusha
add
andl
lock
lods
dec
loope
mov
pusha
lahf
pop
xorl
andb
or
dec
mov
insl
frstor
push
mov
outsb
js
scas
mov
sub
lret
into
jle
add
jl
addr16
cmpsl
mov
mull
in
dec
mov
add
sub
lret
popa
and
jno
mov
out
mov
sbb
pop
pop
popa
ret
notb
out
mov
sbb
xor
sbb
adc
stos
popf
inc
mov
mov
pop
mov
popl
pop
inc
sub
repz
sahf
fistpll
push
jle
rorb
jnp
rcrb
lods
dec
stos
push
fsts
mov
pushf
sbbl
sbb
mov
das
jnp
in
xor
mov
bound
sub
bound
xlat
cmp
shl
xchg
push
lahf
add
lds
out
rcrl
lods
push
and
mov
push
ret
xlat
add
mov
push
or
and
mov
pop
pop
mov
sub
jb
insb
arpl
add
add
or
sub
les
pushf
clc
test
mov
out
dec
xor
scas
sbb
lods
lea
cmp
and
xchg
in
or
out
ret
push
jle
xchg
gs
loopne
pop
mov
or
test
lret
outsb
push
inc
add
and
inc
or
arpl
mov
mov
sub
imul
cmp
push
inc
xor
loopne
or
xor
mov
sub
aas
out
insb
loopne
sbb
xchg
sub
lret
dec
sti
mov
cmp
adcl
xor
in
loopne
pop
arpl
dec
pop
dec
and
scas
xchg
imul
loope
sbb
cmp
dec
fstpt
aam
mov
push
pop
test
loop
add
ret
and
push
push
cmp
jge
popa
or
mov
and
pop
jg
mov
or
add
subl
sbb
arpl
loope
pop
and
aaa
add
mov
test
fdivrs
jl
xchg
xor
loope
cmp
shll
adc
adc
pop
jns
mov
daa
push
push
push
inc
mov
mov
xor
les
sbb
in
xchg
pusha
sub
add
cld
or
pop
out
scas
fwait
call
daa
cmp
daa
stos
adc
cmp
test
cmpb
sarb
jmp
popa
pop
mov
and
mov
inc
xchg
xchg
mov
fmuls
jg
inc
adcb
cmp
sbb
mov
push
aaa
mov
add
inc
mov
sbb
cmp
fdivs
sub
testl
pop
xor
lahf
lods
pop
add
adc
sahf
outsl
out
xchg
jl
and
cmp
sahf
fstl
inc
jae
jle
les
jbe
add
xor
pop
adc
pop
mov
add
dec
add
push
push
xchg
and
lods
add
mov
mov
dec
rcrb
in
out
loop
dec
ret
sub
push
cmp
sbb
jne
pop
fisubl
sub
roll
ljmp
or
out
addr16
dec
sbb
js
xor
mov
inc
sub
push
pop
and
and
shll
and
sbb
jae
pusha
push
dec
add
sahf
mov
pop
xchg
xor
push
int
loope
stos
mov
cmp
jb
dec
push
xchg
in
ds
mov
sbb
lds
mov
mov
loope
je
sub
lret
jnp
es
cmpl
scas
fwait
imul
daa
push
add
jno
mov
xchg
adc
shlb
ja
push
adc
sub
and
xchg
jo
or
jp
xor
xor
sbb
es
cmp
xchg
mov
mov
pop
lea
or
sbb
sub
inc
pop
xchg
add
and
mov
push
mov
mov
pop
dec
popa
jecxz
sub
xchg
lcall
sub
push
mov
fcoms
out
popf
popa
popf
fldenv
dec
fisubrs
or
test
xlat
sbb
push
push
or
pause
mov
xchg
ret
ret
add
fdivrs
cwtl
sbb
fcmovne
add
sbb
jnp
les
fdiv
das
rol
xchg
ficoml
shrl
sub
sub
cmp
sub
cmpsl
xchg
sbb
sbb
mov
jns
inc
lahf
push
cmp
push
loop
loopne
inc
adc
mov
add
stc
or
sbb
mov
cmp
iret
dec
div
adc
xchg
lods
lods
arpl
jp
dec
inc
or
in
mov
xor
int
out
scas
cwtl
aas
sbb
dec
or
xlat
cld
mov
test
and
or
jno
or
mov
mov
xchg
fcomp
xchg
or
inc
pop
sarl
ret
sub
jmp
add
push
mov
push
push
pop
sub
xchg
xchg
mov
sub
popa
xor
and
pop
jmp
or
dec
adc
mov
loope
pop
outsl
inc
mov
xchg
add
mov
sub
cmp
xchg
mov
xchg
sub
je
daa
sti
and
inc
es
leave
xchg
add
dec
mov
add
or
loop
jp
jge
bound
or
daa
ja
jo
jae
gs
pushl
cmc
add
adc
xchg
daa
mov
xchg
pop
fldt
or
mov
adc
test
rorb
sub
adcl
lret
mov
lea
mov
jle
cmpsb
sbb
test
lret
sub
mov
bound
push
adc
or
add
cmp
add
pop
pop
scas
shll
dec
sbb
lods
xchg
in
gs
xor
aam
and
and
mov
movsb
in
and
mov
jp
mov
std
jno
xchg
lods
and
sbb
mov
sbb
add
dec
daa
mov
ret
sti
mov
pop
ficoms
dec
loope
xor
loopne
ret
sahf
iret
pop
sbb
xchg
pop
outsl
mov
mov
or
ret
pop
mov
adc
inc
int
or
jbe
xor
xchg
jno
push
test
aam
add
cltd
push
shlb
call
xchg
sti
add
lds
ljmp
inc
sbb
inc
mov
js
insb
and
xor
sbb
jo
push
fdivr
jg
xchg
and
push
or
mulb
add
in
jo
icebp
ret
cmp
add
mov
sub
cmp
mull
xchg
jo
mov
mov
xchg
sub
or
jns
pushf
mov
outsl
pushf
mov
xchg
xor
loopne
or
mov
add
je
jp
addl
shr
or
pusha
sub
dec
stos
iret
pusha
rorb
lods
inc
mov
and
jl
xor
adc
in
adc
add
sub
adc
xchg
inc
pop
adc
jecxz
ljmp
inc
cmp
nop
jge
ds
mov
dec
subb
orl
andb
rolb
mov
rorl
push
je
sbb
pop
sub
push
inc
xor
mov
popa
mov
add
ret
test
subl
orl
scas
push
hlt
xor
in
inc
mov
push
xor
or
push
mov
sbb
nop
aaa
mov
test
mov
mov
popl
adc
iret
test
rolb
mov
jecxz
lock
mov
scas
iret
repnz
add
call
dec
cmp
add
or
es
aam
cltd
dec
mov
aas
jl
lahf
inc
cmpsl
sbb
mov
jae
cmp
add
add
cltd
js
dec
and
push
push
es
jns
nop
push
pop
lret
in
rorb
lods
sub
pop
std
das
lock
xchg
cmc
and
pop
lock
ja
push
jo
push
sbb
jmp
and
add
mov
mov
xor
xchg
mov
loopne
lods
push
add
nop
push
outsb
std
movl
fnsave
cmp
push
test
inc
or
jp
pop
add
mov
and
insb
cmp
lods
and
or
aad
stos
addl
xlat
xchg
push
test
sti
jle
ret
pop
jecxz
mov
pop
negl
xchg
lahf
or
dec
xor
dec
pop
jmp
test
sbb
hlt
mov
test
dec
pop
mov
test
outsl
push
idivl
lock
loop
push
sub
fisttpl
jo
or
sub
add
sub
xor
and
lods
sub
cmp
pop
mov
adc
shrb
inc
pop
pop
call
cmp
jmp
enter
ja
outsl
sbb
adc
das
insb
lea
push
push
sub
xchg
pop
sub
pop
cs
mov
cmpsl
cwtl
or
xchg
rorb
mov
lcall
aam
pop
mov
sub
jecxz
add
in
jmp
cltd
pop
dec
push
mov
icebp
insl
and
adc
sbb
je
jmp
aam
loopne
add
int
adc
pop
inc
lret
push
push
jns,pt
loope
int3
jge,pt
dec
lods
xchg
lock
push
sahf
mov
xor
in
sub
fmul
andl
movsl
pop
inc
fidivs
or
jne
arpl
and
or
std
inc
dec
jno
out
divl
push
pop
jge
mov
adc
cwtl
ljmp
movsb
push
dec
mov
pop
stos
insl
inc
cmp
adc
xor
or
mov
jle
jno
xchg
inc
adc
inc
xor
dec
and
popf
lods
test
mov
fdivrl
pop
mov
add
xor
in
lods
pusha
test
mov
filds
cltd
xchg
sbb
into
xchg
adc
jo
push
arpl
jl
inc
fidivrs
inc
rcll
dec
insb
popa
mov
enter
inc
lcall
test
mov
push
jne
mov
inc
out
pop
jge
lea
ss
mov
cmp
add
adcl
mov
xor
flds
ret
sbb
mov
xchg
and
dec
icebp
xor
sub
add
xor
mov
sub
xor
and
lods
push
cs
cmp
lock
cs
loopne
rclb
pop
sti
bound
shlb
out
push
es
push
pusha
imul
or
icebp
jle
repz
jmp
rcl
fwait
inc
dec
lods
xlat
popf
nop
lret
mov
lods
sti
or
sbb
mov
cmpsl
ja
mov
push
and
push
imul
cmp
enter
and
pop
add
popa
aaa
dec
add
les
push
push
add
mov
aad
push
nop
push
dec
fcompl
inc
sub
jo
lods
cs
popa
xor
cmpsl
add
loopne
ret
mov
sarl
add
popa
jg
cmp
mov
push
mov
sub
adcb
lods
in
ja
jnp
movsl
jno
jge
push
sub
pop
add
sbb
sbb
mov
or
out
adc
adc
cmp
and
add
loopne
mov
adc
xor
rcll
mov
pop
rcl
rcl
xchg
or
dec
mov
lcall
sbb
and
ficoml
jp
mov
cli
cmp
lods
pop
push
xchg
jmp
cs
mov
int
jo
sbb
je
inc
lds
add
sub
sub
arpl
rcrl
inc
xchg
enter
sbb
xor
sarl
das
rolb
in
adc
jne
mov
pushf
and
movsl
push
mov
jl
pop
lret
mov
xor
xor
xor
clc
mov
or
sub
inc
xor
dec
jae
dec
mov
mov
cmp
mov
jge
leave
pop
neg
fcoml
cwtl
orb
es
adc
cmp
lcall
xor
in
shl
mov
shr
xor
sarl
loopne
ret
xchg
ljmp
inc
int3
cmpsl
jmp
cmp
mov
add
test
or
pop
imul
adc
lea
add
aas
inc
sbb
arpl
or
pop
inc
adc
mov
inc
scas
and
pop
dec
shll
mulb
or
sbb
iret
fidivrs
out
shl
in
psrlw
xlat
push
sbb
loope,pt
inc
leave
iret
out
mov
ret
add
adc
ja
jns
mov
pop
add
xchg
aaa
sahf
lock
lret
sub
stos
xchg
sub
icebp
mov
pusha
sub
mov
aam
fidivs
pop
cmp
jno
or
lock
push
xchg
pushf
mov
sbb
mov
scas
sbb
test
mov
mov
sbb
mov
jae
inc
test
popf
imul
jo
and
add
cld
std
adc
mov
push
xchg
or
sub
popa
jle
das
jmp
sti
cmpl
das
jnp
decl
dec
sarl
orl
repnz
fwait
int3
scas
test
imul
fcomip
xor
and
pop
dec
aad
or
aas
testl
fcoms
add
and
push
jp
dec
ret
xchg
mov
popa
gs
push
cmp
and
movsl
push
xchg
pop
push
jp
lret
mov
rcrb
fdivrs
inc
fisttps
lods
in
mov
mov
loope
outsb
xorl
mov
dec
imul
stc
notl
sbb
lcall
inc
inc
loopne
push
xchg
ds
mov
pop
mov
lahf
inc
fxch
inc
loop
movsb
adc
push
inc
push
scas
lret
cmpb
clc
mov
adc
cld
pop
inc
sub
dec
daa
adcl
push
xchg
mov
jle
lods
test
popa
cmp
test
bound
sbb
daa
pop
and
insb
insb
mov
jb
adc
dec
imul
sub
mov
iret
lock
jno
mov
int3
sarb
sbb
or
shlb
test
shlb
push
mov
mov
adc
sbb
adc
movsb
xchg
xor
mov
loope
shrl
jmp
scas
mov
push
pop
pop
cmp
aas
sbb
lea
je
mov
sub
cmp
push
pushf
inc
add
gs
loopne
pop
mov
cld
mov
rcll
pop
dec
lods
and
and
xor
dec
jno
mov
mov
sbb
mov
or
hlt
int3
js
push
test
mov
jmp
push
cmpsb
jbe
push
lea
cltd
inc
jl
xchg
icebp
sub
movsl
sbb
cmpsl
lods
inc
ret
pop
xchg
imul
xor
or
mov
jo
pop
jge
mov
mov
fchs
cld
cltd
clc
popa
push
add
jo
jl
insl
push
dec
imul
decl
xor
in
adc
pop
jp
mov
pop
in
enter
mov
lcall
xor
and
out
and
add
sub
mov
add
aad
xchg
out
inc
sbb
stos
xor
xor
repz
imul
inc
inc
pop
or
adc
mov
xor
in
aad
mov
icebp
loopne
dec
inc
cwtl
pop
daa
adc
adc
dec
into
scas
pop
iret
iret
inc
or
pop
shlb
data16
cltd
xor
push
xor
sbb
fnsave
mov
ss
sub
inc
faddp
inc
fstp
dec
cmc
mov
xor
dec
ret
xchg
rdmsr
arpl
lret
daa
cmpl
xchg
add
outsl
pop
int
jnp
sbbb
mov
add
neg
pusha
and
sarb
scas
push
inc
lret
xchg
push
mov
adc
gs
lret
jge
js
je
aad
sbb
dec
jb
ficoms
xor
int3
add
sbb
push
movsb
out
leave
lock
jnp
mov
adc
or
jg
mov
add
and
and
loopne
push
jp
lods
out
divl
in
mov
sub
ss
push
stos
jae
les
ja
repz
icebp
fsts
and
iret
mov
mov
ja
cmp
add
jg
les
daa
adc
mov
mov
push
push
cmpl
or
or
add
add
inc
xchg
push
inc
add
add
jge
xor
adc
sbb
or
rol
ret
bound
mov
mov
or
pusha
and
cli
pop
cltd
hlt
loop
out
cs
xor
ss
pop
lret
hlt
shll
out
mov
push
push
lahf
and
fwait
sbb
or
lods
testl
inc
push
and
movsb
mov
mov
or
xchg
mov
jp
push
add
fsubrl
jp
or
jl
add
jns
xchg
lock
loope
and
andl
pop
cwtl
xor
je
mov
btr
hlt
test
sarl
mov
sti
sysret
ja
leave
pusha
sub
mov
out
int
and
inc
ja
inc
loopne
dec
push
xchg
mov
cmp
jle
insb
pop
fs
aaa
cli
out
pop
mov
xor
xor
inc
adc
add
and
mov
mov
es
or
pop
push
push
xchg
out
dec
mov
xor
cli
lret
push
mov
aas
nop
and
cmpsb
loopne
xor
scas
push
movsl
sbb
cmp
dec
push
add
xchg
inc
xor
add
ljmp
ret
or
sbb
bound
in
fisubl
xor
sarb
xor
mov
shrb
mov
sti
dec
add
sahf
inc
push
out
movsl
daa
subl
xchg
rclb
xor
cs
pop
fisttpll
cmp
scas
or
scas
pusha
loop
fimull
or
or
ret
mov
int
ss
adc
hlt
sahf
sub
jg
pusha
loopne
xor
cmp
pop
insb
int
or
arpl
or
fsubrs
jecxz
add
scas
notl
sbb
push
jns
xchg
push
arpl
xchg
mov
jb
test
sub
cmpsl
xchg
movsb
fisttps
dec
ret
movl
and
xor
push
and
cmpb
jno
or
or
xor
call
sub
aaa
cmp
add
adc
ret
and
sbbl
outsl
rcrl
jo
in
sub
xor
sbb
sbb
rcrl
cmp
daa
mov
sub
pop
sbb
add
in
mov
cwtl
popa
pop
pusha
cltd
gs
xchg
dec
dec
pop
mov
jnp
or
hlt
add
add
adc
push
xlat
lahf
sbb
loopne
add
loopne
pop
mov
pop
into
rclb
sti
cmp
push
int
push
ret
call
sar
push
xchg
adc
mov
dec
rorl
ja
fldenv
fstps
pop
mov
roll
or
jo
mov
data16
sbb
lret
push
mov
push
inc
push
mov
bound
add
fwait
sar
test
arpl
ljmp
stos
mov
mov
roll
and
push
adc
movsb
inc
repz
test
mov
lret
int
lahf
add
scas
cmp
or
sub
jp
inc
mov
mov
arpl
loopne
into
in
xchg
loop
psraw
je
adc
xor
add
jecxz
xchg
or
movb
popa
inc
add
xchg
sbb
lahf
xchg
icebp
leave
jo
les
ret
test
sti
fs
sbb
sbb
jmp
enter
xlat
or
jnp
ret
pop
fcomps
lds
cmp
sub
xchg
scas
inc
push
test
mov
add
or
dec
movsl
mov
cltd
xor
adc
or
or
or
or
call
mov
cltd
or
addb
dec
fstp
jle
xchg
jl
mov
and
inc
addr16
jno
jmp
and
pop
dec
repnz
rclb
xchg
ret
orb
mov
pop
xchg
loope
mov
xor
add
in
jecxz
push
mov
outsl
fs
rcrb
inc
mov
in
mov
sub
mov
ret
sub
outsb
mov
sbb
mov
cmp
push
sub
jmp
mov
and
mov
cmp
push
xchg
add
mov
xchg
adc
inc
adc
bound
and
shll
sbb
mov
cvtdq2ps
je
jno
daa
jge
daa
pop
test
aas
arpl
jne
nop
rorl
mov
pop
jge
sub
in
imul
ds
clc
jl
orb
je
popa
je
sarl
inc
daa
insl
fsub
jne
xchg
pusha
pop
xor
lods
shlb
gs
pop
push
mov
dec
mov
sbb
jle
add
mov
add
arpl
xlat
add
push
dec
jmp
jl
xchg
aad
imul
mov
cmp
popa
aas
jb
add
repz
hlt
push
xchg
fldenv
add
push
jno
mov
lock
jo
mov
pusha
shll
outsl
inc
sbb
add
add
or
loop
ja
push
insl
cs
fcmovu
daa
push
cwtl
xchg
mov
push
cld
or
cmc
xor
test
add
ret
add
nop
jl
or
mov
in
sbb
lods
je
mov
fs
jle
xchg
scas
xlat
cmp
mov
push
pop
sub
fsubrl
jp
mov
jge
push
out
js
xchg
adc
pop
xor
pusha
dec
ss
hlt
sbb
lods
dec
mov
xor
add
xor
xlat
pop
jecxz
aam
dec
rolb
add
out
pop
mov
push
xor
out
cmp
mov
pop
in
add
loopne
push
out
insl
movsb
jb
imul
seta
lea
test
mov
imul
push
int3
pop
lcall
jp
mov
xchg
pop
inc
add
rcll
jl
inc
je
jo
fmul
xor
xchg
mov
xchg
xchg
out
inc
cmp
gs
cltd
mov
mov
leave
xorb
dec
cmp
xor
test
mov
jb
scas
sbb
jecxz
popa
test
outsl
ljmp
xor
bnd
mov
cmp
pop
jle
frstor
andb
outsl
mov
pop
mov
rclb
push
mov
mov
negl
mov
jno
xchg
xchg
add
and
scas
arpl
arpl
xchg
loope
mov
inc
ret
jmp
and
loopne
ss
jge
out
cmp
inc
mov
add
pop
lret
push
push
in
aam
mov
imul
sub
lods
sbbl
add
dec
lahf
add
push
scas
xlat
mov
imul
bound
das
or
push
cmp
sub
sub
sub
dec
or
mov
inc
mov
aaa
dec
adc
and
xchg
je
andl
cmp
cmpsb
enter
lods
xor
cmp
dec
sub
add
dec
bound
test
aam
fldt
iret
push
sub
in
movsl
inc
testl
and
rclb
hlt
test
or
add
push
inc
add
lods
subb
push
inc
jmp
mov
pop
popf
lcall
xor
mov
daa
or
and
test
aam
mov
xchg
adc
push
mov
test
mov
cs
mull
idivb
lret
adc
jbe
add
sahf
or
pop
lret
ljmp
xchg
jp
mov
jp
xchg
into
cmp
dec
in
or
mov
jns
lock
add
xor
loope
lock
xchg
jne
std
pop
add
sbb
xchg
loope
icebp
jne
sub
inc
in
sbb
js
loope
sti
lahf
pop
adc
jmp
adcb
int
fadd
push
cmp
pshufw
push
cltd
aam
ss
mov
mov
bound
lods
les
ret
imul
adc
or
mov
out
mov
push
mov
xorb
mov
add
inc
movsb
fmuls
cmp
pop
inc
subl
enter
xchg
lret
adc
inc
jno
sbb
mov
sub
sub
xchg
or
jg
lahf
jae
insb
testb
push
cmpl
out
insb
test
icebp
mov
test
xchg
add
decb
lret
or
pop
shll
hlt
or
xor
dec
xor
jp
js
imul
or
jno
sbb
icebp
mov
inc
cmp
push
lcall
jns
and
push
sub
out
movsb
in
sahf
inc
mov
mov
movsb
sub
imul
into
add
js
cmp
pop
rcrb
push
dec
mov
lock
sbb
and
push
push
movsl
sbb
lahf
pop
adc
inc
xor
call
or
je
push
adcb
cmp
iret
mov
popa
adc
cmp
add
pop
lret
inc
cli
adc
dec
iret
enter
xchg
xchg
adc
mov
mull
sahf
test
mov
push
xor
and
mov
insb
add
xchg
insl
dec
cmp
jp
sub
out
or
scas
fisttpll
insl
cmpsl
fdivl
push
imul
adcb
sub
add
mov
cmp
sub
out
jle
adc
sub
and
cmp
xor
and
jmp
jo
lods
lods
outsl
ja
push
loopne
movsl
mov
xor
mov
push
mov
and
push
dec
mov
jb
pop
sbb
test
call
push
outsl
jbe
repnz
stc
sbb
sbb
push
xor
rcrl
push
pop
icebp
scas
jo,pt
jbe
add
sub
mov
inc
fsts
or
and
cwtl
sub
das
ss
mov
xchg
add
fstps
lods
sbbl
push
dec
shlb
pop
or
ss
add
add
xchg
pop
sbb
jle
pop
jns
mov
pop
inc
aam
dec
mov
mov
sahf
cmpsb
addr16
lcall
inc
cmp
ljmp
outsl
and
push
jl
and
pop
outsb
push
pop
cmp
popa
pop
cmp
das
loope
sbb
push
jp
inc
xlat
mov
cmpsb
scas
pop
jne
movsb
inc
ss
loopne,pn
popf
mov
loop
jo
je
mov
xor
pop
into
push
and
xor
pop
mov
push
insb
mov
js
rol
push
mov
popf
popf
xchg
imul
outsl
movsb
mov
or
rcl
pop
arpl
sbb
mov
sti
mov
and
mov
shlb
mov
pop
mov
pop
pusha
lods
daa
leave
mov
lea
mov
test
adc
inc
cmpsl
icebp
rcr
cmc
cmp
das
xlat
aam
test
adc
add
jl
adcl
add
sub
pop
push
pop
jge
jmp
adc
fmull
fcoms
sbb
cwtl
and
jge
dec
es
pop
dec
mov
scas
fidivs
sbb
in
ficompl
aaa
jne
icebp
movsb
push
dec
pop
push
add
mov
add
mov
sbb
mov
aaa
test
xchg
scas
adc
xor
lods
jmp
mov
xor
sub
js
jp
push
xor
push
dec
in
push
and
int3
and
ret
mov
push
dec
inc
imul
js
sub
dec
subl
incl
adc
outsl
sti
cwtl
add
mov
stc
pop
xchg
sub
test
sbb
xlat
addr16
adc
adc
pop
sbb
and
lods
ss
jmp
mov
into
mov
fadds
paddq
pop
sub
inc
mov
or
frstor
xchg
lret
add
rol
dec
xchg
rcll
loopne
pusha
mov
cmc
or
cmp
sbb
cmp
push
push
cmp
or
stc
data16
add
push
push
push
xlat
ret
out
cmc
mov
cmp
inc
div
mov
or
or
or
pop
jo
push
fiadds
push
jo
jb
in
insl
mov
mov
push
mov
push
stos
push
or
fcoml
out
push
sbb
inc
imul
enter
push
js
xor
ret
xchg
cmp
sub
lret
add
cmp
add
or
add
or
add
xor
add
fs
push
add
cwtl
pop
jp,pn
push
push
cmp
cli
rorb
or
jecxz
push
cmp
or
or
pop
ds
push
in
jne
inc
sbb
add
add
add
ja
cmp
or
in
es
inc
mov
cmpsb
jnp
and
add
pop
decb
and
cmp
stc
adc
xchg
jnp
fwait
add
scas
nop
iret
je
faddl
mov
pop
and
pop
inc
test
sub
div
insl
inc
adc
inc
jbe
xor
aas
jo
scas
push
ja
rolb
addb
fcomp
negl
add
arpl
inc
sbb
mov
aaa
add
cmc
xchg
xor
mov
adc
mov
fstpl
and
mov
add
or
out
xor
mov
or
cmp
pop
dec
push
dec
imul
xor
and
push
test
pop
mov
jbe
js
add
cltd
add
xlat
imul
das
xor
pop
sbb
push
push
push
mov
add
ret
pushf
in
and
dec
stc
addb
add
mov
and
sbb
cld
andb
daa
addb
lcall
rolb
sar
fstl
add
lods
std
or
or
jae
dec
pusha
or
dec
add
adc
push
out
jecxz
add
negw
imul
dec
inc
add
dec
cmp
pusha
in
imul
cs
jne
sbb
cmp
sbbb
sbb
lea
fsubs
jno
ljmp
aaa
xlat
adc
jb
lods
ret
mov
subl
je
pop
call
imul
mov
push
shll
push
arpl
pusha
sub
mov
js
pop
sub
mul
and
movsb
adc
xor
scas
ss
pop
imul
add
push
or
mov
jle
jp
dec
testl
out
sub
aaa
bound
fildl
and
and
pusha
mov
ret
shrl
xor
inc
cmp
in
sbb
xor
xchg
sbb
push
sub
mov
xor
push
push
ja
xchg
mov
mov
xchg
movsl
push
jae
add
cmp
je
mov
call
or
push
lea
sbb
sbb
stos
adc
mov
sbb
push
call
push
inc
cmp
fsubl
and
sbb
test
rcll
cmc
mov
adc
shl
lds
cmc
adcl
adc
sub
addr16
push
adc
sbb
push
and
push
dec
add
add
xchg
sub
or
rdtsc
scas
test
nop
xchg
in
dec
je
jmp
cwtl
pop
inc
push
jb
lret
and
dec
adc
adc
in
loope
and
cs
pop
add
pop
push
rcr
rorb
orl
sbb
loopne
mov
push
add
int3
add
adc
push
lcall
mov
add
xor
mov
xchg
jbe
xor
dec
inc
imul
stc
scas
adc
test
outsl
inc
and
adcl
add
cmp
adc
rorb
xchg
loopne
mov
in
lock
and
daa
push
out
push
rolb
push
loop
cs
or
dec
xchg
mov
aam
sbb
mov
mov
xchg
mov
pop
loop
pusha
push
js
push
filds
mov
je
sarb
ljmp
mov
js
sub
or
cmc
xchg
push
iret
mov
andb
push
xchg
lcall
and
and
pop
ss
mov
jne
mov
stc
mov
imul
pop
aaa
ret
das
mov
lds
jle
adc
popf
adc
jo
mov
adc
sub
push
das
mov
jecxz
ja
int3
in
rolb
mov
cmp
fmull
push
cmp
stc
ja
add
rolb
jle
adc
xchg
and
xchg
inc
fildll
add
push
or
lcall
xor
sub
mov
aas
cs
insl
sbb
adcl
das
lock
mov
test
inc
sbb
cmp
cmp
mov
mov
inc
xchg
mov
push
stos
shll
inc
je
shr
pop
fildl
frstor
loope
add
or
ret
jecxz
jecxz
popa
push
inc
in
push
xor
xchg
xadd
out
add
in
pop
lret
or
ret
push
ds
cmp
or
add
mov
shrb
lahf
icebp
xor
ljmp
in
subl
add
mov
jmp
popa
in
fldt
shll
xor
nop
jg
cmp
add
out
xchg
inc
je
or
daa
pop
jle
and
mov
mov
rclb
out
xchg
pop
push
cmp
xchg
push
je
or
dec
xor
mov
sti
add
lret
call
xor
fs
pop
int
add
ficoms
add
or
roll
mov
and
sti
pushf
dec
daa
ja
and
test
inc
ficoml
push
clc
mov
mov
add
add
xchg
pop
fs
stos
push
push
iret
jmp
js
push
movsl
push
push
pusha
lods
add
test
nop
jno
xchg
andb
ret
adc
sbb
cmpsb
popa
and
int3
iret
lods
add
jg
jl
inc
cs
jmp
sbb
in
lret
dec
es
and
push
lock
lods
pop
inc
inc
fists
rcrb
push
xor
cld
int3
add
add
fdivl
and
add
sub
popl
sub
xor
and
sbb
and
lea
les
mov
shr
sub
repnz
pop
inc
adc
not
sbb
push
pushf
iret
add
xlat
cmp
sbb
xchg
add
loopne
push
iret
add
pcmpeqd
push
mov
movsb
adc
dec
mov
inc
movsb
data16
aaa
cwtl
sbb
fcomps
mov
add
cmp
push
rolb
push
adc
jmp
shll
or
addl
add
outsb
sar
add
fdivr
in
inc
jo
ret
std
or
clc
fidivl
cmp
mov
out
frstor
daa
sub
iret
cmp
push
pop
mov
fsub
gs
bound
sub
xchg
cmp
or
mov
pandn
cmpl
imul
in
and
jno
inc
xchg
rorb
sbb
pop
jmp
in
push
add
stos
pop
push
ja
push
les
andb
and
push
cmp
ds
dec
sub
add
shrb
mov
add
jo
push
mov
and
fildll
ret
xor
daa
mov
jl
push
mov
enter
jo
rcrb
sbb
push
fcom
lock
mov
sbb
sti
cmp
mov
xor
addl
cltd
and
movsl
enter
and
pop
rolb
inc
xor
mov
mov
mov
scas
push
cwtl
xchg
test
adc
push
pusha
mov
outsl
adc
push
jnp
dec
push
push
push
mov
fbstp
sbb
inc
leave
or
loope
mov
sbb
lcall
hlt
push
adc
pop
das
das
xchg
xchg
push
cmp
sbb
xchg
in
scas
pop
and
jae
pop
repz
aam
pop
lods
rcrb
and
ud0
adc
shlb
inc
sub
xorb
pop
inc
push
cmp
es
je
or
mov
jbe
jb
in
push
fiaddl
daa
sub
je
sub
mov
adc
imul
xchg
add
jg
ret
rolb
mov
push
movsb
call
or
andl
mov
push
data16
sbb
cmp
sbb
sub
mov
jg
iret
xchg
dec
cwtl
gs
enter
and
add
cs
xor
test
mov
mov
jl
jno
push
add
push
push
sub
cmp
and
cmpsl
out
shlb
mov
jle
movl
clc
test
shlb
pop
jmp
jecxz
push
movsb
inc
or
pop
lahf
loope
mov
pusha
pop
pop
fs
pop
insl
dec
fsubs
and
push
mov
mov
insl
loop
stos
inc
ja
and
adc
push
call
outsl
xor
ret
imul
jno
mov
fisubrl
fmuls
rolb
jae
mov
je
ja
ja
sub
sbb
js
das
xchg
or
sarb
mov
or
add
push
push
and
fnsave
push
cmp
inc
jg
pop
loop
push
add
pusha
mov
inc
sbb
and
in
test
subb
and
lods
sbb
ret
stos
popa
aaa
mov
or
mov
xor
xor
and
add
jg
cld
sbb
pop
scas
addl
das
mov
add
xchg
in
dec
mov
sub
in
mov
lods
fnstenv
int3
mov
xor
dec
adc
sbb
push
loop
outsl
push
mov
loope
add
es
lods
aaa
add
sbb
in
adc
pop
pushw
push
icebp
outsb
rorb
mov
or
ss
add
sti
daa
aam
sarb
gs
xor
mov
xor
xchg
xor
sbb
pop
negl
xor
sbbl
mov
jno
dec
jo
jno
cmp
push
push
data16
sbb
cmp
int3
js
adc
xor
in
or
adc
push
add
jno
adc
add
push
cmp
je
rcr
cmp
les
jb
cmp
dec
cwtl
dec
dec
adc
call
adc
aam
sub
sub
xor
or
daa
loope
jb
pop
or
out
xchg
pop
les
pop
add
inc
inc
rcll
fwait
pop
push
jbe
sahf
scas
xor
push
das
rep
out
inc
addb
test
out
out
int3
sub
jg
sub
pop
and
add
lea
mov
loop
sub
adc
shlb
mov
out
xor
dec
pop
adc
adc
adc
and
sbb
shll
jle
or
movsl
cmpsl
leave
rclb
sub
dec
sbb
popa
adc
or
add
test
ss
les
inc
cmp
cltd
test
cwtl
jle
jo
jge
push
out
aaa
sub
jl
frstor
les
mov
jecxz
es
cltd
adc
ss
push
adc
dec
nop
pop
sub
adc
mov
mov
aad
jbe
cmp
inc
hlt
js
pop
call
jle
outsl
inc
mov
sub
fs
push
xchg
jns
pusha
out
inc
loope
and
arpl
rolb
test
imul
and
push
pop
cmpsl
add
sub
aam
mov
dec
adc
loopne
jo
loop
mov
sub
lea
cmpsw
movsb
in
xchg
je
xor
iret
frstor
movsb
cmp
pop
loop
inc
test
sbb
testb
jmp
push
mov
das
mov
dec
sti
fisttpll
sahf
faddl
dec
out
and
icebp
mov
aaa
sub
jg
aaa
shrl
mov
jle
or
jge
push
inc
sbb
sub
xor
je
les
jbe
sub
inc
sbb
jmp
jle
pop
dec
enter
mov
mov
hlt
test
stos
lods
cmp
mov
sbb
divl
and
mov
test
cmp
add
dec
neg
rolb
push
jbe
jo
and
and
les
xor
shrl
mov
inc
xchg
jge
imul
sub
or
mov
and
jl
fs
fstp
fucomi
ret
fmul
sbb
rorb
or
adcb
add
add
test
insb
add
shr
out
sub
sbb
sar
mov
and
xchg
xor
aam
fwait
test
aaa
ds
jl
nop
push
mov
sbb
inc
cmp
es
loope
jno
loop
jb
xchg
rol
inc
roll
div
aam
sbb
xchg
or
add
hlt
push
xchg
stc
inc
nop
cltd
sub
jecxz
mov
xor
outsl
ret
cmpsb
mov
pop
push
xchg
test
test
xchg
lea
and
shr
pop
subb
pop
jecxz
xchg
fstl
sar
lret
push
pop
push
jbe
xor
sub
mov
jnp
sub
or
add
lods
jecxz
in
ret
or
dec
pop
repz
hlt
jne
subl
rcrb
mov
je
xor
mov
mov
xor
jo
mov
inc
adc
pop
cmp
mov
mov
xchg
je
popa
jne
mov
sub
daa
push
mov
sbb
mov
unpckhps
jge
jle
sbb
jne
mov
bt
icebp
add
lcall
cmpl
sbb
adc
in
sub
push
sbb
test
push
inc
jecxz
arpl
cmpsl
fstl
pop
ret
js
dec
xor
mov
add
or
shlb
in
sbb
or
imul
lods
dec
sub
paddb
clc
loop
mov
iret
inc
loope
pop
rcrl
arpl
push
nop
push
inc
jle
stos
push
es
lock
movsb
rorl
sub
insb
sti
fstpl
sbb
dec
add
iret
int3
loop
jo
out
mov
push
mov
ja
push
xor
ljmp
inc
xchg
xor
pop
inc
pop
or
or
imul
repz
sbb
or
inc
insl
pusha
dec
lods
mov
push
sbb
xchg
sbb
jb
lods
imul
sub
nop
dec
or
and
cmp
cli
stos
inc
les
cmpsb
and
lock
je
int3
cmp
inc
and
xor
fstps
pushf
int3
adc
faddl
xor
and
jbe
mov
imul
loop
add
xchg
and
dec
mov
aas
or
lcall
cmp
adc
in
sub
xor
xchg
lds
xor
stos
sbb
pop
adc
sbb
pop
pop
stc
rorl
or
lds
adc
cmpsl
jns
out
or
push
xchg
clc
mov
dec
fbstp
and
cld
push
es
sub
repnz
add
cmp
add
xchg
inc
push
dec
jle
jp
mov
xor
xor
arpl
maskmovq
ffreep
xor
xlat
stos
xchg
hlt
add
push
popa
pushf
pop
popa
loop
insb
xchg
es
cld
xchg
sub
nop
push
cld
cmp
xor
and
movsl
jp
pop
add
jnp
sahf
mov
in
mov
es
popa
cmpl
fnsave
ret
xchg
mov
xchg
sbb
icebp
sbb
dec
pop
adc
rclb
iret
xchg
cmp
ret
js
mov
adc
or
pop
push
mov
nop
xchg
inc
aas
or
idivl
outsb
sub
xchg
dec
and
adc
push
and
pushf
inc
fcmovu
mov
gs
or
or
stos
push
daa
mov
out
and
mov
cmp
xor
adc
frstor
xor
dec
pop
push
stos
inc
out
inc
mov
adc
add
cvtps2pi
jmp
xor
ja
mov
lods
add
dec
push
sbb
xchg
add
jle
adc
cmpsl
test
jle
sbb
inc
std
pop
aam
push
jg
mov
jp
dec
xor
jne
cmp
sbb
lods
xor
test
adc
xchg
inc
ja
push
unpcklps
out
aam
mov
addb
pop
or
pop
stos
mov
cltd
rcr
jmp
inc
jge
sbb
jle
and
cmp
sbb
push
push
sbb
push
push
pop
jge
mov
and
and
popa
pusha
jae
out
movsb
and
popa
out
subb
out
xor
mov
mov
jg
pusha
loop
inc
addr16
jno
mov
out
add
add
dec
test
xchg
call
jge
sub
inc
mov
pop
fwait
sub
mov
into
test
add
nop
in
sbb
in
or
scas
mov
stos
rolb
xchg
and
or
out
jno
sbb
es
jns
xor
sbb
sti
add
push
jecxz
lret
inc
outsl
cmp
jle
mov
add
pop
and
xor
sar
daa
aam
add
and
lret
pop
adc
fldl2e
cmp
imul
call
xchg
nop
add
xor
jl
mov
fmuls
and
test
ja
pop
cli
pop
and
ret
or
jl
push
dec
dec
jmp
mov
mov
inc
ds
xor
enter
pop
insl
mov
add
js
pop
mov
mov
fadd
add
fmulp
inc
push
and
and
test
mov
mov
pop
imul
cmp
inc
inc
adc
jle
popa
xlat
xchg
and
jmp
inc
xlat
mov
shrl
xchg
pop
cmp
xchg
mov
add
call
mov
test
enter
add
or
addr16
pop
ljmp
cwtl
xchg
in
in
and
gs
mov
daa
roll
insl
add
inc
aaa
mov
cli
gs
xor
sub
xchg
fildll
or
in
add
and
je
test
fs
test
rcll
xlat
sub
call
dec
cmp
roll
aaa
cwtl
xor
pop
fisttps
push
subl
in
sbb
pop
ljmp
enter
ja
xchg
xor
leave
jb
rcrb
loop
xchg
jb
jb
aad
mov
mov
inc
jg
idivl
adc
sbb
cltd
push
xchg
mov
or
das
sub
pop
loope
and
pusha
sub
outsb
sbb
pop
fldcw
cltd
mov
mov
insl
dec
xor
rcrb
adc
cmc
loope
or
and
cltd
jecxz
and
sahf
mov
aam
aam
jbe
xor
mov
inc
push
dec
rclb
jp
cmpl
or
sub
xchg
fldt
add
out
popa
lods
dec
inc
call
mov
push
test
xlat
sbbb
or
pusha
mov
adc
pop
cmp
stc
popw
lcall
sbb
cmpsl
rolb
add
dec
rcr
inc
mov
mov
jge
addl
ja
push
clc
sbb
cwtl
mov
lods
sub
ljmp
lock
add
xor
arpl
sbb
cmp
sbb
xchg
andb
ja
lea
and
mov
pop
test
xchg
test
xchg
hlt
dec
add
dec
and
inc
xchg
dec
inc
scas
bound
push
dec
push
arpl
leave
mov
das
xor
add
movb
stos
hlt
push
stos
bound
add
call
add
adc
sbb
outsl
in
sub
mov
inc
push
pop
or
fcompl
mov
int3
test
push
mov
pop
cmp
ds
ja
jo
insl
fdivrs
or
xor
lea
dec
cltd
or
add
and
sub
imull
loopnew
imul
push
or
loopne
mov
mov
sbb
ljmp
adc
mov
rol
push
loopne
scas
in
cwtl
and
inc
fldl
and
mov
call
fldenv
clc
dec
js
mov
lret
cmp
mov
pushf
sbb
pusha
loopne
xor
dec
and
dec
or
gs
mov
push
fimull
adc
int3
push
push
sub
cmc
adc
iret
pushf
mov
mov
mov
push
sub
inc
cmp
roll
call
ljmp
add
mov
jae
stos
mov
push
in
jbe
push
and
test
sbb
cwtl
lock
ss
pop
aaa
sarb
xorl
call
jecxz
mov
cs
sub
mov
je
ljmp
cmpsb
inc
fmul
loope
test
stc
das
push
xchg
js
loope
push
movsl
fmuls
and
or
sbb
add
lret
mov
scas
jb
fstps
es
icebp
pop
xor
mov
adc
lcall
dec
jae
mov
aas
sbb
icebp
xor
lods
aad
xor
ds
xchg
add
and
and
pop
and
test
js
fiaddl
xor
xchg
mov
ss
loop
repnz
dec
ret
es
cmp
lods
fimuls
movsb
pop
or
xchg
scas
imul
inc
adc
inc
rclb
stos
andb
movb
sbb
call
out
rcr
jmp
data16
rol
mov
in
push
imul
pop
fsubrl
repnz
ds
outsb
frstor
and
push
movsl
xor
leave
loopne
imul
xchg
out
sub
mov
mov
or
insb
notl
jp
pop
sub
and
push
pop
inc
in
sbb
loopne
rolb
and
loopne
mull
sub
sub
sub
mov
dec
aaa
mov
add
inc
aas
pusha
xor
or
xor
mov
stos
xchg
loopne
das
dec
nop
adc
jnp
cmpsl
arpl
nop
in
add
jecxz
and
lret
jmp
ficoml
int
dec
mov
movsb
hlt
sbb
push
add
ja
sub
iret
enter
xchg
shlb
cmpsb
lret
add
incb
rcll
xlat
mov
pushf
jne
bound
xchg
sub
mov
dec
mov
imul
add
inc
adc
inc
lds
in
test
in
jge
push
nop
push
cwtl
inc
dec
mov
test
sub
xor
int
sbb
fcompp
add
push
fidivrs
or
cmp
cli
jl
mov
or
sub
lret
mov
in
and
ja
daa
mov
adc
imulb
xchg
jo
sahf
dec
sub
sarb
adc
add
mov
pop
mov
cld
or
xor
out
in
out
xchg
imul
clc
and
call
stos
roll
and
movsl
stos
fdivl
inc
dec
sub
cld
or
push
adc
inc
fadds
bound
sub
shll
add
test
lds
xchg
add
pop
out
in
aam
ficomps
jbe
push
cmp
add
adc
lcall
sbb
imul
dec
mov
lods
cmpsl
outsl
adc
fistpl
loopne
rolb
add
mov
aas
in
rcrb
lahf
es
aad
outsl
shlb
pop
pop
pop
cmovno
jmp
push
jns
adcb
adc
xor
inc
sbb
loope
add
push
xlat
jno
pop
in
mov
filds
xor
jno
hlt
or
lods
or
adc
pop
lahf
push
das
lahf
or
cmp
push
or
dec
shlb
add
lahf
loop
test
xchg
sub
mov
shlb
adc
es
jmp
loopne
cli
enter
jp
fucomp
lods
and
xor
test
mov
push
pop
add
cmovs
adc
lret
adc
mov
xchg
outsl
or
jge
push
mov
test
shlb
imul
popa
aas
jo
enter
in
test
xchg
ss
mov
out
fistpl
jo
push
pop
xchg
xchg
repnz
scas
rcll
sbb
add
nop
xchg
fs
dec
arpl
inc
mov
daa
imul
adc
fimuls
xor
jnp
cmp
xchg
dec
aam
test
push
push
shlb
dec
jl
insl
add
xchg
push
test
iret
xchg
int3
nop
aaa
mov
shll
xchg
xchg
xchg
daa
jbe
cmp
sbb
inc
xor
and
add
mov
and
sub
mov
das
and
repnz
jae
lock
adc
stos
test
ja
mov
dec
pop
mov
sbb
enter
ja
pop
fwait
mov
push
outsb
add
mov
push
push
jns
xor
sub
dec
scas
push
out
cmp
add
test
loope
sbb
jae
cmp
mov
je
test
mov
pushf
add
cmp
call
pop
arpl
adcb
xchg
sbb
push
inc
xor
dec
mov
adc
mov
jnp
mov
or
push
xor
pop
mov
dec
mov
or
push
sahf
lea
or
mov
fstps
add
dec
sbb
or
fisubrl
push
fwait
vmwrite
addl
push
test
popa
clc
add
bound
dec
mov
cmp
mov
les
sbb
inc
iret
mov
jno
testb
jno
xchg
arpl
push
dec
call
cmp
and
mov
mov
inc
in
stos
arpl
loope
test
scas
mov
dec
movsl
push
pop
pushf
out
adc
testl
aad
push
cvttps2pi
loopne
inc
xchg
sbb
pop
sbb
ss
dec
movsl
dec
jae
dec
inc
ja
sub
fwait
sub
test
xor
mov
sbb
jmp
push
mov
add
push
loopne
adc
leave
push
jg
sub
add
sbb
scas
pop
sbb
shlb
push
das
loope
aaa
clc
inc
sti
lods
and
xor
fs
enter
dec
mul
or
cmp
pop
lret
lea
rcl
inc
sbb
jns
shlb
pop
cmpsb
jb
leave
or
mov
mov
adc
or
add
inc
sub
mov
jb
das
xor
push
shlb
pop
iret
cltd
leave
orb
sub
xor
jo
pusha
sbb
dec
add
andb
sub
xchg
aam
std
push
jae
or
movsl
dec
xchg
push
mov
mov
xor
cmp
add
xor
push
push
inc
add
ljmp
jne
sub
sub
push
sbb
nop
int3
or
mov
inc
lods
into
addl
mov
adc
xchg
pop
js
arpl
inc
add
cmp
inc
cwtl
or
dec
xor
pop
pop
push
push
insl
aam
pop
jbe
out
cmp
sbb
sub
push
loopne
iret
std
inc
xor
jne
jne
data16
frstor
stos
xchg
push
lret
inc
ja
mov
sahf
rorb
push
pop
adc
fmul
ret
fisubrl
xchg
xlat
mov
push
add
mov
out
icebp
push
xchg
cltd
xor
fimuls
mov
add
sbb
imul
fstl
stos
sub
rcrl
and
sub
cmp
pop
cmc
movsb
test
mov
dec
jg
movsl
add
pop
mov
inc
xor
adc
mov
xchg
js
mov
movl
add
sbb
iret
fwait
xchg
cmp
movl
stos
jmp
js
out
pop
pop
mov
dec
dec
loop
xor
adc
adc
out
push
lods
rcrl
mov
lods
test
loopne
out
push
stos
dec
mov
js
loope
mov
pop
loopne
and
cmpsl
xchg
daa
or
mov
lcall
arpl
and
sbbl
shrl
mov
dec
and
mov
cwtl
xchg
add
sahf
or
add
mov
cmp
sub
out
push
sub
mov
iret
dec
sbb
and
and
sub
add
dec
push
jle
sbb
mov
scas
and
lods
movsl
sub
mov
lods
xchg
dec
pusha
arpl
xor
mov
mov
in
inc
adc
sub
je
inc
paddusb
clc
test
cmp
sbb
inc
fstps
jl
ret
xorb
test
icebp
mov
and
add
syscall
test
pop
cmp
wrmsr
xchg
jge
xor
sbb
ret
and
push
sub
xorb
mov
push
push
in
push
push
aad
movl
fisttpl
add
arpl
lea
jo
mov
dec
sub
add
xchg
popa
lods
push
cmp
fsubp
sbb
cmp
jecxz
incl
mov
adc
add
xchg
nop
enter
enter
sub
addr16
xchg
mov
aad
mov
push
ret
fistl
js
add
pop
jl
fidivs
movsb
shlb
mov
xor
push
sbb
push
bound
pop
fadds
jmp
mov
push
cmp
inc
inc
and
sbb
sbb
mov
add
sbbl
sbb
and
popw
lret
jno
clc
jns
out
scas
dec
jl
sti
and
dec
cmovs
or
and
addr16
sbb
cmp
and
aad
adc
jns
test
cmc
mov
es
outsb
imul
push
test
std
inc
and
add
dec
cmp
or
popa
adc
movsb
cmp
xchg
cmc
shll
push
push
and
enter
clc
and
adc
daa
bnd
adc
outsl
dec
adc
mov
pop
ss
sahf
dec
and
mov
mov
daa
in
sarb
and
or
loopne
pop
dec
lock
xor
outsb
add
and
push
pop
imul
adc
ss
mov
push
lahf
xchg
pop
push
xor
xchg
std
push
push
cmp
xchg
mov
jo
mov
jo
lods
add
mov
iret
adc
sbb
neg
ds
inc
shll
sbb
sbbl
cli
bound
shr
pop
dec
ljmp
pop
xorb
loop
add
mov
sub
imul
pop
or
jne
cs
frstor
pop
lret
mov
xchg
lea
mov
cmc
jecxz
add
fmuls
test
daa
cmp
xlat
xorb
roll
jns
cmc
and
jo
sub
mov
inc
inc
hlt
addr16
push
outsl
add
jl
popf
or
dec
js
jp
or
mov
pop
dec
pop
and
jp
and
jbe
xchg
mov
pop
nop
sti
and
mov
sbb
lods
das
je
inc
cmp
ret
pop
fmuls
or
and
xchg
xchg
js
shr
push
pcmpeqb
dec
arpl
or
movsl
aaa
sarb
ljmp
ret
shlb
pop
js
ret
jp
in
and
pop
shll
sbb
push
ja
scas
pop
out
mov
mov
fwait
js
cmpsb
das
sbb
mov
enter
dec
stos
or
pop
mov
pop
or
andb
mov
outsb
icebp
rorb
xor
mov
arpl
jo
je
and
data16
jno
outsb
inc
pop
std
jg,pn
jo
jbe
cmp
xor
mov
dec
pop
or
xor
orb
outsl
add
pop
test
ds
add
adc
dec
pusha
sbb
sbb
mov
push
push
push
sub
in
add
and
mov
lcall
call
lret
push
or
jae
push
jns
cmpsl
sub
mov
adcl
ret
sbb
push
shrb
iret
mov
or
inc
sbb
inc
adc
daa
mov
cmp
test
jecxz
das
daa
sbb
cs
pop
aam
sti
inc
sbb
enter
push
sti
sub
push
nop
fisubl
ficomps
loop
xchg
pop
inc
loope
leave
dec
subl
inc
jle
ret
fmuls
movsb
fisttpl
ret
push
jl
jecxz
jne
push
movsb
xor
fisttps
cwtl
jo
xor
sub
aad
jl
scas
mov
xor
adc
jecxz
xor
fstps
or
sbb
dec
sbb
sbbl
xor
sbb
or
sbb
orb
pop
sub
adc
sub
inc
xchg
loope
outsb
pop
sbb
mov
cltd
cli
push
push
sub
fistl
sbb
loope
mov
popf
and
pop
mov
xchg
scas
mov
mov
andb
push
test
add
adc
fcmovnbe
sub
and
pop
add
pop
jns
adc
lods
loopne
pushf
ss
jo
data16
ss
lret
pusha
jno
add
push
dec
test
push
inc
clc
test
xor
inc
fidivs
jge
aam
push
test
das
adc
ljmp
or
sub
ss
lods
sub
dec
jbe
sbb
inc
nop
scas
sbb
lods
aad
imul
and
dec
mov
mov
adc
mov
clc
dec
pop
bound
inc
lock
mov
out
jae
es
outsl
push
push
or
es
xor
sbb
addr16
push
loop
xchg
jb
jl
mov
inc
sub
dec
adc
ds
iret
movsb
sbb
movsl
ljmp
fwait
stos
mov
mov
pop
add
incl
add
les
dec
dec
adc
sub
xchg
pop
scas
aam
ja
xchg
das
push
imulb
jl
cmpsb
ret
icebp
or
sbb
imul
jle
or
or
fiaddl
add
jo
fadds
add
aaa
and
sbb
push
pushf
dec
jl
pop
pop
test
repz
mov
mov
lods
jns
lahf
daa
jp
shll
mov
outsl
inc
stos
inc
ja
inc
add
xchg
icebp
adc
inc
or
jmp
enter
sub
lfs
xchg
fldl
add
imul
das
pusha
mov
mov
sbb
fwait
nop
test
mov
mov
sub
pop
sbb
mov
sub
xchg
pop
andl
pop
mov
dec
insb
popa
or
or
es
mov
lret
xchg
orb
jae
and
les
adc
xor
jnp
xchg
and
out
stc
dec
xchg
sbb
das
icebp
mov
inc
add
xchg
sub
xchg
jecxz
add
add
xchg
ja
js
adc
or
lds
mov
xchg
or
xor
mov
loope
imul
mov
loop
and
add
push
add
or
mov
leave
dec
imul
lret
test
and
add
shl
pop
sarl
rcl
rcl
sbb
fmuls
ret
or
int3
ret
xchg
sbb
mov
popa
pop
mov
or
ror
mov
scas
js
add
sbb
rol
inc
jp
xchg
and
mov
fsubr
int
push
jno
sbb
mov
dec
shl
add
fsubrs
shr
dec
subl
jp
dec
cld
mov
pop
cmc
xorl
mov
cmc
or
iret
mov
and
push
or
gs
add
mov
lock
mov
jae
xchg
jbe
popa
shl
lahf
in
adc
adc
lock
xor
lret
bound
add
pusha
jle
dec
mov
test
mov
push
in
xor
cli
add
push
scas
push
xchg
sbb
xor
sub
orb
mov
jno
loopne
popl
leave
dec
sub
xchg
lret
iret
addr16
scas
ja
aam
shrb
sbb
dec
pop
inc
nop
dec
jno
push
xchg
mov
jle
jae
push
xlat
sbb
cmpsl
fst
insl
push
push
push
xor
sbb
sbb
ljmp
roll
pop
mov
das
jbe
mov
in
mov
es
sub
mov
or
ds
roll
cld
cwtl
xlat
movsb
or
add
jo
jecxz
xor
push
clc
push
mov
add
addl
xchg
jo
lret
inc
es
mov
mov
vfrczps
cmp
rorl
mov
std
jne
call
jnp
cmp
jbe
jl
mov
popa
cmpsl
movsb
or
repnz
pop
das
xchg
mov
movsl
xor
cmc
push
mov
mov
sub
inc
loopne
mov
out
xor
dec
jnp
mov
pop
sbb
xchg
int
adc
leave
int
xchg
mov
ljmp
mov
mov
arpl
jnp
sar
test
and
sbb
jl
add
pop
xor
and
ret
pop
mov
jp
jle
pushw
rolb
insb
lret
add
or
sub
add
cmpl
jnp
in
rorl
mov
imul
daa
outsb
pop
xchg
aam
add
sub
in
pop
inc
fdivl
leave
in
jno
xchg
inc
adc
sbb
pusha
xor
mov
das
mov
mov
dec
adc
adc
in
mov
jp
and
ret
jbe
or
mov
add
ljmp
out
stos
cs
aas
push
cmp
cmc
imul
stos
sub
into
sub
fstpt
arpl
sub
test
push
lock
test
xchg
mov
rcrl
shll
popf
sahf
data16
dec
push
imul
popf
push
shll
fadds
mov
pushfw
mov
aaa
dec
or
add
inc
inc
in
testl
ljmp
pushf
loop
jmp
add
cmp
ret
lods
in
lock
fsubp
clc
insb
cwtl
aam
and
ljmp
dec
aaa
popa
dec
push
xchg
adc
filds
ret
addb
fldz
sbb
mov
xchg
add
cmp
and
push
pop
hlt
cmpsl
out
ret
mov
cmc
and
add
lahf
add
lock
xchg
cmp
mov
cmpsb
pusha
shll
xor
test
iret
cmc
es
inc
sub
mov
test
movsl
push
subb
rcrl
mov
pop
pusha
add
push
cs
mov
sti
adc
xchg
enter
rorb
pop
add
mov
add
pop
iret
push
sarb
cmc
adc
jo
push
and
int3
in
sbb
and
call
popa
or
mov
fcomps
xor
mov
jge
mov
rolb
test
jg
pop
ja
jle
icebp
call
jle
mov
xchg
in
call
fiadds
xchg
jns
mov
inc
inc
adc
pop
dec
sub
repnz
mov
jb
xchg
push
inc
icebp
inc
jmp
out
dec
mov
out
xor
aam
sub
pop
mov
pop
lcall
fsub
push
add
add
shlb
lock
add
mov
jno
mov
imul
cvtps2pi
mov
xchg
sub
scas
cld
lods
dec
rclb
lock
js
test
or
pop
mov
add
rorb
vmptrst
or
movsl
jp
cmpsl
lea
jmp
inc
mov
js
ret
mov
mov
dec
mov
ret
push
xchg
add
outsb
push
mov
aaa
mov
mov
sbb
outsb
add
aaa
jnp
nop
pop
dec
inc
jns
lahf
push
push
les
push
movsl
movsl
icebp
imul
loope
and
xor
mov
and
inc
push
sub
sbb
sbb
jo
inc
repz
enter
rolb
xlat
xor
rcr
out
jge
js
lea
jge
add
or
adc
cltd
pop
jp
ss
inc
or
mov
test
dec
sub
xchg
sub
shl
cmp
jb
mov
xor
stc
mov
mov
xchg
shlb
or
jo
dec
jmp
cwtl
popf
sub
lahf
sub
lods
adc
ret
pushf
iret
dec
and
sbb
or
cs
cmp
cmp
loope
idiv
negb
rcl
jl
call
fwait
testl
sbb
sbb
iret
lds
andb
daa
mov
jg
and
gs
rol
dec
dec
xor
mov
icebp
jns
mov
mov
and
rcr
addb
push
call
enter
cmp
cmp
mov
xchg
mov
push
jp
insl
push
sub
or
iret
cmp
cs
push
imul
imul
das
sarl
jp
cmpsb
add
mov
cmp
xchg
jl
nop
aad
push
aad
aad
inc
inc
jmp
push
subl
outsl
out
push
pop
jmp
adc
daa
not
xchg
add
mov
iret
or
and
push
leave
scas
dec
pushf
clc
scas
xchg
dec
mov
pop
pushf
and
clc
and
sbb
popa
xchg
loope
adc
gs
dec
mov
or
cmc
sarb
mov
sbb
and
test
jae
out
add
inc
mov
add
rorl
shlb
dec
fcomp
mov
std
std
ljmp
iret
and
cs
cmpsl
rol
es
jl
jo
into
mov
inc
clc
add
outsb
xchg
jmp
insl
mov
ret
xor
mov
daa
out
and
and
movsl
mov
inc
add
lods
movsl
push
lret
ret
xorl
xlat
add
dec
cmp
mov
xor
jae
cmpsl
jb
imul
imul
pushf
and
or
xchg
rol
fwait
dec
hlt
xchg
insl
shll
lea
aad
mov
popa
cmp
or
jge
xchg
jge
sub
jmp
pop
fstpl
leave
sti
sub
sbb
and
incb
inc
lret
loop
je
adc
mov
sti
and
aam
adc
mov
sbb
push
fisubl
xchg
xchg
cmp
xor
add
fcompl
or
das
filds
int3
and
add
xor
pop
or
gs
jl
inc
mov
dec
mov
xchg
outsb
jo
add
adc
mov
int
and
cmp
and
mov
push
jo
sub
pop
bound
inc
dec
out
push
mov
je
jae
fsubs
jge
push
add
js
mov
iret
push
or
lcall
ss
jl
xor
sbb
sub
iret
and
push
add
sub
mov
ss
mov
je
mov
arpl
mov
sbb
xlat
push
scas
cli
mov
std
or
int3
add
addb
add
ds
lea
scas
mov
pop
psrad
xlat
call
or
dec
push
ja
enter
dec
iret
js
loopne
mov
mov
pusha
dec
adc
es
popa
insb
jnp
sbb
stos
fdivs
out
or
arpl
sbb
test
jecxz
dec
and
loope
jo
or
in
push
clc
decl
stos
add
loopne
test
sub
xchg
pushf
mov
xor
push
pop
rcrb
jle
xor
push
shlb
or
ror
js
bound
mov
sub
insl
jle
es
push
iret
stos
sti
scas
outsl
pop
addl
iretw
mov
pop
pusha
icebp
adc
xchg
dec
in
jl
push
out
jg
jl
mov
pushl
test
inc
or
lret
xor
push
jo
leave
mov
cs
aaa
clc
lods
inc
push
add
or
nop
dec
mov
mov
or
mov
test
mov
or
out
loope
loop
xor
lret
pop
and
imul
daa
jl
add
pusha
ss
sbb
jbe
sbb
orl
loopne
jg
adc
mov
iret
out
loopne
cmp
push
jnp
xor
addr16
rclb
xchg
sarb
hlt
pop
rolb
inc
aaa
test
jnp
rclb
xchg
movsl
and
rcl
icebp
test
or
add
test
loop
pusha
jle,pn
jle
mov
aaa
xor
lahf
jo
mov
fnsave
and
jge
adc
fldl
cli
test
add
mov
out
push
add
loopne
aaa
push
aaa
adc
jb
mov
mov
aam
xchg
sub
sub
xor
or
cmpb
adc
shlb
pusha
inc
loop
inc
xor
jb
test
inc
fisttpl
xchg
lock
test
ljmp
adc
dec
jbe
push
push
pop
or
xor
pop
nop
xor
movb
cmp
xchg
int
add
add
xor
movsl
sub
outsb
hlt
xor
cmp
xor
push
add
adc
cmp
and
sbb
aas
push
repz
loopne
in
inc
mov
mov
mov
pop
adc
mov
adc
add
push
cmc
push
adc
loope
sub
cmp
iret
fidivrs
push
xlat
iret
or
add
cli
adc
icebp
push
push
adcl
stc
push
jecxz
out
pop
mov
iret
pop
sub
mov
add
add
and
or
incl
push
mov
ljmp
push
or
mov
rolb
ret
adc
or
mov
ja
mov
stc
add
sti
sbb
mov
cmpsb
xchg
adc
mov
add
lea
sarb
add
mov
mov
cmp
call
fcomps
inc
inc
push
repz
or
sub
fisttpll
sbb
inc
lret
pop
push
fildll
cmp
adc
and
out
aad
or
and
fimull
fbstp
push
call
jb
sub
int3
mov
shll
jp
insb
push
adc
or
out
inc
mov
ret
lods
add
push
or
cmp
xorb
push
jae
ret
mov
pusha
test
dec
js
add
ljmp
inc
dec
cmp
fdivrs
testb
mov
mov
mov
and
mov
rolb
adcl
cmc
sbb
lds
add
jmp
and
iret
mov
sub
icebp
adc
pop
cwtl
lea
js
add
add
mov
sub
repz
adc
mov
push
add
and
fwait
ret
or
data16
movl
mov
std
add
test
dec
sete
mov
adc
sub
fdivl
mov
jnp
or
popa
lods
mov
sbb
push
xor
push
pushf
bound
movsb
add
aad
ret
bound
pushf
pop
outsl
fildll
or
sub
ja
mov
inc
dec
sahf
movsl
inc
add
adc
iret
stos
pusha
sbb
test
iret
data16
out
roll
xchg
rcrb
add
pop
mov
cwtl
push
or
inc
aad
mov
mov
pop
sbb
test
ljmp
dec
pop
fists
jnp
sarb
mov
ja
mov
inc
pop
sbbb
mov
push
and
clc
dec
jno
arpl
push
imul
inc
lahf
pop
pusha
push
loop
push
test
sub
sahf
ljmp
lret
sub
popa
insl
test
aam
aaa
inc
mov
cld
dec
lret
daa
add
adc
dec
fcoml
push
cltd
call
mov
xchg
scas
into
sbb
pop
fildl
push
push
inc
lods
xchg
sbb
mov
pop
das
rorl
aas
mov
scas
pop
sub
jb
out
ja
sbb
adc
add
andb
movsl
pop
or
xchg
je
int
jnp
push
fadd
mov
test
fidivrl
and
xchg
mov
mov
mov
and
pop
out
inc
mov
sub
sbbl
push
add
and
cmp
pop
mov
push
inc
insl
mov
out
mov
inc
sbb
xchg
xchg
aam
sub
imul
cmp
jns
ret
mov
add
adc
inc
popa
mov
popl
lods
add
jle
arpl
das
jle
out
dec
adc
int
fs
pop
aaa
or
out
rcl
mov
stc
adc
xchg
xor
push
dec
pop
outsb
jle
push
ds
add
xchg
loopne
cld
cmp
sub
loopw
cmp
rolb
daa
imul
dec
dec
add
lcall
mov
mov
push
mov
pop
les
movsl
adc
in
jne
sub
and
add
in
adc
insl
add
daa
push
cmpsl
lock
push
jg
addps
cmp
lret
jmp
nop
lods
and
cwtl
add
push
pop
fisttpll
inc
and
mov
scas
sbb
movsb
push
out
imul
pop
rcrb
inc
aam
ds
subb
jbe
sbb
sbbl
popa
add
dec
pushf
ror
cli
lret
mov
or
cmp
pushf
inc
in
lods
fisubl
add
rcrb
lcall
inc
add
cmc
iret
add
iret
add
mov
fidivl
jnp
inc
inc
xor
mov
imull
lods
and
cld
adc
sub
add
iret
sub
push
mov
mov
push
pop
jle
mov
in
sbb
and
lods
and
add
sbb
adc
cmp
je
push
or
sbb
hlt
add
mov
jae
mov
xchg
ret
jmp
aad
ds
cltd
ss
icebp
sub
es
push
daa
jl
xchg
push
dec
outsl
repnz
adc
daa
data16
mov
js
pop
xor
sub
mov
fiadds
insb
insl
mov
and
fucomp
inc
or
add
jecxz
ror
mov
insb
lcall
lret
scas
lods
daa
xor
mov
loope
lcall
ret
inc
adc
sub
cmp
pop
mov
ret
scas
es
sub
mov
js
aaa
inc
divb
dec
insl
jae
push
mov
sub
ret
outsb
jmp
clc
and
and
or
adc
dec
dec
fcomi
cmp
ficoml
test
dec
mov
or
cmp
ret
neg
pop
arpl
popa
sub
daa
cmp
in
dec
ss
and
sbb
adc
int
test
bound
adc
jo
inc
fimuls
mov
sbb
and
cltd
cmpsb
xchg
sub
repz
imul
xor
adc
cli
cs
jmp
and
or
lahf
pusha
add
cmp
test
icebp
fcoms
stos
push
pop
adc
pop
loopne
or
lock
lea
push
and
xchg
add
cmp
fidivrs
mov
andb
jne
outsb
pop
xor
add
mov
std
add
sub
add
add
shl
push
adc
movsb
popa
das
pop
divb
and
rolb
and
sub
push
iret
arpl
daa
rorl
sbb
stos
mov
mov
lock
pusha
jb
mov
mov
pusha
xor
sub
ret
push
decl
push
test
and
mov
mov
and
adc
test
sbb
scas
and
orl
ret
stos
dec
mov
push
push
xchg
les
rorl
ficoml
into
inc
mov
pop
add
stos
push
dec
inc
mov
stc
aam
loopne
sub
inc
inc
sub
loopne
add
dec
mov
sub
add
sub
push
daa
test
dec
lods
mov
inc
dec
test
push
inc
ret
inc
mov
mov
push
out
mov
das
fsubs
cld
ljmp
push
pop
dec
scas
xchg
add
pusha
ljmp
fcomps
ret
mov
inc
pop
adc
jle
js
push
inc
xchg
es
and
add
sub
fadds
adc
push
les
pop
fisubrs
bnd
mov
ja
or
shl
jg
pop
imulb
outsl
rcrl
insb
sub
gs
dec
mov
mov
les
jo
cmpsl
xchg
sbb
add
cmp
sarb
add
stos
lds
xor
dec
add
scas
dec
inc
cltd
pop
add
cs
mov
fisttps
jmp
pop
and
mov
aad
cmp
shrl
pop
push
dec
movsl
inc
cmp
movsl
xchg
icebp
inc
repz
xchg
mov
sbb
jb
ja
js
test
lock
pop
pushl
subl
pop
jae
es
rol
inc
or
jne
testb
pop
mov
in
pop
test
cli
in
repz
pop
fsubl
or
inc
andb
cmp
or
mov
sbb
dec
shl
cltd
jbe
mov
out
xchg
ret
push
mov
clc
jge
loopne
pop
jecxz
loopne
pop
ljmp
add
jae
push
add
add
ja
test
inc
add
inc
inc
sbb
iret
dec
sets
jp
shl
jp
insl
js
dec
add
push
jb
add
movsb
add
daa
roll
les
xchg
xchg
inc
testl
ret
addr16
outsl
xor
movsl
mull
sbb
test
cwtl
add
xor
sbb
shlb
mov
mov
adc
rolb
push
cmp
mov
out
stc
dec
loope
in
xchg
jo
clc
mov
pop
jne
sbb
fs
sbb
dec
je
lods
das
add
shlb
sbb
shlb
test
sub
faddl
ja
inc
or
add
mov
jp
fimull
xchg
push
lahf
cmp
shlb
pop
test
push
call
cmp
je
fsubs
and
add
sbb
fwait
xchg
mov
jb
and
add
ljmp
mov
rcl
xchg
data16
lret
ja
ret
and
push
out
repnz
std
bound
loopne
cwtl
notl
fdiv
xchg
lcall
inc
cmp
loopne
jl
ja
arpl
sti
pusha
test
outsl
movsl
sbb
fidivl
rcrb
push
cmp
jecxz
and
mov
lret
xchg
loope
jmp
adc
xor
pop
bound
pop
sti
fsubrl
mov
bound
jo
push
imul
call
xchg
adc
sbb
xor
sbb
pop
lods
dec
sub
lods
jg
jle
push
outsb
add
xchg
sti
into
aaa
insb
pop
bound
mov
xchg
mov
sub
add
pop
cmp
or
jbe
push
add
lahf
loope
add
push
mov
movsb
inc
add
add
add
sbb
add
add
pop
cmp
lret
mov
add
pop
shl
mov
sbb
mov
fwait
xor
xor
das
adc
mov
shlb
nop
out
inc
jge
js
popa
daa
in
ds
call
add
test
sbb
adc
sub
add
xor
sub
push
adc
inc
jns
es
mov
fstps
iret
cli
es
sar
sub
sti
dec
ds
sbb
dec
scas
aad
mov
pop
popa
sbb
mov
pop
jno
push
mov
inc
les
dec
sbb
loop
fsubrl
adc
pop
fs
lahf
or
add
int
inc
dec
xchg
push
rclb
push
mov
xchg
jbe
lods
sub
push
cmp
popf
ss
std
jle
jmp
adc
inc
into
dec
test
jnp
jne
scas
push
jae
scas
dec
sbb
std
add
mov
mov
pop
inc
cmp
adc
dec
add
ret
lcall
pushf
cltd
or
cltd
out
or
aam
movb
call
pop
pop
push
leave
add
adc
or
jns
adc
mov
or
repz
jbe
xchg
pop
adc
pushl
ja
in
repz
jmp
rorl
push
jg
or
fwait
sarb
push
pop
xor
xor
rdmsr
pop
xlat
or
inc
inc
in
mov
cmp
cmpsl
mov
sahf
dec
ret
add
rolb
xor
mov
sbb
mov
or
movsl
jle
dec
inc
adc
insb
jo
pop
imul
mov
adc
into
add
fdivrp
insb
pusha
mov
xchg
and
and
xchg
test
or
fidivs
inc
xorb
adc
ret
jo
aad
add
fsubl
sub
mov
dec
dec
fldcw
cmp
pop
loope
lret
xor
ror
dec
daa
ret
add
ret
or
call
lods
mov
jge
xchg
pop
lea
aad
js
cmp
and
xor
addr16
adc
into
scas
lods
and
je
and
cmp
cmc
pop
and
jp
imul
and
aas
adc
fsubs
sbb
and
mov
push
and
mov
fcmovnbe
out
lods
and
ret
cli
rclb
dec
call
ja
mov
int
sub
jns
sti
xchg
lods
stos
test
stos
shrb
lods
sub
rol
test
jae
mov
shrb
cwtl
loopne
cmp
pop
mov
scas
sub
fcoml
pop
mov
mov
sbb
dec
sbb
pop
xor
sub
in
fldt
add
mov
sarl
inc
ss
inc
out
push
adc
cmp
outsl
push
or
sbb
fmuls
mov
stos
outsl
fcmovnb
rcrb
cmp
arpl
push
ds
lret
mov
and
cmp
jle
push
add
ret
fistps
jecxz
sbb
cmp
jle
stos
adc
arpl
dec
cmpsl
test
shlb
stc
iret
iret
jg
insl
mov
mov
lods
adc
cmpsb
and
fistpl
jb
inc
adc
in
fwait
test
inc
shlb
mov
cmc
sub
push
and
lock
mov
mov
jb
call
fdivr
xchg
xchg
aad
pop
inc
rcr
xor
outsl
imul
aad
inc
aaa
inc
add
aad
or
adc
andb
mov
rorb
aad
jge
ds
lahf
insl
pop
bound
mov
xor
out
rorb
cs
push
jo
mov
dec
popa
add
cmp
xchg
rorb
dec
rorl
test
dec
mov
add
testl
js
bound
fcmovnb
xchg
test
mov
out
push
mov
cmp
sub
pop
push
ja
or
leave
aaa
cli
int3
ret
loopne
add
mov
inc
subb
push
push
xchg
inc
cmp
scas
dec
pop
sbb
orl
icebp
mov
repnz
out
xchg
movsl
pop
inc
dec
push
push
sub
mov
jnp
and
inc
xchg
stos
cwtl
push
pop
mov
ret
cmp
cmp
mov
aaa
orb
fidivrl
sub
push
sub
inc
pop
fcomps
mov
inc
jl
out
xchg
add
inc
movsl
cmp
call
aaa
dec
insb
and
xchg
ja
mov
or
pop
and
jecxz
mov
das
stos
add
mov
shl
imul
pop
loope
mov
lahf
movsl
ja
inc
sbb
shll
inc
sub
xlat
lcall
add
sub
popa
daa
lock
xor
movsb
jge
rcrl
jmp
inc
imul
cs
mov
imul
adc
stc
pop
sbb
and
je
imul
push
adcb
loope
or
sahf
xor
cmp
cmp
sbb
or
or
mov
inc
mov
in
call
add
xchg
je
xor
js
xchg
push
cld
popf
xor
sub
cmp
and
dec
adc
add
cmpsb
add
dec
out
inc
xor
xchg
pop
jecxz
cmp
jge
pop
jmp
rclb
movsb
and
js
push
test
je
repz
and
push
clc
add
aad
mov
mov
lcall
nop
jne
jmp
fcompp
out
out
cmp
movsb
adc
adc
pop
jns
adc
adc
loope
xor
jb
mov
inc
jne
cmp
out
adc
cmpsl
pop
jp
and
xchg
or
call
addl
jo
mov
fsubs
call
or
sahf
or
loopne
fcomp
mov
fwait
sub
jno
rcll
clflush
or
sub
sub
into
out
and
inc
mov
das
ret
es
nop
sub
inc
int3
daa
add
xor
jb
orb
or
mov
add
add
xorb
test
fstpt
xchg
xchg
inc
movsb
push
mov
pop
xor
sub
sub
or
push
push
xor
pop
aam
jmp
jo
call
into
mov
into
loope
inc
add
adc
dec
sub
dec
add
dec
xor
int3
rorb
daa
cmpsl
out
fmuls
ret
lock
sbb
fxch
adc
outsl
add
les
arpl
aad
cs
popa
dec
cmp
mov
push
dec
cmpsb
push
js
push
mov
sub
xchg
inc
mov
sub
or
add
sbb
fstl
ret
jae
imul
mov
ja
xorl
add
xlat
out
adc
dec
sub
mov
jmp
add
or
test
in
inc
loopne
dec
in
mov
mov
clc
inc
or
push
cmpsb
je
imul
mov
lods
mov
or
dec
mov
cmp
jns,pn
mov
pushl
mov
or
push
and
in
sub
outsb
insb
mov
daa
xchg
xchg
lock
push
sarl
je
cmp
jp
pop
and
aam
ret
loope
xchg
rolb
test
lock
mov
inc
inc
call
mov
aam
mov
inc
sub
push
lcall
jo
mov
daa
pop
mov
cli
dec
mov
add
mov
dec
add
sbb
pop
ja
mov
mov
out
rclb
lcall
pushf
or
add
jl
pusha
pop
mov
sub
cmp
mov
jns
pop
in
or
cmp
jmp
outsl
loope
mov
xchg
jo
negl
mov
jecxz
lahf
xchg
pop
daa
adcb
adc
pop
stc
stc
sbb
enter
push
stos
add
iret
js
push
mov
sub
ret
lods
rolb
out
repz
mov
dec
out
iret
cmp
lret
iret
daa
jbe
jne
subb
out
adc
and
or
inc
popa
out
and
mov
xchg
imul
imul
cmp
cmp
add
jno
addr16
pop
std
push
push
add
cmp
xchg
xchg
push
ds
push
jb
fnstsw
pop
dec
pop
call
inc
psraw
dec
sub
pop
fisubrs
pop
dec
in
xor
adc
stos
push
xchg
scas
adc
test
pushf
jnp
jp
out
add
loopne
shlb
repnz
push
lahf
hlt
xorb
std
jnp
inc
loop
andl
cmc
popa
and
and
fbstp
aam
mov
or
int3
xor
cmp
int
inc
fwait
mov
sub
test
xchg
fs
pop
out
push
pop
seto
mov
popa
jle
js
mov
fstps
neg
add
pop
sbb
cli
pop
addb
add
dec
add
xchg
cmc
inc
movsl
or
sub
xlat
push
faddl
dec
mov
lods
mov
cmc
test
fcompl
mov
iret
cmp
adc
adc
mov
andb
lods
and
in
popa
lock
and
shlb
cmp
sub
into
imulb
xchg
sbb
lods
pop
ds
pop
ret
ret
xlat
jl
jo
push
mov
fistl
scas
add
loope
mov
cwtl
jns
xchg
adc
sub
or
loope
scas
je
cmc
shl
enter
jmp
push
scas
jnp
cs
dec
sub
adc
mov
fisttpl
mov
out
xchg
jno
loopne
pop
jae
xchg
xchg
imul
cwtl
shlb
mov
jnp
pusha
movsl
jle
repz
push
mov
in
popf
adc
dec
aaa
mov
imul
pop
lds
and
stos
sub
cmp
ljmp
push
lret
jmp
dec
sbb
jo
je
and
or
mov
and
je
jns
gs
push
imul
inc
jp
push
jo
pop
std
xchg
dec
dec
dec
mov
nop
pop
xor
sbb
jmp
stos
add
iret
push
add
hlt
int3
xlat
jl
push
sbb
cmp
pop
loopne
dec
push
adc
mov
arpl
js
pusha
out
push
lods
lods
push
arpl
bound
dec
out
add
pop
mov
sbb
dec
push
xor
aam
aad
test
rolb
mov
cwtl
push
push
sub
mov
subl
mov
inc
adc
sub
cmp
lods
mov
and
addr16
and
lcall
ret
aam
scas
add
pop
mov
pop
dec
adc
dec
fsubrs
pop
dec
lea
fwait
dec
test
dec
iret
xor
jmp
fs
dec
loope
jne
rorb
push
das
or
push
add
sub
fistps
sub
adc
int
test
cmp
dec
mov
clc
sub
sbbb
insl
xlat
mov
cmpsl
xor
movsl
add
fmuls
lods
xchg
pushf
in
dec
and
mov
addr16
aam
movb
test
mov
adc
sbb
inc
lds
insb
test
push
scas
mov
push
mov
inc
pop
and
sbb
in
aam
mov
sub
xor
mov
jae
sub
out
fistps
jp
rol
sbb
jge
jge
sbb
jb
inc
jmp
push
cmp
dec
pop
pop
xchg
xchg
dec
mov
add
sbb
adc
in
push
ret
outsb
je
jecxz
pop
sub
into
push
mov
xor
adc
pop
fs
popl
mov
pop
loopne
sbb
mov
add
mov
sub
sbb
andl
add
jnp
test
js
pop
and
in
ljmp
test
ljmp
mov
sbb
cmp
or
mov
or
inc
pop
add
out
and
push
cli
cmpsb
push
in
xchg
mov
lds
pop
lods
xchg
ficomps
lds
rol
pop
or
mov
inc
mov
icebp
les
scas
leave
fisubl
push
adc
push
pop
dec
cmc
and
stos
pop
mov
fisubl
pop
sub
xorb
ja
mov
xchg
jbe
scas
cmp
mov
inc
jp
dec
dec
xchg
stc
inc
sub
clc
jecxz
repz
push
push
loop
sbb
mov
sub
ja
xor
inc
aaa
push
lds
pusha
lods
mov
xchg
xchg
dec
stos
xchg
fadd
ljmp
mov
sub
sub
xchg
adc
sbb
jecxz
mov
dec
cmp
fwait
push
lret
popa
and
fwait
jae
xor
insb
pop
sbb
or
mov
add
int
mov
sbb
sub
les
add
dec
cs
aaa
mov
mov
or
fs
fldenv
dec
xchg
mov
outsb
std
xor
dec
jge
js
sub
arpl
mov
ljmp
bnd
or
test
movsb
sub
iret
xchg
push
ss
mov
sub
dec
imul
ja
nop
jmp
addr16
shlb
test
enter
data16
aaa
outsl
or
sti
lcall
jmp
and
push
dec
xor
stos
cli
jb
dec
jp
idivb
call
lea
xor
and
out
mov
ret
mov
or
xchg
lds
cmp
sub
iret
loope
shlb
lods
fistl
or
dec
jmp
add
dec
add
adc
shlb
adc
pop
lahf
sti
mov
push
popa
inc
mov
mov
jne
loop
insl
lods
jne
pop
mov
mov
sbb
shlb
arpl
leave
sub
push
add
xchg
daa
addr16
push
mov
leave
add
dec
lahf
and
push
call
jno
jl
inc
jno
repz
cs
add
xor
imull
aaa
pushf
add
xchg
mov
test
adc
fdivrs
sbb
rol
xorl
or
aas
int3
loopne
mov
lods
add
iret
dec
push
scas
lock
xchg
rorb
or
dec
nop
shrl
aad
sbb
adc
imul
ret
iret
mov
aad
xor
pop
mov
add
lock
test
out
add
or
scas
pop
ffree
jno
imul
lock
int3
lods
inc
shlb
or
les
insb
test
adc
add
int3
mov
jp
js
sbb
mov
repz
xor
push
ret
imul
inc
fcoml
add
insl
ret
xor
dec
rcl
jb
xchg
mov
popa
insl
das
addr16
test
imul
fistpll
ss
mov
and
pop
pushf
fisttpll
sbb
imulb
add
add
xor
and
std
xchg
jmp
and
shrb
or
cmp
lea
push
lods
in
mov
mov
mov
call
pop
sbb
sbb
jne
sbb
inc
sbb
xchg
add
push
or
add
divl
xor
adc
loop
jmp
cmpsl
ja
addl
cmp
jl
xchg
out
xor
in
or
mov
xor
dec
out
xchg
or
in
inc
mulb
cmp
scas
js
sbb
aas
mov
scas
cmp
hlt
adc
aad
pop
xchg
orb
or
ror
cli
lods
jp
mov
pop
jae
xchg
inc
xchg
loopne
push
dec
sbb
pop
or
loop
repz
daa
inc
out
pop
out
movsb
jg
or
push
jg
pop
jbe
mov
adc
jnp
cli
dec
popa
test
and
xchg
jmp
popl
movsl
xchg
cmp
movsb
inc
sbb
pop
xchg
sti
xchg
xchg
shrl
pop
repz
jnp
dec
repz
rorb
lock
adc
movsl
jne
inc
or
cmp
jp
loopne
mov
popa
ret
jp
push
dec
stos
fbstp
pop
sub
sbb
cwtl
sub
add
adc
push
and
jle
xchg
cmp
jne
xchg
jo
mov
adc
xor
xchg
fildl
jecxz
loopne
add
pop
sub
in
ret
dec
inc
dec
push
movsb
add
sbb
mov
add
pop
mov
push
das
xchg
out
cmp
jne
movsb
mov
mov
mov
add
fwait
xchg
nop
mov
mov
adc
xchg
imul
add
imul
and
sbb
fildl
dec
es
xor
dec
les
imul
push
mov
bound
js
fwait
sub
mov
add
push
lods
jecxz
fxch
sub
addl
add
fwait
cld
es
add
mov
jne
add
mov
fsubs
and
mov
pop
andl
push
ret
push
mull
out
test
lock
pop
xchg
repnz
outsb
push
cmp
mov
cmpl
test
adc
mov
scas
mov
bound
icebp
mov
inc
or
mov
cmp
xorl
cwtl
pop
fcom
js
notb
mov
and
pop
add
orl
addr16
add
test
jecxz
jg
and
leave
insl
out
mov
add
push
pop
adc
bound
aas
das
arpl
cltd
xor
or
jne
fsubrs
and
mov
xor
out
cmp
pop
xchg
pop
outsb
jnp
iret
mov
movsl
fsubs
call
fidivrl
add
scas
test
sub
jecxz
rcrl
subb
xor
fcmovbe
lret
fstpl
push
mov
pusha
lods
adc
or
mov
xchg
add
add
and
mov
push
lret
cmpsb
push
mov
in
sbb
ficomps
les
jo
ds
pop
or
inc
cmpb
or
test
lods
or
loope
movsb
push
push
xchg
cltd
orb
add
pop
sbb
and
push
outsl
sbb
adc
push
mov
daa
add
pop
decb
popf
test
movsl
lods
lahf
int
js
xchg
inc
iret
jge
adc
add
sbb
mov
push
ja
dec
sbbb
in
mov
orb
xchg
or
pop
adcb
orl
pop
out
stmxcsr
out
jbe
push
or
jnp
loope
push
call
nop
add
pop
xchg
mov
jae
pop
mov
cltd
icebp
and
pop
sub
ret
sahf
xchg
ds
adc
jne
add
aad
cmp
cmp
sbb
xor
out
or
sbb
add
negb
sub
loope
inc
inc
add
pop
sbb
fldl
nop
mov
arpl
push
fsts
out
dec
shlb
test
or
mov
andb
adc
push
out
push
mov
mov
jne
jecxz
jo
xor
push
cmpsl
shll
cmpl
cmp
mov
jmp
mov
fnstsw
add
pop
lock
pop
pop
js
mulb
add
lock
sbb
loope
lahf
cmp
sub
wbinvd
fidivs
ret
push
jnp
cmpsb
sub
repnz
dec
jmp
pop
push
cmp
or
std
pop
daa
into
les
jne
cmp
jmp
repz
ror
ds
out
stos
leave
mov
add
cmc
jnp
pop
jp
add
adc
test
jmp
add
js
fstpt
lods
xlat
imulb
enter
mov
orl
arpl
rcrl
pop
dec
lahf
xor
mov
js
add
loope
bound
push
je
jmp
push
mov
add
push
and
sahf
push
or
scas
xchg
adc
fcompl
popl
sub
mov
push
jecxz
pop
ret
xchg
mov
stos
and
dec
clc
xchg
pop
jg
pop
dec
sub
push
int
push
or
xchg
push
mov
or
outsb
rcrl
inc
es
sub
das
stos
mov
je
and
sub
into
loope
jb
cli
sbb
ljmp
sbb
sbb
popf
xor
xor
loope
add
xor
lods
je
addb
sbb
cmp
loop
jp
adc
push
sub
pusha
push
mov
inc
mov
out
cmc
mov
dec
out
in
sbb
cmc
repz
loop
adc
rolb
cmp
and
clc
jle
scas
fidivrl
test
mov
pop
mov
mov
or
sbb
jbe
lods
xor
pop
int
sbb
fs
ret
insl
mov
mov
testl
shr
dec
xor
lcall
sub
cmpsb
or
cmp
shll
aas
add
push
xor
lret
sub
push
data16
pop
adc
loope
hlt
imul
mov
icebp
lds
inc
sub
and
and
push
pop
inc
mov
inc
mov
sbb
xadd
pusha
xchg
lods
sbb
imul
xor
or
add
mov
xor
scas
mov
repz
jg
in
imul
lea
dec
jmp
cmp
push
orb
sub
les
and
xor
dec
pop
pop
fdivrl
dec
sbb
cmp
test
mov
push
rorb
scas
lods
imul
mov
mov
add
rorb
xor
nop
cmp
clc
xchg
repnz
lods
xchg
sbb
pop
adc
jle
lds
sbb
jle,pn
movsb
adc
stos
vmwrite
add
shlb
inc
and
push
cmp
adc
lods
xor
cmp
leave
push
loope
testl
iret
mov
pop
push
cmp
add
dec
sub
and
jg
pop
jne
icebp
adc
or
ss
add
mov
jne
mov
inc
xchg
clc
or
cmpl
push
sbb
pop
pop
enter
aas
cmc
xorl
les
cmp
rcrb
or
pop
dec
mov
cmp
jecxz
dec
fidivs
xchg
out
cwtl
rolb
and
cmp
mov
js
sbb
and
push
dec
xchg
divl
fistpll
mov
xor
xchg
add
cltd
aam
adcl
or
js
sbb
bound
add
and
sub
int
jbe
js
pop
add
clc
out
aaa
xchg
ficoms
imul
addr16
jle
mov
fidivl
xchg
scas
scas
les
pop
add
mov
aaa
xchg
jbe
xorb
movsb
shlb
xor
out
adc
and
pushf
cmp
jecxz
fildl
xchg
lahf
testl
test
call
inc
pushf
and
adc
stc
cmpl
dec
sbb
jns
mov
pop
mov
test
push
push
cs
test
cmp
cmp
sub
addr16
lret
movsb
popf
sub
jnp
test
outsb
jp
inc
outsl
lds
lahf
and
ret
mov
fadds
jne
lret
or
mov
jl
mull
mov
push
daa
int3
cmpb
pop
loop
sub
fimuls
das
icebp
adc
jo
scas
add
rep
repnz
data16
ret
mov
xchg
dec
pop
ret
aas
test
mov
ret
loopne
fwait
sub
enter
adc
lock
fwait
hlt
or
push
jb
and
jbe
test
cmp
pop
xchg
inc
les
movsb
fwait
stos
mov
div
es
mov
or
aad
cmp
or
nop
lock
sub
daa
mov
shlb
jae
pop
xchg
push
xchg
push
lods
aad
and
jecxz
jo
and
repz
jns
jecxz
jg
mov
pop
jnp
aam
xor
jbe
push
mov
rorl
leave
cli
stos
mov
pop
pusha
sti
mov
ret
out
mov
sub
mov
mov
sti
rclb
xchg
js
jmp
repz
xchg
test
cmp
and
pusha
mov
out
icebp
mov
pushw
aaa
out
or
fistps
loope
iret
xor
add
mov
and
popa
xor
adc
sahf
or
add
jns
or
popf
test
imull
lea
mov
xor
pop
fisubl
sbb
addl
in
xchg
imulb
add
aaa
inc
test
adc
scas
and
ja
out
lods
fldt
rol
addl
and
mov
sub
outsb
and
je
insb
call
test
and
jge
mov
mov
jge
add
pop
mov
xor
arpl
sub
rolb
and
adc
xor
iret
xorl
or
sub
mov
lret
jle
outsl
gs
jmp
rolb
adc
cmc
out
adc
xchg
das
loop
lock
dec
add
jnp
test
loopne
int3
mov
test
shrl
shlb
and
add
adc
imul
adc
xchg
add
test
sub
call
xor
xchg
mov
mov
jmp
jmp
ror
xor
and
fwait
xorl
addr16
push
arpl
jp
jl
mov
fistps
mov
fidivrl
or
ret
gs
stos
pop
arpl
cmp
xchg
mov
out
shlb
test
les
test
iret
xor
or
lret
push
sbb
sahf
push
test
or
xchg
adc
fcmovnbe
ret
push
movsl
mov
xchg
mov
push
js
pop
jl
aam
or
xchg
add
xchg
popa
movsb
pop
shll
movsb
mov
mov
mov
add
adc
inc
or
pop
or
jno
add
test
jno
or
fdivrs
cmp
scas
iret
jge
mov
gs
pop
clc
add
stos
add
mov
adc
push
addl
or
aas
push
xor
stos
or
pop
mov
pop
jmp
inc
dec
addl
mov
xor
jae
inc
xchg
jo
and
xchg
pop
lods
add
or
xlat
sub
and
std
xor
daa
popa
add
and
test
arpl
fwait
cmp
mov
shll
fs
and
roll
xor
sbbb
rolb
imul
ret
fwait
sbb
mov
add
loopne
xor
mov
lock
xor
adc
daa
add
icebp
inc
bnd
divb
mov
popf
mov
icebp
imul
jmp
inc
dec
push
push
mov
push
sahf
sub
dec
sbb
and
sub
inc
jecxz
xchg
addb
ja
fdivl
fmulp
cmp
cmc
js
insl
xor
jne
jge
add
fiadds
xor
ret
pop
mov
test
adc
add
xchg
dec
leave
mov
push
rolb
pop
imul
sub
mov
out
sub
xor
adc
and
sbb
and
pusha
push
xchg
sub
mov
cmp
loope
test
xchg
mov
or
pop
jo
jae
jge
mov
inc
cmc
cmp
in
mov
ret
and
add
pop
jbe
in
mov
xchg
rcl
pop
jmp
cmc
jae
add
sbb
xor
add
mov
jnp
hlt
inc
movsl
push
xchg
sbbl
mov
dec
sbb
xor
fwait
stc
out
add
andl
in
movsl
fidivs
mov
xchg
cmpb
mov
sbb
cmp
shlb
mov
mov
test
pop
mov
inc
bound
adc
pop
or
sub
adc
inc
leave
cwtl
lods
push
icebp
pushl
dec
addps
or
mov
mov
pop
or
mov
pop
add
daa
adc
cmp
sub
mov
add
les
in
pushf
mov
adc
out
in
inc
sub
fnstcw
gs
mov
push
adc
add
add
repnz
or
push
lahf
lret
add
dec
sbb
jecxz
mov
adc
mov
and
int
and
mov
cmc
cli
mov
jp
arpl
add
xor
add
push
mov
inc
sub
in
sub
les
ds
loopne
sub
in
cmp
or
iret
or
xchg
repnz
orl
movsb
cmp
inc
pop
cmp
xlat
fcmove
fdivr
cmp
fdivrs
pushf
lock
aaa
outsb
add
adc
cmpsb
pop
aam
or
dec
mov
js
mov
push
sbb
dec
pusha
lea
push
cmpsb
les
cmc
inc
insb
jno
and
cwtl
xor
xor
sbb
dec
jo
icebp
or
push
ret
jnp
popa
jge
xor
and
cmc
xlat
cmp
stos
test
adc
pop
lods
mov
cmp
iret
mov
es
adc
nop
imul
dec
shl
sub
jb
push
push
push
add
sub
lock
cwtl
pop
adc
lahf
cmp
rolb
call
or
xlat
daa
push
xchg
lret
mov
push
xchg
mov
inc
dec
mov
xchg
mov
mov
ret
and
out
lods
push
in
add
es
orl
pushf
sub
xchg
je
xchg
shrb
push
imul
pop
fmuls
stos
fiadds
scas
and
dec
sarb
out
and
push
sbb
loopne
test
or
js
dec
dec
jbe
fwait
add
add
movsb
out
into
movsb
xor
xchg
sub
sub
cli
rclb
fsubrs
cmp
jle
in
dec
ljmp
movsb
pop
push
mov
cmp
enter
das
fbld
push
pop
add
pop
pushf
into
jg
or
cmpb
int
daa
repz
or
push
xor
cli
cmp
sar
dec
push
les
dec
sbb
pop
pop
xchg
add
xchg
pop
jmp
jae
xchg
outsb
sbb
imul
push
mov
mov
je
iret
dec
xchg
or
iret
aas
cmpl
dec
jle
out
push
imul
xchg
mov
mov
ss
xchg
pop
pop
sub
xchg
jno
jae
or
fidivrs
data16
fcomps
push
insl
push
push
outsb
mov
xchg
test
inc
bswap
stos
out
pop
adc
mov
mov
gs
test
ss
dec
negl
test
mov
aas
inc
inc
cmp
or
xor
jno
pop
add
cltd
xor
dec
stc
cli
adc
cld
lret
repz
push
test
push
popa
mov
jmp
popa
or
aas
fistps
addr16
daa
cmp
rolb
or
push
cmpb
dec
sti
sub
or
imull
dec
movsb
insb
dec
aaa
mov
cmp
jmp
adc
movsb
je
pop
stos
inc
jnp
fbstp
aad
xchg
popf
dec
lcall
iret
fisttpl
xchg
inc
xchg
pop
push
or
push
lock
popf
shlb
das
movsl
rcrb
aam
les
add
popf
mov
enter
pop
aad
lock
xchg
push
push
rolb
or
cmp
mov
movsb
sub
stc
add
jmp
ret
sbb
mov
or
in
insb
cld
mov
loope
add
sub
pop
dec
mov
xchg
lds
pop
addb
xor
and
test
or
lahf
add
xor
inc
push
or
test
ret
push
pop
push
lret
in
adc
shl
mov
add
push
pop
add
stos
and
test
cld
sti
les
sbb
andl
add
arpl
sub
add
inc
jb
movsl
je
xchg
sbb
pop
pop
fs
fwait
in
add
xor
sub
loop
out
push
scas
ret
imul
js
test
jl
es
dec
shr
in
test
jne
pop
and
adc
push
push
pop
aam
push
sbb
add
dec
das
and
je
std
xchg
iret
adc
cmp
loope
int3
std
cs
iret
es
lcall
mov
loopne
sbb
outsl
or
jmp
push
es
jecxz
clc
xchg
shrb
dec
and
sbb
push
dec
xchg
outsb
sub
out
sub
sub
ljmp
scas
add
push
add
inc
pop
push
decb
ja
push
lods
sub
mov
ja
inc
add
arpl
dec
scas
or
mov
xor
cs
mov
test
xchg
push
push
leave
ljmp
ret
pop
mov
or
and
cld
add
xchg
mov
imul
andb
iret
rclb
cmpsb
adc
dec
fidivs
cltd
inc
sbb
sbbb
or
out
push
imul
or
pop
jb
pop
fildll
das
mov
pusha
and
mov
lea
adc
push
pop
iret
fwait
movsb
mov
jl
xchg
ljmp
sbb
lock
and
mov
add
ror
call
shll
pop
jle
gs
add
sub
arpl
sbb
ror
push
sarb
lods
xor
mov
or
dec
lock
test
dec
and
sbb
pushf
add
add
mov
es
pop
sarl
dec
daa
or
pop
jmp
add
pusha
pop
sub
jb
inc
mov
cmp
lock
sbb
adc
push
and
xorb
and
or
mov
sub
push
add
aas
lret
lods
and
sahf
mov
adc
push
pushf
ret
mov
xor
rdtsc
sub
mov
cltd
lahf
add
sbb
sbb
test
sub
stos
ret
addl
dec
imul
shrb
fs
es
ret
jl
and
jo
jp
pop
adc
fldcw
test
mov
jecxz
aam
inc
aam
call
push
in
xor
bound
dec
push
mov
mov
in
xor
cmp
inc
ja
jecxz
mov
add
dec
sbb
mov
fcmovbe
cmp
mov
dec
jb
cmp
rolb
inc
mov
dec
sbb
mov
dec
adc
dec
aaa
insl
jl
cwtl
dec
cli
cmpsb
clc
shlb
xor
leave
sahf
ljmp
push
mov
or
cmp
cwtl
or
sbb
mov
pop
jle
outsb
pop
and
lods
orl
inc
test
iret
pop
push
or
cmpb
adc
cmp
test
hlt
sub
xchg
ja
xchg
adc
pop
or
je
or
xor
sahf
mov
push
movsb
sub
push
or
jne
sbbb
mov
imul
mov
lods
inc
jmp
inc
es
mov
sti
mov
mov
add
std
imul
das
mov
loope
scas
cmp
mov
lds
xor
movsl
dec
pop
jnp
loopne
add
aas
add
ret
sub
fs
negb
aaa
dec
pop
jle
inc
mov
popf
jne
movsl
arpl
sbb
pop
pop
cmpb
pop
scas
addb
cmp
loopne
cmp
adc
pop
sub
ja
or
sbb
je
jecxz
ss
lahf
test
push
cmc
xchg
js
push
jge
add
add
adc
je
out
dec
jbe
sbb
inc
cmp
divl
ja
add
cmp
das
fsts
lock
je
mov
adc
pop
sbb
sbb
sgdtl
fsubs
shlb
ja
push
mov
repnz
cwtl
inc
adc
and
ja
sbb
mov
fiaddl
iret
cmp
aaa
lret
fwait
loope
jle
in
dec
arpl
or
jmp
add
inc
jae
lret
frstor
sub
and
dec
lret
pop
test
pop
addl
loop
xor
sbb
push
sti
and
mov
xchg
push
lods
loopne
movsb
in
lcall
inc
dec
jecxz
cwtl
pop
mov
cmp
lahf
sbb
cmp
andl
repz
jle
or
xor
push
add
mov
mov
and
idiv
inc
inc
loop
fadds
push
das
pop
test
dec
jp
push
inc
stc
shll
shll
jge
mov
adc
pop
lea
jo
popf
adc
shlb
clc
xor
xor
or
inc
pop
dec
jp
inc
aas
sub
push
mov
inc
bound
pop
inc
enter
xor
hlt
cs
inc
stos
rcrl
lods
adc
push
jo
push
mov
push
ret
add
loop
adc
jne
loopne
mov
add
add
xchg
hlt
push
daa
or
xor
mov
aad
inc
imul
xchg
add
pop
subl
stos
pop
mov
ret
scas
add
xchg
fsubs
dec
scas
sbbl
pop
dec
mov
jge
jp
jno
jp
loope
inc
dec
adc
test
jmp
mov
pop
flds
pop
sbb
adc
mov
adc
xor
dec
cli
add
and
iret
xchg
mov
cmp
inc
or
or
jns
mov
xor
dec
jbe
push
mov
inc
scas
jbe
nop
mov
and
dec
push
mov
or
push
test
pop
aas
and
xchg
lea
or
push
dec
dec
add
movsb
jp
into
das
pop
loop
int
and
insl
scas
imul
add
insl
pop
imul
cwtl
cld
or
sub
gs
jae
xchg
mov
xor
out
and
jle
add
arpl
push
shrb
loopne
jno
inc
out
orb
add
push
dec
add
rolb
lret
push
pusha
pop
popf
int3
inc
rorb
jo
js
loopne
outsb
mov
xor
popa
xchg
lock
push
sbb
stos
jo
rolb
sub
adc
jnp
fcoml
cmpsb
dec
iret
icebp
add
pop
ja
negb
xchg
aad
xchg
xchg
mov
or
cmc
cmp
mov
pop
ret
mov
popf
sub
xchg
dec
inc
adc
mov
xor
loop
push
inc
mov
mov
out
nop
ret
xorl
add
je
or
addr16
mov
insl
testb
pop
pop
bound
inc
push
sbb
xor
lahf
jp
movsl
aaa
xor
mov
xor
lcall
sbb
sti
scas
mov
and
pop
sbb
push
sbb
sub
mov
loopne
dec
sbb
dec
lods
movsb
mov
inc
insl
mov
fsubrp
pop
js
sub
mov
subb
mov
adc
mov
or
iret
dec
sbb
das
fsubrs
lods
sbb
mov
xlat
imul
push
dec
jbe
push
dec
mov
and
add
xor
sahf
add
movsl
ret
iret
je
or
jnp
hlt
xor
dec
ja
mov
icebp
xlat
adc
sub
adc
lock
pusha
mov
xor
imul
dec
dec
not
push
or
aad
jae
xchg
imul
jg
imul
mov
pop
inc
fiaddl
mov
loope
mov
fisubrl
imul
adc
ret
cmp
pop
cs
iret
jmp
adc
mov
cmp
inc
push
add
sti
aad
hlt
movsl
lds
mov
adc
iret
xor
aas
mov
outsb
mov
insb
or
jae
stos
jle
add
rorb
add
ja
push
add
rcrb
cmpsl
lea
xchg
cmp
or
mov
mov
or
mov
stc
xchg
fdivrs
aaa
or
dec
adc
inc
and
jg
adc
sbb
lock
jne
hlt
push
add
xchg
shrl
lds
test
cmp
and
enter
mov
jo
testl
pusha
lods
scas
mov
sar
inc
mov
rcl
mov
jmp
out
add
xor
lock
imul
in
iret
mov
cmpsb
and
pop
mov
xor
decb
scas
sbb
inc
add
or
cmp
add
adc
les
sub
ret
int
pop
clc
pop
mov
daa
cmc
nop
xor
test
fwait
sti
jb
shr
into
mov
push
xor
sbb
xchg
xor
mov
adc
mov
pusha
adc
add
cmp
in
xchg
xchg
xlat
mov
loopne
jo
sbb
out
cld
dec
xchg
adc
inc
mov
mul
mov
lret
lea
cmp
mov
in
loopne
rolb
jo
or
out
fcmovbe
pop
inc
jmp
insl
mov
mov
dec
and
pop
aam
adc
out
push
les
jle
je
sub
leave
inc
sbb
dec
shlb
xchg
subb
loope
xchg
add
push
xchg
dec
test
sbb
loope
adc
xchg
inc
jp
mov
iret
push
shrl
add
sub
push
sbb
push
loopne
push
push
push
rol
je
add
add
or
pushf
lods
aam
test
jbe
and
movsl
dec
fldl
adc
adc
push
cmp
je
sbb
add
sbb
or
mov
lea
sub
addb
fwait
mov
mov
and
sub
loope
dec
and
movsl
insb
mov
or
fmull
jae
int3
add
mov
dec
addr16
lahf
xor
lods
mov
push
or
and
ljmp
xchg
movsl
pop
pusha
mov
cli
sub
and
or
pop
cmp
fidivrl
xor
pop
pop
dec
inc
movsl
shlb
push
push
lods
push
mov
hlt
mov
les
prefetch
or
mov
dec
and
adc
cmpsl
fildll
sub
shlb
mov
nop
stc
stc
dec
pop
sbb
inc
xchg
jo
or
xchg
push
mov
lret
shrb
cmpsl
dec
or
inc
and
stos
jae
stos
pusha
or
jnp
imul
push
sub
cmp
xchg
bound
ret
dec
sub
sbb
mov
cltd
sub
push
mov
je
adc
sbb
gs
mov
push
lcall
dec
mov
push
outsb
pushf
adc
inc
or
pop
adc
or
mov
adc
sbb
dec
cmp
lret
daa
mov
frstor
ficompl
ja
mov
int3
inc
dec
imul
lds
or
lea
or
dec
sbb
jnp
sarb
cs
pop
into
nop
jnp
imul
and
fdivrs
inc
dec
mov
mov
add
movsb
adc
leave
mov
inc
add
jg
dec
clc
movb
lahf
xchg
mov
popw
pop
dec
sub
aad
cmp
add
add
cwtl
and
daa
xchg
sbb
add
jo
cmpsl
mov
jns
dec
repz
test
mov
aaa
js
scas
dec
loopne
sbb
dec
arpl
sbb
dec
pop
and
fisubrs
sarb
aam
pop
fidivs
pop
jo
je
jns
inc
loop
cmc
ret
daa
cmpsl
fcoml
cld
mov
mov
jmp
add
iret
mov
add
add
iret
mov
push
iret
jbe
popf
xor
int3
adc
cmp
icebp
cmpb
cmp
and
lods
push
xchg
inc
lret
es
mov
inc
fmuls
mov
mov
and
test
rep
rclb
jbe
ret
lods
and
xchg
xorl
xchg
and
aas
outsb
scas
rcrb
dec
add
popa
push
pop
js
pop
scas
sti
test
iret
adc
or
mov
mov
arpl
adc
push
adcb
pop
subb
or
xchg
xchg
sbb
pop
xchg
add
xor
movsb
mov
sbb
xor
sarl
add
xchg
dec
inc
cmc
mov
in
dec
add
icebp
ja
dec
sbb
nop
mov
movb
ficompl
movsl
imul
loopne
cmp
iret
mov
dec
gs
pop
fstpt
mov
add
xor
and
sbb
pop
push
movsb
inc
adc
jmp
push
mov
cmpsl
pop
add
cmpb
int3
and
ja
xor
iret
jne
cld
add
add
add
mov
push
test
and
arpl
pop
dec
push
xor
mov
daa
inc
out
das
jmp
xor
xchg
mov
icebp
cmp
add
or
int3
iret
sti
lret
add
jo
js
pusha
dec
loop
adc
rclb
cmp
mov
fnsave
stc
sbb
jno
fadds
dec
fstl
mull
dec
dec
mov
sbb
xchg
push
cmp
and
xor
mov
shlb
dec
add
popa
xchg
sub
in
scas
push
dec
pusha
pop
ss
dec
sbb
push
or
rorl
cltd
ficoms
pop
inc
int
mov
int3
xor
pop
mov
dec
scas
insl
iret
push
mov
arpl
notb
pop
push
xor
movsb
popl
xchg
pop
loopne
into
sbb
pop
les
arpl
mov
or
or
xchg
cmp
add
or
repnz
add
jg
loopne
xchg
dec
jmp
pop
in
add
jle
xor
lods
sub
cmp
pop
aas
andl
sub
dec
sub
or
arpl
popf
fiadds
xlat
xor
cmp
sbb
mov
mov
mov
mov
dec
xchg
add
add
je
pop
mov
inc
mov
jo
push
or
pop
add
loop
jle
pop
mov
add
dec
cmp
test
xor
add
pop
push
fdivrs
stc
sbb
push
insb
mov
and
pop
in
xor
xchg
mov
xor
addr16
outsb
pop
add
sti
les
loope
gs
pop
xchg
pop
inc
cmp
or
sbb
gs
xchg
push
xchg
loop
cmp
or
lock
jae
scas
sub
inc
adc
ret
les
jl
roll
dec
fadds
loopne
jp
ja
pop
jl
loopne
mov
scas
clc
and
and
mov
dec
inc
xor
sbb
cmpsb
andb
fnstenv
dec
sahf
in
int
nop
push
pop
adc
jge
jns
les
cmp
cwtd
sahf
test
adc
inc
jmp
scas
add
daa
xlat
ret
lret
xchg
and
sbb
xchg
sbb
lea
je
push
jp
and
push
paddsb
push
loop
xlat
jp
in
push
test
sbb
mov
repnz
outsl
pop
cmp
loopnew
shll
in
icebp
add
or
outsl
into
test
or
add
push
je
out
push
in
push
cwtl
cmp
mov
mov
xchg
in
lret
aas
lods
bound
cmp
sbb
fsubs
mov
mov
mov
insl
mov
dec
test
adc
loopne
leave
add
add
push
or
xor
xor
push
inc
sub
out
push
outsl
mov
loop
out
mov
divb
sbbb
xchg
add
adc
pop
push
fisttps
insl
movsl
lods
push
out
scas
add
scas
js
or
jno
insb
enter
mov
loope
fisubs
pop
add
jno
and
ja
adc
and
mov
loop
dec
and
cmp
bound
das
cs
lock
inc
lea
pop
nop
jne
scas
jo
es
lods
add
jl
out
sahf
add
add
je
cmovae
mov
stos
lret
jbe
rcrb
mov
loopne
mov
es
das
xchg
ja
pop
xchg
add
arpl
dec
stos
and
loope
lcall
sbb
jno
sbb
js
mov
loop
imul
ja
pop
add
sbb
movsb
xor
movsb
mov
jecxz
push
daa
sti
mov
leave
ret
sbb
add
testl
lods
jnp
ret
addr16
or
xchg
cs
push
sbb
sbb
or
mov
add
xchg
imulb
and
mov
or
cmc
insb
sub
xor
ret
enter
idivl
popa
movl
cmp
lahf
xor
loopne
je
in
add
fsts
das
add
rol
add
adc
push
imul
lods
or
shlb
pop
fwait
cmp
pop
int
cmp
lret
push
loope
cli
iret
or
notl
lret
repz
rorb
cmpsl
iret
rcrb
ja
pop
sbb
pop
leave
adcl
sbb
ret
stc
mov
dec
lret
push
push
mov
xorl
addb
xor
mov
cltd
fxam
xor
add
sahf
iret
mov
shl
call
daa
lahf
xchg
or
and
add
insl
add
ror
insl
adc
stc
outsb
add
dec
iret
pop
movsl
es
jp
and
pusha
lock
movsl
sbb
or
out
pop
scas
ds
push
mov
push
mov
add
and
xor
or
and
add
repnz
ss
pextrw
jae
clc
ds
sub
push
sub
mov
lock
test
lahf
xor
push
leave
clc
insb
cld
sbb
adc
mov
movsl
movsb
daa
fimull
push
push
adc
test
dec
mov
movl
adc
mov
xchg
inc
pop
xor
mov
add
or
cmpb
xchg
mov
mov
push
sbb
push
aas
sahf
cmp
iret
mov
and
notb
sub
add
enter
jb
adc
ret
or
mov
and
roll
jmp
fld
xor
iret
push
adc
adc
push
lret
and
dec
inc
rclb
sahf
test
cmp
imul
cwtl
xor
pushl
clc
shr
iret
cmc
and
jns
mov
mov
inc
dec
mov
rorl
addl
or
pop
shrb
xchg
xchg
scas
fcomps
pop
rolb
std
je
cmpl
pop
push
shrl
call
sti
lock
add
jne
push
inc
or
xchg
xchg
push
ret
dec
xor
and
pop
add
lods
sbb
cltd
inc
inc
sbb
in
cmpsb
jo
rolb
add
jb
int
cmp
out
add
int3
push
test
jo
movsb
jne
sub
ret
lods
aad
mov
movsl
sbb
sbb
loope
jecxz
mov
adc
pop
lret
shrb
cmpsl
sarl
sbb
push
movsl
loopne
jmp
add
sub
outsl
jne
jecxz
jl
pop
jbe
fidivrl
mov
xchg
mov
stos
aam
mov
hlt
cld
pop
and
insl
and
lea
orl
pop
add
xor
ja
insb
adc
pop
cmpsl
pop
out
push
sub
movb
add
jp
push
outsl
daa
repz
pop
jmp
cltd
pop
or
push
or
inc
dec
fsubrs
jae
sbb
mov
dec
and
or
or
cmp
pop
lock
mov
pop
xchg
push
in
in
pop
ds
mov
leave
or
pop
ret
inc
pop
jmp
imul
cmp
lds
jae
pop
inc
jne
sar
dec
jo
aaa
iret
adc
hlt
loope
add
xor
adc
dec
js
pop
mov
cwtl
pop
loopne
jl
pop
pop
loopne
jbe
jmp
ds
sub
movsl
out
into
and
loop
rclb
shrb
xchg
dec
fs
xchg
repnz
cmp
adc
mov
cld
or
pop
in
sub
loop
mov
add
mov
loopne
cmp
dec
mov
dec
scas
push
movsl
ss
je
arpl
lahf
sub
dec
inc
and
xorb
push
push
mov
or
sahf
cs
inc
pop
imull
enter
jae
lret
sub
adc
and
adcl
cli
xchg
js
push
hlt
icebp
loopne
pusha
push
pop
es
aam
inc
pop
cltd
js
add
push
shl
sbb
sbbl
cmp
push
sbb
adc
into
insb
push
mov
les
xchg
or
lea
adc
cmp
ss
iret
insb
push
mov
xor
aas
test
jecxz
sub
dec
pop
cld
xchg
enter
inc
xchg
push
enter
inc
adc
jne
iret
pop
enter
loope
testb
fwait
adc
in
xor
xlat
and
xchg
cmp
rorl
mov
out
inc
add
mov
jne
and
ljmp
mov
push
pop
push
js
dec
das
pop
sbb
sbb
ja
xchg
js
ds
ds
and
aam
xchg
add
adc
sub
ss
imul
icebp
push
jb
ret
and
lcall
adc
add
fistpll
les
ja
xchg
mov
sbb
pop
iret
arpl
push
pop
and
icebp
mov
xor
mov
dec
or
dec
lahf
popf
push
orb
cld
out
pop
inc
ja
test
or
add
mov
jg
push
movsb
popf
imul
xor
mov
loop
and
iret
dec
enter
fisubs
les
ret
loope
xor
into
mov
aam
inc
mov
or
clc
push
jecxz
adc
ret
outsb
sbb
or
jle
inc
and
loop
loop
arpl
add
mov
push
mov
pushf
jb
cltd
fs
arpl
mov
jp
scas
cmp
out
xor
or
addl
pop
imul
repz
fidivs
adc
fiadds
push
jmp
add
mov
repz
fabs
add
mov
jp
mov
sbb
pop
aas
int
adc
and
add
outsb
daa
adc
sbb
and
or
sub
sub
inc
bound
ret
iret
mov
idivb
cmpsl
push
lret
push
and
adc
pusha
mov
xchg
and
imul
aad
sbbl
dec
loope
adc
cmp
push
and
test
push
xchg
pop
adcl
xor
xchg
lods
and
and
sub
fisttpll
test
push
clc
lcall
pusha
add
and
dec
or
push
jl
test
out
arpl
mov
in
sub
mov
pop
xchg
xor
pop
fadd
rcrl
lods
inc
inc
and
ja
ja
xchg
sti
idivl
shrb
add
pop
and
je
out
in
and
loopne
fbld
int3
mov
and
subb
sbbb
data16
jp
or
jo
fdiv
cmpsl
and
jg
push
fstpt
je
jo
adc
sub
ss
jg
push
addr16
sbbb
sarb
mov
into
mov
adc
xchg
xchg
iret
sbb
add
mov
daa
mov
xor
and
sub
pushf
cmp
das
stos
push
xorl
and
xor
loopne
pop
jmp
mov
icebp
dec
jg
insb
insl
add
cmp
dec
inc
sbb
adc
cmp
dec
loope
pop
sub
xchg
add
add
dec
sbb
pop
hlt
dec
xchg
clc
dec
mov
xchg
popf
rclb
adc
sbb
jl
add
mov
sbb
mov
xor
popa
push
lahf
or
lods
xchg
mov
popa
dec
xchg
pusha
insb
std
lods
push
loopne
inc
outsl
jle
dec
adcb
ret
fcoms
scas
sbb
mov
push
dec
bound
cmp
bswap
mov
out
pop
cmp
add
mov
fmuls
mov
ret
addl
mov
add
or
or
inc
pusha
jl
jge
add
fptan
pop
mov
testl
lret
push
dec
outsb
xchg
popa
pop
xchg
push
xchg
insb
jp
adc
movsl
mov
mov
push
adcb
mov
aam
adc
pop
mov
sti
cltd
dec
cmpsl
imul
aas
cwtl
mov
ss
sub
imul
cs
mov
movsb
inc
nop
inc
lds
lods
movl
mov
xor
roll
fadds
add
or
popa
mov
mov
add
push
fs
mov
dec
add
jae
bound
push
sub
int
mov
aam
push
sbb
sbb
std
dec
jmp
push
sti
scas
imul
or
adc
jns
in
outsb
add
fimuls
fwait
lahf
xchg
or
add
js
repz
adc
mov
setl
push
mov
lock
push
cmp
fisubrl
out
ja
addl
lcall
inc
add
hlt
notb
lds
popa
dec
fs
mov
xor
inc
das
loope
sub
bound
add
add
jo
addl
push
xor
pop
adc
cs
out
fnstsw
into
cmp
in
sbb
pop
data16
mov
jo
mov
push
repnz
jl
mov
sbb
iret
mov
push
leave
sbb
std
jp
sub
test
xor
insl
and
xor
lret
jge
pop
movsb
xchg
push
hlt
aad
roll
mov
push
shl
adcb
pop
xor
sub
insb
mov
and
add
xchg
add
imul
mov
roll
ret
bound
inc
pop
pusha
push
mov
loop
sbb
xchg
out
adc
add
out
cmp
add
or
cltd
push
cld
sbb
mov
inc
iret
sub
xchg
xor
es
mov
add
sbb
jmp
sub
adc
arpl
xor
mov
mov
mov
sbb
mov
sbb
js
push
fwait
push
cmp
aam
mov
addl
fsubr
test
push
cmp
vphsubdq
inc
loope
and
jg
push
cld
test
xor
push
iret
push
aam
fwait
push
xchg
xchg
loope
arpl
les
sub
cmp
pop
fldcw
adc
scas
adc
inc
jne
adc
sub
mov
mov
test
pop
roll
sbb
or
test
mov
jge
pop
ljmp
movsb
jo
leave
sbb
jno
addl
stos
lock
ja
xchg
lods
lahf
mov
lcall
and
fcompl
mov
stc
daa
cvtpi2ps
rcpps
sub
fxch
rolb
clc
xchg
adc
fadd
and
mov
inc
inc
sbb
sbb
sub
lret
adc
push
lock
js
push
cmpsb
sbb
pmulhw
lret
lret
lret
and
dec
sub
arpl
fsubrs
popa
xor
jp
jg
xchg
inc
outsl
sar
mov
mov
stc
and
xchg
mov
push
push
lock
cmp
scas
mov
cmp
jl
ljmp
int
add
sub
dec
mov
or
sbb
xchg
adc
int3
push
jp
pop
fs
mov
xor
outsb
mov
aam
loopne,pt
or
ja
sub
loop
out
das
jmp
inc
sbb
or
mov
jno
sbb
cmp
mov
shr
add
pusha
bound
xchg
add
add
push
pop
dec
mov
jns
cmp
jl
sbb
push
or
icebp
iret
and
dec
push
rolb
push
cmp
dec
dec
daa
mov
xlat
sarl
rcr
fimull
xchg
push
subl
add
dec
sbb
push
mov
lcall
and
jbe
cmc
or
lods
or
mov
insl
inc
test
ja
sbb
push
xor
imul
lods
add
movsl
xchg
scas
pop
jmp
jp
mov
cmp
jl
fldt
lds
cmpsb
lcall
jbe
shll
mov
divb
lods
jns
push
sbb
enter
leave
scas
sub
enter
es
ret
icebp
sbbb
popf
xchg
dec
lds
cmpsb
ret
push
xor
shlb
lods
aaa
jo
shl
inc
rclb
leave
lret
les
inc
shl
ss
inc
cmp
andb
aad
mov
ss
inc
dec
dec
xor
pop
or
push
into
pop
or
pusha
data16
sahf
mov
jae
mov
pop
dec
aas
push
xchg
inc
dec
xchg
and
sbb
ja
dec
or
pop
dec
add
imul
push
dec
int3
adc
shrb
ja
les
adc
test
fidivs
arpl
faddl
xlat
outsl
inc
bound
pusha
popa
addr16
lea
or
mov
and
xchg
lock
jo
nop
lcall
imul
cmp
push
mov
inc
sub
cmpsl
lea
and
sub
jmp
xor
add
pop
cltd
add
mov
das
lds
mov
sub
mov
and
pop
inc
or
pop
pop
mov
lea
jp
sub
mov
or
enter
ret
pop
inc
push
loopne
call
jp
add
add
icebp
loope
in
pop
rorl
mov
fdivs
adc
push
pop
pop
add
stc
jge
mov
push
mov
sub
and
inc
leave
adcb
out
and
cmpb
inc
lds
xor
inc
pop
or
xorb
xlat
pextrw
das
dec
adc
add
inc
dec
gs
jp
shlb
ror
pop
or
xchg
jo
xor
pop
add
in
adc
or
ret
xchg
addr16
inc
inc
outsl
xor
and
pop
cmc
adc
push
in
scas
loope
add
imul
push
push
xchg
gs
or
push
mov
lea
and
xchg
sbb
lret
scas
push
push
jge
insl
and
rorl
je
xor
ror
lcall
ficoms
out
ss
fcomp
mov
push
adc
scas
loop
push
xchg
rcr
xor
pop
jno
jo
filds
sbb
es
int3
xor
adc
sti
mov
in
dec
pop
jle
cmpl
in
cmpb
cmp
or
mov
outsl
add
mov
andl
sbb
or
addb
mov
add
jo
fdiv
cmc
jae
cmc
inc
add
mov
in
add
iret
loop
and
outsb
and
xchg
js
shl
in
jge
sbb
leave
aaa
xchg
ljmp
pop
mov
movsl
or
and
or
out
lock
fisttps
dec
sub
dec
sahf
daa
pop
sbb
mov
mov
cmc
cltd
mov
push
dec
and
jmp
add
mov
dec
or
xchg
pop
fucom
xor
fs
sbb
jecxz
jecxz
and
jns
sbb
ret
mov
push
push
std
cs
movsl
xchg
push
movsl
jmp
sbb
jg
pushf
add
cli
or
lods
loopne
or
out
inc
int
adc
in
aaa
cmpsl
and
rorb
lock
inc
mov
iret
std
dec
adcl
add
lock
cmpsb
and
int
les
scas
sub
or
push
xor
in
xor
daa
inc
pop
fsubrl
cmp
aas
mov
outsb
push
enter
and
mov
stos
shl
test
or
xor
imul
pushf
cld
push
addr16
xchg
lods
cmpsb
pop
in
aam
xlat
and
shrl
jge
mov
shll
addl
push
sub
add
cltd
sub
mov
aam
js
mov
sbb
inc
jge
sbb
or
into
hlt
add
inc
jnp
xor
es
xor
mov
scas
mov
push
push
pushf
or
inc
bound
imul
shrb
insl
and
dec
push
mov
js
subl
mov
or
push
push
sahf
les
cmp
icebp
shlb
jno
das
cmp
js
cs
jnp
push
ret
int3
aam
sub
cli
push
mov
pop
out
and
movb
xchg
fnstenv
nopl
lods
xor
or
outsl
or
notl
lods
add
jns
push
fildl
cmp
lock
rolb
mov
imul
fcmovbe
add
subl
xchg
jne
xchg
xchg
or
add
or
addl
dec
push
or
js
ret
roll
js
and
jp
add
aad
jns
fsubrl
add
or
xor
jb
test
push
dec
sbb
jp
mov
push
jl
add
aaa
int3
shrb
jo
xchg
add
jnp
leave
out
pusha
or
dec
add
push
lret
imul
sbb
push
jmp
and
callw
fdivrl
mov
aam
repz
adc
in
repnz
mov
pop
sbb
sarb
mov
push
in
js
push
adc
add
mov
or
sub
xchg
andl
lods
rolb
pop
in
lcall
scas
and
add
mov
cmpl
fnstsw
push
pop
enter
or
dec
or
push
push
scas
add
repnz
fsubrs
inc
xchg
sbb
mov
mov
fists
or
fisttpll
add
andb
or
push
jge
jnp
enter
and
and
ja,pt
add
adc
cmpl
lock
jnp
cmp
jnp
or
or
pop
mov
push
ja
push
or
sbb
and
fsubrl
aaa
or
add
inc
and
sub
lods
std
insl
andb
aaa
dec
data16
test
mov
pop
pop
add
je
aad
ds
dec
or
adc
imul
dec
das
mov
popa
je
mov
sub
mov
mov
mov
cmp
stc
jo
or
push
dec
ss
cmp
fsubs
xchg
xchg
stos
push
or
mov
js
repz
insl
mov
adc
mov
lea
stc
adc
adc
mov
inc
xchg
std
jle
je
adc
pushf
mov
mov
xchg
outsb
push
das
into
xchg
add
or
jne
cmp
loopne
lods
daa
dec
das
pusha
fstp
iret
subb
adc
add
loope
adc
mov
mov
aas
mov
add
inc
movsl
sub
cwtl
push
fwait
test
movsb
cmp
pop
daa
in
push
insb
lret
test
and
dec
lret
push
mov
pop
adc
xchg
dec
pop
mov
movsl
pop
or
repz
and
pop
ficoml
mov
adc
rcrl
jmp
or
fisubrs
and
ficoml
and
mov
pop
test
test
adc
rolb
hlt
lock
addb
and
icebp
sub
faddl
dec
cmp
fdivrs
imul
mov
cmpsl
xor
push
shl
and
shll
dec
call
flds
push
mov
int3
rclb
mov
or
inc
ret
mov
xor
int3
xchg
jg
js
lock
cmp
adc
or
fmull
mov
fcomps
xor
mov
add
sahf
mov
fbld
xchg
mov
mov
insl
dec
xorl
iret
dec
mov
loopne
test
sub
into
cmp
mov
mov
push
ja
lock
hlt
aas
pop
push
daa
push
pop
enter
cmp
push
loop
and
pop
sbbb
scas
mov
sub
jne
mov
int
jbe
inc
xor
add
pop
shlb
jae
leave
outsb
dec
mov
lock
jp
inc
xchg
inc
dec
push
addr16
push
pop
jge
sarl
outsl
iret
stos
bswap
push
xchg
sbb
rorb
cmpsl
cmp
aaa
outsb
inc
out
cmp
mov
or
jge
jns
int
pop
mov
shlb
mov
or
pop
mov
pop
mov
add
movntps
or
push
notl
rcr
add
cmp
loopne
pop
lock
push
mov
rorb
ret
dec
sti
sbb
xchg
xchg
mov
or
hlt
sahf
inc
scas
mov
jbe
inc
add
jmp
adc
inc
adc
outsl
scas
sbb
loope
sub
add
mov
jb
lret
or
repnz
add
mov
inc
in
sbb
push
test
loope
or
test
lods
iret
fstps
arpl
loope
or
inc
filds
push
movsb
inc
nop
mov
mov
nop
sarl
call
mov
sbb
out
scas
jnp
loop
xlat
mov
das
aad
xor
adc
or
add
push
push
sub
fcmovnbe
jo
adc
and
xchg
daa
dec
mov
rol
sub
mov
mov
pop
gs
jne
incl
xchg
pusha
insb
outsl
sbb
incb
mov
add
add
xor
hlt
push
adc
dec
cmpsl
cmpb
outsb
stos
iret
dec
jo
pop
loopw
mov
inc
lcall
lods
scas
in
sub
data16
push
push
fxch
or
add
xchg
dec
xchg
loopne
add
dec
stos
xor
mov
xor
jecxz
cmpsb
cmp
hlt
push
iret
push
dec
sahf
or
and
fcoms
out
inc
cltd
popf
adc
adc
xor
or
mov
mov
test
inc
sub
jne
adc
push
addr16
or
pop
cltd
pop
imul
cmc
test
jo
or
int
jno
push
stc
js
bound
xor
test
add
sub
insl
call
in
ret
add
xchg
xchg
pusha
pop
jns
inc
pop
movsb
cltd
push
repnz
add
push
adcb
cmpsl
jae
sub
rolb
dec
rcr
adc
or
divl
push
stc
bnd
ljmp
das
xchg
fisttpll
dec
das
pop
jbe
jg
pop
sti
cmp
loop
xchg
call
xor
jb
xor
mov
sar
loopne
xorb
std
mov
inc
adc
add
jge
loope
adc
pop
mov
addb
mov
push
dec
cmp
aad
pusha
add
cltd
push
lret
add
test
dec
or
inc
dec
xor
or
daa
lods
sub
push
out
lock
cwtl
add
popa
and
or
clc
js
jle
inc
aaa
xor
stos
add
or
test
inc
add
push
mov
xchg
add
pop
bound
pushf
push
dec
push
mov
mov
mov
test
cmp
ss
stos
lcall
dec
sarb
pusha
inc
test
repnz
sarl
scas
int3
xchg
popa
adc
mov
adcl
sbb
movsb
andb
sbb
test
push
jno
push
add
add
inc
mov
aaa
test
sbb
cltd
lods
rolb
adc
cmp
aad
jecxz
xchg
inc
jae
neg
xchg
add
pushf
add
in
add
cmp
ss
imul
or
nop
sub
iret
aas
jnp
xchg
and
ljmp
xchg
xor
daa
sub
add
xor
in
packsswb
lret
dec
sub
fcomps
iret
icebp
insl
sbb
movsl
ja
xor
les
jecxz
jmp
push
fldcw
inc
sbb
mov
sbb
call
cmp
mov
and
out
adc
arpl
inc
int
mov
push
cmp
xchg
rolb
pop
in
cmp
cmp
jge
push
adc
mov
lds
push
or
inc
sbb
or
es
js,pt
sahf
adc
cmc
add
add
test
add
lods
fdivs
in
scas
test
cmc
xchg
repz
xchg
sub
sbb
add
mov
fs
add
push
or
mov
push
or
les
xor
mov
repz
mov
movl
aam
frstor
inc
shrl
movsl
adc
and
and
pop
or
xchg
adcl
cmp
dec
inc
inc
xor
sub
jge
aad
in
mov
push
sbb
sbb
scas
pop
loope
pop
fldenv
fnstenv
push
int3
push
cmp
sbb
mov
loope
or
or
roll
rclb
bound
fistps
cmpsl
sub
shlb
cmp
imul
and
mov
cmp
sub
icebp
xchg
xor
jns
gs
jge
jmp
test
sub
sarb
rcrl
cmp
insl
add
cltd
push
mov
in
cmp
jp
ds
cs
sub
sub
lret
fcoms
lods
xlat
push
sub
mov
test
cli
mulb
fimull
ss
mov
outsl
inc
cltd
pop
loope
insl
sub
jmpw
xor
cmp
push
adc
jmp
xor
mov
outsb
sahf
pop
out
push
dec
jo
sub
enter
sahf
out
adc
stos
and
jae
dec
hlt
pop
cmp
imull
sbb
mov
cmp
imul
jae
jnp
sbb
inc
loopne
fwait
shrb
push
inc
cmc
xchg
cmp
mov
add
sub
lea
xchg
data16
dec
push
adcl
fs
iret
cmp
hlt
mov
adc
cmp
mov
lods
adc
es
adc
mov
enter
inc
divl
sahf
jbe
xchg
jne
add
mov
loopne
sub
mov
jns
dec
pop
arpl
shl
cmp
and
push
mov
adc
js
jo
adc
or
push
in
adc
push
imul
test
daa
pop
inc
dec
pusha
xor
ds
xchg
pushf
bound
inc
dec
push
test
xchg
push
addb
mov
mov
daa
push
pop
sbb
jnp
andl
and
popa
ret
add
sbb
jl
ljmp
add
cmc
dec
stos
push
sbb
pop
es
or
imul
mov
add
push
jp
nop
mov
out
dec
xor
mov
aam
and
push
dec
mov
aaa
int3
adc
inc
adc
jne
or
ret
daa
jecxz
stos
clc
loopne
imul
mov
push
add
ljmp
push
or
cld
sub
test
std
sti
add
out
outsb
mov
mov
xchg
mov
inc
in
pop
cmpb
adc
cmp
mov
lea
pop
xchg
loope
sub
fwait
loopne
movsb
xchg
push
btc
cmp
ja
push
adc
bswap
dec
adc
mov
mov
imul
pop
xchg
jo
leave
adcb
icebp
pop
loop
es
sub
mov
outsb
push
mov
stos
pop
mov
mov
stos
addr16
js
stos
inc
repnz
or
cmpb
and
dec
dec
mov
mov
sbb
jae
cmc
roll
mov
aam
stc
stos
je
dec
inc
mov
aad
xchg
daa
cmp
cs
wbinvd
add
sbb
mov
add
into
lret
add
xlat
sahf
pusha
add
adc
sub
sbb
sub
mov
sub
imul
repz
cmovl
push
push
and
andl
xlat
lock
lock
mov
dec
addr16
loope
enter
je
inc
pop
or
push
sub
sub
movsb
adc
adc
loope
out
inc
dec
jl
xchg
scas
je
popf
sub
adc
add
dec
aas
inc
or
subb
repz
ret
loope
or
push
mov
sub
add
sti
push
lcall
inc
mov
and
popa
add
sub
mov
inc
fs
dec
mov
jecxz
movsl
out
aaa
jbe
iret
les
stos
hlt
add
into
call
in
jne
rol
out
inc
pop
mov
icebp
lock
ja
xchg
inc
popf
xor
or
lahf
mov
xor
cs
push
and
jle
insb
in
xor
add
loopne
mov
call
imul
into
aam
dec
adc
dec
sbb
fwait
loope
gs
arpl
pop
sub
cmp
push
mov
add
pop
ja
fisttps
push
fwait
into
cmp
add
stos
bound
xor
adc
movsb
mov
out
mov
pop
inc
mov
push
sti
and
sbb
inc
add
das
or
dec
aam
mov
fstpt
out
cmpl
insl
imul
movsl
mov
pop
push
scas
insb
mov
jp
cmpsl
jmp
or
push
and
pop
fidivrl
pop
pop
xor
inc
dec
loop
cltd
inc
fsubs
inc
jl
push
enter
iret
sbb
push
mov
sub
or
sbb
ret
repz
out
sbb
jb
adcl
dec
clc
or
out
icebp
xor
jae
push
lcall
dec
or
and
mov
xchg
adc
or
push
push
jl
jo
or
mov
add
test
push
pop
test
pop
adc
incb
or
xrelease
push
add
dec
pop
add
sti
sbb
jg
sbb
or
adc
cmp
cmp
lods
or
daa
cltd
cmp
add
pop
ljmp
dec
jo
cmp
shrb
add
push
add
mov
xor
pop
mov
jmp
dec
mov
add
stc
or
pop
and
test
lods
or
lea
and
scas
nop
cmc
adcb
test
aaa
cmp
fildll
push
xor
das
adc
and
ret
push
in
dec
pop
ret
bound
aaa
jo,pt
or
iret
imul
and
mov
add
dec
jg
lock
rol
daa
mov
shlb
mov
mov
mov
pop
sub
addr16
and
add
mov
adc
sub
sub
jle
lret
xlat
push
pop
cmp
jo
test
icebp
inc
add
sbb
addb
sub
adc
insb
jb
cmp
dec
adc
push
inc
add
pop
jecxz
pop
or
clc
jno
jae
push
cmp
movsb
mov
xchg
popf
das
cmpb
inc
rclb
and
mov
es
mov
adc
add
out
sbb
push
add
add
pop
jl,pn
push
add
push
pop
add
fbld
int3
adc
loope
add
rcrl
sbb
cmp
pop
dec
dec
pop
add
mov
pop
dec
sbb
pop
add
fdiv
add
repnz
mov
and
or
mov
test
push
popf
popf
in
push
inc
pusha
push
mov
adc
sahf
jecxz
testl
pop
repnz
and
iret
mov
sbb
and
popa
xor
gs
and
mov
push
movsl
dec
cwtl
outsb
sbb
mov
mov
into
cmp
pop
sub
jne
scas
test
adc
jge
mov
lret
push
xor
cmp
push
sub
jae
aam
push
shll
or
sbb
scas
test
push
ret
faddp
test
and
fidivs
mov
daa
xchg
aaa
insl
data16
xchg
std
sub
and
lret
pop
idivl
in
fldcw
pop
sbb
lahf
cmp
adc
ficoml
sbbl
pop
inc
rorb
movsb
add
test
loope
or
sbb
pop
test
mov
jb
sub
adc
inc
lds
push
add
divl
dec
stos
shrb
push
or
dec
lds
jl
es
popa
adc
mov
mov
gs
push
cmpb
in
stos
add
aam
mov
shrl
jae
and
xchg
lret
sub
sub
jae
shlb
jmp
movq
mov
dec
adc
movsb
lret
mov
push
shrb
shlb
out
dec
mov
push
pop
sbb
add
sarb
jb
push
xor
mov
cmp
jmp
je
insb
cld
mov
lods
xlat
jo
iret
ret
rol
je
out
pop
push
pop
into
jmp
test
and
pop
cmp
or
add
dec
outsl
mov
dec
pop
movsl
push
loop
mov
movl
sbb
xor
adc
push
cmp
sub
cmc
lahf
aam
clc
leave
mov
stos
pop
adc
xchg
test
shl
dec
and
sbb
adc
ficompl
push
sahf
sub
push
adc
push
xor
inc
push
jb
in
xor
sti
imul
or
pop
sbb
arpl
daa
subl
arpl
xlat
lahf
pop
inc
outsb
out
inc
out
je
add
inc
dec
dec
or
push
add
xor
imul
subl
xor
push
or
or
cmp
fld
ror
shll
shrl
push
fnstsw
pop
sub
jns
add
adc
pop
inc
adc
adc
cmc
push
movsb
int3
adc
jecxz
lock
mov
dec
das
push
mov
dec
cmp
lods
jg
pop
imul
int3
jb
pop
or
xchg
jno
movsl
mov
loope
iret
mov
cmp
arpl
in
adc
leave
aas
add
and
dec
sub
inc
sub
jno
sbb
cmp
xchg
cmp
lahf
xchg
lcall
incb
or
inc
fsubs
xchg
cmc
lock
sub
add
andl
xor
push
jecxz
fs
cmp
cli
mov
xor
dec
xchg
push
or
roll
or
js
enter
aas
xor
inc
sbb
mov
roll
jecxz
push
push
stos
int
call
jns
std
or
and
mov
mov
inc
add
xchg
mov
imul
in
subb
jae
xor
and
inc
cs
mov
sub
add
jno
stc
sub
xcrypt-cbc
cmpsl
xchg
mov
mov
adc
orl
xlat
add
push
sbb
jae
fldl
add
nop
icebp
or
dec
ret
xchg
mov
and
loopne
pop
mov
stos
stos
cmpsl
gs
sub
dec
fcomps
lds
int
je
and
js
and
inc
jge
push
inc
add
and
push
xor
push
and
or
rolb
imul
dec
cmp
dec
sti
ret
xor
pop
push
clc
add
int3
js
ret
add
jmp
lahf
addb
ret
fwait
mov
xor
cmp
das
insl
cmp
fidivrl
aas
xchg
test
fistps
or
xlat
jno
inc
xchg
cwtl
adc
mov
shll
add
sub
dec
popf
sti
add
test
cmp
fwait
pop
mov
out
pop
jg
inc
add
imul
inc
push
lret
lea
sbb
call
adc
imul
push
sti
fwait
lods
inc
shl
outsl
push
inc
testb
cmp
adc
sub
sarb
iretw
jge
rcrb
mov
mov
dec
xchg
arpl
jo
sbb
ss
fsubrs
cld
pop
cmp
inc
adc
push
push
test
cltd
dec
fdiv
in
movhlps
pop
addl
and
aaa
aam
sub
mov
jo
les
xchg
leave
add
popf
mov
stos
or
enter
dec
js
popa
scas
arpl
loopne
lahf
stos
inc
jmp
add
in
data16
push
aad
test
pusha
loopne
mov
popa
xchg
sub
or
sub
jae
arpl
xchg
sar
pop
and
clc
inc
fildl
enter
repnz
adc
adc
and
sub
mov
mov
push
pop
xlat
sub
test
sbb
jmp
cs
fnstenv
ja
das
cmp
adc
sarb
loope
add
push
adcl
xor
add
cmpsb
sub
dec
test
popl
cmp
orb
mov
pushf
lea
mov
shrb
mov
push
rorl
sub
push
pop
ret
icebp
xor
mov
pop
rcll
movsl
xor
lea
pop
pop
bswap
pop
inc
test
out
fisttpl
jge
idiv
lret
iret
sbb
inc
popf
push
lahf
test
jp
sbb
out
push
jl
mov
sub
rcrl
xlat
xchg
test
and
mov
or
das
mov
pop
lods
push
sar
cmp
mov
push
inc
fadds
cmpsl
negl
lea
pop
mov
adc
inc
in
mov
sbb
inc
pop
add
out
cltd
push
or
cli
subl
into
push
sub
adc
jmp
mov
shlb
xchg
mov
and
dec
add
mov
dec
sbb
sub
add
adc
pop
cltd
ss
outsl
arpl
aaa
les
das
inc
bound
jge
imul
es
xor
cmc
bnd
push
sub
mov
xor
xor
mov
inc
xchg
mov
leave
and
add
sub
cmpl
das
push
shll
aas
rorb
cmp
add
or
mov
ret
ret
push
fbld
in
lret
loope
repnz
fdivrs
int
or
or
mov
imul
inc
or
or
dec
mov
sar
mov
aad
sbb
inc
jmp
push
jl
shr
push
jmp
xor
add
adc
aam
cmp
adc
push
rolb
add
enter
ftst
sbb
mov
jno
mov
fistl
adc
sbb
xor
popa
sub
jb
enter
ja
dec
rcll
jl
pop
mov
jno
faddl
cwtl
or
loop
iret
orb
inc
movsb
mov
cmp
cmp
dec
sub
jne
adc
loopne
jle
add
iret
enter
cltd
xor
cmpb
push
mov
rolb
add
mov
mov
adc
pop
out
dec
mov
xor
jg
rorb
inc
mov
pop
movsb
sbb
dec
std
shrb
sbb
rorb
icebp
jno
and
insl
jnp
sbb
lock
inc
push
jne
fsubrl
data16
movsb
test
adc
lds
lret
adc
adc
dec
cmc
and
adc
push
lods
scas
cmp
lds
dec
movl
cltd
push
shlb
add
adc
xor
pop
and
jmp
or
or
fistps
ljmp
push
push
add
pop
or
xchg
xchg
stos
xlat
inc
pop
iret
jge
jecxz
test
jne
shlb
push
int3
nop
jb
mov
mov
out
xchg
push
and
dec
dec
lcall
push
mov
dec
xchg
and
add
xor
inc
icebp
sub
jmp
inc
cmp
cmp
fisubrl
xchg
dec
sti
mov
mov
mov
xchg
lods
jne
xchg
mov
or
roll
and
mov
push
and
jg
adc
mov
jnp
mov
daa
aad
mov
dec
idivl
sbbl
inc
stos
fdivr
jae
dec
sbb
gs
shlb
push
movl
stos
or
mov
syscall
xchg
movsl
lods
add
add
enter
inc
arpl
add
dec
sbb
sub
pusha
mov
xor
roll
inc
lods
adc
popl
rorl
adc
pop
dec
pop
jno
stos
cs
insb
ret
into
pop
outsl
jp
test
dec
arpl
mov
jmp
jl
ret
mov
sub
loop
lds
inc
nop
and
adc
dec
fsubl
stos
lcall
dec
enter
adc
nop
mov
jno
fld
jecxz
mov
adc
out
pop
adc
jno
mov
mov
lret
push
xchg
pop
cwtl
mov
out
shl
push
cmp
dec
fs
int3
add
popa
in
cltd
jns
push
gs
lods
call
or
xchg
int
inc
fmull
ror
loop
add
dec
xchg
scas
ret
pop
mov
mov
add
daa
sub
push
mov
or
jo
cmp
jle,pt
inc
xor
iret
enter
cmpl
or
iret
inc
jle
incl
rolb
shl
mov
imul
bound
adc
add
adc
mov
adc
cmp
inc
and
es
js
repnz
arpl
adc
rorl
or
xor
sahf
aam
enter
mov
pop
push
xor
dec
and
xor
push
xor
adc
les
mov
arpl
loopne
lds
lods
mov
mov
adc
push
in
test
push
or
fs
sub
cmc
push
cmp
xchg
add
inc
sbb
and
and
xchg
orl
push
mov
add
cli
les
out
add
loop
rol
scas
ja
lds
gs
inc
adc
and
dec
imul
mov
repnz
fmul
cmp
lcall
ret
xchg
insb
add
inc
sub
fadds
lock
loope
cmp
je
push
adc
xor
mov
cltd
imul
jbe
mov
bound
adc
xchg
frstor
lods
rcl
sub
or
fstpl
or
sbb
test
mov
fildll
mov
sub
data16
cmpsl
in
arpl
adc
fadds
out
int3
add
sub
out
add
gs
add
test
fs
andl
popa
sbb
addl
xchg
mov
add
push
imul
mov
pop
sub
insb
aam
andl
ss
sub
lods
add
push
test
push
mov
sahf
in
pop
jg
add
out
mov
pop
sbb
dec
mov
daa
notb
xchg
js
add
adc
adc
inc
sbb
or
push
pusha
jl
insl
je
mov
sub
lahf
cmp
adc
sbb
mov
inc
test
sub
xchg
leave
jne
test
xor
jne
or
inc
add
or
mov
lock
xchg
iret
push
or
push
lahf
jo
mov
daa
pop
imul
adc
movsb
loope
or
mov
das
xchg
add
jo
cs
jnp
lock
cmpb
aad
stc
test
insb
or
sahf
sub
push
mov
out
xor
bound
xlat
pop
xchg
cmpsl
jbe
jo
inc
xchg
loopne
leave
imul
arpl
ja
xor
fdivrl
lret
popa
andb
push
xor
pop
mov
pop
pop
jmp
stos
inc
add
lock
cmpsl
mov
gs
jmp
jmp
dec
push
mov
int
push
push
mov
sub
outsb
lods
mov
mov
imul
pop
sub
out
add
fcmovu
fsubrl
and
adc
and
or
cmc
sbb
or
sub
sbb
and
mov
int
and
pop
mov
out
mov
xor
loope
das
sub
lds
adc
sti
xor
rcrb
movsl
loopne
imul
movsb
pop
fs
jno
cmp
adc
decb
shlb
testl
jb
adc
repz
popl
idivb
jo
mov
adc
jbe
adc
in
mov
adc
xor
push
inc
add
add
push
pop
imul
notw
adc
sub
push
mov
xor
pop
push
mov
push
xor
rcr
lahf
push
cmc
dec
cltd
add
or
fs
adc
xchg
scas
mov
cmovbe
ret
lods
pop
xchg
int3
lahf
pop
call
lcall
cmp
push
bound
add
dec
sub
scas
aad
add
ja
xlat
iret
mov
lods
dec
adc
push
pop
test
mov
push
or
and
les
pop
jo
in
loop
adc
mov
out
add
adc
or
jg
loopne
mov
push
pop
dec
add
pop
test
test
mov
inc
and
xchg
mov
and
jno
sub
jl
and
add
push
cmp
aas
mov
imul
jae
adc
dec
js
aas
mov
subl
aas
arpl
and
mov
fstps
add
pop
into
out
or
test
aam
and
adc
cmp
sub
cmpsl
inc
scas
int3
cwtl
and
jne
adc
loop
cs
and
dec
push
xor
leave
sahf
icebp
mov
lret
cmc
push
sub
pop
jns
push
or
sub
outsb
push
shlb
jno
es
inc
sub
bound
subb
fisubs
or
mov
mov
jo
jns
fs
jnp
inc
dec
jbe
ss
or
cmp
cmp
adc
add
aam
clc
movsl
xor
or
xchg
dec
sub
ljmp
sbb
clc
mov
mov
lahf
pop
adc
mov
pop
sbb
or
mov
popf
inc
dec
loope
rcll
js
adc
dec
cli
mov
jne
mov
lcall
movsb
add
jo
push
or
dec
inc
jg
sbb
jmp
jne
inc
pop
mov
mov
enter
sub
nop
adc
or
sti
add
adc
bound
push
dec
dec
pop
or
es
dec
test
lea
daa
in
adc
sbb
sub
sbb
loopne
add
std
stc
push
es
pusha
mov
insl
jbe
aaa
push
std
add
ja
xchg
lock
imul
pop
or
loope
jo
aad
aad
sbb
mov
mov
or
test
or
cmc
aaa
jno
push
push
lock
adc
add
loope
aaa
sbb
mov
ret
add
and
xor
and
and
shll
xor
ss
sbbl
gs
aad
or
jbe
or
cmp
jg
dec
add
cmp
sarl
jnp
and
rcrl
leave
add
push
sbb
add
and
push
or
or
xor
shll
sarl
add
mov
xchg
push
adc
add
pminsw
or
pop
in
rcl
xor
lods
adc
insl
xor
xchg
pop
inc
mov
mov
add
jge
cmpb
sub
dec
shrl
mov
das
sub
orl
xor
lret
pop
sub
xlat
mov
es
adc
addr16
mov
mov
add
push
cmp
mov
mov
add
sub
sbbl
xchg
add
jmp
sub
adc
filds
mov
and
clc
out
xor
imul
pop
push
jmp
or
push
sub
pop
or
inc
mov
loope
scas
cmp
scas
jnp
repz
mov
int
xchg
lcall
mov
iret
lahf
add
out
jecxz,pt
add
out
not
xorl
ja
sti
inc
gs
ja
in
movsl
inc
mov
shrl
push
xchg
add
rcrl
fwait
sbbl
inc
xchg
aas
push
adc
jbe
in
dec
orb
dec
leave
xor
pop
pop
add
adc
cs
add
mov
push
sbb
adc
adc
out
scas
data16
dec
sbb
mov
subl
ficomps
pop
cmpsl
in
inc
add
fldz
jae
stos
pop
scas
subb
mov
mov
mov
adc
lret
idivb
xchg
jge
xorl
sub
cmp
adc
mov
ss
jmp
int3
repz
rcl
mov
or
add
repnz
fwait
jae
ja,pn
dec
fistpll
popa
fdiv
mov
sub
rcrl
fidivs
das
adc
push
in
adc
daa
fsincos
adc
enter
cmp
cltd
pop
jae
int
jecxz
test
xchg
pop
push
jle
aaa
mov
mov
outsl
mov
dec
popa
and
inc
inc
fisttpl
and
fldt
cmpsb
mov
push
lods
push
push
enter
push
jge
pushw
push
pop
mov
nop
mov
cmpsl
xchg
imul
loope
mov
lahf
nop
das
sbbl
cmp
cmpsb
stos
cmp
push
bound
adc
or
nop
loopne
mov
out
outsl
inc
pop
dec
aaa
and
ret
jne
xchg
inc
fwait
add
repz
mov
nop
out
jbe
mov
cmp
mov
addr16
sub
fdiv
addb
pop
aas
jg
rolb
ret
add
inc
jne
mov
push
sub
push
sbb
fistl
xchg
shrb
mov
call
mov
jl
dec
xchg
and
jecxz
mov
mov
xor
fs
pop
outsb
or
lahf
jge
and
inc
shll
pop
stos
xchg
mov
add
aam
sbbb
jo
or
dec
les
add
xchg
pop
cwtl
popa
fildl
sbb
dec
aaa
cmpsb
or
rcrb
fbstp
shrb
cs
xchg
iret
data16
sub
enter
dec
popf
mov
shll
push
rcrl
mov
xchg
jmp
adc
xchg
mov
add
xor
adc
add
xor
into
or
push
adc
fwait
pop
aas
or
mov
icebp
sub
mov
xor
repz
roll
movsb
sbb
popa
imul
es
cli
das
mov
cli
and
add
lods
adc
movsb
int3
sbb
iret
sub
das
stc
stos
and
sbb
imul
loope
or
jne
rcll
xor
inc
and
add
push
mov
js
jmp
adc
js
outsb
mov
add
push
ret
aaa
dec
lock
push
xor
dec
jp
out
ret
and
das
mov
pop
jl
sub
pop
dec
fnstenv
inc
adc
test
cmp
orl
sbb
faddl
push
adc
lret
sbb
jmp
or
or
sbb
es
dec
sar
cmpsb
xchg
clc
push
lds
jl
mov
add
scas
icebp
dec
pop
pop
push
mov
incb
add
movsb
and
push
cmp
pop
add
and
gs
add
jno
xor
daa
in
jl
lods
xchg
mov
mov
sub
lret
sbb
scas
mov
mov
fidivl
aam
mov
pop
and
inc
das
add
cmovb
daa
cmp
lret
mov
add
push
pop
cmp
jmp
daa
lret
jno
lahf
loopne,pn
rolb
xchg
sbbb
mov
mov
aaa
xchg
xchg
and
lods
jns
cld
enter
cli
mov
ja
leave
shll
ficoml
push
xchg
mov
lds
cmp
and
jno
xor
mov
or
sbb
cwtl
push
sbb
mull
aam
mov
or
add
cmp
push
andb
jmp
adc
add
cmp
icebp
fisttpl
das
cmp
push
sbbl
js
xlat
add
xchg
xor
cmpsb
cmp
jnp
adc
sbb
cmp
jo
movsb
data16
push
mov
pop
add
je
add
xlat
int
add
sub
cmp
sbb
cmpsl
sub
add
xchg
in
int3
xor
rcrb
jo
add
xor
fisttpll
sub
repz
ljmp
add
fcmovne
and
out
push
add
sbb
push
or
adc
lock
insb
ja
push
sbb
frstor
loop
div
xlat
shlb
cmp
pop
and
cmp
mov
add
add
sbb
adc
jecxz
xchg
sbb
and
push
and
jp
mov
cmp
stc
sbb
daa
add
in
dec
cwtl
out
call
mov
add
add
adc
cmp
mov
clc
mov
fsin
push
mov
ror
add
loopne
sbb
int
xor
mov
addb
sbb
aam
notb
add
int
lods
rcl
pop
xor
scas
adc
lock
loope
aaa
insl
push
imul
das
adc
shll
add
mov
mov
movsb
pop
fldt
addr16
push
add
lret
add
ss
cmp
fnstenv
nop
imul
push
xlat
xor
dec
and
lahf
es
add
xchg
push
movsb
test
lods
in
mov
loopne
sarl
push
cmp
in
leave
sbb
or
divb
pusha
leave
adc
mov
int3
sbb
sarl
dec
cmpsb
popa
pop
fwait
add
xorl
mov
scas
cmp
mov
aam
scas
loopne
pop
ret
aaa
shll
loope
and
rclb
add
cmp
pushf
fwait
mov
ljmp
pop
pop
dec
daa
outsl
add
add
shr
cmp
lahf
nop
sub
or
add
xchg
je
xchg
adc
adc
push
push
sbb
pusha
mov
push
inc
in
addb
or
loop
mov
jb
je
push
mov
out
fdivr
add
add
aad
cmp
and
dec
add
cmc
out
mov
and
pop
popa
add
jmp
jo
pop
aam
cmpsb
scas
or
fdivl
sti
fistl
or
movb
mov
push
jecxz
push
push
ret
dec
iret
and
mov
ret
popf
add
push
aam
jl
adc
pop
je
sti
and
aam
sahf
loope
cltd
add
or
out
stc
cld
mov
mov
sbb
add
cmp
pop
jmp
jne
cld
orb
pop
pusha
and
adc
xchg
sbb
sbb
aaa
shrb
adc
sbbb
shrb
out
add
mov
xchg
incl
push
sbb
jge
and
andl
add
ret
jb
add
pusha
pop
stc
sbb
test
xorb
push
shrb
push
sbb
sub
mov
outsb
add
add
stos
lds
sbb
aam
jmp
lock
add
or
sbb
push
jo
or
adc
rorl
add
shlb
mov
mov
fdivr
push
sbbb
jo
stc
add
and
sbb
sub
cmp
mov
pop
add
jo
out
aam
jo
lock
adc
pop
sbb
stos
out
cld
add
sub
push
xchg
pop
add
xchg
mov
push
pop
andl
add
pushf
xchg
subb
xorb
xor
stc
and
xor
pushf
lahf
stos
pop
js
pop
add
sub
add
das
repz
addb
shrl
pop
add
jbe
fnstsw
push
cmp
push
sub
cmp
inc
sub
add
sbb
rolb
lret
mov
mov
mov
negl
out
arpl
outsb
xchg
test
rorb
shll
dec
inc
scas
decb
hlt
mov
add
ds
out
dec
inc
fsubrs
rolb
add
mov
shlb
dec
dec
lret
adc
xchg
rolb
loopne
int3
sbb
pusha
sub
xor
and
add
sbb
test
pop
mov
cmp
loopne
cs
cltd
incb
add
add
add
add
fiadds
sub
loopne
popa
xchg
add
pop
in
pop
cmp
aad
iret
adc
shll
sbb
fstl
sbb
push
sbb
stc
push
add
stc
shr
jle
callw
add
cmpsb
pop
sbb
add
ljmp
pusha
fiaddl
jns
add
add
outsb
add
push
sbb
add
lods
push
rcr
add
xor
int3
and
sub
int3
cwtl
xchg
sub
addl
mov
jno
push
dec
add
popf
outsb
aaa
add
dec
xchg
cwtl
and
out
ss
sbb
push
stos
and
cmp
popa
in
pop
or
add
cs
xchg
lret
out
pop
xor
jns
lds
in
les
add
sahf
addl
ja
inc
mov
and
maskmovq
imull
add
movsb
adc
aam
pop
divl
push
out
add
sbb
popf
fmuls
ss
jmp
and
add
cmp
mov
and
jmp
das
push
add
push
xchg
xor
test
pop
mov
cmp
test
sbb
mov
shrb
lods
add
dec
outsl
mov
mov
xorl
xchg
or
add
outsl
pop
lret
fimull
sbb
pop
ja
es
fcmovnbe
mov
add
xchg
xchg
and
add
add
mov
lods
add
and
data16
lahf
add
add
mov
sub
imul
push
lret
addl
int3
add
push
or
out
xchg
or
pop
cmp
add
add
jns
or
add
sti
push
into
daa
xchg
decb
mov
sub
les
in
xchg
add
add
loopne
and
inc
sub
xchg
cmp
outsb
dec
in
adc
dec
gs
mov
or
rorb
xor
adc
mov
cmp
xor
pushf
xchg
mov
jg
push
cmpsb
in
inc
sbb
inc
and
pop
lods
dec
or
pop
push
mov
mov
jg
add
xchg
scas
sub
cwtl
sub
in
mov
call
je
fsubrl
pop
jmp
repz
or
mov
movsb
cmp
leave
sbb
jne
jl
xor
lods
push
xlat
mov
ja
or
or
or
sahf
jnp
sbb
daa
mov
lcall
or
or
stos
and
addl
in
divl
test
push
out
subl
cmp
pushf
scas
xor
movsb
push
and
push
not
mov
and
imul
jmp
jo
pop
mov
ret
orl
rorb
sbb
jnp
addr16
sbb
lock
pop
rcr
mov
push
aad
mov
fisubs
dec
imul
das
pop
dec
popa
push
iret
jae
fld
mov
and
push
dec
sbb
add
xchg
and
add
inc
cmpsb
xor
jo
xor
push
mov
gs
dec
fcoms
push
fisubrl
push
sti
pop
test
xor
mov
or
cmc
sub
add
or
add
cwtl
add
jp
lcall
add
js
sub
and
cmp
imul
push
in
ret
sub
insl
mov
adc
add
sub
jp
add
shl
cmpsb
pop
ja
mull
adc
jmp
add
add
xlat
nop
sub
ret
push
rolb
mov
cld
push
inc
mov
pusha
lcall
or
mov
xlat
and
mov
push
xchg
adc
sub
add
rcrl
mov
int
pop
or
push
pop
in
loopne
ds
cmpsl
movsl
adc
mov
sub
xorps
mov
jns
mov
inc
jb
fcoml
push
add
xorb
and
outsl
jne
dec
adc
jns
dec
xor
pop
xor
int
sub
ret
mov
or
mov
das
je
mov
mov
jae
jo
mov
mov
into
and
aas
pop
adc
mov
adc
fiadds
out
rcl
insl
popf
sub
and
rol
das
scas
xchg
push
sub
js
fsubs
clc
and
rcr
add
mov
cltd
es
mov
dec
pop
push
cs
mov
iret
jg
push
stc
lahf
xchg
mov
sub
push
mov
jecxz
dec
call
add
or
jo
inc
nop
incl
dec
popa
xor
xchg
lock
xchg
and
fildl
ucomiss
xor
int
fcmovne
fisttpll
jmp
ret
xchg
xchg
or
movsl
mov
fadds
cmc
repnz
sub
add
push
fucomp
ret
or
add
inc
pop
sbb
scas
mov
push
lcall
sbb
push
pop
cmp
jno
into
or
adc
push
xchg
shrl
test
sub
outsb
dec
pop
std
jne
push
sbb
add
sub
lea
test
rolb
loopne
jo
adc
shlb
movsb
imul
or
push
lock
lea
xchg
les
mov
daa
stos
pop
loope
adc
inc
add
xchg
pop
mov
imul
xchg
mov
fldl
jge
or
mov
inc
loope
cltd
in
jns
inc
adcb
ljmp
stos
pop
add
test
adc
out
sub
inc
cltd
test
or
sarb
xchg
shlb
jmp
fistl
mov
sub
add
outsl
add
sbb
cltd
mov
nop
push
jbe
xchg
pop
pushf
loop
mov
loopne
scas
fdivrs
out
push
lcall
insl
add
sub
imul
dec
and
insb
cmp
jge
jle
fidivrl
cmc
daa
push
jge
loopne
dec
and
ret
xlat
sub
jl
rclb
add
mov
push
adc
sub
rcll
xor
xchg
test
es
adc
mov
xor
adc
or
jle
and
stos
cmp
adc
in
and
out
pushf
or
ja
add
inc
pop
mov
jo
pop
cmp
push
pop
jnp
xor
add
stos
aad
xor
je
lea
mov
mov
repz
xchg
and
jnp
or
test
mov
inc
sbb
pop
mov
sbb
sub
movb
dec
sub
test
sub
stos
gs
arpl
test
fildl
cmc
insb
mov
cmp
dec
or
pop
mov
fisttpl
fldenv
vaddsd
mov
nop
movl
adc
mov
xor
lahf
insl
xchg
mov
mov
sahf
pop
shrb
add
push
or
movq
xor
leave
rol
inc
adc
ss
dec
mov
mov
loope
or
push
jp
je
cmp
cmc
jns
adc
cmpsl
or
xlat
cmp
shll
mov
movsb
add
mov
popa
cmp
addr16
rolb
inc
js
test
into
sub
andb
push
or
cmp
dec
rolb
js
mov
out
sub
pushf
and
cmovs
pextrw
add
add
mov
icebp
and
jo
pop
stos
pushf
xor
in
fdivs
icebp
test
xchg
popl
cmpsb
mov
imul
jl
jle
xchg
mov
repnz
testb
loopne
push
stos
mov
and
pusha
shll
lods
adc
sub
fimuls
fiaddl
movsl
dec
es
mov
cli
icebp
test
xchg
or
roll
sbb
xchg
push
popa
sub
loope
out
mov
cmpsb
adc
lock
rcrl
push
mov
loope
mov
inc
pop
push
fnstcw
mov
push
dec
in
mov
das
cmp
arpl
roll
and
adc
sti
les
cmp
and
pop
push
cmp
cmpsb
mov
imul
mov
cltd
xchg
hlt
sahf
lock
in
pusha
and
mov
dec
pop
ja
test
mov
sub
inc
daa
test
bound
pop
inc
dec
inc
ds
lret
int
into
jns
sbb
popfw
mov
leave
in
pop
lret
push
mov
mov
jno
mov
pop
or
cld
cmp
xchg
push
mov
fnsave
loope
dec
loopne
popf
jo
out
adc
jne
add
movsb
loope
imul
cmp
test
add
and
je
lea
jge
shlb
mov
xor
in
scas
sub
movsb
shlb
xor
lock
mov
test
add
movsl
jno
imul
xchg
or
mov
mov
adc
jbe
xor
mov
pop
mov
adc
mov
insb
sbb
sbb
mov
nop
sub
dec
adcl
add
push
or
mov
mov
das
or
inc
inc
adc
add
mov
mov
push
test
add
in
jns
cmovb
pop
and
adc
add
das
xchg
ljmp
cmpb
in
pop
popa
xlat
jecxz
or
push
sub
push
add
mov
cmp
out
mov
jb
insl
and
xchg
popa
test
cmpb
js
les
out
mov
ret
xlat
data16
mov
fdivrp
fld
popl
mov
fwait
aad
dec
and
or
test
cmp
or
int3
cmp
dec
sbb
in
add
pop
lcall
dec
push
roll
dec
cmpsl
sub
pushl
push
ret
mov
mov
sub
flds
aam
inc
adc
adc
sub
mov
call
cld
cmp
inc
dec
mov
or
out
push
inc
adc
insl
push
stos
aas
scas
std
sti
mov
roll
inc
loope
xchg
sub
and
lcall
xor
sbb
pop
mov
lods
mov
jmp
pop
out
pop
outsl
add
inc
imull
shll
test
nop
mov
add
and
lret
pusha
and
and
adcl
adc
xor
andb
adc
push
dec
iret
cmp
cmp
sbb
enter
dec
sahf
sbb
test
fimuls
add
lret
shlb
xor
add
neg
and
stc
pop
dec
arpl
ljmp
push
out
pop
cmp
into
loopne
adc
clc
insl
xchg
lods
sbb
sbb
roll
popa
shrl
int
rolb
pop
push
cmp
cmpsl
add
je
imul
mov
testb
jo
add
gs
mov
jae
adc
and
xor
xor
pop
jge
cs
stc
pop
inc
cs
xchg
mov
push
sub
inc
jnp
shld
sbb
sbb
and
xchg
lds
loope
lods
sub
dec
push
outsb
pop
jne
loopne
sbb
xchg
or
and
cmp
jbe
test
push
cmp
in
push
push
lds
outsl
lods
pushf
shll
mov
stos
mov
lahf
pop
sti
fiaddl
cli
sbb
les
enter
les
xor
fistl
add
sub
add
push
cmp
imul
jno
test
inc
popf
cmp
adc
repz
inc
sbb
ja
xchg
clc
or
subb
pop
sbb
mov
scas
mov
pusha
stc
test
lock
xor
mov
imul
std
mov
jecxz
test
and
mov
add
cwtl
sub
xor
imul
jno
ljmp
xchg
dec
sbb
dec
pop
ljmp
addr16
cwtl
mov
aaa
push
aam
inc
pop
js
stos
sbb
lock
cltd
loop
sub
stc
jle
mov
add
sub
fs
sbb
mov
in
mov
sbb
adc
fadds
add
jb
jne
lods
add
outsb
loope
test
xchg
adcl
cwtl
or
test
push
fldl
add
mov
pusha
and
test
or
addl
addl
adc
popa
pop
mov
xchg
ds
push
ljmp
sub
jecxz
inc
std
sub
jle
int3
and
mov
out
test
cmp
mov
dec
arpl
outsl
scas
sub
xor
sbb
sub
push
sub
enter
sbb
sbb
enter
xor
inc
in
insl
loop
pop
mov
add
pop
scas
sbb
inc
add
and
mov
push
sub
pop
loope
sbb
xor
dec
stos
leave
ss
out
jmp
push
xor
fwait
int3
fdivr
xchg
jno
adc
jle
push
xchg
push
xor
jo
cmpl
roll
nop
jno
jno
adc
inc
xor
and
pop
add
scas
ffree
cmpsb
sbb
bound
xchg
cmp
mov
iret
pushf
xchg
jp
inc
xchg
rcrb
sbb
std
pop
add
ds
repnz
xchg
push
jge,pt
sub
divb
aad
cmp
push
pop
in
in
cmpl
out
jge
push
testb
jge
jnp
push
lea
inc
lret
or
outsb
jmp
jnp
ds
cmp
lret
jmp
add
mov
mov
popf
lret
push
push
jl
xchg
xchg
pusha
les
or
mov
sub
mov
sub
imul
ficoml
jns
push
or
outsl
in
daa
movsl
xchg
ror
fwait
outsb
and
dec
inc
das
inc
and
punpckhwd
mov
or
sub
filds
or
or
mov
inc
test
lret
rcll
add
ss
add
cld
cmpsl
xor
sahf
jl
inc
xor
mov
sbb
jle
xor
mov
inc
aas
push
movsl
dec
fsubrs
sbb
bound
push
loope
push
xchg
mov
les
test
pop
lret
inc
test
inc
sub
push
lcall
or
lea
sbb
and
lcall
prefetcht1
stos
xor
cmpsb
pop
adc
jecxz
or
ja
dec
dec
inc
loope
mov
rorb
mov
cmpsl
out
dec
enter
inc
stos
hlt
fwait
dec
xor
inc
or
dec
adc
xchg
pop
adc
ds
pop
cmpsl
aad
add
hlt
test
add
hlt
sub
or
jl
icebp
jno
imul
dec
out
sbb
fisttps
and
mov
cld
mov
and
add
xor
sub
push
jnp
inc
mov
and
pop
dec
pusha
aad
nop
pop
jae
xchg
lods
lcall
popf
sub
aad
xor
rcrb
jbe
add
cmc
iret
xchg
jae
test
aaa
push
fildl
and
xor
pop
sub
xor
cmc
or
xchg
hlt
out
ss
sbb
rorb
mov
sbb
adc
sbb
and
or
sbb
dec
insl
pop
xor
loopne
pop
dec
adc
cmpsb
sahf
fs
jbe
out
cltd
xchg
jecxz
or
jmp
jno
and
cmc
sub
mov
push
add
mov
or
int
in
sbb
mov
or
imul
mov
push
pop
and
xchg
subb
push
jbe
dec
loope
shll
mov
shll
clc
pop
jbe
fadd
or
xor
and
jecxz
and
call
scas
mov
xor
mov
cmp
dec
negb
mov
sbb
lods
cmc
sbb
loop
test
test
push
lock
dec
arpl
in
or
mov
orb
and
cltd
pop
aaa
inc
test
iret
cld
xor
outsl
jecxz
inc
pop
sti
mov
add
or
and
jmp
mov
pop
adc
orl
sarb
lods
inc
clc
nop
mov
out
xchg
pop
pop
pop
sarb
icebp
mov
jle
mov
push
sbb
divb
es
imul
ret
mov
cmc
jne
rclb
call
or
mov
inc
add
xorb
lcall
ja
add
add
dec
imul
mov
and
aad
lret
cmp
mov
add
or
add
jle
xchg
cwtl
pushf
dec
mov
call
or
jecxz
aad
inc
push
maskmovq
divl
and
push
and
pop
push
push
jb
fbstp
sub
icebp
int3
jb
jo
xor
lods
aam
xchg
mov
cmp
inc
int3
add
popf
test
popa
pop
lods
and
or
inc
aaa
add
xor
arpl
add
xlat
and
sahf
or
repnz
jne
lock
xor
imul
stc
adc
add
dec
mov
ret
adc
rolb
repz
out
xchg
outsb
test
data16
push
jge
pop
roll
out
add
int3
icebp
shll
stos
mov
cli
jo
mov
sub
adc
fucompp
mov
fists
aas
pop
cmpsb
adc
lcall
mov
mov
popa
or
orl
dec
rolb
mov
or
cmpsl
aam
and
lcall
lods
push
mov
into
mov
sub
lods
xchg
nop
jmp
test
lea
lods
test
add
dec
and
sub
jmp
and
xchg
jge
rolb
lock
divl
inc
mov
movsl
pop
adc
imul
call
mov
mov
lock
imul
mov
sarl
cmp
cmpl
adc
mov
push
jno
sarb
push
sbb
ffreep
adc
dec
sbb
out
mov
ljmp
inc
mov
cmpsl
lods
sub
xchg
xor
movsl
xor
pusha
adc
pop
xchg
jecxz
pop
nop
sbb
int
jo
inc
cmp
cmp
pop
inc
punpcklbw
test
pop
imul
sub
adc
out
or
loop
lods
shl
pop
jl
xlat
dec
fnclex
insl
cld
add
lds
in
adc
inc
pusha
adc
loop
mov
leave
xchg
ljmp
push
daa
fisubrs
mov
mov
mov
lock
push
iret
daa
ljmp
jno
xchg
jmp
mov
sub
ror
test
add
xchg
push
cmpsb
lea
test
sbb
dec
fwait
mov
inc
cmc
stos
xor
stos
adc
test
test
push
adc
loopne
or
add
dec
test
xor
pusha
test
or
mov
jnp
adc
into
push
push
xchg
xor
lcall
dec
add
and
testb
push
mov
mov
mov
pop
insb
repnz
or
aad
fcmovnu
dec
and
sub
dec
loope
fmul
xchg
pop
or
push
sub
shll
or
adc
xor
nop
xor
mov
pusha
mov
mov
xchg
sbb
dec
and
add
icebp
call
test
add
mov
imul
pop
mov
ja
pop
pop
dec
sub
xor
jbe
and
stos
xchg
ljmp
pop
lds
push
and
or
pop
cmp
dec
add
in
inc
inc
jge
scas
fs
imul
mov
test
xor
icebp
shlb
pop
ret
jmp
je
popa
aaa
iret
and
je
popa
int3
xchg
xchg
add
push
les
dec
dec
inc
and
inc
add
jne
cmp
add
lea
mov
test
jo
fisttpl
push
adc
xor
xchg
mov
ljmp
das
adc
mov
xorb
mov
cs
cmp
xor
push
inc
adc
mov
lret
cmpsl
mov
mov
xchg
and
and
out
hlt
lcall
fst
call
or
mov
call
dec
shr
insl
rcll
in
shld
add
shrl
icebp
dec
loopne
iret
iret
imul
xchg
aam
sub
cli
mov
mov
dec
ret
jp
cwtl
outsb
adc
sti
iret
es
and
in
inc
jmp
psrlq
out
cmp
mov
xchg
or
iret
push
stos
sbb
mov
mov
pop
adcb
sbb
add
push
aam
dec
add
adc
daa
daa
lahf
into
cs
sub
mov
inc
jbe
and
movsl
inc
fcoml
push
lret
jo
mov
or
and
es
aaa
clc
xor
popa
test
scas
pop
mov
and
lods
mov
iret
push
sbb
mov
jl
daa
jbe
jmp
pusha
loopne
stc
loope
sub
or
mov
clc
imul
fdivs
jo
lahf
xlat
and
mov
and
loope
pop
dec
inc
xchg
cmpb
mov
or
int3
int
in
add
fwait
loopne
cli
or
aas
pop
mov
enter
mov
mov
xchg
push
loop
or
movsl
out
idivb
fists
or
dec
sbb
adc
js
adcl
hlt
lret
pop
popa
icebp
add
adc
insb
or
push
add
pop
mov
push
add
jl
xchg
mov
repz
mov
mov
adc
sbb
test
sbb
pop
ds
and
or
jge
or
or
les
popa
fsubl
mov
cli
xor
sti
aam
ret
xor
cmp
imul
nop
push
out
pop
icebp
dec
jo
cmp
push
popa
push
push
roll
adc
dec
mov
jo
shlb
rolb
add
test
push
cmp
add
fadds
nop
sbb
imul
shll
lods
cmpl
fwait
sub
das
add
adc
in
mov
xchg
sub
outsl
arpl
es
pop
movsl
test
mov
and
mov
les
sub
hlt
mov
mov
movsl
pop
clc
lock
cmp
sub
loope
fdivl
dec
inc
imul
inc
movsb
jo
cmp
int
push
push
jge
mov
loopne
inc
ret
sbb
dec
loopne
cwtl
lea
pusha
jne
mov
jmp
in
movsl
adc
imul
fadds
lea
dec
aam
addr16
adc
fs
sub
or
push
add
mov
inc
and
push
jns
inc
call
sub
test
or
pop
push
adc
sbb
shrb
ljmp
inc
out
sub
inc
movsb
push
cmp
das
push
adc
or
pop
pop
pop
fnstenv
int3
dec
dec
mov
add
arpl
loope
dec
repnz
iret
add
loopne
fldenv
outsl
mov
leave
sbb
orb
std
mov
shlb
lock
push
pop
push
lcall
adc
les
mov
adc
icebp
xlat
hlt
pop
call
hlt
loopne
lock
xchg
mov
aad
sub
pop
sar
push
pop
dec
scas
and
xchg
cpuid
push
lods
push
inc
ffree
push
push
pop
loope
xor
mov
xchg
test
or
jae
sbb
lods
test
dec
fsubl
cmpsb
icebp
mov
pop
and
loop
dec
cmp
ljmp
fldl
popa
xor
xchg
hlt
and
cmp
mov
mov
add
xchg
mov
push
xlat
iret
gs
cmp
fists
jge
push
inc
add
fsubs
mov
out
push
ret
mov
and
push
loope
cmp
inc
or
xchg
scas
xchg
mov
mov
push
lea
insb
add
adc
les
adc
popf
add
push
push
fidivl
or
adc
push
or
fistps
pop
mov
addl
jl
inc
mov
inc
popf
inc
push
adc
arpl
mov
aas
es
push
loopne
pop
inc
inc
add
out
adc
in
ds
sbb
and
adc
outsl
scas
inc
arpl
mov
sub
hlt
faddl
xchg
dec
xchg
push
mov
sbb
pushf
jge
push
pop
aam
fs
jmp
and
lret
pop
adc
rcrl
mov
inc
sub
add
pusha
inc
pop
stc
out
inc
movsl
dec
dec
adc
adc
std
imul
lds
and
call
jmp
out
lods
cmc
and
es
or
add
inc
jns
adcl
nop
loop
push
lcall
cmp
dec
ret
test
and
push
xchg
cmpsl
push
sub
out
lods
test
push
sbb
std
inc
add
jl
arpl
outsl
xchg
lea
mov
push
push
mov
shll
push
and
push
dec
mov
aam
sub
sbb
arpl
sub
xor
fadd
mov
push
mov
jg
int
fistps
pop
lods
xor
or
mov
inc
lret
jno
and
cli
adc
xchg
iret
or
add
jmp
xchg
jmp
sub
and
jg
add
pop
add
dec
xchg
sub
push
or
pop
adc
push
cmpsl
std
or
pop
pop
sbb
pop
std
out
pop
fimuls
inc
andl
pop
add
addr16
lea
adc
inc
lret
pusha
and
mulb
and
in
je
jmp
and
add
sub
dec
sub
jnp
jne
or
sbb
mov
mov
push
xor
inc
sbb
fwait
push
and
mov
or
aad
fwait
or
outsb
das
push
cmp
daa
dec
inc
push
dec
sbbl
icebp
xchg
daa
lock
adcl
daa
in
pop
mov
xor
test
mov
or
test
xlat
mov
aaa
movsl
dec
inc
add
lock
jle
sbb
std
cmp
or
push
addr16
sbb
and
xchg
ja
xchg
test
add
push
fisttpll
pop
jo
jl
nop
loope
or
inc
push
call
int
scas
mov
dec
pop
jnp
mov
scas
pusha
subl
sub
shrb
fiaddl
lock
xchg
test
cmp
stos
xor
add
xor
push
xchg
pop
cld
in
popa
push
add
movsb
mov
lock
cmpsl
not
xchg
xor
testb
imulb
lret
cmp
jge
scas
add
or
lret
mov
pop
sub
pop
inc
inc
scas
daa
popa
inc
stos
jno
lcall
iret
mov
cltd
jg
fcoms
jae
data16
decb
imul
rcrb
repz
sbb
dec
fs
adc
incl
xchg
and
dec
dec
fbstp
in
lahf
mov
push
shrb
daa
dec
mov
sub
jae
jle
mov
dec
pushf
add
and
cld
sarb
and
adc
iret
sub
sub
cmp
xor
xchg
dec
xor
adc
pop
xchg
xchg
push
subl
inc
mov
dec
cmp
sbb
xchg
loopew
pop
add
mov
add
cmpsl
mul
sbb
out
and
or
add
orl
add
mov
or
scas
arpl
mov
or
pop
sub
lret
das
sbb
enter
mov
adc
test
mov
fsubs
add
jne
mov
mov
call
xchg
inc
sub
shll
std
ret
loopne
mov
data16
ret
and
das
and
and
repnz
popa
sbbb
jns
sahf
addr16
cmp
push
mov
add
inc
lods
shrb
xchg
cmp
pop
incl
sbb
jo
or
and
fucomp
imul
xor
fisubs
je
arpl
jno
jno
dec
xlat
and
out
push
sbb
adc
cmp
adc
add
out
mov
aam
int
lret
push
sub
and
cmpb
stos
and
scas
movsb
add
daa
sbb
sub
daa
or
out
dec
sbb
sub
and
cmp
ja
jle
aas
cmp
cmp
and
loopne
arpl
pushf
and
or
pop
add
mov
movb
lods
es
jae
in
push
mov
dec
sub
pusha
lods
push
mov
test
out
jne
iret
js
add
popf
xor
in
incl
and
loopne
jae
xchg
pop
and
sbb
and
and
fs
and
push
add
aaa
and
scas
ja
lcall
imul
and
jbe
add
xchg
add
sbb
clc
and
or
js
pop
xchg
test
mov
push
es
push
sbb
cmp
cmp
add
loop
dec
push
lret
nop
and
add
fcmovnu
clc
jb
sbb
add
ror
insb
xor
fwait
sub
in
adcl
es
xchg
adc
je
push
lret
daa
lahf
lock
lods
mov
ja
pop
imul
xlat
push
sahf
test
jno
cmp
push
xchg
jae
and
imul
or
xorb
cwtl
adc
and
jbe
cmp
test
pop
stos
aaa
iret
movsl
push
out
or
js
aam
pop
or
mov
or
mov
inc
pop
outsb
push
or
jo
adc
cmp
pop
or
or
pop
xchg
cld
aam
inc
jb
pop
movsl
cmp
sub
jns
or
dec
xchg
adc
add
fcmovbe
inc
add
dec
stos
cmpsb
daa
push
stos
mov
ljmp
hlt
mov
sub
push
sub
dec
stos
ljmp
xor
enter
mov
push
leave
mov
jo
es
add
outsb
pop
fnsave
js
aad
inc
inc
or
add
add
enter
jmp
adc
push
and
xchg
lret
sbb
xchg
inc
loopne
xchg
add
pop
lods
movsb
daa
lods
mov
xor
xorb
add
add
and
ret
inc
sti
pop
sbb
pusha
jge
xor
adc
es
jne
and
or
dec
loopne
and
lock
or
add
cmpsl
or
or
sub
adc
lods
jo
mov
push
inc
dec
adc
sub
lods
insl
mov
adc
push
push
and
mov
roll
dec
nop
pop
push
lea
rclb
cmpsl
or
ss
rclb
popf
push
loop
or
jbe
sub
mov
lret
xchg
pop
push
cltd
and
add
incb
pop
xchg
outsl
pusha
add
sbb
imul
mov
sub
sub
and
pop
cmp
es
add
add
push
push
mov
or
adc
popf
sub
and
push
sarl
ret
dec
lret
sbb
sbb
sbb
sbb
btc
xchg
push
add
insl
pop
or
fs
inc
cmp
jne
xchg
fstl
addb
mov
and
mov
rorl
dec
mov
lock
dec
add
adc
inc
mov
add
sbb
out
fwait
sbb
pusha
or
movb
shrl
mov
pop
fs
imul
callw
add
cmp
mov
push
ja
mov
dec
int3
imul
jp
inc
loope
fwait
add
dec
and
sub
add
rclb
ss
jmp
mov
mov
or
rclb
loopne
mov
pop
add
push
das
add
sbb
sar
add
jnp
jnp
shrb
jne
adc
pop
jb
dec
sbb
addb
push
mov
jb
inc
ror
push
cmpsb
inc
popa
pusha
sbb
adc
jmp
cs
jns
fldt
fs
add
scas
test
adc
push
std
mov
or
rol
pop
pop
jge
out
push
stos
dec
jne,pn
pusha
add
pop
mov
xor
lret
add
add
scas
dec
aam
arpl
popa
std
or
cwtl
sub
pusha
dec
aam
sbb
adc
gs
cmp
add
push
subl
lahf
mov
gs
aam
orl
enter
test
xchg
and
jae
xor
inc
mov
adc
xor
sarb
dec
pusha
shrb
mov
rolb
mov
inc
adc
xor
rol
sbb
dec
test
xchg
jl
pop
inc
add
imul
add
push
and
add
popf
mov
mov
test
and
mov
test
sbb
popf
adc
and
jnp
or
mov
xchg
push
and
sahf
scas
push
pop
jbe
je
hlt
mov
sub
sbb
inc
scas
cltd
les
test
dec
fs
jno
xor
outsl
int3
and
movsb
mov
daa
add
add
divl
xor
das
sbb
or
push
pushfw
add
je
ret
sbb
push
pop
xchg
iret
push
pusha
ds
pop
jbe
scas
aas
lods
jle
jg
aam
inc
es
sub
xchg
js
mov
push
bound
stos
cmp
rcrl
or
xor
or
js
imul
xchg
test
addb
fucomi
mov
mov
les
mov
cwtl
icebp
inc
add
xor
xchg
and
sbb
lea
dec
or
xor
out
ret
loope
xchg
clc
xor
push
adc
sbb
pop
xor
div
ret
stos
loopne
mov
loope
or
and
sub
ja
loop
pop
idiv
ret
push
out
into
and
mov
enter
jno
push
fs
and
das
mov
imul
add
fnstenv
mov
sub
insl
das
mov
outsb
sbb
push
rcrb
out
jns
cltd
mov
int3
lret
inc
mov
call
scas
fs
xor
sbb
sbb
push
into
cmpl
sub
cmpsb
pop
sbb
ret
push
mov
rol
les
jnp
xchg
cmpsb
xor
into
push
adc
xor
xchg
xor
js
inc
scas
mov
fadd
add
test
sarl
out
lods
aas
mov
dec
adc
sbb
cmpsb
cs
pusha
adc
sub
fidivrl
fldpi
lods
fs
lret
mov
sbb
mov
popa
add
adc
adc
iret
add
and
aam
add
push
jecxz
xor
add
stos
inc
sbb
addr16
fcoms
inc
sbb
push
dec
das
add
mov
dec
mov
test
out
nop
push
adc
in
add
dec
mov
inc
xor
scas
orl
mov
xor
and
and
subb
or
out
lods
movsl
sbb
jp
dec
push
es
xor
iret
fnsave
and
or
cld
shrl
nop
pop
push
push
iret
nop
je
or
dec
bound
fcoml
ret
lret
or
mov
roll
mov
test
lea
jl
sub
sbb
cli
sbb
pop
mov
adc
mov
push
jb
andl
jb
aad
and
pushf
imul
stos
xor
test
mov
and
mov
lock
repnz
cmp
rol
add
imul
pop
ss
es
ljmp
push
lahf
jno
xor
push
add
xorb
aaa
xchg
or
push
in
and
bound
imul
cmp
test
adc
dec
ja
sub
or
mov
and
sub
inc
call
push
push
and
iret
mov
push
loope
push
ret
mov
clc
in
lods
push
inc
or
or
push
nop
sbb
mov
push
push
sub
dec
rcrb
and
mov
xchg
or
cwtl
jnp
andl
and
sub
and
and
xchg
add
and
ds
mov
jno
loope
pop
push
jno
ljmp
loopne
push
int
mov
jbe
loope
adc
and
xor
aaa
mov
xlat
imul
and
xchg
imul
dec
in
sub
or
adc
push
mov
dec
push
test
int
xchg
mov
add
mov
outsb
mov
dec
loopne
inc
xor
cmp
push
in
mov
stc
clc
cmp
xchg
data16
lock
ret
cmp
sub
jo
bound
add
xchg
inc
lret
pusha
mov
rcl
lock
sbb
xor
iret
scas
add
ds
in
in
sub
sub
add
push
shrb
pushf
or
push
xor
mov
aam
lahf
xchg
add
inc
sbb
cmc
shlb
inc
sub
repz
add
adc
cmp
xor
push
iret
imul
dec
dec
pop
out
jae
jecxz
daa
mov
inc
add
sarb
js
in
aaa
pushf
clc
lods
pop
in
fsubl
mov
fldt
mov
fdiv
jp
push
aas
xchg
mov
faddp
jo
and
xchg
sbb
insl
loop
push
cmp
mov
push
sahf
and
sub
mov
sub
or
mov
shlb
inc
bound
adc
pop
sub
sbb
mov
lea
inc
icebp
scas
adc
and
mov
xchg
and
pusha
add
fwait
jo
sarl
mov
lret
shlb
rclb
push
sbb
adc
pop
testl
mov
test
and
test
adc
call
aad
pop
pushf
xlat
add
and
jge
xchg
add
add
sbb
sbb
inc
mov
dec
inc
scas
stc
dec
mov
insb
lods
mov
imul
or
out
or
mov
push
sub
sbb
push
add
add
in
sub
push
mov
xchg
xor
jecxz
push
pusha
fsubrl
in
add
mov
nop
pop
es
les
imul
repnz
add
pop
sub
lret
mov
jns
loope
pop
movsb
and
sub
pusha
lcall
or
jle
and
mov
popa
ret
xchg
lock
vandnps
or
and
sub
test
test
movsl
jecxz
aam
mov
fs
pusha
lock
sub
mov
and
cmp
xchg
aam
add
in
xor
xchg
sbb
movsl
cmp
test
or
pop
sarb
adc
fisubs
adc
jp
cmpsl
add
leave
pop
frstor
xchg
mov
sbb
mov
xchg
mov
dec
popf
loope
inc
inc
outsb
icebp
and
or
add
add
jmp
adc
andb
pop
jno
sub
jmp
addb
jl
inc
sbb
or
les
add
adc
xchg
add
dec
es
inc
dec
pop
fisubl
dec
sbb
or
xchg
pop
mov
adc
aaa
sub
pop
add
mov
xor
xchg
pop
cwtl
mov
mov
ss
lahf
insb
outsb
dec
inc
test
sub
sbb
dec
mov
mov
pusha
daa
jb
mov
insl
sarb
dec
add
mov
or
test
sub
cmp
movb
jle
add
mov
imul
or
pop
add
mov
xchg
out
add
mov
pop
ret
adc
add
mov
xchg
cmp
xchg
lods
and
mov
mov
or
mov
out
testb
fcompl
imul
mov
xchg
xchg
rclb
push
sub
xchg
xor
ffree
fnstenv
jb
test
mov
sahf
stos
cli
adc
popa
inc
sbb
js
loope
xor
fs
aam
jo
or
fidivl
mov
sub
cmpsb
adc
lahf
and
aas
loope
std
dec
pop
push
add
cs
cmp
jmp
cmpsb
mov
jae
roll
inc
cmp
mov
shlb
adc
insl
or
insb
movsb
cmpsb
mov
lds
adc
int
adc
fmull
pop
lret
fsubs
xchg
dec
js
xor
dec
sub
jae
mov
pushf
pop
stc
xor
jae
outsb
ja
mov
jns
and
addr16
inc
shlb
push
push
jmp
aad
lea
xchg
aad
push
fisubrs
dec
or
pop
leave
inc
filds
insb
and
shl
rcrl
add
add
imul
mov
ss
aas
out
leave
aaa
mov
or
fucomip
aam
sub
mov
push
sbb
popf
loope
clc
adc
inc
dec
xor
mov
cwtl
adc
jb
cmpsl
and
dec
and
fnstcw
push
sub
pop
or
notb
sub
popf
lock
mov
idivb
sti
push
xor
sub
sub
fimuls
stos
jns
xchg
lods
icebp
pop
xchg
sbb
push
cltd
lea
or
push
and
and
dec
xchg
add
jg
test
mov
jae
insl
sbb
jmp
scas
mov
fmuls
cltd
mov
andb
fmuls
mov
sbb
push
jl
bswap
push
test
aad
orb
add
sahf
mov
xchg
stos
sbb
add
jp
jecxz
enter
hlt
insb
push
inc
and
loop
arpl
insl
xor
sbb
adc
loope
pop
mov
push
pop
fs
mov
dec
push
xchg
mov
sub
nop
jno
out
pop
gs
dec
xchg
in
es
fwait
mov
lods
jp
and
fdivp
or
dec
push
stos
dec
lea
and
mov
mov
xchg
xor
enter
cwtl
push
push
xor
and
inc
and
popa
aam
ret
fnstcw
test
mov
push
push
fcmove
add
mov
pop
fwait
xor
movsb
pop
into
push
sbb
out
xor
loop
lods
and
adc
out
call
mov
shl
dec
shrb
imul
pusha
adc
inc
sub
pushf
fldt
and
sbb
daa
xchg
lods
xchg
push
sbb
lods
or
mov
jae
push
push
stc
xlat
push
or
js
adc
or
adc
mov
push
dec
loop
rcrl
or
out
leave
jb
fistl
add
sarl
leave
les
pusha
out
jno
and
mov
mov
test
pushf
sub
xchg
outsl
sbb
nop
mov
scas
jp
and
and
xchg
or
adc
xor
push
ret
pop
xor
imul
mov
jae
popa
sti
xchg
push
dec
nop
add
jne
add
fldenv
push
testl
mov
dec
xchg
xlat
iret
rclb
ds
xchg
sbb
xor
mov
jne
enter
stos
jns
js
mov
loope
sub
or
cmp
mov
cmp
inc
or
add
pop
int3
mov
repz
pop
jns
add
lret
movsl
mov
jbe
push
jnp
lret
add
jl
test
dec
jle
and
mov
pop
cwtl
xchg
and
imul
and
sbb
hlt
and
sbb
loopne
lcall
shlb
mov
cltd
jecxz
push
cmpb
into
popa
or
lods
push
subl
push
and
scas
lea
mov
ja
push
xor
sub
sub
fnstsw
jg
fisttpll
sub
daa
add
xchg
jo
add
mov
cltd
adc
jp
notl
ja
clc
div
push
mov
jae
lret
jae
lret
out
daa
pusha
shlb
jo
imul
lock
add
repz
push
xchg
pop
in
cmp
test
test
shll
mov
subl
mov
push
ja
sti
cld
movq
into
sub
inc
out
sbb
add
jp
aaa
add
xchg
je
shl
jl
daa
jmp
fs
xor
bndldx
aaa
icebp
popa
cmp
repz
loope
in
jp
pop
addr16
inc
iret
int
xor
cmpsl
stc
insb
cmp
push
jl
imul
lds
mov
dec
stos
or
adc
pop
sbb
fcoms
fcom
cmpsl
dec
sbb
push
or
adc
enter
lea
mov
mov
push
or
gs
dec
xchg
rorb
pop
loop
jmp
add
and
push
mov
xorl
cwtl
fs
ret
push
dec
cld
push
jne
mov
xchg
and
pop
or
adc
js
hlt
gs
lar
iret
adc
sub
adc
cmp
cmpsl
xchg
subb
lret
jo
sbb
sub
mov
push
add
dec
xor
arpl
push
push
pop
ret
and
mov
add
inc
add
push
or
cli
or
mov
int3
jmp
in
xor
cmc
popa
pop
push
pop
push
or
add
mov
jnp
add
movsl
dec
xchg
out
pop
or
loop
add
inc
gs
inc
mov
and
cmpsl
push
cmpsl
add
imul
in
pop
mov
andb
jmp
adc
xchg
repnz
xchg
adc
or
sbb
push
jg
loope
and
mov
push
ret
into
add
mov
mov
pop
mov
negl
dec
xchg
shl
jae
addl
cmpsb
les
ljmp
jp
fadds
fisttpl
add
lret
mov
and
and
cmp
subb
mov
cli
xor
jle
mov
add
mov
lret
cmp
add
sti
movsl
or
aam
lahf
jb
ror
mov
cmpsl
push
pop
push
and
lcall
sbb
stos
push
lods
adc
andb
adcl
mov
add
imul
push
and
out
in
add
mov
pop
add
sub
pop
popf
cmp
add
or
push
insl
into
push
cmp
push
jo
sub
jb
out
add
mov
popa
mov
mov
xor
xchg
bound
movsb
lods
push
or
loope
add
popf
and
and
outsl
je
sub
pop
movsl
sub
inc
cmp
inc
icebp
add
shrb
pop
and
sub
pop
cmpsb
mov
inc
push
adc
mov
rcrb
js
dec
das
pop
mov
jo
mov
sbb
mov
and
or
dec
aam
cs
iret
lods
inc
dec
push
and
pusha
movsl
add
ja
ret
cmc
popa
lds
adc
ret
test
ret
adc
dec
mov
inc
cld
or
fucomip
pop
movsb
movl
inc
cmp
stos
xchg
xchg
iret
lret
mov
outsl
sbb
xchg
in
cli
push
outsb
and
enter
cld
lret
aam
arpl
sbb
lods
stos
mov
or
daa
insl
add
mov
and
rorb
add
loopne
es
adc
add
mov
nop
fidivl
jo
sbb
pop
arpl
dec
shl
stos
out
shrb
call
adc
xchg
lods
sti
subb
xchg
dec
xor
push
add
push
sub
mov
xchg
mov
mov
or
or
jl
mov
push
jge
test
xchg
add
inc
daa
cld
mov
push
jp
pmullw
xor
cmp
sbb
popf
jne
loope
inc
stos
pop
lret
lret
pop
ss
mov
push
mov
or
iret
out
xchg
pop
imul
rclb
and
sbb
ret
andl
mov
inc
lods
cmp
test
mov
adc
xchg
adc
outsl
dec
movsb
mov
adc
fs
and
test
imul
enter
xor
cltd
fs
inc
into
sbb
js
push
xor
test
rol
bound
add
dec
adc
dec
nop
dec
adc
aaa
scas
add
mov
cltd
push
sbb
loope
jbe
pop
sub
jg
mov
mov
jb
jnp
cmp
mov
ret
and
xchg
out
fimull
popa
xchg
xchg
loope
push
xor
sbb
pop
or
enter
xchg
inc
cmp
stos
or
push
insb
push
pop
and
xor
mov
push
iret
fstpl
and
push
adc
jl
xor
dec
pop
loope
psubusw
aas
push
push
xchg
lods
popa
sbb
xchg
xor
dec
mov
sarl
inc
leave
call
ss
add
stos
xchg
dec
xor
mov
cmc
cmp
mov
adc
loopne
xchg
and
sti
sahf
cmpsl
and
or
imul
das
into
lock
inc
pop
repnz
xchg
xor
sub
shll
xchg
mov
or
push
aaa
and
out
jmp
pop
jle
add
hlt
jae,pn
insl
mov
gs
mov
dec
int
add
loop
add
and
xchg
repz
cmpsl
movsl
add
dec
lret
mull
dec
jmp
aaa
push
or
dec
ret
or
aaa
add
mov
dec
jle
cmpsb
xchg
hlt
add
cmp
xor
sbb
xchg
fdivrs
cmpsl
add
push
mov
xchg
inc
sub
pop
and
and
fisubl
jae
dec
shrb
test
pop
loopne
add
into
mov
mov
arpl
cmp
ficompl
adc
and
xor
lock
push
insl
in
jl
push
cmp
jecxz
adc
mov
bound
aam
mov
or
and
xchg
cmpsl
xchg
ror
push
jl
add
lods
sahf
adc
ret
mov
mov
cmp
inc
movsl
and
movsb
movsb
sub
jne
or
fsubr
pop
lret
testl
pop
rol
dec
inc
fidivl
push
popa
faddl
pop
insl
test
jl
inc
sub
add
push
mov
std
call
cltd
sti
lock
cmp
xchg
ds
pop
rorb
pop
xchg
movsb
add
pop
cmpsb
lds
or
xor
inc
xchg
mov
adc
adc
iret
xor
cmpsb
ss
aad
stos
mov
outsl
test
xchg
mov
cld
or
lock
into
fnstcw
addr16
xor
adc
out
pop
inc
and
adc
nop
jge
jmp
inc
sbb
div
push
das
iret
aas
and
repz
arpl
jg
pop
sti
sbb
imul
es
sti
adc
iret
jnp
popf
mov
pop
or
sbb
pop
add
movsb
movsl
sub
xor
pop
rclb
sbb
pop
dec
mov
mov
push
sub
scas
xchg
jmp
ja
mov
ja
add
add
jecxz
jecxz
aam
jmp
scas
mov
and
push
push
fdivl
lods
or
xor
ja,pn
cmp
xchg
adc
ss
fndisi(8087
xor
mov
dec
lods
pop
addr16
scas
inc
insb
inc
sbb
imul
jge
adc
loope
add
aaa
mov
push
sub
jo
pop
and
adc
test
rcl
inc
outsl
in
xor
mov
sbb
gs
fldl
icebp
adc
inc
mov
test
cmp
sub
rcrl
push
ja
mov
sub
bound
pop
add
sub
jmp
push
movsb
pop
icebp
cmp
fidivs
js
xchg
inc
scas
jg
jg
add
mov
repnz
and
pop
push
pop
dec
inc
pop
and
dec
je
test
loope
movsl
ret
xor
adc
cmpl
and
push
and
js
fbstp
push
popa
cmp
add
icebp
jb
das
xchg
xor
add
and
mov
and
and
add
and
loopne
adc
movsb
push
les
adc
leave
mov
push
test
pop
scas
add
gs
add
add
add
lret
xorl
jne
and
jp
adc
adc
mov
dec
xchg
mov
push
into
add
and
mov
scas
xchg
cli
fiadds
clc
daa
addr16
cwtl
rcll
or
push
add
addr16
inc
xchg
and
nop
or
lods
rorl
lret
arpl
data16
sub
jg
and
fdivs
mov
sbb
lods
fidivrl
and
cmp
or
or
or
mov
jle
xor
pop
sub
push
call
iret
or
sbb
dec
ljmp
cmp
xchg
pop
sub
jae
fwait
jo
or
jo
sub
pop
cmp
shll
push
add
psubsw
push
pop
adc
mov
jecxz
loopne
cmp
mov
imul
cmp
jmp
mov
inc
xchg
popa
mov
iret
lcall
ret
jne
movsb
mov
dec
in
add
cmc
mov
in
fcom
cmp
stos
mov
mov
jae
and
pop
mov
add
push
stc
addb
sti
xchg
sbb
in
mov
js
ja
mov
sub
sbb
mov
or
adc
cltd
fistpll
nop/reserved
add
jnp
push
sub
or
lods
add
jno
jns
cmp
sbb
ss
nop
push
sbb
mov
imul
add
mov
test
jno
enter
ja
es
inc
cwtl
inc
es
test
push
xor
lahf
les
xchg
in
add
ror
lds
sub
xchg
inc
pop
mov
clc
jne
xor
inc
push
dec
xor
fwait
adcl
push
popf
mov
pop
es
push
stos
bound
popf
add
scas
xlat
adc
movsl
outsl
jnp
movsl
xchg
test
aaa
add
pop
push
dec
sub
add
push
jns
dec
test
mov
outsl
cmp
test
or
fsubl
je
sub
xchg
jmp
xor
add
iret
push
adc
rcl
sti
add
add
push
push
in
imul
bnd
lock
xchg
sub
dec
cmp
leave
inc
outsl
add
xchg
push
pop
adc
cmp
dec
js
push
adc
les
mov
mov
push
lret
push
sbb
jmp
imull
loopne
and
inc
pop
add
test
lea
inc
lods
cmp
adc
sbb
push
cmc
dec
pusha
ja
pop
push
daa
ja
jbe
dec
push
or
sub
inc
mov
insb
mov
push
pushf
mov
pop
jle
fadds
inc
sbb
add
ret
pushf
push
dec
mov
daa
pop
mov
or
inc
ffree
mov
pusha
imul
xchg
lret
iret
jbe
roll
sub
addr16
mov
sbb
push
sub
and
pop
push
lret
cmp
and
adc
mov
xor
cld
mov
inc
ror
icebp
or
dec
mov
nop
ret
cwtl
stc
bswap
xor
movsb
push
or
roll
pushf
popa
dec
jl
adc
shrb
jns
hlt
and
add
mov
sbbl
or
cmp
cld
add
push
icebp
and
mov
xor
sbb
adc
aaa
cltd
dec
int3
popf
pop
int
dec
push
jg
scas
test
jb
daa
xchg
popf
adc
jle
nop
jbe
iret
scas
ja
jp
orb
or
sbb
loope
lret
xchg
js
inc
jmp
pop
mov
test
dec
iret
mov
rolb
jp
outsl
mov
xor
add
or
push
add
xchg
mov
lahf
mov
inc
js
jl
dec
outsl
cli
mov
lea
dec
inc
pop
push
mov
push
push
fisubs
call
and
xchg
cmp
sub
clc
and
cmp
pop
pop
lods
imul
xor
or
inc
pop
adc
add
scas
leave
shll
movsl
lea
cmpsl
xchg
ret
ja
ja
sahf
ss
jo
dec
cmp
sti
cli
lock
add
imul
sbbb
jge
call
pop
push
out
mov
insb
popa
mov
add
movzwl
add
jle
pop
cmp
or
cmp
push
add
out
nop
addr16
fmuls
jo
outsl
jecxz
push
inc
test
xchg
lcall
pop
push
das
fnsave
icebp
les
mov
cwtl
sbb
ret
lods
adc
movsb
jle
loopne
dec
xchg
arpl
pop
mov
cs
push
cmc
inc
imul
pop
cltd
xchg
cmpsb
pop
add
es
sti
mov
push
or
xor
aas
aad
jp
js
jno
lea
les
mov
xor
das
cmp
pop
ljmp
popa
jmp
add
mov
sbb
and
or
pop
ret
mov
add
in
xchg
movsb
mov
inc
test
xor
pop
pusha
movsl
and
sub
cmp
jecxz
enter
and
adc
cmp
sbb
iret
incl
pop
in
ret
mov
dec
cmp
pushf
cmp
mov
imul
and
pop
mov
push
dec
cmpsl
ficompl
add
sbb
dec
jo
cmp
mov
ja
sub
sub
cmpsl
data16
aaa
mov
inc
dec
or
rcl
dec
mov
loop
ffree
mov
mov
dec
sbb
or
jne
mov
xchg
xchg
rcrl
xlat
push
or
push
movsl
pusha
dec
idiv
jmp
ss
sbb
movsb
aad
cwtl
clc
rorb
mov
jo
int3
adc
inc
lods
rcll
mov
lea
xlat
xor
add
dec
insb
inc
push
jecxz
rclb
jo
mov
call
test
cli
shrl
sbb
sahf
dec
add
in
fwait
mov
aam
xor
xor
pop
sub
sbb
popa
jo
js
and
test
adc
push
lods
sbbl
inc
sbb
inc
das
sbb
orb
push
leave
jnp
or
popa
imul
das
filds
push
loopne
xchg
ret
shrb
daa
inc
inc
lods
jecxz
daa
addl
orl
dec
or
test
mov
cmp
and
fsubl
and
mov
fstpl
mov
and
xor
pop
sbb
sahf
icebp
outsl
dec
push
into
add
pop
stos
mov
xchg
sub
rolb
jns
pop
fnstcw
into
push
outsb
xchg
cmp
cmp
and
movl
mov
cmp
adc
add
std
mov
sti
jmp
sbb
addb
sbb
add
movsl
add
mov
vmovlps
stos
rorb
cmp
dec
and
adc
imul
mov
jbe
xchg
fcompp
pop
push
add
bound
ss
lods
mov
mov
xchg
push
mov
jge
lahf
adc
out
xor
sbb
xchg
xchg
dec
and
xchg
mov
addb
pusha
sbb
ja
dec
mov
or
andb
jp
cmp
mov
clc
xor
xchg
lret
jo
lods
adcb
jo
inc
sbb
mov
mov
inc
pop
xor
mov
lahf
pop
loop
loope
mov
and
ja
adc
add
shrb
push
addl
jg
sbb
data16
fstps
xor
popa
lods
daa
icebp
pusha
jb
push
mov
lods
sub
push
add
cmc
cltd
testl
out
aad
cmp
test
push
out
enter
sbb
and
cmc
mov
das
lea
rcrl
or
add
call
fstps
cmp
in
pushf
or
jp
mov
mov
shrl
lcall
sub
lock
mov
cwtl
and
int
add
sahf
add
xor
add
fisubs
sub
das
loopne
inc
dec
add
xor
mov
add
cmp
stc
test
enter
jno
mov
pop
xchg
ret
pop
orl
push
and
movsl
dec
jecxz
loopne
pop
xor
sbb
or
xchg
or
pop
xchg
mov
jecxz
sub
xor
imull
add
sub
sbb
pop
dec
or
bound
cmpsb
and
or
dec
outsl
icebp
or
add
test
mov
pop
ret
fbld
movsb
faddl
ds
and
and
lea
stos
loope
ret
stc
and
xchg
test
pop
or
xor
and
add
jmp
cmpsl
adc
cltd
inc
mov
pop
add
repnz
cmc
ss
mov
je
insb
cmp
mov
mov
popf
mov
addr16
ret
and
ffreep
mov
pop
pop
out
xchg
rcll
jbe
fmul
dec
adc
lret
jbe
hlt
call
aaa
fs
jbe
adc
dec
cmc
repnz
ss
sbb
adcb
and
xchg
mov
lods
cltd
es
out
cmp
xor
insb
inc
adc
out
call
mov
ret
xchg
addl
jl
jecxz
dec
test
mov
cmp
pop
outsl
xchg
loope
cwtl
fwait
sarb
dec
leave
pop
call
jo
mov
mov
push
or
xor
ret
ror
inc
in
sub
mov
leave
cs
call
sbb
or
jp
push
pop
dec
xor
pop
jo
pop
xchg
mov
push
pop
dec
das
xchg
xchg
pop
outsl
movsb
or
es
loope
xchg
in
fists
mov
jne
lods
xchg
xor
and
pusha
mov
add
hlt
subb
pop
inc
cmp
loop
out
jae
cmp
andb
add
in
pop
or
inc
push
dec
int3
ret
shl
sub
sbb
and
inc
xchg
outsl
push
ljmp
dec
outsl
std
ficomps
and
or
dec
pop
push
push
adc
popa
test
jmp
mov
sbb
call
dec
jnp
xchg
shlb
scas
pop
push
stos
test
jbe
adcb
enter
scas
add
jno
jecxz
mov
jp
push
jecxz
cmpsb
repz
je
not
lea
or
iret
xchg
xchg
out
add
fcomps
push
add
iret
xchg
sub
xchg
xchg
gs
mov
fldenv
dec
orl
pushf
cmp
mov
push
pop
and
and
dec
es
test
ds
jp
adcb
subb
cmp
sbbl
mov
xor
mov
fldt
push
imul
cmp
lcall
fimuls
int
xor
cmp
add
pop
or
pop
xor
and
xor
inc
xchg
icebp
dec
inc
sbb
dec
iret
and
cmc
add
inc
or
push
push
fiadds
jnp
out
add
dec
scas
xorl
and
jmp
sub
into
add
add
and
shll
jne
mov
xchg
shlb
or
leave
nop
sub
pusha
int3
mov
leave
push
mov
inc
jl
pusha
lods
jno
push
pop
cmp
cmp
cltd
ja
pop
pop
inc
xlat
outsl
outsb
or
sbb
scas
jmp
arpl
je
add
movsl
jmp
jp
js
sbb
stos
jbe
fs
xchg
pop
je
addr16
pop
pop
stos
pop
jae
xchg
push
sbb
inc
nop
in
cmp
jo
scas
jge
ljmp
xchg
push
repz
and
add
cmp
jle
xor
and
add
add
cmp
mov
mov
lock
xor
scas
dec
shrb
jle
mov
fsubs
sbb
add
lods
mov
or
pop
mov
lret
xor
fwait
xor
jnp
mov
fsubs
enter
ja
xchg
dec
aam
mov
push
sub
and
loopne
inc
dec
aaa
adc
sbb
adc
es
aaa
inc
jmp
dec
xchg
das
fists
movsb
mov
sbb
adc
push
xorl
in
jne
mov
sbb
jnp
pop
mov
ret
mov
roll
lods
or
or
lods
in
xchg
dec
mov
lods
jmp
xor
jnp
repnz
jb
mov
xchg
movsb
in
sub
dec
inc
mov
push
cmp
sbb
cmpl
xchg
or
sar
pop
push
insb
in
cmpsb
mov
or
add
xor
push
adc
loope
loopne
mov
push
popf
push
add
je
add
mov
addb
push
add
cld
shrl
jmp
xor
int
dec
ret
ss
mov
mov
or
mov
insb
push
insl
mov
and
popa
adc
jmp
test
rclb
stos
daa
xor
mov
rolb
and
adc
xor
xchg
dec
fists
movsb
rcrb
jle
subb
daa
popa
icebp
fwait
and
es
mov
ja
in
xor
or
xchg
ror
scas
sub
cld
add
addl
add
lahf
daa
mov
mov
insl
jno
adc
or
add
mov
xchg
mov
sub
outsb
test
inc
xlat
fimull
push
xor
and
xor
mov
leave
add
jmp
ret
mov
dec
mov
jae
imul
shrl
sub
movsb
lret
mov
push
hlt
inc
movsb
aas
stos
or
inc
xor
push
loopne
sbb
inc
ja
push
shlb
movsb
movhps
cld
jmp
in
push
xchg
call
pop
leave
sbb
rcr
int3
and
jb
fwait
pusha
cmpsl
lods
sbb
and
sbb
outsb
shrl
cmp
orl
xlat
dec
repnz
cmp
or
sub
mov
jecxz
les
lds
jle
add
cwtl
jle
add
nop
or
lods
add
repz
sbb
and
jns
notb
cmpsb
iret
in
add
add
xchg
das
cltd
xor
push
rorb
out
push
mov
add
and
adc
nop
ret
leave
jno
pop
mov
xor
jnp
push
movsl
xor
and
cmpsl
rorl
ror
jmp
cmc
or
sub
adc
je
add
andl
inc
jle
xchg
movsl
adc
inc
or
sub
add
add
pop
lods
ds
sbb
lret
add
and
push
xchg
mov
js
sub
aaa
hlt
cmpsl
add
shll
sub
ret
aaa
inc
cmp
int3
mov
push
pop
scas
add
push
imul
or
push
jo
or
inc
dec
sub
mov
or
sbb
daa
push
stos
sbb
aam
iret
je
movsl
pop
inc
test
jns
push
mov
in
loope
pop
xor
inc
rolb
test
pop
add
outsl
xor
insl
push
hlt
andl
repz
inc
roll
cld
sub
cmpsl
ja
adc
mov
sarb
push
rorb
fbld
mov
push
mov
nop
add
dec
fidivl
imul
movsb
movsl
push
ret
mov
or
xor
adcl
shll
mov
inc
sarb
dec
pop
sub
cmc
outsb
sub
int
arpl
loopne
inc
clc
loop
addl
jo
mov
or
xchg
sub
and
rorb
sbbb
add
xor
add
or
inc
fisttpl
pop
xlat
jo
xor
mov
sbb
mov
loop
sbb
scas
jo
lret
loope
test
cmp
jl
and
or
pop
or
xchg
into
lods
inc
popa
loop
add
xchg
inc
es
mov
adc
stos
mov
push
adc
movsl
jno
dec
sbb
dec
test
test
ret
sbbl
movsb
insl
test
adcb
push
div
xor
push
dec
push
cwtl
dec
mov
and
xchg
inc
pop
int3
push
jae
and
cmp
repnz
mov
push
and
les
dec
sub
test
push
je
or
test
ret
nop
pusha
or
or
imul
rorb
sbb
outsb
enter
jecxz
push
nop
arpl
xor
xchg
lock
rorl
ja
dec
add
cmpb
xor
xlat
xor
add
add
pop
or
adc
mov
mov
mov
mov
aad
inc
push
jl
mov
sbb
cmp
iret
and
in
movsb
gs
adc
cmpsb
add
xor
test
fs
cwtl
movsl
shlb
xchg
outsl
lcall
jns
out
or
fsts
xor
mov
mov
cmp
lds
mov
push
cltd
repnz
sbb
lea
push
mov
sub
xchg
cmp
sub
xchg
fdiv
scas
fwait
mov
lock
jp
std
sbb
shrl
lock
xor
jl
test
xchg
pushf
gs
xchg
gs
xor
mov
sar
movsb
push
sub
adc
adc
jmp
mov
movsb
cmpsl
mov
mov
xchg
sub
pop
lock
pusha
movsl
jmp
pusha
sbb
mov
jo
dec
scas
mov
mov
xor
xchg
shlb
cld
gs
dec
and
push
and
outsl
sbb
cmpsl
cmpsb
push
push
jge
ljmp
xor
adc
xor
arpl
fisttpl
sub
gs
jmp
outsl
pushf
push
push
mov
or
jo
mov
xadd
push
test
adc
in
sahf
push
sbb
ret
les
andl
mov
or
push
loopne
xor
xor
loopne
js
cs
out
or
outsl
and
sub
xlat
push
jno
addb
fcoml
iret
outsl
add
pushf
pop
add
aaa
js
cmc
sub
fisttpll
mov
sbb
sbb
dec
push
cli
add
inc
rcrl
and
cmpl
addr16
cwtl
add
ret
push
add
or
xor
inc
cli
add
adc
sahf
xchg
jbe
or
aaa
add
pusha
dec
outsb
or
inc
testl
add
gs
orl
inc
in
push
and
fdivrl
xchg
fisttps
or
dec
mov
icebp
pop
push
xlat
insl
cltd
pop
iret
pop
divl
sub
les
push
adc
or
inc
out
and
addr16
pop
sub
push
cmpsl
fwait
les
add
nop
mov
movsl
js
pop
adcl
addr16
adc
or
xor
sbb
inc
pop
and
vphaddbq
pop
sbb
mov
leave
leave
out
stc
testl
inc
dec
push
out
cwtl
jl
imul
add
and
jns
and
xchg
adc
ret
and
shr
imul
aad
or
adc
test
adc
sub
sub
add
dec
sbb
iret
and
lret
pop
mov
mov
inc
and
lods
cmp
pushf
adc
push
dec
ret
inc
push
repnz
xchg
push
jp
mov
mov
xorl
mov
je
cmp
mov
lret
imul
dec
inc
aaa
mov
cwtl
enter
rorb
orb
aas
dec
jmp
mov
shlb
fcom
xchg
flds
mov
inc
test
rorl
lret
sub
mov
or
int
mov
mov
loop
addr16
jo
loope
inc
ja
sub
aaa
fisubrl
and
add
dec
lret
rcl
push
in
clc
insl
dec
xchg
std
push
jp
push
and
andl
fs
inc
mov
ret
mov
jecxz
adc
sbb
insl
in
dec
inc
leave
mov
enter
lods
stos
add
das
outsl
and
ss
jne
dec
sub
push
dec
out
push
faddp
fwait
ret
and
add
stos
mov
mov
scas
mov
sbbl
test
jl
popa
jb
scas
jb
push
add
ret
add
sbb
mov
and
add
fstl
je
frstor
sub
int3
pop
push
sbb
test
lahf
mov
adc
and
mov
pop
lahf
leave
sbb
xchg
add
cmp
mov
pop
pop
inc
or
and
pop
cld
sub
xchg
ss
into
jp
xchg
and
pop
or
test
xchg
js
sahf
insb
push
jo
sub
test
xor
repnz
out
mov
mov
loope
test
bound
call
xchg
add
sub
cmp
arpl
movsl
rolb
lods
mov
mov
mov
stc
mov
pop
out
sbb
sbb
loope
mov
dec
mov
punpcklbw
mov
iret
lcall
xor
fmull
mov
pop
rolb
sbb
mov
push
outsl
lods
adc
cmp
out
rolb
fiaddl
loopne
jno
or
cltd
mov
jno
dec
call
lods
xchg
and
or
adc
enter
cmp
or
mov
dec
sub
je
in
inc
dec
fcoms
bound
dec
jp
jge
mov
jae
sub
mov
and
pushf
mov
ffreep
adc
test
pop
lods
adc
add
inc
lock
sti
sub
jmp
arpl
sub
addr16
aam
adc
sbb
xchg
dec
cmp
and
and
in
adc
adc
ret
or
cmp
int
orb
popa
pop
mov
sub
jge
add
ss
mov
xorb
mov
add
pop
js
mov
or
adcl
sbb
aam
pop
mov
push
sub
test
rorb
fs
push
sbb
add
ficomps
xor
pusha
mov
jns
sub
lods
add
jmp
sarb
mov
lods
ss
mov
and
add
stos
rclb
sti
in
xchg
pop
xor
cltd
push
dec
pusha
push
add
sub
fiaddl
push
pop
cmpb
test
and
add
mov
sub
xlat
adc
add
faddp
mov
leave
xlat
stc
mov
mov
addr16
or
sti
push
mov
insb
cli
lds
and
movsl
and
jo
pusha
es
lcall
and
lods
ja
sbb
push
add
push
cmpb
outsl
mov
pusha
jo
hlt
sbb
cmp
shlb
daa
sub
daa
fiadds
leave
jne
popa
cmpsb
test
add
lods
fimull
adc
lods
cmp
add
add
push
push
call
sub
nop
xor
jno
fldt
pushf
pop
cmp
push
sarb
add
sub
cmp
fiadds
ficompl
shlb
int
ss
ret
data16
popa
das
pop
and
mov
repz
adc
fisubs
add
push
shrb
std
add
aaa
and
and
sbb
jl
mov
call
and
mov
cmpsl
inc
xchg
xor
mov
push
stc
test
ret
incb
sub
dec
pushf
add
mov
jge
shr
movb
cmp
sub
pop
shlb
pusha
das
sub
push
push
es
xchg
pop
addr16
dec
push
cltd
mov
fildl
in
add
scas
data16
lar
pusha
mov
sbb
insl
and
jnp
lods
shrb
mov
pop
xor
push
mov
push
add
loope
inc
scas
jo
mov
aaa
pop
inc
add
scas
add
add
push
pop
sub
inc
add
push
ret
push
add
pop
mov
and
les
insl
dec
es
out
and
int
mov
or
rclb
inc
cmpsl
in
inc
dec
add
pop
inc
pop
fiadds
add
push
sbb
push
cmp
add
add
or
push
subl
inc
sub
push
adc
and
fsubl
mov
subps
push
cltd
sub
pop
add
cmp
adcb
add
mov
bound
push
add
gs
mov
dec
mov
bound
sbb
add
in
adc
pop
pop
xor
les
rorb
pop
inc
pushl
jno
enter
add
mov
icebp
in
adc
lret
pop
aaa
pop
addl
popa
punpcklbw
andl
dec
sbb
pop
pop
aaa
sbb
add
add
mov
repnz
jo
mov
mov
in
and
scas
mov
mov
loope
sbb
jecxz
scas
in
add
sub
dec
and
and
xorl
pushf
add
add
sahf
sbb
pop
addl
subl
movsl
xor
cwtl
sub
mov
mov
ret
add
iret
dec
adc
mov
add
testb
xor
add
fmul
sub
div
pcmpgtd
aaa
and
rolb
add
movl
cmp
mov
dec
xchg
lock
daa
add
or
or
xor
cmpsl
xlat
xor
nop
mov
pop
leave
or
dec
popa
cmpsb
and
add
add
add
stc
and
pop
addl
stos
popf
sbb
fildl
or
mov
clc
addb
jnp
push
sbbb
mov
pusha
test
jne
adc
pushf
iret
dec
orb
push
in
loopne
dec
push
movsb
add
ja
mov
mov
sahf
jns
or
je
or
mov
aad
gs
push
and
int
test
scas
dec
inc
sbb
and
lds
ret
add
or
xchg
orb
out
cmp
stos
push
jge
pop
popa
cmp
jge
inc
rorb
jbe
movl
adc
inc
sub
sub
fldt
xchg
add
in
loopne
add
insl
xchg
mov
add
test
sbb
jp
cli
imul
or
in
xor
scas
lods
fcomp
lret
int
loopne
call
fcoms
or
mov
push
imul
dec
or
or
push
xchg
sbbb
push
add
adcb
lret
popa
mov
popa
sbb
mov
jmp
dec
adc
jnp
insb
sbb
mov
mov
mov
sub
mov
sub
xor
mov
jmp
pop
ret
add
je
lods
add
clc
cmp
add
out
mov
inc
xchg
pusha
or
cmpsb
rol
inc
mov
add
fwait
lea
add
push
add
insb
aaa
dec
in
roll
mov
repnz
shl
cmp
int
ja
sub
loope
addb
scas
aad
xor
dec
and
je
jo
cmp
ja
cmp
pop
xchg
jo
jge
jns
inc
or
mov
roll
mov
push
ret
pop
sahf
mov
mov
jmp
xchg
jnp
dec
add
addr16
xchg
inc
mov
popf
roll
and
roll
popa
dec
pusha
mov
les
mov
and
insb
add
sbb
repnz
mov
pop
mov
mov
test
push
mov
popa
push
sub
inc
push
in
mov
roll
fisttpl
cmpsb
xchg
adc
jne
cmp
lcall
xchg
fsubs
lods
ret
sub
mov
lods
and
and
add
mov
imul
in
arpl
and
push
test
imul
jle
sahf
sub
jo
loopne
xchg
mov
sbb
into
dec
movb
cmp
ja
aam
sub
das
scas
int3
push
ret
adc
gs
rol
xchg
inc
and
dec
and
pop
out
inc
push
mov
fs
in
jne
mov
lock
in
lock
sub
nop
rcrb
ss
lcall
orl
fdivrs
push
cmc
stos
ret
and
cwtl
add
jno
dec
dec
ror
xchg
out
or
xchg
jo
add
cmpsb
push
test
add
push
sahf
cmpsb
inc
les
jge
or
hlt
push
in
push
sbb
fisttpl
sub
ja
xchg
pusha
cli
shlb
add
psubsb
cwtl
cli
sub
mov
mov
pop
cmpsl
and
xchg
add
inc
adc
pushf
cmc
sahf
and
stc
fisttps
sahf
or
mov
dec
fwait
call
das
or
or
sub
add
mov
jno
mov
mov
xor
aas
sbbl
rol
loope
add
dec
pop
sub
je
mov
push
cmp
adc
repnz
mov
inc
lods
adc
dec
adc
sbbb
sub
add
shll
jno
jbe
pop
add
mov
sbb
lods
jmp
enter
mov
dec
ljmp
data16
pop
mov
ds
pop
xor
imul
pop
test
test
lret
push
test
push
dec
js
and
outsl
mov
leave
sub
sub
or
lret
sbb
dec
addl
pop
adc
add
aas
in
cltd
push
add
mov
addb
icebp
movsl
xor
dec
sub
fmuls
fld
rorb
mov
xchg
jnp
test
xchg
iret
adc
push
lret
sub
jmp
adc
push
sub
into
fisubrl
jg
mov
cmp
dec
sub
sbb
xchg
daa
jge
fimull
push
inc
xchg
arpl
cltd
add
mov
sti
xor
mov
xor
mov
mov
add
imul
shll
and
inc
int
jne
dec
scas
cmp
jmp
mov
dec
hlt
push
xchg
jbe
inc
imul
add
mov
add
sbb
iret
mov
cli
test
loop
lods
std
xor
ja
pop
inc
js
movsl
dec
dec
sbb
pusha
cmp
sub
movsb
sbb
inc
push
out
jne
xor
mov
daa
xor
into
pushf
push
mov
subl
cmc
xchg
xor
pop
cmp
or
pop
addl
sbb
stc
js
test
push
cmpsl
mov
inc
arpl
sarb
inc
push
xor
out
cmp
add
loope
jo
outsb
enter
fnstcw
cmc
mov
sub
inc
and
mov
adc
inc
lds
cltd
es
sub
jb
xchg
add
adc
inc
das
test
pop
lods
mov
hlt
cmpsb
add
mov
rorb
ja
mov
addl
idivb
stos
dec
inc
es
and
jns
push
subl
int
mov
inc
and
jg
es
sbb
ja
loop
pop
adc
sub
das
inc
mov
add
sahf
sbb
insb
adc
sbb
xchg
mov
xlat
pop
and
add
or
lea
adc
or
add
lahf
sub
popa
push
cmc
xchg
jg
add
or
mov
dec
add
cmp
lcall
ret
xchg
mov
and
or
aas
inc
lods
xchg
lret
out
sahf
inc
loopne
mov
mov
pop
or
mov
mov
mov
inc
repz
push
cmpsb
ret
mov
test
or
or
sub
pop
xor
fnstenv
cwtl
add
xchg
hlt
dec
push
mov
inc
sbb
cmc
mov
inc
jl
outsl
xchg
dec
dec
and
pop
clc
mov
pushf
mov
insl
inc
mov
pop
dec
fwait
adc
inc
push
lret
xor
imul
in
sub
cmp
dec
dec
imul
popf
dec
push
test
xchg
or
mov
insl
fadd
iret
ja
and
adc
movsl
imul
sbb
stc
inc
ljmp
movsl
and
or
adcl
out
mov
fucomip
cwtl
xor
rorb
adc
sub
push
add
adc
pop
fs
dec
xor
ret
or
xchg
or
or
movb
mov
fbstp
jne
stos
popa
pop
ja
sub
sbb
dec
xor
adc
je
ret
popa
shrb
cwtl
cld
inc
lcall
mov
or
mov
push
push
push
out
mov
or
mov
sbb
stos
lret
pop
in
xchg
xor
jnp
sbbl
sub
dec
adc
mov
push
add
jbe
popa
arpl
and
rorl
push
add
dec
push
fwait
sub
int3
je
add
sub
lahf
mov
rcrl
and
test
add
rclb
cmp
mov
sbb
bound
es
insl
mov
insl
jecxz
lret
cmc
int3
scas
push
mov
add
inc
mov
imul
push
push
jo
dec
iret
shrd
xlat
cmp
cs
sbb
pop
cmp
sub
jns
push
adc
icebp
xorb
adc
jb
adc
inc
xchg
cmc
jo
mov
jns
pop
shll
cmpsl
push
lods
add
rcll
mov
xchg
clc
dec
sub
sbb
flds
inc
add
push
and
js
add
mov
aad
xchg
push
and
mov
cmp
mov
popa
loope
ficoms
jmp
xor
jp
add
mov
pop
les
dec
inc
pop
cltd
jp
jp
mov
imul
cmpsl
and
push
movsb
lcall
adc
stc
add
test
xor
and
ljmp
fadds
dec
rol
arpl
bswap
cmp
scas
inc
loope
pop
pop
pop
push
icebp
test
sub
pop
lods
mov
lcall
bound
xchg
jecxz
jnp
add
test
sbb
xor
jbe
cwtl
xor
inc
or
rcll
mov
mov
cltd
jno
les
pop
cmp
into
add
xchg
xor
xchg
lods
push
adc
sub
shlb
cltd
shlb
mov
or
aaa
nop
or
je
or
pushf
pop
mov
dec
pusha
add
scas
xchg
cmp
int3
nop
mov
cmpsl
or
or
and
pop
mov
shl
cmp
pop
mov
sub
gs
or
jne
pushf
es
mov
xor
cld
popl
mov
mov
push
xchg
fcoml
add
and
sbb
call
inc
mov
mov
popa
mov
push
or
loopne
jae
push
jo
repz
nop
fcmovbe
xchg
adc
inc
enter
dec
nop
enter
mov
add
jo
inc
sub
cmp
pop
xor
xorl
cwtl
mov
aad
int
xchg
mov
sub
or
pusha
pop
in
pop
popa
xor
add
andl
gs
add
dec
dec
dec
aaa
push
pop
inc
or
or
xor
mov
mov
or
test
inc
cmp
adc
or
dec
and
lret
or
xchg
cmpsl
adc
xchg
cmp
aas
ret
je
movsl
std
jne
scas
pop
mov
mov
or
aaa
movsb
out
dec
cs
daa
daa
add
rcll
sbbb
push
aaa
cmp
inc
add
push
mov
and
fs
leave
xchg
jo
mov
and
cs
mov
iret
sbb
mov
mov
inc
sub
lsl
imul
pop
push
ret
repz
and
and
shlb
dec
adc
aas
je
xor
ret
std
inc
in
fildl
pop
and
vpshlb
movsl
add
mov
and
movsl
lret
cmp
and
xor
popl
jno
insb
lret
cmp
add
arpl
pop
leave
loope
dec
pop
adc
ret
insb
fisttps
mov
add
xor
sbb
repz
pusha
fs
shrb
aam
adc
call
jns
imul
jbe
lahf
xchg
andl
stc
fs
test
es
jae
xchg
test
jg
stos
jmp
adc
mov
add
pop
push
testb
pop
pop
pop
imul
jecxz
sub
cwtl
xchg
pop
idiv
inc
loopne
inc
dec
push
jnp
fcoms
out
addr16
add
int3
or
outsb
lahf
loopne
mov
ja
sub
out
adc
jbe
jo
adc
inc
sub
push
addb
or
xchg
push
sub
dec
add
pop
cmp
pop
sub
and
nop
add
outsl
test
cmp
test
pop
or
lds
es
cmpl
aaa
xchg
inc
cmp
gs
sub
dec
test
ret
daa
ret
sub
xchg
push
lret
sub
iret
pushf
and
stc
addb
in
sub
inc
fmuls
or
sbb
stos
or
xlat
hlt
pop
test
out
pop
into
inc
es
popf
mov
test
mov
insb
mov
sbb
ret
mov
mov
sub
fildl
fbld
or
test
popa
push
add
addr16
movsl
xorl
test
adc
add
adc
cmp
fiaddl
pop
mov
mov
add
ds
add
shll
scas
adc
push
fdivl
and
shlb
movsl
and
popa
daa
test
or
sti
sbb
jbe
mov
add
data16
add
roll
push
fdiv
xchg
outsl
adc
addr16
inc
or
or
ret
mov
or
mov
xlat
scas
sti
jl
movsb
add
jae
push
pop
mov
jmp
sbb
sbb
lods
iret
faddl
pop
imul
lods
add
sbb
jge
push
rol
mov
jecxz
xchg
cmp
shrb
cltd
lods
sub
mov
dec
loope
jo
arpl
push
fsubrs
mov
and
sarl
sbb
fistpll
dec
mov
add
shrl
sbb
mov
and
in
pop
mov
scas
movsl
lock
sub
add
rcll
mov
outsb
push
in
mov
or
cwtl
adc
stos
mov
inc
fmull
adc
jp
addb
cmp
inc
mov
pop
cmp
rcr
and
dec
and
movb
insl
pop
mov
rolb
insl
ds
sbb
inc
clc
cltd
inc
push
jge
dec
inc
imul
into
inc
sbb
fmuls
pusha
mov
lret
pop
in
dec
sub
mov
aaa
inc
pop
dec
loope
adc
mov
xor
cmp
sub
dec
and
mov
test
fld
mov
sub
fldcw
or
and
mov
push
sub
jo
mov
cltd
scas
jecxz
mov
fwait
xor
mov
test
dec
mov
cltd
lock
mov
add
mov
push
jae
push
sahf
out
jbe
daa
pop
rorb
mov
aaa
lock
inc
mov
and
pop
inc
adc
push
mov
js
inc
mov
jp
xorb
imul
scas
adcb
dec
loope
dec
rclb
je
shr
jge
jb
and
xor
insb
pop
or
movsb
ja
jae
jns
je
mov
ss
jnp
jns
and
mov
push
cltd
ret
mov
or
and
hlt
or
popa
movl
jae
push
arpl
adc
jns
sbb
jno
jo
dec
hlt
jge
sbb
mov
enter
and
faddl
push
inc
int3
add
add
or
invd
dec
and
pop
fstl
fstpt
push
mov
push
jp
lods
adc
test
pop
inc
dec
xchg
adc
mov
fs
in
or
push
adc
loope
cmp
push
ja
or
rcrb
inc
loop
push
mov
ret
or
jns
test
ret
scas
lea
add
adc
in
add
mov
push
jb
in
rorb
jl
and
test
add
cmpsb
test
stos
and
dec
imul
outsb
or
push
cmp
push
sub
sub
negl
push
fidivl
cltd
repz
xor
xor
and
pop
loope
add
mov
lcall
xor
add
mov
xor
insl
les
sub
out
lcall
sub
mov
inc
cmp
inc
sub
std
repz
ret
mov
pop
push
repz
ret
ret
scas
mov
mov
push
les
shlb
out
cmp
dec
subb
in
repz
jb
addl
pop
dec
adc
sub
sub
and
test
lods
mov
cmp
sub
mov
inc
popf
pop
add
xchg
pop
pop
mulb
daa
sub
adcb
and
jo
add
lcall
adc
iret
in
xchg
jns
xchg
and
inc
nop
das
sbb
xchg
je
jnp
xor
add
pop
aaa
or
add
pop
adc
pop
push
cmp
sarb
daa
mov
arpl
sub
aam
scas
aaa
dec
push
mov
mov
and
sub
or
pop
pop
repnz
shll
add
or
add
fcoml
sbb
and
jno
add
outsl
inc
rclb
orl
lock
insl
les
icebp
sub
rolb
cmp
push
int
je
adc
pop
cltd
sub
mov
lock
xchg
cmp
push
arpl
add
cs
pusha
or
sbb
push
das
ret
add
cmp
imul
sub
icebp
test
popa
mov
fadds
jns
jo
jne
dec
jmp
cmp
in
dec
lock
xchg
jae
clc
xor
dec
sbb
cmp
int3
push
ficoms
xor
outsl
add
leave
ret
cmp
inc
bound
test
fmuls
fildll
addps
popf
lods
cmp
add
fwait
pusha
xor
mov
mov
rol
je
lds
push
xchg
sub
fxch
adc
sbb
loop
ret
mov
gs
jl
mov
add
call
push
inc
aaa
add
mov
add
push
pop
jno
sub
out
das
sub
jecxz
add
cwtl
dec
cmp
lods
and
les
inc
dec
flds
cmp
paddusw
xchg
sbb
repnz
and
adc
arpl
dec
outsl
ficoms
cs
fiadds
jp
lea
daa
hlt
add
adc
mov
cmp
enter
sbb
cmp
or
test
push
add
fildl
xor
mov
xor
cmp
add
sbb
roll
sbb
xor
sub
mov
sbb
mov
aas
mov
push
add
cmpb
push
fadds
pop
popa
lea
mov
pusha
push
adc
es
shll
or
out
push
xchg
cmp
push
dec
or
pop
jnp
jno
and
add
mov
in
fld
and
div
and
dec
fst
ss
test
mov
pop
mov
xor
in
sbb
adc
popa
subl
mov
sarb
push
mov
mov
arpl
cmpb
fidivl
xor
or
pop
push
bound
leave
cmp
ljmp
jnp
pushf
xchg
cmp
pop
mov
sub
inc
stos
in
push
iret
dec
sub
pop
jo
lods
fwait
xchg
add
adc
call
icebp
xor
inc
arpl
loopne
shll
addl
lret
xor
pusha
popa
das
push
add
jecxz
das
sub
adc
popa
xchg
adc
or
sub
je
pop
jb
or
rolb
or
adc
xchg
fwait
das
rcrb
repz
sub
sahf
mov
aas
sub
js
shrl
scas
mov
loope
stos
out
and
lods
adc
loopne
and
ss
scas
push
dec
push
push
xor
mov
xchg
mov
inc
xchg
xchg
andb
add
xchg
jne
cmp
aaa
test
pop
mov
adc
and
daa
and
jno
dec
stc
and
cmp
inc
jp
xchg
dec
xor
dec
leave
push
mov
sarl
fidivl
mov
lret
add
jbe
and
aam
add
stos
inc
in
push
or
loope
dec
fwait
adc
dec
rcll
cmp
das
add
mov
xor
dec
xchg
add
mov
mov
fildll
pop
add
imul
insl
loope
mov
add
or
add
stos
sbb
insl
add
and
xor
or
and
popa
fadds
push
cmp
add
add
xor
pusha
loope
adc
int3
int
out
ficoml
jne
push
addb
popa
mov
or
jl
or
add
jo
xor
add
testb
sub
xor
int
sbb
add
jbe
insb
icebp
iret
mov
xor
leave
pushw
shrb
test
sbb
lock
xor
jo
sub
aam
adc
inc
add
scas
ja
pop
aam
ret
shlb
mov
lock
rcr
addb
fcmovnb
mov
add
addb
imul
nop
cmp
dec
xor
push
push
or
es
loop
push
push
pop
call
cmpsl
out
mov
or
sub
add
inc
cli
xor
sbb
xchg
pop
lcall
inc
test
adcb
das
jecxz
fwait
mov
pop
inc
jge
mov
or
or
mov
adc
int3
mov
sbb
shll
cmp
adc
and
xor
adc
or
or
addr16
ret
stos
mov
cmc
pushf
sub
cwtl
mov
vpsllq
jecxz
sbb
fisubl
lock
ss
sbb
adc
shlb
cmpsb
sti
mov
ret
imul
cltd
fwait
push
pop
mov
fbstp
pop
pop
sbbb
comiss
test
sub
aas
movsl
add
xchg
es
movsl
dec
xchg
xchg
aad
and
cmp
mov
xor
xor
or
xor
pop
add
push
and
movsb
xor
loopne
or
jp
mov
inc
fcomps
mov
xchg
stos
jae
jo
bound
inc
test
xor
scas
aaa
into
and
in
mov
ja
jbe
add
lret
and
inc
inc
gs
mov
nop
ss
mov
jbe
in
or
mov
adc
fldl
mov
inc
xchg
or
inc
pop
and
sbb
mov
cmc
cli
sub
stos
test
lods
and
push
add
lret
or
adc
jo
mov
sbb
dec
cmpsl
jecxz
cmp
adc
xchg
add
or
test
push
dec
add
stos
repnz
jp
sbb
cmp
pop
in
pusha
push
sbbb
sub
or
mov
cmpsl
push
js
jnp
and
es
add
lods
imul
cmpsb
xor
adc
rolb
adc
xchg
xor
adc
inc
pop
cmpsl
pop
and
fildl
push
jo
xchg
mov
add
push
push
adc
and
sbb
cltd
ja
jnp
jecxz
int
lds
xor
push
pop
xor
inc
dec
inc
pop
imul
jae
xorb
push
and
ret
pop
aam
inc
inc
insl
pop
imul
data16
imull
mov
mov
push
nop
lea
pop
leave
sbb
popf
movsl
outsl
sub
jns
push
inc
mov
daa
nop
cltd
xor
mov
testl
push
adcb
rcrb
pop
xlat
jp
movsb
loope
dec
ja
add
cmp
std
scas
and
sahf
iret
les
lods
push
scas
or
or
mov
mov
loopne
js
insl
loope
cs
pop
lahf
ret
or
cmp
shrl
dec
mov
xor
adc
push
push
adc
das
sub
xchg
mov
push
push
je
add
insb
dec
mov
sub
inc
dec
add
mov
and
and
dec
test
jne
test
movsb
cmpsb
mov
test
sbb
call
cmp
inc
push
fs
push
shrl
and
inc
inc
dec
lret
ja
aaa
cmp
xchg
sub
inc
outsl
dec
inc
aas
add
int3
popa
pop
mov
and
add
sbb
push
add
xchg
arpl
and
imul
dec
jno
and
dec
pusha
dec
push
add
or
fmuls
mov
test
ja
inc
stos
outsl
icebp
jl
stos
mov
dec
sub
push
or
jns
push
outsb
movsl
mov
jnp
dec
cltd
add
sahf
push
sub
lods
loope
sub
pop
ss
test
inc
mov
mov
daa
and
sub
jmp
or
sbbl
push
cmp
adcl
cmp
jl
jae
sbb
sahf
les
mov
cmp
scas
idivb
sub
repnz
dec
mov
add
mov
sbb
mov
jb
movl
imul
or
adc
mov
or
dec
add
test
lea
push
sysexit
push
sbb
bound
pop
pop
and
mov
test
gs
fdivs
and
xlat
add
cmovne
xchg
test
mov
gs
out
movsl
mov
pavgw
cmp
sbb
loopne
lds
push
xor
mov
loop
and
outsb
fwait
push
push
les
xchg
pop
divb
aam
test
xchg
gs
mov
aam
pop
xlat
addl
mov
in
loopne
dec
andl
iret
jb
inc
xchg
mov
sub
in
adc
mov
inc
test
adc
push
pusha
loope
out
push
add
inc
add
imul
pop
xchg
add
push
sub
mov
inc
or
movsb
out
iret
adc
xchg
mov
scas
and
jb
loope
xchg
jge
or
pop
mov
test
jmp
inc
cmp
in
mov
das
sbb
pop
lret
insl
adc
jbe
sbb
sti
xchg
jo
loope
sub
sbb
sbb
inc
push
mov
outsb
xor
and
out
lea
dec
or
jle
sarl
add
ss
dec
mov
mulb
sbb
gs
dec
dec
mov
add
loope
fstps
outsl
push
mov
adc
mov
adc
cmpsl
sub
push
ret
mov
and
cli
loope
adc
or
pop
mov
loopne
mov
jmp
or
cmpsl
icebp
test
dec
insl
jecxz
rclb
pop
jb
rcrb
xor
sbb
and
lcall
mov
fidivl
mov
insb
mov
sbb
pusha
pop
insb
mov
adc
test
stos
call
inc
add
cmp
cmp
out
insb
dec
cmp
jge
sahf
adc
stc
xor
adc
jns
aad
xor
fsubs
in
test
cmpsb
cs
add
popa
insb
fsubs
test
arpl
sbb
add
lahf
sbb
in
imul
fisttpl
loop
and
mov
or
ret
xchg
or
adc
stos
add
popa
in
pavgb
jl
sub
mov
pop
leave
icebp
push
sbb
sub
les
popa
push
aaa
outsb
jnp
mov
scas
lea
test
push
sti
mov
dec
xor
xor
testb
sbb
icebp
jge
add
sbbl
ds
and
loopne
dec
xchg
inc
js
fnstenv
xchg
mov
sub
xchg
add
cmp
push
jne
test
jge
inc
and
push
add
js
inc
xor
jmp
sbb
imul
push
cltd
dec
jle
cs
inc
xor
push
pop
pop
movsb
xchg
das
dec
jnp
add
je
push
dec
mov
movl
rol
add
lea
adcl
or
jnp
lods
mov
sub
outsl
jmp
sub
sub
inc
inc
stos
pop
mov
jmp
sub
inc
dec
rcrb
sbb
adc
pop
dec
mov
pop
aaa
movsl
inc
and
iret
es
inc
xor
enter
pusha
test
cltd
loopne
adc
aas
push
inc
fs
mov
fsubs
cmp
outsb
ljmp
mov
sub
ja
mov
mov
mov
cmp
dec
mov
mov
in
iret
sbb
and
xor
add
daa
std
xchg
sub
and
sub
xchg
testl
rolb
push
sarb
stos
xchg
inc
lahf
xchg
aaa
and
cltd
pop
inc
fildl
scas
rolb
fldenv
pop
dec
inc
sbb
flds
sbb
push
mov
jp
arpl
int
pop
movsl
adc
push
pop
shl
lea
adc
bound
insl
cmp
mov
dec
jmp
stc
adc
inc
lret
sub
pop
leave
jnp
mov
js
push
inc
sbb
cmp
pusha
lods
imul
or
xchg
xchg
lahf
into
bound
xchg
or
add
cli
addr16
inc
dec
jl
pop
sbb
inc
enter
push
stos
daa
loopne
mov
repz
adcl
sub
add
cmpsl
jns
into
fmull
out
fcompl
adcb
dec
push
xchg
mov
pop
int3
adc
jns
fidivl
add
cmp
cwtl
hlt
or
lock
push
add
or
push
std
and
jns
loope
sbb
xchg
incb
pop
mov
lahf
push
pop
pop
daa
cmpsb
and
jge
ja
pop
jae
aad
push
xchg
jo
sbb
enter
lock
outsl
aad
add
aas
loope
push
rcrl
mov
aam
imul
fwait
imul
xchg
jecxz
sti
mov
cmp
mov
inc
test
iret
mov
enter
test
mov
xchg
aaa
and
es
cmp
nop
aam
add
iret
mov
lods
add
push
push
pop
imul
adc
popf
add
xchg
loopne
insl
push
shlb
popa
and
dec
add
pop
pop
cld
dec
jp
jmp
push
pop
dec
cmp
xchg
sub
sub
pop
icebp
out
adc
push
cmp
sub
lods
outsb
mov
and
hlt
ret
jecxz
jge
or
roll
push
sub
shlb
jp
sub
imul
add
mov
mov
das
add
daa
scas
and
add
xchg
pop
lcall
ss
adc
das
bound
mov
pop
push
and
test
shll
sub
cmp
subl
adc
daa
stc
sbb
ret
dec
fsubl
scas
test
scas
dec
mov
sbb
push
mov
cmp
jne
sub
mov
cmp
std
jge
push
push
add
mov
inc
pop
call
les
push
jae
iret
and
add
add
xor
int
shlb
aaa
add
mov
shlb
sbb
xor
pushf
les
push
inc
and
push
dec
loop
arpl
pop
mov
lods
pop
and
outsl
popf
les
dec
adc
aaa
adc
add
add
roll
mov
outsl
popa
push
scas
lret
lods
add
dec
dec
jge
mov
popa
mov
xor
add
xchg
pusha
mov
mov
out
ljmp
movsb
jnp
mov
test
xorl
daa
int3
inc
shll
push
and
ja
adcl
lcall
into
or
cmp
mov
js
movsb
inc
adc
pop
scas
xchg
inc
sub
inc
pop
xchg
in
sbb
pop
je
or
sbb
xchg
mov
mov
dec
add
ret
and
and
mov
adc
sarb
push
lahf
mov
cmp
mov
pop
leave
add
or
loopne
imul
push
dec
lcall
add
pop
mov
xor
mov
adc
xor
test
sti
add
add
out
repz
dec
aas
jns
and
rcll
push
xlat
insl
push
push
xchg
sub
lods
sbb
push
pop
pop
mov
or
fnsave
loope
cmc
imul
mov
inc
pop
adc
es
adc
push
scas
mov
mov
cmp
sub
pop
mov
mov
add
adc
pop
dec
bound
clc
mov
push
in
add
movsb
mov
lods
das
pop
mov
or
cmp
inc
movsb
rclb
dec
je
lea
cmp
call
mov
inc
lods
jecxz
stc
aam
jb
movsl
shll
add
inc
or
movl
adc
es
mov
daa
inc
sub
loopne
sub
mov
pop
cmp
or
arpl
ds
mov
imul
push
in
inc
in
les
add
xchg
cmp
pop
inc
pusha
adc
adc
dec
pushf
mov
rorb
add
jmp
jo
inc
insb
or
pop
pop
or
or
adc
ret
dec
loope
inc
fdivrl
adc
les
pop
and
imul
cmp
mov
cld
jmp
or
stos
push
mov
mov
push
jg
sub
sub
cmp
fiaddl
je
pop
or
mov
xchg
ja
push
sub
lcall
leave
cltd
filds
mov
bound
hlt
add
adc
dec
cmpsb
adc
test
pop
and
stos
lret
repnz
jl
mov
jg
dec
pop
test
xor
xchg
jmp
xor
cmp
mov
in
sub
jae
lods
sbb
add
pop
aaa
in
xor
and
cmp
inc
xchg
mov
ja
sbb
lods
cmpsl
push
cmpsb
cmpsb
inc
sarb
mov
xchg
and
inc
pop
and
or
add
push
xor
push
mov
and
and
add
mov
test
test
mov
adc
ret
sti
mov
out
arpl
iret
sub
xor
push
test
and
mul
mov
outsb
adc
lret
sub
test
inc
nop
cwtl
lods
stos
outsb
push
cwtl
mov
cmp
jmp
xchg
cltd
pop
lods
test
add
add
negb
popl
sub
fisttpl
inc
orb
jmp
inc
or
jbe
add
pop
sti
and
xchg
sbb
dec
loope
cmp
and
jmp
cmp
sub
imul
fistps
xchg
jne
jg
fisttpll
adc
add
xchg
mov
jae
cltd
add
mov
pop
and
sbb
adc
inc
adc
and
and
hlt
mov
mov
lods
xor
xor
pop
sbb
pop
fldl
push
cwtl
cmp
aad
in
mov
mov
xchg
nop
inc
add
rcrl
sub
pop
aaa
repz
ret
es
mov
fimuls
adc
inc
outsb
lods
movl
sbb
into
xchg
jae
mov
add
mov
xchg
mov
push
push
ss
fildl
lcall
xor
lfs
adc
or
add
add
es
add
loop
xchg
dec
addr16
and
jo
pop
add
popa
mov
mov
cld
mov
mov
outsl
sbb
and
mov
add
add
adc
daa
pop
mov
push
pop
fdivs
insb
ja
enter
xor
gs
add
cmpsl
xchg
or
add
and
add
push
inc
cli
lods
xor
mov
cli
dec
icebp
test
inc
mov
xlat
adc
ds
sub
sbb
js
and
paddq
sub
or
test
sub
inc
pop
mov
sbb
je
xchg
iret
das
ja
xor
dec
leave
cwtl
adc
mov
addb
jae
xor
test
add
lods
xchg
mov
scas
mov
lret
mov
setb
add
xchg
sbb
sbb
pop
js
and
shll
xchg
inc
dec
xchg
rep
push
jbe
pop
inc
sub
xorl
pop
movsb
icebp
mov
xchg
sub
test
mov
mov
sbb
xor
ret
popa
pop
divb
pop
mov
jnp
out
mov
sti
cmp
jbe
inc
mov
cmp
mov
adc
insl
loope
daa
jno
push
adcb
int3
dec
and
sbb
or
inc
pop
sbb
dec
mov
push
mov
jo
ss
addr16
test
sbb
mov
fwait
and
adc
mov
pop
scas
inc
jnp
mov
loope
dec
mov
lret
mov
adcb
push
data16
pop
pop
movsb
cmp
icebp
sub
icebp
add
fimuls
das
inc
xchg
pop
adc
xor
iret
or
lods
add
mov
lahf
jmp
insb
mov
mov
push
loope
cltd
xchg
inc
adc
lret
jne
fidivrl
add
pop
test
ja
fadds
je
push
pop
out
mov
adc
es
rcll
xchg
bound
xor
nop
jo
sbb
popa
mov
and
pop
outsb
push
xrelease
into
mov
iret
pop
lods
sbb
mov
pop
loopne
das
jbe
and
mov
xlat
call
ficompl
popa
pop
sti
in
test
mov
jge
nop
sbb
pop
stos
addl
aaa
test
repz
dec
pop
je
sbbb
mov
in
sub
aaa
lea
sbb
ret
jno
aam
adc
mov
push
movsb
mov
ret
add
xor
adc
sbb
pop
xchg
mov
loope
jg
sub
adcb
adc
and
loopne
test
jne
add
bound
mov
sbb
out
mov
mov
sub
les
pop
push
es
hlt
mov
popa
xor
test
iret
cmp
flds
punpckhwd
jne
xchg
sbbl
es
xor
pop
test
jmp
les
xchg
out
or
or
mov
out
pushf
push
or
jo
cmp
push
imul
add
sbbl
iret
pop
sub
jo
mov
adc
mov
add
mov
js
loope
es
mov
xchg
push
inc
jl
push
das
mov
sbb
int
mov
and
lods
aaa
inc
cmp
mov
int3
js
xchg
dec
xchg
loop
adc
nop
lock
ljmp
test
mov
mov
fistl
push
aas
out
and
add
loopne
push
jp
nop
mov
fld
mov
add
pop
in
shlb
mul
push
xor
mov
cmp
es
pop
pushf
iret
outsb
push
sub
mov
inc
dec
add
inc
sub
fsubrs
test
bound
btl
cli
ja
orl
iret
pop
xlat
cmp
pop
mov
xor
add
add
or
dec
adc
pop
stos
mov
add
pop
cpuid
jo
inc
outsl
dec
inc
in
mov
mov
hlt
adc
push
inc
fsts
adc
mov
ljmp
push
out
or
sbb
sbb
sbb
or
cli
subb
add
repz
cmpsl
aaa
movsl
push
sbb
mov
jmp
shrl
inc
cmp
jle
and
sub
lahf
scas
and
iret
and
pop
pop
sbb
pop
pop
or
push
pop
fdiv
mov
or
inc
xor
incl
sbb
rcl
jle
andl
xchg
pushf
mov
xor
push
popa
or
cli
insl
mov
xor
xchg
mov
add
xlat
xchg
lret
fsub
in
ret
push
leave
movsb
pop
insl
call
pop
orb
lahf
and
mov
cs
xchg
mov
adc
lods
dec
aaa
xor
je
mov
mov
dec
pop
and
adc
idivl
test
mov
pop
sub
jno
pop
popf
xor
aas
and
jo,pt
test
sub
ret
add
clc
icebp
pop
sbbl
mov
loopne
movsl
add
push
sub
jmp
jns
pop
sbbb
subb
loope
lods
inc
in
fadds
inc
js
jbe
pop
push
mov
inc
or
jmp
negl
inc
pop
call
and
js
mov
sbb
mov
fistpl
out
adc
arpl
sub
arpl
js
sub
and
mov
shlb
scas
in
cmp
adc
add
inc
pop
jnp
pop
loope
insb
test
iret
push
adc
mov
and
add
shl
add
arpl
adc
movsb
xchg
ret
and
add
push
jmp
lock
popf
shlb
and
push
loopne
jmp
push
rol
pusha
jbe
bound
cmp
test
xor
and
sub
lds
sub
mov
push
je
je
scas
dec
arpl
xor
nopl
push
and
pusha
int3
adc
jb
dec
pop
add
mov
or
or
fwait
adc
es
push
vxorps
add
out
and
xlat
mov
add
add
xor
push
add
push
idivb
enter
or
stos
sub
outsl
jmp
lds
or
sub
xor
nop
fldl
adc
lods
in
sub
hlt
add
inc
jmp
out
testw
mov
xchg
sbb
out
movl
sbb
or
xlat
push
cmp
or
test
mov
int3
xor
mov
movl
and
test
das
dec
jmp
mov
sbb
sbb
in
cmpsb
ds
adc
out
negl
and
xor
add
pop
xor
test
cmp
cmp
je
sbb
es
push
lods
xchg
inc
or
mov
fisubrl
inc
mov
push
sub
and
inc
nop
xlat
inc
scas
imul
ss
pop
repz
ret
xchg
lds
sbb
adc
push
loope
jb
add
add
in
lods
mov
push
inc
arpl
sbb
repz
sub
or
pusha
test
push
xor
shl
fstp
loopne
xor
push
jno
out
outsb
pushl
rcrl
xlat
add
lea
jbe
sub
xchg
adc
sarl
dec
das
test
or
in
inc
and
jg
das
cmpsb
ret
popa
roll
xor
xchg
stc
sti
bound
stc
iret
mov
sub
sub
xchg
das
and
jmp
inc
ret
sub
scas
lods
pop
add
add
xchg
xor
xchg
and
shr
aas
sbbb
cmp
push
sub
subb
or
fwait
sbb
xchg
rorl
pop
push
rcl
cmp
sbb
gs
je
inc
xchg
call
iret
or
push
push
imul
sahf
enter
and
sub
sahf
shrl
in
xor
icebp
lods
fcompl
mov
or
push
das
jnp
pop
pusha
shll
inc
movsl
stos
push
jae
fwait
add
mov
inc
add
scas
sbb
fwait
subl
scas
lods
mov
mov
mov
cmp
jae
lea
jo
push
das
mov
rcl
andb
cmp
push
test
shll
xchg
sar
sbb
insl
pop
mov
xor
xor
lahf
jmp
pop
xor
mov
inc
roll
push
or
sbb
adc
jmp
mov
sub
std
add
orb
xorb
pop
and
aad
jp
pop
test
fsub
fdivr
lods
test
enter
aas
add
add
fs
retw
mov
sbb
cmp
clc
cli
pop
ret
cld
jp
loopne
dec
mov
ss
add
inc
xor
adc
lods
pop
mov
pop
fisubrs
out
push
or
add
ret
xchg
movsb
pop
mov
mov
inc
inc
sbb
rclb
mov
pusha
pop
int
xor
shl
loope
leave
dec
mov
lret
push
out
jge
out
xchg
aaa
xor
cli
icebp
lods
fistps
andb
jne
shll
mov
test
lods
mov
jnp
inc
cmp
out
testb
xchg
mov
cmpsb
xchg
xor
mov
and
sbb
jge
lock
pop
mov
mov
xlat
inc
cmpsb
jmp
rolb
xchg
out
mov
out
sub
and
push
sbb
or
or
add
enter
arpl
add
lds
rclb
lahf
movsl
arpl
jecxz
add
hlt
addl
jo
int3
xchg
adc
or
pop
push
hlt
mov
cmc
inc
adc
inc
aaa
sub
ds
fldt
add
fsubrl
mov
sub
ljmp
in
add
cli
gs
movsl
sarb
lahf
push
and
or
es
movsb
aas
push
sbb
shll
popa
add
adc
and
push
jbe
fdiv
and
push
cmp
or
jnp
push
frstor
cmp
shll
fildll
mov
mov
fldcw
add
xchg
add
movsl
pop
lods
mov
sbb
hlt
jne
sub
repz
jge
es
gs
scas
dec
inc
push
ret
addl
xchg
loop
cmpsb
imul
into
les
pop
out
dec
dec
cmpsl
sbb
xorb
lahf
xchg
sahf
daa
subl
or
inc
add
mov
pop
and
push
fsts
insl
cld
add
mov
cli
or
stos
fildl
xchg
enter
adc
adc
lcall
sbb
rolb
popf
jo
push
dec
enter
movsb
fdivs
cli
cmpb
jp
and
ret
loope
out
pop
iret
cmp
enter
lods
add
mov
cld
dec
shrl
mov
add
ret
loope
sbb
lods
imul
aaa
adc
lcall
inc
daa
dec
xchg
add
les
xchg
es
adc
pop
jae
ret
cmc
add
lods
or
loope
ret
or
push
fstp
push
loopne
imul
add
xchg
sbb
xchg
adc
ss
rcrb
inc
repz
cmp
or
mov
imul
push
cmp
loopne
test
xorl
push
loop
dec
insl
jmp
xchg
mov
adc
pop
icebp
and
fistpl
cmpsl
sub
sbb
xchg
push
ja
enter
adcb
je
cmpsb
mov
mov
ficoml
es
loop
popa
negb
std
adc
or
sbb
cltd
loopne
add
xchg
ljmp
xchg
lahf
cli
fcoml
loopne
jecxz
loopne
aaa
shl
call
xor
sub
loopne
testb
inc
adc
pop
pop
push
lahf
mov
loop
inc
bound
adc
int
imul
sbb
add
movsl
xchg
push
mov
test
add
cmp
sub
popf
pop
rorl
and
popf
lcall
mov
inc
dec
incl
outsl
loop
lea
call
lods
jnp
sub
fwait
cwtl
cltd
nop
pusha
or
testb
iretw
cmp
inc
loop
jecxz
add
xchg
or
mov
pop
cmp
sub
or
jae
sbb
mov
dec
and
inc
test
ficoms
leave
lds
xor
add
shll
xchg
sbb
and
jmp
shrb
add
out
add
repz
lret
out
movb
rcl
adcl
jnp
xchg
daa
add
or
cmpsl
pop
scas
pop
lahf
iret
sbb
cs
popf
cmp
aaa
out
in
mov
and
add
scas
push
inc
mov
xchg
and
sbb
sub
mov
push
or
mov
gs
pusha
push
punpckhbw
jb
ds
das
mov
and
inc
cld
shr
sub
xor
aaa
sbbl
sub
icebp
mov
sti
aaa
imulb
pop
mov
xorl
or
sub
or
fisttps
loope
loopne
fwait
inc
jno
mov
pop
or
pop
pop
sub
daa
or
and
or
icebp
xor
inc
or
pop
xlat
or
addr16
jbe
xor
sarl
mov
adc
dec
clc
enter
orb
rcll
rclb
push
push
add
mov
bound
adc
mull
pop
adc
mov
fs
popf
push
add
push
and
xor
or
pop
fs
xor
pop
add
pop
jecxz
mov
test
sub
xor
xchg
add
iret
xorb
mov
add
cmp
push
push
push
sahf
push
xchg
stos
in
or
shlb
loopne
add
lods
in
add
mov
add
adc
sub
mov
call
push
push
fs
gs
es
xchg
into
and
mov
and
sub
shl
cmp
jo
loopne
xor
jle
inc
pop
jp
and
jne
mov
roll
mov
hlt
sub
xlat
push
out
adc
icebp
or
shl
shll
les
cmp
lods
xor
or
call
push
pusha
adc
push
call
sub
adc
pop
add
repnz
and
jne
addl
out
and
jo
jae
and
add
lret
and
test
ror
mov
popa
xchg
push
fstpt
jo
mov
jl
call
lods
lahf
js
xchg
jmp
test
ljmp
test
ret
adc
popf
cmp
add
xor
jmp
dec
inc
sub
cmp
jge
mov
add
push
push
pop
cmp
les
add
inc
js
cmpsl
add
inc
inc
pop
das
mov
cmp
mov
xchg
mov
xorb
dec
sbb
js
mov
inc
inc
stos
mov
or
ret
inc
fadds
shrl
or
push
es
jmp
movsl
pop
lahf
mov
es
ss
add
lods
sbb
stos
nop
js
jns
mov
imul
adc
stos
lret
cmovnp
fadd
mov
les
leave
add
sub
inc
mov
adc
sbb
mov
loope
mov
or
pop
mov
call
pop
xlat
pop
pop
enter
add
jnp
dec
aad
loopne
xor
adc
mov
jle
lret
out
mov
je
sub
loopne
sahf
mov
repnz
pusha
push
das
cmp
mov
fwait
outsb
je
cmc
lock
sbb
add
sub
fidivrl
jle
jmp
and
lock
in
ja
add
cmp
pop
push
hlt
mov
aaa
rclb
mov
or
xor
lods
lock
es
and
jne
xor
mov
mov
adc
sub
mov
stc
loop
dec
test
adc
sub
add
or
pop
enter
cmc
sub
or
fs
movsl
dec
pop
dec
test
sub
xchg
je
aad
inc
imul
sbb
mov
das
js
rclb
aaa
je
dec
adc
pop
jns
and
mov
xor
sti
mov
inc
js
fsubr
fsubs
sysenter
ljmp
in
cmp
pop
mov
bound
and
pop
stos
lret
pop
icebp
into
jo
mov
pop
iret
in
sbb
movsb
ja
lret
hlt
add
in
cmp
xor
sbb
xchg
scas
popa
aam
das
adc
inc
fstps
and
sub
repnz
adc
pop
ret
mov
push
pusha
mov
in
or
adc
mov
stos
cmp
or
movsb
loopne
mov
or
test
loopne
out
les
xor
pop
xchg
adc
adc
shlb
fs
fs
aaa
push
rcrb
inc
push
repz
sub
inc
add
or
jl
bound
fstp
or
leave
iret
push
movsb
pop
jbe
call
rcrb
xchg
jle
jle
inc
enter
cmp
mov
xchg
adc
out
dec
inc
inc
cmp
inc
sbb
adc
add
dec
pop
test
lcall
lea
cmpsl
xor
bound
xorb
and
dec
roll
and
dec
sbb
sub
push
inc
xorl
roll
add
mov
push
xchg
cltd
jle
add
scas
idivl
rolb
inc
bound
pop
lret
sbb
push
xchg
pop
test
insb
dec
sub
sub
sbb
push
add
jp
sti
jle
sahf
or
pusha
loopne
subl
fsts
lods
les
mov
mov
and
dec
mov
shrb
dec
repnz
mov
addr16
adc
push
and
lcall
adc
popa
nop
cmp
xor
rol
or
inc
or
mov
loope
in
add
mov
inc
cmp
inc
jnp
jne
add
movups
pop
add
xchg
sub
scas
xor
or
fmuls
movsl
push
add
nop
add
iret
sub
mov
ss
loop
ja
cli
mov
adc
cmp
sub
or
cmc
sbb
push
and
test
inc
sub
int3
jo
adc
inc
xlat
xchg
push
dec
or
jno
fcoms
repnz
inc
nop
pop
xor
lret
adc
mull
ret
pushf
outsl
add
rorb
or
sbb
jno
jno
mov
mov
sub
out
mov
cs
xchg
add
into
dec
fdivs
and
or
leave
roll
jmp
test
or
xchg
movsb
dec
outsb
push
add
ss
push
test
inc
mov
enter
imul
out
xor
test
js
pop
adc
testb
pop
movl
add
pop
cmp
xchg
pop
cmp
push
and
pop
adc
add
xlat
aam
xchg
nop
orl
xorl
inc
std
addr16
ja
cmc
jg
dec
xor
popf
scas
sbb
dec
ret
mov
or
mov
add
out
cmp
movsl
shll
pop
add
xlat
dec
add
test
jecxz
lea
pop
test
add
stos
push
xchg
add
imul
icebp
je,pn
sahf
and
jo
mov
pop
pop
or
or
xor
inc
sbb
movsl
inc
lds
xchg
push
cltd
pop
adc
and
shlb
adc
daa
loopne
daa
mov
xchg
shrb
fcomps
push
loopne
push
sbb
rorl
xor
add
mov
xchg
pop
icebp
ret
ljmp
add
push
mov
inc
cmp
out
into
add
int
add
jnp
arpl
jp
pop
and
xor
cs
rcrl
insb
loopne
cmp
xor
popa
jle
repz
insl
mov
mov
jne
jo
xchg
mov
adc
xchg
stos
dec
add
cmp
and
push
pop
rolb
add
adc
adc
dec
jo
and
cmp
dec
cltd
cmc
pop
dec
push
pop
xor
lret
mov
sbb
out
adc
xlat
clc
daa
lods
pop
mov
test
leave
and
scas
and
in
jnp
fimull
sahf
add
adc
imul
stos
and
jns
or
sub
pop
inc
enter
xchg
xchg
add
inc
popf
loopne
les
xchg
mov
push
dec
push
sub
shl
movsl
dec
js
xchg
pop
loope
mov
push
rcl
xlat
inc
cmp
pusha
lock
ret
or
mov
jnp
ja
das
mov
pop
fisubrl
aaa
mov
dec
mov
stos
jne
lods
inc
inc
or
add
shl
fsubrs
inc
scas
shlb
mov
dec
insb
outsl
sub
call
ret
cmpl
inc
xchg
lock
test
jb
addr16
and
pop
cmpsl
push
inc
mov
pusha
dec
jmp
xor
or
jo
and
inc
inc
sbb
xor
dec
push
mov
xor
call
je
test
rcll
mov
push
add
fisttps
push
xorb
wrmsr
int3
sbb
lds
test
jmp
inc
daa
sub
adc
mov
mov
add
push
aam
xlat
lods
push
enter
cmp
mov
push
addb
int3
lea
pop
and
sbb
je
pop
ja
rol
lret
sbb
and
xor
push
test
inc
daa
xor
fwait
cmc
jg
cmp
mov
adc
jge
jle
cmpsb
fisubrs
popa
jle
sbb
pop
adc
mov
fidivrl
icebp
sbbb
xorb
xorb
imul
adc
mov
jb
clc
inc
mov
rorb
adc
add
mov
and
jg
cmp
rolb
inc
inc
xchg
rclb
adc
stos
xor
fmuls
adc
mov
pop
inc
jecxz
out
imul
outsl
cmpsb
clc
mov
imul
push
push
lods
icebp
add
push
fdivrl
repnz
fucomi
lea
and
out
cltd
je
fs
and
mov
jae
cmp
jecxz
mov
mov
add
hlt
mov
or
add
adc
out
addl
push
lods
xor
repz
pop
addr16
in
jb
test
push
inc
or
ja
popa
push
sbb
cmp
adc
cli
mov
sbb
pop
ja
outsl
roll
pop
mov
lea
cwtl
add
les
cmp
roll
or
cmc
loopne
pop
mov
pop
cmp
cmovge
pushaw
int3
xchg
dec
js
fisubrl
adc
sbb
or
inc
dec
xchg
or
aam
sub
dec
rorl
sarl
add
nop
sbb
sub
lods
movsl
xchg
mov
pop
mov
sbb
push
ret
jge
dec
dec
and
pop
add
inc
jecxz
push
push
idiv
test
rorl
jmp
dec
inc
xchg
imul
loopne
loopne
fsubrl
cwtl
adcb
inc
popa
cmp
aad
add
rolb
fistpl
fistpl
xchg
pshufw
dec
add
cmc
inc
lret
mov
je
flds
sub
or
inc
push
adc
addl
dec
shl
jno
rcrb
popf
int3
xchg
or
adc
mov
or
ret
icebp
call
and
les
fsts
pop
mov
and
bound
jo
jno
and
orl
add
adcl
add
add
iret
pusha
mov
scas
inc
outsb
popa
and
icebp
inc
add
in
ret
test
lcall
cmp
mov
push
pop
test
test
stos
cmp
add
lods
repz
shll
sbb
jge
cmp
scas
push
in
and
subl
ja
lods
push
shlb
dec
cld
add
call
cmp
cltd
or
test
mov
push
in
ljmp
sub
mov
push
add
cmp
inc
pop
loopne
cld
push
test
sbb
outsb
push
and
scas
shlb
mov
mov
cmp
negl
mov
lret
adc
inc
mul
cltd
dec
movsl
mov
enter
inc
nop
orl
mov
repnz
mov
adc
cwtl
rclb
rcll
adc
or
mov
mov
jnp
xor
mov
roll
daa
clc
xor
xor
jno
inc
imul
mov
pop
popa
push
cmp
add
sbbl
ret
into
lods
mov
push
sbb
sbb
ret
xor
inc
add
or
mov
jmp
rorb
xchg
cmpsb
rorl
adc
lods
jmp
and
and
cmpsl
subl
fiaddl
adc
xor
jmp
shlb
xchg
jns
pop
mov
fimull
aaa
je
lock
xor
mov
cli
out
jecxz
shlb
sbb
arpl
clc
inc
andl
div
adc
loopne
test
loop
sahf
das
push
mov
jecxz
les
das
xchg
push
cmp
add
lock
iret
ja
sub
pop
aad
mov
ds
ljmp
xchg
and
fistpl
pusha
push
daa
arpl
loope
aam
in
outsb
rorl
jb
mov
or
std
inc
jae
xchg
sti
lea
adc
and
loop
pop
and
mov
mov
rclb
and
std
sub
subl
add
mov
push
dec
sti
xchg
icebp
xchg
xor
add
scas
test
sbb
rol
lcall
adc
daa
adc
push
movb
mov
pop
adc
cmp
dec
lahf
push
add
data16
sub
xor
fsts
aam
pusha
adcl
mov
test
loope
xor
fnstcw
sbb
es
add
xor
bound
pop
and
sub
and
dec
inc
dec
repz
hlt
aas
cvtpi2ps
inc
jns
mov
or
adc
scas
mov
insb
mov
push
jbe
mov
loopne
int
sahf
cmp
into
inc
mov
lods
movsl
mov
adc
rcrb
loope
xchg
fstl
js
pop
pop
stos
test
sub
push
add
inc
mov
xor
out
int
sbb
aaa
test
imul
cmp
lret
cmp
mov
inc
sbb
ljmp
inc
call
dec
inc
or
movntps
leave
or
aas
xchg
mov
loop
int
xchg
or
rolb
scas
inc
xor
sub
mov
rclb
test
and
adc
jp
pop
xor
lea
mov
pop
xor
fldcw
cli
xchg
mov
iret
xchg
jle
js
rcll
inc
mov
sub
mov
sub
dec
xchg
add
jl
loopne
or
fidivl
xorb
orl
imul
cli
xor
xor
gs
ds
movsb
cmp
adc
push
push
cmpsb
add
sahf
and
jne
adc
adc
lods
xor
jns
add
adc
popa
inc
mov
addl
mov
xchg
mov
pop
addr16
mov
xorb
adc
sti
ret
xchg
mov
jne
push
lahf
push
xchg
add
loopne
mov
mov
or
pop
orl
sub
mov
negl
sbb
das
mov
dec
lods
stc
popa
imul
mov
lds
and
add
rcl
add
lahf
push
sarl
push
cwtl
jbe
aam
aad
iret
cld
mov
dec
mov
and
push
t1mskc
jne
add
and
testb
mov
sub
gs
test
xor
xchg
fs
push
out
jbe,pt
sub
or
push
arpl
add
shlb
mov
xor
adc
test
das
in
and
imul
add
or
loopne
cs
out
minps
daa
pop
test
adc
sub
push
jo
aaa
mov
shlb
lods
adc
inc
push
jecxz
movsl
jae
push
cmp
jmp
shll
mov
add
push
mov
mov
movsb
inc
xor
jne
rorb
add
orl
inc
add
mov
push
fadd
jbe
clc
popa
sbbb
and
imul
shlb
add
or
mov
in
sub
cmp
mov
xor
jnp
inc
lcall
push
cmpsl
pop
out
iret
add
mov
mov
jae
cmp
push
and
xchg
test
xor
daa
pop
mov
out
addl
jecxz
icebp
movsb
or
dec
je
movhps
stos
mov
unpckhps
lds
mov
mov
mov
mov
mov
pop
repz
pusha
add
stc
out
insl
and
sti
pop
lahf
gs
sahf
fcmovnbe
cmp
sbb
pop
ficomps
pop
xor
pop
xor
fwait
push
mov
stos
sub
jno
cmp
cmp
imul
jnp
cwtl
lods
push
jp
movsl
fwait
pop
add
iret
jb
cmp
int
nop
test
inc
hlt
bound
mov
xor
adc
or
test
sbb
add
mov
test
loopne
daa
mov
sub
sbb
inc
push
lret
scas
loope
mov
inc
push
subb
lea
and
iret
bound
add
add
or
pop
shr
adc
push
and
rcll
push
jo
dec
or
movsl
popa
leave
add
mov
pop
shll
inc
scas
ret
ss
adc
loopne
test
adc
sarb
adc
lea
add
iret
adc
in
loopne
imul
in
aas
sub
aas
jmp
imul
push
xor
lock
subb
call
loopne
lods
movsb
in
add
add
rorl
adc
push
mov
adc
pop
sbb
fnsave
lahf
mov
outsl
scas
ret
sbb
ret
dec
add
or
fbstp
lods
lea
jnp
and
je
sarl
xchg
dec
add
ljmp
test
popl
scas
test
movsb
out
jo
inc
mov
or
jge
cmpsb
push
inc
mov
jmp
mov
mov
sub
aaa
rcrl
jb
lret
std
adc
insb
xlat
adc
test
lahf
and
popf
loope
stc
rcr
xor
jno
pop
pop
loope
xchg
dec
clc
xchg
test
and
mov
xor
aaa
inc
test
inc
inc
popl
cli
xchg
push
aas
push
dec
cs
repnz
call
mov
xor
jnp
inc
push
inc
pop
adc
xchg
pop
ja
jo
xor
movsb
mov
xor
data16
adcb
pusha
jge
jmp
in
and
lahf
xor
out
sub
subl
mov
and
jnp
or
and
popa
ret
mov
jne
push
cld
xor
xchg
jp
sub
inc
push
lahf
xchg
dec
movsl
xchg
test
cmp
into
movsl
and
cmp
xchg
pop
out
sub
call
add
pop
and
test
inc
insb
lock
push
jns
and
cmpsl
mov
xchg
test
test
jmp
imul
addb
mov
or
out
js
xor
inc
je
cmpsb
add
sbb
pusha
inc
mov
aaa
mov
scas
cs
dec
and
mov
add
sub
mov
or
cwtl
icebp
and
dec
add
and
jp
cmp
and
add
adc
cmp
loopne
cmc
mov
push
addb
and
out
inc
imul
pop
lds
inc
mov
or
fwait
sub
inc
imul
dec
adc
or
les
pop
in
xchg
gs
ss
test
addr16
loop
les
xlat
push
inc
in
movsb
outsl
or
jnp
test
push
mov
arpl
aam
mov
out
lret
xchg
push
cmpsl
push
jo
ljmp
adcb
bound
lds
mov
dec
and
sbb
push
xor
adc
aam
roll
sub
sub
mov
add
xchg
mov
add
cs
sarb
dec
sahf
push
push
xchg
cmpsb
mov
jns
pcmpeqw
lods
jo
dec
sbb
out
js
sub
mov
or
adc
stos
dec
sub
dec
or
push
adc
aas
xor
jp
repz
add
push
int
cmp
and
pop
xchg
sub
push
loopne
and
clc
fsubrl
jmp
dec
sub
xor
dec
sarl
pusha
icebp
movsb
sbb
sbb
sarl
sbb
das
pop
push
or
in
shll
ret
ret
ret
lcall
jne
sub
push
add
dec
xor
and
mov
aam
iret
mov
dec
in
xchg
mov
es
test
pushf
imul
push
pop
pop
mov
arpl
lock
jbe
push
jecxz
xor
leave
loopne
xchg
adc
sbb
cmc
hlt
ja
add
mov
cmp
bound
mov
push
jge
push
lret
aas
add
iret
mov
jbe
inc
add
push
bound
stos
lahf
aaa
pop
sub
sbb
pop
inc
add
stos
adc
add
sbb
ss
daa
add
jle
jp
es
jne
call
sub
inc
gs
dec
test
sbbb
gs
daa
fs
dec
inc
stos
sub
inc
push
add
inc
js
xor
xor
add
pop
test
les
add
ret
pushf
sub
andl
ret
push
xchg
pop
adc
mov
mov
leave
mov
and
popa
adc
inc
jmp
sub
push
inc
mov
adc
push
xor
xchg
inc
call
sbb
fisubrl
cwtl
inc
cmpsl
ljmp
in
mov
imul
inc
nop
ja
push
ret
or
cmpsl
cmp
adc
dec
adc
xchg
jp
lahf
mov
add
push
shlb
dec
or
clc
sub
and
push
dec
adc
jo,pt
adc
jns
leave
ret
rcll
jns
jb
mov
push
xchg
test
xor
fwait
xor
mov
in
das
vmread
sbb
pop
sub
add
sub
lock
xlat
and
mov
fld1
pop
mov
bound
fwait
testb
add
adc
outsb
and
cltd
out
ret
jle
shrb
and
and
addr16
and
xchg
sbb
push
sbb
jno
add
cmpl
mov
popa
mov
std
push
bound
mov
pop
pop
cli
or
jne
dec
sub
or
mov
or
loop
cmpl
and
adc
cmp
pop
or
inc
jp
out
xor
mov
pushf
inc
adc
adc
mov
push
xchg
stos
add
sti
test
in
sbb
imul
inc
jb
fildl
rcrl
jno
sti
jb
xor
and
xorb
loopne
fcmovbe
pop
fcom
je
lods
imul
ret
das
sahf
test
dec
arpl
fiaddl
xchg
push
mov
push
inc
mov
lcall
jmp
out
push
pop
movsl
adc
rorl
mov
lods
cmpsb
jne
lds
sub
jle
js
sbb
inc
fisttpl
jmp
pop
fdivrs
xchg
cld
mov
pop
popa
lods
adc
rolb
push
mov
jae
push
shlb
es
push
sub
or
out
xchg
sub
dec
stos
lods
and
pop
add
popa
or
out
jbe
addl
mov
push
push
mov
jbe
nop
mov
popa
ret
loopne
xor
add
push
xor
daa
xor
mov
sbb
add
mov
sub
iret
xlat
xlat
push
and
push
mov
ret
jb
mov
stos
movsb
mov
js
xchg
dec
in
jo
sub
mov
lea
pop
fmuls
lea
inc
pop
dec
call
xchg
jle
mov
mov
das
add
and
adc
jnp
fnstcw
mov
gs
clc
push
and
rorb
shlb
outsb
sbb
cmp
push
in
inc
xchg
xor
pusha
xchg
cltd
insl
mov
pop
cwtl
mov
jb
iret
rolb
sbb
lret
ja
add
sbb
lea
push
xchg
les
sbb
or
sbbb
test
inc
fisubrl
das
xorl
push
cmp
mov
inc
std
xlat
enter
sbb
fs
push
xor
orl
push
xor
and
or
jp
inc
ss
push
or
push
xor
dec
sbb
add
cmp
stos
pop
movsb
pop
lret
and
dec
jl
sbb
movsl
cmpsl
sbb
xchg
xchg
test
outsb
pop
xchg
stc
mov
dec
cmp
sub
xchg
and
and
aam
dec
sbb
xor
add
adc
test
ljmp
shll
inc
cmp
imul
lock
test
gs
jb
cmpsl
xchg
sub
stos
ljmp
dec
outsb
fldcw
gs
test
jb
addr16
into
adc
call
xorl
push
and
inc
movsb
add
xorb
mov
or
mov
adc
sub
dec
and
inc
ja
pop
out
add
cwtl
xchg
inc
or
adc
aad
cwtl
adcb
or
push
jno
inc
or
cltd
inc
inc
cmpsl
out
out
dec
mov
push
jp
sub
cmp
stos
sbb
dec
or
sub
fs
mov
popl
sub
cmc
dec
adc
xor
push
ja
pop
dec
out
inc
pop
cmp
pop
and
js
add
ficomps
adc
jno
dec
inc
test
adc
mov
jge
out
and
popa
xor
push
aad
pushf
pop
mov
add
gs
insl
sahf
insl
jns
ret
jns
add
cmp
popa
add
sub
mov
push
pop
mov
loope
dec
push
insb
cld
nop
mov
je
inc
out
push
fnstsw
inc
mov
insb
mov
pop
sub
mov
repnz
jge
push
mov
fisubrl
test
andl
mov
inc
add
cmpsl
or
mov
pop
das
sti
iret
sub
mov
lock
cmp
cmp
mov
or
adc
jge
xchg
lret
pusha
mov
les
std
and
int
repz
lret
jecxz
lea
xchg
sbb
push
dec
sbb
sub
jmp
add
lret
sub
mov
imul
adc
push
xchg
xchg
add
dec
or
cmp
iret
inc
outsb
push
sub
add
and
and
sbb
adc
xorl
lea
les
addr16
dec
push
dec
mov
or
adc
sub
popa
add
lods
imul
mov
or
push
iret
test
sbb
xor
add
enter
popa
pop
sbb
imul
fcompl
pop
sub
outsl
xor
jo
mov
sti
push
mov
sub
adc
ss
add
pop
aaa
push
mov
outsb
pop
fsub
jge
dec
ret
sbbl
xlat
std
or
cmp
sub
hlt
adc
pusha
std
subl
int
pop
sub
pop
cmp
or
movl
ret
or
pusha
out
and
push
icebp
pop
inc
and
dec
sub
xchg
mov
rorb
stos
add
fsubr
sti
pop
cs
dec
popf
xlat
aaa
xor
dec
aam
loopne
fisttpll
push
mov
std
test
andb
and
shll
xchg
cmp
nop
bound
addl
ret
test
popf
xor
daa
inc
stos
mov
xorl
pop
cmpl
mov
addb
ja
jbe
cmp
sbb
mov
rcrb
adc
fwait
or
loop
enter
cmpl
xchg
enter
jmp
add
cmp
inc
adc
ret
lcall
or
or
mov
cs
aas
out
xor
dec
and
inc
cmp
je
out
loope
or
and
cli
addr16
or
push
sub
jno
pop
and
inc
shr
pop
dec
cmpl
jmp
mov
arpl
jmp
arpl
jg
addr16
or
or
shrb
das
cmpsb
sbb
cmc
mov
and
xchg
mov
hlt
popf
imul
adc
ss
mov
pop
cmpsb
scas
push
add
add
mov
xchg
pop
rcl
xchg
gs
bound
or
push
dec
mov
mov
xchg
out
insl
mov
movb
mov
adcl
rcrb
push
shlb
cs
fnstenv
jb
jno
sub
push
inc
arpl
fisttps
ljmp
mov
aad
addr16
push
stos
or
pop
jo
add
sub
jno
inc
jbe
sbb
test
push
inc
stos
fcompl
bound
iret
sub
xlat
xor
cwtl
inc
push
mov
inc
in
hlt
addr16
enter
jo
jecxz
cmpl
movsl
xor
cs
and
xor
stos
out
or
or
movsl
je
imul
cmpb
lods
lock
insl
mov
std
or
test
mov
aam
fcmovu
test
xor
push
inc
aas
pusha
sub
pop
add
or
xor
pop
jo
pop
test
mov
push
test
adcb
nop
add
nop
dec
movsl
in
addr16
sbb
mov
mov
fs
adc
adc
fcoml
jmp
loopne
or
add
fadds
addb
rcll
ret
imul
sbb
and
aaa
dec
dec
psllq
cmpsl
das
xchg
ss
sbb
js
dec
xor
sub
dec
fisttpl
push
jge
cmpsl
js
and
mov
xorb
aad
jp
sub
dec
inc
sbb
fidivs
arpl
js
mov
add
mov
scas
xchg
cs
mov
mov
shrb
xor
push
ficompl
movsl
adc
rorb
loop
iret
cmp
flds
imull
mov
jmp
and
jmp
pop
cli
push
mov
and
ljmp
push
push
push
nop
cmp
push
push
ds
fdivrs
jne
leave
and
imul
inc
and
jnp
mov
orl
lret
shl
jl,pt
push
test
pop
fdivs
sub
mov
iret
add
or
fs
or
xlat
stos
jmp
inc
in
scas
push
js
insb
lods
fbstp
add
or
add
rcl
add
cmp
addr16
add
mov
inc
out
jmp
pop
mov
lea
repnz
lods
add
cltd
pop
fadds
stos
xchg
add
in
icebp
xorl
test
clc
jo
mov
xor
rorb
loop
dec
popa
mov
push
dec
mov
or
ds
fcmovu
lret
enter
xchg
inc
inc
push
sbb
jbe
rclb
adc
inc
fs
dec
movsb
repz
pop
fstp
inc
fists
pop
jbe
test
fadd
xchg
sub
inc
sub
sub
cmp
adc
jae
imul
mov
push
out
mov
push
push
cmp
ja
inc
or
repnz
add
loopne
push
rcrl
push
sbb
fildll
mov
fdivs
movsl
push
popa
jns
and
push
ss
dec
sub
pop
mov
add
or
sub
add
mov
jmp
lods
lahf
adc
xchg
dec
pop
gs
sti
nopl
pop
and
test
jbe
sbb
and
sbb
push
pushf
fsubs
sbb
dec
mov
add
mov
add
xchg
lock
dec
sti
ss
hlt
and
jecxz
dec
xor
lock
lock
loope
sub
ljmp
push
xchg
ret
or
call
inc
xchg
nop
dec
jp
push
push
or
lock
popa
xor
inc
lret
data16
jns
pop
aaa
or
cmp
mov
adc
out
inc
or
add
repnz
cmp
pusha
mov
push
mov
and
jnp
dec
rcrl
push
ret
dec
les
pusha
mov
popf
nop
sbb
rcrb
pop
sub
nop
loope
xchg
dec
stos
test
mov
xchg
sbb
pop
push
adc
clc
sub
out
loopne
add
pop
adc
cmc
add
fcmovnb
dec
pop
sbb
sbb
mov
inc
pop
lcall
or
inc
lods
scas
adcl
add
push
or
cmc
shlb
dec
popa
mov
add
sub
pop
sbb
test
add
mov
lods
add
aam
add
daa
stos
and
mov
dec
loopne
xor
adc
dec
sbb
sbb
mov
dec
jp
mov
dec
cmp
popa
xchg
int
fidivrl
das
arpl
jno
ja
into
mov
adc
insl
out
push
rcrl
jnp
jbe
fcmovnu
jge
xor
adc
push
mov
adc
sbb
mov
sub
ret
or
pop
push
dec
or
fbstp
or
xor
imul
loopne
ljmp
or
fisttps
add
xor
adc
adc
ret
lods
add
mov
insl
pop
cmp
inc
movsb
mov
dec
ja
fildl
sub
cwtl
fimuls
and
dec
fisttps
rcrb
rol
shll
pop
sub
fldl
push
inc
sub
or
inc
aas
sbb
sbb
pop
sbb
and
jmp
dec
mov
arpl
loopw
insl
add
enter
inc
sti
xchg
in
adc
xor
add
add
pop
leave
sbb
adc
add
add
dec
insl
jecxz
test
pop
inc
std
cltd
pop
mov
adc
xor
sub
repz
add
or
cmpsl
stos
rcll
rolb
push
rcrl
or
sbb
or
fiadds
sub
shlb
adc
add
sub
imul
movsl
add
popa
and
insb
nop
rcl
mov
out
xchg
push
xchg
sbb
fcomp
fmuls
adc
cmp
mov
push
test
cmp
dec
movsb
ret
inc
push
or
adc
pop
jle
and
pop
pop
ja
dec
adc
adc
sbb
xlat
xor
jo
stc
fcomi
mov
xor
adc
pop
and
subb
or
repz
fldenv
jbe
dec
or
push
leave
xor
pop
jp
stos
add
mov
je
pop
shlb
jecxz
stos
sbb
push
mov
inc
jne
pop
xchg
and
or
sub
mov
add
fiaddl
pop
dec
mov
cltd
and
jno
sahf
push
sarl
pop
adc
popf
mov
imul
fiaddl
cs
popa
in
push
daa
push
mov
imul
xchg
ja
inc
dec
jns
push
add
adc
xor
add
ffree
cmp
jg
mov
loopne,pt
iret
cmp
add
adc
fucom
je
inc
mov
inc
and
or
pop
jo
pop
xor
mov
xor
test
and
cmp
add
adc
inc
or
js
push
mov
call
popa
lds
rcrb
add
nop
sub
add
dec
in
ficoml
pop
rolb
adc
mov
ret
addr16
insl
ljmp
jmp
jne
cmpsl
mov
or
imul
ds
cmp
inc
sub
cltd
and
xchg
lahf
or
inc
mov
loop
mov
fildll
pop
imul
shr
push
dec
inc
dec
add
dec
push
mov
aaa
movsb
out
and
cmp
sbb
pop
es
pop
jbe
adc
fstpl
adcb
push
sbb
mov
in
pop
or
mov
pop
js
xchg
scas
addr16
sub
lds
iret
test
cmp
cmp
push
push
es
pop
mov
add
sbb
push
shll
dec
jecxz
sub
inc
mov
into
jmp
cmp
and
fs
dec
xor
adc
pop
fst
and
outsl
pop
rol
ret
pop
jnp
icebp
inc
add
push
cmp
xchg
inc
in
lret
dec
mov
jne
and
test
add
jo
into
lods
sbb
ret
jnp
das
pop
and
pop
xchg
inc
fcomp
fwait
pop
js
aas
loop
push
or
inc
jg
inc
xchg
and
je
adc
imul
pop
cmpsl
popa
inc
stos
lea
imul
and
fistl
or
mov
test
mov
sbb
mov
sti
lret
sbb
adc
jb
pusha
fs
mov
mov
sahf
add
pusha
ja
outsb
mov
cmpb
cmp
notl
and
xor
call
shll
mov
je
aam
push
mov
mov
cwtl
xlat
shlb
test
add
cmpsb
or
push
jne
sbb
adc
or
aad
add
xchg
data16
sub
fbld
daa
push
ds
bound
lods
or
repz
or
cltd
xchg
test
scas
adc
stos
jecxz
xchg
xchg
jbe
inc
jl
in
jo
dec
xchg
jne
xor
stos
arpl
cmp
mov
inc
jno
movb
mov
fnop
adc
inc
jae
jnp
repnz
xorb
sub
mov
movl
andnps
adc
aad
push
loopne
rcr
loop
ljmp
repz
inc
es
mov
sub
lahf
inc
test
enter
imul
sbb
add
inc
sub
ret
lea
pop
rcr
mov
dec
mov
loopnew
xor
dec
imul
add
into
ja
mov
dec
pop
dec
lea
fcompl
dec
arpl
xor
jo
cmp
mov
shlb
adc
sbb
ss
aaa
cs
aaa
loop
mov
jbe
add
rorb
ret
pop
pop
iret
dec
aam
or
jae
add
adc
lods
ss
push
add
push
or
adc
mov
pusha
pop
jecxz
mov
pop
cmc
add
push
pop
add
pushf
bound
lods
jno
jns
adc
mov
repz
pop
sbb
stos
and
ret
loop
mov
stc
inc
test
fcoms
or
xchg
movsl
aam
adc
adc
jne
push
sbb
loopne
lret
and
lock
mov
jecxz
jo
mov
xor
leave
jp
sahf
movsl
pop
and
icebp
dec
jle
jmp
sahf
push
cld
cmp
sub
cmp
or
sarl
lds
nop
jo
test
sbb
ss
arpl
adc
loop
pop
jmp
not
mov
add
sub
sub
imul
mov
fsub
sbb
scas
movsl
mov
add
sub
push
loope
fdivrl
ret
out
pop
add
jb
movsl
pop
fwait
sbb
mov
mov
pop
dec
inc
sub
cmp
and
popf
cmp
jne
daa
fsubrl
mov
sbb
into
les
aas
xor
aas
movsb
sarl
xor
push
cs
test
ret
fisubs
loopne
test
out
mov
xchg
leave
sub
cltd
jg
ror
or
outsl
test
testb
xchg
orl
inc
dec
loopne
je
fchs
fiaddl
inc
adc
mov
addl
arpl
inc
scas
out
mov
fwait
dec
sbb
fisttpll
inc
sti
fucomi
iret
mov
add
jmp
addr16
ljmp
push
push
xlat
es
fsubrl
mov
push
outsl
int3
dec
outsb
lea
loopne
add
add
jns
adc
loope
jge
xor
xor
imul
andl
sar
enter
xor
es
gs
xchg
das
jle
shll
mov
nopl
iret
jp
stos
xor
addb
sub
dec
pusha
dec
jo
xchg
popa
pop
loopne
sti
ja
sub
hlt
dec
mov
sub
push
or
adc
and
iret
xor
fcmovnb
push
jecxz
imul
sbb
leave
aad
bound
lods
cmp
or
orb
js
fwait
int3
out
sbb
jns
add
pop
test
add
call
int
daa
cmp
adc
in
icebp
inc
mov
test
or
out
xchg
adc
add
mov
cmpsl
add
inc
inc
js
mov
jnp
enter
jbe
ss
mov
lret
mov
addr16
das
sbb
stos
loop
cmp
hlt
lret
add
adc
mov
or
subl
rcrb
subl
movsb
rolb
cs
imul
sbb
cmp
shrl
xor
cmp
das
bound
jbe
sbbl
jmp
punpckhbw
mov
xlat
nop
lret
push
sbb
jns
mov
mov
sub
lock
sub
cmc
cmp
aam
mov
cmp
inc
mov
push
jg
or
cmpsl
ja
sub
sub
cmp
mov
daa
pusha
sbb
daa
fstpt
adc
mov
xchg
push
dec
stos
jbe
pusha
loop
outsb
sbb
jne
in
mov
dec
push
cwtl
call
or
mov
mov
sbb
jp
shr
test
fmuls
test
xchg
gs
pop
jp
add
jp
mov
aam
mov
dec
inc
inc
or
sbb
loopne
jne
daa
iret
test
out
mov
leave
paddw
fcoml
pop
fwait
rol
aad
xor
mov
xor
inc
mov
pop
xor
adc
or
or
addb
pop
add
loope
xor
pop
sbb
test
jmp
sub
outsl
sub
mov
mov
gs
adc
lds
aaa
add
sbb
rclb
cmpsb
and
sahf
test
jg
stos
sahf
mov
and
push
sub
inc
add
add
ficoms
jae
add
int
xchg
or
jecxz
and
pushf
sub
nop
push
mov
cmpsb
fadds
xor
xlat
lret
daa
cld
shlb
lds
or
lret
shl
jb
inc
arpl
inc
test
movsb
and
inc
xor
sbb
movsb
or
pop
add
in
xor
jb
inc
mov
mov
add
and
jecxz
dec
jnp
xchg
test
shrl
jno
or
pop
adc
fdivl
nop
into
insb
repz
xor
xchg
mov
or
add
sub
notb
das
lret
cwtl
jmp
cmp
xchg
icebp
rcl
sbb
lods
sbbl
pusha
daa
jne
mov
sub
orl
cmpsb
adc
imul
cmp
leave
enter
mov
icebp
pop
mov
aad
mov
arpl
push
pusha
adc
or
cmp
ficomps
add
outsl
cmpsl
jno
paddw
inc
rcr
add
mov
add
sub
push
test
cmp
add
xchg
std
leave
jp
and
cmpsb
add
iret
add
push
jmp
mov
std
fs
loope
mov
lea
daa
or
mov
sub
enter
inc
arpl
sub
xchg
inc
add
xlat
test
lds
stos
mov
or
and
and
sub
int
xchg
insb
into
das
lds
andl
lret
mov
jbe
push
loopne
bound
mov
sbb
ret
inc
ja
cmp
test
test
fistps
loop
iret
mov
std
pusha
pop
or
mov
jecxz
test
xchg
xchg
sub
jp
ftst
add
test
mov
mov
mov
rcrb
add
loopew
loop
sbb
das
movsb
insl
sub
xchg
jae
out
sbb
xchg
arpl
sahf
cmp
push
dec
and
mov
jnp
sub
add
shl
inc
dec
add
cmp
popa
adc
jo
push
and
shr
and
fisubrl
js
jecxz
lods
adc
ret
cmpsb
cmp
les
add
lahf
sbbb
add
xchg
inc
out
sar
add
cmp
fldt
hlt
adc
fistpll
aad
add
sub
jno
in
jns
and
pusha
into
add
add
popf
movsb
addl
sbbb
push
mov
mov
mov
sub
dec
cmp
xchg
mov
adc
and
inc
clc
push
mov
jmp
mov
xor
xchg
add
stc
cmp
push
xor
and
jmp
dec
and
adc
sub
inc
insb
rcl
fmul
add
fwait
ljmp
je
mov
or
xor
fmull
push
popl
push
jg
push
hlt
aas
iret
lcall
cmpsl
inc
push
movb
xchg
imul
or
jo
aad
loope
or
mov
in
or
outsl
and
test
ss
adcb
orl
and
jo
aad
rorb
cli
addb
add
pop
popa
sbb
call
add
rolb
adc
out
add
stos
and
ja
push
loopne
insb
stos
push
mov
cmp
call
mov
xchg
and
add
mov
test
stos
mov
rcr
sub
add
incb
out
cltd
push
ficompl
inc
out
popa
mov
mov
add
jecxz
std
nop
pop
movsl
pop
insb
inc
daa
cmp
cs
cmp
loope
inc
iret
jae
ficompl
cmovo
out
cs
pop
xor
add
shl
cmpsl
mov
shrl
loopne
test
pop
dec
xchg
push
xor
mov
add
fiaddl
push
add
stos
push
xchg
xor
sub
fimull
and
jl
lock
dec
mov
cmp
adc
xchg
rclb
adc
push
dec
inc
das
fcomps
sbbl
aad
out
stos
and
dec
sbb
js
or
mov
add
add
xor
pusha
inc
and
arpl
in
mov
xor
and
inc
lahf
inc
ret
das
int3
mov
xor
push
mov
adc
jmp
inc
jge
xor
xchg
mov
or
aaa
sbbb
xchg
jg
in
das
add
test
push
mov
xchg
or
jo
cmp
cmp
nop
push
mov
ljmp
inc
dec
mov
add
sub
lret
shlb
sub
push
sub
rol
xor
mov
orl
repz
std
fnstsw
lret
aam
scas
cmp
stos
fmull
pop
mov
fwait
jle
xlat
xor
loop
jl
es
cltd
mov
sbb
and
lcall
jle
adc
js
pop
nop
popl
test
inc
es
mov
out
std
loope
mov
aas
les
adc
push
nop
js
pusha
fwait
lods
xchg
leave
mov
scas
xor
jle
pop
fidivs
adc
out
pop
inc
jne
fnsetpm(287
movsl
xor
sbb
sbb
mov
es
test
jno
es
mov
ja
nop
push
push
lods
sub
in
cmp
call
cmp
enter
mov
cmp
dec
or
cmpb
sbb
fs
push
and
mov
inc
lods
mov
inc
ror
notb
xor
movsb
sub
xor
xchg
or
jle
jo
aad
xchg
pop
adc
add
lret
push
nop
imul
mov
jne
xor
cld
adc
jno
push
flds
subl
int3
push
xlat
xchg
dec
in
movsl
xchg
cmp
mov
mov
jp
or
nop
lret
push
jl
cs
int3
fbld
jo
pop
or
cltd
mov
or
add
xor
outsb
mov
dec
pop
aaa
jo
or
push
pop
jb
add
push
cli
and
jne
xor
xchg
ljmp
lock
add
test
push
sbbl
mov
and
imul
and
scas
mov
int
adc
pop
push
xchg
std
dec
pusha
imul
cli
loopne
pusha
movsb
mov
test
in
mov
and
xor
push
arpl
add
push
bound
or
roll
add
or
lahf
xor
mov
cmp
fstps
add
mov
mov
std
ret
and
dec
lcall
push
add
ret
sahf
ret
mov
dec
sbb
fsubs
mov
les
dec
pop
xor
aad
push
cmp
lods
aas
xchg
clc
ret
sub
xor
rclb
pushf
fcomps
mov
and
cmp
inc
aam
sbb
add
aam
jae
iret
aam
bound
add
lcall
push
ret
and
push
in
jo
repnz
lret
popl
gs
mov
int3
and
in
push
das
mov
adc
adc
gs
mov
mov
sbb
add
stc
add
fnstcw
mov
jecxz
clc
aam
jne
jmp
wrmsr
shl
lahf
lea
mov
mov
inc
sub
and
adc
sbb
in
mov
sbb
or
jno
jo
xchg
lock
enter
or
add
cmpsb
testb
pop
add
pop
mov
push
clc
fcmovnb
outsl
push
bound
xor
popa
mov
push
imul
xor
popf
adc
inc
cmpsl
iret
mov
mov
cld
ret
test
jo
dec
mov
lcall
inc
pop
shll
mov
loope
push
fwait
lods
inc
add
adc
jge
gs
pop
cwtl
ret
sub
inc
and
pop
xchg
lahf
gs
movsb
inc
add
add
test
mov
imul
test
outsl
and
xchg
fs
je
sbb
gs
jns
dec
fs
cmp
or
sub
sbb
adc
inc
sub
lock
das
xor
sbb
inc
ret
aam
push
sub
push
and
xlat
aaa
and
es
add
add
sbbb
int3
sbb
pop
fs
cmp
push
sbb
movb
inc
mov
movsb
adc
fs
jo
mov
pusha
and
mov
adc
pminsw
sub
sub
lahf
push
aaa
std
loop
ja
sub
loope
cmc
push
pop
push
xlat
jo
sarb
or
add
insb
or
dec
test
lret
pop
xchg
popa
pushf
xor
inc
lret
jo
bound
adc
mov
inc
cwtl
adc
mov
mov
adc
mov
adc
ja
pop
in
cs
add
or
inc
push
cwtl
push
sub
fildl
pop
sub
jo
push
push
and
and
es
mov
and
xchg
lret
sub
add
pop
mov
adc
sbb
or
fs
imul
testb
into
add
push
mov
test
and
outsl
jge
sbb
rorl
jae
xchg
pop
insb
jnp
add
in
int3
and
sarl
mov
adc
pusha
ret
dec
add
dec
mov
jne
jb
xchg
jns
xor
xchg
out
sub
and
data16
icebp
or
jb
add
in
xor
data16
xchg
and
popa
sbb
sahf
or
pop
jno
loop
or
or
pop
cmovle
pop
xor
and
xchg
ret
imul
popf
fwait
imul
or
lods
iret
shlb
adc
xchg
sub
rorl
push
sub
mov
adc
lods
push
add
das
add
or
add
add
add
sbb
mov
jbe
adc
and
jnp
hlt
pusha
jg
ss
or
inc
ret
push
fiaddl
adc
sub
dec
subl
sbb
add
nop
popa
push
sbb
aad
xchg
sbb
outsl
lea
inc
loopne
fdivs
inc
mov
lods
into
mov
fninit
push
push
mov
pop
cmc
mov
mov
pushf
mov
outsb
dec
pop
sbb
push
pop
or
and
roll
test
sbb
cmp
jge
repnz
adc
test
ret
cltd
fs
or
pop
xor
jg
and
mov
lea
mov
push
add
mov
cmp
dec
in
lret
or
loop
jno
nop
mov
pop
stos
cmp
and
fadd
push
cmp
jbe
add
adc
or
sar
sbb
cmp
or
sbb
jle
scas
bswap
cmpsl
movsl
mov
mov
mov
iret
std
cmpsb
xorl
adc
push
test
adc
loop
add
in
icebp
cmc
push
cmp
inc
loopne
or
aam
jne
xor
inc
lret
push
pop
fs
dec
int3
mov
nop
inc
jo
push
inc
mov
dec
add
pop
push
inc
iret
test
add
add
es
add
push
fwait
mov
test
xchg
xchg
popa
jno
mov
mov
push
sarb
adc
and
mov
or
adc
fisubl
and
adc
lods
stos
shrb
pop
icebp
stc
test
mov
mov
push
orl
add
imul
mov
adc
add
andb
loope
push
and
push
int
loop
pop
jmp
mov
mov
xor
push
or
push
pop
mov
out
lret
imul
test
mov
and
xorb
ds
xchg
enter
cltd
pop
mov
mov
jnp
add
andl
push
or
and
add
fdivrl
fldt
add
and
orl
sbb
pop
daa
or
add
subl
pop
mov
pusha
incl
pop
mov
add
inc
pusha
test
mov
int
dec
movb
sbb
cwtl
outsl
adc
imul
push
addl
push
sbb
sub
cmpsl
pop
adc
inc
pop
lret
daa
sbb
testb
push
std
out
jl
por
push
cmp
stos
out
or
push
pop
rorl
push
xchg
push
lods
cmpsb
movsl
mov
sbbl
cmp
lret
nop
xchg
mov
pop
inc
pop
and
popa
mov
mov
mov
mov
sahf
push
daa
fsubs
jg
push
daa
jno
es
test
dec
ds
add
daa
inc
inc
scas
subl
xor
add
or
xor
pop
mov
mov
xor
lea
mov
add
xor
jmp
mov
hlt
mov
mov
and
std
stc
add
cwtl
or
mov
cmp
or
xor
jmp
push
adc
ljmp
or
mov
insl
sbb
mov
adc
and
xlat
mov
mov
add
and
add
scas
enter
adc
test
sti
adc
arpl
sbb
enter
daa
jge
dec
push
xchg
mov
add
sbb
cmp
dec
lock
dec
in
add
xchg
mov
test
dec
mov
sub
cmpsb
pushf
and
add
ss
lea
ljmp
loope
pop
or
movsl
or
push
cmc
add
inc
sarb
mov
jp
sub
jbe
gs
cltd
jp
jnp
add
or
xor
inc
lret
cmpsl
pop
imul
roll
fisubrs
daa
lret
adcb
sub
cmc
pop
add
push
push
stos
negl
rclb
loop
out
dec
lock
xchg
ds
movsl
ja
bswap
xor
or
sbb
cli
xor
xor
lcall
aaa
nop
mov
lret
sbb
mov
inc
add
lret
add
adc
mov
pop
jl
push
pushf
js
cli
mov
xorl
iret
aaa
cmp
int3
mov
popa
les
clc
mov
xor
ss
sub
outsl
lock
fcoml
push
inc
xlat
mov
in
adc
add
cmp
dec
popf
pop
sbb
mov
aaa
cs
stc
cbtw
dec
dec
sub
inc
pop
es
dec
inc
inc
xchg
mov
in
push
movsb
arpl
sbb
inc
push
loope
leave
ds
push
cmp
loopne
jmp
inc
sub
inc
cmp
mov
ret
bound
xchg
loopne
cmpb
lret
mov
sbb
and
movsb
ds
out
in
pushf
add
sub
jp
sbb
inc
fnsave
popl
and
dec
outsb
adc
adc
fcoml
adc
lock
repz
jmp
add
inc
inc
mov
sbb
in
sub
sbb
xchg
mov
loope
xrelease
pop
loope
sahf
fs
cmpsb
mov
mov
sub
in
andl
dec
xor
ljmp
push
dec
cmp
pushl
add
add
insb
sub
rorl
aas
stos
jb
das
sub
aam
fadds
dec
adcb
add
daa
xor
inc
aam
ja
sbb
int3
rcll
or
repnz
or
adc
push
xor
fidivrs
sbb
and
xchg
or
hlt
loop
mov
add
dec
adc
xchg
jl
sar
add
aaa
fidivl
cmp
sahf
sbb
or
sbbb
mov
test
les
les
jno
sub
sub
fidivs
xor
inc
frstor
stc
sbb
xor
add
pop
ret
rcrl
movsl
cmp
add
loope
add
cmp
xor
loopne
jmp
fistpll
sub
inc
aam
jge
xor
ja
inc
xor
and
ud2
mov
lds
ss
sub
pop
int3
arpl
mov
jo
dec
xchg
or
or
mov
xchg
in
mov
arpl
xchg
mov
xor
adcl
mov
adc
iret
pusha
or
lods
roll
jbe
sbb
sbb
add
lods
xor
add
imul
or
mov
mov
pop
mov
push
popl
dec
jmp
adc
loopne
insb
cs
xlat
lret
roll
rclb
loope
int3
repz
and
sahf
gs
xchg
and
or
dec
int
mov
dec
xchg
fsubrp
jle
push
inc
mov
push
add
and
push
ret
out
shll
aam
cs
and
aam
add
mov
cmp
mov
shrl
sub
push
sbb
loop
mov
bnd
add
icebp
adc
push
js
adc
subb
or
mov
inc
ret
lea
nop
add
and
sbb
test
xor
sub
xor
and
mov
popa
mov
inc
or
lret
sti
mov
add
outsl
andb
mov
mov
mov
cltd
push
sub
mov
inc
fs
rolb
push
fdivrs
jle
shl
lods
jae
push
subl
lods
adc
mov
adc
adc
cmp
jp
popl
jbe
shlb
loopne
inc
and
sbb
das
push
lods
mov
cmpsl
push
xchg
jnp
lcall
arpl
jmp
pop
add
cmpsb
sbbb
push
dec
test
or
push
fbstp
cmpl
pop
iret
dec
sub
mov
mov
int
cmpsl
dec
adc
scas
jecxz
je
pushl
inc
test
or
cmp
and
adc
sbb
mov
les
loope
loope
inc
adc
in
adc
xchg
fiadds
leave
lock
xor
mov
mov
add
ret
sub
inc
test
push
lahf
and
movsb
adc
sbb
out
loop
mov
sbb
xor
movsb
xor
push
push
add
into
push
popf
or
sub
dec
dec
in
or
mov
sbbb
das
fwait
add
dec
and
mov
cmp
std
insb
or
xchg
pop
nop
jl
and
addr16
jbe
sbb
add
loope
mov
mov
cmp
mov
aam
mov
cmp
and
ret
ret
dec
and
pop
mov
mov
mov
call
js
fs
sub
push
sub
dec
xorb
cltd
xchg
inc
ret
aas
incb
adc
pop
mov
sub
sbbl
lock
add
add
bound
jle
jo
cmp
btl
dec
arpl
dec
movb
adc
cmpsb
out
lock
xor
sub
mov
sar
push
push
add
dec
rcrl
sbbb
add
adc
add
test
adc
jmp
and
dec
insb
sahf
test
outsl
out
iret
mov
and
sbb
pop
xchg
lock
xor
outsb
jecxz
xlat
cwtl
pop
and
xor
je
nop
lds
movsl
lods
ja
push
fs
mov
ret
cmp
or
xor
xor
cmp
enter
aaa
es
outsb
imul
add
lods
icebp
jecxz
cltd
cmpsl
test
xor
jge
add
iret
bound
adc
movsb
aaa
fwait
pop
test
sbbl
ds
xchg
data16
jecxz
add
subb
and
je
add
dec
mov
xlat
push
jle
mov
popa
lock
mov
lods
xlat
mov
movsb
sub
xchg
or
pop
lods
test
cmp
and
push
out
sbb
pop
push
aas
xchg
and
sub
or
outsl
dec
jno
aam
dec
dec
iret
lea
frstor
loopne
mov
mov
inc
mov
fwait
les
add
add
add
mov
adc
mov
cmp
imul
and
popa
sbb
pop
dec
or
test
pop
push
pop
xchg
ret
nop
dec
es
push
push
das
jmp
xchg
mov
mov
and
mov
jl
add
fs
xor
imul
pop
or
aam
xchg
les
xor
fidivs
push
lret
inc
mov
lret
arpl
jns
mov
mov
adc
daa
fildll
mov
test
cltd
inc
inc
loopne
inc
clc
out
fwait
test
filds
and
dec
sbb
or
cmpsb
sbbb
in
inc
mov
pop
fsubrs
jg
adc
push
inc
aas
lret
mov
add
fistl
mov
add
pop
aaa
cmc
movsb
or
imul
mulb
mov
sub
rcrl
pop
test
push
ret
pushf
scas
jnp
enter
adc
daa
pusha
test
gs
push
jbe
adc
add
xor
push
dec
fisubrl
cmpsb
sbb
movsl
fxch
das
push
out
jb
in
lock
adc
dec
push
arpl
fldt
sti
add
dec
and
sbb
add
jns
shll
aas
pop
mov
test
dec
imul
jo
add
sub
and
pop
push
add
push
inc
xchg
add
shlb
cmp
pop
popa
push
test
dec
push
sub
sub
test
in
mov
in
loope
inc
aaa
movsl
lods
pop
scas
iret
into
in
adc
pop
jp
sub
cmp
push
daa
mov
subl
sbb
shlb
icebp
sub
or
and
dec
in
fisubl
or
lds
popf
pop
push
adc
mov
push
jle
std
xchg
xor
loopne
inc
in
mov
lret
mov
outsb
popa
adc
xchg
adc
scas
lcall
ljmp
cmp
adc
lahf
dec
xor
sub
wrmsr
je
cmp
add
mov
sub
sbb
daa
or
or
and
daa
fwait
xor
sbb
mov
int3
mov
dec
inc
pop
iret
sbb
add
or
test
ucomiss
pop
cmpb
mov
sbb
mov
lret
cmc
mov
fnop
pop
mov
and
out
addr16
js
gs
sti
pop
clc
js
inc
cmp
rcrl
xchg
sub
mov
add
mov
daa
lahf
mov
jle
or
and
leave
lods
test
ljmp
dec
or
xor
push
fisubrl
ret
xchg
pop
rcll
inc
mov
mov
test
mov
jg
mov
mov
in
pop
add
jecxz
and
pop
mov
repnz
and
andl
jp
push
push
mov
mov
das
mov
mov
lods
inc
push
push
inc
xlat
scas
push
or
sti
and
add
push
test
dec
jl
jo
mov
mov
push
out
ljmp
jmp
push
cmc
inc
add
pusha
pushf
call
sbb
and
lcall
fmuls
or
cmp
pop
push
mov
xchg
lods
add
in
xor
gs
mov
popf
mov
xchg
mov
cwtl
inc
or
cmpsb
cmc
loopne
push
jo
iret
jno
dec
inc
pop
hlt
lea
dec
xor
sub
imul
sub
mov
test
enter
cmp
jno
movsb
shr
sub
inc
add
mov
fiaddl
daa
adcl
mov
subl
inc
imul
inc
inc
or
mov
inc
lock
pop
popl
loope
and
leave
xchg
cmpl
xor
jo
xchg
add
test
sbb
test
add
fcmovnbe
insb
pop
jge
push
mov
stos
xchg
dec
mov
dec
xor
inc
jmp
lahf
ds
loopne
xor
sbb
or
stos
dec
sub
ljmp
inc
sub
and
sub
sbb
mov
or
lods
dec
pop
arpl
jo
dec
jp
or
sub
popa
divl
sti
aas
inc
mov
movsb
xor
mov
and
adc
pop
adc
xor
stos
push
je
push
aaa
cmc
add
subl
and
das
stos
mov
fwait
inc
or
push
xchg
pop
mov
cmp
cmp
in
movsb
xlat
add
add
popa
sub
jne
dec
call
pop
pop
shll
cmp
cmpsb
cli
nop
lods
inc
add
rcrb
mov
add
and
loop
sub
cmp
push
fcmovb
mov
pusha
sub
sub
mov
lods
xchg
jo
js
push
add
popf
adc
insb
call
pop
call
inc
testb
xor
jno
inc
pop
scas
xchg
xor
movsb
icebp
rol
or
in
adc
cmp
dec
subb
inc
add
add
sub
insl
ss
js
xchg
pop
popa
push
mov
shlb
roll
lods
test
inc
aaa
or
lods
inc
pushf
jecxz
jecxz
pop
ret
popa
rolb
dec
pop
adc
dec
imul
fwait
pop
imul
xchg
adc
inc
pop
popl
dec
xchg
wbinvd
fwait
dec
mov
test
das
xor
push
rorl
sub
xor
shll
mov
test
xor
popa
jl
sahf
push
xor
mov
pop
dec
mov
sub
cmc
inc
or
pop
arpl
movsb
adc
push
cmp
rol
or
add
dec
inc
inc
cmp
xor
jne
lcall
sub
add
pushf
adc
ret
lock
sub
add
hlt
xchg
dec
pushf
fistpll
or
dec
test
push
mov
loopne
adcb
pop
jge
push
sbb
iret
iret
popa
sub
mov
ud1
in
das
inc
adc
lds
cmpsl
mov
mov
dec
scas
addr16
in
push
arpl
or
call
add
test
xchg
jnp
push
or
mov
out
aam
in
mov
xor
or
jno
outsb
xor
rcrb
push
cmp
fcom
fs
jno
test
jge
adc
rcrl
sbb
pop
inc
sub
cmp
imul
ror
je
les
or
or
jb
inc
lcall
sbb
mov
cmpsb
dec
add
shll
add
pop
adc
push
push
sbb
stos
push
nop
sub
or
add
dec
arpl
adc
test
and
fistpl
int
divb
nop
fisubs
sahf
out
subl
dec
or
cmp
in
dec
aas
dec
repz
leave
stos
inc
repz
dec
add
fidivl
mov
push
testl
mov
add
jbe
mov
sub
lods
push
std
call
sub
mov
not
orb
mov
out
or
sbb
push
add
gs
inc
jmp
das
nop
outsb
push
fiaddl
ret
adc
lock
and
addl
sub
push
sarb
pop
mov
cmpsb
movsb
test
sbb
inc
and
addb
gs
push
andb
dec
adc
pop
mov
sbb
sub
cwtl
movsb
or
dec
sub
xchg
testl
dec
clc
xor
pop
sub
rcrl
xchg
push
xchg
aaa
cwtl
adc
pop
outsb
and
aas
cmp
xchg
hlt
lret
andb
subl
cwtl
xorl
mov
xorb
cmc
and
push
test
or
or
ljmpw
sub
sbb
fistpll
mov
sub
mov
mov
pop
or
pop
pop
addr16
xchg
xor
mov
scas
bound
xchg
ror
out
pop
lea
xor
pop
shlb
and
push
pop
pop
aam
fs
push
roll
and
rcll
iret
leave
add
sub
test
jne
mov
je
inc
add
adc
js
adc
testb
dec
ljmp
popa
push
orb
jae
push
ficoms
push
outsl
das
cwtl
jae
sbb
add
push
cs
js
dec
out
and
hlt
xor
lds
sub
ret
jns
movsl
lods
sub
and
test
fmuls
mov
xor
movsb
and
js
stos
dec
bound
sbb
xor
xor
mov
lahf
cwtl
test
adc
mov
inc
gs
mov
sub
push
push
and
lock
lea
shlb
iret
lods
mov
fsubrl
cmp
adc
add
mov
xchg
ja
fsts
or
rol
imul
jne
and
or
into
popf
rcr
add
add
je
cli
xchg
pop
or
fwait
sbb
loop
mov
push
rolb
add
sbb
cmp
mov
dec
cmpsl
xchg
add
push
mov
mov
mov
inc
lock
lock
gs
cmp
inc
fldt
pushf
sub
rcrb
push
bound
rcll
mov
lea
out
ret
cld
sti
sbb
and
push
or
mov
popa
cmp
enter
into
cwtl
fisttpll
mov
dec
push
pop
pop
mov
push
jbe
xor
mov
mov
in
push
pusha
or
pusha
imull
or
or
insb
add
inc
dec
cs
js
sbb
dec
sub
adc
push
out
and
pop
mov
outsl
or
cli
jle
je
mov
add
push
inc
mov
and
inc
or
cltd
das
jmp
jbe
fistl
pop
pusha
add
xchg
scas
xor
pop
pop
push
cltd
dec
jo
push
xchg
adc
orl
push
adc
push
cmc
nop
sub
pop
add
adc
sub
mov
imul
shlb
dec
pand
or
movsl
gs
popl
sub
inc
test
push
xor
fdivrs
pusha
push
add
push
or
or
lea
iret
xchg
rcll
mov
data16
inc
or
and
add
add
xchg
fnstcw
push
ja
iret
fcmovnu
adc
dec
add
aas
or
mov
pusha
or
lcall
xchg
push
inc
nop
mov
jg
add
dec
addl
cmp
sub
imull
xchg
and
mov
xchg
mov
sub
fisttps
loopne
xor
mov
test
mov
sub
rcrb
imulb
inc
sub
sub
pop
push
or
push
loop
push
push
lcall
xchg
test
mov
sub
or
xor
lods
push
lods
lret
adc
pop
mov
jle
sbb
jge
jg
push
adc
adcl
sbb
mov
or
inc
push
and
xchg
xorb
insb
pop
jne
xlat
jmp
or
xchg
add
add
hlt
sarb
or
aad
testb
lcall
and
pop
jnp
push
and
aaa
and
dec
fisttpl
flds
out
pop
adc
xlat
into
mul
adc
mov
lahf
loopne
or
das
xor
adc
dec
inc
push
xor
aam
outsl
testb
or
sub
push
dec
push
aam
in
fcoml
call
mov
jbe
adcl
add
addr16
add
out
insl
or
adc
xchg
sarl
sbb
fldenv
dec
jge
mov
xlat
or
jmp
sbb
aaa
stos
push
or
mov
ds
cltd
push
and
rclb
lock
xchg
dec
add
jecxz
es
sub
sbb
push
and
addl
mov
xchg
movsl
imul
pop
stos
sub
push
pop
icebp
mov
call
adc
shll
lea
sbb
push
ret
adc
mov
xchg
or
shrl
jmp
int3
or
push
cmp
mov
addr16
ss
mov
or
xor
xor
mov
dec
cmpsb
pushf
and
mov
sbb
daa
loopne
les
dec
sahf
sahf
imul
stos
cltd
imul
lods
arpl
xchg
jo
xchg
les
jo
push
inc
push
into
dec
mov
pop
addb
push
inc
jnp
and
sub
or
mov
adc
subl
sub
xchg
lds
xchg
ss
add
cmp
movsb
hlt
cmpb
mov
pop
add
pop
cmp
or
aad
clc
imul
idivl
out
add
insl
or
rcrl
arpl
hlt
insl
mov
shlb
adc
lods
adc
xor
add
and
mov
ret
sub
test
in
sub
dec
rol
mov
adc
rclb
jmp
lcall
cmpb
cmp
inc
call
imul
test
out
shll
mov
sarb
jo
mov
pop
rcl
pop
shr
ss
pushw
cld
jnp
mov
mov
test
cld
add
int
push
sub
nop
roll
aam
rolb
jp
sbb
out
xchg
xor
shl
mov
push
divb
xchg
and
and
pop
xchg
jle
imul
aaa
jl
jo
pusha
cmpsl
test
leave
push
shl
push
adc
push
and
pop
scas
or
cmp
xlat
out
inc
mov
inc
jmp
rclb
push
sub
addr16
cmpsl
ficoms
mov
das
mov
mov
hlt
int
into
loop
mov
cmp
iret
in
sbb
inc
xor
shlb
xchg
icebp
push
or
cmpsb
push
ret
mov
repnz
xorb
pusha
ja
sahf
adc
adc
popa
jecxz
shlb
mov
jl
movsb
push
mov
es
add
mov
inc
repnz
add
jmp
jne
dec
les
add
aad
aam
fidivrs
hlt
aam
dec
xor
mov
mov
mov
pusha
adcb
pop
mov
stos
ret
sbbb
invlpg
jo
cmp
adc
fidivrl
xor
adc
pushf
mov
rcrl
cwtl
xchg
sbb
pushf
in
mov
add
push
and
lods
add
push
ret
xchg
hlt
jp
jmp
mov
mull
ds
mov
pushl
or
and
cmp
add
jmp
lcall
mov
orb
xchg
jle
outsb
mov
xchg
fidivl
add
xor
mov
xchg
rcr
sbb
mov
inc
xchg
cmp
in
aad
cmp
mov
and
lret
ja
in
scas
mov
ret
pop
rclb
movsl
lods
dec
xor
sub
jne
sbb
add
jno
xor
sub
sbb
dec
push
adc
or
sarb
stos
add
sahf
lds
add
or
nop
and
or
test
adc
or
mov
mov
cmpsl
icebp
xchg
mulb
mov
mov
stos
adc
sbb
cmp
faddl
sbb
lods
jo
sub
jae
and
bound
and
mov
dec
mov
mov
adc
pushf
andl
xlat
ret
lods
adc
jae
and
or
add
jns
adc
inc
mov
into
rol
out
loop
adc
ret
aas
imul
inc
xchg
cmpsl
icebp
jb
sbb
pop
or
sub
shl
sub
je
dec
dec
cmp
pop
aad
int3
jne
mov
jb
fildl
inc
mov
xor
pop
and
or
fildl
push
mov
jno
lea
lahf
dec
lea
cmp
cmp
add
pop
mov
loopne
ret
fdiv
cmp
test
jbe
push
lahf
mov
out
jne
push
xchg
mov
cmp
jae
inc
mov
lods
xor
sub
and
jp
enter
sub
and
add
push
sub
jo
iret
sbb
in
or
adc
sbb
sub
cmp
adc
inc
sbb
enter
mov
daa
inc
cmp
sub
cmpsb
inc
dec
jnp
mov
adc
scas
push
push
stos
mov
jae
mov
push
mov
popa
scas
inc
lret
pop
aam
xchg
ljmp
and
add
roll
cmp
inc
outsb
leave
call
pop
push
xchg
sub
mov
and
sbb
arpl
hlt
add
loope
mov
adc
int3
mov
rcr
sbb
out
push
repnz
popa
mov
xor
dec
inc
outsl
cmc
or
sub
lock
inc
imul
orb
dec
or
and
daa
inc
popa
sub
scas
filds
jle
xor
jl
push
xchg
or
movsb
in
flds
lods
sbb
jge
or
pop
lahf
lahf
jns
into
outsb
js
mov
jnp
aas
mov
sbb
loope
mov
xchg
pop
mov
jle
inc
mov
and
sti
mov
xchg
xlat
and
or
pop
and
lcall
push
add
add
mov
int3
ror
in
sbbb
sti
mov
lods
lahf
xchg
pusha
jge
into
shrb
cmc
int3
fists
into
mov
cmp
and
out
into
icebp
shlb
mov
fnstenv
ffree
mov
lcall
shr
dec
ret
push
iret
push
cmp
nop
repz
stos
test
loop
cmp
or
out
add
fcmovne
fists
jecxz
lds
adc
movsl
push
pusha
and
sbb
xor
movsb
sub
inc
icebp
sbb
xchg
cwtl
mov
xchg
sbb
sti
inc
pop
stc
dec
outsl
dec
add
movsl
cmp
jae
xchg
lret
pop
lret
leave
fdivs
bound
lods
in
sti
subb
ror
lret
or
pushf
mov
cs
sub
adc
push
push
jo
ljmp
jecxz
xor
push
cs
sahf
cmp
inc
out
int3
fcom
and
xlat
xlat
inc
mov
sbb
mov
lret
dec
or
sub
rclb
cmp
arpl
repnz
fdivrs
loope
mov
mov
push
push
mov
inc
pop
xchg
out
call
xchg
or
jno
sub
cmpsb
push
imul
push
mov
xchg
adc
negl
rolb
out
cmp
mov
repnz
and
jle
jp
jbe
fprem1
push
cmp
iret
jae
out
popf
stos
push
psubw
push
insl
add
push
iret
into
loop
and
into
xchg
dec
push
data16
inc
xlat
sbb
into
add
mov
into
mov
pop
in
cmp
pop
cmp
push
push
mov
je
dec
sbb
rorl
dec
fidivrl
mov
cmp
add
dec
inc
data16
aaa
mov
mov
push
jbe
dec
mov
mov
pop
xchg
aaa
mov
push
pop
sbb
push
mov
pop
cmp
pop
adc
add
stc
ss
add
sar
iret
push
inc
add
negl
xlat
cli
mov
neg
mov
loop
in
mov
rorl
insb
inc
addl
or
cs
mov
ret
mov
mov
popa
jae
push
sbb
inc
and
test
xorb
jbe
cmp
jae
inc
sbbl
pop
inc
add
pop
cmpsb
jecxz
jae
insl
jg
dec
jmp
add
xchg
add
fstp
push
adc
outsl
leave
mov
or
push
pop
add
imul
or
mov
icebp
sub
mov
jno
sbb
pop
das
fstps
gs
mov
mov
pop
imul
mov
adc
adcb
mov
sbb
aam
pop
or
addl
ss
cmp
jbe
mov
adc
dec
bound
or
xor
adcl
popa
jnp
add
out
sub
mov
or
cmpb
lods
rorl
xlat
adc
sahf
aad
in
fmull
jl
jne
inc
jno
or
push
mov
fiaddl
push
lods
lods
pop
fwait
repz
je
push
stos
mov
out
sub
inc
sarb
loop
mov
out
xor
jmp
mov
repnz
push
xor
xorl
xchg
pop
sbb
rcrl
add
bound
popf
test
cltd
mov
and
pop
into
or
test
clc
ret
inc
aad
pusha
xchg
popf
mov
loopne
sbb
jns
mov
jns
or
cwtl
fwait
stos
shll
icebp
dec
or
and
inc
pop
adc
rcl
daa
enter
sub
shrb
adc
push
test
cli
je
stc
dec
les
les
sti
and
js
not
cmpsl
andl
sub
add
mov
mov
repnz
out
test
inc
in
scas
mov
loop
cmp
cmp
and
xor
dec
fwait
inc
cmp
add
mov
push
sbb
fbld
popa
push
outsb
mov
add
adc
stos
sti
jne
inc
inc
into
dec
jle
add
jmp
lahf
sbb
pop
iret
push
fbstp
jne
pop
out
sbbl
push
aad
outsl
into
je
mov
sbb
mov
xchg
jbe
push
mov
faddl
cmpb
fsubr
ret
push
test
xchg
cwtl
lds
sub
leave
mov
andl
mov
in
lods
test
dec
and
and
mov
xor
in
imul
mov
aas
lods
cmp
test
add
bswap
jbe
push
fwait
jno
ss
or
enter
jo
mov
enter
mov
jecxz
cmpsb
sub
out
rcll
xlat
jmp
ljmp
cmp
sahf
cmp
loop
xchg
and
xor
movsl
enter
inc
seta
jne
lret
inc
mov
jbe
scas
xchg
dec
ss
std
add
aad
jl
imul
add
fwait
out
sbb
adc
pop
or
jbe
inc
in
jo
push
dec
repz
push
test
scas
and
mov
scas
addl
in
sbb
movsl
mov
inc
inc
pop
mov
sub
mov
dec
and
mov
pop
and
lea
lahf
push
loopne
popa
ret
xor
data16
in
or
push
mov
into
lret
cli
sbb
push
xlat
addr16
push
sub
push
push
adc
sub
loop
std
fwait
add
sub
jmp
sbb
call
push
fwait
inc
xor
ljmp
out
stos
out
inc
popl
sahf
aas
into
adc
ret
xchg
jbe
xor
sub
xchg
das
dec
das
pop
fstp
inc
jae
push
lock
leave
fstp
test
lock
mov
sbb
mov
cmp
lret
dec
add
inc
cwtl
inc
add
loop
xchg
jle
jae
ja
out
xchg
inc
js
and
lret
add
jle
test
pop
mov
movsl
leave
test
loopne
jb
add
add
cmp
xchg
dec
inc
icebp
jg
xchg
add
push
inc
push
hlt
jg
popa
dec
lret
sbb
scas
jmp
fcomps
jecxz
scas
jb
dec
add
pop
mov
inc
mov
mov
sub
addl
popa
pop
fldt
into
lods
movsb
imull
pop
popa
ret
nop/reserved
add
dec
imulb
stos
lahf
filds
adc
das
addl
imul
insb
jb
sub
mov
mov
mov
mov
pop
mov
pop
xor
jnp
mov
stc
test
push
mov
jo
xorb
nop
ficoms
pop
xor
xor
pop
sub
add
sbb
jl
jo
dec
lods
mov
pop
sub
das
add
aaa
cmp
dec
sti
cmp
mov
sbb
xor
test
movb
jo
test
mov
cld
ret
loope
adc
addb
cmp
jns
in
into
ds
call
dec
cs
int3
hlt
es
imul
jmp
sti
push
jnp
out
sub
mov
cmp
pop
jo
insl
lret
das
xor
pop
jmp
into
scas
add
int3
or
sub
or
fcompl
rorl
nop
ja
jg
xor
clc
xor
ret
xlat
cmpsb
fimuls
orl
or
mov
inc
out
rcrb
mov
adc
rcll
pop
sbb
mov
pop
popa
sbbb
xchg
xchg
insl
or
addr16
rcr
shr
popf
cmpsb
mov
add
jo
xor
in
call
scas
sahf
fwait
iret
add
push
roll
flds
stos
xchg
incl
mov
inc
sbbb
pop
push
pop
cmpl
jo
ss
pop
cmp
push
dec
jle
int3
aaa
or
or
xchg
rcrb
jo
and
mov
jb
pop
push
cmpsl
faddl
test
into
sbb
jbe
in
sub
inc
stc
test
daa
pop
add
into
cmp
inc
jle
out
popa
jg
aad
and
arpl
shll
dec
mov
mov
dec
or
sub
ja
sbb
sti
mov
dec
sbb
into
pop
jnp
aaa
sbbl
test
cmp
mov
jge
pop
cmp
mov
jmp
xchg
into
mov
sbb
mov
dec
lahf
sub
push
mov
rorb
inc
push
shl
ljmp
jbe
aad
xchg
jmp
jp
in
je
cltd
notl
int3
testl
rcll
out
fisubl
pop
xchg
xor
inc
stos
aad
fwait
and
add
adc
mov
lea
add
rcrl
call
push
fcmovne
pop
adc
mov
loope
inc
xchg
add
out
inc
ss
mov
push
sahf
xchg
cmp
imul
je
adc
pusha
cmp
popa
fwait
lahf
js
scas
dec
pop
lahf
mov
rep
mov
pop
adc
int3
rolb
arpl
inc
je
jle
jmp
cmp
mov
jmp
out
scas
imul
mov
sar
sbb
mov
dec
adc
fincstp
jnp
jle
fidivs
scas
or
outsl
clc
pop
outsl
cmp
das
lock
call
add
jl
adc
pop
mov
int
xor
pop
or
add
cmp
idivl
into
shrb
cltd
jne
adc
or
pushf
cmpsb
inc
in
dec
mov
jp
ss
insl
mov
pop
jo
cmp
mov
dec
dec
cmp
in
repnz
sbb
cmp
dec
jp
stc
inc
ja
inc
jbe
pop
mov
cmp
xor
dec
mov
iret
jbe
xchg
push
add
ljmp
xchg
testl
push
xchg
rcrl
sub
pop
jge
in
jg
outsl
mov
shrb
xchg
sbb
sub
addl
ss
mov
jl
sbb
jae
or
add
push
lahf
sti
out
push
or
mov
sbb
jo
or
xor
sbb
jo
cmp
inc
pop
icebp
js
and
sub
movl
xor
imul
popf
add
xchg
adc
lea
push
lods
inc
jne
or
insl
and
pop
jae
pop
inc
mov
ret
xchg
js
push
popa
clc
aad
rol
inc
jno
dec
push
xchg
rep
nop
sldt
test
inc
js
jmp
add
lods
lahf
jmp
sub
dec
lret
mov
fwait
add
loop
mov
sub
jne
mov
inc
dec
xor
negb
pop
stos
in
cmp
dec
mov
cmpl
jb
and
mov
ss
add
gs
subl
incb
xlat
cs
lods
rcll
scas
ds
xor
loope
add
add
or
lods
mov
call
adc
mov
in
xorl
jge
ret
pop
add
test
stc
fildll
ss
push
pop
sub
mov
push
inc
shrl
xlat
test
imul
mov
pop
adc
xchg
lds
leave
fwait
xor
add
or
dec
bound
pop
and
lds
push
out
inc
cmp
mov
mov
clc
ret
sub
xchg
jbe
das
jecxz
push
movsb
inc
aas
out
ret
inc
js
clc
lahf
filds
xchg
push
sbb
test
icebp
xor
aaa
popf
lahf
pop
inc
leave
mov
and
xchg
int3
add
ja
fimull
popa
scas
mov
cmp
outsb
les
push
add
mov
add
ret
in
mov
xor
push
and
fildll
fbld
add
notl
pop
jmp
lea
mov
jl
jb
aaa
popa
mov
faddl
xor
les
cs
or
faddl
inc
cltd
pop
aaa
adc
hlt
xchg
lret
cld
ds
or
dec
pop
push
mov
fisubs
ret
loope
push
ret
or
dec
and
and
xchg
mov
ret
cmpsb
add
test
xchg
push
add
dec
adc
in
push
pop
je
inc
dec
or
pusha
adc
dec
mov
fucom
sub
or
jg
pop
sbb
testl
int3
adc
je
and
loopne
jne
lods
xor
xchg
add
and
adc
incl
xlat
adc
rcrl
or
push
inc
lret
fsubrl
jl
fstps
and
push
add
xchg
adc
insb
jg
sbb
test
lcall
pop
test
xorl
loope
dec
rorb
pop
pusha
or
add
fadds
imul
rcrb
roll
adcb
sub
jl
mov
dec
sbb
mov
jne
bound
movsb
sahf
ret
push
mov
cld
das
inc
sub
mov
and
rol
pop
mov
fcmovb
pop
cmp
adc
xchg
das
movsl
push
cmpsb
cmp
xor
mov
inc
xchg
jbe
dec
out
into
int
push
movsl
mov
sbb
cmp
dec
mov
mov
and
xlat
lods
gs
test
orl
movl
sarl
xor
aaa
inc
add
cwtl
filds
in
cmp
mov
sbb
add
stc
imul
not
inc
jmp
stos
dec
push
jg
ret
adc
xchg
xchg
testb
mov
ds
or
stos
xor
insl
scas
enter
aas
aad
push
add
in
xchg
ficoml
movl
jbe
mov
cs
sub
repnz
ljmp
cmp
inc
mov
cltd
mov
sub
sarl
inc
xchg
sub
xchg
in
xorl
inc
stos
xchg
jmp
daa
mov
mov
aad
push
ret
sbb
into
inc
xlat
aam
loop
test
int3
scas
add
aad
xor
pushf
cmp
ds
xlat
mov
orl
lods
test
cmp
mov
ds
add
inc
imul
clc
fdivs
cld
jno
dec
push
add
adc
rcll
jo
dec
popa
stc
clc
testl
add
cmp
add
cmp
outsb
pop
in
cmp
into
das
dec
jno
cltd
add
adc
fmull
xchg
dec
jnp
cwtl
shrl
mov
mov
mov
jl
cmp
mov
or
xor
add
pop
mov
mov
cmpsb
imul
mov
scas
mov
sbb
add
dec
jno
movsl
int
repnz
lea
sub
bound
inc
movsl
fwait
cli
xor
cmp
dec
sahf
xor
leave
xchg
int
jno
inc
mov
push
mov
cmp
mulb
jmp
rcl
push
jne
xchg
adc
scas
stc
shrl
lahf
and
jbe
pop
dec
pop
push
stc
aad
inc
mov
cmpl
inc
dec
lret
cmc
outsb
sub
sbb
dec
das
adc
or
inc
push
jl
jge
jge
outsl
push
fstl
lahf
aaa
sub
pop
xlat
sahf
xor
cli
fldt
imul
daa
mov
into
add
mov
shll
bnd
pop
outsb
or
xchg
xlat
or
pop
jle
orb
fcomip
sbb
mov
mov
add
je
dec
jne
icebp
xchg
xchg
or
add
sbb
test
push
cmp
int3
loope
lods
dec
inc
mov
cmpsl
lahf
push
pop
ss
ljmp
or
sbb
or
jmp
outsl
subl
pop
or
stos
in
pop
or
fmuls
rep
inc
fsub
sbb
cmp
aas
fsubr
and
test
add
xlat
aad
dec
outsl
test
xlat
rcrl
bound
nop
out
nop
sub
mov
jb
or
and
pop
xchg
mov
sti
xor
push
ret
dec
mov
aaa
mov
xchg
add
lahf
mov
jge
and
and
ja
pop
dec
cmp
jecxz
imul
fwait
pop
jb
push
rep
jmp
dec
sub
xchg
push
aad
cld
dec
lods
xchg
je
xchg
dec
movsb
add
or
pusha
pop
hlt
popa
cmp
xchg
rorl
mov
xchg
pop
cmp
dec
fsqrt
dec
cmp
sub
dec
push
dec
lahf
mov
add
push
cmp
push
jg
add
lods
jmp
addr16
jne
adc
pop
push
jae
std
adc
inc
jp
shll
push
push
mov
out
into
outsl
cld
xchg
lahf
mov
inc
add
mov
shll
inc
pop
int
pop
cmc
inc
stc
add
sub
std
pop
mov
mov
xchg
outsb
ror
std
mov
jnp
add
std
inc
pop
in
cmp
xlat
out
out
and
sbb
std
xchg
jge
cwtl
notb
xor
fldl
sbb
pop
in
movsl
in
aad
cmp
mov
pop
add
aas
add
std
in
sbb
in
sub
rolb
out
xor
aas
xchg
testb
xor
xchg
dec
push
add
aaa
mov
inc
sub
sbbl
jbe
dec
pop
jbe
or
outsb
dec
and
cmpsl
imull
and
sbb
mov
xchg
std
mov
or
pop
mov
in
inc
loope
inc
cs
imul
ret
shll
add
sbb
shll
xchg
mov
lods
pop
add
fstl
insl
mov
inc
addr16
fsubrs
push
aaa
jno
mov
inc
daa
or
popl
pop
and
pop
clc
idivb
sbb
sub
and
dec
gs
push
adc
or
mov
or
jne
inc
or
xor
imul
sub
add
push
or
in
mov
jg
adc
or
pop
and
lods
or
stos
cmp
or
fadd
cmp
lods
pop
push
sub
pop
mov
gs
xchg
mov
jmp
or
cmp
inc
jb
popf
repnz
out
daa
mov
sub
divb
cmp
das
sub
mov
icebp
out
lcall
and
mov
or
cmp
pushf
push
std
movsl
sbb
add
sbb
xor
mov
sbb
imul
idivb
or
ret
xchg
dec
outsb
mov
jbe
jg
mov
pop
imul
js
xlat
cmp
jnp
sti
sbb
or
push
daa
in
pop
push
cmp
scas
inc
mov
adc
pop
or
cmpsl
mov
or
xchg
into
pusha
push
out
insb
or
cmpsb
mov
movsl
frstpm(287
scas
scas
or
jne
jo
sub
mov
fldl
scas
int
es
or
or
sub
mov
sbb
mov
pop
push
inc
ja
inc
adc
jmp
in
push
pusha
lock
sub
pop
clc
jo
mov
bswap
scas
rol
stc
adc
repz
sbb
xor
xor
sbb
pop
xor
jge
dec
addl
mov
mov
das
inc
sbb
dec
rolb
cmpsl
xor
and
sbb
xor
test
cmpsl
xor
pop
and
pushw
mov
in
sbb
xlat
jge
jne
sbb
jmp
push
fwait
dec
popa
adc
repnz
or
out
test
dec
mov
add
adc
mov
sub
cwtl
push
push
sub
xor
lret
popf
lea
sub
inc
pop
fdivrs
ret
jne
sti
add
sub
cmp
cmp
mov
push
sub
insb
xchg
xor
push
xor
jb
das
int3
scas
xchg
or
xor
mov
aam
push
dec
fwait
mov
xor
stos
jp
call
fwait
ss
xor
sarb
pop
not
push
mov
xor
in
shrb
mov
call
jns
ret
jnp
mov
mov
mov
mov
frstor
mov
loopne
push
adc
roll
aaa
popa
push
pusha
sbb
sbb
call
clc
jbe
mov
add
inc
or
jle
jnp
push
jl
ja
or
mov
das
dec
and
adc
mov
scas
mov
xchg
shll
pop
std
sbb
mov
test
xchg
add
into
adc
lock
add
mov
push
jg
xchg
aad
cli
aam
sub
jl
or
mov
loope
add
andl
cmp
cmp
mov
sbb
jle
ds
sub
mov
movsb
sbbb
push
std
insb
bound
stos
pop
jae
add
sub
mov
hlt
pop
push
lock
mov
mov
jns
cmc
lock
ds
dec
popa
xchg
jl
cltd
insb
or
sub
mov
pop
and
cld
sbb
mov
sub
push
je
test
xchg
enter
pop
or
mov
adc
add
inc
mov
adcb
andb
jg
push
add
jl
fs
ss
push
push
or
sub
push
mov
pop
push
push
and
push
call
push
xchg
mov
mov
push
cmp
mov
jle
mov
lea
xchg
dec
mov
test
js,pn
mov
mov
stos
pop
or
scas
adc
shr
sbb
cwtl
outsl
cmpb
aam
jae
inc
inc
mov
ds
sub
hlt
pusha
mov
js
test
push
pop
imul
je
cmovne
outsl
into
adc
mov
mov
sub
in
mov
pop
lea
adc
mov
dec
insl
ljmp
shlb
fidivs
pop
lock
or
subb
xchg
sub
in
js
or
xor
push
test
lock
fdivr
push
aad
in
xor
out
fisubrs
lret
ss
sub
push
xchg
pop
jl
ret
add
int
mov
or
push
xchg
mov
and
add
mov
fistpll
repz
and
stos
bound
push
xor
int3
sub
xchg
adc
xorb
dec
aam
dec
int3
add
sbb
xchg
js
jno
fistps
mov
jle
adc
push
jne
aaa
ljmp
arpl
and
adcl
fmull
cmp
mov
xor
ja
dec
mov
sbb
jp
outsl
xchg
incl
mov
sbb
mov
mov
mov
push
sbbb
sbb
sub
mov
fsubrs
push
or
sbbl
add
mov
lds
pop
out
test
add
mov
add
pop
jae
into
aam
push
pusha
icebp
jo
nop
mov
or
out
dec
cmp
andb
push
outsb
outsl
aad
pop
leave
dec
dec
push
xor
adc
mov
enter
rol
and
mov
fdivl
xor
mov
inc
cmp
test
repnz
pop
ss
loopne
add
test
sbb
movsb
repnz
sub
jne
jle
jne
or
ds
sub
dec
pusha
cltd
sub
out
arpl
lock
push
mov
je
mov
lcall
mov
imul
sub
or
sub
xor
add
int
mov
dec
pop
fsubrs
movsl
sub
pop
push
pop
inc
xchg
sub
mov
sbb
lcall
sub
cld
daa
imul
movsl
mov
lock
push
loopne
cmp
sbb
xchg
xchg
or
shlb
gs
nop
adcb
push
mov
adc
lret
mov
or
loop
sbb
sar
lret
inc
dec
inc
and
incb
outsb
test
outsl
lds
pop
scas
push
sub
cmc
cmpsb
ss
add
add
mov
movsb
xchg
jmp
nop
jle
add
push
jle
jmp
pop
test
or
xor
sub
xor
je
adc
pop
dec
fisttpll
ss
push
sar
pop
mov
adc
insl
test
adc
fnstsw
mov
bound
xor
or
mov
inc
mov
cmpsb
pop
push
adc
jbe
dec
cmpsb
insl
pop
stos
sbb
cmp
sub
lcall
xchg
sbb
cmp
fiaddl
cli
outsl
shlb
imul
xchg
jle
gs
loopne
mov
sbb
pop
callw
repnz
fdiv
xor
leave
inc
mov
fisubrs
jecxz
ffree
inc
pop
jl
pop
xchg
adc
cwtl
pop
hlt
icebp
adc
adc
inc
out
sub
enter
aas
lods
fs
roll
into
inc
loope,pt
mov
push
ss
push
xchg
push
call
jo
pop
dec
jg
int
stc
pop
dec
hlt
sub
xchg
adc
push
out
mov
sbb
cmp
leave
es
dec
dec
ret
push
cld
lret
fs
pop
jle
pushf
push
dec
cwtl
movsb
fsubp
mov
test
dec
cs
mov
dec
push
mov
adc
call
and
mov
clc
div
jb
mov
test
mov
ljmp
sub
cmc
dec
or
inc
sarl
lret
call
int3
dec
aam
rol
out
xchg
pop
cwtl
aas
push
push
push
mov
xchg
dec
or
lret
cmp
xchg
setne
lret
push
push
push
push
mov
or
aad
mov
jo
aad
addl
addl
test
cmp
add
cmp
nop
sar
mov
mov
lret
jle
shlb
aas
or
mov
push
inc
adc
stc
add
fs
adc
push
sahf
push
mov
pop
jb
nop
incl
jg
cmp
or
inc
pop
add
fildl
clc
push
jg
inc
push
xor
sbb
pop
fdivs
out
das
into
repz
cmp
mov
inc
or
ret
xor
or
arpl
mov
adc
lea
dec
adc
ss
dec
in
mov
pop
lahf
pushf
sbb
inc
jle
cmpsb
mov
pop
push
mov
xchg
test
subl
adcb
push
and
inc
push
push
sub
movsb
push
js
push
pop
call
or
andl
sti
cmp
jp
add
sbb
cmp
mov
ja
lds
dec
cmc
ret
mov
push
pop
xor
sbbb
push
in
aam
testl
ss
js
add
mov
adc
sbb
outsl
push
or
inc
mov
out
dec
out
xchg
add
stos
test
adc
mov
pop
add
ja
mov
inc
jo
xchg
pop
sbb
clc
insl
insb
mov
lret
enter
jl
cli
cmp
xor
cmp
mov
incb
jp
jo
jno
xor
mov
push
push
jp
dec
rolb
int3
addb
push
xchg
mov
shrl
cmp
lods
loop
inc
cld
inc
inc
mov
add
aaa
insb
lods
or
pushf
adc
push
pop
mov
mov
in
add
cld
push
push
mov
jg
ljmp
jecxz
pop
sbb
repnz
pop
inc
cmc
fcomps
add
add
sbbb
xor
loop
push
adc
hlt
sbb
in
mov
xor
mov
mov
sbb
cmp
xor
test
mov
cmp
shll
xchg
enter
loop
ss
xor
cmp
js
lcall
add
dec
sahf
adc
or
in
sub
pop
inc
inc
loope
out
inc
push
sbb
adc
cmpsb
mov
push
je
sub
popa
loop
mov
js
jmp
cltd
push
and
sub
lock
fs
sub
xor
mov
xchg
sub
push
sub
xor
pop
sbb
pushf
xchg
cmc
ret
or
insb
in
cmp
mov
in
sub
xor
jbe
pop
shlb
movsb
lods
or
fsubr
xchg
leave
fucomi
call
sub
cld
push
jg
inc
adc
mov
cmp
negb
inc
jb
pop
push
mov
lret
or
lods
inc
xchg
jecxz
sub
push
push
inc
aaa
push
xchg
paddb
mov
mov
hlt
outsb
dec
add
xchg
ret
push
xor
icebp
cwtl
insb
clc
cs
popa
xorl
mov
mov
sbb
mov
mov
pop
fdivs
out
push
jo
bt
outsb
sbb
lods
xlat
pcmpgtd
xchg
dec
shl
or
adc
inc
or
or
or
push
pop
xchg
add
jmp
adc
pop
gs
loop
arpl
pop
add
andb
push
mov
pop
sub
cmp
stos
mov
test
xorb
xor
jo
push
lret
mov
lods
and
mov
pop
nop
scas
mulb
cmp
flds
test
add
aaa
cmp
addb
xor
in
cs
push
jns
adc
mov
pop
sahf
pop
inc
cmpb
or
fnstsw
jno
push
outsb
sbb
pop
sub
sahf
clc
mov
ds
xor
pop
pop
jno
call
and
ljmp
fs
xor
loopne
clc
sbb
push
cmp
je
jle
push
js
add
aaa
push
pop
mov
insl
add
lret
mov
test
lods
push
cmp
rorb
pusha
cmpsb
fisttps
fldt
cmp
add
cwtl
dec
es
iret
sbb
jmp
xor
sbb
movl
outsl
dec
jge
jl
jecxz
insb
nop
push
push
outsb
sbb
pop
add
fcmovbe
adc
pop
ret
divb
mov
aam
dec
popf
jns
mulb
push
imul
push
jge
push
and
call
por
xchg
sarb
or
jo
add
popf
hlt
adc
clc
stos
mov
push
push
fwait
ss
push
inc
push
sbb
mov
stos
ds
inc
mov
fcoml
xchg
mov
test
xlat
add
mov
push
repnz
lock
mov
mul
mov
adc
cwtl
cmpsl
add
jge
nop
mov
dec
aaa
sub
mov
xchg
or
das
mov
inc
cmp
lret
js
scas
clc
subb
leave
out
mov
test
mov
push
pop
fadds
push
stos
push
and
scas
roll
rclb
fs
fcomps
fcompl
pop
repz
xor
and
mov
xchg
add
lret
adc
inc
pop
xor
lds
jbe
lahf
or
fdivr
test
push
dec
mov
mov
xchg
faddl
pop
cmpsl
sbb
xor
sbb
jecxz
add
mov
sbb
imul
cwtl
imul
mov
pop
jg
mov
push
push
adc
xchg
cmp
sbb
loop
add
ss
fwait
in
es
pop
jo
out
clc
mov
je
aam
adcl
jns
cs
mov
mov
push
and
pop
jo
push
mov
enter
jno
xchg
push
cmp
jg
inc
add
push
fdivrl
sub
add
mov
add
fnstcw
sub
fwait
hlt
push
mov
cmp
bnd
nop
add
or
mov
xor
adc
and
cmc
push
jno
and
xor
popa
pushf
pop
movb
mov
and
bound
stos
and
mov
sbbb
sub
cmpsb
pop
in
ret
cltd
inc
add
loopne
cmp
mov
cwtl
aam
mov
loopne
in
fstpl
mov
lods
xchg
fdivrp
lods
push
addps
or
dec
or
cli
mov
sub
mov
mov
stos
sets
adc
inc
scas
pop
nop
fcompl
push
loop
xchg
jb
jne
movhps
adc
mov
and
cltd
cmp
cmp
push
loope
lcall
mov
xlat
addl
jecxz
or
gs
sub
xchg
nop
push
cmp
sarl
mov
test
shr
fwait
les
pop
mov
xorb
xor
mov
xor
test
dec
fildl
fsubrs
mov
mov
cmpsl
mov
and
inc
test
movsl
lret
fdivr
jle
dec
or
pop
mov
or
push
push
sub
mov
ror
mov
rcl
mov
add
pop
ficomps
xor
push
pop
sbb
inc
jmp
out
cmp
fdivs
push
loope
add
mov
ds
push
outsb
mulb
mov
mov
insl
addr16
and
add
in
inc
add
mov
dec
xor
mov
mov
add
adc
adc
mov
data16
sub
lods
or
xor
aas
push
std
push
jo
incb
ds
ja
cli
dec
cld
jg
leave
inc
adc
repnz
lahf
ljmp
or
jmp
hlt
add
leave
dec
insb
sbb
mov
scas
jae
fs
sbb
das
xor
adc
mov
ds
push
xchg
add
rorb
imul
push
fsubrs
xchg
sub
jb
pop
test
lea
lret
push
mov
in
mov
or
inc
into
and
or
rorb
aad
out
add
lret
cmc
sbb
xor
adcb
and
push
xchg
ss
mov
inc
xchg
add
mov
int3
lods
and
mov
stos
mov
daa
jne
es
mov
mov
cmp
vmread
scas
xorl
fs
stc
mov
or
mulb
pop
aad
inc
xchg
sub
inc
mov
pop
push
jno
inc
ljmp
sbb
test
jmp
cli
pop
push
and
pop
movsb
mov
aas
cmp
add
lret
cld
jecxz
xchg
sbb
sub
and
xchg
jae
cmp
incb
push
sbbb
mov
push
xor
jns
push
add
mov
cwtl
mov
out
mov
cwtl
aam
xchg
push
mov
mov
adc
sub
adc
sub
gs
mov
fwait
outsb
daa
ret
jbe
mov
sub
xlat
adc
lret
lcall
loopne
cmp
add
movsl
jg
mov
daa
mov
pop
sub
xor
lods
mov
ret
jnp
scas
lret
mov
or
mov
add
cld
mov
mov
mov
fwait
enter
cmp
pushf
mov
hlt
pop
pop
cmpsl
xor
push
lds
cmp
hlt
inc
daa
repnz
mov
adc
pop
and
clc
jns
pop
ret
mov
add
sub
jle
mov
add
fmul
dec
out
orl
jl
pop
or
popa
lock
dec
pop
cmpsb
xor
sahf
js
xchg
pop
add
jo
jge
sub
es
pusha
dec
ficoms
cmp
or
push
aad
clc
popl
sbb
sbb
mov
imul
pop
test
shrl
ds
filds
dec
mov
cmp
pop
mov
inc
jne
test
sub
lock
mov
push
mov
outsb
xor
into
jno
nop
mov
push
out
lds
mov
jb
add
add
cmc
ret
inc
lcall
aaa
push
call
sbb
sbb
xor
mov
push
fistl
in
in
cmp
jecxz
cmp
daa
adc
pop
pop
add
das
cmp
inc
mov
push
fs
dec
das
enter
dec
call
inc
fs
out
and
imulb
stc
inc
xchg
shl
dec
push
xchg
and
mov
das
or
jecxz
addl
lret
jo
ret
and
ljmp
inc
pop
bound
dec
push
and
xchg
xlat
fidivrl
add
jmp
mov
mov
pop
lcall
aam
inc
xchg
ljmp
movb
inc
es
sbb
push
mov
ficoml
and
add
or
hlt
push
push
inc
adc
js
lock
or
stos
fiadds
mov
pop
pop
movsl
inc
cli
mov
imul
push
loopne
and
cld
push
andl
xchg
insl
scas
mov
loopne
mov
pusha
pop
pop
fs
das
jp
icebp
or
push
add
push
add
int
push
cwtl
loop
mov
cmpsb
ret
clc
and
lcall
aad
insb
mov
lret
outsb
fcompl
pushf
xchg
xlat
dec
sub
sbb
xor
cmp
movlps
ficoml
pop
pop
es
rolb
xchg
cmp
rcr
divb
sbb
dec
fistpll
cltd
add
icebp
bound
loopne
out
mov
mov
aam
push
adc
mov
faddl
sub
jb
pop
pop
aam
insb
jle
movb
add
mov
sbb
lcall
jb
jbe
and
test
lds
movsl
test
push
pop
into
cmp
add
add
sub
jle
dec
out
mov
add
cmp
cmp
int3
xlat
nop
dec
lods
addr16
cmp
adc
dec
pop
pop
cmp
push
inc
add
lods
test
jmp
rolb
imul
mov
inc
jl
hlt
aad
cmp
fmuls
push
mov
cli
rcl
out
mov
dec
dec
inc
iret
shlb
inc
add
mov
cmp
out
mov
dec
pusha
inc
xor
sub
ret
lahf
jge
gs
add
cs
add
mov
mov
pop
daa
cmp
sub
hlt
nop
dec
fistps
adc
aad
add
push
mov
mov
fldenv
ss
cli
mov
call
jbe
inc
sub
lahf
les
test
decl
insb
aaa
add
and
cmp
int3
clc
pusha
inc
xchg
or
mov
mov
test
sub
lock
sbb
mov
aas
sub
add
add
or
sub
movsb
xorb
cmp
fbstp
nop
inc
int3
out
outsb
xor
test
pop
and
mov
inc
daa
adc
pop
mov
mov
inc
add
fisubrl
hlt
push
mov
test
cmp
add
cli
push
xchg
jns
jb
add
push
ja
fwait
adc
adc
pop
insb
scas
dec
pop
inc
stos
insb
cwtl
iret
stc
and
sbb
mov
scas
mov
mov
movsb
notl
jns
adc
mov
aas
in
je
add
stc
repz
pop
push
rorb
sub
mov
push
mov
mov
xor
mov
push
push
sub
stos
add
adcb
iret
sahf
push
mov
add
jbe
aaa
int3
sbb
test
data16
mov
xorb
mov
stos
mov
dec
or
cmpl
inc
repz
inc
mov
hlt
xor
movsb
xor
ds
shll
lea
test
xor
add
and
add
mov
xchg
push
bound
jno
or
ficomps
xor
ret
fidivrl
push
jecxz
xchg
push
xor
sbb
popa
sub
inc
outsb
gs
and
scas
fwait
push
inc
out
dec
mov
mul
xor
add
inc
cmp
cld
movb
fs
fdivs
insb
fs
mov
js
add
mov
clc
mov
push
shl
push
hlt
push
add
mov
push
test
pop
in
sub
jmp
mov
addl
dec
jne
xchg
jg
and
pop
insb
mov
sub
mov
test
sub
in
cmp
inc
adc
push
fwait
dec
and
rolb
ss
movsl
test
scas
jl,pt
push
out
mov
jbe
lds
add
xor
mov
ds
pop
push
loopne
imul
mov
push
int3
pop
cmp
sub
pop
lahf
orl
outsl
cmp
and
jg
test
xlat
mov
addr16
sbb
add
mov
or
and
outsl
shlb
inc
and
and
add
push
into
es
cmp
orl
js
sbb
jbe
lods
inc
jmp
mov
lods
inc
mov
or
ja
xor
push
add
mov
dec
orb
popf
adc
inc
dec
mov
repnz
mov
clc
push
fs
leave
jecxz
lock
mov
jb
les
movsb
adc
jbe
inc
add
repnz
jle
fstpt
in
xchg
hlt
rcll
inc
xor
push
divb
push
lcall
xor
mov
insb
jl
scas
js
xor
push
imul
push
cmp
xchg
call
mov
jg
mov
lcall
hlt
push
mov
push
out
aam
jae
mov
mov
inc
shl
out
lret
stos
bound
or
in
stos
inc
sbb
mov
cld
jl
aaa
cmp
mov
je
aaa
mov
mov
push
rcrl
sahf
bound
hlt
push
inc
cmp
mov
dec
xchg
lcall
or
cmpsb
inc
push
insb
loope
aaa
js
mull
xchg
mov
pop
add
sahf
jb
push
cmc
cmpsb
aam
mov
sbb
pop
movsl
xor
ficoms
adc
add
repnz
adc
pop
fwait
mov
add
adc
or
ds
add
rorb
push
outsb
and
cmpsb
mov
mov
not
add
mov
push
or
push
scas
lcall
sbb
sub
mov
sbb
loop
jo
adc
cltd
fadd
rorb
or
rcr
push
repnz
jb
test
fwait
out
or
cmp
and
cmp
sub
adc
sbb
push
pop
push
pop
xor
push
icebp
jo
jbe
push
jo
repnz
cmc
cmp
fs
inc
nop
pop
mov
add
lods
bound
push
das
push
jecxz
push
je
sub
pop
push
mov
data16
mov
and
nop
lods
pop
jp
lods
bswap
cltd
xchg
enter
xchg
push
ds
movsb
pop
in
int
mov
shlb
les
push
mov
dec
daa
outsb
jb
push
push
xor
pop
hlt
xchg
xchg
pop
sub
das
mov
inc
or
cli
loop
movsl
je
mov
add
loop
sub
jne
add
scas
mov
pusha
imull
out
pop
dec
call
out
dec
push
push
sub
jmp
add
add
fcmovnbe
cmp
shrl
pop
shrb
je
mov
int
lock
sbb
cltd
mov
inc
sti
jns
push
ret
aaa
jg
pop
rcrb
in
sub
mov
roll
sbbl
cmp
jbe
jno
jb
pop
je
shlb
push
jno
and
adc
pop
xchg
dec
xchg
xor
aas
dec
mov
adc
inc
rorb
mov
cmpsl
sti
push
cmp
push
rcrl
fiaddl
pop
and
jmp
js
and
mov
dec
cltd
stos
adc
dec
push
cmp
and
jns
inc
mov
out
pop
push
cli
sub
fists
pop
xchg
test
scas
jo
clc
or
scas
jge
add
or
lock
outsl
sub
cmpsb
jmp
sbb
scas
xor
clc
or
and
adc
aas
dec
loopne
movl
sahf
es
add
cwtl
test
pop
mov
push
add
mov
arpl
inc
mov
jl
push
std
or
test
sub
xor
sbb
xlat
clc
jbe
mov
scas
or
stos
sbb
scas
lods
sub
je
popf
mov
jg
mov
mov
xor
je
cltd
mov
jbe
clc
sub
sbb
ds
in
dec
and
dec
mov
add
cmpsl
adcb
mov
push
push
cld
stos
into
sahf
mov
cwtl
cwtl
int3
stos
mov
sbb
icebp
mov
sti
cmpsb
cld
sahf
sbb
ret
dec
push
repnz
nop
loop
cwtl
ljmp
cmp
or
push
inc
push
insb
mov
pop
shl
xchg
cmp
cmp
xchg
mov
mov
std
ret
lret
loop
pop
outsb
test
adc
sahf
int3
insb
stos
mov
loopne
jp
push
call
pusha
sub
sub
pop
lock
stos
push
cli
mov
in
inc
push
xchg
push
sbb
les
push
jb
jle
mov
je
jl
insb
push
sbb
dec
insl
movsl
out
jb
stos
mov
mov
pshuflw
xlat
push
push
lds
imul
ljmp
mov
adc
add
push
ss
or
push
jge
sub
mov
fstpt
dec
mov
or
inc
in
shrl
outsb
cmp
xchg
fsubrp
or
mov
push
mov
xlat
mov
jb
adc
addb
roll
dec
in
ja
das
pop
pushf
arpl
insb
sbb
adc
ljmp
cltd
call
lock
add
nop
imul
imul
adc
clc
mov
mov
push
mov
mov
mov
shl
push
sub
push
adc
negb
outsl
pop
push
pop
iret
mov
push
xchg
dec
loop
add
lahf
push
lods
pop
out
or
imull
incl
out
mov
xlat
adc
add
das
add
addl
shrl
or
or
fucomp
daa
add
add
out
add
add
push
mov
fists
sub
das
push
or
out
stc
mov
add
or
add
pop
outsl
add
sbb
sbb
push
inc
cmpsl
and
dec
mov
mov
sbb
stc
mov
out
xor
inc
pop
imul
lret
inc
or
daa
add
into
xor
add
cmp
or
sub
sbb
mov
push
daa
ja
jg
xchg
inc
xchg
scas
fwait
int
dec
xor
mov
inc
divb
mov
roll
cmp
mov
js
pop
or
xor
in
repnz
ja
or
mov
in
xchg
out
jge
fwait
sub
aaa
iret
sahf
xchg
out
mov
pcmpgtb
nop
mov
fwait
jge
cmpsl
sbb
jne
out
push
dec
repz
inc
fistpl
sub
mov
and
imul
scas
sti
push
fimull
mov
jae
or
mov
jae
or
pop
or
add
in
cmp
and
aaa
dec
nop
pop
ficomps
fidivs
add
and
or
lods
jnp
pop
or
mov
add
mov
cmpsl
and
xchg
push
fwait
call
jmp
decl
iret
xor
or
fdiv
loopne
or
or
cmc
and
dec
daa
pop
das
fstl
fnstenv
mov
stos
xlat
or
gs
or
add
repnz
mov
or
pop
or
mov
fisubrs
xchg
sub
into
or
scas
sbb
mov
mov
out
jmp
or
and
aaa
scas
sub
int
out
mov
or
sti
sbb
push
cmp
xchg
or
pop
mov
and
jmp
fsincos
sub
adc
iret
jae
and
pop
push
cmp
and
addr16
inc
pop
mov
adc
or
es
scas
jmp
jecxz
sti
xchg
xor
dec
aaa
push
or
sub
cmp
or
dec
pop
jbe
push
stc
sub
in
outsb
lahf
daa
jecxz
idiv
popf
mov
or
and
aas
xchg
out
loope
notl
mov
mov
mov
push
mov
jne
mov
xchg
inc
fwait
aaa
jecxz
jmp
cmpsl
stos
jbe
repz
jae
mov
int3
jo
adcb
jnp
pop
shr
aad
inc
and
adc
inc
data16
out
negl
xchg
adc
jnp
in
sub
jge
cld
pop
xchg
daa
out
pop
adc
addr16
aaa
adc
lret
adc
imul
adc
scas
lea
and
fwait
dec
call
das
fbstp
add
lret
imul
adc
adc
adc
adc
mov
repz
adc
sbb
adc
out
adc
adc
xor
loopne
movsl
clc
mov
aas
and
jne
idivl
outsl
push
dec
pop
pop
scas
or
pop
mov
lret
arpl
mov
lods
adc
or
push
dec
cmpsl
pop
mov
ja
sahf
out
frstor
inc
inc
dec
xor
jl
lods
sti
cmp
and
ja
out
rclb
pop
push
push
aaa
mov
adc
push
daa
jae
jnp
mov
xchg
adc
sub
and
dec
cmp
lock
sbb
sbbl
or
sbb
sub
sahf
sbb
cmpsl
stos
jno
dec
idivl
mov
fwait
inc
inc
mov
repz
aas
inc
or
mov
pop
bndstx
or
or
inc
dec
inc
pop
add
add
push
mov
aas
es
pop
arpl
add
in
or
addr16
jne
add
sbbl
cltd
cmp
or
add
aas
mov
or
add
cmp
cmpsl
lods
leave
push
xchg
push
inc
or
lahf
loop
je
mov
add
adc
aad
dec
mov
sbb
or
in
push
cmpsb
je
fisubrl
sti
shr
or
mov
daa
lea
and
sub
pop
xchg
es
pop
add
mov
imul
int
pop
imul
xor
pop
idiv
inc
mov
sbb
or
pop
std
xchg
or
sbbb
data16
imul
js
lahf
sahf
loope
data16
in
push
movsl
ret
sbb
daa
sbb
xor
in
push
mov
cmp
mov
or
rorb
adcl
hlt
inc
je
out
pop
add
addl
jnp
mov
pop
cmc
ss
arpl
cmpsb
add
mov
cmp
add
mov
scas
test
add
cmp
or
or
cmpsl
adcb
mov
mov
adc
cld
in
test
cli
mov
idivl
imul
sbb
mov
insb
add
sahf
jns
inc
or
mov
shl
xlat
mov
cmp
loopne
adc
inc
pop
cmp
inc
test
push
cmp
inc
add
loop
sub
or
sbb
inc
cmpsb
xor
xor
testl
insl
test
ret
popf
add
ss
cli
dec
or
leave
daa
and
xchg
out
popa
jg
jne
xchg
das
daa
sub
xor
fistps
aaa
cmp
add
lock
test
outsl
xchg
inc
adc
insl
js
scas
mov
push
ss
push
ljmp
lods
cmp
xchg
cmp
std
mov
aaa
xchg
mov
flds
fists
lcall
ds
and
jbe
inc
xchg
out
push
xor
cmp
adc
add
popa
mov
mov
arpl
dec
mov
jecxz
ja
test
mull
dec
dec
xor
push
scas
fwait
sub
adc
sub
and
popa
jne
pop
add
cmpb
add
test
xor
ss
cmp
add
call
je
fsubl
add
test
mov
mov
push
pop
jp
mov
mov
xchg
cmp
xchg
bnd
pop
mov
xor
out
xlat
add
je
or
mov
mov
push
in
in
xchg
loope
outsb
add
jl
and
outsl
cmp
rcll
fnstsw
add
addr16
imul
test
inc
dec
mov
fcmovnu
sub
adc
mov
mov
sbb
and
aam
xlat
fdivs
rcll
pop
sub
xchg
xchg
ja
test
ret
sti
aaa
or
gs
fisubs
add
and
ds
gs
mov
pop
test
idivl
and
add
bnd
xchg
add
gs
adc
icebp
imul
rcl
xor
jno
dec
loopne
lahf
out
jmp
mov
cs
sbb
cltd
mov
movsl
daa
fnsave
lods
push
rorl
fimull
lock
and
xchg
sarl
sub
insl
push
rcll
nop
arpl
repnz
rclb
pusha
mov
ss
andl
orl
and
and
or
rcr
inc
push
sbb
jecxz
cltd
add
or
mov
add
adc
fs
mulb
sbb
xchg
and
jg
fsubr
mov
outsb
mov
mov
jns
loop
xor
in
cwtl
loope
inc
add
or
outsl
insl
sbb
fxch
imul
aad
fbstp
leave
xchg
lcall
sbb
and
in
test
daa
push
filds
xchg
pop
bound
ja
ja
arpl
jnp
mov
sbb
jle
aaa
add
adc
cmp
in
or
insl
lock
sahf
outsb
pusha
mov
ret
arpl
roll
pop
mov
push
faddl
inc
test
lea
ret
inc
xchg
fisttps
daa
sub
or
sub
cmpb
sti
mov
aad
mov
inc
dec
inc
push
jbe
mov
loopne
mov
mov
ror
sbb
mov
das
jno
pusha
or
mov
jo
daa
push
jecxz
lret
ja
jno
fidivs
js
lock
mov
add
xor
add
pop
ffree
mov
mov
mov
es
and
addl
xchg
mov
out
jge
lods
and
xchg
jns
rcrl
fucomip
lds
lods
arpl
dec
push
mov
sub
out
pop
out
addr16
dec
xor
add
es
out
leave
dec
aaa
sbb
xor
fstp
mov
fdivs
fldl
jecxz
xor
out
dec
or
test
cmpsl
mov
cmp
push
pop
xor
xor
sbb
aaa
push
test
adc
push
mov
lret
ds
sbb
xchg
out
sbb
cmp
jne
popl
push
mov
test
frstor
mov
mov
mov
push
frstor
mov
jnp
pop
pop
stos
movsl
ret
sub
jnp
shll
fnstsw
cmp
jecxz
sti
data16
pop
xchg
cs
popf
pop
and
pop
jmp
xchg
and
push
push
repz
mov
inc
xchg
scas
xor
add
pop
call
testl
fcoml
mov
mov
add
mov
iret
push
js
push
xchg
test
int3
fcompl
lcall
pop
dec
jo
inc
sub
pusha
sbbl
sub
sarl
mov
or
or
mov
mov
shrb
mov
orl
sub
sbb
push
add
in
sub
ss
push
mov
loopne
mov
ret
add
pop
xor
shrl
sbb
xor
fnstenv
insb
pop
cmp
pop
inc
jg
mov
out
xor
das
mov
and
add
das
arpl
inc
sub
fsubr
bound
idivl
xor
sub
insl
adc
jge
ja
je
sub
jnp
lds
call
sub
fst
popf
in
rcrb
ss
pop
pusha
outsl
testb
pop
divb
xchg
stos
arpl
xorb
dec
xor
mov
stc
push
and
outsl
xor
jge
or
mov
lods
xchg
jnp
ds
xchg
dec
inc
in
mov
stos
ds
xchg
mov
cmp
iret
adc
stos
sub
xor
cmp
filds
mov
popa
and
inc
inc
stos
or
pusha
mov
push
and
scas
push
addr16
mov
ja
or
pminub
mov
imul
lea
push
adc
mov
mov
pop
push
and
cmpsb
jmp
xorl
cmp
or
jne
jne
pop
test
add
add
xor
arpl
addr16
xor
andl
stc
jmp
jbe
cmp
mov
hlt
test
stc
mov
sub
testl
xchg
xchg
in
fs
lock
and
adc
sub
loope
je
xor
sub
mov
cmp
adc
subl
pop
lea
mov
xlat
mov
arpl
and
dec
mov
cld
sub
mov
std
adc
xchg
data16
mov
rclb
insb
dec
lds
sbb
ud2
adc
sbb
arpl
movsb
and
jnp
pusha
or
jg
sub
int3
sbb
inc
stos
pop
mov
scas
je
fwait
or
pop
outsb
shrl
int
aas
xchg
cmc
xchg
shrl
jbe
imul
xchg
jb
mov
outsb
add
xchg
aaa
ret
push
pop
mov
out
and
or
fildl
mov
lds
pop
das
and
push
test
sbb
mov
mov
jne
daa
lea
jl
sub
bound
pop
or
mov
adc
jbe
or
pop
sbb
add
sub
xchg
pop
sbb
xchg
scas
stos
or
add
jns
mov
xor
xor
leave
loopne
popf
popf
decl
aas
jno
and
add
cmpsb
or
cmova
mov
or
or
addb
cmpsl
loop
jns
je
test
sbb
mov
ret
lods
mov
icebp
fnstenv
push
scas
jp
jae
fadd
repnz
std
mov
adc
jae
add
adc
jbe
iret
movsl
fldl
test
inc
fs
sbb
xor
lea
pushf
das
sbb
pop
das
add
adc
movsw
outsb
daa
push
inc
cltd
fs
subl
pop
rorl
and
jae
inc
movsl
and
add
lods
popf
xor
jg
aaa
je
mov
call
add
jmp
mov
mov
fdivrs
daa
fldl
mov
push
add
lea
in
arpl
jae
xor
inc
mov
sarb
imul
jae
jg
sub
or
add
jmp
sti
outsl
and
sub
cmpsl
insb
adcl
test
arpl
and
inc
jg
jb
sbb
mov
jecxz
add
shl
or
adc
or
sub
mov
xchg
pop
sub
fsubrs
jbe
sti
mov
sbb
push
test
and
in
pop
xchg
push
inc
fldcw
pop
dec
xor
sub
push
dec
insb
je
fstps
cmpl
or
xchg
pop
out
popf
mov
jno
mov
insl
jne
mov
dec
ret
notl
daa
add
stos
shrl
js
mov
sti
jno
push
mov
scas
jecxz
jno
fistpl
mov
sub
out
mov
pop
dec
and
sbb
sti
pop
inc
xchg
inc
inc
pop
pop
pusha
jmp
jae
addr16
and
ja
cmp
mov
mov
daa
fbstp
push
and
rcll
sbb
das
add
jo
pop
push
jl
call
scas
inc
ja
mov
xor
nop
lds
rcr
ret
mov
das
add
and
scas
fadds
faddl
stos
jno
in
fnstsw
mov
add
mov
stos
add
inc
mov
cmp
mov
mov
sbb
inc
lcall
and
pop
mov
cmpsl
call
adc
movsl
stos
mov
in
outsb
lds
inc
xchg
loop
or
and
cmp
imul
xor
jecxz
aad
sarb
scas
mov
and
in
pop
sbb
popa
rcr
jl
cmp
and
imul
into
cmp
cli
inc
push
mov
mov
and
jle
adc
xchg
mov
xchg
shr
jns
fldcw
mov
mov
sub
aas
jnp
faddl
mov
dec
jno
mov
int
idivl
fcmovb
mov
dec
out
mov
insl
xchg
jb
pop
out
push
lods
jge
sti
jle
mov
xchg
loope
sub
in
pop
dec
stc
and
pop
jo
loope
sub
mov
xor
and
cmp
lea
dec
push
loopne
pop
or
test
inc
add
xor
pop
rorb
test
sbb
outsl
fcoml
and
jg
mov
inc
addr16
add
fisttpll
dec
push
and
sub
das
int
adc
cs
mul
jnp
jge
daa
mov
sub
mov
ja
xchg
xchg
aam
mov
inc
xchg
xchg
sub
dec
lock
divl
ja
xor
jg
lcall
adcb
jns
dec
fcoml
cmp
stc
mov
sbb
and
push
or
ljmp
and
andl
and
out
mov
and
cmpsb
mov
std
inc
jg
and
push
arpl
imul
popa
jp
loop
pop
inc
mov
hlt
out
push
jne
push
pop
and
sbb
leave
adc
inc
call
ficomps
mov
xchg
sbb
dec
nop
jge
and
gs
and
imul
jnp
inc
movsl
inc
xor
sbb
add
rcrl
mov
jnp
jnp
rcll
fildll
cmpsl
loopne
leave
dec
and
sbb
aaa
xor
sub
imul
pop
gs
leave
es
adc
and
pop
das
mov
push
push
mov
inc
pop
mov
fwait
sbb
push
inc
mov
and
dec
pop
sub
add
xchg
xlat
adc
dec
mov
mov
mov
xor
test
push
mov
lds
and
jmp
sbb
mov
ljmp
icebp
aaa
leave
clc
adc
or
cmc
jp
es
xor
xchg
data16
add
or
jmp
insl
ficompl
dec
out
fildl
push
icebp
push
movl
inc
xchg
fstpt
das
sbb
xchg
xor
add
scas
xor
aad
lods
in
loopne
dec
sbb
les
dec
mov
fildll
leave
outsb
jns
std
scas
pop
add
pop
jno
fnstenv
xchg
inc
gs
push
adc
lret
push
rorl
test
subb
xor
or
inc
jg
jo
or
mov
xchg
cmp
jecxz
xchg
xchg
cs
mov
insb
adc
int
loope
cmp
ja
addl
mov
loope
mov
dec
stos
add
sbb
fucomi
xchg
orl
mov
cltd
pop
sahf
and
pop
xchg
repz
xchg
pop
shll
enter
test
jne
es
repnz
iret
add
das
xor
mov
push
sbb
jns
xchg
icebp
js
xchg
in
pop
daa
mov
pop
ret
xor
sbb
arpl
out
les
call
loopne
mov
or
mov
push
and
mov
das
mov
cmp
in
mov
xor
cmpsb
addr16
mov
loop
lahf
shl
int
das
out
es
jb
shll
imul
loopne
outsb
dec
iret
sbb
ret
fstpl
mov
popf
cld
sbb
sub
cs
iret
decl
jne
and
test
mulb
xchg
inc
dec
mov
mov
pop
daa
push
out
rcrl
test
add
xchg
lds
mov
ja
adc
mov
and
roll
pop
mov
cmpsl
inc
aaa
mov
shll
cmpsl
add
and
popf
scas
cs
lods
adc
stos
and
jno
test
loopne
nop
xchg
out
add
fidivs
cmp
inc
fs
fdivp
cwtl
cmpb
sub
push
or
inc
ja
xor
shl
push
les
jmp
imul
popa
lock
sbb
mov
std
sbb
xor
adc
sub
je
sbb
in
jmp
pusha
push
dec
pop
mov
sbb
loopne
insl
pusha
mov
aaa
xlat
pop
dec
jmp
pop
dec
mov
or
sbb
push
dec
xacquire
fcoms
sub
adc
addr16
int
xchg
les
or
in
cmpsb
xchg
or
xor
or
jo
popl
pop
es
push
sbb
jmp
je
jae
dec
out
push
and
repz
sti
mov
inc
and
ret
pop
ja
mov
xchg
sub
dec
fldcw
pop
jb
addr16
fwait
xor
mov
je
adc
loope
sub
cmp
add
or
lods
fstl
and
sub
push
mov
cwtl
add
bound
iret
or
pop
jnp
aaa
outsb
sub
das
or
mov
jo
inc
popa
dec
addr16
pop
add
mov
cmpsb
and
sub
cmp
mov
out
sub
mov
imul
dec
mov
pop
int
xor
loopne
in
cmc
sbb
aaa
fmull
ret
adc
xchg
std
add
inc
jae
in
sbb
fisubl
outsl
and
sub
cmp
and
or
mov
pop
mov
sbb
fwait
dec
in
je
and
adc
shll
xchg
rcll
cs
fsubp
mov
push
xor
mov
adc
dec
add
dec
add
mov
insl
sahf
jb
xchg
pushf
aad
mov
cmc
push
cmovno
mov
cmp
movsl
ljmp
sub
or
outsl
mov
lods
sbb
inc
cmp
call
add
mov
xor
adc
sarl
stos
aaa
sbb
adc
shrb
adc
xor
sub
push
sub
push
and
out
incl
pop
adc
lea
pop
mov
xor
shll
xor
xor
jno
xchg
orl
pop
pop
sbb
test
scas
mov
and
popf
adc
adcl
mov
jns
pop
and
jmp
add
pop
dec
test
adc
add
jo
cmc
mov
imul
cmpsl
push
mov
xchg
jns
xchg
inc
and
adc
lret
or
test
mov
push
mov
sub
lds
setnp
or
ja
jnp
in
jae
jl
push
push
sub
clc
dec
fs
test
pop
aad
fisubl
mov
jbe
jge
int
dec
mov
jbe
mov
mov
mov
aaa
out
sbbb
sbb
sbb
mov
dec
xchg
pop
inc
push
xchg
mov
lret
mov
repz
shl
dec
dec
movsl
or
pop
test
add
pop
pop
dec
test
jnp
sbb
jne
pop
sbb
cs
sbb
aad
xor
mov
add
xchg
adc
mov
and
aad
roll
adc
cmp
nop
test
inc
dec
arpl
cld
aad
inc
sbb
lds
es
sub
pop
imul
cltd
fmuls
rorb
mov
or
ljmp
jne
xchg
cs
jg
adc
or
jno
xlat
push
push
fistps
sarl
jecxz
sub
std
ja
or
mov
cmp
stos
aad
mov
fwait
jbe
mov
mov
push
pop
sbb
sbb
lds
sbb
pop
popa
add
je
adc
push
out
pop
jg
inc
push
icebp
out
xor
dec
sub
pushf
jl
das
pop
imul
int
sub
inc
mov
fstl
loope
sub
pop
hlt
inc
mov
movsl
mov
push
cmp
imul
shll
cmp
idiv
xor
imul
xchg
dec
add
adc
orb
cmp
add
pop
xchg
add
das
sbb
fldl
imul
xchg
adc
dec
mov
pop
in
add
add
jae
insl
fsubrs
jmp
movsl
jmp
fpatan
sbb
inc
lods
fwait
jae
or
sub
in
jle
fwait
xorb
mov
std
int
sub
stos
xchg
xchg
ret
aad
lds
int
jns
lds
pop
mov
loop
pop
movsl
mov
icebp
push
push
in
cmp
sbb
ss
adc
pop
dec
mov
jae
fwait
dec
sbb
mov
lds
push
ret
mull
xor
movsl
pop
pop
je
inc
add
mov
rol
inc
outsl
negb
jno
pop
icebp
fists
sub
lods
insl
dec
sti
push
outsl
add
jne
jnp
popa
sub
add
xor
adc
cmp
imull
push
loope
das
and
add
sbb
pop
mov
and
pop
icebp
fcmovnb
fwait
pop
dec
mov
shrl
xor
pop
lods
fwait
loope
mov
or
pop
pop
mov
roll
pop
sbb
cltd
pop
jg
jae
sub
xchg
cmpsl
inc
dec
pop
ret
loop
daa
hlt
jns
pop
xor
mov
inc
fldenv
into
pop
pop
rorb
sub
nop
adc
pop
sub
adc
lock
or
cmp
xor
movl
sub
jmp
roll
imul
fisttpll
std
dec
mov
das
dec
jg
push
adc
pop
pop
dec
dec
xor
inc
movsb
rcll
sub
inc
dec
test
pop
roll
insl
add
jne
out
sbb
mov
xchg
jns
jbe
adcl
sti
mov
pop
rcll
fcoms
or
pop
test
je
xorl
sub
enter
mov
fstl
dec
add
push
nop
dec
sbb
aad
aas
cmp
fidivl
lea
xor
dec
sbb
mov
jbe
jmp
sbb
movb
cmc
or
rorl
jae
adc
rolb
fimuls
outsl
xor
sbb
imul
negl
jns
jno
mov
ja
push
sub
pop
xchg
stc
scas
dec
lods
mov
lea
jecxz
fdivrs
ja,pn
fmull
mov
dec
loope
insb
jno
add
outsl
sti
or
jo
jecxz
cmp
divl
adc
xor
jg
xchg
popa
or
xlat
sti
ficoms
jecxz
fstpl
or
clc
mov
iret
add
add
sbb
sbb
push
addr16
outsl
xor
cs
add
jbe
jne
pop
jnp
cmp
out
jmp
cmc
int
jp
cltd
arpl
push
sbb
scas
aaa
dec
push
pop
push
hlt
and
mov
scas
push
scas
push
and
clc
mov
sbb
sbb
mov
jp
xor
dec
lret
add
call
or
push
inc
mov
mov
je
dec
movsl
mov
push
and
inc
repz
lods
and
or
xchg
mov
scas
ja
push
or
orl
movsl
sbb
pop
ja
sub
xchg
out
ret
test
xchg
fst
pop
or
negl
pop
lret
daa
nop
nop
jge
sarl
hlt
or
lret
or
ficomps
add
jg
sbb
pop
adc
das
mov
mov
jge
daa
sbb
and
dec
cmp
push
decl
mov
or
daa
jmp
sbb
add
pop
ret
repz
mov
mov
out
aam
mov
incl
mov
and
test
fimuls
or
sub
cmp
lock
jge
lock
movsl
test
fldt
nop
icebp
pop
cmp
add
imul
adc
and
ficoms
loope
add
adc
inc
and
or
fsts
sbb
mov
pop
and
lahf
xchg
inc
fistl
in
add
and
push
dec
or
add
ljmp
daa
or
cmpsb
add
adc
stc
mov
movsl
xlat
dec
and
bound
and
jo
lods
aas
loope
in
in
push
mov
fstpt
add
movsb
push
daa
mov
jge
div
pop
scas
mov
popa
pop
scas
jmp
fwait
pop
or
add
or
test
imul
or
add
sub
outsb
add
or
add
fcomip
sub
dec
sub
mov
pop
or
push
flds
and
enter
roll
and
add
cmp
call
adc
mov
xor
dec
or
arpl
sbb
aaa
sbb
ficoml
jmp
sub
mov
sub
or
xchg
pop
push
jge
es
out
push
jb
push
push
arpl
inc
inc
push
fmull
inc
cs
outsb
arpl
lods
adc
sbb
add
inc
es
or
data16
sarl
lret
dec
and
negb
inc
inc
inc
gs
jno
push
je
dec
sbb
sbb
ja
es
jge
fwait
pop
inc
push
inc
push
push
xor
pop
mov
outsl
lcall
imul
jl
push
mov
mov
push
cs
and
inc
fs
jae
mov
jae
adc
outsb
inc
in
and
adc
inc
jae
jo
shrl
rolb
push
push
xchg
notl
testl
fldenv
sub
leave
xchg
lods
shlb
decb
push
ficoms
popa
dec
lock
out
je
jg
jae
dec
push
and
xor
movsl
jle
orl
inc
fiaddl
pop
lds
pop
int3
xor
add
push
mov
push
loop
js
jno
mov
inc
data16
nop
loopne
mov
mov
push
sub
pop
pusha
jg
and
dec
inc
mov
pop
pop
dec
rclb
inc
and
ljmp
call
add
pop
inc
xor
push
xor
arpl
jg
push
push
mov
iret
sbb
bound
or
enter
loop
shll
daa
mov
sub
xorb
mov
cmp
push
and
jne
jo
push
popl
out
scas
ja
shr
push
and
shl
loop
xchg
je
aaa
in
outsb
dec
inc
add
mov
js
push
js
push
imul
add
push
int3
cs
mov
mov
push
fidivrs
xor
jmp
dec
mov
dec
iretw
sbb
push
push
push
data16
xorb
push
pop
mov
dec
push
or
cmpsb
lds
dec
les
push
das
into
push
mov
mov
dec
pop
aam
xlat
push
push
fnsave
sub
pop
pop
ret
orl
mov
enter
loopne
cs
jmp
mov
or
sub
push
shll
jp
xlat
out
sbb
and
sub
popa
sub
mov
fiadds
add
icebp
mov
push
cli
sub
inc
mov
lods
fsts
and
dec
mov
push
dec
lds
add
jb
bound
incb
and
adc
jnp,pn
and
rclb
cmp
bound
xor
aaa
add
pop
xor
sub
fs
xchg
out
int3
jae
insb
or
pusha
stc
mov
mov
add
cmp
fidivl
outsl
xchg
mov
imul
filds
pushf
cmp
push
insb
mov
sbb
jno
ja
adc
dec
mov
xchg
je
popa
mov
pop
scas
andb
adc
jae
outsb
add
dec
je
sub
cmp
push
inc
mov
push
xchg
inc
sub
xchg
jbe
movsl
add
jmp
loop
inc
jbe
xor
xor
push
jae
and
clc
jae
sbb
push
mov
add
dec
inc
js
loope
xchg
lock
sbb
inc
mov
ja
inc
dec
add
addr16
inc
add
push
push
sub
inc
xchg
pop
cmpsb
test
jge
out
fs
or
mov
mov
shll
or
jge
jb
aam
xchg
jmp
fcmovne
scas
mov
and
fidivrs
in
outsb
ss
out
loop
inc
dec
add
fwait
das
in
or
add
loop
add
or
fld
arpl
outsb
sbb
jae
aad
ficomps
int3
jae
pop
push
or
add
pushf
mov
sub
rcr
add
mov
mov
jno
jns
mov
or
outsb
inc
adc
sbb
subb
inc
pop
repnz
in
sbb
mov
fmul
dec
stc
js
stos
das
add
aaa
inc
xlat
push
jo
mov
clc
xor
loopne
std
add
dec
ljmp
jecxz
loopne
inc
rcll
rorb
jno
sub
gs
adc
pop
daa
js
sbb
loope
fcoms
lods
adc
cmp
or
mov
cmp
sub
ret
dec
or
add
adc
scas
and
dec
add
or
aam
dec
sbb
pop
add
push
sub
call
add
shll
repz
pop
push
cmc
call
add
ret
rcr
push
stc
adc
sbb
lods
push
lret
pop
jo
es
adc
mov
cmove
adc
or
jno
or
test
icebp
testl
or
or
or
mov
loop
ljmp
lcall
nop
das
sbb
and
sbb
sub
adc
xor
fcoms
sbb
outsl
fs
gs
sub
cmp
into
adc
sub
das
sub
inc
dec
inc
or
adc
clc
enter
jmp
dec
imul
popf
lds
sbb
ss
xchg
dec
mov
and
fsubl
jnp
popa
cltd
sbb
adc
pop
inc
sub
xlat
arpl
out
jbe
push
xchg
pop
adc
jg
fmul
add
push
sarl
mov
std
add
fimuls
in
mov
and
in
sbb
outsb
cmp
cmp
std
adc
add
std
add
loopne
adcb
jmp
mov
out
add
in
dec
imul
jno
fildll
subl
and
push
push
loop
jne
jecxz
roll
add
push
in
shr
fnsave
lods
fmuls
add
fwait
icebp
xor
loopne
add
cld
adc
pop
mov
sarl
jmp
xorl
dec
sbb
dec
shlb
repz
or
ljmp
and
xchg
sbb
sub
push
in
in
insb
mov
adc
test
mov
and
push
in
mov
lcall
inc
sbb
cmp
outsl
jne
inc
add
mov
movsb
add
jns
cmpsl
dec
test
loop
es
lcall
add
or
adc
addl
pop
sbb
stos
mov
add
imul
subl
inc
dec
mov
pusha
lret
jg
add
mov
xchg
adcl
jo
popa
rolb
popf
rcrl
or
push
mov
outsb
xchg
or
testb
in
jge
lea
dec
dec
or
cmp
lea
pop
mov
cmpsl
popf
xchg
sbb
push
fs
je
add
add
stos
mov
arpl
pop
sarb
push
rclb
mov
dec
add
adc
mov
rcll
roll
leave
add
je
lds
mov
fs
and
outsb
les
clc
gs
int
test
mov
test
mov
sub
daa
push
push
pop
or
mov
push
dec
and
mov
xchg
jb
testl
in
sbb
lods
les
adcb
jns
pop
ret
shrl
sub
push
dec
mov
mov
repz
push
jae
pusha
sub
mov
ret
repnz
leave
sbbb
or
add
pusha
or
pop
lret
jae
ret
in
insl
pop
or
push
mov
cmc
leave
testl
adc
insw
pop
out
fcoms
inc
add
dec
push
lds
repz
popf
clc
shrb
aam
jg
push
shll
sbb
lcall
sub
add
push
mov
jae
inc
lods
les
pop
jae
lods
adc
mov
mov
nop
mov
dec
mov
cmp
pop
inc
add
inc
dec
iret
push
xor
stos
dec
or
fxch
sbb
inc
cmp
sbb
lods
icebp
fnsave
dec
out
jbe
inc
cltd
add
pushw
xchg
push
or
arpl
not
and
dec
push
dec
sbb
sahf
jmp
fisttpll
sbb
ljmp
pop
test
pop
ret
popa
sub
insb
out
cltd
out
in
pop
xlat
add
in
pop
movsb
pop
sti
aam
dec
mov
test
les
push
adc
loop
push
flds
pop
cs
jb
sbb
psubq
test
fidivl
enter
cwtl
mov
jb
or
movsb
js
mov
js
sbb
mov
xchg
cmp
shrb
loope
mov
das
push
xorps
popa
inc
popf
icebp
push
imul
test
data16
cmp
and
jb
movsb
pop
and
mov
mov
aad
dec
addr16
push
out
lret
cld
ljmp
cmc
js
dec
es
lods
outsb
dec
push
test
cwtl
mov
loopne
pop
inc
dec
mov
push
pop
andl
cmp
or
mov
mov
call
daa
js
mov
js
pusha
cmp
insb
push
or
inc
dec
cwtl
cmpsb
pushf
pop
sbb
inc
inc
push
stos
gs
fistps
pusha
dec
pop
inc
sbb
cmp
add
inc
push
addr16
mov
pop
xor
ja
lock
adc
mov
xor
stos
mov
fiaddl
jo
mov
dec
pop
mov
daa
sub
inc
cmp
aaa
add
pop
cmp
sbb
shrl
xchg
xchg
subl
inc
adc
pop
pop
loop
fwait
mov
outsb
dec
xor
mov
xchg
sbb
xchg
push
jecxz
sbb
fbstp
test
pop
xchg
and
or
test
dec
xor
ret
or
sbb
push
jle
inc
js
mov
movsl
add
outsl
adc
pop
inc
loope
xor
cmpsb
rolb
add
andl
lock
sub
add
aaa
inc
dec
dec
and
adc
icebp
sahf
mov
data16
arpl
and
in
subb
jg
inc
pop
lret
jns
jno
xor
sub
mov
jle
sbb
push
mov
push
cmp
lds
jg
stos
mov
outsl
mov
mov
xchg
xor
add
pusha
jo
cmp
test
add
jp
mov
inc
xorl
mov
movhps
dec
fistpll
addr16
roll
mov
mov
inc
mov
out
adc
sub
mov
push
push
jp
inc
jb
mov
adc
dec
add
cmp
js
push
adc
out
shll
fcoms
jno
jbe
sbb
adc
outsl
dec
sub
mov
stos
stos
scas
lock
fildll
dec
mov
adcl
mov
adc
pop
mov
push
insl
mov
mov
daa
mov
push
add
and
bound
mov
jp
mov
mov
mov
stc
sti
pop
pop
add
xchg
jmp
out
stos
dec
dec
add
inc
push
test
xor
sti
adc
lahf
std
out
add
icebp
or
mov
icebp
sbb
sbb
xchg
sub
pushf
rcrb
orl
aaa
dec
inc
outsb
daa
js
pop
add
pavgb
or
outsb
fcomps
inc
inc
pop
loop
inc
dec
loop
hlt
dec
xor
std
scas
push
int3
adc
dec
mov
dec
inc
push
pop
daa
shlb
cmpsb
sbb
mov
jbe
sbb
and
sub
call
and
cmp
push
inc
push
fistpl
sbb
in
out
xor
pop
dec
mov
mov
out
xchg
cmpb
pop
je
pop
push
shll
dec
daa
das
pusha
orl
out
mov
pop
pop
jmp
popf
and
inc
push
ds
xchg
sbb
daa
mov
imul
adc
xor
daa
loop
dec
xor
jne
sbbb
out
push
and
ret
cs
fsubs
fs
popf
lcall
inc
or
lods
jl
arpl
dec
loopne
into
push
inc
xchg
loop
or
xchg
addl
mov
pop
sbb
sarb
dec
inc
rol
outsl
pop
mov
ret
icebp
push
mov
inc
inc
sbb
or
shll
dec
dec
add
ret
or
mov
add
cmp
push
pop
sbb
sbb
xor
ret
jg
adc
and
jns
adc
mov
test
ljmp
pop
sbb
inc
cmp
js
push
je
shl
jecxz
push
or
pop
jnp
jmp
xorl
movsb
loopne
out
pop
pop
push
ret
dec
cmp
shld
pop
fisubrl
dec
inc
inc
cwtl
push
cmp
sub
rcll
dec
js
push
or
xchg
push
testb
jecxz
push
negl
sahf
mov
inc
mov
daa
jns
xor
enter
shrb
je
imul
mov
nop
rorb
or
push
push
push
or
fiadds
stos
scas
and
pop
cwtl
sbb
inc
dec
bound
adc
lea
mov
sub
lods
lea
sub
aas
fldcw
push
inc
push
push
jecxz
sbb
sub
inc
lea
xchg
das
inc
dec
xor
lea
add
and
and
sbb
cmp
pop
outsl
stos
bound
pop
out
ffreep
bound
mov
sti
popf
addr16
sbb
adc
mov
or
iret
or
in
sbb
inc
jo
jge
cmp
and
mov
lods
or
and
adc
cwtl
pushf
or
ret
aam
pushf
mov
add
repnz
inc
dec
add
das
or
mov
nop
and
daa
push
loop
in
sahf
dec
adc
or
lcall
xchg
push
pop
nop
test
gs
out
or
lret
add
and
add
es
mov
lret
xchg
sbb
add
and
loopne
gs
xor
inc
add
mov
add
hlt
add
ljmp
aam
add
inc
jo
jno
mov
test
push
dec
outsb
addr16
inc
push
jmp
push
js
dec
js
scas
inc
andl
adc
stos
pop
xlat
test
mov
fisubrl
jo
inc
insb
cmpsb
fstps
push
daa
sbb
and
pop
mov
inc
clc
and
jmp
xor
add
mov
das
xor
mov
add
int
aas
lcall
call
out
loop
cmpsl
xor
add
ja
pop
lea
mov
add
arpl
sbb
movsb
popa
loopne
sub
xor
bound
jg
ljmp
sbb
fmuls
sub
dec
inc
or
js
push
enter
out
dec
daa
inc
dec
adc
dec
inc
cmp
addl
and
test
int
addb
daa
add
sub
add
pushf
push
test
sub
mov
fldt
popa
popa
pop
pop
sub
pop
dec
sbb
or
jno,pt
inc
adc
pop
add
fmull
dec
pop
pop
pop
ficoml
push
arpl
push
mov
popf
pop
daa
jmp
push
es
pop
push
inc
inc
add
sbb
sbb
fs
inc
add
or
or
push
push
push
jecxz
and
sub
add
sbb
add
mov
pop
stos
pop
adc
mov
test
jbe
jne
add
fcomi
cmp
adc
add
xchg
add
dec
cwtl
cwtl
mov
lods
ja
imul
jge
adc
shrb
lods
pavgw
clc
outsl
mov
movsb
in
sbb
sbb
fimull
or
in
dec
out
jl
jae
loop
xchg
dec
adc
jp
and
mov
lret
rorb
sbb
push
jae
aaa
test
push
or
idivb
or
and
rolb
mov
and
sbb
in
jnp
test
rolb
mov
mov
inc
add
pop
leave
pop
ss
in
inc
pop
and
sbb
ss
dec
mov
push
dec
jns
les
or
push
scas
adc
add
mov
clc
mov
push
enter
ss
fwait
int
daa
test
jo
jae
or
in
mov
aaa
call
add
loope
adc
and
adc
xor
out
jbe
dec
in
add
push
repz
sti
daa
js
cmpsl
jbe
cld
aaa
jne
daa
rcrl
jbe
cmp
aas
xchg
mov
xchg
loope
aaa
push
in
add
rol
in
sti
addr16
sbb
add
sbbl
and
inc
movsb
push
daa
adc
mov
sbbb
mov
mov
inc
loopne
aas
imul
mov
push
mov
adc
ficoml
pop
inc
ret
outsl
xchg
rorb
rcll
mov
popl
daa
pop
adc
in
push
in
adc
sbb
sbb
dec
insl
dec
ss
pop
push
int
push
xchg
lret
mov
mov
xor
jg
test
popa
aas
ret
scas
call
notb
xchg
cmpsl
mov
jb
insl
dec
dec
and
mov
xchg
pop
cld
add
pop
mov
push
and
js
mov
rdtsc
cmp
rol
add
iret
repz
add
aam
dec
imul
and
mov
mov
add
dec
adc
sub
dec
push
xchg
dec
push
inc
adc
push
add
add
nop
inc
add
add
or
or
rcl
rolb
subb
arpl
jnp
dec
mov
dec
or
cmp
inc
js
add
mov
pop
push
sbb
stc
sbb
push
je
cli
inc
xor
gs
out
mov
dec
outsl
fs
gs
popa
outsb
or
adc
fistl
sbb
jb
outsb
je
lods
std
add
dec
fs
xchg
lea
and
inc
cld
roll
shrb
pop
dec
inc
outsb
jne
inc
popa
int
mov
mov
jae
inc
dec
push
pop
shll
sbb
push
pop
dec
popa
or
mov
push
inc
jbe
inc
sbb
adc
iret
push
outsl
inc
add
sub
jo
ret
xorb
mov
lret
and
fnstsw
notl
nop
push
shlb
push
pop
push
adc
shlb
and
sub
or
gs
out
push
push
arpl
sahf
jns
mov
out
scas
ljmp
ja
loopne
inc
in
sub
xor
je
xor
test
arpl
or
sahf
shlb
cmp
cld
mov
mov
push
ja
jo
je
inc
daa
cmp
mov
xor
jae
insl
push
fcmovb
rcr
xor
jb
dec
outsb
mov
xchg
xchg
mov
outsl
bnd
pop
inc
sbb
or
jg
insl
jo
sbb
sbb
popa
jae
or
cmpsl
inc
enter
out
je
imul
jo
insb
jg
imul
mov
mov
inc
loop
jno
in
or
jo
inc
jbe
xor
inc
test
cmp
addl
orb
fidivs
sbb
cmp
xchg
mov
loopne
call
cmp
add
into
lods
sub
inc
pslld
push
inc
add
dec
add
add
pop
inc
sub
popl
add
cmpsb
pop
fstps
push
enter
sbb
fcmovnbe
int3
pop
add
rolb
gs
fwait
cmp
das
test
cld
mov
pop
add
or
sub
add
cs
cld
inc
dec
inc
inc
xor
and
add
xchg
outsl
adc
push
pusha
inc
inc
push
inc
and
add
aaa
inc
push
insb
in
inc
rolb
and
mov
or
add
sub
shrb
cmp
out
dec
addb
push
inc
mov
repz
mul
dec
add
push
jae
dec
jbe
jne
movsl
jbe
dec
mov
pop
xchg
add
and
dec
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
