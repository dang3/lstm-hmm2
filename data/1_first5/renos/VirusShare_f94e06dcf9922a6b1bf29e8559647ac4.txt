push
mov
sub
mov
movl
orl
xorl
mov
mov
mov
addl
xor
cmp
jae
sub
sub
movl
orl
leave
ret
int3
int3
int3
int3
push
mov
sub
xor
andl
orl
lea
cmp
jae
mov
sub
sub
mov
mov
movl
andl
sub
xorl
mov
andl
cmp
jne
mov
xorl
cmp
ja
xor
orl
sub
xor
cmp
je
mov
addl
andl
mov
andl
mov
andl
mov
lea
andl
mov
mov
xor
cmp
jb
subl
mov
andl
addl
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
xorl
andl
addl
xor
sub
mov
call
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
subl
lea
subl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
lea
subl
xor
mov
orl
sub
orl
andl
cmp
jne
mov
xor
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
andl
lea
sub
call
mov
movl
lea
lea
cmp
jne
xor
sub
lea
orl
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
lea
mov
lea
lea
lea
mov
mov
lea
lea
mov
lea
mov
andl
mov
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
lea
xor
lea
movl
mov
xorl
sub
lea
test
jbe
mov
mov
orl
mov
subl
call
mov
orl
orl
cmp
ja
mov
xor
sub
andl
xorl
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
orl
cmp
jae
mov
cmp
jbe
xor
sub
sub
andl
mov
sub
cmp
je
lea
xor
mov
sub
subl
mov
mov
movl
addl
mov
mov
subl
andl
andl
mov
xor
andl
andl
mov
cmp
jne
subl
mov
leave
ret
int3
push
mov
sub
sub
andl
mov
mov
mov
mov
xor
subl
mov
mov
andl
mov
mov
andl
mov
mov
orl
orl
cmp
jb
mov
sub
andl
movl
addl
mov
sub
cmp
jae
xor
mov
xorl
subl
lea
mov
andl
andl
addl
subl
mov
lea
andl
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
cmp
jne
mov
sub
movl
cmp
jbe
lea
xor
mov
cmp
jne
mov
cmp
jae
lea
xor
sub
subl
cmp
je
orl
mov
lea
movl
sub
mov
xor
mov
addl
xorl
mov
mov
mov
andl
xorl
andl
orl
leave
ret
push
mov
sub
mov
addl
addl
movl
xor
cmp
jb
mov
andl
cmp
jbe
movl
mov
mov
xor
movl
cmp
jb
mov
cmp
jb
addl
subl
mov
sub
mov
xorl
andl
cmp
jbe
lea
mov
sub
sub
sub
sub
orl
sub
mov
mov
lea
leave
ret
int3
int3
push
mov
sub
mov
movl
cmp
jb
mov
cmp
jne
lea
xorl
addl
call
call
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
mov
xorl
mov
xor
xor
addl
mov
xor
cmp
jb
sub
xorl
test
jne
call
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
sub
mov
andl
mov
cmp
jae
mov
cmp
jne
addl
andl
call
mov
xor
test
jb
lea
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
sub
xor
mov
cmp
jne
sub
call
xor
sub
andl
movl
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
xor
movl
mov
mov
movl
mov
orl
addl
andl
cmp
jae
xorl
mov
lea
subl
call
xor
movl
orl
cmp
jne
andl
sub
mov
sub
subl
lea
xor
xor
andl
orl
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
andl
xor
mov
mov
call
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
andl
mov
addl
mov
xorl
mov
test
jne
mov
cmp
jbe
mov
call
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
sub
subl
andl
lea
andl
call
lea
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
lea
mov
mov
mov
lea
movl
mov
lea
xor
sub
addl
xor
xorl
sub
cmp
jae
sub
xorl
xor
mov
call
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
mov
andl
mov
call
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
sub
andl
mov
andl
xor
addl
lea
sub
cmp
ja
xor
mov
lea
addl
movl
call
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
movl
mov
orl
mov
subl
mov
xor
addl
sub
cmp
jne
xor
xorl
cmp
jae
xor
call
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
lea
lea
lea
mov
mov
xor
mov
subl
sub
sub
xor
xor
cmp
je
xor
movl
cmp
jbe
xor
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
movl
andl
subl
mov
lea
movl
cmp
jbe
mov
cmp
jne
call
call
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
lea
andl
lea
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
subl
mov
mov
lea
addl
call
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
xorl
lea
mov
call
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
subl
xorl
mov
xor
mov
cmp
jae
mov
sub
sub
cmp
jbe
mov
andl
call
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
subl
mov
lea
addl
mov
andl
mov
sub
subl
xorl
xorl
sub
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
sub
mov
xor
subl
mov
call
lea
mov
lea
mov
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
mov
xorl
mov
sub
andl
addl
orl
test
ja
sub
mov
subl
call
mov
lea
lea
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
sub
xorl
mov
mov
cmp
ja
mov
addl
lea
mov
call
lea
lea
lea
mov
mov
mov
mov
lea
lea
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
andl
xorl
sub
andl
mov
andl
mov
movl
xorl
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
sub
orl
orl
lea
mov
mov
mov
andl
movl
cmp
jb
mov
mov
xorl
cmp
jbe
sub
mov
andl
mov
sub
test
jae
xor
andl
lea
mov
orl
andl
subl
test
jae
sub
mov
cmp
je
lea
push
call
lea
mov
lea
lea
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
orl
lea
andl
subl
mov
addl
subl
sub
andl
subl
orl
cmp
je
xor
movl
orl
mov
orl
orl
xor
mov
andl
movl
sub
cmp
jb
mov
subl
xorl
sub
mov
xorl
mov
mov
cmp
ja
mov
andl
lea
andl
xor
xor
mov
xorl
sub
xorl
mov
xor
sub
subl
sub
xor
mov
andl
mov
subl
mov
cmp
jae
mov
test
jne
mov
orl
cmp
jbe
mov
subl
test
jbe
call
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
andl
mov
xor
movl
sub
xor
mov
sub
andl
xor
mov
incl
xor
xor
movl
mov
andl
mov
cmp
jb
xor
mov
cmp
jae
movl
subl
xor
mov
xorl
test
jne
movl
mov
addl
xor
add
sub
andl
mov
addl
sub
orl
mov
xor
mov
mov
mov
mov
mov
xor
mov
mov
subl
xor
mov
andl
mov
push
push
push
push
push
call
mov
mov
sub
andl
mov
movl
movl
sub
mov
call
mov
mov
lea
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
andl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
andl
lea
sub
xorl
mov
subl
test
jb
mov
cmp
jne
call
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
lea
lea
lea
mov
lea
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
mov
xor
lea
lea
subl
mov
addl
subl
xorl
test
jbe
mov
sub
orl
andl
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
lea
lea
mov
lea
mov
mov
mov
mov
andl
movl
subl
andl
call
lea
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
andl
lea
mov
mov
mov
mov
addl
subl
addl
call
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
addl
subl
mov
addl
lea
orl
mov
subl
call
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
andl
sub
subl
xorl
mov
xor
xor
xorl
movl
xor
mov
subl
xor
andl
call
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
andl
mov
mov
lea
xor
sub
subl
test
je
mov
cmp
jbe
lea
mov
mov
add
mov
rep
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
lea
mov
mov
orl
addl
mov
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
sub
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
andl
mov
mov
mov
mov
xorl
lea
lea
subl
lea
subl
call
mov
mov
lea
lea
mov
lea
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
andl
mov
mov
mov
call
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
mov
mov
movl
subl
lea
lea
addl
mov
orl
cmp
je
xor
andl
andl
lea
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
addl
mov
mov
andl
movl
sub
xor
andl
cmp
jne
xor
mov
mov
mov
call
lea
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
orl
lea
mov
andl
mov
lea
xor
andl
movl
sub
cmp
jae
mov
andl
addl
andl
call
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
orl
xorl
mov
xor
mov
orl
mov
mov
xorl
mov
sub
mov
subl
orl
xor
orl
cmp
jbe
mov
subl
sub
test
jne
xorl
addl
lea
mov
mov
xor
addl
cmp
jb
lea
addl
xor
xor
xor
addl
mov
sub
mov
sub
dec
cmp
jne
call
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
lea
mov
lea
mov
lea
sub
mov
subl
movl
xor
sub
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
orl
subl
xorl
mov
andl
cmp
jne
mov
mov
cmp
jne
movl
call
lea
lea
lea
lea
lea
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
andl
addl
subl
mov
mov
lea
mov
cmp
jb
mov
test
jb
call
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
addl
mov
addl
xor
sub
andl
cmp
je
xor
cmp
jb
orl
call
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
andl
orl
subl
mov
lea
xorl
mov
xor
add
cmp
jne
sub
sub
mov
test
jbe
mov
movl
mov
xorl
subl
call
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
xor
mov
mov
lea
mov
orl
sub
cmp
je
sub
mov
mov
call
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
xor
xorl
call
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
sub
orl
movl
mov
andl
sub
call
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
mov
mov
andl
mov
mov
addl
mov
mov
xor
subl
mov
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
xorl
mov
movl
movl
mov
mov
mov
addl
mov
mov
mov
mov
mov
movl
lea
cmp
jbe
mov
mov
addl
cmp
jne
xor
call
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
movl
mov
mov
addl
lea
call
mov
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
orl
subl
andl
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
lea
lea
movl
subl
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
call
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
subl
mov
mov
xorl
addl
xor
orl
mov
cmp
je
movl
andl
mov
mov
sub
andl
xor
xorl
mov
mov
addl
cmp
jb
sub
xorl
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
mov
lea
mov
lea
orl
xorl
addl
orl
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
sub
mov
andl
andl
cmp
jne
mov
cmp
ja
push
call
mov
mov
orl
xorl
movl
andl
orl
cmp
je
orl
mov
addl
lea
subl
mov
mov
lea
xorl
cmp
jbe
mov
sub
orl
cmp
jne
orl
push
xor
mov
mov
movl
movl
ret
sub
mov
andl
lea
xorl
xor
xor
cmp
jne
mov
xor
xorl
call
mov
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
xor
subl
andl
orl
xorl
addl
sub
orl
mov
call
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
lea
lea
lea
mov
mov
lea
movl
mov
orl
call
lea
lea
lea
mov
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
call
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
xor
mov
mov
orl
addl
addl
xor
orl
xor
test
jae
sub
sub
test
ja
mov
andl
pushl
call
sub
andl
cmp
jb
xor
addl
mov
andl
lea
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
orl
lea
sub
addl
cmp
je
xor
cmp
je
subl
sub
addl
cmp
jne
mov
mov
lea
andl
mov
mov
call
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
orl
call
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
andl
sub
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
andl
mov
lea
lea
mov
cmp
jb
xor
orl
xorl
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
orl
mov
andl
mov
sub
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
lea
lea
andl
mov
mov
mov
mov
call
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
andl
andl
lea
sub
lea
movl
xorl
cmp
jne
xor
lea
andl
orl
sub
call
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
andl
addl
addl
movl
andl
subl
mov
xor
subl
andl
cmp
jae
sub
sub
addl
sub
movl
subl
xor
mov
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
call
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
xorl
andl
mov
xor
mov
xor
mov
sub
call
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
xor
call
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
xorl
xorl
addl
andl
mov
cmp
ja
mov
addl
subl
andl
xor
lea
movl
subl
call
lea
lea
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
xor
lea
mov
andl
mov
xor
mov
orl
andl
mov
mov
mov
push
push
push
call
mov
call
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
orl
mov
movl
mov
lea
xorl
xor
test
ja
mov
orl
addl
andl
call
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
addl
sub
mov
sub
andl
andl
mov
call
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
movl
lea
lea
mov
subl
mov
mov
mov
andl
call
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
lea
andl
lea
sub
movl
call
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
addl
lea
subl
xor
xorl
movl
cmp
ja
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
subl
mov
orl
sub
addl
addl
movl
xorl
cmp
je
mov
subl
andl
cmp
jne
call
lea
lea
mov
lea
mov
mov
lea
mov
mov
lea
lea
lea
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
sub
xor
subl
cmp
jb
xor
mov
xor
mov
xorl
xor
mov
addl
call
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
andl
lea
xorl
mov
orl
lea
test
jbe
xor
andl
mov
orl
mov
orl
push
pushl
call
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
subl
mov
mov
call
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
lea
mov
andl
mov
subl
sub
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
orl
mov
xor
xorl
andl
addl
addl
cmp
jae
mov
andl
andl
mov
call
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
sub
mov
addl
lea
mov
mov
andl
cmp
jae
mov
mov
andl
lea
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
lea
lea
movl
sub
lea
mov
movl
subl
call
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
sub
mov
movl
mov
sub
andl
mov
movl
mov
mov
call
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
lea
lea
mov
mov
mov
lea
mov
cmp
jbe
xor
xorl
mov
cmp
jae
call
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
mov
xorl
movl
cmp
jbe
xor
mov
xor
xorl
sub
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
movl
orl
movl
mov
addl
mov
test
jb
xor
mov
orl
cmp
jae
mov
ret
call
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
lea
lea
lea
lea
lea
xorl
lea
lea
call
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
xorl
mov
mov
orl
mov
orl
mov
cmp
jne
mov
sub
subl
lea
cmp
ja
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
mov
sub
lea
lea
mov
lea
xor
subl
cmp
je
xor
andl
orl
andl
cmp
jb
mov
mov
andl
xorl
push
call
mov
cmp
jb
xor
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
orl
lea
addl
andl
xor
addl
mov
sub
mov
sub
orl
leave
ret
int3
int3
int3
int3
push
mov
sub
sub
sub
mov
test
jbe
mov
sub
mov
lea
sub
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
sub
mov
xor
lea
xor
andl
sub
cmp
je
sub
lea
andl
leave
ret
int3
push
mov
sub
call
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
xor
lea
lea
subl
mov
xor
andl
addl
cmp
jne
subl
mov
xorl
andl
mov
mov
mov
cmp
jb
mov
subl
test
je
subl
orl
mov
mov
sub
cmp
jne
mov
mov
test
ja
call
call
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
andl
andl
andl
addl
lea
sub
sub
andl
subl
mov
mov
orl
lea
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
addl
mov
xor
mov
andl
test
jbe
xorl
addl
xorl
sub
movl
subl
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
orl
xorl
mov
xor
orl
andl
sub
movl
andl
addl
addl
orl
andl
call
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
mov
xor
lea
andl
mov
cmp
ja
mov
cmp
ja
xorl
xorl
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
mov
lea
lea
mov
mov
mov
andl
mov
mov
mov
orl
orl
xor
xorl
sub
cmp
jne
mov
mov
xor
orl
mov
sub
subl
mov
mov
test
ja
sub
andl
mov
mov
subl
mov
sub
cmp
je
sub
cmp
jb
lea
xor
addl
andl
subl
mov
cmp
jne
mov
sub
xor
lea
movl
cmp
ja
sub
orl
cmp
je
mov
mov
orl
mov
sub
test
je
mov
sub
cmp
jbe
xor
mov
xorl
andl
cmp
jae
mov
andl
mov
test
jb
mov
sub
subl
sub
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
lea
lea
mov
mov
lea
lea
lea
mov
lea
lea
lea
lea
subl
lea
mov
mov
call
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
subl
subl
mov
mov
xor
mov
andl
mov
mov
call
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
lea
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
orl
orl
mov
movl
xorl
mov
lea
lea
mov
mov
cmp
je
mov
orl
call
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
mov
andl
mov
mov
addl
xor
xorl
cmp
je
mov
subl
cmp
jae
xor
subl
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
sub
xorl
mov
mov
sub
orl
cmp
jb
mov
subl
cmp
jb
andl
andl
orl
andl
xor
mov
lea
cmp
jbe
mov
sub
xorl
test
jae
orl
mov
push
push
call
je
xor
xorl
orl
test
jb
mov
cmp
je
pushl
call
mov
mov
lea
mov
mov
test
je
sub
andl
orl
xor
call
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
addl
sub
mov
mov
xor
xor
lea
mov
subl
andl
test
jne
mov
movl
call
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
xor
lea
sub
mov
addl
subl
cmp
jne
movl
mov
mov
sub
mov
call
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
sub
mov
xorl
addl
mov
mov
orl
mov
call
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
andl
sub
andl
andl
mov
xor
movl
orl
cmp
je
mov
mov
test
jae
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
movl
mov
andl
xor
mov
mov
mov
andl
mov
movl
mov
mov
andl
sub
movl
subl
orl
andl
lea
call
mov
mov
lea
mov
mov
mov
lea
lea
lea
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
lea
mov
lea
mov
lea
lea
lea
mov
sub
xor
subl
cmp
jne
mov
subl
cmp
ja
xor
addl
call
lea
lea
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
lea
mov
lea
mov
mov
lea
lea
mov
mov
lea
xor
mov
sub
mov
xorl
cmp
jb
mov
orl
xorl
cmp
jbe
push
call
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
subl
lea
sub
xor
mov
mov
movl
mov
andl
mov
cmp
jb
mov
andl
addl
lea
push
call
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
lea
mov
lea
lea
mov
mov
xor
mov
mov
mov
subl
andl
mov
subl
andl
subl
andl
lea
mov
mov
andl
addl
mov
push
call
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
xor
xor
mov
cmp
jae
mov
test
jb
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
subl
lea
xor
sub
mov
addl
mov
test
je
xorl
mov
xorl
xorl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
lea
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
movl
andl
xor
andl
test
ja
mov
addl
mov
lea
orl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
orl
lea
addl
mov
orl
subl
subl
mov
xorl
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
orl
mov
mov
orl
mov
lea
orl
lea
sub
push
call
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
mov
xorl
mov
andl
subl
xor
lea
xor
cmp
je
mov
addl
lea
push
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
movl
lea
addl
xor
sub
mov
cmp
jae
mov
lea
movl
mov
subl
push
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
movl
andl
mov
movl
sub
xorl
mov
orl
cmp
jbe
mov
lea
cmp
jb
push
call
lea
mov
lea
mov
lea
lea
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
addl
xor
mov
sub
addl
orl
xor
sub
call
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
addl
sub
lea
mov
cmp
jae
mov
andl
cmp
ja
xor
push
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
lea
mov
lea
lea
mov
lea
mov
lea
mov
andl
xorl
sub
mov
cmp
jbe
sub
cmp
jbe
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
sub
xor
orl
lea
subl
mov
xor
mov
sub
movl
mov
addl
orl
subl
push
call
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
lea
lea
mov
lea
lea
mov
lea
xor
mov
mov
andl
subl
sub
mov
addl
addl
cmp
ja
sub
cmp
je
mov
lea
push
call
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
sub
mov
sub
lea
subl
mov
xorl
cmp
jbe
sub
lea
andl
cmp
jbe
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
xorl
movl
mov
mov
xorl
orl
xorl
cmp
jbe
mov
orl
xor
mov
lea
lea
push
call
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
xorl
mov
xor
addl
movl
andl
mov
sub
orl
cmp
ja
andl
xor
movl
push
call
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
subl
xorl
orl
sub
lea
mov
movl
test
jb
andl
xor
xor
subl
sub
call
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
sub
andl
andl
sub
cmp
jae
xor
cmp
jbe
mov
mov
andl
orl
andl
movl
xor
mov
cmp
jbe
mov
andl
cmp
jne
incl
mov
orl
cmp
jb
mov
addl
cmp
jae
xor
test
jne
mov
xorl
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
andl
lea
mov
mov
xor
andl
cmp
jae
mov
xor
cmp
jae
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
lea
mov
addl
mov
mov
sub
xor
mov
addl
mov
lea
andl
andl
call
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
orl
andl
andl
sub
xor
orl
mov
sub
mov
movl
andl
andl
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
sub
subl
lea
mov
sub
mov
lea
movl
cmp
ja
mov
mov
cmp
ja
andl
mov
mov
mov
orl
push
pushl
pushl
call
mov
andl
andl
mov
cmp
jbe
mov
addl
cmp
jne
addl
andl
subl
mov
andl
orl
andl
lea
movl
cmp
jb
sub
addl
sub
movl
sub
sub
xor
test
jne
sub
andl
mov
subl
xor
mov
cmp
jae
orl
mov
mov
andl
push
pushl
pushl
call
sub
mov
mov
call
mov
addl
mov
mov
test
je
mov
test
jbe
andl
orl
mov
sub
lea
xorl
cmp
jae
sub
mov
cmp
je
mov
mov
mov
andl
movl
test
jbe
mov
mov
push
pushl
push
call
mov
mov
xor
xor
cmp
jb
xor
sub
cmp
jb
andl
mov
andl
xor
mov
mov
mov
movl
xor
addl
mov
addl
call
sub
addl
orl
subl
movl
xor
sub
mov
subl
mov
cmp
jbe
mov
orl
andl
cmp
ja
mov
addl
orl
mov
cmp
jb
mov
mov
subl
subl
push
pushl
call
mov
sub
mov
test
jb
mov
mov
movl
cmp
jb
xor
mov
mov
mov
cmp
jne
andl
mov
andl
xorl
call
xor
sub
cmp
jae
sub
orl
subl
sub
test
jne
xorl
mov
mov
mov
mov
mov
orl
cmp
ja
xor
sub
cmp
ja
addl
call
xor
mov
xorl
mov
cmp
ja
mov
subl
test
jb
call
xor
andl
addl
xor
cmp
jae
sub
mov
mov
cmp
jbe
call
mov
mov
mov
cmp
je
xor
mov
mov
cmp
jae
call
mov
subl
lea
cmp
jb
mov
mov
addl
movl
mov
movl
subl
mov
lea
lea
orl
sub
movl
addl
cmp
je
mov
movl
cmp
jb
pushl
push
call
call
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
sub
mov
mov
xor
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
subl
mov
mov
mov
mov
andl
leave
ret
int3
mov
xorl
cmp
jne
mov
test
jb
xor
xorl
movl
cmp
jbe
mov
cmp
jne
lea
mov
andl
mov
xorl
cmp
je
mov
cmp
jne
andl
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
lea
lea
mov
mov
andl
lea
xor
mov
call
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
xor
andl
mov
orl
mov
addl
xorl
cmp
ja
mov
xor
addl
mov
addl
xor
subl
test
je
mov
mov
cmp
jbe
sub
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
call
lea
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
addl
lea
lea
mov
sub
addl
xor
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
movl
mov
andl
sub
mov
movl
xorl
mov
call
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
lea
lea
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
lea
xorl
movl
mov
test
je
orl
xor
mov
mov
subl
lea
push
call
xor
sub
orl
mov
mov
movl
xor
xorl
mov
mov
cmp
ja
mov
lea
orl
cmp
jb
sub
sub
mov
call
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
movl
mov
mov
subl
cmp
jbe
sub
mov
mov
lea
mov
mov
sub
cmp
jne
mov
mov
xorl
andl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
andl
mov
andl
mov
call
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
addl
subl
sub
lea
sub
xor
mov
lea
movl
test
je
mov
xor
mov
test
jne
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
xorl
lea
mov
andl
addl
cmp
jae
mov
test
je
call
lea
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
andl
lea
orl
xorl
sub
orl
orl
subl
mov
lea
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
addl
mov
andl
mov
addl
andl
cmp
jb
mov
xorl
cmp
ja
xorl
ret
xor
xorl
lea
orl
subl
mov
xorl
test
jb
mov
andl
xorl
sub
orl
sub
cmp
je
mov
xor
mov
addl
xor
xorl
sub
lea
call
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
subl
movl
sub
mov
mov
mov
mov
addl
mov
call
mov
mov
lea
lea
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
lea
mov
movl
mov
int3
int3
push
mov
sub
mov
mov
addl
cmp
jb
mov
lea
mov
test
ja
lea
mov
call
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
sub
mov
mov
lea
lea
cmp
jb
andl
mov
movl
subl
leave
ret
int3
int3
push
mov
sub
sub
movl
cmp
ja
orl
sub
andl
mov
orl
cmp
ja
mov
cmp
je
mov
xor
xor
andl
cmp
jne
mov
orl
mov
xor
xor
xorl
xor
cmp
jae
mov
andl
orl
cmp
jae
mov
addl
xor
subl
andl
cmp
je
xor
cmp
ja
leave
ret
int3
int3
int3
push
mov
sub
mov
xorl
andl
test
jae
xor
subl
xor
sub
addl
addl
addl
addl
mov
xor
orl
mov
xorl
xor
xorl
andl
mov
orl
mov
cmp
jne
sub
andl
addl
cmp
jbe
mov
xor
orl
movl
test
jae
addl
mov
xor
subl
mov
leave
ret
int3
int3
int3
int3
push
mov
sub
xor
mov
xor
sub
mov
cmp
ja
mov
mov
mov
mov
orl
cmp
jne
mov
cmp
je
sub
movl
sub
mov
mov
subl
cmp
jb
mov
cmp
je
mov
addl
sub
movl
xorl
mov
xor
cmp
je
lea
xor
lea
sub
addl
leave
ret
int3
int3
int3
push
mov
sub
mov
addl
addl
andl
cmp
ja
mov
xorl
cmp
jae
mov
andl
cmp
jb
mov
cmp
jne
leave
ret
int3
int3
push
mov
sub
call
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
andl
andl
xor
mov
test
jbe
mov
mov
xor
cmp
jbe
sub
andl
call
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
andl
mov
lea
mov
call
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
lea
lea
lea
mov
andl
orl
andl
call
xor
sub
xorl
sub
test
jae
mov
lea
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
orl
lea
xorl
addl
lea
sub
mov
mov
cmp
ja
xor
andl
subl
andl
mov
call
mov
movl
cmp
jne
xor
cmp
ja
leave
ret
int3
int3
push
mov
sub
mov
xor
subl
subl
andl
mov
mov
xorl
addl
sub
mov
andl
sub
lea
mov
cmp
jb
mov
subl
xor
test
ja
andl
sub
cmp
ja
mov
xor
mov
xorl
mov
mov
cmp
jae
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
sub
cmp
jae
sub
cmp
jbe
mov
mov
sub
xor
mov
mov
andl
test
jne
mov
mov
addl
lea
mov
subl
sub
cmp
jae
xor
movl
andl
addl
xor
andl
xor
test
jne
mov
cmp
ja
leave
ret
int3
call
add
add
add
add
lcall
add
add
add
scas
add
add
add
inc
add
push
add
mov
stc
add
add
add
add
add
add
jmp
add
add
dec
add
xor
add
add
mov
add
add
xchg
inc
add
xlat
add
add
add
add
add
add
fistpll
add
add
sbb
add
cli
add
add
add
in
add
add
add
add
add
add
add
rolb
add
add
insb
add
stos
add
add
add
xor
xchg
add
dec
add
add
add
add
add
inc
add
add
add
add
cmpsb
add
iret
add
add
add
add
add
add
testl
stos
add
pop
cli
add
arpl
add
add
add
add
add
test
add
add
popf
add
add
add
add
sub
add
add
add
add
sarl
test
sti
add
jnp
ret
adc
fiadds
in
in
add
jns
stc
cltd
cltd
es
mov
sbb
js
scas
cmpl
lea
loopne
lock
and
dec
pusha
outsb
xor
andl
xchg
loopne
or
xchg
insb
inc
pop
loopne
loope
push
xchg
aam
pop
push
outsb
in
pop
das
xchg
push
ds
ror
fisttpll
jecxz
push
scas
sarl
fldt
rorl
sub
sbb
mov
push
ss
into
sub
dec
jp
stc
and
mov
xchg
xchg
test
pop
inc
lods
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
jecxz
add
lock
pop
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
hlt
add
add
lods
add
pop
add
add
add
add
mov
add
add
add
add
add
add
add
add
xchg
xchg
xchg
fildl
out
add
add
mov
add
mov
add
add
add
add
xchg
add
inc
add
add
add
add
xchg
add
add
inc
add
add
sub
lret
add
add
insb
mov
add
add
add
aam
add
add
add
add
add
sbb
roll
push
scas
add
add
add
in
sub
call
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
xor
andl
lea
xor
mov
lea
sub
xor
mov
xorl
subl
call
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
xor
mov
andl
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
subl
lea
call
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
call
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
lea
lea
mov
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
mov
lea
movl
mov
orl
mov
andl
andl
mov
sub
addl
mov
orl
call
mov
lea
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
xor
xor
andl
mov
movl
call
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
orl
addl
xorl
call
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
xorl
mov
mov
mov
call
mov
lea
lea
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
addl
mov
andl
subl
call
mov
mov
mov
lea
mov
lea
lea
lea
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
xor
xorl
mov
mov
mov
andl
call
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
lea
lea
lea
mov
mov
orl
lea
lea
mov
mov
call
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
mov
mov
mov
xorl
mov
lea
push
xor
sub
movl
cmp
jae
addl
sub
andl
mov
mov
mov
sub
sub
add
xor
sub
andl
subl
mov
mov
push
call
je
xor
xorl
sub
addl
cmp
jbe
addl
mov
mov
mov
andl
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
subl
xor
lea
lea
xor
andl
mov
cmp
je
mov
cmp
ja
call
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
mov
mov
lea
lea
lea
mov
lea
mov
mov
orl
lea
addl
lea
xor
xor
cmp
jb
xor
cmp
jb
movl
subl
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
lea
mov
mov
orl
xorl
lea
mov
mov
movl
andl
andl
xor
cmp
jae
andl
sub
sub
andl
lea
andl
xorl
call
lea
lea
lea
mov
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
lea
lea
mov
orl
xor
mov
mov
sub
mov
andl
test
ja
mov
xorl
cmp
jbe
xor
sub
call
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
andl
xorl
mov
mov
xorl
addl
mov
push
call
xor
call
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
andl
mov
subl
mov
mov
call
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
lea
mov
lea
lea
lea
mov
lea
lea
lea
mov
mov
mov
mov
lea
lea
lea
xor
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
sub
orl
mov
call
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
xor
lea
mov
orl
andl
addl
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
xor
orl
mov
andl
lea
subl
call
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
lea
mov
sub
andl
call
mov
mov
mov
mov
mov
mov
lea
lea
lea
lea
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
mov
orl
xorl
mov
xorl
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
lea
lea
addl
mov
mov
sub
call
mov
mov
mov
lea
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
xorl
mov
xor
orl
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
xorl
call
mov
mov
lea
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
lea
lea
subl
subl
xor
sub
call
mov
mov
mov
lea
lea
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
lea
xor
xor
mov
andl
xorl
call
mov
mov
lea
lea
mov
lea
lea
mov
lea
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
subl
movl
mov
mov
call
mov
mov
mov
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
orl
mov
andl
mov
sub
lea
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
lea
lea
mov
sub
xor
xor
subl
call
lea
mov
lea
lea
lea
mov
lea
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
andl
subl
xor
call
lea
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
lea
mov
lea
lea
mov
mov
lea
lea
lea
subl
andl
call
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
movl
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
lea
andl
mov
sub
call
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
orl
andl
andl
mov
call
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
sub
lea
mov
movl
andl
addl
call
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
xorl
call
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
lea
mov
call
lea
lea
lea
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
andl
andl
mov
call
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
lea
lea
lea
mov
mov
mov
mov
andl
mov
lea
orl
addl
cmp
jbe
mov
sub
mov
addl
xorl
andl
call
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
mov
addl
mov
mov
mov
movl
subl
call
lea
lea
lea
mov
lea
lea
mov
lea
lea
lea
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
xor
call
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
xor
lea
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
lea
lea
mov
mov
xor
orl
call
lea
mov
mov
mov
mov
lea
lea
lea
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
sub
movl
movl
lea
call
mov
mov
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
andl
andl
xor
andl
mov
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
lea
lea
andl
xor
andl
xorl
mov
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
lea
andl
xor
lea
addl
lea
mov
movl
lea
cmp
ja
mov
xorl
call
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
lea
lea
addl
lea
call
mov
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
addl
mov
call
lea
mov
lea
lea
lea
mov
lea
lea
mov
mov
mov
mov
lea
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
lea
lea
mov
sub
xor
mov
mov
call
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
lea
lea
mov
lea
mov
mov
lea
mov
orl
mov
lea
xor
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
orl
addl
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
lea
mov
mov
lea
mov
mov
xor
mov
mov
xorl
call
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
lea
addl
andl
mov
lea
call
mov
mov
lea
mov
lea
mov
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
xorl
call
lea
mov
lea
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
subl
andl
sub
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
lea
lea
mov
mov
lea
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
subl
xor
lea
lea
andl
lea
call
mov
lea
mov
lea
mov
mov
mov
mov
lea
lea
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
andl
addl
mov
call
mov
lea
mov
mov
lea
mov
lea
lea
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
mov
mov
lea
addl
mov
lea
mov
call
mov
lea
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
lea
lea
lea
lea
lea
mov
lea
mov
mov
lea
call
lea
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
lea
mov
mov
lea
mov
lea
mov
lea
mov
mov
lea
mov
mov
mov
lea
mov
andl
lea
mov
sub
call
lea
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
andl
lea
andl
andl
call
lea
lea
mov
mov
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
lea
andl
sub
lea
mov
mov
sub
andl
andl
cmp
ja
mov
test
jne
call
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
lea
mov
mov
lea
lea
lea
mov
lea
mov
mov
mov
lea
mov
movl
lea
lea
mov
andl
xorl
sub
cmp
jb
xor
andl
andl
andl
movl
cmp
jae
xorl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
mov
mov
orl
subl
mov
mov
cmp
jae
xor
cmp
jbe
push
call
mov
andl
andl
xor
push
call
leave
ret
int3
int3
int3
int3
int3
int3
add
ja
add
add
inc
add
addr16
push
dec
add
add
push
fs
add
dec
je
jno
jns
arpl
add
xor
je
add
ja
add
dec
push
add
add
push
insb
add
add
je
pop
imul
add
add
arpl
add
pop
add
pop
pop
jno
add
add
add
add
add
js
push
add
add
cmp
cmp
push
add
add
add
add
xor
add
add
add
add
add
push
jns
add
add
add
add
arpl
add
imul
jne
push
add
inc
inc
push
imul
add
add
push
arpl
add
add
jb
add
push
jb
xor
add
inc
add
add
cmp
dec
add
add
add
ss
jb
jne
outsl
cmp
add
outsl
add
add
push
inc
pop
push
push
add
add
add
je
js
add
js
outsl
push
data16
inc
jae
push
js
dec
add
inc
add
add
dec
add
add
add
add
insl
add
add
xor
insl
jb
add
add
inc
push
add
add
add
add
jbe
js
jno
add
add
add
add
add
add
pop
popa
add
ss
add
add
add
je
outsl
add
add
je
pop
add
add
add
js
add
add
ja
add
jp
add
add
add
cmp
dec
xor
add
inc
jbe
push
push
arpl
xor
add
push
add
add
add
gs
add
add
add
add
inc
push
add
jno
add
push
je
add
add
push
add
add
add
add
push
jbe
add
jno
jb
add
add
add
add
add
outsl
outsl
inc
add
add
xor
cmp
add
add
add
add
xor
add
arpl
cmp
pop
add
push
dec
add
xor
add
outsl
add
add
add
add
add
push
add
add
dec
add
add
add
inc
push
add
add
jb
add
add
outsl
inc
push
push
fs
add
add
add
add
add
xor
add
dec
push
xor
jbe
dec
dec
add
add
add
xor
push
add
add
add
cmp
add
add
add
inc
add
add
add
add
add
jno
ja
jae
add
insb
xor
jne
add
add
add
dec
add
jbe
add
add
imul
add
gs
add
jae
add
add
insl
add
push
dec
dec
dec
arpl
add
jbe
add
add
addr16
add
add
jne
jae
add
jp
ss
jo
add
add
push
ja
outsl
add
xor
push
pop
cmp
cmp
add
add
outsl
add
pop
jb
add
add
add
add
imul
add
gs
add
add
popa
dec
xor
add
dec
add
push
add
inc
push
je
add
dec
jbe
add
add
add
add
add
add
fs
add
add
dec
inc
add
inc
push
ja
push
add
add
fs
ss
xor
xor
ja
inc
add
add
add
push
add
add
ss
push
add
insl
inc
add
add
addr16
add
add
pop
insl
xor
push
addr16
bound
push
inc
inc
push
inc
add
add
add
fs
add
add
dec
add
add
inc
add
add
push
xor
xor
dec
dec
jb
add
add
add
add
xor
add
cmp
add
add
push
add
dec
inc
add
pop
add
inc
inc
xor
add
add
jb
jne
xor
jns
imul
imul
add
add
push
data16
add
jb
add
add
push
add
insb
add
outsb
add
add
add
dec
add
imul
outsb
add
add
add
push
add
add
add
popa
add
xor
push
add
add
add
add
outsb
inc
add
xor
add
add
inc
add
add
add
add
add
pop
jp
inc
add
jbe
add
jno
add
push
push
inc
je
imul
add
add
insl
data16
add
push
add
aaa
add
add
add
add
add
add
add
jae
popa
add
ja
add
xor
add
add
add
add
add
push
insb
push
push
add
add
add
push
add
add
popa
aaa
aaa
xor
push
jno
jae
add
add
push
jbe
push
push
inc
add
push
add
push
add
add
push
dec
add
add
add
add
inc
add
add
add
inc
push
add
add
add
add
add
add
aaa
inc
add
add
popa
outsl
push
add
add
add
cmp
xor
add
add
jp
push
add
add
pop
add
inc
add
add
add
add
add
add
add
dec
add
je
dec
add
jp
je
xor
add
add
add
imul
inc
add
add
push
add
add
add
push
jae
add
add
inc
xor
add
arpl
add
dec
add
add
jne
jp
jne
add
jbe
add
je
add
add
add
push
ss
imul
add
add
js
add
add
xor
push
add
add
add
push
add
popa
add
arpl
pop
add
dec
push
add
add
add
bound
add
jno
imul
add
add
add
insl
jae
add
push
ja
xor
add
add
push
inc
add
inc
dec
imul
inc
push
jp
add
xor
add
inc
jno
add
add
outsl
dec
add
dec
add
xor
add
inc
push
add
dec
add
add
dec
inc
add
add
inc
add
add
insb
add
add
add
add
add
bound
add
add
inc
add
pop
dec
add
add
dec
push
add
jns
data16
arpl
add
add
pop
add
js
add
ja
add
jns
add
add
add
jb
add
add
add
push
xor
dec
push
bound
cmp
add
cmp
push
add
dec
push
add
add
push
add
inc
add
ja
fs
add
add
add
add
push
add
xor
add
add
cmp
add
add
add
add
add
add
jb
push
add
add
xor
pop
insl
add
add
add
push
inc
inc
inc
push
inc
add
add
dec
popa
jns
add
inc
add
push
jp
add
add
outsl
add
add
add
add
dec
xor
add
add
add
add
inc
add
inc
add
add
xor
aaa
push
dec
ss
add
inc
xor
push
inc
add
xor
dec
add
aaa
add
add
add
push
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
jbe
add
add
xor
add
add
add
inc
add
add
inc
imul
imul
data16
add
pop
add
add
inc
add
imul
jno
add
add
add
push
dec
ja
pop
push
inc
dec
add
add
insl
inc
add
inc
add
add
add
jae
push
add
add
jno
add
dec
add
inc
ja
js
pop
jb
inc
add
add
dec
add
dec
add
add
imul
add
inc
imul
inc
add
add
add
add
xor
xor
add
add
jp
add
add
add
add
push
dec
outsl
inc
add
add
dec
xor
push
add
jne
add
add
add
add
bound
add
add
add
add
add
dec
push
push
add
add
jb
add
xor
push
add
add
push
add
jno
xor
add
dec
imul
add
inc
push
add
xor
gs
dec
add
xor
bound
inc
cmp
add
imul
dec
add
add
popa
add
imul
inc
ja
add
xor
add
add
dec
bound
ja
add
add
imul
add
add
add
push
pop
add
add
add
add
jae
push
add
inc
add
inc
add
push
push
je
add
push
add
dec
inc
add
inc
add
inc
aaa
fs
add
add
add
push
add
pop
add
xor
push
inc
inc
dec
add
add
push
add
outsl
add
xor
inc
push
dec
cmp
add
cmp
add
add
jo
add
popa
add
add
dec
imul
aaa
add
inc
inc
add
inc
add
add
inc
inc
jp
add
aaa
dec
inc
add
add
add
pop
push
outsl
add
aaa
add
xor
cmp
add
add
dec
add
add
xor
bound
add
add
add
push
dec
jns
push
inc
jne
add
arpl
add
inc
add
add
add
add
push
imul
add
jns
cmp
dec
jbe
add
add
add
addr16
xor
add
add
add
push
add
add
aaa
add
add
add
add
push
inc
jb
add
push
inc
add
imul
add
add
add
inc
outsl
add
push
add
addr16
add
add
add
outsl
add
inc
xor
add
jo
add
xor
jns
add
dec
add
imul
add
jno
dec
add
jbe
add
imul
inc
cmp
add
add
add
jp
push
jb
add
add
add
push
add
add
cmp
dec
add
ja
add
push
push
js
push
dec
push
add
add
add
add
push
ja
cmp
inc
add
add
dec
js
jbe
add
add
xor
add
dec
inc
cmp
jb
pop
add
jp
gs
pop
inc
add
xor
add
add
dec
add
outsl
add
popa
add
add
push
aaa
push
add
add
add
jp
pop
add
dec
add
add
add
je
add
push
add
add
outsl
addr16
add
add
dec
push
imul
imul
add
inc
push
push
outsl
aaa
add
add
add
arpl
jbe
add
add
push
add
add
ss
add
push
add
dec
push
add
outsl
outsl
pop
add
pop
jae
add
dec
outsl
add
add
jno
add
add
add
add
push
add
add
gs
add
pop
dec
push
add
dec
data16
imul
push
xor
inc
add
add
add
dec
jae
xor
add
add
add
outsb
cmp
add
inc
jp
jo
add
aaa
xor
add
add
add
popa
add
cmp
inc
add
add
inc
add
xor
push
inc
dec
push
push
add
add
imul
add
jns
inc
add
imul
add
add
imul
add
outsb
push
je
push
add
push
add
dec
ja
add
xor
push
add
push
inc
add
xor
add
gs
jp
jno
dec
add
add
add
arpl
add
add
add
jae
add
jp
js
add
add
add
fs
add
pop
xor
add
dec
push
dec
add
add
fs
add
dec
add
add
add
xor
add
add
pop
add
add
add
add
add
aaa
add
dec
push
add
add
add
ss
outsb
add
xor
add
add
inc
inc
push
add
dec
add
data16
add
add
add
add
inc
add
cmp
add
dec
add
aaa
jno
add
add
push
imul
add
dec
jbe
data16
add
ja
popa
add
push
jp
add
add
add
pop
add
add
inc
add
imul
add
inc
inc
add
add
add
add
pop
add
add
outsb
bound
add
add
xor
add
dec
dec
je
add
jae
add
add
aaa
push
jne
add
outsl
add
dec
inc
add
add
inc
dec
jp
add
add
add
add
add
push
jb
add
add
add
add
add
cmp
add
add
insb
add
insl
add
add
push
xor
add
add
push
add
xor
add
jo
dec
add
add
add
add
dec
add
dec
jae
inc
xor
je
add
cmp
add
jbe
push
inc
jp
push
pop
add
add
add
add
add
add
add
add
add
add
jb
dec
aaa
insb
jns
imul
add
add
add
add
add
jns
add
add
insl
add
add
add
cmp
popa
push
inc
add
xor
add
add
dec
add
add
add
dec
dec
pop
add
fs
add
add
popa
add
add
jne
add
add
push
add
add
add
add
dec
add
jb
add
dec
push
je
add
inc
add
add
add
add
dec
cmp
add
push
add
add
xor
add
add
add
add
jno
add
add
arpl
add
jno
dec
add
add
add
push
dec
data16
add
add
add
outsb
push
xor
push
add
dec
add
add
add
popa
add
add
add
add
add
add
arpl
jbe
dec
ja
add
add
jae
add
add
arpl
add
fs
add
inc
jns
aaa
push
add
add
add
add
add
add
dec
inc
add
add
add
pop
add
dec
add
push
dec
inc
inc
aaa
add
add
dec
inc
add
add
xor
aaa
add
cmp
add
add
add
ja
inc
add
add
jo
add
add
xor
add
cmp
push
jne
inc
add
add
add
ja
dec
add
add
cmp
outsl
je
push
add
jb
push
jne
add
xor
push
outsb
jbe
add
inc
add
xor
push
jns
add
insb
add
add
add
add
cmp
add
push
add
add
push
push
push
add
add
add
push
outsl
imul
add
insl
push
je
push
dec
jns
jne
pop
add
add
add
add
inc
add
jb
add
push
push
add
add
bound
inc
add
add
push
jo
xor
add
push
add
xor
add
add
dec
add
add
inc
je
push
js
pop
js
add
push
add
jns
gs
add
pop
add
jns
imul
xor
js
pop
add
add
add
js
xor
add
add
dec
ja
inc
inc
add
add
inc
add
add
add
xor
push
add
jns
add
add
add
add
add
add
dec
outsl
pop
inc
ss
add
add
add
dec
push
add
add
push
add
jbe
xor
pop
add
add
add
dec
outsb
jbe
insb
dec
add
add
add
add
dec
add
xor
add
inc
add
add
add
xor
add
push
je
add
add
add
add
add
jo
arpl
push
add
add
add
pop
add
add
add
xor
add
add
cmp
add
arpl
add
add
inc
data16
add
dec
add
add
jo
add
add
add
cmp
add
add
dec
dec
arpl
pop
jbe
je
add
push
push
add
add
add
add
add
add
add
bound
add
jae
dec
outsl
bound
add
js
push
push
push
add
js
add
jp
add
outsl
xor
aaa
add
add
add
je
add
jns
inc
add
add
xor
add
add
cmp
dec
add
add
add
add
add
add
dec
add
jo
jo
add
inc
add
add
push
add
add
xor
bound
add
add
xor
xor
add
inc
jns
add
jae
add
outsb
add
xor
aaa
inc
push
imul
xor
add
xor
add
inc
add
add
add
push
inc
add
add
inc
inc
ja
add
add
jo
aaa
add
add
push
add
add
inc
add
aaa
jno
add
add
dec
xor
push
xor
add
jb
inc
xor
add
outsb
pop
add
add
add
dec
add
push
add
add
push
xor
inc
add
xor
add
add
data16
add
add
dec
xor
aaa
xor
push
add
add
add
xor
jno
dec
add
xor
add
add
add
add
imul
xor
add
add
add
add
add
dec
add
jne
dec
add
pop
add
push
dec
add
xor
add
xor
add
dec
push
add
add
add
aaa
add
pop
addr16
add
add
add
pop
xor
add
add
add
addr16
add
jne
gs
add
add
add
add
add
jo
jno
dec
add
add
inc
add
dec
add
ja
add
add
add
add
add
xor
outsb
push
add
add
add
add
cmp
add
ss
push
add
push
cmp
add
imul
add
add
add
add
add
inc
add
xor
add
add
add
add
add
add
add
ss
add
add
imul
dec
dec
outsb
add
outsb
jns
arpl
add
add
inc
add
push
jb
inc
xor
add
add
inc
add
add
add
xor
jns
popa
jo
add
outsb
add
arpl
xor
add
pop
js
xor
jb
jne
jb
add
push
jb
inc
add
xor
add
add
add
jo
add
push
insb
add
dec
xor
push
add
jp
jb
inc
xor
pop
insl
add
add
outsl
jb
add
jne
add
add
pop
add
cmp
add
xor
add
outsl
add
add
add
add
push
xor
add
inc
dec
xor
popa
add
jp
add
push
inc
inc
add
add
add
add
addr16
outsb
add
outsl
cmp
add
push
push
pop
add
dec
inc
inc
add
jne
add
add
add
add
popa
push
add
inc
add
jp
add
add
push
add
add
add
push
jbe
insb
add
jne
dec
add
jno
arpl
add
outsl
add
cmp
add
xor
add
add
add
cmp
jne
jne
data16
xor
dec
add
add
add
add
push
add
imul
add
add
xor
inc
add
add
xor
push
push
pop
add
add
add
push
outsl
add
bound
addr16
add
add
add
add
add
add
add
jb
add
add
outsb
add
add
xor
add
outsl
add
fs
dec
push
outsl
add
je
inc
add
add
add
pop
add
jb
add
add
pop
add
push
jbe
jo
xor
aaa
dec
dec
push
add
inc
push
inc
jno
popa
add
inc
add
imul
jno
add
add
add
dec
push
jns
add
add
add
insb
add
add
add
add
xor
add
add
add
dec
insb
add
inc
xor
push
add
add
add
add
insb
add
add
add
add
add
jb
add
add
js
add
dec
push
insl
dec
add
add
add
dec
js
push
jne
outsl
add
inc
add
add
insb
push
push
add
add
xor
add
add
je
add
add
gs
add
add
dec
jb
jbe
add
insl
add
jb
dec
push
xor
add
xor
imul
add
add
js
add
add
pop
xor
add
data16
add
add
dec
push
dec
add
add
imul
add
add
add
add
add
add
add
add
imul
add
add
add
push
add
add
push
dec
add
dec
pop
add
add
add
dec
dec
add
outsb
xor
add
pop
add
dec
add
add
add
push
bound
imul
add
imul
addr16
add
add
add
add
add
add
add
add
add
add
add
inc
inc
add
push
add
xor
add
jo
push
add
dec
add
dec
add
add
add
jo
add
add
jns
push
add
outsl
add
dec
add
inc
add
inc
add
insb
add
add
add
add
add
push
xor
add
push
jp
add
add
inc
add
inc
jno
add
add
push
push
cmp
js
add
add
add
dec
add
jbe
add
add
add
insl
fs
xor
add
push
add
add
je
add
cmp
add
imul
add
add
inc
popa
add
add
add
add
arpl
push
add
add
add
add
push
jne
add
add
jae
add
add
insl
dec
add
inc
arpl
add
add
xor
add
add
ss
dec
push
push
jp
inc
imul
add
add
add
add
add
ss
insb
add
add
imul
addr16
jno
add
add
js
add
pop
add
add
jb
xor
add
push
add
add
pop
jp
cmp
add
cmp
add
arpl
jns
xor
inc
cmp
add
add
push
add
add
push
add
dec
pop
add
dec
push
add
add
je
add
ja
add
outsb
dec
add
add
add
add
inc
jne
add
pop
add
xor
add
push
add
bound
ja
inc
add
dec
add
dec
add
add
add
add
push
outsl
add
arpl
add
add
add
push
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
je
add
jae
add
dec
add
add
add
add
add
add
add
add
add
jbe
add
add
add
aaa
js
add
add
fs
inc
insb
add
jb
ss
add
push
add
ja
add
xor
add
add
dec
aaa
add
add
add
jb
add
inc
dec
add
popa
outsl
add
dec
add
add
dec
dec
push
imul
imul
ss
add
add
dec
add
add
bound
cmp
add
add
aaa
add
add
outsl
add
arpl
add
dec
dec
add
push
add
dec
add
jp
add
add
add
add
jne
jbe
add
add
jae
add
add
inc
add
add
add
add
add
add
imul
dec
add
add
inc
xor
add
add
add
outsl
add
dec
imul
inc
dec
push
add
add
add
add
dec
xor
insl
add
add
xor
inc
add
add
add
add
add
add
je
add
add
dec
imul
dec
add
add
imul
add
add
xor
jp
add
aaa
popa
push
add
add
add
push
push
imul
jns
add
add
add
dec
add
pop
jp
add
push
add
ja
jns
dec
inc
jae
add
pop
jne
add
jo
dec
cmp
inc
xor
add
add
dec
add
push
push
add
add
dec
add
add
add
add
xor
dec
dec
arpl
add
add
add
add
add
add
cmp
add
imul
add
add
add
add
add
xor
push
add
dec
jns
xor
dec
outsb
bound
add
jno
add
imul
add
pop
data16
add
cmp
add
add
arpl
push
xor
add
add
jo
push
add
inc
cmp
add
add
ja
cmp
add
xor
add
pop
add
add
push
pop
add
dec
add
inc
add
add
add
cmp
add
jo
push
add
add
push
add
jo
add
add
add
add
gs
jno
add
inc
add
add
pop
add
add
add
add
add
jno
inc
push
push
add
add
add
push
add
add
inc
js
add
add
push
inc
dec
insb
add
add
jns
dec
add
inc
add
jns
add
add
outsl
add
fs
inc
add
push
ss
add
add
add
add
add
js
add
inc
add
inc
add
inc
add
add
add
jbe
jns
jbe
dec
add
add
ja
add
dec
add
cmp
inc
add
add
dec
add
inc
inc
add
add
xor
add
add
add
add
push
add
inc
xor
xor
outsl
add
add
insl
add
push
dec
add
add
add
add
add
add
xor
add
add
bound
add
inc
push
dec
add
add
add
ja
ss
jae
add
jp
add
add
xor
add
push
add
add
xor
imul
xor
push
bound
insl
add
add
add
add
xor
jno
add
push
arpl
gs
push
add
add
add
add
add
xor
bound
add
add
jns
dec
jne
ja
add
add
add
aaa
dec
add
jo
add
imul
add
add
add
add
jb
add
cmp
dec
inc
add
inc
dec
outsl
dec
add
jae
add
push
dec
add
jno
inc
add
inc
inc
ja
jp
push
add
add
add
add
outsl
xor
je
dec
outsl
arpl
add
add
xor
add
imul
aaa
add
add
xor
imul
cmp
xor
data16
add
add
dec
add
add
add
add
push
xor
add
add
dec
outsl
add
jb
add
push
inc
add
ja
add
add
bound
add
add
dec
jo
je
add
je
jp
add
inc
jo
add
add
add
add
aaa
add
outsl
add
gs
add
push
add
jno
push
imul
add
dec
dec
add
add
outsl
jne
add
inc
add
dec
add
dec
push
xor
add
add
push
add
inc
add
imul
dec
insb
push
inc
add
jns
push
add
add
add
add
push
add
add
add
arpl
dec
jbe
add
js
push
dec
gs
popa
dec
add
insb
add
add
add
add
jno
add
add
push
push
add
popa
add
pop
outsb
push
add
add
jae
add
jno
xor
jne
add
add
add
push
add
add
js
add
add
add
cmp
add
add
add
add
add
add
add
add
push
jns
add
dec
add
add
add
add
add
cmp
pop
insl
add
add
push
add
push
add
add
dec
push
add
add
imul
xor
inc
add
inc
popa
jno
add
add
jbe
jbe
add
js
xor
jns
push
add
add
xor
xor
push
add
xor
pop
add
add
xor
add
push
add
add
add
add
dec
inc
dec
ja
add
add
pop
add
add
add
add
add
add
add
add
dec
add
add
xor
xor
jbe
push
add
inc
jb
add
add
push
outsl
dec
imul
outsl
add
xor
data16
add
inc
jns
ss
add
outsb
add
push
dec
popa
add
dec
add
dec
add
dec
push
xor
xor
addr16
dec
je
add
push
add
push
add
add
add
add
push
dec
add
add
add
cmp
add
push
cmp
add
add
inc
add
add
dec
ss
xor
add
add
add
add
add
add
add
cmp
inc
push
fs
jns
pop
add
inc
outsb
add
add
push
jae
add
inc
push
add
add
add
inc
inc
add
push
add
data16
add
add
add
add
jns
jb
dec
add
jae
push
dec
js
add
push
push
jb
cmp
add
add
dec
add
add
push
add
push
add
add
dec
push
add
cmp
ja
pop
jbe
inc
add
xor
imul
insl
push
push
add
imul
add
ss
add
push
add
jp
add
add
push
jns
push
add
add
add
aaa
push
inc
add
dec
push
add
inc
add
add
add
push
add
push
add
add
add
add
inc
inc
add
pop
inc
add
inc
add
outsb
add
add
add
add
add
ja
add
add
add
inc
xor
ss
push
add
bound
push
push
xor
data16
xor
add
jno
dec
add
push
add
add
add
pop
push
jno
add
ja
add
ja
add
outsl
add
aaa
xor
xor
pop
add
pop
add
jae
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
push
add
add
add
add
add
push
ja
dec
inc
add
dec
add
add
add
add
add
outsl
add
jbe
add
add
add
jne
jae
bound
add
pop
add
add
add
add
add
dec
je
add
xor
add
inc
pop
add
xor
add
add
jo
add
push
popa
add
add
xor
xor
add
add
xor
outsb
jo
add
pop
dec
add
add
add
imul
push
add
jae
add
add
add
add
inc
add
insl
add
pop
xor
add
inc
inc
add
push
add
add
push
add
jno
push
add
add
add
imul
add
add
push
add
add
insb
outsb
popa
dec
jno
dec
dec
add
add
add
insb
xor
add
add
add
jne
xor
add
add
xor
dec
jno
dec
dec
add
add
insl
xor
add
push
add
add
jp
add
add
add
add
inc
xor
inc
add
pop
add
push
add
imul
add
cmp
cmp
add
inc
push
add
add
add
js
jb
jb
push
add
add
pop
push
add
add
add
add
insb
push
add
jns
add
aaa
add
add
push
dec
jbe
inc
add
pop
add
jb
add
push
add
jo
add
xor
add
add
xor
add
add
jno
inc
add
jns
add
add
push
add
push
add
add
xor
add
cmp
xor
inc
inc
push
add
add
add
add
add
add
add
add
pop
cmp
add
inc
add
push
add
add
add
jo
jo
bound
dec
add
add
outsl
aaa
xor
add
pop
outsb
push
insb
pop
jp
push
add
push
add
add
add
inc
dec
cmp
add
add
jo
jb
jno
gs
push
add
add
add
add
jp
inc
js
add
add
push
jne
add
pop
add
bound
outsb
add
pop
add
add
dec
push
add
add
add
jne
add
insb
add
add
inc
bound
dec
jp
data16
xor
inc
imul
add
add
add
add
add
add
js
push
add
dec
add
inc
add
jbe
inc
xor
add
add
xor
outsb
arpl
add
fs
cmp
dec
add
add
dec
add
insb
jno
add
xor
xor
xor
pop
xor
add
add
dec
inc
add
dec
ja
add
push
add
add
add
popa
add
add
push
push
add
add
dec
add
add
outsb
add
jp
pop
add
dec
add
add
add
add
popa
add
add
add
bound
add
add
add
add
imul
add
dec
imul
add
inc
xor
dec
add
cmp
add
add
add
xor
add
jbe
inc
push
add
outsl
add
add
jo
add
add
add
xor
inc
add
add
push
xor
pop
jbe
xor
add
add
xor
cmp
add
add
xor
add
pop
add
add
add
add
inc
dec
add
cmp
inc
jp
add
add
add
dec
add
add
push
add
dec
pop
add
add
jb
add
add
add
add
imul
add
bound
cmp
push
add
jo
inc
add
add
add
add
inc
add
insb
push
push
addr16
dec
add
inc
pop
add
add
xor
add
add
add
add
inc
jns
dec
jns
add
add
add
add
add
xor
ja
cmp
add
push
jbe
jb
dec
data16
push
outsl
insb
add
je
add
jne
add
add
add
add
add
add
jns
add
push
insl
add
dec
add
dec
add
add
add
add
push
jb
add
bound
add
add
add
add
push
add
add
add
addr16
push
dec
push
inc
add
push
push
add
outsl
add
inc
push
add
dec
add
dec
arpl
dec
js
imul
inc
imul
fs
xor
add
add
add
add
jne
push
add
add
add
push
add
add
add
outsl
add
add
add
add
add
push
add
xor
insb
add
add
inc
push
add
add
add
jno
add
add
push
push
xor
jno
xor
add
add
add
bound
cmp
add
je
add
add
add
add
add
bound
add
push
insb
jne
add
xor
add
jp
arpl
add
aaa
dec
inc
pop
inc
add
add
cmp
dec
add
xor
add
add
add
dec
add
add
aaa
dec
add
aaa
dec
cmp
add
add
xor
add
add
add
add
inc
insl
add
xor
add
push
push
add
cmp
outsl
imul
push
add
dec
popa
add
dec
push
add
dec
add
add
inc
imul
add
outsl
add
inc
push
dec
add
add
insl
add
ja
add
add
add
add
pop
add
add
add
outsl
pop
add
add
add
add
imul
insl
add
insb
ss
add
add
add
add
add
push
add
add
push
dec
push
insl
add
push
add
add
imul
add
dec
dec
add
push
add
xor
add
dec
dec
pop
add
add
dec
popa
arpl
add
insb
add
add
aaa
push
pop
add
jae
jae
add
add
xor
add
cmp
add
add
xor
add
add
add
add
push
add
jb
add
add
add
addr16
add
arpl
push
add
add
add
add
jbe
arpl
add
add
inc
add
imul
push
add
add
add
add
add
pop
add
dec
add
jbe
add
add
add
push
inc
jne
inc
jo
inc
pop
add
add
add
add
add
add
add
add
dec
xor
add
xor
add
add
dec
add
add
add
add
add
add
data16
add
add
inc
add
cmp
add
dec
add
add
add
add
add
add
push
jb
push
add
add
add
add
add
inc
add
add
add
add
dec
add
push
xor
push
add
add
add
add
jb
add
add
imul
add
inc
add
popa
dec
inc
jb
bound
dec
add
push
add
add
add
je
inc
dec
add
aaa
add
inc
add
imul
add
add
add
add
push
add
add
inc
add
popa
dec
add
push
add
add
add
add
add
js
add
add
inc
insb
add
add
add
add
xor
add
add
add
xor
insl
dec
add
dec
push
xor
add
jae
add
data16
inc
add
aaa
dec
add
push
push
add
add
add
gs
add
insb
add
add
data16
add
add
push
add
add
js
inc
xor
xor
imul
popa
gs
add
add
imul
popa
add
add
popa
jb
add
add
jno
inc
add
dec
add
add
xor
xor
add
add
insl
jns
add
outsl
add
push
cmp
add
dec
dec
insb
insl
bound
add
add
insb
add
xor
add
add
add
add
popa
add
insl
js
jo
inc
add
xor
inc
add
add
pop
inc
push
add
inc
arpl
add
push
dec
add
jo
jp
add
add
add
js
jae
dec
xor
dec
add
inc
cmp
add
add
fs
add
jp
dec
dec
imul
insb
jo
add
dec
add
inc
add
push
push
push
dec
push
add
inc
xor
add
ja
add
aaa
add
push
add
add
push
cmp
add
gs
add
add
add
add
inc
add
ja
add
jp
add
xor
add
insl
add
inc
add
jbe
add
push
dec
add
add
pop
add
add
inc
add
add
add
add
add
push
add
add
xor
pop
arpl
je
add
add
inc
add
add
push
cmp
xor
add
imul
push
add
add
add
inc
je
add
add
dec
xor
add
je
jne
pop
add
xor
add
push
add
dec
add
add
add
push
jae
inc
push
add
add
push
add
aaa
add
add
cmp
add
imul
cmp
jb
add
cmp
add
add
insl
xor
add
add
add
push
add
add
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
dec
add
jo
add
jo
push
add
add
add
add
add
push
cmp
add
js
add
dec
popa
add
jo
add
add
add
add
add
imul
pop
push
jp
add
add
add
add
arpl
xor
add
add
addr16
imul
add
xor
xor
pop
add
pop
js
outsb
add
add
add
add
inc
add
add
dec
inc
add
push
inc
push
add
add
add
add
add
add
outsl
add
bound
je
add
data16
jo
add
add
add
push
add
add
add
add
add
add
add
add
arpl
add
add
add
js
add
add
add
add
push
dec
xor
dec
inc
add
je
add
dec
add
add
push
data16
add
jae
add
add
add
add
add
ss
add
pop
ss
add
push
data16
add
add
add
dec
pop
push
jp
add
xor
add
inc
inc
add
je
add
add
dec
add
add
dec
add
add
add
add
xor
xor
add
add
add
add
push
insl
je
outsb
add
push
dec
add
insl
add
insb
add
add
pop
bound
push
add
add
add
add
add
gs
jo
add
add
dec
inc
push
push
dec
dec
add
cmp
data16
xor
add
pop
add
inc
add
add
add
add
add
add
inc
add
add
add
add
push
push
jae
add
add
push
imul
arpl
inc
popa
add
pop
imul
dec
add
add
xor
add
add
add
jno
add
add
add
add
add
add
add
xor
jno
js
aaa
jno
bound
add
inc
add
dec
add
jns
push
add
add
xor
push
add
addr16
add
add
outsl
pop
xor
add
push
add
dec
push
add
insb
push
add
cmp
add
dec
add
add
dec
add
jno
pop
add
add
add
data16
add
pop
xor
dec
add
popa
add
push
add
add
add
add
add
add
pop
dec
pop
add
jns
inc
pop
add
push
add
pop
jne
add
xor
imul
xor
bound
push
imul
add
add
js
add
add
add
add
add
add
add
add
inc
add
add
add
inc
push
add
push
xor
xor
xor
add
add
add
pop
jae
push
inc
add
dec
push
add
xor
je
add
jp
aaa
add
add
push
pop
add
add
arpl
add
add
add
jbe
jns
add
jno
inc
add
add
add
add
dec
add
push
dec
inc
xor
add
dec
xor
add
add
cmp
add
cmp
push
jo
xor
jp
add
add
inc
xor
arpl
xor
add
outsl
insb
jns
jns
add
inc
push
xor
add
xor
add
add
bound
data16
jp
xor
add
add
add
add
add
pop
add
add
add
add
jno
xor
jbe
inc
push
add
add
inc
xor
add
add
add
imul
add
xor
dec
add
add
add
add
add
add
add
ja
cmp
xor
push
add
add
add
inc
jo
add
dec
add
add
jae
add
push
insl
add
add
add
xor
push
pop
add
add
add
add
add
cmp
add
add
add
dec
jno
jno
dec
add
jno
add
add
bound
insl
push
xor
add
pop
add
je
add
add
xor
add
add
add
add
add
dec
inc
imul
add
push
add
push
arpl
add
dec
add
add
push
dec
xor
add
push
insl
add
add
jae
xor
xor
add
js
add
add
arpl
imul
add
dec
add
add
add
imul
add
push
dec
jae
add
add
outsl
jo
inc
add
add
add
add
pop
insb
pop
add
add
jo
add
push
add
arpl
add
add
add
dec
imul
add
add
outsb
add
add
add
add
jbe
jns
add
add
add
push
outsb
add
push
dec
dec
add
push
gs
inc
add
add
popa
add
add
arpl
inc
jbe
add
add
push
add
add
add
pop
add
push
push
xor
js
jb
outsl
jne
push
add
add
add
xor
inc
inc
inc
add
inc
jb
push
add
add
add
arpl
add
add
dec
bound
pop
add
inc
ja
js
add
add
dec
inc
push
add
jae
add
add
add
add
outsl
add
push
add
add
add
jns
add
push
add
xor
pop
pop
add
add
dec
add
add
inc
push
add
add
jo
add
inc
insl
add
add
jne
add
add
add
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
imul
jb
jb
data16
add
jno
add
add
add
add
add
push
add
add
dec
add
je
add
ja
dec
add
add
add
add
add
add
arpl
arpl
add
add
push
je
inc
add
add
jbe
add
add
dec
bound
inc
jae
add
push
add
bound
add
data16
jno
je
push
add
inc
xor
add
add
add
push
inc
bound
jb
add
push
push
add
add
add
dec
add
imul
add
add
add
aaa
dec
add
ja
pop
push
add
xor
add
add
arpl
push
add
add
add
dec
dec
jno
jo
inc
data16
add
add
add
dec
add
pop
add
jbe
add
add
add
js
pop
push
add
add
cmp
ss
add
pop
push
add
add
outsl
add
add
add
popa
imul
add
pop
pop
imul
add
add
push
inc
xor
add
jbe
add
dec
add
add
add
outsl
add
add
je
inc
outsl
add
js
add
aaa
dec
je
jbe
xor
jae
add
push
xor
jb
dec
add
inc
add
add
add
cmp
push
add
pop
dec
ss
add
add
xor
xor
add
push
insl
add
add
je
data16
add
add
add
dec
bound
jo
add
ss
je
inc
outsb
add
add
add
push
add
add
jo
add
inc
xor
cmp
inc
popa
insb
add
add
xor
add
add
ja
dec
ja
add
add
add
add
push
add
add
add
add
je
popa
add
push
push
dec
dec
js
add
inc
add
add
add
add
inc
add
add
add
add
je
inc
add
add
dec
imul
add
add
push
jns
dec
pop
jb
jae
jae
dec
add
xor
cmp
dec
add
add
xor
add
push
add
jbe
add
dec
jbe
xor
outsb
xor
add
outsl
add
add
add
add
add
add
push
add
add
dec
add
xor
add
add
bound
add
add
arpl
jne
pop
push
add
arpl
imul
jbe
add
add
inc
add
arpl
add
add
add
aaa
bound
dec
add
add
add
aaa
add
add
push
je
add
push
dec
imul
dec
add
dec
add
push
add
dec
xor
add
add
dec
jne
add
dec
data16
add
add
add
add
add
inc
add
xor
add
add
add
xor
add
dec
add
add
add
add
push
add
push
cmp
add
add
add
add
inc
add
add
xor
add
add
add
pop
add
add
bound
dec
add
add
jno
inc
jbe
add
add
xor
add
add
add
add
add
xor
push
add
add
jno
add
add
push
dec
inc
add
add
popa
add
add
xor
insl
add
push
dec
outsl
add
pop
add
inc
add
add
jno
gs
add
jbe
add
add
add
dec
add
xor
outsl
push
add
addr16
add
add
add
addr16
jb
bound
arpl
push
imul
xor
add
inc
add
add
push
add
add
dec
add
jp
add
jne
add
pop
inc
add
data16
dec
add
add
dec
jno
pop
add
add
je
inc
add
inc
add
add
add
jo
add
imul
add
arpl
dec
add
add
add
add
xor
inc
add
xor
data16
add
add
add
je
add
add
ss
push
outsb
add
js
mov
mov
inc
add
dec
mov
inc
xor
xor
les
mov
jge
or
lahf
push
enter
dec
push
je
inc
fs
ficoml
mov
nop
add
gs
movsl
aad
pop
pop
mov
ret
xchg
mov
adc
adc
pop
inc
ja
aad
popa
mov
sbb
jge
inc
jb
push
xchg
mov
nop
jne
or
dec
xchg
adc
add
push
mov
lds
push
pop
gs
jge
mov
stos
cmp
jne
adc
incl
inc
pop
inc
xchg
mov
mov
imul
push
xor
mov
repz
push
or
iret
inc
rorb
push
or
imul
dec
mov
cli
dec
arpl
push
loop
dec
mov
push
rcl
mov
inc
inc
dec
mov
pop
loopne
adc
add
xor
lret
xor
addl
fs
inc
adc
mov
std
sub
mov
adcb
dec
jecxz
je
jne
scas
pop
inc
dec
mov
adc
mov
pop
dec
dec
or
sti
xchg
int
inc
les
adc
rcll
or
adc
pop
inc
dec
xorb
rol
add
or
andl
jno
outsl
jae
lds
bound
orb
pop
rcll
leave
push
pop
dec
adc
add
jno
popa
jns
popa
mov
pop
orb
mov
add
ret
and
bound
xchg
movl
daa
inc
jno
pop
push
dec
xchg
push
inc
dec
or
inc
lret
lret
inc
pop
xorl
lds
add
mov
daa
lds
pop
test
movl
mov
add
or
or
inc
les
rolb
push
jns
add
fwait
icebp
jg
insb
das
iret
dec
jg
pushf
lods
xor
dec
pop
dec
aaa
adc
daa
aad
push
jns
or
dec
pop
push
jl
xchg
inc
add
and
push
push
jmp
dec
add
into
adc
jns
add
dec
insb
prefetchw
jecxz
lds
push
int
adc
add
filds
inc
jmp
mov
xor
xor
jecxz
push
int
xchg
sbbl
add
adc
inc
bound
daa
or
daa
int
lea
dec
or
sti
popa
jb
mov
xchg
mov
or
add
popa
gs
jns
bound
xchg
pop
mov
gs
jle
inc
jmp
inc
gs
xchg
add
mov
push
mov
andl
xchg
popa
xor
dec
push
rcll
jle
bound
daa
dec
popa
sbbl
pop
add
add
lret
xchg
inc
popa
push
push
mov
les
stos
xchg
push
xchg
inc
push
inc
push
out
iret
add
icebp
dec
push
orl
lahf
inc
int
xchg
icebp
lds
dec
inc
movl
pop
test
test
pop
nop
imul
pop
daa
ret
push
inc
dec
add
rorl
inc
jnp
int3
add
bound
add
roll
dec
push
dec
xor
cmpsl
cmpl
outsl
inc
roll
pop
mov
adcl
jno
inc
jo
and
dec
movsb
dec
loopne
xor
push
add
push
lret
jb
aam
adc
mov
sti
add
sbb
mov
and
shrb
jno
jge
ret
test
or
jb
pop
adc
ljmp
repz
and
mov
jle
jno
mov
orl
adc
pop
inc
sub
mov
dec
push
push
outsl
sti
push
int3
push
pop
enter
adc
clc
clc
fucomi
or
xlat
dec
xor
pop
add
ret
out
and
pop
xor
dec
icebp
pop
aas
mov
rclb
dec
add
je
pop
xchg
fsqrt
inc
imul
sub
push
push
test
or
sbb
adcl
bound
dec
roll
aad
push
dec
jl
ret
push
mov
pop
sub
shr
bound
dec
cld
dec
and
iret
add
xchg
popa
pop
dec
mov
mov
out
pop
ja
pop
iret
pop
push
add
dec
sti
adc
add
mov
adc
dec
popa
push
in
mov
xchg
or
mov
mov
push
adc
lret
repz
rorl
inc
ss
test
das
xor
jmp
lret
into
lret
scas
jge
push
ret
dec
add
add
sub
mov
dec
xor
notl
or
lret
pop
ret
push
add
insb
jae
push
rolb
mov
pop
dec
push
or
inc
int
lea
inc
dec
jecxz
dec
mov
pop
or
or
xor
shl
movlhps
inc
hlt
fxch
push
test
inc
dec
int
pushf
mov
and
pusha
iret
and
jae
lds
xchg
pop
dec
dec
mov
popa
dec
inc
and
and
inc
adc
jg
jmp
fisttpl
nop
rorb
imul
pop
adc
push
push
push
push
jnp
pusha
jno
addr16
mov
int
inc
ja
or
push
sub
popa
sbb
imul
iret
push
and
test
mov
dec
out
ror
outsl
jbe
push
adc
sbb
inc
push
icebp
das
jae
fistl
shrb
push
mov
lret
sub
pop
int
mov
jns
out
cmp
in
mov
jmp
outsb
xlat
jns
pop
dec
xchg
dec
jmp
jecxz
loope
mov
xchg
aam
or
mov
bound
mov
gs
inc
test
fwait
and
iret
test
ds
in
das
pop
push
mov
jl
ss
jnp
jae
or
subb
xchg
xchg
sbb
or
movsl
and
cmp
lods
jmp
aaa
adc
vpaddsb
lretw
add
sti
cltd
daa
sbbl
xor
enter
add
or
jo
in
push
dec
mov
lcall
fcmovnu
adc
ljmp
int
in
in
sub
push
movsb
gs
add
inc
loope
arpl
es
jmp
xorl
pop
pcmpgtd
or
inc
jecxz
mov
popa
xchg
mov
xchg
ret
jle
cmp
dec
pop
loop
jmp
int
or
xchg
mov
sub
push
mov
int
rcl
mov
in
push
lods
jl
lahf
inc
jno
mov
inc
out
daa
mov
fwait
and
jmp
sti
nop
mov
dec
pop
add
xor
cmp
sti
mov
shl
pop
jnp
outsl
ret
icebp
sbbb
pop
or
in
lods
outsl
push
lret
add
ret
jbe
movsl
rol
loop
jns
hlt
jge
xor
jae
fwait
add
andl
sub
xchg
lods
les
mov
subl
xlat
or
add
push
int
fcoml
pushf
adc
fwait
and
mov
push
je
aas
jecxz
outsl
sti
lea
lds
add
loope
add
adc
push
or
sbb
dec
test
adc
or
sar
ret
fwait
xchg
or
lret
test
clc
dec
adcl
movq
or
pop
loop
xchg
insl
push
fs
adc
sub
jle
push
or
add
leave
clc
inc
push
sub
shl
ret
mov
mov
pop
test
mov
adc
fcompl
jb
push
cmp
in
cmc
dec
pop
jp
sti
into
int
loop
push
dec
iret
inc
push
jne
fildll
xor
arpl
pop
add
pop
faddl
subb
jmp
ljmp
or
xor
xlat
dec
fistl
loopne
ret
xor
or
inc
or
add
lock
das
add
addb
pop
clc
scas
mov
push
stos
fistps
push
push
or
pop
pop
int
mov
bound
int
adc
mov
in
or
shll
fsts
push
daa
push
dec
push
stc
int
push
dec
xchg
mov
or
int
push
push
imul
pop
pop
testb
inc
fwait
sbb
data16
adc
icebp
xchg
stc
out
stc
sbb
mov
cwtl
adc
sti
ficoms
shll
inc
enter
fwait
sbb
push
lds
inc
enter
mov
js
jmp
sbb
or
mov
das
pop
sti
sarl
pop
or
ret
fldenv
arpl
add
dec
adc
daa
dec
jns
repz
jmp
push
adcl
dec
jae
mov
and
sti
shrb
mov
push
dec
aam
adc
popa
fimull
pop
add
push
lret
jle
adc
mov
or
pop
add
xor
dec
cmp
popa
int
fwait
loope
adc
push
data16
test
cmp
jno
cmp
xor
dec
mov
jae
mov
sub
pop
adc
jns
push
push
inc
push
fwait
pop
or
sub
jbe
dec
or
lahf
cld
pusha
test
enter
fdivs
dec
or
inc
add
cmp
ds
sub
dec
shlb
out
arpl
dec
or
dec
out
mov
arpl
rorl
adc
sub
push
int
cwtl
jne
adc
xchg
test
inc
leave
and
add
add
fcmovnbe
jo
cmp
lret
out
movsb
adc
call
insb
int
jmp
iret
inc
cltd
jecxz
dec
mov
lret
push
fmul
cltd
or
push
add
mov
jo
cwtl
pop
dec
sbb
jae
outsl
sbb
out
fimuls
jecxz
and
popa
sub
mov
add
sti
mov
pop
sbb
add
dec
nop
dec
daa
jmp
aas
pmaddwd
jmp
cs
jo
es
or
addl
inc
jno
shlb
push
roll
int3
int
aad
scas
mov
jge
popa
mov
mov
xchg
mov
negl
jecxz
or
stc
lahf
clc
in
xchg
or
enter
or
das
aas
adc
add
push
js
hlt
and
ss
mov
sahf
jae
pop
repz
jmp
or
xor
pop
mov
ljmp
outsl
mov
test
repz
jnp
cwtl
in
or
push
push
or
addr16
pop
push
mov
mov
shrl
scas
adc
dec
lret
ljmp
arpl
pop
enter
jecxz
adc
pop
add
lahf
inc
es
ss
fsubrs
stos
jae
adc
ret
push
pop
mov
or
sbb
cli
xor
ret
push
jns
idivl
movsl
dec
pop
pop
int
cmc
daa
inc
in
or
data16
stos
andb
in
popf
subl
pusha
int
imul
push
adc
cmp
xor
jo
mov
lock
fistl
shll
dec
jns
inc
push
fucomip
cmp
loop
add
lock
and
fs
movl
adc
add
xchg
xor
mov
and
jae
mov
gs
push
arpl
push
sti
sbb
push
popa
mov
shrl
shlb
and
sti
push
int
data16
pop
cmp
push
leave
fisttpl
mov
int
js
fcom
cmp
lcall
push
mov
pop
popa
push
jl
cmpsb
push
movsl
add
jmp
test
add
lret
mov
sbb
adc
popa
sahf
shrl
jg
mov
popa
xchg
inc
std
inc
enter
jg
xor
mov
jnp
ja
hlt
shrb
inc
or
push
arpl
sbb
pop
pop
pop
jl
subb
or
mov
mov
pop
push
repz
ja
insb
imul
cli
cmpsb
testl
in
dec
sub
sahf
enter
and
dec
or
jae
jecxz
fisubl
inc
xlat
aas
pop
lret
rorb
dec
mov
leave
inc
mov
dec
outsl
lret
mov
pop
or
jle
icebp
push
add
shll
jmp
jecxz
sub
sbb
mov
jmp
arpl
daa
imul
shl
repnz
lods
iret
addr16
repz
pop
pop
hlt
push
movl
shll
sub
stos
fimull
dec
aas
cmp
int
pop
sub
sub
arpl
ds
inc
mov
xchg
pop
lcall
into
arpl
adc
iret
leave
push
sub
lret
cmp
pop
push
push
icebp
into
push
push
into
bound
rsm
push
push
adcb
mov
scas
je
dec
pop
icebp
pop
lret
xor
filds
addb
aaa
add
push
push
inc
daa
add
aaa
add
out
cs
jae
mov
and
scas
iret
pop
cmp
push
pop
xchg
bound
mov
dec
sbb
addr16
daa
aam
popf
aad
repz
pusha
and
mov
and
into
pop
in
push
lds
dec
int
sub
push
pop
leave
lret
je
push
mov
mov
pusha
xchg
add
pop
mov
pop
sbb
arpl
rcrl
mov
mov
and
es
pushw
add
jno
jnp
push
sbb
mov
sbb
test
inc
fbstp
popa
fistl
lret
jbe
aas
adc
daa
push
pop
mov
lret
into
push
and
jecxz
or
dec
jbe
xchg
repz
xchg
or
mov
popf
outsl
push
jecxz
and
insl
push
mov
adc
xchg
fwait
mov
stos
mov
pop
jecxz
lret
push
std
and
leave
xchg
call
fimull
inc
dec
or
int3
int3
xchg
xchg
lret
jge
punpckhdq
outsl
iret
cmc
pop
dec
xchg
dec
xchg
mov
pop
xchg
in
adc
sub
ja
jmp
shll
loopne
loope
adc
inc
dec
sahf
mov
loop
lcall
adc
sbb
in
daa
and
push
fwait
sbb
movl
sti
sbb
outsl
fnstcw
mov
add
cmp
add
insl
popa
xchg
icebp
mov
xchg
jbe
pop
int
movsl
cs
mov
or
stos
and
std
sbb
push
mov
push
xor
dec
int
and
sarl
stc
xchg
lret
push
int
stc
fst
lea
dec
and
popl
sub
in
aam
imul
jge
mov
inc
xor
or
push
pop
jecxz
add
add
rolb
mov
pop
lret
jne
rclb
adc
xchg
mov
gs
add
testb
lret
mov
adc
xchg
jnp
loop
aaa
sub
rcrb
add
stos
rol
mov
xchg
lea
fwait
lret
scas
roll
lock
in
movsb
outsb
or
incb
pop
dec
push
inc
sti
xor
mov
rcrl
push
push
cli
pop
lea
rorb
rcll
add
push
loopne
adc
sti
adc
sbbb
pushf
add
mov
popa
fucomip
fs
mov
jns
ret
or
fwait
adc
inc
subb
loope
int3
roll
lret
inc
iret
fs
sub
dec
loop
int
in
jo
popa
mov
sbb
pop
loop
mov
xchg
popf
fcoms
ret
mov
lock
sbb
add
jnp
add
push
inc
aam
mov
popf
and
inc
inc
fldt
sti
mov
out
rcrl
insl
in
jne
scas
loope
cmp
cmc
dec
sub
lods
fisttps
push
dec
arpl
clc
add
xchg
sbb
xlat
dec
push
popa
int
adc
xor
sbb
je
adcb
popa
fidivrs
jnp
aas
add
pop
mov
icebp
ja
pop
mov
push
popa
inc
push
push
mov
jne
push
fwait
adc
sub
xchg
shlb
das
mov
fcoms
lods
fldl
push
sbb
call
pop
dec
add
int
out
xchg
fistl
adc
sub
out
roll
jge
push
mov
ss
int
fwait
dec
sub
dec
mov
inc
sub
xchg
push
cmpl
repz
lock
ret
int
popa
push
xchg
ja
js
dec
fbstp
or
pop
cwtl
sub
or
mov
push
push
sti
aas
lahf
insl
shlb
add
inc
rorb
push
mov
push
jbe
jmp
cmp
daa
inc
or
pop
lds
sbb
movl
xor
push
addr16
cmp
cltd
leave
xchg
inc
add
rorb
les
xlat
mov
fldcw
xlat
fisttpl
lock
iret
xchg
push
stos
jmp
bound
mov
mov
xlat
jge
out
das
mov
add
nop
dec
push
fs
int3
movsb
insl
popf
pop
xlat
push
dec
sub
push
pop
clc
shll
les
jl
sub
fwait
push
mov
fisubrl
or
fcomps
incb
sub
push
ret
lret
inc
popl
das
add
in
cmp
aad
andl
cmc
jae
and
or
or
pop
ret
or
push
add
dec
std
adc
cld
push
jmp
mov
test
push
imul
gs
das
aad
and
cmp
jmp
jns
inc
pop
add
imul
pop
xor
xlat
fmul
fsubl
xchg
ret
or
mov
ret
xor
je
pop
dec
rolb
ret
int
sbb
pop
lods
shlb
and
stc
push
adc
in
sbb
fwait
sbb
mov
or
out
add
sti
or
sub
inc
push
lods
mov
hlt
dec
icebp
imul
jb
adc
jns
xor
call
xorb
aad
pusha
adc
sbb
xchg
test
movsb
fwait
and
arpl
or
ret
lret
or
dec
outsb
dec
and
mov
mov
dec
lret
and
xor
mov
fiaddl
iret
rorl
and
pop
pop
jb
iret
jae
dec
and
into
dec
sbb
out
cmp
rcrl
adc
sbb
rcll
or
push
xor
pusha
iret
lret
xchg
xchg
sbb
shll
jns
pop
pop
mov
push
mov
inc
lret
push
daa
gs
shll
movl
int3
lods
push
push
dec
dec
icebp
xlat
pop
and
rol
insb
fildl
icebp
push
int
insl
loopne
sbb
adc
adcl
mov
inc
xchg
enter
push
nop
inc
sbbb
add
inc
aas
and
je
loope
imul
mov
rol
xor
ret
sub
addr16
push
add
mov
cwtl
out
roll
jmp
jmp
iret
fmuls
push
sub
add
lds
inc
int
arpl
aaa
jae
arpl
push
pop
int
cmp
adc
jmp
cmpsl
fs
pop
popf
fs
fistps
jge
stc
sbb
sbb
adc
loop
sub
in
xlat
jmp
in
and
sti
xchg
lods
outsb
push
push
aad
and
out
fidivs
xor
jle
adc
scas
sbb
roll
pop
loope
mov
xor
call
sti
pop
dec
scas
mov
icebp
repz
ret
jge
pop
fstpt
lahf
lods
jo
mul
jmp
lahf
push
mov
dec
mov
or
inc
dec
bound
daa
dec
jno
pop
into
dec
push
lds
iret
rorl
mov
mov
pop
or
lds
leave
rorl
mov
mov
pop
or
lds
lret
rol
mov
pop
inc
dec
add
adc
xchg
bound
into
jne
adc
mov
add
jge
and
lds
sahf
push
pop
subl
mov
loopne
test
into
pop
repnz
dec
jg
popl
push
nop
ljmp
add
fisttpll
xchg
inc
sbb
push
pop
je
lea
loopne
lock
addl
xchg
sub
inc
xchg
mov
pop
scas
sub
jge
push
jnp
adcl
push
mov
arpl
bound
xchg
or
dec
pop
jmp
imul
lds
dec
pop
adc
xchg
and
mov
xchg
dec
inc
cmp
pushf
sbb
int
xchg
jb
pop
dec
scas
jle
pop
adc
pop
sbb
sbb
mov
push
mov
dec
addr16
jmp
sub
jo
popa
dec
imul
sub
fistl
dec
jns
popa
fneni(8087
daa
push
jmp
lods
jg
add
sbbb
push
fstpt
inc
and
insb
xchg
dec
mov
or
inc
dec
sub
das
mov
xor
std
mov
int3
outsl
and
es
jbe
sar
add
inc
das
jle
lea
rcl
repnz
je
inc
cmpb
add
inc
rcl
or
inc
dec
dec
int
jae
in
arpl
adc
pop
push
inc
scas
push
inc
or
jl
outsl
cmpsl
and
sti
in
lret
push
add
movl
cmpsl
adc
insl
in
jb
ss
mov
outsl
pop
ret
or
mul
add
das
sub
roll
lea
shrb
add
adc
or
push
or
push
jb
out
test
mov
addb
popa
int
into
out
lret
mov
or
dec
out
movb
in
jmp
mov
or
pop
sub
add
pop
xor
dec
dec
mov
cltd
bound
push
inc
cmp
arpl
arpl
and
dec
repz
rcll
daa
fsts
cmova
sbb
push
testl
push
dec
out
mov
dec
sub
xchg
add
xchg
inc
xchg
dec
mov
push
lret
or
dec
fisubrl
dec
sub
ljmp
xor
jo
mov
imul
or
lret
add
inc
popa
pop
inc
into
not
imul
stos
pop
dec
imul
push
rcll
jb
in
dec
and
or
rol
popa
out
jmp
movsl
adc
mov
dec
rorb
popa
movb
ror
mov
repz
repnz
in
leave
out
sti
ret
xchg
dec
gs
adc
aad
jb
lret
pop
inc
jae
adc
cli
pop
push
outsl
and
mov
add
or
xchg
xor
dec
cwtl
and
imul
add
arpl
and
push
push
fabs
lahf
mov
bound
adc
add
xor
lock
pop
fisttpl
ret
mov
cmp
push
add
out
lea
imul
adc
mov
mov
js
out
or
cmc
test
mov
mov
cmc
push
cmp
push
lret
addl
pushf
addr16
js
arpl
push
mov
adc
dec
rcrb
xor
jbe
je
inc
cltd
sbb
fldcw
icebp
ret
pop
xor
mov
inc
jge
xchg
sahf
jae
rorl
ret
test
insl
sbb
inc
mov
fsubrs
mov
gs
cmpsl
sbb
xlat
out
pushf
sbb
add
jno
pop
fisubl
and
dec
xchg
inc
xor
dec
xchg
xor
dec
cltd
outsb
and
add
out
add
fdivs
inc
pusha
out
inc
imulb
add
xchg
sub
fisubrl
lock
pop
add
in
and
repnz
out
jge
xchg
jne
mov
mov
xchg
dec
sti
add
call
push
aaa
ja
rcrb
inc
adcl
xchg
mov
les
and
pop
scas
jae
mov
pop
push
jno
add
mov
xchg
mov
adc
je
add
lret
push
dec
ret
insl
jecxz
ror
push
scas
cmpsl
lds
aas
fadds
mov
push
lods
mov
sarb
xchg
movsl
inc
pop
sahf
and
mov
fs
lret
nop
arpl
push
mov
sahf
adc
add
flds
scas
movsl
jno
inc
ret
mov
fdivs
add
das
gs
fwait
push
es
verr
jmp
sahf
push
sub
stos
lret
loope
add
jmp
loop
inc
cmp
jp
int
xchg
lahf
jge
mov
or
jecxz
out
mov
ret
mov
dec
sbb
test
outsl
inc
inc
pop
bound
mov
xlat
add
inc
push
movsb
or
push
dec
cmc
jmp
cmp
mov
cmpsb
out
mov
fmull
iret
add
pop
xchg
xchg
sbb
les
adc
fldt
ret
in
lcall
jp
push
add
adc
mov
bound
pop
add
in
test
add
fs
daa
jb
xor
shll
or
add
popw
push
out
sbb
xor
add
or
and
pop
push
sbbl
in
add
fs
push
movl
xor
mov
jnp
sub
or
and
sar
shll
mov
or
xchg
jbe
rcll
add
fbld
add
sub
scas
push
or
and
adc
in
subb
adc
dec
add
push
add
insl
push
repnz
or
dec
hlt
and
cmp
imul
push
inc
dec
int
and
pusha
push
adc
hlt
stos
shl
inc
inc
sbb
pop
add
cwtl
push
loopne
add
shld
jbe
dec
or
inc
jmp
inc
dec
stos
mov
dec
mov
xchg
jmp
ret
aaa
jae
divb
insb
fdivrs
cmp
addl
push
mov
xor
repz
add
cmpsl
adc
fldt
add
sub
add
pop
adc
dec
rclb
cmpl
daa
fmuls
loop
dec
cmp
arpl
imul
mov
int
pop
es
dec
mov
rorb
popa
iret
pop
dec
into
lret
or
addr16
ret
popa
inc
pop
pop
push
lret
test
or
rorb
popa
mov
dec
dec
lret
dec
addr16
or
andb
xchg
mov
dec
rorb
popa
push
pop
int
lret
inc
pop
lcall
xchg
rorb
popa
or
leave
enter
push
addr16
pop
cmp
dec
add
pop
pop
inc
lret
les
or
dec
popa
enter
lret
or
add
inc
rorb
rolb
push
popa
pop
adc
aaa
insl
in
repnz
stos
or
stc
xchg
adc
push
mov
sub
dec
in
add
movsl
gs
sbb
pop
xchg
lret
out
pop
or
adc
orl
loop
add
mov
or
rorb
outsb
lret
dec
inc
mov
imul
jp
rcll
das
rclb
leave
pop
inc
ret
jae
loopne
push
cmp
neg
jmp
push
arpl
dec
sti
testl
jns
inc
pop
ret
adc
inc
push
push
rol
inc
inc
cmpsb
and
push
testl
lret
popl
icebp
sub
push
inc
pop
or
inc
test
xlat
adc
push
icebp
dec
or
push
adc
adcb
push
testl
mov
sub
push
movsl
and
addr16
je
dec
dec
push
fs
push
daa
pop
pop
xchg
adc
xchg
inc
push
push
push
fdivl
add
adcl
and
pushw
mov
or
push
push
jg
inc
jle
std
test
xlat
arpl
push
dec
mov
xchg
adc
jge
add
aas
aad
fs
mov
and
sbb
je
stos
ficomps
cwtl
lds
shll
ss
and
xchg
pop
or
inc
inc
jne
xchg
insb
cmpsb
xchg
arpl
pop
add
and
aam
out
pusha
pop
rcll
imul
ds
cmp
mov
inc
arpl
je
mov
inc
and
push
push
aaa
iret
movl
mov
es
mov
incb
dec
popa
push
in
pop
inc
and
fwait
xlat
sbb
pop
test
je
js
fnsave
mov
lds
or
mov
scas
mov
loop
push
mov
adc
shll
cmc
adc
push
jbe
jecxz
fstpt
adc
gs
je
mov
add
jmp
fs
inc
daa
addr16
addr16
cmpb
fwait
arpl
pop
push
add
add
xchg
and
data16
fs
addl
jbe
in
xchg
and
jno
push
sub
icebp
pusha
push
hlt
lds
add
ljmp
jb
adc
push
xchg
roll
rcrl
jns
mov
pusha
rcll
xor
fadds
inc
inc
xlat
pop
movsl
and
jp
cmpsl
lret
pusha
repz
jno
lds
add
pushf
adc
adc
cmp
icebp
xor
arpl
dec
jp
jns
push
ss
outsl
push
popa
lds
inc
dec
pop
cmpsl
adc
or
in
xchg
je
imul
in
xchg
inc
jbe
dec
push
jbe
movl
daa
fstpt
loopne
popf
mull
out
loope
and
push
fiaddl
gs
out
into
pop
add
ret
pop
push
std
popa
movsl
scas
mov
sarl
divb
cmp
mov
lcall
push
push
cmp
out
push
and
pop
push
popf
mov
and
push
mov
getsec
inc
push
push
mov
out
roll
push
imul
push
repz
jo
fidivs
fisttpl
jmp
jmp
adc
jl
add
inc
addr16
sbb
sbb
std
ljmp
es
pop
addr16
inc
xlat
sti
daa
int3
adc
add
sbb
aaa
and
pop
and
push
cmpsl
pushf
dec
xchg
gs
push
inc
lods
in
mov
lahf
sbb
inc
dec
dec
push
ret
inc
jb
dec
pusha
inc
add
adc
dec
dec
inc
and
sbb
xor
inc
dec
adc
dec
inc
or
pop
and
inc
cmpsl
xlat
push
jbe
data16
xor
rol
xor
adc
int
push
inc
mov
inc
push
into
dec
je
rclb
bound
inc
push
adc
shlb
leave
leave
jg
imul
pop
jae
push
mov
push
sbb
ret
push
add
pop
and
push
push
rcrb
addr16
insb
add
lods
or
mov
lret
les
mov
lret
dec
push
leave
sub
mov
int
imul
rcll
cld
ret
leave
mov
shr
out
movb
add
bound
addr16
adc
inc
xchg
out
dec
sahf
je
test
dec
push
jmp
pushf
pop
push
test
inc
shlb
mov
jne
leave
or
push
dec
pop
js
dec
push
out
push
jge
imul
cltd
aad
in
imul
mov
inc
ja
out
sbb
inc
addr16
dec
std
dec
push
repz
arpl
loope
jb
push
lret
inc
jae
test
inc
xchg
mov
in
loope
pop
lds
cmp
xchg
test
jno
adc
push
movsl
inc
jecxz
iret
arpl
mov
sbb
dec
scas
and
insb
sbb
adc
jg
add
sub
rorl
or
mov
addr16
adc
or
mov
xchg
fdivrs
pop
and
std
pop
enter
outsl
bound
push
imul
fists
jae
push
lods
add
mov
pop
cmp
or
mov
mov
add
imul
enter
mov
fadds
adc
push
cmpsb
mov
jg
daa
jbe
dec
mov
cmc
in
sub
and
adc
dec
dec
lods
dec
movsb
cmc
adc
or
cmp
loop
push
add
add
lcall
pop
daa
iret
mov
lods
inc
adc
push
add
xchg
imul
repnz
nop
mov
filds
pop
pop
mov
xor
xlat
cmpsb
jmp
dec
aas
pop
int3
ret
pop
cld
fstp
and
inc
and
rorl
out
pop
data16
out
mov
pop
rcr
add
fldcw
sbb
mov
sbb
call
or
inc
ds
sub
sub
out
imul
imulb
xchg
inc
push
call
fstl
mov
dec
jno
loope
int
xor
cld
out
xchg
outsb
cmp
adcl
jbe
or
sbb
mov
xchg
scas
mov
inc
push
outsb
lcall
jecxz
popa
or
pop
jnp
dec
cmpsl
pop
push
int3
test
lock
pop
int3
hlt
movsl
inc
and
mov
mov
mov
sub
test
add
pop
xchg
pusha
movzbl
inc
xchg
ja
pop
out
sbb
movsb
pop
push
ret
add
add
outsb
or
push
int3
xor
jecxz
addr16
or
enter
add
fcomp
ret
dec
leave
rorb
popa
xorb
xor
aam
andb
ficompl
xchg
xchg
lods
jo
and
test
setae
add
es
into
mov
adc
arpl
jge
dec
push
aas
mov
test
xlat
pop
insb
popa
xchg
push
add
xchg
lret
xchg
int3
popa
pop
pop
mov
push
arpl
jnp
int
sarl
dec
xchg
stos
jp
pop
je
std
rcrb
xchg
mov
mov
fcmovne
add
dec
outsl
mull
adc
dec
jae
test
xchg
lcall
push
out
lds
mov
xchg
loopne
jmp
dec
or
and
scas
add
leave
add
sub
scas
or
gs
es
shrb
fdivl
push
xchg
in
jg
add
jbe
inc
mov
clc
dec
adc
sub
sarl
jmp
addr16
enter
and
push
fidivl
fcmovnbe
mov
lea
lret
repz
imul
mov
jle
pop
jns
cwtl
mov
add
and
out
xchg
or
movsb
inc
add
adc
out
push
jo
imul
or
jp
and
aam
lea
dec
leave
mov
out
and
cmova
and
enter
iret
iret
shll
or
rcrl
shr
call
push
icebp
in
loope
dec
gs
push
fadds
fldt
pop
push
gs
or
mov
push
call
lock
shrl
dec
lds
add
sbb
mov
fadds
adc
xchg
or
test
mov
jl
cmp
aam
lret
pop
jo
in
xchg
out
jp
mov
aas
jo
int
push
sbb
mov
adc
aad
mov
aad
inc
xchg
lret
call
into
out
adc
bound
in
and
arpl
mov
out
or
or
outsl
mov
ficompl
lock
mov
push
mov
jne
gs
xor
mov
add
adcl
ret
push
lret
push
stc
rcll
fildll
ret
dec
js
xchg
push
lret
add
or
adc
imul
loopne
adc
jno
push
xchg
fs
mov
jge
call
mov
jge
inc
and
rcll
addr16
mov
push
mov
mov
es
jg
fcoms
lods
and
mov
push
fwait
popa
mov
test
movsl
pop
sbb
cmp
les
jb
or
data16
mov
rolb
inc
lea
push
jmp
mov
sbb
jbe
jp
clc
fidivl
movsb
movb
call
test
lret
inc
or
dec
pop
add
xchg
mov
mov
pop
jmp
push
inc
fmull
dec
xchg
add
out
les
in
aas
xor
lret
add
icebp
lods
sbb
or
gs
inc
rcr
inc
orl
lret
clc
int3
push
push
cmpl
rolb
add
stos
imul
or
fsubrl
push
jecxz
gs
cmp
cwtl
and
jge
sub
jg
jae
ret
push
push
into
dec
or
lock
and
add
dec
inc
mov
adc
add
dec
enter
bound
je
mov
je
and
jnp
cmp
loop
pop
aad
adc
je
int
subl
jp
rolb
rorb
jb
aaa
xlat
sbb
sbb
cmpsb
mov
sbb
into
xlat
jno
or
nop
in
into
dec
outsl
ret
or
or
imul
push
imul
pop
ja
loope
or
enter
lcall
add
push
jnp
pop
les
pop
mov
add
push
mov
jno
mov
mov
or
dec
push
addb
daa
popf
inc
adc
test
sbb
test
mov
sub
outsb
outsl
and
and
mov
dec
scas
push
jge
pop
push
mov
fisttps
sti
pop
mov
pop
sarl
cli
imul
jae
stc
dec
pushf
push
xchg
sbb
insb
shll
je
push
ds
cmpb
or
insl
aas
aas
cmc
jge
mov
fiaddl
xchg
lret
shll
popa
in
out
push
adc
xorl
fisttpl
xor
add
adc
xchg
push
jmp
and
lret
xor
push
call
adc
sub
repnz
ja
or
or
or
shll
test
add
pop
jno
shll
enter
repz
pop
popa
add
xchg
dec
push
lea
jmp
lea
add
mov
es
mov
mov
mov
push
pop
icebp
out
adc
xchg
or
xchg
adc
or
clc
out
push
stos
xchg
jmp
and
cmp
mov
vprotb
push
enter
les
ja
xor
sarb
cmpsb
fsts
fdivs
pusha
mov
ja
icebp
and
add
add
imul
popf
addr16
jmp
xchg
xchg
cwtl
mov
jg
rorl
and
cltd
mov
ss
jnp
dec
bound
xor
ds
lock
push
and
sub
pop
push
jecxz
mov
arpl
jge
sbb
mov
nop
and
test
fiaddl
adc
mov
jns
scas
fwait
pushf
ret
adc
and
andl
dec
loop
fldenv
sti
pop
fbstp
arpl
aas
xor
lret
pop
cmp
jle
loopne
cmp
flds
xchg
mov
adc
cs
nop
je
dec
dec
int
push
inc
or
mov
dec
sbb
rcrb
loope
adc
or
inc
mov
sbb
sbb
pop
sub
jmp
mov
mov
sbb
mov
sub
pop
leave
mov
push
int
xlat
mov
sub
fsubr
outsb
shr
xchg
jp
or
repz
sbb
pop
adc
setb
xchg
into
mov
call
xchg
xor
dec
testl
rcr
cmp
outsb
test
push
insb
ds
cmpsl
inc
xlat
rcll
adc
pop
push
call
outsb
and
sub
lods
testl
fs
gs
sti
sub
xchg
jo
je
aas
cltd
lahf
xorl
int
js
dec
outsl
pusha
inc
orl
cmp
int3
mov
movsl
lret
loopne
jle
inc
xlat
pop
adc
testb
cmp
push
test
mov
xchg
sti
xchg
aad
or
mov
fists
inc
or
mov
test
lods
imul
ror
call
aam
fcmovb
adc
jmp
loop
inc
movaps
ds
push
lds
cld
add
fisubl
push
mov
jge
orl
jnp
insb
xor
xor
push
movsl
mov
dec
enter
xchg
repnz
imul
pop
or
pop
mov
ja
push
push
mov
sbb
cmp
pop
mov
adc
push
es
cmp
cwtl
and
pusha
inc
negb
call
or
push
sbbl
push
idivl
test
subl
imul
sbb
add
and
jmp
popa
dec
fwait
cwtl
pusha
out
dec
push
xchg
pop
push
pop
fcoms
fisubrs
addr16
stos
stos
dec
orl
pop
jp
sarl
scas
jne
inc
loopne
ss
xchg
inc
movl
lock
je
xor
cmp
int
push
ja
dec
push
mov
mov
push
mov
imul
inc
dec
xchg
imul
adc
fbstp
xor
push
into
lahf
dec
jl
push
lcall
outsb
cli
xor
xor
and
cmp
xlat
add
roll
out
push
mov
dec
adc
out
not
dec
push
sub
mov
inc
sub
mov
mov
inc
filds
xlat
cmpsb
adc
loop
dec
dec
push
add
mov
cmpsb
adc
jne
and
xlat
idivb
testl
dec
or
push
add
and
dec
popf
incb
xor
inc
psrad
stos
adc
add
leave
add
xchg
mov
pop
mov
mov
add
mov
pusha
inc
fisubs
loop
sbb
imul
add
imul
add
mov
push
add
jae
and
push
mov
mov
dec
cmp
cpuid
sbb
dec
dec
insl
mov
pushf
addr16
int
dec
call
inc
loopne
dec
addr16
pusha
mov
xchg
dec
cmp
jne
xor
sti
jl
dec
jo
sub
rcl
xchg
or
xor
dec
dec
push
xlat
jne
adc
dec
out
fadds
push
xchg
inc
or
je
cmc
or
popf
dec
or
mov
xlat
cmp
cmp
dec
dec
ss
cli
mov
repz
pop
xor
jmp
adc
or
ud0
dec
popa
bound
outsl
and
pop
out
daa
popa
out
xchg
out
rolb
xchg
or
cmpsb
test
out
jbe
cmc
push
mov
push
sub
push
sbb
data16
mov
ja
pop
add
mov
inc
enter
call
bound
dec
shrl
push
testl
icebp
in
roll
pushf
jbe
jne
test
fiadds
jne
push
mov
fdivl
xchg
scas
xor
outsb
enter
dec
iret
add
adc
shll
push
cmp
inc
out
xchg
or
lret
dec
sahf
pop
push
in
push
xchg
int
dec
shr
xchg
or
rorl
inc
mov
mov
xchg
or
push
inc
rorl
dec
repz
enter
lods
xlat
aad
pop
or
adc
in
push
inc
xchg
add
cmp
xor
je
mov
outsb
inc
and
insb
or
xchg
movsl
cltd
into
jp
xchg
fisubrl
sub
adc
rclb
push
xor
aad
clc
lea
aas
mov
or
cli
fldt
inc
and
or
nop
or
aad
push
or
xchg
imul
cmpsb
sub
call
push
dec
stos
int
inc
push
test
ja
inc
icebp
fcmovne
jne
mov
mov
imul
inc
ja
aad
adc
jb
fwait
mov
and
mov
xchg
imull
aad
or
jo
push
xor
rorb
dec
mov
stos
dec
dec
jo
icebp
cmp
pop
daa
xchg
test
push
std
sub
popa
fsubs
lcall
sub
jo
sbb
mov
fisttpl
jmp
in
push
adc
push
xchg
int
pop
mov
aas
outsb
ret
movl
aaa
mov
stc
sub
inc
inc
enter
xlat
mov
minps
fiaddl
and
pusha
lcall
or
fdivrl
out
enter
shll
sbb
mov
loope
inc
mov
pop
mov
dec
sbb
in
popa
shll
jmp
mov
cli
cwtl
push
loop
pushl
fsubs
out
jecxz
mov
jmp
roll
or
or
pushf
ja
movl
loop
insb
push
jae
inc
call
push
jnp
test
arpl
fcmovu
rcr
mov
addr16
or
pop
dec
jecxz
shl
dec
sbb
sub
pop
mov
call
rorl
outsb
jnp
inc
daa
add
pop
cltd
mov
imul
push
add
or
mov
cmp
int3
rcll
mov
mov
popa
fiaddl
mov
mov
lds
popf
or
out
jg
push
rcl
nop
dec
push
loopne
lock
add
dec
push
enter
ret
popa
sub
addr16
rorl
call
xor
out
ret
ret
lea
out
lcall
push
jnp
psubusb
ds
call
pop
ds
xor
pop
and
mov
insl
fnsave
sub
xchg
lock
enter
mov
mov
clc
rcr
dec
or
dec
icebp
push
push
xchg
outsb
jle
je
adc
jo
lock
fs
nop
dec
ss
xchg
xor
dec
repz
mov
hlt
call
push
int
test
pop
sub
push
lahf
ds
mov
sbb
in
lock
shlb
add
cmp
cmp
cmc
or
xchg
mov
pop
jae
inc
lds
add
dec
pop
int
xor
dec
sarb
dec
xor
jnp
das
sti
sarb
add
mov
int3
bound
loope
dec
mov
jno
pop
sub
dec
inc
mov
nopl
sbb
xchg
or
pop
mov
jecxz
sbb
adc
subl
fcomps
inc
outsb
add
shll
ljmp
sub
pop
repnz
and
sub
xchg
xchg
jbe
fldenv
xor
into
popl
aam
mov
out
push
pop
outsl
bound
arpl
into
push
mov
and
daa
pop
fmull
cmp
push
inc
mov
or
int
outsl
pop
out
jbe
dec
fidivrs
adc
adc
dec
rcr
mov
push
pushf
push
dec
les
cmpsb
outsl
mov
sbb
daa
xchg
out
push
sub
rcr
sbb
xchg
xchg
lock
pop
sub
mov
fdivr
insl
daa
pop
mov
push
push
stos
fsubr
pusha
daa
sub
aad
sub
sbb
clc
jge
push
popa
dec
sub
aad
adc
add
adc
add
shlb
cmpsb
cmpb
push
movsb
mov
or
push
js
outsb
daa
ljmp
fs
sbb
or
daa
mov
psubq
dec
or
stc
fwait
daa
cmp
xchg
leave
push
fistps
sti
loop
aaa
push
jg
jmp
or
dec
cmp
ret
and
into
loopne
adc
sarl
inc
xchg
daa
adc
cmpsb
mov
hlt
sbb
lahf
mov
or
sbb
sbb
cmpsb
jle
xchg
lock
sub
enter
insl
imul
out
test
fidivl
or
fdivs
scas
lods
xchg
jbe
pop
add
xlat
cli
adc
or
fisttpl
pop
pop
cmp
and
gs
inc
mov
mov
xchg
daa
mov
into
xchg
mov
ljmp
fisttpl
test
jp
aas
lcall
push
outsb
pop
jl
jno
adc
lea
jmp
in
jmp
test
lock
scas
mov
jno
test
push
stos
aas
rcll
pop
jno
mov
jne
pusha
xchg
lods
inc
call
cld
repnz
xlat
test
xchg
insb
loopne
sub
nop
addr16
add
flds
and
dec
pop
enterw
or
fs
push
sbb
pop
pop
xchg
in
fistps
in
sub
cltd
out
leave
cmpsb
push
repnz
mov
inc
repnz
pusha
push
psubusb
jo
xor
adc
adc
pop
and
push
lret
and
mov
sub
ja
push
sbb
dec
sub
inc
test
cmpsb
ja
xor
fcompp
push
mov
std
or
shrl
push
cmp
test
dec
pop
pop
mov
sbb
fldt
push
rolb
iret
outsl
mov
lcall
fxch
pop
inc
daa
adc
xchg
xor
push
and
pop
sbb
ljmp
mov
adc
mov
push
out
cmp
jl
adc
or
mov
lret
leave
test
shlb
fists
shrl
fmul
sbb
push
dec
ret
push
enter
and
push
fxch
popl
dec
imul
aam
dec
push
fidivl
push
fsubs
cmpsl
sbb
mov
inc
out
sub
pop
repnz
pop
cmp
loop
add
lret
adc
mul
ret
icebp
cmp
push
mov
fs
imul
out
or
mov
dec
add
mov
cmp
lret
mov
insl
xchg
inc
rol
jmp
mov
decl
xchg
push
scas
fcompl
daa
mov
mov
xchg
inc
adc
jbe
or
or
loope
fcomip
push
mov
or
inc
jge
jb
ljmp
push
sub
aad
add
ret
repnz
mov
push
dec
sub
mov
hlt
push
inc
aam
sbb
inc
adc
mov
mov
push
nop
cmp
mov
jns
push
pop
dec
ss
jbe
mov
dec
fists
loope
pop
out
call
out
or
dec
mov
sub
cmp
fsubs
xchg
add
xor
fs
daa
lea
cmpb
adc
enter
adc
fdiv
cmp
enter
popf
sub
xor
mov
jno
popa
popf
subl
pop
jb
jbe
adc
push
in
push
movsl
jge
and
mov
inc
push
xor
xlat
int3
stc
push
lods
rcr
sbb
fldcw
push
sbb
mov
xlat
add
mov
dec
lret
xchg
pop
adc
call
fbld
sub
sbb
addr16
pop
das
mov
pop
sub
mov
jge
add
imull
popa
out
enter
xchg
adc
push
outsb
pop
loop
fidivrs
sbb
popa
in
adc
out
push
and
lcall
mov
adc
cs
into
iret
jno
or
adcl
inc
ds
jl
push
mov
pshufw
arpl
mov
push
fadd
lea
pop
pop
int3
or
mov
push
outsl
in
movsl
dec
ret
jg
mov
shl
ds
dec
dec
lahf
fsub
cltd
adc
out
xchg
adcb
cs
jae
pop
movsb
sub
fucomp
data16
mov
inc
or
push
loope
hlt
imul
mov
dec
out
sub
push
xlat
sub
cs
mov
arpl
fsubl
lea
jno
sub
fcmove
mov
push
add
movsb
or
or
int
iret
mov
stos
lock
pop
es
push
and
jmp
sub
dec
enter
adc
and
cs
push
cmp
dec
or
xchg
sarl
aam
pop
sbb
lock
insl
sarl
mov
lods
adc
xchg
adc
addr16
mov
jb
jge
inc
mov
fcoml
pop
inc
sti
shl
fcmove
outsl
ds
data16
jmp
adc
loopne
push
enter
jle
data16
mov
push
pop
shlb
or
enterw
mov
cmp
dec
mov
and
pop
jnp
lret
xchg
cmp
push
or
adc
inc
pminub
pop
dec
jp
mov
sbb
movsb
movsb
jg
enter
sbb
jae
pushl
test
fisubl
into
bound
mov
or
inc
mov
pop
xchg
or
adc
push
das
push
insb
push
push
mov
out
in
je
out
das
fmull
lret
cmp
adc
adc
xor
ss
lcall
subps
aas
push
xor
push
insb
or
inc
cs
or
jo
push
jle
push
xlat
sbb
xor
cmovle
ja
enter
jo
les
dec
or
add
push
xor
scas
inc
or
mov
jmp
leave
nop
inc
cwtl
lahf
sbb
push
out
icebp
daa
adc
add
sbb
rcrl
ljmp
and
xchg
jae
repz
dec
enter
push
or
fmuls
test
sti
ja
adc
test
xchg
movsb
cmpsb
or
scas
stc
pop
idivl
popw
mov
stos
aam
dec
xor
sub
into
test
or
mov
xchg
sbb
lea
cmp
jmp
das
and
push
popf
mov
jnp
add
adc
aas
fnstsw
rorl
cwtl
clc
mov
add
addl
xlat
mov
jge
add
sub
ja
lret
lcall
pop
popa
mov
sbbb
dec
push
fistpll
add
adc
fcmove
and
jae
rclb
jb
scas
mov
or
into
push
js
repnz
pop
aam
dec
jecxz
or
add
jns
lcall
or
iret
mull
add
pop
lods
or
jecxz
jb
int
js
jno
mull
outsb
adc
cmp
mov
out
insb
iret
pop
jno
test
fnstenv
xor
cld
mov
imul
and
outsb
imul
outsl
nop
and
call
les
cmp
rcrl
pop
negb
dec
mov
pop
mov
outsl
mov
jmp
rclb
lds
lret
or
dec
call
pop
arpl
inc
sbb
fwait
cmpsl
ljmp
rorb
cmp
adc
xchg
sub
cmp
pop
push
mov
aad
dec
fstpt
sbb
xor
fcoml
pop
cmpsb
outsb
pop
push
xchg
or
push
ds
xlat
icebp
or
push
lods
pop
sarl
rcrl
iret
push
lcall
xchg
test
dec
sar
xchg
stos
sub
test
and
adc
lret
sub
test
inc
sti
or
xchg
cli
add
push
cmp
sbb
adc
pop
xchg
mov
pop
fdivrl
sarl
push
pop
push
and
add
int
jecxz
cltd
out
sub
fwait
or
out
in
repz
fiaddl
loope
jbe
loop
in
sbb
aas
cmp
jp
rorb
ds
mov
inc
jle
insb
push
or
mov
cmp
push
in
hlt
aaa
mov
adc
or
adc
xor
xor
sbb
fidivl
stc
into
xor
jecxz
cwtl
pop
in
jo
xchg
xchg
lret
daa
out
mov
sub
pop
xor
jnp
lret
mov
xchg
push
rclb
xor
xchg
push
imul
icebp
adcb
inc
stos
incl
repnz
mov
push
adc
ja
mov
push
cmp
xchg
loopne
push
call
dec
and
fcoms
stos
cmp
movsb
sbb
mov
movsl
xor
dec
daa
cli
mov
jge
sarb
pop
popf
dec
mov
iret
xchg
xor
sbb
push
rol
pop
xchg
push
add
clc
fsubs
inc
frstpm(287
movsl
addr16
or
fmul
das
xor
mov
rcrl
cmp
sbb
inc
jbe
adc
sbb
xor
outsb
pop
out
and
in
mov
mov
std
jg
ds
pop
adc
mov
subb
movsl
repz
push
adc
ljmp
cmp
aaa
mov
fmull
adc
movb
pop
mov
adc
mov
je
sbb
out
or
fldcw
fsubr
lods
cmp
xlat
js
and
outsb
adc
xor
and
or
xlat
popa
nop
inc
lock
mov
xor
fcoms
jge
mov
into
lahf
andl
dec
or
rcll
ffreep
push
cld
mov
and
or
insl
lcall
cli
cmpsl
leave
adc
sarl
or
xchg
fimull
call
lea
insb
xchg
aam
lcall
sbb
dec
adc
adc
sub
sti
and
sbb
dec
test
clc
fxch
aaa
sbb
add
pop
out
out
mov
pop
pop
clc
inc
je
jp
imul
repnz
jge
pop
lods
adcl
popf
mov
int
jo
adc
xchg
je
ret
sub
adc
push
sar
out
jg
xlat
in
xor
scas
loopne
lock
adc
lcall
push
or
test
int3
ja
sbbb
sub
sahf
add
imul
lods
adc
mov
xorl
fldt
or
cli
or
cmc
mov
not
xchg
filds
jg
pop
add
mov
gs
adc
push
cs
pop
out
lock
rcr
adc
push
cmp
scas
hlt
js
mov
or
jbe
in
xchg
aaa
or
xchg
jmp
nop
or
cmp
jg
push
or
pop
pop
lods
or
mov
cli
aad
add
sbb
dec
xor
fdivs
cmp
sbb
cmp
mov
or
ficompl
or
aad
mov
cmpsl
in
outsb
or
rcll
ret
jmp
push
imul
dec
pushf
lahf
out
sub
jmp
lods
pop
hlt
shrl
repz
ret
enter
repz
je
sub
mov
and
jecxz
je
ljmp
xor
jle
mov
push
xlat
inc
pop
dec
movsb
enter
nop
les
in
popa
fmull
scas
mov
je
int3
fs
int
dec
or
call
push
cmp
push
ret
enter
or
xchg
adc
in
push
mov
xor
and
lea
int3
xchg
dec
int3
pop
mov
call
loop
hlt
jb
dec
jnp
rcll
repz
aad
popa
xchg
and
cmpl
popa
out
fmuls
stc
or
dec
adc
mov
push
leave
dec
inc
jle
dec
iret
adc
lea
and
push
inc
or
into
inc
jecxz
into
mov
shll
or
data16
mov
psrad
dec
imul
or
fdivs
sbb
cld
cltd
lcall
scas
inc
mov
or
adc
mov
stos
rcr
stc
lcall
sbb
loopne
fadds
mov
lock
jmp
adc
icebp
add
jb
repz
add
adc
lahf
lret
jp
cmp
cmp
sbb
arpl
sub
inc
imul
push
daa
adc
pop
test
pop
mov
iret
push
xor
mov
stc
push
push
sub
xor
xchg
adc
or
mov
test
jecxz
push
imul
push
adc
sti
xchg
or
mov
test
fnsave
mov
jmp
sbb
lahf
dec
mov
xchg
xor
push
xchg
jbe
push
mov
or
iret
xchg
xor
fsts
adc
in
sbb
jmp
xor
push
push
repnz
mov
out
ror
add
add
mov
ret
mov
stos
fs
dec
cmpsb
int3
call
mov
adc
stos
push
int3
imul
and
fistl
push
fs
repnz
cmpsb
aaa
jg
sbb
jae
inc
in
sbb
push
sub
das
sub
adc
lds
xor
mov
fidivs
shll
cwtl
xchg
dec
scas
sbb
imul
push
test
xchg
fs
push
out
rclb
imul
hlt
movntq
mov
out
jp
sbb
popa
jbe
and
push
fdivl
psraw
std
or
inc
dec
mov
mov
inc
mov
inc
rolb
test
push
sub
push
int3
je
ja
jne
adc
cmpl
enter
xor
sbb
xlat
lahf
repz
shrl
push
mov
in
test
mov
or
jmp
and
iret
mov
lahf
test
adc
int3
or
mov
jbe
and
xor
aaa
or
mov
xor
ljmp
pop
into
mov
push
and
add
xchg
sub
xor
fimuls
into
lret
pop
mov
ss
aad
iret
dec
xchg
js
xchg
push
in
sbb
imul
cmp
clc
mov
sti
mov
and
push
pop
mov
data16
sbb
mov
xchg
outsl
add
push
sbbl
rorl
sub
push
pop
out
hlt
outsl
sub
pop
sbb
jecxz
push
lock
and
int3
jne
pop
and
mov
iret
popf
mov
sbb
out
push
enter
fdivl
lret
stos
mov
xchg
inc
gs
repnz
into
ret
pop
jns
push
mov
mov
popa
xor
push
addr16
add
dec
pop
in
ja
arpl
jne
addr16
pushl
cmp
jo
mov
push
lods
insl
adc
mov
scas
xlat
lods
pop
push
cmovp
jecxz
pminsw
push
mov
dec
repnz
out
sub
push
adc
xchg
or
sbb
dec
clc
addr16
pop
stos
popf
int3
xchg
outsl
add
out
fbld
dec
int
or
mov
pop
gs
add
pop
or
mov
push
push
call
mov
push
bnd
int3
dec
lret
inc
leave
push
rorb
int3
adc
jmp
push
insl
and
and
sub
push
xchg
stos
xor
sub
mov
inc
scas
jp
icebp
cld
out
mov
das
push
andb
xlat
out
xchg
mov
pusha
lahf
adc
popa
imull
imul
out
cmp
sti
insl
push
mov
rolb
or
push
push
call
out
incb
dec
cs
push
push
or
sub
lock
addr16
fwait
gs
cwtl
or
stos
adc
dec
dec
ljmp
stc
sarb
mov
cli
jbe
lret
xchg
dec
aam
xor
pop
mov
push
in
adcb
fwait
mov
xor
ret
lods
cmp
xor
mov
es
loope
pop
cmc
ds
cmc
xlat
pop
sub
scas
lods
sub
ret
enterw
fdivr
fxch
dec
movsl
xchg
xchg
outsb
call
outsl
ds
out
sbb
dec
mov
push
arpl
test
and
pop
add
push
add
or
test
test
pusha
ja
jecxz
ret
lret
xchg
test
in
push
pop
insl
ljmp
stc
or
mov
outsl
pop
enter
push
mov
mov
fsts
ret
rorl
or
push
in
jnp
or
int3
xchg
mov
mov
push
test
les
rorl
push
inc
xor
and
push
dec
imul
test
adc
add
xor
ret
adc
sti
dec
fcoms
dec
shr
inc
repnz
inc
xchg
lds
rol
ss
mov
mov
gs
ja
push
in
mov
daa
xchg
pop
xchg
cs
add
sbb
or
adc
xor
jmp
imul
push
mov
or
cmpsl
pushf
fstl
sbb
aaa
inc
mov
lods
aad
push
adc
mov
ja
xchg
test
push
sub
call
loope
rcrb
adc
sbb
hlt
rorl
rolb
outsl
roll
stos
roll
jbe
push
pop
inc
repnz
push
fisubrl
push
jo
inc
pop
iret
inc
jae
mov
ret
adc
in
pusha
and
or
and
mov
subb
cmpl
or
mov
jbe
add
lock
divb
aaa
lahf
mov
jmp
push
mov
ret
adc
inc
sbb
ret
xor
lock
fs
fs
add
nop
xor
inc
sti
fsubs
fwait
push
and
lods
ret
ljmp
loopne
mov
or
es
push
or
mov
mov
or
sysret
add
icebp
movsl
pop
adc
inc
fsubs
cwtl
cmp
inc
inc
test
fidivl
dec
lock
hlt
jnp
into
mov
inc
push
out
lret
push
insl
adc
imul
inc
fdivs
loope
xchg
insb
popa
push
iret
inc
pop
scas
incb
sbb
add
jecxz
fs
jnp
push
in
mov
xchg
icebp
sbb
jg
sbb
cwtl
lahf
fisubrl
mov
mov
pop
lret
push
jmp
dec
fs
addr16
daa
and
adc
sub
rcrb
push
stos
jmp
or
pminub
xchg
jmp
add
adc
inc
dec
int3
or
test
lds
jnp
inc
dec
dec
push
xchg
sysret
ret
adc
dec
push
negl
cmp
xor
stos
and
aad
aam
xor
std
sub
scas
lods
jno
iret
pushf
flds
int
mov
jo
jge
stos
add
or
fcomps
loopne
or
and
popa
lret
aaa
cs
and
adc
jae
or
hlt
js
sbb
mov
dec
mov
fcompp
stos
cmp
dec
hlt
movsl
fmull
dec
fldt
test
incl
adc
mov
pop
or
jg
movsl
ljmp
xor
mov
xlat
pop
push
xchg
push
fcoms
test
lret
push
mov
pop
icebp
cmpsl
mov
pop
lret
push
dec
out
cltd
pop
nop
aad
in
rclb
pop
shlb
testb
cmp
es
movsl
xlat
adc
sahf
insl
and
xor
adc
gs
cmp
sbb
outsb
enter
insb
mov
inc
mov
jle
cmp
test
sbb
aaa
jnp
push
out
pop
rol
add
sub
shr
out
sub
jecxz
test
xor
inc
sahf
add
or
or
mov
lcall
and
iret
sbb
outsb
sub
filds
inc
pop
mov
out
jb
das
and
sbb
mov
loope
cmp
sahf
push
add
inc
call
and
scas
or
jle
mov
push
or
imulb
dec
mov
push
mov
and
psubd
xor
nop
jmp
or
push
imul
push
cwtl
mov
or
fs
sbb
mov
adc
fcomps
les
and
hlt
iret
mov
fsubrl
or
push
dec
mov
movsl
sbb
ja
lret
mov
test
in
sbb
imul
outsl
stos
movsb
push
mov
xchg
popf
cmc
gs
das
sub
cmp
call
fildl
test
push
jl
enter
or
int
xchg
jno
or
fidivl
dec
sbb
stc
mov
aaa
cmp
or
cwtl
mov
and
push
sub
fisubs
mov
nop
icebp
lock
or
aam
or
gs
packuswb
in
or
and
fmuls
sub
jno
push
sbb
lea
mov
sbb
mov
dec
das
sti
pop
mov
sub
addr16
cmpsb
xlat
es
data16
mov
adc
jo
add
iret
cmc
inc
icebp
stc
shll
test
pop
push
push
jne
and
add
add
push
call
xchg
out
mov
mov
negb
test
sti
test
jo
loop
not
not
dec
push
arpl
outsb
sbb
sub
das
mov
sub
in
cmp
test
test
and
lea
cltd
std
daa
or
enter
ficoml
mov
std
lds
sbb
push
cld
add
iret
outsb
xchg
rorl
push
out
enter
mov
fidivs
push
idivl
iret
aaa
lods
mov
inc
xchg
arpl
fcomps
pmaxsw
sbb
into
rcrl
push
sbb
xchg
popa
aam
ljmp
push
cli
fdivrp
cmp
pop
inc
fcomp
jmp
fstp
es
lret
sbb
je
mov
add
push
inc
mov
or
jge
movsb
cmp
popw
shl
mov
dec
pop
fisubrl
mov
or
jmp
mov
jb
and
mov
addr16
stos
in
retw
rcrb
scas
daa
xor
xchg
mov
fcmovnbe
inc
add
xor
or
xchg
add
sbb
add
shl
add
inc
bnd
iret
ja
pop
xor
and
mov
adc
sub
lods
mov
fildl
int
mov
sub
push
adc
and
stc
insl
xor
daa
and
sbb
insb
andl
xchg
scas
sub
inc
bound
data16
ja
jo
pop
out
jmp
mov
add
or
ss
lods
jmp
fs
clc
lret
loop
sbb
into
dec
dec
lret
jb
sub
rolb
fisubl
addr16
daa
paddsb
mov
cli
lods
inc
testl
fsubp
adc
hlt
dec
xchg
add
test
jmp
mov
inc
lret
cmp
mov
mov
xchg
sub
push
add
jno
or
out
lcall
in
dec
call
popa
or
sbb
gs
push
popa
push
mov
push
push
xlat
inc
adc
rclb
sub
lods
je
or
add
outsb
add
mov
pcmpgtb
das
bound
fistl
xchg
push
jl
jae
or
xor
das
aas
pop
and
fsubr
mov
fs
dec
daa
dec
or
mov
push
testl
inc
cmp
shll
mov
or
adc
sbb
iret
sti
loopne
ljmp
ficoms
mov
sbb
ss
fstl
jge
test
in
into
fstl
stos
jg
or
stos
loop
pop
aam
fsts
lret
and
adc
and
ficomps
cli
mov
add
das
mov
sbb
add
jp
aad
nop
arpl
or
repz
fwait
cmp
out
test
push
cmp
mov
xor
mov
sbb
movsl
outsb
addr16
mov
int3
mov
out
loope
sahf
push
stos
arpl
xlat
jl
outsl
cli
aaa
imul
rorl
out
cmp
lcall
insb
xchg
mov
push
xlat
inc
dec
rcll
fmull
dec
xchg
data16
adc
add
cli
xor
sbb
dec
adc
push
sub
mov
sub
std
mov
adc
mov
sbb
and
shlb
insb
jns
sbb
sub
aad
shll
push
push
mov
es
mov
fdivs
dec
mov
fimull
dec
ja
idivl
jns
pushf
push
das
sub
or
xlat
mov
addr16
icebp
stos
xor
ret
push
inc
gs
movsl
or
addr16
lods
or
cmc
cmpsl
and
in
enter
sub
xor
pop
sub
push
repz
inc
aam
test
xchg
lret
aas
call
ds
or
xchg
in
or
shlb
fs
andb
push
push
das
mov
or
push
pop
shrl
cmp
lcall
bound
mov
mov
pop
jb
cmp
int3
inc
jae
rorl
rorl
hlt
or
jns
and
xor
dec
jo
jns
add
cmp
insb
mov
rcpps
inc
aam
xchg
mov
rorl
lret
add
mov
and
dec
adc
call
or
push
jns
aaa
scas
daa
pop
mov
ds
das
jmp
xchg
add
cmpsb
jae
pushf
xchg
popa
insl
fstpt
out
push
mov
jge
repz
cli
xchg
out
mov
mov
ss
out
dec
xor
out
ja
sub
in
add
xchg
lds
getsec
mov
lea
cli
dec
rcr
cmpb
scas
mov
out
int3
ror
in
adc
fucomi
test
out
mov
push
mov
pop
nop
lret
cmpsb
ficompl
lret
add
aad
sub
cmp
cwtl
or
mov
es
jmp
cwtl
out
mov
hlt
mov
out
das
out
sbb
cmpsl
cmc
ja
outsl
jno
adc
std
mov
aas
orb
psubw
test
mov
rcll
out
mov
into
ljmp
sbb
rcll
int3
test
ds
negb
loope
xchg
lret
mov
jmp
leave
sub
xorl
pusha
xor
test
mov
add
stos
or
je
mov
pop
cwtl
into
das
loop
cmpsl
pop
stos
lods
xor
iret
mov
push
push
in
mov
xor
fidivrs
fucom
push
out
in
loopne
xlat
rorb
aas
rcrl
out
dec
enter
in
xchg
lock
jb
pop
pop
xchg
jns
aam
dec
xchg
xor
xchg
xor
jns
leave
xchg
fdivs
iret
mov
pop
jns
int3
cmpb
popf
xor
adc
lret
push
inc
lret
xchg
inc
adc
ficompl
jmp
inc
xlat
scas
sbb
data16
inc
in
lret
pop
fwait
push
sti
scas
in
popa
cmp
push
push
dec
or
xchg
xlat
cmc
and
call
insb
lcall
rorb
out
fld
adc
mov
cmc
out
dec
test
pop
sbb
jbe
lods
xor
push
and
adc
enter
out
push
xlat
icebp
or
repz
arpl
fldl
jmp
popf
push
pop
icebp
jnp
mov
sbb
mov
mov
jnp
xchg
inc
jmp
enter
xchg
mov
add
xchg
jns
pop
dec
insb
xchg
push
or
daa
repnz
ret
sarb
jb
int3
push
addr16
and
adc
in
xchg
cmpsb
push
mov
iret
inc
cmp
sub
lahf
popa
enter
dec
sub
or
rol
sarb
pop
push
xor
aas
fmuls
jbe
cltd
loopne
sbb
mov
insb
push
mov
and
mov
enter
sti
or
mov
cmpsl
or
in
sub
into
mul
inc
inc
ror
stos
dec
xchg
pop
inc
repnz
push
push
sub
add
sti
sbb
mov
bound
outsb
shrl
ds
pop
jge
mov
out
push
push
and
arpl
dec
aad
mov
dec
mov
fnstenv
xor
jmp
loop
mov
xor
insb
addl
push
lds
lods
outsl
pop
mov
cmp
rcr
icebp
cmpsl
add
mov
outsb
mov
push
insb
fcmovb
aam
mov
pop
shl
or
pop
jg
sti
mov
dec
pushl
mov
jae
sbb
aam
and
lret
aas
int3
sbb
jg
daa
sub
ja
mov
mov
or
push
push
mov
push
add
mov
xchg
out
adc
adc
push
mov
popa
mov
jp
push
or
sbb
add
fisttpll
push
xor
cmpsl
sub
sbb
out
cmp
insl
call
push
insl
mov
xor
push
data16
cmc
cmpsb
push
scas
sub
cmpsl
sbb
pop
pop
jle
xor
jno
mov
inc
int3
jns
dec
fs
xchg
icebp
mov
adc
rcll
or
xchg
repnz
push
sbb
pop
mov
mov
test
in
or
aas
fdivs
dec
insl
fimuls
nop
leave
push
inc
adc
adc
in
lahf
pop
and
mov
xlat
xchg
mov
fs
jp
rclb
inc
lds
cmp
orl
jl
push
decl
jnp
outsb
ljmp
jae
mov
mov
xchg
inc
push
dec
add
jge
cmp
adc
dec
mov
fcomps
sub
xor
icebp
aas
push
xor
test
lahf
lods
cli
mov
push
lock
xor
and
negb
loopne
and
outsl
adc
sbb
sub
imul
vshufps
pop
dec
jecxz
jo
inc
aam
lcall
add
adc
dec
mov
roll
pop
scas
mov
or
sbb
dec
imul
push
mov
jo
push
cltd
add
push
xor
xchg
pop
sbb
incb
pop
mov
push
repnz
mov
fmulp
dec
jge
aas
or
sysenter
or
aam
clc
fdivl
push
popf
xor
call
fldenv
pop
insb
clc
adc
out
adc
and
mov
insb
sbb
stc
int
and
dec
mov
fdiv
sbb
repnz
mov
test
fs
mov
mulb
sahf
dec
and
insb
movntq
rorw
call
mov
fldt
xor
xchg
xor
pushf
lret
es
push
xor
insl
test
clc
mov
std
pop
or
fs
dec
push
add
cmp
mov
mov
xchg
jne
xchg
call
sbb
test
popf
jb
fsubs
jns
jge
cltd
insb
call
es
clc
es
repz
fidivrs
fucomp
jg
jg
jecxz
jo
outsl
fadds
mov
mov
dec
and
insl
xor
xchg
inc
xor
divb
outsb
xchg
adc
push
mov
fisubs
pop
dec
mov
leave
enter
add
push
pop
adc
and
pop
dec
mov
adc
jae
in
adc
sbb
or
mov
adc
or
xor
popf
fcom
jle
call
or
shrl
and
jno
scas
outsl
fisttpl
mov
inc
arpl
dec
test
aam
in
fwait
sbb
cmpsl
xchg
mov
sarl
sbb
mov
jne
or
imul
rolb
mov
popf
or
stc
negb
aas
xor
add
xchg
cmp
sbb
or
sub
or
sub
push
enter
mov
and
mov
pop
adc
faddl
ljmp
out
fsub
dec
mov
add
shl
fs
push
adc
and
mov
sbb
das
pop
popf
mov
outsb
movsb
mov
inc
test
sbb
inc
xchg
lock
jb
and
mov
out
xlat
test
push
sbb
mov
add
orl
jo
pop
xchg
out
xchg
aam
sti
loope
lahf
sub
push
lods
je
dec
aas
jbe
jo
imul
enter
filds
or
lahf
arpl
pmovmskb
in
enter
pop
js
cmp
and
cmpsl
push
ficoms
mov
adc
dec
insb
add
jae
iret
lods
xchg
and
sarb
in
mov
cmp
shlb
pop
dec
or
sub
addr16
imul
icebp
mov
mov
out
cld
ss
add
xlat
ljmp
insb
and
js
adc
mov
in
mov
cld
mov
aad
push
push
xlat
idivl
push
sahf
or
or
das
iret
call
fimuls
fs
fadds
insb
inc
cltd
bound
pop
pop
cmp
out
enter
insb
mov
mov
lea
roll
xchg
sub
inc
ja
fstpt
or
push
cmp
jle
and
dec
push
lds
xchg
jp
icebp
lahf
out
pop
push
fisubs
fs
imul
ja
test
sub
xchg
ret
sahf
sub
rcll
inc
sub
lods
imul
call
imul
mov
mov
arpl
daa
push
mov
xchg
sbb
cmpsl
orl
pop
mov
push
dec
mov
fsub
and
push
and
sti
adc
ljmp
outsl
call
in
pusha
scas
aas
sarl
lahf
inc
daa
adc
movsb
aam
bound
filds
scas
mov
adc
dec
repz
mov
fsub
push
inc
gs
dec
decb
rcr
popa
xchg
aas
aam
aas
rcr
lods
xchg
scas
inc
add
enter
mov
mov
cmp
pandn
mov
enter
movsl
cmp
adc
mov
nopl
repnz
xor
arpl
xchg
setbe
shrl
inc
or
dec
push
cmpsb
call
jnp
cmp
add
cltd
jns
mov
pop
iret
xchg
push
lods
insb
pop
rcrb
lods
dec
addr16
xor
inc
add
lds
jecxz
fisttpl
adc
enter
pop
rcl
xchg
enter
insb
pop
aad
mov
scas
ret
mov
adcl
rclb
adc
mov
pop
popa
or
lock
xor
sub
adc
mov
push
bnd
cvtps2pd
dec
out
xor
inc
or
mov
or
leave
test
adc
aad
pop
enter
mov
inc
or
dec
jbe
repnz
mov
sub
push
mov
test
adc
or
ds
movsb
jecxz
mov
decl
imulb
mov
xor
fsubs
xor
and
add
dec
jge
test
outsb
dec
xor
inc
sbb
xor
int3
cmp
fcoml
cmp
shr
inc
fcmovb
int3
inc
inc
rclb
je
test
mull
jne
in
push
insl
test
icebp
sub
cwtl
push
or
mov
push
rolb
ljmp
loope
or
repz
in
dec
dec
xlat
push
push
lret
push
mov
pop
outsl
xchg
xchg
mov
push
sbb
dec
push
adc
adc
cs
das
mov
sub
xchg
dec
aaa
int3
jo
stc
dec
popa
fcoms
or
sti
xchg
notb
mov
test
fcmovnu
mov
mov
in
rorl
inc
ja
out
jle
mov
pop
xchg
sub
push
int3
lods
ja
pop
mov
in
pop
mov
push
leave
jb
jp
es
es
fiadds
pusha
lcall
arpl
jb
rclb
jecxz
dec
mov
pop
out
in
cmp
xor
pop
adc
fs
ficoms
mov
in
push
clc
es
push
jmp
or
adc
adc
dec
clc
pop
test
out
pop
mov
pop
je
dec
adc
sub
dec
push
std
push
repnz
push
push
lret
sub
dec
jge
pcmpgtd
xor
mov
mov
or
aad
popa
jnp
lret
sbb
bound
outsl
mov
push
xchg
insb
pop
jae
popa
aam
test
push
adc
mov
or
into
out
or
into
cmp
data16
or
out
xor
cmpsb
pop
pop
je
xor
and
inc
bound
and
into
inc
dec
or
fisttpll
mov
inc
cmp
arpl
jns
or
in
cmp
push
clc
inc
int
jbe
out
cmp
sbb
jmp
testb
jnp
push
xchg
int
push
insl
bound
in
sub
jp
je
mov
insb
mov
out
mov
sarl
fcomi
fnstcw
mov
iret
loop
jecxz
rorb
dec
nop
cmpl
fistpl
inc
loopne
mov
mov
push
dec
cmp
call
mov
into
mov
mov
mov
js
add
mov
and
sub
xchg
adc
mov
dec
mov
lock
dec
jb
pop
xlat
enter
mov
fistl
int
sub
das
pop
xchg
pop
aam
in
mov
lret
inc
imul
inc
and
add
and
cmpsb
in
fisubl
repnz
icebp
pop
int
addl
fs
call
jle
or
mov
cld
scas
xor
push
bnd
mov
jno
xchg
jecxz
daa
cld
dec
xchg
pop
shlb
or
aas
mov
daa
enter
xchg
in
fimull
insb
mov
push
call
mov
mov
das
pop
hlt
das
loopne
int
hlt
push
xchg
fs
fimull
inc
fdivrs
leave
or
dec
fidivs
mov
fs
insb
stos
rcl
scas
or
popa
sub
adc
jg
adc
shll
les
aad
xchg
mov
gs
cmp
incl
pop
stos
or
arpl
jge
dec
mull
out
and
ljmp
push
mov
jecxz
pop
aam
mov
mov
outsb
and
mov
movsl
rorb
adc
in
leave
sbb
popa
lret
out
into
popf
lods
sti
sub
in
aam
clc
xchg
xchg
stos
ss
dec
push
mov
loope
insb
int
js
sub
xchg
adc
inc
das
fiadds
push
int
in
roll
std
cmp
jge
xchg
mov
jae
or
pop
sub
cmp
and
push
stos
or
dec
lods
pop
shl
pop
pop
xchg
inc
enter
push
cmpsb
xchg
lcall
mov
clc
add
xchg
mov
and
push
aas
out
mov
into
fs
out
pop
fdivr
outsl
std
roll
sbb
addr16
lret
mov
sar
rorl
int3
bound
mov
js
mov
rorl
jmp
mov
stos
mov
popa
add
push
push
mov
out
data16
sub
adc
fldenv
add
inc
sub
mov
mov
push
ljmp
lret
sub
aas
adc
inc
test
mov
push
inc
daa
and
or
notb
enter
in
push
sub
leave
dec
imulb
push
data16
sbb
in
js
test
int
int
sbb
subb
das
fs
insb
mov
fincstp
mov
or
andl
outsb
push
and
xchg
xor
jno
mov
xorb
push
inc
lcall
inc
and
xchg
push
repz
mov
xor
je
and
push
iret
push
jo
or
cmp
jne
mov
or
push
push
ss
int
sbb
xchg
xchg
loope
aaa
punpckhdq
jnp
add
fs
data16
es
into
jg
fildl
or
aam
dec
in
xchg
shll
sub
xchg
int3
sbb
adc
push
lret
inc
mov
dec
dec
test
sbb
scas
dec
lret
sbb
inc
insl
enter
mov
out
shlb
cmpsb
sub
dec
adc
mov
push
or
daa
data16
mov
call
mov
data16
jne
mov
xor
stos
xor
dec
push
sub
lock
rcrl
xchg
push
ljmp
inc
rolb
and
lock
jae
xor
sub
js
and
pop
fldcw
lcall
das
pusha
jge
sti
sub
inc
or
dec
lods
fwait
movsb
cs
mov
test
fcomi
aam
arpl
mov
pop
popa
fadd
xchg
mov
inc
and
scas
fdiv
lahf
mov
push
pop
lcall
sub
int3
or
dec
sbb
lret
sahf
jno
fwait
mov
cmc
aam
add
dec
lods
stc
out
testb
or
jg
adc
loope
rol
loope
lea
das
in
fld
mov
fcoml
inc
and
movsb
dec
adc
pop
test
mov
popf
xchg
jno
std
movsl
leave
fsubr
pop
lret
xchg
xor
mov
mov
out
out
and
jnp
mov
and
xchg
rcl
or
aam
jp
add
sub
push
mov
sbb
mov
jb
fdivr
imul
and
dec
push
lcall
popa
push
aad
in
xlat
adc
xor
pop
dec
and
popa
rorb
push
push
or
int3
fmul
push
add
sub
inc
clc
adc
lcall
enter
aad
pusha
int3
fwait
vpshlw
popa
orl
xchg
out
ja
jle
push
mov
adc
xor
subb
xchg
pop
or
js
gs
lcall
int3
fs
out
ret
orl
jno
sbb
jbe
sub
sub
iret
loope
xchg
jg
xchg
pop
sub
cwtl
fs
push
xor
mov
inc
or
or
push
push
aad
cmpps
dec
movsb
roll
mov
icebp
inc
and
hlt
push
add
add
jmp
xchg
aaa
push
and
cmpsl
cli
in
fnstcw
dec
push
or
shrl
out
xchg
or
gs
sub
xchg
sbb
mov
add
push
in
inc
fistl
fdivrl
decl
jo
sub
mov
shr
jo
or
mov
push
cltd
dec
or
popa
mov
cmp
mov
mov
mov
jae
ret
in
and
xlat
fabs
call
je
in
jb
mov
in
jo
sarl
mov
popa
push
dec
insb
call
mov
int3
sbb
arpl
stos
aad
js
push
bswap
aam
push
enter
jae
aas
add
adc
ficompl
xchg
fsubl
pop
fisttpll
psraw
mov
push
add
sub
cmp
lcall
addr16
dec
cmp
cmp
mov
xchg
test
adc
or
mov
notl
jae
xor
cli
jb
push
lods
or
pop
enter
push
loopne
outsb
sbb
negb
std
lea
or
xor
test
testl
pushf
lret
icebp
subl
outsb
pop
out
inc
adc
fcomp
lcall
fucomi
fadds
cmp
push
adc
rcr
ror
sahf
movsl
popf
sub
mov
in
cmc
lcall
adc
popf
jp
mov
aam
jo
mov
movsl
sahf
mov
leave
outsl
mov
lods
add
imul
jg
push
test
psubusw
dec
std
or
insb
test
fcmovnb
sarl
adc
enter
mov
loopne
das
ds
dec
insb
fisttps
and
stos
mov
and
lahf
in
mov
lcall
or
aas
jbe
jnp
rol
sbb
lret
popa
rcrl
ret
or
push
fs
add
ljmp
sbb
enter
hlt
adc
mov
xchg
sbbb
call
aam
mul
aam
mov
icebp
mov
xlat
cs
cmp
inc
insl
icebp
outsb
xor
shlb
aam
les
insb
into
push
xor
push
mov
lret
push
out
jecxz
scas
jmp
popa
jae
ja
imul
movsl
mov
rcrl
mov
ja
mov
mov
sbb
cmp
mov
leave
adc
sub
push
addr16
adc
aam
cmp
push
push
sbb
fdivrs
inc
mov
lods
into
leave
imul
cmc
outsb
daa
pusha
cmc
pop
jl
test
mov
arpl
or
imul
out
rolb
fs
dec
icebp
scas
cmp
xor
daa
add
cmp
into
fistl
test
cli
out
pop
sub
push
xchg
or
pop
mov
xchg
xor
sti
cmp
aas
xor
roll
mov
add
sti
pop
sub
jae
aam
mov
stc
xchg
xor
cmp
jb
dec
lcall
stc
jnp
aas
out
mov
add
movsl
rcl
loopne
popf
mov
pop
clc
xchg
inc
stc
inc
xor
pop
mov
fwait
movsb
popa
mov
jnp
cmc
loopne
cmp
out
jl
push
cmpsb
or
push
xchg
fidivrs
ficoml
loopne
add
mov
push
mulps
jp
cli
leave
or
or
push
ljmp
call
ret
popfw
mov
cmpsb
call
cmp
pop
popa
add
mov
inc
ret
imul
aas
mov
ss
movb
pop
mov
out
dec
lods
or
push
adc
ret
fidivrl
cs
enter
jbe
adc
xor
xorl
icebp
mov
out
scas
sbb
push
jbe
sbb
cld
xor
out
add
add
fidivrs
cld
out
icebp
je
lcall
rcr
adc
cmp
mov
cs
outsb
fbstp
push
mov
jo
inc
or
stos
xchg
idivl
adc
fisttps
push
stos
inc
insl
jb
fsubrs
lcall
push
insb
insb
popw
loope,pt
xchg
scas
mov
movsl
stos
in
fadds
mov
ja
jge
stos
nop
inc
insb
and
out
pop
mov
jb
ss
xor
cmc
push
push
mov
push
std
andl
mov
ss
lods
lcall
and
int
hlt
add
add
sbb
nop
iret
mov
imul
sahf
shlb
push
pop
mov
adc
out
xchg
mov
sbb
sub
fadd
testb
daa
sub
cltd
xchg
adc
push
in
fs
xor
outsl
test
adc
insl
jle
jns
inc
daa
cmpsb
int
cmp
lods
mov
xchg
aas
out
mov
adc
sub
jb
mov
add
test
inc
push
pop
mov
and
into
test
loope,pt
jnp
inc
je
cs
sti
jae
inc
sub
shll
enter
sbb
mov
push
lods
sbb
mov
push
inc
daa
push
mov
sahf
in
mov
ds
or
mov
jmp
sbb
out
fsubrl
into
mov
push
dec
or
mov
xchg
xchg
adc
dec
push
call
mov
or
out
xchg
jmp
into
sbb
adc
mov
pop
sub
jge
dec
xor
cmpsb
lods
jbe
insl
loopne
into
jbe
mov
jno
xchg
stos
mov
out
add
push
push
jg
je
xlat
add
or
lret
icebp
cmc
sbb
aam
fisubs
loop
adc
aaa
jg
gs
cmp
inc
lcall
dec
pop
cmp
inc
dec
outsb
adc
sbb
and
xchg
mov
in
daa
jns
xchg
jns
mov
scas
js
fistpl
cmp
ds
sti
pop
rol
rcrl
insb
dec
inc
push
mov
sub
enter
outsb
andl
pop
lods
cmp
mov
xor
push
into
adc
movl
mov
in
push
lods
inc
lea
jl
sub
in
test
and
in
xlat
mov
inc
cmpsl
gs
mov
out
leave
mov
aad
sbb
xor
pop
repnz
xorb
jo
add
dec
shll
push
cmc
sub
test
pop
subl
jne
int
jb
icebp
dec
or
lock
insb
loop
xchg
cmp
jb
into
dec
int
push
and
aad
xchg
mov
or
lahf
repz
and
fs
dec
shl
test
roll
inc
es
rcr
hlt
loop
into
cmc
pop
cmp
scas
mov
dec
sbb
xchg
imul
addr16
sub
mov
data16
or
dec
stos
xor
roll
and
das
mov
mov
fdivl
jb
cmp
fdivrl
jnp
sbb
pop
cmp
jmp
hlt
push
xor
push
or
mov
outsl
fisubl
iret
push
adc
dec
sbb
mov
xchg
movsb
jl
rcrb
or
cmpl
in
repnz
shll
push
dec
push
and
pop
xor
out
adc
sub
inc
lds
notb
stos
dec
sbb
loop
imul
das
mov
inc
int
dec
sub
xor
lods
inc
shl
int
sarb
bnd
hlt
or
dec
jno
inc
out
mov
ja
clc
stos
sub
push
fstpt
mov
mov
mov
mov
push
jmp
call
cmpsb
mov
in
cmp
daa
inc
and
test
imul
femms
sub
push
into
xchg
lahf
iret
ss
add
jno
mov
in
aam
or
into
lahf
xor
insb
push
scas
adc
cmpsl
shr
sbb
mov
inc
imul
rcrl
inc
push
lods
jmp
in
and
xor
out
dec
int
mov
sbb
mov
sbb
adc
in
in
dec
test
adc
das
orb
add
jmp
in
fwait
outsl
cmpsb
je
paddusb
cmpsb
xor
mov
es
xchg
int
xor
out
sbb
pop
push
or
js
push
mov
push
mov
sbb
lcall
nop
mov
pop
test
hlt
cltd
dec
dec
mov
dec
mov
mov
sbb
cmpl
fmull
xchg
insl
aad
ds
mov
or
fistpl
stos
sbb
enter
std
fwait
sub
xchg
or
xchg
movsl
sub
mov
cmc
nop
or
lret
sbb
adc
test
into
adc
lods
nop
xchg
in
popa
shl
mov
lock
inc
cmp
insl
sub
lret
leave
or
push
xor
call
cld
push
out
push
jl
scas
stc
testb
enter
jge
or
adc
push
mov
or
xchg
sti
gs
and
imul
sahf
cmp
enter
adc
testl
pop
fucomi
adc
mov
or
cltd
sarl
dec
stos
cld
mov
leave
in
outsb
xchg
inc
xchg
jge
iret
hlt
loope
enterw
push
push
addr16
xchg
repz
insb
test
dec
or
decb
aad
xchg
inc
out
and
xchg
xlat
fdivr
aam
insb
ds
lcall
ljmp
sbb
punpcklbw
lock
jnp
setbe
outsl
push
fcompp
xor
mov
in
fsubr
inc
out
xchg
insl
gs
lar
call
cmpsb
fs
mov
in
pushf
mov
ds
dec
in
add
sub
sbb
jnp
and
dec
fsubrs
or
imul
mov
jmp
xchg
mov
or
icebp
iret
mov
ja
fmulp
aas
repz
pop
xchg
mov
test
in
or
loop
pop
mov
adcb
movsw
jcxz
mov
ficoms
nop
ret
into
or
mov
mov
xchg
or
add
mov
stc
imul
lret
push
rcrl
repnz
jne
adc
or
fdivl
nop
push
push
das
stc
jno
xchg
cltd
pusha
fadds
out
xor
sbb
and
mov
cmp
int
or
jno
lcall
daa
sub
adc
push
imul
pop
push
into
fwait
lcall
push
fcompl
mov
mov
outsb
push
pavgw
test
mov
divl
mov
or
in
inc
fcompl
outsb
fcmovbe
in
addr16
ljmp
hlt
xor
loope
idivl
enter
outsb
adc
mov
xor
mov
fldenv
xchg
or
clc
jno
test
lret
push
sbb
lock
push
loop
sub
push
shll
xor
push
cmpsb
lock
push
dec
fs
popa
cwtl
int
jns
sbb
and
dec
and
xor
xchg
int
int
xchg
mov
pop
or
sarl
dec
lret
mov
out
xchg
xchg
call
ja
xlat
icebp
pop
or
cmp
loopne
in
lds
ret
aam
js
add
adc
sub
mov
dec
dec
fs
outsl
lods
js
lods
ror
inc
mov
sbb
pop
mov
out
jbe
stos
ja
addl
push
sub
mov
push
call
mov
cmp
in
jbe
mov
mov
push
gs
orl
clc
imul
sbb
mov
xchg
clc
push
inc
in
inc
adc
cmp
and
mov
mov
push
mov
nop
icebp
inc
or
lahf
scas
mov
xchg
and
mov
cmpl
daa
inc
lcall
xorl
in
test
cmp
xor
push
fmul
lcall
push
cltd
adc
pop
sbb
ja
lret
cmp
negb
aas
outsl
push
pop
into
jmp
cmp
and
sbb
mov
adc
test
xor
add
push
pop
in
xor
mulb
enter
cmp
xchg
lcall
lock
and
test
faddl
push
mov
lea
fsubl
sarl
sbb
movsb
leave
outsb
and
dec
ss
leave
in
adc
mov
sbb
fidivrl
inc
insl
lret
gs
pop
or
shrb
lods
je
inc
sbb
aad
pop
mov
pop
movsb
cmp
outsb
xchg
push
jl
cmpsl
cli
add
mov
pop
mov
out
imul
popa
push
push
sub
xchg
cmp
pop
cmp
sub
out
or
pop
fs
inc
repnz
sub
xchg
call
and
or
out
int
xchg
clc
mov
into
push
mov
out
and
fsubrs
mov
adc
mov
dec
stos
mov
jno
adc
jne
mov
stos
shlb
xchg
mov
popf
imulb
adc
push
addr16
push
push
cld
daa
stos
in
icebp
xor
cmpsl
mov
push
mov
dec
dec
sub
mov
xlat
cmpsb
mov
jp
into
push
push
fdivrs
insl
or
sbb
xchg
arpl
xchg
sub
cltd
mov
mov
mov
pop
outsl
or
aaa
shrb
push
repz
cmp
pop
jnp
push
popa
movl
ret
fistpll
add
jmp
fsubl
cld
cmp
xchg
xchg
xor
mov
jbe
lock
or
aas
inc
sub
push
sub
sub
ja
int
and
sti
add
sbb
or
sbb
or
icebp
out
add
sbb
mov
push
pushf
adc
test
fcomps
jno
mov
xor
mov
aad
mov
lahf
aam
inc
or
lods
aaa
int3
sub
ret
inc
je
push
cmp
mov
inc
jo
or
imul
rclb
aas
xor
dec
mov
sbbl
xchg
mov
out
rcll
sbb
loope
cwtl
add
ds
jmp
lahf
or
inc
xchg
std
sub
out
xchg
or
add
popf
adc
xor
adc
in
into
dec
clc
popf
or
jbe
cld
jo
fildl
pop
mov
stos
fisttps
es
push
or
push
lret
int
fdivp
xchg
dec
test
sub
jl
adc
sarl
xchg
cmp
sbb
fisttpll
adc
test
inc
pop
int
je
mov
jne
mov
call
add
jns
clc
dec
xchg
int
push
fnsave
push
dec
mov
pop
int3
jo
jg
je
add
in
and
stc
jnp
fmull
test
adc
mov
lods
shrl
data16
lea
inc
push
lcall
fcoml
cmp
xor
mov
sub
xchg
mov
cltd
iret
dec
cltd
add
pop
xchg
xor
test
les
or
popa
push
mov
jmp
gs
mov
in
or
mov
xchg
cmp
js
xchg
xchg
xor
or
push
jl
cmp
int
notl
and
sub
pop
push
push
imul
ljmp
xacquire
and
adc
nop
cmp
pop
xchg
insb
rclb
xor
sbb
jbe
clc
ficoml
sbb
imul
adc
lahf
pop
insb
pop
xchg
pop
dec
shlb
xor
call
mov
insb
aaa
dec
add
or
dec
cmpl
xor
sar
mov
int3
inc
fildll
push
sbb
jns
cmp
mov
pop
lea
insl
lret
inc
fs
lea
ficompl
dec
cmp
sbb
push
dec
adc
sub
rcll
imul
pop
lock
mov
sub
call
and
into
pusha
adc
push
sub
xlat
pushl
inc
cmp
loope
js
push
dec
mov
mov
jo
out
cmpsl
ss
mov
xchg
dec
dec
nop
lods
and
cmp
jns
out
push
aaa
lock
pushf
scas
das
mov
xlat
lret
add
pop
jecxz,pt
xchg
dec
adc
push
aaa
push
lcall
stc
or
add
fildl
cld
leave
cmp
xlat
test
ds
sbb
rorb
aam
pop
in
mov
insb
sbb
stos
fs
adc
push
or
mov
push
popf
stos
hlt
push
mov
sub
or
pop
ret
rorl
xor
dec
pop
nop
imul
inc
insl
movsb
das
or
addr16
or
mov
hlt
mov
jmp
jno
rcrb
mov
jecxz
or
inc
loopne
or
test
clc
rcl
dec
ljmp
fcomps
jbe
data16
in
pop
mov
dec
dec
mov
sarb
movsb
imul
push
adc
stos
ljmp
test
jae
dec
outsl
je
push
out
in
lock
and
std
stos
ljmp
stc
in
ss
lock
cmp
cmp
out
mov
mov
cmp
xchg
out
sbb
mov
push
sub
mov
mov
jnp
adc
sbb
bound
addr16
aad
mov
mov
lea
adc
outsl
and
lock
mov
sbb
insl
scas
adc
test
lahf
jmp
mov
pop
mov
cld
mov
fists
pop
add
inc
out
test
sbb
out
push
adc
arpl
shlb
lcall
aam
sbb
sub
jge
pop
divb
sub
cmp
cmp
mov
jbe
cmp
out
call
xor
mov
mov
aad
jbe
in
push
jno
push
push
lods
jne
gs
adc
imul
inc
outsb
push
ss
addr16
dec
aad
dec
call
push
push
mov
addr16
outsl
cmc
fmull
mov
imul
jmp
cmp
or
ja
xchg
and
loop
rolb
out
xchg
lret
adc
lods
mov
add
cmp
sub
arpl
int3
in
mov
rcll
insb
mov
cmovb
outsb
and
int3
sahf
pop
cld
call
ja
adc
clc
pushf
minps
iret
popf
or
lahf
not
int3
loopne
insb
xchg
mov
mov
in
lret
xlat
and
imulb
xchg
mov
jbe
adc
lods
es
pop
lea
sbb
lea
cmpsb
in
inc
iret
int3
out
jmp
push
call
mov
out
cmp
ss
xor
mov
out
sbb
insb
xor
xchg
jmp
mov
nop
xchg
icebp
add
scas
adc
subl
outsb
fwait
xor
mov
jecxz
hlt
push
ss
mov
xor
out
push
jecxz
in
test
inc
pop
mov
loope
aas
lcall
loop,pt
or
add
push
sbbl
fldenv
insl
cmp
repz
cltd
in
adc
je
lahf
rclb
ljmp
cltd
lock
xchg
dec
scas
mov
test
roll
test
fnstsw
or
mov
aam
rcl
insb
rcl
sbb
insb
cmp
pop
xor
stos
xlat
stos
add
or
push
bound
aas
sbb
lock
and
mov
call
xchg
xorb
adc
jmp
daa
call
fistl
hlt
movsl
jns
enter
loope
push
pop
cmp
mov
lahf
add
pop
mov
mov
dec
aam
stos
fs
xchg
cmc
stos
shlb
sub
push
imul
push
or
jno
jp
shl
pop
test
test
lea
daa
adc
call
or
pushf
lret
mov
push
xor
mov
mov
dec
in
mov
pop
loope
insb
sub
fcmovb
fstps
adc
aaa
decl
aam
js
std
pop
xor
or
sbb
inc
mov
ljmp
inc
imul
arpl
push
add
shll
lods
fxch
and
lea
aas
fists
xchg
mov
test
xor
fisubrl
fs
push
stos
cmp
insl
mov
imul
push
pop
test
ret
inc
int3
push
repnz
mov
fistpl
sub
dec
nop
mov
arpl
enter
gs
in
data16
ja
in
addr16
or
leave
adc
je
out
inc
xlat
xchg
mov
push
xor
andl
push
mov
push
test
fidivrl
outsl
popf
rol
add
out
xlat
shr
in
fwait
sarb
or
call
mov
imul
sbb
stos
xor
repnz
mov
cmp
ds
dec
cmp
aam
adc
add
mov
cmp
xchg
adc
adc
mov
jae
fistl
outsb
ds
mov
data16
fadds
push
out
in
xor
addr16
rorb
pop
push
fisttpl
stos
sub
int
in
add
jo
mov
movsl
lods
aam
push
sbb
call
loopne
movsb
jns
cmp
mov
xor
fs
addr16
lods
push
xlat
stos
sahf
roll
mov
lock
dec
adc
push
push
in
sub
and
dec
insb
adc
data16
pop
sbb
fnstcw
push
adc
test
xorb
out
cwtl
dec
mov
mov
sahf
mov
sub
popf
jmp
adc
out
fcoms
mov
mov
push
icebp
or
xor
fs
xlat
daa
xlat
xlat
scas
cmc
fwait
and
fcompl
adc
mov
ss
push
xor
jbe
adc
test
mov
fdivr
loopne
je
mov
dec
dec
stos
mov
or
out
test
dec
subl
aas
pop
jmp
sbb
and
nop
icebp
scas
int3
addl
in
or
in
mov
push
mov
sahf
movsl
pop
sbb
pusha
out
xlat
inc
push
cmpsl
shll
dec
xchg
adc
daa
ljmp
lods
cli
lret
mov
dec
mov
mov
jne
pop
fmull
push
sub
dec
adc
cmpl
jnp
pop
cwtl
mov
movsl
repnz
insb
aas
or
into
in
test
xchg
push
sub
push
fbstp
lea
dec
sbb
sub
fidivl
outsb
adc
js
mov
in
or
sbb
jbe
push
cmp
dec
insl
dec
jecxz
aam
mov
shll
fs
add
sub
push
xchg
fs
mov
popa
sub
test
adc
shl
cmpsl
or
pop
movsl
adc
mov
int3
fcompl
dec
push
mov
sbb
out
sub
jno
test
jns
or
dec
inc
mov
fsubl
cltd
add
jecxz
arpl
fsubl
jb
or
loopne
add
push
mov
movsl
mulps
mov
cli
xchg
rol
xchg
adc
adc
mov
xchg
cmpsl
pop
or
jnp
push
push
push
outsl
fmulp
jp
dec
dec
xchg
jns
lret
aas
inc
out
roll
push
and
ret
jno
fcoms
int3
imul
in
movsl
test
mov
mov
clc
jne
xchg
mov
xorl
call
jb
mov
xchg
sub
mov
loope
dec
repnz
fcomi
cmovb
push
ret
pop
test
pushf
add
dec
push
sbb
fldenv
or
mov
sbb
cwtl
popf
inc
mov
fstps
mov
sbb
add
xor
xlat
ret
movsl
outsb
xchg
fidivl
mov
cmp
xor
cmp
push
adc
out
mov
push
inc
roll
mov
dec
rcrl
das
cmp
inc
xor
mulb
sbb
push
sti
outsb
mov
int3
repnz
mov
pop
add
push
jmp
add
jb
out
mov
repnz
jne
xor
test
lahf
bound
hlt
int
pop
sub
jne
sub
add
mov
fs
pop
mov
cmpsl
or
xchg
sub
lret
stc
shl
push
in
stos
outsl
arpl
lds
mov
add
or
fs
pusha
shlb
add
lret
hlt
loope
sub
sbb
jge
test
fisttps
push
inc
adc
dec
stos
rcl
mov
add
daa
movsl
data16
stc
ret
fwait
std
cli
movsb
sahf
dec
popl
dec
xor
or
int
dec
lea
sub
mov
enter
roll
dec
pop
mov
adc
xchg
add
pushf
loopne
push
push
add
scas
loop
or
dec
ret
mov
push
stos
mov
pop
rcrl
sub
dec
pop
in
push
orl
push
cmp
movsl
loop
clc
sbb
call
pop
cs
imul
mov
xor
outsb
cmpb
and
out
pop
mov
xchg
movsl
fistpll
add
jg
jnp
jbe,pn
add
inc
popf
aad
mov
lea
add
cmpsl
mov
sarb
add
pop
xor
inc
jmp
lret
lret
cmp
mov
test
mov
sahf
scas
ret
movl
mov
sti
stos
imul
ficoml
outsl
jb
xor
sub
movb
xchg
pop
shll
cli
and
jp
scas
add
in
dec
jg
cmpsl
stos
cmp
sbb
loop
pop
ret
pop
out
lods
mov
sahf
inc
stos
jp
inc
lret
scas
push
cmp
pushf
in
xchg
test
jbe
scas
ret
xchg
in
outsb
pusha
sti
add
and
int3
ret
add
rorb
nop
add
and
xchg
add
dec
ret
loope
add
repnz
add
lods
add
jle
cmpsb
or
in
push
sbb
js
add
mov
int3
xchg
adc
lods
xor
mull
sbb
jmp
ret
mov
enter
sub
cwtl
xlat
pop
xor
ret
push
out
add
push
sarb
add
in
pop
pop
test
inc
pop
cld
dec
dec
adc
mov
jp
enter
cmp
add
test
mov
fisttpll
cmp
add
test
cli
jo
enter
data16
inc
pop
mov
xor
repz
or
fmuls
pop
add
mov
mov
stos
add
pusha
xchg
add
adc
aam
cwtl
inc
dec
stos
lahf
and
mov
add
cmpsb
sti
test
jle
into
add
mov
pop
incb
or
aaa
mov
inc
cld
xor
push
fwait
and
push
pop
cmp
mov
fwait
mov
push
cwtl
ret
lahf
in
lods
pusha
ljmp
adc
test
push
jns
sbb
dec
into
nop
add
sarb
sbb
mov
xor
out
idivl
adc
add
dec
push
dec
mov
in
adc
cmpsl
cmpsb
int
test
inc
sbb
mov
mov
mov
aam
shrl
lea
aas
add
pushf
push
xor
outsl
push
mov
add
shr
push
cmpsb
dec
mov
xor
push
and
imul
data16
cmp
test
inc
mov
jmp
mov
ret
add
dec
push
sub
lret
nop
add
loopne
ja
or
dec
dec
cmp
call
xchg
xchg
jns
outsb
add
xlat
std
mov
subl
cmpsb
pop
aad
push
lods
mov
bound
dec
loopne
add
lret
inc
xlat
negl
lock
imul
add
into
and
cmp
add
mov
lods
imul
pop
cmp
ljmp
clc
xor
add
jmp
ret
xor
add
lret
or
xchg
mov
pop
pop
xorl
testl
or
ret
fdivrs
cmp
in
dec
xor
adc
jl
add
inc
push
aas
call
xor
or
lock
lret
jge
adc
lds
outsl
rcrl
mov
fwait
sbb
hlt
cli
add
in
fs
scas
aam
pushf
sub
mov
jmp
jns
inc
cwtl
jecxz
push
repnz
mov
jge
sub
xchg
into
clc
out
int3
add
pop
dec
lahf
cmc
add
add
cmp
out
repnz
ret
inc
push
fsubp
ss
pop
lea
fstpl
stc
adc
jb
std
das
je
cmpsl
inc
mov
pop
push
sub
cli
repz
insb
hlt
icebp
fs
test
clc
add
shlb
data16
mov
add
pop
aad
daa
jo
addr16
loop
add
xchg
cmp
cmp
or
fistl
inc
jne
imul
out
out
add
ss
dec
test
dec
xchg
pop
cmp
inc
push
dec
add
xchg
inc
push
daa
push
test
iret
add
xchg
ljmp
pop
sbb
mov
and
mov
or
in
inc
add
aam
aad
add
adc
iret
test
xor
aas
inc
push
test
dec
loopne
push
pop
fwait
inc
sub
sbb
int3
mov
test
loopne
dec
daa
call
push
push
add
je
es
out
cli
push
stc
lret
and
fildl
rolb
push
clc
inc
imul
popf
add
cli
jne,pt
addr16
mov
adc
punpckldq
fistpl
mov
cmpsl
les
dec
inc
inc
xchg
sbb
lcall
mov
xchg
jp
and
xchg
dec
pop
push
dec
imul
xchg
in
cwtl
das
inc
in
xor
dec
andl
mov
fadds
pop
push
movsb
add
and
adc
mov
push
test
dec
filds
pop
mov
xchg
pushf
sti
cmp
shrb
lret
out
leave
or
mov
iret
push
fs
push
out
and
xchg
sbb
dec
pusha
cmp
add
or
add
inc
dec
or
mov
stc
mov
push
pop
add
mov
inc
ljmp
inc
lods
dec
inc
pop
int
iret
inc
mov
jge
addl
aas
stc
mov
add
adcl
lret
add
dec
pop
or
std
fwait
sbb
out
xchg
push
jp
sti
sbb
sti
mov
inc
jae
add
fs
pop
mov
lret
movb
add
or
into
pop
cld
xchg
add
pusha
cmp
push
mov
add
fnsave
pop
int3
and
js
add
or
adc
int
testb
jb,pt
idiv
jg
jp
les
lahf
mov
push
jecxz
pop
cwtl
aaa
loopne
orb
fwait
rorb
lret
call
scas
xchg
lahf
stc
dec
mov
add
and
cmp
in
adc
cvtpi2ps
push
sbb
in
inc
shll
fwait
lock
fidivrl
hlt
out
xor
or
cli
push
mov
inc
sub
xchg
sarl
jno
dec
loopne
sub
inc
pop
fldl
in
sub
add
cmp
je
outsb
fcmovnbe
xor
mov
xchg
lea
cli
add
inc
pop
cmpsb
leave
xor
outsl
inc
dec
jge
lcall
fnstsw
sti
mov
push
dec
and
in
ret
ficoml
lods
xor
pop
add
movsl
int3
outsb
test
sub
add
arpl
cmc
push
pop
mov
xor
orl
xchg
outsb
adc
test
cmp
bound
lret
add
loopne
or
jne
sbb
add
fwait
test
dec
or
outsb
mov
lahf
fldenv
sbb
aad
jmp
fldl
mov
adc
pop
mov
iret
adc
xchg
pop
popf
lret
std
bound
sub
xor
dec
lock
jp
ret
xchg
jmp
xchg
mov
ret
out
cli
cmpsb
imul
sbb
add
insl
test
cli
add
xor
lock
mov
sarb
ss
and
popf
hlt
mov
mov
sahf
xchg
cwtl
mov
sbb
testb
sub
orl
int
jns
add
pop
pop
xchg
in
data16
add
sub
mov
xor
add
enter
add
aas
pushf
gs
stc
xor
jmp
sahf
xor
and
jg
orl
add
pop
into
sub
mov
js
mov
inc
fsubs
sbb
jnp
pushf
mov
add
fidivs
xor
movsl
push
jmp
enter
ljmp
cmp
add
add
lock
subb
add
in
jno
inc
jmp
aam
add
scas
or
push
lret
dec
enter
jp
push
cmp
jnp
pushf
inc
push
xor
sbb
mov
outsb
cmp
add
mov
mov
pop
pushf
sub
std
push
call
or
shrb
dec
inc
sahf
jge
inc
dec
xor
mov
and
rorb
add
adc
mov
push
call
cmp
mov
add
dec
jo
pop
ret
push
mov
mov
scas
sbb
push
jp
decb
and
add
or
pop
les
stos
mov
out
repz
pop
add
cmp
mov
inc
enter
jb
pop
xchg
inc
add
push
and
stos
inc
iret
mov
mov
std
push
fcmovnu
lods
and
mov
jns
repnz
add
outsb
js
dec
loop
scas
add
aaa
adc
mov
sub
sbb
cmpl
or
pop
lcall
cmp
mov
pop
cltd
jne
loope
scas
xor
mov
enter
lret
inc
inc
icebp
shrb
mov
jecxz
jle
dec
out
in
stc
les
mov
cld
shlb
imull
mov
out
jle
push
in
dec
dec
inc
scas
ds
jmp
push
outsl
sbb
mov
dec
cmp
clc
stos
jne
fistps
test
repnz
fisttpll
mov
mov
mov
arpl
mov
gs
test
scas
mov
xchg
or
or
testl
rcl
loope
add
lcall
addb
fildl
pushf
jno
repz
push
add
pop
add
cli
dec
and
pop
ss
cltd
sbb
or
cmc
stos
mov
add
ds
in
add
pop
aam
lcall
jge
cs
inc
cmp
repz
add
or
mov
mov
inc
addb
jle
pop
or
push
pop
call
into
pop
lods
jmp
lcall
adc
sbb
rolb
mov
xor
test
cmp
xor
fwait
xchg
aad
pop
pop
daa
addb
mov
inc
unpckhps
mov
push
adc
cmp
pop
jecxz
jg
cmpsb
sub
lret
inc
std
adc
push
inc
xchg
jbe
inc
dec
scas
pop
test
leave
stos
test
ret
and
mov
jecxz
aas
mov
add
xchg
add
ret
xor
jb
push
add
andl
nop
test
add
popa
adc
xchg
repz
sbbb
push
jo
ret
push
sti
lock
adc
enter
arpl
cmp
lss
lret
shrb
loope
sbb
add
sbb
xor
inc
pop
and
push
mov
rcl
jg
outsb
mov
shrb
ljmp
mov
std
cmpb
icebp
add
mov
shll
add
add
stos
pop
jmp
test
outsl
and
jmp
add
iret
sub
mov
sbbb
mov
mov
sbb
imul
in
sbb
add
pop
mov
inc
mov
xor
inc
ret
ficomps
movsl
dec
xchg
inc
pop
add
in
jne
add
pop
ret
mov
mov
mov
sub
sbb
lock
xor
subb
jg
sar
add
xor
test
mov
leave
pop
lds
sarl
add
sarb
push
lods
cmc
inc
addl
jge
lret
cmp
xor
cmpb
push
out
and
sbb
leave
push
jns
sbb
pop
adc
xchg
fldcw
xor
aas
add
in
dec
mov
sbb
sbb
or
cmp
inc
sub
mov
pop
mov
inc
ret
adc
xlat
xor
dec
adc
inc
sbb
cs
mov
jae
bound
mov
inc
add
sbb
add
cmp
jecxz
mov
repz
cmp
out
lods
sub
mov
push
inc
inc
xchg
mov
pop
mov
add
int
mov
add
pop
test
cwtl
lock
add
jg
dec
mov
add
mov
insl
xor
inc
call
shll
aad
sbb
leave
adc
add
dec
and
push
clc
loope
arpl
cmc
addb
sbb
xor
push
test
jecxz
cmp
jg
cwtl
xor
mov
inc
add
pop
ds
insl
les
es
movsb
cmp
jns
pop
pop
test
sbb
push
les
inc
sti
lret
inc
mov
ret
and
bound
dec
mov
mov
out
pop
add
xor
cmp
jle
std
negb
mov
pop
fwait
jecxz
jns
inc
dec
loope
dec
cmp
jno
jl
in
dec
lahf
add
push
pop
sti
push
fcoml
and
cwtl
dec
adc
out
test
dec
jb
xchg
jl
lock
pop
jne
cmpsb
lods
addl
dec
jle
dec
ret
inc
pop
outsb
jae
xchg
push
pop
hlt
inc
inc
cld
push
sub
out
add
mov
cmp
cmp
divl
adc
ss
inc
scas
ret
dec
and
pusha
cmpsl
mov
add
mov
popf
loope
inc
out
push
in
out
mov
stc
add
push
jbe
clc
shrb
push
sub
shrb
sti
and
add
sar
inc
ljmp
pop
cmpsl
mov
ja
call
scas
test
push
cmp
sub
inc
out
clc
mov
arpl
cmpsl
roll
popf
pop
xor
mov
pop
xchg
jge
cmp
jns
mov
sahf
adcl
addr16
cmp
mov
jg
pop
rclb
jmp
fwait
add
test
cwtl
test
mov
add
push
stos
jecxz
std
nop
adc
ds
dec
stc
add
lret
sbbb
jg
dec
mov
push
cmp
add
add
enter
nop
inc
jae
gs
rclb
sar
aaa
fildl
xchg
jge
rol
or
jecxz
add
inc
mov
jo
cmp
add
sub
sbb
iret
inc
fstps
cltd
cmp
ret
lcall
scas
mov
mov
orl
out
mov
inc
scas
add
repnz
add
stc
mov
dec
dec
es
repz
stos
andb
lods
in
inc
inc
add
dec
call
dec
jp
pushf
sbb
in
ds
xchg
out
test
call
inc
xor
imul
pop
inc
xor
push
add
or
inc
out
testl
cli
scas
add
js
jge
dec
call
push
mov
xchg
mov
cmp
sti
incl
cwtl
inc
ljmp
cmpsb
aam
dec
enter
outsl
mov
cmp
push
ds
lret
inc
jae
mov
add
mov
add
adc
outsl
jns
push
mov
add
jae
jl
es
adc
out
ret
pop
cmp
insl
lret
add
inc
add
std
fisttps
jecxz
das
lock
rcll
loope
lods
add
sti
or
out
add
out
out
pop
jmp
inc
sub
push
mov
in
pop
inc
mov
movzwl
cmc
dec
test
jb
xchg
pushl
or
jnp
gs
shlb
push
jge
pop
clc
mov
dec
inc
dec
sar
cmp
jo
scas
sbb
xor
jl
xorb
mov
aas
jle
xchg
std
add
push
icebp
xchg
enter
pop
les
lret
inc
btc
xchg
imull
pusha
xor
bound
push
out
cmp
inc
or
hlt
repz
sub
push
inc
sbb
fwait
imul
pop
xchg
cmp
jl
outsl
add
mov
add
fdivp
inc
add
fs
dec
ret
jmp
jmp
dec
loope
xor
nop
bound
fnstsw
outsb
pusha
xchg
cmpsl
inc
orl
jo
shrl
dec
repz
add
fistps
cmp
jp
cmp
das
mov
scas
add
fwait
icebp
repz
xor
shll
xor
adc
lods
scas
inc
inc
pop
or
and
clc
je
mov
pop
mov
fidivl
xor
aam
orb
xchg
add
xor
mov
mov
aad
and
ret
insl
dec
add
cmpsb
scas
iret
xchg
daa
pop
add
mov
jno
inc
pushf
pop
dec
int3
pusha
sub
inc
test
pop
inc
adc
add
mov
add
enter
fisubrl
icebp
bound
mov
and
pop
xor
dec
loop
pop
xchg
pop
jnp
add
add
and
mov
lea
add
and
add
idivb
inc
js
shll
xlat
push
int
dec
dec
hlt
loope
ret
mov
scas
jecxz
add
mov
scas
xlat
inc
dec
loopne
sub
fucomi
movsl
cmp
lods
mov
inc
mov
roll
loopne
sti
pop
xor
mov
addr16
inc
popf
sbb
rorb
dec
and
lds
adc
mov
pop
cmp
ret
hlt
pop
push
pop
xchg
mov
push
daa
push
lods
dec
cli
ljmp
outsb
icebp
add
sub
sahf
push
cmp
jae
sbb
cmp
imul
jns
or
pop
nop
mov
mov
pushf
inc
mov
add
sahf
pop
je
mov
hlt
sbb
es
jmp
inc
iret
ja
xorl
jne
sub
icebp
mov
xlat
arpl
dec
test
in
dec
int3
mov
inc
pop
cs
inc
pop
and
pop
cmp
cmpsl
adc
adc
cmpsb
fildl
addr16
test
rolb
aas
inc
xlat
out
sti
out
add
jns
das
enter
mov
pop
cmp
jg
cmpsb
ret
js
xor
int3
stos
or
add
sbb
ja
out
inc
cld
cmp
inc
lods
dec
jae
mov
jmp
jg
xlat
mov
into
shl
add
cmc
push
in
pop
inc
loope
jne
jnp
sti
mov
inc
outsb
repnz
fwait
loopne
xorl
add
inc
lods
pop
or
test
pop
sub
push
xor
and
outsl
test
inc
cmpsb
sub
jns
pop
cmp
add
lods
outsl
sbb
mov
and
movsl
jp
cmp
inc
adc
xchg
insb
xchg
xchg
aaa
xchg
add
adc
arpl
pop
push
imul
add
or
jle
ffree
ret
repnz
hlt
out
in
inc
mov
addr16
push
and
clc
inc
pop
je
imul
jp
lcall
jp
add
ds
or
lods
lock
sbb
nop
add
fldt
sbb
into
xchg
js
scas
mov
mov
aas
icebp
mov
ret
push
push
dec
sar
and
add
mov
jnp
jo
sub
jne
andl
xor
push
imul
mov
int
mov
sub
lea
bound
inc
lret
mov
sbbl
roll
jb
inc
dec
sbb
jge
fs
ret
mov
leave
xchg
test
into
sub
jg
roll
inc
jge
cmp
adc
test
sbb
ret
repz
mov
jge
push
xor
add
cmc
inc
rolb
lret
in
fmull
fstps
pop
in
jnp
rcrl
ds
aaa
pop
fbstp
xchg
lods
popa
mov
fs
push
inc
add
jbe
xchg
dec
ret
js
sbb
dec
and
sub
in
adc
mov
inc
add
jg
jle
xorl
lret
js
add
dec
dec
sub
or
in
enter
out
push
add
inc
xor
sub
jecxz
fs
xchg
jb
or
sub
cld
loope
sti
rcl
enter
jg
ret
popa
outsl
test
js
or
subl
lock
enter
jmp
inc
ja
call
fwait
push
outsl
add
or
fadds
pop
fisubrs
lahf
lods
imul
out
bound
xsaveopt
mov
aad
lahf
sub
add
jmp
pop
pushf
or
inc
addr16
sbb
xchg
incl
lods
sti
scas
out
dec
adc
mov
cmp
sbb
aam
mov
dec
or
insl
pop
incl
sub
sbb
dec
test
aad
push
add
pop
fcomip
nop
subl
ret
cmp
jmp
loope
mov
sbb
add
out
sub
cmp
pop
add
scas
stc
jle
mov
and
add
fiadds
les
jl
dec
jp
jg
aas
add
add
add
jecxz
dec
insl
inc
sub
jge
xorl
add
rcll
add
bound
add
mov
sub
xchg
aam
lahf
rorl
lds
push
aas
mov
addr16
cmp
stos
add
mov
ror
fs
add
fidivs
cmp
push
inc
bound
cmp
inc
sti
lahf
test
inc
shlb
scas
int3
mov
inc
ror
mov
add
add
xor
add
jl
cmp
mov
add
stc
outsb
test
push
das
sub
icebp
std
nop
jle
push
adc
imul
inc
sub
xor
into
sbb
xchg
in
add
xlat
daa
imul
hlt
dec
xor
outsb
aas
inc
sti
xchg
push
mov
xchg
addr16
loopne
jns
ret
ret
mov
scas
lods
inc
js
std
jmp
dec
jp
stos
int
inc
dec
add
mov
push
test
and
or
imul
in
sbb
xlat
fistpl
add
je
shrb
addr16
pop
jno
push
xor
sub
inc
push
add
out
jg
cmp
mov
enter
mov
fucomp
push
sub
xchg
add
test
mulb
cli
dec
mov
mov
mov
iret
add
xchg
xor
jecxz
rol
adc
xchg
add
scas
xchg
cmc
jp
cmp
loope
and
lods
lea
pop
fs
dec
incl
fistps
pop
repnz
sub
xor
inc
jnp
adc
rol
mov
mov
dec
add
xchg
lods
es
xchg
push
xchg
mov
cwtl
movsl
loopne
inc
mov
mov
sbbb
shr
jmp
dec
xchg
les
ret
scas
mov
jecxz
daa
cmp
add
push
inc
fmuls
sarl
fistpl
shr
outsb
out
mov
inc
gs
jecxz
jae
iret
mov
dec
or
xchg
lret
xchg
inc
adc
lahf
shlb
xor
pop
inc
inc
xor
mov
gs
cmp
sub
into
mov
bound
lea
and
call
pop
cmpsl
xchg
add
enter
add
push
cmp
mov
add
xor
pushf
or
inc
lds
pop
add
jp
or
nop
ret
add
push
push
cltd
stos
mov
add
adc
sbb
pop
call
insl
pop
shll
and
inc
cmp
jmp
call
push
mov
xchg
imul
push
pop
aas
cld
jecxz
dec
inc
add
dec
icebp
jle
stos
cmc
movnti
jae
mov
xchg
test
dec
cmp
lock
cli
scas
jmp
js
cmp
or
xchg
cs
inc
jecxz
clc
ret
xchg
fcomi
xor
and
ret
sub
movsb
add
les
xchg
add
adc
jle
pop
int
addl
push
mov
mov
push
loope
pop
add
stos
daa
ret
xchg
pop
cmpsl
mov
adc
pop
decl
dec
add
aad
inc
inc
inc
es
cmpsb
into
jae
sub
mov
and
movsl
cmp
jmp
pusha
cli
pop
inc
mov
push
mov
scas
mov
andl
hlt
shll
cltd
cwtl
cmpsb
add
shll
add
mov
add
lahf
in
mov
inc
pop
adc
add
nop
mov
add
pop
lds
js
loopne
gs
lea
xor
xchg
stc
hlt
popa
add
mov
inc
lods
stos
mov
ret
popa
add
mov
and
adc
xchg
adc
stos
sbb
cli
popa
mov
out
inc
ret
scas
nop
addr16
int3
add
test
bound
pushf
xorl
add
out
clc
out
inc
icebp
add
popf
sti
xchg
or
jno
gs
xor
pop
lds
mov
cmpsb
imul
push
xchg
mov
cmp
mov
mov
ret
jle
add
js
adc
add
jmp
sub
repz
addr16
push
jle
mov
loopne
xchg
cmpsl
add
jns
jecxz
mov
jp
mov
ljmp
test
xor
ret
xchg
inc
mov
add
xchg
xor
sahf
and
stos
popl
add
add
inc
ljmp
mov
add
inc
cmp
pop
mov
pop
push
add
lret
push
lahf
std
adc
inc
jecxz
push
sbbl
dec
dec
cmp
fbld
jp
pop
mov
dec
and
paddusb
dec
jl
in
mov
jb
push
xchg
ret
sbb
adc
and
inc
and
cmc
test
add
xor
dec
enter
sub
in
and
pop
dec
out
mov
mov
adc
or
mov
and
and
ja
fildl
mov
cmp
imul
mov
cmp
push
adc
push
add
lds
jl
dec
sbbl
dec
xor
add
xchg
mov
rcrb
jo
addb
in
add
arpl
push
inc
cltd
js
lods
and
jae
cmp
into
dec
iret
dec
jns
xchg
jae
ret
mov
ds
sbbb
hlt
cmp
adc
nop
jnp
pop
outsl
and
lahf
add
or
rolb
inc
lds
leave
dec
xor
add
ret
jmp
add
push
mov
inc
jge
dec
es
imul
mov
jns
out
hlt
pop
push
leave
mov
xor
inc
sub
lahf
fbstp
outsb
out
adc
mov
mov
push
add
lds
jb
jnp
jecxz
loop
add
test
dec
aas
fs
aad
push
mov
pop
aam
xorl
dec
dec
mov
xchg
pop
jae
sti
dec
push
pop
popa
out
int3
jmp
arpl
hlt
push
mov
dec
test
mov
jecxz
ljmp
add
push
sbb
push
add
pop
push
pusha
in
push
sti
inc
inc
push
cmc
daa
sbb
jns
in
addl
or
xchg
insb
pop
xchg
and
lock
movl
push
jge
aad
adc
out
xchg
jl
into
jg
int3
sti
add
clc
andl
push
insb
sbb
dec
clc
cmp
imul
cmc
arpl
jmp
and
push
in
ds
jg
dec
lds
mov
ljmp
rorb
test
dec
bound
adc
or
mov
les
popl
sbb
mov
imul
cli
lea
dec
inc
bswap
adc
xchg
mov
fsubrl
mov
mov
add
lds
sub
xor
sbb
inc
mov
stos
push
and
add
insb
cmp
outsb
out
scas
pop
mov
and
mov
in
jnp
mov
out
dec
mov
cmp
add
out
mov
test
enter
jge
or
mov
in
mov
mov
ret
lea
jne
fistl
mov
jecxz
jecxz
and
cmp
cmpsl
in
pop
cmpsl
cmc
lea
test
cmp
cmp
jnp
cli
add
cwtl
orb
mov
push
xor
cmp
inc
add
dec
add
dec
ja
sub
inc
push
rcrl
xlat
pop
inc
xor
mov
xchg
mov
xor
add
dec
dec
cmp
js
daa
add
jl
mov
das
add
fnstsw
in
subl
insb
mov
inc
add
stos
and
pushf
dec
repnz
insb
lock
push
push
inc
arpl
sbb
push
mov
mov
pop
adc
movsl
adc
subl
add
in
jnp
dec
mov
cmp
add
negb
add
inc
pop
sub
mov
out
fistpl
sbb
test
aas
fistpl
mov
dec
test
mov
push
icebp
roll
add
aad
add
jecxz
pop
aaa
push
dec
xorl
xchg
stc
sub
or
pop
dec
push
movsl
subl
ret
xchg
push
cmpsl
inc
repz
dec
add
mov
sti
cmp
cs
std
inc
pop
mov
into
push
jge
mov
mov
stos
add
es
push
jge
std
cld
outsb
add
xor
out
sub
mov
push
jne
inc
dec
push
xlat
faddp
not
jl
fldt
ret
add
ja
clc
sti
jle
add
add
cmpsb
pop
mov
add
lock
inc
in
sbb
ret
lret
imulb
scas
jecxz
mov
popa
xor
movsl
ret
push
inc
cld
bound
imul
mov
lods
mov
test
loop
ret
imul
pop
mov
test
pop
je
in
jg
lret
inc
std
outsl
pop
push
leave
mov
stc
dec
outsl
data16
add
scas
mov
cmpsl
add
mov
addl
addr16
pusha
sbb
arpl
aam
pop
mov
push
ret
mov
push
fmuls
std
mov
call
bnd
pop
add
xor
cmp
add
fwait
jecxz
rol
test
sub
mov
or
adc
xor
push
mov
cmp
mov
shll
jmpw
stc
stos
add
cmp
ret
jl
xor
sbb
stc
xor
stos
jb
or
cmovns
add
push
sub
jne
mov
jo
addr16
imul
xlat
and
sub
xchg
scas
xchg
cmp
fs
ret
jmp
adc
scas
call
xchg
fistpll
insl
stos
pop
push
inc
rolb
scas
les
adc
cmp
xchg
dec
inc
add
and
add
pop
lret
cmp
add
pop
and
dec
jl
aaa
ret
rolb
inc
add
and
inc
xchg
pop
add
add
inc
rolb
mov
rorb
lods
popa
cwtl
iret
mov
scas
out
call
imul
mov
loope
popa
xchg
jnp
cmp
arpl
lds
lahf
add
push
xor
push
rclb
jl
ds
push
clc
sbb
sarb
push
mov
push
ds
adc
dec
cmpsl
pop
mov
pop
pop
jge
sti
mov
sbbb
outsl
outsb
scas
js
mov
add
adc
dec
fwait
mov
or
xchg
xchg
pop
pop
ret
dec
push
addr16
aam
sbb
pop
xchg
inc
adcl
xor
inc
popa
loop
lock
imul
inc
xlat
shl
mov
jg
sbb
cmp
sub
cwtl
int3
mov
jmp
and
mov
inc
mov
roll
mov
stc
jl
cmp
xchg
add
mov
inc
jge
mov
cmc
cmp
stc
mov
lcall
add
movsl
sti
mov
and
jle
xchg
mov
push
jge
in
shr
mov
cmp
add
icebp
push
cmp
les
push
iret
jle
mov
pushf
lcall
dec
sbb
push
mov
jae
jge
outsl
push
fistl
out
sar
out
add
addl
scas
mov
lret
sbb
add
jne
add
loope
push
cmpsb
add
lahf
pop
jnp
addb
mov
test
add
inc
sarb
add
mov
mov
stos
test
add
mov
fimull
adc
dec
inc
sbb
sti
in
nop
enter
das
add
mov
mov
jl
mov
inc
cmp
pop
mov
scas
dec
inc
clc
xchg
jnp
push
std
insl
push
ret
push
cmp
adc
push
pop
jl
xlat
add
dec
adc
push
mov
data16
dec
xor
push
add
cltd
xlat
lret
rol
pop
mov
jns
sub
movsl
push
dec
xchg
loope
in
inc
pop
fidivrs
dec
push
mov
aas
add
jmp
push
add
fnstenv
scas
cmpsb
mov
pop
stos
cmp
jmp
add
adc
js
xlat
lcall
add
jle
imul
ss
fcomip
shlb
insb
and
and
or
dec
or
mov
lcall
cmp
cs
add
outsb
shl
aaa
nop
inc
fwait
pop
or
sti
ljmp
inc
add
gs
out
sub
ret
stc
mov
dec
add
jno
loope
pop
aaa
add
jp
inc
inc
mov
imul
jecxz
js
add
shlb
mov
dec
inc
cmp
mov
push
jl
sub
mov
cwtl
inc
pusha
shll
arpl
lret
add
sbb
in
shl
dec
push
mov
push
jp
jecxz
lcall
add
mov
pop
adc
mov
mov
mov
inc
xchg
pop
ja
subl
sbb
xchg
push
inc
popf
pop
inc
stos
sbb
inc
popa
jg
inc
js
dec
gs
push
inc
fcmovbe
sbb
push
data16
mov
imul
inc
add
xor
dec
out
nop
xor
jg
sub
cli
inc
dec
enter
aaa
sbbb
aad
add
aaa
add
rep
neg
cmp
sbb
hlt
shl
test
cmp
inc
ret
inc
sbb
jae
sub
outsb
jbe
stos
push
aaa
loope
inc
sti
fwait
rclb
lds
js
in
add
inc
and
lods
stos
cmpsb
add
arpl
mov
cmpsl
icebp
test
inc
clc
cmp
andb
stos
pusha
into
add
sahf
dec
jmp
add
dec
repz
adc
add
ret
add
movsb
inc
lods
or
call
jno
mov
pop
aas
jne
or
add
orb
and
sbb
mov
inc
add
dec
mov
js
dec
sub
push
ss
or
clc
add
jge
pop
mov
test
inc
popa
fs
inc
add
rdmsr
cmp
lea
xchg
or
arpl
leave
cli
mov
mov
scas
inc
sub
cltd
insb
hlt
adc
stos
icebp
add
mov
add
xchg
js
mov
ljmp
mov
ret
xor
dec
push
ret
mov
add
inc
xchg
push
test
inc
stos
or
adc
roll
jno
inc
xchg
movsl
arpl
incl
sub
jbe
fwait
jmp
and
loopne
pop
sbb
add
clc
sub
xchg
fnsave
add
inc
sbb
repnz
adc
dec
popf
inc
xor
jo
and
ret
add
sti
scas
fcmovu
jnp
add
jmp
add
add
dec
repnz
inc
arpl
mov
into
out
data16
mov
mov
dec
jmp
cmp
pop
inc
add
cmp
lcall
add
sti
jg
stc
add
mov
sbb
es
ret
fwait
adc
jg
cmp
pop
cmp
dec
test
add
sub
add
ljmp
or
cmp
jle
pop
cmp
pop
mov
rcll
add
xchg
sbb
aas
add
pop
pop
sti
pusha
sbb
jns
icebp
lret
jecxz
cmp
bound
push
in
incl
mov
sub
mov
xor
add
or
adc
add
in
mov
add
bound
arpl
scas
jo
jmp
jns
jl
js
ret
xor
aam
inc
jle
and
fucomip
mov
pop
sub
imul
add
pop
out
inc
lret
mov
push
or
add
fdivs
std
jp
sbb
pop
mov
mov
fwait
jecxz
ljmp
ja
aas
loop
adc
push
jmp
roll
lret
jo
js
insb
pop
inc
xchg
mov
push
hlt
cwtl
cmp
dec
pop
jg
ret
imul
sub
str
loope
pop
add
mov
cld
bound
jle
sbb
add
addr16
dec
into
add
fstpt
test
jecxz
out
push
jmp
dec
dec
aaa
and
enter
out
pop
popl
testb
icebp
add
jmp
add
ljmp
sti
popa
pop
fisttps
jmp
call
out
add
stc
pop
pop
cmc
or
and
pop
mov
outsl
stos
xchg
clc
pop
shl
add
mov
cmp
sub
jmp
daa
lea
lods
or
fimuls
pop
das
add
jo
hlt
negl
dec
mov
imul
outsl
addb
in
add
xor
and
ret
cmp
mov
inc
lock
dec
push
mov
jbe
pop
imull
jge
inc
subb
and
mov
fmuls
loope
add
cmp
test
and
xor
mov
movsl
les
enter
add
fmull
inc
je
add
inc
xor
lret
jmp
add
jecxz
rcll
pushf
add
mov
push
imul
inc
icebp
rorb
dec
int
out
cltd
leave
loopne
push
imul
jo
jge
scas
add
shr
loopw
and
mov
rorl
call
ret
fcmove
popf
mov
cmp
dec
std
lock
ja
sub
sahf
shr
cmpsl
mov
outsl
mov
or
imul
es
loope
bound
mov
lahf
lds
xor
ss
add
and
repnz
mov
movsl
mov
push
inc
xchg
lret
pop
imul
popl
push
out
fdiv
xchg
sub
sbb
xchg
add
dec
inc
enter
xchg
pop
fwait
cld
subb
loopne
cwtl
add
jno
add
ljmp
xor
sti
pop
sub
add
in
jns
dec
mov
les
sahf
or
inc
cwtl
xorl
adc
into
mov
dec
in
jnp
ja
pushf
pop
jne
cmp
and
add
cmp
mov
xchg
pusha
adcb
xchg
dec
sarb
stc
imul
cmp
mov
in
repz
cmp
lret
inc
fcoms
loopne
jne
add
mov
roll
pop
pop
add
in
lods
imul
lret
mov
jg
cwtl
cmpsb
sbb
xor
dec
out
sti
shll
lods
add
je
rcrl
push
push
sti
jmp
into
and
and
push
ret
jecxz
in
sahf
xor
mov
jge
inc
inc
dec
cmp
add
cmpsb
ja
ds
test
shr
dec
pop
push
add
cwtl
addr16
nop
sub
in
add
aaa
mov
stos
add
add
and
jne
ret
sti
out
sub
nop
adc
sbb
add
dec
cmp
in
hlt
fwait
mov
and
mov
push
push
cmpsl
add
ret
add
pop
je
push
jl
add
std
mov
pushf
add
dec
inc
mov
test
std
jo
jno
sbb
hlt
ds
sahf
add
push
xchg
push
and
sub
sbb
xor
cs
or
add
or
mov
imul
call
mov
lea
add
in
sbb
es
adc
aam
and
xor
push
dec
mov
cs
aad
mov
shll
jae
fldt
pop
xchg
lds
cmp
xchg
jo
jg
filds
leave
pop
xor
lods
mov
mov
add
push
jo
inc
xor
pop
lds
sub
add
das
mov
push
leave
cld
cmpsl
and
jg
ret
fldt
aad
xchg
pop
push
xchg
inc
push
mov
adc
add
mov
inc
leave
rol
or
push
scas
lea
xchg
fcmovnbe
dec
mov
cmp
popf
add
stos
jl
call
mov
or
sbb
and
inc
mov
gs
sbb
add
xor
fwait
push
stos
je
inc
out
xlat
mov
inc
insl
loope
jns
roll
mov
call
xorb
xchg
or
fsubs
cltd
add
xor
push
add
inc
xchg
mov
adc
testb
les
dec
cs
add
xchg
lret
push
jo
js
notb
aam
dec
jne
cmc
fbld
push
add
pop
and
sub
pop
add
adc
mov
scas
in
cmc
negl
adc
dec
loopne
lret
cvtps2pi
nop
sbbb
int3
outsl
lahf
icebp
and
sub
mov
lds
mov
jne
xchg
ficomps
add
lods
dec
in
pop
testl
pop
leave
adc
sbbl
xchg
add
cs
mov
test
add
out
mov
mov
add
pop
cli
bound
push
inc
cmpsb
jmp
xor
ss
scas
rcrb
cmpb
sti
js
add
cs
jg
add
dec
dec
push
dec
movsb
lock
arpl
dec
adc
scas
add
or
sbb
inc
fiaddl
jg
mov
push
add
dec
xchg
scas
pop
gs
ret
sahf
int
je
movl
jbe
ret
dec
add
mov
add
ret
jmp
int3
add
fdiv
ljmp
lods
call
add
sbb
sti
inc
mov
jge
push
mov
dec
pop
stc
inc
sbb
daa
add
add
jmp
xchg
add
mov
jb
rorb
les
add
cmp
jnp
repz
add
rolb
sbb
add
fildl
jmp
jae
cmp
bound
int
scas
icebp
in
aas
sbb
jl
lods
lret
mov
repz
mov
pop
lds
stos
xchg
pop
pop
mov
add
cmpl
cli
jnp
mov
push
test
into
in
sbb
add
ret
daa
xchg
inc
movsb
leave
mov
bnd
scas
repz
aas
insl
pop
ret
mov
add
les
pop
cltd
xor
cmp
loopne
sbb
push
add
push
cwtl
popf
addl
insb
dec
mov
mov
fiadds
outsb
inc
int3
dec
mov
fisubl
je
xor
int
cs
adcl
jmp
add
or
js
pop
mov
jle
xchg
mov
stos
jbe
out
cwtl
jae
stos
adc
and
pop
dec
fdivs
lods
fisttpl
add
cmc
std
mov
pop
cwtl
mov
dec
or
pop
lea
rorb
jns
ret
fisubrs
sbb
pop
mov
fdivs
xor
inc
lods
cmpsb
or
pop
inc
jg
push
ret
ret
push
lds
cmpsb
cmp
lret
scas
outsb
inc
js
add
jb
shlb
mov
xlat
cld
jnp
outsb
scas
push
hlt
dec
enter
mull
std
rcrl
repz
aas
mov
lods
pop
out
scas
in
int
xchg
nop
mov
test
roll
add
pop
pop
pop
in
dec
stos
and
push
addr16
icebp
add
inc
inc
and
push
int
pop
push
inc
data16
mov
inc
dec
emms
xlat
cld
add
inc
sbb
stos
push
push
xchg
pop
mov
mov
adc
jne
mov
lods
and
stos
push
add
in
cwtl
nop
or
roll
pop
int3
data16
loopne
orl
sarb
mov
push
jp
mov
mov
fcomip
sub
stos
xchg
or
or
mov
inc
cmpsl
mov
jp
xchg
jg
push
add
sbb
dec
inc
lods
jge
in
sbb
jg
add
loopne
jp
incl
fstps
push
xchg
mov
fcoml
add
call
hlt
mov
int3
add
mov
and
add
inc
enterw
add
cltd
inc
cmp
repz
imul
mov
popa
ss
aam
cmp
jle
insl
add
dec
fisttpl
mov
dec
sub
cmp
pop
fwait
add
add
dec
inc
jl
mov
andb
push
mov
add
imul
add
stc
xchg
bound
add
jb
lock
add
popa
repz
jae
pop
in
enter
ss
sbb
clc
out
cld
outsl
add
pop
mov
add
mov
mov
dec
js
shr
out
add
dec
xlat
iret
and
les
sti
and
xchg
movsb
sbb
dec
xor
clc
repnz
mov
mov
or
push
cltd
cmpsb
testl
stos
movb
iret
stos
shll
add
adc
int
add
sub
jmp
dec
dec
loop
fnstenv
hlt
aad
dec
sbb
cli
lods
xor
stc
push
int3
dec
ljmp
insl
jnp
or
sbb
cld
icebp
loope
imul
rcrb
enter
jnp
jbe
add
fsubrs
lret
cmp
jl
std
mov
xor
add
adc
insl
test
sti
mov
dec
mov
fstpt
jbe
fwait
jecxz
inc
shrb
call
pop
inc
dec
dec
pushf
inc
add
fwait
push
mov
loopne
dec
loop
mov
ret
inc
outsl
push
repnz
in
out
add
jbe
js
and
test
xor
cmpsl
dec
dec
add
popa
xor
add
out
sub
into
xchg
sub
push
sbb
es
in
loopne
pop
rcrb
pusha
mov
test
std
jp
loope
inc
add
daa
cmpl
movsb
in
xor
arpl
js
test
inc
mov
jecxz
xor
add
mov
lds
mov
mov
dec
inc
mov
fadd
xchg
push
cmc
clc
or
outsb
std
sti
dec
inc
or
ret
mov
add
push
loope
cmp
out
das
in
xchg
ror
sub
add
push
cwtl
sbb
out
add
jge
outsb
pop
mov
je
jns
xorl
and
ds
mov
subl
add
jmp
inc
mov
mov
movsl
cmp
lcall
xchg
arpl
xchg
jb
xor
dec
mov
add
fsubrs
dec
cmp
ret
aas
dec
lods
sbb
ja
subl
add
xchg
add
xor
mov
or
sahf
and
ds
lock
pmaxub
push
cmpsb
inc
sbbl
inc
jg
xor
stos
and
popa
inc
sahf
loope
push
je
sbb
push
divl
add
lds
popf
mov
jge
push
ret
xchg
sub
xor
jns
cs
adc
enter
insl
cmovle
jge
in
ficoml
push
and
out
jne
dec
mov
push
jecxz
and
adc
pop
xor
jo
inc
clc
push
mov
or
sbb
cmove
faddl
call
rolb
dec
movsb
ret
cwtl
push
cmc
dec
or
xchg
inc
rcl
sbb
sbb
add
mov
mov
les
pop
mov
mov
push
mov
ret
pop
scas
jecxz
ret
mov
inc
sub
cltd
jo,pt
adc
dec
subl
out
push
mov
jb
xchg
scas
ljmp
pusha
loop
ret
mov
lret
repnz
add
mov
popf
push
int3
add
or
add
inc
daa
sub
mov
push
pop
sbb
lods
add
insl
pop
inc
xor
or
popf
movsl
dec
add
mov
xor
push
sub
jl
fiaddl
andb
mov
adc
xchg
inc
pop
call
sub
ljmp
add
into
sbb
stos
cmp
add
outsl
inc
imul
aam
adc
jg
mov
jmp
xchg
js
pop
dec
flds
mov
adc
test
and
pop
inc
add
jmp
addb
mov
scas
cmp
rcr
inc
or
add
cmp
sub
mov
ret
scas
inc
fcomi
stos
stc
push
add
xlat
mov
inc
xchg
insl
add
mov
cmp
aaa
mov
loope
add
mov
cmp
pop
add
sbb
test
inc
add
addr16
push
mov
les
add
test
add
std
or
out
jecxz
add
out
xor
call
ds
jge
and
cld
add
sbb
sub
mov
movsb
lods
add
stos
push
cmpsb
cmp
add
jnp
pop
jecxz
pop
rolb
jmp
adc
inc
lods
pop
add
pop
cwtl
out
aas
or
mov
add
mov
test
push
psubsb
out
fiadds
cli
jp
mov
inc
sub
jbe
int3
ret
xchg
iret
cld
inc
cltd
mov
fcmovnb
test
fsubs
mov
imul
mov
ljmp
daa
pop
cwtl
add
dec
test
mov
add
stos
ds
dec
jmp
rolb
adc
jbe
or
jno
out
inc
jmp
adc
xlat
lock
mov
lea
cmp
lock
out
add
out
pop
push
add
push
test
inc
lock
add
mov
cli
stos
cmp
je
adc
ret
pop
or
imul
ja
inc
lods
dec
stos
jnp
mov
or
stos
mov
ret
add
push
add
dec
jmp
mov
es
add
sbb
pop
call
sbb
mov
xchg
dec
iret
add
test
mov
loope
jmp
add
outsb
ret
and
fyl2x
and
sarb
imul
hlt
mov
pushf
aam
dec
pop
nop
in
cmp
mov
adcl
xor
mov
push
add
mov
test
adc
add
dec
mov
inc
or
in
cmp
les
repz
jle
test
sti
imul
add
lods
lahf
push
add
inc
stos
xchg
loope
mov
sahf
mov
aam
gs
pop
add
pusha
mov
inc
movsl
outsb
lahf
cmpb
jae
add
jae
sarl
loope
repnz
loopne
in
xchg
sub
jmp
sahf
mov
ljmp
push
aas
jle
mov
inc
adc
cwtl
dec
pop
popl
jo
push
dec
pop
idivl
inc
es
test
jb
lcall
stos
das
jo
cli
xor
inc
pop
pop
mov
sbb
pusha
dec
push
sti
js
mov
jl
add
and
jo
fldt
cmp
stos
sub
inc
mov
js
dec
push
mov
fstpl
pop
mov
inc
in
je
jbe
sbb
add
cmp
movsl
adc
and
sbb
andb
pop
mov
fistpl
jbe
dec
push
xlat
cmp
movaps
call
inc
sbb
xchg
add
in
jp
icebp
or
stos
aad
repz
gs
in
add
int
lods
jl
add
sbb
jae
and
daa
data16
dec
push
das
fildl
cmp
cmp
xor
sti
cmpsl
push
sub
add
mov
pusha
dec
jo
das
jae
inc
cmp
dec
add
jae
pop
notl
add
pop
jne
cld
pop
lea
add
mov
mov
cli
lret
add
hlt
sbb
lahf
inc
je
rcrl
fcomi
addr16
mov
cli
pop
add
sub
and
or
dec
jae
sbb
adc
inc
pop
add
lea
add
rorl
cmp
pop
mov
add
andb
pop
jp
xchg
subb
mov
inc
mov
inc
jnp
addl
outsl
xchg
pop
into
insb
mov
js
insl
inc
ffree
dec
subl
add
dec
das
cmpsb
mov
repz
push
ret
lods
fwait
movsb
add
dec
in
imul
dec
inc
pop
xchg
inc
in
sub
mov
add
dec
incb
icebp
cmp
add
push
pusha
jp
pop
inc
test
xor
dec
jo
inc
les
mov
xchg
xchg
cmpsl
ss
and
sub
inc
subl
clc
nop
jmp
shll
add
dec
xchg
jb
push
ret
test
add
je
stos
fwait
popl
int3
orb
notl
inc
nop
sarl
mov
cmp
imul
ja
jl
jae
stos
sub
cmp
inc
mov
inc
call
xor
sti
aaa
subl
lds
jo
movl
dec
push
dec
push
inc
dec
add
dec
lahf
rolb
or
fiadds
add
xchg
cltd
push
sbb
es
jmp
mov
push
out
jmp
lock
xchg
js
add
mov
mov
loopne
sub
in
push
push
pop
add
es
imul
add
mov
repz
adc
bt
cmp
pop
lret
xchg
add
jg
add
psrlw
jp
mov
lods
fcmovnb
jae
outsl
stos
enter
xor
pop
cmp
test
aam
and
jle
stc
jp
loopne
scas
jb
dec
adc
pop
lds
outsl
jns
addb
shl
stos
and
dec
into
movsb
or
cltd
bound
push
or
dec
add
lods
sub
mov
mov
pop
cli
sti
pop
cmp
mov
lods
xchg
fwait
add
sbbl
dec
repnz
sbb
xchg
jnp
push
out
dec
dec
bound
stc
xchg
add
sub
pushf
xor
mov
add
fidivrs
add
ret
mov
dec
pop
xchg
mov
push
inc
lock
xchg
inc
jae
roll
mov
aad
sarl
add
or
inc
jmp
push
shll
cmp
and
test
mov
xchg
add
fwait
mov
mov
fsubs
xchg
pop
je
les
nop
in
add
add
mov
mov
add
pop
stc
adc
loope
add
in
or
sti
in
add
insl
mov
push
jge
inc
add
mov
jl
mov
jecxz
or
add
shl
shr
inc
add
les
cmp
and
call
outsb
dec
fwait
pop
incb
hlt
inc
push
outsl
pushf
jnp
pop
stc
out
cwtl
add
mov
scas
xor
dec
mov
rcrl
aas
inc
jecxz
addr16
lods
subl
outsb
add
je
ja
cs
sbb
jmp
pop
or
out
inc
pop
xchg
xchg
mov
enter
adcl
sub
mov
cmp
int3
xchg
orl
subps
adc
es
leave
mov
lret
xchg
cmp
test
add
jmp
dec
add
mov
icebp
jns
mov
stc
mov
lods
add
xor
add
leave
xor
cmp
mov
mov
inc
add
fbstp
rdpmc
loopne
sbb
out
push
mov
dec
jge
shlb
sbbl
push
arpl
sbb
mov
mov
icebp
fnsave
sub
push
push
stos
dec
inc
test
inc
mov
pusha
rep
add
mov
jecxz
insl
adc
ja
inc
inc
pop
jo
add
mov
add
js
mov
xchg
add
inc
cmp
test
pop
add
jmp
jnp
dec
push
jecxz
data16
dec
xor
std
aam
in
lods
inc
add
out
jg
dec
jae
ja
dec
dec
lea
int3
push
add
mov
mov
mov
das
mov
sti
fwait
push
add
sbb
jmp
cli
popf
les
add
stos
mov
data16
ss
pop
lcall
push
jmp
pop
add
jnp
mov
pop
jno
scas
cmpl
dec
dec
dec
lods
mov
loopne
add
ss
dec
int3
sar
add
or
inc
sbb
hlt
jecxz
inc
lahf
fsubrl
arpl
in
sub
pushf
add
shr
and
mov
dec
pop
pop
je
sarb
adc
or
add
imull
in
bound
fwait
sbb
inc
lock
sbb
jg
in
push
loop
and
add
inc
shll
ret
inc
inc
int
out
andl
jecxz
add
dec
add
cmpsb
incb
in
mov
mov
cli
fisubrl
jae
lret
into
inc
inc
ljmp
mov
addr16
sbb
dec
cmp
ret
inc
lret
pushf
mov
mov
jp
outsl
sub
mov
add
jb
mov
cmpsb
sti
mov
ret
and
sbb
push
mov
js
cmp
cmp
addr16
dec
add
jle
aad
iret
add
sbb
hlt
icebp
mov
cmp
adc
dec
pop
jo
pop
in
dec
mov
mov
add
cmp
test
xchg
inc
add
jbe
insl
adcl
into
adc
nop
mov
dec
cmp
adc
jo
lods
inc
adc
dec
insb
ljmp
int
fs
sbb
cmp
mov
jo
dec
data16
dec
mov
mov
dec
ret
cmp
repnz
outsb
add
cli
jne
push
mov
dec
jb
pop
sbb
out
inc
jg
push
and
jae
xchg
and
dec
adc
cmp
mov
stc
inc
daa
xor
jg
inc
and
add
das
adcl
xor
adc
test
lahf
jge
xor
mov
sub
inc
cmp
sbb
stc
push
mov
mov
add
ret
mov
adc
add
out
iret
add
pop
int3
stos
jnp
mov
andl
ja
icebp
stc
sti
stos
andl
xlat
mov
jcxz
push
xorl
add
mov
xor
inc
inc
lret
out
sub
jmp
addb
cmp
insl
jno
lahf
xlat
mov
add
push
xor
cmc
or
test
lret
testb
xchg
add
cmpsb
fs
repz
and
fstpt
popf
and
adc
ret
shlb
inc
pand
xchg
ds
add
jno
fwait
pop
in
adc
mov
jo
xlat
ss
xor
add
aas
fwait
mov
pop
mov
mov
mov
mov
test
icebp
inc
jbe
cld
repnz
pop
sub
dec
insb
fmull
and
movsb
push
mov
cltd
dec
outsb
int
jp
and
adc
inc
arpl
negb
es
xchg
gs
add
inc
popa
push
add
sub
lods
clc
add
push
mov
or
jno
lock
fistl
add
sti
test
cs
and
mov
out
scas
add
cmp
lret
mov
mov
ret
jmp
movsl
stc
andl
sbb
add
push
sub
test
clc
sbb
repnz
arpl
pop
pop
fsubrs
repz
mov
out
xor
add
fdivl
mov
js
stos
loope
jmp
ret
dec
insb
xchg
leave
push
lahf
jmp
adc
mov
add
inc
imul
repz
test
pop
and
into
out
arpl
add
leave
pusha
sub
and
icebp
fwait
jnp
dec
add
ret
imul
add
add
jbe
jae
mov
out
aad
inc
lods
pop
sub
or
add
inc
inc
dec
add
cwtl
lcall
sbb
stos
adc
cmp
in
lods
inc
insb
scas
sti
add
call
stc
mov
pop
ss
test
adc
jp
lcall
dec
int3
hlt
add
sbb
daa
es
xchg
pop
pop
addb
out
jae
adc
insl
je
adc
sti
frstor
or
faddl
mov
out
jbe
pop
inc
jl
cmp
aas
push
dec
mov
or
enter
cmp
jb
adc
jecxz
cmc
imul
xchg
rcr
and
leave
dec
xor
and
mov
ss
sbb
scas
call
dec
mov
or
add
nop
mov
outsb
xchg
pop
and
cmp
jge
popf
xchg
cwtl
mov
pop
lahf
add
xchg
into
push
pop
adc
fadds
push
and
and
mov
loop
rcl
hlt
add
subl
add
imul
movsb
stc
and
inc
jecxz
testl
fildl
push
cmp
xlat
inc
inc
or
data16
addb
sbb
ficompl
inc
xor
les
and
push
jbe
mov
add
pop
inc
fcoms
inc
cmpsl
xchg
adc
imul
mov
xchg
out
add
popa
push
mov
mov
imul
xchg
xor
or
cmp
cmp
jle
mov
add
adc
and
cmp
test
xor
xchg
inc
add
jnp
popf
ret
push
pusha
push
push
test
mov
clc
dec
jno
stos
mov
fldt
and
add
ret
jno
add
sub
ret
mov
jae
roll
cmpl
adc
movl
repnz
addl
adc
inc
mov
shrb
js
mov
cs
push
repz
sbb
sti
xchg
or
jno
mov
jo
inc
ret
mov
out
je
repz
push
fdivrs
les
loope
sbb
iret
adc
rolb
insl
inc
mov
dec
jmp
dec
dec
subb
lods
add
push
xlat
push
out
fs
dec
and
and
xchg
jecxz
movsb
xchg
add
cltd
jge
imul
ljmp
add
xor
into
shrb
les
mov
sub
packsswb
daa
addr16
in
arpl
jbe
es
repz
add
test
or
add
ret
lods
dec
mov
mov
ret
insl
dec
inc
int
ficoms
mov
sub
xor
imul
adc
loope
and
jp
push
ret
pop
les
cmp
gs
jne
roll
stos
movsb
mov
add
dec
jg
add
movhps
pop
scas
mov
adc
test
pop
mov
lock
call
push
cmp
stc
loope
adc
add
std
ret
jl
cmpsl
cld
mov
add
pop
es
inc
sbb
push
ret
adc
scas
cmp
xchg
sbb
cmp
mov
sti
xchg
ret
call
inc
das
sahf
scas
data16
stc
loopne
daa
push
lea
in
push
lock
pop
in
add
cmp
xor
into
and
or
add
movsl
lock
addb
xor
push
push
inc
cld
clc
xor
or
add
sub
mov
fsubp
push
in
dec
pop
push
insl
push
imul
loopne
push
push
add
les
loope
xchg
sbb
and
icebp
inc
mov
mov
ret
sbb
stos
add
repz
sub
call
xchg
test
ja
jb
cmpsl
les
and
pusha
pop
daa
cmpsl
lock
fcoml
sub
add
cwtl
clc
out
push
mov
mov
pop
push
test
push
stos
ljmp
sbb
pop
mov
inc
fdivr
push
clc
rep
imul
mov
orl
sbb
lahf
mov
adc
into
dec
aad
enter
loope
test
movsl
add
jb
out
add
pop
jnp
daa
inc
shl
mov
fwait
and
sbb
scas
push
scas
stc
outsl
push
testl
out
mov
and
mov
add
or
lods
add
mov
repz
aaa
fwait
imul
jb
sbb
mov
pop
pop
and
cmp
mov
push
inc
pop
mov
into
mov
mov
mov
aad
inc
rol
add
mov
cmpsl
mov
addr16
add
sarl
in
fiadds
popf
pop
xchg
and
sub
insl
or
imul
test
rclb
xchg
hlt
jecxz
xor
pop
jno
dec
test
es
imul
add
mov
add
xor
cmp
push
mov
mov
mov
xor
insb
dec
xchg
jno
jp
pop
jo
lock
sub
inc
jl
mov
add
mov
sbb
in
ret
dec
and
xor
xor
add
dec
sub
outsb
push
pop
add
mov
pop
add
mov
je
scas
sub
xchg
hlt
sti
cmp
dec
add
aas
gs
adc
add
lahf
idivl
cmp
and
addr16
add
pop
jno
or
pushf
insl
repz
add
stos
enter
inc
mov
mov
cmp
mov
lock
sti
push
xchg
cli
add
xchg
mov
push
inc
bound
add
xchg
jp
in
jecxz
imul
mov
ja
cltd
xor
dec
ret
scas
push
pop
push
or
mov
imul
inc
mov
repz
mov
or
mov
inc
fmuls
jnp
rcll
flds
dec
stos
out
lods
mov
les
xlat
inc
mov
subl
mov
pop
sti
cmpsl
mov
inc
cwtl
data16
loopne
xor
sub
popa
nop
dec
mov
jle
mov
imul
and
cli
xor
dec
jle
add
sub
sbb
das
int3
sbb
add
and
mov
and
push
fldcw
add
push
enter
xlat
loop
xor
sbb
inc
add
repnz
shl
stos
push
test
js
sbbl
dec
add
stos
and
sbb
nop
mov
dec
jecxz
fisubl
sub
fucomi
add
mov
test
sbb
cmp
cmp
adc
test
or
stos
push
imul
xchg
cmp
fwait
test
sub
add
mov
pop
aad
pop
jmp
add
lds
inc
and
jno
jg
xchg
and
fdivrs
or
push
inc
cmp
push
add
ret
les
push
pop
add
xor
xlat
inc
mov
xchg
outsl
pop
cmpl
fwait
jmp
nop
and
add
stos
mov
jo
xor
rcl
mov
mov
mov
inc
xadd
cli
sub
inc
mov
jae
shlb
fcmovne
nop
mov
loop
pop
add
test
mov
sbb
pop
out
sysenter
xlat
add
jno
pop
in
push
push
jbe
dec
daa
and
jbe
repnz
shlb
pop
xchg
mov
pop
mov
push
ret
lahf
xor
stos
arpl
fwait
add
cmpsb
push
scas
cwtl
add
inc
and
adcl
cmp
inc
or
adc
cmpsl
mov
dec
sub
jg
jge
in
mov
outsb
and
inc
imul
ret
xchg
daa
mov
add
xchg
gs
xor
cmp
pop
out
xchg
ret
push
out
leave
cmp
xchg
jns
call
ja
scas
sub
sub
mov
cmp
jbe
dec
dec
jb
pop
sub
lock
xor
es
mov
lods
push
dec
add
push
roll
jl
or
fidivs
ror
adc
push
jl
xor
test
movsb
push
xor
xchg
popa
mov
inc
xchg
std
out
dec
outsl
cmp
loope
push
xchg
mov
das
add
fnsave
dec
mov
pop
lock
fs
sbb
adc
repz
in
shr
testl
jns
mov
adc
jl
das
sarl
jae
data16
movq
pop
xchg
cmp
and
add
in
aam
xchg
leave
stos
lds
inc
add
mull
mov
cmc
punpckhdq
add
stos
or
pop
add
pop
jmp
xchg
inc
leave
cmp
add
gs
testb
add
pop
test
jl
stos
sbb
add
int
mov
add
sbb
jns
or
and
dec
sar
sbb
cmp
pop
and
in
push
inc
ja
pop
nop
imul
add
arpl
rorl
dec
xchg
dec
sub
arpl
pop
xor
cmpsb
and
inc
inc
mov
cmp
jnp
adc
cmc
lret
icebp
pop
cmp
add
aam
and
shll
mov
stos
dec
add
mov
cs
add
inc
ds
cmp
popf
inc
lods
and
adc
jp
pop
out
cmpsb
pop
add
mov
mov
loopne
js
lea
add
ds
inc
jge
cmp
push
repz
call
shrb
dec
popf
cmp
pusha
out
inc
mov
js
dec
xor
fwait
mov
orb
roll
insl
in
or
scas
add
roll
fdivl
adc
fwait
add
pop
pop
fxch
clc
or
add
xchg
cmpsb
cmp
sbb
add
ljmp
aaa
jmp
push
pushl
xchg
sub
aam
add
std
mov
enter
cmpsb
out
jg
sbb
cwtl
les
pop
ds
mov
and
sbb
xor
cmc
or
push
mov
sbb
or
rolb
in
lret
shll
scas
add
jnp
add
dec
xor
adcl
or
mov
add
loope
icebp
popf
dec
adc
mulb
or
cmp
xchg
bound
sub
jecxz
or
adc
movb
push
push
clc
dec
rorl
out
pop
outsb
inc
mov
xchg
mov
inc
xchg
test
sti
dec
loope
cmp
ret
incb
inc
lods
mov
inc
jo
jae
xchg
lret
push
std
inc
xchg
cmc
fildl
dec
xor
add
add
repnz
add
cmpl
jecxz
lret
cld
call
push
cmp
nop
hlt
inc
jg
mov
out
addb
ret
dec
test
xchg
vunpckhps
pop
leave
adc
mov
pop
cmp
inc
in
dec
cwtl
shrl
test
arpl
add
mov
jne
add
mov
xchg
js
testb
fidivrl
out
mov
mov
daa
add
xchg
inc
scas
pop
push
stos
stos
pop
jnp
clc
mov
insb
mov
adc
gs
loopne
cmp
sarb
or
sti
shll
pop
add
inc
lods
jge
jmp
bound
les
je
sti
push
xor
cmpsb
popf
orl
jbe
movsb
enter
je
add
clc
push
add
mov
lock
push
in
ja
inc
sub
add
push
cmp
jbe
mov
lock
xchg
les
mov
in
jae
jmp
ret
add
loope
cltd
dec
movsb
dec
std
push
arpl
add
cmpsb
pushf
adc
xchg
sbb
in
daa
pop
hlt
out
cmp
sub
fidivs
jo
add
jnp
test
add
sbb
cmp
arpl
jnp
out
jge
ret
call
out
cli
add
lock
insl
dec
es
add
and
repnz
pop
fs
push
loopne
add
add
inc
sti
add
cli
lcall
loop
idivb
ret
aaa
in
pusha
inc
mov
add
sti
ficoml
cli
cmp
bnd
xlat
out
js
dec
mov
cmp
and
xchg
loope
icebp
push
add
jnp
pushf
dec
inc
cmp
cmp
lret
mov
add
jl
loopne
jle
call
xor
jg
add
dec
stc
pusha
xchg
xchg
adc
mov
inc
and
ret
push
mov
mov
cmp
inc
jg
ret
sbb
leave
test
repnz
dec
je
push
dec
add
xchg
xchg
dec
push
xchg
hlt
jecxz
push
pop
call
jp
inc
aaa
add
push
xor
mov
xchg
clc
mov
mov
inc
xchg
lahf
jmp
pop
jle
xchg
cmpl
bound
int3
sbbb
ss
jg
dec
add
jmp
pop
jnp
fwait
loop
xchg
and
aaa
sbb
jns
rcrl
cltd
js
int
stos
mov
pusha
xchg
pop
fidivrl
gs
xchg
js
sarb
inc
loope
jp
add
add
clc
mov
mov
add
mov
add
pop
xchg
jg
daa
inc
dec
mov
sbb
cs
cmpsb
or
mov
repz
dec
cmpl
je
add
pop
call
pop
jle
xor
orl
fiadds
fs
cwtl
cmp
mov
add
xchg
cmp
add
mov
cmpsl
pusha
mov
das
inc
sbb
mov
fs
mov
clc
nop
das
je
subl
insl
inc
adc
pop
mov
icebp
dec
add
and
ja
pop
jbe
adc
push
mov
bound
fsub
ror
cmc
cs
in
popw
dec
jmp
jge
push
jns
adc
inc
int3
xchg
sti
js
and
fwait
stos
in
mov
mov
mov
add
cmp
stos
adcl
in
ret
xor
pop
clc
add
mov
outsb
dec
sub
test
sbb
cmp
mov
pause
and
aas
mov
es
bound
add
call
pop
addl
fdivs
dec
test
jmp
add
cltd
enter
lcall
pop
add
add
scas
nop
mov
cwtl
mov
sbb
and
call
pushf
or
xchg
ja
cmp
sar
mov
jae
addb
adc
sahf
int3
jbe
mov
into
hlt
aaa
push
addr16
cltd
pop
popf
addl
sbb
lds
mov
add
bound
pop
mov
into
int
out
mov
mov
add
je
adc
and
push
enter
push
pop
add
push
or
pop
dec
add
adc
jmp
jb
push
push
push
cmpsl
in
add
outsb
cmove
shll
filds
mov
lret
dec
movsb
sub
sbb
fucom
outsb
mov
out
fmuls
sbb
push
add
inc
or
push
inc
fldt
add
mov
mov
add
inc
or
jmp
push
pop
add
dec
aam
cld
paddsw
or
movsb
mov
rcrl
mov
shl
hlt
xchg
add
outsl
pop
cmp
cli
dec
pop
push
xor
mov
inc
mov
popa
sbb
or
xor
mov
clc
jecxz
out
je
mov
mov
into
or
fldt
mov
mov
inc
inc
ret
and
or
call
scas
enter
push
addb
cmp
inc
dec
in
xlat
outsb
push
jecxz
sbb
jg
ret
add
jb
pop
lea
jne
cmp
add
mov
mov
add
into
and
inc
jns
dec
clc
mov
xor
jecxz
shlb
sahf
inc
inc
clc
inc
push
dec
popa
pop
sbb
jmp
adcl
pop
gs
mov
or
add
jo
pop
inc
add
mov
cli
cwtl
pop
inc
loope
fcompl
xchg
add
cmp
push
rcrl
imul
add
adc
into
jbe
iret
dec
pop
xor
and
push
and
mov
cmpsb
sbb
push
xchg
sub
aad
ljmp
inc
dec
sahf
loop,pt
arpl
rcrl
add
enter
and
adc
add
je
mov
dec
jp
mov
xor
cmc
xchg
repnz
call
dec
cwtl
add
repz
push
inc
xchg
sbb
jae
jbe
cmp
add
jle
insb
popf
int3
andl
lahf
add
inc
mov
or
arpl
ja
cmp
mov
jmp
pop
adc
jg
fnstcw
stos
je
mov
lods
jnp
cmpsl
inc
pusha
sbb
stc
fisubrs
inc
pop
scas
pop
aaa
stos
repz
pop
jp
jle
and
add
test
lahf
inc
and
push
mov
dec
cmp
and
ret
cmp
out
repz
inc
mov
mov
add
ficoms
jg
cmp
test
rclb
ret
sbb
or
jle
ret
stos
dec
dec
std
pop
inc
jb
jg
insb
cmp
test
popa
and
or
lods
mov
iret
and
add
sarl
pushf
add
cmpsl
cmp
add
loop
cmpsb
in
gs
repnz
roll
out
and
xor
pop
jb
repnz
mov
jl
loop
sub
add
ret
sbb
repnz
jmp
in
jecxz
push
bswap
add
addr16
adc
add
jnp
xor
into
fwait
nop
xor
sub
push
stc
in
add
adc
mov
icebp
sbb
dec
dec
outsb
fstpt
test
mov
add
insl
rorb
or
testb
cmc
push
mov
jle
mov
xchg
dec
js
test
andl
pop
pushf
inc
pop
or
mov
inc
cmpb
iret
or
sub
dec
cli
jns
mov
inc
ficompl
inc
push
mov
jl
inc
mov
dec
add
inc
xchg
sbb
std
jne
scas
loop
sarb
sahf
inc
inc
leave
enter
addr16
cmp
cmp
fnclex
out
xchg
pusha
hlt
or
loop
mov
cmpsl
add
mov
cwtl
mov
add
repnz
ficoms
lcall
sub
adc
jb
add
repnz
xchg
add
push
mov
inc
aaa
pop
mov
cwtl
adc
arpl
add
mov
enter
cmc
inc
mov
arpl
cld
mov
lret
sti
jb
daa
add
mov
jg
dec
or
gs
add
es
sahf
cmp
pop
sbbl
jp
mov
mov
leave
add
icebp
xchg
outsb
je
inc
jnp
jp
inc
or
sahf
iret
call
repnz
mov
ljmp
lcall
int3
push
pop
push
bsr
test
xchg
add
or
call
mov
test
push
jmp
mov
jnp
popa
stos
jae
cmp
add
dec
sub
lret
in
lds
js
mov
testl
dec
add
jecxz
inc
repnz
sbb
fldenv
movsb
mov
fdivr
aaa
add
and
insl
inc
test
add
enter
mov
fadds
add
cmpsb
and
out
inc
shll
enter
cli
inc
scas
shl
icebp
stc
cld
add
mov
jecxz
loop
clc
inc
int3
mov
adc
ja
lea
out
mov
sub
or
sti
enter
push
mov
jl
push
ret
into
pop
stos
mov
stos
in
popa
cmp
dec
movl
mov
pop
mov
inc
mov
dec
pop
mov
jp
dec
ret
out
cmp
fwait
in
mov
lcall
shrb
adc
dec
pop
and
lock
bound
sbb
mov
clc
sbb
roll
in
jns
mov
stos
scas
adc
ss
cmpsb
inc
jb
dec
jmp
add
or
popf
fiadds
push
dec
mov
push
out
imul
dec
xor
out
sbb
pop
cmp
test
xchg
dec
mov
roll
add
call
adc
cmpsb
add
push
inc
or
xchg
sbb
out
mov
add
add
push
inc
mov
aam
rclb
gs
sti
sbb
outsl
popa
push
jne
jge
pop
sub
add
add
call
pop
pop
incb
sbb
add
dec
popf
lea
data16
aad
mov
icebp
or
and
hlt
filds
shlb
add
xchg
xor
dec
sbb
pop
ja
mov
stos
sub
dec
cmp
insb
inc
fbld
stc
add
cli
pop
dec
adcb
pop
cmpb
cmpsb
add
lcall
xchg
mov
add
add
xchg
add
add
stc
inc
xchg
jbe
xchg
sub
mov
cs
inc
and
ret
cmpsb
push
mov
callw
ret
movsb
fwait
dec
and
into
xchg
adc
push
inc
mov
icebp
pop
push
in
cmpsl
push
rolb
mov
cmp
ret
ret
jb
xchg
decl
sbb
insb
inc
inc
xchg
ljmp
mov
add
out
test
xchg
or
sub
add
pop
xchg
cmp
gs
loop
add
cmpsl
cmp
xchg
cmp
arpl
mov
enter
xor
cli
xor
push
dec
ret
xchg
adcl
jno
outsl
sub
sub
add
pop
enter
ret
xchg
push
or
adc
adc
inc
pop
in
xor
xor
fcmovne
or
add
cwtl
cmp
mov
lret
jp
adc
testl
xorb
inc
mov
inc
test
mov
mov
mov
mov
ja
scas
lods
push
xor
mov
push
mov
lds
stos
sbb
fs
stos
sbbl
fcmovnb
stc
pushf
jle
xchg
dec
xor
inc
adc
sbb
outsl
testb
je
mov
jnp
repz
jp
cli
jle
in
fwait
inc
test
jo
scas
cs
add
cli
out
pop
repnz
clc
arpl
add
xor
mov
inc
aam
cmpsl
iret
rcrl
fwait
push
sub
jbe
add
cmp
hlt
scas
dec
scas
les
inc
cwtl
mov
inc
stos
xor
inc
sub
mov
addw
lret
push
nop
sbb
pop
adc
in
out
xchg
stos
mov
mov
push
arpl
jb
popf
jg
data16
cmp
out
mov
fldl
pop
rcll
inc
iret
inc
fs
xor
mov
cli
loop
pushf
cmp
movsl
add
pop
dec
cmp
sbb
inc
les
mov
decl
pop
cwtl
in
popa
addr16
mov
pop
fmul
mov
mov
add
add
inc
push
sbb
les
xor
add
clc
in
pop
call
cld
mov
mov
pop
push
clc
in
sbb
xchg
sbb
fidivs
cltd
mov
ret
adc
mov
dec
cmp
fldl
mov
repnz
mov
out
popa
mov
cmp
xor
jecxz
mov
add
mov
shll
jecxz
out
clc
pop
and
inc
mov
and
lret
arpl
pop
ljmp
inc
inc
sbb
dec
xor
or
mov
mov
mov
roll
sbb
sarl
jl
add
insb
fnstenv
inc
mov
jns
mov
xor
das
jae
pop
call
add
add
out
es
loop
add
test
sbb
ret
inc
add
dec
loope
fwait
cmp
add
aas
cmp
push
pop
dec
out
push
and
pop
cmp
lock
cmp
mov
push
aas
por
ret
add
pop
orb
addr16
inc
mov
dec
pushf
ret
xor
inc
cmpsl
adc
es
xor
repz
lods
add
sub
in
call
dec
cmp
ja
fidivrs
ret
jb
cmp
add
cmpsb
or
or
lods
shlb
mov
imul
add
mov
add
inc
sbb
inc
xor
pop
mov
add
sti
cwtl
pop
sbb
adc
mov
push
inc
insl
bound
aad
sahf
pop
jne
push
cmp
outsl
sarb
add
loope
jnp
lods
add
xchg
sub
jno
add
lret
mov
add
pop
lods
adc
ljmp
into
cmp
inc
add
inc
mov
xchg
cmpb
arpl
lds
pop
sbb
outsl
movsb
push
jecxz
pop
push
arpl
sub
ret
mov
dec
hlt
inc
ret
jo
jno
fcmove
mov
mov
sbbl
and
jg
pop
stc
pop
mov
mov
popf
adc
push
adc
js
das
add
mov
push
jbe
dec
div
sub
push
xor
mov
dec
add
adcb
pop
pop
ficoms
iret
jmp
mov
add
js
jns
inc
std
dec
ss
jecxz
mov
xchg
or
mov
and
xchg
aaa
mov
mov
adc
mov
jle
jbe
cli
fisubrl
xor
xchg
fwait
mov
mov
inc
inc
in
mov
mov
cmc
sbb
inc
jecxz
call
nop
sbb
add
out
loopne
movsl
mov
mov
mov
ss
insb
hlt
push
xor
jmp
arpl
stos
jb
inc
mov
push
repz
push
pop
add
aad
mov
jge
and
inc
mov
cmp
jg
scas
mov
loopne
dec
mov
shlb
inc
in
and
into
jg
clc
ret
adc
lock
mov
data16
pop
lods
push
cli
ret
sbb
cmp
add
xor
shlb
dec
js
sub
adc
mov
test
add
mov
in
push
pop
fsubr
mov
ljmp
push
mov
pop
add
xor
call
insb
sub
mov
shll
pop
inc
inc
adc
mov
inc
cmp
add
xor
xlat
add
mov
cmp
xchg
jbe
sbb
dec
push
inc
push
daa
js
mov
dec
or
pop
insl
cmp
inc
jge
mov
lds
inc
pop
clc
adc
les
adc
jo
jb
add
lahf
push
push
pop
repz
mov
pop
jno
stos
test
aam
iret
jg
cwtl
inc
inc
fucomp
cmp
inc
cltd
movaps
xor
mov
lcall
out
shlb
mov
push
xor
aaa
sti
jo
dec
cmpsb
mov
std
mov
xchg
sub
fcoml
fmull
or
and
shll
je
stos
aas
repz
out
into
add
inc
xor
aad
sbb
movsb
xchg
pop
and
cmp
sahf
fs
int3
add
mov
mov
hlt
clc
pop
jl
lahf
aas
mov
add
ret
in
nop
arpl
jne
dec
loop
and
insl
rol
cltd
arpl
sub
nop
add
in
ret
js
scas
idiv
or
sbb
mov
insl
pop
sbb
add
jp
jecxz
clc
inc
adc
cwtl
and
inc
lret
rclb
jo
fs
insb
pop
and
add
mov
fs
jecxz
icebp
cld
add
jne
fadd
lea
pop
mov
cmp
dec
sti
ds
ret
add
shlb
sbbb
mov
mov
push
mov
mov
inc
cmp
xor
inc
inc
aaa
shlb
in
jnp
jo
push
aam
notl
jnp
mov
gs
rolb
inc
sti
data16
inc
cmc
in
xchg
test
fs
cwtl
sub
push
pop
movsl
inc
es
adc
ja
or
loop
inc
adc
xor
dec
out
xor
jns
xchg
jo
fs
aaa
lcall
jb
jno
push
adc
jo
out
notl
push
xor
pop
pop
adc
inc
push
cltd
loop
and
inc
clc
push
jnp
push
into
fistl
pop
inc
pop
cwtl
movsb
inc
das
add
cltd
lret
inc
adc
inc
and
cmp
xor
arpl
cmpsb
and
pop
pop
push
es
sbb
jb
inc
in
adc
push
sbb
and
inc
les
iret
mov
stos
inc
xlat
and
divb
repz
fs
loopne
rcl
mov
and
and
mov
lahf
out
imul
jnp
add
jmp
inc
push
push
mov
jl
lods
lret
shll
adc
xor
aaa
addr16
push
jbe
lret
dec
fwait
xor
je
push
cmp
dec
mov
sub
add
addr16
fisubl
and
push
call
mov
es
out
and
rol
push
jae
fnstcw
adc
ljmp
daa
dec
leave
pusha
add
mov
mov
ja,pt
pop
adc
pop
cmpsl
out
jne
es
push
dec
gs
addr16
dec
jno
daa
in
pop
pop
pop
add
pusha
out
mov
fmul
inc
cmc
jge
es
lea
jne
and
add
leave
movl
lret
push
dec
push
mov
push
addl
std
dec
push
repz
push
xlat
push
xchg
or
adc
out
aaa
pusha
add
imul
xchg
sub
je
mov
pop
in
inc
dec
adc
ja,pt
push
daa
pop
mov
lahf
inc
mov
mov
xor
jno
or
add
push
adcl
ss
mov
roll
movsl
pop
push
out
daa
andl
jbe
fiadds
xchg
sti
adc
push
ficoms
adc
mov
scas
ret
adc
out
aas
push
inc
xlat
in
loop
sbb
cmp
lock
add
jne
or
popf
rclb
ret
bound
lahf
xchg
addr16
cmp
and
into
leave
lret
jge
pop
mul
cmpsl
and
dec
mov
rcrl
jb
dec
mov
add
lret
fsubl
mov
add
int
ret
push
ss
call
out
jmp
repz
dec
push
dec
int3
mov
dec
hlt
xorl
and
lock
dec
pop
bound
icebp
pop
ret
inc
ss
mov
popf
arpl
les
jl
movsb
inc
jl
fwait
jmp
inc
repz
movsl
inc
subb
out
xor
push
jb
pop
cmp
inc
mov
and
jl
jecxz
cli
dec
cmp
fldt
in
mov
pop
add
xchg
nop
lock
stc
dec
pop
mov
add
sbb
mov
pushf
hlt
int3
lock
cmp
fwait
jbe
dec
imul
clc
dec
ja
sbb
mov
jns
push
add
or
add
cmpps
call
stc
push
outsl
pop
cmp
xchg
lods
divl
sbb
adc
cmp
or
repnz
push
adcl
push
aad
lds
bound
cld
push
repz
mov
push
inc
cltd
lahf
cmpb
cmp
cmp
push
pop
mov
inc
adc
jmp
or
bound
aaa
cmc
out
inc
jg
pushl
dec
mov
add
ret
or
testb
jmp
arpl
xchg
add
sub
outsl
loop
push
aas
fistpll
roll
popf
push
scas
cltd
jne
sbbb
pop
lock
js
add
hlt
inc
pop
roll
sbb
sub
gs
push
dec
pop
int3
cmpsb
adc
dec
pop
inc
cmp
add
xchg
gs
pop
stos
add
into
outsl
dec
shr
stos
add
xchg
int
lods
cmp
xchg
and
mov
xchg
out
mov
insl
mov
push
cltd
inc
pop
jnp
adc
jge
ret
add
scas
mov
add
or
cmp
add
clc
lahf
adc
call
cs
add
js
push
mov
push
data16
cld
outsb
pop
jnp
dec
xor
rcrl
or
dec
movsl
cmove
aam
in
test
mov
add
sar
push
lea
enter
icebp
add
dec
popl
add
rcrb
push
mov
cmpxchg
push
in
cmp
cmpsb
stc
inc
push
sarb
popf
xchg
mov
lret
ss
jge
inc
mov
lods
sbbb
jge
idivl
ret
xor
add
out
xchg
add
movaps
js
inc
cmp
push
repnz
pop
jcxz
push
stos
out
add
and
insb
inc
ret
nop
call
push
rorb
sbb
iret
jp
jmp
push
or
pop
lahf
inc
pop
xor
jl
dec
add
mov
mov
push
cmp
jbe
popf
add
xchg
cmp
movsb
cld
add
cwtl
add
repz
push
icebp
js
push
xchg
fcos
add
out
lock
dec
testb
push
pop
jne
setne
in
add
pop
insl
out
add
addb
sbb
scas
add
pop
in
mov
add
add
add
push
addr16
push
enter
leave
subb
call
pop
cmp
mov
clc
ret
pop
inc
and
ss
sti
add
cmpb
pop
push
xchg
inc
lret
add
cmp
pop
xchg
or
inc
sti
orl
jge
add
in
ds
sub
fs
xchg
add
movl
addb
mov
sbb
push
js
lcall
and
rol
es
test
mov
cld
xor
insl
jecxz
fisubrl
jge
jnp
add
imull
mov
or
push
mov
and
jmp
std
popf
mov
ja
int
mov
jae
add
repz
cmp
scas
mov
sbb
xchg
pop
add
push
xchg
rorl
push
ss
or
cmpsb
shll
dec
pop
jp
nop
add
xor
and
sti
or
ret
cmp
mov
movsl
insb
sti
pop
inc
cmp
pop
jno
inc
inc
out
lea
dec
jmp
push
dec
repnz
in
mov
lods
pop
cmp
add
ret
cmp
aad
and
ret
push
or
push
scas
nop
push
lcall
mov
cmp
add
gs
iret
mov
inc
or
inc
mov
mov
inc
pop
ret
sbb
insb
fmull
push
xor
push
insl
pop
test
cmp
dec
popa
loop
mov
push
cmpsl
mov
jmp
dec
add
and
xchg
mov
xchg
andl
jp
stos
sbb
xadd
adc
fldt
mov
mov
dec
add
enter
test
ljmp
add
push
shrb
jp
adc
jg
nop
ret
jl
lahf
movsb
xor
hlt
jecxz
call
and
adc
xor
icebp
inc
scas
fstps
psrlw
jecxz
and
aaa
inc
or
push
lds
or
add
lock
jmp
ljmp
inc
pop
inc
inc
or
push
iret
mov
add
in
inc
lock
inc
clc
add
mov
sbb
xchg
stc
pusha
std
daa
jl
jo
inc
pop
cld
push
pop
dec
imul
dec
cmp
jl
cwtl
add
jo
add
in
lret
cmp
ja
adc
mov
test
jle
dec
add
push
pushf
out
mov
repz
les
jb
add
fisubrs
insb
cmp
cmp
jbe
push
mov
jg
dec
hlt
decl
cmp
mov
push
jo
xor
xchg
mov
add
in
iret
jg
filds
push
fldt
mov
enter
imul
cmpsl
add
or
popa
add
pop
xor
jmp
cmp
js
stos
jmp
rcll
cld
xchg
int3
ret
xchg
adc
cltd
sub
jmp
jns
inc
ror
inc
jns
jecxz
repnz
pop
aaa
mov
lret
fistpll
mov
fs
and
ret
or
dec
xor
pushf
pop
mov
mov
pop
add
test
insl
dec
repnz
pop
inc
cmp
add
popf
movsb
dec
pushf
mov
je
orb
inc
jge
pop
adc
bound
lret
inc
and
dec
roll
lds
xchg
sbb
jge
in
scas
add
pop
and
cli
loope
cmp
popa
xor
dec
movb
aas
bound
rcrb
in
lret
jecxz
cmp
fdivp
push
add
or
add
jecxz
mov
push
cmp
and
add
lret
push
sbb
adc
add
sbb
dec
add
sub
jg
rorb
mov
cmpsl
sub
ljmp
inc
add
jno
and
aas
xor
mov
xchg
jmp
dec
loopne
stos
add
add
adc
add
pop
xchg
test
mov
loop
or
mov
add
or
inc
add
in
or
add
jnp
sub
cli
cmp
or
inc
stos
andl
sbb
push
jp
lret
jnp
out
sub
mov
pop
push
stos
cmp
out
adc
loop
mov
arpl
lahf
popa
sar
cmp
sbb
push
inc
or
jp
xchg
mov
jl
sub
sub
repz
dec
pop
inc
xlat
iret
add
lcall
out
call
inc
pushf
das
jle
sbbb
jne
and
dec
xchg
icebp
mov
xchg
call
and
inc
clc
adc
shll
bound
loopne
into
ljmp
or
sub
add
push
jns
inc
or
popf
test
loope
mov
add
jg
outsl
xlat
jl
mov
mov
pop
cmp
xor
add
dec
inc
sbb
pop
add
aas
pop
cli
adc
bound
jp
push
imul
add
movsl
hlt
rcll
rolb
adc
inc
mov
inc
jno
xchg
addr16
xchg
adcl
sub
sti
add
jns
fiaddl
into
out
out
iret
pop
int3
mov
add
or
dec
add
add
cmp
mov
inc
or
scas
fdivrl
inc
out
lds
dec
cmp
mov
xchg
or
inc
repz
mov
inc
dec
dec
mov
add
mov
std
push
add
cmp
jne
add
xchg
call
dec
in
cmp
inc
jns
dec
mov
dec
inc
adc
and
inc
outsb
inc
pop
pop
mov
js
std
jl
add
xor
push
out
add
push
or
lret
adc
pop
mov
cmp
add
and
mov
inc
scas
push
in
jge
ret
or
rolb
in
push
sbb
js
push
bnd
cmp
out
aad
ret
adc
imul
add
sbb
pop
dec
mov
jb
adc
add
cmp
fisubl
nop
repnz
sub
jne
aaa
add
orb
xchg
mov
xchg
inc
mov
xchg
bound
fwait
push
out
jp
shl
pop
mov
aas
add
sub
das
call
jecxz
fiaddl
inc
inc
mov
imul
ret
dec
loope
fsubrp
jecxz
out
insl
and
add
mov
out
dec
mov
mov
xchg
stos
adc
lahf
ja
xor
mov
cmp
mov
pop
loope
jle
lret
out
sub
imul
ror
aaa
sbb
jne
xor
jecxz
clc
sub
cmpsl
add
lock
rcll
sub
pop
movb
test
add
or
dec
jmp
sub
and
in
verr
sti
jbe
push
dec
pop
imul
push
xor
hlt
dec
gs
sub
test
inc
data16
aad
movb
xor
out
js
ret
fiaddl
inc
nop
push
inc
call
adc
cmp
add
xchg
ret
sbb
adc
push
test
mov
sub
insl
add
add
shll
ss
addr16
push
loope
fdivrl
dec
lea
iret
sbb
inc
jne
pop
add
cmp
inc
sbb
aas
push
jns
lret
xchg
add
rolb
sub
dec
push
lods
jp,pt
mov
test
outsb
in
adc
inc
add
mov
gs
clc
xchg
imul
lret
out
fbstp
into
pop
inc
data16
jno
imul
hlt
outsb
sarb
pop
sbb
inc
xor
xchg
sti
jecxz
inc
or
add
ret
pop
rolb
pop
add
in
jecxz
jb
mov
mov
ja
out
cmp
xor
jp
mov
inc
cli
and
inc
and
jge
jns
sub
inc
insl
lahf
jb
in
jp
sub
xchg
and
jo
push
add
das
cmp
inc
xchg
add
rcr
movsb
jne
inc
inc
xchg
dec
cwtl
aas
sbb
sti
mov
mov
jb
mov
cmp
pop
xchg
test
ret
ss
data16
xor
aas
inc
cmpsb
or
arpl
cs
pop
jmp
add
xor
and
mov
into
adc
outsl
pop
add
jmp
shlb
sbb
inc
cmp
movsb
lret
xchg
fimull
aaa
insl
pop
lret
inc
popa
test
aas
shlb
push
add
push
enter
push
aas
cmp
sbb
mov
and
add
icebp
jbe
add
mov
add
mov
cs
pusha
add
and
fdivl
scas
loopne
incl
cltd
cmp
mov
inc
outsl
jbe
in
fwait
mov
mov
and
lods
inc
push
add
push
mov
repnz
rorl
pop
lods
dec
mov
sub
mov
cmp
mov
lret
inc
and
mov
or
add
clc
incb
lret
inc
sbb
int3
fnstenv
jbe
loopne
dec
inc
repz
mov
imul
add
push
jg
fdivrl
roll
into
lods
jae
inc
cld
ret
jb
jmp
mov
xchg
mov
cwtl
or
out
sarb
mov
mov
loope
addr16
add
ret
xor
cli
addb
cmpsl
push
add
jnp
jmp
test
add
das
pushf
inc
xor
add
and
push
loop
add
arpl
dec
sti
and
pop
cmp
shr
add
inc
daa
cmp
jae
lret
test
shll
pop
cmc
addl
mov
inc
lea
inc
xchg
jge
and
or
sbb
jo
out
push
int3
mov
inc
add
mov
js
mov
add
jg
dec
test
imul
mov
push
dec
out
xor
lahf
xlat
or
lcall
lea
add
imul
cmpsb
ret
adc
add
jbe
pop
mov
add
fisttpl
push
bound
add
movsb
out
push
mov
pop
cmp
or
scas
cld
add
inc
inc
fsubs
lret
inc
in
dec
pushf
push
ret
mov
mov
mov
mov
sub
shrb
data16
ret
scas
clc
sti
mov
out
scas
fmull
enter
xchg
les
pop
xorl
dec
xor
add
mov
lcall
cmp
sbb
or
cwtl
add
lods
dec
xor
jle
stc
mov
int3
add
out
cmp
sbb
xor
fistpl
push
aam
popa
repz
jnp
fs
add
jp
int3
dec
inc
negb
dec
cmp
pop
xchg
push
gs
sti
lcall
imul
test
push
shl
jmp
cli
xor
ficoml
cld
icebp
add
adc
lock
cmp
inc
int3
jmp
ret
les
mov
pop
push
insl
xchg
out
lcall
and
loopne
adc
aas
add
call
cmp
dec
and
fadd
lods
std
fs
iret
into
add
lock
mov
pop
pushf
adc
push
push
sub
lds
mov
dec
repnz
sbb
cltd
push
addl
ret
shrb
fidivl
adc
mov
fisubs
fcomps
add
test
icebp
insb
fiaddl
cwtl
out
fs
addr16
push
pop
leave
inc
push
add
sahf
inc
jl
push
mov
ret
add
jge
cmp
fnstcw
imul
push
add
or
sub
mov
std
mov
pushf
ja
scas
arpl
incl
add
in
jbe
push
inc
pop
mov
loop
jnp
inc
clc
cmp
lret
mov
or
outsb
insl
sbb
pop
roll
xchg
in
sbb
mov
add
sar
mov
sbb
fwait
and
mov
loopne
jne
in
pop
out
add
ds
lahf
data16
andl
pop
push
fs
outsb
inc
lds
test
mov
mov
mov
and
inc
dec
int3
jns
dec
jo
add
mov
cmp
mov
and
clc
or
jne
adc
push
mov
sbb
xor
inc
dec
jbe
subb
add
icebp
cmp
movsl
inc
sbb
push
inc
cmc
mov
add
rorb
ljmp
imul
inc
je
inc
sbb
push
inc
daa
mov
fs
mov
cli
mov
shlb
add
aas
inc
lahf
jl
fadd
ficoml
cs
addr16
shll
flds
jle
into
add
dec
hlt
jge
rolb
jecxz
xor
mov
daa
sti
std
cmpsb
stc
ret
fisubs
xchg
push
clc
push
mov
mov
call
push
or
in
ret
cli
dec
jmp
add
jne
inc
add
sbb
xor
outsl
jmp
aad
or
jle
loop
mov
mov
dec
add
insl
ror
lahf
mov
mov
inc
or
push
in
cmpsl
fwait
scas
setge
lcall
push
pop
jbe
inc
jnp
mov
les
push
in
push
cmpl
add
mov
ret
sbbb
cld
mov
xchg
aaa
jne
mov
dec
jb
push
clc
push
inc
cld
sti
repz
mov
aad
sbb
add
cld
dec
add
jl
jne
sbb
add
jno
pop
sub
inc
cmc
sbb
or
push
jg
dec
cwtl
cmp
inc
test
popa
adc
xor
mov
mov
sbb
add
pop
sub
sbb
je
out
jle
add
or
sarb
pop
add
fisttpll
pushf
adc
inc
pop
xor
inc
jmp
data16
movsb
ret
leave
fwait
sbb
repz
sub
push
adc
scas
jl
jne
mov
insb
push
cld
jp
cmpsl
mov
push
pop
lret
jo
ret
sub
push
leave
xchg
rcl
xchg
icebp
push
decb
pop
imul
inc
jl
pusha
repnz
add
add
or
push
pop
mov
stos
ret
mov
dec
add
jp
cmp
adc
pushf
mov
add
imul
out
add
arpl
adc
mov
mov
mov
jle
int
push
or
xchg
or
xchg
repz
adc
daa
xor
jecxz
repnz
push
ss
xchg
call
arpl
xor
lcall
push
hlt
dec
and
xchg
sbb
shrb
in
cwtl
pushf
jecxz
into
ficompl
add
inc
data16
push
xchg
mov
sub
adc
cmpsl
xlat
call
adc
mov
add
ja
push
out
stc
or
inc
mov
xchg
jp
outsb
pop
xor
add
xor
mov
inc
lock
push
sbb
test
fsubr
xor
cmp
sti
sbb
inc
data16
or
mov
in
popa
add
aas
xor
scas
pop
in
jge
cwtl
les
xchg
lret
mov
jae
loop
cmp
test
and
mov
push
gs
dec
ret
test
cli
cld
stos
inc
jo
outsb
cltd
mov
js
jns
mov
inc
lods
push
cmove
xlat
test
outsl
xor
and
or
test
icebp
sub
ret
mov
push
scas
loop
mov
test
das
add
jb
js
ror
sbb
rcr
inc
xchg
int
call
arpl
mov
je
loop
ret
inc
sbbl
cmp
pop
jo
je
shlb
dec
add
insb
fmulp
push
mov
add
mov
add
cmp
dec
repz
cli
xchg
je
add
xchg
loop
push
mov
xor
sub
jbe
test
dec
cmp
fneni(8087
jb
sbb
sub
pop
orb
pop
andl
pop
dec
pop
add
pop
push
lahf
mov
add
mov
dec
xor
incb
clc
xor
sbb
push
inc
in
stos
add
loop
ficompl
xchg
stos
dec
inc
sub
ja
add
jge
in
xchg
jae
xchg
sub
lret
add
mov
leave
add
stc
insl
pop
lods
cmp
inc
push
inc
test
mov
arpl
mov
icebp
mov
add
hlt
dec
cmp
mov
mov
gs
jb
inc
sti
sarl
push
mov
lret
inc
clc
repz
adc
orl
stos
ret
xlat
cmp
fdivs
sahf
stos
add
sub
xchg
jecxz
test
in
mov
add
iret
pop
mov
int3
add
inc
out
sti
jge
jp
leave
add
or
dec
int
push
jg
stos
cmp
imul
add
js
push
cmpsb
push
lock
or
ds
cwtl
add
xor
cwtl
ret
repnz
cmpsl
sbb
dec
ret
fcmovb
test
fwait
push
mov
xchg
adc
mov
repnz
push
add
jl
pop
jecxz
mov
inc
loop
pop
xchg
pop
ret
sbb
sbb
aam
add
dec
lods
pop
inc
push
sahf
xor
jmp
inc
mov
enter
stos
mov
in
jbe
ds
mov
ret
add
cmp
fiaddl
xor
mov
pop
hlt
dec
rolb
test
cwtl
in
mov
mov
fiadds
lahf
jno
ret
and
loop
fsubrl
lods
outsl
ja
fistpll
or
push
sbb
cld
int3
add
mov
loop
add
test
ja
push
inc
add
mov
loope
lret
add
adc
cld
cli
adc
add
or
call
hlt
stos
inc
aaa
mov
jge
add
mov
pop
ja
add
mov
xlat
push
fiadds
mov
stos
leave
jp
lds
inc
mov
ret
dec
push
in
punpckldq
inc
mov
and
scas
mov
call
cld
add
popa
cmpsl
mov
test
mov
dec
cs
inc
popa
or
inc
xchg
cmpsb
and
push
and
mov
add
rclb
push
and
xor
pop
cmc
int
sti
dec
adc
mov
inc
or
jl
sarb
loope
lret
insl
insl
mov
stc
int3
adc
jecxz
or
cmp
ret
add
imul
add
jp
pop
pop
push
mov
xlat
je
mov
dec
dec
mov
cwtl
sti
mov
pop
scas
fidivrl
aas
cli
add
dec
jnp
add
bound
fisubrl
cmp
arpl
out
stc
xchg
cmp
adc
stos
dec
push
inc
and
rcll
test
xor
cs
add
pop
mov
repz
jp
mov
jb
push
inc
jo
add
orl
ss
stos
in
rclb
nop
fwait
lock
add
icebp
inc
out
in
ds
sbbl
add
pop
and
iret
add
dec
mov
mul
enter
jne
add
pop
pushf
gs
jg
and
inc
push
add
jbe
jp
mov
jge
or
and
cmp
add
addr16
xchg
std
daa
outsl
imul
aaa
rorb
leave
inc
xorl
or
jle
jecxz
pop
mov
cmpsb
dec
shll
hlt
je
sub
xchg
inc
add
adc
or
cld
fwait
add
add
or
ja
add
sti
in
popa
cmp
insl
clc
inc
jbe
inc
rcrl
pop
dec
xorl
push
repz
push
roll
sub
add
fistl
out
ret
or
lret
fimuls
dec
dec
dec
enter
jno
mov
sbb
mov
ljmp
mov
push
add
xchg
or
andl
add
push
ljmp
inc
push
sbbb
and
xor
in
dec
icebp
or
out
lods
mov
leave
cmp
icebp
mov
lods
dec
das
add
mov
jmp
loop
cli
out
inc
mov
xor
pop
push
jle
dec
out
add
stos
sahf
loope
push
cwtl
add
movsb
adc
imul
jne
ret
pushf
or
ja
add
and
add
stos
or
enter
mov
jmp
testl
dec
cli
leave
scas
add
fldt
xchg
addr16
sahf
inc
mov
sbb
fcomps
and
or
mov
movsb
iret
adc
test
add
xor
pop
mov
pslld
movsb
int
jnp
fisttpl
hlt
add
out
jg
into
mov
clc
aaa
dec
push
jp
loope
push
inc
cmp
xchg
rcl
xor
fdivrl
add
incb
dec
jb
jnp
pop
stc
loope
mov
push
dec
mov
lods
dec
lock
outsb
mov
rcr
add
inc
and
adc
xchg
lods
shll
sahf
inc
cwtl
test
stos
xor
inc
inc
add
xor
add
stos
pop
int
ret
scas
out
cmp
dec
pop
dec
mov
ret
adc
rep
ret
mov
es
adc
mov
xorb
leave
cli
add
pop
add
rorl
cltd
jno
add
cmp
inc
jae
int
std
sbb
xor
clc
rorl
insl
xchg
incl
mov
jmp
mov
scas
pop
popa
push
mov
xor
pop
xchg
mov
aaa
adc
je
and
pushf
ds
in
test
inc
mov
daa
cmp
pop
int3
imul
in
and
mov
mov
mov
jg
into
cmp
pushf
dec
dec
sti
pusha
inc
add
in
lret
inc
test
leave
add
pop
stc
and
sbb
mov
add
cmp
ret
fcoms
cmp
add
add
std
adc
cmp
inc
outsl
test
sbb
stos
pop
add
add
call
mov
adc
out
jb
lea
add
jae
mov
pop
inc
testb
xor
sti
dec
add
sti
dec
and
mov
jo
inc
stc
into
inc
push
dec
push
xor
add
jmp
add
jmp
and
rcrl
sarb
ret
popf
jo
dec
out
or
loopne
sarb
add
fldenv
cmp
xchg
pop
mov
add
lahf
pop
sbb
addb
scas
inc
ret
lret
fiaddl
dec
fsubl
ljmp
clc
add
mov
popa
mov
vpavgw
pop
cmp
fiaddl
inc
xchg
out
aad
insl
arpl
inc
mov
sub
dec
fadds
out
inc
scas
mov
mov
inc
cmp
mov
mov
lock
cmpsl
sub
sbb
add
or
dec
idivb
pushf
dec
push
fiadds
add
dec
lcall
push
testb
cmpsl
repnz
add
gs
in
add
sub
ss
stos
xor
pop
inc
pop
in
xor
repz
cmp
and
mov
cmp
mov
jg
jle
add
push
shl
in
sti
push
js
sub
add
out
push
pushf
inc
sbbl
imul
inc
sarb
outsb
out
jmp
jl
mov
sub
lret
ret
test
ljmp
add
xchg
jge
out
sti
add
shll
outsb
daa
ds
mov
mov
jae
nop
sbb
jp
in
loop
in
arpl
pusha
add
hlt
jecxz
pop
sarb
rcll
xchg
outsb
push
add
cmp
leave
mov
pop
inc
jae
or
lock
fwait
cmp
xchg
cld
xor
loope
or
ror
mov
add
insb
push
dec
clc
pop
popl
rclb
pop
inc
stc
push
or
dec
jecxz
push
js
insb
mov
in
and
gs
add
dec
fs
test
bound
cmp
xor
sbb
pop
incl
in
pop
scas
and
adc
test
xchg
lods
sti
test
add
lret
rol
sbb
verr
mov
sti
mov
inc
add
mov
in
inc
stos
pop
jb
rorl
mov
popa
call
ds
inc
jno
mov
rcrb
popf
add
iret
decb
inc
fidivrl
cld
es
xchg
and
jg
in
imul
scas
dec
push
add
je
or
mov
jmp
subps
clc
inc
sti
add
divb
aad
sub
sbb
es
rcll
addr16
dec
inc
lods
pop
add
incb
mov
adc
pop
push
add
jp
outsl
add
jg
cmpsb
js
cltd
add
shlb
xchg
xor
leave
mov
in
inc
test
sti
inc
mov
inc
clc
push
and
add
jne
add
sub
add
sub
add
cmpsl
cmp
push
jecxz
mov
iret
xor
and
add
add
and
test
ret
out
inc
outsl
repnz
add
rcrb
push
into
shl
push
not
js
xchg
icebp
push
inc
stos
dec
add
sub
mov
mov
inc
insl
and
movl
aaa
pop
pop
jne
sub
pop
inc
addl
int3
dec
cmp
and
mov
ret
lahf
push
add
mov
and
mov
push
mov
hlt
mov
pop
mov
mov
cmpsl
lods
imul
and
stos
mov
out
dec
and
js
cmp
ret
pop
jno
mov
pop
cmc
push
mov
push
and
shrl
lret
add
jecxz
enter
out
jp
scas
jae
inc
shr
push
fimull
sbb
push
bound
sbb
mov
je
pop
es
pop
cli
call
pusha
add
push
lods
outsb
fs
push
inc
jns
imul
push
xchg
jle
gs
decl
jl
sbb
xor
mov
iret
pusha
and
inc
mov
lcall
jg
gs
dec
ja
inc
mov
push
add
bound
mov
mov
add
add
shlb
out
inc
fisubl
leave
rol
xchg
insl
lods
cmp
add
jnp
jb
inc
inc
imul
addr16
inc
push
pop
lcall
jns
push
mov
adc
sbb
push
pusha
mov
add
in
add
out
push
adc
pushf
dec
ret
ss
add
addl
daa
fidivl
sahf
arpl
inc
sub
ret
stos
dec
cmp
mov
push
insb
loopne
out
add
test
out
outsl
mov
inc
fwait
aad
shlb
pop
iret
jns
aaa
push
add
add
inc
inc
scas
out
cmp
stos
add
dec
lahf
std
xchg
sbb
jmp
mov
cwtl
scas
pop
jmp
dec
add
std
dec
cmp
sub
cmp
inc
mov
bound
std
imul
loopne
add
test
outsb
jge
inc
enter
outsl
aad
out
in
xchg
cmp
add
push
daa
in
into
inc
add
dec
aaa
scas
test
dec
add
mov
lock
push
inc
mulb
sbb
add
jge
sub
mov
pop
and
add
leave
sub
pop
movsl
clc
push
add
jle
xchg
jge
jl
add
or
xchg
add
or
test
cmpsb
inc
push
lret
icebp
jae
xorl
call
xor
mov
popf
add
mov
xchg
cmp
mov
xor
dec
jle
pop
jge
inc
mov
mov
lret
gs
inc
jle
addr16
cmc
mov
add
pop
xor
stc
sub
jp
jl
lret
testb
in
fndisi(8087
add
cmp
inc
add
dec
test
jp
adc
jo
mov
pop
mov
push
cmpsb
xchg
daa
pop
or
lods
clc
add
cli
lahf
je
cmp
pop
lods
fmull
scas
das
ret
aaa
bound
sbb
push
jb
xchg
cmpb
inc
mov
jo
cwtl
fwait
cli
adc
sti
data16
add
jne
roll
andb
add
adc
xchg
cmp
mov
in
or
mov
call
imul
jp
add
mov
in
mov
jnp
imul
mov
add
cmp
insl
iret
push
fucomi
jbe
and
inc
add
and
inc
cmp
imul
push
jge
xor
jg
ja
imul
repnz
ljmp
and
lods
inc
rcr
and
mov
jnp
jb,pt
fiaddl
push
mov
mov
dec
int3
add
aas
ret
push
sbb
fs
add
jnp
test
sbb
push
push
add
data16
int3
jns
push
add
cli
xorb
fstpl
fcomi
in
push
lahf
scas
sbb
ret
jecxz
je
mov
ss
xchg
inc
stos
or
add
push
or
mov
ret
push
add
sub
inc
inc
shlb
mov
dec
std
cmp
add
add
push
lock
call
sti
adc
enter
int3
jg
push
mov
mov
dec
xor
hlt
jecxz
add
das
jns
fidivs
xchg
add
icebp
mov
cmp
inc
test
cwtl
jbe
mov
xor
or
in
sbb
add
or
enter
and
add
jnp
xor
mov
daa
fsubrs
cmp
imul
faddl
sbb
mov
js
insl
xor
jge
dec
mov
adc
imul
add
fsts
mov
movsl
call
inc
xor
mov
push
hlt
sbb
loope
dec
lods
scas
adc
push
add
in
fimuls
add
pop
pop
out
nop
sub
iret
outsb
mov
cmp
inc
inc
xlat
sbb
aaa
cmpsb
shll
inc
clc
shl
or
mov
mov
push
dec
ret
std
xchg
jcxz
mov
xor
lret
int3
jle
sub
mov
test
fimull
jp
sbb
shll
mov
leave
test
pop
daa
cmp
stos
xchg
add
aas
mov
add
xchg
mov
adc
sti
ret
mov
inc
lret
js
stc
jmp
loopne
add
outsb
pop
add
adc
mov
es
push
jecxz
scas
gs
add
jmp
bound
popa
test
cmp
add
rsm
xchg
pop
dec
les
jecxz
cmpsb
add
dec
add
lea
pop
out
lret
in
movl
add
push
mov
jmp
sbb
cmp
xor
lcall
ja
and
outsb
xlat
sub
or
dec
push
mov
jp
imul
mov
cli
add
mov
aam
cld
sahf
fs
or
movb
call
shl
pop
add
insl
adc
flds
aas
mov
dec
jmp
xchg
sbb
pop
pop
stos
add
cli
mov
in
dec
pushf
xlat
int
jecxz
sub
pop
xchg
outsl
decl
or
jp
rcr
data16
das
and
and
dec
lret
ret
mov
sahf
inc
add
inc
add
popa
cmpb
mov
loope
push
lods
dec
mov
add
ds
inc
sti
jnp
jae
loope
call
pushf
add
jp
ljmp
insl
jno
mov
mov
jnp
xchg
enter
loop
inc
adc
addl
xchg
push
dec
or
int
out
mov
cmpsb
lret
inc
add
fisttpl
jo
add
out
pushf
repz
xchg
cmp
stos
sbb
outsb
mov
cli
add
test
add
dec
lcall
mov
sbb
push
add
pop
repnz
push
inc
jl
nop
push
mov
and
pop
push
mov
pop
inc
sbbl
dec
pop
ret
clc
cmp
add
stc
add
rcrl
dec
pop
cwtl
std
pop
add
cmp
inc
add
cli
fs
jb
dec
outsl
xchg
or
push
aam
ret
cmpsl
fists
daa
mov
jl
movsb
pushf
jg
mov
insl
shr
add
jae
dec
mov
cmp
fisubrs
mov
pop
shlb
add
push
or
adc
fsubr
test
lods
push
push
jle
inc
int3
insb
mov
mov
add
push
cmp
inc
jle
inc
add
fmull
xor
add
inc
call
dec
inc
dec
bound
imul
sbb
cmpl
int
pop
inc
xchg
sarl
pop
sbb
xor
add
push
cwtl
hlt
adc
inc
enter
jge
movsl
jb
sbb
add
sbb
test
dec
xor
mov
sub
mov
add
pop
cmpsb
loopne
cmp
add
and
inc
jns
or
fldz
cld
ret
shll
in
cmp
pop
loop
nop
cwtl
lock
cli
bound
jmp
inc
pop
jge
mov
test
jnp
dec
add
mov
repnz
add
and
std
inc
idivb
mov
shlb
or
push
pop
repz
push
imul
xchg
push
add
adc
mov
pop
sub
out
outsl
outsb
dec
xchg
dec
jnp
inc
repz
mov
addr16
out
dec
cmpsb
shlb
in
loop
add
subl
mov
icebp
add
repnz
lret
add
dec
inc
mov
cwtl
inc
stos
inc
ret
and
in
jecxz
add
jl
leave
add
lock
or
mov
pop
adcb
cmp
movsb
stc
pop
mov
mov
aad
loop
into
pop
filds
push
leave
mov
in
or
out
insb
sub
add
cmp
sub
push
std
jae
pop
add
aas
jg
add
mov
fs
shl
repnz
je
dec
arpl
call
fidivrs
outsl
dec
jae
sbb
inc
jne
adc
jmp
jle
add
xor
clc
jmp
imull
cmp
mov
mov
cmp
inc
mov
pop
jecxz
sub
inc
fs
jl
rdpmc
jne
fildl
mov
mov
jno
xchg
jo
cmp
js
mov
jmp
add
decl
add
subl
inc
mov
and
add
notb
add
add
int3
mov
jnp
xor
sti
dec
lock
in
mov
aas
loopne
pop
inc
pushf
push
cltd
sub
das
test
out
int3
pop
bound
add
lret
jmp
jp
pop
inc
icebp
or
mov
mov
jge
push
inc
lea
lcall
xchg
add
ret
sbb
sub
cltd
pop
enter
cmp
or
add
in
mov
lock
dec
dec
mov
dec
in
jp
mov
outsl
inc
pop
push
inc
pushl
mov
data16
movsb
add
pop
push
movsl
call
lock
call
pop
addr16
cwtl
sub
aaa
fiadds
pop
mov
data16
insl
fwait
ror
scas
xor
nop
push
test
xchg
stc
jg
inc
lds
inc
or
cli
add
add
and
loopne
xor
int3
cld
inc
outsl
incb
push
pusha
outsb
imul
inc
adc
std
sbb
jmp
stos
addl
lods
or
lahf
dec
cld
inc
sub
sub
out
stos
push
testb
dec
ljmp
xchg
or
mov
inc
cmpsl
testb
ljmp
xchg
add
dec
rcll
jl
mov
call
inc
pop
add
inc
pop
sub
add
bound
out
add
repnz
push
adc
fstpl
popa
roll
mov
mov
sub
sbb
and
add
sahf
or
cmp
inc
jp
out
sbb
imul
xor
pop
xchg
hlt
cmp
sbb
jecxz
clc
add
sahf
dec
inc
add
pusha
data16
popa
enter
aad
jl
int
mov
sub
jbe
str
repz
jmp
sbb
stos
add
xor
jne
mov
sub
inc
bswap
jbe
add
add
mov
pop
test
inc
sbb
adc
sub
lret
mov
mov
push
sub
jecxz
ss
hlt
std
dec
loop
subl
mov
xchg
fstpl
fdivrp
sub
insl
adc
ret
push
and
jp
int3
dec
inc
repnz
stos
jmp
dec
cmp
hlt
mov
in
bound
cmp
repz
xor
pop
shl
dec
cmpsl
or
ss
add
lods
popa
lcall
les
addl
cwtl
pushf
xchg
sti
add
mov
xchg
or
pop
daa
fucom
dec
sbbb
fbstp
xchg
cld
and
adcl
mov
dec
add
sub
sub
push
fisttps
xor
out
cmp
iret
mov
cltd
cmp
jle
adc
popf
out
xor
mov
push
jne
leave
fadds
pop
bound
enter
inc
mov
ret
iret
aad
cmp
ret
lods
mov
pop
jge
add
ret
imul
pop
and
frstor
call
inc
fdivr
in
push
aad
mov
ljmp
test
inc
cmc
adc
lcall
add
and
lret
in
sub
int3
add
repz
xor
mov
xchg
in
shrb
std
add
js
jb
or
ss
mov
pop
scas
adc
add
pop
dec
jp
mov
cli
mov
jge
stos
mov
push
sbb
add
jl
clc
jbe
pushf
int
cmpsl
jp
scas
inc
jb
add
push
inc
mov
xor
or
xchg
mov
inc
mov
xor
cmpsb
add
or
sti
pop
mov
xor
fldl
je
inc
pop
cmp
xor
mov
mov
insb
dec
sub
add
jle
into
pop
in
leave
cs
aaa
test
xorl
pop
fwait
int3
add
lret
and
jbe
sbb
arpl
jle
pop
pop
sbbl
xorl
rorb
push
jg
add
mov
loopne
js
mov
mov
cmp
push
sbb
outsb
inc
lock
push
jecxz
add
rcr
add
sbb
lds
cli
jmp
mov
addl
icebp
add
xor
cmpsl
inc
leave
call
or
jp
and
in
dec
imul
rolb
pop
or
imulb
in
int3
inc
add
jp
out
out
addl
data16
aad
pop
push
cmp
insb
push
jne
push
push
pop
ret
xchg
iret
in
shlb
jecxz
shrb
add
xchg
loop
inc
mov
push
dec
nop
shlb
sti
ret
dec
cmp
outsb
clc
js
lret
ret
loope
jl
lock
cmp
add
jnp
js
adc
dec
adc
push
loop
cmp
add
push
cltd
mov
hlt
incl
imul
dec
xchg
mov
pop
fs
jmp
mov
std
outsl
mov
sub
mov
cmp
ffree
lret
mov
add
or
push
repnz
in
inc
das
mov
dec
or
mov
and
mov
out
ret
jle
inc
jmp
mov
add
mov
cwtl
cmpsl
shrb
loope
jle
pop
inc
dec
pop
add
into
fimull
dec
aaa
bound
ss
mov
dec
mov
lret
xchg
xor
ret
inc
pop
add
jmp
cmpb
aam
cmc
stos
scas
inc
inc
jp
mov
inc
cmp
in
push
sar
add
inc
fiadds
add
outsl
call
xchg
mov
jge
add
add
mov
cli
xor
pop
add
lret
in
out
loopne
dec
pop
call
ret
mov
aas
mov
stc
add
rorl
ficompl
in
add
inc
pusha
add
movsb
cwtl
test
mov
rorb
loope
cmp
xor
add
lret
test
outsb
jmp
add
and
leave
mulb
xchg
out
lahf
adc
mov
add
incl
or
inc
lret
aad
add
inc
jae
and
clc
jecxz
lock
pushf
insl
lret
pop
mov
inc
cmp
mov
enter
add
lcall
add
mov
aas
add
test
xorb
cmovo
in
adc
cmp
add
fs
fidivrs
fidivrl
jmp
push
jl
fsubs
pop
fcoml
mov
jmp
lcall
add
popa
cli
xchg
add
jb
xor
bnd
inc
test
into
sbb
add
xchg
pop
loope
xchg
jno
add
arpl
in
scas
sti
add
sbb
negl
and
leave
cwtl
sti
pop
add
lcall
add
movsb
mov
fistl
jmp
add
dec
cltd
sub
bound
lret
ss
jmp
mov
sub
mov
sub
popa
outsb
into
push
jp
xor
add
mov
out
add
jl
ja,pn
das
outsl
dec
push
imul
arpl
pop
xchg
jo
cli
ret
jle
and
push
mov
xchg
mov
fidivs
ss
lods
insb
int
lret
jnp
test
and
dec
hlt
fsubrl
add
sub
int
add
mov
inc
lret
shll
incl
test
jp
into
jecxz
jg
scas
add
jmp
lcall
js
loope
lret
add
fldenv
dec
dec
leave
pop
push
cltd
fwait
inc
shrb
ret
cli
test
mov
mov
les
arpl
adc
xor
insb
push
jge
ret
lods
pushf
outsb
out
inc
cmp
xchg
jne
dec
jle
jns
clc
in
stos
cmp
xchg
stc
ret
call
add
and
cwtl
sub
jl
sbbl
fmulp
jbe
jge
xchg
jl
add
fs
and
and
je
dec
jle
int3
add
mov
mov
push
cs
lock
call
scas
mov
pop
out
std
mov
add
cld
movsb
imul
cmp
push
loopne
xor
jb
dec
jno
mov
jne
lods
enter
sahf
call
add
jp
sbb
jno
pop
aaa
pushl
xchg
add
dec
jg
sti
into
ss
in
pop
les
pop
shrb
into
mov
test
and
divb
in
sbb
aam
shlb
jl
fcomps
push
mov
add
pusha
cmp
adc
inc
minps
sub
gs
mov
mov
add
insl
jp
insl
jns
add
push
add
mov
add
std
xchg
sub
rorb
jecxz
fcoms
xorb
mov
outsb
mov
add
shr
std
inc
push
ss
fadds
out
lock
dec
rcl
sbb
repnz
xchg
je
call
and
cmp
mov
cmp
xor
jb
pop
outsb
pushf
into
popa
cmp
inc
sbb
mov
push
loopne
mov
adc
dec
mov
sbb
aaa
adc
dec
fs
add
into
ret
adc
int
sbb
inc
scas
shrb
and
incb
push
call
stc
add
pusha
in
imul
add
je
jecxz
das
jmp
out
jmp
lock
jl
jno
push
push
ret
dec
imul
sbbl
cli
mov
add
ss
fmuls
dec
not
push
sub
sub
sti
icebp
and
scas
or
xchg
dec
and
idivb
push
mov
add
addl
aaa
ljmp
pusha
sti
pop
push
in
movsb
stos
mov
ja
hlt
cmp
mov
mov
ds
push
ret
add
pusha
xchg
mov
push
xor
clc
push
pop
insl
inc
push
xchg
dec
je
ret
push
ret
jecxz
pop
stos
mov
mov
jp
mov
sbb
mov
movsl
sub
sbb
sbb
mov
dec
and
add
mov
dec
cmp
cmc
push
push
jns
aaa
xchg
insl
decb
cmp
pop
int3
in
inc
dec
loop
jle
flds
popa
mov
xor
inc
pop
sub
dec
ret
mov
sti
fdivs
shl
int3
mov
xor
lcall
mov
notl
scas
sahf
cld
add
pusha
xchg
jnp
sub
fsubrs
mov
movl
jl
push
mov
add
adc
cmp
movsb
je
ret
push
pop
adc
leave
jmp
sbb
idivb
movsl
mov
dec
pop
jl
stos
cmp
jns
mov
push
adc
sbb
add
stc
repz
or
cmp
adc
idivb
pop
in
xor
xchg
shll
out
pop
adc
ret
lods
mov
in
mov
push
lock
adc
dec
mov
push
pop
aad
jp
pop
arpl
lret
xchg
sub
faddl
cwtl
inc
jbe
push
xor
xorb
sub
arpl
jp
leave
add
stc
shlb
push
add
cs
pop
ds
or
and
jne
xor
push
sarl
sbb
lds
out
jp
adc
or
cmp
push
repnz
xchg
xor
pop
fcmovne
movb
inc
inc
push
xchg
lea
mov
loop
add
inc
fistps
sbbb
mov
inc
je
adcb
mov
loopne
idiv
dec
cmpsb
mov
add
insb
sub
rorl
leave
cltd
cli
xor
dec
add
and
les
out
jp
jo
sbb
lds
mov
lret
gs
dec
add
lods
lcall
jp
push
rcrb
sub
pop
test
add
mov
cld
add
push
pop
cmp
jp
dec
test
adcb
mov
mov
xor
inc
cmp
lret
push
push
mov
xchg
add
push
faddp
test
dec
sbb
sub
pop
lahf
int3
inc
jae
dec
add
cmp
lds
aam
dec
arpl
and
repz
imul
cli
push
nop
cmc
xchg
inc
push
rorb
push
ret
inc
pushf
add
test
mov
adc
mov
adcb
push
push
shll
mov
out
ror
pop
adc
mov
mov
add
loopne
inc
aas
cli
ja
inc
enter
js
xor
jnp
shlb
das
lock
aaa
pop
dec
femms
inc
jns
mov
ret
mov
iret
adc
mov
and
stc
inc
adc
jb
add
jmp
cmp
push
adc
imul
cmpl
roll
add
xchg
add
faddl
sbbl
popa
test
sti
add
cmp
aad
jns
lcall
in
jg
sbb
mov
ds
push
mov
lock
frstor
cmc
lahf
cmp
pop
jns
add
mov
flds
hlt
jo
dec
push
add
imul
inc
mov
in
push
sbb
call
imul
jl
icebp
add
push
ret
in
jne
xor
mov
std
jge
mov
xor
shll
xchg
adc
cmp
mov
sub
subb
dec
ret
test
jmp
out
add
sbb
sti
adc
lret
mov
sbb
mov
test
jl
das
fcmovbe
xor
imul
arpl
stos
mov
inc
clc
inc
fisubrs
jmp
mov
mov
inc
lods
repz
scas
push
add
push
jmp
out
xor
jecxz
fistps
add
cmpsb
sub
call
stos
outsb
repnz
sti
sub
inc
cld
mov
repz
dec
cwtl
mov
add
lahf
ljmp
pop
jle
dec
sub
and
add
mov
call
loope
aad
lret
stos
insl
push
jecxz
mov
pop
call
jno,pt
adc
mov
xor
cmpsl
icebp
add
jbe
mov
call
sub
loopne,pn
inc
shlb
fs
push
cmp
insl
repnz
addr16
dec
shlb
add
xrelease
pop
loop
out
cmp
adc
inc
imul
cmpsb
xchg
sub
in
xchg
add
inc
and
sub
mov
mov
inc
pop
xor
ret
adc
and
lcall
ffreep
push
xor
sub
jae
add
jns
loope
dec
push
mov
aaa
add
pop
push
mov
mov
imul
adcl
jecxz
xor
sub
jl
push
test
repnz
test
fdivr
push
stc
mov
enter
je
mov
push
mov
cmp
into
nop
mov
jg
xchg
test
mov
jmp
mov
loop
cmp
push
mov
add
std
pop
pop
scas
add
pop
sub
outsl
jle
push
add
pop
lahf
jnp
sub
add
mov
push
lret
add
mov
faddl
insb
out
mov
jp
js
mov
pop
sbb
mov
and
dec
inc
loop
xor
aam
jns
into
dec
add
fnsave
ds
gs
push
iret
mov
aas
fwait
add
ljmp
je
and
mov
jbe
incb
xor
ja
xchg
inc
bound
icebp
leave
ret
test
movsl
arpl
cmp
inc
cmp
psubw
or
add
ret
fimull
fldt
pusha
dec
mov
cmp
mov
xor
rcl
jno
js
add
pop
mov
dec
bnd
bound
or
iret
ja
insb
repz
popf
cwtl
sti
mov
add
sti
add
mov
inc
adc
pop
incb
jp
ss
adcb
add
cli
fidivrl
sbb
add
and
mov
mov
jecxz
ret
jmp
data16
lcall
cld
fiaddl
cmp
pop
mov
cmp
subl
loope
cmp
jecxz
xchg
les
push
cmpsb
mov
cld
test
ret
push
movsl
push
pop
mov
out
add
sbb
ret
add
outsb
shlb
pop
add
lret
adc
fwait
push
ret
cmp
lods
xchg
outsb
mov
pop
inc
sti
test
push
outsl
add
ja
pop
mov
int3
lahf
ret
xchg
out
cwtl
push
repnz
jo
ret
lock
ljmp
jg
iret
sub
and
lcall
lahf
lods
mov
jp
outsb
cs
into
mov
loop
push
xchg
lret
das
add
inc
insl
shll
aam
inc
mov
repnz
aaa
cli
data16
repz
add
inc
call
mov
and
repz
mov
cmpsl
gs
inc
arpl
or
mov
add
mov
mov
push
imul
mov
leave
push
mov
add
scas
mov
add
in
push
sbb
push
mov
icebp
cmp
dec
in
xchg
sub
mov
roll
stos
arpl
lahf
mov
jnp
aam
push
sti
lea
shl
inc
insl
mov
pop
push
jge
pushf
add
sbb
mov
repnz
call
cmp
int3
sub
cmp
add
lods
push
adc
cmpsb
stos
pop
lahf
pop
mov
pop
xor
ss
dec
add
pusha
pop
bound
aad
jecxz
imul
dec
or
fs
cld
add
jg
cmpsb
mov
test
bound
cmp
sub
stos
xor
retw
add
sti
add
push
imul
call
add
frstor
add
jb
sub
or
adc
cmp
in
imul
insl
add
xchg
scas
bound
icebp
mov
int3
ljmp
es
shr
sarb
dec
xchg
push
sti
sbb
add
dec
cmp
add
cmpsb
pop
ret
add
jns
push
inc
and
add
dec
mov
into
jmp
dec
fidivrl
or
out
push
add
cmp
ret
shlb
xor
mov
add
orl
movsl
cmpsl
jp
mov
iret
and
test
cmp
jae
mov
add
jns
push
repz
enter
mov
sahf
addl
mov
imul
jae
jp
inc
sti
xor
fimull
pop
mov
pop
clc
ret
test
adc
pop
inc
pusha
jb
jg
and
mov
out
incl
adc
scas
int3
shrl
cli
jg
mov
jbe
sahf
sbbl
leave
jge
outsb
pop
inc
iret
mov
test
dec
ret
jge
lods
mov
sarl
mov
jno
shlb
js
push
ret
icebp
inc
lahf
sahf
sub
je
or
xlat
jge
lret
mov
xchg
hlt
dec
push
pushf
jle
mov
mov
add
mov
shll
mov
sub
inc
test
outsb
cmp
in
lahf
inc
adc
cmp
jg
inc
sti
inc
jmp
test
xchg
mov
test
or
cmp
mov
add
mov
test
outsb
pop
jl
jns
cmp
push
inc
mov
lods
fwait
inc
xchg
and
ds
jmp
aam
out
rcrb
sbbb
sahf
fidivs
sti
cld
adc
int3
jbe
inc
mov
sub
lds
pop
jns
arpl
sbbl
int3
pop
add
cmp
inc
enter
pop
cld
stos
mulb
out
add
in
and
iret
mov
add
jp
popf
inc
imul
mov
push
jne
xor
push
nop
sbb
add
js
loop
inc
add
stos
push
dec
clc
add
add
push
fadds
inc
or
mov
clc
cld
or
std
rolb
ret
sub
sub
cmp
test
insb
lock
mov
loop
in
or
arpl
iret
idivl
dec
cld
jg
lret
fldt
mov
cltd
add
test
sbb
dec
add
fsubs
mov
sbb
repz
repz
ja
mov
inc
jmp
das
sbb
test
out
add
cli
mov
cmp
int3
sub
and
jmp
ret
icebp
push
sahf
sbb
jne
js
clc
add
dec
js
cmp
adc
sub
cs
xchg
fcom
cmp
jae
nop
add
std
dec
dec
mov
dec
fucomi
add
adc
rcrl
push
add
pop
les
lcall
xchg
inc
add
adc
sub
or
pop
icebp
mov
lods
mov
scas
jecxz
inc
xchg
inc
pop
sbb
push
std
xchg
out
repz
jl
imul
dec
scas
les
gs
mov
mov
add
loop
lret
pop
test
xor
mov
addb
xlat
test
sbb
je
add
in
out
movsl
dec
mov
jnp
adcl
cmc
icebp
sub
test
jo
jmp
sbb
xchg
je
mov
pop
or
loopne
dec
in
jns
push
sub
scas
fsubl
inc
add
adc
lods
xchg
out
push
pop
call
add
jle
in
sbb
cli
mov
cmp
roll
mov
dec
in
fldpi
mov
insb
clc
ret
fwait
ds
int
xor
into
dec
out
or
pop
dec
inc
mov
cmp
ret
imul
lret
sub
or
aaa
lock
fs
outsb
inc
lods
out
mov
jp
dec
mov
xchg
idivl
jle
ret
cwtl
ret
outsl
push
in
lock
dec
cli
pcmpeqb
ret
mov
add
stc
push
enter
pop
add
pushf
inc
sub
jnp
inc
jp
lret
cmc
enter
inc
sti
inc
call
mov
mov
test
bound
mov
jge
jae
fidivrl
in
dec
cli
mov
or
and
repnz
movsb
cmp
xchg
jae
add
jg
lret
mov
clc
leave
jo
fildll
push
add
stos
repz
test
jp
repnz
lea
aad
mov
inc
out
subb
sti
lds
mov
lahf
arpl
scas
loop
inc
push
repz
imul
add
mov
inc
in
fdivr
inc
push
add
jo
call
add
adc
aam
loop
int
jge
lods
lods
mov
add
xchg
sahf
sub
jmp
mov
push
sbb
test
repnz
lock
iret
adc
addr16
jno
inc
insb
push
in
and
xchg
movsb
push
jp
std
shlb
cmpsl
add
test
xorl
inc
bound
outsl
loopne
imul
int
push
jne
push
aaa
add
stc
das
dec
call
stos
push
and
rcl
ud0
sti
add
in
popa
popl
lcall
adc
sbb
add
mov
frstor
arpl
inc
aas
inc
dec
xchg
ror
cmp
xor
mov
add
dec
call
ret
lea
dec
loopne
cmp
add
inc
cld
fidivs
inc
cmp
aaa
popf
xor
test
sbb
dec
sub
rolb
xchg
fbld
sub
pop
sahf
inc
lds
mov
inc
sbb
cmpsl
outsb
add
stc
or
mov
push
cmp
add
imul
syscall
test
scas
ret
sub
mov
add
or
inc
cmp
mov
inc
iret
adc
xchg
mov
in
jp
fcompl
test
scas
mov
sahf
sub
orl
dec
lret
pushf
out
shrl
dec
enter
and
xchg
outsl
xor
popf
mov
repnz
push
int
outsb
out
test
add
sbb
adc
dec
in
jmp
out
pop
xor
inc
les
test
outsb
stc
inc
popf
xor
dec
xchg
arpl
and
leave
inc
popa
sti
mov
dec
lods
push
test
adc
pusha
xchg
cmp
in
sti
jnp
add
pop
push
pop
pop
call
xchg
xor
into
cmpsl
jns
mov
pop
cmp
or
add
sub
enter
sub
fistl
jbe
inc
int3
xor
shll
mov
and
test
mov
out
or
inc
dec
dec
ret
iret
gs
imul
pop
std
xchg
add
ret
push
stos
fimuls
test
les
das
into
xchg
inc
or
add
cli
sub
mov
xor
xor
ret
and
mov
repz
int3
ret
lock
stos
xchg
jo
mov
cld
inc
in
or
mov
lds
movsl
mov
js
xor
dec
mov
push
ja
sahf
add
inc
jns
loopne
push
rorb
push
je
cltd
xchg
cmp
mov
push
inc
rolb
repnz
pop
arpl
mov
cmp
inc
aam
js
cmp
outsl
mov
add
xor
mov
lea
mov
push
inc
adc
jne
add
xor
int3
jge
imul
or
mov
fnop
js
dec
sub
pusha
aas
push
jg
mov
add
scas
imul
lret
add
movsl
rep
fldcw
js
dec
je
aaa
les
out
add
mov
add
cmp
in
rorb
add
stos
hlt
jecxz
subl
call
into
insb
inc
cmp
lcall
jne
fcmovnu
cmc
lahf
add
incb
xor
cs
xor
jl
or
outsb
cmp
pop
or
int3
mov
outsb
inc
mov
xor
adc
mov
rclb
jno
outsb
add
mov
test
mov
xchg
daa
fwait
push
push
xchg
lret
rcrb
and
hlt
sarl
jbe
sub
cmp
mov
mov
add
idivl
xor
jno
cmp
mov
aam
xor
jns
mov
jge
ret
into
adc
jmp
jle
mov
js
movsb
test
mov
rol
or
lea
xchg
jecxz
outsl
pop
xchg
dec
ret
int3
movsl
adcb
cmp
dec
sti
scas
dec
adc
jne
addl
add
out
push
push
pop
fildl
jp
movsb
mov
es
aad
inc
xchg
jecxz
add
pop
pop
aaa
ret
test
add
or
dec
push
jno
and
adc
and
test
lret
mov
jg
mov
into
inc
lds
sbb
cmp
jl
inc
ds
sbb
data16
cmc
ret
jno
pop
add
loop
insb
xor
call
in
arpl
clc
movsl
out
pop
bound
cmpl
fwait
or
mov
adc
add
sub
cmp
dec
pop
inc
aam
push
push
jmp
push
inc
pushf
dec
movsb
sub
in
add
mov
xchg
adc
lret
icebp
repnz
add
int3
dec
cld
pop
mov
mov
int3
add
mov
pop
pop
stc
por
loopne
shll
pusha
subl
mov
cs
ror
inc
bound
ret
call
sub
mov
mov
sarl
lods
dec
adc
push
or
jge
scas
pop
pop
loop
cmpl
add
mov
push
stos
sti
mov
add
dec
mov
bound
fidivrl
sahf
in
add
mov
int3
jp
mov
mov
sbb
sti
shlb
inc
xor
add
lret
cmp
and
andb
pop
into
inc
out
test
or
jns
cwtl
jecxz
pop
pushf
ja
ret
mov
xor
ret
loop
push
jae
jmp
in
loopne
mov
add
js
inc
lds
pop
push
push
cld
dec
int
ficoml
movsl
sbb
in
add
dec
mov
int3
mov
inc
ljmp
sub
mov
ret
daa
sub
add
dec
inc
or
negb
ja
mov
xor
xchg
dec
or
fiaddl
xchg
addl
cmpsb
jmp
das
stc
push
pusha
push
inc
mov
or
or
adc
pop
sub
and
imul
inc
add
lods
rcr
add
imul
bnd
mov
sbb
and
inc
scas
adc
shlb
lahf
jge
dec
sub
cwtl
adc
dec
cli
inc
jmp
ljmp
jns
cmp
movsb
mov
inc
aam
lret
shl
xchg
es
mov
addb
dec
inc
adc
add
lcall
in
icebp
jle
push
cmp
mov
pop
insl
ja
ret
in
push
leave
into
add
pop
bound
lret
xor
ret
leave
and
add
inc
push
pop
addb
mov
push
int3
pop
cwtl
add
cmp
add
or
test
jecxz
std
shlb
ret
push
cmp
arpl
add
outsw
jns
mov
jae
movsb
xchg
mov
dec
dec
arpl
pop
fisubrl
mov
or
stos
jp
imul
fucomi
dec
add
in
js
add
xchg
dec
cmp
outsb
mov
or
mov
mov
lods
and
mov
pop
inc
gs
push
into
cmpsb
adc
inc
mov
add
outsb
inc
nop
pop
aaa
movsb
pop
add
jge
in
sbb
lock
sti
in
ret
fidivs
and
inc
call
mov
mov
fwait
xor
adc
out
roll
shlb
push
mov
inc
aas
jmp
and
adc
jae
clc
pop
xchg
add
lahf
and
add
out
or
add
cltd
std
sbb
inc
pusha
inc
ret
adc
shrb
inc
int
push
cmp
inc
ror
sub
stos
incl
xor
movsl
insb
add
mov
dec
sti
mov
cmp
and
dec
add
and
xor
mov
pop
inc
bound
mov
jmp
add
pusha
jmp
xchg
dec
inc
pop
nop
add
jle
int3
or
xor
add
popa
dec
cmp
mov
or
dec
loopne
lods
add
call
gs
lret
and
add
jg
mov
movsb
mov
dec
leave
xchg
jmp
dec
fadd
xchg
xlat
rcrl
add
and
add
dec
push
adc
add
fs
dec
cld
inc
fwait
or
lret
jae
cli
add
push
lahf
fistl
repnz
mov
or
mov
adc
adcb
jb
dec
cltd
inc
mov
inc
repnz
movsl
mov
mov
orl
and
jae
push
mov
cli
sbb
add
imul
adc
in
inc
and
cmp
das
lods
jg
sub
repnz
mov
jl
dec
ret
xchg
or
outsl
mov
push
dec
or
lds
mov
fiaddl
pop
or
lods
movsl
mov
sahf
fcoms
inc
jno
xchg
jl
cli
ret
imul
push
sub
push
add
scas
or
jp
dec
add
mov
std
inc
add
stc
mov
mov
jmp
imul
inc
jmp
les
popf
lods
pop
pop
inc
loope
pop
xor
mov
xchg
and
loopne
inc
gs
int
sti
clc
mov
in
loope
into
cmp
out
add
out
add
jle
push
add
clc
mov
add
pop
jg
cmp
fidivrl
fdivrp
add
movsl
inc
rcrl
clc
dec
add
mov
jmp
inc
mov
lahf
stos
pushf
add
fbstp
testb
cld
call
add
popa
push
mov
add
rcrb
stos
cmp
jnp
jae
repz
scas
stos
inc
push
and
jecxz
mov
dec
inc
call
mov
add
mov
add
push
test
xlat
add
int
test
mov
or
icebp
jecxz
or
add
into
or
addr16
popf
das
lcall
call
std
pop
in
cmp
in
sub
push
loopne
sbb
xchg
add
pop
cli
in
icebp
mov
jg
xor
inc
sbb
xor
fidivrs
flds
fcoml
jl
lret
pop
mov
popa
inc
aad
mov
fsubrs
and
xor
mov
adc
test
cmp
mov
mov
insb
hlt
cmp
into
stc
jmp
out
fcompl
inc
dec
jb
adc
out
arpl
iret
pop
ds
enter
jbe
inc
mov
rolb
les
inc
mov
jmp
push
fdivrs
mov
add
testl
sbb
push
add
dec
lods
xchg
pop
push
fstpl
and
pop
es
std
and
cltd
lds
stc
push
fiaddl
lret
lahf
test
mov
inc
mov
mov
scas
inc
or
sbb
stos
out
inc
and
movl
dec
pop
inc
add
jne
cmp
mov
add
sub
testb
push
add
dec
daa
fiadds
cmp
pop
dec
jl
lods
ret
and
in
inc
jl
lret
enter
inc
or
js
stos
jnp
push
dec
call
push
inc
push
testl
mov
movsb
mov
lods
inc
add
insl
cld
dec
out
xchg
loopne
xor
dec
inc
sbb
es
dec
enter
inc
std
or
aaa
fadd
repz
mov
mov
imul
add
repz
outsb
stos
ja
loope
add
inc
cld
sub
mov
hlt
inc
test
std
inc
das
sbb
stc
ret
cld
into
dec
jbe
out
in
xchg
add
inc
or
ret
push
rcll
lock
gs
js
dec
add
dec
add
ja
cld
adc
dec
xor
out
add
dec
add
loope
stc
xor
inc
enter
divl
dec
add
xor
lock
inc
out
cmp
cmc
test
pop
pusha
imul
mov
add
jmp
pop
adc
pop
ds
and
outsl
xchg
out
aaa
ja
xchg
fs
add
or
add
sbb
jb
cmc
js
jo
mov
mov
loope
mov
lret
adc
add
mov
insl
call
dec
inc
int3
in
mov
inc
pop
outsb
jmp
sub
mov
fs
xor
test
add
je
lods
add
mov
sahf
add
aam
mov
cmp
sbbb
xchg
scas
pop
mov
ja
aaa
sarb
dec
add
cmp
adc
rcrl
test
std
lock
pop
or
int3
stos
mov
test
out
pusha
in
xor
into
add
dec
add
sti
shl
popf
push
idiv
add
out
fucomi
cmp
add
mov
or
mov
inc
add
cmpsb
jmp
add
imul
outsb
insl
cmp
add
or
cmp
jp
pop
enter
inc
inc
xchg
test
int3
mov
jae
pop
inc
les
test
mov
mov
js
flds
lahf
jae
clc
out
inc
outsl
pushl
cmp
add
mov
add
jle
hlt
dec
sti
scas
cwtl
add
mov
loope
ret
add
adc
sarl
andl
cwtl
xchg
dec
jp
inc
inc
push
stc
sub
movb
pop
jge
outsb
ret
je
add
lahf
scas
outsl
enter
mov
pop
in
push
add
jl
ljmp
aas
xor
in
and
dec
inc
jo
jge
lods
mov
mov
mov
fistl
add
jns
push
and
xchg
add
lret
icebp
js
dec
subl
stos
inc
loop
inc
jnp
rcrb
shrl
push
add
jne
movsb
outsb
and
icebp
add
sbb
adc
jle
cmpsl
andl
xchg
add
pop
or
idiv
xchg
mov
enter
in
dec
stos
or
sub
add
ss
mov
add
test
cli
cmpl
adc
jge
cs
adc
neg
or
ds
rep
add
mov
fdiv
cmp
pop
ret
inc
jmp
and
test
mov
inc
sbb
pop
scas
add
or
jne
lds
jae
aad
mov
mov
xchg
inc
jle
inc
inc
push
push
addr16
or
pop
jl
push
jecxz
jmp
mov
lret
into
frstor
mov
fwait
jne
xchg
push
jb
aas
ret
cmpsb
add
push
ss
pop
push
into
pop
call
data16
mov
fmul
scas
sti
xor
jne
ret
stos
xchg
addb
cmp
jmp
sbb
add
inc
addl
fimuls
call
inc
dec
jmp
ret
cli
jb
or
ljmp
add
push
lret
dec
or
mov
es
fsubl
ror
orl
andl
mov
in
loopne
xor
je
inc
out
jecxz
outsb
xor
sub
fcmovnbe
cld
ret
sub
jmp
inc
ret
out
push
movsb
divl
mov
mov
push
add
repz
dec
mov
ret
outsl
dec
push
mov
inc
ss
gs
and
add
cltd
leave
test
and
add
hlt
enter
add
out
lea
jns
mov
repz
outsl
push
dec
int3
mov
push
pop
jnp
dec
and
pop
repz
add
mov
ljmp
mov
stos
test
dec
dec
cmc
lret
loope
pop
sub
popa
int3
add
mov
repz
jecxz
in
and
daa
jno
sub
test
shlb
dec
and
divb
and
dec
mov
dec
out
les
test
pop
insl
test
fwait
pop
add
xchg
add
addr16
pop
add
mov
pop
jae
popa
testb
test
jmp
shl
lock
inc
add
mov
outsl
addr16
jle
cwtl
xor
cmpsl
inc
lcall
orl
loopne
xor
pop
add
push
lds
cltd
out
stos
mov
mov
push
dec
push
adc
cmp
mov
add
subb
std
sarb
or
mov
mov
mov
stos
stc
jae
sbb
les
lods
xor
call
and
push
add
ret
nop
mov
or
xor
xchg
mov
lods
and
mov
enter
imul
push
test
loop
cmp
fcomi
das
daa
js
imul
les
int
xor
inc
lods
pop
imul
shr
inc
or
or
jae
mov
push
fs
add
dec
stc
fildl
arpl
ret
adc
loopne
mov
or
dec
sti
push
add
cmp
jno
jecxz
inc
inc
addr16
fwait
dec
int3
fsub
lods
stos
add
dec
cmp
subb
adc
mov
mov
dec
push
mov
push
stos
jae
jmp
movsb
inc
hlt
call
popl
out
repnz
ret
mov
add
mov
jmp
cmp
pop
or
in
sar
sbb
fisubs
jle
arpl
fs
adc
das
out
cmpb
jbe
xchg
inc
mov
pop
test
fs
and
fsubl
adc
inc
in
add
push
ja
dec
movsb
pop
add
mov
lods
fwait
icebp
lret
mov
jl
pop
popa
call
jecxz
cmc
pop
cmp
jp
in
add
aas
xor
lret
mov
in
rcll
fwait
or
mov
pop
inc
add
loopne
cld
repnz
insb
orl
cmp
jb
test
add
aaa
cld
dec
clc
dec
dec
adc
sti
and
insl
lahf
cmpsb
movsb
repz
bound
mov
jnp
ret
mov
inc
aas
xchg
sbb
mov
add
push
sahf
or
repnz
add
dec
push
jbe
jnp
add
dec
enter
dec
loope
sbb
mov
sub
lret
pop
addr16
roll
mov
fiadds
mov
lret
jne
jl
sahf
pop
fiaddl
in
sbb
adc
call
inc
mov
xor
ret
ljmp
clc
repz
jl
pop
lret
add
mov
fistpll
add
cli
add
addl
mov
inc
jbe
lcall
push
popa
add
xchg
repz
inc
jb
cmp
add
add
into
fbstp
sbb
xor
xchg
insb
xchg
pop
movsl
dec
xor
test
pop
mov
mov
mov
rcr
jmp
in
out
sub
adc
jmp
fwait
leave
xlat
enter
mov
push
add
jg
cld
mov
cmpsb
push
cmp
ficomps
rol
mov
inc
mov
xchg
sbb
outsl
pusha
mov
movsb
jge
test
push
in
cmp
cmp
mov
and
out
mov
mov
mov
sub
ret
movsb
cltd
outsl
xchg
xor
inc
xchg
sub
fbld
lret
stos
add
call
ljmp
mov
push
inc
xchg
sub
sbb
gs
ffree
xchg
jno
pop
data16
fcoml
sti
enter
add
gs
mov
add
pop
loope
add
negb
cmp
push
scas
rol
pop
sarl
mov
rcl
pop
push
ss
xor
add
jp
lret
dec
movsb
in
cmpl
dec
ljmp
push
add
outsl
pop
add
gs
outsb
inc
lock
arpl
inc
dec
xor
and
pop
pop
daa
roll
jb
cmp
dec
sub
lcall
mov
pop
cmpsb
sub
leave
add
mov
dec
fwait
pop
mov
sahf
adc
out
sbb
scas
aam
inc
fdivs
hlt
sub
rorl
inc
mov
les
cli
adc
out
gs
stc
stos
cld
pop
add
stos
rcrl
loope
test
fsin
out
add
inc
mov
arpl
pop
shl
clc
xchg
rolb
data16
lea
dec
cmp
cmpsl
out
ss
mov
mov
mov
mov
adc
push
fiaddl
cmp
xor
bound
out
call
jge
inc
mov
cmpsl
shrb
inc
inc
es
mov
jbe
and
mov
cld
insl
jecxz
nop
enter
lds
jns
lret
add
imull
sub
and
and
test
dec
roll
pop
aas
bound
inc
arpl
add
add
inc
jmp
lods
ret
add
das
enter
jp
push
stc
adc
gs
dec
fwait
sbb
bound
test
sub
stos
int
adc
in
cld
dec
dec
add
jbe
add
cwtl
mov
and
dec
sbb
lret
pop
pop
add
int
jmp
inc
test
jl
lods
cmpsb
mov
rolb
mov
mov
repnz
ja
cmpsl
scas
inc
test
loope
bound
dec
mov
and
or
adcb
inc
xlat
ss
pushf
leave
jl
xchg
pop
dec
rcrl
add
loopne
inc
rorb
lea
movsb
js
dec
jmp
add
out
ss
add
mov
add
add
inc
mov
cld
add
add
jb
in
dec
xchg
add
ficoms
add
jmp
pop
insl
test
pop
cmp
xchg
loop
cld
inc
jno
inc
inc
lcall
ror
add
mov
add
in
pop
daa
add
stos
mul
imul
xchg
insb
pop
sarb
or
lea
mov
jp
pop
xor
imul
out
mov
mov
jae
or
and
sub
dec
xchg
xor
inc
mov
sub
scas
pop
std
sarl
add
push
and
push
ret
repz
add
les
inc
xor
push
cli
ret
mov
repz
js
inc
and
inc
xor
ret
and
movsl
cmp
test
loopne
jl
dec
or
clc
cmp
inc
fcomip
sbb
gs
ret
dec
andl
cmpb
icebp
mov
xor
fsub
cmp
ret
cli
jbe
mov
fcmovnb
imul
scas
mov
inc
repz
or
push
mov
ja
ret
and
cmp
mov
mov
push
out
cmpsb
arpl
add
test
xor
xchg
ret
fstl
shr
mov
movsl
mov
setle
mov
mov
loopew
adc
jecxz
daa
popf
dec
test
mov
js
out
movl
lds
pop
cltd
mov
add
cmpsl
in
dec
mov
inc
les
imul
jge
mov
push
jo
ja
fadd
outsb
mov
lods
add
cmp
jo
in
jne
inc
adc
lods
add
ficoms
jg
mov
scas
inc
lahf
add
jecxz
pop
inc
dec
pusha
outsb
cli
test
jp
cltd
insl
stc
pop
sub
imul
pop
addr16
shr
cmp
jp
inc
mov
add
and
mov
enter
jbe
lcall
push
mov
sarb
add
jl
ds
insb
adc
js
xchg
dec
dec
push
xchg
stos
shll
mov
sub
mov
push
je
in
sbb
shl
and
jge
xor
js
mov
ret
popaw
loope
add
inc
outsl
lods
sbb
scas
mov
dec
mov
js
in
and
and
and
pushf
cli
ret
push
inc
fsubl
ret
mul
ljmp
mov
sub
mov
push
mov
popf
scas
add
inc
pop
mov
in
cmp
xchg
mov
imul
and
in
push
jge
mov
enter
rolb
xchg
adc
mov
fcmovb
pop
icebp
ret
pushf
fildl
fwait
push
add
ret
add
sbb
mov
in
rorl
xor
lods
push
movl
push
out
mov
fs
arpl
fs
dec
add
xchg
aad
movsl
je
jle
stos
sbb
pop
mov
in
sub
inc
hlt
out
sbb
arpl
pop
mov
loop
or
mov
jbe
sarb
inc
jl
jno
mov
lods
push
sbb
mov
out
decl
enter
out
jbe
adc
repnz
pop
inc
ret
inc
jae
fldt
mov
sbb
in
add
inc
fbld
gs
jne
popa
ret
jno
push
out
bound
ret
lcall
mov
loopne
shl
pop
add
rcrl
mov
addl
mov
rcr
sub
cmp
mov
scas
xorl
pusha
shrb
mov
and
or
in
mov
insl
movsl
cmp
fwait
xlat
inc
stc
dec
movsb
jo
sub
ret
push
sbb
adc
sti
sbb
and
jmp
mov
cli
mov
adc
std
jge
mov
sbb
ret
loopne
mov
add
dec
mov
sbb
add
sub
lods
dec
enter
push
or
lcall
shl
add
adc
add
cmp
push
jecxz
or
dec
mov
je
mov
mov
cld
mov
rolb
inc
lcall
push
cmp
cmp
add
scas
inc
js
push
push
mov
mov
incl
dec
xlat
filds
add
add
jmp
add
movsb
call
js
out
leave
or
jae
loopne
ror
ret
pop
stos
inc
pusha
sub
inc
addl
dec
pop
daa
mov
mov
xchg
adc
mov
addb
xor
inc
mov
call
inc
in
jno
aad
push
jp
aas
pop
mov
add
lea
xor
jp
xchg
pushf
inc
push
cmpl
adc
and
dec
test
mov
xchg
dec
inc
cmp
sbb
xchg
scas
cld
sbb
add
cmp
mov
jge
jbe
lahf
pop
push
pop
add
pop
jb
add
in
repz
dec
jle,pt
pop
int
sti
cmp
fs
cmp
fcoms
hlt
add
in
dec
adc
add
roll
mov
mov
pop
add
sti
dec
mov
jl
add
mov
lcall
add
gs
add
sahf
push
mov
add
pop
mov
in
add
mov
add
jb
add
sub
or
jmp
js
fmuls
out
aaa
xchg
iret
dec
stos
cltd
xor
inc
js
xor
pop
sub
loopne
push
mov
mov
imul
push
test
mov
pop
int3
scas
loope
aaa
mov
xorl
add
imul
jne
rcl
add
mov
and
mov
cld
cmp
add
scas
pop
mov
std
repnz
mov
add
dec
add
sahf
mov
xchg
cmp
sbb
fisttpll
mov
sub
add
xchg
xlat
xor
addr16
dec
in
rorl
in
sbb
bound
push
rcrb
sub
subl
add
jp
add
dec
xchg
sub
cs
jl
and
ret
int3
sbb
fldt
add
jmp
sahf
add
stc
lock
scas
hlt
loope
add
sbb
das
xor
inc
add
mov
lfs
mov
dec
loope
xchg
xor
sub
icebp
shl
fsts
and
testb
add
fwait
add
idivl
imul
sbb
rcll
cmpsb
dec
mov
or
lock
mov
cmp
push
cld
imul
dec
jmp
sub
jbe
iret
dec
jecxz
enter
inc
pop
in
ret
call
roll
rcrl
es
clc
add
lret
test
fisttps
inc
jns
test
add
shll
add
xchg
outsl
dec
fsubrl
cld
or
lods
stos
mov
repz
and
out
add
pop
hlt
dec
testl
adcl
jns
call
xor
mov
dec
rcrl
popf
dec
lods
test
push
inc
pusha
loop
xchg
xor
and
mov
jnp
xchg
push
jb
outsb
mov
pop
es
fisttps
les
fistpl
and
mov
add
outsl
pusha
scas
shr
inc
loopne
scas
mov
jae
dec
pop
xor
mov
insl
repz
jecxz
xchg
push
es
imul
xchg
or
add
pop
add
and
test
inc
push
inc
jle
lock
dec
push
ret
adc
aaa
sahf
dec
add
aad
daa
cld
jno
pusha
xchg
sub
pop
pop
push
push
xor
xor
xchg
mov
mull
jbe
xor
xor
movl
loope
lcall
je
push
test
inc
shlb
xor
je
movsl
push
push
dec
xor
test
loopne
jo
testl
inc
in
and
mull
fs
pop
ss
sub
rclb
bound
in
vpcmpeqw
ja
push
inc
jbe
and
and
test
int
out
in
cmc
ja
and
adc
stos
adc
pop
dec
adc
stc
outsl
inc
scas
push
popa
adc
fisubl
cmc
adc
mov
lahf
push
jo
pop
dec
loop
loop
shll
pusha
imul
aaa
and
adc
mov
lret
jo
aam
push
aaa
mov
scas
fisttps
xlat
pop
inc
scas
add
int3
loop
scas
ret
xchg
push
pop
repnz
movsl
fs
push
rolb
fisttpll
dec
jecxz
aad
mov
lea
push
sub
push
jmp
ljmp
and
imul
jno
xchg
sbb
ss
add
push
and
xchg
test
es
and
push
xchg
or
leave
inc
daa
in
dec
out
push
cmc
pop
jecxz
aam
add
les
in
jne
mov
cltd
test
sbb
mov
and
and
imul
cmp
shr
dec
aad
mov
loope
push
lods
add
adc
stos
jne
shl
xor
and
and
mov
pop
push
test
jo
rcrl
std
pop
sbb
push
mov
je
out
fimull
leave
mov
and
inc
andb
cli
push
ss
popa
stos
inc
ret
shlb
fcmovnb
bound
ljmp
aad
and
rclb
out
mov
mov
pop
xchg
adc
movsl
loop
and
lret
addr16
mov
add
sbb
xor
test
inc
or
mov
xlat
adc
push
aam
dec
inc
push
mov
push
mov
add
add
dec
xchg
xor
popf
mov
test
aaa
es
and
push
dec
jbe
push
inc
jecxz
lds
out
ret
clc
addb
daa
pop
fbld
dec
lret
push
sbbl
push
xchg
add
xchg
adc
test
cmpsb
pusha
in
or
inc
sbb
jo
je
push
aad
inc
movl
pop
vcvtpd2dqy
ds
and
scas
in
stos
movb
es
adc
test
inc
add
add
andb
jo
lock
in
fs
push
inc
scas
popf
int3
das
push
xlat
nop
push
add
les
inc
je
push
add
pusha
aaa
sbb
daa
xchg
popa
xor
rcr
and
inc
jbe
inc
es
test
mov
inc
adc
ret
aaa
jecxz
inc
inc
hlt
sbb
lock
jne
lahf
aam
jae
pop
push
vpmullw
inc
adc
ret
gs
mov
test
sub
jno
arpl
inc
ss
divl
into
jns
adc
pop
dec
dec
in
fs
push
lods
dec
pusha
inc
lds
gs
loope
jbe
push
and
and
mov
push
call
enter
dec
rcr
addb
pop
xor
push
ss
mov
iret
rcl
inc
test
xchg
push
ja
jo
nop
adc
stos
push
in
notl
fs
addr16
sti
fistl
inc
out
and
daa
jg
popa
cltd
insl
add
or
jne
iret
push
sub
ds
out
push
jno
inc
xor
data16
mov
adc
sub
test
fs
and
jo
inc
dec
push
and
test
ret
adc
xchg
rorl
sbb
inc
jo
jmp
loope
add
imul
push
mov
push
test
cmp
and
inc
xchg
xor
shlb
cmc
inc
and
inc
push
pusha
fs
jp
es
ja
ret
push
push
push
test
rclb
dec
pop
jbe
arpl
je
daa
and
add
inc
add
lret
out
in
lds
in
test
inc
xlat
cmp
daa
out
jo
mov
mov
xchg
mull
push
sub
jne
cmp
ror
mov
icebp
ja
adcb
inc
xchg
fbstp
test
adc
out
push
mov
sarl
mov
mov
push
fldcw
pusha
shll
and
or
mov
pop
cmpsl
xchg
adc
xchg
loop
les
jne
adc
jle
push
and
jo
mov
repnz
addr16
lret
jne
notb
lds
es
xor
mov
mov
and
mov
pop
xlat
orb
inc
pop
and
and
add
fldl
pop
xlat
pusha
bound
loopne
jo
xor
add
push
xor
sbb
cmpsb
and
xlat
jecxz
decl
jo
push
data16
push
jmp
aad
in
call
add
daa
inc
push
xlat
dec
rolb
leave
or
popf
dec
push
cmpsl
enterw
and
xor
push
jno
pusha
jnp
call
out
fistl
rcl
push
adcb
adc
daa
xchg
les
fs
clc
call
push
ss
out
shlb
rorb
cmp
ds
xor
push
in
shll
cmc
xchg
test
mov
inc
push
and
and
js
pop
add
inc
daa
and
es
imul
xchg
sbbl
loop
xlat
pusha
out
gs
enter
test
inc
jo
mov
daa
push
jo
adc
pop
aam
aam
cmp
mov
addr16
outsl
ret
push
jo
imul
out
jo,pt
mov
or
in
imul
lret
push
lea
adc
out
push
inc
xchg
fs
xchg
push
andl
cmp
jge
lret
sbb
iret
incb
je
cmp
inc
adc
enter
push
jg
pop
inc
sbb
aam
xor
and
adc
cli
loop
aaa
repnz
scas
add
mov
cmp
xor
sar
daa
out
mov
adc
add
enter
jne
fcoml
push
shlb
rcl
cmc
ja
loop
xchg
pusha
push
arpl
push
and
push
je
push
or
addr16
in
xchg
push
daa
addr16
lret
inc
push
sarb
inc
lock
lods
pop
inc
les
test
popl
inc
cmpsl
inc
push
adc
aam
push
fiadds
push
insl
xor
push
jno
inc
je
sti
stos
and
testb
je
es
cmc
adc
xor
sub
dec
or
test
xor
pop
lods
les
in
pop
and
add
movsl
inc
adc
shlb
out
shrb
inc
in
adc
cmc
addr16
insl
adc
xor
sahf
add
addr16
ljmp
jb
ror
outsl
adc
pop
movsb
mov
sub
push
in
mulb
fisttpll
add
inc
or
sarl
dec
inc
aad
rolb
inc
shlb
or
pop
out
add
bound
xor
addr16
dec
jne
xor
fcompl
jns
add
cmpsb
mov
push
movsl
ror
xor
xchg
in
std
addr16
sbb
outsl
enter
and
out
jecxz
pusha
shlb
fisubl
daa
les
das
xlat
pop
push
sbb
repz
and
xchg
fbstp
push
fsubp
stos
pmullw
xchg
iret
out
dec
gs
add
or
inc
xlat
lcall
dec
jg
dec
aad
pop
push
movsl
jb
pop
mov
cmpsb
and
fiaddl
cltd
pop
das
and
push
and
push
and
push
mul
sub
out
add
daa
inc
mov
and
pop
das
xchg
xchg
daa
xor
gs
ret
xor
data16
fadd
push
xchg
cmc
popa
in
gs
out
rclb
imull
sub
push
adc
dec
push
inc
jle
pop
push
outsb
in
cmp
loop
add
sbb
and
sub
push
test
push
ljmp
aad
dec
adc
insb
outsb
mov
out
stos
cmp
addr16
insb
push
pop
adc
mov
inc
xor
in
lea
dec
fs
mov
fcmovnb
lods
pop
xlat
int3
add
lret
fs
sub
mov
lret
mov
adc
adc
mov
les
arpl
add
adc
and
sbb
jne
clc
sub
lret
sub
and
imul
fs
dec
jne
inc
in
out
jo
or
sub
add
shl
arpl
inc
jne
pusha
xchg
fcmovnb
fstl
scas
lret
shl
or
pop
out
mov
in
mov
cmc
jo
notl
cmpsl
imul
jbe
aaa
imul
test
or
add
and
xchg
je
stos
das
pop
and
ja
or
sbb
daa
add
adc
clc
cmc
fisttps
mov
ss
push
and
in
shlb
mov
pop
shlb
enter
insb
xchg
cli
ret
mov
xchg
adc
push
mov
scas
push
and
xlat
inc
mov
inc
push
daa
pop
ret
xor
rcrb
addl
inc
das
jbe
in
mov
fldenv
sub
mov
or
daa
adc
nop
jno
lahf
inc
mov
loop
xchg
in
pop
rcrb
xorl
add
in
mov
gs
in
add
rcll
xchg
push
les
addr16
lret
inc
and
jne
adc
popa
js
push
rcr
cmpsl
xchg
addr16
pop
fs
sbb
or
and
subb
rolb
adc
fistl
out
addr16
xchg
inc
push
xchg
adc
test
enter
sarb
out
fcmovnbe
mov
fsubrl
or
and
lret
out
inc
je
mov
pusha
popa
cmc
gs
sub
fstps
mov
jle
push
xor
push
push
iret
mov
ja
pop
cmpsl
push
movsl
push
aad
out
pusha
jo
adc
mov
push
pusha
insb
les
repz
add
rolb
or
adc
jne
testl
movsl
push
jbe
les
xorl
js
push
mov
push
inc
inc
sub
insl
inc
xor
je
test
daa
push
lcall
xchg
jle
addr16
jno
shl
aad
bound
mov
pusha
lds
push
cmp
addr16
lods
rcrl
cmpsl
mov
rolb
rcll
inc
gs
in
outsl
out
sbb
adc
xlat
xchg
push
push
and
mov
out
or
inc
pop
in
xor
int
push
stos
xor
imul
fwait
sub
inc
pop
repz
jne
fs
mov
lahf
mov
addr16
test
outsl
pop
ja
push
repz
adc
add
daa
addr16
inc
and
pop
cmpsl
ret
mov
pop
aam
lds
xlat
leave
js
pop
fbld
out
cmc
xchg
outsb
adc
shl
lret
mov
imul
shl
cltd
lcall
shll
dec
add
add
lea
push
push
test
movsl
in
gs
push
add
cmp
out
out
aas
push
dec
je
shlb
xchg
push
xor
adc
jo
test
mov
in
lock
push
push
mov
cmp
or
lret
jl
push
scas
add
adc
je
push
mov
add
movsl
inc
test
mov
lds
push
pop
shl
sub
mov
out
push
fldt
sarb
hlt
mov
or
xor
jne
dec
xor
int3
jae
fiadds
or
jp
in
push
xchg
lods
jnp
fstpt
pop
add
push
adc
adc
ja
ljmp
or
pop
xchg
lds
and
adc
push
push
cmpsl
ds
ljmp
out
shlb
mov
mov
cmp
gs
mov
cmpsl
adc
mov
add
rcrl
push
fisubs
adcb
shlb
loope
xchg
in
add
add
daa
push
inc
and
es
push
sarl
xor
add
movsb
es
out
ss
cmpsb
imul
jo
rorl
fldcw
jnp
fsubs
enter
dec
les
xlat
dec
jne
sub
push
ss
add
daa
decb
arpl
jge
ror
fs
movsl
lock
inc
add
ljmp
and
movsl
out
add
out
adc
es
leave
xor
scas
or
push
aam
in
add
cmpsl
test
mov
push
pop
dec
mov
shlb
xchg
je
xor
stc
mov
mov
repnz
add
negl
jmp
repz
xlat
rorl
push
inc
es
ja
xor
rolb
jecxz
movsl
aaa
lret
jecxz
lret
xlat
in
push
pop
sub
aad
pop
xchg
mov
sbb
pushaw
xor
ja
inc
out
ss
mull
inc
aas
seta
enter
inc
aad
fadd
mov
mov
in
popa
adc
mov
call
in
pop
mov
movsl
or
dec
inc
jne
mov
push
or
push
repnz
dec
xlat
cmc
data16
addr16
adc
jecxz
sbb
pusha
push
js
push
push
dec
inc
and
jo
and
aaa
iret
dec
in
not
in
dec
aam
into
and
es
jno
out
adc
lahf
int3
pop
jb
aam
xor
xor
popa
les
arpl
addr16
and
mul
add
out
fadds
lret
adc
jne
sub
jo
pop
and
or
es
push
xchg
jl
test
lds
rcr
sbb
and
push
int
push
pop
cmc
xor
jecxz
push
inc
add
dec
andl
test
jne
jb
scas
insl
jo
cmpsl
sub
clc
inc
push
jbe
mov
dec
pop
fs
push
xor
and
inc
sub
push
aaa
xchg
ja
shrl
add
fs
push
aam
lods
scas
cli
or
inc
inc
popf
cmc
aam
aad
pop
rorb
pop
bound
xchg
and
jbe
movsl
jmp
jno
xchg
mov
xor
in
jo
arpl
inc
nop
cmp
dec
imul
or
lahf
cmpsl
push
xlat
add
imul
pop
aad
xchg
gs
push
lock
les
adc
xchg
adc
rcr
dec
fistl
enter
pusha
andb
out
fucom
cmpsl
in
pop
aam
adc
push
das
xor
fs
adc
out
ss
ja
adc
jmp
data16
je
outsb
aaa
gs
shlb
js
xor
push
jne
xor
inc
je
call
xor
out
cmc
push
data16
sbb
xchg
dec
outsb
fs
push
ficomps
jo
insl
inc
xor
add
roll
inc
and
mov
mov
daa
stc
gs
push
dec
fcmovnbe
inc
ja
pusha
inc
add
cmpsl
inc
in
fadd
push
gs
rorl
xchg
mov
and
notb
cmpsl
fnsave
inc
xchg
push
pusha
xchg
xor
push
xor
inc
in
push
push
mov
shlb
inc
movsb
cmpsl
insl
pop
gs
inc
out
inc
cmpsl
mov
inc
adc
push
xor
xor
xor
loope
pcmpeqw
or
sahf
cmp
gs
jbe
jge
jne
jne
jnp
test
and
roll
and
icebp
movsl
aad
push
inc
data16
jp
push
xchg
pusha
or
pop
pop
movsl
push
popf
mov
xor
xchg
xchg
pop
stc
and
dec
adcl
jo
outsb
xchg
pop
mov
dec
fbld
aaa
mov
dec
xorl
rcl
sub
jne
lret
xor
incl
outsb
xadd
inc
rorl
inc
jle
pusha
mov
gs
ret
jo
push
adc
pop
js
inc
xchg
in
ss
inc
mov
push
inc
fs
sbb
call
les
nop
cmc
and
jge
add
negb
adc
arpl
aaa
mov
or
push
daa
pop
xchg
dec
add
data16
data16
fmuls
cmpsl
or
push
mov
lret
inc
xor
or
pop
int
cli
or
pop
mov
addr16
sub
nop
mov
add
adc
test
daa
push
fdivr
dec
pushf
es
xor
mov
pop
in
shl
push
push
sub
and
jno
push
pop
and
and
add
je
add
xchg
mov
add
mov
movsl
or
cmpsl
xchg
jnp
fwait
ret
jmp
out
lock
xlat
add
test
inc
adc
daa
inc
adc
mov
aaa
roll
sub
out
imull
add
inc
lret
vpcmpgtw
and
jne
out
dec
stos
xor
mov
repnz
push
les
movsb
repz
in
mov
aaa
xchg
xchg
inc
xorl
mov
xlat
push
ret
jae
ficompl
dec
push
and
arpl
add
sbb
push
out
push
sbb
sbb
xchg
xor
popa
cmp
test
inc
popa
ljmp
cmpsl
jle
mov
dec
jne
ss
push
leave
in
std
push
push
adc
xchg
xor
scas
dec
inc
jecxz
cmp
data16
pop
xchg
pop
or
dec
jo
scas
pusha
outsb
push
adc
ret
movl
pop
cmpsb
add
arpl
insb
pusha
fs
cmc
movsb
add
and
pop
aaa
ficomps
jbe
jae
xor
in
daa
idivl
add
push
dec
pop
pusha
inc
push
mov
mov
and
out
rcl
xlat
lds
push
inc
addr16
outsb
pusha
push
jecxz
test
jecxz
jbe
gs
inc
ja
lret
xor
pop
or
shll
xor
and
xlat
shll
push
iret
xchg
repnz
gs
mov
adc
xor
pop
daa
lea
fldenv
sahf
sbb
push
in
and
fucom
rorb
pop
cli
lods
mov
pushf
cmove
push
addr16
outsl
enter
inc
xor
data16
push
mov
outsl
out
jbe
xchg
aam
xchg
jns
es
push
pusha
mov
mov
stos
adc
ljmp
es
sbb
mov
or
in
push
jne
hlt
and
insl
push
xor
add
rclb
fs
dec
out
lret
lahf
dec
aad
xor
faddl
pop
or
pop
jno
pop
popf
inc
ja
xchg
sbb
add
fildl
flds
repnz
xchg
cmc
xor
aam
maxps
inc
fistpll
in
push
jns
out
add
mov
xor
into
pop
xlat
xchg
addb
jne
xchg
push
movsl
loope
push
daa
push
loopne
jae
dec
inc
xlat
cmp
stc
or
jle
and
mov
push
je
jnp
out
lods
and
push
inc
bound
and
pop
loop
icebp
push
dec
xor
out
mov
les
xchg
sti
adc
out
dec
mul
test
ljmp
add
mov
data16
xchg
xor
pop
xlat
push
or
inc
xor
xor
stos
xor
aam
add
sub
notl
stc
mov
mov
icebp
stos
cmc
mov
cmpsl
cs
inc
or
nop
jb
mov
jae
test
inc
pushf
or
aam
push
push
mov
dec
test
xor
test
shlb
adc
pusha
aad
add
lds
cmpsb
rolb
mov
ss
rolb
push
or
mov
inc
movb
bound
sahf
xchg
push
faddl
arpl
xchg
cmpsl
xor
pusha
mull
out
daa
or
adc
mov
stos
add
jb
push
dec
or
lret
test
xor
mov
add
mov
outsb
in
inc
daa
xchg
xchg
mov
jmp
lea
ret
adc
cmp
outsb
xchg
push
addr16
je
xor
push
shll
aam
mov
push
dec
xor
in
aas
push
les
pushf
cmpsw
pop
outsb
and
sub
aad
xchg
mov
xchg
push
shl
inc
xchg
jbe
push
lret
mov
fwait
inc
xlat
out
mov
dec
pop
insb
sub
add
nop
in
push
pop
jg
test
sbb
and
sbb
cli
lock
imul
or
addr16
and
push
inc
cmpsb
imul
adc
pop
cli
je
and
push
ret
adc
sub
mov
imul
dec
inc
cmpsb
cmp
push
and
insb
mov
dec
push
addr16
scas
or
jecxz
xor
sbb
lret
jmp
in
in
gs
pop
or
shlb
test
ja
dec
add
in
fmulp
and
or
pop
jbe
sbb
dec
jbe
push
test
jno
test
es
gs
push
je
jnp
pop
inc
and
push
popf
fs
outsl
add
xchg
jo
enter
notl
add
push
lds
xchg
jp
xor
pusha
sub
mov
xchg
jmp
inc
mov
cmpsl
outsb
push
pop
cs
shlb
push
xor
jg
clc
inc
jo
aaa
adc
dec
testl
test
test
movsl
testl
sbb
inc
inc
rcl
in
ja
popa
ja
lret
xchg
inc
xor
jbe
mov
call
and
jo
push
test
and
cmc
inc
gs
sbb
adc
jo
pop
xlat
jmp
shl
roll
push
les
imul
arpl
and
adcb
and
xlat
sub
negl
jb
mov
es
pusha
xchg
sub
nop
pop
inc
rolb
or
pusha
gs
adc
xor
ss
stc
shrl
dec
and
push
addr16
mov
jl
push
xchg
push
adc
jo,pn
dec
pop
push
push
leave
push
mov
inc
insb
test
popl
push
xlat
movsl
inc
sbb
daa
sbb
push
adc
push
push
insl
pop
xor
cmc
lds
jle
cmc
xor
daa
push
inc
or
xchg
push
push
inc
movsl
insl
add
inc
aaa
pop
push
adc
adc
cmp
in
or
xchg
xor
sti
sar
dec
lds
sub
push
sahf
dec
xlat
adc
adc
roll
adc
dec
mov
xor
lret
jns
nop
and
inc
inc
jecxz
shl
enter
roll
and
xlat
mov
xchg
push
sub
test
inc
imul
outsb
jbe
ret
aas
gs
pusha
inc
fstpl
push
movsl
daa
jmp
adc
rcll
ds
inc
fs
test
push
aam
and
insl
xchg
es
push
mov
xlat
mov
lret
mov
in
iret
lret
dec
addr16
pusha
repnz
push
mov
or
stc
xor
and
xlat
gs
aad
cmc
dec
sbb
gs
pop
xor
data16
sub
insl
aam
pop
mov
add
xchg
mov
and
ss
sbb
arpl
lds
cmpsl
adc
ret
push
push
loope
or
sub
pop
ds
aam
push
jo
push
pop
push
gs
mov
adc
aam
movsl
out
mov
dec
cmp
lcall
or
mov
sub
lods
xchg
or
test
xchg
lahf
test
lea
pop
inc
addr16
inc
adc
dec
cmc
shrb
data16
movsl
je
pusha
ss
pop
pop
iret
inc
es
xor
and
out
int
aad
xor
fistps
jbe
ret
push
adc
sub
repz
and
jo
jbe
rolb
out
mov
sub
loope
add
dec
adc
xor
push
test
mov
jb
pop
sub
lcall
add
xor
xlat
mov
mov
imul
pop
cld
int
mov
and
xchg
ret
xchg
xor
jg
push
notl
nop
es
xchg
add
sahf
jb
ja
xchg
aam
fsub
pop
push
aad
ja
xlat
adc
push
shlb
lcall
push
add
scas
add
inc
addr16
inc
std
bound
adc
pusha
push
push
jge
jno
adc
add
jnp
je
mov
lods
ja
shufps
movsl
mov
lret
adc
mov
or
push
xchg
stc
movsl
add
aas
inc
pop
jo
lea
jecxz
jg
mov
mov
or
mov
daa
orl
mov
push
std
xor
pop
aad
lret
jp
xor
xchg
and
and
push
mov
push
je
push
add
pusha
push
les
pop
xor
filds
pop
cmpsl
loope
push
adc
mov
movsl
push
push
push
and
sub
imul
lret
xchg
pop
test
insl
sahf
xlat
and
ja
out
jecxz
xchg
ret
xchg
shlb
and
les
adc
in
inc
xor
sub
push
xor
rcll
add
jo
bound
out
lcall
andl
dec
shll
outsb
rol
pop
jle
fs
ret
mov
xlat
xchg
aam
jecxz,pn
pop
out
pusha
sbb
mov
push
hlt
out
and
out
xor
cmc
loop
cmpsl
add
pop
sbb
jae
rolb
notl
das
out
movsb
dec
xor
sbb
out
in
or
jno
adc
sarl
scas
mov
shrb
xor
bnd
inc
aam
xchg
pop
push
insl
mov
xor
jno
push
jecxz
mov
cmpsl
data16
xlat
popf
ja
cld
push
add
scas
adc
xorl
jbe
in
dec
pusha
inc
ss
rcr
jle
popa
xchg
loop
cmpsl
push
jl
out
adc
bts
aam
aaa
pop
inc
loope
dec
lds
sbb
inc
push
inc
shlb
dec
out
mov
lods
jbe
ljmp
inc
loopne
les
xchg
insb
out
pop
xor
cmc
inc
inc
push
lock
sub
shrb
inc
inc
cmpsl
push
mov
imul
pop
push
cmc
push
pusha
lds
ss
pop
inc
fs
test
jo
pop
sbb
xor
out
inc
jmp
jbe
shlb
xchg
xchg
push
and
pusha
jmp
lds
inc
jmp
mov
xchg
inc
pop
lds
aas
dec
aad
push
and
addr16
rorl
adc
xor
dec
adc
enter
or
lock
jecxz
out
sbb
inc
or
adc
stc
and
adc
jmp
out
mov
insb
iret
mov
jne
add
jp
xchg
inc
and
ret
adc
shl
pop
inc
mov
jne
xor
insl
test
aaa
ja
dec
iret
fadds
jne
push
test
movsb
add
xor
inc
xchg
mov
arpl
fs
cmc
xchg
les
inc
inc
dec
fsubs
adc
out
jb
rol
addr16
jns
insb
shll
popa
std
mov
pusha
fcoml
es
div
ret
test
inc
and
out
xlat
test
in
es
inc
push
daa
or
xor
es
mov
jbe
pop
pop
pop
or
popf
and
test
mov
inc
mov
test
add
rol
cmc
in
hlt
adc
js
lahf
scas
and
addl
and
outsb
add
push
or
inc
imull
mov
pop
mov
jge
push
adc
or
and
outsb
clc
cmp
gs
sbb
mov
addr16
fdivl
outsl
add
xor
popa
adc
and
push
pushw
mov
inc
aaa
push
jbe
movsl
fs
psllq
jb
out
imul
mov
and
mov
lock
addr16
sbb
idiv
imul
cmpsl
add
test
adc
mov
push
clc
sbb
push
sbb
pop
push
mov
xor
movsl
and
repnz
cli
fnstcw
and
testb
inc
xlat
cmp
adc
mov
push
mov
jmp
mov
sbb
inc
stos
xlat
lret
sbb
add
lahf
xor
jmp
push
cld
or
jg
xchg
out
fwait
push
add
adc
adc
push
es
faddl
and
movsl
cmp
inc
daa
xor
sbb
mov
and
xor
or
push
fsub
hlt
jo
call
push
icebp
pop
daa
movsl
xor
or
and
and
je
insl
adc
daa
cmpsl
xlat
push
xchg
gs
ret
movsl
xlat
adc
repz
jne
nop
and
arpl
push
pop
negb
jne
insb
ss
and
lret
inc
xor
jge
loop
push
sub
je
lea
sub
xchg
mov
jbe
repnz
xor
cld
fiaddl
push
cmp
outsb
pop
out
shlb
lret
xchg
push
mov
imul
adc
incl
cmc
ja
or
push
mov
mov
movsl
out
cs
pop
insl
push
inc
mov
je
and
xor
cmp
xlat
mov
add
aad
add
pop
mov
not
jmp
mov
pop
inc
and
not
dec
aaa
gs
fsubrp
jg
in
stos
mov
mov
jecxz
imul
iret
outsb
and
das
dec
leave
inc
fcmovb
test
mov
cmpsl
bound
xchg
es
dec
fs
jbe
rcrl
or
adc
cmpsl
inc
addr16
iret
adc
inc
push
and
inc
xchg
test
mov
test
and
rol
or
out
shrl
fisubl
out
push
xor
add
shl
sbb
inc
out
in
adc
add
adc
push
and
es
gs
in
insb
insl
add
inc
scas
lods
cmpsl
aam
pop
jb
adc
pusha
and
loop
aam
loope
orl
imul
sub
jno
inc
add
adc
pop
sahf
ja
in
sbb
test
popa
and
add
lret
out
popf
mov
pop
jo
addr16
cmc
das
dec
jo
add
movsl
pcmpgtb
addl
cmp
mov
inc
shlb
pop
xor
out
jo
gs
addr16
push
in
adc
lock
xlat
lds
clc
fdivrs
mov
sbb
stc
dec
jnp
cmc
mov
aad
sbb
insb
in
xor
iret
lock
shrl
add
movsl
jne
mov
xor
cmp
fidivrl
daa
sub
mull
xchg
popf
mov
pop
addr16
jge
imul
xchg
or
push
push
lock
jno
daa
pop
mov
push
mov
addr16
into
adc
fisubrs
loopne
xor
or
inc
data16
and
pop
aam
mov
addr16
std
mov
fisttpl
repnz
enter
fcom
xlat
jno
push
push
lods
jg
sbb
test
xor
daa
xor
mov
loope
jp
out
test
into
xchg
in
jae
addb
xor
jl
push
sbb
aam
jns
inc
das
loope
cmpsl
sbb
out
mull
inc
or
subb
out
dec
push
fists
jo
mov
fcoml
ja
loope
rcl
daa
imul
sbb
in
aad
arpl
ja
loop
aaa
sbb
mov
addr16
sub
jl
push
es
add
data16
jns
bound
xchg
xor
and
sbb
jne
and
mov
add
popf
mov
inc
fildl
inc
sbb
push
testb
push
mov
adc
inc
sbb
ja
mov
mov
andl
jne
pop
lods
xchg
add
inc
cmpsl
outsb
outsl
xchg
mov
inc
nop
or
repnz
aam
pusha
adc
addr16
clc
cltd
mov
sub
stos
xlat
sarb
xor
gs
es
adc
push
inc
dec
and
xor
stos
mov
divl
ret
aad
push
sbb
cli
mov
xchg
push
pop
add
out
cwtl
scas
sti
or
sbb
xchg
push
and
adc
in
cmp
rcl
cmpsl
xor
inc
push
inc
gs
mov
shll
sub
xor
cmp
ds
das
mov
add
gs
ret
cmp
jle
jnp
loop
and
sub
mov
std
jge
xchg
not
lahf
or
cmp
test
fwait
jmp
cmp
inc
fimull
or
orl
sub
add
sub
ss
xlat
add
and
xchg
test
add
loop
xor
and
mov
fbld
incl
xor
outsl
stos
mov
sbb
sti
jmp
hlt
gs
inc
add
or
jmp
cli
lods
add
mov
out
cld
stos
sti
lcall
jno
ret
scas
sub
jge
lahf
dec
cmp
cmp
and
jb
fiaddl
inc
int3
stos
sub
push
test
mov
ljmp
xchg
stc
dec
add
fisttpl
in
sahf
sbb
mov
test
inc
dec
cmp
or
outsl
sub
mov
dec
add
jmp
aas
aaa
testl
cli
scas
bound
imul
sbb
mov
and
xchg
dec
jmp
dec
in
mov
loop
test
stos
nop
repnz
and
add
lret
add
mov
inc
lcall
add
xchg
cmc
verw
imul
xor
add
cmp
daa
ds
outsb
hlt
pop
cli
add
jnp
cld
pop
lret
dec
mov
test
lret
adc
inc
fldt
test
lock
mov
shlb
and
jb
xchg
insb
lods
mov
outsl
scas
mov
fimull
pop
xchg
push
imul
jnp
jae
dec
pop
ljmp
and
cmp
xor
pop
add
lret
or
les
in
push
dec
enter
fdivr
and
sbb
add
loope
cld
add
clc
ret
fimuls
dec
rclb
mov
lods
inc
mov
cmp
aas
imul
inc
push
xchg
lods
leave
repz
sub
clc
test
dec
data16
xor
clc
xor
les
lods
and
and
mov
pop
popa
xor
test
or
lods
sbb
fwait
jnp
arpl
add
data16
inc
ret
leave
jmp
shrl
mov
stos
clc
sti
repz
leave
lret
dec
jnp
sub
popa
mov
clc
fninit
andl
mov
imul
mov
sti
clc
lret
fcmovu
lods
jae
cmovo
out
jecxz
jb
push
fsubr
cs
stos
into
loop
mov
push
xor
cmp
mov
inc
subl
in
ret
fwait
clc
pop
jecxz
xchg
data16
jge
sub
rolb
jae
shr
cmpb
cmp
xchg
imul
adc
add
call
incb
sti
repz
add
adc
imul
push
dec
ljmp
ds
dec
scas
sti
mov
cmp
cmpsl
repnz
loopne
jns
hlt
clc
xchg
add
jp
pop
inc
jmp
rol
lret
dec
xor
jecxz
ds
movsl
xor
pop
ret
inc
mov
cmp
test
call
mov
sbb
arpl
cmp
add
xchg
rolb
push
imul
lahf
dec
and
gs
divl
rorl
iret
lock
out
add
stos
test
add
inc
addr16
lods
inc
dec
cmp
mov
inc
mov
in
mov
ret
add
mov
sbb
add
mov
dec
add
push
xchg
xor
inc
inc
xchg
mov
or
xlat
xor
dec
cmpsb
cmp
into
jecxz
lret
xchg
rcr
in
testl
lcall
or
cs
inc
out
fstpt
test
inc
jecxz
inc
js
ljmp
jp
dec
cmp
adc
mov
js
jae
enter
jge
add
sub
xor
fldl
jo
mov
inc
fisubs
cmp
data16
enter
or
js
mov
leave
ret
stos
enter
in
es
push
adc
push
jns
add
dec
movzwl
jo
inc
std
mov
cmp
test
jp
adc
sbb
repz
mov
movsb
add
cs
dec
loope
inc
inc
mov
aas
sti
sbb
or
add
xchg
xchg
into
in
mov
std
mov
jge
inc
mov
xchg
stos
nop
add
push
and
mov
in
stc
mov
icebp
and
btsl
add
outsb
adc
leave
push
arpl
dec
dec
add
cwtl
roll
mov
shll
push
add
cs
pop
addr16
add
imul
pop
pop
dec
arpl
outsl
sbb
mov
add
test
add
pop
dec
xor
jg
cmp
jo
pusha
outsl
cli
js
inc
dec
jmp
shll
add
stos
fmul
dec
pop
mov
inc
xchg
call
pop
push
jo
scas
add
sti
shr
incl
dec
jle
std
pop
mov
stos
sub
sub
ret
xchg
jl
test
xchg
mov
in
test
sti
jle
outsb
adc
add
dec
fucom
xor
add
enter
and
jno
add
sbb
lret
mov
mov
mov
sub
mov
in
mov
loop
out
or
jae
push
inc
mov
or
jnp
xchg
xor
ret
lahf
adc
mov
cmp
add
cmp
js
inc
jb
dec
jl
xlat
sti
add
in
push
mov
sub
cwtl
int
push
adcl
sti
jo
in
outsl
inc
fmulp
in
lret
std
add
add
test
pop
in
mov
cli
imul
dec
push
pop
test
jb
xchg
ret
lea
std
fadds
dec
addr16
pop
lcall
add
jo
retw
repnz
icebp
and
ljmp
inc
pop
mov
cld
dec
test
out
push
push
ljmp
out
inc
sti
adc
mov
outsl
add
cmp
push
repz
fwait
mov
cmp
stc
pusha
inc
sbb
stos
je
loope
xchg
std
add
pop
out
lret
pop
loope
ret
pop
sbb
jns
sub
stos
movsb
addr16
mov
jl
xor
ret
mov
inc
fsubr
push
in
movsw
cmp
xchg
idivb
xchg
jmp
adc
ret
mov
jo
ret
push
cmp
mov
jnp
ret
sti
fidivrs
cmp
inc
scas
or
mov
out
mov
add
inc
out
pop
fstps
dec
jge
adc
movsl
sub
jbe
mov
push
fabs
fsubs
mov
repnz
jmp
pusha
rcll
fiadds
mov
cmpsl
sbb
hlt
mov
repnz
adcb
out
mov
dec
jbe
sub
int
inc
jle
mov
in
mov
mov
pop
jnp
jns
enter
movsl
lcall
cmp
insl
jnp
sbb
sub
rcrl
jle
cmp
inc
out
add
mov
pop
outsl
repnz
dec
data16
je
jbe
rol
pop
xlat
jl,pn
jecxz
jle
fisubl
stos
or
ret
arpl
dec
add
push
enter
call
in
lea
nop
sahf
jge
xor
lods
hlt
cmp
rclb
lods
xor
aad
or
add
test
jecxz
jg
add
rolb
stos
mov
enter
cmp
add
push
into
jmp
cmp
js
jg
and
data16
mov
incl
sub
sbb
out
xchg
add
sbb
add
cmp
pop
adc
mov
les
outsb
xchg
and
push
add
ljmp
add
push
lret
test
add
fwait
cwtl
sbb
outsl
cli
and
bound
inc
lea
jp
xlat
mov
push
xchg
call
and
lods
jle
pop
iret
sub
dec
cld
mov
shll
push
inc
xchg
push
dec
outsb
cmpsl
clc
mov
enter
jbe
jl
repz
add
cmp
inc
ja
stc
fldz
dec
ret
mov
inc
sub
sub
int3
iret
mov
dec
dec
repz
sub
dec
cld
jne
imul
les
adc
insl
xorb
add
dec
clc
repnz
cmpsb
mov
xchg
repz
mov
sub
loopne
cld
inc
ret
inc
mov
ds
ficoms
lock
idivl
scas
cld
xchg
xor
gs
mov
fwait
pop
or
sub
push
inc
inc
shlb
call
ret
fdivp
add
repz
jmp
lret
sub
cwtl
adc
shlb
iret
mov
sbb
adc
add
ret
push
mov
add
test
cmp
push
fldl
scas
arpl
jb
cmpsl
outsb
add
hlt
jmp
dec
and
rcrb
lret
push
loop
cli
add
push
mov
fs
add
mov
jle
lods
pusha
gs
jmp
inc
test
add
and
push
pop
sti
dec
jle
jae
inc
mov
cmp
inc
fsubrl
es
in
nop
negl
adc
cmp
add
inc
mov
in
pop
jecxz
xor
lods
push
dec
and
fwait
adc
add
mov
rclb
dec
add
movl
inc
mov
flds
pop
pop
std
mov
fidivrl
push
pop
shll
sub
rolb
aaa
adc
stos
add
jno
mov
arpl
add
sbb
insb
sub
pop
gs
add
or
mov
add
mov
mov
fs
jb
pop
mov
push
pusha
pop
jle
int
call
push
jmp
push
insl
mov
out
add
imul
leave
cmpsb
aam
add
stos
pop
out
and
icebp
pop
inc
stos
in
xor
sarl
stc
es
xchg
push
jge
sti
jecxz
mov
mov
stc
cmpsl
pushf
cmp
in
jnp
push
and
addr16
add
in
pop
dec
adc
imul
xor
cmp
push
in
jne
cmp
das
lds
pop
pushf
or
inc
sahf
xlat
or
dec
pop
iret
mov
add
mov
mov
in
sti
add
mov
cmp
add
repz
mov
nop
push
repnz
add
decb
cmpsl
inc
psubsw
sbb
mov
cmp
mov
add
lock
jg
cmp
sub
psrlq
cmp
push
stos
mov
add
std
shrb
push
mov
in
jge
hlt
add
cmpsb
pop
jmp
inc
jae
push
jp
roll
data16
mov
sbb
int3
jle
call
cmp
adc
cmp
xor
in
adc
or
into
add
mov
cmp
iret
pop
inc
cli
lret
push
inc
ret
and
mov
addr16
pop
loope
pop
ret
mov
test
nop
and
cmpsb
pusha
pushf
out
mov
cld
lcall
lds
imul
mov
dec
and
add
incl
sbb
ficoml
cli
popa
cwtl
hlt
mull
xor
loop
pop
push
insl
sbb
or
mov
mov
cmp
test
add
inc
jg
out
sahf
lock
rcrb
add
fstpt
fyl2x
pop
jbe
jo
push
inc
popl
xchg
or
cs
in
into
dec
jmp
pop
pop
stc
add
cmp
jbe
add
pop
mov
mov
xlat
and
jmp
jg
adc
mov
outsl
add
inc
mov
xchg
jb
bound
stos
inc
sbbl
loopne
mov
sbbb
jl
jne
data16
lcall
sbb
imul
inc
test
lods
out
mov
jb
ficompl
add
push
stos
loope
stc
jns
add
inc
pushf
subl
pop
mov
ret
scas
adc
or
push
inc
push
fwait
stos
add
inc
rcrl
enter
sub
dec
push
and
pushl
cmpl
sbb
and
stos
dec
addl
pop
popa
loopne
and
dec
inc
stc
mov
jnp
pop
mov
add
das
sbbb
xchg
xor
inc
fidivrl
test
jle
xchg
push
or
cmpsb
movb
jmp
inc
cs
in
int
xor
scas
jb
ret
lret
dec
pop
add
fbld
push
jp
xchg
pop
mov
or
cmp
in
std
pop
pusha
rcrb
mov
add
jl
inc
mov
stc
bts
jmp
fwait
das
jb
test
rcrl
mov
cmp
arpl
mov
pop
pop
bound
mov
add
test
jno
in
dec
nop
sarb
mov
movl
and
icebp
mov
stc
cmp
aam
cltd
sahf
add
call
addb
dec
rorb
xchg
mov
hlt
add
stc
and
dec
mov
out
out
shl
add
adc
addr16
out
and
fs
fcmovbe
dec
icebp
dec
loop
fwait
je
dec
jle
push
dec
out
cltd
fcomip
popf
pop
mov
or
pop
add
xchg
add
jne,pn
mov
mov
fiaddl
pushf
rclb
call
rolb
mov
dec
lcall
inc
fsubrs
ret
mov
xor
mov
stos
repnz
mov
dec
inc
dec
movsl
mov
jge
add
shlb
pop
sahf
insl
xor
xchg
in
mov
jnp
dec
mov
sbb
repz
push
xor
add
and
inc
enter
gs
outsb
out
sbb
inc
jecxz
jns
adc
mov
ret
jnp
xor
dec
add
pop
xor
pop
repz
insb
cmp
push
pop
sbb
dec
cmp
push
pop
add
stc
jge
push
mov
inc
xchg
or
and
cmp
push
in
xchg
push
fadds
xchg
stc
sbb
push
dec
jecxz
add
adc
inc
add
fsubs
dec
cmp
pop
orl
pop
aam
add
jns
cmp
sub
dec
mov
dec
loopne
fidivrl
movsl
sbb
ret
add
lock
jmp
xor
stc
jnp
enter
sub
add
outsb
std
bound
or
inc
mov
inc
mov
or
repz
call
loopw
dec
fisttpl
fwait
mov
add
lret
hlt
pop
jns
imul
and
jo
movsb
addb
mov
jbe
repnz
rolb
cmp
jecxz
movsb
jg
jle,pn
jle
popa
cmp
shr
mov
mov
scas
mov
pop
mov
mov
mov
lods
into
push
pop
jns
scas
ret
das
sbb
mov
dec
sbb
not
sub
add
push
addr16
ret
add
test
lods
rolb
imul
or
enter
or
lods
imul
addr16
or
jmp
add
outsl
sti
jae
or
lcall
mov
pop
in
cmp
mov
mov
jle
add
ljmp
inc
sub
fildl
lods
push
mov
sbb
icebp
inc
mov
stc
inc
jp
addb
fsubs
adc
pop
or
mov
add
jp
add
push
fmul
cmp
nop
ret
xor
test
roll
scas
insb
push
jmp
imul
inc
stc
sub
sahf
mov
js
add
pop
dec
dec
sbb
and
and
mov
adc
mov
xor
icebp
jbe
jmp
cwtl
inc
mov
lahf
imul
adc
xor
jae
in
daa
out
cltd
es
dec
bound
cmp
out
mov
add
push
xor
jb
inc
or
mov
inc
jno
sahf
jmp
mov
jnp
inc
movsb
ret
dec
mov
pop
inc
and
adc
adc
je
dec
add
cltd
aam
std
xchg
dec
jge
imul
jecxz
sub
imul
test
inc
jno
outsl
inc
lret
pop
popf
enter
jecxz
decl
cld
lahf
mov
add
repz
out
xorl
ret
mov
jmp
dec
stc
pusha
pop
fstpt
push
add
mov
fiaddl
xchg
pop
icebp
add
addr16
flds
add
das
and
dec
pushf
in
fildl
addr16
call
jmp
inc
in
inc
test
sbbl
or
mov
sub
scas
test
insb
xchg
cmp
mov
in
stc
dec
add
bound
call
xchg
lock
aam
add
fisttps
lods
jbe
clc
add
cmpsb
sbbb
les
out
mov
and
popl
addl
lret
jmp
mov
daa
loope
pop
push
xor
cli
ds
xor
mov
pusha
add
mov
sbb
popf
loope
mov
lock
sbb
add
xor
jl
sub
pop
and
insb
and
inc
mov
call
pop
mov
ret
mov
inc
cli
leave
mov
jg
xchg
cmp
daa
push
xchg
and
sbb
cmpb
push
fadds
mov
pop
add
fistpll
call
pusha
jnp
jge
add
sti
or
inc
std
add
out
inc
cmpb
outsb
faddl
aam
or
inc
lret
and
jl
mov
sub
inc
insl
imul
icebp
jp
adc
or
jle
clc
dec
fwait
cmp
loope
stc
gs
push
mov
in
sub
jg
mov
lods
add
jmp
adc
jmp
xor
pop
mov
pop
out
pcmpeqw
cltd
jecxz
in
pop
clc
jge
jle
test
insb
adc
or
call
pop
aaa
pop
pop
inc
and
ljmp
lock
add
rcll
lods
mov
sub
pop
xchg
stos
push
leave
jnp
add
hlt
inc
jecxz
pand
jb
rep
outsl
mov
pop
add
enter
int3
xor
sbbl
add
jns
cmc
push
mov
fcmovb
add
and
mov
and
aas
and
mov
push
sti
cmpsl
sub
cmove
pop
repz
and
leave
pop
dec
aad
add
xchg
mov
rcll
andl
sahf
loope
jae
cmp
mov
ficoml
fwait
push
aas
pop
jb,pt
ret
xor
scas
test
dec
sahf
jmp
dec
and
ds
mov
jnp
imul
xchg
add
cwtl
cli
push
add
leave
ja
pop
test
addr16
add
pop
mov
add
inc
int3
es
shlb
pop
inc
out
add
lods
jns
cmp
mov
adc
push
mov
mov
add
xlat
pop
dec
aaa
dec
fcomp
inc
cmp
cmp
dec
fldl
adc
cmp
xchg
in
shl
in
add
test
cmp
outsb
sbb
lea
mov
sbb
movnti
fwait
icebp
add
mov
lods
mov
pop
inc
sbb
and
ret
xchg
into
xor
pop
add
popf
add
out
or
add
mov
cmc
xchg
dec
jle
cmp
dec
imul
arpl
inc
aam
in
add
mov
lds
int3
mov
lret
or
pop
repz
sti
adc
mov
mov
lods
push
hlt
dec
and
jecxz
xacquire
or
add
push
mov
es
inc
cltd
xchg
pop
in
into
mov
mov
add
cmp
sub
into
iret
push
fisubs
add
shl
jb
sub
add
sti
outsl
imul
xchg
inc
push
dec
test
xchg
pop
jo
xor
sbb
stc
inc
jge
repz
lods
inc
mov
push
or
add
cmp
push
insb
add
std
sbb
dec
mov
mov
cwtl
cmpb
test
stos
jecxz
pop
mov
paddsw
lods
and
pop
loopne
fldt
repnz
cmp
mov
inc
sub
add
rol
xchg
add
mov
xchg
inc
sbb
push
jg
inc
sti
jae
incb
in
pop
ja
push
and
pop
jle
stc
ret
punpckhwd
add
mov
call
add
cmp
mov
addl
scas
push
jl
ret
ja
mov
scas
stos
aad
test
fidivl
shll
ljmp
stos
std
mov
loopne
pop
pop
xchg
ret
pop
jo
cmc
stos
mov
jae
cld
push
les
dec
dec
jns
xchg
test
leave
add
mov
inc
jne
test
shll
add
andb
add
adc
fs
inc
fisubrl
addb
fcmovnb
add
imul
lds
in
pop
out
scas
cmpsl
test
pmullw
jg
nop
ret
test
pop
mov
inc
lods
sub
mov
inc
fadds
jmp
mov
addps
jo
lods
fidivl
lcall
mulb
push
test
cwtl
push
cmpb
jp
dec
int
bound
jl
xchg
mov
mov
xchg
jle
mov
jg
dec
push
call
cmp
nop
fstpt
cwtl
inc
out
imul
inc
addr16
dec
cmp
insl
mov
fisttps
jmp
push
push
data16
mov
add
inc
or
add
mov
cmc
add
mov
popa
xchg
inc
dec
lret
arpl
jnp
mov
push
mov
add
xchg
jnp
lret
dec
mov
ljmp
sub
fdiv
xchg
cmpsb
sbb
insl
and
shll
mov
mov
pusha
inc
out
dec
dec
sti
jp
cmp
scas
fadd
push
and
mov
pop
in
outsb
jnp
pushf
cmp
mov
mov
pop
mov
add
rcrl
cld
mov
jp
adc
jmp
push
in
mov
daa
mov
cmp
mov
rclb
push
add
inc
fidivrs
add
out
dec
into
sub
fistps
stos
test
clc
cmp
popa
jge
adc
xchg
jecxz
jp
aam
xchg
mov
add
iret
out
add
dec
mov
add
in
repnz
jl
fdivl
push
add
repnz
inc
add
jle
push
inc
mov
inc
in
mov
stos
jae
mov
cmpb
ret
adc
jmp
cmp
std
add
xchg
in
repnz
add
addl
jmp
adc
inc
add
mov
add
sub
and
dec
shlb
lods
data16
jne
dec
call
cmp
stos
inc
jg
dec
pop
jb
dec
cltd
xchg
fdivrs
ret
pusha
ja
sbb
mov
fcom
cmp
push
add
jp
or
pop
jecxz
push
inc
in
inc
cmp
mov
lret
and
add
mov
dec
mov
xchg
stos
in
add
aas
add
movsb
nop
dec
xor
sahf
mov
cld
dec
lods
sbb
dec
sub
dec
nop
fwait
or
pop
enter
cmpsb
loopne
dec
outsl
das
clc
sbb
xchg
scas
movsb
cmpsl
push
test
mov
mov
pop
daa
add
sub
cmp
add
in
sahf
popf
sub
xor
jae
adc
push
sbb
jl
jle
shr
cmp
pop
add
ss
dec
add
nop
jb
pop
pop
in
inc
pop
xor
cmp
ja
mov
cmp
adc
stos
mov
adc
fdivl
mov
and
add
xchg
imul
mov
pop
cmpsl
aam
add
sbb
ret
testl
push
cmp
mov
sti
in
inc
xchg
shll
adcl
jnp
inc
dec
std
nop
loopne
and
data16
out
push
cli
sti
sub
ds
jo
aad
add
or
pop
mov
loope
lods
sub
add
mov
jo
aad
ja
insl
add
cmp
pop
jns
jge
cmp
push
stos
stos
in
mov
pusha
rorl
call
repnz
ja
sub
push
jle
in
add
dec
dec
add
jnp
incb
loope
cmp
push
push
push
push
add
iret
push
jno
sbb
inc
pop
outsl
dec
addr16
adcl
mov
pop
add
hlt
sub
inc
adc
repnz
movsl
add
nop
sub
pop
movsb
int3
mov
ja
ljmp
pop
add
inc
loopne
jns
and
repz
mov
jmp
lret
popa
mov
enter
pop
and
cmp
inc
pop
data16
mov
add
gs
out
fisubrs
push
insl
mov
sti
in
push
pop
out
into
add
xor
add
push
add
dec
mov
jno
popl
cmp
pop
les
js,pt
cmp
cmp
xchg
jmp
adc
xchg
jle
insl
and
ja
push
add
dec
cmp
mov
sahf
mov
lcall
jp
add
mov
aam
mov
test
dec
push
stos
test
mov
mov
jo
cmp
dec
stos
add
xchg
enter
iret
std
jg
inc
sbb
push
push
dec
lahf
aaa
add
jmp
or
and
jg
lret
inc
ss
fwait
pop
mov
mov
ret
fsubs
out
jl
rclb
shlb
iret
stos
dec
add
repz
mov
pop
inc
mov
inc
mov
stos
inc
cmpsl
imul
stc
sub
jb
xchg
mov
mov
repz
loopne
mov
xlat
cmc
inc
dec
nop
mov
pop
xchg
fisubrs
cli
jae
dec
add
jp
aaa
rcrb
popl
jl
arpl
mov
out
mov
inc
pusha
and
inc
or
orb
add
test
icebp
jae
test
repnz
add
inc
xchg
adc
cmpsb
or
mov
sahf
jno
jecxz
data16
mov
mov
pop
subl
pop
and
xor
add
cmpsb
test
stos
loope
add
ret
data16
fdivrs
push
lret
std
pop
xor
out
mov
dec
or
mov
or
addb
mov
fsubs
leave
add
jle
loope
repnz
sarb
loopne
xchg
bound
pop
mov
or
push
test
add
and
inc
popa
pushf
pop
xchg
scas
dec
xchg
and
lds
movsl
inc
fcoml
add
mov
jbe
sub
outsb
fwait
pop
fidivrl
lcall
repz
cwtl
sbb
mov
out
xchg
and
or
cmp
cmp
popf
inc
mov
loope
cs
je
dec
push
mov
add
repz
jle
push
stos
add
rorb
xchg
or
lods
xchg
add
cld
shl
nop
add
push
daa
xor
arpl
test
lcall
add
push
shl
jb
xchg
pop
inc
or
in
loop
add
es
in
add
stc
jmp
pop
sbb
push
jecxz
lahf
mov
or
clc
daa
inc
pop
iret
shrl
push
add
cmc
es
cmpsl
fisttps
jp
arpl
or
stos
push
jp
add
bound
js
andl
test
lock
inc
dec
inc
push
xor
pushf
add
mov
les
pop
pusha
push
sub
test
add
repz
test
mov
mov
shll
stos
je
jo
cmpsl
call
out
sbb
jecxz
repz
xor
add
leave
jp
test
jne
add
aad
pushl
cwtl
mov
pop
out
mov
pop
add
fld
sbb
loopne
push
dec
adc
lea
inc
enter
push
xchg
dec
aam
jg
ret
cmp
add
xchg
nop
lcall
mov
ret
stos
pop
xor
xchg
fincstp
dec
inc
loopne
imul
lds
mov
test
sbb
sti
divb
rorl
dec
out
inc
add
add
and
shlb
sub
outsl
addr16
ret
into
xor
shr
adc
cmp
push
xchg
loope
fdivr
cmc
jge
pop
sub
xchg
outsb
cmp
in
and
add
mov
bound
jge
sbb
mov
dec
cmp
scas
and
ds
in
insl
jne
adc
jg
add
int3
and
sbb
ror
push
cld
test
cmp
add
loope
test
stos
mov
dec
loop
push
loopne
cmp
mov
xlat
xor
add
jp
lcall
jmp
add
add
mov
gs
lret
jl
xchg
out
add
dec
jmp
add
xchg
mov
int3
inc
pop
fs
daa
add
jmp
mov
and
ret
add
cmpsb
pop
lret
push
es
jle
cmpsb
add
sbb
jmp
inc
inc
arpl
call
jecxz
in
aas
out
mov
addr16
cltd
sbb
add
mov
in
pop
stc
addb
cs
mov
fstpt
inc
lea
ret
jmp
add
jo
ds
cmc
xchg
jg
shrl
xchg
push
rclb
add
fisttpll
outsl
and
notb
rcpps
dec
inc
add
dec
xchg
inc
filds
cmp
cs
fnstcw
in
addl
xchg
push
pop
or
mov
cmpsl
imul
call
cmp
popf
lret
pop
jbe
pushf
inc
ljmp
inc
mov
jno
ret
inc
mov
les
mov
insb
fiaddl
std
lock
pop
or
jns
jge
sbb
out
jbe
xor
add
sub
lret
cmp
ret
imul
pop
mov
cmpl
rolb
xlat
or
and
jge
mov
pusha
add
mov
loop
add
shrl
pop
dec
movsb
xor
inc
in
dec
ss
inc
mov
inc
pop
arpl
loope
call
xor
jnp
sub
xchg
filds
jnp
or
sti
xchg
dec
mov
push
dec
pop
jge
js
pop
call
mov
loope
jecxz
dec
xchg
dec
mov
mov
sub
dec
pop
mov
shll
out
and
add
flds
add
in
hlt
ljmp
jmp
add
repz
std
xor
leave
jne
cld
jg
dec
sub
add
dec
ret
test
lahf
mov
mov
dec
mov
lret
cmp
stc
xor
add
sbb
rorb
out
ret
hlt
cmpsl
into
insl
mov
or
add
xor
and
pop
fucomi
pop
addl
push
loopne
xchg
loope
sub
mov
pop
call
aad
inc
jns,pt
in
push
sub
mov
xchg
mov
mov
push
fwait
add
lea
jg
fdiv
jnp
fsubrs
sbbl
inc
fistpl
cmp
addr16
popa
mov
pop
subl
cmp
dec
pop
outsl
test
gs
dec
and
cmp
inc
push
lods
add
mov
ret
add
cmc
mov
dec
sub
cmp
addb
fdivrp
icebp
mov
imul
mov
stc
pop
or
ret
mov
add
dec
push
inc
adc
push
add
gs
jb,pn
hlt
add
arpl
mov
imul
test
push
mov
jmp
push
icebp
pop
add
or
push
hlt
repz
sbb
outsl
jb
lret
and
jge
sbb
in
and
mov
pop
sahf
fildl
mov
adc
mov
js
jp
add
dec
sarb
and
cmp
int
jae
mov
daa
mov
inc
xchg
or
push
int3
std
add
mov
cmp
push
roll
inc
ss
mov
mov
popl
cwtl
jge
jl
mov
imul
mov
testb
jo
insb
push
movsb
sbb
push
xor
in
ljmp
fwait
xor
sub
call
inc
jo
shl
inc
into
add
testb
add
mov
test
pusha
cli
icebp
xchg
pop
add
sbb
or
add
and
ret
add
mov
ss
int3
dec
sub
pop
out
xor
dec
cmpsl
push
sti
repz
gs
jl
nop
out
pop
jmp
or
ljmp
icebp
and
mov
cs
dec
ja
pop
jns
pop
add
ret
mov
cmp
stos
cmp
shl
inc
pop
loope
inc
xor
push
xchg
xchg
push
inc
lock
arpl
xor
data16
add
std
loope
inc
jnp
mov
or
rolb
fildl
push
popf
add
inc
fwait
leave
inc
movsb
and
arpl
add
pand
repnz
clc
int3
decb
bound
mov
ja
xchg
int
cmp
add
sbb
hlt
inc
adc
jbe
jo
mov
out
xor
repz
jge
clc
jbe
mov
in
dec
jns
push
stos
stos
fnsave
jecxz
in
insl
je
cmpsl
or
ret
dec
mov
gs
add
lret
push
mov
cmp
inc
std
jmp
add
inc
jmp
pusha
jecxz
dec
jl
pop
add
testl
cmpb
push
add
pop
mov
add
stc
dec
test
shrb
mov
repnz
cmp
sti
sub
mov
add
pushf
ret
hlt
icebp
pop
in
xchg
push
outsb
movsl
repnz
sbb
pop
add
in
jns
cmpsb
cmp
fdivrs
pusha
inc
xchg
test
popf
enter
lret
xor
jmp
movsl
scas
mov
addr16
in
lock
inc
pop
out
aad
adc
movsb
mov
add
cld
mov
jno
push
repz
mov
inc
xchg
xchg
test
inc
jecxz
cmp
inc
mov
inc
jl
xor
imul
add
testl
inc
icebp
xchg
push
ss
sbb
inc
inc
xlat
rcrw
scas
out
cltd
inc
into
pop
and
mov
dec
or
add
lret
stos
out
fs
insb
sar
scas
fldt
fdivs
cmp
dec
mov
out
adc
or
test
enter
jo
sub
mov
add
push
sbbl
push
pop
filds
insl
add
pop
lret
sbb
cli
mov
add
fiaddl
adc
or
mov
jnp
jmp
roll
clc
push
fcoms
in
sti
add
sub
cmpsl
jmp
pop
cmp
push
cmp
lods
daa
andl
iret
cmp
ret
sarl
inc
dec
sbb
arpl
and
inc
fildll
xor
and
test
outsb
iret
mov
lods
sub
add
cmc
dec
jo
or
add
cmpl
ret
xor
cmp
add
test
subb
ds
sahf
sub
std
jmp
out
test
rcr
in
cmpb
ja
out
incb
mov
dec
hlt
in
xchg
pop
jecxz
push
mov
loop
loope
pop
neg
add
jnp
adc
mov
sub
xor
stos
add
js
out
lds
xor
add
add
add
xor
add
add
imul
dec
add
push
popa
add
add
imul
add
dec
add
add
outsl
add
dec
add
xor
add
add
inc
add
js
add
add
add
add
cmp
add
ja
jbe
add
push
add
add
xor
add
add
push
add
add
inc
data16
fs
add
jae
jae
add
add
inc
add
add
insl
add
add
add
add
jne
add
add
add
add
add
add
add
data16
xor
add
push
add
add
add
inc
add
dec
dec
add
dec
add
add
insb
add
add
add
add
add
add
gs
jo
push
add
pop
add
imul
add
add
jb
inc
jp
add
push
outsb
add
add
add
add
add
add
add
add
dec
add
dec
add
jns
add
add
add
inc
add
add
add
add
jno
add
push
dec
add
add
push
xor
add
outsl
dec
xor
add
arpl
dec
add
dec
push
dec
xor
push
jno
je
push
gs
push
add
dec
add
add
add
je
cmp
add
pop
push
add
add
add
add
xor
push
add
popa
dec
add
add
add
add
add
ja
push
dec
add
dec
push
jp
js
add
add
imul
add
data16
push
add
inc
add
add
add
add
add
push
pop
imul
outsl
je
push
add
add
add
add
add
add
add
add
popa
add
add
bound
arpl
add
add
pop
dec
add
add
add
add
add
push
cmp
add
dec
add
pop
fs
dec
add
add
add
add
pop
push
push
add
add
add
add
pop
add
aaa
add
jae
js
push
pop
dec
add
jne
push
xor
ja
add
add
cmp
add
add
push
add
add
jae
jp
inc
cmp
add
add
dec
add
dec
add
push
add
jb
inc
add
add
add
add
insb
add
add
add
add
dec
add
add
outsl
add
ja
cmp
add
add
dec
add
js
add
outsb
inc
bound
push
imul
inc
add
gs
add
add
jp
add
bound
xor
add
add
add
dec
add
add
push
sub
mov
inc
stc
iret
popa
rcrb
pop
shll
fwait
in
jecxz
jecxz
xchg
add
push
outsb
inc
jmp
push
mov
or
shl
sub
add
lods
iret
cmpsl
add
out
pop
cmp
rcrl
ret
js
jg
xchg
mov
out
ds
sbb
mov
mov
mov
lret
repnz
das
jbe
loope
icebp
jecxz
mov
iret
dec
xchg
jae
aaa
lahf
rcrl
add
mov
stos
jo
add
adc
addb
clc
jmp
ja
dec
fcoms
enter
mov
pand
jecxz
mov
jb
cld
stos
jmp
scas
add
mov
pop
jae
mov
push
jecxz
lret
pusha
xchg
pop
lock
lds
shrb
sbb
clc
jae
test
cmp
xor
add
scas
or
leave
adc
mov
aad
push
out
push
stos
movsl
es
lea
hlt
imul
scas
add
fisttpll
cmp
in
dec
ficoml
test
hlt
shrl
mov
in
adc
mov
ret
pop
pop
repnz
add
subl
ss
xchg
jecxz
repnz
jnp
mov
arpl
or
lods
aas
and
call
mov
inc
sub
imul
and
or
mov
mov
into
in
ret
mov
add
xlat
mov
push
cmp
xorl
add
psubsb
rcrb
arpl
inc
pusha
insb
mov
add
outsb
jg
push
dec
mov
mov
pop
sahf
push
gs
add
adc
shll
mov
lahf
inc
push
add
out
pushf
repz
emms
sarb
ret
jecxz
xchg
sbbb
sbb
pop
shlb
add
dec
hlt
dec
dec
int
add
shrb
insl
pushf
ret
cmp
push
ret
ljmp
inc
dec
mov
mov
pop
movl
cmp
inc
add
adc
repnz
xchg
cmp
hlt
jle
dec
mov
daa
cmp
std
cltd
repz
imul
add
add
jmp
inc
dec
ds
in
push
jmp
add
xchg
lods
arpl
sub
dec
test
jns
jl
lds
bound
repnz
sub
imul
add
loop
xorl
pop
les
push
sbb
xor
jb
cmpsl
add
out
test
adc
mov
mov
add
add
cmp
dec
sbb
mov
stc
mov
push
fldcw
fiaddl
lods
lock
push
in
and
push
jmp
int
repz
add
jecxz
xor
xorb
lods
out
dec
inc
ret
jp
mov
test
inc
mov
fwait
shll
jg
data16
adc
shlb
sub
jbe
nop
dec
in
mov
add
xor
jg
or
cmp
jle
pop
add
test
add
push
repnz
push
add
addr16
fwait
adc
mov
fildll
inc
add
jle
test
dec
mov
mov
dec
clc
fiadds
test
in
sarb
faddl
jno
shrb
addr16
add
push
stc
test
add
inc
mov
xchg
data16
loop
sahf
fldl
mov
movsl
jb
lds
dec
arpl
sub
pop
xor
jns
es
pop
xlat
mov
mov
add
push
in
cmp
jns
mov
call
insl
add
mov
xor
add
inc
inc
repnz
xlat
dec
inc
ret
sarl
addr16
popf
pop
pop
lcall
iret
inc
add
ret
add
mov
jmp
dec
gs
jl
add
inc
inc
pop
fistpll
push
cmp
add
mov
xchg
aad
in
scas
or
sti
adc
inc
faddp
out
icebp
jecxz
into
pop
inc
xor
adc
stos
mov
xor
int3
fs
mov
xor
mov
pushf
fadds
or
push
dec
lods
dec
add
jmp
mov
add
xchg
popa
cmp
xchg
imul
iret
cmp
in
jno
inc
cwtl
int
ret
add
pop
movsl
faddl
cmp
jge
cmp
in
dec
pushf
adc
into
in
dec
cmp
mov
sahf
loopne
loop
jp
jb
mov
adc
outsl
enter
movsl
jecxz
inc
lea
add
jne
lahf
xor
cmpsb
inc
loop
hlt
pushf
or
fiaddl
add
mov
jnp
test
dec
or
repz
add
stos
stc
adc
jg
mov
push
mov
pushl
jae
add
int3
and
loope
cmp
cli
xchg
add
sbb
stc
stos
int
mov
leave
add
imul
inc
sub
pop
xchg
and
ljmp
test
dec
aaa
mov
js
xchg
add
mov
xchg
out
inc
stos
in
loope
mov
ss
lret
aam
in
add
cmp
push
pop
ret
cli
xor
pop
jb
push
cmp
lcall
or
xchg
iret
dec
mov
add
jb
pop
push
repnz
cmp
imul
or
mov
cmp
clc
cmpsb
out
pusha
cmp
popa
mov
inc
mov
ret
jne
mov
and
pop
clc
cmp
ret
inc
lods
jl
add
sbb
out
push
add
mov
xchg
add
and
add
xchg
mov
sahf
repnz
cli
push
jmp
push
stc
jmp
xlat
lret
hlt
out
jno
pop
sti
mov
pushf
aad
out
inc
test
inc
xchg
stos
push
lods
lahf
gs
out
pop
inc
fbstp
and
add
cli
adc
aam
movsl
mov
aaa
fldl
xor
dec
imul
lcall
add
cltd
icebp
mov
mov
push
add
jae
fcmovb
out
fsubrs
stc
add
pop
push
mov
push
js
mov
add
outsl
mov
add
mov
jg
xchg
inc
push
lea
lahf
or
pop
les
jns
lret
incb
jmp
jno
cmp
adc
pop
fidivrl
push
cli
mov
inc
mov
xor
outsl
push
add
incb
addl
pop
mov
inc
adc
pop
arpl
mov
jo
dec
add
stc
add
push
aas
movsb
jae
cli
mov
cwtl
pop
or
pop
mov
mov
push
and
cmp
fistpl
push
loope
xor
jno
jmp
add
pusha
cli
mov
add
notl
push
mov
adc
mov
insl
mov
arpl
fnstsw
fwait
push
push
clc
add
xor
dec
cmp
pop
outsl
dec
add
pop
inc
push
imul
inc
test
mov
jns
mov
bound
icebp
loopne
or
inc
arpl
jp
imul
xchg
add
mov
in
loop
push
cwtl
mov
pop
pop
cmp
jl
jg
enter
inc
and
pop
ljmp
adc
cmpsb
jmp
bound
push
jl
sub
enter
pop
jmp
inc
mov
loope
popa
ret
nop
fimuls
add
cmp
xor
lock
or
imul
into
sbb
adc
push
dec
iret
dec
std
out
or
dec
xor
adc
inc
xchg
jb
mov
jecxz
add
insl
loop
xor
dec
pop
cli
jae
repnz
add
lret
fisubrl
jp
push
fimuls
add
data16
jg
or
push
daa
enter
jb
clc
mov
notl
dec
int
add
jb
cmp
mov
enter
push
sub
into
xor
pop
rclb
and
cmp
push
fimuls
js
jecxz
sarl
loopne
and
mov
add
add
jmp
icebp
sub
mov
sahf
dec
shlb
pop
sbb
cltd
stos
flds
enter
add
push
je
add
add
mov
scas
lcall
jge
add
adc
shl
and
dec
dec
imul
popl
add
loopne
mov
lock
call
xchg
add
mov
test
dec
inc
ja
insb
ret
cld
adc
push
jne
mov
and
stc
and
inc
xchg
inc
hlt
repz
lock
jnp
mov
mov
dec
mov
add
arpl
add
lret
mov
sbb
fists
cltd
hlt
iret
pushf
add
add
test
mov
es
pop
imul
scas
add
inc
push
add
scas
imul
test
xor
dec
mov
push
int
mov
push
cld
lret
iret
add
jnp
lea
int3
add
test
mov
pop
lahf
sub
inc
lds
xor
inc
add
outsb
add
adc
pop
mov
xchg
lock
cmpsl
add
insl
push
pop
je
jecxz
and
adc
push
test
push
jmp
inc
xchg
xorb
nop
lahf
mov
add
ret
mov
out
add
pushf
mov
into
dec
inc
test
pop
decl
scas
jb
add
fistpll
test
pushf
mov
int
sub
ret
add
mov
inc
mov
rclb
or
mov
ds
mov
es
pop
test
xor
stos
mov
jmp
add
dec
scas
loope
int3
inc
es
repz
cli
mov
clc
pop
mov
add
xchg
mov
add
xchg
out
add
loop
add
inc
das
pop
outsl
lret
js
add
xchg
push
rolb
leave
push
iret
into
cwtl
movsl
scas
sub
jne
mov
out
xchg
jecxz
pop
jge
loopne
sti
inc
jmp
cmpsb
lods
add
fcmovu
inc
add
or
add
cwtl
push
mov
popf
addl
mov
lret
and
es
in
jae
ret
lock
push
fs
add
pop
mov
clc
or
mull
pop
pop
ljmp
std
arpl
imul
testb
test
add
adc
add
out
fiadds
cmp
adc
js
pop
outsl
fwait
sub
sti
add
hlt
or
outsb
add
outsl
mov
sti
loope
ret
inc
mov
adc
cld
push
add
test
popw
add
cmpsl
sub
xchg
sbb
adc
out
adc
clc
add
pop
or
or
mov
push
inc
push
dec
add
xchg
and
add
out
test
lret
loope
pop
push
push
push
sar
dec
arpl
fdivrp
fcmovb
cmpl
addl
out
sti
fstpt
mov
xchg
fnstsw
data16
mov
add
jne,pt
mov
or
lcall
xchg
add
repnz
loope
or
and
scas
inc
push
jp
add
adc
faddp
sbb
add
insl
imul
ret
push
mov
jmp
dec
aaa
jge
push
xor
and
clc
fdivrp
fildl
cmp
cld
enter
cmpl
mov
add
je
fisttpl
add
adc
std
cmp
jnp
jl
push
shrl
pop
inc
add
mov
cmpb
add
jb
jae
xor
sbb
inc
iret
lock
mov
pushf
mov
mov
and
out
mov
cmpsl
stc
inc
pop
or
and
insl
dec
add
cmp
and
xor
add
aad
inc
jb
add
jle
out
pop
mov
bnd
arpl
subl
add
xchg
addb
dec
add
mov
sbb
pop
jmp
pop
or
mov
and
mov
and
dec
jge
js
int3
lock
cwtl
add
stos
sbb
add
enter
roll
dec
sti
lret
add
scas
das
loop
in
xchg
mov
fildl
in
add
jle
jne
add
fcmovnb
pop
into
leave
xchg
mov
mov
push
jae,pn
lret
lods
mov
sbb
add
adc
xor
repnz
mov
int3
add
xor
aad
adc
hlt
mov
pop
mov
mov
xlat
jne
stc
dec
dec
inc
push
xor
outsl
scas
in
adc
xchg
inc
scas
lock
and
stos
mov
inc
stos
inc
cmpsl
add
jge
push
lret
mov
add
mov
stc
movsl
lods
pop
inc
sub
or
sbb
push
lahf
mov
pusha
fiaddl
jo
js
xor
adc
pop
mov
test
mov
dec
pop
xor
js
add
fdiv
push
test
dec
sbb
lret
inc
add
sub
shlb
sbb
shr
les
jecxz
dec
sub
aas
sub
cmp
jp
cmp
test
nop
jae
cld
xchg
in
inc
sbb
enter
cmp
inc
outsl
scas
pop
push
rolb
pop
jge
dec
test
cmp
lock
pop
push
xchg
mov
pop
jnp
dec
push
pop
pop
aad
xchg
or
mov
sti
inc
iret
pop
and
daa
add
out
sub
push
add
stos
jmp
pop
sti
inc
int3
inc
xor
pop
std
iret
jo
adc
add
pop
nop
lods
adc
pop
mov
mov
jmp
dec
in
das
sbb
push
daa
cmp
int3
mov
lea
push
pop
data16
stos
add
inc
push
stc
inc
sub
sbb
push
js
add
test
xchg
add
imul
xchg
add
mov
push
outsb
int3
jo
mov
les
pushf
je
add
pop
inc
out
rol
ja
hlt
and
add
jp
mov
leave
lods
mov
mov
dec
ss
or
enter
pop
hlt
stc
xchg
ret
mov
xor
test
add
xchg
push
inc
ds
lods
out
jmp
add
dec
mov
les
xorl
out
sub
add
call
jnp
ds
jecxz
jp,pt
pop
andl
inc
loop
adc
cwtl
daa
sub
lods
add
cmp
add
dec
jg
pop
rolb
or
arpl
sbb
xor
xor
movl
imul
inc
fs
repnz
icebp
loope
sub
jae
cmpsb
repz
ds
aam
jmp
add
xor
jle
pushf
ret
mov
cmpl
cli
add
repnz
fs
in
adc
pop
imul
test
jo
cmp
add
mov
ret
mov
jmp
xchg
adc
push
xor
pop
xor
fidivrs
jns
and
jecxz
sub
and
stos
ds
fimull
jecxz
push
movsl
and
bsr
add
iret
clc
cmp
add
mov
xchg
call
mov
xchg
and
mov
push
shr
inc
inc
cmp
or
adc
sub
int3
dec
xchg
jg
aaa
mov
in
ret
inc
stc
mov
cmp
push
cmp
or
ret
test
adc
inc
and
aam
lods
das
mov
inc
pop
sub
pusha
adc
ret
push
mov
fisubrl
add
or
add
cs
pop
cld
inc
add
movzwl
je
inc
ret
sub
mov
sub
or
xor
ret
mov
push
dec
call
add
jno
daa
movsl
xor
jp
and
jmp
outsb
out
ret
not
inc
mov
cli
out
cmpsb
stos
and
jbe
xor
push
dec
sbb
call
into
stos
lret
bound
pop
xchg
dec
enter
aam
int3
inc
jle
or
les
es
push
in
dec
add
mov
mov
addr16
xor
test
das
sti
incb
outsl
push
pop
scas
mov
add
arpl
adc
outsb
jecxz
setae
addl
cltd
pop
and
cmpl
dec
mov
pop
sbb
les
mov
sbbl
int
dec
sti
cmp
xchg
push
shll
ret
pop
std
inc
and
loopne
inc
xchg
dec
sub
xchg
mov
fwait
insl
imul
jge
mov
lock
inc
add
cmp
call
ficoml
add
pop
or
adcl
adc
mov
stc
push
add
aad
clc
inc
sahf
jbe
xchg
bound
cmp
add
jge
mov
and
ret
mov
add
adc
gs
mov
test
in
aam
pusha
bound
stc
xlat
pop
leave
jae
add
sbb
test
add
or
adc
push
add
xlat
fwait
in
inc
test
dec
push
hlt
add
cmc
pop
inc
dec
xchg
or
sbb
ljmp
addb
jb
sti
jae
dec
add
fildl
add
xor
std
add
push
xor
lods
je
pop
push
sahf
aam
pop
ret
aaa
mulb
insl
mov
jns
repnz
into
movnti
mov
addl
daa
add
lods
icebp
xor
sbb
add
repnz
fstl
shll
cmp
add
jl
in
imul
scas
or
std
int
outsl
pop
or
bound
inc
jg
aas
in
mov
or
push
rclb
test
mov
xchg
aaa
imul
or
cmpsb
xchg
add
dec
jg
fcoms
ret
inc
jp
mov
cwtl
dec
bound
jecxz
call
push
push
data16
mov
pop
outsb
ljmp
push
out
pop
lds
jge
jecxz
mov
pop
sarb
cmp
lcall
mov
rorb
cmpl
out
jle
push
or
dec
clc
ret
dec
pop
pushf
cmp
add
data16
cmp
add
movsb
inc
test
jmp
mov
pop
mov
mov
mov
xchg
jae
sub
fs
adc
hlt
xchg
std
stc
add
push
sub
mov
movsb
cmpl
sub
mov
rolb
push
idivw
pop
inc
mov
shr
cwtl
and
repz
inc
test
sarb
fadd
mov
push
lcall
mov
cmp
push
jo
sub
xor
jp
inc
cmp
xor
fdivrs
mov
add
jno
imul
cmp
mov
sub
pop
jecxz
stc
sub
pop
mov
mov
add
icebp
add
fisubrs
jp
push
pop
sti
jl
sub
add
aad
call
cmp
dec
push
cli
push
push
nop
add
add
jae
inc
cs
add
push
fcompl
insb
sub
in
pop
mov
pop
add
js
jecxz
xchg
dec
mov
mov
mov
push
jbe
adc
aas
fistl
imul
aad
add
adcl
inc
cmpsb
ret
aaa
enter
fadds
inc
mov
pusha
js
jmp
add
rclb
hlt
into
loopne
inc
in
xor
out
inc
loop
mov
add
jo
mov
pusha
xchg
stc
popf
in
mov
jns
adc
mov
cmp
add
orb
pop
dec
enter
ret
cmp
fwait
add
in
loopne
inc
stos
pop
scas
out
add
cwtl
push
es
out
and
jno
fbld
jnp
mov
lret
ljmp
push
cld
cmpsb
add
nop
jnp
and
dec
or
inc
sahf
ja
dec
fcomi
and
mov
dec
and
dec
mov
lods
inc
popf
mov
and
nop
bound
push
pushf
or
cmpsl
mov
inc
test
adc
or
mov
inc
fwait
cmp
mov
ret
js
aam
sti
mov
arpl
add
inc
std
inc
jecxz
xlat
loop
jno
adc
jo
scas
xor
dec
lret
sub
dec
sub
add
ds
ss
inc
mov
sub
fildll
xorl
std
vpmulhw
or
pop
add
dec
imul
lds
dec
dec
cmp
mov
lock
scas
mov
cmp
and
adc
jmp
mov
and
add
popf
jp
xor
cwtl
inc
idivb
es
js
dec
fstpt
rolb
add
xchg
lahf
adc
pop
cltd
sbb
subl
add
sub
add
mov
adc
movsl
or
xchg
mov
cmp
cmpsb
or
add
gs
loope
std
shld
add
aas
dec
push
popa
popf
jae
pusha
add
test
cmp
movb
repnz
int3
sbb
and
out
icebp
data16
dec
mov
cmpsb
dec
inc
rcrb
and
jle
mov
gs
mov
sbb
push
rcrl
cmpsb
add
iret
push
xchg
mov
jecxz
fcmovnb
je
pop
xchg
adcl
cmp
push
pop
insl
call
fwait
aaa
mov
add
sbb
sub
xor
inc
bound
mov
cli
mov
add
mov
pop
sub
imul
add
cwtl
pop
mov
rclb
jge
add
and
cld
scas
push
jbe
enter
out
cmp
and
mov
repnz
cmpsl
push
cmovle
push
add
cmp
xchg
movsb
stos
add
iret
into
inc
push
in
push
add
adc
ja
mov
rclb
test
repz
arpl
add
mov
sti
rolb
movsl
mov
in
add
cltd
ret
or
js
addb
icebp
and
andl
inc
gs
dec
pop
mov
mov
je
fs
lods
enter
jle
out
dec
ds
shl
ja
mov
sbb
lods
add
jno
dec
pop
icebp
xlat
dec
iret
test
js
push
adc
lret
add
and
dec
add
and
nop
pop
add
mov
xchg
fiadds
out
out
stos
xchg
jnp
adc
dec
pop
rcrl
jb
aas
dec
pop
lahf
sub
pop
enter
and
lea
mov
cmp
sti
jmp
std
mov
jecxz
clc
jl
lods
push
ljmp
inc
sahf
decl
fimull
mov
pop
adc
add
aam
addl
jbe
pop
add
xchg
jge
repz
lret
mov
test
add
loope
push
cwtl
in
icebp
jp
ret
or
ja
dec
add
cmp
mov
insb
test
jg,pn
add
test
or
iret
ja
xor
repz
rcrl
mov
js
in
or
add
ljmp
sbb
and
or
lods
pop
mov
dec
pushf
inc
mov
or
iret
insb
xchg
dec
xor
xlat
mulb
dec
push
add
test
xchg
jge
xor
add
jo
out
mov
stos
or
add
bound
insb
sbb
add
jae
lods
mov
and
gs
imul
pop
add
push
in
in
stos
adc
scas
jnp
xchg
add
sti
xor
sub
std
addl
mov
rcrb
add
and
aaa
inc
xchg
or
loope
xor
jecxz
mov
hlt
jmp
insl
add
out
mov
shld
out
into
cmp
push
insl
add
repnz
iret
xchg
int3
add
cmpsb
and
inc
dec
addb
stos
in
es
ret
pop
pop
mov
add
add
adc
mov
js
pop
ss
fidivl
ret
pop
mov
out
dec
jmp
hlt
testl
sbb
das
dec
nop
sub
push
mov
fwait
sahf
in
pop
clc
test
les
std
jecxz
or
or
lods
imul
dec
ja
ds
addr16
xchg
movb
adc
adc
add
sub
jecxz
mov
pop
add
hlt
enter
add
xor
inc
adc
adc
push
icebp
data16
add
cmp
jg
lret
jmp
mov
cmp
pop
add
sub
dec
jg
mov
dec
push
mov
jno
add
cwtl
movsb
jo
mov
or
rolb
sarl
outsb
stc
xchg
sub
loop
addr16
mov
insb
sub
lcall
pop
pop
inc
ja
daa
imul
int3
jns
stc
add
addr16
dec
mov
push
add
cld
lods
mov
or
int
xabort
push
inc
sub
aam
mov
jno
fcmovnbe
xchg
bswap
xchg
push
ss
push
in
mov
outsl
and
mov
mov
adcl
mov
add
mov
pop
mov
test
idivl
aaa
sarl
dec
mov
ret
dec
push
cmp
inc
add
jmp
lcall
push
jmp
jno
add
pushf
imul
insl
adc
gs
mov
inc
jae
cld
cmp
pop
dec
and
add
adc
scas
sti
cmpsl
sarl
add
sub
pop
xor
push
add
add
mov
fs
pop
je
or
cmp
or
push
loope
sub
jbe
pushf
jno
in
push
daa
sbb
dec
inc
shl
inc
pop
rclb
test
pop
fistpl
fwait
sub
sbb
out
call
jl
adc
add
mov
add
cwtl
mov
push
dec
inc
inc
addl
push
and
sbb
bound
push
cmp
pop
pop
add
mov
addl
cmp
fimull
movsl
pop
incb
xor
fucomi
jp
add
mov
bound
mov
aad
loopne
stc
test
lods
fimuls
and
mov
sti
int3
test
xchg
stos
lret
cmp
mov
mov
insl
add
or
sti
repnz
pop
test
inc
fsubs
pop
and
mov
lods
add
push
push
jl
dec
mov
mov
imul
pop
fnstenv
cmp
adc
adc
addr16
sub
mov
loope
pop
and
mov
divb
and
test
pop
jae
xchg
mov
pop
aam
js
push
cmp
mov
pusha
add
jb
int3
ret
fwait
dec
inc
inc
or
and
pop
fcomps
scas
mov
cmp
scas
mov
cltd
or
sti
jle
in
adc
fdivs
loope
add
aas
les
movsl
add
dec
into
xchg
jnp
stc
add
or
insl
mov
push
pop
mov
sti
or
sbb
aam
andl
xlat
fs
inc
insb
add
pop
test
xor
js
ret
shr
push
insl
adc
inc
orl
add
adc
pop
imul
lods
jns
add
inc
enter
rorl
in
jns
add
rorb
mov
repnz
add
add
inc
addl
add
and
hlt
sub
loopne
add
pop
pop
cld
or
mov
arpl
dec
mov
xchg
inc
lret
pop
es
add
xor
movsl
je
pop
pop
add
sbb
ja
push
xlat
cmp
add
dec
scas
stc
add
cmp
mov
lret
repnz
cmp
notb
ds
mov
dec
inc
scas
gs
xchg
jmp
inc
je
mov
std
inc
hlt
add
and
jmp
fimull
push
loope
push
hlt
mov
pop
cmpb
add
les
pop
pop
or
push
loope
push
add
js
addr16
mov
mov
mov
add
in
and
movsl
mov
jnp
nop
dec
icebp
add
ja
dec
add
stc
jbe
fs
inc
add
enter
les
cmp
jle
sub
dec
xor
adcb
inc
xchg
jp
int3
mov
mov
ljmp
push
jmp
push
in
cmp
pop
fwait
into
inc
call
mov
repz
stos
add
lds
push
dec
nop
add
sbb
add
push
pop
lret
cmp
movsb
push
cmc
xchg
jmp
mov
aaa
jecxz
jo
xchg
dec
mov
inc
std
ret
dec
ret
lahf
and
inc
cli
add
insl
sarl
std
les
sub
inc
popf
inc
call
xorl
adc
pop
xor
dec
repnz
mov
test
inc
push
cbtw
add
cmp
jl
or
in
push
add
pop
push
or
mov
pop
rcr
in
push
dec
filds
jmp
xor
cmc
inc
fcomps
pop
iret
jg
out
insb
daa
mov
add
xchg
cmpsb
lahf
icebp
add
loop
nop
add
jmp
cmc
fdivrp
dec
sahf
pop
into
mov
dec
sarl
stos
shl
xchg
add
jne
stos
jecxz
jl
arpl
push
stc
jg
add
repnz
sti
pop
rorb
add
cli
or
xor
pop
mov
sbb
and
jecxz
add
push
ret
les
aad
adc
inc
nop
sub
inc
mov
out
xchg
jo
xor
inc
ret
xchg
xchg
imul
pop
js
fbstp
push
jg
pop
ret
insb
sub
jle
lcall
and
lods
cld
add
add
loop
dec
addr16
inc
in
add
mov
pop
jnp
push
ret
inc
mov
bound
pop
add
mov
clc
pop
cmp
add
pop
cli
dec
add
add
add
nop
or
mov
out
xor
icebp
inc
push
add
and
imul
sbb
dec
inc
xchg
out
and
in
xor
inc
jne
mov
lcall
cmp
lods
inc
orb
mov
pushf
add
xchg
push
es
pop
add
or
pusha
add
cld
inc
stos
in
gs
scas
add
pop
aam
pop
push
in
mov
sub
nop/reserved
cs
rolb
lret
scas
loope
cli
mov
push
add
jp
add
mov
into
sub
cltd
inc
imul
movb
mov
frstpm(287
dec
call
add
in
pop
xor
je
mov
or
pop
xor
ljmp
std
fildl
insb
pusha
add
pushf
pop
stc
mov
mov
fs
iret
fwait
mov
icebp
ret
call
sub
cs
dec
aas
and
outsb
xlat
fwait
ljmp
rclb
fstpt
test
rolb
inc
xor
cmpl
sub
ds
dec
js
rclw
xchg
cmp
mov
add
insl
xor
pop
gs
cmpl
cmp
add
stc
nop
mov
add
mov
xor
inc
aaa
mov
scas
lcall
cmp
cmp
scas
adc
mov
sbb
cmp
sbb
pop
pop
add
mov
dec
inc
pop
fmulp
cmp
stos
or
add
mov
add
cmp
std
inc
cli
js
mov
leave
xchg
mov
clc
xor
call
mov
ret
outsl
scas
jmp
add
sub
ror
push
add
aas
mov
add
shl
xlat
icebp
sub
mov
cli
pop
dec
pop
inc
jnp
cmp
jle
test
scas
inc
mov
push
cli
pushf
psubw
cmp
insl
or
add
sub
jg
add
les
push
sbb
add
jne
cmp
lods
repnz
sbbl
add
in
pushf
dec
int
scas
add
fimuls
loopne
inc
je
cmp
pop
outsl
roll
jle
sub
jp
cld
add
scas
ja
push
aaa
cwtl
add
fs
inc
lcall
mov
addr16
je
xchg
or
jno
inc
and
mov
inc
cmp
pop
sub
rolb
into
inc
fimuls
data16
add
jecxz
repz
mov
xorl
add
jp
fidivrl
fwait
ja
es
lods
mov
call
lahf
stc
add
rorb
adc
pop
icebp
mov
aas
out
add
into
rol
add
out
cmp
clc
push
jl
inc
jge
add
push
inc
xor
dec
mov
sub
add
out
lock
xor
push
add
cwtl
push
lods
pop
jb
jbe
loop
dec
or
ss
jo
in
popa
add
testl
iret
pushf
leave
jb
bound
lods
dec
ds
movsb
jle
add
mov
pop
mov
add
push
pusha
pop
and
enter
pop
repz
sti
cmp
es
outsl
dec
lods
lret
xchg
and
mov
xor
scas
orl
scas
lret
inc
stos
pop
add
push
or
add
js
ret
or
stc
inc
mov
divl
pop
dec
jl
sti
add
lret
insb
popa
cmc
mov
sbbl
mov
popf
inc
adc
pop
sub
xorl
push
add
test
js
leave
lahf
jp
shll
xor
stos
adc
add
mov
add
fs
popf
xor
adc
inc
rcrb
inc
cmp
lods
loop
add
gs
xchg
clc
sti
sbb
arpl
xchg
xor
rolb
pop
mov
ret
xor
arpl
add
and
shlb
mov
iret
mov
adc
orb
fadds
mov
sbb
lret
xor
xor
cld
mov
pop
sbb
ret
mov
das
pushf
cmova
pop
out
or
mov
mov
stc
and
pop
pushf
sub
repnz
sub
add
cmpsb
or
sbb
scas
lock
add
pop
xchg
cli
push
add
pusha
add
add
sub
icebp
je
andl
stos
sti
or
and
pop
inc
inc
arpl
adc
lods
pop
dec
sub
ficompl
in
add
call
ret
xchg
aam
es
fs
inc
jg
jmp
mov
push
push
mov
dec
add
jp
and
movl
pop
ds
pop
test
sbb
imul
lock
clc
pop
mov
add
mov
jo
pop
cs
add
leave
lea
or
inc
and
arpl
stos
dec
push
add
xchg
xchg
pop
sbb
add
xorl
ret
dec
jecxz
stos
fwait
cmp
lret
cld
add
aad
in
addl
dec
clc
push
cmp
push
pop
into
push
dec
add
or
sbb
imul
cmp
mov
mov
pop
mov
pop
lock
enter
ja
mov
mov
pop
dec
jg
sbb
orl
movsb
es
add
jmp
fidivrs
std
nop
mov
mov
inc
imul
lea
cmp
push
jae
push
sahf
dec
enter
add
inc
iret
pusha
xchg
pop
xor
gs
addb
mov
or
mov
sbb
enter
pop
ret
adcb
dec
dec
add
fwait
and
jns
inc
test
out
ja
jg
jle
xchg
cmpsl
push
pushl
add
divl
add
arpl
mov
xor
or
mov
stos
inc
mov
icebp
dec
jae
sbb
mov
add
cmp
inc
jge
mov
dec
cmp
cmp
add
jbe
outsl
fisttpl
stc
add
cmp
into
cltd
js
add
push
out
dec
pop
insl
mov
dec
test
add
push
aad
mov
xchg
mov
add
out
xchg
mov
add
dec
mov
scas
cmp
add
rorb
daa
pop
gs
xor
jp
cmp
xlat
pop
rcrl
adc
or
insb
repz
adc
cwtl
loopne
data16
loope
cld
fstps
cmp
imul
add
push
sub
xor
xchg
out
adcl
mov
ljmp
inc
push
push
sub
in
sbb
cmpsl
cmc
test
ljmp
stc
call
or
jp
push
in
fcomps
adc
adc
test
and
add
shll
filds
jmp
rolb
mov
in
add
adc
xor
push
pop
stos
inc
aas
xorl
cmp
lods
jecxz
mov
add
insb
mov
push
js
add
mov
clc
lods
jecxz
enter
subl
cmp
ret
test
cmp
jg
scas
cmp
test
lret
dec
pusha
arpl
pop
fildl
push
les
pop
mov
out
cmc
add
test
str
jno
shrb
mov
xor
into
add
mov
jge
cmp
mov
test
scas
dec
ret
orl
ret
xor
addr16
dec
stc
inc
mov
push
andl
fists
mov
dec
or
xchg
fimull
bound
jg
sbb
in
rorb
cmp
jecxz
or
add
mov
dec
inc
add
lahf
pop
cmpsb
jo
std
add
sbb
pop
xor
imul
push
hlt
xor
dec
and
add
jo
mov
add
mov
sub
loopne
mov
nop
sub
lret
cld
adc
inc
pop
cmpsl
push
pop
out
dec
cmp
add
lret
inc
add
enter
adcb
fdivrs
xchg
in
lock
sub
push
add
adc
das
push
fucom
and
inc
lea
mov
xorl
sti
mov
and
inc
js
leave
sti
dec
cmpl
in
sbb
xor
mov
shrl
sub
ret
push
and
icebp
inc
mov
cwtl
sti
xchg
andl
add
pop
mov
xchg
aam
filds
mov
stos
adc
cmp
add
ret
inc
decb
mov
dec
xchg
sahf
dec
lahf
movsb
sbb
ljmp
add
lock
jge
sti
dec
call
outsl
xor
scas
sub
add
jnp
cmpsl
pop
stos
mov
bound
rcrl
les
mov
sbb
enter
jb
sub
mov
jle
les
adc
sti
inc
hlt
das
pop
dec
lods
sub
jae
int
jne
push
lods
add
fwait
enter
push
mov
dec
mov
or
fdivr
les
ret
cmovbe
lods
add
or
jb
clc
jnp
add
sbb
addr16
pop
scas
sti
add
or
dec
gs
mov
aas
push
add
mov
cmp
cli
fisubs
dec
iret
pop
sub
add
pop
xchg
or
ds
mov
faddl
lahf
jnp
ret
push
add
or
sbb
add
push
dec
lret
sbb
mov
js
add
outsl
inc
sub
lods
push
data16
add
mov
mov
repz
sub
sbb
into
cmp
xchg
scas
mov
pop
repnz
jp
and
mov
rolb
dec
dec
in
ret
xorl
pop
mov
subb
call
push
test
pop
adc
xchg
sbb
popf
or
mov
sbb
decl
add
add
test
add
mov
jle
xchg
call
stos
mov
icebp
jle
inc
mov
jmp
push
inc
inc
std
inc
mov
cmp
sti
dec
les
insl
ljmp
in
sar
add
dec
push
bound
sahf
mov
jae
lods
fnstsw
push
pushf
cmp
shrl
adc
loop
adc
fimull
adc
cltd
dec
es
in
pop
lret
and
dec
pop
imul
lcall
mov
popf
add
imul
sbb
sbb
repz
xor
fwait
add
je
mov
rcr
mov
cmc
sbb
and
roll
cmp
iret
inc
inc
lea
lret
and
scas
add
xor
neg
inc
jmp
push
dec
adcl
add
fisttpll
cmp
in
sbb
stc
pop
cmp
adc
jne
inc
lods
add
arpl
in
dec
leave
inc
mov
jae
nop
test
test
repnz
sti
jl
test
or
inc
sbb
js
stos
push
in
and
jnp
inc
ds
dec
cmc
mov
add
mov
xlat
test
pop
popa
mov
dec
ret
xchg
imul
clc
mov
ret
lods
add
sbb
cmp
adc
sub
or
sti
push
lods
es
push
sub
inc
adc
js
cwtl
ret
cli
sub
add
xchg
ret
xorl
cld
insb
mov
pop
xchg
xor
out
xor
cmpsl
ret
nop
repnz
addr16
cmp
out
mov
imul
inc
gs
popa
inc
jbe
mov
leave
cmpl
add
pop
push
xchg
ja
mov
inc
jbe
leave
mov
jle
mov
frstor
inc
inc
fidivrs
add
hlt
loope
test
int3
mov
sarl
popa
dec
imul
les
mov
cmp
stos
pushf
mov
pop
lods
and
mov
push
inc
add
inc
repnz
icebp
je
xchg
sarl
jbe
xor
aam
xchg
dec
imul
leave
inc
inc
sub
daa
mov
aaa
cwtl
mov
sbb
pop
add
inc
jle
adc
inc
pop
scas
pop
cli
jge
sti
mov
push
ret
dec
jp
cmp
inc
cld
pop
leave
or
arpl
mov
inc
mov
fwait
inc
mov
repz
push
cli
movl
mov
mov
jmp
pop
push
loope
addr16
add
inc
stc
pusha
cmp
sti
xchg
or
jmp
add
dec
std
icebp
push
sub
lret
pop
mov
insb
aaa
adc
aam
jmp
mov
mov
mov
adc
xor
xor
incb
push
inc
mov
xor
ljmp
aaa
stos
cwtl
jmp
test
xchg
es
pop
dec
ret
lods
push
aas
inc
es
or
xchg
dec
jmp
dec
add
mov
mov
add
mov
jle
stc
push
xor
xchg
add
shl
cmp
icebp
xchg
cmp
pop
inc
sub
jmp
arpl
add
jo
jle
xor
mov
shl
adc
jge
add
add
stos
xchg
add
and
dec
pop
pop
pop
pop
ss
ja
leave
outsl
xchg
jnp
insb
ret
sub
mov
inc
or
adcl
and
mov
and
adc
pop
pop
add
inc
loop
jmp
fldt
add
adc
pop
test
mov
jge
add
jbe
or
iret
lcall
xchg
xor
repnz
add
mov
out
loop
imul
push
sti
leave
add
and
mov
aaa
or
cli
mov
xchg
pusha
inc
or
dec
int
xchg
fadds
cmpsb
xor
in
jl
cmp
inc
sti
mov
aad
sbb
inc
out
and
or
mov
movsl
or
xor
xor
jb
dec
mov
jge
jae
sub
sar
aad
nop
rolb
inc
jns
leave
add
add
repnz
push
out
inc
cli
or
sub
lret
lods
jae
fiaddl
leave
lret
push
or
sbb
xorl
mov
dec
inc
cmp
ret
xor
and
push
ds
inc
push
xor
stos
fwait
rol
add
mov
lods
xchg
inc
push
add
lods
dec
xchg
add
adc
jno
icebp
or
add
jns
out
cmp
movsl
insb
addl
mov
inc
lcall
mov
cli
scas
aad
faddl
out
cmp
movsb
inc
jecxz
cmp
sbb
subl
ds
add
jns
cli
inc
cmp
jle
dec
ret
mov
push
mov
scas
out
add
jmp
aam
push
mov
cmc
dec
and
fiaddl
pop
add
outsb
sti
cmp
les
inc
call
iret
nop
mov
js
dec
sbb
movsl
lahf
dec
leave
insb
and
inc
dec
sarl
cmpsb
nop
arpl
dec
mov
mov
dec
push
stos
push
call
lods
inc
add
loopne
out
or
xchg
imul
data16
add
push
add
rcrl
mov
ret
dec
inc
je
jae
into
fadds
adc
adc
cmp
dec
push
cmp
mov
orl
hlt
mov
sub
inc
push
xchg
push
pop
cmp
sbb
sub
adc
sti
scas
xchg
dec
inc
imul
mov
les
testb
roll
xchg
inc
jg
adc
lods
hlt
stos
shll
add
lret
call
incl
aaa
jb
orl
imul
cmp
add
outsb
xor
stos
loop
popl
mov
mov
jno
js
push
mov
lock
push
pop
fdivr
or
enter
test
dec
add
xchg
popa
mov
inc
and
nop
scas
sbb
jg
adc
mov
popa
iret
jl
leave
add
into
adc
out
es
xor
jae
inc
in
adc
jl
dec
inc
mov
and
loope
inc
inc
movsl
add
jmp
dec
inc
stc
jnp
xchg
shlb
ret
jle
loopne
pop
into
cmp
repnz
sahf
cmp
jge
movsb
push
mov
lock
loope
mov
jp
lret
dec
test
xor
push
sub
mov
aad
icebp
ret
ljmp
push
repnz
cli
add
mov
inc
mov
ljmp
and
push
ret
mov
cmp
lea
rorl
mov
or
movl
pop
xchg
sti
in
std
jmp
or
ds
fs
sti
jge
sbb
bound
ret
dec
sbb
lea
lock
fcmovb
jbe
inc
mov
cmpsl
cwtl
repz
pop
mov
int3
dec
mov
dec
mov
jnp
add
fistpl
pop
enter
in
adc
clc
je
dec
mov
add
js
push
sbb
pop
in
xor
out
adc
mov
adc
movsb
cmp
add
dec
gs
out
cmp
add
cmp
dec
add
sbb
daa
cs
cmpsb
in
outsl
pusha
popa
add
push
lods
add
sub
push
add
sbb
mov
xchg
loope
inc
call
jo
mov
stos
icebp
xorl
sbb
shlb
push
adc
xchg
inc
xor
arpl
pop
add
orb
stc
cmp
ret
call
loopne
addr16
pop
rclb
and
pop
repz
mov
lods
jno
nop
jle
sub
mov
and
jg
add
out
iret
cmp
add
jmp
outsb
mov
push
aad
lret
icebp
xchg
int3
ret
cmpsl
mov
test
loope
sbb
ret
lods
xorl
add
push
mov
inc
push
gs
mov
repnz
lods
arpl
enter
sbb
out
xorb
cwtl
push
andb
xor
pop
jmp
inc
jp
cmp
rdseed
std
adc
rcr
ds
aam
xchg
mov
jmp
pop
or
lods
push
dec
push
jecxz
cmp
add
sar
dec
add
pop
pop
jae
out
xchg
mov
je
js
sbb
add
dec
pop
mov
loope
pop
decl
push
add
mov
jnp
leave
je
push
lods
out
lods
stc
add
dec
adc
stos
movsb
add
push
bound
pop
dec
ret
jmp
mov
mov
in
mov
sub
dec
sbb
rolb
push
jmp
or
inc
inc
cmpsb
lock
xor
sbb
jno
cmp
add
inc
int3
cs
dec
mov
mov
fstl
out
jg
mov
aas
jbe
mov
xor
inc
push
mov
add
or
add
mov
push
inc
xor
shrb
add
jns
adcb
lret
add
mov
popf
jae
ds
mov
aad
mov
or
outsw
dec
test
pop
out
xorl
push
stc
ret
jge
insb
outsl
or
push
or
push
stc
lea
rolb
das
mov
mov
cmp
inc
and
sbb
xor
cmp
pop
out
or
jbe
clc
mov
add
repz
mov
push
adc
sti
jecxz
push
xlat
add
dec
push
std
add
jmp
and
mov
popf
imul
dec
cmpsb
adc
mov
inc
int
dec
sub
jb
add
lcall
add
mov
add
repnz
imul
test
int3
jnp
xchg
mov
decb
aaa
mov
cwtl
imull
orb
add
mov
cmp
mov
jne
repz
shlb
inc
and
into
mov
adc
add
mov
retw
sub
outsb
push
jnp
dec
dec
lods
dec
jecxz
sti
fwait
ret
insb
inc
jae
pop
clc
aad
das
mov
or
aas
je
leave
cmpsl
sbb
xor
es
jl
gs
repz
sti
filds
lods
or
push
mov
pop
outsb
in
mov
inc
inc
sub
xor
jge
pusha
cwtl
sldt
cld
insb
mov
add
or
bound
add
ret
sub
sbb
inc
les
pop
sahf
lret
cmp
jno
in
or
addb
lea
iret
ret
mov
dec
pop
pop
insb
sub
insl
in
fs
jp,pt
fdiv
jge
adc
and
add
mov
test
out
stc
outsb
adc
ret
xchg
mov
sub
mov
adc
inc
mov
jo
ret
rcrl
inc
inc
push
lret
out
inc
cmp
mov
mov
mov
fnstcw
outsb
subb
icebp
inc
mov
and
dec
out
add
sarb
jbe
sbb
cmp
pop
inc
dec
dec
lods
and
ljmp
adc
subl
mov
add
and
scas
pop
and
add
mov
mov
mov
gs
push
jnp
fiaddl
adc
out
dec
dec
lock
add
sbb
pop
stc
icebp
add
stos
adc
sub
test
ret
repz
rcrl
add
mov
cmp
lcall
dec
test
pop
dec
pslld
pushf
and
pop
mov
sar
jp
push
pop
pusha
pop
mov
lods
and
dec
mov
add
repz
sbb
adc
rclb
aad
into
add
sahf
xchg
cli
lds
fsubrl
pop
subb
dec
in
cmp
loope
sbb
and
jecxz
jnp
mov
sti
stos
int
pop
jbe
sbb
imul
sbb
pop
xchg
lods
in
cmpsb
add
add
pextrw
rolb
add
cmpsl
iret
inc
filds
and
jbe
sbb
inc
xor
add
imul
dec
lds
push
js
inc
push
pop
shrl
jae
pop
jmp
mov
inc
mov
cmp
inc
sbb
jge
cltd
mov
mov
iret
mov
stos
hlt
add
cmp
scas
inc
enter
mov
inc
cmp
insb
adc
adc
mov
dec
mov
mov
or
imul
lahf
jge
cmp
pop
aaa
jae
xor
add
dec
ret
arpl
mov
mov
lods
push
movb
mov
pop
add
ret
dec
inc
xor
add
outsl
lea
mov
cwtl
enter
arpl
shrb
dec
sbb
push
adcl
push
cltd
mov
lds
ja
lock
push
bswap
rol
sub
dec
jg
add
stos
fwait
or
sahf
adc
pop
gs
push
add
arpl
adc
sbb
movsl
lea
testl
add
xor
sti
stc
inc
mov
cmp
jge
mov
push
fisubs
dec
fisubl
lret
mov
push
jmp
inc
pop
add
xchg
das
add
sbb
stos
clc
aaa
xchg
add
and
xchg
add
add
cmp
xor
adc
and
sbb
mov
les
subb
shlb
mov
lds
cld
adc
push
and
mov
pop
daa
inc
push
fs
inc
push
pop
sub
push
pop
aad
jne
inc
add
add
rcrb
mov
lock
in
notl
adc
je
jnp
inc
pop
mov
sbb
mov
test
mov
sahf
xchg
mov
scas
sub
jle
xor
pop
es
lock
jno
int
xchg
adc
add
js
outsb
inc
sbb
mov
or
mov
lret
shlb
push
and
pop
mov
add
inc
mov
xchg
daa
mov
addr16
mov
aam
loop
test
and
mov
push
push
pop
mov
insb
into
ret
sub
mov
in
mov
shll
cmp
add
in
test
pop
mov
inc
rclb
xchg
push
and
lods
jne
test
roll
insb
and
ret
jne
fwait
and
xchg
and
movsl
pop
pop
xchg
adc
aaa
mov
cmpsl
nop
into
xchg
xor
mull
xchg
push
and
es
inc
loope
aam
or
and
and
xorl
aas
push
movsl
pusha
imul
mov
pop
out
add
xchg
pop
dec
addr16
dec
push
pop
push
mov
mov
and
pop
pop
mov
lods
lods
ret
fidivs
add
cld
out
pop
or
adc
stos
and
dec
gs
mov
xor
xchg
push
push
cmpsl
out
jb
imul
test
xlat
pop
and
xor
push
shrb
mov
cmp
xlat
xchg
je
fidivrl
daa
jno
stos
in
test
xlat
jo
je
aad
sahf
je
fisubs
pop
insb
pop
xor
jmp
stc
or
or
jbe
stc
xchg
dec
fisttpll
sub
inc
shlb
push
in
fwait
fs
jp
inc
inc
inc
or
gs
testl
or
xchg
push
push
pop
jbe
adc
pop
add
sarb
ss
loopne
movsl
cs
xor
add
loop
shlb
and
ja
and
es
and
xchg
add
test
jae
sub
xchg
call
gs
les
rcrb
xor
or
test
push
negb
stc
lods
ret
mov
add
mov
les
rcrb
add
shl
cmp
imul
cli
call
pop
int3
add
push
movl
fstp
mov
add
in
cmp
and
or
and
add
jns
and
cmp
inc
in
lahf
pop
lods
mov
inc
inc
sub
cmpsb
fimuls
jnp
mov
mov
add
jns
fwait
add
stos
jmp
cmp
jns
fsubl
pop
push
inc
aam
outsl
lock
test
push
mulb
add
inc
or
dec
shrb
add
pop
pushf
or
add
pop
xchg
cmp
movsb
add
aad
adc
jb
add
out
mov
pusha
add
ficoml
insb
jge
xchg
add
cmp
imul
or
mov
pushf
ds
dec
or
mov
xor
push
inc
jge
out
cmp
and
xor
mov
cmp
repz
in
adc
jae
push
add
pop
loope
and
add
ljmp
add
mov
sarl
add
cwtl
add
dec
pshufw
push
shlb
repnz
adc
ret
add
mov
adc
add
jo
xchg
pop
int
roll
mov
inc
test
adc
ja
les
adc
mov
mov
mov
ret
stos
insb
in
inc
out
jbe
gs
les
sbb
adc
out
add
cmp
lahf
cmp
push
fmuls
in
dec
cld
test
add
loope
xchg
jns
mov
mov
push
mov
fcoms
add
mov
adc
data16
mov
das
lret
add
rsm
ret
fwait
add
xor
roll
cmp
mov
add
and
mov
sahf
add
lcall
pop
imul
stc
or
add
pusha
repnz
mov
inc
pop
jl
jge
lret
test
andnps
icebp
inc
loope
or
cmp
cwtl
ret
leave
arpl
inc
rcrl
jb
mov
test
inc
add
dec
aam
inc
inc
popf
inc
pop
dec
shll
inc
inc
xor
loope
add
inc
loopne
adc
push
dec
jge
push
dec
inc
jp
xlat
mov
addr16
adc
lcall
test
cwtl
ret
ret
or
hlt
inc
add
movsl
in
ja
loope
push
cwtl
dec
dec
les
inc
push
sti
add
add
mov
mov
xor
add
scas
mov
ret
add
sbb
arpl
inc
xor
mov
jge
ret
ss
inc
dec
or
cmc
fcoms
int3
add
fistpl
add
arpl
js
cltd
or
ret
in
popf
push
add
lcall
pop
sub
hlt
sbb
pop
dec
sti
push
pusha
or
add
jb
cmp
cmp
mov
fmuls
or
pop
push
and
push
js
shl
mov
ja
and
imul
lds
stos
xchg
cmp
mov
iret
jmp
shlb
add
into
adc
roll
dec
pop
jmp
jns
push
xchg
pop
rolb
jp
std
out
add
xchg
pop
test
out
mov
les
xlat
adc
in
orb
xchg
lahf
jge
sbb
add
stos
sahf
je
mov
push
jno
mov
add
dec
pop
xor
and
lret
or
jl
cmpb
and
pusha
stos
inc
and
gs
adc
jne
add
out
out
in
cmpsb
inc
popf
sbbb
or
add
out
pop
inc
outsb
in
arpl
push
test
mov
or
orl
and
lea
add
repnz
inc
es
add
cmp
ja
or
aaa
add
nop
add
pushf
add
and
lret
xor
scas
sub
adc
scas
lahf
lods
jg
movsl
add
mov
imul
outsb
cli
mov
and
jle
and
cwtl
mov
inc
jp
hlt
add
enter
fiaddl
ja
rorl
sub
loop
aas
cmp
add
dec
call
lods
fwait
aas
lock
sahf
add
dec
xor
pop
jg
repz
push
test
xor
inc
cwtl
push
adc
xchg
inc
jmp
nop
xor
mov
jmp
add
inc
out
xor
je
xchg
notl
push
lahf
mov
push
dec
jae
and
or
sbb
jns
jns
mov
stc
cmpsl
dec
arpl
cmp
fidivl
jle
xchg
std
add
imul
pop
dec
pushf
rol
mov
mov
fists
add
test
cli
ret
in
pop
add
lea
hlt
add
sub
outsb
out
and
rcrl
xor
pusha
mov
frndint
rolb
popf
das
and
cltd
push
dec
xor
add
daa
adc
pop
aas
hlt
scas
mov
testl
ljmp
cwtl
mov
ret
into
stc
pop
push
jl
call
push
cmp
dec
into
pop
out
xorl
ja
lods
push
mov
cmp
add
sbb
out
cmp
jecxz
sub
inc
loope
fsubl
repz
pop
pop
inc
add
test
lret
in
aad
xchg
mov
xor
and
add
in
test
ret
cmp
jb
ret
out
mov
xchg
add
xor
loopne
out
xor
mov
add
dec
out
hlt
jp
pop
mov
cli
ret
stc
aam
xor
ret
repz
sti
add
add
add
dec
fidivrs
lret
add
or
cmp
scas
xchg
loop
mov
cmp
addr16
mov
repz
lret
jl
sbb
sub
js
sti
jecxz
rolb
dec
sub
mov
cmpsb
aad
push
inc
jnp
jae
dec
cmpsl
clc
jae
cmp
mov
push
inc
xchg
cmp
inc
mov
pusha
or
sub
scas
repnz
sbb
jmp
adc
loope
push
dec
xor
and
lods
or
mov
scas
sub
cwtl
outsb
mov
mov
push
jmp
repnz
cli
inc
imul
push
mov
xchg
out
jne
mov
add
sbbl
mov
cmpsl
inc
sarl
dec
xor
or
out
mov
pop
pop
into
fildl
rcr
stos
cmc
inc
sbbb
or
sbb
out
add
add
mov
mov
loope
inc
in
adc
test
xchg
dec
add
mov
add
sbb
pop
sub
loop
gs
jnp
test
rorl
test
fwait
nop
inc
pop
pop
cmp
sti
ret
push
inc
xor
xor
add
clc
mov
jae
cwtl
mov
xor
and
dec
stos
add
sti
jmp
mov
xadd
add
scas
loope
or
aam
lock
imul
repz
ss
lret
and
inc
mov
add
xchg
jbe
ffree
lret
add
jecxz
inc
setge
sub
sub
add
jnp
lock
mov
inc
add
mov
add
cmp
mov
xchg
and
out
inc
cmp
lret
dec
test
lods
fildl
js
testb
js
pop
mull
add
dec
fistl
pop
xchg
add
test
lret
shll
pop
shrb
mov
jb
popf
xlat
inc
sub
inc
mov
insb
mov
push
and
mov
jo
pusha
dec
inc
cmp
mov
or
in
lahf
mov
out
push
sbb
cmp
rolb
arpl
loopne
stos
dec
scas
jecxz
pand
jecxz
mov
fwait
mov
jbe
gs
mov
scas
inc
dec
add
xchg
inc
dec
inc
inc
cmp
sbb
loope
cld
cld
dec
push
fcmovnb
in
mov
mov
ret
sarl
ret
pop
rolb
pushf
mov
and
xchg
inc
into
aad
mov
test
and
lea
lods
add
inc
dec
cld
outsb
dec
dec
add
ds
pop
sbb
xchg
gs
jg
mov
shl
add
pop
inc
sbb
movsl
push
mov
stos
in
pop
cmp
sub
pusha
mov
mov
mov
shrb
ret
subl
mov
cmp
ja
adc
mov
mov
subl
gs
lcall
cmp
jae
sub
sbb
cmp
add
xchg
inc
mov
pop
mov
leave
cmp
or
fldt
dec
in
pop
pop
xor
pop
add
inc
xchg
cmpsb
inc
dec
inc
leave
lods
clc
inc
mov
cmp
mov
add
jp
mov
push
mov
scas
clc
mov
pop
jo
dec
sub
mov
mov
inc
add
cmp
or
inc
es
stos
cmp
gs
sub
inc
ljmp
out
and
inc
loope
ret
push
cmpsb
mov
add
xchg
scas
push
add
add
cmpb
adc
mov
pop
mov
push
cmp
and
add
leave
sbb
mov
orl
mov
inc
and
jb
xchg
jle
out
add
push
push
shrb
jb
inc
sbb
fisttps
jp
pushl
fnstenv
aaa
inc
sbb
call
xchg
sub
int
popl
cwtl
xchg
mov
xchg
push
add
fs
ja
xor
sbb
out
fcmovnb
movsbl
loope
mov
xor
jae
mov
dec
fbstp
ss
jecxz
dec
inc
je
add
mov
aam
lcall
enter
out
pushf
jno
add
ret
xchg
or
cmp
loope
pushf
add
jg
sahf
dec
jae
add
int3
inc
mov
test
roll
sub
adc
cmp
xchg
sub
loope
mov
lret
cmp
repz
loop
loopne
dec
stos
mov
mov
xor
outsb
jg
sbb
inc
ret
xor
cmp
mov
idivb
xchg
push
adc
sbb
jge
jmp
ret
imull
xor
inc
daa
xorb
fwait
add
mov
leave
aaa
add
in
popa
dec
mov
inc
lods
push
out
add
out
mov
lahf
dec
fildll
mov
add
ret
and
push
pop
xor
bound
inc
jbe
in
xor
push
stos
jmp
bound
sbb
add
pop
fwait
mov
add
movsl
mov
adc
dec
xor
mov
xchg
addb
inc
sbb
jg
ret
dec
fiaddl
adc
jmp
or
pop
add
inc
cmp
adc
add
incl
cli
test
sbb
mov
adc
mov
add
inc
imul
outsl
cmp
mov
icebp
xchg
stos
stc
jmp
or
mov
std
jo
inc
jns
or
pop
and
in
in
lret
gs
mov
pushf
lods
mov
mov
idivb
aas
outsl
lods
and
sub
hlt
sub
jno
js
add
push
push
jne
sbb
adc
cmpsl
sub
roll
rcrl
push
mov
mov
lock
add
in
sbb
push
xchg
xchg
dec
rcll
push
add
aam
cmp
inc
jmp
outsl
je
and
jmp
mov
mov
dec
mov
inc
test
inc
push
ret
xor
popa
jp
shr
andl
pop
insl
add
or
enter
mov
clc
mov
out
lret
rorb
add
jno
test
add
aas
adc
ret
sub
inc
mov
sub
aaa
cmc
and
leave
add
xchg
push
adc
dec
and
and
out
add
in
sti
jl
jns
outsb
jp
mov
lret
sar
call
add
imul
add
mov
outsl
inc
stos
xchg
add
lret
push
scas
mov
rolb
push
shlb
add
insb
mov
fs
imul
jl
dec
call
es
push
xchg
or
sbb
ret
sbb
add
pop
cwtl
das
push
adc
add
inc
ljmp
je
sub
jp
inc
leave
rorb
push
xchg
inc
mov
hlt
out
and
add
dec
cmp
sub
mov
cmp
jg
ret
in
enter
popf
add
jmp
xor
and
fwait
add
inc
inc
add
test
addr16
pop
pop
inc
add
xor
inc
scas
ds
lcall
rolb
push
pop
jae,pt
sarl
lock
or
inc
jecxz
outsb
mov
data16
xor
or
add
std
sahf
sub
test
pop
loope
scas
cmp
fdivs
dec
jnp
mov
sub
inc
sti
and
in
add
into
dec
mov
add
sub
cmp
sbb
jg
movups
add
dec
mov
xchg
add
out
add
adc
addr16
push
inc
pop
push
stc
pop
and
sbb
jnp
cwtl
jge
pop
xor
xorl
mov
aaa
js
fcmovnb
dec
loop
cmp
inc
jle
ret
sbbl
and
jl
loop
dec
fisubs
xor
mov
call
mov
jp
ret
out
mov
js
repz
cmp
dec
enter
imul
sarb
or
lods
jne
cmp
pop
cmpsb
loop
cli
xchg
dec
mov
imulb
sti
xor
pop
hlt
add
jecxz
addl
nop
ret
add
adc
insl
and
pop
outsl
mov
pop
add
movsb
into
in
push
add
roll
add
ss
mov
fbld
pop
lods
and
lock
dec
xchg
sub
cmpsb
clc
inc
imul
jmp
iret
add
pop
scas
jg
int
or
fstp
insl
mov
cmpsl
mov
inc
pop
dec
push
test
ret
push
dec
lds
add
scas
insb
adc
and
scas
popa
clc
add
or
mov
adc
mov
inc
cltd
icebp
and
jmp
mov
lret
mov
arpl
and
sldt
iret
cmp
adc
icebp
add
add
sub
loope
stos
jl
outsb
xor
dec
mov
ljmp
out
adc
cmp
pop
ret
loop
pop
pusha
jle
fs
mov
push
sti
mov
das
lods
imul
dec
xor
shlb
xor
pop
mov
add
nop
mov
sub
or
mov
aas
test
dec
add
rcll
hlt
jecxz
add
sub
out
and
clc
dec
mov
fisubrl
cld
cmp
int3
fsubrl
push
adcl
mov
push
stc
nop
pop
fwait
inc
inc
ljmp
pusha
inc
mov
mov
jle
pop
and
xchg
mov
dec
cmp
push
scas
xor
jp
pop
mov
xchg
sub
mov
mov
mov
jle
add
push
scas
jmp
pop
ljmp
cld
xor
rcrb
mov
lods
loopne
mov
add
in
stc
mov
lods
sahf
gs
inc
sub
inc
mov
sub
hlt
pop
inc
fists
add
fcmovnb
movsl
shlb
outsl
pop
imul
inc
cmp
loop
dec
mov
ljmp
xchg
add
gs
xor
mov
jmp
cmp
fsubr
xor
lods
rolb
pusha
push
stc
and
lret
cmp
push
std
mov
cmp
add
popa
iret
pop
jp
add
rcrl
inc
addr16
adc
push
or
push
movsb
push
enter
pop
add
clc
ror
fsubrp
pop
fwait
bound
add
nop
jae
testb
xor
hlt
out
movsl
jns
incl
out
leave
les
cld
sbb
mov
xchg
sub
cmp
inc
loope
icebp
sub
mov
add
decb
mov
push
pop
mov
cmp
xchg
adc
dec
inc
xchg
aaa
shll
add
adc
inc
mov
pushf
add
inc
adc
inc
sahf
or
fwait
cmp
cs
inc
add
iret
jnp
rclb
mov
xchg
xchg
sarl
pandn
lds
add
aam
repnz
add
stos
sub
add
jae
cmpsb
add
cld
dec
nop
mov
ds
call
ret
and
xchg
push
add
mov
test
xor
int3
xchg
jne
das
jmp
leave
sahf
pop
add
stos
gs
pop
lret
mov
jmp
cmpsl
inc
fwait
inc
or
jp
iret
inc
lret
bound
cmpsb
ret
and
aas
inc
sub
mov
mov
pusha
into
out
xchg
test
clc
mov
push
inc
loop
in
xor
inc
xchg
cmp
pop
bnd
addr16
daa
outsl
push
add
pop
hlt
in
cwtl
cmp
dec
and
pop
cld
nop
addr16
test
es
out
test
and
pop
mulb
or
loope
fucomi
addr16
xchg
add
mov
inc
lods
pop
leave
inc
mov
add
out
add
fsubr
lret
mull
or
or
cmp
inc
imul
orl
sub
or
call
jg
repnz
inc
enter
stos
push
addr16
xor
and
test
dec
add
add
or
stos
push
mov
mov
xchg
mov
ljmp
mov
inc
fwait
mov
add
imul
scas
mov
add
jmp
icebp
dec
fisubrl
bound
mov
repnz
xor
aaa
aam
add
lods
dec
inc
lahf
stos
mov
pushw
out
xchg
cmp
test
je
or
dec
sbb
stos
or
cmp
add
sub
daa
dec
pop
mov
dec
cli
xchg
in
scas
pop
add
nop
or
stos
scas
int
imul
pop
enter
add
inc
in
lods
gs
popa
adcl
inc
xor
jle
insl
add
add
aas
cmpsb
sbb
dec
xor
mov
cmp
div
xchg
fisubrl
jo
push
movsb
mov
sbb
add
ds
inc
into
inc
and
xlat
xchg
xor
dec
and
repz
adc
jae
push
shll
cmp
cmp
call
jb
lret
add
sbb
xor
add
mov
pop
fwait
add
push
cltd
mov
inc
je
subb
cmp
sti
dec
clc
call
mov
add
mov
dec
or
mov
repnz
cmp
adc
xchg
es
in
and
imul
stos
ret
dec
clc
out
lcall
mov
sub
inc
add
movsb
pop
lahf
adcl
inc
sub
loope
subb
jecxz
jmp
in
rolb
sbb
rorb
fisubs
and
jnp
jmp
or
pop
inc
sbb
in
xchg
mov
cmc
inc
pop
xor
lods
lcall
movsl
fildl
push
lcall
in
ja
cmovge
dec
mov
imul
icebp
jno
add
ljmp
ds
repz
int3
cmpsl
add
scas
jmp
sbb
lods
ret
bound
cmp
dec
dec
cmp
jmp
inc
mov
xchg
pushf
stos
sbb
cmp
lahf
bound
add
rol
mov
js
test
lret
xchg
cmp
movl
call
mov
popa
adc
jae
les
add
dec
pop
pop
push
jo
inc
inc
ret
mov
jp
mov
mov
xchg
out
jbe
pop
mov
les
outsl
add
dec
push
cmp
pop
repz
add
jge
mov
fildl
out
roll
pop
cltd
sti
cmp
fcmovb
or
adc
sbb
inc
push
push
icebp
pop
or
jne
ret
stos
add
adc
dec
je
sbb
push
pop
pop
mov
jbe
nop
lods
inc
jmp
jge
jmp
imul
sub
mov
lods
pop
iret
insb
mov
inc
jns
push
into
mov
enter
push
fidivrs
and
cmp
and
and
ret
movsb
ret
cmp
push
or
hlt
sahf
sbbl
add
fists
stc
sub
icebp
jbe
rorb
fstpt
or
es
dec
push
add
adc
jns
daa
or
add
jl
call
aas
loopne
mov
or
sahf
pop
loop
or
cli
adc
loopne
sbb
cmpb
mov
add
mov
push
xor
add
mov
negl
mov
ljmp
add
jns
cmc
or
stc
add
pushf
xchg
mov
add
mov
filds
dec
xor
repz
negl
clc
mov
and
stos
adc
pop
xchg
jg
mov
outsl
add
pushf
pop
je
push
pop
fstl
pop
pop
jnp
inc
aas
lods
out
icebp
pop
iret
xchg
and
add
mov
imul
scas
add
add
stos
sti
add
loopne
inc
cmpsb
sub
pop
and
xor
pop
dec
xor
lods
loopne
mov
xchg
add
out
stos
insl
and
js
cld
clc
fisttpl
add
xchg
add
daa
imul
lds
ret
mov
mov
filds
ret
cmc
outsl
sub
dec
dec
or
arpl
nop
subl
bound
xchg
xor
iret
movb
and
std
or
add
cli
jbe
pushf
dec
or
dec
stos
jne
sbb
rolb
lcall
cpuid
push
add
and
frstor
out
and
mov
hlt
cmp
sbb
add
incl
push
dec
mov
lds
ljmp
jp
inc
movsb
mov
arpl
addl
mov
jae
ret
add
movsl
pusha
pop
mov
add
cmpsl
inc
mov
push
sub
setne
ret
lods
sub
scas
mov
sbb
stos
mov
dec
iret
mov
popa
add
ret
ret
cmp
pop
add
ss
fldenv
pop
sub
imul
cmp
ret
out
xor
dec
in
imul
xor
jmp
push
inc
sub
adc
mov
add
imul
add
push
pushf
add
test
lock
pop
xchg
lahf
add
out
scas
loop
aam
adc
fidivrl
inc
xchg
and
sub
arpl
repnz
pop
add
bound
in
sbb
jnp
add
repz
dec
imul
jne
sub
dec
xchg
test
mov
jecxz
adc
pushf
pusha
add
js
addr16
insb
mov
test
jo
pop
add
cmp
mov
push
push
fwait
subl
xor
inc
fidivrl
cmp
in
iret
adc
or
jge
cmp
mov
pop
mov
add
lcall
mov
add
pop
pop
stos
dec
mov
inc
add
out
or
sbb
xlat
addb
jl
sub
out
scas
sti
call
fidivrs
lock
mov
push
add
jb
sub
push
add
add
pop
cltd
dec
das
inc
mov
sub
aam
add
mov
mov
outsl
divl
jp
pop
cmc
je
cmp
stos
sub
inc
dec
xchg
test
jecxz
mov
add
sbb
and
cmp
and
popf
scas
sbb
add
aad
repnz
ja
add
outsb
or
mov
std
pop
rcrl
push
jns
mov
lods
dec
add
inc
xor
adc
js
sbb
ja
push
fwait
add
call
push
inc
pop
xchg
bound
adc
leave
ljmp
sti
push
js
clc
cld
lret
cmp
scas
cld
and
and
inc
push
js
add
stos
je
add
jne
jp
mov
aas
adc
cwtl
fidivrl
adcl
add
sub
test
into
inc
test
arpl
stos
aaa
add
mov
imul
dec
outsb
into
cmc
mov
int
xchg
push
pop
inc
add
insb
dec
cmpsl
cmp
loope
ret
repnz
out
mov
cld
mov
cmp
hlt
inc
arpl
cltd
lret
repz
jnp,pt
cli
scas
jmp
jecxz
lods
out
sub
pop
insl
lods
in
clc
cs
into
lds
pop
fildll
dec
sahf
adc
add
pop
in
mov
jmp
pop
jae
mov
add
mov
pop
fadds
fs
clc
add
push
sbb
add
push
push
jp
add
daa
outsl
push
push
filds
mov
mov
cmpsl
add
mov
mov
mov
xorb
cmp
jae
sub
xor
popf
mov
add
jbe
nop
add
mov
in
add
jmp
mov
add
mov
jo
inc
lret
jmp
mov
mov
or
mov
sbb
push
jb
add
cmp
push
cmp
push
xchg
add
mov
loop
ret
cld
pop
repnz
pop
or
adc
and
scas
dec
jae
jne
mov
js
sub
add
xor
std
add
loope
pop
insb
fimull
inc
jl
or
ror
dec
pop
lret
popa
mov
das
xchg
or
pop
mov
fldl
lods
mov
push
lret
add
push
sub
dec
jge
pop
cli
mov
xor
loope
xor
add
repnz
dec
inc
cmp
sti
popa
add
arpl
add
ss
lret
push
pop
jg
mov
rcrl
mov
adc
pop
out
push
sti
sahf
lods
add
dec
mov
out
cmp
shr
pop
or
sbbl
pop
mov
test
bnd
leave
mov
cmpb
cmp
ret
xchg
cmp
lods
mov
sarl
inc
pushf
pop
popa
jbe
or
jge
xor
repnz
xlat
cs
inc
bound
inc
lahf
leave
jbe
push
add
in
pop
add
and
push
push
into
popa
test
xlat
leave
dec
jmp
and
fidivrs
stos
add
call
in
or
add
inc
mov
add
pop
rcrl
scas
call
shrb
xor
dec
scas
mov
or
outsl
mov
outsl
lds
add
mov
ret
ja
arpl
add
stos
icebp
das
mov
dec
mov
sbb
mov
lods
add
inc
arpl
lret
movsl
xchg
subl
add
mov
cmp
xor
mov
inc
test
mov
dec
inc
dec
std
rcll
stos
andl
pop
clc
into
pop
add
push
add
mov
adc
test
inc
and
or
push
jge
xchg
ret
push
lcall
mov
add
std
push
jge
mov
lea
pop
and
jae
dec
add
ret
stos
inc
aad
sub
dec
pop
cmc
dec
test
push
cmpsl
ret
das
ss
mov
push
lret
add
aaa
sarl
call
jbe
adc
into
rolb
jl
push
xchg
inc
lret
sbb
fwait
inc
cwtl
xchg
xchg
add
and
lret
push
daa
lahf
repnz
movsb
std
jns
cmovb
mov
shr
add
mov
mov
jl
cmp
cmp
mov
mov
sub
pop
mov
mov
sar
cwtl
add
or
cmpl
inc
lret
xchg
push
lcall
mov
ret
fsubrl
mov
push
dec
sar
mov
mov
ret
pop
rcr
dec
inc
dec
sub
into
adc
cli
leave
xorl
mov
jp
mov
and
mov
adc
add
and
loopne
adc
mov
insb
pop
cli
iret
dec
ss
loope
jno
inc
or
loop
out
jne
andl
loopne
fcompl
roll
shrb
ret
pop
cli
add
test
jne
imul
mov
cmp
push
shrl
dec
mov
xor
mov
cltd
add
aas
and
repz
jle
mov
stos
enter
add
mov
movsl
mov
loope
incl
pop
add
aaa
push
xor
sub
in
insb
xchg
add
push
icebp
dec
xchg
inc
or
add
add
popf
adc
inc
ljmp
mov
add
out
jb
adc
add
orl
and
dec
int3
pop
mov
std
mov
cmp
popf
jne
jmp
dec
jle
xchg
xchg
repnz
in
imul
xor
xchg
js
or
fsub
ret
pop
dec
mov
xchg
add
mov
addr16
icebp
or
loope
adc
mov
push
inc
testl
jns
push
and
mov
inc
mov
push
sub
out
ljmp
add
insl
add
adc
push
add
add
es
aaa
inc
and
push
push
repz
cmc
inc
lret
inc
xor
pop
add
inc
add
insl
roll
cld
mov
incb
enter
mov
cltd
arpl
stos
adc
cmp
xor
es
or
dec
repz
cmp
mov
mov
mov
and
lods
dec
pop
adc
add
mov
pop
mov
je
jg
pusha
insb
add
adc
rolb
rclb
clc
sub
and
pop
xor
loopne
in
jecxz
mov
dec
add
sub
adc
cli
dec
adc
adc
push
ret
sbb
sbbb
jg
jmp
cmp
repnz
add
in
lret
cmpl
add
insb
jecxz
add
jns
mov
push
sub
repnz
addr16
outsl
call
mov
subb
adc
inc
jecxz
pop
fcoms
xchg
enter
clc
arpl
jp
push
lret
loopne
mov
popf
lods
and
ret
inc
push
addr16
mov
repnz
gs
pop
push
cmpb
cwtl
ret
aad
mov
pop
inc
mov
mov
addr16
pop
add
sub
xchg
ljmp
arpl
fwait
mov
jle
mov
cmp
push
adc
lret
xchg
fsubl
mov
cmc
sub
inc
xchg
addr16
call
test
mov
inc
cmpb
fwait
xlat
ret
jg
movsl
ret
outsb
adc
pop
enter
push
lock
js
add
dec
stc
push
and
inc
add
sbbl
bnd
loopne
add
cmpsl
mov
mov
divb
test
and
inc
fld1
stc
out
pop
inc
xchg
mov
into
cmpeqps
xchg
lret
mov
inc
aaa
push
nop
or
sub
mov
mov
push
add
fmul
loopne
add
mov
negb
jp
ja
jg
xor
les
inc
popf
daa
int
mov
mov
cmp
jge
push
inc
sbb
sarb
jg
add
push
cmp
and
cmpsb
jnp
adc
rdpmc
pusha
add
mov
inc
and
push
pop
xchg
mov
jns
arpl
out
stos
dec
adc
popa
add
push
les
inc
push
pop
shl
aaa
test
dec
push
cmp
push
or
inc
cmp
adc
sbb
inc
inc
aas
dec
fwait
pop
xchg
mov
dec
hlt
inc
fmull
add
add
sub
or
jecxz
loopne
ret
xchg
cmc
dec
nop
ret
pop
push
pop
lea
pop
iret
sbb
jb
add
inc
inc
out
push
mov
sbb
fmull
lods
add
dec
mov
test
ja
hlt
test
cli
arpl
lcall
repnz
lcall
adc
jg
pop
stc
in
add
dec
mov
dec
cmpsb
sub
mov
aad
add
faddl
push
jnp
xor
jp
repnz
lea
ljmp
insl
ja
push
or
bound
mov
cmp
xor
loopne
add
or
sbb
inc
mov
repz
ret
stos
jae
jecxz
dec
and
push
add
sub
jb
cmpsb
dec
add
mov
jmp
mov
loope
imul
xor
sbbb
mov
dec
stos
inc
lods
xchg
or
imul
mov
or
lahf
add
jae
fimuls
sbb
cmp
js
jnp
cld
dec
inc
cmp
mov
mov
cltd
pop
add
dec
dec
jp
jne
popa
loope
inc
aas
ret
jno
dec
pop
hlt
ds
inc
and
mov
fidivrl
call
adc
adc
cld
mov
mov
lods
cli
and
add
sahf
stc
xchg
adc
cmp
pop
pop
lret
cs
inc
jns
jbe
adc
inc
enter
ret
and
add
stc
add
ficomps
aam
scas
adc
add
pop
mov
outsb
mov
mov
dec
std
add
lea
dec
and
jmp
xor
cmp
mov
push
lods
add
lret
add
pusha
sub
add
pushf
gs
les
out
in
add
push
sub
ret
add
fisubrl
or
jae
add
daa
imul
sub
adc
sti
dec
cmp
add
js
cmp
movsb
pop
fs
and
lret
jns
add
and
adc
jnp
push
negb
add
cmpb
jbe
ret
mov
ret
clc
or
lods
call
sti
or
mov
pop
sub
adc
jnp
cmp
inc
clc
mov
sub
dec
lock
bound
dec
enter
decl
mov
loopne
shrb
and
sub
mov
sbb
sub
ret
inc
xchg
cmp
mull
pop
fwait
jl
in
pop
cmpl
or
in
stos
ret
repnz
ret
sub
scas
lods
jae
jbe
cmp
jg
mov
pop
mov
mov
add
add
inc
icebp
notb
pushf
or
js
jne
pop
lret
rorl
sbb
add
lock
pop
add
stos
mov
push
inc
ds
pop
aas
jle
dec
fldl
popf
jno
adc
pop
jb
bound
outsb
in
imul
add
inc
scas
js
test
inc
inc
mov
sub
cmp
cmp
imul
xchg
add
jmp
cmp
pop
jl
mov
push
or
test
pop
mov
sbb
sub
aad
fwait
cs
cmpsl
add
cli
rcrl
push
mov
sbb
mov
or
push
loop
iret
adc
into
pop
pop
popl
adc
out
jmp
and
add
lcall
outsl
jle
ss
imul
pushf
push
adc
dec
out
mov
lods
in
or
cli
pop
fucomi
les
jbe
jo
xchg
incl
inc
call
push
pop
insl
ret
adc
sbb
stos
or
jmp
testl
in
ret
jg
es
mov
inc
dec
cld
mov
inc
sbb
push
inc
loopne
dec
cmp
mov
clc
lock
adc
icebp
movsl
adc
or
or
mov
jns
dec
shll
jnp
movsb
repnz
sti
inc
and
pop
test
movl
and
test
xchg
data16
dec
nop
or
ficoml
clc
cmp
sar
fwait
jmp
add
test
aas
mov
jns
jecxz
call
add
scas
xchg
add
clc
or
cli
cmp
les
insb
cmp
mov
imul
fidivrs
push
add
mov
mov
fisttps
dec
xor
mov
ret
cld
inc
and
dec
add
sub
sub
adc
mov
add
xchg
xchg
sbb
mov
add
fwait
inc
ret
mov
rcr
pusha
aad
jo
xor
adc
js
movsl
sti
xchg
or
mov
int
cmp
or
adc
in
pop
unpckhps
xchg
stos
in
int3
scas
fwait
add
popa
push
lods
mov
js
cmp
aas
or
xchg
fsubrl
jl
add
or
push
inc
lahf
jle
aaa
mov
cwtl
inc
xor
pop
stos
adc
repnz
xor
adc
inc
mov
jg
and
or
roll
aam
dec
loope
in
hlt
mov
js
xchg
int
add
call
dec
gs
push
fcmovnb
jl
or
cmp
add
pop
cmp
lret
into
mov
cltd
xor
xor
inc
shrl
sub
lcall
sbb
mov
int
stos
mov
sbb
sbb
push
xchg
jmp
fiadds
inc
xorl
mov
sbb
mov
nop
inc
push
andl
lret
jle
mov
cmp
aas
jg
ret
ret
idivb
jecxz
decb
test
fisttps
stos
mov
adc
faddl
dec
cmpsb
lods
adc
mov
cs
bound
insl
leave
add
je
push
inc
sti
add
divl
xchg
dec
fld
dec
xor
cs
or
inc
and
dec
mov
sbb
adc
dec
fwait
mov
xor
lods
movsb
mov
lds
ret
cmpsl
add
dec
fildl
pop
add
cmp
cs
add
ret
hlt
or
add
add
inc
clc
add
imul
inc
jb
ret
push
xor
add
leave
in
add
add
lret
inc
sbb
mov
xorl
inc
pop
dec
insl
adc
jecxz
cmp
add
ret
add
dec
lret
pop
mov
sub
mov
mov
fcompl
pop
sbb
into
ret
xchg
mov
sbb
jnp
adc
jecxz
in
add
ret
adc
out
jg
push
fstpl
xorl
rcrl
jg
mov
mov
jbe
mov
jb
stos
mov
into
lock
das
add
push
push
loopne
adc
add
adc
xor
imul
imulb
cmp
mov
call
push
inc
jbe
push
mov
sarl
int3
sub
enter
in
xchg
mov
inc
pusha
pop
in
sub
cmp
jp
loop
fsubs
outsl
push
mov
out
lret
bound
cmp
add
xchg
and
inc
cmpsl
mov
stc
ret
fistpll
inc
cmp
aaa
loopne
adcb
pop
add
jle
pusha
inc
jg
jmp
dec
fildl
imul
stc
add
sbb
repz
ret
jne
arpl
add
push
cmp
mov
xchg
mov
add
jno
fsub
adc
adc
ret
pop
out
and
inc
icebp
sub
fs
inc
cli
inc
pushf
mov
mov
push
mov
cmp
push
push
ret
std
xor
fwait
cld
in
dec
add
outsl
and
inc
stc
int3
dec
adc
or
push
test
pop
ficompl
cmp
hlt
lcall
insb
arpl
push
dec
ficompl
adc
lret
add
xchg
jmp
icebp
mov
jbe
in
lret
or
out
je
pop
addr16
jne
in
dec
cmp
dec
gs
add
icebp
repnz
stc
je
mov
loop
dec
inc
inc
ds
mov
jbe
xor
in
bound
pop
cmp
add
arpl
mov
test
inc
lahf
ja
outsb
adc
ds
sub
aad
add
test
outsl
out
cmp
adc
arpl
andb
mov
in
stc
fldt
lahf
scas
jae
icebp
sti
add
and
vmovapd
add
and
iret
pushf
fiadds
cmpsb
push
stos
mov
jns
cltd
adc
cmpsl
lret
pop
dec
and
neg
shll
xor
add
adc
adc
sub
mov
adc
fwait
sbb
jecxz
pop
sti
add
sbb
movsl
test
imul
xor
je
lds
mov
mov
adc
test
xor
ljmp
xor
es
dec
pop
add
mov
push
aad
add
shl
sbb
xor
xchg
aad
push
jmp
enter
pop
out
lods
lcall
inc
mov
lock
dec
sbb
mov
adc
add
js
xor
or
ret
or
lds
add
push
add
fstpt
mov
add
addb
dec
mul
add
pop
pop
adc
pop
out
push
insl
data16
mov
shrb
lcall
or
in
pop
hlt
in
jo
out
jecxz
jp
filds
or
jle
jnp
js
lret
enter
insl
push
jnp
out
es
arpl
repnz
add
pop
cli
aaa
add
lods
dec
add
add
push
dec
pop
stos
cmp
cmp
jl
in
and
jb
cmp
js
test
dec
inc
sub
jnp
stc
jle
cwtl
negb
imul
add
adc
mov
in
push
int
dec
xor
stc
mov
xor
jg
mov
dec
cmpsl
in
mov
inc
movb
adc
shrb
mov
scas
dec
ja
lret
shl
js
test
outsb
add
inc
nop
hlt
add
adc
lods
dec
mov
cmp
add
lahf
jb
rorb
std
fdivr
jmp
and
add
jecxz
js
lret
sti
call
out
sahf
push
and
inc
aas
setae
enter
jo
inc
lock
stc
ret
int3
dec
mov
test
xchg
ds
sbb
inc
dec
shr
mov
pop
lahf
popa
sub
inc
inc
in
jecxz
sub
add
idivb
add
ljmp
fsubr
cwtl
mov
inc
mov
mov
mov
mov
xchg
xor
pop
xor
ds
insb
ja
adc
ret
lret
pop
pushf
inc
mov
cmp
and
les
lea
inc
loop
pop
ficoms
jl
cmpsl
inc
mov
add
push
call
mov
shlb
pushl
sti
lods
xchg
data16
pop
scas
cmp
add
lcall
or
bound
outsl
dec
xorl
imul
push
into
leave
loopne
add
icebp
cmovns
cwtl
test
jp
mov
sub
arpl
ret
mov
popa
idivb
sub
out
das
in
je
mov
dec
inc
cmp
adc
add
jbe
ja
inc
cmp
mov
add
pop
push
add
jmp
lods
and
loopne
setno
sub
movsb
jns
lret
mov
orl
mov
jmp
add
jg
push
add
push
mov
inc
fsubrs
cli
cmp
fwait
pop
mov
mov
xchg
roll
push
add
insb
add
imul
in
sbb
out
loop
jo
enter
xor
fidivrl
adc
mov
dec
inc
inc
mov
sbb
push
add
cmp
jae
inc
mov
pusha
pop
adc
pop
add
imul
mov
xor
inc
jmp
dec
ret
pop
xchg
ret
clc
mov
push
jne,pt
mov
stc
inc
push
loopne
testb
cli
sbb
sbb
cmpsb
add
sub
dec
cmp
mov
outsb
xchg
inc
daa
repnz
dec
es
xor
add
in
clc
dec
xor
cmp
mov
add
jecxz
xorl
add
inc
cmpsb
test
xchg
loope
adc
push
in
imul
jge
mov
jmp
add
cltd
cld
outsl
leave
push
mov
mov
out
add
insb
addr16
add
imulb
add
cmp
mov
incl
imul
and
jmp
dec
aaa
ret
xor
inc
testb
ret
mov
enter
jno
mov
test
out
stos
aaa
mov
mov
popa
mov
inc
jecxz
sub
mov
pop
rcr
mov
cmpsl
add
cmc
bound
rolb
sbb
ffreep
mov
jp
shrb
inc
dec
xchg
stc
sti
lods
sub
ficomps
pop
cmc
syscall
int3
int3
fadds
js
push
mov
jle
xchg
inc
push
jg
pop
repnz
add
and
subl
sbb
aad
and
jbe
js
int3
xor
bound
sub
fsubrs
mov
rolb
mov
dec
mov
jecxz
xchg
dec
cwtl
mov
jmp
mov
lods
lock
leave
int3
imul
hlt
repnz
xchg
clc
mov
push
xor
std
adc
stc
fwait
jp
jnp
pop
add
push
repz
nop
enter
ret
mov
aad
cmpl
stos
stos
cli
hlt
clc
dec
cld
lock
icebp
jecxz
mov
fsub
adcl
bnd
imul
dec
in
push
add
dec
movsl
jg
hlt
sbb
test
orps
inc
cmp
scas
pop
roll
jbe
data16
jnp
mov
xrelease
iret
sbb
mov
xchg
jge
in
loope
and
call
or
push
leave
out
mov
sti
push
add
in
lcall
or
xchg
into
insl
icebp
cltd
xchg
add
or
jae
cmp
add
outsb
and
fs
nop
stc
sbb
test
stos
in
popa
jecxz
xor
inc
mov
mov
sbb
add
repz
add
sti
jb
out
dec
inc
push
addb
jge
sbb
add
mov
cwtl
test
add
push
xor
into
jno
mov
add
rcl
adc
stos
out
add
dec
rcr
dec
mov
mov
mov
xor
cwtl
sub
loopne
add
std
xchg
pusha
in
pop
cli
pop
add
outsl
or
inc
ret
sub
ljmp
adc
repz
or
add
xchg
into
cmc
sbb
bnd
add
mov
outsb
repz
mull
add
or
dec
icebp
push
add
fs
push
dec
fisubs
cmpb
imul
cmp
jle
stos
adc
xor
call
loopne
mov
gs
and
outsb
inc
sub
fidivrs
and
stc
xor
xchg
cmp
ror
aaa
adc
lock
roll
mov
fwait
cmp
negb
and
push
roll
pop
jae
stos
jg
aaa
pop
test
aas
out
add
in
sub
inc
or
lret
cmp
mov
std
cmp
sbb
pop
mov
push
add
clc
fwait
adc
movsb
mov
aas
jbe
mov
push
pop
sti
inc
pop
int3
testb
and
insl
add
aam
mov
mov
das
adc
dec
out
fistps
ret
in
xor
or
xchg
mov
jg
pop
ret
enter
popf
fildl
add
mov
insl
add
sub
imul
or
xor
popf
ret
das
mov
rorl
adc
add
sub
dec
sub
dec
push
inc
faddl
sub
mov
add
cmp
and
push
inc
in
mov
add
sbbb
add
dec
jg
jo
add
dec
and
icebp
arpl
dec
mov
dec
test
hlt
iret
mov
lods
mov
inc
dec
scas
sbb
scas
ret
ret
jp
das
add
daa
adc
mov
pushf
sub
add
dec
add
pop
lea
comiss
add
clc
and
scas
in
inc
hlt
loop
dec
andl
lldt
sub
into
or
aad
loopne
push
mov
enter
ret
sbb
add
jmp
inc
pushf
rcrb
adc
orl
sbb
dec
mov
push
in
sbb
sbb
fiadds
fwait
stc
rol
dec
push
mov
pop
and
fwait
int3
ljmp
sarb
pop
pop
inc
in
mov
add
stos
inc
data16
push
mov
orl
sbb
add
pop
movsb
jnp
mov
dec
push
xchg
add
out
inc
rcrb
jb
int3
add
stos
push
jae
pop
xor
mov
enter
add
loope
imul
loopne
cmp
cli
push
sbb
fwait
add
xor
add
test
and
add
push
lods
ret
fcomps
or
add
rol
mov
mov
xchg
mov
add
jl
adc
mov
lret
in
pop
pushfw
jg
or
xor
add
mov
jp
js
mov
enter
xchg
mov
mov
or
xchg
in
sbb
imul
pop
jno
inc
test
dec
mov
popf
jnp
int
int3
andb
stos
adcl
xor
aam
repz
jp
cmp
sbbb
hlt
mov
addl
adcl
jp
aaa
jne
iret
jle
dec
sbb
popa
jb
xchg
add
loop
testl
adc
call
jg
jmp
jns
testb
stos
xchg
cltd
icebp
sbb
fiaddl
hlt
in
pop
out
clc
sbb
and
mov
add
push
add
rol
mov
scas
mov
dec
cmp
adc
fcmovne
stos
add
inc
or
add
jbe
mov
dec
and
scas
in
jecxz
faddl
xchg
outsl
cmp
add
sbb
fs
shl
inc
movsl
xchg
test
aam
dec
bound
enter
pop
cmc
push
add
jl
lods
fbld
leave
push
out
mov
or
cmp
ffree
inc
aam
std
adc
mov
push
insb
sbb
out
in
or
adc
pusha
mov
je
imul
and
dec
sub
jnp
lret
add
sbb
push
pop
popa
loop
jge
push
js
pop
jg
and
outsb
push
je
rorb
insl
std
fwait
inc
movsl
jb
cli
stos
or
clc
push
add
test
pusha
movsb
add
xor
loopne
dec
pop
inc
cmp
lcall
cmp
clc
mov
js
andl
in
mov
repnz
loop
dec
cmp
add
jle
pop
leave
mov
orl
add
push
dec
mov
xor
add
sbb
nop
pusha
xchg
cmp
inc
mov
into
sbb
add
std
js
gs
and
ret
sub
cmp
fcomi
std
jg
lret
jmp
pop
and
add
pusha
mov
bound
inc
mov
xchg
into
test
lret
mov
mov
dec
cmp
add
mov
insl
cmpsb
jmp
sbb
fdivs
cmp
jno
subb
push
and
insb
add
popa
xor
outsl
arpl
addr16
shlb
jge
std
stc
inc
jge
and
ret
out
xor
mov
add
sbb
inc
mov
icebp
jae
int3
cmpsl
xor
pop
cld
xchg
addr16
inc
add
pusha
sub
pop
inc
outsb
push
add
mov
clc
sahf
shlb
or
out
add
mov
adc
push
pusha
repz
hlt
xor
fadd
outsb
js
scas
std
fiadds
or
mov
add
lret
fsubrs
jp
add
mov
dec
add
loope
fists
iret
dec
je
mov
add
stos
repnz
sbb
stos
cmp
add
push
shll
leave
sub
imul
lea
out
scas
repz
in
jl
enter
jo
gs
fsubrs
mov
ficomps
pop
jg
repz
enter
adc
test
aas
repnz
jg
in
imul
dec
add
call
push
add
jp
mov
dec
mov
cmp
adcl
inc
sbb
adc
xchg
leave
push
push
add
jp
rcrb
dec
inc
jbe
jb
mov
mov
and
pop
hlt
inc
sbb
and
stos
cmp
mov
cmp
inc
mov
jnp
call
pop
xchg
pushf
sbb
test
cmp
add
cmp
and
lds
inc
xor
addl
js
loope
xchg
loopne
roll
cmpsb
push
inc
sub
pop
int3
data16
repz
pop
repnz
stc
enter
push
jnp
es
dec
ret
xlat
mov
cmc
add
ljmp
add
gs
repnz
add
out
inc
lea
jbe
xchg
cltd
mov
and
aad
dec
lret
pop
loop
push
ret
test
push
mov
push
add
jp
hlt
pop
data16
gs
stc
in
loopne
jb
dec
xchg
ss
shl
cmpsb
in
push
test
loopne
jmp
subb
into
add
jmp
rolb
bound
fidivl
icebp
push
add
pusha
inc
popa
mov
mov
adc
dec
into
inc
mov
mov
cmp
xor
arpl
clc
add
push
sbb
imul
add
inc
adc
mov
call
inc
push
or
pop
lods
xchg
decb
dec
jnp
cmp
mov
lret
pop
and
dec
sbb
sti
in
add
jle
inc
bound
stc
xor
inc
pushl
jno
dec
cs
push
xchg
add
xor
sub
push
mov
hlt
mov
push
sarl
and
popf
loop
cli
sub
mov
pop
pop
stos
jbe
popf
xchg
add
hlt
push
decb
cmp
push
in
fimuls
dec
mov
inc
jle
mov
js
push
ret
cmp
pop
sti
in
adc
aam
mov
pop
dec
int3
daa
mov
sub
mov
movsl
add
mov
bound
jl
loopne
add
sti
stos
cmpb
fiaddl
imul
add
in
lods
cli
enter
outsl
jg
mov
cmp
mov
sub
jp
lahf
add
dec
cmpsb
shlb
mov
jno
cs
mov
in
jp
movsb
ret
scas
out
loope
fsts
and
adc
mov
mov
cmp
cmp
add
lock
and
into
push
jnp
clc
ret
cmp
cld
jecxz
adc
add
arpl
stc
in
add
mov
jmp
lret
ret
adc
jnp
mov
push
add
lret
cli
fsub
hlt
inc
inc
pop
push
or
adc
mov
cmp
fldl
popf
fs
jg
add
imul
enter
add
movsb
xor
shrl
outsb
lret
cmp
icebp
adc
cmp
gs
dec
xor
jle
out
sti
in
pop
inc
mov
in
xor
add
inc
cwtl
in
insl
cmp
and
inc
imul
outsb
mov
sti
mov
dec
mov
rorl
pusha
adc
daa
jge
add
sub
add
adc
dec
cmp
cld
push
inc
shrl
dec
add
mov
xor
outsb
xor
in
jl
pop
aaa
es
mov
add
std
add
ss
add
sar
mov
movsl
and
cmp
pop
mov
add
add
sti
pushf
mov
and
or
jne
xchg
gs
add
fstpt
inc
push
inc
test
clc
xlat
jp
jb
orl
lret
int3
aad
gs
scas
dec
add
xor
jbe
mov
jmp
inc
stc
xor
mov
pop
cmp
pop
inc
dec
rol
push
push
sub
cld
incl
shl
push
cmp
orl
inc
dec
leave
les
mov
mov
push
ljmp
add
add
or
cwtl
stc
push
dec
add
out
fnstsw
fldenv
mov
ljmp
mov
push
add
int3
hlt
imul
fs
lock
mov
mov
pushf
xor
jbe
ja
loopne
dec
fdivrl
mov
inc
outsl
mov
jecxz
sub
mov
insl
jecxz
inc
jb
xchg
jl
cmp
sti
mov
into
add
jecxz
data16
in
adc
mov
sbb
push
out
mov
int3
lods
push
enter
fcmovnb
sub
mov
sbb
insl
movl
iret
out
pop
add
faddp
lock
scas
lahf
add
cld
mov
mov
ret
imul
lret
lods
add
outsb
pushf
dec
mov
inc
aas
inc
sub
xchg
push
addl
imulb
lret
pop
call
add
in
cmp
add
jmp
rcrl
loope
add
sahf
xchg
enter
dec
movsb
ljmp
push
addr16
jno
mov
jl
pop
add
mov
add
push
mov
cmpsl
add
mov
jnp
add
adc
adc
mov
cmpsb
cmp
inc
cmp
sti
scas
stos
add
or
insb
cltd
sub
outsl
imul
repz
jge
arpl
mov
mov
in
jp
movl
push
jnp
inc
or
outsb
ljmp
adc
mov
dec
jns
dec
inc
xchg
cli
nop
enter
mulb
push
outsl
lcall
shrb
mov
repz
lds
add
into
das
repnz
mov
push
ret
cld
lret
or
push
jb
sbb
inc
push
jae
mov
subb
jle
cltd
into
jae
scas
add
test
cmpsl
add
push
cli
insb
repnz
dec
add
pop
push
inc
scas
sub
jp
xchg
je
sahf
add
inc
andps
out
loopne
mov
and
insl
sbb
add
or
dec
jb
scas
inc
fwait
add
and
or
inc
loop
ljmp
inc
das
dec
add
push
cmp
mov
loopne
inc
outsl
cli
xchg
rcr
xchg
mov
lods
mov
dec
adc
dec
adc
div
pop
jg
js
or
andb
hlt
aas
mov
mov
mov
dec
xorl
stos
femms
lock
enter
add
xor
hlt
filds
pop
adcl
shll
jg
add
out
xchg
cmp
mov
cmpsb
popa
scas
add
inc
xor
pop
lock
push
call
gs
popf
sub
flds
mov
ret
dec
ljmp
add
mov
add
addr16
cmp
xchg
sub
lock
add
or
mov
test
cmpsb
push
subl
push
add
insb
add
jae
movsb
add
imull
xchg
sbb
lods
jg
gs
bound
lods
dec
inc
and
push
push
add
test
lock
add
pop
movsl
push
mov
dec
add
mov
adc
xchg
or
data16
outsb
loope
cmp
jo
mov
sub
cmpsl
sbb
inc
out
lods
inc
add
inc
lock
dec
jb
dec
testb
sbb
cmp
sbb
or
mov
mov
cmp
in
outsl
loop
mov
adc
add
xor
push
add
mov
add
add
xchg
testb
jecxz
mov
fdivl
icebp
add
xchg
mov
jb
push
and
push
ret
loop
xchg
xchg
jnp
aad
sbb
mov
dec
ret
add
mov
sarb
cmpsb
jo
xor
arpl
dec
add
inc
xabort
enter
push
sub
ja
adc
push
notb
pop
pop
ds
subl
add
repz
faddl
in
cmc
and
scas
add
add
lock
and
mov
cmp
loopne
inc
xchg
inc
das
fmuls
jp
inc
pop
push
pop
ret
lahf
arpl
jg
push
stos
insb
or
bound
ret
push
imul
or
adc
repz
mov
pop
aad
inc
sbbl
add
sti
adc
lods
sbb
cs
jp
into
add
push
mul
icebp
imul
jmp
dec
test
add
cmp
sahf
call
sti
imul
push
mov
add
aam
pop
loope
xchg
sub
ja
dec
jmp
in
xchg
pop
call
and
mov
cmpl
pop
add
jmp
mov
or
dec
ret
cmp
add
data16
and
pop
add
jmp
add
add
inc
adc
jne
push
mov
aam
rorl
jb
cmp
add
fidivs
jmp
xor
mov
mov
sbb
movsb
jb
stc
lret
pop
xchg
add
sti
ret
jnp
ret
mov
push
aam
sbb
popa
in
pop
sti
stos
enter
sahf
cli
pop
in
xchg
push
push
aaa
adc
sbb
dec
jecxz
loop
mov
dec
xor
mov
arpl
lods
add
pop
pop
jmp
lret
jge
cmpsl
ds
push
lods
pop
pxor
mov
push
dec
cmp
xor
test
push
xor
leave
orl
pop
pop
mov
sub
pushf
add
out
lret
push
inc
pop
pop
ja
pop
cwtl
and
int3
andb
movsb
lret
jmp
sbb
enterw
mov
xchg
mov
adc
pop
mov
cmp
js
fnstenv
repz
add
jp
jecxz
jns
sbb
push
xchg
push
dec
add
repnz
push
mov
jbe
incl
sti
dec
xchg
mov
jl
insb
scas
bound
test
mov
xor
fwait
push
dec
push
pop
add
enter
add
xchg
jmp
sub
xorl
in
roll
mov
mov
pop
lret
loope
xor
dec
inc
mov
shrl
outsl
cwtl
int3
stos
stos
in
inc
mov
cmp
mov
mov
sub
jne
sbb
cmpl
mov
xor
inc
dec
test
add
xchg
repz
add
cmp
push
xchg
add
mov
test
in
mov
add
cmp
sbbl
stos
inc
call
add
inc
cmp
mov
cwtl
mov
in
cmp
mov
sbb
stc
jb
xchg
mov
enter
adc
loope
ss
imul
dec
and
dec
mov
dec
fstpt
fwait
push
data16
addb
pushf
add
inc
into
pop
faddp
call
cmp
bound
ror
inc
repz
lret
stos
dec
aam
sub
xchg
cmp
pusha
cmp
push
mov
sbb
dec
scas
cmp
data16
mov
jle
sub
fisubrl
dec
dec
imul
out
mov
cld
inc
adc
lret
pop
test
dec
pushf
in
jmp
pop
call
arpl
cmp
addb
fsubrl
cmp
and
repz
sbb
add
iret
leave
aam
aas
scas
scas
add
jb
cmc
sbb
add
fxch
clc
inc
call
inc
cmp
mov
adc
mov
faddp
lret
cs
cltd
mov
cmpsb
aad
pop
imul
jno
pop
mov
fdivr
pop
jo
sahf
add
cld
cmp
scas
mov
push
outsb
ds
jg
pop
ret
or
mov
jg
dec
sti
jo
cmp
push
shll
inc
movsb
setl
mov
push
push
jecxz
sbb
bound
cmpsb
cld
jnp
dec
mov
mov
cmp
mov
bound
pop
lock
mov
js
dec
sbb
mov
add
in
mov
out
lcall
mov
adc
clc
popa
paddb
mov
sbb
fildl
inc
lods
in
std
push
xchg
dec
add
or
call
repnz
mov
push
roll
inc
mov
ret
add
sbb
add
sub
mov
mov
out
clc
sti
mov
add
push
pop
pop
cmc
insb
out
sub
mov
pusha
add
stos
push
or
sub
add
out
in
adc
data16
inc
loop
addr16
add
fistps
data16
add
mov
scas
xchg
pop
mov
sub
mov
shr
dec
mov
es
push
fisubl
incl
inc
mov
ret
mov
jl
inc
hlt
push
leave
xchg
push
mov
out
and
ljmp
jb
cmpsb
mov
loop
in
and
addr16
inc
cmpsl
xchg
mov
into
push
pop
push
pop
cmp
roll
mov
stos
pop
imul
add
dec
lods
js
adc
ret
dec
jecxz
push
sarb
outsl
insl
cmp
jle
jg
inc
push
roll
inc
out
outsb
add
dec
jp
in
push
imul
add
mov
pop
ret
leave
mov
cwtl
data16
stc
out
fisubrl
adc
pop
arpl
icebp
call
mov
mov
mov
popa
mov
outsl
dec
cmp
dec
enter
mov
lret
int3
pop
sbb
jp
mov
sub
movsb
lahf
sub
cmp
add
push
cbtw
mov
adc
stos
xchg
adc
and
push
inc
jo
pop
cmp
pusha
mov
int
xor
in
add
shl
lret
arpl
add
adcl
pop
pusha
cli
inc
dec
jnp
push
mov
fstps
pop
pop
pop
stc
loopne
cmp
lcall
pop
aam
mov
inc
jecxz
fisubrs
mov
add
dec
adc
cli
mov
pop
scas
lock
inc
push
popf
daa
mov
cmp
sbb
jnp
es
xor
icebp
out
cmp
cli
inc
fs
mov
dec
imul
pop
or
add
adcb
cmp
lea
negb
negl
inc
mov
stc
cld
push
or
add
repnz
lock
xor
inc
dec
xor
into
dec
mov
stos
movl
cwtl
jp
adc
data16
push
push
stc
xchg
add
jle
xchg
stos
xor
mov
popf
add
scas
mov
out
xchg
das
add
jl
mov
shll
dec
ret
add
lea
pop
xchg
sub
cmp
cmpsb
popf
sbbl
leave
ret
ret
sbb
pop
add
mov
ret
or
sbb
mov
add
add
mov
js
jp
icebp
sbb
cwtl
dec
gs
shrl
adc
stc
push
pop
mov
push
icebp
mov
pushf
ja
push
inc
jp
inc
dec
dec
js
ret
jmp
and
and
aaa
or
fsubrs
cmpsb
cmp
or
dec
and
icebp
ds
scas
push
add
inc
test
stos
sbb
sbb
out
add
jo
mov
fwait
int3
mov
fimull
cmpsb
or
add
push
mov
fadds
pop
mov
cmp
sarb
cmp
add
repz
push
jecxz
adc
les
jp
cwtl
test
sub
add
jp
cs
inc
jne
sti
divb
fwait
stos
xlat
add
arpl
loop
loopne
out
sbb
inc
ljmp
js
jecxz
in
push
jmp
lret
pop
or
test
ret
and
lahf
iret
and
or
gs
add
movsl
pop
pop
cmp
sbb
rolb
lods
fldt
dec
add
cld
jge
out
mov
out
push
add
cmp
imul
fadds
dec
negl
inc
add
inc
insb
jne
sbb
pop
movsl
mov
sahf
adc
out
add
in
lock
add
stos
mov
dec
add
mov
add
loope
pop
fildl
mov
les
js
das
mov
sti
jmp
add
xchg
loopne
aam
in
sbb
dec
rolb
mov
fcoms
mov
add
push
ret
mov
dec
xchg
mov
pop
jnp
jg
jo
lods
imul
cld
outsl
sub
movsb
mov
and
cmp
and
inc
push
in
pop
inc
mov
add
les
dec
inc
mov
mov
in
xchg
enter
lahf
ret
fildl
add
stos
push
mov
cli
imul
in
fsubr
cmc
mov
fildll
inc
cs
unpcklps
mov
add
jae
dec
movl
lds
sahf
jg
sbb
in
cli
repnz
nop
add
mov
push
cmp
lcall
stc
jne
ja
stos
mov
jmp
pop
out
dec
outsl
rcrl
mov
dec
jbe
push
shrb
stos
sub
push
push
clc
sbb
add
mov
pop
mov
add
or
out
imul
dec
stos
lahf
lds
mull
mov
jmp
mov
cmp
scas
out
outsl
jl
xchg
pop
xor
cmp
add
push
dec
jg
add
jle
leave
mov
fstpt
xchg
cmp
aam
cltd
dec
and
add
in
ret
inc
xor
or
xchg
push
call
ret
jge
dec
scas
add
sti
pop
sub
sbb
lods
inc
ja
mov
clc
scas
lret
faddl
xchg
in
repz
cwtl
imul
into
stc
shrl
cmp
aaa
dec
subb
jle
sub
inc
pop
lret
les
lock
mov
and
rolb
pushf
mov
outsl
jp
jmp
ljmp
mov
repz
nop
mov
mov
push
lods
inc
add
mov
test
pusha
add
mov
addr16
cli
in
mov
jp
mov
add
or
shrb
sbb
push
loope
popl
xchg
add
inc
jge
idivl
push
stos
sbb
xchg
add
cltd
xchg
pop
scas
lds
mov
xchg
lods
test
enter
dec
pop
fdivrs
add
xchg
and
cmp
test
push
cli
jmp
enter
sarb
call
adc
inc
inc
incb
jge
aaa
dec
lods
les
divb
bound
inc
add
rcll
push
jns
iret
add
push
test
out
adc
imul
xchg
adc
inc
xchg
mov
pop
xor
lret
mov
ret
scas
sub
daa
add
jg
shr
aam
add
sbb
call
or
out
fwait
cli
lds
pop
xchg
adc
push
fidivrl
mov
mov
mov
js
shll
repnz
push
pop
inc
sub
fwait
ret
out
idiv
and
call
aam
loope
push
add
adc
jp
jb
fildl
out
mov
pop
jle
pushf
dec
adc
xor
icebp
mov
frstor
push
loop
in
popf
inc
add
mov
sbb
mov
scas
pop
xlat
mov
cwtl
mov
inc
divb
add
int3
add
fdiv
mov
lahf
push
jge
insb
cli
jbe
jecxz
inc
in
dec
cltd
cmp
leave
nop
add
jp
test
pop
jmp
shrb
cmp
aad
jl
or
pop
add
add
sti
lret
sti
jb
inc
pop
push
mov
out
clc
pop
add
jmp
stos
cmp
cmp
add
inc
mov
sub
jle
sbbl
movsl
aad
cli
mov
ja
fisttpll
mov
cld
dec
dec
cltd
mov
add
test
mov
cmp
aas
add
mov
fmuls
xchg
mov
mov
cltd
fstpt
mov
pushf
pop
test
repz
jnp
pop
mov
mov
add
add
cld
inc
xchg
add
xor
fwait
rolb
pop
enter
ja
xor
imul
in
push
mov
xor
sub
pop
pop
shr
test
jp
jecxz
std
into
mov
rolb
lret
pop
sti
jge
dec
add
imul
ret
cs
rolb
stc
add
outsb
test
mov
jl
and
loopne
mov
jb
test
lret
cmp
adc
movsl
mov
divb
xchg
scas
repz
sbb
dec
aas
imul
stc
test
and
cmp
push
test
push
jp
mov
dec
inc
cmp
xchg
push
jnp
cmp
repz
pop
cltd
add
aaa
push
mov
scas
out
dec
sbb
xchg
inc
jno
add
push
mov
loop
xor
fcoml
cli
inc
pop
jge
cmp
fistps
add
pushf
mov
mov
add
mov
inc
xor
loopne
xchg
pop
orb
in
and
dec
idivl
add
adc
jae
in
lods
in
inc
fildl
rorl
js
mov
mov
imul
mov
inc
mov
dec
mov
rep
pop
push
cli
mov
add
mov
pop
jmp
add
push
enter
rolb
pusha
mov
xchg
lods
dec
dec
fstps
add
lret
cmp
add
sub
repnz
mov
jnp
inc
repz
stos
arpl
add
cmp
cmpsb
mov
sar
jp
into
add
imul
push
inc
jecxz
jge
pusha
mov
mov
add
sbb
add
inc
jmp
cs
add
jno
ss
fs
cmp
cs
mov
add
jnp
xorl
fisubrl
loop
fdivrs
stc
add
dec
das
ret
jl
xor
xor
mov
sbbl
lods
addb
lret
cli
dec
rorb
add
xchg
int
lods
push
add
ret
dec
pop
daa
mov
rolb
aad
add
cmp
adc
inc
jp
cmpsb
pop
int
testb
or
in
das
orl
pusha
imul
jmp
leave
loope
aas
scas
aas
sti
sbb
xchg
inc
inc
cmp
push
ret
sti
dec
mov
xlat
test
xor
jmp
inc
sbb
lods
sbb
jg
stos
enter
add
mov
dec
sti
add
adc
icebp
ret
add
in
pop
lods
add
pop
idiv
cli
jae
add
dec
push
in
in
fs
ja
ret
cmpsb
add
and
icebp
push
add
addb
loope
loop
stos
add
cwtl
mov
mov
cmp
inc
cli
std
add
test
mov
add
scas
leave
xor
cmp
mov
mov
jle
popf
push
into
test
rorl
mov
fldlg2
push
add
dec
pop
das
add
ds
movl
mov
lahf
add
insl
inc
mov
ret
dec
xor
mov
mov
dec
pop
test
mov
fnstenv
mov
inc
cmp
loopne
ret
mov
cld
pop
sbb
mov
inc
pop
add
nop
fwait
rcrb
cmp
mov
push
xor
adc
fiadds
fs
aad
pop
xorb
cmc
test
inc
mov
and
inc
inc
les
call
mov
inc
gs
adcl
mov
int3
or
dec
inc
or
out
sub
bound
add
push
ja
iret
mov
repz
push
pop
movsl
mov
int
mov
loope
dec
lret
add
in
outsl
pop
test
movsb
hlt
shrl
sar
add
mov
mov
fs
lods
cmp
mov
add
pusha
mov
add
sbb
fisubrs
and
jecxz
mov
xchg
call
cwtl
sarb
cmp
stos
mov
add
loop
pop
insl
and
mov
cmp
std
add
inc
psubsw
test
scas
add
jo
icebp
inc
repnz
sbb
add
jge
push
lods
fwait
adc
fiaddl
add
lds
fistps
push
clc
inc
pushf
call
jge
addr16
aam
add
inc
mov
push
xor
pushf
inc
lret
shll
push
mov
jmp
pop
cmc
mov
jnp
xlat
push
call
mov
push
pop
jg
lret
shl
xor
jb
cmpl
cmpl
movl
jo
fcoml
jmp
jg
add
test
lods
mov
cli
inc
std
cmp
stc
rorb
pop
xchg
mov
xor
test
push
mov
mov
fidivrl
scas
add
and
fwait
and
movb
and
in
mov
jle
inc
stc
enter
fildl
sbb
adc
pop
ljmp
lock
jnp
lret
ret
inc
cltd
pusha
sbb
adc
inc
faddl
in
std
imul
pusha
add
xchg
xchg
fdivs
pop
mov
xor
mov
xor
mov
sub
inc
jno
push
push
xchg
cmc
add
jbe
push
sub
xor
add
in
inc
xor
les
sbb
shlb
fwait
clc
and
jecxz
cli
push
inc
outsl
xchg
dec
fistpll
mov
out
cmpsl
les
ds
and
cmp
or
jne
jl
pop
adc
push
pop
leave
addr16
in
dec
adc
lods
mov
lea
std
dec
add
or
inc
xchg
bound
push
scas
mov
adc
out
sbb
push
or
dec
cmp
xchg
pusha
cltd
insb
add
test
insl
std
gs
cmpsl
inc
inc
mov
dec
lahf
dec
clc
push
xor
ret
cmp
or
dec
in
push
xchg
dec
inc
adc
xor
stos
cmpsl
mov
push
outsl
out
jp
push
ficompl
callw
push
lret
mov
repz
cmp
push
dec
dec
mov
std
inc
sbbb
pop
es
aam
cli
sbb
add
and
fwait
lcall
out
cmp
add
sub
clc
add
out
sbb
pop
ret
mov
xorl
ret
jmp
mov
jg
gs
dec
xchg
cli
pop
pushf
test
insl
mov
mov
stos
add
iret
imul
lret
cli
pushf
daa
enter
decl
mov
mov
add
push
pop
repnz
dec
sti
inc
dec
loop
and
push
fidivrs
outsb
inc
dec
repz
mov
outsl
dec
pop
jecxz
pushf
xchg
or
add
ss
fisttpl
in
xor
mov
inc
cs
popf
scas
inc
es
mov
call
arpl
inc
stos
mov
mov
jmp
insl
jne
scas
pop
jle
adc
add
pop
loope
adc
cmpsl
add
add
xor
imul
add
hlt
cld
add
jns
mov
mov
inc
stc
add
cltd
mov
stos
gs
xchg
in
je
jo
add
lret
ret
in
add
scas
daa
jb
outsb
push
lds
pushf
push
jae
cmp
xchg
add
mov
in
insl
add
mov
and
mov
imul
push
mov
add
out
push
popa
add
inc
jl
pop
ret
repnz
adc
pushf
adc
cmp
dec
cmc
scas
or
mov
gs
loopne
push
imul
cli
dec
cwtl
inc
lcall
or
icebp
je
decl
inc
jbe
lret
data16
repz
mov
add
cmc
dec
into
lea
mov
pushf
sbb
add
or
lds
fisubrl
add
pop
jp
dec
shl
fadd
aaa
in
sbb
daa
in
cmp
in
add
cs
enter
add
mov
in
add
in
gs
sbb
roll
inc
mov
add
loop
pop
in
jp
insl
add
divb
repz
insb
or
jno
and
inc
dec
sarb
xchg
xor
sbb
insl
cmpsb
repnz
inc
inc
pop
or
sub
xor
dec
and
repnz
add
jbe
loope
sbb
adc
ret
pushf
jle
divl
fldt
mov
inc
das
xor
rcrb
loope
aam
mov
mov
cltd
sub
dec
leave
mov
jb
jbe
icebp
xorl
fcmovnb
mov
jle
insb
ret
out
mov
dec
add
in
xchg
pop
jmp
outsl
repnz
add
xor
sbb
add
jmp
aad
mov
sarl
test
inc
mov
stos
adcl
cmpl
outsb
mov
jo
jnp
sub
imul
mov
inc
mov
orl
into
test
jae
jnp
lret
add
xlat
imul
add
mov
inc
pop
cmp
fsubr
enter
call
mov
stos
mov
movsl
dec
rolb
rolb
pop
sub
add
or
push
mov
dec
nop
ret
add
mov
mov
sahf
neg
data16
enter
hlt
add
cmp
loop
jle
imul
add
cwtl
popl
inc
out
popf
shlb
ljmp
sub
push
push
inc
xchg
pushf
cmp
inc
inc
jecxz
or
ja
mov
or
call
insb
in
enter
rcl
adc
pushf
add
push
inc
mov
cmp
movsb
mov
mov
repnz
pop
push
ret
xchg
cmp
inc
mov
roll
add
fcmovnbe
add
fs
push
inc
inc
addl
aas
inc
enter
repz
mov
leave
or
sarl
add
xchg
dec
popf
mov
dec
aad
dec
fs
inc
dec
add
sbb
stos
cwtl
xchg
push
fadds
enter
push
inc
dec
and
jg
test
sub
xor
pop
repnz
insl
into
out
sbb
pop
jb
testl
call
test
and
sbb
ffree
stc
pushf
inc
jecxz
inc
add
in
scas
mov
add
pop
fldcw
add
dec
rcll
fwait
vpmulhuw
xor
pop
cmp
loopne
ret
iret
xor
pop
hlt
in
out
gs
cld
mov
inc
lahf
movsb
sbb
rcrl
jno
xchg
pop
add
pop
into
mov
movb
faddl
push
imul
mov
add
or
push
pop
out
xchg
jp
push
mov
add
jle
sub
fdiv
cmpb
push
inc
notb
inc
addr16
roll
fs
movl
cmp
lock
rcr
inc
pshufw
push
out
stc
inc
sbb
test
cld
mov
jl
dec
sbb
sarl
add
cmp
pushf
fiaddl
loopne
or
cmp
out
dec
xor
pusha
and
pop
jge
and
cwtl
stc
xchg
jae
jle
mov
pop
mov
jnp
dec
ret
add
dec
not
icebp
or
shlb
inc
andnps
aas
outsl
inc
lcall
jl
add
cmp
inc
imul
jecxz
jno
inc
mov
pop
test
mov
jl
aaa
inc
jle
push
testl
stc
mov
mov
fcomps
or
inc
call
imull
movsb
cltd
xor
stos
cmp
inc
add
insl
cli
or
pop
pop
adc
inc
adc
xorl
add
jg
add
add
mov
sarl
je
lret
add
test
mov
add
sub
mov
inc
hlt
and
int
clc
add
in
cmp
addl
mov
mov
movsl
pusha
jle
inc
ret
sti
loope
mov
xchg
mov
negb
pusha
or
test
sub
ret
jmp
xor
mov
inc
cmp
or
outsb
add
into
or
repz
in
prefetch
or
mov
scas
inc
daa
add
lret
dec
fiaddl
cmp
ja
roll
fucomp
adc
jb
dec
push
cmp
adc
or
cmpsb
pop
test
lret
out
inc
loopne
fdivrl
adc
and
leave
sbb
pop
add
jbe
push
mov
loope
movl
and
jnp
xchg
mov
jbe
cld
loop
inc
or
loopne
mov
mov
or
gs
add
add
dec
inc
push
adc
cmp
jb
call
ljmp
pop
ret
add
and
in
bound
jbe
mov
lods
pop
insb
lret
pop
into
hlt
cmp
xchg
insb
add
cmp
pop
js
jmp
inc
lret
inc
jns
pop
pusha
repnz
faddp
cltd
inc
out
mov
call
inc
jl
mov
loop,pn
mov
dec
mov
andl
mov
inc
mov
cmp
inc
mov
fcompl
lods
mov
call
mov
icebp
js
lahf
inc
jp
mov
adc
mov
or
es
cmp
and
add
mov
mov
cmp
stos
test
mov
pop
cs
xchg
jp
mov
jge
sub
inc
sub
add
or
pop
inc
push
add
push
dec
enter
scas
fsubrl
cmpsl
mov
inc
dec
xchg
test
fmuls
lcall
jg
rorl
jl
jecxz
insb
xchg
cwtl
mov
mov
cmpsb
lods
mov
xor
repnz
inc
fwait
push
cmp
dec
ss
dec
scas
lcall
fiadds
sbb
mov
cld
sub
pusha
mov
sbb
xchg
mov
dec
add
pop
cmp
test
mov
ljmp
jno
inc
jecxz
jle
push
ret
fldenv
mov
and
mov
add
sub
inc
mov
and
repnz
add
sbb
cmp
arpl
push
rorb
scas
jbe
test
out
cld
mov
sbb
push
xor
mov
push
inc
std
mov
xor
nop
adc
movsl
sub
and
cmp
add
pushf
call
jbe
cld
bound
push
jg
dec
cmp
loopne
sbb
das
xor
mov
jl
fwait
push
mov
lahf
mov
outsl
adcl
inc
mov
loope
faddl
jecxz
jge
je
mov
add
dec
out
pop
addr16
inc
jns
push
inc
sbb
add
mov
scas
rcll
les
cmp
and
jl
jecxz
call
pop
decl
bound
fidivrs
rol
mov
stc
test
cmp
mov
mov
outsb
sbb
mov
out
cli
cmp
fidivs
bound
lahf
mov
outsl
dec
add
pop
leave
push
data16
mov
bound
or
add
scas
leave
jle
pop
xlat
jne
add
or
mov
jg
mov
mov
mov
sahf
les
add
push
imul
inc
and
dec
mov
pop
in
jo
jae
add
add
cmpsb
movsb
stc
cs
sbb
inc
jp
repz
xor
jne
addr16
or
dec
enter
jecxz
inc
or
pop
leave
xorl
ret
in
dec
ret
fucompp
add
stc
fisubs
pop
and
roll
in
dec
jnp
in
scas
jmp
addl
stos
inc
jg
adc
aad
or
outsl
add
mov
addb
add
push
jb
nop
repnz
in
call
jp
push
inc
pop
cmp
add
loop
leave
push
jmp
push
int3
inc
ljmp
stos
insl
call
dec
ret
leave
cmpsl
sub
icebp
jb
lcall
inc
cs
push
sti
cmpsl
and
push
dec
xchg
dec
jp
cli
xchg
enter
mov
or
and
sub
iret
dec
xchg
add
mov
loop
loop
and
repnz
and
xchg
dec
or
out
push
clc
ret
or
outsl
test
loop
aas
jecxz
insl
fistl
add
adc
sub
xchg
nop
cmpsl
in
push
and
call
sbb
in
fisttpll
mov
pop
sbb
icebp
movsl
add
mov
inc
add
mov
push
add
ja
adc
daa
mov
mov
sbb
sub
cmp
lret
mov
push
in
cltd
idivl
push
in
xlat
loope
fisubl
mov
dec
stc
ljmp
mov
push
hlt
jle
push
jecxz
xchg
stos
pop
add
stc
cmp
cld
xorl
push
negb
pusha
adc
arpl
addr16
mov
inc
jne
add
out
xorb
xchg
mov
fidivl
push
inc
inc
gs
xchg
aaa
dec
dec
out
in
lds
outsb
cmc
test
jnp
aam
add
xchg
pop
adc
push
jmp
xor
adc
cmp
adc
jo
and
inc
leave
add
mov
pop
les
sub
push
cmp
push
daa
iret
leave
iret
mov
adc
adc
dec
pop
dec
mov
loopne
and
cs
jne
pusha
push
push
xchg
cli
dec
repz
xor
inc
movsl
and
repz
adc
cmp
dec
inc
add
inc
pop
lds
movsl
and
mov
push
inc
pop
cmp
rcrb
lock
adc
fs
xchg
lret
add
andl
xchg
outsb
and
call
movb
cmc
pusha
xchg
hlt
xchg
jo
fsts
popf
es
inc
xor
sar
movsl
pop
es
ror
xor
push
and
imull
add
shl
lods
inc
aad
gs
xchg
pop
and
push
xchg
inc
insb
or
push
rcr
xor
adc
je
ja
dec
aam
xchg
mov
daa
ret
fs
or
mov
push
pop
daa
int3
push
addl
jbe
ss
lret
jg
pop
movsl
out
add
xor
adc
push
ret
adc
inc
adc
jae
test
out
pop
push
mov
lods
and
and
mov
mov
jecxz
push
adc
pop
mov
ss
lds
mov
jmp
mov
jl
and
push
jge
xchg
out
mov
movsl
aam
xor
add
rol
push
lds
cs
xlat
push
mov
cmpsb
gs
push
das
cld
out
daa
xchg
fsub
insb
pop
fs
xchg
test
dec
popl
cmc
movsl
rol
or
cltd
lahf
mov
push
pop
aad
shlb
push
loopne
mov
test
cmp
push
gs
test
and
mov
fstpl
cs
lahf
add
out
and
xor
dec
inc
push
push
and
in
jno
adc
dec
int3
push
add
jl
out
and
add
mov
add
inc
je
add
cmp
dec
lock
sbb
add
mov
movsl
dec
jmp
jl
mov
xor
add
cmp
aas
add
cmp
outsb
push
sahf
iret
mov
mov
ljmp
xchg
sub
clc
ja
into
test
jle
repnz
movsb
inc
and
cmpb
cwtl
in
push
cmc
std
sbb
neg
pop
push
inc
je
add
fwait
jb
imul
jne
aas
jbe
outsl
add
xchg
pop
jno
xor
xor
adc
int
mov
mov
push
add
xor
add
lcall
and
lock
lret
stos
mov
xor
pop
pop
inc
ds
xchg
fwait
pop
jbe
addr16
mov
fmuls
ds
cmp
test
fimull
outsb
repnz
test
cmp
xchg
jno
add
mov
push
mov
enter
mov
stos
sbb
mov
hlt
loopne
add
xchg
mov
mov
fs
data16
add
mov
in
cmp
insb
jp
imul
cld
cmp
sbb
dec
add
pop
inc
jecxz
mov
cmpsl
lret
lret
pop
cmpsb
sarb
push
push
or
xor
js
pop
in
push
ja
pop
sbb
add
jl
push
ret
bound
mov
stos
pop
and
mov
sarb
nop
stos
xor
inc
or
dec
pusha
arpl
sbb
pop
sub
sahf
fwait
jmp
repz
pushf
or
mov
fcomip
cmp
in
mov
mov
enter
arpl
imull
out
pusha
icebp
inc
or
out
xlat
xor
mov
mov
dec
dec
inc
sbb
cmpsb
popf
pop
or
mov
push
sbb
out
mov
negb
and
xchg
push
stc
enter
in
mov
add
setb
icebp
je
add
repz
xchg
cmp
mov
xchg
ja
push
xchg
inc
outsl
imul
mov
inc
lods
movsl
mov
lret
adc
ret
push
stc
cld
mov
bound
out
xor
or
dec
sub
fadds
and
js
movsb
cld
mov
add
push
jo
sub
xchg
in
or
inc
mov
ds
add
xor
pop
adc
add
ficompl
mov
repz
add
xor
or
jp
aam
ss
push
je
jmp
sbbl
pushf
adc
arpl
ret
push
sbb
sbb
lret
dec
inc
mov
mov
pop
addb
movsb
lock
sub
xchg
jg
add
addr16
jecxz
sbb
movsb
in
or
mov
call
test
out
lods
movsl
incb
dec
repz
rol
cli
shl
pop
add
in
or
add
sti
push
loope
or
and
pmulhuw
cltd
mov
add
jl
jge
imul
movl
inc
add
vsubpd
enter
popa
mov
push
mov
sbb
int
mov
mov
mov
mov
jmp
push
loope
add
jl
daa
out
add
adc
arpl
int3
xor
imul
pushf
icebp
popa
scas
stos
xchg
dec
es
jmp
repz
push
ret
cmp
sti
lret
cmp
fucom
leave
fimull
inc
stos
add
cmc
jbe
scas
push
out
mov
addb
out
add
push
ja
sbb
dec
push
into
popa
xorl
ret
sub
movl
add
cli
jmp
sbb
sti
adc
icebp
mov
add
stos
mov
leave
mov
and
dec
into
push
sbb
push
dec
cltd
imul
push
loopne
or
dec
push
jecxz
lea
loop
fiadds
jae
movsl
push
add
fwait
shl
and
dec
dec
scas
rcll
push
stc
dec
cmp
js
inc
stos
cmp
pop
in
pop
push
mov
sahf
add
imul
jl
call
in
test
inc
rolb
imul
inc
mov
pop
jle
out
mov
bound
xchg
loop
cmp
mov
into
inc
ret
jo
or
hlt
sbbl
jmp
shl
ss
pop
add
std
mov
lret
aad
add
loope
outsl
mov
mov
cmp
insb
mov
scas
clc
ds
loope
cmpsb
inc
inc
sbb
inc
adc
out
add
jg
inc
scas
xchg
sub
mov
ret
shl
imul
int3
aaa
and
sbb
sub
hlt
es
lret
push
ljmp
test
fucom
pop
lods
arpl
fsts
inc
add
or
push
mov
in
add
icebp
and
fnsave
xor
lods
out
ljmp
outsl
mov
rcrl
inc
push
sbb
add
rcr
bound
push
push
cmp
inc
lds
add
add
mov
and
mov
jle
aaa
xorl
mulps
sbb
test
mov
and
cs
mov
fcmovnbe
add
jb
adc
bound
inc
jle
cmc
pop
psrad
jecxz
inc
inc
cld
jl
hlt
addr16
shlb
pop
xchg
in
add
lods
add
cmp
adc
inc
inc
mov
ds
js
cmp
jge
fildl
add
or
imul
fwait
pop
test
frstor
leave
jb
fucom
iret
add
lret
out
hlt
dec
inc
bound
inc
dec
add
shlb
pop
fmulp
sbb
push
cmp
cli
bound
jp
add
mov
jle
mov
mov
mov
xor
jecxz
sbb
dec
in
cmpsb
jg
in
lahf
dec
roll
mov
mov
push
lcall
mov
fistpll
jge
ret
ret
js
movsb
pxor
arpl
cltd
cmp
push
add
gs
cmc
xor
ss
xor
adc
jecxz
pushf
add
in
add
ret
add
out
mov
pop
aam
ss
push
cmp
fdivrs
sub
sub
mov
cmp
jge
icebp
lret
pop
mov
pop
int
lods
neg
push
inc
add
in
leave
inc
pusha
ret
outsl
mov
hlt
add
and
ror
inc
shl
inc
add
addr16
loope
outsb
add
stos
daa
popa
push
ret
add
scas
jg
lock
in
shrb
ret
and
les
mov
jmp
inc
bound
add
push
mov
xchg
int
add
mov
js
enter
jo
addr16
add
push
aam
xchg
pop
adc
sub
and
jnp
loop
mov
mov
sub
xor
add
cmp
test
clc
sub
incl
inc
xor
sarb
fxch
inc
inc
loop
fsub
fisttpll
fwait
ret
inc
push
repz
cld
fwait
lds
add
mov
sbb
rolb
push
pop
inc
sbb
jge
add
adc
add
sti
std
add
jbe
outsb
cmpsl
inc
add
ret
sub
pop
add
insl
popf
lret
add
shl
outsb
dec
call
inc
push
test
mov
cmp
std
dec
leave
inc
enter
jb
lret
jmp
cmpb
int3
scas
bnd
mov
mov
dec
jae
bound
int3
ret
inc
test
jp
xlat
dec
add
and
and
push
jecxz
add
sbb
test
dec
pop
pop
push
mov
mov
ja
xor
add
inc
mov
add
std
pushl
cmpsb
lret
cmp
mov
dec
mov
lcall
ret
movsl
sub
mov
incl
decb
inc
cmp
aaa
push
test
xchg
sti
mov
pop
lods
dec
and
addl
jg
fdivrl
rolb
cwtl
in
aas
in
popf
mov
jns
stc
pop
lahf
jnp
mov
mov
inc
inc
xchg
mov
repz
test
xor
push
js
movsb
push
cmp
mov
fcom
ss
mov
inc
rcr
addr16
ret
ss
jmp
mov
enter
add
ror
repnz
sti
xlat
nop
lea
and
test
sub
add
cmpsb
jnp
pop
bound
cmp
cwtl
scas
test
mov
hlt
xchg
sub
lds
inc
into
addr16
lret
xor
sti
adc
push
cltd
jae
cmp
mov
cmpsl
add
cli
icebp
cmp
call
hlt
inc
imul
or
mov
push
rorl
enter
pop
lret
filds
xor
loop
mov
mov
and
enter
shr
in
sub
cmp
jae
in
add
loop
shlb
imul
cli
jge
insl
aas
inc
pop
mov
sub
and
lea
mov
xlat
call
add
into
arpl
inc
mov
fwait
pop
add
push
push
loope
into
mov
xor
sti
fwait
cmp
stc
jle
adc
jbe
xchg
loopne
outsl
ljmp
in
mov
cmp
adcl
les
adc
fwait
inc
aaa
mov
cmp
add
cmp
add
pop
add
faddl
aaa
jnp
enter
mov
dec
xor
sbb
add
dec
mov
pushf
pop
push
cwtl
mov
add
stos
movl
adc
test
aam
ret
dec
outsb
cmp
out
and
xchg
mov
incw
push
inc
iret
mov
push
jle
or
cld
lret
cwtl
inc
sub
pop
pushl
gs
lret
cmp
jmp
int3
add
inc
stos
testb
jae
data16
xor
cmp
mov
js
bound
jne
out
lds
pop
inc
jp
pop
stc
pop
ss
adcl
add
dec
push
loope
mov
add
push
inc
gs
jge
cwtl
enter
mov
xlat
pop
adc
outsb
ret
pusha
imul
movsl
stos
iret
pop
jg
arpl
cmp
jl
jecxz
ret
fwait
loop
sti
in
add
cld
enter
aad
dec
xorb
mov
jno
cmpsb
cld
and
insl
packsswb
xor
add
xchg
sub
out
xchg
xor
dec
inc
cmp
mov
inc
add
mov
or
xchg
xlat
sub
repz
test
inc
inc
inc
iret
pop
mov
inc
push
loop
push
xor
cli
pop
inc
in
dec
mov
shl
xchg
lcall
sarb
leave
sti
add
jp
mov
in
xor
add
loop
scas
inc
jns
xchg
cwtl
jge
jp
jb
mov
add
jmp
loop
int
out
add
mov
dec
jp
test
push
dec
push
inc
xor
loopne
xchg
push
xor
jmp
roll
adc
fnstcw
ret
lods
pop
jle
jnp
shlb
mov
std
rorl
enter
cmp
xor
lret
pop
sbb
call
stos
aam
movsl
jnp
add
inc
dec
mov
cmpsl
jns
testl
push
cmp
and
pushf
gs
jbe
int
or
pop
pop
jae
dec
add
scas
pusha
jp
jb
incl
outsl
hlt
sahf
inc
insl
cmp
insb
or
add
test
add
and
inc
pop
in
xchg
xor
sub
inc
ljmp
arpl
gs
jbe
inc
jmp
jb
jno
xor
iret
roll
lock
jo
add
inc
pop
cmp
jg
imul
inc
and
leave
mov
pusha
add
and
fldl
mov
cmpsb
fisttpl
push
push
in
inc
sub
or
scas
jb
jne
das
stos
int3
mov
push
push
dec
test
add
sub
fsubrs
inc
das
mov
or
lods
sub
jns
pop
mov
fisubrl
sbb
bound
xor
or
add
and
lods
mov
data16
scas
add
stc
cmpsl
mov
fcomp
bound
test
fsubl
scas
xchg
popa
stc
cmp
ljmp
add
inc
bound
cmp
mov
clc
inc
lret
pop
adc
fwait
mov
fildll
push
outsb
sti
cmpsb
xchg
call
mov
clc
nop
cmp
inc
scas
inc
cmpsb
lods
sarl
pop
pop
stc
jge
inc
ret
or
cld
lahf
jmp
jmp
imul
scas
mov
add
push
hlt
push
dec
out
xchg
pop
xchg
cmp
push
sbbb
push
add
lock
mov
xor
add
bound
int3
add
jmp
adc
fwait
sbb
cli
cmp
scas
cmpsl
add
dec
rorb
jecxz
xchg
bound
jp
cmpsb
jae
movsl
push
cmp
or
dec
jns
std
push
data16
out
mov
sti
lods
inc
add
pushf
cmpsl
push
hlt
xor
add
jmp
cmp
inc
mov
repnz
push
lahf
in
shrl
cwtl
add
pop
insl
loope
iret
pop
add
push
pop
pop
xor
add
call
adc
stos
xchg
adc
popa
jne
mov
add
cwtl
cmpsb
add
jmp
push
dec
sub
jecxz
bound
mov
enter
jp
pop
dec
mov
lcall
icebp
and
loopne
imul
adc
jno
mov
call
xchg
les
push
xor
loope
ret
pop
lret
addr16
and
dec
cmp
cmp
add
jns
dec
add
enter
stos
inc
dec
cmp
leave
les
cltd
adc
sbb
data16
sbb
push
lods
cmp
gs
or
insl
cwtl
mov
cmpsl
xchg
pop
fdivs
in
stos
jo
in
xchg
sti
push
xor
xor
inc
jno
inc
imul
pop
mov
es
mov
std
push
stos
xchg
inc
inc
ljmp
iret
cld
add
imul
cmp
js
xor
jge
cmpsb
shl
sbb
out
negw
jmp
sbb
jae
testb
ret
call
inc
xchg
dec
aaa
ds
test
sbbl
stos
push
dec
mov
in
inc
sahf
and
xor
add
popa
mov
sbb
cmp
rolb
aaa
push
mov
jb
out
aam
push
scas
pop
add
sub
adc
mov
push
and
std
clc
gs
add
mov
dec
push
jae
or
xchg
cli
out
mov
imul
pop
adc
add
sbb
mov
js
ds
add
cmpsl
clc
inc
sub
cld
pop
les
ret
sub
cltd
insb
adc
add
cmp
mov
inc
xor
add
inc
cmc
add
pop
xchg
pop
inc
jns
cmpsl
fdivp
pop
sbb
adc
jmp
add
pop
xchg
stos
cltd
dec
ret
jb
push
lret
icebp
fs
mov
push
imul
jmp
and
clc
cmp
inc
bswap
pop
ljmp
xchg
enter
inc
jns
sbb
xor
gs
adc
cmpsb
sbb
dec
dec
add
aas
sub
adc
cmpsb
cmp
test
sar
add
popf
ret
add
xor
rcr
add
dec
mov
lcall
sbb
out
mov
addr16
push
dec
ljmp
inc
js
sub
dec
in
ret
fmuls
xor
iret
sbb
cmpsb
js
and
pop
jp
sub
push
mov
adc
mov
icebp
inc
daa
fimull
ds
push
mov
das
dec
in
loopne
sti
add
sar
and
sbb
push
mov
in
lods
shr
aam
movsl
aaa
inc
pusha
cltd
adc
jnp
test
enter
pop
pop
scas
cmpsb
add
jns
jl
jno
add
sarl
out
add
sbb
shll
mov
cmp
stos
push
add
push
sbb
int3
out
dec
repz
incb
jne
xor
cmp
out
loop
or
pop
jle
xchg
add
cli
cmp
push
mov
arpl
jno
sarb
in
xor
xor
inc
push
fwait
push
xor
inc
add
inc
xchg
out
pop
xor
inc
lock
add
scas
adc
add
sbb
sti
inc
in
and
fisubl
add
dec
inc
out
and
es
movsb
add
outsb
repz
dec
enter
mov
mov
mov
mov
adc
ss
mov
xchg
push
not
add
bound
loope
in
xchg
fucom
in
std
add
dec
pop
sub
xor
mov
mov
sbb
inc
push
cmc
std
insl
test
mov
push
fld
mov
loopne
sbb
mov
adc
scas
xlat
pop
or
ficompl
pop
jns
les
mov
fs
daa
or
jne
int3
iret
enter
shr
icebp
xor
mov
pop
hlt
cmp
inc
adc
mov
mov
sub
pop
push
dec
inc
pop
inc
daa
incl
or
mov
add
dec
or
jg
stos
out
inc
jge
ret
dec
mov
push
mov
hlt
ljmp
insl
fcomps
xor
inc
inc
cmpsb
ret
xchg
cli
push
arpl
cmp
add
jb
add
sbb
aas
dec
sbb
add
and
decb
dec
add
xor
push
cmp
loopne
popf
fnstenv
dec
jae
insl
xchg
psubsw
or
pushf
cmp
add
sbb
lahf
jnp
dec
pop
dec
xor
xor
ret
pop
fisttpll
pop
addl
pop
data16
xchg
xchg
callw
ret
repnz
testb
stos
dec
cwtl
push
xor
inc
mov
fidivrs
inc
ss
xchg
mov
push
cld
repz
jmp
or
xor
shlb
dec
pop
cmp
adcl
push
int3
repz
jae
add
pop
mov
mov
sbb
inc
cmp
jecxz
aaa
rolb
test
into
iret
inc
arpl
mov
add
scas
clc
add
fmull
dec
lods
pop
outsb
mov
add
cmc
inc
mov
pusha
dec
xor
xchg
pop
dec
lods
sahf
add
mov
xchg
inc
mov
fwait
xchg
jg
pop
sbb
mov
dec
xor
jb
or
bound
cmpsl
xor
xchg
pop
shlb
add
jne
add
xchg
cmpsb
fwait
int
stos
mov
sar
push
ljmp
call
inc
pop
mov
stos
insb
inc
lret
xchg
sub
inc
pop
cmp
sti
or
add
enter
scas
inc
jno
mov
mov
xor
dec
fldt
mov
xchg
testb
add
dec
jae
push
add
mov
into
sub
mov
inc
fwait
mov
inc
int3
mov
bound
sub
add
je
stc
scas
jb
js
out
repz
or
lret
mov
ret
lcall
add
jno
inc
imul
fdivrs
xchg
push
cmp
insb
push
repz
scas
xor
pop
dec
cmpsb
popf
std
add
cmp
fadds
jecxz
adc
mov
push
mov
mov
push
push
enter
jnp
push
add
rolb
cwtl
sbb
cs
inc
cli
xor
jp
cmpb
jge
ret
add
stos
mov
jo
loope
movsl
icebp
jg
cmp
rcrb
ret
push
mov
dec
andb
pop
adc
nop
mov
push
add
dec
adc
jecxz
mov
cmp
add
jb
sahf
insl
xchg
sti
jp
xor
inc
addr16
add
mov
add
mov
jle
push
loope
popf
dec
fsubp
xor
repz
imul
pop
add
push
dec
xchg
jo
sub
out
add
sbb
sbb
cmp
ror
mov
stos
out
mov
cmpsl
in
ja
ds
test
jmp
lds
movsl
jmp
jl
adc
mov
lea
push
dec
arpl
add
pushf
icebp
test
inc
add
push
inc
push
push
enter
jnp,pn
jle
add
push
out
add
push
imul
sbbb
dec
xchg
dec
test
pop
mov
pinsrw
inc
js
into
pushf
sbb
jns
test
out
add
or
stos
pop
dec
mov
xchg
or
pop
jg
push
aad
data16
xchg
add
in
rorb
xor
mov
ret
das
pop
and
add
sar
dec
mov
lret
bound
inc
mov
and
jbe
sbbl
inc
mov
dec
repz
imul
mov
lods
jnp
cmp
add
adc
outsb
pop
add
add
ret
cmp
dec
or
aam
sti
cmp
sub
rcrb
add
add
jb
add
sub
repz
pop
lea
leave
dec
cmp
push
adc
aam
or
and
rcrb
orl
inc
dec
xor
jb
mov
sub
cmp
xlat
add
adc
jecxz
mov
sahf
push
inc
or
mov
cmpsl
inc
mov
pop
pop
cmp
aam
dec
fidivrs
fisubl
cmovbe
add
ja
lods
testb
mov
xor
adc
aas
lret
out
int
bound
inc
lcall
and
rol
sbb
loopne
mov
jecxz
mov
dec
mov
jp
or
and
xor
xor
add
repz
mov
jbe
test
inc
jo
out
push
cmpl
jnp
inc
fldcw
loope
movsb
call
clc
xchg
add
mov
test
scas
imul
mov
and
stc
lock
or
pushf
add
ds
fwait
push
push
gs
jmp
ja
cli
aaa
mov
push
ret
push
cwtl
aaa
xchg
add
push
lahf
xchg
inc
iret
shlb
inc
push
mov
outsb
insl
ret
pop
out
jmp
jns
faddl
push
jmp
fnsave
add
not
je
aam
add
lds
nop
and
push
fnstenv
fistpll
pop
shll
icebp
lock
bound
inc
add
xchg
fsubrl
subl
es
add
fwait
xchg
or
rcll
jl
or
push
cmp
sti
or
imul
push
dec
es
sub
jecxz
pop
sub
jecxz
sti
lret
jmp
dec
call
mov
fwait
mov
push
jnp
xor
outsb
mov
aas
inc
push
sbb
push
add
pusha
repnz
dec
shrl
cmc
add
xor
enter
lcall
int
dec
and
in
movb
aam
mov
add
int3
mov
ret
in
push
je
repz
sbb
mov
rcl
push
sub
adc
rcr
ret
sbb
aas
je
adc
push
and
fistl
jp
bnd
imul
idivl
push
dec
ds
ds
add
cwtl
pop
stos
add
out
lldt
cwtl
inc
stos
add
aam
mov
add
fnstsw
cmp
add
jb
fisubrl
loop
inc
cmp
shlb
gs
stos
call
dec
pop
orl
fisubrs
dec
mov
add
outsb
cmp
dec
cli
cmp
xor
iret
mov
outsb
sbb
pusha
jl
dec
clc
mov
or
push
aad
add
movsb
stos
int
lret
mul
inc
roll
std
inc
fwait
push
movsl
loopne
add
lods
push
xor
mov
jnp
into
js
lret
fimull
add
fiadds
cmp
lods
aas
jg
or
sar
ret
inc
and
lcall
sti
push
add
cmpsl
stos
add
or
jge
pop
movsl
or
adc
xchg
add
test
mov
add
imul
push
mov
inc
out
jno
pop
dec
in
sbb
adc
cmp
stos
add
sub
jbe
add
adc
and
sub
aad
ljmp
dec
inc
sahf
loop,pt
mov
xchg
jp
shlb
orl
adc
jmp
roll
lahf
xor
adc
inc
mov
push
stc
xchg
dec
aam
bound
add
outsl
loop
fs
stc
push
fucomp
add
mov
cmp
xor
cmp
rcll
cld
icebp
je
fs
add
test
add
inc
or
mov
mov
dec
out
sub
pop
cmp
icebp
int3
add
dec
dec
adc
pop
jl
cmpsb
ret
jmp
inc
push
mov
adc
mov
jg
xor
add
scas
xchg
cmp
test
std
mov
jge,pt
in
ret
sbb
inc
push
notl
dec
fmul
xor
mov
or
pop
ret
sbb
insl
inc
lret
push
movsb
data16
mov
add
dec
test
sub
inc
jle
movb
lret
dec
enter
mov
imul
cmp
fidivl
pop
popa
lcall
daa
mov
or
adc
mov
pop
cmpsl
or
subb
lret
mov
out
lss
jns
adc
pop
xchg
add
sbb
ret
inc
je
hlt
addr16
aam
mov
jg
pop
nop
addr16
repz
and
xchg
scas
add
jb
cmp
add
xchg
jp
pop
outsb
test
pop
adc
std
mov
pop
fldt
xchg
lods
fstps
inc
int
and
test
hlt
repz
iret
mov
fdivrl
cmp
xor
ret
dec
adc
xor
loop
es
stos
add
sbbl
mov
shlb
loop
push
arpl
jb
mov
mov
xchg
push
test
cmpsl
jge
ss
jbe
adc
sbb
pop
pop
stos
roll
mov
jl
pop
sub
mov
sti
mov
out
add
push
xor
pop
jecxz
frstor
popf
pop
dec
jae
arpl
mov
add
mov
cmp
pop
call
incb
outsl
jl
scas
xchg
mov
sahf
movsb
outsb
dec
clc
movsl
inc
jl
jns
cmp
aas
add
stos
loop
or
push
add
shl
xchg
inc
call
mov
sarb
jg
in
add
add
bound
outsl
scas
div
inc
mov
inc
or
aaa
dec
dec
jecxz
jne
scas
jl
xor
jae
jno
or
dec
outsb
into
pop
add
fcomps
lea
dec
sub
outsl
stos
mov
popl
pop
enter
inc
mov
ljmp
addr16
xchg
or
dec
sti
and
inc
bound
pop
loopne
dec
sub
fdivrs
les
jns
call
aaa
lock
inc
cmp
inc
jne
sbb
and
mov
rcrb
std
jecxz
call
bnd
std
lods
out
fs
inc
cli
rcrb
inc
lret
inc
negl
add
into
iret
aaa
dec
push
das
xor
add
lock
xchg
cld
dec
repz
cmp
imul
ds
add
cwtl
xchg
lret
lds
push
add
repz
dec
stos
push
hlt
int3
xchg
outsl
pop
movsb
mov
into
dec
mov
imul
dec
inc
aad
and
gs
inc
clc
lods
aaa
fistl
dec
adc
pop
out
jo
sbb
xchg
inc
inc
insl
out
mov
jnp
jg
jne
xor
push
mov
mov
sti
or
adcl
shrb
inc
push
out
lcall
inc
mov
loop
ret
mov
divb
jecxz
out
aas
insb
loope
test
ror
sbb
jle
or
inc
mov
fs
addr16
inc
push
pop
fadd
outsb
or
add
adc
jmp
mov
push
rcll
data16
ret
add
clc
hlt
jecxz
pop
in
sahf
jp
mov
out
add
push
jl
cli
inc
out
adc
pop
retw
mov
cmp
addl
loopne
call
pop
push
mov
jae
cmp
scas
or
outsl
iret
mov
sub
out
int3
out
std
add
sub
imul
cmp
pop
mov
inc
fwait
call
sti
fwait
lret
and
outsb
dec
cli
ds
dec
cmp
in
movsb
arpl
xor
mov
cltd
into
dec
sbb
add
mov
scas
je
xor
or
add
mov
add
lahf
add
les
cld
out
jmp
add
mov
sbb
xchg
inc
inc
in
push
loope
cmp
test
scas
inc
sbbl
outsl
fnsave
jmp
loope
fists
insl
int3
or
jnp
pop
jo
inc
lock
arpl
add
ret
test
lahf
and
dec
js
rcr
scas
inc
or
fisubs
imul
repnz
les
pop
xchg
movsb
mov
add
into
jg
add
cmp
xchg
jp
add
lods
into
ljmp
shlb
add
rolb
adc
cmp
ds
jle
in
add
lret
adc
push
call
add
comiss
jmp
and
and
push
cli
add
sbb
icebp
ret
sbb
shr
out
je
fcmovnbe
jle
rol
jge
pop
jg
dec
or
incb
bound
leave
dec
sub
lods
ds
sahf
fstl
out
jbe
dec
adc
inc
cmpsb
inc
cmp
rorl
hlt
stos
arpl
mov
xchg
js
or
pop
call
insl
aaa
dec
dec
adc
add
mov
outsb
icebp
lret
add
dec
push
lret
stc
dec
cmp
jo,pn
add
nop
aas
mov
dec
sub
in
cmpl
repz
add
cmp
cmpsb
cmp
rcr
pop
inc
adc
imulb
pop
les
lock
jno
sahf
dec
cmp
lcall
outsb
enter
xor
dec
dec
pop
sbb
mov
lahf
call
icebp
cmp
scas
lret
add
insb
mov
jmp
std
loopne
aam
pusha
adc
lods
push
dec
cmpxchg
pop
outsl
scas
pop
dec
pusha
mov
movsl
inc
xor
inc
inc
ret
add
inc
addb
sbb
sbbb
cmpsb
fbld
mov
fldcw
adc
jnp
subb
jle
xchg
ret
xlat
dec
inc
jo
lds
test
les
loop
ljmp
in
int3
add
xor
jle
ds
mov
dec
mov
sbb
ret
ficomps
fildl
inc
arpl
jle
and
inc
sti
dec
pusha
adc
inc
sub
sbb
mov
add
cmp
pop
mov
add
clc
aaa
push
cwtl
repz
inc
mov
sub
neg
rep
ret
pop
fsubrl
pop
ret
into
cwtl
bound
addb
and
sub
aas
movsl
test
in
lods
jecxz
mov
gs
pop
jb
lret
cmp
jg
sub
xchg
mov
stos
in
fstps
cmp
mov
add
jp
dec
and
mulb
or
mov
adc
dec
mov
dec
pop
add
jmp
outsl
stos
inc
mov
andl
pop
mov
mov
sbb
adc
pusha
jecxz
lock
add
xchg
aas
test
add
dec
dec
cmp
add
faddl
cmp
pushl
out
sbb
negb
stos
mov
std
dec
pop
scas
xor
add
shlb
and
fidivrs
sbb
mov
out
mov
inc
push
mov
stos
jmp
scas
sub
add
imul
mov
jo
cmp
ds
jmp
adc
call
add
ficomps
int3
icebp
adc
cltd
push
or
push
add
add
cli
pushf
pop
gs
jp
add
push
int3
fidivl
mov
add
sub
adc
jns
fsubrl
add
mov
add
test
push
sahf
sub
sub
outsb
jmp
mov
ret
das
add
rol
pop
scas
loopne
add
ds
sub
cmp
xlat
mov
sbb
bound
data16
in
jo
add
mov
shl
inc
stos
incb
push
gs
mov
add
push
test
add
repnz
roll
sahf
jl
and
out
mov
mov
mov
mov
add
das
sub
orl
add
pop
adc
dec
gs
shr
cli
arpl
fwait
outsb
mov
sub
push
mov
popa
and
and
mov
rclb
mov
dec
out
jecxz
jae
mov
sub
xor
xchg
adc
mov
test
add
loopw
adc
int
bound
sbb
xlat
dec
sti
jmp
add
outsl
and
mov
cmp
mov
dec
or
icebp
mov
mov
sbb
cmp
mov
sahf
cli
push
dec
mov
pushf
and
shl
inc
pop
jae
jl
std
outsb
add
imul
add
out
fsubs
sbb
add
andb
push
inc
testl
lahf
xchg
cwtl
add
sbb
add
pop
jbe
rcrl
inc
mov
in
lret
fwait
add
test
mov
scas
cli
incb
inc
adcb
xchg
sbb
jle
les
data16
dec
inc
pushf
mov
mov
jns
js
pop
sti
add
mov
mov
add
call
imul
cmp
mov
stos
mov
pop
pusha
pop
dec
cwtl
orb
jp
add
jo
jae
mov
dec
jno
in
jmp
fldl
adcl
loop
sti
mov
mov
jb
fs
rclb
inc
stos
scas
xchg
push
add
test
dec
mov
xor
pop
dec
fdivr
mov
add
mov
lahf
add
ljmp
ret
sub
lds
xor
add
out
andl
rorl
cmp
cltd
fcomi
outsb
add
xchg
roll
arpl
xor
bound
jb
add
adc
sbb
cmpsl
aad
pop
push
stc
adc
mov
add
call
pop
pop
incl
jae
fst
cltd
sbb
xchg
add
and
ja
jmp
sub
ret
outsl
sti
call
xor
in
or
insb
sti
add
into
mov
dec
cmp
xor
jl
jne
adc
imul
fwait
xor
add
push
inc
lret
hlt
arpl
mov
add
test
jne
jmp
jb
cmpsl
push
stos
inc
inc
sub
imul
add
add
ret
xchg
push
jl
sbb
popf
add
and
mov
lods
cmp
push
stos
addb
call
ret
sub
loop
add
xchg
mov
lods
aaa
pushf
inc
sbb
scas
pop
jge
out
add
or
pop
je
sub
lods
adc
pop
cmp
sub
ficompl
jl
sti
es
test
jecxz
pop
into
add
xchg
mov
jmp
inc
add
mov
jge
stos
cmp
add
cmp
jmp
mov
hlt
arpl
lds
jae
inc
sbb
dec
mov
jnp
popf
pop
add
jle
inc
sbb
cmp
js
add
stc
andl
add
iret
push
pop
fisubrl
add
mov
arpl
lcall
addl
dec
dec
addl
and
push
mov
add
or
mov
outsl
sbb
mov
cmp
xor
fwait
sub
mov
jle
mov
insb
cmpsl
gs
cmp
pop
out
jecxz
stos
fneni(8087
pop
orl
out
dec
insl
cmp
out
add
jmp
jecxz
ljmp
cwtl
dec
test
test
aad
jl
jbe
fcompl
sub
stc
fimuls
jb
add
fs
lret
rcrb
push
xor
fisubl
mov
out
dec
sbb
mov
add
mov
pop
add
xchg
dec
pop
inc
push
inc
scas
mov
cwtl
add
mov
stos
rolb
lock
xor
push
pop
aam
sub
mov
mov
cmp
ret
dec
add
mov
gs
jno
xor
jge
jbe
add
std
jns
add
adc
sbb
roll
inc
leave
push
cmp
add
ret
mov
gs
xlat
cmp
rclb
xor
mov
add
jg
lcall
daa
aas
mov
adc
movsl
aad
data16
pop
cmp
loop
mov
int
mov
mov
decb
iret
jge
add
jecxz
fadd
or
popf
scas
ja,pt
lods
loopne
mov
dec
or
shl
cmp
mov
and
fimull
fbstp
mov
jp
cmp
cmp
add
fnstsw
lcall
lock
test
pop
mov
cwtl
pusha
add
adc
add
jae
inc
aas
fidivrl
jbe
jns
out
add
rep
pushf
adc
add
push
cmp
mov
popf
xor
pop
dec
int3
cmp
addr16
std
mov
aam
adc
push
lret
mov
lods
jb
cli
test
not
cmp
fimull
or
mov
add
mov
ret
pop
lods
inc
cmp
jle
add
adc
inc
fnstsw
mov
xor
dec
out
popf
filds
adc
dec
stc
lea
andl
outsb
inc
ret
mov
mov
or
add
add
dec
out
aad
add
mov
loop
pop
cmpl
xor
call
fwait
cmp
addr16
in
repz
jp
cmp
or
cmc
mov
push
hlt
inc
roll
push
test
add
sbb
xchg
add
inc
xor
std
cwtl
push
xchg
jle
addb
adc
stc
ret
dec
jp
add
or
shll
lahf
in
jnp
jle
outsb
push
sbb
pop
or
xorb
xor
pop
pop
fildl
dec
jecxz
mov
cmpsb
xchg
pop
clc
cli
mov
movsb
leave
add
mov
inc
cmp
cmp
nop
mov
mov
mov
clc
pop
int
mov
xor
cmpsl
push
outsl
pusha
or
inc
hlt
out
not
enter
cmp
or
stos
jo
mov
mov
push
pop
inc
dec
mov
icebp
daa
inc
xorl
jo
adc
mov
js
out
push
add
add
mov
aad
jge
jnp
adc
dec
pop
xchg
inc
cmc
and
pop
fidivrs
stc
jecxz
notl
xchg
add
xchg
adc
fadds
lret
sub
data16
rcll
test
les
and
jge
int3
and
push
add
andb
add
jg
add
out
cmpsb
adc
dec
pop
in
add
ficompl
sub
or
xchg
call
xor
pushf
gs
clc
xchg
fstl
packssdw
push
jle
test
repnz
ret
mov
inc
and
loop
pusha
adc
insl
adc
in
orb
std
xchg
das
enter
cmp
nop
pop
pop
outsb
lahf
push
xor
les
inc
ficompl
ret
out
add
add
sub
cmp
data16
xor
stos
int3
adc
outsb
out
dec
test
call
dec
push
pushf
xchg
sub
pop
add
pop
xchg
sbb
nop
inc
jle
sub
inc
movb
jp
inc
int
cmp
dec
nop
out
les
push
inc
add
inc
inc
xor
and
cmp
dec
rcrb
ljmp
add
test
pop
add
push
mov
sbb
add
ljmp
cmp
pop
or
mov
sti
jl
adc
clc
aam
out
jecxz
add
cmp
or
add
push
add
out
or
insb
nop
aas
fadds
mov
jge
bound
add
in
xchg
add
test
adc
adc
movsl
rcrb
in
ficoms
dec
dec
sbb
mov
call
jmp
in
inc
gs
mov
jge
out
cmp
fucomp
cmp
inc
add
jae
xchg
adc
cmpl
add
cmpsb
adc
out
repz
jne
popl
add
sbb
jg
add
mov
inc
data16
cmp
cwtl
adc
pop
cmp
add
aad
sti
lcall
movsb
daa
jb
push
sub
fldcw
icebp
sbb
sbb
stos
incl
add
push
add
mov
fsubrp
mov
dec
xor
adc
jb
jl
inc
add
call
roll
dec
shlb
add
call
fiaddl
or
icebp
sbb
adcl
pop
cli
add
sub
add
mov
or
xchg
cmp
rcl
mov
out
add
sbb
add
pop
xlat
add
xchg
std
adc
mov
and
es
jge
dec
outsb
out
icebp
add
lcall
push
mov
js
push
ret
jbe
outsb
bound
fists
scas
mov
movsb
dec
out
cmp
or
dec
test
mov
add
adc
and
xchg
sub
xchg
jno
dec
sub
lods
add
movl
mov
xor
xor
xchg
xchg
lods
pop
dec
inc
mov
scas
into
ficoml
mov
inc
or
movsb
mov
ljmp
leave
rcl
lret
mov
push
dec
pop
mov
rcrb
hlt
data16
pop
inc
dec
push
lods
mov
sub
cmp
pop
adc
test
and
loopne
push
roll
enter
sub
pop
shll
mov
clc
mov
xchg
icebp
jp
pop
add
in
mov
mov
mov
lock
ss
inc
pushf
pop
lods
dec
mov
mov
mov
add
xchg
out
gs
add
lods
adc
sbb
cwtl
xor
add
out
rolb
leave
jle
stos
cmp
icebp
addb
cmp
cwtl
pop
add
mov
mov
inc
stos
scas
mov
add
data16
sahf
or
inc
inc
insb
pushf
push
push
xlat
jl
lahf
outsb
orl
lods
add
ret
cmp
stos
or
add
movl
pusha
fs
mov
leave
add
pop
jmp
call
inc
out
fiaddl
scas
add
inc
es
stos
rcr
test
fbstp
adc
jo
sbb
rcrb
das
add
and
fbstp
stos
inc
jp
pusha
add
iret
or
sub
loope
js
xchg
xor
repz
add
sub
dec
jbe
fstpl
outsb
xor
scas
xorl
pop
push
cmp
bound
repz
mov
dec
mov
fsubl
mov
dec
mov
push
push
ret
push
lock
push
jp
push
sbb
enter
or
xchg
es
loopne
sub
in
mov
xor
push
cwtl
adc
add
push
inc
xchg
sbb
scas
cmpl
in
ja
push
xor
rorb
or
add
loope
mov
stos
pop
pop
inc
lods
fs
mov
lahf
str
jmp
bound
ret
dec
pop
add
clc
test
repz
sbb
loope
and
cmp
add
leave
cmc
xchg
imul
repz
add
pop
adc
in
vminss
std
rolb
mov
jno
add
mov
loope
pop
push
mov
add
sbb
push
jae
pusha
add
pop
inc
pop
push
test
and
fldl
ret
push
je
inc
mov
lods
add
mov
iret
loope
adc
sbb
lcall
rclb
lret
cli
push
dec
int3
push
add
jle
roll
pop
jmp
sub
push
lahf
lods
sbb
outsl
popf
xlat
and
sbb
adc
jl
std
fcmovbe
cmp
add
sbb
adc
add
js
pop
add
and
movsb
cmp
xlat
movsl
mov
dec
ret
add
xor
jge
mov
jb
pusha
leave
mov
jp
cli
imul
loope
mov
jge
and
popa
out
bound
testl
in
pop
fdiv
cli
and
rcrl
mov
adc
mov
xor
inc
and
xchg
and
in
insb
xor
add
mov
add
lret
je
leave
in
mov
sbb
lret
inc
vpmullw
add
jl
imul
fimull
push
xchg
js
mov
add
dec
dec
ret
js
std
int3
shlb
out
cmc
add
cltd
arpl
jge
add
mov
addl
jbe
iret
inc
xchg
in
sti
inc
dec
push
xchg
sub
fcoms
mov
inc
rolb
in
jmp
mov
icebp
dec
out
js
add
mov
cmpsb
rorb
cmp
test
cmp
mov
loope
jle
out
cmp
add
cld
mov
stc
push
les
stos
data16
lahf
mov
sbb
fsincos
cld
dec
add
aas
mov
mov
push
push
cmp
xchg
add
mov
inc
jge
insb
push
adc
add
jecxz
dec
sahf
inc
add
cmp
aaa
lods
int3
jb
pop
push
xor
jmp
cmpsl
iret
pop
mov
mov
fisubrs
ret
dec
push
pop
push
jecxz
xchg
push
ja
inc
lret
inc
xorb
or
sbb
push
mov
stc
jp
jnp
add
hlt
jge
imulb
inc
stos
test
mov
out
add
or
push
add
cmp
inc
jne
and
cmp
or
ret
mov
inc
add
in
out
orl
jbe
fsubp
cmp
addb
mov
les
enter
mov
add
out
inc
dec
jmp
mov
outsl
imul
test
push
out
xchg
aam
aad
jp
dec
xchg
pop
lock
xchg
dec
jae
dec
and
xchg
sbb
add
mov
fiaddl
cmp
jp
push
ss
sbb
sub
cmp
mov
xor
jae
lcall
nop
pop
cmc
xchg
imul
adc
orb
sub
movsl
adcl
jl
stos
ret
add
push
pop
and
and
or
dec
mov
add
hlt
and
xchg
test
or
dec
stc
lods
ljmp
loopne
xchg
dec
mov
insl
pop
loope
ret
adc
shll
inc
inc
aad
lret
stos
dec
loop
add
or
inc
insb
or
xor
xchg
mov
sbb
ret
inc
imul
or
mov
mov
push
jge
mov
lods
lret
pop
inc
cmp
ret
out
xchg
mov
adc
mov
ds
test
jns
ret
dec
jbe
jp
add
cmp
add
dec
inc
xchg
scas
cmp
add
pusha
es
fists
mov
jns
xchg
cwtl
mov
enter
lea
mov
dec
push
pop
fstpt
fdivrs
inc
into
adc
leave
movl
push
and
sub
jle
adcl
xchg
push
add
stc
cmc
iret
out
xorb
test
add
add
push
aas
add
fwait
loopne
ret
mov
ret
and
xlat
sub
rclb
loop
pop
add
fimull
sbb
pop
rolb
jle
imul
and
or
mov
cltd
cmp
loop
dec
roll
mov
icebp
iret
jle
fiadds
repnz
cmp
js
sbb
jbe
mov
in
dec
cmp
push
add
movsl
or
add
sub
jl
ror
pop
repnz
push
dec
pop
xor
or
loop
mov
cli
pop
adc
mov
sub
aas
ret
xor
mov
xor
add
push
mov
rorl
sar
mov
in
subl
xchg
insl
mov
bound
pop
mov
push
sbb
sbb
add
jo
cld
aas
pop
inc
push
and
in
xor
popf
mov
shrl
mov
sub
and
ret
xor
mov
enter
stos
cli
mov
call
sti
stos
ret
sub
fst
mov
jecxz
pop
pop
and
iret
ret
mov
cli
pop
imul
lcall
xor
add
outsb
cmp
jp
cld
pop
sub
add
adc
out
add
jmp
fstps
push
add
mov
pop
pop
call
sbbb
ljmp
int3
add
clc
mov
add
pop
adc
dec
mov
int3
repz
add
clc
and
mov
add
lods
xor
stc
push
mov
cmp
mov
add
cmpsb
mov
cmp
add
repnz
push
add
pop
enter
ss
ss
xchg
mov
sub
ljmp
jns
clc
ret
push
cli
and
fwait
or
xor
cmp
add
push
fldt
test
in
mov
std
add
fdivl
push
jnp
dec
call
sub
pop
gs
add
call
adc
add
push
xchg
lret
inc
je
shll
std
xchg
inc
jl
insb
inc
push
icebp
fidivl
sub
xlat
or
lcall
sub
mov
ss
inc
or
int3
hlt
inc
jne
ret
fstpt
rcl
loop
and
mov
std
pop
das
push
aaa
adc
inc
mov
pusha
add
push
popa
pop
stos
mov
aam
insl
jg
js
inc
shll
enter
pusha
mov
mov
test
add
pop
push
scas
sub
push
add
add
mov
outsb
pop
jb
or
sti
jo
jae
cwtl
repz
std
pop
lret
dec
test
clc
push
sub
inc
call
mov
add
addr16
pop
movsl
inc
jae
pop
and
jp
lcall
lahf
add
dec
cmp
addr16
int
push
pushf
ss
xor
bound
dec
xor
mov
and
push
cmp
pop
add
rcl
add
inc
mov
in
add
mov
adc
add
xchg
call
pop
stos
rolb
cmp
mov
out
sbb
pusha
ret
add
adc
push
pop
dec
jge
inc
mov
inc
test
insl
repnz
inc
jo
pop
mov
xchg
test
mov
fcomi
leave
aad
std
add
fs
mov
pop
ret
mov
out
add
dec
fcompl
mov
pop
sub
pop
jp
je
add
cmp
lock
aas
mov
ret
sbb
mov
pop
xor
xor
and
jecxz
cwtl
lea
dec
inc
fldt
jge
in
fwait
out
add
or
push
add
adc
cmp
mov
pop
push
mov
push
nop
add
fistpll
sbb
add
push
les
aam
jp
pop
ret
mov
stc
xor
mov
and
jbe
and
pop
shl
shlb
adc
pop
inc
mov
xor
add
xchg
jp
in
or
pop
push
add
stc
mov
or
aam
add
xor
insl
push
pop
adc
cmp
out
arpl
pop
xchg
ljmp
dec
scas
call
sub
les
add
push
lds
mov
mov
lea
mov
lods
and
pop
mov
inc
lahf
out
xchg
filds
loope
pop
mov
sti
dec
in
add
bound
cmpsb
add
fcmovb
decl
add
loop
inc
xchg
jecxz
mov
in
fmull
sar
add
stos
cmc
inc
mov
std
mov
cmp
mov
shll
or
adc
cld
stos
sti
loop
cltd
add
sahf
shll
add
rclb
cmp
lret
add
ja
add
mov
xchg
sbb
cmp
enter
ret
ja
lods
pop
inc
ror
add
xor
xor
add
sbb
or
adc
dec
add
shrb
mov
popa
mov
sbb
shrb
dec
repnz
and
addb
mov
cmp
inc
push
jle
push
notl
pop
add
int3
cmp
fdivs
or
stos
add
xchg
stc
mov
imul
adc
dec
xchg
lcall
jle
icebp
rorl
add
sub
adc
movsl
push
and
add
out
iret
std
pop
into
scas
ret
jp
inc
ret
stc
stos
push
jp
adc
out
rdpmc
je
xor
subl
lods
add
sti
and
mov
std
jle
addb
popa
ret
mov
pop
jecxz
push
push
dec
xchg
stos
jle
jbe
clc
xchg
cmpsl
mov
imul
cmp
mov
mov
into
mov
fadds
je
hlt
ficoms
roll
add
and
xchg
idivl
inc
pushf
cltd
repz
mov
repz
test
loopne
addr16
sub
rorb
xchg
mov
inc
jbe
stos
dec
aaa
inc
mov
arpl
lds
add
add
enter
test
outsb
push
inc
jp
sti
in
pop
ret
mov
pop
rcl
inc
in
dec
inc
lock
jp
dec
inc
adc
scas
push
into
cmp
push
lea
mov
cmp
imul
pop
push
in
jle
lds
push
mov
add
pushf
imul
outsb
and
jne
sub
add
ret
adc
mov
loopne
mov
dec
je
or
mov
push
fdivrp
rcrb
fbld
mov
xlat
dec
xor
jecxz
dec
icebp
ret
mov
dec
xchg
call
jae
pop
pusha
jns
xchg
mov
dec
decb
sahf
mov
inc
push
mov
mov
xor
sbb
nop
adc
mov
pop
ret
sub
add
mov
fistpl
testl
test
pop
dec
push
add
js
add
lret
dec
aaa
jo
sahf
xchg
xchg
jno
gs
xor
add
ret
add
or
mov
and
sub
dec
ret
je
xchg
pop
fs
and
nop
add
and
lret
outsl
jb
filds
call
out
add
lret
jmp
mov
sub
dec
mov
sub
dec
add
push
mov
push
pop
repz
mov
outsl
push
inc
loope
mov
pmulhuw
inc
sub
ret
xor
hlt
aam
inc
xor
xlat
repz
gs
out
adc
add
ljmp
add
insl
xor
cmovge
adc
jp
stos
inc
sti
je
setb
icebp
data16
inc
lods
mov
out
xchg
and
ret
test
inc
ljmp
lret
cmp
add
jb
inc
push
pop
int
mov
lret
cmp
cmp
in
pop
mov
sub
adc
mov
inc
and
mov
shl
inc
add
xchg
lret
in
imul
cmc
insl
add
or
aas
inc
inc
inc
rcr
pop
xchg
sbb
sti
add
cli
lods
icebp
xchg
mov
cmpsb
adc
daa
lahf
xchg
add
mov
push
rcrb
mov
push
lret
lods
lcall
mov
adc
dec
das
outsl
test
movsl
add
cmp
mov
stc
jg
data16
inc
mov
add
dec
nop
dec
or
into
mov
mov
xorl
lahf
add
xchg
dec
mov
push
dec
sbbl
add
out
jl
insl
jl
add
hlt
mov
inc
cld
lea
mov
sub
jecxz
repnz
lods
repz
imul
dec
mov
loope
arpl
jnp
or
add
call
outsl
add
insl
std
dec
sbb
inc
inc
sub
je
push
cwtl
ret
lods
dec
sub
pop
jo
movnti
mov
jecxz
fbstp
sti
repz
sbb
dec
dec
inc
test
ret
loopne
es
imul
insl
data16
pop
int
jnp
add
sti
loopne
lods
mov
in
add
and
add
pop
insb
loope
clc
lret
arpl
ljmp
sub
mov
add
mov
push
stos
jns
sub
add
mov
int3
add
das
call
in
ljmp
mov
sti
push
dec
lds
stos
or
imul
xor
push
inc
rcrl
push
stos
mov
fwait
xor
bound
xchg
add
ret
sbb
add
push
testb
mov
pusha
jns
dec
mov
int3
jecxz
cmp
ror
inc
fcmovnu
loop
repnz
cs
scas
mov
aas
fwait
cmp
fldl
inc
dec
out
push
inc
mov
add
fdivrs
movb
mov
jecxz
sbb
and
mov
sti
add
and
dec
call
rcr
or
mov
imul
aas
pop
mov
int3
xor
inc
ret
fwait
mov
add
jle
movsb
fadds
outsb
add
adc
loopne
call
sub
in
cmp
inc
mov
add
fwait
dec
mov
adc
fwait
scas
jl
add
loopne
imul
aas
pop
mov
sbb
pop
mov
jmp
leave
sub
in
cwtl
jge
sub
sti
scas
mov
add
sub
jnp
mov
out
push
pop
jmp
jp
das
add
gs
rolb
push
jg
jecxz
mov
into
cmp
pop
mov
dec
das
out
fwait
or
mov
mul
push
cmpsb
jnp
mov
imul
ret
fsubs
scas
dec
fwait
out
inc
jmp
add
inc
int
aad
data16
pop
cmp
mov
jnp
fwait
dec
idiv
cli
mov
mov
repz
sub
jmp
ljmp
xchg
cmp
decl
enter
in
mov
inc
sbb
inc
mov
sub
mov
mov
out
pop
inc
sbb
fwait
cmp
cli
fdivs
das
call
pop
lcallw
add
aaa
std
mov
add
cmpsb
sub
and
sub
or
xchg
add
push
sahf
push
dec
bound
shll
jge
call
ss
fsubs
sub
and
fiadds
cmpl
jmp
daa
icebp
aaa
jecxz
cmp
mov
inc
scas
ficoms
inc
cwtl
xor
fstps
js
or
retw
or
sub
sti
add
fcmovne
mov
rorl
push
push
loope
add
clc
jl
lret
sub
jge
loop
jg
add
pop
mov
inc
xor
add
xchg
leave
lods
stos
out
lcall
aam
or
ss
inc
push
pop
sbb
fs
xchg
add
mov
js
aad
lds
ret
or
and
int3
cld
fbstp
stos
cmp
fisubrs
dec
jmp
sub
dec
arpl
ret
push
lret
les
add
sahf
sbb
jl
icebp
les
push
push
js
jp
dec
lret
mov
out
ret
adc
xchg
xor
mov
inc
jecxz
icebp
loope
cmp
in
mov
jmp
add
sub
rcl
out
sub
lcall
js
in
sbb
dec
cmp
sbb
sbb
pop
sub
xlat
addr16
fildl
xchg
das
repz
cmp
add
mov
cmp
or
mov
pop
fwait
cmp
push
sti
sub
add
jl
rcll
xor
lret
xor
sub
subb
dec
testb
and
inc
stos
outsl
sti
inc
jns
push
cmp
add
clc
stos
push
jo
fistl
xor
mov
mov
mov
mov
shlb
sub
gs
mov
and
outsl
sti
mov
jg
enter
pop
jle
inc
lea
sub
out
fcmovbe
outsl
int
inc
mov
pop
and
xor
int3
and
push
mov
add
decb
mov
or
pop
mov
dec
int
sti
int3
dec
jle
jb
stos
mov
sub
and
cli
stos
bound
in
jae
imul
call
mov
pop
into
add
dec
mov
dec
xor
imul
mov
or
jp
sub
in
test
jo
mov
bound
cmp
out
cmp
dec
sbb
push
fbld
sub
std
jecxz
and
add
js
add
add
repz
sbb
jl
out
jmp
dec
cmpl
pop
loop
lods
jmp
out
sub
cmpsb
nop
inc
in
push
and
out
inc
lock
shlb
ret
or
test
inc
jne
mov
cmpsl
call
lahf
fsubrl
sub
shrb
sub
fisubrl
lock
movsb
mov
shll
pop
push
lret
lds
jl
jae
test
popf
inc
cmp
jnp
inc
andl
push
sbb
dec
xlat
or
rcl
ret
push
fwait
lret
mov
and
add
add
clc
jl
imul
or
fmul
or
adc
enter
pop
push
mov
mov
pop
sti
pop
out
push
sahf
adc
mov
sub
jecxz
xchg
dec
pop
add
fwait
jnp
and
xchg
jmp
stos
or
add
stos
addr16
in
add
cmp
frstor
mov
add
out
xor
mov
clc
fiadds
lret
lret
out
nopl
push
je
dec
add
jne
jl
and
mov
pusha
fs
xchg
jnp
push
and
loope
inc
test
imul
lret
add
add
pusha
jae
xchg
add
adc
into
leave
add
in
shll
int3
fiaddl
enter
rclb
sub
hlt
cmp
pushf
mov
lret
dec
sti
clc
roll
push
lds
test
ret
ljmp
inc
test
lcall
mov
imul
pop
das
add
lock
mov
mov
sbb
cmp
sub
push
jge
inc
jle
or
mov
mov
mov
mov
out
ljmp
fwait
add
adc
inc
in
out
inc
sub
jg
cmc
ret
sahf
pop
pushf
sub
mov
arpl
jecxz
mov
ficompl
data16
cmc
jl
jno
inc
jmp
dec
cli
cmpsb
add
dec
push
cmc
clc
jae
incb
dec
cltd
pop
js
jae
lcall
push
insb
in
add
push
inc
mov
mov
push
jmp
dec
enter
adc
dec
cmpsb
and
xchg
cmp
dec
sbb
bound
sbb
in
dec
shlb
cmp
dec
add
mov
mov
fcomps
mov
stos
push
cmpsb
bound
add
and
ret
popl
dec
loop
mov
rcl
push
in
call
insl
adc
movsl
add
mov
popa
enter
inc
ret
pop
orl
mov
mov
pop
xlat
dec
sbb
sbb
or
fstpt
xorb
dec
pop
add
add
jp
jmp
sub
xchg
add
cs
sbb
dec
mov
int
add
arpl
pop
mov
stos
add
xchg
cmp
and
test
inc
cli
add
mul
dec
cmpsb
mov
dec
stc
fdivrl
std
fwait
scas
xor
pusha
out
call
dec
sub
fcmovnb
icebp
ret
jmp
cmp
sti
pop
test
or
adcl
jb
pop
scas
insb
cmp
lods
lret
popl
fwait
mov
add
and
outsb
inc
test
std
sub
add
inc
push
loope
pusha
jp
mov
mov
addb
fst
sarl
sti
adc
dec
mov
xchg
dec
and
push
aam
nop
fidivl
clc
or
jge
jae
adc
mov
jmp
lret
sub
adc
jp
std
adc
cmp
add
bound
xchg
test
sahf
sarb
into
sti
dec
pop
js
inc
in
les
enter
mov
repnz
adc
bound
mov
mov
out
or
pop
adc
cltd
jmp
icebp
cmc
ja
sahf
negb
fwait
add
pop
mov
js
adc
dec
mov
add
cmpsb
inc
stos
mov
ret
xor
gs
xor
pop
mov
repz
sbb
add
mov
rcrb
mov
cmp
std
jmp
sbbl
sarl
push
inc
loopne
add
xchg
mov
pushf
testb
rorb
or
add
fmuls
mov
outsb
call
add
mov
out
sub
jnp
pop
mov
std
sub
ret
dec
scas
ret
cli
mov
repz
add
ss
add
cwtl
jmp
add
jp
into
sub
and
xor
pop
aas
jnp
ret
sbb
mov
jo
sbb
sub
ret
imul
fwait
or
xor
jne
pop
bound
movsl
adc
and
jmp
mov
fwait
sbb
addr16
mov
dec
dec
jg
mov
jne
incb
xchg
lret
or
in
add
in
lods
dec
push
and
mov
scas
stos
cs
push
jle
es
add
pop
lret
add
clc
xchg
xor
pop
cmp
dec
scas
dec
mov
pushf
pushf
test
outsb
ss
mov
mov
shl
cmp
jp
fisubrs
adc
insb
sahf
imul
inc
mov
jg
sti
sti
mulb
pop
jp,pt
scas
cli
adcl
fs
cmpsb
jb
lret
push
jmp
dec
jnp
add
and
jp
ss
lret
xchg
test
outsb
adc
xor
jo
jp
enter
cmp
xchg
stos
dec
pop
outsb
jecxz
test
ljmp
out
xchg
push
jb
mov
sub
test
push
ljmp
out
jbe
pop
jb
sti
adc
mov
push
dec
cmp
add
jg
mov
outsb
xchg
bound
add
add
mov
fisubl
jge
cld
ret
ljmp
loopne
inc
jae
scas
mov
ret
inc
lret
ds
out
outsb
xlat
repz
ljmp
inc
jno
jp
adc
xchg
shlb
jmp
pop
add
mov
leave
testl
shrb
bound
jle
daa
add
pop
scas
ja
jb
lret
add
test
outsb
push
mov
shl
xor
les
xorb
repnz
jg
inc
dec
lret
int3
pop
inc
add
inc
loop
fbstp
push
inc
mov
xor
clc
xor
add
adc
add
aad
lods
imul
hlt
xor
mov
icebp
sub
mov
jns
and
je
xor
add
aad
inc
xor
inc
or
cltd
mov
sbb
das
pop
push
jle
add
add
orl
andb
cli
mov
out
repnz
lret
out
filds
pop
mov
ss
subl
inc
cmp
or
add
mov
push
push
es
dec
enterw
les
pop
push
xor
icebp
inc
cmpsl
mov
popf
xchg
jo
inc
out
cmp
inc
add
fnstenv
loopne
call
jp
imull
fnsave
mov
xor
fs
push
test
xchg
inc
jecxz
adc
sbb
ret
and
add
lcall
ds
or
stos
jge
movsl
sti
hlt
add
lahf
push
incb
mov
es
add
xor
addl
popf
inc
pop
iret
in
inc
pop
dec
in
push
inc
inc
xchg
mulb
sub
arpl
cmpsl
mov
push
mov
sub
mov
jae
mov
mov
add
test
insb
pop
add
je
cmp
or
add
lea
lds
pop
ljmp
int3
pop
dec
adc
cmpsl
jae
or
int
inc
add
pop
or
aam
xor
and
scas
addr16
or
pop
dec
adc
push
xor
pop
jae
add
inc
add
addr16
xor
add
and
ja
xlat
rorb
push
push
arpl
and
loop
fdivrs
add
and
add
xor
push
jnp
mov
inc
testb
shll
or
mov
push
push
pop
inc
add
mov
clc
cmp
add
fisubrl
pop
push
imul
add
popf
mov
and
imul
jae
imull
test
add
daa
pop
add
imul
inc
nop
out
sub
mov
in
mov
iret
aad
jle
pop
ret
call
loope
add
outsl
movsb
addr16
ret
fs
mov
pop
jge
cmp
add
push
mov
loopne
scas
xorl
lret
loop
outsb
test
add
andl
inc
loopne
and
sub
add
jmp
movsl
push
inc
mov
subb
fsts
jmp
pusha
int3
add
popf
lcall
stos
xor
addl
cmp
outsb
cs
jmp
call
mov
jns
jb
in
addr16
sahf
cmp
xchg
xchg
movl
lods
push
jmp
push
nop
mov
mov
xchg
cmc
jmp
out
jnp
test
pop
or
add
push
pop
test
push
pop
mov
movsl
out
subl
jae
je
jecxz
mov
mov
xchg
jle
inc
or
and
orl
add
popf
cmp
add
std
pop
xor
sub
out
leave
and
jecxz
sbb
jnp
add
push
sbb
jmp
xchg
mov
mov
ret
int
sbb
jle
outsl
add
mov
dec
push
or
sub
nop
mov
add
push
mov
cmp
fnstcw
or
or
sub
inc
out
sub
aas
and
movb
mov
lea
ret
add
loopne
movsl
push
mov
add
movsb
into
das
mov
addr16
in
ret
fnsave
hlt
mov
xor
push
mov
push
icebp
ret
dec
dec
inc
mov
in
inc
insl
or
push
mov
out
imul
xchg
xor
xchg
ret
and
js
mov
in
inc
cs
jecxz
in
sbb
dec
sub
dec
jo
add
fnstenv
sub
add
mov
loope
xor
sahf
idiv
scas
dec
inc
fdiv
mov
sbb
andl
in
test
inc
lods
jg
out
sbb
and
adc
lcall
shrl
repz
int
adc
jns
add
mov
les
mov
mov
cmp
add
adc
fmul
add
sub
cmp
icebp
sti
sbb
sub
jg
pop
loopne
dec
mov
cwtd
add
les
add
mov
xor
push
jecxz
lcall
call
inc
jmp
add
push
add
jge,pn
loop
mov
insl
sbb
outsb
pop
cmpsb
mov
cmp
push
movsb
pushf
jmp
ja
push
mov
dec
sahf
ficoms
add
jle
outsl
and
mov
sbb
out
loopne
in
in
scas
bound
popl
jle
inc
inc
fadd
cli
aad
or
addb
dec
dec
add
lock
mov
adc
mov
jbe
cmp
dec
fucomip
inc
out
lea
mov
cli
add
andl
add
data16
out
imul
mov
jb
test
in
insb
cltd
add
lock
fcmovbe
addr16
fnstsw
pop
inc
sahf
cmp
sub
cmpsb
cli
or
fstpt
aad
push
arpl
leave
lcall
inc
jp
les
xor
test
movsl
add
sbb
cmpsb
lcall
loopne
scas
out
imul
inc
jns
mov
mov
mov
mov
movsl
xchg
add
sub
cmp
add
mov
sti
inc
add
lcall
or
out
add
jg
mov
sti
fisubrs
leave
jae
ret
outsb
xor
daa
cmp
add
mov
out
add
fucomip
adc
jnp
addl
div
sbb
add
jae
int
stc
aaa
mov
jmp
and
stos
cmp
ret
or
add
mov
push
in
mov
out
call
jb
sub
in
cs
sub
into
jmp
ficompl
outsb
data16
popf
out
mov
push
mov
lds
mov
inc
pop
faddp
push
jmp
lret
aam
loop
jno
daa
dec
jbe
data16
add
mov
jecxz
jg
jmp
or
lds
test
stc
inc
and
orl
push
outsb
sbb
test
jmp
idiv
enter
jae
add
in
dec
jge
or
lock
icebp
outsb
repnz
mov
in
push
mov
add
xchg
ja
sahf
sbb
imul
and
rclb
xchg
xchg
test
and
out
add
mov
push
subb
pop
sbb
or
push
movsl
negb
add
pop
out
pop
add
in
jnp
enter
int
lods
push
mov
pop
or
movsb
out
add
icebp
scas
xor
jmp
aas
add
dec
scas
jg
xorl
loop
push
jle
repnz
dec
inc
mov
lret
loope
xchg
ss
cli
pop
lods
pusha
pop
ret
vmptrst
and
addb
sub
dec
dec
add
cmc
repnz
lret
lods
jle
ja
sti
xorl
jge
adc
test
fsubp
in
andb
cmp
mull
add
sub
add
leave
and
ret
cli
xor
in
mov
and
jmp
inc
sub
add
mov
mov
add
push
dec
and
sar
test
mov
pop
dec
lcall
adc
outsb
inc
sub
loop
push
clc
add
movsb
pop
sbb
and
lret
sar
inc
ret
dec
repz
xor
inc
jl
inc
lods
and
push
xchg
xor
in
inc
pop
stos
sahf
jge
or
add
jmp
inc
ret
dec
out
sbb
add
add
pop
and
jns
popf
rcrl
outsb
adc
jecxz
add
cmp
ret
popa
lods
or
insl
incl
mov
inc
xor
stc
add
xchg
inc
mov
out
xor
sbb
push
xchg
addb
les
mov
out
loopne
mov
and
push
or
scas
lea
or
mov
imul
test
ret
test
pop
or
inc
push
push
test
arpl
sbb
cli
jmp
cmp
sbb
cmc
aaa
jp
dec
ret
and
adc
outsb
into
xor
add
lahf
sub
jmp
mov
popa
adc
add
jae
scas
mov
out
pop
add
add
push
adc
mov
mov
les
call
cli
mov
pop
scas
inc
push
inc
popa
sub
mov
mov
out
fiadds
fistl
shr
sbb
jae
insb
adcl
dec
push
xchg
out
push
jnp
mov
std
mov
sbb
icebp
xchg
or
test
imul
jecxz
scas
cwtl
fs
and
lock
arpl
dec
add
add
call
add
add
dec
cwtl
out
js
mov
or
xchg
mov
stos
jb
scas
cmp
dec
test
jno
pop
mov
mov
pop
lods
xor
add
and
js
jb
add
int3
dec
sbb
dec
fiaddl
scas
lret
or
arpl
inc
and
jp
fbld
gs
adcl
push
je
mull
inc
dec
or
push
mov
cmpl
addr16
aaa
jecxz
pop
mov
and
push
add
sub
in
add
in
push
fsubrl
push
int3
fiaddl
test
xchg
call
mov
mov
in
inc
and
push
aaa
cwtl
cwtl
jecxz
mov
outsl
mov
add
dec
jl
jno
addr16
cli
pop
cmpsb
add
pop
lret
xchg
add
or
xor
shl
dec
mov
cmp
nop
mov
and
add
icebp
dec
dec
call
leave
loopne
clc
fidivrl
and
stos
or
sbb
shll
testl
pop
in
cmp
fcmovbe
mov
inc
inc
andb
mov
add
mov
sbb
loop
push
rorl
fdivrl
cltd
nop
fcomi
repz
and
jnp
out
lds
pusha
cld
call
enter
xchg
dec
add
lods
add
scas
sub
mov
cmp
out
imul
mov
sub
inc
add
pminub
stc
nop
add
xchg
push
pop
adc
add
ja
mov
sub
or
subb
pop
ficompl
mov
lret
in
add
loopne
sbb
imull
dec
sbb
lods
jp
jo
pop
ret
addl
sub
jnp
addb
ljmp
loopne
push
inc
adc
inc
add
and
lcall
in
lret
inc
dec
inc
in
lea
push
xchg
sti
xor
cli
mov
adc
add
mov
imul
loope
adc
xchg
mov
cltd
outsl
fbld
arpl
scas
int
add
cld
in
mov
xchg
add
lret
sub
repnz
push
dec
cltd
movsb
dec
push
loope,pn
add
mov
out
movb
jg
in
lea
outsb
dec
pop
int
add
dec
aam
stos
pop
pop
xor
add
xor
pop
add
jns
mov
es
cmp
mov
repnz
xor
icebp
push
add
jno
jp
push
and
xchg
cmpsl
xlat
imul
hlt
add
rcll
movsb
outsl
lret
dec
call
scas
mov
insl
ret
push
popf
cmpl
mov
iret
test
rorl
ret
scas
loop
pop
xor
sub
or
adc
outsb
jnp
out
hlt
inc
insl
xor
mov
inc
push
mov
lods
icebp
bound
lods
inc
fidivrs
insb
add
shll
push
sahf
add
jmp
lcall
in
xchg
pcmpeqw
cmp
jg
out
test
mov
call
fisubrl
or
repz
pop
movsb
addl
cld
and
aas
xor
add
cltd
add
pop
sub
das
scas
gs
xchg
and
popa
jb
add
sub
js
movb
mov
cmpsl
and
sub
lock
mov
cltd
xor
bound
add
add
adc
jle
cli
ret
or
out
ds
aam
and
pop
add
loop
mov
and
lahf
test
xor
xor
xlat
jecxz
pop
add
dec
add
add
mov
ret
rolb
sbb
in
in
dec
nop
adc
sbb
mov
scas
push
and
adc
sub
int
mov
pop
cmp
jbe
fiaddl
push
or
gs
or
mov
add
out
decl
inc
int
add
cltd
mov
jp
xchg
add
iret
and
negb
orb
inc
push
movl
imul
add
xchg
loop
jae
sbb
xor
pop
fst
add
xchg
dec
dec
add
jno
and
push
mov
pop
mov
cli
add
inc
sbb
or
push
xor
and
and
pop
into
gs
mov
adc
test
cmc
leave
pushf
out
loop
int
cwtl
ret
call
or
add
sti
cmp
repz
xor
test
sbb
rorb
xor
inc
dec
orb
call
nop
add
dec
fs
fnstsw
lcall
mov
add
adc
cmpb
sbb
xor
push
mov
adc
add
clc
sub
lods
out
push
inc
xchg
cld
xchg
mov
in
hlt
mov
jne
roll
jmp
test
fs
lcall
ret
push
in
jp
ficoms
add
jno
fwait
sbb
add
lcall
ret
mov
inc
scas
inc
pop
jmp
jnp
stos
ret
push
test
mov
cmp
les
loope
adc
cmovge
in
jae
hlt
xor
add
fisttpll
sub
push
out
out
inc
iret
xor
inc
push
arpl
hlt
daa
jnp
in
xor
in
imul
pop
inc
std
adc
mov
add
scas
mov
fdivrs
bnd
jmp
and
sbb
mov
and
or
mov
inc
pop
cs
add
das
xchg
in
cli
sahf
ficompl
loopne
cmpb
ljmp
loop
rol
shr
std
mov
xor
add
cld
jl
mov
out
and
iret
lret
insl
ljmp
jae
int
cli
mov
ss
and
aaa
jmp
mov
cmp
in
dec
iret
scas
sub
ret
push
cmp
cli
adc
loopne
push
xor
scas
inc
pop
sbb
jns
test
add
xchg
xchg
dec
imul
je
adc
add
int
ja
mov
xor
push
mov
pop
jbe
inc
popf
movsb
in
and
mov
arpl
xchg
mov
sbb
out
push
incb
xor
insb
roll
add
adc
bound
xchg
int3
mov
nop
scas
sbb
jmp
jno
in
loop
stos
sub
aaa
push
sub
loop
or
lret
dec
enter
push
dec
outsb
cmp
add
mov
dec
dec
jae
sub
shlb
fidivl
scas
mov
test
adc
dec
in
lods
ret
movsb
mov
and
cmpsl
data16
repz
enter
or
or
test
mov
xor
jl
jp
mov
jb
lret
or
repz
dec
mov
mov
mov
pop
dec
lods
inc
jge
mov
or
or
push
push
jnp
inc
sbb
mov
adc
xorl
cmp
inc
pop
divl
sar
dec
sub
movl
mov
sbb
push
lretw
push
test
pop
or
jno
mov
mov
mov
shl
ret
jae
inc
ret
orl
jns
fisubrl
pop
sbb
mov
mov
add
jnp
cmp
pop
and
in
test
outsb
test
and
lret
mov
repnz
cmp
lret
jnp
mov
repz
lsl
dec
jmp
loopne
mov
push
clc
dec
fwait
cmpsl
call
sahf
jnp
and
sti
repnz
lret
add
cmp
fadd
jb
rcrl
in
cmp
in
jo
or
add
mov
js
flds
inc
inc
pop
pop
pop
dec
pop
add
cmp
stos
in
sub
mov
cmp
xor
xor
xor
or
or
inc
add
dec
add
sbb
mov
sbb
push
adc
sub
nop
jae
outsb
outsl
pusha
bound
jl
jo
je
jbe
cmpsb
dec
add
xor
daa
mov
cltd
cli
push
imul
aaa
out
mov
aaa
push
inc
arpl
das
repz
rorb
stos
xor
xor
mov
jmp
or
mov
ds
test
stos
int3
mov
repnz
insb
pop
jo
clc
jle
into
add
jnp
inc
dec
call
xor
fwait
inc
dec
cltd
mov
idivl
mov
cmpsb
out
sti
xor
jnp
cmp
jae
call
js
bound
sub
test
cmp
pop
and
int3
add
push
xchg
jns
jp
movsb
sub
dec
out
fsubl
push
push
xor
stos
cmp
test
add
or
sub
xor
cmp
xor
xor
add
sahf
cmp
adc
add
pop
or
into
or
cmpsl
cmp
daa
xor
js
inc
dec
out
inc
loopne
lret
mov
addr16
add
imul
xor
add
xchg
inc
bound
ret
and
sub
add
shrb
cmpsl
dec
ss
inc
xor
aad
dec
sub
add
loopne
cmp
and
pop
adc
inc
dec
pop
add
adc
sbb
sub
or
and
mov
add
sbb
js
dec
shll
stos
sahf
mov
push
inc
push
push
sub
mov
jns
and
or
add
pop
add
call
js
inc
stos
sti
out
in
add
lock
push
scas
xor
dec
into
mov
mov
mov
inc
inc
aas
insb
inc
lret
movsb
fisubl
ret
inc
add
xchg
sbb
xor
pop
pop
cmp
add
push
add
pop
inc
add
lds
in
je
xor
pop
push
sbb
enter
in
jl
test
arpl
mov
jp
je
shrb
popf
rclb
in
add
push
pop
lea
or
add
jg
imulb
mov
lods
pop
or
and
ds
cmpsl
bound
call
mov
ss
xchg
jno
repz
imul
sti
movsb
insb
xlat
call
pusha
and
repnz
bound
or
lret
lcall
sub
xor
sbb
add
mov
outsb
inc
in
lods
push
add
xor
test
mulb
fcom
add
jp
and
push
mov
add
int
push
pop
inc
hlt
das
sti
jl
xor
ss
xor
repz
and
es
dec
mov
test
hlt
sbb
outsl
jae
sub
ficoml
mov
inc
lret
rcrb
popf
data16
push
or
adc
outsl
mov
add
sbb
push
sub
xorb
repz
mov
cmp
add
pop
es
pop
jp
inc
jb
lret
inc
test
mov
scas
mov
jbe
jo
mov
and
fs
bound
push
movb
adc
xchg
cmp
add
cmc
fwait
je
cmp
cmp
add
xchg
jmp
inc
inc
push
repz
inc
or
ds
cmp
jnp
lds
adc
bound
imul
clc
es
adc
sub
adc
add
jecxz
insl
loope
push
hlt
push
cltd
add
gs
mov
dec
xor
pop
inc
out
scas
mov
loopne
scas
push
rcll
inc
adc
pop
ss
cmpl
mov
xchg
jnp
ss
add
jmp
in
mov
repz
ds
into
sbb
stos
sti
add
sub
fldt
xor
js
je
lods
out
add
lret
xlat
lret
sti
dec
dec
mov
enter
xchg
arpl
add
fs
sub
dec
fnstcw
push
imul
mov
and
add
dec
pusha
add
inc
call
inc
pop
sub
mov
jg
ds
adc
and
repnz
sub
pop
pop
inc
inc
pop
xor
xor
and
mov
push
pop
dec
inc
pusha
adc
push
add
test
shlb
mov
in
jbe
lret
cmp
xor
imul
dec
adc
aad
dec
add
dec
jne
jle
es
mov
push
jb
jle
or
jo
rclb
aam
push
pop
cmc
xlat
pop
les
data16
aad
and
cld
sub
call
adc
lds
subb
xchg
xchg
xor
cmpsb
push
sbb
icebp
jbe
in
daa
pop
pop
pop
mov
lret
ljmp
mov
push
popa
and
lahf
or
jns
pop
inc
add
fs
push
and
mov
push
and
test
leave
pop
add
ret
push
lahf
test
out
adc
xor
jb
jbe
push
std
fists
adc
jo
jo
adc
inc
aaa
ret
rol
movsl
dec
xor
adc
jb
add
mov
imul
jnp
xchg
inc
rclb
into
out
roll
or
xor
dec
pop
and
lret
jnp
test
add
inc
gs
jno
data16
shrb
xchg
shlb
and
push
xlat
pop
addr16
lret
jne
rolb
out
xchg
fidivrl
adc
xchg
notl
add
data16
pushf
xor
iret
fsubrl
shrl
aaa
enter
or
movsb
pop
push
mov
imul
xchg
addr16
inc
in
mov
pusha
ja
jbe
jb
push
push
rcl
inc
push
mov
push
inc
add
push
xchg
jmp
popa
vpcmpgtw
inc
and
shlb
jbe
call
std
test
div
ret
jmp
in
xchg
pop
shl
inc
iret
inc
fwait
push
adc
jne
push
inc
add
ja
inc
xchg
push
in
inc
xchg
imul
dec
pop
push
popl
aaa
shlb
mov
cmpsl
jo
in
or
and
xor
popa
addr16
arpl
je
push
mov
push
lods
push
gs
jnp
push
mov
popa
mov
stc
sub
push
inc
push
aaa
mov
jne
rcll
jp
cmpsl
push
push
loopne
mov
xor
jns
inc
das
pop
mov
subl
stc
daa
inc
mov
lret
int3
lock
inc
xchg
mov
sub
add
push
jbe
add
incb
pop
loopne
dec
stos
jne
or
arpl
lret
jp
shr
jb
sub
push
mov
xor
jae
fwait
repz
adc
xorl
add
notb
jae
pop
xor
add
cmp
xor
movb
and
lret
mov
inc
add
fs
in
xchg
dec
sbb
mov
xchg
or
test
ret
aad
popa
mov
cmp
sub
jl
pop
inc
pusha
lcall
jg
loope
push
xor
cmc
dec
ret
shrl
subl
mov
inc
mov
cltd
cld
xor
fcoms
ret
jmp
mov
jo
into
test
sbb
outsb
xor
mov
xchg
test
shrl
cmp
mov
or
insl
mov
jecxz
aaa
push
add
dec
stos
jge
jp
mov
pop
das
iret
movsl
jl
mov
add
test
je
incl
add
mov
loopne
shll
pop
and
xor
stos
add
test
ss
sub
jge
test
js
ret
jbe
pushf
jecxz
or
sub
sub
jp
bound
movsb
push
mov
xchg
loop
mov
sbb
test
out
and
roll
add
lret
mov
mov
jmp
and
pop
inc
lahf
testl
jbe
pop
pop
stos
out
cmp
addb
sub
outsb
scas
sti
sbb
mov
mov
mov
add
scas
test
cli
out
das
pop
dec
add
add
fcmove
daa
sahf
pop
or
lret
loopne
insb
add
in
rcrl
cltd
mov
add
bound
js
stos
ficoms
mov
xchg
arpl
or
dec
push
mov
mov
int
jns
sub
jl
fistps
pop
pop
ret
imul
mov
sub
js
push
add
out
cli
ret
cmpsb
mov
in
repz
dec
inc
lcall
cs
sti
out
fdivrs
add
mov
js
jl
lods
imul
mov
ret
popf
int
jns
sub
outsl
scas
and
movsb
or
add
sbb
pop
jge
sti
outsb
int3
repz
in
aas
inc
mov
jns
xchg
cli
test
xchg
scas
outsb
lock
rcrb
or
sbb
mov
daa
sbb
dec
xor
cltd
push
imul
loop
cmp
mov
insl
shll
add
cs
mov
jmp
stc
pop
mov
insl
nop
pusha
repz
mov
add
mov
dec
jae
pop
das
pusha
cmpsl
addb
cmp
pop
mov
cli
enter
xchg
add
cmp
clc
outsb
xchg
loopne
repnz
sbb
data16
ljmp
jmp
outsl
aaa
xchg
dec
fimull
pop
inc
add
shrl
jge
pop
xchg
cli
inc
mov
or
add
cmp
outsl
jg
pop
out
inc
sbb
lea
cltd
ret
mov
dec
add
imul
pushf
ret
xorl
ds
or
pusha
xchg
inc
jne
push
jb
jecxz
mov
bound
insb
scas
hlt
or
inc
les
jae
mov
sub
fistps
inc
xor
pop
cld
fisttpll
out
es
dec
cli
xor
imul
stos
insb
add
test
outsb
repnz
imul
movsb
fimuls
sub
gs
cmp
lods
xchg
inc
pop
in
and
lea
sub
ret
dec
jb
lret
inc
mov
loopne
lcall
jo
cmp
psubb
mov
inc
repnz
jmp
push
stc
hlt
dec
jb
sub
faddl
mov
int3
mov
arpl
out
outsb
les
xor
fdivrs
push
pop
add
fsubr
in
scas
ror
push
inc
sbb
xchg
lret
mov
stos
test
test
insb
inc
scas
dec
jbe
lods
inc
sub
fistpll
js
adc
int3
jl
stc
inc
iret
scas
mov
jns
mov
mov
test
repz
pop
jl
enter
imul
pop
xor
add
les
fwait
jmp
enter
fbstp
xor
pop
pop
repz
or
push
jecxz
push
push
mov
bound
stos
fdivrs
xchg
mov
add
rolb
subb
js
jmp
test
mov
inc
pop
sarb
inc
jb
lret
loop
push
inc
sub
and
mov
push
pop
push
out
repnz
lret
lock
outsb
add
repz
hlt
mov
mov
fwait
test
add
sub
addl
jnp
out
fisttpll
push
lock
fcmovne
imul
dec
mov
adc
add
imul
sub
cmp
push
add
insl
sbb
or
imul
lcallw
adc
pop
add
loop
pop
out
scas
js
sub
inc
or
dec
mov
dec
sti
dec
and
add
jbe
pop
outsl
sub
subl
push
loop
sbb
jno
cltd
pop
jmp
sub
xchg
repz
pop
and
mov
popf
cs
or
cltd
in
jb
out
inc
insl
jp
gs
out
shrl
xor
vmulsd
lahf
stos
jecxz
mov
xor
inc
les
gs
dec
imul
pop
insb
in
mov
enter
ficomps
lcall
arpl
sub
psrad
outsl
cs
sub
call
popl
pop
sbb
arpl
sti
and
jp
mov
mov
out
cmp
cmp
pushw
lock
stos
adc
jmp
push
in
sub
ljmp
inc
imul
out
jmp
xor
call
add
popa
add
sub
cmc
dec
pop
lods
out
and
dec
data16
and
pushf
or
mov
loope
jecxz
sub
xchg
pop
cmp
inc
mov
jmp
jmp
call
into
mov
stos
dec
js
insb
outsl
and
iret
call
fdivrs
inc
sti
mov
mov
pop
dec
push
xor
xorb
mov
sti
cmp
imul
leave
in
dec
push
les
xchg
add
lret
call
pop
scas
add
les
lcall
mov
sub
testb
mov
jmp
pusha
xchg
mov
fbstp
xchg
add
in
jp
jb
ds
lods
push
pop
jo
insb
or
dec
mov
add
movsb
fldl
cmpsb
add
sti
lcall
scas
inc
fsubrs
add
out
pop
ret
mov
stos
lahf
imul
push
sahf
mov
in
sub
in
addr16
push
data16
or
fcomps
cmpsl
out
sbb
inc
add
push
outsb
adc
jb
lret
std
test
add
mov
fsubs
cs
out
les
stos
fists
les
dec
jo
inc
pop
mov
fs
stc
ss
add
jmp
cmpsl
repz
inc
inc
fucomp
int3
lret
mov
out
into
dec
lea
loop
add
sub
add
ljmp
inc
fdivr
mov
insb
cltd
inc
xor
or
repz
pop
daa
add
mov
insb
inc
adc
jecxz
mov
and
ds
pop
sub
adc
bound
jge
das
inc
bound
add
or
int3
iret
std
addl
loopne
test
faddl
stos
cmp
mov
sub
and
mov
jge
roll
ret
sti
xor
dec
mov
push
lret
xchg
add
mov
sbb
rcll
add
or
mov
cld
imulb
out
xchg
mov
push
sub
mov
in
mov
addr16
sub
push
jp
shlb
xor
sub
subb
loopne
pop
sti
dec
inc
leave
fstpt
fimull
and
fsubrs
fwait
mov
hlt
jbe
dec
out
int3
call
add
jecxz
dec
fildl
mov
or
addl
jp
icebp
lret
inc
push
fmul
insb
inc
lods
jle
adc
sahf
jae
outsb
sbb
mov
inc
test
add
mov
and
add
pop
imul
test
sbbl
xchg
subl
push
out
sti
ss
aaa
add
test
leave
jns
ret
sbb
push
xor
fisubs
xchg
xor
jecxz
xor
jmp
std
mov
scas
stos
incb
test
outsb
cld
mov
js
repz
enter
ret
dec
cs
imul
add
into
loop
stos
popa
add
aad
inc
push
cmpsb
enter
loope
add
les
les
roll
adc
jns
out
test
rcll
adc
dec
jb
sub
repnz
jle
dec
stos
testb
pop
sub
pusha
fs
jecxz
sub
fcomp
inc
mov
ret
clc
mov
icebp
insl
in
cld
push
scas
fisttpl
jns
aad
cld
xchg
int
jecxz
outsb
jo
movsb
inc
inc
repz
data16
fadds
out
add
shlb
jp
aad
lret
leave
jns
ret
into
test
int
stos
ret
lea
jae
or
arpl
or
add
adc
push
imul
sub
in
pop
lock
js
outsl
repz
xlat
dec
xchg
pushf
pop
nop
out
mov
add
add
mov
sub
outsl
scas
mov
ljmp
mov
add
leave
out
sbb
sub
push
neg
les
xchg
mov
insl
mov
gs
pushf
inc
adc
lcall
add
mov
dec
push
loopne
rcrl
xchg
popa
and
add
jp
ds
dec
pusha
mov
int
scas
in
jecxz
loopne
and
lods
imul
dec
jns
fmuls
dec
fistl
push
ret
xor
das
fstps
inc
cmp
xchg
cmp
add
jae
pop
cmp
or
jb
add
sub
pop
jmp
in
ja
cmp
push
notl
stc
xchg
stos
or
enter
push
sub
outsb
push
jg
sub
sahf
outsl
ret
cmp
sbb
jnp
mov
mov
rclb
js
int3
sar
jp
cltd
add
pusha
out
outsl
pop
lret
push
cmp
push
add
push
scas
inc
test
movd
inc
sahf
inc
imul
leave
jmp
por
cmp
rorb
lahf
inc
loop
pushf
sub
and
cmp
call
cmp
and
cwtl
add
das
jmp
int3
sahf
imul
cmovb
fwait
test
push
sbb
or
inc
xchg
jle
inc
fwait
xor
outsl
add
repnz
xor
test
mov
jb
sti
inc
or
testb
xchg
jg
mov
xor
inc
dec
push
push
fwait
cwtl
dec
pop
jne
xchg
mov
mov
gs
adc
inc
arpl
or
fwait
mov
mov
cmp
sub
mov
fs
mov
bound
xor
pop
or
mov
leave
and
xchg
inc
sub
mov
add
dec
js
iret
fwait
sbb
push
mov
xchg
inc
sbb
add
mov
dec
add
sub
in
iret
pop
in
xchg
push
add
add
xor
xorl
cli
iret
loopne
loop
pop
xor
inc
cmp
sub
out
xchg
ss
add
mov
mov
and
imul
jbe
inc
dec
rcrl
mov
shrl
shlb
js
inc
inc
stos
jno
cmp
sbb
rorl
jle
mov
dec
test
inc
mov
mov
lret
add
into
dec
sub
jb
orl
xor
call
ret
daa
xchg
pushf
and
add
xchg
lahf
je
cli
movsl
jl
jp
push
inc
cs
mov
js
scas
mov
inc
pop
es
icebp
push
inc
xor
mov
das
add
into
dec
mov
scas
orb
sub
lahf
ret
out
and
xor
mov
roll
jg
shl
or
imul
dec
hlt
mov
mov
ss
enter
lcall
inc
jno
mov
arpl
jb
out
cmp
push
addr16
dec
push
inc
js
dec
inc
pushf
sahf
xorl
mov
and
jo
outsb
rcrl
shlb
sub
add
in
xor
add
icebp
adc
fdivs
shlb
inc
jp
int
orb
add
add
in
dec
push
int3
cmc
pop
adc
scas
mov
fadd
cmp
repnz
int
inc
insb
lcall
xchg
cmp
mov
ljmp
iret
sti
mov
inc
imul
ljmp
repz
pop
cwtl
mov
dec
test
outsb
push
and
fwait
or
sti
inc
add
outsl
scas
movsl
mov
mov
mov
add
ret
dec
clc
out
xchg
xchg
xor
sbb
cmp
push
int
inc
add
js
sar
in
fcomps
movsb
ds
mov
ret
jl
jle
inc
sub
bound
cld
jle
mov
xlat
iret
mov
ret
scas
movsl
jmp
and
aas
imul
xor
lds
shrb
subb
cltd
into
scas
and
clc
or
add
add
cmp
mov
rorl
xor
mov
arpl
cltd
and
jns
mov
sub
sbb
mov
stos
jo
dec
insb
pop
add
mov
adc
add
xor
mov
faddp
inc
mov
add
cmpsb
outsl
or
inc
fsubr
jle
mov
fneni(8087
cmp
inc
jbe
mov
pop
lock
shlw
add
andl
inc
sub
lahf
into
jecxz
cmp
adc
add
fs
pop
lods
xor
push
inc
mov
inc
xchg
mov
and
mov
jp
xchg
dec
and
mov
aaa
mov
or
outsl
jecxz
jo
add
insb
dec
xchg
cmp
dec
inc
aam
cmp
mov
add
aad
push
add
and
js
and
pop
and
iret
inc
rolb
xor
or
add
lods
das
lret
iret
jg
pop
push
jg
inc
stc
test
xor
cmpsl
sub
inc
dec
adc
mov
arpl
jecxz
insb
add
inc
cmp
test
dec
callw
rolb
and
jae
inc
jle
and
cmp
inc
inc
xor
ret
ja
mov
in
mov
mov
lock
add
mov
outsb
jl
popa
ret
mov
cwtl
adc
fsts
mov
jnp
and
push
inc
js
add
cwtl
inc
push
mov
repnz
test
out
jb
mov
add
cs
sbb
ja
aas
dec
add
jae
sub
insb
adc
in
sbb
clc
test
add
sbb
xchg
out
push
add
and
rclb
out
movsl
call
add
inc
enter
dec
popa
xor
or
adc
mov
jg
xor
add
adc
pop
xlat
dec
add
mov
pop
in
shrl
ret
xor
push
adc
add
push
jb
inc
or
lds
andl
inc
inc
movb
dec
fwait
inc
mov
inc
or
xor
out
shrl
cmp
pop
add
fldt
lret
call
clc
jmp
sbb
mov
rol
sahf
adc
movsb
dec
push
dec
call
inc
xor
push
jp
test
dec
int
sbb
add
xchg
xor
sub
je
mov
inc
cld
dec
dec
jp
pop
jl
xchg
fnsave
add
out
imul
cmc
mov
mov
lcall
mov
mov
in
sbb
das
adc
jae
push
test
mov
dec
mov
and
cmp
insl
mov
push
or
mov
ret
iret
dec
imul
insb
sub
push
add
mov
out
outsb
gs
mov
jae
mov
dec
shl
dec
push
das
add
cmpsb
xchg
out
xlat
xchg
ss
mov
in
push
inc
es
out
sub
add
inc
lret
inc
pop
fisttpl
jmp
pusha
sub
arpl
dec
sub
jns
idivb
inc
leave
aad
push
or
mov
call
inc
mov
mov
arpl
inc
es
dec
shll
in
lcall
jge
mov
sarl
fsts
add
daa
mov
xor
or
push
call
dec
push
adc
out
rcrl
jp
inc
ret
push
scas
repz
outsb
jns
test
ret
aas
cmp
in
dec
mov
dec
lret
adc
sahf
mov
add
pop
daa
mov
dec
cmc
add
push
cs
mov
add
pop
mov
lea
sub
cmp
int3
mov
cmp
push
js
mov
ret
in
imul
popa
push
and
pop
lahf
add
in
inc
cmp
jmp
dec
test
in
jg
add
dec
xor
popa
push
insl
inc
dec
pop
and
xor
and
popf
add
inc
cmpsl
iret
mov
out
jo
xor
add
shll
addl
ret
stos
movsb
insb
and
lods
inc
int3
test
mov
nop
add
fcomps
lds
stc
pop
xchg
inc
scas
jp
inc
add
arpl
out
add
adc
add
ss
adcl
out
add
js
push
dec
mov
ss
jp
dec
inc
loop
jmp
loopne
es
stos
mov
lods
out
test
and
mov
scas
lret
mov
pop
mov
push
jg
dec
inc
inc
sub
call
loop
add
js
jle
xchg
inc
mov
and
mov
stos
cmp
scas
or
dec
data16
call
xchg
les
xor
cli
sbb
sub
add
dec
popa
call
sub
push
repnz
add
icebp
clc
jp
sub
js
int3
fildll
push
or
jg
mov
adc
adc
out
pop
or
jmp
or
test
push
mov
ret
out
xchg
mov
mov
enter
in
je
fistl
ja
sbb
add
data16
call
sahf
jbe
es
mov
stos
arpl
adc
xchg
and
sahf
push
push
les
dec
jbe
in
and
cmp
std
mov
and
aad
imul
test
mov
add
add
sub
cmp
jge
movsl
push
inc
out
push
dec
cmpsl
lea
pop
jne
cs
in
dec
test
add
add
sbb
leave
pop
mov
sti
push
sbb
sbb
adc
stos
dec
in
stos
dec
loop
or
into
mov
inc
stc
jp
mov
add
mov
repnz
lock
jp
sbb
mov
push
adc
mov
jae
jge
clc
dec
add
lods
jge
add
sbb
add
gs
imul
inc
int
jl
orl
cmp
add
inc
mov
aad
popf
xor
ret
or
sub
or
fsubrp
ret
aam
jecxz
loope
sub
inc
fmul
idivl
les
fsubr
ljmp
xor
sahf
push
push
dec
and
mov
push
push
mov
xor
adc
xlat
nop
mov
add
jecxz
out
aam
jp
push
scas
push
pop
mov
mov
xchg
repz
ret
das
mov
add
add
lret
xor
sub
cmp
pop
ljmp
cmp
loop
xchg
mov
mov
inc
sbb
mov
mov
sbbl
fwait
addr16
add
bound
bnd
jp
aam
push
sub
dec
enter
arpl
mov
mov
mov
std
dec
pusha
cmp
add
xor
mov
mov
ret
fwait
gs
or
dec
dec
push
inc
add
or
and
mov
push
sarl
sbb
xor
inc
je
sub
mov
mov
fbld
fimull
lcall
inc
aaa
mov
ficompl
imul
add
push
add
mov
lods
jae
out
inc
fwait
xorl
fdivrs
clc
imul
sti
mov
outsl
xlat
sbb
pop
dec
in
mov
add
ret
in
js
sbb
mov
xorb
test
subb
ror
add
cli
add
stos
and
fadds
sub
cld
lret
and
stos
ja
sub
in
out
popa
mov
mul
or
mov
cli
jp
repnz
std
add
mov
jae
in
dec
add
mov
cmp
testb
enter
mov
mov
mov
cwtl
jp
xchg
jns
js
jg
jle
jge
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
and
mov
movsb
andl
movsb
inc
movsb
push
movsb
sub
movsb
or
in
mov
movsb
lret
and
stos
test
mov
pop
mov
mov
test
fdivl
fcompl
push
fsubl
fdivrl
or
push
fcompl
jmp
fmul
fsubrl
faddl
fsubl
jge
dec
faddl
push
fsubrl
fdivrl
fdivl
faddl
pop
xor
repnz
and
in
movsl
mov
mov
xchg
jp
jbe
pop
mov
xor
push
mov
lret
mov
scas
mov
sbb
imul
fdivl
dec
fcompl
push
fsubl
fdivrl
fmull
faddl
fcoml
enter
mov
negb
add
fidivrs
stos
or
xchg
mov
dec
mov
add
adc
icebp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
add
mov
xchg
xchg
adc
nop
cmp
or
int3
mov
mov
jnp
inc
mov
adcl
shrl
xchg
mov
pusha
dec
aam
aad
or
add
stc
mov
xchg
addr16
dec
mov
xor
sbb
in
xchg
movsb
aam
mov
adc
rolb
call
cmp
loope
ret
mov
mov
mov
cmp
add
rcrb
add
and
jecxz
cmc
scas
fnstenv
mov
ja
push
mov
or
lcall
dec
mov
inc
je
cmc
xor
shl
loopne
lock
mov
mov
mov
gs
inc
cwtl
int
lods
rolb
inc
sub
cs
std
and
les
movsb
jne
push
movsb
xor
sub
sahf
add
xor
cmp
add
je
cmp
push
and
stc
jmp
xlat
out
cmpl
jl
add
xchg
ret
cwtl
lods
js
mov
xchg
dec
leave
fs
mov
dec
or
jmp
imul
sbb
inc
cwtl
repnz
into
pushf
ficoml
xchg
and
mov
dec
rorl
cmpsl
insl
mov
and
add
nop
shlb
dec
stc
cmp
bound
dec
je
cmc
sub
adc
adc
fwait
mov
pop
mov
mov
enter
mov
lret
and
lods
add
out
leave
adc
mov
mov
mov
mov
mov
mov
add
mov
xchg
mov
pushf
es
adc
icebp
cmpsl
mov
mov
dec
das
scas
push
pop
test
stos
add
out
mov
sbb
addb
jbe
pushf
je
cmc
pop
pop
jne
roll
stc
sub
test
dec
add
push
ret
imul
sub
adc
cmp
dec
mov
test
and
mov
mov
push
jl
dec
aam
aad
shll
sub
mov
ret
mov
add
mov
mov
pop
sarl
cmc
cmp
aas
add
pop
xchg
decb
jb
push
ret
or
stos
xor
or
scas
add
aam
lret
outsb
cmpsl
jb
inc
scas
push
mov
mov
gs
sbb
adc
and
enter
sbb
inc
or
mov
add
xchg
sarb
inc
and
xor
add
mov
int
repz
sub
sub
test
in
lock
ret
stos
dec
mov
fadds
fisttpl
add
lcall
inc
mov
insb
push
jle
sub
inc
test
cmp
jl
jl
jl
jl
add
call
add
xchg
jl
sbb
pop
leave
jne
mov
lahf
cmpsl
popa
stos
dec
scas
das
mov
mov
add
out
hlt
arpl
xorb
gs
daa
clc
jns
dec
push
push
dec
sbb
sbb
fcoms
inc
add
mov
mov
mov
inc
sub
dec
outsb
pop
js
je
inc
inc
or
fs
add
and
les
out
inc
fstl
push
push
pop
jmp
adc
jbe
nop
gs
hlt
into
xchg
fisubrl
mov
push
in
dec
ljmp
jnp
dec
dec
pop
or
int3
cmp
xchg
testb
cmp
loope
jns
std
addr16
imul
xchg
push
out
cmp
adc
push
ret
mov
lret
dec
test
cmpsb
jp
arpl
jle
push
xor
out
scas
add
mov
scas
popf
lods
lea
dec
sub
loope
sub
popf
dec
jns
js
jg
jle
add
loop
lret
dec
mov
jle
mov
aas
leave
in
sub
mov
add
pop
pop
mov
jo
mov
out
jae
aam
lds
test
or
out
fnstsw
adc
fsubrs
mov
enter
push
dec
xchg
pushf
dec
inc
fsts
pop
aad
add
xchg
ja,pt
add
lods
popl
dec
inc
bound
into
ret
movsb
mov
insl
jle
in
sub
aaa
xorl
aas
pop
cmp
inc
pop
sub
lcall
add
sti
add
dec
sbb
push
pop
lret
push
nop
imul
rorl
cmpsl
inc
add
sahf
movsb
bound
and
add
movsl
ds
xor
jo
sub
and
in
movsl
scas
mov
push
cmc
roll
and
in
movsl
dec
sub
vmwrite
add
jns
les
pop
add
push
sub
cs
add
xor
pop
mov
mov
roll
pop
pop
ret
loopne
mulb
mov
or
xor
mov
loope
out
pushf
orl
dec
dec
ja
inc
repnz
add
hlt
sbb
lds
sbb
or
dec
cwtl
shrb
xor
mov
mov
roll
jns
push
mov
add
lds
outsl
and
lock
push
add
pop
cwtl
sub
dec
sbb
xlat
outsl
mov
lea
ret
lret
scas
shlb
outsl
inc
or
add
sbb
fstl
mov
add
cld
sub
testl
sbb
and
lods
jno
add
rorb
addr16
xchg
rorl
cs
xor
aaa
rorl
mov
loope
push
and
mov
in
adc
mov
mov
into
sub
pop
dec
push
or
jbe
clc
inc
pop
push
negl
shlb
add
mov
addb
xchg
dec
jbe
inc
or
outsl
mov
pusha
out
roll
cmpsl
xchg
mov
xchg
mov
pop
in
cwtl
mov
xor
xor
inc
adc
sti
adc
sbb
jb
fwait
mov
loope
inc
inc
add
xchg
mov
data16
in
movsl
and
fistpll
fld
dec
push
andb
or
ret
xchg
std
or
inc
in
movsl
imul
push
rorb
push
fs
pushf
pop
xchg
cmc
ret
loope
arpl
inc
mov
xchg
int
xorl
insl
add
dec
xor
sbb
mov
or
xchg
pop
jae
shrb
lods
notl
xor
cmc
iret
jne
pushf
mov
outsl
lcall
add
lret
jl
xor
fcmovnb
and
add
mov
inc
js
dec
lret
fldl
jg
int3
add
lahf
cmovnp
push
call
fcmovnbe
add
cs
out
dec
jle
arpl
test
cmp
dec
mov
movsb
mov
sub
cmp
xor
mov
jle
mov
dec
inc
aas
mov
repz
ja
insl
imul
loopne
repz
xchg
insb
jl
repz
mov
movsb
xor
roll
lcall
xor
add
jbe
push
xchg
xor
inc
lret
xchg
test
ljmp
inc
test
lock
mov
lea
push
dec
cmp
push
mov
jg
inc
add
xchg
pushw
out
inc
push
inc
sbb
push
les
mov
mov
inc
or
outsl
and
sub
mov
popa
cmp
inc
lods
ds
cmp
aaa
jmp
cmp
rol
adc
out
add
call
push
gs
mov
lds
or
add
rol
movsb
add
insb
scas
sbb
mov
xchg
test
mov
add
shrl
fs
fxch
psubq
ror
or
popa
fwait
push
inc
pop
stos
ret
int
mov
inc
jp
ucomiss
add
jne
insb
push
cmpsl
xchg
stos
dec
scas
pop
add
xchg
sbb
sub
ret
test
push
out
jne
test
into
inc
and
stos
ljmp
jge
aas
add
cmp
add
hlt
into
xchg
inc
dec
jecxz
cmp
in
pop
sub
push
js
inc
cmp
or
adcl
lret
push
inc
lds
jb
cld
and
mov
xchg
pop
gs
in
add
lods
aam
mov
insb
lods
test
sub
xor
push
add
cmpsb
jl
jl
gs
dec
aad
mov
xor
lcall
outsb
add
js
pop
sub
xor
add
ret
mov
sbb
jp
addr16
or
xor
or
into
push
inc
movsb
dec
push
lods
push
lret
repz
repz
xchg
daa
sbb
out
sahf
idiv
add
pop
je
cmc
int
sub
push
int
mov
dec
fisttps
int3
mov
test
pushf
xchg
dec
pop
pusha
dec
ret
fimull
je
insb
sbb
mov
add
inc
loope
pop
and
test
dec
pop
pop
cwtl
mov
inc
movsb
jmp
imul
ret
int
ljmp
dec
jnp
enter
stc
nop
fildl
mov
sbbl
ret
xor
mov
xchg
movsb
pop
add
daa
cwtl
adc
test
mov
rorb
push
inc
int3
jns
js
jg
jle
add
loopne
int
lods
add
sub
mov
adc
arpl
sbb
mov
daa
mov
outsb
insl
out
add
aam
mov
loopne
ret
add
sbb
push
xchg
ljmp
add
insb
pushf
jle
dec
add
or
pop
sbb
adc
filds
xchg
andl
sbb
out
loope
mov
fildll
ret
shr
or
enter
orl
dec
pop
add
rcrl
insb
push
pop
addl
inc
dec
out
pop
cmp
ljmp
cmpb
inc
push
cmpsb
sbb
push
fadd
inc
ffree
mov
pusha
into
mov
push
inc
addl
loope
mov
jmp
dec
mov
mov
lds
or
add
gs
dec
pop
mov
mov
add
ret
jl
imull
sbb
filds
aad
adc
adcb
pop
jne
sbb
cmpsb
lods
mov
inc
sbb
sub
icebp
mov
in
or
dec
sbb
mov
or
add
xor
push
add
jge
inc
cmpsl
push
div
add
mov
add
es
push
out
jge
filds
outsb
mov
aaa
jp
sahf
add
cmp
mov
jl
mov
dec
and
fildl
insb
stc
mov
push
or
xchg
pop
push
mov
or
arpl
in
nop
add
dec
lea
push
sbb
mov
adc
push
test
insl
lahf
jne
fs
jmp
add
fldt
ror
sbb
int3
xchg
cmp
xchg
inc
iret
in
pop
addr16
mov
movsb
jmp
imul
xor
adc
cwtl
cmpsb
scas
mov
mov
mov
ds
push
add
and
ds
js
out
pop
ret
add
shll
cmp
lock
js
lods
pop
mov
lea
push
loope
sbb
pop
inc
mov
or
fwait
adc
fcmovb
orl
cmp
rolb
and
xchg
dec
movsb
sub
and
mov
lret
fcom
ret
mov
or
dec
push
xor
xor
test
nop
sub
sbb
or
lret
sahf
inc
mov
pop
mov
scas
cmpsl
fninit
push
or
ret
cmp
fs
and
in
mov
mov
insb
jmp
cmp
lret
xchg
shlb
lds
jg
pop
orl
cs
jae
ret
jns
dec
mov
in
movsl
sub
imul
mov
addl
or
lcall
push
mov
addb
add
xor
gs
adc
aaa
ret
inc
push
mov
rcr
or
sahf
adc
inc
pop
jmp
or
lods
stos
xchg
aad
pop
dec
ret
sub
add
lret
or
js
add
and
add
lret
pusha
mov
mov
mov
lahf
lret
rclb
aas
repz
cwtl
movsb
mov
xor
and
jne
imul
aad
or
cmp
sti
loop
cld
add
dec
scas
sarl
jp
sub
sarb
push
jbe
cmp
jecxz
adc
clc
nop
idiv
dec
jb
jecxz
bound
push
xor
sub
add
test
add
mov
cwtl
mov
lds
lods
or
fisttpl
jp
mov
ret
pushf
gs
cmp
imul
ds
or
fadds
mov
add
lcall
popa
mov
inc
nop
or
adc
xor
add
mov
jp
icebp
testb
jl
loopne
add
pop
sub
add
cmpsl
mov
pop
orl
pop
jp
adc
loopne
or
data16
inc
sub
mov
xor
jg
das
fsubs
and
ret
int
xor
pushf
push
inc
outsl
add
dec
cmp
sbbl
incb
sbb
enter
aam
mov
outsb
ret
and
push
dec
jecxz
push
popf
or
dec
and
cmp
pop
cwtl
mov
in
cmc
sub
cs
or
pop
mov
fnstsw
gs
inc
subb
adc
rclb
pushf
mov
in
addl
scas
inc
sbb
mov
fs
pop
and
shll
in
dec
movsl
inc
add
add
lret
in
shlb
test
dec
lds
jecxz
mov
ret
xchg
imul
sbb
es
pop
pop
mov
pop
push
push
add
movsb
push
add
hlt
lret
je
lods
inc
add
sbb
ss
andb
add
in
or
outsl
mov
adc
stos
push
call
ret
ret
ret
orl
jp
cmp
jne
roll
popa
pop
xor
mov
pop
loopne
add
or
xchg
mov
roll
loope
sbb
xchg
movsb
insl
loopne
into
xor
inc
lea
dec
and
out
inc
movsb
mov
shll
ret
pop
rolb
cmpsl
cs
inc
xor
jb
and
gs
orb
ljmp
add
inc
pop
and
mulb
gs
sub
pusha
cld
sahf
inc
imul
mov
dec
aas
push
enter
lret
and
sbb
add
test
and
push
leave
jbe
mov
movsb
in
shll
cltd
shll
pop
dec
in
or
push
jb
xchg
xor
add
imul
je
xchg
mov
xchg
scas
jbe
and
cmpsl
inc
jle
pop
imul
add
insl
jecxz
data16
addb
push
inc
and
loope
int
pop
push
sub
xor
jmp
inc
in
ret
mov
rorl
pop
jae
inc
fdivrl
ret
dec
xchg
pop
movsb
sub
rorl
dec
insl
push
jne
pop
int
xorl
add
add
movl
cmp
push
adc
sarl
cmpl
stos
mov
jecxz
test
inc
mov
dec
insl
in
mov
das
inc
sub
bound
pop
pop
mov
add
sub
incb
hlt
imul
dec
dec
sub
sub
sbb
in
shrb
xchg
sbbl
or
sbb
mov
inc
decb
hlt
sbb
fstpt
pop
dec
jne
int3
out
sbbl
sbb
mov
add
insb
in
mov
add
jb
cwtl
je
pop
add
mov
inc
xorl
pop
sub
or
add
pop
sbb
in
mov
sbb
add
leave
stos
or
add
sbb
cmp
add
xchg
jo
pop
xchg
xchg
mov
movsb
stc
and
frstor
xchg
jo
ljmp
sub
push
lds
dec
lahf
fldt
aad
es
mov
mov
lods
fadds
cmp
lds
adc
in
lcall
xchg
out
and
movb
out
lods
stos
shl
xchg
inc
jae
cmp
es
jp
lock
loop
fs
and
mov
inc
push
enter
rcrl
inc
lret
cmovne
sub
movsb
fdivs
mov
mov
sti
loope
leave
shrl
bound
and
roll
push
dec
add
mov
pushf
mov
adc
inc
nop
mov
push
xchg
leave
cmp
popa
lret
icebp
xchg
mov
movsl
shll
mov
mov
mov
shl
loope
mov
ret
sbb
jno
and
lcall
ficoml
add
int
and
sarl
les
aad
mov
int3
inc
xchg
jne
insb
rclb
mov
inc
add
jb
movb
pop
lea
in
mov
popf
and
cmp
pop
popa
sub
cmc
inc
in
sub
pop
xor
mov
outsl
add
mov
mov
dec
add
push
out
jge
pop
add
repnz
test
test
dec
insb
dec
jbe
xor
adc
mov
push
cltd
sbb
outsl
jmp
sbb
call
mov
add
inc
adc
fwait
in
insb
orl
add
sbb
or
fidivrs
insb
les
test
mov
ret
fildll
orb
pop
stos
das
add
orb
mov
or
jmp
in
pop
scas
mov
aad
mov
fs
or
orb
inc
shrl
aad
xchg
and
jbe
add
adc
push
movsl
fwait
incl
cmpsl
xchg
add
iret
add
xlat
in
mov
insb
sbb
gs
inc
loopne
xor
repz
ds
xor
inc
aaa
out
aam
out
sub
push
incb
dec
outsb
dec
or
lds
pop
fldt
sti
cli
add
inc
out
pop
push
inc
enter
in
inc
dec
add
xchg
add
xchg
fistl
icebp
popa
stos
inc
push
fs
and
cmpsl
cmp
lret
aam
inc
mov
sbbl
mov
enter
mov
cmp
push
dec
jb
idiv
lods
leave
negl
adc
scas
and
data16
mov
dec
aas
leave
cmp
sbb
mov
mov
scas
out
out
lcall
cmpl
dec
test
jne
add
or
inc
sbb
in
add
test
addr16
inc
cs
jecxz
mov
test
mov
stos
inc
popa
gs
mov
in
lock
mov
cld
cmpsl
push
sub
push
xor
aaa
scas
xor
inc
sub
mov
cmp
popf
add
and
mov
shlb
mov
ds
and
bnd
in
pop
rclb
add
loope
das
add
cmc
or
add
aad
lret
cmp
sbb
and
or
hlt
int
test
xchg
jle
dec
loopne
repz
xor
xchg
sti
movsb
push
mov
push
cmp
mov
mov
rolb
ljmp
add
sbb
and
mov
sar
push
movsb
stos
loope
inc
push
xchg
ret
loopne
add
inc
mov
movb
sti
rcrb
push
inc
leave
jbe
nop
stos
cltd
movsb
jno
movl
mul
add
stc
inc
push
arpl
pusha
or
int3
lds
in
fadds
xor
lods
xchg
sub
sbb
aaa
mov
cmp
test
or
repz
or
push
test
fwait
jne
cmpsl
ljmp
xchg
mov
adc
in
ret
sub
xorb
inc
dec
push
mov
jp
mov
outsl
and
adc
repnz
pop
loope
movsb
repz
cmc
inc
add
aad
lds
addr16
outsl
fs
pop
dec
sub
or
test
xchg
lret
mov
movsl
inc
repz
lret
aad
lea
or
xchg
in
les
add
out
in
lcall
repz
or
int3
push
stos
jmp
inc
xlat
dec
jg
dec
daa
add
xchg
add
mov
inc
fwait
add
push
inc
push
fisubrl
add
je
test
sub
jno
mov
lret
xchg
out
add
lds
inc
in
orl
mov
dec
xchg
add
arpl
push
cmp
notb
sub
mov
add
add
nop
sbb
ret
daa
mov
pop
in
push
and
dec
and
clc
xor
pop
mov
scas
ret
outsl
test
fisttpl
imul
ret
std
mov
add
pop
or
out
ret
scas
sbb
add
and
or
cwtl
jmp
out
ljmp
sbb
mov
pop
or
sub
pop
fldenv
mov
rolb
mov
movaps
or
add
push
pop
jp
mov
xchg
pop
movsb
and
inc
or
mov
dec
stos
les
pop
ret
jne
insl
add
sarb
xchg
outsl
ret
jle
push
std
mov
subl
test
mov
add
or
shrl
dec
andl
sahf
add
adc
orb
jbe
push
test
stc
mov
pop
push
daa
clc
pop
out
add
jbe
not
ja
mov
lcall
sarl
push
dec
mov
push
in
icebp
ret
int
fldcw
add
or
cmp
and
pop
cmp
in
lds
and
sub
jns
dec
push
in
inc
dec
sbb
sar
cmpsb
mov
insl
insb
pop
pop
jp
jmp
inc
rolb
and
add
inc
lret
push
or
ret
out
pop
jl
sbb
inc
push
push
push
and
test
xor
sahf
int3
cwtl
dec
mov
push
and
mov
xorl
sbb
mov
movsb
call
inc
les
xchg
or
and
jp
and
add
jg
jle
outsl
stos
pop
add
inc
or
xchg
mov
jle
insl
inc
pop
rcr
or
ret
shrl
mov
jecxz
pop
ret
and
shlb
inc
inc
adc
ffreep
push
cwtl
mov
cmp
add
fisubl
addr16
mov
movsl
pop
repz
insl
or
sti
adc
int3
dec
movb
or
add
roll
lahf
imul
out
sbb
add
add
mov
pop
aad
lds
add
frstor
add
adc
mov
mov
inc
sbb
cmp
inc
add
ret
out
cmc
movl
add
and
xor
shlb
add
pusha
mov
sbb
pop
es
test
mov
pop
scas
cwtl
aam
and
fists
pusha
loop
add
cwtl
stos
mov
add
xchg
outsl
sub
sub
pop
test
or
push
in
andl
and
inc
or
movsb
jp
fs
fistpl
insb
xchg
xchg
push
lds
test
dec
aad
stos
sbb
inc
stos
out
xchg
test
les
push
cmp
add
jmp
insb
jg
inc
pop
sbb
pop
and
jae
adc
xchg
mov
pusha
add
int
cmpsl
add
mov
lods
es
rcrb
xor
clc
hlt
and
add
cmp
push
scas
in
push
push
and
test
ds
add
outsb
mov
daa
sbb
cmp
incb
sar
sub
sbb
cli
lret
fistpl
enter
pushf
out
and
fmuls
lds
add
add
arpl
adc
and
ret
inc
or
movsb
add
shll
aad
lds
add
imul
mov
or
pop
movsl
xchg
in
ret
sub
loop
or
add
sbb
dec
in
xchg
test
adcl
push
aas
push
mov
cmp
xchg
sti
nop
mov
dec
push
add
and
shl
mov
mov
sbb
gs
sub
inc
ret
xor
dec
jmp
mov
arpl
lret
outsl
add
mov
jge
inc
ret
jl
add
out
stos
inc
test
or
push
pop
hlt
and
xchg
je
ret
das
xorl
dec
and
sbb
loope
mul
jae
mov
mov
test
jl
dec
add
mov
add
loop
scas
mov
push
and
cwtl
popl
bnd
dec
mov
pop
xor
jmp
mov
insl
pusha
pop
jb
sbb
sbb
jecxz
mov
testb
and
mov
dec
jmp
outsl
das
xchg
cmp
xor
iret
pop
movsl
and
add
jle
jp
inc
cwtl
cmpsl
mov
xchg
xchg
add
fcmovb
scas
cmp
dec
push
sar
add
cwtl
gs
inc
add
xchg
cld
inc
and
rolb
pop
les
lods
jl
fisttpl
inc
addr16
jg
cmpsb
sbb
mov
lret
sbb
movl
addr16
mov
mov
inc
aad
lds
stos
push
bnd
out
pop
push
inc
mov
addr16
cs
xor
inc
sbb
add
pop
ret
in
orb
add
cmp
add
mov
adc
movsb
jne
ret
addr16
push
enter
ret
push
cmc
jmp
and
mov
data16
sbb
test
pop
mov
addr16
je
push
ss
inc
and
jmp
mov
push
aam
add
cmp
and
pushf
push
sbb
orl
sbb
iret
test
xchg
test
dec
pop
cli
add
in
add
movsl
xchg
popa
pop
cmp
cld
aam
addl
loopne
mov
or
adc
rorl
scas
and
dec
add
rcll
xorl
or
xchg
mov
data16
dec
je
test
add
jne
and
imul
add
pop
cmp
push
movsl
shl
inc
mov
leave
push
push
fwait
add
sbb
clc
jle
fidivl
add
lcall
and
pop
push
rol
loope
jl
inc
push
cmc
or
inc
outsl
aas
lock
pop
mov
pushf
add
mov
aam
or
add
mov
verw
lret
int
scas
sbb
ret
jnp
rcrb
dec
orl
mov
orb
in
loopne
dec
xor
inc
mov
shrl
popa
lret
ret
insl
inc
pop
xor
ret
fisttpl
xlat
and
push
and
hlt
jge
pushf
shrl
ret
jecxz
add
es
das
mov
test
add
and
jb
add
jnp
push
arpl
push
push
insl
add
jbe
aad
int
add
enter
and
cwtl
add
mov
and
out
inc
inc
addr16
push
xchg
sub
pop
inc
sub
in
jns
mov
and
lahf
scas
cld
pop
xchg
pop
and
sbb
add
ss
repz
or
lock
mov
and
sub
mov
insl
add
call
and
and
sbb
loop
lahf
call
mov
mov
dec
decb
test
mov
inc
fs
and
add
adc
lds
stos
jno
or
inc
add
stos
movsb
cwtl
mov
or
add
push
pop
jp
divb
shl
inc
lret
sbb
mov
insl
push
cmp
scas
pop
sbb
jmp
shrl
or
sbb
pop
test
and
sahf
mov
jmp
movsl
sbb
ret
jecxz
negl
test
mov
lds
movsb
sbb
push
jp
cli
imul
rcrb
sub
or
xchg
add
mov
ret
dec
popa
fsub
mov
gs
push
fwait
stos
data16
scas
dec
rcl
and
jl
cmp
sub
push
ret
outsl
ret
and
sbbl
sbb
mov
push
out
xchg
push
mov
add
push
jne
or
dec
mov
ljmp
add
and
cs
lds
pop
inc
lcall
sub
shrl
push
lret
mov
lods
xor
add
ret
stos
fsubrs
lods
xchg
add
bound
pop
sti
enter
add
out
lods
add
pop
scas
cs
inc
in
sti
push
arpl
mov
or
fwait
adc
aam
daa
mov
in
xchg
add
push
jbe
add
mov
cmp
or
cmp
jne
lods
lret
xor
pop
xor
mov
sbb
push
add
loopne
int
repnz
int3
shll
inc
jg
inc
mov
xlat
xor
cwtl
addr16
stos
addb
push
mov
jl
popa
ret
test
inc
mov
and
cmp
subb
cmp
mov
stos
in
into
dec
add
xchg
sahf
sbb
pop
add
mov
mov
in
dec
xchg
pop
dec
jnp
sbb
movsl
jnp
inc
lods
add
xchg
andl
inc
loopne
dec
jecxz
jle
lahf
sub
add
ret
and
in
add
scas
sbb
mov
mov
jbe
dec
arpl
ret
imul
out
lods
xor
or
test
mov
pop
mov
xchg
cld
pusha
dec
ja
ljmp
incb
int3
adc
dec
insb
mov
nop
xor
js
add
lods
or
dec
or
sbb
jbe
insl
out
movsl
add
pop
fadds
arpl
repz
pop
inc
add
cs
imul
fwait
das
mov
jnp
jne
xchg
sbb
rcl
hlt
loope
or
xchg
sub
cmpsl
lret
in
pop
dec
xor
adc
xor
inc
in
inc
ffreep
mov
mov
and
inc
jmp
gs
add
mov
out
sti
str
outsl
adc
das
lret
lahf
jle
cmpb
lods
call
rcll
test
outsb
or
xorb
mov
xor
mov
roll
arpl
insb
test
push
cmp
inc
or
cli
and
stos
jbe
pushf
pop
xorl
inc
hlt
pop
test
jne
xchg
add
xchg
mov
mov
dec
lods
in
add
add
sbb
das
outsb
sub
inc
ljmp
xchg
lret
push
repz
aad
cmpsl
adc
in
jne
lahf
in
in
cmp
pushf
mov
dec
jb
cld
ret
cmp
jp
push
sbb
lods
aam
dec
fadds
jae
mov
cld
inc
test
in
mov
mov
repz
imul
pop
imul
pop
subb
cmp
xchg
add
lcall
pop
xchg
pop
add
stos
push
mov
leave
je
out
push
lcall
or
wbinvd
outsl
add
xchg
mov
and
verr
iret
pop
or
jl
dec
shrl
mov
loope
gs
cmp
mov
add
sbb
pop
int3
cld
add
xor
add
hlt
add
mov
and
imul
scas
lret
add
subb
lods
and
and
jbe
xchg
test
fs
int
insl
lahf
dec
arpl
jecxz
xchg
repz
repz
jg
andb
add
mov
add
out
lods
inc
jmp
jae
lahf
je
dec
cmp
mov
in
and
add
xor
ret
arpl
mov
inc
in
sti
adcb
add
ret
test
lcall
dec
in
jecxz
xchg
dec
add
insb
lods
dec
clc
ret
mov
add
lods
nop
mov
or
and
jle
add
outsb
dec
jno
inc
daa
gs
stos
sub
fidivrl
cmp
mov
enter
jle
cmp
or
add
les
insl
or
lahf
mov
and
cmpb
lods
and
stos
jne
outsl
test
mov
inc
fdivl
jp
idiv
ja
and
jae
mov
push
test
faddp
sub
inc
jb
int3
sbb
xchg
lods
lock
inc
add
ds
jmp
outsl
insb
dec
out
shlb
jg
mov
adc
loope
jns
mov
add
pop
aad
mov
leave
add
or
xor
or
ljmp
rcrl
add
testb
inc
jecxz
jle
mov
call
sub
push
pop
into
popa
add
add
lods
imul
imul
or
mov
insl
lods
dec
gs
mov
add
pop
out
inc
in
ret
dec
test
add
cmp
or
stos
mov
jo
mov
outsb
add
rclb
xchg
clc
movsb
lods
dec
in
scas
cmp
mov
mov
add
dec
and
or
ret
and
xchg
cmp
ret
lock
les
test
mov
mov
dec
cwtl
sbb
ret
sbb
add
and
pop
jp
loopne
nop
push
add
movsb
incb
fcmovnbe
ret
ret
sub
pop
scas
pop
loop
mov
cwtl
repnz
imul
inc
inc
shlb
mov
scas
mov
mov
add
add
mov
cmp
shlb
add
cwtl
and
enter
add
pop
dec
mull
dec
flds
jle
jmp
movsl
cwtl
mov
add
test
add
push
popa
add
scas
lahf
mov
and
repz
add
jp
inc
jo
and
or
xchg
inc
sub
test
inc
mov
jns
xor
mov
test
xchg
mov
lcall
test
inc
pop
outsl
inc
das
insl
inc
or
inc
fwait
shll
imul
lods
lret
and
add
cltd
dec
pop
add
or
mov
loop
lds
fisubrs
add
test
pop
outsb
and
mov
ljmp
ja
add
into
scas
das
loopne
dec
xor
mov
pop
mov
dec
sbb
aam
inc
fisttpll
out
movsl
gs
sahf
inc
mov
mov
pop
add
scas
and
loopne
hlt
inc
mov
lods
jecxz
outsb
pop
decl
out
movsb
push
imul
add
sbb
sub
sub
roll
in
pop
adc
imul
test
inc
sub
arpl
inc
movl
pop
outsl
pop
xchg
enter
ljmp
sahf
and
mov
or
add
orb
sub
push
add
push
pop
outsl
inc
testb
mov
test
mov
mov
nop
popf
imul
push
mov
pop
dec
mov
add
out
cmpb
fimuls
stos
loop
mov
loope
inc
int
xchg
dec
scas
and
cmp
fldenv
ljmp
inc
jg
scas
sub
push
in
aas
inc
xor
sbb
dec
add
dec
mov
jne
add
dec
jp
mov
cmp
subb
std
lea
fisttps
sub
jp
mov
addl
lds
add
loop
in
jbe
pop
or
sub
push
in
inc
push
cmpsl
dec
shlb
out
pop
or
ret
mov
and
lods
inc
scas
std
enterw
sbb
or
pushf
jg
sub
ret
and
test
stos
ret
adc
in
add
push
je
test
mov
mov
sti
xchg
stos
addr16
fldt
inc
add
or
adc
add
lea
mov
jb
and
roll
add
addl
cs
mov
inc
into
xchg
popa
in
pop
daa
ljmp
or
xchg
sub
movb
in
sbb
popa
mov
cli
loope
lret
arpl
ss
adc
push
loopne
jb
add
push
or
sub
xor
or
sbb
cld
add
repz
dec
ret
das
js
stos
les
adcl
add
jae
xlat
sbb
push
jg
sub
inc
xor
cmp
mov
or
mov
or
bnd
hlt
sbb
and
setns
and
bound
mov
js
xchg
pop
hlt
pusha
sub
test
push
or
sbb
in
mov
mov
xchg
addr16
push
mov
call
add
loope
adc
mov
gs
xchg
and
sub
movsb
std
aaa
jns
gs
jns
insb
adc
mov
xor
sub
cmp
in
push
stos
push
add
add
pop
mov
sub
push
mov
lret
daa
gs
ret
add
pop
and
jp
out
lods
fwait
jle
sub
in
loop
dec
arpl
scas
inc
pusha
out
bound
add
stos
rcll
insl
movsb
or
mov
mov
cmpl
flds
push
jbe
scas
push
stos
popa
pop
adc
push
push
push
jb
cld
out
lods
add
arpl
rcrl
movsb
add
adc
clc
cwtl
mov
sahf
sbbb
loopne
push
and
add
pusha
inc
cmp
hlt
and
jnp
mov
movsb
mov
xchg
scas
sub
ds
and
icebp
hlt
add
ret
je
sbb
rclb
movb
jle
pusha
movmskps
or
testl
cwtl
mov
inc
jno
into
mov
fadd
add
push
inc
add
sbb
in
push
and
lods
and
and
addr16
pop
pop
add
mov
add
mov
xchg
add
push
and
testl
mov
adc
and
cmp
add
into
movsl
or
xchg
js
out
fists
loope
push
add
dec
out
cmpsl
dec
frstor
cwtl
adc
sub
xor
inc
dec
test
xchg
xchg
lret
cld
iret
ss
adc
inc
pop
push
imulb
sbb
int3
cmp
inc
push
xchg
ja
or
push
jmp
lds
mov
fwait
lret
pop
mov
jle
dec
cbtw
pop
in
lds
scas
xor
cld
int3
sub
pop
cltd
loopne
dec
sahf
adc
jmp
jle
xlat
add
sub
jae
into
dec
pop
cmp
loope
add
stos
and
add
and
test
hlt
sub
dec
jp
in
or
flds
les
or
mov
mov
xor
stos
add
insl
pop
mov
das
mov
into
push
lods
insb
push
dec
test
sbb
add
or
cmp
push
dec
add
sbb
aad
jle
xchg
lods
call
repnz
jbe
jle
test
xchg
dec
mov
inc
inc
sbb
add
gs
sbb
addl
clc
xor
sti
add
or
imul
mov
data16
cmp
add
outsl
arpl
aam
adc
andl
and
movsl
int3
lds
push
loopne
in
and
cmp
les
sti
xor
mov
mov
orb
in
aas
in
cmpb
dec
inc
sub
loop
ret
mov
ja
dec
or
pop
lcall
sahf
out
push
outsl
ret
add
sub
daa
sub
in
and
test
cld
mov
mov
jno
pmulhw
or
jg
dec
ret
sbbb
loope
scas
inc
pop
sbb
push
sub
mov
popa
int
bound
inc
movsl
add
xchg
jae
dec
push
sahf
xor
fisubrl
or
add
inc
out
or
outsb
pop
cmp
scas
gs
les
ret
jle
jo
arpl
sbb
mov
xchg
movq
inc
add
daa
in
or
lcall
push
push
push
add
pop
xchg
outsb
xor
cmc
and
sbb
inc
out
add
xchg
rorb
sbb
test
lds
outsb
pop
ret
rolb
mov
lret
sub
out
xor
out
sbb
testb
ljmp
or
lea
or
stos
inc
inc
scas
pop
jmp
inc
scas
push
cmpl
cld
mov
cmp
mulb
out
lcall
test
cwtl
ret
dec
lds
out
push
enter
andl
push
push
hlt
sub
add
outsl
mov
ret
loope
imul
shl
popf
add
push
lods
or
pushf
scas
repnz
add
push
push
sbb
cld
imul
arpl
sub
pop
inc
pop
mov
push
gs
add
jp
jb
rorl
dec
add
fwait
sti
loope
sbb
mov
and
insb
je
repz
cli
jle
stos
inc
insl
and
adc
call
sbb
mov
test
lds
xor
mov
in
inc
adc
sbb
add
mov
add
scas
shrb
outsb
add
enter
bndstx
rol
pop
into
test
xor
add
repnz
jns
xchg
cmpsb
add
xchg
and
jmp
add
jmp
lret
add
adc
mov
and
cmp
out
hlt
cmpl
loop
imul
adc
push
notl
subl
sub
push
pop
enter
aaa
imul
jns
movb
mov
cwtl
movl
bound
inc
or
mov
sti
add
dec
pop
in
xor
test
ljmp
mov
loopne
movl
adc
imul
sub
xlat
lods
mov
push
add
scas
and
sahf
in
dec
jge
pop
ss
dec
paddusw
ret
mov
test
jne
and
mov
push
xchg
mov
jae
sbb
dec
xor
or
dec
or
lret
sbb
sub
mov
dec
pop
in
sahf
add
adc
mov
mov
or
outsb
test
imul
in
adc
dec
xor
jl
dec
add
leave
sbb
push
pinsrw
sub
aas
or
lods
jmp
sbb
or
jae
gs
fistps
pusha
ret
inc
pop
inc
ss
dec
xchg
push
cmp
leave
hlt
rcrb
imul
xchg
sahf
adc
jbe
mov
pop
and
mov
jecxz
ret
inc
insl
inc
or
cmpsb
sbb
fcmovne
xor
mull
in
or
jecxz
adc
sarl
add
xorl
popa
push
dec
sbb
mul
adc
add
je
mov
mov
sbb
and
adc
pop
mov
push
mov
test
xchg
loopne
inc
xchg
testb
cmp
imul
retw
xor
movsb
push
add
cwtl
cmp
imul
leave
mov
add
cmpsl
jb
push
test
add
and
mov
call
imul
add
dec
sbb
cld
mov
mov
outsl
imul
shr
push
hlt
add
jp
aas
test
gs
nop
mov
and
mov
and
leave
cwtl
jmp
add
cmp
mov
faddp
out
dec
js
push
push
gs
xor
scas
inc
xchg
add
loopne
lret
fs
and
add
cmpsb
jle
mov
cmp
movsb
lds
jecxz
imul
mov
jg
out
mov
outsb
filds
add
in
popa
mov
add
in
xchg
das
mov
lods
outsb
inc
jp
push
lea
fwait
test
inc
addb
or
sbb
xor
out
pop
ret
dec
mov
add
jne
add
jmp
add
sbb
sbb
stc
add
xchg
jne
sub
cmp
movsl
idivb
imul
repz
das
mov
add
cmp
add
stos
mov
pop
repnz
enter
add
mov
fs
inc
stos
test
inc
adc
daa
ret
xor
leave
xchg
lods
jecxz
addr16
mov
sbb
ret
movsb
inc
cwtl
sub
xor
lods
or
pop
push
in
push
xchg
xchg
mov
ret
add
loopne
push
xor
ljmp
mov
mov
add
lahf
loope
es
pop
add
dec
sbb
jp
lods
add
loopne
loope
xor
mov
inc
and
aas
push
xor
outsl
jne
sub
rcrb
push
loope
in
add
shrl
enter
scas
ret
adcl
jae
adc
das
push
mov
test
add
dec
pop
std
xor
add
in
mov
gs
mov
out
xor
fistpl
adc
xchg
xchg
les
mov
lret
jg
loopne
repz
subl
dec
lea
cmp
inc
repnz
fs
inc
sbb
mov
dec
test
add
inc
notl
out
pop
pop
dec
arpl
pop
cmp
popa
sub
dec
sbb
xor
lcall
adc
xchg
push
add
movsb
fstl
add
imul
pop
shll
into
and
or
ret
push
addb
add
jg
mov
and
cmpl
hlt
pop
rol
mov
cmpb
push
cmp
sbb
mov
ret
add
push
in
add
and
mov
adc
es
cmpsl
scas
jg
mov
ljmp
pop
add
enter
mov
mov
xchg
xchg
sub
fwait
in
inc
push
mov
add
pop
ret
xchg
lahf
lcall
add
repz
mov
lret
int3
or
and
add
lods
sub
cltd
test
ret
xor
cli
dec
outsl
rolb
sub
rcll
dec
inc
idiv
mov
pop
test
jecxz
lods
ljmp
xchg
lods
pop
mov
add
add
add
push
mov
and
cs
mov
test
adc
or
insl
jmp
dec
cwtl
cmpl
pusha
hlt
add
or
insb
jmp
loop
pop
data16
stos
add
fsubl
cmp
bnd
fiaddl
loope
jecxz
jl
sub
sub
mov
sub
out
dec
dec
or
aam
mov
outsb
lahf
or
jo
cmp
ret
xor
xchg
insb
add
sub
lret
lock
movsb
inc
pushf
cmpl
outsl
xor
sbb
out
add
in
mov
add
or
xchg
rcrb
cwtl
inc
sbb
or
loopne
xchg
xor
jp
shll
shlb
imul
sub
and
cmp
jle
add
cwtl
xchg
lahf
gs
add
inc
pop
in
pop
xor
in
sbb
cmpsb
or
mov
imul
ret
lea
bound
adc
jns
dec
fisubrs
ja
mov
cmp
pop
test
mov
add
or
lods
lea
outsb
aad
adcl
ret
add
call
insb
pop
nop
movsl
andb
out
out
adc
add
or
inc
jnp
orl
pop
mov
daa
add
in
cmp
out
push
sahf
pop
fwait
into
imul
jle
jae
dec
imul
and
cs
nop
jp
xchg
add
lea
pop
dec
and
test
cmp
iret
push
test
xchg
pop
addr16
leave
or
orl
ret
in
lods
dec
in
scas
test
aad
mov
loopne
stos
mov
inc
pop
jns
ret
mov
or
mov
sbb
gs
dec
fmull
orl
ret
sbb
cmp
push
pop
add
mov
je
sub
jae
lds
inc
mov
pop
les
jae
lahf
stos
daa
jnp
jno
mov
add
nop
lods
xchg
mov
push
sub
pop
bound
mov
hlt
subb
sbbl
sbb
stos
cld
add
adc
ret
pop
push
adc
jnp
and
movb
pop
xchg
add
shrl
sbb
add
test
fwait
add
das
mov
out
jmp
add
mov
and
daa
jp
add
out
add
and
mov
add
xor
xor
jg
or
pop
cwtl
inc
add
dec
mov
jle
add
cmc
and
push
gs
xor
push
shr
push
add
cmp
loope
add
gs
add
sbb
shll
sbb
repz
movsl
ret
jbe
jae
inc
pop
dec
or
lret
iret
ficoml
or
and
pop
dec
mov
mov
push
mov
mov
rol
sub
out
jecxz
sub
and
cmp
add
out
or
repz
jp
fimuls
int3
addl
jl
loopne,pn
shlb
lret
inc
or
inc
in
sub
sub
mov
and
and
and
jne
out
jg
movsb
mov
jl
filds
ret
mov
cmp
adc
nop
pusha
mov
mov
or
pop
sub
add
mov
mov
hlt
add
shrl
outsl
dec
jns
add
dec
loopne
mov
cmp
jmp
out
int3
add
dec
dec
push
stos
mov
pop
adc
cmpsb
add
aam
hlt
cwtl
ljmp
lret
pop
sub
sti
scas
add
jb
hlt
add
sub
mov
mov
movsb
push
gs
and
or
imulb
jne
js
lahf
push
add
scas
hlt
mov
mov
mov
jb
fisubrl
stos
roll
aas
loopne
xchg
test
add
out
pop
in
aad
xchg
jp
daa
ret
ficomps
and
cmp
add
jecxz
insl
repnz
inc
push
ret
orl
lods
inc
dec
inc
xor
call
and
in
inc
out
dec
mov
imul
js
leave
mov
stos
in
pusha
adc
and
add
std
or
add
cmc
shlb
push
pop
outsb
inc
jge
push
pop
adc
push
insl
js
jae
or
jge
gs
add
dec
inc
jp
cs
and
sarb
stos
cld
pop
ret
and
test
sahf
das
push
xlat
jp
add
adc
out
adc
cmp
jnp
insl
int
adc
cwtl
subps
adc
push
in
jg
ret
pop
sbb
jo
hlt
enter
out
mov
mov
repnz
lret
test
mov
jle
inc
sub
and
aam
xor
mov
std
fstpt
pop
and
test
jno
in
out
or
pusha
mov
mov
mov
add
ret
dec
inc
in
xchg
movsb
inc
rcr
hlt
mull
xchg
ret
enter
add
jmp
orb
pop
ret
sbb
sub
mov
and
add
or
mov
add
add
inc
or
dec
cmpsl
inc
sub
push
test
rcrb
or
test
pushf
loope
data16
pxor
stc
adc
add
sahf
add
mov
cwtl
add
xchg
pop
rolb
enter
mul
mov
add
scas
pop
mov
add
and
outsl
int
and
paddd
addb
inc
xor
mov
mov
xor
fisttpl
hlt
mov
je
add
addr16
jg
ret
xchg
mov
cmp
xor
mov
add
inc
dec
jb
in
inc
sub
dec
movsb
repz
loopne
jg
add
scas
xchg
inc
lcall
cmp
incl
mov
icebp
pop
and
add
dec
xor
dec
xchg
testb
dec
push
in
adc
xor
cmp
add
jmp
push
sbb
addr16
dec
imul
xchg
mov
and
jecxz
jae
shrl
lret
lods
or
sbb
out
dec
sub
add
xrelease
mov
and
add
popa
inc
cmpsl
jns
pop
fs
add
dec
adc
push
jno
hlt
in
mov
mov
movsl
aas
push
inc
xchg
mov
gs
lods
je
in
add
pop
or
sarl
jne
sbbl
addb
add
mov
cmp
fs
jle
pop
add
mov
mov
pop
sub
loopne
or
imul
add
mov
sub
mov
mov
insb
sbb
icebp
or
xchg
out
push
sbb
imul
loope
stos
and
int3
xchg
dec
sub
popf
and
add
cmc
sub
inc
xchg
pop
mov
fsubl
insb
cmp
add
lahf
or
cmp
loope
and
pop
scas
xor
mov
popa
dec
adc
add
in
loop
jg
mov
push
ret
xchg
and
jbe
out
jne
or
scas
enter
mov
adc
orl
adc
mov
pop
ret
out
sahf
cmpsb
pop
xchg
mov
inc
push
jb
out
add
inc
out
idiv
in
xlat
mov
push
xchg
jbe
out
cmp
cs
loop
xchg
inc
mov
add
stc
push
add
and
dec
inc
in
call
jp
or
mov
push
and
mov
xchg
or
push
mov
xor
out
sbbl
jns
ja
add
mov
movsb
addb
or
loopne
cltd
ret
inc
dec
pop
lods
xchg
test
or
push
into
andl
pop
movsl
cwtl
roll
push
stos
iret
into
mov
or
test
push
jbe
stos
sub
and
negl
inc
mov
dec
stos
add
xlat
into
mov
out
mov
orb
pusha
or
lret
fistpll
xchg
add
test
test
jne
sbb
or
cmp
loope
imul
inc
sbb
adc
ror
insb
in
mov
inc
cmp
sar
mov
fs
inc
cld
add
mov
inc
and
pop
or
in
daa
cmp
jb
dec
xorb
sub
ret
out
cld
daa
lret
test
lcall
add
or
bound
lret
pop
adc
mov
pop
ficomps
outsl
stc
add
and
mov
fistl
test
xchg
mov
xchg
add
inc
dec
cwtl
fcom
insl
and
int3
add
pop
lods
out
incb
enter
mov
mov
add
cmp
in
roll
dec
lods
and
mov
xchg
mov
hlt
push
subl
lods
mov
add
scas
out
iret
dec
addb
xchg
or
lea
fwait
add
jle
mov
sti
or
lret
imulb
subb
pop
js
sub
adc
sub
call
imul
push
pop
stos
orl
in
add
cmp
xchg
gs
or
loope
inc
mov
shrl
add
xor
cld
inc
adc
xchg
test
pop
cmp
addr16
movsb
jge
ltr
lret
ret
and
add
int3
mov
mov
jl
add
push
add
dec
xor
dec
test
inc
mov
xor
inc
or
xorb
add
sub
inc
lods
cmp
push
and
mov
mov
call
lods
add
movb
popf
inc
mov
jecxz
int
movsb
dec
in
jl
int3
fs
jns
les
hlt
fiaddl
pop
add
sbb
add
addr16
push
imul
str
add
add
dec
sub
test
cmp
and
mov
hlt
out
mov
pushf
test
add
add
loope
adc
movsb
xor
inc
or
bound
add
xchg
dec
jbe
ds
add
int
aad
add
lret
inc
inc
add
sub
cwtl
mov
hlt
lods
js
dec
test
adc
stos
lds
das
or
jmp
and
enter
mov
cld
ret
ret
jne
add
sbb
adc
adcl
test
jbe
ret
push
aas
ja
sbb
sub
nop
cmp
and
lods
xor
in
xor
andl
mov
inc
int3
loop
test
dec
data16
inc
shll
fcmovne
add
xchg
inc
stos
test
mov
xchg
fwait
lcall
sbb
inc
icebp
pop
xlat
jp
mov
sub
pop
sub
sub
mov
cmpl
push
jecxz
adc
jmp
subl
scas
and
hlt
lods
shrb
jle
and
cmp
dec
inc
mov
jns
push
pop
ret
pop
gs
inc
and
lret
out
loope
jo
dec
and
shll
add
mov
loope
inc
and
dec
int3
adc
sbb
jbe
inc
cmpsl
mov
repz
in
sbb
nop
cmp
sti
out
add
fs
mov
push
pop
and
and
inc
xor
fistpl
ret
add
mov
test
add
mov
fistl
arpl
cvtdq2ps
in
sub
lahf
ret
pop
bound
adcb
cli
mov
ret
shlb
add
push
sbb
add
in
xor
add
xor
stos
inc
mov
popa
sub
ret
mov
add
xchg
lret
loop
and
pop
dec
mov
movsb
je
mov
test
mov
push
in
sahf
inc
cmp
stos
inc
or
stc
sbb
add
jmp
mov
add
ret
cmp
movsb
shl
enter
lods
inc
mov
call
lea
mov
in
lret
add
icebp
int
xchg
movsb
cli
add
lret
insl
ficoml
ret
mov
int
mov
loop
mov
mov
inc
bound
sbb
js
cld
fiaddl
repnz
jmp
inc
push
jbe
mov
add
lret
andb
push
push
push
iret
jecxz
cmp
dec
mov
pop
loope
sub
imul
lcall
lods
fidivrl
mov
lret
inc
fwait
add
inc
mov
add
lcallw
ljmp
pushf
sar
and
cmp
out
mov
jbe
jmp
or
inc
sti
push
repz
or
sbb
pop
lret
sub
movsb
mov
imul
int
xor
hlt
add
mov
andl
sbbl
sub
xchg
bound
outsl
test
rolb
jp
out
pop
mov
adc
stos
in
hlt
and
cmp
pop
add
dec
add
mov
dec
add
sub
into
sti
popf
mov
fs
inc
lret
addb
add
roll
cmpl
movl
and
lret
mov
push
jl
add
test
mov
scas
xchg
jb
lea
ret
xchg
shll
mov
sti
cmpsl
mov
mov
jp
popa
cmp
pop
pusha
dec
sbb
gs
rcrl
mov
test
xor
test
ret
mov
je
cmc
jb
jmp
and
add
out
stos
mov
dec
dec
jp
sbb
add
fwait
mov
and
add
add
sti
mov
jp
ljmp
test
inc
mov
push
and
mov
rcl
cmp
lea
jp
add
dec
data16
xor
ret
insl
mov
xchg
add
int3
push
adc
lcall
stos
dec
sbb
jae
push
cld
movsl
pop
xor
les
sub
hlt
repnz
pop
sbb
lret
xor
bound
dec
inc
lds
xchg
xor
fs
adc
jbe
outsl
out
jle
rcrl
mov
inc
arpl
stos
ljmp
add
mov
in
rclb
gs
cmp
inc
sbb
ret
repz
cmpsb
arpl
ret
movsl
lret
jp
popa
ret
sbb
cmp
xchg
movsb
lret
mov
test
inc
sbb
roll
ror
iret
dec
xor
fucomi
ret
push
in
dec
add
ret
movsl
or
inc
loopne
shlb
xor
into
data16
aaa
sti
add
in
ret
test
outsl
mov
ret
lahf
mov
push
xor
add
add
idivl
dec
sbb
xor
decb
mov
mov
xor
inc
sub
shrb
inc
mov
mov
lret
addr16
and
mov
pop
and
data16
mov
jl
mov
adc
out
pop
scas
inc
ljmp
repnz
or
jbe
jae
pop
sub
jmp
rep
pop
mov
in
dec
jp
xor
pop
adc
add
repnz
jecxz
jl
jp
push
outsb
and
out
pop
adc
add
cmp
rcrb
fs
add
ljmp
jge
mov
jb
push
lods
ret
or
aas
gs
pop
add
dec
shll
sarl
jle
out
ret
sbb
and
punpcklwd
rol
mov
add
loop
outsl
cmp
add
sub
sti
cwtl
mov
test
jb
repnz
scas
repnz
add
icebp
add
inc
sub
in
movsb
dec
arpl
rcll
loopne
add
fldenv
ret
stos
test
add
xchg
outsl
or
xchg
add
scas
sti
ljmp
insl
push
cmp
mov
xor
adc
pop
bound
mov
imul
cmp
shrb
jno
fcmovnb
out
fwait
push
bound
cli
leave
mov
add
loope
mov
dec
ds
dec
lods
jbe
sub
or
inc
jp
insl
sub
xor
xchg
shll
mov
lcall
dec
inc
movsl
jae
mov
jb
mov
lods
add
repz
loopne
mov
movsb
or
ret
push
and
jp
add
stos
jecxz
call
jmp
outsl
inc
dec
mov
inc
es
xlat
push
sub
jmp
xor
add
imul
mov
xchg
cmp
test
repz
loop
sti
sbb
push
mov
repz
pop
bound
inc
xor
xor
adc
lods
sub
repz
outsl
shl
push
add
mov
inc
mov
arpl
mov
xchg
jmp
out
andb
pop
inc
or
bound
lcall
inc
dec
adc
lods
push
andl
stos
imul
dec
sti
leave
cwtl
sbb
mov
push
pusha
dec
jae
lret
sub
push
xor
in
mov
insl
clc
loopne
imulb
call
add
lock
mov
scas
jle
dec
inc
push
ret
jp
inc
sub
sub
mov
mov
shlb
imul
sub
lret
add
pop
dec
mov
popa
jp
out
outsl
dec
add
and
loopne
or
lds
adc
inc
cmp
loope
insb
inc
in
loopne
jnp
xchg
jne
mov
pop
inc
fs
clc
aad
pop
arpl
jbe
push
pop
dec
mov
int
gs
or
outsb
lds
xor
xor
and
or
inc
ja
and
push
fs
jnp
dec
xor
adc
aad
dec
adc
dec
test
jp
fstps
repz
inc
test
push
out
lds
xorb
pop
and
mov
ss
mov
rclb
xor
ret
pop
jo
and
int
je
in
pusha
inc
pop
addr16
shr
ss
jb
pop
aaa
inc
dec
shlb
clc
ljmp
rorb
inc
imul
jecxz
add
push
jne
aam
adc
xlat
bound
jbe
adc
rolb
push
push
mov
out
adc
push
jne
add
aad
sub
test
sbb
inc
add
jns
daa
nop
mov
and
pop
dec
dec
int
inc
xorb
fsubs
mov
aaa
enter
add
push
inc
xor
dec
aaa
push
popa
cmc
lea
sub
pop
push
out
jne
jbe
or
jo
push
shll
and
cltd
inc
mull
mov
push
push
lea
mov
xor
inc
les
outsl
push
xchg
adc
std
push
cmpsb
and
adc
push
daa
mov
ja
loope
int
push
xorl
push
jno
dec
xchg
pop
gs
cmpsl
adc
xor
xchg
lcall
imul
pop
mov
jecxz
gs
adc
addr16
dec
pop
out
xlat
add
out
adc
jo
shrb
pop
lods
repnz
push
idivl
lahf
push
movsl
lahf
jbe
insb
dec
xchg
add
dec
lds
roll
ja
ret
pusha
add
xlat
movsl
clc
insl
xchg
mov
mov
lods
data16
inc
jbe
fs
push
adc
pop
out
out
outsb
mov
rcl
jne
inc
ret
fcom
add
mull
adc
jmp
push
enter
dec
adc
gs
adc
push
xchg
iret
lret
xlat
imul
adc
adc
aam
test
in
push
out
push
in
inc
rorl
test
and
addr16
adc
push
daa
out
inc
je
adc
je
mov
pop
es
mov
aam
and
pop
shlb
out
jae
jne
cmpsl
les
jbe
sbb
ss
mov
mov
push
test
iret
xor
out
mov
rol
inc
xor
mul
pop
ss
inc
cmc
and
pusha
jne
dec
lock
jbe
sub
in
jecxz
jecxz
movsl
cmpsl
rolb
add
daa
aaa
xchg
enter
ja
add
xchg
pop
xchg
xlat
adc
pop
push
in
hlt
loope
ret
inc
push
aam
adc
in
mov
ja
daa
mov
shlb
addr16
outsl
push
push
dec
dec
push
cmp
aad
fs
jo
cmp
rcrb
adc
and
jmp
popa
in
push
int3
pop
cmp
in
sti
adc
addr16
sbbl
cmp
jno
mov
cmp
and
jecxz
cmc
ja
addr16
es
jmp
pop
xchg
push
data16
adc
xchg
fs
data16
add
out
lret
dec
je
imul
jae
jo
pushaw
add
cmp
push
sarl
push
adc
test
fsts
mov
in
cld
cltd
int
xchg
jbe
shrb
dec
mov
cwtl
cmp
add
sbb
notl
or
jb
sub
xchg
or
cmp
lret
cmc
movsl
adc
inc
jae
mov
ds
shrb
mov
imul
in
inc
sahf
les
int3
add
arpl
and
lret
int3
mov
shr
jne
test
jae
xor
out
jno
test
add
test
repz
ret
fildll
rol
sub
inc
lcall
cmp
or
lcall
outsl
push
mov
jle
ret
in
xchg
push
into
dec
frstor
adc
push
pop
inc
xor
xor
pop
cmpl
mov
mov
hlt
xor
adc
fcmovnu
xor
and
jae
faddl
jae
jp,pt
dec
fwait
cmp
push
ffreep
rcrl
gs
sti
fildl
in
jl,pt
mov
addr16
mov
lods
cmp
gs
addr16
scas
inc
arpl
mov
or
push
mov
sub
outsl
adc
aas
mov
add
imul
std
pop
sub
xchg
mov
sti
repnz
xchg
cmc
test
push
out
dec
pop
test
cmp
imul
inc
jecxz
jg
rcll
mov
cmova
loop
bound
inc
pop
push
mov
xchg
inc
test
fnstcw
pop
andb
push
mov
rcrb
xor
lret
imul
jnp
lock
mov
inc
add
mov
dec
mov
add
je
int
cmpsl
pusha
ja
imul
mov
adc
dec
call
pop
add
jp
dec
sbb
aaa
ds
lea
les
add
in
jg
int3
adcl
add
jl
hlt
xchg
dec
pop
call
xchg
insb
jns
mov
jl
notrack
mov
daa
fsubrs
adc
cs
mov
aas
jl
pop
xchg
and
imul
jae
sbb
pushf
push
pusha
add
cltd
jl
or
jmp
movsl
enter
inc
cmp
adc
sub
jecxz
imul
jae
xchg
int
add
add
shrb
cmp
pop
jae
fwait
insb
inc
jecxz
xchg
addb
cmp
push
inc
fdiv
add
cmp
andb
cmp
mov
add
jbe
push
pop
enter
dec
xchg
les
cmpsl
and
movsb
jge
mov
xchg
ret
ja
sub
mov
xchg
int3
xor
orb
ja
sbb
aas
arpl
cld
shlb
or
repz
cltd
imul
adcb
lods
mov
out
dec
inc
enter
pop
insl
push
fcomps
pmaxub
sub
arpl
jae
mov
push
mov
dec
sub
subl
insl
test
mov
pop
in
add
push
pop
pop
adc
aaa
xlat
mov
jecxz
cltd
or
in
aas
lret
sub
cli
ret
push
sbb
in
pop
cltd
pop
aas
js
stc
xor
inc
or
push
jg
aam
andl
sarl
mov
sbb
cmpsb
mov
push
or
jno
xor
cs
jmp
packssdw
pop
pop
dec
xchg
xchg
cmpsl
les
test
mov
inc
push
push
pop
dec
push
and
xlat
push
mov
sbb
cmp
aam
aaa
cmp
arpl
gs
ret
pop
sub
jae
xchg
add
jbe
push
stos
in
mov
stos
and
dec
cmp
cmp
mov
fiaddl
stos
dec
int
dec
test
add
outsl
in
outsl
scas
sbb
cmp
pop
inc
mov
stos
inc
adc
ds
push
repnz
mov
cmpsl
clc
push
lret
repz
ds
subb
jnp
mov
adc
add
pop
icebp
hlt
push
bound
push
jp
inc
movsl
lods
and
test
inc
xchg
mov
add
xchg
stos
imul
push
push
aaa
enter
pop
ljmp
rep
dec
imul
or
ja
aas
mov
out
adc
iret
jecxz
sarl
fisttpl
xchg
inc
mov
out
pop
push
outsl
jl
test
sub
add
movsb
stos
push
or
outsl
mov
inc
flds
addl
arpl
inc
test
inc
in
jnp
pop
int
pop
add
arpl
push
pop
out
sbb
inc
inc
inc
lods
imul
arpl
push
jnp
test
lea
sub
ss
cmpsl
outsl
psrld
jae
xor
or
xchg
outsb
shrl
cmp
idivl
and
pop
cmp
mov
dec
cmp
mov
fsubrl
cmpsl
jnp
adc
mov
hlt
pop
or
pushf
inc
fsubrs
and
lods
jns
clc
inc
xchg
test
scas
enter
sub
push
ret
aas
adc
aad
dec
filds
jnp
push
lcall
dec
lock
pop
dec
adc
ja
mov
xlat
imul
ret
mov
insl
or
int3
xchg
xor
push
mov
xlat
pop
jne
lcall
push
and
xlat
popa
test
aaa
pop
insl
sbb
sti
mov
xchg
dec
dec
pmaxub
addr16
mov
dec
mov
pop
iret
ret
jmp
jecxz
dec
addr16
or
das
dec
lock
or
dec
lret
add
jae
sbb
inc
and
arpl
mov
in
inc
sub
inc
cmpsl
ficomps
cmp
xchg
mov
in
ret
sub
ja
in
sbb
jbe
jmp
push
jmp
mov
xchg
sub
push
loop
jae
aaa
sarl
ret
xchg
cmp
dec
test
mov
or
jnp
aad
add
xchg
sti
and
jge
std
dec
mov
jle
rcrl
mov
add
push
add
inc
cmpsb
and
scas
inc
cmp
cmp
cmp
push
stos
mov
lret
dec
cmp
or
add
into
lock
outsl
sarb
add
movsl
cwtl
or
add
jo
hlt
mov
pop
xchg
or
adc
mov
sbb
cmp
test
push
js
push
cmp
add
in
popf
enter
cltd
mov
mov
scas
stos
in
aas
jns
lds
dec
xor
mov
ret
roll
xchg
mov
xlat
xor
adc
jmp
shlb
cmp
pop
mov
out
xchg
imul
inc
pop
mov
push
bound
cmp
shll
testl
imul
repz
pop
repnz
stos
mov
xor
repnz
mov
sbb
insl
jg
test
add
pop
cmpsl
loope
int3
mov
testl
fdivl
dec
stos
jbe
dec
fs
dec
push
jmp
jecxz
pop
pop
mov
dec
pusha
or
outsl
adc
push
imul
mov
btc
test
notb
inc
sbb
faddl
lea
leave
xchg
or
dec
push
data16
shll
pop
repnz
pop
push
xor
addl
inc
fucomip
ja
test
xor
jae
push
jp
add
dec
xchg
xlat
repz
scas
cmp
or
aaa
push
inc
ss
xchg
pop
insl
push
outsl
daa
jg
pop
ret
scas
push
call
lods
outsb
cmp
jo
lret
ja,pt
sti
rcrl
mov
out
xchg
xchg
sarl
cvtdq2ps
fmull
cld
lahf
mov
mov
sub
sbb
pop
jb
xor
jo
gs
addr16
in
cmpsl
pop
iret
inc
inc
push
jg
ret
and
popf
loop
xchg
dec
pop
pop
dec
mov
add
push
xchg
jns
and
push
sbb
das
push
mov
inc
and
inc
inc
fmuls
cmpsl
lret
out
test
scas
sub
nop
sti
pop
lar
xchg
pop
stc
sub
pop
sarb
cmpsl
jmp
mov
jnp
in
cld
sub
sbb
inc
or
out
push
xchg
pop
lahf
test
nop
xor
ret
inc
cmpb
ror
xlat
mov
lahf
jmp
pop
push
mov
test
push
jg
lea
xor
ja
inc
pop
xor
add
xor
jg
inc
and
lods
and
in
push
pop
add
cmp
mov
repz
repnz
add
inc
mov
out
jl
dec
insl
xchg
or
pop
scas
addr16
mov
repz
cmp
test
js
mov
pop
cmp
add
call
shl
push
mov
ret
cmpsl
push
push
or
push
stos
repz
daa
ret
les
stos
je
jmp
mov
sbb
repnz
fadds
cmp
sub
xchg
enter
xor
inc
jnp
mov
gs
scas
adc
arpl
js
mov
dec
je
inc
lret
xor
imul
or
pop
scas
les
xchg
xor
gs
ret
cmp
lahf
mov
imul
movl
ljmp
push
jle
lret
pop
in
push
dec
arpl
push
pop
push
pop
pop
shlb
cs
and
imul
add
pop
fnstenv
pop
xlat
test
sub
decb
lret
rol
mov
jl
andb
rol
out
xchg
mov
iret
jae
add
mov
push
rep
cmp
pop
mov
xlat
ret
add
push
clc
mulb
lea
inc
ss
rorb
hlt
enter
sub
in
ja
daa
sahf
xor
imul
mov
mov
mov
and
pop
loope
cmc
test
aas
sarl
js
inc
negl
pop
fmuls
cmp
pop
adc
clc
add
mov
jmp
xor
pop
inc
cmpsb
cltd
mov
dec
jnp
inc
out
push
and
dec
cmp
mov
imul
mov
rorl
add
leave
mov
and
sub
mov
jb
dec
inc
stos
inc
mov
pop
pop
es
cltd
add
or
add
mov
stos
loopne
ss
ficoml
stc
push
inc
dec
icebp
pop
mov
add
cmpb
xor
push
jg
xchg
cmp
lret
add
push
or
cmp
ror
arpl
les
orb
adc
jns
test
dec
cmp
test
out
pop
mov
and
pop
mov
mov
sarl
pop
cli
push
push
popf
inc
addr16
jno
dec
orb
xchg
stos
push
mov
arpl
dec
lahf
mov
pop
nop
scas
dec
jo
fidivrl
stc
mov
mov
dec
inc
iret
ret
aaa
gs
ret
cmpb
mov
adc
imulb
ffreep
pop
pop
cli
jl
jo
jecxz
cmp
jns
push
ja
add
jnp
and
xchg
xchg
dec
sarb
mov
or
imul
cltd
ret
dec
dec
mov
push
lret
arpl
add
test
add
sub
lret
mov
dec
jg
pop
ret
cli
fisubrs
sbb
fwait
out
mov
loopne
imul
subl
bound
add
icebp
ja
and
rcrl
add
or
push
outsl
add
mov
mov
daa
dec
out
arpl
loop
nop
xchg
fidivl
jae
pop
cmp
ljmp
fsts
sub
sti
inc
pop
dec
inc
mov
mov
pop
and
or
cmp
pop
loope
mov
stos
ss
or
jno
ret
add
add
mov
enter
rcrl
shrl
adc
push
inc
or
cmp
sub
lret
mov
push
mov
fwait
inc
or
bound
aas
dec
adc
fisubs
jae
or
add
dec
movsl
aad
lcall
push
cmpb
imul
gs
jmp
push
test
xor
mov
clc
mov
sub
cmp
push
mov
dec
int3
xor
push
xchg
out
xchg
xchg
inc
arpl
adc
jp
pop
fidivs
pop
inc
xchg
int3
dec
pusha
out
jg
cli
push
arpl
gs
jle
in
xor
push
mov
sbb
mov
insl
push
sbb
mov
mov
dec
and
outsl
xchg
push
sub
ljmp
popa
sbb
in
mov
pop
insl
adc
push
les
push
xchg
imul
mov
pop
pop
jns
es
push
push
adc
mov
jg
sar
push
test
jne
push
pop
push
addr16
xchg
inc
dec
movsl
aam
les
adc
pop
push
push
in
in
xchg
mov
jne
add
lds
inc
rolb
leave
mov
mov
in
int
pop
push
es
movsl
adc
js
out
mov
inc
inc
push
push
inc
inc
aad
pop
pop
daa
add
mov
push
fdiv
fstl
popf
cmp
jb
inc
out
xor
cmp
dec
jecxz
aam
and
dec
xchg
cmpsl
out
repnz
ficoms
xor
inc
jae
insl
push
repz
mov
adc
adc
mov
jbe
push
jnp
dec
cmc
push
rorb
xchg
out
xchg
fs
mov
push
push
pop
jmp
addr16
lods
add
in
add
ja
and
and
ret
or
mov
cmc
test
out
leave
push
add
es
pop
rcll
mov
add
push
and
popf
xor
mov
sbb
cmp
adc
imul
mull
scas
push
addr16
lds
rclb
and
stos
xchg
pop
xor
test
sub
and
xor
rcl
sbb
pop
push
push
push
je
add
xchg
cmpsl
sub
les
xchg
mov
push
cmc
testb
xchg
cmc
push
sarl
mov
and
pop
je
fwait
mov
xchg
ljmp
lds
push
cmc
inc
test
bnd
lret
adc
push
and
gs
sbb
dec
or
fldcw
push
addr16
jge
pop
fs
push
rclb
pop
or
inc
in
in
sub
dec
inc
loop
test
mov
push
xlat
aaa
in
ret
adc
cmp
dec
iret
push
bound
aad
cmp
add
lret
push
cld
pop
push
addr16
push
test
shrl
cmc
rol
mov
rol
xor
cmpsl
hlt
fisttpl
pusha
gs
je
sarl
push
xchg
inc
in
int3
cmpsl
xor
push
add
notl
test
push
xor
and
mov
insb
xor
sar
add
lret
movsl
rcpps
mov
aas
or
lock
addr16
data16
pop
add
xchg
push
inc
xlat
js
pop
mov
fwait
mov
adc
mov
int3
gs
sbb
loope
push
imul
cmpsw
ret
pusha
mov
js
les
roll
popa
les
xor
imul
lock
push
xchg
adc
jns
and
outsl
je
jmp
pop
push
sub
push
pop
lret
subb
insb
adc
gs
jnp
jnp
pop
mov
jl
push
or
sbb
outsb
inc
push
jno
daa
out
faddl
repnz
xlat
mov
sti
jnp
sahf
into
shrb
movl
not
push
jnp
pop
out
iret
pop
mov
arpl
push
push
lret
inc
push
ljmp
movsl
insb
movl
rolb
daa
aad
add
iret
add
mov
scas
into
jp
enter
mov
flds
out
jecxz
aad
xor
cmp
jp
movsl
popa
and
mov
mov
add
push
mov
sarb
add
repz
ret
pop
mov
xchg
mov
jge
xor
movsl
shlb
inc
xlat
inc
xor
add
mov
cli
rcr
mov
lds
or
inc
pop
sbb
push
ret
push
mov
lret
cmp
push
inc
and
fidivs
mov
lea
movsb
jno
cld
repz
rolb
pop
pushf
mov
xchg
aas
jnp
ret
ret
jge
out
mov
inc
rol
jae
cmpsl
or
add
andl
into
add
test
lods
add
xchg
push
jecxz
inc
push
aaa
fadds
mov
ficomps
mov
std
add
jge
mov
push
add
sbb
rorl
movsb
shlb
xor
stc
add
call
jae
sahf
push
jmp
and
clc
mov
and
or
sahf
fwait
inc
pop
imul
add
in
mov
lea
adc
xchg
push
ja
xlat
jo
cmc
mov
data16
xorb
sarb
addr16
testl
mov
orl
data16
dec
addr16
and
enter
cmpl
inc
pop
inc
andb
xor
idiv
mov
add
je
xor
jb
ds
cltd
sbb
shlb
cli
fidivl
xor
adc
roll
insl
iret
lret
fstp
in
rclb
xor
pusha
xchg
add
mov
push
loop
xchg
and
or
and
lds
inc
shl
jne
aam
test
push
inc
add
call
xchg
cli
inc
lds
jo
inc
push
ss
sbb
jnp
xor
ja
jae
ljmp
rcl
xor
in
aad
test
testl
shrl
pop
jmp
sar
mov
imul
cmpsl
dec
and
pop
push
aaa
les
sahf
div
xor
add
and
push
push
test
repnz
jp
and
es
jecxz
dec
test
aam
pop
xchg
or
data16
inc
movb
lahf
xlat
xchg
adc
or
and
not
jbe
mov
push
mov
or
xlat
test
sbb
cmc
pop
adc
fcmovnb
out
and
pop
push
testl
inc
xchg
xchg
cmpsl
ja
dec
pop
test
push
inc
push
push
data16
loope
push
cmc
push
ret
adc
pusha
in
stc
outsb
shlb
mov
cs
xor
fldenv
inc
push
in
add
xor
push
and
popa
add
adc
aam
inc
daa
xor
shrl
adc
mov
xchg
jp
dec
cmpsl
xchg
in
inc
cmpsb
enter
repz
push
out
xor
movsl
loop
xor
cmc
enter
shrl
push
daa
daa
dec
jo
push
sahf
sbb
cltd
scas
sub
inc
ds
cmp
jle
bound
ds
mov
adc
imul
or
arpl
popf
insb
or
push
fdiv
movsl
mov
adc
sti
pop
mov
movsl
into
loop
pop
rorb
popa
cli
pop
jmp
dec
addr16
or
popa
push
int3
inc
mov
fs
push
popf
or
rorb
adc
adc
lahf
push
xor
xchg
dec
testb
push
xchg
shlb
adc
mov
mov
xor
aad
gs
push
jg
ja
xchg
pop
xor
imul
and
adc
mov
mov
sub
adc
jne
inc
sub
sub
je
pusha
insl
aad
push
add
mov
lds
fs
mov
jg
aaa
mov
lcall
cmp
push
test
dec
fisttps
bound
dec
push
push
daa
or
push
loope
outsl
data16
add
or
dec
dec
and
lret
lds
xchg
arpl
push
or
arpl
dec
subb
arpl
dec
pop
adc
push
ss
pop
ret
mov
js
cmp
rolb
xor
add
push
arpl
arpl
jae
push
dec
lods
bound
inc
arpl
imul
out
imul
pop
loop
mov
out
imul
push
dec
ret
push
pop
std
pop
mov
adcb
dec
xor
inc
fisttpl
push
mov
les
push
aad
sub
pop
mov
push
jnp
arpl
inc
jb
cmp
pop
aam
imul
adc
add
adc
fstps
aam
lcall
pop
lahf
xor
jae
or
jmp
daa
fiadds
orl
hlt
mov
je
repnz
mov
andb
je
pop
add
js
and
xchg
adcl
imul
cmovne
xor
or
add
rolb
lahf
lret
data16
push
hlt
mov
fs
xchg
gs
ja
xchg
xorb
ljmp
mov
adc
push
pop
adc
popf
daa
push
mov
mov
push
inc
aam
loope
jnp
addr16
and
push
mov
push
push
ds
add
addr16
push
xlat
fisttpl
je
dec
or
icebp
and
add
movsb
roll
lret
aad
fwait
scas
aaa
adc
cmpsl
inc
fwait
pusha
popa
sbb
cmpsl
js
dec
popa
out
add
cmpsl
add
popl
xor
mov
xlat
and
adc
xorb
pop
test
mov
orl
mov
fisttps
nop
and
lcall
jno
ds
cwtl
push
push
mov
icebp
lds
cmp
xor
cmpsl
out
jmp
pop
aad
mov
jno
mov
inc
xor
inc
inc
adc
push
repnz
add
cmp
push
jb
jmp
lds
xor
fcmovne
add
iret
es
push
xor
stc
pop
inc
mov
lods
pop
rcl
mov
xorl
or
jbe
in
in
xor
mov
lret
sti
or
lcall
push
jne
push
mov
jno
jns
add
push
mov
shrl
das
es
shr
lret
pop
add
hlt
das
push
mov
wbinvd
lods
sbb
mov
sbb
fstpt
fimuls
int
leave
push
roll
xor
and
add
sti
sbb
mov
add
sti
adc
push
cmp
add
packssdw
jnp
add
add
xor
pop
xchg
sbb
imul
xchg
mov
lahf
cmpsl
xorl
jmp
and
mov
popf
lahf
aad
sbb
bound
mov
aad
pop
aad
cmp
loop
arpl
inc
repz
data16
sti
aam
xchg
rorb
popa
jae
popa
sub
imul
fisttpl
adc
popa
or
daa
stos
sub
imul
lret
xchg
inc
mov
xchg
out
fistps
fists
jmp
inc
push
pandn
mov
add
mov
sub
dec
cmp
popa
mov
jbe
adc
sbb
mov
push
xlat
out
mov
mov
pop
pop
mov
cmp
popa
and
push
mov
test
int
shrb
popa
test
and
push
shrb
ja
push
adc
xor
sbb
popa
scas
out
jno
addb
aas
adc
test
cltd
jne
inc
lea
dec
mov
lahf
sbb
mov
jmp
das
push
sbb
push
xchg
sbb
mov
or
dec
xor
nop
dec
leave
imul
lds
push
addr16
fs
fs
sbb
xlat
push
jge
arpl
xchg
push
mov
add
dec
daa
jg
xchg
outsb
add
adc
mov
fcomps
std
filds
imul
and
in
push
pop
rolb
movl
das
jmp
add
es
bnd
xchg
int
jnp
inc
icebp
fimuls
or
and
or
imul
inc
or
xchg
daa
loopne
add
jecxz
fs
jg
mov
adc
push
jmp
mov
pop
es
aas
ffreep
shr
rclb
cmpsl
xor
mov
pop
in
xchg
lahf
pop
popa
fadds
mov
sti
adc
push
xchg
ss
mov
sub
inc
push
inc
mov
mov
xor
or
addr16
sbb
xchg
add
mov
sbb
movsl
mov
jno
imul
stos
movsl
fyl2x
roll
cmp
jp
test
shlb
sbb
ja
in
jns
push
sbb
mov
push
fbstp
test
sarl
mov
add
xchg
aaa
xlat
mov
fldenv
mov
xor
cmp
sub
inc
addr16
push
iret
jno
xchg
iret
sbb
icebp
fs
mov
xor
and
rcrl
cmpsl
mov
repnz
fimull
sub
sub
push
xor
or
add
daa
jne
or
shll
mov
sbb
adc
sbb
popa
xchg
mov
xchg
xacquire
iret
mov
es
xlat
pop
or
xchg
imul
xorb
nop
int3
jne
push
popa
jne
dec
adc
dec
jo
inc
dec
es
mov
pop
shlb
xlat
icebp
fsubs
daa
pop
inc
rorl
add
adc
hlt
adc
xlat
add
mov
insb
addr16
sub
inc
push
icebp
inc
mov
jbe
xchg
addr16
jnp
xchg
loop
or
mov
inc
sbb
xchg
adc
rcl
lds
imull
mov
push
in
aas
or
mov
sub
popf
loopne
arpl
and
sbb
imul
mov
or
inc
jo
pop
mov
das
add
leave
test
cmp
arpl
xchg
or
fnstcw
scas
fs
inc
pop
and
daa
dec
jmp
out
cmpsl
mov
out
pop
sub
daa
xchg
out
pop
pusha
xor
or
dec
stos
pop
ljmp
cli
outsl
out
or
push
clc
sbb
fisttpl
add
mov
adc
inc
ret
inc
xor
bound
lcall
cli
les
jo
bound
pop
mov
xor
pop
add
mov
rcrb
les
out
orb
or
faddl
add
inc
cmp
rolb
daa
adc
mov
xor
fimuls
rclb
sub
popa
lock
les
cmp
and
jne
xor
rorb
shlb
dec
add
sarl
or
dec
xchg
pusha
push
inc
xor
inc
js
cmpb
dec
push
and
inc
arpl
hlt
shrb
nop
rorb
xchg
jp
and
fisttpll
loopne
pop
lock
inc
inc
adc
jecxz
nop
dec
cmpsl
inc
jp
mov
mov
adc
jae
push
inc
lea
pusha
mov
sbb
ret
inc
dec
cmpsl
mov
adc
jmp
shll
jp
or
loopne
sbb
lock
subb
add
mov
inc
push
and
fistpll
jg
and
rclb
shll
mov
xor
mov
shl
loopne
jp
push
cmpsl
sub
push
nop
pushf
sar
mov
imul
daa
inc
mov
sar
jecxz
pusha
and
leave
cmp
jmp
mov
adc
cmp
jp
repnz
stos
insl
scas
mov
jp
or
lock
or
nop
jge
mov
adc
test
push
test
pusha
adc
push
pop
and
inc
aad
dec
dec
and
shlb
loopne
inc
mov
mov
jecxz
nop
cmp
insl
mov
mov
rolb
pop
xchg
cld
mov
sbb
cli
dec
inc
adc
and
mov
cmpsl
sarl
out
inc
mov
repz
sbb
mov
and
jo
cmpsl
xchg
jp
mov
fs
divl
fcoms
test
shll
les
in
bound
xor
mov
lods
cmp
jecxz
lret
mov
push
xor
inc
gs
mov
inc
push
sbb
adc
imul
in
inc
sub
pop
lock
dec
mov
push
mov
sbb
sbb
dec
mov
push
sbb
and
push
cmp
aas
push
dec
inc
decl
inc
add
push
dec
inc
add
cmpb
add
push
inc
cli
pop
adc
dec
jnp
dec
mov
push
loope
pushf
pop
test
xor
ja
mov
push
adc
mov
pop
sub
sbb
pop
push
add
adc
dec
inc
scas
pop
cs
popa
pop
cmc
inc
or
je
inc
inc
mov
push
imul
push
mov
outsb
dec
decb
arpl
popa
imul
or
sahf
pusha
jnp
ror
addb
lret
dec
jecxz
jns
mov
out
sub
sub
add
and
xorb
popa
adc
inc
push
pop
push
xchg
xor
addr16
ret
adc
jp
rcrl
pop
das
lcall
fstps
and
dec
aaa
popf
dec
je
mov
add
pusha
jns
jb
aas
enter
mov
mov
sarb
enter
mov
mov
cmp
sbb
inc
and
push
mov
inc
jb
insb
repnz
mov
mov
push
mov
xor
xchg
mov
lods
insb
mov
enter
movsb
clc
push
lods
insb
mov
rcrl
leave
inc
inc
fimull
mov
cmpsl
sbb
mov
mov
sarb
enter
xchg
lret
cmp
mov
stos
std
push
std
dec
xchg
rorb
popa
ficompl
push
and
or
notl
push
mov
arpl
test
sbbb
mov
insb
mov
enter
mov
lea
std
adc
insb
sarb
mov
hlt
adc
mov
inc
test
jne
dec
mov
daa
cwtl
fs
into
jb
imul
lcall
push
fwait
cld
pop
mov
mov
mov
mov
jb
mov
rorb
dec
xchg
fmuls
sub
bound
shlb
mov
mov
cmpsl
sbb
mov
mov
sarb
enter
mov
hlt
popf
lret
xchg
or
cwtl
bound
dec
mov
jecxz
mov
lahf
and
inc
shll
mov
dec
dec
jnp,pt
sahf
mov
dec
dec
pop
jnp
int3
fcomi
and
cmp
dec
iret
movsb
xchg
call
mov
xchg
pop
xchg
loop
cltd
je
sbb
into
sahf
loop
adc
pop
les
jae
cld
xchg
dec
shll
cmp
sub
jae
dec
adc
pop
dec
or
popa
push
mov
out
decb
xchg
in
inc
jae
sbb
pop
jae
and
mov
rorb
or
aaa
jae
dec
push
or
mov
lcall
dec
and
inc
push
xor
adc
jne
xchg
fdivl
lds
jo
out
fwait
mov
sbb
test
cmp
xchg
lcall
aad
mov
shrl
xor
imul
in
mov
loopne
imul
fwait
scas
xor
xor
mov
mov
lds
push
jo
inc
lar
and
adc
push
xor
cwtl
jnp
inc
push
idivl
add
jp
xchg
add
inc
jns
sbb
arpl
mov
dec
sarb
pop
cmp
pop
xchg
mov
out
adc
dec
in
mov
mov
call
gs
les
xlat
in
push
in
add
outsl
mov
push
sbb
mov
out
fisttps
out
out
mov
nop
push
ljmp
int
dec
repz
lcall
jecxz
arpl
xor
leave
sarb
rcll
inc
in
fcmovb
push
rcl
push
pusha
scas
or
ror
xchg
pinsrw
and
xchg
iret
shl
aam
mov
inc
sbb
mov
loopne
rol
lret
push
lcall
jecxz
inc
add
sbb
pop
addr16
adc
add
mov
xchg
loopne
cmp
out
jmp
jno
adc
ja
push
pop
arpl
data16
js
add
add
bound
xor
add
cmp
add
aaa
cmp
add
jb
add
add
add
ja
add
aaa
add
add
add
add
cmp
add
add
add
add
add
dec
pop
add
dec
dec
push
add
add
add
dec
jo
outsl
xor
inc
inc
pop
add
push
add
gs
add
add
add
add
jo
jb
add
add
jne
add
xor
add
add
add
add
jbe
push
add
jp
add
push
add
jno
add
add
add
add
add
add
add
add
insl
add
add
insb
add
popa
add
add
add
xor
push
add
add
dec
popa
add
add
add
inc
add
jno
add
inc
imul
jbe
add
add
push
add
push
add
add
push
add
add
add
jns
add
add
add
outsb
add
xor
dec
jns
inc
add
insl
add
add
add
add
jae
add
push
add
add
add
add
jne
jp
add
js
add
imul
push
add
pop
add
aaa
ja
add
add
push
dec
add
jno
arpl
cmp
add
add
add
push
add
outsb
add
add
inc
add
pop
add
add
push
jno
add
add
add
add
dec
add
inc
add
add
dec
add
add
add
add
jp
insl
dec
inc
add
dec
xor
add
add
inc
push
inc
add
jb
dec
dec
push
imul
add
add
jo
inc
xor
push
add
add
add
add
jne
add
add
add
add
pop
cmp
fs
push
add
bound
add
inc
pop
fs
jne
pop
add
cmp
xor
add
inc
add
add
add
add
add
inc
add
add
pop
add
add
add
imul
add
inc
add
add
js
add
inc
add
push
add
add
inc
jne
push
add
cmp
add
xor
imul
imul
add
je
dec
push
add
xor
add
bound
add
add
add
xor
add
push
add
push
add
add
push
xor
add
add
add
add
ja
add
jp
pop
push
add
inc
add
add
inc
xor
push
add
add
jno
add
jno
push
add
add
gs
jo
fs
fs
add
add
add
add
xor
push
add
add
add
add
push
dec
add
inc
imul
ja
add
add
add
inc
jae
je
add
add
add
inc
inc
add
add
add
add
inc
xor
dec
cmp
push
xor
pop
add
add
inc
insb
xor
add
xor
add
add
add
add
add
data16
push
jp
add
add
add
add
add
add
inc
add
add
push
push
push
dec
add
add
dec
xor
push
add
dec
dec
add
gs
add
inc
add
xor
add
add
add
dec
add
inc
dec
push
add
insl
add
add
add
push
add
xor
add
add
add
dec
add
add
add
dec
add
add
push
imul
inc
add
popa
add
add
jno
push
add
insl
add
add
inc
jno
add
imul
add
add
bound
add
data16
add
add
outsl
add
add
add
add
add
add
dec
outsl
push
add
add
dec
add
pop
add
gs
add
fwait
popl
imul
or
iret
js
jmp
mov
into
add
push
add
loopne
js
push
test
imul
add
fistps
xor
outsl
ja
iret
test
imul
ds
fsub
mov
add
sub
js
add
std
sub
sti
out
sbb
js
ror
xor
add
jl
ja
iret
add
incl
js
add
mov
push
test
jp
push
xor
iret
add
fs
ja
iret
imul
mul
add
mov
jns
iret
mov
stc
mul
add
iret
add
push
test
imul
add
xor
fsubrl
add
adc
clc
push
add
xchg
xor
test
imul
add
xchg
rolb
js
loopne
js
xor
dec
or
iret
add
cwtl
nop
add
xor
sbb
into
add
mov
das
ja
iret
test
imul
ljmpw
imul
test
dec
add
mov
push
xorl
add
add
sti
scas
addl
jmp
js
roll
js
push
mov
push
daa
ja
iret
push
js
iret
sub
push
push
ja
iret
inc
js
iret
mov
inc
xchg
cwtl
xor
mov
mov
jns
iret
sbbl
rolb
js
rolb
push
push
sbb
iret
add
je
jbe
iret
add
iret
push
cmp
jne
xchg
mov
mov
imul
cmp
iret
add
shrb
imul
mov
imul
ja
and
add
push
sti
sub
out
jne
dec
and
xchg
jl
pop
out
stc
push
xor
js
add
sti
pop
inc
out
ja
adc
stc
psubsb
ja
iret
add
xor
sti
mov
outsl
mov
js
iret
leave
std
pop
mov
add
cwtl
imul
cmp
jae
imul
push
inc
sub
rolb
push
mov
add
push
add
testl
jns
mov
push
mov
add
dec
pusha
popa
mov
add
or
mov
push
shl
add
scas
add
add
add
scas
add
int3
mov
stc
add
popa
or
push
enter
xchg
js
iret
test
rol
jns
imul
imul
mov
into
cmp
imul
ja
sub
in
mov
pop
jns
and
cld
pop
mov
stos
cmp
mov
pop
and
insl
xlat
xor
mov
add
push
add
es
cld
push
add
iret
add
out
js
iret
cmc
stos
push
add
test
jp
lret
inc
jno
xchg
sbb
rcr
out
stos
xorl
mov
add
push
add
out
and
js
and
pop
xor
addb
and
mov
add
push
clc
add
lds
test
adc
iret
add
push
add
iret
adc
sub
js
iret
add
push
add
lret
cli
dec
in
xchg
pop
arpl
inc
add
repnz
or
push
shr
sbb
cmp
add
push
add
iret
add
rolb
loope
mov
call
cmc
xlat
add
adc
cmp
es
iret
pop
add
repz
cmp
dec
fwait
cwtl
sti
fdivp
fstl
add
repz
imul
shlb
cli
outsl
inc
rol
ss
add
mov
pop
test
jbe
add
push
or
iret
cli
push
xor
jbe
iret
sahf
cmp
addb
inc
jmp
pop
pop
mov
lcall
add
xchg
clc
ss
add
lds
outsl
inc
shl
add
add
icebp
into
add
mov
xchg
add
xchg
enter
add
jb
xchg
pop
add
add
in
mov
add
and
imul
cld
add
addl
imul
xor
xlat
xchg
mov
push
add
push
xchg
lahf
push
mov
cmp
js
or
js
iret
fisubs
push
pop
mov
js
iret
add
jmp
fcom
out
stos
xorl
iret
add
pop
add
outsb
and
mov
add
add
add
iret
add
shlb
push
add
adc
or
jns
mov
add
push
add
cltd
push
add
mov
adc
push
add
iret
add
mov
repz
mov
sti
cs
fwait
push
add
insl
add
push
fimuls
add
push
inc
insl
cmp
jo
push
push
js
iret
iret
js
iret
test
inc
sbb
push
int3
clc
add
push
push
add
mov
pop
add
repz
cmp
add
clc
fdivp
ret
pop
insb
pop
jg
push
leave
shl
out
jo
sar
repz
mov
push
cltd
fs
js
imul
js
cmpsl
mov
repz
cld
mov
fwait
mov
push
sar
add
dec
js
iret
test
enter
xchg
mov
push
jmp
imul
add
arpl
outsb
les
scas
bound
add
in
xchg
pop
insl
imul
push
leave
pop
pop
les
daa
cld
add
add
jno
pop
cwtl
or
add
inc
rcll
xor
add
rcll
sahf
push
add
iret
lds
cmpsb
pusha
js
iret
add
cmpsl
clc
fildll
add
mov
pop
push
add
iret
add
leave
inc
stc
pop
movsl
pop
std
inc
enter
inc
les
mov
add
adcl
push
add
push
add
iret
cmpsl
insb
fiaddl
pop
mov
jns
push
mov
shlb
in
mov
cli
jns
sub
adc
add
sub
cmp
dec
and
add
xor
add
jns
sub
add
add
popa
scas
mov
and
cmpl
iret
inc
js
nop
leave
std
xchg
into
add
rclb
pushf
repz
ja
iret
push
lods
mov
int3
aas
out
fildl
js
push
add
mov
inc
repz
jl
pop
mov
iret
add
xchg
xchg
xor
rclb
fs
adc
mov
imul
dec
cmc
filds
push
fsin
ja
pop
bound
imul
sti
sub
popf
ja
lret
pop
insl
imul
popa
imul
ret
enter
dec
cmc
test
jbe
iret
xor
mov
iret
add
nop
sti
jnp
mov
js
iret
add
sub
add
iret
add
lea
js
iret
adc
add
xchg
inc
scas
iret
sub
push
add
push
cli
mov
les
ljmp
dec
push
incl
and
add
push
inc
js
testl
js
xchg
mov
js
iret
add
addl
js
rolb
mov
iret
add
jbe
and
add
sub
push
pop
leave
insb
je
test
xor
or
push
add
iret
add
loopne
outsl
cmp
sub
push
add
iret
add
dec
cs
js
iret
add
rolb
pop
push
sarb
xchg
iret
loope
push
das
aad
iret
or
std
cmp
sbb
add
mov
add
cli
add
insl
push
jmp
sti
add
repz
cmp
jns
add
or
pop
or
mov
add
repz
leave
pop
add
push
nop
or
mov
adc
imul
add
pop
int
push
xchg
mov
jle
add
mov
pop
rorb
add
lock
push
leave
pop
movsl
roll
xor
add
je
pusha
push
call
js
xlat
lahf
jns
mov
lahf
jns
iret
add
iret
add
loop
out
movl
js
pop
aaa
pushf
cmc
or
add
xchg
mov
outsb
push
std
js
push
push
js
iret
mov
test
ja
iret
mov
imul
jne
iret
xor
insl
jecxz
add
aad
shlb
sahf
adc
in
movl
clc
pop
adc
repnz
jnp
repz
pop
dec
rcll
pushf
cmc
jecxz
sti
push
enter
pop
pop
pushf
push
add
push
out
je
pop
mov
jp
pop
rcrb
addl
js
iret
adc
pop
iret
add
add
pusha
xor
add
push
js,pn
iret
xor
push
lea
js
fiadds
sub
mov
add
ffreep
xchg
ret
imul
add
push
mov
js
mov
xchg
mov
mov
add
add
pop
in
loope
iret
add
nop
jmp
jns
cmpsl
js
iret
xchg
mov
mov
xchg
or
mov
xorl
add
push
or
iret
xchg
xchg
iret
add
pop
adc
xchg
iret
add
lret
or
push
pop
aaa
ljmp
jo
fimuls
jns
das
in
subl
or
adc
or
imul
mov
add
iret
sahf
jp
filds
add
xchg
sahf
or
mov
add
test
iret
adc
push
iret
add
xchg
add
lock
mov
push
fwait
popl
hlt
sub
movl
jl
leave
xchg
inc
or
mov
or
imul
js
mov
ja
iret
test
shrb
add
loopne
js
ret
imul
add
mov
js
iret
andl
jb
repz
out
out
add
cmp
push
idivl
pop
push
test
cwtl
adc
rolb
js
and
add
add
dec
add
pop
cmp
fistps
outsb
mov
mov
mov
ret
ror
add
cmp
js
es
jns
cmp
jo
iret
push
insl
cmc
and
je
mov
add
test
imul
add
push
lret
iret
sub
push
bnd
xlat
sbbl
add
push
fsincos
add
out
add
ror
iret
cmc
fs
ja
iret
push
add
sub
js
test
ja
iret
add
repz
xor
in
mov
add
int3
mov
in
mov
add
mov
sti
sti
cs
xlat
in
xchg
pop
popa
fwait
into
add
pop
mov
lcall
jl
lahf
lret
aam
imul
push
notl
clc
imul
in
fs
out
clc
push
add
js
cmp
lahf
pop
add
push
imul
dec
sarb
cmp
iret
add
pushf
iret
add
iret
add
sbb
push
add
push
add
iret
js
fstl
add
push
add
inc
pop
jmp
push
ljmpw
lods
sbb
js
iret
add
push
add
iret
fs
stos
iret
add
xor
jnp
push
add
push
add
add
push
add
pushf
iret
add
cmp
shrb
js
iret
jns
lods
iret
push
js
and
add
mov
add
xor
mov
push
je
les
js
inc
jbe
push
add
iret
add
xor
add
push
push
js
xor
push
add
and
push
add
push
add
iret
cmp
mov
or
js
es
js
dec
add
add
push
dec
js
iret
add
cmp
js
iret
add
push
inc
ljmp
add
and
fildll
pop
mov
push
gs
iret
add
cmp
js
iret
add
push
add
xor
enter
js
and
lock
add
iret
insb
rcl
add
push
add
mov
iret
outsb
js
iret
insl
js
pop
dec
mov
iret
add
iret
dec
js
iret
dec
loop
iret
add
push
data16
iret
add
iret
add
lods
xor
dec
js
iret
xor
iret
add
iret
inc
loope
inc
jnp
mov
iret
add
mov
cmp
js
iret
add
sbb
js
sbb
push
add
push
cmp
push
add
iret
push
ret
add
mov
ss
push
add
push
add
push
js
mov
add
add
js
and
dec
leave
push
add
mov
add
and
jmp
inc
push
js
adc
iret
add
push
imul
iret
add
ror
add
fmulp
add
iret
jb
mov
iret
add
cmp
into
in
ja
add
iret
sbb
dec
mov
mov
push
push
add
push
add
loope
lods
js
iret
jae
idiv
add
sbb
js
gs
push
add
push
add
push
add
push
add
jae
js
rolb
jecxz
push
add
and
pop
adc
iret
add
shrb
js
xor
js
in
js
iret
add
push
adc
iret
add
rolb
js
rolb
js
push
xchg
in
iret
cmp
inc
js
ja
js
iret
jb
add
add
push
add
add
add
add
add
add
add
loop
cmp
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
add
mov
add
add
add
add
aad
add
add
aaa
add
add
add
add
add
add
add
add
add
dec
add
add
add
repz
add
roll
add
add
add
add
add
add
add
add
addl
push
add
js
add
add
push
add
add
add
add
add
add
add
add
add
add
mov
add
or
lcall
add
add
jge
add
add
add
add
add
add
add
add
lea
add
add
push
add
add
add
add
add
add
push
add
inc
imul
dec
add
push
add
ja
add
add
xor
aaa
add
add
ss
add
add
add
ja
add
cmp
add
add
add
cmp
jp
dec
add
add
jns
dec
add
gs
add
add
je
dec
push
dec
add
add
aaa
outsl
add
add
add
dec
add
add
add
add
popa
add
push
jp
add
add
add
pop
ja
pop
arpl
add
dec
add
jo
push
add
add
dec
add
pop
insb
add
add
xor
arpl
dec
add
add
imul
add
add
add
add
popa
add
add
add
add
inc
add
add
push
add
add
add
add
jbe
add
add
xor
add
push
inc
inc
add
dec
js
add
popa
add
dec
xor
add
add
xor
add
push
add
xor
add
imul
add
push
add
inc
push
add
jbe
jbe
data16
add
add
add
inc
add
je
add
add
add
push
js
add
add
add
push
add
dec
addr16
jb
dec
add
add
aaa
add
xor
add
add
push
add
add
add
xor
add
add
bound
imul
add
add
add
jo
cmp
push
cmp
jo
dec
add
add
add
add
xor
xor
add
add
xor
add
add
cmp
outsb
dec
add
push
add
inc
inc
add
inc
add
add
add
add
cmp
push
jno
add
pop
inc
add
jno
pushw
add
dec
add
add
add
arpl
cmp
imul
imul
jae
add
add
add
add
dec
add
add
add
add
xor
insb
add
inc
add
jp
inc
add
push
add
add
push
inc
push
dec
add
dec
add
push
push
data16
add
popa
add
add
dec
push
dec
jb
dec
add
inc
gs
add
dec
add
add
imul
add
jb
add
add
je
add
inc
push
add
add
add
cmp
add
add
dec
add
add
add
imul
xor
xor
dec
add
js
add
xor
add
add
add
add
inc
cmp
popa
add
add
dec
add
add
push
add
push
add
dec
inc
add
xor
dec
jns
xor
inc
dec
add
add
add
xor
xor
inc
add
add
aaa
inc
xor
add
add
xor
add
add
xor
dec
dec
add
add
push
add
add
bound
add
add
dec
push
inc
push
dec
cs
dec
dec
add
add
add
add
jnp
add
add
add
jge
add
add
add
add
add
stos
add
add
add
add
add
add
loop
add
into
xor
add
add
add
and
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
inc
add
enter
add
add
add
add
add
jg
add
mov
adc
add
add
jb
gs
xor
cs
dec
dec
add
insl
sub
xchg
add
push
in
add
push
add
add
add
add
lea
loope
add
add
add
clc
pop
push
add
jno
mov
add
add
add
faddl
add
add
sbb
add
icebp
add
dec
jp
add
in
add
add
mov
add
add
add
add
lcall
or
add
add
popl
push
mov
add
cmpsb
add
push
scas
bound
add
cmp
add
add
add
pusha
mov
add
add
aam
add
add
add
add
stos
popl
insb
add
sub
adc
add
add
xchg
add
add
add
outsb
xor
xor
mov
add
dec
add
jae
add
add
add
add
add
add
inc
add
add
testb
add
add
mov
std
or
mov
fmuls
add
add
dec
add
add
je,pn
sub
cmp
add
add
ja
add
gs
imul
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
jbe
add
add
outsb
add
add
pop
add
add
add
jo
dec
add
add
add
xor
add
add
add
xor
jne
add
add
add
add
add
inc
jbe
add
add
add
add
add
add
add
add
add
jbe
add
add
xor
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jb
add
add
add
add
aaa
dec
push
add
add
add
add
add
add
add
add
push
add
add
jns
add
add
add
add
add
add
add
add
add
dec
add
add
push
gs
imul
inc
pop
add
add
add
cmp
jp
add
add
sbb
aam
inc
sarb
in
aad
shll
inc
add
inc
pop
xor
jbe
add
add
add
insl
pop
dec
add
imul
je
add
add
add
add
inc
add
add
add
outsl
add
add
insl
add
add
add
jno
jae
add
inc
add
add
xor
dec
add
add
jae
add
cmp
outsl
add
inc
add
xor
add
add
dec
add
add
add
add
push
bound
add
add
add
add
add
push
add
dec
push
add
add
add
add
xor
xor
inc
pop
add
add
add
jb
dec
add
add
ja
push
jbe
addr16
add
add
inc
add
add
add
add
addr16
arpl
add
inc
add
add
jb
add
add
gs
add
add
push
add
add
add
add
arpl
add
pop
add
add
add
jp
add
add
add
add
inc
ja
add
add
jno
jo
add
add
aaa
dec
add
inc
dec
add
add
add
jo
add
add
xor
xor
add
add
add
add
jo
push
add
push
inc
add
dec
add
push
add
add
xor
bound
dec
add
add
add
push
fs
push
js
jbe
xor
inc
push
add
add
add
aaa
ja
add
add
add
xor
add
jne
add
add
add
add
add
popa
add
insb
add
bound
je
add
add
add
add
add
add
add
add
push
add
add
xor
add
push
add
add
jae
ja
dec
dec
dec
add
add
cmp
xor
add
add
outsb
dec
add
add
add
xor
add
push
add
add
push
gs
add
jp
imul
push
dec
addr16
add
add
add
add
dec
add
js
add
add
add
xor
add
xor
add
add
add
add
xor
xor
dec
add
cmp
xor
jbe
arpl
add
add
jp
add
add
add
jbe
add
add
jns
add
inc
add
add
push
push
add
imul
cmp
add
add
add
dec
add
add
add
push
dec
add
jae
add
addr16
arpl
imul
inc
js
push
push
add
outsl
add
dec
xor
add
arpl
aaa
add
xor
jne
ja
ja
popa
add
add
add
add
add
push
xor
jp
dec
dec
cmp
insb
add
add
add
add
push
add
add
jb
jb
push
add
add
bound
push
add
add
add
add
bound
add
add
insl
outsl
popa
add
add
jp
push
add
jbe
add
popa
add
xor
add
addr16
add
add
push
add
add
dec
xor
imul
add
outsb
add
pop
jno
add
add
push
add
push
add
add
add
xor
jp
add
arpl
add
add
add
inc
add
push
arpl
add
add
push
add
jne
add
jb
add
add
add
push
push
inc
add
add
jne
js
add
add
add
push
popa
outsb
add
add
bound
pop
add
push
add
add
pop
push
add
insl
add
inc
imul
add
pop
add
push
add
je
jns
popa
add
add
dec
jae
add
add
push
push
cmp
imul
add
add
dec
xor
xor
