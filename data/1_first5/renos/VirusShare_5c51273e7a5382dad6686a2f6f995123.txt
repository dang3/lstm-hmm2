and
lods
pusha
inc
add
orl
mov
xor
and
nop
inc
dec
add
cld
pusha
and
lock
in
call
enter
aam
enter
int3
enter
or
sarb
sbb
push
sbb
adc
sub
fs
inc
sub
fs
inc
push
mov
sbb
sbb
insb
push
sbb
fs
pop
sbb
pop
push
push
fs
inc
push
dec
dec
inc
nop
inc
push
sbb
cmp
fstpt
xor
mov
push
push
call
ret
lea
mov
mov
out
mov
scas
mov
mov
ret
nop
push
push
push
push
add
dec
std
mov
mov
mov
in
mov
cmpl
je
movb
fisttpl
cld
dec
test
jb
inc
mov
add
jae
mov
cs
je
xor
mov
cmp
je
xor
mov
adc
jg
and
mov
and
xor
sbb
push
lock
mov
mov
adc
and
mov
or
ret
imul
pop
jne
es
pop
pop
pop
pop
mov
mov
inc
cld
mov
fstpt
xlat
add
or
or
or
xor
pop
pop
ret
out
daa
in
mov
xchg
hlt
cmpl
cmp
or
addl
push
lahf
mov
testb
add
add
mov
push
lock
jmp
or
mov
dec
push
jmp
in
punpcklwd
sar
decl
ss
cmp
jbe
mov
lea
or
decl
out
add
addr16
lea
int
push
mov
mov
shll
repnz
jne
lea
xchg
jp
sub
dec
mov
movb
int
ret
mov
sub
jae
ret
into
insl
out
sub
push
push
daa
jo
fs
mov
incl
clc
xchg
xchg
or
mov
in
xor
and
xchg
call
aas
jno
pushl
mov
mov
sbb
add
jg
and
or
mov
fistpll
cld
mov
jb
or
lcall
cmp
mov
mov
stos
add
mov
xchg
jge
jp
cmpsl
jmp
stos
jns
sub
testl
xlat
adc
jmp
outsb
push
sub
lock
out
icebp
xchg
jnp
fisubrl
std
insb
js
mov
cmp
jge
sub
lea
outsb
fistpll
or
mov
incb
lea
add
out
lcall
fisttpl
jl
cwtl
mov
mov
mov
or
mov
std
fbld
lea
mov
and
mov
inc
mov
loope
movsl
fstpl
leave
lea
pop
decb
lea
mov
pop
fdivr
jg
mov
xchg
inc
pop
pop
sbb
mov
mov
in
jg
imul
int3
and
mov
out
push
pop
inc
dec
je
sbb
mov
and
sbb
and
lods
in
jle
mov
mov
add
sbb
xchg
out
mov
loope
xor
lret
or
into
mov
dec
jge
icebp
mov
test
jae
xor
ficomps
add
lret
flds
loope
mov
arpl
aam
shlb
aam
fistpll
fcoms
test
jb
mov
mov
pop
testb
and
or
pop
push
or
jmp
adc
adc
sbb
fisttps
mov
negl
or
shlb
mov
data16
sti
outsl
fdivr
stc
sub
mov
push
and
mov
lret
xchg
push
push
mov
testb
fbstp
mov
sub
je
mov
into
dec
xchg
arpl
mov
sbb
mov
test
mov
mov
pop
sub
aaa
dec
in
rorl
xchg
lret
mov
mov
dec
movsb
sbb
repnz
decl
repz
lea
ja
cmpl
aas
sbb
int3
fwait
dec
int3
add
mov
add
je
sub
aam
in
mov
lret
loopne
jle
call
jns
outsb
jmp
jmp
cwtl
lock
jmp
push
loope
lea
inc
mov
lods
xchg
pop
xor
or
enter
dec
jmp
movsb
mov
xlat
xor
or
adc
add
xchg
cs
add
xchg
or
jno
sbb
rorl
mov
shlb
mov
push
fdivrp
add
pop
test
dec
pop
pop
mov
mov
xchg
sbb
mov
les
roll
test
aaa
mov
pushf
insl
in
leave
or
les
std
jnp
sub
fwait
daa
ret
xchg
fs
jg
add
fiaddl
mov
out
xchg
jmp
mov
sbb
inc
jnp
mov
push
pop
push
mov
push
xchg
and
mov
jg
cmpsb
pushl
mov
jne
jns
jl
arpl
inc
sti
lods
outsl
cld
xchg
mov
dec
or
enter
incl
xchg
add
adc
mov
or
fidivrs
stc
mov
mov
push
add
incb
icebp
push
pop
mov
jo
mov
inc
dec
jne
or
das
in
scas
or
aad
icebp
mov
mov
mov
aaa
sbb
cs
mov
or
mov
icebp
inc
loop
mov
adc
xchg
fwait
push
mov
hlt
pop
fdivr
xor
lea
and
scas
dec
adc
movsb
loope
xchg
aaa
lea
push
push
mov
mov
out
sarl
jae
nop
or
and
aas
in
hlt
test
js
xor
movsl
ja
mov
or
cli
push
xlat
jmp
outsl
mov
mov
cwtl
adc
sub
pop
test
inc
sub
push
ljmp
or
mov
add
cltd
xchg
pop
or
js
loope
jb
sub
cmc
outsl
lock
das
cmp
jp
xor
jmp
mov
stos
adc
jg
mov
inc
xchg
adc
inc
hlt
lock
mov
jg
mov
or
push
cmovb
mov
mov
sub
dec
or
scas
dec
xor
jle
inc
js
mov
int
mov
cmp
es
mov
mov
cli
movsb
insb
jl
jg
cs
inc
adc
cmp
jae
mov
or
mov
or
adc
jmp
xchg
cmp
jp
push
jecxz
and
adc
cmc
or
ret
xchg
xor
negb
rorl
jecxz
das
std
fisttpl
adcb
shlb
mov
sbb
enter
pop
out
iret
rolb
jmp
aam
add
cmp
filds
insb
out
lea
add
cld
lcall
hlt
jg
inc
mov
in
lock
dec
dec
into
push
hlt
clc
cld
add
cmp
daa
and
or
and
mov
mov
call
int
inc
lcall
add
add
rorb
in
fucomi
fsub
inc
popa
jo
jl
mov
cmpsb
cmp
aam
mov
xor
ror
addr16
int3
and
jb
aam
fdivrs
sub
add
adc
mov
sbb
add
jp
ds
and
push
push
cmp
enter
movsb
add
movsl
mov
movsb
test
push
adc
sub
mov
add
push
xor
or
in
les
mov
loopne
rcrb
xchg
into
xchg
cwtl
rolb
push
jg
dec
pushf
in
orl
mov
test
in
dec
sbb
fildll
incl
mov
adc
jge
addb
mov
add
js
orb
jp
out
xchg
js
mov
adc
in
shrb
dec
jo
jbe
pop
or
inc
stos
add
and
lcall
xlat
adc
lcall
insb
pushl
lea
xchg
inc
lcall
lahf
xchg
outsb
movsb
cmpsb
push
lods
jb
push
les
pop
push
ds
add
fisttpl
dec
mov
sbb
incl
or
cmp
pop
pop
pop
xchg
enter
jo
je
mov
cmp
aad
rorb
rorb
ret
sub
pushf
pushf
popf
dec
sub
xor
enter
cmp
add
xchg
mov
mov
jecxz
fiadds
pushf
sbb
xor
mov
or
sbb
push
adc
rorb
cmp
in
stc
sbb
lcall
and
or
sbb
test
popa
push
adc
adc
shrl
lcall
stos
jne
mov
adc
add
add
add
scas
jnp
or
xor
xor
aaa
xor
cmp
pop
fwait
sbb
pushl
xor
add
outsb
in
mov
xor
or
in
mov
xor
adc
xor
inc
xor
lds
rcll
xor
xor
adc
xor
cmp
mov
aaa
or
push
aaa
jmp
in
add
pop
ss
sub
and
cmp
fldenv
pop
insb
insb
insb
add
aaa
xchg
in
mov
popa
xchg
mov
xor
sbb
cmp
test
inc
xor
enter
mov
xor
jl
movsl
jp
pop
sbb
enter
add
adcl
jns
fcomps
pop
pop
mov
movsb
push
loop
outsb
orb
loopne
insb
push
inc
loopne
faddl
fdivl
rol
outsl
cwtl
pop
and
adcl
mov
xchg
fcompl
push
push
jb
and
ror
push
pusha
test
mov
cmpsl
inc
pop
add
cmpsl
arpl
dec
xchg
enter
adc
mov
pushf
and
jb
or
les
mov
cmp
loopne
adc
inc
es
out
inc
sub
and
and
push
or
inc
and
ret
iret
mov
adc
lcall
push
xor
and
in
adc
cld
mov
mov
in
add
pop
pop
test
jb
addb
daa
adc
and
mov
adc
or
jb
cltd
lods
repnz
jl
lea
and
mov
add
xor
int3
insl
add
cld
add
rclb
andb
jl
adc
sub
fnstenv
ret
add
mov
sub
popf
sub
push
in
cmp
pinsrw
sete
int3
enter
cmp
je
and
fs
inc
dec
inc
or
rolb
addb
dec
or
pop
shrb
push
and
cs
and
cmp
xchg
cwtl
in
jmp
pushf
in
mov
in
add
adc
sbb
jb
int
repz
adc
enter
incl
inc
push
in
xor
inc
cmp
movsb
inc
addr16
xor
mov
cmp
cmp
fisttpll
xor
in
xor
inc
movsl
adc
roll
test
adc
rcl
mov
nop
pop
inc
pop
mov
xor
add
scas
xor
xor
out
cli
pop
sbb
cmp
cmp
add
xor
xor
sub
add
filds
hlt
mov
xor
lea
pop
cmp
xor
dec
dec
movsl
test
pop
add
xor
or
push
mov
rep
pop
pop
movl
adc
cmpl
fldt
std
sbb
mov
mov
test
rorl
xor
xor
mov
fbstp
repz
push
xor
jae
imul
jge
add
test
insl
das
rcr
add
call
rorb
in
fisttps
mov
sub
shr
test
jle
adc
fchs
add
jmp
in
mov
and
cmp
sbb
out
ficompl
adc
loop
movzwl
add
bswap
std
jbe
adc
subl
aaa
decl
jne
cmp
outsb
fbld
sbb
add
push
jne
lcall
jmp
clc
mov
js
je
orl
and
fnstsw
adc
xorb
jmp
add
outsb
xlat
lea
or
andb
sub
or
push
add
repz
add
pushl
mov
lods
or
stos
leave
mov
clc
mov
in
xor
hlt
adcb
in
daa
sti
push
cmp
or
push
push
sub
lcall
lds
cmpsl
les
daa
push
sti
jne
out
adc
test
and
cmp
mov
scas
insb
adc
jnp
pop
mov
test
or
call
test
es
inc
sub
xor
cmp
std
test
mov
sbb
xor
test
pop
or
xchg
outsb
and
or
data16
sbb
inc
cld
mov
adc
jnp
mov
sbb
cmp
mov
dec
lock
fwait
or
pop
cmpl
inc
ffree
popf
nop
or
xor
adc
popa
xchg
insl
cmp
enter
sub
xorl
loopne
mov
insb
in
int3
mov
fsubrl
adc
aam
jbe
fsubr
cmp
jae
das
dec
testb
sbb
cmp
pop
dec
pop
xor
lea
les
push
orl
fwait
pop
out
faddl
mov
adcl
or
outsl
cmpsl
test
out
inc
push
inc
mov
inc
xchg
mov
cli
dec
outsl
and
or
insb
enter
ret
mov
or
clc
in
and
push
decb
jne
ret
push
mov
sub
adc
push
sbb
mov
xchg
insl
fs
or
int
jg
je
inc
add
movl
subb
ss
pop
adc
pop
shlb
pop
jmp
movsb
ret
lret
int
xchg
xor
divl
test
jne
inc
std
mov
push
movlps
insl
clc
mov
mov
xchg
clc
outsb
daa
negl
or
cmp
inc
push
adc
cmp
cmp
jb
aaa
or
stos
xor
mov
or
lea
jp
add
cmp
dec
outsb
pop
push
or
sub
iret
cmp
inc
das
fs
fildl
insb
sub
adc
fadds
mov
jmp
sub
and
xor
or
fdivs
out
dec
shl
lcall
or
inc
imul
pop
add
jg
icebp
cmpsl
mov
cmp
inc
rol
adc
test
popa
clc
or
out
jb
arpl
fs
ret
decl
jae
pop
outsl
popa
fs
imul
dec
pushl
outsb
push
push
insb
outsl
jae
dec
popa
outsb
fs
outsl
jg
jmp
push
popa
imul
addr16
bound
arpl
insl
popa
fstpt
imul
and
jb
jne
insb
inc
insb
aaa
arpl
movq
pop
stc
in
inc
jns
add
insb
dec
outsl
jbe
dec
gs
outsl
xchg
arpl
xor
inc
mov
dec
cmp
adc
call
xchg
rcr
fcomp
add
sbb
adc
jg
fdivrs
add
ljmp
pop
push
pop
hlt
inc
pop
add
mov
inc
leave
mov
inc
push
gs
imul
in
sub
pop
js
outsb
adc
add
adc
lods
mov
sub
or
loop
inc
or
jns
dec
leave
inc
jl
in
or
inc
les
fdivs
mov
inc
mov
in
dec
inc
add
fmuls
ds
lock
add
add
mov
nop
scas
in
inc
mov
add
pop
nop
pop
inc
mov
scas
pop
nop
pop
push
mov
xor
movsb
jnp
mov
pop
les
add
sbb
push
dec
cmp
ret
hlt
pop
mov
mov
enter
in
lea
lock
xchg
pushf
and
mov
and
pop
or
dec
xchg
push
xor
in
and
inc
inc
movsb
arpl
in
jne
cltd
xchg
mov
loopne
test
rcl
inc
int
test
in
in
notb
adc
paddusw
ss
lret
jae
adc
in
popa
pop
js
jne
jae
cld
push
and
mov
add
jnp
xchg
in
in
jae
jl
push
call
dec
jo
loop
jo
and
adc
cmpl
mov
mov
push
pushf
add
xor
aad
in
and
fistl
mov
ss
cmp
push
insb
xor
sbb
add
lea
push
dec
inc
or
imul
imulb
push
add
and
sbb
xor
add
mov
add
cmp
sbb
jecxz
pop
aas
add
cmp
adc
add
jge
subb
or
inc
or
dec
jg
jecxz
movsb
xchg
lea
std
daa
jmp
add
jb
outsb
add
xor
or
add
jle
adc
sbb
jp
imul
mov
dec
insl
jb
fs
jo
jns
ja
outsb
add
jl,pn
mov
imul
je
adc
hlt
add
pop
xchg
sbb
nop
cld
pop
pop
push
mov
dec
push
xchg
sub
jmp
ljmp
adc
pop
aaa
into
xchg
fists
add
rolb
or
dec
cmp
push
sub
or
ja
mov
cld
sahf
xchg
sti
xchg
adc
cmpb
push
dec
inc
int3
cmp
mov
daa
adc
xchg
jne
jne
jmp
popa
data16
sub
xchg
test
pop
jp
clc
mov
jge
cld
cld
jbe
pusha
mov
mov
sub
push
cmpb
cmp
and
imul
push
cmp
pop
movsl
mov
xor
adcl
or
subb
mov
adc
push
push
fcoml
loopne
add
push
test
add
popa
in
stos
in
popa
mov
cmp
sub
dec
call
mov
jae
ss
cmp
xchg
out
mov
scas
push
jb
add
add
xor
call
leave
add
inc
ja
push
loopne
scas
sti
lds
mov
cmp
add
push
and
add
rorb
pop
icebp
movsb
mov
lea
mov
subb
jecxz
sarb
rolb
iret
scas
adc
push
leave
add
aas
pop
jge
add
push
cs
sub
xchg
add
pop
mov
adcb
push
add
stos
pop
arpl
fsubrs
sub
or
rcrb
pop
jo
out
inc
and
in
add
xchg
fmull
inc
je
das
mov
out
test
xchg
xor
jne
inc
bound
je
add
and
lods
sbb
arpl
inc
adc
cs
dec
or
push
mov
insb
inc
xor
outsb
enter
xchg
pop
das
rolb
xchg
add
out
aaa
sti
pop
testb
sub
adc
push
cmp
divps
mov
add
pop
mov
sbb
inc
fsubrs
in
aas
icebp
inc
add
lret
push
and
adc
sbb
cmpsl
fs
xchg
sub
dec
inc
adc
pushf
cmpxchg
inc
gs
test
inc
ss
pop
enter
pop
and
pop
push
dec
sbb
rolb
addr16
mov
mov
cwtl
and
cmp
data16
test
movsl
xchg
rclb
and
pop
and
pop
fxam
adc
cmpsl
sub
je
pop
bts
pop
pusha
iret
or
add
enter
out
mov
mov
nop
push
test
pop
xchg
mov
gs
xchg
xchg
das
addr16
mov
fwait
pop
push
mov
daa
and
daa
add
add
fcomp
add
or
pushf
int
addr16
movups
add
ret
inc
sbb
filds
shl
add
leave
ljmp
test
pop
clc
add
jae
dec
mov
push
add
incl
dec
pop
dec
inc
dec
dec
dec
push
pop
inc
inc
fcomi
out
outsl
pop
push
push
add
dec
add
push
inc
dec
adc
or
sarl
push
call
pop
cmc
add
lods
outsb
divl
add
wrmsr
xlat
mov
not
mov
or
loope
push
and
pand
adc
pop
push
jae
mov
push
lods
jne
pop
push
or
sbb
sti
notl
mov
add
sbb
or
shrl
pop
pop
testl
sbb
xchg
scas
shll
push
and
mov
imul
pop
iret
in
push
repnz
add
daa
sub
sub
and
add
sti
dec
jbe
aas
inc
rclb
aaa
adc
lea
aaa
cmp
add
orb
or
cs
pushw
dec
and
jnp
and
fdivrl
in
testb
sbb
inc
dec
mov
pusha
out
outsl
je
add
lret
xchg
sub
xchg
or
adc
outsl
fdivs
outsl
xor
and
or
stc
fisttps
push
add
push
aas
dec
fcomp
mov
push
call
mov
cmpsl
ds
jo
ror
jg
or
cmc
mov
addr16
sti
es
std
sub
ja
mov
adc
sbb
or
daa
jnp
cli
cmp
inc
sbb
inc
leave
mov
cmp
mov
mov
sbbb
lods
sub
sbb
pop
sub
or
mov
lock
sub
es
xor
inc
and
xchg
xor
pusha
sub
xor
insb
sti
and
cld
or
or
dec
in
or
or
sbb
or
sarb
rorb
lods
lret
movsb
lret
or
mov
sub
mov
add
scas
inc
into
std
push
sbb
lods
sub
outsb
mov
or
orl
push
xor
sbb
ret
inc
sub
fildl
and
adc
cmovge
lret
xchg
push
mov
mov
xlat
jae
inc
jno
inc
test
je
arpl
in
xchg
cmovg
aam
add
mov
clc
stos
scas
inc
repz
scas
fildl
iret
add
xor
push
das
inc
aas
mov
daa
xor
mov
add
movsb
mov
sub
add
pop
repz
sbb
jge
mov
iret
sub
adc
test
jne
outsb
fwait
mov
push
jle
and
push
lods
and
pusha
orl
jle
xchg
movsb
out
add
into
insl
rcr
adc
jne
jecxz
push
mov
or
shrl
add
mulb
loopne
mov
cmp
movsb
loopne
cmpl
leave
mov
and
cmpl
fucomp
adc
add
jl
in
test
das
jge
xchg
es
xor
mov
or
cmp
popa
lret
jne
rcll
popl
es
cltd
scas
add
leave
sub
pop
lret
jne
dec
scas
std
iret
loop
jns
jne
mov
or
add
scas
lea
pop
int
subb
or
xchg
push
jp
sub
jbe
call
and
and
fldl
inc
sub
adc
mov
cmpsl
push
sbb
imul
sub
iret
mov
arpl
push
fldl
lcall
shrb
pop
dec
jbe
notl
pop
adc
mov
adc
mov
into
scas
fsts
jbe
mov
and
enter
aas
pushf
mov
cltd
xor
jle
fstpl
stc
data16
pop
add
pop
push
add
pop
adc
arpl
lods
fnsave
cmp
shll
das
insb
adc
jg
ss
lret
into
lret
mov
pop
xchg
or
out
lcall
jo
pop
arpl
ss
out
ret
fadd
push
inc
adc
sub
idivb
int3
pop
dec
jge
in
pop
sti
call
cmp
or
fisubs
add
clc
sbb
or
push
dec
lods
bound
cwtl
aam
pushf
add
ffree
roll
cpuid
sub
lds
rcrl
in
cwtl
jnp
push
mov
inc
xlat
pop
add
xchg
or
lea
fcomps
addr16
and
nop
and
add
hlt
ja
gs
pushf
arpl
add
and
mov
mov
jmp
jne
lods
aaa
int3
push
or
sbb
cld
mov
lea
faddl
iret
push
data16
bound
int
daa
cmp
or
out
imul
std
neg
loope
dec
ffree
mov
inc
es
inc
mov
jge
lahf
sahf
addl
cmpsb
in
lock
repz
js
cmpsb
mov
ret
jb
gs
xor
popf
imul
fdivrs
add
aas
je
mov
add
mov
gs
out
sbb
jmp
lock
insl
add
icebp
pusha
pop
mov
out
mov
out
into
cmp
pop
adc
lret
mov
popl
aas
sub
mov
insl
xor
mov
icebp
sbb
fucom
clc
inc
push
data16
cmp
dec
es
jmp
iret
dec
aad
sub
out
jno
loop
xor
test
pop
lock
jnp
push
movsb
pop
imul
stc
pop
cmp
mov
sbb
sbb
je
call
xchg
mov
push
lds
jmp
jo
out
loopne
cmovnp
push
lea
jne
mov
and
sub
jmp
mull
shlb
mov
iret
xor
dec
add
lret
int
cld
call
je
cltd
movsb
cmpsl
cmp
adc
push
data16
add
loopne
sti
jae
and
jg
int
test
fwait
adc
push
loopne
jae
ljmp
mov
imull
pcmpgtd
push
push
imul
dec
clc
cmpb
xor
movsb
ljmp
pop
rorl
out
frstor
mov
push
pop
push
sub
aaa
ja
cwtl
push
xor
movsl
sbbl
add
pusha
add
add
lret
imul
push
orl
pop
aaa
cmp
popf
mov
imul
ja
sarb
and
add
jmp
xor
jl
test
xchg
sub
jmp
imul
xchg
dec
ja
xorl
sub
xor
fcomi
testl
mov
jo
mov
jno
mov
fldl
and
mov
pusha
call
jno
mov
imul
scas
loope
sub
and
xlat
lock
sub
or
pusha
cs
pusha
movsb
lock
scas
add
in
and
mov
mov
mov
pop
push
mov
adc
subl
sub
xchg
fmuls
mov
mov
clc
jno
dec
je
out
in
in
lcall
add
or
imul
in
packuswb
xlat
mov
push
sbb
lods
fstl
jo
lock
cltd
mov
inc
sub
ret
fs
sti
leave
or
sub
imul
jmp
and
roll
es
lret
into
mov
jno
mov
popl
or
aas
push
pop
test
stos
test
leave
je
pop
cli
dec
cmpsl
or
fwait
loope
pushf
ret
inc
jno
xchg
cmc
inc
xor
popa
jecxz
int3
xor
ret
sbb
dec
sbb
mov
mov
es
cs
jae
sbb
pop
inc
andl
mov
inc
adc
in
insl
ret
sub
lods
popa
inc
fnsave
fildl
xor
ficompl
jne
add
stc
bound
in
fidivl
rclb
lret
cmp
cmp
daa
push
fistpl
add
ds
test
adc
iret
xorb
sbb
fistl
fidivl
adc
mov
fsts
jp
dec
cmpsb
push
inc
xchg
jae
xchg
xchg
dec
xchg
add
push
cmpl
or
into
xlat
cmpsb
sti
aas
xor
dec
xchg
or
xor
push
call
ja
mov
mov
jge
push
sbb
jle
in
jl
or
mov
test
data16
mov
cmp
mov
fistpl
cmp
and
pop
mov
shlb
jne
jge
fsubrp
lods
and
jbe
ja
sub
in
cmp
sub
mov
mov
filds
jle
std
and
fimuls
lods
push
lds
mov
add
stos
ljmp
filds
cmp
cmp
movsl
sbb
and
fnstcw
shrb
or
xchg
push
imul
adc
pop
mov
cmp
fnsave
add
add
pop
in
fstps
and
sbb
lds
jmp
aas
mov
mov
and
xchg
and
mov
cmp
and
adc
sbb
push
pusha
int3
sub
scas
bsf
jge
xchg
scas
add
xchg
sub
jle
and
popa
inc
xchg
sbb
pop
out
pop
cmc
lods
loope
shlb
push
lahf
fcomp
mov
add
pop
xchg
pop
mov
cmp
fwait
mov
test
lahf
test
push
or
pusha
mov
gs
fcoml
ret
sub
jp
lds
inc
js
shlb
cmpsl
lea
pop
sub
jb
adc
or
xchg
test
sub
xor
lods
flds
scas
pusha
jo
lods
aas
mov
xchg
push
lret
lods
jo
push
or
fldl
mov
cmp
cli
add
add
xor
loopne
push
shrb
fwait
mov
shlb
out
mov
aaa
out
in
push
mov
adc
subb
movsb
aaa
mov
rolb
cmp
lods
rolb
add
popf
sub
push
sbb
dec
cld
dec
fmul
push
das
push
out
std
sub
fndisi(8087
aam
fadds
mov
aaa
mull
jae
or
loope
and
js
or
push
push
cmp
lods
fcmovb
jp
push
shlb
or
scas
rol
shll
data16
or
cli
pop
xor
mov
fisubrl
or
iret
add
scas
pop
cmp
add
jo
pop
fcmovnb
dec
mov
fcomp
dec
jge
shll
shll
push
mov
sub
and
shll
xchg
add
add
cmp
pop
mov
icebp
jle
adc
or
push
pop
push
cmpsl
mov
in
lret
add
sub
mov
xlat
jge
sbb
sub
add
mov
rclb
das
jecxz
arpl
outsb
push
pop
push
adcb
in
push
jno
enter
dec
jo
outsb
rolb
push
sub
in
push
fistpl
inc
and
testb
cmpsl
js
clc
mov
cmpsl
mov
cmpsb
adc
push
bound
push
jnp
cmp
aaa
or
fmull
xor
les
push
dec
push
fidivrs
xchg
test
cmp
push
daa
and
jne
movsl
pop
or
iret
mov
addr16
mov
jecxz
dec
cmp
mov
jb
mov
xor
cmp
aaa
jnp
push
add
or
cld
mov
push
jne
push
pop
jge
push
iret
mov
stos
and
rcr
lods
or
add
adc
inc
pop
mov
fdivl
fistpl
push
incl
insb
clc
cwtl
xor
xchg
scas
js
or
stos
icebp
xchg
inc
push
pop
ret
outsb
push
in
daa
ss
mov
ret
mov
jmp
xor
insb
mov
std
cmp
loope
jne
pop
xor
hlt
mov
pop
cmpsl
and
iret
xchg
or
data16
jle
sub
aaa
jno
pop
aaa
sub
adc
and
and
lock
stos
mov
adc
sub
and
xchg
add
fcomi
testb
das
inc
pop
add
sbb
insl
imull
and
pop
adc
dec
adcl
sub
push
shl
pusha
movsb
push
sbb
sbb
xchg
xor
iret
mov
jae
lock
sbb
insb
xor
xchg
insl
imul
sarl
loop
das
aaa
jecxz
mov
icebp
jno
rol
and
jne
rorb
into
xchg
xchg
lcall
jmp
or
das
fldl
cld
test
jp
adc
aaa
push
cmp
mov
insb
inc
and
bound
repnz
inc
loope
js
mov
lods
push
lea
mov
mov
fiaddl
clc
adc
pop
lcall
in
adc
sbb
add
arpl
add
inc
dec
lock
jne
pop
add
add
jmp
imul
sbb
test
sbb
adcl
push
add
mov
sbb
rorb
mov
cmp
mov
dec
mov
les
mov
lcall
ja
jns
xchg
je
sub
jmp
scas
mov
cmp
pop
jo
test
iret
fildl
pop
ljmp
jne
sbb
insl
xor
or
and
stos
out
int3
adc
and
push
outsb
daa
and
je
sbb
ljmp
jbe
pop
daa
jp
mov
lea
imul
mov
enter
cmp
sarb
mov
or
lods
pop
loope
jg
mov
fstp
scas
push
push
je
outsl
movsl
mov
mov
mov
inc
mov
insb
or
and
inc
mov
sti
mov
xor
cmpsl
lods
scas
push
fidivl
lds
add
or
cmp
fldt
jmp
push
scas
call
mov
cmpsb
and
popa
cmp
push
inc
add
out
aam
iret
sarl
fstl
push
cltd
inc
iret
add
push
ljmp
rorb
mov
pop
dec
sahf
fisubl
push
iret
test
fidivrl
out
cltd
fwait
popa
sbb
and
dec
mov
ret
mov
dec
popa
pushf
shl
scas
adc
and
cmp
fnstcw
fildl
push
adc
test
sub
ffree
in
lods
push
xor
or
lock
jbe
outsb
sbb
push
push
outsl
mov
pusha
test
jecxz
sub
in
popa
inc
jmp
stos
inc
sbb
mov
and
int
cwtl
std
cwtl
pop
stos
xchg
fbld
sbb
lds
inc
cmp
and
aas
pop
jne
fcompl
enter
sbb
scas
sbb
jmp
repz
loopne
push
adc
jecxz
sbb
push
inc
mov
popf
fmuls
mov
imul
push
arpl
push
scas
jnp
push
fcmovnb
and
inc
ljmp
int
jno
loope
in
loop
add
or
mov
jne
inc
ja
aaa
scas
das
sbb
inc
addr16
mov
cmp
push
aam
subb
mov
into
adc
in
xlat
sahf
add
scas
rclb
lods
or
mov
dec
loopne
sti
ret
fistpll
aad
sbb
iret
inc
repnz
mov
cmp
adc
add
cmp
loopne
fdivr
inc
repnz
mov
in
stos
int
jmp
push
xchg
pop
mov
sbb
sbb
add
imul
je
pop
xor
lds
push
cmpsl
jnp
lds
jnp
mov
ficomps
ret
mov
adc
mov
pop
mov
push
scas
jne
inc
adc
inc
lcall
mov
or
clc
mov
push
pop
into
repnz
xchg
adc
aad
pop
fwait
or
mov
add
sbb
add
mov
pusha
push
test
aas
scas
pop
and
das
test
in
mov
pushf
mov
inc
loopne
andl
add
or
in
dec
outsl
push
popa
inc
jo
out
gs
pusha
sub
inc
lret
adc
pop
sbb
mov
pushf
mov
add
mov
mov
aam
loopne
fsubs
or
insl
add
mov
loope
dec
call
and
adc
jae
das
sbb
into
and
popa
add
outsb
or
and
cmp
jle
addl
es
push
int3
cli
cmc
pop
xor
pusha
and
mov
ret
jle
pusha
push
adc
ss
push
aaa
mov
out
fucomip
jo
jb
or
aam
xchg
inc
loopew
mov
shlb
mov
mov
or
push
sub
aad
adc
js
xchg
je
fdivrs
scas
pop
mov
mov
sbb
cmpsl
or
loop
inc
fsubs
out
sarl
loope
lea
mov
rcrb
dec
push
ret
push
adcl
jp
push
dec
mov
inc
push
xchg
or
jl
addb
movb
push
addl
fcomps
push
fistl
adc
imul
or
xlat
ja
mov
lods
and
out
das
fsubs
fidivrs
cmpsb
out
inc
mov
pop
pop
xchg
out
xchg
imul
outsb
pop
bound
cmpl
inc
pop
pop
pop
push
insl
fists
or
or
add
adc
add
push
sbb
loope
mov
out
inc
out
shrl
stc
arpl
insl
shrb
adcl
and
xor
loope
xlat
push
mov
pop
sub
shl
leave
ss
fsubl
push
pop
sub
lret
pop
and
ret
out
pusha
jmp
adc
jbe
lret
std
loopne
pusha
push
shrl
addr16
mov
mov
sub
sub
fistps
insl
lods
lock
push
xchg
mov
in
div
ljmp
fadd
and
fcomip
fisttpl
and
ds
jbe
arpl
and
sahf
jg
mov
inc
sub
add
mov
lret
dec
test
adc
hlt
or
fs
movsl
mov
test
mov
push
stos
pop
add
and
icebp
iret
jp
outsb
test
xor
jecxz
into
and
hlt
cmc
cmp
cltd
mov
outsl
idivb
int3
iret
mov
add
add
mov
push
or
mov
push
lret
xor
mov
in
mov
pop
mov
bound
arpl
popa
imul
scas
pop
test
mov
clc
mov
pop
js
in
int
loope
jecxz
dec
clc
cmp
ds
jbe
lahf
mov
lahf
in
or
add
insl
adc
imul
test
insb
or
adc
outsb
lret
dec
cwtl
mov
add
outsb
in
dec
sbb
push
cmp
testb
and
push
jle
add
test
push
decl
cmp
push
pop
mov
mov
mov
sahf
sti
aad
test
cmp
add
push
pop
loope
je
leave
pop
add
rclb
fimuls
or
add
push
pop
insb
in
add
mov
mov
dec
out
adc
adc
arpl
es
mov
push
sarb
mov
ss
mov
mov
mov
xor
lock
ret
pop
xchg
and
popl
insb
call
and
test
push
jle
jo
inc
loopne
jbe
test
add
cmp
jg
stos
pop
cmp
dec
shl
sub
xor
xor
gs
dec
add
sbb
mov
leave
notb
push
sub
movb
roll
mov
jne
das
pop
test
pop
xor
popa
mov
sbb
dec
lock
sbb
add
mov
das
xlat
sub
sahf
and
mov
pop
aaa
mov
inc
adc
mov
aaa
das
sub
popa
sub
inc
sbb
insl
sbb
inc
mov
pop
mov
idivl
inc
jp
sbb
xchg
loopne
lods
xchg
fsubs
and
inc
enter
repz
test
filds
inc
mov
mov
add
insb
sbb
cmp
les
or
fldcw
pop
add
dec
xor
inc
mov
add
cltd
fcmovb
pop
rorl
enter
or
sbb
ljmp
or
adc
fsts
jne
mov
pop
xor
or
mov
jp
push
push
push
cmp
mov
rcr
fs
add
insb
mov
hlt
or
jae
jecxz
mov
push
cmp
mov
mov
mov
add
add
push
sub
loop
cwtl
lds
adc
aaa
add
mov
xchg
cmp
cmpsb
jle
pop
sub
and
push
imul
loopne
push
xor
xor
adc
push
jmp
mov
xorl
sub
fdiv
jle
fdivl
xchg
push
pusha
mov
imul
add
daa
icebp
bound
into
jno
sbbb
rclb
sbb
or
cmp
or
add
stos
or
mov
mov
das
ret
inc
adc
ljmp
addr16
or
mov
xlat
iret
adc
daa
sbb
arpl
test
lock
mov
add
and
xor
sbb
xor
stc
mov
mov
pop
sub
and
les
fimuls
movsb
inc
loopne
rcrl
mov
add
bound
outsl
pop
dec
mov
stos
mov
push
test
lods
rolb
mov
sub
adc
out
mov
add
outsb
inc
addps
push
push
sbb
add
idiv
bound
shlb
lea
mov
int3
jae
mov
or
mov
popa
or
pop
data16
xchg
mov
pop
and
adc
int3
adc
jae
pop
or
sub
insl
mov
insb
push
shrb
aas
outsl
add
das
outsl
pop
xlat
je
sub
daa
sub
test
arpl
sub
pop
jo
pop
sub
dec
and
jnp
call
sub
shlb
addr16
sti
mov
out
push
mov
xchg
and
xchg
inc
sub
and
or
xchg
subb
jmp
xor
sub
lret
int
and
mov
or
push
mov
and
adc
orl
sub
cmp
push
adc
sub
aad
dec
add
xchg
ret
and
int
adc
dec
mov
dec
cld
clc
rorl
es
ja
or
orl
push
add
sbb
roll
cmc
cmp
lret
in
jno
or
stos
and
push
push
adc
dec
cmpsb
push
rcll
sub
inc
sahf
imul
stc
mov
xchg
mov
xchg
mov
xchg
mull
inc
xchg
negl
inc
stos
out
repz
add
mov
arpl
inc
or
mov
xchg
lods
jle
push
xchg
fcom
jne
das
or
inc
or
adc
mov
and
add
cwtl
fadd
lcall
ljmp
xchg
fbld
hlt
cmp
and
sbb
in
bound
stos
sbb
push
adc
sub
shlb
movb
es
jne
fists
loope
es
push
dec
je
xchg
flds
adc
or
adc
scas
ss
mov
push
and
xlat
test
ja
adc
and
cmc
push
js
in
mov
mov
lods
dec
cwtl
push
push
jne
pop
sti
push
push
orb
adc
int3
fadds
and
cmp
cwtl
stos
adc
test
roll
adc
rol
jno
pushf
sub
fisttpll
jbe
xor
mov
push
sbb
xor
add
ret
ret
add
inc
lret
sub
fadds
fwait
in
cmp
adcb
adc
pop
mov
jbe
adc
adc
inc
ret
push
out
inc
add
push
leave
or
inc
loop
xchg
push
nop
add
aaa
pop
cmp
inc
ja
faddp
mov
mov
cli
repnz
cmp
iret
inc
fmuls
fnstenv
sbbl
popf
addr16
repz
xchg
in
mov
and
mov
sbb
iret
dec
cwtl
mov
or
faddp
inc
and
mov
sub
adc
jnp
sub
cmp
mov
cmp
stos
scas
cmc
iret
outsb
xchg
fbstp
shrl
add
adc
out
dec
xor
xchg
inc
fmuls
cwtl
ret
add
jmp
pusha
scas
xchg
dec
cmp
pop
pop
cld
jo
push
add
mov
mov
jo
push
sub
mov
gs
movsb
test
mov
jmp
fcomps
outsb
out
pop
js
cmp
cltd
mov
hlt
mov
push
mov
mov
mov
and
rclb
cmpb
push
mov
and
sbb
stos
insl
pop
jmp
xchg
and
fisttpl
loope
enter
push
xchg
xor
jo
dec
into
hlt
xor
xchg
out
loopne
cmp
addr16
test
mov
je
jg
fistpl
lahf
fimuls
jb
pop
rcl
sub
lahf
and
clc
sbb
inc
popa
popa
and
pop
jmp
jmp
add
add
jb
xchg
adc
push
sarl
and
enter
cmp
push
lcall
sbb
sarl
lods
pop
aaa
jecxz
leave
stos
mov
montmul
cmpsb
add
mov
jns
jno
adc
flds
sbb
sbb
bound
xchg
leave
rolb
jge
std
mov
loopne
xor
js
add
rcll
fsubrs
xchg
xor
cmp
stos
xlat
mov
pop
xchg
and
popa
cmpsl
enter
test
mov
pop
cmp
icebp
push
add
mov
and
or
mov
pop
ss
imul
jne
outsl
out
call
mov
dec
je
addr16
daa
inc
mov
push
push
push
in
cmp
xchg
int3
dec
in
add
or
pop
and
adc
adc
mov
cmp
push
inc
les
mov
cmp
in
xor
push
and
mov
fdivp
jl
jae
addb
cmpsb
dec
or
inc
xor
int
inc
push
fdivs
out
int3
movsb
push
fs
mov
jbe
push
and
add
int3
dec
lods
or
cmp
and
in
stos
mov
pusha
arpl
jns
add
add
push
test
jne
mov
out
shll
add
insb
fs
movsb
add
testl
push
in
loop
fs
imul
add
iret
xor
rcrb
mov
out
add
adc
scas
mov
outsb
pop
aam
fsubp
push
arpl
iret
sub
jnp
inc
add
pop
cwtl
pop
mov
fs
cwtl
sub
popl
and
xchg
push
ja
fisubrs
jo
test
iret
fildl
pop
cwtl
shl
cmp
in
mov
jp
movsb
pop
lods
ret
add
xlat
mov
mov
xor
pop
inc
xor
ficoml
jae
mov
daa
test
mov
mov
sub
sbb
nop
add
add
push
insl
mov
inc
call
lahf
push
pop
and
or
pushf
sbb
inc
mov
pop
imul
jge
sub
jmp
movsl
repnz
pop
adc
cli
fisubrs
sbb
jge
mov
lods
adc
fstl
iret
loop
jne
or
xor
mov
push
jecxz
jge
lods
adc
push
js
cltd
addr16
add
cltd
mov
in
popa
lret
xor
mov
pop
iret
xchg
mov
test
inc
cmp
inc
or
sarb
scas
or
jno
adc
and
out
loope
inc
test
jbe
push
loope
rclb
repnz
mov
sbb
push
insb
xchg
ljmp
lret
movsb
dec
loopne
loop
push
mov
sbb
das
ja
je
sbb
sbb
daa
mov
adc
insl
adc
mov
fsubrp
jne
inc
aam
lock
adc
cmp
andl
xchg
sbb
sub
in
mov
adc
fldt
add
lds
gs
sbb
fisubrl
jo
jo
xor
dec
mov
and
stos
mov
popa
push
test
movsb
or
jae
fnsave
xor
shrl
mov
fldenv
pop
or
shlb
sbb
push
cmp
mov
in
loopne
mov
xchg
out
jo
jg
popf
mov
jmp
das
sbb
fbld
jo
adc
arpl
das
jo
jbe
daa
cmp
imul
shll
in
out
adc
rorl
jg
js
sbb
popa
movsl
inc
jns
pop
sbb
jb
and
mov
aaa
adc
aam
aaa
and
js
inc
je
sbb
data16
and
sub
cmp
cwtl
adc
dec
loopne
or
sub
jle
ret
mov
fsubrs
test
mov
inc
mov
xor
bound
daa
sbb
incb
cmp
fstpt
mov
pop
sub
pop
sub
inc
jmp
or
sub
mov
push
and
adc
sub
jno
test
je
mov
add
dec
in
jae
cld
xchg
and
daa
jmp
add
stos
or
pop
rorl
mov
shlb
or
jp
mov
pop
into
hlt
push
push
sbb
and
js
fmuls
je
push
das
jg
mov
add
sarb
xor
jo
les
add
ret
scas
xor
sub
xor
loopne
cmpsl
out
rcrb
outsl
dec
popa
pop
cmp
fldt
mov
mov
sbb
insl
dec
inc
sbb
test
mul
sbb
sub
xchg
ja
cmp
ss
and
push
sbb
mov
push
aaa
pop
sub
xor
pop
or
inc
add
or
sbb
pushf
ltr
xor
cmc
repz
mov
aam
cmpsb
fmuls
mov
lods
shll
out
out
cmp
mov
sbb
loope
inc
inc
xchg
xor
cmp
push
xlat
ja
outsb
xchg
roll
icebp
and
mov
adc
mov
mov
push
shll
sti
test
mov
xchg
xchg
sti
jbe
sbb
insb
adc
js
repnz
loope
inc
lods
enter
jo
xchg
fs
loopne
in
push
in
out
dec
filds
add
adc
sbb
test
mov
in
or
push
cwtl
mov
mov
sbb
pop
sub
lret
outsb
arpl
dec
daa
push
xor
jne
scas
or
mov
inc
adc
add
fsubrs
ret
outsb
inc
ss
sbb
push
aas
push
jmp
push
xor
xor
sti
popa
insb
negl
and
aaa
mov
xor
adc
dec
sub
aam
jp
iret
insl
pop
sbb
or
jl
xchg
push
mov
push
xchg
fwait
sti
push
sti
lods
push
testl
jo
repz
test
mov
gs
subb
adc
ror
inc
mov
inc
xor
outsl
mov
popa
add
negb
mov
imull
and
xor
daa
hlt
pop
jp
int
lods
push
aam
imulb
icebp
mov
and
xor
addb
adc
ficomps
and
mov
push
add
in
xor
jo
imull
aas
jmp
mov
ret
jb
int3
daa
or
cmp
lahf
ret
push
sub
aaa
mov
sub
mov
inc
ret
dec
scas
stc
fld
or
push
push
xchg
pop
pop
sti
je
mov
inc
cwtl
bound
cmp
mov
and
or
cmpsl
inc
inc
jno
jo
jo
add
push
mov
repz
data16
cmp
jp
adc
jle
lock
es
lods
jmp
leave
add
sub
dec
and
dec
imul
pop
repnz
andb
test
dec
lahf
xor
cltd
mov
cltd
loop
adc
es
enter
jne
mov
imul
enter
push
jo
das
xchg
testl
stos
out
push
mov
xchg
shlb
xchg
mov
test
loop
inc
dec
aam
xchg
and
subl
negl
lret
mov
jne
test
push
test
test
sbb
ja
sbb
mov
xchg
rorb
lcall
dec
and
sub
cwtl
in
and
cmp
jb
xchg
and
orb
lcall
cwtl
daa
flds
mov
mov
faddp
add
xor
fmull
loope
mov
mov
and
or
push
icebp
xor
ljmp
es
push
cmp
outsb
jns
add
sarb
addb
jb
das
into
aad
or
push
pushf
mov
inc
lods
ja
lock
gs
lret
pusha
inc
mov
orb
jmp
sub
sub
int3
ljmp
and
jp
test
fdivrs
or
cmpsl
xchg
es
mov
jmp
mov
inc
xor
add
into
mov
sub
mov
xor
inc
rcrl
adc
fists
in
insb
or
sbb
aam
and
xchg
pop
arpl
leave
push
sti
test
or
lods
jnp
aad
add
xor
inc
ja
lods
jnp
fwait
aas
xor
jae
push
popf
cs
bound
fsts
stc
adc
jnp
add
push
mov
add
inc
fstps
mov
outsb
popf
addl
and
and
fwait
insl
outsl
mov
and
inc
push
dec
adc
sbbw
cwtl
adc
pop
mov
xchg
pusha
inc
pop
test
fsubs
mov
push
sbb
adcb
mov
mov
fnstenv
repz
ljmp
cmpsl
mov
and
arpl
pop
jb
inc
mov
sti
inc
aas
add
subl
aas
out
testl
ja
int3
mov
les
popa
mov
xchg
jae
mov
cmp
loope
in
adcb
jg
sbb
or
cmp
pop
stc
aaa
jnp
fcom
int
sbb
fcmovbe
sti
mov
into
pop
and
aad
sbb
inc
jno
add
or
orb
adc
pusha
call
call
test
pop
stc
push
cmpl
pusha
cmpsl
je
xchg
loope
into
push
mov
adc
popa
dec
stos
push
adc
mov
mov
out
mov
xor
test
cmp
popa
daa
popf
xor
adc
pop
ss
xchg
xchg
xchg
js
pop
sbb
ret
jecxz
aaa
sub
ja
adc
cmp
mov
mov
rcrl
in
movsb
inc
and
xor
jl
in
or
and
add
popa
or
repz
pop
in
in
insb
incl
push
lret
insb
nop
inc
sub
enter
daa
mov
adc
ret
xor
ja
insl
and
cltd
roll
xlat
pop
pop
loopne
popa
mov
icebp
rcll
cwtl
mov
fistpll
mov
fistl
cmp
in
or
or
sahf
popf
hlt
pop
emms
push
nop
test
pusha
out
flds
mov
push
rorl
lahf
jp
jge
adc
inc
ss
rdpmc
jge
scas
pusha
xorl
aas
adc
imul
pop
cmp
add
enter
lsl
data16
mov
lret
iret
jae
insl
fdivs
pop
adc
jg
cmp
jnp
sbb
movsl
pop
cmp
mov
fcomp
fs
arpl
xor
nop
xor
imul
bnd
push
rcrb
mov
lcall
adc
xor
and
cmc
and
pop
pop
mov
jge
mov
popf
push
inc
daa
mov
or
lods
shlb
dec
sub
sbb
or
sbb
idivl
mov
test
adc
mov
jp
xor
pusha
add
test
add
stos
or
add
cmp
or
pop
add
rclb
rcr
cmp
das
cmp
sbbl
push
cmp
or
testl
fwait
dec
jo
add
mov
push
scas
xlat
cld
iret
add
cld
fists
mov
movb
aaa
int
out
test
into
pop
add
xchg
push
lea
icebp
inc
mov
pop
mov
mov
or
add
xlat
mov
adc
rclb
cmpsb
vfnmadd213pd
mov
and
jmp
fldt
sbb
rcrl
dec
shll
addb
push
mov
or
cmp
mov
jb
fidivs
jg
mov
and
add
ror
inc
insb
call
shl
mov
add
scas
and
rorb
aam
xor
rolb
js
add
sub
mov
inc
push
icebp
sub
or
or
sar
add
mov
movsb
bound
enter
cmp
sub
sar
mov
stos
inc
ret
inc
sar
cmp
into
jno
inc
popl
into
into
jmp
pusha
es
or
push
out
add
ds
mov
and
xchg
fildl
xchg
push
xchg
mov
hlt
and
inc
adc
int
jo
cmpsb
jle
add
adc
mov
jl
es
mov
scas
sbb
imul
mov
out
scas
pop
cmpsb
loopne
mov
aam
push
or
add
mov
push
arpl
popa
and
jae
es
imul
ja
dec
popf
add
and
xor
sub
rcrl
add
in
add
xor
cs
pusha
xchg
add
inc
lods
mov
cmp
fidivrl
xchg
add
inc
mov
jg
addb
in
cmp
push
mov
gs
mov
aaa
jle
push
xchg
push
movsb
ret
or
mov
xor
pop
jo
dec
ja
adc
add
cmpsb
xor
loop
insb
mulb
and
adc
mov
lcall
and
mov
ljmp
cmp
sub
push
out
testb
or
jnp
es
popa
lods
jno
cwtl
push
pop
loop
shll
iret
call
push
xchg
daa
push
mov
add
push
cmp
outsl
arpl
sub
push
mov
into
mov
and
ja
stos
or
les
mov
dec
aas
les
mov
pop
das
cli
mov
jle
and
das
pop
jns
or
fmull
fsubrs
scas
xor
cmp
aad
dec
and
mov
mov
lds
jns
mov
jo
pop
add
cmp
add
cmpsl
cmp
and
add
inc
es
push
imul
dec
scas
cmp
pop
inc
mov
clc
mov
mov
sub
mov
push
in
loope
and
inc
in
jo
add
pop
inc
clc
je
stos
inc
and
leave
mov
pop
add
iret
test
push
and
cld
jo
pop
jl
and
idivl
inc
add
cmp
mov
test
pushf
jnp
je
in
cmpl
sbb
mov
and
scas
cmp
inc
mov
mov
jnp
enter
inc
or
int
movsl
xor
jo
add
inc
mov
outsl
test
dec
fimull
stos
das
loopne
iret
lret
sub
daa
mov
xor
ljmp
push
pop
repz
ss
mov
sbb
and
or
add
scas
inc
jmp
lock
add
es
shlb
fidivrs
sbb
fsub
lock
pop
sbb
cmp
mov
mov
adc
shlb
inc
pop
mov
movsb
or
fmull
inc
cmp
mov
pop
pop
pusha
js
cmpsb
pushf
lods
cltd
sbb
mov
add
jle
lods
xchg
or
pop
sbb
into
inc
setae
daa
xchg
dec
inc
rcrl
sub
loopne
inc
push
fimuls
push
lods
in
stos
and
addb
xlat
loopne
push
imul
xor
and
sbb
dec
scas
inc
jo
test
cmp
cmp
and
sti
in
xor
push
pushf
icebp
mov
andl
aaa
mov
inc
xlat
fadds
clc
or
aas
inc
daa
push
test
test
cmp
xchg
sbb
dec
ds
lds
pop
or
mov
xchg
bound
rclb
mov
jbe
jle
cld
repz
jae
mov
ljmpw
mov
xchg
addl
mov
xlat
xor
xor
in
push
test
lds
push
je
cmp
pop
test
fsubrl
push
std
int3
lds
out
jo
jne
jbe
outsb
inc
les
sbb
mov
pop
mov
rcll
sub
or
mov
punpcklbw
inc
rolb
xor
xor
dec
lods
scas
mov
xchg
das
sub
push
pop
inc
pop
xlat
pop
kmovq
outsb
sbb
ja
nop
imul
cs
xor
arpl
dec
loop
sbb
ficomps
das
fdivl
shr
cwtl
rolb
into
ja
outsb
jns
push
add
mov
mov
clc
das
mov
addr16
pop
loopne
and
fwait
insl
ja
push
int3
and
and
mov
push
shlb
arpl
mov
enter
je
insl
fstl
fistpll
xchg
jmp
xchg
inc
aaa
xchg
test
mov
repz
loope
pop
xchg
dec
aad
mov
cltd
push
jle
sbb
sub
push
push
push
cmp
in
sub
jne
push
cmp
push
fisubs
or
sbb
arpl
mov
addl
aaa
dec
push
iret
sub
ficomps
sub
into
xor
loopne
inc
mov
addr16
ds
jle
fsts
mov
xchg
dec
mov
xchg
ja
adc
fwait
or
sbb
jb
rorb
xchg
popa
mov
repz
inc
inc
pop
out
add
dec
mov
mov
sub
mov
hlt
xor
aam
pushf
clc
je
lcall
leave
addl
test
mov
movsb
sub
push
jb
sbb
pop
shlb
inc
cmp
in
cmp
inc
inc
or
xor
out
mov
cltd
pop
or
or
xlat
adc
popf
mov
icebp
enter
add
or
xor
clc
mov
sub
es
inc
pop
clc
imul
adc
scas
pusha
ret
movsl
mov
push
bound
addr16
push
cmp
inc
adc
xchg
jb
icebp
loop
mov
adc
test
xor
xchg
pop
les
adc
push
jae
rorb
add
lds
mov
and
pop
andl
ss
das
fadds
or
mov
dec
pop
cmpb
sub
lds
test
sbb
sti
xchg
jnp
mov
xor
cmp
mov
push
std
and
stos
mov
vpunpckhdq
je
adc
pusha
iret
out
push
xchg
and
mov
into
push
into
sbb
popf
mov
dec
push
sbb
cmp
movsb
ficoml
cmpsb
xor
add
sub
mov
or
pop
aas
fisttpll
mov
xchg
sbb
test
cltd
sub
push
mov
or
sbb
and
sub
or
and
iret
or
mov
outsl
lret
push
stc
sub
imul
scas
subl
mov
jnp
ficomps
enter
inc
nop
out
mov
lcall
lcall
push
xor
dec
push
mov
lret
mov
or
xor
adc
mov
ss
lds
xchg
or
sbb
enter
pop
rcrb
stos
pop
test
fwait
jbe
fwait
lods
mov
cwtl
adc
and
dec
or
icebp
add
movsb
sub
sub
popa
adc
pushf
add
fstpl
loopne
and
rorb
jg
xor
sahf
das
xchg
js
inc
imul
push
movsb
test
int3
mov
push
mov
frstor
add
mov
jmp
lds
loopne
sbb
push
mov
fimull
stos
adc
cwtl
inc
jo
cltd
fnstsw
push
shll
jg
pop
or
nop
and
add
das
lahf
push
sbb
sub
push
test
add
sub
movb
lahf
inc
daa
pushf
xor
sbb
add
adc
sti
shlb
aas
xor
jge
rcrb
mov
enter
lock
and
aaa
mov
lcall
je
push
cmp
sub
test
sub
dec
iret
mov
inc
mov
jle
and
es
adc
jge
xchg
add
jns
loopne
shl
aas
clc
es
add
adc
test
add
addr16
out
inc
xor
and
add
ss
jge
and
cmpsb
xchg
or
cli
movl
jp
rol
mov
jo
jo
inc
sub
clc
rorl
not
rcr
and
lods
stc
jb
mov
push
movhps
sbb
add
es
lods
xor
pop
xor
jb
scas
adc
fisubrl
and
andl
add
ds
mov
cmp
in
pusha
ret
cwtl
push
fisubs
adc
loop
sub
pop
mov
bound
lahf
stos
inc
shrb
mov
cs
or
jle
add
cld
imul
es
push
jns
add
mov
dec
pop
out
adc
stos
movsl
add
push
jg
mov
or
cwtl
and
pop
shl
cmp
push
add
shrl
pop
adc
sti
mov
sbb
mov
mov
xchg
js
xchg
and
shr
pop
out
fcoml
rorb
add
mov
jo
je
xor
int
stc
pop
out
jmp
add
or
stos
dec
aaa
fstl
or
jmp
into
jle
add
sbb
or
cmc
mov
xor
push
cwtl
shlb
loope
cmp
pop
out
mov
and
add
movsb
add
push
rcrl
in
roll
add
ljmp
ja
jmp
mov
int
mov
inc
xchg
dec
mov
dec
inc
test
mov
jg
fs
and
adc
jnp
xchg
pop
push
testl
mov
pushf
mov
xchg
push
rolb
push
cmp
jb
iret
sbb
adc
inc
icebp
push
icebp
or
jge
lods
lock
lret
stc
xchg
jae
and
mov
add
sub
sub
dec
cmpsl
pop
les
dec
cmp
mov
popf
sbb
lds
fsub
movsb
add
sbb
bound
and
jecxz
cmp
and
daa
and
xor
sbb
nop
js
mov
and
je
adc
push
mov
dec
dec
cmpsl
test
dec
push
dec
cmpsl
adc
xlat
xor
outsb
shlb
pop
loope
sbbb
mov
xchg
inc
aad
lods
pop
sbb
add
iret
int3
mov
or
outsl
push
das
xlat
aas
or
cmp
jl
jl,pn
into
inc
in
lahf
mov
or
fcompl
std
jbe
rolb
fsubrs
dec
popl
cmp
mov
pop
xchg
nop
sti
jo
int
imul
sub
scas
addr16
aas
or
mov
shr
and
mov
aas
call
out
sbb
mov
xchg
jo
adc
js
popa
or
inc
adc
sbb
push
and
mov
jo
dec
mov
ss
mov
adcb
out
sbb
hlt
add
lret
scas
and
iret
out
jnp
dec
movsb
imul
mov
or
cs
mov
jmp
lods
call
out
jbe
fnstenv
in
in
in
xor
xor
das
dec
je
or
mov
mov
pop
xor
xchg
jmp
outsl
push
push
out
outsb
in
jae
add
sub
inc
sub
fldenv
shll
mov
push
xchg
adc
push
and
sbb
fisubrl
repz
les
scas
scas
sub
and
leave
cmc
jp
loopne
mov
and
outsl
sbbl
lock
jl
jle
jecxz
test
add
ja
mov
dec
jne
ja
push
ds
adc
shrb
movsl
pop
arpl
outsl
sbb
pop
mov
cmp
mov
push
ja
addb
xor
loope
xor
aad
sub
dec
adc
sbb
dec
sbb
filds
add
xor
push
xchg
ret
inc
jo
inc
adc
push
mov
adc
cmp
jne
andb
mov
and
adc
sub
inc
and
or
pop
popa
sti
sbb
dec
ja
mov
lret
inc
xor
push
sbb
test
shrb
dec
sub
in
mov
jbe
mov
pop
sub
cmp
pusha
and
mov
mov
push
sti
loop
movsl
sbb
rcll
add
mov
inc
xlat
daa
decl
mov
loopne
in
das
mov
loop
stos
popa
jns
loop
adc
xchg
or
add
int3
xchg
and
mov
loop
mov
cmpl
int3
xchg
movsl
rclb
mov
inc
xchg
push
and
aaa
aaa
call
sbb
insl
xchg
add
es
repnz
stos
xchg
mov
stos
out
fcoms
mov
dec
pmullw
sbb
adc
push
loopne
xor
loop
mov
out
jp
or
and
and
sub
jnp
inc
add
push
movsb
jecxz
mov
push
or
xchg
mov
inc
jecxz
loopne
jb
xor
xchg
fmuls
icebp
cli
inc
inc
jno
data16
insl
les
and
loopne
push
inc
and
fsubl
dec
rcrl
lea
fcoml
xchg
pop
fdivrs
shl
fisttpll
cmp
pop
and
add
sub
pop
inc
cld
aad
sbb
aaa
jge
add
adc
or
ds
cmp
push
in
inc
jo
hlt
testb
sub
or
in
inc
push
int
push
jp
xor
jnp
in
iret
sbb
sub
jnp
test
xchg
sbb
mov
sbb
pop
movsl
jp
jmp
outsb
adc
push
mov
push
or
das
xor
jne
push
add
push
mov
movntps
jb
push
fs
adc
xchg
adc
pop
cmp
adc
inc
fcomi
pusha
js
adc
int3
adc
jp
rcll
add
sub
inc
adc
scas
mov
adc
loopne
mov
jmp
mov
in
iret
xchg
dec
in
bound
cwtl
test
add
push
jp
push
pushf
adc
add
lea
mov
test
sub
inc
adc
jnp
and
push
pop
aaa
xlat
loop
fildl
ja
and
add
adc
add
call
mov
rcrb
push
and
and
sahf
sub
aas
inc
xor
adc
inc
dec
xchg
inc
push
pop
data16
pop
inc
add
not
lds
and
jns
push
shrb
add
add
jo
lods
aam
inc
out
fcmovnbe
add
or
inc
add
out
sbb
ds
ss
xor
out
push
mov
outsl
ja
fists
popa
jl
fcompl
sbb
push
and
lods
clc
pop
dec
adc
lds
jae
jle
dec
pop
or
fisttps
pop
ficomps
leave
mov
test
ljmp
loopne
lock
mov
xor
jmp
cmpsl
sbb
sarb
hlt
lods
int3
rcr
mov
and
iret
xor
sub
and
fdivs
jle
lret
outsl
jbe
and
pop
mov
cmp
ja
pop
movsb
jg
aaa
iret
lds
adc
lock
nop
xchg
out
pusha
ret
movsb
jns
dec
cmp
jo
pop
sub
pop
jle
ficoml
xchg
sbb
inc
mov
cmp
jp
lock
fdivs
in
and
inc
cwtl
mov
out
xor
int3
sub
andb
pop
pop
dec
int
cs
fs
insl
pop
scas
and
xor
xchg
mov
in
mov
fsubrl
pop
scas
sbb
movsb
or
cwtl
fcmovbe
imul
jne
dec
push
cmp
sub
adc
push
and
xchg
ss
pop
call
mov
xchg
in
in
fisubrs
cmp
inc
scas
cmc
loopne
mov
and
mov
mov
pop
clc
das
jno
das
cmp
roll
jmp
test
int3
lret
mov
xor
lods
into
nopl
mov
fldt
sarb
jo
aaa
or
mov
pop
ds
mov
mov
push
fbld
lds
das
inc
jmp
fdivrs
sub
xchg
inc
inc
ror
pop
fistpl
popa
push
mov
inc
dec
in
push
ret
frstor
xchg
ret
subb
loope
ss
adc
fbstp
in
imul
push
add
rclb
dec
cmpsl
add
pop
ret
movsl
dec
pop
push
sub
push
lret
pop
mov
stos
andb
mov
xchg
loope
and
dec
popfw
adc
pop
add
bound
fisubrl
mov
xor
repnz
push
pushf
fisubs
adc
es
jb
sarb
sub
add
bound
sbb
pop
lock
lret
scas
pusha
cmp
jg
arpl
das
jge
ficompl
xor
bound
sub
aaa
arpl
mov
push
push
jbe
add
push
es
imul
cmp
cmp
and
or
add
xchg
dec
mov
imul
dec
dec
es
push
addr16
ret
sbbl
popf
imul
jae
mul
push
das
xor
imul
push
iret
xor
push
push
lods
lock
les
int
fldcw
mov
dec
dec
enter
adc
jge
popa
lods
sarb
loopne
jge
xlat
jnp
lock
add
xchg
shl
jo
adc
sub
pop
jno
aad
outsb
popf
or
shlb
push
movsb
imulb
jne
ja
xorl
int3
ja
test
popf
xchg
mov
rorb
jns
fiadds
lret
inc
cli
popf
jge
iret
mov
ret
or
cmp
jns
arpl
adc
iret
dec
out
mov
add
pop
fcomps
pop
fs
scas
lods
xchg
outsb
rolb
mov
add
pop
or
lahf
pop
inc
fs
notl
clc
inc
jbe
mov
inc
mov
xlat
xor
repz
inc
pop
inc
mov
cmc
hlt
or
aad
push
sub
add
jp
adc
mov
dec
rolb
mov
shrl
je
mov
or
pop
and
sbb
adc
add
sub
mov
adc
mov
cmpsl
cld
lods
jmp
mov
xlat
xor
fildl
je
pop
jmp
jb
stos
jb
fadd
lcall
aaa
mov
mov
cs
adc
or
pop
imul
inc
xchg
and
sub
or
jo
insb
adc
les
jo
icebp
in
out
outsb
mov
adc
push
int
lods
das
in
lods
scas
pop
sbbl
sub
jo,pn
aaa
pop
mov
int3
cmp
call
add
lcall
in
js
mov
loop
loopne
lds
frstor
inc
push
inc
mov
xchg
fisubl
and
xor
inc
rcrl
call
xor
test
jge
xchg
popf
mov
mov
xchg
mov
mov
xor
sti
lahf
xor
sub
sub
mov
out
jp
cmp
stc
int3
leave
xor
add
notl
out
or
push
repz
jmp
cmp
jmp
add
mov
mov
pop
test
mov
inc
dec
xchg
mov
in
addr16
mov
imul
adc
adc
in
lret
je
pop
jg
in
inc
adc
movsb
hlt
pop
lea
ljmp
xor
dec
inc
test
sbb
or
andb
popf
in
sbb
outsb
mov
or
test
mov
xorb
clc
ss
sbb
test
dec
enter
fnstcw
nop
push
add
aaa
push
lock
je
ffreep
jp
pop
push
or
add
inc
sub
roll
das
es
mov
dec
pusha
mov
movsl
cwtl
sbb
xor
pop
cwtl
lock
in
bnd
mov
lock
jb
pop
imul
cmpsl
cmpsl
in
daa
push
or
stc
leave
adc
xchg
xor
and
popa
call
jno
sub
aas
cmpl
in
jp
jno
add
and
lcall
js
sub
daa
out
adc
xor
and
data16
sti
pop
inc
in
sbb
dec
in
loopne
jle
ja
scas
xchg
scas
add
pop
inc
add
inc
aaa
adc
cld
outsb
jmp
sub
enter
and
inc
jno
rcpps
stos
cltd
nop
jmp
scas
ja
push
daa
sbb
jno
add
inc
mov
pop
xchg
inc
sbb
add
add
push
xor
sbb
cmpsl
popa
aam
dec
dec
mov
cld
shrl
xor
nop
jno
dec
xchg
adc
fistps
test
sbb
cld
js
ja
btr
icebp
ret
and
jae
cmpsl
push
test
push
and
bound
inc
sbb
jo
and
jg
adc
sub
negl
inc
imul
dec
and
adc
sub
faddp
pop
insl
insb
les
les
pop
and
ret
cmp
fs
aam
jb
stos
and
dec
jnp
ret
jnp
popa
lods
test
andl
in
cmp
inc
jmp
mov
mov
ret
icebp
lds
iret
inc
out
push
pop
xor
or
mov
push
jnp
adc
and
fs
cmp
and
std
mov
push
ss
mov
inc
lea
add
inc
xchg
test
sbb
or
dec
pop
xchg
or
jae
js
in
dec
or
sbb
push
inc
and
pop
stos
js
push
adc
and
aaa
sbb
mov
aaa
cmp
inc
jp
ja
pop
adc
xchg
push
pop
stos
lods
cmp
adc
sub
or
ja
adc
jne
push
sub
sub
cli
pusha
push
pop
sub
push
xor
test
sub
or
push
xchg
inc
outsl
loope
xor
in
inc
shr
xlat
jecxz
dec
les
or
jae
mov
dec
imul
xor
rcrb
cmp
fisubl
shlb
push
inc
mov
xor
xlat
fldcw
mov
xor
lds
bound
cmp
push
adc
jmp
fs
sub
push
mov
rolb
pop
aam
inc
inc
ret
or
xchg
jo
inc
inc
loop
xchg
fimull
add
fcmovne
lds
test
scas
insb
xor
aas
dec
jo
pusha
xchg
inc
push
push
jge
ret
jo
aas
das
aam
shrl
xchg
xor
cwtl
insl
add
gs
and
adc
cltd
add
inc
sbb
push
pop
add
inc
xchg
cmp
scas
sub
mov
and
mov
int
insl
mov
or
fcompl
cmp
test
and
or
pop
and
jge
add
xor
pop
cmp
jle
mov
aas
stos
cmp
and
stos
xor
pusha
xchg
cmp
dec
lds
iret
unpcklps
xor
add
mov
arpl
mov
xchg
shlb
ds
int3
and
lcall
inc
pushf
enter
inc
push
and
scas
add
and
mov
lcall
adc
push
dec
std
outsb
popf
add
xchg
adc
fs
test
addl
sub
shrl
xchg
add
pop
or
je
and
js
jno
push
cmpsb
popf
lret
jge
mov
pusha
xchg
pop
outsl
xor
fidivs
addl
orb
cmp
adcl
ja
xchg
fadds
outsb
adc
dec
insb
and
enter
jo
movsl
jae
adc
jp
jle
or
cmpsb
adc
loop
dec
or
mov
dec
ja
stos
popl
xor
testb
in
mov
call
js
add
das
mov
xor
pushf
jnp
daa
das
jg
mov
push
dec
fisttps
sub
or
push
cmp
out
loopne
mov
xor
adc
test
or
add
daa
nop
mov
lock
outsb
hlt
mov
lds
mov
out
add
xchg
push
scas
pop
hlt
call
cvtdq2ps
sbb
rolb
jnp
pusha
sbb
sub
push
sub
mov
int3
das
fmuls
scas
sub
mov
in
ret
test
and
mov
or
out
push
adc
clc
mov
add
mov
test
cmpsl
pop
stos
lcall
mov
cs
jo
sub
xchg
xor
test
fdivrs
sbb
or
rcrl
xchg
mov
and
andl
test
mov
push
jg
sub
mov
fsubl
int3
push
pop
out
je
jecxz
dec
shll
sub
fdivl
xor
mov
add
xorb
pop
fidivrs
stos
jl
test
rcll
cpuid
popa
mov
sub
add
dec
add
fcoml
jecxz
sbb
and
imulb
fdiv
adc
adc
pop
mov
scas
popa
pushl
mov
dec
out
jp
add
push
pop
cmpsl
addb
sub
jb
mov
aaa
lahf
popa
test
lods
jle
fildll
mov
pusha
sub
inc
das
adc
cmp
shlb
int3
pop
push
sub
sbb
cmp
shll
fwait
push
pop
loopne
das
in
dec
repnz
pop
add
pop
xchg
push
inc
lods
push
jmp
xor
mov
xchg
ret
push
popa
loopne
mov
jg
and
repnz
aas
and
inc
sub
cmpsb
adc
or
push
cs
mov
lea
nop
sub
jnp
pop
sub
insb
dec
mov
push
jns
mov
mov
push
loopne
int3
pop
and
mov
out
lock
scas
mov
jge
fidivrl
xchg
inc
mov
pushf
xchg
pop
popf
and
enter
bound
jge
cmpsb
add
xchg
add
pop
js
dec
cmp
movsb
push
sub
cmc
jnp
add
sub
sub
mov
fwait
push
fsubs
std
mov
ret
inc
aas
xor
lahf
inc
mov
add
or
mull
inc
push
sbb
push
add
aad
cmp
test
sbb
mov
jnp
pop
or
movsb
ret
cs
iret
inc
stos
aas
add
and
stos
xchg
shrl
jnp
daa
inc
stos
inc
and
xchg
imul
in
pushf
push
test
xchg
dec
ds
fstp
add
jae
lret
in
bound
movsl
sub
loope
adc
mov
lret
loope
cwtl
inc
mov
or
pop
mov
ret
rcrb
xchg
push
mov
and
out
fiaddl
aaa
movsb
xchg
dec
mov
test
testb
aaa
pushf
loop
xchg
push
or
add
insb
sbb
movb
mov
movsl
jg
jle
jg
dec
dec
sbb
popl
sbb
mov
inc
push
pop
cmp
dec
push
in
imul
test
fmuls
add
pop
clc
movsb
lea
xchg
ret
insb
cmpb
fisubs
mov
andb
pop
pop
mov
ret
daa
mov
push
je
lcall
add
movsb
sbb
orb
sub
pushf
sbb
add
jp
xchg
jo
xor
mov
add
adc
fsubs
call
or
into
lcall
sub
clc
test
iret
sub
add
xlat
cltd
es
repz
or
and
mov
lods
rorb
or
xlat
rolb
test
add
adc
pushf
fdivrs
pop
out
iret
int3
test
cmpsb
or
ds
in
push
test
in
das
add
loop
mov
cmc
fimuls
cwtl
rcll
add
shlb
lods
dec
sbbb
mov
addr16
ret
arpl
and
and
dec
test
cmpsb
cmpsl
add
test
popa
xchg
sbb
jo
lds
pop
test
clc
lds
aas
cwtl
test
sbb
jb
push
sbb
out
leave
jo
xor
cs
int3
cwtl
add
lret
or
add
and
bound
mov
jge
cld
sub
enter
leave
lcall
jl
into
add
adc
int
xor
push
iret
pop
rcl
rolb
mov
cmp
mov
outsl
dec
cmp
pushf
scas
in
es
sarl
mov
sbb
mov
mov
sbb
push
inc
lahf
ja
sub
loopne
or
push
mov
sbb
sbbl
mov
testb
pop
stos
out
and
pop
ret
lea
stos
jp
and
push
movsl
test
adc
cwtl
pop
add
lcall
adc
push
popa
inc
movsb
inc
ss
or
pop
icebp
push
push
push
arpl
loop
pop
xchg
or
movsl
jo
pop
jmp
mov
add
loope
arpl
or
lret
mov
jno
fdivl
or
in
sahf
push
push
cli
aas
adc
sbb
loop
cmp
fstpt
pop
sub
out
lcall
mov
orl
adc
jae
pop
xlat
inc
push
or
add
mov
xchg
and
mov
fwait
mov
mov
inc
xor
shl
test
les
mov
into
push
movsb
dec
sarl
icebp
imul
test
stos
dec
add
arpl
aaa
sbb
pop
cmpsl
aaa
inc
in
xchg
sbb
xchg
xchg
xchg
push
arpl
cmp
fs
push
cwtl
xchg
cs
dec
cmp
adcb
xchg
fsubrl
mov
ret
jp
add
mov
push
dec
lods
push
mov
les
push
icebp
pusha
and
lods
pop
add
sub
mov
andl
sbb
jo
mov
aad
insl
adc
divl
adc
negl
xchg
aad
or
js
mov
inc
aad
or
push
cmp
es
pop
out
shlb
scas
mov
sbb
hlt
dec
mov
and
out
and
and
ss
push
xorb
scas
xor
pop
mov
pop
shll
sahf
js,pn
movl
mov
aam
call
cwtl
sub
dec
rcrl
stos
sub
or
add
sub
test
call
cmp
xchg
out
lods
pop
mov
cltd
insl
and
lods
lret
or
cwtl
shlb
add
dec
dec
jo
sbb
jb
mov
xor
mov
or
xor
clc
into
and
shrb
cmpsb
rcll
pop
movsb
or
sub
outsb
mov
mov
popf
or
mov
jae
iret
ret
mov
jae
mov
stos
jbe
and
test
inc
jns
in
pop
add
push
push
push
aam
popf
ljmp
jns
add
add
push
jo
pushf
jg
stos
sbb
add
data16
dec
xchg
sahf
and
inc
insb
mov
sahf
push
pop
dec
lcall
and
add
push
hlt
cmc
and
adc
orb
mov
inc
mov
add
lods
subl
and
jnp
jle
jnp
pop
or
jb
push
jnp
mov
or
sub
dec
push
cld
into
mov
int3
inc
sub
insb
popf
cmp
pop
popf
insl
inc
lods
jmp
jns
in
int
inc
pusha
inc
mov
pop
imul
sub
adc
les
mov
add
mov
mov
imul
or
test
or
nop
inc
mov
andb
fld
test
sahf
shlb
test
pop
pop
aam
shlb
cwtl
dec
ds
shll
dec
inc
dec
notb
adc
mov
cmp
sti
add
cli
lods
fisubl
xor
sarb
pop
or
test
fisubs
pushf
push
int3
lcall
stos
jmp
or
int3
jne
fwait
stos
dec
enter
pushf
inc
xchg
in
data16
test
inc
sub
push
xchg
push
in
xchg
cwtl
out
add
or
stc
cwtl
mov
jmp
xchg
xor
sub
cld
cmp
push
iret
mov
add
cmpsb
jle
pop
mov
cltd
push
inc
into
jle
sbb
pushf
inc
mov
jge
mov
fisubrs
push
test
jb
insl
gs
test
cmp
and
fdivl
jbe
dec
into
iret
add
xor
test
inc
jo
iret
pop
push
inc
js
adc
pop
lock
or
xor
and
dec
cld
sub
pop
and
inc
push
mov
std
inc
sub
sbb
cmp
aaa
roll
mov
push
mov
dec
decl
pop
sbb
mov
insb
and
add
int3
inc
in
pusha
cmpb
pop
sbb
arpl
sbb
adc
and
mov
push
in
into
and
push
in
pop
out
and
pusha
add
xchg
sub
pop
lods
stos
imul
testb
inc
sub
pop
aam
hlt
mov
aaa
xchg
shl
add
sub
or
filds
mov
xchg
jb
jp
xor
mov
dec
mov
test
hlt
xchg
xor
add
adc
mov
cmp
cmc
mov
inc
mov
out
out
add
shl
clc
push
xchg
aas
ds
or
cmp
lea
add
rorb
inc
xchg
mov
stc
push
or
aas
mov
loope
es
pop
xor
inc
jecxz
rorl
loope
arpl
mov
mov
jp
pop
and
jmp
sub
pop
or
xchg
mov
push
adc
fcoms
adc
inc
add
in
stc
xchg
in
daa
xor
and
mov
adc
clc
add
cltd
stos
pop
xchg
cltd
pop
add
push
dec
adc
nop
scas
test
pushf
stos
mov
sub
in
xchg
sbb
add
popa
rol
movsb
inc
fwait
xchg
push
mov
mov
adc
jmp
sbb
in
dec
fs
sti
add
loopne
fidivs
fcmovbe
adc
mov
sub
lods
sub
adc
inc
adc
jbe
pushf
xor
das
aas
mov
mov
and
sub
ficoml
dec
fs
fidivrl
movsb
aaa
sub
push
xchg
in
es
jo
mov
loop
ret
mov
nop
push
jno
push
cmp
jle
cld
lcall
pop
mov
pop
sbb
ljmp
mov
enter
push
in
fwait
sub
inc
push
lret
pop
frstpm(287
xchg
bound
pusha
pusha
scas
ljmp
dec
outsl
sub
dec
gs
push
pop
les
faddl
sarl
sub
lods
sub
xchg
mov
jmp
test
leave
test
add
scas
insl
std
loop
nop
jo
fs
mov
fsubl
js
sbb
mov
push
stos
subl
sbb
std
sbb
mov
add
pop
stc
push
mov
sub
jp
sbb
mov
icebp
mov
xlat
add
sub
sbbl
inc
or
push
mov
sbb
adc
or
test
sub
xchg
cmp
xor
mov
xchg
ret
leave
popa
jo
push
add
scas
lds
outsl
mov
mov
xor
and
pop
mov
sub
and
sbbl
add
sbb
sbb
or
cmp
loopne
add
push
popf
xchg
test
adc
fsubs
mov
mov
out
pop
cmpsb
add
sbb
fisubs
addl
lds
adc
mov
push
cmp
fcomps
push
jg
sbb
push
fs
jb
cmp
jp
aam
or
adc
cmp
and
aas
mov
stos
cltd
jle
mov
push
add
mov
or
les
ljmp
roll
add
icebp
les
insb
push
in
xor
in
inc
inc
sahf
out
sbb
mov
or
int
test
xor
fistpl
movsb
inc
mov
ret
cmp
rorb
cmp
iret
cli
xchg
adc
jo
fs
jns
ret
adc
xlat
shl
dec
addr16
mov
cli
ret
xor
add
push
comiss
mov
dec
or
jge
and
inc
adcb
xor
cs
jb
add
dec
ret
add
xchg
sbb
repnz
mov
lods
lcall
aas
or
and
mov
test
popf
mov
xor
cmpb
mov
add
out
or
out
lcall
pop
inc
inc
inc
or
daa
or
cmpl
dec
test
pop
iret
adc
fmull
push
ja
and
sub
loopne
fldl
xor
leave
mov
push
pop
push
pop
inc
pop
ds
push
in
push
adcl
xchg
mov
pusha
and
icebp
cmpsb
sbb
fistl
mov
add
cmc
mov
xchg
add
out
adc
xor
mov
sub
jnp
xor
add
loopne
push
shlb
imul
cmp
sbb
enter
adc
lods
xchg
mov
mov
mov
push
mov
add
mov
popf
mov
test
sub
push
xor
jecxz
xchg
aaa
mov
xchg
mov
clc
xlat
jno
inc
sbb
pop
xchg
cmp
jmp
mov
decl
fbld
adc
inc
and
aam
pusha
mov
cwtl
sbb
imul
inc
and
push
lods
jmp
lock
lahf
rol
or
and
mov
sbb
shlb
jp
fiadds
sar
add
je
in
and
sbb
dec
add
jno
lcall
mov
push
sub
add
add
dec
outsl
leave
fdivl
inc
mov
push
inc
adc
dec
xlat
popa
push
pop
lahf
rcr
jne
adc
repnz
aam
adc
shlb
int3
and
fcoms
shlb
int
jns
ja
push
ret
js
jne
cmp
orl
cmp
push
rclb
enter
pushf
push
leave
je
es
push
inc
and
addr16
and
fidivs
and
mov
dec
pushf
dec
sbb
aam
daa
sub
scas
imull
loopne
cltd
mov
mov
lcall
sbbb
mov
add
in
add
jo
cmp
sub
mov
sub
cmp
gs
cmp
idivl
or
fidivs
or
loop
jl
iret
add
sub
pop
mov
adc
imul
lods
test
inc
push
and
adc
mov
sub
ss
xchg
or
sarl
adc
ljmp
cwtl
xchg
dec
ljmp
add
daa
xor
and
mov
mov
inc
lret
cli
insl
mov
sar
je
imulb
mov
add
or
and
add
or
insb
and
sbb
fwait
add
inc
mov
or
and
gs
dec
or
inc
je
das
dec
push
arpl
jo
sbb
pop
daa
sbb
or
and
mov
and
repz
add
sbbl
sbb
inc
mov
add
ficoms
filds
dec
and
fmul
mov
or
subb
pop
aaa
inc
add
adc
mov
xchg
mov
mov
mov
test
dec
push
xor
dec
fadd
cmp
jle
or
sbb
sbb
fiadds
mov
fchs
cmp
das
cltd
scas
or
or
xchg
insb
mov
push
cmp
mov
mov
dec
fdivrp
or
inc
repnz
pushf
jnp
push
shlb
dec
pop
insl
add
test
and
pop
mov
dec
and
mov
into
stos
xchg
repnz
pop
mov
iret
inc
leave
mov
outsb
and
jle
addb
mov
mov
xor
leave
sub
xchg
push
cmpsl
into
ret
cmp
int
adc
in
mov
cmpsl
xchg
mov
fs
rcrl
xchg
das
movsb
loopne
bound
cs
int3
xor
fstps
lods
test
mov
pop
loop
xor
inc
je
test
loopne
es
mov
xchg
out
cmpsl
jge
or
icebp
sub
inc
push
scas
test
mov
lcall
ja
negb
pop
loopne
test
daa
xor
push
add
bound
add
pusha
jno
ss
shll
cli
xchg
xlat
xor
dec
mov
and
push
add
push
pop
ss
push
adc
test
in
addl
jle
imul
pop
fstpl
cmp
and
inc
mov
cmp
mov
mov
daa
mov
xchg
inc
and
sbb
cmp
je
sbb
shll
scas
push
into
cli
jge
and
xor
insb
and
fldt
icebp
mov
push
out
lds
lock
call
mov
aad
xor
ss
dec
mov
adc
aad
or
data16
push
cmpsl
in
and
add
dec
cli
fsubrs
loope
jecxz
adc
mov
fdivs
orb
and
fiaddl
into
out
or
aam
loop
xor
jle
aas
sbb
pop
add
push
int3
and
add
es
arpl
mov
in
jo
fcompl
add
sarl
int3
lret
cmp
scas
sar
mov
add
fwait
iret
enter
out
orl
pop
mov
test
sbb
int
and
orl
adc
stos
cmp
add
and
inc
movsb
inc
cmp
pop
ret
add
ret
sti
add
mov
xchg
dec
fmul
push
cmp
mov
dec
add
mov
add
pop
xorl
lcall
test
adc
lret
lret
mov
mov
push
or
and
mov
add
push
mov
add
jge
cmp
mov
not
mov
xor
jo
mov
add
ret
stos
xchg
bound
in
pop
inc
fstl
orb
int
rorl
jg
add
push
or
cld
xor
add
cmpsb
mov
les
in
jnp
add
pop
test
sub
mov
popa
push
imul
dec
pop
inc
inc
mov
lcall
push
mov
mov
mov
das
mov
inc
add
sti
or
xchg
dec
add
push
adc
mov
xchg
insl
dec
rclb
stos
xchg
test
sub
cmpsl
add
add
push
mov
push
xchg
lret
add
fisttpll
int3
adc
push
add
aaa
inc
scas
das
push
xchg
lds
and
push
ja
cmp
and
mov
pop
cmp
mov
jae
jle
fwait
in
sbb
or
mov
inc
fistps
and
push
hlt
mov
and
orb
jp
jo
scas
jns
xchg
jbe
data16
ja
mov
aaa
dec
inc
fistl
xchg
push
lock
jmp
ljmp
push
out
loop
mov
es
or
js
cltd
cs
xchg
mov
and
nop
jo
or
jp
and
push
jp
inc
mov
pop
push
ja
es
add
inc
adcb
sbbl
stc
xor
and
popf
hlt
rcrl
cmp
pushf
or
mov
cmp
stos
push
mov
push
dec
adc
test
pop
dec
xchg
add
add
pop
cmp
mov
jbe
lahf
sbb
movsb
mov
stc
pop
sub
adc
test
or
dec
flds
inc
aad
fs
daa
inc
arpl
fdivs
xor
dec
sub
movsb
andl
sbb
sti
sub
jne
fldt
js
push
in
addl
pop
add
jo
lds
push
popf
stos
inc
je
loop
xchg
mov
ja
pusha
inc
stos
fistpll
ja
xchg
mov
adc
adcb
rcll
mov
aas
add
mov
lahf
sub
mov
push
lcall
sub
adc
inc
je
mov
orb
xor
xchg
stos
dec
aaa
mov
push
dec
add
mov
cmp
pop
test
inc
lahf
fldcw
cmpsl
sbb
inc
scas
add
dec
and
mov
xchg
pop
test
fistpl
sahf
clc
insl
or
sub
cmp
sub
mov
inc
xchg
mov
jne
loopne
jecxz
stos
xorl
inc
cmc
ljmp
add
sub
dec
push
outsl
inc
lods
in
lahf
sbb
lcall
jne
daa
and
je
lods
push
mov
push
int
cmc
shll
aad
push
mov
repnz
pop
test
cld
fs
ret
iret
jne
lds
push
mov
sub
xlat
adcb
and
rorb
inc
xor
lds
and
rolb
into
push
mov
addb
mov
mov
push
push
popf
cmpl
ret
mov
insb
aam
sbb
stc
mov
test
dec
pop
outsb
mov
sbb
das
or
int3
sub
adc
pop
xchg
cwtl
sbb
mov
inc
pop
mov
xchg
sbb
stos
rolb
dec
mov
ss
adc
and
pop
stc
sbb
mov
leave
pop
jnp
stc
push
jb
adc
shl
xor
cli
dec
iret
ror
test
mov
sub
lods
rcr
ja
inc
daa
xor
jmp
pushf
enter
xor
jo
mov
push
ljmp
roll
or
add
push
and
ja
or
fldenv
stc
xor
inc
push
and
inc
aas
and
and
adc
mov
imul
xchg
xor
xchg
rorl
or
jle
lcall
idiv
sbb
mov
push
cli
inc
scas
cltd
outsb
sbb
sbb
inc
cmpl
dec
and
outsb
arpl
outsb
or
fwait
insb
in
imul
iret
cmp
dec
es
mov
sbb
out
and
mov
ja
add
rcll
sub
fcoml
and
imul
mov
sub
dec
push
mov
nop
sub
or
movsl
aad
je
sbb
push
imul
loop
bound
push
adc
and
cli
jmp
rolb
inc
jge
xor
mov
out
stos
ret
cld
andb
jbe
adc
and
mov
pusha
jo
mov
add
addr16
xchg
cwtl
popf
ss
push
push
cmc
lock
add
mov
rolb
sub
push
and
adc
es
fidivrl
pop
cmp
adc
push
or
insl
inc
mov
subl
movsb
cmp
mov
jae
push
fisttps
bnd
mov
adc
test
in
fisttpl
cmpsl
lahf
lea
push
lret
push
inc
iret
pop
cltd
mov
adc
fsub
jle
mov
jno
mov
aam
jecxz
xor
mov
add
test
and
scas
xor
scas
ss
data16
cmp
sbb
ret
jmp
negl
push
jp
pop
mov
loop
shll
xchg
in
adc
mov
into
sub
sbb
test
mov
xor
mov
and
inc
das
sub
add
and
add
sbb
call
sub
add
adc
adc
inc
data16
pop
ret
cs
cmp
pop
mov
adc
adc
adc
sub
sbb
pop
das
mov
pusha
add
mov
add
mov
adc
in
mov
out
sub
aam
gs
or
out
dec
mov
rolb
xlat
jne
dec
inc
xchg
mov
xchg
adc
add
mov
rorb
jo
ja
jae
in
in
push
push
or
push
lock
add
mov
rcll
or
hlt
jp
xchg
test
ret
mov
test
aas
adc
xchg
imul
mov
adc
into
xor
adc
add
js
popa
sbb
xor
or
mov
mov
adc
cmpsl
mov
or
sub
jo
and
xchg
sub
ffree
dec
inc
hlt
adc
das
sub
mov
js
call
pop
xchg
fdivl
pusha
test
or
jbe
add
insl
fdivr
inc
in
jo
adc
sbb
repz
fxtract
or
push
sbb
and
jb
adc
inc
les
in
mov
push
mov
cmpsl
pop
int
jecxz,pt
push
mov
add
jge
push
in
in
mov
adc
dec
sbb
popa
add
or
jecxz
add
push
rcr
add
add
jecxz
add
out
lock
fcmovnb
cmp
adc
xor
push
shll
inc
iret
lret
iret
dec
fcmovnb
cmp
outsb
or
adcb
push
mov
sub
ds
add
sbb
push
and
sbb
cmpsl
cmpsl
hlt
sub
aas
out
add
and
mov
sub
dec
adc
or
aaa
or
xor
push
mov
pop
lods
or
mov
pop
add
push
iret
dec
mov
mov
ret
int3
add
repz
inc
lea
movsl
sub
out
cwtl
xchg
loopne
add
add
jo
inc
jne
sbb
shlb
addr16
loopne
push
int3
dec
rcrb
add
stos
mov
xchg
push
mov
enter
and
mov
in
or
or
jnp
les
add
jp
inc
in
iret
lea
and
mov
sahf
jl
pop
cli
cmp
sbb
std
outsb
xchg
mov
int3
jecxz
mov
and
dec
test
mov
jo
sbb
sub
mov
mov
xchg
fs
repz
testl
sbb
add
adc
scas
and
shll
push
mov
jl
mov
mov
sti
fiadds
pop
push
lds
adc
add
in
dec
mov
and
scas
mov
dec
push
mov
dec
ret
iret
sarl
loopne
add
pop
dec
aad
mov
bound
mov
mov
mov
jno
divl
lock
loope
xchg
pop
push
xchg
jne
fcomp
jmp
and
jo
add
jae
scas
movsb
pop
jl
scas
loop
push
xor
xor
push
mov
cmp
mov
mov
insl
jb
sbb
out
popf
jno
clc
push
scas
bsr
xor
sub
das
cmp
ret
dec
je
adc
inc
loope
inc
inc
sub
jae
or
fcoms
sbb
push
adc
push
into
orl
pop
xor
into
dec
xchg
jnp
mov
xlat
into
rorl
andb
clc
sub
pop
xlat
jmp
fwait
das
out
add
xlat
xchg
sbb
popf
inc
mov
or
add
push
out
aaa
pop
inc
addl
dec
cmp
sub
fmul
or
mov
js
mul
jp
loopne
and
xchg
fmul
pusha
mov
xor
mov
mov
notl
outsb
xchg
sbb
js
loope
mov
ds
out
sbb
inc
mov
or
sbb
mov
ffree
sbbb
push
and
pcmpeqd
out
aam
andb
les
pop
enter
lock
mov
mov
andb
pop
scas
adc
in
lods
cmpsl
fcoms
fmuls
pusha
mov
xor
xchg
lods
jecxz
mov
aas
add
and
mov
addr16
inc
ret
cld
or
push
fdivs
daa
lock
xchg
jecxz
jno
call
or
out
lock
dec
push
cmp
mov
aad
sbbl
dec
pusha
out
sbb
das
ja
inc
mov
adc
push
out
fildl
dec
mov
loopne
pop
scas
das
inc
xchg
sbb
and
rcrl
pop
lahf
outsb
es
cmc
xor
mov
sub
int
out
push
dec
imul
xchg
jg
arpl
lods
stos
loope
inc
inc
jnp
sbb
scas
mov
sbb
and
jmp
fiaddl
push
scas
push
push
dec
mov
and
pop
push
mov
xor
ja
jp
pop
aam
cmp
push
nop
pop
push
add
dec
es
or
jns
xor
add
daa
pushf
add
or
add
add
fcoms
ret
arpl
rorb
fiaddl
sub
insl
ret
xchg
lret
xchg
outsb
push
notl
ja
mov
xchg
ljmp
add
mov
push
and
mov
inc
clc
jns
mov
xor
das
or
ret
mov
repnz
jbe
mov
pop
les
add
fdivrs
xor
sbb
test
inc
jno
or
test
repnz
roll
fisubl
arpl
add
and
pop
inc
inc
fildl
cmpb
add
sub
ret
inc
ja
cltd
push
xor
pushf
pushf
jnp
inc
sarl
jb
lret
fstpt
and
js
idivb
dec
add
fwait
add
mov
sub
aaa
fwait
adc
mov
pop
mov
pop
add
jge
inc
icebp
lock
adc
mov
add
lods
js
sbb
push
push
xchg
int3
or
push
and
js
cltd
adc
rcll
jl
lahf
outsl
jge
push
jb
roll
scas
daa
lock
in
sbb
adc
add
push
ja
push
pop
pop
jo
fiadds
or
xchg
fldt
in
sti
lea
jbe
mov
adc
push
scas
jns
add
test
lea
pop
mov
int3
fwait
inc
cs
insl
insl
fildl
xor
sub
ja
idivb
mov
aaa
movsb
push
pop
and
int
fisttpl
ja
sbb
jecxz
in
add
je
fimuls
in
xchg
add
pusha
int
jne
jbe
out
iret
mov
mov
cmp
hlt
push
cmp
push
sub
loop
jne
cmpsl
movd
js
or
das
adc
lods
ja
lds
insl
aaa
add
pop
fcomps
int3
outsb
sbb
lahf
mov
mov
rcr
test
fstp
insl
ds
cmp
or
or
xchg
repz
js
xlat
pop
mov
testl
or
lcallw
sub
adc
ja
iret
scas
mov
jb
or
js
lods
jno
mov
mov
ss
daa
mov
sbb
rcrl
cs
mov
mov
retw
cmp
fimuls
xchg
push
icebp
push
das
js
xlat
add
rclb
mov
int
insl
jnp
imul
mov
imul
mull
in
int3
rcrl
mov
data16
add
int3
ljmp
and
dec
dec
int
outsb
fldl
out
inc
dec
sub
and
insl
jae
cli
outsb
and
pop
xchg
adc
test
or
fdivrl
pop
push
daa
sub
sub
xlat
mov
pop
inc
cmp
cmp
inc
push
push
scas
scas
es
out
xchg
adc
out
out
lods
jo
pop
add
ja
sbb
fsubr
push
cld
into
mov
cmp
insl
push
orps
mov
push
push
add
dec
push
int3
push
dec
mov
push
push
jne
jb
ja
push
add
repnz
add
mov
cwtl
xor
xor
stc
sbb
push
shll
or
shll
scas
ds
jbe
pop
mov
scas
cmpsb
movsl
push
sub
scas
insl
xchg
or
mov
sbb
inc
and
or
mov
scas
pop
jp
cwtl
push
pop
add
push
fistpl
sbb
sub
adc
fisubs
add
push
jl
xlat
clc
sbb
push
adc
popa
jge
rcrl
inc
add
adc
adc
scas
dec
inc
pop
idivl
das
out
pop
xor
adc
sbb
pop
outsb
jbe
mov
daa
dec
add
insb
add
push
pop
push
add
pop
jbe
pop
aaa
xor
pop
les
push
mov
into
push
ret
pop
lcall
xchg
fmuls
add
jmp
fildll
lods
imul
data16
sbb
imul
xor
lcall
mov
jne
sbb
mov
insl
or
aam
mov
jae
sbb
outsb
inc
pop
push
mov
in
scas
fdivs
fists
pop
test
add
inc
sbb
jp
popa
sub
lahf
in
cmp
fsubrs
mov
clc
cmp
loop
xchg
rorb
imull
inc
xor
incb
sarb
add
das
aam
inc
int3
mov
push
cs
or
push
inc
pop
sbb
and
ret
adc
push
imul
sbbl
test
mov
dec
cmp
jb
and
filds
dec
popa
leave
loop
jnp
popf
mov
push
mov
xor
pop
pand
or
push
mov
jg
out
scas
jp
dec
sahf
cmp
lock
pop
cs
mov
adc
bound
cmpsl
cltd
sub
cli
dec
add
add
shl
sub
mov
mov
sub
int3
incb
pop
push
sbb
mov
xor
xor
and
mov
jge
movntps
push
fsubs
pop
pop
pop
push
push
or
and
mov
sbb
pop
stos
test
push
and
insl
xchg
jbe
aas
aaa
dec
pop
das
enter
xlat
fs
hlt
xor
sbb
jle
push
ficoml
and
int
fisttpll
push
sarl
pop
push
jmp
rolb
sbb
add
loopne
movsb
xchg
ret
xchg
lods
ja
sub
or
cs
inc
pop
cmp
sub
sbb
push
add
xchg
add
ljmp
cmp
sub
pop
xchg
xor
cmp
ret
hlt
aaa
jl
push
dec
xchg
imul
test
jle
mov
adc
jp
nop
leave
push
cmpsl
adc
jmp
cltd
fldl
push
add
add
or
in
gs
lcall
or
pop
faddl
mov
pop
iret
lcall
out
pop
or
and
xor
push
shll
in
xor
jmp
outsb
cmp
call
fstl
sub
mov
or
sbb
outsl
sti
mov
int3
stos
out
cs
jl
rolb
dec
jae
pop
gs
stos
jo
fists
scas
push
add
insb
dec
jns
and
jno
push
mov
mov
popa
mov
jmp
xor
sbb
ss
popa
out
scas
add
ja
scas
gs
mov
or
push
or
loopne
or
sti
xchg
test
pop
xor
push
mov
scas
fs
das
orl
imul
dec
mov
rcr
jno
add
sub
xor
das
aaa
sub
fwait
push
in
aaa
dec
out
xor
xchg
adc
sub
pop
icebp
cmp
outsb
ret
ss
scas
ficoms
sbb
push
mov
das
cmp
mov
xor
aaa
mov
push
cmp
adc
mov
ja
and
rcl
testl
mov
mov
xor
lods
and
arpl
out
push
sub
inc
pop
add
loopne
cmp
xor
into
stos
clc
add
rclb
jp
pop
sbb
shrl
or
push
sub
pop
mov
sub
and
push
sbb
pop
inc
fistpl
and
jno
jg
shrb
add
mov
lods
and
or
push
xor
push
stos
push
xchg
push
es
outsb
xlat
inc
adc
fsts
pop
loope
and
insb
in
daa
xchg
or
and
jge
daa
sbb
or
pop
mov
adc
sbb
jbe
fsubrs
push
fcoml
prefetchw
adc
and
mull
sbb
adc
imul
sub
or
inc
add
rolb
cwtl
push
icebp
and
push
rolb
xor
pop
pop
inc
dec
out
test
adc
adc
mov
lods
popa
ss
mov
shll
inc
popa
mov
cmp
or
pop
sub
cmpsl
push
and
imul
enter
iret
movsb
addb
aam
pusha
push
sbb
scas
mov
cmp
and
xor
add
inc
fcoml
ja
add
ja
mov
sub
mov
fwait
inc
adc
jecxz
pop
adc
fcomps
mov
xor
loope
int3
adc
inc
sub
and
fsubrs
inc
push
push
sbb
mov
sbb
movsb
test
adc
or
inc
fnstcw
or
sbb
outsl
push
mov
insb
jno
lret
add
fnstcw
push
mov
hlt
xchg
clc
jle
and
mov
or
add
jns
inc
mov
pop
mov
ss
jle
jno
push
loop
int3
cmp
subb
or
leave
xor
test
cwtl
or
dec
lock
and
arpl
test
rcrb
cmp
push
jp
push
sahf
and
es
std
dec
jne
fildl
mov
loopne
cmp
sbb
mov
pop
cmp
addr16
mov
mov
adc
shlb
daa
pop
adc
pop
adc
or
lods
jmp
and
lret
and
jl
and
je
cld
mov
inc
and
push
cmp
movsb
push
sub
adc
add
in
sbb
push
imul
cmpb
sbb
mov
mul
add
push
pop
jbe
jno
dec
stos
dec
stc
js
mov
testl
and
push
je
push
jnp
and
inc
fisttpl
mov
adc
jmp
loop
pop
je
imul
arpl
stc
inc
xlat
jge
test
stc
sbb
addr16
mov
push
inc
rorl
add
in
mov
ret
and
enter
sbb
mov
rorl
fwait
push
push
jge
rorl
jl
and
adc
lea
adc
sbb
les
xchg
add
sub
mov
and
push
add
xchg
and
sahf
ss
jno
mov
movsb
jl
push
jecxz
push
movsb
mov
sbbb
out
lret
lods
add
sub
or
inc
xchg
fcoms
orl
and
cmc
adc
test
inc
int3
cwtl
sbb
sbb
cmpsb
pop
insl
popa
push
js
loopne
test
jp
add
and
push
incl
clc
xor
insb
filds
xor
dec
dec
arpl
sbbb
mov
rclb
xor
and
add
dec
cmpsl
or
mov
out
mov
inc
addb
fwait
add
and
subb
and
aas
fmull
rcrb
orb
mov
dec
cmpb
inc
leave
adc
insl
xor
fdivl
stos
adc
xchg
inc
xchg
or
shrl
cwtl
xor
jo
jnp
mov
ds
mov
mov
dec
inc
mov
cld
mov
mov
mov
pop
mov
pop
sub
sbb
outsl
out
push
pushf
fmuls
push
add
roll
xor
es
and
es
xor
cmp
sahf
int3
daa
sub
arpl
ljmp
sub
inc
test
cmp
aad
sbb
pop
iret
cmp
sub
mov
push
sar
push
xchg
insb
or
es
pop
pop
divb
stos
rolb
adc
jo
mov
xlat
adc
inc
je
add
stos
aam
stos
fs
push
and
bound
lcall
lods
sbb
daa
lret
iret
push
insb
fsubrs
or
dec
or
mov
je
sbb
xor
rolb
insl
push
push
xchg
jns
out
mov
fdivs
or
add
inc
stos
ljmp
es
test
pop
dec
je
iret
add
movsl
sbb
rolb
mov
mov
repz
jle
xchg
les
sub
adc
hlt
sub
repz
push
bound
or
add
test
inc
xor
or
add
call
movsl
adc
mov
shlb
pop
test
lock
cmp
adc
jbe
js
jle
mov
test
scas
push
cmp
xchg
iret
and
jae
add
js
les
lcall
fadd
and
cli
pop
lods
cmp
add
in
popf
sub
adc
jae
xchg
mov
scas
inc
cmp
add
jp
jno
pop
or
mov
iret
push
jmp
or
jge
cltd
pop
movsb
dec
add
sahf
ljmp
sbb
pop
lahf
pop
xlat
mov
push
ret
out
mov
jo
ljmp
sbb
push
mov
out
je
cmpsb
pop
inc
aas
outsl
xor
fucomi
pop
lods
inc
xlat
cs
cmp
dec
hlt
test
daa
xor
sahf
mov
dec
fmuls
mov
xchg
sbb
add
sub
mov
addr16
adc
xchg
push
sti
xchg
add
xor
add
gs
mov
add
arpl
dec
mov
sbb
add
push
rorb
fsubl
add
je
jp
dec
das
push
test
cmp
fisttpl
dec
pop
js
call
loopne
and
sbb
xor
subb
test
es
push
or
aam
or
outsb
shll
inc
aad
enter
xor
xor
add
loopne
gs
idivl
sub
add
loop
add
popf
jo
lods
pop
inc
and
ja
lods
adc
dec
xchg
mov
inc
cmp
cltd
push
mov
test
or
push
add
lret
sub
scas
add
sub
add
enter
mov
mov
daa
bound
and
pop
add
push
notl
sahf
sbb
shrl
mov
or
xor
mov
inc
adc
and
add
lds
xor
cld
shrl
pop
in
add
push
inc
xor
jne
jl
push
hlt
mov
dec
inc
dec
mov
mov
call
adc
cltd
lds
jmp
or
and
mov
mov
sbb
push
jb
mov
xor
outsl
mov
jb
mov
adc
sbb
sarl
jg
pop
rol
mov
adc
xor
adc
adc
add
or
pop
fs
flds
sub
add
or
sub
pop
xchg
iret
inc
test
inc
imul
add
lds
or
and
mov
sbb
out
scas
lahf
and
and
xor
inc
enter
aad
add
xchg
cld
mov
jnp
and
jp
push
ja
jl
aas
mov
or
pop
inc
sbb
iret
in
aam
mov
sbb
push
movsb
aad
or
push
sbb
push
addb
js
jae
testl
int
pop
rcll
lret
and
jnp
rcrl
dec
aam
inc
loop
int3
addr16
jnp
dec
mov
sub
xor
in
xor
popa
xor
cmp
bound
jge
popf
xor
cli
js
cli
push
mov
daa
xchg
or
inc
sub
or
rorb
xchg
xor
pop
xor
push
xchg
or
mov
lods
add
pop
cvttps2pi
adc
push
and
push
or
inc
add
outsw
inc
out
pusha
test
scas
data16
lods
es
scas
inc
daa
and
lret
lea
fmul
popf
push
xchg
movsb
arpl
xchg
bound
xlat
dec
sub
cmp
scas
adc
and
push
mov
shr
loope
and
mov
and
push
jmp
jecxz
loope
test
gs
sbb
divl
xor
jnp
or
insl
pop
aad
sub
sarb
loop
xlat
or
inc
ja
testl
pop
and
or
das
fsubrs
and
or
pusha
shrb
dec
divb
test
push
lcall
jb
mov
jp
add
enter
pop
arpl
shlb
xlat
mov
xor
and
inc
sub
movsb
jbe
xor
das
test
arpl
inc
and
jo
mov
mov
mov
lods
xlat
jge
sub
or
sbb
addr16
rclb
les
test
cwtl
sbb
popl
mov
inc
scas
inc
int3
jle
cwtl
xchg
imul
jmp
ljmp
movsb
xchg
add
push
aaa
pop
hlt
xor
jnp
pop
xlat
mov
add
mov
fbstp
je
daa
push
push
xlat
rorb
bound
mov
adc
rcrl
dec
inc
int3
or
int
mov
add
jae
test
ljmp
ljmp
daa
call
mov
jle
push
and
andb
bound
xchg
pop
add
enter
xor
mov
adc
call
pusha
add
inc
cmpb
outsb
sub
push
inc
cmpsb
add
sub
pop
fildll
sub
adc
lock
jmp
push
lds
aam
mov
mov
adc
inc
cmpsl
and
mov
mov
jnp
xchg
dec
iret
outsl
cmp
jp
pop
cmp
xchg
xchg
pop
dec
mov
sahf
hlt
sub
nop
add
add
mov
test
mov
test
cmp
jae
outsb
jp
xchg
inc
aas
imul
lcall
adc
sbb
dec
mov
inc
cmp
scas
out
out
lods
pusha
repnz
cmp
xor
daa
into
mov
ret
sub
stos
add
imul
in
call
cmpsl
jle
sub
pop
pop
cmp
shll
push
adc
add
cmp
add
mov
stos
in
inc
cmp
cmpsb
lret
movsb
stos
js
inc
pushf
sub
fildll
cmp
push
xchg
and
shrl
add
movsb
inc
addb
cld
inc
dec
ret
faddl
out
and
push
hlt
adc
mov
or
mov
sbb
xchg
push
repz
shlb
jle
int
mov
push
push
add
fisubrs
add
and
mov
jae
cld
fwait
push
adc
outsl
mov
das
sub
and
add
and
mov
adc
ljmp
cmp
xchg
mov
out
sbb
rcrb
aas
ret
aam
add
iret
and
push
adc
popa
aaa
adc
dec
add
daa
daa
mov
popa
int3
cmp
test
das
js
loopne
in
cmpsl
int
call
js
mov
xor
dec
pop
aam
add
or
sbb
sub
addl
aas
sub
sahf
mov
jl
repnz
rcll
in
jno
int
mov
add
xchg
or
push
hlt
fdecstp
enter
rorb
mov
cmp
pop
inc
push
push
xchg
mov
imul
pop
adc
outsl
or
jle
out
push
lahf
in
push
push
xor
addr16
mov
jnp
cmc
add
xchg
or
and
pcmpeqw
and
adc
outsb
sbb
fsubs
rorb
pusha
sti
mov
sbb
sbb
das
adc
pop
test
add
mov
add
shrl
movsb
loope
stos
in
inc
xlat
andb
stos
shll
pop
adc
and
stos
fcomp
test
push
cmp
lods
or
sub
lea
jl
mov
inc
push
je
dec
mov
jo
add
in
add
orl
enter
sti
cmpsl
es
test
popa
inc
and
ljmp
shl
inc
mov
fnsave
je,pn
scas
adc
dec
test
mov
test
mov
mov
mov
stc
cwtl
ret
inc
adc
jmp
arpl
adc
je
sar
loope
sub
inc
aam
frstor
jle
xor
imul
mov
mov
fldenv
dec
add
fadd
jmp
jmp
fmull
inc
sbb
xor
fsubl
pop
shr
cmp
sub
dec
inc
adc
fcomi
or
es
xchg
das
mov
mov
sbb
mov
push
add
sub
lret
mov
inc
pop
push
f2xm1
out
push
add
test
cltd
mov
loopne
leave
aaa
and
xor
fstl
add
adc
xor
mov
mov
adc
popf
orb
sbb
mov
add
push
lock
and
js
jmp
jo
xchg
test
insb
push
adcb
stos
mov
cmp
add
mov
aas
add
stos
xchg
jmp
dec
jmp
pop
jl
shlb
xor
adcl
inc
xor
mov
pop
xchg
add
mov
inc
je
inc
adc
jns
push
mov
out
mov
adc
iret
fs
mov
inc
fnsave
cltd
out
add
loop
sub
push
ljmp
out
mov
les
add
cmpsl
xchg
outsl
mov
popa
insb
cmp
je
mov
int
fdivl
sbb
cmc
inc
lds
jo
add
mov
add
push
push
add
fidivrl
sahf
pop
xchg
imul
mov
mov
xor
call
add
cs
add
xor
pop
xchg
push
cs
inc
and
xor
rorl
fcmovne
xor
adc
inc
or
jmp
jge
push
jb
arpl
mov
jns
sti
push
mov
test
push
mov
dec
xchg
call
adc
fiadds
inc
aaa
jl
push
out
loopne
add
push
mov
fists
pop
push
sub
jl
cs
rcll
jge
pusha
xchg
bound
stos
lcall
rep
stos
pop
sub
inc
cltd
orl
jge
cmp
jp
mov
xchg
lret
scas
popa
dec
add
jg
push
sbbb
and
sub
or
sub
mov
imul
jl
push
push
mov
cmp
lds
adc
push
pusha
jge
jp
mov
or
ja
xchg
and
xor
xchg
xchg
sub
dec
xchg
add
mov
pop
mov
lock
int3
outsb
fucomip
and
orb
loopne
fdivrl
xor
xchg
lods
xchg
xchg
adc
mov
xchg
dec
aam
mov
add
xchg
nop
data16
nop
je
mov
nop
xor
ret
add
sbb
aad
cmpsl
jp
add
cmp
mov
fiaddl
sbb
inc
dec
cmp
push
jne
mov
or
fdivr
sub
aad
movsl
push
sbb
out
xchg
add
adc
jecxz
cmp
pop
mov
push
mov
inc
mov
lcall
test
dec
pop
add
sbb
cli
add
or
add
mov
adc
and
push
stos
push
andl
das
mov
outsl
daa
sub
js
and
sbb
out
subb
dec
mov
cmp
push
rcll
mov
sub
scas
mov
push
enter
xchg
cmc
and
mov
add
rorb
xchg
jb
inc
sbb
add
dec
push
lds
dec
adc
push
clc
movsl
jp
ret
stos
loop
or
sbb
mov
or
mov
shll
pop
out
or
mov
mov
add
add
adc
cmp
or
cli
xorb
addl
mov
mov
testb
add
dec
sub
stos
sahf
fs
push
inc
out
and
and
pop
sbb
jp
icebp
add
sub
lcall
adc
push
ja
pop
or
add
cmp
mov
ja
inc
mov
test
mov
pop
and
ss
and
inc
mov
push
mov
or
mov
add
sub
mov
std
and
sub
outsb
fsubs
xor
mov
add
mov
cmp
mov
cmp
push
loope
iret
les
aaa
loopne
lcall
adc
sub
rol
jns
pop
xor
mov
xchg
add
push
roll
and
sbb
dec
mov
jmp
test
and
shlb
fnstsw
fisubrs
in
loop
or
jge
daa
mov
int
sub
add
test
adc
adc
mov
sbb
shrl
out
adc
sbb
fildl
sub
xchg
push
mov
or
xor
enter
sub
xchg
push
sub
xor
pop
mov
push
pusha
inc
in
in
jl
cmp
dec
xchg
mov
imulb
int3
push
outsl
inc
das
pop
sub
jno
enter
daa
fdivrl
hlt
mov
pushf
mov
pop
inc
inc
add
outsl
ret
lahf
inc
push
ret
push
je
cld
outsb
add
lods
daa
das
scas
and
or
mov
inc
add
and
mov
movsl
or
test
and
popf
sub
loop
mov
and
test
loope
sub
pop
imul
es
js
and
shrl
fnstsw
sub
xchg
adc
out
das
movsl
dec
push
pop
add
pop
loopne
dec
and
sbb
and
mov
es
dec
hlt
and
mov
ja
adc
loope
ret
xchg
mov
and
add
mov
out
mov
out
call
aad
push
loopne
das
dec
daa
push
add
icebp
push
sub
outsb
ja
or
pop
xchg
sbb
sub
mov
xchg
mov
es
cld
push
inc
mov
ds
shlb
mov
loop
js
jmp
cmp
push
sbb
push
xchg
movsb
pop
xchg
sbbb
push
cmpsb
adc
out
popa
mov
push
scas
sub
mov
add
and
cmp
and
push
in
jnp
test
enter
mov
imul
clc
data16
cmp
daa
mov
cld
dec
js
sub
push
std
add
ja
push
fnsave
in
add
jnp
jb
icebp
jl
push
sbb
ja
das
jne
xchg
ss
incl
mov
and
push
fidivs
xchg
add
push
das
cmpsl
sub
xor
sbb
push
subl
jne
pop
mov
pusha
add
pushf
xchg
lcall
orl
adc
fs
sbb
nop
add
adc
test
lret
add
and
and
add
pop
sub
fcoms
or
jne
fsub
sub
pop
aad
cmp
imul
in
xchg
das
add
or
scas
je
dec
jo
ja
mulb
jle
adc
jbe
orb
push
pushf
add
mov
cli
inc
sub
mov
test
adc
cmpl
lods
stos
push
popf
sti
addb
faddp
fidivs
mov
inc
inc
xchg
pop
sbb
add
add
xchg
add
cmp
pushf
in
sbb
pop
enter
xchg
gs
inc
aam
gs
dec
push
mov
nop
sub
ret
lods
in
pop
shrl
sbb
dec
addb
mov
daa
jb
sub
xor
mov
rcll
shll
lock
push
add
movsb
jp
jns
mov
adc
xor
jno
aaa
iret
add
add
and
cmp
pop
pop
test
mov
out
lret
test
lods
jbe
push
lods
xlat
imul
ficoml
shr
pop
xorb
mov
popaw
or
push
mov
in
jp
and
ljmp
adc
push
inc
xchg
aaa
sub
or
mov
int3
and
add
jno
scas
fmuls
outsl
or
fadds
rcl
sti
jno
or
cmp
xor
popf
shll
push
fcoms
fisubl
rorb
cmpsb
call
and
outsb
aad
loopne
jge
je
inc
add
add
mov
es
xor
mov
mov
cmp
shlb
out
sub
lods
and
pop
mov
mov
pop
mov
dec
inc
btc
lods
in
mov
and
popa
add
and
push
and
add
pop
inc
pop
inc
pop
adc
je
push
repz
push
push
movsl
inc
sub
cmp
insl
cmp
add
adc
aam
add
sarl
push
repnz
sbb
inc
lock
sbb
movsl
mov
loopne
xchg
js
or
sub
sub
push
jae
lcall
push
sbb
push
outsl
jo
mov
jp
repnz
ja
mov
cli
mov
xor
push
mov
add
ja
andb
das
fcoml
push
stos
mov
in
stos
addl
movsb
outsl
or
fisubrs
mov
add
es
push
shll
sub
mov
adc
cwtl
mov
int3
shl
lods
push
inc
push
out
add
popf
push
xor
push
jp
fisubs
add
fiadds
daa
daa
push
clc
shlb
fildl
fwait
push
testb
add
mov
aam
jns
das
jno
xor
sub
inc
mov
mov
mov
jne
xchg
enter
cmpsb
stos
mov
dec
pop
inc
daa
jp
ficoml
dec
pop
sub
xlat
cmpsb
testb
enter
add
add
idivl
inc
nop
dec
out
or
and
cmp
xor
add
loope
pushf
xchg
in
fisubs
das
pop
sbb
xchg
sub
lret
cli
xchg
mov
sbb
test
mov
popa
jg
xchg
adc
stos
inc
aad
gs
or
dec
lods
cmpsb
popf
mov
mov
add
jo
fcoms
push
adc
dec
push
mov
pop
mov
scas
xor
dec
popf
das
es
aam
ljmp
xor
jo
and
sbb
inc
cbtw
jl
stc
jecxz
sarl
push
or
jl
sub
loop
mov
xchg
data16
push
into
inc
popa
les
pop
shll
out
adc
push
xlat
push
mov
adc
or
adc
mov
cmp
subb
and
pop
add
add
jbe
mov
leave
subb
push
adc
in
je
lods
mov
xor
xor
rolb
cs
add
sub
out
bound
and
orl
cmp
push
mov
mov
sub
cmc
test
fsubl
mov
out
adc
pop
push
in
mov
dec
pop
clc
sub
and
lahf
lds
xchg
repz
mov
sub
xchg
jo
insl
and
jge
fidivl
cltd
jge
out
push
call
cmpsb
fwait
stos
stos
xor
cld
lcall
mov
iret
popf
out
les
sub
test
testb
insl
push
fildl
cmp
and
popa
push
sbbb
lea
mov
aaa
outsb
fistl
pop
sub
lods
mul
lds
fdivl
sub
mov
xlat
xchg
inc
iret
mov
fmuls
shlb
mov
xor
mov
push
pop
lods
shlb
ds
jmp
shlb
ret
and
pop
mov
or
addr16
shll
ret
adc
int
outsl
inc
xchg
mov
ljmp
outsb
or
out
or
mov
sbb
fs
clc
iret
pop
dec
add
or
xchg
arpl
dec
shll
fs
scas
lods
mov
es
pop
adc
out
out
mov
mov
xchg
scas
mov
ds
add
subb
add
fimuls
xchg
sbb
loopne
and
lock
insb
loop
frstor
add
mov
fcmovb
xor
fcomps
xchg
add
jnp
lds
push
cs
shl
cmp
in
pop
push
push
rolb
xor
mov
roll
sbb
add
mov
inc
faddl
pop
sbb
xchg
dec
pop
cmp
lock
cmpsl
sub
adc
sub
mov
push
insl
jnp
dec
mov
arpl
xlat
stos
loopne
cwtl
pop
jo
inc
js
dec
lods
hlt
cld
gs
cmp
shrb
sti
xor
jl
pop
add
sbb
push
sbb
xchg
add
cmp
in
popl
jns
inc
push
cmp
mov
or
ffreep
jo
stc
push
mov
cmp
pop
scas
fs
sbb
lock
inc
or
adc
dec
dec
testl
jb
out
jmp
add
icebp
loope
ror
rolb
shrl
xorl
adc
and
or
add
push
je
lock
js
iret
mov
bound
mov
xchg
sbb
xchg
dec
sub
mov
xor
jbe
rcrb
js
mov
out
clc
sahf
lret
adc
ljmp
dec
and
push
test
mov
sahf
add
push
cmp
nop
cmp
imul
das
aas
sub
xlat
add
adc
mov
fnsetpm(287
xchg
adc
cmp
dec
mov
inc
popf
mov
adc
adc
jp
sub
fisubrs
notb
popa
pop
inc
add
xchg
mov
lds
jp
imul
insb
pop
and
inc
rcr
loopne
mov
xchg
push
out
fnsave
dec
inc
insl
xor
addr16
clc
or
push
and
in
mov
dec
cmp
pushf
jle
jl
es
jns
enter
aad
out
and
add
mov
mov
das
in
pop
cmpsl
daa
repz
in
jg
add
rcll
aam
jnp
or
xchg
into
addl
or
and
and
outsl
les
adc
jnp
mov
call
xor
out
mov
icebp
mov
cmp
and
add
es
pop
in
sub
ja
flds
pop
dec
push
push
icebp
insl
pop
mov
andl
ja
xor
push
daa
pop
loop
mov
ds
xor
and
add
xor
xchg
in
in
mov
mov
mov
int
adc
ret
rcrb
cmpsb
roll
cmp
cmc
jbe
orl
in
push
sbb
les
xchg
and
imul
pop
call
call
testb
dec
lds
jbe
and
insb
stos
jb
jo
loope
sbb
push
and
sarl
adc
xor
jge
ljmp
jg
jge
movsb
xchg
rcr
pop
mov
hlt
cmp
in
or
sbb
add
mov
bound
faddl
xchg
mov
addb
dec
sub
ja
test
or
inc
fs
adc
int
cltd
out
mov
daa
repnz
rol
in
scas
xchg
dec
decb
xlat
add
xor
xchg
in
lods
jecxz
mov
js
repz
lret
test
jmp
mov
loopne
pusha
mov
stc
pmaxsw
mov
add
cmc
fs
mov
mov
insl
xor
add
sub
in
fsubrs
xor
add
pop
insb
mov
fiadds
in
pop
push
pop
cmp
int3
mov
fildll
fwait
inc
or
sbb
cs
addr16
pop
cmp
shlb
and
ja
xor
in
sub
cmp
jecxz
mov
add
hlt
sbb
mov
mov
xor
je
push
dec
inc
mov
imul
inc
in
addb
xor
jecxz
loope
or
mov
inc
adc
dec
lods
imul
or
and
rcrb
je
xchg
stos
inc
popf
or
adc
adc
dec
xchg
mov
out
movsb
dec
rol
dec
lock
add
cmp
or
bound
scas
or
aas
dec
aam
xor
loopne
cld
cmpsb
rcll
adc
cli
xor
sub
scas
mov
add
hlt
dec
pop
les
jo
faddl
add
and
adc
add
in
dec
stos
aaa
sbb
push
xor
jecxz
mov
jb
cmp
lock
adc
sub
ret
adc
jg
mov
into
push
lock
push
xchg
dec
xor
fsubrs
adc
inc
fists
lahf
andl
sbbl
and
sbbl
bound
mov
mov
mov
jecxz
ss
add
cld
stc
insb
cvtdq2ps
cmp
adc
sub
and
in
dec
xchg
sub
mov
sbb
jmp
add
adc
adc
push
xor
repz
inc
cmp
icebp
lcall
stc
inc
es
ja
xchg
adcl
cltd
fs
pop
add
sti
int3
in
sub
push
cmp
xor
int
addb
bnd
les
mov
add
lods
pop
daa
sarb
outsb
ja
add
mov
sbb
adc
xchg
stos
and
mov
shrb
xlat
push
fldenv
or
loopne
sub
inc
rol
inc
sets
aad
hlt
lock
or
mov
jo
sahf
push
or
out
mov
mov
repz
jbe
adc
imul
and
inc
outsl
pop
and
dec
loopne
das
addl
sub
push
fcmovu
sti
cmpl
and
xor
mov
shl
outsb
pop
or
and
mov
incb
cmp
pop
and
lods
je
inc
loope
lret
out
lea
aaa
mov
push
cld
roll
faddp
and
mov
ret
out
adc
add
sub
sub
sbb
xor
pop
dec
cmp
sub
mov
xor
fdivl
adc
mov
fnstenv
xor
inc
hlt
add
jno
and
ret
ffree
sbb
pop
mov
gs
pop
xlat
inc
add
add
or
ret
cmpsl
sub
pop
dec
and
lock
adc
lods
sub
retw
push
adc
jle
dec
mov
enter
mov
lret
imul
das
mov
push
inc
add
subb
mov
sub
and
enter
in
mov
es
test
rorb
mov
sarb
dec
mov
mov
sub
std
mov
or
inc
jp
je
xor
cmp
mov
scas
clc
sub
sub
xor
or
fabs
sub
sar
push
fists
sub
cli
movsb
cmp
mov
push
sbb
insl
nop
push
fimuls
aad
xor
fcoml
pop
ret
insl
xor
mov
in
jl
jo
cmp
lods
and
pop
into
shlb
fstl
enter
pop
shll
cmp
shl
sub
jb
mov
out
xchg
xor
or
xchg
add
cs
int3
add
xchg
aad
sub
jge
xor
fidivrl
xor
jmp
das
outsl
shl
lcall
and
daa
xchg
stos
into
adc
dec
es
push
add
jae
jp
push
push
dec
sbb
in
int
dec
ret
in
divb
mov
inc
add
scas
hlt
sbb
repz
dec
mov
loopne
dec
imul
push
xchg
add
and
lods
loope
loopne
pop
xor
adc
mov
hlt
loopne
mov
shll
mov
and
xor
and
xor
ret
or
int
lock
mov
inc
ret
inc
hlt
call
mov
fcompl
pop
iret
inc
xor
xchg
add
sbb
lods
mov
mov
mov
hlt
rcrl
cmp
xlat
jne
in
je
pusha
out
add
adc
mov
mov
in
jmp
adc
ret
inc
xchg
pop
rolb
int3
rolb
repz
add
lcall
int
addr16
or
dec
outsl
ret
mov
add
push
into
inc
fadds
jmp
pop
lock
or
mov
and
cmpl
sbb
or
pop
pop
dec
mov
mov
pop
in
scas
push
rcrl
in
int3
pop
jbe
inc
mov
dec
int3
rcrb
iret
push
inc
sub
mov
jns
rolb
ret
mov
inc
push
push
mov
add
push
rol
pop
xchg
or
sbb
aad
cltd
fs
mov
mov
mov
cmpb
iret
xor
xorl
pop
aam
pop
mov
mov
add
js
adc
adc
cmp
push
scas
adc
sbb
bound
sub
in
push
les
test
movsb
pusha
adc
mov
sti
inc
shlb
aas
cmp
lods
sbb
or
outsl
jbe
int3
mov
dec
subb
inc
sbbb
bound
fdivrs
sbbl
pop
mov
sbb
call
cmpb
fadds
ret
mov
fwait
negb
aaa
aas
dec
in
les
or
cli
inc
scas
adc
test
mov
cltd
scas
add
add
lret
mov
push
mov
test
je
lret
dec
mov
inc
call
jns
jo
push
push
arpl
js
cmp
popa
callw
insl
adc
mov
stos
pop
fisubl
inc
push
add
jle
jno
dec
out
sub
xchg
pop
push
mov
aam
pop
jl
fiadds
lret
or
jge
dec
lods
rcr
insb
sbb
add
enter
ss
out
and
cmpsl
mov
adc
xor
stc
or
loopne
adc
add
aas
push
mov
mov
pop
jmp
in
add
mov
or
xchg
inc
rcrb
xchg
xchg
mov
arpl
ret
adc
jo
std
sbb
subb
shlb
xchg
sub
jns
sub
jg
pop
dec
push
fidivs
movzbl
pop
dec
sbb
loope
pop
pop
ss
ds
or
push
in
or
adc
hlt
adcb
sbb
jnp
ss
pop
push
or
insb
or
fldenv
fs
adc
es
test
sub
add
js
pop
aas
sti
test
test
and
imull
cmpsb
and
sti
mov
adc
mov
inc
sub
sbb
dec
test
mov
fxch
cmp
int3
and
mov
daa
in
and
test
pop
les
popa
out
adc
jbe
iret
xor
and
xchg
cmp
push
mov
add
clc
dec
and
je
and
into
and
popf
popf
icebp
dec
call
adc
adc
aas
pop
push
jns
push
add
add
popf
sub
add
inc
cld
cltd
xchg
int
xor
pop
push
xchg
jnp
cmp
adc
lcall
xchg
xor
test
pop
mov
cmp
or
aas
add
outsb
sarb
xchg
in
je
xor
ja
xchg
std
aas
les
pop
or
fiaddl
filds
test
cmp
cli
outsb
and
scas
pop
xchg
or
jne
loope
sub
icebp
cmp
cli
arpl
das
mov
mov
or
repz
jmp
cmp
ss
cmc
adc
sbb
xchg
inc
jmp
mov
adcl
cmpb
inc
sub
cs
int3
xchg
stos
jp
adc
andb
mov
xchg
add
jp
stos
fidivs
add
repz
mov
mov
pop
push
sub
xor
loopne
mov
sub
mov
xchg
ja
in
xor
inc
mov
dec
cwtl
adc
or
push
cmc
and
mov
add
decb
mov
data16
aad
mov
call
cli
stos
mov
insl
mov
mov
aaa
mov
movsb
out
add
invd
sbb
mov
xchg
call
sub
mov
mov
sub
mov
mov
loopne
stos
loopne
mov
push
push
dec
mov
lcall
mov
in
loopne
ja
xor
rcr
mov
in
push
pop
dec
adc
or
and
addr16
dec
sbb
sbb
fwait
cmpsl
dec
into
insb
in
or
repnz
je
repnz
aam
xchg
xlat
loope
es
aam
pop
loope
mov
test
push
inc
pop
popa
orb
stos
push
cvtpi2ps
fisubl
loopne
jl
sub
shll
jbe
mov
aad
test
fnstenv
sbb
jo
jmp
adcl
mov
test
adc
mov
add
xor
add
push
mov
lcall
pop
incl
xchg
imul
push
add
fisttps
cmp
adc
and
push
and
int3
mov
push
add
shlb
dec
mov
jp
aad
mov
cmpsb
loopne
out
add
push
jle
ja
inc
outsl
insb
xor
mov
xor
sub
jl
cs
mov
je
sbb
cmp
jo
push
clc
imul
ja
add
bound
add
faddl
iret
and
cmc
fcoml
call
out
dec
add
out
sti
xchg
int
into
test
push
sub
pop
xor
mov
fisubl
push
adc
mov
push
hlt
mov
ds
popa
sbb
rcrl
and
into
add
and
dec
cmp
mov
mov
addr16
xchg
pop
inc
inc
and
sub
int3
scas
scas
add
pop
arpl
repz
and
or
adc
scas
add
popf
fdivrs
xor
gs
and
sub
add
adc
inc
mov
cmp
adc
jecxz
lods
or
test
fisttps
in
add
xor
add
stos
and
inc
rol
pop
repnz
xlat
or
adc
sub
and
and
mov
jmp
push
jb
ljmp
inc
int
sub
mov
sub
and
jbe
aam
lcall
rcrl
or
insl
dec
insl
pop
add
insb
loope
paddusw
pusha
inc
stos
mov
in
jnp
fildll
lea
test
fcomp
aad
jge
adc
pop
stos
popa
push
add
pop
cltd
movsl
push
mov
push
or
lock
inc
jns
add
js
mov
xor
mov
and
inc
push
ds
sarl
iret
jecxz
or
mov
enter
add
sbb
and
add
test
daa
or
cmpsl
add
dec
add
mov
adcb
sub
or
push
ret
xor
out
mov
movsb
stos
sub
add
fldcw
pop
push
inc
sbb
in
inc
pusha
cmc
xor
and
or
add
mov
or
adc
out
pop
mov
ja
and
add
les
push
xor
outsl
push
pop
or
adc
test
int
subl
sahf
repz
mov
xchg
push
sbb
jo
xchg
cmp
lret
dec
push
jp
jl
lahf
inc
add
cmc
mov
xlat
mov
mov
push
xor
xlat
sbb
iret
cld
jo
xor
adc
jle
push
add
xchg
mov
les
pop
inc
jg
test
cmp
sbb
pop
ret
jp
mov
sti
stos
test
rcrb
add
insb
push
add
ja
pop
sub
push
gs
jb
shrb
cmp
mov
mov
pop
jg
jle
sti
push
push
arpl
out
and
insb
add
jmp
mov
and
mov
mov
call
pop
xchg
and
inc
add
sbb
add
adc
lahf
or
or
sbb
or
add
jmp
mov
sbbb
ss
mov
mov
mov
inc
cmp
outsl
sub
mov
add
add
movsl
and
xchg
jge
mov
or
jp
mov
loopne
stos
daa
pop
icebp
js
ljmp
insb
xchg
push
daa
mov
pop
adc
mov
ss
adc
pop
out
mov
jmp
and
sub
inc
sub
shrl
int
sbb
mov
pop
xor
sahf
loope
add
mov
je
jecxz
add
pop
cwtl
add
cmpsl
ja
and
inc
pop
cli
sub
or
dec
adc
and
std
xchg
add
inc
daa
lods
add
add
sub
add
ja
in
enter
fnstcw
lcall
mov
pusha
pop
int3
xor
cwtl
adc
mov
xor
add
add
andb
mov
xorb
xchg
mov
xchg
jg
add
enter
add
pop
add
lcall
loope
mov
sub
notl
mov
cli
in
adc
jmp
and
push
mov
or
push
inc
adc
insl
push
mov
les
test
push
pop
popf
jl
test
out
loopne
pusha
jnp
add
jl
es
cmp
push
jae
xchg
sbbb
and
xchg
inc
les
adc
inc
daa
jae
mov
or
jbe
adc
negl
and
test
jg
outsb
and
mov
addr16
cmc
jg
clc
insl
jnp
call
jae
xchg
cmp
cli
test
jns
jle
addb
lar
xor
sub
or
xchg
repz
cwtl
sahf
or
ficompl
mov
cli
hlt
and
dec
xor
movsb
repz
mov
and
dec
sti
xchg
inc
cmp
or
inc
fcomp
call
and
xor
nop
xor
mov
pop
outsl
push
mov
cwtl
adc
in
inc
and
or
in
mov
std
dec
sub
es
ja
inc
nop
jb
push
sub
out
add
outsb
push
stc
fldenv
push
rcrb
outsl
sbb
outsl
rcl
jl
add
mov
lcall
fcoms
dec
loopne
inc
ljmp
jnp
jnp
loope
mov
pop
es
in
inc
scas
xor
test
lcall
mov
inc
inc
rclb
dec
pop
jmp
xchg
xor
xor
pop
jmp
out
jo
adc
mov
cmp
push
mov
pop
in
popa
shll
sub
adcb
adc
js
gs
in
mov
ret
lret
jo
inc
xchg
es
push
dec
mov
adc
add
or
pushf
jne
sbb
jl
call
rclb
jo
push
lock
xlat
and
ds
or
ret
add
lahf
inc
int
dec
cmpsl
sub
cs
add
ss
lahf
add
push
shl
jbe
inc
aad
mov
ljmp
adc
shrb
aam
popa
push
lcall
inc
sub
loopne
adc
add
push
inc
movsb
push
sbb
push
push
pop
cmp
loopne
outsb
std
sub
test
sub
ror
add
xor
push
add
add
mov
add
add
subb
push
pop
xor
andl
icebp
pop
pop
add
cwtl
negb
stos
mov
mov
xor
add
sub
adc
sub
and
fisttpl
lds
lods
dec
dec
je
scas
popf
and
daa
cmp
test
stos
mov
sbb
and
je
mov
jns
cs
xor
adc
aam
stos
loop
pop
loopne
shll
mov
or
xchg
test
mov
scas
cmc
icebp
push
in
arpl
add
nop
inc
sbb
and
pop
adc
inc
sub
xchg
incb
pusha
inc
popa
mov
inc
rorb
and
rolb
notl
pushf
lods
push
vmwrite
mov
jp
add
push
jo
add
outsb
cmp
mov
and
sahf
dec
popf
mov
jno
pop
mov
cmpsb
mov
add
and
stos
sbb
push
aad
sub
add
movsl
xor
xchg
xorb
dec
inc
xchg
call
les
add
and
les
xchg
and
or
cmp
out
sub
cmc
or
lods
movl
adc
loop
ret
push
std
mov
iret
sbb
iret
push
mov
lcall
inc
inc
add
js
add
and
pop
aam
aam
adc
cmp
mov
inc
inc
test
mov
or
push
cmp
gs
push
dec
push
out
daa
sub
push
or
pop
test
add
nop
mov
cmp
std
scas
inc
aam
pop
loope
cmp
pop
leave
inc
xor
sti
jne
lret
sub
test
flds
shrb
mov
jp
adc
and
int
add
jbe
add
bound
sbb
sahf
and
fisttps
xchg
cmp
sahf
xchg
jnp
cltd
movsb
popa
ja
or
mov
xchg
jnp
xchg
mov
cmpw
movsl
mov
cmp
mov
mov
adc
sbb
out
iret
pop
sub
bound
pusha
cli
mov
mov
dec
cli
into
sub
jnp
jp
outsl
jg
fbld
shrl
xchg
mov
fstps
push
pop
out
popf
inc
xorb
fcompl
in
mov
dec
sub
sub
dec
add
sbb
popa
or
xchg
pop
scas
fstpl
mov
mov
mov
shrb
jno
add
insl
or
lods
and
push
add
cmp
sbb
cwtl
mov
cmp
rsm
mov
push
pusha
and
arpl
xchg
jnp
mov
out
add
das
push
movsl
in
xchg
push
test
mov
push
xchg
and
cmp
movsb
gs
add
pop
mov
adc
lock
and
sbbb
dec
daa
or
adc
sub
adc
ljmp
and
xor
ljmp
ret
jp
int
jge
ror
gs
add
xchg
xor
jp
imul
pop
outsb
faddl
xchg
mov
call
das
cmp
das
sub
mov
push
iret
dec
push
lock
adc
xchg
jns
sbb
or
lahf
cli
push
sub
sub
insb
dec
adc
adc
adc
test
xor
cmp
je
mov
test
cli
fiaddl
inc
inc
lods
pop
sub
pop
add
dec
mov
add
sbb
xor
test
mov
pop
js
pop
push
mov
sub
xor
inc
jae
dec
xor
inc
xchg
add
xchg
cwtl
mov
add
sub
xor
scas
in
ds
gs
inc
shll
sahf
mov
adc
nop
add
popf
cmp
dec
cmp
sub
bound
repz
inc
pushf
xchg
xor
add
lcall
and
lret
sub
cmp
jp
sub
pop
ss
je
push
sbb
loopne
dec
dec
add
dec
pop
negb
add
shlb
dec
inc
roll
dec
or
inc
shlb
sbb
sub
mov
sub
addl
aaa
gs
inc
mov
and
shlb
cmp
gs
lock
bound
int3
xchg
dec
cmpsl
into
or
inc
lds
mov
lret
or
shl
sbb
pusha
pop
jecxz
xchg
loop
mov
jp
stc
stos
rorl
sbb
jnp
ss
cld
xorb
add
and
sub
loopne
pop
outsl
xor
push
cmp
push
xor
arpl
adc
push
adc
mov
call
in
and
cmp
ds
adc
flds
stos
lcall
popf
and
fucomip
fisubs
inc
and
mov
pop
inc
dec
mov
mov
push
ss
adc
add
jo
mov
xchg
push
lds
or
dec
inc
loopne
dec
lahf
lret
and
dec
dec
or
loop
mov
stos
loopne,pt
jp
xchg
iret
pop
insb
addr16
lods
roll
sub
push
popf
test
stos
fidivl
jle
insl
inc
lds
push
ds
sub
rolb
es
jo
jo
dec
movsl
add
xor
or
sbb
add
inc
adc
lds
ljmp
jo
jbe
pop
pushf
sbb
push
sub
test
sub
mov
sub
mov
and
cmp
popa
je
mov
lahf
mov
xor
cmp
aam
jle
or
pop
mov
sbb
outsb
insl
or
jne
push
sahf
mov
fbstp
or
popa
imul
nop
push
add
mov
sbb
clc
lahf
loope
mov
movsw
lock
adc
mov
loope
push
andb
enter
mov
pop
out
dec
adc
mov
movsb
mov
or
mov
add
mov
adc
aaa
add
cmp
jno
inc
add
ja
cmp
mov
mov
dec
scas
xchg
lret
jle
data16
and
fs
xor
out
and
lret
pop
sub
cmp
rcrl
pusha
je
mov
aad
push
in
repnz
insb
sbb
xor
jmp
or
xchg
cmp
push
mov
push
sti
sbb
sbb
fisttpl
dec
xchg
pop
ja
daa
daa
stos
es
fcomip
or
adc
add
sub
out
shll
push
xchg
shll
mov
ja
sbb
imul
or
ret
add
test
lret
imul
xchg
jl
inc
xchg
pusha
inc
test
cmc
lret
ret
shl
shlb
aad
loopne
fldcw
mov
push
adc
movsl
fdivrp
jmp
or
iret
out
and
push
adc
sbb
dec
je
mov
movsb
mov
mov
or
adc
pop
and
mov
add
pop
lcall
fdivs
fisttps
add
add
out
dec
lds
sub
imulb
push
mov
jne
add
add
xor
aam
xchg
xor
pop
roll
xlat
pop
sub
adc
mov
movsb
push
int
adc
sub
sub
add
bound
sub
push
mov
movsb
jge
mov
add
in
xchg
popa
ret
mov
add
cmpsl
clc
push
inc
scas
mov
add
outsb
push
movsl
mov
rolb
xchg
int
cmc
call
mov
iret
es
xchg
clc
movsb
mov
iret
mov
mov
mov
popa
adc
popa
nop
xchg
lods
loopne
add
leave
adc
ret
ret
in
jecxz
sbb
loopne
cmp
dec
sbb
xorb
cmpb
imul
xor
add
int3
cmp
mov
push
adc
or
imul
pop
mov
or
add
faddp
and
filds
je
test
mov
and
mov
add
mov
adc
mov
sbb
adc
rolb
sub
add
pop
inc
lds
lods
bound
sti
xor
sbb
jg
or
add
cmp
sbb
clc
and
mov
mov
stos
jbe
ret
and
out
xor
dec
sbb
adc
mov
jo
ss
mov
nop
mov
lret
mov
insl
repz
adc
aam
sbb
je
andb
xchg
mov
add
push
iret
jo
les
add
push
pop
mov
or
adc
add
mov
scas
fs
xor
lret
xor
filds
rorb
jnp
xchg
out
adc
dec
fisttps
mov
sti
adcb
pop
pop
daa
push
jecxz
or
cld
lret
out
push
xlat
add
in
lods
pop
daa
nop
stos
ss
sarb
test
sti
das
dec
inc
inc
ja
ljmp
add
mov
lcall
mov
mov
outsb
fdivs
xor
aad
enter
shll
inc
sbb
insb
lods
rclb
xor
pop
es
mov
fisttps
and
test
add
sub
push
add
mov
mov
push
pop
pop
dec
faddl
dec
mov
and
das
movsb
loopne
lret
mov
and
scas
aad
push
rcrb
out
and
mov
mov
xchg
push
iret
xor
dec
lds
jnp
pop
sub
jne
lods
cmp
movl
les
or
sbbb
stc
adc
sbb
push
mov
jp
pop
inc
or
jb
mov
fdiv
adc
jb
movsb
stc
mov
dec
xor
xor
xor
inc
scas
inc
xchg
andl
sbb
lea
and
sbb
pushf
and
mov
add
scas
adc
cmp
mov
gs
and
push
adcl
adc
pusha
inc
aas
add
push
add
scas
scas
adcb
clc
jmp
dec
movsl
push
sbb
push
cwtl
or
mov
adc
mov
inc
xor
xor
pop
adc
js
aad
movsl
arpl
cmp
dec
inc
mov
dec
in
sbb
jno
sub
pop
fildl
jno
xor
in
andl
jo
inc
jg
sbb
mov
and
and
pop
pusha
ret
dec
hlt
sbb
xchg
stos
inc
push
pop
icebp
sarl
fbld
loope
aaa
movsb
cld
push
dec
out
xor
imul
out
and
or
adc
in
cmp
enter
xchg
rep
xchg
pop
or
scas
and
add
and
ds
aaa
cli
ss
cwtl
ret
lds
shlb
adc
xchg
fdiv
push
cmp
inc
push
mov
add
or
je
mov
jmp
jle
fcoml
int
jb
inc
je
iret
fmull
stos
lock
xlat
add
int3
or
fwait
inc
subb
add
insl
xchg
cltd
les
xchg
push
into
bndstx
pusha
push
cwtl
popf
add
jne
push
leave
addb
out
loopne
add
sbb
adc
jmp
lahf
jmp
js
adc
aas
sahf
ss
call
or
mov
addb
sub
ljmp
bound
mov
leave
sbbl
test
push
add
test
fisubrl
fisttpl
sub
cmp
enter
gs
adc
sti
das
ss
and
out
or
sbb
jle
mov
ret
add
pop
pop
inc
sbbb
test
mov
xchg
test
inc
int
fs
xlat
pusha
adc
push
xor
jne
sub
das
addr16
pop
or
imul
push
sbb
xor
movsb
jecxz
or
push
xchg
test
mov
mov
push
inc
sbb
sbb
or
xor
sub
cwtl
dec
adc
add
je
mov
xorl
mov
test
lock
adc
ja
rclb
adc
cwtl
add
push
push
push
aad
lds
push
xchg
popa
cmp
shlb
push
and
arpl
and
mov
push
pop
pop
push
xchg
xorb
jne
pop
pusha
push
mov
mov
adc
stos
lods
mov
xchg
and
lock
shll
loopne
fwait
sbb
leave
xchg
mov
fs
ja
xor
push
push
pusha
cwtl
adc
xchg
dec
xchg
test
jo
or
or
mov
lock
mov
xchg
divb
add
add
shll
add
inc
pushf
add
xor
inc
xchg
and
ror
fwait
sub
adc
inc
int3
adcb
mul
jge
lock
jbe
push
xor
push
xchg
pop
incb
mov
int3
and
pop
xor
push
rcll
or
mov
cmp
inc
sub
cmp
jle
out
inc
jl
mov
jle
dec
and
insb
or
out
push
dec
inc
lahf
cmp
mov
loope
add
xchg
fcmovbe
fcmovb
dec
pop
adc
out
mov
xor
mov
lods
sbbb
add
sub
sbb
xchg
je
push
add
in
cwtl
mov
lods
mov
cli
mov
mov
aaa
xchg
popa
popa
scas
pop
test
push
ficoml
lcall
sbb
mov
mov
aas
es
outsl
out
aaa
dec
xor
dec
xor
in
sub
sahf
inc
ret
push
adc
sahf
sub
stos
mov
cs
sahf
sarl
cmc
stos
xchg
call
lods
add
and
pop
push
add
pop
sbb
push
les
bound
mov
fstpt
stos
ljmp
mov
xchg
and
inc
clc
adc
fsubl
fistl
js
pop
xchg
pop
les
movsb
bound
orl
lods
aas
dec
adc
iret
sbb
leave
and
inc
call
adc
ljmp
push
add
mov
aaa
jmp
repnz
sbb
movsl
jge
stos
push
outsl
pop
fwait
xorl
addb
cmp
xchg
cmpsb
mov
das
pop
rcll
stos
repz
pop
fsubrl
nop
push
stos
js
jno
fimull
cmp
je
or
sbb
int
push
inc
cmp
or
mov
in
movsb
loopne
push
sbb
imul
sub
fcmovne
add
sub
jo
add
mov
hlt
sbb
pop
xchg
or
xchg
arpl
jmp
out
mov
add
mov
adcb
sub
push
lods
push
sub
or
jge
test
test
inc
addb
mov
cli
bound
jnp
outsb
pushf
xor
clc
lds
mov
jb
loopne
and
sbb
idivl
out
xor
fcmovne
push
je
out
js
push
xor
movsb
mov
lods
dec
in
add
jle
jne
add
xor
cld
pop
pop
inc
pushf
test
jp
mov
adc
inc
xchg
repz
and
scas
adc
inc
je
sub
jecxz
or
outsb
add
or
les
mov
adc
outsl
jle
daa
lds
stos
addr16
mov
adcb
fcmovnbe
aas
sbbb
sbb
xchg
sub
fistps
sbb
sbb
and
xor
mov
cmp
icebp
stos
inc
jp
jne
lods
loop
popf
daa
outsl
adc
aam
loop
cmp
sbb
sub
push
lock
cs
mov
add
cmp
xchg
add
orl
addr16
seto
xor
inc
adc
push
sub
push
mov
fstpl
push
insb
jecxz
insb
rcll
sub
or
xchg
imul
iret
jmp
iret
test
iret
mov
xlat
pop
sbb
and
mov
aam
or
cli
rcll
aam
faddl
out
je
aam
pusha
pusha
xchg
paddusw
cmp
loop
mov
xchg
mov
jg
icebp
and
fisttps
or
add
ss
adc
sbb
sub
fisubrs
inc
mov
sbb
add
imul
int
or
pop
repnz
daa
pushf
sahf
inc
sti
icebp
sub
sub
nop
cmp
mov
mov
or
ljmp
xchg
jmp
std
sahf
aaa
popf
or
push
daa
rolb
xlat
in
test
popf
cmp
iret
xlat
jbe
sub
push
add
jge
ja
in
push
shll
outsl
mov
mov
into
push
push
mov
inc
push
push
pop
addl
and
mov
repz
dec
mov
test
mov
mov
es
pop
gs
xchg
lea
outsb
sub
xchg
push
loope
inc
jg
pop
imul
call
or
add
and
xor
jo
sub
cli
pop
aaa
test
adc
mov
xor
daa
inc
test
pop
sub
andb
icebp
add
and
lahf
xorb
mov
cs
js
cmp
cmp
shll
ljmp
popf
xor
fwait
add
add
mov
pop
sbb
dec
or
insb
xchg
mov
insb
mov
mov
sub
fbstp
pop
and
sbb
and
push
mov
push
pusha
sbb
rolb
jno
or
and
sub
sbb
pop
jo
pop
mov
push
orl
xor
out
sbb
jg
xor
orb
inc
push
aaa
xchg
cmp
inc
sbb
out
sub
inc
sub
pop
add
jp
mov
mov
push
test
rcll
push
into
orb
fwait
add
scas
adc
int3
cmpsl
mov
pop
mov
out
dec
inc
add
icebp
test
mov
jnp
mov
jb
mov
xor
shrl
cltd
xor
in
aaa
sub
data16
scas
or
cld
fcoms
pop
or
pop
mov
add
xor
sub
cmpsl
mov
pop
stos
jg
dec
or
enter
add
sub
into
and
sarl
lret
inc
shll
pop
jbe
push
adc
adc
add
fxch
or
push
lcall
push
cmp
cmpsb
mov
insl
mov
mov
cmp
adc
data16
rclb
add
or
add
sub
test
nop
movsb
dec
psrad
and
int
add
loope
addr16
adc
lahf
mov
and
mov
mov
lahf
lret
test
popa
clc
rol
xor
xchg
out
pop
loopne
push
sbb
adc
repnz
and
add
test
arpl
and
rclb
fbstp
aaa
mov
mov
inc
adcb
xor
xchg
rcrl
insl
ret
mov
test
add
add
js
mov
hlt
adc
push
dec
inc
addb
and
sbb
add
push
dec
scas
push
xchg
movsb
lods
add
lods
or
ret
or
pop
mov
xlat
sbb
adc
xchg
in
mov
add
dec
add
adc
test
sbb
test
sub
insl
and
inc
int3
and
push
cltd
and
mov
or
sub
add
mov
jg
xor
adc
pop
gs
enter
cld
iret
arpl
pop
mov
inc
xor
jle
sub
cmpsb
addr16
aas
je
movsl
test
or
push
and
addr16
add
subb
in
mov
or
push
pop
push
xchg
xchg
lcall
pop
rcrb
mov
mov
aaa
loope
arpl
or
add
add
stos
mov
fadds
add
sub
and
mov
or
sbb
lock
adc
dec
inc
adc
lcall
inc
add
sub
lods
push
push
and
andb
loopne
adc
jne
adc
es
inc
popa
sub
test
cmp
adc
clc
sub
xchg
ss
push
xor
gs
push
fs
cld
dec
xor
pushf
add
movsl
xor
das
inc
and
loop
and
data16
push
lds
push
dec
adc
out
imul
les
inc
aad
int
adc
add
insl
and
ljmp
mov
add
adc
in
fwait
gs
fmuls
fadds
jns
push
lret
std
push
lods
adc
pop
movsb
ret
das
adc
push
xor
cltd
loope
push
sbb
push
fstpt
add
std
and
test
rorl
xlat
ror
hlt
mov
dec
imul
mov
jp
inc
leave
int3
add
and
push
push
xor
add
add
dec
rorb
dec
cmpsb
jp
cltd
add
test
sbbl
inc
xchg
push
pop
call
adc
add
adc
pop
mov
push
push
dec
add
and
cmp
sbb
faddl
jns
cmp
stc
and
outsb
xchg
add
push
cmp
pop
cmp
call
test
loopne
mov
mov
push
aam
push
daa
mov
sub
movsl
mov
out
out
jo
cmp
adc
cmp
imul
adc
das
jecxz
lods
loope
mov
cmp
adc
aas
test
pop
inc
scas
pusha
add
jp
add
sbb
mov
repz
lret
adc
fisttps
daa
repnz
arpl
shll
sub
xchg
add
mov
xchg
lea
lahf
add
dec
and
and
push
xlat
jo
inc
mov
adc
jne
rcrb
push
pop
ljmp
jb
jne
sarl
and
jb
pop
push
movsb
xor
xchg
mov
shlb
andb
cmp
imul
mov
test
je
or
mov
push
push
mov
or
and
pop
sub
xchg
mov
add
iret
dec
mov
nop
imul
bound
icebp
jnp
jnp
jp
adc
inc
shlb
push
ja
test
fwait
adc
mov
xor
lret
popa
add
xor
sub
cmp
lret
andl
aas
mov
stos
fcom
pushf
rcrl
mov
cltd
xor
pop
pushf
hlt
adc
or
push
mov
lods
lock
es
xchg
jl
bound
xchg
and
mov
test
or
and
and
adc
adc
dec
inc
lahf
fsubrp
add
iret
shlb
in
jae
push
dec
dec
stos
push
or
add
mov
sbb
aaa
adc
mov
cmpsb
into
ss
fdivrs
sbb
and
push
lret
imul
mov
mov
and
pop
mov
xchg
or
pop
or
mov
leave
addb
daa
xorb
ja
adc
add
add
fucomi
imul
ja
jmp
cmp
mov
outsl
jl
popa
sbb
shll
jl
and
sbb
mov
mov
in
and
fsubr
inc
sahf
and
outsl
in
insl
leave
imull
xchg
mov
xchg
push
iret
mov
loop
arpl
es
je
add
clc
frstors
sub
pop
shrb
test
add
xchg
add
or
xchg
or
push
mov
jmp
scas
fldl
cli
jle
dec
and
sub
insl
js
dec
movsb
sub
sbb
cmpsl
loop
xchg
sets
test
pop
mov
cmpl
add
adc
mov
cmp
ss
pusha
pop
pop
and
sti
or
dec
leave
fildll
out
jle,pn
ret
testl
out
test
imul
push
pop
or
andb
mov
mov
test
xor
mov
addr16
xchg
sbb
jnp
jnp
jbe
daa
mov
movsb
lods
fsubl
loopne
push
pop
cwtl
stos
cmpsl
inc
divl
sbb
into
std
sahf
jbe
sbb
aad
push
pop
adc
jae
pop
stos
ja
loope
orl
and
lahf
push
aad
testl
push
shrl
and
ror
nop
lret
mov
jae
xor
dec
imul
xlat
lcall
xchg
prefetchnta
or
mov
cmp
push
cs
fidivrs
iret
cmp
jle
sbb
xchg
mov
lret
cs
and
sub
sub
addr16
mov
jge
iret
gs
aaa
sbb
addb
pop
ja
lds
dec
into
in
xor
in
jnp
bound
add
dec
push
pop
xchg
add
cmp
sbb
jo
or
sbb
dec
in
dec
inc
xor
xchg
and
sub
add
push
into
adc
xor
xchg
jmp
sub
pop
or
push
xor
into
lea
inc
push
ja
pop
adc
test
fisttpl
add
mov
sbb
js
jae
rorl
lahf
and
popl
jg
inc
iret
sub
test
insl
cmp
iret
mov
mov
or
arpl
push
inc
adc
jae
in
mov
mov
pop
das
mov
adc
imul
addl
and
xlat
popa
stos
and
mov
xchg
add
jno
stos
pop
das
test
dec
add
xchg
adc
push
addb
add
sub
add
les
jnp
jecxz
sub
fldln2
mov
cmp
rclb
jp
je
dec
cmc
xor
mov
inc
mov
xor
js
lcall
ds
add
cmp
outsl
push
subl
cmpb
push
sub
ds
push
push
push
or
jae
or
xchg
ret
and
stc
mov
lahf
sub
mov
dec
into
mov
push
je
js
cmpsb
jl
add
shrl
jne
std
roll
fsubs
xor
inc
subb
rcl
jge
add
xchg
inc
and
push
in
adc
pop
push
and
fwait
cmp
fsubrs
fs
sbb
sub
scas
xor
test
int3
sub
lods
arpl
push
into
sbb
pop
xlat
sub
add
lea
jecxz
sub
jmp
test
sbb
xor
pop
outsb
and
mov
mov
adc
insl
xchg
loopne
xor
pop
inc
add
xor
jecxz
push
xchg
sub
or
pop
add
push
and
test
ret
in
cvttps2pi
and
adc
cmpsb
outsl
adc
xor
jo
or
pusha
movsb
js
mov
push
dec
add
lods
sub
sbb
push
add
xor
jecxz
lcall
scas
scas
pop
pop
jl
jmp
or
in
arpl
daa
jg
sub
test
adc
je
test
sub
sub
out
test
sub
jo
dec
inc
js
out
inc
lock
cmc
cwtl
inc
sbb
out
mov
mov
ret
sbb
inc
repz
insl
out
inc
cwtl
mov
sbb
pusha
cmpsl
push
imul
xchg
sub
scas
mov
dec
xor
lods
in
mov
sbbb
movsb
xchg
mov
roll
and
sbb
cmp
mov
or
cmp
or
outsl
adc
cmp
outsb
and
cmp
push
push
and
jbe
movsl
jb
and
out
ja
or
jno
inc
or
and
and
lods
jmp
in
pusha
nop
sub
cltd
or
fisubs
fsubs
xrelease
fistps
sbb
xor
push
pop
xchg
mov
stos
or
jne
out
sub
ss
fldt
inc
adc
lock
xchg
or
js
shrl
adc
pusha
fdivr
and
scas
xchg
fistl
or
push
cmp
lahf
adc
fstps
xor
and
add
cwtl
cmp
or
data16
fisubrs
div
xchg
or
aaa
adc
mov
jnp
pop
into
sub
jmp
mov
or
push
mov
das
mov
fstpt
lcall
mov
xchg
pop
divps
ja
mov
xor
jae
fcom
scas
sahf
pusha
xchg
dec
fcompl
mov
pop
leave
cmp
jecxz
sbb
imul
rcl
and
ror
ret
or
pop
loopne
mov
inc
jge
xchg
sub
sub
jne
fcomps
test
and
popf
adc
jle
and
and
pop
push
xor
je
xchg
orl
jno
add
or
xchg
aaa
ss
or
andb
rclb
push
push
call
adc
test
mov
call
into
das
mov
sub
xor
xchg
cmc
xchg
jne
test
push
loope
rol
pop
icebp
mov
xor
sub
dec
test
sbb
lahf
dec
ficomps
sub
cmp
xchg
jmp
cmpsl
outsl
or
and
add
lds
in
pop
imul
gs
cld
mov
les
divb
dec
out
ds
dec
cmp
imul
fsubrs
jo
mov
mov
and
add
pop
add
js
mov
mov
push
roll
inc
adc
stos
dec
leave
xchg
fsubrl
mull
pusha
outsb
xor
sbb
movsb
mov
testl
mov
and
xchg
neg
inc
lods
lea
push
mov
fs
imul
shrl
mov
inc
mov
dec
or
shl
popa
ret
test
cltd
mov
dec
pushf
out
add
rolb
sbb
push
dec
arpl
push
je
jecxz
icebp
hlt
add
lds
mov
inc
sbb
pop
add
outsl
dec
add
dec
jb
xchg
les
mulb
lahf
pop
adc
pop
shlb
into
mov
push
mov
pop
repz
adc
mov
xchg
cmp
int3
dec
push
addr16
cmpsb
xor
push
int3
inc
mov
bound
into
popa
inc
cmp
mov
out
loope
mov
push
dec
out
adc
repz
and
lcall
push
subb
add
hlt
repnz
sub
add
or
xor
xchg
aas
or
inc
dec
into
scas
mov
add
jecxz
sahf
shlb
repz
outsl
adc
insl
push
iret
into
sahf
shrl
xchg
test
adc
pop
pop
pop
add
pop
movhps
pop
stos
mov
bound
frstor
into
int
out
popf
add
js
lahf
call
std
mov
mov
js
add
mov
lea
mov
add
gs
stos
sbb
stos
jg
jbe
dec
mov
pop
push
into
push
mov
lret
pop
add
or
or
xor
sub
cmp
leave
ret
push
jg
pop
push
addr16
mov
mov
aam
das
xor
jl
xlat
xor
hlt
test
mov
and
mov
notl
ret
or
in
sbb
mov
cmp
dec
addr16
mov
sbb
call
sbb
xlat
adc
insl
inc
rcl
adc
mov
mov
xor
aaa
pusha
mov
xor
xlat
lods
pusha
movsl
cmp
adc
sub
imul
dec
int3
and
sbb
mov
jl
lcall
mov
and
scas
sti
mov
popa
ret
pop
inc
mov
addr16
sub
stc
sub
or
sbb
adc
adc
fs
das
adc
or
aad
sti
sub
rcrl
add
flds
add
iret
loopne
inc
mov
push
jmp
scas
add
ret
lret
aam
or
push
xlat
shrl
mov
notl
lret
push
mov
cmp
sub
pop
mov
cmp
push
pop
push
mov
aam
inc
sbb
adc
inc
cmp
cmpl
or
cmpsl
outsl
movsl
das
data16
pop
pop
arpl
mov
inc
dec
lods
jnp
inc
push
lret
bound
imul
sbb
out
cli
arpl
mov
adc
es
mov
jbe
iret
out
pop
outsb
mov
jo
ss
lahf
and
das
pop
shrb
push
imul
push
sbb
pushaw
jbe
mov
sbb
daa
add
hlt
popf
sub
sub
pop
mov
xchg
xlat
or
dec
scas
or
xrelease
mov
fldl
lea
push
out
cmp
jle
lea
call
sub
into
sahf
rol
enter
lea
aaa
and
arpl
mov
xlat
pop
mov
imul
jmp
ss
das
add
adc
test
ss
bound
hlt
daa
shll
push
xor
and
jo
cwtl
cmp
inc
push
adc
sbb
mov
ds
mov
mov
lods
jne
idivl
pop
fmul
pop
push
add
sub
movsb
cmp
xchg
xchg
mov
and
sub
sub
add
mov
fmul
je
pop
pop
mov
gs
jb
push
adc
jno
sub
inc
mov
push
mov
pop
inc
mov
pop
sub
xor
sub
xchg
daa
mov
push
stc
cmp
popa
mov
scas
mov
loope
add
pop
or
add
push
push
sbb
jge
mov
inc
in
insb
fs
push
or
jle
fwait
imul
or
bound
lahf
idivb
insl
mov
add
push
lock
aaa
out
adc
sbb
iret
fwait
imul
sbb
add
jmp
push
sbb
in
xchg
lods
cmp
sbb
push
pop
jecxz
xlat
mov
cmp
push
xor
dec
popf
sbb
std
add
add
pop
mov
js
movsl
gs
xorl
insl
into
cmp
imul
aam
pop
pop
lods
add
sti
mov
lea
pop
sub
and
xor
cmp
sbb
sti
jle
xlat
arpl
fdivs
arpl
add
sub
fsubs
jmp
xchg
fdivp
insl
add
cmp
aaa
fstp
fmuls
lret
add
adc
jge
fnsave
shlb
cmpsl
inc
xor
mov
sbb
insb
fldenv
pusha
popf
mov
mov
or
dec
sbb
daa
outsl
cwtl
loope
dec
adc
add
or
or
subl
das
or
in
shlb
lcall
andl
dec
jp
mov
imul
not
xchg
mov
add
fisubs
cmp
push
rolb
cmpsb
mov
mov
cmp
mov
dec
mov
mov
pop
push
add
mov
in
push
je
test
inc
pusha
mov
xchg
push
clc
add
mov
jo
mov
loop
stc
pop
mov
add
mov
int3
mov
xor
dec
or
adc
inc
add
sbb
push
add
jmp
je
lret
pop
fnsave
mov
cmpsb
sbb
test
xor
or
push
sub
ret
mov
lret
stos
mov
ljmp
ds
scas
cmp
insl
sbb
mov
dec
popl
std
inc
push
push
xor
mov
mov
xchg
insl
xchg
adc
mov
push
fst
add
pop
std
add
cltd
xor
xchg
test
fdivr
or
inc
dec
sub
mov
scas
jnp
sub
add
inc
sub
push
incb
inc
jg
inc
mov
fadds
daa
inc
dec
jae
xchg
fwait
mov
pop
rorb
mov
pop
jl
sub
mov
dec
fwait
inc
or
jecxz
test
add
mov
mov
and
ficoml
mov
push
push
adc
aas
lahf
movsl
stos
mov
xchg
fsub
xchg
loopne
loope
ret
and
push
sbbb
out
pop
fs
out
mov
pop
lret
movsl
mov
repnz
jae
ljmp
fistpl
sbb
fcmovb
mov
cmc
outsl
fistl
pushl
pop
pusha
xor
je
hlt
cmp
scas
push
insb
es
imul
add
popf
les
scas
stos
popa
pop
jle
in
pop
popf
mov
add
sub
add
stc
mov
lods
fisubrl
inc
add
mov
mov
mov
test
jmp
shrb
ja
bound
stos
and
mov
pop
inc
add
mov
aam
cmp
add
cmp
push
mov
lea
xchg
mov
mov
jge
imul
sub
push
push
cmpsl
fldt
ss
mov
popa
pop
and
pop
add
xor
lods
xchg
fisubrl
faddl
cltd
inc
sub
repnz
pop
xchg
inc
mov
mov
sbb
mov
push
inc
stos
sbb
insl
fildl
pop
push
pushf
fistl
enter
sahf
popa
test
adc
xchg
fs
cmp
jae
lods
mov
pop
xchg
xor
add
inc
les
xchg
fwait
dec
or
inc
sti
push
gs
in
mov
mov
hlt
xchg
inc
jle
add
fisubrl
add
mov
and
pop
mov
std
cmpsl
cmp
pop
mov
out
pushf
data16
mov
jecxz
mov
je
jg
xchg
mov
sub
call
mov
jno
fstpt
mov
sbb
aas
mov
lcall
inc
pop
loopne
sub
ret
fdivrl
inc
cltd
or
xchg
into
xor
das
mov
cmpsb
call
popl
in
mov
cld
movsl
mov
imull
test
pop
fdivrs
pop
pop
sbb
jb
mov
mov
cmc
pushf
lea
test
sbb
dec
mov
sbb
push
outsb
enter
addl
jge
outsl
pop
mov
sbb
push
dec
rol
lcall
and
pop
mov
sub
daa
test
sub
mov
test
testb
ret
jle
icebp
sbb
sarl
arpl
pusha
loopne
inc
popf
in
cmp
lfs
es
mov
call
push
xlat
add
int3
pushf
fnstcw
rcrb
test
ja
fildl
fiadds
jmp
testl
mov
xor
inc
addr16
loope
sahf
or
call
mov
mov
scas
sahf
mov
xlat
pop
xchg
outsb
sysenter
leave
data16
sbb
je
outsb
insl
push
js
adc
adc
cld
push
xor
lods
stos
inc
cmc
push
hlt
insl
loopne
dec
sahf
imul
or
sbbb
test
iret
aaa
dec
dec
imul
lock
adc
in
in
insb
sub
fwait
mov
mov
jnp
sbb
sub
mov
sbb
ss
pop
mov
sbb
or
shll
jo
das
jbe
and
shl
cmp
test
hlt
int
daa
pushf
mov
cmp
pop
mov
sbb
fmull
nop
adc
in
faddl
sub
scas
cmp
push
inc
inc
add
dec
sarl
or
js
add
adc
hlt
xlat
sub
stos
lahf
js
mov
sbb
xchg
pop
pop
add
adc
shlb
mov
adcl
mov
lea
and
cmpxchg
inc
jnp
xchg
addb
incl
add
jge
mov
test
adc
pushf
cmp
mov
inc
push
fdivrl
stc
push
jno
out
xor
push
sbb
jmp
fisubs
je
cmp
push
enter
shr
sub
adc
mov
scas
loope
sbb
mov
das
sub
sbb
outsl
testb
test
jg
add
push
movsb
mov
and
cmpsl
sbb
cmp
pop
jns
inc
and
in
inc
xor
xchg
fldt
and
imul
lods
in
flds
pop
stos
mov
xchg
or
mov
xor
insl
insl
insb
push
sub
xchg
sbb
mov
add
xchg
and
inc
es
xlat
stc
sbb
mov
pop
xorl
and
mov
cltd
inc
dec
test
in
imul
mov
and
jp
xor
clc
xor
add
fdivs
add
cmc
fwait
sub
mov
int3
daa
mov
in
cmpsb
lea
outsl
pop
xchg
xchg
jo
dec
jnp
test
cmp
fsubr
sbb
push
jg
mov
insb
sti
sbb
mov
mov
mov
in
int
push
out
mov
rorb
or
jo
mov
add
xchg
cmp
sbb
cmp
inc
inc
add
in
jmp
pop
out
test
and
push
gs
and
int
mov
sbb
xor
push
pop
sub
or
pop
cli
in
push
xchg
test
nop
pop
cmp
lea
js
xor
dec
in
out
lods
sbb
jecxz
jnp
cmpsb
insb
inc
fcompl
std
xor
xchg
or
adcb
push
pop
push
xchg
pop
jb
mov
jae
aad
js
or
insb
push
pop
inc
mov
or
ret
mov
sti
div
fildll
outsl
add
mov
xor
add
stos
ret
adc
lcall
mov
insl
xchg
sub
cwtl
out
les
insb
popa
xchg
xor
xchg
aaa
leave
out
adc
iret
xchg
dec
jg
mov
push
mov
xor
or
mov
stc
add
mov
xchg
out
rcll
cmc
iret
stos
sbb
repz
into
nop
stos
shrl
std
mov
std
and
and
cmp
std
aaa
jae
add
out
cmc
pop
or
lahf
das
cs
loopne
pop
dec
inc
xor
lds
test
mov
pushf
mov
aaa
std
mov
sub
int
int
or
xchg
mov
sbb
shl
cmp
xchg
adc
jecxz
and
push
xlat
inc
add
pop
and
push
pusha
ret
cwtl
data16
std
aam
insb
lahf
mov
das
nop
lods
movsb
pop
push
negl
andb
sub
data16
call
cmpsl
in
xchg
lcall
jecxz
adc
push
push
scas
push
sbb
dec
mov
sub
movsl
lds
cmp
and
out
adc
pop
pop
cmp
aas
sti
push
inc
xchg
cmp
jmp
add
mov
je
popa
jecxz
lcall
xor
mov
cld
inc
imul
sbb
sub
cmp
jl
cld
cmp
inc
daa
mov
xor
jns
jge
test
sub
push
rcrb
xchg
xchg
jl
repz
lods
lock
jecxz
pop
jbe
mov
cs
jno
jne
out
cld
add
shrl
in
jmp
aam
insl
sub
mov
mov
and
pop
outsb
inc
adc
arpl
sub
ss
int
dec
insl
pop
jno
repnz
adc
cmc
xchg
jnp
arpl
push
jg
xchg
in
loope
rorb
lret
fcmovb
in
mov
mov
push
mov
xor
popf
adc
inc
cmc
or
imul
xchg
mov
mov
or
mov
aad
xchg
sbb
jle
ret
adc
sbb
add
mov
and
clc
fwait
mov
jo
or
xor
push
enter
loopne
mov
jmp
sub
imul
mov
mov
insb
push
push
js
xor
jp
lods
mov
xor
test
or
xor
out
arpl
outsl
push
test
adc
push
loopne
insl
jne
pop
jmp
jecxz
shr
int3
xor
push
icebp
aas
mov
cmp
cmp
es
sahf
add
ds
add
lea
mov
adc
mov
jecxz
ljmp
and
nop
cltd
add
cmp
pop
cmp
scas
cmp
repnz
or
mov
and
les
sbb
and
mov
cmp
subl
iret
mov
aam
scas
mov
inc
rclb
out
int
insl
fisttpll
inc
xchg
jecxz
cmp
cli
cmp
into
sti
xor
outsb
sbb
sbb
cmp
cli
pop
or
sbb
stos
jl
pop
mov
addr16
test
inc
inc
push
dec
mov
push
jbe
divb
adc
xor
in
lret
mov
in
and
cmc
mov
fcompl
sbb
arpl
js
adc
lods
in
dec
mov
mov
ret
aaa
pop
shlb
add
je
inc
pop
xor
lahf
popa
jae
mov
leave
mov
adc
sti
inc
adc
cmpsb
lea
mov
cmp
sub
mov
mov
pop
clc
testb
sub
jo
mov
inc
scas
rorl
jmp
call
stos
pusha
and
xor
in
mov
fstpl
call
scas
adc
mov
sub
in
cmp
test
mov
inc
fwait
push
rolb
movsb
mov
outsb
repnz
ja
daa
stc
and
jnp
lods
popa
js
add
ljmp
mov
ja
arpl
scas
push
sbb
inc
sub
stos
insl
scas
mov
int3
stc
push
sbb
jbe
xor
or
ficomps
int3
xchg
hlt
daa
xor
inc
mov
mov
and
in
test
jg
mov
push
bound
mov
and
cld
dec
inc
sub
test
jbe
adc
sub
adc
fdivrs
in
pushf
jo
xchg
pop
mov
jl
push
mov
mov
dec
push
cmp
jg
inc
jo
xchg
pop
jno
fildl
aam
test
dec
js
xor
andl
sbb
pop
cwtl
cmp
cmp
imul
jo
iret
push
negb
ror
fwait
ljmp
mov
jns
test
test
jne
add
xchg
jae
fisttpll
aam
lock
push
push
add
jbe
fildl
ljmp
sub
fildl
test
or
push
dec
dec
or
xchg
test
xchg
dec
mov
jmp
jge
sti
push
jp
push
push
pop
loope
sbb
mov
inc
mov
pop
mov
lock
push
js
insl
jge
mov
inc
or
daa
xlat
ss
movsl
dec
cmp
outsl
clc
ret
inc
add
xor
mov
daa
pop
repz
aaa
add
add
add
add
add
in
loop
mov
inc
das
add
adc
mov
leave
outsl
sbb
out
sbb
stc
int3
push
mov
fdivrl
push
sub
mov
jbe
xchg
dec
inc
inc
inc
inc
daa
pushf
mov
icebp
pop
enter
inc
xor
ret
lahf
sub
outsl
pop
dec
inc
or
or
andb
mov
mov
int3
mov
adc
out
jne
imulb
and
pop
sbb
hlt
data16
add
mov
add
shll
xchg
inc
mov
rcrl
push
xchg
jge
jne
and
cmpsl
addl
repz
xor
xor
bound
mov
test
sarb
mov
popf
lcall
insl
pop
and
push
call
sub
pop
cmp
and
mov
xchg
xchg
mov
jae
sbb
cmp
jmp
adc
push
mov
sbb
sub
jno
fisttps
je
cmpsl
cmp
sub
inc
outsl
fisttps
test
lds
ja
mov
cmp
jns
or
mov
lea
push
sub
jo
pop
insb
mov
inc
int3
pop
ret
sub
insb
or
inc
jbe
mov
and
scas
and
mov
push
jle
imul
stos
js
insl
arpl
mov
iret
fidivrl
and
mov
test
scas
lret
and
insb
cmp
xchg
aam
sub
mov
jp
inc
daa
mov
or
not
push
dec
mov
dec
sbb
xor
xor
cs
les
arpl
jbe
inc
mov
scas
sbb
mov
leave
mov
aam
popa
xor
inc
push
daa
mov
adc
cmpsl
popa
scas
fildll
outsb
fcom
and
add
inc
adc
mov
mov
mov
lods
sub
adc
dec
mov
fisttpll
int3
sub
fs
sub
int
or
pop
shrb
cs
and
sbb
mov
aas
js
and
lods
xor
loope
mov
out
xor
or
xor
stc
add
mov
in
stos
jge
jb
jno
mov
es
cmp
adc
jo
xor
das
or
jge
shl
int3
jae
popa
mov
cmp
int
lods
xorl
int3
jo
mov
add
sub
fnstsw
dec
mov
cld
mov
and
jecxz
shlb
iret
or
xor
in
mov
sbb
cld
pop
or
cwtl
mov
mov
cmp
into
lods
mov
outsb
mov
pop
or
cmpsb
xor
mov
pushf
movsl
insl
mov
mov
lret
fistps
add
jmp
jg
or
loop
divps
rcll
scas
mov
sub
out
idivl
in
sub
sub
aaa
mov
cwtl
mov
jno
inc
ret
pop
insl
pop
enter
sti
sbb
adc
dec
lret
xchg
dec
sbbb
outsb
cwtl
mov
insl
fld
mov
in
add
mov
test
call
mov
std
add
dec
mov
in
insb
xlat
sarl
imul
mov
mov
sbb
sub
ret
fnsave
movsl
sub
pop
cltd
stc
test
adc
push
gs
pop
push
ja
out
push
xchg
call
mov
pop
sub
testl
push
insl
sub
add
inc
repnz
mov
pop
outsb
sbb
cmc
movhps
enter
outsl
insl
jecxz
daa
dec
addb
jbe
push
insb
xor
ja
dec
inc
mov
cmovp
insl
sub
pop
cmpsb
xchg
gs
sub
mov
jmp
outsl
aam
fucomi
repnz
push
pop
loop
xchg
sbb
xor
push
rol
push
inc
sbb
shll
mov
push
sti
repnz
mov
pop
inc
sahf
mov
mov
mov
pop
push
inc
xchg
lret
xor
fdivl
pop
push
repz
mov
sub
mov
xor
or
adc
add
lahf
popa
pop
pop
push
arpl
fildl
mov
subb
adc
pop
fdivrl
jo
rorl
jo
pop
or
call
sub
push
push
fst
push
fisttpl
stos
xor
daa
lea
mov
add
and
call
jno
fisttpll
cmp
xchg
sbb
mov
std
insb
pushf
mov
jecxz
mov
xlat
aaa
aaa
add
out
mov
ja
outsl
loopne
mov
sub
xchg
dec
xchg
in
scas
enter
mov
aad
addr16
and
mov
bound
pop
je
lea
cltd
mov
int
mov
ss
xor
movl
paddsw
xor
xchg
aas
cmpsb
jp
cltd
cmp
aas
bound
fiadds
mov
fidivl
in
decl
cmpl
out
inc
or
pop
and
loop
mov
dec
xchg
in
ja
pop
shrl
jbe
enter
mov
pop
mov
stos
jecxz
xchg
ja
jns
pop
cmp
cmp
pop
outsb
aaa
mov
lcall
push
in
mov
andl
sarl
in
mov
xchg
jno
add
daa
and
cmp
imull
mov
pop
out
sti
jmp
inc
pop
pop
dec
cmc
pop
lods
jae
jecxz
xchg
add
mov
mov
loop
cmp
rcrb
mov
loop
loope
sbb
cmp
es
pop
sbb
insb
idivb
pop
adc
mov
inc
jnp
test
inc
cs
cmp
scas
scas
sahf
mov
mov
pop
jl
inc
test
test
aad
ja
mov
or
aas
inc
hlt
fildl
mov
jbe
loope
je
fidivl
adc
mov
sub
sbb
push
sbb
xchg
lock
cmpb
mov
insl
lods
mov
mov
and
and
and
pop
push
pushf
xor
fstl
mov
fstl
cmp
iret
fs
push
sti
pop
push
insb
les
out
cmp
inc
cmpsb
cmpsb
xchg
jmp
mov
mov
sbb
clc
dec
mov
push
aas
mov
dec
in
xchg
jmp
xor
inc
add
jo
gs
rcrb
pop
mov
mov
inc
cmp
xchg
in
dec
or
sub
loope
test
aam
jecxz
xchg
mov
jnp
out
les
mov
mov
pop
pop
je
xor
jmp
pop
loopne
and
shll
mov
dec
cmpps
mov
dec
loopne
xchg
dec
mov
icebp
leave
jge
mov
fadd
xor
loop
scas
ljmp
xchg
out
negb
popa
arpl
lcall
fmuls
test
or
or
mov
jge
inc
mov
push
sub
call
push
loopne
ret
jns
mov
push
mov
enter
xor
movsl
orb
adc
ret
add
mov
jo
lahf
stos
mov
sbb
shll
sub
sbbl
cmc
loope
adc
insl
test
mov
in
pop
ds
xchg
inc
sub
xor
or
inc
jl
cltd
fwait
fs
jp
insl
mov
and
push
int3
mov
mov
and
jge
cmp
cltd
daa
mov
xor
adc
iret
jae
aaa
push
inc
sub
push
das
hlt
test
push
popf
add
xchg
mov
roll
xlat
ss
inc
or
subb
outsb
and
pop
xorb
adc
movsb
push
dec
or
mov
xchg
rcr
test
fnstsw
pop
and
mov
stos
mov
into
test
push
fwait
mov
inc
inc
add
mov
jl
cmp
cmp
mov
adc
add
push
mov
xchg
push
ss
outsl
nop
xorb
xor
push
lock
mov
jmp
ss
pushf
shlb
mov
jl
enter
push
repz
jb
jmp
aaa
in
ror
in
xchg
push
sbb
pop
mov
sbb
jecxz
mov
rclb
cmp
xor
ljmp
test
repnz
or
addr16
adc
popa
or
fidivs
mov
outsl
cmpsl
push
movsb
std
nop
mov
sub
negb
mov
mov
cmp
out
cmpsb
mov
pop
popa
and
mov
insb
inc
mov
dec
lret
jns
icebp
mov
inc
mov
cmp
mov
and
mov
adc
jne
clc
jp
or
push
fildl
les
jmp
mov
arpl
mov
mov
idivb
shrb
dec
fistpl
sbbl
fistpl
std
mov
outsb
mull
mov
out
pop
inc
addr16
add
negb
inc
mov
clc
jno
mov
test
pop
das
out
rolb
das
sti
popa
dec
jo
cmp
out
pop
cli
dec
mov
mov
nop
cmpsl
mov
jbe
jecxz
les
jo
mov
fbstp
inc
mov
inc
push
cltd
movsl
ljmp
imul
mov
jnp
mov
jmp
dec
addr16
mov
add
mov
lahf
in
ja
rorb
out
negl
jge
dec
push
mov
iret
aaa
fldt
and
mov
je
pop
xor
das
pop
xlat
data16
daa
jg
jne
xchg
push
cld
sbb
int
add
xor
scas
adc
xor
cmpsl
cmp
add
ja
int3
mov
add
adc
sti
mov
adcl
xor
testl
sub
cs
xor
xor
xchg
scas
aam
dec
scas
or
mov
jae
lahf
and
adc
fstpt
and
adc
xor
pop
insb
ja
xor
pop
xor
or
push
cmp
jb
aaa
add
mov
inc
add
jnp
in
pushl
xlat
push
add
xor
push
adc
add
outsl
add
pmaxub
lcall
xchg
sbb
adc
sbb
fistpl
and
or
aas
adc
aas
lods
xlat
mov
adc
add
int
jge
sbb
adc
jl
addr16
fwait
repz
sub
cmp
shl
xchg
ficomps
outsl
adc
push
inc
add
divl
mov
out
sub
and
das
divl
insl
push
adc
outsl
ja
add
push
pop
mov
idivb
mov
xchg
xchg
sbb
ja
sbb
and
les
cmp
adc
and
fsubs
packsswb
jae
inc
cmp
lods
jo
mov
scas
mov
jbe
cmp
xor
cmp
jmp
fwait
cmp
out
repz
pop
jmp
filds
roll
in
or
pop
or
add
or
pushf
mov
arpl
ja
jnp
sbb
sti
pop
cmpsl
scas
xor
lods
fadds
push
rcll
cmp
int
cmp
adc
sbb
into
fcomp
cmp
push
or
jbe
mov
or
cmp
cmp
cmp
sti
add
adc
adc
sbb
stos
adc
pop
sti
sahf
mov
and
or
jb
lds
push
add
lahf
out
dec
xor
movsb
scas
xor
lods
pop
inc
pop
or
mov
cmp
sbb
or
pop
push
jae
in
int3
insb
push
pop
adc
or
push
mov
cmp
ja
jg
adc
inc
dec
pop
add
pop
pop
out
xor
loope
mov
mov
or
sub
pop
imul
addr16
push
sbb
add
sahf
out
pop
jae
aaa
dec
and
sub
push
jmp
cmp
andl
or
jmp
sbb
sbb
ficompl
sbb
jnp
ret
mov
imul
or
sub
mov
sbb
mulb
sub
sti
add
insl
cs
mov
addl
add
lea
fists
aad
push
xor
pop
leave
xlat
sahf
lods
or
or
adc
add
inc
adc
jnp
loope
add
and
add
cmp
cmpsb
add
mov
inc
pop
or
sbb
adc
and
imul
add
repz
sub
lock
test
or
outsl
cmp
add
add
pop
or
es
out
or
add
adcl
pop
out
inc
mov
cmpl
mov
lds
dec
xor
nop
add
pop
adc
pop
xor
adc
jae
imul
adc
xor
jb
mov
sub
mov
sbb
cwtl
imul
dec
xchg
sub
mov
cmp
jl
add
jne
lahf
add
or
rcr
xchg
fcoml
push
roll
hlt
pop
adc
and
sahf
es
out
jo
mov
pop
jbe
loope
add
add
push
int3
jl
pop
insl
fisttps
adc
aaa
push
inc
jno
inc
pop
jbe
xchg
jecxz
cmp
es
xor
scas
es
nop
mov
movsb
out
mov
sbb
test
and
add
adc
mov
int
cmp
cli
or
cltd
loope
roll
lahf
jle
sbb
mov
adc
inc
fcomps
pop
mov
push
ss
cli
cmp
mov
mov
inc
ss
adc
mov
fstps
add
fcmovnb
and
test
fisubl
xor
insb
mov
test
mov
mov
and
xchg
out
and
cmpsl
lahf
add
cltd
pop
cwtl
sbb
loope
sti
push
sbb
and
and
test
fists
sub
fdivs
outsb
mov
in
or
pop
lds
cmc
or
fcomp
stc
sbb
shlb
xor
mov
jnp
jns
push
or
das
test
or
and
or
lds
ficoml
ds
jne
fstp
sbb
or
fimuls
xor
push
es
add
dec
or
into
and
push
pusha
and
xor
fsubs
or
jnp
mov
adc
test
jae
pop
inc
es
inc
push
or
pop
sbb
leave
sbb
or
add
lock
sbb
mov
xchg
pop
jae
add
push
mov
pusha
hlt
repz
dec
or
fsubr
dec
fistps
flds
ss
sbb
and
repnz
aas
jecxz
mov
dec
sub
fyl2x
push
aas
add
push
or
ret
lcall
popf
push
out
stc
out
sahf
push
adc
popa
int
dec
fnstsw
enter
xor
insb
push
xchg
divl
jge
push
add
inc
pop
scas
adc
push
int
lret
enter
pop
add
mov
scas
js
mov
adc
or
stos
inc
dec
push
and
mov
mov
adc
sti
mulb
sub
or
xchg
into
or
rcr
fsubs
andb
fidivl
out
fadd
lcall
int3
test
scas
sbb
cmp
cmp
arpl
sbb
adc
jnp
and
push
xor
xchg
mov
pushw
fcompl
in
sbb
cmpsl
push
outsb
clc
data16
xchg
mov
push
sub
or
lret
pop
in
sbb
jnp
push
xchg
push
fsubr
fidivrs
in
jne
lods
push
fdiv
fdivs
push
addl
jbe
das
sub
push
int3
jl
or
cmp
push
xor
outsb
cmp
or
dec
adc
or
adc
fidivl
sbb
or
push
xchg
lods
gs
xchg
push
cli
sub
mov
daa
xchg
sbb
imul
dec
daa
ds
mov
gs
mov
or
pop
daa
mov
mov
xor
push
jo
sbb
pop
mov
ret
popa
inc
jecxz
mov
xchg
mov
or
data16
xchg
ss
xlat
daa
clc
das
imul
or
pop
cmp
mov
fwait
cmp
dec
loopne
inc
inc
mov
adc
xchg
mov
pop
pop
xor
push
push
inc
popl
xor
inc
out
mov
mov
jae
sbb
data16
inc
test
add
dec
pop
mov
xchg
mov
fistl
or
add
ss
enter
inc
adc
cmp
addr16
pusha
mov
mov
fstps
dec
pusha
and
cld
sbb
insb
jle
push
jnp
ffreep
adc
add
pusha
mov
data16
adc
dec
mov
dec
and
push
sub
lods
sarb
push
and
loope
and
stos
add
fldenv
xchg
ficoms
ja
mov
aaa
push
adc
lret
push
xor
les
mov
dec
or
outsl
nop
ficoms
pushf
cmpsl
popf
mov
adc
shlb
mov
loop
or
xlat
das
pop
xchg
or
gs
fldenv
xor
cltd
es
loope
jge
dec
sub
lods
xchg
jb
pop
pop
sub
ret
xchg
xor
cli
js
adc
push
test
cmp
and
aam
and
mov
xchg
push
and
xor
notl
adc
sbb
data16
xchg
push
adc
mov
mov
addr16
sahf
aad
mov
push
lret
mov
outsb
fmul
fsts
fmuls
jle
add
lds
adc
dec
inc
into
mov
dec
sbb
mov
out
or
lea
cwtl
sbb
push
gs
xchg
jnp
jecxz
xchg
sar
es
loope
nop
lcall
or
sub
push
mov
sbb
fstp
mov
xor
add
fdivs
movl
xchg
aad
aad
ljmp
stc
mov
sub
and
mov
out
xor
jns
push
and
movsb
xor
push
mov
scas
and
xchg
inc
jae
adc
and
shrb
fcomps
jg
in
adc
dec
imul
dec
push
xor
pop
adc
imul
pop
fwait
out
pop
sbb
pop
and
mov
mov
nop
jmp
or
adc
negb
adc
sbb
ret
pusha
jl
dec
or
addr16
adc
loope
mov
fistps
je
cmp
and
push
dec
mov
xchg
mov
add
pop
out
push
xchg
nop
xchg
enter
cltd
jnp
lret
push
or
push
js
aaa
push
add
aas
pop
out
and
sbb
pop
sub
and
nopl
or
mov
push
mov
jle
and
clc
test
aaa
mov
and
pop
sub
push
ret
dec
or
jl
mov
movsl
lret
insb
sbb
pop
es
or
pushf
pop
add
pop
fchs
nop
adc
add
fsubl
cmp
lods
test
es
and
dec
loopne
push
stc
or
and
inc
es
fdiv
push
arpl
fiadds
pop
and
arpl
push
data16
or
sbb
call
and
loope
and
mov
flds
cmpsl
rclb
mov
icebp
mov
xchg
and
sbb
sub
fisubl
mov
ss
sub
insb
or
mov
incl
ror
lret
aas
sbb
adcl
sbb
add
add
aaa
adc
imul
mov
sbb
mov
test
sbb
pop
sbb
xor
in
shlb
push
mov
movsb
icebp
pop
int
loopne
push
out
sbb
gs
add
adc
and
ss
inc
ljmp
or
or
popa
gs
mov
sbb
pop
add
loopne
adc
lea
mov
fnstenv
mov
cwtl
inc
or
nop
add
imul
insb
in
cmp
bound
movsl
into
into
jecxz
out
bound
jecxz
daa
daa
adc
daa
in
popf
sbb
xchg
and
filds
pop
sti
pop
inc
push
add
add
add
fmull
popf
cmp
clc
mov
adc
pop
dec
sbb
icebp
adc
or
xlat
mov
es
add
add
or
aad
sbb
mov
add
adc
mov
cmp
cmp
loop
or
jl
and
das
fldenv
xlat
adc
nop
add
push
xchg
adc
or
mov
pop
add
mov
add
iret
mov
inc
add
aaa
sbb
inc
fldl
rcrl
cmpl
xchg
jne
daa
add
add
add
rcr
fabs
cltd
std
lret
dec
and
addr16
add
outsb
lods
xor
jo
data16
out
imul
mov
dec
inc
into
daa
sbb
sbb
test
inc
push
dec
inc
js
add
scas
pop
insb
addr16
inc
mov
push
push
std
insl
lods
xor
out
push
adc
dec
scas
in
pop
push
fistpl
sub
lods
insl
add
add
in
mov
add
adc
and
js
dec
into
into
lcall
add
iret
data16
jae
je
add
inc
js
dec
push
in
arpl
jae
add
dec
inc
fisttpl
sbb
push
and
outsb
mov
mov
adc
and
imul
pushf
dec
dec
xor
leave
ss
aaa
je
es
jmp
jne
in
add
add
negl
jns
leave
jns
jp
lods
dec
sahf
in
push
add
jp
fsubrs
outsb
outsb
in
arpl
mov
imul
push
jnp
jb
fwait
lock
data16
test
mov
add
insb
xor
add
sti
addb
fmuls
adc
push
fstps
cmpb
gs
mov
mov
jbe
and
push
inc
pop
mov
xchg
mov
or
addb
sbb
inc
dec
ss
or
cmovs
iret
lock
test
popa
and
stc
clc
add
add
orb
jnp
fstps
jae
jl
icebp
cwtl
push
jo
push
add
in
xchg
ja
js
add
xlat
or
mov
sti
mov
mov
fs
adc
out
imul
add
cwtl
xchg
and
push
xchg
push
push
xor
mov
arpl
or
jns
jbe
sbb
sbb
adc
gs
cmp
popl
sahf
pop
shlb
dec
adc
jo
lea
add
leave
inc
jp
xchg
dec
ret
cwtl
adcl
or
sbb
sbb
and
mov
and
test
cmp
cwtl
jmp
and
add
adc
sub
mov
pop
adc
or
or
mov
ja
popf
fwait
sub
add
out
int
add
jbe
js
in
lret
sbb
dec
add
add
adc
ljmp
dec
sahf
pushf
adc
jbe
mov
mov
insb
popa
sbb
xor
subb
pop
push
push
test
fiaddl
es
mov
xor
xor
or
loope
xlat
push
xchg
sbb
sbb
addb
add
dec
lret
js
add
push
push
popa
dec
ret
pop
and
xchg
jge
pop
sti
popa
jne
notl
or
or
xor
jne
add
std
xchg
mov
inc
sub
jns
cli
add
adc
push
xor
insl
imul
xor
inc
inc
dec
xchg
and
mov
or
scas
adc
mov
ret
or
push
or
mov
es
test
out
inc
push
jo
mov
ss
xchg
std
jge
cmp
jnp
add
adc
movsl
pop
lret
js
jnp
ds
inc
jnp
xorb
jbe
cmp
push
sbb
lods
decb
push
sbb
dec
xor
cmpsb
movsl
fwait
je
sub
add
lahf
jno
pop
mov
sbb
fld
add
faddl
fbld
dec
dec
sbb
pop
sbb
sbb
adc
scas
mov
or
pop
push
and
xchg
movsb
xchg
jnp
and
xlat
jecxz
and
add
in
cmp
adc
add
aaa
lods
pop
pop
xchg
add
xchg
xchg
add
xchg
push
cmp
mov
popf
addr16
in
orl
sub
sbb
push
jnp
dec
jo
sub
pop
imul
pop
mov
and
js
mov
and
and
inc
ljmp
test
filds
inc
inc
dec
cmp
add
in
std
fldl
bound
jo
jmp
fs
jle
loope
addl
add
mov
dec
pusha
jnp
pop
ret
push
arpl
add
add
sbb
insb
sub
andl
imul
clc
xchg
movsl
js
dec
push
push
add
stc
out
inc
rorb
xchg
pop
sbb
ror
sbb
jo
out
dec
mov
addr16
ja
jl
push
enter
ret
add
rcr
xchg
push
add
push
pop
lods
popa
mov
jle
out
ret
cwtl
add
outsl
mov
testb
sbbl
jae
loop
orl
jmp
add
inc
pop
push
movsl
push
push
inc
jmp
and
dec
es
mov
mov
cltd
dec
jo
pop
insl
fldt
scas
push
cmp
dec
push
outsb
rolb
ret
cmp
xor
loop
aas
daa
mov
loope
dec
call
xchg
and
sbb
inc
push
mov
loope
push
sub
cld
mov
stos
jle
test
mov
xor
arpl
mov
push
inc
push
andl
push
or
mov
push
es
or
pop
faddl
hlt
sbb
mov
inc
jns
or
push
in
out
and
jne
or
adc
outsl
mov
aaa
lret
outsb
dec
inc
pop
dec
mov
es
sbb
lods
push
sarb
mov
push
pop
movsb
js
lcall
popf
pop
dec
hlt
clc
je
addr16
push
outsl
jg
mov
fwait
jnp
popa
adc
inc
test
inc
js
xlat
lds
xor
mov
xor
pop
arpl
jg
inc
inc
cwtl
dec
dec
sub
inc
out
pop
sub
orps
rorl
pop
movsb
js
jbe
xor
pop
xor
push
push
rcrl
mov
push
testb
sub
popa
xchg
shrb
in
stos
xor
inc
dec
add
add
fstpl
sub
sahf
or
xchg
cmp
xor
sbb
out
insl
int
inc
dec
jmp
dec
add
pop
in
cmp
inc
inc
fs
inc
es
sub
pusha
inc
push
lock
mov
jae
inc
and
jp
xchg
inc
sbb
je
ss
inc
inc
mov
xchg
jmp
shr
inc
xchg
add
sub
push
mov
mov
or
fildll
or
add
lea
pop
cmp
or
outsb
sub
add
mov
push
push
cmp
int
jmp
inc
xchg
or
jne
jno
cmp
xchg
sahf
imul
push
pop
pop
out
pop
inc
ret
dec
insb
cwtl
adc
push
jbe
inc
add
ret
pop
and
fs
mov
inc
aas
data16
clc
cmp
arpl
loopne
iret
pop
push
out
les
add
jno
mov
fs
jne
and
ret
daa
je
aad
sahf
ja
inc
xchg
jp
ret
movq
pop
mov
cwtl
inc
inc
int
arpl
xor
and
test
sti
push
dec
movsb
push
int3
inc
xor
pop
or
nop
xor
stos
inc
or
hlt
xchg
mov
sbb
bound
adc
inc
andb
push
push
cmp
jge
push
push
mov
frstor
push
aad
js
scas
stos
pop
xor
repz
push
xor
pop
lahf
dec
and
inc
sbb
sub
push
jo
popf
lock
jb
xlat
sbb
nop
in
mov
xor
int3
jge
sti
inc
inc
jge
cs
pop
in
cmp
mov
push
push
je
push
cmp
mov
mov
inc
and
cmp
sub
bound
mov
sbb
daa
jmp
out
push
cmpsb
inc
pop
jge
sub
mov
cwtl
cmp
push
jnp
mov
mov
jg
fldt
aaa
mov
or
cs
mov
rorl
pop
cmp
mov
xchg
scas
add
iret
jno
outsb
pop
pusha
xor
out
xor
push
add
push
movsb
adc
in
dec
dec
int
scas
xchg
adc
add
hlt
rcrb
push
inc
push
xchg
dec
sub
sti
cli
sub
gs
aas
jae
and
jne
movsl
cwtl
xchg
inc
sub
xchg
dec
jg
add
jmp
jo
xlat
inc
mov
sbb
dec
cmp
mov
jnp
cmc
inc
loope
cmp
jecxz
or
push
xchg
insb
and
sub
stos
dec
notb
ret
push
add
inc
adc
mov
lret
adc
jmp
sbb
and
sub
inc
rcll
dec
or
bound
add
movsb
mov
mov
push
inc
cli
ja
adc
repnz
dec
dec
out
insl
aad
pop
and
add
outsb
jnp
add
or
add
call
testb
sub
add
adc
xchg
js
enter
push
sbb
mov
add
pop
idivl
repz
or
addb
scas
sbb
add
mov
adc
xchg
jle
rclb
adc
in
sbb
or
adc
inc
pop
loop
mov
push
pop
scas
cwtl
in
push
add
cmc
add
add
ret
sbbb
inc
movsl
xchg
cmc
ss
add
arpl
push
xchg
add
xchg
push
lcall
leave
or
movsb
lea
and
inc
push
cmp
and
sbb
adc
inc
sub
add
or
sti
sub
test
into
push
aaa
test
testb
mov
cwtl
lds
dec
mov
movsl
jo
sbb
lcall
or
test
pop
and
cmp
xchg
mov
push
cmp
mov
push
mov
cmp
into
sbb
pop
dec
aas
inc
aas
sub
push
add
sbb
pop
sub
push
inc
and
mov
xchg
inc
das
les
mov
sbb
pop
dec
pop
pop
mov
cmpb
push
fcomps
lock
lea
or
popa
or
sbb
push
inc
fisttpll
sbb
push
add
mov
sub
adc
inc
pop
pop
inc
fs
mov
das
pop
sbb
loope
jne
or
inc
js
adc
roll
test
adcb
pop
dec
pop
mov
movsl
cmp
push
jno
insl
push
sub
pop
sti
or
add
add
mov
pop
xchg
mov
push
pop
fnstenv
xor
lcall
xor
arpl
addr16
and
sub
jg
adc
int3
dec
adc
pop
rcr
sti
data16
push
and
cmp
fisubl
fadds
add
in
test
scas
test
pop
cli
xchg
sti
ss
push
stc
add
pop
imul
clc
in
stos
stc
cmpl
cld
cmp
add
int
dec
neg
add
dec
inc
inc
shlb
inc
mov
pop
xchg
imul
push
pusha
jge
inc
clc
call
dec
or
mov
jbe
dec
add
add
fucom
fmuls
xor
push
bound
push
sbb
sub
sub
imul
push
inc
or
push
sbb
dec
push
loope
mov
mov
sti
sbb
xchg
xchg
pop
mov
xchg
push
pop
mov
sbb
cmp
xchg
xchg
xchg
push
sbb
int
xchg
mov
xor
fiadds
or
mov
mov
push
inc
adc
add
push
dec
sub
pop
mov
lret
pop
aam
gs
xlat
inc
add
ret
xchg
inc
add
lods
lods
scas
mov
xor
outsl
sub
inc
popf
cmpsb
adcl
cmp
test
sbb
add
pop
inc
mov
pop
sub
mov
push
push
or
enter
xor
jbe
clc
adc
sub
shll
jl
or
or
add
pop
adc
add
cmp
loopne
call
dec
pop
push
push
nop
push
loopne
and
stos
iret
fs
and
sub
adc
sub
mov
add
cmp
add
sub
jae
inc
adc
testb
adc
je
inc
js
fistpll
gs
jns
sbb
imul
push
inc
gs
jne
je
popa
outsb
addr16
inc
pop
mov
cmovge
adc
push
push
mov
outsb
adc
jb
outsb
je
jb
adc
push
pop
inc
insb
jne
push
mov
pushl
jo
je
jne
data16
mov
divb
pop
inc
outsb
jne
mov
fs
insl
ss
popa
addr16
xchg
inc
inc
aas
adc
adc
popa
int
push
imul
lock
jno
inc
imul
je
fidivs
push
dec
jo
push
insb
sub
insb
je
lea
adc
cmp
xor
push
gs
loopne
and
sbb
outsb
jae
add
gs
gs
sqrtps
out
lds
pop
adc
je
data16
push
push
sbb
fadds
jae
dec
arpl
jns
in
lds
adc
stc
sub
inc
push
sbb
fwait
int
pop
rorb
pushf
ljmp
sbb
scas
inc
shlb
push
lcall
bound
sub
adc
jge
dec
cmp
push
or
xor
inc
pop
shlb
insb
and
imul
xor
data16
cld
jle
ret
jmp
imul
or
inc
pop
popa
ficoml
adc
nopl
mov
mov
insl
push
outsl
adc
fcomi
inc
xor
pop
sbb
xor
inc
push
push
mov
test
cmp
push
jae
sbb
mov
inc
imul
outsw
int3
jo
dec
loop
mov
ret
or
xchg
outsb
fwait
outsb
imul
adc
sbb
cmpsb
mov
mov
fldt
jae
cmp
loopne
jb
push
jge
inc
ja
arpl
or
ja
xor
mov
orb
inc
dec
pop
insb
xchg
insl
mov
sub
sub
dec
inc
or
mull
sbb
das
xchg
or
push
nop
pop
add
lcall
cld
xchg
arpl
push
inc
dec
add
add
pop
inc
sub
and
or
add
add
add
insl
xor
jo
inc
or
add
addr16
mov
cmp
gs
jnp
pop
xor
add
and
jl
mov
add
push
add
inc
inc
test
ds
pop
nop
jmp
and
in
out
and
sbb
add
loopne
mov
fs
rolb
or
push
add
imul
add
pusha
daa
or
cmp
cmp
jo
cs
xchg
cmpsb
add
leave
jb
scas
insb
inc
js
inc
dec
daa
add
add
ljmp
mov
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
