push
mov
add
mov
mov
mov
adc
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
sub
mov
mov
mov
mov
sub
mov
add
mov
push
push
call
mov
mov
add
mov
add
add
mov
push
mov
push
call
mov
mov
sub
mov
mov
add
push
call
mov
mov
add
mov
mov
call
mov
mov
add
mov
mov
push
call
mov
mov
or
mov
mov
decl
mov
mov
mov
mov
mov
inc
cmp
jne
mov
mov
add
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
sub
leave
ret
nop
nop
nop
push
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
mov
mov
sub
leave
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
call
mov
mov
sub
mov
mov
sub
mov
push
mov
push
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
mov
add
sub
mov
call
mov
add
mov
mov
mov
call
push
push
call
mov
mov
mov
call
mov
add
mov
add
call
mov
add
mov
add
call
mov
add
mov
sub
call
mov
mov
mov
call
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
sub
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
ja
mov
mov
sbb
inc
mov
cmp
jne
mov
mov
sub
add
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
add
sub
call
mov
mov
mov
or
call
mov
mov
add
mov
inc
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
sub
sub
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
mov
add
mov
mov
and
mov
xor
mov
or
mov
mov
mov
mov
sub
mov
mov
sub
mov
mov
sub
sub
mov
mov
and
mov
mov
mov
mov
dec
jne
sub
add
mov
or
push
call
mov
mov
mov
mov
push
call
mov
mov
add
mov
push
push
call
mov
mov
mov
add
mov
add
mov
call
pop
ret
nop
nop
push
mov
mov
mov
mov
mov
add
mov
sub
mov
mov
push
push
push
call
mov
mov
mov
sub
push
call
mov
sub
mov
mov
pop
ret
mov
add
mov
mov
mov
push
call
mov
mov
mov
ret
nop
nop
push
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
call
mov
add
mov
mov
call
mov
mov
mov
mov
add
mov
sub
mov
add
mov
sub
call
mov
add
sub
pop
ret
nop
nop
push
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
sub
adc
mov
mov
mov
add
leave
ret
nop
mov
sub
mov
mov
mov
mov
mov
mov
push
pushl
push
call
mov
sub
mov
sub
mov
mov
add
add
ret
nop
nop
nop
mov
mov
add
mov
mov
push
push
call
mov
sub
xor
call
mov
add
mov
mov
add
mov
push
push
call
mov
add
mov
call
mov
mov
sub
mov
add
ret
nop
nop
nop
mov
add
mov
mov
add
mov
mov
mov
mov
or
mov
push
push
push
pushl
call
mov
add
mov
mov
ret
nop
nop
mov
mov
mov
mov
mov
pushl
push
mov
push
call
mov
and
mov
ret
nop
mov
add
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
add
mov
ret
nop
nop
push
mov
add
mov
or
and
mov
add
mov
mov
mov
mov
mov
mov
mov
pushl
push
mov
push
mov
push
call
mov
mov
add
mov
mov
sub
sub
call
mov
mov
mov
mov
and
sub
mov
add
mov
mov
leave
ret
nop
nop
push
mov
add
mov
mov
mov
mov
and
mov
mov
mov
push
call
mov
mov
add
mov
sub
leave
ret
nop
nop
nop
mov
mov
mov
mov
add
add
mov
mov
call
mov
sub
mov
mov
ret
nop
push
mov
add
mov
sbb
sub
mov
add
mov
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
push
mov
mov
push
push
pushl
call
mov
mov
add
mov
xor
mov
sub
mov
mov
mov
mov
mov
sub
leave
ret
nop
push
mov
add
mov
mov
or
mov
mov
mov
mov
pop
ret
nop
mov
mov
mov
mov
sub
mov
sub
mov
push
sub
push
call
mov
mov
mov
mov
mov
or
mov
ret
nop
nop
mov
mov
mov
mov
mov
add
call
mov
mov
sub
call
xor
mov
mov
mov
add
push
call
mov
add
mov
mov
add
push
call
mov
sub
mov
add
mov
mov
push
push
call
mov
mov
mov
sub
mov
push
push
call
mov
add
mov
mov
push
push
call
mov
sub
mov
mov
push
call
mov
mov
mov
mov
push
call
and
add
sub
call
mov
sub
mov
mov
call
mov
mov
mov
add
call
mov
mov
mov
call
mov
sub
mov
sub
call
mov
mov
mov
push
call
mov
mov
add
mov
add
push
push
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
add
call
mov
mov
mov
add
mov
push
push
call
mov
mov
mov
push
call
mov
sub
mov
mov
call
sub
add
mov
mov
add
push
push
call
mov
add
push
push
call
mov
mov
mov
sub
mov
push
sub
push
call
mov
mov
sub
mov
call
mov
mov
mov
mov
push
call
mov
xor
mov
mov
push
push
call
mov
add
mov
mov
push
push
call
mov
sub
mov
mov
push
push
call
sub
or
mov
add
mov
push
push
call
mov
mov
mov
mov
add
call
mov
mov
add
mov
sub
mov
push
push
call
mov
mov
sub
mov
call
mov
sub
mov
sbb
add
call
mov
and
mov
mov
push
push
call
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
push
mov
push
call
mov
sub
mov
push
call
mov
or
mov
mov
add
push
push
call
mov
mov
mov
or
call
mov
mov
mov
mov
push
call
mov
add
mov
mov
push
push
call
mov
add
mov
mov
call
mov
add
sbb
add
mov
mov
push
push
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
xor
push
push
call
mov
mov
mov
or
mov
push
call
mov
mov
mov
call
mov
sub
mov
mov
mov
add
call
mov
or
mov
mov
push
push
call
mov
add
mov
sub
call
mov
add
mov
add
add
mov
push
call
mov
add
push
push
call
mov
sub
mov
call
mov
mov
mov
call
mov
mov
mov
sub
push
push
call
mov
mov
mov
mov
call
mov
sub
add
mov
push
push
call
mov
mov
push
push
call
mov
add
mov
sub
sub
call
mov
mov
xor
mov
sub
push
mov
push
call
xor
mov
mov
sub
mov
add
push
push
call
mov
mov
mov
and
push
mov
push
call
mov
sub
xor
add
mov
add
push
push
call
mov
mov
mov
mov
add
add
call
mov
add
mov
add
mov
push
call
mov
mov
mov
xor
call
mov
add
mov
call
mov
add
mov
add
mov
push
call
mov
sub
mov
mov
call
mov
add
mov
add
push
push
call
mov
sub
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
add
mov
call
mov
and
add
adc
mov
call
mov
mov
mov
call
mov
add
mov
mov
add
call
mov
mov
mov
mov
sub
push
call
mov
add
push
call
mov
mov
mov
call
mov
sub
mov
call
mov
mov
mov
push
call
mov
add
mov
mov
add
push
mov
push
call
mov
mov
sub
mov
add
call
mov
mov
mov
mov
push
push
call
mov
add
mov
add
mov
mov
call
mov
add
mov
mov
add
mov
call
mov
add
mov
mov
call
mov
add
push
mov
push
call
mov
add
mov
call
mov
sub
mov
push
mov
push
call
mov
mov
mov
sub
mov
add
call
mov
sub
mov
mov
mov
push
call
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
add
call
mov
and
push
call
mov
add
mov
add
mov
sub
push
push
call
mov
mov
mov
add
mov
push
call
mov
mov
sub
mov
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
push
push
call
and
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
sub
mov
push
push
call
mov
sub
call
mov
mov
mov
sub
add
mov
push
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
add
call
mov
add
mov
mov
mov
call
mov
mov
sub
mov
push
push
call
mov
add
mov
mov
push
mov
push
call
mov
sub
mov
mov
mov
push
and
push
call
mov
sub
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
sub
push
push
call
mov
xor
mov
add
call
mov
mov
mov
or
mov
add
call
mov
add
mov
push
push
call
mov
add
mov
push
call
mov
mov
mov
add
mov
xor
call
mov
sub
mov
mov
mov
push
and
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
add
mov
call
mov
add
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
mov
or
sub
mov
mov
call
mov
mov
mov
mov
sub
push
call
mov
add
mov
mov
call
mov
add
mov
add
sub
push
call
mov
mov
mov
mov
add
push
mov
push
call
mov
add
or
mov
mov
mov
push
call
and
sub
add
push
call
mov
sub
mov
add
call
mov
mov
sub
mov
push
push
call
mov
add
mov
mov
call
mov
add
mov
and
mov
or
call
and
sub
mov
sub
push
push
call
mov
mov
mov
add
push
call
mov
add
mov
push
call
mov
sub
mov
mov
push
push
call
mov
mov
mov
add
call
mov
mov
add
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
add
add
push
call
mov
sub
mov
mov
add
mov
push
push
call
sub
mov
mov
add
call
mov
add
mov
mov
call
mov
mov
mov
call
mov
sub
mov
add
mov
push
mov
push
call
mov
sub
add
mov
call
mov
mov
mov
mov
call
mov
and
mov
mov
push
mov
push
call
mov
mov
mov
mov
push
mov
push
call
mov
sub
mov
mov
push
call
mov
mov
add
mov
push
mov
push
call
mov
mov
sub
mov
push
push
call
mov
add
mov
add
call
mov
mov
mov
mov
push
push
call
mov
sub
mov
mov
call
mov
mov
mov
sub
add
push
call
mov
mov
or
mov
mov
call
mov
sub
mov
add
mov
push
call
mov
sub
mov
mov
push
call
mov
add
mov
sub
push
push
call
mov
mov
mov
mov
add
call
mov
sub
mov
add
push
call
mov
mov
mov
add
add
push
push
call
mov
mov
add
mov
push
call
mov
mov
push
push
call
mov
mov
mov
mov
add
mov
mov
push
push
call
mov
sub
mov
add
sub
call
mov
mov
mov
add
sbb
call
mov
sub
mov
mov
push
call
mov
add
mov
mov
call
mov
add
sub
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
add
push
mov
push
call
mov
mov
mov
mov
or
call
mov
sub
sbb
mov
mov
mov
mov
push
push
call
mov
add
mov
push
push
call
mov
or
mov
mov
mov
push
call
mov
xor
add
mov
push
call
mov
add
mov
mov
call
xor
xor
sub
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
sub
add
mov
mov
call
mov
mov
sub
mov
push
call
mov
sub
mov
add
push
push
call
mov
mov
mov
sub
adc
sub
push
call
mov
add
mov
add
call
mov
mov
mov
add
mov
push
push
call
mov
sub
mov
add
call
mov
mov
mov
mov
sub
push
call
mov
or
mov
mov
mov
mov
call
mov
xor
sub
call
sub
mov
mov
push
call
mov
sub
mov
add
add
push
call
mov
add
mov
call
mov
sub
sub
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
sub
mov
sub
push
call
mov
sub
mov
mov
mov
push
mov
push
call
sbb
add
mov
mov
or
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
mov
add
mov
push
push
call
mov
mov
mov
add
mov
push
call
mov
mov
push
push
call
mov
sub
mov
add
push
call
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
call
sbb
mov
mov
mov
push
call
mov
add
mov
mov
push
call
mov
mov
mov
sub
push
mov
push
call
mov
add
mov
mov
mov
mov
push
call
add
sub
mov
mov
mov
push
call
mov
mov
mov
add
mov
add
call
mov
sub
mov
mov
mov
push
call
mov
add
mov
mov
push
call
mov
mov
mov
sub
call
mov
mov
mov
mov
push
call
mov
mov
add
mov
mov
push
push
call
mov
mov
mov
mov
push
call
adc
mov
mov
mov
push
call
mov
mov
mov
call
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
push
call
mov
add
add
push
call
mov
sub
sub
mov
mov
push
call
mov
mov
mov
add
mov
push
call
mov
sub
mov
mov
sub
push
push
call
mov
mov
mov
sub
mov
push
call
mov
mov
mov
add
push
mov
push
call
mov
add
mov
mov
mov
push
call
mov
sub
add
sub
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
and
mov
mov
push
call
mov
mov
mov
xor
push
call
mov
mov
sub
sub
push
call
mov
mov
mov
call
mov
add
mov
push
call
mov
add
mov
sub
call
mov
add
mov
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sbb
sub
push
call
mov
add
mov
add
call
mov
add
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
push
call
mov
sub
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
push
call
mov
sub
sub
call
mov
sub
mov
mov
push
push
call
mov
add
mov
mov
push
call
mov
mov
sub
mov
push
mov
push
call
mov
add
mov
mov
push
call
mov
sub
mov
mov
mov
push
push
call
mov
add
mov
mov
mov
mov
call
mov
xor
mov
sub
mov
push
call
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
xor
push
mov
push
call
mov
mov
mov
mov
push
push
call
mov
add
mov
call
mov
sub
mov
push
call
mov
add
mov
call
mov
sub
mov
sub
push
push
call
mov
sub
mov
call
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
call
mov
add
add
sub
push
push
call
sub
add
push
push
call
mov
add
mov
xor
mov
mov
call
mov
mov
mov
mov
mov
add
call
mov
sub
mov
mov
add
call
mov
mov
mov
mov
sub
call
sbb
sub
mov
push
push
call
mov
xor
mov
mov
add
push
push
call
mov
mov
mov
push
push
call
mov
sub
mov
mov
sub
push
push
call
mov
sub
add
add
push
call
mov
mov
mov
push
push
call
mov
add
mov
push
push
call
mov
mov
mov
mov
add
mov
push
push
call
mov
and
mov
mov
push
push
call
mov
mov
mov
push
push
call
mov
sub
mov
and
push
push
call
mov
mov
push
mov
push
call
mov
add
mov
mov
sub
push
call
mov
mov
sub
mov
mov
call
mov
or
mov
xor
push
push
call
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
mov
add
mov
push
call
mov
sub
mov
mov
push
call
mov
mov
push
push
call
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
call
mov
add
mov
push
push
call
mov
add
mov
push
push
call
mov
add
add
call
mov
or
mov
mov
push
mov
push
call
mov
sub
add
push
push
call
mov
add
add
mov
call
mov
add
mov
mov
sub
push
push
call
mov
sub
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
push
call
sub
sub
mov
add
mov
mov
call
mov
or
mov
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
add
mov
mov
mov
push
call
mov
mov
sub
mov
push
call
mov
mov
adc
mov
add
push
call
mov
mov
mov
mov
mov
push
push
call
mov
sub
mov
sub
call
mov
add
sub
add
push
push
call
mov
sub
push
call
mov
xor
mov
mov
call
mov
mov
sub
mov
mov
push
push
call
mov
mov
mov
add
mov
push
mov
push
call
mov
add
sub
mov
call
mov
or
mov
sub
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
call
mov
add
mov
mov
push
push
call
mov
sub
mov
mov
push
call
mov
sub
mov
call
mov
mov
mov
mov
sub
call
mov
mov
add
mov
call
mov
sub
mov
sub
call
mov
mov
mov
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
add
push
call
mov
add
mov
mov
sub
push
call
mov
sub
mov
call
mov
add
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
add
mov
push
push
call
mov
sub
push
call
mov
mov
mov
mov
adc
call
mov
mov
mov
sub
call
mov
add
push
push
call
add
add
mov
mov
push
push
call
or
add
mov
mov
mov
sub
mov
push
call
mov
sub
mov
add
mov
call
mov
mov
mov
add
call
mov
mov
mov
mov
push
call
mov
sub
mov
sub
call
mov
mov
add
mov
push
call
mov
mov
mov
mov
call
mov
xor
mov
push
call
mov
mov
sub
xorl
push
call
adc
mov
mov
sub
sub
push
call
mov
mov
mov
sub
sub
push
call
mov
sub
mov
push
push
call
mov
and
mov
sub
push
call
or
add
sub
mov
push
push
call
mov
mov
mov
sub
push
call
mov
sub
mov
call
mov
mov
mov
mov
mov
push
call
mov
add
add
mov
push
call
mov
mov
mov
add
mov
push
mov
push
call
mov
mov
mov
sub
mov
push
call
mov
mov
sub
mov
mov
push
mov
push
call
mov
add
mov
push
push
call
mov
add
sub
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
add
mov
push
push
call
mov
add
mov
xor
mov
push
call
mov
add
mov
sub
mov
push
call
adc
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
add
add
mov
call
mov
sub
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
call
mov
add
mov
mov
push
push
call
mov
mov
mov
add
push
and
push
call
adc
sub
mov
call
mov
and
mov
sub
call
mov
add
mov
mov
add
mov
push
call
mov
mov
mov
add
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
sub
mov
mov
push
push
call
mov
mov
sub
mov
push
call
mov
add
and
mov
push
call
mov
add
mov
push
call
mov
add
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
mov
push
call
mov
sub
mov
mov
push
call
mov
mov
mov
add
mov
push
call
mov
mov
or
mov
call
mov
sub
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
sbb
sub
mov
sub
call
mov
mov
mov
add
mov
push
mov
push
call
mov
mov
mov
push
push
call
mov
add
mov
mov
mov
push
call
mov
add
mov
mov
mov
push
push
call
mov
add
mov
mov
push
call
mov
mov
mov
mov
sub
push
call
mov
add
mov
add
add
call
mov
sub
mov
sub
add
push
call
mov
mov
mov
add
mov
mov
xor
cmp
jbe
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
adc
mov
mov
mov
mov
dec
jne
mov
add
mov
mov
mov
call
mov
mov
push
call
mov
sub
mov
and
push
push
call
xor
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
sub
push
call
mov
mov
mov
sub
call
mov
sub
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
mov
sub
call
mov
add
mov
mov
sub
mov
push
push
call
mov
and
mov
sub
push
call
mov
mov
mov
add
call
mov
mov
mov
push
push
call
mov
sub
mov
sub
mov
call
mov
add
mov
xor
push
push
call
mov
sub
mov
sub
mov
call
mov
mov
mov
add
push
push
call
mov
add
mov
mov
or
mov
push
call
mov
mov
sbb
mov
add
push
push
call
mov
mov
mov
push
call
mov
sub
mov
and
call
xor
sub
mov
mov
push
mov
push
call
mov
add
mov
push
mov
push
call
mov
mov
mov
sub
mov
push
call
mov
add
push
call
mov
sub
call
mov
mov
add
sub
push
call
mov
mov
add
push
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
add
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
push
call
mov
sub
adc
sub
add
push
push
call
mov
sub
mov
sub
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
add
call
mov
mov
sub
add
push
orl
push
call
mov
add
mov
mov
mov
call
mov
and
mov
mov
call
mov
add
mov
sbb
call
mov
add
push
mov
push
call
add
mov
mov
mov
push
call
mov
sub
mov
mov
call
mov
sub
mov
mov
sub
call
mov
add
push
call
mov
mov
mov
push
push
call
mov
sub
sub
mov
mov
push
call
mov
mov
mov
add
push
call
mov
mov
mov
sub
mov
add
call
mov
sub
mov
call
mov
mov
mov
sub
call
mov
mov
mov
call
mov
add
mov
push
call
mov
add
mov
mov
sub
mov
push
push
call
mov
sub
mov
push
call
mov
add
mov
sbb
xor
call
mov
add
or
push
call
mov
mov
mov
mov
sub
call
mov
sub
mov
push
mov
push
call
mov
mov
mov
call
sbb
mov
mov
push
mov
push
call
mov
sub
mov
sub
mov
call
mov
sub
add
push
push
call
mov
mov
mov
mov
call
mov
mov
add
sub
call
mov
add
mov
mov
push
push
call
mov
sub
mov
mov
push
push
call
mov
sub
mov
sub
push
push
call
mov
mov
mov
mov
mov
push
call
mov
add
mov
call
sbb
or
mov
call
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
push
push
call
mov
mov
mov
call
mov
sub
sub
mov
mov
push
call
mov
sub
sub
mov
mov
call
mov
sub
mov
mov
mov
push
push
call
mov
mov
mov
xor
push
call
mov
sub
mov
add
add
push
call
mov
mov
mov
or
mov
mov
push
call
mov
or
mov
mov
push
push
call
mov
mov
add
sub
push
call
mov
add
mov
call
mov
mov
mov
add
push
call
mov
mov
mov
mov
call
mov
mov
mov
sub
push
mov
push
call
mov
add
mov
and
add
push
call
mov
mov
push
call
mov
add
mov
mov
sub
push
call
mov
add
mov
mov
mov
push
push
call
mov
mov
mov
mov
add
push
call
jns
push
js
dec
add
add
dec
pop
xor
add
push
inc
push
add
add
add
arpl
add
add
inc
add
add
push
add
inc
add
add
add
jns
inc
inc
add
add
inc
add
add
push
imul
add
outsl
add
adc
and
mov
mov
mov
mov
push
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
or
push
mov
push
call
mov
mov
sub
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
add
push
call
mov
mov
add
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
add
mov
mov
sub
mov
call
mov
add
mov
push
call
call
mov
add
add
mov
mov
call
mov
mov
mov
mov
add
mov
push
mov
push
call
call
sub
sub
mov
mov
push
push
call
mov
mov
mov
call
or
add
mov
sub
call
mov
add
mov
mov
call
mov
add
mov
mov
call
call
push
mov
push
call
call
mov
push
call
call
call
mov
add
sub
mov
mov
add
mov
mov
call
mov
mov
ret
nop
nop
nop
mov
add
sub
mov
sub
sbb
call
mov
add
sub
sub
ret
nop
mov
add
mov
mov
mov
add
mov
add
mov
sub
call
mov
mov
add
mov
mov
call
mov
add
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
add
sub
ret
inc
gs
dec
add
xor
imul
add
sarl
mov
jne
fadd
enter
leave
add
es
das
imul
mov
inc
xor
cltd
mov
cld
inc
mov
mov
push
cmp
inc
inc
cltd
rol
cmp
mov
shlb
fdivrs
inc
fadd
sarb
pop
addb
lret
into
aas
pop
scas
inc
cmp
enter
dec
mov
pop
xchg
int3
mov
xchg
rorb
add
and
outsl
cmp
cmp
mov
std
pop
stos
inc
cmp
adc
fadd
cmp
mov
cmp
fdivs
pop
pop
lcall
push
rclb
movb
leave
and
icebp
add
ret
push
mov
adc
inc
dec
aaa
sarl
sahf
or
data16
fs
ret
mov
rcrb
cmp
bound
or
leave
cmp
bound
fadd
enter
adc
sahf
dec
dec
mov
pop
inc
lds
mov
ja
shlb
mov
cmp
push
cwtl
shlb
inc
imul
cmp
das
sbb
nop
rolb
cmp
bound
and
or
mov
cmp
mov
inc
in
mov
out
cmp
cmp
fisttpl
test
fnstsw
movsl
add
fmull
dec
cmp
mov
and
cmp
cmp
rorb
repz
cmp
cmp
cmp
inc
dec
fadd
test
xchg
fmuls
inc
jle
cmpsb
cmp
cltd
and
cmp
mov
xor
scas
dec
mov
cmp
fadd
lods
xlat
mov
pop
cmp
iret
js
cmp
cmp
cmp
cmp
cmp
add
add
lahf
inc
pop
xchg
xor
sbb
mov
stos
dec
lret
xor
mov
shlb
into
pop
arpl
iret
into
movsb
mov
mulb
push
enter
fiaddl
mov
cmp
and
retw
rcll
mov
rorl
sarb
popa
xchg
rol
inc
mov
les
dec
ds
fadd
inc
push
pop
adcl
clc
add
js
xor
add
add
inc
cmp
fwait
adc
sarl
repz
mov
inc
fcom
mov
inc
cmp
cwtl
outsb
iret
loope
dec
fcoms
cmp
rorb
push
mov
or
mov
mov
push
rorl
test
xchg
les
dec
cli
mov
cmp
cmp
adc
cmp
xor
inc
incl
lcall
xor
inc
cmp
outsl
loopne
push
jle
jmp
inc
cmp
test
mov
bound
cmp
fidivrl
cmp
fdivs
or
push
ficoml
mov
ds
inc
or
or
xor
inc
cmp
xchg
push
adc
mov
pop
add
inc
xchg
rolb
ret
xchg
add
add
sub
cmp
and
fadd
inc
jb
or
pop
rcrb
jo
rolb
imul
clc
xor
xchg
cmp
add
pop
cmp
xor
jo
fnsave
sub
mov
rolb
rolb
adc
push
fcoms
inc
cmp
shrb
fwait
pop
nop
cmp
sarb
rorb
pop
fadd
inc
cmp
sub
cmp
es
fadds
sbb
sarb
les
push
fadd
inc
cmp
cmp
fdivs
cs
sarl
cmp
fcoms
cmp
rolb
dec
cmp
fadd
sahf
dec
fdiv
inc
and
mov
aam
and
fiadds
sarl
imul
adc
daa
into
movl
fadd
cs
arpl
cmp
cltd
insl
or
arpl
push
sbb
sbb
imul
dec
mov
imul
pop
imul
sub
pop
in
inc
cmp
dec
rorl
cmp
ret
ret
push
xchg
mov
cmp
cmp
ret
dec
fmul
stos
in
mov
add
cmp
fdivs
mov
pop
pop
pop
mov
add
xlat
mov
push
cmp
mov
inc
cmp
mov
imul
fwait
sti
sarl
mov
inc
sti
pop
ds
call
or
cmp
outsb
cwtl
cmp
dec
data16
sarl
lcall
mov
jno,pt
xorb
movsb
rolb
cmp
cmp
inc
cmp
sarb
sarl
cmp
shrb
inc
dec
mov
cmpsl
cmp
outsl
test
fcmovb
push
add
and
inc
cmp
add
aad
xchg
imul
and
repz
rolb
cmpl
fld
inc
jg
mov
clc
stc
mov
xor
cmp
cmp
rcr
fcomps
inc
cmp
cmp
cmp
lcall
shrl
inc
outsl
fadds
pop
shrb
cmp
and
xor
xor
scas
jmp
testl
cwtl
test
lahf
les
roll
mov
les
std
and
adc
xor
xchg
rclb
pop
adc
sub
fdivrs
cmp
rclb
inc
cmp
lds
mov
flds
xor
jmp
add
into
cmp
lds
inc
or
sub
call
fs
add
inc
add
jp
in
sbbl
jp
pop
out
or
lock
sub
mov
dec
or
push
sub
fisttps
sarl
dec
clc
ret
dec
dec
mov
mov
xchg
add
repz
add
xchg
mov
pop
pop
cwtl
pop
pop
or
inc
pop
or
mov
repz
jl
repnz
in
xchg
aam
shll
in
add
in
inc
adc
and
sbb
push
mov
sbb
mov
add
out
movsb
std
in
mov
addb
cwtl
dec
cmp
fmull
adc
rorb
cmc
mov
push
mov
mov
jecxz
xchg
jecxz
cmpsb
jo
insb
mov
jo
lret
in
fistpll
dec
scas
fdivs
xchg
jne
xchg
push
ja
jge
jne
icebp
dec
scas
pusha
cmp
dec
scas
pusha
mov
fistpll
xchg
cmpsl
sbb
icebp
inc
and
ljmp
les
hlt
nop
ret
daa
xor
les
insl
in
xor
aam
enter
iret
es
cli
mov
sub
mov
pop
arpl
inc
int3
popa
adc
mov
jle
movsl
sahf
jge
sub
in
stos
std
adc
push
inc
adc
shlb
inc
jg
pop
cmp
pop
mov
sbb
pop
mov
fwait
inc
mov
fwait
inc
and
mov
push
cmp
pmulhuw
leave
paddusw
inc
cmp
rolb
cmp
cmp
loope
add
inc
cmp
cmp
cmp
dec
pop
pop
arpl
shrb
pop
aam
cmp
rorl
dec
inc
imul
mov
inc
cmp
into
sarb
inc
aaa
sarl
cmp
fimull
inc
cmp
cld
xor
arpl
inc
or
lods
fidivrs
cmp
inc
cmp
scas
cmp
popa
ret
mov
push
jne
inc
xor
jne
and
movsb
cltd
arpl
cmp
cmp
ds
dec
add
mov
imul
inc
cmp
mov
ja
shll
rorl
fs
inc
push
test
cmp
cmp
or
ret
loope
sarl
fadd
push
stc
out
cmp
sarl
dec
mov
subb
leave
fadd
inc
bound
cmp
and
inc
cmp
sbb
cmp
out
and
iret
leave
rcr
inc
dec
lcall
add
andl
cmp
rol
fnstenv
inc
cmp
mov
push
mov
loopne
pop
cmp
rol
fmulp
enter
cmp
pop
stc
cmp
cmp
ret
sbbl
cmp
cmp
xchg
rorb
rclb
cmp
ss
cmp
cmp
ror
pop
dec
or
or
inc
cmp
add
inc
dec
pop
scas
inc
cmp
lcall
cmp
jns
cmp
cmp
cmp
adcb
rol
mov
mov
into
inc
sbb
shr
insb
mov
dec
cmp
mov
dec
cmp
mov
les
inc
cmp
gs
lcall
les
cmp
fadds
jbe
rcl
in
cmp
ficoml
inc
xor
in
fmuls
dec
sarb
cmp
rorb
les
lret
rorb
call
cmp
or
cli
rol
call
imul
into
adc
xor
les
inc
cmp
aas
dec
mov
fadd
aas
lds
sarl
mov
mov
and
inc
cmp
pushf
mov
xchg
pop
mov
call
in
mov
roll
out
cli
cmp
rcrb
pop
inc
inc
cmp
dec
pop
ret
mov
dec
sarb
cmp
cmp
inc
cmp
inc
mov
cmp
mov
inc
cmp
movl
rolb
cmp
mov
pop
test
cmp
fdivrs
addr16
enter
cmp
cmp
mov
inc
cmp
xchg
lds
aaa
dec
fstpt
pop
aam
cmp
roll
or
iret
mov
lcall
cmp
cmp
mov
iret
popf
xlat
mov
inc
cmp
lcall
fdivrs
cmp
fadd
adc
bound
mov
inc
xor
lds
cmp
leave
and
add
mov
pop
and
scas
xor
pop
mov
cmp
adcl
xchg
pop
fwait
loope
into
orb
push
pop
cmp
fadd
lret
lcall
out
ss
or
flds
in
mov
jp
or
sub
mov
sub
into
addr16
out
mov
rclb
fs
jp
loopne
arpl
and
scas
xchg
mov
xchg
lret
popa
std
cs
xor
inc
fldenv
fistl
inc
fucomip
cmp
repnz
and
or
push
aaa
xchg
filds
cmp
jecxz
mov
xor
push
dec
push
mov
pop
sub
pop
sub
dec
xor
xor
cmp
call
mov
pop
sahf
mov
dec
sub
or
sub
cmpsl
mov
cmp
jmp
adc
call
ret
cmpsl
sub
dec
in
and
lret
xchg
enter
aad
mov
push
sub
loope
cmpsb
mov
out
and
sub
sbb
or
shlb
fadd
or
les
sub
call
je
lea
mov
fdivrs
mov
mov
and
cmp
jbe
sbb
out
xchg
loopne
andl
jbe
notl
out
int
or
ret
add
inc
cmp
fcoml
cld
mov
xlat
cmp
sbb
push
nop
arpl
and
data16
inc
fsubl
pop
ss
shl
jmp
mov
jp
sarb
daa
stos
scas
xorl
push
sbbl
xchg
aaa
push
adc
fisubl
pusha
xor
sbb
sbb
cli
test
ret
jbe
add
adc
push
cmp
mov
dec
cmp
add
mov
lcall
xor
aad
push
or
cwtl
and
push
jg
ss
aad
les
jns
inc
push
pop
xor
int
xlat
mov
test
jno
loope
imul
gs
gs
test
sub
push
mov
pushf
dec
stos
stos
shrb
dec
push
lahf
jns
sub
push
mov
push
and
cmpsb
pop
out
fadds
jbe
xlat
dec
jnp
sbb
sbb
xlat
sub
push
test
add
xor
iret
push
xor
loope
xchg
xchg
push
sbb
imul
push
add
daa
cmp
insb
stos
pop
inc
sbb
push
adc
ret
fwait
adc
inc
adc
or
mov
leave
outsb
xchg
daa
pop
xchg
insl
dec
or
or
ret
jne
test
in
jbe
rcrl
sub
sti
das
clc
fcompl
pop
sbb
push
test
bound
sub
jbe
loope
aam
or
jmp
cmp
int3
xchg
popf
sub
shll
out
xlat
jg
mov
mov
cmp
arpl
cmp
add
and
sub
or
xchg
pop
fucom
adc
bound
inc
je
fildl
dec
adc
repnz
repnz
mov
lods
pop
lea
push
push
in
pavgw
sbb
into
shll
sbb
in
add
loopne
mov
lea
mov
scas
je
or
sub
jge
je
cli
cmp
lds
stc
xchg
mov
ljmp
cli
lret
aas
pop
roll
rorb
pop
popa
lret
addr16
bnd
sbb
push
push
xor
popf
ret
lahf
or
xor
mov
ret
or
jne
loopne
inc
dec
or
es
daa
sbb
sub
idiv
pop
inc
rep
jne
popl
test
push
or
xchg
out
and
xor
mov
jmp
popf
cmpsb
add
shl
fisubrs
mov
push
jecxz
jno
je
dec
xchg
sbb
mov
jne
loopne
int
test
jmp
inc
sub
jmp
mov
loopne
push
jae
shl
xor
roll
ds
fstp
push
and
lcall
sub
jg
jnp
in
add
cmp
ja
shll
mov
sub
jge
pop
outsl
pop
pusha
push
push
cmp
push
stc
jmp
repz
icebp
push
xor
cltd
jle
popf
dec
mov
xor
adc
call
lcall
xor
jbe
into
mov
push
mov
cli
aas
push
lea
or
imul
cmp
mov
ljmp
jl
lds
inc
filds
mov
cvtdq2ps
inc
or
not
cli
jmp
ja
je
scas
xor
fsubr
jbe
setb
mov
aas
imul
xor
cmp
ja
outsb
arpl
fs
jnp
jo
mov
mov
xor
jne
push
mov
lds
push
call
mov
sub
cs
mov
push
fs
push
test
movsb
and
ss
je
push
test
popa
popa
ljmp
xor
aad
lock
adc
pop
push
adc
cmp
mov
mov
addr16
loop
inc
mov
outsb
xor
sub
lahf
mov
mov
mov
dec
into
push
leave
aaa
in
xchg
mov
dec
push
push
pop
rorl
and
mov
call
outsl
insl
sub
out
cmp
insl
mov
mov
push
insb
cli
mov
shll
dec
popa
pop
push
xor
in
icebp
js
pop
mov
sub
mov
jecxz
push
mov
call
ljmp
sbb
xor
fbld
enter
cmp
or
imul
divb
out
xchg
xchg
fsubs
hlt
pop
jne
rcl
sub
enter
daa
dec
insb
loop
fdivl
out
push
aad
popa
xor
fisubrl
fwait
roll
cmp
fcmovnu
mov
in
addr16
movsl
mov
jle
jnp
sub
add
daa
iret
aaa
push
addl
arpl
adc
lock
push
adc
ljmp
clc
call
out
fcompl
lcall
imul
mov
inc
jl
adc
adcl
jg
nop
popa
dec
sti
cmpl
inc
test
pop
sub
mulb
rcrl
push
and
movb
add
dec
in
xor
test
hlt
jl
into
jp
xchg
mov
aas
mov
dec
cld
pop
movsl
loop
mov
sub
push
mov
js
movw
inc
mov
int
inc
lret
fisttpl
lahf
add
push
sbb
movb
push
and
cld
pop
sahf
push
push
add
mov
call
cltd
mov
mov
daa
mov
push
push
dec
pop
stos
lcall
adc
bound
popa
ret
xchg
sahf
jne
insb
sarl
sbb
jl
fdivs
fldenv
mov
jle
add
dec
xor
das
and
push
imul
and
mov
or
push
test
xchg
idivb
pop
pop
out
fiaddl
mov
rcll
loop
movsl
jecxz
in
jno
in
cwtl
inc
xchg
pop
test
inc
shl
popf
push
mov
dec
adc
ljmp
push
inc
push
cs
cmp
lret
lea
and
add
mov
scas
rolb
xorl
cmp
shrl
sub
fistpll
xchg
stos
rorl
sbb
out
cmp
cmp
adc
adc
mov
cmp
jno
sbb
in
dec
sarl
loope
rdtsc
push
xor
mov
arpl
pop
cmp
pop
mov
scas
ja
pop
fcom
mov
stos
arpl
cmp
inc
push
adc
sub
pushf
mov
call
mov
dec
and
mov
sbb
movsl
or
aaa
inc
xchg
cmp
sub
push
clc
out
and
hlt
cmp
mov
popa
call
pusha
dec
mov
mov
push
rol
arpl
mov
cmp
xchg
cli
ljmp
sbb
lret
mov
sbb
mov
scas
push
out
mov
mov
mov
pop
xor
int3
js
roll
hlt
mov
imul
pushl
xchg
and
cmp
add
fbld
call
lods
and
leave
mov
and
and
pop
shrl
and
pop
out
xlat
outsb
lds
jo
addr16
aas
das
or
outsl
add
aaa
rorb
test
fdivrs
ret
adcb
sub
jp
and
movsb
ss
jmp
mov
inc
xchg
pop
fists
sub
add
sub
dec
jbe
stos
arpl
popf
push
or
hlt
lret
add
test
in
jno
push
add
jge
cmc
push
add
jae
lods
pop
loopne
rorb
xchg
out
je
mov
pop
cwtl
ljmp
iret
push
sub
jl
push
sbb
movsb
pop
inc
or
in
jl
push
lahf
insb
jb
outsl
adc
addr16
divb
aaa
rclb
pop
xchg
lahf
mov
iret
fdivrl
pop
rcr
pushf
push
imul
push
iret
mov
add
xor
mov
jge
mov
pop
lods
jnp
sahf
mov
sub
rcll
and
jbe
mov
push
mov
fadds
lock
mov
add
cmp
cltd
sub
xor
inc
cltd
xchg
sbb
repnz
fwait
sbb
cmp
in
je
xor
aad
flds
add
jecxz
sbb
jmp
push
call
mov
call
js
pop
add
pop
or
pop
movsl
xor
pop
leave
inc
fstpl
push
sub
xchg
rcll
cmp
call
push
pop
inc
pop
xor
cmp
cmpsb
or
adc
aas
xlat
add
cmp
sub
sub
adc
arpl
sbb
sbb
push
sub
cli
adc
pop
adc
fisubrl
add
js
or
incb
dec
popa
es
inc
push
push
adc
or
repnz
inc
adc
jmp
pop
xor
cmp
je
sti
stos
lret
jecxz
jnp
jne
dec
jo
lea
cmp
adc
test
gs
rorl
les
sbbl
data16
sbb
xor
inc
in
test
pop
jae
inc
lcall
push
pop
insb
cmp
cmp
adc
stos
dec
cltd
hlt
cmp
sbb
icebp
dec
popa
jmp
inc
popa
xlat
jmp
shll
xor
jo
inc
pusha
sub
popf
adc
dec
sub
sub
sbb
push
jno,pn
into
es
push
pop
ret
mov
add
rcll
and
jge
mov
push
mov
std
jmp
pop
imul
pop
testl
xor
ljmp
pop
fildl
add
push
into
outsl
jb
imul
pop
dec
push
and
jne
push
je
dec
testl
jne
insb
fisubs
mov
and
inc
cli
je
mov
in
push
pop
pop
ds
jp
push
flds
xchg
aaa
or
testl
dec
inc
jne
adc
mov
mov
push
sub
push
dec
inc
sub
pop
adc
sbb
dec
fisttpl
jle
xchg
enter
jle
iret
mov
push
push
aam
adc
push
leave
repnz
jo
and
add
push
add
mov
dec
daa
xor
repz
jmp
xor
popa
sbb
add
pop
xor
sub
ficoms
push
ss
and
ret
and
shrb
fnstcw
cli
sub
cwtl
dec
adc
mov
pop
inc
popf
jge
inc
lea
cmp
je
popa
push
call
or
sti
pop
jne
fcmovnu
test
sub
pop
xor
lea
icebp
jle
std
test
into
call
cmp
mov
imul
aaa
inc
jge
inc
adc
imul
sub
pop
dec
pop
outsb
out
fdivrl
pop
or
adc
pop
inc
dec
xor
cmp
je
daa
add
sarl
testb
fsts
dec
loope
bound
jg
je
jge
cmp
mov
pop
ficoms
lret
jbe
fldl
aad
fnstenv
ret
lret
popf
push
loope
xorl
aaa
mov
push
mov
xchg
inc
pop
bound
jne
mov
int
push
pop
fisubs
mov
call
notb
lret
add
test
sub
out
orb
add
in
sub
pop
cmp
call
insl
cli
push
cmpsb
loope
mov
dec
fmuls
mov
es
movsl
fdivs
jmp
push
adc
sub
sbb
ret
repnz
cwtl
push
cli
add
lcall
cmp
sahf
xchg
pop
fdivrs
inc
cmp
and
bound
push
ss
stos
dec
mov
out
movsb
stc
push
icebp
test
dec
pop
or
ljmp
pop
arpl
sub
imull
add
dec
andl
negl
rolb
pop
daa
add
addr16
lods
test
cltd
aaa
jbe
adc
jbe
loop
outsl
test
pop
jp
push
add
ss
fucomi
push
push
and
sbb
push
cmpsl
push
push
and
movsl
rorb
dec
scas
add
stc
mov
ds
mov
pop
das
add
shrb
ret
xchg
pop
sbb
jns
in
push
andl
cmpb
pop
mov
cmc
or
push
out
inc
or
and
insb
rol
outsl
cmp
pop
xlat
sbbb
js
push
adc
fisttps
push
fld
aam
push
and
pop
les
js
push
scas
js
ja
or
cmpsl
xchg
add
push
lds
adc
or
fwait
cmp
ret
imull
jnp
adc
pop
or
mov
aaa
pop
pop
fadds
decl
fstps
andb
pop
lcall
aaa
fcmovnu
divl
or
rorb
sbb
sbb
inc
lret
add
jle
push
lds
dec
fdivrl
loopne
cmp
mov
repz
mov
push
pushl
clc
orb
and
cmpsb
jmp
cmpsl
pop
or
pop
push
arpl
adc
mov
lret
cwtl
mov
es
fwait
les
ret
outsl
cmp
ficoml
faddl
data16
push
mov
push
arpl
push
jecxz
jae
xor
push
pushf
ret
push
dec
aaa
add
notb
out
test
daa
adc
jno
enter
in
cmp
push
xorl
jecxz
mov
jecxz
hlt
cmp
in
notb
add
stc
xchg
mov
rcll
push
jbe
xor
pmaxsw
push
fnstsw
loopne
mov
sub
xchg
das
and
movsl
repz
divl
mov
sbb
out
scas
and
adc
push
lods
outsb
scas
cmc
or
push
outsl
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
dec
add
add
add
xor
add
js
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
push
aaa
add
add
add
add
dec
add
add
inc
add
add
add
add
add
add
je
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
inc
add
add
add
add
add
add
add
dec
add
add
add
dec
add
pop
push
add
add
add
add
add
add
inc
add
jae
add
add
add
add
jo
add
add
xor
add
add
add
add
push
add
inc
add
add
push
dec
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
data16
push
add
pop
dec
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
jp
add
add
push
add
add
add
dec
add
add
add
add
add
dec
ja
jne
add
add
bound
add
add
jb
add
add
add
jne
arpl
add
add
add
add
add
add
add
dec
inc
inc
out
dec
lret
jbe
fdivrs
mov
in
sub
xchg
lcall
xchg
or
jbe
bound
jo
mov
rcll
jmp
movsl
and
mov
enter
add
fwait
pop
inc
stos
rolb
lret
push
adc
sbb
adc
mov
adc
out
and
enter
and
dec
pop
icebp
cmp
addr16
fdivs
mov
mov
jge
lcall
inc
sti
cwtl
loope
sub
lods
subl
mov
cmc
loopne
pusha
lds
pusha
into
push
rcrl
cld
adc
or
mov
mov
cmp
arpl
sub
sbb
cmc
std
incl
push
into
fsubrs
into
addr16
in
lret
cmc
call
push
mov
pop
inc
add
scas
jge
adc
ficoml
fldcw
lret
dec
shll
push
ret
jecxz
mov
dec
jp
sbb
pop
ret
sbb
test
jge
xchg
cmp
adc
xor
fiadds
xchg
in
xchg
lcall
out
lcall
stos
clc
loop
pop
push
xlat
addr16
push
and
mov
mov
jno
aaa
nop
jle
xchg
dec
insb
adc
pop
jno
pop
jne
bound
cmp
inc
mov
pop
fdivl
add
add
add
inc
mov
mov
jp
aaa
mov
and
loop
add
inc
add
clc
dec
or
cvtpi2ps
push
cmp
adc
in
test
push
out
sub
or
or
sbb
pop
add
inc
mov
mov
mov
sti
call
aaa
push
nop
push
pop
jns
call
pushl
push
and
dec
sub
inc
fucomi
pop
cmpsb
into
bound
imul
call
mov
hlt
cmpsl
mov
in
int3
pop
xchg
cltd
lcall
push
inc
cmp
dec
mov
sbb
cli
or
ret
scas
aam
pop
cli
movsbl
inc
jns
xor
iret
out
adc
adc
shlb
dec
sub
arpl
shr
daa
or
or
sbb
adc
call
dec
sub
adc
xchg
popa
xchg
inc
push
and
pop
dec
adc
pop
inc
add
inc
or
jae
inc
adc
adc
jl
adc
mov
ja
sbb
sbb
mov
and
jecxz
sti
dec
rcll
sub
push
sbb
push
sub
sub
cmc
xor
leave
push
and
popf
dec
stc
and
pop
xor
sti
sub
std
and
pop
adc
mov
sti
aam
sub
outsl
and
xor
shll
xor
arpl
jecxz
cmc
xor
shll
xor
and
out
jbe
jmp
push
cmp
or
push
push
loop
sti
mov
sub
sub
imul
out
into
xor
inc
arpl
fwait
sbb
arpl
mov
and
dec
push
adc
sti
jnp
jge
gs
addr16
mov
repz
jmp
insb
push
sub
gs
and
jmp
and
aaa
pop
inc
push
inc
push
push
jge
js
jb
movsl
and
mov
push
xlat
push
mov
rolb
data16
pusha
arpl
pop
fisubrl
add
outsl
outsb
mov
pop
sub
adcb
xor
and
jmp
adc
bound
sbb
or
jbe
js
push
dec
jnp
cli
jp
arpl
cmp
push
sbb
pop
test
outsl
cmc
je
inc
dec
nop
dec
ss
sub
fcoms
pop
pushf
add
call
insb
pop
or
iret
push
xlat
cltd
mov
ss
lret
cmp
push
sti
data16
inc
push
lea
inc
xor
jp
add
or
sbb
sti
fbstp
fidivl
push
xchg
pop
mov
push
or
fwait
xor
pop
icebp
sub
pop
xchg
mov
insl
push
pop
icebp
in
nop
lea
add
push
in
sub
rcll
je
rsm
push
popa
sub
push
call
dec
push
je
xchg
imul
cmp
lea
fistpl
xlat
sti
pop
sub
mov
mov
or
les
pop
mov
jb
pushf
lods
push
mov
into
mov
mov
mov
mov
mov
mov
jns
popa
xchg
push
mov
pop
popa
push
add
cmp
push
nop
data16
xchg
subb
xchg
outsb
cwtl
push
in
push
add
xor
push
in
xor
sti
add
imul
ret
mov
dec
mov
cltd
sbb
enter
aam
cmpsl
push
xor
pop
xchg
and
hlt
or
lock
mov
and
jo
into
gs
fiaddl
pop
ret
in
mov
mulb
subb
jp
xor
or
ret
push
pop
or
gs
push
sub
cmpsb
pop
and
or
int3
jno
push
add
lods
aaa
push
bound
incb
or
out
mov
xor
push
cltd
gs
mov
xor
xor
negl
sahf
xlat
push
inc
frstor
loope
push
icebp
loopne
out
leave
mov
lods
shlb
or
rcr
bound
or
inc
pushf
cmp
add
ja
push
repnz
in
outsl
punpcklwd
mull
xor
jle
arpl
or
mov
popa
mov
xchg
mov
and
xor
popa
arpl
jnp
les
adc
aam
dec
adc
cmpb
int
enter
cmp
cmc
and
mov
ss
sub
add
dec
fnstsw
into
add
push
push
stos
pop
ret
iret
push
push
cmp
dec
push
aad
xor
mov
mov
int3
pop
lds
sbb
mov
dec
int3
stos
pop
pop
aad
sub
fdivrl
sbb
lahf
les
sub
xor
pop
outsb
hlt
loopne
push
jo
out
fadd
xchg
sub
dec
xchg
pop
ja
pop
outsb
ja
push
sahf
jp
cli
mov
mov
sti
mov
bound
js
jb
inc
aaa
sbb
push
mov
jle
int3
mov
and
sub
xchg
add
mov
or
push
add
out
ret
in
fisubl
jl
push
and
sub
icebp
and
pushf
lret
ja
cmp
lea
fdivrs
fcmovnu
or
pop
pop
jne
xchg
lods
push
pusha
or
insb
sbbb
mov
mov
notb
std
push
mov
add
setnp
jne
and
sbb
jae
xlat
push
jp
aaa
jmp
sbb
movsl
mov
mov
add
pop
ret
mov
and
ja
loope
lcall
insb
inc
pop
or
mov
pop
or
mov
xchg
sbbb
mov
mov
scas
inc
sub
push
popa
sar
add
jle
mov
loope
push
adc
jb
lock
ljmp
pushf
je
lcall
lods
repnz
cmp
jg
xchg
pop
jp
int3
xor
cmp
pop
mov
lea
sub
fadds
jg
cmp
mov
jl
lds
cli
sub
xchg
clc
dec
cmp
push
cmp
cmp
shrl
sbb
push
cmp
jne
shlb
pop
rcll
loopne
icebp
push
xchg
or
push
ret
push
push
setp
push
into
adc
loope
or
push
stc
inc
sub
push
inc
dec
je
push
cmp
cmp
xchg
sti
sub
push
add
arpl
pop
sahf
mov
movl
sub
sub
ret
cwtl
mov
dec
in
dec
cld
cmp
fiaddl
mov
enter
pop
lret
sahf
dec
mov
xchg
and
sub
lea
stos
sbb
gs
movsl
pop
push
push
movsb
mov
in
or
mov
inc
outsb
or
int
jns
lahf
stos
bound
and
cmp
popa
call
sbb
cmp
sahf
sar
fiadds
ficompl
pop
cmpsb
aam
pop
mov
mov
std
xor
sub
push
push
xor
jmp
sbb
pop
add
lods
daa
push
negb
adc
push
push
popa
lods
outsb
pop
sub
xor
mov
push
pop
push
pop
and
test
push
mov
in
pop
shl
pop
push
mov
push
mov
pop
sbb
enter
enter
inc
push
es
or
popf
je
push
add
add
ja
aad
fwait
mov
cmp
push
sbb
push
pusha
iret
xor
hlt
bound
pop
std
xor
and
mov
add
data16
inc
cmpl
push
ror
pop
mov
or
cmp
mov
push
pusha
inc
loopne
sub
lret
mov
ffree
fcmovb
mov
mov
xchg
imul
push
or
jne
sub
push
adc
dec
mov
outsb
je
das
inc
and
push
pop
rdpmc
inc
pop
popa
lea
xlat
mov
mul
cmp
out
stc
push
sub
push
adc
push
ds
or
imul
mov
lea
or
cmpb
dec
mov
push
dec
lods
outsl
push
hlt
or
sub
or
add
xchg
popa
ja
push
jnp
push
xchg
fistl
inc
push
int
pop
and
push
xor
call
adc
and
jp
pop
jp
sbb
add
mov
xor
popa
push
imul
push
out
scas
jp
ficompl
mov
push
cmp
lea
bound
mov
add
jbe
xchg
mov
xor
push
sub
out
mov
jae
fstp
jns
enter
in
outsb
pcmpgtw
iret
cmp
fadds
ret
and
ja
clc
cltd
call
push
call
push
std
and
push
add
xor
cmpsl
jne
push
push
dec
inc
xlat
and
fsts
xchg
and
xchg
push
lock
incl
push
push
sub
lea
mov
jne
cmpsb
mov
add
call
enter
xchg
clc
rolb
test
push
cmp
daa
repz
les
scas
icebp
and
cmp
sub
xchg
dec
xlat
or
sti
repz
inc
push
mov
in
clc
out
lods
or
test
stc
imul
addr16
fs
add
or
int
inc
cmp
rcrb
cmc
mov
pop
adc
addr16
cmp
test
mov
cmp
enter
push
or
push
adc
jae
xchg
jmp
mov
push
xor
sbb
sub
js
xchg
xchg
loopne
push
fsubr
add
push
add
mov
cmp
out
dec
lods
mov
push
xor
xor
aaa
inc
sti
sahf
fmul
mov
push
loop
ljmp
push
push
bound
ficoms
xchg
fcmovnb
mov
es
sbb
inc
cmp
sub
test
aaa
and
mov
pop
enter
inc
sti
push
dec
and
mov
pop
push
push
les
mov
and
dec
push
xchg
push
jecxz
bnd
cmpsl
clc
adc
test
cs
xor
inc
mov
daa
ljmp
icebp
adcb
cmp
clc
adc
xor
push
mov
gs
mov
loop
and
push
cld
sti
push
push
adcl
sti
clc
les
mov
push
inc
xchg
ds
outsb
jp
dec
add
in
adc
mov
push
aas
sub
xorb
stos
jmp
loop
adc
dec
insb
inc
add
jne
insl
sub
mov
add
pop
mov
dec
rcrl
sbb
push
mov
lea
shl
ret
cltd
push
or
rolb
and
jge
push
pop
ret
dec
xchg
xor
outsl
add
std
int
dec
dec
lods
rol
push
dec
out
orb
popf
and
lcall
xor
imul
dec
sti
or
stos
in
ret
cmc
mov
mov
popf
mov
ljmp
int
inc
das
repz
roll
push
sbb
scas
dec
xchg
gs
stos
dec
into
mov
push
mov
adc
push
enter
xchg
cmp
mov
mov
fiaddl
ja
imul
mov
mov
xchg
inc
or
setl
pushf
push
sub
lock
push
adc
inc
jne
mov
test
rolb
iret
inc
mov
stc
stos
repz
or
rorl
icebp
xchg
add
dec
fiaddl
jnp
pop
jb
je
or
in
jle
sbb
sarl
imul
sub
in
mov
in
jo
dec
push
repnz
jno
push
push
sub
pop
inc
mov
test
push
push
xor
fstpt
pop
and
mov
sub
add
cltd
and
call
jae
lods
fildl
cltd
jns
mov
cltd
lock
push
call
adc
in
sbb
sbb
inc
leave
test
jmp
shlb
inc
and
cltd
icebp
es
sti
fisubs
mov
push
or
jecxz
nop
iret
and
pop
sub
adc
test
pop
mov
jp
add
pop
test
pop
fwait
jecxz
xor
cmp
jne
lods
add
inc
jno
sub
inc
sub
or
sahf
xor
mov
jp
or
jge
dec
cmp
fwait
popa
jae
inc
cwtl
cld
and
sbb
lock
outsb
roll
aaa
pusha
dec
mov
mov
mov
ja
push
xchg
and
jp
jle
movsb
in
push
sbb
outsb
js
dec
mov
loop
int3
arpl
nop
jp
pop
loop
dec
int3
std
adc
xchg
and
jp
dec
pop
xchg
inc
inc
das
cwtl
cli
and
daa
mov
cld
xrelease
mov
pusha
ss
sbb
xor
or
jp
push
rcr
mov
jp
cli
fiadds
and
sbb
ret
jg
push
mov
sbb
inc
dec
orl
pusha
movsb
out
bound
ret
lea
xchg
mull
adc
cmpsl
aaa
add
mov
jmp
fisttps
jne
pop
and
mov
fcomi
cmc
push
sub
push
aam
cmp
push
imul
mov
xchg
rcrb
int
idivl
ds
frstor
sbb
jne
mov
dec
sti
cmp
or
or
lea
adc
pop
sbb
xor
push
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
inc
add
add
push
add
add
add
add
dec
add
push
add
add
add
push
xor
ja
add
add
jp
add
add
jae
add
add
add
add
ja
cmp
add
inc
add
push
push
add
add
dec
add
add
add
add
inc
add
add
add
ja
add
add
add
inc
imul
inc
add
add
insl
pop
add
outsb
add
add
add
outsb
add
push
add
popa
add
add
add
add
add
add
push
add
add
add
xor
js
add
add
add
inc
add
add
add
push
add
add
arpl
add
add
add
add
add
add
add
add
push
add
add
jo
add
add
jbe
add
add
add
imul
add
add
outsb
add
jp
add
add
add
jo
add
cmp
insb
add
push
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
pop
jno
cmp
add
add
add
xor
add
add
add
add
add
add
push
add
xor
add
add
add
xor
add
push
add
jne
add
jp
add
cmp
push
add
add
add
add
add
add
add
add
inc
add
xor
add
add
popf
and
ja
popf
add
les
cmp
popa
mov
daa
dec
pop
fimuls
and
test
filds
push
push
mov
sbb
mov
loopne
inc
in
xchg
cmp
xlat
sub
pop
out
lea
mov
sahf
mov
mov
pop
test
pop
mov
aam
outsb
mov
dec
rclb
test
das
test
ret
out
fstl
aas
sti
iret
push
mov
pusha
jge
fimull
fsubrl
iret
xchg
mov
inc
mov
xor
in
push
popa
or
pop
pop
scas
inc
sbb
add
lds
sub
lea
aam
fcmove
testb
dec
fdivr
or
push
or
push
jo
in
sub
adc
shll
push
mov
and
aam
icebp
sub
cli
xor
xchg
push
cmp
dec
jge
and
inc
inc
xor
sbb
push
sarl
cld
arpl
icebp
mov
jns
call
and
ds
sbb
notb
mov
and
xor
lret
movsb
xchg
sub
sahf
cmp
push
adc
cmp
bound
iret
xor
test
movsl
mov
shll
stc
add
xor
call
lahf
pop
loope
fs
adc
mov
or
scas
clc
add
mov
sub
mov
fdivl
lret
js
push
add
mov
or
icebp
sbb
add
or
xchg
push
sub
cmp
push
jp
dec
pop
push
lcall
cltd
dec
push
mov
push
pop
std
cltd
sti
mov
negl
mov
iret
call
push
notl
add
inc
add
ljmp
dec
mov
dec
dec
inc
push
es
fsubr
pop
or
mov
push
or
inc
pushf
pushf
in
cmpsb
inc
jp
inc
je
dec
dec
xor
int3
or
shr
loop
jns
jne
and
fisubrs
push
add
pop
pop
xorl
cs
cmp
sti
xorb
rclb
push
jmp
out
cltd
add
jmp
dec
cmp
cld
mov
fcmovne
cmp
xlat
inc
pusha
fsts
push
leave
stc
jecxz
mov
shlb
imul
inc
or
setb
fsub
or
jmp
push
mov
ljmp
rclb
jle
mov
adc
xor
and
mov
push
cltd
cmp
push
je
shrl
in
dec
aam
xor
inc
cmp
adc
mov
mov
adc
insb
incb
or
mov
jne
test
in
sub
push
pusha
js
jne
or
movsb
dec
jmp
int3
xor
push
outsl
mov
push
clc
loopne
cltd
jle
lahf
divb
test
sub
mov
pop
dec
shl
call
es
lret
pop
cmp
mov
xorb
mov
shll
sarl
movl
mov
push
test
pop
jmp
and
inc
adc
jmp
das
fisubrs
scas
or
inc
jecxz
nop
iret
and
pop
xchg
jp
popf
sbb
loope
push
mov
movsb
lcall
add
pop
mov
imul
fadd
adc
cmp
jne
push
mov
inc
icebp
push
sub
pop
sub
cs
mov
inc
fsubp
inc
in
push
push
cmpsl
ret
loopne
or
jae
xchg
mov
arpl
insb
mov
push
inc
jl
jae
out
js
pop
jns
add
pop
pop
cld
repz
inc
jno
jbe
js
ss
cld
pop
hlt
insl
shrb
pop
dec
cmc
xor
mov
lods
cli
adc
jnp
repz
mov
dec
inc
xlat
in
add
or
pop
mov
arpl
jmp
loope
mov
inc
jns
je
cmp
cmpsb
add
insl
scas
sti
sbb
push
xchg
push
add
mov
jne
aaa
and
xor
das
adc
push
cmpsb
outsb
movsb
in
jmp
in
pop
pop
and
push
jns
xchg
gs
xor
add
inc
mov
fsubs
mov
shll
stc
push
ja
xor
push
cmpsb
sbbl
ja
push
outsb
lret
mov
or
xor
jp
test
xchg
lcall
xor
js
addr16
je
push
into
iret
xor
xor
aam
push
movsb
cmp
push
sub
xchg
and
pop
adc
xor
bound
mov
adc
insl
adc
mov
mov
das
mov
push
cmp
adc
filds
pop
insl
rcll
insl
mov
div
sbb
or
mov
lea
arpl
addl
and
mov
out
inc
jmp
xor
cmpsl
xor
or
mov
mov
fcompl
cli
and
nop
arpl
inc
pop
sbb
out
xlat
roll
nop
in
rorb
lods
inc
pop
jbe
mov
cmpsb
arpl
jb
cmp
in
pop
sub
hlt
adc
lods
outsl
push
shlb
add
ljmp
pop
inc
push
adc
xchg
sub
ficoms
adcl
testb
jmp
and
insl
or
sub
mov
push
push
jmp
decb
xor
fld
sti
sub
je
in
sub
xchg
addr16
pusha
movl
and
lea
fsubl
ss
lahf
dec
jae
add
daa
lret
dec
adc
lret
mov
cli
add
xlat
rolb
pop
bound
cmpsb
cs
push
arpl
push
shr
sub
xlat
push
lds
inc
mov
mov
dec
push
cmp
imul
adc
pop
mov
jnp
popa
push
sti
push
jns
jp
mov
popa
push
cmp
cmp
rcll
or
jne
cmp
push
cmp
les
xchg
jb
adc
js
xor
push
stc
mov
imul
jns
push
push
popf
pusha
fists
pop
sbb
jns
mov
in
inc
arpl
inc
mov
jmp
add
mov
push
fisubrl
call
test
cmpsl
ss
sub
push
and
dec
inc
leave
filds
pushf
or
or
sbb
mov
or
jp
jne
ret
push
subl
add
fsts
jmp
dec
mov
aad
fildll
and
xor
mov
jmp
sbb
aad
jbe
cmp
jae
rorl
add
rorb
push
out
pop
mov
cmp
in
xor
js
and
pop
loope
push
sbb
ret
ss
lock
adc
add
ret
and
jecxz
adc
xor
xchg
or
sub
xchg
dec
mov
lods
xor
pop
cmpsl
xor
cmp
loop
cmp
pop
in
push
sub
lea
adc
daa
and
enter
adc
in
loop
sub
xchg
mov
aas
out
adc
lds
xor
pop
mov
dec
rclb
or
mov
mov
iret
xor
xchg
clc
pusha
jbe
lods
mov
je
mov
sbb
add
fisubs
enter
and
pop
sbb
push
add
shll
pop
push
insb
imulb
cmp
ja
xor
jae
cmp
pop
push
jg
push
pop
cli
or
pop
mov
aad
in
sahf
pop
pop
pop
lea
pop
out
push
push
add
pushf
insl
out
loop
testl
cmpsl
repz
jecxz
push
call
gs
jl
dec
and
test
adc
adc
mov
hlt
out
mov
sahf
popa
sub
loope
xor
sti
mov
loopne
in
sub
cmp
out
shrb
testl
dec
arpl
stc
mov
call
mov
in
dec
sub
fildll
jp
cwtl
sahf
xchg
adc
mov
hlt
jne
mov
inc
sbb
insl
and
dec
rol
push
push
dec
shlb
lcall
idivl
and
xchg
add
xor
dec
test
jmp
inc
adc
js
adc
xor
sbb
mov
pop
scas
testb
mov
jnp
stc
sub
out
xchg
xchg
inc
popa
int
inc
pop
mov
add
or
stos
pop
sbb
arpl
mov
and
xchg
scas
sub
scas
inc
and
xor
pop
lds
addb
inc
dec
mov
lea
mov
rorb
dec
mov
sti
test
jae
mov
enter
daa
sbb
imul
mov
addb
test
in
cmpb
in
jnp
jecxz
push
repnz
les
jne
jne
int3
shr
test
cld
mov
enter
pop
loopne
add
inc
cmp
xlat
jecxz
push
mov
cwtl
push
dec
test
outsb
pop
rcrb
or
ret
inc
inc
sbb
mov
sub
shr
and
enter
enter
lea
sti
mov
repnz
call
in
sti
test
cmpsl
cwtl
push
ret
out
dec
pop
xchg
push
jbe
call
push
loop
add
std
and
push
dec
push
mov
aam
mov
xor
xchg
and
mov
jb
cmpsb
mov
mov
iret
mul
ret
pop
pop
mov
loop
fildll
mov
jne
cmp
inc
mov
inc
fcompl
and
lods
jl
or
adc
lret
jle
lret
sub
sub
cli
testb
xor
add
lock
jge
add
fistpll
mov
jl
xor
fldcw
roll
imul
es
repz
leave
jne
push
adc
jl
or
sub
push
or
xorb
stc
adc
fisttps
jp
mov
cmc
sub
jno
sbb
jo
sbb
into
daa
xor
aad
jecxz
mov
out
mov
scas
cmp
jns
jge
mov
icebp
js,pn
mov
or
pop
jg
mov
xor
loope
rcr
xorb
or
or
xor
aaa
pop
xchg
push
mov
call
xor
js
stos
and
lock
xchg
pop
cmpb
or
scas
inc
jp
jnp
lahf
stos
jecxz
idivb
andl
ret
inc
clc
push
jb
ret
js
and
pop
scas
xor
shlb
add
bnd
inc
lea
xor
mov
outsl
popf
jle
lahf
bound
inc
mov
das
call
pop
aas
js
inc
pop
adc
test
mov
pop
mov
mov
push
andl
pop
cmpsb
sub
pop
dec
or
adc
fcoms
adc
xchg
pop
xchg
and
xor
dec
xchg
or
add
jno
mov
mov
test
dec
popa
cmpl
imul
mov
sarl
outsl
aam
cmp
pop
mov
or
icebp
mov
jge
pop
cmp
xor
mov
clc
adc
stc
cmpsl
sub
mov
nop
sub
sbb
push
idiv
jp
xor
or
or
imul
pop
pusha
int3
mov
add
and
fbld
jo
cmp
shl
inc
and
push
out
dec
or
sub
negl
das
mov
in
sbb
mov
aam
lods
jmp
mov
add
ret
mov
aam
testb
or
cmpsl
mov
mov
or
cltd
aad
mov
ss
push
adcb
mov
push
push
rcr
das
call
inc
in
dec
rcll
arpl
pop
jns
or
clc
adc
out
je
lahf
jb
jmp
in
xor
mov
iret
mov
loope
inc
in
fadds
jge
push
shl
call
xlat
xchg
inc
rorl
or
fdivr
arpl
sub
lahf
push
int3
in
xor
push
iret
sub
xchg
insb
repz
push
les
push
loope
cmc
jne
jne
int3
shr
lea
push
or
sub
aad
or
dec
int3
cs
xor
rorb
lea
fmull
pop
mov
into
das
xchg
add
enter
cltd
add
push
stos
jg
inc
add
cmpsb
mov
in
in
adcl
jl
mov
ss
and
das
outsb
pop
xor
rcr
in
adc
xor
and
and
xchg
xor
enter
xchg
adc
rcl
es
xor
inc
mov
test
cmp
pop
or
insl
sysexit
pop
lahf
pushf
subb
test
aaa
push
int3
arpl
shrl
out
mov
push
aad
inc
xor
xchg
add
sbb
insb
xor
xor
fldcw
push
add
sbb
sti
xor
loop
in
lret
push
decb
negb
mov
mov
int
movsb
out
lea
ja
inc
cmp
dec
push
push
popa
push
xor
fwait
and
dec
fists
out
aam
mov
out
cmp
mov
xor
dec
test
or
daa
mov
loopne
testb
sysenter
push
pop
fcmovnu
ret
out
es
testl
jae
jecxz
lea
lahf
in
inc
aad
mov
fstpl
sbb
jle
jno
addr16
or
cmp
lahf
cmp
xchg
in
shl
fldl
xchg
cmp
test
negb
and
mov
mov
mov
jmp
loop
mov
xchg
or
push
es
icebp
push
push
mov
inc
sub
inc
into
ljmp
xchg
mov
xrelease
or
push
push
adc
jmp
out
mov
inc
test
jmp
dec
cmpb
je
jbe
out
mov
pop
mov
fisttpll
call
fisttps
imul
call
sub
lret
and
stc
in
jge
mov
int3
sub
testb
fldcw
and
mov
fst
sub
mov
push
adc
dec
jle
call
jmp
push
stc
cwtl
loope
popa
xchg
les
pop
cld
jne
or
icebp
leave
aad
cmp
daa
dec
mov
mov
mov
jb
push
mov
sub
xchg
adc
jp
loopne
mov
cmc
mov
jecxz
cmpsl
xchg
sub
pop
inc
or
pop
mov
aam
mov
out
jp
adc
mov
testb
mov
scas
inc
xchg
cmpl
xor
dec
addr16
loopne
push
and
add
push
popa
cld
popa
out
addr16
fiaddl
inc
jns
pusha
ss
jl
jg
push
fiaddl
jnp
inc
add
add
je
shlb
scas
inc
js
arpl
xor
stos
or
mov
insb
jo
je
js
xor
add
loop
lahf
add
push
inc
and
jb,pn
fs
je
popa
outsl
addr16
pop
nop
inc
pop
je
push
dec
push
adc
loop
or
pop
xchg
rcl
gs
outsl
arpl
push
mov
int
add
jb
push
call
es
mov
inc
and
mov
jle
shlb
jbe
push
pop
ret
popa
xor
xchg
jo
push
jo
clc
jl
adc
pop
adc
loopne
rcrb
xchg
add
shlb
jb
jmp
mov
mov
cmp
les
mov
enter
clc
xchg
adc
inc
mov
pop
aam
dec
push
jg
divl
fcoml
jecxz
mov
pop
call
in
push
fs
mov
insb
push
jg
cmc
xor
push
je
or
scas
push
jl
or
divl
test
cmc
xor
sti
sbb
nop
inc
sbb
xchg
jg
cmc
xor
mov
sub
movsb
jnp
divl
test
xor
lods
mov
cmp
mov
inc
cmc
xor
sti
dec
aaa
rolb
les
cmc
xor
push
push
arpl
mov
pop
push
mov
cmp
pop
fadds
xlat
imul
jo
loopne
je
xor
push
js
call
inc
subb
test
xor
push
mov
clc
mov
nop
push
jle
xchg
push
cwtl
push
jg
cmc
xor
mov
jecxz
mov
mov
sbb
mov
int3
pop
sub
push
jg
cmc
xor
push
fsub
xor
fcoml
cmp
push
jg
cmc
ss
inc
aaa
insb
mov
divl
push
mov
clc
push
add
test
sarl
push
js
hlt
pop
ret
adc
push
inc
outsb
dec
shrb
push
clc
mov
push
jae
cmc
and
xor
mov
mov
add
pusha
pop
or
mov
adc
add
sbb
cmpw
push
jne
je
mov
add
jbe
test
jne
push
jge
loopne
insl
cmp
imul
or
dec
add
icebp
mov
jns
aam
rcrb
cmc
data16
push
test
setne
add
mov
or
push
push
mov
setl
jae
prefetch
or
add
ljmp
orb
enter
hlt
insb
inc
push
push
adc
fs
push
xchg
outsb
jge
test
nop
in
mov
or
cs
sti
icebp
pusha
in
call
cmp
push
jne
and
int
out
jmp
add
fcomip
rcr
add
pop
rorl
mov
xchg
fidivs
push
push
call
test
mov
roll
insl
rorl
cli
leave
in
outsl
sbb
aad
adc
sbb
ficoml
outsb
lea
sti
in
xor
or
loop
xor
fsincos
and
jecxz
mov
sti
test
jmp
jbe
call
adc
loop
xor
cmp
ret
adc
cld
icebp
jge
sbb
es
sub
push
add
std
pop
lods
divb
adc
add
mov
adc
sub
popa
sub
jg
and
push
push
mov
ret
adc
std
or
call
jp
scas
mov
not
or
stc
mov
dec
push
add
sub
xor
jo
arpl
mov
inc
lock
mov
je
bound
cmp
push
pop
adc
addr16
mov
xor
shr
jg
loope
push
push
mov
adc
xlat
mov
call
push
mov
add
test
push
xor
call
jmp
pop
repnz
decb
fcoml
outsl
and
inc
mov
pusha
add
pop
push
inc
mov
fnstcw
or
mov
popa
call
jnp
and
lcall
repz
mov
frstor
push
xor
popa
shlb
xor
test
mov
pop
xor
xchg
adc
push
mov
push
sub
mov
xor
push
inc
call
mov
inc
xor
mov
sub
mov
xchg
push
xchg
xchg
and
jg
sbb
add
adc
and
out
jne
mov
rep
pop
shrb
mov
jmp
cmp
out
add
push
mov
mov
jbe
call
fidivrs
pusha
ds
sbb
stos
or
xor
pop
lock
js
clc
loop
stc
call
inc
mov
dec
push
xor
adc
outsl
or
lods
adc
or
fcompl
push
shll
cwtl
gs
push
dec
pop
loopne
mov
lods
xor
inc
cmpsl
lret
std
push
call
sbb
push
lea
mov
xor
and
int3
repz
inc
movl
sarl
pop
clc
xor
cli
sti
sub
call
ss
je
sar
jl
sbb
pop
pop
mov
popa
movsb
sub
in
adc
mov
mov
pop
mov
data16
cmp
xchg
xlat
mov
push
sbb
push
fs
mov
enter
lcall
push
gs
or
adc
call
fucom
push
inc
push
cmc
dec
into
call
mov
sbb
aaa
std
rcrl
adc
fsub
jp
jmp
pushl
push
cmp
mov
loopne
mov
pop
pop
push
jmp
mov
and
rorb
loop
xor
repnz
int
push
xor
nop
sub
jl
add
mov
pop
and
pop
xchg
mov
and
pop
pop
divl
je
ljmp
jne
jmp
mov
fistps
push
jns
ret
lock
add
daa
mov
daa
setb
shrb
add
ret
fucomp
data16
dec
dec
fsub
xchg
jecxz
mov
insl
mov
popa
push
negb
cmpsb
clc
cmp
push
pop
jmp
or
ret
scas
jge
and
rcll
adc
aam
push
push
push
mov
pop
mov
xor
mov
mov
dec
idivl
pop
data16
adc
mov
cmp
add
dec
sti
add
adc
in
fstl
cmp
xlat
sbb
bound
ret
pop
stos
jnp
scas
and
cmpb
js
mov
push
jne
push
add
insb
leave
or
jnp
stos
mov
icebp
arpl
push
ljmp
ficomps
cmp
in
push
mov
repnz
adc
hlt
imul
push
ret
sbb
pop
cmpsl
loope
sti
jge
mov
xor
ret
add
cmp
pop
mov
ljmp
loope
lahf
adc
ret
sub
push
push
out
inc
shlb
call
out
sbb
imul
cmp
mov
out
sbb
imul
sub
or
negl
std
push
jne
lret
rcll
adc
add
xor
jle
rcrb
mov
shl
push
pop
lea
call
aaa
mov
ret
out
out
pop
xor
int3
lea
push
jmp
data16
fldenv
sub
idivl
call
xor
mov
mov
gs
inc
testl
pop
js
mov
roll
pop
push
aaa
sahf
adc
aam
in
sub
js
push
sbb
leave
mov
cwtl
ds
ret
outsl
ds
jg
js
sbbb
sub
bndldx
mov
pop
or
jecxz
pop
fsubs
mov
or
mov
xchg
add
rolb
push
int
and
pop
push
cltd
inc
sbb
lds
mov
inc
jg
out
in
mov
push
push
xor
and
in
pop
mov
inc
movsb
inc
sub
outsb
imull
xchg
dec
xorl
push
pushl
loop
ss
dec
jb
push
push
push
arpl
jmp
test
icebp
mov
ja
xor
call
lcall
cmpsl
lret
fldenv
in
push
mov
xchg
icebp
ja
push
push
mov
mov
hlt
pop
pop
push
dec
and
enter
jb
jmp
lret
loope
ss
mov
cmp
push
test
jecxz
jbe
and
lret
sub
cmp
jbe
jmp
rorb
sbb
loop
jb
add
leave
call
sbb
and
mov
movb
shrl
aad
mov
push
ljmpw
xchg
mov
add
mov
leave
pop
pop
out
xchg
jae
sbb
mov
fwait
icebp
imul
lods
xlat
clc
icebp
jno
push
adc
bound
xchg
js
dec
push
adc
addr16
mov
stos
mov
aaa
out
push
test
push
dec
js
jmp
xor
pusha
lea
rolb
js
jne
and
dec
jle
jmp
out
pop
sub
mov
imul
mov
xor
call
out
sarb
std
push
and
mov
mov
xlat
push
adc
je
push
inc
in
vmovsd
adc
jne
jmp
fidivrs
dec
fsubrs
xlat
outsb
cli
fwait
mov
mov
adc
mov
jle
adc
bound
or
popa
dec
jp
xor
sub
das
cld
sub
cmp
pop
test
leave
jns
push
add
mov
adc
ljmp
mov
mov
push
inc
xor
adc
mov
cmp
insb
inc
cmp
jl
sbb
or
js
mov
push
jp
adc
nop
mov
lock
adc
pop
cmpsl
push
or
xor
repnz
mov
or
jno
test
ret
add
fs
jnp
or
cmp
add
push
sub
mov
adc
and
sbb
xchg
sub
pop
adc
sbb
and
out
push
insl
inc
sti
push
push
xor
add
rclb
xchg
xor
hlt
lock
popa
cmp
lods
and
sbb
push
dec
add
push
xor
push
mov
icebp
push
insb
clc
push
mov
mov
xchg
push
cmpsl
in
fisubs
fldcw
adc
or
inc
or
jmp
mov
ss
jne
mov
push
push
mov
sbb
ret
sti
aas
aas
or
lret
test
and
jo
data16
mov
loope
mov
cmp
decl
add
shrl
mov
pop
fldcw
xchg
daa
dec
cmp
push
push
mov
aas
dec
int
jbe
insb
inc
push
sahf
sbb
mov
dec
aas
pop
inc
inc
dec
cli
test
sub
ret
insb
hlt
into
shl
lea
ror
insb
movsl
out
mov
lods
sbb
adc
mov
push
call
jg
adc
inc
aas
call
sub
inc
iret
inc
add
loope
and
hlt
push
mov
jne
repnz
or
lea
les
shl
dec
add
je
mov
cmp
xchg
or
adc
dec
mov
imul
sbb
clc
loope
xor
jg
push
and
inc
mov
pop
xor
orb
pop
cwtl
push
xchg
aaa
mov
dec
push
sbb
xchg
cmc
add
adc
call
mov
sub
fsubrs
dec
push
mov
xor
adc
repnz
sbb
movl
outsb
cmp
lock
mov
push
das
leave
repnz
insl
lds
add
and
call
or
loop
cmp
popa
mul
movl
sub
sbb
fdivrp
loop
add
pop
dec
call
loope
lea
cld
mov
mov
adc
push
frstor
push
jp
ret
dec
ret
divl
push
mov
sub
rclb
push
inc
dec
mov
dec
arpl
pop
or
stos
dec
lret
bound
rorb
movb
mov
call
pop
in
stos
dec
lea
sbb
push
dec
xchg
cmc
aad
addr16
adc
dec
push
out
mov
call
fs
inc
add
ljmp
sub
mov
fs
ror
imul
fwait
jb
sub
stos
clc
test
aad
sbb
subb
shl
aaa
daa
shlb
scas
clc
push
jnp
push
outsb
push
cmpsl
cmp
and
call
stos
adc
outsl
jne
mov
and
pop
pop
es
loop
roll
xor
or
test
inc
mov
sbb
mov
push
inc
adc
push
sbb
sbb
gs
aaa
and
push
sub
add
pusha
jecxz
add
push
lock
pop
jnp
xor
loopne
notb
fimull
cli
and
data16
push
or
push
sub
aas
outsl
mov
and
and
inc
cld
jge
adc
cmp
testl
cmp
lret
sbb
push
add
and
xlat
or
mov
call
mov
or
test
shr
cmp
jne
cmp
out
out
sub
fdivrl
fimuls
or
and
or
lods
addr16
jge
pop
adc
push
popf
insb
push
sti
lods
in
xlat
cmp
jl
mov
jge
push
dec
xor
lea
push
ret
pop
mov
mov
jmp
and
mov
ret
shl
adc
xchg
ret
cmp
add
inc
jbe
cmpsl
dec
cmpsl
inc
hlt
dec
or
ljmp
inc
outsl
pop
lea
mov
jnp
fdivrl
add
push
lea
fcomps
xor
inc
cld
cmp
and
stos
addr16
cmpsl
add
pop
add
add
push
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
imul
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
jp
add
add
add
dec
add
add
add
add
add
add
push
add
add
inc
add
jae
add
xor
add
add
inc
add
add
add
add
add
add
add
cmp
add
xor
add
add
add
jbe
jns
add
add
add
add
add
bound
arpl
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
inc
add
xor
add
add
add
add
add
je
push
add
add
add
add
add
pop
add
inc
add
add
inc
add
add
dec
add
add
add
push
add
ja
add
cmp
add
add
xor
je
add
dec
add
imul
cmp
dec
add
add
add
add
add
dec
add
add
add
inc
add
add
add
pop
add
jno
add
jae
add
add
add
push
add
add
add
add
add
jbe
add
add
add
push
add
push
add
add
add
dec
jb
add
add
add
add
imul
push
add
add
add
add
add
add
add
add
add
add
add
outsb
jae
add
bound
inc
add
push
add
add
inc
add
jbe
add
add
add
add
add
cmp
add
push
add
add
add
add
add
in
xchg
xchg
test
mov
hlt
pop
fdivrl
push
lds
sub
push
cmp
cld
mov
or
roll
inc
mov
daa
jae
sbb
pop
cli
xchg
scas
jp
sub
cmpsl
push
xchg
daa
push
xchg
xchg
sub
int
rcl
push
xor
mov
push
pop
pusha
jmp
int3
or
push
sub
loope
clc
pop
cs
je
stc
sub
daa
incb
cmc
pop
call
dec
adc
out
xchg
jne
sarl
sub
jae
jmp
mov
je
jb
xor
sti
adc
xor
inc
adc
mov
adc
xchg
sub
jp
adc
jmp
outsl
sub
add
arpl
push
movsl
mov
fcoms
out
fadds
push
imull
xchg
pop
enter
aad
test
out
arpl
inc
mov
xchg
inc
ljmp
dec
jmp
or
leave
ror
xchg
jl
sbb
imul
popa
inc
sub
jmp
inc
add
sbb
sbb
mov
rcrl
and
xor
pop
call
stc
cmp
xchg
jne
sbb
ljmp
jmp
inc
clc
icebp
test
or
int3
in
ret
mov
push
jnp
push
push
push
inc
push
aaa
fistpll
pop
inc
push
movsl
addb
pop
out
mov
inc
ljmp
lock
jp
mov
pop
imul
mov
jp
aaa
inc
pop
cli
lods
addr16
dec
and
das
icebp
ljmp
daa
icebp
rorl
sahf
sti
rorb
hlt
xchg
cwtl
or
cmp
icebp
dec
iret
mov
push
adc
or
je
insl
jle
xchg
jae
imul
pop
stc
push
inc
pop
pop
xchg
dec
loope
jno
hlt
cmp
shrl
sub
push
decl
repz
jmp
and
in
xor
inc
jb
and
arpl
cmp
sub
xchg
pop
adc
rorb
divl
lods
adc
fcoms
in
scas
xlat
jmp
test
in
jle
jns
inc
lock
test
call
pop
insl
outsb
ja
push
adc
push
mov
adc
mov
loopne
popa
es
arpl
push
cmp
xchg
adc
or
je
pusha
mov
dec
nop
sbb
xor
maxps
mov
add
inc
mov
dec
mov
test
idivl
std
mov
out
jno
push
jne
bound
cmp
cmp
loop
push
inc
loopne
xchg
push
push
pop
aaa
sub
loope
rorb
lahf
loopnew
or
add
mov
ja
mov
adc
fwait
inc
lcall
adc
mov
inc
jecxz
fs
subl
hlt
jmp
jmp
test
test
ss
add
clc
add
and
pop
ljmp
insb
into
mov
pop
sti
add
inc
push
push
psllw
mov
mov
dec
shlb
out
sbb
xchg
adc
cmp
pop
jl
jno
lea
jmp
xor
and
sub
jb
push
adc
fwait
aad
add
jmp
rorl
sub
clc
std
pop
ficomps
pop
sbb
out
jae
sub
fucomi
push
out
jno
pop
sti
adc
mov
cmp
jno
mov
loopne
push
mov
push
test
cmp
jmp
mov
leave
popa
lret
shlb
dec
sbb
inc
loope
rcr
in
cmp
sbb
mov
dec
add
das
adc
repnz
lret
jae
sahf
push
sub
push
pop
mov
jmp
mov
pop
add
dec
jl
divl
cmp
cmp
into
mov
rcrb
test
out
ljmp
pop
mov
add
iret
inc
mov
and
or
add
sbb
popf
mov
sbb
notl
fwait
aas
insb
xchg
mov
mov
mov
sub
outsl
mov
popf
add
jnp
add
mov
or
mov
mov
popa
sbb
clc
ds
push
lods
lds
cmp
mov
pop
enter
mov
pop
aam
cs
pop
lsl
outsb
data16
insb
popa
push
repz
sub
dec
jmp
jge
jg
stc
inc
arpl
hlt
dec
adc
xor
arpl
lcall
jns
jl
out
out
or
je
rcrl
pop
mov
jge
mov
sbb
mov
inc
cmp
xor
jns
leave
push
sub
daa
imul
popa
pop
ret
adc
out
xor
sub
pushl
jg
adc
shrl
add
mov
pop
ret
mov
mov
sbb
lods
icebp
movsl
add
push
fmuls
pop
jmp
xor
push
je
mov
add
out
cs
inc
xor
mov
outsb
mov
sbb
mov
jle
inc
fsubp
aas
lea
inc
rep
mov
inc
adc
push
pop
fidivrl
dec
fisttpll
pusha
rcr
shl
ret
pop
pop
std
mov
js
movsb
rcll
push
push
aad
dec
sbb
push
sbb
sub
xlat
adc
xor
ss
neg
cmp
or
ljmp
pushf
shll
popa
jl
lea
sti
sbb
mov
roll
testl
cld
fs
jno
push
mov
jle
dec
ss
faddl
sbbl
add
testl
shr
sub
sbb
mov
adc
repz
jb
mov
xchg
adc
test
cwtl
mov
sti
or
call
mov
mov
aaa
push
push
call
mov
pusha
pusha
fld
pushf
js
call
out
push
jns
and
mov
sahf
fildl
pop
push
and
lret
cltd
lret
jle
jno
push
sub
leave
mov
pusha
mov
mov
data16
jmp
mov
sub
std
xchg
push
leave
sbb
xchg
ja
add
inc
addr16
fimuls
pusha
and
fsts
mov
fld
leave
adc
fdivrl
or
fisubs
aam
ds
inc
and
push
or
out
es
movsb
inc
fists
das
popf
sahf
pop
loope
pop
fstps
jl
leave
inc
ljmp
daa
mov
pop
dec
sbb
sub
sub
pusha
adc
sub
push
cmp
sahf
lret
out
add
out
call
adc
shrb
cmc
sbb
xchg
mov
mov
out
lret
jg
rorl
daa
adc
cmp
inc
push
loope
xchg
inc
popa
dec
pop
push
cs
mov
pushf
fistpll
and
or
les
mov
or
mov
es
es
mov
pop
aaa
in
add
not
xor
cmp
sub
in
mov
inc
adc
sub
sbb
ja
and
loopne
sbb
sbb
stos
cs
loope
lea
cltd
mov
cltd
cmc
inc
in
xor
mov
jae
cmpsb
sub
mul
xor
out
rcll
jge
shll
add
xchg
sbb
out
movsl
sub
fwait
xor
cmp
mov
int
pop
mov
ljmp
je
xchg
sub
or
mov
leave
add
push
fisubl
adc
jp
mov
in
xchg
add
repz
push
jp
sub
lea
push
sbb
fldt
lret
pusha
fld
jl
push
addr16
inc
mov
jge
cmp
add
and
fstpl
insb
test
rclb
cmc
arpl
push
sti
push
push
les
jns
es
arpl
es
mov
fdiv
xor
insb
or
xor
xchg
sbb
aas
or
add
es
dec
ret
sbb
pop
int
push
inc
popa
call
push
shlb
arpl
add
call
push
lret
mov
data16
xor
mov
xor
dec
insl
les
jmp
stos
mov
loopne
dec
or
pop
sub
xchg
cmp
clc
pop
xorl
mov
fidivrs
mov
cmpsb
mov
sub
jl
sub
pusha
jo
jecxz
orb
loope
lcall
xor
movsl
jg
scas
push
mov
in
test
es
mov
jno
sbb
movsb
popa
xchg
push
popa
push
mov
xchg
js
int
sti
shl
outsl
shll
iret
cmc
aad
lret
mov
add
repz
xlat
fistpll
mov
add
sbb
loopne
or
fdivl
add
mov
dec
mov
call
lods
and
stc
jns
data16
mov
shlb
ret
xchg
into
cmp
xchg
add
leave
pop
push
mov
lret
dec
das
clc
mov
fisttpl
xchg
add
jns
and
shll
push
inc
jns
lds
inc
cmp
ret
enter
jbe
fstpt
and
fadd
jmp
movups
or
fimull
ret
inc
dec
xchg
jge
sub
in
dec
or
push
inc
add
icebp
mov
fwait
and
xor
inc
or
cltd
lret
and
into
mov
in
scas
cmp
or
lds
lock
mov
or
int
cmp
dec
in
push
stc
testl
cmc
xor
or
sub
cli
push
jno
ljmp
sub
xchg
mov
and
cmp
lds
icebp
adc
xchg
push
arpl
push
mov
call
es
aam
daa
ss
cmc
push
call
dec
insb
rcll
out
mov
fldt
jl
xchg
imul
icebp
fld
jecxz
push
sub
and
outsb
ret
push
adc
pop
push
call
loop
mov
movsl
pusha
fld
cmp
cwtl
subb
dec
push
or
shl
mov
insl
rcll
adc
push
fldt
pop
lds
push
mov
jae
loope
int
pushf
sub
adc
pop
scas
testl
or
dec
ja
mov
ret
aad
inc
mov
mov
push
stc
shl
jmp
sbb
mov
adc
notb
or
testb
push
cmp
sub
push
aam
das
jno
sbb
leave
out
sub
dec
adc
and
xor
push
mov
out
imul
ret
push
add
mov
cmp
dec
push
sub
shlb
push
and
nop
imul
sarl
add
stc
and
shll
std
dec
sub
dec
pop
dec
or
cwtl
std
mulb
mov
dec
or
add
rol
mov
outsb
xlat
pop
mull
cmp
popf
mov
mov
cs
pop
and
aas
sbb
testb
xchg
sbb
cltd
into
pop
daa
pop
imul
fmul
aaa
mov
push
sbbb
or
xor
fs
ret
and
out
add
and
xchg
lret
out
push
mov
mov
mov
jmp
cmp
push
and
into
dec
loope
push
add
add
std
repz
bound
sti
arpl
push
add
loope
adcb
push
adc
rcrb
cmc
mov
ja
inc
or
mov
and
call
push
mov
mov
shlb
or
jo
or
aad
fdivl
cli
lds
jbe
pop
mov
int3
dec
adc
pop
bound
push
adc
dec
leave
dec
cmp
cmpl
loopne
cmpb
sub
xor
popa
fcoml
inc
stos
mov
jmp
cmp
mov
sbb
xor
push
pop
lock
sahf
adc
lock
push
push
out
fs
pushf
out
dec
loope
dec
imul
jnp
jae
pop
push
adc
add
icebp
call
and
bound
icebp
mov
pop
mov
push
imul
popa
fld
iret
and
push
pop
rcll
lret
mov
lea
fadds
inc
jecxz
ss
test
xor
fsubp
mov
lea
sub
sti
shl
adc
shl
jb
jg
insb
shl
sbb
fbld
or
sbb
fs
outsl
lahf
jb
out
loope
mov
cmp
lret
mov
rolb
icebp
or
xchg
fdivrp
dec
stos
pusha
add
pop
aaa
ret
loop
in
sbb
mov
xchg
add
push
dec
cs
sbb
sti
jno
stc
mov
fisttps
add
pop
or
or
in
decb
aam
es
add
push
inc
push
movb
sbb
imulb
add
in
mov
jge
aad
add
adc
inc
loope
out
adc
std
stos
mov
fimull
ret
loope
cmp
ret
pop
iret
jecxz
gs
add
jnp
das
mov
neg
js
adc
jecxz
push
int3
call
mov
das
jnp
pop
fistl
cmp
push
mov
push
ja
imul
sub
mov
aaa
out
loop
push
push
sbb
mov
inc
mov
push
lcall
cli
aaa
xor
add
add
mov
inc
out
xor
push
daa
lock
maskmovq
push
insb
into
pop
push
aad
push
icebp
out
dec
je
mov
outsl
data16
mov
fstpt
inc
bound
lret
inc
das
xor
mov
push
inc
cmp
cli
jmp
lret
sbb
add
les
fnstcw
mov
dec
xor
push
mov
add
fcomip
jno
xlat
fwait
xor
sub
pop
xlat
imul
aad
or
xchg
and
popf
insl
xchg
sti
adc
ret
cld
dec
add
popl
ja
xor
loopne
stos
inc
jo
int
jecxz
or
in
std
out
call
mov
and
inc
lret
rcll
leave
pop
inc
sub
jbe
ljmp
test
xor
and
mull
cld
or
aad
mov
xlat
loope
mov
pop
fimuls
mov
or
pop
pop
add
jnp
dec
mov
lock
pop
incb
repnz
or
repz
aas
int
pop
mov
aaa
adc
mov
out
jl
mov
pop
jns
push
push
mov
dec
push
pop
aad
in
and
rcrb
jo
push
jle
inc
add
inc
add
add
add
add
add
push
add
add
addr16
add
add
add
add
jbe
add
add
add
add
add
add
jp
add
push
add
add
pop
add
add
imul
jae
add
push
add
add
inc
add
xor
add
add
dec
add
jns
add
pop
add
add
xor
add
add
push
add
add
add
add
dec
dec
add
inc
add
add
add
jb
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
xor
inc
add
add
push
add
pop
add
push
add
fs
xor
add
cmp
add
imul
add
outsb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
outsl
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
push
jae
add
add
add
inc
add
insb
add
inc
add
inc
dec
add
xor
add
add
add
add
push
push
add
add
add
cmp
add
add
dec
add
add
dec
push
add
push
add
xor
add
add
add
add
add
jbe
add
add
adc
jb
xor
inc
inc
fs
pop
mov
movb
mov
inc
xor
cld
out
lret
add
pop
inc
jb
ja
sub
inc
jb
dec
dec
shll
push
add
outsl
push
imul
push
aas
outsb
fsubl
push
mov
inc
dec
inc
iret
sub
shrb
push
xor
es
inc
jecxz
or
xor
leave
adc
lret
fs
jg
loope
adc
psrld
test
and
fsincos
add
xchg
jno
and
push
and
sub
xor
shr
dec
push
aas
xor
dec
push
stos
xor
jg
add
lcall
cmpsl
pop
aas
jae
bound
fdivs
inc
inc
aas
pop
es
xor
add
pop
insb
xlat
je
outsl
scas
or
mov
aaa
repnz
mov
loope
push
mov
mov
test
mov
or
dec
gs
int
push
fcomp
add
out
sub
xlat
mov
js
jo
lretw
add
jnp
pop
dec
xor
sbb
stos
mov
or
cmp
aas
xor
adc
jecxz
fiaddl
xor
rorl
cmp
dec
mov
xor
and
mov
aas
sbb
pop
pushf
xlat
add
adc
frstor
aad
cmp
loop
mov
jns
subb
push
jecxz
popa
js
jecxz
jp
nop
lret
dec
jmp
leave
cli
xor
jno
data16
loop
mov
in
aas
ja
add
inc
aas
addr16
cwtl
push
aad
push
push
xchg
shlb
or
rcr
mov
cmp
sub
lahf
push
pop
sub
xchg
and
aaa
jp
jne
push
imul
inc
mov
loope
push
shl
loopne
clc
orl
into
mov
insb
or
ficoml
xchg
enter
xor
jmp
mov
pop
jp
stc
inc
lcall
outsl
pop
adcl
int3
loopne
jbe
ljmp
into
cmp
arpl
outsb
add
push
push
sahf
xor
pop
stc
mov
outsl
lret
fwait
sub
orl
jns
pop
repz
shlb
push
test
cld
fistpl
pop
fdivs
notb
outsl
and
stos
xchg
and
sahf
imul
push
ds
stos
dec
pop
fisttpll
jae
sti
dec
or
inc
push
pop
dec
lds
loope
arpl
dec
iret
xor
rcrl
xor
sub
pop
fwait
mov
push
push
imul
imul
mov
daa
push
xor
and
inc
cmp
and
mov
add
push
inc
push
cmp
mov
out
das
push
xlat
mov
dec
insb
sub
add
xchg
mov
jne
sahf
dec
in
addr16
pop
fbstp
imul
fildll
lret
les
dec
into
jb
push
out
push
movb
jbe
push
inc
daa
ficoms
jne
dec
hlt
cli
imul
push
rol
roll
repnz
add
jns
pop
cmp
jecxz
addb
sub
test
fstpl
out
imul
inc
in
insl
xchg
add
popa
fcmovnu
bound
std
jns
mov
fs
sbb
rclb
pop
sbb
aad
stos
push
je
icebp
clc
idivb
dec
inc
dec
push
dec
mov
dec
xchg
das
mov
fcmovu
xchg
xorb
out
push
inc
or
lods
inc
sbb
pop
dec
or
bnd
push
sub
push
das
loop
push
and
dec
xor
jae
imul
mov
push
push
out
loope
fs
mov
xor
push
and
mov
xor
inc
and
mov
xchg
pop
adc
dec
xor
adc
mov
mov
std
jp
jl
test
adcb
in
sub
xorl
mov
push
and
test
dec
repz
dec
jns
inc
push
push
sub
lcall
push
ds
xor
aad
push
xor
mov
js
fsub
mov
std
das
push
xchg
outsl
jbe
or
hlt
sahf
je
fsubrl
inc
adc
pop
nop
push
add
push
scas
add
scas
sub
daa
mov
pushf
fnstsw
pop
cmp
aas
mov
push
cmp
and
add
or
adc
sub
clc
outsb
push
xchg
xchg
xchg
xlat
mov
rcl
pop
mov
es
xchg
and
imul
jns
xor
push
pop
mov
insl
ss
imul
push
xlat
sti
ljmp
aam
jle
add
repz
xchg
popf
mov
jne
popf
data16
dec
ja
dec
dec
push
lahf
cld
aaa
es
rorl
mov
out
sbb
in
or
pop
shll
int3
sub
rcr
add
mov
or
cs
cmp
dec
cs
cli
fistl
int3
movsl
sti
push
ljmp
cmp
loope
loope
or
in
jmp
push
xor
pop
dec
inc
bound
mov
sbb
mov
data16
jmp
sub
mov
dec
push
shlb
mov
pop
sub
push
out
add
mov
outsl
xchg
pop
loope
cmpsl
inc
dec
and
sbb
aas
imul
inc
xchg
andl
push
mov
cmp
hlt
push
ja
loope
or
fs
dec
das
int3
mov
out
pop
push
cmpsl
pop
idivb
mov
dec
dec
popa
mov
add
push
es
lret
cmp
adc
insl
loop
mov
add
mov
or
jne
out
ja
test
fildll
outsl
and
pop
add
fidivrs
adc
divl
push
ja
es
lret
push
loop
add
inc
pop
adc
and
add
sti
inc
ret
repnz
pop
sub
push
jp
aaa
xor
add
jg
jge
push
pop
pop
aaa
dec
inc
shr
inc
inc
jnp
fimull
cmp
aam
mov
push
lahf
mov
jae
test
jne
jbe
popa
push
outsb
test
addr16
je
xchg
subl
jo
adc
stos
andl
jnp
daa
repz
repnz
shrb
outsl
jno
push
jo
ss
inc
jp
jb
mov
inc
jae
or
popf
inc
xor
lock
sub
inc
repz
jnp
pop
jb
sbb
sbb
push
loopne
add
xor
imul
jnp
mov
jnp
adc
jns
ds
andb
insb
xor
push
inc
adc
jp
xor
xor
add
dec
insb
and
mov
xor
dec
dec
push
outsb
push
push
push
or
inc
cmp
aaa
ss
pop
mov
dec
inc
fdivrl
lcall
subb
das
cmp
pop
lea
sub
xchg
int3
test
xchg
dec
imul
fidivl
lret
imul
popf
inc
push
push
push
inc
sbb
mov
xchg
mov
xor
sub
jp
cltd
ja
sub
adc
inc
jo
bound
push
xor
adc
jp
sbb
sub
push
inc
sbb
push
jp
push
lock
inc
and
jp
rclb
sbbb
and
jnp
or
or
xlat
test
push
addr16
les
repz
bound
data16
dec
push
sahf
mov
insl
imul
inc
arpl
and
push
pop
stos
pop
or
dec
and
sbb
cmp
sbb
mov
or
out
sbb
mov
jo
movsb
nop
cmp
loope
in
jno
sub
xchg
add
pop
fistl
bound
fwait
sub
sub
xor
iret
cmp
sub
aaa
and
cli
or
or
arpl
das
push
in
aam
cli
int3
popa
enter
shl
push
mov
lods
popa
test
movsb
cmp
aaa
xchg
nop
cli
mov
push
jo
pusha
loop
push
dec
aaa
cmp
and
push
clc
ja,pn
cmp
loop
push
shlb
enter
popa
mov
mov
test
mov
mov
test
push
je
push
aaa
cmp
cli
sbb
pop
ret
or
sub
aaa
lock
cli
call
cmp
loop
push
aam
ror
cli
enter
sarb
loop
push
mov
mov
cli
nop
popa
js
insb
cmp
push
push
dec
aaa
dec
inc
cli
inc
popa
cmp
cmp
xor
xor
aaa
sub
and
push
sbb
adc
mov
cli
or
aaa
cld
xor
cli
hlt
popa
lock
in
cmp
loop
push
les
mov
cli
movsb
bound
mov
inc
bound
nop
loop
push
mov
test
push
je
jo
insb
push
push
pop
popa
pop
push
push
cmp
sbb
mov
sbb
add
add
sub
xor
das
loopne
cmp
cmp
xor
xor
sbb
and
dec
es
int
int3
pop
int3
and
and
push
mov
shlb
add
push
pop
sbb
add
and
or
add
push
pop
adcl
inc
pop
inc
jne
xchg
xor
lret
add
push
xor
sbb
or
or
push
or
orl
popf
or
scas
or
mov
or
fisttpl
in
or
std
outsl
add
or
movd
in
and
aaa
cmpb
addb
adcb
mov
arpl
jne
jnp
addb
adcb
cmpsl
subb
mov
or
aad
fildl
jmp
icebp
xor
std
addl
or
sbb
sub
cmp
dec
push
pop
pop
fs
jbe
jl
orb
lcall
mov
mov
fmull
out
hlt
cli
mov
fwait
adc
and
sub
cmp
inc
push
pop
pusha
data16
insb
jb
js
jle
test
xchg
pushf
mov
mov
mov
mov
loope
out
in
repnz
testl
dec
adc
sbb
dec
and
dec
ss
push
dec
push
dec
arpl
je
orb
dec
cwtl
dec
sahf
dec
test
mov
mov
dec
jecxz
in
dec
cmc
dec
cld
jge
xor
sub
cld
push
mov
je
jp
cmpl
mov
fdivrl
mov
adc
shrb
aaa
mov
push
sbbb
subb
orb
mov
rolb
and
std
adcl
sbb
inc
adcl
mov
outsl
jns
jg
xchg
mov
mov
fimuls
cmp
dec
sub
dec
inc
dec
dec
dec
push
dec
fs
imul
dec
dec
mov
dec
aam
loopne
jmp
daa
cmp
mov
aas
xchg
dec
lcall
mov
jl
mov
test
mov
mov
mov
mov
cmp
push
pop
sbb
dec
cmovg
push
jo
jne
jp
xchg
mov
or
push
cmp
and
in
cmp
in
push
insb
pop
in
jns
jg
mov
xchg
in
mov
mov
in
in
loope
in
hlt
add
or
pop
adc
hlt
and
sub
xchg
dec
xchg
pop
xchg
jns
test
xchg
xchg
ficoml
xchg
add
and
push
andb
mov
jg
xchg
mov
mov
mov
mov
mov
mov
mov
add
pop
push
add
cmp
cld
push
mov
cmpb
int3
mov
cmc
mov
adc
sub
dec
aam
mov
xchg
arpl
xchg
mov
xchg
fcoml
lcall
xor
dec
dec
dec
push
dec
pop
dec
jns
dec
xchg
dec
cmpsb
dec
mov
ret
xor
sti
hlt
add
push
push
sbb
idivb
loopne
push
subb
mov
pop
jne
jecxz
ljmp
outsb
dec
in
push
insl
pop
loopne
cmp
jb
ja
jge
test
xchg
movsb
xchg
lret
xchg
rclb
imull
lret
arpl
outsb
adc
lcall
lret
push
fninit
rcll
sbb
das
or
pop
or
lds
cli
outsl
inc
xor
jle
test
in
popf
insb
test
in
enter
in
or
adc
sbb
inc
mov
addr16
jb
jge
test
in
repz
cld
mov
aaa
pop
push
das
xor
adc
hlt
mov
mov
xchg
rcll
cmp
mov
inc
xchg
inc
lcall
pop
mov
imul
test
mov
rorl
mov
cmp
and
daa
cmp
cmova
pop
or
jne
xchg
mov
cmp
loopne
cmp
inc
jl
cmp
cld
jl
cmpb
jge
or
mov
inc
adcb
stos
mov
or
rolb
pop
xchg
ss
imul
stos
pop
jmp
dec
cmp
cmp
outsl
in
push
sub
in
xchg
loopne
cmp
scas
mov
add
and
sub
xor
aas
sbb
subb
mov
test
jecxz
testb
adc
sbb
xor
cld
dec
mov
push
mov
xchg
sbb
and
sub
cmp
nop
addb
in
mov
shr
jmp
rdtsc
sbb
popl
insl
insb
pusha
insb
jno
test
addr16
out
insb
mov
call
js
inc
aam
imul
mov
mov
xor
pop
fwait
xchg
leave
inc
sti
bswap
lret
pop
mov
mov
adc
xchg
mov
mov
ds
aas
lcall
jns
pushf
mov
mov
mov
mov
pop
xor
ret
pusha
roll
cs
sbb
dec
mov
xorb
fimull
sub
dec
mov
pop
insb
addr16
jb
js
sub
in
lret
in
in
in
repz
sub
cmp
jle
test
mov
fcmovne
sbb
push
mov
lods
test
mov
rorb
cmp
push
xlat
in
mov
insb
loopne
lea
adc
mov
mov
jnp
or
cmp
xor
push
rorl
xchg
out
jne
push
cmp
mov
and
dec
jbe
jno
jne
mov
into
enter
cmpb
sub
ds
jl
das
add
out
clc
insb
jge
sbb
dec
ficoms
enter
adc
dec
js
pop
pop
test
aam
adc
or
das
adcb
outsl
push
les
adc
sub
push
sub
push
cmp
or
call
sub
jnp
adc
imul
data16
jmp
inc
mov
fwait
in
rorb
mov
mov
push
ljmp
call
cwtl
daa
popf
push
lcall
xchg
push
mov
pop
gs
test
hlt
dec
cld
test
pop
mov
es
mov
push
sub
sbb
mov
lea
aaa
pop
sbb
dec
mov
data16
popf
pop
sub
push
xchg
mov
jmp
mov
pop
pushf
loopne
sbb
mov
dec
cmp
in
jo
arpl
jne
inc
in
call
lds
sub
clc
js
stos
dec
stc
lea
cmp
faddl
call
dec
lahf
push
adc
sub
mov
mov
bound
ret
cwtl
nop
jge
adc
pop
test
mov
push
arpl
test
jbe
lock
jae
clc
jb
sarb
or
int3
fisttps
or
push
stos
sbb
decl
out
js
data16
xchg
shlb
aaa
fwait
cmpsl
sub
jl
xor
push
fdivl
cmpb
call
or
add
cs
dec
cmp
ret
test
push
fcoml
push
jns
xor
out
push
in
jp
das
push
loopne
je
add
or
xchg
pop
adc
pop
call
cmp
add
push
cmp
je
outsl
jmp
roll
adc
stos
shr
adc
push
ds
inc
imul
or
jl
add
mov
add
fdivrl
jo
sbb
jg
push
test
mov
cmp
outsb
lret
les
add
or
mov
in
shll
les
subb
outsl
shll
xor
xor
or
or
push
sub
or
pop
arpl
mov
ret
mov
ficoms
call
and
nop
sbb
mov
jo
in
movl
fisubl
xor
iret
in
mov
std
jecxz
mov
inc
fbstp
and
lock
lods
std
ficoml
cwtl
insb
mov
sbb
test
xlat
in
sbb
add
in
mov
scas
xchg
pop
scas
sbb
frstor
push
popf
jbe
imul
pop
mov
mov
mov
out
test
bound
push
call
clc
loopne
icebp
fdivl
mov
jl
mov
pop
mov
xchg
dec
or
jae
inc
les
mov
std
js
out
dec
cwtl
dec
mov
lret
pusha
lahf
rcll
add
movsl
push
into
sbb
orl
lret
mov
adc
rorl
sbb
ret
in
leave
sub
push
stos
decb
fistpl
fildl
pop
mov
int3
sahf
das
outsb
pop
lea
sub
sahf
or
call
mov
daa
in
cmp
mov
and
js
in
mov
inc
cmp
xor
mov
mov
rolb
imul
enter
js
imul
pop
out
mov
lahf
cwtl
int3
lea
popa
fcom
cmc
pop
add
jb
mov
fists
sbb
push
or
gs
aam
sar
aaa
es
dec
fildl
arpl
xor
and
add
and
inc
xor
loop
push
add
or
xlat
shr
push
push
pushf
and
gs
hlt
push
mov
test
loop
jmp
fmull
shll
mov
inc
push
dec
push
and
cwtl
push
jae
and
sub
call
lds
sub
dec
aad
test
push
pushf
pop
cmp
sbb
mov
adc
mov
fdivr
mov
cld
jno
in
mov
or
aas
in
jmp
or
mov
mov
fadd
jo
jns
addl
int3
lods
inc
adc
pop
shll
rolb
out
jnp
dec
adcb
pushf
jmp
jno
dec
xchg
and
mov
imulb
xchg
call
ret
mov
inc
jmp
std
insb
push
lret
fucomip
sbb
adc
xor
push
pop
push
jmp
rorl
nop
decl
out
adc
inc
push
enter
pop
add
sti
arpl
push
ss
pop
xor
aaa
adc
mov
mov
call
add
call
cmp
call
and
pxor
dec
jns
mov
push
dec
aaa
call
pop
imul
push
repnz
mov
jl
into
movsl
jle
inc
mov
mov
dec
mov
xchg
andl
mov
cmpb
aas
mov
and
popa
adc
cs
test
lea
push
aaa
call
js
jmp
fldt
adc
pusha
pop
mov
pop
inc
xor
add
jl
dec
sbb
xchg
add
adc
mov
dec
aam
cmpsl
ss
fimull
bound
leave
scas
cld
mov
pop
aad
lea
mov
sbb
inc
push
push
and
call
stos
mov
js
lea
dec
mov
in
mov
fsts
and
fmul
subl
jl
pusha
aad
in
pop
pop
rclb
mov
mov
nop
mov
mov
cmp
push
movb
add
and
mov
enter
push
pop
sub
push
daa
enter
into
pop
movsl
mov
sbb
out
bound
je
jmp
jp
jmp
inc
xor
lds
jecxz
int
fmul
ss
enter
fs
iret
jno
push
lods
aaa
js
dec
dec
out
jp
jno
sub
pop
push
out
xchg
test
dec
lods
or
inc
jbe
lea
adc
les
add
push
sub
push
mov
pushf
scas
lret
add
leave
je
filds
shll
rolb
call
pop
and
add
sbb
jne
jae
or
mov
or
pop
dec
lret
xor
hlt
fadds
push
sbb
and
adc
loop
rclb
nop
imul
js
sub
clc
fimuls
cs
and
shr
or
fcomps
jp
xor
mov
pusha
cmp
lea
jo
or
sbb
bound
or
push
arpl
mov
xchg
xor
pop
lock
out
ret
sub
and
sbb
rcll
or
out
outsl
call
std
push
add
sbb
mov
dec
or
push
gs
sub
js
daa
pusha
push
mov
mov
das
fsubs
dec
add
mov
and
pop
sahf
push
mov
cmpl
aas
adc
pop
push
bound
push
leave
mov
sbb
mov
xchg
xor
inc
cmpsl
or
loope
ret
jg
add
shl
fs
add
cmp
faddl
push
out
inc
adc
popf
cmp
mov
in
xchg
cmc
xchg
push
mov
jge
std
jmp
pop
cld
cmpsl
jmp
jge
js
or
or
js
mov
add
fnstcw
jno
or
xchg
into
lahf
dec
adc
push
and
in
inc
add
dec
mov
pop
cmp
aam
ret
cmp
test
sbb
sub
jmp
cld
dec
xchg
mov
dec
or
roll
test
cmp
filds
mov
mov
adc
xchg
sti
sbb
push
in
sbb
mov
repz
in
or
mov
loop
adc
fdivrl
inc
pop
mov
xor
mov
in
fbld
orl
mov
push
test
sub
mov
pop
es
cli
jmp
cs
test
mov
xor
fnstenv
call
mov
dec
ud1
push
dec
loopne
push
xchg
jge
pop
enter
lock
inc
push
insl
pop
push
mov
loopne
out
adc
mov
pop
pop
fsubl
xchg
addr16
dec
add
cli
push
rorb
fcomip
and
test
iret
jmp
je
mov
add
jbe
jp
std
out
mov
test
push
mov
dec
mov
and
lea
jae
jmp
adcb
inc
daa
aam
push
aad
pop
inc
cmc
push
outsl
cli
mov
fcmovu
out
xchg
repnz
lea
xor
jmp
sub
mov
arpl
fldenv
mov
hlt
js
not
imul
and
xor
bound
or
std
jo
push
in
aam
ja
call
stc
fdivrl
add
out
aaa
sbb
cld
idivl
test
ss
mov
subl
inc
leave
adc
pop
in
jle
or
notl
pop
xlat
push
js
pushf
lahf
cmp
or
or
xor
cli
inc
or
cmp
je
pop
mov
repnz
cs
pop
cmp
push
cmp
mov
or
jge
dec
adc
dec
mov
in
pop
arpl
jmp
popf
scas
shrl
cmp
lahf
popf
mov
loop
dec
dec
or
into
addr16
lea
push
imul
loope
add
cmp
or
popf
pushl
inc
sbb
jmp
jmp
jnp
outsl
add
dec
iret
adc
rcl
lock
pop
sbb
dec
mov
insb
shlb
jb
mov
jle
lahf
mov
inc
daa
mov
cmp
jmp
and
ret
repz
cmpl
jp
test
jle
pop
fnstcw
fwait
cs
pop
pop
aad
pushf
in
jae
out
aas
clc
mov
popa
cmpsl
pop
leave
test
cmp
inc
mov
mov
pop
push
cmp
xchg
sub
sbb
and
pusha
cmp
popf
add
jge
xor
aaa
adc
mov
hlt
push
fadd
push
push
adc
popa
adc
scas
dec
and
daa
mov
adc
fs
call
leave
mulb
test
scas
popa
or
leave
lret
xchg
xchg
call
inc
int3
xor
hlt
or
dec
ss
pop
enter
mov
int3
sub
in
sub
push
cmpsb
std
ds
or
xor
add
imul
sub
mov
pop
leave
pop
aam
mov
push
imul
push
shll
inc
lock
adc
mov
insb
aaa
push
loopne
gs
sti
push
popa
testl
xlat
jno
xchg
divl
loopne
imul
arpl
bound
ja
movsb
adc
pop
pushf
pop
mov
pushf
jns
enter
sti
divl
enter
dec
dec
jbe
fiaddl
fcoml
cmp
das
jp
inc
mov
icebp
jnp
pop
pop
addr16
mov
loop
pop
pop
push
sub
sub
jecxz
dec
insb
xor
jo
mov
pop
sbb
push
sbb
and
enter
lods
mov
mov
repnz
pushf
or
enter
lret
js
stos
add
sbb
mov
and
pop
pop
ret
jl
and
mov
and
and
pusha
das
and
sbb
into
jle
sbb
add
dec
jecxz
lret
mov
arpl
fldcw
mov
adc
sub
cmp
sbb
pop
in
push
add
sbb
iret
movsl
fwait
xchg
iret
or
sbb
arpl
outsb
sbb
mov
sub
push
pop
push
adcb
xor
aaa
push
lea
pop
lock
stos
sahf
fstps
imul
jnp
iret
aas
or
and
pop
sub
mov
lret
ret
pop
inc
cmp
and
pusha
pushf
fbld
pop
ljmp
mov
fsubrs
inc
inc
and
popa
das
push
mov
push
push
les
push
popa
call
push
mov
punpcklwd
pop
call
out
jnp
call
push
jl
mov
popa
xchg
loopne
ret
inc
jnp
sub
shl
lea
push
sarb
xchg
dec
fwait
sub
mov
ss
ret
imul
mov
inc
jns
jne
in
pop
arpl
rcr
call
adc
jne
jecxz
in
mov
or
rolb
lock
test
in
mov
nop
call
sub
inc
mov
lret
push
pushf
pop
mov
fwait
aad
or
lcall
test
mov
pop
jge
incb
add
aam
dec
stos
inc
rorb
divl
push
dec
pop
and
inc
or
out
popa
and
inc
xlat
sub
sub
loopne
mov
popa
pop
mov
mov
cli
add
or
pop
test
jp
out
push
add
in
and
arpl
fldl
pop
icebp
arpl
sbb
in
push
test
mov
clc
jns
in
adcl
dec
orb
add
test
icebp
adc
out
in
rcll
push
push
pop
or
call
lret
sbb
add
jae
out
mov
call
add
or
sbb
mov
pop
xor
pop
pop
retw
fadd
imulb
fcoml
negb
decb
mov
jno
inc
fidivs
test
insb
push
scas
mov
mov
arpl
xchg
sub
rorb
mov
call
cmpsb
inc
loop
lods
xor
loope
rol
sub
punpcklbw
call
out
and
xor
xchg
pushf
jp
call
and
xlat
out
imul
leave
lods
fnsave
push
push
lea
sbb
cmp
inc
jne
jno
xchg
shll
subb
jecxz
je
sub
aad
sub
mov
mov
dec
mov
outsb
clc
lret
push
push
add
add
sbb
push
pop
ficoms
repz
add
lcall
jmp
xchg
xchg
jecxz
pop
inc
xor
rolb
lock
inc
ret
shlb
sahf
je
cmp
jl
lahf
fnstcw
cli
cmp
pop
jb
cld
loopne
pop
dec
call
push
incb
push
and
sub
loope
scas
mov
mov
mov
cmpsl
jb
leave
pop
pop
addr16
mov
adc
js
xchg
sub
xchg
repz
jl
jns
popa
mov
jmp
jmp
and
mov
xchg
pop
addr16
mov
arpl
add
je
add
ds
insb
push
lock
cli
mov
pusha
jb
faddp
ja
mov
inc
jmp
ret
sbb
adc
dec
shl
movsb
call
arpl
dec
rep
nop
xchg
jo
ja
idivl
adc
addl
mov
cltd
stc
xor
add
aad
xchg
das
cmpsb
mov
inc
shrl
add
lea
repz
test
adc
outsl
ret
cmp
iret
lods
idiv
mov
das
pop
jl
je
xchg
xchg
ret
mov
iret
jge
insb
clc
inc
repz
cltd
pop
gs
repz
dec
hlt
out
jmp
fistl
add
xchg
cmp
lahf
shll
in
add
into
sti
rclb
cli
add
lods
scas
xchg
xchg
fiaddl
fimuls
test
adc
mov
xchg
cli
push
mov
and
lahf
pop
rep
mov
cltd
sub
mov
add
outsb
adc
mov
mov
test
repnz
push
shll
mov
mov
rcr
js
mov
add
push
mov
or
adc
clc
aaa
jo
push
stos
hlt
aad
cmp
shll
sbb
mov
push
pushf
xlat
test
lds
mov
lcall
sahf
sub
sub
add
int3
jo
xor
stc
and
hlt
jns
repnz
dec
shll
xchg
ljmp
sbb
jno
sahf
push
into
mov
lret
xchg
lcall
cltd
daa
mov
mov
out
xor
add
jns
out
or
aaa
in
cmp
aas
jae
jmp
jl
inc
xlat
xchg
stos
loop
cmpsl
mov
cltd
push
pop
arpl
aad
mov
jg
scas
mov
and
xorb
fwait
jne
mov
mov
push
fistps
mov
dec
jg
ret
loopne
jle
inc
mov
std
inc
andb
mov
jae
pop
adc
and
jno
adc
mov
adc
mov
add
dec
pop
outsl
fs
adc
and
hlt
cltd
scas
mov
mov
xchg
outsl
hlt
mov
popf
arpl
das
loope
outsl
outsl
scas
adc
ret
mov
jp
cmc
jne
repz
dec
mov
or
jb
outsl
mov
scas
into
js
and
adcl
jmp
jmp
jmp
enter
pop
jbe
jnp
dec
sub
pop
mov
lcall
pushf
shll
add
int3
sbb
push
aas
js
xchg
pop
jns
jl
cmp
mov
cs
fildl
xor
mov
inc
lret
xchg
aam
jg
mov
out
sub
sarl
pop
inc
lahf
xlat
popa
add
add
add
fxch
scas
fisubrs
mov
cltd
dec
repz
lea
fsubrl
xor
push
adc
or
push
imulb
repz
lahf
inc
filds
repz
mov
adc
add
mov
dec
fimuls
jo
imul
rclb
les
stc
push
in
lcall
mov
jp
ljmp
xchg
outsl
sti
and
insb
cmc
test
or
jge
adc
jle
add
sub
jp
les
add
dec
bnd
rorb
push
pop
into
xor
sbbl
iret
imulb
stos
mov
push
push
lods
repz
fdivrs
xor
ret
shll
aas
inc
scas
mov
insb
pop
lds
repz
out
and
xor
lahf
pop
push
vmovlpd
xlat
mov
cmp
push
inc
icebp
push
lods
pusha
mov
sbb
sarl
or
mov
or
adc
jp
rcl
enter
xchg
add
xor
or
fwait
test
ja
xor
leave
pusha
ljmp
adcl
dec
push
push
cmp
inc
add
out
dec
sbb
mov
insl
sbb
lods
imul
xor
jb
push
push
sub
leave
add
pop
sub
mov
dec
jo
jecxz
insl
cmc
dec
shll
icebp
jo
ss
mov
mov
adc
ja
jmp
frstor
xchg
aas
inc
jne
lods
fwait
jnp
enter
sti
pushf
sbb
jno
mov
mov
ficoms
push
add
pop
shrl
push
inc
rclb
in
shlb
jge
cli
mov
pop
jbe
js
jmp
mov
shll
in
sub
mov
dec
cmc
cld
insl
push
or
popf
and
pop
fbstp
mov
pop
and
inc
aad
into
add
xchg
cmp
add
clc
adc
xor
xor
xorb
repz
mov
xchg
iret
enter
imul
mov
xchg
fidivrl
sub
lcall
fisubs
insl
lahf
xchg
jo
mov
sbb
push
cltd
add
xor
mov
decb
clc
jo
xlat
jb
pop
push
repz
add
sub
mov
in
pop
jnp
popf
inc
sbb
push
pop
push
out
push
aam
xchg
xchg
mov
in
add
and
cmc
icebp
mov
jb
inc
sub
sbb
icebp
arpl
add
mov
pop
jmp
mov
cmp
mov
pop
add
das
stos
sub
ret
mov
dec
add
mov
xchg
test
add
call
push
ja
or
inc
dec
pop
int3
das
adc
cmp
inc
jo
mov
fwait
push
cmpl
xchg
xchg
sahf
add
add
sbb
and
in
xorb
or
mulb
dec
jle
rorl
orb
pop
mov
repz
test
mov
ret
gs
mov
cmpsl
mov
mov
out
jbe
push
daa
shll
mov
push
sub
adc
mov
mov
rcll
ja
stos
xlat
adc
dec
lock
cli
mov
cmp
mov
add
jbe
xchg
repz
das
test
enter
jno
mov
cmp
mov
inc
das
pop
add
push
call
sbb
test
mov
subb
imul
push
xchg
cli
jae
jb
ret
or
xor
outsl
adc
push
jg
in
out
xchg
jmp
fcoms
sbb
aaa
push
adc
loop
mov
ret
cmp
push
push
xor
repz
add
mov
mov
adc
jne
add
xor
cltd
dec
xor
mov
jmp
add
insl
test
lods
sub
je
inc
shr
jb
mov
mov
xor
add
iret
aaa
jo
pushf
adc
mov
adc
push
call
pop
popa
adc
cmp
cwtl
iret
ds
imul
mov
bound
add
mov
add
sarb
push
mov
jns
xor
cmp
xor
mov
out
outsb
lock
repz
add
in
test
jp
cmp
cli
jb
sub
dec
add
cs
out
fxch
adc
jl
xor
imul
outsb
call
inc
adc
es
inc
sbb
popf
adc
push
cmpsb
clc
pop
push
pop
stos
subps
repz
cli
mov
insl
cld
mov
stc
dec
add
cmc
loop
add
lock
leave
sbb
jmp
outsl
popf
inc
adc
cltd
mov
pusha
or
stc
mov
adc
int3
in
dec
enter
cmpsl
mov
pop
je
jns
les
jno
daa
sbb
les
ficompl
jnp
add
add
dec
mov
repz
cltd
xorb
mov
and
dec
outsb
sub
rolb
mov
ss
mov
cmp
popa
xor
mov
sbb
outsb
dec
mov
imul
loop
cmp
lahf
pop
or
jg
xchg
jo
push
out
ficompl
lret
pop
mov
andl
xchg
add
and
cmp
jb
not
and
push
pop
adc
or
jp
les
loopne
js
ljmp
push
adc
add
cltd
jmp
movsb
imul
lods
inc
ja
mov
jne
dec
pop
jp
inc
add
push
add
int
insb
pop
pop
cmpsb
xor
jp
pop
je
out
push
sbb
outsl
icebp
xchg
mov
push
inc
inc
cmp
fwait
pop
movsl
pop
std
jae
add
pop
xchg
sbb
jp
xor
hlt
xlat
jo
dec
adcl
mov
mov
outsl
dec
repz
ficomps
aad
ja
test
fucom
lret
jb
or
adcb
jnp
jo
test
aas
fadd
inc
xchg
pop
stos
mov
jno
add
mov
jnp
cmp
cmpsb
push
adc
gs
popa
mulb
testl
add
lret
pop
jg
add
sti
jno,pn
push
cmp
out
pushl
scas
push
pop
lret
cmp
add
cmp
in
lods
cmc
push
xlat
xorl
mov
movntps
xor
test
hlt
jb
dec
add
sub
or
fbstp
testb
insl
add
mov
push
shll
add
pop
xor
mov
xor
jns
sub
and
mov
stos
inc
orb
add
or
jo
inc
out
outsb
jnp
lret
ficompl
sahf
mov
adc
pop
xchg
jae
adc
stos
loop
ficompl
add
or
adc
jmp
stc
test
aad
ss
ljmp
push
ja
mov
xorb
jp
lret
add
insl
xchg
jmp
adc
push
add
add
inc
pop
arpl
sarb
adc
add
add
or
add
xor
sub
add
lods
addr16
inc
fs
sti
mov
mov
icebp
jle
xchg
insl
pop
inc
xor
repnz
shlb
push
sub
and
decl
pop
or
jnp
fldcw
add
je
lods
mov
pushf
xor
pop
jge
pop
push
mov
xchg
xchg
xchg
adc
lock
pop
aam
int3
and
xchg
add
loop
add
lret
xchg
sbb
push
inc
xchg
mov
xor
pop
add
jnp
jge
or
stos
and
imul
out
mov
and
xorl
push
call
imul
mov
dec
pop
push
xor
mov
add
jb
pushf
push
pop
jae
stc
scas
loop
add
pop
mov
ss
loopne
mov
fs
sbbb
xchg
jecxz
mov
fstl
daa
dec
or
dec
outsl
dec
jo
xchg
cmpsl
push
or
into
or
or
ret
fstl
push
ficomps
or
lret
outsl
mov
pop
cmp
dec
aaa
xchg
movsl
mov
cmp
je
inc
test
shlb
cmp
movsb
jmp
jecxz
lahf
xlat
jb
xchg
add
pop
imul
sbb
dec
jp
pop
add
jb
and
mov
mov
enter
sub
cmpl
movl
sub
mov
add
inc
mov
dec
cwtl
push
add
inc
shl
jb
jmp
add
rorl
sub
jne
notb
mov
cltd
cmp
xchg
xchg
and
movsl
lcall
inc
xchg
xor
fsub
shll
xchg
cltd
vmwrite
sbb
ret
push
sub
push
jp
xchg
repnz
and
cmp
dec
push
pop
aaa
push
mov
cmp
aaa
enter
popa
fcoml
cmp
int3
push
adc
sbb
cli
cmp
dec
push
pusha
cmp
mov
aaa
mov
cli
in
cld
pop
fwait
adc
aaa
push
push
push
xchg
cmp
aam
clc
icebp
push
ja
cmp
cmp
dec
aaa
pop
insb
cli
js
mov
cmp
aaa
fsubr
cli
cld
bound
jno
push
inc
cmp
push
je
test
int3
cmp
lret
push
sbb
cmp
push
js
nop
movsb
cli
mov
enter
call
sbb
sub
cmp
dec
cmp
fs
je
test
push
les
fsub
call
mov
rorl
sub
cmp
aaa
pop
push
push
xchg
cmp
aaa
mov
ja
jnp
loop
push
pusha
aaa
insb
movsb
cli
mov
rclb
hlt
loop
or
cmp
inc
push
dec
cmp
push
push
xchg
popa
lods
push
mov
shl
loopne
hlt
ss
xchg
push
and
push
pop
cli
nop
popa
mov
loop
sub
aaa
pop
jo
je
jl
test
mov
mov
sar
fsubl
push
xor
ja
cmp
decb
and
loop
pop
push
js
xchg
mov
push
int3
cmp
sti
adc
bound
push
inc
aaa
dec
pop
cli
fs
cwtl
push
movsb
cmp
int3
fdivr
fsubl
push
clc
aaa
test
jne
and
inc
and
jb
xchg
jp
xchg
sahf
lahf
pushf
popf
xchg
xchg
nop
imul
test
lods
mov
cmpsl
add
mov
mov
inc
xor
mov
mov
add
xchg
fwait
cwtl
cltd
fsubrs
ljmp
dec
pusha
mov
add
add
xor
xor
fiaddl
xlat
push
bound
cld
jl
ljmp
pop
sar
jo
cmp
sbb
mov
sarl
test
jp
jecxz
xor
sbb
jnp
loop
loop
pusha
push
pop
icebp
add
pop
push
push
ficoms
pop
cli
inc
xor
pop
mov
fstl
cmp
mov
sbb
movl
fistpll
xlat
out
add
popa
jnp
add
ja
sub
popa
insb
jo
ljmp
subl
ss
jo
cmc
hlt
inc
jb
outsl
inc
and
mov
dec
popa
fs
jae
data16
jbe
add
add
add
add
add
inc
cmp
add
data16
add
add
add
add
add
jb
add
add
add
add
add
data16
add
add
add
add
add
add
add
add
pop
add
jb
add
xor
push
add
add
dec
add
add
add
add
jns
add
add
add
add
pop
add
add
add
add
je
add
insl
add
add
imul
add
jae
add
add
add
add
add
add
inc
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
push
add
push
pop
add
xor
add
add
add
add
js
add
add
add
arpl
add
add
dec
add
add
add
add
add
add
add
jns
add
popa
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
inc
add
add
add
jbe
add
add
add
insl
add
add
add
add
add
add
jae
add
add
add
add
dec
add
add
add
add
add
add
push
add
add
add
pop
jbe
cmp
add
dec
push
add
xor
add
imul
add
add
add
add
add
add
add
add
add
add
insb
push
add
add
add
add
add
add
add
push
add
push
add
insb
add
add
outsb
sarb
xlat
std
mov
das
inc
sbb
addb
fxtract
push
dec
mov
xor
mov
push
ret
roll
call
sub
dec
in
mov
addr16
insl
cmpb
jl
pop
popa
rorl
fisubs
sbb
and
and
dec
dec
add
call
arpl
inc
add
shlb
mov
mov
inc
xchg
dec
xchg
stos
fistpl
imulb
fiaddl
fdivrl
sbb
jmp
rorl
les
pop
mov
mov
nop
or
cmp
mov
sub
cltd
pop
lods
lock
and
sarb
rol
std
jne
loop
and
pop
sub
sub
cmc
push
push
lea
mov
daa
sbb
sbb
lret
fidivrl
enter
xchg
mov
sub
lcall
and
cmp
ja
push
fwait
add
pusha
push
mov
xor
inc
jo
and
movsb
shr
nop
and
repz
push
mov
ss
xchg
mov
inc
ret
fiadds
scas
cmp
jbe
insl
cmp
aad
mov
imul
icebp
movsb
mov
pop
fsubrl
loope
pusha
popf
inc
cmp
shrl
push
push
cmp
xchg
sbb
sub
scas
add
sub
lds
mov
in
jne
cmp
or
and
add
pop
push
pop
mov
dec
pop
pop
imul
xor
add
into
push
xchg
les
clc
mov
neg
pusha
sub
pop
enter
in
ret
daa
push
ficoms
rcll
daa
add
cmc
xlat
mov
push
in
xchg
inc
inc
xchg
arpl
pushf
cmp
cmp
mov
std
inc
outsb
neg
in
int3
sbb
sub
xchg
push
jne
scas
xchg
sbb
pop
int
xor
ds
pop
jne
jle
sbb
and
push
add
inc
mov
pop
inc
in
dec
jecxz
mov
adc
cmp
das
sbb
add
pop
aaa
test
scas
inc
push
sub
testl
jne
jb
mov
pop
sub
push
push
call
es
xchg
divb
int3
xor
sbb
clc
xchg
and
push
mov
loopne
or
ret
sub
shll
add
add
pop
xchg
fdivr
cwtl
inc
popa
xchg
cmp
lret
test
rcll
loopne
jno
shll
ljmp
insb
pop
popa
sbb
xchg
cmpl
sbb
jecxz
subl
cmc
bound
arpl
mov
cmp
test
pop
inc
pop
bound
call
sub
xchg
clc
bnd
mov
push
cli
cwtl
stos
xor
test
jl
aaa
push
cmp
sub
in
jl
pop
jo
push
adc
aam
lds
push
push
out
jmp
xor
jmp
aas
push
xor
mov
std
cmpsb
xchg
lods
and
insb
xor
jnp
sub
and
out
loope
sub
dec
loopne
add
mov
pop
aam
cmp
imul
xchg
js
outsl
cld
mov
movsl
pop
into
ret
sub
push
je
es
cli
mov
mov
in
and
lret
or
icebp
push
das
int
jmpw
popa
call
fnstenv
sbb
jmp
and
fmuls
psubw
cwtl
orl
in
and
aam
pop
push
cmpsb
mov
push
push
lea
jo
xor
mov
mov
std
push
adcb
mov
cmpsl
pop
mov
dec
sbb
test
incb
roll
push
popf
add
inc
aam
pop
cwtl
add
mov
jl
sub
popa
dec
push
sub
jmp
call
lahf
ljmp
loopne
popf
sbb
add
jmp
out
ret
aam
cmc
mov
loopne
xchg
call
pushf
mov
jp
repz
dec
je
lock
sub
sar
jne
inc
cltd
lret
js,pt
adc
lea
push
push
mov
sahf
minps
push
aam
lods
sti
test
xchg
jno
or
add
shlb
mov
add
rcrb
call
out
sti
movsb
mov
cmp
pop
push
mov
int3
and
adc
imul
or
in
jo
sar
hlt
xlat
xlat
fdivs
xchg
shl
out
xchg
icebp
dec
push
lock
insl
or
notb
in
push
ret
cwtl
mov
call
pop
xchg
push
jle
outsl
adc
xlat
std
outsb
dec
ljmp
jle
shrb
mov
dec
enter
js
mov
jecxz
push
inc
out
cmpsl
aam
mov
or
lock
pusha
inc
push
and
fadd
cmp
popf
xor
inc
call
fisubrs
jecxz
add
lods
aad
rorl
xor
sbb
jg
jmp
or
xchg
mov
fdivrl
xlat
daa
cwtl
fwait
daa
cli
lret
jmp
push
rcll
mov
arpl
sbb
xchg
push
push
popf
lahf
movsb
addl
ret
xor
lahf
in
in
std
adc
xlat
cli
fisubrl
xlat
out
adc
fstps
push
ret
push
out
jmp
push
es
and
inc
fiaddl
jmp
add
out
shlb
cmp
xchg
add
dec
repz
xor
jbe
jo
mov
cmp
pop
lea
mov
and
pop
jle
in
aam
adc
pop
jp
push
std
push
inc
push
and
mov
test
aad
rcll
test
ja
sbb
lea
mov
push
sti
xchg
mov
inc
das
mov
push
jecxz
push
adc
push
lahf
or
pushf
fiadds
sbb
testl
push
jne
mov
iret
or
or
mov
ljmp
roll
ret
sub
stc
inc
cmp
xchg
xlat
and
aam
stos
aaa
data16
outsl
mov
int
mov
fstpt
aas
pop
dec
cwtl
pop
cwtl
lret
pop
loopne
rcr
in
mov
fsubl
fstps
adc
ds
fadds
ret
in
sub
xor
xlat
idiv
mov
push
mov
daa
jp
loopne
lahf
add
loope
pop
gs
addl
shlb
test
push
mov
add
clc
fs
adc
push
aas
subl
mov
subb
add
cmp
push
movsl
push
mov
stos
push
or
loope
pop
push
pusha
or
jbe
push
shlb
cmp
and
push
or
push
fisttpl
pop
decl
pop
xlat
xlat
push
bound
enter
mov
add
aad
cmp
test
lahf
outsl
push
out
add
lret
loop
fwait
pusha
mov
cmp
adc
dec
andb
fsubr
add
pop
and
adc
dec
ljmp
cmp
xchg
stc
sub
xlat
mov
inc
das
nop
iret
xor
xchg
lahf
dec
add
aam
push
jp
adc
or
add
cmp
jmp
aaa
hlt
push
mov
pushf
push
ffreep
outsb
mov
mov
lods
mov
pushf
mov
add
cs
lea
mov
or
addr16
ja
push
xor
int3
shl
aaa
nop
or
add
bound
xlat
jo
mov
pop
popa
pusha
out
add
shl
push
imul
popa
inc
mov
adc
mov
and
and
cmpsb
mov
out
js
shlb
cmp
std
dec
mov
gs
push
in
xor
push
cs
loop
push
xor
jp
popf
or
dec
xor
into
xor
sub
xchg
sub
pop
xchg
push
cmp
aad
cmp
xchg
or
into
dec
popf
pop
icebp
mov
mov
lahf
ror
push
test
stos
mov
dec
xchg
fs
and
lea
data16
push
stc
fs
pop
pop
enter
or
mov
pop
cltd
shlb
nop
add
hlt
aas
mov
push
mov
add
cld
sub
mov
fildl
push
ja
lcall
xor
lock
push
int3
cli
sub
jecxz
aaa
push
int3
sub
fildl
inc
add
xor
out
jno
je
mov
sbb
inc
xor
cmc
insb
sarb
scas
aam
movsb
cltd
fstpt
rcr
cld
pop
cmp
test
pop
inc
icebp
xchg
std
sub
mov
add
and
enter
mov
jmp
adc
test
pop
out
pop
and
das
dec
and
icebp
or
das
pop
push
adc
insb
sti
cmpsb
xor
push
orl
jl
rcll
je
notl
daa
sub
cs
push
fwait
in
and
hlt
jecxz
xchg
and
in
lock
ret
inc
divb
push
or
mull
pop
faddl
push
mov
or
push
xor
xor
and
and
mov
add
mov
shll
imul
push
inc
xlat
test
cltd
push
or
lock
push
mov
pop
or
or
fistpl
jp
inc
repz
and
jae
xor
pop
mov
popa
out
fdiv
psubsb
push
push
int3
inc
lods
stos
xor
aam
scas
xchg
ds
dec
cltd
pop
lahf
test
ud2
call
pusha
inc
cmp
js
dec
add
sub
push
and
push
test
or
push
jo
mov
pop
dec
pop
sub
pop
push
shrb
mov
shll
jo
sbb
pop
popf
mov
std
push
sub
sub
sbb
cmp
cwtl
lds
jmp
pop
scas
mov
adcl
push
jl
xchg
adc
icebp
out
scas
jbe
and
fnstsw
insb
pop
pop
or
popf
and
pop
lock
mov
mov
xorb
mov
push
cmp
mov
sub
sbb
scas
loope
ror
insl
sub
ja
mov
mov
dec
mov
scas
js
movsl
mov
jno
or
aam
push
clc
dec
jae
arpl
pop
js
insb
adcb
sbb
pop
shlb
shl
push
sbb
das
fldenv
xchg
popf
adc
repz
push
mov
cltd
idivb
xor
xor
cmp
incb
push
clc
mov
or
pop
sbb
int3
xor
ret
popf
mov
add
add
fwait
dec
ret
js
call
pop
cmp
cmp
popa
aas
mov
js
ret
lods
xor
loop
sti
push
sub
cmp
xor
dec
push
faddl
sub
jnp
push
mov
in
rcr
subb
daa
and
and
scas
call
pop
out
push
jb
inc
lock
jbe
insb
pop
fiaddl
adc
cmpb
enter
shl
test
sbb
inc
cmp
bound
sbb
jge
shlb
in
pushl
mov
push
add
rcrl
fidivrl
lods
push
mov
std
mov
cmp
stos
cld
sub
call
push
mov
inc
ljmp
sub
arpl
in
sbb
mov
inc
les
fisubl
test
xchg
and
int3
shll
lret
ja
mov
sub
das
les
pop
add
xor
lret
pop
mov
adc
faddl
push
jle
xchg
cmpsl
arpl
ret
or
lds
cmp
inc
dec
addr16
imul
into
push
and
jb
mov
aam
stc
jns
inc
mov
popa
inc
xchg
adc
inc
add
mov
rcll
movb
ficompl
test
pop
push
pop
pop
cmc
rcrb
int3
add
repnz
cmp
push
scas
push
popa
ljmp
enter
cmp
push
jbe
lret
add
insb
jmp
lock
jmp
sub
adc
dec
scas
jnp
jl
xor
scas
mov
jg
insl
rcr
sbb
adc
out
loope
nop
mov
cmp
push
fisttpll
loop
fmull
or
fsubp
jl
xor
push
xor
or
aas
testl
push
outsb
mov
movb
dec
sub
fimull
mov
cli
cmp
push
fwait
push
inc
cmp
leave
insb
dec
mov
fwait
movsl
std
cmp
bound
inc
inc
icebp
push
sar
lea
push
inc
bound
push
fdivrs
div
push
call
mov
lea
dec
push
repz
adc
std
pusha
cmp
daa
loop
sub
xlat
sbb
add
ret
ljmp
xor
repz
test
cmp
repz
dec
out
call
scas
pop
jge
addr16
or
rcll
sbb
movsl
pushf
push
mov
jmp
ds
out
insb
lret
fdivs
xlat
aas
dec
test
lods
and
call
sub
lods
test
jecxz
call
addr16
out
pop
inc
sbb
mov
mov
insb
and
daa
push
xchg
push
cmp
inc
in
push
dec
pop
jne
pop
jecxz
pop
repz
cmp
push
sub
sub
xor
les
les
rcrb
mov
push
xchg
pop
shl
xchg
decb
clc
outsb
out
cmp
pop
xchg
dec
adc
dec
arpl
push
sarl
repz
sub
lock
je
es
out
mov
cmp
fcomip
pop
push
push
pop
add
loop
jns
cmp
fidivl
je
lods
pop
inc
cmpsb
ss
jns
add
call
xor
add
dec
sahf
xor
stc
in
pop
in
dec
call
jne
cmp
in
xor
mov
iret
pop
scas
icebp
out
jne
cmp
dec
scas
fcompl
pop
sub
jl
pop
push
push
add
rcll
mov
adc
out
bound
jbe
push
mov
addr16
mov
sbb
movsl
and
and
mov
and
cmp
icebp
test
fs
adc
test
lea
sbb
mov
repz
push
fstpt
jnp
inc
cmp
sbb
out
jne
in
out
jns
sub
or
xor
js
testb
sbb
fstl
mov
pop
movsb
fsubrs
jecxz
ss
sbb
xchg
adcb
add
outsl
cld
push
push
mov
test
add
repnz
push
sbb
dec
push
add
xor
cmp
leave
inc
lds
cld
add
add
mov
dec
icebp
mov
cmp
repz
inc
dec
out
lret
or
adc
aaa
es
cmp
push
test
pop
dec
adc
pop
sbb
cmp
roll
xchg
dec
cmovns
add
adc
jecxz
cmp
add
dec
xchg
push
push
mov
pop
andb
pop
cli
negl
lea
mov
inc
push
xorb
in
dec
jns
jg
orl
adc
or
adc
dec
loopne
mov
inc
xchg
jno
push
pop
int
popa
bound
out
push
mov
aaa
adc
popf
and
hlt
add
xchg
cmp
jmp
jmp
ja
lods
rorl
mov
lret
xchg
rorl
fistpll
shll
imul
or
gs
popa
mov
testl
pop
xor
or
dec
testb
push
jno
mov
dec
mov
aaa
insb
jbe
orb
mov
jns
repz
jnp
mov
cmp
ret
xor
test
mov
pop
rcll
sbb
maskmovq
notl
adc
out
pop
js
stc
adc
add
pop
or
jl
jmp
lock
cli
mov
cmp
adc
lods
and
cmp
jecxz
and
pop
pop
pop
add
push
xchg
fisttps
jbe
cli
dec
je
cmp
push
mov
mov
pop
in
ljmp
jno
scas
xchg
fs
icebp
mov
test
xor
dec
xor
in
jbe
loopne
ja
xchg
mov
hlt
clc
cld
mov
pop
dec
xor
push
jecxz
pop
sti
jmp
sub
inc
fs
rcrb
push
or
shrl
xchg
enter
jno
ret
add
fstpl
cmpsb
jg
stos
jecxz
inc
cmp
adc
push
lcall
push
push
mov
push
cwtl
hlt
popa
mov
shrl
pop
jl
sarb
js
aam
cltd
fcompl
jl
in
call
hlt
pop
test
add
popa
iret
adc
lcall
sub
movsl
push
cmp
aad
pusha
push
or
adc
pusha
mov
popa
insb
add
fdivrs
mov
or
and
cli
push
inc
mov
pushf
andl
mov
mov
mov
icebp
dec
enter
rol
inc
fmuls
lret
cmp
push
cmp
outsl
add
mov
aam
aad
fdivl
popa
sub
sub
jmp
mov
inc
lahf
popf
push
dec
adc
jp
pop
das
cmpsl
insb
fs
ret
pop
jo
hlt
cmp
aaa
neg
push
xchg
daa
jle
testl
gs
mov
or
mov
inc
ja
jae
cmpsb
dec
les
push
out
sbb
pop
pop
inc
int
insl
fs
jbe
nop
bound
cs
or
dec
and
gs
nop
in
movsl
pusha
mov
add
decl
aas
roll
mov
cmp
sbb
in
aaa
and
orps
ss
dec
cmp
push
push
out
inc
jg
jp
mov
sarb
xchg
div
cli
lahf
and
cmp
lahf
adc
push
dec
sub
or
adc
test
pushf
mov
ret
mov
xor
gs
add
xlat
icebp
add
adc
mov
pusha
inc
icebp
fistps
rorl
dec
ret
je
call
xchg
push
xor
pop
or
cld
cmp
dec
mov
mov
xchg
mov
mov
fldcw
mov
repz
push
or
hlt
cltd
push
pop
pop
rcll
adc
rolb
lahf
adc
sub
add
pop
imul
pop
or
ret
push
out
in
cli
fldl
pusha
aas
cmp
test
lock
adc
ret
testl
push
adc
and
inc
mov
lahf
lcall
xchg
flds
and
add
orl
cmp
std
mov
shll
or
rorl
mov
fldenv
out
cmp
or
lea
lea
sbb
xchg
cmp
mov
mov
pop
push
sub
out
xchg
ja
in
add
pop
insb
loope
in
popa
popa
cmp
mov
gs
dec
jmp
rcrb
pop
popa
cmp
jp
dec
sub
cmp
leave
jo
pop
cmp
int3
neg
add
dec
mov
pop
add
mov
mov
mull
adc
popa
cmp
mov
mov
inc
and
mov
mov
mov
dec
sti
int3
hlt
sbb
push
and
imul
xor
xchg
mov
push
mov
sub
mov
add
lret
mov
dec
pop
jl
jne
jnp
imul
bswap
xchg
fcomp
das
push
push
xchg
cmp
pop
jp
pop
sub
or
out
iret
xor
out
xor
mov
stos
iret
xor
ret
and
or
iret
sub
cmp
cmp
gs
test
cmpsb
lods
push
out
insb
in
lock
popa
mov
add
jp
shrb
ljmp
loopne
ret
sub
mov
mov
sahf
mov
mov
rcrl
dec
lahf
outsl
pop
out
jne
xorl
xchg
adc
add
and
xorps
imul
daa
sbb
add
push
push
cmp
sbb
dec
cmp
mov
movsl
pop
mov
loop
out
js
or
shll
ja
fs
je
cmp
xchg
and
dec
cmp
xchg
inc
sub
int3
negb
fbld
push
pop
xor
xchg
cmp
mov
and
sub
push
mov
test
push
int3
iret
out
loopne
xlat
or
xchg
loopne
sub
xor
test
insl
add
nop
adcl
icebp
jmp
movsl
pop
pusha
or
sbb
mov
dec
jl
test
movsl
loope
cmp
ficoml
inc
jns
pop
lahf
cmp
push
adcb
sub
stos
sti
jecxz
ss
or
sbb
ror
pop
insl
xor
movsb
mov
mov
pop
push
int
mov
push
cli
push
or
inc
sbb
and
cmp
gs
mov
push
rcll
mov
popf
mov
outsl
dec
xchg
pop
sub
mov
fchs
mov
mov
or
jecxz
add
cmp
addl
cld
cmp
mov
push
lcall
scas
mov
push
xchg
popa
iret
push
push
insl
and
push
mov
repz
les
mov
jbe
sub
out
xchg
mov
inc
pop
push
dec
add
jecxz
fistpll
mov
mov
mov
incb
in
xor
inc
lcall
push
jo
fistl
mov
aaa
daa
mov
dec
pop
jl
test
scas
mov
mov
mov
dec
lea
imul
adc
mov
jnp
add
inc
cmp
cmpsl
outsb
in
insb
stos
loopne
lret
in
enter
mov
push
sarl
out
das
pop
cmovno
jnp
fisttpll
or
mov
andl
out
int3
je
xchg
xchg
xchg
mov
insb
xlat
in
fldt
das
jg
cmp
insl
dec
lret
iret
dec
lea
loope
mov
sbb
mov
or
jo
push
mov
hlt
mov
xchg
cmpsl
cmp
mov
gs
sbb
je
xchg
jle
xchg
xchg
or
mov
dec
jp
push
stos
mov
cmp
adc
mov
mov
ja
ja
cmp
adc
jge
sbb
loopne
sbb
scas
dec
pop
pop
pop
push
xchg
mov
lahf
iret
push
mov
leave
cwtl
push
das
filds
or
aaa
cmp
int
pop
mov
test
mov
icebp
cmp
cmp
and
sub
lock
pop
insb
cmp
inc
sbbl
sub
xchg
jne
mov
std
xchg
push
fnstcw
mov
xchg
mov
test
cmc
outsb
subb
xchg
cmp
in
ljmp
das
icebp
int
pop
sub
jnp
ja
out
jp
negb
int
cld
aas
test
adc
cmp
ja
test
mov
adcl
xchg
xchg
lret
fs
mov
out
das
mov
dec
pop
dec
daa
push
pop
aaa
sub
xchg
cmp
les
fldl
stos
mov
inc
inc
in
xchg
xchg
insl
xchg
xchg
lret
sahf
mov
mov
or
and
loope
and
xchg
out
ja
repz
xor
idivb
xchg
xor
mov
cmp
push
adc
je
insl
pusha
xchg
mov
leave
xchg
jmp
out
jbe
aas
or
mov
sub
int
mov
lret
mov
add
cmpsb
cmc
pop
hlt
mov
sub
xor
les
lods
sbb
mov
cmp
sar
jmp
add
or
repz
icebp
jmp
aam
out
add
dec
sub
jno
sbb
int
mov
xor
adc
loop
mov
push
mov
and
stc
aas
xchg
inc
add
or
jns
cmpb
fwait
mov
idivl
xor
cmp
push
shll
cmpl
fwait
mov
ret
sub
sbb
xchg
loope
std
add
push
into
mov
aaa
sbb
cmc
or
lds
and
cmp
imul
pop
cmp
pop
int3
sub
sbb
cmp
or
scas
int
ret
icebp
add
scas
fstpl
cmp
daa
adc
lahf
mov
and
cmovnp
sbbl
and
or
and
scas
jnp
jg
jmp
mov
int
add
addr16
insl
add
add
in
dec
fs
xor
add
sbb
bound
dec
rcrl
xchg
cmp
jmp
adc
ss
pop
dec
push
mov
aaa
or
cmp
in
gs
cmp
icebp
fisttpl
scas
orl
aad
inc
sti
xchg
add
or
sub
or
sbbl
lcall
repnz
test
lahf
jmp
inc
push
mov
xor
lods
loop
dec
icebp
jne
das
xchg
popa
add
xor
add
pop
insb
outsb
in
jne
jl
loopne
cmp
movsl
mov
mov
call
cmp
in
subl
ret
add
fildll
imulb
fcoms
outsl
js
and
add
test
mov
xchg
xchg
in
out
cmc
out
sti
pop
xchg
mov
leave
sub
xor
ret
popa
jp
cltd
cld
rcrl
popa
mov
daa
sub
adc
mov
sub
out
mov
mov
les
jmp
mov
jo
jbe
jmp
stos
push
mov
mov
in
ljmp
pop
add
push
imul
add
xor
and
and
xchg
and
sti
orb
lods
xchg
adc
mov
shll
jp
xor
and
insl
dec
xor
inc
xchg
das
popa
mov
mov
xchg
push
mov
ret
mov
mov
pop
jp
ljmp
or
std
mov
lret
and
push
fcmovbe
je
push
jo
jge
shll
loope
cmp
daa
and
mov
pop
add
adc
testl
fdivrl
sbb
subl
arpl
je
jecxz
scas
loopne
ret
mov
in
pusha
or
mov
jl
mov
push
mov
xlat
insb
xlat
loopne
mov
testl
push
insl
xor
mov
sahf
sub
sub
out
push
xchg
cmp
mov
ss
jp
mov
sub
fnstcw
mov
cmc
or
cmp
mov
sbb
iret
jmp
cmp
mov
mov
mov
push
notl
push
pop
adc
mov
subl
ret
shll
jmp
mov
imul
rol
or
divl
xlat
and
cs
mov
hlt
stc
js
jle
out
xchg
out
lods
ret
xchg
loope
add
mov
and
cwtl
cmp
xchg
jmp
dec
sti
cmpsl
jmp
ja
leave
xchg
cmp
jno
add
or
fldenv
iret
mov
pop
hlt
std
xchg
push
shrb
adc
decl
frstor
iret
cmp
cmp
jp
movsl
xlat
imul
mov
xor
popf
dec
lahf
push
int
popa
lret
pop
pop
in
in
lahf
xlat
pop
dec
testb
ret
mov
xor
int3
xchg
mov
clc
sahf
add
mov
gs
jae
jle
mov
inc
shlb
jns
movsl
xchg
fdivl
fiaddl
xchg
and
sbb
mov
pop
in
push
push
jl
cmpb
imul
dec
popa
mov
out
hlt
repz
push
dec
mov
andb
fwait
cmpsl
push
stos
pmulhw
and
lcall
js
aas
lcall
xchg
int
js
ja
add
mov
xlat
loope
cmp
sbb
popa
mov
sbb
shll
inc
test
ss
imul
loope
pusha
ret
add
pop
popa
jo
sarl
sub
add
js
pop
pop
frstor
ret
jge
shl
jo
mov
sub
cmp
lock
push
jl
lahf
sti
pop
fcomps
out
lret
lea
xor
add
add
icebp
out
jmp
add
xor
ret
jne
int3
idivl
iret
adc
dec
stc
mov
push
xchg
pop
popf
rcr
les
or
stc
cmp
cmpl
adc
mov
testb
dec
sahf
add
lcall
stos
cmp
dec
push
pop
push
xor
fs
xchg
out
idivl
or
in
push
lds
outsb
mov
lret
fldt
sar
repz
ss
cmp
lock
sti
dec
or
push
adc
std
or
and
jecxz
int3
mull
pusha
insb
mov
pop
jp
addb
and
mov
stc
scas
push
jl
xchg
xor
stos
xchg
mov
add
add
add
add
add
add
add
add
add
add
inc
add
push
jae
add
add
push
add
add
add
add
add
add
add
popa
add
xor
xor
add
dec
add
jno
add
add
add
add
add
jbe
add
add
dec
add
dec
add
pop
add
inc
add
add
pop
add
dec
add
ja
push
bound
add
add
add
add
add
add
push
add
add
add
add
add
add
imul
add
add
jns
add
jp
add
add
add
add
add
xor
add
add
inc
add
add
add
add
add
pop
jns
jo
add
add
add
add
add
imul
dec
xor
dec
add
add
add
xor
add
add
add
add
add
inc
add
add
add
add
jne
push
add
add
add
add
jbe
add
add
add
dec
push
jno
add
dec
dec
add
add
inc
inc
add
add
data16
add
add
add
js
add
add
insl
add
add
add
add
js
xor
add
add
add
add
add
add
add
add
add
push
add
push
add
add
inc
add
push
add
add
add
add
add
add
add
jne
add
add
je
add
add
add
inc
add
push
add
add
push
add
ja
add
add
insl
divb
xor
and
push
jp
nop
push
and
sub
mov
push
cmp
mov
dec
xor
je
test
jmp
jg
mov
dec
mov
movsb
out
vandps
mov
pop
push
jo
add
jnp
adc
aaa
inc
lret
mov
pop
add
dec
add
dec
add
and
push
pop
rcll
fldt
rcrb
lods
nop
or
mov
movsl
inc
jne
xchg
stos
bt
jg
fwait
inc
in
loopne
adc
cmp
xor
sbb
xchg
hlt
popa
sub
mov
cwtl
jno
xor
sub
add
inc
les
iret
push
leave
roll
orl
cld
xchg
cmpl
popa
rcll
pusha
add
aad
adc
rol
lret
int3
mov
adc
push
out
lahf
out
mov
test
push
hlt
sub
pop
insb
xor
into
dec
shlb
xor
xlat
cs
mov
add
test
ss
loope
adcb
scas
mov
push
push
cmp
dec
cmp
js
push
jo
fs
push
inc
push
ja
outsl
xchg
xor
popa
push
rcr
sbb
ficoms
mov
jp
push
xor
rorb
sbb
dec
cmp
out
push
movsl
gs
js
aaa
mov
lcall
fisttpl
mov
cmp
inc
rcll
adc
adc
inc
call
ja
push
pop
popa
imul
or
inc
push
dec
xor
or
jnp
loop
sub
pop
jle
jnp
pushf
mov
xor
lret
xchg
out
pop
jne
sub
cmp
ret
cmp
jle
inc
xlat
mov
ret
ret
jmp
cli
xor
cs
shll
dec
dec
pop
stc
mov
lahf
ja
sub
fstl
test
and
pop
mov
mov
jmp
cmp
jecxz
loope
mov
adc
mov
mov
inc
ja
and
loope
outsb
add
popf
and
scas
pop
cli
fstl
imul
or
push
jnp
sub
orl
popa
add
paddq
cmp
aad
sub
mov
fisubrs
cmc
cmp
movsl
push
mov
je
jno,pn
cmp
test
add
sbb
mov
adc
or
imul
mov
mov
test
das
dec
push
xor
test
dec
and
or
pusha
push
data16
push
dec
loop
enter
push
loop
add
push
call
testb
push
pop
push
push
insb
push
loope
pop
push
push
std
shrb
int3
les
xor
push
cmp
dec
xor
cmp
pop
jne
lcall
pop
imul
into
inc
test
pop
pop
inc
or
mov
out
inc
pop
xchg
notl
int3
jno
dec
add
subps
or
pop
leave
adc
add
pusha
cli
and
jg
sete
inc
divl
aas
sbb
mov
loopne
xchg
adc
sub
push
fcmovnbe
xor
es
xor
aas
sub
cwtl
pop
mov
cmp
fidivs
inc
cmp
movb
loopne
call
inc
test
sbb
flds
jp
popa
mov
insl
push
xchg
mov
in
into
xchg
movsl
ret
or
mov
xchg
dec
rclb
das
dec
cld
mov
outsb
add
inc
xor
mov
cmp
adc
push
xor
sti
sbb
lds
xor
jbe
scas
pop
and
repz
sbb
gs
sub
push
je
js
jge
inc
inc
add
popa
add
call
or
psllw
fidivs
pop
test
jle
pop
idivl
pop
jmp
jb
push
cmp
inc
insb
sub
je
pop
or
adc
cmp
jo
xchg
aad
push
bnd
dec
mov
jecxz
dec
mov
ret
jge
jb
cld
je
jmp
addr16
movsb
or
pop
icebp
adc
xor
les
cmp
jmp
je
mov
out
loopne
popa
mov
cmpl
sahf
xorb
push
or
pop
push
loopne
adc
jmp
cmp
faddl
out
pop
inc
and
mov
jns
adc
xor
daa
fstpl
test
jo
cmp
divb
inc
cmp
mov
or
push
add
sub
mov
incl
test
dec
movsl
cmp
arpl
lret
adc
push
je
inc
jns
xor
push
testb
inc
adc
push
aas
icebp
jle
cli
sarl
or
je
push
inc
mov
sti
or
cmp
int3
pop
fstl
and
mov
pusha
cwtl
sahf
movl
jbe
add
imul
ret
pop
push
shll
pop
push
sub
mov
xorb
ret
mov
rol
ret
clc
mov
dec
mov
imul
test
fdivrs
sub
mov
sbb
dec
jmp
sti
inc
gs
aaa
xchg
cmp
cltd
pop
iret
and
ret
loopne
jg
inc
push
mov
outsl
roll
inc
in
sbb
outsl
dec
xchg
fsubrl
dec
out
daa
fwait
or
push
in
jle
xlat
cmp
fwait
fs
xor
and
sub
xor
inc
dec
je
hlt
cmp
mov
sbb
lcall
mov
jbe
inc
shlb
fwait
clc
call
inc
or
xchg
lock
xlat
clc
jl
jne
push
lret
call
jecxz
sbb
sbb
fisubrs
sub
ds
xor
xor
sbb
jp
out
mov
and
pop
jp
and
iret
ret
rorb
lcall
imul
cmp
push
jg
mov
mov
or
add
xchg
xchg
push
pop
sub
lds
stc
fs
or
xchg
je
fs
mov
xor
push
inc
shlb
push
sub
xchg
pop
call
lods
fsubrs
mov
dec
jl
addl
push
push
dec
repnz
or
jecxz
adc
pop
and
sti
arpl
divb
mul
pop
rep
cmpsb
jno
ret
lret
sar
fistl
jae
mov
popa
andl
je
sar
jge
lods
pop
mov
jmp
leave
rclb
inc
jns
jg
sbb
push
pop
les
and
dec
clc
sub
xchg
addb
sub
test
and
dec
jns
inc
sub
clc
cmp
mov
fcoml
jmp
cmp
shrb
sahf
rcll
mov
push
inc
push
push
xchg
pop
stc
xor
sub
inc
adc
adcb
fldcw
mov
xor
roll
into
clc
rcll
call
mov
cwtl
mov
stos
and
test
jo
sub
subl
pop
int3
push
or
cmp
cmp
inc
ret
push
cmpsb
push
shlb
jno
mov
call
lret
or
adc
bound
out
lret
sbb
mov
push
test
add
mov
mov
push
or
bound
or
fnstenv
shr
add
inc
xor
sbb
pop
xchg
fstl
rcll
notb
jg
rcrb
repnz
push
lea
ss
fs
sarb
push
test
add
jmp
mov
clc
sub
mov
adc
arpl
cmp
outsb
add
gs
rolb
in
adc
push
je
out
mov
jle
ja
shlb
pop
push
push
mov
xchg
add
gs
mov
cmp
jno
or
xor
lret
push
pop
popa
dec
mov
lea
cli
mov
cmp
pop
mov
pop
mov
cmp
jmp
push
jmp
jne
pop
mov
enter
aad
mov
pop
jne
ss
mov
cmpsb
ret
inc
xlat
imul
ljmp
shll
mov
sub
lds
jno
ja
and
call
and
or
ss
push
and
push
mov
inc
xchg
pop
mov
jns
and
xchg
push
pop
mov
mov
adc
movsl
imul
jl
push
or
xchg
mov
jno
push
cmp
add
push
adcb
or
push
fstpt
das
pop
rcll
jle
das
inc
add
add
inc
insl
js
cmp
je
cmp
push
mov
scas
dec
push
insb
test
rcrb
pop
jbe
rcll
xor
cmpl
in
mov
popa
push
insl
les
ret
cmp
jne
inc
sbb
iret
mov
mov
mov
cmp
and
cmp
lods
cs
mov
pop
jp
pop
push
cmp
dec
dec
ficoms
test
and
push
mov
scas
je
add
push
push
in
insl
mov
and
jp
or
repz
pop
adc
fildl
push
jnp
push
and
pushl
or
sub
jle
ss
sub
mov
mov
jne
popf
repz
jmp
xor
dec
mov
jge
or
rclb
call
lcall
out
sub
sbb
pop
das
push
mov
mov
dec
mov
sti
or
ficompl
jae
sub
imul
call
cmpsl
pusha
mov
loopne
adc
push
clc
lea
outsl
jle
rcrb
xchg
sub
cwtl
and
and
out
cmc
push
jle
pop
adc
jge
add
jb
sbb
push
cmp
or
pop
inc
adc
sub
int
xchg
adc
and
cmp
je
push
negb
lret
sete
pop
test
xor
popa
push
xchg
rcrl
push
push
inc
ja
jne
mov
shll
insb
adc
or
cmp
stc
popf
add
cmpsl
xor
push
call
adc
jae
call
sub
jecxz
dec
je
xchg
adcl
adc
pop
mov
insl
adc
jb
fstpl
pop
pop
jp
fdivrs
aaa
add
jns
xchg
push
jb
ret
cmpb
pop
jl
testb
sti
mov
dec
push
push
dec
cmp
add
push
cli
rorb
rcrb
inc
jge
cmpsl
push
test
in
cmp
lret
aad
pusha
es
and
xlat
into
imul
testb
dec
or
lods
pop
into
push
in
mov
sbb
mov
sbb
inc
aas
scas
push
ss
adc
jno
cmp
popa
stc
or
loopne
pop
and
pop
into
pushf
jp
shr
or
and
add
cmp
xchg
pop
sub
or
xlat
xor
and
ret
loope
aad
stos
lret
sub
gs
mov
jb
dec
frstor
lods
cld
or
xor
jmp
or
ss
mov
data16
dec
xlat
push
mov
out
add
daa
cmp
mov
and
pop
xchg
or
nop
push
pop
mov
mov
dec
xlat
add
pop
movsl
loopne
icebp
dec
inc
add
push
push
iret
data16
pop
cmp
and
sbb
stos
sbb
xchg
mov
jo
mov
fs
xlat
cmp
addl
rcrl
cmp
cmp
popa
cmp
or
or
or
pop
or
add
inc
xor
enter
cmp
rorl
add
jle
adc
fadds
sub
test
cmp
mov
push
dec
add
push
adc
adc
iret
call
clc
int
mov
mov
clc
fimuls
jmp
cmp
adc
fdivrs
scas
jecxz
jae
call
das
out
cli
repz
jb
decl
insb
xor
std
cmp
adc
fnstenv
outsb
ja
rcl
and
jle
test
add
add
push
scas
sti
imul
movsl
mulb
aaa
ret
popa
xchg
pop
adc
and
js
or
add
and
nop
andb
dec
dec
out
push
data16
adc
call
sub
jne
leave
add
aaa
mov
lret
aaa
and
cld
jne
xchg
push
or
cmp
fstpl
push
roll
mov
xor
cs
decl
jmp
pushf
fcmovnb
loope
shlb
dec
add
pusha
aaa
dec
outsl
and
dec
outsl
ss
loope
iret
pop
push
push
leave
je
adc
push
loop
pusha
inc
fistl
mov
fistps
ret
jmp
mov
push
mov
jle
or
shrl
mov
aaa
xor
push
ljmp
and
ret
repz
test
insb
xchg
and
pop
push
sti
jmp
in
lods
xor
push
jnp
xchg
jae
cmp
and
lods
pop
ljmp
sub
std
arpl
adc
je
nop
adc
sub
xor
inc
dec
iret
pusha
xchg
adc
test
xchg
gs
movsl
cmp
je
fs
mov
add
ret
cli
xchg
adc
sub
push
aaa
leave
nop
decb
aam
jecxz
les
pop
aas
inc
cmp
add
in
mov
add
mov
push
sbb
sub
cmpb
add
imul
jmp
std
mov
sti
int
sqrtps
mov
push
outsb
jnp
pop
clc
ja
add
xchg
popa
clc
cmp
add
inc
div
jp
sbb
jae
cmp
xor
call
push
cmc
ljmp
ljmp
pop
jmp
inc
out
popf
pop
in
sub
stos
mov
sbb
add
int
inc
add
inc
xchg
inc
ja
filds
mull
push
and
jp
adc
mov
xor
jns
jp
test
cmc
mov
add
lock
arpl
pop
cmp
testl
sbb
jecxz
sarl
sub
test
adc
in
adc
stos
out
sbb
add
mov
dec
push
aam
inc
or
sbb
cmp
jmp
xchg
call
or
lcallw
loop
int3
cmp
mov
xor
push
and
adc
cmp
rorb
ljmp
inc
jmp
pop
movsl
push
add
sub
or
scas
cmp
cmp
cli
fistps
xchg
aam
xor
ja
adc
aas
popa
sub
sarl
adc
jb
adc
int3
mov
sbb
cmp
ficomps
jl
shr
push
add
fstpt
pop
xor
lret
sub
cli
jge
repz
adc
mul
sti
jbe
cmp
loopne
mov
mov
or
out
dec
inc
dec
dec
dec
pop
dec
gs
insb
push
sub
mov
jmp
aad
jmp
cmc
orl
inc
loopne
push
adcl
mov
xlat
in
out
loope
cmp
fisttpl
dec
sub
cmp
cwtl
dec
lahf
dec
mov
dec
rorb
xor
cli
push
pop
sub
dec
hlt
mov
ja
jge
test
mov
xor
xchg
int
fists
xchg
cld
xchg
pop
xor
and
dec
lcall
jle
lcall
mov
mov
mov
pop
dec
pop
or
fldcw
in
dec
insb
push
in
pusha
in
cmp
mov
push
lret
mov
inc
lcall
das
and
xor
dec
inc
dec
push
dec
pop
dec
bound
dec
jbe
lea
mov
dec
out
add
pop
imul
ret
xchg
sbb
inc
dec
inc
pop
pop
jecxz
mov
in
jl
aaa
out
out
insb
outsb
jb
subb
adc
dec
push
pop
xor
adc
hlt
jo
ja
mov
push
mov
xchg
and
shl
rorl
jge
ret
dec
fimuls
dec
icebp
dec
sti
jge
cmp
cmp
decl
inc
push
dec
ja
aam
in
mov
push
loopne
rolb
lcall
push
cmp
lock
lock
ds
loopne
shrb
les
xchg
bound
addr16
push
aaa
addb
pop
push
jae
aad
insl
mov
xchg
bound
dec
iret
dec
aad
fmull
hlt
jge
xor
inc
hlt
adc
andl
in
add
jge
push
pusha
sub
cld
push
mov
mov
mov
mov
mov
mov
mov
mov
xor
sbb
or
out
add
in
mov
lret
xor
xor
cmp
outsl
dec
nop
push
subb
ss
aaa
arpl
ret
in
shr
loopne
xor
aaa
inc
xchg
push
fwait
test
movsb
mov
adc
push
lea
jmp
mov
rorb
push
fimuls
dec
sti
add
or
dec
sbb
dec
pop
call
sbb
xor
idivl
cmpsl
test
movsl
pop
shll
cmp
repnz
push
loopne
shrb
stos
mov
mov
lock
std
orl
adc
sbb
add
sub
mov
xchg
into
fisttpll
or
adc
push
and
insb
pop
loopne
cmp
clc
mov
xor
adc
pushl
loope
or
mov
mov
xchg
pusha
repnz
mov
lahf
add
pop
sbb
xor
dec
or
cmp
cmpsl
mov
fnstsw
mov
stc
cmp
mov
shl
xchg
add
fstpl
xor
push
divb
pusha
shll
aaa
sbbb
fisttps
cli
hlt
add
orl
dec
xor
leave
adc
pop
mov
loope
cmpsl
ret
pop
insl
fwait
jle
pop
dec
cmp
xchg
dec
sahf
dec
scas
push
mov
inc
cmp
xchg
cmp
dec
stc
push
pop
and
lret
jp
cmp
adc
hlt
jmp
test
pop
dec
fwait
in
in
out
icebp
cmp
push
scas
imulw
jecxz
popl
ret
not
mov
jo
xor
mov
and
push
cmp
clc
xchg
test
or
in
cmp
stos
lret
or
push
cmp
mov
mov
or
ss
rolb
mov
sbb
cmp
mov
sbb
and
sub
push
rcrb
sbb
hlt
imul
lds
add
aaa
inc
xchg
or
ja
orl
in
scas
in
cmp
int
aam
cltd
negb
sbb
lcall
dec
mov
pusha
inc
fldt
jnp
popa
insb
xchg
in
lahf
in
movsl
loope
lock
aad
popa
or
add
or
adc
mov
inc
orb
andl
jg
movsl
xchg
lds
stos
lock
aam
stos
hlt
cmc
call
xchg
push
aaa
or
pop
outsl
pop
cmp
insl
dec
xchg
push
rorb
jp
mov
cmpsb
lods
lds
mov
mov
add
and
sub
xor
cmp
stos
cvtdq2ps
jge
mov
lods
or
les
loope
jge
cmp
cmp
xor
jb
jns
cmpb
mov
loopne
out
mov
pop
push
sbb
outsl
pop
in
insb
insb
sub
in
lahf
in
cmpsb
in
ret
loope
mov
xlat
xor
pop
popa
sub
dec
orb
xchg
dec
lahf
dec
test
pop
les
out
test
or
adc
sbb
sub
xor
and
lret
rorb
out
or
or
sbb
cmp
xchg
jbe
adcl
mov
mov
add
in
loope
mov
pop
nop
pusha
subb
xchg
lcall
add
adc
dec
cmp
hlt
add
xchg
outsl
xchg
jne
jnp
add
movsl
mov
lret
mov
xor
sbb
sub
push
inc
xor
mov
data16
test
sbb
test
ja
mov
pop
jp
push
and
lcall
jl
stos
mov
jge
or
pop
mov
icebp
popf
dec
lcall
mov
dec
lods
pop
mov
push
iret
cmpsb
xchg
dec
push
push
hlt
and
adcl
aam
jne
in
jmp
cmc
adc
stos
push
xchg
pop
lcall
xchg
bound
mov
pop
sbb
lcall
push
dec
aaa
imul
jmp
mov
sbb
xor
push
dec
xchg
dec
pop
ja
pop
sub
xchg
ja
xchg
mov
mov
fildl
in
sti
add
add
pop
adc
sbb
sub
cmp
pop
fs
imul
push
lcall
mov
loopne
out
and
inc
sbb
daa
lahf
sub
lds
push
cmp
jg
aam
mov
rol
pop
insb
out
cli
loopne
mov
inc
rclb
pop
or
push
or
sbb
pop
mov
jl
cld
mov
cmp
loopne
shrl
mov
mov
mov
pop
or
jg
xchg
cmp
jl
sarb
jecxz
mov
push
dec
lret
dec
out
std
push
or
mov
dec
lds
in
repnz
je
cmp
xchg
ret
popa
mov
mov
icebp
icebp
fistpl
pop
cld
mov
lahf
add
ret
jo
pop
aas
adc
pop
lcall
pop
jg
push
std
mov
into
xchg
jmp
lock
add
or
cmp
jge
dec
mov
js
cmc
je
mov
xchg
ja
fldln2
adc
fs
testl
xchg
fwait
int
popa
mov
mov
out
incl
pop
sti
addr16
cmp
cmp
movsb
mov
outsl
call
pop
mov
push
imulb
inc
andl
jns
mov
xor
cmp
push
sub
fcomip
insb
inc
in
jnp
mov
ror
std
inc
xor
pop
jl
push
cmp
jno
jl
mov
xchg
ret
or
lds
or
or
arpl
cmp
push
in
pop
in
pusha
in
insl
in
jp
xorb
mov
mov
repnz
sbb
wrmsr
sub
ds
dec
lock
pop
andl
mov
mov
mov
cmp
dec
jno
pop
dec
hlt
pop
insl
xchg
jne
jnp
sbb
pop
mov
sbb
xor
outsl
push
mov
sbbb
outsl
sbb
es
pop
fs
xor
cmp
and
mov
rolb
add
cmp
icebp
pop
adc
jl
xchg
xchg
mov
mov
fmuls
hlt
jno
add
pop
add
jp
inc
mov
push
mov
xchg
sbbl
xlat
popa
or
in
xchg
inc
iret
lods
dec
pop
push
popa
xor
ja
filds
mov
add
sbb
loopne
mov
iret
mulb
icebp
fbstp
sub
pop
mov
jo
cmpl
mov
aad
lret
cmp
stos
jecxz
fwait
adc
sub
pop
push
iret
xchg
sahf
mov
pop
mov
fisttpll
add
or
das
mov
mov
pop
pop
xor
push
iret
xchg
and
mov
mov
mov
mov
pop
jge
xor
aaa
mov
outsl
cld
jg
test
stos
or
mov
mov
ljmp
mov
xor
dec
dec
pop
push
stos
loope
rcll
lcall
iret
sub
fmull
das
aaa
addl
dec
or
mov
stos
cmp
fadds
push
in
insl
in
xor
pushf
cmp
jecxz
cmp
nop
jp
cmp
and
cmp
lock
ds
xchg
sub
popa
repz
add
inc
aam
sub
xor
aas
insb
sub
loope
cmp
mov
fisttpll
and
cmp
out
mov
pop
mov
sub
js
adcl
add
int
orl
sub
xor
push
gs
nop
xchg
test
scas
xchg
ret
rolb
out
sub
loope
pop
cmp
and
jle
out
mov
mov
jp
ljmp
jp
jge
mov
jp
int3
mov
cmp
mov
inc
icebp
ret
jae
icebp
movsl
mov
mov
pop
and
clc
loope
add
sub
jl
cmp
cmp
out
insb
lods
loopne
icebp
sarl
icebp
imull
xorl
or
and
shrb
pop
pop
mov
lahf
rcrl
mov
rorl
add
inc
fistl
or
cmp
movsl
lds
insb
aam
add
adc
mov
loope
xchg
push
mov
notb
cmp
arpl
je
test
xchg
lret
xchg
aas
in
testb
add
pop
cmp
add
fdivrs
std
xor
adc
das
stos
pop
dec
dec
and
test
xor
cmp
cmc
mov
cmp
xchg
daa
or
loope
cltd
in
repz
clc
std
adc
inc
out
test
ljmp
hlt
cmp
clc
dec
push
adc
loope
repz
sti
mov
repz
icebp
loop
sub
jge
pop
mov
xchg
mov
rcrl
adc
roll
inc
lds
insb
push
loope
xchg
imul
icebp
insb
shl
add
xor
adc
mulb
shll
dec
cmp
pop
in
push
insb
fstl
cmp
dec
in
pop
gs
cmp
xlat
mov
or
or
pop
sti
das
jo
scas
insb
mov
in
idivb
icebp
xchg
stos
mov
dec
push
and
adc
xchg
ds
mov
sub
sub
push
addr16
xchg
pop
stos
gs
dec
ds
pop
ret
hlt
xchg
sbb
rorl
pop
pop
jp
insl
push
xchg
aad
inc
icebp
or
sbb
inc
outsb
es
cs
cmp
dec
insb
push
in
pop
in
cmp
test
and
cmp
mov
or
adc
sbbl
pop
imul
insb
xchg
in
sti
popa
ljmp
push
adc
je
aas
mov
xchg
pop
loope
jbe
insl
or
inc
mov
dec
jmp
repz
add
xor
mov
inc
sqrtps
outsl
cmp
orl
mov
scas
sub
loope
icebp
das
repz
cmp
xor
notl
dec
arpl
jnp
sti
je
popf
xchg
test
ret
aam
fsub
arpl
lock
and
sub
aas
jecxz
mov
imul
mov
xchg
ljmp
aas
and
pop
xor
xlat
dec
xchg
push
pop
iret
lds
jbe
xor
pop
mov
mov
in
xor
lcall
push
clc
and
jl
pop
mov
lock
aas
or
dec
fisttps
icebp
mov
or
add
pop
and
xor
lea
dec
mov
cwtl
adc
aad
loop
repz
sub
jno
mov
push
lcall
mov
ret
or
push
sti
addl
pusha
adc
stc
or
mov
rolb
xorl
fistl
pop
notl
loopne
icebp
iret
mov
testl
jne
mov
jmp
mov
jmp
filds
cmp
push
jno
pop
pop
push
jbe
dec
je
mov
mov
xchg
not
dec
or
and
inc
dec
mov
pushl
test
dec
sahf
push
lods
bound
mov
mov
cmp
xor
push
inc
xor
push
inc
adc
xchg
scas
fimull
pop
jbe
cmp
xchg
or
aas
xlat
inc
xchg
inc
bound
and
add
scas
jmp
jmp
icebp
jp
add
roll
add
dec
pcmpgtw
sti
sub
iret
fmull
std
popl
inc
dec
dec
push
jle
jge
inc
cmp
cmp
jae
jns
xchg
mov
pop
leave
xchg
adc
xchg
sub
xor
test
dec
jb
lret
sbb
loopne
ret
gs
dec
pusha
adc
jmp
in
gs
sarl
insl
out
fnstsw
addl
or
pop
lea
mov
adc
scas
or
xor
adc
mov
mov
dec
mov
shlb
sub
jecxz
pop
add
stos
pop
xor
cmp
fistps
negb
adc
mov
jmp
add
aaa
and
cmpl
inc
mov
jo
jnp
sub
int
subb
repnz
xchg
cmpsl
add
add
add
add
aaa
add
add
add
add
add
xor
push
add
add
dec
add
add
add
push
add
pop
add
add
add
add
add
outsb
add
add
add
add
add
add
push
add
push
add
inc
add
add
add
add
push
add
pop
add
add
add
add
dec
add
add
add
add
add
imul
add
jno
bound
dec
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
insl
add
jne
add
jns
inc
add
add
inc
add
add
add
add
add
dec
dec
add
push
add
add
add
xor
add
add
add
add
add
dec
add
push
add
add
add
add
push
add
add
add
xor
add
add
add
insb
add
add
push
dec
js
add
dec
add
add
dec
dec
add
xor
add
add
add
inc
add
add
push
dec
add
add
add
add
add
add
add
add
add
add
dec
dec
add
add
add
add
add
dec
add
add
dec
pop
add
add
add
ja
add
add
add
add
add
pop
ja
add
add
outsl
add
add
add
add
jbe
push
add
xor
add
pop
add
insl
add
aaa
add
push
add
add
add
add
dec
add
inc
add
add
add
add
add
je
add
add
add
add
add
add
add
add
pop
dec
add
push
add
jp
lea
push
pop
dec
cld
mov
inc
sub
out
push
xor
pusha
add
rcll
pop
or
inc
loope
add
xor
dec
jns
mov
mov
xor
movsl
std
push
cmp
inc
dec
mov
stos
mov
sbb
sub
xor
imul
daa
fimull
push
dec
popa
mov
pop
inc
lret
sbb
aam
ret
jle
push
push
into
in
mov
xchg
fdivrl
test
dec
clts
cwtl
sbb
or
scas
outsl
push
add
stc
repnz
rcrl
sbb
mov
adc
dec
adc
sar
or
sub
mov
jnp
pop
daa
inc
mov
enter
xor
inc
mov
popa
mov
dec
js
call
sub
pop
decl
clc
out
pop
cwtl
popa
push
neg
fmuls
adc
mov
in
mov
xchg
in
xchg
aam
lds
aaa
in
pop
dec
fsts
inc
push
push
jae
daa
add
enter
inc
mov
cmp
push
lret
adc
test
cmp
jle
fimuls
cld
or
push
push
jl
jp
and
inc
sbb
call
push
imul
hlt
daa
sbb
int3
sbb
int
mov
add
mov
push
xor
push
lods
xchg
sub
xchg
iret
sub
subps
test
mov
das
insl
cwtl
lods
arpl
xchg
sbb
test
into
cli
mov
bound
fistpll
push
cmpl
rcrb
cmp
mov
repz
cmp
xchg
call
fneni(8087
lea
loop
inc
loope
pmulhw
inc
js
mov
sub
xor
ja
fnstcw
fsin
enter
clc
in
xchg
cmpsl
push
loopne
adc
shll
xor
lcall
popa
sub
iret
out
dec
xchg
stos
jl
in
xlat
push
or
dec
adc
sub
rorb
xchg
or
sub
inc
int
sbb
shrb
rcrb
or
mov
mov
mov
or
andb
add
cmp
xchg
mov
cmc
outsb
shll
cwtl
pop
fs
xor
loope
mov
jnp
sbb
negl
js
mov
sbb
cli
jne
and
or
roll
ja
imul
mov
cmp
pushf
fldenv
xchg
mov
andb
cmp
and
movsb
push
in
push
inc
mov
dec
xchg
cmp
js
xchg
and
bound
mov
dec
sbbl
inc
jmp
pop
sub
xchg
cmpsb
push
pushf
imul
push
or
cmp
mov
cmpsb
push
pop
mov
dec
or
mov
into
mov
outsl
xlat
in
push
mov
bound
dec
push
dec
int3
mov
push
pop
fsubr
push
mov
mov
inc
mov
in
xabort
xlat
ficoml
divl
cli
mov
imul
mov
push
fcompl
jnp
dec
movsl
fldenv
int3
les
bnd
dec
push
jnp
std
push
push
pop
or
pop
jae
inc
mov
pop
sub
iret
jae
pop
imul
es
bound
and
inc
cmp
add
add
sub
incl
push
xor
dec
fsubs
test
adc
mov
lahf
lcall
andb
or
aam
movsb
pop
je
mov
sub
xchg
xorl
sub
cli
fcomps
ss
pop
js
xchg
dec
lret
mov
or
mov
sarl
mov
call
mov
inc
int
mov
out
gs
out
sahf
and
hlt
dec
jmp
sbb
cmp
test
sbb
adc
insl
loope
stos
mov
mov
std
mov
fwait
ss
mov
mov
call
stos
sub
sbb
jae
pusha
sbb
call
push
mov
adc
inc
insb
mov
movb
std
shlb
xchg
out
jns
subl
aas
push
mov
cmp
dec
scas
pop
cmp
psignb
cli
mov
and
arpl
les
cli
adc
dec
sar
ljmp
push
aam
jmp
out
push
ja
adc
jmp
sbb
or
push
sub
and
adc
fistpll
sub
rol
or
cld
je
push
movsb
mov
push
pop
sub
jo
cmp
sub
leave
cmp
mov
sahf
jge
lret
lcall
xor
push
mov
jp
jb
movb
mov
fsubrs
jecxz
jbe
shl
test
cwtl
in
sbb
lcall
lcall
jmp
fiadds
leave
fistps
cld
stc
scas
xor
jne
bound
clc
sub
push
jecxz
repnz
push
fs
cli
or
lock
cmp
jne
movl
push
into
push
dec
xchg
add
or
mov
cld
mov
xchg
push
push
or
or
lods
mov
das
xchg
faddl
cmp
pop
push
sub
cmp
xor
int3
orb
icebp
sbb
fmuls
adc
adc
lret
add
cmp
cmpb
adc
push
das
gs
into
rcrl
movsl
push
mov
add
shl
jp
pop
sub
xorb
mov
xor
lret
je
imul
xchg
mov
aad
sub
inc
jae
push
stc
call
xchg
inc
inc
xchg
cmpb
fsub
sbb
mov
shr
pop
inc
leave
fcoml
xorl
mov
cmp
out
xchg
dec
fists
stos
scas
ret
add
loopne
add
pop
add
push
lds
cmp
cld
push
and
in
test
lret
into
testl
and
cli
and
and
add
bound
lods
sub
fdivs
aas
movsb
addr16
push
push
movsb
in
xor
or
mov
xchg
bound
adc
cmp
dec
push
sub
inc
xchg
cltd
sahf
xor
ljmp
les
push
pop
cmp
jp
inc
mov
add
cmc
sub
hlt
lret
pop
mov
cwtl
leave
xchg
in
fstl
push
lods
stos
xlat
push
leave
in
fwait
sbb
mov
fcos
in
push
xor
or
pop
setb
or
icebp
mov
xor
or
push
clc
movsb
dec
push
xor
cmp
ficoms
sahf
mov
cmc
xor
mov
sub
sub
mov
mul
daa
je
shr
stos
repnz
shrb
popf
ljmp
int3
ds
or
aaa
push
icebp
push
jmp
sbb
ss
pop
or
push
icebp
cmp
lret
out
popa
cmp
mov
mov
jmp
mov
sbb
adc
das
fwait
and
fadds
jbe
iret
loop
mov
mov
sbb
pop
fstps
push
adc
cmp
and
sub
je
xlat
inc
aaa
sbb
pavgb
jecxz
sub
fistl
mov
loop
repnz
pop
mov
push
pop
lcall
or
push
and
add
decl
adc
jnp
xchg
ret
or
pop
lea
mov
call
dec
scas
cmp
add
cmp
loope
inc
mov
fstl
popf
int3
mov
mov
enter
sub
jle
lahf
cmp
ds
pusha
and
mov
pop
inc
mov
mov
jp
mov
xchg
out
gs
sbb
inc
inc
xor
jmp
out
push
and
dec
test
jp
xchg
and
mov
loope
inc
jnp
inc
ret
les
je
sahf
fistpll
fucomi
jno
fstpl
dec
cmpsb
fcmovb
sti
add
xchg
mov
popf
pop
adcl
jp
cmpsb
cmpsb
dec
cmp
repnz
into
ss
cmpsl
pop
lea
test
jl
dec
cmp
dec
mov
add
and
pop
leave
push
dec
pop
sti
or
es
mov
rcr
popa
out
mov
inc
mov
mov
jge
add
insl
daa
insl
subl
sub
push
adc
es
faddl
mov
xor
in
mov
les
push
cld
adc
jecxz
pop
dec
add
fimuls
scas
into
pusha
xchg
scas
fsubrl
sahf
pop
ret
cmp
sbb
ret
xchg
push
mov
inc
lock
call
xor
sbb
pop
pop
sub
jmp
pop
cld
inc
mov
pop
push
pop
mulb
jmp
inc
pmaxsw
ja
je
sub
scas
loop
shl
loop
jecxz
mov
aad
inc
sub
push
xchg
jge
stos
sti
xchg
cmp
mov
insb
dec
das
mov
mov
pop
divl
lock
inc
push
jbe
dec
call
fadd
mov
xchg
paddusb
dec
insb
jg
pop
push
ljmp
call
and
push
ret
iret
pop
aas
in
imul
cmp
mov
mov
stos
test
ss
in
push
push
test
jb
cmp
and
and
stc
pop
or
and
mov
mov
addl
inc
js
insl
push
fiadds
sub
fmull
test
lret
mov
std
push
dec
aam
lods
cmpsl
push
cwtl
add
arpl
push
fmull
push
pop
xchg
lock
push
xchg
fmuls
ficoms
add
cltd
fists
mov
fs
ror
pop
sbb
adc
insb
mov
inc
inc
je
clc
add
rolb
popa
adc
jb
nop
rcrb
xlat
mov
or
pushl
cmp
or
test
xor
push
or
xor
cmc
in
or
scas
div
cmc
sub
sbb
pop
inc
repnz
dec
push
mov
ja
maskmovq
sbb
testb
movsl
shlb
icebp
push
js
jnp
push
repnz
ret
arpl
cmp
aad
adc
or
aaa
roll
xor
xchg
rcrb
bound
sub
xrelease
fiaddl
enter
addr16
add
or
lret
repnz
add
mov
movb
adc
or
mov
mov
lret
addr16
push
and
mov
hlt
push
or
incb
add
adc
and
sub
add
xchg
cwtl
xchg
push
jmp
add
cli
or
pop
and
push
dec
xor
call
pop
pusha
fstp
mov
cld
pop
mov
mov
sub
jns
or
and
mov
inc
jo
mov
loope
sub
mov
sbb
hlt
nop
jae
aam
data16
jge
fdivr
cmp
jae
jmp
in
fs
sti
psrlw
xor
aam
mov
orb
mov
pop
or
into
call
in
mov
shll
mov
out
in
sbb
and
jb
fisubrl
fildll
out
fsubr
lret
xor
cmpsl
inc
and
inc
push
pop
push
mov
lret
lea
sbb
and
push
jb
aam
scas
add
jmp
push
mov
fistpll
push
cmp
aad
in
es
pop
or
adc
idivl
or
dec
inc
push
stc
or
inc
in
xlat
mov
pop
outsb
sbb
pusha
aaa
rorl
mov
push
and
push
adc
or
call
mov
dec
repz
testb
dec
out
clc
sub
es
pop
push
add
mov
pop
jbe
out
sbb
js
mov
ret
movl
stos
arpl
sti
and
out
mov
cvtdq2ps
call
int3
xchg
and
daa
cwtl
jne
cmc
xor
fcoml
loopne
in
call
cmp
jne
arpl
arpl
adc
ret
push
push
pop
or
repnz
aad
ret
cmp
lret
push
neg
sbb
push
pop
jns
imul
push
cmp
jno,pn
adc
jmp
jbe
add
imul
xchg
jge
leave
imul
push
jnp
adc
add
jbe
flds
stos
and
std
gs
jecxz
imul
inc
mov
push
or
mov
dec
mov
jne
insb
mov
push
adc
lock
cld
add
adc
pop
clc
leave
and
clc
adcl
stc
jne
cmc
cltd
adc
cmc
andl
repz
push
std
mov
inc
sbb
push
in
mov
in
call
mov
jnp
add
xchg
xorl
je
shl
jmp
pop
and
pop
and
jne
xchg
int
cmp
mov
andb
into
pop
addb
xor
in
push
loopne
adc
loopne
sbb
dec
or
xor
sbb
movsb
xor
xor
data16
jmp
nop
enter
inc
push
sub
or
jmp
adc
or
jne
hlt
div
outsb
push
inc
out
add
jb
cmp
aas
ja
dec
pop
adc
jbe
dec
xlat
jmp
jns
les
push
enter
call
push
pop
repnz
add
mov
inc
cltd
cmp
call
inc
or
jle
jne
mov
add
loope
lock
jg
in
and
adc
das
cmp
inc
push
mov
ds
jbe
decl
outsb
dec
or
adc
push
jne
push
mov
mov
dec
andw
mov
sbb
mov
imul
jmp
out
cmp
inc
xor
jb
push
lea
or
push
sub
pop
call
insb
outsb
sub
jmp
push
xchg
loopne
repz
pop
push
pop
push
ret
aaa
push
int
mov
lret
and
fwait
inc
stc
je
jo
es
shlb
jne
mov
push
push
push
call
pusha
or
call
mov
dec
ja
mov
imul
inc
aaa
add
cmp
shll
pop
xor
mov
aas
xor
repz
ret
jle
or
out
fistps
adc
lock
lret
imul
js
or
xchg
add
mov
add
pop
xor
or
arpl
fisttpll
rcrl
mov
pop
adc
call
arpl
hlt
decb
icebp
xor
or
dec
es
xor
imul
push
sbb
cmp
cmpsb
push
addr16
add
iret
push
jne
pop
pop
mov
add
dec
inc
sub
push
into
cmp
adc
push
push
and
inc
xchg
pop
dec
ret
testl
push
jns
push
jmp
sbb
outsb
sbb
cmpb
imul
mov
pop
push
lea
sbb
inc
push
xlat
cmpl
jne
fcomps
loop
test
data16
daa
push
dec
test
in
dec
cwtl
and
daa
mov
rcl
lods
inc
arpl
sarb
xor
les
mov
adc
orb
rolb
cld
pop
cld
ret
or
mov
sub
add
and
cltd
mov
insb
test
pop
lock
repz
inc
lock
loop
pop
push
dec
sub
iret
mov
mov
call
pushf
pop
sti
adc
loope
leave
jp
repz
fwait
jmp
aaa
mov
sub
fists
dec
sti
mov
sbb
and
daa
pop
mov
inc
or
xlat
pop
sub
dec
dec
daa
in
hlt
or
ljmp
cs
call
mov
into
and
aaa
iret
lahf
leave
ret
mov
dec
out
ror
xchg
jne
cmp
push
mov
popa
cltd
push
fistl
xor
inc
sub
popa
mov
inc
pop
cmp
xlat
dec
fwait
push
xchg
cmpsl
xchg
test
pop
sbb
pop
mov
xor
popf
inc
jge
or
out
cs
and
test
jnp
aas
fs
cltd
mov
jne
mov
es
or
add
adc
out
mov
fisttps
loope
adc
mov
lods
test
xor
rorb
movsb
adc
cld
mov
mov
pop
and
aad
jp
sub
fsubrp
lret
pop
push
je
add
mov
stc
dec
xor
mov
sub
ljmp
lods
mov
sbb
xbegin
push
sbb
aaa
stos
adc
pusha
gs
icebp
inc
dec
imul
lods
pop
adc
testl
movsl
test
push
push
bound
add
dec
pop
icebp
movsb
aas
pop
lea
in
roll
push
or
adc
add
pop
add
inc
icebp
das
xchg
cmp
add
sbb
add
sbb
add
in
sbb
push
xor
sub
lahf
insb
iret
orb
xchg
mov
mov
push
pop
inc
or
push
cmp
lret
or
inc
push
jecxz
mov
push
pushl
push
xlat
aaa
inc
add
xor
jno
dec
dec
iret
pop
or
inc
mov
or
mov
cmpsb
cmpl
lcall
lahf
lea
shll
adc
pop
pop
mov
jle
mov
aaa
or
push
repz
push
sbb
ret
push
or
addr16
mov
jno
lea
push
push
mov
push
call
roll
inc
je
dec
lahf
adc
sarl
in
xor
mov
push
jo
aam
sbb
push
push
in
xor
pop
jo
outsb
cmp
movl
push
ljmp
xchg
je
cwtl
out
xchg
cmpsl
in
adc
adcl
jno
test
jle
lods
stos
sbb
mov
sbb
rorb
mov
cli
mov
inc
sub
pusha
pop
js
lea
or
mov
pop
pop
inc
push
or
or
stos
stc
push
mov
or
xor
mov
mov
fdivs
call
add
out
pop
xchg
sbb
cmp
sbb
xor
xchg
aaa
sub
push
std
pop
or
jns
xor
and
push
or
addr16
dec
inc
xor
pop
dec
lods
dec
cmp
jle
sub
mov
leave
push
lds
pop
mov
popf
cmp
or
pop
mov
ret
inc
sti
add
sub
sub
and
fisttpl
out
push
popa
sub
rcl
sub
and
int
and
push
inc
add
cmp
dec
repz
fnstcw
push
outsb
or
inc
dec
mov
fnstcw
pop
xor
shll
push
sbb
cmp
fisubs
push
clc
inc
pop
lahf
inc
push
dec
sub
ss
push
push
mov
push
dec
cwtl
mov
scas
inc
sub
in
std
fldlg2
lock
push
or
xchg
icebp
jno
call
lret
dec
adc
or
xor
or
out
shr
cmp
sarb
pop
mov
ss
test
adc
push
movsb
lcall
add
add
pop
hlt
sub
into
aad
or
or
adc
je
out
ficompl
loop
sti
ret
sub
or
add
jbe
ljmp
or
add
mov
je
shlb
mov
stc
and
sub
dec
testb
dec
sbb
push
ret
xor
call
scas
ja
popa
in
jns
shrl
in
mov
sub
xor
clc
push
loop
aaa
sbb
popa
xor
mov
push
jo
lret
call
adc
mov
jp
and
cmc
and
cs
out
dec
inc
jnp
mov
rorb
dec
mov
ds
ret
out
jle
repz
xchg
ret
daa
adc
sbb
mov
xchg
jge
sub
add
inc
or
push
jns
sub
push
dec
jmp
lea
cld
add
mov
fdivs
ficompl
xchg
loopne
into
int
ret
mov
pop
cmp
push
arpl
fimull
sbb
jge
or
jo
call
push
push
cmovns
std
mov
pop
sbb
es
jmp
out
decb
loop
jle
lret
gs
lcall
sub
jp
sti
or
add
cmp
rorb
into
sbb
leave
out
add
mov
mov
imul
popa
cmc
je
popf
ss
shlb
jne
or
cli
std
push
dec
in
js
fcoms
mov
push
rcr
pop
les
addr16
adc
mov
push
pop
xchg
xor
jge
push
or
ja
test
cwtl
repz
xchg
cmp
test
xchg
lds
cmp
cmp
aas
sbb
adc
jbe
sub
adc
lock
aaa
pop
adc
nop
mov
shlb
push
lret
jle
popa
mov
pop
ret
addr16
xchg
clc
jecxz
std
in
or
ja
add
sub
test
shlb
idiv
xchg
pusha
mov
jecxz
jae
pop
icebp
test
pop
je
jbe
mov
shl
adcl
loope
push
push
mov
push
sbb
in
sar
lea
rcrl
lcall
mov
sbb
addr16
push
jecxz
dec
clc
or
cmp
push
in
outsb
in
sbb
mov
lcall
bound
pushl
pop
mov
popf
sbb
cmp
xchg
das
pop
mov
fwait
mov
xor
gs
enter
daa
push
sub
out
iret
fimull
pusha
sbb
dec
sbb
sub
clc
shrb
add
stc
sub
and
push
fstl
push
push
sbb
add
pop
frstor
jno
cs
xchg
adc
sbb
mov
nop
adc
xchg
enter
mov
orb
push
pop
test
clc
inc
or
dec
mov
scas
sub
out
sbb
shll
inc
aad
xchg
bound
and
push
push
es
lret
imul
xlat
ret
js
addr16
clc
jae
loop
pop
add
jmp
add
out
push
xchg
jns
dec
nop
dec
in
sbb
ds
cmp
push
adc
loop
mov
call
pusha
jg
mov
sbb
push
push
push
rcrb
stc
xchg
shl
jg
insb
pop
pop
pop
add
mov
ss
mov
and
push
aam
mov
icebp
cmp
lock
add
adc
pop
inc
xchg
dec
cmp
lcall
pop
pop
lock
sub
cmc
in
pop
sub
push
bound
stos
mov
push
mov
push
out
mov
cli
or
mov
mov
jns
jmp
test
jbe
jecxz
jp
push
shl
jp
iret
icebp
pop
dec
icebp
call
cmc
ljmp
sub
pop
xchg
adc
adc
dec
sbb
sbb
iret
or
pusha
jg
jns
out
outsl
xor
adc
jnp
loop
pop
cmp
ljmp
shlb
aaa
adc
jl
sahf
push
aaa
add
outsl
out
lret
cmp
cmp
out
daa
inc
xor
out
sarl
add
test
imul
cmp
cmp
jecxz
inc
adc
inc
sbb
and
je
and
insb
cmc
xor
cmc
cmp
shlb
xor
push
cmpsb
and
pop
sub
mov
jne
int3
pop
rcll
fbstp
mov
adc
adc
inc
scas
add
shll
andb
sub
and
call
mov
cld
sbb
aaa
adc
and
lahf
comiss
mov
repnz
inc
pop
mov
les
dec
pushf
test
sub
or
ficoms
mov
push
ds
shll
cmp
loopne
add
cmp
je
out
xor
xor
push
lds
out
push
daa
iret
mov
mov
xorl
or
popa
dec
ret
mov
mov
cmp
mov
loop
mov
lock
mov
in
jmp
add
inc
pop
mov
out
in
je
xchg
aad
clc
mov
push
inc
sub
loop
and
pushf
xor
push
push
pop
cmpsl
out
lods
push
aas
fcmovnb
repz
sub
xchg
fwait
out
hlt
inc
sub
out
fwait
hlt
mov
in
mov
push
outsb
lret
jbe
xor
mov
sbb
cmp
cmp
js
repnz
aas
in
jl
jmp
out
mov
push
lods
cmp
loope
rolb
cli
in
push
fisubrs
or
pop
jne
dec
adc
xor
dec
cld
mov
out
inc
imull
in
mov
daa
cmp
ds
lret
and
movb
bound
dec
jmp
jnp
add
cmp
arpl
pop
or
and
sub
xor
sub
sbb
sub
ljmp
in
mov
inc
shrl
push
adc
push
sbb
imul
xor
jmp
cmp
jae
ret
inc
inc
jecxz
sub
mov
cmc
adc
jle
adc
loope
jae
mov
sbb
sbb
test
jne
pop
or
inc
subb
add
insl
sbb
shrb
mov
daa
bound
lock
sub
inc
xor
sub
jo
xor
rcr
mov
inc
cmp
jb
ja
ljmp
jbe
push
jge
push
inc
inc
and
fstpt
lock
xchg
pop
cmp
cmp
jmp
scas
or
xor
cmc
mov
shl
mov
jge
jmp
mov
xor
hlt
mov
mov
lds
inc
push
cmp
push
cmp
push
dec
dec
pop
cmp
sbb
jle
or
movsl
pop
iret
jns
cmp
push
or
divl
sbbb
jae
iret
dec
mov
push
lea
and
or
push
in
sbb
ss
jb
je
aam
adc
and
jmp
lahf
loop
jmp
outsl
je
dec
sahf
dec
popa
adc
test
mov
test
aam
inc
mov
jmp
lahf
mov
or
testl
mov
pop
ret
aas
ja
imul
sar
jo
or
push
or
cmpb
mov
pop
sbb
xchg
sbb
jge
pusha
fwait
cmp
scas
loop
arpl
in
xchg
aad
push
push
xchg
pop
inc
sbb
loop
sti
or
dec
imul
cwtl
loope
popa
sti
push
aaa
pop
int3
fwait
std
mov
mov
xor
fldenv
and
mov
in
shl
adc
lds
xor
sahf
mov
push
cmpsb
lret
rcll
nop
push
test
call
into
mov
or
mov
data16
mov
ljmp
cmp
loopne
mov
and
sbb
ja
mov
sub
jecxz
and
insl
or
add
jbe
addr16
ret
pop
addr16
popf
jb
je
cmp
lcall
mull
sub
sti
and
add
in
fiadds
cmc
or
add
push
push
mov
ret
xor
iret
inc
xor
mov
mov
call
cmp
in
pusha
bound
or
das
mov
shr
and
xlat
and
xor
in
in
xchg
lods
pop
pop
fs
iret
aas
push
push
push
ja
jl
sbbl
adc
cmp
adc
push
insl
or
insb
lea
fnstenv
mov
jecxz
cs
stos
outsl
ret
cltd
arpl
in
arpl
pop
cwtl
xor
mov
mull
addr16
outsb
jmp
or
mov
mov
in
mov
in
xchg
mov
dec
push
lock
or
xchg
loopne
inc
arpl
ljmp
scas
lods
idivb
clc
cmp
rorl
cmp
sbb
js
mov
test
dec
xor
pop
pop
pop
pop
rorb
jmp
pop
in
push
or
mov
repz
add
pusha
or
or
jl
popa
fimull
sub
loope
lock
call
sbb
pop
cmp
orl
add
push
push
mov
mov
movsbl
add
mov
mov
cmp
inc
inc
in
jne
loope
cmp
lcall
test
cwtl
in
push
and
pop
aad
sub
xchg
cmp
rorl
inc
xor
lea
insb
xor
fdivr
je
out
enter
push
pusha
leave
xor
and
lock
add
mov
movsl
xor
leave
mov
jmp
lea
popf
add
mov
aas
adc
call
jbe
add
and
rcll
adc
ds
jne
pop
scas
pusha
icebp
push
call
int3
inc
repz
jne
jmp
inc
push
mov
inc
call
xor
shrb
add
addr16
adc
jbe
xor
mov
push
or
xchg
gs
je
sub
adc
stc
mov
push
fbld
movsb
ret
and
cmpsb
clc
pop
xor
ljmp
mov
test
popf
jbe
fsts
mov
dec
mov
cmp
pop
mov
cmp
das
jae
jl
sub
dec
loopne
imul
dec
push
pop
and
lock
push
mov
xor
dec
faddl
pop
jnp
mov
add
mov
sbb
sub
lret
pop
xor
add
cmp
inc
lea
dec
mov
and
push
add
fdivs
pop
cmp
jae
call
pop
push
or
cmp
iret
std
test
dec
sbb
pop
xchg
pop
adc
or
clc
push
push
es
pop
insb
fadd
dec
sub
inc
adc
sbb
dec
sub
mov
std
call
sbb
mov
sbb
jge
jmp
push
jne
pop
xchg
xor
fnstenv
stos
cmp
xor
call
add
shlb
sbb
mov
ret
repz
decl
or
push
add
jmp
push
call
xor
push
dec
lock
jbe
lret
aas
hlt
add
sar
push
xor
or
mov
das
negb
jns
call
stos
or
pop
inc
jp
mov
orb
adc
mov
fnsave
pop
sub
out
dec
jbe
test
and
lret
and
xchg
dec
test
lea
mov
jl
icebp
in
ret
or
out
pop
icebp
sub
daa
sub
sub
shr
aaa
loop
dec
enter
out
shrl
pop
push
or
das
or
call
popa
mov
cmp
fists
sub
in
sbb
jmp
jmp
lds
inc
and
jo
gs
lret
or
lds
sbb
fcoml
push
xor
xor
jmp
jge
test
popa
xchg
icebp
xor
inc
sub
gs
xchg
mov
lahf
call
pop
in
loop
push
dec
cmpsb
mov
xchg
call
xchg
popa
call
loop
out
jnp
inc
pop
pop
mov
popa
cmp
xchg
cmpsb
lahf
sti
jmp
jmp
cmp
xchg
inc
xor
lock
or
cmp
pusha
fisttpll
push
push
push
rorb
push
arpl
mov
jne
xchg
stc
nop
lea
and
in
repz
add
xor
in
test
push
cmp
or
xor
mov
pop
je
xlat
adc
out
mov
cli
mov
cmp
movsl
inc
lods
add
gs
mov
mov
pop
cmp
ret
sub
add
add
inc
psubq
scas
xchg
mov
push
loope
jnp
orb
loopne
pop
xor
pop
aam
xlat
mov
xchg
cmp
mov
add
loopne
xchg
add
fs
icebp
pop
and
add
inc
fs
leave
mov
fbstp
dec
roll
xlat
lods
les
xor
push
sbb
add
andb
mov
jp
popf
and
in
cmp
jg
inc
insb
fs
mov
pop
mov
push
jle
xchg
ss
repnz
adc
add
inc
inc
jbe
mov
bound
or
push
mov
inc
push
arpl
rorb
int3
push
mov
xor
push
addr16
in
scas
xchg
jecxz
in
lods
in
shl
adc
movsl
lock
mov
std
dec
xor
pop
push
mov
fsubl
push
data16
insb
ret
js
or
xlat
andl
decl
sbb
aas
js
negl
cli
cmp
sub
jl
xchg
std
pop
imull
mov
push
xchg
les
jp
push
mov
mov
pop
push
push
nop
and
push
push
add
in
mov
push
push
pop
push
shr
sub
or
push
pop
movsb
sarl
cli
sbb
jmp
mov
inc
mov
xor
addr16
xchg
fs
mov
pushf
jae
add
xor
or
jmp
fsubs
mov
sarb
sbb
imul
jo
xor
mov
xor
movsb
fst
jge
cld
mov
pop
push
negb
sub
cmp
jmp
sub
fs
or
lcall
push
sbb
lea
push
daa
mull
xchg
jmp
pop
cli
subb
lret
xchg
jo
jmp
sub
sbb
mov
pop
or
sub
icebp
call
xchg
lret
inc
sarb
jne
push
push
jnp
call
ror
ret
enter
mov
and
loope
xlat
iret
lods
shr
mov
into
out
dec
push
lock
pop
jmp
cmp
jb
cwtl
adc
mov
adc
adc
push
push
or
mov
shr
or
popa
jle
inc
sub
adc
fstl
push
adc
fstpl
ss
push
rcrl
jne
push
xor
mov
jns
ret
jnp
cmc
and
push
iret
aad
dec
shl
sbb
pop
jp
sub
out
mov
and
pop
sub
mov
pop
adc
mov
jecxz
pop
aas
add
and
fadd
cwtl
push
shl
rorl
rcll
push
mov
fisttpll
xchg
sbb
filds
loopne
rcrl
mov
into
loope
mov
imul
lret
xor
divl
loop
jmp
jmp
js
leave
pop
xor
mov
mov
fld
es
jmp
cwtl
stos
mov
cmp
adc
mov
mov
push
loope
cmp
jl
push
repz
mov
push
adc
rcll
popa
hlt
ja
sub
jno
dec
enter
pop
out
mov
popa
call
xchg
xor
inc
lret
lcall
pusha
mov
rclb
fsubl
sbb
iret
lahf
jg
std
xor
call
mov
imul
cld
jecxz
call
add
sti
mov
push
dec
in
push
lds
call
shr
ss
jbe
out
or
fimull
nop
mov
add
lds
mov
sahf
or
mov
pop
add
stos
add
sbb
inc
dec
scas
cmp
mov
mov
inc
mov
jmp
and
ss
pop
adc
push
fs
push
das
push
cltd
add
xchg
sbb
jp
in
fs
jnp
popf
pop
add
or
dec
push
add
js
pushf
dec
pushf
in
mov
or
out
xor
push
mov
aaa
jecxz
mov
cmp
hlt
fdivrl
stos
insb
loopne
push
push
fdiv
iret
push
jae
jnp
mov
hlt
divb
or
fstps
inc
add
mov
mov
cmp
pop
mov
call
add
pop
add
jmp
bound
outsl
testb
jne
or
adc
lcall
jae
adc
jne
push
or
cli
push
mov
jns
jge
cmp
jbe
icebp
fbstp
and
nop
pop
add
test
shr
jno
js
jae
pop
dec
gs
jp
push
mov
xchg
jge
dec
or
bnd
cmp
int3
rcrl
push
cmp
in
aad
cli
int
mov
lds
shr
loop
inc
cld
adc
sti
dec
push
arpl
mov
cmpsl
lds
pop
xchg
pop
lcall
lret
clc
push
cli
and
jecxz
outsl
outsl
push
data16
fldenv
xor
xor
push
push
lret
sub
out
lock
and
imul
pop
imul
negl
addr16
push
push
sbb
mov
lock
inc
sti
popf
aaa
sbb
test
pop
xor
ja
jne
test
push
sbb
in
add
sub
xchg
push
and
and
mov
or
mov
bound
cmp
stc
or
cmp
add
and
add
cmp
dec
sub
cmp
sbb
scas
sub
stos
jnp
xchg
push
or
or
test
cltd
js
push
sub
cmp
sub
xchg
ficompl
sub
lds
sbb
xor
into
pop
adc
dec
fisubs
das
sbb
cmp
cmp
roll
jb
xchg
pusha
cmp
ljmp
pusha
sbb
rorl
sbb
imul
jecxz
mov
adc
call
mov
in
popa
xor
add
xor
popa
je
lea
inc
arpl
sbb
sub
call
aaa
addb
leave
pop
je
in
aas
pop
sbb
mov
mov
pop
lds
subl
pop
pop
ss
insl
pop
xrelease
push
push
rcr
sub
test
jne
lcall
dec
mov
pop
pop
or
test
jne
or
add
mov
call
push
nop
xor
xchg
movsb
cld
and
add
pop
jo
mov
ds
dec
cmp
push
mov
add
adc
sub
mov
ret
icebp
mov
shlb
sbb
add
rcrb
xchg
push
mov
popa
xor
shrl
xchg
add
in
adc
jmp
push
cmp
cmp
and
lock
xlat
leave
dec
sbb
movsb
jb
dec
lcall
or
cli
xor
fs
sub
mov
xorb
sub
lods
mov
sub
push
inc
stos
push
cli
movsb
cli
xor
je
aaa
or
mov
jge
in
fwait
es
cli
add
frstor
repnz
inc
jno
mov
sbb
cmp
cmp
xor
rcrl
sbb
xchg
andl
dec
inc
inc
ret
mov
sub
mov
jmp
cmp
jg
or
adc
xchg
sarl
xchg
jp
push
sub
jmp
int3
xlat
clc
jge
enter
loopne
or
add
mov
rclb
aam
jb
leave
and
xor
xor
mov
adc
in
sub
push
fcmovnu
rcll
lds
mov
cmp
xlat
lret
dec
push
sub
fcmovnbe
ljmp
pop
xchg
imulb
inc
xor
jp
or
add
xor
xchg
push
dec
xor
ret
cs
in
xor
cmp
add
repz
fidivs
pop
or
les
adc
loope
sbb
or
sub
mov
xor
add
push
insb
lods
scas
push
aaa
lods
jp
sbb
sub
pop
push
or
or
jmp
pushf
ret
mov
jne
negl
add
lahf
dec
in
xor
cld
shll
mov
mov
dec
mov
inc
mov
les
jns
cmp
mov
sbb
mov
out
push
pusha
idiv
sbbb
dec
mov
aad
nop
sbb
push
call
inc
xchg
cmp
pop
ret
mov
inc
cmp
arpl
jl
out
xor
in
divb
rorl
sbb
arpl
ret
push
pcmpgtb
lods
xchg
xrelease
push
push
in
mov
aaa
cmpsl
mov
dec
icebp
call
mov
inc
jne
sub
cmp
dec
lea
fs
hlt
and
out
loope
popl
mov
dec
push
clc
cmp
xor
pop
add
xchg
sbb
lock
jecxz
and
pop
push
push
push
cmp
xor
movw
shrl
lcallw
imul
jg
sbb
jnp
mov
addb
lea
mov
and
daa
testb
mov
ret
adc
and
stc
imul
shl
aas
pop
jl
mov
xor
push
call
jp
fdivrl
or
jno
or
lds
es
or
ret
push
mov
push
in
inc
nop
insb
data16
and
jmp
lret
push
adc
xchg
sub
pop
ja
sbb
xchg
dec
push
mov
inc
ja
pop
lret
int
jne
push
mov
ss
or
cmp
xor
or
jmp
pop
xchg
ja
clc
and
pop
inc
sub
bound
xchg
mov
inc
arpl
stos
or
sahf
push
movsl
and
inc
lods
in
inc
sbb
jg
aaa
pop
dec
mov
push
das
sbb
out
xor
lea
fsubl
test
pop
jmp
fildll
testb
mov
cmpsl
mov
push
push
mov
push
fmull
add
dec
pop
mov
movsl
les
bnd
push
and
pop
push
adc
lea
loopne
or
and
or
inc
xchg
sti
lock
xor
mov
or
lock
or
test
bound
in
ja
popf
sbb
jb
cmc
push
fisubs
rcl
lahf
cli
aam
jecxz
xchg
jmp
aad
pop
mov
push
mov
push
das
xchg
stos
inc
out
push
pop
xor
mov
popl
lds
loopne
push
ss
jecxz
mov
insl
xor
dec
xchg
and
out
mov
sbb
adc
ss
enter
cmp
aam
imul
movsl
xor
push
mov
jecxz
mov
and
mov
out
dec
push
mov
mov
in
imul
pop
cmp
testl
push
mov
sub
stc
loop
sar
xchg
pop
add
lods
stc
mov
cmp
out
xor
dec
sub
mov
add
fmul
push
mov
jge
shl
xor
icebp
mov
xor
pop
das
cld
xor
std
loopne
rclb
mov
and
pop
sbb
add
xchg
stc
jg
pop
push
loope
out
imul
adc
cmc
pop
xchg
popa
inc
inc
or
mov
push
cmpsb
push
lds
adc
cmpsl
push
loopne
sbb
fstps
push
and
lea
sub
sub
cltd
mov
mov
in
imull
and
enter
mov
aad
in
mov
add
aad
cmp
push
or
cmp
sub
inc
mov
mov
push
pusha
mov
xchg
pop
inc
dec
fdivrs
cmp
and
push
int
lea
sub
push
sbb
inc
bound
fistl
dec
add
clc
pop
push
sbb
out
into
imul
sub
sbb
pop
insb
add
xor
pop
cltd
sub
inc
in
xchg
mov
inc
jnp
adc
dec
and
hlt
pop
mov
add
fwait
sub
loope
aas
cmp
push
outsl
bound
out
test
cli
daa
mov
arpl
or
inc
outsb
fimuls
add
pop
jo
test
out
aam
jmp
fildll
test
sbb
pop
out
and
add
cmp
mov
mov
rep
pop
add
mov
mov
mov
ret
mov
add
mov
cmp
aam
enter
mov
mov
pusha
popa
mov
push
je
or
nop
adc
test
imul
jns
or
negb
daa
push
hlt
gs
aas
xor
cltd
jge
gs
xlat
lds
test
dec
ds
sub
gs
pop
sbb
dec
and
cltd
ss
add
inc
repnz
mov
and
clc
pop
gs
push
lods
les
or
mov
in
mov
aaa
push
cli
add
into
leave
loope
shl
push
push
aas
shlb
inc
or
mov
leave
repnz
or
ret
jae
test
std
pop
inc
popa
and
hlt
push
xor
inc
dec
xlat
popa
lea
shrl
xlat
adc
aad
sbb
xchg
xchg
ljmp
inc
or
jmp
lds
or
das
add
xor
jo
pusha
push
iret
or
pop
jg
adc
icebp
cmpsl
and
js
mov
out
jb
add
or
clc
jns
sub
xchg
push
push
cmp
jle
mov
xchg
lds
cmp
test
pop
addl
push
xor
push
pusha
das
out
cmp
mov
jp
push
ja
adc
rorl
daa
mul
mov
jecxz
push
ret
pop
push
pop
cmp
jae
inc
mov
jmp
ret
xchg
int3
or
popa
rcll
ret
jmp
icebp
and
je
mov
pop
jnp
cli
pop
cmp
cli
insb
or
popa
cmp
inc
jge
hlt
out
call
inc
out
ja
jp
je
repnz
pusha
inc
pop
popf
push
into
stos
jg
xchg
pop
fcomps
inc
stc
and
cmp
aad
mov
jmp
rcrl
test
clc
cmp
arpl
outsl
loope
cmpb
cmp
aad
popa
pushf
ret
adc
shl
aas
mov
out
push
es
rorl
jae
aad
push
sbbb
popa
std
lea
jp
add
adc
shrl
adc
add
mov
cltd
cmp
into
fldt
cmp
add
sub
aaa
cmp
popa
insl
cmpsl
dec
mov
or
push
push
lret
pop
les
aaa
inc
xor
push
xlat
mov
xor
jecxz
repz
cmpb
in
fidivrl
mov
mov
negl
add
inc
xorl
imul
cmp
and
mov
cmp
mov
ficoms
sarl
mov
jl
and
js
cld
std
popf
sahf
clc
lcall
mov
popa
xchg
sarl
rorl
inc
mov
call
xchg
sub
push
mov
add
mov
inc
and
adc
and
jle
in
leave
nop
inc
adc
call
xchg
mov
and
sub
sub
xorb
add
outsb
lahf
pop
mov
mov
mov
addr16
mov
enter
popa
cmp
push
add
inc
fnstenv
aam
mov
cmp
ljmp
or
imul
cmp
pop
xchg
xor
cmp
mov
out
arpl
sub
int3
xlat
aaa
fs
fistpl
lahf
test
pop
imul
repnz
inc
repnz
popl
mov
or
push
or
pop
cltd
testl
mov
test
pop
xchg
sahf
cli
std
pop
scas
cmpsl
stc
popa
shr
insl
dec
aam
pmaxsw
loop
mov
add
push
adc
fldl
pop
jb
xchg
cmp
es
mov
clc
aaa
push
push
loope
jnp
loope
subb
xor
mov
add
loope
ljmpw
int
popa
in
mov
leave
test
mov
loope
add
jbe
in
push
cltd
push
mov
out
mov
sub
mov
sub
mov
outsb
add
rcrb
sarl
or
adc
fcoms
pop
loop
jl
mov
out
jno
xor
xchg
stc
stc
movsl
std
jns
xor
jb
ffreep
sti
or
push
das
adc
push
mov
shlb
addr16
ss
mov
pop
adc
int
add
pop
push
xor
mov
fiaddl
pop
notb
idivl
xor
insl
mov
jo
jbe
pop
mov
add
std
fildl
mov
adc
and
pushf
test
cmp
mov
fcomp
sub
enter
lret
push
push
repnz
and
add
push
inc
push
jle
pop
mov
movsb
dec
fldl
add
sti
shrb
jne
inc
in
mov
sub
fisubl
lock
loop
sub
or
fndisi(8087
push
shlb
cmpb
push
add
in
idivl
mov
mov
fdivrs
mull
jle
data16
push
mov
sub
leave
dec
loop
sti
nop
test
cmp
fnstcw
dec
mov
sub
repz
clc
std
cmpsb
mov
jge
push
cmp
sti
repnz
jo
in
out
inc
shrb
push
xor
mov
inc
test
insl
fdivrs
clc
daa
aas
mov
adc
mov
arpl
sub
xor
lods
mov
dec
out
mov
fpatan
xorb
xchg
cmp
fnsave
pop
lea
hlt
push
add
push
adc
push
and
inc
xchg
sub
mov
push
pop
jno
push
in
in
insl
aas
xor
jbe
addr16
sub
xchg
and
into
sti
ljmp
leave
fdivrl
lahf
out
ret
sti
sub
xchg
push
add
push
call
mov
loop
or
dec
fnstsw
imul
inc
lea
xor
rcll
int
xlat
aam
lea
daa
push
stos
jne
sub
pusha
sub
cmpsl
and
mov
inc
adc
add
aam
mov
cmc
cli
lods
push
xor
or
or
lock
and
push
sub
jno
jae
arpl
loop
jno
cmp
jbe
fcompl
in
and
rcrb
loope
nop
push
and
or
adc
call
into
jnp
outsb
pop
or
sub
mov
push
call
subl
lds
out
mov
xchg
inc
lcall
push
inc
lock
fs
add
mull
cmp
mov
mov
scas
popa
mov
xor
test
popa
pushf
mov
jno
out
inc
out
mov
std
sub
add
push
roll
xor
jl
les
loop
cmp
jl
push
xor
call
dec
mov
add
mov
jb
push
pop
repnz
mov
jne
cmp
mov
in
bound
out
sbb
pop
pop
xor
inc
jl
pop
sahf
push
out
popf
arpl
repnz
ffreep
loope
mov
imulb
loop
leave
ss
divb
push
out
mov
mov
aaa
mov
pushf
xchg
icebp
cmc
xchg
popa
push
push
pusha
sub
cmp
jbe
imul
fucom
mov
push
push
sub
sub
sub
mov
stos
lcall
push
push
out
movsb
imul
inc
cmp
pusha
push
inc
pop
rcr
mov
push
enter
mov
dec
push
aaa
mov
out
or
xor
and
dec
push
mov
sbb
pop
add
cmp
adc
sub
stc
and
aam
outsl
add
fpatan
lcall
icebp
pushf
add
mov
inc
sbb
cmp
mov
xor
push
mov
pusha
out
test
fadd
mov
pop
adc
popa
xor
fisubs
test
or
lret
pop
call
loope
mov
call
mov
dec
into
call
mov
mov
pop
test
mov
insl
jge
lods
push
adc
mov
xchg
mov
out
mov
pusha
fucomip
nopl
push
mov
mov
mov
dec
popa
fdivs
push
lcall
outsl
outsb
les
and
mov
mov
sub
push
add
sub
shll
aaa
data16
and
push
xor
nop
xor
inc
mov
aad
jo
mov
add
lea
int3
push
ret
pop
lret
and
jle
mov
and
shr
out
repnz
out
push
inc
test
inc
cmpl
inc
cmp
outsl
mov
push
xchg
or
loopne
int3
xchg
xchg
mov
inc
mov
fcoms
mov
and
ficomps
cli
mov
fucomp
rcrb
push
sub
pop
and
es
fstl
push
repnz
cld
movl
mull
fcomps
dec
cmp
adc
sub
cmp
fisubl
cltd
and
les
fs
mov
push
or
adc
push
aaa
cli
out
jb
dec
and
ret
jl
or
imul
mov
rcl
or
mov
jmp
push
push
push
or
lahf
adc
add
cli
out
xchg
fs
mov
sarb
aam
dec
arpl
pop
cs
push
fld
add
dec
fdivrs
push
pop
shrl
adc
and
jp
inc
cld
idivb
lea
aas
cmp
mov
jae
adc
inc
cld
fmuls
jnp
cmp
xchg
jne
not
adc
pop
xchg
or
add
and
cltd
nop
pop
icebp
mov
std
jno
jo
stos
sub
sbb
mov
xor
and
in
lret
mov
fdivrp
jl
xchg
and
stos
mov
xor
and
mov
lea
cmp
out
out
out
add
jmp
pushf
lahf
or
dec
rcrl
incl
aam
mov
mov
cmp
fsubr
scas
lods
mov
lcall
lret
in
sarb
movsb
dec
add
dec
popa
outsb
xorb
add
into
pop
xchg
cmp
cmp
xor
mov
and
add
add
jle
jno
aam
jecxz
lret
loope
dec
pop
mov
or
mov
popf
pop
or
pop
sbb
das
mov
adc
mov
sub
mov
lods
xchg
xchg
pop
jge
ja
push
ljmp
aad
aaa
jge
sub
add
xor
sti
dec
mov
outsb
nop
les
pop
add
push
enter
les
mov
sbb
mov
movsl
jo
std
pop
adc
inc
pop
jmp
fmul
inc
cmp
fdivrl
loopne
or
adc
out
push
pop
fcoml
in
gs
xchg
or
jecxz
cmp
cmp
or
push
movsb
sbb
sti
stos
dec
xchg
push
or
pusha
mov
cli
lock
sbb
pop
sub
add
std
pop
or
call
or
imulb
js
cmp
orl
xchg
or
mov
loope
cs
mov
fldl
jne
lret
fiaddl
fsubrs
add
xor
push
dec
pushf
dec
dec
outsl
out
inc
adcb
or
push
mov
xchg
out
cmp
push
xor
cli
clc
out
mov
loope
cltd
lahf
mov
fiadds
sbbb
out
adc
mov
outsb
dec
outsb
jno
incb
btc
ja
pop
and
scas
int3
jmp
pop
sub
stos
push
enter
jle
fs
pop
pushf
sbb
sarb
pusha
ljmp
push
out
bound
push
insl
movsb
and
mov
mov
fistl
add
mov
dec
lock
in
sub
out
addl
add
in
dec
out
mov
or
fdiv
xor
rclb
sub
lods
frstor
sahf
dec
divl
out
sbb
outsl
test
incb
pop
mov
lods
sub
xchg
les
mov
add
and
adc
push
popa
or
sub
dec
mov
jne
cmp
pop
ud2
push
clc
je
add
into
xchg
imul
lock
jns
call
inc
enter
adc
push
mov
nop
sbb
rol
lcall
pop
add
jne
out
outsb
not
call
pop
addl
mov
out
pop
aam
cmpsb
adc
hlt
push
fisttpll
adc
xchg
loopne
stos
adc
nop
test
cmp
int3
jmp
jnp
dec
test
or
out
pop
insb
xor
inc
adc
lcall
or
or
mov
jnp
es
fsts
fld
dec
in
sub
enter
adc
push
mov
jns,pt
pop
jne
pop
stos
dec
jns
fdivs
cwtl
push
pushf
xor
mov
loopne
xchg
repnz
dec
hlt
lea
sub
mov
jae
roll
popa
in
sub
pusha
cmp
push
and
sub
fidivrl
mov
addr16
and
sbb
pop
adc
fisubs
push
sbb
ja
or
jb
mov
cmpsb
mov
mov
mov
lea
sub
imul
idiv
adc
add
add
ficomps
das
iret
mov
shr
loopne
test
push
mov
cmp
sar
out
icebp
push
push
cli
ret
dec
xor
mov
std
out
cmp
subb
inc
push
push
push
xchg
les
cmp
pop
je
pop
sbb
gs
sahf
in
mull
ljmp
es
rorl
fistpl
shr
jp
xchg
js
mov
sub
inc
out
push
add
loop
imul
add
add
add
add
add
add
add
add
add
add
jno
add
add
add
add
add
jo
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
add
add
add
add
jb
add
add
bound
add
add
popa
add
add
add
dec
add
add
add
add
add
push
je
add
pop
add
add
add
add
add
add
add
add
add
je
add
add
add
imul
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
arpl
add
add
add
cmp
add
add
jp
push
add
add
jp
data16
add
add
add
jp
add
add
pop
add
dec
add
add
add
add
add
add
aaa
add
add
pop
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
dec
add
fs
add
add
add
popa
imul
add
add
add
add
inc
add
inc
add
add
inc
add
inc
jb
imul
inc
add
inc
xor
add
insb
add
add
add
add
ja
xor
add
dec
push
cmp
add
add
add
je
aad
and
and
dec
decb
sbb
jae
xor
lock
cmp
pop
leave
push
mov
cli
roll
data16
repnz
or
cmp
jne
and
nop
sub
inc
pushf
lock
push
sub
fistl
loopne
hlt
or
mov
iret
xchg
adc
push
pop
clc
imul
pop
jecxz
fnsave
inc
pop
lret
pop
cmpsl
lds
ret
jo
int
outsb
lea
out
adc
test
lret
enter
pop
mov
enter
or
pop
enter
and
pusha
dec
fsubr
xchg
push
fcoms
dec
jne
pop
push
ret
fisubrl
pop
inc
aad
icebp
lods
add
and
push
and
gs
shl
jne
sub
fstp
xor
xchg
dec
sbb
xor
mov
divl
jo
and
ret
stc
or
adc
cmovno
mov
adc
outsl
adc
push
outsl
add
sbb
inc
aaa
sub
push
adc
or
mov
or
popf
cmp
std
lods
std
xor
js
add
add
inc
pop
lret
sarl
adc
hlt
shrb
popa
xchg
push
in
aad
in
gs
pop
lcall
shlb
loope
push
jmp
xchg
rolb
dec
jg
or
inc
test
loope
mov
xor
jmp
cltd
push
or
add
fildll
cmp
adc
sub
decb
popa
dec
jne
inc
popa
xlat
jmp
jae
xor
inc
aad
xor
xor
jo
inc
or
push
sub
cmp
mov
pop
cli
pop
sbb
jnp
stos
fs
sub
ret
push
jae
rorl
cmp
arpl
jge
insb
es
popa
mov
add
dec
cli
lods
push
nop
or
testl
inc
mov
test
scas
jb
push
pop
push
sbb
aam
push
pop
dec
dec
ret
add
lock
mov
pop
dec
jl
add
gs
or
daa
cmp
cli
je
add
in
and
push
flds
xchg
aaa
or
idivl
add
fistpl
mov
mov
push
sub
push
dec
inc
sub
pop
adc
sbb
dec
fisttpl
jle
xchg
enter
and
sbb
addr16
sti
aam
adc
pop
leave
shrl
inc
jbe
sbb
fidivrl
outsl
push
add
clc
jne
fisubs
inc
mov
stc
sahf
xlat
cmp
bound
popa
test
lret
sbb
xor
inc
mov
stos
push
stos
inc
and
mov
dec
and
dec
inc
rorb
scas
pop
fsubl
fnstcw
es
pop
dec
or
push
call
pusha
or
push
or
inc
js
pop
push
inc
aaa
mov
xchg
cmp
test
je
push
stos
lret
bound
loope
insl
ss
jg
xchg
arpl
mov
jne
fistps
je
sub
push
and
adc
inc
push
test
pop
push
or
fsubrl
push
pop
push
call
out
jecxz
inc
std
push
mov
imul
jp
push
fmull
in
or
cltd
jb
outsb
inc
outsb
or
divl
jl
pop
sbb
sbb
jl,pn
dec
inc
or
nop
xchg
mov
pop
push
int3
xor
push
or
sub
push
scas
and
pop
mov
push
push
imul
mov
and
jno
mov
loope
jns
rcrl
jmp
fdivrs
push
or
adc
inc
and
sbb
jmp
jb
xor
daa
dec
ja
jnp
arpl
repnz
adc
jmp
push
test
jnp
mov
pushf
imul
inc
cmp
jne
cli
mov
fnstenv
adc
mov
jp
movsl
cmp
cmp
pop
inc
outsl
into
push
stc
icebp
lods
adc
negl
inc
push
pop
or
test
test
pop
cmp
sarl
add
sarb
jne
inc
dec
adc
cmpsl
mov
fcmovnb
adc
push
add
hlt
sti
jge
inc
pop
push
or
pop
pop
push
add
fwait
add
xor
roll
bound
xchg
lds
xchg
hlt
pop
sbb
or
hlt
mov
rcrl
call
sub
jle
lret
dec
js
inc
pop
or
inc
in
outsl
xor
mov
xor
mov
xor
mov
addl
je
inc
into
cmp
lea
in
xor
xor
lret
xor
push
movl
sarl
enter
pop
jb
sub
sar
cmpsb
ljmp
je
push
mov
pop
sbb
dec
mov
fwait
mov
cmp
je
cmpsl
test
scas
push
and
pop
inc
out
cmp
xor
cli
sarb
loop
hlt
sbb
pop
push
or
out
cmp
push
clc
sub
inc
jmp
jne
jmp
cs
ret
xorb
xorb
ja
sub
mov
pop
imul
ds
mov
pop
and
sub
sbb
inc
or
pop
adc
rol
ret
pop
jp
adc
in
loop
cmp
xchg
sbb
sarl
dec
ret
fcoml
rcr
aaa
or
lahf
add
js
pop
ret
inc
inc
adc
jle
cmc
gs
pusha
lds
mov
sbb
sbb
lsl
or
push
xlat
decl
lahf
sub
std
add
jecxz
or
cld
inc
int3
push
adc
sbb
mov
sbb
mov
lea
pop
faddl
sub
or
std
pop
push
ja
add
stc
cmc
inc
lods
inc
and
ja
mov
mov
mov
jge
and
lods
lock
add
jp
dec
jne
and
pop
loopne
pushf
inc
dec
mov
int
inc
add
stos
aaa
lea
scas
nop
test
sbb
cwtl
push
mov
movb
enter
mov
sub
rcrl
or
or
jb
int
jmp
pop
jle
out
or
popf
ficompl
mov
dec
xchg
mov
je
frstor
in
mov
icebp
cli
imul
mov
sbb
adc
mov
mov
jle
sbb
dec
pop
xlat
js
negb
sbb
xchg
daa
aam
movsl
out
das
outsl
mov
mov
jns
repnz
adc
out
adcl
out
adc
repnz
lods
loopne
jne
ficompl
pop
dec
dec
mov
pop
test
rcrb
push
xchg
adc
sub
loope
outsl
enter
into
mov
lret
rcll
lea
dec
inc
mov
lds
or
fists
dec
push
in
ret
push
push
out
push
or
add
lods
js
add
push
pop
dec
stos
cmp
add
push
jle
mov
sbb
pusha
test
mov
repnz
call
out
bound
jnp
jnp
adc
xchg
xchg
icebp
test
cmp
stc
xchg
jnp
mov
xor
xor
mov
negb
arpl
inc
mov
or
or
and
imul
aas
or
xor
cmp
cmp
sar
out
lret
fwait
cmpsb
div
stc
inc
pop
ret
add
push
xor
ret
jmp
mov
stc
xor
add
test
cmp
and
cmpsb
cmp
mov
jmp
add
sbbb
cmp
cmp
and
jnp
pop
stos
fidivl
or
mov
push
pop
inc
mulb
xchg
jmp
mov
sbb
add
imul
rclb
cmpsb
mov
test
pop
hlt
jl
data16
push
in
jnp
xor
jmp
adc
lcall
mov
push
inc
adc
push
mov
std
xchg
pop
jmp
mov
out
lea
cmp
js
xchg
xlat
pushf
fwait
sub
cmp
or
push
pop
add
jae
sbb
mov
ret
mov
stos
gs
mov
adc
push
dec
dec
pop
js
sub
push
dec
xchg
push
arpl
fildll
push
in
sbb
xor
ja
sub
into
push
daa
js
or
sbb
cmp
subb
out
sub
jp
pop
push
outsb
add
jp
dec
push
cmpsb
imul
mov
ja
js
cmp
shr
jno
andb
shrl
shlb
gs
dec
popa
push
nop
or
roll
lea
cltd
push
int3
jp
orb
push
or
loop
loopne
or
jecxz
js
push
and
sti
lods
test
pop
sub
sahf
sub
and
or
outsb
xchg
in
int
ljmp
sbb
lea
mov
fistpll
xlat
xor
mov
and
dec
fidivs
or
rol
bound
fs
fisttps
jg
inc
loop
dec
fbld
sbb
js
sbb
iret
and
mov
es
mov
sti
mov
jbe
mov
jae
xor
push
pop
jmp
aaa
orb
daa
inc
andb
shrb
bound
jg
mov
stos
jno
push
push
call
scas
nop
and
push
pop
js
add
jo
xchg
xchg
push
bound
ds
jl
or
jecxz
loopne
sti
fbld
mov
loope
push
jo
stc
aaa
push
scas
clc
nop
cmpb
or
and
sti
inc
xchg
out
cmp
add
push
inc
aaa
je
jge
sub
push
test
xlat
repz
shll
dec
test
pop
popf
add
xchg
sti
jle
negb
cmp
inc
and
outsb
add
inc
push
jnp
std
sub
mov
inc
mov
and
pop
xchg
push
in
push
add
push
dec
fidivs
and
pusha
rolb
sbb
aaa
call
data16
out
jnp
jecxz
add
loope
rclb
xor
push
cmpb
pop
adc
jle
xlat
shlb
mov
movsb
std
shlb
leave
mov
es
dec
cmpsl
xor
aas
mov
adc
das
add
addl
pop
js
sti
pop
lods
sti
add
shlb
add
push
pop
adc
mov
lea
leave
adc
cwtl
mov
push
push
call
fdivrl
pushf
adcb
jo
inc
sub
sbb
or
sub
subl
out
mov
lods
dec
mov
idivl
add
adc
fldt
insb
push
push
jl
mov
sub
pop
xor
pop
fildll
lds
js
pop
xor
mov
adc
out
fisubs
arpl
and
inc
scas
lods
xlat
test
cwtl
stos
sub
repnz
or
mov
cmp
xchg
jecxz
in
xchg
bound
sub
sub
loope
push
inc
nop
les
sti
loopne
out
dec
cmpb
movsb
dec
out
test
aas
jne
dec
push
push
rorb
or
int
and
imul
ret
push
ficompl
lret
jnp
loopne
or
or
mov
sub
xor
stc
nop
push
mov
sub
testl
arpl
push
dec
push
adc
out
sub
jl
pop
int3
jmp
pop
sub
jne
lods
cli
push
adc
jmp
and
shll
push
and
in
int
or
mov
jecxz
push
inc
das
mov
pop
ret
das
adc
pop
cmp
pop
dec
or
mov
push
aam
sub
mov
les
ret
sbb
mov
mov
cmp
int
add
gs
xorb
xchg
sahf
in
pop
dec
bound
fwait
sub
xor
roll
dec
jmp
and
data16
lea
or
jl
cmp
sbb
gs
cwtl
inc
arpl
lret
mov
dec
fisttpl
repz
clc
bound
mov
mov
mov
pusha
adc
or
out
add
ljmp
inc
jne
gs
mov
pop
sti
mov
int
std
add
xorl
lods
dec
ficoml
cmp
in
jo
out
fcos
mov
cmovo
push
add
cmpsb
pusha
push
test
ret
test
outsb
les
or
out
jle
pop
jl
adc
mov
mov
out
sub
inc
pop
and
add
push
xchg
jns
cli
fs
ja
or
jp
or
or
ja
movsl
arpl
bound
dec
gs
or
pop
jmp
rorb
bound
ljmp
xchg
scas
xor
mov
mull
inc
lock
add
cmp
xchg
daa
fcmovnbe
push
mov
arpl
mov
ljmp
jb
stc
xor
pop
or
and
sub
cmp
push
aaa
ret
inc
push
fsubs
ja
lcall
nop
scas
jge
xor
lds
jmp
out
mov
test
daa
sub
out
or
pop
pop
mov
push
jbe
push
xlat
xor
dec
sbb
stc
push
jmp
cld
ret
pop
ds
je
fwait
jl
cmp
js
xor
sbb
in
push
push
push
call
daa
loopne
xchg
mov
rcr
lahf
xor
ss
and
push
int
int
add
out
mov
ret
mov
das
out
pop
mov
mov
test
xor
ljmp
mov
aam
into
xor
pop
push
xor
push
dec
stos
iret
loopne
nop
pop
sbb
pop
adc
pop
cmp
add
bound
js
je
pop
adc
stos
aad
decb
adc
out
jmp
leave
pop
movsl
dec
xor
mov
mov
into
addr16
xor
je
movsbl
mov
xchg
nop
or
ja
dec
bound
arpl
jl
in
xchg
int3
mov
adc
arpl
daa
or
sub
push
js
lea
cmpsb
arpl
shr
or
sub
inc
pusha
outsb
je
rcll
adc
cli
aaa
inc
lcall
push
and
cli
popf
or
in
fisttps
jne
xchg
xchg
push
jmp
pop
in
mov
nop
add
and
mov
pop
ljmp
mov
popa
add
ljmp
and
loopne
jne
jne
adc
aam
sbb
stos
inc
mov
ja
or
sahf
mov
fs
sub
stc
inc
clc
incl
sub
lea
rcrl
test
int
aad
lcall
fisttpll
adc
xor
clc
jne
mov
dec
loop
sti
mov
dec
lea
sbb
jle
push
adc
adc
xchg
add
add
imul
add
add
add
xor
dec
dec
add
xor
add
inc
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
dec
add
xor
add
pop
dec
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
add
add
js
add
add
xor
add
popa
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
outsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
jns
add
add
add
dec
add
add
add
imul
add
add
add
inc
imul
add
add
add
add
add
add
outsb
inc
outsb
add
add
add
push
add
jb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
data16
add
jae
add
add
add
add
add
push
add
push
dec
add
push
add
add
jp
add
add
add
inc
add
add
add
xor
jbe
add
add
add
add
add
add
xor
inc
add
push
add
inc
add
add
add
add
add
imul
add
add
add
add
add
inc
add
add
add
add
add
add
bound
jno
add
add
add
add
jp
jmp
in
xor
inc
push
mov
pop
sub
loop
cmpsb
push
fcomps
push
repz
mov
dec
aam
test
mov
adc
pop
mov
aaa
lods
or
insb
lods
hlt
scas
xor
lods
fsubrs
mulb
mov
aas
in
aaa
lods
pop
mov
iret
std
push
xchg
aas
add
mov
sti
movzwl
outsb
roll
aaa
mov
xor
sub
filds
mov
mov
div
sbb
test
mov
hlt
dec
mov
adc
sub
lods
pusha
xchg
or
movsl
add
sub
add
ret
xor
or
mov
mov
fcompl
cli
and
shll
inc
dec
push
cmp
xchg
pop
pop
jne
fiadds
xor
jo
mov
xor
popa
loope
fbstp
pushf
dec
xor
into
addr16
add
aam
lods
dec
mov
js
sub
mov
push
adc
push
callw
sahf
sub
xchg
popa
in
push
js
or
js,pt
inc
add
arpl
mov
out
or
divl
ret
daa
pushf
sbb
xor
mov
and
cs
fisubl
jae
lea
lds
sbb
les
cmp
cmc
lock
call
rcrl
shrl
test
shr
scas
cwtl
arpl
sti
push
bound
js
jne
cs
sub
daa
mov
pop
add
int
lock
sarl
divl
sbb
fstpl
sub
lahf
cs
mov
push
jo
ret
fiadds
sub
adc
push
xor
inc
pop
mov
push
and
arpl
cmp
addr16
in
sub
push
jl
bound
test
test
insb
sti
pusha
movsb
loop
aam
das
xor
xor
movsl
fsts
mov
jge
movsl
pusha
testb
and
out
push
add
xor
repnz
jno
jle
rcr
fwait
stc
scas
mov
adc
dec
add
popa
addr16
fdivr
adc
add
and
movsb
das
sub
rdtsc
or
cmpsl
ja
movsw
outsl
test
ljmp
lods
test
mov
adc
push
push
push
xchg
aad
and
lods
jge
lods
cld
pop
xor
inc
and
lods
or
pop
sti
or
fdivr
push
pop
pushf
mov
into
test
fsubl
inc
stos
rcrl
xchg
push
rcl
sbb
xor
dec
mov
icebp
cmpsb
adc
pop
and
push
out
je
dec
jne
lock
fnstcw
pusha
pop
test
and
or
push
lods
sub
lods
int3
divb
int3
jnp
shrl
out
dec
push
js
fldpi
insl
lea
popf
jl
sub
roll
nop
cmp
add
testb
jp
jns
popa
icebp
add
mov
sub
adc
call
icebp
push
je
sti
in
repz
jecxz
js
push
pop
sub
cli
gs
push
sbb
and
dec
push
mov
pop
sbb
gs
inc
inc
cmpsb
js
xchg
repnz
mov
adc
or
push
call
xchg
dec
push
xchg
insb
and
cli
xor
xor
mov
mov
insb
add
sub
sub
push
bnd
subb
testl
xor
inc
mov
nop
movsb
mov
sti
js
cmpl
mov
lock
fbstp
loop
pop
std
dec
ret
cli
and
adc
pushf
jg
xor
dec
push
dec
arpl
dec
pop
xor
dec
dec
xor
dec
inc
xor
add
xlat
push
daa
add
sbb
mov
loopne
jb
add
jne
aas
imul
xchg
push
inc
jp
pop
xlat
mov
cmpsl
xchg
push
int3
xchg
icebp
aaa
pop
popf
aad
sti
lret
inc
iret
call
xchg
fdivrs
xor
xor
and
shlb
jl
cmp
jne
push
add
mov
mov
push
jle
jg
mov
push
in
pop
popa
sbbb
pop
jae
cmp
loope
out
or
loope
mull
popf
rclb
cli
sbb
and
jge
push
xor
sub
aaa
out
cwtl
shll
shll
cmp
pop
add
sbb
jae
xchg
dec
repz
jmp
pop
cld
scas
fldpi
cmp
popa
mov
xor
fldt
in
xchg
pop
jne
ljmp
jo
xchg
arpl
xchg
inc
xorl
lea
push
push
jno
cltd
mov
call
xchg
mov
mov
push
mov
add
and
xlat
jmp
or
out
dec
fistpl
pop
pop
mov
jmp
imul
stos
jns
into
popa
add
push
jmp
mov
push
inc
jae
pop
mov
adc
fbld
int3
sub
hlt
xor
mov
adc
xchg
add
push
jno
je
xor
sahf
add
lea
ljmp
pop
gs
push
pop
cltd
and
pop
inc
roll
xchg
lea
shll
jne
dec
adc
mov
and
out
cli
inc
fsubs
or
mov
lret
jne
sbb
mov
js
aad
push
cld
sbb
fldlg2
aam
lds
inc
xor
and
pop
mov
cmp
and
sub
pushl
add
outsl
fnstcw
fldcw
mov
pop
and
sbb
pop
cmp
adc
adc
dec
sub
mov
je
mov
jnp
cmp
mov
gs
mov
notl
cmp
sbb
xlat
adc
inc
cmp
pop
cmp
jns
push
push
aad
fimull
pop
xlat
test
shrl
push
in
cmp
loop
inc
sub
or
fsubrs
stos
jb
stos
dec
mov
or
pop
pop
sbb
sti
fidivrs
sbb
pusha
cmp
sbb
push
xchg
aam
es
test
stos
xor
or
and
iret
lock
adc
js
sbb
push
shrl
or
fsqrt
std
push
mov
repnz
push
push
enter
mov
sahf
add
cwtl
movsb
xchg
pop
jecxz
cmp
or
and
sbb
inc
push
and
loope
pop
sub
cwtl
out
xor
mov
mov
leave
call
shll
movsb
sub
scas
cmp
xor
dec
add
cmc
outsl
cmp
in
adc
daa
mov
orl
lea
mov
repz
rep
mov
loope
or
cli
pop
repz
je
in
pop
pop
in
data16
jnp
and
xchg
add
cmovg
icebp
and
dec
aam
arpl
icebp
cmp
jne
outsl
sub
ljmp
jb
or
inc
sub
xchg
mov
sbb
and
call
pop
es
cmp
or
dec
icebp
test
sbb
mov
push
or
mov
jmp
dec
mull
push
pop
repnz
fchs
sub
add
shrb
mov
lds
sub
mov
jg
ja
pop
and
xor
outsl
sbb
push
movl
sbb
call
xor
push
and
pop
add
ss
push
jmp
mov
adc
fwait
and
push
xor
idivl
push
push
inc
xor
call
fisttpl
push
mov
adcl
dec
lea
movb
adc
inc
fcompl
imul
imul
xor
inc
cmp
subps
xchg
ret
jl
out
cmpsb
sub
sub
lea
or
sti
gs
cmp
jecxz
test
sbb
xor
inc
aam
and
xchg
imul
je
sbb
and
cmp
test
js
jne
pusha
inc
cmp
push
xchg
fdivs
leave
push
mov
cmp
xchg
cli
stc
push
xchg
add
adc
jp
loope
add
in
test
arpl
cmp
or
cli
or
push
aas
fsubl
xlat
dec
xchg
mov
shlb
sarl
cmp
mov
js
xor
dec
je
aad
lea
aaa
clc
pop
push
shl
adc
ljmp
int3
mov
out
stos
push
mov
mov
push
xor
sbb
jp
lea
inc
pop
cmp
push
push
add
add
pop
cmpsb
or
jp
js
push
xor
imul
int3
cmp
mov
mov
test
das
cmp
xchg
and
out
fs
jbe
push
and
jecxz
bnd
sub
mov
push
lea
lds
imul
add
out
testl
lahf
jmp
inc
fucomip
es
popf
pop
mov
dec
jmp
push
pushl
xor
outsb
iret
out
mov
cld
and
xchg
bound
xor
pop
repnz
bound
loope
je
ljmp
int3
jb
sub
cmpb
outsl
xchg
addr16
mov
shr
and
cmp
stc
popa
sti
jle
or
or
jg
iret
mov
mov
push
push
mov
es
cmp
ret
pop
into
mul
xor
xor
iret
push
add
dec
push
pop
xor
btl
pop
jns
dec
pushf
pop
sahf
or
lret
push
push
in
or
cmp
sbb
les
or
repnz
imul
and
adc
and
icebp
repz
ja
outsl
and
cmp
test
js
or
icebp
mov
sub
lcall
into
dec
mov
mov
sbb
sbb
jg
test
aaa
sub
push
sbb
and
out
sub
mov
xlat
dec
fs
push
shll
push
icebp
xacquire
xchg
jl
xchg
loope
ljmp
sub
mov
adc
lea
mov
dec
test
popa
cmpb
cwtl
sbb
outsb
xor
out
fists
outsb
mov
je
xchg
push
or
nop
pop
sahf
dec
or
sbb
sub
jmp
sbb
xchg
push
inc
dec
add
pop
fsts
imul
jno
cwtl
add
add
or
addr16
pop
outsl
cmpl
ret
mov
hlt
xor
stos
and
or
or
inc
in
adc
cmp
popa
cmp
cmp
adc
fsubrs
mov
pop
sub
mov
lds
cmpsl
inc
push
pop
lret
jns
test
cmp
add
xchg
sbb
mov
mov
sbb
in
mov
aas
in
pusha
es
ret
outsb
jne
sbb
mov
add
test
popf
repz
mov
out
pop
jecxz
xchg
fcoml
mov
inc
fsubs
fsubrl
loopne
and
add
cmp
mov
push
les
movsl
ds
xor
mov
dec
out
mov
lods
pop
stos
mov
dec
pop
pop
dec
popf
jle
push
adc
out
push
adc
jp
and
or
xor
and
mov
push
push
cmp
rcrl
insb
pop
imul
sarl
popf
jmp
in
sub
and
mov
jmp
xor
outsb
and
xor
add
nop
out
notb
cmp
xor
cmp
enter
push
sbb
movsb
xchg
js
jo
into
xchg
sbb
jl
push
rcrb
pop
iret
pop
les
aam
add
les
data16
ret
pop
mov
gs
cmp
mov
jne
push
mov
jmp
aaa
push
je
sub
mov
pop
dec
mov
inc
push
fnstsw
fnstcw
xor
mov
dec
mov
pop
cmp
push
lea
out
lahf
test
and
shll
push
and
stos
loop
push
push
cmp
test
repz
je
or
addr16
jne
push
sti
call
sub
insb
sbb
add
inc
cmp
in
mov
inc
je
pop
lret
cmpb
cmp
dec
test
sub
out
ljmp
outsl
cmp
inc
xor
pop
sub
andb
sub
fstl
xor
inc
mov
pop
and
pop
jp
dec
dec
mov
mov
jge
pop
mov
mov
les
lods
adc
or
test
sti
and
bnd
pushf
mov
or
pop
add
mov
jae
xchg
insl
nop
mov
loope
xchg
dec
pushw
push
xchg
or
and
mov
cltd
jp
xor
pop
inc
inc
push
cmp
add
fsts
aas
push
addr16
mov
movsl
ss
sbb
mov
push
dec
add
or
sub
push
mov
sti
pop
dec
xlat
ja
add
dec
adc
or
test
pop
addb
or
and
rcl
or
mov
cmp
xchg
bound
pop
loopne
ja
jmp
les
gs
cltd
shrb
int3
dec
lock
sti
ret
call
mov
lret
adc
sbb
lds
je
ljmp
add
jecxz
cld
call
cmp
push
lret
das
subb
jae
or
call
inc
subl
repnz
mov
xlat
jle
jp
in
and
testl
pop
add
fnsave
out
cli
or
mov
ja
call
sbb
sbb
mov
pop
loopne
dec
jns
add
pop
push
or
out
xchg
cmp
mov
pop
or
subb
push
out
daa
faddl
popa
mull
push
or
push
sbb
cmp
test
xor
lahf
xlat
jp
mov
sbb
sbbl
xchg
stc
pop
xchg
pop
or
insb
xchg
js
dec
jne
dec
call
cmpsl
sub
repz
mov
mov
lods
addr16
imul
mov
sub
mov
mov
inc
fcompl
and
or
rclb
pop
push
sbb
scas
pop
inc
sarl
negb
insl
dec
sbb
lret
mov
rcrl
xchg
mov
aad
or
adc
xchg
mov
sti
sti
shlb
pop
mov
rcrl
aad
xchg
push
xchg
sub
xchg
lods
arpl
fwait
aam
sub
adc
pusha
scas
cli
push
lods
insb
mov
push
and
add
mov
push
push
sub
pop
pop
jle
xchg
loop
cmp
add
mov
mov
push
xchg
sarb
dec
dec
cmp
idivb
daa
leave
xchg
xor
pop
in
mov
lods
clc
fstl
or
add
add
outsl
inc
call
and
or
sub
and
ret
xchg
pop
mov
dec
aaa
cwtl
or
xchg
lahf
insl
mov
or
jl
mov
sti
jle
mov
loopne
inc
xlat
xorb
pop
jecxz
shl
lea
xchg
push
sbbb
fdivs
lcall
push
mov
push
sub
dec
icebp
xchg
cmp
mov
movswl
loope
mov
push
and
mov
pop
sub
fidivrs
in
mov
and
sub
xchg
xchg
mov
push
mov
ret
xchg
push
and
mov
pop
bt
cwtl
std
cmpsb
shll
flds
push
push
call
mov
push
div
push
inc
test
jl
add
and
mov
pushl
sub
adc
andb
repz
jne
call
jmp
movsl
ja
and
sbb
mov
mov
ficompl
mov
sbb
movb
mov
cltd
sbb
je
inc
fisubrs
popf
in
and
mov
cmp
add
and
mov
mov
and
xor
imulb
lahf
jno
inc
mov
push
push
mov
xchg
fsubr
pop
add
adc
push
test
xchg
inc
enter
leave
lret
jno
out
cmp
rcr
mov
out
ds
xchg
dec
sbb
adc
movsl
lds
xchg
fildl
fildl
xor
xchg
and
pop
filds
mov
jnp
lea
add
mov
cmp
shrl
sbb
pop
into
add
pop
fisubrl
pushf
pop
ret
pop
into
jb
call
mov
icebp
lahf
or
sub
xchg
leave
imul
mov
dec
je
or
stos
imul
push
add
movsl
sub
mov
xchg
insb
jnp
xchg
mov
xor
push
push
outsb
pop
mov
movsl
sbb
movsl
ficoml
fsts
popl
fsts
sub
stos
pop
fwait
icebp
cmpl
xor
fimull
push
push
jbe
stc
std
push
sbb
mov
aas
add
neg
sbb
push
popa
and
push
jge
call
insb
mov
in
inc
aad
sub
out
movups
fs
jne
cmp
lods
out
aad
loopne
cmpsl
adc
xor
fistl
fildl
cltd
clc
js
jne
ficompl
push
scas
push
push
sbb
inc
add
imul
mov
lcall
sbb
pusha
push
and
arpl
nop
xor
dec
call
dec
xchg
imul
dec
sti
fmulp
lock
mov
pop
pop
push
or
cmp
mov
push
popa
fidivl
xchg
pop
inc
or
xchg
pop
sub
or
jmp
popa
adc
iret
fprem
mov
fcomip
sub
mov
shlb
mov
mov
andl
sub
or
mov
pop
sti
jecxz
inc
in
jne
movsb
out
jb
cld
call
inc
sti
sbb
dec
push
jmp
mull
and
insb
sbb
push
movb
call
mov
add
cmp
pop
outsb
xor
xchg
push
sub
shlb
scas
or
cmpsl
shll
xor
js
mov
test
push
pushf
mov
shlb
mov
add
xor
pushf
dec
jp
icebp
and
mov
es
daa
push
dec
cli
or
je
pop
lea
dec
in
imul
rcrl
pop
lds
sbb
nop
js
sub
aam
mov
cmp
or
divb
mov
sub
pop
jecxz
out
xchg
in
cltd
and
jmp
iret
sub
pop
repz
test
mov
pop
popa
pop
lds
push
push
push
dec
push
shrl
ret
fldl
in
mov
sbb
les
lret
cli
iret
pop
mov
test
arpl
cmp
cwtl
pop
scas
xor
fnstcw
xchg
ret
adc
loopne
pop
push
cwtl
test
das
xchg
pop
push
pop
push
cmp
cltd
shl
push
and
pop
push
mov
adc
and
sub
xor
pushf
pop
and
test
or
pop
push
or
xchg
mov
push
fistpl
insl
rol
arpl
adc
push
inc
push
bound
and
push
daa
xor
cmc
push
ret
lahf
movsb
xchg
pop
xchg
and
adc
test
andb
cmpxchg
movl
arpl
fiadds
dec
push
notb
aam
jge
daa
into
sbb
into
adc
aam
movsb
pop
xchg
inc
nop
aad
mov
pop
sti
sub
and
mov
call
pop
cmp
pop
shlb
mov
push
jnp
xor
xchg
iret
adc
repz
shlb
adc
xor
int3
push
mov
popf
loope
mov
sub
pop
dec
outsl
push
push
in
mov
jo
je
call
stos
sbb
lock
push
push
sbb
dec
pop
call
inc
push
inc
push
call
idivl
loopne
cmp
push
bound
jmp
aad
mov
xchg
ljmp
mov
push
dec
or
testb
cli
daa
pop
fsubr
adc
insl
mov
pusha
xor
add
aad
adc
lea
ficomps
adc
xor
inc
sbb
roll
pop
xor
stos
ljmp
mov
push
and
and
and
call
shlb
cmp
out
ja
in
inc
push
cmp
les
mov
notb
pop
add
or
js
dec
cwtl
and
cmp
repz
mov
cmp
subb
fistps
mov
mov
mov
imul
sbb
push
sti
fildll
inc
sar
add
push
pop
pop
rcll
push
neg
adc
sub
scas
in
das
mov
sbb
fmull
push
sbb
pop
out
xchg
sbb
fcomps
mov
xchg
xor
or
icebp
dec
or
adc
cld
jne
and
xor
and
repnz
push
cltd
mov
xchg
sbb
xor
in
adc
xchg
add
jno
enter
fldenv
in
cmp
push
push
add
jmp
hlt
mov
stos
cwtl
es
cmpl
bound
xor
out
sub
lret
xor
pop
lret
in
pop
jecxz
rcr
jp
clc
and
mov
pop
mov
jecxz
mov
inc
inc
push
fisttpl
jecxz
shlb
mov
push
push
or
stos
ret
call
rclb
cmp
mov
dec
push
sub
xor
scas
insl
sub
jmp
cmp
stos
and
popa
icebp
out
lds
shlb
std
loope
in
sahf
push
testb
mov
jbe
pop
shrl
out
xor
sub
das
mov
lock
push
sub
push
leave
pop
rcrl
push
aas
jp
sbb
push
xchg
xchg
cmp
lcall
sahf
mov
and
dec
inc
maskmovq
idivl
clc
loope
jbe
into
sub
sbb
or
outsb
adc
mov
dec
inc
aas
fildll
adc
call
or
shll
cmp
in
out
mov
inc
lret
push
pop
xchg
or
push
cmp
imul
div
add
leave
pop
pop
bound
fistps
stos
dec
out
imul
xchg
mov
hlt
stos
mov
lret
add
jl
fisttps
cli
icebp
push
inc
add
loopne
test
jae
movsl
ja
insl
mov
pushf
jns
cmpsb
sbb
inc
mov
dec
enter
xchg
sbb
xchg
stos
int3
inc
in
fstpt
stos
push
jp
stos
push
addr16
inc
mov
jbe
inc
xor
int3
and
fwait
pusha
rorl
push
pop
mov
dec
pop
push
call
xor
lea
or
inc
fadds
out
inc
xor
cmp
jecxz
inc
sub
jns
in
inc
testl
cs
lods
stos
push
aas
add
mov
cs
rcr
cmpsb
insl
xchg
pop
add
lods
test
mov
in
add
push
inc
mov
insl
test
test
out
cmp
clc
sbb
sarl
in
iret
cli
dec
test
jecxz
mov
ljmp
rcll
and
ret
cmc
stos
mov
jne
call
das
jnp
stos
lahf
ds
sub
loope
mov
push
in
mov
ror
mov
imulb
out
mull
xor
inc
sub
fiaddl
divl
pop
pop
xchg
icebp
mov
cmp
lock
mov
push
add
jp
fstpl
or
lahf
dec
fwait
jno
inc
dec
loopne
js
dec
xor
sahf
jne
pop
test
jo
add
xchg
jb
or
add
not
cmp
mov
sarl
mov
mov
popf
sti
jne
enter
sub
mov
ljmp
iret
test
push
hlt
lahf
in
mov
jp
test
add
mov
test
test
and
stc
push
mov
stc
es
cmp
pop
ficoml
push
mov
es
faddl
or
add
stc
movsl
sub
mov
ret
pop
stos
pop
fldenv
adc
inc
add
and
sub
sbb
adc
cltd
sbb
and
lret
daa
jg
inc
sar
pop
ret
cmp
jb
stos
js
cltd
lods
mov
xchg
cmpsl
addr16
pop
mov
sub
icebp
stc
test
xor
sbbb
jp
movsb
andps
rcrl
cmp
mov
pop
sub
mov
mov
mov
js
fcoml
gs
push
jle
add
xchg
lods
push
mov
push
es
sahf
jb
mov
sbbl
and
fstpl
scas
js
lock
sub
or
ret
inc
sbb
or
addr16
pop
jecxz
cmp
leave
inc
iret
add
dec
cld
push
push
inc
push
push
push
shlb
call
stos
pop
fiadds
mov
ja
push
push
or
push
adc
pop
leave
pop
imul
movsl
pop
jo
iret
loopne
mov
loop
and
ret
lea
jns
cld
not
add
ja
push
cmp
add
push
mov
cltd
push
or
ss
lahf
stos
call
mov
mov
movl
sub
cmpsl
loope
cwtl
call
hlt
push
sti
jbe
jbe
call
jmp
jmp
mov
cmp
enter
arpl
call
push
push
popa
mov
aas
andb
push
jg
movsl
test
jo
aas
out
gs
ret
outsl
and
mov
push
cmovo
pop
push
push
sbbl
add
mov
push
pop
xchg
mov
mov
xor
les
push
inc
mov
test
push
subl
xorb
out
not
leave
scas
jecxz
mov
push
cmp
lret
xor
sbb
cli
and
mov
fstpl
xor
mov
neg
inc
lds
popa
dec
pop
scas
dec
adc
imul
arpl
pop
fsubrs
push
js
call
enter
ret
lea
in
sub
inc
mov
call
std
loopne
xchg
addl
aas
lds
xchg
fbld
cmp
cmpsl
sbb
inc
ds
movsb
call
sbb
push
aas
mov
jne
mov
pop
dec
sahf
stos
dec
sti
fcmovnbe
xchg
cmp
pop
loope
ja
xor
ljmp
test
das
sub
sahf
mov
or
test
sub
mov
push
gs
cli
add
and
push
cmpb
mov
push
xor
call
iret
pop
fs
popf
clc
sbb
or
icebp
xor
mov
jae
pop
enter
or
outsb
dec
shlb
fcoms
or
push
int3
stos
hlt
xchg
xchg
and
mov
xor
into
cmp
push
or
or
fidivl
daa
clc
int
inc
pop
push
imul
enter
test
mov
sbb
xor
pop
mov
call
fbld
aas
inc
int3
or
or
jp
sahf
mov
push
ret
adc
in
and
mov
dec
int
jns
lods
shlb
push
fdivrl
cmp
pop
xor
pop
sbb
cmp
lods
cmp
movsb
ret
mov
lods
lea
or
xor
add
and
sub
and
rcl
jb
or
push
or
ljmp
lcall
sub
subl
sub
lahf
xor
sbb
fisubrl
sub
jp
in
mov
xlat
or
add
or
test
adc
sahf
sbb
sub
cmp
jmp
pop
stos
data16
add
push
sbb
call
jns
push
xchg
dec
pushf
mov
imul
insl
loopne
xor
lock
dec
dec
test
push
add
dec
or
mov
xlat
cmp
dec
mov
jmp
jge
jmp
stc
ss
sub
sbb
mov
xor
mov
push
adc
mov
testb
fdivrs
in
int3
mov
ret
imul
popa
ret
repz
enter
bnd
mov
fcompl
pop
adcb
int3
mov
pop
mov
cld
lret
dec
xchg
call
push
ss
mov
in
and
fs
mov
mov
lret
call
add
xlat
cmc
xchg
fwait
out
jbe
mov
imul
leave
test
mov
bound
mov
gs
pushf
lahf
lock
ret
lcall
daa
es
mov
pushf
or
inc
xor
mov
sub
add
aam
add
hlt
add
cmp
and
daa
sbb
out
jbe
ret
mov
sub
xchg
sub
popf
test
sub
xchg
dec
fisubl
mov
pop
push
std
add
out
shlb
pusha
pop
fwait
iret
addr16
rclb
fisubrs
jne
popf
xchg
mov
sub
xor
dec
sbb
dec
jl
push
push
push
and
mov
add
mov
call
cmp
jae
add
add
add
push
insl
add
add
push
add
add
add
inc
data16
add
add
add
add
add
add
add
dec
xor
add
add
add
push
add
add
add
add
add
add
add
add
inc
add
imul
add
add
add
add
add
add
dec
dec
add
js
add
push
bound
jne
add
imul
add
add
outsb
add
add
add
insb
add
add
add
jo
je
push
inc
add
add
add
add
insb
add
add
add
add
inc
add
add
add
imul
add
add
add
push
add
dec
add
add
add
add
push
add
add
add
add
add
add
dec
add
jo
add
add
jae
xor
push
add
add
add
add
je
add
add
push
add
add
cmp
add
add
add
add
add
push
add
add
dec
add
add
add
push
add
add
add
jp
add
cmp
add
xor
add
add
add
add
add
dec
data16
add
add
add
cmp
add
add
data16
add
add
add
add
add
add
push
xor
add
add
add
add
push
push
push
add
popa
add
add
add
aaa
xor
add
arpl
add
xor
add
add
add
add
add
add
add
imul
inc
add
inc
push
add
add
add
add
add
add
add
add
add
imul
add
jbe
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
push
add
mov
test
dec
pop
fcomp
jno
aam
cmp
mov
push
sarb
inc
add
mov
xchg
push
pop
inc
jecxz
jmp
lock
call
repnz
xor
out
daa
mov
push
and
out
add
mov
inc
sub
pushf
lea
out
scas
jnp
and
and
inc
pop
lds
pop
and
int3
pushf
mov
pop
cmp
xchg
dec
sub
nop
push
push
repnz
data16
push
mov
or
jecxz
scas
shlb
filds
lcall
icebp
jb
incl
je
jecxz
or
jnp
mov
add
mov
outsb
jmp
ljmp
adc
inc
or
add
add
jge
ret
jge
jne
call
and
into
cmp
in
mov
jp
push
adc
push
jl
dec
push
leave
xchg
lock
sub
insb
mov
negb
adc
add
mov
adc
fidivrs
pop
cmp
fmul
rcr
out
fisubrs
lock
jle
test
mov
loopne
scas
loop
andl
es
mov
sub
and
les
cmp
xchg
jne
push
mov
inc
js
ja
and
cmp
sub
ds
xor
xor
in
rorb
sbb
cmovo
jbe
mov
mov
adc
ret
int3
jb
das
pusha
push
mov
repz
pop
je
push
test
jbe
lea
xchg
jmp
into
push
fldl
xor
pop
pop
loop
inc
arpl
ret
mov
ret
fildl
push
push
inc
out
stc
pushf
lcall
add
cmp
dec
dec
mov
cwtl
shlb
push
pop
test
push
inc
xchg
pop
cltd
push
xor
rclb
adc
push
push
mov
add
mov
jns
and
jo
mov
inc
add
jmp
mov
lret
je
lds
jmp
test
scas
stos
stc
enter
xor
mov
or
call
ret
inc
je
lcall
mov
pop
mov
push
sub
pusha
pop
lahf
pushf
mov
push
push
and
sub
fldenv
popf
daa
xchg
rcll
fs
xchg
cltd
popf
xor
loop
xor
add
cmpsl
sarb
shl
clc
call
adc
dec
jb
ja
cmp
test
aaa
ljmp
mov
cwtl
adcb
and
fs
arpl
cli
push
jle
push
jecxz
push
mov
mov
mov
xchg
push
cld
inc
fsubl
and
or
gs
push
add
mov
imul
push
jg
jg
stc
and
data16
push
loop
push
icebp
std
pop
es
push
xor
cmp
dec
sahf
int
adc
and
xchg
or
les
fstl
ret
mov
mov
negb
xchg
mov
int3
lea
and
mov
jne
stc
scas
push
loope
lods
add
stc
cld
lods
popa
xor
fwait
mov
push
shr
testl
add
popf
mov
fisttpll
jne
dec
jp
dec
jne
adc
adc
push
cmp
leave
inc
shlb
loopne
sbb
lock
xor
add
inc
inc
loopne
add
jmp
sti
pusha
shl
loop
arpl
ljmp
mov
push
je
xchg
int
inc
test
mov
jne
jle
add
pop
inc
cmp
fcomip
jp
jne
pop
stos
push
mov
sbb
sub
test
push
pop
aad
js
dec
jle
mov
sub
and
push
add
push
sbb
mov
cmp
add
lret
mov
pop
sub
xchg
mov
cmp
pusha
sub
fistpl
loop
jae
cmp
jle
adc
pop
int
call
pop
add
adc
andl
loop
cld
orl
shrl
jno
mov
call
jmp
mov
pop
int3
in
xor
push
shl
inc
mov
rol
pushl
insl
push
sub
pop
mov
jbe
add
sub
push
fildl
stos
inc
pop
ret
jae
gs
mov
add
call
outsl
jno
or
scas
push
mov
push
cmp
push
push
test
adc
inc
xchg
sbb
rcll
fdivrs
mov
jmp
sub
xchg
sbb
and
enter
push
fists
bound
jle
ds
imul
stos
adc
cwtl
mov
arpl
lea
mov
push
fdivs
dec
adc
pop
xor
inc
and
adc
push
pop
loopne
repz
xorl
push
or
call
sbb
mov
repnz
mov
push
sub
xorb
rclb
jbe
movl
js
mov
imul
jge
jo
je
cltd
xchg
aaa
and
test
ror
test
mov
aas
icebp
decl
cmovge
push
out
out
mov
shll
and
dec
lret
push
sarl
push
cmp
push
fidivs
push
jecxz
iret
dec
loope
ffree
xchg
cmp
popa
jne
cmp
push
push
jp
push
cmp
mov
pop
bnd
in
cmp
loope
out
arpl
pop
je
mov
mov
inc
xor
xor
inc
testl
incl
push
xchg
fs
xlat
jle
mov
jmp
push
sub
inc
ret
cli
js
ja
fisttpll
ljmp
popf
pop
jl
pop
dec
adc
ss
ret
inc
nop
aaa
push
orl
jp
or
dec
dec
notb
call
mov
or
popf
popa
and
pop
pop
xor
jg
ffree
xchg
lcall
movsl
in
and
das
or
and
dec
mov
sub
lret
mov
addr16
mov
rcll
add
pop
mov
lods
mov
sub
inc
xchg
in
shrb
push
sub
roll
xor
faddl
inc
jmp
pop
sbbb
and
loope
js
or
cmp
pop
out
or
iret
call
adc
shl
cmpsl
adc
int
es
and
pop
loope
pop
jbe
adc
add
and
loope
ss
loop
das
out
cmp
cs
imul
fstl
pop
pop
xor
hlt
rorb
enter
and
mov
pop
sbb
jecxz
or
adc
sub
aas
push
negl
inc
mulb
je
cmc
leave
out
and
not
adcb
out
div
push
xor
test
dec
push
sbb
mov
mov
js
fcomp
out
out
outsl
imul
push
pop
xorl
push
pop
notb
push
sti
mov
pop
repnz
mov
je
cwtl
sbb
cmpsb
loop
je
dec
mov
mov
aaa
pusha
lds
insb
jnp
jo
pop
dec
hlt
ja
clc
dec
inc
inc
sub
ret
call
pop
push
push
cwtl
xchg
add
js
out
and
aaa
pop
cmp
call
pop
jmp
push
dec
ljmp
add
pop
aam
jnp
nop
cwtl
fsubs
int3
cli
cltd
cmp
adc
dec
jnp
ja
xlat
call
lea
lods
push
sub
mov
pop
orl
or
push
xor
push
adc
push
dec
js
add
sbb
or
push
test
dec
enter
sub
fdivl
hlt
dec
jne
ss
or
mov
mov
and
jbe
je
rorl
testl
jmp
xchg
pop
cmpb
mov
loope
push
dec
insb
push
dec
inc
xor
pop
in
aas
and
jmp
scas
clc
push
call
inc
cs
mov
stos
lods
inc
mov
lahf
xchg
mov
rcr
push
cmp
cmp
addr16
push
cwtl
jp
rcrl
loope
and
out
xchg
mov
movsl
and
movsb
inc
push
fdivs
or
and
pop
bound
movsl
cmp
jae
push
inc
adc
add
push
adcl
testl
jp
xor
movsb
out
ss
loope
into
push
bound
aas
mov
jle
shlb
lods
outsb
adc
jbe
addl
sbb
jp
loop
sbb
inc
test
movsl
adc
pop
pop
out
mov
jmp
cli
sti
push
cmc
push
imull
adc
lds
cmp
addr16
repz
or
xlat
aas
mov
jns
jmp
inc
mov
add
xchg
and
and
inc
push
dec
sub
cmp
movsb
jae
adc
lahf
xor
dec
cmp
inc
jne
mov
or
push
and
pop
add
dec
inc
and
jecxz
sarl
stc
repnz
addb
dec
hlt
out
xor
jno
dec
mov
lods
imull
pop
mov
inc
or
push
xor
adc
popa
xchg
ja
addl
sub
jg
dec
jecxz
add
aaa
or
fidivl
sub
pop
sbb
jo,pn
cmp
or
or
or
adc
in
cs
xchg
repnz
push
repnz
pop
aad
mov
cs
mov
insl
mov
pushf
push
jp
int
xor
js
movsb
ljmp
inc
push
insb
push
add
addr16
pop
or
or
or
or
lods
ret
push
mov
mov
mov
or
shr
mov
cmp
sbbl
mov
out
push
xchg
fs
jmp
jne
in
pop
movsb
lds
xchg
inc
fldt
sub
fwait
test
loope
fsubl
movb
cli
mov
imul
test
push
sbb
imul
add
xchg
hlt
push
lea
mov
call
push
adc
inc
mov
mull
cmp
inc
mov
push
ret
xorb
add
test
and
pop
mov
mov
adc
mov
inc
dec
adc
js
inc
mov
push
ret
dec
mov
pop
fisubrs
arpl
out
push
xor
push
jae
push
dec
pop
bound
sti
outsl
pop
int
or
dec
mov
mov
jp,pt
rcl
xor
es
or
rclb
cmp
push
imul
fldl
sub
sbb
mov
add
pop
mov
mov
lahf
jle
cmpsl
pop
adcb
loopne
dec
lret
hlt
loopne
xchg
mov
inc
jb
bound
ret
adc
repz
fwait
rorb
roll
out
jne
sub
outsb
jne
hlt
cmp
out
fistps
mov
rcrl
popa
cli
add
and
dec
cmp
lahf
add
out
test
aad
mov
jmp
pop
aaa
lock
scas
les
loopne
pcmpgtb
xlat
in
loopne
js
or
jns
fimuls
test
or
sub
add
mov
jnp
fdiv
mov
call
sub
hlt
addr16
jo
call
dec
arpl
push
stc
fidivl
jnp
push
ret
xlat
pop
sub
nop
mov
lods
clc
pop
xchg
or
divb
sub
push
sbb
push
or
and
cmc
test
pop
or
in
push
xchg
ljmp
fldenv
movsb
mov
push
push
lret
call
rolb
sub
ret
aaa
fs
outsl
pop
and
pop
daa
pusha
and
out
jge
push
fiaddl
mov
nop
fldt
pop
lds
xchg
outsb
and
push
sub
je
lret
lcall
and
dec
int
mov
mov
push
lcall
pop
inc
repnz
call
fsubp
decb
std
xor
dec
jecxz
imull
dec
mov
scas
dec
cltd
hlt
add
mov
loop
push
sub
sub
or
jp
add
pop
into
mov
or
repnz
movsl
pop
mov
jno
pop
dec
ficoms
je
mov
ret
push
sti
or
jne
loopne
adc
or
cmp
outsl
stos
loope
adc
jmp
pop
push
aas
jno
and
cmp
je
jbe
clc
hlt
sbb
sbb
mov
pop
xchg
add
imul
and
leave
rol
orb
dec
xorl
imul
mov
jae
cmpsb
jmp
add
popa
fimull
pop
push
add
cwtl
int
adc
mov
popa
dec
inc
les
aad
push
and
pop
cmpsb
in
mov
sbb
xchg
push
cmp
enter
jg
jmp
shr
pop
inc
subl
adc
or
add
je
fwait
dec
add
cmc
jno
pop
push
push
clc
in
fstpt
fldl
shlb
pop
loope
mov
push
jmp
jecxz
loope
lds
cmp
xor
mov
push
adc
adc
mov
ficomps
or
rcrb
adc
mov
add
and
lock
mov
sti
pop
loope
pop
int
js
push
scas
sahf
loope
pop
testb
push
divb
repnz
xor
or
addb
nop
push
lea
push
cmp
or
jo
pop
out
movl
jnp
mov
jl
fimuls
cmp
daa
cmp
stc
pop
loope
sbb
arpl
stos
in
sar
outsb
add
inc
inc
ret
mov
repnz
pop
js
lret
add
mov
shll
jp
xchg
scas
pop
sbb
je
sub
jmp
outsb
xchg
xchg
and
and
in
call
pop
out
shlb
mov
push
sbb
pop
push
sbb
gs
std
cmp
mov
xchg
push
adc
lds
paddusb
sbb
sub
fdivr
add
sub
pop
es
push
fsub
push
xchg
fcompl
and
xor
fs
mov
cmp
fsubrl
loope
inc
ja
cmc
loope
fcoml
xchg
fnstcw
leave
xor
punpckhbw
and
dec
lea
mov
pop
or
lret
in
pop
inc
jae
mov
add
cli
mov
fstpl
push
dec
jmp
push
pop
mov
pop
push
mov
aaa
or
in
push
or
pop
imul
sbb
aam
mov
jmp
addr16
jle
push
push
xor
push
or
mov
lock
push
hlt
js
out
rcrb
sbb
pop
sbb
ss
xchg
cwtl
jmp
xchg
nop
mull
enter
add
add
xchg
stos
mov
mov
xor
xor
mov
cmp
in
imul
and
arpl
ret
push
rol
pop
mov
ret
mov
pusha
push
adc
and
pop
sbb
adc
adc
pop
sahf
idivl
pop
mov
out
mov
aaa
xchg
jbe
and
push
popa
sbb
xor
jne
adc
jp
push
jmp
shll
sub
sarl
push
mov
push
cli
jl
push
bound
cmp
fcmovb
leave
enter
pop
ret
fs
sbb
jge
push
mov
pop
jo
add
push
pop
jmp
std
push
jmp
mov
loop
scas
cwtl
or
pusha
call
aas
stc
jp
sti
xor
lock
je
push
iret
mov
test
pop
cmp
aaa
cltd
cmpsb
stc
sbb
mov
sub
push
jns
xor
nop
adc
daa
or
lret
adc
add
sbb
sbb
je
xchg
fsubl
cmp
inc
cmp
xchg
pop
push
mov
and
out
out
js
ja
push
pop
cwtl
xor
or
sbb
and
repz
mov
inc
roll
shll
jnp
in
xor
mov
or
repz
cmp
jne
mov
js
jo
test
std
mov
ss
or
pop
mov
and
fistl
sahf
enter
test
push
pusha
push
stc
jle
cmp
call
xor
jmp
inc
repz
pop
cmp
je
or
jle
add
jg
out
pusha
loopne
stc
inc
adc
mov
push
jo
call
dec
and
sarl
push
or
psllw
dec
sub
daa
js
ja
dec
mul
enter
mov
and
jns
mov
scas
js
push
push
cs
pushf
inc
dec
cmpl
je
xchg
out
xchg
fnsave
lret
pop
inc
jmp
cmpsb
pop
jns
addr16
push
mov
and
jae
mov
testl
lret
mov
inc
cmp
dec
data16
adc
test
sbb
cmp
mov
negl
and
js,pt
and
and
sarb
loopne
data16
stos
std
pop
pop
clc
push
and
xor
xchg
sbb
lock
mov
cs
and
lds
repnz
jmp
daa
mov
sub
hlt
arpl
xor
jb
jmp
pop
sub
push
imul
inc
negl
push
pusha
pop
mov
pop
rolb
push
in
stos
aas
xchg
xchg
push
out
loope
mov
and
cmp
push
std
mov
adc
dec
lret
outsl
shll
in
mov
punpcklwd
into
cld
imul
add
mov
adc
add
cmp
sarl
push
arpl
sti
aas
out
pop
dec
push
cmp
mov
shrb
sbb
mov
mov
cld
sbb
es
aas
sub
inc
ret
inc
cmp
fsub
mov
jmp
aam
sbb
push
roll
pop
push
push
xor
faddl
push
out
inc
int
fldenv
cmc
and
inc
push
jp
cmp
fiaddl
xor
iret
fildl
stc
fldt
pop
fildll
jp
add
or
test
adc
std
jno
jbe
xor
sahf
lea
push
cmp
cmpsb
xchg
pop
pop
pop
imul
xchg
out
jp
and
mov
les
and
and
mov
or
int
jns
mov
cld
cmp
or
add
rclb
ret
sbb
scas
imul
xlat
addr16
fidivrs
addr16
add
and
bound
push
and
inc
pop
jae
sbb
adc
nop
jp
and
or
lar
cld
out
in
ds
pop
push
or
mov
jo
push
xsha1
cmpsb
or
sbb
ja
mov
push
mov
out
pushf
xchg
adc
jne
movsb
pop
cmp
add
jnp
add
mov
jp
jp
push
mov
xchg
jne
sub
inc
dec
add
cmp
iret
mov
cmp
ja
pop
addr16
xchg
and
ret
les
and
mov
xor
push
out
cmp
mov
xor
sbb
dec
adc
leave
jne
push
shr
pusha
push
inc
fsubrl
jp
pop
inc
and
mov
mov
arpl
cltd
push
dec
inc
mov
rolb
jmp
jne
mov
inc
inc
addr16
pop
enter
add
sarb
inc
lock
inc
push
xor
jg
test
mov
dec
pop
jne
pusha
outsl
mov
aaa
imul
jno
push
call
adc
jo
push
push
mov
inc
call
dec
or
lock
push
in
gs
cmpsl
scas
lret
mov
mov
adc
push
push
and
dec
jge
mov
sub
and
inc
mov
sbb
lahf
ds
outsl
or
add
addr16
call
mov
push
repz
mov
shll
xor
cmp
push
jmp
sbb
sbb
adc
push
inc
dec
mov
ss
sub
ss
int3
aaa
or
push
lcall
call
ljmp
loop
sub
in
sub
jmp
shrl
js
dec
push
mov
cmp
xchg
push
cmp
xchg
aad
cmp
fadds
push
movsb
out
ljmp
test
mov
mov
or
mov
iret
in
loope
add
sub
xor
cmp
inc
push
fdivl
push
push
xchg
xor
dec
cmp
add
add
imul
add
add
sbb
mov
push
fs
push
fidivrl
in
push
push
mov
outsb
ja
call
cmp
push
cltd
cs
pop
sub
adc
fwait
mov
mov
cmp
aam
inc
push
mov
cmp
push
mov
call
and
cmpsl
inc
mov
je
cmovnp
jecxz
lea
lock
cltd
lahf
fyl2x
call
cmp
pushl
fildl
mov
call
inc
or
inc
sub
ljmp
push
inc
mov
cmpl
jnp
jg
loopne
or
pop
lods
adc
test
or
fadds
jns
lahf
loope
mov
enter
cmp
pop
aad
sub
xlat
push
push
fdivrs
out
mov
add
inc
les
cmpsl
pop
dec
xchg
mov
int
mov
jo
call
inc
ds
fildl
pop
xor
pop
jbe
sbb
pop
dec
jmp
or
push
sti
or
pop
mov
cmp
jb
mov
push
cwtl
ficoms
imul
fs
xchg
leave
rcll
add
cmp
addr16
std
xor
mov
and
ss
adc
adc
jle
sbb
mov
sbb
imul
fmuls
ret
es
and
mov
call
mov
xor
mov
inc
sub
loopw
mov
enter
adc
sub
xchg
pop
mov
or
push
cmp
mov
or
push
cwtl
sub
adc
jbe
xchg
int
xor
xchg
cmp
push
call
mov
test
push
addr16
push
sub
ret
xor
popa
arpl
mul
adc
cmp
dec
sti
jbe
pop
cmp
mov
and
cltd
add
pop
dec
fcoms
add
jae
or
nop
icebp
adc
jg
mov
cpuid
test
add
push
mov
adc
dec
aaa
jle
shl
add
dec
aas
scas
jmp
xor
push
dec
dec
mov
icebp
mov
mov
decl
sbb
sti
jbe
mov
pop
insl
jnp
out
inc
sbb
inc
enter
xor
sbbb
mov
mov
xor
mulb
or
pop
push
xchg
jge
mov
flds
dec
jmp
in
call
mov
inc
lock
jge
inc
loop
jno
and
cmp
add
fnstcw
push
icebp
mov
call
mov
stos
ss
adcb
rorb
add
lcall
add
mov
stos
adc
ret
mov
cltd
clc
sarl
add
and
or
push
sub
sbb
mov
jo
push
inc
adc
xchg
push
push
inc
push
test
sbb
imul
lock
push
or
and
ret
ja
mov
int3
loop
mov
or
inc
xor
dec
sbb
jne
sarl
clc
mov
out
mov
sub
cmp
enter
cmp
setne
or
cmp
mov
mov
pop
xor
mov
repnz
adc
icebp
jp
test
rcrl
arpl
cmpb
pusha
push
stos
inc
or
adc
jmp
icebp
sub
fistl
push
or
and
or
cmp
jne
movsb
dec
ficompl
add
pushf
adc
testb
cmpsb
dec
mov
mov
pushf
add
insb
push
cmp
or
dec
mov
or
cmp
push
je
xchg
aas
cmp
push
lahf
pop
cmp
movsl
add
push
push
pusha
pusha
mov
inc
movsl
mov
jmp
inc
rorb
sti
mov
mov
mov
cs
dec
mov
mov
sbb
cmp
cmpsb
into
jecxz
out
push
outsl
jg
sbb
aam
xor
pop
push
jbe
shll
stc
fstl
hlt
dec
bound
ljmp
sbb
mov
fdivr
mov
mov
test
iret
mov
sahf
sbb
or
dec
xor
push
fdivs
adc
jmp
mov
lock
pop
movsl
or
and
jl
xchg
mov
push
popf
ss
cmp
push
lea
es
or
push
pop
ret
add
sub
pop
or
in
mov
mov
dec
add
sbb
cmp
xchg
pop
in
push
pop
inc
out
stc
push
mov
push
mov
movsl
sbb
dec
cs
and
or
cmp
vxorps
jge
pop
std
je
push
add
cmp
imul
fucomi
popa
call
pop
pop
movsb
popa
dec
inc
std
mov
rcll
inc
cmp
lods
jae
or
adc
out
add
mov
stc
sub
pushw
and
out
std
jp
bound
dec
add
pop
aam
cmp
push
xor
add
inc
or
aas
pop
mov
lea
xchg
out
mov
pop
xchg
sbb
add
imul
adc
cmp
mov
pop
flds
and
mov
inc
push
jmp
push
call
inc
imul
shrl
jne
jbe
xor
adc
adc
cmp
aad
jb
push
cli
cmp
sbb
notb
rclb
fstpt
push
cmp
fisubl
mov
xchg
out
jecxz
ret
push
mov
or
mov
add
push
imul
xor
jne
inc
xchg
cmp
jmp
xor
mov
cltd
push
fwait
jl
shlb
jae
imull
xor
xchg
into
add
mov
sarl
cli
imul
sbb
push
xor
push
jne
lea
repnz
popa
and
sub
aas
inc
leave
cmp
mov
cli
ljmp
insb
lret
add
dec
lea
dec
mov
push
mov
pop
sub
pop
arpl
enter
xor
mov
imul
clc
pop
movsb
loopne
je
or
and
js
mov
imul
inc
lea
or
stc
cmc
testl
dec
test
push
push
inc
pop
shrb
xlat
sar
jae
add
lea
and
divl
inc
dec
cmp
shrb
sbbb
push
dec
cmovae
cmp
das
je
cmp
repz
cmp
nop
loope
cld
movsb
cwtl
es
xor
lea
aam
paddq
sub
xchg
jmp
jne
icebp
or
gs
sub
mov
insb
rorb
pop
inc
loopne
cmpb
xlat
rcl
cmp
cs
add
dec
lret
pop
mov
int
outsl
shll
mov
test
jne
negl
lock
xchg
in
jns
sbb
cmp
ja
sub
jbe
call
push
sbb
pushf
jae
stc
adc
xchg
xor
mov
sub
xor
jnp
xor
shlb
and
adc
lds
cmp
test
leave
fcmove
mov
je
idivl
arpl
mov
in
das
pop
cmp
mov
push
popa
add
cmp
je
xor
push
iret
push
jno
cltd
push
adc
xor
cmc
add
fsubl
daa
pop
add
or
testl
dec
in
adc
and
flds
iret
popa
push
jae
fdiv
xor
pop
gs
ret
fidivrl
add
cmp
mov
dec
xor
jmp
sbb
xor
jne
dec
lret
pop
dec
jns
je
cmp
xchg
fmuls
scas
and
lahf
dec
inc
lcall
outsb
sbb
outsb
jmp
fisubl
jecxz
int3
ja
inc
pop
xor
push
repnz
sahf
pushl
test
add
push
xchg
sub
gs
jmp
and
test
popf
iret
mov
out
addb
fnsave
and
or
or
jmp
loop
xor
sbb
inc
or
cltd
pop
xorl
add
int3
push
out
orb
push
jp
je
jl
ja
js
push
push
shlb
pop
cltd
ror
sbb
je
or
push
mov
fs
inc
xchg
sbb
push
icebp
jns
andl
adc
rol
mov
push
mov
push
push
loopne
clc
mov
cmp
mov
xchg
pop
cld
shrb
dec
inc
push
push
mov
mov
mov
aas
cli
stc
test
cmp
cmp
mov
int
cmpsb
push
add
mov
pop
pop
je
stos
cltd
push
outsb
jb
cmpsl
pop
xor
cmp
pop
enter
lods
mov
lret
or
stc
adc
mov
jne
or
jge
sbb
add
add
stos
xor
mov
enter
lock
shl
push
xor
cs
and
cwtl
xor
mov
popa
les
aam
mov
mov
jecxz
in
rcl
lcall
fcoms
rcll
std
and
std
xor
push
jo
push
inc
xor
xor
bound
mov
jecxz
push
ljmp
insl
xor
popa
add
sbb
jecxz
add
cmp
in
icebp
mov
mov
push
call
mov
jg
pusha
arpl
rcr
das
call
popf
jle
push
cmp
pop
sub
jnp
sub
cmc
mov
fcoms
cld
loopne
subl
out
cmpb
push
push
inc
loopne
cmp
inc
mov
jmp
ficoml
jg
repnz
and
sbb
rorl
dec
aam
and
jp
adc
push
pop
mov
pushf
loopne
lods
adc
addr16
popa
push
cmp
fsubs
repz
clc
cmp
push
repz
insl
jle
mov
negl
lcall
arpl
xchg
aaa
jmp
jle
out
push
movsl
daa
int
test
out
gs
pop
aas
and
and
movsb
loop
xor
and
in
push
or
in
divb
and
in
jge
mov
loope
xchg
cmp
jno
sbb
xchg
sti
mov
push
or
js
jge
and
inc
xchg
xor
pop
push
fsubs
iret
add
jmp
push
hlt
call
push
stc
sub
imul
lret
jns
xrelease
mov
jmp
arpl
rclb
shlb
icebp
roll
popa
jecxz
shl
inc
xor
push
xor
jle
adc
cmp
dec
rorl
outsb
repz
orl
icebp
jmp
aam
cmp
clc
stos
or
js
sbb
xchg
das
lcallw
test
js
popa
mov
push
mov
xchg
mov
loope
and
in
jg
cmp
in
frstor
ljmp
fs
xor
mov
jno
movsl
sarb
fs
or
jne
mov
inc
and
xor
in
ss
mov
stc
and
and
aam
clc
push
push
pop
loopne
sbb
cmp
inc
jecxz
jmp
out
cmpsl
mov
jmp
sbb
inc
inc
jmp
repz
ljmp
cmpb
sub
stos
gs
lret
movsb
out
sub
pop
data16
push
or
pop
sub
in
inc
ds
in
adc
mov
ljmp
sti
dec
jae
pop
in
xor
dec
or
cmpb
ja
enter
outsb
inc
shlb
ds
push
stos
jmp
jge
and
arpl
cs
push
push
fs
jg
hlt
push
pop
aaa
adc
inc
hlt
pop
add
ret
xchg
out
popa
dec
pop
sar
neg
cmp
jmp
pushf
xor
loope
js
loopne
mulb
imul
push
sub
in
cmp
call
rcrl
jp
movsb
jns
xor
nop
and
fs
popa
or
lods
popa
ret
sub
dec
and
bound
rorb
jns
or
xlat
bound
inc
pop
ljmp
adc
test
xchg
jnp
aas
in
daa
in
mull
push
adc
adc
pop
filds
pminub
jnp
stc
jnp
adc
loopne
push
inc
aam
mov
add
mov
jnp
iret
sub
mov
push
adc
jmp
push
or
jnp
push
lea
mov
jp
inc
inc
dec
jmp
add
jecxz
in
movsb
adc
jmp
lock
mov
add
sbb
add
add
dec
push
ds
fildll
fs
mov
out
rcl
push
repnz
pushf
pop
subl
inc
mov
std
push
xor
je
int3
xchg
jmp
bound
push
aad
enter
pop
mov
jge
imul
push
repnz
sub
sub
sti
fimull
aas
sarl
ret
mov
pop
movsb
sub
pusha
pop
xchg
cmp
sbb
pop
jecxz
test
mov
jmp
jg
push
fistpll
repz
xor
xor
loop
idivb
daa
lret
jmp
mov
jecxz
inc
pushl
int
addr16
sarb
stc
add
xor
mov
push
repz
rorb
xor
fs
add
pusha
xchg
outsl
and
xor
div
ficomps
push
add
push
mov
add
pushl
mov
mov
sub
xchg
ficompl
iret
xor
inc
push
pop
mov
in
imul
aam
mov
fimuls
lret
nop
rclb
outsb
cmp
or
arpl
fcmovnb
cmp
inc
jns
test
inc
push
ret
pop
lds
push
push
mov
pop
arpl
dec
mov
mov
cmp
add
push
ss
jge
mov
mov
inc
mov
and
adc
mov
jnp
fmull
add
mov
push
imul
jmp
and
pop
loopne
jecxz
mov
ret
rclb
jp
fcoml
pop
jg
repnz
jle
filds
scas
mov
dec
pop
dec
enter
adc
cmc
es
jnp
mov
xchg
movsb
sub
push
pop
xor
or
xor
aaa
std
dec
in
jmp
cmp
fisttpl
xor
xchg
loopne
push
sbb
adc
inc
mov
data16
movsb
push
xor
jmp
xchg
push
arpl
arpl
sub
js
mov
mull
inc
push
ror
mov
iret
mov
sub
mov
mov
pop
or
add
push
ret
out
xor
mov
mov
jno
push
popa
icebp
or
cli
mov
inc
rolb
or
icebp
ficoms
icebp
sbbl
repz
dec
push
imul
pop
mov
imul
mov
data16
cmp
mov
adc
call
addr16
sub
xor
mov
cmp
pop
lea
clc
xor
xor
cmp
xor
ss
cmp
mov
jo
dec
adc
xor
stc
shr
jg
mov
jmp
aas
xlat
in
inc
add
push
jl
out
pusha
mov
adc
pop
pop
gs
push
mov
push
inc
ss
jb
dec
clc
std
sbb
jecxz
or
jge
push
dec
xor
inc
scas
imul
inc
dec
in
and
iret
mov
jg
and
iret
lods
sbb
jp
mov
clc
call
mov
push
mov
jecxz
repnz
iret
jle
rcr
and
dec
mov
mov
pop
mov
iret
mov
adc
push
pop
lock
outsl
mov
adc
adc
bound
js
jno
or
adc
lock
mov
push
sub
aam
add
push
icebp
add
aad
jecxz
sbb
pop
aaa
aam
test
cs
sub
aam
pop
insb
push
mov
test
xor
movsl
jnp
jge
push
cmpsl
daa
pop
insl
sti
shll
xor
dec
sub
xchg
stc
mov
xchg
out
pop
mov
xor
pop
sbb
aam
or
and
cmp
and
and
fistps
fists
aam
arpl
cwtl
sub
pop
fsubrs
test
and
test
push
mov
iret
ret
aas
inc
fwait
hlt
addr16
pusha
mov
adc
divl
lds
sbb
sbb
mov
shrl
es
push
pop
mov
shll
imulb
test
shl
jb
add
jecxz
push
sub
xor
mov
push
bound
inc
pop
xlat
inc
jnp
sarb
sarl
cmp
jb
add
adc
push
popa
ja
and
push
clc
iret
popf
test
adc
push
xor
sub
sub
stos
pop
add
jnp
frstor
push
xor
mov
bound
cmpsb
addr16
lods
push
push
adc
adc
push
dec
enter
psrlq
push
sahf
and
and
mov
or
divb
inc
pop
push
das
pop
mov
rcll
add
jp
or
inc
movsb
sub
push
popa
nop
addr16
inc
xor
lds
into
sarl
fwait
divb
mov
jns
push
xor
mov
inc
ja
push
sub
stos
cmp
adc
dec
xor
cli
loopne
mov
push
imul
cmp
std
adc
push
push
shlb
lahf
xor
mov
mov
int
add
out
inc
arpl
iret
cmp
ret
in
mov
mov
cmp
test
sub
pop
pushf
pop
xchg
aam
icebp
mov
jno
call
jb
outsl
add
jae
mov
mov
adc
fcoms
into
aaa
dec
test
sbb
mov
mov
movsl
adc
and
adc
js
pop
mov
xor
test
mov
or
sar
xor
ja
adc
jo
jb
jl
xor
add
int
adc
jle
repz
pop
aaa
xchg
int
add
add
enter
test
jle
jecxz
cmpl
push
imul
mov
sub
cmp
pop
adc
call
mov
xor
dec
sbb
shrb
jge
adc
pop
pusha
lods
add
lods
sub
push
jp
bound
jo
inc
push
jp
inc
push
fdivrl
push
cld
aas
lret
mov
xor
cmp
dec
push
xor
and
sti
clc
insl
icebp
jo
fs
arpl
push
cmp
pushw
jp
push
dec
addr16
cwtl
call
pop
popa
adcb
clc
decb
stos
loop
mov
inc
ds
jp
fdivrl
pop
imul
cli
cli
bound
jno
push
jbe
pushf
loop
push
call
mov
push
nop
aaa
lods
sar
or
xlat
mov
jp
push
bound
test
sti
hlt
popa
stos
loop
push
fs
mov
cmp
jp
push
jp
add
jno
push
mov
jae
cli
jp
jne
inc
popa
es
bound
je
mov
cli
jmp
movsb
jp
jb
dec
jnp
jo
push
jp
popa
xor
cmp
pop
push
pusha
aaa
push
xchg
push
mov
loop
push
cli
mov
repz
push
jp
aaa
and
cli
dec
popa
push
jb
mov
mov
bound
enter
add
addr16
outsl
and
push
push
aaa
dec
xor
and
push
add
imulb
jl
sbb
cli
pop
pop
and
cli
fsubrp
jp
push
loop
pop
push
adc
pop
push
add
je
or
adc
ljmp
cmp
ret
out
mov
fisttps
outsl
jg
xchg
mov
enter
mov
je
jecxz
add
or
sbb
xchg
out
je
jg
arpl
xchg
imul
push
cmp
xor
cld
repz
mov
fwait
mov
mov
xor
rolb
mov
popf
fnstcw
dec
and
mov
xchg
fidivrl
imul
sbb
fdivrp
pop
xor
rep
mov
pop
mov
arpl
arpl
popl
fdivs
mov
stos
insb
div
lahf
lea
add
push
and
aam
dec
jb
push
aaa
ret
scas
mov
mov
stos
je
xchg
pop
sub
and
mov
popf
sarb
jl
or
arpl
xchg
enter
js
mov
mov
outsl
pop
dec
mov
pop
testl
jb
rol
divl
scas
jnp
push
mov
into
fcoms
popa
iret
dec
pop
repnz
cltd
xor
or
add
clc
adc
dec
leave
test
xor
addl
cs
dec
lds
repz
inc
cltd
icebp
sub
mov
add
bound
jecxz
aaa
cmpl
aaa
jb
testb
pop
adc
jno
inc
jl
or
outsb
pop
fwait
iret
add
test
dec
mov
es
stos
or
and
jg
rcr
sbb
stos
cmpsb
pusha
and
aad
add
subb
pushf
pop
insl
add
stc
jmp
or
jno
nop
cmp
lods
repz
icebp
cmpsl
cld
add
jmp
outsl
jno
cmp
mov
in
push
pop
jge
add
and
aam
xchg
lret
stc
add
and
incb
mov
aas
push
xchg
rclb
pop
fiaddl
jp
add
push
adc
ret
add
fsubs
shlb
adc
lcall
xchg
das
fistps
outsl
jl
add
push
sub
jb
push
jae
ds
fildll
add
outsl
xor
mov
mov
push
test
adc
sbb
add
cwtl
jle
data16
into
push
cltd
mov
out
push
mov
dec
cld
cli
pop
inc
call
sti
into
push
sti
jns
arpl
push
dec
pop
lock
jnp
xor
dec
add
jg
add
adc
mov
shll
mov
mov
xchg
je
cli
jp
xchg
popf
daa
imul
pop
pop
fnstsw
mov
dec
add
xchg
fsubs
outsb
jmp
xchg
mov
mov
add
dec
dec
push
lea
add
popa
loop
add
std
jg
xchg
push
arpl
out
cmp
enter
xchg
clc
mov
arpl
xchg
xchg
dec
push
lock
xchg
clc
aas
push
arpl
repz
bound
xor
out
mov
add
icebp
stc
ds
dec
pop
je
mov
jns
pop
xlat
jno
pop
inc
sub
arpl
cmpl
sub
call
jmp
loopne
mov
inc
test
fdivr
repz
test
insl
lock
mov
aas
add
xor
jb
jo
inc
sub
jmp
mov
push
pop
inc
fnstsw
jns
adc
push
and
jns
repnz
mov
imulb
rorl
rcr
ja
cmc
mov
outsl
call
add
pop
fisubrs
mov
mov
fs
jo
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
jbe
add
add
add
popa
cmp
add
add
add
add
add
insb
add
add
bound
inc
pop
add
inc
add
imul
add
add
jo
add
add
add
add
add
add
add
jne
add
add
cmp
add
add
add
xor
add
xor
add
add
xor
add
add
add
add
add
add
add
add
inc
cmp
add
push
add
add
add
add
jns
add
add
inc
pop
add
inc
add
add
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
js
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
inc
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
push
add
add
inc
imul
add
add
add
add
inc
dec
add
add
add
add
add
add
add
add
add
add
pop
imul
add
jno
add
add
mov
je
stos
addl
cmpsl
lods
in
pop
cld
lock
xor
sbb
dec
pop
pop
jno
pop
cs
mov
lds
push
andl
movaps
mov
mov
fisttpll
arpl
push
mov
dec
aas
pop
inc
xchg
mov
pop
notw
xchg
mov
fwait
in
imul
movsl
insb
aad
sbb
in
popa
add
int3
mov
xchg
cmp
jnp
xchg
xlat
adc
push
or
mull
adc
mov
mov
sbb
out
xor
add
lret
push
xchg
mov
nop
xchg
scas
jmp
scas
out
lods
insb
hlt
add
xor
adc
hlt
push
outsb
shr
xchg
out
xchg
movsl
subl
pop
ret
test
push
xlat
and
insl
pop
fs
cmp
popf
js
lods
mov
ret
into
aam
call
push
xchg
inc
iret
imul
dec
push
xor
jmp
shrl
repnz
inc
cmpsl
mov
bound
ja
orl
mov
adc
pop
add
aaa
repnz
jns
sbbb
subb
push
fwait
xchg
cmpsb
iret
jno
push
xor
dec
js
aam
xchg
xchg
cmpsb
xchg
aam
iret
loopne
call
scas
xchg
xor
negl
mov
aam
jl
stc
mov
ds
pop
rcrl
insb
jge
xchg
in
lock
xorb
xor
jge
rol
dec
arpl
mov
jl
cmc
lret
scas
mov
cld
lock
jo
sti
push
add
repz
icebp
int
scas
mov
sbbl
pop
not
out
repnz
xor
pop
mov
fnstenv
mov
enter
shlb
out
xchg
leave
adc
inc
into
loop
jne
jp
mov
jl
leave
mov
or
push
sub
sahf
nop
mov
pop
sbb
or
lahf
and
dec
gs
mov
ret
fstps
jp
xor
inc
lock
xchg
mov
cmpl
ss
loopne
shll
movsl
popa
je
xchg
sub
xchg
loope
jmp
ja
or
sub
sahf
lret
xchg
cld
mov
cmp
inc
jge
pop
std
push
xchg
loopne
mov
mov
cmp
xchg
push
les
xor
lods
jnp
mov
or
lret
inc
add
pop
push
sub
lock
mov
sbb
rcl
fisttpll
lock
cli
rcr
bound
push
mov
mov
dec
pop
dec
idivl
cmp
cmp
mov
mov
verr
aaa
and
out
outsb
push
loope
xchg
sarl
je
xchg
xchg
mov
in
aaa
add
cmp
mov
aaa
pop
cmp
in
dec
insb
push
in
pop
in
mov
xchg
fwait
daa
jecxz
mov
in
cmp
or
daa
mov
dec
loope
mov
ja
jge
test
add
sbb
sarb
jp
out
or
adc
js
lahf
sub
pop
sub
cltd
jb
xchg
sbb
xlat
pop
loopne
loop
hlt
mov
mov
xor
sti
push
addl
pusha
imul
je
repz
adc
das
dec
lds
popa
jo
fwait
subl
test
or
daa
cmp
dec
mov
jb
xchg
fwait
mov
or
push
and
cmp
jb
mov
in
xchg
lret
jl
jmp
mov
popl
push
ss
loope
lret
or
dec
int3
push
cmp
or
pop
xchg
aaa
sbb
xchg
inc
pushf
andl
imul
inc
and
in
in
xor
pop
and
pushf
lahf
mov
xlat
pmaddwd
sbb
dec
mov
inc
mov
stc
jp
imulb
sbb
in
cmpsl
jno
dec
pop
push
arpl
xchg
cmp
je
cmp
rorl
push
cmp
add
andb
jecxz
pop
cli
cmp
push
mov
inc
xchg
pop
pop
pop
push
xchg
xor
faddl
vmread
bound
and
popa
mov
sbb
sub
jns
mov
pushf
rcrl
je
xchg
into
xchg
fcoml
adc
hlt
jns
pop
sub
pop
push
imul
xchg
shll
cmp
loopne
call
fistpll
sub
hlt
pop
dec
xlat
pop
lret
gs
test
or
ret
imul
fs
ret
push
cs
dec
lcall
jne
xchg
lods
test
push
fsubl
ret
cmp
mov
stos
test
pusha
mov
scas
add
sti
or
loop
das
testl
out
scas
aad
pop
lock
xchg
scas
in
mov
cmc
sti
mov
lds
in
dec
insb
gs
jl
and
xchg
or
loope
mov
fadds
push
insb
out
jmp
test
addl
pop
xchg
adc
ja
dec
xchg
mov
xchg
ja
mov
or
cld
push
xlat
adc
xor
repz
loope
jns
gs
mov
pop
js
roll
loope
push
and
xor
rdmsr
outsl
pop
sti
out
out
pusha
xchg
lock
movl
out
icebp
sti
pop
outsl
adc
push
gs
ret
leave
xchg
int3
je
enter
daa
iret
add
pop
movsb
testl
je
rcll
fbstp
or
sbb
push
fnstcw
das
aam
cmp
insl
js
cmp
addl
fimuls
push
jp
cltd
xchg
popa
push
mov
dec
arpl
hlt
jge
xchg
ror
dec
rorl
hlt
mov
jecxz
aaa
add
jbe
dec
ret
out
cli
rcrl
dec
jecxz
out
aaa
jmp
iret
adc
pusha
mov
inc
cmp
or
pavgb
sarl
daa
lahf
insl
push
in
popa
bound
mov
push
push
pop
insb
mov
cli
sbb
outsb
dec
outsb
imul
sti
sbb
xchg
sbb
cmp
loopne
xchg
pop
jno
jg
jge
lea
mov
add
jp
je
push
xlat
push
fwait
dec
push
outsb
jg
test
dec
les
rclb
mov
cmp
mov
push
sti
inc
xchg
popa
sti
or
jmp
dec
repz
inc
mov
xchg
push
mov
dec
js
in
and
cmp
test
push
and
faddl
stc
push
jg
jmp
cmp
lcall
add
mov
cmp
loope
and
cmp
stc
dec
insl
push
jae
xlat
and
cmp
jl
repz
cmp
loopne
rorl
or
pop
cmp
cmp
repz
xchg
ficoml
std
xchg
fstps
sbb
outsl
ja
lahf
test
fnstcw
mov
and
sub
dec
jl
mov
pusha
mov
iret
mov
es
add
mov
sbb
cltd
testl
and
pop
mov
mov
cmpsl
pop
aaa
pop
mov
addb
mov
sti
idivl
sbb
cmp
out
addb
ja
inc
jae
repnz
dec
xor
lahf
inc
int
pusha
pop
icebp
sti
cmpsl
sub
xchg
xor
or
leave
push
sub
in
inc
sbb
push
jne
inc
push
jmp
cmp
outsb
cltd
outsb
sub
icebp
jmp
push
pushf
xchg
mov
inc
ljmp
push
inc
mov
push
pop
push
mov
testb
icebp
jmp
cwtl
cmp
sarl
icebp
pop
or
nop
lret
xchg
push
push
jno
jb
xor
jp
ss
orl
xchg
xchg
cmpsl
fistl
in
mov
and
push
jle
xchg
or
jmp
push
jns
sbb
adc
pop
push
imul
clc
jmp
aad
ss
inc
cmp
cmpsl
jae
sahf
xorl
xor
pop
pop
fdivrs
clc
data16
mov
sbb
push
cmp
xor
xor
push
cwtl
xlat
loope
lock
out
cmp
add
dec
sbbl
mov
ja
fldt
jp
xor
dec
sub
xor
jl
clc
mov
mov
jp
push
mov
popf
or
loopne
fsts
out
dec
push
scas
adc
jmp
dec
sub
addl
sti
pop
jge
xchg
lcall
je
ds
inc
xchg
push
out
test
rorb
adc
je
inc
push
push
fwait
xor
dec
jo
jp
mov
mov
jl
in
sub
daa
add
ret
mov
mov
shl
mov
pop
rcl
xchg
aaa
vmaxsd
xor
cmp
daa
imul
fistl
jnp
loopne
testb
popa
das
sarl
adc
pop
cli
je
jp
pushf
and
cmpsl
mov
mov
mov
dec
or
push
sbb
sub
push
aaa
hlt
movsl
dec
xchg
je
test
loope
pop
push
mov
enter
jo
cmp
loope
mov
sarl
mov
dec
in
sub
ja
rcrl
and
pushf
stos
lret
lods
fwait
pop
testb
push
in
pop
es
andl
leave
xchg
fsts
cmc
push
or
dec
ret
push
sub
gs
addl
ja
ret
mov
popa
push
stos
or
cmp
mov
mov
xor
or
cmp
pop
fcmovne
sbb
popa
and
push
cli
inc
popf
pop
ret
pop
jo
loope
fistpl
mov
mov
adc
cmpl
cmp
in
cmc
js
nop
xchg
add
mov
test
rcll
inc
out
xor
xor
cmp
clc
mov
jno
push
sub
mul
dec
iret
push
pop
bound
pusha
mov
mov
inc
adc
jl
xchg
fidivrl
xchg
push
pop
cmp
notb
push
rorl
cltd
stos
xchg
cmp
adcl
popl
dec
cmp
xor
pop
test
ret
pusha
leave
mov
and
sub
add
adcb
ficomps
stc
pop
out
mull
fwait
imul
ret
or
rorl
jp
push
movsl
push
test
or
fwait
in
repnz
and
subl
subl
dec
xor
ljmp
clc
jmp
cs
dec
jl
mov
mov
mov
pop
cmp
push
test
sti
ret
jo
push
popa
mov
jbe
hlt
mov
leave
jmp
push
vphsubwd
dec
mov
xor
mull
ret
out
sbb
ffreep
bound
sti
pop
cmpsl
cltd
icebp
mov
cmp
je
jl
loope
stos
sarl
int
mov
add
pushf
push
negb
mov
sub
sbb
das
ror
dec
in
imull
pop
iret
cmp
loop
or
jl
inc
cmp
lahf
mov
jl
xchg
mov
jbe
les
xor
add
mov
aaa
jl
daa
popa
xchg
cmp
aam
fidivrl
mov
lahf
addb
insb
scas
in
jecxz
inc
cmp
pop
loope
jp
negl
cltd
jp
fwait
stos
sbb
lods
add
xchg
jns
stos
pop
dec
icebp
std
insb
cmp
imul
dec
lcall
sub
fistps
ja
mov
daa
push
add
scas
push
mov
mov
fstl
fidivs
xchg
xor
sbb
out
sbb
fs
mov
mov
arpl
pop
lret
cltd
jns
ja
and
pusha
mov
mov
fsts
lahf
inc
rclb
xchg
scas
test
ja
push
jecxz
dec
xor
mov
or
mull
loope
sbb
push
or
and
cmp
repz
adc
xchg
mov
ds
lods
adc
mov
xor
cmp
jnp
pop
fldenv
popa
nop
mov
and
mov
or
pop
lcall
xor
mul
push
fcmovnbe
xor
orl
aas
dec
movsl
mov
or
mov
adc
imul
dec
int3
pop
add
push
or
inc
ss
sub
cmp
lds
outsl
and
jge
mov
mov
icebp
outsl
xor
add
inc
dec
ficompl
or
and
ret
cmp
pop
pop
fiaddl
lods
dec
mov
je
push
pop
ljmp
xchg
imul
stos
leave
xchg
pop
cmp
cs
test
sub
push
cmp
js
or
popf
test
add
jns
mov
div
push
aas
jg
adc
mov
xor
jge
mov
push
int
inc
loop
lds
lea
jp
mov
push
cs
lds
ret
in
rcll
xor
or
mov
arpl
and
and
hlt
mov
mov
mov
push
cmpl
lahf
mov
mov
repz
push
cmp
cli
aaa
ja
push
cmpl
lret
xor
jnp
loopne
icebp
jge
sub
arpl
addb
psllq
loopne
and
mov
negl
pop
shll
aaa
sub
xor
pop
cmc
inc
dec
pop
lock
rcll
push
jb
xor
push
cmp
sbb
imul
dec
jmp
movsb
cmp
loope
dec
push
loop
push
pop
lea
data16
lret
push
test
lock
andl
or
jmp
cmp
xchg
add
inc
sub
push
push
and
cmp
loopne
ja
jge
inc
or
pop
adc
dec
fisubs
stc
push
popa
add
pop
mov
pop
mov
and
sbb
adc
and
mov
jno
in
andl
dec
inc
dec
pushf
dec
mov
mov
pop
pop
mov
lods
shl
inc
sub
loope
mov
pop
mov
xor
mov
notl
in
popa
and
das
adc
inc
pop
jp
cmp
aam
add
inc
adc
cmp
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
push
add
dec
add
add
add
add
xor
add
jae
dec
add
add
add
dec
outsb
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
add
xor
jae
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
dec
add
add
add
jo
cmp
jno
add
jp
add
xor
add
add
arpl
add
add
add
dec
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
inc
add
add
push
xor
add
add
add
xor
add
aaa
add
add
add
add
add
push
add
add
add
add
add
add
outsb
xor
add
jno
add
xor
add
add
add
aaa
cmp
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
insb
inc
add
xor
add
add
add
add
add
jbe
add
push
add
add
push
add
add
add
add
dec
add
add
cmp
add
add
pop
add
add
add
inc
add
jo
add
add
add
add
add
add
jno
add
add
dec
xchg
mov
cmp
push
testb
pop
or
xor
js
jno
mov
mov
int3
cmp
lcall
sbb
sbb
popf
jmp
je
pop
dec
jle
pop
inc
push
in
sbb
aam
int3
lea
and
pusha
sti
inc
sbb
das
js
lea
test
mov
stos
clc
or
inc
dec
push
add
out
push
dec
add
adc
mov
cmp
push
pop
sbb
test
out
cmp
sub
int
adc
sub
lret
aaa
pusha
subl
sti
mov
loop
or
adc
loopne
int
lret
pop
xchg
ljmp
sub
xchg
inc
and
daa
sub
xor
movb
xchg
sbb
xor
fisttpll
pop
mov
lods
movl
inc
xchg
mov
jl
out
cmp
jne
cmp
dec
out
push
pop
movsl
sub
pop
push
push
mov
xor
inc
imul
aad
and
dec
push
sbb
adc
enter
inc
sub
and
dec
ret
cmp
fildl
pop
mov
cmovno
stos
mov
out
js
jb
adc
pop
push
sbb
jp
push
cltd
pop
ja
mov
pusha
mov
mov
testl
shll
push
js
dec
ret
rolb
xor
adc
inc
movsl
test
mov
cmp
push
bound
pusha
add
and
jle
mov
aas
and
cld
push
push
add
bound
or
cmp
sti
jb
cmp
je
pusha
sbb
cmp
rcrl
xor
sbb
push
mov
sbb
sub
xor
fcomps
sbb
cmp
or
shll
inc
cmp
jle
imul
inc
stc
js
xchg
xor
jge
fidivrl
rcrb
jmp
aas
fnsave
loopne
dec
push
add
negb
jbe
push
xorb
push
mov
out
cwtl
mov
lea
daa
xor
adc
xor
push
push
repz
inc
push
mov
lock
sti
inc
cli
lock
test
push
sahf
mov
lds
arpl
mov
push
pusha
stc
cmp
mov
push
cmp
lcall
mov
jle
loopne
push
cli
inc
aas
rcrb
sbb
hlt
adc
cmp
jmp
pop
and
insb
pop
mov
aam
adc
or
xchg
cmp
add
hlt
mul
nop
xor
sub
mov
rolb
mov
mov
jl
repnz
or
add
jno
out
outsb
add
ss
inc
jp
lds
clc
mov
jp
cmpl
sub
push
mov
in
jns
cs
add
jns
test
xchg
push
or
cmp
xchg
sarl
and
adc
sbb
pop
sub
or
or
xor
sub
jb
popa
icebp
jno
and
add
mov
mov
mov
cmp
roll
das
test
cmpsl
test
xor
cld
xor
jg
adc
test
pop
pop
push
testl
add
rcll
fidivs
or
adc
scas
inc
ret
or
rcr
adc
call
mov
jmp
jnp
hlt
rcll
or
imul
insl
cmp
lcall
out
loop
daa
js
cltd
out
rcrb
jns
inc
pop
ret
sbb
data16
xchg
shl
hlt
jnp
stos
or
mov
mov
inc
lret
in
mov
xor
in
push
in
mov
mov
or
cmp
sub
xchg
stos
bnd
and
cltd
cli
aad
and
sbb
sub
pop
lcall
sbb
pop
cmp
sti
xchg
pop
icebp
popf
pushf
push
dec
ficompl
and
and
add
roll
adc
andb
dec
into
push
mov
dec
cmp
pop
and
cld
mov
cmp
jo
xchg
cltd
andl
mov
mov
cltd
and
mov
roll
jle
xor
test
mov
push
cmp
daa
jecxz
mov
push
or
lea
sbb
push
mov
adc
daa
mov
sub
je
mov
mov
inc
jns
jne
ficompl
cmp
fwait
sub
xor
mov
fidivs
bound
std
xor
hlt
jecxz
sti
jmp
add
out
aad
cli
pop
lods
mov
sti
out
into
ss
subw
and
sub
inc
inc
dec
push
pop
ffree
cmp
add
cli
sub
int
push
sbb
jns
cmp
enter
clc
pop
mov
sbb
js
daa
pop
popa
pusha
push
xchg
addr16
pop
adc
adc
fildl
and
xchg
movl
xchg
pop
jo
inc
cmpsl
int3
jmp
pop
into
int3
ljmp
cmp
sarb
jecxz
cwtl
pop
and
xor
and
inc
out
jne
sub
jecxz
pushf
addr16
push
sbb
xchg
in
xor
inc
push
cltd
test
aam
test
cltd
push
inc
jnp
add
pop
addb
rol
mov
sbb
push
sbb
shrl
gs
nop
sbb
or
sub
push
pusha
push
call
push
loop
mov
out
sbb
mov
cmp
in
popa
test
push
enter
push
lret
ds
loopne
inc
fisubrs
stos
out
enter
notl
xchg
sub
test
cmp
dec
push
sbb
mov
or
insb
add
test
aas
push
pop
ret
sbb
jecxz
sub
pop
fiadds
sahf
adc
pop
mov
dec
lock
adc
jo
leave
cmp
sete
popf
and
jg
xor
inc
stos
mov
or
out
xor
call
pop
mov
adc
mov
bound
jp
adc
mov
adc
rcll
mov
inc
pop
inc
push
xor
and
call
lods
dec
out
mov
fdivp
jp
fadds
lret
adc
push
push
add
aas
xor
push
mov
add
cmp
call
sbb
fisubl
xor
cmp
adc
xor
cmp
cmp
std
aaa
addl
fistpll
inc
repz
push
jbe
xor
loopne
inc
and
sub
movsb
push
enter
inc
sub
adc
dec
xor
rcrb
sub
mov
cmp
adc
pop
push
push
mov
cmp
and
jne
push
pop
push
jo
xor
add
gs
push
or
clc
pop
or
aas
aam
icebp
pusha
cmpsl
lock
push
mov
xor
push
add
jne
cmp
mov
arpl
cmpsb
xor
ljmp
push
pop
push
fwait
test
xor
sti
ret
test
mov
testb
into
sub
push
jmp
jae
xchg
and
push
movl
ds
sub
push
jnp
stc
cmp
fwait
push
stc
int
cld
xor
xor
inc
xchg
lock
adc
xor
negb
push
jnp
in
xchg
loopne
sub
divl
aam
xor
imul
int3
bound
testl
dec
stc
sub
jg
and
push
fistps
adc
lods
jecxz
fs
jnp
push
movsb
push
arpl
cmp
je
cmp
js
idivl
fcoms
popa
push
js
sti
clc
sub
mov
lock
cmp
nop
jecxz,pn
mov
pop
cwtl
cmp
mov
jle
jl
imul
mov
mov
mov
cmc
aaa
cmp
sbb
cli
mov
or
push
int3
cli
mov
sar
cld
imul
pushf
sub
fdivr
mov
fcompl
sti
loopne
aaa
jae
or
xchg
sub
dec
pusha
mov
cmp
push
jg
popa
jg
cmp
ret
lret
or
shlb
mov
or
cmp
xor
push
leave
pop
or
loopne
test
inc
lret
lods
xlat
cltd
insb
nop
jmp
adc
sbb
test
mov
outsb
and
mov
ljmp
ror
push
in
or
dec
out
mov
mov
movsl
loopne
push
ret
pushl
ret
les
out
pop
nop
ret
jno
mov
and
sar
push
out
dec
mov
push
aaa
mov
in
inc
cmp
es
mov
sub
dec
inc
pop
add
dec
xchg
roll
scas
test
pop
out
aas
out
xor
dec
shl
fsubrs
testb
add
xor
ror
dec
mov
call
jnp
testl
fildll
loope
loopne
mov
xchg
repnz
fcmovnu
cmp
pop
in
ss
add
cmc
mov
sbb
je
call
cmp
add
pop
push
mov
xlat
adc
out
jecxz
xchg
mov
sub
dec
cs
ds
xor
arpl
call
mov
mov
ljmp
sub
leave
add
or
push
sarl
mulb
push
jo
lret
sub
fsubl
cmp
pop
call
mov
imul
push
loop
movsl
addl
les
or
mov
sub
call
gs
push
xlat
ss
pop
xchg
out
in
out
outsl
cmp
pop
loope
mov
push
fs
loopne
ljmp
out
in
mov
mov
push
mov
adc
push
daa
dec
bound
rorl
mull
and
push
iret
int
dec
jecxz
cmp
pop
lock
mov
push
jno
adc
adc
mov
push
or
arpl
mov
xor
inc
jle
pop
cmp
and
clc
and
cld
xor
or
inc
cmp
mov
fmul
or
pop
jle
add
movsb
inc
jb
cmp
aas
daa
aaa
inc
xor
dec
testl
or
subl
div
jb
mov
ret
inc
push
inc
push
pop
mov
add
or
lods
push
mov
test
fnstcw
jmp
fs
add
sti
add
mov
std
es
mov
jne
push
imul
je
adc
adc
mov
arpl
push
add
jns
push
jne
mov
pop
jl
or
cmc
push
xchg
mov
jne
push
xor
sub
mov
sbb
stos
dec
push
jnp
negb
aad
dec
jp
push
push
sub
or
and
mov
test
jo
push
push
jbe
and
adc
adcl
mov
or
jno
mov
pop
loope
pusha
shll
clc
mov
xor
cmp
and
mov
movsl
xor
inc
fadd
insb
or
lods
dec
xor
mov
cld
ljmp
pop
mov
jle
fs
testb
popf
out
dec
sbb
in
test
cmp
es
pop
and
sub
xchg
xchg
sbb
mov
adc
loope
jmp
and
out
divb
push
cs
popf
sub
adc
mov
mov
lret
and
push
sti
mov
push
mov
cmp
push
or
mov
push
icebp
rorl
iret
mov
pop
rcrl
fnstsw
sub
xor
sahf
rcl
push
test
aaa
int
or
pop
xchg
sti
jge
cltd
pop
or
pop
and
andl
pop
dec
ficomps
pop
iret
fxch
int
push
sub
add
push
icebp
cmp
out
push
ljmp
daa
jl
pop
push
or
icebp
pop
inc
lret
or
adc
icebp
mov
test
cmp
inc
insl
jae
push
push
bound
in
js
push
xchg
int
jmp
pop
add
sbb
sub
das
outsb
inc
cmp
scas
push
jle
fimuls
xorb
and
ljmp
sarl
daa
popa
call
dec
xor
or
pop
mov
mov
jmp
jp
push
jno
xor
out
pop
sbb
or
inc
call
mov
and
cwtl
pop
fldl
lea
out
lahf
adc
lods
push
mov
adc
mov
sub
fistl
xor
aaa
xor
lea
pop
push
mov
cld
mov
sub
cmp
pop
outsl
ljmp
lret
add
xor
or
sub
push
jmp
je
test
inc
cmc
push
sbb
int3
iret
inc
xlat
add
pop
mov
pop
repnz
cld
sbb
sub
cmp
shlb
xor
xchg
lock
xlat
sub
test
sub
cmc
xor
cli
push
mov
add
push
add
xchg
push
lahf
push
repnz
push
insb
loop
add
jle
pop
ret
inc
push
push
push
sub
and
or
js
push
pop
jge
mov
adc
movb
add
push
gs
cmp
adc
shlb
into
xchg
mov
or
dec
bound
mov
mov
add
aam
add
push
adc
or
push
xor
in
jae
and
jo
xlat
cmc
rorl
int3
pop
fnstenv
pop
inc
inc
shlb
mov
lcall
int3
rcll
jmp
pop
lea
inc
in
fsubrp
mov
or
add
bt
repnz
xchg
sbb
mov
sbb
and
shr
mov
ret
jmp
jg
cli
in
nop
and
das
push
sub
pop
cmc
sbb
ja
jmp
outsb
adc
clc
orb
xor
test
jg
loope
or
push
add
jns
mov
loope
xchg
add
mov
push
cltd
mov
iret
xor
lea
mov
pop
push
add
test
arpl
shl
inc
out
push
push
xor
mov
fs
fsts
or
aad
jmp
leave
aaa
add
push
jmp
sub
xor
repz
sbb
adc
lcall
and
test
push
jnp
push
xor
pop
int
and
ret
xor
orps
jp
mov
mov
addb
js
je
xchg
push
fwait
int3
stc
push
jae
jns
push
clc
movsl
ret
ret
mov
sbb
mov
pop
lcall
jg
lea
sub
mov
in
jecxz
and
jb
push
ror
jns
mov
pop
leave
mov
sar
add
add
add
pop
add
aaa
add
push
add
imul
add
add
add
add
imul
add
add
add
add
ja
add
add
cmp
dec
arpl
add
add
add
add
add
push
push
add
add
add
add
add
add
imul
add
dec
xor
add
add
add
add
outsl
add
add
add
add
add
imul
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
inc
inc
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
outsb
jno
add
add
add
jo
cmp
add
outsb
arpl
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
add
add
add
add
add
add
xor
add
add
jbe
add
inc
dec
add
add
add
aaa
add
add
add
add
add
dec
add
add
add
add
add
add
add
jbe
add
add
add
add
dec
add
add
add
add
inc
add
add
add
add
add
jbe
add
dec
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
ja
add
add
add
add
add
add
add
add
add
add
arpl
inc
add
add
add
add
fiaddl
push
add
sbb
xor
xchg
sarl
shlb
push
and
sub
fwait
out
xchg
dec
stc
sbb
fldcw
ret
mov
mulb
in
cmp
jbe
add
test
jno
loopne,pn
sub
aam
push
std
xchg
push
push
fdivl
fs
jno
loop
arpl
cmp
xchg
in
push
inc
ss
push
fcompl
test
mov
cltd
cld
mov
jbe
sbb
cld
insl
cmp
dec
sbb
rcrl
inc
pop
inc
sbb
push
cmp
push
dec
repnz
push
dec
test
pop
mov
mov
ret
mov
ja
cmp
inc
fwait
lock
cmp
inc
stc
cmp
ret
outsl
mov
push
test
mov
int
sub
shrb
inc
xor
fmuls
xchg
jge
sbb
repnz
add
xor
pop
pop
inc
mov
jle
stos
call
daa
in
mov
popf
and
jne
outsb
lret
loop
ret
pop
push
push
cmpsb
ljmp
test
cmp
push
outsl
mov
sbb
jecxz
xchg
ret
es
fcompl
jno
sub
fstpl
inc
cwtl
ret
jle
lahf
stos
enter
add
jo
sbb
or
enter
mov
mov
add
shrb
xchg
inc
fs
mov
xchg
movsl
mov
push
fs
mov
pop
jno
push
pop
int3
mov
rolb
fsubrl
xor
xor
push
xchg
nop
cmp
pop
push
sub
fmuls
pop
test
test
filds
or
push
neg
mov
shll
call
sub
sarl
add
xchg
lahf
mov
out
out
and
push
es
mov
rcrb
movsl
loop
aam
xchg
xor
mov
popa
gs
insl
ficoms
addr16
add
in
push
push
cmpsl
test
call
mov
jp
insl
mov
dec
lahf
mov
in
sbb
lret
pusha
push
xchg
xchg
pop
push
xor
jge
lock
pop
sub
inc
mov
add
push
aad
inc
jg
mov
push
sbb
outsl
sbb
xchg
aam
lds
aaa
rclb
adc
out
cmp
sbb
mov
lea
test
mov
fs
and
sti
mov
pop
test
cli
push
or
call
repnz
mov
adc
pop
paddsw
pop
or
ret
pushf
nop
dec
test
inc
mov
loopne
push
mov
pop
mov
add
xor
push
dec
mov
aad
rolb
mov
arpl
test
sti
pop
mov
mov
fcoms
ljmp
ljmp
mov
mov
fadds
lret
cmpsl
fucomi
mov
orl
jno
sar
dec
movsl
int3
sar
int3
cmp
push
call
dec
lahf
adc
adc
and
enter
hlt
fimuls
xchg
adc
xor
enter
test
repnz
es
jno
mov
mov
mov
push
or
out
loopne
test
sub
fdivs
or
test
out
sbb
out
mov
call
int3
in
cmpsl
push
pop
lret
faddl
insl
pop
inc
mov
add
ret
in
lea
loopne
mov
adc
sbbb
sbb
out
call
sbb
push
popa
mov
sarb
mov
adc
loope
sarb
aaa
sbb
fcoms
into
test
pop
rorb
push
hlt
and
cmpsb
add
push
or
sub
fstpt
mov
loopne
pop
or
xor
and
xchg
loopne
mov
rclb
mov
jp
pop
add
sub
sub
cmpsl
sbb
or
push
mov
and
call
in
repnz
and
sub
cmpb
test
out
into
cmp
xor
add
data16
loope
cs
arpl
fimuls
or
pusha
or
push
js
imul
mov
daa
test
test
clc
sahf
aam
test
clc
jns
addr16
pusha
nop
popa
and
mov
push
push
call
fisttpl
stos
xchg
ret
movsl
xchg
out
inc
leave
add
mov
push
cmpl
pop
mov
das
js
mov
xchg
add
test
lock
xchg
mov
stc
iret
ja
and
add
jae
fs
scas
pop
mov
scas
xor
cmp
sub
fbstp
xchg
sbb
cmp
cmp
adc
cmp
pushf
inc
mov
jo
add
stc
jne
shll
or
mov
rep
iret
jp
ss
shl
pop
bound
pop
test
mov
fisubrs
push
fidivrl
in
mov
xor
arpl
bound
jle
push
or
test
std
scas
mov
adcl
push
push
ret
sbb
add
in
inc
mov
mov
pop
cwtl
lds
imul
push
sub
push
adc
xchg
mov
push
mov
andl
mov
sbb
xor
or
mov
cwtl
clc
mov
jae
out
jmp
imul
sbb
cwtl
add
xor
mov
cmpsb
jl
ljmp
xor
xor
inc
popa
xchg
loopne
mov
push
mov
ljmp
fucomp
add
pop
call
sub
or
or
shlb
loope
xchg
addl
and
mov
test
bound
lds
call
and
popa
bound
fcoms
sbb
dec
test
pop
sub
insl
push
loope
adc
mov
jp
popa
sub
push
int3
xchg
xlat
cmp
das
xchg
arpl
mov
test
outsl
xchg
adc
mov
subb
ret
jle
orb
in
jne
ret
insb
inc
js
ret
aas
aas
ret
xchg
out
mov
pop
call
ja
icebp
inc
fstpt
jne
sbb
icebp
sbb
cmp
jbe
mov
fwait
xor
pusha
mov
jl
ret
adc
mov
pop
or
mov
syscall
in
movsl
push
jae
push
loopne
mov
push
loopne
sbb
push
fdivrs
andl
xor
mov
movsl
addr16
lret
bound
xor
js
or
icebp
mov
add
xchg
fs
ffreep
sub
inc
shll
xchg
pop
roll
mov
xchg
push
sbb
out
int3
xor
cltd
and
xchg
jo
push
inc
shll
into
lea
xchg
sub
mov
xor
xor
mov
cld
sti
or
cmpsl
xor
std
xor
xchg
mov
pop
dec
push
rclb
lock
dec
daa
push
push
fwait
adc
cli
dec
jge
daa
xchg
jns
mov
imul
std
xor
xchg
jbe
inc
aaa
test
mov
sbb
mov
push
pop
arpl
jnp
aaa
mov
divb
mov
mov
mov
xor
push
enter
mov
or
push
pop
ret
pop
ret
loopne
adc
and
mov
pop
movsb
dec
and
shlb
xchg
jnp
cld
rclb
lock
add
negb
adc
and
mov
sti
out
or
mov
std
xor
xchg
jbe
inc
pop
jmp
sub
divb
sub
mov
popl
movsl
iret
addr16
cld
je
pop
mov
dec
mov
into
dec
sarb
imul
xchg
add
mov
adcb
test
arpl
jmp
jne
lock
cli
jno
call
leave
test
fs
mov
push
movsb
jno
or
or
xor
test
arpl
push
out
xor
pop
or
out
cmpsl
les
push
jle
or
dec
adc
jno
dec
fwait
add
daa
loop
sub
in
sahf
sub
icebp
pop
push
sbb
js
pop
mov
repnz
jnp
add
lahf
sbb
dec
mov
mov
pop
push
lea
and
fidivrs
in
cwtl
mov
mov
inc
repz
sub
inc
mov
pop
das
std
cwtl
mov
les
mov
fldl
inc
mov
lcall
in
adc
fadd
fsubrl
in
fsub
popf
inc
or
ret
imul
xchg
push
push
dec
sbb
mov
sbb
mov
sbb
mov
push
jl
scas
sub
popa
bound
or
pop
imul
bound
add
cmpsl
dec
pop
xor
ret
sbb
jb
lock
mov
fwait
test
pop
add
iret
call
inc
dec
or
dec
inc
mov
and
inc
leave
ret
sbb
arpl
add
mov
icebp
or
lret
mov
adc
jnp
inc
pop
fldt
arpl
xor
mov
out
mov
mov
dec
hlt
movsl
mov
sub
loop
add
sbb
scas
dec
and
fs
xchg
and
rclb
dec
fsubrl
std
mov
sbb
jecxz
push
mov
xor
and
push
leave
push
push
pop
jl
pushf
sti
add
jecxz
push
fmuls
pop
shrl
sub
pushf
push
push
mov
xlat
sub
jle
push
xchg
int3
scas
mov
int
call
sbb
sub
lea
movsl
pop
mov
fisttpl
mov
pop
push
push
lods
mov
cmp
mov
sbbl
call
fdivs
push
sub
add
add
adc
mov
cmpb
addb
cmc
jmp
jmp
cmpsb
push
mov
insl
hlt
pop
adc
sbb
in
xchg
cmp
lock
iret
mov
mulb
pop
or
mov
pop
jbe
test
mov
in
push
and
pop
cs
fcomps
test
in
or
test
scas
hlt
dec
cltd
cmp
sub
inc
sub
jl
xchg
sti
mov
inc
push
psubsb
ds
add
and
push
sub
dec
and
shr
ret
shrl
mov
push
stc
cli
pop
push
ljmp
and
cmp
enter
mov
add
out
mov
call
sbb
jp
add
lock
outsl
pop
xchg
cmpsl
icebp
ret
or
mov
arpl
ljmp
xor
push
cmpsb
dec
and
jp
cs
and
lret
jns
mov
leave
inc
adc
mov
dec
cmpsb
data16
pushf
add
xor
data16
mov
pop
stc
adc
call
cmp
inc
call
cmp
or
adc
or
aas
mov
sbb
jo
std
cmp
daa
and
or
fsts
fwait
adc
push
cmpsb
gs
pop
mov
inc
xchg
ret
movsl
or
jb
mov
aaa
and
xchg
pop
fistl
enter
and
fisttps
dec
mov
lret
in
rcr
loopne
cmpsl
and
mov
jno
loope
and
or
push
daa
dec
push
in
sti
loopne
sarl
xlat
out
inc
out
lahf
xor
dec
xor
jl
xor
and
jle
sbb
stos
pop
iret
push
mov
les
into
fsubrl
jmp
out
cmp
push
lret
or
enter
add
movsl
imul
lret
push
xchg
fcos
or
loope
jl
test
pop
or
test
mov
mov
jp
call
or
frstor
dec
xchg
sbb
lcall
cmp
iret
mov
jmp
mov
out
outsl
mov
sti
lret
sub
mov
stos
imul
dec
ljmp
je
inc
nop
dec
divb
add
push
jne
mov
inc
push
jnp
xor
jle
jmp
jns
dec
sub
xor
psllq
push
roll
loopne
cmpsl
mov
pop
adc
ss
cmpsl
and
mov
push
into
shll
push
sti
dec
cmpsl
or
dec
cltd
adc
enter
and
jecxz
cli
mov
add
cmc
pop
repz
ss
test
out
jbe
sbb
rcll
repz
push
je
adc
push
mov
push
dec
stc
scas
sub
pusha
jmp
pop
pop
pop
call
or
shl
popa
add
fadd
inc
sub
sub
nop
outsl
gs
mov
push
mov
test
dec
fsubrl
out
push
jp
dec
xchg
lcall
add
aas
pusha
adc
pop
xchg
loopne
mov
sub
arpl
dec
xchg
mov
jae
push
ja
test
jecxz
mov
es
dec
jno
mov
repz
clc
subb
xchg
xor
pop
jmp
mov
push
mov
lods
maxps
aas
data16
outsl
enter
xor
icebp
dec
les
les
jmp
hlt
and
mov
add
push
outsl
or
push
test
inc
stc
pushf
arpl
inc
test
lods
cmp
xchg
jae
jb
ret
and
mov
loope
adc
push
cltd
lods
and
jl
rorb
pop
popf
into
mov
push
mov
cltd
jnp
pop
mov
add
cltd
sbb
js
je
jo
mov
cmp
jne
and
gs
add
cmp
lahf
mov
jbe
jecxz
jne
rcrb
and
sahf
repz
sub
push
push
andl
insl
mov
mov
jmp
xchg
jge
sub
and
outsb
dec
push
int3
sahf
mov
pop
sarl
ret
inc
loopne
mov
out
push
xor
jmp
pop
in
add
pusha
arpl
add
xlat
jmp
stos
or
insl
or
mov
fsubr
push
jb
fiaddl
pop
jae
sub
call
push
out
mov
divb
dec
add
jg
pop
stos
push
xchg
into
jno
cltd
and
push
inc
or
add
add
push
or
mov
aaa
push
adc
jl
ja
pop
adc
addb
pusha
les
mov
jae
iret
add
cmp
pop
out
push
iret
sbb
mov
xlat
test
push
in
xchg
push
rcr
ljmp
sub
fidivrl
push
pop
bound
iret
popf
xor
sbb
sbb
pop
sbbb
call
mov
sbb
xor
into
pop
jp
sub
mov
adc
in
push
push
mov
adc
pusha
add
pop
add
jns
iret
lods
loope
dec
in
and
bound
sbb
xchg
js
add
sub
add
notb
insb
cmovs
sub
out
and
lahf
sub
inc
mov
jmp
aas
dec
cmpsb
sub
cmp
push
cmc
addr16
stc
jmp
inc
out
addr16
lock
xchg
push
or
sarb
jno
sub
or
std
xor
xchg
aaa
mov
aaa
bound
dec
int3
xor
shrl
or
aaa
sbb
loop
mov
push
bound
leave
adc
mov
shll
xchg
add
rcll
fsubs
fnclex
imul
in
lcall
addr16
sbb
adc
inc
or
add
cmp
pop
sbb
lret
popa
dec
ja
out
jae
cmp
sub
pop
or
insl
fs
jo
dec
das
jo
fidivrl
inc
imul
std
std
stos
mov
mov
push
push
jo
add
arpl
fdivs
dec
aam
sti
pop
add
clc
add
sub
cli
ja
sti
ja
ja
std
jnp
ljmp
push
loopne
push
pop
ljmp
cld
push
inc
jnp
lret
cmc
mov
or
adc
out
ljmp
mov
out
in
sbb
nop
xchg
cmpb
imul
out
stos
pop
loop
ljmp
add
sahf
repz
or
in
add
out
sarl
cmpb
arpl
filds
fwait
jmp
add
jle
inc
cld
mov
push
sub
add
and
xchg
push
mov
push
cmp
adc
pop
mov
xor
imul
icebp
jnp
stc
je
lea
add
push
sub
fmul
cmp
jp
add
dec
and
insl
ret
jecxz
dec
push
and
mov
dec
call
and
jnp
shl
call
adc
mov
mov
test
mov
push
add
enter
lds
popa
push
movsbl
das
repnz
mov
or
sub
mov
jo
add
jne
xchg
xor
rorb
loop
add
sub
inc
dec
sub
and
sub
in
sub
jbe
pop
iret
pop
divb
int3
call
andl
packsswb
fs
addr16
fidivs
jns
call
inc
push
mov
xor
jmp
pop
xor
or
cld
gs
arpl
xor
pop
sti
jmp
cmp
cmp
jmp
outsb
ret
jp
dec
adc
or
imul
add
cltd
cmp
jle
pop
jmp
scas
xchg
je
addl
testl
or
pop
inc
inc
mov
pop
jge
js
xor
adcb
or
inc
pop
jmp
aaa
mov
popa
jno
add
jne
out
insl
leave
mov
push
popf
ret
repz
loope
setb
je
mov
outsl
sbb
and
jne
in
adc
sbb
sbb
add
xlat
sub
push
pop
cmp
call
push
jmp
pop
jmp
fadds
xchg
gs
gs
popf
mull
mov
push
add
dec
into
nop
jge
pop
incl
jl
test
mov
sub
addr16
push
rorl
mov
call
cmp
xor
sbb
add
movsl
adc
scas
bound
inc
aaa
cli
into
inc
push
and
mov
ficoms
hlt
and
push
pop
cmp
movsl
lea
pop
cmp
inc
nop
jecxz
cmp
rcrl
cmpl
movsb
pop
adc
pop
inc
imul
test
mov
jge
push
xchg
mov
mov
pusha
call
lahf
out
daa
or
in
mov
aaa
push
loopne
adc
sub
adc
push
cmp
dec
fwait
das
ljmp
sahf
dec
ss
cmp
mov
add
ss
fstp
add
jmp
mov
rorb
inc
ret
int3
sbb
push
rcrl
add
sub
andl
aam
and
mov
movsl
lods
push
push
pop
mov
mov
lahf
sub
jae
sub
jmp
lea
inc
ficomps
sbb
adc
xor
add
js
inc
ja
adc
and
inc
lock
or
rcrl
or
pop
mov
loop
hlt
jae
push
cmc
adc
or
sbbb
push
iret
jnp
in
sub
push
mov
pop
test
jecxz
loop
jns
popa
add
insl
pop
pop
adc
bound
pusha
adc
inc
lret
pop
icebp
mov
sbb
pop
mov
shlb
and
sub
in
xor
sub
aam
ljmp
xor
sub
pop
ja
cmp
mov
jne
lds
hlt
xor
xlat
push
push
adc
mov
testl
dec
push
jmp
dec
push
adc
arpl
pop
int3
push
adc
jae
loope
out
add
imul
cltd
push
push
jl
pushf
jns
pop
adc
fldl
mov
call
loopne
pop
sub
popa
jg
sti
aas
je
fs
jb
jmp
sub
jmp
jmp
imul
sbb
pusha
out
pop
push
rcll
icebp
jg
and
and
sub
fstpt
adc
jnp
es
mov
cmpb
in
scas
push
inc
dec
push
jp
aaa
pop
cmp
ja
push
mov
or
jb
dec
mov
push
seto
cmpl
loop
push
mov
iret
popa
sahf
push
daa
add
add
jb
push
or
or
adc
adc
pop
mov
stc
test
sbb
cmc
mov
sarl
aaa
je
add
pop
push
cltd
push
push
repz
bswap
inc
mov
loope
call
lea
lods
dec
movsb
sarb
push
fcompl
add
sti
mov
push
flds
aaa
xor
mov
and
mov
sub
popf
adc
xchg
cmp
mov
pop
adc
ret
pusha
adc
jle
jmp
aam
push
cmp
cs
testb
push
rcll
aad
out
push
aad
aad
and
cld
lcall
mov
in
ja
mull
or
or
sub
mov
cltd
js
roll
les
pop
rcll
in
aaa
mov
xchg
fsubl
push
add
inc
add
lret
adc
cs
arpl
mov
mov
into
xchg
mov
ds
dec
scas
jg
inc
xchg
outsl
shl
stc
rol
nop
popl
or
out
inc
push
lret
and
rorl
jmp
adc
mov
gs
push
xchg
shr
jns
mov
xchg
pop
xchg
pop
rclb
push
inc
cmp
cwtl
or
imul
out
rclb
ret
je
xchg
loope
sub
cmpsb
pusha
mov
push
add
pusha
push
cmp
ds
or
jb
sub
int3
outsl
js
or
xor
xlat
test
orb
sbb
or
sbb
jns
adc
sbb
imul
sbb
ret
xor
cmp
into
pop
mov
ret
fdivl
jae
pop
dec
je
and
aas
push
jge
pop
xor
pop
pop
push
pop
jge
pop
adc
shll
dec
rorl
mov
mov
adcb
push
inc
je
and
sub
sbb
cmpl
pop
popa
push
mov
jae,pn
aaa
or
gs
jge
aas
xchg
push
jmp
xor
cmp
dec
pop
dec
bound
sbb
dec
je
xlat
test
xor
sarb
rorl
in
lret
mov
cmp
divl
mov
dec
sahf
call
cmp
arpl
inc
xor
arpl
push
std
xor
lea
inc
push
loope
sbb
fdiv
mov
or
jmp
mov
out
popa
pusha
ja
fdecstp
pop
pop
std
xor
push
jl
scas
imul
arpl
dec
cmp
fadds
push
rcl
mov
je
neg
adc
aas
je
xlat
or
or
push
rcrl
subl
cmp
fnstsw
push
not
pop
ja
jne
out
je
test
cpuid
pop
addr16
xor
clc
push
daa
rorb
or
stc
lcall
mov
ret
pop
inc
xchg
mov
mov
int
lea
xor
pop
iret
fcompl
popa
pop
fnstcw
jmp
xlat
push
sub
mov
out
mov
popa
cmp
jae
int3
packssdw
rorl
ja
sbb
inc
and
sub
xor
xchg
iret
lahf
adc
out
pop
mov
mov
jp
push
cmpsl
negb
out
push
gs
mov
cmp
sbb
fcompl
ja
rcll
push
push
out
ja
inc
roll
add
mov
or
push
adc
adc
push
int3
mov
mov
pop
mov
push
cwtl
pop
jle
inc
cmc
xlat
push
outsl
adc
int3
xor
aad
adc
jnp
and
in
cmp
nop
add
sbb
jae
jmp
xchg
movsb
inc
rorb
gs
test
dec
mov
hlt
movsb
cmp
xor
rcrl
xchg
mov
or
sub
dec
mov
ja
add
cmp
pop
pop
mov
adc
push
ror
mov
pop
int
and
testl
leave
inc
xchg
mov
test
imul
xor
cmp
addr16
roll
lcall
pop
push
xor
pop
sbb
mov
test
fcmove
inc
insb
xor
ret
shr
ja
mov
popf
jno
call
mov
fisubrl
cmp
cld
popl
cmp
xchg
sbb
and
jle
sbb
push
aas
pop
add
sub
iret
out
push
pop
aas
sub
in
push
mov
call
int3
mov
sub
jp
mov
dec
add
loop
add
inc
in
pusha
sub
push
sub
cmp
add
in
xlat
push
fs
push
add
fwait
jle
ja
les
sbb
mov
jne
xor
jmp
aaa
and
adc
test
xor
lods
jp
adc
xchg
insb
pop
es
xlat
fs
repnz
jge
jae
xor
or
loopne
incb
sbb
data16
add
push
push
mov
sub
les
adc
pop
in
inc
stc
shll
neg
add
leave
adc
lds
pusha
adc
dec
popa
call
pop
scas
pop
cmp
xor
or
loop
loope
pushf
addl
jb
cltd
andb
js
mov
and
inc
fsubr
out
test
cmp
rcll
out
notb
fdivs
mov
xor
int
fidivrl
jne
xor
pop
xchg
or
aam
mov
lret
imul
js
in
int3
xor
lods
in
jecxz
jmp
xor
std
icebp
push
jne
sub
xchg
sbb
icebp
stos
pop
cmp
incb
mov
enter
outsb
mov
jmp
jnp
pop
push
mov
push
pop
xor
sbb
insl
sarl
push
add
pop
xor
je
in
mov
sub
xlat
fsubl
xchg
ret
pop
push
lret
adc
repnz
repnz
mov
pop
sbbl
mov
je
or
jnp
inc
jmp
mov
xchg
lds
scas
iret
jbe
xchg
int3
mov
jmp
jecxz
push
xor
cmpsb
add
data16
sarb
addr16
inc
rcr
mov
jmp
push
repnz
aad
sub
dec
pop
xor
jg
popa
das
pop
cmp
cmp
push
stc
jne
movb
std
push
pop
ds
aaa
inc
rcrb
inc
push
fs
cli
test
xchg
dec
cmpsb
ret
rcl
call
sbb
int
inc
out
adc
in
cmpsl
adc
pop
xchg
cmp
les
lahf
and
fsub
jmp
push
insb
int
push
iret
xchg
ret
lahf
and
gs
pop
mov
add
movsl
dec
push
sbb
addr16
imul
sub
stos
and
in
push
inc
mov
cmp
dec
mov
aam
or
inc
sub
scas
roll
xor
je
jecxz
sub
mov
ja
xor
ja
sbb
push
inc
cmp
cmp
xor
dec
cmp
or
mov
or
stos
mov
xor
lds
ret
popa
jmp
sbb
std
push
notl
jne
fdivr
stos
nop
adc
push
clc
sbb
sbb
jno
test
imul
scas
inc
stc
xor
mov
jo
shlb
inc
or
out
push
bound
or
dec
loope
fisubrl
push
adc
inc
add
out
sarb
movsl
insb
xor
nop
push
pop
cmpb
jl
inc
or
ds
inc
sahf
dec
dec
cltd
and
sub
xlat
fstl
push
fs
cmp
testb
sbb
xchg
jnp
push
push
sbbb
pusha
xchg
imul
jns
cltd
or
jbe
cli
jb
jle
mov
fildll
push
sub
in
and
dec
add
cmpsb
inc
pop
fnstcw
cmp
imul
push
ljmp
pop
cltd
adc
jns
cmp
dec
jmp
xor
mov
sbb
aaa
mov
mov
push
int3
jne
pop
xchg
adc
or
insl
or
xor
jae
push
sahf
cmp
dec
jns
mov
jb
mov
dec
or
jecxz
in
in
mov
mov
fimull
fsubl
in
dec
xchg
push
jmp
xlat
mov
and
push
cs
je
popa
call
cmp
outsb
add
inc
pop
cmp
or
adc
scas
jg
push
test
hlt
psubd
pop
xor
es
das
and
mov
or
lock
int
adcb
sub
add
bound
add
push
imul
cs
stc
clc
stc
popa
je
push
lret
sbb
hlt
sbb
push
fnstenvs
mov
jmp
cmp
lods
adc
xchg
call
sbb
mov
lods
push
out
cmp
xor
mov
cmp
adc
data16
pop
loop
sub
outsl
inc
xor
add
repz
sub
mov
out
xchg
lods
xchg
sbb
mov
dec
pop
inc
std
xor
dec
lret
mov
test
cmp
mov
push
loopne
xor
push
out
jge
cli
cmpsb
pop
xor
sbb
in
js
gs
icebp
test
or
mov
dec
add
push
dec
xorb
cmp
aad
push
adc
and
into
sub
es
mov
xchg
push
shr
mov
jae
loope
dec
mov
add
sbb
xor
jecxz
insl
in
sbb
and
fdivr
daa
mov
jae
in
mov
inc
sbb
inc
call
cmp
push
test
loopne
add
adc
push
out
bound
xor
push
out
aaa
les
into
cmp
roll
insl
dec
mov
les
call
push
ficomps
cmp
dec
ljmp
adc
ret
out
testb
dec
dec
xor
in
loop
test
mov
in
add
in
add
outsb
adc
cmp
mov
fwait
push
sarl
shll
or
and
cmp
sti
cmp
dec
fisubrs
xchg
cmpl
cmp
xorl
and
out
cmp
pop
add
fucomi
inc
mov
and
pop
push
xor
cmp
fwait
xor
data16
sbb
jp
pop
mov
add
jb
inc
xor
popf
pop
mov
push
andb
gs
leave
cmp
xor
sub
add
sbb
xor
cmp
inc
jmp
jns
rolb
mov
mov
or
or
lds
push
stos
and
xchg
aam
aas
rcrb
sub
xor
mov
cmc
test
add
adcb
xlat
int3
push
into
rorb
xor
mov
xor
sub
pop
mov
inc
xrelease
jb
pushf
xchg
push
imul
call
data16
test
push
rcrb
xchg
jmp
add
cmp
sub
cs
inc
stc
mov
push
add
inc
jns
in
addr16
pop
call
xchg
xchg
lret
mov
mov
iret
daa
cs
jmp
push
movsl
dec
icebp
and
es
cmp
pop
sbb
xor
out
and
jns
xorl
mov
jbe
int3
push
jg
mov
cmp
mov
int3
mov
mov
add
repz
jecxz
dec
lock
movsb
loop
shl
iret
and
repnz
push
fs
cld
fcoml
lods
push
cmp
adc
add
xor
fldl2t
das
sbb
test
jle
sarl
js
mov
mov
adc
xor
repz
add
rcr
jecxz
lahf
test
jne
into
test
or
clc
pop
mov
push
adc
or
pop
negb
enter
lods
aaa
in
in
pop
loopne
ds
mov
rorl
add
fldt
hlt
in
je
daa
sbb
mov
sub
clc
pop
jle
pop
or
icebp
mulb
pop
pop
ret
fs
add
out
enter
lret
sbb
rol
xchg
hlt
popa
add
lret
filds
mov
mov
ljmp
fdivrs
mov
add
pop
sbb
pop
mov
cmc
pop
mov
xor
lods
scas
das
mov
or
push
mov
leave
lcall
pop
fnstsw
mov
jecxz
push
dec
add
add
pushf
push
imul
mov
outsl
aad
and
pop
or
icebp
jge
mov
jae
je
add
push
bound
mov
jl
imul
cmpsb
jae
xor
lock
sti
cmp
sub
xor
sbb
fucomip
pop
imul
ss
adc
ficoml
mov
sti
pop
aaa
push
stos
mov
idivl
out
inc
scas
clc
inc
repnz
push
cmpb
push
insl
shl
call
add
loope
popf
dec
xchg
adc
pop
andb
int
dec
fwait
cltd
fbstp
xor
or
rclb
adc
jecxz
xchg
cmpsl
test
rcll
cli
in
into
lahf
int
mov
add
sub
sub
add
pop
or
and
mov
adc
fmuls
mov
clc
repnz
popa
mov
xchg
rdpmc
loope
clc
mov
movl
add
xor
sbbl
lock
jne
mov
push
ret
jmp
sar
inc
jl
inc
rclb
cmp
stc
xor
mov
or
sti
mov
adc
dec
push
sbb
rcr
xchg
xchg
add
push
lea
adc
mov
nop
xor
and
and
mov
jbe
fdivr
push
mov
push
push
adc
pop
shlb
aam
mov
sub
js
inc
xlat
fdivl
rol
es
out
das
sub
cmp
lcall
call
loop
sub
loopne
call
mov
mov
mov
mov
pop
xchg
xor
push
and
sub
add
iret
jecxz
xor
fs
xorb
test
xchg
sub
cld
pop
push
dec
xor
or
movsl
cs
xchg
lret
or
mov
cmp
push
clc
lods
jl
das
mov
call
jns
cmp
popa
cltd
add
les
inc
xor
into
xchg
rcrb
cmp
or
lahf
call
mov
pop
dec
jne
or
stos
sub
aas
fsubrs
and
movsb
and
jge
push
call
cmp
psllw
fistpll
push
xchg
mov
inc
ljmp
sti
mov
js
mov
mov
testb
add
xor
mov
stos
mov
sbbl
mov
xchg
jbe
sbb
imul
lods
in
lock
xor
add
lock
nop
scas
cmpb
jbe
push
or
or
mov
and
dec
push
dec
cltd
std
mov
popf
call
xor
jno
push
mov
scas
pop
rorb
out
cli
mov
mov
pushf
dec
jp
fs
mov
addr16
jno
xchg
pop
lds
xchg
daa
repnz
lea
add
and
popa
incw
mov
fwait
cmp
mov
pop
mov
fcoms
cwtl
fwait
ljmp
ds
repnz
mov
cmp
dec
or
jne
je
out
loop
push
cmovo
rcl
ret
outsl
mov
push
pusha
pushf
push
push
es
pushf
sub
repnz
and
pop
loop
lcall
sub
test
mov
fwait
sbb
sbb
adc
stos
insl
lret
jle
sbb
and
xlat
inc
lods
xlat
lea
addr16
inc
adc
cli
scas
or
jle
sub
sahf
push
add
call
cltd
mov
mov
jle
mov
dec
icebp
ds
loop
je
adc
loopne
dec
rcpps
es
push
jmp
fnsave
and
sub
shll
fbstp
int3
mov
arpl
cs
or
jecxz
adc
adc
and
xlat
inc
popa
aaa
cmp
mov
loopne
imul
cli
loopne
add
out
scas
pop
lea
subl
inc
pop
xor
leave
cmp
ret
add
lret
xchg
push
jnp
fmull
ret
cmp
fstpt
and
adc
inc
cmp
jmp
xlat
fisttpll
dec
sbb
cmp
mov
xchg
stc
scas
mov
call
and
les
push
and
mov
xchg
ja
push
popa
mov
mov
cltd
add
movswl
in
mov
ficoms
loop
or
add
push
cmp
mov
jbe
cmp
jns
shrl
fsubrl
xchg
loope
mov
je
movsb
add
cmp
inc
jle
push
dec
mov
ret
ds
arpl
inc
imul
outsb
mov
in
add
mov
in
pop
push
mov
ret
in
js
scas
or
add
xor
adc
decb
mov
popa
jne
lds
repz
jp
push
pop
cltd
jecxz
dec
call
jecxz
call
fldcw
mov
cmpsb
daa
adc
sub
mov
or
std
xor
sar
aaa
mov
lea
push
pushf
ja
sbb
cmp
jle
fsubl
ljmp
loopne
cmp
mov
inc
sub
xor
das
xchg
and
xchg
lods
inc
fisubs
pop
xchg
mov
push
push
xor
xchg
popa
mov
mov
clc
repnz
clc
sbb
shr
hlt
enter
js
pushf
lcall
inc
out
daa
js
sub
dec
loope
sub
cltd
mov
test
pop
cli
stos
dec
scas
shl
shll
xchg
in
lods
inc
sub
xor
adc
dec
xor
iret
push
out
addb
jl
cld
repnz
mov
dec
and
and
lds
or
pop
cmp
push
jns
pop
xor
mov
jno
inc
cli
cli
and
and
push
push
mov
rep
jnp
into
push
push
xchg
lea
cmp
push
push
push
mov
in
jle
je
sbb
mov
adc
inc
mov
mov
mov
movsl
fstpt
pop
sbb
adc
or
lds
and
mov
out
jbe
ret
push
sub
mov
data16
inc
dec
out
jb
repnz
popa
sarl
mov
leave
and
adc
jg
mov
push
fnstenv
xor
call
repnz
add
lock
dec
adcl
jmp
pop
roll
xor
pop
cmp
jmp
pop
inc
jno
nop
or
cmp
mov
pop
lret
and
push
fmuls
jbe
notl
or
jb
pushf
out
les
mov
xchg
negb
imulb
hlt
jne
pop
mov
pop
or
jl
push
jae
ret
jecxz
mov
sbb
sti
add
xchg
mov
xchg
addl
outsl
xchg
cwtl
jmp
data16
sub
in
fnstenv
daa
sub
dec
ret
cmp
jecxz
pop
sbb
dec
or
inc
loopne
push
pop
ret
int
repz
cmp
je
ss
mov
in
jo
pop
leave
and
sub
mov
hlt
jne
mov
push
ljmp
jne
adc
push
test
or
or
sarb
mov
mov
out
lea
adc
push
iret
and
enter
inc
push
sub
push
sbb
dec
test
test
pop
adc
push
sbb
or
fcmovb
out
out
push
jmp
jmp
notb
and
push
loope
push
add
or
sub
push
imul
loope
nop
pop
xchg
rorl
leave
ret
pop
loope
fnstsw
orl
je
je
push
into
push
pop
lret
imul
rclb
movsb
iret
je
cmp
test
xor
jmp
adc
repz
addr16
xor
lea
loope
loope
jge,pt
sub
ja
pop
outsb
loopne
pop
sbb
cld
inc
cmpsb
into
or
in
je
jne
push
call
pop
sub
jg
pop
or
mov
add
mov
jbe
inc
mov
cmp
addr16
push
inc
and
ljmp
mov
dec
imul
cmc
push
insl
inc
and
aas
dec
push
popf
xor
inc
scas
add
shll
xchg
jne
ss
cs
dec
std
fwait
cld
arpl
js
insb
push
sbb
les
push
iret
cmpb
inc
inc
movsb
dec
dec
out
sbb
cli
pop
dec
mov
jno
push
or
pusha
fwait
in
or
inc
sub
jmp
jmp
pop
and
sub
xlat
pop
cmp
cli
nop
mov
bound
add
mov
fidivs
cmp
push
push
add
jle
lds
push
pop
cmp
lea
call
pushf
cmp
inc
ds
repnz
dec
aas
jne
ljmp
fistps
and
or
icebp
push
add
ret
mov
pop
nop
adc
pop
fdivs
push
or
pusha
imul
repnz
mov
sub
popf
out
or
xlat
mov
je
push
jne
mov
nop
sar
jne
aad
lods
dec
popa
jns
cld
imull
lock
nop
sub
loopne
sub
out
mov
div
push
add
lock
sub
sub
jno
cmp
je
movsb
fistl
dec
cmp
outsb
jmp
scas
fildll
inc
add
inc
les
idivb
pop
and
jns
pop
mov
push
mov
xchg
lret
sarl
sub
inc
xor
not
sar
pop
or
icebp
lods
pop
bound
mov
xorl
call
sub
jle
pop
stc
pop
das
sbb
adc
jae
cmc
jnp
clc
cmp
add
or
inc
outsl
push
or
pop
addr16
roll
xor
mov
adc
test
cmp
xchg
dec
je
pop
push
popf
repz
les
xchg
rorb
jne
clc
xchg
inc
mov
test
and
fnstenv
sbb
mov
push
fnstenv
push
sbb
mov
mov
push
imull
push
roll
rcll
jp
xchg
xor
sti
xor
mov
ds
sbb
xor
rcr
pop
mov
addl
popa
xor
popf
pop
push
idivl
mov
iret
cmp
inc
pop
mov
pusha
mov
pop
inc
mov
out
xor
or
add
pop
inc
jns
inc
mov
arpl
aaa
push
pop
mov
dec
mov
dec
mov
add
ja
jae
push
ja
add
add
add
std
loopne
fimuls
push
mov
push
call
sub
mov
cmp
push
add
add
sahf
dec
call
pop
pop
fsubs
add
inc
add
cmp
sbb
xchg
or
test
int3
or
hlt
cmp
sub
ss
add
fcom
sahf
clc
divb
xor
sub
inc
jp
movsb
jae
push
cs
mov
jl
mov
pushf
mov
or
repnz
lcall
push
sub
test
adc
scas
adc
flds
and
or
push
inc
adc
pop
call
pushf
outsl
jne
notl
push
mov
mov
xlat
inc
out
push
push
inc
lret
push
ficoms
and
adc
push
into
les
or
sbb
jns
enter
xor
and
shll
lods
out
daa
sbb
pop
iret
xor
mov
sub
mov
inc
outsl
lea
pop
xchg
inc
inc
xor
or
cmpb
dec
mov
jbe
outsl
inc
negl
jecxz
add
or
push
inc
ss
or
push
dec
iret
xor
hlt
bound
xchg
or
arpl
cwtl
xor
xchg
sbb
js
adc
push
outsb
xchg
dec
mov
push
lcall
jp
pop
ja
add
adc
xchg
push
add
add
sbbl
push
fs
push
pop
xchg
pop
adc
pop
jge
popf
fistl
roll
pop
outsl
inc
ja
popl
sbb
pushf
imul
out
adc
ljmp
sbb
ret
lahf
sub
pop
test
xchg
adc
jle
lea
test
test
sbb
pusha
inc
fstl
cmp
int3
je
dec
notb
arpl
and
iret
and
jne
or
adc
sbb
jb
add
cmc
and
cs
std
add
lret
scas
ret
pop
ret
mov
or
shlb
mov
jecxz,pt
lret
xorl
fdivrl
mov
daa
xor
cmp
cmpsl
add
leave
pusha
rorb
dec
mov
shr
outsb
adc
in
cmp
imul
clc
push
inc
stos
jmp
xor
decb
stc
dec
xchg
or
jge
inc
or
testb
das
in
xchg
jecxz
jns
mov
or
cmp
lods
pop
adc
push
pushf
inc
dec
sbb
cmpl
push
or
mov
push
daa
dec
repnz
mov
movsb
arpl
lea
push
sub
cmp
movsb
jecxz
mov
in
insb
mov
xor
add
movsb
cmpsl
xor
cmc
loopne
stos
aam
int3
lret
dec
std
xchg
cmp
insl
arpl
sti
loop
outsl
inc
xor
daa
in
test
xchg
ss
daa
push
or
lods
push
or
push
rclb
psadbw
or
push
cmp
clc
int
cmp
xorl
inc
scas
pop
sbb
push
dec
cmpsl
xor
addl
sub
mov
dec
int3
sub
fbld
xchg
insb
shll
push
aam
ds
mov
jns
xchg
push
sbb
and
sbb
movb
push
dec
insw
push
into
pop
pop
dec
sbb
arpl
push
mov
adc
jecxz
filds
andl
cs
sub
lods
inc
and
loopne
sub
xor
pop
push
dec
pop
cmp
arpl
cwtl
aam
jp
sub
gs
int
pop
js,pt
xchg
aaa
js
or
jbe
subl
lea
push
xor
mov
xchg
test
aaa
cli
rol
pop
mov
add
push
roll
push
in
aaa
cmp
xor
inc
movl
inc
push
sub
inc
je
call
aas
insl
cli
xchg
aaa
aam
push
gs
mov
or
jbe
cmp
mov
sahf
mov
add
sub
add
adc
aas
xor
xor
sub
or
push
xchg
test
add
push
pop
sub
fiadds
jno
sbb
ss
mov
pop
push
push
adc
or
aaa
loop
xor
sub
pop
arpl
sub
rorb
inc
mov
inc
sbb
push
mov
cmpsb
cmp
icebp
cmp
adc
rorl
xor
call
inc
cmp
test
sub
shrl
or
push
sbb
jge
ja
cmp
je
lahf
jnp
mov
fstps
cmp
fwait
add
in
sub
cltd
push
mov
sbb
sbb
lret
add
jle
jmp
mov
jg
inc
ret
jne
test
dec
int
lcall
divb
sbb
fwait
les
and
es
mov
push
xchg
loop
pop
call
xchg
or
push
dec
push
pop
aaa
adc
cli
dec
jnp
cmc
mov
push
test
jmp
or
xor
dec
scas
add
xchg
pop
jmp
mov
es
cwtl
lds
cmp
and
outsl
shl
push
out
pop
xchg
xchg
adc
cmp
mul
push
mov
test
pop
div
add
cwtl
out
shrl
daa
xchg
inc
jnp
and
das
sbb
jne
xchg
inc
or
pop
or
sbbb
shll
out
ds
dec
lcall
imull
std
nop
jp
push
jmp
mov
and
mov
int
jns
sarb
pop
mov
cmp
insb
repz
test
clc
cmp
jns
dec
dec
jp
xor
sub
aam
fsubl
fnstcw
cli
sub
sbb
jge
out
repnz
cmp
ja
in
dec
jnp
cmpsl
cltd
hlt
and
or
mov
dec
add
mov
call
cli
scas
dec
lock
mov
sti
mov
call
jge
sbb
mov
and
push
xor
enter
fistpl
mov
sbb
sahf
or
negb
in
inc
adc
jge
cmp
faddl
idivl
cmp
jmp
rcll
movsl
pop
ret
sarl
call
pop
pop
inc
inc
test
adc
scas
push
inc
fdivrs
dec
push
push
rcll
call
cld
das
test
jl
and
cmp
or
loop
push
push
mov
push
sub
mov
jp
je
lea
push
push
es
fs
push
jbe
jmp
popf
ss
cmp
push
push
cld
sarl
or
push
pop
pop
jne
pop
pop
lds
sub
movsl
jne
aad
add
test
or
pop
push
stos
xor
pop
jmp
loope
clc
mov
loop
scas
mov
add
iret
xor
dec
jg
push
jne
pop
pop
and
xchg
xor
jb
ss
lea
xor
mov
adc
idiv
mov
push
xor
insb
stc
and
push
pusha
jp
xchg
dec
push
pop
xor
ret
sub
pop
push
mov
ret
repnz
int3
xlat
popf
xchg
jle
xchg
lods
repnz
jp
cld
push
push
cmp
outsl
pop
addr16
lret
cltd
xchg
jge
cmp
push
js
addr16
push
aad
aaa
or
insb
push
push
ret
out
sti
dec
push
es
ret
in
sqrtps
pop
pop
popf
cmp
faddl
sbb
fimuls
or
lods
sbb
xchg
test
and
sarb
push
mov
lods
imul
inc
repz
mov
cmp
jae
inc
lret
sub
and
call
or
loopne
push
in
xor
out
pop
sub
cld
ss
jnp
fxtract
dec
into
sub
sar
inc
jno
lea
xor
test
loope
dec
sbb
loope
cmp
rclb
xchg
cmp
add
push
loope
add
cmp
rcrb
cmp
add
xlat
mov
push
add
pop
dec
mov
jp
cli
mov
pop
or
sbb
js
add
idivl
aas
adc
xor
sbb
aaa
nop
mov
pop
mov
clc
iret
adc
inc
jmp
loop
add
notb
cmp
inc
es
and
clc
test
mov
push
scas
aas
aaa
inc
or
rcll
push
ss
cmp
pcmpgtw
jl
jae
fcoml
jne
repnz
cli
cmp
mov
dec
lock
dec
push
repnz
fdivrs
xchg
push
inc
xor
mov
cltd
leave
je
push
sub
sbb
icebp
add
fnstsw
mov
scas
into
xlat
mov
lods
adc
jb
je
cmp
jne
inc
mov
cs
ss
imul
add
cmp
jae
xchg
mov
bound
rcl
mov
and
or
imul
gs
testb
leave
jp
cmp
xor
jp
sbb
add
out
int
cmp
cwtl
add
cmp
lret
add
push
call
loope
daa
cld
call
inc
test
imul
or
and
repnz
xchg
inc
data16
cmp
jne
mov
jns
gs
mov
sub
or
ss
mull
fnstenv
imul
loope
and
sbb
cmp
repnz
aam
repnz
xchg
cmp
pop
jae
jmp
pop
ljmp
pop
js
les
jecxz
lock
mov
push
dec
fs
pop
popf
inc
dec
lds
fildll
add
push
inc
movsb
mov
ret
in
inc
jne
lahf
shll
cmp
mov
sarb
push
test
je
inc
fcoml
or
push
jp
lea
sbbl
loop
sarl
fists
cmp
clc
pop
fnstsw
pop
xchg
loop
popa
or
mov
or
rolb
push
or
push
pop
fstl
and
push
add
jne
orl
je
cld
xchg
adc
pop
js
jge
and
push
cmp
add
push
mov
mov
sbb
test
sbb
jmp
add
orl
inc
aad
or
hlt
push
pop
and
pop
clc
cmp
and
cli
adc
push
pop
addr16
adc
push
cli
inc
or
pushf
push
xor
push
push
clc
xchg
sbb
outsb
sbb
js
adc
imul
pop
leave
push
pop
scas
loop
int
pop
mov
outsb
sbbb
daa
xor
bound
adcb
ret
jg
xor
mov
or
adc
pop
add
xor
rdtsc
cmp
fistpl
pop
jl
or
mov
jecxz
testl
adc
cmp
xor
add
mov
cmp
sbb
cmp
or
jnp
inc
or
dec
fisubrs
pushf
pop
pop
pop
mov
sub
mov
xor
out
cmp
ret
cmp
cmpsb
cmp
mov
pop
pop
mov
cmp
fsubr
and
xor
xchg
lock
cmp
mov
pop
sub
add
pop
popa
mov
dec
pop
in
mov
xor
outsb
xor
mov
pop
fiaddl
mov
icebp
adc
xor
icebp
repz
stc
fs
mov
inc
popa
xor
iret
inc
sub
enter
jne
enter
js
popa
addr16
out
js
inc
div
out
mov
push
cmp
out
and
adcl
stc
popl
arpl
and
orb
inc
cmp
iret
mov
adc
or
xor
je
push
call
pop
into
test
aam
fwait
xor
je
mov
inc
dec
xchg
cs
push
add
mov
jecxz
cmp
jl
dec
js
test
out
popa
mov
and
push
in
adc
es
push
stc
sbb
mov
jb
ljmp
dec
lock
or
cmp
aas
mov
and
xchg
dec
cli
sub
cmp
jge
in
mov
out
cli
xor
mov
es
das
xor
or
or
lods
outsb
xor
jmp
sub
push
push
aad
movsl
fldcw
jne
mov
dec
pop
leave
out
fld
sti
arpl
push
icebp
cmp
add
mov
xor
pop
xor
sbb
jne
mov
xor
xchg
xchg
dec
bound
mov
stos
xor
and
xchg
pop
bound
mov
clc
xchg
imul
push
cmc
inc
xor
add
das
or
lret
es
xchg
inc
fisubrl
inc
daa
push
mov
cmp
stc
sub
mov
fdivp
xchg
pop
jb
and
pushf
in
arpl
xor
mov
add
cmp
js
adc
sar
and
push
cmp
imul
mov
jmp
and
sub
adc
and
push
sti
jo
movsl
gs
lahf
fcmovbe
aas
das
ljmp
cmp
mov
int
lar
cmp
add
xlat
sub
loop
push
adc
call
or
jmp
loopne
cwtl
push
sahf
fisubrs
and
jmp
les
cmp
cmp
pop
push
orl
mov
xchg
push
int3
clc
jbe
mov
notl
outsb
sbb
pop
xor
inc
inc
or
rorl
xor
jecxz
inc
xor
xchg
ret
xorl
jmp
in
sub
icebp
fisubrl
jg
insb
divl
sbb
mov
xor
cmp
out
inc
push
les
xchg
xlat
and
inc
inc
add
xor
xor
fcomp
pop
je
pop
and
sub
lret
mov
out
push
loopne
loopne
pop
sahf
sbb
jae
pusha
sbb
cmp
cmp
mov
adc
adc
clc
cmp
jne
sbb
sbb
loope
cli
push
mov
mov
cwtl
jnp
aam
mov
pusha
in
sbb
rorb
xchg
daa
ret
scas
adc
ret
icebp
adc
push
xor
gs
pop
mov
pop
mov
lea
cmp
int3
xchg
pop
cmpsl
ret
icebp
loope
lods
sbb
push
dec
push
ret
pop
pop
sbb
mov
loop
and
sahf
xor
addr16
int
inc
dec
mov
mov
jmp
call
lea
dec
popa
mov
push
add
push
xor
loope
mov
and
jmp
cmp
cmpsb
add
movsl
adc
fldt
xor
outsl
jne
adcl
call
test
shrl
sub
lds
push
fimuls
xchg
xor
push
dec
xorb
cli
or
pop
loop
pop
add
xor
add
push
js
jae
add
add
inc
add
jne
add
add
dec
add
add
add
bound
add
push
add
inc
add
add
add
jb
add
add
add
ja
dec
dec
add
bound
add
add
add
add
jns
add
add
dec
push
jae
cmp
add
add
add
data16
add
dec
add
jae
add
add
add
add
add
jns
pop
add
add
add
jns
add
add
add
add
add
data16
add
dec
push
add
pop
add
add
add
add
add
add
jp
add
add
inc
add
xor
add
add
add
add
add
push
add
add
add
jb
add
jp
add
xor
add
add
add
inc
add
add
insb
push
add
dec
cmp
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
inc
add
inc
add
push
add
add
add
add
add
push
push
add
bound
push
add
inc
add
add
add
jns
add
add
push
add
add
add
add
add
bound
dec
add
cmp
add
add
add
add
dec
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jp
add
xor
je
add
arpl
inc
add
add
add
popa
add
add
pushf
cmp
mov
dec
mov
push
decb
sub
out
mov
xchg
sti
adc
out
imull
and
scas
add
inc
sub
cmp
xchg
inc
or
pop
xchg
nop
pop
rorl
inc
test
sub
xlat
out
or
push
jmp
in
test
in
rdtsc
aad
das
daa
test
and
leave
in
mov
addr16
sbb
es
jmp
mov
nop
mov
ds
pop
mov
push
xchg
mov
mull
sub
in
mov
jbe
outsb
mov
adc
rcrb
push
and
mov
mov
negl
test
in
aas
inc
cmp
dec
xchg
mov
push
cmp
dec
mov
in
pusha
xchg
ss
jne
movsb
call
test
xor
mov
mov
cmp
xchg
pop
je
sbb
jmp
test
dec
or
shll
or
or
add
adc
inc
adc
xchg
adc
jmp
int3
push
jecxz
or
pop
test
mov
hlt
mov
ret
test
mov
jg
jbe
xlat
pop
pop
ja
loope
inc
inc
cmpsl
repz
push
mov
jb
sbbl
add
pop
sbb
jo
sarb
out
xchg
out
pop
movsl
add
dec
negb
stos
lea
push
call
xor
inc
imul
push
rcrb
sub
sti
adc
imul
adc
sub
sub
inc
sub
pop
call
inc
imul
fstpl
popa
sti
dec
push
pop
xor
out
and
xor
push
addr16
insl
rcll
sbb
mov
push
mov
adc
pop
sbb
addr16
insl
arpl
jmp
mov
mov
mov
pop
sub
fistpl
cli
push
sbb
xor
pop
sbb
mov
mov
pop
jg
lds
mov
out
movsl
out
mov
cli
cmp
jns
or
push
into
push
cmp
pop
ss
inc
inc
scas
sub
loope
jg
call
lahf
cmp
aad
xor
out
mov
dec
cmp
xor
jnp
std
add
dec
fnstcw
test
call
cmpb
outsb
cmpsl
and
push
xlat
ds
mov
sub
cmp
pop
jge
jns
pop
mov
mov
dec
jge
jno
and
les
lret
inc
sub
repnz
add
push
xlat
xor
jge
test
jl
pop
jbe
cmp
mov
mov
mov
bound
or
adc
sti
das
in
push
jle
fadd
and
xor
jg
call
mov
xor
push
mov
inc
or
sub
cltd
cmp
aam
push
fimull
sub
jno
sbb
mov
dec
add
add
cli
mov
inc
shll
inc
cmp
sbb
aaa
ret
mov
cmp
ja
fstpl
call
pop
jmp
repz
mov
mov
jl
sti
dec
test
rcrl
stos
stos
push
cmp
mov
push
sahf
int
mov
in
je
or
lea
cmc
test
sbb
mov
pusha
sbb
lea
mov
dec
mov
sti
shll
sbb
or
js
sbb
dec
outsl
rorb
sahf
jmp
out
push
mov
cmp
adc
inc
add
push
inc
mov
into
cmc
pop
dec
sub
loope
add
rcr
mov
push
cmp
jecxz
sarl
push
adc
fstps
cmp
rcrw
mov
jae
and
inc
or
push
cmp
fidivl
sbb
push
add
xchg
or
fldenv
aaa
and
shr
add
mov
cwtl
in
loop
cwtl
and
jae
ja
je
xchg
mov
xor
xchg
aas
ja
mov
sub
clc
lcall
xlat
mov
cli
mov
rcl
sbb
xor
sub
test
or
xchg
xchg
shr
push
pusha
xchg
out
or
pop
cwtl
xchg
jge
xor
ret
cs
inc
movsl
pusha
jp
xor
ljmp
daa
cld
fsubl
lahf
fcompl
sahf
ret
mov
mov
testb
sub
sti
incl
inc
xchg
sub
lret
in
mov
fcomps
clc
sbb
push
adc
xlat
and
and
inc
or
aaa
outsb
add
jmp
sub
sahf
movsl
gs
addl
xchg
ds
lahf
cltd
mov
lret
rol
pop
imul
mov
aas
jo
xchg
dec
mov
int
mov
dec
jmp
pop
dec
cltd
rcpps
xor
xchg
cmp
hlt
pop
roll
testb
lods
and
jno
clc
cs
push
adc
andb
insb
mov
sub
out
lods
inc
test
cli
stos
sub
in
jbe
push
ret
pop
xor
add
adc
add
dec
inc
sub
into
mov
and
out
xchg
jmp
lods
xchg
mov
mov
rcrb
sbb
push
xor
pop
aad
push
and
test
mov
int
ds
scas
push
loop
and
inc
stc
inc
testb
rcpps
pop
loope
dec
inc
loope
add
int3
repnz
inc
or
pop
xor
jne
push
gs
mov
test
pushf
aad
xor
pop
loope
xor
inc
or
push
pop
adc
addb
test
jge
cmp
jne
sar
push
int
lahf
int
dec
fisubs
into
mov
xchg
in
adc
movb
jmp
into
push
sbb
cmp
repnz
inc
push
pop
sbb
jmp
mov
add
inc
pop
jmp
test
xchg
pusha
push
add
cs
pop
int
cmp
jno
and
push
cmpsb
leave
fisttpl
std
push
lea
jbe
pop
mov
andl
flds
sub
shlb
xor
test
sub
jmp
jp
out
mov
dec
fildll
jno
pop
jne
notl
repz
jb
ret
mov
jg
addr16
idivl
jmp
mov
pop
or
xor
sub
mov
and
dec
sarl
jmp
or
xor
fwait
and
pusha
push
mov
stos
dec
es
xchg
pop
xchg
inc
clc
sub
into
xchg
movsb
xchg
ret
push
sub
sub
cmp
inc
xchg
dec
push
mov
or
pop
inc
ljmp
xlat
loopne
push
loopne
out
popa
push
int
pop
and
sub
mov
sbb
add
sub
adc
jl
pop
jbe
out
shrl
xor
pop
dec
and
jae
sub
mov
jb
push
inc
adc
pusha
mov
xchg
decl
imul
mov
sbb
add
and
cmc
repz
mov
mov
dec
push
call
add
mov
shl
sbb
sbb
inc
adc
sti
sub
lcall
mov
stos
sbb
loope
pop
jmp
aam
sub
inc
jbe
inc
sbb
stos
inc
aas
xor
xchg
jne
push
sti
out
dec
adc
test
add
push
push
mov
std
ja
fs
jmp
xchg
inc
jmp
sbb
data16
adc
cmp
ja
and
push
js
divb
push
push
icebp
push
sbb
xor
sbb
pushf
or
or
sub
cmc
jbe
mov
call
push
push
dec
fcomp
dec
data16
inc
xlat
inc
inc
jmp
rcrl
mov
call
sub
cli
pop
test
ds
jbe
sbb
push
dec
orl
aad
loop
into
inc
sbb
fs
jae
popa
pushf
pop
pop
mov
scas
gs
jne
push
mov
sub
test
cmp
inc
adc
and
push
arpl
cmp
pop
jae
addr16
push
jecxz
ret
add
pusha
mov
mov
cmp
aas
je
xchg
jp
pop
adcb
aam
xor
lret
jno
jg
fildl
ret
shr
pop
mov
jmp
pop
dec
mov
xor
ja
push
and
mov
cmpsl
fistl
cmpsb
notl
movsl
ja
addr16
and
cmpsl
push
and
aas
inc
lcall
cmpsb
mov
inc
stc
pop
enter
in
cltd
fimull
cmp
xchg
arpl
xor
mov
or
dec
mov
popf
lcall
cld
aam
into
sub
lods
pop
ja
lea
ja
xor
mov
nop
jp
push
call
or
mov
filds
adc
mov
mov
add
pop
ja
call
sahf
insl
push
rorb
sbb
mov
mov
fidivl
bound
pusha
push
in
push
sbb
sub
fimull
mov
movsb
inc
xor
movsb
outsl
movsb
ss
push
loope
sub
xchg
mov
add
xchg
cmpsl
push
jl
cwtl
repnz
add
divl
mov
dec
push
pop
or
sti
push
lea
popa
and
arpl
mov
inc
popa
mov
dec
stos
or
mov
push
outsb
popa
push
jmp
mov
push
jp
loop
mov
dec
xchg
or
push
or
imul
hlt
bound
sbb
pop
cmc
mov
mov
call
aaa
sbb
jp
jg
in
into
mov
cmpsb
cmp
fnstcw
mov
pop
and
scas
jp
inc
push
sbb
cmp
xor
mov
cli
mov
test
sbb
dec
jg
cli
bound
arpl
inc
push
adc
cmp
jge
mov
xchg
xor
cmpsb
mov
out
cltd
hlt
mov
cmp
cmp
fdivr
stos
inc
mov
pop
mov
mov
popa
gs
and
jg
loope
push
repnz
inc
in
pop
xorps
incl
les
lret
jle
push
out
ficoml
shrl
cltd
neg
mov
push
and
das
arpl
push
mov
push
sub
enter
inc
inc
cli
cmp
test
fucom
cmpsb
pop
pop
dec
lahf
shl
pop
arpl
push
out
ss
inc
lods
xorl
adcb
pop
push
dec
push
push
inc
dec
push
push
jno
xchg
pusha
pop
jb
and
cmp
jbe
mov
aaa
in
mov
je
pop
jle
sub
jmp
sbb
cmp
pop
sub
xchg
jbe
push
mov
pop
jno
push
inc
jl
cmc
and
xorl
inc
mov
ret
mov
cmp
pop
or
fwait
insl
mov
mov
pop
das
mov
aaa
imul
or
test
push
in
shl
or
inc
sub
cmp
lahf
hlt
mov
add
dec
std
inc
push
hlt
mul
xchg
xlat
jnp
fdivrl
repz
sarl
ss
pop
repz
add
adc
je
pop
bound
stos
shrb
cld
jecxz
xchg
int3
sahf
jns
or
out
sbb
xchg
js
xchg
sahf
sbb
adc
gs
gs
bound
and
int
rorl
inc
out
push
ret
xor
or
dec
lods
inc
xor
imul
xor
fstps
loope
jl
stc
or
mov
pop
sbb
push
mov
js
arpl
cmpl
arpl
imul
pop
cmp
imul
push
dec
repz
push
call
and
push
out
ljmp
es
fwait
pushf
xadd
jecxz
mov
xchg
jg
xor
mov
jnp
dec
ficomps
sbb
mov
sub
fiaddl
push
push
jns
mov
mov
subb
shll
imull
mov
hlt
push
mov
hlt
nop
jle
inc
lods
pushl
mov
loopne
cmp
ret
add
cmp
sbb
dec
ret
cld
aam
imul
push
retw
fwait
pusha
inc
mov
cmpl
sbb
daa
inc
jp
nop
stos
inc
push
cltd
divb
add
add
jle
jns
pop
shrb
testl
mov
cli
ret
xchg
xlat
fcomp
subl
cmp
jns
dec
or
and
push
push
xchg
push
xlat
fildl
push
jb
jns
mov
int
jge
jo
mov
mov
je
sbb
pop
pushf
pop
fwait
movsb
ret
inc
ja
and
inc
push
add
outsl
ds
pop
xor
mov
rol
dec
mov
inc
shrb
jg
icebp
insl
out
daa
jecxz
jp
adc
jnp
divl
adc
mov
cmpsb
or
adc
add
cwtl
push
push
scas
push
cmp
ds
in
mov
arpl
xchg
and
arpl
notl
inc
mov
arpl
arpl
dec
arpl
dec
inc
mov
ss
leave
bound
dec
repnz
jp
dec
push
add
jb
dec
jp
int3
push
dec
pop
ljmp
xchg
adc
adc
pop
push
xlat
addr16
aaa
xchg
jmp
push
pop
pop
int
sbbl
fdivr
repz
decl
jp
pop
jne
andl
idivl
dec
jno
push
cmp
dec
loop
push
jge
mov
repz
bound
xchg
sub
and
mov
xchg
cmp
jns
mov
add
dec
add
sti
add
add
inc
pop
inc
pop
negb
clc
xchg
push
xor
arpl
stc
mov
xchg
fwait
inc
js
xchg
xchg
repnz
push
leave
or
test
enter
clc
sar
sbb
and
clc
xchg
out
add
or
in
inc
or
test
insl
sbb
jae
dec
shr
ret
arpl
std
inc
pop
sbb
cmp
pop
xchg
mov
ljmp
popf
idivl
mov
jmp
mov
ja
leave
jge
xchg
xor
mov
add
je
pop
mov
xchg
mov
pop
jmp
or
inc
pop
out
hlt
popa
jecxz,pt
add
mov
inc
push
roll
inc
je
jmp
aad
inc
jne
call
rclb
jl
arpl
lock
fnsave
cmp
or
add
fwait
jle
sbb
push
add
mov
insl
inc
jecxz
shlb
jmp
arpl
dec
popa
call
xchg
lods
rcl
sti
sbb
jnp
out
jns
jl
jle
sbb
sub
mov
call
stos
mov
clc
jne
xlat
cmp
mul
sub
sbb
jo
arpl
dec
push
adc
test
jp
mov
aad
adc
pop
push
ja
cmp
ljmp
pushf
cmp
push
cmp
test
xchg
push
add
test
lea
jmp
xchg
jnp
add
in
push
jg
pushf
jb
xor
add
add
add
add
add
add
add
ja
add
add
add
add
xor
add
dec
add
push
add
add
add
add
add
add
dec
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
je
add
push
add
add
bound
add
add
add
add
add
add
add
add
add
add
jb
add
jp
add
add
add
jne
add
add
add
outsl
push
add
imul
push
dec
dec
add
push
add
add
add
outsb
add
add
add
add
add
add
cmp
add
jne
bound
add
add
add
push
add
add
add
xor
add
add
data16
add
add
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
inc
add
add
add
add
add
push
add
add
ja
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
or
in
and
add
shlb
je
add
and
xor
dec
iret
jns
push
cmp
aaa
xchg
xorb
xor
cmp
lcall
mov
push
inc
daa
js
jae
pop
pop
xor
arpl
and
or
aaa
gs
ja
mov
shl
xor
inc
in
push
fists
cld
inc
test
push
dec
fimull
pop
mov
xor
cmc
and
jg
inc
fcoms
cmp
push
jp
push
test
mov
add
mov
fldt
jp
xor
or
ret
inc
jb
lock
and
shll
icebp
mov
jmp
scas
or
dec
adcl
add
push
xor
bound
mov
shll
add
or
int
inc
push
aas
mov
cmp
sub
and
dec
mov
push
fisttpl
xor
pop
push
fistl
xchg
insl
push
mov
mull
jo
push
push
mov
xchg
xor
mov
fucomi
pop
arpl
ss
bnd
cmp
inc
ja
or
mov
cli
pop
dec
jp
in
jae
lods
cltd
dec
test
in
inc
sbb
xchg
mov
mov
fisubs
push
or
in
add
cmp
xchg
sbb
std
mov
int
int
xchg
inc
mov
push
or
or
push
push
mov
popf
sbb
daa
sarl
cmpsl
dec
pop
pop
ss
ss
mov
addr16
mov
cmpsb
fidivrl
call
aam
xchg
sbb
je
cltd
mov
insb
push
lods
lahf
pop
pushl
and
negl
imul
cmp
mov
add
inc
jnp
push
lea
add
repnz
mov
cltd
rorb
cmp
pop
sub
cmp
push
int3
adcb
out
stc
mov
xchg
add
sub
shll
cmp
out
adc
out
fs
movsl
and
xor
xor
dec
bound
mov
pop
test
adcl
fs
or
into
mov
fimuls
jnp
xor
mov
cs
push
mov
adc
push
add
pop
push
mov
adc
pop
inc
mov
ret
ret
gs
mov
cmpsb
popa
mov
xor
cmp
lret
mov
or
mov
pop
xlat
out
fbstp
dec
mov
cmp
ds
je
push
loope
cmpb
scas
jg
or
clc
mov
negl
push
jmp
cli
jge
jno
cmpsb
mov
pushf
sbb
scas
lahf
fs
lret
dec
rcr
fs
movsb
xchg
insl
pop
test
push
xchg
outsb
add
into
jp
push
les
inc
sbb
jg
ja
or
dec
rorb
push
fstps
fimuls
andb
mov
aam
pop
and
sti
mov
adc
lahf
or
or
pop
fbld
lock
enter
test
pop
sub
lods
lret
push
mov
add
pop
popa
cld
mov
and
adc
xorb
in
addr16
jae
ds
push
lahf
enter
mov
ds
push
xor
xlat
mov
mov
jns
sti
aam
lea
xchg
sbb
cmp
stc
cmpsl
iret
jnp
xor
out
push
loope
pop
fstps
adc
pop
xchg
xor
add
inc
sub
lret
jp
jmp
fdivrs
adcl
and
daa
mov
dec
or
mov
mov
fdivrl
pop
pop
idiv
push
or
mov
sbb
cmp
pushf
pop
sub
fstpt
or
icebp
movsb
push
mov
aam
lods
aam
mov
xchg
sub
shll
fsts
nop
pusha
jecxz
jge
xchg
pop
mov
cwtl
mov
sahf
mov
or
ss
and
push
into
pop
int
inc
xor
fs
stc
std
lahf
xor
movsb
or
xchg
dec
lret
pop
and
stos
sub
xchg
xor
sbbb
sbbb
dec
in
xor
push
sbb
or
mov
ds
cs
sbb
xchg
mov
add
inc
jp
enter
fnstcw
pop
mov
ficompl
int
pop
int
and
outsl
xor
loope
mov
adc
mov
call
inc
in
inc
cs
push
stc
xor
mov
and
push
add
popf
nop
mov
fidivrl
cmp
loop
or
pop
push
mov
out
push
lret
leave
fucomi
sub
ror
lret
cmp
or
cs
insl
sahf
scas
fisubrs
xchg
dec
mov
mov
enter
stos
ret
push
mov
sub
dec
clc
in
cmc
in
sbb
adc
fstl
jns
sbb
cmp
imul
or
pop
sarb
inc
add
dec
orl
data16
cmp
outsl
pushw
and
lds
or
cmp
pop
fisubs
ret
imul
loope
add
xlat
cmp
add
fcoms
add
cli
push
sahf
or
push
nop
lahf
sub
test
sbb
inc
adc
jns
sbb
push
rcll
dec
or
lcall
dec
stc
cmpsb
inc
inc
inc
xor
sti
xor
in
lahf
dec
lea
push
mov
push
push
faddl
in
xor
fidivs
pop
push
iret
xor
push
mov
add
pop
sbb
in
stc
lds
dec
pop
push
in
jnp
shrb
fldenv
fnstcw
adc
add
test
mov
in
push
sub
mov
ja
mov
lea
mov
dec
clc
jg
mov
in
inc
sbb
mov
pop
ss
mov
ret
test
xchg
dec
shll
sbb
loopne
data16
dec
std
jge
pushf
dec
enter
lds
cwtl
cmp
imull
das
pusha
jle
mov
push
bound
xor
clc
test
daa
dec
mov
dec
inc
aam
repz
push
in
loope
lods
push
or
sub
cli
mov
rorl
cmp
cmp
cwtl
push
loopne,pt
out
mov
sahf
movsb
sti
jmp
ss
xor
cs
cli
aad
dec
inc
jecxz
lret
repz
bound
insb
mov
xor
adc
cmc
push
or
in
int
cmp
aam
jl
imul
mov
cmp
in
jp
ja
push
imul
adc
ret
pop
lock
push
push
adc
cs
stc
push
or
int
pushf
fs
jmp
or
lcall
sbb
or
xor
mov
int3
dec
and
fcoml
es
stos
repz
fisubrl
enter
jge
dec
cmpsl
imul
divl
xchg
push
xor
inc
or
data16
mov
lea
mov
push
or
call
dec
sub
scas
rorl
popf
imul
or
mov
jno
into
call
lfs
cmpsb
gs
mov
add
int3
mov
dec
daa
mov
lods
js
push
daa
lret
inc
cmp
mov
mov
jge
and
out
jge
cld
bound
into
adc
push
mov
sti
cmp
sti
or
js
scas
ss
xor
xor
int3
jecxz
xor
xlat
lea
loop
push
in
js
imul
sub
dec
jl
dec
and
sarb
cmp
shr
push
lret
jnp
daa
notb
notb
dec
sub
sub
inc
xor
call
in
aas
dec
les
loop
in
xor
je
mov
pop
ljmp
in
add
push
sar
jp
call
adc
in
mov
sub
lahf
sbb
mov
pop
add
decb
test
fld
mull
es
sub
imul
adc
sub
enter
in
add
arpl
xor
fmuls
mov
loop
xchg
cwtl
mov
sti
ljmp
sbb
bound
inc
les
xor
sbb
mov
push
orb
sbb
inc
mov
mov
roll
call
inc
scas
in
in
fucomip
divl
in
jnp
daa
loop
or
mov
std
push
pop
inc
ss
dec
rcl
pushf
jae
xchg
or
push
mov
mov
jmp
xlat
pop
out
add
pop
pop
pop
mov
test
into
lods
mov
outsl
xchg
cmp
int3
mov
sti
push
inc
or
test
add
jp
call
inc
xor
pop
and
sub
push
cli
rolb
or
add
idiv
adc
push
mov
sbb
pusha
icebp
fimuls
int
sub
cmp
cmp
jae
xor
repz
inc
mov
pop
jmp
stc
out
stos
xlat
jns
mov
test
sbb
outsl
pop
cs
jne
es
pop
sbb
mov
xor
jno
add
mov
push
and
sub
ss
mov
sub
aad
sub
daa
mov
push
adc
mov
fsubrl
out
dec
daa
in
xor
pop
mov
lea
inc
in
push
push
lods
push
mov
mov
mov
sub
cmp
divl
cmp
addb
sbb
cmp
mov
and
cmpsl
inc
shlb
pusha
jl
pop
scas
xchg
into
popa
xor
mov
push
pop
push
push
and
in
movsl
push
mov
stos
mov
cmp
add
mov
dec
cs
jge
in
call
cmp
mov
imul
ss
adc
mov
push
insb
inc
and
aaa
and
sbb
popf
pusha
cmp
jecxz
jecxz
in
pop
nop
arpl
xchg
loopne
rol
mov
mov
mov
and
jnp
mov
xchg
push
xchg
lea
or
xlat
pop
and
add
sbb
mov
xor
inc
adc
push
cmp
inc
push
int3
repz
call
and
lea
cmp
pop
fcoms
outsl
shrl
xor
pusha
jle
cwtl
pop
and
clc
stc
sarb
lret
cmp
mov
inc
jge
mov
add
test
jge
dec
mov
pop
inc
arpl
jg
int
adc
je
dec
dec
or
sub
jmp
push
dec
inc
stos
outsb
mov
or
js
cmpl
mov
pop
lret
clc
or
pop
pop
ss
lea
decl
loop
dec
sub
aam
xchg
mov
and
test
sti
in
pop
or
outsl
lea
call
in
int3
inc
or
mov
int3
push
int
ret
or
mov
test
je
xor
dec
sbb
pmaddwd
jp
call
sbb
push
jecxz
sar
ja
or
pop
or
les
push
mov
lea
jmp
lods
icebp
pop
cmp
push
mov
ds
xchg
and
mov
cmp
filds
aaa
add
mov
cmpsl
imul
aam
sub
inc
or
paddusb
dec
lret
outsb
into
or
lea
iret
dec
pop
mov
test
pop
push
jns
and
dec
mov
cld
addr16
sub
add
cmp
sub
push
int
pop
mov
mov
imul
inc
fmull
sbb
sub
xor
push
xor
cmp
push
dec
pop
xor
jnp
push
cmp
xchg
sub
mov
mov
inc
sbbb
shr
inc
das
outsl
xor
mov
sbb
mov
and
jge
nop
fiaddl
add
dec
adc
xor
pop
out
mov
push
das
pusha
call
adc
sub
push
das
xor
xchg
jns
ja
addr16
and
push
in
insl
mov
dec
sbb
add
cmp
aaa
or
iret
xor
cmpsb
xchg
inc
loope
adc
iret
inc
shrl
loop
ljmp
mov
into
add
push
push
pop
xlat
sub
popw
iret
fdivl
xor
lds
inc
inc
loopne
faddl
push
shr
call
cmp
in
xchg
pop
ss
in
xor
loopne
popa
xor
sti
shlb
adc
add
sbb
cmp
add
or
mov
push
push
xlat
xor
jmp
dec
jbe
push
fldcw
int3
or
into
std
imulb
lock
into
pusha
je
push
movsb
mov
enter
cmp
jecxz
mov
cmp
mov
dec
sub
or
mov
dec
and
mov
sub
jg
sub
lret
mov
inc
mov
sahf
pop
sub
gs
rolb
call
pop
push
lock
arpl
fimull
and
pop
cmpsl
mov
mov
adc
inc
inc
and
cs
imul
sbb
and
mov
imul
pop
and
add
sbb
js
pop
not
test
or
xor
scas
pushf
es
lret
rcrb
pop
dec
xchg
inc
lods
xchg
push
push
xor
sar
scas
xorb
jge
mov
aam
mov
adc
jne
test
adc
push
inc
int3
jae
adc
jle
dec
push
dec
mov
or
pop
out
std
rcrl
bound
arpl
push
xor
addl
sbb
xor
xor
sub
sub
xor
dec
ss
cmp
in
insb
mov
sub
cmp
ret
jnp
repnz
fidivl
arpl
out
push
cmp
repz
mov
cmp
jne
push
and
xor
or
pop
sarl
daa
cmp
inc
stc
cmpsb
popf
into
adc
push
xchg
inc
adc
jg
es
cmp
loopne
and
lcall
dec
xchg
sbb
fsubrl
xor
and
sbb
in
xor
jg
pushf
jnp
movsl
and
cmpsb
arpl
xor
lret
mov
jae
mov
sbb
or
sub
lret
push
push
dec
xchg
mov
dec
add
mov
add
add
push
out
scas
or
add
jp
push
add
add
add
jno
add
jo
add
add
add
add
inc
add
add
insl
add
add
xor
add
add
add
add
add
add
pop
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
push
add
add
add
imul
add
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
inc
add
add
push
add
add
add
add
dec
add
add
inc
imul
add
xor
add
add
add
popa
add
pop
add
add
insl
xor
add
jbe
add
jns
add
add
add
push
add
add
add
add
je
add
inc
add
add
add
add
jno
insb
add
add
jb
add
add
add
add
xor
add
add
add
add
add
jbe
add
dec
add
add
popa
push
add
push
add
imul
add
add
add
pop
add
jb
dec
add
je
add
add
add
add
add
add
add
add
add
xor
add
jno
add
add
add
add
add
push
add
add
add
jne
add
xor
add
push
add
add
add
jae
dec
add
add
popa
add
add
add
add
add
add
or
fcompl
in
sub
sub
adc
sub
pop
pop
adc
sub
sbb
mov
mov
and
lock
sar
movsb
sbb
jbe
or
pop
adc
sbb
jg
xchg
pop
cmp
arpl
mov
lods
out
js
cmp
movsl
inc
dec
popf
push
xchg
add
mov
notl
push
sbb
cmpsl
xchg
pop
lock
cmp
pop
popa
dec
mov
dec
repnz
pop
xchg
loopne
icebp
push
mov
enter
sbbl
xor
mov
or
icebp
push
lds
xorb
in
lahf
mov
add
mov
jns
mov
push
loope
addl
out
and
sbb
mov
aaa
lods
testb
out
mov
outsl
cmp
inc
jae
jecxz
add
lds
sub
fwait
pop
repz
inc
xor
and
add
insl
mov
push
dec
fstl
xchg
inc
shll
jge
xchg
clc
sub
setge
daa
aas
dec
jne
sbb
and
les
outsl
mov
and
inc
pop
and
addl
hlt
mov
push
aam
out
fsubl
ret
call
fwait
popa
xor
lea
stos
sarl
jl
pop
mov
xchg
inc
cwtl
jge
lock
fucom
mov
cmp
add
mov
push
cmp
cmp
cli
subl
jo
shlb
adc
xor
fstl
adc
sub
hlt
or
test
imul
mov
enter
ja
rorl
and
hlt
loope
ret
mov
inc
iret
or
pop
loope
ret
leave
and
and
rcll
cmp
xor
or
aas
add
sbb
xor
pop
mov
lret
es
ja
dec
mov
mov
add
or
adc
mov
mov
fbld
in
xchg
pop
sub
add
ret
sub
and
xchg
ljmp
xor
pop
adc
cmpsl
jle
xrelease
lcall
mov
scas
mov
cmp
pop
adc
pop
sub
jecxz
push
or
push
dec
mov
push
push
add
cmc
js
outsl
pop
pop
rclb
xchg
push
add
mov
in
push
das
leave
fs
mov
rcll
sub
insl
pop
mov
adc
cmp
jp
and
scas
jecxz
jno
aas
push
mov
cmp
add
popa
jne
add
adc
jae
aas
mov
add
dec
inc
pop
test
xorl
int
jmp
ret
push
xchg
cs
imul
mov
sahf
xor
xor
fimull
xchg
rol
movsl
loope
push
cmp
inc
fstpt
sub
adc
lret
addr16
mov
lods
mov
jge
mov
add
ret
scas
jbe
xor
sbbb
ljmp
aam
mov
or
push
push
mov
insb
test
ljmp
inc
in
pusha
push
adc
mov
rolb
and
imull
xchg
and
pop
jge
mov
sbb
mov
fwait
inc
lds
shll
cmc
repnz
addr16
push
loope
and
mov
xchg
xlat
jp
jns
lahf
gs
dec
lret
jmp
mov
dec
dec
in
cmc
pop
and
jge
mov
scas
dec
icebp
pop
jmp
addr16
rcrl
dec
dec
dec
imul
and
sbb
out
mov
fwait
push
lds
subl
out
pusha
rclb
pop
push
jno
fwait
jmp
cltd
push
shl
out
lret
popa
pop
pop
mov
stos
xchg
mov
xchg
in
cmp
inc
stos
mov
pop
cmp
andl
xchg
fs
pop
xchg
jp
mov
mov
cli
aam
sub
mull
adc
and
push
push
divb
mov
out
xor
push
ds
push
add
sbb
mov
test
mov
push
mov
aaa
or
pusha
pop
xor
into
xchg
dec
cwtl
pop
out
mov
imul
ret
in
int3
jbe
rcl
xor
push
push
mov
push
js
arpl
xchg
sub
fldcw
sbb
sub
stc
cli
push
jne
xchg
add
adc
outsl
xchg
jne
mov
insb
hlt
in
icebp
mov
es
ret
mov
fistpll
push
push
sub
sub
xchg
xchg
push
cmpsb
sub
mov
incl
mov
xchg
imul
xchg
fcmovnb
sbb
stos
mov
out
decb
push
mov
ds
js
dec
xchg
xchg
sbb
cs
loope
movsl
loope
mov
xchg
dec
pop
dec
popf
push
xor
push
or
lea
leave
cmp
xor
dec
push
pop
movsb
fcomip
cmp
out
addb
dec
pop
dec
bound
mov
mov
pop
popa
sti
fdivrl
cmp
push
mov
pop
add
ret
ja
push
xor
jl
repnz
jnp
and
aas
xchg
pop
test
cltd
fldt
jnp
jnp
xchg
ret
imul
out
in
pop
bndstx
push
sub
mov
ficoml
cmp
filds
cld
jp
fildl
mov
inc
lock
call
mov
jno
mov
add
cmp
shr
add
add
cltd
gs
inc
adcl
gs
sub
dec
aad
popa
xor
jno
mov
mov
punpcklbw
sarl
add
imul
inc
dec
icebp
sti
push
insl
imul
mov
pop
sub
cmp
pop
push
jns
cltd
jp
fldenv
xor
pop
out
jbe
jle
pop
int3
pusha
jmp
or
or
cli
push
xor
es
fs
add
pop
inc
aaa
dec
addr16
iret
fs
fstpl
icebp
pop
aam
mov
cmc
xchg
inc
add
or
push
sarl
test
aaa
out
movsl
cmp
xlat
add
xlat
cmc
xchg
cltd
push
in
push
shll
cmpsl
daa
ss
ret
mov
addr16
jne
jns
mov
sahf
andl
sbb
pop
adc
sub
sub
jl
pop
cmp
ret
rcll
mov
push
pop
sbb
push
push
sbbl
or
push
xchg
mov
jbe
call
js
sub
bound
outsb
sub
mov
xor
mov
std
dec
mov
prefetchwt1
std
imul
xchg
fstl
scas
sbb
push
into
xchg
in
sbb
into
xchg
mov
mov
jg
xchg
xchg
lcall
loope
xor
cmc
push
movsl
adc
out
xchg
jne
jle
aad
mov
cmp
iret
pop
cli
adc
stos
push
stos
jbe
sti
add
ss
out
or
xchg
in
movsl
cmp
mov
pop
dec
add
dec
lds
mov
fcompl
lret
and
js
push
daa
inc
pusha
addr16
gs
adc
xchg
dec
jp
lods
xchg
add
mov
or
jmp
imul
out
es
mov
imul
mov
dec
mov
push
adcl
sub
sarl
fdivr
sub
add
pop
add
les
jno
dec
ds
bound
jne
mov
sub
aad
fimuls
lock
in
popa
push
sub
jnp
jne
pop
subl
mov
mov
push
fwait
mov
mov
cmp
shll
out
adc
or
cmpsb
orl
inc
xchg
pop
out
testl
aad
insb
inc
fs
cmp
mov
xchg
xchg
popa
loope
das
sub
jp
and
mov
icebp
aad
cmovae
pop
lret
in
in
std
testb
pop
lret
imul
cmpsl
jne
adcb
iret
adc
cmp
rcrl
cs
mov
sbb
xor
loop,pn
jp
orl
cmpsl
mov
mov
test
xchg
pop
pop
pusha
and
dec
inc
pop
dec
and
stos
push
ficoml
or
mov
adc
mov
cmp
push
sbbb
cltd
mov
mov
adc
add
sub
int3
pop
or
pop
fcoms
inc
in
in
int3
xor
cld
adc
add
adc
or
jp
adc
sub
and
in
sub
xor
cmp
mov
dec
push
arpl
or
fs
ja
mov
in
xchg
loopne
andl
into
adc
mov
loope
fwait
mov
enter
sub
movsb
xchg
xor
lods
or
aas
xor
or
or
movsl
mov
mov
rcrb
aas
fdivrs
in
call
adc
add
jmp
pop
adc
scas
insb
and
and
mov
xor
add
sub
or
dec
pusha
push
fs
insb
sbb
mov
cmpb
movsl
add
cwtl
pushf
icebp
insb
movsb
in
mov
mov
fildll
mov
loop
rolb
fadd
in
insb
loopne
in
loope
add
and
cld
xor
imul
scas
jnp
sbb
insb
aam
fsub
fmul
lods
push
in
movsl
mov
and
push
push
push
xor
popa
in
fldlg2
in
inc
sub
xlat
pop
xor
dec
push
loopne
in
pop
mov
adc
add
pop
or
icebp
unpcklps
and
movaps
jnp
xor
test
cmp
addl
dec
push
push
mull
pop
andl
fs
in
hlt
jg
xchg
adcb
out
xchg
cwtl
fcmovnb
dec
clc
add
xor
push
add
inc
add
xchg
mov
jbe
add
test
sub
cli
jo
js
xchg
stos
mov
rolb
sbb
js
xor
in
pop
sub
pushf
andl
add
lret
sub
fnstcw
cmp
push
dec
shl
pop
cmp
test
ljmp
in
sbb
sub
xor
sub
xor
fs
push
je
loopne
cmp
xlat
inc
movsb
mov
les
sbb
iret
in
aaa
out
jecxz
ds
push
adc
sbb
sub
jg
cmp
loope
cmp
mov
stos
fsub
cmpsl
in
cmp
and
sub
xor
cmp
lods
dec
dec
fprem
push
sub
mov
or
loope
cmp
pop
add
addb
int3
xchg
jns
loope
gs
or
cmpsl
sbb
adc
insb
or
hlt
xchg
les
loope
in
cmp
iret
sbb
fistpll
aad
mov
andl
push
out
mov
cld
pop
cmp
xor
xchg
lods
fistl
in
lock
sbb
and
stos
inc
or
push
push
or
cmp
je
jl
mov
je
lods
xchg
mov
insl
dec
les
jmp
iret
hlt
cmp
ret
or
imul
push
fdivrl
je
mov
xchg
dec
movsl
dec
movsb
push
lods
notl
aam
in
in
pop
popf
dec
cld
js
aas
or
lret
popa
sbb
push
push
xor
cmp
pop
mov
insb
cmpsl
jge
test
mov
lret
mov
mov
les
fsubl
push
push
inc
sub
add
dec
jp
cmp
sub
sbb
test
xchg
in
hlt
cmpsl
movsb
xchg
lods
iret
mov
in
mov
mov
adc
inc
stos
mov
fs
cmp
jl
popa
insb
mov
xchg
in
icebp
aad
scas
shll
sbb
aam
push
in
in
popl
mov
sbb
and
je
xor
cmp
test
push
push
pop
stos
lods
pop
sub
xchg
mov
fsubrs
cmp
and
ds
dec
dec
push
fs
cmp
mov
lea
mov
lock
sub
jns
push
lock
push
popa
cwtl
fcomi
dec
mov
in
rorl
cld
in
outsl
popa
and
adc
or
rol
sbb
adc
jns
and
add
cmpb
cmp
cli
test
fisttpl
pop
cmp
lds
aaa
jo
jmp
lods
mov
sbb
sub
aam
pop
mov
mov
sub
out
mov
cs
dec
mov
jmp
scas
aam
clc
cwtl
sbbl
dec
mov
ds
push
je
jge
pop
js
xchg
add
aas
test
xchg
adc
pop
sub
je
jl
inc
mov
pop
mov
xlat
int3
int
insb
fsub
in
frndint
or
add
cmp
push
jno
inc
ret
push
pop
int
pusha
insb
add
mov
jbe
pushf
xchg
sub
leave
in
in
in
hlt
lret
cmp
jecxz
push
leave
pop
test
mov
loope
mov
push
iret
lock
mul
mov
rcrb
call
jmp
cwtl
call
stc
loopne
push
insb
jmp
add
adc
sub
xor
cltd
jo
notl
cli
aas
push
repz
ja
and
repz
jbe
pop
lahf
pop
cmp
loopne
sbb
push
pop
xchg
insb
mov
sti
pop
lods
out
aaa
mov
cld
inc
sbb
push
push
xor
xor
insb
sbb
jl
mov
pop
pushf
cmpsb
divl
pop
mov
xchg
mov
cmp
xchg
xchg
pop
test
pop
les
push
add
mov
test
xor
inc
jmp
pushf
xchg
cmpsl
mov
mov
aam
shr
sub
ret
ljmp
and
push
or
aas
in
cmp
js
adcb
loopne
add
ljmp
in
je
orb
dec
jns
fdiv
mov
xchg
adc
lahf
cmp
loope
lahf
push
push
jl
test
aaa
or
aad
movsb
subl
push
pushl
pop
pusha
cmpsl
xlat
into
iret
and
add
pop
in
sbb
sbb
or
pop
sub
loope
pop
mov
pop
inc
loope
js
dec
inc
cmp
mov
sbb
sbb
lock
clc
fnsave
outsl
stos
in
cmp
adc
pop
xchg
cmpsl
sub
jo
stos
js
cmp
enter
cmpsl
cmp
ja
lahf
add
push
xchg
out
xchg
aas
mov
cmpsl
mov
ds
loopne
cmp
xlat
jg
mov
cwtl
mov
out
and
mov
push
enter
fdivs
movsb
sub
add
add
add
add
push
add
jne
add
add
insb
aaa
add
xor
add
add
add
add
add
add
inc
pop
add
add
add
add
pop
add
add
push
add
jo
add
imul
add
add
add
dec
add
add
pop
add
jb
add
add
add
add
add
add
add
inc
add
add
add
add
add
push
add
add
xor
add
js
add
add
add
push
add
bound
add
imul
add
insl
add
add
add
add
add
cmp
add
add
imul
add
jbe
add
add
add
add
add
add
dec
add
add
add
add
add
add
push
inc
add
add
add
add
add
add
push
dec
add
push
add
add
xor
add
xor
imul
add
push
add
xor
js
add
add
dec
add
push
add
add
add
add
add
add
dec
add
add
je
add
xor
add
add
dec
add
add
add
jbe
add
aaa
add
add
add
add
add
dec
add
push
add
inc
add
add
add
dec
add
add
inc
add
add
add
inc
add
add
add
add
insl
add
add
add
add
outsb
add
push
add
add
add
add
xor
add
add
cmp
push
imul
das
fwait
lods
cltd
cmp
pop
mov
lods
and
sbb
adc
inc
push
ffree
push
mov
sbb
xchg
add
xchg
mov
jge
inc
xchg
add
or
sti
inc
sub
mov
xor
sbb
adc
stc
and
xchg
ljmp
testl
push
add
xchg
push
lods
mov
mov
push
outsb
mov
sti
and
int
inc
xchg
je
dec
mov
xchg
xchg
test
inc
xchg
cmpsl
pop
mov
add
mov
inc
xlat
sbb
aaa
ljmp
inc
test
test
andl
cmp
lods
test
inc
outsl
test
pop
inc
adc
cmp
repz
test
jl
lods
adc
xor
aaa
inc
add
sbb
or
and
jp
es
pusha
and
test
je
or
enter
add
pop
sub
ljmp
call
xchg
iret
push
sub
push
daa
or
adc
movsb
cld
push
movsl
dec
xchg
bound
in
push
push
xchg
dec
sbb
dec
enter
xchg
dec
dec
xchg
dec
outsb
orb
hlt
push
fs
push
aaa
and
mov
xor
and
dec
pop
mov
and
and
cld
xchg
aam
push
adc
sahf
je
dec
xor
sti
push
push
loop
lahf
adc
aaa
adc
sub
adcl
test
sbb
and
push
pushf
xchg
add
rcll
push
mov
xchg
adc
xchg
iret
mov
xor
adc
cmpb
out
mov
jp
cli
ficoms
xchg
adc
loop
cmp
loop
jp
xor
pop
test
test
lret
xor
push
js
push
adc
es
shl
scas
and
pop
arpl
push
xchg
lret
sub
lret
sub
arpl
lock
lea
dec
mov
push
jnp
gs
lods
xchg
sti
dec
arpl
push
bound
push
adc
adc
or
sahf
leave
lds
std
les
xchg
add
fcoms
cmp
lret
push
or
cld
orl
push
xchg
add
mov
xchg
ret
lea
adc
movsl
cltd
div
and
fcoml
arpl
addr16
or
push
add
in
les
pop
mov
jno
adc
leave
mov
mov
rorl
xor
out
push
repnz
ja
jnp
arpl
inc
sub
pop
shl
punpckldq
imul
xor
xchg
lock
lock
sbb
lock
lock
shll
rorl
int
notl
cmp
and
or
dec
rorl
je
and
movsb
loop
aam
das
xor
xor
movsl
add
mov
jge
movsl
dec
xlat
cmp
pop
xor
sbb
fimull
xchg
push
call
add
shl
add
adc
pop
fistl
or
push
adc
adc
ret
faddl
lds
dec
jecxz
shr
lea
xchg
mov
xchg
call
insb
jle
loope
sub
cmpsl
or
icebp
into
or
xor
pop
js
inc
pop
inc
dec
andl
mov
jecxz
add
mov
lods
rorl
inc
jmp
mov
inc
cmp
insl
mov
test
fucomp
push
xchg
mov
sub
inc
js
cmp
lcall
cmp
pop
push
push
inc
sbb
sub
push
xchg
xor
cmp
repz
mov
xor
rcrl
pop
fcoml
scas
arpl
pop
add
fiaddl
mov
popl
pop
lea
mov
call
dec
mov
mov
adc
pushf
adc
mov
ja
dec
mov
stc
addr16
pop
xor
ljmp
mov
in
adc
rcrb
cwtl
pop
jnp
cmp
mov
push
enter
jne
lret
jne
inc
and
outsb
jo
jmp
mov
outsb
push
push
mov
xlat
push
inc
cmp
lahf
call
negb
arpl
lret
and
js
push
into
ds
jl
shrb
hlt
mov
leave
in
js
push
push
xchg
call
sbb
push
mov
neg
into
lea
push
cmp
lahf
jge
push
xor
or
into
and
mov
push
push
pop
pop
out
test
inc
subb
or
ja
xchg
jecxz
lcall
aaa
push
in
repnz
cld
cwtl
ljmp
mov
lea
cs
inc
xchg
fisttps
popf
push
push
cmp
dec
sub
hlt
xchg
inc
pop
addl
xchg
arpl
js
pop
enter
shlb
das
aas
sub
int3
movsb
mov
repnz
or
test
leave
mov
dec
mov
pop
inc
cmp
cmp
fidivs
popa
mov
adc
push
sbb
push
and
lea
out
stos
mov
xchg
repnz
cmp
cltd
mov
iret
addl
ja
ret
add
in
mul
std
mov
xor
add
je
inc
sub
das
gs
sbb
repnz
aad
fwait
fs
push
in
gs
xor
jecxz
inc
or
ret
outsb
and
in
push
pop
push
data16
pop
or
and
jne
or
sub
loopne
cwtl
ja
push
mov
repz
mov
pop
jns
xor
ret
icebp
push
push
and
and
sbb
int
int3
movq
and
lods
add
jge
lods
mov
in
popf
cli
sub
rcr
jecxz
add
inc
pop
loope
pop
sbb
dec
cmpsb
xor
jecxz
les
out
sbb
in
aaa
and
lret
js
into
xchg
ss
lds
mov
es
pop
dec
lds
mov
fisubs
and
cli
add
cmc
sub
mov
inc
fcomps
sbb
jl
pop
xchg
jp
aas
cmp
clc
mov
rep
cmp
or
push
push
pushf
cmp
arpl
dec
sbb
arpl
push
out
jo
stos
mov
cmp
cli
add
enter
xlat
add
pop
rcl
add
shrb
loop
iret
cmp
mov
inc
cmp
iret
mov
data16
or
sbb
repz
push
enter
lock
or
divb
insb
repz
jp
xchg
filds
loope
push
jne
xchg
push
sbb
insb
sbb
sbb
aad
cmp
push
ret
loope
sub
lods
arpl
sub
cmp
imul
inc
xor
sbb
pop
fwait
sub
xlat
add
ss
push
pop
jbe
cmp
inc
and
addr16
int
dec
mov
loope
sbb
test
jns
push
xor
enter
int
pop
mov
pop
add
mov
mov
sub
xchg
lcall
push
setae
test
aad
jmp
pusha
push
mov
movb
push
pop
sbb
mov
out
jne
jo
fistpll
lock
ficoml
lea
cmp
lods
adcl
and
repz
xchg
jbe
jp
jne
push
lcall
mov
xchg
pop
outsl
or
xor
jg
inc
fisttpll
popf
lcall
negl
cli
rolb
jge
daa
xchg
incl
add
repz
out
inc
aad
loope
cmp
sub
mov
xlat
xchg
push
out
outsl
mov
and
mov
pop
imul
fld1
xor
mov
push
inc
es
add
add
pushf
push
das
popf
and
xor
stos
int
pop
jp
adc
jp,pn
or
mov
cli
jns
inc
repz
mov
ja
andl
icebp
adc
pop
jl
in
daa
push
jne
leave
std
mov
jne
push
push
mov
jo
cmp
push
mov
and
sbb
shlb
cmp
xchg
xor
xlat
xchg
cli
imul
call
subl
add
jne
pop
add
lds
leave
cmp
xor
in
fisubrs
add
aad
push
mov
sti
adc
push
in
xchg
and
cmpsl
add
lahf
popa
lea
sbbl
push
pop
push
bound
add
adc
fstpl
and
pop
fs
push
or
ret
push
and
div
subps
call
pop
push
push
mul
jno
loope
sub
dec
mov
or
rolb
pop
dec
sub
pop
mov
jecxz
pop
pop
pop
and
stos
popf
shll
push
jecxz
cmpl
push
pop
js
sub
push
push
cmp
sub
jne
loop
sbb
fcoml
rorl
leave
shlb
arpl
loope
xor
xchg
push
loope
insb
ror
xor
inc
ss
sbb
inc
jo
add
insl
push
mov
test
sub
and
jl
lea
aam
push
dec
test
lret
push
add
into
or
jo
addr16
or
sub
icebp
dec
push
das
lds
pop
setne
mov
and
imul
mov
inc
aad
pusha
mov
push
pushf
pop
pop
mov
sub
add
push
add
insb
mov
fdivrs
fsqrt
xchg
in
dec
insb
pop
ret
pop
sti
mov
mov
xchg
mov
pop
lret
daa
or
push
xchg
out
divb
std
jp
xor
sub
adc
push
int
repz
jne
mov
js
sub
sbb
leave
ja
or
jne
rcr
imul
call
push
cmc
sub
int3
icebp
mov
call
shll
sbb
mov
xchg
jae
adc
inc
std
loope
lods
jge
aaa
jmp
sbb
push
popa
inc
xchg
or
mov
jb
ja
cmp
mov
jmp
add
in
mov
insl
lock
cmp
idiv
jae
pop
dec
stos
jmp
aas
push
sub
clc
jge
cmp
jbe
mov
hlt
aad
or
jbe
test
pop
decl
fnstsw
orl
repz
iret
into
add
adc
loop
test
jo
dec
jne
test
jmp
sbb
lahf
stc
mov
jl
xor
repz
je,pt
and
mov
cmp
and
pop
ret
sub
jb
nop
rorb
dec
insb
add
mov
inc
enter
lods
cmp
pop
or
jg
insb
shr
cmp
roll
fs
leave
add
mov
lds
pop
dec
jae
dec
ret
int3
call
push
dec
mov
mov
sbb
movsl
mov
pop
adc
mov
push
je
popa
xor
addr16
xchg
mov
sbb
fisubrl
call
bound
pushf
idivb
mov
push
cmp
ret
imul
sbb
out
push
xchg
aas
mov
lea
adc
cmpsl
add
out
push
or
cmp
lds
fimuls
jnp
ljmp
xor
jbe
xchg
ljmp
push
out
pop
push
push
mov
xor
cmp
pop
push
and
test
cmc
mov
inc
sub
jne
mov
inc
lea
add
lret
add
clc
mov
pop
xor
push
cs
xor
sbb
mov
test
js
jnp
int
lds
addr16
test
and
popa
jmp
repz
rcll
add
nop
sbb
adc
sbb
mov
pop
dec
jno
rol
and
xor
int
call
call
loope
gs
dec
dec
fisttpll
mov
xor
loope
dec
outsl
daa
pop
fistpl
dec
push
xchg
pop
and
xchg
sbb
push
dec
cwtl
sahf
testl
pop
movsb
test
mov
pop
ficoml
outsb
sub
and
adc
mov
das
pop
roll
cmp
nop
decl
pushf
mov
and
imul
call
sbb
jp
or
cltd
push
sbb
adc
dec
mov
std
sbb
sti
adc
adc
sbb
stc
ss
mov
jecxz
iret
es
testb
arpl
pusha
mov
sarb
popa
pusha
mov
push
sti
je
lea
pop
pop
push
xchg
scas
cmpsb
sbb
inc
jmp
and
fdivrs
insb
add
mov
push
xor
sub
mov
call
jns
scas
push
jno
pop
shlb
xchg
pop
xor
inc
outsb
pop
not
dec
adc
or
mov
push
inc
sub
mov
or
add
xor
push
call
xchg
adc
or
insb
movsl
rclb
pusha
cmp
push
sbb
pop
cli
or
imul
xchg
pop
out
dec
shl
xchg
das
dec
xor
push
gs
jle
pusha
sbb
sbb
ret
dec
adc
mov
sbb
add
test
loop
adc
sarb
leave
pop
add
or
loope
jge
xlat
jmp
mov
ret
adc
iret
fidivrs
mov
out
into
xlat
mov
dec
pusha
push
mov
js
mov
pusha
into
jnp
test
inc
aaa
jne
dec
jmp
dec
lock
idivl
nop
cmpsb
test
jns
and
push
jmp
push
stos
popf
jne
xlat
call
pop
and
ds
into
test
test
sbb
xor
sub
fs
pop
pop
mulb
loope
jnp
les
sbb
push
xchg
xor
add
mov
jecxz
push
cmp
jb
add
push
push
int
sub
mov
andb
int3
pop
mov
cli
loope
xor
cwtl
daa
add
dec
lea
or
rorl
adcl
sbb
jmp
sub
jno
daa
adc
jne
push
out
pusha
pop
add
popa
push
pop
or
pop
sub
ss
sbb
loop
out
or
push
aaa
outsb
and
xchg
mov
jae
scas
out
out
adc
jne
push
dec
es
mov
cmc
or
in
dec
jecxz
xlat
cld
lahf
shl
out
pop
dec
pop
cmp
mov
mov
adc
add
jle
fisubs
xchg
jp
mov
out
jb
or
sub
dec
out
sub
shr
adc
out
lcall
test
out
bound
jecxz
inc
push
movsb
or
sbb
out
es
ficoml
or
mov
jl
or
add
add
add
add
push
jns
push
add
add
add
add
add
add
add
add
add
add
add
jae
outsb
add
gs
add
push
add
add
add
push
add
add
add
js
add
dec
add
add
add
dec
push
add
add
add
add
add
data16
add
inc
add
add
add
add
add
pop
add
add
add
pop
inc
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
jne
add
add
popa
xor
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
xor
ja
dec
add
add
add
add
add
add
add
add
add
push
dec
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
inc
add
dec
add
add
aaa
js
aaa
add
add
add
add
add
inc
add
je
add
add
add
add
add
add
add
popa
add
add
add
push
add
cmp
add
xor
push
add
inc
add
add
add
xor
push
add
add
add
add
jne
add
add
add
je
add
add
inc
add
add
add
add
add
add
add
push
add
inc
add
add
xor
bound
add
xor
add
add
add
add
add
push
add
dec
add
jne
add
add
add
dec
add
add
lea
cmp
insb
dec
push
outsb
dec
je
popa
into
jno
imul
fisubrl
jecxz
xchg
jns
xlat
add
andb
push
stos
pop
push
outsb
imul
ret
je
xchg
mov
insl
cmpsl
jae
inc
addr16
arpl
je
mov
and
stos
push
and
mov
in
addr16
lods
in
cld
mov
xchg
int3
fnstenv
push
arpl
jae
fbld
popa
mov
ja
xchg
pop
cwtl
dec
sarl
aad
xor
push
cmpsl
loop
mov
inc
ja
dec
mov
jnp
aad
xor
push
vshufps
loop
pop
sarb
ja
mov
inc
ja
pop
lret
sbb
and
mov
imul
fs
sbb
inc
jp
daa
jno
insl
imul
dec
mov
jo
dec
ja
outsl
outsb
sub
xchg
ja
subl
dec
pop
and
jle
addr16
das
inc
mov
stos
aad
adc
shrl
mov
and
icebp
adc
subb
dec
xchg
cmp
xchg
jmp
pop
sub
dec
pop
dec
jp
jnp
sti
inc
pop
jecxz
push
fs
dec
dec
mov
nop
addr16
loope
jp
ds
adc
jp
dec
jecxz
push
arpl
inc
xor
cli
inc
sbbb
int
inc
fs
xchg
xchg
sub
jns
bound
dec
jbe
lods
dec
int
insb
sub
jbe
data16
insb
cmpl
xchg
jne
sub
jb
jno
jo
outsl
push
outsb
cmp
insb
push
imul
imul
and
inc
fs
push
bound
popa
xlat
in
sar
sbb
outsb
sub
jb
outsb
ljmp
jns
data16
addr16
shll
adc
dec
aad
loop
jae
push
jmp
push
ljmp
push
push
aaa
push
push
cli
push
popa
push
push
push
cmp
push
push
dec
aaa
dec
dec
cli
dec
popa
dec
push
dec
cmp
dec
push
inc
aaa
inc
inc
cli
inc
popa
inc
push
inc
cmp
shrl
jmp
fsubrl
and
cmc
insl
adcl
imul
inc
sbb
cmp
or
inc
dec
cmpsl
fsubrs
jge
jae
out
outsb
mov
inc
in
insb
xchg
aaa
pop
adc
mov
jg
sti
mov
dec
jle
pop
xor
aam
outsl
iret
das
cld
pop
jb
ret
bound
sbb
jp
inc
imul
loopne
xchg
incb
pushl
pop
jne
sarl
daa
fs
int3
cmp
shll
outsb
rol
fbld
pusha
sbb
pop
lds
mov
add
push
sub
push
cmpsl
jmp
leave
pop
bound
outsl
sub
dec
mov
dec
popa
aad
or
bound
push
xor
push
xor
xor
jmp
insb
loope
push
or
mov
inc
adc
inc
push
pop
arpl
loope
mov
jp
aaa
xor
repz
inc
cmpsb
dec
stos
pop
xor
mov
pop
sub
outsb
aaa
or
insl
cwtl
mov
jno
stc
ja
inc
insb
loopne
push
inc
aaa
and
imul
jnp
push
lock
adcl
and
xor
jp
cli
push
popa
xor
clc
xor
aaa
sarb
je
dec
loop
push
or
clc
xor
jp
shrb
push
dec
outsb
imul
lods
cmp
jmp
imul
mov
jns
in
and
popa
insl
cmp
jae
out
addb
jns
lds
lret
ret
xor
sub
push
and
sub
call
cmp
pop
dec
xor
pop
cmc
in
pop
xchg
jbe
inc
add
push
mov
jo
dec
in
jp
inc
insb
push
out
je
xlat
decl
xchg
mov
mov
jne
add
push
insl
mov
jnp
fisubrs
addr16
pop
push
es
pop
das
cmp
test
add
imul
or
mov
iret
pop
loope
and
addr16
nop
stos
outsb
inc
cmpsb
rorb
sbb
pop
and
gs
dec
lds
aaa
push
or
lret
inc
sub
inc
sub
jp
jb
pusha
jo
sub
xor
xor
xor
ss
cmp
jo
xor
inc
sub
cmp
push
pop
aaa
aas
sub
sub
push
and
sub
sub
repz
jp
jp
adc
sarb
adc
iret
rolb
mov
sbb
xor
pop
cmp
mov
js
and
xchg
push
sbb
and
pop
jns
mov
lcall
call
sub
stc
jne
push
adc
dec
sub
or
or
outsl
fscale
xor
mov
pushl
add
xchg
and
loop
sub
inc
pop
sti
sub
jnp
dec
loop
mov
push
ret
and
jmp
arpl
test
movsl
and
ret
pop
mov
shl
out
pop
ret
push
and
xor
and
je
sub
inc
jmp
aas
jnp
std
xor
push
dec
loop
push
push
aaa
pop
pop
cli
data16
or
add
andb
mov
xchg
dec
popf
outsl
movsl
clc
mov
jnp
mov
adc
mov
rolb
fimull
outsl
in
cli
sbb
dec
std
outsl
or
sbb
loop
and
or
aaa
add
decl
dec
call
push
bound
cmp
add
add
jg
out
jecxz
mov
test
mov
jnp
mov
mov
sub
stc
ja
sti
add
out
adc
or
cli
adc
push
sbb
add
xor
push
ss
or
stc
push
add
add
jo
pop
push
test
nop
jl
rorb
mov
push
clc
or
jl
xor
xor
jge
jo
xor
or
add
shrb
sarl
jns
ret
dec
or
and
lret
mov
out
aad
cmpb
inc
xor
sarb
pop
push
push
nop
or
lock
or
mov
cmp
arpl
add
pop
push
add
imul
out
pop
mov
mov
xor
or
cmp
pusha
or
outsl
stc
std
aaa
add
out
xor
imul
inc
loop
iret
pusha
stc
and
push
inc
adc
cmp
adcb
mov
movsl
push
mov
jo
rol
sti
leave
aas
jnp
aam
loop
iret
lock
and
inc
mov
repnz
sbb
or
jnp
aad
aaa
or
xchg
push
inc
adc
dec
mov
pop
dec
bound
inc
pop
imul
mov
add
xor
or
sbb
push
xchg
fadds
nop
pop
divl
cltd
inc
sub
imul
mov
push
or
iret
imul
cmp
loop
push
or
push
adc
bound
jnp
ds
push
inc
repz
inc
mov
pusha
stc
je
insb
stc
ret
mov
stc
mov
addb
add
mov
add
movsb
push
pop
cmp
aaa
mov
jnp
fnstsw
arpl
jmp
push
aaa
adc
and
jnp
adc
adc
aad
aaa
sub
inc
inc
bound
cli
dec
addr16
push
pusha
mov
aaa
addr16
jo
sbb
jns
imul
pop
xchg
cmp
loop
mov
mov
loop
push
and
lds
fcmovbe
jnp
jecxz
pop
in
jnp
cmc
push
sub
or
arpl
push
sub
sub
cmp
xor
dec
dec
popa
xor
inc
dec
push
xor
jb
add
inc
push
mov
shrl
loop
mov
sarl
into
aaa
rcl
arpl
faddl
push
pop
cmp
jnp
stc
cmp
stc
add
or
pop
data16
fbld
xor
pop
xor
cmp
lahf
sbb
push
pop
iret
cmp
mov
xchg
loop
or
test
add
aaa
xlat
or
fildll
std
aaa
repnz
cli
popa
or
push
sub
aaa
movlhps
mov
push
daa
loop
mov
push
dec
pop
outsl
arpl
sbb
ljmp
cmp
out
jnp
fwait
loop
push
cmpsb
loop
push
add
mov
dec
sti
testl
pop
icebp
jae
mov
repz
adc
pop
aaa
lock
xor
mov
xor
jg
pop
push
pop
mov
inc
arpl
and
add
pusha
sbb
pop
nop
pop
pop
mov
mov
add
xchg
rolb
sti
fxam
sub
adcl
add
out
sbb
sar
insl
xor
insl
cmp
mov
sbb
push
jo
jecxz
inc
sub
test
mov
xchg
rolb
popa
loopne
loop
mov
inc
stos
mov
clc
xchg
add
lret
and
cli
mov
sahf
popa
jo
loop
xor
addb
jp
dec
add
mov
sbb
xchg
rolb
dec
fidivrl
inc
xchg
lock
add
xlat
jnp
inc
addl
xor
sti
dec
xlat
add
mov
fiaddl
push
popa
pusha
aad
inc
jp
and
addr16
outsl
incb
cli
shrb
fistl
cli
inc
xchg
aas
arpl
inc
stc
out
addb
or
pop
filds
ja
pop
jnp
push
xchg
ljmp
or
jnp
ret
mov
shr
jnp
xchg
addb
and
adc
or
bound
cld
cld
sbb
and
sub
dec
xor
inc
cld
insl
add
dec
add
mov
jnp
dec
xor
add
add
mov
cmp
mov
sub
xor
add
testb
mov
pop
shr
push
xchg
in
and
xor
out
pop
fbld
cmp
pop
fildl
xor
add
dec
pop
jge
push
push
add
pop
jnp
bound
imul
mov
loop
lret
mov
cmp
xchg
rolb
dec
shlb
push
fldt
cli
in
aas
arpl
aad
aaa
incl
sti
or
int
sbb
bound
ja
sbb
out
lret
rcr
xchg
push
incb
xchg
inc
cmp
jnp
std
or
add
cmp
mov
insl
add
xor
mov
sbb
xchg
rolb
outsl
ljmp
jns
xor
aad
aaa
adc
cli
sbb
push
add
das
jno
cmp
cmp
push
push
aaa
or
popa
push
bound
dec
lret
cmp
mov
cli
xchg
outsl
cltd
std
and
mov
mov
iret
ljmp
popa
ljmp
pop
cli
arpl
and
xor
arpl
rcr
lods
mov
jnp
and
sub
pop
mov
push
aas
and
inc
pop
out
sub
test
add
xor
inc
popf
arpl
test
mov
cli
mov
rclb
loop
mov
addb
sub
lcall
and
adc
adc
dec
inc
dec
pop
add
or
insl
adc
add
dec
mov
add
push
pop
dec
out
repnz
mov
jns
jno
fadd
dec
out
mov
ja
sbb
pop
sub
shrb
sti
fdivr
and
jnp
jmp
repz
sti
cmp
push
js
xor
pop
test
adc
add
out
push
xchg
addb
jmp
mov
fmul
xor
adc
cmp
inc
loop
mov
ret
shrb
push
push
add
imul
add
js
adc
sahf
in
xchg
add
ret
and
mov
add
orb
cmp
xchg
sbb
sti
fcoms
out
xor
clc
aad
push
add
jecxz
jno
push
xor
adcb
add
iret
xor
add
cmp
jecxz
xchg
xor
data16
dec
fbld
and
add
xor
cmp
aad
aaa
xchg
add
sahf
addr16
out
stos
ljmp
inc
arpl
push
pop
cmp
xchg
fadds
in
or
cwtl
sbb
sub
insb
adc
mov
and
dec
cmp
push
ficoml
popa
dec
mov
scas
xor
pop
cmpb
mov
mov
jecxz
pop
xor
mov
sti
loop
or
xor
or
cli
or
call
sub
loop
pop
inc
imul
add
push
popa
adc
and
add
sbb
inc
andb
fwait
in
and
aad
ss
add
in
in
sub
aaa
push
pop
cwtl
imul
sub
sub
arpl
cli
sbb
mov
push
retw
lret
arpl
cli
outsl
mov
inc
push
imul
or
dec
aaa
pop
lock
xchg
jo
jns
andl
xchg
fs
fwait
mov
std
and
xchg
push
mov
xchg
sti
mov
inc
arpl
push
push
cmp
xchg
clc
sub
insl
or
mov
loop
push
and
push
sti
sub
outsl
arpl
push
or
outsb
jg
push
sbbb
ja
call
pusha
dec
cmp
fiadds
nop
and
fwait
and
pop
mov
add
cmp
pop
cwtl
xor
icebp
outsl
loopne
xor
rcl
dec
sti
and
mov
sti
mov
stc
or
clc
inc
fildl
dec
stc
es
inc
addr16
and
jnp
dec
xchg
std
and
pop
stos
aad
or
loop
mov
das
push
es
rorb
ret
xchg
out
and
outsl
pop
enter
mov
sub
repz
aas
xor
sbb
shll
pop
lret
xor
loop
mov
sub
pop
push
cwtl
or
push
scas
pop
sub
xchg
rolb
js
xor
adc
jmp
xchg
pusha
roll
push
mov
jmp
inc
cmp
pop
adc
in
lgs
xor
addr16
vmread
mov
add
stc
jmp
add
loopne
inc
arpl
rorl
addb
sarb
push
and
sub
xor
sbb
arpl
ret
enter
sti
loopne
or
outsl
mov
lldt
xor
push
jae
jnp
out
dec
jg
xchg
fldl
stos
aad
and
ret
into
push
or
fisubl
arpl
and
dec
lock
and
mulb
or
inc
and
dec
push
sub
mov
mov
sbb
add
jmp
push
adc
addr16
xor
xor
sbb
call
cmp
stos
outsl
jno
push
mov
addr16
cli
pushf
popa
and
push
add
or
xor
jno,pn
pop
adc
mov
or
imul
inc
dec
mov
je
ret
jg
mov
cmp
jns
fldcw
bound
pop
jae
or
adc
inc
push
mov
add
add
jae
jb
bound
imul
es
inc
sbb
lret
in
fidivl
sbb
fs
push
or
test
add
add
add
jno
add
dec
add
add
add
push
outsl
add
jo
add
add
add
add
add
dec
add
add
add
add
add
cmp
add
add
add
push
insb
add
add
add
add
add
add
add
add
add
jbe
add
add
inc
add
add
inc
add
xor
add
add
push
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
ja
xor
add
add
add
aaa
add
push
add
add
add
add
xor
add
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
dec
outsl
xor
push
add
add
cmp
add
inc
add
add
insb
add
add
push
add
add
push
add
insl
push
add
imul
add
dec
push
add
add
add
add
add
add
add
add
add
push
arpl
add
inc
add
add
add
add
add
add
add
add
add
add
dec
bound
pop
add
outsl
add
pop
add
add
add
inc
add
push
xor
add
add
add
add
add
add
add
xor
add
js
add
popa
cmp
add
cmp
add
add
add
add
add
add
add
add
dec
push
jge
pop
inc
pop
jnp
divl
fs
jo
and
pop
dec
jnp
xchg
pop
pop
pusha
mul
fs
push
push
aaa
je
mov
xchg
jl
insb
mov
pop
jo
je
sub
mov
jno
jo
outsl
xor
ror
outsl
pushf
mul
mov
test
lods
bound
shl
loopne
dec
lods
cld
aaa
cmp
mov
mov
pop
mov
push
les
pusha
jb
push
mov
fs
rol
xor
pushl
int3
push
shlb
shl
shlb
fwait
sbb
shlb
aam
js
xor
arpl
or
lea
jl
xor
mov
mov
nop
push
xchg
mov
arpl
bound
mov
nop
pop
xchg
negb
sbb
shlb
mov
xor
xchg
pop
jne
js
dec
pushf
jae
outsl
sub
addr16
inc
imul
jle
mov
les
cmpsb
mov
cmp
lcall
ret
cmc
sarl
and
push
xchg
push
jne
lret
mov
out
inc
fwait
or
movsl
pop
lahf
sub
jnp
fcmovb
dec
je
and
push
adc
xchg
push
xchg
pushl
jge
sbb
popf
add
push
lock
mov
pop
loop
or
stos
fmuls
notl
fsts
je
aam
enter
jmp
mov
sahf
mov
mov
add
sahf
mov
sub
fmulp
push
daa
fildl
cmp
dec
sub
sub
shlb
mov
clc
orl
sbb
jno
js
test
lahf
inc
repnz
ret
enter
sti
xchg
rorb
rol
loope
ja
scas
out
jnp
lock
sub
push
jns
test
rcr
cli
mov
into
adc
fdivr
and
cmp
pop
js
add
jnp
shll
xor
jle
push
daa
popa
mov
stc
xchg
and
ficoml
inc
mov
pop
call
mov
lea
decb
out
mov
es
or
sahf
add
lret
fidivs
push
call
xor
xor
push
mov
jp
and
fwait
xor
xchg
mov
rol
cmp
sbb
add
imul
and
pop
pop
mov
sbb
cwtl
gs
xchg
pop
icebp
sub
dec
sbb
pop
mov
clc
xor
push
mov
sbb
in
mov
cld
std
imul
fiadds
dec
fiadds
cmovnp
sub
test
sub
das
jge
daa
jg
ss
loope
or
rorl
aas
lcall
cmp
gs
pusha
fwait
add
mov
iret
mov
ljmp
imul
pop
sti
xor
jl
cmp
setnp
mov
js
push
adc
test
pop
popa
xor
jne
push
mov
lret
lea
out
adc
push
test
mov
subl
sub
push
cmpsb
sti
pusha
sbb
pusha
add
jmp
mov
call
repnz
or
cmp
and
ljmp
mov
add
in
push
roll
sub
dec
and
in
add
inc
fcompl
jg
sbb
int3
call
negb
push
pop
pop
data16
xchg
mov
movb
scas
add
hlt
out
sbb
cld
addr16
mov
cmp
test
ret
push
popl
and
sti
fnstsw
mov
sub
push
cmp
mov
test
xchg
jo
daa
push
int
mov
scas
ja
shrb
jbe
jb
and
mov
test
mov
add
push
int
popa
imul
xor
push
jmp
pop
iret
or
orb
lcall
add
mov
lods
push
movsb
xchg
pop
sub
mov
int
cmp
fcoms
rcll
add
add
xor
push
push
lea
mov
pop
data16
fmull
in
jnp
pop
xor
add
cmp
sti
out
push
daa
push
push
inc
call
ret
pop
push
jl
sub
fwait
cli
adc
sub
repz
add
dec
mov
fnstenv
sbb
sarb
xor
sub
ret
lretw
ret
fsub
sbb
das
loopne
js
daa
shlb
int3
dec
data16
imull
sahf
daa
testl
negl
stc
mov
fcomps
nop
push
in
pop
imul
call
jae
lods
cs
sbb
push
int
ss
add
lea
mov
cmp
lods
mov
push
icebp
loopne
cmove
ds
push
xor
popa
dec
inc
push
test
add
icebp
jecxz
cmp
jp
pop
mov
mov
into
lea
sub
push
dec
inc
bound
in
ss
jns
das
clc
push
cmpsb
sub
adc
mov
sub
adc
and
push
addr16
popa
push
or
enter
push
out
fwait
in
arpl
add
pop
cmpsl
adc
sbb
cmpsl
aas
adc
xchg
pop
add
jbe
cmp
jne
lret
repnz
shlb
mov
sbb
dec
fucom
scas
dec
jp
lds
pop
nop
cs
xchg
int3
xor
mov
lret
data16
push
push
mov
test
mov
push
dec
fdivr
mov
sbbl
cmp
push
dec
into
mov
divl
aad
out
fldz
cli
in
ss
gs
rcrb
push
jle
test
das
movaps
cmp
mov
and
sub
xor
js
adc
dec
cld
les
mov
mov
jmp
mov
aas
mov
xor
sbb
jp
ret
lret
ret
call
mov
repnz
mov
jg
xchg
sbb
push
or
jle
push
mov
jmp
push
push
mov
daa
push
ret
jp
shll
cld
and
arpl
loope
xchg
sbb
lods
shl
addl
fs
out
mov
in
adc
adc
mov
pop
push
imul
or
cmp
mov
dec
leave
data16
dec
push
and
inc
mov
mov
sbb
ja
push
and
fidivrs
jge
push
out
cmp
jo
push
fs
fwait
pushaw
insb
sbb
sbb
fsubl
cwtl
dec
jp
dec
shl
popa
imul
cli
push
pop
shlb
loope
loope
mov
in
xchg
sbb
popa
mov
stos
out
mov
jecxz
call
cs
aam
scas
cmp
fsubr
daa
hlt
bound
lea
fs
mov
mov
pcmpgtb
pop
sbb
aaa
cmp
xorl
push
xchg
push
sub
sub
jecxz
xor
int3
lock
stos
popf
jge
mov
dec
inc
mov
sub
push
push
or
push
pop
sub
jne
lea
jecxz
sub
mov
loopne
ret
loope
sub
arpl
fwait
sub
out
lret
repnz
out
xor
pushl
stos
scas
call
por
hlt
lock
sbb
add
push
shr
sbb
adcl
mov
mulps
add
sub
pop
add
ja
jecxz
hlt
cmp
cmpsb
aaa
test
leave
jno
call
pop
or
bswap
xor
loopne
push
jns
out
rolb
cmpsb
push
push
push
std
or
data16
dec
push
loope
outsl
xchg
adc
fbstp
xor
cmp
jnp
or
xchg
pusha
add
push
dec
iret
out
mov
mov
imul
or
rcrl
xlat
and
dec
cmp
mov
cmp
mov
iret
fldcw
sub
add
fs
lock
add
inc
scas
fists
arpl
ds
int3
or
push
mov
mov
into
mov
push
push
cltd
into
or
aaa
das
adc
push
sbb
stos
or
jecxz
out
add
push
jae
mov
adc
icebp
ss
pop
fwait
dec
pop
ljmp
xor
lock
sbb
int
inc
clc
mov
push
fnclex
sarb
mov
push
aaa
or
mov
aam
mov
call
das
and
dec
lock
mov
sbb
and
adc
lret
pop
cmpsb
cmp
into
addr16
out
and
stos
push
lods
das
lcall
push
ljmp
push
inc
rorl
les
inc
lods
popl
dec
fs
leave
sbb
in
hlt
xor
in
and
jnp
rol
jecxz
mov
repnz
xor
lds
mov
in
mov
cmp
fisttpl
mov
movsl
cmp
adc
cmp
fcmovnu
xor
adc
xor
div
pop
pop
adc
mov
mov
xor
cmp
lcall
aam
pushf
xchg
loope
mov
cli
ss
decl
inc
adc
jnp
packssdw
or
addr16
and
popf
je
cmp
bound
xorb
fcmove
mov
sub
push
rorl
insb
sub
sub
sub
jmp
out
or
jmp
mov
shlb
sub
jmp
loop
xchg
cmp
mov
push
pop
pop
mov
lds
je
xor
pop
push
add
adc
and
loopne
mov
mov
push
arpl
xor
jno
pop
stos
icebp
push
cltd
out
cli
jmp
push
or
popf
mov
sbb
sbb
out
jp
and
cmpsl
bound
call
adc
arpl
inc
push
lods
shlb
jns
call
mov
jmp
rcll
idivl
call
jno
mov
sub
rorl
push
dec
mov
call
repz
fwait
xchg
xchg
adc
dec
in
push
add
in
pop
popa
pop
mov
subb
out
xchg
xor
mov
loope
stos
mov
stos
sub
arpl
incl
add
jnp
sub
jno
ja
pop
loopne
imul
inc
pushf
aaa
addr16
clc
push
or
clc
jns
outsb
stos
cmp
shrb
pop
in
xchg
push
sbb
int
or
dec
xchg
js
int
faddl
jmp
xlat
cmpsl
sub
fldt
lret
data16
fidivs
shrb
aam
inc
popa
dec
rorb
dec
pop
stc
stos
jns,pt
out
fcompl
shl
pop
mov
sub
mov
adc
mov
aaa
adc
in
pop
mov
lret
jg
ljmp
shl
mov
pusha
cwtl
pop
cmp
out
mov
jp
and
out
adc
fxam
in
xchg
push
movsb
dec
sti
dec
add
pusha
data16
push
push
movsl
sub
scas
divb
cmp
iret
negb
out
out
arpl
out
cmp
mov
cltd
lcall
lds
cmpsb
pushf
iret
adc
js
cltd
icebp
ret
push
push
lahf
cltd
add
cmp
mov
dec
xchg
lahf
nop
xchg
in
out
stos
mov
pop
mov
rcll
mov
into
subb
je
xchg
or
xor
push
push
mov
adc
jno
jmp
fstps
inc
test
sub
mov
notrack
sbb
cmpsl
fbstp
in
arpl
nop
mov
pop
stc
addr16
mov
xor
push
loope
xor
sub
jbe
push
push
outsb
jmp
ja
call
and
add
notb
sub
fscale
nop
das
push
mov
push
inc
out
xchg
mov
or
cwtl
and
push
mov
xchg
roll
sub
fdivp
mov
outsb
call
idivb
aam
xchg
loopne
push
dec
mov
out
or
mov
mov
dec
mov
cmp
out
pop
inc
add
in
jp
in
mov
pop
imul
dec
push
push
adc
jns
sub
stos
jmp
and
fisttpll
push
jle
rolb
in
data16
test
or
fsubl
add
sbb
mov
add
lret
fcomps
mov
mov
push
and
push
int
cmp
lock
fildll
in
and
iret
cwtl
xorl
xchg
sub
jge
je
cmp
adc
je
mov
dec
test
std
xor
xchg
jbe
and
fwait
cmp
sub
cli
sti
xor
sub
cmp
xchg
mov
jbe
repnz
in
push
mov
test
push
je
rorl
cmc
or
into
cmp
rorb
std
and
fidivs
sbb
and
sbb
sbb
int3
incb
loop
ret
sbb
and
imulb
push
int3
test
sbb
mov
xchg
mov
or
hlt
rcll
bound
mov
jno
mov
inc
or
addb
and
mov
dec
inc
sub
inc
xchg
test
jl
addb
stos
mov
sub
xchg
mov
add
adc
stc
out
fs
jb
or
mov
push
or
inc
jne
in
lock
mov
lcall
xchg
leave
es
orb
jne
mull
cmpsl
pusha
inc
jmp
or
in
cmpsl
pop
in
andb
test
push
inc
rolb
pushl
and
test
push
dec
gs
pop
jl
dec
xor
aas
dec
in
loopne
sub
in
sub
jl
dec
arpl
lock
sub
sbbl
mov
lret
rep
mov
cmp
int3
jo
jle
cmp
mov
sbb
out
das
xchg
cvttps2pi
adc
sbb
clc
sub
lea
or
stos
adc
or
or
enter
or
enter
pop
aad
ljmp
fistl
push
fucomi
add
mov
fidivrs
scas
sub
sbb
dec
fisubs
out
decb
iret
popa
shr
mov
cmp
cmpl
gs
call
loopne
sbb
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
