cld
call
mov
push
mov
xchg
cmp
jbe
inc
cmp
jo
lea
fisttpll
mov
xchg
lea
in
idiv
xchg
dec
dec
cmp
jae
lea
mov
int
add
adc
dec
and
sti
jb
in
dec
dec
mov
lock
mov
ja
pop
cmp
mov
mov
call
jbe
mov
or
add
dec
cmp
jg
lea
xchg
jle
fidivrs
mov
in
lea
pop
add
das
mov
push
cld
mov
dec
dec
inc
mov
cmp
jne
mov
divb
mov
sbb
shl
mov
or
pop
sbb
add
mov
loopne
jg
pushf
imul
xchg
call
in
sti
jmp
inc
pop
pop
ret
jmp
sbb
rolb
mov
fs
inc
push
lods
test
nop
inc
push
sbb
sbb
mov
sbb
test
inc
ror
enter
push
rclb
shll
add
ret
lea
pop
fmull
add
pop
mov
inc
cld
clc
nop
push
cmp
pusha
adc
test
data16
imul
icebp
in
mov
cld
push
and
std
jnp
push
popf
in
bound
push
pop
sarb
dec
mov
cmp
jge
mov
divl
xor
jle
add
fistpl
push
mov
inc
mov
test
decb
push
cld
jp
inc
inc
adc
jne
mov
outsl
ja
call
mov
lock
pop
in
push
ret
loop
pop
fdivs
pop
sbb
adc
insl
fsubrs
mov
fs
mov
fadds
sub
inc
ret
cld
inc
adc
xor
jne
jbe
inc
dec
out
mov
in
dec
lock
hlt
hlt
inc
inc
outsb
xlat
pusha
push
xor
in
or
or
clc
dec
mov
divl
mov
sar
adc
cmp
out
dec
into
loopne
xchg
fmull
mov
mov
fnstcw
sub
push
add
loopne
cmpsl
pop
divl
imul
in
jns
arpl
inc
aaa
divl
hlt
mov
mov
fadds
out
call
jbe
je
loopne
negb
pop
divl
mov
out
push
xchg
cltd
adc
cmp
xchg
js
mov
xor
mov
mov
call
data16
dec
dec
adc
in
add
xor
xor
xor
inc
inc
xor
cmp
cmp
push
mov
lock
cmp
jbe
cmc
dec
cmp
jmp
divl
or
mov
mov
xorl
add
cmp
dec
cmp
jmp
cmp
inc
cmp
cmp
jle
js
inc
mov
cmp
inc
fwait
loop
adc
int
mov
jle
idiv
pop
cmp
cmc
sub
rcll
idiv
outsb
sti
pop
xor
or
cmp
mov
pop
mov
shl
adc
clc
std
outsb
ja
push
mov
push
fdivrs
mov
xchg
mov
sbb
out
fidivrl
ds
pop
movsb
fdivs
push
dec
mov
je
jbe
fmuls
pop
xorb
mov
aaa
dec
std
outsb
lds
fbld
cmp
sbb
hlt
mov
lds
and
mov
inc
test
jmp
lcall
lods
roll
cmc
dec
mov
mov
std
dec
mov
jbe
fisttpll
popf
add
xor
mov
mov
out
add
mov
mov
jbe
pop
lcall
mov
cmp
pop
mov
xchg
dec
aaa
adcl
mov
sub
jbe
mov
push
mov
cmc
inc
inc
leave
outsb
das
subb
adc
or
sbb
mov
loope
repnz
jb
jb
test
mov
and
daa
int
mov
xor
ss
test
nop
sbb
xchg
lods
jne
fisttpl
adc
pop
pop
mov
xchg
pop
cmp
sbb
mov
sub
dec
dec
dec
ss
mov
sub
test
loop
jnp
fsts
scas
mov
mov
xchg
pop
or
test
cmp
cli
mov
fisttpl
repnz
mov
or
jbe
inc
dec
inc
mov
or
cmp
lret
jg
lss
pop
add
push
mov
mov
push
lea
fnstenv
dec
and
and
lret
push
sbb
outsb
das
mov
or
sbb
outsb
dec
repnz
scas
or
imul
push
xorb
test
cmp
xchg
sbb
mov
jbe
and
dec
xor
jae
and
sub
lock
mov
icebp
push
dec
out
repnz
mov
xchg
pop
frstor
lock
into
cmp
cmp
divb
cmpsb
inc
enter
adc
lsl
pop
notb
push
std
pop
lds
add
lahf
fwait
cmp
and
inc
mov
mov
or
push
jg
sbb
or
dec
scas
mov
mov
inc
nop
out
mov
push
pop
jb
mov
orb
inc
pop
in
cmp
mov
inc
sar
jbe
dec
xor
xorl
and
inc
and
lcall
xor
add
fldt
mov
inc
push
clc
dec
cld
ss
divl
test
jne
or
movlps
dec
je
inc
imull
hlt
gs
push
or
adc
or
jne
push
cmp
call
sub
movzwl
dec
test
jb
insb
xchg
mov
add
lea
mov
inc
mov
ret
or
xchg
mov
add
cmp
cmc
loop
outsb
ffree
ds
jl
pusha
lret
sbbl
sub
fildl
jb
adc
push
cmp
cltd
ret
jle
adc
cmp
sbb
out
dec
rcll
add
and
sbb
call
aaa
cmp
test
incl
inc
ret
outsl
mov
ret
jmp
dec
imul
adc
push
push
idiv
mov
je
popa
insb
inc
insb
insb
outsl
arpl
jb
mov
dec
bnd
arpl
add
bound
mov
pop
dec
fs
imul
inc
outsl
jb
pcmpgtw
test
mov
dec
rep
jbe
cmp
std
add
cmpl
lock
out
je
repnz
dec
test
outsb
lods
fld
xchg
mov
sbb
add
rolb
add
je
or
mov
lret
call
fisttpl
adc
and
xor
aas
icebp
nop
jnp
sbb
add
and
and
icebp
add
sub
fimull
xchg
add
aas
jp
push
push
ret
es
lock
repz
jne
inc
lret
call
mov
je
cmp
repnz
loope
push
add
loope
mov
or
std
inc
sbb
cmp
aam
push
inc
mov
call
inc
dec
hlt
not
push
out
sub
mov
sub
adc
lea
jnp
mov
in
inc
xor
dec
or
push
add
in
adc
loopne
mov
dec
jl
rcrl
sarb
or
fmuls
lock
sub
cwtl
cmp
mov
inc
or
dec
js
xor
sub
xor
mov
jnp
mov
cmp
and
pushf
cmp
and
push
mov
loope
mov
cmp
or
jns
mov
popl
mov
jmp
inc
gs
mov
data16
movsl
outsl
fwait
jno
sub
pop
imul
js
imul
inc
bound
jle
outsw
jns
dec
imul
fldt
pop
imul
outsl
ja
mov
data16
out
in
pop
pop
jle
inc
gs
add
jb
add
xor
adc
ds
mov
cwtl
cmpb
sbb
cmp
xor
mov
add
push
cld
insl
or
ss
test
jge
notb
adc
adc
fstpl
mov
jge
sub
sbb
push
negl
into
jo
xchg
in
movsl
dec
cltd
ljmp
aam
cltd
sbb
aad
mov
or
add
sbb
push
test
jb
jg
sub
sub
pop
push
push
push
cli
imul
xor
fldt
adc
icebp
jbe
jnp
mov
int3
nop
add
jmp
sub
fsub
add
loopne
pop
dec
in
add
scas
into
push
or
inc
imul
cs
jbe
dec
dec
xchg
fdivrl
pop
shll
pop
js
out
jne
inc
hlt
jge
inc
inc
dec
push
or
mov
pop
mov
mov
mov
dec
adc
and
loope
inc
inc
les
and
push
in
inc
and
add
push
in
enter
call
enter
and
sahf
and
shrb
or
dec
add
inc
mov
push
mov
add
lret
mov
push
or
int
fcoml
or
sbb
hlt
sarl
pop
lock
sub
sbb
ret
dec
mov
outsb
and
jo
and
js
fwait
jle
xchg
jae
dec
dec
gs
and
fsubs
les
and
clc
lock
aam
fwait
pop
loopne
stc
les
pop
lcall
in
and
in
adc
subps
outsb
dec
sub
ss
adc
test
jne
or
cmp
adc
adc
jae
fxch
inc
push
shlb
jl
xchg
xor
push
cmp
in
mov
mov
or
and
xor
pushf
add
fldcw
mov
test
push
and
pop
xchg
xchg
cmp
push
call
lret
ds
or
xchg
lcall
inc
and
mov
and
pushf
and
and
fdivl
das
mov
mov
xor
add
int3
pop
dec
das
sub
movsb
cmp
pop
cmpl
enter
je
aam
mov
adc
jl
xor
or
adc
outsb
gs
xor
cs
insb
push
mov
ret
add
or
nop
loopne
xor
das
stos
fisttpll
hlt
int3
jne
sbb
cwtl
aam
rcr
jge
add
add
dec
adc
mov
push
arpl
nop
cld
add
push
fs
mov
ja
adc
jne
leave
mov
or
or
cmpl
mov
lods
and
mov
ja
add
shrb
xor
jno
jle
int
adc
inc
clc
mov
jl
call
test
mov
add
jmp
xchg
in
push
sbb
jle
sub
imul
xchg
xchg
jne
push
decb
fmuls
loope
and
jmp
push
mov
xor
pop
loopne
push
adc
and
pop
cmp
or
rcrb
arpl
lds
mov
pop
or
mov
mov
je
jge
mov
sbb
sub
or
mov
sahf
lcall
xor
xor
enter
inc
sub
push
pop
add
test
insb
cmp
cwtl
shrl
mov
decb
lock
pop
xchg
jle
push
pop
xor
loopne
push
dec
std
pop
fchs
jmp
jp
sbb
jmp
add
push
jecxz
pusha
adc
cmp
je
jb
fcmovnu
cmp
mov
popa
xlat
add
je
mov
mov
outsl
in
mov
jnp
mov
fsubrs
loop
mov
mov
lea
jns
pushl
sub
or
push
gs
add
add
in
push
shlb
mov
cmp
inc
pushf
xchg
add
push
inc
imul
sbb
pushf
insb
ss
fwait
add
adc
add
lcall
loope
mov
xor
ret
in
ds
out
cmp
enter
mov
inc
mov
sub
ja
and
push
or
pop
adc
add
mov
add
lret
adc
push
mov
ret
sub
ret
aam
mov
cmp
sbb
inc
or
lods
xchg
mov
or
sbb
push
sbb
add
lods
test
xchg
add
xchg
lods
mov
sub
imul
addb
push
xchg
push
xchg
mov
xchg
add
aam
ss
arpl
mov
add
fists
fsubrl
ror
cmp
xchg
push
xchg
les
add
sbb
push
cmp
mov
jae
add
inc
and
mov
shrb
les
or
iret
jne
int3
aam
or
xchg
sub
add
mov
or
aaa
or
pop
push
or
int
pop
psrlq
add
add
and
add
or
mov
jg
inc
or
add
add
pop
jecxz
mov
add
or
jmp
lret
add
or
pop
pop
adc
int
mov
inc
add
outsl
add
sub
xchg
mov
cs
mov
xor
fcoml
stc
add
out
iret
loopne
xchg
or
stc
mov
push
mov
fstpt
sahf
add
in
push
adc
jnp
add
or
je
fnstenv
adc
mov
imul
adc
rcr
xchg
add
mov
adc
test
pop
js
stc
mov
xchg
subb
add
or
and
je
cs
pop
xlat
add
add
xor
inc
jae
test
mov
add
in
pop
inc
addr16
das
cli
cmpsl
add
jbe
mov
mov
lret
or
mov
imul
inc
popa
es
orb
adc
sub
mov
push
cmp
cmp
pop
add
push
sub
lock
adc
sahf
cmp
pop
adc
and
ja
xor
ds
or
adc
arpl
xchg
adc
bound
lret
pop
add
punpcklwd
fdivrs
or
add
cwtl
mov
mov
and
cmp
mov
push
add
mov
lcall
sbb
add
cmp
dec
shlb
lock
cmpsb
adc
jnp
jb
xor
cmpsb
dec
test
and
inc
je
fcomps
dec
sub
pop
aad
cmp
mov
sub
cmp
movsb
dec
dec
dec
lcall
jnp
add
sub
pop
adc
aaa
push
imul
cmc
pop
pop
or
fsubs
adc
or
das
jecxz
popa
mov
adc
xchg
mov
cmp
xor
into
jl
sub
pop
push
or
mov
or
push
mov
das
and
mov
add
or
adc
insb
inc
adc
adc
lods
sub
xchg
pusha
add
xchg
sbb
dec
enter
aaa
rclb
hlt
enter
mov
inc
or
dec
ret
inc
sub
and
test
and
pop
mov
mov
sub
sub
xor
or
add
mov
jge
jl
mov
imul
sbb
sbb
aam
lds
ret
mov
das
push
add
push
mov
jns
jnp
mov
es
or
inc
dec
mov
stos
pushl
es
adc
lock
or
insl
lods
idivl
pop
adc
push
outsb
lods
jnp
push
inc
cmovae
das
push
and
lahf
jnp
xor
into
inc
cmp
add
scas
push
sub
fistpl
mov
mov
mov
out
xlat
rcl
push
and
cs
js
mov
mov
cmp
mov
out
push
xchg
loope,pn
or
sub
push
add
xchg
sahf
clc
jbe
adc
test
daa
push
inc
sub
insl
imul
cmpsb
nop
outsl
push
fstpl
xor
or
jo
ja
cmp
scas
and
add
jb
sbb
inc
std
add
push
adc
mov
sub
cmp
popf
pop
mov
jmp
mov
ret
add
mov
pop
mov
xchg
add
push
je
mov
and
fst
pop
inc
pop
fwait
sub
cmp
sub
adc
pop
add
rorb
and
ret
mov
mov
icebp
adc
in
shll
push
mov
sub
test
pop
leave
jb
jmp
test
push
mov
push
je
jne
loop
adc
jecxz
pop
mov
je
das
mov
ret
test
scas
je
mov
rcrb
fwait
insl
stos
sbb
shl
mov
aam
pop
pop
faddp
roll
stos
sbb
iret
jae
dec
cli
js
mov
jl
inc
outsb
mov
daa
data16
mov
ja
aad
rcrl
sbb
out
jnp
xchg
jbe
cltd
mov
xor
ds
xor
mov
xchg
fisubl
sbb
push
fwait
sbb
jae
xorb
pop
dec
sbb
dec
sub
jnp
jmp
fisubs
lods
es
mov
movsl
jp
sbb
stos
loopne
data16
jo
mov
ds
iret
sbb
cmp
faddp
sub
mov
fucomip
pop
sarl
test
adc
icebp
jo
jno
or
mov
jecxz
subl
dec
fwait
jnp
out
jno
cmp
add
imul
xor
jecxz
add
fwait
test
jmp
and
jns
movsb
rcrl
int
pop
shl
or
popf
and
jno
rcrb
add
call
clc
or
inc
dec
shlb
fnstcw
rorl
fwait
jnp
xlat
sbb
outsb
arpl
sub
add
sti
jecxz
bound
lea
call
mov
sub
fcompl
mov
and
pop
aad
sub
aaa
or
cmp
stos
mov
xchg
test
in
fadds
hlt
add
scas
arpl
mov
jmp
rcrb
inc
xor
jae
or
test
imul
jnp
test
loope
insb
sbb
mov
or
out
add
in
add
out
inc
jae
pop
jecxz
lahf
in
outsb
testl
jae
jecxz
es
lea
xlat
adc
rorb
aad
in
ret
aam
arpl
icebp
sarl
out
xor
lock
or
sbb
push
shr
jle
cli
scas
jb
outsl
imul
or
bound
adc
fcomp
adc
es
fsubl
insl
pop
and
lret
mov
adc
xchg
popa
inc
jno
mov
jns
sti
repnz
pop
add
insl
and
pop
jo
mov
inc
adc
mov
jl
jmp
push
test
out
jl
fiaddl
push
lock
pop
addr16
xchg
pushf
mov
cmpsl
out
lahf
ret
inc
cmp
mov
cmp
out
cmpsl
sub
pop
add
sti
jb
dec
lcall
cmp
nop
sbb
dec
jno
inc
push
std
mov
push
dec
or
test
outsl
lret
sub
push
sbb
sbb
xchg
je
loop
xlat
mov
push
dec
pushf
cmc
hlt
xor
call
pop
push
scas
or
loop
cmp
fmuls
add
loopne
fdivl
lods
jb
mov
mov
rolb
jmp
outsl
jmp
shll
add
xor
sub
xchg
pcmpeqb
sub
out
jnp
or
or
cmp
imul
and
pop
xchg
roll
sub
xchg
jb
pop
adc
dec
inc
aaa
push
ljmp
mov
dec
mov
popf
test
mov
pushf
clc
jle
xchg
js
ja
mov
js
push
pop
rcl
loopne
mov
outsl
inc
insb
push
es
sahf
sbbl
xor
fldt
inc
jo
push
pop
mov
call
das
fidivs
jae
fadds
bound
mov
fsubp
jb
jecxz
push
je
inc
add
sub
scas
mov
scas
jecxz
outsl
jmp
cmpsl
pop
mov
and
mov
mov
xlat
and
mov
dec
cmp
fwait
sub
or
adc
pop
sbb
add
or
sbb
mov
jnp
add
shll
fiadds
mov
or
mov
das
inc
push
xchg
enter
dec
mov
push
dec
and
popf
pop
iret
idivb
mov
inc
inc
and
or
jp
adc
mov
sub
stos
pushf
sub
jecxz
insl
jle
test
jge,pn
jnp
dec
cmp
add
loop
int
adc
sub
mov
lcall
mov
lock
aas
xchg
adc
add
push
cmp
inc
ret
ljmp
mov
aaa
xchg
adc
pop
cld
push
or
add
popa
ret
inc
imull
jnp
sbb
mov
jmp
push
bound
scas
add
jnp
outsl
cmp
sbb
ret
sbb
aam
push
pop
mov
and
or
or
inc
sbb
dec
ss
dec
xchg
aad
cmp
dec
adc
and
jne
aam
and
in
pusha
mov
push
rcrl
push
mov
pop
inc
cli
mov
int
mov
cmpsl
stos
fsubr
jecxz
movsb
movsl
lock
mov
jmp
adc
cmp
stos
sub
mov
adc
mov
cwtl
jl
sti
mov
sub
mov
div
outsl
mov
inc
popf
fnsave
jmp
aaa
mov
je
cmpsl
mov
dec
cmpsb
aas
movsl
mov
imul
pop
ret
push
push
add
xor
stos
aas
inc
sub
pop
lahf
xor
jge
push
xchg
fstpt
js
pop
mov
test
adc
add
sub
fsub
test
jmp
sbb
jo
dec
dec
sti
or
imulb
xor
out
ret
mov
js
bound
loope
pop
mov
sub
and
mov
orl
add
dec
fisubrs
mov
test
in
fdivrs
ret
scas
or
pusha
sub
sbb
or
xlat
pushf
scas
sbb
inc
adc
sbb
rorb
jbe
sbb
outsl
and
and
imul
jbe
mov
in
aad
cmp
mov
mov
jmp
pop
rclb
sub
test
bound
outsb
call
mov
push
sbb
pop
inc
sub
aad
ret
push
fdivl
pop
xor
movsb
loope
mov
fcompl
stos
add
add
sbb
inc
orb
dec
push
std
stos
xor
fisttpll
inc
and
fidivs
call
mov
mov
fiadds
scas
testl
inc
xor
fsubrs
add
mov
int
sbb
cmp
nop
jl
popa
sbb
dec
pop
adc
sub
pusha
pop
xchg
jmp
dec
cwtl
les
pop
outsl
push
scas
frstor
sbb
xchg
sbb
out
push
pusha
xor
aam
mov
movsb
arpl
pop
inc
cmpsb
add
mull
mov
test
daa
pop
test
outsl
xchg
lret
mov
ljmp
sbb
push
test
pop
movsb
sbb
fstps
loope
lea
repz
ret
sbb
aaa
ret
jecxz
sub
add
test
arpl
cmp
add
push
cmp
add
and
in
aas
inc
xor
add
mov
ja
insl
ret
pop
roll
push
xchg
insl
into
pop
sbb
adc
lock
in
call
lret
add
push
out
add
icebp
push
aaa
and
dec
xchg
jp
xchg
dec
mull
xor
pop
pusha
in
lods
cwtl
enter
out
inc
xchg
fsubs
daa
sbb
inc
popl
cs
jns
mov
mov
and
mov
icebp
es
pop
jnp
dec
xorb
dec
add
and
fistl
imul
add
sub
inc
lret
pop
mov
pop
mov
leave
and
add
xor
jo
push
jl
cltd
and
movb
mov
and
or
xor
push
stos
xor
dec
andb
jne
sarl
xor
addb
pop
jo
cld
pop
sub
shll
and
pop
call
mov
out
insb
test
push
xchg
je
and
insb
mov
jo
popf
imul
or
push
adc
inc
jmp
pop
push
das
push
mov
mov
mov
lock
hlt
data16
or
push
and
xchg
sbb
outsb
mov
test
pop
ret
pop
scas
cmpsb
popf
push
add
inc
jbe
and
add
sub
pop
stc
out
ret
sbb
and
addr16
call
pop
aad
mov
pop
cld
call
and
sbb
rcll
test
lods
lds
sbb
add
push
shr
outsb
aas
fsubrs
dec
lcall
lods
pop
jge
ret
cltd
lretw
cmc
jl
mov
push
das
out
fistpll
es
aam
xchg
mov
enterw
addr16
jmp
dec
mov
fwait
lret
add
loope
int3
push
movsl
scas
popf
fidivrs
jle
mov
and
and
popa
ss
sti
mov
mov
fldenv
call
mov
and
aaa
jecxz
and
xchg
pop
xor
jl
cmp
fwait
adc
and
stos
pushf
or
imul
xchg
pushf
cmp
daa
popf
movsl
and
fcmovne
out
add
add
mov
in
dec
call
sbb
mov
repz
adc
mov
ljmp
jnp
mov
ficompl
jb
loopne
inc
subl
daa
xor
loopne
dec
xor
leave
jl
bound
or
mov
dec
std
push
aam
xor
rcll
lcall
jo
addl
shll
or
push
and
rcrb
rolb
mov
popa
mov
or
adc
xor
ds
lods
sbb
cmpsb
scas
pop
xchg
pop
sahf
sub
add
and
sub
mov
xor
sub
cli
push
push
cmp
mov
sbb
int3
jae
inc
je
lcall
sub
sbb
mull
mov
test
xor
rol
adc
jmp
and
test
mov
cli
scas
add
mov
rolb
mov
xchg
adc
test
xchg
insl
outsl
fwait
lds
stos
dec
xor
inc
pop
in
pop
pop
cmp
mov
scas
sub
std
pop
cmpsb
fs
cs
sub
jnp
repnz
and
jno
insl
jle
jp
push
or
icebp
dec
add
lds
pop
mov
add
xchg
pop
shll
inc
fmuls
and
jle
push
rorl
decl
aaa
ret
cmpb
ljmp
xchg
push
sub
jl
inc
insl
cmp
push
fwait
and
shll
add
mov
pop
and
jnp
xchg
inc
repz
sbb
ss
ss
adc
fcoms
loop
or
and
add
es
mov
dec
or
jbe
sub
cmpsl
mov
in
and
es
subb
push
movsb
popa
loope
pop
dec
out
aam
xchg
xchg
loop
stos
loop
pop
pop
outsl
aaa
xor
jne
aad
sbb
loopne
int
dec
repz
push
inc
fsubrs
mov
in
push
sbb
inc
adc
subl
sbb
or
pop
sub
mov
dec
add
cmpsl
inc
inc
push
mov
adc
adc
dec
xchg
jp
push
xor
cs
xchg
dec
add
mov
mov
lcall
addb
or
jp
fbld
adc
cmp
dec
out
data16
dec
arpl
rcrl
fmull
pop
xor
movsb
jge
sbb
dec
hlt
lcall
pop
adc
or
rclb
mov
call
imul
daa
dec
jne
pusha
adc
mov
rcrl
and
arpl
xor
inc
mov
imul
in
xor
and
repz
imul
lods
lock
jno
mov
pushf
fisubrs
dec
adc
out
sub
fimull
inc
aaa
mov
ljmp
jmp
pop
or
push
shr
rclb
xchg
and
push
mov
jecxz
pop
not
mov
ljmp
ret
push
mov
sbb
mov
sub
fcmovb
jae
inc
js
sub
clc
ror
outsl
cltd
add
cwtl
mov
add
mov
push
call
push
imul
push
test
nop
ja
sbb
sub
rcll
lods
cmpsb
push
lret
mov
out
fidivs
sub
mov
cmp
jge
xlat
pop
arpl
out
in
sub
lea
push
ja
fldt
sbb
out
ror
ret
cmp
sub
loop
scas
insl
xor
movsb
xchg
cltd
sbb
inc
stos
test
mov
mov
or
aad
stos
cmp
pushf
push
imul
jmp
mov
ret
je
push
xor
aad
push
mov
ss
test
or
aam
dec
andl
jg
jb
sub
xor
scas
inc
mov
dec
maskmovq
imull
in
mov
pop
pop
mov
mov
jle
sbb
adc
dec
sub
aaa
mov
xchg
inc
ret
pop
and
rorl
std
bound
fsubl
adc
mov
jp
dec
jne
and
pop
lds
mov
xchg
mov
cli
sub
jl
add
jmp
adc
sbbl
or
lds
push
mov
xor
cmpsl
jp
aaa
ljmp
mov
push
stos
mov
cli
cmpsb
add
stos
xchg
sub
scas
fildll
jge
cs
push
hlt
add
pop
pusha
stos
sub
add
hlt
or
adc
enter
xchg
jo
sub
sub
lea
mov
stos
cmpsl
pop
jb
mov
lcall
dec
in
out
xchg
push
es
mov
cmc
add
clc
and
push
cs
data16
mov
push
sbb
fwait
sarl
out
adc
pusha
pop
in
pop
jp
sbb
xor
push
int
sahf
add
mov
pop
mov
scas
mov
xchg
push
xor
sub
jnp
int3
adc
ss
or
xorl
cmp
pop
jb
sbb
test
gs
or
adc
push
pop
stos
jecxz
aas
dec
ljmp
ljmp
jnp
and
rclb
and
outsb
or
inc
mov
cs
sti
or
jnp
sub
negb
mov
insl
sub
xorb
and
inc
mov
push
pop
sbb
fildl
jecxz
int
loope
lods
clc
push
std
int3
fistpll
xor
in
out
lods
dec
pop
jge
sub
sbb
xchg
xchg
push
js
inc
sub
xchg
call
inc
mov
inc
xchg
imul
and
subb
clc
mov
sub
mov
fwait
roll
push
aaa
or
xchg
shrb
cwtl
adc
xor
push
inc
popf
inc
dec
mov
mov
in
cwtl
popf
xchg
ds
push
xor
push
je
jae
fistpll
imul
sub
es
add
mov
cmp
call
test
jg
add
femms
ffree
test
and
cmp
jge
ret
sbb
inc
fildl
cli
jecxz
xchg
cmpsl
test
movsb
add
pop
or
add
ss
ljmp
lds
fisubs
push
and
xchg
es
inc
jae
inc
mov
cwtl
sbb
or
pusha
cmc
and
movb
in
jb
sub
es
cmp
je
dec
in
rcrb
and
or
mov
adc
sub
and
or
or
rcl
dec
lcall
mov
repz
std
or
test
sub
dec
mov
mov
das
test
das
jb
mov
mov
fildl
jecxz
pop
mov
mov
aam
out
xor
jne
xchg
fdiv
aad
insb
jge
shlb
push
add
fisubs
and
add
int
hlt
loopne
mov
dec
xor
sbb
lcall
push
shrl
xchg
or
jg
cs
mov
adc
mov
in
jbe
xchg
xchg
jb
rolb
inc
sbb
push
cmpsb
cmpsb
loop
mov
ret
xchg
inc
add
mov
rorl
ret
xor
lods
mov
add
negb
and
xchg
scas
jnp
push
int3
test
and
mov
pop
fldt
jno
pop
popf
fwait
icebp
sbb
cs
cmp
ret
adc
and
es
repz
rolb
imull
sbb
and
mov
inc
and
inc
dec
jb
stc
scas
mov
dec
or
icebp
xchg
insl
sbb
movhps
clc
pop
mov
jb
sbb
push
jno
push
or
ficomps
stos
push
rcrb
jl
ror
cmp
or
add
cwtl
pusha
sahf
dec
pop
add
mov
cmp
aaa
mov
xlat
pop
jb
jae
das
loope
xchg
push
arpl
cs
mov
sahf
xchg
shlb
xor
mov
out
push
add
loop,pn
adc
push
pusha
mov
fildl
gs
test
and
leave
lret
enter
ss
cmp
dec
jne
test
sub
lods
mov
js
xchg
xchg
fldt
in
pop
lahf
shrb
and
inc
xchg
aam
test
lds
mov
aad
jo
jecxz
popf
inc
pop
pop
cld
stos
rcrl
shrl
movsb
sbb
sub
inc
push
and
sbb
mov
fwait
popf
hlt
adc
or
xor
and
dec
push
jb
inc
xlat
push
add
xor
scas
add
add
adc
jae
out
lds
pop
das
sbb
sbb
lahf
sub
add
sub
xlat
fwait
lds
fiadds
inc
shll
das
push
arpl
cmp
mov
outsb
outsl
add
jo
add
push
jae
adc
mov
sbb
sub
cmp
jae
jp
insl
outsb
out
jns
xor
popf
push
mov
scas
push
mov
mov
ja
outsl
adc
test
mov
stos
fwait
dec
loope
mov
js
sub
push
cmp
mov
gs
popf
jge
in
ret
sub
and
push
xchg
mov
aaa
loopne
neg
cmp
sti
test
cmovae
jb
or
icebp
xchg
ss
out
inc
sbb
push
add
int
iret
cltd
mov
push
jmp
xlat
cmp
je
push
jbe
ficoml
jecxz
jecxz
out
fbld
mov
jbe
add
imul
cmp
jecxz
xor
js
mov
adc
pusha
mov
xchg
repz
repz
cwtl
sti
pop
jo
xchg
sarb
jbe
pusha
dec
mov
ja
repz
and
fmuls
outsl
jbe
mov
pop
jb
inc
mov
ds
jge
repnz
mov
xor
pop
push
ret
mov
and
shl
out
in
dec
cmp
test
out
or
adc
push
inc
pop
or
outsl
sar
inc
jmp
xor
fs
jnp
sub
out
scas
add
mov
adc
stos
fdivs
or
sbb
clc
push
sub
es
sub
or
sbb
dec
pusha
inc
mov
in
aad
adcl
and
mov
cmp
ret
loopne
push
addb
push
add
divb
ljmp
in
test
xlat
mov
in
xlat
adc
push
pop
cmp
push
push
adcl
rcll
or
nop
pop
sub
notl
sub
pusha
sarb
add
cmp
lret
cmpsb
adc
pop
in
lea
or
imul
and
cli
and
mov
mov
jecxz
test
pop
hlt
lock
inc
inc
addr16
push
xchg
cmc
aam
adc
fs
ficoms
cmp
inc
sbb
jl
sahf
std
cmp
mov
rorb
iret
add
ret
scas
xor
and
mov
mov
rcrl
or
stc
push
mov
cmp
dec
sbb
or
int
and
jno
ret
dec
pushw
cwtl
inc
sarl
adc
bound
outsl
js
aas
sbb
pop
xor
clc
popa
mov
mov
mov
je
sub
jmp
sbb
loop
cli
mov
or
int
fmull
sbb
xor
sbb
push
shrb
dec
sbb
push
int3
sub
jp
xor
cmpsb
pop
sub
aam
lods
dec
add
mov
fs
bound
add
sbb
cmp
add
jmp
data16
or
push
mov
add
ja
add
sub
add
loop
xchg
call
and
pop
xor
cvtps2pi
mov
push
aas
mov
add
adc
xor
mov
mov
adc
movsb
xor
pop
or
xorb
cwtl
or
push
xor
jb
sub
jo
aas
pop
and
test
xor
and
jp
mov
cmp
pop
or
or
repnz
mov
cmp
push
inc
add
push
ret
xor
dec
sub
test
in
or
mov
mov
cmp
xchg
or
push
add
subb
jl
jmp
xlat
add
mov
mov
jecxz
jb
adc
out
dec
add
sub
cmp
or
and
addr16
js
cwtl
push
sahf
push
or
xchg
push
xorb
push
cmp
jae
add
pushf
add
push
xchg
sub
dec
movsl
pushf
push
rcr
cmp
testb
lock
pop
sub
push
addr16
cltd
push
and
pop
loop
mov
adc
inc
mov
test
out
push
add
pusha
outsb
mull
xor
jg
push
enter
fbld
push
mov
insl
sbb
or
call
mov
xor
adc
sbb
dec
push
call
dec
pop
sub
pop
or
xor
sti
and
pop
cmp
mov
mov
insl
xchg
cmp
mov
sbb
nop
push
daa
sub
jmp
andb
push
and
in
test
sbb
jg
pop
cmp
or
or
xchg
jmp
aas
popf
addr16
pop
fisttpl
xor
jne
pop
pop
and
push
mov
outsl
movsb
pop
xchg
and
xchg
cmp
and
ret
hlt
in
pusha
into
jg
dec
loop
cli
push
ret
sub
add
mov
inc
sbb
daa
ffreep
dec
or
scas
fcomi
sub
orl
nop
in
loop
add
and
aam
lock
rorl
add
adc
notl
es
jge
mov
or
mov
imul
ss
mov
sbbl
sahf
jnp
dec
jp
adc
iret
push
aaa
int
cwtl
jb
lds
mov
dec
popl
ret
mov
push
push
mov
xlat
mov
inc
test
push
popf
inc
mov
test
mov
or
and
xchg
inc
pushl
xchg
lock
push
mov
pop
andl
mov
sub
push
testl
dec
jg
out
add
and
sub
dec
enter
push
movsb
imul
filds
shrl
jl
adc
mov
pop
xor
dec
add
and
insb
xlat
add
lcall
arpl
inc
jecxz
jnp
xlat
xorl
jo
add
insb
pop
dec
in
inc
xor
push
daa
adc
insb
js
inc
mov
out
dec
jne
jbe
add
es
les
and
mov
aas
out
test
sarl
adc
mov
fdiv
pushf
fs
sbb
cltd
outsl
fistps
or
mov
fsubl
and
inc
xchg
sub
std
dec
pop
mov
jg
sub
dec
cmp
sti
rol
xchg
add
push
inc
scas
ret
ret
ljmp
mov
xchg
adc
add
lcall
loope
adc
adc
es
xor
mov
mov
jne
test
fisubrs
and
dec
lahf
or
push
xchg
mov
adc
loopne
push
scas
inc
push
pop
leave
shlb
loope
dec
sti
push
cmp
add
pop
aam
push
cmp
xchg
jnp
daa
adc
ss
push
adc
iret
loopne
jmp
mov
aam
push
das
bound
mov
fadds
mov
sarb
enter
inc
popa
lahf
les
or
mov
js
dec
mov
add
inc
adc
add
push
adc
mov
push
ret
push
jb
mov
and
test
jb
scas
sti
fldenv
mov
dec
push
shll
pushf
in
icebp
cmp
aas
push
jb,pn
cmc
stos
mov
jl
ljmp
mov
les
cmp
xchg
aam
and
or
pop
in
inc
or
cld
jge
or
popa
jge
mov
xchg
mov
sbb
xchg
sub
rorl
insb
pop
jge
leave
icebp
inc
xor
dec
stc
addr16
sub
xor
mov
lock
loope
and
mov
in
jnp
xchg
add
sub
aad
loopne
xor
aam
pusha
popf
scas
mov
sbb
mov
mov
aaa
mov
sbb
push
mov
pop
dec
push
rorl
sub
push
push
mov
xlat
aaa
pop
aam
call
or
mull
je
jmp
rcrb
cmp
push
andl
xlat
xor
je
xchg
icebp
mov
xlat
sbb
xor
dec
out
xchg
sub
jne
and
mov
add
jno
add
in
mov
and
fdivs
lret
scas
ret
mov
icebp
jl
out
inc
jl
loopne
inc
jl
mov
mov
hlt
push
cmp
jmp
rolb
jnp
sar
mov
inc
cmp
sub
mov
aad
int
xor
xor
lahf
sbb
jne,pn
int
push
adc
xor
movsb
mov
hlt
xor
pop
jno
push
pop
mov
push
add
insb
aas
push
xchg
xchg
cmp
movsl
das
comiss
fwait
hlt
ret
in
push
xor
fadds
pop
push
aaa
mov
mov
cmpsl
push
mov
aas
fwait
mov
jnp
push
push
xchg
test
xor
cmovg
jnp
jnp
push
mov
into
or
cs
mov
mov
ja
sub
or
mov
jbe
sub
in
fmull
sbb
push
mov
sub
icebp
andb
imul
loope
pop
outsb
push
ret
cmpsb
and
jno
dec
inc
dec
sub
pusha
dec
sbb
mov
mov
jo
addr16
enter
ret
aad
pop
shr
push
stos
dec
jl
sub
pop
mov
sbb
mov
test
dec
mov
aam
pusha
sub
aam
rcll
push
cli
std
mov
xchg
push
ret
push
rclb
push
mov
adc
cltd
inc
or
or
sub
sbb
dec
push
testl
fsubrl
test
add
aaa
jnp,pn
aaa
mov
jmp
or
ds
cmp
cwtl
in
fdivrl
sbb
push
insl
sub
cmp
cmp
test
push
mov
xor
mov
aaa
or
mov
dec
push
insl
stc
mov
sbb
and
or
jmp
mov
jge
inc
xorb
f2xm1
or
pop
ficomps
mov
xchg
pop
rclb
cmp
ret
lcall
cltd
stos
addb
inc
bound
rcrb
pushf
xchg
jge
sbb
mov
push
mov
push
push
jmp
mov
pop
cs
pop
xchg
mov
and
inc
sub
sub
jge
fcoml
xor
adc
out
mov
add
ret
xor
sub
add
mov
lcall
lock
fisttpll
cmp
jo
sahf
mov
sbbl
testb
divb
sarb
loopne
push
pop
cmc
cmp
iret
adc
push
fisubs
leave
dec
sub
mov
sub
cmp
icebp
sub
jne
shll
pop
cmp
dec
mov
pusha
aam
mov
jne
jmp
mov
roll
insb
sub
and
test
xchg
test
lahf
push
adc
scas
lea
jecxz
aad
push
call
test
jl
clc
sbb
fsubr
pop
pop
or
xlat
icebp
add
or
popf
and
pushf
aad
int3
jnp
sub
push
cmp
cmp
fidivs
xchg
lock
jns
push
ret
xchg
movsb
ja
mov
repz
sbb
movsl
push
sub
xor
lock
pop
mov
and
sti
popf
xor
out
sub
dec
in
mov
es
jmp
and
jmp
pop
in
js
in
xchg
adc
pushf
andb
add
add
add
sbb
inc
clc
push
pop
es
dec
push
mov
mov
xchg
roll
inc
mov
xchg
push
bound
dec
push
jo
inc
and
mov
roll
mov
xor
inc
jno
std
inc
mov
cmpsb
add
lods
cmp
cwtl
fcmovnb
jae
xchg
dec
push
outsl
cwtl
push
scas
jg
cmp
dec
loop
out
leave
dec
mov
mov
rcl
cmp
push
daa
fildl
sub
dec
fidivl
lds
xor
adc
push
and
test
xchg
mov
pop
pusha
imul
test
jb
popf
add
mov
ja
adc
out
lahf
push
add
sub
lock
movsl
insl
sub
xor
push
bound
dec
daa
xor
mov
insl
sarb
gs
and
stos
in
sbbl
sbb
jl
add
xor
js
add
or
movsb
sar
push
jl
or
das
insl
push
jne
and
add
cmp
sbb
cmp
insb
pop
add
mov
dec
pusha
notb
decb
ret
ret
sbb
mov
sahf
sub
loopne
cmp
inc
cltd
xchg
push
and
or
or
sub
pop
mov
mov
pusha
push
inc
in
push
inc
mov
out
inc
lea
lret
mov
mov
pop
cmp
lock
inc
pop
test
rorb
mov
add
lret
push
sbb
mov
scas
add
lock
inc
fldenv
add
sub
fsubs
xchg
jae
shll
pusha
mov
or
mov
lods
ljmp
push
jbe
mov
mov
scas
jmp
add
jecxz
mov
inc
div
stos
ds
sbb
insb
dec
insl
andl
ljmp
mov
lcall
add
mov
sub
dec
mov
fcoml
cmp
jb
jae
js
adc
in
mov
adc
cltd
dec
mov
nop
lods
add
arpl
rorb
rcrl
xchg
fcoms
inc
lock
int
push
shrl
inc
shll
pop
ret
sub
pop
daa
insb
sub
je
cmpsb
scas
enter
mov
add
dec
push
icebp
insb
fnsave
sub
dec
ret
mov
loopne
cmp
push
inc
cmp
fpatan
push
repz
adc
xor
sbb
lret
push
inc
jmp
outsb
sub
jge
cmp
mov
inc
dec
mov
cmp
lods
pop
inc
mov
loop
sbb
and
jb
mov
pop
sbb
mov
or
dec
xchg
cltd
fidivl
push
xchg
push
sbb
push
push
and
and
in
mov
cmpsb
jb
rolb
not
fwait
insb
hlt
mov
aam
mov
sbb
sbb
jmp
js
in
cmpl
xor
and
or
out
int
add
add
icebp
xor
add
in
stc
pop
lock
inc
cmp
test
into
jecxz
iret
mov
or
loopne
pop
sbb
push
xor
adc
icebp
rol
inc
push
jmp
mov
lcall
test
repnz
xor
sub
cmp
jmp
sbb
cmpsl
xor
test
mov
ss
cmpsb
inc
rol
inc
adc
lcall
xor
sbb
je
dec
out
inc
mov
aas
sub
push
sub
roll
push
cmp
rcr
and
and
dec
js
movsb
orl
repz
inc
lret
inc
fiaddl
xor
xchg
int
pop
lds
inc
inc
pop
and
imul
pop
js
jg
mov
xor
mov
test
sub
add
call
pop
in
push
dec
mov
xor
gs
pop
adc
loop
out
cmp
dec
mov
inc
xchg
outsb
mov
add
into
sti
les
pop
xor
rol
adc
mov
inc
add
mov
mov
pop
hlt
push
and
cmpsb
add
loope
pushf
push
out
scas
rclb
rcpps
mov
jp
sub
or
addr16
test
out
out
popf
add
cmp
rol
mov
xor
daa
ror
lock
or
outsl
ret
dec
lcall
ret
adc
adc
add
data16
adc
jp
adc
call
aaa
jb
pop
cmp
xor
into
mov
mov
adc
test
aas
add
inc
mov
dec
aad
or
sub
or
adc
add
cli
jge
pop
std
stos
fs
sub
clc
or
adc
mov
shr
lahf
js
sub
jae
or
and
add
or
lahf
aad
push
js
sub
popf
dec
test
and
add
add
add
inc
rcll
out
push
mov
jp
lods
ljmp
add
inc
dec
out
push
enter
xchg
lcall
test
sbb
mov
push
dec
push
jge
push
lods
and
jne
lock
and
test
lds
add
popa
loope
sbb
add
xor
incb
lahf
notb
cli
mov
stos
inc
lret
lret
rorl
mov
mov
stos
xor
jbe
pop
mov
fs
leave
mov
dec
movsb
lds
imul
push
pushf
js
lret
addr16
inc
add
add
pop
and
cmp
sub
clc
mov
bound
add
xor
lds
xor
subl
sti
idivb
imul
sub
push
les
add
imull
outsb
lret
cmp
test
movsl
cmp
push
and
add
xchg
loopne
and
stc
and
mov
and
mov
jl
pop
and
rolb
adc
es
or
sub
cmp
popa
push
daa
ljmp
gs
inc
jge
and
xor
icebp
sub
sub
ficoms
mov
push
punpckhdq
xlat
push
pop
movsl
shlb
or
dec
sub
insb
test
sbb
sub
xor
pusha
push
stos
mov
mov
call
mov
xor
adc
fists
les
or
fwait
lods
cld
and
xor
fsubrs
popf
or
and
push
arpl
cmp
sub
loopne
add
sbb
cmp
sbb
mov
mov
adc
fs
sub
xchg
and
addb
cpuid
xchg
cmp
jmp
or
movd
bound
fisubs
add
out
int3
stos
xchg
push
rol
dec
jp
push
jecxz
pop
jbe
stos
or
push
mov
sub
rclb
add
divb
mov
push
fistpll
adc
jecxz
ret
dec
mov
notl
adc
mov
imul
mov
or
outsl
or
jge
jle
cmpsb
test
dec
daa
adc
add
inc
dec
arpl
push
rolb
negb
xchg
rorl
xchg
movl
insb
xor
out
fdivrl
and
pop
jg
cwtl
insl
testb
mov
filds
fwait
mov
arpl
mov
test
sbb
adc
dec
call
cmc
mov
push
addr16
outsl
push
pop
sbb
loope
or
push
ljmp
lock
ja
out
jnp
es
das
xlat
or
bound
nop
dec
sub
jb
loope
xchg
xor
sbb
dec
inc
add
and
and
xchg
xor
add
rolb
sbb
dec
push
adc
into
xchg
shr
stos
js
stos
pop
rorb
scas
loope
mov
jns
or
pop
shlb
or
and
test
mov
mov
sar
mov
mov
xchg
and
aam
cwtl
or
sub
nop
subl
add
pop
test
in
fwait
sub
ljmp
ret
push
mov
xchg
mov
xchg
scas
dec
xchg
xchg
mov
mov
es
mov
and
fwait
mov
pop
out
xchg
scas
out
or
mov
dec
lock
imul
fdivs
loope
ja
sti
test
shlb
loope
cli
rep
popf
and
jae
shlb
scas
int
sbb
fldenv
jbe
inc
adc
mov
neg
rorl
adc
or
xor
shll
mov
fs
jno
int
mov
cmpsl
bound
lods
das
out
cmpsb
loope
mov
push
pop
mov
or
mov
ljmp
pop
daa
xchg
xchg
push
jae
in
das
cmp
mov
js
add
inc
into
lcall
cmp
fcomip
lds
aaa
inc
sub
aas
adc
xchg
stos
xor
roll
shll
aaa
add
pop
mov
negl
test
imul
inc
adc
lret
and
insl
mov
addr16
pop
in
imul
jmp
sbb
fsts
arpl
xor
fsubs
adc
loopne
loopne
cmp
dec
leave
push
int3
popfw
lcall
sbb
shlb
xor
loopne
cmp
xchg
pushf
cmp
mov
data16
cmpl
xor
popw
aas
sti
jg
sub
adc
iret
sbb
imul
fwait
cmp
gs
int
and
fsubrs
outsl
dec
add
fisttps
ret
mov
inc
ss
jo
xchg
lock
cltd
call
jae
add
inc
insb
and
aad
lahf
inc
sbb
add
rclb
push
pop
fisttps
lock
mulb
push
mov
xchg
addb
add
add
mov
in
or
fwait
adc
movsb
sbb
add
aam
sbb
and
les
mov
mov
jp
or
sub
cmp
mov
out
mov
add
xchg
ljmp
cld
and
fldt
pop
sbb
add
pop
fisttps
repz
ret
and
xor
scas
xchg
xor
ret
and
mov
pop
mov
in
test
sub
add
addr16
addb
jge
pop
aad
sub
jo
imul
repz
ret
icebp
iret
lock
pusha
push
rclb
or
xchg
outsb
xchg
pop
adc
cmpb
arpl
add
rorl
loope
cmp
cmc
sub
ret
sbb
lods
andb
jns
cmpsb
add
adc
popf
inc
mov
ja
int
bound
fidivrs
adc
mov
inc
cmp
int3
cmp
fstl
out
jl
call
orb
faddl
add
pop
xchg
aam
dec
xchg
add
and
out
stos
push
xchg
mov
shll
and
add
xchg
pop
sbb
mov
shrl
sub
jp
lds
xchg
xor
adc
adc
lret
ds
cmp
jnp
mov
xchg
faddl
gs
mov
ds
or
mov
lock
in
mov
mov
jl
xor
adc
or
jmp
sub
in
mov
mov
or
cmp
or
loope
out
insl
and
loop
pop
add
fsubs
sub
sub
push
dec
adc
pop
pop
xorl
or
sbb
mov
push
jl
adc
shlb
shrl
data16
bound
arpl
sub
add
and
cmp
cli
mov
cs
lods
mov
mov
inc
xchg
andb
clc
fidivrl
push
dec
rcrb
fnstsw
data16
outsb
jmp
das
lcall
ret
mov
add
std
ret
insl
int3
add
sub
outsb
fwait
mov
pusha
sbb
adc
add
push
mov
and
test
pop
mov
adc
test
inc
loopne
rorb
in
pop
push
jge
add
mov
and
or
arpl
aam
sub
pop
push
into
popf
sub
xor
lods
push
xchg
xchg
push
adc
fwait
dec
das
loop
insb
cmp
jl
mov
ds
dec
or
sbb
or
mov
scas
fistpl
jae
pop
xchg
ret
fsts
ficoml
pusha
cmp
pop
mov
jg
imul
ja
ss
pusha
or
push
sbb
aad
pop
int
pushf
xor
xor
les
push
out
cs
xor
and
jl
sbb
sarl
lahf
test
ret
cltd
push
aam
cmp
addb
mov
mov
sub
lds
subb
xor
xchg
divb
es
adc
ret
pop
das
jg
pop
inc
pop
sbb
mov
stc
jmp
sub
andl
pop
adc
lea
aas
data16
jns
cli
sbb
cmp
xchg
sbb
fs
adc
movsb
out
gs
inc
add
or
pusha
adc
sub
push
sub
scas
xchg
sbb
iret
or
adc
movsl
pop
jge
inc
loopne
movsb
aam
dec
mov
mov
pop
mov
sub
inc
pop
aas
stc
mov
insl
cmp
orb
imul
cmpsb
arpl
mov
pop
call
adc
arpl
sti
sub
pusha
add
push
add
pop
xor
sbb
in
and
cmpl
mov
in
sub
nop
xchg
jmp
scas
xchg
add
or
add
add
sub
aaa
jmp
mov
jp
cmp
das
and
out
xor
sti
mov
jmp
outsl
add
test
inc
inc
or
adc
test
xchg
jnp
mov
lea
xchg
sbb
test
mov
sbb
in
add
loope
lock
pop
xor
xchg
pop
es
mov
dec
rcll
rol
inc
add
cs
xor
jge
pop
shlb
add
iret
or
cmp
test
clc
mov
lcall
push
jb
nop
cmp
rol
pushf
stos
push
push
dec
ret
mov
stos
dec
ret
add
std
leave
and
dec
cs
mulb
cmp
ja
dec
add
lret
stc
sbb
or
loope
andb
cltd
xlat
enter
js
sub
mov
call
lahf
clc
or
and
gs
loopne
jns
addl
xbeginw
unpcklps
cmp
lds
push
inc
iret
cmpsl
cmp
sbb
push
aad
jp
cmpsl
pop
andl
or
movsb
push
add
sbb
mov
xchg
scas
stos
rcrl
js
dec
outsl
xlat
je
rclb
cmp
imul
jp
ja
dec
bound
fisubrl
jb
mov
gs
ds
add
nop
or
push
mov
les
inc
mov
movsb
add
leave
sub
les
fidivs
and
inc
mov
adc
test
jo
fdivrs
push
movsb
cmp
sub
pop
fwait
and
sub
sbb
pop
mov
rorl
gs
lds
rorb
mov
gs
dec
cmpsb
cmp
mov
pop
cmpsb
movl
pop
and
mov
or
mov
pop
aaa
push
insl
mov
fcomip
adc
shlb
sub
xor
in
imull
loopne
xchg
loopne
inc
dec
add
daa
mov
scas
adc
add
loopne
or
adcl
test
sahf
dec
adc
incl
push
inc
cwtl
sub
mov
mov
dec
mov
sbb
fmuls
mov
jge
mov
mov
jnp
jno
pusha
lock
into
je
pop
and
bound
adc
inc
xchg
fisttps
shrb
cmp
es
xlat
mov
sbb
mov
or
nop
sbb
mov
and
mov
xchg
dec
xor
mov
mov
ljmp
dec
and
add
xchg
loopne
add
inc
pop
scas
jge
sub
jno
xor
and
xlat
and
xor
and
test
test
out
cmp
inc
inc
addl
and
faddp
cmpsb
sub
mov
push
pusha
cmpsb
xchg
int3
jp
add
ret
jle
pusha
out
popf
inc
ret
nop
popa
xchg
jno
and
xlat
and
jae
xchg
and
dec
push
push
outsl
ret
dec
inc
and
loope
dec
push
shrl
scas
dec
ret
cwtl
jae
mov
into
adc
clc
aas
xchg
push
jmp
and
and
inc
mov
stos
cmp
pop
add
leave
aaa
subb
and
pop
ss
or
pop
xor
sahf
je
adc
lcall
or
sbb
pop
and
es
mov
xchg
add
add
sub
in
mov
cmp
pop
sub
es
push
dec
shl
mov
and
push
jno
in
xor
daa
adcb
cmovl
jno
sub
mov
inc
mov
push
lods
out
xchg
repnz
add
mov
rclb
cmpb
mov
shl
xor
push
xor
mov
clc
and
mov
sub
outsb
or
into
cmp
or
mov
pop
shll
imul
adc
push
and
test
or
fs
dec
push
icebp
cmpsb
pop
test
push
frstor
add
and
les
adc
cmp
scas
mov
aaa
inc
in
pop
mov
fstpl
pop
call
adc
nopl
add
or
xchg
stos
arpl
ja
dec
ss
dec
sub
sub
xchg
pop
popa
jl
pop
roll
hlt
xor
and
js
mov
dec
adc
adc
mov
pop
cli
pop
sbb
rcrb
pop
fldl
gs
dec
adc
xorl
add
loopne
ds
dec
hlt
add
mov
int3
and
sub
xchg
push
jge
mov
shr
in
addb
adc
in
cmp
push
dec
mov
outsb
cmpsb
and
mull
je
inc
test
mov
in
stos
mov
xor
push
inc
xchg
push
adc
or
ret
test
add
call
popf
mov
sbb
pop
inc
fwait
icebp
cmp
jo
mov
sbb
call
xor
mov
adc
mov
push
xchg
shl
lds
ret
cli
cmp
jp
add
loop
adc
in
adc
pop
adc
ss
loope
lcall
bound
mov
add
pusha
jge
push
xchg
jle
sarw
sbb
aad
sub
int3
mov
or
adc
inc
cmp
mov
mov
inc
mov
push
int3
sub
dec
add
push
mov
out
dec
addr16
rolb
jge
mov
xchg
fwait
adc
sbbb
or
daa
push
pushf
fs
jo
aaa
stos
add
sub
jno
add
and
mov
and
aaa
cmp
add
cmc
ret
mov
aad
push
push
xor
mov
xchg
adc
adc
test
ja
pop
negb
lret
ret
loopne
cmpsb
push
xchg
sbb
rolb
push
int
shrb
sub
add
in
pop
and
mov
loop
insl
jnp
add
loop
jnp
jp
in
stos
aam
repz
int3
xor
insl
lock
dec
add
popa
leave
push
outsl
cld
jbe
jno
xchg
loop
std
loope
pushf
stos
pop
lock
movsb
ret
in
jb
stc
test
les
jb
cli
sbb
cmova
mov
data16
xlat
mov
sub
cmpsl
xchg
mov
in
mov
adc
jp
xchg
js
pushf
add
jge
push
xchg
or
or
aas
aam
les
cmpsb
add
rcr
sahf
and
or
sbb
pop
push
shlb
pop
push
das
pop
sub
lret
or
jbe
jbe
in
dec
xchg
stos
sbb
sub
mov
adc
mov
mov
outsb
xor
sbb
stos
leave
sub
jle
push
pop
mov
popf
stc
push
cmp
mov
xchg
xchg
loopne
stos
cmp
repz
push
data16
cmp
pop
jae
push
cmp
cmpsb
outsl
sub
iret
dec
lock
icebp
faddl
push
mov
hlt
fs
and
pop
bound
stos
inc
jae
pop
jno
adc
js
fisubrl
repz
dec
cs
add
jne
sbb
jge
push
mov
lcall
jb
pushf
dec
insl
mov
inc
mov
push
or
xor
xor
daa
xor
cwtl
adc
push
and
mov
sbb
movsb
rorb
or
int3
xchg
mov
or
subl
mov
dec
pop
pop
mov
leave
aas
jb
sarl
xchg
sub
push
cs
cmpsl
adc
push
jne
movsl
sbb
arpl
repnz
cmc
inc
sbb
sub
inc
mov
and
adc
test
aad
sbb
out
inc
add
inc
and
cli
and
pop
push
cmpsb
and
inc
int
aaa
add
inc
xchg
add
aam
dec
hlt
cmc
pop
adc
xor
sub
shr
pop
out
and
push
xor
mov
pop
scas
ljmp
lret
add
shll
xchg
or
and
cmc
sub
xchg
imul
jp
pop
stc
stos
sbb
sub
push
icebp
repnz
sub
xor
pusha
hlt
pop
jae
jne
jbe
repnz
push
push
mov
out
jp
mov
pop
adc
jne
inc
das
lcall
sub
cmp
test
leave
ljmp
int
es
xor
xor
mov
mov
pop
adc
repz
push
sub
jo
push
loope
imul
js
in
jle
xor
fidivrs
rorl
sti
adcb
scas
int
push
adc
push
into
loop
fisttpl
ja
test
rcrl
addr16
fimuls
orb
jl
in
aaa
imul
add
mov
js
xchg
test
outsl
je
loope
js
xor
call
push
xchg
test
rol
dec
lds
repz
pusha
pop
scas
pop
aaa
push
xchg
loop
es
mov
xor
dec
adc
adc
das
push
pop
stos
cs
jne
inc
aam
inc
icebp
sub
adc
shlb
addb
cld
mov
dec
nop
xchg
scas
xorb
jmp
dec
add
mov
add
in
les
lcall
add
sbb
orb
cld
dec
cwtl
mov
sub
pop
das
test
and
dec
aam
fdivl
xchg
daa
xlat
adc
aam
nop
jmp
cs
pop
cmpsl
push
frstor
push
sarb
mov
push
pop
adc
mov
mov
lcall
mov
sub
imul
shlb
daa
adc
lret
fisubrl
das
adc
pop
in
push
hlt
clc
leave
iret
xor
test
xchg
jp
loopne
loop
fs
mov
add
jl
sbb
push
push
cmpsb
inc
and
popf
hlt
xchg
xchg
dec
dec
jl
sbb
push
inc
cvtpi2ps
leave
dec
add
in
cmpsl
and
pop
inc
mov
andb
mov
and
mov
push
inc
jp
push
cli
sub
inc
mov
pop
push
push
inc
ret
pop
sub
push
sub
and
mov
dec
inc
lods
or
dec
sub
adc
adc
push
mov
cmp
movsl
fimull
test
mov
pop
addb
aas
xchg
or
es
ss
in
insb
arpl
and
cltd
cmp
mov
dec
inc
jno
sub
stos
outsb
dec
sub
in
sub
arpl
in
mov
mov
shlb
sbb
and
jb
mov
mov
cmp
dec
pop
out
or
push
nop
xor
dec
hlt
push
lds
ja
cmc
push
jb
mov
jl
popa
xchg
push
xchg
xor
pushf
add
scas
push
das
lcall
fistl
sbb
and
out
cmpsl
pop
je
or
js
arpl
fwait
lahf
push
dec
sub
pop
push
add
mov
add
mov
ret
mov
cmpl
outsl
in
bound
mov
dec
mov
sbb
fs
inc
in
sbb
dec
push
outsl
xlat
dec
and
sbb
lcall
push
ja
dec
or
adc
sub
insb
and
add
add
or
nop
pusha
push
jo
ret
aad
inc
xcrypt-ecb
cmpsl
mov
aad
jne
or
ret
iret
popf
inc
rclb
les
push
inc
shlb
push
inc
popf
inc
aaa
arpl
sbb
imul
mov
cmp
push
jne
test
mov
test
push
shrl
ret
sub
mov
daa
push
lret
mov
jl
pop
sub
clc
mov
mov
cmp
mov
push
add
addl
add
incb
xor
fcom
jne
inc
add
es
jl
mov
xchg
xchg
cmp
dec
mov
xchg
pop
mov
and
lret
add
inc
add
mov
xor
cwtl
and
or
stos
movsb
pop
pop
sahf
ja
ljmp
cmpsb
pop
adc
sub
stos
jge
out
xor
ret
test
mov
inc
pop
test
in
lahf
or
dec
sub
adc
mov
dec
push
jle,pn
mov
mov
jb
in
xor
sub
imul
sub
push
aad
mov
lods
data16
mov
mov
inc
fldl
sub
aam
xchg
mov
mov
add
add
loope
mov
sub
and
orb
jl
dec
mov
mov
loop
xor
je
roll
cwtl
push
loopne
push
pushl
xorb
daa
or
push
xlat
shlb
mov
rcr
pop
pop
or
cmpsl
sbb
sub
mov
insl
inc
or
sbb
add
fisubl
imul
cmp
sahf
addr16
adc
or
ljmp
mov
mov
outsb
and
adc
mov
insl
xor
xor
cmp
adc
cmp
insb
adc
jnp
popa
out
mov
pop
imul
adc
outsb
in
and
and
mov
fidivrl
imul
add
cwtl
mov
push
push
ljmp
mov
xchg
insl
das
adc
push
loope
sbb
mov
jo
leave
jne
subps
dec
pop
outsb
lcall
push
test
push
adc
xor
add
ss
aam
ljmp
inc
mov
sbb
ja
adc
push
xor
dec
out
mov
test
cmp
inc
inc
push
or
mov
and
or
ret
ror
pop
sbb
pop
adc
jge
aaa
jnp
mov
xor
jnp
fstpl
add
adc
sbb
or
sbb
xor
daa
jne
xor
hlt
sti
add
lock
jne
adc
aam
aas
insl
popf
mov
cmp
aad
ljmp
ficomps
jecxz
aad
ljmp
jnp
mov
xor
inc
mov
std
sbb
fisttpll
maxps
sarb
cmp
and
push
pop
popa
xor
ljmp
mov
sahf
jnp
jge
xchg
scas
jo
nop
stos
jle
aaa
rcll
repz
lds
addr16
in
sub
jmp
out
adc
les
push
out
mov
xor
sub
testl
jbe
inc
mov
mov
ja
lock
push
sbb
mov
pop
xchg
mov
cmp
das
outsb
sbb
add
xor
or
mov
jg
fwait
std
add
cmp
lahf
addr16
cmp
call
push
cmp
xor
inc
push
fcoml
jnp
mov
lcall
icebp
out
pusha
arpl
leave
sub
ss
js
jp
ret
mul
xchg
sbb
int
dec
mov
out
lock
adc
call
insl
push
inc
imul
fcmovb
in
jnp
sbb
cmpsl
fcmovu
and
stos
sbb
and
ret
pop
cli
fbstp
gs
dec
clc
sbb
xchg
cltd
and
mov
leave
pop
cmc
in
jl
imul
xlat
call
mov
sub
ss
lock
mov
outsb
and
setae
push
mov
pop
cmp
dec
shrl
js
mov
xchg
and
imul
adc
cmpsb
adcb
cmp
pop
push
pop
vdivss
mov
push
and
add
and
ret
cmp
jbe
add
sarb
push
out
add
push
cmp
fisubs
or
xor
mov
push
out
hlt
lret
and
sub
stos
add
mov
fsubl
push
xlat
arpl
ss
in
mov
mov
sbb
fdivrl
or
inc
cli
sub
add
aad
outsl
jae
inc
jnp,pt
mov
insl
sahf
sbb
pop
ss
mov
daa
loopne
and
dec
ret
inc
hlt
call
xchg
insb
sub
jbe
sahf
xor
loopne
cmp
ljmp
std
out
ret
in
das
inc
sbb
mov
sbb
jae
mov
mov
fsubrl
pop
stos
add
adc
mov
jo
into
mov
mov
cmp
mov
in
mov
and
scas
test
stos
jg
movsb
xor
cmc
jne
pop
cmpsl
addr16
or
addl
jo
outsb
ljmp
enter
mov
sbb
add
xor
jp
pop
into
mov
and
daa
cltd
and
add
jp
sahf
jns
cmp
aam
shll
dec
insl
push
ret
cmp
scas
int3
cmp
jp
cmpsl
pop
arpl
and
sbb
js
add
xchg
and
ret
cmpsl
ret
and
js
pop
mov
mov
mov
sub
sub
jae,pt
xor
lcall
rol
gs
add
or
pop
loopne
and
lods
mov
mov
pushf
fwait
pop
cltd
xchg
pop
arpl
filds
mov
cmpsb
lods
imul
call
bound
popf
lret
xchg
pop
test
dec
ljmp
add
rorl
int3
xchg
cs
ss
iret
mov
outsb
cmp
or
mov
mov
or
pop
jo
das
or
and
jl
sbb
notl
sbb
xchg
xchg
adc
inc
testl
ror
xchg
bound
and
sbb
jl
push
mov
xchg
in
push
adc
pop
scas
mov
add
xchg
fidivs
popa
cmp
xchg
jae
sub
ret
pusha
mov
xchg
xchg
xlat
fcoms
idivl
es
mov
inc
sub
cld
movsb
mov
mov
push
out
mov
push
nop
pop
pop
jae
push
out
repz
cmc
cmp
inc
lret
shlb
xchg
mov
xor
subl
xor
jne
add
add
or
inc
sub
stos
mov
imul
jne
arpl
mov
mov
cwtl
adc
das
cwtl
aad
arpl
add
stos
mov
fbld
and
sub
xor
pop
and
lods
push
jbe
fs
push
sub
push
and
aas
push
iret
jp
pop
cltd
sub
call
or
jge
push
cwtl
sub
inc
aam
xchg
mov
sbb
cmp
popa
shll
outsl
cmp
push
les
aad
cmp
mov
pop
push
outsl
push
xchg
adc
sbb
dec
orb
inc
inc
mov
sbb
adc
xorb
add
shl
fadd
cmp
push
into
js
inc
pushf
bound
nop
ljmp
mov
cmp
loop
orl
shlb
sbb
add
jmp
stos
cmpsb
cmp
jne
dec
dec
or
test
jne
pop
jp
cmp
xor
test
mov
lods
cld
loopne
push
pop
mov
cmp
leave
mov
mov
or
sub
dec
pop
cli
jg
add
sub
adc
sub
cmp
js
sub
fs
sub
xchg
inc
int3
push
xchg
test
inc
into
leave
out
inc
cmpsb
cmp
adc
mov
into
or
inc
adc
int3
adc
data16
sub
test
push
sbb
mov
jae
mov
add
xor
loopne
sbbb
insb
and
mov
repnz
add
push
test
arpl
stos
dec
dec
pop
mov
lock
mov
popf
push
adc
sub
cli
jmp
sub
mov
jno
mov
js
jno
cmpsl
adc
and
adc
fimuls
icebp
adc
mov
cmp
fists
push
add
xchg
fnstsw
jle
mov
lret
bound
jne
fbld
clc
jae
jecxz
repnz
dec
xchg
mov
jnp
test
push
pop
jnp
sbb
xor
outsl
cwtl
rcrl
popf
loopne
cmp
xorb
sub
pop
mov
and
and
push
jge
mov
jno
ss
push
mov
loop
call
bound
fsubs
push
mov
dec
push
cmp
inc
movsb
jle
xchg
xor
fmuls
sbb
lds
clc
or
xor
dec
shrl
xchg
insl
push
xchg
movsb
dec
adc
mov
cltd
std
inc
pop
inc
pop
and
pop
xorb
inc
mov
xchg
sub
xchg
out
and
pop
mov
call
lods
and
xchg
mov
cmpsb
adc
adc
lock
jle
jb
sub
inc
inc
lea
add
xchg
inc
arpl
mull
xchg
hlt
daa
rclb
rclb
fadds
rolb
aaa
lcall
bound
outsb
mov
lret
pop
xor
inc
loope
rol
sbb
pop
inc
sub
or
adc
mov
scas
jb
aam
add
adc
mov
adc
mov
mov
shlb
stos
sub
or
das
inc
xlat
push
cmc
sbb
xor
bound
pop
aad
loope
aas
pop
mov
cmpsl
jb
aaa
jb
out
lock
or
and
mov
out
inc
mov
call
inc
sti
mov
mov
loopne
add
popf
clc
loop
add
call
lods
inc
cs
pop
jb
and
jl
xor
push
push
inc
mov
mov
insb
push
call
and
int
loopne
xor
lds
sbbb
jecxz
rcrb
xchg
insl
loopne
out
mov
dec
cmp
es
mov
das
push
xchg
js
xchg
arpl
xor
pop
sbb
add
cmp
cmpl
stos
add
mov
pop
pop
mov
xlat
xchg
adc
mov
arpl
jl
adc
xchg
xchg
jl
xchg
les
inc
ret
es
stos
sub
mov
jae
mov
push
adc
movb
sub
cmp
xor
adc
ficomps
and
push
push
push
out
test
jb
aas
call
sub
mov
sub
xor
pop
js
insl
in
les
testb
inc
sbb
js
and
or
mov
mov
inc
sub
mov
and
out
push
push
movsb
stos
jnp
cmc
sub
add
lret
test
mov
cwtl
mov
cmp
lea
cmp
call
data16
mov
xchg
push
scas
scas
jmp
scas
pop
cmc
mov
jl
js
inc
out
aam
lret
das
aam
jp
mov
loopne
pop
push
mov
and
or
scas
xor
clc
movsb
jo
aam
pop
lods
sti
inc
mov
xor
inc
pop
mov
cs
sar
pop
sub
jp
lahf
popa
pop
add
data16
inc
int
shrb
push
ss
pop
psubw
push
dec
in
cltd
arpl
es
adc
stos
inc
mov
or
shll
sbb
dec
daa
lds
xor
test
xchg
pusha
fcmovnb
or
test
xlat
jmp
cwtl
rcrb
xor
cmp
sbb
loope
movl
add
mov
popa
pop
cmpsb
cmp
adcb
fnsave
fldt
cmp
mov
stos
mov
ret
jno
shlb
adc
ja
ss
fucomi
xor
and
mov
aad
dec
or
add
xchg
dec
pop
out
add
push
int3
stos
dec
fimull
add
pop
popa
shll
loop
ret
or
cld
lret
loope
cmp
addr16
mov
stc
cwtl
inc
add
xlat
aaa
cmp
mov
shrb
orb
lret
bound
mov
inc
mov
sbb
push
sbb
dec
sbb
rcr
adc
aad
and
mov
adc
add
xor
and
dec
out
pop
addr16
scas
sbb
adc
orb
cmp
in
jne
shll
rorb
sahf
sbb
popf
push
lahf
shlb
xchg
xchg
bound
xchg
out
adc
testl
into
sbb
xor
into
addr16
test
lds
outsl
dec
add
sub
add
mov
mov
and
frstor
cmp
push
add
out
js
lock
js
pop
scas
mov
lods
mov
jne
pushf
icebp
in
stos
add
sbb
or
subb
mov
mov
push
or
call
in
pop
mov
pop
pop
jae
jecxz
or
xchg
sub
ret
jmp
cmp
out
out
adc
movsb
mov
xor
push
jge
jbe
fsubs
push
pop
mov
xchg
std
pop
xor
xlat
push
cmpsb
and
push
test
arpl
mov
sub
popl
dec
adc
idivb
sbb
js
into
roll
mov
fistps
push
lds
js
scas
sub
push
sub
mov
mov
andb
fsubrs
dec
jle
ja
pop
xchg
in
jne
sahf
inc
cli
mov
and
int
add
mov
insb
mov
lea
icebp
ret
outsl
cmpsb
push
add
pusha
cli
xchg
ret
pop
jno
sbb
sub
insb
mov
xor
dec
rolb
out
pop
cmc
dec
sub
arpl
popa
sub
je
das
adc
xchg
sub
sbb
popf
adc
jno
or
mov
sahf
push
add
test
jl
adcl
cmp
sbb
mov
pushf
pop
dec
dec
xor
movsb
push
clc
es
call
dec
add
push
stc
stos
push
gs
xchg
jb
aaa
push
xor
sbb
out
pop
cld
ret
jnp
rcll
dec
shll
rol
aad
bound
mov
add
adc
sbb
insl
mov
push
jno
mov
push
outsb
mov
push
adc
jmp
or
jg
jb
call
mov
mov
call
mov
stos
lea
fimuls
add
mov
or
adc
enter
sbb
inc
push
shlb
es
jp
push
xchg
mov
push
aad
mov
popa
sbb
ss
les
and
out
add
insb
add
or
sub
add
add
inc
les
adc
pop
adc
out
data16
ljmp
mov
sbb
push
aaa
flds
adc
add
xchg
add
mov
jp
or
jl
in
dec
cmp
nop
push
dec
xchg
xor
mov
mov
outsb
cmpsl
sahf
adc
mov
xorl
imul
push
mov
pop
shrl
test
mov
jbe
push
or
mov
in
adcb
mov
imul
scas
dec
dec
call
mov
icebp
bound
mov
mov
pusha
add
pop
push
ret
or
ljmp
or
cld
rorl
aaa
and
stos
push
loope
jge
adc
add
pop
daa
inc
or
push
pop
add
movsb
xlat
mov
xor
adc
stos
cmp
xor
mov
sub
mov
cwtl
je
cmpl
cmp
and
push
test
call
repz
xor
jne
cmpsl
sub
xor
push
addl
arpl
je
rcrb
adc
mov
sbb
adc
es
sbb
add
popl
sub
das
mov
mov
push
cmp
push
mov
lods
mov
out
enter
pop
das
inc
repnz
lods
xchg
dec
cld
fisubl
xchg
enter
mov
or
fcoms
xchg
clc
cmp
push
popa
out
adcb
push
dec
js
jmp
movsb
call
xchg
andl
xchg
xchg
out
cmp
xchg
xor
fwait
xor
lods
sub
notl
nop
push
push
mov
mov
ret
insb
push
sub
push
push
int
loop
in
xor
mov
loope
inc
outsb
mov
sbb
testl
ss
mov
cmp
divl
test
fwait
int3
fsubrs
subl
scas
mov
adc
fdiv
cmpsb
out
lods
insb
or
das
ret
add
cld
mov
fmull
addl
lcall
inc
mov
call
mov
cmp
pusha
testl
and
test
popf
mov
aad
sarl
mov
scas
popa
jno
les
add
or
add
stos
push
mov
loope
mov
sub
test
fisttpl
sbb
loopne
dec
std
cs
xchg
sub
push
ja,pn
sbb
test
push
lds
inc
xchg
aam
sbb
shrb
loop
or
inc
xchg
mov
faddp
xor
iret
insl
xchg
in
popa
mov
scas
imul
push
cwtl
insb
xor
dec
mov
adcb
mov
imul
hlt
cwtl
adc
ret
in
mov
outsl
or
or
or
mov
rorl
add
adcb
imul
rorb
ffreep
lods
cmp
mov
int3
xchg
int
dec
xchg
push
add
ret
and
mov
mov
ret
or
js
jmp
jb
frstor
sbb
or
gs
movsb
mov
xor
mov
and
add
out
sub
jge
cmp
icebp
sub
pop
and
add
dec
and
shll
push
xchg
and
xorb
subb
cwtl
aam
mov
xchg
fmull
mov
mov
pop
test
sti
ja
mov
scas
adc
or
xor
and
adc
dec
pop
inc
dec
add
shrb
pop
mov
inc
andb
pop
mov
out
sahf
jb
pop
mov
cmp
aam
cmp
sbb
cli
push
lret
pop
and
mov
mov
add
movl
sub
pop
sub
rcll
fstps
mov
push
push
sub
fdivrs
pop
jnp
les
in
arpl
rcll
mov
fldt
outsl
andb
inc
and
and
or
mov
xchg
pop
arpl
jo
or
mov
aam
stos
ja
movsl
mov
bound
out
add
xchg
mov
ficompl
or
rcrb
xchg
mov
test
in
push
and
mov
dec
js
pop
push
rorb
or
imul
mov
cmp
pop
adc
je
hlt
nop
jns
add
xor
push
xchg
cwtl
add
pop
sub
dec
in
popa
jge
inc
lods
test
insb
mov
hlt
jl
cmp
test
js
jmp
mov
lcall
icebp
adc
inc
mov
mov
pop
inc
xor
or
pop
add
das
cmp
jmp
xor
adc
adc
xchg
xchg
sarb
xor
sub
or
inc
or
loop
loop
and
dec
or
jl
push
sti
mov
les
cmp
cmp
add
in
shlb
stos
sub
imul
ret
dec
leave
mov
mov
pop
shl
rol
dec
xor
data16
and
inc
dec
mov
pop
or
mov
adc
mov
xlat
scas
mov
mov
push
mov
or
xlat
xor
test
pop
mov
mov
sub
xchg
sub
or
cmp
xor
cmp
enter
add
pushf
ret
ret
hlt
sahf
push
sbb
and
pop
sub
add
xchg
sub
or
mov
mov
pop
das
rclb
js
aad
jb
test
cmpsl
ja
xlat
das
add
add
stos
dec
mov
mov
cmpsl
mov
sub
orl
inc
mov
add
sub
enter
add
mov
jecxz
inc
xchg
lods
stos
add
inc
les
dec
lret
repnz
pushf
xchg
movsl
add
push
addl
ja
das
jecxz
repnz
rol
fnstenv
xchg
ret
mov
inc
xor
or
sbb
add
xchg
xchg
sbb
mov
inc
cmp
ret
aaa
push
lock
mov
fwait
cmp
cltd
adc
inc
pop
es
jl
movsl
daa
hlt
sahf
xchg
rorl
sub
icebp
or
push
int
dec
imul
ljmp
push
xor
nop
sti
sub
sub
int3
outsb
neg
mov
outsb
cmpl
pop
stos
cmpsl
push
pop
jg
pop
mov
mov
aaa
fimuls
idivb
push
adcl
out
mov
mov
pop
add
stos
pop
and
push
shlb
outsl
dec
xor
stc
in
sbbb
add
lods
bound
popf
mov
or
dec
jmp
shll
mov
cmp
xchg
adc
lods
dec
xchg
pop
sub
mov
cltd
rcrl
mov
dec
pop
pop
arpl
shll
mov
dec
lret
orb
jb
add
stos
les
adc
push
test
mov
js
adc
xchg
test
testl
ss
or
mov
fcoml
arpl
popa
add
fldl
jne
xor
mov
scas
sbb
lcall
push
mov
aas
xlat
fwait
xor
mov
and
pop
imull
repnz
add
enter
inc
push
lret
cmc
inc
cmp
andb
or
sbb
nop
test
sub
imul
mov
push
rcrl
cwtl
aaa
outsb
cwtl
or
push
outsb
repnz
pop
inc
dec
lcall
mov
pop
or
sbb
addl
xchg
lods
xchg
int
fstp
add
push
jo
mov
pop
clc
fwait
sbb
jmp
add
xor
push
xchg
ljmp
mov
dec
inc
or
js
or
adc
push
pop
testb
or
push
out
mov
das
add
insl
bound
or
mov
add
lods
or
fs
enter
dec
push
mov
sub
out
mov
ss
pop
dec
fwait
aam
push
cmp
test
stc
into
xchg
inc
and
or
and
bound
popa
or
dec
loop
int
xchg
in
in
push
xor
dec
adc
push
rcll
js
jb
dec
sub
pusha
shr
adc
out
shrb
imul
mov
xor
test
cmpsl
js
iret
and
shlb
mov
mov
mov
push
test
fwait
pop
adc
jl
iret
into
jno
daa
stos
and
in
or
dec
adc
add
call
jno
popa
or
mov
subl
push
add
jo
shl
outsb
push
sbb
aad
scas
xor
fucomi
push
xor
pop
imul
dec
movb
cmp
mov
rorl
xor
adc
push
mov
push
inc
call
mov
andb
xchg
push
jge,pn
pusha
adc
sub
mov
xor
sub
std
xor
mov
push
jnp
jo
inc
scas
cmp
inc
sub
add
pop
insb
xchg
mov
cmp
dec
inc
mov
adc
mov
mov
mov
mov
inc
jo
adc
outsb
std
stos
data16
xor
inc
lds
je
xlat
mov
iret
ja
push
inc
sbb
and
xchg
pop
icebp
xor
xor
jne
xchg
xchg
cmp
push
xor
ret
dec
mov
add
ror
mov
or
gs
jb
es
sbb
mov
inc
fnstcw
dec
sbb
or
or
sahf
sub
inc
nop
mov
clc
aad
and
sub
in
icebp
mov
movsb
mov
sub
push
xchg
inc
inc
clc
pop
mov
or
push
xor
mov
xor
vpaddsb
push
add
call
ret
inc
addr16
cmp
dec
lahf
and
dec
and
stos
arpl
push
and
loopne
mov
mov
jbe
clc
sub
mov
pushf
sub
or
pop
xor
inc
mov
lock
das
orl
pusha
mov
push
rolb
xor
fadds
cmp
inc
and
test
push
add
pop
push
add
jne
cmc
sub
pushf
out
jo
stos
cwtl
push
xchg
pop
adcb
loop
in
add
ret
repnz
mov
adc
jne
jns
test
mov
gs
push
and
xor
ret
jl
stos
nop
push
pusha
adc
mov
inc
pusha
aam
jno
js
cld
lods
mov
mov
fs
add
lods
add
ret
mov
insb
testl
ds
popf
or
ror
pop
orb
data16
pop
add
xchg
into
std
sub
outsl
mov
sub
mov
sub
enter
and
cmp
jmp
inc
mov
call
sbb
gs
jp
sbb
into
ljmp
aam
pusha
jbe
jnp
sub
xchg
test
cmc
adc
or
in
clc
sbb
fwait
out
fisttpll
add
jb
aas
xor
mov
pop
sti
stos
imul
lds
adcb
add
sarl
xor
xchg
push
push
sbb
daa
sub
xchg
movsb
fs
or
or
inc
adc
mov
mov
stos
lods
pop
inc
jne
icebp
sbb
or
hlt
or
pushf
hlt
testb
and
sbb
jno
or
xor
sbb
lods
in
jp
mov
push
sub
sbb
pop
cmpsb
mov
lods
sub
dec
dec
iret
call
push
xchg
mov
xor
jb
loop
xchg
inc
mov
jns
rcrl
aad
or
push
xor
cli
mov
pop
lds
inc
mov
les
test
jbe
add
adc
xchg
mov
xchg
call
stos
aaa
xor
in
sbb
das
mov
inc
sbb
stos
push
adc
or
in
adc
mov
and
fs
pushf
das
mov
shlb
sub
adc
sub
or
inc
dec
and
push
adc
add
mov
pusha
popf
stos
adc
aaa
adc
inc
adc
bound
push
es
pop
adc
jb
je
push
pop
xchg
cwtl
subl
add
push
mov
dec
dec
inc
int
addl
popf
inc
and
pop
and
mov
inc
outsl
lods
xor
inc
or
or
or
or
add
insb
je
mov
jns
xor
dec
add
xchg
cmc
add
mov
mov
jmp
into
aaa
loopne
dec
inc
and
aam
in
addl
xchg
ficomps
sub
pop
sbb
xor
mov
cmp
xchg
xchg
mov
lret
or
push
pop
bound
enter
das
or
sub
mov
add
lods
aad
sbb
and
sub
arpl
push
sub
lcall
arpl
and
sub
lea
arpl
sub
push
dec
enter
or
mov
mov
mov
mov
repz
add
ja
inc
cwtl
push
popa
push
mov
push
mov
and
cmp
add
cwtl
or
or
or
aas
inc
dec
stos
cmpsb
push
mov
mov
pop
xchg
into
adc
sbb
orl
loop
inc
movsl
arpl
cwtl
and
mov
add
mov
pop
mov
ss
shlb
in
pusha
dec
roll
aad
add
cltd
add
mov
pop
or
pop
mov
or
jmp
cs
adcb
add
das
dec
enter
int
sub
sub
vpinsrb
je
repnz
sub
popa
adc
sbb
sub
add
pusha
push
faddl
sbb
sbb
loopne
jg
jb
jo
sub
add
test
insl
dec
lret
mov
pushl
mov
add
jb
mov
pop
dec
add
add
mov
push
or
dec
and
insl
test
ret
fcoms
xchg
jmp
nop
imul
sbb
jmp
in
adc
mov
xchg
and
cltd
xchg
sub
jnp
pusha
shrl
hlt
ret
ljmp
push
lret
push
and
xchg
jge
xchg
add
or
add
sbb
inc
mov
lcall
stos
push
dec
fcom
pusha
add
sbb
and
sarb
sub
popf
insl
adc
loop
stos
push
pop
mov
or
adc
adc
inc
pop
sub
out
mov
es
inc
sub
pusha
and
pushf
mov
and
dec
cli
xor
ret
sub
adc
test
fadd
dec
xor
sbb
rol
test
sub
add
jecxz
sahf
mov
in
fnstsw
sub
inc
leave
sbb
sbb
outsb
test
push
arpl
xor
inc
pushf
int3
ja
jecxz
mov
jmp
inc
pop
xchg
jp
mov
dec
push
out
mov
test
xor
dec
push
test
add
icebp
adc
adc
adc
jo
lea
jge
movsb
js
movsl
test
mov
ja
jp
rclb
sti
mov
jle
test
pop
dec
mov
push
jp
xor
adc
inc
fisttpll
mov
sbb
lret
aad
mov
adc
movsl
stos
rclb
andl
adc
hlt
lods
mov
bound
adc
xor
sbb
fwait
sarl
fs
sub
in
mov
stos
and
sbb
mov
test
xchg
mov
pop
jo
call
mov
inc
ss
jmp
aam
xor
jmp
inc
jbe
mov
sub
sbb
ret
sub
inc
mov
push
popa
sbb
jmp
xchg
mov
pop
cmp
mov
mov
push
test
and
stos
add
cmpsb
jecxz
mov
adc
stos
ja
dec
push
jae
clc
lret
or
cwtl
rcll
rcrl
push
nop
mov
mov
mov
push
and
or
cwtl
inc
lret
dec
mov
xor
mov
jecxz
mov
inc
mov
pop
sub
in
outsl
movl
es
pusha
iret
rolb
inc
jmp
in
sbb
faddl
push
or
adc
pusha
retw
test
sbb
pusha
mov
jae
fldenv
mov
addb
pusha
inc
mov
cmpsb
and
add
dec
sub
mov
add
jnp
out
push
test
test
int3
cmp
je
inc
xlat
scas
dec
xchg
adcb
pushf
sbb
dec
cs
fs
cmp
jo
iret
add
lock
sub
sub
xchg
jb
mov
insb
call
test
push
bound
je
cmpsb
jb
movsb
or
mov
adc
test
ss
cmp
das
lea
movsb
and
jp
lods
mov
sbb
sbb
in
cwtl
inc
sub
push
dec
add
cld
ss
jmp
add
sti
andb
loopne
orl
add
and
shlb
rolb
adc
cmp
sub
inc
push
xor
push
xchg
popl
lods
loope
sbb
sahf
nopl
dec
adc
nop
adc
mov
add
push
push
mov
push
inc
mov
xor
fdecstp
dec
rcll
or
inc
lret
int3
adc
aas
push
add
jmp
jnp
add
leave
pop
cmpsl
mov
pop
cli
cmp
add
sbb
mov
sbb
dec
mov
or
das
mull
insb
mov
push
push
push
or
mov
arpl
pop
out
lret
int3
add
data16
sub
movsb
dec
and
xchg
xor
inc
adc
mov
dec
inc
int3
xor
das
jge
push
push
xchg
push
inc
adc
and
mov
sbb
push
jne
mov
push
int
mov
sti
add
or
cwtl
pop
push
cmp
and
adc
push
repz
dec
mov
ror
sub
or
cmpb
aad
push
mov
imul
js
lods
xor
mov
test
jbe
add
aaa
pop
arpl
jp
es
push
inc
jo
sbb
lock
les
es
push
inc
add
or
movsb
lock
pop
or
or
push
ror
lret
xchg
or
test
jb
fisubrs
insb
cmp
test
sbb
sbb
inc
jnp
mov
aam
ja
cmp
loopne
ret
add
push
lcall
cmpb
mov
hlt
sar
mov
fistpll
inc
and
addr16
or
pop
push
pusha
in
sbb
cmpsl
jl
scas
insl
pop
inc
add
pop
mov
sub
test
or
bound
int
es
and
xchg
bound
or
test
sarl
sub
add
mov
sub
daa
mov
imul
rcrb
sbb
cmp
jb
mov
xor
mov
xchg
aam
int3
fdivrp
inc
sbb
mov
xor
cwtl
scas
jb
add
outsl
rcrl
js
or
xor
inc
sub
scas
jl
push
rcrl
xor
xchg
mov
inc
test
push
and
cmp
fcom
nop
sub
insl
jecxz
adc
mov
xorl
push
adc
dec
scas
stos
cwtl
movsb
dec
add
jle
testb
sub
nop
int
sarl
jge
aam
jne
in
pusha
add
mov
pop
sub
xchg
popf
add
dec
xor
mov
fimull
test
sub
sub
insl
leave
inc
dec
movsl
out
or
iret
or
mov
movsb
add
cmp
js
add
jae
or
dec
filds
or
jge
xor
mov
pop
sub
pop
sub
or
inc
lcall
sub
roll
orb
mov
mov
xor
les
sub
mov
or
push
cmp
stos
sbb
xchg
sbb
insl
in
sub
jl
jmp
adc
js
add
aam
mov
mov
mov
ret
mov
mul
rcrb
lods
and
int
fld
mov
mov
xor
sbb
push
in
xor
sub
sbbb
popa
or
cwtl
sti
pop
lret
fs
les
in
aad
or
xor
cld
sbb
call
in
or
les
jl
repz
or
inc
or
aaa
add
adcl
cmp
push
add
andb
stos
mov
xchg
sub
dec
adc
add
loopne
pop
cmp
lret
pop
lea
dec
mov
inc
adc
mov
push
xor
add
push
rorl
fstl
xor
loopne
cld
pop
imul
in
out
mov
add
fmul
adc
mov
jne
push
inc
cli
mov
cmpsb
or
mov
sub
loope
repnz
cmc
sahf
fisubs
stos
xchg
scas
sub
adc
inc
je
test
arpl
fdivr
and
fdivr
inc
sub
and
cmp
push
and
mov
leave
xchg
sbbb
out
test
adc
jns
inc
mov
jno
xlat
into
inc
sub
pusha
in
or
pop
xor
cs
mov
sti
mov
add
push
adc
mov
add
or
push
sbb
nop
mov
xor
push
stos
add
jecxz
mov
cld
adc
or
sub
xchg
out
loope
cwtl
jecxz
or
in
or
or
in
cmp
into
add
pop
add
andb
mov
pop
push
push
jnp
clc
push
dec
and
or
xor
sbb
xchg
and
mov
fwait
push
adc
lods
xchg
lret
cwtl
jno
xchg
xor
mov
jne
inc
leave
data16
dec
dec
mov
and
add
adc
lea
shlb
es
and
cmc
es
xchg
inc
ret
sub
adc
push
daa
dec
outsb
nop
mov
fstl
jnp
push
outsb
inc
arpl
jnp
lret
xchg
inc
lcall
fwait
out
rorl
xchg
push
inc
adc
xchg
adc
inc
mov
pop
sub
or
mov
push
sub
dec
xchg
adc
lea
je
push
push
fisttps
mov
cmpsl
pop
or
inc
sbbb
jl
jo
sbb
in
xor
dec
cmp
mov
pop
adc
sti
mov
clc
cwtl
mov
jnp
es
aam
mov
pop
adc
sbb
sahf
add
aam
lret
pop
xor
push
call
mov
adc
push
mov
cmp
arpl
jb
sub
pop
xchg
mov
leave
xor
inc
cmp
mov
lods
pusha
mov
repz
enter
movsb
and
inc
cmp
pop
and
jo
arpl
cmp
or
and
or
mov
and
lds
xor
mov
shr
dec
sbb
or
or
or
ja
rcll
mov
xchg
sti
shr
mov
popa
inc
mov
xor
push
mov
out
xchg
arpl
std
xor
and
test
or
xor
cmp
sar
mov
sbb
arpl
pop
mov
pushf
sarb
ficoms
cmpsb
mov
cmp
xchg
mov
mov
stos
xlat
imul
into
out
mov
inc
lar
iret
stc
ret
mov
loope
xor
fidivl
pop
push
push
push
push
jno
mov
push
lret
adc
inc
addr16
push
jl
xor
pop
hlt
mov
fdivrs
cmp
push
popf
cltd
cmp
dec
mov
adc
hlt
adc
test
roll
clc
jnp
pop
icebp
add
sub
xor
mov
cmp
add
repz
cmpsl
divl
push
cwtl
cmp
xchg
pop
dec
and
or
sbb
dec
or
dec
stos
pop
or
jecxz
addr16
ret
out
adc
sub
dec
mov
les
mov
mov
enter
mov
cmp
repnz
shlb
jae
adc
push
jge
in
inc
xchg
sub
push
jl
orb
xor
mov
arpl
call
sahf
adc
mov
mov
lcall
cmp
xchg
dec
dec
roll
pop
mov
dec
mov
es
xor
xor
popa
cmp
aam
in
push
add
jb
aam
or
jmp
hlt
and
xor
mov
push
inc
jne
and
lods
pop
add
xchg
popf
gs
inc
fisubrl
pop
mov
xchg
sbb
sbb
les
pop
jno
jne
or
mov
add
nop
cld
xor
adc
xlat
xor
js
mov
inc
pushf
cmp
ficoms
jnp
mov
xchg
push
jnp
cmp
jl
testl
sbb
mov
lods
mov
call
enter
fld
hlt
adc
jo
pushf
ret
inc
lock
loop
fwait
scas
fsubs
mov
and
mov
jnp
lret
loope
cld
clc
faddl
pop
dec
cmpsb
scas
sbb
inc
add
icebp
ds
jnp
xchg
testl
adc
roll
xchg
stos
push
push
test
xchg
lcall
sub
mov
stc
js
xchg
subb
addr16
xchg
and
inc
jg
adc
add
jecxz
and
and
test
push
dec
sub
cmp
cwtl
push
jo
push
pop
inc
jge
shl
and
jne
pop
cld
mov
pop
ror
in
or
outsl
aaa
int3
mov
sbb
push
cwtl
cltd
or
data16
out
xchg
mov
loope
pop
adc
xchg
cmp
xchg
adc
jl
bound
insb
push
or
and
clc
adc
xchg
es
fsubl
and
aad
and
pop
test
and
mov
or
cli
mov
add
cmpb
add
mov
sbb
or
jge
movsb
and
sub
and
dec
adcb
lock
jmp
rcrb
pushf
lock
stos
shrl
inc
es
insl
fbstp
or
mov
push
jb
insl
jge
fbstp
adc
loop
xor
push
adc
incl
sbb
jle
cmp
movl
sbb
pop
adc
push
nop
mov
into
pop
mov
rolb
fwait
and
idivb
sarb
or
cmp
loopne
cli
or
and
fisttpll
lds
push
mov
ja
jnp
movsl
dec
js
xchg
add
inc
mov
inc
jmp
imul
mov
and
mov
sbb
sbb
inc
push
sbb
mov
aad
fwait
xor
sub
nop
aas
cmp
ret
sub
jno
adc
pop
xlat
adc
and
test
dec
push
inc
mov
inc
lea
pop
jb
subl
aad
shrb
jle
outsl
mov
fsubrp
rcll
add
jno
ror
gs
push
dec
jp,pt
mov
and
push
stos
ljmp
dec
add
icebp
test
sahf
mov
sub
pop
daa
mov
add
ds
imul
jns
cmp
xor
add
in
adc
push
add
push
shll
loop
lret
ljmp
rolb
sub
sub
mov
call
pop
push
scas
mov
mov
orl
jnp
adc
cmpsb
sbb
push
out
xor
xchg
imul
fidivs
push
adc
lcall
or
mov
and
cmp
dec
push
xchg
in
lret
cmp
and
mov
adc
aam
lods
and
push
mov
sbb
mov
loop
pop
sub
nop
mov
cmc
cmp
mov
shlb
dec
xor
inc
and
or
add
and
icebp
test
cmp
loope
adc
add
loopne
ret
orl
push
xchg
mov
aaa
orl
shlb
ja
orl
lret
loopne
xor
push
adc
mov
push
sbb
sbb
frstor
dec
leave
call
push
mov
xor
fnsave
mov
and
sbb
fidivrl
jmp
cmp
pop
xlat
push
shll
std
xchg
xchg
bound
mov
xor
lods
push
or
fsubs
mov
imul
add
test
movsb
cmp
mov
sub
sub
push
cmp
popa
push
shll
stos
andb
test
in
pop
pushf
pop
nop
push
adc
pop
xchg
inc
inc
out
mov
sbb
xor
push
mov
hlt
xchg
fsubl
rorl
push
push
andb
mov
inc
adc
sub
scas
das
aam
mull
xchg
push
push
arpl
js
sbb
inc
cmp
repnz
xor
or
in
mov
adc
push
xlat
or
mov
popf
fistl
scas
loop
sbb
jne
mov
test
and
cs
data16
mov
push
es
sbb
xlat
sahf
outsl
or
cmp
sbb
insl
into
mov
mov
add
jmp
add
and
or
mov
inc
jmp
daa
add
daa
xchg
pop
in
add
mov
cmp
in
dec
and
adcb
std
dec
inc
sub
rcrb
jo
fadd
jne
jbe
xchg
loope
add
rcrb
mov
mov
pop
in
cmp
fstpl
movups
es
out
add
icebp
pop
sbb
cmp
cmp
pop
imull
sub
insb
xor
sbb
or
inc
add
test
jnp
fs
shl
outsl
adc
jp
out
movsl
jne
mov
cld
pop
fidivl
inc
mov
adc
cmp
or
js
pushf
shll
mov
xor
sub
mov
cmc
lea
or
mov
or
cmp
mov
mov
ja
les
addr16
dec
fs
outsb
sbb
aam
pop
add
dec
sub
mov
xchg
mov
loopne
orb
int
in
and
sub
sub
mov
adc
push
inc
add
ffree
dec
mov
add
mov
loop
popl
cs
mov
pop
pushf
sbb
or
cmc
mov
add
adc
push
les
imul
das
add
inc
cmp
std
rcrl
mov
gs
and
push
fdivs
push
sub
out
andb
idivl
pop
pusha
add
add
test
js
hlt
mov
xchg
jae
sbb
and
bound
stos
ret
push
mov
imul
jnp
mov
inc
add
bound
pop
mov
add
shll
jmp
ljmp
call
jge
push
dec
add
add
mov
int
mov
sbb
mov
mov
stos
jb
in
dec
add
cmp
sub
adcb
jne
and
add
or
lcall
mov
outsb
cmp
leave
push
stos
ret
mov
mov
addr16
dec
add
mov
nop
jb
adc
push
jne
adc
sbb
push
pop
xor
or
cmc
mov
cmp
mov
imul
aas
xchg
dec
lods
add
mov
hlt
scas
pop
xor
icebp
lods
push
mov
sub
mov
shrb
sub
popf
or
lea
jb
push
push
adc
mov
shr
pusha
dec
xchg
mov
jb
jae
sub
in
mov
inc
shrl
jae
xor
lock
and
adc
mov
xchg
lea
push
dec
or
push
test
mov
test
sahf
mov
ret
inc
dec
or
int
mov
add
and
adc
jo
inc
or
or
adc
lcall
push
mov
aam
inc
sbb
sbb
add
daa
fisubrl
sbb
bound
or
lds
add
or
sbb
js
adc
mov
inc
daa
movsb
sbb
pop
add
add
lock
in
cmp
sub
sub
cmpb
and
jne
call
jae
xor
xchg
push
cmp
ret
fsubs
aam
shr
cmp
pop
aaa
add
lret
add
sub
std
xchg
addl
ret
xchg
inc
add
data16
ret
mov
adc
sub
cmp
idivl
mov
inc
xor
imulb
xor
ret
push
das
dec
dec
sub
xlat
mov
and
mov
enter
clc
loopne
push
inc
negl
cmp
xchg
outsl
daa
mov
movsl
stc
shr
fsubrl
and
pop
sub
shll
jl
xor
cmp
ja
ss
and
out
vdivps
push
je
sbb
mov
orb
js
adc
inc
ret
testl
lods
inc
rolb
mov
jb
shl
sub
ret
aam
add
inc
xchg
mov
sbb
xchg
in
mov
adc
hlt
fwait
scas
cmp
xor
pop
cmp
faddp
xchg
test
fst
mov
adc
adc
lcall
mov
loop
clc
sbb
and
adc
push
or
dec
loope
push
and
cld
sti
das
mov
test
enter
mov
dec
notb
cltd
loopne
dec
clc
popa
mov
push
aam
js
pop
andb
negl
dec
sub
inc
xchg
lods
dec
push
mov
cmp
scas
fimuls
jl
cwtl
nop
popa
roll
bound
cmp
lcall
xchg
aad
mov
lds
and
hlt
add
movsb
dec
and
sbb
jbe
notl
gs
addr16
ja
inc
lret
test
xchg
push
xor
test
arpl
ljmp
sti
imul
nop
adc
mov
xor
fwait
jo
sub
mov
pusha
add
or
xor
add
lcall
xchg
sub
pop
hlt
and
pop
xor
sub
and
jl
push
jo
mov
add
insl
pop
lahf
add
orb
divl
jp
mov
shll
dec
pop
jl
mov
add
jne
pusha
adc
mov
cwtl
out
daa
fwait
add
mov
adc
pushf
mov
inc
stos
je
add
xchg
adc
pusha
movsb
orb
push
mov
pop
jo
xor
adc
mov
shll
rcrl
idivl
jecxz
xor
call
xor
xor
xchg
add
mov
dec
cmp
test
arpl
lock
daa
add
fisubs
xchg
ret
xchg
movl
mov
outsb
lcall
cmpsl
pop
loop
aaa
add
cmp
adc
inc
pop
push
cmp
jno
cltd
xchg
les
pop
pop
adc
sub
adc
cmp
add
icebp
push
mov
hlt
jp
dec
add
mov
mov
push
adcl
pop
inc
jp
andl
ret
lret
and
nop
lahf
fldenv
and
cmp
insl
test
jo
jb
hlt
out
dec
mov
or
aam
fwait
mov
push
pop
jp
mov
sbb
aaa
and
sbb
push
or
fadd
test
lret
cld
inc
push
cmpsb
movsl
das
mov
or
fcoms
mov
add
inc
add
jae
dec
jl
outsw
inc
ror
sub
cmpsl
xchg
jmp
sub
jnp
push
lds
mov
and
add
xchg
xor
xor
pusha
inc
sbb
test
adc
scas
andb
shrb
adc
add
jl
pop
add
scas
sub
or
arpl
bound
adcb
js
faddl
cmp
lods
sbb
pop
in
sahf
cs
push
mov
sub
push
shlb
push
ret
xchg
test
ljmp
out
mov
pop
fs
inc
cltd
mov
jp
test
and
or
lret
jb
je
jmp
pop
in
ss
dec
dec
push
mov
push
mov
sub
test
inc
les
cmpsb
imul
xor
leave
jmp
xchg
mov
and
jmp
mov
lea
popf
jge
cs
pop
movsb
outsb
push
xchg
mov
mov
and
jnp
adc
jbe
insb
sub
or
fs
arpl
inc
inc
shll
imul
xlat
sub
jecxz
mov
mov
repz
nop
sub
data16
fs
lds
pop
inc
in
mulb
pop
push
and
mov
insb
adc
add
xchg
stos
sbb
add
jle
mov
insb
dec
jnp
inc
daa
mov
and
imul
push
jns
and
lods
aaa
jmp
jbe
stc
daa
ficompl
mov
push
and
pop
cmp
loopne
addb
jne
aas
sbb
loopne
cwtl
pop
adc
stc
lret
pushl
mov
xor
cmp
jl
test
pop
enter
jnp
dec
xor
mov
jg
repz
cmp
sti
scas
cld
pop
add
mov
push
cmp
push
push
add
sbb
pop
pop
add
in
mov
cwtl
movsb
push
and
js
mov
adc
jbe
fisttps
sbb
push
pushf
call
or
roll
imul
cmpb
sbb
in
mov
mov
scas
xor
sbb
das
test
or
aaa
xor
in
sub
cmp
pop
and
or
sub
lea
push
mov
pusha
adc
jne
mov
in
in
jmp
es
adc
jae
outsb
sar
clc
bound
lea
test
mov
mov
ja
test
je
arpl
jge
sub
imul
or
dec
jae
sub
pusha
push
or
pop
cs
jp
fbld
fs
icebp
jmp
and
js
mov
rdpmc
mov
mov
jnp
das
fs
les
data16
aaa
jle
ja
inc
jne
stos
popa
cmp
adc
inc
rcl
pop
dec
out
out
and
dec
leave
jnp
sbb
sbb
add
sti
adc
pop
je
mov
jne
push
adc
mul
mov
jne
cmp
cmp
jbe
push
sub
rcr
data16
testl
fcmovne
xchg
sbb
push
rcr
or
pop
sti
and
stos
fdiv
cmc
andb
ret
mov
arpl
repnz
sub
jmp
push
je
into
ficomps
jo
fcoms
push
and
and
xlat
test
sbb
push
pop
jne
sub
lock
and
inc
aaa
pop
jbe
and
jb
sahf
sbb
sub
and
jbe
sbb
jo
roll
cwtl
ret
in
inc
inc
adc
pop
insl
scas
add
das
rcrb
lods
je
popa
and
push
movntps
or
and
sbb
jbe
bound
add
pop
iret
into
adc
movsb
push
push
add
mov
dec
rcl
outsb
data16
cmp
ficompl
flds
pop
sbb
sbb
and
out
cmp
js
aad
mov
ret
insl
sub
adc
rcll
pop
aaa
jmp
movups
xchg
push
sti
jno
or
imul
mov
fsubrp
xor
es
mov
out
xadd
xor
mov
push
push
cltd
sub
ret
lock
mov
push
xchg
inc
push
in
inc
dec
sbb
inc
inc
mov
scas
jne
cmpsb
outsl
daa
cmpsl
loopne
cmp
fildl
jle
dec
stos
cmp
xor
inc
mov
push
xor
adc
pushf
add
int
xor
xlat
sahf
push
mov
push
pop
test
push
repnz
call
iret
inc
les
bound
arpl
dec
jnp
inc
test
adc
scas
push
inc
aad
lock
nopl
js
icebp
pop
aaa
rolb
rorl
or
scas
jno
mov
pusha
in
mov
stos
test
adc
loopne
mov
ss
jl
sbb
sbb
xchg
xor
xchg
xchg
xlat
adc
dec
xor
and
cmpsb
jne
xor
xor
jl
ljmp
xlat
test
fwait
int
aaa
ret
arpl
jae
insb
popf
mov
push
nop
xchg
daa
mov
popa
shll
jg
mov
or
scas
repnz
push
or
sbb
mov
or
jno
fimull
mov
sub
orl
mov
jno
jmp
inc
xor
repnz
fisubs
jge
cmp
aam
arpl
lret
adc
pop
add
cwtl
dec
sub
xor
int3
jne
jl
pop
and
aaa
pop
push
dec
cmp
adc
mov
fcompl
cmp
or
push
lds
adc
push
fcoml
push
aaa
xchg
pop
out
sub
add
mov
mov
les
jnp
and
out
jmp
cwtl
test
sub
add
xorl
bound
cwtl
mov
clc
pusha
nop
faddl
pop
pop
push
in
xlat
inc
loopne
pop
cmpsb
dec
push
pop
fs
icebp
in
insb
xlat
jge
insl
and
movsb
jge
add
js
in
dec
mov
in
jmp
dec
pop
adc
xlat
mov
cmpsl
movsb
ret
test
push
scas
sbb
shlb
xchg
mov
or
mov
dec
cmp
or
jg
mov
aad
fstps
or
dec
inc
pop
add
jmp
inc
mulb
insb
cmpsl
sbb
add
inc
and
mov
iret
add
xor
idivl
ret
jge
jno
insb
je
cld
inc
lock
popf
stos
ds
ja
mov
jb
jp
sarl
and
popf
and
xchg
rdtsc
jle
mov
jnp
shrb
and
test
xor
leave
in
ja
jp
or
jg
das
ja
fisttpl
cmp
sbb
inc
xor
rorb
xchg
mov
adc
andb
bound
mov
or
push
shlb
sbb
and
adc
and
cmp
ret
in
fadds
xor
pop
and
popa
xor
mov
inc
jge
test
negb
pop
sub
inc
xor
out
fstps
sbb
out
sub
jmp
mov
aad
mov
das
jno
pop
inc
bound
mov
mov
pop
push
test
mov
adc
ds
add
enter
mov
pop
xor
mov
or
mov
jo
xchg
test
xor
pop
aaa
and
or
sub
jge
xor
inc
js
into
inc
inc
sub
push
mov
jo
pop
mov
dec
arpl
mov
pop
or
mov
push
add
jmp
int
js
cmc
add
mov
mov
cmpsb
fcompl
sub
jne
insl
out
xchg
and
or
inc
sub
fildl
add
adc
mov
cmp
xor
sbb
movsb
mov
and
adc
pop
xor
stc
mov
cwtl
test
push
cs
js
insl
cmp
mov
inc
push
push
sub
outsb
inc
xor
mov
orl
bound
ret
pop
push
pushf
ret
dec
in
popa
push
sbb
pop
ret
push
jne
ret
mov
sbb
call
mov
mov
pop
nop
pop
jl
or
pop
daa
push
inc
push
das
mov
xchg
cmp
add
mov
lds
xchg
ljmp
xor
mov
cmpsl
add
sub
jo
inc
push
or
sub
cs
inc
rcrb
aam
ret
mov
lds
mov
and
pop
jb
sub
cmp
add
cmp
cmpsb
pushf
lods
push
or
inc
push
cli
mov
jmp
mov
jge
adc
jae
insl
out
outsb
jle
lea
cmpsl
mov
ret
ficompl
and
sub
push
jl
jmp
cmpsb
loop
xchg
popf
xchg
scas
sti
or
fsubr
adc
sub
sub
adc
lea
push
push
add
dec
sub
inc
dec
mov
sarl
ljmp
andb
popa
add
xor
jne
ss
jmp
adc
pop
jge
xor
pop
xlat
cmpsb
lcall
movb
shrb
cmpsl
das
es
jp
add
jnp
test
movsb
mov
inc
dec
mov
aas
push
adc
pop
jae
mov
and
test
mov
dec
add
mov
lcall
adc
jp
stos
dec
mov
cmpsb
scas
lea
xchg
xchg
push
push
cwtl
lcall
push
mov
dec
jb
arpl
inc
jno
mov
cwtl
sbb
pusha
add
push
shrb
adc
mov
sub
andl
and
lods
cwtl
ffreep
sbb
mov
decb
es
das
outsb
jmp
sbb
inc
mov
test
push
xor
popa
cmp
cmp
mov
sbb
sbbb
jbe
sbb
pop
loopne
or
cmpsl
pushf
in
sub
shll
leave
dec
jnp
inc
call
shll
mov
adcb
push
push
push
std
fsubrl
aad
and
inc
xchg
sub
iretw
out
js
inc
push
adc
or
aaa
push
adcb
push
inc
inc
inc
cmc
lcall
add
and
sub
add
aam
push
xor
scas
sahf
mov
scas
push
sbb
xor
stos
cwtl
sub
dec
or
sub
nop
inc
mov
inc
cmp
push
pop
outsb
movsb
and
xchg
sbb
nop
subb
cmpsl
loopne
lcall
addr16
int3
add
xor
adc
or
jge
imul
or
pusha
je
scas
bound
cmp
jnp
or
lds
in
out
and
je
into
push
orl
mov
cwtl
or
adc
mov
mov
shll
std
les
call
pop
xor
push
xchg
in
rcl
ss
dec
or
mov
jnp
add
pop
shll
daa
outsl
sbb
cwtl
sub
movsb
pusha
add
arpl
add
das
ret
mov
xchg
into
jb
out
adc
loopne
jae
ret
or
dec
orb
jmp
pop
faddp
cli
mov
or
aas
dec
jb
jecxz
cmp
js
adc
outsl
cwtl
jge
inc
mov
and
or
adc
stc
inc
dec
lea
insl
icebp
imul
in
adc
dec
inc
jmp
pop
inc
xor
adc
or
sub
push
inc
sub
push
mov
mov
mov
mov
cmp
add
cmpsb
dec
sub
hlt
add
test
outsl
shlb
xor
jbe
adc
iret
in
mov
aam
mov
or
out
push
mov
adc
add
loopne
je
mov
lock
inc
add
pop
mov
mov
dec
arpl
imul
mov
pop
or
test
jnp
adc
idivb
testl
stos
push
dec
and
call
ret
loope,pn
repnz
shrb
adc
popf
cltd
js
test
js
cli
sbb
ljmp
add
sub
dec
nop
sti
push
push
xchg
mov
pop
adc
xchg
jo
shlb
inc
mov
add
jmp
add
jae
add
sub
mov
movsl
jp
cltd
mov
and
outsl
mov
pop
mov
popa
adc
pop
dec
out
cmpl
xchg
jo
leave
add
sarb
and
dec
stos
inc
fildl
sbbb
ret
cmpl
lret
jecxz
arpl
test
mov
sub
insb
daa
bsr
adc
or
xchg
inc
fidivl
mov
rclb
sahf
dec
sbb
ja
mulb
sub
and
push
andb
pop
jo
or
xchg
sub
pop
imul
pop
adc
add
or
xlat
adc
jno
jge
in
lods
and
pop
data16
in
and
insb
or
jno
xchg
dec
add
mov
stos
cmovg
popa
mov
jp
cld
xor
jns
and
das
filds
push
fimuls
lods
adc
fnstsw
mov
dec
inc
cmp
or
xor
mov
ret
lcall
and
mov
add
mov
mov
test
add
sbb
cmp
in
ljmp
and
pusha
or
mov
out
nop
or
mov
cs
outsl
sbb
rorb
adc
imull
imul
push
xchg
imul
daa
inc
repz
xchg
movsl
sbb
loopne
mov
cs
push
mov
inc
sbb
addb
and
mov
and
pushf
add
jp
fildll
fadd
mov
pop
pop
push
inc
inc
scas
mov
jg
add
sbb
stos
mov
xor
inc
arpl
stos
dec
and
ret
in
and
sbb
popf
add
push
cwtl
stos
loopne
leave
push
mull
loop
rol
test
outsb
pop
stos
push
add
std
xchg
or
ljmp
ret
and
sbb
lret
jb
out
push
movsb
pop
push
adc
repnz
js
inc
xor
push
test
test
or
and
inc
sbb
sti
cmp
mov
mov
lock
xor
pop
and
push
sbb
push
sub
es
or
cmc
pop
and
cmp
sbb
mov
adc
or
adc
add
scas
xchg
aam
sbb
popa
pop
sbb
les
adc
sub
cmpsb
pop
adc
mov
adc
cmp
jecxz
or
add
add
clc
lcall
adc
mov
and
xor
push
loopne
ja
or
mov
test
rcl
sbb
adc
jmp
loopne
test
and
pop
adc
inc
cltd
cmpsb
movsl
sub
push
test
int3
pop
mov
ljmp
inc
cmp
mov
adc
jmp
push
mov
fs
push
je
inc
in
push
push
sub
push
mov
push
fwait
and
sbb
xor
rclb
insb
enter
inc
retw
dec
int3
or
inc
adc
pusha
sbb
fbld
add
push
rorb
add
sub
loope
sub
imul
mov
dec
xchg
in
popa
neg
fidivrl
mov
popa
jbe
jnp
mov
mov
add
femms
insb
and
orl
push
mov
sbb
js
sbbb
jl
fs
int3
xor
xchg
jge
cwtl
sbb
std
push
test
dec
adc
sbb
xchg
aad
adc
sub
sub
jg
adc
pop
sub
lret
pop
push
jne
sub
fldcw
xchg
roll
push
adc
daa
xchg
pushf
or
and
mov
out
insb
es
sub
sbbl
sub
in
jmp
sbb
add
inc
mov
mov
dec
fistpll
pop
push
sarb
stos
ret
dec
pop
cmp
or
xor
mov
loopne
ja
lods
mov
fwait
inc
aad
adc
scas
mov
or
sub
mov
adc
rcl
test
lods
ljmp
jecxz
add
cmp
jne
inc
cmp
add
bound
setb
jns
aaa
and
xchg
xor
cmpsb
push
mov
cmpb
and
and
cmp
or
inc
adc
lret
lcall
jp
inc
xchg
clc
dec
xor
cwtl
xor
jmp
gs
icebp
dec
hlt
loope
xchg
sub
mov
addb
gs
sub
push
inc
pop
mov
mov
sahf
inc
bound
or
xor
sahf
push
inc
cmp
push
mov
leave
add
jne
and
sbb
repz
jge
outsb
pop
js
and
push
cmp
sub
fisttps
push
jmp
cmpsb
lahf
pusha
or
xchg
in
adc
mull
or
arpl
add
or
add
or
mov
mov
adc
add
and
scas
aaa
icebp
pop
pushf
cmp
jecxz
int
and
ss
ss
sub
out
add
dec
rolb
test
dec
inc
in
mov
add
adc
pop
xor
add
pop
and
mov
pop
stos
lock
inc
sub
jp
imul
xor
nop
or
adc
mov
imul
sbb
cmp
dec
or
fimuls
in
pop
ja
add
dec
addr16
sub
and
sbb
adc
icebp
add
cltd
dec
lret
mov
xor
andb
mov
mov
jae
jle
xchg
dec
scas
jge
test
ficoms
or
add
inc
cmp
lock
mov
adc
adc
or
das
adc
push
xor
test
dec
outsb
lret
pop
adc
xchg
jle
adc
push
shlb
mov
mov
int
push
or
and
movsl
sub
sub
mov
adc
sub
mov
insb
jmp
ret
sbb
imull
or
test
rcr
ficomps
sbb
js
fsubrs
cmp
cltd
loopne
pushf
enter
xor
cmpsl
lock
xchg
call
mov
mov
pop
fistpl
xlat
cmp
fmulp
sub
lret
inc
filds
mov
jo
and
lods
inc
shrb
fildl
add
lds
cs
cld
mov
pop
dec
cmp
movsb
lret
addb
add
sub
adc
aam
add
cmpsl
fiadds
ljmp
and
jp
jno
adc
jp
fwait
mov
jge
cmp
lret
ja
dec
or
in
aad
xor
mov
aam
shl
repz
ljmp
pop
push
sbb
jne
add
inc
icebp
xor
inc
add
xchg
outsl
shll
pop
inc
sti
xchg
inc
inc
out
push
sbb
dec
out
push
xchg
add
cmp
fimuls
fcmovnu
dec
sbb
jb
mov
fmull
call
das
cmovg
sahf
shlb
test
mov
negl
cmpsb
adc
aad
stos
stc
cmp
pop
ss
add
out
push
popf
add
test
mov
and
pop
xor
xor
rolb
xor
jns
xor
push
or
dec
sarl
cmpsb
stos
inc
mov
inc
addl
jo
pop
jb
add
add
sbb
mov
sub
aad
loopne
push
adc
es
in
mov
and
inc
loop
xor
push
pop
mov
xchg
mov
icebp
pop
rorb
data16
push
pop
adc
inc
scas
test
or
ja
pushf
and
lcall
mov
cwtl
inc
dec
adc
sub
push
add
inc
data16
push
xor
cmp
dec
mov
jl
scas
lock
lods
sbb
add
pop
orl
push
test
jl
ret
bound
push
mov
and
sbb
cmpsl
and
add
ljmp
dec
push
shrl
xchg
mov
loop
jnp
pushf
dec
scas
xor
dec
stos
ds
adc
sub
sbb
and
imul
cli
mov
fstps
mov
pop
xor
mov
pop
mov
and
pminub
or
std
xchg
adc
xor
sub
inc
daa
pushl
sub
inc
xor
mov
push
xor
mov
mov
sub
fs
addr16
scas
cmp
rorb
and
cltd
pop
push
sbb
pop
add
popf
aam
or
lret
std
push
cmpl
es
inc
xchg
cmp
pop
adcb
push
push
pusha
pop
adc
push
shlb
mov
or
mov
cmc
push
and
mov
inc
mov
test
dec
lock
push
dec
rorb
adc
add
sub
icebp
andb
cwtl
aad
mov
int
push
jo
cmpb
repnz
inc
xor
cmp
xor
mov
arpl
insb
or
mov
subb
gs
mov
adc
mov
out
ja
cmpsb
pop
out
mov
add
iret
xchg
inc
cmc
bound
xor
or
and
lcall
clc
mov
jnp
mov
push
xor
push
dec
js
clc
test
je
rcll
or
gs
leave
adc
in
lods
and
lds
mov
jae
inc
push
push
data16
out
sub
roll
xor
add
jg
test
sbb
cmp
adc
mov
insl
cmp
movsl
xor
scas
dec
aam
sbb
or
testl
inc
int3
out
add
aad
jo
pop
jb
je
adc
lock
sbbl
mov
mov
sub
add
dec
jne
frstor
or
popf
inc
dec
xor
js
lock
stc
and
out
dec
mov
roll
add
add
arpl
or
ss
andl
jnp
jns
das
loop
push
loope
jae
push
adc
xchg
add
lret
sub
push
pop
scas
xor
aad
add
bound
fwait
mov
daa
int3
mov
jp
mov
inc
lock
sub
dec
inc
popf
inc
shl
sbb
notl
arpl
push
mov
es
inc
and
pop
push
fists
push
mov
lods
idivl
add
cmp
mov
dec
inc
call
sub
jne
add
dec
adc
push
add
ret
mov
or
inc
inc
aad
js
addl
cltd
jge
ja
lock
and
push
dec
lea
xor
push
and
adc
and
cmpsb
and
mov
push
lds
shll
jp
nop
gs
xor
dec
push
pushf
test
jb
in
push
xchg
adc
outsb
xchg
cwtl
add
cmp
push
dec
outsb
add
not
add
mov
or
pop
add
inc
inc
or
push
add
pop
xchg
xchg
xor
or
punpckhdq
inc
and
out
lcall
sub
cli
mov
stos
push
sub
jnp
pop
sub
adc
pop
dec
push
shlb
sub
mov
fmuls
mov
and
ret
pop
sarl
push
pop
mov
push
mov
push
mov
add
inc
sti
adc
ret
xchg
cmp
cmp
dec
adc
mov
xchg
sahf
mov
dec
dec
sbb
pop
int
sbb
cmp
int
add
and
mov
jnp
dec
sub
push
add
aad
adc
pop
cmp
mov
push
addr16
lahf
and
mov
adc
inc
into
loopne
aaa
jp
jmp
add
and
mov
adc
cmpsb
dec
jmp
out
add
pop
push
mov
aad
pop
pop
and
adc
and
xor
push
pusha
add
xor
pop
xor
lods
xor
aas
xlat
and
ja
add
xchg
ds
jp
sbb
adc
inc
mov
inc
psllw
push
scas
inc
insb
jnp
jmp
inc
fists
cmp
adc
pushf
push
addr16
sbb
xor
xchg
jp
lock
push
mov
mov
popf
push
add
dec
jne
adc
sbb
or
pop
sbb
sub
xchg
popl
mov
jne
es
ret
sub
js
ret
adc
jl
and
sub
adc
mov
lret
mov
mov
mov
lcall
mov
mov
ret
jb
aam
frstor
adc
in
sub
sub
lock
popa
xchg
lock
push
or
xchg
adc
push
clc
inc
and
jb
scas
test
pop
es
imul
or
sbb
mov
xchg
sbb
fisubrs
inc
xor
shlb
add
push
or
jp
or
add
xor
stos
xchg
push
or
flds
jo
add
mov
int
adcb
js
cmp
or
dec
and
or
add
push
push
dec
cld
mulw
push
push
or
jno
mov
sarl
inc
add
push
test
xchg
xchg
imul
fs
or
mov
andl
adc
jge
pusha
mov
mov
push
add
in
shlb
mov
cmc
xchg
add
mov
scas
dec
cmpsl
xchg
or
lret
inc
nop
imul
stos
std
gs
adc
in
pop
test
lds
out
add
adc
inc
xchg
sub
aaa
or
jmp
inc
cs
mov
andl
data16
fiaddl
dec
adc
popa
dec
add
adc
addb
dec
or
adc
punpckldq
ja
or
sahf
mov
jo
push
adc
dec
shll
push
sarb
and
int3
shr
sbb
dec
mov
mov
add
cmp
push
dec
push
je
xchg
push
andb
dec
fimull
or
mov
push
mov
and
scas
ja
and
xchg
test
dec
mov
xchg
adc
and
outsl
mov
test
pop
mov
inc
mov
clc
int3
js
push
adc
mov
push
push
out
adc
dec
jns
or
xor
pop
sub
movsb
mov
push
mov
inc
sbb
mov
rcll
mov
inc
push
push
pop
adc
js
xchg
inc
xchg
fwait
push
xchg
sub
xor
push
shlb
sbb
xchg
or
sarl
out
mov
dec
insb
ret
pop
lock
jg
inc
inc
sub
sub
adc
inc
xor
xchg
push
or
push
mov
cli
sub
out
cmp
mov
adc
sbb
inc
xchg
pop
adc
inc
mov
xor
cwtl
dec
shlb
call
xor
imul
test
push
xchg
jge
out
test
add
fnstsw
sub
pusha
adc
mov
jp
push
mov
xor
inc
inc
pop
push
or
and
inc
mov
cmpsb
loopne
lds
roll
fidivs
xchg
enter
or
clc
mov
push
sub
xchg
add
mov
adc
adc
jmp
pop
cs
sbb
inc
or
imull
mov
or
sbb
adc
or
aas
loope
inc
cmpsl
and
mov
shlb
xor
lods
xchg
sub
mov
add
push
insb
nop
mov
sub
and
data16
dec
dec
and
sub
adc
inc
xor
or
push
fs
stos
ljmp
mov
js
rol
orl
pop
rcll
aad
ja
and
or
dec
push
sub
lds
push
shll
mov
cs
jne
test
mov
stos
and
and
add
shlb
ret
sub
scas
mov
or
cli
add
movl
test
mov
fisttps
mov
sub
adc
push
daa
jmp
js
mov
mov
js
jo
mulb
dec
scas
mov
inc
cmp
or
ja
das
loop
mov
jecxz
jp
and
push
push
lahf
fstps
dec
mov
add
inc
sub
dec
sub
lcall
fwait
adc
or
mov
enter
inc
std
loopne
or
mov
jge
jnp
jb
push
loope
shlb
add
test
jae
add
mov
xchg
rcll
push
in
push
movb
call
push
data16
adc
test
outsl
sub
dec
shll
sbb
push
int
sbb
xor
mov
sub
sub
jecxz
pop
adc
cs
insl
xchg
mov
stos
xchg
jmp
or
jmp
adc
jno
mov
push
push
int
neg
test
inc
lcall
sub
mov
pusha
pop
icebp
pop
int3
and
arpl
push
adc
jne
inc
mov
es
fldcw
cmp
pop
add
andb
lds
or
or
loope
adc
cmpb
lock
push
or
test
sub
dec
xor
lahf
aam
jl
jae
pop
sub
fsts
data16
in
inc
or
and
data16
mov
std
mov
das
xor
fadds
dec
aas
icebp
dec
push
addb
pusha
lods
sbbl
mov
sbb
inc
jnp
movsb
leave
mov
and
add
push
das
jecxz
dec
xor
jecxz
out
arpl
shlb
shll
or
ret
pop
movsl
inc
dec
sub
pusha
mov
das
push
les
sub
cmp
add
or
fstpl
fidivrl
cmp
outsb
sub
xchg
popf
add
cwtl
jmp
adc
pop
out
xchg
and
sbbb
cli
push
test
hlt
stos
lret
mov
sub
xor
jo
or
xchg
or
mov
cmp
inc
and
pop
xchg
pop
push
dec
nop
test
dec
clc
push
movsl
or
lods
xchg
push
jne
mov
inc
sarb
mov
mov
and
jns
test
leave
jp
sub
hlt
imul
arpl
das
lods
into
add
pop
mov
and
popl
pop
pop
je
and
push
mov
mov
mov
inc
push
jbe
or
test
pushf
inc
ljmp
sbb
cs
mov
jo
orl
pop
lret
das
stos
cwtl
adc
push
int
adc
in
xor
mov
or
cmpsb
addr16
inc
adc
mov
out
adc
adc
inc
xchg
mov
mov
mov
ljmp
lcall
shrb
lcall
sti
inc
movsb
push
dec
mov
andl
cld
xchg
ljmp
add
push
les
rcll
and
lods
jge
adc
ds
loop
ja
ljmp
and
mov
shrl
pusha
pop
push
mov
les
pop
adc
jmp
or
adc
shr
push
mov
and
loope
jge
add
mov
mov
xchg
hlt
aam
lods
xor
mov
jp
xchg
lahf
ljmp
mov
cmc
js
xor
pop
cmp
ljmp
lds
push
lcall
mov
daa
push
stos
add
aam
xor
jl
xor
xor
adc
and
sbb
sub
sub
or
or
test
ret
sbb
mov
or
dec
dec
jns
int
push
aad
cs
loop
bound
mov
mov
or
lret
adc
sub
mov
push
fstpt
dec
in
in
or
dec
push
add
mov
inc
loope
fidivl
or
fldl
rcrl
aad
popf
cli
inc
scas
xchg
add
rcll
jb
jb
cmp
mov
jge
add
jo
jnp
fidivrl
ljmp
dec
shll
ret
inc
push
test
xchg
or
jmp
test
mov
sbb
int3
lahf
adc
add
mov
xor
mov
adc
pop
pop
fsubs
cmp
sub
add
dec
lret
push
ljmp
xchg
ret
ljmp
testl
rcrb
dec
rorb
sub
iret
aas
push
cwtl
loopne
fs
or
mov
inc
addb
cmp
je
mov
iret
imul
push
xchg
and
pusha
sub
pushf
cmpsb
pop
mov
js
mov
icebp
push
sbb
stos
add
xor
cmp
mov
js
sub
xor
js
in
imul
int3
idiv
xchg
movsb
push
fdivl
add
lock
push
or
mov
sarl
mov
daa
pop
push
add
popa
rcrl
jbe
mov
mov
inc
inc
lods
int3
mov
idivb
add
call
and
mov
aam
je
mov
sub
test
and
sbb
cmp
lcall
ret
jbe
call
and
out
and
inc
jg
sub
and
subb
mov
jnp
push
sbbl
daa
shlb
push
and
sbb
sti
jp
adc
scas
add
dec
rcl
push
dec
inc
dec
lcall
jne
pusha
adc
in
add
dec
jecxz
in
xchg
and
lods
add
into
xor
scas
inc
ljmp
dec
jbe
add
add
jmp
adc
cs
or
sub
pop
sbb
ficoms
scas
sti
add
pop
pop
cmp
lds
pop
mov
inc
cmp
popf
mov
aaa
aad
mov
scas
sub
fisubl
adc
std
sti
out
xor
outsb
pop
add
loopne
push
int
cmp
pop
dec
pop
jae
bound
sbb
mov
sub
sub
and
lcall
sbb
lret
push
mov
outsb
cmp
pop
and
add
mov
fdivs
rorb
jnp
shll
mov
push
test
or
xor
pop
cmpsl
inc
ret
or
test
jae
sub
push
bnd
ret
mov
les
sysret
pop
rorl
xchg
call
imul
sub
or
sbb
push
pusha
pop
es
or
call
daa
xor
or
sub
add
fistps
out
sarl
push
and
test
mov
mov
adc
mov
push
sahf
xchg
push
fmull
push
jmp
outsb
push
clc
jp
jmp
scas
das
stos
arpl
xor
mov
loopne
mov
xor
and
bound
addr16
inc
in
mov
js
inc
out
and
ret
pop
popl
sbb
mov
mov
mov
mov
jp
jg
pushf
hlt
mov
adc
daa
xchg
repz
sub
arpl
sbb
or
pandn
int3
sti
rorl
loopne
in
clc
iret
ljmp
insb
xchg
arpl
push
lock
add
push
ljmp
mov
call
int3
xchg
mov
cli
shr
sbb
loope
mov
push
inc
loop
sarb
scas
movsl
daa
mov
jnp
mov
aaa
add
inc
je
ljmp
sti
call
mov
sbb
xlat
mov
jne
or
mov
cmp
jge
and
cmp
and
out
sub
test
ss
lahf
pushl
mov
sub
pop
adc
sub
stos
ljmp
and
jle
ljmp
daa
mov
xor
mov
add
sbb
hlt
fiadds
dec
mov
mov
dec
mov
cwtl
sub
lods
loope
sub
and
jno
pop
rep
xor
outsl
adc
cmp
pop
hlt
or
or
sbb
clc
add
outsb
out
cmp
ret
popa
js
sbb
and
lea
cs
scas
cmp
dec
loopne
in
or
xchg
inc
dec
push
push
xor
loopne
push
aaa
mov
cmpb
addr16
fnsave
add
lret
mov
and
ret
out
xorl
sub
into
fidivrl
inc
popf
out
jno
mov
ljmp
sub
mov
inc
dec
xchg
jp
je
in
je
or
ret
lods
inc
and
xlat
sarl
outsb
or
ljmp
jmp
jo
cwtl
fdiv
mov
insb
xchg
imul
or
fwait
cmp
jnp
mov
adc
mov
or
and
shrb
outsb
rcl
rcr
ja
jmp
pop
jecxz
ret
mov
jecxz
ret
dec
adc
push
mov
lods
es
lret
jb
mov
ret
sub
mov
ds
push
out
mov
mov
outsl
insl
addr16
adc
and
dec
mov
test
push
mov
repz
test
sbb
dec
fwait
loope
imul
fstps
rcrb
mov
inc
jmp
leave
ljmp
mov
lods
lds
push
pusha
mov
das
xchg
sbb
test
mov
test
pminsw
fistpl
mov
xor
mov
dec
mov
adc
mov
ret
scas
add
enter
sub
dec
pusha
sbb
test
sti
fdivl
jb
int3
or
jne
lock
out
fwait
mov
pop
fstpt
lea
ljmp
leave
cmp
mov
js
jecxz
cmpsb
and
and
sub
clc
fcompl
sbb
push
or
add
mov
fldt
es
or
fdivs
les
or
push
inc
xchg
test
sti
xlat
roll
inc
fcmovnbe
insb
or
xor
scas
leave
add
jmp
fdivl
adc
cli
mov
push
lds
jge
aaa
loope
adc
fisttps
pop
ljmp
inc
pop
xchg
inc
mov
and
jbe
jg
pop
push
jo
dec
ds
sub
add
add
jbe
pushf
push
jge
xchg
pop
dec
xchg
rcll
stc
inc
pop
push
mov
movsb
pop
jnp
scas
pop
movsb
ds
push
add
xor
outsb
cmp
cwtl
add
shrl
cmp
and
aaa
or
mov
cwtl
shlb
cld
xchg
cmp
out
jle
js
push
xchg
mov
jmp
outsb
and
jno
or
pop
cmpsl
repnz
xor
lret
in
roll
lcall
shll
loopne
in
lret
xorl
lahf
jb
rcrb
popf
insb
jne
lret
mov
jne
mov
sub
dec
push
push
pop
xacquire
jno
xor
sbb
mov
or
pavgb
xor
fldenv
xchg
lret
mov
lock
sub
pop
add
and
rcll
jmp
loopne
test
mov
repz
mov
or
popf
push
loope
stos
cmp
mov
cwtl
jl
loopne
sub
inc
js
cltd
sub
or
frstor
and
or
sbb
mov
push
and
data16
inc
dec
outsb
sbb
sbb
pusha
mov
ret
imul
js
xchg
stos
enter
mov
repz
or
add
lret
int
orb
lods
and
or
xchg
xor
jo
cmp
loope
insl
adc
int
out
mov
hlt
jbe
and
int3
scas
mov
or
sbb
sahf
ret
xchg
cmp
adc
cmp
mov
aam
and
push
mull
std
bnd
and
adc
addr16
rolb
mov
int
lret
or
mov
xor
and
cmp
subb
inc
adc
push
xor
mov
dec
in
push
xrelease
divl
inc
bound
sbb
andl
lods
cli
sbb
mov
add
in
jle
cmp
sub
sub
mov
inc
nopl
addr16
leave
aam
pop
fucomp
loope
push
lods
mov
sub
loope
and
ret
sarl
sub
inc
jo
push
adc
fdivr
pushf
popf
rolb
std
mov
mov
clc
mov
fdivs
inc
mov
mov
mov
add
pushf
sti
push
and
mov
xor
enter
into
fdiv
aam
out
shlb
jb
shl
stos
jmp
ret
cmp
enter
rcrb
enter
rcrl
sub
scas
orl
push
mov
rcrl
jge
dec
xorps
out
xchg
cwtl
aad
femms
and
and
xlat
xchg
adc
dec
and
mov
or
mull
insl
fists
fs
add
push
and
test
xor
mov
jp
div
sub
dec
xor
aas
es
ljmp
dec
push
add
bound
out
and
sbb
mov
dec
pop
rclb
cwtl
inc
lods
or
call
rcrb
and
sub
test
ret
daa
fcompl
push
in
add
add
xor
add
pushf
sahf
cmp
call
cmc
push
mov
sarl
es
aaa
mov
das
sahf
jae
and
mov
ljmp
in
mov
xlat
or
movsb
lcall
dec
je
stos
pop
pop
lods
adc
ss
ds
pop
les
jl
sti
stos
push
sbbb
fbld
mov
outsl
or
nop
and
pop
mov
rcrb
and
and
clc
push
inc
cmpsb
and
or
sahf
loopne
fadds
daa
scas
dec
lock
adc
nop
push
mov
jecxz
cmp
repnz
test
sbb
mov
mov
adcb
lock
arpl
add
test
dec
adc
stos
cmovne
into
mov
ja
daa
adc
in
jl
jp
sbb
ret
mov
lret
jae
pop
lds
sub
or
jbe
shlb
fisubl
test
adcb
outsl
jb
jbe
data16
aaa
test
sub
adc
jbe
popa
adc
stos
cld
jae
cmp
outsb
loop
inc
cmc
mov
aas
fsubr
popa
sub
xchg
dec
adc
mov
call
filds
dec
push
mov
orl
sbb
sti
push
xchg
and
mov
aaa
push
cld
dec
ret
cmp
sub
call
ffreep
jae
or
push
or
mov
ret
test
rorb
fstl
or
jb
lods
nopl
pop
xchg
and
call
jp
cmp
fadd
add
mov
sbb
sub
popa
shr
adc
aam
or
sub
fnsave
mov
inc
dec
jbe
or
in
mov
lcall
cmp
ds
lret
sub
jns
arpl
add
jge
mov
xchg
xlat
push
in
rorl
pushf
lahf
sub
or
outsl
inc
psubsb
adc
ds
es
inc
repz
bound
sbb
sbbb
ret
mov
or
jae
jnp
pop
jb
aas
jae
test
push
incl
ret
inc
mov
data16
xchg
ja
add
rol
mov
outsb
dec
adc
nop
mov
clc
call
mov
movsb
mov
and
cs
mov
cltd
es
popa
or
push
inc
xchg
loope
mov
ret
inc
sub
test
shrl
adc
scas
xchg
repz
cmp
push
or
loop
jle
cmp
les
lret
pop
mov
inc
idiv
je
xchg
dec
push
andl
pop
and
iret
fsubrl
into
mov
int
dec
inc
lret
and
cmp
push
dec
adc
je
push
dec
out
orb
ljmp
mov
fistpll
pop
iret
fistl
push
es
mov
int3
rol
stos
or
int
push
adcb
push
sti
into
or
jns
into
dec
adc
and
push
out
xor
aaa
cmc
je
xchg
sub
leave
add
sub
out
cmp
pop
adc
xchg
cs
jne
ret
sub
pop
fs
les
stc
int3
adc
movsl
enter
inc
bound
loop
enter
adc
jno
outsl
add
or
mov
xor
sub
fs
pop
cmp
lcall
and
pop
sti
int
add
outsb
xor
push
arpl
shlb
jae
lahf
pop
sbb
into
or
test
and
jp
clc
mov
adc
in
pop
xor
dec
add
inc
insb
inc
cmpb
sbb
call
movsl
cmp
and
cmp
es
mov
add
xor
ret
sub
cmpb
pop
mov
xchg
push
fsubr
std
loope
jecxz
xchg
and
mov
rcll
sarl
or
sbb
xchg
or
ljmp
lea
movsb
clc
jae
xorb
add
push
iret
sub
jb
aaa
iret
dec
ret
ror
iret
mov
subl
push
add
adc
jmp
sbb
movsb
fidivrl
loope
rcr
data16
cmp
mov
loope
aad
xor
mov
xchg
cli
shlb
cmp
cli
scas
testl
lcall
and
adcb
sti
mov
outsl
pop
adc
aad
sub
lcall
cmp
pop
mov
ljmp
sub
xor
sbb
xchg
repz
jo
or
xchg
dec
sub
and
add
inc
xor
mov
aam
mov
push
inc
aaa
pushl
push
inc
xor
push
inc
adc
pushf
dec
cmpsl
cmpsb
rclb
mov
mov
mov
pushf
rorl
mov
or
neg
dec
lret
int
sbb
ljmp
aaa
movsl
pushf
js
sub
sub
xchg
mov
insl
inc
inc
cmpl
jb
insl
jbe
je
cmp
jae
aas
and
add
inc
out
ror
sbb
shll
adc
hlt
dec
pusha
inc
ret
outsb
test
mov
sub
jg
imul
popa
push
in
addl
mov
push
daa
sbb
out
mov
jmp
jp
ljmp
adc
and
and
sbb
sbb
ds
lds
lds
mov
and
or
sbb
ljmp
mov
test
lcall
lea
jmp
sarb
arpl
pop
xlat
popa
rclb
add
and
lret
leave
movb
adc
aad
and
leave
testl
cmp
mov
mov
loopne
and
into
je
das
xchg
cmp
push
push
aad
movsb
jae
aad
ljmp
jp
xchg
jecxz
push
das
add
arpl
mov
inc
scas
inc
mov
cld
xrelease
push
loope
adc
imul
sub
mov
aaa
movsl
adc
test
sbb
xor
cmp
xchg
or
fwait
shrb
aas
out
aam
pusha
call
or
or
lcall
xor
cmpsl
jbe
push
int3
sbb
inc
jb
xor
add
je
pop
lods
inc
sbb
fisubrl
and
call
jnp
loopne
push
xchg
jne
popa
sbb
or
sub
subb
das
mov
mov
mov
push
addr16
lcall
mov
mov
cwtl
xor
and
pop
test
daa
sub
xor
xlat
cmp
cmp
push
dec
cmp
xor
repz
push
mov
add
mov
mov
or
mov
mov
or
xor
sub
ljmp
sbb
and
cmp
imul
or
pop
and
push
xor
xchg
xorb
fs
dec
adc
cmpsb
fcomps
cmpsl
stos
or
dec
shrb
or
adc
daa
push
test
xchg
jle
out
and
adc
xor
mov
js
mov
lds
dec
mov
lea
inc
lods
sub
xor
add
add
addl
js
loop
loop
dec
ja
push
xor
mov
push
daa
add
dec
or
shrl
and
mov
aam
cmpsb
pop
sub
les
cmpsl
rcll
pop
sarb
lea
clc
mov
pusha
shlb
insl
add
sub
ret
and
add
and
xchg
fs
js
loope
mov
push
aad
sub
or
sbb
das
cmpsb
fistpl
xor
push
push
dec
cmpb
or
and
insb
xchg
add
xchg
or
add
xchg
jle
mov
movl
stos
lahf
les
xchg
ja
xchg
loop
inc
fldt
jmp
cs
cli
sbb
popf
and
and
imul
cmp
and
jo
adc
or
adc
lea
xor
popa
pushf
nop
or
push
xchg
push
jno
repnz
sub
cmpsb
xchg
rolb
test
add
pop
ja
and
fwait
inc
jo
jb
pop
pop
sub
pop
imul
ljmp
fidivs
add
scas
inc
nop
or
insb
xchg
shrb
mov
sbb
pop
mov
outsb
jae
add
or
push
das
lcall
out
sub
cs
pop
add
je
add
push
xor
and
or
cld
or
pop
push
test
adc
xchg
clc
pop
push
rcl
cmpl
mov
daa
dec
add
xor
daa
mov
and
xchg
xlat
mov
mov
mov
mov
loopne
sub
push
fidivs
adc
movsl
gs
dec
dec
fwait
xor
rorb
inc
js
stos
ret
aaa
js
leave
push
sbb
mull
aad
add
add
les
cmp
fs
add
rcrb
fsubrl
ds
adc
test
push
mov
add
xchg
addb
xor
inc
cld
pop
inc
push
cmp
push
cmp
dec
xor
pop
mov
cmp
icebp
vpor
ret
out
fsubs
xor
outsb
cmp
add
aaa
jl
fnstenv
cmp
and
sub
mov
xbegin
cltd
mov
les
lcall
jmp
jb
aam
clc
mov
or
cmp
pop
pop
or
sub
pop
push
adc
call
adc
dec
and
ret
sub
sub
arpl
rcl
sbb
mov
inc
xor
mov
lret
and
je
mov
mov
rorl
add
ret
pushl
jp
fs
or
mov
stos
or
xor
and
cmpsl
push
sub
add
adc
lds
sbb
push
push
jle
cmp
add
sub
push
js
out
call
add
sub
stos
push
fs
lods
cwtl
push
add
push
test
cmp
mov
and
mov
jb
and
leave
or
xchg
push
movsb
cmp
pop
insl
or
rorl
sbb
adc
and
push
rorl
xor
inc
sbb
cs
inc
add
popf
test
popf
pop
test
mov
out
int
jge
test
lods
mov
aaa
xor
int
in
push
push
test
iret
cmpsl
push
inc
xor
dec
pusha
pop
add
cwtl
sub
push
xor
inc
pop
ret
add
inc
mov
xchg
push
rcrl
out
aam
inc
and
sub
test
xchg
push
lock
mov
mov
mov
mov
lods
mov
inc
or
lds
xor
enter
or
xchg
mov
inc
sarl
and
sbb
or
test
cmp
or
call
je
popa
push
xor
sub
jo
sbb
mov
mov
loopne
dec
pop
int3
sub
or
xor
lds
sub
bound
xchg
sub
mov
stc
add
push
mov
push
xor
and
mov
pop
nop
mov
or
aas
or
imull
aad
lods
scas
inc
or
sub
sahf
stos
rorb
jno
push
sub
push
mov
mov
sti
jp
fists
adc
mov
imul
scas
imul
popa
cli
pop
xchg
fwait
pushf
jae
dec
mov
and
push
es
sub
mov
insb
orb
fstpt
subl
pusha
inc
add
jl
cmp
adc
lods
jnp
fsubr
ljmp
and
and
outsb
inc
leave
mov
jae
jae
cwtl
push
xor
popa
sar
push
or
xor
pop
add
jnp
cmp
sbb
fisubl
dec
mov
inc
dec
xor
add
aaa
es
outsl
or
push
outsb
inc
jae
adc
daa
push
icebp
xchg
jbe
pop
adc
mov
jne
sahf
sub
arpl
push
adc
or
add
ffreep
mov
rcrb
add
mov
add
jl
adc
pushf
or
test
push
je
mov
out
and
xchg
lods
lds
fdivrs
sahf
cld
hlt
xor
jmp
and
in
and
cmp
ds
ret
inc
inc
xchg
add
add
out
inc
shlb
fiadds
es
mov
sub
in
or
adc
cmp
add
dec
mov
sbb
iret
andb
adc
and
push
test
ds
mov
adc
and
popl
lret
mov
out
sahf
pop
sub
xor
outsl
add
adc
adc
add
sahf
add
js
sbb
jl
fistl
inc
ja
sti
jb
fwait
lods
sub
stos
test
sbb
xchg
popf
mov
nop
mov
jp
adc
in
xor
mulb
or
pop
sbb
dec
mov
pop
int3
loope
jl
cmp
xor
loop
sub
mov
cmpsl
add
iret
add
andl
pop
dec
pop
ds
or
push
shll
sub
arpl
mov
mov
mov
mov
or
jno
dec
out
in
stc
xor
mov
jge
je
sbb
sbb
jecxz
push
jl
cmp
aad
jle
sbb
ret
sbb
fdiv
addr16
dec
adc
dec
adc
lods
popf
adc
lahf
pop
xor
lret
mov
cmp
mov
out
adc
mov
fnstenv
add
inc
icebp
js
mov
jl
sub
in
mov
add
in
pop
sub
push
scas
mov
inc
pop
sub
push
cmp
sub
push
pop
inc
mov
lcall
sub
fldt
dec
mov
hlt
sub
inc
add
cmp
shlb
inc
xchg
aas
mov
insl
inc
add
inc
jmp
test
or
push
aaa
dec
inc
push
dec
xchg
es
and
push
insb
mov
test
mov
test
jnp
mov
adc
hlt
mov
repz
xor
ret
inc
xor
fs
xor
mov
out
push
xchg
std
pop
pop
sbb
jae
or
pop
mov
fstl
and
jb
push
xchg
jl
xchg
inc
xor
mov
and
sub
add
pop
push
inc
and
xchg
adc
and
lcall
jns
push
push
adc
push
lds
xchg
das
lea
and
lds
aam
and
or
mov
shl
xor
stos
push
lret
add
sahf
mov
in
imul
cmpsl
js
icebp
stos
xchg
push
adc
stos
orb
inc
or
add
pop
adc
cmpsl
add
ja
inc
lret
add
mov
push
in
movsb
sub
inc
xor
mov
sub
lods
jp
in
call
pop
adc
push
pushf
pop
mov
mov
adc
and
add
mov
jne
and
cmc
or
addb
inc
adc
xor
jl
jno
jno
mov
mov
xchg
jo
loop
add
push
push
mov
inc
pushf
and
add
subb
pop
cltd
imul
mov
mov
jl
sub
inc
xor
lcall
sub
or
mov
adc
rcrb
loope
fcoml
aad
jnp
inc
mov
into
jbe
cmp
adc
adc
adc
and
or
mov
push
add
nop
subb
xor
adc
or
sub
sbb
popf
fldl
adcb
and
mov
adc
in
push
adc
stos
cmp
mov
test
les
loope
pop
jmp
out
xchg
xchg
mov
sbb
cs
cmpsl
lret
push
mov
jmp
je
or
fwait
or
mov
or
dec
adc
ret
jmp
jecxz
push
adc
push
mov
bound
xchg
add
fdivl
mov
and
pop
adc
sub
sub
add
daa
pushf
mov
test
sbb
inc
xchg
scas
stos
and
and
es
xchg
mov
gs
mov
out
aad
lea
call
push
nop
call
xchg
int3
mov
add
cmc
bound
and
xor
pop
mov
daa
rol
ja
dec
ss
xor
cmp
mov
inc
lahf
fistpll
ret
cwtl
add
dec
jbe
loop
jecxz
mov
dec
into
and
mov
add
add
scas
sti
sub
and
mov
mov
int
mov
xchg
sub
outsl
sbb
xchg
dec
mov
jp
or
push
push
jmp
add
or
xor
push
mov
es
shlb
loopne
test
daa
mov
scas
mov
nop
sub
daa
ljmp
push
or
nop
faddl
push
mov
adc
aad
and
mov
mov
popa
je
mov
insl
roll
add
addb
aad
xor
mov
rorb
inc
add
or
aam
cmpb
xor
lds
cmp
xchg
dec
sub
adc
outsb
mov
adc
imul
aam
js
jmp
pop
fs
into
ljmp
add
sub
stos
shrl
xor
int3
ljmp
mov
loop
push
iret
sbb
adc
add
xor
and
cwtl
push
into
xor
aad
addb
cmpsb
cmpsb
fwait
inc
add
loop
popf
dec
xor
scas
mov
push
dec
pop
jno
adc
inc
pushf
ljmp
push
xor
mov
scas
mov
mov
jnp
add
add
push
inc
sub
je
pop
sbb
andl
int3
mov
mov
xor
dec
xor
add
cmpsb
and
pop
jecxz
lods
test
stos
ret
adc
aam
pop
cmp
jb
push
mov
or
or
sbb
pop
xor
adc
mov
ds
ljmp
out
test
add
pop
jmp
xchg
xchg
inc
cmpxchg
in
adc
mov
movsb
sbb
int3
add
dec
xor
testl
ret
cmp
add
lret
cmp
push
fcomps
xor
dec
inc
pop
cmp
push
and
xor
rorb
shll
cmp
adc
loopne
icebp
adc
enter
add
adc
inc
icebp
sub
dec
xor
mov
test
decb
mov
stos
lcall
inc
dec
cmp
dec
mov
es
jnp
or
dec
inc
sub
xchg
rcll
sbb
mov
xchg
inc
popf
ret
and
scas
jge
dec
sbb
push
add
and
sbb
movsl
mov
cwtl
jno
xchg
jb
inc
add
or
dec
inc
xor
daa
or
and
mov
push
les
and
jb
loop
add
sbb
cmp
or
shll
aaa
sbb
dec
popf
jmp
movsb
pop
push
movsb
icebp
adc
add
pop
and
or
nop
or
and
jecxz
ja
mov
das
dec
jb
and
adc
fsubl
insb
stos
mov
mov
inc
add
jno
mov
lcall
call
shlb
adc
pop
add
inc
clc
inc
loope
and
cmpsb
xor
xor
sbb
inc
adc
dec
inc
push
add
push
sub
je
and
add
push
add
dec
dec
xchg
add
push
test
int3
add
aad
sbb
sub
pop
stc
mov
and
push
outsb
mov
mov
adc
cmp
andl
dec
adc
add
sbb
sbb
cmpl
xchg
mov
mov
jle
add
adc
shlb
je
pusha
cmc
mov
outsb
sti
push
es
adc
lds
push
sub
xchg
loopne
jecxz
push
in
in
iret
inc
xor
sbbl
lret
leave
sub
jle
pusha
dec
stc
sbb
lds
or
add
int
inc
xor
fdivrs
mov
xor
cmp
push
mov
push
xorb
adc
sub
push
mov
or
bound
xor
mov
inc
push
add
mov
cmp
cmp
or
push
adc
cmp
orb
xchg
and
andb
adc
les
mov
lret
or
or
stos
and
andb
inc
or
icebp
pop
xor
test
pop
scas
mov
push
xchg
pop
jb
icebp
es
xor
ss
loop
lret
push
jnp
fsubs
jbe
and
adc
orl
mov
or
sbb
inc
lods
test
or
or
pop
or
mov
inc
push
xchg
loop
loopne
addr16
negb
sbb
lock
jl
int
sub
shlb
mov
xor
mov
push
mull
int3
pop
or
jg
adc
data16
notl
in
push
js
aas
pop
ret
add
adc
lock
push
out
add
arpl
lock
rclb
cmp
adc
and
or
js
dec
xchg
fisubl
add
fldcw
rolb
add
inc
add
into
call
mov
sbb
or
fstpl
iret
ja
js
insl
jg
sbb
sub
or
stos
sub
add
mov
sub
pop
loope
adc
add
xchg
and
inc
daa
pop
adc
ror
jno
into
dec
push
sub
push
into
or
mov
fistl
les
and
ret
mov
lcall
push
loope
mov
sbb
test
push
add
jp
cmp
into
insl
pop
push
cmp
inc
iret
pop
adcl
lahf
arpl
les
int
cs
pushf
scas
das
mov
out
shl
mov
add
mov
xor
lds
sbb
test
outsl
and
xor
push
adc
adc
adc
push
ja
dec
push
shrb
and
sub
cmpsl
test
jmp
bound
pand
loope
shrl
adc
insb
pop
jge
fcomps
sub
fwait
adc
mov
or
or
int
xchg
sarb
lds
and
outsb
add
push
movsb
ret
std
enter
cmp
sbb
pop
sbb
cli
and
mov
add
stos
and
lahf
iret
outsb
out
xor
sub
pop
ficoms
sbb
or
lcall
ja
test
and
lcall
xor
adcb
stos
fisubrl
test
dec
imul
nop
popf
pusha
fs
adcb
int
ret
xchg
adc
ret
and
and
adc
push
pushf
mov
push
fisttps
in
es
dec
jmp
adc
dec
add
ret
mov
shl
mov
cs
in
inc
xor
int
call
push
push
clc
mov
mull
in
and
cli
cmp
adc
jne
jns
adc
shlb
inc
fldl2t
mov
out
daa
push
sub
test
mov
inc
push
push
das
cmp
mov
imul
sub
push
and
inc
mov
lods
and
shrb
jp
sub
jge
and
test
add
jo
add
int
mov
sbb
nop
loopne
mov
xchg
xor
add
mov
sbb
int3
xor
inc
cmc
add
shrl
adcl
jmp
xchg
or
and
inc
add
xchg
fidivl
inc
cmpsb
adc
and
or
loop
jno
js
push
dec
xor
adc
cwtl
inc
scas
orl
loopne
jb
ss
sbb
loop
outsb
sub
decl
fldt
out
xor
or
and
shlb
aam
jecxz
ret
jecxz
adc
xor
sub
leave
call
pop
pusha
dec
stos
dec
in
pop
and
xchg
pop
cld
or
test
js
push
arpl
adc
push
mov
and
test
adc
bound
or
push
daa
xor
push
mov
jge
dec
mov
lahf
es
xor
out
adc
or
mov
js
dec
or
les
jge
leave
push
inc
add
mov
scas
es
rclb
adc
push
xchg
inc
push
xor
imul
dec
xchg
add
cwtl
add
push
cmp
adc
loopne
add
test
pop
ud1
xor
xor
lea
cmp
mov
leave
add
add
cltd
inc
add
bound
sbb
cs
in
das
dec
adc
les
push
mov
shrb
pushf
mov
dec
int
repnz
rcll
or
xor
dec
mov
lret
xchg
sbb
or
or
mov
int
imul
add
push
dec
push
scas
je
inc
mov
fs
pushl
sbb
mov
cwtl
lds
inc
stos
mov
add
lds
push
test
rcr
push
pop
adcl
mov
addb
mov
jl
sub
xchg
xor
inc
adc
jnp
mov
or
push
inc
add
push
mov
mov
or
adc
sub
shll
shll
mov
popf
xor
sbb
cmp
mov
cmp
cmp
push
nop
in
push
add
xor
rorl
sbb
add
dec
and
sbb
pop
jl
bound
sub
mov
pop
add
mov
push
dec
sub
adc
lcall
mov
in
sbb
or
mov
repnz
lcall
jecxz
adcb
aaa
cli
inc
test
sbb
cwtl
xchg
jp
mov
mov
adc
add
mov
adc
stos
add
xchg
rcll
int3
mov
jo
cmpl
lods
stos
bound
jmp
adc
insl
test
xlat
sti
pusha
pop
lock
add
dec
mov
cmc
insb
iret
xor
dec
adc
in
push
and
xchg
pop
xchg
dec
dec
xor
inc
inc
pusha
push
sbb
inc
pop
cmp
dec
xor
adc
mov
xchg
adc
mov
xchg
es
dec
mov
mov
dec
xchg
jge
pop
adc
add
xor
pusha
and
sar
inc
and
xlat
inc
rorl
jecxz
push
push
jae
adc
aad
jns
adc
xor
roll
icebp
lock
lods
imul
inc
icebp
add
xlat
dec
movsb
sub
push
sti
int
js
adc
fldcw
mov
pop
punpcklwd
push
sbb
aam
rclb
cmc
adc
push
int3
push
or
push
sbb
sub
push
adc
push
adc
or
lcall
jne
iret
addr16
or
sub
shrb
add
add
add
xor
jo
sbb
and
lret
fstl
mov
fisubs
sahf
test
pop
cmp
adc
dec
mov
dec
lret
add
jle
push
inc
lret
push
mov
xor
push
mov
bound
test
adc
add
rolb
add
ljmp
push
insl
and
shrl
enter
mov
add
or
ljmp
jle
addr16
loop
sti
fcmovnbe
adc
cli
int3
jle
aaa
inc
roll
fisubrl
inc
and
pop
pop
clc
sub
push
mov
and
ret
cmp
into
cmpsl
or
inc
in
add
sub
and
es
mov
lret
mov
cmp
sahf
inc
sub
scas
jo
cmc
test
push
test
ret
aad
add
or
pop
add
ret
ja
rcrl
sub
pop
xlat
jle
cmovne
es
shlb
add
sbb
pop
int3
test
fcoms
xchg
fldt
dec
mov
test
pop
push
daa
sub
aaa
dec
ja
push
mov
sbb
addr16
push
push
sbbb
out
rorl
divb
or
sub
mov
imul
in
popa
sahf
icebp
push
push
lds
and
pop
icebp
mov
jbe
adc
push
sti
add
aam
pusha
mov
shrl
ljmp
ljmp
rcrb
xor
rcr
inc
mov
adcl
push
in
cltd
cmpsb
scas
adc
push
rcrb
mov
sub
adc
push
lds
jne
mov
add
out
pop
jne
jge
sub
leave
mov
pop
adc
rdpmc
mov
adc
inc
sbb
mov
push
push
dec
orb
pop
andl
or
push
notl
addb
sbb
rol
mov
sbb
sarw
lds
dec
int
notb
pop
or
mov
fldt
mov
mov
and
xor
mov
mov
xchg
inc
cmp
cmp
ret
pop
aad
les
push
pop
inc
push
or
aam
ds
xchg
icebp
or
pop
xorb
pop
add
and
adc
adc
mov
add
lea
and
push
and
ljmp
add
mov
out
inc
and
xor
push
inc
psubsb
jo
mov
sahf
sbb
mov
orb
or
hlt
pop
add
mov
data16
lahf
jb
cmpsl
loopne
jbe
adc
outsb
pop
jle
in
pusha
add
stos
sbb
shlb
in
and
daa
sub
push
pop
or
and
bound
daa
mov
sub
push
dec
push
jecxz
inc
nop
sub
faddl
cmp
mov
ljmp
pop
push
addr16
inc
cld
mov
aas
sub
faddl
dec
adc
stos
and
mov
push
lods
lret
ljmp
and
cwtl
inc
rorl
adc
cmp
mull
rolb
testl
sbb
push
in
in
jbe
sub
pop
jno
in
add
add
jne
jb
aas
stos
push
add
cmp
add
jle
push
pop
xor
repz
andb
push
stos
out
test
or
pop
popf
add
lea
bound
ror
sub
mov
inc
fs
inc
inc
cmp
fwait
push
mov
push
test
ss
add
pushf
loope
jp
aas
test
hlt
mov
or
cmp
push
xor
sub
add
ljmp
das
or
repnz
rclb
or
jb
iret
and
out
push
sub
pop
out
fnstcw
adc
into
in
das
xchg
add
add
stc
fildll
mov
es
lret
xchg
mov
mov
sub
call
adc
xor
addb
dec
cwtl
mov
ds
fmul
xor
mov
stos
in
fucom
rcll
xchg
ljmp
loopne
test
cltd
cmp
js
sbb
mov
and
cmp
push
and
push
inc
xor
push
and
dec
call
repz
pop
cmp
ja
adc
call
inc
inc
jg
adc
adc
inc
fbstp
jo
or
dec
pushf
sarb
mov
ret
fwait
xor
mov
jecxz
pop
add
nop
add
jnp
mov
push
and
jns
pop
mov
out
sbb
adc
and
scas
out
in
mov
jp
ljmp
fsubs
dec
daa
and
inc
inc
inc
shrl
popa
pop
shrl
sarl
mov
rcrb
and
xchg
add
gs
push
adc
loope
jnp
push
sbb
out
clc
xchg
lock
loope
fs
and
nop
hlt
out
push
add
mov
cli
scas
hlt
cmpb
sub
inc
loopne
lret
jno
fs
aaa
ret
sahf
cmp
call
lods
aas
data16
or
xor
sub
xlat
mov
add
xlat
sub
push
ret
fimull
jl
movl
aas
orb
cmp
sbb
sub
cld
adc
lods
lds
adc
pop
mov
aad
jo
pop
icebp
or
pop
enter
out
push
lock
movsb
sbb
and
jns
push
xor
test
orb
aam
sub
adc
xor
xchg
outsl
ja
hlt
jns
push
add
pop
lcall
mov
out
xor
cmp
cmp
ss
loop
add
sarb
push
lcall
fbstp
adc
bound
add
pop
cmpsb
pop
out
imul
add
lea
insb
sub
std
add
dec
sbb
shrl
or
sub
lret
push
add
cmpsb
cmpsl
jb
sbb
cmp
sub
addl
mov
lds
iret
mov
bound
adc
es
xor
xor
lods
iret
aam
and
sub
jo
scas
cmp
sbb
or
inc
adc
adc
andb
dec
dec
neg
mov
push
mov
or
mov
lock
dec
jbe
cmpsb
xchg
insb
and
mov
pop
add
lret
sbb
jne
aad
jne
mov
in
scas
cmp
shufps
inc
loop
jecxz
jl
sub
or
sub
or
adc
les
popf
lahf
and
jb
shrl
and
addr16
enter
pop
inc
mov
push
inc
stos
xlat
shll
dec
pop
stc
xor
ss
jl
jo
jbe
inc
out
mov
add
xor
filds
shll
in
inc
sub
fwait
iret
push
sub
push
xchg
bound
jp
push
ffree
jns
push
mov
xchg
addl
out
cmp
cwtl
jo
jnp
push
fidivs
mov
adc
pop
int3
call
mov
sbb
pop
or
dec
mov
xor
mov
mov
add
push
xor
dec
pop
push
add
add
sub
ret
aam
mov
lret
test
cmp
and
sbb
sbb
add
or
adc
pop
addl
rorb
push
mov
andb
inc
jno
sub
adc
mov
mov
in
add
push
mov
pop
push
aam
xchg
adc
push
outsl
mov
cmp
test
jbe
cmpsl
js
cmpsl
sbb
ficoml
sbb
stos
cmp
mov
test
xor
scas
xchg
test
sub
mov
je
mov
rorb
fistps
push
das
sarl
or
ret
sbb
popa
addr16
aas
icebp
mov
ret
mov
fimuls
data16
pusha
adc
or
cmp
jb
cmp
loop
sub
inc
loop
jbe
dec
aad
fwait
aad
mov
sbb
xor
jno
sub
adc
inc
mov
sbb
aam
cmp
fisubs
ret
push
fwait
xchg
mov
mov
mov
sub
and
sub
aad
test
mov
aad
lods
add
cmpsl
cs
cmpsl
adc
mov
pop
arpl
insb
sbbl
push
rcrb
jb
shll
push
aam
es
movsb
mull
jne
rcr
xor
or
mov
aad
xor
cmp
aas
scas
xor
inc
xchg
lcall
mov
popa
or
add
aad
mov
sub
in
call
adc
mov
and
or
adc
inc
inc
mov
js
xchg
push
out
shr
add
xor
rolb
xchg
scas
jg
daa
fs
sub
sub
imul
push
sub
aas
add
test
sbb
sbb
pop
andl
lock
push
dec
and
or
addps
mov
mov
mov
ret
or
int
sarl
inc
nop
or
std
test
adc
and
pop
cltd
stos
cmpsl
shrb
xchg
xchg
cmpsb
sub
and
cmp
fadds
cmp
inc
pop
aam
imul
xchg
add
int
add
lcall
shlb
imul
repnz
inc
mov
lcall
pop
adc
xchg
mov
lcall
inc
adc
mov
mov
and
pop
add
push
aam
pop
fwait
adc
pop
lock
inc
dec
jb
lock
xchg
pop
xor
orl
sub
mov
sub
test
and
fcoms
dec
test
push
sub
outsb
push
leave
jno
dec
fdivrs
out
rcll
push
popf
bound
jge
outsb
dec
inc
sti
adc
cmp
out
popf
inc
adc
pop
lds
jb
loopne
andb
fiaddl
mov
popf
loopne
out
or
sbb
daa
bound
inc
mov
cmp
je
xorb
jmp
sbb
fcompl
push
and
jb
or
inc
xor
inc
adc
shrb
or
push
mov
shr
lret
xchg
adc
add
scas
add
in
push
shll
inc
pop
sbb
and
stc
or
ret
ljmp
xor
insl
data16
adc
mov
pop
jae
xchg
repnz
push
loopne
shll
aam
loopne
or
js
rcl
ret
lock
sti
orb
out
daa
mov
decb
in
aas
add
sub
or
into
mov
out
add
jb
loopne
xor
les
mov
sub
stos
sub
sub
or
xchg
dec
inc
xchg
pop
aas
xor
popf
in
jno
iret
xchg
inc
and
xchg
add
mov
mov
mov
mov
ljmp
outsl
inc
aad
out
adc
iret
and
ret
sbb
inc
pop
sahf
mov
scas
or
out
fsubs
add
or
sub
cmp
in
jge
lods
mov
mov
xchg
pop
pop
stos
push
pop
das
lret
outsl
sbb
les
ss
jmp
mov
adc
or
xchg
pop
out
lock
push
push
add
sub
or
add
or
add
add
stos
mov
sbbb
mov
sub
pop
jmp
lret
add
push
cs
out
push
inc
or
pusha
lret
mov
loopne
aad
inc
lods
lret
xor
ljmp
mov
fwait
xlat
adc
push
xor
inc
push
cmp
negl
in
xchg
sahf
jbe
ficoms
sti
inc
pop
sbb
add
or
arpl
dec
fisubrl
and
dec
xlat
jp
int
mov
popf
mov
iret
mov
pusha
outsb
inc
push
mov
popa
pop
inc
and
adc
jle
pop
sub
shll
movaps
inc
inc
rcrl
mov
inc
xor
and
loope
push
data16
int
push
imul
mov
es
jnp
push
inc
sbbb
push
aad
sub
lds
fiadds
or
popf
or
inc
sub
cmp
cmp
and
dec
dec
add
rolb
mov
pushf
push
rorl
push
out
rolb
inc
xor
cmp
jl
jle
sbb
sbb
xchg
mov
popa
nop
xor
xor
lea
or
lock
inc
mov
pushf
in
xchg
jl
std
add
or
mov
mov
repnz
movsb
pop
pop
jl
add
shrb
pusha
daa
cmp
fwait
stos
stos
sbb
cmp
push
push
xor
lds
cwtl
addr16
pop
ja
jmp
int3
and
add
jo
icebp
lock
sub
adc
pop
or
movsl
jnp
sbb
sub
mov
lods
ret
test
or
adc
jae
and
adc
popa
roll
adc
add
push
fstl
cmpsl
call
xor
or
addb
inc
ja
mov
lcall
push
call
sbb
xchg
lret
movsb
or
les
es
mov
add
add
dec
add
push
adc
imul
adc
lds
pop
pop
sub
ja
js
jnp
and
xor
and
enter
pop
adc
push
or
in
arpl
aam
add
sbb
or
pushf
fisubs
dec
inc
test
push
enter
mov
insb
daa
mov
inc
testb
xor
jne
adc
mov
lods
push
das
and
daa
xchg
dec
in
outsb
adc
sub
adc
ret
and
shrb
bound
sbbl
jl
mov
ss
ror
in
or
mov
lcall
inc
js
aad
push
js
movsb
inc
adc
lahf
sub
shlb
dec
les
push
add
or
push
sub
arpl
or
sbb
jge
mov
arpl
xorb
out
push
mov
add
dec
cmp
and
data16
arpl
fisttps
jmp
jp
adc
jnp
push
dec
fcmovne
push
test
adc
adc
adc
or
dec
lahf
stc
leave
and
lea
movsb
pusha
enter
daa
dec
shrb
mov
fwait
add
sbb
lret
dec
lock
add
cs
sbb
xor
sub
push
jbe
push
dec
jo
inc
je
shrb
cmp
add
imul
and
data16
mov
jmp
outsb
outsl
pop
sub
add
sbb
sahf
int
mov
dec
sub
dec
nop
lods
stos
test
sbbl
mov
cmpsb
fwait
cld
loopne
add
inc
jge
cmp
add
data16
movsb
test
icebp
add
stos
sbb
dec
test
sbbb
pop
or
ret
sub
mov
mov
or
mov
test
pop
xor
push
inc
in
mov
sbb
push
xlat
fs
add
or
inc
stos
test
pop
inc
and
popf
inc
mov
fisubrl
jne
and
pushf
clc
inc
cmp
je
mov
jp
jge
push
mov
mov
arpl
jo
shll
sub
pop
daa
dec
xchg
mov
dec
out
or
push
inc
sahf
cmp
push
xor
cmp
cwtl
out
dec
xor
scas
or
into
rcl
jecxz
orb
jnp
jle
clc
dec
mov
add
sub
sub
pop
cltd
push
sbb
inc
add
pushl
push
ret
mov
les
cmp
js
pop
pushf
xchg
int
test
sahf
adc
xor
sub
sub
push
lock
add
xchg
inc
les
push
adc
sbb
mov
sahf
sub
fucomi
mov
aaa
mov
or
jp
rcll
push
sub
inc
inc
sbb
ss
loope
ljmp
stos
mov
das
and
cmp
xchg
daa
js
adc
xor
jnp
ljmp
mov
or
stos
adc
and
push
sbb
outsl
mov
sub
mov
stos
add
imul
mov
cltd
dec
xor
jo
cwtl
shlb
mov
and
stos
test
daa
push
or
cwtl
adc
add
enter
rorb
jp
push
leave
add
lahf
add
mov
les
and
mov
jb
sub
jne
loope
sub
data16
leave
sbb
call
sub
xchg
sbbb
scas
mov
sbb
jmp
mov
cmpsl
mov
scas
dec
sub
loop
push
cmp
adc
mov
mov
inc
or
adc
movsb
dec
leave
xchg
stos
fisubs
sbbb
xor
into
jg
gs
sbb
inc
loope
divb
fldcw
in
sub
sahf
les
mov
jo
push
add
mov
in
sbb
paddq
cmp
push
push
adc
pop
xchg
popa
packuswb
adc
or
mov
inc
add
push
mov
stc
push
push
dec
sbb
push
push
packuswb
cmp
mov
nop
add
loopne
ret
add
xchg
push
and
roll
mov
push
xor
pop
mov
lods
and
mov
fs
fs
push
mov
mov
test
xor
push
call
mov
or
aaa
lods
inc
mov
bound
jmp
add
adc
sbb
mov
add
xor
adc
jmp
out
fbstp
andb
dec
push
mov
push
orb
fs
jecxz
lea
les
pop
ret
sub
jle
mov
pop
repz
dec
out
inc
mov
push
subl
dec
ljmp
sahf
xor
or
and
inc
shrb
inc
or
xor
inc
xchg
lcall
jns
or
jbe
mov
arpl
mov
adc
sub
xchg
scas
cld
enter
add
les
je
add
push
inc
cmp
icebp
roll
loop
into
gs
aam
pusha
arpl
iret
int
into
test
and
mov
xchg
test
or
stc
aad
add
rcrl
adc
aam
rorl
inc
test
lret
insb
ret
faddl
and
mov
shll
pop
loope
jge
xchg
ret
xchg
xor
add
xchg
jg
xchg
xchg
out
ficomps
cmp
mov
push
mov
sub
xchg
mov
ffreep
jmp
add
jge
mov
mov
mov
aam
in
repnz
clc
js
bound
sbb
mov
ret
loopne
pop
sbb
addr16
xor
push
cmp
ret
and
enter
push
rcrl
xchg
add
sbb
push
mov
inc
mov
jo
or
dec
cmp
shlb
lods
inc
jmp
nop
fsubl
bound
cmp
pop
sub
mov
fimuls
call
or
xor
add
pop
or
or
add
imul
in
add
ret
mov
and
push
jge
cmpl
jecxz
andl
lret
sbb
int3
xor
sbbl
push
jl
xor
fcmovne
mov
add
aam
aaa
mov
add
popa
jmp
mov
cmpsl
dec
push
jl
daa
scas
testl
mov
sbb
or
jne
pusha
imull
or
jo
enter
in
pop
sub
aas
pop
or
pop
aaa
add
sub
pop
add
ret
icebp
addb
push
call
cmpb
test
fmull
arpl
shl
cwtl
movsb
call
add
faddl
adc
fsts
jecxz
outsl
inc
or
mov
jae
andb
pop
adc
pop
shll
pushf
or
bound
movsb
dec
or
es
mov
pop
repnz
sbb
pop
xchg
lock
push
sub
dec
clc
or
adc
rcrb
loopne
ja
add
fistpll
mov
sbb
cmp
fildl
sbb
out
adc
push
in
sahf
xor
adc
sub
and
inc
sub
push
jecxz
rorl
lds
in
push
mov
movsl
inc
xor
dec
jnp
mov
inc
dec
repnz
enter
inc
mov
sub
mov
push
loop
mov
mov
fsubr
jl
adc
pushfw
aam
push
testl
lret
mov
insl
xchg
jbe
cmpsl
aad
or
frstor
adc
sahf
add
pop
or
dec
pop
adc
outsl
es
das
insl
ss
mov
mov
es
mov
jmp
or
pop
daa
or
popf
sbb
adc
sub
dec
pushf
mov
add
outsb
push
push
or
rep
nop
pop
rcr
and
jo
test
js
out
loop
dec
mov
xchg
loope
fisttpll
mov
mov
or
and
dec
jp
jbe
xchg
xchg
sub
mov
in
lcall
les
int
rcrb
imul
ret
mov
push
out
and
mov
aaa
cwtl
sub
add
inc
and
dec
addr16
test
add
out
clc
sub
inc
mov
and
int3
push
or
adc
add
daa
daa
cmc
xorb
pop
jmp
andb
sbb
imul
xor
inc
and
cmp
add
jne
sarl
outsb
sub
inc
out
mov
ljmp
jnp
push
mov
add
lcall
add
mov
add
inc
ret
and
icebp
inc
adc
mov
jo
mov
call
aaa
outsl
cmc
fisubs
mov
sub
pop
out
ficompl
push
xchg
xchg
jg
pop
dec
stos
mov
sti
mov
xor
ret
mov
and
adc
fistpl
cmpsb
das
sbb
dec
in
ret
addb
and
inc
test
and
pusha
lock
sbbb
xchg
and
mov
orb
push
js
mov
pop
and
xchg
loope
sbb
adc
dec
jmp
lds
addr16
push
sub
aam
shll
fildl
inc
cmp
lock
loop
cltd
adc
adc
in
and
je
or
fistl
add
xlat
jno
adc
inc
mov
push
shlb
xor
outsb
push
jl
inc
push
test
inc
pop
xor
rol
fsubrp
adcl
imul
or
or
xchg
push
mov
xchg
cmp
push
inc
adc
sbb
les
nop
add
mov
call
je
lds
push
test
mov
pop
cmp
add
and
lret
jl
out
add
sub
cmp
sub
jnp
sub
pop
adc
loop
and
add
dec
sub
adc
push
les
scas
xlat
cmp
push
sub
adc
and
inc
das
cwtl
ret
rolb
sub
xor
sbb
out
ja
cmp
jae
adc
adc
sbb
and
and
mov
cmp
sub
cld
cmpsl
nop
xor
push
hlt
dec
or
xchg
inc
into
cmp
sub
sbb
push
stos
enter
dec
mov
pop
and
sub
sahf
add
arpl
mov
pop
dec
lods
stos
sti
fisubl
sub
rcrb
flds
cli
fstpt
jb
xor
xor
xlat
dec
stos
jp
pop
ret
sbb
stos
xor
push
mov
adc
mov
movsb
push
pop
add
mov
dec
add
loope
stos
xchg
and
ljmp
loope
inc
cltd
sub
mov
xchg
fdivs
pop
ret
xor
scas
jnp
pop
add
push
inc
fbld
xchg
and
mov
lds
ret
pop
xor
mov
xchg
daa
mov
inc
insl
mov
dec
out
dec
xchg
cmp
fsubrs
lods
mov
sub
orl
dec
loope
dec
mov
cs
lret
sub
mov
mov
aam
icebp
or
int
iret
ret
jl
bound
push
icebp
inc
pop
add
ds
aam
pusha
inc
cmp
jo
adc
pop
sbb
mov
mov
xlat
negb
sbb
aas
inc
paddusw
cs
ret
ret
and
pusha
ret
xchg
mov
data16
xchg
or
sbb
jo
adc
dec
ret
cmpsb
dec
imul
mov
mov
aad
test
add
adcb
daa
mov
adc
sub
int
insb
fwait
ret
mov
mov
les
dec
sbb
or
cmpsb
pop
mov
sbb
cmp
adc
fs
fimuls
or
jnp
sbb
adc
aaa
mul
lock
adc
mov
loopne
or
cmpsl
into
push
insb
mov
aam
add
int
xorb
xchg
and
cs
movsb
cwtl
adc
lods
js
push
push
add
jmp
mov
or
mov
add
mov
bound
cld
popf
test
fildl
xchg
lods
or
inc
add
adc
cwtl
movl
adc
push
popf
mov
add
popa
mov
test
fwait
insb
ret
fistl
cltd
jae
data16
pop
xchg
add
dec
jmp
mov
nop
xchg
xchg
fcoms
aam
dec
dec
leave
jecxz
test
inc
cmpsb
and
xchg
test
jge
in
or
inc
sar
and
jnp
lods
add
and
lret
push
sub
shrb
jbe
add
jns
imul
xor
add
das
ret
das
add
ret
arpl
pop
fnclex
mov
sbb
scas
mov
add
sbb
mov
sbb
add
dec
ss
fistpll
xchg
imul
out
xorl
outsl
inc
subb
scas
out
out
add
ss
xchg
mov
xor
sbbl
pushf
movsl
adc
mov
push
mov
lea
xchg
jae
int
or
sub
mov
aam
adc
lahf
test
xchg
ds
into
add
pop
mov
movsb
clc
popa
call
dec
push
xor
imul
aad
push
stc
popa
pusha
add
das
xor
int3
or
arpl
add
xchg
imul
adc
cmp
mov
pop
or
mov
dec
idivb
mov
and
arpl
scas
cli
jl
pop
sbb
and
sti
out
lret
and
jmp
stc
push
aas
or
xchg
push
arpl
mov
xchg
pop
inc
push
sti
out
sbb
xchg
frstor
icebp
push
bound
and
mov
or
push
in
and
cld
aaa
mov
or
std
lret
and
daa
inc
xor
mov
inc
ret
lock
xchg
testb
lcall
fcmovnu
cwtl
cmp
fcmove
or
arpl
cmp
mov
jg
mov
sub
mov
jno
cmp
sub
fnstenv
into
dec
mov
sub
pusha
insb
xlat
imul
xor
push
lods
movsb
aam
adc
add
dec
or
cmp
mov
xchg
movl
cmp
clc
fsubp
dec
div
mov
add
adc
movsb
das
mov
out
xchg
lahf
mov
jmp
setg
mov
ret
cmp
cmpsl
ljmp
aad
xchg
addl
or
and
push
inc
cmp
mov
loopne
jg
xchg
das
jo
xchg
cmp
popa
ret
sub
mov
and
push
mov
sahf
fwait
les
fisubs
xor
pusha
dec
sbb
leave
pop
out
lock
stos
push
das
lock
push
push
mov
sbb
or
xor
jbe
and
and
or
lea
pusha
jg
mov
sti
add
fldenv
or
xchg
cmpsb
pop
mov
pusha
mov
cli
sub
cli
lret
pusha
jbe
mov
pop
jmp
leave
ja
sbb
lahf
xchg
insl
add
sub
out
jae
int
hlt
pop
cltd
sbb
xorl
adc
dec
sbb
roll
imul
add
mov
sbb
loope
mov
pop
add
add
aaa
popa
mov
sbb
xor
and
clc
test
imul
test
push
sti
jmp
xchg
nop
sub
pushf
pop
ret
sti
mov
inc
pop
repz
mov
pop
sub
testl
mov
int3
call
mov
or
or
adc
pop
gs
or
xchg
jae
add
xchg
xchg
jmp
es
jecxz
cmp
fadd
sbb
fnop
jmp
pop
add
pop
fcomps
inc
imul
xchg
lahf
sbb
add
pop
insl
push
add
test
mov
fcoms
xor
pop
iret
outsb
pop
or
movsb
mov
test
gs
das
es
mov
xor
orb
add
inc
cmp
cmp
popa
ret
vaddsubpd
dec
pop
xchg
sub
add
cwtl
in
or
mov
fisubs
and
call
xchg
xor
lea
sbb
icebp
and
test
mov
push
xor
pop
movl
or
sti
out
xchg
xor
pusha
xor
mov
leave
pop
xor
lret
int3
xorb
push
adc
ret
and
mov
insb
cmp
push
pop
out
mov
sub
inc
orb
lret
add
les
fdivrp
xchg
xchg
sti
jnp
or
push
data16
mov
jmp
sub
and
adc
clc
and
leave
ljmp
mov
xor
xor
bsf
test
jnp
sbb
or
jp
inc
mov
cmp
jo
xchg
adc
test
popa
adc
sti
mov
imul
and
jle
cmp
dec
aaa
popl
out
and
dec
xchg
lret
sub
sub
xor
push
cmp
orl
testb
sbb
push
pop
or
push
xchg
sbb
mov
imul
xor
mov
cmpsl
and
ret
or
arpl
or
addr16
test
test
sbb
xchg
or
inc
jnp
mov
and
push
mov
xor
push
sub
fisubs
inc
mov
test
inc
orb
mov
and
xor
lcall
pop
mov
xchg
and
cmp
and
sbb
fimull
sub
sub
out
add
pop
lock
add
lcall
sbb
arpl
or
dec
xor
and
push
and
adc
bound
jo
mov
popa
inc
push
sbb
adc
adc
and
cmp
add
xchg
std
sub
es
sbb
cmc
loop
movsb
sahf
sbb
jno
jae
movb
xchg
rorl
push
sar
repz
jmp
lods
test
cmp
arpl
aaa
nop
add
add
cmp
mov
xor
inc
pop
test
inc
ret
mov
aaa
ljmp
push
xchg
daa
xchg
inc
nop
subl
faddp
push
mov
ret
dec
clc
xor
fldenv
leave
push
pop
and
les
cld
dec
jp
mov
loop
dec
inc
out
repz
loop
mov
jmp
sub
aad
test
dec
mov
and
sub
sbb
nopl
xchg
mov
push
adc
and
push
mov
add
ss
sbbl
insb
addr16
dec
scas
push
lods
and
gs
push
pop
jae
insb
sub
adc
fwait
jmp
push
mov
adc
pop
sub
subb
jns
pop
and
leave
out
pusha
push
dec
sbb
insl
and
daa
add
fstpl
lds
push
mov
adc
jle
in
insl
pop
mov
xor
test
mov
adc
push
sbb
pop
cmp
push
sub
pop
add
adc
jnp
add
int
mov
mov
adc
cmpsl
adc
notl
int
lea
imul
and
out
insb
push
iret
or
xchg
or
out
xorb
pop
and
push
fucomip
xlat
into
jle
popa
imul
imul
mov
add
push
cmp
punpckldq
imul
sbb
in
popa
testb
adc
mov
leave
adc
shr
pop
add
xchg
or
jge
in
movsl
es
push
ss
xor
jle
sub
jne
add
in
test
push
outsl
sub
aaa
add
jne
cmp
sub
push
sti
inc
outsl
lods
push
scas
push
inc
test
fsub
lcall
addr16
rcr
jmp
pop
cwtl
mov
fs
sub
pop
stos
mov
ficoml
jge
sbb
inc
mov
sub
test
mov
insb
jae
xchg
pop
insb
push
add
cs
pusha
sbb
sub
aaa
leave
sub
in
jecxz
int
sub
in
scas
push
add
cs
cmpsl
ljmp
lcall
addr16
add
add
adc
push
adcb
fisttpl
mov
cmpsl
les
shrb
sbb
inc
or
sbb
je
movsb
idivb
dec
repz
mov
or
stos
imul
outsl
ret
and
and
mov
ret
ss
orb
push
dec
or
jbe
aad
mov
scas
out
xor
mov
inc
xor
call
lods
dec
pop
mov
subl
inc
bound
data16
adc
mov
mov
xchg
and
adc
push
ja
mov
jmp
ljmp
push
add
mov
sub
or
sub
inc
jae
mov
pop
loope
jp
mov
sub
push
sahf
clc
inc
shlb
mov
popa
out
jae
mov
lahf
add
add
divl
jne
cmp
cmpsl
xchg
mov
mov
ss
std
lret
pop
mov
push
push
fisubl
leave
mov
dec
nop
dec
xchg
fistpl
inc
dec
sub
inc
inc
call
mov
xchg
test
pop
and
mov
popf
push
mov
mov
xchg
inc
pop
cmc
jecxz
mov
mov
inc
daa
jne
fabs
cmp
ds
cmp
inc
dec
mov
sbb
loopne
adc
mov
insb
jnp
mov
push
popf
push
in
add
mov
cmp
imul
movsb
mov
fdivs
mov
cltd
pop
jle
mov
aad
shlb
add
or
and
jbe
mov
jmp
out
or
mov
fidivrl
jl
arpl
inc
add
shll
pop
or
pop
add
lock
insb
testb
shr
push
inc
rcl
loop
mov
sbb
pop
dec
shr
out
ffree
filds
or
popf
and
adc
cmp
je
push
xorb
test
cmp
mov
aas
xor
lds
dec
repnz
and
pop
aaa
fisubrs
jo
outsl
aas
and
data16
dec
cli
shrb
jg
lcall
rcr
jge
mov
hlt
lock
scas
push
mov
mov
fiaddl
lods
rcll
xchg
mov
stc
imul
mov
testb
adc
aad
add
pop
fcomp
adc
mov
mov
add
in
xor
xchg
data16
sub
ja
xchg
loope
arpl
pop
rclb
ffree
ret
js
mov
sub
loop
leave
xor
xor
jge
stos
cli
add
jge
cmpsb
out
add
sbb
inc
scas
jecxz
mov
adc
imul
mov
lret
pushf
ja
fnstenv
xlat
jne
pop
lock
cmp
xor
js
int3
xchg
es
mov
sub
adc
push
xchg
pavgb
cmp
push
push
sub
jp
imul
push
mov
push
xchg
negb
xor
jne
lcall
xchg
das
ja
mov
add
mov
orl
pushl
mov
pop
scas
leave
or
rorl
push
lds
cmpl
add
fldl
fdiv
pop
push
orl
add
dec
cmpsl
jg
pop
sti
jnp
fs
adcb
pushf
xchg
push
mov
fstp
fldl
mov
adc
pop
out
mov
push
cmpl
push
out
insb
xchg
mov
arpl
mov
mov
xor
cmp
aad
in
scas
pusha
mov
sub
inc
inc
pop
or
int3
scas
mov
jle
movsb
std
imul
outsb
jg
add
mov
sbb
shrl
xchg
into
popf
jecxz
data16
rorb
push
pop
cmp
add
test
ds
ret
adc
xor
lea
insl
pop
jb
stos
add
push
or
std
inc
loope
inc
inc
cmp
fisubrl
push
add
cld
ds
and
mov
cli
lock
jmp
mov
cwtl
fimuls
or
add
cli
clc
ds
push
js
or
int3
jle
sbb
out
movsl
jbe
movsl
xor
add
xorb
jl
jne
shrl
sbb
mov
out
add
lock
cmpsl
je
mov
push
aad
add
push
xor
pushf
popf
xchg
jecxz
lock
mov
dec
cld
dec
rolb
scas
daa
das
and
or
mov
pop
push
dec
push
lret
mov
mov
cmp
aas
cmp
cld
push
daa
adc
add
sub
bound
loope
pop
mov
cmc
nop
jnp
lods
pushf
inc
aad
sbb
or
xchg
or
rcr
jecxz
es
clc
jnp
cmpsb
das
testl
ss
dec
push
jp
mov
sbb
sub
fldcw
ljmp
and
mov
sbb
std
pop
push
fsub
test
out
hlt
fists
lock
mov
sbb
add
mov
mov
dec
pop
dec
mov
add
mov
jg
and
cmp
mov
cmp
mov
sbb
addr16
lds
mov
fadd
and
sub
popf
jg
js
stos
rdmsr
lods
mov
xor
cld
sub
ficomps
or
int3
pop
testb
stc
push
pop
jle
cmpsl
inc
scas
ret
and
aas
fldl
lock
adc
pushf
mov
cmp
pop
call
mov
jo
xor
sarl
sub
xorl
mov
pop
outsb
cmp
push
sbb
fcomp
xchg
add
shll
loope
mov
loop
lahf
scas
xor
cmp
jno
ds
cmp
outsb
cmpxchg
loopne
fisubrl
rcll
mov
xor
mov
ljmp
dec
mov
cli
xchg
outsl
sbb
cmc
and
psrld
mov
xor
mov
mov
lock
imul
mov
repnz
fstl
clc
mov
jbe
mov
sbb
jnp
mov
pop
inc
cmp
test
subb
cmp
fisubrs
add
ret
add
lock
lcall
lock
add
jb
subb
arpl
or
daa
fstpl
inc
loopne
cmp
rorb
xorl
xor
ja
jmp
xchg
xor
imul
mov
jecxz
mov
xor
sbb
out
ds
repz
fst
rclb
cltd
jnp
aam
clc
or
pushf
out
dec
lsl
sti
jg
xor
aaa
sbb
mov
pop
popf
xor
add
and
fistpll
adc
sti
and
notb
loope
or
mov
fidivrs
in
mov
es
pop
mov
lods
adc
mov
push
dec
push
into
xlat
jp
pmullw
jle
or
ret
adc
jp
imul
sbbl
outsb
push
xchg
loopne
test
sbb
insb
loopne
push
cmpsb
es
dec
int
pushf
sbb
inc
cmp
mov
xchg
push
sbb
adc
out
jne
add
inc
pop
das
stos
cmp
xchg
stc
jl
xchg
out
mov
in
arpl
rcll
jns
cli
and
inc
lods
imul
and
sti
ss
pop
jne
sbb
fiaddl
pushf
add
dec
rolb
stos
les
je
je
cmp
mov
outsb
and
mov
ljmp
fcoms
mov
xchg
mov
push
sbb
js
movsb
xchg
push
mov
je
adc
sbb
insl
in
jle
std
mov
jno
jle
or
sbbb
fmuls
sbb
pushf
pop
xor
dec
or
push
adc
add
jo
fdivrs
cli
leave
movsb
sub
iret
stc
std
jecxz
ja
sub
cmp
cmp
pop
jle
shl
mov
shlb
push
es
push
lea
inc
cmp
scas
stos
cmpl
cmp
mov
mov
ror
je
stos
jae
cmp
xchg
inc
or
clc
jmp
fsubrs
cmp
fisttpl
adc
fiadds
push
imul
rcl
aam
data16
ja
scas
push
sarl
pop
js
sbbl
or
dec
fldl
hlt
push
inc
push
test
push
cs
push
popa
imul
arpl
lret
mov
fcomp
and
popa
ficompl
addr16
push
lcall
aad
cmc
mov
imul
mov
jno
push
fidivl
or
mov
dec
fcom
mov
jge
arpl
cmp
jbe
fldt
jb
pop
lods
add
call
pop
out
pop
negl
sub
movsb
or
pop
outsb
adc
insb
add
sub
sahf
stos
mov
movsb
jne
popa
or
mov
and
push
insb
subb
insb
mulb
mov
rcrl
add
movl
fnstcw
fisttps
pop
push
insl
outsb
pop
cmp
fisubrs
mov
push
pop
fdivp
test
pop
add
repz
mov
ljmp
xchg
pop
leave
add
or
sub
lea
pop
pop
push
in
xlat
lock
dec
lahf
les
inc
jns
pusha
pop
stos
sub
mov
and
push
cmp
cltd
shlb
pop
rolb
or
out
sub
adc
add
in
fimuls
mov
xor
test
rclb
push
push
int3
cltd
jne
jle
jo
movl
outsb
mov
sbb
or
mov
mov
mov
and
fwait
test
jge
out
leave
sahf
cli
les
mov
pop
adc
scas
out
sub
and
data16
jge
imulb
scas
test
sub
xor
outsb
xor
std
mov
outsl
shlb
lods
sarl
les
out
xor
lock
mov
or
lret
lock
int3
mov
add
sub
dec
dec
push
adc
movsb
lock
jg
daa
fisubrs
sub
sub
or
hlt
loope
popa
adc
mov
iret
sub
andl
mov
mov
cwtl
lds
adc
hlt
imul
fsubr
mov
mov
mov
in
sbb
das
es
mov
testb
and
jnp
in
imul
cmp
cmp
jmp
out
pop
jp
xor
ja,pt
add
loope
or
ret
mov
dec
pop
ss
cs
pop
jl
mov
push
ja
sub
mov
adc
mov
ds
rorl
jnp
and
fwait
pop
jge
xor
push
mov
mov
sbb
sbb
test
xchg
pop
adc
sbb
aam
sub
pusha
aad
pop
jl
sub
stos
test
lds
loop
xchg
adc
dec
cli
xor
mov
shrl
mov
xchg
mov
adc
pop
mov
dec
mov
and
jl
data16
push
pop
jno
jb
push
inc
aad
gs
mov
cmp
insb
jmp
pop
cmp
push
loopne
xor
negb
mov
sahf
or
sbb
daa
inc
addr16
les
sbb
pop
std
arpl
cmpsb
sbb
pop
jp
arpl
or
pop
or
ds
je
das
cmc
xor
mov
mov
mov
shlb
aad
xor
ret
inc
mov
cmpsb
ds
nop
ret
out
lcall
add
outsb
je
cmpsl
add
dec
js
cmp
xchg
lods
adc
cmpl
xchg
fimuls
jbe
dec
out
ljmp
pop
cmp
mov
mov
pop
rcr
cmp
or
loopne
dec
cmp
pcmpeqw
xchg
adc
imul
sbb
test
jl
dec
push
sbb
pop
lcall
pop
aam
adc
mov
pop
mov
inc
loop
pop
mov
outsb
cmp
xchg
ljmp
addr16
fstpl
mov
orb
stos
jno
addr16
test
jmp
or
rclb
int3
les
mov
push
daa
int
push
push
stc
pop
int
icebp
jne
testb
outsl
lods
rcl
pushl
cmpsl
inc
pop
or
sbb
clc
or
jno
xlat
sbb
mov
add
mov
push
dec
stos
insl
icebp
adc
mov
push
cmc
imul
std
xchg
stos
jp
mov
cmpsl
mov
xlat
imul
mov
pop
cmpsl
and
jle
stos
shrl
inc
xchg
jnp
popl
jecxz
jle
inc
mov
popa
jae
pop
xor
sbb
push
sbb
adc
adc
aas
lahf
shrb
into
ja
fbld
sbb
scas
test
pop
sbb
insl
xchg
aam
jno
push
shrb
cmpsb
pop
mov
sbb
fld
mov
dec
dec
ja
mov
mov
data16
lods
push
and
adcb
inc
xchg
fld1
scas
dec
in
pusha
inc
sub
les
cwtl
sub
push
testl
push
inc
and
stc
mov
cli
xchg
test
in
fwait
sub
jno
sarb
mov
jl
loopne
mov
outsb
je
addr16
call
push
mov
loopne
xchg
pusha
test
stos
loop
fimuls
es
push
popa
pop
fnstsw
scas
sub
mov
jge
mov
popa
jmp
mov
in
lock
int3
mov
push
dec
ror
adc
hlt
xor
dec
jno
inc
mov
inc
je
sti
subl
xlat
lea
xor
sub
roll
mov
jbe
lods
pop
int
pop
inc
push
or
adc
hlt
clc
call
in
inc
mov
mov
cmc
lds
mov
inc
je
xor
out
mov
inc
rclb
in
cmp
test
andb
out
mov
inc
xlat
mov
pop
sbb
ds
in
cmp
je
out
mov
lret
dec
pop
addl
lea
imul
std
outsb
imul
xchg
cld
add
mov
shlb
dec
sub
iret
jge
pop
arpl
ds
rolb
fxch
rolb
push
adc
test
mov
push
ret
cmp
push
dec
arpl
out
xor
pop
js
icebp
sub
nop
lock
jns
arpl
stos
adc
test
cmpsb
idivb
lock
or
inc
dec
rorb
aas
push
test
test
lods
or
mov
sbb
pushf
jecxz
leave
out
mov
int3
or
add
jae
loope
mov
int
int3
test
into
add
push
cmpsb
adc
and
xchg
pop
mov
and
xchg
stos
sbb
loop
mov
and
cli
mov
das
dec
fwait
push
loopne
in
xor
sbb
pop
lea
fbld
sub
add
addr16
sub
mov
push
adc
or
sbb
dec
push
jg
dec
mov
xchg
pusha
sbb
mov
add
push
stos
cmpl
jnp
loopne
outsl
andb
dec
push
and
push
mov
and
push
mov
ss
lret
mov
pop
lds
dec
imul
pop
fldcw
or
xchg
cmp
inc
mov
pop
data16
or
in
insb
sbb
xchg
push
stos
imul
btrl
pop
mov
icebp
outsl
pop
ret
dec
rol
dec
xchg
aad
enter
cmp
mov
adc
notb
pop
pop
sti
mov
pop
inc
pop
adc
testb
sahf
movsb
data16
pop
adc
jle
insl
add
sub
scas
adc
cmpb
push
ds
scas
mov
xchg
mov
mov
inc
add
jno
and
scas
loop
fisubrs
and
pop
mov
adc
push
pop
jns
sbb
ss
inc
mov
or
sub
out
or
adc
xor
and
or
xlat
push
jecxz
enter
dec
insb
pop
insb
sub
inc
into
or
jnp
roll
adc
ss
mov
call
shlb
xchg
or
jbe
add
sbb
and
mov
fs
adc
cs
add
fnstenv
mov
mov
mov
mov
push
pcmpeqb
xlat
xchg
xor
icebp
or
ret
popa
inc
addps
pop
repnz
rcl
rcr
cmp
pop
push
inc
dec
fdiv
jecxz
jne
shrb
cmp
or
aas
xlat
inc
out
addb
cmp
jp
repnz
jl
cltd
dec
das
add
or
jle
push
aad
pop
jns
iret
stos
mov
out
dec
int3
fs
sbb
addb
push
lock
cld
jns
pmaxub
pop
subl
xor
adc
jnp
mov
je,pt
iret
iret
mov
xor
xor
shlb
es
and
and
out
adc
les
sahf
mov
and
inc
aas
data16
jge,pn
outsw
shr
fistps
cli
adc
arpl
mov
adc
pop
sbb
xor
mov
jne
sti
shll
jl
fnsetpm(287
add
inc
shrl
push
inc
das
mov
xchg
push
push
pop
movsl
mov
sbb
mov
sub
mov
mov
in
femms
mov
rclb
aaa
pop
sbb
ds
out
mov
cmp
mov
lret
stos
imul
lret
dec
mulb
mov
outsb
ljmp
push
cmp
dec
pop
nop
frstor
xchg
ljmp
mov
test
pop
push
sbb
and
jae
or
fucomi
xlat
subl
das
ja,pn
dec
hlt
adc
jno
enter
mov
adc
xor
nop
adc
ja
fsubs
adc
insl
mov
sti
jne
dec
fistpll
mov
shl
dec
add
pop
clc
and
shrb
int3
stos
add
into
mov
mov
lret
stc
xor
add
popf
addr16
xchg
pop
outsl
xor
fs
mov
sbb
jno
arpl
xor
or
push
je
xchg
and
cmpsl
add
add
or
push
push
dec
push
inc
xchg
scas
out
fwait
orb
and
push
mov
out
mov
fistps
pop
inc
lock
mov
je
notb
pop
fwait
xor
cli
inc
push
inc
aaa
or
jge
xor
jg
incl
cmpsl
cli
xor
addr16
loop
sub
mov
pop
rclb
fisubs
xor
jnp
ja
inc
pop
mov
scas
in
cmp
dec
and
test
lea
ret
jbe
rcrb
arpl
inc
lret
xchg
sbb
aas
mov
mov
outsb
mov
add
add
mov
jns
or
addr16
push
leave
mov
mov
cld
inc
cmc
shr
inc
fadds
arpl
arpl
sub
cwtl
cmpsl
dec
ret
push
xor
jne
cmpsl
negl
mov
mov
push
pop
loope
test
lcall
pop
sub
out
les
mov
dec
cmpsl
push
pusha
cld
lds
xchg
std
inc
rorl
push
roll
mov
mov
jg
loope
sbb
cmp
mov
loop
fistl
xchg
xchg
test
pop
push
xchg
imul
adc
pop
clc
cmp
jle
hlt
rolb
js
inc
sbb
sysexit
mov
mov
inc
push
jle
mov
rclb
call
insl
mov
adc
dec
lods
mov
push
cmp
or
ljmp
fs
std
or
loopne
or
jo
xor
mov
mov
out
imul
or
xchg
sti
clc
xchg
dec
movsb
adc
out
call
bound
dec
into
sbb
orl
add
int
int3
scas
outsl
sub
test
sbb
add
mov
dec
insb
sbbb
repz
inc
xor
scas
pop
lcall
ret
jae
mov
xchg
ljmp
jp
inc
sub
inc
push
ret
adc
sbb
cmc
pop
icebp
scas
adc
nop
hlt
ljmp
sbb
pop
push
jle
ljmp
daa
mov
sbb
pop
jmp
arpl
fdivrl
mov
jo,pn
mov
aad
or
imul
sub
call
icebp
push
in
mov
cmp
mov
inc
jp
divb
aam
insl
out
jne
in
fcomps
push
cmp
push
or
andb
xchg
adcb
pop
je
mov
inc
pop
inc
icebp
lds
mov
cmp
xlat
pop
insl
jl
sub
cmp
mov
sub
daa
fwait
and
xchg
lahf
ja
add
imul
dec
aam
std
pop
or
push
insl
inc
cmp
lcall
or
dec
push
aas
sti
int
inc
pop
ret
sbb
and
dec
pop
xchg
push
aam
inc
push
ljmp
ja
mov
fidivrl
psllw
adc
sbb
xorl
push
jmp
arpl
xlat
xchg
push
pusha
mov
add
sbb
mov
inc
lret
inc
rcl
pop
pop
jb
cmc
insl
push
jp
ret
loop
fcomp
or
jbe
addr16
push
sbb
and
stc
inc
ror
int
insl
jp
das
xchg
insb
pop
lret
jmp
aas
mov
or
mov
mov
test
or
andl
mov
mov
icebp
and
push
arpl
or
test
mov
test
divl
adc
fnstenv
or
cmp
cmp
jb
rcrb
push
lcall
out
pop
xlat
pop
in
xchg
push
sahf
andb
imul
xchg
mov
pop
js
mov
stos
inc
call
pop
xchg
cltd
cwtl
addl
push
sub
or
jmp
sbb
scas
lea
mov
cli
orl
cmp
xor
ds
sub
mov
data16
pop
adc
or
mov
pop
add
xor
cmpb
cmc
jge
and
stos
adc
cmp
adc
data16
and
sub
mov
js
add
ret
push
xchg
adc
xchg
test
int3
sbb
xchg
add
or
fwait
push
dec
es
jns
cmp
das
jecxz
dec
mov
or
and
lret
cmp
add
cmp
inc
fildl
cmpsb
divl
push
das
cmp
xchg
bswap
push
cmp
cwtl
or
sub
int3
mov
cmp
mov
mov
cmp
sti
movmskps
cmp
mov
sbb
push
sub
adc
je
bound
sti
jbe
mov
sbb
jno
aas
mov
jnp
xchg
aas
add
sbb
jge
lret
fisttpl
daa
sbb
in
int
jae
pop
ds
or
or
sub
push
cmp
jnp
and
sbb
or
mov
fldt
cmp
xorb
or
inc
call
dec
pop
jnp
sub
fisubs
lods
cmp
fsubs
repz
fistpl
das
jno
in
in
and
add
adc
aaa
je
push
ja
and
fstps
cmp
ss
jecxz
das
idivl
movl
repz
jno
out
repnz
sbb
adc
mov
xor
jb
stos
fwait
adc
xor
fistps
popfw
xor
xor
pop
mov
cs
ret
adc
or
or
cltd
ret
push
inc
adc
loope
xchg
or
push
dec
es
adc
xchg
adc
fwait
lea
dec
fldt
adc
xor
xor
add
lods
adc
insb
sbb
inc
xor
jg
div
or
and
and
push
js
fstps
or
and
out
mov
sbb
xor
cmp
push
iret
push
cmp
adc
xlat
fnstenv
mov
bsr
xor
outsl
pop
movsb
js
xchg
or
sub
push
sbb
jns
arpl
mov
mov
fstl
jge
fsts
push
lret
popa
xchg
rorl
insl
mov
mov
btr
out
jnp
clc
inc
or
xchg
push
xor
adc
cmp
mov
ja
test
push
xor
ja
daa
pop
lahf
out
and
push
push
and
int
imul
mov
pushf
pop
sub
adc
and
fucomi
jmp
scas
xor
jnp
neg
push
push
or
div
push
add
or
xor
fsubr
push
sub
xor
idivl
addr16
add
cmp
btr
addl
mov
push
xchg
pop
mov
cmp
sub
xchg
jmp
cmp
mov
xlat
insb
leave
or
or
add
adc
js
fsts
sbb
pop
sbb
adc
imul
mov
xchg
or
arpl
mov
push
fcompp
fsubs
dec
mov
rorl
dec
mov
or
mov
testl
mov
and
xlat
or
fistpl
adc
adc
or
or
xchg
pop
push
sub
pop
out
sub
int
dec
sub
stos
das
pop
or
adc
aas
or
or
or
pop
lcall
pop
or
mov
sbb
mov
add
sbb
sbb
je
sbb
pop
add
inc
sbb
arpl
push
mul
lea
add
sti
pop
adc
sarl
js
negb
cmpsb
ljmp
or
and
ja
addb
lahf
divps
jbe
orb
add
ja,pt
test
insb
sbb
into
push
sti
pop
arpl
dec
adc
mov
mov
mov
mov
adc
or
push
addr16
mov
jecxz
rcr
add
add
xchg
pop
mov
imul
sbb
and
adc
sub
imul
xchg
inc
xchg
cmp
aam
mov
cmp
mov
imul
cmp
pop
aad
lock
lahf
jmp
sbb
jae
add
mov
inc
hlt
test
and
or
mov
test
and
popa
fnstcw
adc
sahf
jge
pop
pop
aam
jae
xor
mov
icebp
bound
jg
add
pop
mov
adc
popa
pop
adc
fdivl
push
fidivs
sub
or
sub
cmp
lods
xchg
nop
insb
fcomps
test
cmc
xchg
pop
jmp
jbe
gs
pusha
sub
aam
lahf
mov
xchg
lds
xor
inc
add
inc
jl
push
mov
add
adc
or
sub
lds
push
push
dec
ss
rclb
adc
int
ret
adc
xchg
lock
add
insl
in
push
scas
aad
or
push
popf
sub
pop
push
mov
in
test
pop
pop
mov
sub
and
scas
lahf
add
stos
hlt
aad
xor
stos
lahf
or
add
or
outsl
add
sbb
test
push
push
enter
cmp
inc
mov
stos
jmp
add
or
xor
cld
mov
or
and
sub
outsb
pop
aaa
popa
fsubs
in
loopne
adc
mov
inc
arpl
mov
or
sub
cmp
aam
sub
fs
idivb
aam
sub
add
or
stos
mov
push
jmp
fimuls
popf
xchg
aam
out
xor
bound
xchg
sub
cmp
sub
jnp
sbbl
pop
dec
sub
int
loope
add
pop
jmp
jbe
mov
cmp
and
push
add
fnsave
and
fisttpll
mov
pop
stc
in
sbb
add
dec
call
adc
das
and
adc
or
mov
int3
dec
sarl
out
daa
and
subb
test
pop
xchg
insb
push
adc
imul
push
or
sub
add
xor
fcmovnb
cs
bound
lods
clc
push
mov
mull
rorl
pop
mov
lods
movsb
gs
mov
sahf
pop
fs
add
jmp
jmp
inc
sbb
add
andb
ret
xchg
mov
mov
jae
push
push
push
push
test
jmp
test
add
or
or
out
aaa
sbb
adc
add
cwtl
jl
mov
mov
out
ja
xor
jbe
sbb
dec
das
lcall
lret
addr16
hlt
jnp
xor
aaa
repz
pop
xor
push
inc
xchg
sub
mov
xchg
push
xchg
pop
fstpt
mov
add
xchg
cmp
sbb
fiadds
add
mov
mov
pop
cmp
inc
cmp
pusha
cmp
fld
std
scas
jae
ds
and
sub
insb
shlb
jae
ljmp
shll
inc
fwait
mov
xchg
push
int3
mov
repz
xchg
dec
mov
in
jnp
and
dec
fildll
push
into
pop
out
sar
sub
cmp
lods
fwait
inc
nop
jbe
ljmp
outsb
arpl
mov
jae
cmp
or
dec
rorb
push
sub
mov
test
sub
add
add
jo
inc
pop
sbb
sub
push
dec
pop
inc
sub
imul
mov
mov
nop
fimuls
push
mov
cmp
xor
push
mov
aaa
fldcw
cwtl
ja
aaa
sbb
push
mov
test
mov
pop
push
adc
or
xchg
cwtl
pop
push
negl
pop
test
xchg
mov
jecxz
test
push
adc
mov
and
xchg
mov
mov
in
jne
aad
xchg
les
dec
push
movaps
xchg
je
mov
dec
cmp
dec
xchg
nop
pop
fwait
cmp
mov
sub
vcmpps
or
xchg
mov
ss
test
or
out
ret
into
or
push
ljmp
popa
push
xor
cwtl
xor
lahf
or
mov
cmpl
dec
sbb
sub
dec
test
jbe
adc
pop
cwtl
rorb
dec
pop
out
mov
es
xor
loopne
add
test
hlt
and
aam
cwtl
inc
shr
test
lcall
adc
xchg
popa
pop
in
or
negl
in
mov
stos
testl
jns
gs
sbb
inc
sub
lds
inc
dec
dec
cli
sbb
pop
pop
ret
imul
js
pop
and
insb
aam
lret
push
mov
es
scas
push
lret
dec
cmp
ds
and
pop
or
add
fisubl
adc
pop
xor
and
dec
jle
dec
cmp
push
les
jecxz
xchg
jb
sub
ja
out
inc
xchg
mov
mov
and
in
push
sbb
je
pop
lret
lea
cmpsl
pusha
into
mov
test
and
cmpsl
xor
sub
sub
sbb
sub
xchg
mov
sbb
mov
xchg
aad
push
dec
xchg
xchg
sub
ret
cli
lock
inc
add
fsubl
iret
popf
add
popa
fisubrl
filds
sub
push
and
stos
sbb
dec
ss
xor
sub
adc
jae
push
add
fldenv
mov
fadds
adc
insb
cmp
loopne
fidivl
cmp
inc
jb
cmp
sbb
adc
cli
mov
test
pop
jne
adc
or
inc
mov
sbb
int3
push
insb
mov
xchg
pop
push
stos
push
lret
lods
mov
dec
add
mov
lcall
or
xchg
ss
inc
subb
and
test
and
test
ret
aam
push
push
mov
pop
ljmp
xchg
dec
testb
lock
sti
and
div
mov
or
push
rorl
mov
enter
sbb
or
or
fstl
stc
inc
mov
jp
rol
xor
pop
adc
faddl
jo
inc
dec
les
or
sbb
insb
inc
add
je
daa
pop
mov
adcl
arpl
add
push
outsl
or
mov
sub
std
cmovb
or
popa
arpl
sub
push
sub
int3
xor
xchg
mov
in
pushf
add
sub
pop
adc
push
cmp
ljmp
cwtl
ja
add
pusha
xchg
cs
ret
push
inc
add
fisubs
xor
mov
dec
ret
sahf
add
lret
sbbb
ret
and
popf
pop
and
inc
enter
cmp
inc
or
and
mull
les
xchg
subl
jnp,pn
xor
adc
dec
cmp
fimuls
or
gs
dec
sbb
adc
mov
pop
pop
sbb
lcall
mov
push
int3
pop
mov
and
and
rol
in
jne
pop
push
fistpll
fsubs
stos
hlt
sub
push
outsl
xchg
das
dec
sub
int
in
inc
xchg
pop
mov
inc
popa
fisttps
cmp
test
filds
movsb
cmp
fidivl
insb
and
xor
pop
xorb
ds
xchg
rcrl
xor
jnp
pusha
movsl
cmpsl
int
sbb
test
pushl
iret
dec
call
fistpl
add
pop
adc
adc
fs
jno
and
jmpw
in
cmp
popa
xor
xchg
rorb
push
or
pop
and
icebp
das
jbe
xor
sbb
mov
adc
xor
adc
aad
sbb
fdivrs
sub
fisubs
je
and
sbb
data16
and
ret
sub
sub
cwtl
inc
pusha
push
and
dec
pop
xchg
aaa
adc
sbb
xchg
pop
inc
adc
adc
push
or
xchg
mov
pop
xor
fistl
addr16
inc
int3
push
data16
cmp
dec
cmp
mov
xor
add
inc
xchg
xchg
mov
sbb
loopne
add
das
and
pushf
shlb
enter
data16
mov
aas
pcmpgtb
lcall
push
mov
pop
inc
xchg
popl
popa
xchg
mov
and
mov
xor
sub
mov
fnstcw
jecxz
adc
add
pop
inc
xchg
and
adc
and
jnp
cmpb
in
jp
fmuls
pop
mov
sbb
push
in
pop
push
and
hlt
pusha
xchg
mov
cmp
popa
sbb
jne
sbb
push
cmp
roll
add
add
or
into
jge
scas
lret
sbb
push
push
les
mov
sub
xor
or
dec
std
jmp
sbb
pop
testb
mov
jge
inc
orl
lret
daa
mov
push
test
cmp
xor
test
or
jge
cmp
insb
or
xchg
adc
scas
adc
addr16
pop
jg
out
leave
jge
aam
imul
sbb
add
iret
daa
insl
lret
in
jae
cmp
or
stc
seta
sub
icebp
fimuls
je
aaa
ss
xchg
sub
std
inc
sbb
inc
sub
add
in
mov
aad
mov
pop
fwait
stc
sub
and
add
sub
jb
ret
adc
filds
mov
pop
adc
or
mov
inc
or
out
imul
add
xchg
mov
adc
adc
arpl
lds
fistpll
imul
leave
popf
jp
adc
and
or
xor
fcomps
or
jns
sahf
andl
sbb
pop
inc
adcl
jecxz
pop
adc
pop
in
xlat
push
jae
adc
mov
add
add
pop
into
int3
testl
cmp
rcll
outsl
jle,pt
dec
notb
add
aaa
or
push
sub
jmp
sti
xor
adc
xor
ret
push
lods
pusha
jge
inc
sub
dec
jo
stos
and
add
int
push
mov
inc
lods
ret
jl
pop
mov
xchg
insb
lret
push
sbb
arpl
arpl
mov
and
jl
sub
int3
mov
sub
int
fdivrp
lods
sub
gs
scas
popa
ret
jnp
add
ret
mov
xor
std
stos
call
js
mov
pop
pop
inc
popf
mov
imul
pop
pop
dec
outsb
sbb
pop
and
pop
imul
dec
mov
add
daa
dec
pop
lcall
pop
pop
pop
pop
outsl
sbb
call
ds
or
stos
inc
sbb
jno
imul
mov
and
cwtl
xchg
inc
outsb
out
imul
cmp
xor
mov
sbb
or
pop
and
pushf
imul
insb
out
out
fwait
cltd
dec
and
jmp
out
das
push
int
push
jae
mov
sub
imul
pushf
loope
fninit
dec
inc
inc
jbe
pop
dec
sub
lods
dec
popf
fidivrl
cmp
cmp
pop
jle
cmp
mov
pop
pop
jne
cmp
pusha
push
dec
cmp
filds
insb
test
dec
sahf
outsb
add
push
imul
pop
jno
movsb
adc
pop
add
inc
pop
std
dec
pop
out
xchg
bound
cmpsb
in
adc
cmpsl
dec
sbb
sbb
jbe
fimuls
xchg
sbb
insb
jp
push
jge
insl
mov
jne
push
jge
sbb
bound
jno
movsb
sub
popa
jl
jecxz
cmp
fwait
inc
addl
push
mov
dec
test
cmpsl
ret
pop
mov
int3
scas
jle
imul
mov
xchg
adcl
xchg
scas
sti
out
sti
or
iret
test
adc
lods
imul
out
dec
push
cmp
loop
add
jmp
pop
xor
addr16
mov
jp,pn
outsb
push
sbb
loope
or
loop
in
jl
cmp
sub
push
mov
stos
add
mov
repz
testl
dec
cmp
ds
ret
popf
hlt
add
negl
jnp
push
jno
lods
cmp
sbb
xchg
adc
loopne
push
push
push
fcomps
xor
mov
sbb
pop
faddp
lcall
dec
jb
sahf
or
hlt
js
xor
test
cmpsl
lahf
mov
or
sub
fs
fcoms
mov
dec
sahf
push
imul
cmp
int
mov
arpl
add
outsb
xlat
xor
out
lds
sbb
adc
xor
inc
cltd
mov
pushf
fimuls
xchg
mov
push
add
sbb
push
imul
arpl
xchg
xor
mov
movsl
sar
xor
int
pop
movsb
je
adc
pushf
cmp
sub
sbb
bound
ret
jecxz
mov
jae
sub
shll
add
cmpb
mov
je
add
cwtl
je
xchg
lock
add
adc
mov
cmp
pop
bsf
inc
or
jae
add
repz
add
dec
movsb
jae
mov
jb
add
gs
xchg
mov
movsl
dec
pusha
mov
xchg
pop
add
sbb
cmpxchg
and
cwtl
pop
pop
in
out
mov
cmp
negl
mov
adc
pop
stos
pop
pop
jl
les
jecxz
lock
fwait
sti
mov
pop
in
mov
out
dec
xor
jmp
aam
jae
sbb
cmp
daa
jbe
and
ja
mov
xor
ds
xchg
and
mov
dec
notb
dec
dec
pop
out
lods
hlt
repnz
push
hlt
push
mov
jecxz
popf
fwait
lods
cmp
sbb
mov
bound
out
out
xchg
mov
pop
dec
leave
jno
les
mov
and
xor
mov
xchg
js
lea
seta
xchg
xor
pushf
js
fiaddl
sahf
adc
jge
and
or
in
das
cmp
xor
dec
xor
stos
xor
jae
cmp
es
and
cli
sti
enter
dec
mov
or
lds
xor
out
sub
sbb
sub
sbb
mull
add
shrb
mov
loop
popf
ret
mov
and
mov
arpl
scas
pusha
movsb
cmpsb
pop
cmpsb
adc
inc
jg
testb
leave
sbb
sbb
jecxz
pop
jg
mov
call
push
adc
lods
push
ss
mov
outsb
mov
inc
sahf
xchg
icebp
xchg
adc
sbb
mov
adc
xor
das
pusha
adc
push
test
inc
outsl
and
dec
sbb
addr16
inc
ret
dec
fdiv
aaa
imul
mov
popf
loope
in
sbb
xor
adc
jo
popf
sub
or
add
test
les
cmpsb
pop
mov
or
push
sub
inc
xchg
push
dec
adc
adc
cmp
dec
pusha
and
xor
sub
das
andb
dec
and
test
add
pop
xchg
js
hlt
dec
mov
mov
leave
ljmp
xchg
inc
rclb
sbb
or
shlb
in
adc
mov
lret
mov
lods
add
lods
jnp
ret
dec
jae
mov
pop
sahf
push
inc
pop
dec
mov
es
xchg
ja
mov
aam
jp
or
sbb
lcall
pop
push
test
call
fiaddl
inc
imul
push
push
jnp
stos
leave
push
add
mov
and
xchg
mov
xor
xor
mov
xchg
mov
cmp
xor
push
data16
push
sub
sbb
ja
jl
sub
loope
inc
push
push
dec
aad
iret
fistpll
mov
sbb
xor
pop
push
ss
pop
xor
popf
inc
repz
inc
ja
add
je
push
push
insl
xchg
inc
popa
sti
mull
xor
push
mulps
mov
dec
xor
out
pop
inc
dec
pop
mov
lret
xchg
add
cmpl
jo
xchg
fsts
push
and
inc
test
pop
sub
mov
lea
sbb
or
push
mov
clc
add
pop
outsb
pop
jecxz
mov
pop
inc
inc
pop
aad
not
push
dec
xchg
loopne
inc
scas
and
pop
data16
mov
add
jns
add
mov
fwait
cmp
ljmp
lock
adc
push
je
scas
and
push
inc
insl
xchg
aam
mov
push
and
jb
mov
clc
jnp
js
mov
je
and
xchg
lds
outsb
sub
das
adc
stos
insl
sbb
movsb
xor
inc
sahf
inc
pusha
js
mov
nop
jo
cmp
cltd
sbb
dec
call
dec
sub
test
and
test
stos
sbb
stos
gs
pop
push
adc
inc
js
les
xor
pop
mov
dec
dec
dec
cmp
loope
push
inc
jg
xor
addl
dec
inc
sub
jmp
dec
mov
js
xchg
js
dec
lea
lock
in
dec
mov
jnp
or
and
sub
imul
das
mov
frstor
add
mov
pop
pop
aad
inc
jno
les
dec
out
sub
push
bound
lds
daa
jle
inc
outsl
adc
dec
cmc
inc
aas
addr16
xchg
arpl
adc
push
push
push
mov
out
jmp
dec
jmp
mov
pop
pop
outsl
aaa
pop
pop
mov
bound
adc
andl
cmpsl
sbb
or
fisubrs
sbb
inc
lods
fstpl
jnp
jne
rcrb
jle
pop
xchg
mov
jne
jb
jmp
sbb
leave
sub
inc
pop
out
inc
dec
jnp
and
pop
shlw
ret
outsl
inc
pop
das
cmp
pop
filds
dec
sub
cmpl
jae
popf
loopne
push
sbb
mov
xlat
jns
les
dec
push
cmp
mov
sbb
xchg
outsb
pop
push
test
mov
fists
mov
jb
adc
pop
sub
sbb
jmp
sub
out
popf
sbb
push
mov
pop
pop
add
sub
imul
or
jp
addr16
inc
dec
int3
jne
adc
inc
insl
shr
inc
ljmp
jl
insl
leave
call
xor
push
pop
ss
adc
daa
pop
js
scas
sub
ja
dec
pop
bound
popf
mov
pop
fadd
push
jae
dec
out
sbb
pop
sarb
push
cmp
and
aad
push
pop
loop
cmp
mov
std
pusha
mov
cltd
ret
pop
test
das
push
out
pop
push
fisttps
in
xchg
push
idivl
mov
jl
sbb
jp
add
adc
insl
mov
inc
pop
sub
sub
xchg
sbb
int
pop
sbb
lods
int
jnp
push
mov
inc
cmp
adc
fldl
sbb
fists
ret
sbbl
jge
push
jae
aaa
jnp
int3
sbb
jb
insl
push
mov
sbb
xor
out
ret
stc
ficoms
xchg
pop
pop
sarl
rcll
dec
sub
sub
mov
test
pop
push
pop
daa
jne
xchg
inc
lret
push
ret
mov
xor
dec
rcll
adc
cmp
inc
aas
lods
mov
pushf
fisubrs
mov
xor
xor
pop
addr16
imul
xor
dec
pop
insl
pop
sbb
mov
fadds
add
add
and
adc
pop
inc
addb
test
push
cmp
aad
mov
mov
pusha
jle
sahf
pop
dec
inc
shl
sbb
leave
orb
xchg
mov
jl
mov
addb
mov
adc
and
dec
mov
test
jns
lahf
andl
adc
add
test
lds
jecxz
mov
lret
inc
and
call
xchg
sahf
pop
ss
or
ljmp
int3
mov
mov
adc
adc
test
xchg
sbb
fcoms
loopne
jb
mov
adc
or
fsubs
mov
push
testb
jne
inc
rorl
mov
daa
mov
or
cli
push
or
xor
cmp
lods
pop
lods
fistpl
sahf
mov
subl
xorl
dec
notl
sub
imul
or
call
add
mov
jg
adc
sbbb
adc
sbb
cmpb
inc
movsb
xor
push
or
add
inc
push
xchg
push
sbb
xor
sbb
fsubrs
adc
add
push
add
cmp
sbb
jne
divb
add
jno
and
dec
sub
mov
sarb
xchg
xor
mov
test
mov
add
push
mov
add
mov
test
add
add
aaa
jge
push
decl
push
js
inc
mov
sub
enter
push
pop
push
roll
and
movsb
scas
cmp
or
and
mov
cld
repz
pushf
aam
xor
popa
lea
xchg
inc
mov
sub
pop
adc
xor
lods
add
and
enter
popa
mov
loope
movsb
mov
push
pop
std
add
and
adcl
lret
inc
xor
lcall
pop
or
je
ss
xchg
mov
sbb
xchg
pop
add
das
mov
sbb
aas
sbb
push
inc
pop
xor
xchg
push
inc
fmuls
mov
or
sbb
sbb
or
dec
jbe
and
push
push
jle
insl
aas
fisttpll
cs
mov
cmc
cmp
insl
scas
xor
mov
mov
loopne
fildll
insl
sub
inc
mov
push
xor
push
adc
pop
insb
in
adc
push
inc
aas
jge
cs
inc
inc
mov
addr16
adc
adc
inc
add
push
add
sbb
dec
cmp
outsl
int
push
ret
mov
ja
lea
and
add
inc
aaa
mov
dec
xchg
mov
out
insb
jae
xor
pop
inc
inc
fsubl
js
add
mov
pop
dec
lret
outsl
fs
or
adc
jne
and
cmpsb
inc
mov
in
dec
xchg
push
out
loope
adc
jnp
out
aam
mov
pop
pop
add
push
add
out
or
pusha
jmp
jo
stos
cli
xlat
pop
test
push
push
inc
push
inc
cmp
inc
dec
dec
inc
add
insb
or
push
jae
idivl
adc
sbb
cmp
je
add
lret
iret
lock
and
add
add
add
mov
add
shr
inc
pop
js
dec
pop
mov
leave
fidivrs
aaa
fcmovu
xor
mov
movl
inc
dec
jns
mov
pushf
pop
lahf
inc
cmp
dec
inc
mov
gs
sti
mull
push
dec
jge
dec
cs
sub
loope
push
push
fmull
pop
add
les
push
jnp
lock
ret
cmovl
fnstenv
aaa
outsl
mov
data16
icebp
pop
aam
or
xor
sub
outsb
ret
inc
dec
cmp
xor
lcall
push
sub
mov
test
pop
or
sub
cwtl
inc
pop
or
and
or
in
and
sub
repz
mov
mov
or
push
push
or
xor
insb
and
mov
sbb
scas
inc
inc
rclb
and
fs
pop
divb
push
inc
push
cmpsl
inc
push
shll
push
dec
insb
jg
mov
filds
cmp
or
insb
gs
fsubrs
popa
dec
push
inc
lret
daa
stc
fildl
add
add
push
pop
repnz
or
mov
bswap
mov
repnz
rclb
pop
sub
movsb
mov
jge
sub
jp
nop
fistl
add
jo
xchg
pop
jb
adc
cmp
inc
push
or
ret
jno
out
je
add
pop
pop
testb
bndldx
ss
mov
add
cmp
stos
xchg
or
jne
decl
pop
xor
aad
pop
fcoms
xchg
xchg
or
xchg
addr16
sahf
cmp
mov
fmuls
stos
cmp
scas
sbb
mov
testb
mov
fstps
dec
nop
in
pop
inc
icebp
dec
mulb
add
jge
mov
xchg
pop
stos
and
cltd
xor
aaa
add
fcompl
sbb
das
in
in
push
inc
push
adcl
gs
gs
js
jns
in
in
mov
arpl
pop
mulb
dec
pusha
mov
mov
pop
stos
add
stos
adc
stos
insb
mov
lods
mov
dec
lods
add
mov
in
push
pop
fdivs
mov
pop
jno
sbb
psrld
nop
lcall
in
test
jne
das
aam
xchg
int3
cvtdq2ps
fistl
xor
sbb
lret
jle,pn
lfs
scas
in
rcr
pushf
mov
pop
imulb
add
cli
push
pop
pop
sbb
repnz
pop
pop
or
or
or
xchg
or
xor
movd
leave
lret
xor
std
adc
insl
adc
add
xor
adc
nop
and
cwtl
pop
mov
or
push
daa
xor
shrd
adc
pop
mul
test
leave
xor
xor
aaa
cs
xchg
xor
pop
mov
les
and
adc
xor
jno
cmp
mov
aam
mov
lcall
lea
cmp
add
mov
push
add
add
mov
add
add
add
jb
outsb
inc
adc
popa
je
lds
popa
cmp
adc
jno
pop
add
das
divb
gs
jns
gs
push
imul
cs
arpl
in
pop
cmovge
jne
dec
popa
outsb
fs
loop
inc
jne
sbb
int
jbe
adc
insl
and
and
aaa
or
push
dec
insb
cmp
inc
xorb
jecxz
dec
sbb
sub
imul
outsl
outsb
push
popf
in
out
insl
jnp
mov
insb
dec
outsl
ja
jbe
stos
shrb
adc
data16
lods
insl
sub
popa
scas
push
xchg
fs
jae
sbb
inc
outsl
adc
push
mov
fidivl
and
mov
popa
bound
outsw
ds
xor
add
cmp
lods
sub
inc
gs
push
mov
loope
fdivl
dec
and
cmp
inc
lds
dec
add
add
pop
inc
sub
adc
aas
loopne
popl
jae
mov
fdivrl
pop
aaa
sti
or
xor
mov
fbld
add
adc
in
mov
adc
add
and
fsubrs
aaa
test
idiv
add
inc
dec
inc
inc
pop
call
outsl
jmp
and
pusha
inc
inc
push
inc
pop
popf
std
pusha
addb
addb
jbe
daa
lahf
xchg
das
rolb
or
add
add
imul
dec
mov
icebp
dec
rcrl
daa
add
push
jae
cmpb
daa
sbb
outsl
add
add
add
nop
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
