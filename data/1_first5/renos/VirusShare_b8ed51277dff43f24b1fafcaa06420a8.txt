mov
mov
movl
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
add
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
xor
mov
mov
mov
mov
addl
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
or
and
leave
ret
nop
nop
nop
mov
mov
mov
orl
mov
pushl
push
mov
pushl
call
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
mov
mov
sub
pushl
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
push
push
call
mov
mov
add
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
ret
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
xor
mov
pushl
call
mov
mov
mov
mov
andl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
pushl
call
mov
mov
mov
call
mov
mov
mov
sbb
push
call
mov
mov
mov
call
mov
mov
mov
sub
push
call
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
adc
xorl
mov
add
push
call
mov
mov
mov
mov
push
push
push
push
call
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
sub
adc
call
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
sbb
mov
orl
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
and
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
or
mov
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
and
push
call
mov
mov
mov
mov
mov
xorl
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
subl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
add
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
push
call
mov
sbb
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
and
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
pushl
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sub
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
and
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
andl
push
call
mov
mov
xor
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
adc
mov
or
pushl
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
sub
mov
mov
call
mov
mov
mov
push
push
push
push
call
xor
mov
xorl
mov
push
call
mov
mov
mov
call
mov
mov
mov
adc
call
mov
mov
mov
xor
push
push
mov
push
push
call
mov
mov
mov
mov
push
call
mov
and
mov
mov
push
push
movl
push
push
call
mov
mov
mov
mov
mov
call
mov
and
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
xorl
push
call
mov
add
mov
push
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
subl
mov
push
mov
push
push
push
call
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
and
mov
mov
push
mov
push
mov
push
push
call
mov
mov
call
mov
mov
or
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
movl
mov
call
mov
mov
movl
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
pushl
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
or
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
xor
push
mov
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
or
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
push
call
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
sub
push
call
mov
mov
or
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
add
mov
mov
push
call
mov
mov
mov
call
and
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
xorl
call
mov
mov
mov
mov
call
xor
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
sbb
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
sub
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
sub
mov
pushl
call
mov
mov
mov
xorl
mov
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
sbb
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
or
mov
mov
mov
push
push
push
push
call
mov
add
or
mov
call
mov
mov
call
mov
mov
mov
mov
push
call
mov
or
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
xor
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
sbb
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
and
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
and
mov
mov
orl
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
xorl
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
orl
mov
call
mov
mov
mov
push
mov
push
push
push
call
adc
mov
mov
or
push
call
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
push
push
mov
push
push
call
mov
mov
xorl
mov
call
mov
mov
mov
mov
call
mov
mov
sub
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
xor
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
adc
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
or
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
sub
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
call
mov
mov
mov
addl
call
mov
mov
xorl
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
xor
add
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
push
push
push
call
mov
adc
mov
and
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
andl
mov
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
push
push
push
push
call
or
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
adc
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
or
call
mov
mov
mov
add
push
mov
push
mov
push
push
call
mov
mov
mov
mov
xor
pushl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
xor
mov
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
sub
mov
mov
mov
add
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
and
subl
mov
call
sub
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
xor
mov
call
or
mov
mov
mov
push
call
mov
or
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
sub
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
or
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
sbb
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
sub
push
call
mov
mov
mov
push
push
mov
push
push
call
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
xorl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
xor
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
and
push
push
call
mov
mov
mov
mov
sub
call
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
sbb
mov
mov
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
andl
call
sbb
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
add
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
or
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
or
mov
push
push
push
push
call
mov
mov
andl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
add
mov
call
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
and
mov
mov
call
mov
mov
mov
mov
mov
add
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
and
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
and
mov
push
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
addl
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
call
add
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
and
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
push
call
mov
mov
sub
sub
push
call
sbb
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
push
call
mov
and
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
pushl
call
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
and
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
xor
mov
mov
pushl
call
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
or
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
call
mov
mov
xor
mov
mov
call
mov
mov
adc
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
call
mov
adc
mov
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
subl
mov
call
mov
mov
mov
mov
adc
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
sub
mov
call
mov
mov
mov
or
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
call
mov
mov
mov
adc
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
pushl
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
push
push
push
mov
push
call
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
call
mov
mov
mov
sub
mov
call
sub
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
adc
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
call
sbb
mov
mov
push
call
mov
and
mov
or
mov
pushl
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
push
call
mov
mov
andl
call
mov
mov
mov
push
push
push
mov
push
call
mov
xor
mov
mov
mov
push
push
push
push
call
add
xor
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
movl
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
and
mov
mov
push
push
push
push
call
mov
sbb
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
call
mov
mov
mov
mov
mov
call
and
mov
mov
mov
call
add
mov
mov
sub
push
call
mov
mov
mov
mov
mov
pushl
call
sub
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
orl
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
sub
mov
push
mov
push
push
push
call
mov
mov
mov
or
push
push
mov
push
push
call
mov
mov
and
mov
push
call
mov
mov
mov
call
add
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
sub
call
sbb
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
xor
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
sub
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
push
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
xor
push
push
push
call
mov
mov
orl
mov
call
and
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
call
mov
mov
xorl
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
adc
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
movl
push
call
mov
mov
mov
mov
call
and
sub
mov
mov
call
add
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
or
mov
call
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
call
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
add
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
addl
mov
call
mov
mov
mov
mov
pushl
call
mov
mov
xorl
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
subl
call
mov
mov
mov
mov
mov
call
mov
add
mov
sbb
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
push
call
mov
or
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
subl
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
mov
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
orl
mov
mov
call
mov
mov
sbb
mov
mov
push
call
sub
mov
mov
mov
call
mov
or
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
xor
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
adc
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
xor
push
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
push
call
and
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
adc
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
xor
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
and
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
or
mov
mov
call
mov
mov
mov
xor
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
movl
mov
push
push
push
push
call
mov
mov
orl
call
mov
mov
mov
call
mov
mov
mov
add
mov
add
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
push
call
mov
mov
call
mov
mov
pushl
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
adc
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
sbb
mov
mov
mov
mov
call
mov
mov
mov
call
mov
xor
mov
adc
and
mov
push
push
push
mov
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
mov
push
push
call
mov
or
xorl
mov
mov
push
mov
push
push
push
call
mov
mov
mov
xorl
call
mov
mov
mov
mov
mov
call
mov
mov
call
mov
mov
subl
mov
mov
call
mov
mov
mov
mov
mov
push
xor
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
push
push
push
push
call
adc
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
xor
mov
mov
mov
mov
push
push
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
or
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
movl
mov
mov
mov
cmp
jae
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
dec
jne
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
xor
subl
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
or
push
push
mov
push
push
call
mov
mov
mov
mov
mov
push
mov
push
push
movl
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
mov
call
mov
mov
mov
push
call
mov
add
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
sub
mov
call
mov
and
mov
push
push
push
push
call
mov
mov
mov
mov
orl
push
push
mov
push
push
call
mov
mov
mov
sub
push
call
mov
xor
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
sbb
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
xor
mov
call
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
push
mov
push
push
sbb
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
subl
mov
mov
mov
mov
push
push
push
push
call
and
mov
xor
mov
mov
pushl
call
mov
mov
mov
call
mov
adc
mov
mov
call
mov
mov
mov
mov
call
mov
mov
push
push
add
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
xor
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
add
mov
mov
call
mov
add
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
call
mov
mov
mov
push
push
and
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
add
push
call
mov
and
subl
mov
sub
push
call
mov
mov
mov
mov
mov
call
xor
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
call
mov
mov
call
sub
mov
mov
push
call
mov
mov
mov
call
mov
mov
adc
mov
call
mov
xor
mov
mov
mov
call
mov
mov
mov
push
call
mov
and
mov
call
mov
mov
mov
mov
call
mov
mov
or
call
adc
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
add
push
call
sub
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
mov
push
mov
push
call
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
orl
push
push
call
add
mov
add
sub
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
xor
call
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
mov
mov
mov
and
mov
pushl
call
mov
and
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
pushl
call
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
adc
call
mov
mov
sbb
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
sub
push
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
sbb
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
or
mov
push
call
mov
mov
mov
call
mov
mov
mov
mov
sbb
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
call
mov
sbb
mov
call
add
mov
mov
call
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
call
mov
and
push
call
mov
mov
sub
mov
mov
push
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
call
mov
and
mov
mov
mov
movl
push
call
mov
mov
mov
mov
mov
push
call
mov
mov
add
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
call
mov
mov
mov
addl
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
inc
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
mov
mov
pushl
call
call
xor
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
pushl
call
mov
mov
mov
call
push
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
push
call
mov
add
mov
mov
mov
call
call
call
mov
mov
andl
mov
mov
call
mov
mov
mov
mov
call
adc
mov
mov
mov
call
call
mov
mov
mov
push
call
nop
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
leave
ret
nop
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
push
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
nop
nop
push
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
adc
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
adc
mov
mov
mov
mov
mov
mov
mov
or
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
pushl
call
mov
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
add
xor
mov
mov
sub
mov
mov
sub
mov
mov
mov
inc
mov
xor
cmp
jne
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
adc
mov
mov
call
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
xor
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
xor
mov
add
mov
sub
mov
mov
add
mov
mov
mov
add
add
mov
mov
sub
add
cmp
jg
mov
mov
mov
mov
mov
dec
cmp
jne
mov
mov
mov
xor
add
push
call
mov
mov
xor
mov
push
push
push
push
call
mov
mov
mov
and
mov
mov
call
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
pushl
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
adc
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
push
push
call
call
leave
ret
nop
nop
nop
push
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
pushl
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
pushl
lea
mov
push
mov
mov
push
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
leave
ret
nop
push
mov
add
mov
mov
and
mov
mov
mov
xor
mov
pop
ret
nop
nop
nop
and
mov
mov
mov
mov
mov
mov
push
sub
push
push
push
call
mov
mov
mov
mov
push
call
sbb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
push
push
push
call
xor
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
add
mov
mov
mov
mov
mov
movl
sbb
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
ret
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
push
mov
add
mov
adc
mov
mov
mov
mov
xor
mov
mov
mov
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
mov
push
lea
push
call
mov
sbb
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
ret
nop
push
mov
mov
mov
mov
or
call
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
xor
mov
mov
mov
mov
mov
pushl
push
call
mov
mov
mov
ret
nop
nop
push
mov
mov
mov
pushl
pushl
push
call
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
decl
mov
mov
mov
call
mov
mov
mov
mov
xor
mov
mov
mov
push
call
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
inc
cmp
jne
mov
xor
add
mov
mov
mov
mov
and
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
push
mov
push
push
mov
push
call
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
nop
nop
nop
inc
jno
add
je
ja
add
push
add
add
inc
xlat
test
loop
dec
mov
nop
ret
into
adc
jae
rep
notb
jecxz
ljmp
ljmp
adc
push
test
push
out
jg
ljmp
nop
or
push
scas
orl
mov
mov
notl
ret
test
sbbl
sub
sar
mov
inc
cli
ljmp
fs
mov
pop
mov
mov
in
lods
xor
ljmp
imul
insl
mov
jge
jae
cmovg
mov
insl
mov
add
lock
into
inc
fidivrs
mov
push
pop
popa
dec
jecxz
inc
dec
push
jp
in
ljmp
fcoms
jp
cmp
fwait
imul
jns
std
mov
xchg
loop
cmp
lea
inc
movsb
fidivrs
in
cmc
sbb
jmp
add
mov
out
lds
into
sbb
adc
adc
imul
cmp
nop
leave
cwtl
out
jmp
std
mov
lods
popa
xchg
sbb
push
adc
repnz
cmp
cld
mov
clc
call
sbb
clc
pop
xchg
mov
jmp
add
test
push
outsb
lds
xor
cli
sbb
sti
mull
lea
fistps
add
pop
xchg
clc
mov
push
shrb
sbb
jae
ja
decb
jle
lea
je
sbb
add
inc
pop
loope
sbb
mov
mov
dec
pop
insb
repz
ljmp
jmp
sbb
xchg
push
and
insl
sub
cmp
decb
ljmp
icebp
repz
xor
adc
iret
mov
mov
je
xchg
scas
jmp
and
ja
decb
xor
lcall
cs
jb
hlt
shlb
pop
push
mov
mov
scas
jne
aam
adc
sbb
adc
push
adc
cld
mov
adc
sbb
sar
push
pop
sub
sbb
js
mov
add
mov
xor
in
cmp
xchg
jmp
sbb
jno
add
jbe
jl
test
dec
xchg
jmp
movsb
fidivs
fisttpl
push
cmp
shr
call
dec
sbb
inc
pop
sbb
jae
nop
pushf
mov
and
ljmp
scas
adc
orl
fisubrs
push
pop
jmp
lea
cmc
adc
ljmp
scas
ljmp
lea
cmp
decb
ljmp
xor
sbb
ljmp
jge
inc
sbb
ljmp
les
aas
test
mov
dec
mov
scas
popf
decb
je
or
pop
outsb
ljmp
xchg
lea
jne
sbb
ljmp
lea
adcl
aas
xor
cli
and
scas
jno
cmp
adc
nop
ret
inc
fstl
mov
sbb
ljmp
int
nop
shr
mov
mov
jo
add
add
decb
pop
in
aad
mov
xor
std
mov
mov
jbe
cmpsl
rolb
test
mov
jmp
mov
lahf
cmpsb
lcall
in
xchg
push
insb
push
fdivl
push
in
int
popf
testl
sbb
jl
cmp
cmpsl
mov
out
out
adc
cmp
mov
movsl
jmp
mov
test
cwtl
or
mov
je
jb
outsb
sbb
jmp
or
mov
aaa
mov
scas
test
mov
cmc
adc
enter
jns
xchg
sbb
ljmp
or
sbb
mov
lea
je
sbb
ljmp
lea
mov
decb
insb
repnz
ljmp
scas
ret
push
mov
lea
ljmp
sbb
decb
sbb
add
push
pop
adc
into
lds
mov
je
data16
jmp
and
test
sbb
lcall
jne
out
insb
dec
ljmp
add
mov
adc
insb
les
inc
popf
pop
sbb
jae
popf
mov
std
push
ja
xchg
cmp
fimuls
or
test
mov
jo
mov
lds
insb
sbb
out
push
add
sbb
cld
mov
ljmp
pop
jbe
test
mov
cmc
pop
cmp
repnz
xorl
jae
je
mov
push
xchg
jmp
movsb
or
push
fstp
ljmp
in
mov
pop
sbb
inc
pop
nop
mov
je
sbb
fimull
movsb
and
scas
arpl
mov
and
xchg
icebp
adc
fidivs
and
sbb
mov
inc
push
sbb
ljmp
sub
or
push
in
cld
xchg
sbb
ljmp
mov
fnstsw
jg
sbb
out
push
mov
xchg
dec
sub
xchg
pusha
and
ljmp
pop
scas
add
jb
jae
lea
leave
and
ljmp
cmp
adc
jmp
repz
repz
mov
leave
ljmp
or
or
jns
ljmp
xchg
jmp
jbe
ljmp
push
inc
decb
jne
sbb
add
lea
scas
ljmp
ret
mov
iret
cmp
dec
xchg
call
lods
movsb
decb
je
jbe
pop
and
pop
das
and
ljmp
jmp
and
or
out
loop
arpl
or
sbb
jne
popf
mov
mov
cmc
lcall
out
xor
scas
test
into
sbb
push
sbb
jne
popf
mov
std
push
push
jae
sub
mov
icebp
xor
ljmp
loop
shrb
cmp
push
push
cli
es
lahf
jo
sub
sub
rcrl
mov
cmc
dec
lret
fadds
cmc
dec
cmpsb
xor
ljmp
sbb
dec
shll
push
mov
or
out
mov
inc
ret
sbb
sahf
imul
negl
ljmp
test
xchg
xchg
cli
dec
push
push
sahf
push
imul
pop
in
push
sahf
jecxz
push
ret
stos
in
clc
push
ret
xor
insl
dec
xor
inc
sarb
mov
inc
shlb
jl
add
xlat
jb
push
mov
mov
mov
mov
pop
push
inc
xor
addr16
mov
daa
mov
mov
enter
mov
cmp
sub
clc
pop
dec
push
test
sub
adc
popa
cmp
mov
popa
pop
adc
lahf
mov
cmpsl
rcll
leave
cmp
adc
adc
movsb
sub
xor
lock
jl
lahf
pop
push
and
ficompl
imul
scas
loopne
adc
pusha
xor
adc
fsubrl
std
lcall
jne
rcll
daa
cs
inc
mov
in
inc
insl
or
ljmp
scas
ljmp
jle
and
ljmp
cwtl
call
adc
cmp
cli
sbb
je
mov
mov
std
sbb
push
sbb
jmp
mov
jge
je
dec
outsl
or
pop
xchg
sbb
adc
test
leave
mov
testb
test
adcl
inc
mov
cld
mov
mov
mov
lds
rcl
nop
mov
sub
sbb
test
mov
sbb
xor
out
mov
xor
std
mov
jne
sbb
insl
sub
jbe
and
stc
add
nop
mov
sub
cmp
cli
mov
sbb
stc
orl
ljmp
scas
rorb
popfw
stc
cmp
scas
ljmp
ljmp
mov
xor
cwtl
xor
mov
jge
add
jmp
mov
jecxz
cld
lea
mov
decb
je
lahf
shr
decb
xchg
and
cmp
test
call
mov
jp
sbb
jmp
out
sub
sbb
push
fisubs
sbb
in
rcrb
aaa
bound
sub
ja
je
js,pn
loope
ljmp
jae
mov
jmp
and
imul
pop
sahf
adc
mov
jb
or
outsb
clc
lea
repz
gs
fistps
mov
xchg
insb
insb
add
lea
popf
mov
jbe
jle
lea
adc
cmp
das
push
pcmpgtd
ljmp
lea
jmp
or
inc
sti
std
mov
movsl
std
mov
sub
mov
sahf
jmp
lods
push
cmp
add
cli
sbb
je
mov
ljmp
jno
call
mov
jbe
push
lods
call
xor
orb
ljmp
scas
ljmp
lea
xor
cld
outsl
popa
je
adc
and
cwtl
std
mov
shlb
cmp
decl
test
or
mov
lds
sbb
je
test
jae
adc
sbb
std
mov
jne
cmpsb
xor
std
mov
je
cmpsl
cld
mov
inc
mov
ljmp
popf
clc
sbbl
ljmp
scas
pop
pop
dec
ljmp
cmp
incl
scas
jmp
mov
cmpsl
fs
lea
popf
mov
test
inc
imul
clc
out
cmp
mov
jae
sbb
fsqrt
push
inc
inc
std
mov
jmp
adcl
jmp
std
mov
sar
push
mov
jg
mov
and
jo
mov
scas
jmp
cli
push
nop
je
sbb
insl
out
add
xchg
inc
movsb
loop
adc
mov
cmpl
out
ficoms
xor
inc
add
dec
gs
add
cmp
add
je
ja
add
add
add
add
add
add
insl
add
add
add
add
add
push
imul
add
data16
add
add
add
add
add
add
add
add
add
add
inc
add
add
aaa
add
add
add
add
add
add
add
je
add
jns
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
dec
add
push
xor
add
add
dec
add
add
add
data16
add
add
add
add
inc
add
push
add
bound
add
add
add
inc
add
add
push
add
add
ja
add
add
dec
add
add
pop
add
dec
add
cmp
add
dec
add
jns
add
add
add
add
add
dec
add
add
add
add
add
add
push
push
add
add
add
cmp
add
inc
add
add
xor
add
add
add
dec
inc
add
inc
add
add
add
add
add
add
add
add
add
add
imul
add
jbe
add
dec
add
pop
add
inc
add
add
push
add
add
add
add
add
add
add
pop
add
dec
mov
nop
push
jg
lahf
mov
xor
das
or
lods
push
js
hlt
das
mov
mov
or
ljmp
mov
leave
jns
pcmpgtw
mov
call
push
fdivrp
add
loope
hlt
jnp
push
cld
sub
ret
rclb
call
je
fsubrp
pop
rcrl
scas
dec
mov
rcr
bound
pop
jle
ret
fs
or
scas
call
inc
repnz
add
stos
xor
insl
icebp
pop
int
mov
jmp
sbb
or
cmp
pop
mov
jbe
aaa
jmp
and
fwait
jmp
aad
or
mov
mov
aas
outsl
outsl
adc
xchg
pop
sahf
stc
daa
pushf
mov
insb
xor
fidivrs
mov
pop
jmp
sbb
mov
mov
or
pop
imul
inc
pop
lods
inc
stos
inc
mov
shll
adc
or
xorb
or
inc
jmp
adc
sbb
xchg
jne
mov
push
test
push
sub
jmp
pop
shrb
lret
ds
jl
cmp
jg
adc
mov
sbb
sbb
push
test
lods
sub
add
fwait
call
cltd
faddp
jmp
shrb
popf
cmp
add
int3
jle
mov
push
add
ret
inc
repz
pop
outsl
vmwrite
or
mov
in
pushf
stos
push
out
inc
lcall
pushf
call
xchg
bound
lea
mov
sbb
add
push
hlt
fists
ss
sbb
loopne
sub
push
repz
adc
pop
in
add
sbb
inc
popl
in
pop
iret
xor
lods
mov
pop
lods
dec
cli
or
sbb
bswap
ret
imul
cs
scas
fldt
insl
or
das
mov
push
pop
inc
int
pop
lods
call
andb
or
jbe
movaps
loopne
fmull
mov
ljmp
notl
daa
mov
scas
xor
push
cmp
mov
test
lods
int
into
add
or
push
add
mov
push
inc
jne
dec
cli
leave
xlat
sub
sbb
xor
outsl
lea
lret
cli
push
jg
mov
inc
and
int
in
cmc
push
push
and
pop
or
mov
jmp
xlat
push
into
adc
in
xor
pop
enter
test
inc
mov
adc
in
ds
mov
sbb
cld
or
je
cwtl
pop
scas
loop
cmp
pushf
cmc
adc
iret
xchg
cs
loop
mov
iret
scas
test
cld
mov
jbe
cli
sub
scas
lods
dec
xchg
jns
mov
add
insl
xchg
jbe
fidivrl
pop
daa
lods
adc
inc
int
xchg
pop
mov
push
call
dec
fisubrs
std
or
out
and
sub
pop
and
dec
fmul
fists
cltd
rorb
lods
inc
cmp
mov
scas
cmp
xlat
sti
push
je
jae
sahf
aas
pop
testb
testb
cmp
jmp
lods
or
in
sub
scas
icebp
push
icebp
xor
pop
loop
cmp
sub
sub
rol
fiaddl
pop
pushf
pop
cwtl
repnz
or
fstl
xchg
lock
mov
andl
loopne
push
mov
jo
ffree
lods
je
repnz
imul
xor
cmp
cmpsb
pushf
push
xchg
jmp
add
jmp
sahf
rcll
cmp
mov
int
cltd
out
cli
mov
dec
push
fwait
mov
add
repz
decb
jb
mov
xchg
cwtl
int
fsub
mov
xchg
inc
mov
negb
das
push
pushf
outsl
cli
push
ret
test
inc
cmc
mov
or
nop
xchg
fucom
test
pushf
mov
cli
test
mov
pushf
jle
pop
or
loop
or
lahf
or
lahf
or
xchg
jle
shll
stc
fwait
push
mov
jl
sbb
push
sub
mov
stos
and
scas
push
test
outsl
shrl
mov
mov
dec
mov
movsb
jns
imul
fimuls
sub
jmp
mov
dec
adc
rcrb
sub
xchg
and
repnz
fistl
jp
adc
mov
ret
lods
mov
jle
jmp
in
add
sbb
hlt
cmp
inc
or
lods
lret
sub
or
lahf
in
mov
aad
lahf
lahf
cmp
fisttps
inc
fsubrs
jle
out
mov
sub
fdivr
adc
fmull
sub
jo
clc
or
shll
sub
and
xlat
push
fsubl
mov
fdivl
clc
push
mov
scas
jne
adc
inc
push
in
lret
pusha
adc
mov
mov
or
push
lock
inc
lock
fwait
stc
xchg
sbb
sub
cli
sbbb
or
mov
call
sbb
sbb
mov
outsl
dec
int3
ss
xchg
xchg
xchg
xchg
pop
fmul
outsb
mov
sbb
lcall
add
sbb
cmc
aaa
add
fsubl
jle
fwait
hlt
loop
popf
loope
neg
add
lret
mov
sarl
inc
movsl
pop
inc
or
cld
push
mov
mov
push
cmc
call
pop
or
lods
mov
mov
movsb
push
or
cs
fcomps
cmp
add
mov
inc
mov
pop
push
call
cmp
outsb
or
je
mov
jge
xor
nop
addr16
mov
jge
repz
cmp
mov
rorl
test
scas
jns
ja
rorb
sub
or
dec
cltd
sbb
pushf
push
xlat
pop
lods
jecxz
or
shr
enter
mov
push
push
sti
mov
jge
roll
in
mov
and
cli
jge
or
in
ljmp
outsb
add
insb
adc
in
jo
xchg
pushf
imul
in
mov
mov
add
gs
jp
mov
cs
cld
sarl
mov
adc
inc
mov
xlat
stos
sarl
into
lcall
xor
aam
jl
sub
cs
lcall
int3
and
in
and
jp
adc
push
dec
cmp
dec
loop
outsl
dec
cmpxchg
mov
test
lcall
aas
cmpl
or
or
scas
sar
jbe
inc
clc
ja
xchg
pop
es
test
add
xlat
xchg
jmp
shrl
add
push
or
or
and
mov
out
xor
in
xchg
sbb
push
or
js
xchg
jo
xor
outsl
xor
xchg
jne
cmp
push
aaa
mov
sub
test
and
jnp
mov
popa
sub
mov
and
adc
movsl
cmpsl
jg
sbb
add
add
pop
cmp
pop
out
jae
dec
mov
cmpsb
push
fucomip
xor
mov
cld
fidivrl
sub
mulb
mov
sub
imul
cmc
andl
shll
jmp
inc
xchg
dec
xor
lret
stos
ficompl
cmc
xchg
jns
cmp
fildl
cmpsb
imul
dec
fnstenv
mov
stc
push
popf
adc
outsb
cmp
aad
adc
cld
adc
es
adcl
jmp
add
sar
cltd
mov
icebp
leave
or
imul
xor
adc
dec
mov
push
or
push
test
or
pushf
inc
lcall
add
inc
pop
pop
pop
add
sbb
adc
xchg
inc
rcll
jl
xchg
add
ds
or
sub
repnz
sub
jbe
jl
jg
mov
xor
fisttpl
fdivl
pop
sbb
sbb
cmpsb
push
push
xor
push
pushf
pop
jnp
cmp
test
ljmp
data16
push
sub
inc
sti
js
push
mov
cltd
scas
sub
insb
jl
test
insb
inc
xor
cli
sbb
jno
inc
lea
sbb
add
subl
popf
pop
sub
mov
adc
or
out
mov
mov
adc
fwait
add
and
pusha
mov
xor
xor
nop
cmp
lods
cmp
fs
test
mov
movsb
push
cmpsb
cmp
jne
sub
add
add
stc
jmp
pushf
and
adc
or
scas
dec
jne
sub
pop
dec
mov
ds
lcall
call
mov
cmp
or
jg
je
rcr
sbb
xchg
adc
cmp
sub
aam
adc
inc
sbb
imul
xor
jns
loopne
xor
add
adc
dec
jmp
fldl
mov
idivb
stc
cmp
and
sub
xor
jne
mov
pop
mov
mov
cmp
setge
ss
insb
enter
cld
out
int
fidivl
mov
xchg
orl
adc
push
cltd
divl
xor
fwait
push
add
cmp
sbbb
push
push
jne
sub
fxch
mov
enter
xchg
cmp
and
push
or
enter
mov
nop
pop
cmp
sub
pushf
nop
pop
lcall
mov
push
pop
cmpsl
inc
add
dec
jg
in
lret
mov
mov
out
push
hlt
add
adc
setne
fstps
adc
psrad
lret
inc
test
mov
push
dec
lock
fwait
mov
or
inc
dec
out
jge
xchg
xor
addl
rcl
out
and
xor
imul
and
xor
pop
adc
mov
add
dec
cmpsl
add
sbb
stos
mov
mov
sbb
mov
stos
jp
push
inc
pop
dec
cmp
dec
stc
mov
adc
xor
ljmp
ja
aaa
fs
dec
xchg
push
in
xchg
in
mov
call
push
divl
sbb
mov
xchg
inc
int3
loopne
scas
push
xorb
xor
outsl
ficomps
mov
test
add
xorb
push
push
add
fstps
adc
mov
cli
add
mov
cmp
cmpsb
nop
sbbl
dec
stc
jecxz
pop
pop
mov
ret
sbb
or
push
xor
push
cmp
divb
hlt
in
inc
movsl
out
pushf
or
mov
sbb
inc
dec
mov
pop
adc
sarl
stos
lret
enter
add
lds
add
mov
cmpsb
push
pushf
aad
hlt
stos
push
es
cli
and
std
in
or
scas
fnstcw
fldl
jns
xor
idivl
fisttps
lock
pusha
ja
pop
movsl
cmp
jmp
inc
jb,pn
int3
shr
jae
inc
xchg
ja
lahf
seto
mov
or
cmpsl
and
jp
pop
xchg
iret
mov
leave
das
and
xchg
mov
out
jmp
inc
test
or
sbb
into
xchg
xor
cwtl
pusha
and
inc
pusha
scas
or
mov
jo
push
or
inc
push
fstpt
jmp
inc
inc
dec
out
lahf
pop
xchg
test
fwait
mov
pop
test
in
lods
lea
jmp
mov
inc
inc
pop
pop
dec
push
cmpsb
push
mov
mov
adc
sbb
cmp
and
jbe
xchg
jg
mov
lods
jne
mov
or
or
movsb
cltd
adc
test
sbb
jge
es
cltd
cmp
add
mov
mov
test
adc
dec
pop
and
pop
ljmp
push
loopne
mov
in
insl
mov
xchg
sahf
push
loope
xor
call
cmp
mov
mov
xchg
push
lea
pop
insb
cmp
mov
cmp
jecxz
cmp
xchg
sub
adc
popa
les
ret
or
ret
cmovo
dec
or
sub
outsb
mov
ret
inc
lea
pop
fbstp
push
push
fwait
xchg
mov
popl
pop
cli
jg
jmp
xor
sbb
mov
jl
push
fdivs
lcall
push
push
jne
dec
sub
sahf
nop
and
fdivrl
push
cli
jae
fcmovne
lods
jmp
push
enter
pop
adc
out
xor
mov
sbb
sbb
cwtl
stos
nop
jmp
cwtl
push
call
mov
loop
fwait
leave
and
pushl
test
sub
aaa
add
and
mov
mov
aaa
aas
lods
jle
jns
xchg
mov
pop
rol
mov
arpl
int3
daa
fidivl
das
hlt
into
jo
add
mov
dec
sahf
cwtl
je
cltd
lret
xchg
outsl
pushf
jmp
inc
or
jp
icebp
mov
das
clc
inc
and
push
cld
lret
sub
cld
int3
sub
fwait
mov
inc
decl
rcr
scas
mov
xchg
mov
stc
rcrl
iret
pop
mov
test
mov
xor
or
stos
sbb
dec
fadds
push
out
fwait
pop
gs
test
mov
mov
sbb
and
xor
jmp
inc
ds
fchs
or
pop
cmp
je
jl
adc
jg
xchg
push
cltd
insl
or
inc
jge
sub
mov
shl
dec
mov
mov
and
shll
ret
sbbb
daa
test
ja
xchg
pcmpeqb
in
add
xlat
mov
insb
dec
arpl
in
push
mov
pushf
push
xchg
push
add
js
push
push
mov
jo
movsb
add
lods
or
out
out
clc
xchg
adc
out
sbb
add
and
inc
or
imul
out
add
jle
or
inc
cmp
sarl
notl
mov
mov
cmp
pop
or
mov
sti
and
ds
jle
and
shrb
loopne
data16
rep
xor
pop
xor
xchg
sbb
or
ficoml
shl
sbb
xor
jmp
jmp
in
out
orb
jmp
ljmp
in
scas
in
shll
in
push
lods
inc
std
fisttps
inc
cmc
imul
push
mov
push
or
pop
cltd
xchg
push
ficompl
or
sub
stos
push
pop
cmp
pop
xor
lret
jns
and
mov
jp
cld
fucomip
add
es
sub
sbb
divl
lea
sar
mov
fistl
cmp
cmp
lods
sub
xchg
push
lods
jp
add
insb
jl
sub
push
or
repnz
push
scas
xor
jmp
push
jmp
mov
mov
leave
mov
and
das
mov
sbb
xlat
xorb
push
lahf
xor
adc
mov
js
rorl
pop
dec
jmp
xor
cmp
adc
mov
add
shll
xor
push
inc
repz
fisubl
mov
and
jbe
je
fimull
cld
and
or
jmp
mov
jae
mov
in
ss
jns
sbb
jne
add
add
add
mov
jne
lock
movsl
ljmp
mov
and
sub
std
rcrb
movsb
push
xchg
inc
inc
rcr
inc
xor
sbb
sub
adc
imul
shr
pop
je
or
test
add
aaa
mov
pop
and
mov
mov
add
out
fimull
add
cmp
push
add
loope
pop
into
adc
negb
shlb
xchg
loope
ja
inc
es
imul
jp
xchg
cltd
shrb
cmp
and
cld
pop
cmpsb
les
cmp
cld
mov
mov
xchg
mov
scas
xchg
por
inc
cmp
daa
jo
ss
fsts
push
inc
enter
enter
ret
arpl
push
cli
sbb
imul
lcall
lods
dec
mov
std
mov
imul
int3
dec
movsl
or
lahf
test
cmp
sbb
test
cld
push
pop
xchg
popf
mov
imul
push
xchg
push
mov
pop
clc
rorb
push
arpl
mov
cmp
push
pop
xchg
jg
push
ja
sahf
jg
lock
mov
push
jbe
rclb
cld
and
push
sbb
add
and
mov
mov
pushf
movsl
mov
stc
imul
cmpb
jp
mov
stc
lahf
pop
add
movsb
sub
outsb
stc
cmp
sub
sub
push
mov
ljmp
inc
add
mov
fs
inc
popa
shll
inc
std
rclb
cmp
shll
into
jae
bound
dec
inc
mov
sub
push
push
stos
inc
xchg
int
lock
shlb
loop
add
sbb
arpl
fdivl
je
cmp
sbb
pop
jo
ljmp
push
test
cmp
adc
or
in
fucomp
test
hlt
push
xchg
test
dec
adc
ds
adc
pop
push
dec
shlb
imul
data16
add
dec
mov
push
in
mov
imul
int
push
mov
and
fwait
or
jne
jmp
push
and
cmc
ret
stos
sbb
cwtl
xchg
sbb
rcrl
pop
insb
push
addr16
add
mov
cltd
xlat
mov
fdivrs
pop
push
sub
fsubrl
push
mov
sub
inc
test
sub
jne
mov
aaa
pop
mov
cwtl
in
push
mov
or
sbb
or
pop
dec
popl
add
push
xor
enter
mov
cld
inc
shll
inc
pop
jns
cmp
jnp
cmp
dec
imul
dec
mov
jb
jne
pop
push
adc
out
test
mov
cmp
xchg
imul
push
inc
sbb
jmp
pop
push
mov
in
iret
mov
dec
dec
aas
xor
ss
in
inc
pop
repz
bound
mov
or
lcall
mov
push
add
rolb
insb
push
lcall
cmc
push
mov
push
jo
in
mov
call
cmp
in
shl
js
and
mov
movsl
call
sbb
nop
mov
les
sub
push
xor
add
popa
sub
xor
in
arpl
or
jge
sub
iret
js
and
push
mov
jae
lea
sub
cmpsb
sub
jne
cmp
ljmp
dec
dec
fld1
lods
lret
addr16
sub
jl
add
lret
push
pop
lock
xor
cli
sbb
inc
je
inc
test
add
add
loopne
adc
nop
adc
jle
ja
movsb
insl
inc
add
jmp
adc
adc
aam
sub
xchg
std
imul
sub
aam
pop
inc
mov
inc
xchg
jo
jp
xchg
add
out
add
adc
repz
rcr
sub
out
or
xchg
repnz
insb
adc
or
insb
add
pop
lds
icebp
push
addr16
testl
push
pop
sbbl
xchg
sub
aas
push
add
sub
mov
orl
push
or
inc
add
lock
mov
jmp
bound
cli
adc
je
lods
or
inc
std
pop
fdiv
cli
movsb
and
data16
sub
and
shlb
xchg
or
fsts
push
push
in
leave
fst
jle
cmp
xchg
cwtl
sub
mov
fbstp
push
call
pop
dec
adc
popa
ret
cmp
cli
dec
adc
push
int3
cwtl
ficomps
push
jmp
xchg
icebp
push
lods
insl
inc
fbstp
xor
call
scas
sbb
xor
jmp
ljmp
or
dec
mov
pop
cltd
loopne
fisttpl
mov
inc
call
adc
dec
rclb
sbb
pop
dec
xor
add
push
inc
fcoml
xchg
pop
mov
mov
lock
shrl
test
sub
push
fsubl
aas
scas
call
lahf
arpl
pop
add
int
jno
neg
xchg
mov
and
mov
jae
add
stos
ret
adc
out
jp
rcll
jle
out
dec
fsubrs
mov
mov
das
rorl
je
mov
dec
in
cmp
gs
dec
cwtl
clc
cmp
xor
cmp
dec
inc
movl
xchg
cwtl
lock
add
rclb
das
ret
xor
sbb
dec
lods
dec
int3
jne
pop
icebp
push
into
dec
ret
or
cmpl
mov
aas
xor
mov
push
ds
push
and
mov
aas
idiv
lret
aam
pop
sub
pop
mov
xchg
pop
and
rcrb
dec
push
push
rorb
ja
inc
cmpsb
daa
call
pop
insb
mov
lds
cltd
push
mov
cmpsl
sahf
inc
mov
call
imul
sahf
loop
sbbb
push
das
ljmp
or
aaa
mov
inc
mov
into
inc
out
enter
push
fsubr
lahf
lret
sub
mov
call
jecxz
dec
pop
stc
in
sbb
lea
dec
cmp
fwait
jne
daa
adc
adc
push
aad
lret
stc
adc
imul
mov
adc
mov
idiv
nop
hlt
push
push
push
lock
xchg
notl
adc
push
push
test
dec
push
sti
xchg
cld
int3
loop
ja
adc
or
add
imul
cld
mov
outsb
into
and
cmp
mov
into
adc
xor
mov
mov
stos
call
add
fs
dec
lds
mov
add
sub
rep
mov
pop
xchg
mov
and
test
xor
mov
mov
test
and
dec
pop
dec
cmp
jbe
mov
stos
enter
test
fistpll
dec
xchg
lret
out
mov
xchg
addl
pop
dec
imul
shrl
push
lods
or
dec
push
ds
mov
xorl
fildll
mov
lods
cmp
les
cmp
mov
andb
push
int3
push
push
and
mov
inc
mov
outsb
add
aas
roll
xchg
cmp
loopne
adc
fld
popa
mov
adc
push
ljmp
and
idivl
call
mov
push
pop
je
dec
filds
mov
lea
add
cmp
call
mov
push
fwait
ss
shrb
out
fisttpl
roll
repz
aas
push
add
pop
cmp
inc
mov
cmp
mov
inc
out
call
add
bound
jl
xchg
cmp
push
enter
loopne
inc
decb
cmp
cld
mov
jmp
xchg
in
dec
add
sbb
push
xor
dec
and
and
jge
ret
in
xchg
mov
es
lods
fsubr
inc
jb
push
dec
push
cmp
call
fwait
loopne
mov
divb
dec
add
ficompl
or
mov
call
adc
pop
daa
push
push
inc
push
or
out
mov
add
add
inc
add
stos
fwait
or
dec
lock
out
addr16
pop
call
mov
pusha
lods
mov
setae
inc
inc
sub
dec
sbb
leave
pushf
sub
aaa
adc
aam
mov
sub
sbb
in
cli
xchg
call
mov
dec
push
and
add
lcall
cmp
test
dec
hlt
out
lea
add
ljmp
cli
ljmp
mov
xchg
mov
inc
loopne
or
pop
test
dec
jle
imul
sahf
push
cmc
test
icebp
sbb
pop
fldcw
adc
pop
inc
fdivp
jp
ds
jne
popa
pusha
out
add
jmp
rorb
xchg
lods
mov
mov
adc
dec
ret
push
mov
jmp
les
shr
cltd
pop
inc
rcrl
imul
and
jg
mov
ljmp
or
lea
add
pop
add
mov
lods
ret
mov
mov
aas
cmc
jne
mov
int3
pop
scas
test
or
ret
notl
pushf
mov
xor
xor
movsb
in
push
add
mov
daa
imulb
je
lahf
add
lock
scas
push
sahf
in
mov
in
push
sub
test
mov
push
sbb
sub
add
xor
or
fistps
popf
or
pop
xchg
es
stc
sbb
jg
xorl
and
xchg
or
or
arpl
jbe
fs
cmp
or
xor
pop
nop
out
add
stos
iret
jnp
aam
cltd
cmp
cwtl
repnz
mov
inc
sub
inc
mov
mov
lock
lcall
lret
icebp
inc
pop
das
sub
cmp
cmp
divl
mov
imul
xlat
and
adc
test
loopne
push
sti
stc
push
sti
lcall
dec
mov
add
sub
cmp
push
pop
inc
sti
imul
out
sub
idiv
lret
pushf
cltd
fs
sbb
mov
popf
mov
xor
cltd
push
jnp
lcall
pop
lods
cmp
and
mov
popl
xor
push
pop
dec
test
mov
pop
call
or
daa
push
call
std
cmc
or
outsl
sbb
xchg
pop
popf
dec
or
pop
push
jae
aad
sbb
mov
ror
loopne
cmp
cmp
cmpsl
pushf
and
push
inc
xor
lcall
gs
dec
and
mov
lret
lds
mov
sub
out
lret
fcompl
mov
pop
adc
int3
adc
xchg
adc
xor
push
lds
sahf
xor
fcmovu
call
cmp
pop
je
cmc
or
cld
call
jno
call
sbb
clc
add
sub
call
add
cmp
stos
pushf
fsubrl
inc
negb
popa
fwait
addr16
xchg
sbb
mov
lods
mov
cmp
aam
outsl
push
fadds
cwtl
jge
inc
mov
je
push
insb
fld
repnz
mov
jecxz
imul
inc
pushf
push
or
rorb
push
mov
push
sub
inc
imul
incl
add
xchg
fs
jmp
pop
fwait
popa
pop
loope
adc
cmp
cwtl
xchg
fsts
cmp
cld
and
in
test
inc
les
mov
mov
cmpsb
mov
xchg
test
push
lahf
in
lods
push
lret
stc
xchg
out
xchg
add
dec
outsb
clc
and
arpl
mov
or
in
les
test
add
push
add
in
sti
add
movsl
xchg
push
cmp
sub
cmp
inc
mov
aas
or
movsb
mov
add
pop
lock
cmpsb
mov
push
mov
movsb
daa
jp
fcmovbe
loopne
cmp
test
sbb
loope
mov
prefetch
or
jp
ds
aam
push
cmpsb
adc
push
xor
sarl
les
aam
pop
insb
mul
inc
xlat
sub
add
jge
daa
pop
shrl
push
shl
inc
xchg
addr16
cmp
or
test
pop
pop
les
jbe
dec
shrl
push
inc
outsl
fimuls
stos
popf
clc
push
les
add
fldcw
mov
popa
jns
push
adc
xchg
insl
sbb
and
aaa
jne
daa
mov
mov
in
adc
pushf
cmp
out
or
cld
mov
xor
sbb
xchg
inc
push
jg
xor
aam
scas
adc
pop
ss
js
aas
test
sti
fsts
scas
inc
push
popf
loopne
sbb
outsl
cli
sbb
stos
pop
mov
xchg
fdivrs
outsb
mov
mov
sbb
in
sbb
icebp
jl
shrb
xor
lds
sahf
lahf
pop
test
or
leave
adc
in
adc
sub
dec
test
insb
inc
aaa
cmp
dec
sub
les
aad
push
imul
lcall
xlat
push
add
add
int3
xor
shl
sub
neg
mov
mov
cwtl
or
xchg
in
jl
ljmp
inc
in
das
ljmp
cmc
ljmp
adc
stos
xor
inc
test
cld
adc
lds
dec
ljmp
in
rcrb
add
or
mov
data16
or
das
cld
pop
out
inc
xor
cmp
add
xchg
aam
dec
mov
popf
out
pushf
pop
popf
dec
insl
je
arpl
pop
cmp
pop
test
and
scas
and
sub
orb
xor
scas
inc
push
rorl
and
mov
sub
pop
imul
stos
and
sub
icebp
push
rorl
lret
adc
fldcw
adc
bound
in
je
adc
inc
stos
fwait
xor
das
or
cwtl
cli
or
pushf
loopne
cwtl
in
data16
pop
push
pusha
cli
pop
or
cs
cld
adc
fistl
jp
lcall
mov
xchg
sub
rcll
pop
xor
js
pand
sub
dec
add
call
out
xor
js
dec
test
test
add
inc
loop
sti
cltd
aaa
loop
orl
cmpsl
xor
dec
pop
xlat
add
test
or
sub
test
cmp
xchg
ljmp
dec
hlt
xor
dec
jecxz
jbe
ja
and
jno
sar
ljmp
ja
cmc
movsb
loopne
arpl
cmc
adc
test
adc
dec
lock
lea
mov
or
pushf
xor
mov
mov
icebp
in
dec
pushf
push
call
mov
clc
stc
mov
enter
movsb
mov
stc
add
dec
jae
pop
mov
and
cmpsb
cli
cwtl
xchg
and
sub
and
xor
mov
lea
loopne
sarl
or
call
sub
dec
rol
mov
fdivl
ret
pop
imul
ljmp
imul
das
mov
leave
ja
std
es
add
ljmp
ds
push
dec
jne
xor
ja
aad
xchg
pushf
push
jmp
sbb
jno
and
stos
clc
add
xor
idivl
push
call
sub
fstpt
push
push
js
ljmp
lea
out
inc
iret
jne
insb
loope
sahf
or
pop
ret
and
pop
add
dec
adc
push
xorb
mulb
mov
add
jp
loopne
cmc
mov
pusha
ret
imul
cld
mov
and
adc
mov
mov
or
add
ss
mov
outsb
sub
pop
add
into
xor
aas
push
stc
scas
mov
stc
ds
jmp
and
cld
out
sub
push
aaa
and
dec
fcompl
jb
pop
push
ror
repnz
xchg
add
cmc
stc
int
jmp
jecxz
jbe
sbb
or
inc
mov
jne
mov
or
ljmp
cmp
out
fisubrl
push
or
insb
add
mov
sub
lcall
stos
push
add
xchg
jmp
cld
rorb
push
xchg
dec
push
sbb
subl
sbb
imul
cmp
mov
xchg
mov
fcoml
sar
sbb
sbb
push
loope
aam
mov
ret
int3
out
xor
mov
sbbb
inc
mov
std
cmp
test
cmp
dec
adc
inc
loope
mov
mov
mov
xchg
mov
negb
out
adc
pop
aam
pushf
pop
je
loop
fs
andl
mov
fwait
jo
xchg
mov
and
pop
and
xchg
out
mov
pop
daa
fnstsw
jecxz
fiaddl
xor
pop
dec
andb
js
jecxz
dec
nop
mov
mov
or
push
ljmp
ficoms
mov
adc
std
sub
adc
adc
sbb
sbb
push
xor
cmp
jecxz
adc
lahf
adc
xchg
pop
mov
int
add
sti
into
cltd
mov
fsubs
or
fwait
cmp
mov
je
lea
iret
sahf
test
ljmp
mov
je
aas
daa
jmp
jo
push
call
fwait
cld
in
in
mov
pop
cmp
call
jns
push
push
aas
inc
test
call
xor
mov
push
andb
mov
mov
testl
push
pushw
xor
or
adc
shrb
ja
mov
nop
xor
pop
or
cmpsb
sub
xchg
je
dec
or
call
xor
stos
fists
test
inc
xor
adc
adc
push
test
cld
call
cli
adc
pop
test
je
sub
testb
test
aam
ja
enter
aaa
mov
ret
fists
adc
push
cmp
into
sub
incb
pop
xchg
mov
mov
sahf
scas
js
mov
jne
jmp
daa
xchg
and
xchg
test
and
enter
jne
divl
cli
nop
push
xchg
fldenv
lods
into
push
fcoms
aam
clc
fdivl
adc
sbb
rcll
xchg
mov
nop
xor
popf
fwait
pop
out
les
push
xchg
cld
mov
xor
add
je
jmp
repnz
mov
push
bound
cmp
and
xlat
dec
jmp
sub
dec
mov
pop
das
dec
sub
push
pop
inc
insl
hlt
adc
mov
and
jmp
loop
aaa
jno
cmpsb
ljmp
pop
add
aaa
lods
pop
or
or
stos
xchg
mov
mov
jmp
adc
ja
scas
fstl
xor
and
aad
leave
pop
imul
sub
xchg
mov
or
movsb
push
jge
shl
inc
aam
in
in
sub
sub
dec
mull
push
jge
das
pop
faddl
fimuls
call
aaa
and
inc
pop
jmp
and
add
sub
jae
xor
call
cmp
int
sti
cmp
push
jg
or
movl
push
push
or
push
xchg
jge
jl
lea
add
push
nop
lods
scas
inc
adc
mov
pop
add
ret
push
add
xlat
pop
imul
lods
xor
or
xchg
push
mov
xchg
std
stc
push
stos
mov
cld
xchg
push
sarl
sbb
add
iret
push
jne
pop
pop
mov
add
pop
push
add
out
dec
rcrl
fwait
push
and
inc
pop
xchg
dec
mov
mov
xchg
push
xor
outsb
sbb
dec
jg
fisubrl
pop
mov
push
pop
rcll
sbb
sbb
aad
jne
adc
repnz
adc
popf
dec
cmp
imul
repz
push
out
ljmpw
push
rcrl
popa
scas
xor
mov
cmc
xor
out
mov
fisubs
test
adc
pop
incb
push
xor
mov
pop
loope
iret
jge
dec
cmp
cwtl
adc
sub
lock
das
sub
aam
sub
mov
call
dec
sub
cmovo
loope
dec
cmp
sbb
push
cmpb
or
mov
push
lds
scas
mov
pop
and
dec
call
jge
mov
sub
sbb
jge
xchg
adc
mov
mov
sbb
lock
jecxz
call
cli
add
pop
notb
aad
incl
inc
jne
sub
addr16
hlt
push
sbb
xorb
inc
mov
sbb
xchg
cmp
dec
icebp
xlat
inc
xchg
pop
mov
jne
mov
dec
outsb
push
adc
dec
or
jnp
repnz
and
enter
test
je
inc
callw
repnz
or
inc
push
jnp
jne
jbe
pop
pop
and
mov
pusha
jle
adc
loopne
push
iret
add
negl
call
pusha
or
ror
scas
movsl
or
push
addr16
lods
adc
jle
and
into
and
xor
fwait
dec
add
fldt
fwait
je
pop
fnstsw
xchg
push
std
les
outsb
push
jp
xor
mov
and
inc
and
lds
sbb
push
shl
fsubrl
adc
lods
test
sarl
dec
cmpsb
test
scas
cmp
pop
xor
adc
push
scas
xchg
push
jg
mov
cmp
shlb
inc
je
test
cmp
lahf
or
js
sub
pusha
add
movl
out
sbb
jle
and
mov
pop
out
add
cmp
mov
lahf
and
out
icebp
pop
movsb
mov
mov
in
popa
pmaddwd
insb
cmc
jle
outsb
cmp
push
daa
fwait
pop
pop
push
jb
cmp
or
push
std
inc
popf
cs
jbe
ret
scas
jnp
stc
push
popf
xlat
cli
inc
int3
inc
mov
ljmp
inc
outsl
inc
mov
or
fwait
outsl
inc
sbb
mov
inc
xchg
lret
dec
xchg
jbe
enter
push
aaa
inc
adc
xchg
pop
pop
adc
fidivl
out
dec
insl
sbb
cld
popf
dec
push
sbb
sub
cmp
inc
insb
pop
dec
ret
and
lea
push
out
mov
push
call
mov
pop
je
sbb
lret
or
adc
xor
sub
jo
cmp
in
add
pop
hlt
outsb
cmp
jg
ljmp
popa
mov
ljmp
push
test
jns
mov
int3
sbb
insb
jle
inc
push
cmc
or
xor
movsb
call
xor
dec
inc
hlt
repz
movsb
pop
add
aad
mov
or
sub
xchg
mov
dec
aaa
xchg
imul
sysenter
lcall
jmp
test
pop
mov
or
fdivs
out
sub
call
add
ljmp
fisubrs
xchg
imul
inc
add
add
jmp
push
inc
sbb
std
jno
lahf
xlat
out
mov
aam
daa
lcall
testb
ja
mov
jle
push
mov
lcall
lds
inc
ja
dec
pusha
mov
sub
nop
movsb
adc
inc
sbb
scas
add
out
dec
jmp
loop
dec
sub
push
lcall
call
and
stc
mov
testb
ljmp
inc
adc
cltd
test
fldl
fimull
jecxz
cltd
mov
call
xor
test
mov
push
fcoml
xchg
jmp
movsl
lock
push
cli
mov
testl
sub
mov
xchg
xchg
xor
adc
mov
testb
mov
testl
adc
xor
les
es
cld
daa
jecxz
test
test
sarb
ljmp
and
sbb
cmp
into
pop
lea
ret
lods
test
cmp
nop
je
sbb
repnz
cld
ret
rorl
lea
lcall
lret
mov
or
outsl
add
jb
aam
je
pop
xchg
or
ficompl
leave
dec
in
sub
cmpsl
inc
cmp
and
pop
sbb
ret
xor
call
arpl
stc
sahf
and
test
shll
and
push
push
sub
sbb
cmp
test
jnp
push
scas
lret
call
mov
push
int3
dec
test
mov
call
cmpsb
loop
or
dec
push
sub
mov
dec
enter
adc
xchg
mov
mov
lods
sub
outsl
test
cmp
mov
repnz
lea
sub
stc
lcall
cmp
cld
mov
xchg
fdivs
sti
pop
mov
call
mov
sub
scas
hlt
dec
inc
in
lret
popf
scas
and
dec
mov
in
sub
add
sti
pop
add
xor
je
pop
pop
loope
fwait
loopne
test
jne
sub
dec
add
and
lods
lret
aaa
aaa
ret
lret
push
aas
sub
sbb
cmp
add
test
add
jae
cli
lock
dec
ja
mov
ljmp
push
sub
lds
fnsave
imul
adc
je
push
clc
push
outsl
mov
stos
push
xor
adcl
repnz
fildll
cli
adc
stos
xchg
fyl2x
sub
xchg
sub
pop
loop
sub
ja
or
add
sbb
scas
int
or
scas
imull
clc
in
pop
inc
imul
push
test
loopne
or
out
jne
call
ljmp
jb
sti
testb
jo
inc
pop
adc
ret
jnp
mov
and
int3
insl
xor
adc
or
out
test
shrb
mov
sbb
xor
clc
je
dec
xlat
in
test
jne
pushf
cmc
and
lds
jno
and
insl
stos
dec
jne
or
push
or
xor
and
push
cwtl
movsl
xchg
pop
std
sub
sbb
imul
adc
xchg
in
adcl
sbb
cmc
inc
inc
rep
mov
adc
orb
push
xchg
mov
push
push
adc
inc
jbe
inc
adc
ret
xor
test
xor
ljmp
pop
dec
sub
sbb
loope
xor
lea
into
xor
push
jmp
xchg
cmp
aam
jecxz
push
fcmovu
call
mov
fadd
mov
in
pop
pop
out
rolb
adc
add
ja
inc
out
xorb
rcll
or
out
dec
fwait
out
mov
das
dec
sbb
mov
aad
xchg
cmp
dec
sub
or
pop
cmp
std
pop
cmc
jp
sub
xorps
xchg
aad
call
clc
jae
or
jmp
addr16
movsl
dec
scas
add
sbbl
jns
mov
sub
push
push
push
addr16
sub
lea
lock
xor
mov
jnp
lods
jg
jle
sub
nop
std
adcb
pushf
sbb
std
dec
mov
outsl
inc
add
cmp
in
rcll
fwait
fwait
xchg
lcall
in
aas
mov
and
inc
xchg
and
aad
shrl
stos
shrl
sub
push
lea
jge
add
mov
icebp
push
stos
rorb
loop
dec
and
sub
cli
or
outsb
cmp
inc
or
in
mov
cmp
pop
mov
aas
mov
iret
call
sub
jge
cs
jg
mov
pop
pop
mov
sbb
or
loopne
divl
mov
mov
rep
mov
pop
pop
jnp
movsl
repnz
xor
pushf
add
mov
hlt
jl
daa
adc
mov
push
mov
add
insb
mov
fcomip
das
fdivrl
sub
and
mov
cmpsb
out
sub
test
cmpsb
adc
cmc
ljmp
cltd
cmc
xor
sub
in
lock
sub
or
jbe
fcomip
push
sbb
stos
inc
cwtl
xor
popf
in
dec
ret
jne
jne
xchg
inc
aad
jl
pop
cld
mov
insl
fcoml
push
adc
dec
loop
sarl
in
dec
and
pusha
cmpsl
sub
out
xchg
jecxz
jle
xor
out
mov
ss
test
push
jae
cli
repnz
pop
ja
or
xor
add
sub
and
xorb
sub
iret
cltd
int3
outsl
ss
jmp
jl
scas
sub
fidivs
out
push
mov
cmp
outsl
sub
clc
xlat
js
ja
adc
adc
cwtl
fld
pop
xor
push
jl
das
push
mov
mov
movsl
shll
xlat
clc
rorl
mov
jp
ret
xchg
mov
sub
dec
and
add
out
aaa
push
lods
cmpsl
ret
mov
xor
mov
push
hlt
sbb
clc
out
outsl
cmp
push
inc
test
push
sub
sti
sbb
mov
jp
js
pop
mov
jne
jmp
sub
dec
jle
push
xor
jmp
fnop
pop
aaa
nop
jle
fisubrs
fadds
adc
call
sub
dec
cld
enter
fcomip
bound
dec
sub
mov
icebp
push
adc
dec
xchg
iret
or
movb
xchg
scas
in
orb
adc
les
aam
cmpsb
in
pop
pop
pop
pop
ljmp
lret
movsb
out
std
xor
or
out
sbb
push
sub
cmpl
xchg
push
adc
sti
sbb
outsb
cmp
fwait
jae
fisttps
or
push
mov
sub
lcall
push
arpl
sbb
test
jne
or
rolb
add
clc
stos
mov
sub
shrb
and
nop
and
xor
ss
xor
jo
outsl
fwait
bound
inc
cmp
jb
ja
or
cmpsb
jbe
mov
push
or
lods
adc
push
mov
sub
pop
and
rolb
cmp
jmp
arpl
xchg
outsb
xor
cmp
insl
in
std
es
pop
movd
inc
adc
push
sbb
add
push
inc
mov
cmp
adc
dec
sub
mov
inc
push
push
cmp
clc
repz
or
add
inc
int3
jbe
daa
aaa
mov
mov
iret
fbld
cmpsl
jbe
je
adc
cmpsl
inc
and
outsb
das
scas
mov
mov
adc
cmp
mov
push
xchg
cmp
or
sbb
and
lods
add
lcall
add
test
or
inc
fwait
jo
popf
int
pop
inc
into
or
cli
jmp
or
push
mov
xchg
inc
cmc
cmp
ja
ljmp
cmp
int
fdivrp
xchg
adc
loop
pop
cmp
inc
inc
data16
dec
enter
mov
pop
mov
outsb
out
or
or
mov
nop
mov
sbb
lret
dec
mov
dec
mov
xchg
cli
fbstp
aas
int3
mov
insb
insl
pop
add
sub
in
mov
sbb
loope
cmpb
add
imul
jnp
cwtl
mov
inc
and
xchg
lcall
scas
add
lock
into
testb
mov
shrb
lret
int
hlt
dec
mov
repnz
call
sahf
cmp
sub
sbb
leave
xchg
aaa
xchg
dec
dec
sub
xchg
jmp
mov
push
xchg
sub
inc
sbb
mov
jbe
pop
inc
mov
cmp
push
in
xchg
mov
dec
sarl
cld
popf
jno
and
mov
mov
dec
pop
arpl
mov
enter
aas
cmp
pop
testb
test
or
and
jl,pn
cmp
in
test
inc
fldenv
data16
and
out
push
mov
inc
or
xlat
pop
dec
aaa
sub
and
or
mov
adc
push
fidivrl
subb
add
pop
lcall
inc
std
pop
pushf
and
ljmp
testb
cmp
adc
cltd
out
insl
mov
clc
jmp
xchg
pusha
mov
call
aam
push
mov
arpl
cmp
adc
adc
pop
sbb
push
sub
fdivrl
test
scas
mov
push
sub
and
decb
adc
cmp
or
lock
mov
mov
pop
decl
pop
mov
sub
fistpll
cs
adc
pushf
in
cmp
jne
inc
dec
inc
cmc
mov
add
sub
in
jl
das
pop
adc
push
sub
popa
xchg
call
pushf
scas
add
call
ljmp
push
pop
and
sbb
jne
or
lods
push
pusha
popa
inc
sti
push
pop
push
sub
popa
ss
das
xchg
and
divl
leave
inc
pop
cmp
cmp
cmp
test
jmp
fs
enter
ficompl
xchg
sbb
cmp
and
std
fidivrl
aas
cmp
mov
xor
add
outsb
pop
xor
dec
repnz
jg
mov
mov
cltd
jge
shlb
mov
mov
cmp
pop
subl
cmp
adc
cmp
lds
lods
outsb
push
sbb
mov
jle
add
push
inc
inc
roll
shr
out
std
aaa
shll
test
sub
es
ret
xor
test
adc
in
or
jne
adc
inc
ficomps
and
sub
or
mov
sub
out
mov
vmaxsd
cli
mov
sbb
scas
loope
and
aam
lods
popf
ret
cmp
jb
inc
sar
popa
push
add
ss
outsb
jo
push
pop
je
xchg
aad
mov
test
inc
cltd
into
lret
pop
in
mull
movsl
sbbb
shl
sub
test
fsubrs
sbb
scas
dec
inc
clc
addr16
cmc
inc
out
shr
shr
loopne
mov
cmp
xchg
adc
enter
ret
in
mov
stos
pushf
mov
sub
loopne
scas
js
inc
test
push
xchg
aam
and
fistpll
je
jmp
mov
jo
leave
push
mov
xchg
loopne
jmp
xor
xchg
fidivs
push
aam
jmp
popf
lds
and
mov
jbe
inc
adc
and
stos
sbb
and
jl
aaa
icebp
pop
mov
or
mov
subb
shrb
neg
loope
mov
xor
sbb
std
pop
dec
sub
clc
and
cmc
out
xor
xor
dec
adc
dec
push
lcall
shll
inc
xorb
xchg
pop
mov
push
jne
lret
sbb
and
out
sub
cmp
mov
xchg
inc
lret
mov
xorb
or
loopne
jg
imul
add
popf
xlat
bnd
test
jbe
testb
es
pop
pop
pop
ret
insb
mov
outsl
sub
shr
xor
push
push
cmp
add
icebp
sub
inc
jmp
push
pusha
mov
call
ds
xor
fistl
sbb
add
add
xchg
xor
pushf
fucomp
adc
in
inc
cmc
ja
inc
shlb
out
orl
dec
in
push
dec
jp
lods
inc
insb
and
cmpsb
or
cmp
or
sbb
inc
dec
cltd
imul
mov
push
push
repz
mov
repnz
int3
clc
movsb
cs
scas
push
xor
test
jbe
push
push
lock
push
sarl
cmp
inc
dec
sub
sub
lea
dec
shlb
push
into
aad
sbb
dec
ret
insb
ja
pop
xlat
inc
lretw
sbb
mov
cmp
xor
outsb
js,pn
sbb
int
adc
xchg
sahf
adc
lcall
push
or
insl
mov
aad
enter
pop
cmp
add
sbb
jbe
sarl
rcll
jnp
or
add
out
xorb
inc
add
sub
insl
in
imul
dec
outsb
icebp
add
shlb
scas
fidivs
sub
call
rolb
mov
and
pop
inc
dec
inc
gs
repz
int
push
fstps
lcall
fsubs
jg
ljmp
sbb
inc
stos
cli
mov
sbb
das
and
and
gs
and
jmp
mov
push
sbb
and
xchg
sbb
lcall
sbb
xchg
dec
dec
pop
lock
xor
in
fcmovu
cmp
or
out
bound
push
ret
inc
adc
fdivr
out
add
in
roll
sti
decl
cmpsb
add
and
cli
adc
fcoms
ret
xchg
daa
xor
push
push
lcall
pop
mov
lods
nop
xchg
add
jmp
in
andb
or
test
ss
inc
das
mov
pop
lahf
push
jnp
push
pop
or
movsb
bound
inc
in
or
jo
in
mov
pop
dec
inc
sarl
jmp
rcll
sahf
cs
add
daa
cmp
pop
lret
repz
repz
mov
lea
xor
fcompl
pop
pusha
nop
dec
mov
mov
push
and
jb
and
jp
inc
jg
push
rclb
scas
fiaddl
pusha
mov
shlb
inc
test
test
add
fldl
pop
out
dec
clc
jmp
add
mov
xlat
loop
dec
je
inc
stc
push
mov
lret
cmp
aaa
and
fs
or
cmpb
jnp
clc
mov
jne
imull
push
ljmp
mov
push
mov
subb
pop
subb
clc
loope
add
cmc
test
sbb
ja
adc
hlt
pusha
shr
jmp
and
shl
aas
xor
lcall
xchg
hlt
pop
jb
pop
out
dec
fldt
in
jb
subl
xor
mov
push
adc
dec
push
iret
sub
jl
dec
sub
xor
popf
movb
jmp
add
aam
loopne
xchg
push
jmp
mov
sbb
shlb
xchg
jle
push
inc
xchg
jmp
dec
clc
xchg
test
popa
pop
pusha
push
into
add
cmp
xchg
int
lock
mov
insl
mov
sbb
add
jecxz
ret
push
mov
inc
je
call
inc
in
dec
sahf
pusha
or
sbb
push
sbb
test
jbe
pop
jmp
jl
out
ror
sub
cmp
jle
cmp
xchg
jne
popf
testb
lret
mov
mov
stos
cmp
dec
jle
neg
jmp
mov
js
or
mov
sub
shll
sti
test
adc
jle
jmp
lret
cld
lock
pusha
or
repz
sbb
jmp
sti
xor
mov
sub
mov
sub
dec
and
enter
or
xchg
cwtl
inc
out
loopne
adc
sub
popa
ja
jmp
xor
call
sbb
stos
jbe
lcall
push
inc
xor
xchg
and
xchg
or
lods
sbb
pop
stos
xchg
das
mov
aaa
je
mov
jb
xchg
es
mov
inc
testl
movsb
lcall
xchg
adc
add
and
lahf
or
adc
dec
push
call
int3
jmp
push
xchg
sub
sbb
in
bound
adc
in
je
inc
notl
push
xlat
shr
lock
push
pop
sbb
es
dec
sbb
test
mov
sbb
addr16
das
repnz
leave
cltd
fsubrl
mov
enter
lahf
and
add
push
add
std
mov
jae
push
inc
mov
sub
sbb
clc
add
shll
test
lcall
mov
mov
jmp
inc
in
cmp
outsl
test
sbb
subl
sbb
nop
js
call
jmp
xchg
inc
in
test
push
rcrl
orb
sahf
sub
call
and
into
inc
cmc
mov
adc
mov
repz
sub
mov
xor
lcall
loope
adc
ss
mov
xor
cmp
or
or
add
add
mov
mov
jo
stos
xchg
cmp
pushf
mov
cli
bound
sub
and
and
sarb
inc
push
ret
ja
pop
lds
sbb
cmpb
jbe
mov
dec
ja
ds
xchg
js
cmp
mov
in
cmp
mov
inc
call
popf
sbb
scas
stos
jmp
not
sub
mov
mov
cmpsl
mov
cli
adc
and
pop
inc
aaa
xor
dec
mov
mov
lea
cmp
cmp
xchg
cmp
fisttpl
and
adc
inc
leave
pop
adc
add
sahf
pop
icebp
cmp
sar
sub
mov
add
push
call
inc
inc
push
xor
enter
inc
push
or
fsub
mov
cli
add
ds
call
lcall
jnp
call
inc
mov
jp
ja
mov
cli
loopne
lock
testb
std
xchg
ljmp
jl
cmpsb
mov
jno
mov
lods
lahf
sub
sub
pop
inc
cmc
add
sub
fwait
jl
push
aas
decb
add
cmp
or
dec
dec
ret
fcmovbe
add
pushf
lea
lods
out
lods
icebp
scas
cld
jb
mov
orl
shll
xlat
push
cmp
jmp
js
sahf
lret
xlat
jbe
cli
aad
xchg
cmpsl
cld
or
test
cld
mov
scas
mov
shlb
jns
inc
mov
call
cli
sbb
mov
jg
and
insb
nop
test
pop
or
mov
add
lods
xor
mov
fisubrl
lcall
xchg
sub
sarb
mov
das
je
sbb
inc
mov
scas
lahf
ret
mov
pop
shl
pusha
inc
sbb
cmp
cmc
add
adc
jbe
inc
lret
cltd
sbb
dec
das
fsubrl
bound
stc
xchg
fidivrl
inc
movsb
sub
jecxz
jbe
sub
lret
jecxz
or
pop
mov
sub
adc
or
outsl
mov
lods
adc
repnz
pop
insl
pop
inc
mov
and
xchg
sub
loope
hlt
inc
jbe
cmp
dec
outsb
test
xor
inc
pop
insl
ljmp
mov
das
pushf
jmp
jge
mov
dec
mov
pop
fiaddl
dec
lcall
mov
cmp
cmp
adc
sti
and
pop
jmp
pop
push
lock
mov
push
xor
push
jno
pop
add
push
je
cmp
dec
mov
pop
mov
xor
mov
mov
xor
sbb
nop
shrl
mov
inc
movsb
mov
mov
das
aad
clc
mov
ds
mov
pop
mov
cmpsb
lea
sbb
scas
sbb
xor
lods
mov
xchg
mov
mov
cmpsb
or
das
pop
sbb
inc
test
idivb
int
add
jp
pop
xor
or
ret
scas
sbb
or
pop
js
hlt
scas
movntq
lahf
or
testb
cli
pushf
xchg
icebp
add
cmp
repnz
ret
xor
les
cwtl
mov
xor
fldt
or
in
sbb
call
cmc
mov
pop
lcall
js
lods
mov
jl
cmpsl
lahf
mov
jl
test
cmpb
mov
into
fildl
jle
push
call
fs
sub
daa
jp
xchg
ss
jmp
jo
std
jnp
push
in
aam
ss
ss
lahf
stos
cmp
clc
sbb
mov
fwait
jp
fwait
push
sbb
push
xor
cmp
cmp
sub
dec
cltd
lods
pop
pusha
hlt
pop
push
test
jne
cmpl
mov
dec
std
popf
pop
dec
pcmpeqb
sbb
setg
adc
adc
subps
popf
andb
insb
into
stos
and
ljmp
icebp
mov
xor
lods
push
push
cld
dec
nop
enter
cmp
sbb
subl
mov
insb
cmp
pop
cmp
push
mov
mov
pop
shufps
adc
lahf
mov
mov
add
stos
leave
loopne
popf
jbe
push
pop
push
inc
stos
gs
push
and
add
dec
mov
dec
cmpb
test
cld
push
jae
lds
icebp
add
add
repz
in
cmp
inc
add
push
in
bound
mov
fwait
out
std
outsb
outsb
adc
fidivrl
cmp
orb
imul
mov
and
std
or
insb
icebp
icebp
div
inc
inc
mov
mov
mov
mov
data16
aaa
scas
aad
mov
dec
mov
push
dec
or
jp
push
dec
mov
and
add
add
popf
mov
add
addl
dec
xlat
fisubl
mov
repnz
mov
stos
in
aaa
or
pop
daa
mov
stos
loope
pushf
inc
stos
scas
scas
stos
jbe
daa
or
stos
data16
jl
xchg
xchg
lahf
stos
das
call
dec
lret
jb
subl
out
pushf
add
mov
xchg
fcoms
lret
stos
fiaddl
pop
divb
sub
dec
lea
scas
push
into
mov
add
add
jno
dec
jp
nop
xchg
cld
push
pop
sub
aas
jnp
push
sbb
jnp
mov
lcall
dec
aas
add
leave
or
inc
mov
mov
xor
add
inc
add
add
add
add
add
add
dec
add
add
add
add
aaa
add
add
add
add
add
insb
add
pop
insl
add
add
add
add
pop
add
inc
add
add
add
cmp
add
imul
push
add
add
dec
add
add
add
add
add
dec
add
push
add
jns
add
dec
add
outsb
add
dec
add
add
add
add
add
pop
xor
add
add
add
jp
add
pop
add
jae
add
add
add
jbe
add
add
jb
jb
xor
add
add
add
add
add
inc
add
add
add
push
push
add
add
add
jp
outsl
add
add
add
arpl
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
jae
add
je
insb
add
add
add
add
add
pop
add
inc
add
add
push
add
add
js
add
add
add
add
outsb
outsb
cmp
inc
add
push
add
jne
add
add
add
add
add
add
dec
add
xor
inc
jb
add
add
add
jbe
push
add
push
add
add
push
add
bound
add
add
add
jb
add
add
add
add
add
add
add
pop
mov
mov
je
push
icebp
je
das
fcmovbe
test
fs
rorl
adc
mov
xlat
mov
enter
push
mov
add
pop
ss
std
pop
adc
cmc
or
je
aas
jns
jae,pn
cmp
mov
lahf
sbb
push
push
ret
cs
jecxz
loope
dec
and
popf
inc
mov
or
or
adc
sub
mov
lds
xchg
mov
xchg
sub
mov
push
pop
pop
andl
xchg
jo
xchg
test
cmp
pop
lret
add
pop
inc
jbe
ret
jp
test
dec
pop
movsb
push
xor
push
cmp
cmp
hlt
jmp
lahf
lea
nop
sub
mov
xor
jl
inc
stos
mov
inc
lret
cli
pop
nop
ss
leave
jne
ds
outsb
iret
xor
jmp
cmc
mov
push
push
xchg
dec
and
or
dec
int
add
in
sub
fwait
jae
mov
push
shl
adc
jmp
inc
lea
movsb
dec
cmp
nop
push
stc
xor
or
nop
or
jbe
push
mov
jns
dec
ja
jbe
or
adc
mov
jbe
cmc
jecxz
mov
push
xor
sub
mov
jae
aas
cmp
pop
push
xor
outsb
xchg
jb
nop
pop
add
cs
dec
lret
sub
mov
mov
add
js
or
clc
jg
clc
xor
xchg
repnz
dec
in
das
and
cmp
cli
cmp
ja
inc
pop
mov
cmp
mov
xchg
xor
aad
aaa
cmp
sbb
mov
add
pushf
add
imul
dec
push
aaa
inc
and
mov
cltd
sub
push
or
repnz
fcompl
aas
mov
sbb
fwait
add
in
out
cmpsb
jmp
sbb
xchg
or
scas
push
sahf
jnp
inc
or
xchg
dec
out
pop
pop
ret
adc
push
lahf
xor
ss
lock
push
adc
loopne
cmp
shrb
imul
sub
cmp
adc
jno
out
push
int3
cmp
sub
xor
out
sub
nop
inc
sub
mov
rcll
add
cmp
cmp
mov
dec
jmp
mov
fucomp
pop
push
or
push
sbb
sub
fmulp
cmp
mov
push
sbb
adc
dec
aad
mov
fmull
cmp
xchg
inc
ss
dec
mov
cs
lahf
rcrl
adc
mov
dec
mov
cmp
mov
add
xlat
dec
mov
dec
or
call
test
dec
xlat
dec
mov
dec
test
mov
sub
sbb
popa
les
mov
daa
adc
push
jnp
sub
and
mov
in
inc
fwait
push
cli
jp
sbb
push
sbb
insl
in
orl
sbb
mov
add
add
loope
stos
adc
add
cmp
inc
mov
xchg
loope
jecxz
mov
inc
xor
xor
mov
iret
or
insl
fwait
push
iret
out
lcall
add
pop
push
jae
gs
sub
mov
mov
pop
or
jl
popf
push
sbb
sahf
adc
push
cmp
scas
sbb
cmpsl
add
aaa
je,pt
shlb
sub
or
xchg
push
out
xchg
push
xorl
shlb
jmp
imull
xchg
in
sub
pop
loopne
sub
cli
lcall
sbb
push
push
jl
enter
mov
loope,pn
ja
rcrl
std
xchg
mov
pop
sahf
jns
push
or
sti
addr16
std
sub
stos
inc
or
popf
jmp
xor
xchg
and
fwait
ret
das
jns
cmpsb
cmp
mov
jnp
adc
pop
ds
xchg
xor
mov
lret
adc
or
lcall
adc
imul
inc
aaa
inc
pop
lds
stc
inc
sbb
adc
cmp
adc
adc
js
inc
ret
sub
jp
inc
mov
xchg
sub
jl
call
jp
test
adc
mov
or
fstpl
jne
out
jle
in
jns
insl
mov
jmp
jne
xchg
clc
push
sbb
cmpsl
cld
pusha
sub
fstl
sbb
cli
icebp
or
sub
test
ss
mov
mov
icebp
adcb
sahf
sub
or
outsl
jnp
pop
jne
or
sub
lcall
std
inc
add
in
sti
cmp
fwait
out
sbb
inc
xchg
and
pop
lcall
jl
into
cld
add
cmpl
jge
divl
pop
stos
in
add
dec
push
lea
shr
sbb
mov
imul
add
adc
push
shrl
fwait
jne
pop
ds
xor
cld
add
mov
sub
scas
in
outsb
mov
jae
pop
int3
es
cli
dec
out
and
in
jge
xchg
pop
movsl
stos
pop
or
sahf
dec
mov
xor
inc
sbb
mov
xor
inc
ljmp
out
icebp
xor
aad
cs
scas
xor
test
dec
pop
xchg
sub
cmp
inc
sbb
test
mov
scas
jl
outsb
pop
fistpl
cmpsb
inc
cmp
sub
jno
push
stos
stc
sbb
or
movsb
and
lret
and
push
sbb
mov
iret
sbb
jne
jnp
jl
and
push
ss
xchg
mov
push
mov
xchg
dec
mov
inc
rolb
loopne
into
jle
cmp
aad
inc
das
daa
lcall
dec
inc
inc
sub
ret
outsb
push
imul
inc
dec
inc
adc
cmpl
inc
cmpsl
pusha
lods
pop
sarl
pop
inc
leave
cmp
clc
loope
jns
out
inc
mov
and
mov
ljmp
jp
inc
inc
pop
je
loope
add
pop
cmpsl
sub
xchg
push
leave
pop
cmp
adc
jmp
inc
jmp
ds
adc
sahf
rorb
insl
or
lea
add
push
lds
iret
dec
mov
std
dec
mov
dec
inc
cmp
sub
jp
sub
dec
loopne
addr16
xor
rcr
adc
xchg
sbb
cmpb
dec
push
popf
push
lret
adc
ficoml
lahf
adc
jge
xor
push
push
lahf
adc
cs
push
not
in
jmp
ss
bound
and
jmp
sahf
adc
mov
movsb
sub
jne
pop
ficoml
shrl
and
aaa
jmp
mov
xor
mov
and
mov
cs
push
stos
pop
xlat
push
aaa
mov
adc
push
ljmp
cmp
push
xchg
push
test
dec
pop
sbb
xchg
add
push
mov
lret
lock
stos
jl
in
outsl
dec
mov
popf
push
adc
lahf
adc
out
ret
or
xor
xor
jl
xchg
add
ficoml
dec
test
inc
stc
je
add
jmp
push
xchg
add
les
jmp
push
xchg
jl
lahf
adc
arpl
scas
xor
arpl
scas
jecxz
repz
test
pop
cmp
scas
pop
mov
xor
pop
push
pop
mov
or
xlat
lds
dec
dec
lret
scas
pop
inc
jbe
loope
ljmp
fwait
mov
pop
dec
fnsave
or
mov
and
insb
lret
daa
out
call
adc
cmp
lahf
cld
mov
test
jp
inc
jg
push
push
fsub
sub
pop
pop
dec
mov
jl
popf
dec
cmp
clc
add
dec
xor
inc
xorl
stc
or
mov
jne
sub
iret
cmp
push
dec
cmp
pushf
aam
sbb
ds
inc
xchg
inc
fsubl
xchg
sbb
in
roll
push
call
cmc
pop
pop
mov
jns
or
sub
inc
and
lods
push
pop
adcl
loopne
jno
xchg
add
push
mov
add
shr
lea
xchg
sarl
ficoml
cld
pop
call
jle
sub
sbb
pop
or
out
aam
ret
jo
mov
call
inc
lahf
inc
push
sbb
adc
xchg
add
addr16
movsb
ss
in
mov
inc
or
and
iret
inc
mov
mov
popf
addr16
movsl
or
inc
stos
insl
xor
push
jbe
loope
inc
test
nop
sub
out
insb
xor
ss
loope
sbb
dec
pop
pop
mov
xchg
push
shl
push
test
jmp
fistpl
std
pop
popa
lahf
stc
inc
push
pop
lret
pop
pop
lds
mov
dec
inc
aam
dec
xchg
xor
shll
pop
jne
stc
inc
jge
pop
push
pop
pop
paddusb
leave
or
cli
repnz
jo
test
repz
push
pop
lods
hlt
dec
and
ret
push
clc
test
mov
jmp
dec
adc
mov
adc
mov
mov
mov
repnz
inc
sbb
cmp
jmp
mov
mov
out
or
div
fistpll
ds
mov
shl
cmp
sub
jg
mov
lods
lock
push
mov
push
adc
add
shr
out
mov
scas
adc
adc
sub
pop
pop
lods
mov
mov
mov
mov
mov
ret
fwait
lret
mov
fmuls
or
jecxz
jne
or
clc
stc
add
or
adc
cmp
sahf
fisubrs
mov
scas
hlt
lret
roll
pop
pusha
pop
ljmp
dec
test
jne
cld
pop
lahf
inc
inc
inc
mov
inc
cmp
out
dec
mov
cwtl
scas
jp
sete
push
daa
fists
xor
xor
adc
icebp
mov
xchg
dec
pop
test
sub
jle
or
cltd
xor
repnz
lds
hlt
add
sub
mov
xchg
cmp
cmc
sub
ljmp
adc
cltd
sbb
popf
lea
lea
add
push
jecxz
fidivs
aam
dec
push
les
ret
add
mov
repz
fsubrl
jl
add
sub
cld
das
jbe
sbb
icebp
jbe
out
ret
jbe
popa
jae
adc
sub
or
sahf
push
cmp
leave
sub
das
lahf
ds
inc
and
fdivr
sub
cmp
or
cmp
mov
notb
xchg
jno
mov
mov
sbb
out
and
mov
push
aaa
dec
sbb
enter
shll
mov
insl
pusha
add
sbb
cltd
rcrb
inc
sub
sub
sbb
pop
inc
pop
and
cmp
mov
or
push
int3
sub
sbb
scas
lret
or
sbb
imul
jbe
or
rol
das
jmp
adc
adc
add
dec
mov
in
sbb
leave
rorl
mov
fidivrl
mov
cmp
or
push
or
nop
xchg
or
addl
sbb
addr16
push
ret
scas
xor
xchg
xlat
dec
mov
add
fucom
lret
ret
outsl
add
enter
adc
fmull
mov
popf
lcall
sbb
lock
mov
or
mov
stos
cltd
scas
or
or
lds
cmp
mov
push
dec
cmp
push
insb
jl
inc
xor
pusha
mov
jl
dec
sbb
sahf
jne
inc
sbb
iret
decb
push
sub
icebp
push
shlb
ja
pop
rorl
lcall
and
pop
or
sub
das
sbb
shr
cmp
hlt
mov
inc
cli
xor
stos
call
jno
mov
xor
cmp
ret
pop
push
inc
clc
push
xlat
or
xor
sbb
pop
or
pop
shr
insb
inc
addr16
fisubrs
aas
je
mov
push
cltd
mov
push
sahf
or
imul
and
jo
filds
and
or
scas
push
ret
mov
ficoml
mov
sub
push
dec
inc
lahf
int3
int3
enter
loop
int
pop
jbe
mov
jne
pushf
push
fwait
jmp
stos
in
inc
pusha
pop
xchg
mov
adc
dec
jge
inc
loopne
movups
xchg
sub
sbb
adcb
test
test
lods
jmp
xchg
add
cmp
push
adc
lahf
mov
or
cli
notl
insb
dec
leave
dec
push
fwait
mov
lcall
inc
adc
push
lods
mov
xchg
imul
hlt
adc
ret
fwait
inc
loop
jl
add
jae
push
rcl
fdivl
dec
outsb
cmp
test
stos
cmp
dec
outsb
sub
inc
xchg
fcomi
adc
shll
jnp
inc
sub
lock
or
xor
inc
aaa
mov
out
cwtl
cmp
xchg
vhaddps
pop
je
aaa
mov
mov
inc
aam
out
pushf
mov
cmc
fidivrl
sub
and
or
sbb
sbb
and
fmuls
cmc
loop
cmp
mov
call
add
iret
fbstp
fs
add
lds
mov
cld
test
sub
push
nop
add
push
pop
sub
ja
add
lss
mov
sub
cmp
in
sbb
sbb
roll
push
out
lea
dec
cli
pop
mov
push
push
and
stos
mov
xor
les
negb
add
ss
cli
xor
lock
cmova
and
push
push
cld
rol
xchg
cmc
sub
xchg
call
fwait
lret
clc
mov
or
lahf
call
or
test
pop
scas
inc
fsubrs
test
js
sahf
mov
gs
cmp
sbb
push
push
mov
nop/reserved
sahf
imul
repnz
sub
add
xor
sbb
sbb
fwait
jmp
ds
insl
sbb
fwait
ds
fimull
sbb
dec
lcall
xor
or
imul
js
test
ret
jbe,pn
loopne
push
fcoml
lods
push
in
jne
add
jo
ret
mov
stc
in
or
jo
and
sahf
pushl
sbb
pop
dec
arpl
test
mov
add
lock
aas
mov
stos
in
ss
pop
push
mov
setne
not
jg
push
and
sub
fldt
cmp
mov
lahf
pushf
xchg
enter
adc
pop
pop
fwait
add
fisubl
pushf
adc
mov
add
cmc
add
or
push
push
cltd
dec
push
push
call
icebp
icebp
push
aas
cmp
mov
cmp
push
das
mov
sub
or
mov
mov
int
sbb
iret
jne
mov
add
jge
jno
leave
call
or
jne
dec
sbb
push
push
mov
push
push
cs
mov
call
cmp
movsl
inc
inc
data16
sbb
imul
adc
stos
mov
fs
jmp
sbb
out
mov
inc
xor
shlb
ja
cmp
mov
or
and
inc
jmp
add
cmp
sar
stc
cmp
or
pop
push
jae
xchg
mov
jmp
cmp
shll
loope
inc
jbe
mov
fistps
jb
ja
mov
imul
cmp
ds
and
xor
mov
sbb
and
sub
and
cmp
ja
les
dec
fildl
and
jbe
mov
cli
fwait
aad
dec
icebp
push
hlt
push
lret
sbb
pop
cmp
cmp
push
ljmp
in
mov
call
lods
cmp
xchg
xchg
sub
cmc
lret
pop
pushf
std
es
fwait
cmp
xorl
pop
xor
int3
subb
xor
xor
sub
cmp
and
cmc
mov
inc
xchg
xchg
mov
mov
jl
enter
xor
xchg
push
stos
out
or
jae
mov
out
fcmovne
push
sub
aam
test
loope
jge
call
icebp
hlt
push
mov
and
mov
clc
xchg
cmp
or
inc
mov
dec
into
fs
xchg
test
push
inc
stos
sub
aaa
insl
xchg
nop
out
xchg
in
pushf
insb
or
mov
test
mov
mov
mov
les
test
mov
and
mov
in
movsl
add
mov
or
dec
dec
jl
adc
test
mov
push
dec
lock
mov
aam
fdivrs
loopne
in
mov
in
hlt
xchg
cmp
add
push
or
inc
rorb
cmpb
inc
mov
idivl
cltd
sub
push
mov
lahf
adc
cltd
mov
nop
adc
outsl
ret
xchg
mov
ljmp
mov
jbe
xor
add
enterw
push
lahf
ret
lds
lock
loope
or
xchg
and
mov
inc
ljmp
cmp
bound
add
xchg
mov
sub
in
jb
in
or
add
or
call
jl
test
sub
subl
mov
xchg
out
or
push
inc
mov
cmp
xor
add
add
cltd
mov
dec
subl
je
pop
push
ss
sub
and
mov
mov
xchg
daa
aad
das
sub
fcompl
pop
push
xchg
stc
xor
adc
pop
push
adc
out
sbb
pusha
cmp
hlt
lcall
sbb
ret
cmp
fcomps
fmull
add
sbb
push
xlat
mov
negl
push
incl
test
test
pop
testb
sbb
and
and
cltd
sub
idiv
mov
jbe
jle
lcall
data16
cli
sub
jge
int
stc
shlb
sbb
dec
xor
loope
mov
movsb
lcall
sbb
mov
cwtl
hlt
test
cmp
cltd
lahf
xor
inc
xchg
mov
mov
movsb
in
mov
jge
into
aaa
jecxz
push
dec
mov
sub
push
loope
pop
push
jp
loop
sub
mov
mov
negl
fs
push
fwait
out
cld
xchg
add
or
push
mov
dec
hlt
pop
js
xor
or
lods
cld
push
push
cltd
or
adc
call
inc
enter
fistpl
mov
xor
lock
add
cmp
xchg
dec
push
cmp
js
xor
sbb
subl
cmp
mov
pop
mov
cmp
dec
xor
add
lds
in
push
out
sbb
enter
dec
out
enter
mov
ljmp
sub
xlat
js
lret
add
xor
push
sbb
add
bnd
ss
xor
andl
push
loop
ret
cltd
popa
fistps
sub
cmp
icebp
xlat
sahf
jecxz
jl
adc
hlt
mov
adc
inc
push
fimull
cmp
cmp
in
mov
fidivl
loop
test
inc
xor
mov
sbb
and
add
xor
pop
cmp
mov
inc
pop
push
add
fwait
mov
into
hlt
roll
sbb
testb
pop
dec
outsb
mov
push
sub
xlat
out
lods
sbb
mov
lahf
push
or
and
inc
addr16
lods
fmull
mov
adc
sub
hlt
cltd
inc
mov
mov
cli
jl
aas
adc
or
inc
jge
ja
xchg
sbb
push
mov
fdivp
jp
push
loopne
push
xchg
pop
out
cmc
jnp
sahf
into
xchg
loope
mov
imul
iret
dec
xchg
or
pop
fnstcw
scas
pushl
aam
lods
mov
push
loop
loop
call
pushl
ds
push
cmp
inc
xchg
test
push
ss
aaa
lcall
dec
inc
cli
xchg
in
adc
jp
enter
pop
test
inc
fildl
xorb
ds
jbe
jno
mov
mov
pusha
sub
inc
jne
ficomps
cmp
xchg
dec
cld
ret
sub
addb
out
dec
dec
jl
dec
lods
mov
fisubrl
pop
sbb
mov
adc
xchg
aaa
fildll
dec
test
fnstsw
aad
pop
push
jecxz
cmp
cltd
push
xor
adc
dec
sbb
mov
fwait
cmp
adc
add
inc
add
iret
das
cld
out
ret
inc
les
cmp
sbb
ss
std
inc
push
sub
cmp
push
aaa
outsl
inc
sub
movsb
mull
adc
popf
xchg
ret
mov
add
push
pop
shl
xchg
fwait
in
ret
sbb
and
push
fwait
mov
push
jo
and
xor
jecxz
push
lock
or
in
in
sub
je
cmp
mov
lock
fmull
fistpll
shlb
loope
cmp
shl
lret
femms
jl
scas
adc
addr16
xor
cli
cmpsb
push
mov
mov
mov
fimuls
sub
push
push
loop
dec
iret
ss
popa
cmp
dec
pop
push
push
bound
fsubrl
sub
inc
scas
hlt
out
or
sbb
fstpt
call
inc
xchg
test
aad
test
in
mov
cmp
lods
pop
lock
cmp
fbstp
cmp
or
dec
in
mov
xchg
ja
data16
jmp
jp
sub
enter
inc
xor
jl
mov
push
pop
test
xchg
mov
adc
in
mov
jne
xchg
pop
xchg
dec
adc
mov
push
cmp
fwait
cmp
jg
arpl
jbe
movsb
or
mov
das
aaa
push
enter
push
inc
cltd
cmc
dec
fdiv
test
mov
das
ja
jno
mov
mov
pop
mov
test
lods
adc
push
lret
cmp
idivl
mov
mov
cs
lcall
inc
arpl
push
push
mov
or
insb
mov
aad
dec
test
push
mov
mov
adc
inc
jl
mov
in
cmp
scas
ja
icebp
shlb
outsb
testl
clc
repnz
xor
dec
mov
pop
ja
into
cmp
xchg
rol
lret
push
enter
nop
mov
inc
push
mov
jnp
jl
push
mov
lds
into
and
in
pop
es
ss
ss
arpl
pop
cmpsl
push
sub
shll
loop
fs
shlb
dec
jg
push
aam
cmpsb
outsb
lret
fwait
testl
push
jo
and
sar
and
mov
fisubrl
cmp
ret
lods
fisttps
roll
cmp
dec
sbb
imulb
gs
jbe
cmc
dec
pusha
test
xlat
pop
lcall
into
cs
fmuls
clc
and
icebp
es
ds
dec
sub
dec
jbe
dec
test
ja
dec
ss
sub
push
out
lods
rclb
jle
and
inc
movsb
cltd
jl
loopne
popf
sbb
xchg
vandps
in
xchg
das
sub
jecxz
sbb
movsl
inc
stos
inc
lds
jecxz
stos
xor
loopne
cmp
dec
jmp
xchg
sub
ret
repnz
test
pop
push
inc
addb
ret
leave
push
mov
pop
stos
dec
xchg
inc
xchg
je
and
addb
mov
xor
dec
out
test
jns
aam
dec
cmpsl
push
test
mov
add
shrb
bound
pop
dec
push
pop
cmp
and
sarb
dec
mov
push
cli
xchg
sub
push
xchg
mov
fs
and
mov
mov
mov
fldl
sub
pusha
outsl
lds
ja
jg
test
mov
outsb
add
mov
and
xor
jbe
inc
inc
xor
jne
mov
mov
movsl
repnz
mov
push
sbb
or
and
mov
mov
dec
xor
push
jnp
xchg
shlb
mov
enter
and
fidivl
push
mov
scas
push
mov
sbb
stc
ja
fwait
add
push
mov
push
mov
out
add
test
xchg
mov
or
fwait
pop
mov
add
jle
add
mov
inc
movl
repnz
sub
ret
in
jl
icebp
ret
cmpsl
ljmp
push
jg
loope
pushf
mov
push
cmp
jl
out
pop
cmc
jne
push
xchg
lods
test
pusha
scas
adc
ja
fcoml
dec
fldenv
outsb
push
adc
adc
cmp
add
adc
insb
and
je
and
add
rcrb
mov
add
ss
xchg
insb
das
mov
xchg
mov
subb
mov
nop
xchg
nop
das
test
inc
mov
cmp
lcall
jl
loopne
test
fs
dec
clc
loopne
xchg
jge
adc
cmp
sbb
mov
and
jb
inc
xor
push
orb
xchg
dec
fbld
pop
xchg
mov
pusha
dec
xchg
push
sbb
loopne
mov
jl
mov
in
mov
nop
les
sub
hlt
aam
adc
sub
push
sti
or
loopne
sbb
in
and
mov
fdivs
jne
out
loop
cmp
fwait
inc
cmp
pop
push
push
out
xchg
pop
jg
pusha
mov
xchg
je
xor
push
xor
rol
dec
inc
in
mov
in
lcall
hlt
inc
clc
shlb
in
adc
or
insb
add
or
stos
nop
push
out
sub
cmp
ljmp
inc
cmpsb
adcl
mov
pop
sbb
fs
mov
and
fwait
cmpb
sbb
push
movsb
sub
mov
ror
jne
sbb
call
mov
cmp
mov
mov
loope
dec
pop
jo
mov
sub
test
cli
hlt
mov
mov
les
cmp
loopne
ss
xchg
jl
clc
leave
mov
ja
nop
ja
ret
xchg
push
addl
je
adc
test
enter
push
bound
mov
fdivrs
push
ljmp
stos
addb
xor
loopne
cmp
adc
sub
inc
mov
and
repz
cwtl
mov
sub
sbb
insb
and
xor
rolb
insb
cwtl
xchg
out
mov
clc
fsubrl
xlat
cmp
add
xchg
mov
and
sub
negl
insb
mov
xchg
lods
movsb
xlat
scas
mov
mov
sub
imul
inc
out
dec
add
dec
notl
lcall
pop
lcall
jl
xchg
xchg
xchg
mov
jl
cli
int3
faddl
or
shlb
push
xchg
or
mov
jle
and
mov
adc
sbb
cltd
or
je
inc
int3
sub
js
adc
xchg
sbb
fadds
stos
push
sbb
sub
testb
sub
testl
sub
fwait
xor
inc
pushf
push
pop
push
sarb
in
movsb
lret
mov
cld
fiaddl
xor
inc
lock
sbb
cmpl
out
les
jb
loop
lods
in
pop
pusha
cld
inc
add
mov
push
fs
inc
cmp
push
pop
pop
push
insb
xor
fucomip
mov
add
aam
jl
dec
mov
adc
jg
sbb
and
test
test
mov
adc
test
rclb
mov
hlt
rol
int3
sbb
and
xor
mov
dec
mov
and
xor
cmp
mov
add
addl
sub
sbb
pushf
add
adc
andb
xchg
xor
push
mov
je
push
rolb
scas
mov
in
sbb
pushf
add
adc
sbb
inc
sti
cmp
push
dec
and
pop
and
jge
jl
test
test
add
jg
mov
aam
push
call
xchg
adc
sub
push
push
addb
push
sub
jge
lods
dec
mov
xor
xor
pop
and
negl
rolb
sarb
ret
or
lods
and
ds
xchg
ds
jl
into
movsb
pop
mov
adc
and
or
adc
cli
clc
sarb
mov
adc
push
sbb
and
mov
pop
sub
lods
mov
mov
add
loope
or
nop
push
fsubrl
xchg
push
repnz
orb
pop
cmp
sbb
xchg
pushf
xor
inc
loope
or
imull
xor
mull
outsb
faddp
in
in
push
jne
pop
or
jl
dec
fistpl
sub
cld
aam
and
xchg
nop
sbb
mov
repnz
sbb
push
pop
pop
pop
push
adcl
cmp
in
in
cwtl
hlt
push
cmp
cmp
dec
xchg
pop
loope
dec
sbb
lods
pushl
mov
dec
sbb
in
scas
mov
orb
lea
cwtl
sbb
sub
or
repnz
push
idivl
mov
push
mov
int3
ret
jmp
pop
mov
xchg
mov
cwtl
loopne
push
repz
sbb
pusha
jno
ja
negb
xor
mov
ljmp
inc
mov
mov
nop
sbb
cwtl
cld
lret
sub
cmp
sub
mov
push
pop
inc
je
mov
xchg
sub
add
cmp
in
push
lods
shlb
xor
mov
sub
cli
xchg
pop
inc
movsb
inc
lods
sub
dec
in
xchg
cltd
or
inc
into
add
fs
mov
mov
repnz
fdiv
clc
hlt
adc
pusha
sub
fsubs
and
xchg
js
xchg
mov
sub
jle
sbb
fistps
addr16
mov
push
sbb
mov
js
push
out
add
loope
aaa
mov
cmp
and
cmp
adc
hlt
sbb
xlat
sbb
lret
dec
dec
mov
jne
out
nop
and
sub
loope
pop
out
pop
loop
inc
add
enter
rol
lods
fdiv
mov
lock
inc
mov
nop
or
sub
in
ss
mov
pop
jecxz
out
test
je
sub
push
stos
mov
test
mov
inc
loopne
push
call
dec
lcall
lods
or
inc
adc
xchg
mov
jne
cwtl
nop
cwtl
sub
sbb
nop
mov
mov
enter
mov
sbb
hlt
ret
sub
cmp
repnz
fcoms
rolb
mov
mov
imul
add
mov
push
sub
scas
xchg
jo
divb
mov
and
jae
mov
mov
int3
fcoml
xchg
cli
sub
mov
mov
fsubl
clc
mov
mov
mov
ljmp
mov
aaa
inc
cmpsb
enter
int3
aaa
cmp
aam
or
fsubrs
cwtl
fsubrl
pusha
lahf
ss
push
push
test
in
lods
mov
cmp
jg
mov
push
sbb
pop
mov
inc
mov
mov
inc
jg
test
push
cli
xchg
jae
je
mov
or
lcall
dec
cmp
jns
pop
inc
shrb
fsubs
cmp
xor
outsb
mov
cld
jmp
adc
je
lock
mov
push
xchg
xchg
sahf
xchg
inc
ja
mov
pop
or
sub
adc
mov
imull
pop
sub
out
mov
jecxz
out
test
jmp
add
xchg
xchg
push
aaa
sub
fistpl
jmp
pop
inc
add
in
dec
jge
add
dec
cmp
out
ja
movsb
pop
add
push
pminsw
sub
leave
inc
or
lret
data16
rep
pop
iret
xor
xor
pop
dec
dec
mov
jl
jmp
ret
test
pop
add
outsb
inc
jns
out
fwait
sub
and
jns
mov
cmp
ficompl
call
int
adc
call
fidivrs
gs
xchg
ficoml
sbb
sub
cld
lock
int
loope
mov
mov
push
and
dec
fwait
stos
dec
outsl
repz
push
cmp
call
jbe
cltd
lock
and
scas
daa
add
aas
repnz
ja
jns
test
push
ret
int3
loope
cmp
jo
push
jno
inc
mov
mov
pop
call
sub
sub
cwtl
sbb
sub
lret
inc
push
in
movsb
cwtl
loope
mov
mov
lods
mov
cli
sbb
cmc
arpl
jmp
test
addr16
ja
xchg
icebp
dec
adc
jns
xor
mov
div
cmp
and
cltd
mov
popa
sub
mov
sbb
sub
jne
out
cmp
and
add
jb
push
mov
mov
dec
xchg
mov
in
sbb
dec
sbb
add
leave
inc
inc
mov
pop
cmp
in
sub
imull
aam
negl
sbb
dec
ret
mov
cmp
loope
adc
orl
mov
sbb
inc
stc
mov
cmp
sbb
shl
outsb
xor
sub
mov
inc
cmp
fidivl
xor
in
cmpsb
push
mov
into
push
add
in
incb
push
jmp
pop
test
incb
pop
mov
inc
pushl
loopne
mov
scas
jl
aaa
cld
scas
push
test
adc
adc
mov
pop
mov
add
xchg
xor
or
add
out
cltd
sbb
addr16
pushf
sahf
pop
inc
divb
mov
sub
xor
test
in
adc
push
push
fs
add
add
pop
jmp
pop
fimuls
dec
pop
sub
jecxz
into
jl
bts
ret
stc
lods
sbb
jle
jmp
cmc
ja
out
sub
cmp
loope
gs
adc
nop
out
dec
push
adcl
fmul
dec
mov
cmp
cld
int3
daa
cltd
sbb
pop
cs
or
xor
cmp
xchg
subl
sub
insb
mull
in
jmp
std
inc
xlat
dec
dec
jmp
ret
insb
sahf
ds
mov
or
jmp
out
sbb
add
xor
cmp
in
pop
push
call
popf
xchg
out
movsl
leave
mov
pop
and
pushf
jb
xchg
scas
push
pop
repnz
das
sub
xor
mov
jbe
shlb
cmp
xchg
rcrl
adc
out
lock
adc
stc
pop
insb
ss
jge
cmp
cmp
in
les
pop
lret
insb
jno
popf
and
insb
inc
js
pop
adc
inc
ds
cltd
pop
test
cmp
mov
sub
push
mov
push
dec
hlt
push
sub
sub
nop
xlat
cmp
xor
push
fadd
or
lods
aaa
cmp
inc
fs
mov
add
pusha
adc
mov
push
push
scas
scas
mov
dec
cli
jo
jmp
xchg
enter
psrlw
test
loop
icebp
mov
lcall
sbb
dec
cmp
and
xchg
pop
cmp
cli
xor
xor
mov
fiaddl
inc
test
pop
push
adc
mov
movsl
pop
mov
lea
ljmp
fisubrl
sbb
sbb
dec
mov
and
push
ficoml
mov
call
mov
cmp
pusha
lahf
mov
fsubrs
sub
push
fdivrp
pushl
fdivr
xor
fwait
inc
jnp
pop
dec
push
xor
sub
test
sarl
aad
mov
ret
lret
add
sbb
sub
push
and
das
sbb
int
or
add
sbb
repz
inc
out
aas
or
shrb
pop
or
loop
sbb
in
jl
and
sbb
imul
jg
add
sahf
add
dec
dec
clc
or
aas
push
cmpsl
cli
mov
pop
mov
add
mov
add
xor
mov
push
xchg
mov
inc
ret
and
dec
clc
add
pop
jmp
fiaddl
mov
test
shr
add
mov
inc
or
adc
scas
stos
lock
jl
mov
iret
pop
sbb
iret
std
push
adc
mov
push
aam
sahf
or
inc
cs
imul
xlat
repnz
mov
inc
imul
and
in
mov
mov
repnz
pop
orb
sub
out
movl
cmp
xchg
cmc
sub
xor
push
hlt
adc
xor
sub
jmp
add
ret
dec
shrb
inc
mov
cs
call
cmc
jae
sti
mov
and
in
jmp
loopne
jne
and
sbb
shrl
test
inc
js
ljmp
jmp
fisttpl
mov
xlat
jle
aaa
sub
push
pop
jle
xchg
in
loop
push
sub
inc
hlt
pop
lods
push
call
sub
adc
shl
and
add
add
fucom
mov
cltd
jne
xor
js
mov
jmp
adc
rcll
cld
cmpsb
push
scas
jne
rcrl
sub
xchg
ret
cld
je
mov
aas
lock
fbstp
jmp
xchg
rorl
mov
mov
int3
push
mov
ficoml
shld
mov
sarb
sbb
adc
lea
mov
mov
xor
int3
and
ss
out
mov
pop
test
lods
add
movsb
in
cli
in
mov
ret
rcr
lea
js
mov
in
pusha
std
lock
mov
scas
movsl
pop
movsb
cs
fdivs
lods
out
aam
sahf
sub
stos
out
out
cmp
aam
cmpsb
xchg
pusha
cmp
or
pop
dec
sub
dec
cmp
adc
fcompl
stc
cld
nop
stos
ret
in
into
dec
add
mov
mov
cs
mov
jno
in
pop
dec
dec
cmp
push
in
repz
sahf
xor
stos
jmp
in
mov
inc
ds
fcoml
mov
lods
cmp
sub
cld
imulb
call
aam
lahf
xor
sahf
out
stc
or
out
rcll
fsub
clc
ljmp
mov
jecxz
mov
dec
subb
xchg
jmp
idivb
popf
movsl
pop
mov
aad
cmp
aam
adc
js
cli
pop
into
aam
gs
pop
mov
or
mov
mov
int3
xchg
mov
lods
mov
mov
mov
lahf
pop
jge
add
sahf
call
int
repnz
mov
or
mov
jecxz
and
lahf
adc
adc
xchg
sub
lea
jl
shrb
test
xor
mov
das
notrack
and
inc
lock
or
jle
js
xchg
out
adc
fsubr
ds
pop
sbb
stc
shrl
xchg
std
scas
adc
popf
mov
jns
mov
ja
mov
cmp
jmp
cld
inc
or
dec
push
and
push
cmp
fcomp
xor
xchg
sbb
mov
pop
cmp
jecxz
cmp
loopne
cmc
xchg
shlb
mov
loopne
pop
push
in
adc
lahf
lahf
test
pusha
or
inc
pop
jg
pop
inc
xor
mov
pop
dec
out
addr16
js
xlat
daa
xchg
mov
insb
popf
mov
mov
lret
add
xor
testl
out
sub
call
jmp
nop
xor
outsb
lret
xchg
cmp
cmp
decl
jbe
mov
movb
or
loop
lods
decb
out
negb
into
rcll
scas
mov
sub
push
hlt
int3
sbb
xchg
dec
lahf
ss
scas
adc
adc
sbb
mov
popa
sub
cmc
ret
daa
push
cmp
fmul
jns
mov
out
mov
fsubrs
jo
cli
in
aam
or
xchg
mov
pop
cli
mov
cwtl
repnz
adc
sub
nop
mov
and
decb
testl
sub
dec
int
pop
sub
shrl
nop
outsb
stos
jmp
pusha
stos
scas
je
scas
in
in
es
push
and
xor
cmp
xchg
out
cmc
mov
and
xchg
out
adc
lahf
inc
ja
push
negl
ja
push
ss
popa
notb
push
lock
cmpsl
cmpsb
pop
jmp
stos
pushf
mov
jo
cs
pop
push
jo
iret
mov
lds
mov
stos
shrb
sbb
dec
mov
test
mov
in
pop
xchg
call
in
ss
shl
sub
lahf
jne
mov
cmp
inc
fwait
xchg
lods
xchg
sub
mov
scas
fucom
test
std
mov
cmp
cmpsb
jmpw
fwait
xchg
scas
mov
scas
iret
fdivr
cmp
pop
sbb
xchg
jmp
jg
out
scas
jg
xlat
jg
inc
inc
cli
add
movl
daa
pop
jl
mov
fndisi(8087
test
loopne
cmc
stos
mov
jae
push
jmp
mov
rcrb
ds
lods
inc
mov
leave
and
dec
mov
je
movsl
and
scas
xchg
push
xor
mov
sbb
add
jmp
or
cmpsl
rcrb
out
insb
test
dec
or
inc
mov
jo
arpl
mov
test
lahf
and
lock
out
xchg
xchg
or
lods
xor
cmc
loopne
incb
movsl
outsb
jmp
jge
loopne
popf
fistpl
fsubp
mov
xor
mov
and
cmp
mov
loope
jmp
ljmp
in
lds
jo
scas
pop
xor
mov
ds
shrb
loopne
mov
stos
sbb
into
or
fbstp
out
cmp
rcr
pusha
cld
sahf
inc
stos
fwait
sub
stos
mov
in
dec
in
aaa
cmpsb
add
ds
and
out
call
jmp
dec
loopne
pusha
popf
mov
jge
sbb
mov
mov
jae
mov
pop
xorb
arpl
cmp
shrb
mov
test
xchg
add
inc
ss
sbb
shrl
xchg
adc
cwtl
add
xor
adc
lds
sub
xor
jmp
jmp
jmp
dec
outsb
push
je
loope
inc
popf
xor
hlt
dec
pop
cmpsl
movsb
mov
cwtl
pushf
ficomps
test
enter
fildll
mov
jns
aaa
jns
adc
es
mov
int3
in
out
mov
int
scas
adcl
sahf
fsubrl
fimuls
xlat
cmp
pop
hlt
sub
lahf
imul
lahf
subb
jmp
pop
sahf
sahf
cld
xor
lock
ds
or
dec
adc
aad
sbb
sahf
lahf
hlt
fcmovne
outsl
mov
fnsave
mov
mov
and
xor
cwtl
xchg
scas
xchg
sub
scas
push
rcrb
popa
mov
mov
xchg
mov
sti
stc
add
std
in
cmp
cmp
mov
lock
mov
mov
ftst
nop
aad
xchg
mov
sub
jge
dec
test
xor
cmp
mov
js
xchg
in
cmpsb
xchg
jge
orb
inc
jge
xchg
clc
sti
sti
xor
fidivs
mov
ss
dec
ss
fdecstp
stos
out
xorb
jmp
sub
sbb
lock
ja
inc
lds
les
shrl
loope
push
mov
pusha
adcl
shrb
fsts
jmp
scas
imul
jle
icebp
scas
es
ss
fmul
scas
jmp
lods
pop
sub
pushf
cmp
seto
mov
push
movsl
es
cltd
out
fsubrs
jmp
mov
mov
push
pusha
dec
int3
add
adc
push
pop
fadds
test
lcall
and
lods
mov
mov
push
insl
adc
imulb
or
pushf
or
cs
cmp
cli
dec
jg
in
pop
pop
pop
js
mov
add
int
ja
fdivs
out
mov
add
ljmp
adc
scas
f2xm1
xor
aad
std
data16
ljmp
lahf
mov
dec
cli
enter
lahf
mov
test
pop
insb
mov
jns
adc
addb
test
cmp
idiv
jno
pop
push
jmp
push
ss
mov
mov
std
push
push
push
rorb
mov
sarl
fistl
out
push
mov
jns
adc
xchg
pusha
fnsave
push
push
ss
aad
mov
jl
push
jmp
pop
sahf
xchg
push
aad
scas
inc
jmp
xor
push
xor
aad
inc
inc
enter
and
scas
cmpsb
lods
shrb
xor
or
stos
sub
shlb
or
xor
test
test
xchg
mov
aam
jns
hlt
out
mov
push
mov
aas
jno
stos
lods
jnp
sub
mov
daa
mov
cld
call
mov
js
out
ja
mov
not
mov
mov
cs
in
cmp
loope
scas
bound
mov
mov
mov
std
jne
bnd
int3
scas
lahf
adc
loope
iret
and
shr
js
cmp
fwait
adc
ret
mov
jbe
test
sub
pop
lods
mov
lock
cmp
mov
pushf
out
xchg
mov
rorl
fisubrs
xor
das
mov
roll
lods
das
into
ret
adc
out
out
repz
scas
dec
shll
mov
call
mov
cmp
je
jbe
lock
inc
xchg
xchg
dec
ficoms
pushf
dec
cmp
cmp
sbb
int3
pop
call
push
add
add
add
add
add
add
add
add
push
add
imul
add
dec
add
jp
add
add
add
add
add
add
add
insb
add
add
dec
inc
add
push
push
add
add
add
add
add
add
add
add
add
jns
add
add
add
jns
add
add
add
dec
add
add
insl
xor
dec
add
add
add
add
add
dec
je
add
add
add
add
add
dec
add
add
push
add
dec
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
add
pop
push
dec
add
jb
add
add
add
add
add
add
add
push
add
add
push
add
push
add
add
add
add
add
push
add
add
add
add
push
add
add
add
jb
add
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
add
js
add
add
add
add
add
add
dec
insb
add
add
add
add
push
popa
add
add
add
add
add
add
pop
add
add
imul
add
inc
add
add
add
dec
add
add
add
jne
add
add
add
xor
add
add
insb
add
add
push
add
add
add
push
push
add
inc
add
add
add
pop
xor
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
test
aaa
mov
pop
lcall
or
fadd
pushf
adc
orb
jecxz
insl
inc
popf
or
adc
mov
mov
pushf
aaa
aas
aas
repnz
xor
push
or
pop
lods
or
testb
push
mov
dec
mov
mov
movsb
xor
add
mov
xor
call
daa
out
stos
mov
cmc
test
pop
repnz
scas
iret
pushf
and
stc
aaa
popf
inc
das
dec
jbe
pop
pop
loop
cltd
mov
stos
ss
fdivl
into
sub
lock
cbtw
sbb
iret
pusha
dec
mov
stos
jbe
subb
mov
rorb
mov
clc
xor
int3
jmp
dec
or
xor
xchg
push
andb
dec
adc
in
push
mov
pop
das
arpl
aaa
imul
popf
rol
addb
mov
data16
mov
xor
inc
xchg
sahf
je
cli
stos
clc
dec
lock
scas
xor
mov
popf
mov
shll
xlat
orb
adc
fdiv
push
mov
dec
mov
mov
ficoms
outsb
xchg
ljmp
and
mulb
push
subl
cmp
stc
push
outsb
pop
xor
stos
jo
adc
cli
inc
add
pop
pop
jb
in
push
cs
mov
sarb
cmpsb
pop
call
stc
add
push
mov
test
outsl
add
push
into
call
lock
sti
lods
add
fldl
push
jnp
pop
sbb
cmpsb
and
add
xor
int3
dec
daa
mov
stos
push
push
jp
push
rcll
fildl
scas
xchg
repnz
sbb
stos
pop
ss
push
mov
out
enter
roll
movb
xchg
cli
mov
pop
or
add
adc
dec
sub
pusha
aaa
mov
pop
out
sub
jbe
das
or
scas
dec
repnz
popf
aaa
push
lods
cmpsb
lcall
int
les
xchg
add
lock
push
fldt
xchg
cmp
fiadds
push
scas
ficompl
sbb
pushfw
outsb
cli
push
ja
cli
nop
or
cltd
mov
mov
testb
jbe
das
push
popf
cmp
inc
in
jbe
out
push
push
mov
push
stc
mov
pop
popf
dec
loopne
jmp
popf
cli
mov
xor
adc
in
sbb
pushf
and
or
aaa
mov
dec
xchg
push
lcall
jno
jns
adc
sbbb
out
pushf
lcall
or
jno
lods
xor
out
mov
xor
mov
or
push
out
in
jbe
adc
icebp
stos
data16
mov
cmp
iret
lock
je
ficoml
ja
pop
out
push
fsubrl
push
mov
pop
mov
lret
mov
mov
js
stc
rcrb
jbe
pop
test
xchg
xchg
sbb
call
or
sahf
out
or
xchg
xchg
sti
add
push
cmp
les
pop
movsl
xor
push
pop
jns
push
andb
mov
stos
nop
adc
xchg
enter
sub
xchg
scas
sbb
sub
push
stos
out
dec
or
push
scas
and
loopne
and
push
aaa
jns
xor
fsubs
cmpsb
jp
dec
fidivs
push
ret
pop
fildl
sub
add
in
imul
jnp
mov
sbb
dec
push
mov
testb
cwtl
loope
xchg
xchg
cmp
stos
sahf
mov
add
ds
adc
cmp
xchg
loopne
and
xchg
xchg
faddl
prefetchw
aaa
clc
in
sbb
mov
xor
mov
aaa
or
adc
sbb
mov
pusha
jp
add
mov
out
mov
pop
rclb
stos
fcomps
scas
js
pop
cmpsb
vpmadcswd
hlt
stos
scas
pop
outsb
scas
je
lahf
jo
sahf
outsl
insb
jo
and
cmpsl
mov
sub
sbb
lods
lret
inc
test
sub
push
push
inc
dec
mov
arpl
xor
adcb
jbe
cmp
mov
cs
incl
int
xchg
push
dec
mov
jmp
jle
bound
imul
xchg
inc
inc
push
pushf
rcrl
movsl
jae
sub
xchg
dec
fdivs
sbb
in
test
jp
pop
inc
mov
aas
xor
loope
adc
push
xor
stos
inc
mov
pop
xchg
add
pop
inc
stos
jb
ja
inc
sahf
inc
movsb
pop
dec
dec
mov
mov
scas
movsb
pop
inc
inc
out
jge
push
aas
in
dec
imul
xchg
add
out
mov
jne
hlt
sub
mov
addl
jns
mov
pop
cwtl
mov
or
fs
push
imul
inc
shl
and
and
loopne
push
out
sbb
dec
mov
xor
or
dec
notl
inc
xor
adc
jbe
fisubrs
add
jae
xchg
mov
pop
aas
lods
jae
bound
in
aas
jmp
stos
fs
data16
pop
insb
test
je
outsl
imul
cmp
div
in
mov
jo
shl
ljmp
mov
and
adc
scas
lret
sbb
xor
jmp
iret
dec
daa
add
cmp
outsl
cwtl
jo
in
jl
add
mov
pop
dec
imul
data16
jp
cmp
mov
dec
out
adc
pop
loope
cmp
xor
pop
dec
and
inc
movsl
loope
xor
mov
insl
sarb
pop
pop
mov
dec
mov
imul
test
mov
pop
loope
jmp
xchg
arpl
jmp
mov
pop
push
ja
int3
sbb
aad
and
negb
cwtl
sarb
mov
rcrl
in
ja
aaa
loope
mov
push
fstpt
and
jne
fldt
insl
gs
rcrb
mov
cld
lahf
or
insl
popa
out
js
imul
dec
popa
sbb
pop
jp
cmp
mov
insb
dec
lods
cwtl
inc
jecxz
lcall
or
add
sub
and
iret
int
sub
lock
mov
dec
outsl
nop
subl
pop
pop
pop
sbb
and
push
jae
outsl
gs
add
loope
pop
pop
inc
sub
je
rcrb
xor
outsl
push
jo
cli
xorl
pop
lods
ds
dec
mov
cli
cwtl
or
xor
sub
adc
cwtl
outsb
in
pop
stos
sub
xor
push
sahf
jp
adcb
sahf
insb
rcrb
stos
test
int3
xorb
pop
lds
incl
dec
popf
or
jae
jmp
cld
pop
movsl
push
cld
into
add
jnp
inc
cmp
xchg
jl
push
cmpsb
cwtl
adc
daa
sub
out
push
inc
imul
mov
mov
xor
arpl
cmp
div
or
xchg
jo
mov
ss
dec
cld
jecxz
sbb
push
pop
fstps
insb
push
dec
inc
push
nop
je
in
gs
dec
sarl
ret
xchg
pushf
push
fisubrs
imul
lods
scas
inc
fdivr
cld
and
mov
mov
shrl
out
pop
gs
push
test
pop
xchg
push
adc
addr16
cmpsl
add
inc
push
jbe
stos
jno
rcrb
lods
inc
adc
jnp
xor
gs
outsl
rclb
ja
pop
push
lret
hlt
sub
pushf
pusha
out
inc
mov
or
mov
jbe
dec
fs
sub
mov
push
inc
fsubrs
insl
jmp
push
lods
add
mov
jb
fidivrl
mov
fs
lcall
adc
je
inc
sbb
sub
push
cwtl
mov
int3
sub
test
dec
inc
push
dec
rcr
sub
mov
push
jae
cmp
jo
push
mov
adc
adc
fimull
popf
inc
mov
pop
pushf
mov
cli
push
lods
int3
add
cwtl
xchg
test
addr16
in
fs
xchg
or
sub
repz
lods
aas
cmpsb
cmpsl
aaa
dec
std
adc
xchg
stos
jmp
testb
call
repnz
inc
sub
cltd
movsb
dec
jne
xor
pusha
cs
sub
and
lcall
xchg
lcall
sub
lods
cmp
adc
inc
push
lods
xchg
dec
push
stos
pop
mov
outsl
insl
ljmp
add
jge
ds
mov
push
push
push
in
add
dec
xchg
push
insl
pop
adc
sbb
lret
pop
popl
ret
movb
sub
pop
dec
pusha
outsb
adc
rcrl
outsl
insb
sub
mov
jo
std
jg
push
js
jae
mov
lods
mov
hlt
into
inc
fbld
push
scas
ret
add
jae
mov
xchg
cmpsb
in
repz
push
stos
adc
adc
out
pop
aaa
mov
dec
jmp
xchg
pop
or
imul
pop
cmc
hlt
arpl
fdivrl
add
dec
in
xchg
jle
addr16
pop
push
xchg
or
xchg
push
pop
adc
imul
mov
lods
push
push
fsts
sbb
adc
push
repnz
xor
in
outsl
cmp
add
xlat
popf
push
mov
inc
mulb
and
pop
pushf
jmp
cli
ljmp
clc
in
lret
inc
icebp
nop
scas
in
lcall
mov
adc
cmc
icebp
shrb
aas
cmp
jbe
and
mov
or
lcall
loope
cli
shl
sti
rclb
lcall
icebp
dec
repz
outsl
jecxz
lods
call
jbe
out
mov
xchg
sub
testl
ljmp
adc
fdivr
lods
mov
pushf
adc
sub
push
outsl
and
in
ds
add
sbb
push
imul
insb
pop
call
mov
mov
xchg
lods
lds
push
jo
inc
insl
jecxz
add
jmp
scas
mov
push
add
sub
push
mov
dec
popa
inc
imull
shrb
pop
and
test
outsb
subl
mov
add
dec
xor
sarb
es
ja
arpl
outsb
les
adc
pop
out
cltd
hlt
call
mov
cmp
fidivs
jmp
sahf
push
das
mov
lea
aam
nop
enter
cli
and
aaa
xor
lahf
mov
std
mov
js
repz
scas
and
add
inc
push
push
dec
pop
inc
sub
clc
inc
mov
sbbl
clc
inc
aas
stos
push
dec
fucomip
jae
addr16
sahf
mov
outsb
inc
in
mov
mov
jl
mov
pop
orl
lea
mov
fcompl
lock
mov
jno
mov
rcrb
fdivs
mov
lahf
out
rorl
mov
pop
mov
sbb
sbb
add
leave
mov
shl
xor
cld
pop
das
cs
mov
jnp
adc
dec
cwtl
ds
adc
xorl
mov
add
xor
add
out
stos
dec
mov
cmp
aaa
ds
push
dec
dec
push
push
push
lret
push
push
inc
mov
xor
pop
xchg
inc
add
and
cmp
das
xchg
dec
jne
cs
adc
sub
clc
ss
aam
sti
or
or
sbb
test
jb
xchg
lock
ja
mov
add
bound
mov
inc
or
out
adc
push
adc
shlb
adc
clc
ds
rcrb
pushl
sbb
jo
dec
scas
sbb
push
mov
pop
mov
and
push
andb
xor
cmpsb
or
pop
scas
dec
mov
and
inc
cs
out
popa
bound
xchg
data16
xchg
insl
imull
lock
xchg
icebp
xor
pusha
rclb
mov
inc
mov
in
sbb
or
push
sbb
mov
fwait
rcrl
xchg
imul
push
mov
sub
outsb
xchg
dec
stos
pop
gs
cwtl
test
adc
loope
sub
mov
divb
cli
mov
mov
pop
pushf
pop
cli
push
push
aaa
dec
lods
dec
lcall
cmp
xor
lcall
and
sbb
aaa
adc
or
clc
das
mov
rcrb
xchg
lods
sbbb
pushf
pop
cli
push
dec
aaa
inc
lods
cmp
cmp
xor
sub
or
push
ss
cs
lock
loopne
aam
aaa
mov
mov
das
xchg
pushf
nop
cli
mov
lcall
jo
insb
push
lcall
push
cli
dec
dec
aaa
inc
lods
inc
lcall
sbb
hlt
sub
not
das
rcrb
shrb
mov
lods
cli
test
aaa
mov
notb
mov
js
je
jo
pop
cli
dec
cmp
xor
sub
pushf
sbb
sbb
or
xor
mov
das
hlt
pushf
lock
in
call
lcall
jns
mov
pop
into
jmp
adc
adc
xor
ljmp
cmp
xor
xor
and
es
gs
pop
inc
and
inc
and
ud2
into
adc
loopne
sbb
fnstenv
mov
push
mov
sbb
add
xchg
mov
or
add
push
ss
pop
insl
cmc
mov
mov
push
dec
mov
test
test
xorb
inc
adcb
sbbl
lea
popf
andl
cmpl
sbb
sub
cmp
lock
adc
icebp
and
aaa
inc
cmp
inc
inc
inc
inc
dec
inc
push
inc
pop
inc
pop
inc
arpl
inc
outsl
inc
jne
jnp
addb
mov
inc
xchg
inc
popf
inc
mov
inc
mov
mov
inc
leave
inc
iret
inc
aad
fildl
inc
out
jmp
icebp
inc
testl
or
or
les
ret
sub
das
shlb
inc
rorb
pop
rcrb
shrb
shlb
rolb
xchg
rcrb
lods
shlb
ror
rol
rcr
loop
call
sar
xor
push
lret
adc
sbb
push
ret
sub
xor
sarb
rorb
rclb
pusha
shlb
shlb
sarb
rorb
pushf
shlb
mov
mov
mov
shl
out
in
shl
test
or
bt
sbb
sub
xor
and
push
and
insl
and
jle
xchg
and
and
and
and
and
and
and
and
cmp
xor
sub
xor
inc
sbb
dec
pop
pop
pop
bound
pop
insl
pop
je
mov
pop
fwait
pop
mov
pop
iret
pop
aam
loop
call
pop
or
adc
outsl
daa
addr16
cmp
dec
inc
addb
mov
inc
mov
inc
in
out
inc
cmc
inc
cld
inc
or
and
sub
xor
cmp
inc
rorb
shlb
rolb
cwtl
shlb
mov
shr
out
shl
or
and
mov
and
and
and
and
and
cmp
cmp
cltd
sbb
and
add
add
sub
popf
adc
sub
mov
fs
mov
jno
stc
and
push
and
cmp
cmc
sub
mov
lret
dec
xchg
lret
cs
xor
outsl
in
xor
or
mov
or
call
and
lods
fists
dec
push
das
or
imul
add
cmp
pop
sahf
lock
in
test
inc
cmp
inc
in
pop
add
add
jl
stos
sub
add
sbb
push
jbe
lret
out
push
jecxz
adc
sti
mov
lea
lcall
and
bound
out
jno
in
mov
adc
mov
addr16
mov
inc
or
add
mov
call
add
cmc
test
xchg
call
pop
lret
push
mov
jmp
add
inc
dec
add
popf
pop
mov
pop
pushf
push
fdiv
mov
out
stc
mov
inc
sub
jle
decb
push
cli
sahf
xor
sub
adc
dec
inc
stc
sub
mov
or
ss
test
pusha
mov
sub
fildll
lock
std
sub
mov
icebp
push
mov
pop
mov
data16
or
scas
inc
pop
pop
test
cmp
sub
inc
lds
add
adcb
cmc
loopne
adc
or
dec
sub
jl
cmc
outsb
add
loope
test
shll
jmp
xchg
call
or
test
adc
lret
in
xor
push
ljmp
fwait
adc
and
pop
dec
or
xchg
shlb
jecxz
call
notb
sub
mov
outsb
jae
cmp
enter
out
mov
xchg
mov
jle
mov
xor
popa
mov
shl
cltd
test
popa
es
lods
lret
fucomip
add
adc
fdivrl
adc
jb
rcr
add
inc
inc
cmp
clc
fsubs
fdivr
push
mov
and
mulb
mov
xorps
out
jmp
mov
in
outsl
xor
xchg
mov
je
cld
out
andb
jmp
adc
je
mov
lret
daa
mov
cmpsb
mov
mov
cld
adc
cmp
add
push
push
mov
cld
xchg
shlb
cmpsb
adc
std
sti
stos
dec
jmp
jno
add
sub
testb
div
mov
sbb
dec
jmp
and
and
dec
push
cmpsl
rclb
hlt
lods
or
xchg
xor
jp
mov
scas
rol
xor
adc
rclb
mov
add
adc
ja
mov
scas
popa
imul
sarb
imul
add
ret
jo
dec
and
adc
rorl
sahf
sahf
testl
mov
sub
mov
dec
test
int3
push
lock
pop
andb
nop
add
ja
push
sbb
lcall
lods
lea
je
mov
dec
mov
adcb
insb
push
cmp
pushf
nop
cmc
push
or
cli
pusha
mov
inc
jp
inc
int3
inc
push
xchg
lahf
sbb
icebp
add
imul
hlt
cs
movsb
push
and
push
xchg
stos
xchg
call
popf
mov
cs
push
jno
imul
or
lds
sbb
jle
lahf
xchg
daa
ficoml
call
push
loopne
enter
cltd
adc
test
sbbl
shl
dec
and
nop
call
into
or
scas
nop
mov
cltd
sbb
jns
sub
enter
loop
xor
cwtl
movsb
jbe
cli
nop
mov
das
lock
mov
lock
shrl
push
cmp
clc
jmp
xlat
xchg
cmp
cwtl
push
add
loopne
add
mov
jp
add
mov
in
data16
pusha
lret
movsb
cs
pop
dec
mov
test
add
lret
sti
hlt
mov
lods
add
and
addb
sbb
mov
ja
int3
mov
xchg
mov
mov
es
sbb
movsb
cmp
shl
jg
push
call
inc
test
lea
sub
mov
cli
faddl
or
sbb
es
xorl
repnz
subl
inc
popa
test
aas
mov
jecxz
mov
push
jecxz
pop
add
in
out
cmp
dec
cmp
icebp
pop
adc
xchg
jp
xchg
fsubl
jmp
jecxz
sbb
inc
test
xor
ss
or
mov
inc
cmp
push
cmp
mov
wbinvd
loopne
xlat
shll
test
sub
leave
mov
dec
sbb
jmp
and
stos
rolb
add
gs
sbb
lds
test
push
sub
cmp
inc
es
rcll
and
std
aad
adc
inc
fsubrs
and
scas
rorb
notl
notl
dec
push
sbb
pop
cltd
roll
nop
arpl
pop
call
mov
dec
xlat
in
fwait
mov
inc
loopne
out
lcall
mov
cmc
adc
sbb
sub
icebp
push
xorl
aaa
pop
inc
pop
mov
bound
leave
clc
cmpsl
int
jl
push
push
ljmp
adc
les
jb
dec
in
inc
arpl
fldl
xor
xchg
rorl
push
cld
test
lcall
loop
vsubsd
mov
inc
or
xor
enter
xor
nop
testb
cmc
rcrl
cli
jle
xor
loope
fisubrl
and
pop
dec
inc
push
sbb
hlt
or
dec
lock
jl
xor
lea
xchg
loopne
movsl
insb
mov
and
or
fdivl
and
cmp
gs
jecxz
jl
hlt
out
xchg
js
ret
lods
hlt
loope
xor
pushf
dec
adc
outsb
aam
xchg
mov
mov
pop
repnz
dec
jae
mov
jnp
lods
dec
add
insb
repz
rorl
jbe
jmp
xchg
ret
or
adc
or
add
pop
nop
sarl
pop
pop
sub
or
push
lods
leave
popa
xor
xchg
or
dec
mov
cmp
push
popa
add
jge
xchg
adc
inc
lret
mov
sahf
jl,pn
inc
sbb
jge
push
imul
inc
decl
mov
lods
cmp
dec
shll
inc
mov
mov
mov
jns
js
scas
movsl
mov
mov
sub
push
lds
pop
or
pushf
push
push
in
pushf
je
movb
movsl
pop
call
jge
dec
add
test
call
push
mov
aad
call
pushf
out
mov
mov
movsl
ret
in
mov
add
ss
bound
rclb
pop
push
mov
or
lds
stos
and
call
pop
inc
sub
or
mov
pop
jmp
rcrb
add
jb
and
push
sahf
roll
sub
scas
popf
inc
ss
pop
loop
inc
ss
push
scas
pusha
lahf
jp
fld
loopne
xchg
inc
and
call
stos
icebp
push
add
adc
xchg
insb
add
dec
pusha
popf
add
ss
jo
add
stc
pop
popf
dec
mov
pop
lret
pop
push
dec
sbb
push
xor
pop
mov
pop
push
xchg
push
cmp
xchg
cmp
xchg
adc
dec
push
xchg
add
pop
test
pop
xor
jp
pop
leave
ss
pop
mov
stc
mov
ja
add
fs
jp
pop
push
shll
js
fwait
jne
inc
pop
je
loope
fcomps
decb
or
ret
sahf
mov
xor
jno
mov
cli
dec
xchg
adcb
into
cltd
pop
ret
out
pop
cmp
adc
push
xor
adc
mov
fs
lcall
nop
xorb
dec
call
cmp
leave
inc
push
dec
sub
or
adc
or
fisubrs
in
call
push
inc
mov
dec
push
insb
dec
lahf
cmpsb
push
cmpsl
or
cmpsl
shlb
mov
aam
mov
cs
push
imul
fwait
lea
fstps
push
rolb
fmuls
push
xor
jge
outsb
call
stos
lock
lods
jl
enter
inc
sbb
icebp
rclb
xchg
dec
sub
push
xchg
jge
inc
push
jge
inc
or
pop
and
xor
call
or
aaa
or
mov
pop
mov
negl
mov
pushf
dec
xlat
fnsave
add
dec
push
aas
sbb
in
enter
lea
push
adc
pop
lahf
sub
cmp
or
mov
mov
imul
cmp
push
movsb
pop
dec
and
adc
pop
and
dec
sub
and
inc
adc
les
push
scas
fistpl
scas
mov
pushf
cwtl
sbb
mov
cld
popa
test
inc
setge
pusha
pop
in
test
cwtl
test
mov
push
dec
push
in
clc
cmp
ljmp
jl
push
pop
mov
pop
mov
sbb
movsb
push
repz
pxor
xchg
sbb
cli
and
adc
sub
sub
and
pop
in
mov
adc
fsts
pop
bound
jae
ss
ljmp
sub
adc
xor
ja
sub
mov
xor
sub
cmp
scas
cmp
das
mov
xchg
pop
mov
inc
and
pop
mov
cmc
in
mov
andl
dec
adc
mov
decb
pushf
aaa
in
mov
mov
add
outsb
jne
call
popa
cmp
das
arpl
cltd
xor
cmpsb
or
call
pushf
in
sub
mov
add
sbb
cli
dec
or
lods
shll
fists
xor
mov
push
outsb
sub
call
enter
push
outsb
jae
mov
jp
test
imull
and
lods
push
shl
push
lcall
movl
jae
mov
mov
push
push
test
ss
enter
mov
xchg
cltd
xlat
stos
cmc
jl
push
rcl
pushf
das
lods
pop
mov
pop
cmp
push
sub
testl
shlb
sub
dec
sub
adc
add
push
out
jbe
sahf
add
scas
cld
dec
or
and
push
push
adc
mov
inc
out
stos
jp
inc
lods
mov
push
ret
push
push
push
xor
mov
cmp
je
pop
xor
mov
xlat
lcall
add
sbb
lret
add
mov
mov
push
add
xor
inc
jp
jne
dec
mov
aaa
pop
rcll
inc
or
adc
testb
add
jmp
loopne
mov
and
lods
testb
xchg
fwait
push
xor
xor
lods
iret
cmpsl
dec
mov
enter
inc
mov
sub
and
fwait
insl
inc
orb
dec
mov
sbb
adc
fdivs
insb
cs
inc
loope
fwait
scas
inc
dec
cmp
mov
pop
sarb
cmp
fwait
adcl
cmp
xchg
push
xor
mov
push
add
jns
and
out
jno
hlt
inc
dec
out
cs
lahf
jo
jle
into
xor
or
pop
push
pop
or
ja
push
arpl
push
jns
jno
scas
shll
xor
dec
popf
jmp
dec
mov
scas
dec
and
rcll
fwait
inc
jns
dec
jno
iret
jno
pop
sbb
jecxz
fwait
ljmp
adc
or
imulb
jns
cmpsb
jp
mov
or
adc
adc
aaa
jmp
adc
add
mov
adc
decb
xor
dec
test
xor
sub
push
or
sub
leave
mov
push
lcall
fmuls
push
insl
es
fcompl
cwtl
es
push
ret
and
fs
aas
push
sbb
ljmp
dec
pop
cmp
sub
adc
pop
inc
shlb
sub
pop
inc
cmp
jmp
sti
fistl
ficomps
cmp
jo
xor
mov
fsubs
add
lock
push
fcmovne
mov
mov
push
nop
out
fidivl
cmp
and
pop
push
mov
push
inc
aam
je
inc
fcoms
lea
out
je
pushf
leave
jbe
jmp
dec
cmp
pop
shll
fwait
add
es
xchg
push
push
nop
fidivl
adc
xchg
js
push
and
or
ret
mov
xchg
pop
std
and
cmpsl
adc
jnp
pop
pop
xchg
es
sub
jmp
push
sub
xchg
push
psadbw
mov
fimull
enter
or
add
and
xchg
fdivrs
pop
fsubl
test
or
pop
xor
push
imull
in
pop
or
mov
push
push
or
cmp
pop
movsl
sbb
pop
pusha
mov
and
mov
ret
xchg
xchg
sub
lret
imul
push
cs
hlt
js
lcall
jmp
in
clc
push
pushf
or
insl
push
xor
stc
das
mov
hlt
mov
adc
pop
ret
icebp
mov
scas
and
jmp
dec
inc
xchg
cltd
cltd
adc
sbb
push
push
sbb
inc
lods
mov
in
inc
incb
push
mov
mov
shll
mov
pop
or
ljmp
push
mov
pop
mov
out
push
or
adc
loope
mov
jmp
cmp
sub
sar
inc
push
sub
lods
mov
stc
mov
cmp
or
sti
cmp
scas
or
lock
dec
rcl
mov
mov
fimull
jge
out
or
cmp
rclb
clc
lahf
inc
dec
fiaddl
into
sub
xor
mov
cmpsb
in
or
or
test
mov
test
jmp
pushf
nop
pop
pop
xor
mov
fwait
sbb
jae
dec
call
aaa
or
popa
lcall
test
and
sub
test
lods
cli
mov
icebp
mov
dec
iret
movsl
dec
aas
xchg
adc
enter
loope
pop
cld
inc
mov
mov
inc
leave
je
push
out
pop
test
push
adc
pop
or
jno
or
pop
xchg
mov
push
add
mov
iret
out
mov
cmp
jne
mov
push
scas
fldcw
inc
push
sti
jge
cmp
cs
push
cmp
inc
inc
shr
jae
cmp
xor
shrb
or
pop
call
fwait
test
cltd
jno
dec
test
je
add
cltd
cmp
mov
xlat
dec
mov
neg
std
pop
mov
imul
ja
inc
adcl
call
subl
ja
inc
dec
imull
stos
and
testl
lret
push
jbe
test
jp
inc
data16
dec
pop
mov
mov
cli
ret
sub
cmpsb
lock
jne
ss
dec
or
jmp
xchg
dec
add
aam
cmp
mov
jmp
pop
xchg
in
inc
pop
jno
fsubrl
ficoml
push
in
or
cmpsl
lock
inc
push
push
lcall
jbe
adc
sbb
xor
mov
nop
sar
stos
dec
add
add
add
aaa
add
add
pop
add
add
add
add
outsb
add
insb
add
add
push
add
add
add
add
pop
add
add
imul
add
jno
add
add
inc
add
add
add
pop
add
add
add
inc
jne
add
je
add
add
add
add
dec
add
add
add
add
add
add
add
add
dec
add
push
add
add
add
inc
add
add
add
add
dec
add
add
add
add
cmp
add
add
dec
push
push
add
add
add
dec
add
add
add
add
jbe
add
add
add
add
add
add
add
add
add
add
add
ja
add
push
add
add
add
dec
add
add
add
add
add
push
add
add
add
add
add
add
add
jp
add
add
add
inc
add
imul
data16
add
add
add
add
add
dec
add
cmp
add
add
bound
add
add
add
add
add
jo
add
add
push
xor
jp
add
add
add
add
xor
push
add
js
add
add
dec
add
add
add
jo
add
add
add
add
add
add
push
add
add
add
inc
js
add
pop
add
add
add
add
insl
add
add
add
jne
add
add
xor
pop
add
popa
add
push
jne
add
add
inc
add
popa
add
jo
add
add
add
inc
add
add
add
add
add
add
jne
imul
add
add
add
add
jno
add
push
add
dec
add
add
stos
dec
jbe
dec
jne
les
cmp
je
dec
gs
mov
out
xchg
out
mov
add
rcrb
mov
outsl
pop
mov
call
jle
push
clc
mov
xor
stos
jne
jle
cs
repnz
inc
adc
stos
inc
and
xchg
xor
fwait
sbb
xchg
loopne
pop
dec
pop
sub
inc
clc
jbe
add
fs
add
mov
js
dec
jne
pop
adc
mov
dec
lock
sub
add
adc
and
push
cmp
jnp
lods
or
inc
ret
push
adc
cwtl
cli
cltd
ss
push
sbb
jns,pt
pop
ret
or
or
jne
pop
dec
cmp
mov
stos
dec
jae
je
inc
push
inc
outsb
mov
divl
or
xchg
dec
or
add
cs
cmp
fiaddl
stc
adc
sbb
cmp
inc
bound
pop
lea
jmp
in
pop
call
adc
rclb
mov
movsl
mov
mov
lea
xor
mov
loope
call
addr16
lods
mov
bound
fwait
jne
loop
das
loopne
add
insl
lods
fildl
fwait
add
stos
lods
lea
into
lods
test
jbe
cwtl
sub
test
push
sub
jne
movaps
mov
push
pop
mov
cmp
dec
jmp
movsl
popf
aam
movsl
cmp
mov
xchg
lods
je
add
in
shll
aaa
push
fmull
xor
push
mov
xlat
adc
lcall
outsb
out
call
xchg
cmp
adc
and
neg
lret
ret
inc
jmp
mov
mov
mov
inc
lcall
insl
add
icebp
jae
push
stc
mov
dec
dec
cmp
insb
xchg
cmp
iret
add
xor
aas
fwait
inc
lock
in
or
mov
jp
and
inc
fdivrl
sub
fidivs
and
push
inc
push
fs
xchg
call
and
jp
outsb
cmp
push
inc
outsb
aad
xorb
mov
mov
push
fwait
outsb
xchg
into
sub
sbb
inc
in
ds
or
out
out
sahf
aas
and
mov
mov
mov
adc
cli
mov
ss
cmp
pop
js
xor
jae
shlb
aaa
mov
dec
or
mov
or
xor
call
lods
xor
dec
adc
loop
add
cmpsb
sahf
xor
xor
incl
jbe
das
cmpsl
and
push
jmp
add
adc
lds
jns
in
mov
imul
divb
pop
dec
fabs
sbb
sbb
into
pop
dec
movsb
ret
shlb
mov
jmp
jmp
jge
adc
xchg
dec
cwtl
mov
inc
into
cmp
sbb
jmp
outsl
cli
sar
inc
cs
inc
lea
add
xor
cltd
out
mov
push
int3
cmp
push
lods
imul
sbb
stos
pop
mov
push
data16
push
xchg
divb
inc
jg
inc
insb
cmp
inc
inc
pop
fsts
out
push
aas
sub
jae
and
jne
ret
dec
pop
cld
pop
leave
pusha
dec
lcall
add
into
add
xchg
out
sti
inc
mov
lods
add
data16
mov
into
aad
xchg
pop
mov
sub
push
mov
out
jp
fwait
push
xchg
shlb
cmp
fcompl
cs
subb
xchg
adc
adc
std
or
fisttpl
cmp
das
push
jmp
mov
aas
xchg
icebp
pop
cld
mov
mov
pop
sbb
sub
push
and
mov
jmp
js
dec
xlat
xchg
xor
push
data16
cli
fs
push
lahf
insl
in
or
xor
xchg
sar
test
lahf
lea
les
jno
xor
mov
adcb
push
aam
mov
lods
test
pop
dec
cmpsl
fldcw
nop
dec
inc
mov
or
outsb
mov
jo
push
ficoml
call
lea
jp
fistps
sub
push
or
xor
pop
fidivrs
or
adc
repnz
pop
jp
push
mov
lock
cmpsl
mov
jle
inc
jmp
lcall
xchg
scas
sbb
mov
jbe
jb
movsl
shlb
mov
sbb
xor
cmpsl
call
inc
xchg
ljmp
mov
inc
jmp
pop
cs
push
mov
xchg
cld
and
dec
hlt
pushf
dec
js
add
xchg
mov
bound
rcrl
and
sti
paddd
xor
sbb
daa
xor
push
int
nop
jae
cs
pushf
fmul
mov
outsb
sub
dec
add
notb
mov
je
add
fs
dec
inc
idivl
xchg
inc
sti
stos
je
push
fcomi
push
sarb
loopne
dec
in
xchg
cmp
jle
jne
loopne
in
imul
into
push
pusha
lahf
subb
loope
push
cwtl
mulb
pop
shl
lahf
add
cli
add
push
cmp
fiadds
adc
addr16
mov
sub
rcrb
outsl
loope
xchg
add
in
push
add
aad
push
cmp
and
sarb
xlat
cld
sbb
nopl
mov
loopne
adc
cmpsl
jg
mov
lcall
mov
jno
mov
push
add
cmp
popa
push
add
xor
fnstenv
cwtl
inc
mov
push
adc
pop
je
lock
imul
in
dec
fstpl
mov
dec
jmp
or
sub
cmp
mov
xor
lcall
jae
pushf
sub
adc
cld
mov
sub
adc
mov
sbb
and
xchg
push
or
push
xchg
adc
xchg
xchg
mov
cmp
aad
ret
jl
fisubrs
das
or
and
cwtl
arpl
sbb
aad
sub
cmp
push
lods
imul
jl
inc
lods
sub
push
pop
fadd
jge
ss
sub
daa
mov
movsb
into
and
push
test
into
testb
aad
jecxz
pusha
jmp
sub
cmp
push
hlt
pop
in
into
sub
cmp
add
or
cli
jle
xchg
es
xorb
dec
pop
nop
lock
add
popl
arpl
push
ret
das
dec
jne
xchg
in
adc
es
out
ss
cli
lcall
sti
mov
mov
sub
pusha
dec
jns
adc
or
addr16
out
pop
lods
mov
pop
subl
das
push
sti
cmp
cmc
dec
or
jp
addr16
sbbl
mov
cwtl
dec
loopne
aas
or
pop
repnz
pop
movsl
jmp
std
adc
imul
xchg
xchg
rorl
imul
mov
sbb
pusha
fdivrp
lea
adc
dec
arpl
jecxz
pop
xchg
subl
mov
cld
add
jmp
mov
stos
iret
lea
lods
sbb
sbb
jl
add
mov
cmpsl
push
adc
inc
cltd
inc
or
lods
ds
mov
nop
arpl
ds
jmp
and
enter
vmaxsd
mov
xor
lods
sbb
xchg
cmp
daa
pop
mov
in
mov
dec
push
stos
xor
sub
add
push
sub
jae
lds
mov
lods
cmp
push
shrb
jl
adc
mov
add
test
shrb
dec
outsb
sub
lods
or
int3
or
or
mov
xorb
sub
shlb
loope
sbb
adc
cwtl
popa
adc
popf
pop
mov
js
test
or
push
or
mov
xor
ja
fsub
cmpsl
les
mov
shrb
inc
or
pop
or
xchg
lahf
scas
xor
mov
repz
sahf
pop
scas
jno
jmp
mov
iret
and
add
add
sbb
mov
ss
repnz
mov
in
pop
cli
mov
and
adc
in
sbb
push
pushf
ret
cmpsb
push
fdivs
dec
mov
or
lods
push
nop
push
andl
cld
sarl
xlat
fcoml
mov
in
mov
push
rcrl
mov
mov
mov
dec
adc
int3
hlt
jp
xor
movsl
sub
xchg
mov
xchg
das
mov
cmc
adc
mov
movsl
scas
cmp
push
push
push
call
or
cltd
adc
mov
shl
push
cmp
arpl
ret
imul
sub
xor
aam
sbb
out
dec
cltd
or
xorb
ja
add
jnp
in
ss
cwtl
addr16
popf
lar
mov
sub
out
sbb
scas
adc
fdivrl
addr16
nop
lret
jp
jmp
cmp
xor
test
xor
in
sub
cmp
xchg
jns
cmp
xor
lahf
xor
fistps
and
jae
dec
jmp
jo
sti
pop
or
loopne
mov
add
adc
jne
shr
dec
cmpb
pop
push
sub
pop
push
adc
push
cli
inc
ss
sti
and
mov
dec
pop
in
out
jne
adc
or
mov
jmp
loop
sbb
jbe
nop
add
push
rol
pop
call
pusha
or
ljmp
lcall
xchg
push
mov
popf
cmpsl
mov
adc
sub
push
fcom
dec
or
and
adc
adc
xor
in
ficoms
xor
mov
xchg
push
cmc
mov
cmp
jp
jne
xor
push
mov
pop
sbb
orb
rcrl
xor
subl
sub
cld
add
jle
ret
jns
test
mov
xchg
push
push
push
orl
push
mov
inc
or
out
call
mov
cmp
push
mov
popf
pop
fisubs
sub
sub
pop
movd
in
test
sub
hlt
inc
inc
addr16
dec
pop
imul
jae
push
in
lds
iret
add
fisttps
mov
add
enter
xor
xor
test
stos
push
xchg
jg
mov
sbb
inc
jge
add
jmp
mov
nop
repnz
sbb
sub
dec
fstpl
icebp
pop
lcall
imul
les
movsb
lret
cwtl
cld
mov
or
xchg
inc
mov
es
lret
lods
cmpl
mov
rclb
pop
xor
leave
pop
jns
jns
cmpsb
es
add
push
cmc
inc
jbe
call
sub
stos
movl
adc
cltd
jg
ljmp
sub
and
imul
push
das
cs
jbe
fld
xchg
inc
and
lcall
jno
out
scas
testb
or
jne
popf
test
add
rorb
lcall
shlb
test
insb
insl
add
xchg
in
xor
aas
stos
push
push
cmp
pop
mov
xlat
dec
fstpl
popa
clc
pop
jl
outsb
pusha
pop
pop
pop
bound
insl
pop
mov
scas
sub
jns
aas
add
loopne
mov
add
jmp
ss
mov
cwtl
lods
aaa
mov
and
add
mov
lock
aaa
cld
scas
sbb
lcall
or
lods
lret
sti
jno
cltd
sbbb
and
insb
cs
jp
aaa
cmp
movsl
inc
mov
push
stos
pushf
lahf
call
ljmp
xchg
sahf
outsl
stos
mov
add
xchg
sbb
pop
jmp
cli
imul
aad
xchg
mov
jcxz
sub
dec
inc
sub
pop
add
dec
insl
mov
lods
add
inc
das
dec
movsb
dec
mov
dec
adc
lahf
cmp
pop
icebp
push
subl
loopne
push
push
ja
and
and
outsb
movsl
cmp
add
mov
jmp
sub
lods
and
sub
sbb
adc
mov
and
xchg
adc
pushf
adc
cmpsl
and
lds
or
int
mov
cmp
daa
je
lds
mov
mov
dec
outsl
inc
loop
and
cli
dec
out
sbb
loopne
lahf
sbb
xchg
mov
loop
adc
popf
add
and
sti
and
mov
mov
subb
scas
pop
jp
and
lahf
pop
outsl
and
out
mov
sbb
mov
add
and
push
int
hlt
ret
mov
imul
sub
movsb
lods
mov
mov
cltd
ljmp
mov
xchg
sub
std
sub
push
pop
inc
fsubl
mov
cmpsb
mov
je
cmp
xor
ss
out
jnp
jge
and
pop
lret
psubusw
sti
cmp
jg
cmp
sub
lods
sub
mov
cmp
push
popf
push
push
test
and
es
pop
into
ljmp
je
rclb
stos
cld
test
pusha
stos
jle
pop
mov
out
mov
jbe
cmp
xchg
jae
cli
and
dec
cmp
jb
sbb
js
fwait
dec
scas
or
jp
arpl
stos
cmp
decb
test
shlb
js
xor
jmp
and
add
nop
idivb
xor
lds
iret
mov
imul
cmp
enter
imul
imul
jne
fdivrs
fmul
mov
cmpsl
pop
or
add
adc
add
jno
dec
inc
or
and
movsb
or
mov
pop
ss
cmp
mov
cmpsl
ss
ret
subb
pop
cli
fcomps
pop
ret
lcall
addr16
dec
je
std
imul
sub
inc
cmpsb
insb
popa
pop
or
inc
jne
mov
sub
test
shlb
add
push
into
dec
dec
rorb
dec
lea
lret
jb
push
push
cmp
stos
rcrl
je
sub
xchg
scas
cld
nop
data16
push
or
pop
faddl
pop
stos
xchg
stc
push
or
mov
mov
es
fisubs
pop
cmp
psrlw
outsb
pop
push
arpl
inc
mov
add
in
adc
scas
xor
pop
dec
and
add
pop
push
mov
out
inc
add
cmp
cmp
inc
es
push
outsb
mov
in
mov
out
jg
cld
lds
or
sub
outsl
jl
jno
xchg
push
push
sub
gs
lods
sub
push
dec
sbb
mov
rcl
mov
in
incb
add
dec
xor
xor
les
arpl
sub
je
lahf
add
stc
sar
in
rcll
lcall
push
cmp
push
in
add
mov
or
or
mov
inc
iret
fs
cmp
loop
cmp
fiaddl
mov
jmp
jge
bound
aam
xor
pop
mov
and
popf
adc
cwtl
popa
cmp
pop
and
jmp
incl
jp
test
aam
cmp
add
add
add
add
add
add
add
add
add
add
add
ja
add
jb
add
add
dec
inc
add
xor
dec
add
add
cmp
push
add
add
add
push
add
add
dec
push
add
add
add
xor
dec
add
add
dec
add
dec
add
add
add
add
add
push
dec
add
add
add
add
inc
add
data16
add
add
bound
add
add
push
add
jo
add
add
push
add
jp
jno
add
push
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
aaa
push
add
add
add
xor
add
jb
add
add
add
add
add
add
je
add
push
add
add
add
add
cmp
arpl
add
ja
add
add
add
add
add
add
push
add
inc
add
add
inc
add
add
add
add
addr16
js
add
add
add
imul
add
push
add
add
add
add
xor
add
dec
add
add
jb
add
add
outsb
xor
add
inc
add
inc
add
add
add
add
add
xor
insb
add
add
add
dec
add
add
jae
add
add
add
dec
add
add
add
add
add
dec
add
add
add
xor
add
jbe
add
add
add
add
add
inc
add
add
outsl
imul
add
add
add
add
add
add
add
add
arpl
add
xor
add
add
add
add
iret
cmp
add
iret
aas
mov
jl
pop
add
jnp
dec
add
dec
out
loopne
push
mov
or
push
stos
adc
adc
lods
out
add
push
adc
lea
sub
scas
and
mov
xorb
popf
rcrb
scas
mov
pushf
push
imul
mov
gs
mov
sbb
pop
in
mov
mov
fs
je
lods
das
push
xchg
mov
cltd
cltd
mov
pushf
decl
jmp
push
gs
insb
outsl
arpl
cmp
inc
xchg
mov
or
nop
mov
and
mov
adc
shlb
mov
jp
push
call
xchg
fisubs
rcr
call
mov
les
in
mov
xchg
jmp
mov
mov
mov
mov
fistpll
cmp
int3
mov
pushf
les
enter
int3
jbe
fcmovbe
pushf
fsubrl
std
fcomps
call
cmpsl
in
lock
call
jbe
mov
cmpsl
hlt
mov
dec
idiv
shll
scas
cld
jno
dec
and
les
inc
mov
inc
mov
cmp
or
sbb
adc
and
sbb
cmp
and
xor
sub
cmp
xor
inc
fidivrl
mov
mov
cmp
inc
lahf
dec
cs
jbe
fimull
push
scas
dec
mov
cmp
push
pushf
pop
xchg
mov
mov
xchg
push
jo
pusha
jbe
fisubl
cmpsl
push
insb
lahf
subb
jbe
fidivl
cmpsl
js
mov
std
jl
nop
xorb
test
cmp
mov
test
xchg
mov
std
pushf
lahf
mov
fisubl
sarb
std
lods
lahf
aam
mov
fcomp
mov
fsubl
std
mov
repz
subb
mov
cld
rcrb
in
mov
sub
mov
lods
ret
jns
jl
es
enter
dec
pushf
clc
mov
fcmovnbe
mov
cltd
mov
fcompl
cli
or
inc
push
into
push
dec
shld
mov
js
je
sahf
adc
cmpsl
movb
pop
divl
adc
cli
mov
imul
mov
xor
pusha
sbb
mov
mov
mov
jo
test
mov
or
xchg
push
push
push
push
call
lret
mov
jle
and
push
add
xchg
jl
enter
movsl
call
fisubrs
add
sarb
pop
cmp
stos
mov
mov
push
pop
fmull
int
mov
out
das
call
mov
mov
add
and
add
ljmp
push
push
mov
mov
xchg
out
cmp
xor
sub
xor
stos
ljmp
sahf
mov
add
mov
adc
mov
leave
push
call
mov
mov
pop
ret
repnz
push
iret
jb
push
lock
mov
es
xor
popf
call
enter
fnstcw
incl
movsb
aam
inc
jno
sub
sahf
inc
out
cld
rclb
ds
xchg
sbb
push
xchg
jecxz
cmp
mov
adc
xchg
mov
or
repnz
sbb
or
mov
or
mov
out
aam
mov
dec
xor
mov
stos
call
int
je
push
jb
add
ljmp
mov
mov
xchg
aas
std
roll
call
fstps
adc
mov
xor
add
pushl
push
sub
ljmp
jno
cld
rcr
orl
mov
mov
lods
je
dec
mov
add
fistl
lods
mov
and
cmp
pop
adc
mov
xchg
dec
push
sbb
sarb
es
mov
inc
xor
mov
dec
fmull
xchg
and
and
cs
cmp
jne
sub
sahf
or
data16
daa
loop
sti
out
mov
jg
into
prefetch
or
repnz
pop
dec
fucomi
stos
cld
pop
xchg
or
inc
xlat
repnz
xor
sarl
pop
stc
adc
in
daa
pushf
push
add
push
cli
aas
cmpsb
xchg
les
sbb
pop
lock
and
shrb
clc
inc
or
and
add
sbb
mov
sub
push
call
cmp
icebp
leave
es
pop
ljmp
out
lret
call
movsl
sbb
sbb
sbb
loope
cmp
sub
cmpsb
outsb
jae
cld
call
mov
and
cmc
out
jne
push
sbb
dec
lods
mov
loope
push
mov
movsl
call
pushf
mov
lds
dec
cld
mov
out
cld
insb
idivb
leave
cmp
sub
push
loope
shll
repnz
call
sbb
hlt
xor
pop
loope
lcall
call
repnz
in
in
daa
into
aaa
push
mov
data16
mov
es
leave
push
or
pop
sub
mov
cli
jmp
stos
stos
cmp
outsb
incl
mov
mov
inc
push
jle
pop
jge
call
cwtl
inc
and
jnp
sub
push
loopne
test
mov
enter
mov
mov
jae
push
mov
pop
sub
gs
sub
scas
sbb
mov
pop
fistl
push
xor
and
lahf
loopne
mov
out
adc
out
cmpl
mov
push
stos
dec
and
xor
ja
or
xchg
test
xchg
scas
call
and
in
ljmp
jbe
mov
mov
hlt
or
add
aas
call
out
inc
cwtl
or
das
fldlg2
jmp
out
pop
int
pushf
lock
pop
daa
call
push
call
and
lods
push
mov
iret
push
lret
in
pushf
pop
pop
lcall
mov
or
add
add
cld
mov
arpl
iret
iret
mov
in
or
lods
mov
insb
in
and
push
cmp
adc
push
sub
mov
sbb
adc
cmpl
pop
or
das
jge
cli
imul
mov
adc
shrl
dec
pop
addr16
cmp
fdivrp
out
xchg
mov
ret
call
repnz
sbb
push
sti
inc
mov
stos
inc
dec
sub
test
mov
hlt
je
jnp
fistps
das
ss
xor
mov
and
in
aaa
mov
pop
mov
idivb
add
cwtl
xchg
lcall
ret
add
jmp
mov
dec
add
adc
mov
sub
lods
push
mov
negl
xor
pop
cmp
lcall
inc
xor
or
ret
mov
loope
cmpsb
push
ret
loop
mov
movsl
lock
jp
aas
dec
mov
stc
call
push
sbb
mov
dec
scas
mov
sahf
cmpl
lods
push
jmp
leave
cmp
xchg
out
and
cmp
dec
sbbb
out
push
push
xadd
push
or
jp
call
popf
cmc
cwtl
jbe
jge
add
stos
sub
test
inc
scas
sbb
sbb
push
and
sbb
repnz
pushf
pop
dec
push
adcl
in
xor
aaa
mov
call
cmp
add
push
lea
pushf
push
hlt
scas
mov
cmpb
mov
push
psrld
stos
fbstp
enter
rorb
dec
daa
mov
mov
sbb
dec
stos
mov
pop
aaa
icebp
mov
xor
mov
sahf
out
js,pn
mov
shl
push
push
add
stos
push
xor
xor
sahf
rorb
ficoms
das
or
jmp
sub
xchg
insl
pushf
push
add
push
mov
movb
es
imul
push
repz
mov
mov
mov
or
in
mov
loop
xchg
mov
ret
pop
mov
dec
push
adc
mov
scas
in
xor
into
mov
fnstenv
sub
sbb
std
or
xorl
sub
fcomip
xor
fwait
stos
mov
xchg
adc
loop
pop
jmp
cld
jno
cmp
adc
lods
lret
call
ja
inc
enter
stos
shll
mov
stos
mov
sbb
call
fwait
scas
jg
in
inc
add
xchg
add
inc
aad
sub
cmp
pushf
jmp
jp
lahf
sub
fwait
aad
call
dec
clc
ret
mov
cmc
add
or
push
mov
adc
push
push
cmp
push
stc
cvtps2pd
lcall
xchg
sub
xor
scas
sub
jb
in
cmp
sbb
add
call
fadds
cmc
cmc
dec
or
addr16
sub
cmp
xchg
xbeginw
mov
dec
test
insb
pop
int3
and
sbb
out
call
in
hlt
fsubrs
call
jno
adc
lcall
ljmp
push
cs
les
lods
push
scas
or
or
mov
add
in
or
dec
mov
in
xchg
cld
xor
loopne
push
inc
jp
inc
sti
pop
int3
jb
call
outsl
pop
xor
mov
jmp
mov
xchg
cmp
xor
call
je
mov
sbb
xchg
push
push
adcl
cwtl
cmp
dec
je
mov
add
out
or
mov
in
mov
xchg
loop
or
push
cmpsl
sub
xchg
mov
or
cmp
mov
jbe
pop
scas
lahf
ss
jp,pn
xchg
mov
mov
das
lahf
cmpl
jecxz
jp
push
inc
push
mov
mov
test
push
and
adc
sbb
call
cs
xchg
fistpll
push
mov
dec
lods
call
repnz
sbb
xor
in
dec
retw
das
int
daa
pushf
nop
pop
sub
xor
gs
xchg
push
inc
js
add
aaa
aam
sub
inc
je
mov
adcb
jecxz
es
jmp
mov
jnp
shrb
aas
mov
mov
mov
int
sub
lret
and
lock
mov
sahf
mov
mov
or
sbb
jmp
ficoml
pop
test
pop
je
or
repz
sbb
insb
stos
popa
cs
jle
adc
mov
mov
sub
mov
adc
xchg
insb
icebp
mov
adc
sbb
sbb
and
jne
lods
sub
enter
hlt
rdpmc
aaa
xchg
sahf
scas
test
je
push
mov
and
mov
push
pop
clc
rorb
mov
cmpsl
out
andb
mov
inc
cli
mov
into
jae,pn
call
lods
cmp
cmp
jp
mov
dec
lret
jo
mov
xor
jns
xchg
icebp
cmovbe
push
cmc
dec
stos
sub
loope
mov
lds
lret
push
jle
add
mov
iret
sbb
cli
call
fisubl
fiadds
movsb
xchg
cmpsl
in
mov
mov
scas
dec
cmp
adc
stc
pop
cmp
sub
out
jecxz
negb
sbb
cmpsl
pop
sbb
xor
mov
je
sub
xchg
sbb
mov
aas
clc
movsl
mov
sbb
add
mov
lods
jp
hlt
fsubrs
sbb
ljmp
xor
mov
mov
mov
notl
arpl
jecxz
mov
push
jbe
dec
pop
sbb
cmp
je
stos
mov
cmp
cmp
dec
mov
push
pop
jae
aad
test
jp
scas
sbb
stc
cmp
inc
lcall
mov
jl
mov
out
pop
popa
xor
mov
call
sub
incl
call
mov
mov
cmpsb
call
fs
shr
ds
mov
out
add
cltd
add
push
dec
fidivl
pop
call
outsl
mov
or
sub
imul
outsb
pop
es
mov
lret
cmp
dec
sbb
jae
scas
das
fmull
dec
cli
aaa
sbb
cmp
das
repnz
inc
xchg
inc
popf
pop
mov
add
out
faddp
dec
cld
xor
lcall
sbb
ret
mov
or
fildl
aaa
int3
mov
dec
sub
pop
sub
jns
xchg
dec
cmp
mov
inc
fcompl
in
aaa
sub
xchg
inc
scas
xor
in
jo
outsb
jno
ud0
dec
shll
pushf
push
mov
stos
push
mov
cmp
push
push
push
call
loop
jne
repnz
movsl
mov
ljmp
xor
stos
sub
std
mov
shlw
das
mov
cmp
adc
pushf
mov
mov
xchg
xchg
mov
dec
pop
push
xchg
mov
add
jo
in
lods
sahf
ss
ja
out
and
lahf
cmp
into
sub
fwait
pop
adc
mov
adc
lea
imul
mull
mov
inc
cld
xchg
andb
mov
sbb
mov
inc
call
cld
adc
test
adc
or
pop
stc
and
mov
js
orl
cmp
adc
rcrl
test
jl
sbb
std
loopne
jb
mov
lret
stos
mov
ret
push
outsb
inc
sub
popa
xchg
out
pop
sub
movsb
mov
mov
imul
mov
mov
xlat
ficomps
and
insb
mov
in
mov
dec
cld
jns
mov
lret
sti
shll
enter
lock
sub
cmp
addr16
insb
lock
cmp
pushf
jl,pt
mov
pusha
jp
dec
adc
sbb
add
out
pop
ja
sbb
ljmp
jns
das
mov
fcmovu
mov
push
movsb
push
push
lea
and
and
adc
inc
arpl
imul
jns
push
mov
addr16
lret
or
arpl
enter
imul
aad
ss
into
inc
jb
nop
push
fdivrs
sub
scas
mov
xor
aam
or
adc
bound
loopne
ja
or
lret
or
and
xor
pop
mov
push
push
cld
mov
xlat
dec
mov
sbb
test
fadd
dec
call
push
inc
or
scas
cwtl
decl
gs
add
add
add
add
add
add
add
jne
add
xor
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
dec
add
insb
inc
add
push
inc
add
dec
add
push
cmp
add
add
push
add
add
add
add
push
add
add
add
add
xor
add
xor
add
push
add
jae
add
add
dec
add
add
add
arpl
add
add
add
add
add
add
add
add
cmp
push
aaa
add
add
add
add
add
add
add
push
add
add
add
add
outsb
add
add
push
add
add
imul
pop
add
push
add
add
add
add
add
push
add
jbe
inc
add
push
add
outsb
add
add
arpl
add
add
add
add
add
add
add
jb
add
push
add
pop
add
add
inc
add
add
dec
add
push
pop
add
jne
add
add
add
add
cmp
add
pop
add
add
add
insl
add
add
arpl
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
and
dec
sub
or
das
sbb
cmp
mov
mov
pop
repz
add
popf
jo
imulb
sub
adc
push
push
call
push
hlt
adc
test
add
sbb
jbe
out
mov
push
xchg
cwtl
lods
scas
sbb
je
rcrl
xchg
sbb
loope
add
loope
ret
repz
aam
cltd
inc
movsl
xchg
cmc
xor
mov
incl
sub
fistl
aaa
ljmp
int3
jae
outsl
mov
pushf
das
mov
mov
es
xchg
mov
je
insl
ja
insl
ljmp
dec
and
cmc
jle
dec
dec
sti
cwtl
mov
pushf
sub
shl
push
add
xchg
jne,pt
jno
lds
mov
push
outsb
pop
aam
jle
sub
int3
mov
and
sarb
or
xchg
and
pop
inc
sbb
adc
orl
jp
aam
inc
out
test
in
popa
mov
push
xchg
adcb
hlt
js
sbb
pop
fdivl
and
cmp
dec
inc
mov
add
cmpsl
add
daa
ffree
mov
lods
fstps
movb
nop
cmc
inc
and
push
aas
and
jg
pushl
outsl
pcmpgtd
jp
inc
nop
pop
pop
sub
cmc
pop
outsb
dec
push
mov
xchg
xor
fstl
sti
add
mov
mov
sub
adc
jle
lock
push
cmc
ss
push
test
nop
sbb
push
jns
sahf
pop
cmp
jg
sbb
and
mov
out
cwtl
popa
testb
dec
fimuls
sub
add
inc
mov
ficoms
lods
cmp
sub
push
add
mov
push
push
xor
mov
cmp
ja
jmp
inc
and
lock
out
sbb
cmp
jne
xchg
jmp
push
insb
mov
sub
into
pop
loopne
test
jbe
cmove
in
add
dec
fisubl
jns
adc
inc
push
mov
pop
loope
stos
xor
sub
mov
ret
push
iret
inc
popf
cwtl
sub
xchg
je
aam
scas
dec
pop
jnp
add
stos
cld
sub
pop
ret
add
into
dec
in
lret
cltd
orb
int
pop
int3
mov
add
les
mov
mov
fcoms
inc
or
test
adc
lea
dec
sbb
push
test
das
aad
mov
or
mov
ret
sub
sub
xchg
push
inc
xor
into
push
cmp
iret
pushf
and
and
icebp
fsubrs
sbb
push
or
cltd
hlt
adc
ss
adc
daa
xchg
js
imul
pop
mov
enter
test
ss
cld
in
es
rcrl
add
lods
ljmp
jb
add
pop
lods
cmp
xor
std
sub
push
xchg
popf
pop
out
mov
xchg
inc
lahf
mov
and
sbb
ficompl
mov
sub
ss
sbb
movsl
or
mov
pop
in
lret
in
sub
cmp
pop
add
je
jmp
mov
adc
in
xor
dec
mov
pop
dec
pop
test
test
ss
mov
pusha
test
pusha
sahf
and
out
pop
lahf
and
or
and
mov
push
pop
pushf
jnp
inc
sbb
adc
add
push
daa
lods
inc
lea
xchg
popa
adc
cs
out
inc
aad
or
mov
push
inc
data16
jb
cld
or
push
lahf
cmp
lea
add
in
in
lret
inc
sarl
pop
and
pop
lea
sub
lcall
xor
and
xchg
popf
aad
jle
lea
adc
mov
add
stc
push
dec
lods
test
ss
mov
pusha
mov
pop
push
test
or
ror
cltd
sub
das
adc
ja
mov
in
das
mov
imul
pop
aad
ret
lods
ret
or
lahf
xor
cmc
jb,pn
adc
pop
sbb
hlt
push
lods
pop
lods
packssdw
inc
xchg
hlt
or
push
push
cs
imul
pop
popf
dec
push
or
insl
andb
cs
xor
push
nop
popf
sub
mov
pop
mov
cmpsb
push
jbe
xor
push
push
xor
sub
xchg
femms
rcrb
loop
stos
sub
and
or
test
xchg
aam
icebp
sbb
pop
push
xchg
xchg
dec
ficomps
divb
loope
push
stos
push
call
xchg
mov
add
cmp
push
into
push
push
xchg
addr16
mov
cld
xchg
and
mov
push
clc
sbb
in
daa
sbb
ja
test
in
mov
dec
adcb
dec
add
jmp
outsb
lcall
cmp
rcrb
cltd
test
xchg
push
into
call
sbb
jne
loopne
int3
xor
mov
sbb
adc
push
jmp
push
js
decb
jle
loopne
dec
rcrb
movsl
out
dec
stc
jbe
je
imul
cmpsb
inc
add
push
rcrl
dec
insl
notl
xor
lds
sbb
dec
loope
syscall
das
fwait
mov
mov
fwait
and
jne
push
dec
push
jnp
lret
fisttpll
mov
mov
inc
in
mov
pop
xlat
mov
inc
scas
lods
xor
sub
rcrl
cli
scas
loopne
mov
int
test
sbb
fstp
and
pop
ret
cli
cmp
lret
mov
push
xor
push
shr
stos
in
sbb
mov
push
lahf
ret
stos
pop
cmpsl
adc
add
mov
pop
or
sub
push
lods
xchg
dec
in
dec
inc
fwait
lret
sbbl
dec
loope
std
cld
inc
leave
jne
jmp
push
stc
jbe
jp
mov
add
push
in
push
sahf
dec
into
push
das
cs
jmp
pushf
push
adc
inc
nop
cld
xor
ljmp
inc
movsl
loope
cli
repnz
ret
fdivrs
mov
scas
push
adc
lahf
jle
push
mov
sub
or
dec
notb
push
cmp
push
jp
push
pop
clc
push
pusha
out
mov
mov
sbb
aam
aaa
jne
sub
xlat
outsb
add
negb
xor
cmpsl
je
lea
mov
cld
aas
jp
sbb
mov
iret
dec
fdivr
jp
cmp
push
scas
bound
or
jo
and
adc
arpl
jp
cmpsl
stos
sahf
jl
inc
fwait
inc
sbb
xor
pop
xchg
pop
or
dec
dec
call
mov
lahf
pop
ret
test
dec
or
xchg
push
les
pop
xor
cmovle
addr16
outsl
xchg
push
in
xor
cmpsl
push
jg
std
cmp
or
data16
lods
iret
cmp
xor
ficoml
mov
test
pop
ds
inc
jp
sbb
pop
sub
adc
inc
inc
cmp
fs
add
mov
xchg
sti
jp
lret
into
or
mov
iret
out
push
mov
mov
add
pop
xor
dec
sub
mov
arpl
cmp
ljmp
pop
inc
or
setl
push
popf
adc
jmp
pushf
fimuls
mov
mov
test
rorb
push
cmp
call
jae
notl
or
call
stos
or
pop
scas
add
dec
cmc
adc
or
xchg
dec
test
aad
jno
aam
jl
adc
xchg
add
les
sub
push
lods
fwait
pusha
dec
cs
sahf
push
decb
aaa
push
jmp
xchg
lock
cmp
mov
fstpt
sbbl
fmuls
loopne
iret
pop
pop
test
cmp
and
or
push
jmp
push
jae
les
inc
or
imul
pushf
adc
and
and
jecxz
in
xrelease
dec
xchg
jmp
call
inc
shr
decl
adc
mov
iret
push
xchg
scas
sub
shr
sub
inc
int3
cmpsb
and
add
out
mov
mov
inc
cs
jne
leave
dec
cli
mov
jno
in
jae
sbb
filds
pop
add
call
fiaddl
jmp
cmp
pop
mov
pop
pop
sbb
and
cmpb
xor
mov
and
inc
sahf
mov
jp
cld
cmp
lret
pop
ja
aad
mov
rcrb
sarl
and
imul
pusha
imul
test
jp
pop
xor
loop
pop
shr
inc
sbb
int
scas
and
cmp
dec
aam
clc
loope
loop
loope
jns
jns
testb
adc
mov
aaa
adc
iret
jp
movsl
sbb
add
adc
std
inc
mov
mov
push
sbb
inc
add
adc
mov
into
cli
sub
lea
imull
or
std
xlat
insb
inc
pop
jle
aaa
add
mov
jle
aas
outsb
sub
jmp
test
push
push
adc
int
jp
pop
cmpsl
mov
nop
or
cmc
xchg
lods
cmp
nop
xchg
repz
adc
out
lret
fcompl
adc
popf
sub
inc
test
cmp
cli
je
pop
lea
sbb
push
cld
push
jmp
out
mov
adc
pop
inc
cmp
xlat
fs
jl
inc
cli
push
in
adc
sbb
ds
jl
lods
andl
xlat
mov
cmp
jp
or
lods
arpl
arpl
rorl
lods
mov
lods
cmp
cld
lods
adc
xor
stos
cmc
adc
sub
scas
lods
adc
sarl
stos
ja
outsb
push
mov
scas
mov
into
enter
jbe
arpl
addr16
ss
push
pusha
pop
pop
mov
pop
xchg
test
das
dec
pop
mov
mov
fisubrl
icebp
sub
inc
out
jbe
xchg
cmp
clc
dec
jns
out
mov
and
mov
ljmp
ds
and
movsb
cmp
dec
sub
adc
ja
out
cmp
insl
test
push
jns
xor
xor
push
pop
orb
rorl
insb
mov
scas
or
ret
push
nop
cltd
adc
pop
cmp
pushf
push
data16
and
add
sbb
or
scas
add
inc
mov
or
ljmp
ret
cli
inc
test
insb
orb
or
les
stos
jae
test
pop
sub
test
xchg
jno
sub
add
testl
xchg
mov
push
aas
or
gs
adc
stos
push
adcl
test
int
lock
div
cli
sbb
jne
icebp
cmp
jo
inc
xor
repnz
cld
adc
xorb
in
xor
icebp
push
dec
pop
aam
scas
mov
nop
ret
cmp
pusha
popa
lahf
cld
in
mov
pusha
pop
jl
out
and
fcomip
das
inc
pusha
xor
and
sbb
je
sbb
shrb
push
aam
scas
ss
jmp
dec
out
jmp
pop
xor
add
jb
jo
dec
sahf
push
fs
push
arpl
pusha
inc
push
sbb
sub
lods
outsl
outsl
stc
mov
adc
in
in
inc
lret
sbb
jp
lcall
mov
sbb
xchg
imul
or
in
test
add
popf
inc
ss
lods
mov
cmp
xor
cmp
push
push
loopne
shrl
cli
lods
test
mov
lods
orl
test
adc
lahf
sbb
mov
lret
sub
imul
stc
sbb
push
jnp
mov
and
in
into
ss
cld
pusha
adc
jg
aam
push
stc
push
or
stos
inc
lods
mov
xor
cmc
dec
outsb
inc
cmp
adc
ja
std
cmp
cmp
sub
sarb
adc
push
add
sub
mov
test
add
lods
add
inc
fs
stc
mov
call
cld
je
xlat
ss
je
jmp
mov
leave
jg
sbb
sbb
pop
in
je
nop
push
insb
pop
adc
or
rcrb
test
push
jl
sub
jecxz
incb
sti
push
or
inc
scas
pslld
or
push
mov
lods
mov
pop
or
pop
insb
jmp
cmpsb
mov
push
daa
xor
push
add
inc
lods
pop
popf
push
insb
add
sub
mov
adc
cvttps2pi
aas
jo
xchg
div
out
aad
mov
cmp
inc
push
in
pop
xchg
imul
js
out
adcl
mov
je
sahf
push
pop
mov
negb
out
and
jmp
lea
dec
mov
sbb
jno
lea
lea
lea
push
dec
lea
lea
lea
lcall
fsubl
add
push
aaa
mov
mov
sbb
pcmpeqw
jbe
mov
mov
xchg
pop
push
sub
inc
sub
lahf
lret
jg
call
cmp
mov
cld
sbb
push
std
fistpll
sbb
sahf
repz
push
mov
data16
cmp
mov
addb
mov
out
das
xchg
or
and
test
fldenv
fwait
dec
mov
sbb
clc
mov
lret
mov
jmp
pushl
sub
cli
and
in
mov
cmp
xlat
push
int
pop
idivb
aaa
cltd
out
sahf
hlt
cld
data16
cmp
lods
aaa
je
inc
test
decb
les
sbb
xchg
jne
gs
scas
or
imul
pop
inc
dec
mov
add
mov
test
aad
test
stos
push
sbb
push
sbb
inc
cmp
add
add
sbb
pop
dec
sbb
push
pushf
sub
out
xchg
data16
xchg
jmp
cmpsb
int3
ss
stos
into
inc
lcall
jmp
mov
sbb
inc
mov
ja
adc
push
push
shll
fidivrs
scas
adc
xchg
add
cmp
inc
xor
add
lea
jmp
xchg
jne
pushw
test
pop
aaa
inc
sti
mov
push
or
mov
jno
dec
sti
mov
lods
mov
call
or
cmpl
out
insl
cmpsb
inc
popf
dec
js
sbb
icebp
inc
xor
jmp
sbb
lds
cmp
sbb
loope
into
cmp
sbb
sub
xor
cmp
and
in
in
inc
mov
push
inc
std
pusha
push
xchg
and
sarb
hlt
xor
pop
and
push
fmull
scas
pushf
jne,pn
push
xor
sarl
das
inc
out
mov
cli
cmp
fcoms
fidivs
pop
fnstcw
stos
cld
push
cld
sbb
pusha
pop
jecxz
loop
in
repnz
mov
lods
iret
lcall
jmp
sbb
stc
test
inc
scas
mov
mov
jae
insb
out
fdivrp
jns
sbb
out
jno,pt
shlb
mov
push
inc
js
mov
pop
push
jmp
test
xor
dec
mov
adc
cmp
mov
in
mov
mov
mov
fldl
adc
add
rcll
push
or
daa
xchg
push
add
push
jg
adc
sbb
in
fmull
lahf
aam
or
or
shrl
mov
lods
std
popl
ret
scas
xchg
dec
sahf
cmp
or
pusha
xor
push
inc
clc
in
nop
daa
xchg
cld
aaa
dec
fs
fistps
ljmp
mov
lahf
std
adc
sbb
leave
ds
stos
mov
sub
or
cli
xchg
ds
sbb
pop
sub
fwait
cs
mov
and
dec
cmp
or
addb
add
xor
add
add
add
add
add
add
xor
add
xor
add
pop
add
add
jno
add
add
add
push
jne
add
add
add
add
add
add
pop
add
add
xor
add
add
inc
add
add
add
push
add
jb
jbe
add
dec
add
add
inc
add
add
add
push
add
add
add
jp
add
add
add
xor
add
js
add
outsl
add
inc
dec
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
jbe
add
add
add
jp
add
add
inc
add
add
add
add
add
add
add
insl
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
pop
add
push
add
add
add
add
add
add
outsb
add
dec
add
add
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
cmp
pop
add
jne
add
push
add
add
push
add
inc
je
add
add
add
pop
add
add
add
add
add
add
dec
add
insl
xor
add
add
add
add
add
imul
push
add
add
add
add
add
add
add
add
add
add
inc
mov
das
stc
lods
sbb
push
sahf
push
pushf
push
popf
inc
rcrl
xchg
loopne
outsb
fildl
sbb
mov
mov
shrl
xchg
nop
push
test
shrb
outsb
jns
or
stc
and
rorb
push
dec
sub
flds
fmull
or
inc
out
sub
push
leave
fistpl
outsl
ds
iret
and
dec
call
jb
mov
jae
out
enter
xchg
pop
outsb
neg
inc
xor
js
xorl
stos
push
push
add
mov
lahf
sub
sahf
pop
inc
xchg
sarb
cld
or
outsb
adc
clc
cmp
loopne
mov
pop
jp
in
mov
pop
aaa
ret
into
in
int3
out
jp
push
cld
dec
mov
movsb
inc
faddp
clc
cld
cltd
popa
lods
mov
cs
adc
test
enter
test
std
jle
cwtl
pop
mov
std
in
cmp
cmpsb
mov
idivb
mov
incb
mov
in
fidivrs
mov
hlt
pop
push
or
sahf
stos
js
pushf
pop
pop
hlt
mov
pusha
mov
mov
pushf
fidivs
into
idivb
sahf
jp
fcoms
nop
cmpsl
push
cli
pop
dec
aaa
xor
outsb
mov
das
ficomps
xchg
lods
jp
fs
jl
scas
mov
cli
ss
scas
scas
pushf
incb
aas
stos
test
mov
das
sahf
pushf
clc
fcoml
mov
dec
push
fbstp
addr16
mov
sahf
dec
insb
cli
xchg
aaa
mov
loop
or
xor
push
das
outsb
pushf
mov
scas
into
aaa
cld
lods
sbb
and
fdivs
sub
subb
scas
arpl
bound
int3
popa
das
mov
scas
les
jp
data16
mov
jae
movzwl
scas
push
je
push
jb
pushf
fwait
adc
jp
jbe
or
aaa
movsb
lods
sbbb
fbld
mov
jb
xchg
shlb
fsubrs
mov
pushf
repnz
push
jno
adc
aaa
and
das
push
pushf
jb
mov
lcall
cld
fcoms
jg
mov
xor
jo
pusha
sub
sub
cli
push
add
stos
pop
push
fiaddl
imulb
das
sbb
adc
fdivl
shrb
repnz
pop
lods
add
pop
aaa
xor
jae
push
loope
xchg
or
mov
cmpsl
adc
ds
xchg
lcall
xchg
iret
movsl
cmpsl
and
lock
jle
mov
outsl
add
and
fs
cltd
add
sbb
add
cmp
xor
mov
ror
dec
ds
jno
je
orl
icebp
xchg
dec
fbstp
scas
dec
mov
popf
sarb
test
jmp
push
movsl
inc
adc
faddp
call
cmpsb
push
clc
shl
mov
mov
fs
ds
push
repz
mov
mov
push
rorl
mov
shll
ds
jmp
cmpsb
maxps
roll
cmp
cmp
fimuls
mull
add
rcpps
popa
fmul
push
int
cmpsb
arpl
and
dec
pop
mov
cltd
jns
dec
mov
gs
adcb
sub
in
mov
stc
stos
fsts
sbb
in
nop
mov
dec
xchg
inc
cld
lahf
daa
cmp
dec
sbb
cltd
xor
addb
scas
dec
nop
dec
cmp
arpl
lcall
xor
insb
lcallw
jb
sbb
dec
or
cmpsb
pop
dec
sti
add
push
jle
inc
mov
cltd
xchg
cmpsl
push
add
popf
pushl
push
fldl
cld
test
sub
mov
idivb
mov
jns
add
ds
div
xchg
lcall
pop
stos
test
pop
hlt
outsb
xchg
pop
cmp
add
roll
jns
mov
aam
mov
lods
mov
test
addb
arpl
inc
push
stos
popl
mov
movsl
jmp
fiaddl
fcomps
lds
cs
repnz
mov
and
pusha
arpl
orb
mov
rclb
mov
mov
cli
out
sbb
pusha
mov
mov
or
imul
adc
je
mov
fsubs
out
pop
cmp
inc
add
es
pusha
icebp
frstor
cmc
dec
pop
adc
add
mov
into
inc
cmp
aaa
add
dec
out
ja
mov
sub
cmpsb
imul
call
gs
xor
cmp
dec
push
mov
sub
fildl
out
adc
stc
jb
sahf
cmp
scas
xchg
mov
cmovno
push
or
imul
iret
lea
dec
mov
jge
add
push
add
sbb
jb
cmp
mov
sub
sbb
xchg
lret
xor
enter
xor
add
lcall
rol
adc
jmp
push
repz
inc
add
jb
scas
mov
fnstcw
addl
es
add
dec
mov
stos
fstl
pusha
repnz
into
fldl
mov
mov
jae
std
adc
addr16
ja
adc
test
add
mov
cli
scas
out
push
int3
ds
xor
push
sbb
xor
rcl
mov
add
clc
xchg
call
pop
insb
mov
mov
jbe
sbb
lret
sahf
adc
and
push
push
mov
mov
test
cmp
dec
jbe
add
int
lcall
bnd
dec
push
sbb
push
js
scas
sahf
imul
dec
cld
es
icebp
out
dec
mov
in
mov
push
push
sub
xor
pusha
call
lcall
lock
mov
jne
xor
repnz
inc
rclw
hlt
or
sub
stos
and
sub
mov
dec
aad
or
fstpt
leave
cmp
aaa
pop
repnz
aaa
and
addr16
lcall
push
out
stos
cld
jbe
pop
mov
jne
stos
or
and
sbb
pop
add
pop
add
insb
test
mov
xchg
aam
dec
add
mov
sbbl
sbb
fiadds
inc
mov
or
in
mov
jp
mov
mov
xlat
sbb
push
ds
dec
mov
adc
out
cmp
mov
aam
mov
loop
fcomip
cwtl
mov
cwtl
jns
dec
fisttpll
pop
notb
fiaddl
dec
mov
in
call
add
outsb
xchg
cmp
lock
jmp
inc
jge
icebp
add
cmpsl
ret
pop
cmp
mov
add
int3
daa
mov
push
sahf
push
icebp
add
aad
pop
sar
jle
xlat
clc
push
hlt
fsubs
push
fwait
add
mov
push
sti
repnz
xor
xor
mov
cmp
push
aas
inc
gs
cli
out
outsb
xchg
and
idivb
mov
cmp
testl
sahf
mov
and
pop
sbb
loopne
test
icebp
inc
push
cmp
les
jmp
in
insb
scas
sub
lahf
dec
dec
scas
xor
pop
add
test
sub
jl
popl
sub
rorb
stos
xlat
arpl
data16
lds
adc
pop
xchg
daa
jecxz
in
shrl
and
mov
aad
add
jo
mov
shl
jp
sar
out
fidivrs
out
mov
mov
rcl
repnz
mov
push
scas
push
icebp
add
test
and
pusha
imull
outsl
inc
test
shr
jo
daa
ss
xchg
nop
cmp
push
ds
in
xlat
fwait
ss
lods
add
test
jl
shll
mov
adc
stc
pop
push
test
addb
mov
mov
scas
mov
xor
movl
aad
cmpsl
sub
mov
cltd
mov
push
in
shl
mov
insl
mov
scas
pushl
out
push
xlat
add
bound
insb
shlb
jnp
jmp
mov
xchg
jg
inc
int3
mov
xlat
movsl
inc
mov
mov
repnz
and
lods
push
or
popa
repnz
cs
cmpsb
loope
add
scas
add
and
sbb
dec
dec
xchg
jle
lods
fsubrp
insl
mov
stos
push
sub
loopne
jg
xchg
sub
mov
xchg
push
jp
movl
outsl
aam
mov
pop
adc
jl
dec
dec
dec
mov
mov
test
push
fs
repz
mov
lods
pop
pop
ds
mov
out
cmp
dec
jbe
ret
int
jle
out
aad
mov
jae,pn
pop
insb
aam
loop
iret
mov
mov
xor
push
xchg
jno
mov
test
xchg
ficompl
dec
fucomp
xchg
xchg
and
fmulp
mov
cmp
mov
dec
and
and
jmp
js
jge
add
cmpsb
mov
loope
fs
insl
enter
lds
adc
or
mov
pop
adc
sub
dec
jno
rcrb
cld
scas
mov
push
mov
subb
mov
nop
sub
idivl
push
dec
loope
adcb
cmpsb
jle
xor
js
loopne
sbb
in
lcall
push
lods
fildl
icebp
sub
push
jp
testb
mov
rcl
jg
cmp
sub
fwait
dec
pop
gs
jge
add
sbbl
outsl
test
adc
cltd
mov
mov
sub
es
mov
into
mov
cmp
dec
mov
loopne
mov
loop
inc
jg
jae
divl
add
or
add
xchg
shlb
out
scas
enter
pop
mov
adc
mov
xchg
js
push
add
mov
fucomp
test
xchg
mov
int3
std
xchg
and
out
fbstp
dec
add
std
jb
xor
add
adc
sub
test
mov
pop
sbb
cs
xorb
mov
push
add
loope
mov
aas
lock
mov
mov
ds
or
jg
xchg
mov
ja
mov
lret
inc
add
in
xlat
push
sbb
loope
aaa
lock
pop
mov
jb
lds
jle
add
bswap
mov
adc
pop
js
and
outsl
jg,pt
dec
sbb
mov
push
mov
and
xchg
dec
sarl
addr16
xchg
dec
mov
or
mov
add
in
in
add
push
mov
xor
stc
add
rclb
leave
jle
pop
ret
add
jp
shrl
mov
inc
cmp
mov
stc
add
mov
mov
and
out
cld
xchg
cmp
inc
dec
pop
ds
mov
mov
sub
sub
adc
in
or
mov
push
mov
push
cmp
cmp
imul
or
int
sahf
pop
fwait
cmp
xchg
mov
incl
cmp
cmp
loop
sbb
and
add
mov
inc
mov
int
mov
aad
jp
add
and
or
mov
mov
jb
adc
push
popa
xchg
jbe
sbb
mov
push
dec
push
inc
adc
sahf
cltd
add
or
mov
inc
push
xlat
insb
add
fs
xchg
mov
xchg
lahf
ds
jae
mov
mov
mov
add
movsl
push
orb
cs
mov
jle
dec
cmp
div
add
push
mov
or
xchg
movsl
rolb
aaa
xlat
ret
add
sti
jge
add
daa
push
rorb
mov
push
mov
das
and
pop
jp
jmp
jmp
mov
test
mov
fstl
ficomps
scas
hlt
mov
lahf
push
movsl
adc
inc
cwtl
cmc
add
jge
pop
pop
add
mov
sub
add
rcrb
xchg
xlat
sbb
push
clc
add
into
shll
bound
lret
fisttpl
jecxz
pop
fdivs
sbb
aaa
jne
xchg
xchg
mov
jmp
fisttps
in
jge,pn
scas
dec
sbb
ret
scas
jl
mov
daa
sbbb
lds
jno
xlat
jl
jg
push
pop
dec
inc
rclb
lret
pop
mov
push
lahf
and
scas
sarb
mov
push
jl
mov
shll
add
mov
or
push
xchg
ds
idivb
sub
in
ds
sbb
push
inc
sbb
add
fsts
push
mov
mov
ja
bound
mov
mov
cmp
prefetcht1
cltd
aaa
ficompl
cmp
or
sub
and
movsb
add
lea
stos
push
icebp
mov
cmp
int3
aas
add
or
add
sub
in
cmpsb
jns
sub
test
test
pop
cs
mov
mov
add
jmp
mov
add
jne
dec
mov
lahf
mov
daa
test
adc
movsb
bound
or
sub
gs
and
pop
jle
subb
jecxz
push
cmp
xchg
int3
push
inc
push
adc
or
jge
nop
aas
fsubrs
sarl
iret
cmp
push
movsb
ds
add
inc
iret
pop
movsl
mov
dec
add
into
xor
dec
fistl
roll
sub
inc
sbb
mov
sarl
jecxz
xchg
ficompl
or
mov
lods
pop
mov
push
enter
cmpb
fiadds
imul
adc
nop
mov
lods
loope
dec
mov
das
js
ss
add
scas
mov
pop
frstor
or
aaa
mov
pop
repz
ds
fs
lret
xchg
xor
push
ljmp
lock
out
push
dec
xchg
push
add
and
cld
out
add
push
fldl
dec
outsl
loopne
inc
xchg
pop
pop
cmp
cld
inc
enter
add
mov
cmp
pop
out
jl
testl
mov
sbb
add
je
ds
push
push
scas
orb
sbb
test
sub
jmp
adc
popf
cwtl
sahf
imul
push
add
rol
fidivrs
sbb
mov
mov
jp
add
xchg
inc
add
ret
hlt
dec
outsl
inc
xchg
mov
in
jnp
addb
lods
xchg
fnstsw
jle
push
xor
xchg
mov
fstps
repnz
popl
in
adc
jb
lgs
roll
cli
pop
mov
xchg
add
and
shll
inc
mov
jp
mov
inc
std
idivl
add
pop
insb
mov
pop
xchg
xor
sbb
adc
mov
push
mov
roll
loop
dec
add
cmp
cmp
cmp
mov
ret
ds
dec
dec
mov
push
xor
pop
ds
dec
cli
cwtl
js
inc
mov
dec
adc
repz
decl
sahf
jge
imul
cli
nop
mov
add
add
add
add
add
add
inc
add
add
add
add
imul
add
add
push
data16
add
add
add
add
add
inc
add
add
inc
add
dec
add
jbe
add
add
add
add
add
add
add
add
add
pop
add
inc
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
inc
add
add
add
add
jno
add
add
add
dec
add
add
outsl
add
add
inc
pop
add
add
add
data16
add
dec
add
add
add
add
dec
add
add
add
add
xor
add
add
add
add
add
push
add
add
add
add
add
add
push
add
pop
data16
add
arpl
add
add
dec
add
dec
add
push
add
add
add
add
add
jne
aaa
add
add
add
add
push
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
jns
inc
xor
add
add
add
add
add
add
add
add
dec
inc
add
push
outsl
add
jbe
add
add
jbe
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
dec
add
add
add
add
add
add
push
add
add
inc
add
push
add
add
add
add
add
add
add
push
add
add
add
add
inc
dec
imul
push
add
add
add
add
add
add
dec
stos
dec
mov
mov
and
and
and
and
cmp
cmp
lcall
ret
pop
addr16
jne
xchg
adc
and
dec
xlat
inc
xchg
shr
icebp
lock
jle
add
or
pusha
push
sbb
dec
sub
inc
inc
inc
dec
inc
push
sub
jno
jp
sbbb
xchg
pop
pushf
pop
movsb
dec
hlt
mov
mov
mov
lods
add
sbb
aaa
insb
inc
ret
push
and
mov
cmpsb
xchg
pop
ljmp
and
and
sub
cmp
decl
lock
jge
insb
push
out
mov
cwtl
pop
add
in
lock
incb
sarb
xor
sti
sbb
sub
insb
inc
jp
test
and
lods
aam
loop
cmp
or
fsubl
sbb
outsl
mov
and
mov
dec
int3
dec
fmuls
dec
in
outsl
cmpsb
mov
jge
insl
sbbl
dec
mov
shl
or
adc
sub
scas
js
out
lcall
call
xor
xchg
ficomps
dec
pushf
inc
cmpsl
inc
dec
clc
inc
decb
mov
sbb
popf
mov
loopne
into
mov
test
ja
loop
jmp
jge
ss
pop
fsub
les
ret
cmp
jne
shrb
cmpsb
shl
sbb
daa
pop
fdivrs
sub
sahf
fidivl
inc
into
and
adc
or
dec
mov
rcl
fdiv
loopne
xor
mov
xchg
aas
repnz
imul
pop
lods
insl
sarb
rcr
out
mov
sbb
shlb
pop
cmp
ljmp
cltd
js
inc
movsl
pop
lods
pop
mov
faddl
lock
test
fstpt
mov
mov
pop
call
lahf
mov
iret
inc
loopne
jmp
repnz
cmp
out
cmc
outsl
cld
or
adc
push
enter
les
data16
xorl
sub
sbb
cmp
sbb
in
cmp
xchg
outsb
inc
jl
in
ljmp
aas
or
dec
test
inc
jg
jge
mov
ja
fiadds
add
xchg
outsl
pop
fidivrs
dec
sub
push
xchg
pop
cltd
mov
pop
or
inc
mov
xor
sub
and
enter
jge
fstpl
jne
es
ret
repnz
cmp
loop
push
mov
cmp
shrl
idiv
xor
and
mov
aas
outsb
fbstp
mov
pop
fwait
push
mov
adc
xor
jl
fidivl
or
sbb
mov
je
mov
int
popf
in
dec
add
or
adc
dec
xchg
mov
push
mov
mov
imull
dec
and
cmp
sub
or
xchg
in
pop
fidivrs
rcrl
call
subb
cmp
inc
mov
add
leave
pop
push
loopne
mov
add
pushl
lahf
in
dec
jmp
sbb
flds
jg
sub
mov
pusha
jmp
inc
jle
mov
lea
push
cmp
and
ljmp
les
inc
sbb
pop
push
shlb
sub
in
mov
out
insb
mov
and
pop
dec
mov
icebp
pop
aaa
pusha
movb
mov
sbb
push
ss
xchg
or
xchg
mov
xor
cmp
cli
aam
jg
xchg
rclb
jne
call
cli
inc
adc
lock
into
addr16
outsb
dec
popf
lret
inc
scas
sub
aam
ss
push
shl
repnz
std
ja
sbb
sbb
push
sub
inc
pop
pop
pop
imul
mov
out
hlt
jno
jl
cmp
ljmp
mov
cld
pushf
inc
cmpsl
add
sarb
or
push
xor
jno
mov
jg
mov
cmp
and
push
sbb
push
fwait
int3
repnz
or
push
jge
sub
mov
and
lret
pop
sub
sub
hlt
cs
sub
mov
mov
lds
loopne
mov
jbe
or
mov
cmc
pop
gs
mov
jbe
enter
push
inc
clc
or
pop
add
mov
pushf
pop
pusha
mov
mov
xor
sub
enter
jge
xchg
cmp
inc
roll
fwait
dec
xchg
negl
pop
addr16
mov
push
ds
xor
cmp
add
cmp
lcall
mov
add
mov
lret
out
ja
push
dec
loopne
cmp
push
sub
push
fisubs
cmpsl
or
inc
gs
jo
jnp
xchg
push
mov
int3
inc
in
in
inc
repz
sti
inc
add
int3
or
adc
fs
inc
data16
jae
fmull
out
mov
data16
jns
jg
xor
mov
or
sub
in
dec
je
jle
jp
pushf
and
sub
imul
xlat
fistpll
xchg
push
fwait
inc
cmp
imul
sbb
sub
push
pop
shrb
mov
push
cmp
jmp
test
mov
xorb
popf
cmc
mov
imul
jo
push
sbb
into
fdivp
scas
mov
shll
ja
aam
imul
jo
ljmp
mov
cmp
jbe
pop
imul
mov
pop
leave
push
out
or
test
cmc
outsb
pop
inc
push
mov
es
push
bound
pusha
push
lret
mov
sub
dec
shlb
or
or
or
xchg
xchg
dec
mov
into
repnz
sbb
inc
push
jo
cmp
inc
call
pop
pop
push
ja
outsl
sub
rcr
addb
xorl
enter
lret
lock
dec
pop
in
mov
mov
aam
in
cmp
clc
inc
bound
mov
mov
mov
pop
cmp
notb
dec
adc
sub
pop
push
leave
sub
jp
sub
sub
xchg
cli
test
movsb
sbb
mov
push
mov
sub
xchg
aad
out
popf
and
mov
in
dec
call
push
sti
test
fwait
sbb
dec
xchg
inc
out
pop
icebp
xchg
out
loopne
int3
adc
ljmp
test
xchg
sub
fisttpl
mov
mov
pop
fstps
push
sti
insl
xor
sbb
push
push
pop
ret
arpl
lods
xchg
pop
cmpsb
push
mov
xchg
add
orl
loop
test
ljmp
testl
sub
xchg
cmp
add
mov
mov
mov
pop
clc
cld
sub
aam
je
and
jnp
sub
push
mov
js
cmpl
dec
cwtl
ja
lods
rolb
aad
mov
cli
ja
inc
lods
sub
dec
dec
pop
or
mov
add
mov
jecxz
push
sti
mov
dec
loopne
cmp
loopne
scas
addb
vpaddq
jp
lock
dec
xchg
popf
push
pop
pop
fs
imul
cmpsl
sub
dec
push
iret
das
push
sub
lods
es
sub
inc
lcall
ret
mov
out
sbbl
jl
aam
enter
pop
xchg
sbb
daa
xchg
stos
pop
jo
inc
cltd
dec
scas
dec
jno
addl
cltd
aam
loope
mov
repnz
dec
loopne
jge
inc
or
dec
cli
stc
addr16
jno
dec
xor
mov
shr
hlt
mov
inc
nop
cmc
pop
jge
push
insb
push
bound
dec
jge
aam
nop
in
jbe
mov
les
add
testb
test
push
xor
dec
inc
sub
in
lock
cmp
dec
sub
xchg
pop
popf
push
cs
shrb
jl
cmp
insl
flds
out
ret
enter
les
aaa
orb
sub
pushf
out
and
push
pop
or
aaa
data16
dec
repz
mov
xchg
ss
inc
jecxz
jmp
xor
sub
icebp
and
imull
ds
dec
xor
cmp
push
into
fwait
int
mov
les
dec
outsb
out
push
ja
pushl
cmpsl
mov
inc
xlat
aaa
push
xchg
cmp
jbe
ret
in
iret
inc
test
and
inc
or
xchg
jb
sbb
mov
push
out
xor
in
mov
and
mov
je
sub
les
lods
push
ss
xchg
xchg
xchg
inc
pop
cwtl
test
mov
mov
shl
or
sbb
sub
hlt
cmp
outsb
fidivrl
inc
xchg
mov
lods
push
inc
adc
cmp
movsb
inc
jno
jno
jno
ja
inc
rcr
faddp
in
sbb
ss
mov
xchg
jno
jno
ja
sbb
mov
push
inc
repnz
cwtl
pop
mov
cmp
inc
dec
sub
ret
movsb
fwait
stos
mov
pop
xchg
call
adc
mov
cmp
inc
mov
ja
cli
push
in
mov
out
in
jb
xchg
xor
filds
mov
and
cmp
xchg
sbb
push
test
push
xorb
iret
and
cmp
ds
fldcw
jno
add
ds
push
mov
and
lods
fcomi
inc
repz
xchg
add
mov
dec
xor
incl
insl
xchg
cmp
dec
mov
les
xchg
fidivrl
push
movsb
sub
xorps
pop
insb
pop
out
mov
pop
mov
aam
mov
out
hlt
adc
mov
jns
pop
pop
or
adc
cmc
xor
mov
add
rcrb
inc
movl
lcall
mov
add
add
jno
jno
ja
cld
cmp
popa
adc
cwtl
mov
sub
fstpl
dec
mov
push
mov
icebp
dec
cmc
push
into
cmp
jbe
lea
fsubs
sub
sub
pop
xchg
cmp
mov
lods
cwtl
cmp
test
ds
and
enter
mov
ja
or
dec
mov
jg
fadd
dec
fwait
and
test
xchg
mov
loop
lods
adc
pop
loope
cmp
pusha
bound
rolb
sahf
push
call
outsb
in
mov
outsl
lcall
es
out
jle
or
sub
fiaddl
inc
or
mov
jo
push
ret
mov
in
repz
or
ja
push
call
addr16
inc
subb
bound
incl
sub
test
dec
jb
xchg
mov
xchg
push
jbe
or
dec
push
lcall
fs
xchg
sub
and
mov
aam
nop
jmp
stos
je
cltd
dec
scas
cli
popa
push
outsl
xchg
addl
xchg
sarl
inc
push
xchg
adc
cwtl
sbb
ss
imul
inc
fwait
or
icebp
push
fnsave
ret
stc
sub
sbb
loope
out
cmc
inc
push
xchg
mov
das
lcall
and
sub
lret
cmp
movsb
divl
sbb
cmpsb
cmp
fsubrl
incl
sbb
ds
inc
in
jl
jnp
cwtl
loopne
mov
mov
mov
xchg
or
push
cmp
mov
test
call
loop
pushf
mov
out
dec
jb
xchg
mov
nop
in
push
cmp
pop
cmp
or
ficoml
mov
jne
inc
pop
loope
mov
xchg
fistps
mov
ret
inc
int3
and
test
cmpb
inc
jp
rcrb
shrb
lock
ret
pop
negb
push
shl
test
fwait
daa
jp
hlt
adc
inc
dec
sub
neg
add
mov
sbb
mov
xorl
push
mov
inc
mov
mov
mov
adc
xorl
icebp
loop
mov
push
jge
daa
or
pusha
mov
mov
dec
fwait
pusha
sub
inc
xor
cli
cwtl
mov
movb
jge
push
sbb
ja
add
mov
lret
dec
aam
les
mov
push
into
mov
les
jl
call
pop
ljmp
sbb
loop
mov
ja
orl
rcrb
aaa
fwait
ja
outsl
fiaddl
add
daa
mov
popa
into
dec
hlt
jnp
rorb
mov
icebp
jle
xor
int3
push
lock
in
jl
call
ret
pop
dec
roll
sub
pop
cmp
pop
sbb
inc
mov
pushf
xchg
test
sub
pop
or
test
insl
andl
inc
rolb
xchg
outsb
cmp
sbb
sub
mov
adc
or
test
jge
jno
out
in
jl
clc
sub
sbb
es
shrl
inc
dec
sub
jp
pushf
sub
jbe
shlb
push
ret
outsl
fisttps
mov
leave
jno
ja
faddl
jmp
add
inc
push
mov
ja
outsl
and
pop
rorb
cmc
and
push
sbb
sub
mov
xor
test
mov
mov
shlb
jp
inc
lret
push
lock
push
loop
add
sub
mov
jl
call
sub
adc
lods
cmc
cmpsl
pop
xor
inc
daa
push
sub
push
add
mov
dec
aaa
push
pop
adc
sbb
cs
dec
xchg
lret
call
loopne
mov
pop
add
mov
push
mov
fsubrs
loope
cmp
sbb
ljmp
jno
jbe
and
testb
xchg
daa
cmp
push
fwait
xchg
addb
les
ja
cwtl
test
stos
jecxz
and
inc
dec
xchg
cmp
shl
jl
pop
inc
xchg
xchg
adc
lds
jp
sarb
xchg
out
sahf
or
aas
out
loopne,pt
xor
sub
iret
mov
mov
and
cmp
cwtl
xor
aaa
addr16
fcmovu
push
out
dec
add
insb
subb
add
ljmp
pop
cmp
cmpl
jmp
loope
xchg
xor
jl
ret
out
lods
cld
dec
out
and
pop
cld
mov
dec
movsb
sub
cmp
adc
fwait
push
mov
jmp
lock
mov
fsubl
push
cmp
dec
imull
clc
xchg
and
pop
push
and
inc
pop
test
js
push
test
adc
ds
xchg
xchg
inc
jg
mov
cwtl
mov
cli
push
add
mov
xor
icebp
jae
shrb
inc
or
adc
xchg
sub
cli
adc
mov
mov
inc
shlb
inc
cmp
call
cmp
les
push
mov
inc
test
outsl
sbb
mov
xor
ret
lods
lcall
out
hlt
lret
arpl
add
add
xor
add
dec
add
add
push
add
imul
push
bound
add
add
add
cmp
add
pop
add
push
pop
add
add
add
dec
push
push
add
imul
push
add
add
add
add
add
add
add
pop
add
add
add
add
xor
dec
add
jb
pop
inc
push
add
add
add
add
jne
add
push
add
inc
add
add
add
cmp
dec
add
add
add
pop
add
add
add
add
add
add
add
push
bound
add
add
add
imul
add
outsb
add
add
add
add
push
add
add
pop
insl
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
imul
add
imul
add
add
aaa
arpl
pop
add
add
add
add
xor
add
insl
js
xor
add
add
add
add
je
add
xor
add
add
add
outsl
add
js
push
add
outsb
add
outsb
add
imul
add
xor
add
push
add
add
add
insb
add
xor
add
add
add
add
add
insl
add
add
add
outsl
add
add
add
add
add
add
add
add
add
outsb
add
add
add
add
add
add
dec
inc
aaa
add
add
add
dec
add
add
add
add
inc
add
add
add
push
add
add
or
pop
and
jae
hlt
inc
xchg
add
sbb
add
xchg
out
adc
mov
ret
jg
inc
xchg
sbb
repnz
add
push
xlat
and
daa
test
andl
call
ds
jbe
rcrl
or
adc
fists
unpckhps
jg
mov
lahf
mov
loope
add
sub
ret
inc
xor
ret
jp
rcrb
sahf
fbld
jmp
fldt
lods
out
jns
mov
addr16
sahf
arpl
mov
mov
xor
out
shrb
pop
add
imul
push
les
sub
lret
rolb
mov
in
cld
xchg
aaa
sbb
shlb
mov
push
dec
scas
mov
mov
dec
push
cmc
fidivrl
jl
int
push
inc
cwtl
movsb
add
lds
lret
fstps
jecxz
mov
or
xor
xor
adc
fdiv
cmp
add
test
mov
mov
sub
cmp
mov
ds
mov
int
inc
push
xchg
adc
mov
out
jbe
fwait
and
mov
xor
ljmp
add
inc
iret
out
roll
test
or
das
adc
subl
lret
mov
call
test
movsb
add
sbb
in
sub
cmp
scas
add
push
mov
test
scas
loope
push
mov
mov
dec
lcall
sub
or
pop
add
imul
test
outsb
mov
mov
sub
pop
add
add
inc
push
and
xchg
fnstcw
gs
ljmp
jo
inc
mov
jne
pop
cmpsl
out
cli
sub
add
out
incb
std
pop
jae
cltd
add
jb
orb
push
sub
xor
lret
insl
add
stos
and
inc
mov
sub
iret
pop
lds
faddl
mov
sbb
or
push
add
lret
xchg
jle
mov
sbb
loope
sbb
or
insb
cltd
and
sub
mov
roll
push
push
ret
stos
jne
decb
js
mov
cmc
mov
mov
add
mov
mov
adc
ds
sahf
or
sub
sbb
arpl
push
xchg
cltd
mov
das
add
test
xchg
lcall
into
mov
adc
add
repnz
sbb
frstor
shrl
xchg
mov
push
pop
fbld
push
add
pop
push
inc
xlat
inc
cmc
mov
loopne
xchg
mov
add
jecxz
sahf
pop
xor
mov
jl
nop
add
adcl
adc
add
shrb
incl
jecxz
nop
xor
bswap
mov
mov
dec
sbb
ficomps
or
jbe
adc
sbb
sub
cmp
pop
lods
fs
pushf
cli
movsb
mov
shrb
call
cld
xor
mov
testb
fs
js
aaa
movsb
lods
mov
das
cld
sar
sub
dec
lods
pop
lcall
mov
aam
loopne
in
cli
or
mov
das
xor
je
test
mov
mov
lock
test
cli
inc
pop
aaa
insb
lods
jl
mov
pushf
das
lods
pushf
mov
dec
sbb
pop
mov
idivb
dec
pushf
pop
cli
je
aaa
test
mov
das
lock
sbb
and
das
fs
jo
jl
aaa
pushf
lods
test
mov
pushf
hlt
pop
sbb
or
sub
xor
inc
lods
push
lcall
mov
test
aaa
mov
not
add
aaa
xor
inc
lcall
mov
call
fimull
cmp
inc
das
dec
pushf
push
cli
orb
mov
pushf
mov
hlt
scas
adc
or
mov
lcall
pusha
cli
push
aam
cld
clc
dec
push
pushl
insb
das
test
shrb
clc
movsl
or
ja
mov
cli
xor
les
das
pop
pushf
pushf
cli
mov
mov
fdivr
sbb
je
test
test
fdivr
call
rcll
mov
pushf
sbb
and
scas
or
mov
mov
dec
mov
mov
jns
jae
jno
mov
jnp
cmp
inc
add
inc
inc
dec
dec
dec
dec
add
dec
dec
push
push
push
push
mov
pop
pop
mov
pop
pop
pop
pop
addr16
pusha
popa
outsb
outsl
insb
into
pusha
imul
adc
add
mov
xchg
jle
filds
mov
and
sahf
loopne
lret
lahf
scas
xor
jp
push
jmp
add
mov
sti
cmpsb
push
push
mov
mov
add
mov
mov
mov
lcall
mov
xchg
subb
call
mov
stos
mov
scas
sbb
call
mov
daa
cs
pop
push
jecxz
sahf
push
add
outsl
inc
jne
and
mov
xchg
in
mov
lock
add
lods
mov
add
sub
loop
cmp
insb
jo
les
jne
shll
pop
outsl
ja
jae
mov
scas
pop
inc
cli
cmp
frstor
imul
popa
les
leave
dec
jns
arpl
outsl
inc
cmp
jne
cwtl
pop
cmp
push
jno
imul
push
imul
jo
pop
jp
jle
xlat
add
testb
xchg
push
outsb
popa
bound
je
sub
cmp
jae
cmp
and
subb
jl
push
jne
insl
addr16
and
arpl
jb
sub
nop
inc
inc
shrl
arpl
jge
pop
jne
arpl
jp
mov
lods
inc
sub
daa
mov
js
xchg
and
cmp
and
das
xor
xor
xor
jbe
pop
aas
mov
mov
mov
push
cli
pop
pop
sbb
xchg
pop
mov
bound
pop
and
and
cmpsb
mov
mov
lods
push
clc
test
inc
sahf
mov
imul
addr16
or
push
test
sti
outsb
push
jge
movsl
out
ja
push
push
dec
pop
call
dec
outsb
addr16
loop
mov
fisubl
push
scas
mov
jne
sbb
cmp
leave
popa
das
cli
and
and
insl
sbb
mov
cwtl
decb
sahf
lret
mov
mov
mov
lcall
or
push
jnp
sub
mov
pop
lods
insb
mov
dec
lcall
cs
popa
push
andl
inc
test
push
push
inc
jns
bound
pop
mov
dec
incb
add
insb
sub
mov
popfw
dec
cmp
cmp
and
mov
jo
cli
jb
jbe
jo
outsl
pushf
outsb
cli
insl
insb
aaa
imul
addr16
data16
shlb
arpl
mov
push
outsb
mov
or
shl
push
insl
and
cmp
popa
mov
int
das
stos
jae
fisttpl
popf
cmc
insl
and
mov
cli
push
push
aaa
push
lods
push
lcall
push
cli
dec
dec
aaa
dec
lods
dec
lcall
dec
cli
inc
inc
aaa
inc
lods
inc
lcall
or
push
es
adc
call
cmp
inc
fidivs
shll
cld
inc
fst
mov
pushf
mov
pop
adc
cmc
int
xchg
and
xchg
mov
sub
adc
adc
and
movsb
cmpsb
fidivrl
lahf
data16
sub
jb
fcoml
cmp
cmpsb
sbb
adc
inc
xor
jle
push
cmpsb
insb
jne
jae
and
xchg
or
push
add
neg
jo
in
decl
adc
xchg
into
imulb
outsl
rcl
push
jae
imulb
in
pop
clc
in
mov
push
movsl
mov
fiaddl
in
gs
lods
outsl
push
loope
xchg
xchg
or
add
int
mov
push
fidivl
mov
divb
sub
mov
push
push
dec
fwait
jg
inc
dec
jb
push
cmpsb
push
rcrl
loope
je
inc
inc
xor
cli
xor
aaa
xor
addr16
dec
aas
arpl
push
popa
or
out
sub
sub
inc
insl
inc
imul
mov
scas
xchg
cmc
out
mov
ret
gs
in
cmpsb
scas
inc
inc
inc
dec
fcoml
dec
push
mov
pop
jle
mov
push
fucomip
sbb
iretw
jp
hlt
xor
cwtl
cli
subb
inc
lcall
cli
aam
aaa
xchg
lods
sbbb
pushf
and
xor
jbe
ja
pusha
hlt
gs
mov
jmp
mov
dec
test
push
insl
sub
loop
sub
std
dec
incl
fidivl
pop
or
mov
xor
cld
and
push
fisubrs
push
sub
push
xor
push
bound
mov
popa
in
fisubrl
add
loop
pop
stc
or
orb
inc
cld
lds
sub
divl
mov
sbb
cmpb
xor
test
shll
repnz
mov
cwtl
jp,pn
jnp
or
data16
push
icebp
stos
lahf
pop
test
pop
loop
dec
repz
add
jb
push
test
xlat
sub
sub
out
or
xor
movsl
or
push
lea
xchg
cs
pop
xchg
test
dec
or
mov
and
cmp
daa
mov
mov
xor
aaa
cmp
and
jge
scas
inc
sub
pop
cli
jl
aaa
pop
lods
aas
lcall
and
sub
and
jl
in
rolb
scas
lock
push
cmc
adcl
or
int3
callw
outsb
adcb
push
loopne
pop
clc
ret
lods
xorb
and
xchg
dec
scas
cmp
jp
fcoml
arpl
cwtl
dec
adc
mov
mov
xor
xchg
xchg
clc
xor
leave
add
ss
pop
xchg
rclb
dec
lock
fdivrp
repnz
aaa
mov
jp
lock
mov
sbb
and
pop
xor
cmp
or
ss
pusha
lock
scas
xor
xchg
push
mov
mov
cmc
ficomps
xchg
popf
nop
shlb
je
ds
clc
jmp
mov
or
es
push
pushf
cs
pop
sbb
aas
xchg
push
aaa
or
pop
xchg
insl
xor
jne
fwait
jge
scas
fdivl
pop
lcall
mov
sbb
lds
popf
loopne
call
ljmp
bound
popf
cmpsl
and
xor
cmp
daa
scas
dec
stos
xor
scas
inc
cmp
jo
fdivrp
js
xorb
sahf
int3
cmpsb
daa
out
lods
cwtl
mov
sar
lret
xor
shll
pushf
fldt
sbb
in
pop
push
cmc
lods
push
fwait
decb
or
pslld
or
mov
mov
pusha
dec
pop
mov
orb
std
mov
shlb
std
loopne
clc
pusha
pop
hlt
cmp
mov
jbe
sbb
pop
jp
push
sub
clc
mov
jns
pushf
sub
push
enter
xchg
xchg
lock
sbbb
cmp
or
push
jo
xchg
push
mov
adc
add
sub
add
cmp
aaa
inc
repnz
gs
or
mov
pushf
cmc
mov
leave
xor
add
clc
cmp
loopne
out
inc
xchg
ud2
negb
scas
jo
xor
push
lahf
mov
mov
das
pop
jbe
das
rolb
jo
notb
fistl
mov
icebp
cs
xor
leave
mov
pusha
stc
loopne
jmp
call
clc
aaa
shlb
and
xorb
mov
testb
dec
sbb
cli
movaps
ds
test
pusha
stos
pushf
cmp
out
repnz
sbb
sbb
xchg
lods
or
lcall
fdivr
or
aaa
or
mov
clc
or
ss
lock
xor
mov
xor
jns
xor
jnp
mov
pop
cli
add
je
pop
idivb
scas
pushf
or
mov
aaa
xchg
repnz
aaa
or
cmpsl
lcall
testb
lds
das
adc
pushf
adc
out
scas
pushf
cli
cli
adc
ret
jbe
pop
das
sbb
and
cs
aaa
negb
das
inc
pushf
sbb
dec
cmpsb
pushf
push
cli
push
pop
sbb
insl
mov
andl
lcall
je
mov
mov
ds
sub
fsubrl
pushf
lock
cs
xor
adc
push
aaa
xor
cli
xor
xor
add
inc
push
pusha
idiv
outsb
xor
jne
xchg
lock
andb
repnz
xor
mov
scas
pop
lcall
testb
into
bound
inc
iret
loopne
jmp
stc
mov
test
imulb
test
mov
inc
mov
push
pushf
pop
dec
lods
imul
mov
lahf
xchg
lods
mov
das
push
pushf
int
xor
adc
cli
pop
add
or
sbb
scas
xor
sbb
mov
push
negb
cli
imul
je
pop
into
clc
inc
pop
nop
cld
cmpsb
cwtl
sbb
cmc
xchg
into
inc
adc
fcmovnb
xchg
xchg
push
xchg
nop
add
out
or
jbe
scas
jbe
add
and
into
fsubs
cmp
mov
sub
adcb
in
mov
jbe
pusha
in
mov
in
sarb
test
stc
loopne
jmp
into
clc
incb
inc
rcrb
add
cmp
pusha
xor
push
daa
idivb
and
in
je
xchg
out
movsl
jbe
push
outsl
popf
enter
loope,pn
mov
jg
movsl
and
scas
xchg
dec
loopne
int3
mov
push
dec
cmp
in
jno
mov
addl
xchg
pop
sahf
ficompl
push
push
mov
fwait
mov
js
sub
fcomps
sbb
ss
pop
fwait
int3
push
cmpsb
xchg
pop
sti
scas
mov
jno
clc
out
or
popf
nop
lock
mov
sahf
jb
add
scas
or
and
loopne
and
mov
repnz
xor
scas
mov
dec
mov
add
dec
push
pusha
sbb
xlat
imul
xchg
call
xchg
mov
mov
cwtl
ds
add
ror
std
add
dec
sahf
mov
loopne
sahf
sbb
mov
clc
out
or
add
jp
dec
rclb
aad
lcall
lock
xchg
js
out
stos
mov
cmp
scas
out
mov
add
loopne
stc
nop
popf
cltd
and
movsl
xor
mov
shr
xor
mov
ror
fildl
push
xchg
cli
or
xor
cmpsb
pop
das
fiadds
rorb
movsl
push
scas
push
pop
scas
mov
lcall
andb
mov
cmp
ss
sbb
stos
ret
ss
pop
test
mov
xchg
mul
lock
xor
or
add
push
cli
enter
add
push
mov
scas
or
jo
jnp
mov
lcall
add
xor
or
push
jg
inc
push
push
sub
pop
aam
mov
ret
ret
scas
and
std
or
cmp
cmp
je
push
sub
imulb
testb
cs
sub
and
or
inc
dec
aaa
fld
jp
repnz
push
or
sbb
aad
sub
sahf
sub
sbb
mov
test
test
stc
outsb
movsb
jl
loope
in
enter
lods
xchg
lret
inc
ficomps
sub
push
hlt
sbb
ror
mov
inc
mov
mov
mov
or
pop
dec
mov
add
inc
je
cltd
movsl
mov
xlat
jmp
push
push
dec
and
rcrl
add
sub
cmpsl
out
into
mov
inc
dec
shl
sbb
shrl
sbb
mov
add
das
sub
cmp
jne
out
and
push
test
sub
or
clc
stc
ss
je
cs
fldenv
cmp
inc
and
out
mov
xor
mov
test
adc
xor
fwait
addl
cmp
push
leave
push
mov
or
ficoml
add
mov
pop
iret
sbb
pop
call
push
pop
mov
inc
xchg
or
sub
inc
pop
xchg
lods
push
or
cmp
jecxz
xor
in
in
mov
jnp
fcompl
mov
pop
lods
lock
ss
icebp
int
fidivrl
add
adc
les
cmp
add
jne
sub
and
dec
mov
mov
test
lock
in
mov
lock
or
adc
pop
mov
lcall
stos
mov
adc
adc
in
out
or
out
in
push
jmp
sbb
add
sbb
add
ja
mov
aas
cmpsb
fsubl
push
cmpb
outsb
inc
mov
push
adc
mov
adc
aad
dec
sbb
pop
repz
adcb
mov
xlat
lret
js
stos
sbb
mov
sbb
int
or
sub
adc
jne
ret
cmp
stos
mov
test
mov
push
or
sbb
test
push
pushf
hlt
dec
pop
mov
and
cmp
jb
mov
je
lock
mov
inc
cmc
xchg
imull
mov
dec
mov
sbb
clc
adc
lcall
sub
or
aad
pop
test
test
data16
dec
gs
sbb
mov
fsubr
inc
out
ja
adc
sbb
popw
call
push
or
xchg
clc
sbb
mov
add
sub
add
sub
inc
es
cmp
test
or
jp
jb
adc
sub
psubsw
cld
xor
xchg
push
cmp
jmp
cmp
add
dec
add
add
push
lods
pusha
mov
mov
xor
mov
sub
cli
jl
mov
jne
fsubr
push
sub
out
push
xchg
das
mov
lock
fdivrl
out
std
std
sbb
les
jecxz
ret
or
imul
inc
xor
jle
sbb
push
sub
in
rol
insl
enter
sub
xor
mov
pop
xlat
vmread
push
sbb
pop
mov
aad
jnp
lret
or
jecxz
cmp
out
mov
cmp
push
jne
dec
jecxz
push
out
cmp
cmp
repz
pop
imul
push
or
push
dec
add
push
out
sub
xor
dec
mov
add
ret
inc
inc
jmp
out
and
sbb
imul
push
add
out
cs
sbb
cmp
jl
sub
arpl
outsb
jp
rcrb
lahf
mov
or
and
mov
fwait
hlt
pushl
add
call
sbb
pop
cli
mov
sub
push
testl
sbb
jne
mov
in
cmp
iret
out
xor
iret
sub
sar
jne
inc
cmp
and
je
push
and
icebp
and
push
aaa
jb
enter
jb
in
aas
lock
xor
ror
cld
insb
add
lods
sti
cmp
imul
sbb
sbb
ss
addr16
and
int3
lret
jp
cmpsb
imul
or
sub
xchg
xlat
ds
test
insl
popa
shl
notl
mov
push
lock
into
jg
or
fwait
div
xchg
lock
and
or
lock
push
xor
mov
and
sub
leave
dec
jp
cmp
push
mov
js
sbb
int3
and
sub
das
or
andl
and
sti
sar
add
lds
nop
sub
ss
and
inc
jl
fmul
ljmp
arpl
in
push
ror
test
mov
xchg
xor
mov
xchg
mov
sbb
rcrl
dec
aaa
arpl
stc
pop
mov
inc
sar
mov
mov
int3
sbb
mull
in
sahf
add
pop
ret
repz
add
out
aaa
mov
fsts
fmull
rcll
cli
xchg
mov
ret
push
mov
xchg
sbb
cli
js
cli
stos
mov
adc
loop
in
cli
inc
scas
repz
jae
addr16
movsb
loope
call
xor
xor
gs
movsb
add
mov
out
mov
pop
and
in
inc
rorl
or
shl
jns
xchg
dec
mov
insb
push
ret
sbb
out
adc
loope
and
or
dec
lahf
loope
sub
push
or
push
or
loope
sub
jmp
jmp
imul
xchg
mov
cli
mov
jo
lock
push
fsubrl
mov
pop
sbb
dec
movsl
negb
sub
mov
fiadds
aaa
test
icebp
or
dec
imul
sbb
mov
push
add
fisubrl
lcall
xor
sti
clc
les
pop
adc
cli
and
dec
and
aad
ret
testl
push
fcoml
sahf
mov
jmp
jae
dec
lret
loopne
push
cmp
faddl
aaa
sbb
outsb
addb
test
aam
cmpsb
sbb
std
mov
flds
lds
call
sub
dec
lcall
dec
add
mov
je
loope
je
xchg
adc
push
stos
jg
mov
loope
lcall
pop
adc
jmp
lds
add
mov
pop
sti
adc
push
repnz
jb
icebp
inc
pop
add
jmp
addr16
add
cmp
fwait
pusha
int3
jno
push
leave
cmp
sar
pop
push
xchg
lods
or
xor
mov
std
loope
fstl
lcall
mov
sub
adcb
popf
das
fcoml
rorb
fwait
cmp
fldt
inc
in
xchg
nop
adc
addr16
lret
ret
mov
push
sahf
adc
and
xchg
jns
adc
loop,pt
sub
or
stc
call
cmp
mov
cwtl
in
das
sub
xlat
jbe
rcll
push
push
sbbb
stos
push
shll
scas
sahf
xchg
nop
add
push
push
fs
decl
pushf
daa
shll
sar
lcall
pop
mov
test
or
insl
push
or
popf
add
sbb
dec
inc
in
sbb
jmp
setns
mov
nop
xchg
out
jge
hlt
repz
xor
push
fs
fwait
or
aaa
push
imul
adc
mov
pop
loope
adc
mov
dec
jnp
push
or
mov
dec
pop
cs
lock
adc
push
pop
inc
jnp
movsb
scas
movsb
loop
jp
inc
xchg
jge
xchg
cmc
movsl
mov
ja
bound
lahf
adc
loope
and
daa
sbb
sbb
out
sub
fdivrs
and
adc
scas
fldenv
adc
xlat
addr16
lret
iret
mov
sarl
jae
aam
daa
mov
push
jns
sbb
mov
sbb
mov
pop
mov
les
mov
je
pusha
adc
pop
mov
sahf
insl
mov
xchg
or
mov
xor
jnp
movsb
or
in
mov
push
pop
ror
cltd
jge
jmp
or
add
xlat
jl
xor
ds
je
adc
adc
loope
jl
scas
push
dec
sbb
xor
andb
pop
adc
in
sbb
jb
clc
jl
movsb
imul
ljmp
faddl
ss
inc
xchg
jae
cmp
dec
jb
adc
mov
pop
stos
mov
mov
into
adc
test
stc
xor
push
jns
jbe
cld
inc
test
inc
push
cli
shl
sbb
and
cmp
lahf
js
out
das
xor
das
mov
or
sar
inc
in
lahf
ret
fldt
cmp
mov
mov
pop
stos
fcoml
insb
and
xchg
jmp
sbb
lea
sahf
fdivrl
mov
adc
stc
xchg
popa
mov
loopne
xor
icebp
mov
or
mov
fdivs
or
cltd
or
push
sub
mov
inc
xchg
push
adc
div
sbb
jbe
jae
xchg
mov
sbb
lods
call
push
dec
ss
ret
call
inc
cmp
mov
dec
sub
imul
cmpsb
sub
or
aaa
call
inc
out
enter
cli
xchg
adc
cmc
mov
mov
je
ljmp
add
test
ljmp
sbb
cmp
in
std
mov
xor
mov
fs
movsb
je
jnp
cwtl
jne
sub
in
push
call
inc
xchg
enter
jo
cmpsl
mov
dec
pop
push
icebp
xchg
mov
and
loopne
scas
insb
xchg
or
add
add
call
add
cmp
inc
scas
cmc
test
pop
dec
mov
rcll
xchg
sbb
lds
or
rclb
pop
stos
sub
inc
sbb
jge
das
xchg
xchg
lock
add
xor
push
out
push
xchg
fmull
js
int
and
sub
out
fbstp
in
rolb
sub
inc
push
xor
ret
fisubrl
sub
cmp
test
xor
imull
outsl
and
or
mov
testb
jp
lcall
clc
add
stc
push
jg
call
repnz
shl
lods
ss
sub
add
lods
xchg
push
mov
lock
push
xor
pop
push
mov
sbb
pop
decb
cmp
dec
lea
adc
adc
cmp
call
push
sti
pop
lods
and
mov
stos
je
pop
add
imul
sbb
xchg
ret
test
enter
shl
push
cld
mov
xlat
sub
shll
lret
ds
add
jbe
inc
jge
add
pop
cmp
pop
icebp
pop
sbb
shll
sarb
cld
loope
adc
and
push
mov
mov
cmc
insb
notl
xlat
mov
push
xchg
ret
enter
cld
repz
inc
push
std
out
fistpll
fiaddl
jp
mov
into
daa
inc
es
mov
lret
ja
mov
rcrb
add
arpl
xchg
stc
pop
cli
sub
inc
std
and
lea
xchg
mov
pop
in
arpl
mov
ret
cli
cmp
mov
xor
lods
cmpsb
ja
push
aad
dec
pop
or
inc
jnp
adc
stc
pop
clc
pushf
or
idivb
add
ja
pop
sub
adc
jmp
xchg
fs
xchg
cmpsb
pop
lahf
pop
pop
pop
sbb
hlt
sahf
je
iret
mov
arpl
push
ljmp
enter
and
sarl
sahf
call
popf
lock
orb
addb
mov
jmp
or
xchg
clc
sub
cmp
xchg
negb
rclb
pop
sub
sub
push
adcl
adc
clc
out
sub
into
and
pop
adc
push
xor
fisttpl
loop
push
daa
mov
pop
ret
out
dec
cmc
loope
push
cld
movb
xor
inc
mov
mov
or
cmp
testl
stc
dec
dec
test
push
xor
test
add
and
leave
repz
adc
cmp
mov
daa
cmc
insb
jmp
cmp
ficoms
sub
pop
ret
mov
repz
sahf
push
xchg
add
dec
cli
xlat
adc
dec
lea
imul
dec
cltd
inc
and
rolb
push
sbb
repz
and
sub
or
fisubrs
call
nop
push
inc
popf
adc
lods
pop
inc
pop
stos
jne
push
mov
cli
stos
pop
insl
cwtl
inc
je
shrl
sbb
mov
cli
dec
xlat
push
test
jmp
inc
ficomps
or
adc
push
js
dec
inc
mov
call
dec
lds
add
in
sub
rolb
pop
lock
or
lcall
jns
repz
adc
adcb
add
cmp
out
xchg
fstps
or
rcrb
mov
xchg
stos
shl
int3
mov
out
cmp
sub
mov
hlt
add
outsl
idiv
notl
je
cmpsb
sti
sub
mov
iret
push
es
push
ret
xchg
leave
call
cmp
pop
cld
je
notl
or
push
movsb
adc
in
add
in
sub
cld
movb
stos
sbb
sahf
insb
xor
or
shrl
add
loop
daa
lahf
lret
push
inc
pop
jg
aad
pop
out
jne
bound
xchg
add
out
dec
cmp
fsts
push
stc
push
lahf
jge
fidivl
or
pop
out
cmpsl
stos
jnp
mov
mov
fs
out
sub
pop
clc
push
push
jp
and
push
inc
insl
adc
jne
ja
test
ret
sbb
mov
aaa
pop
pop
dec
pop
fisubs
out
scas
inc
sub
sub
jb
mov
in
in
in
xorl
test
adcb
in
popf
test
ss
daa
cmp
xor
scas
sbbl
add
rcll
push
icebp
push
neg
add
add
mov
sub
scas
test
add
lods
sti
mov
ds
aad
stos
dec
adc
push
fs
jne
sub
inc
adc
pop
test
lea
cwtl
or
int3
mov
sbb
mov
daa
lahf
xchg
hlt
stos
add
xor
push
popa
fcomip
jmp
lock
ljmp
cmc
sbb
hlt
orl
in
xlat
out
test
xchg
push
sub
in
inc
mov
int
push
inc
lret
adc
pop
xor
adc
out
std
shl
pop
pop
aam
int3
popa
outsl
push
jnp
rclb
push
dec
fwait
push
mov
imul
rorb
mov
aam
insb
jecxz
push
push
shll
aas
push
xor
fimull
push
add
xor
push
outsb
test
inc
aas
push
inc
xor
xor
pop
or
sbb
addr16
cltd
push
inc
shlb
push
andb
mov
repz
mov
inc
inc
xchg
push
mov
call
repz
imul
fistpl
aam
daa
cmp
adc
dec
and
pop
and
jnp
test
mov
xchg
and
and
and
and
and
and
cmp
or
sub
sbb
push
pop
outsl
pop
sbbb
pushf
pop
lods
pop
ret
pop
fcompl
pop
ljmp
pop
add
outsl
sub
pop
ss
inc
dec
dec
inc
dec
inc
push
inc
pop
inc
jo
jp
addb
xchg
inc
lcall
inc
int3
inc
fildl
inc
in
inc
sti
inc
pop
cmp
sub
sub
les
push
rorb
rol
rcl
fld
jmp
mov
sbb
inc
and
push
and
push
je
mov
mov
and
and
and
and
cmp
adc
inc
cmp
push
jns
pop
imul
mov
pop
stos
pop
mov
mov
mov
pop
rcrb
pop
clc
pop
or
emms
sbb
sub
push
cmp
inc
dec
inc
push
inc
pusha
inc
jno
addb
mov
inc
mov
inc
stc
inc
incl
mov
add
loopne
xor
mov
icebp
jae
jle
mov
int3
inc
out
inc
sti
inc
pop
xor
or
movb
out
pushf
addl
xlat
sub
in
mov
mov
jl
xor
xlat
inc
mov
dec
mov
inc
sahf
inc
mov
mov
inc
fiaddl
inc
repnz
mov
pop
adc
and
dec
cmp
rorb
rclb
jl
xchg
sbbl
cmp
inc
cmp
pop
jns
pop
jns
sbbb
nop
pop
xchg
pop
lcall
pop
fcomps
pop
or
sbb
push
push
dec
mov
inc
cmpsb
inc
mov
ss
inc
lret
pop
arpl
insl
ret
test
xchg
shlb
fcmovnb
loope
icebp
shl
add
test
test
subb
cmp
pop
xorl
rolb
push
cmp
bound
addr16
mov
icebp
mov
mov
mov
pop
in
pop
repnz
negl
pop
add
or
outsl
adc
sbb
push
and
inc
push
inc
popa
mov
sahf
out
inc
mov
and
shr
icebp
sar
cmp
or
adc
push
daa
les
rorb
repnz
jno
jno
jge
cmp
sub
xor
sbb
bound
pop
cmpsb
pop
rcrb
pop
fstpl
pop
jmp
cmp
test
pop
xorb
subb
iret
and
lock
xor
mov
icebp
cwtl
xor
jno
jno
jno
ja
sbb
cmp
pop
scas
pop
mov
jb
sub
les
dec
rclb
shrb
rolb
xchg
shlb
mov
mov
shl
in
pop
xchg
jg
cwtl
add
mov
test
ret
movsl
mov
xlat
xor
lock
dec
jno
mov
icebp
addr16
jno
inc
inc
mov
mov
adc
push
sbb
ret
je
adcl
jne
adc
insl
sbb
insb
in
cmp
inc
cli
inc
push
xor
dec
bound
sub
icebp
pop
mov
jno
jno
jne
adc
xor
push
fs
jo
xchg
inc
fildl
add
int3
adc
es
aas
orl
jg
and
and
and
cmp
aaa
dec
lcall
push
jb
jl
pop
fcompl
insl
xchg
repnz
add
or
adc
add
les
imul
or
clc
sbb
fsts
sbb
mov
pop
pop
aad
ficomps
cmp
ja
lret
dec
dec
dec
push
inc
pop
inc
cwtl
inc
cmpsb
inc
scas
inc
call
lret
xchg
enter
out
out
inc
sbb
test
addb
adc
cmp
shll
and
mov
repz
cmp
ds
adc
push
fldenv
xor
ss
pop
inc
pop
pop
pop
insb
pop
jb
xchg
pop
test
mov
pop
out
negl
pop
add
sbb
outsl
pop
addr16
insb
push
jne
jle
xchg
mov
or
adc
das
fistpl
sahf
xchg
popa
inc
jns
cmpsl
inc
lods
inc
mov
mov
sub
shl
call
int3
push
lret
sbb
push
les
ret
cmp
fwait
dec
cmp
insl
pop
mov
push
jp
inc
enter
rolb
inc
call
inc
cld
das
jl
pop
subb
inc
jns
pop
xchg
pop
mov
les
sub
mov
js
or
mov
mov
rolb
ljmp
lock
jle
leave
mov
jmp
mov
cmp
dec
insl
imul
nop
dec
xchg
dec
mov
mov
dec
sbb
and
push
addr16
les
jl
xchg
xchg
rcrb
add
adc
inc
mov
bound
addr16
inc
stc
dec
pop
sbb
pop
sbbb
or
and
int3
sub
cmp
shlb
inc
and
push
mul
xchg
call
inc
in
inc
icebp
inc
call
sbb
rcrb
jg
clc
mov
fs
ja
jge
test
cmp
das
jno
mov
icebp
nop
xor
ds
sub
repnz
push
jnp
out
xchg
out
sub
cmp
ja
hlt
dec
cli
rcrb
push
ja
pusha
cmpsl
adc
outsl
mov
xchg
lcall
lock
mov
fists
mov
maskmovq
notl
pop
sub
dec
mov
mov
fiaddl
inc
out
out
and
push
sub
mov
push
and
mov
int3
lcall
xor
mov
lods
dec
fildl
inc
mov
and
fnsave
in
ja
jg
push
outsl
pop
imul
jbe
addl
mov
jp
mov
xchg
out
mov
push
pop
cli
imul
jmp
cmp
scas
mov
cmp
mov
inc
lods
pop
icebp
pop
mov
jno
jno
ja
fbstp
scas
xchg
jbe
roll
and
lock
xor
push
mov
icebp
xchg
xor
mov
sub
mov
inc
mov
icebp
lea
mov
lret
add
repz
sbb
and
or
jns
push
lcall
aas
int3
adc
ljmp
sbbl
sbbl
clc
scas
mov
xor
dec
xor
fdivs
xchg
fdivrl
ss
inc
push
push
dec
push
inc
gs
xor
xchg
sbbl
push
lret
inc
dec
les
jae
mov
cwtl
mov
and
pop
fwait
or
shl
xor
fmull
ficomps
dec
inc
roll
into
inc
roll
inc
out
inc
jle
or
es
push
push
dec
inc
dec
push
inc
addl
xchg
cwtl
fmull
cmp
inc
lcall
les
pop
test
push
scas
push
fisubrs
mov
shll
sub
mov
mov
fidivl
stc
jo
test
cli
pop
mov
stc
iret
cmp
jg
aas
sbb
pop
add
xchg
inc
jo
fs
ds
and
pop
xor
ljmp
repnz
cmp
xor
inc
dec
push
dec
js
addb
inc
mov
xchg
shll
cmc
insb
sbb
les
push
pop
popa
dec
jb
inc
mov
fisttpll
loop
out
les
xor
sub
and
pop
insl
xchg
and
xchg
cmpl
pushf
adc
sahf
dec
pop
push
push
pop
lcall
or
loop
in
dec
pop
ret
daa
or
mov
xchg
and
sub
add
inc
cmc
inc
cld
inc
add
int3
or
adc
sbb
out
jl
dec
jecxz
add
and
sub
rorl
mov
inc
push
aaa
cs
push
mov
sub
add
jg
pop
inc
jae
outsb
addl
rcrb
jno
jno
jno
jno
jno
bound
cmp
jno
mov
idivl
push
popl
and
cmpsb
cmp
dec
rorl
mov
cmp
and
mov
push
sub
dec
mov
dec
movsl
dec
scas
dec
fisttpll
negb
cmp
les
mov
pop
jno
jno
jno
jno
jno
jno
jne
pop
fcoml
cmp
ja
outsl
daa
xor
jl
dec
cmp
sbbl
ja
ficomps
test
sub
xor
jne
fistpll
cmp
jp
and
and
cmp
xlat
xchg
pop
ja
outsl
imul
adcl
negb
pop
rcrl
inc
loopne
jmp
icebp
inc
push
xchg
and
pop
push
test
inc
sahf
inc
movsl
inc
stos
inc
rolb
fadds
inc
jecxz
call
inc
aas
aas
adc
mov
dec
dec
push
sub
mov
movsb
and
push
inc
imull
xor
testl
push
fwait
pop
cmp
pop
insl
push
dec
addl
inc
stc
sub
mov
push
jge
and
in
out
xchg
push
cld
mov
jb
jl
int3
mov
or
in
lods
dec
mov
add
dec
sub
pop
cmp
mov
mov
ret
inc
lret
inc
xlat
mov
std
sub
inc
mov
loope
mov
pop
jno
jno
jno
jno
jno
jno
jno
ja
pop
test
xor
sbb
cmp
sub
pop
test
mov
mov
les
dec
or
das
push
call
pop
aaa
mov
rolb
fiaddl
push
ss
mov
aaa
cmpsl
inc
mov
mov
inc
rcr
adc
mov
out
sbb
cmp
aam
push
rcrb
je
jle
add
repz
out
mov
rcrl
pop
in
pop
icebp
pop
clc
pop
or
push
ja
outsl
and
pop
inc
push
dec
ret
pop
cmp
pop
lods
pop
shlb
in
and
lods
adc
and
sub
les
jae
jge
test
jmp
rolb
inc
out
lock
add
loop
cli
sub
sarb
shlb
shlb
rorb
mov
in
cmp
mov
cmp
jl
nop
pop
xchg
pop
fcompl
les
inc
cmp
cmp
pop
outsl
out
rclb
es
bound
jb
mov
xchg
mov
sub
xor
mov
incl
inc
cmc
inc
sti
inc
add
int3
pop
lret
and
daa
mov
cmp
inc
pop
lret
and
rclb
lods
mov
mov
rolb
inc
in
inc
cmp
addr16
pop
push
js
xchg
dec
test
fcoms
push
cmp
and
scas
inc
mov
ja
lcall
mov
jl
sub
mov
data16
out
sarb
mov
sub
jp
cmp
jl
call
jge
cltd
inc
mov
les
xchg
mov
cli
bound
aaa
adc
mov
sbb
jns
pop
dec
push
inc
jno
ja
mov
or
mov
insb
jnp
shrb
add
and
jg
pop
insb
pop
jne
loop
mov
pop
ret
insl
mov
add
idivb
add
or
shlb
inc
ret
push
shlb
shrb
mov
xchg
jne
sbb
mov
mov
sub
push
aam
and
dec
xlat
mov
inc
xchg
inc
lahf
sub
into
movl
call
test
xor
inc
cmpsb
rclb
loop
loop
xchg
ja
out
in
mov
int
shll
jge
cmp
pop
xlat
mov
cmp
dec
mov
loop
testl
add
lock
shlb
xor
xor
std
or
push
sub
mov
jge
xchg
dec
pushf
mull
lret
rolb
out
and
sub
data16
xor
dec
push
or
pop
and
push
enter
inc
sti
inc
add
cmc
sbb
and
inc
mov
icebp
push
xor
add
sarb
xor
ja
mov
mull
inc
pop
dec
push
push
dec
pop
inc
addr16
mov
jae
ljmp
movsb
sarb
xchg
or
and
push
icebp
and
cmc
test
inc
fwait
xchg
stos
and
lcall
and
pop
pop
pusha
dec
dec
insb
dec
jae
and
cmpsl
and
and
and
cmp
ss
aaa
sub
ret
push
popf
push
sahf
dec
test
dec
into
dec
aad
or
add
inc
dec
insb
mov
ljmp
adc
data16
test
adc
sub
jl
sbb
test
mov
cmp
icebp
mov
mov
js
add
hlt
and
das
lcall
sub
pop
scas
sub
dec
aad
fimull
dec
hlt
insb
pop
mov
ss
xor
or
and
dec
lret
shrb
negl
fcmovb
push
stos
sub
xor
inc
xchg
mov
xorl
and
cmc
pop
add
cmp
push
out
cmpsb
shlb
mov
mov
ja
outsb
push
mov
popa
lcall
int
stc
ljmp
es
add
inc
pop
inc
outsb
lcall
inc
rolb
mov
pop
or
adc
xchg
cmp
cltd
pushl
sbbl
lods
mov
rolb
lods
mov
in
lock
clc
inc
add
mov
es
xor
loopne
sub
jp
mov
add
sbb
and
sub
jno
ja
out
mov
aam
fwait
ljmp
jecxz
push
cwtl
jle
and
cmp
cmp
insb
insb
inc
ljmp
xchg
mov
push
cmp
adc
dec
push
jo
lea
sar
int
call
inc
lock
mov
pop
out
mov
xorb
mov
xchg
lods
and
xor
mov
cmp
fimull
mov
jno
jno
jne
sbb
pop
fisubs
pop
adc
aaa
dec
xchg
mov
lcall
jno
jno
jno
ja
scas
jp
mov
fwait
sbb
pusha
addr16
jl
xorb
cltd
jl
pop
aad
loopne
out
pop
add
adc
mov
pushf
and
adc
add
sbbl
xor
xor
sub
adc
and
inc
pushf
cmp
ss
xlat
cs
dec
lods
cs
xor
push
negb
jo
jne
andb
and
sbb
pop
lret
pop
loope
sahf
cmp
xor
cmp
pop
sub
outsb
call
stos
jge
aam
fcomip
adc
inc
sti
mov
sub
jecxz
and
mov
or
jo
and
fwait
xor
mov
pop
stc
pop
lcall
adc
sbb
pushf
jl
call
aas
dec
inc
inc
call
pop
xchg
mov
insb
ja
dec
in
mov
mov
dec
rol
hlt
iret
jl
fdiv
jle
rcrb
sub
add
push
dec
jnp
mov
sbbb
clc
out
inc
cli
inc
or
int3
adc
sub
xor
cmp
jge,pt
pop
dec
arpl
dec
add
leave
cmp
cmp
out
fcompl
mov
sub
pop
nop
mov
ja
or
cld
inc
bound
jnp
cmp
dec
push
lods
mov
mov
pmaxsw
in
cmp
dec
mov
lcall
xchg
movsb
push
cmp
imul
jno
jl
xor
sbb
fildl
pop
and
bound
inc
ret
insl
mov
out
dec
aam
adc
push
jge
repz
xlat
sbb
shlb
in
mov
sarb
cmp
imulb
scas
sub
mov
or
ja
nop
jl
pop
inc
adc
dec
aaa
pop
bound
test
testl
pushf
ret
cli
and
lods
xor
xor
cli
xchg
jne
les
fwait
cmp
cmp
divb
cmp
add
lods
in
sbb
push
and
lods
cs
les
push
addb
sub
movsb
pop
dec
cltd
fisubl
mov
fnstsw
shl
cld
movl
cltd
push
outsl
push
mov
jb
jo
xchg
imul
pusha
lods
test
sub
xchg
mov
out
movsb
nop
cmc
pop
sub
dec
jle
cs
pushf
and
shrb
fs
nop
sub
xchg
addb
mov
mov
mov
inc
or
scas
sti
mov
push
aaa
shrl
lret
add
aad
fs
out
je
sub
mov
cmp
cmp
jl
dec
in
pop
push
data16
pushf
adc
push
jae
pop
jge
mov
add
xchg
stos
push
lods
mov
movsb
xor
jno
ja
pop
mov
inc
fiadds
mov
mov
jle
nop
loope,pt
fnsave
sarb
out
ror
sbb
fisttpll
sbb
cld
fwait
in
hlt
sbb
test
lods
pushf
mov
mov
ficompl
movsl
pusha
cli
mov
or
fbstp
and
lods
div
rcr
aad
outsl
inc
lods
cmc
cmc
sar
fidivrl
pop
les
in
mov
out
inc
not
pushf
mov
psllw
scas
sub
pop
adc
xchg
ss
lods
jbe
lret
fimull
icebp
in
loop
cld
sar
mov
ds
xchg
jle
outsl
stos
jp
mov
and
iret
sub
mov
jecxz
outsb
mov
cmp
data16
ds
insb
push
jmp
loop
xchg
cmp
lock
in
movsb
push
sbb
mov
cmp
push
es
mov
js
aam
iret
add
sub
jmp
xor
xor
repz
inc
xor
cmp
jle
xchg
cmp
fcomps
je
aaa
or
xchg
sahf
fwait
arpl
int3
cmp
dec
in
jl
pop
push
lods
insb
push
cld
ja
cmp
cmpl
mov
push
in
test
mov
xchg
mov
inc
xchg
xchg
mov
mov
scas
adc
lcall
cmpl
rorb
push
pop
and
add
xchg
push
aas
inc
xlat
sbb
xchg
and
push
stos
mov
adc
jnp
xchg
push
cmp
lret
adc
sbb
push
mov
jp
loop
test
jp
jge
jl
sub
lods
mov
mov
inc
xchg
add
lods
pushf
lea
call
clc
xor
cld
pop
aaa
pop
insb
inc
outsl
mov
outsb
add
or
ret
sbb
inc
ror
add
cmp
pop
jl
cmp
orb
aad
xchg
inc
cmp
in
jmp
loopne
sbb
shrb
pop
adc
out
in
mov
adc
sub
daa
test
dec
xchg
cmp
push
sbb
pop
pop
pop
pusha
pop
fs
push
xchg
je
mov
shll
hlt
nop
jl
cwtl
jmp
xchg
mov
jbe
mov
enter
push
fdivs
fisttps
cld
xchg
cld
mov
test
adc
xor
push
fdiv
js
xor
inc
cmp
inc
inc
nop
fwait
dec
pop
pop
push
inc
push
shll
pop
test
cmp
loopne
lods
in
cmc
add
mov
add
push
pop
mov
js
jl
fsubrl
enter
add
cltd
fdivrs
mov
call
mov
clc
xchg
cld
decl
mov
or
adc
dec
lock
jle
xor
ficomps
and
push
dec
fcomp
pop
inc
or
mov
dec
add
xchg
push
pop
xchg
cwtl
inc
pushf
lea
outsl
outsb
lds
cmpb
push
inc
fistl
lcall
mov
imulb
cmc
push
mov
mov
rep
dec
sbb
and
mov
mov
lods
rorb
enter
pusha
add
das
mov
lcall
or
rcr
daa
dec
stos
lods
inc
dec
mov
sub
mov
pop
test
call
int3
decb
test
js
mov
arpl
inc
test
pop
int3
jecxz
lret
adc
cmp
cmp
fwait
into
ss
jle
jle
call
loopne
add
xchg
rcrl
insl
xchg
repz
std
bound
test
addr16
dec
lcall
rolb
dec
cmpsb
dec
mov
int
and
push
cmc
enter
dec
adc
mov
popa
call
mov
mov
clc
test
inc
jmp
sbb
mov
xlat
push
xchg
mov
mov
clc
test
ljmp
mov
inc
jne
into
mov
mov
mov
iret
dec
aad
push
lods
cmc
pop
inc
sbb
cmp
and
xor
xchg
lods
hlt
xchg
cwtl
dec
lahf
xlat
inc
mov
sub
and
push
cmp
out
sbb
xchg
loopne
hlt
push
jl
lcall
or
pop
ficompl
push
testb
ss
xchg
add
lods
movsl
push
push
cltd
lret
add
jne
addr16
scas
xchg
jbe
cwtl
filds
inc
or
lcall
xchg
jg
stos
shlb
repz
stc
pop
lcall
inc
enter
sub
inc
jo
lock
sbb
and
out
sahf
adc
fs
xchg
xor
cwtl
push
cmp
or
push
mov
dec
ljmp
call
out
mov
add
out
fidivrl
or
sub
lahf
out
mov
fldt
cmc
cmp
fdivr
pop
sbb
clc
movsb
inc
scas
and
loope
jge
hlt
dec
sti
loopne
mov
aas
sub
je
jnp
jl
cmpb
lcall
add
inc
xchg
fwait
sbb
sahf
inc
sbb
cmp
xchg
dec
sbb
scas
pop
mov
lods
adc
cwtl
cmp
loope
jl
add
mov
les
aam
call
or
cmpb
dec
xchg
pop
pop
mov
cmp
push
lods
mov
cld
add
add
jg
imul
loop
nop
cmp
jecxz
call
pop
cwtl
pop
or
insl
push
lcall
mov
mov
lcall
mov
sub
fnsave
repz
sub
leave
lods
fdivrs
insb
fs
push
adc
cwtl
fbld
mov
xor
pushf
enter
cmp
mov
pop
rolb
or
dec
in
pop
mov
outsb
mov
andl
inc
fwait
idivb
cli
cmp
aaa
pop
out
icebp
jae
in
div
test
pop
testl
outsl
inc
addr16
lcall
les
ja
pop
loop
lcall
inc
mov
xchg
mov
or
hlt
ljmp
dec
cmp
cmpsb
xchg
inc
test
in
aad
dec
testb
push
scas
addb
sbb
mov
das
mov
pop
mov
xchg
incb
and
sub
inc
xor
mov
jae
ds
lods
rcrb
cmp
and
cmp
shll
outsl
inc
jp
scas
je
nop
jl
mov
hlt
cmp
and
cmp
dec
push
stc
sbbb
mov
dec
mov
mov
fimull
subb
xor
nop
lods
cmp
insb
aaa
mov
aad
into
movl
out
std
push
scas
sbb
cmpsl
pop
mov
mov
dec
insb
cmc
ja
xchg
out
push
push
xchg
add
jbe
addr16
addb
outsb
cmpsb
inc
lods
inc
mov
jl
leave
inc
jo
repz
add
fnstcw
cmp
jo
pop
xchg
arpl
fdivs
stos
jl
mov
mov
mov
mov
cld
ja
inc
lock
testb
cmc
cmpb
jmp
sub
das
push
pushf
nop
dec
push
outsb
push
insb
mov
and
fisubrl
sbb
stc
lea
pop
mov
pop
mov
mov
scas
jge
rorl
test
push
sub
dec
pop
mov
cmpsb
add
push
pop
push
mov
outsl
js
add
jge
mov
mov
mov
pop
adc
sbb
jecxz
mov
movsl
cwtl
lods
cwtl
sub
add
mov
sbb
and
pop
addb
mov
lcall
mov
xchg
mov
hlt
mov
mov
rcll
mov
mov
sub
pop
test
rorb
pop
clc
aam
and
xlat
lods
sub
data16
push
add
pop
test
cwtl
movsb
sub
nop
icebp
test
stos
lods
dec
pop
xor
mov
adc
mov
fidivrl
insb
mov
dec
ss
imul
lods
xchg
cld
push
add
repz
or
dec
fwait
push
jg
jge
test
test
mov
adc
dec
adc
test
sarl
push
ja
insb
shlb
cli
test
xchg
dec
test
lret
push
adc
and
or
mov
pusha
jg
jle
inc
mov
into
inc
aam
in
dec
cmc
inc
or
jns
jbe
push
test
pushf
mov
rolb
lock
mov
bound
aas
sub
addl
shl
add
bound
test
jge
pop
pop
pusha
pushw
loope
mov
mov
push
jo
inc
out
adc
aam
inc
inc
mov
cmc
shll
icebp
idivl
and
pop
sub
and
mov
lcall
sub
shrb
mov
lods
cltd
cmp
test
push
mov
cmc
push
bound
mov
fwait
pusha
and
call
cmp
pop
pop
rcrl
xor
or
mov
push
push
insb
insb
or
movb
lret
push
aam
xor
push
les
sub
mov
cld
fwait
stos
in
shrb
xor
sub
je
fidivs
jne
cmp
loop
mov
inc
xor
xorl
mov
xchg
jg
mov
ret
lds
bound
shrl
and
test
or
int3
test
push
loopne
pop
faddp
and
or
sbb
aam
rolb
dec
push
push
pop
cltd
lea
shlb
lock
jg
imul
mov
xchg
push
mov
ret
add
sbb
and
dec
inc
pop
xchg
cmp
je
push
xchg
nop
cmp
call
mov
dec
add
repnz
mov
retw
jne
bound
push
sbb
sub
cmp
test
cmp
cmp
adc
cmp
cmp
enter
mov
rcrl
and
inc
push
xchg
sub
hlt
mov
lret
sahf
idiv
mov
incb
adc
dec
orl
rol
or
cwtl
out
shrd
ja
mov
xchg
sub
sahf
mov
jne
mov
pop
clc
inc
xchg
cmpl
dec
mov
xor
jmp
decl
ja
insb
cmc
xchg
mov
mov
pop
pop
insb
sub
inc
sbb
psraw
inc
xchg
dec
fs
jge
mov
test
sbb
add
in
jl
loop
aam
sbb
ljmp
push
push
and
push
pushf
and
jp
cmp
lock
push
or
test
subb
sub
cwtl
jnp
sub
or
sub
sub
mov
das
es
mov
pop
and
ret
out
cmp
sti
push
lcall
sub
xor
ja
ret
dec
es
and
fs
fsubl
and
in
cmp
arpl
stos
jge
data16
or
sahf
sub
adc
sbb
sub
hlt
dec
or
subl
xchg
cmp
stos
xlat
push
movb
mov
fnsave
dec
sar
insb
ficoms
cmp
or
sbb
pop
lcall
rcrb
into
or
adc
inc
mov
das
push
into
push
add
sbb
xor
xlat
shll
xor
scas
add
fwait
insl
data16
cmpl
icebp
in
cmp
sub
dec
scas
fs
xchg
fidivl
dec
stos
xlat
inc
faddl
ficompl
nop
jge
dec
jge
insb
bound
js
jg
jbe
xchg
inc
popf
inc
movsb
add
jo
push
movb
fsubrl
sbb
mov
xor
hlt
push
push
cmp
push
repz
icebp
dec
add
pop
mov
pop
jp
lcall
jl
repz
push
push
jl
mov
pop
enter
shl
hlt
inc
cli
aaa
pop
lret
push
xchg
sub
mov
mov
scas
in
mov
or
or
xor
mov
push
lods
inc
mov
pushf
ret
movsb
xor
mov
inc
outsb
lret
lods
ss
lea
test
push
dec
cltd
lock
pop
add
sti
imul
dec
dec
pop
add
sbb
xor
or
lret
sub
cmp
loop
cwtl
lods
test
inc
mov
outsl
cs
fs
add
loope
mov
xchg
rolb
dec
jo
mov
sbbb
sub
jl
repz
sbb
negl
cmpb
cmp
js
mov
sub
outsb
push
jo
and
lcall
inc
aad
cmp
ljmp
icebp
and
fistpll
sarb
dec
mov
jmp
mov
sub
arpl
jp
div
mov
mov
push
aaa
in
outsb
pop
cmpb
xor
pop
jl
mov
mov
jp
sub
inc
test
sub
iret
ret
repz
add
xchg
mov
insb
fs
mov
lods
dec
jl
xchg
popa
mov
add
pusha
dec
xchg
les
xchg
cwtl
dec
movsb
nop
iret
push
sub
divl
inc
scas
lock
xorb
movsb
das
hlt
ret
inc
lcall
mov
xchg
sub
xor
xchg
mov
fnstenv
addr16
nop
cmpb
clc
mov
sbb
sub
cmpsb
fisubrl
ds
lcall
inc
pushf
decb
inc
pushf
clc
mov
lock
sbb
into
xchg
add
out
sbb
xor
fwait
xchg
loop
stos
mov
inc
and
jbe
xchg
or
ret
mov
inc
fwait
cmpl
aaa
loopne
mov
push
dec
fmul
fldenv
sub
xor
and
fwait
dec
data16
cmc
repz
lock
add
sub
bound
popl
adc
pop
dec
sub
loopne
mov
das
outsl
jns
xor
push
inc
imulb
sti
push
add
xchg
jmp
lods
je
inc
cmp
daa
dec
mov
sbb
mov
ljmp
outsl
daa
loopne
and
or
xchg
cmpl
rorb
loope
pop
sbb
jbe
push
cli
shll
mov
outsl
sub
dec
mov
cs
xchg
shl
in
pop
pop
shrb
in
push
mulb
push
mov
scas
imul
mov
das
das
push
cmp
or
cwtl
cmp
jbe
testl
pop
dec
push
mov
add
scas
adc
dec
in
stos
loop
cmc
out
fldcw
dec
inc
lds
sahf
cld
sahf
pop
lods
push
aam
jg
shrl
nop
rcrl
call
into
and
sbb
jb
pop
or
fs
or
ret
jmp
jge
dec
xorb
decl
adc
fcomps
cmc
xchg
and
int
jecxz
das
outsb
insl
jg
inc
pushf
pop
add
mov
cmp
jne
ds
add
adc
or
sbb
out
dec
mov
xor
pushf
add
pop
sub
xorb
or
lcall
or
pavgw
jb
leave
ss
out
jl
fcmovne
inc
dec
push
andb
arpl
push
and
mov
jne
daa
out
sub
fwait
in
sub
mov
aad
and
sti
pop
pushf
mov
sub
ret
push
ret
inc
mov
xchg
jl
orb
sbb
or
sbb
adc
xor
xchg
mov
jecxz
mov
mov
cld
ret
in
pop
xchg
in
roll
ss
push
inc
in
mov
stos
mov
icebp
and
mov
cmp
mov
fldt
dec
fsubp
cmp
mov
xor
loopne
loope
mov
sub
cmp
rorb
out
out
jbe
stos
scas
pusha
negb
add
stos
movsb
insl
xchg
xor
xchg
push
inc
lcall
in
mov
iret
imul
xor
pop
sbb
pop
aaa
add
out
dec
loopne
dec
mov
dec
add
fwait
pusha
or
out
iret
sbb
cmp
idivl
add
xchg
je
sti
sub
jg
mov
inc
dec
or
mov
or
lret
stc
jmp
fdiv
jle
lcall
sbb
dec
xlat
lcall
rorl
inc
imul
cmp
inc
and
lret
out
ret
mov
jl
inc
add
push
pop
ret
aam
xor
mov
fcmovnb
mov
push
sub
sbb
xor
and
sub
jge
push
iretw
jmp
mov
xor
ds
lock
pop
inc
cmp
leave
mov
jmp
testb
xchg
inc
in
repnz
imull
dec
clc
add
push
push
dec
lahf
repnz
dec
ds
popa
jle
jne
in
lods
push
call
loope
inc
xchg
jne
jmp
pop
inc
push
xchg
adc
aas
and
xchg
dec
pushf
fildl
inc
filds
je
inc
cli
stos
lods
fstpl
in
push
jl
jg
clc
add
jne
je
jmp
cs
jne
adc
mov
daa
lcall
lods
daa
js
hlt
call
lret
mov
test
ljmp
inc
dec
in
aaa
mov
movsb
and
xor
cltd
cmpsl
mov
mov
xchg
mov
aaa
imull
lea
mov
push
sarb
inc
rcrl
fdivrs
mov
icebp
ds
push
pop
push
pop
pop
cld
lods
call
lock
sbb
das
push
inc
xchg
sbb
cmpsl
outsb
mov
les
mov
dec
je
fsubr
arpl
jb
lock
stos
add
mov
shl
pop
add
incl
pop
xchg
mov
hlt
jno
leave
add
adc
call
mov
add
push
inc
inc
pop
xchg
xchg
pop
adc
jg
add
push
sbb
add
adc
movsl
test
and
lods
push
xchg
sub
stc
or
or
fisubrs
hlt
sub
and
adc
stos
push
jecxz
push
xor
sub
jbe
aaa
fbstp
mov
adc
push
adc
and
ljmp
jns
mov
sub
aad
inc
mov
jbe
cmp
push
mov
mov
push
in
or
mulb
pop
adc
loopne
xchg
or
and
push
dec
or
es
adc
add
stos
shll
sbb
sub
stc
cwtl
mov
das
dec
push
xchg
mov
loop
inc
add
scas
dec
lahf
roll
inc
mov
dec
sbbb
sub
std
xchg
add
jl
pop
dec
insb
in
xchg
ret
xor
les
mov
mov
enter
xor
mov
xchg
push
dec
sbb
jns
jnp
inc
jecxz
xor
jp
add
inc
pop
movsl
repnz
test
rorb
adc
jne
push
cmp
or
add
insb
or
adc
dec
inc
stc
pop
sets
mov
adc
adc
icebp
aad
mov
adc
arpl
pushf
sub
sbb
add
and
lods
adc
xchg
sbb
mov
add
js
mov
xor
pop
push
dec
enclu
mov
jns
adc
mov
jmp
cmp
decb
test
lods
test
sub
push
dec
pop
out
adc
sub
mov
xchg
cli
push
stos
mov
pop
jnp
enter
fcmovbe
jecxz
mov
push
test
mov
mov
stc
pushf
pop
into
xor
popf
push
push
cmpsl
push
sarl
subb
mov
aam
dec
out
cmpsb
xorl
loopnew
jge
add
lahf
xchg
bnd
push
jne
pusha
idivl
dec
push
test
pop
xor
xchg
pop
xchg
ret
xchg
mov
dec
add
pop
mov
jne
mov
xor
fmulp
pop
push
xor
sbb
xchg
inc
cmp
dec
repnz
xor
or
pusha
lcall
adc
xchg
ret
aaa
fldt
sbb
xor
mov
jle
sub
adc
sub
pop
in
mov
adc
pop
and
pop
loopne
addr16
sarl
icebp
or
aad
sub
adcl
js
pop
mov
mov
fwait
test
rorl
inc
mov
loop
cmp
mov
add
sbb
push
inc
inc
dec
pop
jg
stos
cwtl
cmp
dec
fidivrl
rol
lcall
sbb
inc
popf
dec
push
mov
jbe
jae
dec
into
aad
ds
daa
sub
call
mov
jno
jo
into
nop
xchg
out
push
jbe
fmull
mov
hlt
sub
and
rolb
divl
js
inc
xchg
and
scas
adc
jb
push
icebp
loop
mov
mov
mov
fcomps
inc
inc
cmp
jo
dec
outsb
aas
aad
push
aas
js
xchg
test
cmc
cs
mov
ret
jge
mov
and
mov
stos
insb
xchg
addr16
mov
pop
cmp
jnp
push
mulb
movsb
cmp
aam
call
mov
cmpb
enter
push
cmc
sub
ret
test
icebp
sub
pop
cmp
pop
das
sub
jb
outsb
xor
jl
sub
call
mov
mov
and
mov
sbb
or
mov
mov
call
jne
xor
pushf
sub
incl
repnz
lock
push
adc
push
je
inc
mov
xor
sarl
dec
mov
mov
add
aas
cmp
jns
sbb
cwtl
xchg
or
push
mov
pop
push
jns
icebp
and
pop
adc
out
divb
xchg
jne
lods
push
push
sbb
add
mov
xchg
xlat
lahf
into
psrad
pop
push
shr
pop
lahf
loope
push
pop
xorb
cmovbe
mov
push
push
lods
mov
jl,pt
xor
test
cli
sub
or
imulb
push
testb
ficompl
lock
js
ret
sub
mov
inc
sub
dec
in
lahf
inc
daa
inc
lret
sbb
mov
nop
sbb
stc
data16
add
sub
xlat
lret
cmovae
into
jmp
or
stos
imul
out
aam
hlt
xor
jge
adc
notl
call
or
jbe
aas
shrb
call
mov
add
cmp
pushl
pop
xor
cmp
mov
lret
call
imul
jmp
jp
dec
rcll
mov
out
add
xor
jmp
sbb
mov
sub
sbb
inc
adc
or
jo
pcmpeqb
cmpsb
test
mov
cmp
fwait
lods
mov
popf
jne
pushl
stos
sub
cmpsl
sti
inc
aad
lret
xor
or
dec
dec
push
test
push
fimull
sub
ret
pop
aam
fisttpll
mov
cltd
jl
aad
pop
push
mov
push
add
cmp
les
xchg
enter
daa
add
fisttps
xchg
je
cmp
sbb
dec
jno
ret
adc
je
daa
pop
jae
repnz
jae
inc
shr
lods
adc
aas
dec
cmp
adc
xor
dec
push
fwait
jmp
imul
or
mov
xchg
add
clc
dec
call
sub
repnz
cwtl
add
insb
push
push
stos
rcrl
push
dec
pop
test
mov
mov
inc
push
lods
dec
add
mov
and
mov
xlat
sbb
add
mov
rclb
sahf
push
xchg
in
jecxz
sub
in
popl
and
cmpsl
mov
xor
add
sbb
loope
lds
clc
or
jne
mov
cmpsb
jbe
ret
xor
les
clc
repnz
push
iret
call
cwtl
or
shrl
xor
push
or
sub
andb
dec
ret
mov
pop
mov
flds
sbb
mov
test
mov
jl
fdivl
out
mov
push
ret
jg
xor
ljmp
fdivrp
sbb
xchg
shrl
push
stos
sub
fdiv
inc
and
repnz
push
lea
sti
inc
fs
sbb
sti
pop
stos
enter
xor
aad
mov
pop
and
fadd
mov
adc
scas
dec
sti
sti
sub
rolb
mov
je
sub
dec
or
mov
dec
lods
push
xor
push
add
repnz
push
test
cld
mov
cli
add
mov
cmp
stos
or
test
cltd
popa
dec
out
jae
pop
xorl
sti
ret
inc
adc
int
movsb
xchg
movsb
inc
int
lods
push
cmc
ret
dec
or
je
inc
xlat
pop
sbb
hlt
insb
xor
ret
jnp
test
add
std
cld
jno
adc
adc
mov
sub
mov
mov
insb
sbb
mov
ja
and
cmp
mov
or
and
jbe
jns
jle
and
add
pop
cmp
repz
fists
and
jl
sbb
daa
adcl
jae
data16
addr16
out
clc
and
sahf
or
in
pop
outsl
push
mov
ret
add
push
pusha
scas
lret
or
fstpt
fstpl
or
pop
sarb
lock
inc
mov
je
pop
push
pop
insb
lock
sbb
mov
rcr
adc
adc
pop
sar
mov
mov
inc
dec
add
test
sbb
std
or
cmp
mov
sbb
inc
push
pushf
add
rcll
lock
fsubr
dec
dec
cmp
pop
jae
and
xor
mov
push
stos
inc
push
loope
mov
or
sbbb
sarb
lods
lods
jmp
out
sti
push
or
sub
outsb
jle
push
inc
or
pop
add
push
mull
mov
sub
cld
adc
shll
pop
adc
test
jle
jnp
sub
xlat
int
std
lahf
or
ret
push
int3
jle,pt
daa
mov
xchg
or
out
xor
call
rorb
or
call
xchg
loope
cltd
loop
mov
in
sub
in
imul
pop
push
or
pop
and
sbb
ror
scas
movsb
cltd
jne
dec
xor
pop
sarb
or
in
int
or
and
sbb
stos
cltd
fcmovnu
test
das
mov
jb
addb
enter
sub
mov
mov
in
fadds
out
sub
sbb
icebp
cmp
clc
mov
xchg
inc
jb
adc
sub
ret
scas
xchg
adc
in
xor
mov
cmp
pop
add
sete
test
leave
std
loope
jle
push
jl
push
sahf
movsb
incb
mov
sbb
mov
imul
mov
adc
pop
dec
sarl
stos
stos
push
dec
xlat
xchg
std
mov
cmp
and
sbb
jo
sub
xchg
lret
ds
mov
push
inc
pop
sub
test
in
lods
mov
mov
xchg
lods
jne
test
aaa
adc
into
add
stos
or
icebp
je
mov
sbb
pop
mov
xchg
inc
xor
xchg
cmp
cli
dec
cmp
int3
push
mov
or
push
lods
rolb
sbb
mov
mov
push
pop
cltd
push
cmp
xchg
in
popf
cmp
iret
aad
cltd
es
mov
mov
movsb
les
cmp
int
dec
or
popa
in
arpl
ljmp
cmc
outsb
aam
jo
cmc
sub
push
testl
int3
mov
ret
or
rolb
xchg
out
add
shr
or
or
dec
xchg
add
hlt
xchg
inc
pop
xchg
sub
fcompl
jmp
xor
psllw
mov
cld
addr16
out
test
sti
inc
add
in
cli
mov
jmp
mov
mov
dec
rcrl
mov
stos
sub
sbbb
les
out
and
js
hlt
add
cli
cmc
mov
lahf
pop
icebp
imulb
pop
or
pop
push
sub
je
mov
add
jg
inc
xchg
xor
pop
ret
mov
inc
imul
mov
pop
cmc
jne
pop
aam
rolb
xor
inc
in
loopne
pop
into
xor
clc
icebp
inc
adc
push
test
loopne
sbb
cli
dec
or
rorl
es
sub
enter
lahf
cmp
roll
jne
pop
jb
add
xchg
add
gs
push
dec
and
push
and
subb
pop
fnstcw
insb
sbb
inc
mov
cld
mov
xor
sbb
and
sub
mov
aas
adc
jae
or
cmp
je
aaa
cmp
jb
js
xchg
cltd
sub
iret
mov
cmp
std
je
adc
adc
sub
sub
sub
mov
notb
in
add
fabs
movsl
jp
sbb
push
imul
scas
adc
ret
fwait
jo
loop
dec
sbb
test
or
add
sti
pop
pop
es
xchg
inc
aaa
dec
dec
xchg
shrb
fistps
or
add
lret
iret
cmp
ss
adc
lret
cli
jmp
fdivs
or
or
ljmp
mov
test
out
dec
mov
jecxz
sbb
iret
jmp
lret
cli
sbb
dec
sub
add
lods
fstpt
enter
mov
pop
insb
rcll
sub
shll
jmp
xor
clc
pop
out
mov
inc
call
dec
movsb
fwait
sbb
in
adc
loop
jne
fmull
dec
dec
rorl
dec
cmc
mov
push
into
xchg
pop
pop
fimuls
int3
xchg
mov
add
hlt
pusha
loop,pn
sub
mov
into
andl
xchg
dec
cmpsb
sbb
fcmovb
call
leave
fwait
push
dec
mov
push
aad
mov
sub
sbb
xor
xor
scas
call
adc
and
shrl
pop
lret
shlb
push
lods
sbb
aad
bound
lods
adc
push
pop
pop
cmp
rcrl
and
and
icebp
dec
test
xchg
add
rorb
xchg
cmc
inc
sbb
xchg
sub
aaa
jl
jne
or
or
inc
jge
adc
enter
pushf
add
orb
cmc
sbb
loope
arpl
dec
adc
mov
iret
inc
xchg
cmp
into
ds
test
in
inc
and
mov
dec
daa
rcr
inc
lods
hlt
inc
xchg
dec
hlt
mov
push
cmpsb
pop
jnp
mov
push
pushf
inc
mov
mov
lods
sub
adc
adc
push
inc
jp
push
adc
jl
stc
pop
es
loope
sbb
call
shrl
xor
neg
adc
pop
cmpsl
push
mov
shlb
ret
pavgw
push
shrb
adc
jp
int
das
xchg
cs
ss
and
fwait
inc
lea
notb
adc
push
cmpsl
fistl
fucomip
lea
sti
subb
sub
hlt
and
into
adc
or
cltd
add
cmpl
adc
inc
fwait
add
dec
packuswb
lcall
int
push
xchg
or
adc
popa
push
push
fcmovu
add
ss
jo
lods
xlat
mov
ret
xchg
sbb
cmovae
pushf
cltd
lods
and
sbb
test
stos
jnp
iret
ret
xchg
decl
xlat
neg
je
adc
aaa
lods
ds
ret
and
add
loope
adc
jne
sbb
lods
lret
mov
clc
mov
jmp
mov
jne
pop
sbb
aam
xor
fsubrs
and
sub
cmp
insl
jnp
test
or
es
and
xchg
in
cmp
sarl
xor
leave
mov
loope
aad
shr
sub
leave
cmp
push
xchg
test
leave
mov
daa
sbbb
push
movsb
inc
or
push
pop
or
mov
pop
int
sbb
push
int3
sbbl
inc
daa
aad
xor
shlb
cmc
add
pop
pop
dec
sbb
ret
mov
mov
shll
xor
mov
push
test
dec
in
fwait
adc
ja
ljmp
mov
push
lahf
cmp
dec
pop
jp
cmc
ja
aad
pop
stos
lock
xchg
dec
scas
sub
push
pusha
add
or
mov
xchg
popa
and
ret
sbb
jmp
in
push
jecxz
pop
mov
xor
mov
mov
aas
mov
aas
scas
mov
cmpb
mov
fistpl
inc
out
cmc
and
lea
in
hlt
and
test
hlt
mov
lahf
lret
out
add
sub
call
sahf
jp
lahf
sti
xchg
sbb
jle
hlt
loop
dec
adc
mov
fdivrs
push
iret
sbb
lea
sub
adc
enter
mov
ss
add
rep
ljmp
loope
fildll
sar
sarl
ror
in
lock
xlat
loope
lahf
jb
sbb
jp
int3
and
jmp
cli
inc
xchg
push
push
dec
sub
push
and
inc
push
test
pop
adc
sub
inc
arpl
pop
test
je
ret
cwtl
insb
push
push
call
add
ret
pushf
pop
repz
int
sub
jl
outsl
or
jnp
test
push
loope
shlb
adc
jmp
icebp
jg
cld
lcall
negb
arpl
sbb
add
out
add
cs
sub
lcall
les
sub
cld
mov
cs
out
call
jp
lock
loop
mov
dec
flds
adc
fsubrl
mov
insb
jge
cmp
frstor
pop
ja
outsl
pop
dec
jl
loopne
lods
ret
sub
out
cmpsl
dec
cwtl
lret
xchg
mov
or
call
adc
sbb
adc
cmp
jmp
jg
sbb
fwait
in
adc
mov
push
lea
cmp
push
jbe
out
aam
inc
or
mov
sub
mov
je
stos
aad
cltd
adc
and
cmc
jmp
mov
je
xchg
jecxz
pop
push
negl
lret
push
in
pop
hlt
pop
push
push
push
sbb
inc
mov
sub
push
pusha
adc
ljmp
jns
out
jno
push
jo
out
iret
mov
test
ror
gs
dec
jb
add
call
sbb
xchg
sub
hlt
cmpsb
sbb
xlat
orl
scas
jecxz
out
sub
mov
sbb
ss
mov
mov
pop
and
in
ljmp
cli
add
add
and
cmp
fistpl
mov
mov
out
ljmp
push
arpl
ljmp
icebp
out
lret
ljmp
lods
jmp
or
sub
mov
mov
inc
inc
jae
nop
scas
ret
clc
cmp
dec
push
and
cmp
inc
daa
and
mov
cmpsb
ja
mov
push
mov
rcrb
sbb
adc
fimull
jnp
dec
push
popa
lods
ret
hlt
jl
and
addl
sub
std
pop
dec
xor
rcl
cmp
call
movsb
xchg
jge
pusha
imul
inc
jb
or
adc
sahf
adcb
or
cmp
dec
mov
call
xchg
pop
mov
push
mov
lods
inc
xor
aaa
sub
in
sub
mov
jmp
mov
in
add
pop
pop
in
ljmp
pushf
xchg
and
mov
and
and
and
push
clc
bound
dec
clc
fcomps
push
lret
sbbl
and
pop
jl
mov
imul
jl
incb
in
cli
std
or
fwait
aaa
sbb
insl
mov
sbb
adc
pusha
adc
mov
jmp
stos
jo
or
push
add
cmc
lahf
orl
dec
jg
dec
shrl
shll
inc
setno
cld
incb
xor
xchg
mov
mov
jmp
cmp
iret
jmp
pop
cli
jmp
adc
js
data16
jp
repnz
or
ficoms
xor
adc
push
jns
add
call
out
lret
es
lods
sub
add
fisttpll
pop
xor
sbb
cmpb
and
js
mov
out
cli
loopne
push
or
cmpsl
callw
push
xor
insb
iret
fstl
or
lock
push
push
xor
push
loope
fsubl
adc
and
enter
inc
shlb
outsl
adc
xchg
sub
mov
inc
add
xchg
data16
lods
mov
adc
push
inc
xchg
push
adc
sub
addb
push
cmc
push
xchg
add
add
jne
leave
jl
dec
movsl
lret
adc
repz
mov
dec
stos
or
ss
and
lds
fistpll
ret
xchg
jnp
jmp
rolb
lea
cwtl
sbb
jp
inc
pop
sub
sub
add
dec
ljmp
sbb
adc
dec
paddusb
in
mov
lods
mov
incb
call
pop
add
scas
cs
insb
jl
out
lods
sbb
inc
shl
pusha
call
sbb
negb
dec
cmp
mov
ficoml
push
pop
test
sbb
mov
jbe
sbbb
lock
mov
sub
nop
mov
out
xchg
push
sbb
mulb
movsl
in
dec
or
jecxz
jle
stos
mov
push
push
mov
mul
mov
pop
add
add
jb
out
ss
out
mov
cmp
ljmp
add
cmp
xchg
dec
test
pop
mov
pop
ret
test
jle
ret
push
sahf
sahf
xor
xchg
mov
out
les
lcall
push
fsubrl
insb
scas
xor
insb
cmp
hlt
xchg
mov
mov
mov
clc
mov
icebp
push
aad
jne
loopne
push
sub
xchg
mov
call
jp
out
lods
aas
out
jl
sub
xchg
push
lcall
sub
push
push
test
xchg
adc
movsb
cmp
ds
mov
push
mov
adcb
add
shrl
repnz
iret
in
call
adc
std
in
and
and
mov
daa
addr16
push
test
in
dec
mov
ljmp
mov
cmp
test
mov
mov
lds
mov
in
sbb
insb
jl
les
xchg
add
dec
inc
cmp
rorb
and
push
and
ljmp
or
and
idiv
mov
cmp
jbe
aad
jl
or
lea
mov
je
mov
test
push
xor
cs
lock
push
loope
dec
sti
sub
ret
jnp
adc
push
fidivrl
aad
cmp
dec
lds
scas
xchg
push
bound
fwait
push
inc
mov
lock
cmc
sub
in
into
jno
int3
and
or
aaa
sub
fdivrp
inc
jecxz
mov
jmp
lret
and
mov
loope
xor
xor
scas
inc
mov
xchg
sbbb
sbb
lods
push
xchg
mov
or
or
sbb
push
cltd
sbb
call
ss
sub
adc
nop
xor
popf
adc
aam
jp
in
jo
mov
arpl
push
fstl
mov
lds
add
sbb
mov
ja
into
cltd
adc
adc
pushf
out
push
call
cmc
mov
inc
fmull
jg
sarb
les
cs
add
cmp
push
push
inc
loopne
add
mov
popf
arpl
imul
loopne
sti
fdivl
dec
mov
sbb
jne
shrl
jmp
cmp
aam
arpl
jmp
jg
mov
imul
mov
mov
mov
jecxz
adc
mov
dec
jo
cwtl
loopne
inc
inc
xchg
or
mov
jecxz
sub
pop
movsb
imull
mov
call
mov
push
inc
popa
pop
xchg
pop
push
add
fisttpl
mov
sbb
mov
scas
insb
or
mov
rcrl
cwtl
pop
sbb
sbb
or
test
pusha
out
std
mov
jmp
sbb
mov
sub
hlt
pop
mulb
fxch
mov
loopne
mov
add
adc
xchg
pusha
mov
loope
sub
aam
cmp
mov
outsb
lods
fists
sub
iret
test
rclb
inc
push
mov
mov
xorb
ficomps
dec
sub
scas
test
repnz
mov
lods
xchg
call
sub
stc
or
movb
mov
dec
or
lcall
dec
lds
inc
call
adc
sbb
sub
into
mov
mov
cmovbe
mov
mov
cmp
dec
call
aas
stc
or
jl
adc
cmp
xchg
sub
xor
pop
fmull
mov
call
loopne
leave
adc
mov
fwait
cld
cmp
pop
jle
ljmp
xchg
fsub
cli
out
cs
inc
mov
mul
in
push
pop
out
sub
xorl
mov
jmp
lahf
repz
fwait
lcall
in
push
mov
dec
pop
in
mov
int
shrl
sub
sbb
rcrl
add
loop
xchg
outsl
sub
mov
pop
jl
cs
cmp
inc
dec
test
out
enter
mov
filds
loopne
or
mov
loope
pop
or
and
add
cmp
lea
sahf
lea
cld
lods
or
test
jns
lods
sbb
fsubs
mov
inc
xchg
or
mov
mov
popf
lahf
mov
fwait
js
icebp
rcll
or
sub
push
mov
pusha
hlt
cwtl
add
fiaddl
aaa
lds
scas
lock
sub
inc
sbb
mov
sbb
sub
testb
call
dec
test
inc
jno
cmp
add
mov
rcrl
dec
xor
mov
lods
inc
mov
movsb
stos
jg
fucomi
add
dec
mov
sbbl
jmp
dec
cs
addr16
lret
xor
stos
mov
cs
jl
gs
jmp
lret
cs
inc
mov
xor
push
outsb
or
rcll
insb
pop
ficoms
fistps
ret
push
adc
mov
add
lret
sar
mov
xlat
out
lock
xchg
insb
mov
aad
loopne
call
sub
out
lcall
lcall
and
jle
call
fsts
inc
cmp
lods
lds
pop
cwtl
pop
xchg
rorb
or
mov
dec
or
and
cli
jne
mov
imul
out
stos
clc
nop
pop
xchg
rcrl
and
jne
aad
nop
lea
shl
sbb
cmpl
sub
adc
cs
sbb
cltd
into
xlat
std
sub
push
dec
in
into
mov
lret
add
adc
sub
test
push
daa
daa
pop
pop
in
or
arpl
push
inc
cli
dec
fcompl
repnz
aas
push
mov
or
push
jp
scas
daa
fmull
xchg
lds
lahf
xchg
les
arpl
cmp
fwait
xchg
or
sub
sub
outsl
in
pop
stc
pop
inc
fld
das
les
mov
lcall
dec
dec
in
outsb
imul
pop
and
and
rcrl
jne
outsl
xchg
test
in
or
bnd
mov
mov
mov
rorb
mov
mov
jne
mov
pop
mov
repz
clc
pop
pop
sbb
or
std
pop
jecxz
mov
jecxz
inc
gs
rorl
mov
xlat
jle
xchg
jbe
rcrl
xor
jmp
scas
and
or
orb
mov
pop
sbb
jg
jne
cltd
mov
mov
inc
aas
outsb
flds
sub
std
push
aas
push
aas
loop
mov
std
and
push
fcomps
adc
das
cs
jbe
scas
jnp
in
add
xor
sti
add
lea
fmulp
mov
adc
push
add
push
adc
es
mov
push
bound
add
add
add
add
add
add
add
imul
pop
push
add
add
add
insb
imul
add
add
dec
add
add
push
add
add
add
add
inc
add
jae
add
add
xor
add
push
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
pop
add
add
add
inc
add
add
add
aaa
dec
add
add
add
xor
bound
add
pop
push
add
inc
add
xor
add
add
add
add
push
add
add
add
jns
push
add
add
add
add
add
add
add
add
add
outsl
jne
add
add
push
cmp
add
add
add
add
add
inc
add
add
add
add
jno
add
add
add
add
add
add
jae
add
add
add
add
add
add
outsb
add
add
inc
add
add
push
dec
popa
add
inc
push
add
add
add
add
add
add
inc
add
jb
add
add
outsb
dec
add
add
add
add
dec
add
add
add
add
insl
add
add
add
add
add
add
add
add
outsb
add
insb
add
add
add
add
inc
add
add
popa
add
add
imul
add
add
add
add
add
add
add
xor
add
xor
push
inc
dec
add
add
add
inc
add
cmp
add
add
data16
add
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
jns
add
ja
add
add
push
cmp
jp
pop
mov
jb
sub
cmpsb
jmp
jno
cmp
lods
push
rol
mov
lahf
ficoms
add
lea
xor
insl
aaa
add
jae
cmpsb
lods
popa
push
insb
movl
fildll
mov
xor
je
push
dec
mov
inc
mov
mov
add
aas
ja
dec
sbb
stos
divb
popa
and
dec
clc
mov
sbb
xchg
mov
mov
or
enter
imul
icebp
ret
xor
aam
mov
push
add
or
in
sti
ret
mov
lods
dec
call
xchg
mov
sub
pushf
cs
test
mov
out
sbb
incl
ds
adc
push
xchg
or
fs
push
inc
sbb
jns
dec
sbb
ljmp
jae
dec
dec
cmp
sbbb
or
hlt
push
lods
xor
shl
fstpl
aam
xor
pushf
cmp
push
stos
mov
decl
mov
add
lods
adc
xchg
ficomps
xor
mov
pop
or
in
lcall
cmpsb
fimull
push
mov
fidivrl
repz
fwait
pop
cmp
pop
out
ret
notl
aam
ficoml
stos
mov
or
in
mov
insb
jl
or
lahf
pop
daa
adc
sahf
icebp
dec
outsb
xchg
out
out
insb
pop
sahf
mov
adc
leave
mov
sar
notb
dec
inc
cmpsb
adc
arpl
std
repnz
cmp
add
mov
mov
inc
jnp
add
lods
dec
mov
enter
test
nop
sarb
das
sbb
adc
mov
pop
ja
stc
repz
sub
popa
push
rcrl
fildll
aam
dec
mov
xor
mov
repz
js
cld
lock
in
add
clc
add
mov
xchg
int3
ret
arpl
into
cld
jns
test
push
call
or
xchg
mov
mov
xor
xchg
lods
cmp
inc
or
and
daa
push
in
rcr
jg
jmp
cmpsb
popf
pop
mov
xchg
inc
repz
mov
jge
xchg
and
in
loopne
cld
in
loopne
ret
iret
and
clc
fldcw
mov
jae
xor
leave
cmp
fdivrs
cli
and
test
shlb
push
mov
pushf
xchg
mov
out
cmp
jns
jnp
push
jecxz
or
fucomi
mov
ljmp
call
dec
xchg
inc
clc
push
pushf
or
sub
pusha
cli
inc
fucomip
mov
roll
js
adcl
lret
bnd
roll
hlt
add
mov
stc
mov
inc
das
add
xorl
repz
jne
mov
pop
dec
mov
add
inc
outsb
mov
ret
ucomiss
rcll
xlat
xchg
adc
subb
jae
sahf
lret
inc
mov
out
fwait
mov
inc
or
daa
cmp
inc
pop
fdivs
loopne
mov
dec
and
and
jbe
mov
cmc
sub
jge
aaa
push
jmp
das
add
stos
lcall
adc
xchg
jne
jbe
fsubrl
or
aam
pop
xchg
cld
push
call
jecxz
mov
cmc
adc
std
out
add
sub
sbb
pop
dec
aam
xchg
aam
fsub
fcomp
xor
aam
filds
in
xor
loop
in
mov
adc
dec
int
jne
lods
in
jb
and
scas
fistpl
ret
stc
out
sub
les
pop
cli
dec
aam
cmc
add
jae
jmp
or
xchg
out
push
sbb
jnp
ret
subb
jno
cmp
adc
jge
in
add
mov
cmp
leave
jl
jecxz
in
pop
les
pop
push
jg
pop
test
repz
add
or
rorl
cmp
jecxz
and
loop
jge
negb
xchg
leave
ljmp
test
test
adc
cmp
or
shlb
xor
aas
mov
push
adc
inc
xchg
jbe
sbb
mov
aas
jle
les
rolb
gs
mov
mov
mov
pop
add
bound
in
hlt
pushf
push
push
or
push
sub
adc
lret
mov
aad
pop
fwait
std
pushf
mov
stos
mov
mov
pop
loopne
test
inc
jle
mov
mov
adc
in
jnp
pushf
test
mov
cmp
ja
jne
cltd
mov
xchg
sbb
push
push
call
sti
mov
add
xor
push
test
xchg
jp
sub
shll
in
rorl
outsl
and
or
test
rcll
cmpb
adc
scas
dec
jle
scas
fs
inc
mov
clc
push
jb
mov
adcl
mov
pop
sub
dec
mov
cmp
cmp
shl
loope
ja
xchg
aam
inc
das
cmp
jge
mov
mov
out
mov
fsts
lock
call
scas
sbb
cs
call
sbb
fcomps
inc
test
inc
fdivrl
mov
outsb
xor
adc
testb
aas
js
in
sbb
outsl
pushf
test
out
cmp
push
enter
addr16
sahf
and
and
and
xchg
or
add
xchg
or
lcall
sbb
aaa
jo
ljmp
fs
ret
shrb
hlt
int3
or
cmp
aam
fists
sbb
mov
jle
jmp
rorb
dec
or
icebp
in
mov
add
push
mov
xchg
in
movsb
add
lock
jge
inc
mov
lahf
mov
das
mov
call
push
cmpsl
mov
adc
loope
pop
out
push
out
lret
jp
dec
mov
pop
push
inc
jmp
mov
lret
fidivs
mov
mov
rcll
push
push
cmpsb
call
push
stos
stos
push
push
push
mov
call
pusha
je
jnp
mov
pop
inc
sub
out
jmp
or
xchg
fildll
xchg
ss
xor
dec
int
jmp
call
cmp
dec
in
lahf
ret
lret
jmp
sti
push
les
stc
pop
loope
lods
test
cli
xchg
push
icebp
repz
adc
popf
xor
int3
mov
daa
iret
enter
fwait
rcll
gs
mov
sarl
or
into
ret
cmp
push
pop
xchg
sbb
cmc
push
inc
sub
sbb
xchg
loopne
sub
int3
icebp
jecxz
lock
rclb
lock
hlt
aad
call
add
and
outsb
xchg
push
dec
cmpsb
es
popf
xchg
mov
rorb
xchg
stc
cli
pop
add
cmpsb
into
insb
fisubs
xor
loop
out
inc
nop
das
sbb
jl
test
add
jnp
pop
daa
ret
cmp
dec
push
dec
push
je
add
xor
js
ret
je
cmc
dec
test
in
adc
sbb
lahf
mov
mov
mov
adc
arpl
sbb
movsl
and
mov
test
and
ljmp
mov
add
pop
call
xor
filds
outsb
dec
pop
outsb
and
movsl
fwait
pop
mov
call
jmp
jmp
loop
cmpb
int
test
sbb
lcall
sub
int
xor
pop
stos
sub
mov
mov
inc
add
icebp
mov
sub
inc
jnp
cmp
loope
and
jmp
je
or
outsb
pop
push
cwtl
jecxz
xchg
xchg
sub
lds
or
push
adc
mov
lcall
out
xor
repz
adc
sub
stc
mov
and
xchg
int3
fcoml
gs
inc
xor
mov
lods
rorl
and
btc
mov
imul
inc
add
test
push
dec
sub
daa
cmp
stc
inc
adc
push
cli
or
jmp
es
ret
adc
cmc
pop
push
xor
mov
imul
adc
int3
sub
pop
mov
in
lods
and
ret
in
sbb
xor
call
rorb
in
out
fwait
scas
loope
push
sbb
or
jno
scas
sbb
fcmovu
and
push
filds
ja
arpl
xchg
lahf
push
fnstcw
mov
or
leave
push
mov
inc
sbb
jmp
jb
lods
mov
and
fmull
icebp
fsubs
shrb
outsb
xchg
xchg
sub
jecxz
imul
jae
mov
add
mov
jb
push
inc
loope
sbb
sbb
clc
add
jbe
push
jmp
in
mov
mov
aam
push
lea
pushl
test
push
scas
xchg
xor
and
dec
push
pop
adc
cld
inc
lock
inc
push
in
jp
stos
scas
in
pop
out
fsubl
lret
leave
clc
std
in
ds
adc
fsubl
mov
mov
mov
pop
cmpsb
jo
adc
jbe
fcoml
mov
and
movsl
ret
xchg
inc
mov
sub
inc
aaa
push
mov
xlat
mov
xchg
add
push
inc
int3
jp
jo
les
in
lret
rorb
int3
les
fstpl
sbb
scas
call
nop
pop
jns
adc
and
loopne
cli
sub
jne
ror
push
xor
lods
ret
push
push
add
ret
decl
xchg
adc
in
xchg
lods
fidivrl
lds
stos
pushf
rorl
loopne
adc
aas
jno
mov
fsubrl
adc
shlb
inc
push
adc
pop
push
jne
or
add
aad
loop
ja
repnz
out
push
dec
sub
into
sub
test
mov
add
insl
push
jne
cmp
aam
test
rclb
fdivr
scas
adc
push
sub
leave
cmp
call
sub
inc
push
jp
daa
inc
into
xchg
outsb
out
cmc
sarb
lcall
out
int
je
adc
jae
adc
add
outsl
movsb
imul
movsb
jmp
frndint
subb
lods
sub
xchg
lcall
mov
xchg
fimuls
push
cmpsl
movsb
aam
or
push
add
jne
lock
xchg
push
jmp
add
cs
cmp
or
loope
aam
fisttpl
cmp
call
fldenv
test
insl
aam
flds
or
cld
call
fldcw
cmp
shll
push
int3
push
or
outsl
push
test
mov
nop
xchg
insl
sar
cmpsb
jp
out
lahf
outsl
rcl
cmp
mov
les
in
mov
mov
test
dec
mov
in
pushf
ficoml
lret
jecxz
cli
push
add
cmpsb
inc
call
mov
insl
decl
or
sub
jno
pop
xchg
jno
adc
push
mov
sbb
and
les
sti
cmp
add
adc
xlat
data16
cmp
xlat
lahf
roll
ds
fistpl
test
push
adc
rcll
enter
jnp
rcrl
popf
in
aaa
push
mov
jge
cmp
fstpt
sbb
emms
dec
lds
test
cmp
adc
xchg
pop
cmp
mov
adc
inc
pop
cltd
adcl
arpl
test
pop
aaa
jge
hlt
test
lock
cmp
mov
cmp
sub
lret
sub
fistpl
xchg
jnp
cmp
ret
add
pusha
cwtl
add
pushf
inc
pop
cld
jnp
add
push
push
push
test
popa
or
xchg
or
inc
sub
mov
mov
out
mov
out
mov
push
mov
dec
imul
sti
sbb
cmp
daa
popf
push
iret
int
lcall
jns
ss
dec
inc
fcomps
mov
push
lods
push
pop
fsubl
dec
insl
decl
rcr
idivl
xchg
mov
loope
push
sub
mov
add
adc
sbb
cld
adc
dec
push
loopne
in
mov
add
leave
xor
add
or
adc
and
jmp
add
xchg
jle
push
inc
loopne
fisttpl
sbb
xor
call
cwtl
neg
xchg
mov
xor
notb
leave
orb
rorl
inc
int
mov
dec
popa
aas
xor
movsb
icebp
inc
nop
arpl
inc
jno
fwait
jb
sub
rcrb
and
mov
mov
dec
outsb
ret
shll
cmp
cmpsb
orl
cmp
or
or
movb
add
push
inc
pop
sahf
dec
push
icebp
movsl
jnp
inc
and
stos
push
dec
cmp
std
fs
mov
addl
popa
jnp
cltd
outsl
enter
pop
add
and
dec
lods
test
push
or
push
mov
movb
sub
add
inc
pop
roll
dec
and
test
push
inc
sub
adc
dec
shlb
pop
int
stos
adc
cmp
jbe
imul
inc
and
lods
push
in
and
lock
jns
in
dec
test
pop
test
lret
add
mov
icebp
inc
fcompl
adc
inc
subl
push
loopne
pusha
mov
sub
push
icebp
xor
push
xor
not
push
inc
adc
sahf
es
pop
mov
push
cmp
movl
lock
mov
call
ss
mov
xlat
adc
fs
scas
inc
and
and
mov
repnz
xorb
je
cli
js
testb
adc
ss
test
push
test
or
mov
add
clc
xor
loopne
ficomps
lret
add
mov
jl
dec
or
cld
add
addr16
out
mov
scas
aam
out
sub
int3
out
dec
sub
jmp
andb
ds
movsb
orb
inc
cwtl
dec
aam
inc
jae
xchg
pusha
out
fcomi
push
sub
and
stos
mov
add
cmp
fs
dec
push
push
dec
jnp
and
popf
adc
pusha
dec
inc
pop
dec
dec
push
ret
gs
notb
and
testb
enter
jl
js
jmp
aas
outsl
jnp
push
add
xchg
lret
xor
mov
mov
mov
lods
jmp
lock
mov
call
mov
mov
xchg
dec
lock
xor
fs
xor
push
mov
mov
stos
xorb
add
xor
out
dec
call
into
push
outsb
jae
and
lods
ret
sbb
xor
lods
xor
push
pop
fcomip
popa
push
mov
jmp
adc
int3
imul
jne
das
into
enter
lahf
cwtl
pop
nop
xchg
enter
stc
xchg
or
call
adc
bound
cmp
pop
std
xchg
fiadds
test
jne
adc
add
xor
adc
dec
pop
jne
dec
pop
mov
adc
imul
mov
mov
je
into
jns
into
add
push
inc
aas
mov
lea
sarb
cmp
cltd
sbb
sub
dec
inc
notb
mov
inc
adc
insl
outsb
popa
mov
inc
mov
jmp
lahf
mov
jno
inc
push
xor
mov
sbb
ficompl
sub
push
push
rcrl
nopl
stc
mov
testb
cli
movsb
mov
mov
in
xor
mov
or
xchg
dec
push
mov
shlb
push
fistpll
dec
enterw
inc
jbe
mov
and
dec
out
mov
aad
xchg
jbe
jnp
dec
repz
das
cmc
push
fildll
push
xchg
mov
out
dec
sbb
and
add
loope
mov
pop
pmuludq
mov
dec
fcmovnu
in
out
sbb
push
les
shrl
cmp
aaa
fwait
jge
inc
out
test
mov
addb
or
movsb
leave
cmpsb
int
and
cmp
xor
clc
add
negb
ss
cmp
lock
xor
mov
jl
clc
out
cmp
or
push
iret
lods
sub
dec
push
enter
cmc
shrb
fists
aam
pushf
cmp
hlt
push
or
xlat
or
jecxz
push
lret
or
sub
and
mov
lret
fsubr
mov
push
dec
push
cmp
outsb
ja
sar
jle
and
lods
or
mov
notl
jmp
push
jae
sahf
push
clc
das
push
test
mov
sub
fildl
test
outsb
cli
cmpb
jbe
adc
cmpl
add
sub
pop
jmp
repz
jns
xchg
les
sti
inc
jno
into
sub
arpl
call
stc
and
push
loope,pn
arpl
xchg
add
or
je
dec
and
mov
movb
imul
mov
rclb
fbld
pop
dec
cld
mov
in
jp
lock
xchg
mov
pavgw
cwtl
dec
cs
loope
mov
loop
pop
iret
mov
sub
jp
add
hlt
movsb
add
cmp
sarl
dec
mov
sti
outsb
mov
sub
call
les
adc
call
lea
sub
mull
pop
jg
aam
leave
rorl
pop
mov
fdiv
ret
jb
out
push
fisttpll
call
sub
ret
push
mov
xor
cld
daa
loope
jmp
les
or
inc
stos
sahf
jb
sbb
adc
outsb
pop
out
cmp
push
test
pushf
call
and
adc
int
sarb
addr16
mov
ja
xchg
jmp
lods
and
test
adcb
fucomip
jb
jecxz
aad
adc
add
insb
pop
sub
mov
fsts
lods
lret
in
rolb
lods
lret
sbb
in
add
mov
and
cltd
cmc
ficoml
xchg
jmp
adc
mov
xor
and
mov
cmp
cmp
sbb
jg
add
call
lahf
mov
jb
aam
lea
iret
lcall
test
and
push
pop
loopne
icebp
cmp
mov
and
outsl
cmp
mov
push
call
cmpsb
xchg
out
jb
shl
dec
scas
mov
cmp
jne
and
hlt
xor
cld
and
jbe
push
push
add
imul
xchg
daa
loope
outsb
insb
lea
xchg
jne
adc
cltd
pop
sbb
jle
ficompl
std
xor
cmp
xchg
pop
xchg
inc
mov
inc
stos
mov
jmp
call
adc
mov
lds
fcoml
ror
into
test
xor
nop
mov
jbe
dec
jl
jmp
inc
cltd
je
aaa
jp
cmp
xor
mov
cmp
cwtl
jne
mov
add
mov
dec
xchg
sbb
mov
inc
je
xor
mov
push
or
dec
aaa
mov
mov
xchg
adc
hlt
and
pushf
cmc
stos
mov
sti
call
cld
xor
add
icebp
sbb
xor
mov
into
sahf
inc
clc
sub
sub
imul
pop
fcmovnb
mov
add
dec
and
into
ds
push
inc
dec
xchg
out
mov
pop
ss
pop
jp
sbb
adc
cs
fwait
pop
adc
xchg
inc
jmp
orb
or
imul
lahf
mov
lea
or
pop
icebp
or
xor
and
fwait
outsl
test
adc
outsl
inc
loopne
fimull
fidivs
mov
pop
xor
cmp
push
lock
mov
adc
lahf
cmp
mov
scas
sbb
aaa
sub
loopne
push
out
daa
into
dec
mov
test
jno
lock
rorb
add
xor
push
push
sub
movsb
pop
lods
or
repnz
in
pop
jmp
push
xor
pop
push
mov
lahf
lds
xchg
lret
jle
test
mov
jo
lea
sub
or
ret
lahf
mov
je
shlb
adc
xchg
enter
push
sub
adc
insl
sub
les
dec
push
inc
daa
fiaddl
cmp
xchg
push
xor
adc
push
dec
adc
notb
dec
dec
cltd
cmp
and
lods
jb
inc
lods
xlat
shr
xchg
out
sbb
push
mov
inc
cld
fidivl
xor
jo
inc
mov
xor
sub
and
sub
jle
mov
jmp
repz
data16
xchg
pop
mov
fcmovb
push
in
add
adc
or
loope
loop
jge
jecxz
sbb
sbb
xchg
jmp
xor
xlat
inc
pop
xchg
testl
in
mov
jne
push
adc
push
cmpsl
cmp
dec
xchg
dec
cltd
call
jne
ret
mov
imul
shlb
and
cmp
and
xchg
repz
mov
cwtl
adc
pop
cli
or
cmp
add
dec
pop
addb
fstps
mov
xor
cmpsl
cli
sub
push
dec
xor
adc
adcb
mov
dec
add
roll
jl
rcrl
pushf
leave
aas
loope
mov
add
push
add
nop
jne
dec
ljmp
inc
stos
push
div
push
cmp
push
xor
inc
or
mov
mov
or
jbe
stos
pop
out
add
in
dec
jmp
and
hlt
adc
mov
aaa
adc
sarb
insb
mov
jge
lea
push
data16
adc
xor
das
decb
mov
lock
mov
dec
cmp
and
fadds
mov
mov
adc
rorl
push
cmp
cli
sarb
rclb
sbb
cwtl
mov
push
xchg
or
xchg
dec
pop
and
fistps
pop
dec
or
cmp
loop
cmp
je
ljmp
mov
cmp
imul
cld
decb
mov
inc
scas
inc
xchg
add
mov
adc
fnstcw
divl
push
stos
lret
push
cltd
loope
lea
fwait
inc
cld
xor
xor
call
jne
shlb
add
scas
pop
call
cmp
add
xchg
scas
jmp
insb
add
fldl
push
jp
cmc
nop
xchg
jl
and
fldt
call
movsb
pop
mov
outsl
mov
pop
or
lret
jbe
fmuls
ret
or
stos
mov
mov
in
push
orl
cwtl
push
das
add
dec
cmp
and
or
pop
in
cmp
bound
into
call
mov
mov
xorb
popa
jb
or
cltd
mov
stos
pusha
outsb
mov
dec
mov
loopne
fs
jle
repz
lock
add
call
out
dec
adc
aas
arpl
add
pushf
int3
push
cwtl
add
mov
pop
idivl
adc
lock
add
in
bound
sahf
outsl
fcomps
cmp
nop
lods
inc
test
mov
xor
pop
push
das
mov
inc
movntps
add
inc
mov
pop
xchg
cld
sbb
aam
cmp
mov
push
scas
sti
ds
push
lret
mov
inc
ljmp
and
scas
ss
lret
xor
cld
incl
mov
inc
std
mov
int
cmp
or
movsb
mov
mov
and
fisttpll
push
repnz
sbb
in
cmp
xor
sub
xlat
sub
aad
insl
pmullw
ficoml
sbb
test
sub
dec
test
mov
das
hlt
sub
or
loopne
dec
nop
add
ret
mov
mov
mov
add
xchg
push
addr16
sub
lods
sti
pop
scas
insb
adc
xchg
mov
inc
leave
lods
loopne
xor
shl
push
neg
jecxz
insb
into
cmp
adc
jno
xlat
movsb
cmpsl
scas
xor
out
clc
xchg
adc
cltd
in
jle
xor
or
jmp
sbb
and
push
sahf
and
push
jo
arpl
flds
push
stos
push
cmc
sub
sbb
scas
push
stc
sub
sbb
sti
mov
sbb
sbb
inc
fsubr
push
sub
sub
shl
xchg
lods
sti
inc
jae
mov
cli
loope
sbb
and
pushf
xor
or
and
pop
jg
clc
push
in
xor
dec
movsl
jns
imulb
sbb
pop
movsl
outsl
cmp
sub
cmp
mov
pop
test
mov
jbe
int3
inc
repnz
call
idivb
sahf
mov
sbb
mov
movsb
and
jbe
jp
pushf
push
mov
das
iret
xlat
push
pop
ljmp
xchg
and
sub
push
fucompp
push
jecxz
xor
je
pop
loop
jbe
lds
daa
cmp
sarb
or
cld
or
add
add
inc
lret
hlt
and
insb
shrl
jae
ja
xlat
js
cltd
push
mov
cld
xchg
call
stos
sub
imul
cmp
incb
push
dec
sub
inc
cmp
call
shlb
jb
mov
and
xchg
jne
lock
inc
xchg
push
pop
sub
rcr
push
pop
fwait
loop
scas
ljmp
ljmp
imul
push
jl
scas
ret
cs
testl
cmp
lods
jecxz
lret
test
mov
mov
imul
fstpt
sti
test
jle
mov
mov
lock
lcall
jp
ret
in
mov
push
js
icebp
sbb
in
push
add
mov
add
inc
lahf
mov
dec
addr16
sbb
inc
xchg
push
xchg
into
xlat
ja
cwtl
inc
inc
subb
sti
pop
sub
push
mov
pushf
mov
mov
add
jne
ss
cmc
bound
or
movsb
loopne
incb
fidivl
imul
mov
call
sbb
aaa
inc
pusha
mov
mov
mov
xchg
mov
lods
call
arpl
inc
sti
fwait
out
iret
jl
mov
loopne
jg
imull
sub
in
mov
lods
and
mov
adc
les
repnz
push
push
fwait
and
mov
push
and
and
mov
std
cmpsb
push
lahf
cmp
loope
mov
dec
mov
pusha
leave
sub
cmp
insl
fcoml
addr16
scas
out
mov
pop
push
pusha
fwait
and
push
push
fadd
sub
decl
mov
pop
das
stos
mov
jmp
inc
pushf
mov
loope
pusha
sub
loop
call
xor
rcrl
cmp
insb
mov
cmpsb
cmp
and
and
dec
sub
sub
xor
sarb
adc
jmp
rclb
adc
pop
ret
push
push
jbe
ficompl
das
mov
les
stos
call
movl
mov
js
add
sbb
mov
and
push
dec
adc
in
sub
lret
pcmpeqw
inc
lods
ret
hlt
add
add
in
rorb
orl
insl
lods
sbb
fisubrl
pop
lods
sbb
mov
sub
push
clc
mov
jne
adc
inc
sar
scas
inc
mov
ficompl
mov
and
orl
and
sbb
xchg
insl
pop
scas
loopne
negb
icebp
dec
stos
mov
out
add
push
outsb
neg
mov
repz
push
lahf
stc
les
sub
dec
lock
xorl
mov
push
xchg
sub
xchg
xchg
push
pop
xor
jmp
lcall
pop
mov
mov
ja
cmp
fists
jb
loope
jmp
loope
jg
scas
push
mov
sub
inc
jo
sub
out
lahf
jmp
adc
dec
dec
cltd
or
dec
xor
mov
in
dec
in
imul
push
lea
testl
nop
cld
aad
test
cltd
hlt
xchg
mov
and
daa
jae
lcall
mulb
cli
jb
rclb
data16
std
fmul
push
or
push
aam
aaa
mov
lahf
or
sub
xchg
aam
mov
mov
mov
iret
loopne
inc
je
fbstp
or
aam
adc
outsb
dec
movsl
je
xchg
lea
pusha
insl
imul
jl
cmp
ljmp
xor
cli
jge
aam
adc
cmp
jne
xchg
or
imul
js
mov
xor
lds
lods
inc
push
sub
push
dec
sub
fadds
mov
push
scas
adc
aam
movsb
push
aaa
pop
aad
push
test
cmc
outsl
jbe
mov
mov
push
and
push
push
sub
lock
mov
dec
out
mov
sbb
cmp
mov
jne
sub
pushf
sbb
dec
mov
xchg
jnp
shll
push
fdivl
mov
lock
test
dec
adc
hlt
add
add
adc
je
jmp
or
int
xchg
xchg
sub
dec
jecxz
ds
dec
scas
or
lcall
mov
cmp
pop
and
scas
push
pop
sbb
jecxz
leave
pop
mov
sub
and
loope
sbb
movsl
or
pop
movsl
or
fiaddl
cld
negb
add
jo
fmuls
sbb
sbb
push
xchg
push
mov
or
shrb
xor
aad
cmp
insb
sahf
pop
in
mov
pushf
mov
pop
or
add
sub
repz
jl
and
jmp
fs
cmc
mov
push
xchg
int3
psraw
adc
push
jae
xlat
xor
cmp
sbb
xor
call
mov
mov
xchg
call
inc
adc
shll
xchg
ss
fstpl
push
je
test
insb
mov
add
xor
scas
adc
mov
sbb
mov
or
sbb
inc
mov
sbb
call
inc
mov
sub
xchg
jmp
add
push
add
imul
add
jb
add
js
add
add
add
add
add
add
add
jne
popa
add
add
dec
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
aaa
add
push
add
xor
add
add
add
bound
ja
add
add
add
add
add
inc
add
add
add
pop
add
push
add
add
add
add
insl
imul
add
add
add
dec
add
add
add
add
imul
add
add
add
add
add
add
js
push
insl
add
jp
add
add
add
add
add
add
add
add
add
cmp
push
jae
add
ja
jae
add
add
add
add
push
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
push
add
bound
add
js
add
add
add
add
xor
add
push
add
add
add
add
insb
add
add
xor
add
add
add
xor
jns
add
aaa
add
add
add
add
add
add
push
add
add
popa
imul
add
add
pop
add
add
add
add
add
add
add
add
add
je
add
xor
add
add
add
add
push
insl
outsb
add
add
add
add
add
add
dec
add
arpl
add
add
add
sbb
jmp
dec
inc
xchg
pop
iret
aam
adc
orl
dec
fstpt
or
adc
sub
push
add
shlb
pop
mov
repnz
ss
movb
mov
mov
scas
jmp
inc
cmp
lret
lahf
jl
daa
pop
mov
rorb
add
pop
scas
fstl
repz
fsubr
movsl
inc
xchg
out
hlt
aaa
testb
pop
and
lahf
gs
shr
add
je
jmp
adc
call
outsb
lcall
mov
lahf
cmpb
addl
jle
loop
add
mov
mov
movsb
mov
inc
stos
jmp
scas
xor
xchg
call
xchg
popa
addr16
cli
aad
cmp
mov
pop
sbb
add
mov
and
shrb
ljmp
nop
imull
adc
jl
aas
xchg
das
mov
pushf
mov
sub
push
sti
cmp
pop
out
stos
scas
fcoml
std
fdivs
scas
pop
mov
mov
aaa
sub
push
int
out
pop
imul
sub
add
dec
enter
jmp
out
insb
lahf
pop
add
mov
insb
add
inc
fwait
push
pop
dec
inc
mov
outsl
dec
sbb
pop
adc
sub
inc
lahf
lds
lock
push
cmc
xor
into
stos
inc
mov
ljmp
cli
pop
bound
xor
xchg
xor
in
cmp
inc
cmpb
xor
cmp
xchg
sbb
xlat
mov
mov
mov
and
out
mov
daa
movsl
add
test
fidivrs
enter
in
xchg
mov
inc
mov
negb
imul
adc
fdivrl
scas
adc
adc
stos
adc
mov
out
xchg
sbb
jae
dec
mov
ss
push
push
xchg
fcoml
adc
jnp
stos
arpl
lds
xchg
hlt
mov
fisubl
add
lret
je
jmp
or
leave
push
iret
pop
mov
sbb
imul
sbb
xchg
mov
or
xchg
pop
jmp
xchg
xchg
cmp
sbb
test
or
or
cmp
xor
cwtl
mov
stc
imul
and
mov
ljmp
jmp
mov
lds
add
ret
mov
fwait
das
cmpsb
icebp
push
mov
push
mov
lahf
inc
jnp
scas
dec
sub
mov
lcall
ja
mov
aaa
ret
lea
mov
sti
pop
mov
mul
das
cld
insb
inc
fs
icebp
pop
out
je
rorl
sahf
pushf
mov
pop
lahf
xchg
cmp
sti
cmp
xchg
paddw
lcall
insl
sbb
negb
pop
fadd
xor
inc
dec
lcall
xchg
sub
sub
jno
fistpll
pushl
jmp
stos
cld
sbb
jb,pn
test
cli
add
test
bound
adc
and
adc
jno
cltd
fwait
mov
jmp
sub
std
jmp
sbb
movsl
xor
test
sub
push
call
cmpsb
xchg
pop
stos
mov
mov
daa
sbb
add
dec
scas
lcall
ret
sub
outsl
or
cmp
nop
notl
cmp
cmp
ret
gs
add
shrb
jle
pop
or
mov
test
je
inc
push
and
pop
outsl
jb
pop
mov
mov
aaa
push
daa
lahf
imul
ss
lahf
das
mov
pushf
int
and
mov
mov
fsubl
out
cmp
xor
mov
jo
leave
push
jbe
adc
mov
xchg
hlt
or
push
inc
add
mov
xchg
loope
inc
imul
lahf
icebp
push
pop
add
mov
add
rcrb
adc
out
add
sub
xor
sbb
mov
xor
sbb
jbe
xor
jg
jbe
cmp
xchg
das
ret
xchg
jl
pop
sub
loopne
dec
mov
jmp
xor
mov
jb
adc
mov
jmp
ficoml
mov
movsb
xchg
pushf
test
adc
sbb
data16
push
sub
add
mov
mov
cmp
fisubl
fidivrl
xor
cmp
sbb
cmp
xchg
cs
cs
cmc
mov
and
cmc
mov
setae
out
cmp
sub
lcall
pop
iret
fdivrl
push
sub
ret
sub
xchg
inc
xchg
or
and
sbb
ljmp
add
outsb
push
dec
cmp
cmp
sbb
lcall
inc
fnstsw
fs
daa
into
mov
sbb
pop
mov
iret
daa
jg
stos
xchg
cmp
jbe
push
ljmp
adc
push
xchg
sbb
cmp
push
push
cwtl
insb
pop
fsubrl
mov
cmpsl
arpl
mov
leave
xor
mov
inc
fs
les
xchg
rcl
cwtl
and
lahf
sbb
jecxz
arpl
push
adc
jp
adc
scas
mov
pop
xlat
cmpsl
imul
movhps
xor
jle
rolb
mov
inc
mov
cmp
push
xor
scas
dec
test
enter
adc
jl
mov
and
out
aad
pop
cwtl
jge
ret
jle
pop
mov
xor
call
mov
movsb
adc
pop
mov
mov
or
in
sbb
jnp
jge
ds
adc
mov
lea
or
outsl
pop
ret
addr16
mov
rcll
xor
mov
sub
and
and
roll
jmp
adc
call
push
adc
popl
mov
adc
shrb
lret
rep
lret
enter
es
add
mov
dec
lret
aad
lods
mov
xor
sti
xchg
mov
mov
sbb
sub
mov
stos
repnz
pushl
mov
push
and
das
adc
sarl
mov
arpl
add
faddp
dec
cmpsl
xchg
add
orl
push
rorl
push
or
pop
rcl
packssdw
push
leave
movl
jl
lret
enter
adc
xor
pop
push
fildl
pop
loopne
mov
scas
and
mov
in
insb
pushf
decl
test
push
call
mov
push
out
mov
push
insl
add
outsl
pushf
adc
into
pop
rcll
sub
pop
push
xchg
cmp
call
jb
hlt
roll
test
mov
call
pushf
inc
add
mov
mov
arpl
mov
push
mov
add
call
xlat
jo
insl
mov
cmpsb
inc
aam
shll
outsb
addr16
mov
cld
xchg
cmpsl
fistl
lret
inc
xchg
shl
je
xchg
mov
aaa
jle
iret
add
jmp
dec
xor
push
push
and
call
imul
mov
dec
inc
clc
mov
roll
sbb
pop
mov
stos
xchg
int
pop
test
lock
imul
push
ljmp
arpl
jmp
adc
adc
movntps
or
push
xor
add
dec
pop
cld
imul
add
jmp
shlb
imul
mov
push
xchg
imul
test
mov
in
push
or
push
adc
in
sub
mov
sbb
shlb
neg
push
shr
loop
aas
call
or
xor
dec
insb
iret
mov
cmc
push
sbb
cmpsb
xor
adc
lods
pop
xor
mov
adc
pop
jle
adc
mov
test
mov
mov
shr
filds
xchg
mov
mov
movsb
hlt
cltd
movsb
fcoml
jl
lret
test
xchg
mov
fucomip
out
pop
adc
adc
into
dec
adc
les
pusha
and
dec
cmp
jg
xor
and
fsts
mov
mov
paddd
adc
sbb
pop
push
xchg
pop
push
cmp
inc
sbb
push
cmp
call
loop
in
push
cmp
call
setne
shrl
push
je
outsb
mov
jae
add
sbb
flds
xor
push
dec
xor
cmp
inc
cmpsl
divl
sub
sbb
call
add
shrl
test
sub
js
cwtl
xor
sub
xor
subb
test
imul
sub
into
sub
mov
rorl
mov
add
add
push
jae
sub
out
inc
movsb
call
push
ljmp
es
jle
jbe
push
icebp
and
push
push
nop
cmc
xchg
mov
dec
pop
xlat
mov
sub
pop
mov
out
fdivrl
mov
es
pop
mul
in
clc
cmp
mov
adc
mov
call
imul
push
push
fsts
push
add
loop
movb
or
out
or
xchg
jecxz
or
cli
xor
je
fs
push
adc
mov
cmp
adc
ret
rorl
dec
sub
and
sub
mov
or
lret
loopne
out
sbb
popa
fdivr
lcall
dec
dec
mov
inc
ret
sbb
fwait
dec
fninit
and
push
sub
sub
sub
push
dec
lahf
mov
lods
loopne
pop
cmpsl
decl
test
lret
cli
or
lea
sahf
dec
sub
mov
fcomp
mov
mov
rorl
xchg
imul
sti
mov
jge
jge
pop
push
dec
outsb
add
fisttps
adc
mov
add
cld
fwait
jmp
xchg
call
inc
fisttpl
cmp
mov
inc
aam
dec
mulb
adc
pop
int3
shrl
cli
and
and
pushf
ret
or
inc
add
test
js
movsb
push
add
push
shr
es
or
and
fistpll
inc
pop
popa
dec
rcr
mov
not
and
jbe
or
rcrl
add
lods
push
mov
ds
shr
adc
or
jg
incb
roll
cmpl
das
push
jbe
mull
ficompl
sub
lret
jmp
ss
sub
jo
push
fbstp
fs
or
sub
mov
int
into
pop
aad
fdivrp
cmp
add
loope
stc
xchg
inc
mov
out
into
mov
jecxz
fidivrs
or
jmp
mov
add
adc
add
lods
shll
lock
cli
cmp
dec
jle
push
scas
cmc
loope
inc
fwait
adc
xchg
notb
pop
mov
sar
scas
movsl
or
ret
test
pop
mov
movb
adc
lahf
stos
mov
xchg
rcll
sub
push
jmp
pop
lahf
gs
xor
sahf
enter
push
inc
cmp
dec
loopne
in
push
cmp
je
iret
pop
mov
xor
fdivp
sbb
pop
jl
xchg
inc
std
fisttps
call
cmp
xor
mov
sahf
push
fcomps
das
xchg
pop
inc
cwtl
rcrb
cmp
int3
jbe
scas
pop
scas
testl
imul
or
jle
xlat
lods
iret
inc
sbb
aam
pop
mov
pusha
mov
mov
cmp
pop
leave
ljmp
sub
fisubrl
cld
mov
mov
dec
hlt
cmp
sbb
cmp
sbb
jecxz
mov
es
sub
mov
pop
and
js
cmp
push
and
nop
imul
cltd
jmp
sub
push
pop
fildll
mov
cmpsl
lahf
inc
mov
dec
mov
cmpsb
sbb
std
mov
pushf
and
mov
adc
sbb
test
mulb
sbb
jbe
out
pop
mov
jle
mov
cmpsb
das
xchg
jp
ja
cli
xchg
cmp
and
iret
clc
sbb
lahf
cwtl
imul
lods
pushl
pushf
xchg
sbb
xchg
lds
lods
add
bound
mov
pop
push
pop
and
sbb
pushf
shlb
lret
mov
xlat
xor
int3
jg
dec
jbe
fdivl
pop
scas
push
bound
cli
sbb
leave
jb
xor
cmp
pop
mov
mov
mov
ss
scas
or
dec
rcl
jp
cmpl
mov
or
es
xor
pop
test
popf
shrl
stos
das
shrb
leave
dec
xchg
sub
pop
mulb
pushl
adc
leave
cltd
xchg
test
sahf
xlat
stos
mov
add
hlt
cmp
mov
push
repnz
pop
enter
or
fwait
ret
sti
adc
outsl
je
lock
out
cltd
rcrb
das
repz
ss
push
xchg
sbb
in
cwtl
in
adc
hlt
sub
sub
sub
negl
push
rcll
sar
mull
xchg
mov
aas
sar
xor
cmc
push
adc
add
jne
repz
cld
stos
pop
mov
insb
in
mov
mov
mov
int
aaa
xchg
xlat
gs
push
test
and
sub
shrb
jle
adc
sti
shl
cs
fwait
sub
sub
xchg
repz
cli
cltd
test
mov
pop
adc
push
outsl
aas
ljmp
sbb
sub
cmp
mov
aas
data16
cmp
push
lcall
lahf
inc
negl
cli
jbe
mov
sub
jbe
ret
cmp
subb
fimull
mov
or
sub
xchg
push
mov
imull
mov
adc
xchg
jl
aad
orb
std
out
mov
lods
adc
inc
xchg
pop
sub
std
test
cld
in
sbb
push
inc
push
push
xchg
and
add
jge
lcall
push
out
aam
push
aas
push
add
xchg
sti
jp
xchg
daa
xor
stos
mov
dec
fsubrs
js
sub
sbb
cmp
rcll
push
ljmp
mov
lods
call
nop
inc
mov
icebp
lahf
stos
movntq
mov
ret
pop
adc
in
mov
divb
fistl
jl
outsl
addr16
stc
in
fwait
sar
and
inc
hlt
pop
xchg
int
dec
test
inc
enter
incl
fucomp
loop
mov
jo
mov
mov
jecxz
cmp
sbb
mov
jp
dec
push
inc
js
cmp
loopne
std
call
and
sahf
mov
ficomps
movsl
jb
cltd
lods
js
dec
cs
push
inc
cmp
fwait
add
cmpsl
push
adc
pop
xchg
inc
test
enter
scas
push
mov
adc
sbb
mov
xchg
fists
xor
ss
inc
test
xlat
fdivrs
xchg
rcll
sub
popa
popf
insl
jno,pn
push
in
jb
add
insb
adc
mov
xchg
inc
les
xor
pop
push
mov
push
xor
aad
repnz
mov
fcoml
aas
or
flds
xor
sahf
xchg
scas
mov
fwait
add
ss
xor
or
inc
lods
ljmp
inc
pop
jmp
out
ss
add
jp
push
inc
inc
lcall
nop
call
push
adc
and
cmp
jle
call
add
shl
cmp
inc
ret
or
mov
mov
lahf
cli
or
ss
mov
scas
jb
test
fistpl
and
fsubs
shll
push
sub
jb
xor
negb
iret
call
mov
jl
in
out
xchg
fisubrl
aas
jae
stos
or
add
outsl
scas
lcall
adc
lahf
addb
pop
idivb
inc
fildll
mov
or
lods
faddl
inc
scas
fimuls
lea
mov
pop
xorb
cld
addr16
stos
test
add
push
jne
pop
sub
cltd
push
push
mov
mov
insb
and
aad
push
call
push
cmp
push
mov
push
add
rorl
push
pop
dec
jnp
pop
jnp
jl
push
loopne
repnz
fdivr
mov
decb
pop
sub
out
adc
adc
aaa
or
sbb
push
xchg
mov
jmp
test
dec
xchg
jbe
dec
inc
leave
in
xchg
cmpl
ja
mov
push
sub
xchg
inc
inc
rolb
xchg
test
cmp
dec
xchg
mov
mov
pop
cmpsb
mov
and
iret
in
mov
sub
fadds
xchg
add
xchg
sub
rclb
mov
fcmovnb
sub
push
dec
push
or
lea
adc
cmpsb
add
add
scas
cmp
mov
sub
xchg
mov
cmp
test
repz
push
lods
push
jae
data16
xor
cmp
movsl
jns
pop
daa
mov
lods
mov
xchg
ljmp
or
add
add
jne
mov
push
outsl
lcall
cld
xor
out
pop
aam
mov
insl
aas
sub
sti
and
lock
je
outsl
mov
iret
jno
faddl
xor
jo
xchg
mov
movsl
inc
andps
lds
scas
out
shrb
jb
rolb
fidivrs
cmpl
pop
xor
pop
icebp
cld
repz
sbb
xor
push
mov
lods
xor
ret
test
mov
cmp
pop
push
and
jmp
outsb
xor
cmp
inc
loopne
sub
hlt
add
add
ret
add
jle
je
lcall
int
stos
push
stos
test
inc
dec
inc
jo
sub
hlt
jno
push
shr
cwtl
push
notb
add
xchg
mov
push
push
out
insb
lods
or
xlat
add
push
test
mov
ljmp
fcompl
imulb
pop
sbb
test
fwait
push
loop
push
out
or
popf
adc
push
rdmsr
push
push
xor
add
inc
xchg
push
fmuls
aaa
xchg
sub
or
leave
clc
push
rorb
aaa
mov
mov
sub
fsubrs
push
push
jge
adc
lahf
and
mov
push
xchg
out
int3
cmp
xor
xor
mov
pop
jae
xchg
mov
mov
ror
scas
daa
pop
fsub
sub
lds
fwait
mov
aad
mov
mov
mov
stc
divl
popa
popf
fisubl
lea
fs
ficoml
movsb
incb
or
sub
adc
sahf
and
mov
jmp
mov
adc
repnz
mov
cmp
cmp
adc
repnz
or
test
clc
repnz
sub
adc
lock
dec
push
mov
testl
cmp
adc
xlat
or
sub
cmp
or
adc
inc
ret
or
je
fisttpl
cli
fprem1
push
adc
pop
mov
incb
push
pop
jecxz
int
cmc
test
adc
outsl
adc
mov
sub
adcb
loopne
je
add
jae
and
jg
adc
xchg
sbb
ds
adc
hlt
jnp
popf
sbb
mov
push
push
insl
mov
xor
mull
ss
aam
cltd
jb
add
mov
loope
scas
add
cmp
add
inc
stc
rol
cmc
sub
inc
adc
and
das
sub
hlt
pop
imulb
push
aas
xchg
mov
push
frstpm(287
xchg
fisttps
insb
je
add
ljmpw
cmp
in
xchg
into
shl
add
add
xor
scas
sub
cli
cmp
test
mov
pop
and
jns
popf
jo
sub
hlt
int
mov
rorb
inc
fs
xor
mov
fcoms
or
dec
sub
rorb
sub
enter
mov
push
cwtl
pop
test
fwait
mov
jo
imull
add
out
push
out
out
ss
lock
mov
push
sbb
mov
orl
mov
cmpsb
call
xchg
ja
inc
xor
in
push
loop
lods
movsb
lods
aaa
xchg
pop
xchg
lea
push
cld
mov
gs
mov
inc
iret
es
sahf
xor
mov
mov
pusha
inc
repnz
xor
pop
cmpsb
cmp
xor
into
jmp
xrelease
cld
data16
cmp
pop
and
clc
inc
popf
add
les
pop
cli
call
lods
in
enter
insb
call
enter
pop
into
fs
pop
imul
aas
inc
pop
push
mov
arpl
iret
addl
mov
lcall
sub
aaa
cmp
cmp
and
adc
add
subl
ds
mov
dec
repz
lods
cmpsl
cmp
jge
movsl
sbb
jae
push
sbb
mov
inc
push
nop
scas
insb
add
scas
subl
cmp
sub
pushf
in
loope
mov
cmp
test
add
pop
in
mov
xor
out
or
sbb
movsl
push
push
leave
pop
cmp
sub
jmp
movsb
rcr
loopne
fildll
ret
in
stos
mov
rcrb
push
aad
push
xlat
sti
scas
scas
imul
mov
jmp
cs
cmp
aas
or
push
arpl
push
add
inc
add
adc
inc
fsubrs
add
push
pop
int
stos
call
fidivs
jbe
mov
xchg
mov
idiv
pop
movb
sub
dec
xchg
int
jbe
in
mov
pop
jge
dec
or
mov
sub
add
cmpsb
sub
jne
push
mov
push
add
daa
jmp
stos
test
loop
addr16
inc
movsb
ret
ss
push
scas
call
pop
push
pop
add
pop
push
fistps
fwait
inc
add
sahf
ss
sahf
fadd
idivb
scas
or
pop
ret
push
out
aaa
fwait
sti
add
push
push
mov
push
sahf
xor
push
jmp
xor
shlb
dec
fistpl
xchg
mov
or
jne
sahf
xor
in
cmp
ret
add
inc
outsl
add
sti
fwait
insb
adc
add
fwait
push
mov
mov
or
popa
adc
mov
push
jmp
lods
lock
mov
push
js
sti
pop
out
sbb
inc
shl
out
push
push
iret
scas
sub
push
ljmp
mull
xchg
push
push
nop
hlt
jno
xchg
jo
cmp
sub
into
dec
push
xchg
mov
add
mov
fwait
mov
jnp
push
nop
inc
push
jb
or
es
cli
sub
and
loopne
push
call
and
push
stos
js
cmp
je
addb
test
insb
hlt
cmp
shll
out
repz
je
sbb
cltd
fdivr
cmp
or
or
mov
adc
jne
sbb
or
cmp
js
ss
add
sub
sub
mov
dec
arpl
dec
insb
ficoml
es
cmp
hlt
xor
leave
push
ljmp
das
sbb
mov
jl
xorb
xor
jg
jo
mov
lret
pop
outsb
sti
mov
xchg
data16
out
dec
sub
xchg
shrb
gs
lods
pop
add
sti
and
ret
test
push
mov
fwait
cmp
or
fwait
push
out
jo
or
data16
sub
movsb
in
sbbl
sbb
fwait
mov
xlat
inc
dec
mov
inc
xchg
jmp
lods
sbb
inc
mov
divb
or
jne
movl
arpl
ret
subps
xorl
xor
mov
test
adc
pop
sub
xchg
shrb
repnz
imul
mov
sub
push
cld
jge
daa
cmp
jmp
xor
dec
insb
push
mov
add
and
jge
push
dec
or
lahf
iret
mov
loopne
sar
lret
movsl
add
pop
test
xor
insb
push
mov
jl
lock
aas
or
cli
aad
scas
scas
or
mov
push
sub
mov
xor
repnz
in
cltd
in
in
inc
mov
xor
and
fdivp
add
sbb
loopne
cmc
xor
lock
clc
pop
ljmp
cmp
loopne
iret
stos
add
jecxz
sbb
hlt
lock
sub
push
adc
pop
popa
sahf
mov
lea
xchg
clc
pushf
ljmp
aad
lret
sbb
adc
lahf
and
insl
loopne
jno
cmc
insb
push
or
push
mov
loope
andb
cmpsl
jecxz
subl
cld
mov
inc
cmp
add
in
xor
repz
test
mov
pop
or
fldt
and
inc
ds
cmp
ja
lock
icebp
add
testl
inc
loopne
mov
and
lea
push
push
mov
cs
jnp
test
jge
push
pop
aaa
add
adc
out
movsl
push
push
clc
std
xchg
lock
popf
mov
cmc
mov
fs
es
int
fisttps
aaa
mov
cmp
and
jg
incb
test
sub
mov
sbb
insl
push
sahf
out
icebp
sub
pop
xchg
arpl
xchg
fstpl
repnz
hlt
ret
and
inc
dec
js
and
cmp
sar
xor
mov
fwait
sub
xor
jnp
cs
aaa
dec
div
ret
setns
lods
push
mov
inc
test
movsl
dec
add
push
iret
sbb
or
loopne
xchg
dec
movsb
sub
in
inc
xchg
sub
push
pop
cmp
insb
scas
xor
sub
xor
in
loope
ret
loopne
es
cli
dec
clc
xchg
cmp
sub
sub
lock
lods
lods
or
xchg
ss
mov
xchg
xor
push
sub
aas
insl
add
idiv
dec
sbb
dec
stos
call
out
cmpsb
das
xor
lcall
punpckhdq
mov
lea
and
mov
mov
aas
sbb
fwait
dec
and
call
sub
xchg
js
pop
bound
cmp
cmp
dec
cld
push
call
jge
fsub
insb
push
cmp
push
fidivs
icebp
scas
stos
add
push
ja
test
sub
out
call
bound
test
mov
jne
sbb
and
and
jne
push
iret
add
cmp
or
lcall
xor
xchg
js
ret
or
sub
mov
xchg
pop
inc
inc
mov
ja
xor
js
add
lcall
xchg
cmp
push
xor
mov
test
pop
dec
or
lea
fsubr
cmpsl
cli
sbb
pop
repnz
rcl
adc
psadbw
sub
shrb
and
dec
rcr
ret
lret
xchg
repnz
xor
mov
push
mov
ret
push
mov
lock
jp
icebp
cmc
test
lea
call
xor
xchg
xchg
pop
xor
xor
loopne
dec
xchg
jbe
fimull
and
lahf
or
scas
or
and
cmp
lret
or
decw
inc
sub
jmp
out
cmc
lock
ljmp
in
sbb
or
shrb
hlt
cs
dec
loopne
rcl
and
fiadds
call
pop
lods
xor
pop
sub
inc
bound
inc
xchg
pop
fmuls
cs
push
cwtl
mov
ds
std
pop
scas
sub
cli
daa
or
jo
ljmp
push
imul
adc
insb
lret
test
flds
cltd
scas
rcr
sbb
lret
lea
sub
xor
scas
ss
jge
pop
adc
mov
mov
mov
lea
cltd
out
call
push
jl
lret
xor
push
mov
and
sbb
pop
sbb
add
sbb
push
testl
add
sbb
pusha
add
jo
or
fwait
shll
lods
sbb
mov
fsubrs
xchg
push
mov
cltd
data16
adc
aad
pop
loop
pop
dec
fsubs
ficoml
or
mov
xlat
jl
xchg
xchg
xor
push
add
sbb
insl
add
nop
sbb
xchg
push
or
push
and
push
or
mov
and
cmpsb
and
and
sub
add
and
inc
and
cld
imul
mov
imul
popa
or
jmp
or
push
sbb
mov
test
mov
pop
inc
xor
fsubrs
ficoml
and
stos
stos
fistps
or
xchg
cltd
sbb
outsl
jo
ja
sti
or
dec
or
js
xchg
std
sbb
sbb
jl
sbb
into
stos
cmpl
push
addb
repz
dec
adc
leave
xlat
mov
sub
xchg
inc
xor
inc
pop
aam
sbb
sbb
xchg
faddl
sbb
xchg
mov
sbb
subb
adc
sbb
sub
mov
jp
jg
jne
mov
movsb
int3
push
insb
push
or
insl
push
mov
mov
or
flds
sahf
sub
add
ljmp
lahf
sbb
cltd
or
fiaddl
pushf
jbe
sbb
sti
inc
hlt
cmp
xor
idiv
push
scas
jge
xor
mov
rcrb
push
xchg
cwtl
mov
out
daa
out
lea
lahf
ja
scas
clc
adc
cmpsb
lock
cmp
je
lock
jne
pushf
add
mov
pushw
sbb
mov
scas
dec
das
mov
add
pushf
fwait
xchg
cs
fldl
and
add
pop
jl
imul
imul
lret
into
pop
sbb
sub
hlt
mov
cmp
inc
lods
adc
in
mov
cmp
push
pushf
inc
jbe
sub
or
sbb
cmp
mov
loop
repnz
and
fildll
lret
sti
lock
leave
ret
aam
sub
test
test
mov
cli
or
aas
push
int
pushf
les
push
outsl
mov
pop
xchg
nop
or
sub
dec
jb
mov
add
xor
mov
dec
pop
xor
push
cli
test
jbe,pn
add
add
dec
pop
enter
ljmp
lcall
iret
ret
add
clc
sub
in
lret
pusha
pop
pop
out
jge
pop
push
jbe
loop
out
insb
push
push
or
dec
push
outsl
pop
mov
and
mov
sub
popa
mov
movsb
mov
jmp
repz
xchg
ljmp
fidivl
sub
ja
test
popf
cmp
and
adc
pop
stc
mull
push
cld
in
inc
add
inc
sub
iret
push
cmc
mov
dec
jle
add
loope
jb
cmpsb
jmp
jmp
out
std
add
scas
or
movsb
bnd
push
cwtl
call
scas
lret
rol
clc
cmp
adc
mov
call
pusha
mov
mov
js
mov
sub
inc
xchg
inc
xchg
or
call
lock
loopne
mov
add
lock
or
out
jno
sbb
scas
dec
insl
icebp
xchg
jb
push
lcall
xor
arpl
add
ret
push
push
pop
inc
inc
sub
clc
xchg
xchg
jp
adc
push
push
pop
fldenv
std
jmp
or
push
and
rorl
aam
loope
pop
add
xor
pop
int
xor
hlt
push
jmp
insb
xchg
push
lock
adc
repnz
sub
push
sub
scas
xor
mov
test
xor
or
stos
or
rcr
xor
pop
mov
leave
jmp
sbb
mov
sub
cmp
ja
xchg
cmp
cmp
jmp
mov
xchg
mov
pop
cmc
pushl
stos
add
ja
cmpl
ss
movsb
out
push
dec
ja
insb
loop
inc
aaa
divb
xchg
std
shlb
out
mov
scas
push
mov
jne
or
dec
inc
test
sub
mov
pushf
mov
xchg
xor
sbb
add
mov
icebp
push
or
cs
cli
gs
sub
jae
jl
or
cmp
push
in
aaa
loopne
mov
or
push
mov
aam
int
adc
roll
jp
iret
sbb
push
popfw
mov
xor
in
inc
xchg
xchg
mov
inc
dec
jne
cmc
lret
pop
gs
push
loopne
add
push
push
aam
sbb
adc
lods
jne
adc
mov
xor
int3
test
cmp
ja
sub
adc
outsl
loop
sahf
jnp
sarl
enter
xchg
mov
sbb
lods
push
in
xlat
fadds
ret
push
cmp
gs
nop
mov
fcompl
nop
fs
scas
xchg
andl
cwtl
or
jne
outsb
pop
mov
xchg
scas
inc
lds
dec
xchg
adc
lret
add
fucom
dec
outsl
call
jne
out
mov
or
pop
aam
mov
gs
in
insl
sub
in
insb
push
add
and
or
sarb
pop
mov
cmp
ret
mov
push
outsb
pop
scas
cld
std
dec
dec
lock
mov
nop
or
arpl
shrl
ret
or
ds
outsl
push
cmp
xor
sub
call
or
sbb
out
cmp
fwait
push
and
scas
push
aas
je
clc
inc
icebp
mov
lods
push
in
pop
les
mov
movsl
jmp
sahf
and
mov
adc
sbb
push
pop
mov
cwtl
cmp
adc
xor
xchg
mov
mov
rcll
sub
fs
cmc
push
push
jbe
out
jl
stos
lods
jmp
mov
bound
push
mov
lahf
cwtl
mov
aam
js
mov
adc
paddd
sbb
dec
shll
add
outsl
pushf
out
push
mov
sbb
lods
mov
pop
xor
imul
xor
stos
lods
scas
sub
nop
data16
push
sub
pop
in
cmp
mov
sub
mov
cmp
arpl
xchg
outsl
rcll
leave
lcall
inc
movb
and
ss
data16
jbe
push
rclb
enter
shlb
or
push
and
fcomp
aas
pop
cld
call
pusha
scas
pushf
clc
or
imulb
mov
call
fistps
push
sahf
lock
mov
push
mov
rol
push
test
sub
test
mov
sbb
sub
adc
push
push
push
or
inc
dec
jle
test
dec
test
ret
add
pop
repz
insb
mov
push
testl
lahf
ss
cli
sub
xor
shrb
sub
int3
andb
lock
cmpsl
sbb
and
enter
and
mov
rorl
xor
test
imul
jl
imul
dec
jmp
inc
jae
aad
pusha
adc
in
jge
mov
fwait
sub
jns
dec
fstpt
or
or
jo
es
xchg
aaa
bound
shr
jo
mov
inc
and
push
xor
push
xchg
lea
xchg
imull
inc
testb
sbb
les
movb
loope
clc
xlat
mov
push
mov
imull
dec
iret
aam
push
push
mov
call
lods
andb
sahf
adc
movsl
insb
cmp
inc
test
inc
push
lock
dec
mov
push
and
mov
jl
lods
ret
xchg
outsb
sarb
pop
and
scas
lcall
sbb
aam
dec
pop
adc
push
jae
rorb
test
fcoml
and
pusha
pop
xchg
inc
add
lods
dec
fistps
in
xchg
pop
das
jp
cmpsl
sbb
iret
lock
jl
mov
mov
xor
out
lahf
sub
push
stos
insl
lahf
add
or
icebp
mov
lcall
test
nop
add
sbb
je
jae
sbb
fimull
mov
fsubp
mul
roll
fwait
inc
mov
iret
test
push
push
ffree
inc
push
push
sahf
mov
xor
sarb
sti
xchg
push
lcall
sbb
xor
push
inc
jp
fsubs
fisubs
dec
cli
sbb
sub
ret
add
dec
mov
inc
sub
add
inc
sahf
adc
iret
cmp
mov
popf
sbb
jmp
out
daa
mov
mov
lock
or
sarl
sub
sbb
sbb
repnz
test
leave
mov
outsb
pusha
loopne
jp
in
popf
add
sbb
xchg
jg
adc
loope
push
fwait
movsl
or
js
inc
xchg
ret
mov
call
test
scas
aad
movsl
pop
loopne
dec
add
and
cmc
ret
jne
rorl
sub
loope
xchg
fwait
or
inc
mov
xchg
inc
inc
lock
lock
shll
xchg
dec
cltd
jo
mov
dec
adc
aaa
adc
enter
in
movsl
loopne
rorb
rcl
ja
dec
je
xchg
shlb
inc
outsb
rol
and
pop
hlt
sub
clc
jb
adcl
in
and
inc
or
push
add
mov
jg
rcll
cwtl
dec
dec
adc
jmp
in
in
imull
call
mov
das
movsb
cmp
pushf
adc
mov
outsb
mov
test
jl
xchg
rorl
es
call
lods
call
mov
mov
fwait
xor
js
mov
out
jle
xor
or
xchg
pop
lods
shlb
aaa
mov
inc
pop
add
add
mov
sub
rorb
xor
fidivl
xor
mov
cmp
movsb
inc
xchg
fbld
sbb
jge
cwtl
or
inc
decb
in
inc
jne
sar
push
xchg
imull
cltd
bound
sub
mov
icebp
xchg
ljmp
adc
push
stos
inc
jmp
push
push
sub
pop
repnz
add
xchg
dec
jecxz
xchg
inc
lock
xchg
call
ja
sbb
xchg
or
adc
or
test
mov
and
mov
inc
mov
sbb
lea
call
in
sub
scas
loopne
mov
lods
ja
rol
mov
daa
mov
add
cmp
mov
or
mov
out
push
sub
pop
cli
lock
in
dec
push
aaa
jo
call
fldenv
mov
faddl
mov
je
ficoml
xchg
add
adc
pop
scas
and
or
ljmp
add
out
or
xor
mov
loopne
pop
scas
pushf
addr16
call
es
push
or
roll
adc
mov
mov
xor
jb
add
movb
in
inc
iret
mov
mov
pop
iret
mov
loope
subb
push
cltd
push
push
lock
aam
and
lahf
rolb
repz
or
xchg
ficoml
loope
pusha
jg
dec
or
pop
add
push
stos
lods
push
add
or
or
push
test
rolb
cmp
xchg
cmpsl
popl
std
jle
jae
inc
mov
lods
fimuls
mov
ds
mov
int3
orl
xchg
movsl
mov
fwait
jmp
outsb
lahf
sub
iret
or
jbe
sub
les
or
bound
popf
xchg
loope
aas
cltd
jbe
repnz
ret
mov
ja
ret
sbb
testb
cmp
inc
xchg
mov
push
and
xchg
ljmp
std
mov
sbb
cs
negb
jae
add
insb
les
cmpsb
fwait
pop
pop
fwait
popf
cmp
incl
inc
iret
or
sub
loopne
or
add
fisubl
cmc
outsl
adc
dec
bound
daa
loop
add
incl
sbbb
ja
rorb
push
inc
jp
aam
add
es
sub
hlt
cmpl
or
cli
xor
fwait
add
and
sti
enter
xchg
inc
pop
sbb
inc
pop
jnp
or
jno
sub
jne
xor
xchg
test
js
push
jae
sbb
xor
pop
ja
cld
xor
imull
adc
mov
mov
jno
xchg
jae
popa
xor
andb
jae
jecxz
add
das
add
arpl
fdivp
jns
pop
sbb
cmpl
or
pop
xor
dec
mov
fstps
test
dec
movl
inc
mov
ror
lret
xor
jp
and
dec
lcall
xor
or
into
call
enter
jp
sarb
lods
pop
adc
insb
sbb
sbb
pop
xchg
and
popa
sbb
pop
loope
add
and
cmp
push
jmp
daa
mov
lcall
push
stos
sub
pop
ja
pushf
push
add
lret
loopne
test
mov
dec
lods
or
pop
xor
stc
push
dec
in
cmc
dec
cli
fsub
sub
cmp
push
out
push
or
sbb
or
std
sahf
ret
inc
lods
push
aaa
jl
inc
adc
popa
idivb
lea
push
sti
icebp
and
ret
pop
sub
and
movsb
jmp
test
sub
push
and
mov
cltd
shrb
scas
and
xchg
stc
adc
xor
sub
out
mov
cltd
xchg
int3
jl
mov
sub
lahf
test
int3
jbe
fcmovu
mov
cmpsl
in
call
fwait
cmp
or
jmp
xor
push
cmpsl
xchg
mov
repnz
pop
lret
lcall
pop
mov
sbb
cmp
mov
adc
out
jmp
test
push
cmpsb
jae
add
les
out
lock
and
adc
mov
add
shrb
xchg
nop
fiadds
inc
call
xor
push
imul
into
cld
cmp
mov
adc
inc
push
adc
mov
add
call
lock
stos
leave
ret
cmpl
adc
push
adc
mov
cmp
rolb
pop
add
gs
sub
in
mov
mov
xor
call
mov
cmp
or
push
add
mov
insl
loopne
subb
jmp
lret
dec
out
adc
loopne
cld
dec
dec
int
cmp
adc
push
into
sub
mov
xchg
jmp
dec
scas
loopne
adc
loopne
sbb
in
or
in
cmp
enter
bound
inc
xchg
insb
pop
mov
stos
or
scas
shr
inc
push
ficompl
push
sahf
das
or
jmp
push
fdivrs
repz
rcrl
inc
mov
jb
cmp
ja
mov
xor
jbe
add
sub
pop
hlt
mov
xor
mov
mov
cmp
test
adc
mov
std
sub
push
jge,pn
or
mov
or
or
cmp
mov
pop
scas
mov
shl
cli
loopne
mov
push
cmp
cs
decl
adc
mov
mov
popf
jne
push
pushf
mov
ficomps
jnp
inc
fiadds
andw
mov
rolb
mov
inc
xlat
xor
in
call
sub
cltd
repz
mov
mov
jno
xchg
push
mov
aas
aam
call
out
mov
ljmp
and
pop
push
pop
ret
mov
cwtl
push
push
sub
cli
push
jp
mov
xchg
mov
pop
lea
jne
and
push
push
push
fcmovbe
lods
or
call
mov
scas
or
cmp
jne
aaa
jp
xchg
icebp
sub
idiv
notb
loopne
mov
div
lods
je,pt
adc
lahf
or
sbb
and
clc
jmp
push
fimull
sti
call
ss
shrl
movsb
cmpb
push
xchg
aam
cmc
jae
cmpsb
test
cld
fnstcw
mov
sarb
or
cmpsl
jle
mov
shll
lock
xor
stos
aas
mov
clc
push
push
subl
shll
lahf
and
dec
mov
loopne
mov
push
lea
and
test
and
pop
or
or
or
add
imul
lock
cmp
pop
cmp
pushf
aaa
push
pop
lahf
cmpsl
mov
mov
and
cmp
cmp
gs
dec
cmp
push
jbe
sub
cltd
sub
jg
incl
je
mov
or
popf
aaa
jecxz
jne
movw
inc
sbb
mov
dec
mov
ds
mov
or
jmp
addl
inc
outsb
mov
mov
inc
ljmp
in
push
sub
nopl
dec
push
push
fldenv
adc
push
pop
dec
fisubl
dec
lock
pusha
mov
jns
push
pop
adc
je
lea
ja
xchg
and
sub
push
sub
int
push
rorl
push
jne
jle
or
andl
jmp
or
sub
in
cld
or
cmc
mov
dec
fdivp
cwtl
insb
lock
call
popf
and
div
xchg
popa
xchg
and
inc
in
or
repz
jmp
mull
pop
adcl
out
jbe
inc
imulb
fistl
mov
mov
mov
pop
je
test
jle
lea
dec
mov
xchg
and
inc
or
js
cld
lods
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
dec
add
add
inc
add
add
add
push
add
add
insl
add
add
add
add
add
add
inc
push
add
add
push
add
add
add
add
dec
add
add
add
add
add
add
add
pop
inc
xor
add
dec
jno
add
add
inc
inc
add
add
jo
add
add
add
push
add
ja
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
add
add
add
add
add
push
add
inc
bound
add
cmp
add
add
add
insb
dec
add
add
add
add
add
add
jo
pop
add
add
add
add
xor
add
xor
add
outsb
add
dec
add
add
add
push
add
outsl
jno
add
add
jb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
push
add
add
xor
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
push
add
add
add
pop
pop
cwtl
inc
scas
insb
mov
push
loop
cltd
fildll
push
mov
cwtl
push
push
sub
insb
pop
popa
xor
out
xchg
cmp
push
fsubrp
lret
clc
lcall
int3
shll
test
lcall
jecxz
fstpl
mov
ret
icebp
cmp
xchg
icebp
test
dec
subl
pop
sub
mov
call
lods
mov
ror
xchg
test
jmp
and
sbb
adc
or
cwtl
in
add
dec
incl
popf
xor
call
jg
je
sub
rol
push
xor
inc
add
and
xor
sub
ret
pop
and
scas
icebp
push
lcall
pop
jae
scas
test
sbb
lods
add
and
dec
ret
ss
add
lahf
repnz
push
or
test
punpckhwd
xchg
inc
mov
add
cmc
call
mov
fidivl
xor
pop
or
jmp
decl
xchg
adc
nop
sbb
lock
xchg
lcall
pop
ret
loope
fiadds
and
rcrb
js
push
addb
xor
push
xlat
adc
ficompl
xchg
in
scas
sti
pop
xchg
inc
or
cmp
sub
sbb
ss
adc
loope
push
int
add
jmp
data16
and
adc
xchg
mov
popa
xor
xor
outsb
popa
lahf
nop
out
rcr
push
jecxz
outsb
xchg
xor
push
idivl
mov
push
shr
inc
and
cmp
and
cmp
adc
mov
fwait
jne
cmp
adc
xor
imul
and
adc
and
cld
add
inc
inc
mov
add
mov
shr
inc
lahf
aas
push
dec
jno
dec
cmp
push
push
or
pop
xchg
jne
sahf
arpl
ret
pop
sub
mov
shll
push
cwtl
sub
loopne
push
push
lods
ret
cmpsb
push
ret
xchg
popl
pop
xor
and
sub
push
es
add
push
outsl
adc
add
and
fldl
xlat
or
lret
js
and
test
outsb
pusha
add
or
fsincos
mov
mov
test
add
inc
int
pop
iret
pop
adc
add
sub
inc
loop
cld
dec
mov
inc
mov
sbb
clc
mov
add
or
mov
jg
xor
pop
aas
inc
jae
cld
sbb
sbb
out
xor
mov
mov
mov
fisttps
push
pop
or
xchg
ret
jae
test
inc
xor
popaw
test
outsl
or
or
or
mov
in
into
adcl
push
mov
inc
dec
out
and
ficoms
pop
arpl
jno
into
push
inc
dec
mov
jae
push
lcall
jecxz,pt
xchg
leave
ds
and
stos
jg
push
mov
adc
cmp
push
sti
mov
cmp
xor
cmp
out
inc
xor
pop
fdiv
dec
stc
ficompl
jl
ds
cmc
push
adc
push
xor
cmp
pop
jmp
pop
add
push
ds
mov
xchg
dec
dec
mov
fcomi
movsb
push
insb
imul
insb
sub
adc
mov
xchg
cli
ds
sbb
push
icebp
repz
hlt
ret
sub
and
xor
or
aaa
dec
pop
nop
jne
js,pt
fistl
dec
xor
or
mov
mov
cmp
jne
sub
iret
add
and
addr16
adc
push
sbb
jmp
pop
je
mov
sti
sub
js
pop
cltd
ret
iret
inc
insb
dec
add
movsl
and
add
cmp
dec
push
sbb
testb
lret
cmp
pop
std
jb
pop
test
mov
mov
and
popf
sub
fwait
xor
inc
pop
cli
push
dec
adc
nop
les
hlt
mov
or
mov
stos
xor
inc
cli
mov
test
pusha
or
mov
inc
mov
lcall
mov
jge,pt
xlat
jg
lcall
in
mov
dec
jp
push
mov
rcrl
movl
or
xchg
insb
pop
call
xchg
fisttpll
in
cld
out
or
stos
fiaddl
sarb
int
adc
inc
popl
rcrl
test
or
cmp
adc
lret
push
pushf
iret
sahf
sahf
or
popa
ja
shr
jmp
jmp
out
cld
and
pop
pop
inc
adc
in
add
idiv
and
pop
jecxz
leave
xchg
sub
jecxz
dec
lods
jne
aas
xor
mov
cmp
les
add
jnp
push
or
test
xchg
insb
jmp
testl
iret
sub
idivb
lods
leave
adc
cmp
sbb
adc
cmp
jp
pushf
mov
push
pop
push
inc
call
push
lcall
mov
add
dec
dec
xor
popa
mov
hlt
lret
mov
pop
mov
je
push
sbb
imul
mov
dec
xor
push
push
aas
cmp
dec
jge
pop
sti
andb
in
ret
xor
cltd
sar
add
scas
push
xchg
add
mov
cmp
mov
jmp
or
pushf
pop
cli
ret
sub
xchg
cmp
add
add
add
push
mov
push
call
add
push
cmp
ffreep
dec
mov
mov
std
jb
lea
rol
inc
pop
ja
jl
rcr
dec
mov
adc
or
pushf
stc
leave
pushf
adc
ljmp
imul
loop
leave
testb
push
adc
test
sbb
das
mov
or
mov
int3
imul
dec
or
imul
mov
ficomps
cmpb
or
jp
xchg
mov
cwtl
push
clc
add
idiv
and
push
fdivs
jl
mov
xchg
xchg
push
adc
in
aaa
sub
and
negb
pusha
popa
lcall
addr16
test
ljmp
add
shrl
addr16
scas
sub
sub
int
push
fldcw
mov
mov
sub
mov
mov
inc
in
push
scas
cmp
mov
mov
stos
js
sbb
push
cmp
subl
adc
sbb
aas
shl
or
add
dec
mov
mov
add
fucomi
hlt
push
fwait
imul
cmp
clc
adc
cld
xchg
and
iret
andb
out
pop
ds
adc
sub
repnz
push
xchg
jmp
mov
add
cld
xchg
push
cs
lds
aas
push
fstpt
fwait
jge
fcomps
jecxz
fcomps
push
adc
cmp
cltd
jne
mov
push
clc
and
loop
pop
mov
pop
and
rclb
fcompl
call
pop
pop
mov
dec
mov
not
adc
xchg
insl
mov
in
mov
scas
and
sbb
pop
add
in
xor
stc
sub
ja
mov
hlt
stc
ljmp
sub
je
or
mov
loope
push
jo
or
mov
jne
jno
lock
pop
aas
add
out
outsl
movsb
in
sbb
push
jbe
lock
cli
subl
aaa
popf
scas
sub
je
fcoms
adc
aaa
rcrl
incb
or
or
push
mov
sbb
add
mov
mov
enter
rol
hlt
addb
jne
pushl
ret
lret
dec
js
jne
pop
inc
or
xor
inc
cli
sub
pop
cwtl
mov
adc
or
loope
or
or
ret
fwait
add
mov
fisttpll
pop
inc
iret
jle
sbb
lret
filds
xchg
std
nop
xchg
cmp
lea
add
call
incw
mov
cmp
cmc
push
mov
mov
push
aam
xor
mov
mov
add
jnp
mov
in
inc
add
push
cmp
lret
lds
push
sbb
stc
cltd
mov
inc
cmpsb
outsl
cmp
int
or
jge
loop
add
in
jo,pt
sub
jne
mov
loopne
incl
sbb
add
and
into
test
sub
mov
pop
sub
sbb
lods
sub
adc
or
pop
or
dec
jns
cmp
push
pop
pop
pop
cld
hlt
repz
aaa
into
lods
mov
sti
add
cmp
repz
pop
rorb
je
fdivr
jmp
clc
sub
shlb
cld
jmp
mov
jecxz
add
xchg
sub
xor
jmp
push
fwait
add
sub
push
adc
jmp
pop
scas
cmp
icebp
es
push
loopne
mov
test
xor
or
jno
daa
push
lcall
add
inc
sub
cmp
decl
xchg
xchg
sub
and
scas
pop
sub
mov
pop
mov
cmp
ljmp
clc
dec
xchg
shrl
cmp
adc
lock
mov
jp
xchg
mov
mov
hlt
mov
xchg
cmp
loope
push
xchg
ret
jp
or
xchg
add
pusha
test
je
and
divl
sahf
insb
inc
xor
xor
sub
out
jge
fs
ret
ret
xor
pop
xor
lods
pusha
ret
cmp
jo
jp
sti
adc
xchg
pop
pushw
push
outsb
sahf
xor
aaa
fcompl
and
out
cmc
and
cmpsl
movsb
lea
cmp
cmp
or
aaa
cmp
add
orl
cmc
out
cs
outsl
sub
fwait
jecxz
ss
lods
das
pop
mov
dec
decb
outsl
cmc
loop
sahf
scas
ja
imul
xchg
cmc
pusha
xchg
lods
or
and
inc
in
je
add
ss
or
jne
mov
fcoms
mov
sub
mov
js
or
cmp
sbb
lret
xor
lods
jle
cmp
je
push
test
mov
sbb
pop
gs
sbb
pop
repnz
adc
js
mov
add
iret
pop
mov
sub
and
jle
test
add
sub
adc
fdivp
push
fimuls
lods
pop
adc
aaa
movsb
sub
sub
and
rcl
imul
testb
cmp
data16
sub
mov
sbb
das
mov
enter
ljmp
and
inc
divl
cwtl
jae
cmp
xor
mov
setb
push
and
outsb
gs
pop
repz
rcrl
cwtl
popa
mov
and
nop
ficompl
lcall
mov
adc
lcall
mov
rclb
sbb
cmp
je
inc
jb
push
cmp
adc
push
dec
nop
and
fdiv
cmp
mov
pop
xchg
pop
jmp
push
sub
xor
cmp
aas
sub
aas
dec
push
mov
cmp
movb
call
xor
test
cmp
lea
pushf
cmp
test
sub
xlat
orl
in
in
outsl
out
filds
scas
sub
cmp
fiaddl
pop
lcall
dec
fcompl
pop
aas
xor
inc
push
ret
mov
jge
mov
push
nop
xchg
lret
push
dec
cmp
add
sub
lea
jle
ja
adc
add
ss
adc
cmp
pop
xchg
les
fwait
clc
or
sbb
imul
std
cmp
inc
icebp
mov
xchg
dec
pop
pop
hlt
adc
aam
inc
add
add
sarl
or
lcall
iret
add
and
xchg
mov
imul
fstl
lcall
out
add
jmp
xchg
adc
je
pop
and
xchg
imulb
and
add
jbe
and
les
dec
mov
shl
mov
enter
pop
cmc
mov
push
lds
enter
in
and
cmp
push
lret
out
pop
pop
mov
dec
lcall
inc
xchg
into
insl
shll
test
sub
push
jmp
stos
add
aam
lcall
push
add
dec
ljmp
in
adc
push
jmp
cmp
sbb
lcall
xchg
jo
jg
lock
cwtl
test
loopne
ss
mov
and
push
adc
xchg
lock
sbb
les
es
jae
lods
xor
jbe
sub
in
aas
cmp
push
pop
mov
nop
add
jnp
das
lcall
mov
call
jae
hlt
lret
sbbb
out
jmp
mov
or
int
sbb
sbbb
call
aas
es
in
insb
sti
push
and
outsb
xlat
sub
and
daa
paddusb
in
std
ss
test
add
repnz
pop
pusha
pop
popf
and
sbbb
testl
pop
pop
movb
pop
xor
loopne
inc
push
pop
insb
bswap
adc
xor
mov
fdivr
icebp
push
sub
sub
test
or
test
adc
sbb
mov
or
lcall
sub
pop
cmp
mov
rolb
xchg
pop
cmp
xchg
cli
popf
outsl
das
pop
ss
cli
rorb
inc
cmpsb
adc
sub
fcomip
sbb
or
sti
sbbl
lret
mov
xor
dec
push
inc
xchg
and
cld
xchg
rcl
jge
mov
movsb
call
fs
dec
add
test
cmp
inc
jbe
inc
cltd
or
mov
add
pushl
insb
cmp
inc
loop
add
dec
dec
out
and
loop
cmp
dec
das
mov
mov
dec
cmpsl
inc
adc
mov
cmp
movsl
movsb
xchg
arpl
or
mov
mov
icebp
pop
scas
pop
mov
pop
add
into
sahf
aas
testb
cmp
push
inc
mov
shrb
pushf
cmp
pop
add
mov
mov
scas
push
add
push
and
jnp
sub
nop
je
fwait
inc
les
pushf
mov
cli
lret
stc
test
add
sarb
sahf
icebp
add
sarb
hlt
add
sbbb
shll
pop
or
les
add
lea
inc
adc
popa
sbb
sub
cs
daa
nop
xchg
mov
std
es
sbb
mov
lahf
adc
ss
or
or
adc
hlt
cmc
adc
push
in
lahf
mov
jne
and
mov
pop
ret
outsb
clc
cli
mov
ljmp
movsl
fs
lret
shlb
jno
jp
push
mov
test
add
loopne
pop
lods
aaa
inc
sbb
and
icebp
pop
pop
or
xchg
outsb
cmp
std
lock
push
shrb
call
or
and
call
mov
add
dec
ja
ret
dec
movsb
cmp
imul
pop
testb
jge
jb
inc
sub
and
xchg
pop
push
sbb
mov
push
mov
call
mov
inc
stos
nop
inc
stc
inc
and
stc
in
stc
faddp
test
jbe
and
shlb
ret
add
shll
mov
ret
and
cmp
inc
xchg
push
enter
xor
insl
sbb
sub
mov
ret
je
xor
xor
jp
lods
imul
push
cmpsb
mov
and
mov
aas
cs
pushf
mov
push
push
sub
mov
shlb
data16
neg
fisubrl
lods
call
je
int3
sti
js
xor
shrl
xchg
cwtl
add
mov
cmp
scas
xor
push
lcall
cmp
or
fs
mov
xor
push
repz
fstps
insl
or
and
arpl
jnp
fcmovb
mov
cmc
mov
push
fstpt
pop
imul
or
lds
test
dec
ret
xor
nop
sub
add
xor
insb
clc
fdivl
sub
inc
enter
pusha
test
sub
fsubl
cld
call
fsub
cmc
push
sti
and
cmc
xchg
fstpt
cmp
pop
in
mov
dec
aam
add
cli
mov
xchg
addps
pop
nop
and
or
aad
mov
mov
mov
in
ret
call
scas
xchg
jns
mov
adc
fisttps
aaa
mov
lock
cmp
shlb
iret
ljmp
je
jg
lds
and
inc
sbb
add
mov
push
test
jg
mov
movsl
jl
jmp
dec
sahf
xor
mov
fidivs
sarb
and
ret
dec
shrl
sarb
into
xchg
xor
dec
mov
in
repz
xchg
mov
mov
mov
scas
mov
sbb
add
daa
aas
sub
jle
scas
mov
or
xor
jge
lods
cltd
push
mov
inc
cltd
or
out
iret
push
imul
xor
ljmp
ja
lock
je
xchg
push
jge
lock
mov
xchg
aaa
or
imul
or
out
mov
cmp
mov
add
mov
jl
test
push
call
add
mov
lcall
in
sub
pop
mov
test
pop
or
ss
insb
fwait
pop
pop
mov
imul
sahf
vxorpd
add
jl
pop
and
pushf
cmc
or
lcallw
and
lods
mov
mov
mov
mov
and
aas
or
js
loop
xchg
dec
movsl
jb
scas
mov
mov
into
aad
sub
xor
stos
mov
jl
or
xchg
push
lcall
cli
les
jmp
push
adc
out
and
cmp
sub
inc
popa
icebp
adc
imul
push
stc
inc
lods
mov
mov
fsubrl
loopne
add
add
xlat
movsb
jae
flds
rolb
stos
mov
push
in
inc
bnd
shll
cwtl
fidivrs
test
adc
fimull
add
cmp
push
mov
pop
sbb
xchg
iret
shll
xchg
xor
or
fmuls
cmp
or
sub
int
loop
incb
iret
jecxz
mov
lea
lods
or
xorb
data16
push
cmc
push
or
data16
jne
xchg
mov
shr
icebp
arpl
clc
mov
movsl
aad
lret
subl
in
ja
mov
fimull
mov
popa
outsl
xchg
xchg
push
inc
fcoms
push
inc
std
pop
and
addb
call
or
mov
jge
xlat
int
and
les
shll
xchg
sub
ljmp
push
push
adc
push
or
pop
lea
lea
pushf
testb
sub
pop
in
sub
add
stos
pop
sarl
sbb
jbe
push
add
bound
push
jnp
and
inc
out
cmp
cmp
lret
fdivr
xchg
and
fidivl
ja
mov
subb
out
js
pushf
sbb
fadd
out
cmp
mov
in
imul
rolb
xchg
cli
lds
adc
adc
sbb
jecxz
aam
sbb
add
cmp
lcall
fmull
xchg
aad
mov
push
inc
xchg
and
pop
into
repnz
sti
push
mov
mul
push
lcall
addb
loopne
fimull
lock
ljmp
dec
cmp
scas
mov
or
sahf
jle
test
xor
jnp
fcomi
inc
mov
or
mov
inc
inc
jne
popf
ja
jle
sbb
xchg
cmpsl
sub
cld
call
aam
mov
jnp
loope
clc
xor
pushf
outsl
ret
mov
add
mov
pop
pop
js
in
or
popa
sub
mov
sbb
or
sbb
sti
in
mov
stos
jmp
negb
jge
inc
cmpps
or
sub
mov
inc
sub
sub
repnz
jne
sub
pop
cld
xor
and
adc
fcomps
subb
mov
add
sbb
shll
ss
jecxz
push
mov
xor
sub
mov
dec
and
inc
outsb
push
xchg
loopne
push
das
or
jns
pop
jl
clc
movsb
scas
inc
cs
or
cli
mov
push
in
mov
adc
push
jecxz
mov
cmpsl
push
sti
adc
pop
xchg
xor
in
jnp
aam
test
testl
jns
sub
mov
in
ficompl
or
xchg
pop
in
pop
rol
xor
rcll
xchg
cmp
add
fnstcw
inc
xchg
inc
pushf
jmp
push
pop
adc
rorl
mov
mov
sub
mov
ret
mov
mov
adc
push
test
or
mov
mov
and
out
mov
enter
out
leave
pushf
das
scas
cltd
dec
pop
jp
cltd
call
push
imul
cmp
lods
jbe
push
emms
jae
pushf
mov
movsb
xor
mov
sub
jle
sub
movsl
xor
movsl
or
cmpsb
shl
mov
in
add
lods
push
sbb
lret
cld
out
mov
push
in
movsb
xchg
cltd
pushf
or
cld
in
fdivrs
cmp
lahf
pop
jns
dec
push
jl
cmp
je
mov
fimull
cld
data16
into
and
mov
xchg
jae
dec
imul
stc
js
cwtl
cld
enter
rcrb
stos
inc
mov
mov
jg
jne
xchg
gs
int
mov
push
jnp
push
inc
sbb
aaa
jl
xchg
cmp
loopne
sbb
sub
ss
sub
and
mov
fiaddl
xor
icebp
das
lock
xlat
dec
hlt
mov
lea
add
fcmovnu
push
xchg
xchg
sub
adc
addr16
dec
addr16
iret
fwait
sub
push
int
sbb
adc
adc
fsubl
lods
in
xchg
adc
push
push
xchg
xchg
fldl
sub
jae
xor
lods
mov
adc
or
mov
dec
push
xchg
rolb
stos
lods
mov
cmp
es
pop
fnstsw
adc
mov
xor
hlt
lret
ret
add
mov
repz
dec
sub
sbb
ljmp
pushf
loope
mov
jl
je
cmpb
cs
dec
jp
xor
mov
notl
cmp
sbb
movb
add
jle
imul
xor
jbe
psrad
or
push
mov
or
xchg
sbb
and
mov
int
add
je
sahf
push
call
push
stos
jp
in
insl
insl
fidivrs
xor
lea
cmp
cmp
popa
fsubs
cmp
jbe
xchg
sbb
jae
or
xor
pop
push
dec
sub
and
push
call
sbb
stc
test
xchg
xor
lret
mov
sbb
or
push
push
sbb
jmp
push
cwtl
push
cs
sbb
sbb
inc
push
cmp
pop
mov
pop
les
hlt
push
out
mov
inc
popf
sbb
add
xor
mov
dec
cli
dec
inc
push
push
cmp
xchg
jae
mov
sub
testl
jecxz
pop
cli
push
or
fcoms
lds
jns
push
pop
jmp
mov
push
and
inc
insl
lods
stos
pop
push
or
jmp
sub
js
lods
jne
mov
sbb
dec
iret
ja
cmp
jne
leave
sti
push
mulb
jmp
ds
mov
mov
lods
pop
xor
fisubs
and
adc
push
pusha
in
lret
leave
stos
test
sub
repz
mov
jl
gs
std
cmp
mov
test
aad
loop
incl
ljmp
pop
adc
xor
hlt
in
cld
popf
sub
dec
push
push
xchg
setg
or
sub
lods
push
imul
loop
in
mov
test
cli
add
pop
call
lods
xlat
jae
pop
xchg
mov
je
push
into
xchg
dec
imul
std
lcall
in
inc
aad
iret
cld
push
mov
repz
imul
sub
lods
lea
in
lret
jge
repnz
or
shl
mov
dec
aam
push
pop
push
lcall
inc
xchg
jae
push
xor
je
sbb
call
xchg
sub
jp
push
lock
lds
jl
decl
fdivrs
mov
inc
xchg
call
popf
fsubr
dec
daa
inc
jne
in
daa
pop
mov
xchg
cmp
mov
cs
push
push
xor
mov
pop
shll
jmp
push
jb
fcmovnbe
decl
arpl
jo
out
sub
sbb
fildl
xorb
imul
add
xchg
test
mov
imul
jp
sub
es
jmp
pop
out
push
sub
sbb
mov
scas
imul
mov
fidivs
imulb
push
push
gs
push
add
mov
lds
out
push
jnp
xchg
hlt
push
jmp
insb
sti
inc
scas
jge
sbb
je
mov
cli
push
add
es
adc
dec
jne
repnz
repz
js
test
movsl
xor
push
push
push
dec
sarb
lea
dec
fists
adc
mov
lods
leave
jge
stc
scas
insl
out
or
add
mov
cmp
push
pop
mov
stos
pop
stos
jne
adc
jl
xor
sub
lock
sub
es
sub
repnz
rcrl
loop
dec
and
loop
dec
dec
jne
fmull
sbb
cmp
je
or
xchg
push
fsub
mov
adc
fisttps
lcall
mov
aaa
insl
popf
fsubrs
fwait
punpckhwd
outsb
xor
mov
test
pop
xor
fdivrs
pop
xor
xor
push
lcall
xor
pop
out
mov
fisubrl
rcrb
pop
jl
mov
mov
xor
ljmp
jmp
or
icebp
test
sbb
mov
pop
xchg
xchg
push
push
sub
or
lret
jmp
xor
xor
fmuls
stc
popa
sbb
jbe
xorl
adc
mov
inc
inc
mov
inc
shrl
jne
xchg
insl
push
dec
aas
mov
push
sbb
ret
mov
cltd
insl
push
sub
sbb
pop
insb
hlt
hlt
pop
add
cmpl
sub
push
adc
cmp
inc
scas
inc
wrmsr
jo
mov
lcall
std
imul
push
jmp
pop
loop,pn
dec
lahf
dec
scas
push
ss
out
mov
mov
stos
cld
dec
jbe
out
mov
pop
pop
mov
cmp
fs
jno
subb
xor
pop
mov
pusha
fisubl
push
scas
je
lahf
loopne
lock
insb
mov
mov
jo
je
jbe
jp
pushf
mov
jo
lahf
pusha
pop
pushf
les
out
mov
movsb
push
scas
mov
mov
cmp
pushf
shrb
stc
lods
sbb
stos
cld
lods
jbe
out
mov
mov
scas
les
jbe
dec
popf
popf
push
test
les
enter
lahf
shrb
lods
mov
xchg
xor
or
rorb
mov
scas
xorb
and
jl
cmp
int3
jl
cld
xorb
das
mov
mov
nop
pushf
xchg
test
inc
jne
cmp
in
stc
data16
mov
nop
xchg
xchg
cmp
rsqrtps
stos
push
daa
or
add
push
lret
jbe
or
fwait
xor
loop
jne
lahf
xchg
ret
mov
cld
xchg
clc
cmp
add
rclb
lea
push
sub
jmp
shlb
out
mov
shl
or
aaa
aam
push
dec
jp
movswl
jb
or
push
enter
cwtl
je
ljmp
mov
push
popf
xor
outsb
cli
hlt
mov
jo
leave
test
jne
aas
or
add
pop
mov
add
push
dec
lods
xchg
fidivl
out
xchg
dec
lcall
movsb
icebp
sub
and
mov
hlt
xchg
and
inc
mov
xchg
push
int3
jle
scas
mov
xchg
sbb
rol
or
fcomp
mov
fsts
xor
push
mov
jge
adc
pop
stos
jne
mov
pushf
mov
sub
shrl
fwait
inc
xchg
pop
scas
lret
cld
adc
dec
add
xchg
outsl
icebp
sbb
fst
inc
sbb
fdiv
mov
addr16
icebp
push
ficompl
mov
mov
inc
movsl
mov
or
subl
adc
inc
cmc
inc
push
or
aam
stos
out
jp
enter
out
mov
cltd
ljmp
stc
shlb
inc
sub
sub
mov
sti
inc
fwait
sbbl
icebp
adc
lret
call
and
sub
and
sub
sti
fidivs
add
lret
lock
xchg
das
ret
xor
inc
mov
call
sbb
xchg
ret
sub
cltd
cld
or
repz
test
mov
dec
inc
push
add
repnz
inc
movb
pop
mulb
out
fdivrs
call
mov
mov
dec
aaa
aad
push
mov
push
mov
jecxz
inc
fisttps
mov
xor
in
mov
cmp
jl
cmp
sarl
sbb
int3
shlb
sub
jnp
add
iret
fsubr
add
mov
inc
jns
jl
inc
or
add
rcrb
shlb
movsb
popa
pushf
js
jp
or
jl
stos
adc
mov
stos
and
call
sub
pop
daa
cmpsl
xchg
scas
out
ss
daa
scas
mov
jns
push
lea
out
out
sbb
mov
mov
ret
xor
and
push
pop
xor
jge
dec
jecxz
sub
xor
adc
xchg
std
sub
test
adc
sbb
mov
add
js
push
dec
jb
pop
mov
aaa
push
jb
push
in
popa
outsl
ret
addb
fs
ret
cmp
ja
outsb
jno
sub
mov
dec
stos
adc
dec
movsb
jge
mov
insl
push
mov
mov
cmp
push
lods
and
inc
aas
add
push
je
sbb
jbe
mov
adc
leave
xchg
jne
clc
mov
cli
int
aaa
or
mov
mov
add
shrl
add
mov
mov
inc
cmp
es
or
sub
lock
lret
dec
jecxz
push
test
mov
dec
xchg
jne
lods
mov
mov
mov
or
jecxz
std
mov
or
cmpl
xchg
inc
insl
mov
or
adc
lret
in
test
out
push
jg
mov
fildll
push
push
out
mov
andl
mov
test
iret
lds
hlt
faddl
out
mov
iret
push
and
cli
call
mov
sbb
sub
fisttps
shll
add
push
push
mov
in
mov
dec
mov
scas
dec
fisttpl
mov
lods
cs
sbb
outsb
cmp
jnp
mov
in
mov
aas
xor
xlat
or
fidivl
test
jl
dec
arpl
mov
inc
cltd
sub
sbb
push
dec
dec
imulb
fidivl
add
mov
aaa
add
sub
imul
out
pop
mov
scas
push
push
cwtl
push
jo
mov
cmp
add
mov
inc
add
add
xor
sbb
inc
push
mov
call
cmp
push
pop
je
test
xchg
cld
push
movsl
adc
std
andl
into
push
push
ds
pop
push
pushf
cmpl
inc
lock
stos
fmull
cmp
xor
cmp
lret
lahf
cwtl
mov
pop
stos
sub
cli
cltd
fimuls
call
and
mov
movsb
cmp
out
aaa
movsl
aas
sahf
popa
cld
ljmp
push
lret
shlb
xor
jae
sbb
jge
push
lea
hlt
decl
call
movsb
or
mov
and
repnz
jbe
push
test
dec
xchg
cli
call
mov
cld
test
xchg
jp
fimull
xor
mov
mov
fwait
cmp
push
imul
arpl
pop
jae
js
mov
in
popa
pop
mov
ss
add
fdivs
and
xor
mov
xor
jnp,pt
je
int3
cmp
sub
shll
and
jmp
test
pop
or
push
les
cmp
popa
ja
push
imul
rolb
imul
fisubrl
js
sbb
rsm
pop
mov
and
xor
jle
cmp
setae
sbb
inc
jle
jne
cmp
and
mov
push
movsl
sahf
stos
xor
dec
mov
mov
dec
inc
xchg
and
in
stos
fisubl
call
ret
daa
rorl
rcll
cmc
xchg
dec
hlt
negl
mov
stos
push
mov
sbb
call
cmpsb
cmp
push
mov
xchg
cmp
cltd
shll
stos
dec
jle
test
daa
stos
fadds
es
cltd
test
xchg
stos
pop
out
inc
lods
cmc
push
pop
scas
cld
sub
mov
call
inc
dec
scas
ss
cmp
inc
mov
and
cltd
loopne
or
ret
cmp
xchg
sbb
pop
shlb
sbb
in
into
pop
adc
out
out
mov
dec
arpl
mov
jmp
pushf
test
call
mov
cmp
out
sub
cmp
sub
pop
into
push
mov
inc
pop
mov
inc
vpshad
sti
jbe
fwait
xor
or
pop
inc
sub
cmp
std
cmc
inc
add
shrb
lock
je
lock
pushf
push
push
pop
call
in
dec
jmp
lret
inc
and
xchg
mov
pop
xchg
stos
jno
mov
inc
xchg
xor
pop
push
mov
cmp
inc
xchg
sti
cmc
inc
scas
push
test
or
ret
int3
jg
into
sub
sahf
data16
scas
pop
or
out
mov
sbb
insl
pop
into
xor
push
or
js
jge
jle
mov
cld
adc
pop
pop
rorl
mov
sarl
test
or
call
pop
inc
jg
clc
or
loope
push
add
dec
inc
cs
mov
or
repnz
xchg
cmp
inc
adc
je
push
inc
jmp
notl
enter
add
ror
cmc
cmp
jns
lret
inc
cmc
push
dec
pushf
adc
mov
mov
loope
sahf
adc
pushf
cmpsl
inc
or
lock
xor
ss
xorb
xchg
adc
or
and
or
cmp
jne
cltd
imul
jg
push
mov
jb
mov
mov
mov
inc
push
iret
cmp
repz
cld
sub
jle
push
sub
add
je
dec
aas
sbb
sbb
push
xor
cltd
xor
or
push
lods
aaa
je
inc
cmp
in
mov
into
fldenv
dec
jb
mov
mov
adc
ds
rcrb
inc
aam
or
test
ljmp
adc
sub
jl
sbb
mov
push
fdivs
dec
sar
lods
inc
sbb
xor
adc
adc
mov
dec
into
xor
or
inc
pop
imul
es
or
arpl
test
pusha
jge
ret
add
and
fwait
push
imul
inc
es
push
lahf
test
mov
lock
sub
or
cmp
sub
call
adc
push
ss
cmp
roll
loop
clc
je
xorl
jne
pop
repnz
mov
or
pop
inc
and
inc
sbb
xchg
dec
dec
push
adc
sbb
sub
jl
lret
jb
and
jmp
push
push
rep
xchg
and
loope
out
xlat
enter
jns
cmp
jge
push
std
je
ja
divl
mov
adc
mov
call
fbld
mov
rcrl
push
push
call
xchg
push
popa
pop
sbb
out
in
jo
cmc
inc
sub
stc
adc
xor
jmp
cld
mov
test
xchg
sbb
add
sub
xchg
aas
push
stc
imul
aas
daa
push
pop
inc
add
cmp
ja
push
jbe
mov
pop
pusha
mov
mov
cmp
das
xor
dec
pop
pusha
adc
xchg
stc
inc
adc
adc
sbb
call
mov
cmpsb
sbb
mov
test
out
insl
mov
and
dec
movb
cwtl
das
sahf
lahf
fcomps
dec
adc
cwtl
jb
lods
cli
cmp
aaa
cmpsb
loop
movsb
dec
lret
fistps
inc
shrd
ss
cwtl
negb
mov
cs
outsl
loopne
or
lods
stos
inc
pop
mov
sub
mov
test
iret
insb
ds
cmp
inc
lods
push
lcall
adc
jne
lods
adc
jno
xchg
shlb
jp
aad
lods
xor
shrb
dec
insl
testl
push
loopne
rol
jl
jle
je
sbb
or
jae
xor
shlb
mov
pop
or
push
ds
jb
arpl
insb
pop
jmp
sbb
test
sub
sub
cmp
mov
lret
inc
in
mov
mov
sahf
mov
and
and
lods
and
sub
out
xchg
lods
pop
ret
mov
lahf
jmp
cli
adc
xchg
outsb
hlt
push
test
add
pop
mov
cmp
lret
ret
lahf
adc
jecxz
mov
out
mov
lcall
inc
push
daa
outsb
aaa
xchg
or
push
xchg
vmread
ja
pop
xor
in
dec
ficoml
add
add
push
call
or
push
lcall
mov
sar
int
add
lea
out
push
fdivr
cli
push
inc
cmp
ja
shlb
hlt
push
push
repz
out
push
enter
sub
dec
mov
adc
xchg
pop
test
pop
cmc
mov
rolb
mov
sub
movsb
jmp
jne
xchg
dec
push
stos
test
push
shll
or
sub
pop
sbb
sbb
adc
push
sub
nop
jl
sub
add
mov
test
jne
add
push
jns
lds
lcall
and
mov
jg
call
cli
aas
inc
inc
push
fimull
cmc
adc
aaa
push
test
imul
inc
fldz
fdivr
cmp
jge
lahf
sbb
xchg
pop
cmp
outsb
cmpsb
loope
in
mov
sar
mov
outsb
or
fisubl
sbb
inc
xchg
js
inc
dec
icebp
hlt
lods
lcall
push
lods
add
push
daa
je
xor
jno
add
lahf
test
leave
repz
jns
lahf
add
adc
fcmovb
sbb
pop
mov
add
jns
adc
cmp
inc
ss
cmp
out
lods
ret
testb
cmp
or
adc
subl
mov
ds
jne
adc
push
dec
mov
idivb
arpl
in
add
stos
jne
and
repz
aaa
push
pop
pop
ficomps
sbb
push
jmp
jo
ficompl
je
ficompl
or
dec
mov
sbb
cmp
fidivs
sti
rcrl
mov
aad
pop
loope
loope
sbb
push
dec
lods
aam
mov
je
xlat
repz
lret
push
inc
test
lcall
lret
cmp
sbb
mov
hlt
mov
rorb
in
cmp
adc
pop
sahf
ja
push
add
scas
push
pop
cmp
push
sub
add
lock
pop
pop
cld
pop
inc
push
sbb
push
cli
mov
stc
call
shl
stc
or
cmc
stos
in
popf
out
out
test
push
add
je
leave
es
xchg
jb
push
int
sub
mov
push
lret
fs
pop
add
dec
mov
adc
cli
addr16
mov
je
loope
adc
cwtl
or
dec
orb
sub
ljmp
dec
ret
lods
roll
jnp
sub
test
sub
call
push
pop
arpl
xchg
mov
xchg
dec
pop
xchg
or
cmp
stos
push
lret
jne
sub
pop
pushf
push
add
dec
jae
lea
sub
pop
and
out
sub
sub
or
aam
cmp
hlt
mov
add
test
ret
push
pop
lea
push
dec
fwait
jne
dec
and
ret
sub
push
pop
dec
or
lods
popa
cmp
pop
add
ds
jbe
shl
adc
lock
int
idiv
imulb
scas
pop
xlat
je
testl
xchg
or
sub
comiss
fnstcw
outsl
xchg
fadd
inc
ficomps
icebp
fstpl
push
mov
pop
or
mov
sahf
pop
or
mov
sub
fcomp
test
ljmp
inc
shll
or
cmpsl
dec
sbb
or
sbb
gs
pop
insb
test
pslld
int3
shlb
lcall
mov
xor
or
dec
pop
cmp
sahf
repz
repz
std
ret
aam
push
cwtl
sbbl
addr16
sbb
mov
mov
shlb
inc
pop
cs
jmp
inc
cld
lahf
jo
xor
jo
inc
add
daa
fwait
sub
sbb
pop
push
pop
jp
sbb
cmp
data16
xchg
jg
ret
sub
out
adc
lcall
mov
sub
mov
push
lods
jmp
and
inc
sub
aad
xlat
mov
xchg
idivl
inc
adc
sbb
cwtl
jne
dec
shlb
mov
pop
cmpsl
xor
jg
adc
nop
dec
and
add
lock
outsb
ret
or
incb
or
sub
aaa
xchg
je
inc
test
inc
negb
cmp
jmp
pop
pushf
or
dec
cmp
notl
push
pop
adc
mov
pop
pop
pushf
cmpsl
adcl
addr16
and
adc
and
or
pop
popa
inc
xchg
rorl
jl
sar
aam
adc
ror
out
loope
inc
aam
shlb
mov
push
add
push
outsl
repnz
sti
push
in
cmc
push
fildll
sbb
dec
push
clc
mov
jmp
cmc
xor
or
sahf
stos
in
out
out
mov
sbb
in
dec
or
sub
xchg
mov
aaa
call
adc
jle
call
mov
or
hlt
pop
inc
subl
dec
ds
pop
inc
iret
jmp
cmp
and
lret
ret
incl
xor
mov
jne
test
xchg
fcoml
mov
sub
jecxz
inc
inc
push
out
mov
cltd
inc
adc
in
pushf
test
xchg
push
or
adc
call
sub
fwait
inc
xor
jnp
je
inc
push
call
or
jb
mov
cli
decb
push
cli
mov
xchg
leave
mov
push
push
inc
xor
mov
sbb
imul
pop
and
cli
jns
sbb
into
or
push
adc
movsb
int
sub
mov
jp
pop
mov
imul
cmp
mov
in
sbb
pusha
notl
inc
aaa
mov
lahf
ficoms
add
lea
xor
jbe
scas
jno
jb
jae
mov
xor
aad
add
bound
push
mov
mov
sbbb
xchg
int3
push
js
jmp
add
ja
fisttps
push
pop
movsl
jne
and
fcom
jno
jne
sti
add
out
mov
or
decb
add
dec
cmp
cmp
cmp
cmp
inc
sbb
or
sub
add
sti
fstpl
cmp
adc
xor
mov
mov
cmc
cmp
lods
pop
pop
inc
adc
or
inc
divb
cmp
clc
sbb
or
loope
jle
sahf
push
add
cld
sbb
test
mov
testb
cmp
mov
xlat
rcl
call
out
mov
movb
mov
std
and
hlt
or
dec
jmp
ret
fsubl
xor
ret
cmp
mov
into
sub
xchg
lea
scas
lock
xor
lret
and
push
mov
push
fdivl
es
jne
in
shrb
sar
add
ljmp
jp
mov
daa
and
add
push
sbb
mov
cmc
cli
push
cmp
call
mulb
dec
xchg
dec
lds
icebp
mov
and
imul
cld
pop
pop
add
sub
mov
add
push
pop
test
aaa
aad
out
aaa
shll
mov
or
cmp
sub
sbb
inc
filds
movsl
sbb
push
fbld
ljmp
mov
call
movsb
in
test
mov
test
mov
or
movsl
xchg
push
test
mov
test
mov
sbb
xchg
adc
imul
push
pop
movsb
xor
and
and
mov
add
push
faddl
xchg
enter
jp
push
cmp
ret
sbb
insb
cli
inc
arpl
pop
ljmp
in
pop
shll
sbb
js
ficoml
mov
movsl
test
jbe
fdivl
sbb
hlt
xchg
or
stos
std
jns
inc
in
and
stc
clc
jbe
out
push
mov
fdivp
into
scas
scas
or
jns
movsb
ds
and
mov
loop
or
cmp
sub
out
scas
inc
or
pop
add
jmp
aam
adc
push
jl
imul
loop
out
cmp
shr
xor
cmp
push
adc
das
lea
mov
add
aad
cmp
rolb
push
push
inc
adc
mov
dec
add
push
scas
xor
fstl
lock
pop
mov
push
stos
cmp
call
mov
sbb
lods
adc
test
jb
shlb
das
adc
dec
jbe
call
push
cltd
jb
lock
test
mov
lods
dec
xchg
pop
in
pop
pop
push
xor
lock
data16
and
shll
ja
adc
cmp
inc
jl
lret
lret
call
enter
clc
jmp
mov
test
adc
ret
shr
mov
xlat
jmp
or
sbb
js
add
aas
xchg
add
dec
mov
icebp
push
lods
add
or
movsb
fs
cmp
aaa
mov
rcll
xor
sub
cmpsb
cmp
and
add
add
inc
adc
cs
adc
insb
loopne
in
nop
call
cmp
cld
stos
and
clc
xchg
scas
xor
and
lcall
scas
jno
mov
cmc
lods
je
jnp
stos
inc
lret
dec
or
add
inc
scas
push
inc
stos
xor
int3
cli
lcall
es
and
das
sub
std
fisttps
icebp
inc
mov
pop
divl
fbld
adcb
add
lods
call
sbb
test
mov
aad
sub
pop
call
and
stos
xor
mov
inc
iret
and
dec
sbb
inc
pushl
sbb
xor
stos
pop
pushf
cmp
jecxz
shll
inc
push
mov
and
fwait
rolb
adc
push
push
stos
cmp
xchg
lcall
fistl
and
andl
add
call
out
xor
idiv
inc
mov
loope
das
dec
bound
jne
inc
sub
xchg
mov
or
sbbl
test
push
scas
push
add
lret
clc
daa
in
pop
xchg
pop
mov
lcall
sub
in
sub
in
loopne
jne
call
insl
mov
jb
fwait
aam
call
jmp
sub
mov
lret
mov
mov
lea
addr16
shrb
hlt
inc
icebp
push
imulb
pop
sub
sbbl
std
pop
inc
out
xor
add
pop
and
sbb
xchg
mov
stos
std
inc
call
add
push
lret
sub
dec
loop
inc
hlt
ret
jb
das
add
jae
jp
adc
aam
cmp
inc
cmp
sbb
cmp
add
push
adcb
sub
test
lret
aam
inc
loope
sbb
dec
or
ret
sub
clc
ret
das
frndint
call
fistps
lret
pop
inc
sub
xlat
movsl
xor
push
pop
and
or
add
xchg
pop
adc
dec
inc
outsl
cwtl
push
pop
imul
frstor
xchg
dec
test
cli
mov
movsl
xchg
leave
iret
ror
ja
sub
in
ret
inc
lret
xchg
push
inc
adc
pushf
out
and
cwtl
add
mov
fmuls
insb
add
mov
and
and
test
std
scas
popf
sbb
fidivl
daa
mov
xor
repnz
and
sti
movsb
cmp
push
int3
mov
js
insl
out
dec
cmp
jae
jl
jl
jmp
clc
inc
jnp
fwait
int
push
loope
push
iret
jle
push
push
push
lret
push
mov
call
out
or
sub
and
sub
call
ret
add
in
push
jecxz
add
sub
call
fadds
inc
lods
dec
push
add
mov
shr
out
inc
fdivrp
leave
xor
lcall
in
push
adc
stos
leave
push
xlat
dec
jb
mov
mov
pop
aas
aam
imul
cli
ficoml
lods
push
sub
push
daa
mov
lahf
call
stos
push
imul
inc
lock
mov
push
jg
call
mov
xchg
scas
out
add
add
mov
push
mov
call
sqrtps
mov
daa
or
adc
xchg
push
sub
mov
jo
call
jb
sub
fdivrl
and
sub
push
xchg
movsl
inc
xor
inc
ljmp
pop
sbbl
mov
xor
xchg
sbb
or
xor
daa
inc
cmc
adc
xor
mov
adc
or
or
cmp
ss
push
ljmp
call
repnz
jecxz
lret
pushf
add
inc
jmp
rorl
in
push
mov
or
sub
lock
in
or
jbe
aad
mov
sbb
rcr
or
daa
and
lret
lods
or
pop
in
mov
adc
call
dec
sub
sbb
ret
xchg
insl
aas
ss
mov
mov
xchg
stc
in
or
in
jne
sti
aas
inc
and
mov
mov
mov
mov
mov
mov
adcl
lret
subb
bound
inc
notb
xchg
dec
jle
push
push
mov
push
fsts
inc
arpl
mov
inc
daa
dec
in
jle
fs
popf
cmc
dec
jg
pusha
cmp
xor
cmp
adc
mov
sub
adc
push
mov
nop
adc
imul
xchg
outsl
or
adc
flds
and
and
and
mov
enter
sub
cmp
dec
sub
cmp
or
in
sub
lahf
jae
add
das
push
xor
stos
and
pop
shlb
fsts
pusha
mov
adc
lods
shrb
into
adc
or
sub
jnp
sub
push
lahf
dec
xchg
sub
dec
inc
mov
or
pop
mov
or
push
or
hlt
and
sbb
daa
sahf
adc
mov
cmp
jo
push
sbb
adc
sbb
push
or
cmp
in
stos
push
cmp
jbe
leave
xchg
arpl
inc
or
sbb
push
movsl
add
add
icebp
rcll
mov
pop
sti
mov
aaa
daa
imulb
jne
add
bound
push
loope
pop
bound
sahf
testl
data16
test
insb
inc
incl
mov
inc
jnp
sub
call
jb
push
pusha
adc
and
jae
nop
enter
movsl
sbb
push
ja
xchg
mov
imul
fucomip
mov
pop
sbb
out
lret
lods
sarl
mov
push
inc
aam
mov
and
xchg
in
sbb
push
imul
bnd
imul
and
pusha
aaa
or
xor
cmpsb
sub
push
icebp
push
ss
cli
adc
push
es
call
bound
jne
call
adc
fwait
cs
xor
aaa
icebp
cmp
inc
stos
xorl
inc
or
cmp
xchg
add
cmp
inc
aad
repz
and
jle,pn
push
call
jmp
ss
or
mov
imul
sub
inc
push
ljmp
lock
fistps
and
outsb
aam
lods
fildll
mov
loop
rcrl
rclb
cmc
jp
out
scas
adc
xor
lret
ja
sbb
enter
sub
outsl
push
out
repz
ljmp
pop
movsb
call
xchg
push
inc
jne
lods
jecxz
jne
hlt
dec
dec
sub
xchg
push
pusha
cmp
inc
jp
pop
add
test
cld
mov
test
and
mov
aad
fdivrl
rolb
mov
test
xchg
add
sub
pop
sub
aam
push
je
lahf
bound
into
incb
mov
loope
bound
lret
push
push
mov
push
loope
sbb
scas
test
sub
sbb
xor
ficoms
push
sbb
sub
addr16
lock
divb
incb
fwait
sub
push
mov
mov
aaa
mov
cwtl
sub
outsb
cmp
testl
loope
jb
loopne
jb
xchg
add
inc
ficoms
push
lods
call
or
jge
shl
xlat
inc
xchg
push
rcrb
lahf
adc
jge
call
aad
lods
mov
xchg
shl
cmp
pop
push
es
push
mov
mov
xchg
jno
xchg
jl
inc
sbb
xlat
jb
aam
mulb
ds
call
lret
adc
pusha
aaa
add
inc
mov
jmp
test
stos
and
adc
fdivl
into
outsb
and
test
dec
adc
out
lcall
jle
inc
call
test
incl
inc
fwait
inc
loop
sub
adc
clc
lods
inc
out
pop
int
xor
fs
fstpl
push
cmp
nop
adc
cld
jnp
test
sbb
out
dec
mov
push
loop
adc
sbb
jae
cwtl
pop
mov
jae
addr16
jne
call
imul
sub
sahf
out
js
sbb
or
mov
ja
popa
cmpsb
addr16
jl
xchg
ret
push
inc
sub
call
aam
lret
jl
push
rorb
or
xor
call
es
push
lahf
xchg
push
add
shll
call
pushf
ljmp
test
mov
adc
mov
movsb
popf
pop
add
cmp
add
std
add
std
add
inc
mov
adc
inc
cs
dec
cmp
inc
xsha1
cmpsb
or
int3
inc
xor
inc
cmp
pop
or
cmc
lret
add
out
pop
loope
popa
cmp
cld
add
mov
ret
pop
imul
push
jmp
cmp
repz
cmp
dec
xchg
push
jl
leave
mov
movsb
jg
outsl
jecxz
mov
mov
sti
push
addr16
mov
add
divb
insl
or
ss
cld
loopne
mov
adcl
dec
mov
sub
ss
or
fcoms
jp
or
mov
lea
mov
daa
push
lahf
pop
ljmp
jne
in
dec
sbb
pushf
daa
push
add
sti
pop
add
cmp
mov
inc
cli
lcall
add
add
lea
stos
movl
aaa
test
cmp
dec
cmp
add
out
xchg
leave
sub
repz
lock
lea
push
add
cmp
sub
or
pop
ljmp
pop
inc
or
setb
adc
jmp
pushf
jg
ljmp
rcrb
fwait
pushl
adc
lock
insl
pop
lods
push
push
negl
or
scas
mov
inc
cmpsb
cmp
mov
lods
movsb
jne
jno
je
jb
adc
insb
leave
outsb
or
repz
sub
push
dec
xchg
push
lods
lock
add
insb
push
push
sbb
xor
mov
adc
loopne
out
outsl
push
bnd
cmp
subl
lea
into
lret
cmp
pop
popa
lods
mov
jmp
mov
stc
jb
jmp
or
dec
lods
iret
mov
xrelease
sub
pop
mov
dec
cli
jnp
out
push
call
inc
jp
aas
mov
jmp
sbb
in
dec
mov
mov
iret
push
xchg
scas
leave
or
push
sarb
push
jne
cld
mov
imul
jno
jne
inc
lcall
pop
je
xor
xor
push
push
shll
xchg
push
and
icebp
push
in
push
mov
jo
cmp
rorl
sub
jae
jp
cmp
lcall
adc
jmp
inc
inc
ja
adc
pop
daa
xchg
int3
loop
xor
lcall
nop
xor
mov
cmpsl
inc
mov
fwait
pusha
inc
ljmp
ret
repz
jg
les
or
test
push
jmp
fwait
jmp
mov
je
cmp
adc
scas
sbb
pop
add
add
jne
jmp
fimull
sub
fwait
dec
stc
imul
add
pop
mov
test
out
or
jle
jnp
jl
mov
push
mov
mov
push
cs
mov
push
test
and
xor
test
push
dec
notb
add
cmp
cs
dec
test
xchg
mov
stc
into
cmp
insl
adc
ret
imul
jae
fldt
inc
adc
addr16
cmpsb
pop
xor
insb
dec
mov
adc
outsb
aaa
movsl
or
mov
pop
nop
jns,pn
inc
inc
cs
xor
push
cmp
adc
adc
pop
mov
mov
cmp
aad
addr16
jbe,pn
int
xchg
dec
mov
adc
pop
sub
inc
shll
adc
clc
loope
dec
cs
adc
cmp
and
sub
xchg
mov
aaa
call
dec
cs
xchg
xlat
mov
cwtl
es
jecxz
pop
movsl
dec
mov
add
test
out
jp
xchg
inc
xlat
cmp
or
xor
sbb
pop
rcr
outsb
adc
fidivs
push
pusha
mov
pop
fcoml
sub
jne
pop
push
pop
push
pop
nop
jne
shrl
pop
or
push
sbb
or
push
pop
out
sbb
mov
push
fwait
jmp
inc
xor
icebp
adc
in
or
xor
je
mov
xor
mov
lcall
and
adc
or
in
in
push
jp
push
sub
xlat
push
and
daa
enter
fists
aaa
push
movsb
enter
pop
lahf
inc
cs
xor
adc
mov
push
push
push
stos
mov
sub
and
scas
and
jns
mov
push
lea
lret
cmp
or
faddl
push
cli
push
xorb
or
fisttpl
bound
adc
add
inc
push
jbe
jno
fsubr
pop
or
loope
push
ja
aam
xor
jmp
cmp
and
xchg
js
xchg
or
inc
sub
stos
add
mov
ja
pshufw
push
call
adc
sbb
mov
iret
and
stos
mov
inc
outsl
fwait
cwtl
in
adc
scas
lret
xchg
jp
dec
adc
icebp
add
nop
push
add
and
call
xor
cs
inc
mov
push
and
into
hlt
rcll
fs
jecxz
and
inc
adc
dec
add
movsl
add
rcrb
cld
sub
add
inc
fcoml
cmp
int3
in
jns
push
inc
cmc
call
jns
adc
out
dec
lret
sbb
es
div
daa
xchg
mov
push
daa
cltd
out
sbb
clc
orl
sbb
nop
xchg
out
sbb
jl
sub
stos
out
xchg
xor
cli
aam
push
jo
pop
mov
cld
fmull
jp
test
ds
lods
std
les
in
mov
ja
outsl
cwtl
pop
mov
sbb
scas
xor
push
rorl
call
aam
inc
sub
call
xchg
or
or
mov
cmp
in
jbe
cmpsb
sbb
cmp
scas
sbb
rcrb
push
sbb
ja
gs
pop
popf
sub
mov
xchg
pop
aas
inc
enter
jnp
rorb
adc
push
push
push
cli
xor
or
cs
adc
xchg
and
std
sub
xchg
or
sub
cmp
or
stos
ss
xchg
pop
inc
movsl
icebp
repz
lret
sub
not
out
xor
or
sub
iret
sbb
popf
mov
and
push
lea
cs
clc
and
cmp
push
xchg
xchg
ret
cli
dec
and
push
in
repz
and
cwtl
testl
inc
pop
aad
nopl
nop
add
mov
jl
icebp
mov
daa
mov
mov
jns
mov
sub
xor
pop
mov
mov
nop
pop
int
mov
push
dec
std
sahf
pop
add
jbe
cmp
ljmp
jne
xchg
inc
adc
pop
push
jo
call
mov
test
es
loope
adc
nop
push
aaa
and
pop
cmp
imulb
push
and
xchg
inc
push
ja
push
add
dec
push
stos
mov
jmp
jp
add
jns
push
in
mov
cmp
arpl
std
inc
lods
add
push
sbb
or
push
or
lret
push
xor
add
push
or
pusha
mov
hlt
lods
pushf
mov
or
sbb
and
stc
push
outsl
enter
add
xchg
test
scas
je
lahf
sbb
movsb
pushf
mov
call
mov
mov
add
fists
loope
orb
push
push
jp
and
push
cltd
and
andl
mov
xchg
lods
fists
mov
pop
int
daa
inc
cs
cmp
mov
mov
cmpsl
fwait
mov
daa
loope
jg
inc
jmp
js
xlat
data16
cmc
rorb
mov
lcall
enter
pop
sbb
call
sub
call
daa
test
inc
inc
repnz
fcoms
test
std
sbb
insl
inc
flds
inc
sbb
cmp
xchg
sbb
scas
add
push
push
roll
add
test
add
mov
loopne
xor
stc
daa
and
shr
pop
sbb
or
mov
mov
nop
jbe
out
test
je
test
dec
dec
rolb
in
mov
out
jl
in
or
cmp
adc
lea
jmp
lods
cmpsl
inc
or
mov
add
arpl
jne
lds
cld
dec
decl
test
jb
add
outsl
sub
mov
ja
repz
adc
and
push
loope
aad
push
dec
repz
fmul
jp
and
movl
or
rorl
gs
and
fwait
in
scas
sub
div
jbe
fwait
and
lahf
mov
sbb
addr16
adc
repz
mov
test
lea
jmp
cwtl
xchg
test
xor
pusha
pop
pop
lods
and
jnp
push
push
imul
sarl
inc
js
daa
xchg
push
in
leave
cmpsl
mov
lock
add
add
addl
sbb
loope
mov
jp
into
push
mov
pop
push
ret
insl
cld
fwait
xchg
push
lret
xchg
mov
pop
pop
gs
mov
jmp
sub
leave
adc
push
cmp
pushf
cwtl
lcall
in
sti
sub
insb
and
xor
inc
dec
sub
clc
cmp
je
ja
dec
out
test
push
aas
sub
cwtl
mov
enter
cld
cld
popa
std
rol
sub
aam
cmp
outsl
cmp
int
lods
sub
dec
jge
mov
mov
push
mov
add
dec
fcoms
ljmp
inc
pop
xor
inc
push
lods
pop
call
movsb
jmp
pop
inc
cld
dec
mov
mov
add
push
ds
and
sub
lea
mov
loope
pop
push
sbb
hlt
out
mov
decl
xchg
loopne
sub
cmp
lods
ud1
pcmpeqw
popf
cs
das
sarl
xchg
clc
pop
mov
ja
js
mov
fmull
ret
lret
xor
mov
push
lea
loopne
xchg
fcoml
sub
pushf
dec
jne
bnd
daa
int
xor
lods
cli
xor
dec
mov
adc
push
xchg
test
fwait
push
push
adc
fcom
mov
cli
insl
jne
adc
outsb
jns
cwtl
sub
outsl
sbb
cld
ljmp
push
movsb
mov
jmp
fbstp
lods
fldcw
adc
lret
add
imul
cmp
push
popa
out
adc
cmp
test
cs
idivl
mov
js
or
in
fldt
pop
and
xchg
and
pop
nop
lods
push
sbb
pop
daa
and
call
xor
mov
and
cltd
inc
out
popa
test
pop
mov
xchg
mov
test
mov
inc
jl
adc
push
call
mov
push
call
or
sub
or
cmp
and
ret
cmpsb
dec
into
add
inc
int3
or
aaa
xchg
and
lea
mov
adcb
rorb
cli
sub
push
dec
stos
push
or
inc
clc
cmp
icebp
test
xchg
ret
scas
es
sub
push
pop
add
jnp
mov
out
pop
rorl
daa
jbe
xchg
push
test
fwait
test
sarb
mov
je
xchg
mov
clc
mov
cmpb
pop
les
xchg
scas
inc
dec
fsubrp
jmp
sbb
cltd
sbb
xchg
push
xchg
sub
outsb
push
or
xor
mov
jno
in
inc
adc
movsl
mov
xchg
scas
dec
mov
push
inc
add
dec
ja
std
sbb
and
roll
sub
sub
xor
cwtl
hlt
xchg
insb
idivb
clc
mov
pop
pop
bswap
cmp
fdivl
or
sahf
mov
je
push
mov
push
adc
push
push
cld
cmp
xchg
jne
call
cmp
dec
xor
paddusw
lret
xchg
or
loope
cmp
inc
xor
push
lods
add
fdivl
test
jbe
pusha
adc
mov
inc
mov
push
imull
loop
jnp
outsb
xchg
lea
xchg
shr
hlt
jl
pop
imul
out
movsl
cmp
adcb
cmp
adc
icebp
push
mov
push
imul
testb
mov
jae
mov
mov
lods
or
mov
push
push
loope
outsl
mov
pop
sbb
jno
and
stos
push
push
xchg
ja
push
in
imul
inc
in
add
push
mov
or
inc
push
ret
enter
jae
or
sbb
rcrl
sbb
push
adc
push
sub
ss
test
mov
dec
mov
test
xchg
aas
push
mov
das
ret
jno
lahf
xor
sbb
adc
add
mov
pop
dec
jns
sbb
roll
adc
mov
adc
fdivrs
hlt
mov
imul
cld
mov
inc
addr16
out
lcall
flds
enter
inc
sbb
arpl
fbstp
rclb
aam
je
dec
dec
ja
out
scas
mov
shl
sub
mov
lea
inc
test
cmpsl
mov
lea
jg
shl
add
cltd
jl
gs
add
ret
jb
subb
sub
adc
mov
insl
das
jo
xchg
xchg
je
lahf
mov
call
push
aam
subl
sbb
mov
test
iret
sub
loop
jbe
stos
and
jbe
fldt
mov
test
mov
lcall
mov
dec
rcll
mov
mov
stos
cmp
mov
std
cwtl
pushf
scas
fs
imul
inc
lret
stos
sub
call
insb
imul
add
movsb
inc
fwait
xor
cmp
ret
push
call
or
push
cwtl
cmp
mov
mov
enter
xchg
mov
rolb
add
popf
mov
cltd
fsubs
insl
add
xchg
aad
sbb
jecxz
mov
mov
dec
push
push
push
test
fidivs
fwait
imul
inc
adc
mov
es
cmpl
stos
imul
repz
test
adc
adc
jge
cmp
dec
mov
ss
std
fucomp
cmp
xor
test
push
xchg
push
pusha
ret
int
cli
push
int3
int3
shrl
ljmp
jge
cs
mov
push
das
cli
aam
fdiv
scas
mov
in
sbb
lcall
lods
cld
push
aam
mov
lcall
out
add
adc
loopne
pop
jl
mov
mov
ja
dec
fsubrs
pop
and
jb
push
mov
inc
dec
lret
stos
jae
in
jmp
pusha
test
inc
bnd
mov
inc
mov
jmp
inc
add
lret
pop
adc
ret
fsubs
popf
pop
sub
stos
lods
add
mov
inc
cmp
push
or
cmp
addr16
dec
js
call
sbb
add
sbb
push
fisttps
inc
testl
cmpb
arpl
cwtl
pop
add
dec
sub
popa
jnp
xchg
fs
decb
scas
or
mov
sub
je
jecxz
xchg
pop
dec
aaa
inc
nop
int3
adc
or
out
sbb
jmp
loop
insl
aad
shlb
iret
imul
xor
test
xor
mov
out
lods
or
xchg
sub
cld
jmp
cmpsb
mov
rolb
sbb
add
pusha
cmp
das
dec
mov
mov
sbb
mov
xchg
jne
outsb
movsb
aaa
icebp
pop
jl
inc
mov
in
push
sub
push
in
sbb
stc
xchg
lods
aaa
call
adc
fcompl
and
jns
out
in
mov
adc
add
jp
xor
in
pop
and
jp
and
lahf
in
xchg
cmp
repz
push
and
mov
lods
pop
clc
pop
dec
setb
call
pushf
and
dec
xor
adc
dec
je
enter
or
mov
nop
aaa
test
dec
ljmp
aad
add
repz
fdivl
into
addl
dec
imulb
jo
or
out
movl
fimull
push
adc
mov
xchg
scas
inc
cwtl
mov
xor
pop
js
aaa
gs
and
mov
xor
and
ja
mov
push
jle
push
inc
push
lods
push
test
inc
push
call
add
mov
inc
mov
callw
adc
or
push
add
inc
and
fbstp
dec
xchg
inc
aaa
push
mov
cmc
xor
imul
sub
mov
clc
adc
pop
sub
mov
mov
call
push
and
sub
iret
decl
cld
test
loope
scas
push
adc
and
xchg
push
push
xchg
rol
fucomp
mov
mov
adc
add
movsl
into
pop
insb
xor
xchg
inc
cmp
scas
add
addr16
adc
std
jl
push
pusha
in
or
inc
ret
aaa
pop
inc
pop
cli
push
rcll
ljmp
loopne
cmc
cld
jnp
jno
pop
sub
push
xchg
inc
jl
and
int
testb
or
icebp
fmul
mov
mov
add
mov
xor
pusha
nop
lods
arpl
aaa
imul
adcb
not
inc
clc
lock
push
addr16
outsl
cmp
sti
inc
adc
sahf
push
push
mov
fmull
pop
lahf
lds
rclb
mov
fs
cmc
mov
je
stc
lret
cmpsw
test
xchg
mov
mov
je
add
call
je
popf
test
das
xchg
push
test
add
stos
sbb
cs
into
rclb
fnsave
sarb
mov
je
mov
and
ret
sub
aas
inc
xor
lds
lahf
and
push
call
sbb
lds
jecxz
xor
pop
cmpsl
xchg
int
and
add
test
inc
or
jg
rcll
ficoms
dec
jne
add
repz
push
or
dec
pop
xor
pop
insb
das
fbld
in
push
push
daa
popf
xchg
dec
adc
sub
mov
nop
mov
dec
out
outsl
cwtl
lods
scas
push
je
lock
or
push
lods
nop
push
sbb
cltd
adc
and
push
cmp
add
sbb
or
or
test
push
add
xlat
call
mov
cmp
arpl
xchg
push
ja
popf
shrl
add
movsl
ret
or
fimull
jne
cmp
sbb
xor
imul
arpl
and
cmp
push
sub
in
sbb
loopne
je
shlb
insb
fisttps
pop
mov
xchg
loop
inc
adc
in
mov
adc
fabs
or
push
fisubrl
in
push
xchg
fld1
icebp
lods
pop
dec
sub
ret
xlat
ret
cs
loop
orb
test
push
pop
stos
xchg
ret
sarb
test
je
roll
push
pop
and
cmpsl
mov
push
cmp
sub
je
or
mov
and
jae
scas
add
cltd
test
cmc
adc
xor
mov
sub
cltd
in
mov
rcrl
hlt
cmc
mov
or
and
cmp
ret
mov
sub
movsl
jge
add
in
and
mov
inc
pop
add
add
adc
dec
cmp
pop
sbbl
stos
scas
or
shll
sub
daa
inc
cmp
scas
lcall
add
cmp
into
call
in
jmp
cmp
inc
or
dec
mov
sahf
jg
icebp
or
div
add
leave
mov
lcall
cwtl
dec
or
iret
adc
jne
sub
pop
test
xor
sub
jmp
jl
fs
xchg
and
lcall
jmp
mov
push
out
cs
sub
push
push
daa
cld
lds
push
sbb
les
ss
inc
shl
and
arpl
movsl
jbe
inc
cmp
push
mov
add
xlat
push
xorb
push
loope
lods
pop
lods
sub
lahf
xchg
lea
movb
xor
inc
pop
adc
movsb
xchg
inc
les
movsb
cs
and
lods
jl
mov
jb
jns
movaps
push
jge
add
mov
cmp
inc
add
cli
stos
fsubrl
sub
lods
test
aad
iret
mov
push
pop
dec
adc
push
mov
clc
cmp
loopne
push
mov
jne
jl
cmp
outsl
push
inc
fdivs
lock
add
cmp
scas
pop
stc
nop
add
js
pushw
loopne
dec
cmp
pop
jae
adc
inc
mov
nop
pop
add
sarl
dec
daa
pop
lods
ret
inc
add
and
cmp
push
pushf
mov
inc
dec
mov
fnstcw
ret
clc
cmp
ror
adc
int
lahf
ret
add
inc
pop
aaa
rorl
jp
cmp
iret
xorb
jg
xor
scas
cmp
add
push
shr
cli
add
xchg
or
fidivl
adc
sbb
and
add
out
lods
xor
mov
inc
mov
push
and
in
push
sub
fs
mov
mov
or
pushf
subl
pushf
pop
mov
or
daa
jge
xor
stos
mov
inc
or
pop
je
js
fldenv
jno
and
inc
divl
inc
or
mov
ficoms
jmp
das
out
xor
sub
iret
jmp
lahf
jl
and
pop
dec
lods
xor
and
aas
cs
rcll
mov
bound
test
mov
pushl
add
or
add
ss
pop
ss
cmp
ret
ss
inc
iret
jp
lods
and
sahf
pop
sub
in
adc
notl
aaa
pslld
pushf
ret
inc
mov
mov
or
jge
aas
pop
mov
mov
mov
pushf
loope
xor
outsl
insl
shrl
jae
adc
cmovnp
dec
jae
mov
or
cmp
and
adc
call
ds
inc
fucomp
cmp
ja
jmp
test
jne
sarl
icebp
mov
dec
xor
das
lds
mov
push
mov
mov
mov
sbb
lods
and
aad
dec
mov
add
sub
jecxz
inc
xrelease
nop
add
inc
sahf
xchg
mov
stos
aas
cld
cmpsl
cmpb
mov
pop
cmpps
call
pusha
leave
lods
adc
ret
dec
data16
call
mull
mov
incl
sub
jl
dec
mov
pop
mov
mov
es
mov
icebp
cmpsl
leave
aad
bound
out
jns
ljmp
daa
mov
mov
jmp
mov
mov
lods
out
mov
lcall
test
mov
mov
jmp
lcall
and
shrd
insb
setp
mov
cmp
adc
out
inc
popa
xchg
addr16
cmpb
int
mov
inc
mov
sbb
mulb
sbb
outsb
hlt
cmp
or
mov
and
pop
mov
jecxz
lcall
push
xor
nop
verw
mov
add
inc
jb
sti
mov
mov
push
mov
outsl
or
sub
and
fstpl
call
pop
test
or
mov
lods
fucomp
js
std
inc
sub
bound
cmc
or
adc
imul
sub
hlt
pop
push
stos
insl
call
pop
add
inc
repz
cld
in
pushf
call
mov
test
xchg
inc
adcb
push
mov
push
fadd
sub
and
fsubrl
loope
xor
xor
lcall
jo
in
fldt
fiaddl
nop
call
fldcw
push
mov
bswap
push
xor
lock
jmp
and
mov
lea
mov
sub
cld
push
cmp
mov
cmc
ljmp
inc
pushf
jl
cmpsl
aaa
sub
push
jecxz
ret
adc
imul
clc
jnp
fldcw
sbb
pop
add
or
in
leave
sahf
or
out
in
lods
sub
push
daa
mov
mov
dec
cmp
or
jne
jg
sbb
mov
ret
das
xchg
mov
mov
adc
cmp
push
hlt
negl
push
xchg
mov
aaa
int
sub
xor
icebp
push
mov
insb
adc
lock
ja
pop
imul
shll
das
or
fwait
jmp
in
inc
in
lods
push
lcall
cmp
je
adc
xor
inc
stos
jne
push
fwait
and
sbb
add
int
mov
scas
mov
inc
les
sub
jne
ficoml
dec
dec
pusha
shlb
push
jecxz
mov
pusha
shl
adc
and
outsl
cli
xor
leave
addl
pop
cmp
loope
in
adc
push
lret
and
mov
outsb
inc
int
ficoms
jnp
sbb
sbb
or
pusha
out
and
in
sahf
es
sub
push
cmp
into
jmp
jae
das
pop
push
andb
pop
adcb
sub
lret
add
mov
add
cmpsb
repnz
jmp
pushf
cmp
in
fistl
sbb
adc
loope
iret
cmp
mov
test
sub
or
jae
pop
cmpsl
inc
sub
xchg
sti
xchg
adc
or
test
addr16
mov
pop
or
adc
std
cmp
xor
outsl
adc
push
xor
sbb
sahf
cld
lods
pusha
cmp
pop
scas
push
jbe
pop
sub
std
repnz
andl
test
cmp
add
lock
or
and
jnp
lret
jp,pt
or
sbb
sarb
xor
push
push
ds
jge
call
xchg
cmp
ret
push
ret
cmp
adc
sahf
jno
cmp
popa
mov
sbb
loope
mov
add
testl
pop
iret
cmc
adc
cld
or
jp
lds
cmp
inc
scas
idivl
fsincos
sbb
aad
bnd
popa
lds
lods
add
fiaddl
dec
cmp
jp
xchg
or
dec
mov
ljmp
add
call
cmp
scas
fcoms
jno
xchg
iret
mov
push
mov
ljmp
ja
stc
xchg
pop
nop
pop
mov
test
test
andl
push
out
repz
jb
iret
aas
insb
cmpsl
dec
mov
push
ja
iret
movsb
jp
test
inc
inc
sub
insl
hlt
cmpsb
push
nop
in
sbb
or
jp
insb
test
nop
and
sbb
pop
mov
int3
cltd
lods
add
pop
call
inc
mov
je
cmp
push
add
push
push
sbb
ror
inc
ss
mov
pop
adc
push
jbe
cld
xchg
icebp
adc
mov
add
out
mov
xchg
xchg
cmp
mov
adc
in
mov
mov
setnp
mov
pusha
mov
mov
jae
xchg
add
inc
mov
push
add
mov
test
xor
sbb
ret
jl
mov
pop
mov
cmp
xchg
or
insb
push
insb
imul
je
xor
pop
les
call
pushf
cmp
push
cmp
adc
divl
jae
push
lea
mov
mov
sub
mov
insb
xchg
mov
sbb
test
lods
cmp
inc
or
je
test
ret
hlt
sbb
sbb
incl
sub
inc
imul
lea
inc
pop
push
cltd
or
jnp
popl
dec
nop
stos
pop
cmp
addr16
adc
jge
cmp
sbb
test
cltd
cmc
std
cmp
sub
inc
shlb
lret
shl
out
sbb
sti
jge
outsb
stos
lea
das
mov
pop
sbb
pop
pop
sub
ret
add
ja
add
je
sub
ret
mov
mov
adc
jmp
xchg
mov
sbb
or
pop
dec
sub
out
cmp
jne
in
clc
pop
or
and
jge
pop
push
push
or
inc
mov
cld
repz
xchg
sbb
int3
xchg
loope
jmp
inc
adc
xchg
inc
in
loope
fisubrs
mov
jmp
fstps
xor
push
loope
pop
pushf
pop
lea
popa
mov
ds
jmp
ficompl
xor
or
push
cwtl
and
add
jl
pop
cmp
add
xor
push
shll
in
jb
push
sbb
cli
pop
push
pop
sahf
inc
mov
fdivrs
mov
hlt
sti
cs
push
jnp
cmpsb
mov
bound
xor
jg
sti
mov
sbb
pop
sbb
divl
mov
jmp
in
xchg
xor
xor
mov
cmp
jne
inc
mov
dec
jns
sbb
push
sub
dec
outsl
xor
stos
xchg
jo
incl
mov
pusha
sbb
ret
decb
xor
notb
ficomps
jbe
push
rorl
outsl
lock
add
inc
cmp
jb
repz
ficoms
xchg
xor
push
xchg
ja
lret
inc
xor
loope
ss
sbb
xchg
sbb
dec
ffreep
das
fildl
and
cltd
pusha
lock
daa
test
subl
sub
cmc
sub
jbe
xor
pop
mov
addr16
mov
lcall
xlat
ffree
add
in
daa
icebp
xor
movhps
cmp
mov
mov
je
cmp
pop
ss
add
cmp
call
jg
mov
jns
sub
push
ret
add
sbb
inc
mov
aaa
cmpl
mov
dec
adc
loope
insb
add
scas
inc
mov
mov
jo
mov
fbstp
push
push
inc
pop
inc
and
push
lods
add
add
push
hlt
push
and
jp
push
xchg
in
rcrl
mov
jmp
dec
in
xchg
mov
mov
adc
mov
mov
xor
dec
test
mulb
fwait
jbe
jns
push
mov
and
mov
rol
sub
adc
test
aas
xor
dec
cwtl
in
test
jl
imul
bound
and
adc
and
scas
or
inc
push
dec
call
loope
int
stos
sbb
dec
mov
sbb
fwait
inc
loopne
inc
and
loope
and
add
daa
xlat
jecxz
xor
out
icebp
mov
and
stos
sbb
push
lods
cs
or
pop
outsb
pop
push
mov
sbb
sub
loop
mov
lods
or
mov
xchg
xchg
call
out
dec
sub
test
mov
jmp
xchg
imulb
jae
outsb
in
and
repnz
cmc
sub
adc
jp
aad
in
pop
sbb
fcompl
mov
mov
lcall
push
adc
pop
icebp
and
out
aam
jnp
jns
aam
call
adc
lods
cmp
adc
test
lahf
cmp
sbb
pop
cld
jmp
ret
roll
adc
std
iret
sbb
sbbl
lret
iret
inc
fsubl
sub
jb
xor
std
movsb
jb
and
push
dec
xor
xor
xlat
xor
stc
bound
cld
dec
dec
or
fsts
pop
or
xchg
test
add
sub
push
mov
jnp
mov
mov
jecxz
pop
insb
cmp
add
jmp
mov
bound
out
pop
popf
ss
pop
inc
mov
dec
mov
ss
stc
push
lahf
imul
fdivl
pop
adc
inc
inc
mov
out
xor
fwait
das
leave
sti
and
lahf
dec
sub
xor
jge
adc
and
mov
xor
inc
jae
sbbl
cmpsl
push
mov
pop
out
jg
subl
aad
ds
or
push
xchg
movl
out
icebp
aaa
addl
adcl
std
add
adc
push
daa
mov
cmpsb
sbb
aas
push
in
inc
cs
push
and
push
lods
add
and
adc
hlt
mov
ss
imul
pop
mov
sahf
test
push
and
test
push
clc
cs
add
pop
jb
add
and
into
xchg
push
mov
sub
cmp
push
jae
and
sbb
sub
and
ret
stc
xor
pop
fwait
fs
mov
lea
adcb
mov
mov
lcall
or
jle
push
and
fcompl
inc
add
sub
bound
mov
push
mov
les
call
pop
ja
push
mov
jnp
sub
dec
orb
gs
mov
call
nop
inc
mov
jl
lock
jnp
test
xor
cmp
sete
push
out
aad
inc
je
cmpsb
mov
rclb
cmovne
mov
call
mov
insl
adc
jo
leave
sub
pushf
jbe
sti
ja
mov
jnp
sub
add
fdivrl
rcll
sbb
jmp
pop
ljmp
adc
cmp
movl
imul
sub
sub
aaa
push
push
movntps
repnz
imul
cwtl
inc
dec
test
xchg
js
and
lcall
imul
shll
xor
cmc
cmp
lods
cmp
dec
inc
pop
xchg
cmpl
adc
cmp
adc
adc
jle
into
shl
imul
adc
adc
xorb
sbb
enter
push
cli
fcomps
adc
or
pop
fimuls
jne
push
sbb
push
call
addb
jnp
push
inc
or
pop
push
in
xchg
cmp
push
cmp
or
push
mov
push
add
mov
or
arpl
ljmp
ljmp
into
push
cltd
dec
cld
test
scas
test
inc
cmp
scas
sub
out
mov
adc
pusha
cli
pop
repnz
jecxz
push
inc
cmc
inc
pop
out
lods
movl
sbb
push
in
in
cltd
mov
idivb
push
sub
xor
test
inc
xchg
fildl
cmpsl
dec
js
adc
fadds
cld
sbb
cs
insb
xor
cmp
sub
jl
pop
mov
xor
push
jl
dec
lea
jg
shrb
cs
cmp
std
push
cmp
scas
adc
mov
lahf
pusha
in
xor
stos
add
add
jo
add
add
outsb
add
xor
add
dec
add
push
add
dec
add
push
add
add
cmp
add
add
add
add
add
outsl
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
dec
add
js
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
je
add
add
add
add
cmp
add
add
add
add
add
dec
inc
add
outsl
push
add
add
add
add
add
add
add
add
push
popa
add
ja
push
jp
add
add
push
add
add
add
add
pop
outsb
add
push
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
insb
push
cmp
add
add
pop
add
ja
bound
add
jne
add
xor
add
add
add
push
add
add
dec
add
jne
add
add
inc
add
add
add
add
add
xor
add
add
add
add
add
jns
xor
ja
add
push
add
add
je
add
add
imul
add
je
jp
add
add
add
add
inc
add
add
add
add
add
jbe
add
js
add
add
add
mov
inc
lret
jb
lea
dec
xor
mov
xchg
out
jle
out
call
out
sbb
test
mov
mov
cmc
adc
in
push
sbb
cld
mov
dec
mov
adc
sub
dec
add
fs
lods
xor
inc
lea
mov
mov
jmp
shl
inc
xor
mov
cld
outsl
mov
inc
je
cmpsb
add
pop
add
lods
jle
sub
nop
jmp
mov
or
fisubrs
inc
stos
sahf
ror
ss
jns
mov
out
cld
pushf
mov
dec
movsb
cmc
lret
push
fldenv
jmp
mov
inc
mov
lods
add
loope
mov
popf
das
iret
or
dec
xchg
and
mov
xor
aaa
scas
fidivs
lret
mov
xor
aam
int3
pop
int
clc
sarl
xor
loope
add
and
insl
shrb
mov
add
adc
icebp
scas
jmp
fdivrs
inc
out
cmc
jae
add
cmp
aam
xor
std
inc
or
inc
sbb
sub
pop
sahf
out
mov
mov
in
sub
lcall
push
dec
or
xchg
jmp
inc
sub
aad
inc
add
cld
jp
pop
cli
jg
clc
jl
pop
and
mov
sahf
xchg
aad
jle
cmpl
mov
mov
fcmovne
push
mov
std
xchg
mov
xor
sbb
clc
test
test
push
lods
les
xchg
js
push
xchg
negl
pop
iret
stos
ds
hlt
inc
sahf
sbb
push
mov
std
shll
fcompl
push
cmp
jmp
adc
xchg
xlat
add
testl
xor
fisubs
push
inc
not
push
scas
or
mov
mov
aas
xchg
inc
cld
test
pop
push
call
sub
dec
mov
cmc
int
and
fsts
cmpsl
and
loope
jns
call
aas
btc
jmp
jl
cmp
adc
xchg
mov
or
cmpb
cmp
sahf
adc
testb
sub
popa
mov
ja
adc
mov
sbb
dec
cs
insb
cmp
sbb
pop
pop
xor
inc
ret
pop
aad
xor
add
fsubp
sub
scas
sbb
fwait
inc
cmc
add
rcrb
inc
cltd
iret
jmp
mov
movsl
cld
nop
xchg
fcoml
mov
mov
mov
aad
and
jge
out
dec
fwait
xchg
pushf
or
add
daa
cli
enter
lods
sbb
ss
cmp
or
stc
insl
aaa
xor
leave
dec
dec
imul
mov
test
inc
push
pop
push
std
mov
xor
out
pop
inc
test
cmp
xchg
sti
aad
push
mov
xlat
adc
test
outsl
sub
movl
loopne
out
divb
daa
in
aaa
add
stc
mov
rol
bnd
es
arpl
sbb
hlt
lahf
pop
adc
pop
mov
sbb
push
dec
cmpsb
rcl
mov
cli
pop
mov
adc
repz
mov
daa
negl
sti
std
sbb
ljmp
and
es
jnp
stc
push
cmp
mov
loope
inc
dec
jae
mov
jle
imul
in
cwtl
fldt
cld
xor
inc
je
ljmp
inc
shlb
pop
xor
std
jbe
lods
and
repz
sub
pop
mov
sub
or
xchg
xor
cmp
lahf
xor
scas
loopne
push
xchg
roll
rol
in
or
ret
jp
xor
shll
ret
mov
ror
jp
xchg
shlb
push
pop
and
in
leave
loop
aad
push
push
fcmove
sbb
insl
out
cli
rcll
dec
ret
fdivr
in
mov
add
lret
inc
mov
in
sub
pop
orl
sbb
xorb
imul
cld
test
xchg
in
dec
inc
test
or
in
sub
and
pop
add
call
xchg
out
or
push
dec
stc
in
adc
push
ds
push
scas
jnp
in
add
jbe
add
jecxz
mov
fmuls
cmp
icebp
inc
fsubp
push
call
loop
ficoms
shr
mov
push
sub
jb
add
seto
in
inc
sbb
pop
ffreep
sbb
and
arpl
jb
pop
negb
lock
and
inc
dec
outsb
push
mov
push
in
aaa
adc
xchg
mov
adc
push
adc
push
mov
or
lods
movsl
inc
pop
data16
clc
rcrl
test
sbb
test
adc
mov
adc
add
and
arpl
dec
inc
hlt
call
pushf
xchg
xor
cmp
ss
mov
icebp
shl
or
rcrb
orl
mov
dec
and
pop
cwtl
ret
outsl
sub
xchg
nop
xchg
lods
clc
aaa
nop
dec
insl
out
pop
mov
cmp
mov
pop
mov
fwait
push
push
mov
pop
fsubrp
mov
mov
xor
cmp
imull
jmp
cmp
adc
aas
mov
pop
sbb
mov
outsb
rclb
add
mov
inc
sbb
cmp
pusha
aas
hlt
aaa
dec
pushf
dec
fcomps
ljmp
std
mov
and
mov
pop
cs
mov
mov
mov
jae
pop
cmp
mov
sub
cli
clc
sub
dec
scas
icebp
adc
bswap
sti
fldcw
stos
cmp
fadds
cmp
dec
inc
push
jmp
push
dec
mov
mov
jns
aad
push
in
lret
jb
rolb
sub
aas
and
xchg
adc
jo
lock
jmp
sbb
cmc
outsb
shll
in
pop
add
out
inc
push
call
cmp
repz
lret
adc
xchg
stc
add
cmp
fisubrs
outsb
stos
cli
mov
insb
scas
push
sbb
ljmp
push
sub
add
xor
dec
adc
sbb
xor
arpl
push
testb
add
jnp
cmp
add
cmp
pop
shl
mov
mov
cld
negb
push
testb
or
cli
hlt
push
iret
inc
popa
inc
mov
sub
adc
cs
sbb
jecxz
sub
add
out
fcmovnb
inc
mov
fisttpll
adc
jmp
xor
push
insl
pop
arpl
vlddqu
sbb
leave
sub
add
sbb
sbb
pop
cld
mov
jl
xchg
mov
hlt
cs
bound
or
or
inc
orl
insb
adc
mov
push
push
js
jbe
jo
inc
dec
adc
or
sbb
ljmp
and
pop
push
pop
add
sbb
cmp
movsb
test
jmp
jbe
inc
shl
adcb
data16
fidivs
mulb
inc
inc
cwtl
or
repz
sbb
ret
call
xchg
and
or
shll
int
hlt
data16
and
fdivrs
rcll
cmp
jbe
push
insb
movl
rcl
xchg
test
stos
fs
inc
das
stc
push
add
push
push
or
fisttps
dec
out
lods
outsb
loopne
sahf
xchg
call
push
mov
xlat
ljmp
mov
ss
jb
in
cmc
push
push
sbb
mov
imul
test
add
clc
out
pop
pop
jle
pop
sbb
add
ret
call
stos
pop
dec
cmp
outsl
lods
sub
lahf
repnz
int
repnz
jbe
adc
cmp
and
cmp
pusha
sub
cmp
dec
and
repz
out
lock
std
adc
and
data16
imul
push
mov
add
lock
sarb
inc
adc
add
rclb
cmp
adc
cmpl
pop
insb
lods
push
jge
sub
ret
lret
ljmp
test
push
mov
mulb
dec
jle
adc
sub
adc
sub
xor
imull
cmp
xor
and
into
in
lods
and
sbb
push
jp
jne
mov
sbb
jmp
add
lret
sub
jmp
cmp
cmp
mov
cs
sub
cmp
and
inc
nop
cli
mov
sbb
xor
sub
sahf
icebp
adc
fdivrl
rclb
aaa
lock
imul
lods
adc
aaa
or
outsl
jno
pop
jge
aam
and
or
sub
sti
and
push
call
or
mov
mull
mov
sbbl
mov
nop
mov
jmp
or
or
ret
loop
jp
xchg
mov
lock
sub
aad
das
js
adc
clc
adcb
xchg
jne
or
loopne
bound
int
mov
lret
jge
inc
dec
pop
lahf
adc
cmp
add
fimuls
pusha
inc
fbld
rcrb
leave
dec
jne
jle
push
fdivs
daa
mov
popa
mov
xor
pop
add
inc
adc
outsl
push
pop
jo
cmp
push
mov
sub
les
popa
mov
xor
jmp
jnp
std
repnz
scas
rolb
outsl
mov
add
sub
jmp
ds
xor
loop
pop
adc
push
xor
testb
fcom
loop
pop
inc
adc
add
push
lea
mov
jmp
mov
pusha
sbb
out
pop
pusha
aas
xor
lea
rep
add
cmc
sbb
hlt
pop
out
pop
ljmp
pop
in
std
xor
pop
cmpsb
cs
mov
ljmp
inc
cmc
test
call
in
cld
loop
dec
int3
xor
je
pop
in
ret
ljmp
call
sbb
push
scas
fdivs
lahf
mov
xchg
sbb
jl
ds
xchg
push
xchg
out
dec
or
fwait
inc
jp
mov
push
call
add
rolb
adc
push
push
call
into
push
mov
add
jecxz,pn
aam
pop
push
push
add
push
leave
add
cltd
sbb
out
les
pop
fwait
fs
jmp
pop
sub
out
jo
aam
fcom
out
sub
lock
inc
into
xorl
lock
push
push
mov
neg
add
in
pop
push
fdivrs
dec
adc
dec
andb
jo
es
push
adc
nop
xor
mov
add
lods
mov
out
sysenter
mov
mov
inc
pop
js
cmp
xor
push
scas
cmp
add
jmp
in
mov
test
subl
bound
call
loope
std
in
lret
loopne
ja
jae
cmp
cld
or
inc
sub
pushf
cmp
ret
in
ficoml
add
or
pushf
mov
pop
sub
fsubr
dec
push
add
add
inc
pop
jl
cmp
cmovl
push
lock
jp
daa
xchg
lahf
pop
cli
inc
hlt
fiaddl
call
mov
pusha
sub
inc
ss
pop
pop
sti
add
jmp
cmp
mov
in
fwait
outsl
or
addr16
add
insl
sti
cltd
in
cmpsl
xchg
inc
scas
test
fs
in
xchg
dec
xor
jns
xchg
les
adc
ret
ja
loope
or
les
shll
out
inc
sub
out
mov
dec
xor
arpl
xchg
push
enter
call
or
icebp
sbb
out
dec
inc
jle
dec
int3
lea
loope
xlat
je,pt
dec
pop
jp
push
push
stc
adc
pop
dec
xor
inc
push
sbb
pop
sub
push
sbb
mov
inc
sub
xchg
xor
dec
pop
in
jmp
movsb
mov
push
pop
loope
add
adc
lahf
or
dec
outsl
push
in
loop
insl
lcall
in
and
inc
in
push
pop
adc
xor
sub
or
call
or
inc
inc
rcrb
in
xor
pop
xor
mov
ffreep
add
faddl
lret
ret
xchg
lcall
dec
inc
es
dec
nop
cmp
in
inc
dec
pushf
out
imul
pop
ja
cmp
cltd
in
arpl
daa
sti
xchg
insl
lods
sub
xlat
test
xchg
cs
sbb
popa
sarl
mov
ljmp
inc
call
shlb
repz
xor
lea
call
adc
inc
push
adcb
call
xor
cmpsb
xor
sub
add
adc
inc
scas
mov
xor
sahf
call
and
pusha
ljmp
in
roll
push
mov
icebp
mov
aad
mov
push
xor
cmc
push
adc
add
sub
xchg
sbb
cmp
xor
into
mov
add
mov
cmpsl
mov
lret
stos
xchg
jge
jnp
jbe
insb
or
and
mov
je
xor
cltd
mov
mov
lret
les
xor
mov
adc
call
call
push
mov
pop
aaa
add
adc
and
cmp
ja
or
cmpb
les
jge
inc
inc
jb
test
call
inc
pop
pop
xchg
pop
mov
mov
or
std
dec
icebp
adc
ficoms
xchg
rcr
jle
icebp
std
add
in
into
loop
stos
cld
cmp
cmp
sub
pop
mov
mov
pushf
jbe
fcomi
testl
das
dec
jo
pop
jb
push
xchg
das
push
lcall
out
sub
or
addl
test
lahf
xor
cltd
cmc
jg
jne
sbb
mov
iret
hlt
adc
mov
imul
mov
jae
sti
or
xchg
std
jne
repz
mov
faddl
fdivrs
xchg
mov
aas
pushf
mov
mov
mov
fsubrs
test
hlt
lea
ret
lds
fiaddl
cld
add
sub
jne
xchg
sbb
and
pop
loopne
push
xor
arpl
shlb
mov
dec
repz
ret
push
loop
mov
push
mov
adc
pop
mov
mov
scas
pop
testb
repnz
cltd
mov
cmp
cltd
out
movsl
aaa
cmp
dec
adc
xlat
nop
lods
push
push
cmpsl
dec
push
mov
mov
pop
sub
pop
aad
sub
inc
sub
fchs
push
scas
lods
shrb
jge
push
and
and
lea
jl
add
mov
push
pop
int3
pushf
sub
pop
mov
rolb
or
scas
pushf
addr16
push
fidivs
pop
sub
imul
insb
inc
cld
jmp
aaa
inc
xor
call
mov
or
xchg
adc
push
push
les
loope
aas
push
je
test
test
xor
sti
xchg
dec
fdivr
mov
rcrb
sub
out
idivb
inc
lods
test
pop
ret
das
scas
xchg
daa
test
sub
and
sbb
xchg
dec
xor
movb
dec
xor
sbb
inc
adcl
call
push
sub
ret
addr16
xchg
jp
mov
or
mov
adc
add
add
and
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
add
add
