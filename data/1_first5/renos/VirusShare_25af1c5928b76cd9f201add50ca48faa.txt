jmp
mov
jmp
mov
jmp
mov
xor
xor
add
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
pop
ret
nop
push
mov
add
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
mov
cmp
jbe
lea
xchg
dec
dec
dec
mov
xchg
inc
dec
inc
lea
mov
mov
mov
mov
mov
mov
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
mov
cmp
je
call
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
mov
xor
divl
test
jne
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
mov
mov
cmp
jbe
lea
xchg
dec
dec
dec
mov
xchg
inc
dec
inc
lea
mov
mov
mov
mov
mov
mov
inc
mov
cmp
je
jmp
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
mov
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
mov
push
mov
push
call
mov
mov
mov
pop
ret
push
mov
add
mov
mov
mov
lea
cmp
jb
mov
xchg
mov
dec
dec
inc
dec
je
lea
xchg
mov
lea
inc
inc
inc
xchg
xchg
mov
lea
lea
mov
cmp
je
jmp
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
call
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
mov
sub
mov
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
push
mov
mov
xor
call
mov
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
mov
mov
mov
call
mov
mov
cmp
jbe
lea
xchg
dec
dec
dec
mov
xchg
inc
dec
inc
lea
mov
mov
mov
mov
mov
mov
inc
push
mov
mov
xor
call
mov
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
mov
mov
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
mov
mov
call
mov
mov
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
lea
mov
push
mov
jmp
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
mov
mov
add
mov
add
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
lea
cmp
jb
mov
xchg
mov
dec
dec
inc
dec
je
lea
xchg
mov
lea
inc
inc
inc
xchg
xchg
mov
lea
lea
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
mov
sub
add
add
mov
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
lea
pushl
call
mov
pop
ret
inc
gs
jb
arpl
fs
jae
add
push
mov
add
mov
mov
mov
mov
mov
mov
cmp
jbe
lea
xchg
dec
dec
dec
mov
xchg
inc
dec
inc
lea
mov
mov
mov
mov
mov
mov
inc
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
mov
mov
movl
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
mov
pop
ret
lea
push
cmp
testb
push
pop
insb
jle
jle
jp
inc
jnp
adcl
test
arpl
imul
pop
pop
dec
jle
imul
inc
imul
imul
pop
imul
bound
test
pop
pop
pop
pop
jp
inc
imul
pop
cmpb
jp
sub
inc
jnp
adcl
pop
pop
adcb
pop
imul
adcl
pop
sub
inc
pop
jnp
adcl
pop
pop
pop
pop
pop
dec
mov
lahf
pop
hlt
sub
mov
pop
insb
jo
cmp
aad
push
pop
movsl
cmp
cmp
mov
cmp
lods
cmp
xlat
cmp
loope
push
pop
lret
cmp
mov
outsl
pop
pop
sahf
pop
out
add
push
outsl
pop
pop
sahf
pop
out
add
pop
outsl
pop
pop
sahf
pop
out
add
pop
outsl
pop
pop
sahf
pop
out
add
arpl
pop
sahf
pop
out
add
mov
outsl
pop
pop
sahf
pop
out
add
mov
outsl
pop
pop
sahf
pop
out
add
dec
outsl
pop
pop
sahf
pop
out
add
sub
sahf
pop
out
mov
push
fsubs
ficomps
mov
mov
pop
fsubs
add
pop
sahf
pop
fbld
push
mov
aas
inc
mov
pop
inc
mov
arpl
pop
sahf
pop
add
cmp
pop
fbld
pop
add
pop
fcomip
inc
dec
mov
repz
sbb
pop
pop
pop
mov
pop
mov
xor
pop
add
out
xchg
pop
pop
pop
sahf
pop
iret
mov
sbb
and
enter
mov
sbb
sahf
pop
lret
lods
pop
pop
pop
adcl
lret
mov
add
pop
fcomip
inc
sub
push
and
mov
pop
pop
mov
pop
imul
pop
lret
mov
sahf
pop
sti
mov
pop
sbb
sahf
pop
testl
mov
add
lret
mov
add
mov
sbb
sti
mov
pop
pop
inc
mov
pop
fcomip
inc
das
mov
add
mov
sti
sbb
sahf
pop
mov
sbb
pop
incl
pop
fcomip
inc
das
mov
cwtl
pop
negl
cwtl
pop
sti
sbb
pop
push
cwtl
pop
lret
or
and
and
xor
hlt
hlt
mov
aas
sbb
sahf
pop
out
mov
inc
sahf
pop
jmp
pop
jecxz
mov
mov
and
pop
jecxz
mov
dec
jg
xchg
pop
pop
adcl
push
aaa
inc
mov
dec
jg
xchg
pop
pop
adcl
mov
dec
mov
jmp
fwait
cmp
repz
hlt
adcl
xchg
add
repz
hlt
xlat
hlt
stc
mov
pop
fsubs
add
push
mov
xchg
sarb
pop
pop
pop
push
jnp
pop
pop
push
push
pop
pop
pop
push
cmpsl
pop
jmp
pop
pop
xlat
push
add
jmp
pop
pop
ds
push
lcall
pop
pop
add
ret
ljmp
push
fiadds
adc
ret
incl
pop
pop
xor
jb
pop
push
push
insb
sbb
mov
sahf
cmc
ds
mov
leave
push
mov
fsubs
ficoms
add
fdivrp
cld
hlt
hlt
hlt
imul
pop
pop
mov
sahf
fsubrl
sub
jmp
hlt
hlt
fistps
mov
cmc
hlt
hlt
sahf
pop
repz
pop
xchg
pop
pop
pop
fstpl
push
xchg
pop
pop
pop
fstpl
pop
sub
mov
lock
xchg
xchg
pop
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
mov
hlt
hlt
hlt
pop
lahf
pop
out
xchg
jb
pop
and
mov
pop
lock
sub
mov
repz
mov
or
cmc
hlt
hlt
cmc
pop
icebp
mov
out
push
fstpl
pop
cmc
pop
lock
jb
pop
push
fstpl
pop
fstpl
pop
sub
mov
mov
mov
out
cmc
hlt
hlt
sbb
sub
mov
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
icebp
sub
mov
and
out
sub
mov
out
lahf
xchg
xchg
pop
pop
cmc
pop
lock
jb
pop
push
mov
push
pop
dec
mov
hlt
sub
mov
xchg
pop
pop
push
cmp
pop
pop
pop
mov
sub
mov
xchg
pop
pop
sub
mov
pop
and
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
mov
sub
mov
xchg
pop
pop
mov
pop
lahf
pop
repnz
mov
xchg
pop
pop
mov
pop
sub
mov
pop
lahf
cltd
and
mov
xchg
pop
pop
mov
and
mov
xchg
pop
pop
and
xchg
and
mov
pop
and
mov
xchg
pop
pop
sbb
cmp
pop
pop
pop
lahf
pop
repnz
mov
and
hlt
lahf
pop
cmc
mov
fdivr
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
nop
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
mov
call
cmpl
ja
incl
mov
mov
cmpb
jne
mov
call
test
je
mov
mov
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
cmpl
jbe
mov
pop
ret
nop
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
lea
cmp
jb
mov
xchg
mov
dec
dec
inc
dec
je
lea
xchg
mov
lea
inc
inc
inc
xchg
xchg
mov
lea
lea
push
call
mov
movl
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
mov
mov
call
mov
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
movl
mov
mov
call
mov
cmpl
je
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
mov
mov
call
mov
cmpl
je
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
lea
push
push
mov
sub
push
mov
push
call
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
mov
cmp
je
mov
subb
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
xor
add
mov
xor
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
incl
mov
cmp
jne
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
mov
call
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
mov
push
mov
push
call
cmpl
je
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
push
mov
push
call
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
jb
jne
insb
push
jb
je
arpl
push
mov
add
cmp
jbe
xchg
mov
lea
lea
lea
mov
mov
dec
inc
dec
xchg
mov
xchg
xchg
mov
mov
lea
inc
inc
dec
mov
mov
mov
xor
add
mov
cmp
jne
pushl
call
add
cmp
jne
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
movb
lea
cmp
jns
dec
dec
inc
inc
cmp
jle
jmp
lea
mov
mov
xchg
lea
mov
xchg
dec
mov
mov
lea
mov
mov
pop
ret
lea
push
mov
add
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
call
test
jne
mov
jmp
movw
mov
mov
cmp
jbe
lea
xchg
dec
dec
dec
mov
xchg
inc
dec
inc
lea
mov
mov
mov
mov
mov
mov
inc
call
lea
mov
pop
ret
mov
push
mov
add
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
movl
lea
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
push
call
mov
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
movl
movl
movw
mov
push
mov
push
mov
push
call
call
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
mov
lea
mov
xchg
lea
mov
dec
dec
dec
dec
je
mov
xchg
lea
jmp
lea
xchg
xchg
xchg
inc
movl
movl
movw
mov
push
mov
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
movl
lea
push
mov
push
call
call
call
movl
lea
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
cmp
jns
lea
mov
xchg
mov
mov
dec
inc
inc
lea
lea
mov
mov
xchg
lea
mov
lea
dec
mov
pop
ret
add
jo
jo
ja
imul
arpl
jo
insb
add
add
add
in
add
movl
movl
mov
push
mov
push
call
lea
cmp
jb
mov
xchg
mov
dec
dec
inc
dec
je
lea
xchg
mov
lea
inc
inc
inc
xchg
xchg
mov
lea
lea
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
movl
lea
push
mov
push
call
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
cmp
js
mov
xchg
inc
dec
inc
jmp
lea
lea
inc
xchg
xchg
mov
mov
mov
dec
inc
movl
movl
mov
push
mov
push
call
call
call
call
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
movl
lea
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
lea
push
mov
push
call
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
movl
movl
mov
push
mov
push
call
movl
movl
movw
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
pop
ret
lea
subl
jae
mov
jmp
xchg
dec
cmp
jno
lea
xchg
mov
lea
inc
dec
lea
lea
lea
xchg
dec
inc
lea
mov
mov
mov
lea
call
lea
mov
cmp
jge
jmp
inc
inc
mov
lea
lea
mov
lea
mov
mov
lea
mov
dec
dec
je
mov
xchg
dec
ret
ret
lea
nop
add
or
std
add
lds
add
gs
aas
fsubl
add
out
mov
lret
mov
nop
jb
add
js
add
fdivl
movsb
inc
add
pop
add
inc
cmc
add
lods
dec
add
xor
addl
mov
add
stos
cs
testl
xchg
stos
push
ret
fiaddl
fwait
shrb
cmp
std
lods
leave
xlat
add
sbb
dec
fistl
add
push
sub
test
add
sbb
shrb
add
fsub
outsl
cmp
adc
cmp
mov
add
or
clc
cli
mov
add
in
add
add
mov
fstpl
add
add
add
add
add
icebp
add
pop
add
cmp
add
adc
push
imul
inc
mov
hlt
cmp
ret
movsb
out
rol
jnp
add
inc
add
pop
es
testl
in
sub
cmpsb
jne
xor
mov
loopne
popl
int
fsubrs
cmpsb
dec
sahf
add
add
push
pop
xchg
xchg
adc
add
push
fildl
outsb
add
or
jge
out
jl
cmp
and
add
lret
jl
add
sbb
call
rol
add
xchg
fs
fldl
lahf
mov
add
test
out
jmp
add
pop
insl
setle
mov
cmpsb
pop
add
sbb
call
pop
mov
push
mov
jp
add
jae
mov
sbb
lds
xchg
mov
add
mov
stos
pop
xor
loopne
push
inc
or
add
bound
push
incb
xor
mov
lret
add
add
add
int
sub
faddp
in
pop
mov
pop
shl
mov
cmp
bound
test
jo
gs
nop
dec
stc
ja
popl
jns
pop
fstpt
das
xor
add
aaa
out
pop
jno
mov
mov
call
pop
ja
pop
call
jne
mov
push
repnz
sbb
in
std
insl
xchg
sbb
lahf
roll
add
jp
add
movl
nop
ja
add
stos
clc
lds
mov
pop
jle
ss
rcrb
ljmp
add
jno
adc
or
add
scas
and
insb
cmpsb
jb
push
mov
add
daa
out
inc
mov
add
sub
jo
ljmp
shl
add
inc
clc
add
xor
das
mov
add
movsl
stc
arpl
mov
add
dec
fldl
add
sti
add
outsb
bound
sbbb
sbb
add
jge
add
lods
sbb
cmp
adc
xchg
lods
sbb
mov
jae
ds
inc
sbb
movsl
push
lock
add
mov
xor
inc
cmc
add
push
add
mov
cmpsb
addr16
add
pop
scas
push
jmp
repnz
std
mov
add
or
push
add
cs
add
push
pop
xchg
pop
add
fstpl
add
jns
add
imul
jp
dec
movsl
mov
push
add
testl
dec
add
add
or
shlb
sub
insb
push
cmpsb
add
add
sub
push
add
jl
sti
mov
dec
rolb
scas
fwait
cmpb
insb
mov
pop
mov
test
jbe
jle
pop
dec
rorb
mov
or
arpl
xor
xchg
mov
adc
lcall
or
xor
test
scas
jns
insb
in
inc
jnp
xor
add
cmpsl
mov
xchg
inc
ret
pop
pop
and
pop
inc
sbbl
push
sub
pop
mov
out
mov
ficoml
in
xchg
ret
sbb
pop
nop
imul
jno
jae
cmp
add
in
jmp
repnz
ror
imul
push
inc
xor
mov
lds
inc
push
and
or
jo
add
pop
pop
int3
ficoml
jge
shll
cmc
lds
or
mov
mov
cmp
popf
movsb
or
loopne
mov
mov
push
sbb
clc
xchg
aaa
ds
cmp
jmp
jl
mov
dec
jp
xchg
es
divb
inc
mov
scas
mov
xor
pop
iret
test
iret
jle
inc
xchg
in
xchg
jne
enter
daa
lods
fiadds
loope
repnz
xchg
and
outsb
cmpsb
movsl
imull
gs
add
jmp
sbb
sahf
addb
xorl
std
mov
or
and
pop
sahf
sub
lcall
pop
faddl
out
outsb
stos
dec
loope
stos
xchg
mov
cli
icebp
jp
pop
mov
mov
shrl
out
shll
adc
aam
add
mov
and
pop
adc
stos
lret
test
mov
lahf
sbb
push
sahf
ficompl
push
xorb
jg
inc
dec
loop
or
shlb
pop
adc
inc
in
ss
fs
fsubs
xor
xor
push
push
cmp
inc
or
into
call
adc
repz
nop
adc
and
imul
inc
add
jo
mov
mov
xor
sub
ds
lcall
push
shlb
popf
clc
addr16
insb
roll
inc
cmpsl
test
les
or
ja
push
jg
xlat
lea
out
pop
outsb
mov
adc
push
cs
jmp
pop
pop
and
push
mov
dec
shr
jne
in
dec
movsl
js
je
fwait
shl
and
mov
jp
mov
pop
call
adc
mov
sbb
lds
lea
jg
lods
iret
rcrl
push
loope
add
in
inc
sbb
jbe
cmp
aas
mov
scas
test
outsb
shll
push
test
jnp
sub
movsl
cwtl
je
jge
sbb
insb
xor
cld
sub
or
pop
push
outsb
mov
roll
das
movsb
dec
and
je
into
sub
aam
sub
ret
in
jecxz
es
mov
nop
dec
cli
pop
add
jmp
sbb
push
orl
jmp
and
in
pushf
pop
adc
inc
add
rorb
lods
loop
test
loop
mov
push
cltd
ffree
pushf
push
clc
adc
jb
mov
cmp
shll
loope
stos
xchg
sbb
dec
in
push
push
call
or
lods
or
mov
inc
xchg
push
out
dec
in
into
scas
test
mov
xchg
and
adcl
sub
mov
lods
sbb
add
add
bound
mov
jns
mov
notb
mov
xor
pop
add
ja
pop
fidivrs
mov
jbe
shll
mov
dec
rorl
cld
mov
jmp
mov
pop
or
jnp
aam
or
or
jns
int
xchg
stc
out
jns
sub
fldcw
sbb
data16
and
dec
inc
insb
push
loop
jnp
push
pusha
jle
jg
in
dec
pop
pusha
imul
sti
dec
test
xor
sub
xchg
jae
push
stos
popf
mov
leave
mov
sub
test
shll
daa
imul
inc
scas
aam
cmp
add
adc
lods
loope
mov
sbb
loopne
dec
hlt
call
mov
ss
mov
inc
mov
in
fnstsw
add
andl
fidivs
lds
mov
sbb
pop
rclb
cmp
cmp
add
mov
xchg
pop
pop
sbb
xor
aaa
std
xchg
cmp
mov
jl
jnp
dec
jmp
movsl
scas
xor
mov
jns
push
ficoms
test
lcall
cmpsb
push
iret
mov
jp
scas
enter
daa
stos
mov
push
jbe
loope
imull
loopne
cmp
inc
ds
cmpsl
add
xor
gs
xchg
dec
push
fwait
add
stc
into
xor
jp
pop
fnclex
mov
mov
inc
pop
fucomp
cltd
lcall
jne
sub
push
outsb
or
pop
mov
mov
sbb
mov
bound
add
push
xlat
cs
js
sub
push
into
pop
xchg
inc
push
lret
in
rcl
lock
out
in
sahf
jge
jl
inc
hlt
imul
mov
stc
pop
out
fs
ss
mov
cmp
loopne
insb
test
xchg
inc
xor
popa
push
cmp
cmp
ror
loope
mov
add
mov
pop
dec
jle
jmp
insl
adc
imul
jne
dec
adc
mov
dec
pop
jl
lods
push
lods
stos
mov
xor
mov
inc
mov
add
or
cmp
icebp
and
or
or
inc
mov
mov
les
push
jge
rcrl
pusha
sbb
pusha
and
xlat
int3
lea
jge
adc
faddl
negb
jmp
sahf
enter
test
mov
or
dec
das
outsb
push
jb
adc
dec
sbb
push
je
mov
jecxz
or
lea
or
call
xchg
jl
mov
stos
sbbl
fcmovnu
mov
cmp
fnsave
aas
xlat
mov
in
or
fisttpll
xor
mov
int3
notb
cmp
std
roll
inc
cwtl
das
mov
mov
pop
pop
or
push
insl
cmp
mov
repz
mov
sahf
sub
dec
stc
subl
sub
inc
xchg
sub
repz
scas
ret
jl
aad
loopne
cmp
addr16
cmc
add
cmpsl
stos
repz
popa
testl
mov
and
push
and
jg
jmp
xor
add
xor
test
fdivl
and
fucomp
popa
push
clc
dec
pusha
insb
xchg
cld
jns
sbb
stos
mov
pop
add
dec
stos
jbe
inc
out
ds
xchg
xchg
out
push
ret
out
iret
movntq
dec
xor
pop
loopne
rol
mov
fsub
or
sbb
cmp
lret
lock
sub
or
clc
lret
fwait
xchg
sbb
add
sbb
lcall
in
mov
mov
in
lahf
mov
mov
mov
fwait
jbe
pop
mov
testl
mov
xor
mov
pop
lock
sbb
jne
rcl
mov
les
pop
adc
jmp
push
out
fcompl
or
mov
mov
and
inc
ja
mov
ljmp
and
pusha
push
ljmp
ret
xchg
pop
xchg
mov
push
jae
rclb
push
mov
sahf
popf
fdivs
mov
insb
outsb
pop
fidivrl
aam
jo
lcall
xchg
mov
aaa
loope
push
xchg
inc
adc
das
push
repnz
leave
push
bound
mov
aaa
cmp
mov
pop
popf
or
ds
jmp
pop
pop
jae
ficoms
and
sti
rolb
mov
scas
dec
push
cmp
pop
mov
push
pop
mov
jbe
dec
nop
jge
lcall
mov
cmp
mov
jl
adc
pop
outsl
stc
push
in
aas
mov
jo
jo
scas
jb
xor
mov
loope
into
insl
jg
gs
inc
inc
loopne
cmpsb
mov
rorl
enter
daa
stos
mov
push
loope
dec
dec
sub
std
movsl
cmp
jg
ds
out
add
icebp
outsb
lahf
inc
push
repz
pushf
sbb
sbb
subl
js
adc
pop
sbb
popf
lcall
jb
or
inc
outsb
jo
les
mov
sub
push
dec
jne
aad
imul
jge
int
mov
sub
bound
adc
jp
insl
and
sub
lahf
in
cmc
sahf
and
faddl
test
pop
jg
xor
loop
jl
stc
into
xor
xchg
inc
add
movsb
sub
cmp
fwait
into
inc
testl
mov
cmp
or
or
loop
enter
mov
shrb
lds
imul
add
cltd
popf
lods
cmp
mov
mov
sub
sub
in
jo
sub
dec
mov
leave
gs
push
in
shll
jae
int
inc
fldcw
mov
xchg
xchg
call
fdivrs
fwait
or
or
pop
aam
xor
sbb
mov
mov
cli
pop
cs
test
dec
mov
cmp
js
dec
xchg
xlat
jl
fxch
icebp
cmp
mov
shrb
push
xor
mov
add
xor
xchg
movsb
fisttpl
insb
mov
inc
adc
in
inc
dec
jb
aas
jbe
dec
mov
sbb
jp
push
push
push
push
negb
cwtl
ljmp
mov
out
mov
lret
punpckldq
fisttpll
sub
stos
insl
mov
rcrb
nop
insb
sub
leave
aam
mov
ret
or
cmpsb
insl
push
pop
in
lock
cmpsl
test
jl
popa
push
lcall
fsubrs
mov
mov
mov
push
cmp
sbbb
in
mov
push
push
mov
fstl
insb
mov
sbb
into
lock
sbb
lods
stos
gs
mov
mov
inc
xor
add
add
std
enter
mov
push
xchg
mov
fcomi
cli
dec
mov
ud2
xchg
inc
dec
cmpsb
fnstsw
inc
mov
sbb
mov
push
push
bnd
add
ss
add
cmp
pop
mov
push
jae
ljmp
mov
addr16
inc
pushf
jge
jns
out
ja
push
jp
cmp
mov
jae
mov
lret
push
in
ss
jne
sbb
mov
cmp
cmpsl
xchg
scas
mov
adc
aas
adc
and
or
pop
fwait
or
stos
dec
mov
sub
jnp
inc
push
jle
fstl
sub
fistpll
lds
ret
mov
repnz
inc
movsb
add
jae
sbbb
fdivr
mov
stos
xchg
dec
fisubrl
gs
divl
mov
scas
lcall
adc
dec
iret
cmp
std
mov
hlt
jle
jns
leave
pop
or
popf
lds
ss
rol
xor
ret
mov
add
fstpt
mov
mov
rcrb
inc
dec
jmp
cmp
jecxz
lods
mov
push
lods
or
jbe
aas
pop
jge
stc
sbb
dec
sub
jnp
xchg
or
xorl
ret
andb
iret
into
add
pop
out
movsb
scas
push
inc
pusha
push
test
cli
test
xor
inc
inc
shl
jbe
and
xchg
in
dec
pop
inc
enter
daa
test
pop
psraw
xor
popa
out
push
cmp
popf
movsl
or
dec
and
mov
cmp
aam
mov
loop
pop
xchg
movsb
xor
sub
inc
dec
xchg
pop
sub
les
pop
lock
jge
faddl
sub
outsb
sarl
sahf
rorb
cwtl
or
dec
pushf
push
mov
stos
jns
in
jae
push
fldl
int
int3
sub
insl
cmp
xchg
inc
dec
lret
iret
roll
sbb
mov
sahf
ret
sub
add
jo
lea
dec
stc
test
push
adc
sub
out
lret
cmp
push
xlat
mov
cli
cmp
pop
xor
lods
pop
or
repnz
cmpsl
xor
cmovb
test
cltd
lds
add
add
pop
scas
sub
and
xlat
mov
out
cmp
push
adc
in
sti
sti
jp
jg
pop
gs
loopne
jb
pop
leave
test
loopne
adc
in
inc
les
mov
xchg
push
sub
sbb
xchg
dec
push
pop
xchg
nop
adc
rcrl
sbb
dec
inc
sti
aad
scas
xor
in
jp
jb
je
je
push
popf
mov
pop
sub
nop
inc
test
orl
loopne
pop
or
mov
enter
xor
or
mov
repz
rcll
sbb
xchg
and
cwtl
movsl
push
aas
mov
sub
icebp
cld
test
sbb
mov
adc
popa
repz
das
inc
clc
cmp
in
int
sub
push
aam
stc
sbb
lcall
insl
cmp
js
jmp
jno
test
push
ljmp
js
xchg
xchg
mov
push
outsb
cmc
mov
jno
movsb
add
fistpl
mov
mov
jmp
push
test
mov
clc
les
xchg
jp
pop
sbb
mov
stos
push
imul
and
out
push
jns
in
shld
out
or
cwtl
cwtl
xor
lret
adc
fisubrs
dec
and
test
xor
sarb
dec
cltd
cltd
mov
or
psubb
xchg
sbb
sbb
pop
fcoml
iret
clc
push
in
and
xchg
pop
mov
dec
mov
xor
cwtl
ja
bound
mov
xlat
fwait
mov
cmp
dec
sbb
imul
lret
imul
sbb
ljmp
cmpsl
dec
xchg
call
inc
daa
out
ljmp
or
fbld
cwtl
xor
or
mov
jle
jp
in
orl
cmp
push
fistps
pop
ret
test
call
fwait
jae
jno
push
cmp
popf
es
fdivrs
ljmp
xchg
push
out
ss
jl
imul
test
std
mov
push
push
call
das
iret
pushf
inc
dec
repnz
jecxz
leave
xchg
icebp
arpl
sub
inc
aas
ja
or
mov
imul
xchg
or
dec
mov
pop
shl
jae
pop
out
push
shlb
mov
aam
ja
das
mov
cmp
push
sti
movsb
or
test
jge
cmp
pop
in
cmp
leave
jno
gs
aas
shlb
loopne
push
mov
std
xor
mov
or
push
push
xorb
sti
cmp
cmpsb
cmpsl
in
nop
in
das
ror
call
stos
mov
pop
loopne
xor
imull
mov
cmp
sbb
movsl
adc
and
cmc
int3
lahf
andb
orb
pop
sbb
ds
add
pop
mov
or
rcrw
xor
js
push
jbe
lcall
push
aam
fcmovu
sub
fsubrs
dec
sbb
ss
xor
dec
sbb
stc
xchg
aam
ret
jl
mov
xorl
loopne
cmp
push
fcompl
sub
or
adc
sbb
fwait
sbb
mov
call
sahf
inc
sub
fiadds
push
loop
mov
bound
loop
das
push
js
sub
lea
adc
or
cli
imul
xor
and
or
cmp
mov
scas
cmc
push
mov
xor
imull
cltd
fwait
adc
imul
mov
cmpsb
add
call
daa
adc
out
push
push
sub
mov
inc
out
pop
sti
stos
cli
sub
gs
ret
lcall
dec
sbb
mov
repz
les
sbb
adc
sbbb
and
lret
pushf
imul
cmp
cs
mov
clc
nop
mov
pop
lock
ficoml
dec
add
loope
pop
lea
lea
mov
push
andl
imul
scas
lock
push
aam
inc
test
aas
mov
inc
mov
mov
dec
and
dec
fcom
mov
enter
jb
cwtl
pusha
xchg
push
mov
andl
mov
pushf
imul
mov
pusha
clc
lock
xchg
cld
das
and
stos
rol
aas
sub
cmp
aam
rol
sub
push
imul
cmpsl
cmpsl
pop
mov
mov
out
popa
cmp
movsl
lods
add
mov
mov
cs
push
mov
push
add
mov
nop
test
and
imul
clc
incl
xchg
mov
xor
sar
mov
stos
inc
ds
out
or
jb,pn
push
outsl
sub
xor
dec
aam
mov
pop
fwait
xchg
pop
adc
test
out
xchg
popf
dec
mov
sahf
inc
out
or
fsts
fwait
adc
arpl
cmp
add
jnp
into
bound
pop
jns
jns
in
pop
imul
jae
mov
out
jns
ja
fidivrs
repnz
addr16
test
sub
cmp
outsl
mov
insb
mov
xchg
push
test
xchg
mov
adc
sub
cs
push
out
pop
je
stos
xor
fsubrl
in
jnp
inc
sti
jle
or
in
mov
pusha
xlat
push
out
ja
jno
jl
mov
aaa
sub
jae
cmpsl
imul
arpl
mov
sub
ficoml
lcall
pop
lcall
fwait
cmpsl
pop
adc
bound
repnz
xchg
pop
leave
mov
stos
mov
inc
inc
lds
sub
fiadds
push
lods
or
mov
int3
jno
adc
jle
fiadds
aaa
rol
popa
pop
adc
xchg
adc
or
addr16
jge
out
sahf
movsb
ret
subl
cld
test
jge
bound
mov
and
cmp
cmp
jl
aam
dec
movsl
ds
xchg
enter
ret
push
sub
push
sub
push
cli
fiaddl
jecxz
cmpsb
sub
adc
jecxz
inc
daa
cmpsl
addr16
push
or
loope
bound
sub
dec
repnz
imul
sbb
and
cmpsl
popa
andb
outsb
sbb
jp
xor
vmread
int3
icebp
mov
js
shlb
lcall
and
sub
sarb
cltd
jb
adc
inc
xchg
and
dec
test
mov
lods
out
and
testb
vmovaps
fdivrs
pop
addr16
nop
shll
mov
sbb
bound
arpl
lahf
cmp
cmp
lret
mov
jns
repz
hlt
adc
dec
ss
mov
cwtl
fmul
movsb
dec
test
shll
cmp
push
or
int3
das
into
insl
and
cmc
sbb
test
mov
aas
xchg
add
pminub
sbb
add
stos
jg
lock
lods
mov
jnp
xchg
push
sub
pushf
cmp
mov
ret
sti
pop
ds
inc
outsl
jo
cmp
lret
daa
mov
inc
push
inc
ret
mov
les
sbb
xchg
fldl
dec
sbb
dec
cmp
xlat
enter
in
xchg
adc
and
loop
mov
cmpsb
or
adc
add
nop
cwtl
lret
sbb
jb
fisubrl
clc
mov
je
xchg
xchg
jecxz
inc
or
lea
ja
mov
fmull
mov
xchg
mov
xchg
adc
pop
push
mov
lods
inc
mov
cltd
xor
inc
and
and
or
jle
sbb
or
sbb
mov
popa
ret
mov
jae
leave
cld
ljmp
lret
pop
xlat
popa
mov
mov
pop
das
call
mov
xchg
in
sub
cmpsl
ss
jp
ret
mov
loop
insl
or
dec
loope
jne
cmpsb
xlat
ret
or
gs
lods
insb
lret
in
jge
scas
dec
test
jmp
imul
sub
movsl
cltd
rcrb
mov
mov
push
arpl
mov
clc
cmp
insb
xchg
clc
sahf
cld
sbb
je
rcll
nop
pop
lods
mov
stos
xor
push
out
lret
xchg
mov
cs
das
ret
arpl
xor
push
int
mulb
xor
in
lahf
dec
out
das
cltd
test
xor
xchg
push
pop
dec
jg
pop
inc
jle
jns
ret
fwait
inc
repnz
popf
add
xchg
cmc
rorl
in
icebp
adc
push
test
mov
stos
hlt
adc
sub
cmpb
outsb
mov
or
mov
sbb
dec
fistps
cltd
jne
push
fwait
mov
and
out
ret
sub
xor
sbb
out
repnz
fs
shlb
stos
movsl
adc
insb
addr16
xor
jle
nop
push
in
dec
loopne
jb
sbb
outsb
dec
pop
outsb
mov
jle
xchg
and
popf
je
xor
push
and
int3
push
sbb
sbbl
push
and
scas
ret
pop
lret
lret
push
cmp
iret
pop
popa
and
sub
shl
pop
adc
arpl
xchg
movl
bound
push
dec
pop
je
pushf
dec
test
test
xchg
pop
cwtl
out
pop
das
fcompl
rol
lods
xchg
and
adc
popf
dec
adc
movsl
lcall
insl
pop
sbb
dec
aaa
mov
pop
adc
stos
mov
dec
adc
imul
xor
jo
loop
scas
out
push
std
lret
test
xchg
lfs
ret
lods
cltd
sub
ds
fidivs
mov
cmpsb
test
push
jae
loope
mov
sub
mov
int3
ds
or
and
dec
lcall
xor
xor
pop
or
sub
lds
stos
lcall
sahf
ficomps
in
pop
sbb
lcall
adc
andb
outsb
cld
mov
repz
xchg
adc
mov
lock
sub
and
sbb
pop
int
xchg
lret
in
dec
pop
push
mov
lret
pop
ror
mov
sbb
insl
sahf
lods
push
lret
jo
adcb
jg
dec
push
loop
lret
ds
stos
ret
mov
adc
js
ss
into
cmp
xchg
testl
scas
lods
cmp
xchg
into
push
or
cmc
in
xor
inc
mov
inc
jge
adc
in
imul
cmpsb
add
sbb
data16
xchg
cmp
cmp
adc
fldenv
sbb
lcall
outsb
push
gs
sbb
loopne
mov
mov
sbb
lods
cld
repz
mov
xchg
mov
mov
cmp
and
pop
mov
loopne
pushf
dec
lret
test
push
jne,pn
push
nop
jae
icebp
dec
or
dec
outsl
inc
cmp
cmpsb
jecxz
cmp
mov
lds
fs
or
jbe
orl
or
pop
cmc
ja
inc
sub
adc
mov
gs
mov
xchg
push
dec
roll
or
std
adc
pop
cwtl
shll
mov
les
icebp
dec
rcll
lret
lret
fcmovnu
mov
ja
mov
jno
push
pop
subb
lret
mov
lea
jbe
mov
inc
jmp
outsl
lods
sbb
mov
dec
fsubr
jb
movsl
fidivl
dec
ret
popa
push
shrb
mov
mov
movsl
mov
lret
pop
xor
cltd
notl
push
mov
cmp
push
icebp
pushf
mov
clc
jne
loop
aaa
xor
shrl
sarl
xor
out
sub
cmpsb
xchg
push
or
orl
push
cmc
xor
add
insl
fwait
cmp
lret
xor
and
mov
test
or
mov
inc
adc
jmp
xor
add
mov
xor
mov
xor
jo,pn
push
fsubrs
hlt
imul
push
push
dec
mov
add
out
ret
jp
mov
mov
fidivrl
aad
aam
xchg
mov
das
std
mov
jmp
out
mov
push
xchg
sti
sbb
mov
orl
mov
sub
mov
mov
andb
sub
insb
rolb
jnp
push
loope
cli
or
in
inc
pop
pusha
or
in
ret
jle
movsl
lahf
mov
jae
fbstp
sbbb
mov
cmpsl
dec
daa
ret
and
sbb
inc
and
jno
scas
es
and
adc
and
mov
leave
stos
jmp
hlt
stos
rolb
arpl
mov
out
push
int
or
ljmp
pop
loop
inc
mov
lds
std
ror
in
mov
lea
cmp
movsb
fldenv
divb
pushf
in
call
mov
in
fdivs
jae
ss
jl
js
dec
addl
pop
xchg
ja
sbb
jo
mov
scas
int
fs
sarb
lds
aad
pmulhw
in
in
lcall
insl
movsl
push
mov
sub
std
fdivrl
insb
fsubl
arpl
push
and
jo
addb
sbb
mov
xor
in
push
gs
pop
lds
mov
push
sub
mov
fsubrl
mov
pop
stc
lods
adc
mull
icebp
frstor
mov
neg
mov
lcall
and
mov
push
jmp
inc
or
loope
sbb
lea
scas
shll
mov
adc
sbb
inc
push
test
xchg
or
pop
loop
mov
lret
dec
aam
sbb
out
repz
ret
inc
adc
xchg
xor
stos
cmp
js
or
call
in
jnp
dec
outsl
and
fs
aas
lods
ret
adc
mov
nop
data16
mov
mov
jno
out
mov
out
fucomi
sub
xchg
xchg
sti
mov
pop
decb
bound
loopne
sub
pop
inc
scas
add
lds
rorb
aad
out
int
mov
arpl
cmp
cmp
xlat
inc
xchg
inc
pop
push
xlat
rcll
iret
out
pushf
clc
cmc
jecxz
je
jmp
fdivs
aad
cmp
dec
imul
and
jp
je
adc
jecxz
jne
leave
mov
mov
fwait
mov
popf
mov
out
ret
bound
cmc
pop
cld
pop
cwtl
sub
inc
mov
push
inc
cmc
mov
mov
scas
lret
ds
test
rorl
push
std
mov
iret
mov
stos
mov
and
insb
lret
cmp
mov
movsl
fists
das
mov
int
sub
dec
cmp
scas
and
bnd
insl
fcoms
pop
cmpsl
movsb
popa
mov
popa
orl
mov
hlt
mov
and
and
pop
in
push
add
cmp
je,pn
test
sub
mov
sbb
clc
mov
sbb
pusha
adc
pop
add
mov
nop
sarl
ds
adc
mov
data16
inc
xor
enter
mov
xchg
jmp
mov
xchg
shll
mov
mov
push
and
add
mov
inc
push
bound
jg
jns
lcall
xchg
inc
test
xchg
insb
mov
and
je
push
push
test
add
daa
dec
movsl
rorl
outsb
add
out
xchg
mov
xchg
into
mov
mov
add
out
mov
sub
mov
je
add
mov
mov
ja
addr16
pushf
insb
cmp
andl
dec
lahf
sub
pop
mov
ret
jne
fsubl
inc
fistl
add
inc
call
mov
fistps
push
fisubrl
adc
fucomi
imul
cmp
jo
jno
mov
xchg
add
leave
and
in
hlt
cmc
in
arpl
sub
popf
fisubrl
dec
je
or
mov
ss
in
fsubrp
fnsave
shl
xchg
mov
and
dec
movsb
fs
push
aaa
mov
jbe
aad
jge
cs
sbb
add
lock
add
jno
or
dec
repnz
push
ds
xor
pop
xchg
aam
lods
add
mov
stc
notb
out
inc
sahf
dec
cmpsb
mov
or
lret
dec
mov
daa
movsb
mov
push
pop
xchg
loope
mov
xor
sbb
data16
movsl
das
out
andl
jmp
lahf
cld
push
sub
lret
add
int3
int3
xor
adc
sbb
pop
xchg
xchg
lcall
pushf
popa
sbb
or
sbb
loop
fcmovnbe
shr
mov
mov
xchg
popf
mov
es
cmp
lds
in
int
fldcw
sub
pop
or
lret
lret
mov
mov
cld
std
sahf
repnz
test
xchg
xor
dec
push
push
jg
insl
dec
loop
stos
adc
fs
add
imul
cmp
std
scas
test
add
mov
fdivrl
cmpsb
or
rcll
cmc
jb
push
decb
adc
repnz
adc
loop
cmp
into
out
lods
movsl
xchg
in
mov
mov
or
inc
mov
mov
repnz
mov
mov
loopne
int
pop
add
fincstp
and
loopne
mov
xchg
cmp
sbb
std
lcall
push
xchg
adc
adc
pushf
mov
ss
cmp
xchg
nop
sub
sub
paddusw
push
insl
je
dec
xchg
jecxz
cmc
cld
int3
pop
inc
ljmp
or
lret
push
lock
sub
push
jo
cmp
repz
cmp
cmp
sbb
aas
xor
cli
mov
popw
cmp
cmp
cltd
mul
fnsave
bound
imul
clc
int3
repz
and
lret
test
or
lock
lret
iret
das
pushf
rcl
or
or
adc
mov
or
adc
gs
subb
repnz
rol
aam
mov
jmp
dec
lods
lods
dec
arpl
pop
fsts
mov
xchg
mov
or
clc
add
cltd
gs
loop
ret
cwtl
sub
ja
int
pushl
xchg
mov
dec
sbb
outsl
js
pop
addl
cmp
xchg
test
loopne
orb
or
pop
xor
sbb
xchg
stos
jae
and
scas
test
test
xchg
adc
shl
inc
inc
push
or
dec
or
les
add
fcomps
bound
jae
in
mov
xchg
mov
cld
mov
fcmovnu
pop
ja
cmc
cmpl
lods
mov
out
mov
gs
mov
and
add
xor
xor
pop
subl
push
out
inc
pop
sub
mov
push
add
stos
mov
and
mov
mov
jb
jle
fmul
in
pusha
jne
inc
test
ret
arpl
dec
icebp
inc
out
loope
add
xor
or
idivb
and
and
sbb
inc
das
imul
mov
push
mov
sub
xchg
cmp
iret
ja
div
and
mov
hlt
inc
dec
das
fldl
test
or
sbb
test
lret
lock
add
adc
sbb
mov
lds
push
sar
ss
mov
clc
cmp
cmp
movsb
out
sbb
push
xchg
jge
in
sbb
mov
mov
jl
insl
jb
popa
pusha
inc
push
and
xor
jp
aas
scas
mov
rclb
inc
inc
test
repnz
mov
sub
addl
sub
iret
repnz
mov
loope
loope
jbe
sub
sti
pop
cmp
pop
ret
ds
mov
and
fcmovnb
lahf
sbb
insl
subb
sbb
repnz
rorl
fsubrs
das
js
xchg
into
pop
aad
bound
xchg
faddl
push
inc
outsb
and
mov
shrb
sbb
cwtl
push
lahf
mov
jnp
mov
mov
lods
push
out
push
or
push
push
xchg
sub
sahf
mov
mov
rorl
gs
push
arpl
jg
dec
andb
jg
add
xchg
iret
sub
repnz
adc
xor
cmp
mov
sub
cli
push
lods
xor
xlat
mov
popf
mov
into
stc
jnp
cmc
cmp
xor
cli
cmp
jo
adc
fcmovnb
adc
mov
add
or
lods
mov
mov
add
mov
rcrl
pop
ljmp
push
and
gs
inc
adc
adc
sbb
sbb
jmp
fdiv
imul
xchg
jmp
mov
cmp
mov
pop
mov
pop
xchg
out
movsb
cs
movl
add
xchg
dec
daa
add
dec
aam
fs
fst
jecxz
mov
lea
or
aad
stc
mov
insb
mov
out
adc
and
adc
pop
pop
fisubrs
inc
shr
inc
or
outsl
aas
iret
jecxz
mov
sbb
dec
shrl
or
cwtl
pop
xchg
mov
iret
ljmp
stos
scas
imul
adc
mov
sbb
pop
das
jnp
movsl
rcr
test
or
xchg
aam
insl
call
es
lret
insl
cmpsb
dec
cmp
or
ljmp
lods
sbb
jl
mov
icebp
and
push
cmp
add
jg
pushf
sbb
mov
xlat
cmpsb
push
cmp
frstor
fwait
clc
es
xchg
hlt
add
jg
shll
fistpll
out
loop
out
push
push
mov
fwait
aad
pandn
repz
bound
xor
mov
dec
xchg
fildll
mov
mov
dec
lds
fidivrl
es
aaa
pop
fwait
decl
push
addr16
add
repz
call
cli
movsl
jns
mov
mov
adcl
add
mov
xchg
cmpsl
hlt
ja
add
es
and
mov
aam
dec
imul
sbb
mov
push
je
inc
jmp
stos
sub
mov
dec
push
sub
lods
jmp
test
and
push
sbb
sub
jle
sub
insb
pusha
faddp
jecxz
adc
ret
js
dec
sbb
jae
mov
push
lret
flds
mov
add
ficoml
loopne
xchg
sub
sbb
adcb
dec
adc
push
aas
clc
adc
push
iret
sarb
jbe
sub
pmaxsw
arpl
xchg
leave
inc
push
pop
int
add
inc
or
icebp
add
push
int
int3
or
fisubrs
adc
add
popa
rcrb
mov
inc
rcrb
jp
jmp
jbe
movsb
hlt
jge
jg
sbb
push
aaa
mov
add
jno
shll
out
jl
movsl
xchg
dec
rclb
sub
jo
xchg
push
scas
push
mov
shrl
push
mov
in
cmpsb
mov
ljmp
mov
sbb
sub
mov
imul
cwtl
inc
movsl
cmp
fsubp
lahf
cmp
negl
cmp
add
cld
and
out
push
fwait
js
pop
cmp
hlt
js
cmc
movhps
mov
push
neg
jae,pn
sub
loopne
outsb
mov
adc
mov
outsb
push
cmp
mov
dec
pop
mov
jno
and
mov
repnz
and
mov
add
lret
mov
mov
sbb
jno
cmp
pop
test
inc
aaa
addb
ret
loop
pop
xchg
stc
xchg
dec
adc
out
and
mov
fisubrl
fdivs
dec
testl
or
lcall
xor
add
shll
mov
ljmp
je
adc
pushf
imul
jl
add
ljmp
pop
and
add
test
enter
les
je
mov
sbb
pop
pop
mov
adc
notb
inc
repz
das
xchg
lods
sahf
jae
movsb
pushf
pop
cmp
push
xlat
add
or
add
adc
sarl
jmp
push
cs
mov
nop
jns
xchg
or
dec
repz
je
ret
mov
sub
lea
sbb
or
jo
popa
sub
subl
jge
pop
xor
jno
daa
fwait
cmp
outsb
shlb
aam
dec
and
lods
sarl
imulb
std
mov
sub
ret
mov
ja
mov
cmpsb
push
dec
cld
push
int3
lret
xchg
dec
mov
outsb
pusha
lock
das
pop
mov
mov
sub
add
jo
adcl
insl
lea
cmpsb
dec
enter
mov
pop
mov
lods
add
mov
pop
std
mov
repnz
in
pop
dec
mov
add
loopne
test
sbb
mov
xchg
sub
std
or
fisttpll
mov
popa
sahf
xor
sbb
or
or
add
loopne
fisttpll
out
mov
dec
jnp
jbe
pop
iret
imul
dec
in
add
mov
pop
xchg
mov
test
dec
clc
xchg
daa
dec
ds
movb
mov
stc
pop
fwait
shlb
push
or
inc
add
push
test
jge
aam
out
jns
dec
xlat
in
mov
shll
jp
pop
push
push
sub
cwtl
jle
mov
and
orl
dec
jne
andb
pxor
mov
jmp
jne
lret
addl
out
shlb
cmpsl
sub
stos
in
pop
and
xor
mov
aaa
in
push
andl
inc
push
ret
in
orl
push
mov
mov
push
mov
push
int
jg
in
sbb
xchg
shrb
push
subb
push
dec
adc
aas
iret
xor
aaa
out
xchg
aaa
hlt
adc
inc
push
sbb
jg
push
push
inc
inc
leave
jne
or
adc
ja
int3
repz
sbb
rcrb
out
mov
cltd
shlb
mov
fstps
nop
movsb
add
dec
mov
jge
jae
and
aaa
jae
in
cmp
cmp
jecxz
aas
mov
out
lods
xor
xor
mov
xchg
or
mov
inc
dec
pop
jge
cmp
jns
orb
daa
mov
add
loope
pop
xchg
sub
dec
clc
cmp
out
dec
ds
push
enter
out
and
xchg
lahf
pop
es
sbbb
pop
adc
pop
mov
pop
js
jmp
pop
push
stos
sub
xor
cmp
sub
das
subl
lods
mov
insl
arpl
ja
mov
fdivl
fcompl
cmc
test
int
repnz
int
dec
pop
mov
fs
or
mov
leave
push
sbb
sbb
lea
sub
inc
and
stc
cmp
aad
adc
stc
jmp
je
into
xchg
sub
testl
jno
push
test
jnp
or
fbld
cmc
popf
xchg
xor
sub
outsl
mov
jo
imul
jl
popl
out
jge
sti
lods
pop
les
mov
test
cmpb
sahf
and
mov
xor
mov
jae
outsl
xchg
mov
gs
pop
loopne
daa
lds
push
inc
js
mov
les
jge
repz
cmp
scas
xor
pop
pop
into
and
sub
pushf
movsb
in
xor
xor
je
push
inc
fimull
dec
xor
repz
dec
ret
je
cli
dec
jecxz
or
sub
lret
negb
mov
leave
mov
addl
add
mov
dec
pop
and
jb
iret
adc
inc
inc
cli
inc
aas
or
clc
and
mov
inc
and
bound
imulb
push
lods
cwtl
jge
sbb
cmp
rorl
lret
imulb
mov
test
mov
and
lock
movsb
das
cmp
sbb
test
sub
cmpsb
or
insl
fistps
adc
es
insl
jbe
je
test
ret
push
mov
ljmp
xor
out
inc
idivl
cmp
and
lea
pop
imul
out
cltd
or
test
fsubrl
mov
xchg
in
rorb
clc
pushf
ficomps
jb
jmp
shll
add
stos
int3
or
sbb
xchg
pop
sub
setge
sbb
call
sbb
xor
add
and
pop
or
or
mov
xor
out
inc
or
or
pop
fwait
pop
adc
int3
add
sub
call
mov
bound
cltd
jns
stos
inc
in
inc
mov
mov
gs
and
dec
pop
or
push
ja
mov
jp
aam
mov
add
js
mov
es
xor
data16
push
sahf
out
adc
sbb
push
iret
test
inc
lds
out
stos
jl
into
enter
std
inc
addr16
adc
ret
lcall
lret
jle
mov
in
sti
and
jge
fists
mov
add
fstps
mov
jae
nop
push
push
fwait
sbb
lret
mov
push
loop
or
js
in
inc
jo
cli
jns
imul
ja
mov
nop
adc
in
jg
xchg
and
repnz
sbb
hlt
and
arpl
lcall
adc
push
dec
jle
or
jae
push
outsl
push
int3
fisubrs
pop
dec
and
ljmp
sar
mov
insb
movsl
xchg
cmp
jmp
movsb
nop
cmp
push
jae
divl
inc
cmpsb
jge
popa
cmpsb
sbb
in
pusha
aaa
xor
add
xlat
cmp
jno
fdiv
jl
xchg
or
scas
inc
ja
lret
xor
mov
cmp
sub
test
push
jo
inc
fimull
fsubrp
sbb
loope
daa
mov
movsb
gs
jg
sub
mov
cmp
pop
pop
adc
es
and
andb
jmp
push
inc
xor
je
pop
mov
inc
pop
xchg
adc
push
mov
gs
inc
jle
dec
js
adc
les
int3
mov
mov
aad
mov
lahf
mov
or
and
push
clc
jg
int
pop
imull
dec
test
lret
aad
push
test
sbb
dec
sahf
jle
movsb
test
push
xorb
xor
stc
hlt
push
inc
fs
or
ss
inc
ljmp
sub
cli
add
push
cmp
lcall
mov
sahf
lock
xchg
mov
add
xchg
imul
mov
into
data16
mov
mov
sbb
adc
insl
in
sahf
xchg
jge
and
dec
gs
imull
loope
xor
loopne
testl
jmp
pop
repz
mov
sbb
jmp
mov
clc
adc
cmp
jmp
scas
mov
out
aad
mov
nop
xchg
pushf
dec
inc
cli
and
inc
test
dec
cmp
add
in
jecxz
popf
mov
lea
addr16
aam
mov
addb
loop
fneni(8087
imul
inc
push
inc
xor
pop
insl
sub
lods
test
xor
scas
int3
and
imul
repnz
daa
sub
mov
jmp
mov
push
jo
cld
sub
lret
or
mov
ds
lock
das
sbb
lcall
fs
push
push
ret
mov
lock
insl
pop
adc
cmpsl
lahf
shlb
xchg
stos
popa
hlt
orb
xchg
mov
mov
iret
xchg
in
sub
dec
pop
mov
sub
mov
scas
cltd
inc
pop
mov
mov
fidivrl
fstpl
mov
xchg
mov
and
fucomip
rcl
mov
test
pop
jno
stos
mov
xor
xchg
mov
ss
cld
and
aad
aaa
out
fs
cmpsb
ret
mov
stc
or
pop
or
inc
jae
dec
and
es
lahf
mov
fwait
mov
ds
push
xchg
xchg
add
inc
add
sbb
mov
adc
pop
and
mov
enter
jg
ja
dec
xor
clc
fs
lods
xor
push
jne
test
mov
inc
jp
out
iret
jae
in
lret
or
xchg
rolb
or
sub
popf
gs
stos
stos
lret
and
sbb
insb
push
outsl
les
loope
jle
in
in
dec
ret
divl
adc
test
pop
inc
inc
adc
jae
out
push
adc
negl
push
scas
cmp
pop
in
sub
xchg
sub
xor
scas
js
es
shll
iret
repz
repnz
push
dec
je
cwtl
hlt
insb
sub
arpl
pop
inc
pop
test
push
or
inc
icebp
scas
add
dec
out
pop
js
imul
cltd
sbb
into
jg
jnp
jg
jmp
inc
cmp
lock
add
pop
jge
cmpsl
prefetcht1
xchg
xor
or
mov
ret
dec
sbb
iret
cs
out
jo
pop
and
push
ret
test
push
rorl
imul
in
dec
test
mov
fildll
loope
lret
xchg
mov
and
jg
xchg
jo
cmpb
insl
add
cmp
xor
in
xor
inc
loop
jne
xchg
pop
roll
xchg
lcall
dec
fsubrl
inc
jae
mov
movsl
outsb
mov
rclb
sbb
repnz
test
stos
mov
xlat
add
sbbl
int
and
sub
movsb
jmp
xchg
lret
inc
shr
imul
lock
and
pop
test
mov
loop
out
stc
stos
scas
xchg
fs
xchg
rcll
test
ss
push
cmp
movsb
cli
pop
test
or
adc
fcomps
test
out
cmc
push
add
popf
scas
lods
outsl
pop
cwtl
mov
imul
xchg
fiaddl
lods
fstps
lods
sub
out
jae
sub
mov
sti
shr
and
fstpl
jnp
je
mov
jl
add
jmp
gs
sahf
xor
or
clc
les
dec
jne
cmpsl
push
xchg
cmc
pushf
lcall
and
mov
pop
test
cs
cli
pop
lret
jbe
cs
pop
aad
jns
jo
iret
dec
mov
and
dec
mov
out
adc
jecxz
jno
fcmovnb
gs
in
pop
push
call
xchg
xor
cmp
pop
xorl
add
jbe
xchg
inc
inc
inc
js
scas
aas
dec
outsb
in
enter
stc
sub
or
divb
loopne
cwtl
repz
mov
out
mov
sub
jmp
push
das
push
mov
mov
jbe
imul
xor
sub
or
add
test
insl
inc
jno
dec
mov
pop
mov
popa
or
lods
les
insb
mov
jb
mov
cmpsl
and
or
cli
pop
add
inc
loope
ffree
pop
fprem
adc
out
lock
sbb
push
mov
stos
stos
cs
loop
pop
xchg
call
sub
cvtdq2ps
xor
fnsave
cltd
ss
cmp
daa
sbb
test
dec
mov
and
pop
popf
sahf
inc
ss
mov
mov
add
pop
ror
call
add
pusha
sarl
push
mov
xchg
sbb
lcall
sbbb
jp
iret
or
add
push
dec
neg
push
jne
sbb
lret
out
into
loope
xchg
rcrb
xchg
mov
xor
pop
out
fimuls
or
arpl
cmp
ret
mov
cmpsl
aas
jle
or
dec
xchg
fisttps
das
push
pop
es
das
jae
xorb
lods
fadds
mov
pusha
sub
sbb
test
out
sbb
rcrl
add
scas
fisttpl
mov
iret
push
test
leave
jmp
pop
hlt
mov
mov
inc
pop
out
or
jg
cmc
inc
inc
sbb
xor
testb
mov
or
pop
mov
lds
pop
cmpsb
rolb
dec
and
jmp
movsb
cmpsb
not
push
adc
jbe
mov
jge
rcrb
sbb
or
cmp
in
jl
int
dec
mov
push
nop
ficoml
jo
test
push
xchg
sbb
jmp
inc
leave
cmpsb
lds
in
xor
smsw
sahf
inc
sbb
pop
loope
cmp
xor
imul
adc
add
int3
jp
sbb
adc
dec
mov
and
jne
daa
fstpt
inc
lahf
pop
adc
lcall
sbb
fiaddl
in
adc
cli
adc
hlt
test
mov
imul
and
mov
sub
pop
and
push
int3
jg
nop
bound
mov
fwait
add
and
sub
push
jg
aaa
and
daa
ja
bound
leave
adc
divb
enter
ret
adc
pop
pop
jg
xchg
imul
lahf
cmp
inc
adc
enter
push
int3
dec
xor
push
test
lods
lods
adc
add
adc
loopne
add
inc
pushw
push
mov
psadbw
mov
mov
sub
in
mov
je
xlat
sti
adcb
incb
mov
mov
pop
push
dec
mov
flds
les
mov
repz
test
sbb
pop
cli
in
incl
pop
cmp
adc
add
pushf
movsl
push
sbb
std
add
lea
or
dec
add
jb
testl
jecxz
mov
fsubp
cmc
lea
call
add
push
fldl
stos
dec
push
fstpt
data16
mov
inc
fs
add
xchg
js
ljmp
mov
in
jp
sarl
adc
jmp
mov
push
mov
add
out
andb
lret
inc
xchg
mov
popf
cmc
lock
stc
push
add
sar
fstl
fmulp
adc
ret
mov
push
subl
xchg
dec
mov
mov
popf
cmpb
xor
enter
mov
or
aas
mov
fnsave
loop
push
lcall
imul
mov
xor
fucomp
jo
clc
dec
pop
mov
das
pop
das
sbb
dec
shll
mov
stos
cltd
stos
cmp
inc
pop
notl
loop
mov
xor
in
or
in
mov
pushl
test
leave
mov
inc
push
xchg
outsl
adc
add
jl
push
xchg
rclb
add
or
mov
adc
and
jns
movsb
test
outsb
fsubrl
imul
pusha
pop
cmp
mov
sbbl
pop
imul
dec
ficompl
jne
push
xor
lods
not
xchg
xchg
movsb
imul
sti
scas
fwait
xchg
mov
or
out
es
xchg
icebp
jns
std
addr16
stos
mov
xchg
and
lea
sub
fdivs
enter
outsb
in
sbb
fildll
xchg
mov
inc
sub
out
jae
pop
lret
mov
insl
mov
lahf
jge
ficoml
adc
sbb
and
imul
scas
ds
aad
popa
pushf
jle
mov
cmp
leave
bound
push
arpl
dec
inc
pusha
mov
or
inc
lds
jns
shrl
int3
lahf
xchg
lahf
cmpsl
ficomps
push
shlb
sbb
and
popa
movsb
xor
push
pusha
into
dec
jbe
push
imul
inc
sbb
jnp
outsl
popf
popf
cmp
adc
jl
sub
push
jae
mov
jo
repz
push
insl
sahf
push
mov
mov
mov
cmpsb
dec
xchg
insl
in
sbb
mov
mov
push
mov
pop
sub
fdivs
in
in
jnp
ja
pusha
pop
and
lods
sbb
lahf
aad
mov
sbb
inc
add
mov
xor
outsl
pop
push
inc
pop
std
repnz
mov
lcall
jle
test
outsb
ja
xchg
adc
iret
mov
loope
mov
pushf
mov
imul
mov
mov
lds
mov
shll
xorl
jp
sbb
imul
push
movl
imul
dec
adc
and
sbb
idivl
shl
cli
pushf
and
xor
scas
outsl
cmp
shlb
or
add
into
dec
pop
fprem1
jecxz
and
push
subb
sbb
mov
dec
adc
jle
add
mov
push
mulb
and
out
jnp
sub
inc
mov
fistps
out
and
subb
mov
xchg
mov
sti
fnstcw
mov
sub
es
jnp
pop
sbb
lcall
pop
jmp
jge
xchg
inc
pushf
push
and
in
push
fsubrl
lock
adc
adc
hlt
dec
popa
pop
fbstp
inc
dec
sahf
fidivs
and
out
loope
mov
call
test
mov
sbbl
or
pop
mov
incb
sbb
inc
scas
cmp
mov
mov
addr16
and
adcb
mov
std
add
mov
jno
mov
fldenv
cld
lods
out
lret
mov
pop
mov
mov
jecxz
lock
jb
das
mov
jp
rorl
adc
cltd
mov
ret
dec
fs
or
insl
insl
adc
dec
dec
scas
xchg
cmpsl
pushf
sub
ljmp
push
lods
lcall
mov
in
sub
pop
in
das
add
mov
cltd
out
daa
test
and
jnp
int3
or
fstl
scas
xor
mov
out
clc
cmpsl
adc
pop
fistpl
dec
stos
mov
and
test
sbb
push
mov
dec
xor
mov
pushf
cmp
push
mov
add
push
test
ficoml
dec
std
inc
or
or
add
cmp
cs
xchg
movsl
stos
call
dec
bound
xchg
dec
in
mov
xchg
mov
sahf
mov
pop
clc
mov
jp
cltd
dec
mov
jge
mov
outsb
sub
dec
mov
je
mov
add
mov
ret
xchg
data16
repnz
popf
xchg
insb
in
push
adcl
push
out
loope
sub
mov
inc
stos
and
fs
xchg
xor
jnp
jle
jle
xor
in
xchg
lock
sbb
fdivs
dec
daa
mov
xchg
pop
dec
inc
xor
lea
pop
mov
popf
cli
loopne
mov
ficoms
fiaddl
xchg
xor
sbb
pop
subb
repnz
mov
cmpsl
notb
xchg
hlt
mov
adc
cmp
push
ds
dec
inc
inc
arpl
movsl
or
jne
inc
inc
inc
enter
mov
int3
mov
dec
pop
add
mov
sarb
frstor
mov
jp
movsb
mov
cwtl
adc
fucomp
es
shl
sbb
adc
cmp
ja
jl
pop
cld
dec
push
aas
push
push
int3
mov
divl
scas
movsb
push
jae
push
jmp
sub
adc
cmpsb
lret
sub
in
add
enter
daa
pushf
mov
loopne
push
loope
test
xchg
sar
sahf
or
movsl
scas
pop
and
jmp
hlt
jge
xor
sbbl
mov
in
xor
mov
pop
and
imul
cmpsb
pop
mov
mov
call
xchg
sub
add
inc
shrb
fs
mov
xlat
mov
xor
mov
enter
sub
sub
rolb
add
int
jbe
imul
fwait
test
inc
push
sahf
or
pop
test
mov
andb
pop
jg
lcall
rorb
add
jecxz
xor
dec
push
fcom
in
idiv
cmp
cli
iret
mov
icebp
cmp
aaa
lcall
xchg
cmc
stos
mov
or
outsl
cld
adc
pop
imul
outsl
lahf
add
data16
subl
jnp
subb
jmp
xchg
in
dec
inc
mov
incb
mov
pop
sub
dec
mov
aas
inc
xlat
and
insb
les
adcb
adc
imul
mov
cmp
fs
xlat
jge
icebp
pop
sahf
push
cmc
adc
jae
pushf
sti
ret
cs
push
sbb
rcl
jb
cmp
dec
adc
jmp
in
in
lea
jns,pt
xor
or
add
aaa
mov
push
xchg
cmp
fistpl
inc
inc
jb
bound
add
mov
push
test
and
ficoml
push
pop
icebp
idiv
movl
cwtl
and
jp
or
outsl
or
cld
fadds
sub
jl
lock
fldcw
xchg
aaa
add
movsb
insl
push
sub
les
cmp
lea
int
stos
sub
ljmp
cltd
lods
add
or
das
dec
in
jmp
dec
mov
add
in
add
xor
test
mov
test
ds
aaa
iret
mov
ret
lret
mov
sbb
sub
pop
push
int3
sbb
or
repnz
cwtl
jns
vmread
jmp
or
mov
popa
mov
add
cmpsb
test
addb
and
out
or
call
cmp
add
mov
pop
out
xchg
jmp
jns
sub
in
in
xchg
or
mov
into
mov
pop
mov
fidivs
jecxz
jp
mov
push
mov
mov
fldl
dec
mov
aaa
mov
out
imul
xchg
cmp
jmp
aaa
or
andl
popa
sub
mov
sbb
sti
ss
xchg
mov
sbb
fwait
jnp
nop
push
jle
xor
in
js
pusha
sbb
lods
ret
pop
pop
lret
cmpsl
loope
ds
add
in
push
and
dec
popf
and
test
mov
mov
in
sbb
bound
imul
scas
add
fstl
push
xchg
adc
mov
repnz
or
hlt
cwtl
dec
mov
iret
mov
lds
or
lock
pop
or
js
int3
jne
fcomps
jo
fisubs
stc
rcl
mov
and
cmp
and
cmpsb
lcall
stos
cltd
sbb
mov
cmp
aad
jno
mov
mov
push
cmp
shlb
inc
scas
addl
test
dec
pushf
in
inc
movsl
cmpsb
dec
aaa
sub
ljmp
daa
fwait
jnp
push
dec
sbb
pop
pop
int3
sub
pop
push
cmp
lock
outsb
push
lahf
adc
pop
sbb
jp
xor
xor
js
aad
pop
int
dec
lcall
ret
inc
xor
outsl
sbb
jecxz
popa
add
rolb
mov
int3
mov
cs
mov
dec
and
push
pop
jg
int
or
scas
ljmp
imul
push
xor
or
mov
add
aas
push
lcall
jno
fs
cld
mov
ss
shlb
cmp
nop
add
jnp
add
ret
xor
xchg
cmp
jo
or
jmp
cmc
jno
arpl
or
cmp
imul
mov
add
scas
mov
lods
les
mov
out
xchg
call
mov
mov
aam
lea
push
imul
loopne
test
jnp
addl
mov
repz
mov
add
sbb
adc
xlat
mov
pop
push
adc
ss
jmp
cmp
pop
aad
hlt
jno
fmull
cld
jb
test
mov
jecxz
push
out
mov
mov
call
addb
int3
xor
imul
fcmovne
sahf
lea
test
inc
stc
cmc
fiadds
fcomps
cmp
mov
aad
aam
lea
das
testb
std
inc
stos
jmp
filds
mov
xchg
dec
lret
nop
xchg
ret
mov
or
lcall
data16
mov
aam
adc
ret
insb
stc
add
adc
insl
orl
dec
cmpsl
lcall
popa
addr16
lods
jo
xor
sbb
scas
and
das
xlat
lret
pop
and
les
pavgw
push
dec
dec
test
inc
js
ja
aam
push
add
fstpl
mov
xchg
in
lea
pop
push
aad
push
out
pop
mov
fsubrl
outsb
imul
push
jae
cmp
xlat
inc
sbb
fidivrl
jnp
jno
mov
or
test
test
mov
clc
dec
jecxz
mov
or
jbe
fwait
ja
pop
push
jg
lea
lret
leave
xlat
decl
push
adc
bound
punpckhbw
mov
jae
mov
outsb
int
ja
adc
sbb
sbb
scas
pushf
mov
dec
sbbl
mov
mov
mov
jmp
add
xorl
repnz
mov
sub
test
mov
stos
or
loope
imul
jnp
cmp
es
xchg
mov
pop
fisttps
leave
js
jae
es
add
mov
dec
pop
push
jecxz
test
sub
xchg
fisubrl
adc
aas
jne
inc
push
push
addr16
cli
push
ss
into
jne
repnz
mov
leave
jns
hlt
jecxz
adc
push
dec
inc
imul
into
push
inc
test
add
inc
add
adc
fiadds
pop
lds
mov
mov
fidivs
cmp
lcall
dec
stc
int3
jbe
cmc
jge
movsl
sbb
add
or
and
dec
dec
mov
push
sbb
mov
cmpsl
xchg
jo
mov
scas
bound
mov
adc
jmp
std
in
roll
ss
daa
lcall
loope
pop
jno
cmpsb
je
cmp
or
movsl
jne
aam
jge
xchg
lahf
xor
aam
sbb
sbb
sub
xor
js
mov
mov
js
xlat
xlat
pop
or
push
lcall
sbb
fdiv
sub
test
adc
pusha
gs
push
out
mov
dec
mov
bound
test
loopne
imulb
adc
add
in
fnstsw
mov
lods
cmp
popl
push
sahf
push
mov
test
cmpsl
imul
and
lock
ds
aaa
fs
ficoms
sbbl
xchg
fmuls
js
jnp
outsb
cli
xor
mov
cmp
jge
or
mov
xor
outsl
mov
push
and
mov
push
clts
data16
xchg
lods
stos
add
outsl
out
in
sub
mov
jle
and
mov
loopne
pop
aam
lcall
fstps
lcall
les
fsubrl
sti
mov
pop
add
clc
adc
jo
mov
loope
aad
stc
xchg
nop
mov
into
dec
jle
and
dec
add
int3
je
mov
jecxz
xchg
aaa
ljmp
call
add
mov
push
incb
push
add
mov
pop
cltd
mov
inc
cmpb
inc
and
mov
mov
and
mov
shl
mov
je
call
fidivrs
mov
mov
cld
xor
lret
dec
int
or
or
xchg
das
push
jge
rorb
clc
sub
inc
add
sti
test
jnp
lds
test
pushl
das
popa
jle
aas
lods
fcmovnbe
fnstcw
jne
mov
lret
pop
inc
das
movsl
add
enter
xor
mov
or
adc
mov
push
xchg
sub
sbb
mov
stos
pop
pop
icebp
dec
stos
push
inc
dec
out
rcrl
xchg
dec
dec
fstl
adc
xor
push
xorb
jbe
aad
xor
sub
test
xchg
inc
dec
out
dec
cld
inc
inc
sub
rorl
fdivrs
fwait
cmpsb
imul
add
out
ret
or
mov
in
ds
xchg
test
push
mov
mov
mov
or
int3
mov
lods
jp
nop
sarl
int3
pop
dec
ljmpw
gs
jae
out
sub
xchg
ffreep
insl
jmp
int
enter
jnp
push
int3
inc
sub
jg
mov
lahf
int
jl
sub
fs
loop
xchg
lcall
in
data16
pusha
push
jnp
fildll
enter
or
inc
push
mov
jae
jge
push
cmpsb
push
popf
outsl
sbb
push
fwait
mulb
pop
das
cli
xchg
aaa
lret
sub
imul
inc
scas
lret
push
jge
stc
adc
cmp
repnz
jb
leave
lea
cs
lea
pop
push
inc
insb
popf
inc
or
out
inc
inc
shrl
or
mov
jno
dec
ljmp
ljmp
rorb
mov
jno
push
cmp
lahf
out
pop
or
jbe
xor
mov
inc
jle
imul
cmp
jno
cmpsb
cmp
int3
or
lcall
outsb
sub
jo
jne
scas
inc
shll
push
mov
sub
loopne
scas
inc
ret
cmp
lods
mov
enter
daa
cltd
loope
push
mov
loope
xor
cmp
mov
in
and
xorl
sub
or
daa
fs
mov
xor
rorl
jbe
mov
pop
popa
js
insl
fcoms
dec
fs
lcall
xchg
fdivl
aas
mov
dec
aaa
jnp
add
cmp
cmp
jg
sbb
mov
jle
and
inc
cli
push
or
or
movl
dec
add
shll
es
xor
sahf
repz
cltd
xorb
jg
int
loop
jnp
stc
cmc
sub
pusha
test
stos
ss
add
fadds
add
cmp
xor
and
add
or
mov
into
xlat
mov
cmc
call
sub
cltd
dec
xchg
adc
inc
or
shll
xchg
adc
cmp
lock
jecxz
lods
xchg
ret
rorb
js
pop
sub
aaa
cmp
in
mov
sar
jmp
scas
pop
iret
gs
inc
inc
loopne
fcompl
mov
out
das
fsts
les
stos
repz
mov
cmp
pop
mov
mov
loop
jecxz
insb
pushf
cld
cltd
ds
cmp
jl
imul
clc
nop
xchg
inc
iret
dec
frstor
dec
jb
and
dec
jp
mov
aam
pop
jecxz
imul
cmp
lea
dec
call
or
mov
loopne
cmp
sub
pop
cmp
cwtl
inc
pop
popa
mov
aas
add
fisttpll
inc
mov
fcmovnbe
inc
je
test
push
int3
sbb
aad
insb
icebp
xor
dec
ret
lret
outsb
sarl
aas
mov
and
xor
aas
sub
lds
push
xor
insl
lods
pop
push
dec
fwait
lcall
jb
sub
xchg
cmpb
inc
out
mov
cwtl
dec
mov
add
shll
jo
add
mov
pop
mov
sub
push
fadd
mov
clc
je
dec
xchg
push
in
sbb
rcrb
pop
ret
inc
cwtl
lcall
dec
lahf
push
sub
setne
add
adcb
js
sub
inc
fisubl
push
fdivrp
dec
xchg
mov
test
call
mov
leave
clc
es
shlb
or
push
sbbb
mov
push
add
ds
int3
dec
mov
xchg
push
jns
mov
xlat
xchg
imull
mov
pusha
push
pop
in
cmp
lcall
mov
xor
mov
sub
sbb
xor
jne
xlat
pop
mov
inc
lret
mov
and
xchg
cwtl
push
movl
push
pop
cmp
jp
mov
aaa
push
stos
out
xchg
push
and
arpl
les
pop
lock
in
in
jae
pusha
in
adc
ret
cli
pop
jo
addb
jae
scas
sub
imul
xchg
mov
fcmovu
leave
ficoml
cmc
xchg
xchg
mov
mov
scas
sub
mov
aad
mov
mov
mov
jg
mov
push
jns
stos
arpl
sub
push
or
popa
add
inc
inc
push
scas
or
or
add
xchg
mov
pop
shll
lea
lds
arpl
daa
ljmp
add
add
lahf
dec
or
push
jmp
divb
fmul
jge
xchg
aaa
sub
push
cmp
js
and
jl
bound
push
loop
xor
arpl
scas
and
scas
push
xchg
aaa
push
stos
cmpsb
or
cmpsb
xlat
adc
in
lahf
outsl
mov
cwtl
jns
daa
cwtl
pop
popf
push
out
push
loope
enter
stos
add
dec
arpl
sub
and
jb
cmpb
dec
sbb
adc
pushf
int
std
adc
rcrb
inc
inc
js
cwtl
mov
mov
pop
lcall
outsl
jns
sub
push
outsb
rcr
adc
push
cmp
mov
sbb
movsb
mov
and
push
adc
int3
sub
mov
pop
add
lret
jl
or
or
adc
outsl
sbb
lret
xchg
outsb
pop
test
orb
xlat
loop
cmc
and
lods
std
shlb
loopne
pop
sub
ss
leave
jecxz
lods
sbb
fadd
idiv
or
fwait
sub
not
scas
cmp
adc
or
into
mov
mov
xor
out
fwait
outsl
js
mov
pushf
imul
lret
adc
jle
add
sub
jns
sub
idivl
out
adc
in
mov
divb
ds
shlb
movsl
incl
mov
sub
and
adc
mov
inc
les
repz
and
dec
lret
sub
or
shrl
xlat
jns
cmpsl
pop
push
std
adc
add
imul
fildll
rcl
das
push
nop
insl
cmp
in
pop
jb
das
add
jge
je
mov
xor
lea
mov
inc
mov
and
adcl
mov
addl
xchg
movsb
cmp
mov
cli
fwait
repnz
mov
rcll
popf
dec
std
fldl
mov
dec
lods
mov
or
pop
cld
test
xor
fnstsw
mov
cld
mov
cwtl
sbb
lock
adc
adc
or
lock
mov
aam
pushf
call
es
push
sub
stc
dec
dec
xchg
cmp
jo
in
shll
pop
cmp
xor
mov
pop
addr16
pushf
ficompl
xorb
cltd
stc
out
push
test
call
push
fwait
pop
rcr
sarl
adc
xchg
test
lahf
jecxz
outsl
loope
pop
mov
fldt
xchg
pop
test
add
xor
hlt
and
or
xchg
fidivs
andl
pminub
ljmp
aas
pop
cmp
mov
test
or
sbb
add
dec
push
push
addr16
add
mov
imul
mov
mov
mov
adc
sti
pop
mov
lahf
test
ja
mov
push
mov
cld
cmpb
in
sub
inc
jne
sub
out
out
adc
test
jmp
arpl
jnp
pop
push
dec
sub
jne
dec
notl
stos
bound
insb
lods
bound
jnp
jle
jle
mov
fisubs
pushf
fbld
mov
lods
and
pop
cmpsl
xor
inc
push
ret
and
push
sub
arpl
fimuls
push
sbb
fcmovb
outsb
cld
xchg
in
nop
rcrb
imul
or
iret
jmp
jbe
pop
mov
sub
insl
hlt
les
fldl
inc
cmpsl
or
sahf
inc
mov
sub
add
xchg
int3
and
pop
lock
xchg
fidivs
rcl
vmovhpd
inc
xchg
mov
xchg
cmp
push
xchg
mulb
mov
jbe
cli
push
jge
in
xchg
sbb
fwait
aaa
jmp
pop
pop
jno
and
jl
mov
dec
xchg
inc
dec
push
xor
mov
sub
push
pop
imul
jbe
push
inc
loope
lcall
cld
pop
enter
daa
xchg
push
outsl
push
jecxz
loope
xor
out
aam
mov
ds
enter
cmp
and
lock
cmp
adcb
sbb
cli
std
xor
pushf
mov
pop
out
xor
push
sbb
leave
cli
mov
fwait
mov
cld
sub
popa
cmp
push
sbb
and
sub
jl
js
stos
push
scas
and
inc
lahf
push
adc
int
jl
sub
push
lret
in
shll
xchg
sbb
scas
sahf
cmp
push
subb
aas
loop
mov
fs
pop
adc
stos
ss
add
jl
sbb
mov
inc
iret
xor
lods
cmp
inc
popf
rorb
shl
jl
popf
add
lea
dec
xor
mov
push
cmpsl
mov
imul
adc
add
loop
lods
pusha
jmp
mov
push
jbe
fisubrs
sbb
stos
mov
popa
add
sti
dec
cltd
clc
cmc
roll
and
loopne
adc
inc
ss
fld
pop
add
outsl
mov
repz
mov
into
sbb
cld
or
xlat
mov
outsl
jns
xchg
add
jmp
inc
mov
aad
popa
xor
fwait
mov
stc
dec
push
cmp
pop
mov
ja
and
pop
xor
jle
insl
mov
sbb
subl
ret
inc
fildl
hlt
lret
inc
adc
std
cmpl
pusha
sahf
dec
mov
mov
mov
testb
std
fnsave
ss
insl
mov
cmp
clc
icebp
jecxz
xchg
cld
scas
lock
dec
incb
mov
mov
adc
out
add
rol
loop
sub
fs
test
xchg
es
jb
jp
ss
xchg
je
cmpsl
xchg
out
ljmp
scas
lods
sbb
fdivrl
fisubrs
and
fwait
add
fildl
pop
scas
cmp
test
movsb
mov
cmp
push
pop
pop
test
cli
shrb
sub
xchg
call
and
push
popa
stos
and
xlat
xchg
and
push
fisttps
xor
mov
or
adc
popf
push
lds
adc
sbb
push
dec
test
mov
jb
scas
or
inc
out
push
pop
or
divb
xor
mov
or
push
add
add
decl
fcompp
bound
lods
cmpsb
in
mov
push
mov
pop
inc
lret
ja
cli
jbe
call
call
clc
mov
push
mov
sets
jne
loope
mov
pop
out
movb
xchg
pop
test
mov
jg
subl
fmul
shrl
jo
jg
div
mov
test
sbb
mov
sbb
scas
mov
jb
xchg
ss
stos
pop
fidivs
mov
xchg
imul
xchg
mov
in
or
push
pop
cmp
fidivl
pop
xchg
cmp
mov
test
fsubrs
loop
scas
repz
push
pop
adc
mov
push
iret
dec
cmpsl
or
pop
loop
leave
mov
pop
mov
adc
imul
ds
add
int3
stc
push
add
add
int3
or
sbb
fisttps
push
and
pop
jns
rcrb
mov
sub
cmp
add
push
mov
adc
mov
jge
aaa
cltd
sbb
cmpsb
clc
aaa
test
cs
add
jl
fucomip
dec
add
lea
test
cwtl
xor
sbb
arpl
sub
inc
mov
inc
jo
out
cmpsb
fldl
in
insl
insl
sub
mov
xor
xchg
fsubr
push
mov
sub
xor
int3
push
jo,pt
dec
movsl
xchg
out
and
and
scas
add
andb
int3
ljmp
fwait
addr16
lea
js
test
pop
or
push
repnz
xor
sub
sbb
outsb
sub
unpckhps
pop
cmpsb
ror
pusha
pop
popl
mov
mov
rcl
mov
sarb
rcl
int
mov
sub
les
out
lret
mov
cmp
adc
movsl
sahf
fdivr
fwait
test
xor
les
jg
and
loop
test
stc
sbb
mov
mov
mov
cmp
aaa
push
sbb
cli
add
lds
movsl
stos
sbb
cli
dec
or
jecxz
subb
cmc
push
and
xor
fstps
adc
or
adc
popf
add
lea
in
mov
out
push
and
fsubs
in
int3
cmpsb
mov
clc
loopne
sbb
push
gs
into
loopne
leave
aam
push
inc
roll
mov
stc
sub
int
out
xchg
enter
adc
js
cmc
cmp
test
mull
shl
test
call
in
jmp
icebp
int
movsl
inc
not
jne
out
and
dec
cli
xchg
add
loop
dec
fistpll
mov
pushf
jecxz
fimull
notb
add
adc
cmp
mov
lds
mov
add
pop
and
outsl
into
inc
imul
aas
loop
add
push
xlat
repnz
xor
or
test
cwtl
xchg
inc
mov
mov
sub
mov
push
inc
mov
mov
fsubrs
into
cmp
rclb
or
aam
inc
rol
aaa
adc
es
cmc
dec
insl
popa
fisttpl
cmpsl
xchg
sub
lret
add
popa
fidivl
lods
xchg
fnstcw
add
mov
adc
addl
dec
inc
add
jle
addr16
test
sti
mov
es
and
outsb
frstor
dec
jno
and
xchg
sbb
push
daa
rcrl
sub
stos
adc
jbe
pop
jb
xchg
stos
push
push
mov
enter
push
or
bound
xor
ljmp
xchg
int
dec
movb
xchg
and
inc
test
fwait
bound
popf
add
push
subb
mov
sbb
xchg
in
sbb
dec
xchg
pop
pop
adc
mov
cmpxchg
clc
pushf
mov
ja
outsl
dec
repnz
pushl
movsl
fsts
mov
out
stc
xchg
out
cmp
clc
out
mov
sub
imul
cmc
pop
sbb
and
in
push
insb
andb
jle
cmp
in
repnz
pusha
mov
out
ret
int
adc
subl
mov
sti
popf
or
push
xchg
scas
pusha
fisubrl
jle
xchg
xchg
les
sbb
add
scas
push
inc
add
out
adc
jge
repnz
outsl
xchg
leave
sbb
hlt
pop
push
scas
arpl
out
mov
or
rorb
inc
mov
jle
add
lea
pop
dec
inc
popf
fidivs
sbb
fistpll
mov
js
mov
mov
push
shll
nop
mov
mov
mov
data16
sbb
cltd
lret
push
idivb
or
jno
xor
jl
fcmovnu
dec
jae
jnp
mov
xor
je
stos
scas
mov
popf
mov
push
or
pop
inc
ljmp
pop
in
push
ret
mov
xchg
push
out
loope
jne
sub
mov
cmp
ds
shlb
sub
xorb
sbb
mov
add
mov
xor
pop
addb
xor
mov
mov
adc
div
and
outsb
outsl
sti
adc
cmpsl
adc
loope
sbb
cwtl
fnstsw
and
pop
sub
sbb
js
xchg
stos
or
jge
or
sbb
mov
jo
sbb
mov
jg
repz
push
loope
fildll
jg
repz
add
jns
mov
adc
or
dec
ss
aaa
cmp
repnz
jg
ss
mov
xor
cmp
sub
or
inc
ret
cmc
sbb
xor
in
outsl
adc
adc
imul
jmp
mov
call
cmp
sub
and
mov
aaa
sbb
xor
cmp
gs
xchg
aas
pop
xor
es
fnstenv
mov
sub
xchg
xchg
pusha
outsb
sbb
jb
cmp
sbb
adc
insb
cwtl
pushf
test
imul
fs
ds
cltd
nop
mov
jne
xlat
mov
dec
push
repnz
je
ss
jl
jb
stc
inc
inc
repz
call
jl
sahf
mov
sbb
dec
in
adc
frstpm(287
mov
inc
inc
and
mov
xchg
andl
mov
iret
jl
sarl
insl
not
mov
cwtl
inc
dec
mov
aaa
inc
mov
xchg
mov
cld
add
dec
sahf
mov
mov
and
das
lods
jno
shrb
imul
imul
sbb
insl
dec
and
cmpsl
xchg
icebp
ds
mov
mov
and
fisubl
rcll
pop
fstpl
cltd
sahf
push
push
test
sahf
mov
push
adc
fisttpll
xchg
clc
pusha
stc
or
nop
cmp
int
mov
pop
stos
add
xchg
scas
cmp
aaa
movups
cmp
int3
jmp
or
xor
cmp
xor
sub
movl
sbb
lods
or
cmp
push
cmpsb
popa
add
insl
push
sub
dec
jge
bound
jb
lods
sub
xor
fnsave
cmc
outsb
push
ja
add
mov
mov
out
or
iret
mov
mov
ds
test
xchg
incb
adc
cli
incb
loop
loope
mov
add
cmp
xlat
sti
je
in
pop
dec
jnp
jnp
jle
jmp
push
pusha
pop
fs
stc
repz
mov
inc
mov
test
jne
jb
xor
cs
cmpsl
fcmovu
adc
xchg
ljmp
imul
sbb
loopne
xchg
adc
iret
or
repnz
and
hlt
movsl
test
pop
inc
jnp
sti
or
dec
loop
inc
cmp
ret
mov
add
push
fmul
loop
pop
pop
jge
cmp
lds
out
rclb
sahf
and
jne
jnp
mov
push
daa
jnp
jbe
or
sbb
mov
lock
outsb
mov
fwait
stos
jecxz
loop
add
xor
iret
pop
cmp
push
roll
test
xlat
mov
test
jecxz
popa
in
cmp
sbb
test
sahf
push
cmc
jns
cld
dec
ret
sub
or
ds
sbb
and
inc
xchg
lahf
in
cmpsb
insb
orb
mov
out
or
xor
leave
and
inc
imul
or
xchg
setp
push
mov
lods
popf
sub
fnsave
repnz
adc
adc
popl
bound
jle
and
sub
push
sbb
or
sub
push
lret
or
mov
mov
outsl
sahf
and
test
test
cwtl
nop
loop
jecxz
stc
mov
push
adc
out
ss
cmp
lods
sbb
div
sbb
cli
addr16
lock
nop
cmp
xor
push
stos
fmul
inc
push
mov
xor
dec
stc
adc
push
sub
popa
fcoml
into
ljmp
jno
adc
ds
out
movsl
pop
sub
pop
mov
mov
mov
sbb
jecxz
loopne
ja
pop
push
fs
inc
outsl
notb
les
sbb
xchg
push
and
out
lods
cs
pop
and
adc
nop
jne
push
xchg
in
imul
aad
dec
mov
dec
mov
gs
dec
int
sbb
aam
mov
icebp
cld
out
lea
jle
or
fcmovb
sti
mov
in
mov
rcr
adc
cmp
inc
stos
ret
mov
jne
mov
repnz
jbe
ror
or
push
mov
std
rclb
mov
add
lock
icebp
push
and
mov
call
lock
imul
cmp
stos
sub
cmp
push
popa
aas
movsl
data16
dec
and
xchg
cmpsl
xchg
cmp
ljmp
sub
mov
inc
mov
push
mov
cld
icebp
and
xchg
push
cltd
aad
xchg
test
cmp
and
stos
push
cmpsl
sub
clc
fwait
mov
fcomps
inc
ficompl
pop
pop
inc
sub
and
xchg
cmc
xor
push
jo
push
pshufw
pop
aam
or
ret
adc
into
int3
mov
sbb
mov
test
jl
xchg
mov
dec
mov
inc
mov
mov
mov
rolb
dec
mov
add
rcl
fdivrp
sbb
fbld
sub
xchg
adc
mov
mov
dec
pop
mov
fnstenv
shll
mov
sbbl
push
shll
fsin
jne
pop
repz
outsl
xlat
out
arpl
cmp
xchg
mov
sbbl
jb
gs
sub
popa
pop
mov
repz
stos
cs
hlt
insb
pop
cmp
jnp
lods
fnstcw
mov
les
stos
movhlps
clc
xchg
cltd
pop
addl
inc
xchg
fcomip
jae
mov
inc
popf
pop
pushf
sti
mov
adc
pop
sub
test
fdiv
scas
sbb
push
daa
mov
ja
addr16
push
mov
hlt
lock
into
arpl
jo
inc
jle
sub
push
fisubrs
push
mov
movsb
test
int3
int
mov
fidivrs
jbe
scas
ret
add
jecxz
and
xor
mulb
test
jge
outsl
clc
sbb
mov
in
mov
outsb
daa
imul
fdivrl
mov
push
push
cmp
sbb
popf
jo
push
fs
cmpsb
mov
adc
ds
sbb
jmp
in
and
pop
enter
daa
xchg
jae
push
mov
movsb
sub
xor
xor
lahf
or
sbbb
pushf
add
mov
add
iret
js
pop
ficoml
lds
lcall
jbe
xor
aad
out
jo
push
inc
push
rcrb
jns
lahf
cs
sbb
mov
neg
and
jnp
push
pop
cmpsl
and
sub
mov
lret
test
test
push
sbb
sub
sahf
lds
test
rclb
aaa
lahf
aam
daa
popa
jle
aas
mov
mov
aas
or
test
and
fsubrs
divl
xchg
sub
cmp
or
or
pop
int
test
dec
inc
outsl
rorl
insb
imul
sbb
cmpsw
push
lods
cld
ljmp
jb
sub
mov
or
push
push
incb
xchg
cwtl
loopne
imul
cmp
fstps
lret
or
pop
shrb
in
outsb
mov
call
adc
jmp
fs
pushf
mov
mov
into
out
aad
push
mov
mov
add
daa
push
jb
je
dec
inc
leave
lret
je
cmpb
lcall
shl
call
jp
fimuls
test
push
fildl
repnz
push
mov
mov
aas
mov
nop
cmpl
ret
jmp
negb
lods
std
jns
push
cwtl
mov
dec
mov
adc
pop
or
icebp
aas
dec
mov
lret
or
push
mov
sbb
lock
jno
das
imul
rorb
adcb
jnp
adc
xchg
push
es
add
pop
inc
dec
jge
in
xchg
or
and
cwtl
popa
pop
mov
lods
enter
xchg
arpl
mov
sub
lret
je
pop
sbb
add
jl
test
test
push
inc
fstl
adc
xchg
imulb
movsb
shll
out
mov
stos
ficoms
test
dec
mov
test
jb
insb
or
cmpsb
xor
mov
mov
and
les
pop
iret
test
push
cmp
jnp
in
dec
jne
or
mov
fwait
out
inc
lret
fisttps
add
sub
bound
jns
cmp
addr16
push
xchg
sarl
into
mov
inc
repz
ja
and
mov
mov
xchg
out
mov
fwait
xlat
insl
jne
movsb
jle
push
mov
out
inc
lock
cwtl
cmp
xchg
pop
movb
movsl
out
and
sub
pop
dec
xchg
repnz
bound
add
inc
iret
jnp
mov
cmp
lret
cmc
sti
pusha
mov
filds
sub
or
mov
inc
mov
insl
pop
push
sti
movsl
movsb
popf
cmpb
add
and
fiaddl
dec
xchg
cwtl
cmp
sbb
std
mov
mov
scas
jg
notb
xchg
test
and
iret
sbb
cmpsb
dec
xor
hlt
cmp
arpl
push
sbb
adc
mov
inc
cmp
jno
cwtl
inc
sbb
int3
mov
jmp
pop
jmp
lds
ror
enter
in
and
sbb
movsb
sub
cltd
push
lds
sbb
pop
xchg
jge
dec
sti
sbb
sbb
jno
push
mov
dec
rcr
push
xor
cmp
test
ljmp
jns
je
idiv
call
pop
inc
lods
in
jmp
sbb
enter
daa
xchg
add
push
xor
loope
addr16
das
inc
cmp
mov
movsl
lods
xchg
lahf
sub
xorb
out
add
mov
lret
adc
pop
stos
jne
js
mov
gs
sbb
fidivrs
push
outsb
mov
loopne
sarb
pushf
add
sbb
mov
fidivrl
and
or
int
cmpsl
fildll
add
add
lret
std
rcll
sbb
mov
sahf
push
or
xor
nop
jg
jp
loop
adc
sub
inc
xchg
ss
repnz
fsubs
xor
divl
je
int
pop
xor
or
or
lods
in
into
or
es
jo
sbb
cmp
ljmp
mov
adc
in
mov
lock
out
sub
lods
jecxz
add
jno
sub
mov
in
js
mov
mov
cmp
test
iret
lods
data16
je
pop
xchg
cwtl
and
xor
sarb
repz
sbb
and
or
pop
pushf
sbb
jecxz
test
dec
xchg
cs
aad
xor
nop
mov
pushf
jb
mov
dec
mov
cmpsb
mov
test
mov
add
stc
or
sbbl
cmp
jb
or
mov
jl
mov
in
sarl
pop
stos
into
mov
inc
imul
and
gs
insb
out
negb
mov
jb
cmp
add
mov
push
in
cld
xchg
test
and
stos
lcall
xor
shl
imul
jb
dec
aam
mov
es
cmpsl
icebp
insl
std
dec
xchg
dec
js
cltd
cmpsl
xchg
pop
fwait
ljmp
and
mov
lea
and
mov
test
add
test
test
cmpl
adc
pop
xchg
and
repz
sub
pop
mov
out
int
mov
xchg
orl
lcall
lds
or
in
inc
mov
and
cli
test
ret
add
outsb
mov
or
mov
push
push
cmp
add
mov
mov
add
mov
in
ret
and
in
lea
fs
add
jge
out
pop
mov
lahf
or
mov
jle
cmp
push
dec
add
and
push
ja
and
fcmovnbe
xchg
and
adc
ds
push
leave
pop
addr16
iret
inc
stos
adc
and
adc
jnp
pop
mov
test
in
mov
mov
and
ret
add
mov
fidivs
jnp
push
mov
cmp
mov
xchg
test
or
xchg
out
std
ja
decl
imul
test
mov
rclb
cli
sub
repnz
lods
adc
idivb
push
hlt
xchg
or
sbb
lods
push
mov
lcall
mov
jb
fiadds
xor
sti
cmp
shl
in
mov
or
xchg
cmp
xor
mov
sub
push
sbb
xor
arpl
lahf
cmp
ret
in
jno
std
ret
jl
adc
dec
das
adc
xor
loopne
nop
scas
cmp
push
test
cmp
cld
cmpsb
insb
mov
dec
enter
daa
xchg
sbb
push
pop
std
loope
stos
popf
sub
add
cmp
mov
and
lock
ret
fistpl
filds
add
adc
mov
fwait
js
out
pop
pop
inc
push
cs
fmull
ds
sbb
fcoml
adc
mov
mov
mov
imul
push
and
sub
jge
movsl
pop
jns
xor
out
dec
shrl
mov
dec
sbb
lods
scas
sahf
or
lahf
orb
jg
pop
mov
stc
lods
mov
fs
mov
das
in
cmp
ficomps
nop
divl
rclb
xor
mov
jecxz
imul
cmp
inc
xor
sbb
adc
inc
imul
pop
lret
lods
mov
add
jo
cmc
sub
dec
mov
in
jecxz
mov
arpl
cmc
inc
mov
notb
push
inc
test
jno
or
clc
les
xchg
lahf
sub
repz
pop
test
xor
pop
dec
sub
adc
inc
jge
and
jns
xchg
cs
fdivrs
dec
aad
pusha
jb
das
aas
dec
xor
sbb
jmp
mov
mov
call
js
stos
mov
pop
dec
cltd
pushf
jnp
mov
xor
inc
aas
lods
mov
repnz
aas
std
lret
rol
mov
and
pop
outsb
sarl
addl
jge
cwtl
sub
cli
js
insl
pop
mov
cld
mov
mov
out
cmp
or
pop
mov
mov
and
sub
shlb
mov
lods
adc
add
imul
in
jae
jae
cmc
cmpsl
nop
xor
mov
dec
cmp
mov
mov
insl
and
cmp
or
add
stc
mov
test
sbb
add
stc
clc
dec
sub
bound
sbb
rcl
mov
pop
pop
pop
xor
dec
dec
cmp
add
out
xor
lds
xor
dec
xor
jp
mov
es
dec
dec
leave
pop
mov
mov
sub
add
or
lea
fwait
dec
mov
push
fucomp
xor
fldcw
mov
jmp
bound
aad
in
lea
outsl
inc
dec
mov
leave
cwtl
mov
mov
dec
mov
sbb
mov
arpl
pop
mov
mov
scas
fwait
jne
pop
call
out
add
cmp
xchg
lock
add
stos
out
add
sub
push
fnsave
stos
xchg
and
pushf
cwtl
insb
cltd
shll
mov
and
pop
pusha
les
stos
ret
jmp
inc
mov
int3
jae
int
push
and
dec
mov
shlb
jbe
inc
out
sbb
je
imul
mov
cld
cmpsb
int
fmuls
insb
repnz
outsb
leave
insl
adc
hlt
sarl
out
inc
cs
inc
xchg
cltd
or
cmp
inc
cmp
mov
jle
cmpsl
add
out
mov
fisubs
divb
sar
and
pushf
push
mov
movsb
inc
aad
push
arpl
push
jbe
ja
jge
stos
jne
mov
leave
aaa
and
push
jno
leave
pusha
jl
xor
dec
sahf
or
push
cli
xchg
xor
cmp
sub
lods
push
test
add
inc
lret
cmpsb
out
test
in
xlat
pop
enter
daa
nop
mov
push
cmp
sub
cmpsb
mov
push
mulb
mov
lahf
push
mov
push
inc
pop
add
mov
and
push
nop
jge
clc
dec
jmp
pop
add
lcall
inc
fdivl
and
mov
ljmp
cs
adc
out
mov
mov
pop
pop
mov
mov
mov
and
lods
movsb
push
sub
lcall
and
lret
adc
ret
pop
xor
imul
ljmp
int3
addl
loopne
arpl
mov
pop
adc
dec
jp
in
jbe
cltd
xchg
and
cli
xor
mov
scas
xchg
xchg
cmp
lea
or
mov
jo
dec
add
outsl
jo
inc
adc
cmp
fstl
push
pop
clc
add
cmpsl
data16
insl
mov
ds
out
jne
sub
sbb
mov
fstps
sti
adc
push
loopne
shll
mov
jge
les
xchg
shl
bound
sarl
cltd
jae
xlat
jno
jmp
add
das
adc
out
pushf
call
dec
jmp
or
fs
stos
xor
xor
xchg
jb
fcmovb
dec
test
jmp
jecxz
mov
out
mul
mov
negl
hlt
orl
in
fcmovnbe
or
pop
mul
sub
sbb
or
out
xlat
mov
mov
shll
push
rorl
jecxz
mulb
pop
lret
std
outsb
xchg
xchg
cwtl
call
mov
mov
les
cld
fcoml
lret
push
icebp
pop
mov
xor
sar
pop
lock
lret
mov
sbb
pusha
fs
aam
and
es
jne
lret
loopne
dec
outsb
and
loopne
jge
imul
sub
mov
aas
aaa
stc
mov
js
xchg
add
out
cltd
mov
xchg
test
inc
xchg
push
mov
dec
fisttpll
aad
clc
xchg
rcrl
andnps
shll
or
pop
or
stos
in
out
scas
mov
adc
sub
ret
repz
sbb
or
pop
lcall
out
dec
xor
pop
xchg
dec
fisttpll
js
inc
jb
imul
pop
inc
add
hlt
es
jmp
mull
xchg
scas
jns
sbb
xchg
mov
push
mov
ja
and
jp
lret
divb
xchg
mov
pop
push
dec
inc
mov
mov
std
mov
xchg
sbb
add
pop
adcl
out
mov
or
addr16
ret
jmp
and
cld
insb
add
sarl
sbb
jle
xchg
inc
in
jl
pusha
pop
inc
pop
fistps
mov
pop
pop
push
ja
ret
jae
arpl
inc
mov
popf
cmc
insb
mov
push
adc
loope
popf
repnz
fsubr
scas
test
aas
push
inc
adc
xlat
or
leave
in
sub
sbb
test
dec
mov
test
stos
xor
jle
inc
mov
jge
jno
push
add
fildl
dec
sahf
lds
adc
rcrb
adc
das
mov
movsb
lret
enter
or
jge
xor
sbb
aaa
loope
xor
cmp
imul
sub
fstp
stc
xor
xchg
xor
divl
sbb
pop
lahf
test
into
jge
inc
pop
adc
cmpsb
jb
xchg
in
mov
push
lods
daa
iret
xchg
push
into
xor
outsl
pushf
lret
sub
and
cmp
ds
movsl
ret
and
sti
movsl
lahf
xchg
lahf
sub
nopl
push
and
arpl
pop
pop
xchg
mov
pop
shl
lcall
mov
mov
outsb
loope
fsts
leave
fcmovb
sbb
addr16
sub
arpl
out
and
int
xlat
shrl
jae
hlt
pop
ja
mov
int
jle
pop
outsb
and
aas
lahf
sahf
push
jo
test
inc
mov
mov
pop
loop
pop
insb
stc
sbb
shll
adc
in
ss
push
cmp
push
cmpsb
cmp
mov
xor
data16
xchg
or
mov
mov
shl
outsl
fnstenv
dec
add
or
pop
fcmovne
imul
add
cmpsb
lods
cwtl
sub
out
jae
sub
aad
mov
inc
cmp
imul
in
xchg
loopne
push
xchg
pop
out
test
fnstcw
xor
pop
jnp
xchg
pop
cmp
sbb
aam
sub
mov
pop
pop
mov
jno
dec
push
fistps
adc
cs
lahf
xchg
data16
call
xchg
rcrb
jb
mov
aaa
je
or
or
lea
pop
call
jbe
xchg
loopne
fisttpl
ja
ljmp
pop
lcall
inc
sub
sbb
cmp
lea
imul
rcrl
inc
mulb
or
adc
loope
mov
repz
fwait
or
pop
mov
lret
les
clc
mov
mov
ss
out
mov
sub
icebp
aam
in
rol
and
dec
es
imul
mov
imul
aad
lock
jnp
push
lods
je
les
idiv
shlb
and
add
pop
cmp
test
adc
push
jbe
call
clc
ret
xchg
loopne
and
ret
sarl
and
adc
adc
jo
mov
xchg
cmovnp
add
push
in
xor
or
dec
xchg
icebp
xchg
test
add
mov
dec
dec
inc
jl
inc
cmpsb
and
lret
fwait
stos
ficoms
push
and
movl
add
aas
jns
add
xchg
push
lock
or
jle
mov
xor
pop
ja
mov
and
mov
push
ja
mov
cmp
dec
daa
push
leave
jne
cmpsl
stos
mov
xchg
hlt
out
mov
push
jmp
xchg
and
outsb
out
mov
sub
dec
shl
out
orl
insl
jnp
and
mov
outsl
scas
lds
and
out
mov
cli
rcpps
jle
mov
pop
xchg
stos
imul
xor
pop
stc
pop
popf
sbb
dec
mov
push
dec
sbb
hlt
and
imul
scas
or
mov
adc
lret
repnz
dec
leave
pop
stos
daa
hlt
addr16
arpl
inc
inc
lea
mov
lea
or
add
sbb
xchg
pusha
mov
jmp
or
nop
xchg
xlat
shlb
sub
ret
cmp
es
movsb
push
adc
push
add
push
jge
pushf
lret
sbb
je
aaa
mov
je
jno
iret
sbb
popf
lock
dec
jl
mov
shrb
xor
icebp
lret
test
push
lds
fistl
adc
dec
in
cmc
adc
mov
mov
mov
push
push
mov
sub
insl
jnp
and
sub
movsl
leave
data16
rorl
cmp
fstpl
test
add
or
adc
fstpt
pusha
or
add
call
fmull
sbbl
cld
stc
cmp
movsb
pop
lods
jp
jg
xor
and
mov
mov
and
sbb
int
add
sub
das
add
testb
lret
ret
mov
les
ret
scas
mov
test
loopne
jg
adc
loop
loope
stc
shlb
pop
xlat
fwait
adc
jae
cmp
cmovnp
cli
cltd
icebp
hlt
xor
and
mov
or
mov
sub
test
sbb
or
fiaddl
sub
repz
adc
sbb
add
add
lods
jg
inc
mov
mov
out
cmc
add
daa
int3
mov
in
and
in
and
mov
jo
ja
xor
gs
push
loopne
pop
or
xor
loope
fnstenv
cmc
repz
call
out
cmp
push
inc
xlat
out
xchg
push
dec
repz
push
jb
jmp
loopne
cs
mov
nop
sti
dec
jbe
repnz
divl
int
dec
xchg
sbb
or
sub
push
inc
in
les
call
cmc
cmp
mov
lds
pop
mov
fldt
mov
cmp
sbb
inc
loope
aas
fiaddl
mov
cltd
mov
pushf
xor
shrl
imul
cwtl
pop
sub
jg
cmpl
cmpsl
sub
xor
xor
xor
pop
fcmove
lock
das
outsl
jle
sbb
dec
dec
xchg
aam
or
ret
scas
test
es
outsl
insl
cltd
add
dec
fldenv
jmp
arpl
popa
xchg
nop
xchg
lods
ffreep
outsl
mov
sbb
push
and
push
inc
jecxz
mov
daa
add
pop
xchg
cltd
pop
or
push
mov
sbb
push
cmp
repnz
gs
std
jp
xchg
pop
mov
sbb
xor
aad
dec
pop
pusha
popa
or
jne
mov
xchg
cmp
xor
adc
xchg
xor
sbb
mov
push
xchg
in
dec
adc
test
inc
and
cmp
or
pop
fisubrl
out
push
push
mov
jmp
xchg
sarb
adc
push
in
xchg
pop
sbb
mov
in
aam
ja
imul
mov
fnstenv
fldl
mov
inc
mov
sbb
jne
loop
mov
cmp
out
popf
jne
xchg
ret
mov
jmp
push
add
out
and
inc
xchg
sbb
movl
dec
daa
insb
fcmovu
add
jmp
jle
push
and
out
lret
xchg
repnz
fistps
push
test
inc
fcomp
ret
jae
pop
sub
lret
popf
inc
sub
repz
loope
fcmovb
fistl
dec
ja
sbb
ffree
imul
scas
outsb
xchg
lods
push
shll
push
adc
or
mov
sub
leave
shrb
hlt
mov
arpl
push
inc
inc
nop
mov
xor
stos
das
xor
mov
rorb
push
negb
inc
js
int3
dec
xchg
aam
loop
fimuls
jnp
rclb
mov
push
sub
cmp
movsb
loope
fcoml
push
daa
jbe
or
nop
jmp
sbb
lock
or
enter
jmp
xchg
push
mov
push
out
dec
jns
scas
mov
pop
push
cwtl
mov
test
fs
pop
cmpsb
js
movsl
in
mov
enter
daa
lea
das
loope
push
scas
sub
idivl
aam
clc
ds
rorl
pop
ss
lahf
orb
nopl
mov
xor
jl
lcall
js
nop
sbb
aas
fildl
dec
clc
jle
add
imul
cmpsl
push
sub
stos
fstl
jg
data16
fnstcw
xlat
mov
add
gs
xchg
inc
inc
push
xor
and
imul
xadd
and
sbb
loope
sahf
xchg
and
aam
mov
sbb
add
loop
xchg
mov
fs
xor
test
cmp
jmp
fmul
subl
int3
push
xor
xchg
cmp
test
daa
lcall
push
in
xor
pop
jnp
or
push
xchg
adc
cli
das
add
or
mov
insb
sti
dec
sub
rcrl
pop
fisubl
gs
sub
pop
sub
push
jg
call
rorl
xor
mov
cmp
scas
xlat
cs
scas
pop
sbb
adc
scas
negl
jo
cs
addr16
leave
das
nop
pop
call
jb
adc
dec
push
scas
mov
jecxz
jnp
adc
lea
dec
call
je
lock
roll
inc
push
inc
pop
loopne
les
mov
inc
pop
rolb
mov
xlat
mov
and
jns
shl
iret
add
std
arpl
mov
sbb
jge
ds
mov
dec
repnz
pop
ljmp
xchg
add
mov
pusha
push
lock
xchg
push
das
movsl
enter
or
inc
ss
dec
jg
ret
ds
cmp
xchg
dec
pop
data16
mov
bound
cmc
stos
lods
dec
iret
push
mov
push
mov
mov
aad
int3
add
out
cltd
push
dec
push
test
leave
insl
inc
push
cld
test
clc
cmp
xchg
pop
daa
xor
sub
mov
sub
leave
pop
or
cwtl
stos
js
test
fdiv
aam
out
in
insl
cwtl
js
or
fiadds
xor
not
mov
xor
dec
dec
gs
test
xchg
fldl
sub
sar
or
sub
mov
add
inc
xchg
lcall
shlb
stos
xchg
mov
mov
test
cwtl
ja
rorl
jp
sub
mov
fidivl
mov
out
in
into
jbe
aaa
orl
jl
es
xchg
sub
jmp
sbb
mov
out
cmp
sub
ds
mov
stos
push
dec
lret
and
fstpt
jnp
jns
jle
mov
test
jmp
mov
jge
lea
rcr
inc
jecxz
outsl
jae
mov
out
push
jns
addr16
outsb
push
into
stc
dec
fidivl
xchg
mov
push
inc
imul
shrl
dec
adc
iret
add
pop
leave
dec
jb
std
or
xchg
inc
das
or
and
jo
or
mov
fisubrl
pop
pop
cmc
sub
lds
outsl
inc
mov
call
ss
movsb
insb
fwait
jmp
lahf
pop
xor
jge
push
jge
ja
sbb
push
xchg
ss
sbb
jl
cld
jg
pop
pushf
mov
xor
cmpsl
cmp
push
imul
push
das
pop
fildl
cltd
push
cmpsb
sti
push
pop
in
jae
or
mov
imul
adc
sbb
or
ds
dec
mov
and
icebp
test
and
aam
repnz
adc
inc
lods
lods
xor
negl
js
stos
rclb
jle
mov
add
mov
fsub
shrl
outsb
or
rcrb
mov
mov
fdivl
and
and
je
int
or
sub
shlb
bnd
cmpsb
mov
rorl
fyl2x
sahf
cmp
inc
test
dec
ret
hlt
shl
sub
pop
stc
inc
add
adc
ljmp
sbbl
imul
clc
sub
out
lret
xor
push
mov
push
sub
into
pop
and
or
pop
pop
adc
in
mov
or
cltd
and
sub
add
andb
mov
mov
test
mov
cli
mov
sti
into
leave
jp
jbe
gs
imul
xchg
addb
js
pop
addb
add
add
push
lret
clc
and
insl
mov
pop
into
out
pop
adc
pop
pushf
stos
pop
cmc
jmp
les
aad
inc
jb
mov
inc
dec
mov
dec
jb
pusha
dec
test
dec
je
fs
jecxz
cmpsl
fs
adc
rorb
loop
push
repz
mov
inc
pop
in
movsl
icebp
iret
dec
xor
test
mov
cltd
inc
loop
cmp
rcr
aas
sbb
pop
mov
mov
psrlq
shl
cs
add
cwtl
aam
or
std
or
insb
jb
icebp
and
cld
mov
and
adc
out
ja
or
push
fs
test
push
sub
and
adc
lock
int
xchg
mov
mov
dec
pop
stc
cmpsb
cmpsl
mov
popa
sarb
mov
pop
mov
pop
sub
and
inc
mov
pop
hlt
sub
cltd
lea
daa
test
imul
mov
add
clc
jae
mov
sbb
pcmpeqb
addl
stos
addr16
lahf
out
cmp
aad
sub
pop
adc
xor
out
xor
sub
mov
xor
sti
subl
and
sub
loopne
or
daa
rcrb
or
mov
add
sar
fisttps
xchg
push
pop
in
outsb
icebp
xchg
cli
push
ds
jae
mov
arpl
ja
mov
xchg
xor
dec
sarb
jne
add
mov
jnp
pop
sub
mov
xchg
out
in
adcl
mov
cmp
sub
stos
mov
and
scas
sbb
jle
jecxz
in
test
pusha
lret
repz
fistl
ret
call
inc
out
ja
jae
bound
popf
xchg
jge
mov
or
sti
and
stc
mov
imul
scas
xor
jae
pop
sub
iret
pop
mov
out
shl
hlt
dec
push
cmpsl
arpl
inc
sbb
mov
dec
push
or
add
pop
and
int
aam
cmp
and
cld
adc
jnp
sub
ljmp
push
out
stos
pushl
mov
jge
xor
sbb
jmp
aaa
fstpl
push
jno
out
jl
inc
insb
dec
leave
push
push
imul
adc
adc
scas
jae
out
push
ds
mov
push
cli
dec
movsl
inc
xchg
mov
push
in
pop
cvttps2pi
push
sbb
mov
push
and
loope
xor
sub
dec
xchg
cmp
dec
pop
ds
leave
mov
and
or
xor
xlat
inc
add
sti
xor
xor
js
pop
push
pop
mov
jno
push
scas
sbb
mov
lods
sub
mov
insl
shrl
cmpsb
mov
xchg
mov
into
mov
xchg
add
mov
dec
jmp
in
pop
adcb
cltd
mov
shll
push
push
xchg
jmp
test
add
push
jg
in
iret
loop
popf
in
stc
idiv
xchg
fs
and
adc
lret
rcll
cmp
inc
mov
imull
divl
loop
std
cmp
mov
dec
into
inc
leave
xor
loope
ja
mov
sbb
in
imul
mov
mov
lods
xor
pop
mov
xchg
shrl
andb
in
gs
test
jge
data16
cltd
lahf
adc
aas
loopne
cwtl
loopne
pop
imul
sbb
fsts
clc
repz
repz
lcall
lret
dec
xlat
lods
xchg
cwtl
pop
xorl
nop
pushf
push
adc
mov
lock
subb
nop
mov
inc
dec
btsl
cld
fdivl
lret
lret
adc
pop
adc
call
jb
push
cmpl
dec
fstpt
rorb
imul
aas
mov
das
mov
inc
mov
and
add
insb
divb
push
std
mov
jns
popl
adc
icebp
div
mov
mov
xor
mov
sbb
scas
inc
stc
das
arpl
ja
xor
jmp
fbld
ret
pop
loop
es
push
stos
insl
dec
jecxz
dec
push
and
mov
pop
ljmp
sbb
and
mov
andb
bound
rcrb
movsb
addb
xchg
dec
cltd
les
push
push
cmp
inc
push
clc
scas
cmpsl
in
xchg
fsubl
mov
pop
popa
pop
inc
stos
push
imul
xchg
je
jl
and
lock
and
cli
sub
fldenv
cmp
mov
test
icebp
sub
adc
or
cmc
mov
push
scas
in
add
jnp
cld
jle
insb
bound
and
jns
or
fists
bound
mov
push
sbb
or
ss
inc
add
pop
outsl
inc
mov
jnp
mov
and
mov
scas
out
cmp
mov
xchg
mov
leave
andl
sub
add
mov
xor
insl
addr16
and
pop
pop
jnp
loopne
jle
sbb
add
dec
pusha
data16
ret
ljmp
les
dec
in
push
adc
mov
dec
mov
fcmovu
cwtl
lret
xchg
push
dec
lods
sbb
mov
out
xchg
lods
outsl
push
cmpsb
cmpsb
adc
lea
repnz
xchg
in
aam
lcall
or
sbb
jns
xor
test
adc
lcall
fcom
lds
movswl
push
push
cmp
jbe
push
cmp
mov
jge
das
or
in
cmp
pushf
das
inc
cmp
lea
jl
pop
push
dec
cmp
pop
push
dec
fdivrl
pop
cld
sbb
push
clc
cwtl
push
adc
push
scas
sub
push
lds
outsb
cmpsb
add
in
inc
xor
push
or
mov
push
cmp
sub
jmp
cmp
xchg
inc
ds
mov
and
ret
dec
rcr
pusha
lods
push
add
popf
mov
jecxz
and
lock
fwait
push
pop
cld
xchg
xchg
lcall
mov
mov
aam
sarb
nop
rclb
rcll
idivb
mov
push
mov
push
cmp
call
pop
repnz
mov
mov
rorl
mov
lret
sbb
jg
or
scas
outsl
pop
orb
cmpl
out
xchg
stc
scas
ja
test
loop
add
mov
sti
movsl
inc
imull
sbb
gs
cmp
lock
je
jae
and
mov
test
and
adc
cmpsl
outsl
stos
cmp
imul
add
cwtl
inc
mov
lods
sbb
sbb
out
and
jle
dec
insl
imul
rcr
out
sti
sub
fdivr
mov
jbe
loopne
mov
inc
sub
fsubrl
stos
stc
repz
shlb
sti
xor
xlat
jmp
sti
pop
xor
jae
cld
mov
aad
test
out
aad
insl
jl
sbb
mov
cli
dec
jae
mov
jecxz
xor
sbb
call
icebp
scas
add
shl
push
dec
push
jae
fucomi
mov
pop
leave
sub
adc
adc
jl
xlat
push
out
mov
enter
in
std
divb
nop
cwtl
dec
sbb
jnp
fistpll
into
stos
cs
fdivp
fwait
lret
out
das
add
jp
popf
lock
ja
inc
jmp
sarb
mov
aam
iret
pusha
ret
jmp
cmp
ret
lret
les
idivb
cmpsl
mov
xchg
popa
out
cld
push
lods
mov
push
mov
movsl
adc
and
jp
out
pop
xor
jae
push
mov
and
clc
fstl
out
outsl
xchg
clc
jmp
movsl
cmc
sbb
push
pop
or
mov
out
add
ret
dec
in
push
and
add
or
cmp
insb
xchg
cmp
dec
lcall
xchg
movsb
and
sbb
inc
cltd
addr16
fwait
xchg
pushf
mov
push
cmovno
xchg
fwait
cwtl
lcall
or
jns
sub
in
inc
mov
mov
scas
ss
fsts
ja
and
jp
loop
mov
scas
int3
mov
stos
inc
xchg
dec
xchg
test
jne
mov
mov
test
lods
xchg
pmullw
jmp
jge
add
and
sub
das
cltd
adc
lcall
lods
lret
or
aam
dec
insb
xchg
sahf
jnp
mov
inc
in
pop
pop
pusha
add
fistps
leave
jb
mov
ret
pop
test
pushw
jae
jp
push
adc
mov
mov
fimull
xor
sbb
lods
inc
imul
sbb
in
mov
adc
test
xchg
xchg
out
leave
scas
in
hlt
hlt
arpl
popf
xor
xchg
andl
and
and
sti
clc
mov
adcb
lds
stc
xor
mov
pop
mov
mov
sbb
push
mov
jbe
daa
ljmp
push
addr16
pop
inc
jmp
jno
push
jl
inc
in
cmpsl
push
cmp
das
jmp
xor
mov
pop
add
test
nop
es
mov
jne
test
enter
daa
mov
push
pop
jl
stc
rclb
cmp
mov
repnz
pushf
ret
lahf
inc
shrl
jg
sbb
xchg
adc
push
loopne
cmpsb
push
negl
fimull
js
jno
pop
cmp
loope
sbb
mov
loope
dec
sub
test
adc
jmp
xor
push
pop
pop
mov
loope
xchg
push
mov
int
xor
cmp
inc
xchg
sub
out
jno
call
shl
pop
mov
push
push
sbb
add
jg,pt
and
clc
jg
out
loop
je
stc
gs
lahf
adc
push
inc
ss
sbb
jbe
xchg
fdivs
push
scas
cli
cwtl
mov
xor
adc
into
pop
in
fdiv
outsl
cmpb
in
add
jmp
xchg
pusha
dec
adc
mov
ja
lds
lods
mov
hlt
sub
lods
mov
cmp
sti
ret
icebp
ss
adc
loopne
inc
push
pop
test
dec
sbb
incl
repz
adc
jae
idivb
ss
sub
xchg
pop
out
call
pushf
lods
hlt
lock
pop
add
aad
pop
and
inc
aas
enter
js
mov
imul
mov
jecxz
fistpll
sbb
out
call
jo
outsb
mov
adc
icebp
jae
fistpl
cmpsb
pop
pop
insb
pushf
inc
ja
pushf
inc
lret
aas
cmc
pop
andl
cmp
push
xlat
push
shll
sbb
div
dec
dec
std
call
mov
add
inc
pop
mov
movsl
test
cld
or
lret
pop
push
popa
mov
pop
mov
gs
cmpsl
das
and
dec
enter
inc
mov
jne
xchg
ret
jp
shlb
mov
or
cmpsl
mov
ljmp
and
cs
mov
jo
repnz
push
mov
rcrl
in
dec
jb
add
inc
dec
fstpl
sub
pop
sub
sbb
std
std
rorl
insb
mov
ficoml
xchg
add
fimull
test
outsl
or
cmpsb
pop
xor
mov
mov
ds
jge
add
xchg
test
mov
pusha
dec
stc
push
pop
inc
xor
out
or
or
xchg
push
cmc
sub
lahf
add
mov
bound
sub
jns
jmp
in
mov
xchg
out
cs
jnp
mov
xchg
sub
lcall
sti
xchg
mov
mov
orb
cs
jne
in
mov
mov
out
clc
pop
mov
loop
jmp
dec
jo
cmpl
and
push
mov
sub
sub
addr16
pop
ret
and
pushf
push
insb
icebp
and
jnp
pop
out
jle
pop
in
adc
pushf
mov
ret
movsb
pop
loopne
cmp
xchg
jmp
push
cltd
or
aaa
mov
lret
fiaddl
adcb
jb
imul
dec
scas
pop
orb
mov
mov
jl
and
in
ljmp
sbb
mov
idivl
push
xor
dec
or
cmp
int3
out
pop
pop
mov
loop
mov
rcr
rcl
pop
mov
xor
sarb
add
insb
push
fldt
sub
adc
jge
shl
sbb
mov
sbb
cmp
lahf
rcr
jno
inc
in
lahf
add
xor
adc
adc
movsl
iret
outsb
jo
or
and
mov
cmpsl
push
pop
adc
inc
inc
pop
mov
pop
cmp
or
mov
xor
xchg
sub
mov
cmp
pop
cld
jbe
rep
dec
and
ja
pusha
les
subb
sbb
inc
aad
jb
bound
in
bound
imul
test
jp
push
lcall
daa
fmull
imul
xlat
cmp
sub
mov
pushf
mov
popf
testl
fdivl
push
inc
cwtl
mov
sub
or
lock
lret
xchg
sarl
mov
mov
sbb
pop
test
mov
or
jmp
loop
cs
stc
sbb
out
fwait
data16
verw
mov
lods
cmp
jno
cmpsb
imul
out
lret
pop
mov
cmp
push
je
push
stos
mov
cmc
ss
xor
add
outsl
push
pop
sahf
imul
cmp
add
and
lods
jmp
adc
addr16
sub
lret
jbe
jmp
sti
mov
adc
add
cld
loopne
push
sahf
pop
enter
push
fsincos
movb
inc
jle
xchg
jp
cltd
sbb
jno
not
imul
adc
and
jmp
mov
test
push
and
nop
sbb
ror
jb
test
popa
xor
mov
aas
iret
sbb
and
xor
call
out
jg
mov
repz
fmull
fisttpl
negl
in
inc
incb
aas
xchg
movsb
xor
mov
faddp
and
adcb
cmp
std
cmpsb
inc
pop
cwtl
rorb
mov
sbb
cmp
cmpsb
cld
xor
and
int
stos
mov
imul
or
add
das
add
jo
and
xchg
aam
test
stc
es
sbb
insl
add
jecxz
inc
or
mov
adc
or
lods
popa
je
mov
jmp
outsl
and
mov
ret
daa
das
add
loopne
imul
js
aam
fcoml
adc
cltd
clc
pop
or
sbb
ss
pop
bound
stos
and
out
mov
xchg
dec
aaa
inc
push
mov
mov
in
jne
add
mov
ss
inc
mov
push
test
or
das
aaa
pop
dec
in
inc
dec
inc
jle
or
push
jb
hlt
stos
hlt
push
cwtl
inc
cld
add
int3
mov
lcall
xchg
jle
jns
dec
jae
pusha
jo
xchg
ss
adc
jo
ljmp
xchg
pop
jp
xor
mov
cltd
ret
adc
mov
test
jne
ja
mov
xlat
pop
out
xlat
int3
fsts
xor
sbb
or
adc
mov
int
pop
dec
lahf
or
xor
and
jg
insb
pop
dec
pop
jnp
mov
xchg
sbb
mov
ret
mov
inc
sbb
push
pop
jl
popf
sub
jl
push
or
ja
repz
mov
lods
or
imul
insl
scas
rcrb
jnp
adc
fisubl
leave
pushf
ja
hlt
je
lret
arpl
ror
mov
pop
cmp
and
inc
scas
out
or
cwtl
cmp
int
sub
shll
jns
pusha
imul
inc
adc
shl
add
jecxz
cmp
xchg
repnz
and
inc
jbe
outsb
es
ja
sbb
mov
and
rolb
daa
jno
push
js
lret
dec
test
cmc
in
xor
outsb
xor
scas
out
cmp
push
mov
fldcw
es
and
jne
cmpsb
mov
in
imul
or
push
in
daa
xchg
push
mov
xchg
sub
mov
es
xchg
movsl
cli
clc
cmp
inc
mov
addb
daa
add
jnp
xor
cmp
push
mov
adc
mov
aam
push
or
neg
aaa
adc
outsb
stc
pop
sbb
mov
fbld
mov
rcrb
and
xchg
std
push
inc
ret
dec
fwait
xor
pop
outsl
dec
loope
mov
sub
lods
jmp
sbb
rcrb
pop
loope
pop
sub
loop
sbb
stc
sar
push
fs
outsb
adc
dec
ss
insl
cmp
sub
xor
add
mov
imul
sar
into
int
and
xor
vmovddup
outsb
pop
adc
adc
lret
sbb
shrb
mov
repz
dec
jmp
mov
adc
mov
gs
test
add
pop
out
inc
inc
add
fnstenv
xor
repz
mov
sar
cmp
and
dec
xchg
adc
or
add
out
jmp
in
jb,pn
push
aad
xchg
call
dec
mov
divb
add
dec
fsubs
mov
dec
add
and
lea
inc
xor
outsb
orb
in
dec
icebp
mov
pop
mov
out
inc
test
add
ja
xor
andb
push
js
imul
stos
idivb
mov
cwtl
jnp
ss
jns
mov
push
cmpsl
xchg
pop
jae
lret
cmp
outsb
mov
pop
jns
iret
mov
lock
mov
sub
es
or
ret
cwtl
cmp
es
repz
scas
dec
inc
test
cmpsl
xchg
repnz
cmp
push
pusha
mov
jle
icebp
mov
mov
add
es
add
mov
aas
clc
lcall
sbb
dec
shll
arpl
cli
stos
adc
dec
xchg
nop
inc
push
push
pop
pop
cmovae
fimull
scas
cmp
dec
or
xchg
dec
iret
test
lahf
push
dec
fucomip
incl
inc
pop
or
jne
fwait
and
lds
cmp
add
out
add
cli
xchg
sub
push
push
scas
pop
jp
jmp
jecxz
test
sub
pop
fidivrl
ja
push
icebp
jp
in
call
mov
clc
mov
aas
push
jle
loope
cmp
mov
sbb
sub
jp
ficomps
mov
pop
push
or
outsb
sub
and
addr16
in
add
test
movl
jle
jne
in
sub
fbstp
push
ret
cmp
movsl
and
jae
fwait
mov
pop
pop
sub
leave
jmp
dec
fisubl
mov
sbb
jns
imul
imul
jae
adc
iret
cmp
cli
repnz
outsl
leave
adc
loop
xchg
push
inc
movsl
pop
mov
push
cs
adc
cld
test
add
int3
mov
loop
fiadds
das
cs
xor
mov
pop
cmp
movsb
scas
sbb
push
jns
lret
jbe
aas
test
and
mov
flds
aaa
cwtl
lcall
aas
xchg
jl
add
out
jae
fmul
pushf
xor
leave
insl
popf
scas
into
stos
ss
pop
push
push
mov
inc
pusha
aam
cmpsb
or
fwait
mov
ds
dec
daa
xchg
mov
ret
loope
aam
sub
test
fwait
mov
out
and
faddl
cmp
sbb
insl
jno
mov
out
sub
cmp
clc
mov
sbb
fsub
xor
movsl
outsb
pop
sub
sarb
jb
sti
mov
mov
mov
push
xor
push
inc
bound
fwait
or
out
pop
popa
lret
mov
mov
mov
popa
test
add
xorb
dec
sbb
sahf
cmp
shll
add
lods
and
adc
mov
out
or
addr16
or
xor
shll
adc
insl
out
xor
icebp
into
mov
jle
into
add
subb
cmp
mov
in
inc
cmp
add
push
lods
mov
cltd
mov
xchg
inc
sub
cmc
inc
in
jl
dec
sti
call
xchg
dec
and
xor
lahf
repz
hlt
inc
jns
and
imul
repz
xchg
add
call
xchg
out
out
negb
adc
adc
sbb
rorb
cs
js
in
in
shrl
push
dec
ljmp
dec
dec
mov
je
repnz
pop
jnp
es
cld
mov
in
pusha
or
das
or
insb
pop
inc
or
in
inc
sbb
pop
mov
fcomp
mov
shll
lcall
hlt
pop
jecxz
ss
and
sahf
pop
sub
sub
push
cld
mov
lret
stos
test
or
jbe
inc
das
mov
cmp
sub
mov
rolb
daa
cmp
icebp
insl
shrl
loope
cmp
lds
sti
mov
data16
aaa
dec
jnp
je
mov
xor
and
out
lret
cmp
jge
xlat
fiadds
test
adc
fstl
sub
xchg
pop
fiaddl
sbb
jmp
imulb
lea
xchg
xlat
scas
jg
push
jns
mov
or
fdivl
xor
mov
inc
std
xchg
dec
ss
test
std
icebp
xchg
inc
mov
or
sbb
negl
fiadds
add
add
lcall
shll
add
addr16
aam
pusha
mov
cwtl
lods
mov
lds
pop
ja
sbb
dec
push
push
mov
adc
pop
mov
lcall
enter
push
es
xchg
mov
xchg
pop
cmp
xchg
test
pop
jne
sub
inc
addr16
int
js
imul
xor
xlat
jnp
leave
mov
in
mov
popf
fists
mov
pop
test
xor
out
jae
fnstenv
push
loop
mov
mov
xchg
push
ficompl
out
xchg
add
mov
imul
aaa
scas
xchg
aam
or
adc
iret
cltd
add
fucom
push
hlt
or
stos
arpl
mov
inc
test
xchg
or
adcb
inc
lods
dec
in
out
insl
xor
int3
cmpsl
pushf
mov
test
fisubs
mov
shrb
aad
mov
rcrb
pop
mov
adc
lods
jge
jo
sbb
mov
cmp
jno
fcomip
jl
ds
dec
arpl
push
mov
dec
jo
mov
or
jp
test
mov
jbe
cmpsb
nop
out
dec
in
les
or
insb
mov
push
cmp
inc
sub
push
cmp
ds
ret
or
stos
and
adc
cmpsl
adcl
jae
sbb
xchg
mov
xor
adc
mov
in
movsl
cs
pop
aaa
adc
sbb
in
out
fmull
test
cmp
jnp
fcmovbe
push
mov
xchg
mov
nop
dec
mov
lds
mov
test
and
sub
int
mov
sub
mov
insl
jne
lret
or
inc
mov
sbb
loopne
scas
sbb
orb
add
xor
int3
fs
mov
ss
cwtl
aaa
cmp
mov
or
dec
xor
or
cmp
fisubrs
lahf
in
into
xchg
movsb
mov
mov
xor
ret
add
mov
pop
adc
mov
sti
shrw
lods
sahf
mov
fucom
fs
in
mov
out
cmp
lret
push
pop
sub
loopne
add
and
xchg
hlt
jle
xor
rcrl
xchg
ret
or
sbb
and
leave
xlat
es
rcrb
xchg
scas
icebp
pop
pushf
pop
stos
fsubrp
push
adcb
add
aad
movsb
ficoms
dec
adc
dec
imul
insb
aaa
sub
out
lea
ret
int3
outsb
insb
pop
and
call
inc
inc
dec
popf
mov
rcrl
addl
arpl
sbb
jno
scas
mov
popl
es
jne
shrl
scas
testb
into
std
fwait
cmp
pop
mov
ret
or
add
cld
mov
xchg
sbb
jle
lods
sbb
mov
sahf
mov
das
popf
pop
loope
cltd
cmp
std
xchg
push
aam
in
ret
mov
cmp
push
cld
mov
dec
aaa
cs
cmpsl
test
mov
cs
mov
push
stc
ret
out
mov
int
jl
mov
insb
cltd
push
cmp
sbb
into
mov
test
push
adc
add
mov
popf
mov
shrb
in
int
arpl
or
lock
jmp
push
orb
inc
aas
mov
xor
sarb
xor
mov
mov
dec
lret
popf
aas
repz
out
pop
xchg
pusha
inc
mov
adc
fwait
cmpl
add
sbb
mov
bound
mov
in
movsb
dec
xchg
and
cmpsb
mov
xor
mov
cmpb
jp
jbe
mov
mov
pusha
es
cmp
jne
xchg
mov
mov
out
je
lcall
cmp
xchg
je
xchg
cmpl
out
data16
sub
push
in
addr16
inc
stos
jmp
push
and
jo
popf
scas
popf
jnp
jbe
jle
pop
in
adcb
outsb
mov
scas
ret
das
pop
mov
ja
jae
pop
nop
push
movsl
cmpb
and
mov
dec
or
ficoml
scas
shlb
int3
add
scas
jmp
out
adc
and
clc
sbb
sbb
add
jno
push
outsb
xlat
arpl
push
inc
inc
stos
out
or
std
jmp
inc
or
out
add
xlat
push
pop
insl
ljmp
and
rolb
mov
cmpb
jmp
popf
movsb
out
push
pop
inc
fbstp
arpl
ret
sbb
cwtl
aaa
push
push
add
pop
mov
dec
sarb
push
sahf
adc
jo
push
mov
push
add
dec
test
xchg
push
inc
jle
iret
cmpsb
adc
in
stos
test
out
test
xchg
push
mov
loope
fdivrp
sub
cli
cmp
push
out
out
sbb
and
sahf
mov
cmpb
mov
xor
push
jne
hlt
pop
int3
cmp
loopne
jbe
jle
cltd
inc
cmp
push
sti
fdivrl
div
sub
sub
outsb
and
sbb
xor
testb
sahf
fimull
or
and
pop
mov
dec
cld
addr16
bound
mov
dec
pop
lret
or
xlat
popa
sub
and
test
and
subb
fsub
les
stc
clc
sti
mov
movl
fwait
ss
outsb
mov
fcomps
hlt
mul
or
xchg
or
nop
addr16
and
jbe
xchg
push
dec
xor
sub
outsl
in
outsl
adc
hlt
cmc
imul
mov
add
jns
push
mov
repnz
gs
xchg
jle
push
scas
test
inc
xlat
adc
gs
shl
and
movb
lahf
xchg
daa
dec
dec
les
imul
jne
xchg
xchg
push
sbb
pop
ret
sbb
mov
push
pushf
test
hlt
xlat
cs
mov
aad
inc
inc
nop
mov
call
jb
mov
push
sti
push
imul
sub
adc
mov
push
ret
push
js
pop
es
dec
mov
sub
add
int
fwait
ret
lahf
inc
sbb
cmpsb
aas
adc
insb
mov
inc
into
je
or
pop
testb
std
inc
add
mov
lods
adc
icebp
fsub
cld
loopne
dec
lret
mov
lods
mov
test
lock
push
das
jl
lcall
inc
sbb
insb
dec
mov
es
mov
dec
xor
cmpsl
orl
loope
xlat
popa
js
lods
or
leave
es
xchg
dec
jb
sbb
xchg
in
arpl
fildl
cltd
inc
cmp
test
pop
mov
push
xlat
in
fstp
sbb
clc
dec
mov
in
sbb
ja
cmp
stos
fists
fldz
push
stos
jnp
gs
fisttpl
pusha
je
xor
inc
or
or
mov
dec
or
dec
add
gs
jae
xchg
lea
and
or
push
fwait
mov
cmp
add
cmp
xor
xlat
dec
mull
aad
jns
dec
mul
mov
in
mov
inc
mov
cmp
aas
ja
lods
gs
dec
sub
mov
lcall
pop
jmp
mov
and
mov
jmp
aas
adc
iret
xlat
out
jne
sub
adc
jcxz
ss
pop
stc
and
subb
jnp
call
icebp
in
rorl
sbb
xchg
popf
ret
add
mov
inc
inc
adc
in
mov
push
pop
in
jp
pusha
push
add
cwtl
dec
xchg
mov
pop
sbb
mov
clc
scas
dec
inc
cli
push
xchg
mov
adc
hlt
test
cmp
repnz
leave
js
mov
arpl
mov
inc
scas
test
or
js
xchg
rcrb
sub
stos
int3
jge
sbb
adc
fsubrp
xor
lds
cld
rcrb
mov
adc
cmp
lret
cmp
scas
dec
jbe
imul
push
cli
loopne
or
lcall
cld
lds
aam
inc
outsb
mov
orl
jo
xchg
scas
imul
std
sti
test
push
lahf
and
mov
xchg
push
or
enter
daa
andl
sbb
das
sub
imul
or
push
movsl
push
or
and
cwtl
lahf
sti
nopl
loope
adc
test
in
ret
popa
insl
pop
repz
lcall
dec
ja
push
addr16
cli
fsub
xchg
mov
outsb
test
adc
or
inc
inc
mov
loopne
mov
dec
mov
push
dec
test
daa
int3
movl
aaa
rorb
into
arpl
imul
outsb
and
sbb
std
and
pop
dec
cmp
jg
cmp
scas
inc
fs
mov
mov
cmp
sbb
xchg
cli
lret
xor
cmp
or
dec
into
pop
cmp
xor
lods
mov
imul
cmc
dec
data16
mov
lods
insb
imul
sub
jne
mov
mov
stos
ja
mov
mov
cmp
and
push
cli
pop
arpl
imul
dec
pushf
mov
dec
pop
dec
xchg
dec
mov
sbb
cwtl
xor
repnz
sbb
sti
pushf
scas
jle
jmp
sub
cs
push
mov
mov
movb
lods
or
je
daa
repnz
jnp
das
and
xor
psubsb
adc
mov
or
jo
jae
jb
xor
pop
ds
inc
mov
jae
aas
scas
aaa
xchg
std
cmp
arpl
or
in
or
jmp
jle
mov
sbb
mov
scas
lcall
clc
into
fimuls
jmp
pop
lock
jecxz
pop
sbb
jmp
aam
pop
popf
ret
aam
imul
xchg
dec
sub
sbb
popa
movsb
stos
lods
js
sbb
lcall
mov
or
ret
insb
jl
jl
sbb
xor
push
lcall
clc
xchg
test
sbb
enter
sub
inc
stos
into
inc
add
mov
jne
lods
push
es
sti
jo
movswl
sbb
mov
mov
mov
push
rclb
je
jg
stos
lods
pusha
dec
stos
cmp
mov
xor
fbstp
push
jmp
dec
add
xor
bound
jecxz
in
adc
and
jp
lock
idivb
aas
ja
cmp
cli
mov
fstp
mov
mov
inc
dec
lret
push
xlat
jne
xor
out
xor
mov
aam
scas
jmp
or
sbbl
iret
sub
or
sub
mov
inc
and
and
jnp
push
jl
ret
adc
cmp
pusha
xlat
fs
jmp
ret
lcall
add
inc
push
std
xchg
sub
push
sub
popf
lock
mov
inc
dec
jb
jns
or
sbb
js
imul
gs
fsubrp
mov
iret
mov
push
repnz
test
out
sbb
hlt
jmp
adc
inc
mov
mov
push
sub
or
hlt
mov
shlb
push
add
fimuls
pop
jbe
jns
sbb
cmpsb
xchg
iret
cmp
mov
pusha
in
stos
or
jge
adc
sbb
mov
xchg
inc
lcall
rorl
mov
test
add
xor
lahf
hlt
push
test
pop
or
inc
pushf
negb
in
jns
add
sub
daa
xorb
mov
loope
js
sub
cmpsb
dec
cmp
pushf
ds
or
add
sub
and
push
add
jge
xor
pop
push
sti
mov
pop
sbb
mov
and
or
lcall
pop
fmull
jle
outsb
call
lds
call
out
mov
push
rorl
sahf
lcall
push
inc
int
popf
ljmp
lea
roll
clc
sbb
pushf
dec
sahf
cwtl
xor
test
rcll
and
aaa
jg
push
psrad
lret
sub
ffree
cwtl
adc
xchg
inc
ss
jae
pop
sbb
rcrl
fcomip
arpl
arpl
std
pop
shll
or
or
add
into
cmp
out
cmc
loopne
xor
xor
outsl
mov
stc
or
inc
cwtl
adc
sub
add
mov
pop
mov
push
mov
mov
popa
inc
in
sub
mov
sti
movsb
inc
loopne
aam
gs
ds
pop
cmpb
lds
flds
mov
repz
mov
test
ja
sarl
xlat
jecxz
cmp
cmp
adc
push
jmp
sub
cs
ljmp
aas
js
dec
data16
jb
lea
je
mov
xor
lret
nop
add
mov
mov
mov
enter
pop
add
ret
ret
xor
inc
sub
sti
inc
xchg
jg
dec
xchg
ljmp
push
xor
push
adc
push
int3
test
sar
nop
aaa
and
and
adc
xchg
cld
ss
cmc
lret
arpl
mov
fidivl
loop
xor
cmp
lods
sub
mov
aam
push
xor
arpl
xchg
fucomi
hlt
insl
insl
popf
bound
xorl
scas
outsb
ljmp
lret
lods
jecxz
int3
mov
mov
dec
mov
sub
std
cltd
mov
imul
nop
push
pop
test
gs
xchg
adc
sbb
sbb
shr
inc
pop
fs
stos
mov
fimuls
xchg
repz
cltd
push
cmpsl
pop
nopl
in
or
jl
xor
and
xchg
dec
dec
rolb
inc
test
cmp
dec
sahf
stos
ds
push
and
or
jbe
fwait
push
ss
push
push
fs
outsb
in
sub
adc
mov
add
mov
push
cmp
mov
into
inc
pop
mov
xchg
push
add
or
mov
mov
push
mov
lcall
jne
sbb
mov
inc
sbb
adc
jmp
aad
cmp
out
lock
sub
pop
imul
and
lods
jnp
pop
cmpb
pop
in
outsl
mov
fldcw
test
pop
popa
repz
xor
js
push
out
cwtl
pushf
popf
pop
jg
mov
orl
and
arpl
sbb
or
imul
notl
sbbb
adc
and
xchg
sbb
ss
hlt
inc
mov
cmc
or
outsb
in
inc
test
mov
int3
push
andb
jns
xor
lds
sbb
xchg
lret
mov
sbb
jmp
cmp
pop
fbld
push
cltd
jbe
and
sbb
jp
cmp
jno,pt
stos
jno
int3
jbe
dec
pop
xchg
mov
xor
nop
mov
xor
push
into
test
call
test
mov
enter
daa
orl
int3
sub
mov
xlat
ds
and
and
cli
and
dec
xchg
dec
or
xor
je
pop
inc
ret
mov
pop
xor
pop
push
adc
dec
sub
outsb
dec
arpl
rol
dec
enter
xor
in
or
jle
push
push
dec
aaa
int
pop
mov
pop
imul
aas
rcrl
sbb
add
sahf
cmp
test
aaa
cmp
jg
je
loop
icebp
aam
sbb
es
ss
test
jp
mov
and
xor
push
cmp
ljmp
pop
pushf
mov
xor
xor
adc
test
add
repz
lods
cmp
rorl
pusha
jnp
sub
jno
mov
xchg
inc
popa
sti
push
sahf
aas
negl
gs
stc
push
loopne
cli
mov
inc
fdivr
pop
fnstcw
les
adc
jmp
xlat
add
push
fdivs
mov
das
adc
jae
pushf
add
cltd
jmp
call
cmp
nop
sbb
int3
dec
lds
rorb
cmpsl
cltd
je
inc
add
test
add
dec
mov
push
aaa
cmp
and
fistl
in
jns
scas
inc
pusha
inc
mov
hlt
mov
imul
and
push
xchg
shrl
sbb
std
aaa
test
cwtl
fldl
loop
popf
push
gs
pop
insb
addr16
popa
int3
xor
mov
add
arpl
cmp
sub
sub
and
and
repnz
es
jle
insl
push
mov
dec
and
cmpsl
add
ljmp
add
and
loopne
adc
in
fdivrl
std
sub
test
mov
out
nop
push
and
mov
xchg
push
idivb
roll
repz
cmpps
lods
fidivs
xchg
cmp
and
jge
enter
out
or
out
bound
push
xchg
test
jl
xchg
xchg
call
mov
cmp
jae
add
mov
ret
pushl
pop
jns
add
sub
cld
and
add
pop
insb
nop
ja
call
push
mov
rorb
xchg
enter
lods
add
push
mov
icebp
insb
out
lock
xchg
jmp
mov
rep
out
pop
pop
sub
add
bound
mov
js
jnp
aad
jle
cwtl
pmulhw
pusha
je
xchg
fbstp
lods
cmpsb
ret
sub
inc
rcll
or
popf
ds
mov
ret
fcmovu
insl
mov
sbb
outsl
subb
adc
insb
jnp
adc
scas
jl
repnz
frstor
sbb
xor
aam
mov
mov
push
sub
lock
add
pop
sub
stc
enter
scas
pop
shrb
lret
ja
cmp
bound
push
push
xchg
pop
jbe
stos
idivb
imulb
sbb
and
aaa
adc
cmp
aaa
add
jno
mov
jl
jge
mov
push
push
sub
xor
jmp
sub
or
dec
test
mov
pop
inc
mov
shll
enter
daa
andb
je
mov
sub
popf
ja
mov
cmp
movsl
sub
dec
lahf
pop
insl
outsb
addb
sub
xchg
add
std
insb
xor
subl
pop
jb
das
lcall
adc
in
scas
sub
scas
adc
sahf
lahf
mov
mov
fbld
mov
shll
nop
push
pop
mov
and
test
jge
call
fcos
shll
fimuls
daa
push
sahf
fisubrs
adc
add
inc
loop
dec
enter
outsb
repz
xchg
push
mov
loop
fmuls
dec
mul
and
cwtl
xor
adc
cmp
andb
xchg
xchg
into
add
xor
inc
cmp
imul
sbb
add
inc
pushaw
popf
loopne
and
pop
mov
vmaxsd
shlb
pop
mov
add
jns
dec
sbb
loopne
imul
ds
inc
jmp
imul
adc
les
repz
lods
pop
sbb
dec
pop
fcom
popa
sub
pop
xor
pushf
scas
jno
jmp
imul
sahf
nop
cmc
pop
fisttpl
movb
cmpsb
das
decb
xchg
shlb
jmp
mov
mov
cmp
bound
cmpsb
mov
out
push
mov
and
xor
cmp
shrb
inc
ss
xchg
inc
mov
pop
push
mov
and
and
fisttpll
cli
mov
push
cwtl
cwtl
out
mov
adc
rclb
cld
mov
ljmp
mov
lock
adc
sarb
arpl
ret
adc
daa
insl
cmp
je
jg
in
lods
add
mov
mov
add
jno
mov
push
pop
push
pop
loopne
and
mov
mov
push
jecxz
lahf
fnstsw
xor
aaa
jp
xchg
xchg
and
sbb
shrb
xchg
popa
sbb
sti
stos
fwait
push
and
fnstsw
mov
push
mov
paddusb
bound
fwait
mov
shll
lds
pop
xchg
jp
mov
push
xchg
and
dec
test
mov
jnp
or
jbe
fwait
insb
test
add
movsb
dec
scas
call
xlat
bound
mov
in
xor
xchg
scas
jmp
pop
mov
daa
xchg
mov
inc
add
jp
sahf
cmp
mov
scas
mov
add
dec
je
mov
mov
mov
out
iret
lret
std
xchg
dec
in
jmp
imul
inc
fstl
sub
std
movsb
adc
fbld
pop
and
cmp
jnp
push
lret
dec
mov
push
lods
dec
pusha
jnp
mov
je
mov
inc
jb
loope
and
push
push
je
pop
popf
gs
ret
push
or
and
fimull
fmuls
imul
scas
fsubrs
push
mov
movsl
adc
mov
repnz
clc
sbb
push
arpl
int3
xor
inc
inc
mov
out
ds
cmpsl
ficompl
or
or
int3
sub
pop
pop
gs
lds
cmpsb
ror
mov
and
imul
jnp
cmp
nop/reserved
test
jge
mov
mov
shrl
cmp
xchg
jno
call
mov
iret
xor
or
jmp
mov
push
and
test
jle
cmpsb
inc
dec
fisubl
cmpsb
mov
into
enter
daa
jg
add
loope
insl
lahf
sub
push
xchg
cmp
mov
movsl
xor
and
xchg
loopne
ja
mov
sbb
jnp
mov
cmp
inc
pop
and
js
fwait
mov
mov
inc
lcall
inc
fmull
aaa
movsb
outsb
adc
adc
jns
out
or
loopne
inc
repnz
mov
subb
arpl
push
pop
imul
and
nop
pop
addr16
repnz
push
mov
out
test
adc
jnp
jo
mov
fsub
stc
mov
xchg
fs
mov
ss
jno
cld
loope
fadds
jmp
mov
repz
testb
dec
jmp
or
iret
xchg
xor
pop
fildll
aam
adc
or
imul
out
lea
xchg
lods
or
and
pop
jae
sub
ds
mov
imul
mov
gs
fwait
shl
fsubr
cmp
inc
repz
fwait
or
ja
aam
xchg
sbb
test
xor
mov
aaa
call
pushf
pop
adc
pop
mov
aad
das
ljmp
test
stc
dec
insb
dec
nop
push
sub
std
jecxz
xor
int
inc
call
data16
lcall
dec
pop
or
fucomi
dec
movsl
pop
lret
inc
mov
pop
cltd
aas
sub
cmp
fldenv
sarl
notb
xor
insl
mov
fdivrl
or
int
mov
dec
mov
mov
pop
mov
lock
das
xlat
dec
inc
rorb
inc
jp
arpl
jmp
adc
je
and
sub
and
insl
lods
and
repz
es
inc
and
and
xchg
mov
test
mov
cmpsb
fld
frstor
bound
rcl
fstpl
repnz
shr
dec
scas
pop
gs
adc
out
inc
push
aas
xchg
enter
les
ret
shll
out
into
cmp
xor
test
push
inc
xchg
dec
pop
enter
mov
lods
dec
ja
cli
inc
push
pop
or
xor
fwait
fwait
shrl
add
mov
je
in
xchg
loope
scas
popa
in
out
xchg
std
sbb
xchg
mov
loop
bnd
movsb
pop
jp
cmc
aaa
mov
xor
mov
jo
and
aad
jne
xor
mov
mov
xchg
and
mov
in
push
xchg
ss
and
enter
jecxz
clc
and
fisubs
push
and
lds
insb
pop
aad
jnp
popf
in
jle
out
mov
push
loop
pusha
stos
cltd
loop
outsb
jl
ret
aaa
pop
push
lahf
or
inc
jae
stc
je
aaa
lds
popf
mov
jg
mov
jno
fidivrl
aad
xchg
fs
cmp
mov
imul
scas
cmp
outsl
push
cli
popf
mov
ds
iret
xor
hlt
repnz
sbb
lret
ret
pop
shrb
xlat
sub
addr16
and
rolb
imul
incl
sbb
and
adc
add
xchg
ficomps
pushf
mov
add
insb
shl
mov
repnz
cmp
sub
icebp
rol
jbe
sbb
jge
addr16
sbb
xor
popf
push
icebp
jno
cmp
jl
adc
dec
insb
xchg
push
push
lock
xor
mov
rcl
push
cmc
push
jae
inc
push
push
push
dec
pop
or
fcomps
cmpsb
and
xor
enter
daa
jle
movsl
push
sub
aam
pop
in
cmp
in
cwtl
movsl
cmp
and
pop
lahf
xchg
mov
std
sbb
scas
ret
add
int
xor
sbb
pop
mov
push
js
into
out
lock
lcall
xchg
fdivrl
sbb
outsb
je
ds
push
test
push
js
xchg
cmp
dec
int3
ja
lret
and
jne
pop
stos
jge
cmp
mov
sahf
pop
jp
out
outsb
lret
test
popa
sti
sti
mov
add
and
pop
test
out
orb
inc
jmp
loop
lcall
or
adc
clc
inc
cmp
mov
gs
leave
movsb
pop
xor
cmpsl
lds
es
or
xlat
fcomip
cld
and
xor
popf
outsl
push
push
xchg
loop
adc
pop
add
or
inc
inc
lods
out
jb
mov
inc
out
xor
or
aam
pop
sti
pusha
dec
xchg
pusha
fsubl
pop
subb
inc
pop
adc
inc
adc
fldenv
lret
xor
repz
loopne
xchg
sbb
and
mov
lret
cwtl
lahf
lds
adc
dec
jmp
mov
hlt
aad
and
cmp
jb
mov
sbb
ljmp
movsb
pop
lea
stc
call
in
rorl
jne
dec
or
adc
push
lods
jle
insl
test
inc
inc
repz
lret
mov
nop
or
dec
in
push
neg
mov
push
cwtl
push
addr16
mov
add
mov
loop
mov
loop
out
and
mov
mov
mov
push
add
dec
lds
mov
and
sub
cltd
pop
ret
lahf
sar
es
iret
insl
or
dec
adc
xchg
cmpsl
jge
and
xchg
adc
popa
add
subb
ds
mov
mov
mov
cltd
mov
test
mov
ljmp
aad
clc
lods
fisubs
sbb
push
pop
pop
adc
sbb
movsl
mov
xchg
rdmsr
cmp
dec
ret
setp
xor
ljmp
dec
cmp
jns
dec
xchg
aaa
dec
outsb
daa
xor
and
push
fadds
bound
gs
push
fwait
lret
push
mulb
add
cmp
bound
jnp
in
in
cli
xchg
dec
nop
sbb
leave
sub
mov
popf
pusha
cmp
mov
add
cmp
mov
mov
fnsave
scas
pushl
repz
repz
cmp
jl
out
push
mov
repz
frstor
mov
adc
xor
call
inc
pop
jnp
cmpsb
dec
jle
xchg
in
jnp
pusha
inc
mov
mov
pop
cmp
mov
jae
push
rclb
cli
mov
push
mov
jg
scas
xchg
mov
sbb
cwtl
mov
outsl
add
push
inc
lds
adc
adc
xchg
inc
in
bnd
es
inc
sbb
bound
addb
dec
or
pop
testl
mov
push
int3
jmp
movsb
fidivrs
repz
rolb
jl
cltd
xchg
test
cmp
push
movsb
xchg
add
push
inc
fadds
cli
cmpsb
jge
negb
insb
jecxz
aaa
dec
jne
cmp
pop
jno
mov
jl
out
or
sbb
xor
cld
jnp
movsl
imul
cmp
inc
addr16
cmpsb
test
push
in
cld
out
enter
daa
jge
pop
push
push
es
inc
push
cmp
xlat
iret
ds
cltd
movsl
inc
and
mov
cmpb
loop
sub
or
mov
xor
mov
lret
pop
fstl
scas
pop
das
dec
in
lcall
jl
in
mov
jno
mov
adc
das
push
xchg
mov
mov
mov
cmp
adc
adc
popa
pop
add
mov
iret
call
lret
lock
inc
mov
jle
sbb
xor
sahf
fxsave
addr16
mov
loop
pop
stc
stc
pop
repz
lock
in
ss
cmp
jp
imul
lret
fs
cld
or
movsb
sub
cmp
aaa
cmp
pop
xor
into
stos
shrl
ret
rcll
xor
decl
fstl
xchg
ja
add
lds
lods
and
mov
call
sub
mov
aas
cmpsl
pop
sti
lgs
incb
int
loopne
xor
addb
fstps
lret
les
pusha
arpl
inc
push
clc
cmp
or
xlat
push
loope
pop
dec
mov
rcrl
es
aad
jle
nop
xchg
jb,pt
sub
dec
jle
or
popa
jecxz
cmpsl
add
fwait
pushf
xor
pop
add
mov
push
sbb
cmc
push
xlat
fisttpl
insb
pop
adc
inc
lret
dec
xchg
inc
push
call
mov
inc
push
xchg
jno
shl
je
negb
ffree
std
rcll
cwtl
leave
test
cs
mov
mov
in
adc
xchg
les
sahf
mov
fdivl
das
xchg
jbe
shlb
xchg
sub
dec
je
cs
es
push
dec
psadbw
jl
loopne
push
sub
popa
sbb
lods
cli
and
fstpt
les
inc
mov
add
mov
test
movsl
mov
lcall
lock
push
clc
call
mov
pushf
rcrl
mov
push
or
push
sbb
xor
xor
xor
insb
mov
mov
bound
push
test
dec
cmp
pop
call
inc
mov
or
sub
fwait
stc
mov
push
cltd
cmc
addr16
cmc
push
test
jns
jmp
in
dec
stos
xchg
fwait
dec
movsl
mov
addr16
mov
pop
and
ja
outsl
pushf
jp
shlb
mov
dec
xchg
jo
sbb
mov
outsb
pushf
out
insb
lea
jmp
int3
and
add
sub
dec
or
aam
fsubrl
pop
stos
adcl
and
jge
insb
cmc
xorl
adc
in
js
pusha
loopne
xlat
fildll
sahf
pop
je
adc
mov
stc
pop
push
mov
in
mov
mov
or
xchg
adc
fsubrl
and
push
mov
adc
das
pop
iret
lock
enter
mov
rolb
inc
ret
xchg
push
and
push
or
pop
add
addr16
ljmp
fisubs
add
push
jge
rcrb
cmp
and
mov
cmp
xor
push
and
jge
push
cmp
push
ds
jno
push
mov
xlat
dec
dec
arpl
push
mov
xchg
xor
push
add
test
push
fwait
mov
test
ffreep
loope
mulb
sbb
sub
in
jecxz
mov
or
ret
out
and
pop
and
cmpsl
add
cmp
inc
decb
dec
and
and
adcb
sbb
push
add
in
shll
cmp
lea
call
js
out
xchg
pop
outsb
dec
push
push
enter
nop
sbb
sub
sbb
cmp
adc
or
fdivs
aaa
dec
int3
mov
pop
out
nop
popa
incb
fs
int
sbbb
in
pushf
lret
outsl
rorl
rcrb
adc
push
and
or
jg
dec
popf
loop
mov
adc
dec
adc
mov
inc
cmp
xor
mov
cli
das
and
cmp
sbb
or
ret
addr16
mov
sbb
push
xor
jmp
mov
out
imul
jmp
insl
data16
mov
popa
mov
mov
pop
inc
sub
cmp
mov
mov
mov
divb
imul
cmp
lds
push
les
and
xchg
sahf
xchg
cmp
jnp
pop
decb
mov
pop
clc
xchg
jmp
and
cs
mov
nop
popa
inc
dec
mov
in
dec
cmc
sahf
jo
push
leave
adc
repz
movb
add
call
jecxz
mov
jae
testl
jl
pop
pop
mov
jecxz
push
xchg
sub
in
mov
cmp
and
dec
pop
shll
loope
negb
js
jp
add
test
xor
pushf
jne
icebp
nop
outsb
pop
cld
cmp
xor
add
mov
push
loop
add
xor
je
iret
rolb
sti
sub
cltd
ret
mov
adc
xlat
xor
or
push
cmpsl
jnp
mov
popa
xor
popf
lods
gs
cmpsb
mov
push
xchg
and
hlt
mov
pop
in
dec
add
cltd
std
dec
int3
test
adc
out
inc
xchg
pop
xor
clc
and
daa
sbb
jnp
shl
push
pop
mov
sub
push
lahf
xchg
popf
jp
push
clc
xchg
cmpsb
addps
cwtl
xor
mov
xor
fisttpll
arpl
dec
cmp
inc
test
outsl
pop
xchg
stc
out
push
pop
mov
or
enterw
cmc
push
cmp
lahf
add
adc
pop
dec
mov
bound
add
in
imul
xchg
ljmp
mov
adc
ja
fwait
xor
xor
out
cltd
mov
mov
mov
jne
shlb
out
dec
sub
jmp
xchg
shr
subl
es
jmp
mov
pop
and
adc
insb
pusha
xchg
jae
push
push
mov
xchg
push
in
fstps
pusha
jnp
call
ret
in
pop
stos
push
cmp
jae
filds
push
addb
mov
std
jns
ficoml
mov
sbb
xlat
push
imul
mov
push
iret
aas
das
adc
arpl
repnz
sbb
xor
sbb
push
cmp
lds
push
mov
lret
pop
add
mov
pop
adc
inc
fiadds
out
lds
outsb
jge
xlat
outsl
push
stos
inc
and
pop
das
imul
test
andb
sbb
inc
xor
int
jle
ss
jno
adc
dec
mov
iret
push
xor
mov
jle
arpl
dec
test
stos
cmc
mov
test
scas
pop
imul
pop
mov
mov
jg
cmp
loop
fwait
test
and
dec
jmp
jp
repz
data16
sbb
jl
xor
sbb
push
fs
sub
jmp
rcr
pop
lods
lds
lcall
leave
fdivrl
pop
sub
subl
jecxz
inc
dec
lods
shl
jae
popl
inc
add
scas
std
dec
mov
cmc
mov
lahf
hlt
sbb
addr16
dec
int
fwait
movsb
sub
sbb
pop
arpl
das
lret
push
shll
je
mov
loopne
inc
lea
test
sbbb
or
out
push
mov
mov
fs
dec
sbb
adc
sub
cmp
lock
negl
fbstp
push
cltd
mov
aad
or
imul
jno
div
push
push
lock
mov
adc
xchg
dec
adc
scas
jg
leave
popa
and
and
lods
movsb
sub
pop
xchg
inc
sub
xchg
in
adc
fdivrs
dec
icebp
or
loopne
lret
pop
out
test
dec
dec
pop
fld
xor
les
sub
xchg
popa
mov
cmp
cli
xlat
pushf
cltd
insb
pop
mov
mov
pushf
push
in
push
jmp
jnp
cs
mov
aad
pop
adc
cmp
lret
fistps
aam
dec
insb
mov
scas
jecxz
sub
movb
lea
call
bound
subl
inc
pop
push
cli
out
fldenv
popa
inc
inc
cld
sarl
cmpsl
mov
mov
in
js
roll
ja
std
and
jmp
aas
jl
mov
and
iret
outsl
fdivp
addr16
inc
cld
arpl
lock
jo
je
mov
adc
and
das
push
mov
rcl
jge
sub
lods
ds
dec
lret
sub
insl
mov
xor
cmpsl
jp
push
ljmp
subb
das
mov
rorb
enter
inc
add
jl
xor
or
mov
push
mov
mov
ds
or
mov
dec
clc
pop
adc
stos
inc
sbb
into
xchg
test
in
jmp
movzwl
inc
or
sahf
xor
mov
in
push
popf
push
test
sub
xchg
jae
inc
jb
scas
or
je
fwait
push
scas
das
push
fucomip
add
sub
bound
cmp
in
stc
outsl
xchg
cmp
insl
mov
into
fs
dec
xchg
jp
pop
mov
mov
sub
std
dec
jecxz
xchg
ja
mov
movsl
enter
pop
xchg
insb
mov
xchg
bound
cmpsb
out
gs
sub
in
int3
addr16
test
sub
jle
jnp
pop
dec
jle
or
push
pushf
icebp
fucomip
dec
xor
shl
loope
loop
insb
inc
test
or
push
inc
pop
scas
popf
sub
mov
cmp
pop
fimull
adc
xchg
shlb
pop
xor
and
push
push
xchg
in
adc
add
repnz
pop
leavew
cmpsl
test
hlt
inc
xor
arpl
ja
or
lret
push
sbb
or
sub
js
call
pop
inc
add
fisubs
mov
in
mov
ds
pushf
cmp
adc
push
sub
sbb
stc
push
sbb
pop
xchg
cmp
loop
push
clc
mov
dec
sub
jl
mov
jo
inc
out
inc
inc
rcll
fdivrl
mov
push
jne
pop
inc
adc
lahf
cmpsb
xor
in
in
mov
cmp
add
test
push
das
loope
subl
cmp
pop
mov
movsl
push
xchg
and
jle
lahf
adc
sbb
xor
xor
outsb
mov
pop
push
shll
in
push
lcall
push
fsub
insl
fisubrl
ds
outsb
add
xor
rolb
out
mov
jecxz
and
and
in
and
jno,pn
cwtl
in
mov
test
sarl
int3
sbb
mov
test
cmp
jg
rol
subb
fs
inc
mov
cmp
stos
xchg
mov
cli
xchg
jno
xor
xchg
and
xchg
or
into
push
jg
cmc
sbb
add
les
outsl
lcall
imul
outsb
data16
loopne
mov
xchg
out
gs
sub
lea
mov
mov
cwtl
in
loopne
gs
or
jecxz
mov
inc
pop
fs
std
out
js
scas
mov
mov
mov
inc
jne
fstpt
cwtl
pop
fs
mov
pushf
mov
push
jmp
xchg
mov
aad
loop
nop
pop
xlat
push
dec
pop
and
jb
testl
je
jge
jecxz
aam
dec
pushf
pop
rclb
call
loope
jno
pop
lock
addl
fcmovu
fcmovbe
adc
cmpsl
mov
inc
pop
addr16
inc
or
mov
insb
call
js
cmpsb
rcl
test
enter
cli
push
sbb
add
sbb
cmp
lret
fists
ss
test
mov
pop
loopne
stos
inc
lods
sub
pop
adc
movsb
repz
dec
add
xor
ljmp
mov
insb
lds
mov
pop
and
inc
add
jns
test
in
push
jne
mov
clc
cltd
xchg
push
xchg
or
pop
sbb
xor
mov
std
stos
xor
leave
lret
xchg
sub
push
scas
cs
movhps
xor
fistps
mov
imul
test
jbe
xchg
cld
xlat
dec
cmp
or
into
or
push
dec
fwait
xchg
or
sbbb
loop
pop
add
cmp
add
int3
fs
cli
adc
in
mov
jns
xchg
or
pop
mov
jp
mov
xor
jmp
cmp
push
mov
xchg
jne
andl
or
xchg
aas
loop
jmp
sub
ljmp
jmp
fistpll
sub
pop
lock
fcoml
and
insb
cmp
jnp
jne
jle
jae
in
pop
pusha
mov
movsb
fisttps
lret
and
out
scas
pop
sbb
sbb
push
push
pop
mov
dec
mov
adcb
and
mov
xchg
mov
addr16
imul
mov
sub
pop
dec
scas
adc
dec
cmp
rcrl
cmp
hlt
mov
arpl
popf
xchg
or
inc
dec
sbb
stc
push
push
xor
int3
stos
pop
or
jb
lcall
jno
shrb
adc
call
cmp
xchg
fldenv
cltd
mov
jge
sbb
sbb
jecxz
dec
mov
cmp
xchg
jl
test
dec
xchg
fidivl
push
pop
jns
xor
push
in
fstl
rcrb
adc
push
mov
int
cmpsb
mov
push
in
cwtl
mov
fisubs
jns
add
pop
shl
and
sub
adc
cmp
movsb
mov
pop
mov
js
in
xor
jecxz
mov
pop
sbb
jmp
add
xchg
inc
xor
in
xchg
loop
pop
jns
mov
pop
sub
dec
inc
mov
int
cmpsb
fcoml
push
int
arpl
mov
iret
xchg
inc
pop
outsl
mov
movsb
pop
mov
push
and
mov
int
jp
sub
scas
cli
lret
sbb
push
pop
adc
test
mov
movsl
inc
leave
adc
pop
jg
add
stc
aad
data16
adc
mov
cmp
pop
mov
sbb
std
xor
cltd
cmpl
mov
into
aaa
dec
lahf
cmc
fildll
pop
ret
in
outsl
jns
rcll
mov
mov
add
fs
data16
push
push
jb
outsb
mov
out
mov
iret
mov
jmp
jnp
lret
or
pinsrw
jle
arpl
jmp
inc
jo
add
xor
and
mov
pop
pushf
xchg
out
lcall
out
push
xlat
sbb
pop
pop
xor
pushf
pop
dec
ja
mov
fcoml
sub
or
nop
repnz
dec
mov
dec
out
dec
pop
jecxz
je
fs
rcl
dec
jl
lea
scas
sub
add
pusha
fstl
sbb
and
or
mov
pushf
dec
xchg
inc
out
cld
inc
jp
fstpt
in
push
mov
and
xor
shll
mov
aaa
std
outsl
cmp
xchg
xor
push
push
cld
mov
pavgb
mov
stos
lock
add
sarb
cli
sub
pop
lret
jo
es
lock
mov
dec
sti
mov
push
ljmp
sub
sbb
and
lds
add
test
mov
test
push
cmp
dec
fisttpll
pushf
xchg
dec
rolb
sub
sar
test
pop
addr16
xchg
lock
mov
jo
jne
mov
loopne
std
or
xor
sub
in
sbb
jno
mov
mov
mov
inc
mov
or
mov
jbe
and
adc
ljmp
or
in
cli
stc
xchg
xlat
sub
cmp
and
ja
test
les
imul
mov
or
jne
lock
sub
out
call
insl
shr
scas
xchg
xchg
xchg
clc
mov
subl
mov
or
out
ss
sub
fdivs
stos
dec
and
in
insb
mov
push
mov
and
mul
adcl
sub
ret
sbbb
cltd
inc
mov
sub
push
leave
pop
sub
add
pop
fidivl
and
mov
subl
inc
scas
lea
push
movsb
gs
pusha
ja
iret
insb
xchg
xchg
repnz
mov
xchg
jae
hlt
fabs
pop
arpl
aaa
xchg
or
rorl
inc
and
out
cmpsb
es
pop
mov
cmc
into
lds
mov
mov
and
cmp
push
movsb
dec
cmp
push
lret
repz
jbe
inc
xchg
jge
sbb
sbb
mov
aaa
or
repz
xchg
fimuls
xor
mov
ret
shl
scas
add
bound
or
push
cmpsb
aaa
gs
jg
xor
clc
fsubs
push
push
arpl
sub
sub
cwtl
mov
das
jns
mov
scas
movsl
arpl
leave
and
add
push
push
adc
sahf
inc
mov
add
push
dec
xor
scas
popf
cltd
mov
and
pop
push
sub
and
add
cmp
inc
sub
xchg
outsb
aas
lcall
push
add
mov
xlat
mov
repz
mov
mov
add
jo
scas
int
aas
fldt
andb
loopne
adc
mov
movsb
pusha
mov
clc
sbb
lock
sahf
test
test
sbb
out
mov
jg
inc
call
stc
mov
adc
aam
ss
iret
mov
and
call
xor
into
jo
jp
add
inc
cmpb
or
cmc
cmpsb
or
and
xor
cld
inc
nop
imul
int3
mov
sbb
lods
pop
loop
mov
pop
out
xchg
lods
sub
xor
mov
push
ret
idiv
jp
stos
xor
sbb
sbb
cmp
inc
xorl
fldcw
data16
les
adc
or
cmp
push
pop
xlat
pop
or
pop
lret
adc
nop
aam
pop
mov
xchg
cs
ss
sbb
int
add
sbb
cmp
fisubrl
in
dec
je
sbb
das
lock
push
shrb
in
lcall
inc
jg
aas
ret
jno
jp
mov
iret
fstpt
add
pop
aas
fistps
inc
xchg
jns
aas
test
xor
sub
push
and
mov
cmp
std
push
mov
cwtl
jo
xor
push
xchg
pop
cld
in
in
mov
fnstenv
jo
jne
lock
push
ja
sub
mov
ret
stc
sub
es
in
insl
jae
bound
fdivl
ljmp
iret
lods
adc
mov
mov
out
mov
pusha
mov
add
xor
pop
mov
push
push
sti
shll
mov
add
paddsb
sbb
jne
rorl
dec
pop
adc
out
testl
les
sbb
aam
push
xor
mov
or
and
xor
ljmp
jno
mov
test
int
xchg
clts
dec
sbb
mov
aaa
js
or
xchg
pop
fwait
in
arpl
enter
lock
push
add
decl
jmp
jns
mov
pusha
xchg
es
mov
pusha
jbe
loopne
lcall
jb
jp
or
mov
aaa
es
jns
cmovle
ds
lea
lret
in
xchg
jmp
ret
js
cmpl
sub
aad
int3
xlat
adc
stos
ret
and
lods
insb
or
sarb
hlt
cmp
and
mov
pusha
out
filds
push
ret
lea
fwait
jbe
lret
jae
push
sahf
push
mov
cmp
ds
push
stc
adc
fisubl
in
xchg
lds
sbb
inc
jns
out
push
ret
orb
jmp
adc
sti
add
lret
loopne
bnd
leave
or
fcomi
and
shll
add
rolb
or
cmp
fildl
into
aaa
or
pop
aaa
add
xor
nop
add
sbb
mov
jb
and
mov
movsb
rorl
std
jbe
loop
jge
add
sbb
std
and
cmp
movsl
test
jl
jl
dec
jne
arpl
and
push
xlat
jo
cmp
scas
filds
push
mov
xor
push
add
sarl
cmpsb
mov
fsts
daa
ja
dec
push
xchg
inc
loope
imulb
repnz
fimuls
lods
int3
cmp
scas
popa
gs
outsl
pop
and
sbb
sbb
mov
pop
push
sub
push
lods
js
pop
mov
lcall
xchg
fsub
popf
xor
or
outsb
sub
adc
push
pop
lea
leave
mov
stos
sub
fucomi
lahf
push
jae
sub
or
outsl
sub
lahf
testb
inc
in
xchg
loop
roll
xchg
sbb
sti
xchg
sahf
cltd
pop
test
in
dec
jg
mov
loop
xchg
adc
inc
mov
imull
adc
sub
cmp
fsubl
mov
xor
add
or
mov
push
xor
test
outsl
aaa
jecxz
adc
push
pop
imul
js
data16
push
adc
push
rclb
push
repz
sub
mov
rcll
sti
sub
push
retw
gs
js
mov
clc
pop
xlat
notl
inc
xchg
in
fldenv
pop
inc
repz
fstl
xor
mov
pop
mov
xlat
cwtl
cmp
pop
jge
adc
sub
mov
por
and
mov
lret
test
nop
dec
jnp
stos
jb
cltd
lods
dec
dec
lcall
ds
push
cwtl
pop
lea
cs
xor
rolb
and
xor
inc
cmc
mov
inc
mov
cmpb
xchg
mov
shlb
mov
sbb
rol
cli
cmpsb
imulb
or
cwtl
sub
mov
test
mov
ret
hlt
pushf
cld
psadbw
lret
sub
lcall
mov
lock
xor
shlb
gs
aam
pusha
xchg
ret
mov
test
xchg
or
icebp
xchg
arpl
mov
cmp
lods
jl
cmp
ds
mov
mov
jg
fldl
mov
mov
mov
xorb
push
pop
fstp
mov
clc
dec
je
xchg
enter
mov
shll
xor
stos
add
fucomip
pop
sbb
push
aas
sub
rdpmc
fiadds
xchg
or
xor
dec
aas
mov
test
xlat
fildl
bswap
loope
into
jns
or
repz
imul
ja
xchg
add
push
jnp
test
cmpsb
jns
add
in
dec
leave
xchg
jne
das
mov
push
mov
mov
xor
jp
pushl
mov
mov
dec
mov
ret
outsl
xchg
fidivs
cli
sbb
add
lret
jl
xchg
mov
xchg
xchg
mov
sub
cmp
jg
mov
mov
rcl
jae
xor
stos
xor
push
cmp
jnp
pop
xchg
jle
addr16
in
lcall
pop
jo
pop
repnz
cwtl
sbb
sbb
push
dec
sub
mov
cmp
adc
or
shrl
pusha
sbb
push
lea
adc
xchg
sub
out
repnz
into
scas
hlt
outsl
loop
arpl
pop
cwtl
inc
aad
mov
mov
add
jg
or
adc
aam
sahf
int3
insb
add
pop
jmp
xor
xor
sub
cmp
jl
mov
jl
and
incl
movsb
pop
xor
leave
jbe
repz
jge
int3
mov
aaa
mov
mov
xor
repz
dec
in
push
push
or
xchg
xor
jns
jmp
mov
mov
stos
push
mov
in
dec
lret
out
inc
mulb
jbe
sti
push
mov
push
sub
pop
cmp
rorb
movsl
jno
loop
dec
aad
lahf
mov
rcrb
icebp
xchg
add
lds
jnp
call
pop
out
xchg
test
pop
call
cmp
push
shlb
sub
mov
dec
adc
sub
mov
mov
mov
xorl
repnz
jb
add
jbe
dec
pop
ficoms
lret
jle
sbb
rcrl
sub
les
cmp
sub
cmp
xchg
into
notb
stc
cli
and
aam
popf
ja
ss
mov
push
fcoms
add
cli
popa
jle
xor
fists
and
into
loopne
ds
xor
jns
xor
xor
imul
addr16
data16
xchg
lods
daa
shlb
push
aad
sub
cmpsb
pop
mov
sub
jecxz
fcoms
pop
js
xor
xchg
lret
dec
sbb
sbb
int3
push
xchg
fcmovu
imul
dec
lock
xor
sbb
xchg
stos
and
xlat
in
mov
xor
sbbl
pop
cs
filds
and
dec
ficompl
jb
mov
dec
mov
xlat
and
sbb
push
aam
lea
call
xchg
sbbl
cmp
std
inc
jl
outsl
inc
lret
ret
mov
dec
ss
movsb
dec
cmp
adc
xor
addr16
std
fs
jl
out
mov
test
mov
lcall
lret
fwait
adc
stc
cs
mov
xor
ret
adc
shl
jbe
sub
push
ret
pop
data16
test
insl
inc
js
dec
in
fimuls
lret
sub
popa
mov
gs
mov
popa
stos
popf
and
xchg
jbe
pop
sahf
das
bound
into
inc
mov
inc
and
mov
add
add
imul
sub
std
mov
jo
icebp
add
out
mov
mov
push
sbb
setb
mov
mov
imul
dec
cmpsb
xor
test
je
xchg
arpl
inc
gs
push
or
and
jle
push
mov
mov
idiv
mov
adc
sbb
add
lock
xchg
lret
loope
mov
jne
inc
ja
jne
jp
stos
inc
mov
xor
mov
push
clc
mov
ss
jne
xchg
xor
test
call
jmp
pop
dec
fiadds
mov
jl
or
cmpb
aad
add
mov
je
jnp
test
in
push
icebp
pusha
sbb
jmp
ret
or
cmp
inc
loopne
shll
push
adc
in
popf
jmp
sti
mov
ja
pop
fimull
popl
imul
inc
scas
mov
lcall
ds
iret
mov
jno
cli
icebp
dec
hlt
mov
jno
inc
fdivrs
cmp
fildl
mov
or
pop
test
int3
push
stos
fistpl
pop
add
mov
loopne
mov
sbb
adc
loope
mov
jns
jge
jnp
sbb
aaa
inc
sub
jno
mov
jl
mov
test
jmp
inc
xor
aam
jbe
popf
mov
push
pusha
push
int
icebp
jnp
push
insb
pop
inc
fistpll
mov
xor
dec
enter
daa
jne
inc
push
xchg
xchg
loope
sbb
sbb
cmp
mov
and
pop
jns
lods
imull
sbb
cmp
inc
mov
xor
or
loop
loopne
adc
xchg
jb
daa
mov
lcall
adc
cmp
mov
jb
jmp
or
pop
insl
xor
mov
aad
mov
pop
mov
jge
and
cli
jp
jns
mov
sub
fisubl
lret
xchg
mov
cs
sbb
int
filds
test
push
scas
jg
daa
fsubp
popa
mov
mov
ret
fs
inc
mov
in
fidivs
sbbl
fidivl
fcoms
add
push
mov
xor
cmp
nop
rorl
jl
into
ret
add
sti
inc
push
xor
dec
sbb
jne
or
cmp
adc
xor
xchg
add
ret
mov
fsub
push
cmp
bound
mov
xchg
sub
fcomps
gs
pop
adc
call
inc
in
mov
popf
out
cmp
jg
inc
cmp
ss
xlat
push
and
jecxz
insl
adc
ja
pushf
or
lcall
dec
in
aad
pop
xchg
cmp
xor
loope
je
jg
jecxz
sbb
pop
test
sar
popf
call
pop
lahf
sub
xorl
outsb
push
pop
sub
inc
add
pushf
inc
out
inc
aas
popa
mov
mov
lcall
insb
rcrl
xor
xor
push
std
or
cwtl
mov
dec
pop
mov
jno
sahf
cld
gs
push
lret
or
pop
mov
sbb
adcl
ror
inc
inc
sub
in
push
mov
ret
cmpsb
ljmp
sub
add
mov
fsubr
sahf
and
cmp
je
mov
cld
inc
jecxz
xor
mov
cltd
jle
inc
test
mov
mov
mov
push
inc
mov
push
clc
rolb
inc
add
push
rcll
pop
adc
mov
xchg
mov
fwait
push
cmc
mov
icebp
mov
xor
pop
or
pushf
xor
es
add
mov
test
cmpsb
jle
pushf
mov
cmc
scas
cmp
call
mov
jno
lea
mov
mov
int
aam
sub
mov
jns
sbbl
mov
cltd
stc
mov
xor
lret
cmp
dec
mov
out
mov
icebp
push
dec
xor
xchg
in
mov
sub
xchg
pop
mov
or
subl
out
mov
ds
fsubl
dec
stos
sbb
and
push
sarb
outsl
jle
int
in
jo
pusha
mov
jge
ret
ficompl
jg
inc
jmp
fnsave
cwtl
mov
popf
adc
or
out
fidivrl
cmpsl
xchg
lret
sbb
lret
ja
mov
subb
sarb
iret
call
fwait
dec
leave
jno
sub
add
vmread
daa
clc
or
lods
icebp
dec
inc
sbb
dec
or
push
sub
add
pop
pop
pop
insl
xchg
fidivrs
sub
inc
fptan
shl
loop
xor
mov
movsb
je
jo
pop
add
pushf
jge
or
add
push
adc
cmp
dec
in
sti
lock
dec
ret
push
into
dec
dec
xor
das
in
scas
jl
dec
push
xor
jno
call
jnp
inc
outsb
out
cmpsb
inc
addr16
sbb
enter
daa
je
punpckhdq
and
fsubrl
sub
negb
jmp
dec
ds
das
adc
jg
repnz
int3
dec
incl
sbb
xor
mov
xor
arpl
movsl
mov
sarl
ljmp
or
push
addb
call
jnp
outsb
push
dec
mov
shl
mov
and
mov
and
out
fmull
mov
push
push
jl
ss
cmp
mov
lret
rol
cmp
sbb
lods
imul
mov
jg
jnp
loop
push
pop
stc
push
jmp
mov
jb
cmp
or
xchg
lods
cli
cmp
xor
push
arpl
push
stc
or
push
test
cmpsb
xchg
inc
cmc
ret
xor
aas
inc
outsl
aam
jmp
imul
adc
data16
dec
mov
ret
and
cmp
add
push
sti
ss
mov
add
loopne
lret
xor
lret
cmp
flds
pop
lock
cmpsl
xchg
mov
adc
cmpsb
inc
int
or
fnstsw
jbe
repz
mov
mov
xor
cs
aaa
cwtl
aad
xor
cmp
adc
mov
jp
je
jnp
jecxz
pop
movsl
pop
test
lea
into
dec
call
fistpl
test
int
rorb
fcomi
mov
pop
lret
mov
faddl
mov
mov
mov
or
out
shrl
pop
sbb
cwtl
pop
xchg
cld
mov
jns
mov
dec
cmc
cmp
nop
test
lret
jns
or
mov
fs
fdivr
xlat
das
insb
mov
fs
inc
aam
pop
ret
xor
testl
cmpsl
jae
gs
push
lods
mov
hlt
inc
mov
add
cmc
mov
xchg
hlt
dec
mov
test
cmp
add
push
clc
sti
test
test
sbb
orl
stos
iret
xchg
xchg
aad
mov
rcr
jbe
push
push
xor
ret
or
aaa
dec
mov
jge
mov
je
push
test
imul
sbb
dec
call
push
in
xchg
add
fstpl
push
or
pushf
add
add
mov
sarl
mov
in
cmp
xchg
jmp
cmp
cmp
mov
sahf
mov
testb
push
jne
idivb
out
inc
stos
add
jmp
out
outsl
nop
cmp
and
imul
shrl
mov
mov
into
mov
insb
mov
and
jle
out
jo
movsb
icebp
dec
pusha
push
bound
ffreep
adc
pop
arpl
inc
testb
aam
sbb
cwtl
dec
push
popf
cmp
mov
sub
adcl
shll
sbb
cmc
and
mov
push
pop
lret
cmpsl
rorb
repnz
or
call
pop
mov
repz
mov
or
sub
or
dec
cs
sub
xlat
lret
ficomps
and
int
out
push
cmpsl
fidivrl
inc
pop
adc
adc
cmp
push
mov
jbe
jge
test
aaa
lds
push
jno
sub
jl
adc
adc
xor
mov
xchg
push
push
pop
movsl
test
add
std
push
call
in
add
inc
enter
daa
jae
pop
push
addr16
repz
lcall
movsl
xchg
scas
and
test
lahf
jmp
hlt
cmp
sbb
xor
mov
add
push
cmpl
aas
lret
addb
xlat
enter
and
movl
pop
adc
mov
pop
mov
mov
lret
mov
mov
int
jbe
sub
gs
pop
pop
movsb
adc
popa
adc
mov
loop
sbb
dec
pop
test
rorl
cmp
inc
loop
push
or
pop
into
leave
fs
int
mov
ss
cmp
fmul
xor
notl
push
xor
clc
sbb
push
outsl
cmpsl
or
push
into
mov
push
cmc
mov
xchg
outsl
mov
xchg
adc
mov
push
lods
addl
pop
shl
fsub
add
push
xchg
or
dec
sbb
mov
insl
xchg
jnp
in
lods
loope
sub
aaa
int
and
jo
push
inc
push
inc
loop
mov
sti
insb
addr16
sub
jns
mov
int
mov
xlat
xchg
sbb
pop
dec
jl
adc
outsl
jmp
pop
pop
cwtl
jmp
lret
adc
sbb
aad
ja
nop
adc
pop
dec
divl
jb
sahf
add
mov
jmp
jp
adc
pop
inc
push
lea
mov
pop
sbb
sbb
andl
push
jo
outsb
pop
xor
xor
aas
lahf
loope
mov
insl
pop
mov
sar
mov
loope
pop
push
cmp
movsb
sub
mov
pop
call
pop
lret
call
push
push
mov
adc
das
dec
dec
mov
sub
hlt
aam
push
cmc
ret
les
iret
insl
idivb
dec
fnsave
cmpsl
jb
gs
mov
mov
lret
and
addr16
pop
sti
scas
push
add
push
dec
cltd
in
inc
sbb
mov
fidivs
fnsave
out
ss
adc
push
andl
stos
mov
loopne
xchg
sbb
lds
ds
xor
mov
insl
xor
popf
mov
push
lock
xchg
or
test
lds
lcall
inc
sub
mov
mov
fwait
iret
daa
pop
push
div
stc
add
add
clc
jmp
push
jns
mov
in
fnsave
xchg
mov
cmp
and
pop
cmpsb
mov
hlt
pop
xor
in
mov
mov
loop
movsb
xor
jne
mov
lods
out
and
add
mov
js
jl
mov
in
out
sarl
or
aam
add
and
xchg
and
jle
add
pusha
out
pusha
ret
lods
add
imul
pop
lcall
jae
out
push
pop
ds
popf
pusha
jg
mov
xor
clc
fisubl
test
mov
out
imul
leave
push
dec
cmp
push
iret
cmpsb
movsb
dec
repnz
mov
push
hlt
fwait
rcll
add
lea
push
gs
mov
imul
add
sub
sbb
out
fidivrs
pop
xchg
shrb
cmpb
jnp
cmp
jg,pn
mov
notb
movsl
repz
shrb
sub
and
aaa
test
cmp
bound
jl
or
pop
push
xchg
push
xor
in
xchg
scas
cmp
cs
fldcw
mov
inc
mov
jno
dec
pop
adc
jmp
adc
daa
jb
or
pop
daa
loope
mov
pop
sbb
pop
ds
movsl
lea
xor
adcb
out
sbb
ds
xor
dec
xchg
pop
mov
push
in
ljmp
jb
fdivrl
rcrl
outsb
sbb
adc
cwtl
ja
fidivrs
add
cmp
and
adc
push
xor
int
xchg
fldcw
bound
xchg
push
mov
mov
jns
sbb
scas
pop
sahf
enter
push
pushf
sbb
nop
add
jg
cs
sbb
dec
lea
mov
ss
sti
sbb
ja
imul
push
xor
cli
sub
add
jl
fcompl
into
insb
mov
pushf
lret
xchg
mov
out
xchg
imul
add
int
data16
pop
lods
ret
popa
inc
mov
push
pop
out
test
sub
pop
dec
in
fadds
add
add
movsb
gs
into
inc
loopne
loopne
jb
in
inc
cmc
je
fnstenv
inc
das
repz
xchg
cmp
cld
sbb
adcl
rcr
pop
pop
cld
push
jge
and
mov
jmp
pop
scas
cs
lock
nop
out
xor
xorb
fmull
cltd
jg
inc
jo
jecxz
movsb
mov
bound
or
fsubr
pusha
xchg
push
fstps
add
dec
push
sbb
fistl
and
gs
inc
cwtl
push
push
inc
aaa
nop
ds
jle,pt
mov
and
sbb
and
dec
mov
iret
std
add
jbe
shl
lods
mov
pop
push
mov
idiv
loope
out
enter
fisttpll
and
lock
xchg
xor
rolb
mov
aam
mov
xchg
or
insb
insl
fucomp
push
dec
fcom
frstor
idivl
popa
push
xchg
lods
xchg
or
mov
adc
add
lar
and
cltd
and
jbe
jmp
pop
test
shlb
jno
lods
xchg
add
pop
rcrl
mov
adc
outsl
stos
lods
sbb
out
dec
mov
xchg
arpl
push
xchg
repz
inc
cmpsb
xor
push
pop
mov
sbbl
dec
inc
sbb
lahf
mov
xchg
test
dec
into
lret
rcrl
fwait
push
bound
push
mov
bound
jns
or
push
aam
xchg
add
mov
in
mov
popa
test
or
pop
icebp
mov
fimull
xchg
ret
adc
dec
fiadds
jne
call
shr
xor
xlat
call
call
adcl
dec
out
or
sub
mov
lea
jmp
je
nop
and
sbbb
in
sarb
jle
or
pop
pusha
mov
filds
dec
fld
jle
xlat
pop
shll
sbb
jne
push
push
movsl
in
popf
xchg
lret
imul
ficoml
jge
iret
enter
les
scas
inc
pop
cmp
adc
adc
inc
iret
add
xchg
or
out
hlt
out
insl
arpl
andb
in
adc
push
lods
or
lods
mov
jmp
sbb
sub
pop
ljmp
vcvtsd2si
inc
mov
stos
and
aam
adc
movsb
adc
fucomi
jbe
push
lds
sbb
pop
aaa
inc
out
cmp
inc
jno
push
inc
jl
flds
nopl
xor
inc
inc
gs
sbb
test
cwtl
jmp
cmpsb
int3
jo
in
rcr
jmp
aad
aad
jno
adc
loope
dec
and
outsb
test
jg,pt
mov
xchg
test
pop
lahf
sub
and
sbb
adc
xor
push
jb
mov
sarl
rcll
and
ret
lcall
rcr
pop
cmp
movsl
pop
cld
outsb
jnp
dec
adc
jae
push
cmp
inc
lods
mov
mov
adc
and
sbb
sub
inc
or
lret
out
or
ret
mov
in
sbb
push
daa
sahf
imul
xor
push
mov
loop
ljmp
sbb
ja
sub
cmp
jo,pt
notl
enter
mov
aaa
cmp
popf
sub
dec
xorb
cli
jnp
pop
arpl
xor
lods
sub
push
dec
adc
ja
imul
in
add
pusha
or
lods
stos
mov
gs
sti
xor
cs
add
xchg
or
sti
inc
jns
daa
sub
pop
loopne
fs
pop
xchg
jl
inc
or
fldlg2
jl
les
outsl
repz
pop
sbb
mov
and
pop
scas
filds
jnp
mov
pop
dec
cs
mov
and
mov
jb
pop
cltd
dec
adc
mov
jecxz
mov
gs
mov
call
pop
mov
pop
adcl
cmp
pop
mov
jmp
pop
fidivs
push
scas
push
aas
fstpl
fisubl
rcrl
lods
pop
std
cmpsl
rolb
lea
inc
mov
adc
mov
int
lret
iret
mov
bound
mov
cltd
mov
in
jns
das
or
in
rclb
in
aam
inc
xchg
loop
test
mov
xchg
inc
mov
roll
sub
ljmp
sahf
lods
incb
mov
adc
lods
and
popf
xchg
icebp
pop
cmp
add
negl
hlt
mov
dec
push
push
cld
ffree
call
int3
xchg
inc
mov
sbb
and
aad
pushf
or
mov
popa
inc
ret
sbb
or
xor
xor
arpl
mov
xchg
cmp
or
sbb
xchg
out
inc
pop
ja
or
mov
push
cmp
daa
cmp
jmp
or
imul
mov
xchg
in
mov
sbb
fnsave
test
jp
mov
mov
cmpb
shrl
mov
addr16
loopne
into
xchg
stos
adc
jmp
push
sbb
out
mov
sub
mov
pop
addr16
dec
stos
out
adc
adc
sarb
rcrb
jle
or
pusha
and
adc
and
cmpsb
ret
movsl
pop
or
test
mov
inc
inc
inc
push
loope
sbbl
nop
call
clc
jl
or
xchg
xor
imul
scas
movsl
fildl
push
fmull
adc
lret
jne
repnz
test
leave
dec
aas
test
xor
cmpsl
arpl
xor
out
push
or
cltd
adc
sbb
or
add
pop
dec
jbe
out
pop
or
scas
mov
lds
out
pop
data16
mov
cld
loopne
cmp
push
dec
movsb
mov
push
bnd
jge
inc
rcrb
aas
push
aaa
add
sbb
data16
movsb
jl
jns
dec
jle
pushw
pop
and
xor
fwait
xor
sbb
out
test
arpl
xlat
cmpsb
dec
stc
push
in
mov
mov
daa
jo
imul
jbe
cmp
cmp
pop
movsl
fwait
das
and
cs
lahf
dec
mov
sbb
testb
jp
add
push
push
cmp
pop
fdivs
dec
inc
xchg
pop
bound
inc
lcall
fcoml
dec
outsb
ficomps
int3
rorb
arpl
and
mov
push
leave
mov
dec
pusha
and
push
mov
lea
pop
mov
pop
fcoms
shll
jg
inc
mov
xchg
lret
lock
icebp
dec
loop
test
inc
cmp
mov
mov
idivb
stc
insb
push
not
loope
cli
xchg
sub
lea
shlb
or
pop
repz
fisubs
pop
xor
int
push
and
adc
mov
mov
and
out
cwtl
and
nop
xchg
test
xchg
add
das
ds
dec
cmc
mov
mov
scas
data16
repnz
dec
movsb
jle
mov
adc
pop
mov
add
sbb
adc
repz
mov
sbb
stc
lcall
bound
mov
pushf
pop
or
jmp
lret
push
jns
aad
xchg
ficoms
adc
ja
test
mov
je
mov
jecxz
add
push
out
sub
pop
pop
xlat
sub
mov
sub
subl
scas
pop
fdivrl
inc
cmpsb
leave
pop
inc
insl
loop
aas
jl
aam
lds
xchg
and
adc
in
subb
cwtl
dec
mov
insb
mov
movsb
cwtl
add
cmp
aad
xor
adc
mov
jae
lock
jbe
das
call
push
adc
inc
arpl
dec
cmp
ret
jno
lock
insl
stos
jge
dec
into
shll
fnstsw
popa
inc
xchg
sub
lahf
cmp
pop
js
mov
pop
push
jl
inc
leave
inc
cltd
xchg
xor
and
adc
or
out
push
xchg
xor
in
pop
mov
pop
push
les
getsec
call
cmp
and
int3
pop
aas
xor
pop
or
lds
dec
xchg
xchg
jecxz
test
dec
dec
xchg
sti
sub
mov
inc
out
je
or
mov
fwait
pop
aaa
fs
loopne
mov
push
push
incl
mov
jns
icebp
in
mov
outsb
mov
mov
mov
xlat
mov
jp,pn
jno
mov
test
mov
dec
hlt
dec
movsb
add
mov
out
mov
jb
jmp
sbb
push
out
ror
sub
lods
les
iret
xor
pop
das
test
sub
into
insb
and
dec
xchg
pop
jle
sti
in
frstor
aas
xchg
pop
ret
sub
jne
inc
and
je
adc
push
movsb
into
ss
aad
mov
icebp
add
fidivrl
mov
adc
scas
or
adc
ljmp
in
cmc
leave
les
cmp
arpl
and
inc
ljmp
push
xchg
ret
sarl
sbb
cmc
xchg
insb
int3
fprem
sub
fisubrs
add
sarb
mov
loope
cmp
or
sub
push
xchg
adc
jbe
sbb
jge
inc
hlt
sbb
pop
ret
jbe
jno
adc
das
dec
in
orl
cli
imul
cmp
scas
xlat
dec
dec
push
push
rcl
test
xlat
lock
cmp
add
sahf
push
into
enter
daa
outsl
scas
stc
push
jge
loope
aas
xchg
sub
lea
cmp
add
lds
and
xchg
das
lahf
addr16
dec
xor
sbb
mov
out
je
dec
pop
pushl
sbb
pop
popa
pop
mov
adc
inc
icebp
fdivrl
jecxz
sub
push
adc
sub
xor
je
jle
inc
imul
das
aad
and
push
mov
inc
sub
imul
push
inc
mov
sub
mov
cmp
sahf
mov
stos
test
push
clc
and
pop
jg
pop
dec
loop
push
xchg
stc
sti
push
push
fs
adc
push
mov
cmp
mov
notl
data16
popw
sbb
sbb
inc
cmc
movsl
dec
cld
xor
repnz
imul
ljmp
outsl
icebp
lods
js
lods
mov
xor
dec
jae
sub
mov
in
sbb
sti
mov
gs
jmp
loopne
fprem
pop
iret
enter
aad
fstps
mov
daa
roll
test
mov
xor
int3
xlat
nop
cmp
pop
adc
adc
jmp
push
pop
cs
cmp
jae
test
in
dec
add
ret
je
push
mov
imul
lea
and
mov
inc
add
iret
aaa
fildll
negl
add
xchg
inc
mov
sub
sbb
pop
push
das
mov
jno
jns
cmp
js
cmc
filds
add
dec
mov
or
mov
jnp
cmc
cld
addr16
lret
movsb
fistps
mov
mov
lock
jbe
sarb
test
ret
add
icebp
insl
xchg
pushf
jo
leave
sbb
ljmp
scas
lods
aam
idivb
push
inc
mov
mov
ja
rolb
push
cltd
enter
or
in
push
aad
fstl
outsl
cmpsb
clc
and
push
sbb
int3
adc
pop
fisubs
adc
cmp
out
jb
lahf
xchg
cmp
push
pop
xchg
stc
mov
push
xor
or
cli
int3
xor
jp
mov
mov
test
rep
xchg
cmp
or
mov
fwait
mov
pop
push
adc
add
outsl
mulb
jmp
cs
bound
pop
sub
repz
mov
mov
inc
scas
mov
xchg
jge
ja
mov
fnsave
adc
ja
xchg
jne
shlb
jo
sahf
fwait
pop
xchg
push
add
aas
xchg
out
pop
add
or
push
addr16
sub
test
insl
addr16
ret
shrb
inc
test
iret
sti
xchg
jnp
pop
jmp
in
push
mov
pop
and
ret
xchg
pop
jbe
dec
inc
sub
mov
push
addr16
ss
cld
fists
push
xor
xor
pusha
xor
push
inc
sahf
scas
imul
push
inc
adc
and
repnz
addr16
cmp
lods
hlt
movl
inc
in
daa
cmp
pushf
fwait
inc
push
xchg
ret
or
das
adc
mov
loope
les
pop
ja
jbe
dec
jbe
lds
data16
cli
and
push
cmp
inc
loope
loope
loop
out
repz
xor
sbb
mov
cmp
cmp
jno
stos
jmp
dec
pop
push
and
mov
push
push
fisubrl
and
mov
push
stc
dec
pop
inc
enter
push
data16
in
test
enter
daa
outsb
shlb
loope
outsb
push
sub
pop
dec
cmp
scas
sub
and
lahf
xchg
push
sbb
add
mov
aaa
adc
pop
fistpll
rclb
lcall
pop
fsubr
in
sub
pop
outsb
movsb
stc
into
adc
add
sbb
pop
repz
cmp
jae
jp
and
int
mov
xchg
int
icebp
jo
dec
filds
lret
inc
rcl
mov
aam
sahf
push
movsl
push
test
test
xor
fsubp
push
sbb
mov
and
cmp
adc
jl
cmp
outsl
and
cli
stc
push
jbe
cmp
cltd
adc
into
clc
cmc
cltd
cmc
insb
rcrl
xor
shlb
adc
loop
imul
testl
xchg
mov
js
and
jne
sub
addr16
in
test
fdivrp
push
in
nop
outsb
les
adc
loopne
mov
pop
out
hlt
popl
pop
and
xchg
fdivrp
les
call
in
dec
push
inc
sbb
outsl
xor
les
mov
lds
sahf
mov
sbb
cltd
sahf
nop
pop
lds
dec
rclb
std
dec
ja
imul
jecxz
insb
shufps
lea
mov
aad
aam
mov
pop
mov
fisttpl
iret
pushf
pop
popf
and
mov
sbb
mov
add
cld
movsb
pusha
rorl
adc
std
pushf
cmp
cwtl
mov
dec
int3
mov
push
ret
xchg
imul
adc
fwait
lock
stos
leave
das
cmpsb
dec
rcl
mov
adc
and
fldenv
pop
sub
les
call
ljmp
xchg
lods
aas
icebp
pop
mov
jns
das
and
outsb
xor
pop
xchg
sub
data16
std
cltd
call
test
test
cltd
outsl
and
clc
pop
inc
sbb
aad
and
mov
adc
cld
stos
imul
xchg
jg
notl
pop
jp
xor
mov
xor
addl
popl
dec
fidivrs
mov
dec
lcall
or
test
push
es
add
mov
push
bound
data16
jle
pop
xchg
cmp
enter
call
pop
dec
in
insl
ja
and
mov
shrl
stos
mov
xor
push
mov
push
jnp
mov
cmpsl
sbb
jge
outsb
xchg
and
xlat
jmp
mov
into
adcl
out
outsb
jo
shrl
or
xchg
and
inc
insb
cmp
mov
mov
sub
fistpll
sub
pop
lods
push
mov
imul
mov
popf
and
nop
push
outsl
test
aad
sub
sbb
push
sub
scas
into
loopne
push
mov
pop
adc
insl
das
iret
or
dec
leave
mov
push
adc
add
dec
rolb
inc
lock
sub
inc
xchg
out
or
mov
scas
mov
pop
cmpsb
push
and
imull
shlb
fisubl
mov
repnz
movsb
inc
pop
lea
pop
lods
jbe
repz
jo
rcrl
mov
and
add
lods
jl
push
pop
dec
lret
lahf
popa
push
add
jo
test
scas
xchg
not
push
clc
inc
xor
les
inc
push
fs
cmpsb
fmuls
in
insb
push
push
daa
insl
jne
push
mov
ret
cld
cmpb
mov
cwtl
movsl
mov
push
and
push
outsl
fucomp
sbb
mov
xor
xchg
loop
cli
out
pop
dec
push
js
xchg
ficoml
pop
ret
sbb
loope
mov
xchg
mov
outsb
pop
xchg
dec
adc
ffreep
sbb
jmp
mov
out
and
flds
xchg
sub
mov
leave
out
pop
push
sub
shrl
mov
xchg
test
insb
sbb
shll
stc
imul
adc
ss
mov
ljmp
inc
popa
cli
sub
mov
adc
inc
cmp
ljmp
sub
xor
pop
outsl
in
popf
data16
push
sbb
hlt
clc
add
jle
lods
inc
pop
std
mov
shrb
cli
add
jecxz
or
out
lods
jge
decl
inc
rcrb
jecxz
or
sbb
fxch
icebp
ffreep
cmp
jge
xchg
or
sarl
pusha
not
push
gs
adc
mov
inc
jmp
scas
subb
xor
dec
xor
je
iret
and
pushf
pop
je
xchg
dec
jecxz
mov
jno
in
or
call
push
jecxz
mov
jg
dec
movsl
cmp
xor
jge
mov
leave
mov
mov
inc
and
push
rcl
sbb
testb
std
inc
jge
cwtl
jns
lret
adc
jecxz
sub
inc
lret
subb
pop
lgs
jecxz
das
test
shlb
push
sub
sbb
ret
push
lahf
pop
es
dec
mov
fnstenv
ljmp
push
lods
stos
jl
mov
pushf
insb
sub
or
dec
pop
mov
adc
jns
mov
test
pop
shll
pop
jge
frstor
sar
cwtl
xchg
and
mov
cmp
or
adc
movsl
stos
pop
jns
out
cmp
pop
xchg
push
lods
psubsw
fdivl
les
pop
xor
loopne
mov
xchg
repnz
dec
inc
rcll
add
xchg
or
inc
adc
add
mov
jmp
jg
add
movsl
dec
sub
and
pop
bound
sub
pop
cmp
or
aam
cmp
dec
mov
or
jns
outsb
or
mov
xchg
dec
mov
ds
mov
jne
lcall
pop
dec
cli
xchg
test
jmp
jl
mov
pop
ljmp
sahf
mov
addr16
iret
cmpsl
stos
mov
xchg
outsl
jg
insb
movsl
sub
jle
xchg
in
push
popf
fistps
jecxz
in
jmp
inc
pusha
add
lods
push
in
jb
popf
dec
push
fstl
inc
pop
fcmovbe
pop
push
xchg
cmpb
sbb
dec
dec
imul
scas
xor
push
clc
and
adc
nop
repnz
cmc
mov
sub
cmpsl
arpl
inc
repz
lahf
or
test
inc
adc
sbb
add
int
pop
aad
cmpsl
ficoms
xor
dec
mov
dec
sbb
adc
inc
push
jg
inc
jbe
mov
xlat
data16
jmp
sub
inc
jl
inc
add
sub
push
out
add
pop
fisubrl
lret
int
test
xor
out
sub
push
das
ror
mov
sahf
pop
push
out
test
xchg
cmp
sub
jno
cmp
or
shlb
and
negb
addb
add
sub
xchg
mov
mov
js
xor
pop
pop
cld
popf
lcall
pusha
faddl
or
push
and
adc
mov
out
mov
out
mov
outsl
test
xorb
xchg
xchg
push
sub
pop
aam
dec
lret
inc
jmp
fisttpll
jmp
sahf
lcall
xorb
jae
jo
push
mov
idiv
and
fs
adc
je
cmp
in
mov
int
jo
pop
push
cli
xor
dec
scas
cmp
movntps
jbe
jbe
mov
push
xchg
xor
jns
adc
xlat
pop
imul
movsl
sahf
add
pop
lahf
pushfw
mov
lods
sub
jle
out
add
shll
pop
sbb
scas
decl
or
pop
sub
cmovb
add
ljmp
inc
repz
add
ficomps
cmp
pop
cs
adc
les
pushf
or
xchg
jecxz,pn
in
aad
xor
adc
xor
dec
gs
aaa
je
cs
je
cli
lea
xor
inc
call
mov
les
fldt
pop
jecxz
and
pop
sbb
jbe
aas
clc
jge
mov
outsb
pop
shlb
test
shll
testb
jmp
xor
jmp
fstpl
mov
add
call
fsubs
mov
ret
mov
add
add
sub
jbe
je
xchg
ret
lods
xchg
es
push
fisttps
cwtl
lcall
sub
popa
mov
fadd
mov
mov
inc
mov
pop
aam
add
mov
adc
mov
faddl
pop
jmp
xchg
clc
shll
xchg
jge
add
cmp
mov
arpl
pop
push
mov
out
fwait
lods
pop
xchg
or
and
in
xor
mov
or
loopne
ss
mov
xchg
sub
test
addr16
shll
dec
cmp
inc
dec
shll
fwait
sbb
push
insb
inc
jns
inc
data16
rclb
mov
sbb
cld
imul
xchg
jg
xchg
fidivrl
bound
mov
test
test
ja
ja
jp
push
and
xchg
mov
mov
cmc
xor
sbb
mov
xor
in
xchg
leave
cmc
cmp
xchg
inc
push
inc
xorl
out
fnstenv
sub
cltd
sub
addr16
fwait
lahf
stos
shll
insb
adc
jnp
inc
int
call
or
pusha
sub
ret
and
sbb
loopne
dec
fnstcw
jae
pop
mov
popf
jno
insl
mov
in
pop
jecxz
xchg
xchg
fsts
sbb
adc
and
dec
scas
xchg
std
jnp
aas
push
adc
jg
pop
iret
aas
lds
leave
mov
pop
frstor
xchg
pusha
inc
testb
es
rclb
popf
cmp
add
popf
int3
test
fidivs
xchg
lds
mov
fucomi
push
cmp
sub
movsb
push
nop
mov
jbe
cltd
cmp
dec
test
aaa
mov
mov
cmpsl
jl
push
dec
dec
test
fnsave
jo
sbb
and
mov
push
pop
mov
icebp
cmpsb
fisubrs
in
cmp
cmp
mov
jl
imul
jecxz
inc
loope
shll
sub
mov
cmpb
into
test
repnz
or
adcb
jl
mov
dec
xor
jle
sub
pop
fwait
sub
js
pusha
mov
lcall
sbb
in
sub
lret
int
push
adc
xchg
mov
std
mov
or
push
gs
pop
dec
fisubs
popl
push
xchg
outsl
or
fists
sub
and
lret
loop
xchg
inc
cmp
sbb
cmp
sahf
cmp
push
sbb
mov
loop
nop
lods
stc
xlat
adc
adc
hlt
inc
and
xor
mov
push
push
cli
xchg
arpl
push
cmp
or
in
fcmovne
mov
ret
int3
xor
cmpsb
imull
pop
adc
inc
xchg
adc
stos
cwtl
add
pop
add
push
rclb
loopne
mov
lds
sti
pop
xor
stc
inc
jmp
fistpll
clc
mov
pop
dec
xchg
inc
inc
jp
icebp
fnstenv
add
les
xchg
repz
notl
add
jae
xlat
mov
stc
adc
adc
lcall
aad
xchg
jnp
in
add
out
add
adc
je
push
out
repnz
fldenv
leave
call
push
pushf
pop
mov
sub
sahf
fistpl
xor
inc
dec
aas
mov
aas
xchg
ss
movsb
test
and
icebp
push
shll
lock
mov
cwtl
out
ja
mov
cs
mov
xlat
mov
cld
adc
lret
pusha
or
lods
add
xchg
nop
or
seto
rolb
jnp
sub
jne
aam
cli
rol
mov
mov
add
dec
mov
inc
cmpsl
push
ljmp
or
orb
mov
loop
jno
inc
insb
lods
mov
repz
or
lahf
mul
cltd
movsb
je
test
mov
leave
push
loop
icebp
out
mov
sbb
push
push
sarl
je
stos
ss
mov
xchg
push
stc
mov
xcrypt-cfb
cmpsl
out
xor
aas
or
cmp
xor
xchg
ja
xchg
sub
cwtl
test
dec
adc
cld
pusha
fildl
jae
cltd
inc
loop
xor
repnz
fwait
inc
mov
sub
lret
sahf
lea
fucomi
cmp
std
xchg
bound
fnstsw
fs
pop
ret
sub
cmp
pop
jle
jnp
in
data16
lods
insl
repnz
test
mov
inc
dec
adc
fbstp
add
mov
fwait
adc
xchg
pushf
pop
jmp
adc
addl
data16
cmp
aad
xchg
cmp
addr16
stos
cltd
jnp
and
movsl
adc
idivb
std
aam
jecxz
clc
pusha
and
adc
add
pop
push
outsl
fiaddl
shll
push
jae
repnz
cwtl
cmp
cmp
mov
cmp
dec
sbb
mov
imul
sub
xchg
xchg
adc
dec
iret
sahf
inc
repnz
push
repnz
pop
rol
repz
arpl
repz
stc
aaa
add
lea
pop
push
adc
or
push
outsl
int3
jo
sub
pop
lret
mov
mov
jmp
add
fnstsw
outsb
lock
orl
sbb
sbb
jge
les
dec
jb
aaa
jl
cmp
gs
dec
sbb
cmpsl
xor
mov
xchg
or
test
and
add
cmpsb
popa
mov
in
and
outsl
daa
push
icebp
push
push
loope
xchg
mov
cmp
stos
ret
je,pt
bound
lea
lahf
add
subb
mov
xor
cmp
sbb
ret
js
and
pop
fdivr
popf
lcall
mov
xchg
cmp
xor
inc
adc
jo
rorb
adc
mov
jns
and
mov
sub
jne
pop
shlb
lret
pop
shrl
push
sbb
cs
loopne
out
mov
subb
jg
fwait
jb
mov
jp
mov
fs
push
adc
shll
fs
fcomps
xchg
testl
imul
aam
sbb
push
push
clc
into
test
inc
xor
outsl
mov
imul
js
xchg
add
mov
jp
lods
sti
inc
inc
mov
xchg
add
dec
movsl
or
push
je
mov
xor
sti
or
sbb
sbb
xchg
gs
fsubp
xchg
fmull
push
add
test
fldcw
insb
les
xchg
repz
cltd
into
sbb
pop
pop
sahf
xlat
lret
jg
pop
xchg
popa
test
faddl
popa
into
sbb
mov
cs
push
jae
xchg
xor
mov
jb
int3
inc
dec
push
mov
je
bound
add
jp
sbb
cmp
data16
mov
ljmp
and
inc
rolb
lds
ss
mov
sub
lahf
notb
mov
cwtl
stos
xchg
gs
subl
scas
lds
cld
jp,pt
lret
iret
std
mov
popf
inc
in
pop
ret
push
jg
and
or
fiaddl
aam
jmp
push
and
adc
jp
cmpsl
imul
jae
into
pop
call
mov
add
cld
sbb
fidivl
pop
adc
mov
fistpl
test
out
mov
rorb
fst
aam
clc
dec
sti
lods
xchg
sti
dec
inc
sbb
mov
push
stos
and
lahf
enter
ss
pop
cmp
clts
in
bound
mov
cmpsl
fwait
xor
lock
movsl
loope
xchg
mov
addb
pop
xchg
inc
jns
add
adc
fwait
jbe
and
add
neg
jg
std
cli
mov
jns
add
in
pop
pop
xchg
js
mov
mov
cmp
ja
jp
mov
mov
jmp
testl
insb
dec
sti
mov
adc
out
stc
lock
add
xchg
fst
outsb
orl
mov
or
mov
jmp
mov
clc
insb
out
xchg
jnp
xor
jle
cmpsb
add
ljmp
int3
rol
push
gs
mov
dec
inc
fs
outsl
jae
jae
push
sub
mov
lds
pusha
mov
sbb
and
imul
push
scas
pop
ljmp
xor
int
repnz
shrl
leave
mov
mov
inc
cld
popf
insl
or
notb
bound
popa
fisttpl
xorl
jg
lock
pop
push
cmp
sbb
jp
jmp
rcrb
mov
add
in
cmp
leave
movsb
insl
adc
jbe
adc
or
sub
aaa
cmp
cmp
fwait
lret
jno
scas
jns
aam
js
xchg
push
popl
add
mov
push
daa
scas
adc
push
inc
popf
jmp
push
lock
inc
xchg
push
test
or
ret
enter
daa
imul
mov
sub
lret
jo
sarl
cmpsb
outsb
movsl
int3
leave
sub
sub
sbb
mov
scas
adc
xor
stc
inc
push
mov
sbb
js
pop
sbb
cli
lcall
in
inc
pop
imulb
sbb
xchg
bound
dec
iret
lods
xor
jmp
sti
mov
cld
inc
and
xorl
pop
push
daa
xchg
lret
sahf
rol
mov
adc
jg
adc
test
jle
jg
sbb
loop
addr16
stc
inc
dec
pop
fs
adc
mov
dec
ds
push
xchg
testl
cltd
lock
jne
pushl
or
dec
mov
cmc
dec
pop
imul
cwtl
in
outsl
imul
lahf
adc
mov
add
mov
push
lods
loop
adc
dec
cmp
mov
fwait
dec
push
sti
mov
xchg
loop
out
mov
loopne
sbb
inc
mov
cmpsb
pop
les
div
push
and
xchg
pop
fimull
imul
xlat
or
loopne
inc
lea
adc
mov
shr
js
popf
cs
je
lock
nop
mov
adc
jb
rorb
pop
lods
je
cli
out
adc
test
mov
push
push
gs
mov
orl
insl
imul
int3
add
inc
sub
aas
aad
and
xchg
jb
and
enter
arpl
push
jbe
std
fbld
cwtl
gs
sbb
mov
test
leave
cld
imul
mov
pop
add
das
add
and
aam
sub
pop
flds
cmpsb
lret
cld
or
dec
stos
dec
mov
push
jg
popa
in
pop
lods
push
repnz
mov
sub
jle
jne
jae
xor
and
cltd
adc
test
mov
mov
push
push
popa
dec
clc
test
mov
shrl
les
add
les
push
xchg
loop
or
sbb
gs
xchg
xor
add
xor
sahf
sub
sahf
fmull
mov
test
cmove
pop
push
jmp
or
or
fwait
movsl
daa
sbb
add
adc
mov
bound
inc
lods
in
inc
or
dec
inc
or
hlt
rcrl
adc
mov
dec
pop
mov
cli
pop
mov
sub
jne
std
mov
out
fcomp
test
push
in
xchg
test
cmp
out
pusha
iret
sub
mov
addr16
jg
pop
and
lahf
call
jnp
dec
ss
inc
jmp
icebp
inc
mov
sahf
mov
ret
xchg
pop
shlb
jae
gs
push
stc
movsl
cli
popf
out
es
stos
lret
mov
cmp
bound
imul
add
adc
sbb
adc
push
repnz
sbbl
or
hlt
mov
xchg
inc
pushl
or
jno
addb
sbb
jbe
pop
add
jo
int3
inc
sbb
ficomps
inc
repz
ljmp
xchg
fnstcw
out
jnp
movsb
clc
shlb
mov
jns
jge
and
ret
int
aaa
cli
xor
cmp
xchg
mov
jl
dec
mov
push
jb
cld
xor
jae
adc
lock
cmc
scas
test
mov
insl
cmpsb
lea
in
out
jp
enter
daa
push
mov
loope
jl
sub
test
mov
outsl
lods
and
pop
jb
inc
push
inc
sbb
pop
mov
int
insl
leave
xchg
jle
js
arpl
pop
pop
or
push
xchg
lret
add
in
pop
adc
or
jl
div
in
xchg
lret
xchg
sti
xchg
mov
cmpsl
ljmp
aam
and
adc
adc
cmp
xor
mov
rcrl
mov
cmc
cli
sbb
in
lods
test
cmpsl
jg
sahf
jbe
fsubs
sti
fs
aaa
rclb
out
test
popf
cmp
shll
sbb
leave
aas
outsb
cli
sub
inc
xor
pop
cmp
in
or
pop
sbb
dec
test
mov
sub
add
adc
sub
mov
sbb
push
mov
add
mov
adc
mov
incb
inc
push
sub
cmp
mov
push
or
sti
push
push
bound
lcall
push
ljmp
in
in
les
repz
ret
xchg
fimull
in
xlat
dec
shrb
adc
pop
in
addr16
outsl
mov
mov
or
mov
outsb
das
icebp
dec
inc
movsb
cli
je
out
jecxz
adc
lea
repz
call
iret
pmulhuw
loope
aas
dec
cmp
sub
inc
fidivs
into
aas
je
mov
dec
cs
xor
negb
sbb
cwtl
and
test
cwtl
cltd
xchg
icebp
pop
lahf
xor
xchg
cli
jnp
lods
xor
arpl
mov
push
mov
das
loopne
inc
rolb
bound
ret
jmp
lods
imul
lds
lods
fisubl
jne
mov
lods
shll
mov
push
dec
inc
mov
push
or
add
subl
mov
xlat
popf
push
sub
dec
clc
mov
fisttps
loope
sarl
es
stos
add
sbb
daa
bound
sub
push
adc
clc
pinsrw
xor
xor
aas
push
bound
mov
scas
test
xchg
out
dec
dec
xchg
inc
cmpsl
jno
or
aam
fwait
aam
xchg
push
clc
aam
add
sub
xchg
cmp
push
bound
xor
in
addl
mov
scas
test
ja
dec
or
inc
mov
aam
mov
imul
jne
pop
mov
inc
in
out
mov
outsl
xchg
adc
insb
inc
xchg
jae
enter
add
sub
test
jmp
repz
and
add
insb
mov
das
sub
je
add
clc
jne
pusha
xchg
jns
fbstp
push
mov
pop
testl
jae
fwait
loope
mov
push
mov
push
jmp
and
xchg
xor
and
scas
and
sti
adc
fsubs
repnz
push
mov
aam
sub
inc
jge
add
sahf
or
in
mov
inc
mov
or
call
int3
xor
mov
faddp
lahf
mov
rclb
mov
daa
ss
cmpsb
mov
movsb
and
push
or
and
mov
sbb
leave
aaa
mov
dec
loopne
dec
lods
movsb
jl
pop
adc
pop
xchg
push
push
add
xor
into
ds
iret
push
sbb
addb
dec
loopne
xchg
add
ljmp
enter
daa
addr16
add
loope
test
sub
sub
into
xchg
lods
fisttpll
movsl
fidivrl
and
cmp
and
push
sbb
mov
xor
lea
popa
sarb
les
cltd
sbb
push
jmp
push
fcoml
or
sti
adc
add
repz
mov
sahf
and
cmp
int
lahf
or
stos
aaa
icebp
pop
dec
ds
and
shl
sub
sbb
into
sub
test
sbb
jg
es
loop
push
pop
stc
mov
ds
cmp
sbb
shrb
cmp
mov
testl
out
cmp
xor
cld
into
sub
jle
xor
add
imul
or
sub
fimull
inc
repz
sub
lcall
stos
test
test
shl
fs
cmp
inc
mov
fsts
repz
jae
popf
mov
sbb
or
adc
mov
pop
lods
add
adc
adc
pushf
fldl
jmp
and
rorb
jns
jle
test
imul
jb
cs
mov
daa
shl
lds
lea
imul
test
cmp
js
rorb
fistl
jmp
inc
movsl
adc
aas
adc
mov
add
or
mov
out
fnsave
pushf
std
sub
push
repnz
xchg
stos
mov
xor
cld
mov
jae
mov
pop
mov
scas
jmp
jnp
lods
das
mov
ficompl
aam
lods
cs
js
sub
lods
add
mov
pop
xor
call
sub
movsl
sub
outsb
rcll
stos
mov
pop
outsl
adc
add
ret
sub
test
out
mov
inc
leave
push
out
push
dec
sub
xchg
mov
and
push
sub
pop
insl
pop
cmpsb
stos
repnz
xchg
out
mov
jge
out
clc
lahf
mov
and
mov
mov
mov
jns
lods
hlt
jb
shlb
dec
scas
mov
mov
dec
aas
stos
ja
ds
or
jb
fwait
add
jge
out
int3
add
ud0
or
bound
scas
or
xchg
gs
mov
cmp
mov
push
data16
dec
jno
js
xor
push
xor
lahf
adc
jne
xchg
mov
fwait
out
xchg
mov
ss
ds
rolb
push
add
and
or
push
and
stc
xchg
jnp,pn
aad
jle
pop
xor
pusha
xor
fists
xchg
ret
clc
pop
mov
jae
adc
je
xor
repz
sub
jle
mov
or
imul
xchg
scas
xor
push
mov
mov
iret
sbb
repnz
hlt
pop
daa
lea
cwtl
gs
add
cld
xor
loopnew
inc
push
cmpsl
rorb
pop
incl
inc
popa
out
int3
sbb
lea
out
fisubs
sbb
shrb
mov
mov
cmp
movsb
push
dec
aaa
push
pop
mov
icebp
jge
xchg
sahf
sbb
jns
aaa
js
cmp
pusha
jno
popa
repz
inc
push
dec
aam
mov
cmp
adc
shlb
stc
dec
scas
scas
inc
lods
push
mov
arpl
inc
inc
out
cmpsb
insl
cmp
in
mov
divb
pushw
and
loopew
divl
sub
xchg
mov
add
mov
stc
scas
cs
jle
ss
lods
sbb
insb
xor
add
dec
bound
pop
sub
pop
fsubs
les
inc
pop
dec
faddl
sbb
ljmp
adc
fsubrl
divb
jno
dec
mov
jle
and
pusha
jae
cmpsb
sub
loop
fisubrl
es
and
into
fcmovne
mov
add
mov
xor
sbb
imul
aam
add
mov
loop
scas
insl
stc
push
mov
stc
adc
sbb
inc
sbb
cli
xchg
xor
xor
mov
or
mov
repnz
movsb
daa
push
xor
lcall
rcrb
push
adc
mov
add
inc
lods
xchg
nop
mov
std
mov
out
adc
inc
mov
fdivr
dec
sti
enter
test
adc
pop
sub
incl
pop
out
inc
inc
fldln2
adc
dec
push
cmp
mov
push
mov
cmp
out
xlat
xor
pop
pusha
dec
lcall
xor
lret
push
pop
aad
push
push
nop
xor
jb
bound
je
mov
ret
movb
es
int
das
mov
mov
dec
adc
xchg
pop
mov
xchg
inc
in
js
inc
jnp
xor
mov
sbb
mov
push
add
roll
fs
and
cwtl
xchg
shrb
hlt
xor
or
sub
ljmp
mov
sbb
dec
lock
popf
push
das
sahf
sub
es
sub
mov
aam
in
sub
pop
popl
es
into
cltd
insl
mov
cmp
cs
ljmp
lea
bound
mov
gs
mov
mov
jns
aaa
pop
cltd
mov
imul
jbe
mov
cmp
jno
jg
xor
adcl
pop
sbb
loope
pop
out
in
hlt
xchg
xchg
mov
sti
push
lret
jb
daa
js
sub
popf
or
cmpsl
pop
inc
dec
push
dec
jecxz
arpl
push
xchg
orb
aad
dec
or
in
fwait
xor
lret
loope
outsb
xchg
or
bound
jns
pop
bound
pop
jns
fsubrl
xchg
mov
mov
adc
loopne
sahf
add
pop
and
rcll
std
icebp
mov
push
xchg
mov
inc
outsl
cmp
jne
popa
pusha
mov
ret
jne
jne
mov
inc
xchg
or
aam
lret
sarl
out
cli
insb
sub
jnp
shlb
aaa
mov
and
xor
insb
xchg
jle
ror
in
add
pusha
int
pop
fbstp
mov
gs
push
inc
nop
xchg
jmp
push
inc
into
xchg
popf
pop
push
mov
fidivrl
hlt
jo
arpl
dec
imul
push
push
jmp
pushf
iret
jns
jg
cmp
dec
outsl
hlt
push
mov
inc
or
sbb
mov
add
dec
dec
roll
fisttpl
mov
pop
mov
fiadds
sbb
das
test
rorb
enter
test
movsb
cltd
or
jbe
insl
inc
jge
test
sbb
sub
aaa
aaa
xchg
aas
cmp
cmp
dec
inc
arpl
push
sbb
insl
xor
test
stc
scas
lea
ret
xor
test
sbb
fiaddl
or
cmpsb
lock
cld
enter
daa
gs
cli
loope
push
sub
xlat
inc
cmp
ret
ds
xor
xchg
jbe
lahf
popf
or
pop
cmpsb
pop
sbb
iret
add
mov
xor
popf
dec
adc
push
pop
test
cmp
cltd
out
pop
std
bound
cltd
xlat
pop
fsubr
inc
addr16
outsb
pop
rcrb
shlb
xor
vprotq
sbb
lret
mov
test
push
adc
pop
dec
gs
stos
shll
shll
xchg
mov
sahf
pxor
sub
ljmp
test
fs
in
ret
ret
or
cmp
add
testl
jbe
xor
test
cmp
inc
in
or
sbb
repz
add
imul
in
xor
imul
mov
add
hlt
jne
xor
or
clc
outsl
out
mov
shlb
xor
lret
stos
sub
or
sbb
lcall
inc
in
dec
dec
flds
or
repz
xchg
xchg
and
sbb
orb
pop
adc
cld
pop
pushf
mov
mov
mov
or
xchg
nop
push
lcall
addr16
mov
je
movsb
and
dec
stc
imul
inc
pop
call
dec
daa
mov
andl
in
pop
pop
adc
inc
jae
cmp
cmp
aas
push
mov
outsl
cmp
rorl
sti
mulb
dec
std
jnp
xchg
cwtl
push
mov
sub
loope
fwait
cld
adc
aas
mov
cmp
jbe
das
jge
js
stc
sarl
adc
aam
jg
ret
xchg
push
pop
es
xor
dec
xchg
dec
xor
into
sbb
popa
inc
adc
mov
mov
jo
insb
test
mov
lods
xor
add
loope
cltd
out
add
test
sub
je
mov
cwtl
jle
clc
jo
dec
xchg
ss
sub
and
cmp
in
stos
rclb
lods
out
push
sub
xchg
decb
xchg
push
movsl
fiaddl
psraw
xor
or
mov
stos
stos
add
in
mov
xchg
lds
mov
stos
fwait
popa
fs
loope
xchg
add
jge
dec
lcall
sub
fninit
cltd
jns
lods
mov
popa
xor
push
mov
std
xor
inc
sahf
sbb
aam
ja
fldenv
mov
inc
or
test
dec
gs
dec
mov
xor
push
stos
jno
mov
xchg
cli
fdivrs
aam
mov
pop
out
out
push
lahf
sub
jbe
daa
les
dec
xchg
daa
add
insb
std
sti
mov
iret
insb
cmpsb
jle
aas
mul
or
subl
jne
mov
inc
fwait
pop
cli
jae
aam
push
add
sub
mov
cmpsb
xchg
jae
insb
add
std
sbb
dec
imul
push
xor
fxch
fsubrs
test
loope
test
mov
push
arpl
adc
inc
or
or
pop
stc
pop
inc
or
rorl
inc
inc
popl
jb
or
bnd
pop
dec
lock
lds
imul
call
xor
lret
mov
and
jb
test
dec
jge
pop
ja
scas
je
aaa
idivb
cmp
jl
xchg
sub
or
mov
mov
test
dec
push
arpl
pop
ja
push
out
or
outsl
call
in
mov
xchg
enter
daa
fs
push
mov
fldcw
in
adc
ds
jno
movsl
out
out
sbb
lahf
mov
jmp
push
xor
mov
aad
jo
lods
bound
js
aam
pop
push
push
ljmp
js
fcompl
lret
addb
adc
xchg
lahf
orb
test
adc
jp
push
lods
sbb
int
mov
sub
aas
pop
int3
mov
sub
mov
push
mov
mov
pop
sahf
mov
mov
mov
or
jb
and
fdivrp
fcoms
inc
adc
mov
cmp
mov
dec
aam
imull
xor
or
or
cs
xor
cmc
xor
stos
outsl
call
daa
imul
add
add
scas
mov
gs
xchg
inc
in
sub
aam
in
mov
cld
sti
es
repnz
dec
pop
and
xchg
inc
ftst
fnstenv
jp
repz
das
ljmp
ljmp
inc
mov
push
pushf
arpl
jmp
mov
cs
mov
xchg
mov
icebp
jb
fs
loopne
jecxz
jns
mov
or
sbb
mov
movsl
add
dec
call
sub
pop
sti
mov
inc
cli
dec
das
inc
mov
je
lock
mov
test
push
rcl
sahf
mov
ds
and
je
or
add
fs
lret
add
imul
mov
mov
das
pop
js
ror
add
sub
inc
adc
int3
gs
and
mov
or
add
inc
jmp
cmp
mov
xlat
popa
cwtl
and
jl
sbb
add
insl
cltd
and
sbb
lock
push
aaa
pop
test
mov
push
mov
rcrl
xlat
xchg
pop
outsb
add
stos
mov
push
clc
xchg
inc
shll
inc
pusha
xor
or
lcall
dec
movsl
xchg
jae
test
arpl
xchg
cmp
lret
inc
add
or
inc
ljmp
cmpsl
roll
and
mov
inc
bound
std
jns
and
in
ret
jecxz
push
mov
mov
lea
in
sbb
ja
gs
jp
lock
push
pop
gs
and
xchg
cltd
jne
inc
mov
out
xor
jmp
lahf
int3
adc
cmc
movsl
lret
or
jno
add
mov
repnz
loope
jle
ja
add
mov
add
ret
je
rcrl
lock
cmpsb
jno
jae
sbb
push
enter
test
adc
push
in
sahf
ficompl
lss
mov
push
inc
scas
lods
nop
notb
fisubrs
adc
xor
aaa
dec
mov
leave
pop
cld
inc
hlt
add
arpl
xor
push
xchg
push
mov
push
int3
fldl
sbbb
push
dec
inc
lds
sbb
mov
jae
fidivrl
subb
movsb
scas
jl
push
inc
mov
xor
push
pop
sbb
sub
mov
lock
adc
jno
push
add
testl
xor
cmp
xor
mov
push
mov
filds
sbb
cmpsb
mulb
stos
in
jb
stos
enter
daa
arpl
push
ds
loope
mov
mov
mov
adc
lret
lahf
aam
sub
push
add
cmp
mov
cwtl
sbb
pop
rcl
or
mov
dec
lcall
insl
faddl
add
mov
mov
sub
adc
insl
cmp
outsl
jo
mov
imul
sbb
and
outsb
repnz
scas
xchg
xor
sub
pushf
jns
xchg
push
or
dec
push
iret
mov
mov
jbe
aas
pop
rolb
insl
pop
loop
int3
pushf
stc
pop
cmp
xor
jp
call
cmp
js
xor
sbb
cli
sub
fidivrs
mov
cltd
into
mov
jns
xor
push
call
xor
cwtl
push
adc
stos
les
xor
insb
lods
dec
pop
mov
lahf
or
inc
xchg
shrb
ret
mov
in
sbb
pusha
cmpsb
adc
sbb
cli
pop
inc
loop
inc
adc
aaa
les
xchg
push
xchg
test
push
adc
clc
fcoml
test
mov
adc
xor
jmp
push
cs
loopne
aad
stos
push
nop
out
outsl
jb
xor
dec
xchg
scas
fdivs
popa
jecxz
cmp
aam
adc
mov
dec
and
sub
adc
cmp
pop
sahf
push
ja
orl
aas
mov
cmp
cwtl
mov
cmc
sub
and
jmp
incl
cwtl
jne
mov
xor
mov
xor
push
lret
fcomps
mov
push
jne
out
mov
rcrb
adc
aam
mov
pop
es
xchg
dec
lea
cmpsl
bound
test
mov
sbb
xchg
mov
cli
jns
and
pop
and
pop
jmp
dec
add
iret
dec
cltd
pop
cmpsb
ret
xor
mov
repnz
out
mov
xchg
mov
out
xchg
shll
popf
pop
sbb
mov
push
ja
xchg
mov
push
pop
or
setg
adc
xchg
add
fsts
cmp
dec
dec
fistps
test
cld
ret
xchg
inc
push
inc
lcall
fwait
mov
pushf
add
mov
into
call
andb
bound
cmp
xchg
mov
xchg
nop
mov
push
fnstenv
je
jp
negl
mov
xchg
rorb
push
xchg
dec
divl
adc
jmp
xchg
push
cltd
cmpl
out
test
xlat
or
addr16
stos
xor
pop
and
shrb
out
sub
test
sbb
pusha
sahf
ljmp
fwait
mov
pop
or
into
inc
mov
inc
jae
movsb
cmp
mov
mov
mov
and
xchg
fcmovbe
int3
hlt
xchg
call
insl
pop
imul
and
xchg
adc
xor
jg
xchg
ljmp
iret
dec
and
dec
sbb
arpl
cwtl
stos
inc
adc
orb
bound
or
mov
mov
lock
stos
or
fsubrp
jns
sbb
cld
mov
push
gs
cmp
push
movsb
cmp
push
xchg
ljmp
popf
test
aam
je
inc
cmp
inc
aad
jnp
mov
pop
dec
nop
scas
jle
les
mov
stos
jns
sub
insl
push
or
test
jge
cmovae
cmpsb
jns
jno
pop
movsb
mov
mov
repz
bound
loope
fwait
jne
push
xchg
fidivrl
cmp
mov
scas
and
and
cli
into
ljmp
jne
add
lcall
xor
jmp
pop
js
add
pop
aam
jb
pop
clc
cltd
push
sahf
daa
push
fsubr
popf
mov
cmpsb
sbb
outsb
dec
inc
adcl
in
into
xchg
ss
popa
imul
ret
cmpsl
and
movsl
and
mov
cs
mov
lret
lret
add
in
arpl
ret
clc
test
test
xchg
cmpsb
or
dec
ds
stc
inc
les
cmp
inc
jp
jl
cmp
xor
ret
outsb
into
cli
pop
jle
xor
dec
cmp
pshufw
mov
into
pushf
lods
pop
cmc
shlb
outsl
sub
adc
aam
imul
mov
dec
mov
lods
xor
rorb
lds
mov
mov
mov
test
xor
aas
gs
pop
into
loopne
icebp
sti
pop
bound
pop
inc
and
or
shl
cli
inc
ret
xchg
insb
dec
mov
cmp
fs
xlat
ret
and
sub
mov
pushf
mov
out
cs
aad
nop
outsl
nop
lahf
repz
inc
cmp
xor
or
mov
dec
jecxz
inc
sbb
xchg
lods
inc
lea
xchg
call
leave
loop
mov
addr16
imul
dec
mov
or
pop
inc
fbld
inc
or
adc
cs
and
and
sbb
cmp
mov
sub
ds
jo
lods
cwtl
subb
mov
cmpsl
pop
mov
data16
cld
xchg
pop
outsl
lret
inc
xor
mov
cmp
inc
ja
das
sbb
shlb
std
sub
mov
bound
aas
ret
inc
cmp
cmp
scas
dec
mov
fisubs
daa
xor
subl
nop
mov
orl
add
xor
cltd
lahf
xchg
mov
dec
add
mov
cs
xchg
repz
sbb
icebp
xor
leave
test
icebp
stos
popf
or
xchg
rcrl
push
ss
lods
paddd
stos
or
or
and
arpl
mov
mov
mov
test
or
add
jmp
lret
or
hlt
and
push
lret
add
into
das
es
ja
bound
mov
xchg
lock
mov
or
mov
adc
xchg
jp
mov
mov
negl
mov
in
and
add
jne
mov
mov
scas
js
icebp
scas
mov
fisttps
push
xor
rcrb
sti
and
sub
addr16
addr16
stos
movsb
sbb
lcall
lea
in
shrb
cmp
or
pop
inc
pop
mov
jae
jb
push
dec
mov
popf
testl
aam
arpl
dec
fiaddl
cs
jg
imul
scas
jb
jo
add
adc
iret
cmc
nop
dec
repnz
hlt
xchg
cmpsl
arpl
inc
xchg
inc
adc
movsl
or
into
je
inc
mov
das
add
xor
int3
mov
rcrb
and
xchg
andl
shl
je
std
testl
movsb
lds
dec
push
in
test
or
inc
sub
loopne
mov
xor
cmp
jno
add
popa
dec
jmp
xor
lock
inc
ljmp
arpl
push
dec
push
inc
inc
or
adc
inc
dec
adc
test
daa
popa
imul
xchg
sahf
xchg
sub
and
jno
scas
daa
call
and
pop
push
lahf
sbb
adcb
sbb
nop
xchg
add
adc
repz
push
sub
stos
js
cli
jmp
adc
lcall
adc
cltd
fs
xchg
imul
ja
adc
and
cs
mov
mov
sub
sbb
and
jmp
imulb
lea
pop
dec
jecxz
lret
inc
sarl
mov
push
cmpsb
or
dec
rcll
jg
test
loop
jecxz
stc
std
rorb
enter
sbb
ss
sti
push
fsubr
fwait
and
add
nop
xchg
insl
xor
jne
cmp
push
or
cmp
test
pop
sub
xchg
xor
hlt
in
adc
and
imul
icebp
mov
cmp
lods
sbb
inc
jnp
sub
mov
test
xchg
xor
push
jmp
loopne
into
pop
sbbl
mov
repz
xor
xchg
das
xor
cmp
cltd
xlat
add
or
jmp
movsb
pushf
fs
dec
jmp
and
aad
fiaddl
jp
push
dec
movsl
in
jb
outsb
xchg
dec
adcb
jecxz
xchg
mov
xchg
insb
sub
mov
imul
lcall
dec
test
popf
cmpsl
pop
in
push
inc
jbe
inc
add
aas
int
mov
dec
inc
dec
and
inc
rorl
inc
scas
std
pop
std
in
cmp
sahf
inc
mov
cmp
rorl
lret
mov
std
mov
push
sbb
popf
lahf
adc
stc
xchg
inc
add
mov
adc
es
shrl
dec
adcl
ljmp
pop
lods
scas
popf
jo
mov
xchg
and
dec
push
cmp
sub
push
cltd
lret
test
dec
push
cmpb
xor
pushf
clc
pop
insl
sbb
in
imul
mov
out
fcoml
lahf
push
adc
test
test
jae
cmpb
xor
fsubr
mov
mov
pop
dec
sbb
test
jmp
xchg
inc
pushf
inc
enter
add
sbbl
adc
add
shll
call
out
jns
push
into
in
addr16
xchg
aas
movsw
mov
test
loope
push
pop
int3
daa
xchg
and
jp
and
mov
jb
adc
test
mov
fmull
xchg
fisubl
jmp
add
lock
push
sub
bound
shlb
pop
rorb
and
lds
jle
jl
in
mov
cmpsl
fists
xor
pop
js
fiaddl
cmpsb
jae
test
adc
mov
mov
fidivrl
fs
xchg
jle
mov
outsl
mov
dec
and
adc
arpl
repnz
leave
mov
mov
inc
pop
cwtl
pop
or
dec
sbb
or
inc
or
xor
xchg
jae
sahf
test
pop
or
cmp
xor
pop
fadd
sets
mov
sub
pusha
cmp
lahf
inc
push
xor
into
jbe
adc
jge
mov
sbb
mov
jno
xchg
jl
push
sbb
dec
outsb
pop
ds
mov
cs
dec
sti
imul
add
test
adc
aaa
inc
lcall
in
daa
rolb
andb
push
add
loope
lds
cmp
mov
and
fwait
mov
cmp
mov
dec
popl
jg
xor
das
loope
loopne
dec
xchg
cli
test
pop
push
jecxz
lcall
adc
inc
incl
test
outsb
push
push
inc
adc
jp
mov
push
mov
ljmp
xchg
pop
loopne
xor
xor
mov
icebp
fsubrl
or
mov
lret
stc
rcll
popf
mov
imul
dec
push
add
test
movsl
pop
xorb
jg
dec
pop
loop
mov
daa
fs
lods
dec
adc
xchg
add
cmp
test
popf
mov
xor
or
cmp
sub
stos
inc
ror
clc
mov
xor
mov
aaa
adc
test
pusha
adc
xchg
mov
fidivs
leave
data16
mov
mov
imull
rorl
push
mov
out
sti
loop
cmp
gs
mov
adc
and
fsts
jle
repz
data16
repnz
cmp
mov
pop
xchg
mov
scas
pushf
xstore-rng
cmpsl
pop
jmp
sub
cs
js
outsl
xchg
push
xchg
lahf
dec
add
lock
fiaddl
dec
stc
ljmp
je
sbb
jecxz
and
cwtl
mov
aaa
call
repz
pop
stc
addl
mov
das
inc
push
mov
mov
insb
sub
scas
mov
xchg
dec
cmp
ficoml
test
mov
pop
mov
mov
adc
jmp
lret
and
jle
mov
xor
clc
rcrb
adc
mov
xchg
clc
dec
dec
ret
popa
es
es
adc
insl
sbb
jle
cmpsl
pop
add
or
inc
mov
mov
arpl
and
call
hlt
add
loope
add
testl
insb
popf
fstpl
leave
clc
xchg
inc
push
xchg
jno
sti
sbb
or
pop
sbb
stos
jnp
push
out
aas
lea
in
insb
aad
mov
in
cltd
or
or
mov
mov
jns
test
inc
ret
xchg
rcll
dec
in
roll
pop
or
repz
dec
ljmp
cwtl
aam
add
outsb
pushl
mov
js
nop
pop
dec
in
inc
xlat
xchg
mov
push
mov
push
sub
xchg
mov
inc
in
push
mov
mov
inc
xchg
dec
aam
dec
jne
mov
mov
push
in
out
scas
xchg
xchg
lods
incl
int
xchg
lret
add
andl
imull
pop
in
addr16
ss
and
or
jnp
int
jle
lods
mul
xor
arpl
push
fildll
push
cs
leave
pop
scas
sub
inc
rcrb
fcoml
aam
mov
jge
push
loope
test
jmp
icebp
xchg
in
mov
out
imul
scas
cmp
mov
iret
mov
lods
repnz
jecxz
leave
xor
mov
arpl
arpl
inc
sbb
pop
push
xchg
movsb
add
fmul
mov
adc
fsubrs
pop
std
pop
sub
pop
and
pop
mulb
sbb
aam
push
sbb
shlb
mov
push
cmp
sbb
jno
inc
jl
shlb
push
insl
or
xor
cmpsb
inc
and
pop
push
subb
test
fiadds
inc
cmpsb
add
in
push
aas
mov
jnp
sahf
daa
pop
lahf
jno
inc
push
xor
mov
les
inc
mov
cmp
adc
int
ss
mov
out
sbb
cmp
push
movsb
adc
pop
outsl
mov
pop
xchg
sar
lcall
insl
mov
jae
mov
jno
lods
adc
fldenv
jmp
fbstp
mov
addr16
sub
push
mov
cli
into
sub
cmp
lret
pop
shrl
sbb
inc
sahf
loope
add
xchg
mov
loop
lret
jno
imul
fidivs
adc
repnz
fsubs
testl
les
dec
orb
xor
into
inc
mov
cmc
adc
push
bound
adc
adc
movsb
cmp
mov
insl
cmp
les
push
out
jae
sub
mov
leave
fistl
popf
popa
fs
and
mov
mov
fxch
inc
mov
xlat
xchg
test
ficoms
dec
mov
cmp
jno
xlat
addb
inc
out
icebp
adc
lret
into
icebp
daa
cs
nop
xor
or
jb
jns
dec
jo
pushl
xchg
jecxz
cmc
sbb
lea
or
cli
dec
dec
xorl
iretw
fcmovne
adc
inc
popf
xor
cmp
sarl
or
lahf
mov
mov
lods
out
shrl
mov
div
cmp
gs
cwtl
mov
mov
mov
jmp
inc
cld
pop
cmp
mov
shlb
push
sub
das
mov
pop
shr
pop
dec
sub
rcrl
ret
lock
les
jecxz
add
outsb
cmpsl
pop
lahf
xor
popa
lret
and
lods
test
int
sbb
bound
and
or
pop
addr16
dec
add
lahf
inc
test
push
ss
push
ror
fldl
test
jecxz
push
ja
ror
jae
pop
stos
push
cltd
out
mov
sub
push
pop
jge
sbb
xchg
xor
dec
or
sysenter
add
pop
push
dec
out
iret
test
sub
xchg
es
test
or
xor
jnp
sub
mov
mov
pop
pop
mov
bound
sarl
cltd
in
js
xchg
fldl
mov
inc
leave
ja
jp
sbb
mov
out
ds
push
adc
fdivs
dec
out
mov
jae
out
mov
pop
xchg
adc
jmp
xchg
and
xorl
sub
pop
loopne
addr16
push
aad
mov
pop
insb
jg
cmp
jmp
rolb
pusha
or
xchg
out
sub
test
inc
fstp
test
iret
jae
push
xchg
pop
rcrb
add
xor
ficompl
xchg
adc
lods
cld
imul
scas
fwait
cmpsb
and
fiaddl
adc
pushf
loop
sbbb
ja
insb
arpl
fld
inc
sbb
scas
fldt
and
inc
push
mov
fadds
cld
je
push
pop
imul
ds
rolb
mov
push
jmp
adc
pop
loop
rcrl
jbe
orb
inc
jo
jo
sub
std
sbb
xchg
dec
dec
dec
and
xor
add
push
push
sbb
test
push
cmpsb
test
arpl
cmc
into
enter
daa
pop
add
mov
jg
sub
shrl
cmc
mov
sbb
movsl
sbb
and
sbb
jbe
scas
orb
add
dec
add
jecxz
data16
addr16
pop
xchg
jno
js
push
jle
rolb
lcall
sahf
fcompl
lock
aam
push
adc
mov
repz
mov
inc
std
mov
sbb
mov
dec
adc
push
sub
mov
call
and
stos
insb
lret
pop
inc
scas
test
out
sahf
test
test
jbe
subb
loop
or
stc
and
movsb
imul
xchg
mov
inc
cmp
pop
push
jmp
cli
sub
inc
xor
or
into
sub
cmc
fdivrl
xor
and
imul
rclb
cld
mov
data16
xor
lods
iret
out
imul
mov
frstor
xor
xor
inc
jg
inc
add
xlat
fucomi
pop
cmp
jno
int
add
insl
repz
add
cmp
dec
into
xlat
mov
aad
adc
sbb
gs
mov
fmul
aad
or
push
dec
ret
jb
dec
loop
out
popa
je
cs
jecxz
or
mov
cld
mov
insb
mov
pop
mov
dec
cli
dec
push
sbb
icebp
jle
int
mov
inc
push
popa
aas
stos
add
mov
jo
xor
pop
lods
sarl
and
cmp
std
or
dec
cwtl
outsb
mov
lcall
ret
cld
inc
sub
lret
add
cmp
scas
lcall
mov
push
sub
mov
ret
jg
cld
es
jb
insl
jmp
push
int
pop
ret
repz
loop
int
out
pop
nop
mov
test
xor
mov
xchg
out
xchg
xor
cltd
outsl
imull
lds
mov
leave
stos
insb
cmpsb
arpl
add
ljmp
pop
jo
mov
pop
addr16
add
cmp
push
mov
fs
xor
pushf
loopne
push
mov
xchg
xchg
push
gs
test
xchg
xchg
cli
inc
lea
or
inc
lret
fwait
stos
dec
cmp
push
sti
xchg
add
cmp
ret
pushl
and
mov
xor
lcall
mov
jae
mov
std
ja
ja
jg
jp
cmpsl
lret
fisttps
in
jns
mov
push
test
inc
pop
mov
fcompl
insl
out
std
xchg
push
jmp
popa
xchg
out
addl
out
xchg
sub
push
jo
addr16
pop
mov
insb
ljmp
jle
jmp
in
fmull
pusha
movsl
dec
mov
insl
out
mov
pop
sbb
jmp
jae
push
ljmp
hlt
cs
pop
or
movsl
xchg
fwait
cmpsl
cmc
sbb
or
cmpsl
scas
incb
adc
jns
pop
iret
jno
pop
repnz
lahf
leave
and
hlt
ret
arpl
mov
add
xchg
inc
test
or
ret
dec
add
sarl
stos
mov
push
sub
shlb
mov
in
lods
cmp
dec
clc
movsb
icebp
mov
push
and
push
jbe
out
jge
or
sbb
lcall
xor
jns
scas
adc
fdivs
push
xor
jg
adc
jo
or
push
sub
and
je
cmp
lods
out
or
add
enter
daa
pop
in
push
pop
shl
in
adc
cmp
mov
insb
sbbl
lahf
outsb
and
or
add
mov
xor
les
js
fwait
cltd
pop
getsec
int3
lcall
or
inc
jo
push
dec
and
or
mov
jno
mov
cmp
out
jne
loopne
popa
mov
push
sar
int
mov
inc
pop
inc
mov
int
fadd
xor
fisubl
sahf
daa
in
test
push
add
das
jg
dec
dec
loop
xorb
fnstenv
fs
inc
fists
push
push
aas
ss
xor
sub
sbb
push
lods
idiv
ret
pop
lock
xor
xchg
or
pop
dec
into
or
fwait
xor
fld1
outsl
fnstsw
xchg
cmp
adcb
jo
add
ss
mov
syscall
out
jnp
sub
sub
in
lahf
mov
sti
out
push
jecxz
into
gs
outsb
and
jb
aad
std
inc
jbe
test
fnstcw
inc
cwtl
in
mov
repz
cmp
sbb
pop
mov
xlat
call
sbb
inc
aas
lock
adc
dec
cs
aad
inc
out
nop
out
cmp
and
stos
dec
pop
adc
je
mov
jecxz
imul
jnp
mov
ja
push
movl
sbbl
fcmovu
sub
out
rolb
jl
inc
outsb
test
aas
dec
repz
daa
xchg
rol
mov
mov
mov
and
push
mov
mov
cld
insl
repnz
lret
jb
stos
mov
lcall
shlb
sub
in
ret
push
or
es
insl
rclb
dec
outsl
adc
add
popa
stc
dec
pop
lods
pop
shll
mov
movsb
fsub
mov
movsl
dec
mov
cltd
cmpsb
repz
hlt
daa
push
mov
lods
fst
ja
clc
dec
ss
xchg
jecxz,pn
sbb
scas
imul
stos
dec
test
out
push
lods
xor
andl
hlt
lea
or
xor
push
bound
ret
dec
mov
pop
test
mov
testb
outsb
inc
and
push
or
sub
push
stc
or
sub
sub
call
dec
sbb
mov
jns
inc
jle
mov
mov
mov
das
mov
pop
mov
cmpsl
inc
jp
out
mov
repnz
mov
cs
dec
jge
xorl
pop
or
es
jmp
sub
icebp
adc
hlt
out
inc
add
sub
or
and
mov
mov
in
push
iret
popa
jnp
push
jle
clc
je
inc
pop
pushf
pusha
inc
push
js
mov
je
or
sub
inc
repz
enter
ds
sbb
ljmp
sahf
in
fiaddl
sub
repnz
imul
scas
popa
pop
lret
stc
movsl
adc
iret
rorb
repnz
pmuludq
xchg
and
or
push
add
imul
sub
jg
lds
and
out
in
pop
sarb
mov
js
pusha
cmp
gs
outsl
lods
das
jbe
rorb
xchg
insl
sbb
xchg
mov
jno
sub
add
icebp
lret
add
xorl
mov
or
aas
sahf
ljmp
lret
cld
in
ret
fst
enter
daa
pop
dec
pop
push
xchg
sub
push
xchg
ds
adc
movsl
daa
mov
and
dec
lahf
mov
xlat
xorb
rolb
out
adc
fcomps
jmp
js
jne
pop
dec
mov
lcall
jnp
lock
sub
aad
lcall
shrb
out
mov
imul
pop
cwtl
push
mov
cmpl
les
sub
fstps
lret
inc
shrl
mov
xchg
add
lret
test
xlat
push
and
imul
sub
stc
nop
mov
in
adc
jns
cmp
xchg
xchg
push
mov
mov
xor
fistpll
add
into
out
dec
cmc
push
insl
xor
and
adc
lds
out
adc
bound
sbb
adc
int3
stos
sub
mov
std
inc
out
vcvtsi2sdl
in
in
or
sti
sahf
sbb
sbb
or
mov
xchg
fldcw
lahf
clc
ret
aam
fs
pop
or
xchg
mov
xlat
cmp
sarl
mov
loope
adc
aad
rol
dec
subb
push
popl
aad
mov
jecxz
or
loop
loope
repnz
mov
ret
inc
ds
mov
xor
mov
nop
pop
adc
push
inc
mov
aas
call
retw
repnz
and
mov
adc
mov
or
cwtl
in
cmp
cld
jnp
icebp
jo
sbb
cwtl
mov
lret
loope
scas
mov
jp
mov
jg
lock
fildll
push
out
stos
shlb
sub
out
popf
xor
dec
mov
lods
dec
push
jb
pop
xchg
imul
fldenv
popa
adc
scas
mov
out
rclb
and
push
movsb
das
pop
les
pop
cltd
fstl
sub
push
dec
mov
cmp
sbbl
insl
sahf
pop
sbb
sub
roll
imul
jge
push
push
pop
mov
pop
xor
mov
xor
inc
or
dec
sbb
insb
test
pop
addb
popf
mov
mov
jecxz
fwait
or
inc
add
jo
movsb
ljmp
hlt
add
in
or
xchg
lret
mov
pop
pop
mov
jae
ja
push
cmpsb
jp
fnstcw
sub
mov
xor
jne
imul
sub
cmp
stc
or
test
jp
andl
out
jb
sub
dec
dec
fsubl
jnp
stos
push
fdivr
and
xchg
jecxz
shlb
idivb
jle
cli
cmp
dec
cmp
pusha
fcmovnbe
stos
fildll
notb
inc
decb
sti
jae
fnstenv
popf
loope
mov
fldl
fidivl
cmp
sbb
dec
imul
mov
les
out
push
scas
push
push
iret
das
lret
fcomi
jnp
and
adc
hlt
pop
pusha
mulb
ror
inc
es
xlat
or
mov
ds
addl
int
fwait
add
popf
aad
xor
jnp
fisubs
lds
mov
mov
or
inc
movsb
pop
imul
jge
aam
sbb
les
lods
bound
xchg
out
jno
outsb
ljmp
jg
push
stc
jmp
xor
adc
or
into
out
test
or
inc
gs
jne
push
fdivrs
stos
ficoml
daa
pop
cmp
adc
xchg
icebp
dec
cmp
das
cmp
adcl
and
jl
add
movsb
sbb
mov
jge
xor
es
mov
arpl
jg
js
in
pop
lea
rclb
js
fcompl
pop
je
std
mov
jmp
inc
iret
fisttpll
lock
mov
lahf
pop
and
xchg
mov
into
sub
pop
inc
sbb
lret
and
push
popa
sub
or
filds
std
pop
jg
mov
inc
lahf
out
or
sahf
ss
jecxz
cmp
push
mov
idivl
cli
ret
xor
adc
cmp
cmp
or
cltd
inc
into
shll
cmc
xor
or
outsl
fwait
ja
adc
dec
add
lock
pop
test
add
xchg
xor
jg
out
xchg
lods
sub
xchg
pusha
mov
jne
mov
dec
mov
sub
fneni(8087
test
cmpsb
pop
cmp
loopne
stos
push
neg
cmpsb
xlat
repnz
es
mov
clc
xlat
sbb
rolb
xlat
jl
mov
adc
notl
jmp
mov
test
nop
pushf
sbbb
fildll
int
movsl
jecxz
dec
stos
pop
je
ret
loop
jmp
lea
ja
insl
in
movl
mov
mov
mov
fisttpl
outsb
jbe
mov
pop
cwtl
aas
xchg
test
xchg
add
and
push
shll
arpl
add
jp
lahf
jae
mov
cmp
icebp
inc
fmul
cld
ret
cli
jecxz
push
xor
mov
pop
call
lock
adc
sub
inc
xchg
ret
sub
shrb
insl
sahf
push
fmull
dec
sbb
dec
pop
add
add
mov
adc
fsubl
jecxz
roll
iret
cmpsl
jge
adc
push
test
ret
xor
adc
into
fstpl
sahf
jns
mov
fucomp
sbb
add
shrl
jns
pop
jno
popa
stos
es
out
cs
les
lods
seta
xor
les
xor
xchg
cwtl
lods
dec
orl
lods
cwtl
adc
mov
mov
push
fwait
aaa
xchg
nopl
add
cmp
add
mov
bound
adc
in
mov
mov
add
pop
cs
pop
ja
sbb
faddl
add
add
inc
xchg
sub
nop
dec
mov
nop
jbe
or
xchg
int3
and
aam
ret
xor
push
nop
adc
push
or
addr16
ret
or
int3
jnp,pn
push
push
in
jg
pusha
jbe
shl
ret
insb
pop
ret
inc
or
test
xorl
mov
subl
sbb
xchg
fisubrl
test
mov
dec
icebp
scas
daa
loopne
push
idivb
movsl
adc
out
iret
mov
mov
xchg
data16
mov
pop
mov
sub
fmuls
sub
adc
and
fiadds
pop
fcomps
int3
and
pop
and
sbb
pop
addr16
and
mov
loope
push
lcall
xchg
movsb
xchg
shl
or
iret
adc
aad
nop
sbb
or
mov
jno
shl
jl
shl
or
xchg
push
fadd
mov
insl
int
scas
and
dec
push
mov
dec
fcoml
jbe
hlt
or
cmpsb
xchg
pop
lods
in
xchg
mov
pop
daa
pop
lods
loop
xchg
jne
dec
bound
mov
test
movsb
andb
cmp
aaa
test
mov
cmp
xor
or
jae
push
pop
xor
jmp
pop
int3
cs
push
push
subb
inc
add
sub
add
outsb
pusha
pop
inc
adc
and
pop
ds
mov
push
bound
mov
inc
push
lret
int
test
pop
ret
lret
xchg
rcrl
mov
dec
dec
data16
adc
test
enter
push
push
jg
jne
loop
sbb
fs
lret
jae
inc
in
xor
xchg
shll
imul
cli
cmc
xlat
in
or
jns
inc
pop
pusha
into
mov
mov
clc
mov
xor
add
fwait
mov
mov
cmp
popf
repz
inc
leave
add
jae
data16
cli
lods
imul
mov
xchg
pop
out
in
sub
push
xor
sti
cld
lds
dec
add
pop
loopne
push
icebp
pop
pop
scas
lock
mov
push
add
push
fucom
repz
mov
sbb
or
xlat
mov
jl
adc
pushf
adc
cld
jmp
push
and
aad
lret
test
lock
mov
jo
dec
inc
repnz
adc
dec
lea
int3
and
roll
andl
mov
jbe
pop
pushf
push
inc
fstpt
inc
mov
frstor
addr16
dec
mov
fsubrs
shll
popa
std
test
fcompl
dec
int
mov
push
push
data16
out
cmp
lret
mov
das
mov
sbb
mov
rorb
ret
jp
mov
mov
dec
inc
es
movsb
pop
insl
test
mov
pusha
lret
pop
jbe
ljmp
push
mov
xor
sbb
mov
add
hlt
add
mov
dec
sarb
icebp
iret
btr
mov
adc
inc
xchg
xchg
jmp
mov
shll
roll
pushf
add
xchg
jne
xchg
or
push
dec
push
psadbw
xor
add
xor
and
cli
xchg
loope
dec
ljmp
xchg
lods
rorb
jns
inc
jmp
shrl
push
loop
test
add
hlt
sub
pop
adc
pmulhuw
sub
push
sbb
mov
jmp
ss
jp
fdivl
je
xchg
mov
jnp
fmull
jecxz
jne
sbb
mov
dec
sbb
jmp
cld
mov
xchg
adc
lea
out
sub
mov
aas
js
addr16
popa
jmp
insb
xchg
or
jnp
jmp
jle
fmuls
sub
adc
mov
inc
and
repz
adc
push
jae
jo
push
data16
ds
das
and
push
pop
xchg
ficompl
pusha
jnp
fdivrl
int3
cmp
cmp
ret
in
push
stos
repnz
leave
ljmp
jns
leave
inc
sub
mov
push
or
sbb
int3
or
or
stos
push
mov
ror
adc
xor
cmp
insb
dec
push
pop
mov
and
sbb
mov
cmp
mov
cmpl
addr16
mov
popf
jo
mov
scas
add
fwait
push
je
out
cmc
mov
push
mov
pop
jno
adc
in
js
fmul
pop
pop
sbb
pop
mov
gs
movl
pusha
add
ds
test
movsl
cmp
pop
and
jmp
jecxz
jmp
repnz
jno
add
xchg
test
out
push
xor
ss
repnz
pop
push
je
xchg
jl
pop
or
push
lods
scas
inc
fdiv
imul
outsb
ret
or
adc
sti
jl
and
cs
mov
mov
rorl
push
int
push
int
out
sub
mov
lret
aam
xor
nop
mov
jae
sbb
les
test
xorb
pop
jg
xor
in
mov
out
and
nop
adc
cmp
mov
idiv
addl
cmp
sub
into
xchg
pop
add
mov
outsb
ljmp
ret
adc
out
aas
adc
das
inc
add
push
mov
lods
push
mov
ljmp
shll
mov
dec
push
jne
stos
rcll
outsl
push
sub
fiadds
jle
shlb
fsts
aas
les
call
jp
inc
xchg
sbb
inc
sub
pop
ja
xor
mov
add
jmp
mov
cs
mov
pusha
xor
nop
push
cmp
dec
popf
mov
in
cmp
inc
je
pop
mov
lods
mov
fwait
call
inc
in
jae
lods
sbb
sti
dec
add
scas
pop
cld
mov
out
fimull
gs
vpsubw
add
mov
roll
or
xchg
gs
dec
xchg
dec
cwtl
adc
in
mov
cmc
in
popa
cld
sbb
lret
cs
xchg
mov
aam
lock
mov
icebp
pop
movsl
rcr
aas
test
jno
adc
test
aaa
ret
dec
inc
ljmp
cwtl
fwait
dec
pop
fnstcw
pop
sub
pop
popa
push
inc
lods
lods
push
dec
scas
mov
pop
xlat
sbb
rclb
and
cmp
add
movsl
cmp
cld
das
jp
aad
es
cwtl
mov
sub
xor
cmp
test
rcr
shll
pop
insb
cld
stos
add
pop
out
hlt
sbb
xchg
push
pop
dec
push
jmp
stos
ja
inc
out
or
mov
inc
mov
into
sahf
mov
test
sub
xorb
mov
inc
orb
fwait
xchg
lcall
dec
fs
rol
decl
aam
xchg
insl
cwtl
in
mov
inc
lock
test
mov
movsb
lea
jp
jmp
mov
stos
loop
les
mov
sub
mov
pop
loopne
enter
jb
dec
jmp
pop
mov
push
mov
cltd
sub
cmp
clc
addr16
mov
and
mov
and
dec
cmpb
cli
in
xor
or
mov
pop
mov
pop
xor
inc
inc
pop
sub
sbb
popf
push
stos
jae
arpl
push
lcall
xchg
dec
sub
sbb
bound
scas
in
xor
push
test
mov
shlb
bnd
leave
jne
in
hlt
cmp
arpl
mov
mov
and
ja
add
dec
or
mov
pop
pop
xorl
lds
cld
xchg
shl
sarl
xor
pop
aaa
sub
test
jb
stos
jge
jbe
lods
daa
jge
mov
sbb
inc
aaa
ljmp
jno
or
jl
in
jae
out
adc
mov
movsb
xchg
jo
pop
dec
scas
loopne
lcall
mov
and
testb
mov
in
pop
sub
pop
cmp
daa
pop
sbb
insb
dec
loope,pt
push
pop
sub
xchg
jg
clc
movsl
inc
lock
and
lea
in
sbb
push
cld
add
lahf
sbb
mov
repnz
pop
adcb
pop
dec
mov
add
add
fcompl
sub
lods
and
rcl
icebp
test
test
cwtl
mov
sub
mov
inc
cmpsl
mov
call
call
int
sub
sub
bswap
pop
shrb
lret
or
lret
push
inc
mov
xchg
rcrl
lods
push
sub
or
leave
orb
jg
clc
or
or
mov
insb
sub
fs
and
adc
jle
ss
ret
cmp
orl
adc
mov
sarl
lahf
or
xor
jp
jbe
xchg
xor
inc
hlt
outsl
cmp
ja
pop
and
imul
aam
fmuls
mov
mov
mov
sub
dec
mov
mov
sub
pop
andl
gs
jg
jns
mov
inc
jecxz
pop
sbb
and
lahf
repz
fcomps
cmpl
pop
sub
jl
cli
sbb
pushf
addr16
pop
jmp
fldcw
lahf
inc
xchg
cmpsl
add
nop
sub
test
jb
test
je
dec
and
xor
mov
lea
or
ficomps
mov
pusha
sub
push
test
dec
in
adc
fistpl
inc
scas
pop
lahf
roll
inc
cmc
sbb
aas
fs
mov
mov
push
rcll
jmp
lret
std
testb
mov
jle
mov
int3
lods
sub
inc
cmp
inc
mov
push
mov
rorb
mov
mov
adc
push
iret
mov
fnstcw
es
jne
insl
push
xor
push
jl
cmpsl
push
push
jo
insb
pop
cmc
lods
jno
xchg
mov
jnp
js
call
repnz
inc
jge
add
repz
mov
in
mov
inc
fs
pop
dec
in
xchg
add
mov
aaa
dec
int
das
aaa
jne
jb
ljmp
push
mov
out
push
les
mov
mov
adc
xchg
decl
adc
mov
xor
ror
je
mov
mov
fisttps
and
pop
or
adc
push
sub
add
fcompl
ljmp
jl
bound
cmpsl
jns
xchg
pop
in
or
xchg
push
into
bound
shlb
pop
mov
ja
sub
mov
jb
mov
pop
aas
dec
dec
in
bound
mov
stc
jno
cmpsl
movb
inc
cwtl
jmp
and
mov
sbb
testb
hlt
sahf
addr16
mov
and
jmp
insb
std
jecxz
mov
loop
movsb
xchg
pusha
inc
ret
adc
daa
xlat
stc
ret
int3
pop
add
ss
js
imul
jge
cld
mov
adc
xchg
movsl
adc
sub
adc
scas
push
int
push
lret
or
pop
iret
stos
in
dec
repnz
pop
loope
in
std
fdiv
test
fldenv
cmpl
xor
or
pushf
stc
addr16
jg
jge
cltd
in
add
dec
mov
fdivp
cmp
xchg
stc
push
mov
push
cmp
test
push
cli
fwait
cmp
jge
push
test
cs
aaa
test
jmp
jno
fnstenv
fiaddl
dec
push
popa
mov
test
bound
jle
xchg
scas
mov
fimuls
jecxz
push
push
ss
jle
mov
xchg
fs
inc
mov
enter
daa
push
pop
aas
push
aas
pop
loope
jns
sub
pop
movsl
cmp
shll
dec
cmp
and
xchg
sub
adc
mov
push
shr
add
std
pop
xor
arpl
mov
js
gs
mov
add
pop
jbe
faddl
mov
outsb
mov
adc
mov
aaa
jecxz
and
push
cwtl
mov
push
hlt
and
mov
int
push
mov
pop
iret
jg
aas
ss
cmc
pusha
shll
mov
mov
xchg
mov
adc
jnp
xor
fwait
xchg
stc
and
pushf
adc
cs
cmp
cmp
sub
js
cli
mov
lea
mov
insl
or
jnp
cmc
dec
jmp
xor
pop
movlps
jns
imul
sub
pop
ret
mov
mov
repz
loopne
mov
and
mov
mov
adc
insb
fs
adc
xchg
pop
mov
rolb
cmpsb
fcomp
subb
fildll
sbb
mov
inc
mov
push
sbb
adc
mov
add
ja
out
xor
or
dec
pop
push
sbb
icebp
ret
das
dec
sub
icebp
jecxz
es
mov
pop
in
sahf
call
ds
call
jge
fildl
popa
pop
inc
fisttpll
adc
add
sbb
jno
mov
shll
inc
mov
cwtl
mov
mov
popf
scas
mov
mov
sti
insl
lret
or
mov
aas
mov
lods
div
sub
das
scas
mov
add
pop
in
aam
cli
sbb
push
or
cmp
cmp
sbb
popa
sbbl
fdivr
out
xchg
xchg
repnz
into
in
mov
pop
out
add
je
cltd
lock
ljmp
in
xor
push
fcomp
mov
mov
clc
sbb
int3
insl
roll
mov
out
mov
mov
push
lahf
pop
movlps
xor
dec
jae
es
mov
adc
xchg
dec
pop
pusha
jmp
cwtl
inc
jle
jle
testb
roll
cmp
fwait
repz
push
lret
xlat
add
testl
mov
in
fcoml
mov
sbb
mov
sbb
ja
imul
stc
pop
push
sbb
dec
iret
nop
jnp
xor
adc
xchg
and
jl
mov
out
icebp
les
pushf
sub
sub
xor
add
and
mov
jnp
push
adc
dec
in
jnp
pusha
loop
add
inc
loope
ret
and
sahf
jg
inc
xor
rolb
popf
movsb
arpl
flds
sbb
ret
fidivl
mov
push
fmulp
scas
mov
dec
push
adc
adc
mov
repnz
and
iret
imul
cmpsb
sbb
xor
bound
pop
push
pop
or
int3
int3
mov
imul
sbb
rcrb
jg
ljmp
movsb
mov
xchg
jbe
pop
les
popa
push
aaa
push
mov
into
mov
dec
push
loopne
jo
les
in
frstor
ret
add
jle
popf
loop
in
sub
cmpsb
pop
daa
push
cwtl
sbb
out
loope
or
sub
or
xor
mov
test
dec
imul
cwtl
scas
push
jg
dec
pop
into
mov
rclb
pop
scas
lcall
neg
repnz
aam
ficoml
outsb
in
lret
test
popw
stc
mov
lds
loope
shlb
mov
adc
int
arpl
pop
mov
sahf
sbb
stc
pop
fisttpll
icebp
rcrb
sbb
addb
loop
imul
fs
adc
push
mov
cmpsl
daa
fdiv
add
aaa
jnp
cli
shl
xor
aas
cmp
lds
into
inc
mov
xchg
xor
push
mov
add
push
imul
ret
cltd
pusha
data16
lods
pop
dec
cwtl
mov
push
lret
sub
loop
hlt
fstps
mov
mov
mov
dec
jecxz
jae
mov
pop
je
or
push
fnstcw
add
scas
or
xchg
nop
sarb
not
push
xlat
mov
mov
adc
dec
imul
xor
pop
mov
xor
popa
add
jb
aaa
test
lahf
pop
mov
jecxz
pop
pop
mov
orb
ss
mov
add
ret
mov
inc
pop
rcrl
aas
mov
jno
mov
add
rcl
lock
adc
inc
sbb
cwtl
inc
cld
je
inc
inc
fnstsw
jp
jmp
lret
jnp
imul
xchg
cltd
rclb
nop
sub
aas
aam
js
ret
divl
pushf
insl
and
pop
cmpsl
push
push
ljmp
push
lods
inc
xchg
pop
mov
shrl
aad
int3
mov
jle
xchg
add
sub
test
fiaddl
fucom
adc
push
add
popf
add
pop
enter
rcr
xor
xchg
daa
mov
orb
lahf
xor
int3
xchg
or
rcl
mov
xlat
lea
xchg
test
adc
bound
outsl
or
mov
fstps
outsb
and
add
or
bound
jns,pt
pop
in
add
xchg
movsb
mov
mov
add
pop
pop
aad
int
xchg
sub
push
mov
insl
test
out
dec
mov
out
clc
sub
mov
xchg
jmp
ja
jae
xchg
mov
or
sub
sub
cmc
addr16
imulb
xor
insb
inc
inc
arpl
cli
add
add
in
mov
pusha
jge
pop
fbld
mov
pop
aad
push
inc
inc
inc
gs
rcrb
jb
scas
popf
lret
xchg
pop
mov
push
aas
outsb
fucompp
push
xchg
push
pop
sbbl
sub
insb
stos
scas
push
fiaddl
push
pop
cmp
adc
std
iret
imul
xor
sbb
arpl
mov
fisubrs
push
inc
jge
jg
lods
add
jb
mov
cmc
pop
push
dec
fidivs
xor
jno
cmp
dec
mov
jge
std
cmp
mov
movsb
inc
jbe
popa
mov
sbb
pusha
cmp
out
jno
out
jl
data16
ljmp
dec
adc
jo
dec
xchg
scas
jge
and
adc
push
int3
push
lods
inc
mov
cmpsl
adc
mov
dec
cmp
daa
push
popf
xchg
push
inc
adc
movsl
mov
xor
sbb
test
push
leave
mov
and
lahf
lea
sub
sbb
ret
mov
stos
lret
mov
pop
cmc
movsl
into
js
popf
lock
pop
jno
lcall
fcompl
fisubrl
dec
mov
shlb
in
mov
pop
orb
sbb
fstps
int
push
adc
push
or
lret
push
rcll
mov
sahf
aas
fsin
test
jo
jg
pop
mov
stc
xchg
jnp
fs
xchg
push
adc
pop
xorl
bound
data16
adcb
cmp
imul
stos
jo
and
cmp
jmp
ja
aad
push
adc
sbb
outsl
lcall
add
popaw
xchg
lds
test
mov
xor
add
mov
divl
cwtl
sti
addr16
sub
gs
and
cmp
push
inc
sbb
add
lock
mov
inc
pop
mov
jge
cmp
pop
add
cmp
fsubrp
xlat
imulb
fstpl
lahf
pop
adc
orl
cs
jl
add
mov
add
fiadds
push
sar
je
enter
ficompl
lea
add
mov
cmp
lods
lret
aas
int3
std
inc
jecxz
cmp
into
push
aas
inc
or
inc
push
sbb
pop
scas
sarl
xchg
or
xchg
dec
mov
cwtl
add
mov
popa
xchg
xor
sarl
ljmp
mov
adc
das
insl
sub
sub
in
dec
aam
aam
dec
mov
es
mov
pop
loope
inc
fstp
cmpsl
push
xor
popa
mov
dec
lods
mov
cwtl
mov
in
xor
fmull
ljmp
repnz
cmp
sub
push
mov
or
movsb
mov
fisttpll
jno
clc
and
inc
sbb
hlt
shll
cmpsb
pop
jae
sbb
addb
outsb
dec
in
push
push
sub
psrlw
mov
mov
or
jae
xchg
sbb
test
adc
repnz
push
insl
add
or
sub
push
xlat
add
adc
mov
sub
gs
bound
jge
jns
fcomps
adc
xchg
repz
in
mov
sbb
mov
jge
push
xor
mov
cmpsb
pop
inc
dec
xchg
enter
lods
jp
sbb
jecxz
mov
sub
orl
out
outsb
sub
test
addr16
jne
jnp
int3
and
mov
mov
in
push
andb
int3
filds
int3
pop
or
gs
dec
dec
imul
loope
xor
stos
push
dec
pop
ss
xchg
aaa
add
xchg
stos
mov
sbb
shl
pushf
mov
dec
push
mov
cmp
iret
enter
rolb
hlt
gs
test
cmp
subb
je
cld
mov
cmpsb
add
sub
mov
jae
fcompp
mov
xchg
push
popf
es
adc
movsb
aam
push
out
aas
jbe
fisubrl
mov
nop
xchg
aaa
out
xor
sti
repz
ss
dec
mov
in
adc
adc
scas
pop
pop
dec
push
xchg
jns
test
xchg
push
loope
dec
clc
fisubl
sti
mov
enter
daa
push
es
push
push
adc
mov
jecxz
cmp
jno
jbe,pt
movsl
pop
jo
and
stos
lahf
lahf
lods
out
mov
sbb
xor
scas
je
add
jne
js
pop
mov
lcall
push
fmull
cli
sub
mov
data16
arpl
xor
sub
sbb
and
fsubrl
int
sub
int3
test
mov
ss
shll
mov
sbb
fstpl
sub
mov
mov
das
loop
enter
faddp
xlat
mov
ss
cmp
insl
leave
jo
mov
jg
daa
mov
cmp
sti
decb
fiadds
sahf
cmc
mov
imul
call
imul
cmp
xchg
inc
or
cmpsl
add
mov
movsl
les
xor
testb
push
sub
andl
fs
das
jnp
fldenv
push
pop
les
xchg
repz
mov
push
in
sbb
insl
jge
xlat
xor
mov
push
in
cmp
adc
sub
ret
push
cmp
dec
js
insl
jb
mov
xor
or
jecxz
lcall
sbb
scas
call
mov
je
subl
iret
pop
pop
sub
out
popa
xor
loopne
mov
fldcw
mov
sbb
rorl
add
std
xchg
inc
mov
mov
adc
icebp
sub
and
lock
sbb
je
mov
das
dec
data16
shlb
inc
inc
test
jl
das
ret
adc
xchg
out
xchg
dec
inc
shlb
ljmp
or
dec
mov
jecxz
sub
mov
das
outsl
cltd
xchg
movsl
mov
xor
mov
jg
push
sbb
mov
clc
pop
dec
adcl
mov
pop
push
in
and
jecxz
movsb
xchg
mov
adc
imul
wrmsr
push
dec
xor
push
inc
xor
mov
ss
sbb
or
xchg
adc
dec
dec
in
xchg
dec
int3
or
xorb
imul
in
xorb
dec
inc
mov
bound
lea
xchg
inc
stos
outsl
mov
xor
mov
dec
pop
ljmp
ret
sub
jle
cltd
mov
adc
rcrb
xchg
xchg
and
cmpsl
jmp
dec
sub
sbb
mov
sub
and
lcall
fildl
scas
xor
jnp
cltd
fidivrs
push
dec
in
push
jnp
mov
pop
fbld
xchg
jp
inc
iret
mov
cwtl
jae
xchg
add
popf
sbb
adcb
js
dec
dec
repnz
add
cmp
push
imul
bound
repnz
adc
mov
iret
daa
dec
cli
repnz
inc
leave
enter
mov
loop
shll
inc
ds
rorb
mov
sub
js
or
mov
int3
lea
int
jl
push
lds
mov
mov
mov
and
pop
push
ds
ss
stc
jge
cltd
repnz
lods
test
movsl
pop
popa
cmp
mov
jno
test
xchg
sbb
adc
sub
ljmp
push
adc
mov
movsl
mov
cmpsb
mov
enter
daa
push
xor
push
adc
cmpsl
sub
or
sahf
ds
xchg
pop
movsl
dec
mov
lahf
lret
lds
sbb
inc
push
add
mov
push
enter
inc
sub
js
and
dec
lcall
pop
fdiv
xor
lret
outsb
adc
out
rcrb
xchg
mov
xor
mov
out
arpl
and
mov
and
xchg
push
sub
addb
xchg
gs
and
mov
lahf
dec
sbb
push
xchg
aad
dec
jg
push
lret
loop
inc
fs
jmp
dec
bound
ljmp
test
cmp
sub
sar
nop
clc
xor
jb
cmp
aam
or
out
jmp
out
xor
push
pop
adc
fsubrl
dec
adc
andb
mov
pop
popf
out
xchg
stc
sub
mov
aam
lds
repnz
xchg
loopne
adc
inc
inc
jg
fstps
les
adc
xchg
sbb
cmp
and
pop
test
jp
pushf
mov
or
aad
loopne
nop
je
jl
xlat
mov
sahf
dec
add
iret
je
adc
jle
mov
or
fcmovnb
cmp
into
mov
das
addl
fildl
sbb
pop
into
mov
inc
jl
jne
jg
popa
mov
dec
nop
and
movsl
cmpsb
rcr
in
mov
sbb
in
cmp
push
mov
inc
aad
pop
sahf
icebp
incl
and
mov
mov
mov
or
lock
or
sub
cmpsb
sub
push
imul
movsb
xchg
inc
es
xchg
addr16
cmp
dec
outsl
ljmp
lods
mov
mov
sub
mov
fistl
lcall
or
ds
out
scas
cmp
push
sub
call
clc
xchg
movsb
popf
xchg
movsb
addr16
sbb
inc
mov
mov
out
inc
or
cs
or
xchg
jg
test
add
lds
xchg
shll
loopne
mov
mov
xor
xchg
in
dec
cmp
mov
pop
xlat
or
mov
fwait
scas
or
xor
jae
je
arpl
mov
bound
js
jns
in
in
outsl
test
mov
jbe
mov
push
and
jp
or
mov
jne
mov
test
lret
jne
cmp
into
mov
add
cmp
jmp
sbb
mov
push
xorl
sbb
bound
sbb
stos
popa
sbb
lds
jmp
sbb
call
and
je
ffreep
xor
ret
push
pop
jp
xor
popf
jae
popa
mov
popf
inc
test
mov
adc
mov
xchg
pop
iret
data16
call
jle
aas
adc
out
adc
cmc
cld
iret
xchg
inc
repnz
leave
aas
arpl
arpl
sbb
inc
inc
fmuls
or
add
or
mov
sbb
adc
pop
pop
fwait
or
lds
add
mov
xchg
and
dec
sbb
movsb
ljmp
jbe
sub
sbb
pop
cli
aaa
fs
fnstcw
popa
sub
jno
or
jl
push
and
cmc
mov
xor
inc
lock
sbb
mov
sub
adc
cmpsb
test
rcrb
cmp
daa
push
in
push
lea
ljmp
cmp
sti
and
mov
mov
adc
mov
xchg
sbb
enter
in
xor
test
pop
push
add
pop
enter
inc
and
fldl
fcompl
jmp
outsb
js
jle
mov
push
and
mov
pop
mov
push
ss
loop
push
int
andb
cmp
pop
mov
sahf
pop
rcll
mov
dec
sbb
aad
sahf
sub
flds
lock
movsb
jg
loop
loop
test
fs
incl
mov
add
cmp
jecxz
xchg
divl
stos
dec
cli
lea
es
add
cmp
xorl
into
int3
lret
xor
xor
cmc
pusha
outsl
jb
xchg
adc
aaa
imul
add
cs
adc
xchg
sub
iret
lods
mov
cmp
xchg
fs
int
out
mov
pop
push
and
inc
push
mov
fsts
gs
repz
sbb
jecxz
mov
mov
pusha
pop
pop
mov
pushf
imul
fldcw
icebp
cld
jnp
push
add
cmpsb
dec
mov
rorb
je,pt
cmp
jecxz
out
mov
cs
call
loopne
mov
mov
sbb
imulb
pop
jno
out
inc
js
cmp
xor
aas
push
push
push
mov
add
xlat
and
dec
shrl
or
pop
lds
std
loopne
lds
inc
rep
mov
sbb
inc
push
ljmp
es
add
jns
or
xchg
shlb
or
aam
mov
jp
imul
insl
mov
jb
cmpsl
push
sahf
add
push
in
push
popa
imulb
xchg
lods
repz
mov
dec
call
lret
mov
cli
outsl
ret
add
cltd
cltd
add
jp
dec
add
jle
movsb
push
in
cmp
jge
ret
nop
mov
imul
hlt
pop
je
dec
stos
cli
inc
out
test
pop
mov
out
jae
out
sbb
xor
shl
xor
mov
incl
and
test
mov
orl
nop
mov
leave
mov
fmulp
mov
add
jle
sar
jno
xchg
loop
in
in
xchg
loopne
xlat
mov
cs
mov
rol
ja
mov
mov
adc
xor
repz
jne
adcl
loope
pushf
xchg
aaa
add
xchg
in
pop
xor
cmp
sub
cmp
pop
dec
push
addr16
mov
and
add
jnp
dec
cmc
jle
jno
in
and
jmp
dec
inc
ret
jge
mov
rolb
sub
outsl
jmp
popf
addr16
dec
mov
push
cmp
xchg
scas
xchg
or
imul
scas
mov
cmp
scas
iret
in
or
mov
xchg
aaa
hlt
inc
stos
xor
icebp
add
inc
push
stos
or
jle
movb
fwait
or
clc
add
lods
lods
pop
lret
faddp
fwait
pop
lds
mov
push
cmp
mov
push
aam
pop
jbe
jle
mov
rcrl
lahf
mov
cmp
push
jl
sahf
push
dec
out
sub
xor
mov
iret
int3
push
or
jns
lods
add
push
clc
inc
das
inc
sti
andl
mov
push
enter
daa
push
fldcw
push
mov
xor
fcompl
fildll
adc
mov
repnz
or
sub
lahf
push
or
xor
add
pop
xchg
cmp
outsl
cltd
pop
add
addr16
test
dec
outsl
bound
test
outsb
fcmovnb
mov
rcll
sbb
shll
adc
mov
adc
mov
in
sub
pop
mov
cmpsl
pusha
push
shr
data16
mov
scas
sahf
lret
xor
test
popa
enter
xor
or
fidivs
fs
jmp
ss
cmc
cmp
sahf
jl
repnz
outsb
xor
add
into
scas
mov
cmc
idivl
in
push
pop
push
outsl
push
xchg
nop
adc
ror
imul
faddl
aas
ret
add
insl
mov
xchg
mov
subl
out
mov
mov
das
mov
xchg
jecxz
xchg
push
loopne
aaa
mov
inc
push
and
les
pop
repz
fcompl
cmp
rorl
pop
setbe
pushf
adc
out
loopne
xor
push
inc
adc
cwtl
mov
nop
sub
dec
dec
xchg
mov
jb
add
repnz
pop
jecxz
jb
mov
or
dec
push
out
cmp
cmp
cmp
mov
jb
movsb
dec
pop
push
scas
jmp
inc
decl
roll
mov
mov
out
mov
mov
pop
div
lahf
aam
std
xchg
outsb
cwtl
in
clc
xchg
mov
sub
mov
lods
aam
cld
jno
xor
cmpsb
mov
mov
fdivs
dec
vcomisd
xor
shlb
enter
call
ret
ret
es
push
jg
movsb
pop
test
and
lret
popa
or
hlt
pusha
mov
jo
mov
mov
sbb
add
mov
in
dec
jbe
push
mov
rcr
movsb
int
clc
or
xchg
and
pop
rcll
ret
jl
shr
or
test
mov
cmp
dec
xchg
fcomps
or
inc
ds
dec
sub
out
repz
mov
mov
dec
and
or
mov
or
adc
cmpl
incl
pop
jns
orl
cmp
sbb
pop
adc
jl
les
mov
pop
mov
fxtract
mov
in
cmc
dec
and
fdivs
shlb
or
mov
addl
mov
adc
mov
mov
inc
xchg
shll
mov
jge
jnp
scas
jle
out
xchg
in
lods
ss
test
mov
icebp
or
pop
call
movsl
in
jae
rorl
mov
out
mov
xchg
inc
pop
fisubrl
xchg
push
jl
sbb
pop
mov
scas
add
clc
test
cwtl
add
repnz
mov
hlt
xchg
dec
mov
inc
inc
fcom
or
stc
and
inc
clc
lds
or
pusha
addb
ficoms
stc
mov
fisubs
test
inc
fsubrs
mov
movsb
outsl
and
cmp
xchg
enter
repnz
and
in
jbe
inc
aad
pop
aad
sbb
xor
loop
push
sub
jno
jg
jl
mov
fimull
mov
repz
scas
fcomps
sbb
fbld
test
ret
and
mov
sbb
xchg
subb
push
jb
push
cwtl
add
sub
cmpl
movsl
jnp
push
and
add
xchg
into
mov
push
xchg
add
mov
gs
adc
ljmp
enter
xchg
stc
lcall
inc
fdiv
dec
push
sub
outsb
ds
adcl
jl
sbb
stos
push
ret
mov
jae
and
in
push
call
adc
mov
add
lret
add
add
mov
arpl
and
sub
test
andb
addr16
movsl
jae
mov
sarl
add
pop
xor
movsl
jno
fcomps
aaa
divl
popl
xor
in
cmp
pop
lret
or
xchg
inc
cmc
mov
shlb
adc
xchg
shrb
fwait
lods
adc
push
fwait
add
lret
lock
cmp
mov
mov
push
hlt
fdivr
rorb
sar
enter
dec
ja
push
push
and
ret
mov
les
repz
mov
and
test
xor
pop
ret
adc
inc
in
jmp
mov
aad
jnp
nop
add
ja
jb
das
mov
je
jle
jecxz
inc
mov
lea
lods
cmpsb
mov
xchg
mov
enter
pop
dec
dec
inc
mov
pop
mov
sbb
jp
inc
int
push
aas
pop
xchg
loope
and
idiv
and
xchg
mul
push
cs
cwtl
test
jne
shl
mov
test
lods
lret
adc
in
lgs
inc
and
enter
dec
rcl
sub
bound
test
fcmovnb
push
iret
cmpsl
es
hlt
insl
mov
in
cs
cmpsl
dec
rolb
ljmp
je
leave
xor
pop
cmc
push
mov
mov
jmp
cmp
jno
mov
push
pusha
test
and
push
jae
dec
sahf
imul
and
mov
shl
popa
aad
lret
stos
imul
xchg
roll
mov
shrd
xor
adc
xor
cs
xchg
cmpsl
or
punpcklbw
imull
imul
xor
cmp
push
push
inc
test
add
xchg
ljmp
in
into
jns
jle
xorb
hlt
ja
aaa
mov
push
or
sarb
sti
mov
cmp
dec
add
pcmpeqw
sarl
lahf
lds
fisttpll
xchg
jnp
pop
adcl
xchg
sub
or
inc
or
or
lock
jnp
or
jle
pop
sbb
mov
push
push
ret
pushf
pop
pop
fsubrl
jae
push
xchg
add
dec
popf
mov
jg
jbe
sbb
int3
mov
xchg
pop
mov
imul
scas
push
sbb
adc
ror
out
jmp
leave
movsb
jmp
adc
movsb
xchg
inc
dec
push
ret
popa
shrl
xchg
xchg
add
xor
outsl
int3
cmp
daa
pop
sub
rol
cmc
sbb
fiaddl
and
sub
and
xor
mov
ds
jb
js
add
into
jge
pop
stos
sbb
jecxz
aaa
mov
mov
movsb
jl
mov
dec
int
outsl
push
popf
push
scas
xor
push
inc
subl
mov
test
mov
addb
cmpsb
xor
aas
in
jle
jp
sub
shll
insl
push
sub
loope
loop
sub
cli
insl
cmp
pop
aam
and
lcall
inc
dec
sbb
or
mov
pusha
aam
cli
pop
or
es
pop
add
das
push
adc
mov
sub
pusha
outsb
mov
outsl
mov
mov
fs
inc
aam
and
mov
jle
and
xor
int
mov
sub
fiadds
aaa
xor
lret
pop
rcrl
imul
add
lret
fs
addb
jg
lea
inc
xchg
mov
adc
imul
push
jb
jo
ljmp
adc
pop
orl
into
jne
xchg
cmc
test
scas
xor
adcl
cmp
loope
out
add
inc
data16
or
mov
and
je
mov
jns
and
xorl
out
loopne
lods
stos
pop
scas
or
inc
mov
js
xchg
repz
jnp
xchg
in
sub
xchg
inc
mov
pop
jne
test
or
pushf
push
sub
nop
mov
sbb
add
push
push
xor
add
je
sahf
loope
xchg
push
inc
lret
push
addr16
ss
sti
mov
pop
inc
andl
hlt
out
pop
jp
inc
or
dec
mov
sti
mov
sbb
and
and
rcrl
xlat
inc
mulb
xor
cwtl
arpl
ret
mov
and
mov
pop
mov
cld
mov
add
push
stos
loope
add
cld
das
cmpsl
shr
rcrb
push
lret
sub
add
aam
and
ret
loopne
jnp
hlt
cmovs
mov
out
cmpsl
dec
scas
pop
ljmp
pushf
lods
xor
ja
or
test
mov
push
lahf
aad
mov
or
push
shlb
ss
add
repnz
mov
xchg
mov
and
sarl
or
pop
jne
adc
pop
cltd
cmc
out
rclb
cmp
push
ja
inc
ud2
gs
jle
and
fimuls
divb
into
fiadds
push
dec
add
jbe
fisttpl
stc
dec
inc
or
fwait
imul
add
iret
mov
jnp
jge
jns
mov
in
inc
xlat
xchg
int
gs
pshufw
adc
ja
imull
inc
das
inc
mov
int3
push
mov
inc
dec
outsb
dec
out
sbb
fxch
mov
imul
mov
pop
jmp
inc
shlb
cmc
mov
mov
test
or
scas
add
and
dec
das
insb
das
dec
mov
push
in
xor
mov
ret
pop
mov
pop
push
jns
inc
lea
jae
xor
push
sub
popf
fsub
addr16
adc
jne
into
inc
outsl
xchg
mov
xor
es
ss
in
push
dec
fwait
xchg
adc
jg
add
fcomip
mov
mov
sbb
hlt
daa
mov
arpl
pop
jns
dec
test
or
out
stos
out
inc
mul
std
or
push
add
int3
and
mov
push
insb
jb
stos
sub
lds
test
cmc
push
dec
mov
sub
cmp
jae
push
shll
jge
bound
shl
aaa
pusha
mov
cmp
test
pop
jnp
dec
cmp
inc
push
andb
mov
loope
scas
xchg
mov
mov
push
pop
and
std
cmpsb
mov
xchg
in
gs
dec
daa
dec
xor
ljmp
sub
dec
imul
dec
xor
movsl
mov
and
xor
xchg
sbb
add
xor
and
pop
push
add
js
sbb
lcall
pop
fmull
subl
add
lret
adc
fs
fisttpll
daa
dec
and
mov
fnsave
push
out
pop
es
fsubrp
sub
jecxz
lret
nop
shll
mov
sahf
mov
xchg
test
outsl
sbbb
adc
loop
lds
sbb
adc
dec
and
cmp
iret
stc
das
sbb
cli
pop
mov
mov
jle
or
into
pop
xor
cmc
dec
sub
outsl
out
adcl
xor
xchg
in
movsl
mov
imulb
mov
cmc
mov
out
push
mov
in
pop
sti
xor
dec
lock
gs
xor
loopne
add
in
inc
mov
add
sub
es
xchg
test
jo
jo
cmpb
pop
jp
scas
xchg
dec
pop
sub
add
pusha
pop
sub
pop
mov
aad
xor
mov
pop
aad
fsubl
sti
dec
push
idiv
je
adc
jecxz
scas
mov
les
test
call
mov
xchg
aaa
xor
sbb
fucomi
adc
pop
std
pop
movl
sub
aas
lcall
mov
pop
push
dec
shrl
imulb
jl
jl
and
aas
out
mov
xor
xchg
cld
repnz
stc
lret
repz
mov
push
int3
std
lock
jbe
das
xchg
xor
out
psubusw
push
dec
sti
aam
aas
repz
outsl
dec
bound
ja
test
pop
cmp
dec
and
inc
cmpsl
dec
adc
ljmp
sub
sti
mov
or
lods
pop
jbe
addl
and
cltd
fistps
xchg
mov
shl
push
stc
out
fstpl
in
pop
clc
mov
lcall
rcll
or
stos
dec
push
push
xor
aas
lahf
push
push
je
punpckhdq
mov
rcrl
sti
or
inc
xor
in
adc
out
movsl
adc
push
test
pop
movsl
xchg
or
cltd
inc
std
into
sub
fwait
lcall
add
ljmp
bound
cli
int
outsb
cmp
xchg
sbb
ljmp
cmp
pop
lods
add
jp
cli
xorb
mov
mov
adc
xor
mov
adc
xchg
and
jmp
adc
xor
jecxz
aaa
lahf
nop
sub
add
pusha
lods
inc
es
mov
push
out
insb
lcall
jle
push
jbe
scas
mov
pusha
push
sbb
pop
lock
sub
pop
lea
bound
dec
pop
push
mov
call
mov
dec
jno
fiaddl
or
out
and
sub
xor
sub
mov
repnz
int3
hlt
hlt
jb
cmc
arpl
mov
mov
push
out
inc
jne
adc
add
sahf
adc
pusha
pop
xchg
dec
inc
or
xlat
pop
fld
adc
sbb
adc
lret
mov
addr16
jbe
push
adc
push
aaa
pop
mov
xchg
jno
mov
orb
ds
arpl
call
scas
jne
xchg
push
pop
add
mov
ss
aaa
testb
sbb
enter
daa
dec
push
pop
push
outsb
vpcmpgtb
aad
pop
cmp
jb
nop
lcall
test
or
xchg
sbb
add
xor
mov
outsb
js
lahf
in
pop
ljmp
inc
push
rol
fdiv
shll
sub
push
outsb
addl
mov
aas
pop
popf
cltd
push
push
mov
or
adc
and
test
icebp
int
int
out
test
sub
dec
pop
xor
jo
rorl
mov
lcall
push
into
xchg
test
jge
xorb
jg
push
outsb
stc
dec
cmpl
ss
inc
mov
mov
sub
out
ds
mov
pop
xor
loope
cmp
dec
cld
or
cmc
test
cmp
ja
adc
mov
fldcw
imul
in
adc
jnp
in
jns
lods
es
mov
sti
pop
sub
pop
mov
dec
mov
test
gs
cmp
pop
in
push
xchg
fldcw
add
repz
mov
xchg
imul
sbb
or
xlat
out
insb
aad
fcmovne
ret
adc
call
lea
loopne
mov
mov
bound
adc
jb
imul
sbb
and
mov
sub
rcll
call
xor
mov
test
mov
fistpl
test
jg
push
pop
test
cmp
popf
mov
out
xchg
shll
cltd
pop
std
and
arpl
sub
mov
or
sbb
sbb
mov
int
in
and
mov
xorb
sub
mov
ret
jo
es
fadds
inc
mov
push
cmpsl
dec
stc
pop
ljmp
mov
mov
mov
adc
dec
mov
xchg
jge
add
stos
push
cltd
push
xlat
popa
test
and
push
mov
push
clc
clc
fstps
sbb
jg
shr
ret
jmp
stos
cmp
pusha
out
cwtl
dec
cmp
sub
push
movsb
xor
mov
xor
lret
pop
test
and
jno
xchg
dec
in
sbb
inc
xchg
mov
dec
fwait
leave
adc
push
sub
add
adc
mov
outsb
fs
and
xchg
imul
pushf
xchg
cmpsl
mov
push
inc
pop
jp
jns
mov
push
jno
enter
push
mov
ret
mov
mov
iret
ja
cmp
fstl
and
mov
add
push
out
lcall
jae
lods
psrlw
dec
sbb
add
gs
and
dec
shll
data16
ret
or
lahf
mov
jecxz
pop
mov
push
dec
or
mov
mov
mov
sbb
ds
imul
scas
xchg
inc
push
push
fmul
mov
add
fxch
rcl
repnz
pusha
fxch
or
hlt
mov
xchg
jle
push
dec
loopne
lahf
sub
push
hlt
or
mov
int3
cli
push
pop
mov
aam
icebp
dec
lahf
lds
mov
sub
movsb
mov
test
mov
movsb
sub
icebp
push
pop
jno
jbe
hlt
data16
inc
xchg
aaa
sahf
push
aaa
fiadds
cmp
sbb
dec
sbb
mov
jo
push
dec
scas
push
outsb
or
test
out
or
inc
mov
fucomi
xor
daa
dec
arpl
sbb
cmp
cmp
in
mov
xchg
xor
mov
mov
movsb
pop
lods
and
and
mov
in
add
mov
xor
dec
sbb
cmpsl
js
mov
xchg
lcall
mov
sub
rcl
lret
adc
sbb
mov
lock
mov
cwtl
and
dec
push
hlt
mov
int
in
sub
xor
data16
rcr
jbe
aad
jne
loope
call
test
jmp
jg
pop
adc
in
fs
stc
add
fs
scas
cmp
xchg
mov
jge,pt
cmp
inc
incl
imull
mov
xor
or
sbb
push
sahf
insl
cmc
fisubl
xor
jbe
outsl
lods
xor
aad
push
push
and
pop
inc
add
xchg
into
data16
mov
in
mov
push
sub
jns
fiaddl
pushf
in
mov
xor
push
gs
bnd
pop
or
scas
inc
dec
pop
iret
inc
les
cmp
sbb
inc
inc
cmpsb
xlat
sub
pop
hlt
adc
dec
mov
jmp
inc
adc
inc
pop
daa
aad
sbb
dec
jo
sub
dec
inc
lds
jecxz
sub
aam
icebp
lea
jne
mov
or
push
dec
lock
sbb
mov
jns
mov
sbb
mov
dec
into
xchg
cmc
aas
roll
nop
pop
imul
in
mov
lret
cwtl
xchg
imul
mov
loopne
scas
cld
dec
iret
push
lret
shll
mov
lods
cmp
lock
shrb
inc
fstpl
sub
rcrl
js
ret
fldcw
es
push
insl
daa
out
pop
dec
sbb
fisubs
or
xor
loopne
mov
sbb
and
mov
js
in
addr16
mov
test
mov
push
jg
xchg
addr16
pop
clc
xor
in
xchg
pop
jb
sbb
xlat
sub
bts
sbb
out
sti
pop
mov
in
pop
out
or
rorl
sub
xor
mov
xor
sti
ret
mov
cmc
jae
dec
mov
test
push
icebp
xchg
adcb
cmp
inc
sub
mov
fwait
clc
imul
and
jne
and
lcall
int
jns
inc
ret
in
nop
xlat
xchg
mov
add
pop
and
daa
jp
lods
mov
repz
mov
dec
nop
jno
jne
mov
mov
mov
nop
xchg
sub
rcll
repz
or
stc
imul
stos
pop
jns
xchg
hlt
and
outsl
insb
jo
insl
jnp
mov
jle
lods
sbb
mov
sbb
ret
xor
sub
scas
cmp
jae
push
jmp
adc
xchg
mov
int
xchg
out
xchg
mov
xchg
add
push
pop
jge
adc
cld
ror
pop
rcrl
repnz
cmc
repnz
cmpb
hlt
or
arpl
jge
push
inc
test
push
jae
push
or
sbb
add
daa
xor
in
fstps
ds
ficoms
add
mov
cmp
inc
cmp
inc
adc
mov
leave
jge
pop
rcrb
repnz
imul
dec
or
movb
jl
lret
ja
mov
repnz
ret
scas
xor
push
incb
test
mov
cmpsb
ds
xor
sbb
xlat
enter
daa
dec
sub
inc
and
sub
sub
cmp
jns
ds
sbb
sahf
sub
lahf
ret
push
mov
jmp
incb
loopne
nop
pop
jnp
es
addr16
jge
sbbl
dec
sti
out
pop
call
or
cmc
cld
dec
push
adc
mov
xchg
fisttpll
mov
out
push
testl
cmp
pop
loope
pop
xor
lods
lret
adc
jbe
cmp
loopne
sahf
popf
push
imul
out
push
into
loop
cmpb
mov
push
fs
sbb
lahf
cmp
add
imull
cli
repnz
shll
mov
outsb
add
lds
sti
cmc
mov
push
lods
outsl
mov
lds
mov
movb
in
pop
data16
xlat
lods
hlt
mov
mov
sub
jmp
in
and
jmp
mov
loopne
xchg
pop
sub
addl
stos
jecxz
mov
xchg
repz
add
xchg
icebp
and
sbb
sbbb
xlat
insb
movsl
add
mov
loopne
push
jl
jmp
pop
ds
or
aad
cli
jne
dec
loope
iret
push
mov
xchg
out
mov
addr16
jecxz
dec
fs
xlat
nop
mov
sbb
lods
pusha
mov
ret
cld
jg
dec
fildl
aas
fstpt
sbb
out
sub
jo
inc
push
xor
aas
ja
mov
add
loop
rcll
sbb
xor
cwtl
dec
outsl
cld
mov
inc
cltd
mov
mov
sar
jge
lret
inc
push
mov
mov
mov
outsl
fcmovnbe
das
and
mov
sub
repz
lahf
xchg
rol
xchg
add
insl
push
sbb
jge
dec
push
fs
mov
cli
mov
and
pop
pop
shrl
add
pop
dec
cltd
test
out
test
pop
push
inc
in
pop
fisttpll
fstl
dec
lods
rcl
lcall
stos
push
and
sbb
push
jecxz
jl
xchg
xor
mov
or
andb
or
clc
mov
test
rcr
xchg
ret
adc
inc
ret
or
lock
outsl
or
jb
cmp
lret
leave
test
in
push
sbb
and
cmp
fiadds
ja
sahf
ret
xchg
mov
or
mov
sbb
jae
push
test
out
cli
xchg
jmp
jb
filds
shr
sub
hlt
mull
stos
sub
stos
stc
or
insb
fcomi
sbb
jle
loope
in
out
ss
es
fistpll
jne
pop
xor
inc
mov
aas
rclb
sarl
mov
or
sti
ficompl
loop
sbb
movsl
xchg
imul
jge
push
inc
int
xchg
pop
adc
sarl
leave
imul
lods
hlt
push
jmp
inc
pop
mov
lods
push
repnz
bound
lock
inc
add
mov
push
pop
adc
nop
lds
shlb
mov
into
ret
popa
ret
insb
movsb
inc
fldenv
jbe
cmpl
lods
test
xchg
cmp
sbb
jno
inc
sub
or
adc
sbb
xor
sbb
xor
test
test
inc
in
lret
cmpsb
roll
in
add
imul
dec
fcoml
mov
mov
sarb
mov
inc
fsubs
in
or
orb
ret
mov
xchg
xor
aad
mov
mov
or
sbb
mov
jmp
in
fdiv
int
sub
shll
outsb
nop
xchg
aaa
adc
rorb
mov
mov
fnstenv
jle
push
cli
fidivs
sub
rorl
lret
test
or
inc
loope
aas
pop
bound
outsb
xchg
add
mov
loop
aam
stc
outsb
cmc
fisubs
jmp
xor
les
cmp
mov
enter
mov
jns
data16
mov
mov
in
push
cmc
push
inc
inc
outsl
push
notl
out
inc
imul
mov
imul
fstpt
lahf
out
and
mov
nop
imulb
in
pusha
outsl
jl
mov
mov
loopne
das
stos
pop
dec
xchg
loop
in
movl
mov
push
adc
or
in
mov
pop
test
xchg
adc
pushf
roll
jmp
xor
or
movsl
aad
aas
cli
nop
daa
adc
jb
ja
dec
xor
je
sub
jecxz
mov
fidivrl
call
mov
fimull
xchg
mov
dec
sub
dec
pop
mov
scas
inc
mov
adc
pop
xchg
aas
push
or
mov
and
shll
jle
sbb
or
mov
mov
mov
sar
pushl
lret
scas
lret
jbe
std
sbb
ss
das
add
shrl
leave
add
push
daa
ret
stos
jbe
es
insl
cmc
das
pop
dec
adc
xchg
cmpsl
dec
mov
out
and
scas
ret
dec
inc
add
gs
inc
and
cmp
pop
bnd
sbbb
xor
push
add
cmp
clc
test
hlt
cmpsb
sbb
push
enter
fwait
pop
int3
push
ret
stos
add
dec
sahf
xchg
jnp
adc
push
fimuls
out
sub
sbb
mov
pop
int
test
xchg
adc
dec
pop
shrb
xlat
fnsave
xchg
add
dec
cwtl
cmc
inc
pop
dec
fmuls
xchg
pushf
fwait
push
push
or
push
and
bound
jns
fdivs
pop
insb
add
loop
push
pop
cltd
xchg
ja
xchg
sbb
aas
das
fnsave
dec
jno
mov
daa
dec
push
mov
push
mov
xor
fldlg2
out
iret
or
jmp
cmp
xchg
and
inc
jge
dec
add
addr16
call
xor
jnp
cmpsb
sahf
jle
or
pusha
shrl
fnop
inc
ret
cmpsb
pop
imul
adc
insl
mov
xchg
inc
mov
lahf
addr16
fsubrs
fimull
gs
addr16
test
pop
xchg
cmp
lret
and
lods
pop
sub
xchg
and
iret
fstp
imul
outsb
inc
insb
hlt
sahf
in
fisubl
in
inc
pop
sahf
jns
aam
pop
push
jno
dec
or
dec
rolb
inc
dec
int3
mov
lahf
data16
sub
repz
sarb
in
stc
and
cmp
or
dec
sub
jbe
clc
jne
in
aaa
nop/reserved
shlb
sbb
fidivrs
sub
cmpsl
jno
or
dec
outsl
test
xor
js
pusha
scas
icebp
xchg
jg
movsb
push
sbb
push
fld
inc
jae
mov
in
call
dec
adc
dec
adc
push
fs
sbb
xorl
cmpsb
imull
out
and
or
sbb
sub
add
xchg
fdivs
ficoms
push
pop
leave
and
pop
sti
cmpsl
and
sbb
je
sub
addl
shrb
sbb
mov
jae
mov
or
and
and
lea
das
pop
xor
dec
lret
mov
mov
mov
push
test
pop
incl
sub
pop
insl
stc
and
hlt
fsts
subb
cmp
jbe
loopne
ljmp
xor
lret
fsubl
into
gs
cmc
das
xor
xor
inc
outsl
dec
popa
mov
imul
lods
mov
mov
cmp
jl
lods
ret
mov
out
cmp
mov
sti
pop
mov
fwait
pushf
or
lahf
cmp
into
push
fwait
loopne
in
push
pop
imul
flds
into
repz
xchg
ja
inc
sbb
idivb
ljmp
adc
mov
aam
cs
ljmp
add
je
lea
jb
mov
dec
stos
dec
xorl
jecxz
bound
fstpl
xchg
sub
adc
sub
sub
add
fnstenv
push
pop
sub
xor
pop
jae
mov
aam
sub
pop
mov
adc
sahf
divb
mov
add
cli
outsl
and
gs
push
lret
push
add
mov
add
and
or
rorb
inc
es
lds
stos
aad
push
frstpm(287
insl
fsubl
call
cmpsl
dec
mov
stos
popa
lds
mov
mov
and
aad
sub
adc
add
das
fldl
or
push
enter
faddl
clc
in
xchg
sbb
mov
mov
dec
jmp
lret
orb
xor
ret
push
cltd
add
xor
fimuls
test
xchg
xor
xchg
xchg
push
or
arpl
test
jg
xchg
xor
aam
inc
lock
rorb
or
mov
inc
add
jno
cmp
jl
frstor
popl
in
aam
xchg
cmpsl
cmc
mov
mov
push
pop
sbb
or
mov
pop
nop
mov
fcmove
push
dec
cmp
xchg
jne
push
mov
lea
out
mov
push
pop
jmp
or
test
adc
sub
ljmp
stos
fistpll
and
mov
mov
daa
ljmp
mov
adc
ret
push
pop
mov
sbb
test
pop
ds
popf
sub
scas
push
mov
imul
mov
pop
loop
rorb
scas
sbb
loop
adc
cmp
repnz
in
pushf
leave
in
cmpsl
hlt
jmp
xor
or
shll
add
cltd
stc
or
mull
testb
int3
cmpsb
push
scas
pop
jno
lock
and
rclb
pop
and
addr16
repnz
push
fwait
inc
xchg
jbe
loope
jge
cli
fistps
and
sarb
pop
pop
jno
push
testb
nop
cld
dec
mov
xor
shll
nop
scas
rolb
pop
push
ja
out
pop
sahf
into
push
sbb
cmp
jg
cmpsb
enter
daa
dec
lret
pushf
jecxz
loope
lahf
fsubrs
jl
cmp
cltd
cmpsl
sbb
mov
lahf
and
subb
in
sbb
loopne
xor
setp
mov
xchg
pop
cmp
lcall
jo
dec
out
and
outsb
push
bound
imul
fistps
mov
mov
mov
enter
jge
pushf
js
push
add
cmp
hlt
mov
push
pop
mov
dec
lret
in
sarl
in
mov
test
test
jl
xor
jg
push
lahf
loop
adc
fdivl
fs
or
adc
push
jge
dec
ficomps
fstpl
fdivs
cli
fcomip
test
sub
cmp
shrl
into
stos
in
cmc
notb
cld
outsl
sub
jl
mov
lock
cs
pop
data16
clc
lods
test
std
ret
aad
sub
outsl
ret
xchg
add
dec
pushf
or
ret
gs
enter
xchg
pop
mov
in
fnstcw
xlat
sub
add
icebp
xchg
cmp
sbb
xor
pop
pop
mov
ficompl
cmp
cs
enter
mulb
nop
dec
in
push
jb
fsts
je
mov
jecxz
push
popa
loopne
leave
out
call
scas
lahf
cmp
rcll
dec
pushf
add
or
sbb
inc
mov
out
popa
aas
push
dec
inc
mov
sub
mov
roll
out
idiv
rcr
data16
movsl
cwtl
cmp
mov
dec
in
clc
lahf
hlt
icebp
cmp
dec
cld
hlt
jg
lret
lea
add
enter
xor
das
sarb
loopne
cmpsl
sub
popa
insl
aam
faddl
leave
and
mov
aaa
dec
push
dec
call
ljmp
cmp
mov
stos
dec
arpl
jo
sub
xor
adc
cmp
sub
pushl
mov
int3
fldl
cmp
xchg
pop
xchg
sbb
dec
rcrl
cld
fldcw
xchg
scas
xchg
or
push
je
mov
movsb
out
clc
xor
and
or
imull
mov
add
mov
out
xchg
adc
les
inc
xchg
notl
fwait
mov
inc
push
pop
imul
add
sub
jecxz
jns
std
and
xchg
dec
xchg
test
mov
dec
arpl
xadd
or
int3
jp
cmp
mov
dec
mov
mov
xchg
mov
scas
or
xchg
les
jmp
rorl
or
dec
push
insb
sub
in
out
cmpsl
mov
stos
push
rcll
test
insb
sbb
sub
movsl
pop
jle
cmp
fcom
sbb
or
fists
pop
push
ret
cmp
mov
inc
fisubl
jae
xchg
xor
sbb
ficomps
dec
dec
or
mov
fcoms
insl
idivb
imul
fistl
and
adc
sub
fwait
repnz
notl
leave
pop
aad
hlt
xor
les
inc
movb
dec
inc
or
outsl
xchg
leave
push
add
int3
xchg
fisttpll
fisubs
aam
lds
repnz
shlb
pop
and
orb
xchg
mov
jbe
aas
in
jge
mov
int3
aaa
cltd
test
imul
and
dec
inc
push
divl
cs
cli
scas
scas
jo
push
dec
cmp
push
out
fwait
inc
xchg
cltd
repz
dec
cli
ja
mov
adc
add
std
push
pop
lock
dec
add
xchg
stos
cmp
push
in
mov
sub
inc
fisubrs
sbb
adc
mov
in
sbb
js
call
addr16
inc
fdiv
cmp
popa
outsb
mov
inc
mov
shll
test
insb
and
mov
insl
mov
out
push
and
add
int
or
sub
addr16
cs
rcl
mov
sbb
je
sahf
sub
roll
sbb
adc
loop
add
out
push
adc
inc
outsb
lea
cmp
in
stos
fcomip
push
xchg
xor
pusha
pop
cmp
lcall
lea
cmc
mov
xchg
pop
cmp
fisubrs
sub
adc
add
add
add
mov
mov
mov
out
repz
mov
dec
jecxz
in
shll
in
stos
fdivl
pop
cmpsl
fnsave
fptan
jg
inc
repz
leave
push
std
bndstx
insb
das
xchg
xlat
push
mov
adc
push
mov
jmp
pusha
and
xor
mov
mov
jnp
jb
pop
mov
je
jo
jecxz
xchg
jecxz
mov
call
cs
decb
pop
mov
popfw
pop
jb
incl
mov
aas
repz
push
mov
loope
movsb
and
loope
rcll
pop
dec
std
or
dec
mov
test
mov
adc
mov
pop
jle
lret
cld
shlb
das
lahf
jmp
sahf
sub
and
lret
inc
pop
ret
pop
loopne
es
xchg
sarb
ret
test
dec
aam
popa
repz
jl
test
push
mov
lds
es
dec
js
add
inc
cltd
pusha
mov
test
or
mov
lcall
sub
mov
sbb
js
shl
push
mov
stos
shl
dec
out
ljmp
push
dec
xchg
xor
add
arpl
xchg
int
xor
fimuls
xchg
push
test
jle
xchg
mov
inc
push
rorl
outsl
out
fwait
jecxz
dec
push
sti
outsl
and
add
jg
bound
push
xor
stos
movsl
jb
inc
aam
mov
add
xlat
ret
mov
mov
add
cmp
imul
jg
mov
push
mov
mov
in
out
jbe
xchg
dec
xchg
jmp
sahf
mov
out
add
add
xchg
or
out
mov
stos
lds
pop
insb
xchg
and
lret
stc
jle
cmp
add
jnp
fbstp
mov
test
jae
inc
in
mov
aaa
mov
fisttps
stos
mov
or
dec
fisubl
outsl
xchg
insb
dec
push
sbb
add
popf
scas
jecxz
or
add
adc
in
inc
iret
cli
add
repnz
in
cmp
rcll
hlt
jg
xchg
lcall
or
movsl
push
out
idivb
mov
hlt
stc
int3
jl
push
pop
iret
in
stos
faddp
xchg
ffree
mov
fwait
mov
sbb
inc
cmp
jg
push
cmp
jbe
adc
jge
sub
sbb
dec
jae
lds
jno
cmp
mov
dec
mov
mov
cwtl
or
xor
mov
push
sbb
and
fwait
xchg
inc
and
dec
cmpsb
int
aaa
in
popf
push
mov
daa
inc
enter
pop
loope
sbb
ret
cmp
imul
shr
and
mov
adcb
cld
jnp
add
jo
xor
scas
lcall
clc
jp
pop
mov
sbb
push
and
ret
fsubl
es
adc
cmp
pop
xor
add
push
push
mov
test
and
mov
cmp
xchg
addl
jmp
sbb
cmc
shrl
mov
sbb
add
sahf
int3
dec
add
xor
push
jg
data16
pop
and
fs
adc
pop
rolb
cmp
cmpsl
out
mull
mov
cli
icebp
xchg
or
aad
bound
aaa
mov
lock
cmc
test
dec
outsl
out
jns
xor
imul
cs
add
pushw
imul
mov
push
out
xchg
ljmp
jg
xor
cmp
lahf
sti
test
add
or
test
jecxz
mov
pop
lcall
cmp
rcr
sub
iret
repz
in
xchg
shrb
cmpsl
out
xlat
cmpsl
mov
adc
adcl
cs
popa
or
movsl
cmp
nop
xchg
pop
adc
aad
je
fisttpl
xchg
es
test
sbb
hlt
add
test
lods
andb
push
cs
sub
adc
sub
fcmovnbe
mov
xchg
loope
mov
cwtl
dec
ja
mov
sbb
loopne
pop
testb
lahf
cwtl
divb
push
mov
mov
icebp
ljmp
lret
imul
mov
mov
lock
sub
mov
aam
add
into
es
pop
adc
arpl
dec
cld
int
cmpsl
inc
mov
cmc
popa
or
lods
imull
pop
mov
inc
gs
mov
outsb
add
sbbl
xor
fcoms
push
mov
push
cld
clc
xchg
mov
cmp
int
jge
dec
aas
xchg
pop
js
aam
ror
out
dec
mov
pop
push
sub
punpckldq
jmp
or
pop
in
mov
pop
mov
shrl
cmp
dec
xchg
rorb
mov
int
mov
adc
sub
ret
lcall
cmc
bound
mov
in
or
xchg
xchg
sub
mov
sub
mov
test
ja
mov
mov
mov
mov
pop
lock
loop
mov
mov
sub
pushf
xchg
sbb
jmp
imul
adc
dec
sub
sub
fistpl
movsl
divl
and
mov
insb
repnz
jnp
mov
jle
aaa
shl
out
inc
pusha
sub
icebp
mov
pop
inc
aam
inc
lock
xor
push
int
push
mov
fsubs
les
cmp
sbb
cs
ret
mov
fldcw
imul
inc
andb
add
iret
pop
sbb
repnz
mov
popf
hlt
lret
arpl
mov
xchg
xor
or
and
xlat
rcrb
mov
lds
cltd
sbb
call
test
test
hlt
xchg
movsb
stc
mov
push
jbe
push
lods
jge
lcall
pop
outsl
add
clc
or
jl
enter
jno
push
jnp
mov
jo
sarb
insl
pop
mov
out
in
test
jl
aam
scas
lcall
test
add
stc
sub
daa
inc
or
loope
adc
inc
cmc
cmp
or
or
movsl
enter
hlt
test
hlt
andb
sbb
xchg
add
mov
xor
mov
jb
pop
gs
js
mov
int
cmpsb
ljmp
dec
push
lret
sub
mov
out
rclb
jbe
xchg
popa
cltd
mov
movsl
movsl
mov
bound
and
insl
jae
or
icebp
sub
and
sub
push
sub
add
mov
add
sahf
outsl
ret
arpl
dec
mov
jg
jne
loop
ja
stc
add
xor
mov
test
push
fsubs
mov
cli
and
xor
cmp
test
mov
push
sbb
inc
xor
sub
add
leave
ss
stos
dec
add
movsl
add
dec
cmc
lods
pop
fwait
mov
pop
out
ds
mov
mov
cmpsl
ds
sti
push
xor
sub
gs
pop
in
flds
or
fldenv
pusha
cmc
lods
js
insl
inc
pop
xchg
cmpl
cmp
xor
xlat
out
out
pop
jae
pop
adc
out
sbb
jmp
cld
pop
cs
sbb
outsb
xchg
sub
test
jb
repz
inc
and
jo
dec
jecxz
mov
sbb
ljmp
sub
bound
xchg
stc
dec
pop
jp
fistl
xchg
inc
push
loope
inc
negb
aas
xor
add
dec
jo
and
pop
int
das
ss
test
pushf
std
pop
out
cwtl
mov
push
div
push
mov
rorl
lret
fimull
jne
sbb
rcll
xlat
pop
rcrb
test
mov
sbb
ret
jbe
xchg
adc
cmpsb
dec
imull
inc
rcrl
and
or
mov
adc
in
and
inc
mov
pop
lea
cmp
test
cwtl
aam
add
inc
push
aam
cmp
js
movsl
clc
shrb
pop
xchg
push
rcr
adcb
pop
and
aam
mov
cmp
add
scas
cwtl
xor
mov
mov
pop
int
or
sbb
insb
push
mov
int3
stc
inc
dec
adc
sbb
inc
pop
js
aad
js
fnstsw
clc
sahf
push
bound
push
arpl
add
rol
xchg
jecxz
jne
mov
pop
mov
inc
insb
adc
inc
adc
jp
ret
push
pop
call
and
mov
pop
jne
mov
cwtl
out
xor
pop
xchg
out
xchg
xchg
xor
cmpl
cmp
rol
popa
sub
arpl
movsb
fisttps
and
add
insb
pop
dec
and
bound
cmp
inc
pop
pusha
enter
je
adc
inc
sti
cmp
jae
dec
fsts
gs
popf
bound
aad
decl
push
xchg
sbb
int3
sti
inc
xchg
sbb
sbb
mov
std
scas
test
cmp
loop
mov
mov
daa
hlt
adc
adc
or
mov
arpl
mov
jne
int3
push
adc
neg
fimuls
sti
cmp
xchg
add
add
out
add
inc
and
movsb
test
push
xlat
push
xchg
jbe
push
add
in
cmpsl
sbb
lods
mov
cmp
push
dec
jno
adc
dec
xchg
fwait
xchg
pop
mov
inc
jo
xor
push
push
ret
xchg
sbb
inc
rorl
roll
xlat
in
imul
hlt
xchg
shll
inc
xchg
push
jmp
inc
sub
fidivrl
mov
cmc
cmpsb
movsl
iret
lock
add
stc
cmpb
sbb
rolb
ds
dec
or
xor
xchg
js
pop
adcl
pop
insl
xchg
push
shl
addr16
and
loop
hlt
adc
bnd
lock
popa
mov
mov
mov
push
xorb
lret
push
or
pop
int
mov
pop
pop
lods
cs
xor
adc
outsb
and
cwtl
inc
clc
subb
jg
mov
stc
mov
mov
repnz
jg
cmp
sbb
lods
cli
push
call
cmp
out
mov
into
ss
cmp
adc
das
xor
xorb
fsubrs
sbb
jge
add
mov
stos
mov
aam
and
sub
xor
xchg
pop
jnp
adc
ret
inc
sar
dec
mov
gs
xor
jbe
add
cmp
sbb
fsts
pushf
icebp
repz
cmp
imulb
cmp
sub
adc
mov
pushf
ret
xchg
jmp
jo
cs
lret
xor
pop
nop
dec
pop
lods
dec
push
pop
dec
std
mov
add
cmp
sbb
jp
mov
mov
int3
aam
dec
lahf
into
fcmovnb
jb
pop
pop
lods
addr16
add
add
mov
push
cmp
and
xchg
sarl
sbb
push
xlat
add
mov
fldl
mov
cwtl
sbb
daa
lret
dec
lcall
in
xor
sub
pop
shrb
aad
mov
lcall
scas
lret
dec
xchg
insl
pop
push
insl
dec
repnz
imul
xor
popa
cmp
add
aaa
es
and
fcompl
cmp
test
cltd
test
fdivrl
in
or
aad
fstpl
xor
xchg
push
fsubl
xor
in
sti
adcl
stos
lahf
rorl
xchg
and
test
mov
xor
jle
outsl
xor
push
add
or
mov
roll
mov
inc
jecxz
jbe
mov
ret
push
push
in
inc
add
clc
lock
cmp
jns
clc
test
dec
aad
xchg
xor
add
sti
and
jp
xchg
xchg
mov
xchg
repnz
add
adc
jne
fcmovnu
mov
cld
mov
xchg
rcl
jmp
incl
push
out
mov
or
sti
addr16
stos
push
jecxz
and
jne
insb
enter
pop
aam
jle
add
test
arpl
xchg
fists
xlat
mov
mov
movl
bound
sub
push
popf
mov
mov
lds
out
jno
jae
sbb
cmpsb
scas
or
ret
pop
adcl
imul
inc
lock
cmp
jns
ret
mov
inc
outsb
xchg
ds
jp
cmp
inc
imul
xchg
rol
add
jmp
int3
cmp
and
fisubrs
cld
rcrb
xor
rcll
add
bound
xchg
movsb
ucomiss
jbe
cmp
jge
and
lret
aaa
xchg
inc
push
cmp
fnsave
mov
jl
mov
lret
cmpl
scas
sub
xchg
jb
test
adc
inc
int
pop
cmpsb
push
hlt
push
in
push
shrb
inc
and
push
in
sbb
inc
pop
ret
inc
cmp
jge
leave
adc
and
jne
lahf
mov
adcb
mov
ds
rcll
mov
dec
js
test
lcall
jo
mov
scas
lret
outsb
inc
adc
popa
ror
xchg
or
mov
out
mov
sahf
insl
and
cvtps2pi
int
cltd
arpl
imull
pop
sub
shrl
icebp
mov
jle
sbb
mov
addb
xchg
loop
mov
add
adc
pop
test
ss
leave
mov
fcomp
xor
fdivr
mov
push
xor
into
cmp
pop
or
mov
cmc
fsts
xor
movsl
outsl
andl
stos
adc
adc
mov
lock
imul
out
xchg
mov
fcoms
shll
jge
mov
jno
inc
gs
sub
loopne
cld
dec
pop
and
mov
jb
sbb
or
jmp
xchg
or
sbb
pop
test
xlat
fs
bound
or
xchg
pushf
outsb
jmp
cs
aad
adc
nop
and
dec
dec
in
ret
nop
