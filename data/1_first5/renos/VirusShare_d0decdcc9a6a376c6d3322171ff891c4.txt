sar
call
push
push
push
pushl
push
call
mov
fstpt
inc
movswl
ja
es
cmp
std
lods
enter
add
mov
and
jae
call
mov
add
lds
jae
cmp
pop
in
ja
mov
xor
mov
arpl
imul
mov
cmpl
sbb
out
cmpsb
sti
sahf
ja
adc
xorb
jmp
xor
pop
pop
mov
ja
ja
pop
pop
pop
ret
xor
or
in
push
rcrb
pushf
add
rclb
dec
and
pop
ret
push
mov
push
push
frstor
cmp
mov
mov
add
decb
dec
xor
cmp
shlb
imulb
inc
xor
arpl
stos
jne
sbb
inc
test
or
cltd
cs
cld
imul
out
sbb
sub
ds
mov
pop
sti
ds
les
cmpsb
sbb
or
inc
mov
pop
loope
inc
mov
mov
fstp
inc
pop
iret
lea
stos
stos
mov
loopne
inc
out
jl
in
loopne
lea
push
call
lea
in
idiv
or
and
mov
into
scas
add
leave
mov
mov
xchg
jl
aam
lods
push
iret
xchg
pop
mov
pushf
jb
sub
fbstp
and
add
aas
pop
test
shrb
mov
daa
fwait
mov
jbe
mull
lcall
or
in
inc
std
shl
movsb
bound
shll
ds
inc
imul
xchg
mov
add
jno
fdivl
mov
daa
fdivp
push
adc
push
test
fdivrs
jns
mov
mov
adc
mov
and
sbb
insb
mov
fwait
mov
add
mov
push
jecxz
or
daa
enter
test
mov
sbb
mov
mov
push
mov
test
addb
cmp
fnstenv
aam
gs
add
cmpl
iret
cltd
imul
cmp
pop
aas
stos
cmp
in
inc
incl
fnstsw
add
add
xchg
cwtl
pop
mov
sbb
in
or
cmp
jecxz
add
aaa
cmp
jns
add
test
movsb
sub
mov
add
test
cmpsb
sti
bound
mov
or
xor
xchg
rcr
or
xchg
sbb
mov
push
and
cmp
pop
int3
jne
imul
rclb
sub
xchg
lock
repz
shr
pop
fwait
repnz
adc
movsb
out
loope
movsl
das
dec
cltd
mov
lods
setne
imul
nop
fxch
dec
mov
mov
adc
in
int3
add
in
push
shll
push
sbb
sub
jg
mov
adc
mov
out
inc
pop
dec
push
mov
movsl
mov
push
in
cmp
adc
fs
mov
popf
dec
dec
repnz
xchg
fildll
shll
pushf
push
push
jnp
sbb
dec
adc
push
movb
insl
sti
add
mov
add
or
cmc
adc
add
stos
testb
ss
test
fwait
arpl
cmp
push
fwait
or
iret
dec
xor
outsb
sti
fsubs
inc
lcall
popa
jmp
insl
lcall
pop
xchg
sbb
imulb
jne
fdivr
dec
ret
or
roll
pop
mov
pop
aaa
std
or
sahf
mov
or
sbb
out
xchg
sbb
pop
fwait
adc
addr16
cwtl
xor
pop
push
push
xchg
jge
scas
dec
add
pushf
xor
fnstenv
int3
jmp
mov
and
jmp
add
mov
stc
outsb
mov
sub
imul
loop
dec
cld
decl
pusha
mov
push
cmp
or
aaa
loope
popf
and
maxps
jg
leave
ret
cmpb
mov
je
mov
mov
sub
mov
xor
mov
je
inc
xorb
jne
and
in
inc
and
push
cmpsl
inc
movsb
jg
bound
lea
mov
data16
push
mov
pop
xchg
pop
jne
add
fdivs
and
inc
fs
jmp
inc
fnstsw
mov
sub
or
jle
mov
ds
int
mov
pop
jne,pt
mov
xchg
xchg
sbbb
js
and
lock
cli
fisubrs
dec
bound
push
and
cltd
pusha
and
mov
cmpl
mov
dec
add
xor
push
jns
mov
les
pop
test
ljmp
pop
pop
sbb
sarb
mov
addr16
mov
lock
call
loopne
lock
mov
push
fdivrs
fcoml
inc
enter
or
je
sti
add
and
loop
data16
lea
add
dec
push
push
nop
pushf
jge
js
sbb
dec
arpl
fsts
fcomip
cmpb
push
movsb
adc
ret
fcomip
nop
mov
ja
xor
out
leave
inc
sbb
xchg
mov
pcmpeqw
repnz
insl
mov
rcll
fdivrl
mov
call
shr
mov
clc
cmp
push
cmp
fwait
xchg
jl
push
scas
je
pop
pop
je
lea
push
push
xor
mov
mov
push
adc
or
out
pushl
lea
or
or
insl
addr16
lcall
faddp
xor
and
and
das
clc
dec
mov
testb
sbb
push
jns
push
cltd
popf
adc
inc
pop
shll
repnz
rorl
outsb
jge
mov
aaa
je
jle
bound
adc
int3
inc
or
imul
loopne
dec
push
les
cwtl
in
loope
cs
mov
pop
mov
pop
push
add
cltd
decl
jo
push
divb
pop
pop
and
arpl
pop
push
sbb
dec
idivl
mov
data16
mov
dec
movsl
xchg
aam
sbb
repz
std
mov
push
sbb
add
push
add
int
je
adc
jp
adc
mov
and
clc
mov
and
lods
pop
sub
lock
jne
jecxz
xchg
int3
jle
mov
imull
mov
sbb
push
mov
shl
inc
push
pop
scas
cmp
loopne
sbb
and
nop
sbb
test
aaa
or
js
push
in
and
int
add
insl
es
jbe
xor
mov
adc
push
leave
push
sbb
je
mov
in
dec
jp
dec
test
loopne
or
in
insl
push
daa
jno
je
push
mov
mov
stos
push
xchg
or
xor
test
xchg
xchg
decb
sbb
inc
xor
or
lea
add
and
add
and
or
push
ffreep
push
pop
mov
cmpsb
add
and
sbbb
int3
mov
aaa
inc
lcall
fwait
je
sub
cmpl
push
es
push
adc
sbb
movl
sbb
or
ss
ret
insl
mov
rorb
mov
dec
adc
aam
pop
jmp
or
out
mov
pop
add
fsubrs
arpl
lock
lock
test
jmp
ret
sub
cmp
mov
inc
ss
lods
dec
test
dec
mov
aad
jno
nop
and
subl
mov
add
add
mov
insb
lea
push
pop
jo
dec
adc
cld
popa
movsl
add
ret
movsl
xor
jle
sub
sub
test
call
fwait
insb
add
outsb
pop
dec
adc
push
pop
in
cwtl
push
popa
pop
notl
bound
out
fisubrl
jo
int
add
dec
sbb
or
dec
pop
icebp
sub
mov
adc
mov
xor
pop
mov
cmp
fldl
pop
adc
rorl
movsb
add
iret
pop
push
inc
lahf
mov
mov
daa
jno
cli
and
loopne
dec
mov
test
inc
inc
sbb
movsl
andb
rcrl
mov
dec
aas
xchg
xor
sub
scas
in
adc
lods
push
sbb
xor
insb
push
aas
enter
loope
mov
lds
mov
fs
int
ret
mov
mov
fmuls
dec
fadd
add
add
rcrl
orb
ds
sub
or
lret
aaa
fcmove
and
sbb
pop
lock
pop
mov
rol
arpl
jl
mov
push
cmp
pop
dec
mov
add
hlt
sahf
cli
pop
rol
pop
sbb
in
mov
call
popf
inc
ss
and
mov
or
xchg
add
repz
inc
ror
and
mov
gs
xchg
in
fdivrs
cmp
repz
test
mov
mov
push
push
add
insl
pop
pop
fcom
and
mov
dec
mov
push
out
fcmovnb
inc
jge
push
mov
pop
pushf
add
sub
sbb
imul
pop
inc
cmc
roll
xor
sbb
mov
mov
rcrl
sub
sbb
jbe
mov
dec
call
mov
xchg
pop
xor
popf
jge
inc
xchg
sahf
xor
pop
cli
leave
push
mov
inc
movsl
fisttpl
push
or
cmp
outsb
sbb
jo
pop
push
push
adc
cmp
les
or
sub
inc
iret
push
or
or
mov
mov
stos
xchg
pop
inc
ds
gs
jo
nop
and
das
out
and
fwait
inc
addb
das
lcall
in
or
xor
mov
jo
xor
add
or
or
cmp
mov
push
out
xchg
jb
insl
mov
jo
xor
dec
scas
cmp
push
and
data16
inc
dec
cwtl
inc
jo
ss
push
jmp
sbb
lret
adc
mov
dec
test
sti
sub
rorb
push
add
jp
pop
pop
pusha
sub
xor
push
es
xchg
rol
xor
aam
push
push
or
cmp
mov
or
push
jb
add
arpl
imul
dec
in
test
bound
push
cld
rolb
mov
mov
rcr
and
ret
xor
outsb
mov
leave
nop
inc
push
test
and
inc
mov
xor
sub
or
jnp
fbld
pop
adc
or
dec
cs
and
mov
and
sbb
adc
ficoml
mov
andl
faddl
adc
sbb
jmp
mov
push
das
ret
add
xchg
cltd
insb
icebp
sub
loope
sub
dec
and
loopne
ds
push
rorl
pop
mov
test
mov
dec
jle
rcll
mov
and
pop
sub
or
insb
stos
lds
rcl
fs
push
lahf
pop
push
sbb
loope
test
xor
mov
jg
mov
call
aam
mov
cmp
xor
or
sbb
dec
rcrl
pushf
lea
push
dec
mov
or
dec
xchg
orb
push
sub
xchg
ror
jae
fcmovnbe
push
inc
add
sbb
push
jo
das
mov
mov
data16
dec
mov
in
enter
cltd
xor
mov
push
test
lock
cltd
jno
cmp
rcll
enter
push
mov
sub
movsb
or
hlt
movsb
mov
xchg
cmp
pop
lea
xlat
cmp
lret
xchg
rclb
mov
stos
push
cld
loopne
adcl
pusha
in
aad
jle
rolb
pop
mov
pop
jecxz
inc
sbb
sbb
mov
lea
lea
mov
cmp
jmp
mov
pop
xchg
inc
add
gs
cwtl
add
adc
cmp
jmp
sarb
jmp
or
sbb
movsb
adc
push
xor
test
ljmp
cltd
add
pushl
mov
pusha
xlat
jne
decb
add
inc
add
std
push
sbb
lret
les
pop
outsb
dec
or
in
cmp
mov
test
fldt
xor
adc
shr
shl
adc
gs
mov
adc
pop
add
andb
stc
popa
xchg
aad
je
clc
cmpsb
inc
div
out
add
inc
add
cmp
add
sbb
push
mov
rorb
std
pop
imul
or
sahf
xchg
cmp
imulb
shr
loopne
jecxz
push
jg
adc
shlb
adc
ja
incb
ljmp
cmp
inc
add
loope
pop
or
sbbb
jmp
sti
cmp
push
xorl
xor
mov
push
push
inc
add
mov
lds
push
mov
ds
test
call
addl
or
test
test
outsb
inc
add
jmp
xchg
pop
cmpsl
mov
jo
add
sub
jns
mov
movzbl
jo
enter
add
push
xor
or
mov
outsb
pop
addr16
fs
xchg
xor
pop
or
insb
and
pusha
pop
xor
push
sub
xor
push
pop
add
dec
or
jbe,pn
subb
rcll
in
mov
lock
shl
testl
sbb
ja
fnstenv
ret
push
xchg
dec
pop
js
aam
mov
data16
pop
iret
push
in
out
add
das
push
xchg
cmpl
xchg
mov
ret
sub
push
xchg
mov
push
jle
xor
or
push
icebp
mov
or
inc
mov
pop
aas
and
sbb
pop
fisubrl
mov
push
lods
xchg
xchg
cmc
out
add
jg
sahf
mov
dec
insl
movsl
mov
clc
push
mov
sub
dec
xchg
xor
inc
mov
pop
adc
or
jbe
adc
push
cli
or
cmp
dec
sbb
js
inc
jle
leave
xor
fwait
or
mov
lock
jmp
das
fwait
add
add
divl
jmp
xlat
jo
jg
inc
add
clc
sub
push
add
push
push
daa
jecxz
jae
hlt
fwait
sbb
in
hlt
lods
inc
loopne
loope
xor
cmp
decl
jmp
rcr
out
arpl
leave
cmp
jae
scas
mov
cmp
mov
or
cmp
cmp
pop
pop
jle
cmp
jp
adc
je
test
or
cmp
sub
dec
insl
enter
mov
inc
jg
fidivl
mov
push
jb
cmpb
dec
mov
sub
push
sbb
xchg
adc
pushl
cs
icebp
inc
lock
xor
ljmp
mov
mov
push
adc
pop
rorb
inc
mov
and
mov
xor
pop
nop
popa
mov
push
push
push
ds
sbb
jno
lcall
loopne
inc
xorb
pop
mov
fistpl
leave
movsb
jns
arpl
inc
adc
mov
hlt
sbb
adc
fstpl
mov
adc
in
dec
lock
jmp
ficoms
add
fistl
pop
dec
sarl
mov
ret
jp
cmp
adc
adc
sarb
das
add
rcrb
insb
or
pop
xchg
or
pusha
cmpl
push
or
aaa
sub
mov
push
orb
xchg
pop
sbb
adc
sbb
mov
pop
pushf
mov
dec
mov
jp
adc
jl
ret
in
pop
incb
sub
ret
mov
jb
mov
cli
rolb
add
scas
enter
xlat
int
mov
xorl
popf
aam
aas
cmp
xlat
dec
insb
lods
cmp
jb
inc
xchg
push
add
xor
adc
int3
inc
shr
nop
fndisi(8087
cmp
je
sub
push
cmp
insb
aam
shll
dec
adc
sti
scas
inc
lods
push
dec
mov
arpl
les
mov
pop
cmp
mov
xchg
cmp
pop
push
dec
lds
mov
push
and
sbb
xchg
mov
xor
aam
ret
adc
cmpsl
sbb
sarl
sbb
sbb
cld
jb
push
mov
xor
push
xor
fucomi
mov
inc
or
add
adc
or
pop
jl
cmp
dec
inc
xor
out
mov
inc
bnd
inc
jmp
gs
js
xchg
es
push
sbb
hlt
lods
add
jb
inc
in
nop
cmpsl
xchg
ret
add
test
popa
mov
mov
xchg
sub
or
icebp
and
push
mov
int
and
dec
stos
loopne
shll
cmpsl
sub
inc
nop
in
or
pop
in
jl
ss
adc
push
aad
xor
ja
adc
push
or
or
pop
scas
push
and
cwtl
aam
xor
aas
lds
mov
pop
inc
or
sbb
add
into
insl
ja
xor
les
outsb
ret
xchg
int3
jno
stc
adc
jmp
int3
mov
out
rcll
in
call
inc
add
mov
notl
jbe
stos
pop
bound
push
das
ret
aad
push
push
es
jo
aad
mov
dec
out
xchg
jns
or
jmp
mov
add
js
sub
push
shrb
jg
jne
push
bound
jle
push
push
push
push
dec
arpl
test
sbb
bound
in
lcall
pop
cld
scas
lea
add
sub
inc
cmp
add
mov
cmpsb
ret
dec
xlat
lods
cmp
test
pop
mov
pusha
and
jbe
rol
sarl
adc
inc
dec
push
rcrb
add
fists
or
push
aaa
into
dec
pop
sub
loop
xchg
das
aad
add
loopne
icebp
les
pop
inc
dec
aad
subb
fisubs
imulb
addr16
mov
xor
sbb
mov
lret
cmc
pop
pop
and
sbb
add
jo
add
pusha
dec
mov
ror
or
in
pop
sub
adc
cmp
jecxz,pt
inc
pop
mov
ret
cld
push
xor
and
dec
jbe
repnz
repnz
pop
mov
dec
or
adc
and
mov
jo
cmc
sarb
daa
inc
rclb
dec
sub
add
inc
jo
leave
and
jo
dec
enter
rcl
shlb
dec
xor
lock
dec
or
xchg
pop
push
push
popf
pop
movsl
mov
lds
std
or
int3
sbb
popa
mov
loopne
popa
xor
push
in
and
cmp
and
les
sbb
jb
add
mov
xchg
lret
jne
mov
pop
aam
add
sbb
inc
push
mov
aas
dec
or
fidivl
insb
pop
shll
leave
mov
mov
mov
inc
mov
in
iret
shlb
adc
and
cmp
mov
test
les
lock
pop
and
jl
stos
test
leave
add
mov
push
int3
jnp
lock
mov
push
add
mov
pop
mov
cwtl
jo
lcall
test
jnp
and
loope
and
inc
pop
fmul
mov
fsubl
dec
push
cmp
stc
sbb
push
and
or
mov
enter
mov
mov
into
addl
repnz
cltd
jbe
stos
je
cmpsb
insl
sub
dec
dec
imul
cmp
dec
fcompl
push
pop
cmp
push
add
call
adc
adc
jge
jne
lods
jp
flds
jmp
jle
xchg
adc
lods
dec
or
outsl
push
pop
in
xor
mov
sbb
and
dec
js
test
shlb
hlt
push
mov
jne
dec
or
mov
push
add
bound
sahf
nop
mov
mov
mov
xchg
mov
xor
insb
sahf
or
pop
push
cmp
jb
or
or
ret
dec
imul
add
jno
aam
in
cmp
dec
jno
inc
stos
test
out
or
or
pop
inc
cwtl
movsb
mov
ret
pop
lock
pop
pop
jne
in
or
outsl
cmc
aam
lret
out
xor
xor
int
and
fmul
push
cmp
jns
push
push
jns
pop
mov
push
out
pop
aaa
ffree
mov
out
les
add
test
pop
jl
cmp
test
adc
mov
stos
xor
dec
or
push
sub
sbbl
pop
mov
mov
jmp
mov
add
fwait
lods
inc
orl
add
push
jae
lods
adc
sub
push
jb
sbb
or
sarl
lret
jb
aaa
aam
sub
or
shll
mov
mov
pop
lods
inc
movb
cmp
jb
or
mov
fldenv
dec
or
outsl
add
jecxz
aam
neg
arpl
xor
bound
push
gs
cmp
mov
inc
mov
mov
dec
inc
orb
out
repnz
xchg
popa
int3
mov
add
loopne
inc
and
repz
test
add
xor
sbb
xor
mov
add
idiv
xor
jbe
mov
in
mov
scas
sub
push
mov
xchg
imul
mov
dec
cmpb
icebp
mov
adc
pop
inc
xor
jb
push
pop
and
imul
iret
in
sub
push
adc
repz
inc
arpl
mov
add
and
enter
rolb
out
pop
addr16
test
outsw
jmp
adc
xchg
mov
xor
loope
mov
xor
mov
rorl
aaa
add
repz
cmp
ret
sub
and
pop
enter
loope
push
sub
mov
pop
jge
insl
test
sub
mov
cmp
ss
enter
rcr
incl
andl
cmp
push
loop
mov
paddd
sub
fadds
cwtl
mov
add
sbb
rolb
ret
fchs
ss
les
adc
or
call
cmp
xchg
pusha
std
and
inc
xor
mov
cmpsb
mov
pusha
inc
cmp
aaa
fsubl
nop
inc
movsl
pop
fimuls
pop
rolb
adcb
mov
push
inc
in
aaa
mov
dec
xchg
insb
cwtl
data16
sbb
rolb
pop
nop
cltd
pop
mov
nop
lcall
push
cmpsl
cmp
lret
xorl
adc
cmp
mov
pop
pop
cmp
aam
lret
test
adc
jmp
lock
enter
push
orb
add
fnstenv
loope
xchg
mov
movsb
mov
or
pop
daa
dec
rol
or
cld
add
lods
mov
xchg
or
adc
mov
adc
xchg
loop
or
fadd
sub
dec
mov
shrb
sbb
mov
add
push
sub
add
ror
icebp
add
in
pop
push
sbb
adc
idivl
xor
mov
dec
push
adc
mov
pop
pop
std
shll
add
or
lods
or
pop
hlt
jge
and
pop
imul
jl
sbb
dec
lret
icebp
das
push
lcall
add
outsl
xchg
rcrb
cmp
mov
add
inc
dec
std
push
sub
sbb
repnz
fcmovnb
ljmp
or
pop
data16
push
iret
mov
mov
lahf
mov
outsb
xor
and
xchg
loope
aam
mov
ss
jne
shll
mov
lea
inc
adc
cltd
xchg
loopne
cmp
add
or
push
add
mov
insl
push
push
mov
cmp
adc
and
xchg
je
call
push
adc
lea
jmp
rorl
mov
mov
mov
leave
dec
loopne
inc
mov
pop
rol
popa
add
push
sbb
or
add
loope
or
mov
xchg
int3
add
adc
jo
mov
sbb
add
sub
add
data16
dec
outsb
adc
or
push
mov
ss
sbb
aas
push
call
and
fdivl
pop
ret
inc
test
add
or
push
outsl
pop
add
jl
loop
inc
imul
push
movsb
sbb
test
test
sub
cmp
mov
out
inc
pop
push
sbb
mov
xor
jnp
pop
xchg
loop
leave
gs
push
data16
adc
jmp
mov
add
cwtl
icebp
fwait
add
addr16
ret
cmp
daa
pop
imul
fstpl
or
loope
bound
fisubrl
fdivrs
add
movsb
dec
mov
mov
sub
es
ljmp
in
imul
xchg
add
inc
bound
dec
rcll
fwait
push
lods
incl
xchg
test
idivb
les
pushf
push
iret
js
or
js
dec
xor
pusha
imul
lcall
subb
insb
cltd
movsl
xchg
adcb
std
push
das
mov
mov
add
adc
pusha
push
mov
adc
or
mov
cmp
cmpsb
fstl
mov
xor
jo
mov
test
xchg
or
clc
push
pop
push
leave
or
or
push
icebp
mov
cmpl
cmp
push
mov
lret
inc
cmp
add
sub
mov
stos
xor
cmp
fs
lcall
rolb
pop
add
and
xchg
call
movb
cmp
xchg
cld
orl
jne
nop
lea
and
xor
push
pusha
mov
je
rcrb
push
cmp
in
dec
dec
es
or
inc
adc
lods
outsb
icebp
adc
je
pop
jmp
adcb
mov
adc
pop
call
cmp
loop
out
call
mov
popa
adcl
in
roll
test
push
dec
test
cmpl
and
or
out
xor
in
cmpl
jne
push
lahf
adc
fdivl
lock
xor
sub
pop
mov
aaa
mov
push
adc
push
pop
sub
adc
pop
jno
dec
or
stc
popf
jnp
shr
mov
movl
dec
sub
dec
add
mov
mov
js
jne
pusha
in
lods
inc
mov
test
shll
gs
ja
je
addr16
movl
rorl
push
sbb
mov
cli
xor
arpl
je
sub
push
jo
dec
or
lret
xorps
rcrl
insl
in
repz
fdivs
push
and
ja
int
stc
cmp
call
in
inc
in
test
adc
movsb
lret
jecxz
ud1
pushf
sub
mov
sbb
notb
clc
sbb
es
jno
push
iret
pusha
mov
mov
loopne
pusha
pop
rorb
sub
xchg
inc
mov
into
into
push
les
shll
repnz
lcall
xchg
inc
js
jle
aam
lock
jo
shl
ffreep
cmpsb
lcall
add
sbb
imulb
sbb
inc
movsb
ret
xor
pop
lods
and
pxor
add
fsubs
mov
aad
mov
sub
enter
add
xor
movsl
cmp
cmpsl
or
into
push
je
scas
and
mov
ret
aaa
jne
sbb
fst
stc
sahf
loop
xchg
lods
and
adc
mov
lret
bound
dec
inc
jnp
adc
mov
or
fwait
idivb
push
pop
int
out
je
decb
dec
pop
adc
push
mov
int3
shll
mov
cltd
add
testb
das
mov
pusha
inc
and
push
out
into
or
aaa
sbb
or
sub
lds
int3
cmpsb
lret
and
lds
stc
je
and
nop
mov
xchg
cmpl
add
arpl
mov
xor
outsl
cwtl
out
int
movl
out
add
add
icebp
ja
add
mov
je
inc
rorb
or
jmp
jmp
inc
add
mov
add
dec
add
jmp
add
cmp
mov
aaa
or
xor
jmp
or
sub
dec
lods
and
sbb
adc
dec
jne
adc
fucomi
adc
jmp
or
add
inc
sub
inc
cmp
jl
sbb
lahf
adc
push
je
or
ret
in
mov
scas
and
vphaddbw
or
add
or
mov
inc
or
je,pt
dec
dec
decl
jne
sar
dec
or
mov
ss
and
dec
shll
xchg
xchg
lcall
test
adc
pop
lods
mov
or
call
fstps
clc
icebp
pop
je
outsb
in
roll
int3
mov
add
mov
stos
je
hlt
incb
addr16
gs
push
or
sahf
xchg
mov
pop
test
pop
mov
mov
push
lods
cmp
mov
cmp
imul
rcrl
xchg
or
sbb
lock
inc
mov
xor
sub
mov
bound
add
inc
aas
push
sbb
pushf
loop
pop
out
dec
je
add
pop
lea
in
mov
xlat
or
mov
cld
sbb
int3
insb
mov
aam
inc
add
addb
mov
inc
push
jg
negb
cwtl
cmp
sbb
pop
je
mov
mov
ret
pop
rorb
sahf
xor
icebp
jmp
cmp
sub
xchg
cld
cmp
add
in
je
inc
push
push
aas
pop
stc
andb
std
cmp
inc
or
fnsave
lea
dec
or
add
mov
sbb
fsubrs
rolb
mov
mov
dec
or
negl
mov
rcl
test
or
sub
push
clc
adc
mov
jl
shlb
neg
cmp
data16
adc
xor
push
xchg
inc
movsb
ss
lea
push
lods
mov
xchg
lea
cmp
incl
cmpsb
xlat
or
cwtl
xor
cmp
add
lock
movsb
or
test
sbb
add
jbe
mov
push
and
xchg
andb
jns
mov
and
dec
inc
push
test
std
sub
lock
shll
add
pop
push
adc
mov
or
xchg
jle
cwtl
or
push
xor
pop
inc
jl
inc
inc
loop
push
cmp
fucom
inc
pop
xor
xchg
jb
clc
adc
adc
aam
lock
incl
xchg
adc
jbe
mov
cmp
pusha
add
popa
movl
pop
addr16
addr16
inc
clc
invd
sti
xchg
inc
adc
cltd
xor
fimull
les
push
sbb
xor
sbb
and
or
hlt
push
orb
lret
and
addl
sbb
lret
movsb
loopne
adc
inc
sbb
data16
fildl
hlt
mov
dec
out
dec
and
fistpl
outsb
xchg
pusha
xchg
push
mov
mov
dec
inc
or
push
mov
test
mov
xor
lds
test
lea
fmul
xchg
add
mov
pop
adc
jns
jbe
sbb
sub
arpl
mov
and
test
add
jo
dec
inc
inc
cmpl
mov
pop
test
push
loope
test
out
add
sub
stos
sub
sub
mov
shrb
adc
outsl
add
push
arpl
adc
adc
jbe
gs
jb
cmp
inc
fisttps
in
cmp
pop
in
inc
cmpsb
stos
sub
lret
and
mov
xchg
xor
rorl
sbb
push
add
or
push
mov
sub
or
push
pop
hlt
add
push
aas
adc
inc
leave
and
pop
dec
adc
subb
lods
adc
or
pop
in
fadd
push
iret
add
dec
lret
inc
les
mov
repnz
and
es
adcb
fnstsw
cmp
jge
adc
push
and
xchg
adc
cmp
inc
xchg
in
insb
xor
xor
mov
mov
fiaddl
add
adc
ss
outsl
insl
add
aad
int3
adc
jmp
shll
pop
call
sub
shrb
int
pusha
mov
lret
mov
movsb
xchg
pop
push
pop
pop
xchg
leave
pop
pop
dec
seto
mov
xor
mov
enter
add
fcoml
mov
dec
ss
fdivrl
addr16
xchg
movb
dec
inc
ja
out
cs
sub
jo
call
pop
cmp
jne
cmpsb
jmp
out
sbb
shr
add
mov
arpl
ljmp
mov
shll
stos
daa
pop
or
les
seto
rcr
push
dec
mov
mov
mov
shlb
pop
andl
nop
pop
ret
aam
ds
and
ds
add
rcrb
push
pop
xor
sub
sbb
ret
dec
push
stos
outsb
dec
pop
jae
in
xor
mov
scas
cwtl
xor
adc
lret
jno
or
push
pop
scas
push
xlat
add
inc
inc
and
fsubrs
in
aam
imul
inc
adc
mov
pop
pop
outsl
pop
fisubl
add
sbb
jmp
rorb
mov
sub
imul
jo
ret
and
fs
jae
andb
add
dec
push
mov
or
or
xchg
lock
jo
pop
jo
out
jl
cltd
cmp
stos
inc
pop
dec
mov
dec
aad
js
dec
loopne
push
lods
in
xchg
js
aad
inc
jl
pop
neg
push
jbe
mov
mov
push
popl
sbb
nop
loopne
movsb
jo
int3
xor
imul
test
mov
enter
mov
adc
xor
aad
dec
push
sbb
push
push
fiadds
mov
cmp
sbb
and
movsb
sbb
out
pop
and
jp
insb
add
or
push
ret
sub
push
cwtl
xor
in
cmp
mov
call
push
pop
or
je
pop
incb
push
int3
add
mov
mov
bound
jo
loopne
push
adc
push
mov
loopne
pop
adc
xor
add
jmp
push
aaa
insl
cmp
and
repz
shll
addb
and
dec
dec
push
sub
pop
adc
in
imul
and
inc
pop
cmp
stc
fldt
fnstenv
push
sahf
xchg
mov
mov
dec
cld
jecxz
clc
ret
js
pop
enter
daa
mov
xchg
xor
push
fidivrs
add
xor
mov
pop
cs
jno
dec
mov
add
mov
xor
enter
outsl
jl
and
lret
jl
add
loope
mov
dec
add
int
movl
lahf
push
call
cmp
add
xchg
cwtl
sub
bound
push
adc
movsl
adc
sub
ret
xor
movsb
enter
sbb
es
ja
rorb
or
jmp
pop
data16
inc
inc
pop
mov
cmp
testl
lods
push
std
mov
or
xchg
test
daa
popf
js
jl
pop
test
les
lret
nop
xchg
fdivrs
xor
add
adc
repz
in
mov
hlt
clc
sub
ljmp
xor
stc
cld
ds
adc
repnz
add
lahf
or
adc
mov
cmp
sbb
popf
and
fdivl
aam
mov
mov
nop
iret
out
mov
dec
decb
shlb
pop
sub
mov
inc
xor
cwtl
add
lret
popa
mov
xchg
inc
pusha
dec
testl
xchg
and
out
cmp
sahf
inc
cwtl
add
lea
and
push
int3
pusha
fs
xchg
mov
mov
mov
or
lahf
xchg
je
mov
popf
addb
push
push
mov
pop
pusha
fsubs
mov
jo
loopne
or
je
push
xor
pop
int3
aam
mov
rolb
pop
je,pt
insl
inc
xlat
mov
or
and
in
jge
adc
pop
push
adc
mov
mov
push
jl
lahf
xchg
iret
out
cwtl
add
movsb
popf
test
fdivl
and
add
sahf
fsubrl
mov
mov
pop
ss
jae
in
mov
adc
rorb
dec
mov
push
inc
push
aam
paddsb
add
enter
adc
dec
xor
mov
and
mov
shlb
sbb
pop
or
outsb
inc
mov
notb
or
enter
icebp
fisttpl
xchg
add
bound
mov
sbb
add
push
xor
inc
mov
push
fsub
adc
adc
sbb
cmpl
or
fs
mov
push
jne
loope
ja
xor
sahf
xchg
inc
xchg
or
dec
call
dec
arpl
test
add
or
push
and
out
fistpll
inc
add
loope
add
add
mov
popf
push
add
jo
rcrb
or
movsl
cmp
fwait
ja
cmp
mov
pop
inc
push
rorb
push
mov
sahf
sub
mov
mov
scas
mov
mov
jge
add
adc
push
mov
mov
insl
pusha
into
push
or
outsl
adc
mov
fst
shlb
fcompl
ret
aas
sti
cmp
sar
push
movsb
and
mov
sbb
outsb
xor
add
adc
test
mov
mov
push
mov
cli
sub
test
jns
int3
push
das
cmp
pop
jl
lea
sbb
cmovb
andb
stos
push
xchg
jnp
dec
fsubr
push
xor
cmp
fimull
or
or
sub
push
push
je
repnz
idiv
and
outsb
push
mov
inc
lcall
lea
mov
pusha
repnz
inc
xchg
adc
pop
shlb
fs
mov
aam
and
rcrb
lock
sbb
sub
or
inc
xchg
xor
push
mov
in
lahf
mov
rcrb
loopne
mov
mov
test
je
movzwl
adc
mov
xor
mov
mov
jge
push
add
mov
test
cwtl
rolb
add
adc
or
fwait
incl
jo
mov
cmp
mov
pop
stos
cmp
sub
div
add
xor
sbb
outsl
cmp
push
fmull
push
pop
xchg
ret
jb
orb
into
int
xor
add
stos
add
filds
cltd
mov
jb
cmp
lods
push
sbb
xchg
aad
aam
mov
popa
out
push
lock
mov
aad
aam
adc
mov
dec
sub
or
pop
and
cmp
sub
call
and
and
mov
or
push
or
fwait
jmp
jl
cmp
sbb
pop
mov
in
loopne
sbb
mov
enter
push
pop
jb
int3
les
ror
sbbl
cmp
enter
add
xchg
jno
jmp
jbe
inc
or
jb
sbb
enter
mov
sbb
pop
and
ret
cmp
sbb
adc
xchg
cmp
or
rcrb
pop
stos
nop
test
es
jp
or
sbbb
cmp
addr16
or
daa
loop
inc
sbb
loopne
sub
les
jne
dec
mov
lahf
dec
or
push
push
dec
inc
adcb
xchg
lock
mov
lret
insb
js
test
xchg
inc
push
test
adc
pop
mov
cld
aam
adc
call
mov
xchg
cmp
jge
lret
lods
cmpsl
jno
dec
push
into
or
ret
add
cmp
add
inc
mov
mov
or
push
popf
push
add
in
cmp
or
and
mov
xchg
dec
adc
leave
and
or
sub
iret
sahf
inc
xor
jne
cmp
xor
or
test
or
adc
pop
shlb
pop
sbb
enter
xchg
lcall
arpl
test
adc
and
add
stos
fwait
sbb
xorl
in
mov
rolb
pop
sahf
cmc
jge
jg
incl
stc
push
jne
dec
addb
filds
enter
and
jmp
mov
sbb
insb
adc
aaa
mov
pop
xchg
je
mov
lods
jb
dec
cmp
arpl
and
pop
add
int3
push
pusha
ret
jo
cmpsb
aaa
ret
icebp
sub
test
inc
or
dec
push
addr16
jne
pop
lds
mov
pop
fbstp
sahf
notb
mov
sbb
mov
pop
enter
pop
data16
cmpl
in
sbb
push
dec
test
sbb
mov
add
inc
inc
jmp
xchg
rolb
add
cmp
xchg
inc
dec
push
nop
xor
sub
inc
or
sub
lret
fadd
or
lcall
rolb
jmp
mov
aam
dec
movsb
xor
repz
int
inc
lds
inc
outsl
inc
pop
insb
push
mov
adc
mov
push
inc
or
test
bound
mov
mov
pop
test
lock
push
mov
aam
adc
je
insl
or
cmp
fisubrs
je
add
test
or
or
push
sbb
dec
and
lods
test
cmp
insl
pusha
out
and
ljmp
out
mov
fwait
mov
xchg
jl
faddl
rcrl
loop
cmp
cmpsb
ss
repnz
push
in
fsubrl
cwtl
add
mov
push
lret
leave
pop
adcl
test
and
les
fadds
or
lods
add
sub
popf
mov
out
test
or
std
add
in
jbe
fs
mov
xchg
daa
adc
and
icebp
xor
jle
pop
add
jg
jbe
adcb
mov
in
popl
push
push
in
aad
cmpsb
mov
or
or
add
dec
mov
and
fldcw
jg
inc
mov
mov
or
and
cmpb
sbb
add
sbb
xchg
dec
or
sbb
in
add
add
xor
mov
fwait
mov
jbe
imul
stos
xchg
pop
add
lods
and
sbbl
sub
xor
movsb
pop
mov
mov
push
add
lahf
addl
push
arpl
add
andb
or
sbb
push
daa
push
adc
enter
fistl
push
ret
xor
lock
movsl
inc
xor
pop
push
cmp
fwait
xlat
push
add
nop
inc
xchg
test
push
ret
mov
push
nop
in
jne
push
inc
xor
inc
dec
xchg
inc
xchg
test
dec
push
nop
out
or
lea
insb
test
sbb
cmp
mov
daa
adc
cmovs
sub
scas
shll
ss
jmp
sub
les
xchg
lcall
mov
insb
mov
push
mov
test
and
in
sahf
push
je
sub
xchg
lcall
rclb
cld
pop
lods
in
sbb
fistpl
mov
or
cmpsb
shrb
pop
push
roll
les
push
and
add
mov
fcoml
popf
cmp
insb
xor
or
lret
or
inc
add
xchg
adc
adc
and
cwtl
jmp
int
repnz
push
inc
add
xchg
dec
sbb
push
bound
aam
sub
adc
pop
push
out
dec
cmp
or
pop
lcall
push
stos
inc
mov
or
sbb
dec
ror
push
cmpsb
rclb
cmp
test
mov
sub
or
add
lods
test
hlt
negl
xchg
dec
in
cli
or
push
push
arpl
les
mov
enter
sub
enter
pushf
and
cmp
or
lds
into
and
inc
jbe
dec
cmp
clc
sahf
inc
adc
jne
ss
push
sbb
cmp
push
jne
xor
sub
or
fwait
ds
inc
xor
mull
add
jg
push
repnz
bswap
or
push
or
dec
out
dec
mov
xor
lods
in
add
mov
add
fsubl
inc
inc
pop
scas
shlb
sub
repnz
xchg
xlat
dec
mov
loopne
sbb
add
push
push
cld
imul
xor
mov
mov
movsl
in
sbb
fs
hlt
movsb
xchg
jmp
pop
add
xchg
les
adc
fcompl
and
gs
or
test
insb
aaa
add
cmp
dec
enter
adc
mov
adc
jne
jne
inc
and
push
mov
mov
cmp
in
pop
rcll
push
pop
push
push
insb
adc
daa
mov
push
dec
push
sbb
flds
enter
inc
in
add
imul
call
jl
faddl
dec
mov
jns
xor
cwtl
xor
dec
mov
repnz
call
je
js
push
xchg
jg
mov
out
adc
sbb
arpl
mov
add
inc
push
sub
pop
int
dec
mov
sub
add
and
jo
lds
fdiv
sbb
dec
mov
push
je
jnp
adc
in
mov
inc
xchg
lea
ljmp
mov
adc
push
xor
inc
or
test
cmp
jnp
push
adc
imul
nop
or
push
lock
sbb
and
jno
std
pushf
in
push
add
cwtl
sub
fs
or
cmpsb
sbb
or
cmp
or
ret
or
or
es
ret
dec
repz
idiv
push
repz
test
nop
call
prefetchwt1
or
int3
ss
xchg
dec
dec
div
push
xchg
cmc
and
sbb
mov
mov
mov
adc
shll
xchg
or
pushf
or
adc
sbb
jns
mov
lods
dec
push
pop
mov
add
sub
cli
or
leave
pop
xchg
push
and
dec
push
inc
adc
adc
gs
mov
scas
sbb
push
addr16
or
arpl
xchg
pop
mov
sub
push
push
sub
jns
mov
adc
jbe
add
xor
push
and
inc
xlat
sbb
mov
or
push
adc
nop
sbb
push
pop
push
xor
dec
shl
ret
aam
jl
sbb
or
fmull
inc
rcrb
xrelease
lods
adc
mov
inc
or
out
push
push
je
jb
lret
out
xchg
dec
inc
out
je
adc
aam
pop
mov
insb
adc
mov
cwtl
cltd
into
cld
pop
push
and
das
cwtl
movsb
pop
dec
push
test
mov
add
addb
call
cmp
test
js
lock
push
mov
cld
and
adc
ss
inc
in
insb
bound
repz
sbb
or
cwtl
jge
mov
or
sub
mov
jp
addl
mov
mov
lods
jge
cwtl
xchg
jnp
push
mov
stos
push
jp
repz
mov
xchg
add
repz
mov
int
inc
arpl
cmpsb
or
popa
add
jmp
cmpsl
hlt
hlt
mov
adcl
mull
and
test
add
sub
xchg
fsubrl
xchg
mov
in
pop
movl
xchg
pop
fmull
in
xchg
sbbb
seto
xchg
pop
mov
ret
mov
imul
adc
push
sbb
ret
movzwl
in
ret
inc
push
or
sbb
push
ja
mov
fsubl
push
fs
movsb
dec
inc
aas
push
mov
xor
push
add
mov
stos
ret
inc
fistps
pop
and
lret
add
sbb
repz
mov
xor
test
and
repnz
ja
lds
test
or
nopl
pop
cmp
xchg
mov
rcrb
mov
inc
or
shll
lock
pop
cmp
lds
xchg
dec
dec
sub
lea
imul
loope
imul
lea
pop
ret
pop
lahf
add
lea
dec
rcrl
mov
outsl
arpl
dec
push
iret
push
ss
out
test
lds
leave
mov
mov
je
add
jp
add
push
mov
fdivs
sub
mov
push
adc
jns
fs
push
lods
callw
adc
sub
fucomip
or
add
pop
cld
or
xchg
in
pop
and
mov
mov
add
popa
orb
add
add
pop
and
add
and
jo
mov
mov
je
push
push
out
add
fstl
and
mov
xor
gs
test
sbb
lods
sub
leave
sub
push
fcmovnb
loopne
push
rorb
lcall
sub
dec
pop
jne
test
ret
push
adc
jno
mov
inc
and
cmp
faddl
sbb
testb
adc
mov
xchg
inc
add
dec
xor
in
xchg
outsl
notl
notl
nop
fisubrl
mov
mov
mov
push
push
pop
scas
daa
mov
dec
mov
pop
or
jle
and
mov
or
dec
or
pop
fisubs
xor
neg
sbb
and
jg
test
dec
je
push
cltd
adcl
and
xor
addl
iret
push
pusha
ja
cld
stos
sub
add
clc
inc
rclb
or
sbb
inc
les
sahf
test
outsl
cld
fwait
or
cmp
jl
cmp
jg
call
cmp
cmp
or
popa
push
mov
loop
xor
cmp
or
add
dec
jbe
call
inc
xchg
inc
or
fstps
leave
and
cmp
cmp
fimull
and
cmp
add
mov
adc
adc
test
and
enter
mov
cmp
jecxz
sbb
jbe
je
sub
dec
xchg
add
mov
adc
xor
maxps
incb
nop
mov
arpl
mov
call
push
jmp
mov
xor
dec
cs
add
imul
adc
lcall
xchg
dec
jno
popa
push
xor
test
sahf
pop
adcl
sub
popa
test
xor
push
xor
and
push
ret
or
pop
xor
cmpl
call
pop
stos
leave
and
or
cli
shll
fwait
mov
repnz
xchg
mov
mov
dec
outsl
mov
add
cmp
adc
adc
adc
out
inc
jnp
inc
sbb
push
mov
stos
jne
adc
push
shlb
push
add
xchg
es
push
rorb
jnp
xorb
mov
adc
lahf
incl
sub
call
inc
ja
mov
jo
loopne
push
insb
in
fsubrs
fisttps
dec
cmc
dec
adc
push
repnz
mov
inc
adc
sti
mov
js
lcall
xor
xchg
test
mov
inc
inc
push
getsec
xchg
add
jle
andl
add
dec
adc
xchg
or
fsubl
addl
dec
or
mov
adc
mov
adc
dec
mov
in
repz
or
pop
mov
mov
movsl
or
xor
lea
pop
sub
idiv
lods
test
addl
lea
scas
insl
ss
lret
lods
and
jne
testl
inc
cmp
pusha
stc
sahf
orl
leave
fwait
adc
push
jecxz
sbb
add
mov
pop
addr16
mov
sbb
mov
stc
ss
xchg
stos
mov
stos
mov
pop
cltd
mov
or
dec
mov
pop
pop
push
test
xor
inc
add
sub
scas
and
cmp
ss
pop
push
sbb
push
cltd
push
or
push
or
cltd
push
cwtl
fisubs
cmp
mov
mov
ficomps
mov
leave
mov
adc
push
or
cmp
push
push
inc
lret
test
xchg
cmpsl
dec
lahf
fs
and
jno
mov
arpl
sbb
flds
adc
into
pop
and
and
stos
gs
and
push
add
push
mov
inc
inc
pop
push
js
add
cmp
dec
lret
mov
xchg
ret
fidivl
push
dec
pop
aad
in
xor
sub
loopne
or
test
and
sbb
push
dec
and
gs
xor
or
push
mov
sarb
in
cmp
sti
add
stc
and
pop
mov
and
pop
mov
enter
pop
adc
inc
mov
or
sub
add
add
out
sub
mov
mov
mov
jno
bound
loopne
stos
xchg
shrl
repnz
clc
mov
jmp
push
cmp
in
out
pusha
and
cmp
enter
push
mov
push
aas
lods
dec
add
add
sub
out
lds
mov
das
loope
inc
or
fs
test
mov
mov
push
test
jo
pusha
fadds
add
mov
movsb
mov
outsb
mov
fisubs
xchg
mov
sti
je
adc
lcall
push
adc
or
sub
imul
dec
andl
jo
fcoml
popa
mov
je
int3
mov
imul
cmpsb
cmpsb
fs
dec
or
mov
test
repz
fld
cmp
add
mov
test
movsb
ficoms
mov
cmpb
loopne
sbb
xchg
call
imul
adc
push
je
push
imul
jno
sub
mov
push
aam
mov
adc
adc
bound
pop
subl
shrl
lds
fs
cmp
das
enter
sbb
inc
push
mov
cwtl
in
pop
les
ds
pusha
push
shll
pusha
loop
test
push
or
pop
jne
mov
xchg
daa
in
je
lea
or
pop
pop
or
push
test
mov
mov
scas
aam
pop
in
enter
xchg
jmp
data16
sub
lret
clc
push
jne
push
aad
rorl
fldt
je
or
cmp
jae
in
mov
cs
mov
and
and
jg
or
lock
imul
sbb
mov
dec
notb
jb
add
pushf
xor
xchg
add
pop
xor
js
sub
rorb
mov
mov
pop
mov
inc
mov
stos
xchg
pop
mov
adc
call
mov
sarb
les
push
addb
aaa
add
mov
repz
push
mov
and
xor
xchg
ja
imul
sub
pop
test
popf
rorl
mov
stos
and
push
fsubrl
leave
mov
addb
leave
pusha
mov
lods
iret
mov
dec
or
sbb
sbb
popa
jns
fiadds
cmp
mov
fcompl
lcall
fsubrl
nop
test
ljmp
je
cmp
sub
inc
hlt
mov
mov
aad
mov
xchg
push
dec
je
add
push
mov
insb
cmp
test
add
into
mov
or
addb
xor
roll
les
mov
push
imul
sbb
stos
xor
iret
mov
xchg
in
clc
stos
dec
insb
mov
test
or
stos
ljmp
or
scas
shrl
es
jp
mov
pop
mov
jo
shrl
inc
lock
jae
sbb
pop
jmp
out
push
mov
inc
dec
push
xor
out
fdivs
pop
adc
pop
outsl
adc
movhps
fistpl
sbb
test
push
mov
cld
push
mov
and
add
xchg
push
jge
shlb
test
xlat
in
int3
repz
loop
push
lea
push
adc
xor
lock
sbb
insl
xor
fcompl
xor
jb
inc
aam
xor
andl
or
les
dec
add
repnz
out
add
add
clc
pop
xchg
or
xchg
inc
push
nop
sub
fs
adc
sub
ja
push
inc
ror
lock
call
aam
sub
pop
in
je
nop
dec
lock
and
rcrb
mov
jb
enter
adc
out
fs
add
test
in
jno
adc
push
imul
int3
push
xchg
jge
or
pop
stc
cwtl
xor
push
data16
jge
mov
inc
mov
enter
enter
xor
push
xor
cwtl
cmp
pop
sbb
imul
adc
shrb
jb
daa
popa
ret
adc
jge
sub
adc
mov
mov
test
das
pop
mov
test
test
push
in
push
lods
sub
push
cld
mov
imul
jb
inc
inc
movsl
aaa
gs
or
ffree
into
add
mov
movsb
xor
or
aas
mov
in
movsb
rorb
sbbl
sbbl
jns
in
stos
jns
insl
and
adc
mov
cmp
scas
cmp
cmp
popa
out
sub
test
pop
jmp
dec
nop
push
outsl
xlat
loop
xchg
cwtl
or
xor
sub
lds
jno
lock
lds
or
dec
push
pop
aad
add
push
dec
dec
inc
shrb
xor
and
mov
push
gs
adc
addb
dec
dec
gs
lret
dec
sub
nop
or
insb
stos
rorl
add
and
push
shll
dec
nop
mov
enter
in
mov
adc
jne
and
xor
inc
shll
mov
pop
andl
add
add
or
push
pop
inc
xchg
mov
jo
jp
aam
adc
xor
cmpsb
nop
mov
xchg
push
xchg
adcb
push
pop
lods
adc
add
out
scas
test
add
pop
pop
int3
aad
repnz
lcall
inc
mov
and
xchg
push
or
xor
in
out
add
sti
pop
leave
or
testb
je
test
movb
sbb
xchg
test
pop
inc
cwtl
or
es
or
lea
fnstcw
dec
sbb
popl
jbe
mov
mov
adc
je
ret
push
cmc
in
jge
add
jmp
add
insl
shrl
xchg
push
add
adc
push
pushf
push
ror
mov
into
jg
cld
lea
loopne
mov
call
ror
stos
adcl
jbe
xor
inc
jbe
mov
in
mov
aaa
sti
cwtl
cmp
iret
out
mov
lock
mov
xor
rorb
cwtl
shll
inc
mov
and
sub
sub
adc
fistps
xor
push
sub
sub
xor
mov
push
pushf
addr16
out
add
pop
cmp
mov
aam
or
add
lret
or
dec
loopne
sahf
mov
or
je
jno
push
xchg
mov
movsb
inc
in
fsubrl
test
sahf
cmp
xor
mov
shlb
inc
enter
sarl
arpl
jo
sbb
mov
pop
sbb
fs
outsl
xchg
and
sbb
xor
push
jo
daa
push
adc
repnz
in
dec
adc
aam
pop
push
adc
jns
xor
xor
push
or
mov
dec
bnd
mov
mov
xchg
mov
lods
popf
dec
or
lea
and
push
adc
testb
fnsave
push
js
jo
add
test
lock
fmulp
gs
insb
cltd
aam
jg
sbb
push
xchg
movsb
push
jo
push
shld
push
dec
mov
pop
or
adc
jne
mov
adc
xchg
cmpsb
data16
cmc
mov
add
jl
pop
dec
aam
inc
and
adc
lret
adc
enter
inc
mov
xchg
imul
adc
adc
xchg
shll
lcall
paddw
aaa
aaa
mov
xchg
fst
add
pop
dec
inc
push
fs
mov
mov
notb
jmp
inc
sbb
imul
mov
lock
and
hlt
ret
dec
xor
adcb
cmp
imul
cmp
cltd
adc
cmp
adc
add
das
pushf
push
push
cwtl
and
mov
mov
jle
sbb
pusha
sub
mov
inc
lods
or
mov
popa
or
add
cmc
loopne
adc
dec
inc
out
pusha
add
add
test
iret
add
add
xor
push
xlat
mov
ret
int3
outsb
cld
pop
cmp
sarb
sarb
in
nop
add
dec
pushf
push
and
adc
icebp
push
insl
jl
dec
mov
add
mov
jnp
clc
add
push
adcl
fcoms
out
xchg
push
push
imul
jg
push
fidivs
push
ss
bound
je
or
pop
rclb
test
jecxz
fwait
pop
pop
stos
adc
lods
test
inc
and
mov
add
push
xor
rolb
mov
mov
mov
add
lods
inc
sbb
adc
mov
xchg
arpl
xor
enter
push
das
cmp
inc
pop
lock
adc
int3
jp
inc
test
js
fcoml
sbb
mov
jp
cmc
xchg
cmp
push
insl
push
inc
imul
dec
les
lea
jge
outsb
push
mov
subl
shlb
and
cmp
jge
and
cs
push
sbb
sti
testb
or
inc
aas
fistpl
test
sub
leave
and
adc
pushl
lds
xchg
leave
push
mov
idivb
mov
out
and
mov
sbbl
push
dec
cmpsb
dec
inc
jecxz
adc
clc
add
adc
push
push
inc
cmp
mov
jno
or
adc
inc
push
jns
incl
pop
int3
push
or
rclb
daa
and
divb
in
fildll
das
push
xor
in
pop
jmp
mov
push
push
dec
mov
in
jb
sub
sbb
and
xchg
jno
push
rolb
aam
sbb
jp
je
sub
and
xchg
pop
int3
add
inc
repz
mov
jg
inc
xchg
stc
pop
mov
and
xchg
or
or
push
sar
mov
xchg
push
mov
push
lock
add
rorl
mov
xorl
mov
mov
shlb
shlb
and
jne
loop
fistpll
or
sahf
fs
mov
pop
sbb
sub
rcll
add
loopne
rcl
jmp
adc
and
lea
jns
in
sub
imul
add
imul
stos
push
xor
dec
test
mov
cmp
mov
sbb
std
sbb
push
cmpsl
orps
pop
mov
in
xchg
add
add
mov
xchg
xchg
mov
adc
addr16
lea
mov
movsb
inc
and
ret
dec
push
shlb
or
nop
pop
dec
dec
dec
pop
js
xor
or
lods
xchg
adc
xchg
shlb
ds
adc
mov
mov
push
mov
inc
or
push
pop
ret
xor
inc
add
xorl
pusha
cwtl
push
pop
mov
pop
fdivs
add
or
fcmovnb
pop
and
sar
lds
mov
mov
into
rorl
xor
lret
sbb
fwait
inc
pop
aaa
adc
and
es
inc
shrb
loop
imul
or
lds
enter
out
adc
mov
inc
sub
inc
or
adc
mov
insb
jp
fs
and
mov
movsl
movsb
inc
push
test
push
xchg
xchg
mov
pop
pop
or
lea
aad
xor
mov
mov
mov
add
popf
mov
call
cmp
lcall
xchg
bound
out
mov
adc
pushf
dec
lahf
or
mov
bound
dec
repnz
adc
pusha
and
pop
inc
mov
stos
in
push
mov
sbb
leave
loopne
lods
and
out
inc
pop
and
mov
inc
or
and
adc
adc
or
inc
movsl
push
hlt
in
sub
insb
ds
lock
or
int3
lret
lods
cs
cmp
push
insb
mov
cmp
adc
arpl
mov
sti
loope
bound
inc
aad
push
mov
or
data16
pop
incl
push
insb
int3
or
add
in
mov
mov
icebp
adc
mov
inc
icebp
mov
xchg
adc
cmp
or
sbb
les
std
sub
push
jno
or
adc
mov
inc
leave
or
imul
add
or
jl
sub
mov
ja
ret
pop
lret
cmpsl
dec
or
cmpl
pop
mov
clc
mov
cmp
jne
pushf
adc
push
mov
cmpsb
mov
pop
inc
test
mov
das
cmc
pop
in
aas
push
sbb
cmp
jns
loop
pop
mov
std
dec
add
mov
aas
mov
mov
mov
sbb
decl
jmp
cmp
je
mov
jmp
insb
mull
loopne
shlb
push
repnz
flds
mov
hlt
test
fbld
xor
mov
adc
jge
jne
push
jnp
enter
lret
push
aaa
out
or
add
mov
dec
pop
nop
sbb
mov
leave
mov
lea
cmp
add
aas
ret
mov
pusha
lea
cmp
loop
add
sbb
or
enter
and
bswap
jmp
insb
fdivl
push
dec
and
dec
in
pop
push
fwait
gs
xchg
mov
arpl
add
pshufw
call
xlat
lret
xor
or
and
mov
add
jns
es
push
mov
mov
mov
xor
mov
scas
pusha
or
aaa
adc
push
add
or
jae
mov
sbb
jno
or
cmp
sbb
fstpt
jmp
mov
fidivrs
shrl
fimull
sbb
out
push
xchg
push
jp
and
or
das
clc
cmp
adc
mov
pmaddwd
adc
or
push
addr16
fnsave
outsb
add
jo
cld
add
repz
sub
or
xor
scas
andl
sbb
dec
in
lret
andl
pop
cwtl
adc
mov
iret
or
adc
inc
pop
ds
mov
xor
faddl
sub
cmp
sbb
lods
adc
filds
sbb
cmp
dec
dec
out
out
push
or
adc
xchg
and
int3
push
jmp
push
mov
pop
jbe
arpl
fsub
xor
mov
sti
lods
push
cwtl
jecxz
dec
sbbb
pop
pop
xchg
xor
push
mov
sbb
push
pop
jp
cmp
cld
xchg
je
dec
xchg
and
xchg
daa
cld
ss
cmp
leave
je
jecxz
arpl
inc
mov
xor
add
aaa
adc
inc
adc
decb
jne
cmp
inc
mov
mov
test
call
inc
cmp
mov
mov
adc
pusha
push
push
adc
stc
sahf
fcmovnbe
or
stc
inc
negb
rcl
lret
pop
into
pop
mov
xchg
inc
enter
mov
nop
les
or
leave
test
mov
pop
mov
mov
add
cmpsb
dec
dec
mov
adc
mov
les
leave
and
enter
nop
les
xor
push
fsub
sub
data16
add
dec
imul
sub
adc
mov
adc
add
add
pusha
adc
add
mov
jge
xchg
mov
add
xbegin
hlt
cmp
je
pop
lds
fcompl
rcr
loop
add
out
push
and
je
push
jg
shlb
mov
dec
pop
jne
imul
push
inc
out
sub
in
pusha
into
inc
ss
dec
or
add
adc
or
jae
rcl
dec
mov
adc
push
xorl
jae
push
xor
pop
ja
inc
in
ret
stc
push
jecxz
mov
test
popa
xchg
mov
xor
inc
adc
test
and
cmp
jecxz
inc
mov
fst
je
mov
sbb
cld
clc
cld
inc
iret
dec
pop
loope
shll
sub
cli
add
cli
adc
shll
jle
in
fbld
pusha
xchg
lea
or
adc
sub
aas
jbe
add
adc
cmp
sub
lret
jbe
mov
cmpl
ljmp
daa
cmp
mov
sub
jmp
push
lods
insl
pop
xor
in
jmp
mov
sub
sub
mov
mov
inc
xchg
or
jne
pop
bound
shl
cmp
je
shrb
cmp
jno
jae
jnp
pop
push
or
mov
push
inc
pop
xor
jb
jle
add
jb
xchg
lds
in
out
cmp
dec
inc
mov
in
cmp
mov
mov
inc
xchg
out
jae
jo
xor
cvtdq2ps
add
or
in
jnp
mov
xorl
cmp
cmp
test
push
lock
pop
repnz
je
push
sbb
fisttpl
fsubr
repnz
insl
and
ret
xor
and
inc
mov
test
stos
and
dec
movb
pop
aaa
pop
cmp
mov
dec
loopne
sub
mov
roll
mov
xchg
xor
mov
bound
test
add
add
add
test
gs
adc
sub
pop
xlat
pushf
mov
arpl
lret
jl
cmp
pop
and
pop
lods
test
push
lret
inc
lds
cmp
pop
je
mov
xorb
int
pusha
pusha
ret
int
dec
in
add
clc
add
push
push
adc
push
xchg
clc
cmp
jne
cmpw
pop
int
inc
movsb
or
push
nop
mov
cwtl
fidivs
cmp
incb
clc
pop
push
cmp
psllw
in
mov
cmp
and
fimuls
and
xchg
add
andb
cmp
loopne
mov
pop
in
add
cmpl
cmpsb
call
or
push
inc
add
or
aas
mov
adc
and
aam
cmc
mov
push
pushf
add
xor
mov
xor
int3
xor
pop
insb
out
jbe
jno
jo
adc
jge
inc
inc
test
pop
pop
les
fcmovne
inc
or
movsb
lods
or
mov
add
out
inc
in
dec
inc
in
mov
dec
ret
shll
lea
jno
in
inc
add
mov
cmp
xchg
in
test
test
stos
xor
cwtl
adc
pushf
test
xor
rcl
fsubrl
adc
addb
xor
add
icebp
cmp
pop
adc
push
adc
loopne
outsb
push
loopne
sub
ljmp
loopne
sbb
inc
cmpl
rcr
adc
sti
in
sbb
cmp
int3
and
out
mov
xor
movb
dec
mov
test
cmp
pop
pop
mov
cmc
shr
push
push
test
pop
xchg
xor
and
pushf
inc
iret
xchg
data16
adc
movb
sahf
push
xor
xor
lods
test
test
fistpl
adc
inc
sahf
lea
pop
cwtl
add
cmp
popf
imul
jbe
add
mov
xchg
mov
or
ljmp
add
and
mov
cmp
mov
sub
lea
or
aas
sbb
push
jg
mov
fsub
mov
arpl
dec
or
call
push
insl
aam
int3
insb
addb
int
push
pop
sub
filds
enter
aas
pop
inc
jae
xchg
mov
or
push
inc
and
or
push
sbb
enter
mov
mov
mov
insl
inc
mov
enter
cmpl
sbbl
pop
daa
mov
xor
cmp
push
stc
enter
in
jmp
cmp
and
mov
inc
arpl
cmp
int3
mov
dec
lock
icebp
xchg
xor
faddl
adc
or
clc
cli
pop
in
mov
push
movl
inc
test
inc
mov
arpl
lock
mov
xchg
jnp
test
sbb
fs
or
stos
cmpsb
js
and
mov
test
push
xor
sbbb
popa
xor
mov
test
aaa
stos
in
insb
push
inc
shlb
pushf
inc
sbb
cmp
or
and
cmpsb
cmp
lcall
sub
mov
test
pop
ss
shll
cld
sbb
mov
fwait
ret
and
jp
mov
inc
cs
sbb
test
xchg
mov
les
or
and
loopne
fistl
test
pop
lods
test
pop
aas
insl
shlb
add
push
push
xchg
add
cmp
xor
pusha
lods
sub
push
sub
mov
jbe
inc
jp
sbb
adc
pop
mov
jbe
ss
mov
mov
in
add
or
cmp
stos
adc
add
push
pop
mov
fwait
push
mov
mov
aad
insb
mov
stos
incb
bound
leave
adc
unpcklps
nop
add
pop
xor
mov
xchg
and
dec
pushf
adc
dec
dec
mov
data16
aam
sub
pop
lcall
es
sbb
or
shll
gs
add
aad
and
cmpsl
ljmp
adc
jnp
mov
stc
add
mov
idivb
fwait
push
xor
in
cwtl
insl
cmp
sahf
call
push
stos
movsl
inc
cmc
test
insb
cmpsb
mov
xchg
stos
mov
mov
je
wrmsr
sub
ret
push
stos
inc
xor
into
add
lahf
test
push
mov
out
add
test
inc
jnp
dec
jp
sub
add
dec
je
fdivs
mov
adc
pushl
in
mov
mov
adc
fcoml
add
jecxz
in
lcall
xor
es
xor
aam
push
push
add
pop
mov
xor
push
and
rolb
iret
push
adc
fcoms
repz
ljmp
lea
mov
scas
ret
xor
roll
pop
in
enter
sbb
inc
loopne
jno
sbb
lcall
je
in
fs
cmp
subl
test
xor
jmp
dec
scas
cmp
pop
pop
push
pop
push
xor
add
adc
in
pop
inc
mov
pushf
adcb
push
inc
jb
pop
aam
push
adc
push
fsubrs
xor
push
mov
aam
rcr
pop
fsubrs
inc
int3
inc
in
dec
and
mov
sti
push
mov
pop
shll
cmp
scas
enter
pushf
mov
jo
enter
test
xor
mov
sbb
rclb
xor
mov
and
iret
fmuls
leave
xchg
nop
sub
lds
leave
dec
mov
mov
pop
aaa
sbb
mov
push
add
aaa
movsb
mov
add
adc
lea
mov
jle
add
sub
xor
or
mov
adc
in
cmp
pop
mov
pop
mov
aas
or
bound
jg
pop
inc
jb
mov
and
add
jge
rclb
inc
mov
xchg
inc
ds
inc
lods
cmpl
mov
and
sub
push
jbe
andb
or
inc
data16
sbb
aaa
loopne
cmp
adc
xchg
pop
mov
pop
insb
aam
pop
cs
out
in
lods
xchg
pop
add
sbb
mov
inc
xor
pop
jno
mov
and
outsl
inc
sarb
or
xchg
outsb
enter
mov
ja
sbb
sti
dec
mov
inc
inc
in
cmp
je
jle
mov
xor
pop
sub
or
dec
sub
dec
test
shrl
aas
dec
mov
ja
jne
add
adc
jp
out
or
push
and
ret
pop
jmp
push
xchg
pusha
sub
jae
mov
cmp
sbb
imul
test
jg
add
and
js
add
lcall
int3
add
adc
push
sub
dec
mov
ja
test
cmp
dec
or
loope
subb
stc
into
push
repz
adc
push
scas
jb
sub
jge
and
pop
inc
dec
inc
cmp
xor
out
cmpsl
sbb
mov
xchg
jmp
cmp
push
mov
inc
mov
clc
jle
or
xchg
xchg
dec
aad
push
leave
lret
cmpl
xor
cmp
subl
sub
push
sub
xor
adc
pop
cmp
adc
and
dec
shll
mov
mov
inc
out
add
outsb
test
hlt
addb
sbb
test
add
or
rol
cli
add
add
jb
or
lcall
add
mov
jmp
and
cmp
mov
lds
nop
call
aam
sub
inc
lock
test
sbb
or
decb
mov
call
dec
lcall
mov
into
jne
add
movsl
mov
js
outsl
add
xor
pusha
movb
add
jecxz
inc
repz
imul
adc
leave
fmull
push
into
and
push
stos
rcr
cmp
mov
adc
push
fs
or
dec
or
or
pop
push
shlb
pop
rcrb
orb
mov
orb
sub
movsl
dec
stc
cmpl
dec
or
iret
sar
push
adc
mov
inc
or
lods
decl
je
mov
mov
mov
mov
add
xor
mov
lret
inc
shl
shl
shlb
sar
xchg
fxch
cmp
shll
notb
jae
or
outsl
bound
stos
xchg
stos
mov
pop
js
loopne
mov
shl
mov
stos
push
dec
out
dec
push
lea
jnp
add
xlat
sbb
fidivl
or
push
dec
into
mov
push
mov
mov
mov
dec
adc
imul
fmuls
mov
test
add
mov
push
jae
loopne
pop
cld
bound
lods
fldt
add
push
or
clc
mov
cmpl
add
mov
js
adc
enter
jo
or
and
mov
ds
or
test
sbb
mov
dec
mov
xlat
sub
adc
or
mov
hlt
dec
push
bound
pop
sarl
and
sub
call
and
mov
daa
inc
hlt
lock
cmp
inc
inc
xor
xchg
add
aad
test
dec
xadd
add
aad
mov
push
nop
or
xchg
addr16
dec
dec
dec
outsl
jb
leave
fildl
or
nop
sbb
aad
dec
lcall
dec
fs
xor
cmovno
dec
adc
aad
mov
popf
dec
aas
stos
add
inc
imul
add
sbb
aad
in
push
or
xchg
adc
fimuls
loopne
pop
xchg
sub
gs
dec
test
xor
pusha
inc
fidivrl
or
bound
sub
fildl
lcall
loop
mov
adc
dec
xor
je
xlat
or
or
pop
test
dec
dec
pop
loopne
lcall
sbb
sbb
lock
insl
inc
inc
mov
or
aam
ja
icebp
or
adc
sbb
xchg
mov
and
lods
add
scas
stc
mov
pusha
pusha
add
stc
inc
xor
pop
and
add
push
loopne
sarl
movsb
cmp
out
dec
push
or
dec
xor
fldlg2
push
jno
add
fsubr
rorl
sub
mov
leave
lret
shll
or
mov
sbbl
inc
test
jb
and
add
dec
in
inc
popa
mov
call
aad
dec
sbb
lcall
lea
loope
cmp
sbb
sbb
sub
or
push
sbb
fld
aam
out
sbb
clc
mov
pop
je
dec
scas
ffreep
or
int
mov
sbb
fimull
out
push
mov
jae
mov
shl
ror
or
adc
mov
shrb
adc
sbb
jno
int3
and
in
mov
or
scas
enter
xlat
je
enter
sub
jmp
sbb
push
mov
mov
imul
or
addr16
fcmovnu
sbb
lock
in
or
fisttpl
bswap
cmpsl
in
inc
jecxz
mov
dec
xor
pop
clc
sub
jmp
or
jno
mov
jmp
pop
inc
mov
sbb
add
jmp
cmp
mov
mov
cmp
inc
mov
das
adc
nop
ss
mov
jmp
cmpb
sbb
push
cmc
lods
inc
cmc
movsb
cs
es
mov
mov
dec
sbb
or
mov
xchg
jmp
or
icebp
cmpsl
mov
lcall
and
bound
and
lock
pop
xor
lock
or
xchg
cmp
push
dec
stos
add
fs
ret
sub
lock
aam
push
nop
flds
sbb
addr16
or
add
pop
push
cli
push
lods
cmp
clc
lea
jae
je
imul
xor
xchg
adc
shrl
stos
push
in
insl
push
fidivrs
mov
ds
sub
cmpsb
or
or
test
sbb
cmp
int3
cmp
lods
mov
xchg
fwait
popa
test
fcomp
xchg
mov
sbb
or
dec
loop
loop
and
pop
jo
in
popf
push
or
and
xchg
fsubrp
addr16
adc
and
jle
ret
adc
xor
xchg
pop
out
ss
xchg
sti
call
mov
add
adc
pop
subl
pop
clc
xchg
lcall
out
inc
add
dec
push
pop
fsts
mov
push
pop
psubw
mov
sbb
stos
adc
sbbl
mov
rclb
jl
xor
mov
fdivl
xchg
mov
push
icebp
and
cmc
or
addl
dec
cltd
mov
cmpsb
sar
sbb
xlat
mov
pop
push
jmp
push
ror
jnp
or
shl
filds
add
push
data16
arpl
flds
add
push
mov
movsb
popa
js
inc
sbb
mov
mov
mov
filds
mov
ss
add
loopne
leave
pop
push
push
pop
adc
ss
repz
push
and
push
inc
cmpsl
add
pop
adc
out
add
lds
in
add
lret
jmp
rcrl
lcall
xchg
mov
in
movsb
addb
movsb
or
rorb
and
mov
iret
das
out
call
mov
call
lahf
pop
push
dec
shrl
add
sub
mov
and
outsb
sbb
mov
xor
add
adcl
test
pop
adc
in
lcall
loop
les
jae
adc
and
mov
adc
cmp
pop
adc
inc
dec
and
jg
and
rcl
add
add
adc
and
fsub
sub
cmpl
mov
xchg
sub
or
fimull
sbb
jle
dec
and
hlt
add
xchg
mov
testl
inc
push
xor
ja
push
add
ficoml
cs
inc
test
rcll
repz
fildl
add
pushf
push
pop
cmpsl
loopne
mov
push
fwait
shr
shlb
adc
cli
jbe
hlt
add
clc
jne
pop
xor
in
repnz
fbstp
jle
mov
jne
imul
and
pop
mov
mov
adc
sub
jae
adc
enter
xchg
rol
mov
sub
or
fisubl
lret
aas
stos
gs
jae
bound
scas
add
inc
mov
ret
roll
mov
cmp
std
pop
in
inc
push
cmpl
xor
cltd
fidivrl
jo
leave
xchg
pushf
fs
sbb
or
add
lcall
sub
push
test
adc
push
or
shrl
or
data16
loop
test
sub
out
add
or
pop
push
repnz
xor
test
js
inc
sbb
or
sbbl
jmp
mov
insl
sbb
jmp
jg
aam
cld
and
mov
mov
cld
popa
push
push
pop
jnp
js
loopne
cmpl
bound
push
or
mov
aam
dec
add
or
sahf
nop
add
xchg
test
pop
mov
inc
or
adc
hlt
pushf
adc
or
add
xor
xchg
mov
scas
mov
add
sbb
pusha
adc
call
call
and
jns
dec
ja
stos
add
dec
or
sbb
cmpsb
and
pusha
aam
push
idivb
sbb
fmuls
lea
jle
pop
add
pushl
pop
push
imul
jbe
je
xor
imul
xor
push
lods
test
popa
add
xchg
outsb
sbbb
shlb
inc
cs
int3
xor
sub
mov
fnstenv
sbb
inc
sub
push
insl
mov
push
imul
jne
xor
adc
stos
pop
sub
rcll
pop
xchg
or
je
sbb
mov
push
lret
lea
les
add
add
push
xor
popf
adc
adc
xchg
xchg
pop
or
cmc
pop
aaa
cmp
xchg
enter
sbb
adc
repnz
lods
adc
lods
mov
and
gs
lcall
adc
adc
xchg
les
daa
insb
mov
lods
or
cmp
incl
scas
jl
cmp
add
insl
mov
jb
pop
ss
and
add
jb
subl
lcall
mov
ss
shlb
add
mov
xorl
push
lods
lret
or
and
inc
adc
data16
rorl
sbb
loopne
outsl
dec
es
addr16
pop
push
dec
cs
add
and
sbb
orb
or
jbe
add
push
enter
add
push
add
xor
subl
inc
push
mov
sub
sbb
shll
or
mov
pop
cmpsb
shlb
dec
out
call
and
and
mov
push
inc
scas
adc
inc
xor
cwtl
xchg
cmpsb
inc
push
jle
ja
pushaw
bound
mov
xchg
pusha
or
add
dec
clc
je
or
inc
lods
cmp
add
loopne
sahf
filds
or
sbb
popf
nop
mov
inc
cs
mov
and
rolb
or
pop
ficoms
roll
or
mov
jo
jle
inc
mov
cwtl
fnstenv
cmpsb
pop
add
add
xor
and
cmp
and
sbb
adc
cmp
push
mov
je
je
cmpsb
in
xchg
add
aam
inc
call
sub
dec
shlb
jle
or
out
xchg
addl
add
mov
dec
test
inc
rorb
insl
mov
lods
pop
add
data16
je
and
xchg
or
loope
mov
add
inc
cltd
xor
inc
insb
pop
nop
test
add
jp
and
jbe
lock
adc
mov
int3
into
sbb
cld
pop
ret
cmpb
add
aas
mov
pop
and
jne,pt
cmp
push
add
hlt
lock
or
iret
or
and
cmp
pop
push
adc
adc
pop
rorb
or
movsl
jb
dec
sbb
movsb
xchg
push
lcall
jl
daa
pushf
add
mov
sub
push
mov
mov
data16
push
cli
mov
test
adc
fcoms
cld
out
push
popa
das
out
xchg
rclb
dec
add
inc
stos
cmpsb
fsub
push
test
add
mov
int
cmp
sahf
add
sbb
loope
push
mov
fs
inc
lods
std
push
push
or
jle
jne
sti
scas
adc
daa
lcall
fisubrl
push
roll
mov
idiv
push
out
mov
push
and
add
or
inc
stos
in
ret
jo
pop
dec
clc
and
xor
out
pop
sbb
xorb
and
jbe
out
xchg
mov
jl
mov
inc
xor
add
or
or
adc
cwtl
test
in
or
ja
addl
mov
inc
mov
and
out
test
inc
add
xchg
sub
mov
jbe
sbb
shlb
pop
rcr
cmp
hlt
ja
arpl
mov
push
or
roll
roll
push
jmp
dec
das
int
add
aam
cmp
aam
push
inc
inc
lret
cmpsb
addb
xor
sbb
js
push
mov
xchg
inc
mov
pop
pop
mov
movsb
cmp
push
push
dec
mov
or
or
cmpsl
imul
outsl
add
daa
and
andb
adc
dec
outsl
sbb
imul
pop
and
add
or
add
pop
or
or
or
enter
or
dec
push
mov
pop
inc
xor
loope
jo
xchg
xchg
push
add
or
pop
inc
shrl
fildl
fucom
sub
inc
xor
inc
loope
add
push
stos
cwtl
mov
push
mov
divl
push
rol
xor
and
sub
in
jb
dec
xchg
xor
les
in
xor
and
fwait
add
xchg
sbb
add
js
or
test
fnstenv
rolb
dec
jecxz
add
xchg
pop
testb
sbb
jmp
addr16
pop
xor
push
aam
roll
sbb
out
data16
stos
xor
sbb
adc
cmp
out
or
lods
fs
rclb
and
mov
cwtl
cmc
fsubp
jae
dec
aam
lret
pop
cmp
sub
mov
cld
jp
inc
aad
lcall
orl
push
pop
and
cmpsl
hlt
push
adc
sub
test
inc
or
xchg
aam
jp
push
fucom
mov
lods
addb
push
adc
enter
jae
lahf
mov
fprem1
out
call
movsl
test
popf
insl
or
mov
pop
xchg
push
call
adc
shl
cmpb
ss
xchg
pop
cmpsb
addr16
ljmp
lods
push
sub
in
in
mov
sub
add
and
in
add
inc
adc
mov
mov
inc
adc
add
or
jle
sbb
std
inc
or
mov
pop
adc
pop
jmp
leave
iret
xchg
sub
dec
inc
in
jo
dec
incl
sub
pop
mov
mov
lret
fistps
push
mov
fwait
jo
push
or
jp
push
and
xchg
mov
mov
sbb
insb
add
dec
and
push
fs
pop
mov
repz
add
mov
popf
and
cltd
adc
jb
pop
adc
ret
and
xchg
jbe
mov
dec
icebp
mov
leave
daa
mov
xchg
in
cmpsl
dec
dec
repz
or
in
arpl
sub
or
mov
add
inc
mov
add
scas
adc
jb
arpl
int
cs
pop
xchg
loopne
leave
inc
inc
mov
js
lret
dec
pop
mov
or
aad
mov
mov
shrl
mov
add
pop
pop
cli
pop
add
sub
pop
xchg
xor
cmpsb
xchg
or
add
fmuls
lods
inc
call
loopne
les
and
pop
sub
clc
add
ja
sbb
scas
test
fs
andb
add
dec
add
test
pop
dec
push
inc
es
fsubrs
ljmp
mov
push
mov
bound
sub
rorl
in
iret
cmp
sub
xchg
rorb
add
inc
sbb
into
cmp
xor
add
and
mov
rolb
popa
les
push
push
mov
pcmpgtb
add
mov
cs
sbb
loope
inc
sbb
test
jp
and
je
mov
adc
adc
stos
loop
sbb
mov
jmp
add
pushl
adc
jno
es
jb
xchg
xchg
inc
cmp
lock
add
cwtl
jle
stos
and
xor
dec
mov
lods
or
lcall
stos
out
sub
in
lods
push
and
popa
arpl
push
mov
add
je
lods
cmp
lds
je
pop
jns
add
or
sbb
or
push
ror
add
movsl
scas
lea
add
mov
inc
or
push
push
add
clc
jne
addl
in
in
pop
js
pop
clc
pusha
cmp
add
jge
fildl
inc
pushf
pop
sarb
add
add
rcll
mov
repz
into
or
add
xchg
pop
sub
das
add
mov
dec
test
into
mov
es
loop
xchg
sbb
cwtl
in
lods
das
and
mov
xchg
outsl
mov
push
aas
in
lods
sub
mov
push
mov
sbb
pushf
push
in
push
dec
pop
cmp
pop
push
mov
popa
in
dec
adc
sbb
add
push
in
push
fstpl
cwtl
adc
jge
and
sub
or
and
das
xchg
das
pusha
adc
stc
hlt
push
or
jbe
xor
push
add
jmp
sbbl
pop
incb
pop
jne
xor
popa
sbb
cmpsl
shll
enter
adc
or
mov
jecxz
lods
cwtl
or
seta
cmp
inc
je
sub
popa
xchg
adc
fdiv
pop
jnp
test
hlt
ret
jnp
mov
repnz
bnd
xchg
push
or
push
fs
lods
in
xchg
data16
cmp
mov
inc
cld
jp
lods
and
or
sub
jl
inc
jno
or
adc
stc
push
xor
enter
aam
sti
loopne
push
das
sub
xchg
in
mov
adc
ljmp
xor
fstpt
cmp
pop
repz
push
mov
inc
jo
mov
push
pop
sub
sahf
xor
movsl
jo
js
inc
xchg
push
adc
jb
mov
xor
ret
or
add
push
jp
inc
shll
enter
das
mov
cli
push
fs
mov
test
dec
mov
bound
mov
xchg
leave
int3
dec
mov
test
adc
adc
sbb
push
lods
out
xor
sub
jne
mov
cmp
jae
mov
push
mov
ret
aam
les
dec
fwait
adc
add
out
push
or
xchg
xchg
movsb
mov
sub
test
outsl
test
jle
sub
cld
test
and
mov
cmp
cmpb
mov
lea
jmp
pop
add
aas
lods
xor
fs
test
xor
mov
cmpsb
xor
and
subb
dec
push
mov
cmp
enter
adc
sbb
xor
or
adc
mov
jmp
mov
not
cmp
and
test
adc
add
sahf
adc
or
pop
jo
std
xor
rol
mov
addl
rclb
xor
rcr
in
mov
xchg
mov
mov
push
insb
notl
inc
adc
daa
push
inc
jl
test
fisubs
add
push
mov
xchg
mov
cli
mov
mov
aam
outsl
rcrb
mov
pop
or
add
pop
in
sahf
lcall
pop
push
fwait
lea
dec
ja
sub
inc
nop
lds
or
test
sbb
cmp
push
pusha
aam
adc
inc
adc
ret
add
push
push
or
int3
orb
mov
lods
cs
dec
cli
stos
les
jl
xchg
xchg
mov
add
pusha
outsb
bound
add
dec
inc
sbb
cmp
pop
adc
jg
mov
lahf
inc
mov
mov
pusha
and
and
xchg
jge
dec
jno
jmp
push
sbbb
dec
sbb
out
and
jno
mov
push
adcb
cmpsl
clc
or
pop
aaa
add
push
cmp
jbe
pop
mov
add
xor
mov
bndldx
or
add
fs
mov
ret
mov
xchg
xchg
xor
scas
inc
and
test
iret
nop
jl
or
pop
fbld
nop
xor
pop
inc
sub
fmull
jne
jo
adc
mov
xchg
data16
data16
add
enter
test
xor
cmpsb
fwait
cmp
adc
sbb
pusha
inc
pusha
inc
and
adc
movsb
jnp
pop
repz
xor
push
inc
movsb
outsl
push
jl
mov
pusha
jmp
xchg
pop
gs
push
jne
pop
lds
add
dec
mov
push
and
or
pop
xchg
gs
or
or
inc
adc
push
sub
cmp
adc
fs
jo
lret
sub
cltd
idiv
cmp
jmp
ret
mov
ss
mov
bound
filds
sarl
or
ss
popl
loopne
mov
test
add
fisubl
mov
sbb
sub
or
jg
add
pop
mov
jns
pusha
add
lret
pusha
push
or
lret
pop
push
sbbl
sbb
xlat
dec
pop
ret
xchg
and
insl
fsubrs
pop
and
xlat
mov
mov
and
fcoml
mov
cmp
repnz
dec
repz
inc
fldcw
iret
pop
jecxz
ret
sub
pop
mov
mov
or
or
sbb
cmp
lret
add
ss
xchg
addb
and
stos
add
mov
cmc
std
and
push
test
jecxz
cmp
fcoms
daa
ja
ret
outsb
insl
and
pusha
imul
out
and
ss
xchg
xchg
push
sbb
lret
test
inc
add
roll
adc
pop
mov
inc
dec
adc
icebp
push
in
push
add
in
and
xor
inc
inc
sahf
and
push
push
mov
mov
inc
addb
push
test
int
mov
aam
fdivs
enter
leave
daa
mov
jl
xor
daa
add
and
fdivl
add
insl
popa
out
or
jle
or
scas
adc
pusha
leave
iret
mov
xor
xor
stos
sbb
add
adc
mov
sbb
dec
ret
or
pop
sbb
repz
inc
dec
lds
pusha
inc
and
xor
imul
push
cmp
adc
adc
pop
dec
cwtl
pop
and
mov
aas
pop
inc
mov
mov
xor
jnp
fs
mul
push
xor
and
mov
mov
aad
shlb
cmp
jmp
shrb
addb
inc
sbb
adcb
stos
adc
fistpll
lods
mov
push
push
rolb
jle
mov
add
add
pop
cwtl
push
push
xor
mov
xor
idivl
xor
pop
shll
ret
loop
push
inc
lfs
bound
add
cmp
sbb
xchg
sub
cmp
adc
xor
pop
rol
testb
cld
inc
aam
adc
inc
sti
pushl
inc
jmp
cmpl
jbe
lea
lea
movsl
add
mov
inc
adc
or
push
gs
mov
es
fildl
repz
lock
inc
cmp
pop
jbe
push
rolb
es
jne
dec
aam
cmp
fs
pop
cwtl
adc
xlat
pop
pop
pop
push
out
es
adc
movsb
in
sub
jge
cmp
or
mov
push
cmp
xchg
sub
jle
or
fdivrs
pop
and
push
xchg
xor
sbb
adc
sahf
dec
adc
mov
lock
dec
jmp
sub
or
jo
jns
fsubrs
xchg
xor
xor
pop
xchg
add
pop
ss
int
mov
push
xchg
movsb
sub
and
sbb
mov
push
and
fs
stos
push
or
dec
cmp
mov
mov
addl
adc
adc
sub
mov
lods
rcl
and
loopne
mov
cmpsb
enter
fmuls
cmp
push
clc
ds
mov
loope,pt
sub
push
push
insb
call
add
lods
test
out
out
out
pop
mov
jmp
mov
add
add
pop
adc
push
or
cmp
mov
sub
loop
pop
push
pop
mov
fisubl
daa
and
lock
imul
ret
jmp
adc
jp
loopne
test
xor
rorl
jbe
push
dec
add
add
adc
xchg
inc
xor
pop
mov
lods
and
fistl
jl
adc
popf
push
or
daa
icebp
mov
push
cmpsl
pop
lahf
dec
add
ja
pusha
push
push
leave
test
and
add
scas
xor
ffree
sub
pushf
icebp
xor
bound
mov
mov
adc
mov
inc
inc
aad
cmp
int
jmp
add
pop
cmp
es
pop
les
mov
mov
cmpw
dec
xchg
inc
adc
pop
push
or
push
mov
into
into
push
fcoms
push
jns
rclb
add
in
stos
jmp
std
jb
je
xchg
in
in
mov
mov
push
adc
add
rolb
or
inc
mov
xor
or
cmp
fists
test
lds
loopne
ret
sub
sub
shl
sub
dec
add
sbb
adc
sahf
or
pushf
xchg
loopne
movsb
sbb
xchg
movsb
lret
fldcw
lods
lods
xchg
es
xchg
push
cmp
dec
mov
fwait
movsl
cmc
cmpb
mov
add
insb
adc
addl
add
mov
je
ljmp
pop
or
mov
adc
xor
cmp
std
xchg
jg
je
push
orb
pop
push
addr16
or
loopne
subb
fsubrl
inc
sbb
or
pop
or
mov
sub
imul
add
mov
jmp
pop
inc
scas
addr16
inc
inc
push
cwtl
lds
sti
stos
mov
mov
loopne
or
push
insl
insb
ret
movsb
mov
pusha
add
fstpt
test
xchg
pusha
or
xor
jnp
jne
xchg
in
xor
dec
add
and
add
xchg
mov
mov
movsb
adc
repnz
xchg
xor
and
push
unpckhps
repz
adc
sub
scas
inc
add
adc
in
into
mov
icebp
mov
adc
orps
adc
pop
ret
or
js
stos
loopne
aam
lea
dec
cmp
daa
sub
push
mov
pop
mov
jno
add
xchg
push
sbb
and
es
inc
adc
dec
jae
fmuls
mov
xorl
fwait
or
movsl
mov
jne
mov
addr16
inc
jle
mov
insb
fstpl
loopne
xchg
daa
inc
mov
pop
shlb
pop
push
rolb
inc
and
loop
xchg
or
addr16
jb
movsl
push
push
push
adc
enter
fs
mov
sbb
cmc
rclb
xchg
and
lea
shll
jbe
out
and
call
test
fcmovb
mulb
out
lahf
and
push
xor
popf
stos
into
mov
add
enter
push
mov
mov
fs
push
jbe
xchg
sub
mov
xchg
scas
mov
nop
cwtl
mov
orb
adc
pop
rcll
lcall
mov
pop
or
mov
push
stos
test
enter
adc
mov
aam
test
gs
enter
lock
mov
sbb
lds
cmp
hlt
push
or
frstor
shlb
popa
cs
bound
mov
leave
mulb
cmc
or
lea
xchg
add
es
sub
mov
mov
lods
add
inc
xchg
pop
push
and
lahf
pop
pop
or
xor
push
pop
test
ret
shlb
inc
adc
popa
mov
add
xor
ror
or
add
mov
sbb
inc
scas
xchg
call
arpl
add
mov
jmp
gs
or
mov
subb
test
insl
and
and
iret
sbb
call
or
or
lcall
sbb
enter
imul
je
flds
hlt
mov
add
push
mov
push
shrb
fcomps
sti
testb
xor
inc
rcrb
ret
dec
leave
sbbb
or
cmp
test
insl
or
test
movsl
add
pop
enter
sbb
subl
adcl
jb
mov
in
jb
int
sarb
sarb
enter
inc
test
in
add
in
push
xorb
jo
jl
rcl
sub
inc
mov
loopne
out
mov
lds
push
fwait
mov
adc
mov
sbb
and
inc
sub
js
sbb
pushf
in
xchg
add
push
sub
or
push
fsubl
int
ds
sub
add
insb
test
loopne
inc
in
icebp
cmp
mov
push
push
xchg
mov
andl
jg
lods
mov
mov
loopne
push
fs
or
mov
add
push
or
insb
cmp
lock
pop
jp
jp
inc
sbb
in
push
fcmovnu
or
jge,pn
je
push
sub
push
pop
and
pop
jge
stos
popf
subl
cmp
packuswb
outsb
movsb
stos
sbb
push
or
cmpsb
mov
xor
xchg
mov
cmp
icebp
es
push
xchg
shlb
ret
or
out
jno
jmp
stos
xor
je
mov
scas
jmp
das
mov
add
imul
aad
add
cli
or
stos
pusha
movsb
enter
inc
and
jmp
sub
lret
mov
push
pop
and
ret
inc
addl
mov
xor
jbe
push
add
bound
mov
xchg
fwait
push
lahf
xor
mov
lods
add
push
mov
mov
fnstsw
pop
fcmovbe
push
mov
aas
fiaddl
popa
stos
imul
adc
insl
sbb
add
stos
cli
test
adcl
sbb
rorb
dec
dec
and
cmc
rol
ja
adc
in
rcrb
mov
scas
mov
or
add
mov
lods
and
adc
test
popf
dec
outsb
inc
or
mov
inc
adc
adc
push
jbe
inc
out
ljmp
shll
orl
into
clc
addb
sub
ffreep
and
inc
lods
in
test
xor
or
lcall
test
je
and
adc
xchg
fbld
dec
shlb
or
and
dec
jecxz
loopne
mov
scas
cli
ret
rcrl
int3
cltd
scas
pop
or
cmp
adc
aam
sarb
pusha
lcall
cltd
aam
pushf
call
fadds
insb
push
xor
stos
and
orl
rcrb
xor
gs
clc
mov
xchg
cltd
and
mov
or
dec
xchg
and
mov
addb
mov
out
fcompl
push
push
or
mov
mov
xor
dec
push
fnop
inc
fmul
pop
in
ret
add
adc
fs
mov
add
je
inc
nop
test
sub
xchg
jb
mov
cmp
add
popf
addl
mov
push
sub
mov
js
add
xchg
sub
inc
and
mov
pushf
cwtl
nop
dec
or
dec
inc
into
add
dec
or
cmp
ret
mov
sbb
dec
cwtl
cmpsb
insb
daa
jg
push
inc
lods
gs
je
call
add
test
xor
mov
test
pop
add
dec
shlb
adc
orl
aam
pop
loopne
in
jge
sahf
add
adc
popl
out
rorb
sub
dec
rcl
mov
add
sub
sub
xchg
adc
add
mov
push
mov
xor
xor
mov
or
and
icebp
sahf
pop
push
mov
hlt
stos
xchg
cmp
int3
mov
loopne
jns
pop
push
iret
in
push
jge
std
rorb
inc
sub
adc
idivl
test
xor
pop
dec
and
mov
out
shrb
aaa
in
inc
mov
fisttpl
dec
nopl
adc
sbb
lcall
add
add
add
imul
sub
movd
dec
and
in
adc
add
aad
fwait
addb
out
dec
xchg
push
cmp
or
mov
or
daa
and
sbb
ret
or
add
and
add
xorl
movsb
cmp
cmp
xchg
cmp
pushf
fcmovne
push
xor
subl
fimull
xchg
inc
add
inc
cmp
mov
sbb
icebp
adc
dec
adc
lods
mov
push
adcl
inc
pop
sbb
pop
adc
add
or
xchg
imul
add
and
bound
test
outsb
mov
repnz
or
test
scas
push
and
sbb
inc
or
dec
jmp
mov
sahf
or
aaa
pop
dec
pop
pop
push
add
adc
or
push
mov
in
mov
pop
sbb
adc
add
push
movsb
jae
mov
test
mov
es
addr16
mov
sbb
movsb
sbb
pop
and
test
xchg
mov
lods
lods
xorb
insb
hlt
js
js
jmp
pop
xchg
sbb
sub
mov
or
mov
pop
and
mov
inc
rcrl
mov
and
jne
inc
insl
mov
loop
pusha
jo
inc
push
jb
push
andl
adc
dec
repz
push
mov
add
lods
hlt
xchg
data16
incl
add
call
xor
cld
adc
dec
and
rol
lock
sub
test
push
jle
rclb
xchg
inc
mov
mov
add
mov
inc
xor
addb
into
shll
fldcw
nop
fwait
ret
add
sub
or
pop
shll
jle
in
daa
and
iret
mov
sarl
repz
xor
or
fs
sub
jmp
sbb
add
outsb
mov
pop
and
fnstenv
push
enter
push
test
sbb
mov
mov
fidivrs
popa
mov
mov
mov
xchg
or
sbb
adc
ljmp
gs
xor
stc
cwtl
mov
jo
mov
adc
push
sahf
movsb
mov
adc
stc
stc
and
gs
arpl
xorl
jo
and
xchg
pop
addr16
and
mov
mov
mov
inc
sub
and
and
xchg
push
movsb
fstps
mov
mov
pop
mov
addr16
pop
jo
ljmp
xchg
mov
push
jo
rclb
out
push
push
adc
dec
adc
mov
lods
and
and
mov
enter
rcrb
or
or
vpshlq
add
shll
cs
lret
fimull
mov
into
enter
pusha
adc
pop
cmp
ret
movsb
and
xchg
xchg
sbb
add
sub
pop
add
testb
daa
cwtl
orb
loopne
push
xor
inc
add
test
js
sub
xor
mov
loopne
loopne
add
and
or
clc
add
adc
mov
push
test
shlb
adc
jnp
pusha
or
jge
int3
testb
cs
loopne
dec
add
js
cmp
sbb
mov
dec
push
in
arpl
flds
pusha
cmp
push
jne
adc
aaa
fadd
rclb
push
or
lods
or
or
inc
mov
xor
das
xchg
or
mov
jo
cmp
leave
and
xor
sub
pop
mov
test
xchg
mov
cmpb
adc
inc
aad
xor
scas
push
mov
and
sub
sbb
push
jne
push
xor
pop
andl
std
add
lock
mov
test
adc
add
cmp
dec
mov
mov
xor
pop
enter
ljmp
mov
cmp
les
push
aam
sub
dec
outsl
push
cmc
jae
ljmp
lcall
push
lcall
lods
sub
leave
inc
rcr
lea
insb
mov
push
into
cs
fcmovbe
push
in
sbb
mov
or
push
ret
push
xchg
scas
sarl
nop
add
push
jb
xchg
push
add
pop
mov
and
xchg
or
in
sbbb
cmpl
loop
dec
and
mov
out
addl
adc
leave
add
jnp
fsubs
push
jne
cmp
mov
inc
add
bound
lret
fwait
clc
pop
jae
test
subb
adc
adc
push
and
adc
mov
imull
inc
je
daa
aam
cmp
lahf
fldenv
in
lret
in
mov
ret
xchg
je
jnp
xor
int
and
js
fdivrl
scas
pop
push
iret
movl
fsubrl
inc
add
test
mov
and
mov
fwait
lods
and
jne
loopne
adc
movsb
mov
add
sahf
js
sbb
jp
cmp
addr16
cmp
ja
call
sub
lods
jmp
xchg
insl
xchg
dec
in
sub
stos
ljmp
add
loopne
and
fdivl
movsb
cwtl
fwait
enter
mov
movsl
ds
pop
mov
test
test
xchg
cmp
leave
sub
mov
push
ret
cmp
mov
pop
movsb
inc
add
and
or
dec
ds
enter
enter
test
and
or
xchg
sub
test
push
das
mov
movsb
mov
add
inc
repz
aam
mov
std
cmp
inc
ret
xor
enter
push
push
sbb
xchg
les
cmpb
push
divl
xor
and
jge
mov
lcall
jb
or
dec
mov
pop
xchg
or
lret
push
fxch
mov
inc
mov
xor
cmp
sbb
roll
aam
add
mov
sub
fmuls
sub
pop
adc
cltd
add
cld
outsl
pop
push
and
push
shll
in
stos
add
jge
cld
stos
xor
inc
push
nop
repz
in
pop
xchg
push
inc
testl
test
cmp
mov
inc
lock
enter
nop
jne
lock
stos
adc
push
sbb
or
and
mov
or
or
dec
mov
std
dec
lret
pop
xor
and
ss
jns
pushf
mov
adc
cmpl
mov
xchg
add
push
je
stos
bound
int
inc
cmpsb
jp
xchg
insb
mov
inc
adc
dec
cmp
je
xorb
mov
inc
xor
jg
ret
push
jle
add
in
sahf
sub
sbb
push
sbb
lret
aaa
cmp
mov
sbb
jne
sub
in
cmp
fsubr
sbb
dec
sbb
dec
adc
mov
shll
mov
incl
pop
sub
adc
xor
push
mov
cmp
xorb
or
sub
jmp
lea
fwait
scas
das
or
pop
add
shr
sbb
subl
xor
xor
icebp
addb
jo
push
adc
add
shl
mov
gs
mov
xchg
dec
add
or
xchg
gs
xchg
adc
sbb
and
ds
and
imul
sbb
fucomip
fucomip
fucomip
and
mov
cld
mov
inc
aad
push
stos
and
adcb
push
push
inc
insl
mov
mov
xchg
lret
dec
fcoms
in
add
xchg
pushf
ret
mov
and
lock
fcoml
push
add
addl
or
xchg
cld
clc
clc
dec
hlt
arpl
mov
push
push
pop
jae
xor
inc
ljmp
jbe
push
xorl
cmc
pusha
dec
pop
jg
add
fiaddl
dec
push
mov
and
mov
inc
pop
xchg
or
enter
shll
dec
add
shll
mov
mov
rorb
push
roll
cmovno
push
rcrl
lds
pop
sbb
add
mov
inc
and
jnp
or
push
call
popa
call
add
jne
bound
jnp
or
pop
mov
jb
xchg
mov
aaa
dec
dec
jae
jnp
mov
shll
sub
cmp
xor
dec
sub
dec
and
cli
jmp
sub
sar
cmp
cs
mov
orl
add
adc
push
cs
add
inc
or
fcomip
jl
add
std
add
push
or
xchg
pop
mov
incb
imul
mov
sub
sub
hlt
xchg
imul
jae
mov
dec
or
jae
add
and
negb
lock
or
sub
push
lds
push
ljmp
inc
rorb
jb
in
and
inc
or
call
fucomip
inc
jns
add
xchg
dec
push
cmp
dec
inc
xor
jl
inc
xor
xchg
xor
xchg
push
and
lea
pop
inc
inc
sbb
or
dec
popf
cmp
adc
or
xchg
aas
pop
jbe
arpl
xchg
sub
test
daa
and
xchg
daa
add
dec
test
call
fldenv
xlat
sub
lock
add
and
dec
cmc
je
mov
jmp
cwtl
mov
pop
cmp
or
xor
fnstenv
and
fbld
leave
xchg
gs
push
and
and
enter
lock
and
and
dec
or
and
mov
sbb
and
and
sbb
mov
push
and
lret
cmp
enter
and
and
push
and
mov
enter
add
and
jb
nop
es
push
dec
xchg
or
leave
xchg
jae
inc
push
add
leave
push
mov
jb
add
and
pop
dec
mov
mov
ret
sti
push
jno
and
imul
push
sub
mov
popa
ds
je
test
mov
push
jmp
sbb
leave
mov
or
test
add
rcr
popa
adc
bound
cmpl
mov
stos
dec
add
lret
mov
add
or
adc
mov
lret
mov
and
sub
in
push
pusha
mov
int
orl
xlat
inc
xchg
orb
in
jge
or
or
movsl
je
ror
shlb
loop
push
inc
push
arpl
jo
add
dec
jne
loopne
push
out
lcall
sbb
xchg
push
sub
dec
push
fistpl
mov
fidivrs
movb
sbb
inc
mov
jl
and
cmp
push
sbb
mov
add
and
arpl
add
inc
outsl
xlat
add
test
mov
mov
fildll
sbb
fsubp
add
fimuls
setb
test
aad
cmpsb
pop
mov
push
in
push
pop
add
je
aam
xchg
adc
iret
cld
scas
cmpsl
jns
in
ja
cmp
jae
push
sbb
mov
add
or
xchg
fucomip
jne
add
jno
nop
xchg
add
fucomip
dec
and
call
lahf
call
cmp
add
inc
cmpsl
dec
pop
sbb
fucomip
nop
mov
mov
filds
push
and
or
stos
add
mov
add
cmp
lock
jb
enter
lock
lock
cmp
pop
enter
adc
sbb
push
lock
out
push
add
es
movsl
lock
icebp
push
sub
push
xor
dec
cmp
mov
inc
loop
push
add
push
adc
xor
popa
hlt
movsl
pushf
adc
addb
inc
push
dec
push
dec
fdivr
enter
clc
push
and
mov
push
push
push
nop
inc
push
push
xchg
push
push
and
push
xor
dec
push
or
aas
orl
shlb
scas
sbb
dec
fmuls
sbbb
mov
and
notl
push
pop
adc
push
leave
push
xchg
xchg
inc
push
jbe
adcb
adc
pop
mov
mov
lds
mov
add
cs
dec
cltd
inc
pop
enter
clc
inc
in
adc
std
push
adc
filds
ss
push
push
cmp
fstl
addr16
test
cmp
in
cld
clc
inc
adc
push
loopne
xchg
mov
and
add
call
or
movb
loopne
adc
or
sub
test
adc
pop
adc
mov
or
pop
pop
push
mov
and
dec
mov
call
push
stc
push
and
or
outsl
adc
push
push
lea
pop
cmp
add
test
es
sarb
ljmp
lret
or
sub
adc
fcoms
jo
mov
mov
push
loope
out
adc
loop
hlt
gs
push
pop
mov
adc
subl
sbbb
mov
stc
nop
iret
xchg
inc
fucomip
fucomip
add
insl
or
sbb
adc
push
mov
dec
add
pop
enter
xor
stc
inc
mov
inc
inc
push
test
mov
inc
or
fs
add
inc
sub
dec
rcll
lods
xchg
dec
rcr
pushf
pop
enter
and
dec
leave
xchg
mov
add
fists
or
and
and
and
push
fs
pop
dec
push
and
sub
inc
and
ss
dec
orl
or
clc
add
add
clc
mov
adc
leave
and
inc
fucomip
or
call
jno
lock
adc
mov
in
jb
cs
xor
or
sub
inc
inc
rol
popa
mov
add
shl
adc
js
xchg
pop
mov
inc
aad
and
sbbl
mov
add
cli
lcall
bound
add
xor
test
mov
xor
mov
lds
or
and
sbb
mov
jo
sub
dec
popa
lcall
ds
pop
mov
push
negl
cmp
cmp
push
jo
les
das
icebp
daa
push
xor
push
inc
add
jecxz
xor
inc
sub
adc
inc
jae
orb
mov
sub
lods
push
pop
push
in
adc
xor
xor
sbb
xor
sbb
mov
fld
xor
adc
fnstcw
add
sub
decb
push
mov
adc
pop
and
in
je
stos
icebp
scas
and
pop
aam
pop
in
pop
fistpl
jo
add
mov
jbe
pop
imul
lds
sub
push
jne
sbb
hlt
bound
push
jle
lret
nop
pop
add
push
faddl
push
jno
xor
xchg
sub
out
adc
or
pop
push
add
push
cmpb
stos
cli
sub
sbb
inc
lock
or
add
xchg
push
je
data16
sub
mov
mov
adc
fstl
add
lods
movsb
test
and
dec
pop
cmp
mov
jno
inc
cmp
and
mov
xchg
jle
pop
mov
and
outsb
push
inc
dec
fstl
adc
and
arpl
dec
lcall
ret
mov
movsb
pop
add
mov
insb
popf
hlt
pop
enter
fsubs
scas
add
shlb
and
add
or
leave
pushf
mov
js
dec
xor
aam
movsb
push
mov
pop
sub
leave
xchg
mov
mov
in
xchg
pop
repnz
in
push
movsb
xchg
in
mov
test
fldt
pop
jg
pop
cmpsl
cs
xor
fidivrl
mov
adc
mov
and
jecxz
roll
xchg
or
push
mov
cmp
cmc
pop
shll
es
pop
sbb
cwtl
das
or
jb
and
xor
aaa
scas
add
mov
add
int
and
frstor
inc
adc
movb
pop
inc
jo
sub
push
leave
mov
lret
push
rorb
push
mov
inc
xor
fiadds
loopne
out
cmp
inc
or
gs
scas
pusha
sub
inc
nop
cmpsb
adc
js
mov
test
out
in
in
xor
lods
pop
scas
sub
test
and
fnstenv
gs
in
and
push
cmp
inc
add
cmp
call
sbb
fdivrs
pop
cs
push
xchg
adc
pusha
addb
xor
aam
add
jbe
xor
inc
push
fists
int
push
das
in
jbe
xchg
mov
and
inc
mov
mov
mov
and
cmp
aad
pop
inc
push
mov
push
and
mov
and
add
data16
push
mov
cmp
mov
roll
and
push
popf
int3
sbb
mov
push
sbb
sub
cmpsb
pop
and
cs
or
imul
adc
stos
xchg
adc
sbb
or
dec
mov
in
and
aam
stos
mov
push
pusha
inc
dec
cmp
nop
jl
test
lods
nop
xchg
push
push
push
pushf
or
ljmp
pop
cmc
test
push
mov
daa
cltd
popf
addr16
ss
shlb
lcall
push
and
push
cli
scas
movsb
rorl
push
lods
and
inc
aaa
dec
roll
aad
testl
rorl
push
add
cwtl
insl
adc
jmp
adcl
or
imulb
shlb
and
xchg
push
std
push
aaa
mov
jo
pop
pop
pop
das
push
cmp
or
ror
or
or
mov
pusha
jo
rorb
add
push
sbb
pop
and
loopne
loopne
or
fwait
add
add
imul
fs
or
or
add
cmp
loopne
cmp
shl
add
nop
cmp
loopne
add
push
enter
push
push
mov
fistpll
inc
loope
pop
rclb
stos
push
adc
xchg
shlb
mov
jl
pop
loopne
add
loopne
sbb
xchg
add
mov
jns,pn
inc
add
outsb
in
mov
add
scas
or
in
pop
or
pop
and
and
or
in
and
shll
in
jb
pop
addr16
sub
add
insl
pop
insb
rorl
shrl
jb
das
in
insb
adc
and
pop
gs
adc
and
subl
add
insl
xchg
fwait
pop
add
mov
add
inc
pop
loopne
loopne
loopne
lea
loopne
test
loopne
adc
sarb
add
or
adc
test
insb
adc
dec
or
and
nop
xchg
or
or
fs
or
cltd
and
or
pop
enter
sbb
xchg
jl
loopne
loopne
jno
push
adc
nop
subb
adc
push
adc
leave
or
mov
inc
lcall
movsb
cmp
ficoml
das
nop
add
add
adc
jge
or
add
dec
or
nop
inc
leave
insb
shrl
insl
pop
es
push
and
inc
or
or
cmp
test
jb
inc
push
cmp
and
xchg
xorb
lds
pusha
lock
pop
inc
and
imulb
sbb
adc
adc
test
xor
inc
add
xor
add
pop
pop
pop
or
test
or
jecxz
dec
dec
adc
mov
pusha
inc
mov
mov
fadds
inc
into
xchg
adc
pop
je
add
lahf
repz
adc
shrb
mulb
cmp
xlat
adc
xchg
or
sub
adc
xor
dec
mov
push
jb
push
mov
cmp
ds
aam
mov
je
lret
insb
arpl
inc
adc
aam
in
sub
add
in
and
rclb
les
add
pop
stc
xor
dec
jno
pusha
add
pop
test
adc
inc
xor
insl
mov
outsl
aam
and
adc
add
adc
dec
add
add
les
or
push
and
jbe
aas
bound
inc
inc
adc
push
add
xchg
xor
movsl
stos
jbe
jae
das
mov
cs
ret
push
push
mov
sub
inc
enter
push
inc
mov
outsb
mull
jmp
or
sub
adc
push
push
push
cltd
ret
and
sub
mov
adc
and
out
push
add
mov
push
sbb
hlt
adc
call
sbb
mov
sbb
and
jns
adc
push
xchg
add
sbb
cwtl
push
adc
or
adc
test
xlat
insl
ss
cmpsl
sub
cmp
sbb
shll
jbe
shll
aaa
cmp
push
daa
sahf
jae
ljmp
int3
and
mov
movsb
jnp
sub
pop
out
sbb
add
push
jle
add
pop
mov
pop
mov
repnz
and
push
cmp
in
mov
aam
mov
faddl
lret
xor
sub
shlb
or
leave
add
andb
pusha
push
std
test
and
fidivl
shll
push
data16
adc
jp
enter
mov
inc
adc
stos
xor
jp
insb
rorb
aam
sarb
inc
adc
lret
pop
add
jg
cmpsb
popl
into
add
shl
test
mov
jge
sbb
xchg
inc
test
arpl
push
inc
pushf
cmp
leave
jo
mov
jnp
push
ljmp
xor
movsb
or
cmp
orb
cmp
inc
or
inc
pop
outsb
inc
int
stos
push
insl
or
mov
cmp
loope
clc
sub
xchg
jl
sbb
orl
add
repnz
rolb
or
sbb
push
sub
jge
xchg
adc
push
mov
lock
jp
mov
sbb
movsb
xchg
mov
mov
xchg
mov
fsubrs
push
fneni(8087
or
sub
lret
enter
sbb
mov
stos
and
mov
jp
inc
addb
rorb
xor
mov
call
ret
test
cmpsb
inc
rol
pop
push
orb
and
or
iret
mov
in
cmp
inc
adc
test
mov
add
in
rcl
addr16
push
xlat
faddl
cwtl
xchg
cs
dec
enter
pusha
insb
pop
or
add
fcomps
xchg
jo
mov
loope
or
daa
xchg
add
insb
mov
xchg
out
xor
adc
mulps
xor
rolb
xor
xchg
sbb
adc
icebp
inc
nop
or
movsb
and
mov
jmp
push
jbe
cmp
mov
add
and
movswl
enter
aas
sbb
pusha
ret
dec
inc
dec
test
aam
mov
inc
push
movsb
dec
movsb
les
or
inc
shrl
ds
dec
cmp
es
test
movsb
or
and
or
pushf
mov
xor
add
out
mov
push
dec
scas
dec
adc
mov
andl
sbb
xor
xor
xor
movsb
mov
mov
or
cld
ja
gs
in
mov
loop
lret
jbe
movsb
fldl
sbb
add
sahf
popf
sub
pop
insl
jecxz
mov
arpl
sub
ljmp
pop
or
daa
ror
jge
or
idivl
sbb
stos
bound
daa
adc
xor
sahf
sub
addb
push
mov
cltd
sub
cmp
xchg
add
jno
into
test
or
xchg
push
jmp
loop
mov
push
cmp
ss
mov
or
inc
std
adcl
cmc
adc
jae
adc
lds
xchg
cltd
xlat
lcall
jns
cwtl
les
lea
pop
ds
inc
mov
shlb
mov
add
incl
loop
xchg
push
lock
xor
inc
scas
mov
js
push
jne
fists
jecxz
or
dec
pop
loope
mov
arpl
xor
mov
sti
add
shrb
push
mov
sbb
mov
andl
mov
mov
or
push
xor
adc
sub
jnp
sar
cmpb
adc
cmp
insl
pop
adc
add
mov
cwtl
lcall
mov
pop
adc
xchg
leave
mov
jmp
shrb
in
mov
mov
cmp
push
fdivs
mov
and
push
jns
and
cmp
cmp
loopne
xor
xchg
sub
push
xor
xor
rorb
xor
rorb
or
and
push
add
push
pop
inc
test
lock
adc
adc
and
scas
add
adc
in
sbb
add
push
fstpl
add
insl
jg
jmp
int
jl
jl
xchg
jg
and
fs
inc
push
sub
mov
sahf
and
inc
mov
lds
mov
mov
push
mov
sti
adc
shll
xchg
mov
addb
sub
dec
jne
xor
bound
fidivl
divl
mov
pop
push
cmp
add
popl
and
sbb
dec
mov
xor
outsl
movsb
mov
jl
sbbb
movsl
push
cltd
dec
test
ret
movsb
stc
dec
adc
jnp
je
sub
xchg
imul
add
test
adc
push
call
adc
push
into
xor
jp
dec
sub
add
roll
and
cmp
in
test
and
aad
in
push
sar
xorl
pop
pusha
aad
in
mov
mov
dec
sub
push
sub
push
fldl
dec
sub
cmp
fs
and
cltd
xchg
add
sub
sub
repnz
sub
xchg
sub
in
pushf
sub
sbb
push
mov
cmp
test
sub
sbb
mov
dec
push
push
leave
push
mov
test
stos
sub
add
sub
mov
lock
xchg
das
inc
sahf
add
loopne
mov
mov
mov
adc
and
mov
mov
adc
fs
inc
sub
pop
mov
push
aam
sbbl
enter
mov
mov
mov
mov
in
sub
and
sub
and
push
and
and
and
add
stos
push
loopne
lcall
iret
xchg
or
loopne
push
jb
and
adc
and
sub
or
inc
sub
push
sub
xchg
add
cmp
pop
dec
jae
ss
ss
and
inc
jb
loopne
leave
and
les
push
adc
add
cmpsb
mov
push
and
xor
mov
addb
or
loope
js
lds
mov
push
mov
pop
jo
inc
movsb
aam
add
inc
addl
cmpsb
sarb
push
sub
xchg
add
stc
stos
xchg
ja
rorb
xor
xor
out
andb
paddusw
xchg
jo
call
inc
dec
call
xor
add
mov
testb
adc
push
mov
inc
inc
lock
fs
and
sbb
mov
inc
das
and
rorb
clc
scas
sti
add
cmc
mov
loopne
loopne
or
gs
shl
lds
out
adc
adc
add
iret
ja
cmp
sbb
rol
dec
imul
ljmp
sbb
jmp
mov
add
push
add
sbb
push
sbb
inc
ret
add
mov
xor
sbbb
outsb
push
mov
sbb
ja
in
cmp
mov
neg
jle
loopne
add
test
pusha
push
sub
jmp
or
mov
add
add
mov
enter
adc
loopne
push
icebp
pop
jecxz
or
loopne
add
mov
frstor
popf
stos
fwait
add
mov
inc
mov
sub
push
mov
rcrb
icebp
adc
or
scas
pop
lea
sarb
adcl
mov
fcmovb
sub
mov
jge
stc
mov
push
stos
sbb
cmp
cmp
divl
sar
inc
rcrl
fwait
pop
push
rolb
sub
mov
xor
xchg
adc
dec
push
lcall
stos
je
test
xor
lret
jbe
add
cmpsb
dec
lret
addl
dec
call
mov
push
push
imul
xor
push
adc
mov
push
adc
cwtl
or
inc
adc
inc
andb
mov
iret
int3
mov
xor
sbb
fwait
aam
mov
push
in
and
fisttpll
sbb
sti
xchg
bound
push
test
or
or
add
and
add
and
call
int
push
fcoms
add
jns
cmpl
push
xchg
jl
adc
out
xor
mov
dec
ss
faddl
push
adc
mov
sbb
pop
push
and
cld
aam
xor
adc
jnp
xchg
dec
push
ja
add
adc
inc
or
push
lds
rcrb
sub
add
add
sti
add
test
adc
push
adc
lcall
xor
push
push
push
out
mov
inc
sahf
inc
cmpsb
les
les
call
inc
aam
loopne
imul
outsl
sub
aad
scas
push
lea
or
and
shrb
ja
mov
pop
mov
mov
imul
push
mov
xor
fmul
inc
scas
adc
xchg
and
fdivs
mov
je
and
aam
rcl
push
enter
push
xor
sub
test
mov
fwait
in
or
in
xchg
sub
xor
dec
bound
push
pop
cmp
and
inc
leave
dec
sub
dec
adc
pop
add
cmp
test
inc
and
push
xchg
mov
jmp
rclb
mov
nop
push
les
push
add
sbbl
inc
je
jnp
jae
dec
add
mov
sub
adc
stc
jp
jno
add
pop
xchg
mov
shlb
popa
aam
jp
outsb
dec
lods
xor
dec
dec
std
sbb
in
or
cmpsb
mov
ret
push
and
xor
lods
mov
push
sbb
pushf
dec
out
pop
fdivl
xchg
xor
int3
and
lcall
les
les
mov
popa
aas
cmp
es
mov
mov
orb
lret
imul
pop
add
adc
mov
adcl
and
enter
and
xor
and
lret
js
call
and
cwtl
add
mov
push
loop
mov
or
shl
mov
lret
fwait
and
scas
cmpsb
dec
add
push
inc
ror
and
rcrb
dec
out
push
loope
push
xchg
adc
and
addb
sbb
fisubrs
or
xor
je
cmp
lcall
lahf
jl
dec
scas
fs
xor
or
pusha
neg
sub
or
in
inc
daa
mov
pop
cmpsb
cmp
rcrb
add
mov
jne
daa
je
pop
orb
adc
in
leave
mov
scas
dec
dec
add
sarb
into
push
lds
adcb
sbb
fnstcw
cltd
xchg
cltd
and
iret
enter
mov
mov
mov
push
xchg
arpl
dec
pusha
pusha
fldenv
add
sahf
push
jns
or
sub
mov
add
add
lahf
cmpsb
inc
mov
sub
rorb
gs
out
push
and
enter
push
cmpb
mov
clc
mov
in
inc
movsb
push
loopne
add
and
sub
add
add
or
mov
push
or
lahf
or
jb
xchg
xchg
sbb
mov
hlt
scas
pop
add
add
add
add
add
stos
andb
push
or
jl
add
dec
andb
ret
nop
lcall
cmp
jbe
sar
sar
dec
aaa
or
jl
mov
mov
mov
scas
sub
mov
push
and
adc
das
mov
and
mov
addb
mov
mov
sbb
add
add
push
nop
test
xorb
mov
or
and
fildl
insb
mov
rorl
les
pop
inc
test
xor
sub
lods
aas
xchg
lock
pop
shlb
mov
jmp
mov
rcrl
mov
ret
in
mov
scas
pop
add
insb
dec
shll
ja
jb
pusha
punpckldq
and
and
fnstsw
cmp
lds
fldenv
int3
cmpsb
repnz
repnz
mov
stos
add
out
xor
adc
pushf
add
xchg
lret
aaa
in
les
ret
insl
sub
xor
movsl
sub
dec
mov
and
inc
pop
and
or
or
pushf
or
inc
lcall
mov
jg
push
sbb
jecxz
xor
inc
adc
and
push
rol
cmp
scas
xor
mov
ror
cli
sahf
xor
cmp
dec
xabort
sarb
adc
mov
mov
add
cmpsb
inc
push
movsb
lret
mov
push
mov
gs
or
mov
cmp
movsl
loop
mov
mov
mov
adc
adc
paddusw
push
stc
add
inc
sbb
and
xor
insl
inc
hlt
add
adc
sti
movb
inc
icebp
fisttpl
je
jl
mov
fucomip
sbb
pop
je
js
and
sbb
in
push
and
mov
add
xor
push
xchg
sbbb
mov
mov
jb
fistl
inc
add
push
sub
imul
push
mov
cmp
jne
aas
mov
jne
pop
or
jne
fcomi
std
mov
or
adc
add
mov
je
jmp
cmp
and
pop
dec
mov
or
push
les
cli
push
outsl
push
cwtl
mov
push
mov
sbb
mov
push
sub
xchg
pop
rclb
adc
dec
inc
outsl
add
jne
add
add
push
cmp
push
adc
add
dec
das
pop
ret
push
shrb
ret
push
push
daa
and
daa
adc
lahf
sub
push
and
adc
flds
cmp
mov
add
pop
mov
js
outsl
inc
xchg
outsb
std
jne
cmp
insb
je
or
sub
inc
in
adc
inc
js
xor
jbe
mov
je
repnz
pop
test
add
sbbb
push
cmp
arpl
push
mov
in
or
and
roll
sub
mov
add
and
mov
adcb
and
pop
xor
jae
popa
mov
mov
mov
sub
cmp
inc
xchg
jb
pusha
mov
push
cmp
mov
lds
mov
sub
es
test
movl
jmp
push
ss
add
shll
push
xchg
adc
es
sub
push
out
inc
xor
lods
mov
mov
pop
cmp
or
aaa
data16
mov
cmpsl
adc
sarb
lret
push
and
sbb
inc
xchg
inc
pop
cmp
adc
jb
js
or
inc
je
rcrl
or
push
sbb
mov
or
lea
push
xchg
inc
lea
mov
jno
push
xor
ret
adc
sbb
iret
push
add
incb
cmpsb
aad
inc
sbb
lahf
orl
loopne
cmpsl
mov
push
daa
xchg
ret
mov
ret
cmp
popa
pop
mov
ljmp
xchg
hlt
in
data16
cmp
push
arpl
xchg
dec
fdivrp
add
pop
jne
cmp
sbb
loopne,pn
inc
pushf
cmc
insb
lea
dec
or
sub
xor
ret
sbb
cmp
jne
mov
sub
subl
inc
xchg
inc
sbb
sbb
jne,pn
test
xor
sbb
push
fdivrs
clc
or
add
pop
fldcw
fcmovne
mov
sub
push
mov
mov
and
out
dec
sub
outsl
mov
push
arpl
iret
push
add
push
lods
or
jecxz
dec
or
sub
mov
cmp
sbb
mov
sub
push
jbe
inc
outsl
sub
adc
inc
inc
push
mov
jecxz
inc
test
insb
cmp
movsl
adc
add
inc
jb
adc
jo
pop
push
and
jbe
sbb
add
xor
rorb
fdivs
push
sbb
dec
sub
in
jo
loopne
nop
imul
or
sbb
mov
or
or
and
mov
xchg
sahf
add
xlat
int3
pop
inc
dec
adc
dec
ja
aad
or
push
add
mov
add
adc
jecxz
jo
sbb
enter
rorl
imulb
push
add
mov
sbb
mov
dec
js
lea
shl
inc
adc
ret
pusha
cmpsb
outsl
adc
mov
push
mov
jge
in
or
out
or
jmp
jge
sbb
loope
add
push
mov
xchg
andl
add
sbb
inc
push
push
int3
ret
or
or
jg
jl
arpl
cmp
decb
mov
pusha
xor
or
xor
sbb
or
cmp
jg
fsubl
push
addl
sub
cmp
add
add
int3
arpl
cmp
push
in
mov
sbb
xor
push
and
adc
push
jne
mov
or
test
into
add
mov
and
into
in
mov
sbb
pop
sbb
mov
fstps
xor
push
adc
adc
lcall
inc
dec
fadd
gs
and
scas
fsubrs
push
inc
mov
ss
xlat
nop
pop
push
mov
or
jle
cmp
mov
sbb
ret
pop
sbb
clc
cmp
xorb
add
add
aaa
xor
icebp
sub
xor
add
jge
loopne
xlat
push
push
push
scas
xchg
xor
mov
mov
add
add
shrl
jl
push
movzwl
push
adc
inc
xor
inc
sarb
push
test
push
jl
or
mov
lea
push
loope
inc
jl
mov
mov
nop
adcb
adc
adc
ss
popf
mov
xor
push
adc
gs
fcoms
adc
add
add
sbb
in
and
push
cmp
inc
xor
mov
cmp
fmull
inc
cmp
push
and
xor
mov
or
pop
push
sti
xorb
or
mov
add
sbb
js
call
dec
mov
and
push
inc
repz
mov
dec
push
or
mov
sbbl
mov
sbb
repz
cmp
sub
pop
jle
data16
pop
inc
push
sbb
scas
push
xlat
xor
cmp
jmp
aad
or
mov
loopne
pushf
pop
loop
push
dec
mov
or
xor
lea
add
and
mov
add
in
push
xchg
mov
into
cmp
jne
cmp
in
sub
sbb
cmpsb
xchg
sub
into
arpl
sub
es
dec
inc
pop
xor
jo
fxch
repnz
mov
adc
jae
xor
push
or
insb
nopl
or
xchg
hlt
adc
aaa
rolb
jp
dec
add
cmp
mov
loopne
adc
push
pop
push
dec
jle
cmp
call
es
in
sbb
dec
sti
mov
fldl
xor
je
xor
jne
repnz
cmp
mov
out
pop
push
xchg
adc
mov
pop
les
sub
pop
ret
in
ret
subl
jnp
or
xchg
xchg
lds
mov
push
push
mov
std
pop
add
outsl
cmp
add
cld
cmp
xor
lock
jp
aad
or
arpl
lret
lret
fs
dec
rorl
cmp
cmp
test
inc
test
xchg
test
out
push
into
insl
mov
jns
call
int3
sub
test
sbb
idivb
addr16
std
adc
clc
idivb
popf
popf
adc
lret
push
add
push
jbe
push
xchg
mov
mov
jo
ss
sbb
mov
or
and
and
mov
pop
cli
lret
dec
add
cmp
mov
sbb
sbb
inc
inc
and
mov
mov
out
add
inc
and
in
mov
loop
adc
or
outsb
stos
adc
mov
cmp
cs
test
sub
call
jbe
shr
out
pop
cmp
dec
adc
ja
leave
pop
inc
add
fcmovu
sbb
je
sub
pop
add
mov
and
push
sbb
sbb
push
ds
add
pop
in
add
std
shr
test
adc
loope
int3
hlt
shlb
or
push
sub
addl
test
lcall
mov
dec
call
dec
lods
mov
push
stc
pop
or
hlt
cwtl
bound
inc
mov
cltd
call
shl
loop
and
dec
push
or
ret
mov
dec
push
inc
and
enter
sub
push
insb
push
xor
or
lcall
in
sub
mov
stos
mov
scas
jbe
mov
sub
testb
mov
arpl
xchg
add
aam
dec
mov
dec
in
dec
mov
cmp
je
or
stos
mov
pop
xor
sbb
inc
add
mov
sbb
inc
xor
data16
out
cli
mov
outsl
mov
push
movsb
test
or
fdivrl
adc
adc
fwait
popa
movsb
popf
insb
mov
and
les
inc
rol
adc
lret
cli
or
test
push
mov
lock
rolb
and
mov
flds
or
fmull
or
leave
mov
leave
push
lods
pop
inc
outsb
sub
inc
sub
scas
pop
push
rorl
xchg
je
xchg
inc
sub
std
and
cs
decl
rol
xchg
pop
mov
adc
push
push
push
rcrl
pop
sub
mov
push
cmp
push
mov
inc
xor
jb
cs
mov
iret
jae
loopne
mov
push
dec
sbb
sbb
adc
jne
cmp
jb
mov
mov
es
pop
jne
icebp
sub
test
add
cltd
sub
lds
xchg
fwait
int
xor
xchg
xor
xchg
sbb
cmp
lret
push
jmp
xchg
mov
mov
add
mov
fsubrp
mov
push
inc
jo
in
push
dec
dec
adc
aam
test
mov
dec
mov
pop
pop
add
jp
fstpt
pop
push
out
and
adc
push
stos
mull
or
sub
sahf
adc
adcb
adc
insl
pop
push
jbe
mov
popf
adc
push
addr16
test
adc
xchg
or
dec
and
mov
and
inc
roll
xor
int
inc
or
inc
mov
rclb
jmp
inc
mov
jb
xchg
or
sbb
stos
push
push
fadd
pop
or
enter
fmuls
loop
mov
push
cld
fistpll
shl
shlb
ret
jnp
sub
ret
lea
ljmp
sbb
loopne
or
add
pop
and
mov
mov
and
push
mov
call
adc
or
xor
fists
femms
xor
mov
lretw
cmp
loopne
clc
inc
lods
adc
fisttpll
dec
aad
jae
dec
inc
lea
orl
adc
outsb
insl
xlat
jle
and
not
sub
les
ljmp
and
xor
shl
shr
or
add
xor
fmull
push
lods
sti
lea
shll
lret
into
adc
or
ljmp
cmc
cli
int3
imulb
inc
rol
and
es
ja
mov
rol
mov
inc
xor
aam
xchg
inc
std
push
ret
fidivs
push
pop
mov
sbb
test
or
mov
fwait
stos
add
stos
adcb
popa
mov
fcomps
in
fsubrl
xchg
popf
xor
ja
xor
mov
ljmp
mov
call
xor
call
or
xchg
add
and
ljmp
ds
not
and
ja
mov
call
nop
imul
loope
callw
xor
das
inc
dec
inc
inc
jle
push
dec
in
mov
std
xchg
loopne
fwait
xor
imul
in
xchg
cmpsl
pop
push
ss
aas
push
xlat
outsl
cld
lock
repnz
jns
hlt
lods
loop
popf
mov
pop
cld
orl
sarl
lea
adc
or
aas
cltd
jmp
push
or
std
sbb
bound
push
fstpt
sbb
test
ss
inc
sarb
add
inc
pushf
stc
mov
ss
movsl
jecxz
gs
pop
or
movsb
push
ret
mov
add
add
arpl
in
jne
pop
pop
xor
cmp
push
jne
into
int3
out
ffreep
xlat
lret
das
mov
jmp
adc
mov
dec
inc
mov
data16
andb
push
sub
out
in
pushf
add
das
fdiv
bound
push
jecxz
pop
lods
mov
lahf
inc
stos
mov
fwait
lea
adc
sub
out
pusha
sub
jle
inc
paddd
gs
and
test
aaa
cmp
sub
pop
and
mov
cli
push
shl
cmp
sti
shll
insb
pusha
stc
outsb
sub
stc
aaa
clc
enter
mov
in
cmp
sarb
sti
shl
mov
xlat
cmp
je
jmp
or
sti
lods
cli
or
push
fimuls
ret
loope
cmpsb
adc
lock
scas
add
or
or
outsb
or
pop
aaa
ret
test
jo
xchg
enter
sub
stc
jns
mov
ja
js
mov
mov
iret
testb
inc
inc
xlat
and
mov
jge
xchg
mov
sarl
in
adc
inc
lret
out
lret
shrb
sub
and
dec
in
sar
ficomps
jmp
sbb
add
imull
push
stc
mov
pop
fcmovnb
test
xchg
out
xlat
clc
sbb
mov
nop
fildll
mov
aam
mov
out
fcmovnu
add
adc
leave
enter
mov
lret
rorl
je
sbb
mov
loope
jmp
mov
neg
xchg
jg
push
xor
xor
xor
ja
inc
pushf
pop
fcoms
cmp
xlat
fisubrl
sbb
add
fiaddl
fisttps
imul
sbb
jno
inc
pop
sahf
xchg
pusha
roll
dec
arpl
fsub
or
and
leave
js
ret
outsl
clc
dec
in
and
insl
adc
test
sub
les
mov
cmp
in
ficoml
or
mov
andl
mov
pop
xor
inc
ljmp
movsl
or
mov
fisubl
iret
fimuls
fcmovb
sub
add
xlat
or
sub
mov
jmp
push
push
cmpsb
movsl
mov
test
arpl
mov
sub
xor
loopne
sbb
cmp
mov
in
cmpb
pop
shufps
sub
in
or
sti
popa
or
mov
ja
cli
daa
mov
mov
adc
inc
test
rorb
add
jns
cmc
xchg
xor
les
test
out
aam
jo
xchg
data16
xor
adc
lret
jo
fisubrs
add
mov
or
pusha
shlb
and
rcl
push
add
sbb
sub
in
stos
movl
add
jl
pop
pushf
mov
int3
pop
jae
xlat
xchg
mov
adc
push
lods
loopne
jmp
ds
mov
sbbl
sbb
ror
movsb
int3
popa
stos
or
ffree
jge
jg
rep
push
call
hlt
sbb
insl
movsl
push
mov
mov
sbb
lret
fisubrs
aam
ljmp
inc
push
or
sbb
cli
mov
pushf
cmp
and
bsr
push
push
sarl
aam
imul
cld
adc
repnz
call
pop
gs
mov
fdivs
fcmovb
repz
or
push
or
leave
mov
fsubs
out
xorl
stos
xor
repz
hlt
out
call
cpuid
out
dec
outsl
lret
stos
pop
mov
test
shrb
adc
mov
mov
adc
test
sbb
clc
adc
pop
shrl
out
in
pop
sahf
cmp
or
mov
adc
add
sub
pop
rclb
ret
lea
add
cli
mov
ffree
inc
in
mov
adc
dec
loope
out
or
sti
ds
fistl
push
xchg
ror
sub
cmpb
loop
loop
leave
fwait
int
rorl
mov
mov
ficoml
push
loop
inc
icebp
pop
arpl
rcl
sub
repz
rorl
cltd
std
clc
push
push
add
jg
iret
push
push
jle
pop
jmp
into
push
or
sbb
add
mov
nop
mov
hlt
inc
icebp
push
push
lcall
push
adc
pop
add
call
dec
fisttpll
fisubrs
leave
add
addr16
xchg
cli
cmpsl
das
clc
and
push
xor
outsl
jo
push
sbb
and
jo
pop
mov
sub
shr
mov
push
push
out
add
or
add
xor
sbb
sbb
add
nop
or
sub
and
push
xor
mov
and
movsl
or
in
enter
cmp
cmpb
call
or
inc
add
repnz
mov
mov
ljmp
adc
adc
add
sbb
add
fstpt
stos
imul
jb
pop
add
cs
xchg
pop
cs
inc
jmp
xchg
push
adc
push
xchg
mov
jbe
cmp
and
sub
ds
int3
or
insl
punpckhdq
pop
fwait
or
fwait
add
adc
iret
testb
aam
int3
xor
mov
pop
loop
add
or
sahf
insb
pop
jmp
adc
shlb
nop
jmp
add
in
sbb
push
sub
pop
sub
or
pop
add
or
mov
jae
and
jns
cmp
js
roll
pop
lea
xchg
into
jl
inc
mov
outsb
push
or
rol
add
div
and
test
inc
and
loopne
test
xchg
pop
push
add
fcoms
mov
cmp
inc
pop
roll
or
xor
aaa
push
jae
add
bnd
jbe
push
xlat
xor
cld
inc
cli
xchg
into
mov
add
add
cmp
je
add
insb
dec
sub
and
add
cwtl
inc
mov
pop
xchg
pop
pop
jg
les
incl
fstl
push
adc
sbb
jne
lds
mov
mov
das
adc
cmp
lock
jbe
dec
dec
int3
sub
fcoms
pop
jmp
inc
inc
cmp
lock
inc
jno
xor
pop
lcall
bound
ds
pop
arpl
push
cmpsl
ds
and
cmp
or
inc
add
push
sbb
andb
movsb
inc
inc
mov
push
ljmp
add
push
call
shrl
hlt
test
rcrb
dec
xlat
test
popa
cmovo
adcb
sbb
sbb
ja
inc
cli
push
nop
mov
adc
and
or
negb
fs
adc
pop
jle
add
xchg
adc
jmp
addb
or
ss
dec
push
push
es
xorb
push
lock
sbb
in
test
cmp
push
or
add
leave
and
inc
xchg
stos
jae
movb
mulb
pop
inc
add
inc
dec
sub
and
or
add
add
scas
cmp
test
inc
xor
add
push
adc
pop
xor
and
mov
inc
adc
xor
ds
adc
jl
pop
and
inc
je
add
push
shl
xor
mov
push
out
xchg
xchg
sub
jmp
xor
fsubrs
fbstp
roll
outsb
push
inc
xor
inc
mov
ret
aam
dec
jne
insl
jbe
fisttpll
push
fimuls
jmp
or
pop
scas
ss
insl
sbb
popa
adc
nop
outsl
jnp
xchg
inc
ret
andb
sbb
test
movsl
push
and
pop
mov
and
cmc
inc
add
xor
mov
mov
sub
jo
add
push
cwtl
lods
push
pop
mov
rclb
clc
in
adc
notl
pop
fs
pop
ja
pop
inc
adc
xchg
or
pusha
ret
sarb
add
jg
cs
aam
mov
or
push
les
xchg
lcall
std
dec
add
xor
dec
call
add
movsb
or
subb
dec
adc
addr16
adc
pop
stos
ja
fnsave
sub
mov
ds
mov
hlt
jae
xchg
jne
dec
mov
int
adc
fcoms
int
xchg
in
insl
into
jb
xchg
inc
add
jecxz
jne
xor
imul
lock
mov
dec
adc
cmp
jae
or
cmp
pop
xchg
jb
mov
pusha
sti
adc
pop
popl
add
jmp
xchg
hlt
movb
jmp
push
pop
inc
and
add
push
xchg
mov
fs
add
pop
hlt
push
mov
insl
test
adc
and
inc
mov
or
popl
fildl
cmp
pop
in
add
stos
xor
add
inc
xchg
stos
add
mov
pushf
jge
or
or
arpl
loop
sub
mov
outsb
test
in
push
fmuls
sub
addb
addb
jge
push
shrl
xor
mov
pop
rclb
pop
pop
pop
push
les
pop
mov
ret
or
xor
jb
cmc
mov
rcl
sbb
cld
mov
into
and
push
mov
lock
cmp
cwtl
jge
adc
push
pop
mov
xchg
add
lds
movl
mov
rorb
aaa
cs
or
or
sub
movsl
or
stos
pop
and
add
fnsave
push
adc
jne
push
mov
mov
movsl
add
mov
roll
xor
mov
jge
push
ss
in
data16
sbb
imul
jbe
mov
dec
mov
loope
add
cwtl
aas
or
aad
mov
decl
cmp
cmp
jb
pop
out
push
or
cmc
lea
mov
sbb
rolb
jmp
dec
xchg
xchg
or
xor
repnz
enter
push
add
pushf
or
outsb
cmp
test
mov
xchg
xchg
cld
jne
pusha
leave
lods
push
add
andl
cmpsl
and
or
das
adc
ja
add
push
mov
jg
cmp
je
shll
inc
add
inc
fists
add
push
cli
cwtl
dec
ss
into
push
int3
mov
and
jle
ss
dec
inc
fldl
mov
repnz
insb
fdivs
mov
cmpsl
sahf
adc
mov
adc
jmp
cmp
and
xlat
push
add
inc
adc
mov
jb
call
jae
repnz
push
hlt
inc
lods
nop
out
lret
pop
mov
pop
loope
imulb
inc
testb
cmp
add
and
add
inc
or
xor
lret
mov
xlat
add
insb
cmp
add
inc
cmp
pop
leave
and
push
lea
cwtl
dec
int
adc
mov
pop
add
loopne
and
mov
fimull
inc
test
adc
lahf
insb
mov
pop
movsb
or
bound
cwtl
jp
add
and
outsl
imul
pusha
test
cmpsb
add
inc
inc
out
jge
add
add
and
xchg
cmp
loop
pop
mov
stos
add
push
stos
add
pop
push
in
or
cmp
adc
sbb
popf
mov
dec
add
flds
enter
jbe
and
enter
fldt
xchg
or
cmp
ljmp
leave
dec
xlat
sbb
mov
sub
and
sbb
mov
ret
mov
lods
ja
or
mov
aad
mov
stos
jle
insl
mov
les
push
in
pushf
push
mov
test
sub
int
es
nop
fs
xchg
std
shlb
fdiv
mov
mov
sbb
xor
cmp
push
gs
clc
inc
pop
mov
mov
jo
ja
push
inc
xchg
push
mov
fildll
and
mov
fsubrs
cltd
sbb
icebp
push
mov
roll
pop
rcll
cmp
push
daa
mov
inc
out
xor
mov
add
sub
fimuls
xchg
out
mul
or
mov
sbb
or
and
xor
dec
mov
pop
outsb
pusha
add
out
cmpsb
jae
and
sbb
xchg
adc
xchg
les
sbb
popf
mov
pop
decl
shll
pop
cmpsb
or
jns
xor
test
inc
insl
mov
push
cmpb
ja
inc
xor
adc
pop
leave
sub
add
mov
pop
inc
daa
push
addl
ss
dec
loopne
cmp
pop
jne
cmp
or
pop
faddl
lea
mov
adc
mov
or
jecxz
jne
mov
and
jecxz
push
push
pop
push
dec
aaa
add
push
movsb
push
add
nop
pop
or
dec
vunpcklps
inc
rorl
inc
jns
adc
call
push
pusha
push
jp
out
imul
add
jmp
sub
sahf
sub
mov
mov
add
push
or
outsl
sub
shr
notb
jmp
cmc
push
pusha
fmuls
push
enter
das
insb
repnz
je
mov
cmp
push
xchg
mov
je
sti
andb
xorb
ficoml
mov
pop
rolb
fnstenv
mov
or
mov
inc
repnz
fdivrl
nop
out
sub
fcomp
sbb
push
lods
push
fadds
nop
adc
inc
leave
loopne
sub
xor
add
add
dec
and
jns
sub
popa
mov
cvtpi2ps
or
xlat
out
daa
cmp
add
push
dec
or
cmp
push
sub
fsub
add
mov
sub
scas
add
pop
adc
add
mov
mov
push
nop
or
xchg
addr16
sbb
sbb
jb
leave
loop
sbb
xor
sub
nop
sbb
iret
xchg
data16
sbb
mov
daa
sbb
mov
insl
test
adc
dec
push
push
or
stc
mov
sbb
arpl
sti
bound
add
cmp
inc
pop
adc
xor
push
sub
fsubrs
mov
jg
loope
dec
lcall
dec
cmpsb
in
sbb
and
fdivrl
insb
fcomps
sbb
mov
push
and
or
fmuls
in
add
add
push
sbb
adc
and
sub
sbb
sbb
xchg
mov
adc
addb
and
loopne
mov
xchg
push
loopne
sbb
xchg
and
fmuls
sbb
cmp
fdivs
out
and
mov
fidivrs
rclb
push
lea
aad
push
push
daa
mov
fcoms
sub
jl
and
pop
cmp
rorl
or
cmpsb
sub
leave
mov
mov
jo
push
push
mov
add
add
cs
lret
mov
aas
mov
gs
and
xchg
mov
test
adc
aas
rclb
fisttpll
rolb
cmp
add
cmp
add
push
pop
je
das
int3
mov
push
rcl
out
adc
cmp
scas
shl
mov
xor
cmc
mov
xor
push
push
dec
repnz
fwait
mov
push
gs
and
mov
jge
stos
sbb
or
jl
mov
add
push
sbbl
sahf
rsm
inc
lds
imulb
leave
shrl
inc
jp
std
fisttpl
mov
xor
xor
or
inc
stos
testb
dec
push
das
xlat
lock
mov
push
shlb
je
xor
mov
mov
inc
in
push
dec
mov
popf
add
mov
or
sub
mov
add
sub
xchg
outsl
aas
call
sub
ror
out
jns
or
push
mov
inc
roll
int3
das
dec
pop
stos
add
pop
mov
int3
repz
mov
popf
ret
mov
lds
addl
test
cmp
jb
mov
add
xor
movsl
ja
xor
divl
add
and
add
add
cmpl
mov
mov
xchg
dec
lea
mov
inc
xchg
pusha
inc
push
data16
loopne
inc
outsl
xor
in
or
shrl
cmp
jne
mov
add
gs
inc
out
xchg
popa
sub
repz
mov
incb
arpl
add
sbb
mov
mov
jle
or
or
sub
sub
mov
test
xor
enter
test
and
movsl
std
or
sbb
add
popa
inc
int
mov
mov
xor
int3
inc
push
scas
mov
cli
lods
cmp
addl
jle
push
scas
pop
aad
or
into
adc
push
std
adc
inc
xchg
int3
or
mov
adc
pop
pop
xchg
push
xor
scas
adcb
jbe
out
inc
mov
dec
push
xchg
add
mov
xor
rcrl
adc
loopne
aam
dec
shrb
cmpb
push
test
adc
inc
in
jbe
xorb
lods
xor
pushw
adc
dec
cmc
shll
rclb
add
sub
in
dec
push
mov
ljmp
or
push
fcmovb
inc
inc
jnp
add
push
lcall
jge
adc
ss
test
mov
sbb
and
cmp
or
inc
pop
mov
gs
xor
adcl
adc
or
out
adc
mov
movsb
cmp
push
mov
xorb
adc
pop
lret
mov
scas
or
cmp
push
cmc
lea
pop
mov
es
dec
pop
dec
mov
pop
dec
loopne
addb
aaa
out
mov
lea
pop
test
jle
dec
lea
cli
mov
sbb
roll
rcrl
mov
adc
scas
ret
pop
push
shlb
sbb
add
and
xor
call
push
inc
mov
xchg
add
push
push
lods
lods
sbb
lcall
popa
aam
daa
out
dec
pusha
stos
xor
mov
dec
xchg
mov
mov
loop
ljmp
pop
fistpl
cmpsb
push
enter
repz
mov
pop
or
jne
fisttpl
or
es
fiaddl
push
dec
adc
or
xor
xlat
add
xor
xor
cld
add
or
mov
jmp
dec
push
jp
adc
rcrb
movsb
sbb
out
and
sbb
or
insb
and
add
rorb
andl
addl
xor
add
or
adc
je
mov
jbe
mov
int
stos
jb
jns
adc
xchg
and
add
cmpsb
or
add
sbb
in
xchg
lock
std
mov
adc
add
adc
inc
rolb
mov
push
pop
cld
sub
jmp
or
jne
movsb
pop
adc
scas
mov
push
jmp
ss
jmp
call
sbb
push
aaa
loopne
addb
loopne
sarl
xor
ficoms
sbb
cmpl
xor
sbb
cmp
or
jmp
shlb
xchg
mov
adc
mov
inc
xor
or
dec
pushf
icebp
fiadds
xchg
ror
mov
gs
mov
inc
xorl
jg
subb
jno
add
cli
loop
inc
addl
stos
adc
fisttpl
in
sub
lock
out
and
add
adc
mov
insb
inc
out
mov
mov
cmp
shll
bound
aad
pop
add
cmpsl
js
out
out
in
mov
out
insl
mov
mov
jecxz
add
inc
out
jge
adc
pop
imul
sub
hlt
inc
jbe
mov
scas
pop
add
inc
leave
or
aas
lock
and
loope
loope
mov
repnz
leave
hlt
nop
loope
imul
add
or
jne
add
inc
imul
sub
subb
and
jb
nop
push
loope
imull
cmc
pop
repz
imul
and
repz
adcl
cmp
jns
divb
cmp
leave
and
push
divb
xchg
inc
div
jb
pop
inc
or
sub
nop
fimull
cmp
jae
and
sub
pushf
loope
loope
jns
adc
loope
jb
dec
repnz
clc
pop
loope
das
xchg
inc
add
mov
negl
mov
out
push
mov
nop
push
and
sub
adcl
loope
leave
and
add
mov
pop
xor
adcl
pop
sbb
scas
push
push
shll
sbb
pop
movsb
pusha
cmp
jne
jb
bound
mov
aaa
xchg
pop
adc
pop
sbb
push
rorb
push
push
push
insl
clc
mov
pop
sub
insb
mov
adc
jp
push
mov
movb
scas
push
add
dec
ficompl
scas
mov
add
or
xor
in
in
jl
lret
test
sahf
push
fld
dec
inc
hlt
xchg
inc
cmp
jae
imul
mov
sub
mov
or
mov
pusha
jp
test
add
sub
inc
insb
sbb
xchg
add
out
push
dec
mov
and
inc
sbb
xor
push
fs
mov
adc
mov
add
int
mov
or
xchg
adc
imul
mov
mov
mov
push
lret
jecxz
add
sub
mov
ss
xor
or
rol
xor
xor
cmp
stos
cmpsl
pop
insb
sub
pusha
mov
scas
iret
outsb
xor
or
push
add
xchg
xor
jbe
dec
in
imul
inc
push
mov
je
sub
rcrb
fs
sub
subl
lcall
jnp
inc
cmp
clc
bound
xchg
cmpsb
xor
call
sub
popf
aad
int3
fs
ljmp
mov
dec
xchg
ss
and
xchg
pop
sub
loope
and
mov
arpl
call
xor
or
adc
xchg
jae
movb
fldenv
arpl
pop
push
imul
pop
mov
jne
mov
xor
and
push
sahf
rolb
or
cmp
mov
mov
push
lret
push
adc
sbb
lods
dec
push
push
jg
es
dec
dec
dec
in
push
mov
sub
and
push
xorb
sbb
sub
inc
xchg
mov
adc
roll
in
dec
push
push
or
push
mov
xchg
repz
ds
mov
xchg
xor
dec
mov
add
mov
fdivrs
sbb
pusha
lea
sub
mov
scas
and
xor
xchg
adcl
mov
push
cmp
or
fs
cld
mov
cmp
in
loopne
inc
cmp
mov
xor
lea
loopne
cmpb
push
dec
adc
mov
xchg
std
cld
add
ljmp
cmp
adc
mov
data16
or
dec
push
rorl
imul
popa
adc
pop
movsb
inc
push
push
pop
push
or
adc
rorl
jmp
push
push
push
adc
mov
out
push
push
jne
das
nop
add
add
mov
sahf
test
dec
add
out
pop
imul
mov
pop
inc
push
arpl
sub
or
stc
lret
lods
pop
add
fcmove
mov
or
add
enter
push
mov
push
lret
add
inc
out
movsb
xor
sub
arpl
cmc
adc
scas
sbb
mov
or
orl
pop
ret
lret
lods
or
subb
xchg
inc
outsb
les
push
lcall
or
push
outsl
nop
fildll
xor
cmc
orl
cltd
ja
nop
mov
test
shll
das
int
mov
dec
sbb
adcb
sub
decb
add
int3
cmpsb
dec
dec
and
nop
or
movsb
std
movsb
movsb
push
mov
xchg
jg
les
push
insb
lret
mov
sbb
lahf
xor
dec
push
push
xchg
ljmp
in
inc
in
sbb
aad
lret
pop
cmp
js
fwait
jmp
lcall
stos
ret
add
push
rclb
jecxz
mov
dec
pusha
and
loop
sbb
xchg
shlb
lahf
push
xor
fsubs
mov
pusha
inc
or
fsts
sub
test
nop
lods
lods
jo
insl
enter
mov
adc
fsts
mov
sbb
xor
mov
lock
adc
push
imulb
push
mov
and
mov
xchg
ja
movsb
add
je
add
lds
adc
je
addr16
sti
jae
into
popa
add
test
dec
inc
dec
xor
mov
inc
lds
out
or
lret
dec
fcomp
inc
imul
loopne
call
xor
lods
and
mov
xor
push
add
add
push
or
adc
loope
or
add
xchg
and
cmpsb
in
lcall
sbb
mov
mov
add
lret
mov
adc
sub
add
adc
xor
add
and
cld
xchg
and
jl
or
dec
mov
sahf
push
add
cmp
pushf
mov
lret
add
inc
inc
nop
cwtl
fs
stos
and
jmp
or
push
jno
xchg
fisubrl
adc
fidivl
pop
frstor
pop
leave
sbbb
cmp
mov
sub
lods
sub
push
mov
mov
cwtl
test
cmp
lcall
add
lds
mov
push
and
int
addr16
inc
shrl
popa
jl
repz
insb
orl
or
mov
dec
inc
icebp
imul
gs
test
subl
sub
sarl
sarl
je
xchg
xorb
sahf
inc
mov
nop
xchg
cmp
xor
cmp
sbb
push
add
pop
in
enter
add
push
adcb
or
dec
ljmp
inc
dec
sbb
lea
sbb
mov
dec
mov
dec
dec
jbe
push
shrb
pop
jo
xchg
je
test
int3
mov
fwait
xor
cmpsl
pushf
rcll
movb
xor
cmp
adc
pusha
movsb
pop
mov
dec
jmp
out
mov
test
push
push
pop
scas
mov
or
lods
mov
inc
and
xchg
sbb
cwtl
repz
les
pop
sbb
pop
xor
notb
jge
xchg
add
iret
fadds
adc
jle
jmp
adcl
clc
pop
inc
frstor
push
mov
and
rorb
movsl
mov
gs
jge
les
adc
loopne
pop
mov
enter
mov
jo
in
fmull
dec
and
xor
mov
les
inc
push
out
clc
popf
pop
and
adc
dec
stos
lods
or
add
ja
js
lcall
dec
mov
adc
aad
out
int
and
call
mov
mov
xor
pop
sub
or
xorb
sub
xchg
or
iret
push
xor
data16
or
push
add
or
dec
adc
xlat
inc
je
int3
int3
and
popf
rcrb
sub
and
lcall
xor
inc
pop
mov
inc
icebp
jo
push
cld
mov
sub
inc
add
dec
or
push
push
push
xor
lds
push
sbb
push
inc
in
enter
push
adc
fadds
push
push
daa
sbb
pop
or
in
xor
mov
xchg
dec
icebp
clc
inc
push
lcall
add
pop
push
lock
mov
orb
mov
inc
add
mov
cmp
mov
bound
xor
mov
pop
mov
sub
into
insb
xchg
stos
fcmovne
xchg
push
int3
outsl
sub
cmp
add
pop
fdivs
sbbb
mov
push
pop
sub
push
adc
aaa
lods
test
rorb
mov
push
mov
repz
lahf
scas
add
stos
add
dec
add
push
cmpsb
movsb
xchg
inc
add
je
dec
mov
xchg
enter
push
or
sub
mov
call
pop
push
xchg
cmp
pop
sbb
push
jo
out
push
push
movsb
stos
push
fimull
jecxz
test
push
xchg
imul
int3
lock
add
sbb
cltd
mov
insl
push
adc
lret
xchg
cmp
in
or
mov
push
adc
push
movsl
sub
mov
dec
mov
movsl
xor
shlb
fs
call
or
inc
mov
testb
push
mov
enter
leave
push
or
orb
mov
aaa
inc
in
mov
insb
sahf
and
js
clc
rcll
mov
and
mov
mov
add
push
in
lock
rcr
lock
and
es
or
inc
adc
enter
rolb
div
stos
adc
or
ret
sub
pusha
and
or
sbb
push
sbb
in
test
jge
inc
ffreep
pusha
fcomip
pop
popf
mov
cmc
pushf
pop
xchg
sbb
into
mov
mov
or
andl
loopne
lods
dec
push
loopne
jb
out
sbb
dec
cltd
xchg
push
xchg
sub
and
or
jb
sbb
fcomp
inc
fs
adc
sbb
xchg
sub
adc
or
jb
rclb
mov
xchg
adc
jb
enter
int
xchg
sub
in
lcall
or
fs
sbb
pop
mov
rorb
mov
sbb
inc
push
xchg
sbb
add
pop
or
in
lods
and
add
xchg
add
and
sub
out
xchg
lahf
enter
cld
and
xchg
push
adc
and
pop
enter
xchg
xchg
jb
inc
and
fs
daa
push
push
jg
sbbl
adc
inc
sub
fs
sub
test
adc
pop
push
push
xchg
sub
loop
sbb
cltd
sub
add
sub
xchg
inc
mov
call
rcll
xchg
ds
sbb
sub
mov
test
insl
faddl
add
mov
adc
push
cmp
daa
inc
cmc
or
inc
adc
cmp
stos
pusha
jne
je
fidivrs
xor
add
ja
pop
je
sub
movb
incb
mov
xor
adc
sub
je
loopne
cmp
adc
and
orl
test
orl
sub
or
xor
adc
and
pushf
adc
cltd
pusha
das
cmp
push
fadds
xor
pop
adc
imul
ja
xchg
in
das
sbb
pushf
mov
fidivl
loopne
jecxz
push
aaa
xchg
or
xor
iret
stos
pop
mov
or
add
add
repz
sarb
stos
aaa
daa
cmp
sub
sbb
lahf
into
enter
inc
repnz
or
in
xchg
pop
ret
insl
cltd
in
mov
add
dec
dec
inc
jae
and
or
inc
add
shlb
stos
cmp
rolb
cmp
sub
shll
and
imull
inc
hlt
mov
mov
pop
pop
pop
sarl
inc
push
dec
sahf
mov
test
dec
mov
out
inc
mov
ja
fwait
dec
mov
ds
lods
add
add
adc
es
xchg
les
mov
into
mov
aam
js
adc
sbbl
jl
adc
ret
or
out
cwtl
cwtl
aam
inc
and
lock
add
in
es
inc
sbb
out
jmp
leave
inc
pusha
add
into
dec
inc
add
ret
cwtl
test
sbb
jo
and
or
loope
and
clc
addb
lds
cmp
mov
pop
add
jmp
cmp
and
cmp
sbbb
pop
mov
rorl
cli
shlb
loop
nop
or
test
mov
push
test
fidivl
jle
inc
arpl
cmp
pop
push
inc
addb
mov
pusha
shrb
cmp
lods
dec
xchg
xchg
jl
xchg
dec
and
cmp
xchg
pop
sbb
pop
ret
notb
icebp
fwait
mov
daa
enter
mov
mov
mov
push
or
fwait
adc
addb
es
cwtl
xchg
jno
mov
data16
stc
cmc
aaa
repnz
inc
add
test
push
dec
push
dec
xchg
push
xor
sbb
xor
es
daa
aad
int3
pop
nop
dec
or
je
push
dec
add
push
push
dec
inc
je
testl
sbb
mov
cmp
cwtl
int3
int3
daa
mov
call
adc
adc
mov
add
push
add
sbb
xchg
add
popf
adc
mov
mov
and
stc
sbb
xchg
mov
add
cltd
xor
cmp
xchg
adc
inc
mov
adc
pop
mov
xchg
test
or
add
mov
mov
xor
je
das
add
lret
mov
push
leave
xor
cltd
mov
inc
call
inc
push
dec
jle
fcoml
add
mov
pop
adc
sbb
and
inc
adc
stos
subl
fldl
add
test
movsl
aas
push
xchg
popf
xchg
imul
mov
mov
mov
stc
xchg
add
popa
xchg
push
dec
xchg
push
and
push
pop
or
aad
dec
cwtl
test
mov
gs
mov
mov
push
xchg
xchg
nop
sub
add
dec
inc
xor
pop
icebp
mov
pop
imulb
sub
mov
cwtl
sub
jl
add
inc
jp
and
adc
repnz
adcl
fcom
sbb
and
repz
cmp
icebp
adc
mov
pusha
and
dec
xchg
pop
mov
inc
ljmp
xchg
enter
adcb
bound
mov
dec
xchg
xor
and
enter
enter
test
enter
and
leave
inc
dec
test
adc
mov
or
nop
cwtl
inc
xor
sub
loop
push
mov
xchg
dec
sets
popf
mov
mov
dec
pop
xchg
xchg
stos
pop
jle
lcall
inc
mov
fstpl
pop
movsb
dec
mov
lcall
push
pop
ja
and
pop
and
mov
mov
test
pop
and
xchg
inc
adc
xor
outsl
into
inc
jne
aas
std
push
xchg
cmpsb
shrb
add
jl
scas
push
mov
mov
sub
add
dec
xor
inc
scas
in
push
aad
popf
and
sar
popf
int
jl
mov
add
test
jne
mov
jg
xchg
sti
and
adc
jmp
mov
rclb
sbb
scas
xchg
mov
or
mov
jb
adc
je
sarl
jle
inc
test
mov
aaa
add
out
aaa
lret
xchg
jge
or
adc
sub
mov
adc
addb
dec
enter
fcoms
push
popa
push
push
pop
xchg
iret
push
mov
arpl
adc
xchg
and
xor
stc
add
mov
adcl
ja
out
or
inc
pop
push
push
pop
andl
daa
pop
rcl
das
mov
iret
pop
add
mov
inc
lds
add
xchg
mov
mov
add
cwtl
mov
dec
enter
pop
pusha
je
push
dec
dec
push
or
in
sub
lods
xchg
in
ret
adc
xchg
test
and
stc
mov
sub
stos
xor
in
outsb
lds
dec
add
pop
and
and
push
adc
rcrb
arpl
or
add
in
cld
scas
inc
sahf
in
call
sbb
lods
lods
gs
inc
add
or
pop
push
enter
ljmp
roll
sbb
jbe
sub
jbe
inc
cmp
pop
xchg
ret
or
imul
inc
jns
mov
hlt
enter
hlt
bound
sbb
and
push
push
push
add
imul
jo
xchg
in
jle
ss
sub
bound
in
add
mov
adc
lock
xor
jno
add
pop
lds
add
mov
inc
loopne
xchg
adc
xor
mov
jle
fs
add
fs
sbb
popa
ficoml
cmp
and
iret
pop
or
pusha
push
imul
nop
mull
je
arpl
push
pop
sbb
add
dec
mov
cmp
adc
and
dec
push
inc
fsubs
or
adcb
aas
hlt
or
mov
das
ljmp
adc
mov
shll
inc
pop
push
in
inc
xor
outsb
push
xchg
sahf
sbb
enter
inc
das
cmp
mov
jbe
inc
inc
and
add
dec
dec
test
and
jnp
push
push
mov
out
scas
xor
push
nop
push
add
fcoml
imul
std
mov
xor
cmp
xchg
and
add
cld
and
aas
inc
out
test
in
stc
jne
and
add
xchg
sbb
arpl
add
sub
sub
insl
mov
adc
and
add
ret
das
push
cmp
out
push
fimuls
jb
and
test
pop
call
in
in
or
loope
mov
and
xor
add
inc
in
fildll
sub
pop
add
add
add
decl
js
sub
xor
adc
lock
push
xor
mov
jne
mov
mov
jg
insb
jmp
adc
call
cmp
outsb
sub
in
inc
in
mov
pusha
fs
bound
and
jg
add
loopne
add
and
xor
in
loope
sbbb
jge
je
jle
push
mov
cli
mov
cmp
or
jnp
ds
and
leave
or
dec
ret
cmp
xor
je
adc
adc
cld
and
jo
and
jge
mov
mov
or
and
and
aas
loopne
push
add
lcall
arpl
fadds
stos
jno
or
sub
loope
push
std
lods
std
fldl
fs
or
add
pop
mov
jae
les
add
and
mov
lock
cmpsl
loope
jle
icebp
xchg
or
scas
jo
cmp
sbb
scas
add
aas
push
adc
das
sbb
add
cli
mov
or
add
inc
call
cmp
arpl
es
pop
loope
dec
das
rclb
cmpsb
lock
pop
pop
mov
push
sub
lock
ds
and
xor
js
adc
add
cmp
fidivs
add
es
add
cmpsb
mov
or
call
or
in
jae
dec
psubusw
mov
jne
pop
aaa
insb
loope
lods
and
inc
aam
xor
and
add
and
mov
cmp
sbbb
add
mov
inc
inc
movb
inc
inc
inc
and
adc
inc
inc
inc
adc
add
mov
popa
int3
enter
mov
jl
add
test
mov
inc
enter
rorl
inc
pop
or
fcomps
push
push
sbb
add
xor
mov
mov
mov
lea
negb
shr
mov
packsswb
add
adc
es
in
pop
lea
mov
dec
jmp
lcall
cmp
insb
imul
cmp
aas
jno
dec
js
jno
sub
cmp
push
xor
add
pop
leave
push
dec
add
or
push
cmp
push
gs
jbe
sub
push
and
push
jne
fadd
mov
pop
push
add
adc
fsubs
push
xchg
adc
mov
push
push
mov
jp
xchg
xchg
xchg
mov
adc
movsb
arpl
dec
cmpsb
andb
shlb
push
add
push
fcoms
sbb
adc
in
sbb
inc
push
outsl
imul
mov
ds
inc
or
or
add
adc
or
scas
sub
jne
test
xchg
push
xor
mov
clc
add
inc
push
mov
inc
je
lahf
jnp
mov
fadds
jns
popa
inc
addr16
and
insb
out
sbb
bound
sbb
add
outsb
or
pusha
cld
or
bound
or
cmp
ds
dec
daa
push
mov
pusha
arpl
int
je
jmp
push
fs
sbb
hlt
enter
or
aam
mov
sbbb
xor
pusha
scas
or
faddl
in
fisttpl
or
xor
les
enter
or
cwtl
insb
xchg
cmp
loopne
add
cmpb
cmp
sub
fs
faddl
or
or
insb
in
or
pop
mov
ret
and
mov
jb
imul
imul
mov
adc
add
repnz
pop
inc
mov
pop
loopne
enter
ss
insb
add
mov
fcomps
cmp
call
nop
out
xchg
and
addl
cmpsb
enter
cmpsb
rclb
in
lret
ja
lock
es
add
jmp
popa
sbb
sbb
arpl
fcomps
fadd
pop
and
or
shlb
push
and
iret
sti
clc
or
ss
mov
leave
in
dec
cwtl
in
adc
cld
inc
pop
std
xor
pop
data16
pop
sub
dec
mov
pop
mov
bnd
jb
flds
and
or
outsl
or
addr16
pop
cmp
or
inc
mov
and
enter
ret
outsl
pusha
sub
fsubs
mov
xchg
pop
mov
insb
inc
insb
xor
push
mov
dec
enter
pop
aad
or
adc
add
enter
jo
sbb
cmp
inc
loopne
jo
xchg
inc
clc
or
and
outsl
mov
xor
or
mov
adc
nop
add
and
sub
test
push
push
imul
js
adc
mov
in
inc
jb
stos
and
jmp
or
push
pusha
dec
mov
aas
lock
xchg
out
les
or
insb
lret
push
push
adc
xchg
les
push
rolb
or
xor
cwtl
insb
inc
inc
inc
jae
push
cmp
mov
insl
mov
xchg
in
cmp
dec
aam
adc
xor
rcl
adc
je
xchg
fmuls
je
das
xor
mov
pop
in
and
and
mov
pop
sbb
lods
mov
data16
sub
push
repnz
nop
push
sbb
jecxz
adc
scas
in
aam
jbe
in
call
rcrl
mov
test
inc
loop
leave
dec
sbb
ja
fs
jbe
es
jae
mov
pop
mov
or
shll
ja
in
xchg
pop
push
adc
xchg
xchg
inc
fmuls
fsubs
jns
pop
js
lret
fsubs
adc
pop
call
xor
push
lahf
inc
sub
ret
mov
mov
and
enter
sbb
sbb
das
sbb
dec
mov
add
das
jns
xchg
dec
dec
clc
and
add
xor
leave
ss
mov
or
loopne
fwait
mov
xchg
out
xor
je
adc
repz
dec
test
jp
in
lock
outsb
bnd
mov
jp
mov
pop
xor
ja
or
lock
data16
adc
insl
push
ja
ss
or
mov
cmp
push
mov
adc
ret
leave
jnp
pop
mov
inc
push
lahf
in
nop
shll
mov
mov
fdivl
pop
nop
fs
or
mull
add
andl
and
xchg
xor
mov
add
in
in
in
aas
dec
and
sub
in
ftst
call
mov
inc
mov
add
inc
sar
dec
lds
add
pop
or
pop
shlb
cmpsb
in
jnp
into
pop
mov
xchg
outsl
nop
shll
mov
or
pushf
lods
cwtl
js
xchg
and
adc
dec
rclb
mov
and
testl
cwtl
inc
pop
sahf
movsl
insb
rcrb
mov
xchg
sub
jle
jns
or
push
aam
in
xorl
xor
jg
or
dec
jl
cwtl
fwait
dec
pusha
xchg
or
pop
mov
adc
jmp
push
call
repnz
fildl
dec
bound
popa
xchg
xchg
sbb
adcb
mov
adc
addr16
and
sbb
mov
iret
jb
xlat
pop
fs
dec
mov
inc
test
fadds
or
dec
ret
cltd
sub
or
arpl
sbb
sbb
or
xchg
dec
repnz
mov
fsubrs
enter
in
pop
inc
pop
jmp
pushf
insb
leave
and
sbb
xchg
adc
in
sbb
and
cmp
pop
test
lahf
add
loopne
je
adc
repnz
js
test
pusha
das
xor
adc
mov
lock
mov
insb
movsl
shlb
push
dec
push
stos
mov
rcll
mov
dec
adc
mov
aas
loopne
nop
add
adc
dec
lods
push
shlb
lret
mov
sub
test
sti
xchg
xchg
adc
sbb
cmp
adc
inc
mov
mov
or
and
mov
and
andl
mov
cmp
ret
js
adc
lret
jne
adc
and
mov
dec
jmp
out
ret
or
insb
xchg
clc
dec
test
je
das
push
orl
xchg
and
cmpsl
fsubl
and
bound
inc
push
out
pop
inc
jl
xchg
ret
push
mov
les
call
fs
pusha
jge
les
push
xchg
dec
xor
das
and
mov
enter
xor
mov
es
or
out
imul
cmp
cmp
xor
orb
adc
stos
mov
mov
mov
mov
pop
mov
pop
pusha
push
mov
mov
in
inc
es
rclb
into
fsubp
adc
and
adc
or
lea
xor
mov
icebp
loopne
lods
popa
adc
pop
daa
insb
nop
sub
fadds
repz
fsubr
or
rcrl
fs
add
popa
push
adc
pop
or
cwtl
ljmp
xchg
inc
inc
mov
and
gs
adc
inc
in
pop
gs
orb
sbb
mov
js
adc
iret
xchg
add
add
dec
shll
in
shrl
shrl
rolb
cmpsb
pop
ss
loopne
push
cmpsl
sbb
lcall
jbe
xchg
imul
xor
mov
test
xor
shll
mov
xor
lcall
lcall
jb
cmpsb
imul
jmp
add
inc
push
push
je
xchg
mov
cmpsb
mov
lcall
jnp
add
insb
fwait
cmpsb
imul
in
xor
push
adc
mov
add
mov
or
adc
mov
or
add
mov
dec
shll
inc
sub
mov
roll
mov
cli
mov
cmpsb
push
cld
mov
cmpsb
jae
data16
add
cmpsb
insb
sub
in
mov
mov
bound
clc
mov
imul
push
sub
mov
bound
mov
scas
push
stos
or
xchg
dec
ret
push
push
mov
int3
mov
cmp
mov
imul
and
shll
lods
loop
pop
int3
dec
shll
lcall
pop
inc
roll
imul
lcall
int3
ret
fldenv
lods
mov
imul
cmpsb
imul
das
add
dec
push
inc
xor
inc
sbb
je
addr16
lcall
outsb
lods
sub
fwait
cmp
into
rolb
rorl
xchg
in
cltd
cmpl
sbb
test
orl
fistps
mov
clc
daa
lahf
movsb
mov
imul
cmpsb
scas
scas
mov
scas
mov
mov
pushf
xchg
pushl
mov
add
rclb
popf
int
mov
cmp
mov
fstpl
xor
lcall
xor
jne
cmp
call
out
add
mov
lea
xchg
lahf
pushf
popf
xchg
call
scas
scas
lods
lods
mov
cmpsl
movsb
movsl
mov
mov
mov
sti
clc
stc
mov
cld
std
repnz
lret
add
aas
aaa
lock
div
xor
into
iret
int3
int
ret
rol
lahf
cld
inc
mov
fst
rcl
rcl
xlat
aam
ljmp
out
out
in
in
loop
loopne
out
in
sbbb
ja
call
arpl
mov
ja
push
out
mov
les
insl
insl
das
jle
aam
or
shll
test
add
xchg
out
push
shlb
repz
int
dec
dec
xor
adc
xchg
push
hlt
aas
test
pusha
lock
pushf
sub
cmpsb
jnp
ret
add
rcr
pop
xor
or
fxch
xchg
or
pop
ds
sbb
sbb
push
pop
add
lods
ds
add
xor
cwtl
pop
xchg
mov
shll
outsb
push
jae
iret
mov
les
xor
shll
fs
pop
cmpsb
imul
dec
arpl
fnsave
lcall
adc
iret
mov
mov
fdivr
fnstsw
sti
cmp
adc
jnp
pushf
adc
into
enter
frstor
sarb
mov
pusha
xorl
or
pop
push
mov
inc
cmp
or
je
sub
pop
or
sbb
or
jmp
add
pop
sar
add
mov
lahf
add
lret
mov
orb
mov
inc
cmp
rol
xchg
jb
xchg
inc
movsl
add
mov
adc
jg
scas
dec
addl
cmp
in
iret
adc
in
testb
inc
out
inc
test
pop
ja
sub
and
lret
add
cmp
adc
nop
dec
notl
add
pop
mov
mov
test
mov
pop
mov
jno
or
dec
or
dec
jbe
mov
xchg
push
lock
add
or
shrb
dec
imul
loop
xor
add
lods
jg
adc
mov
adc
dec
popa
push
or
scas
call
mov
jp
loop
test
sbb
mov
aaa
pop
sbb
xor
pop
and
and
shrb
adc
mov
sub
lret
es
mov
flds
sbb
fsubl
jno
fmul
sbbl
scas
cmp
xchg
hlt
fwait
ja
cmp
xchg
outsb
vmread
pop
jbe
cmp
call
xchg
cmpsb
shr
and
fadd
adc
dec
pop
jnp
jo
in
mov
lahf
fcoms
nop
inc
add
sub
shrb
fsubs
add
xchg
inc
jle
push
mov
in
pop
mov
mov
cmp
inc
rcr
add
loopne
xchg
daa
dec
sahf
call
add
inc
add
or
adc
sbb
insb
rorb
or
in
leave
sub
inc
dec
cmovns
filds
in
imul
daa
pop
orl
cmp
addl
lea
movsl
scas
and
mov
add
xchg
xchg
outsl
int3
daa
add
rcrl
add
fxch
out
mov
add
aaa
sbb
insb
and
and
jns
inc
add
sahf
out
inc
inc
addr16
add
inc
push
sbb
mov
add
mov
xor
iret
loopne
insl
or
jmp
std
aas
inc
push
sysret
unpckhps
lret
push
sbb
insl
push
das
fs
mov
inc
das
inc
addb
nop
sbbl
dec
je
fs
andl
mov
rclb
outsb
inc
pop
testb
dec
push
push
aaa
in
xchg
daa
scas
nop
js
sub
xor
mov
pushf
cmp
or
insl
psubsb
push
xor
mov
fs
xchg
daa
xchg
add
sbb
sbb
repz
pop
ret
inc
add
adc
outsl
repnz
inc
sub
push
sbb
inc
sub
inc
dec
sahf
pop
pop
add
add
jns
in
add
lahf
add
or
repnz
leave
or
add
push
jmp
cmp
sti
inc
add
or
pop
pushl
jb
and
push
add
and
mov
js
nop
pushf
cmp
loopne
mov
add
lods
xchg
nop
js
nop
aaa
fmul
mov
xor
cmp
sub
mov
ds
add
fnstenv
out
jno
sbb
mov
shlb
xchg
andl
inc
bnd
xor
and
xor
repnz
add
ficoms
js
dec
dec
mov
push
loopne
roll
mov
orl
roll
fsub
out
jbe
enter
pop
dec
add
or
xchg
daa
dec
push
adc
or
out
leave
xor
cmp
inc
pop
adc
xchg
sbbl
xchg
xor
imul
sahf
cmp
movsl
inc
mov
xchg
add
dec
lods
add
xor
dec
sahf
pop
loop
jmp
add
jns
leave
std
dec
push
push
adc
sbb
xchg
daa
dec
sahf
and
sub
xor
leave
ds
or
or
sbb
je
jo
nop
pushf
cmp
rolb
aaa
xchg
nop
inc
push
xchg
clc
test
add
dec
push
aaa
int3
push
ss
pop
in
xchg
xchg
daa
iret
out
in
add
add
bnd
dec
adc
mov
xor
dec
and
jne
in
leave
orl
orb
daa
xor
add
cmp
nop
pop
inc
jl
jbe
leave
orb
mov
mov
nop
pop
ss
ja
mov
ja
daa
add
jns
popf
addr16
add
addr16
pop
mov
nop
add
xor
or
add
inc
jb
inc
push
ss
or
popa
clc
js
dec
sbb
js
nop
pop
in
and
fnstcw
jg
lods
add
sahf
cmp
repnz
mov
add
xlat
xlat
js
nop
add
push
ljmp
hlt
shl
xchg
daa
scas
dec
or
jns
leave
xor
inc
and
add
pusha
add
xor
pop
and
iret
inc
push
add
stc
into
sbb
out
pop
jnp
cmp
push
xchg
add
inc
cmp
test
mov
mov
scas
sarb
pop
xor
orl
outsl
icebp
cli
dec
mov
aas
add
sbb
jg
mov
xor
add
fs
push
add
popa
add
adc
jnp
cmp
daa
nop
add
nop
out
or
out
dec
pop
mov
fadds
dec
daa
cwtl
and
ss
loopne
rclb
call
dec
adc
mov
sub
in
xchg
addr16
xor
add
jne
dec
pop
push
pop
jl
addr16
jnp
iret
push
jae
jl
daa
dec
sahf
cmp
add
aaa
nop
pushf
cmp
test
jg
add
leave
add
enter
enter
jge
cmp
push
sbb
std
push
or
cmp
test
roll
push
out
xor
sbb
in
cmp
inc
add
pop
jb
inc
push
popa
push
or
cmp
jg
mov
or
repnz
inc
mov
adc
cmp
mov
adc
adc
fcoml
push
sbb
cld
push
add
jns
in
or
sbb
and
cmp
enter
gs
xchg
adc
jbe
jle
sbbl
xchg
xchg
pop
and
ud0
jle
sahf
cmp
jb
add
add
xchg
daa
dec
rolb
add
push
repz
in
jg
push
add
xchg
daa
mov
add
add
add
add
jb
pop
add
nop
or
pusha
loopne
or
je
orb
das
sbb
nop
push
cmpb
orb
xor
add
shlb
add
clc
xorl
push
or
nop
or
inc
and
and
xor
js
cmp
leave
andb
pushf
enter
test
repnz
daa
popl
lcall
inc
lods
mov
adc
dec
or
mull
jnp
lock
cmp
push
add
jg
ss
insb
das
test
daa
ror
orb
clc
enter
dec
push
andl
in
mov
jg
push
pop
push
fs
fnsetpm(287
push
outsl
jbe
push
movsb
daa
nop
sbb
fs
xchg
add
loopne
sbb
leave
test
hlt
daa
test
push
or
adc
nop
or
sub
jo
or
add
inc
addr16
pop
das
enter
add
imul
xchg
add
test
popf
incl
daa
mov
cmp
jbe
push
push
sbb
add
iret
add
dec
sahf
cmp
add
add
add
xchg
push
incb
push
pop
or
pop
or
or
decb
leave
mov
or
xchg
je
or
push
cmp
xchg
pop
push
xchg
or
jl
xchg
jns
xchg
pop
nop
add
movsb
lods
pop
mov
andl
and
loopne
xchg
and
xor
inc
pop
push
add
and
nop
sbb
xor
sbb
test
cmp
xchg
rcrb
clc
dec
jbe
and
je
jbe
pop
inc
cmpsl
mov
nop
addr16
xchg
xchg
or
mov
push
insb
nop
inc
mov
aaa
cwtl
inc
push
sbb
fdivl
decl
or
clc
pop
adc
dec
and
dec
inc
mov
subl
in
pop
add
add
andl
dec
dec
mov
pushf
sbb
jb
jg
movsl
pop
mov
enter
pop
leave
add
add
xor
repz
pop
or
cmpsl
mov
nop
pushf
cmp
daa
and
jo
mov
and
pop
inc
add
add
nop
or
push
mov
daa
test
leave
leave
add
fistps
pop
outsl
lea
in
mov
mov
sbb
mov
fwait
push
ss
or
sarb
daa
orb
mov
enter
lock
mov
add
int3
sub
das
inc
sahf
inc
push
xchg
dec
pop
arpl
push
sbb
js
xorl
mov
xchg
add
scas
mov
dec
push
xor
leave
or
or
cs
and
or
outsl
lea
add
pop
or
or
aaa
pop
inc
and
pop
cmp
dec
push
push
pop
xor
je
in
addr16
leave
xchg
daa
pop
xchg
add
add
cmp
lods
mov
mov
xchg
or
push
fistps
push
out
push
clc
pop
add
repnz
daa
or
adc
sbb
dec
push
jb
sub
xor
cmp
in
inc
push
dec
sbb
daa
dec
push
pop
push
fs
in
push
jge
test
dec
xchg
and
jb
scas
es
push
enter
and
rcr
push
loope
and
jb
repnz
cli
das
pop
jb
in
add
push
and
sub
push
dec
push
pushf
cmp
jb
aaa
pusha
cmp
jno
enter
orl
orl
mov
orl
ror
fnstcw
in
loope
jmp
pop
cmp
stc
pop
fistps
dec
cmp
leave
adc
and
push
leave
inc
dec
sahf
xor
cmp
cmp
in
push
dec
push
push
push
pop
leave
xchg
daa
pop
gs
insl
pop
jne
pushf
cmp
enter
xchg
mov
enter
sahf
cmpsb
bound
dec
sahf
cmp
arpl
jns
nop
xchg
data16
into
xlat
bound
sbbl
mov
nop
pop
xchg
pop
cld
jae
xchg
out
push
push
mov
inc
ds
pop
inc
imul
add
xchg
sub
scas
in
int
adc
ret
sub
imulb
and
cmpsb
ja
sbbb
loopne
daa
je
in
push
stos
inc
adcb
popa
and
in
orb
inc
std
inc
push
cs
insb
movsl
das
mov
pop
add
mov
adc
jnp,pt
in
xchg
movsl
mov
add
jecxz
or
je,pn
jg
mov
lret
in
adc
fwait
ja
inc
sbb
movsl
stos
mov
imul
lods
scas
test
mov
scas
mov
mov
in
scas
lret
add
mov
push
mov
adc
mov
rcll
xchg
adc
push
or
pop
jg
incl
push
dec
dec
push
inc
push
pop
inc
inc
push
pop
inc
dec
inc
push
push
pop
dec
dec
push
inc
inc
dec
inc
push
xchg
fcoms
jg
rclb
popf
sahf
outsl
in
adc
fsubrs
ss
fcmovb
xor
and
movsb
outsl
inc
sbb
packsswb
je
add
icebp
push
divb
cwtl
iret
adc
or
popw
mov
or
pop
repnz
gs
incl
jo
negb
mov
leave
or
cld
les
int
movzwl
mov
rcrl
lea
jmp
fisttpl
pop
rorb
inc
cmp
pushl
add
or
aas
sbb
scas
push
lock
sbb
pusha
push
out
pop
imul
les
push
jns
or
and
xchg
sub
add
enter
or
cld
inc
fmul
dec
clc
lret
add
sub
jmp
sbb
mov
popa
xor
jne
outsb
xor
fisttpl
ljmp
pushf
subl
incl
pop
mov
add
sbb
xor
aam
xor
add
jg
ret
out
call
dec
daa
inc
into
push
push
pushl
inc
call
cwtl
mov
jg
adc
cs
push
push
popa
stc
ljmp
imul
xchg
arpl
das
dec
vpor
pop
shl
cmp
xor
mov
lret
add
in
mov
rcll
imul
cld
loopne
lcall
nop
jl
sbb
sub
rcrl
add
lock
mov
test
adc
dec
neg
pop
pop
inc
xor
lcall
loopne
mov
test
mov
imul
sbb
xor
movsl
or
hlt
loopne
rorb
dec
mov
xchg
mov
xor
shll
inc
xor
or
lcall
les
xchg
mov
cmpsb
jmp
jg
vpcmpeqd
pop
les
lcall
nop
test
cmpsb
imul
inc
icebp
push
sub
in
outsl
mov
push
incb
or
push
push
js
aaa
mov
ror
add
jmp
dec
jl
insb
lods
mov
jno
dec
loope
stc
fists
das
addr16
push
icebp
push
aaa
pop
mov
in
or
inc
hlt
pop
shrb
sbb
rcr
and
cmp
mov
dec
jmp
hlt
cmp
addr16
mov
xchg
mov
push
push
push
push
mov
xchg
cmpsl
div
inc
and
jmp
push
push
fidivrl
fstp
filds
push
testl
ja
sbb
mov
dec
stos
mov
cmpsb
push
push
and
cs
ret
jecxz
fwait
out
xor
dec
mov
enter
ss
cwtl
jp
mov
aaa
pop
jp
stos
push
mov
add
pushl
jmp
dec
cmp
xor
int3
mov
cli
mov
neg
mov
sbb
stc
sti
and
mov
mov
out
popf
mov
aaa
pop
call
call
lcall
mov
aad
fimull
lcall
jge
cmp
ret
aaa
and
popa
jnp
outsb
mov
call
sub
movsl
iret
scas
dec
pop
stos
push
xor
xor
aas
ret
xchg
push
les
das
insb
pop
jae
jne
push
inc
gs
stos
not
repnz
jmp
push
add
insb
clc
leave
inc
outsl
jmp
lock
mov
loopne
mov
pushl
pop
cmp
lret
xchg
and
cs
out
test
test
or
jnp
mov
mov
in
pop
mov
scas
enter
xor
sub
fsubl
ljmp
lock
ficoml
dec
inc
cmp
sub
aaa
jge
jg
fwait
dec
adc
push
mov
mov
push
sbb
and
rsm
inc
or
cld
mov
cld
lods
jo
cmc
push
push
adc
jg
adc
pop
in
stc
std
mov
jmp
bound
push
pop
adc
loop
out
mov
imul
mov
inc
data16
sbb
test
repnz
pop
dec
pop
addr16
and
pop
fiaddl
inc
inc
clc
incl
pop
xorb
pop
cmp
aad
aaa
mov
notb
sbb
jg
lock
jae
stos
daa
push
iret
cmp
or
mov
outsb
loopne
mov
inc
add
das
inc
test
add
pslld
popa
int
jo
adc
aam
in
pop
inc
pop
and
mov
or
and
adc
dec
push
sbb
or
ret
outsl
outsl
xor
inc
scas
repnz
mov
outsl
popa
mov
xor
jns
mov
sar
pop
mov
mov
montmul
cmpsb
xchg
mov
out
imul
aaa
cs
and
adc
sti
pop
mov
sub
sbb
xchg
jg
mov
jmp
adc
icebp
fistl
cmpsl
xor
jle
jp
ja
cs
push
pop
add
push
mov
add
push
mov
lcall
out
dec
mov
and
cmp
repz
loope
stc
pushl
dec
fsub
cmp
mov
loop
dec
pop
pop
sbb
in
ljmp
movsl
shl
push
nop
xchg
stc
push
js
add
movsl
push
fistpll
jmp
sahf
inc
sub
xchg
ret
insb
bnd
scas
jae
cmpb
fistpl
sbb
adc
and
xchg
adc
mov
xor
lds
pop
push
aaa
dec
jle
je
scas
pop
punpcklwd
aad
imul
push
stc
ja
decb
push
lea
jbe
imul
adc
incl
jnp
imul
jae
bswap
mov
dec
sub
jmp
aas
cmp
aas
call
call
lods
push
xchg
xor
arpl
mov
push
xchg
inc
xlat
fistl
out
add
in
icebp
das
aaa
es
sbb
and
ret
daa
jl
data16
mov
stc
push
push
shr
lahf
xor
pusha
movsb
inc
std
daa
pop
xchg
cmp
xor
out
and
fimuls
or
gs
mov
insb
loope
jae
jg
std
dec
add
popa
jne
xchg
lcall
adc
es
sub
leave
loope
dec
push
fsubr
repnz
or
jle
test
dec
and
push
mov
or
movsb
insl
fstpl
rorb
and
jecxz
jo
aas
ljmp
int3
scas
pop
in
xchg
mov
jmp
pop
aam
int3
lock
int
lock
pusha
jae
das
ret
loopne
pop
dec
call
fsubs
and
into
and
sub
pop
mov
pop
pop
pusha
out
xchg
cld
incl
repz
movsb
scas
and
es
mov
dec
add
or
in
add
mov
inc
int3
sub
dec
subl
sbbl
xlat
imul
sbb
movsb
pop
mov
stos
xchg
js
push
bound
inc
pushf
push
out
mov
lret
ja
pop
push
jae
lods
fwait
iret
adc
aam
lahf
mov
mulb
pop
mov
adc
push
nop
mov
in
adc
mov
mov
inc
push
cmpsl
sti
fldcw
dec
sub
lret
mov
sub
imulb
sub
add
inc
addr16
cmpsl
lods
in
push
imul
jbe
je
outsb
dec
bound
cmp
ja
inc
and
lods
jnp
repz
pop
idiv
jmp
int
mov
insb
addl
push
mov
mov
in
ficompl
out
jg
out
mov
jg
mov
push
in
cld
jg
pushl
mov
add
sahf
xchg
decl
xchg
jo
outsl
mov
pop
xor
cld
cmpsb
xchg
xlat
stos
adc
daa
cmp
cmpsb
lret
add
push
mov
sub
sarl
inc
push
adc
lea
popf
stos
std
lret
pop
or
or
aas
call
dec
and
push
cmp
insb
out
xchg
mov
outsl
cs
sbb
shr
lahf
roll
mov
lcall
push
jecxz
cmp
jo
mov
dec
cs
or
in
out
call
push
insb
inc
lret
cmp
daa
int
sub
sbbl
and
outsl
or
fneni(8087
das
fwait
sub
push
ret
ja
push
arpl
mov
jmp
xchg
loopne
lcall
enter
das
push
pop
mov
movsb
xchg
jp
jbe
push
jg
ljmp
lock
fwait
cmp
inc
das
xchg
pop
loope
xchg
xchg
mov
call
or
cli
shlb
mov
mov
ja
mov
out
mov
test
loopne
cltd
insb
js
nop
inc
mov
sub
pop
mov
fadds
mov
gs
dec
or
decl
adc
shlb
push
dec
or
jno
pop
jmp
je
jecxz
call
or
sub
loopne
jne
scas
and
cmpsl
repz
call
bound
orl
pop
loop
dec
pop
mov
int
aas
rolb
inc
jge
or
fidivrs
lret
push
jb
clc
pushf
adc
push
test
jbe
inc
dec
lea
popa
xchg
jl
sub
xchg
sub
int
mul
inc
test
loop
ficoms
dec
or
cld
aaa
fnsave
imul
pop
out
mov
xor
xor
fdivrp
idivl
cmp
cmp
arpl
aaa
add
xor
pop
jecxz
shll
inc
jp
arpl
dec
push
jge
inc
fstpl
mov
jg
jg
inc
mov
fs
mov
push
fwait
sub
pop
cld
fcmovnu
dec
mov
int
js
mov
fwait
clc
daa
mov
xchg
cli
je
rcr
decl
dec
pop
cmpsb
sbb
mov
inc
outsl
movl
test
ja
insb
outsb
arpl
fwait
shll
xchg
in
in
dec
add
push
jmp
push
jo
out
cmp
test
jmp
mov
mov
jnp
adc
mov
mov
into
push
or
mov
inc
jno
xor
das
fstpl
jns
mov
sarb
dec
jo
adc
xor
adc
scas
jg
ficompl
or
push
mov
adc
cmpsb
and
leave
fwait
lods
push
jl
les
pop
dec
mov
stc
out
lret
shl
jb
cmpsl
sub
test
pusha
jo
and
pop
jg
or
add
dec
mov
test
add
mov
in
pop
push
daa
add
cmpsl
add
or
je
stos
je
mov
aad
or
and
lock
and
arpl
mov
jae
add
mov
rorl
or
pusha
imul
decl
arpl
je
outsl
outsb
inc
inc
pop
jg
sti
daa
bound
pop
arpl
imul
sbb
jae
jge
jae
outsb
and
push
and
ss
adc
aam
or
pop
cmp
sahf
pop
data16
into
jmp
icebp
jb
sbb
mov
or
insb
or
sub
xchg
subl
push
das
das
dec
mov
xchg
mov
dec
jmp
sbb
jnp
add
sbb
rcll
inc
push
outsl
fs
adc
test
xchg
inc
push
mov
cmpsl
push
mov
das
jb
cltd
pop
inc
lahf
fiadds
bound
sub
xchg
insb
roll
cmpsl
aaa
sub
mov
mov
movsl
lock
pop
stos
pop
sub
push
xor
jg
sbb
cmpsb
add
cmp
pop
and
call
add
outsb
shrd
jmp
cmp
out
movzbl
jmp
mov
out
push
mov
into
inc
arpl
pop
mov
sbb
test
dec
sub
jg
aas
mov
rcrb
cmpsb
fidivl
aad
ds
arpl
addl
mov
pusha
adc
movsb
iret
test
pop
pop
add
aas
jo
insb
fldenv
jno
adc
test
xchg
mov
pop
add
je,pn
fst
inc
push
aaa
jno
mov
fadds
cmp
shll
push
and
jno
mov
jp
or
cmpl
mov
mov
aam
ds
sbb
imul
inc
cmp
jo
xor
pop
iret
jg
leave
pop
fldt
outsb
std
mov
les
mov
rcll
jae
fmulp
mov
adc
dec
push
outsl
push
jbe
sub
xlat
mov
imul
xchg
cltd
xchg
in
lcall
xchg
mov
cmp
stos
push
pop
cmp
js
sbbl
lock
daa
ror
adc
mov
mov
stos
pop
cli
mov
rolb
xlat
aas
pop
fstps
js
sti
jo
xchg
inc
insb
jo
das
pop
inc
sbb
jns
jp
xchg
xchg
fnsave
stos
out
pop
xchg
sub
pop
xchg
sbb
stos
pop
sub
icebp
mov
mov
bound
mov
cmpb
adc
jge
ds
orb
fidivl
mov
inc
pop
ud0
sbb
mov
insl
mov
dec
pop
filds
mov
stc
incl
xchg
ja
push
mov
outsb
or
js
and
or
cld
popl
xlat
mov
adc
mov
push
jbe
fidivl
and
push
mov
je
mull
paddsb
pusha
fnsave
push
or
aam
mov
mov
jg
mov
push
cmp
and
out
or
mov
fucomip
sub
or
xor
decl
xchg
addr16
push
dec
rorb
rcrl
dec
cmovge
int
icebp
dec
inc
std
jbe
push
sbb
mov
out
aaa
test
sbb
rcrb
or
dec
fcmovnbe
and
jecxz
lock
in
push
ret
sbbl
jecxz
addr16
or
sub
sahf
fcomps
lcall
jnp
jo
add
dec
repnz
aas
cmp
loopne
jmp
adc
push
cmc
insb
aaa
sub
subl
pop
jge
out
pop
pusha
xchg
cmp
sar
xchg
jne
lret
or
sbb
repnz
dec
das
aaa
mov
mov
je
jmp
pop
loopne
adc
jl
jb
es
rcl
and
push
insb
pop
mov
xchg
pop
xor
outsl
addr16
inc
lock
fisubl
xchg
outsl
decb
mov
cmp
sub
std
push
ret
enter
pop
jg
inc
ds
js
jbe
js
insb
jl
and
adc
or
lcall
stc
cmp
call
mov
lahf
inc
ss
mov
ljmp
dec
add
repz
fists
scas
outsl
loopne
sub
stos
dec
mov
fistps
pop
jae
xor
fwait
popf
dec
idiv
lods
pop
ja
or
test
repz
dec
add
mov
sub
rorb
adc
lret
outsb
dec
dec
sbb
pop
pop
mov
cwtl
add
test
add
mov
sub
mov
add
or
insl
and
add
or
repz
dec
add
add
insb
add
aas
jno
inc
xor
js
int
cmp
add
inc
stos
test
push
rcll
out
mov
mov
jp
rclb
and
sbb
aas
jbe
add
in
or
repz
jg
add
lods
movsb
fidivrl
loopne
imul
sbbb
pushl
sahf
mov
fwait
xchg
dec
test
pop
inc
fwait
adc
pop
in
call
movsl
push
cmp
or
loopne
push
ds
outsl
jb
cmpsb
xchg
dec
pop
push
adc
xchg
lret
aas
loop
test
ror
add
scas
stc
jb
aas
loop
xor
je
xchg
push
stc
push
aaa
ds
ffreep
pushl
push
in
cmp
insl
stos
shl
imull
add
cli
fcomi
xchg
jns
pop
ficomps
jnp
mov
sub
ret
push
xor
dec
aam
jnp
mov
rorl
add
mov
jl
or
xor
inc
rolb
push
cmp
jp
into
ss
pop
les
inc
push
in
sti
rclb
pop
add
imul
push
add
push
aaa
cmp
inc
dec
ja
cmp
pop
push
insb
jmp
repnz
jno
out
xchg
cmp
xor
rorl
aas
push
mov
pop
fwait
jmp
je
jo
pop
imul
fisttps
push
mulb
rcrl
daa
cltd
pop
cli
sub
gs
jb
add
mov
inc
add
insb
or
jmp
add
add
gs
je
inc
jbe
outsb
je
dec
jne
gs
fwait
insb
aaa
push
gs
push
jae
or
or
gs
mov
outsl
imul
arpl
je
std
add
outsl
jb
test
dec
bound
arpl
push
xor
gs
popa
jo
imul
imul
cs
dec
jae
fidivs
pop
push
data16
sbb
popa
popf
jmp
jo
xchg
push
and
mov
push
jae
inc
mov
outsb
insl
pushl
jbe
arpl
outsl
inc
and
ss
insb
push
pop
arpl
fs
paddusw
idiv
dec
outsl
popa
fs
imul
jns
cwtl
push
imul
push
outsl
inc
or
inc
jb
gs
insl
mov
dec
jne
iret
subw
outsb
je
inc
push
push
jae
outsl
popaw
jne
mov
outsb
xchg
mov
in
push
inc
imul
mov
jbe
iret
or
imul
dec
outsl
fs
testb
sti
xchg
pop
cltd
push
push
pop
mov
jns
adc
jb
jne
insb
std
fisubl
je
je
dec
jae
bound
je
jnp
adcl
imul
lods
push
dec
pop
dec
push
pop
fidivl
or
mov
insl
arpl
lea
std
push
arpl
ret
imul
pop
inc
jne
add
jo
loop
push
dec
fs
inc
fisttpl
sub
insb
or
and
push
push
dec
sub
cli
jmp
pop
mov
mov
jp
dec
js
dec
fabs
lret
xor
pop
loopne
mov
inc
push
into
dec
ss
pinsrw
ret
pop
mov
inc
insl
and
ret
jmp
or
jo
es
adc
popa
aaa
imul
xor
mov
subl
in
sbb
outsl
sub
dec
adc
mov
pop
push
mov
adc
push
mov
xchg
push
jb
aas
call
arpl
push
mov
jnp
inc
push
xor
insl
push
jnp
jbe
and
insl
jo
fisubl
add
outsl
dec
sub
movsb
cmp
inc
mov
inc
xorb
or
lock
scas
push
push
sbb
xchg
ss
fs
jae
push
shlw
cmp
xor
inc
or
pop
imul
addl
mov
jns
daa
push
loopne
dec
cwtl
jmp
dec
gs
out
int
jnp
sbb
push
jne
jns
jp
mov
or
addr16
jo
sub
xchg
rcl
xor
fwait
in
push
inc
popa
arpl
dec
popa
aas
imul
cmp
pop
pop
outsl
inc
aas
and
cwtl
jbe
popa
pop
cmp
arpl
sarb
pop
pop
push
push
jae
cmp
push
sub
dec
in
aas
fistl
xor
push
inc
inc
dec
push
inc
inc
dec
dec
inc
pop
pop
aas
xor
data16
cmp
sub
rcr
inc
pop
sbb
sti
push
dec
inc
inc
push
xor
insb
arpl
cmp
dec
dec
inc
inc
mov
push
jnp
push
inc
dec
je
jnp
fimuls
pop
mov
scas
adc
nop
sub
decb
mov
enter
aas
dec
adc
pop
mov
add
pop
sub
sarb
push
pop
or
ror
mov
jmp
mov
clc
and
xor
fcoml
fsubrs
dec
outsb
add
pop
and
pop
repz
xor
fnstenv
pop
imul
xor
pusha
or
inc
cmp
jb
popl
out
xchg
adc
push
mov
pop
lock
jmp
pop
sbb
sbb
sub
mov
sub
push
aaa
divb
inc
inc
cs
and
outsl
xorb
and
xchg
testb
inc
add
inc
sub
outsl
add
jge
sub
nop
push
or
sub
orl
or
inc
xor
inc
adcl
or
jne
leave
aas
int
pop
nop
push
aas
dec
rclb
sub
rcrl
xor
mov
pop
add
fisttpl
sub
inc
test
mov
lods
imul
add
insl
adc
xchg
xor
pop
bound
sbb
int
lods
jbe
cmp
add
mov
popa
cs
mov
pop
fldcw
and
in
add
mov
dec
ljmp
sub
or
push
sbb
or
insl
xorl
lahf
inc
loop
and
insb
and
inc
and
arpl
mov
lods
xor
lea
cmp
mulb
bound
addr16
fs
inc
sub
adc
jo
inc
push
imul
data16
std
out
fcomps
data16
inc
dec
repnz
push
xor
fs
imul
mov
pusha
outsl
daa
inc
push
xor
push
popa
out
je
mov
js
inc
ret
jns
jmp
jmp
gs
das
pop
roll
inc
and
rcrb
inc
inc
outsb
pop
adc
cmp
jns
pusha
jo
push
jle
sub
mov
and
push
pop
inc
cld
xor
and
push
pusha
lock
inc
xor
inc
pusha
cmpsl
or
lret
adc
dec
mov
pop
lea
xor
shlb
gs
out
inc
sub
ss
add
mov
cmp
mov
cwtl
xor
ljmp
fsubl
mov
dec
dec
cmp
xchg
mov
insb
pop
xor
cmp
sub
add
mov
inc
add
out
jl
pop
popa
fs
jmp
sub
test
imul
in
fimull
ret
ror
outsb
gs
or
pop
icebp
push
xor
aas
xor
pop
or
ja
jae
ja
ret
push
mov
inc
outsb
cltd
or
insl
jle
addr16
mov
imul
push
jg
cmp
and
or
movsl
mov
push
addb
and
mov
gs
push
inc
sbb
in
sub
jle
fs
repnz
je
icebp
lods
cwtl
test
jmp
pop
mov
xor
push
fadds
adc
outsl
pop
cmp
and
stc
and
lahf
jae
in
ljmp
cwtl
adc
push
mov
addr16
add
lahf
pop
push
pop
mov
cmp
movsl
iret
push
and
repnz
mov
and
test
dec
push
aas
outsl
outsl
pop
sub
imul
jne
or
sub
mov
mov
add
insl
jmp
enter
mov
dec
adc
inc
outsl
cmp
and
stos
sbb
popf
cmp
and
lods
and
xor
lea
daa
or
lret
mov
xchg
scas
aam
test
push
mov
dec
imul
pop
fimuls
hlt
dec
jae
adc
push
dec
jmp
xor
movsb
dec
push
stos
cli
pop
add
es
pop
and
jae
insb
xor
fcmovnbe
negb
add
decl
or
or
xor
adc
adc
adc
or
mov
ja
adc
or
pop
das
and
or
sti
neg
decb
pop
adc
push
adc
sbb
or
sbb
push
add
insl
and
push
pop
sbb
sub
or
or
or
xor
mov
in
pop
or
adc
sub
adc
sbb
es
imul
sti
or
or
pop
adc
add
pusha
push
adc
sbb
mov
pop
push
or
and
sub
mov
or
or
adc
adc
or
out
ja
pop
popw
push
or
or
adc
adc
pop
mov
incl
push
and
aaa
sub
add
inc
sbb
pop
mov
mov
sbb
add
push
sbb
or
jg
std
in
sbb
or
adc
or
cmp
xchg
or
adc
sbb
jg
adc
lock
push
adc
sub
adc
sbb
mov
push
pavgb
pop
push
push
fstpt
pop
cmpsb
or
pop
cs
fisubrl
popl
sbb
icebp
push
or
adc
or
push
adc
outsb
push
adc
cmp
adc
push
push
push
jle
sub
daa
sbb
mov
sbb
lock
mov
pop
sbb
inc
rcrl
jg
fists
or
repnz
femms
or
cmp
or
fmuls
or
jl
dec
adc
xchg
xlat
or
inc
xlat
add
or
push
sbb
and
nop/reserved
or
fcmovu
jbe
sbb
push
daa
sbb
push
lea
or
imul
adc
fbstp
sbb
mov
cmp
adc
sbb
inc
mov
popa
fldl
sbb
mov
sub
insl
sbb
and
sbb
sbb
jne
mov
push
adcb
xor
sub
pop
sbb
or
int
adc
stos
sbb
outsl
cmp
and
mov
sub
add
push
dec
repz
adc
push
sbb
sbb
xor
jbe
cmp
stos
sbb
adc
or
adc
lea
ds
inc
jnp
in
lods
mov
adc
add
das
sub
ret
and
sub
xchg
jae
adc
mov
adc
sbb
scas
adc
adc
repz
or
and
test
push
push
lea
adc
sbb
lods
xor
or
repnz
test
aam
pop
or
or
pop
jge
test
xor
adc
lock
cmp
test
xchg
adc
cmp
adc
lret
imul
cmp
pop
dec
int
push
adc
imul
and
scas
mov
cwtl
test
or
lods
add
sbb
das
or
lods
jo
fildl
add
cmp
or
add
push
dec
rorl
or
cs
insl
lods
in
sub
sbb
fs
push
or
or
outsb
mov
adc
and
mov
adc
cmp
adc
sub
dec
pop
insl
xlat
or
sbb
popa
mov
sbb
push
sti
cmp
sbb
lock
mov
push
es
or
sbb
jo
mov
icebp
sbbb
aas
sbb
cltd
sbb
push
push
or
adc
push
mov
ljmp
pop
movsl
push
pusha
loope
insl
outsb
scas
aad
adc
sbb
or
outsl
or
inc
or
pop
jp
mov
push
cmpsb
cmp
out
out
dec
in
or
sub
orl
push
or
cmp
mov
ret
adc
dec
push
sahf
adc
fisubrl
jbe
xor
fcmovne
push
and
cmp
push
cmc
xchg
pop
push
lods
push
push
mov
pop
in
cmp
sbb
pop
adc
or
scas
adc
or
sbb
pop
stos
shll
cmp
or
and
add
jo
sbb
or
push
sbb
adc
mov
rcrb
jnp
or
jmp
fcompl
sbb
cli
pop
adc
insl
xor
ja
sbb
adc
cmp
mov
sbb
fwait
nopl
push
sbb
dec
popa
and
pusha
xchg
mov
inc
lods
rolb
leave
and
ret
aam
mov
decb
and
sbb
and
mov
add
shl
xchg
out
mov
js
out
and
and
jo
pminub
adc
sbb
adc
add
fidivrs
or
push
jae
or
and
push
leave
lret
inc
cmpsl
or
and
or
lcall
and
ja
ret
cmp
sbb
mov
or
and
ss
insl
int3
push
or
and
add
xor
sbb
adc
adc
and
push
sbb
insl
or
pop
lahf
push
cld
mov
sbb
sbb
sbb
xor
and
xor
mov
add
adc
add
loopne,pn
dec
pop
or
or
pop
test
push
lea
and
and
xlat
or
in
sub
push
and
fldt
adc
sub
sbb
xchg
pop
ret
shll
sbb
mov
or
and
sbb
inc
je
adc
dec
insb
or
js
cmp
std
push
sbb
and
add
pop
sbb
or
add
lods
popa
popf
cmc
cltd
sbb
sbb
sbb
lea
insl
int3
adc
dec
das
or
mov
add
mov
or
js
data16
pop
ljmp
dec
daa
out
and
test
or
jno
mov
add
xchg
pop
dec
dec
test
or
sbb
push
outsb
cmp
shlb
ucomiss
adc
xor
pop
rcrb
mov
add
adc
ret
lods
rcll
adc
sbb
mov
cmpsb
sub
push
or
pop
or
pop
or
daa
jae
cmp
mov
pop
push
or
dec
insl
and
or
test
inc
mov
lock
mov
xor
ret
sbb
sbb
ljmp
pop
nop
xor
dec
sbb
push
or
std
in
outsb
pop
pop
cmpb
or
sub
and
adc
sarb
mov
mov
jl
imul
xor
insl
pushw
sub
add
add
movsl
scas
and
xchg
testl
jns
in
xor
rol
es
mov
ret
sbb
insl
xchg
adc
cmp
daa
data16
out
filds
sbb
or
sbb
addb
or
jl
xchg
mov
and
lret
adc
mov
and
lcall
outsb
rorb
data16
push
sbb
lcall
das
lock
add
push
pop
xchg
cwtl
jne
aas
mov
adc
add
rorb
adc
cmp
inc
cmp
movsb
repnz
adc
jae
lods
xchg
sbb
xor
cs
push
mov
pop
pop
lods
sub
inc
movl
xor
lods
mov
or
dec
pop
adc
adc
or
sub
dec
imul
dec
movsl
test
adc
jno
or
dec
or
and
push
and
stos
pushf
inc
andl
push
pop
push
sbb
adc
xor
inc
mov
sbb
out
js
icebp
mov
pop
es
or
rolb
in
jae
jecxz
push
pop
jno
or
push
fst
fmuls
rorb
xor
mov
int3
adc
sub
aaa
xor
lods
jp
adc
mov
or
ret
inc
das
test
xchg
push
fcmovbe
inc
jae
movsb
push
adc
mov
subl
enter
xchg
stos
xchg
pop
fistl
or
mov
xchg
mov
leave
test
mov
mov
dec
inc
push
fistl
es
pop
insb
sub
xchg
adc
popf
add
dec
inc
es
xchg
xchg
push
ss
push
lddqu
add
cmp
dec
sbb
movsl
inc
loope
or
mov
scas
int
ret
cmp
pop
dec
mov
add
inc
sbb
pop
imul
repz
ret
or
pop
sbb
pop
mov
lds
pop
push
test
pop
and
push
mov
out
enter
ljmp
push
mov
loopne
cmp
ds
sbb
in
dec
or
es
xor
adc
test
sbb
sub
ret
cmp
pop
cli
push
and
sti
or
mov
push
jmp
popa
imul
xchg
and
ret
ficoml
adc
jnp
cmpsb
xchg
pop
sbb
pushl
sub
adcl
sbb
pop
in
mov
pop
adc
fsubs
cmp
pop
lea
jne
fistpl
pop
or
push
inc
or
push
lds
call
mov
enter
sub
pop
les
and
addl
je
ljmp
cmp
or
mov
or
fwait
pop
test
and
loope
shrb
bound
cmp
push
lret
ljmp
popa
iret
xchg
mov
and
sbbb
jnp
and
push
mov
mov
fadd
sbb
hlt
push
inc
cmova
cmpsb
pop
mov
jne
push
pop
push
adcb
cli
pop
imul
or
add
loope
out
shrl
xor
into
cmp
or
inc
xchg
mov
aaa
xor
pop
add
and
xor
aam
aad
pushf
push
inc
inc
fcmove
movsl
or
test
push
or
mov
jnp
push
je
mov
sbb
inc
scas
mov
inc
jne
sub
jp
xchg
or
sbb
pop
movsl
bound
int
xor
or
rolb
mov
data16
xor
cmp
inc
adc
cmpsb
push
or
rolb
daa
or
lahf
xor
ret
jmp
sbb
mov
fwait
sbb
xlat
cmp
daa
ja
aas
or
test
lahf
into
sbb
adc
xchg
cmp
or
lea
mov
adc
lods
das
dec
movsl
or
insb
subb
fistpl
xchg
xor
in
dec
xchg
push
or
pop
mov
jmp
mov
push
outsl
sbb
pop
jp
sub
and
fcmovnu
push
xchg
sbb
pushf
sub
pop
pop
fisttps
adc
inc
sbb
adc
int
sbb
jae
jae
sbb
add
fisttpl
les
mov
aam
push
loopne
inc
or
es
mov
inc
or
ss
dec
stos
shlb
xor
cmp
in
mov
sub
bswap
nop
or
xor
add
adc
mov
pop
loopne
sbb
jae
test
push
push
lahf
push
stos
mov
cmp
adc
dec
ret
dec
test
lods
sbb
adcb
xor
or
sub
cmp
mov
or
outsl
xchg
and
sub
pop
mov
xchg
inc
movsl
fcmovb
adc
cli
push
fiaddl
ljmp
dec
push
nop
adc
or
ror
sbb
cbtw
pop
ret
jo
pop
popf
movb
dec
out
sub
test
aaa
cmp
fwait
xchg
dec
sub
mov
xor
pop
sub
cmp
xchg
arpl
mov
sbb
ss
movsl
rorl
or
mov
hlt
xchg
testb
dec
sub
push
add
pop
xchg
or
mov
or
testb
pushf
es
sti
xchg
xorb
push
addr16
sub
popa
sbb
aad
sbb
lock
inc
pop
loop
inc
push
and
pop
fcmovu
push
cmp
cmp
and
sbb
and
fstps
sbb
xor
sbb
fildl
test
and
test
or
sbb
sub
mov
mov
loop
and
pop
dec
outsb
adc
push
xor
dec
sub
xor
outsb
push
mov
and
sbb
lods
lods
push
fistl
stos
xor
pop
loope
jo
and
out
xor
push
loope
and
dec
sbb
xchg
lock
pushf
push
add
cmp
push
in
lods
int
add
mov
arpl
sbb
cmp
lcall
push
add
or
adc
push
rcrb
out
mov
pop
sbb
jb
pop
adc
and
add
xor
inc
mov
fs
mov
in
fdivs
sbb
or
mov
cmp
inc
sbb
bound
xor
and
adc
push
pop
xor
orb
sbb
xchg
xchg
push
sbb
adc
jo
repz
adc
or
pushf
adc
push
push
mov
ja
pop
scas
popf
push
add
cmp
pop
mov
or
sub
sub
sbb
mov
push
mov
jno
cmp
outsb
arpl
pop
push
push
ret
xor
pop
xlat
sbb
push
imul
sbb
mov
scas
push
push
jle
orl
sbb
rclb
test
lock
sbb
add
push
jo
subb
call
xor
adc
or
imul
ficomps
push
test
mov
and
sub
adc
dec
cmp
inc
jae
fldt
or
and
not
sbb
jo
cwtl
mov
sub
add
cmp
dec
mov
dec
test
sub
insl
popa
scas
subl
cmp
sbb
or
sbb
jnp
xor
jae
cmp
xor
lds
wrmsr
xor
in
popa
ret
shrl
shrl
sbb
inc
imul
fbld
push
out
pop
push
cli
add
pop
sub
or
or
xor
push
push
sbb
pop
out
lret
sbb
addr16
pop
imul
dec
lret
add
sub
mov
out
xor
cmc
stos
adc
into
sbb
or
push
jne
sbb
xor
lods
test
in
lret
sub
ss
sub
or
and
dec
xchg
jecxz
adcl
test
pop
and
cld
push
sbb
push
add
fldt
cmp
or
aaa
fidivrl
cmp
and
inc
cmp
or
jno
adc
xor
fnsave
jle
lock
rcll
fcomps
es
push
fcompl
push
sbb
jo
sub
sbb
pop
push
mov
jo
push
aas
push
int3
mov
xor
loop
fsts
cmp
xchg
push
mov
cmpb
and
inc
add
das
sbb
addb
insb
psrld
sbb
ficoms
mov
das
adc
fdivl
pop
sub
inc
loope
xchg
or
fidivl
sbb
sbb
shlb
fisttpl
loop
fbld
inc
sbb
ss
orb
and
int3
or
imul
pop
lods
loopne
imul
cmp
push
hlt
push
aam
movsb
or
pop
xchg
test
sub
sub
adc
push
mov
sub
subb
insl
test
mov
xor
jp
and
sub
test
mov
lods
cmp
or
popa
popa
push
sub
test
push
cmp
sbb
or
mov
mov
jecxz
lret
adc
mov
or
mov
fwait
sub
jbe
xor
inc
inc
loope
fstp
es
into
aas
adc
xor
fcmovnbe
and
daa
push
jae
xor
sbb
clc
sbb
mov
jmp
adc
mov
sub
and
xchg
push
sbb
adc
push
popf
and
jp
or
pop
addr16
dec
or
pop
and
pop
or
or
and
inc
arpl
jo
aam
push
hlt
cli
xor
xchg
adc
lock
sbb
js
xchg
ret
in
aad
push
and
pop
sti
std
stos
rol
adc
pop
pop
insb
add
or
xchg
insl
daa
or
shll
mov
inc
shrl
xor
mov
dec
add
adc
or
aam
pop
andl
push
ss
add
push
xchg
adc
mov
cmp
cmp
push
sti
cli
fneni(8087
les
pop
or
xor
das
mov
push
leave
and
pushf
sub
push
outsb
dec
sbb
adc
pop
xchg
mov
dec
rcrl
pop
and
js
cs
in
or
lret
xor
xor
xchg
xchg
ret
test
cmpsb
sbb
enter
mov
push
pop
add
sbb
push
push
xchg
cli
adc
cmp
jnp
adc
cltd
subl
mov
test
cmp
or
inc
pop
test
repnz
adc
adc
push
movsl
inc
sbb
leave
lods
add
xlat
or
push
sub
jae
sbb
sbb
push
or
sbb
push
push
or
mov
adc
adc
shll
andb
push
adc
aad
es
or
mov
sbb
fwait
xchg
sub
hlt
mov
fsubl
scas
jge
orl
push
fcmovnu
sbb
and
adc
dec
sbb
jns
fcomp
add
subb
sbb
adc
jne
add
mov
fnstenv
or
push
imul
inc
push
pop
movsl
push
in
inc
dec
or
sbb
add
push
xor
cmp
cmp
pop
fstpt
sbb
int
add
inc
jo
sbb
inc
adc
mov
xchg
dec
pop
or
mov
wbinvd
or
insl
leave
inc
ljmp
sbb
cmp
fs
inc
mov
ljmp
loope
sub
and
addl
or
mov
rcrb
inc
scas
test
out
adc
inc
sbb
adc
push
add
inc
adc
or
jo
roll
mov
or
jmp
mov
jb
loopne
lds
mov
test
ja
cmp
iret
sub
lods
fsubs
je
xor
repz
xor
sbb
insl
mov
push
loope
and
xor
dec
jp
paddw
mov
adc
in
pop
aam
and
mov
adc
fsubrl
and
pop
mov
in
xor
pop
int3
add
loopne
imul
or
and
xor
cmp
fsubrs
jns
and
pop
sbb
push
add
rcrb
mov
lahf
push
push
loopne
jecxz
sbb
roll
pop
push
adc
mov
push
jl
sbb
jae
push
xchg
add
xor
or
and
loopne
cmp
mov
push
push
or
popa
cmp
lods
mov
or
adc
lods
cmp
add
cmp
imul
pop
sbb
and
xor
or
or
sbb
out
int
push
xor
and
and
dec
arpl
sbb
imul
push
or
movsl
push
or
jecxz
adc
adc
pop
cmp
lods
mov
sub
cmpb
jmp
sbb
add
dec
jl
pop
data16
dec
ret
cmp
imull
add
cltd
ss
lcall
adc
mov
std
dec
push
sbb
sbb
pop
adc
adc
adc
out
add
pop
mov
and
sub
inc
es
bound
adcb
out
or
or
aad
pop
imul
ds
lea
fldl
ja
adc
mov
pop
push
pop
ss
add
gs
jp
insb
add
adc
sbb
enter
add
flds
out
inc
fistl
sbb
or
adc
cltd
xor
sbb
add
mov
sub
or
adc
adc
pop
mulb
push
add
add
add
add
adc
in
sub
adc
es
sbb
mov
push
add
popa
lret
xchg
sbb
or
adc
lret
cwtl
mov
ret
or
fs
or
add
mov
mov
insb
gs
pop
pop
repz
or
test
inc
ret
lods
or
rcrb
inc
js
lock
xor
push
rclb
push
imul
in
lahf
insb
fsubrs
sbb
loopne
or
mov
or
add
pop
add
add
dec
or
push
pop
ljmp
and
fldcw
sub
lock
insb
mov
add
pop
mov
daa
add
or
orl
sbb
imulb
mov
test
adc
add
inc
add
xchg
add
je,pn
test
outsb
xlat
maxps
adc
or
stc
frstor
adc
je
adc
pusha
mov
mov
add
inc
cs
negb
pop
shlb
pop
daa
ror
inc
insb
dec
gs
cwtl
xchg
mov
lock
cwtl
mov
and
mov
add
adc
add
incl
cmpb
jne
pusha
mov
lea
push
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
