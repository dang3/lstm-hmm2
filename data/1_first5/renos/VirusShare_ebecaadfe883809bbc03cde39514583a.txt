ss
cmp
add
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
movl
movl
mov
push
mov
push
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
push
call
mov
pop
ret
add
xor
add
add
add
xor
xor
xor
add
add
xor
xor
xor
aaa
xor
xor
xor
cmp
cmp
aaa
xor
add
add
xor
xor
cmp
xor
aaa
xor
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
aaa
xor
ss
xor
xor
add
xor
cmp
xor
cmp
xor
add
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
cmp
xor
cmp
add
xor
xor
cmp
xor
xor
add
xor
xor
xor
cmp
cmp
cmp
aaa
xor
add
xor
xor
xor
xor
add
add
add
add
add
add
xor
xor
xor
xor
cmp
xor
xor
add
add
xor
aaa
add
add
add
add
add
add
add
xor
cmp
add
add
xor
xor
cmp
xor
add
push
mov
add
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
movl
mov
push
call
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
push
call
call
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
movl
mov
push
mov
push
call
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
movl
movl
mov
push
mov
push
call
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
mov
push
call
mov
pop
ret
xor
xor
xor
add
add
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
aaa
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
add
add
add
xor
ss
cmp
cmp
add
xor
xor
xor
xor
add
add
cmp
xor
add
add
xor
aaa
xor
xor
xor
add
ret
lea
push
mov
add
mov
mov
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
mov
cmp
je
jmp
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
mov
xor
divl
test
jne
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
mov
mov
jmp
mov
xor
divl
inc
imull
mov
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
mov
cmp
je
jmp
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
mov
sub
mov
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
push
mov
mov
xor
call
mov
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
mov
mov
mov
call
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
push
mov
mov
xor
call
mov
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
mov
mov
movb
movb
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
lea
mov
push
add
jmp
mov
mov
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
lea
mov
push
mov
jmp
lea
mov
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
mov
add
mov
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
mov
mov
mov
mov
add
mov
mov
mov
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
mov
sub
add
add
mov
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
mov
cmp
je
jmp
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
mov
mov
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
mov
mov
movl
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
pop
ret
lea
push
cmp
testb
pop
sbb
addb
jle
sbb
jnp
pop
cmpl
jae
jb
sbb
dec
subl
jle
insb
andl
dec
subl
jle
insb
ja
sbb
pop
subl
insb
jae
sbb
pop
ja
dec
insb
cmpl
insl
insl
sbb
test
xorb
sub
jbe
jle
sbb
sbb
sbb
sbb
sbb
jle
jle
sbb
sbb
inc
movsl
popf
repnz
movsb
push
icebp
popf
repnz
icebp
ss
mov
sbb
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
movsl
push
repnz
push
dec
frstor
jecxz
enter
mov
push
fstp
movsl
fcmovu
lahf
pop
sbb
lahf
pop
sbb
popf
loop
push
and
into
dec
test
push
loop
pop
inc
dec
movsl
push
loop
pop
and
push
loop
dec
pop
movsl
push
loop
pop
and
loop
pop
ss
movsl
push
loop
pop
cmp
push
decb
push
loop
dec
push
movsl
push
mov
pop
sub
sbb
movsl
pop
out
mov
movsl
pop
cs
ljmp
sbb
mov
rcrb
xchg
int
sbb
movsl
push
shlb
mov
sbb
sbb
movsl
pop
push
sbb
push
loop
dec
mov
add
and
movsl
push
popf
xor
adc
sbb
mulb
or
cli
add
movsl
pop
or
mulb
or
cli
add
call
push
movsl
push
mulb
sbb
dec
movsl
push
add
push
loop
dec
xor
add
movsl
inc
negb
movsl
push
lret
sbb
movsl
push
add
push
loop
dec
xor
popf
push
cli
push
popf
push
notb
movsl
push
negb
popf
push
movb
push
popf
jb
sbb
xchg
das
icebp
icebp
icebp
movsl
push
ljmp
mov
loop
pop
mov
dec
pop
sbb
ficompl
dec
movsl
push
fimuls
push
loop
dec
push
sbbb
sbb
test
movsl
push
loop
pop
cmp
push
loop
dec
inc
sbbb
sbb
test
movsl
push
and
push
loop
dec
inc
movsl
inc
repnz
ja
lahf
xchg
ss
icebp
icebp
test
xor
addr16
fwait
sbb
icebp
icebp
sub
icebp
cld
movsl
testl
pop
sbb
jp
and
out
lods
lcall
jg
sbb
insl
call
sbb
sbb
sub
add
sbb
insl
cmp
or
popa
sbb
sbb
fisubrl
addr16
add
sbb
inc
shll
add
sbb
pop
or
add
cli
and
sbb
sbb
sbb
lcall
jno
sbb
pop
xchg
mov
mov
add
pop
movsb
or
int3
jecxz
add
icebp
icebp
icebp
or
add
icebp
icebp
icebp
insb
in
fnstsw
fsubl
sbb
mov
icebp
icebp
sub
in
shlb
loop
leave
fisttpll
repnz
icebp
mov
and
sbb
fcoms
and
sbb
fcoms
sbb
movsb
inc
cmc
mov
sbb
push
cmc
lcall
push
hlt
sbb
icebp
icebp
icebp
bound
repz
xchg
movsb
sbb
sbb
push
cmc
sbb
movsl
inc
out
movsb
push
sbb
int3
movsb
inc
cmc
mov
icebp
icebp
lock
hlt
movsb
push
hlt
xor
repz
fcoms
sbb
push
cmc
lcall
push
hlt
sbb
push
cmc
sbb
sub
and
icebp
icebp
sbb
inc
cmc
and
sbb
sbb
mov
movsb
push
cmc
movsb
lcall
repz
movsb
inc
repz
sbb
push
cmc
lcall
testl
movsl
decb
push
icebp
sub
pop
sbb
icebp
sbb
sbb
fidivrl
sub
pop
pop
sbb
test
push
pop
pop
sbb
sbb
mov
sub
pop
sbb
mov
mov
movsb
lcall
movsb
pop
and
sbb
sbb
pop
sbb
pop
pop
sbb
pop
sbb
test
push
pop
pop
sbb
pop
pop
sbb
test
push
pop
pop
sbb
sbb
mov
movsb
push
out
movsb
lcall
icebp
mov
lock
dec
fldl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
mov
mov
call
mov
mov
cmpl
ja
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
push
call
mov
lea
mov
subl
movb
movb
movb
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
mov
mov
call
mov
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
mov
mov
call
mov
cmpl
je
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
lea
push
push
mov
sub
push
mov
push
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
cmp
je
mov
subb
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
xor
add
mov
xor
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
incl
mov
cmp
jne
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
mov
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
push
mov
push
call
cmpl
je
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
push
mov
pushl
xchg
push
jmp
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
cmp
js
xchg
mov
lea
mov
add
mov
add
sub
mov
dec
xchg
xchg
mov
xchg
xchg
lea
and
dec
cmpb
jne
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
movb
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
push
call
mov
mov
mov
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
jmp
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movb
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
mov
mov
pop
ret
add
popa
add
add
jae
add
je
add
add
add
add
in
add
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
call
test
jne
mov
jmp
movw
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
call
mov
pop
ret
mov
push
mov
add
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
movl
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
movl
movl
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
push
call
mov
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
mov
push
call
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
movl
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
movl
movl
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
xchg
xchg
cmp
jp
mov
xchg
sub
sub
mov
sub
and
mov
lea
lea
mov
lea
sub
lea
mov
sub
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
cmp
jg
mov
xchg
mov
mov
add
lea
and
mov
lea
and
mov
xchg
mov
mov
and
lea
add
movl
movl
mov
push
mov
push
call
movl
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
call
call
xchg
mov
mov
cmp
jp
mov
xchg
and
add
sub
lea
mov
xchg
and
lea
mov
mov
add
mov
inc
mov
pop
ret
aaa
xor
xor
add
add
cmp
xor
ss
xor
xor
ss
xor
cmp
cmp
xor
add
add
add
add
xor
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
cmp
add
add
add
add
add
aaa
add
add
add
add
add
xor
ss
ss
xor
aaa
xor
xor
add
add
xor
cmp
cmp
aaa
xor
add
xor
xor
cmp
add
add
cmp
xor
xor
add
cmp
xor
cmp
cmp
add
add
xor
cmp
xor
xor
cmp
add
xor
cmp
add
add
add
insl
add
add
je
add
add
add
add
sub
inc
mov
push
mov
add
cmp
jnp
lea
lea
mov
lea
jmp
mov
add
lea
and
inc
mov
jmp
lea
xchg
lea
xchg
xchg
sub
inc
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
mov
push
call
call
cmp
je
lea
sub
xchg
xchg
mov
mov
lea
lea
add
mov
mov
lea
and
add
and
lea
and
movl
mov
push
call
movl
mov
mov
movl
mov
push
mov
push
mov
push
call
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
call
movl
movl
mov
push
mov
push
call
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
movl
movl
mov
push
mov
push
call
cmp
jb
and
add
lea
add
cmp
je
xchg
mov
add
lea
add
inc
mov
inc
xchg
add
and
jmp
sub
mov
lea
mov
dec
movl
movl
mov
push
mov
push
call
movl
movl
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
movl
mov
push
mov
push
call
movl
mov
push
call
call
movl
mov
push
call
mov
pop
ret
add
add
xor
add
cmp
xor
cmp
add
xor
ss
xor
xor
add
xor
cmp
xor
ss
xor
add
xor
xor
xor
aaa
add
add
xor
add
add
add
add
xor
xor
xor
add
xor
cmp
xor
xor
add
aaa
ss
xor
aaa
add
xor
xor
aaa
cmp
xor
add
subl
jae
mov
cmp
jl
and
lea
and
lea
lea
dec
jmp
mov
mov
mov
lea
dec
jne
and
jmp
lea
mov
sub
lea
inc
add
mov
mov
lea
call
lea
cmp
jns
mov
mov
mov
mov
xchg
xchg
mov
add
lea
and
add
and
jmp
lea
xchg
mov
ret
mov
icebp
or
rolb
test
xchg
popf
inc
inc
adc
dec
xorl
fwait
adc
sbb
dec
sahf
in
pop
daa
mov
pop
mov
sarb
add
mov
cmpl
in
sbb
test
jg
add
or
inc
and
or
in
sub
add
in
sub
test
push
xor
and
inc
jle
ret
je
mov
push
mov
mov
std
jbe
out
mov
mov
ret
sub
outsb
idiv
insb
mov
fcmove
dec
mov
js
push
insl
push
in
pop
xor
mov
fisubrl
addr16
jmp
cmp
xchg
xor
out
mov
dec
pop
test
nop
dec
insb
les
rcll
in
jno
xchg
loop
loopne
into
ret
cli
cmpsb
inc
inc
xor
xchg
xlat
leave
dec
andb
pop
insl
jmp
daa
jae
pop
scas
test
dec
lea
mov
imul
loop
int3
lahf
inc
bound
jno
pop
mov
lahf
test
ret
xchg
jp
lret
clc
pop
or
push
outsl
shl
push
mov
lds
shll
pop
fs
bound
aas
aas
push
sub
adc
lods
lods
pop
sarl
scas
cwtl
push
sahf
inc
shll
add
test
xchg
cmp
ret
imul
cli
pop
loop
into
cmpsb
jnp
push
cmpsl
aaa
lret
cmp
lods
and
sub
pop
les
inc
jg
loope
push
xor
scas
mov
dec
cmp
add
shll
sub
jl
sbb
mov
sub
and
xlat
xchg
pop
fidivrs
out
stos
push
ret
stos
scas
inc
insl
js
inc
cmp
jns
int
push
fcmovnu
mov
jno
xchg
adc
out
pop
sub
sti
adc
aam
mov
inc
xchg
dec
sub
sti
and
imul
insl
fidivl
mov
mov
jbe
fmuls
sub
mov
xor
aaa
mov
imul
stos
cmp
pop
jns
jmp
pop
sbb
xchg
cmp
pushl
push
in
test
les
sub
mov
jnp
jae
push
mov
ret
js
pop
xchg
rdmsr
mov
cltd
clc
sbb
test
dec
jae
mov
fnstcw
ss
mov
add
mov
std
inc
mov
arpl
adc
xchg
lds
clc
test
decl
sbb
cld
cltd
movsl
mov
sahf
sbb
into
xor
enter
mov
mov
ss
or
int3
cwtl
mov
sub
int
jbe
rcr
jle
int
and
or
outsl
adcl
jb
cltd
in
jle
xor
sbb
leave
not
and
xchg
ffree
add
jl
fs
clc
cmp
and
fiadds
pushf
in
and
mov
jne
xor
iret
out
fs
mov
ss
fistpll
pop
cmp
mov
scas
push
cmp
loop
dec
jae
mov
repz
and
pop
mov
sahf
sbb
inc
or
scas
adc
enter
or
pop
sub
mov
sub
fwait
push
push
xor
cmp
xchg
repz
and
fiaddl
ficoml
mov
fisttps
cmpb
push
scas
rcl
xchg
dec
xchg
loopne
out
out
mov
mov
repz
insl
or
scas
mov
movsb
insb
push
mov
out
and
jle
pop
fwait
inc
cmc
pushf
adc
aam
scas
mov
addr16
loop
inc
cmpsl
enter
push
adc
mov
gs
push
mov
adc
lcall
mov
push
int
int
scas
push
mov
lods
adc
int3
nop
lea
xchg
add
push
mov
shll
sbb
aas
jae
stc
xor
lret
stos
in
sti
into
jno
es
cmp
mov
out
inc
cwtl
bound
and
adc
jg
jle
sti
dec
pop
xchg
sub
mov
push
inc
pop
popf
and
insl
jnp
test
mov
push
push
shl
inc
out
add
enter
inc
add
imull
dec
lret
sbb
ss
fstpt
ds
sbb
pop
mov
loope
pop
in
hlt
fistpll
mov
outsl
dec
ror
push
inc
pop
push
cmp
push
add
push
loop
loope
test
xor
cmp
ds
inc
fwait
adc
mov
sub
mov
or
movsb
out
push
jmpw
pushf
lret
ljmp
push
pop
cmp
jbe
inc
test
pop
push
mov
sarl
xchg
xchg
rolb
fistpl
xor
leave
mov
xchg
mov
jo
ss
out
fstpl
sub
fldpi
int
push
ja
pop
call
dec
mov
in
xlat
sub
cld
dec
xor
out
lcall
fstps
aaa
fnstcw
out
mov
xor
data16
push
xchg
dec
fidivs
dec
mov
and
pop
or
pop
shll
pop
xchg
psubusw
repnz
mov
mov
mov
add
add
sbb
jae
sbb
fsubr
mov
sbb
push
and
sbb
loope
cltd
ret
in
popf
cs
and
xor
std
pushf
pop
inc
movsb
pop
stos
out
adc
xor
lahf
sbb
test
xchg
fadds
cmp
xchg
sarb
add
xor
cmp
sahf
xlat
pop
dec
push
bound
je
mov
lret
inc
lret
xchg
mov
dec
mov
adc
leave
pop
iret
or
sbb
leave
cmpsb
jae
xchg
mov
push
cmp
je
pusha
ret
insb
jecxz
out
sbb
or
mov
loopne
stos
das
and
dec
fstpt
cs
mov
push
sbb
fwait
cltd
mov
sbb
dec
jo
aam
dec
xorl
push
pop
jnp
mov
ss
iret
push
dec
fs
xchg
movsb
popl
ss
cltd
cli
cmp
xorb
ds
or
fsubrl
mov
shlb
mov
lods
mov
in
sub
adc
icebp
ja
mov
shrd
push
inc
or
pop
push
pop
outsb
inc
pushf
jnp
fnsave
push
cmp
nop
hlt
adc
push
inc
xor
inc
push
add
mov
xlat
outsl
mov
push
cmpsb
sarl
mov
push
or
mov
cs
push
add
fs
mov
push
jae
movsb
les
mov
test
and
push
insl
mov
in
jo
push
jl
stos
xlat
xor
and
arpl
in
xor
mov
adc
enter
icebp
cs
adc
or
mov
test
add
insb
jno
xor
test
rcr
push
imul
test
pop
sbb
sti
or
fwait
pop
pop
shrl
push
add
add
ret
mov
sti
mov
scas
andb
ljmp
push
mov
or
dec
cmpb
inc
sbb
int
xor
std
gs
cmc
rcrl
movsb
jns
test
push
sti
loopne
sbbb
shlb
and
clc
or
lods
test
sahf
jns
dec
fisttpll
add
dec
sti
and
test
xor
or
dec
pop
outsb
dec
data16
rcrl
xchg
mov
mov
push
bound
pop
cmpsw
sarl
aaa
lods
mov
jecxz
xor
jle
and
ljmp
sub
fisubl
in
sahf
sub
pusha
jo
fs
mov
fst
das
mov
xchg
inc
mov
int3
lcall
sub
mov
fwait
inc
js
adc
inc
leave
sbb
cmp
test
xchg
ss
outsl
sub
mov
fistl
lahf
int3
sub
inc
pusha
das
movsl
push
std
xlat
add
adc
addl
sti
sub
mov
jae
adc
mov
cmp
lret
jns
js
adc
mov
js
adcb
repz
insl
repnz
aam
test
in
cmp
and
dec
adcl
inc
lret
mov
in
repz
test
in
ja
pop
movsb
cld
mov
dec
out
pop
leave
fcmove
dec
sub
pop
inc
pop
inc
pop
sub
or
aad
add
jmp
nop
pop
movsb
int
faddp
leave
mov
jbe
push
jmp
pop
repnz
sbb
jo
add
or
jmp
lods
leave
cmp
dec
mov
mov
adc
jmp
popf
mov
push
lock
fdivr
sbb
addr16
in
dec
dec
pusha
pop
or
into
cld
pop
fsubr
cmc
or
sarl
popa
xchg
jg
ret
mov
add
js
pop
rcrb
mov
out
and
popa
inc
addb
cmp
lds
scas
insl
cmpsl
popa
pop
in
aad
jecxz
inc
xchg
shrb
cmovp
imul
adc
inc
lcall
es
dec
aad
icebp
and
cmpsb
sub
push
xor
ret
xchg
add
jecxz
sahf
call
ret
sbb
cmc
cli
popa
mov
lds
mov
sub
lock
out
out
jne
fwait
je
cs
add
push
adc
fsubrl
or
pop
mov
cmp
pop
xchg
inc
shr
clc
adc
pop
cwtl
jns
lahf
add
jmp
dec
ja
sbb
cmpsb
pop
or
mov
repnz
sub
fxtract
shr
pop
push
xlat
and
out
mov
push
decb
lods
and
lcall
repnz
or
sub
add
int3
mov
pop
and
xlat
int3
jne
out
leave
movsb
jg
cwtl
adc
test
jmp
ss
mov
adc
mov
sbb
sarl
idivb
xor
lods
jo
cli
stos
jg
aaa
xor
aam
pop
mov
test
push
dec
add
sbbl
xchg
push
or
cmpsb
repnz
outsb
cld
cmp
mov
stc
into
pusha
enter
es
push
pop
ret
in
sub
das
push
add
mov
imul
ds
xchg
pushf
mov
push
push
xor
sahf
insl
jns
mov
and
mov
jbe
decb
pop
fld
pop
pushf
das
jmp
test
xchg
cmpsl
push
adc
or
test
insl
aaa
jp
or
jnp
jno
outsb
cltd
or
es
fisubs
sub
push
add
iret
ret
iret
fiadds
fs
add
icebp
xchg
mov
dec
sub
jmp
insb
fstpt
jno
mov
inc
jp
pop
or
push
jnp
lods
js
sbb
loopne
sub
repz
pop
rcrb
xor
mov
shl
ja
mov
or
pop
cwtl
jne
fbstp
pop
pop
or
or
iret
push
pop
push
push
mov
push
add
lock
fbld
cmp
in
pop
mov
mov
dec
mov
iret
jb
cmpsl
test
jecxz
mov
cmp
popf
movsb
mov
rorl
pop
sar
sbb
ret
inc
push
jbe
insb
subb
in
adc
mov
movsb
fmuls
xchg
dec
fdivrl
sub
jmp
loop
fdivrl
pusha
xor
stos
je
mov
in
xor
push
xor
push
xorb
jnp
push
or
cmc
fcoms
push
xor
aas
cmp
aas
adc
sbb
mov
jne
or
aaa
sbb
and
cmpl
cmp
movsl
xor
adc
lret
xor
pop
aas
mov
outsb
repnz
push
outsb
repnz
sub
nop
jmp
mov
cmp
fldt
mov
out
aad
push
lock
dec
mov
imul
hlt
push
call
push
xchg
push
add
fsts
insb
push
jl
cs
and
jnp
cmp
cmp
icebp
or
xor
adc
sbb
add
jge
and
pop
mov
push
gs
popa
xlat
pusha
aad
cmpsl
movsl
pop
fs
or
ja
mov
nop
jge
adc
sti
aam
jp
add
cmpsb
inc
xor
in
xchg
push
mov
scas
xorb
pop
jmp
dec
xor
in
in
mov
fisttpl
stos
xchg
xchg
dec
inc
cmp
xorb
mov
mov
cmp
sbb
mov
mov
mov
xor
jns
sbb
cmp
arpl
cmp
and
inc
divb
popf
xchg
ja
xor
inc
cmp
lahf
mov
jns
pop
mov
inc
aam
iret
or
das
into
xor
push
in
cmp
or
rcl
gs
adc
jno
dec
lea
test
pop
fcomps
pushf
jns
xchg
cli
js
cmp
jb
ss
mov
ljmp
je
pop
and
push
sub
and
negb
and
fistpll
sub
outsl
inc
pop
call
bound
std
adc
and
or
xor
xchg
ljmp
sbb
test
adc
and
inc
in
adc
lock
adc
push
or
outsl
out
cwtl
daa
xor
mov
xchg
cmpl
adc
pop
adc
repnz
outsl
adc
mov
cltd
mov
dec
adc
xor
push
dec
mov
nop
mov
pop
adc
ja
adc
push
dec
les
hlt
and
mov
push
aad
jg
arpl
outsb
jl
and
daa
sub
insb
push
insb
xlat
icebp
cmpsl
pushf
movups
lods
sbb
pushf
orl
jl
cld
mov
das
movl
and
sub
or
sahf
mov
jno
repnz
mov
pop
dec
scas
das
mov
adc
ret
clc
cmp
xor
gs
add
in
xor
in
lds
mov
aad
add
sub
scas
addr16
pop
fstl
sbb
sub
adc
or
push
repz
lret
aad
icebp
scas
mov
and
adc
add
lock
lret
and
mov
daa
sub
pop
push
mov
sub
xacquire
xchg
jge
mov
shrl
bound
push
fmull
sub
adc
movsb
shrl
jecxz
mov
dec
mov
pop
repz
lods
rcl
xchg
adc
sub
push
loop
xchg
xchg
inc
cmp
xchg
fiadds
adc
je
xor
cld
loop
iret
out
mov
or
aam
pusha
mov
and
cmp
xor
cmpsl
nop
rcll
xlat
into
fwait
mov
and
mov
cltd
pop
mov
shl
cwtl
lret
push
fcoms
insl
test
lret
js
xchg
pop
jb
jle
sarl
sbb
jg
adc
jns
fdivrl
adc
push
enter
adc
cmp
mov
push
movsb
rorb
or
or
sub
jmp
sbb
sbb
cmc
mov
rorb
pop
shll
addr16
out
lahf
cwtl
in
imul
inc
sarl
cmpsb
rcrl
faddp
xlat
xchg
adc
push
jmp
pop
jae
mov
hlt
fnsave
pusha
push
sub
push
movsb
jne
mov
in
cwtl
mov
cmp
loop
icebp
std
mov
mov
lret
xchg
xchg
cmp
aas
in
cmp
push
pop
push
sbb
jne
mov
mov
adc
mov
mov
inc
mov
iret
xchg
adc
add
outsl
sbb
mov
mov
mov
mov
or
pop
or
jg
out
imul
add
call
pop
push
sub
fimuls
iret
cmpsb
inc
push
bound
pop
dec
dec
dec
mov
out
push
add
add
jg
pop
stc
mov
pusha
push
sar
jb
or
mov
lret
push
in
jp
cltd
push
cmc
das
xor
scas
inc
pop
imul
push
gs
pop
shll
sbb
fisubl
adc
mov
sbb
push
push
ss
sbb
dec
stos
pop
sub
repnz
push
jg
out
scas
sbb
add
ds
adcb
xor
aaa
mov
xor
lret
orl
xchg
xor
arpl
add
test
addr16
aas
arpl
sahf
push
add
mov
out
fiaddl
mov
inc
sahf
ficomps
popa
daa
push
pop
loopne
cmc
loopne
in
pop
add
sub
sbb
adc
and
fadd
fxch
stc
sub
lahf
insl
adc
mov
out
sub
fildll
add
mov
test
mov
outsl
out
nop
icebp
fadds
stos
xlat
xor
inc
or
fdivp
dec
int
into
pop
dec
test
inc
xor
push
lods
xchg
sub
xchg
xchg
scas
mov
and
inc
fiadds
mov
into
dec
and
rcrl
cmc
int3
xchg
xchg
dec
ljmp
or
lret
jo
push
sbb
cmpsl
js
stos
xor
jne
mov
les
inc
notb
mov
hlt
xor
xchg
sbbb
inc
cvtps2pi
or
push
sti
cmpsl
cmp
cs
dec
xor
mov
in
pop
mov
stc
cmpsl
scas
jne
adc
sarl
test
push
shrl
or
jl
sub
call
xchg
shrb
add
xchg
mov
fucompp
push
fbld
and
imul
jne
rcl
gs
xlat
rorb
jg
cmp
and
pop
ja
fdivl
inc
cli
or
movsb
stos
sbb
hlt
and
or
aam
xor
xor
dec
or
cmp
popa
lret
inc
aaa
mov
les
scas
out
and
aaa
mov
pop
sub
lods
mov
lock
jae
adc
test
xchg
outsl
js
or
ds
call
jp
sub
insb
dec
ret
std
jnp
adc
aas
xor
std
addr16
and
inc
push
ret
push
mov
cmp
test
lcall
daa
dec
add
xchg
pop
dec
cwtl
jmp
mov
inc
push
add
pop
mov
pop
add
push
nop
add
popl
xlat
sub
adc
popf
pushf
divb
ds
fnsave
push
mov
jno
jns
lods
shl
cmpsb
lret
vmovaps
js
adc
adc
sub
movsl
sbb
jmp
and
hlt
inc
xchg
and
shlb
mov
jb
pop
addr16
jns
jle
mov
mov
outsb
test
mov
xchg
dec
xor
inc
sarl
sbb
rcl
xor
loope
cmp
xor
mov
rcll
inc
ljmp
inc
sarb
movsl
and
sbbl
inc
repz
pop
mov
test
fwait
or
cmp
test
fstps
mov
jo
enter
mov
cwtl
push
int
fisttps
sub
sub
xor
cmpsl
fsubl
daa
push
jg
lock
add
sub
adc
inc
scas
lods
sub
xchg
ds
loop
ret
in
sub
dec
outsl
inc
jbe
fst
fistpll
aas
mov
jo
add
cltd
mov
jne
lea
adc
pop
mov
inc
fmul
lds
add
lahf
and
int
negl
inc
cmp
dec
xchg
ja
inc
das
mov
and
push
out
fwait
mov
or
sbb
ffreep
xor
push
je
dec
jp
sbb
cmp
lret
cmp
push
hlt
xor
mov
mov
fcoml
xchg
cmp
outsb
je
cmpxchg
ja,pt
pop
stc
sbb
fcoml
mov
sti
les
and
inc
xor
sbb
dec
cwtl
repnz
fldenv
test
iret
inc
and
sub
sub
scas
pop
mov
leave
dec
cmc
xchg
mov
pop
test
ds
pop
xor
xchg
push
add
inc
jle
inc
mov
dec
or
push
or
jle
fsubrs
daa
popa
inc
add
and
aam
sti
add
mov
jnp
lods
sbb
fdivrp
loop
mov
inc
fisttpll
sbb
call
xchg
and
decb
sub
call
call
test
imul
rcrb
loop
fisttps
dec
test
sbb
bound
dec
leave
jbe
arpl
dec
mov
jb
scas
daa
inc
sbb
out
push
mov
pushf
xor
jae,pt
in
adc
out
rolb
ret
fnstsw
das
nop
int3
sbb
sub
mov
adc
popa
js
cmp
movsb
cmp
mov
shlb
stc
push
hlt
cpuid
jno
xor
mov
mov
adc
addr16
mov
inc
insl
ret
jno
stos
dec
in
push
jae
jp
dec
into
sub
mov
ds
scas
inc
jne
dec
icebp
xlat
mov
enter
out
push
fcmovnb
fiadds
test
negb
mov
or
dec
and
jns
mov
jle
out
push
or
pop
pop
sub
pop
mov
rcrl
aam
lcall
bound
xchg
movsb
outsb
push
mov
pop
mov
rorl
sub
subb
stc
jg
jne
jle
adc
lcall
aad
fadds
scas
dec
out
and
push
fwait
mov
mov
xor
out
shll
in
dec
jl
mov
pop
into
dec
stos
shll
divl
bound
scas
cmpsb
outsl
ffreep
sub
jg
lods
shl
xlat
hlt
call
and
cmp
mov
iret
mov
ss
outsl
jae
xchg
jns
jl
js
fimull
push
movsl
cld
lea
adc
pop
jl
mov
push
je
push
xchg
fwait
in
push
push
insb
les
testl
or
mov
inc
rclb
sub
cmc
dec
mov
roll
mov
adc
jp
stos
sub
movsl
or
notl
or
sbb
mul
push
sub
mov
es
jns
lds
loop
xchg
xor
stos
scas
mov
adc
in
daa
mov
sub
xor
stc
fs
pop
aad
repnz
iret
inc
jmp
push
xchg
mov
lea
ja
out
popf
mov
lahf
test
sbb
sub
dec
popf
cmp
mov
xor
xor
mov
mov
ja
sarb
mov
push
jno
jmp
insb
fs
pusha
lahf
popa
jbe
in
data16
jg
mov
add
fcmovnbe
inc
inc
sub
xor
xchg
xor
jge
jp
cli
pop
lret
mov
add
movsb
andl
iret
aad
inc
sbb
mov
sub
mov
inc
fldcw
lret
ret
sub
call
push
into
test
cmp
fcoms
push
pop
mov
lcall
xor
and
sub
imulb
or
or
nop
mov
insb
les
cmp
js
inc
push
jno
push
mov
nop
dec
in
imul
and
xor
cmp
jmp
jmp
and
divb
pusha
jae
roll
paddd
cmpb
adc
xchg
mov
cltd
push
arpl
ficoml
mov
mov
rorl
in
mov
mov
loop
es
adc
mov
lret
rclb
pop
jo
aad
add
sub
push
mov
popa
notb
andl
cmp
xlat
les
push
jg
pop
adc
subb
ds
dec
xor
fistpl
and
mov
addr16
ficomps
nop
jp
test
add
push
and
movsb
or
cwtl
loope
arpl
push
jne
lods
cli
les
sahf
daa
jns
xor
pusha
loop
xchg
bound
lds
and
in
cs
pop
sub
shlb
hlt
cs
adc
lods
loope
ss
pop
adc
pushf
imul
sub
pop
adcb
mov
dec
inc
cmpsb
ljmp
je
xchg
xchg
pop
hlt
sbb
negl
repnz
orl
bound
and
inc
and
sbb
mov
imul
mov
out
mov
ja
popf
pop
cld
out
cltd
sub
sub
and
jle
cld
js
daa
push
rcll
loopne
fnstcw
sub
lds
loop
sti
xor
adc
data16
or
mov
lcallw
and
or
xor
in
loope
sahf
fnsave
dec
nop
lea
stos
enter
mov
fists
fldcw
mov
std
in
dec
out
adc
mov
push
popf
fistps
sub
stos
addr16
add
int
cmp
sbb
dec
pop
pop
mov
daa
and
test
mov
push
mov
stos
les
xchg
pop
repz
mov
cmpsl
jg
stc
data16
ss
nop
pop
jmp
lds
jp
mov
imul
inc
pop
inc
jb
out
and
movsl
mov
xchg
pop
mov
clc
jae
popa
and
shll
pop
lods
pop
xlat
pop
test
decl
in
into
xor
jl
insl
xchg
push
stc
enter
mov
pop
sti
das
lcall
add
aad
call
sbb
sub
cs
mov
int3
jbe
clc
cmpsl
lahf
ss
mov
ja
adc
sbb
xor
jge
test
int3
mov
iret
stos
lahf
jns
push
rcr
jg
jnp
mov
dec
data16
mov
cmp
inc
test
sub
push
repz
mov
pop
mov
xchg
cld
xchg
lods
or
dec
mov
sub
imul
mov
nop
cmp
cld
inc
movsl
cmp
jae
mov
or
ja
js
mov
lret
sub
xor
mov
outsl
dec
sahf
add
xchg
bound
call
sbb
mov
fs
adc
lods
jp
in
sbb
push
dec
add
lea
cltd
pop
in
adcb
xchg
push
add
test
es
lods
add
fidivrs
and
lea
jle
jg
push
xlat
mov
pushf
in
mov
add
push
sub
mov
xor
mov
dec
inc
into
std
sub
pop
test
adc
jmp
mov
das
enter
add
sub
push
cltd
inc
push
aas
fistl
rcr
xor
fwait
sahf
mov
cmp
data16
and
or
or
jbe
jp
add
xchg
loop
xor
push
stos
jbe
xchg
iret
nop
dec
cmp
je
scas
test
scas
sahf
mov
and
pop
jbe
cwtl
ds
nop
dec
mov
les
xor
mov
sahf
mov
inc
scas
inc
shll
pop
mov
cmp
xchg
jnp
cld
insb
dec
stc
popa
lock
pop
aad
cmp
and
int
aam
repz
mov
call
adc
cmc
pop
push
stc
pop
jmp
jae
fidivrs
loopne
fldcw
hlt
mov
data16
add
repz
inc
push
aas
sub
rcl
lret
mov
sub
divl
push
and
and
scas
pop
lea
inc
dec
sahf
in
in
sub
notb
or
test
mov
iret
adc
negl
xor
mov
shr
add
in
mov
jle
out
inc
jnp
arpl
push
lea
push
jmp
inc
ljmp
stc
xchg
gs
inc
mov
repnz
out
cmpsl
xchg
lret
push
fbld
cli
packsswb
leave
push
mov
lcall
pop
in
lret
inc
mov
fldt
sub
bound
addl
fwait
popa
shl
imul
enter
mov
filds
insl
enter
xlat
lahf
sub
test
cltd
push
icebp
or
jo
orl
mov
and
adc
dec
test
lods
inc
xor
std
imulb
or
mov
jns
xor
mov
fbstp
sbb
in
lock
jge
add
mov
inc
push
adc
loop
orb
cmp
cli
mov
push
push
ja
mov
shr
repnz
sarl
cli
in
pusha
jae
popa
push
jb
sub
or
fwait
imulb
dec
sbb
jb
cld
out
dec
mov
mov
adc
mov
push
aaa
xchg
jno
jne
jmp
bound
and
jecxz
fldl
fcmovb
inc
xchg
in
out
add
mov
xor
jno
popa
in
and
mov
icebp
mov
popa
adc
push
repnz
fisubrs
cmp
movsb
jbe
mov
lods
ds
ret
mov
cmp
popa
jb
lods
jae
xchg
jecxz
or
icebp
add
pop
mov
into
adc
popa
mov
mov
push
ss
cmc
sti
in
mov
in
pop
fcmovnbe
push
and
movsl
fldcw
into
adc
int
dec
std
stos
jnp
or
dec
mov
and
stc
shll
or
mov
in
sub
jno
cmpsl
adc
inc
or
cmp
sbb
and
aas
inc
xor
jbe
pushf
inc
dec
popf
cmc
out
fcmovnu
jmp
and
xchg
insl
cmp
fcmovu
jo
in
repz
scas
xchg
into
sub
add
pop
aaa
dec
push
lea
jmp
scas
pop
in
jnp
xor
xchg
inc
imul
lcall
popf
ret
mov
xchg
push
cmp
mov
xchg
or
push
loop
and
into
ret
lock
push
mov
cmp
test
xchg
add
les
jno
outsb
jge
mov
cmp
xchg
dec
add
add
movnti
cmpsl
lcall
aam
pop
dec
and
and
je
mov
cld
scas
add
ret
inc
lods
movsb
testl
lods
push
jmp
idivb
dec
cmp
pop
or
mov
cmp
loopne
movsl
push
push
push
lea
xchg
arpl
lods
pop
cld
mov
xor
cltd
cmp
test
pop
adc
mov
test
mov
mov
lea
dec
lahf
sbb
scas
mov
mov
addr16
xchg
cmp
sub
sti
push
jge
inc
xor
clc
mov
push
movsl
nop
sub
and
mov
std
or
stos
mov
mov
stos
scas
sub
jae
scas
or
in
pop
mov
inc
push
sti
add
sub
xchg
pop
fildll
shll
or
iret
sarb
lods
adc
adc
movsl
mov
pushw
and
sub
imulb
jge
pop
sub
aaa
bnd
je
jne
mov
push
pop
inc
pop
scas
aam
pop
push
jmp
jb
aad
out
sbb
or
mov
sub
and
ljmp
bound
xlat
add
rcrl
fisubs
imulb
pushl
fsub
scas
icebp
pop
aas
dec
fs
mov
aas
dec
sbbl
icebp
test
pop
sub
mov
enter
icebp
pop
xor
xchg
pop
push
cmp
rcrb
loope
lret
add
lcall
push
lock
inc
mov
test
stos
ficoml
push
addl
stos
stos
inc
out
pop
mov
rcll
push
mov
rorb
mov
sbb
jl
dec
insb
adc
jns
lret
mov
mov
les
and
xchg
dec
sahf
dec
subb
sub
cmpsl
repz
loope
jle
push
flds
sahf
add
cmpsl
es
dec
xlat
pop
lret
sub
xchg
pop
imul
lret
inc
or
xlat
aas
call
sub
shll
jns
idivl
ljmp
cmp
popf
insl
clc
out
movsl
ret
aad
mov
mov
sub
jp
loope
pop
jo
sub
enter
movsl
lods
pusha
loope
and
ds
cs
loopne
jl
pop
clc
jb
or
push
idiv
icebp
mov
pushf
mov
mov
mov
out
xchg
inc
shlb
int3
mov
add
cmp
in
in
push
mov
enter
mov
lret
filds
enter
jo
xor
push
xchg
jae
mov
lcall
mov
out
js
mov
jmp
lods
jmp
popa
push
lcall
vorps
popf
sub
jae
sbb
and
cltd
idivl
pop
cltd
or
xor
mov
mov
dec
xchg
in
in
mov
mov
pop
jne
imul
jno,pn
fildl
insb
pop
cmp
pop
fidivl
lahf
data16
pop
push
and
iret
sbb
inc
mov
jae
pop
fwait
out
fistps
mov
pop
pushf
xchg
or
pop
mov
pop
xor
inc
sbb
popf
jno
push
and
insl
pop
sub
fnstenv
rep
loope
cwtl
ret
push
adc
push
dec
dec
xor
pop
clc
mov
test
jo
sub
icebp
lret
fincstp
popa
mov
xchg
jmp
push
adc
pop
lds
fdivr
pop
cmp
int3
cmp
dec
mov
mov
jmp
stc
test
es
sbb
or
pop
cmpsb
push
out
stos
mov
cmp
rcrl
popa
dec
icebp
imul
pushf
pop
lcall
mov
iret
stc
pop
mov
pop
pop
sub
mov
stc
lcall
iret
test
mov
sub
mov
shll
aas
jno
pop
insl
lods
adc
mov
lock
jp
push
cmc
out
xor
ja
test
sbb
or
aad
mov
and
fdivl
call
fdivs
and
add
jne
ljmp
xor
scas
ret
xor
insb
sbb
imulb
into
repnz
movsl
test
dec
rep
divb
push
sub
xchg
sub
xchg
insb
hlt
js
mov
lret
add
or
or
sub
cwtl
add
stos
std
enter
mov
stc
outsl
push
dec
mov
lea
in
and
lock
or
aas
ljmp
ds
and
or
pop
fcomp
daa
mov
sbb
stos
inc
xchg
out
cmp
aas
test
push
or
fs
ss
inc
inc
je
cmc
aad
je
push
add
push
ret
add
daa
sahf
mov
in
jns
cmpsb
ficoms
xor
mov
adc
mov
repz
cmp
and
jge
and
bound
sbb
movsb
ss
clc
add
test
mov
and
xchg
dec
aaa
popl
add
pop
gs
lcall
inc
js
mov
int
xchg
or
test
movsl
ja
xchg
dec
clc
nop
add
jmp
jae
pop
test
lock
add
les
jg
cld
scas
test
mov
lret
mov
js
mov
cltd
mov
adcb
es
jno
insl
fs
push
mov
mov
sbb
cli
cmpsb
fstpl
dec
pop
add
jnp
adc
mov
rol
lds
in
call
mov
aad
dec
xlat
imul
xor
insb
dec
lahf
faddl
xchg
mov
sete
and
xchg
or
stc
roll
std
sub
jmp
js
add
jae
ret
sbbb
dec
xorl
xchg
repnz
in
dec
add
movsl
andl
adc
dec
jo
cmc
ds
mov
jle
xor
sbb
sub
lea
loopne
push
push
enter
mov
pop
mov
bound
cmp
mov
loop
bound
into
je
pop
or
dec
ret
or
dec
xor
xchg
lahf
xchg
out
bound
mov
sub
jge
jo
xchg
test
cmp
arpl
and
xor
mov
add
fstpt
testb
aad
int
pop
jb
inc
lods
jnp
fwait
adc
cmpsb
mov
mov
mov
das
push
pushf
lahf
jle
cmpsl
aas
movsb
jmp
testl
aas
push
xlat
xor
hlt
lock
jnp
fildll
test
sahf
dec
orl
rclb
inc
mov
mov
pop
pop
in
jecxz
pop
dec
xchg
xchg
xchg
xchg
push
data16
mov
popa
popa
lcall
mov
fs
gs
and
add
adc
test
arpl
sub
fidivrl
sbb
or
jp
into
or
or
cltd
push
sub
jle
movsl
xorb
es
cmc
jno
jl
mov
pushf
push
xchg
pop
cld
sbb
and
test
mov
shlb
push
mov
je
push
push
xchg
lcall
xchg
cmpsl
pop
push
daa
out
pop
aaa
inc
ja
dec
dec
insl
bound
les
in
sbb
test
imul
je
xchg
jbe
jae
rorl
movsl
adc
fistpll
mov
cmc
dec
mov
push
es
mov
sbb
stos
iret
fildl
dec
pop
lock
lret
pop
sbb
sbb
pop
repnz
jb
dec
xchg
iret
lods
mov
in
pop
and
lds
adc
loopnew
or
scas
add
jno
pop
fcoml
push
test
push
outsl
movsl
andb
out
ljmp
cmpl
jnp
out
push
lea
int
pop
push
pop
inc
xorb
test
ss
cmpsl
pushf
or
lods
fisubl
mov
dec
insl
out
inc
xor
repz
mov
mov
mov
push
mov
adcb
aas
inc
popf
outsl
mov
mov
fwait
sbb
ficompl
or
iret
stos
insb
ds
out
int3
mov
testl
dec
sbb
fsubr
popf
push
movsl
jp
xor
nop
xchg
sub
int
mov
mov
movsl
mov
sub
rcrl
push
leave
pop
sbb
mov
push
pop
push
nop
sub
adc
xor
jp
fs
ret
addr16
push
or
sbb
roll
imul
mov
mov
pop
ret
mov
mov
dec
pushf
jns
js
and
lods
push
push
test
into
adc
push
dec
dec
add
add
das
pop
push
lret
push
bound
mov
jnp
pop
int
push
pop
lcall
ficomps
mov
pop
pop
dec
ds
lret
rcrb
pop
mov
in
loopne
add
pushf
out
iret
mov
jle
dec
mov
inc
push
mov
push
push
mov
fnstcw
push
jl
mov
inc
and
fidivs
mov
sti
mov
mov
sbb
imul
into
xchg
pushf
insl
and
mov
lcall
mov
push
cmp
cmpsb
movsl
mov
adc
pop
lea
mov
pushf
out
mov
jp
lea
add
or
jne
inc
or
fdivrs
outsb
test
cmp
sub
fdiv
scas
mov
subl
cmpsl
divl
add
shrl
pop
call
lea
mov
addr16
scas
test
pop
movsb
and
mov
out
xchg
dec
in
jecxz
idivl
add
mov
mov
sbb
popa
jnp
test
je
mov
mov
cmp
xlat
out
rorl
jno
sub
xlat
cs
mov
fstpt
jmp
adc
stc
jno
mov
fsubrl
sub
mov
mov
cli
ljmp
cltd
or
dec
inc
adc
push
ds
lret
pop
loopne
in
cmpsb
enter
mov
lock
xor
imul
sbb
repnz
dec
sahf
in
fcmovnu
jae
test
clc
inc
out
pop
add
fnstcw
add
nop
jb
fldt
mov
iret
push
push
and
jbe
into
mov
pop
add
ja
mov
aam
mov
and
mov
insl
mov
sbb
and
add
ja
insl
pop
es
sbb
lahf
arpl
mov
xchg
mov
dec
sub
xor
nop
jmp
push
inc
fwait
mov
push
mov
scas
sbbb
inc
jmp
sbb
mov
mov
dec
out
out
xor
xchg
pushl
rcll
movsb
or
adc
and
cmp
cmc
adc
lahf
jmp
cmp
pop
cmpsb
scas
inc
mov
in
test
cmp
dec
jno
sub
add
mov
and
movsb
dec
scas
fs
xor
sbb
ret
pop
lret
pop
test
loop
js
or
cmp
sahf
adc
pop
sahf
push
and
scas
and
fstps
movsb
cmp
shrb
xchg
cld
daa
jge
cmp
xchg
xlat
test
flds
lret
out
rcrb
shlb
test
xchg
in
jne
xchg
cmp
imul
jmp
call
inc
clc
fsts
jl
mov
insl
mov
cltd
adc
test
mov
jb
hlt
fcomps
fwait
sti
xchg
mov
xchg
ljmp
xchg
inc
jg
adc
pop
jnp
mov
repz
cmp
and
clc
pop
jmp
adc
scas
and
mov
inc
mov
repz
or
je
ljmp
inc
ljmp
in
data16
stc
adc
cmp
xchg
mov
std
or
inc
sub
or
rclb
dec
lret
dec
mov
push
add
dec
in
add
lds
movsl
and
in
js
ret
loop
sub
mov
xor
outsb
add
stc
cli
outsb
push
pop
pop
push
leave
sub
push
xchg
push
popa
mov
imul
xchg
shll
int
push
or
jge
cmp
lds
mov
mov
call
sbb
cmp
fimull
sub
adc
cmc
out
xchg
stos
incb
mov
imul
stc
jmp
jle
sub
test
std
or
or
rcr
sbb
in
int3
jmp
cmp
mov
mov
aas
cmp
andb
loope
mov
jle
fucomip
xor
jno
push
stos
pop
pop
xor
pop
pop
mov
insb
int
pop
out
or
sub
repnz
lock
data16
sbb
sub
sahf
imul
sub
int3
push
xchg
sbb
jnp
repz
dec
fistps
mov
push
stos
push
push
jl,pt
orb
movsl
mov
sub
or
cmp
shl
dec
repnz
xchg
pop
fs
push
mov
into
sub
sub
xchg
inc
ficoms
mov
mov
scas
popf
repz
xor
int3
loop
loop
cmp
cwtl
add
sahf
fsubr
cmp
or
incb
jbe
or
imul
mov
dec
sbb
and
lods
popa
imul
arpl
jmp
ljmp
fildl
lock
mov
and
dec
xor
cmp
repnz
ds
fwait
mov
sub
or
test
loop
cs
jl
or
mov
insb
hlt
scas
fstpt
iret
sbb
and
imul
jns
fmuls
sbb
in
dec
leave
loopne
cmc
push
ret
dec
or
js
test
inc
fistpl
adc
jg
xchg
nop
frstpm(287
mov
fwait
callw
push
arpl
mov
scas
icebp
mov
pop
mov
inc
push
aas
inc
test
push
xchg
fdivp
jae
or
in
mov
das
cmp
mov
sub
lods
pop
aas
inc
mov
dec
mov
mov
mov
pop
in
sbb
adc
orb
ret
repnz
out
ds
mov
mov
or
fs
jl
ficompl
push
test
test
addr16
dec
add
inc
out
push
sbb
adc
ficompl
sbb
inc
mov
gs
addr16
int
add
sbb
scas
adc
dec
js
arpl
push
or
or
dec
mov
and
jmp
adc
cmp
adc
sbb
and
jne
or
dec
xor
dec
and
jnp
mov
jg
or
int3
int
pop
push
repz
mov
stos
and
push
shll
in
dec
xchg
popa
sahf
testl
push
jg
mov
mov
in
std
ss
pop
loope
add
or
scas
js
loopne
jmp
xchg
call
jo
lods
sub
filds
fstpt
cmpsl
ds
jp
xor
cmp
je
dec
insl
pop
jno
push
adc
cs
push
repz
mov
call
xor
cmp
cmp
imul
aad
cs
jle
xlat
aas
fldt
jp
adc
int3
or
mov
cmp
sub
lods
hlt
cmp
xchg
sbb
and
ret
int3
sub
push
lods
sbb
sti
or
mov
js
xor
mov
cmp
push
aaa
push
cs
mov
pusha
xor
push
jg
xchg
insb
cli
dec
mov
shll
fs
in
mov
jge
dec
dec
dec
jp
cld
pop
negl
or
shrl
cmp
jp
fucomi
icebp
xor
sub
rclb
fs
in
push
or
mov
imull
pop
psrlw
and
sub
ja
scas
or
inc
fldt
mov
push
xchg
fwait
dec
sub
lret
mov
frstor
ror
test
cmp
mov
cmp
lods
sbb
test
xchg
jb
fs
out
shl
ss
fmull
or
xchg
push
sbb
enter
fildll
jne
mov
cmp
dec
dec
fnstenv
clc
xchg
stos
jb
fcoms
das
in
add
sub
pop
inc
mov
mov
popa
xchg
cmp
xor
mov
mov
add
outsb
sarb
or
cmp
push
jle
orb
test
mov
mov
out
pop
xor
icebp
ljmp
std
shl
stc
mov
lea
into
rep
inc
push
ret
fdivr
mov
adc
xor
or
es
insl
pop
fwait
push
push
mov
mov
cltd
fiaddl
mov
push
bnd
dec
outsb
pop
repz
daa
movsl
outsb
lahf
add
pop
in
arpl
pop
push
aam
mov
call
pop
and
cmp
call
movsb
inc
or
xlat
mov
inc
xor
inc
inc
add
mov
outsb
xor
sub
into
movsb
mov
outsb
scas
cmpb
xor
in
or
mov
ficompl
add
outsb
or
pop
and
and
add
mov
pop
stc
jno
shl
sbb
jnp
cmp
push
addr16
int
sbb
mov
pop
sbb
cltd
es
jle
clc
mov
jno
stos
add
dec
mov
adc
addl
and
dec
icebp
enter
pusha
out
jge
insl
data16
xor
imul
xchg
testb
mov
push
jne
pop
dec
mov
jnp
jmp
add
dec
push
pop
mov
lret
ja
ds
xlat
cli
lods
lcall
xor
das
sub
sub
mov
cmp
lock
div
cmp
pusha
imul
mov
lret
popa
call
cmp
adc
in
pop
mov
push
mov
fs
xchg
iret
stos
or
xchg
inc
loopne
push
aad
insb
adc
out
dec
sti
push
cld
divl
scas
insb
add
mov
xlat
movsb
xor
iret
hlt
sbb
sub
call
and
pop
ret
and
ja
mov
stos
loop
repz
and
mov
aas
sub
ds
ljmp
sbb
loop
adc
mov
mov
and
repnz
enter
or
fldenv
dec
sahf
in
mov
xor
sbb
ss
cmp
mov
or
dec
pop
xchg
cli
add
jle
sbb
jns
insl
and
mov
sbb
jmp
push
add
ret
push
push
cmp
lock
lret
lock
jmp
sarl
push
xchg
test
mov
jae
mov
call
pop
lcall
mov
shl
push
fldenv
ds
push
adc
roll
mov
sub
jb
shrb
xchg
jb
push
hlt
ret
jmp
outsl
push
jp
add
iret
xor
or
jle
cld
shrb
or
aas
xchg
lahf
scas
in
jecxz
xchg
mov
and
push
push
dec
xchg
divl
imul
push
and
inc
sahf
pop
je
and
jbe
in
outsl
mov
mov
sub
adc
pop
sbb
rcrb
xor
jle
add
push
or
in
adc
clc
dec
jo
add
push
mov
add
mov
mov
xor
and
ftst
sub
mov
in
daa
inc
cmpsb
push
ljmp
jb
jno
pop
divl
sti
clc
cmp
stc
add
jp
das
and
jne
lods
push
push
dec
mov
xchg
sbbl
sub
lret
fs
sbb
adc
int
sub
mov
mov
sbb
xchg
cmp
popa
cmp
dec
mov
jg
xchg
in
xlat
inc
dec
pop
andl
aaa
lods
mov
arpl
pop
lea
sbb
mov
jo
adc
negb
xchg
xor
xchg
mov
adc
jl
iret
rcrb
mov
inc
mov
xor
push
sbb
mov
sbb
icebp
and
insl
lods
xchg
add
pop
sub
or
stc
adc
ss
imul
test
jae
dec
lods
pusha
xor
mov
shlb
push
xlat
das
xchg
call
add
xchg
pop
add
loope
loop
dec
sahf
jns
mov
cld
xchg
outsl
inc
mov
negl
mov
jmp
adc
xchg
xor
stc
notb
dec
adc
ret
xor
ljmp
cwtl
and
jns
movsl
movsl
movsl
mov
jmp
inc
push
jl
cmpsb
push
xlat
lahf
loope
adc
std
jg
mov
jp
scas
stos
pop
xor
pop
sbb
mov
repnz
mov
jl
pop
xchg
fsubrs
adc
std
sbb
cmpl
mov
mov
ja
sub
movsb
imul
inc
test
jg
imul
cmpsb
inc
mov
cmp
dec
adc
push
mov
sbb
mov
mov
fldenv
out
or
jns
jns
aaa
cmp
rol
jp
jb
incl
imul
ljmp
imul
sub
movsl
mov
add
lret
push
outsl
fisubrs
test
xchg
out
cmp
mov
mov
jns
imul
mov
xchg
jge
adcb
jo
andl
stos
xchg
mov
cs
pop
sahf
or
sar
call
cmp
mov
mov
cmp
imul
sub
int3
in
stc
ror
fidivl
fstpl
mov
pop
push
mov
inc
push
add
pop
pusha
push
sbb
xchg
add
dec
adc
pop
pcmpeqd
dec
cmp
sub
lock
adc
in
imul
mov
out
push
neg
cmp
fidivl
push
lea
arpl
pushf
movl
rorb
fwait
cmp
cmp
add
shr
aam
hlt
mov
mov
mov
sub
icebp
push
dec
adcl
jp
xchg
divl
push
sbb
pop
ficoml
cmpl
shll
and
ret
lret
cmp
orb
pusha
loop
sbb
or
jle
dec
movb
push
and
pop
dec
sbb
jmp
xchg
jne
dec
xlat
fstl
xchg
push
jne
lock
cwtl
cmp
lock
xor
and
mov
lock
idivb
xchg
test
in
adcb
nop
rcrb
jbe
enter
out
adc
mov
and
aam
loope
cltd
or
jbe
shl
xchg
inc
ds
cmpsl
or
dec
dec
das
and
cmp
xchg
sub
movsb
cli
mov
je
add
pop
imul
stos
jae
into
or
push
add
cmpsl
mov
stos
xchg
js
je
je
addr16
fwait
jb
addr16
lds
rcl
push
cmp
hlt
fiadds
loop
or
jne
sbb
or
sub
into
lods
in
push
xchg
iret
sub
fildl
daa
xchg
frstor
inc
movsl
xchg
xchg
int
loop
adc
stos
dec
arpl
xor
mov
jae
test
leave
dec
xchg
xor
pop
sbb
in
cmpsb
mov
addr16
sbb
sbb
imul
pop
pop
sub
add
mov
stos
shlb
push
aam
popf
dec
cwtl
dec
movsb
cmp
dec
pop
mov
and
jg
lret
dec
dec
mov
gs
fiaddl
les
jle
add
mov
mov
out
outsl
mov
out
lods
pop
sub
mov
or
mov
iret
inc
xor
mov
xchg
jbe
shrb
loop
stos
sub
imul
pop
xchg
jb
and
aaa
xchg
lcall
outsl
fsts
jbe
push
mov
mov
jbe
into
mov
adc
push
mov
lcall
mov
daa
mov
jno
and
push
in
mov
pop
inc
gs
push
or
incb
js
cmp
fldcw
or
mov
lea
and
xor
jp
jle
pop
or
fmull
push
jg
pop
ljmp
dec
mov
mov
stc
les
push
pop
dec
pop
lds
sub
fwait
lods
dec
dec
push
jmp
xlat
sbb
hlt
cs
mov
mov
pushf
cmp
jle
aad
mov
jno
stos
fsub
scas
jnp
es
xor
mov
mov
int3
ret
lods
test
mov
fsubl
sbb
or
and
lock
lcall
addl
mov
fldt
imul
cwtl
lods
fcmovnbe
outsb
fwait
and
sub
pop
xchg
testl
add
enter
xchg
fistpl
dec
mov
popf
pop
mov
inc
jne
pop
jge
insb
push
test
mov
pop
mov
mov
cmpsl
sub
aad
test
dec
outsl
es
inc
mov
sarl
jl
dec
inc
pop
add
std
sub
mov
test
jge
or
stc
or
mull
push
inc
mov
test
and
lock
sub
pop
pop
mov
fcomps
jl
nop
mov
xlat
push
pop
inc
pop
inc
mov
xchg
sbb
fsubl
push
xor
stos
fwait
jg
movsl
out
sbb
xchg
or
imul
jnp
pop
cmp
mov
sbb
adc
and
mov
lods
add
aad
leave
lcall
mov
sub
out
lods
or
test
fsubl
iret
adc
cli
fdivr
loop
or
jle
outsb
in
lahf
jo
mov
push
out
daa
sahf
js
push
sub
dec
filds
jge
mov
push
mov
pop
mov
xchg
or
mov
xor
mov
nop
lret
cmpsb
push
add
test
int
call
ss
int3
inc
cmp
jne
push
insl
out
cld
pop
test
xchg
xchg
jbe
stos
pusha
lcall
in
ror
insl
ret
inc
movsl
jle
imul
pop
cmp
xchg
jge
imul
out
fcoms
test
cmp
fwait
dec
inc
push
sbbl
cmpsb
xor
stc
jbe
outsl
mov
adc
cmp
and
mov
stos
xlat
dec
je
aas
mov
pop
sbb
adc
stc
xchg
rcrb
fs
in
cmp
ret
mov
out
mov
nop
push
xlat
xchg
fld
shl
xchg
in
add
push
dec
iret
push
lret
and
xchg
mov
fisubrl
dec
shrl
lahf
or
sub
cmp
inc
testl
fildll
dec
inc
lahf
xchg
insb
scas
push
shl
cmpsb
cmc
loop
stos
lods
jmp
arpl
movsl
enter
fmull
fimuls
xor
fdivp
mov
push
iret
inc
jg
push
xchg
mov
dec
add
mov
mov
sub
ja
and
imul
sub
sub
fwait
cmp
scas
adc
pop
push
add
fs
mov
cltd
out
adc
pop
mov
mull
push
xchg
xchg
fdivl
mov
push
sub
orl
mov
xorb
add
je
fldenv
inc
dec
leave
test
in
lods
rcll
imul
cmc
and
les
pop
out
popf
repz
les
adc
jae
aad
jp
mov
stos
stos
fistl
arpl
ja
std
nop
inc
aaa
insb
pushf
dec
jge
push
rol
mov
ljmp
mov
sti
sbb
adc
pop
cmpsl
sbb
out
and
addr16
mov
mov
xchg
test
insl
xor
into
mov
orb
dec
dec
int
cmp
mov
sbb
adc
mov
insl
iret
adc
sbb
mov
dec
stos
repnz
xchg
jnp
pop
and
int
jae
push
mov
pop
pop
push
cmpsb
mov
jb
mov
das
or
sub
dec
mov
dec
mov
mov
lret
xchg
jg
dec
js
aad
inc
mov
cmp
popa
push
mov
jge
mov
mov
outsb
inc
in
mov
fcoms
pop
sub
push
mov
hlt
ficomps
add
jo
shll
outsb
sub
adc
xor
mov
hlt
push
aaa
mov
add
faddl
mov
jnp
mov
lcall
mov
cmp
push
js
mov
mov
sub
add
pop
lods
imul
pop
cmp
add
pop
sbbb
addr16
mov
cwtl
repz
adc
aad
mov
add
clc
out
aam
xchg
gs
in
dec
out
add
out
pop
jge
mov
hlt
xor
loopne
rcll
xchg
pusha
les
jae
sarl
cltd
push
fs
rcll
sbb
xchg
dec
pop
daa
outsl
jp
xor
sbb
ds
jnp
inc
mov
das
xchg
jne
and
push
add
popf
ds
in
aad
inc
mov
outsl
and
fnstcw
xchg
mov
sub
adc
loope
mov
lcall
test
mov
xchg
push
sbb
and
imul
mov
rep
pop
inc
scas
lret
jb
sbb
in
test
xor
mov
cmovge
insb
in
imull
lret
mov
dec
xlat
mov
inc
orb
inc
sbb
and
cmp
mov
out
test
push
jp
jne
js
xchg
pop
imul
dec
and
sbb
ss
ret
in
fiaddl
jnp
shlb
push
subl
mov
les
dec
and
push
call
and
lret
cmp
inc
sarb
push
test
aas
sbb
outsl
scas
mov
mov
cmp
bound
sbb
jns,pt
push
fldl
es
adc
mov
xchg
movsb
pushl
push
hlt
cmp
fmul
cltd
sbbb
loop
das
test
pop
dec
leave
mov
lahf
push
jmp
pusha
out
out
inc
jb
lret
in
pop
adc
or
adc
add
cld
jnp
leave
inc
sbb
or
xorb
outsl
inc
mov
test
pop
push
lods
sub
enter
sbb
or
xchg
sub
cmp
mov
insb
aad
jge
out
das
stos
push
sub
mov
clc
adc
mov
lods
aam
movsb
cmp
cmp
dec
imul
cmp
push
stos
add
mov
out
lds
jl
test
call
stos
adc
sbb
lock
mov
inc
popf
adc
cmp
mov
popl
mov
cmp
jno
inc
imul
inc
test
and
or
dec
call
ljmp
mov
adc
inc
psubd
enter
ja
out
shrl
xor
js
xor
rcrl
mov
mov
aam
enter
fdivl
cmp
add
xchg
or
mov
cmp
std
test
hlt
icebp
je
jno
les
or
or
rorl
dec
mov
xor
or
jb
daa
mov
push
movsl
rolb
into
add
mov
xchg
push
sbb
cmpl
dec
xlat
cmp
cmp
pop
cmp
pusha
test
mov
shl
stos
sub
pop
loop
fcompl
daa
dec
adc
and
outsl
gs
jl
clc
aad
stos
xchg
out
mov
sbb
sub
mov
mov
push
xor
stc
cmp
jo
inc
sbb
push
adc
fmuls
mov
mov
lds
jl
loop
in
add
fistpl
mov
sub
ret
add
popf
push
lods
or
shlb
push
cmp
repz
stos
test
inc
test
xor
mov
testb
pop
jge
test
sub
test
sub
and
outsb
lods
and
ret
jne
adc
dec
data16
sbb
xchg
scas
sub
xor
mov
xchg
mov
push
mov
cmp
movsb
loope
sarb
xor
sbb
push
pop
sbb
cmpsl
cltd
xchg
cmp
mov
pop
mov
inc
lods
pop
cmp
add
push
pop
sbb
sbb
movsb
pushf
inc
and
pop
in
testl
jae
jns
add
inc
xor
cmpsl
dec
mov
adc
adc
sbbb
sbb
insl
gs
sbb
pop
imul
sti
or
outsl
int
xor
loop
inc
xor
mov
lods
call
mov
popa
adc
and
inc
or
ret
sbb
push
dec
pop
and
loopne
inc
sbb
cltd
rolb
rcll
ss
jge
or
pop
cmpsl
les
int
sar
sub
data16
add
lds
xlat
cmp
sub
xor
dec
addb
imul
fildl
cmp
addb
cs
out
idiv
mov
mov
mov
ljmp
pop
mov
sub
xor
adc
lret
sti
mov
movsl
icebp
pushw
outsb
sub
dec
aad
jl
pop
insb
adc
pop
pop
enter
xchg
cltd
pop
mov
jae
push
data16
jae
lcall
popa
or
xchg
dec
aad
ficoml
cs
dec
adc
cltd
push
hlt
mov
lods
es
cltd
jns
xchg
mulb
inc
mov
xchg
dec
push
mov
mov
mov
lods
nop
mov
sub
jl
sbb
jmp
and
lret
call
stos
loopne
iret
xchg
sub
popf
pop
and
sub
aaa
movups
dec
jb
nop
push
stos
jb
stc
jnp
fisubrs
ljmp
shr
mov
mov
sahf
xchg
cmpsb
mov
pop
and
pop
and
std
sub
pop
xchg
pop
jecxz
inc
push
loopne
inc
push
nop
or
imul
adc
and
push
popf
push
push
pop
and
mov
pop
test
sbb
xor
push
loope
std
js
pop
pop
lret
arpl
imul
or
pop
sub
mov
in
and
test
fnstcw
xor
adc
nop
in
lods
rclb
das
fcmovb
loope
jno
scas
sub
ret
cmp
dec
mov
fisttps
or
test
int
sub
cmp
data16
jne
lock
cli
cmp
mov
fwait
pop
enter
mov
jbe
xchg
arpl
jmp
cwtl
cmp
and
cmpsl
cld
fldenv
mov
in
cltd
pop
test
xchg
je
inc
mov
mov
cwtl
out
sarb
cmp
in
or
cmp
push
loope
push
rcrl
xor
fdivs
xchg
stos
into
dec
rclb
rcrl
mov
jns
mov
stos
push
push
and
jl
xchg
mov
mov
push
pop
loopne
jb
out
mov
arpl
out
sub
subb
scas
jb
loop
dec
repnz
add
fcoms
std
dec
xchg
mov
mov
adc
or
mov
test
aaa
aam
cmp
cmp
jbe
scas
push
fistps
loopne
cltd
cmp
jns
inc
or
loopne
dec
sahf
cmpsl
dec
cwtl
je
or
adc
mov
xlat
push
mov
add
sub
movsb
xor
sbb
inc
pop
and
jbe
leave
or
add
test
and
push
arpl
mull
orb
inc
sbb
xchg
sbb
jp
xor
mov
and
data16
std
ja
loopne
call
inc
mov
mov
test
xor
push
imul
xlat
in
insb
xchg
sbb
xor
imul
cs
inc
stos
lods
aas
mov
adc
xchg
xor
pop
mov
inc
sahf
mov
jno
xor
clc
jno
fmull
mov
subb
mov
cmpsl
xlat
fcom
js
add
fs
lcall
jae
pop
push
sub
sub
mov
ds
dec
vdivss
daa
fcoms
add
jp
sub
xchg
jno
std
repz
bnd
inc
cmp
repnz
push
mov
lcall
in
mov
sbb
aas
or
add
jge
mov
mov
dec
jg
pop
mov
pop
xor
iret
inc
or
cmpsb
xor
sbb
sub
cmp
ficoml
sub
leave
mov
imul
dec
cmpsl
mov
jp
mov
mov
leave
sbb
call
addr16
sub
pop
or
imul
lahf
lock
sub
sub
loope
mov
test
jp
leave
mov
cmpsl
xchg
ja
clc
jb
dec
push
xor
push
sbb
and
jbe
out
push
inc
cmp
dec
fchs
iret
mov
std
pop
test
out
test
subb
inc
and
push
and
mov
movzbl
test
stos
int
xor
and
aad
cmp
cmc
dec
mov
mov
dec
cmp
mov
sub
xadd
lret
testb
and
scas
push
push
nop
dec
push
jne,pn
xlat
jo
fistl
cli
popf
iret
and
mov
cltd
shrb
pop
or
ffreep
jmp
cltd
lcall
faddl
mov
and
cmc
aaa
mov
leave
jae
imul
cmp
fnstsw
mov
xchg
dec
mov
aaa
loop
aas
adc
in
mov
mov
cltd
mov
xor
add
fists
mov
jmp
test
mov
hlt
outsl
xor
daa
ret
in
stc
sub
fs
jp
ss
out
add
shl
inc
xlat
mov
inc
lock
mov
jns
icebp
and
shll
xor
cmp
pop
add
adc
cmp
push
cmp
jne
push
jle
push
jbe
add
test
jle
pop
enter
fldenv
mov
imul
sub
rorb
adc
in
inc
out
into
adc
jmp
xchg
std
pop
imul
icebp
int
aad
dec
cli
fldenv
mov
data16
xor
sbb
pop
mov
xchg
outsl
es
pusha
lahf
add
scas
cld
jl
pop
cli
inc
int3
inc
mov
rcl
adc
inc
fucomi
mov
add
aas
mov
inc
and
inc
xchg
or
jo
mov
popf
jp
mov
ret
or
ljmp
push
andl
fdivs
xchg
sub
inc
rorl
iret
mov
hlt
mov
popa
adc
sti
cmpsl
xchg
lods
std
pop
out
sub
outsb
fwait
call
aam
imul
pop
push
push
shlb
std
rorb
cs
push
js
cwtl
call
repnz
jmp
movsl
xchg
cmpsl
fidivrl
loop
pop
and
test
jae
jbe
popf
lcall
mov
jno
insl
xchg
lods
lods
in
sub
leave
inc
aaa
sbb
mov
out
sar
out
loopne
movsl
and
or
icebp
push
mov
mov
push
mov
and
popa
in
ljmp
push
sub
fnstcw
pop
mov
insl
add
jbe
movsb
push
pop
test
dec
mov
lock
pop
pop
sbb
shlb
clc
shlb
stos
cmp
mov
ds
or
xor
mov
jge
mov
filds
pop
or
sbb
add
xor
popf
and
or
es
int
les
sub
scas
cmp
xor
std
inc
fwait
repz
fcmovb
jns
jb
mov
dec
rcll
sbb
std
cmpl
negl
sub
push
and
adc
cmp
sbb
ret
inc
jg
fldcw
mov
or
aas
adc
push
inc
or
test
rol
pop
lods
icebp
mov
out
fdiv
mov
jae
insl
test
dec
mov
sub
lcall
xlat
xchg
ljmp
mov
test
pop
cld
pop
mov
xchg
dec
push
cmpsb
and
mov
lcall
sarb
bound
lods
jns
pop
or
ret
add
mov
mov
xchg
jne
arpl
sub
inc
xchg
xor
ljmp
lcall
arpl
leave
push
pop
bound
xor
in
rcrl
jne
and
loopne
es
add
xor
out
cmpsl
clc
mov
lock
enter
inc
repnz
mov
add
daa
test
fisubrl
cli
mov
js
adc
pop
lock
xchg
jge
clc
dec
in
push
stc
lods
movsb
outsb
sub
std
mov
cmp
imul
xchg
pop
inc
cs
mov
dec
shlb
and
icebp
jg
sbb
sbb
xor
shrl
lods
cmp
add
rcl
enter
and
and
pop
in
pop
xchg
pop
sub
pop
dec
cs
mov
in
xchg
into
cs
ljmp
rcr
in
in
mov
pop
dec
hlt
jo
mov
xchg
call
push
lock
jbe
inc
sub
cmp
outsl
inc
mov
divl
lcall
or
icebp
movsl
and
jl
xor
mov
jo
je
cltd
push
adc
mov
mov
jp
cmc
sbb
sbb
add
and
cmp
insl
inc
dec
int3
inc
pop
adc
fcoms
movsb
enter
test
stos
sahf
cmpsb
xor
fsubl
pop
jae
mov
cmpsb
dec
xchg
jg
mov
int3
or
sbb
call
jne
push
incl
out
jg
jns
push
in
outsb
int
stc
ret
insl
mov
mov
cmp
or
clc
push
rcrl
ja
jp
pop
movsl
ljmp
lock
push
mov
shl
or
outsb
cmp
std
enter
cmpsl
into
dec
and
icebp
insl
test
mov
sub
inc
mov
repnz
pushf
in
xor
push
or
rcrl
aad
shlb
fs
repz
in
mov
ss
outsb
inc
fsubrs
add
dec
jle
and
lcall
push
xchg
xor
icebp
and
dec
aad
xlat
stos
mov
adc
and
ds
and
mov
inc
sub
shlb
add
fcompl
mov
mov
popf
cld
pop
or
out
sub
outsb
dec
and
addr16
into
imul
xchg
xlat
mov
pop
mov
jg
or
hlt
fsubr
loopne
dec
push
mov
insl
pusha
dec
push
test
ret
in
loopne
leave
addr16
insb
sbb
jbe
push
fisubrl
cmp
sbb
jmp
or
jb
lods
sub
je
in
xor
pop
jp
pushf
stos
sbb
in
cmpsb
icebp
dec
mov
push
lds
in
pusha
mov
rcrb
adc
adc
insb
jno
fs
clc
xchg
xlat
pop
pop
xor
ja
mov
pop
aad
pop
in
sub
lcall
sub
fiaddl
push
rcrb
sbb
dec
aad
and
dec
movzwl
fsubl
ds
cmpsl
repz
mov
outsl
pop
adc
push
ds
jno
test
jns
test
sti
cs
imul
mov
dec
outsb
movsb
in
xchg
xchg
sbbl
mov
push
addl
inc
in
movsl
or
cmp
lea
sarb
sub
aaa
lret
and
cld
xor
cwtl
and
sbb
add
dec
mulb
push
mov
das
pop
jae
sbb
xchg
sbb
ficoms
dec
dec
and
jo
push
repz
out
push
mov
fcomip
cmp
in
pop
adc
movsl
rcrl
ret
sbb
mov
mov
stos
add
xchg
fisubrs
and
cmp
insl
cmpsb
call
aad
cli
adc
xchg
cmpsl
notb
enter
inc
in
lods
mov
stos
pop
iret
jmp
repnz
or
int
call
push
movsb
test
lods
sub
xor
std
fsubrl
out
pop
sbb
adc
mov
les
pop
cmpsb
xchg
out
sub
push
inc
inc
repz
sarb
shll
ljmp
fstps
arpl
idivl
xchg
xor
xchg
add
mov
jl
cwtl
mov
or
pop
pop
imul
popf
sbb
icebp
or
shrb
psrld
std
add
cmpsb
rcrb
mov
xchg
test
dec
sbb
and
and
in
flds
jns
fldenv
or
and
and
test
jbe
mov
popa
orl
enter
fldenv
pop
or
push
nop
jb
add
stc
test
mov
sub
clc
adc
pop
jo
imull
stos
addr16
aam
push
popf
or
dec
cmp
pop
insl
daa
or
dec
lods
mov
or
in
pop
outsb
cmpsl
imul
mov
add
addb
sbb
add
or
ret
fistps
sub
add
scas
scas
aas
movsl
movsb
and
sub
out
pop
jecxz
aad
mov
ja
cmp
jge
popf
sbb
jno
inc
mov
popf
in
xor
sar
xor
add
and
popf
in
inc
pop
fidivl
pop
je
aam
jb
dec
push
jle
stos
and
sbb
js
mov
loop
jmp
aaa
rolb
xor
xor
mov
mov
jo
movsl
and
cmp
dec
lahf
xchg
lret
dec
ret
cs
push
popf
xchg
xchg
mov
cmpsl
imul
inc
sub
push
jo
mov
cmp
sbb
cmpsl
imull
xchg
jne
and
push
jmp
push
jne
mov
mov
pop
pop
pop
dec
std
outsb
movsl
mov
pop
jae
add
xor
in
push
stc
pop
lock
icebp
rcrb
mov
mov
push
jnp
pop
pop
sbb
rolb
xchg
push
mov
shlb
in
repz
add
ficomps
sbb
incb
popf
mov
nop
xchg
mov
test
mov
das
imul
fwait
push
out
fsts
sbb
lahf
in
and
mov
or
adc
jge
outsb
dec
xor
xchg
jbe
aaa
push
sbb
lods
iret
into
mov
ret
and
dec
and
push
gs
test
subl
addr16
notb
test
xchg
inc
adc
push
movb
movsb
push
imul
shll
mov
stc
xor
rclb
shlb
inc
sbb
xor
jns
cmp
lcall
xchg
mov
clc
mov
xlat
mov
push
enter
cmp
sbb
jl,pt
fxch
jmp
notb
lahf
leave
dec
out
jg
rorb
jl
xchg
sbb
loope
mov
nop
mov
cli
iret
mov
add
jbe
jae
cmpsb
dec
sahf
rcll
xchg
xor
cmp
xchg
lret
incl
xlat
mov
idivl
inc
sbb
adc
rolb
xchg
push
jnp
push
ljmp
js
icebp
mov
cmpsl
and
addl
add
push
int
pop
out
mov
push
or
aad
add
mov
jmp
aam
in
sub
sti
rcrl
mov
fdivrl
lcall
mov
testb
sbb
lea
sub
dec
into
mov
in
in
push
fistl
sub
and
push
cmc
or
adc
mov
bound
cwtl
or
fstpl
ret
sub
jno
mov
aas
mov
aad
ja
repz
dec
push
xor
or
cmpsb
push
and
mov
insb
inc
das
push
inc
and
test
inc
add
enterw
sarb
xorb
iret
xchg
addr16
cmp
jmp
mov
mov
or
rcrb
xchg
cmp
shrl
pusha
cmp
lea
mov
sbb
cli
push
cld
xlat
pop
mov
xchg
add
shlb
add
mov
adc
daa
xor
add
imul
mov
mov
adc
jmp
enter
leave
inc
stos
jg
cmpsl
adc
imul
inc
test
addr16
cs
lret
push
dec
call
sbb
addr16
jmp
incb
gs
xor
pop
in
sub
fldl
jp
jo
inc
xchg
sub
cld
std
lret
push
pushf
lods
cli
imul
sub
push
test
and
adc
and
mov
add
jp
sub
fbld
sub
mov
sbb
ss
pop
enter
xchg
imul
fnstcw
lds
mov
sbb
adc
mov
mov
scas
jecxz
insb
jne
into
xchg
fsub
out
push
cmc
iret
pop
xchg
push
lds
in
xor
inc
filds
mov
mov
popa
inc
and
and
leave
push
fwait
test
push
insl
adc
mov
pop
cmpsl
push
movsl
repz
stos
push
sbb
pop
xor
stc
arpl
mov
push
lcall
adc
inc
mov
popa
inc
stc
inc
dec
aas
sar
gs
xlat
jmp
aas
inc
icebp
jns
adc
lods
aam
fnstcw
shlb
xchg
add
es
jecxz
push
xchg
mov
pop
add
out
aas
ljmp
call
push
js
sub
cwtl
bound
pop
or
pop
ss
lret
dec
sti
arpl
adc
dec
lcall
sbbb
inc
mov
mov
lret
cmp
lcall
insl
xchg
mov
fisubrs
fisubs
into
xchg
xchg
xor
cmp
movsb
xchg
aad
jne
divl
and
daa
cld
shl
sub
sub
das
negb
or
loop
xor
sti
jl
rolb
jne
jb
sti
popf
push
jae
pushf
sub
adcb
in
mov
imul
fistl
stos
or
stos
mov
and
and
cmp
sub
lcall
inc
das
rolb
hlt
push
les
push
push
ret
mov
xor
pushf
int
loopne
mov
add
sbb
pop
jp
push
sub
add
out
insl
lods
and
aaa
and
and
push
adc
xchg
cmpsb
aaa
xchg
subb
mov
in
cmp
mov
cmp
popa
and
dec
arpl
push
pop
ljmp
dec
mov
add
sbb
push
cmp
or
in
test
or
mov
jmp
repz
in
mov
ret
cmpsl
shrl
aaa
sub
push
mov
xorl
dec
cmpsl
dec
test
stc
xchg
xchg
sub
rcr
and
ret
dec
mov
dec
shl
push
inc
bound
push
adc
jno
in
mov
sbbl
mov
xchg
pop
bswap
mov
mov
jae
jmp
sbb
xchg
or
daa
popa
pop
mov
inc
inc
pop
pop
mov
arpl
aad
rclb
test
enter
or
jne
mov
sub
cs
test
mov
add
fidivl
and
aam
sub
mov
out
lcall
pop
cltd
xlat
jle
or
sub
mov
xchg
cmp
sub
outsl
push
jno
inc
mov
scas
inc
imul
out
ds
in
sub
sub
movb
adc
mov
push
outsb
into
jne
mov
outsl
sbb
lret
xorb
add
sbbl
fldcw
pushw
sub
xchg
add
out
faddl
ffreep
outsl
push
pushf
punpckldq
pop
dec
push
xor
ljmp
pop
lods
jg
add
mov
in
scas
pop
fstpl
test
dec
enter
movsl
test
jp
mov
int3
gs
shl
loop
aam
je
test
dec
mov
bound
in
popf
jne
rol
mov
pop
idiv
pop
pop
jl
push
dec
in
es
sbb
js
mov
sub
pop
lret
roll
lods
pop
scas
sub
push
fdivp
adc
sbb
push
mov
mov
cmpsl
je
add
rorl
jbe
jae
stc
int3
enter
push
push
out
call
std
in
aad
xchg
aam
sub
les
jno
fmull
scas
mov
fs
add
pop
xor
adc
xchg
pushf
es
lds
clc
movsb
add
ja
ljmp
jo
mov
lcall
out
pop
shl
xor
scas
test
popa
dec
fcoms
jl
push
testb
cmp
out
or
bnd
xchg
and
fidivrs
icebp
popf
imul
outsb
push
push
aam
insl
fs
xchg
data16
in
in
imul
enter
lret
add
cmp
int
add
in
js
inc
aad
iret
mov
data16
mov
or
mov
imul
dec
adc
sbb
std
add
sub
daa
mov
bound
enter
add
adc
push
out
jbe
in
fmuls
cmp
enter
aad
popa
mov
das
leave
sub
not
fs
push
xchg
xchg
enter
lret
fwait
add
icebp
insb
jne
xorl
mov
jmp
leave
out
cmc
sbb
sub
sub
ljmp
out
test
jne
sbb
and
xor
and
data16
cmp
gs
push
sahf
push
nop
aam
pusha
notl
mov
bound
int
and
pop
insb
lcall
adc
mov
inc
gs
pop
scas
das
ss
jmp
xor
push
loop
mov
rcll
sub
dec
dec
pop
imul
scas
adc
icebp
push
sti
loopne
xchg
stc
dec
fwait
in
aas
sar
out
add
cmp
xlat
xor
lcall
ds
push
mov
or
sub
enter
jo
dec
and
and
pop
push
fbld
lret
inc
ja
pop
lret
dec
and
pop
sti
sub
call
mov
ss
loopne
rcl
cs
ret
xchg
jb
or
pop
push
ss
stos
inc
or
and
pop
or
jle
dec
mov
pop
in
mov
test
fidivrl
sbb
scas
pushf
pop
pop
lock
call
lock
jecxz
loope
jge
fwait
xchg
cld
scas
mov
aaa
add
sbb
ret
stos
fdivrs
test
scas
cmpsb
imulb
int3
mov
out
iret
insl
gs
jl
sbb
pop
add
mov
push
push
adc
ss
pop
outsb
xor
pushf
ja
xchg
cmp
fsubrs
pop
lea
push
and
cli
add
jmp
std
testb
sub
add
dec
jmp
push
push
jge
gs
int3
cmpl
inc
jae
cwtl
adc
lods
sbb
adc
inc
aaa
push
mov
es
xchg
repnz
push
jecxz
cmovne
andb
imul
fistpl
aas
add
call
dec
jae
clc
mov
sarl
aad
jns
mov
inc
repnz
cmpsl
cld
pop
incb
rorl
out
es
adc
and
mov
add
jb
add
fisttpl
stc
out
jns
pop
jmp
xchg
ss
jl
aas
dec
or
adc
xchg
inc
jb
dec
aaa
and
fdivrl
jbe
mov
lahf
ss
pop
es
jo
and
mov
jp
adcl
sub
push
jns
sbb
test
and
jge
lods
inc
push
pop
hlt
aas
jno
les
or
das
jnp
and
rol
bound
mov
clc
lea
out
in
loopne
aas
dec
mov
lcall
inc
lea
xchg
dec
or
push
or
cltd
mov
aaa
push
or
fisubrs
lock
xor
jmp
push
pop
mov
mov
xchg
mov
incl
jno
xchg
stos
hlt
ret
pushf
aad
ret
subb
js
ret
aad
adc
arpl
jg
dec
xchg
xor
enter
inc
in
mov
out
pop
dec
cmc
in
or
mov
jmp
neg
pop
sbbb
jb
push
mov
and
repz
push
push
out
mov
jmp
js
inc
outsb
ss
mov
push
mov
aas
cmp
cwtl
xchg
jo
stc
mov
and
mov
sti
mov
movsb
mov
jb
mov
in
aam
dec
cmp
lods
mov
push
aaa
loop
fstps
xchg
inc
pop
fdivrp
mov
cmc
push
xchg
sbb
mov
mov
add
outsb
movsb
xchg
mov
loope
nop
loopne
jecxz
xchg
and
leave
xor
sbb
adc
pop
call
out
hlt
daa
mov
mov
jle
loope
pand
dec
xchg
jne
xchg
aam
cmc
shrl
cmp
shlb
fisttps
aaa
fs
jb
jmp
or
xchg
sub
mov
in
jle
push
pop
sbb
imulb
inc
dec
je
test
cmp
icebp
int3
test
mov
mov
push
aad
mov
test
aas
cs
mov
call
ficoml
and
dec
pop
outsb
pop
jp
stos
mov
adc
pop
and
mov
andl
mov
in
jle
aaa
popf
cwtl
clc
mov
push
pop
push
enter
add
imul
cli
add
stos
and
int
adc
movsb
mov
loope
sub
inc
cmp
jne
aad
test
lods
add
cli
xchg
inc
or
pop
mov
cmp
mov
cli
or
fisubs
test
fsubr
bound
add
icebp
sbb
or
dec
negl
fwait
inc
jbe
lret
out
inc
and
dec
jne
adc
mov
sub
dec
out
popf
sbb
negl
arpl
ljmp
push
jae
mov
mov
mov
mov
mov
mov
fildl
add
pop
clc
adc
cmpsb
pushf
jne
xor
test
jns
leave
jb
inc
mov
sbb
stos
push
sub
mov
xchg
stos
pop
and
popa
sub
xlat
lcall
outsb
sbb
outsb
test
inc
sahf
in
cmpl
sub
scas
jge
es
adc
dec
or
jmp
lahf
push
aad
pop
fistl
jnp
enter
insb
pop
lods
mov
clc
and
push
in
jecxz
ret
mov
adc
adc
iret
inc
fnsave
pop
popf
fildll
jmp
mov
xor
jnp
stos
push
repz
mov
dec
mov
xor
push
mov
sub
jo
pop
jns
fsts
outsb
lods
add
jp
inc
sbb
or
cli
movsb
and
jmp
imulb
call
pop
scas
xor
mov
jnp
ret
push
or
cmp
in
test
cmpsw
fdivrs
sbb
shll
cli
inc
pusha
jae
jnp
cmpl
dec
in
lret
mov
add
sbb
cmc
mov
sub
push
cmpsl
and
mov
insb
fistpll
xor
inc
mov
pop
out
sbb
push
iret
sbb
inc
cmc
cmp
ficomps
cwtl
sbb
hlt
test
mov
jge
pop
daa
sbb
sub
je
jp
loopne
cmp
out
shll
pop
sub
iret
push
icebp
sub
jae
jnp
fwait
dec
clc
push
roll
adc
aas
pop
int3
adc
ret
movb
lea
insl
call
mov
mov
add
or
pusha
shll
jmp
pop
cwtl
mov
xor
dec
std
push
mov
aas
sub
cmp
inc
es
popa
push
push
clc
jl
mov
je
lret
addr16
pop
xchg
sub
push
or
inc
aaa
pop
shl
rorb
xchg
ljmp
mov
and
rcr
jno
pop
push
xor
jo
jp
jmp
jmp
inc
and
outsl
push
push
rcrl
lea
adc
mov
and
push
dec
andb
mov
lcall
notb
sti
jbe
stos
scas
pop
sub
nop
xchg
mov
inc
mov
pop
jnp
es
and
xlat
or
fs
js
repnz
outsl
in
mov
in
lret
mov
daa
aaa
fldenv
sub
loopne
dec
ja
or
rcrl
mov
insb
popf
jecxz
dec
jns
xchg
jb
sub
xchg
push
mov
jnp
xchg
cmc
test
mov
xor
lret
int3
sbb
aaa
ljmp
lahf
jge
sbb
cmp
sub
pushf
mov
in
add
add
inc
xchg
jne
loopne
sub
push
je
xor
xchg
jge
fsubl
jno
inc
adc
jnp
pop
pop
in
out
pop
cltd
in
ja
fnstsw
mov
mov
jmp
dec
das
in
imul
jle
sahf
outsl
adc
sti
or
pop
aaa
dec
dec
leave
ja
cld
hlt
cmpl
orb
in
or
pop
cmpb
add
iret
popl
ds
mov
pop
into
jp
pop
mov
pop
ljmp
push
ret
push
pop
mov
sub
adc
sub
js
cmp
ret
aaa
dec
and
push
xchg
sarb
test
mov
inc
loop
das
roll
sbb
aad
xchg
ret
pop
mov
xchg
mov
push
sbb
and
sbb
pop
sbb
mov
mov
lret
shrl
push
out
inc
lds
scas
bnd
imul
cmp
pusha
mov
test
cmpsb
sbb
adc
lods
dec
jae
test
scas
enter
cs
pop
rep
fwait
cmpb
outsl
orl
add
lret
popf
cmp
xchg
insb
xchg
mov
stos
xchg
mov
sbb
sub
insl
pop
mov
sti
loope
jl
push
lret
pop
cmp
mov
or
movsl
es
mov
mov
mov
rol
pushf
jp
pop
test
outsl
add
pop
xchg
mov
push
mov
xchg
int
jns
pop
add
call
mov
pop
dec
sub
and
imul
leave
pop
in
inc
cs
rcr
jo
cmp
xor
arpl
fcomps
sbb
jne
add
dec
jb
popf
movb
mov
and
and
sub
adc
pop
repz
bound
adcl
je
test
fadd
loop
rcrb
push
sub
insb
hlt
xor
pop
movsb
mov
mov
movsb
push
mov
insb
xchg
imul
ss
mov
loope
ljmp
jle
dec
in
test
repz
daa
cmc
outsb
jbe
lahf
int
sarb
ret
inc
cmpsb
jns
cmp
cmpsl
mov
call
sbbb
das
js
xor
sub
xchg
dec
add
sub
add
cltd
inc
int
jbe
into
adc
ret
leave
clc
pop
add
cwtl
adc
call
inc
loopne
push
loopne
insb
pop
in
das
imul
sub
jecxz
mov
sbb
sti
enter
xorl
in
pcmpeqw
inc
mov
outsl
movsl
jbe
movsl
jmp
jg
sub
cmp
out
sub
mov
out
sbb
fstps
out
lret
cwtl
out
jns
aas
sti
icebp
pop
jg
dec
ljmp
adc
test
popf
pop
jno
add
inc
lock
push
push
or
fistl
push
pop
je
push
mov
jbe
xchg
iret
fst
pause
icebp
inc
aas
jg
pop
fmull
push
int3
imul
dec
mov
mov
je
dec
lock
mov
mov
jg
push
inc
ds
popa
daa
in
or
jo
data16
sahf
fcmovbe
or
wrmsr
xchg
xor
push
in
add
movsl
test
stc
mov
aad
xor
or
add
fdivrp
or
xor
ret
fs
add
fnstsw
ret
leave
sbb
inc
gs
into
popa
mov
insb
pusha
cmp
mov
and
add
sub
pop
fld
sbb
sbbl
and
mov
dec
add
dec
shrb
shlb
xchg
pusha
adc
jb
lret
les
bound
sbbl
jb
insl
daa
into
lcall
sahf
inc
stc
jae
in
mov
div
mov
popa
xchg
sbb
shr
xlat
les
mov
nop
scas
and
jle
push
or
in
scas
cmp
jo
movsb
sbb
movsl
scas
jle
jg
pop
pop
xor
int3
mov
adc
test
mov
pop
arpl
xchg
std
cmp
std
jmp
aam
pushf
jp
dec
loop
push
add
popf
mov
mov
movsb
sub
sub
pop
sub
jne
jmp
lahf
lods
xchg
push
xor
pop
inc
sub
xchg
fdivrl
pop
fwait
xchg
stos
xchg
subb
cmp
mov
jmp
cwtl
out
inc
cmpsb
aas
imul
mov
daa
sub
pop
mov
dec
xchg
stos
inc
xor
lea
ret
sti
push
in
shll
add
mov
sbb
jns
fsub
fcoms
in
mov
movsb
mov
pop
cmpsl
add
popf
imul
popf
mov
jg
nop
push
cmpsl
sti
sbb
loop
jne
sbb
sub
add
pop
dec
mov
dec
ret
sbb
mov
xchg
movsl
repnz
cmp
xor
jmp
cli
aas
out
int
rorl
push
xorl
dec
fadds
subl
shl
iret
or
sbb
pop
popw
lods
jno
mov
xchg
lods
mov
xor
mov
and
das
paddw
mov
aaa
out
sti
xchg
cmpsb
repz
jl
and
pop
push
jae
enter
xchg
fdivr
jns
call
or
push
adc
adc
scas
push
jae
and
lock
or
lods
icebp
adc
mov
xor
push
mov
pop
push
xlat
push
aas
movb
cmp
pop
add
inc
sbb
test
pusha
hlt
test
xchg
sub
enter
sub
sub
inc
inc
mov
cmp
inc
mov
loope
push
lock
inc
fisubrs
cmp
adc
ds
pop
pusha
inc
out
and
in
jnp
cmp
or
adc
fistpll
lcall
fnstcw
lahf
xchg
push
and
sub
jmp
loope
mov
es
outsb
xor
and
push
and
lahf
das
sub
mov
adc
mov
je
mov
and
jno
xor
push
fs
mov
push
sbb
adc
incb
ret
mulb
add
incb
cmp
or
in
dec
rclb
test
cld
ja
sbb
jl
fs
in
je
sbb
movsl
sbb
sub
decl
pop
mov
cmp
dec
lret
xor
jl
mov
icebp
nop
scas
es
nop
adc
fdivrs
push
hlt
mov
popf
mov
lahf
rcrl
lock
addl
imul
jns
pop
mov
or
mov
mov
dec
sub
test
jbe
test
mov
mov
mov
xlat
adc
fs
cwtl
sbb
or
xor
add
imul
mov
jl
mov
jg
cmpsb
pop
insb
int
popa
insl
ljmp
pop
js
pop
jno
xorl
decl
jmp
jg
add
es
shl
push
sub
or
cltd
test
and
inc
cmc
iret
mov
imul
mov
testb
mov
jo
push
jge
mov
jne
loop
hlt
cli
push
pusha
cmc
push
xor
xlat
ljmp
mov
xchg
push
pop
in
xchg
and
mov
mov
pushf
fstps
idivb
aad
movsl
bnd
dec
dec
rcll
push
lret
jp
fistpll
push
or
xlat
and
sahf
loop
push
add
cmp
lret
rorb
scas
lea
shl
adc
adc
aaa
or
scas
jbe
iret
popf
mov
outsl
jp
xchg
loopne
lahf
das
xor
cli
lret
and
pop
lahf
gs
mov
xorb
ss
out
shll
popa
add
inc
outsb
add
and
repnz
xchg
sbb
inc
rcll
and
push
nop
stos
insl
lock
ljmp
dec
test
jmp
mov
pop
into
jae
mov
jle
pop
dec
add
jnp
arpl
incb
adc
and
sbbb
rol
stos
jmp
pop
movsl
orb
fsubr
lock
cmc
inc
mov
xor
cmpsb
and
in
imul
arpl
or
cltd
les
jl
xchg
loope
dec
mov
mov
pop
adc
stos
pushf
ret
adc
fdivs
dec
loope
push
mov
xor
rorl
sbb
xor
mov
sti
ljmp
and
xorb
push
ljmp
jno
icebp
data16
ja
mov
rolb
cmp
push
std
xchg
aas
aas
repnz
lea
pop
imul
lds
jl
or
test
ret
arpl
jb
inc
inc
push
jge
pop
cmp
stc
dec
cmp
pop
out
cwtl
stc
xchg
not
daa
xchg
insl
xorb
push
mov
cld
sub
in
bound
repnz
inc
out
pop
pop
out
xor
or
lret
scas
test
xor
inc
jae
insb
mov
jbe
adc
rcrl
add
dec
xor
mov
and
or
add
or
dec
and
xchg
or
popf
mov
mov
hlt
mov
sbb
arpl
sbb
xor
gs
clc
or
lds
fdivl
dec
adcb
inc
jp
das
scas
ja
sub
pushw
mov
sbb
das
insl
cmp
mov
jbe
das
aas
iret
jge
mov
addr16
pop
add
xor
mov
and
lds
jmp
mov
or
jbe
int
je
in
int
push
push
fsubrl
push
sub
es
fs
mov
ljmp
pop
cmpsl
cmpsl
int3
inc
or
out
mov
push
jne
sub
scas
lods
xchg
inc
dec
test
and
mov
lds
jne
dec
daa
les
push
pop
lock
sbb
pop
push
mov
test
arpl
aas
ds
mov
outsl
and
outsb
xor
je
cld
xchg
cli
pop
jno
xor
cmc
xor
je
nop
sub
xchg
lret
push
les
add
or
data16
ret
jo
fs
xor
sbb
xchg
pop
dec
push
jo
jne
lret
jno
adc
jnp
add
lcall
movb
divl
dec
jb
mov
out
push
push
divb
std
pop
mov
outsl
repz
jle
jbe
add
mov
les
clc
rcl
and
and
xor
ja
sarl
repnz
xchg
jb
movsb
leave
lock
outsb
sub
jnp
ret
imul
xor
mov
inc
iret
dec
and
es
pop
mov
ret
and
inc
pop
and
adc
sbb
test
push
fcompl
lcall
cmp
xchg
les
xlat
enter
insb
and
push
pop
push
lods
xchg
das
aad
jp
les
inc
lods
test
push
push
insb
jb
shll
into
repnz
xchg
adc
or
adc
xor
sub
mov
gs
fptan
rol
lods
pop
add
push
pop
cmp
icebp
mov
cltd
dec
call
cs
call
pop
fsubr
cmp
add
out
xchg
mov
test
popf
lret
dec
push
and
int
add
fnsave
jp
mov
xor
mov
movsl
pop
jl
sbbl
std
and
dec
pop
adc
jno
out
push
or
inc
inc
pusha
dec
mov
mov
add
mov
fucomip
fiaddl
xchg
mov
icebp
dec
outsl
nop
orb
ss
ljmp
sbb
adcl
xchg
pop
call
sahf
sbb
adc
fwait
or
and
push
push
cmp
arpl
mov
adc
jne
movl
insl
adc
out
fwait
xchg
mov
jne
dec
mov
mov
dec
push
jb
daa
jmp
push
and
test
adc
jle
movsb
add
cmp
pop
pop
cmpsb
sub
pop
fimuls
adc
imul
or
cli
mov
jns
popa
lret
iret
dec
out
popa
nop
and
outsl
sbb
jbe
enter
std
loopne
jl
or
inc
mov
dec
mov
sub
fs
popf
cmp
sbb
pop
ds
scas
xchg
daa
lods
push
and
mov
sti
inc
stos
or
dec
fwait
sub
das
out
push
loop
adc
cmpsb
jg
lock
andl
out
cwtl
xor
sub
sub
cmpsb
jbe
mulb
fwait
lret
add
adcb
add
sti
or
mov
add
and
xchg
adc
push
lods
cmp
mov
inc
inc
jge
test
je
mov
jo
mov
mov
or
mov
mov
loope
out
lds
fsubr
mov
push
jo
rcrl
aaa
clc
dec
add
pop
or
int3
into
in
rorl
dec
scas
pop
xlat
daa
sbb
ljmp
mov
mov
imul
cltd
cmpsb
pusha
and
jnp
cld
adc
sub
aaa
fldcw
dec
inc
cwtl
or
mov
outsb
aam
cwtl
cmp
je
cmp
inc
in
xor
mov
cmc
testb
lcall
sub
add
test
lds
mov
insb
sbb
hlt
or
sbb
cmp
or
arpl
mov
xchg
dec
pop
cmp
sub
cmpsb
push
aam
inc
push
popa
sub
mov
mov
andb
sti
sbb
aaa
lret
jns
xchg
and
imul
in
sti
xor
xchg
sti
xchg
inc
rcrl
out
insb
lret
rorb
push
cld
mov
lock
shll
sbb
mov
ljmp
pop
xor
mov
scas
pop
sub
std
pop
inc
jg
add
scas
cltd
mov
std
imul
mov
outsb
sub
jnp
xchg
mov
loope
mov
push
rcl
mov
fsts
lret
cmpsb
mov
fwait
xchg
push
jne
pop
mov
adc
xchg
or
mov
sarl
aad
sub
mov
mov
fcompp
int3
sarb
pop
adc
mov
out
lcall
push
inc
not
xchg
push
faddl
xchg
je
test
out
sub
mov
or
aas
adc
or
mov
pop
pop
push
into
daa
lcall
frstor
lock
movsb
fidivrl
push
ds
icebp
sub
mov
sub
fistpll
jp
jnp
das
pop
cmp
inc
ja
fwait
add
test
repz
xchg
scas
and
cmp
xchg
jmp
test
sbb
mov
push
xchg
sarb
push
popa
cmp
jbe
lds
test
arpl
ret
frstor
pusha
inc
mov
push
out
xor
cmp
sahf
lds
sbb
imul
cmpsb
mov
bound
movsb
push
lods
sub
je
push
mov
dec
imull
jbe
dec
inc
notl
rolb
push
adc
into
push
inc
outsb
lcall
out
add
test
mov
jmp
xchg
inc
xchg
or
xchg
or
mov
fstpt
stos
push
cmp
sub
cwtl
or
pop
movl
pop
mov
sub
rcll
clc
xor
lret
jae
in
mov
push
mov
iret
decb
stc
sbb
adc
into
mov
mov
flds
push
lock
xchg
fs
lret
out
jns
bound
testl
lods
js
mov
xchg
insb
test
or
pop
bound
mov
pop
inc
call
mov
aaa
popa
or
test
mov
inc
or
testb
pushf
jo
xchg
test
out
sub
arpl
sub
pop
jp
test
cltd
les
les
arpl
adc
jae
jle
scas
js
scas
mov
mov
mov
nop
decb
jne
data16
xor
lods
inc
pop
leave
out
cmp
sahf
jmp
add
dec
xchg
bound
mov
xchg
repz
sbb
jb
mov
lret
shll
push
outsl
cmp
sbb
inc
sub
push
inc
jl
aad
in
bound
mov
lods
push
or
aaa
cmpsb
hlt
or
xor
sub
cmp
inc
call
pop
sbb
push
icebp
mov
dec
lret
or
into
jl
pop
xchg
jno
icebp
pop
pop
and
in
pushf
push
and
test
push
xchg
mov
into
test
pop
dec
jbe
in
sub
sub
pop
adc
out
lds
push
adc
add
mov
jnp
mov
pusha
cmpsl
inc
cmc
mov
psubsw
into
ret
jne
repnz
mov
adc
push
fdivrs
repz
cmpsl
sarl
cmc
adc
dec
lods
test
imul
mov
and
xchg
jnp
or
mov
andb
pusha
inc
dec
or
mov
cmp
add
repnz
leave
and
out
repz
pop
adc
xor
ss
push
imul
pop
jl
xchg
sbb
push
nop
cmp
sub
adc
enter
fiadds
outsb
ss
adc
dec
cmp
lods
xchg
xchg
ret
mov
cmpsb
movsb
push
dec
jns
sub
sub
into
cs
dec
xor
nop
scas
pushf
in
adc
out
xchg
mov
xchg
add
cmpsb
shrb
push
ret
fldl
repnz
out
sub
xor
mov
shll
xchg
fists
les
jl
notb
xor
jl
adc
or
push
push
add
les
or
aam
test
push
pop
xchg
sets
loopne
jmp
call
sbb
xor
dec
mov
in
jg
fldt
in
movsb
ljmp
mov
add
in
test
sbb
pop
sarb
pop
jmp
lods
cwtl
xor
add
mov
or
or
cmp
dec
jmp
and
push
xchg
mov
outsb
mov
roll
std
movsl
pop
push
cld
push
fists
daa
je
add
or
jge
jbe
rclb
lcall
mov
scas
shrl
or
adc
int
push
scas
cmp
lret
adc
lret
sub
cmp
aam
jg
sub
inc
bound
fwait
mov
cmc
gs
cltd
lret
cmpl
xor
test
fmuls
pop
rorl
ds
gs
stc
stc
mov
inc
lret
jle
inc
mov
or
sub
dec
std
hlt
popf
sti
notl
push
jns
icebp
mov
scas
sarb
loop
mov
dec
icebp
sub
sub
out
aas
mov
adcb
mov
xchg
inc
pop
ss
leave
jbe
cmc
das
lahf
stos
lahf
add
imull
or
push
xchg
and
imul
mov
push
enter
fstps
pusha
aad
in
xchg
arpl
xor
mov
jp
xor
cli
and
cmp
mov
insb
mov
xchg
fstps
sti
jae
xor
outsl
cmp
sti
and
xor
jg
pop
mov
xchg
repz
xchg
lcall
fldenv
fnstenv
rcr
in
cmpl
js
icebp
jp
icebp
pop
gs
inc
cld
xor
cmp
mov
sbb
loopne
jno
aad
push
imul
lahf
mov
xor
xchg
rcll
add
in
fisubrs
in
push
jne
ds
push
repnz
dec
movb
sahf
dec
addr16
insl
add
push
pop
out
pop
stos
pop
push
scas
into
sahf
lahf
roll
stos
jb
fwait
addr16
cmp
mov
adc
or
call
cmp
xorl
pop
bound
pop
sub
pop
pop
fwait
pop
stc
scas
and
jmp
push
ret
dec
mov
shrl
pop
mov
pop
adc
mov
mov
sbb
roll
push
enter
or
outsl
jb
cmp
or
popf
imul
cmp
add
mov
testl
iret
sbb
clc
pusha
mov
jo
popf
fildll
sub
mov
repz
sbb
jb
push
test
and
fcmove
or
hlt
mov
push
lock
cmp
add
rcrl
rorl
xor
mov
xor
lea
add
je
mov
pop
test
aam
imul
xchg
mov
mov
loope
xchg
mov
outsl
add
test
inc
popa
mov
pop
mov
sub
imulb
stos
idiv
movsl
ss
add
outsl
aas
or
ja
cmp
jge
jo
cmpsl
aad
test
lahf
push
loopne
pop
mov
xor
sbb
loopne
mov
push
jae
sbb
and
add
jmp
rol
fcmovbe
xor
cs
jae
inc
lret
icebp
cmp
pop
das
ss
mov
outsb
ja
nop
inc
mov
mov
sahf
movsl
and
pop
xor
pop
outsb
iret
aas
jp
fmulp
pop
and
enter
jo
mov
xchg
test
movsb
cmp
adc
popa
adc
call
mov
mov
movsb
sbb
cmpsb
add
nop
or
mov
cmc
pop
mov
and
and
push
mov
or
pop
push
inc
mov
enter
out
sub
push
push
cwtl
incb
addr16
sub
mov
fs
push
mov
nop
into
dec
dec
cmp
push
add
sahf
adc
mov
movsb
mov
mov
ret
lods
jle
and
rclb
dec
les
xor
stos
mov
xchg
cmp
inc
pop
add
aad
jbe
mov
xor
or
mov
int3
negl
imul
mov
mov
icebp
loope
fisubs
outsl
adc
jmp
add
jo
ret
inc
mov
fs
mov
jnp
xlat
pop
add
lds
jmp
daa
pop
mov
gs
cltd
sub
xchg
and
imul
and
data16
lahf
mov
sbb
mov
jnp
cmp
repnz
mov
jae
lock
loope
lea
outsb
sub
mov
mov
pop
pop
bound
hlt
xor
je
test
push
fistps
in
and
jb
sbb
addb
fiadds
sbb
xchg
mov
or
inc
or
hlt
sbb
hlt
cmp
je
hlt
aad
xorl
push
sub
xlat
mov
std
push
push
pop
cmp
sbb
adcb
add
loope
cmp
jno
cmp
cs
sub
stc
imul
push
loop
cltd
lret
jo
stc
jno
xchg
sti
cmc
jle
lret
add
mov
test
cld
jmp
adc
mov
cli
loopne
adc
jmp
dec
dec
push
jns
adc
jp
minps
dec
cmpl
outsl
sub
repz
sahf
xor
xor
adc
dec
lea
pop
dec
testb
sub
sbb
aam
leave
fsub
pop
jnp
sub
lds
stos
les
jmp
cltd
roll
inc
xlat
push
dec
xor
sbb
leave
cmp
mov
jp
cltd
scas
add
fldt
lock
cld
out
sbb
add
xchg
jnp
das
rcrl
mov
mov
adc
xor
mov
and
shll
xchg
xchg
pop
aaa
xlat
icebp
ljmp
jp
jmp
jg
cmp
xchg
adc
jg
inc
cs
popf
outsl
sub
aad
adc
stos
mov
out
fstl
and
dec
out
rcrl
dec
lods
pushf
js
enter
pop
fadd
xchg
lea
leave
inc
into
lods
jno
inc
lds
jp
inc
cltd
mov
push
xor
cli
and
pop
ss
cld
loope
mov
and
and
cmp
sub
cmpb
adc
fisttps
adc
mov
fmul
sbb
cmp
in
jb
sub
jp
insb
or
push
dec
jo
xchg
sub
lods
jno,pt
cmp
ds
or
cmp
into
jg
pop
sub
ret
mov
ret
inc
fs
pushf
jle
insb
sti
ds
jo
lea
sahf
adc
mulb
and
inc
push
out
add
sub
and
pop
adc
addr16
adc
insl
lods
aam
negb
stc
pop
xchg
out
inc
pop
fwait
inc
add
aas
leave
jnp
stos
sub
loope
mov
jno
mov
or
push
cmp
stos
jl
stc
dec
pop
fwait
out
lret
test
and
mov
fcmove
orb
mov
adc
and
or
ret
jl
xchg
aad
and
aad
push
push
push
stos
cmpl
sub
filds
push
imul
loope
popa
jo
and
push
mov
loope
push
scas
push
jb
pop
sti
test
movsb
jecxz
in
js
pop
std
ds
and
movsl
mov
insb
js
fwait
aas
movsl
xor
xlat
fdivs
andl
cmp
add
jns
sub
and
repnz
cmp
mov
stos
or
push
push
ret
cmp
lret
ss
mov
test
cltd
std
sub
mov
iret
jle
jmp
mov
mov
loopne
mov
push
inc
xchg
adc
and
xor
xchg
add
adc
fwait
fs
fs
insb
fldl
repz
je
mov
testl
dec
mov
pop
and
lcall
testb
mov
xor
subl
cmp
mov
mov
mov
fisttpll
and
xchg
adc
sub
add
add
in
divl
in
mov
xchg
adc
and
mov
pushf
inc
test
and
jno
mov
test
sub
das
push
mov
pop
pop
sbb
pusha
push
outsb
xlat
adcb
addr16
dec
jmp
inc
mov
adc
mov
xchg
push
fcoml
push
int3
fnstsw
aaa
sub
fs
mov
pop
sub
adc
mov
jns
or
scas
inc
sbb
xchg
fs
ret
cs
jbe
and
addb
rorl
stc
rolb
and
test
ljmp
scas
or
hlt
push
pop
ret
rcr
mov
xchg
enter
dec
out
lock
mov
add
or
mov
xchg
clc
pop
fiaddl
cmpsl
int
dec
sub
push
pop
mov
es
xor
inc
sbb
pop
rorl
push
push
shl
repnz
xor
scas
cmc
fwait
or
pop
sbb
cmpsb
and
popf
cmp
icebp
cmpsl
outsl
loop
and
jbe
push
lock
lret
test
xchg
adc
pop
mov
push
cltd
sbb
dec
mov
push
xor
out
dec
xchg
or
cmp
sahf
mov
sbb
sar
xchg
xchg
cmpsl
jg
lock
pop
add
pop
dec
mov
lea
add
jl
pop
push
inc
mov
mov
and
mov
push
out
cmp
fdiv
push
pop
pop
adc
jp
enter
mov
dec
cmc
pop
lahf
scas
mov
fnstenv
test
xchg
in
loope
popf
in
pop
fmul
out
mov
xor
push
scas
or
ret
iret
push
or
sbb
adc
dec
loope
push
xor
mov
testb
jg
jbe
jbe
mov
lds
jecxz
int
cmp
add
jnp
and
xchg
push
sbb
pop
into
jb
adc
movsb
inc
scas
mov
arpl
pop
cltd
in
pop
mov
mov
or
sti
mov
fs
cmp
sub
in
int3
mov
sbb
mov
push
xchg
testl
jbe
fdivrl
fstps
mov
cmp
add
shlb
int
adc
test
bound
push
xor
sahf
jge
fildl
movsb
movsl
add
addr16
inc
andb
and
adcb
mov
clc
add
xor
addl
fwait
sbb
inc
gs
test
mov
or
dec
sub
fisubrs
bound
sbb
out
and
pop
clc
in
arpl
stos
sub
rcll
or
scas
jns
call
or
shrl
pushf
andb
insb
sbb
test
mov
fwait
movsb
cmc
popa
inc
mov
sub
mov
jl
push
bound
mov
dec
js
adc
push
test
adc
comiss
cld
cld
dec
cmpsl
adc
mov
bound
or
ljmp
push
maskmovq
negl
pop
mov
inc
dec
add
aam
and
inc
xchg
mov
addr16
lods
shlb
and
or
dec
mov
xchg
xchg
inc
shlb
lea
movsl
jge
aad
push
sbb
jnp
jmp
outsb
xor
scas
jnp
out
add
push
adc
xor
sbb
lret
xchg
sbb
sub
sti
or
cmp
loop
adc
sub
sub
fsts
adc
sbb
adc
dec
cmp
inc
fildl
dec
push
adcl
xchg
ret
cld
pop
mov
and
xor
pop
mov
jae
leave
adc
and
lods
popa
xchg
stos
jne
cld
push
xlat
shll
sbbb
mov
mov
fadds
pushl
inc
repz
mov
imul
jle
push
push
mov
xor
adc
dec
xchg
stc
dec
sub
or
jecxz
push
or
pop
xor
pop
enter
ds
add
jmp
pushf
inc
popf
xcrypt-ecb
cmpsl
mov
xchg
adc
shlb
arpl
mov
int3
push
cwtl
sarl
mov
pop
pop
pusha
xor
mov
dec
mov
loope
push
add
pop
push
cld
sub
pop
sub
sbb
pop
inc
test
pop
push
arpl
ret
fimuls
cmp
sbb
bound
lahf
push
jge
mov
and
mov
xchg
xor
imul
mov
mov
pop
add
push
xor
mov
data16
scas
imul
sbb
ret
test
aaa
sahf
mov
stc
xor
mov
mov
gs
jge
dec
pop
enter
fldenv
cmpsl
add
in
xor
repnz
xchg
or
cmc
dec
xor
std
ljmp
or
addb
push
pop
push
push
sbb
mov
jmp
push
test
dec
adc
ljmp
movsb
xor
notb
hlt
fyl2xp1
jns
frndint
xchg
xchg
out
inc
andl
clc
inc
add
test
pop
cmpsb
lret
mov
jecxz
push
xchg
stos
mov
xchg
inc
mov
mov
pushf
outsl
add
sub
cld
xchg
jo
ficomps
cwtl
inc
mov
inc
sub
sub
pop
outsb
xchg
dec
or
js
sub
lahf
add
xchg
adc
adc
xchg
cmp
mov
push
xchg
mov
in
fsts
mov
pop
xlat
lds
outsl
sub
lret
xchg
pop
ret
lods
pop
jne
sti
cmp
sbb
arpl
js
scas
inc
push
jnp
mov
jge
xor
test
push
mov
cli
mov
or
mov
js
pop
sbb
xor
cmpsb
sbb
add
mov
lcall
cs
cmp
punpcklbw
shl
mov
push
mov
dec
dec
adc
inc
mov
loope
loop
sub
dec
mov
cmp
stos
repnz
cmp
ret
lret
stc
rorl
sub
push
add
mov
movsb
cmp
xchg
das
fs
jecxz
aad
xchg
sub
aas
mov
enter
jae
push
mov
lods
pushf
dec
sbb
pop
ret
aam
pusha
pop
stc
pop
mov
rorl
xlat
ja
icebp
shl
movsb
fsubr
nop
cmpsb
mov
dec
std
mov
pop
test
push
cmp
divl
lcall
and
lahf
mov
pop
or
loop
inc
sbb
pop
int
pusha
cli
dec
int
lods
xlat
sti
jo
jge
aad
cmp
lahf
dec
mov
jp
cmp
loopne
int
jle
dec
lea
out
jle
pop
test
cmp
sbbl
or
add
sub
or
push
add
jge
lea
dec
lahf
fildll
pop
das
cmpsl
sbb
push
sahf
and
sbb
pop
lea
sub
jg
xor
fiaddl
jne
js
dec
pop
addr16
xchg
ljmp
adcb
nop
clc
sbb
jge
das
cs
mov
cwtl
sbb
cwtl
xor
aam
out
movsl
mov
loope
push
imul
jne
cmp
int
and
cmp
cli
bound
push
lahf
pop
adc
dec
pop
mov
ljmp
pop
sub
mov
jmp
negb
adc
stc
mov
inc
jecxz
arpl
aas
icebp
mov
mov
popa
fstps
sub
out
leave
stos
bound
stos
push
jno
xlat
mov
add
loop
jae
cs
xorl
ds
sub
mov
add
stos
pop
sbb
pusha
out
push
xchg
out
adc
xchg
inc
sub
dec
push
repnz
and
inc
adc
ss
bound
fcmove
xchg
mov
xorl
cvtpi2ps
inc
leave
daa
xor
ljmp
out
ss
insl
stos
gs
movsl
aaa
adc
and
dec
rcr
push
das
dec
xchg
xchg
loope
sbb
fwait
das
sub
inc
repnz
pushl
and
das
push
popa
cmpsb
jae
daa
cld
ds
jmp
arpl
repz
stos
sub
dec
sub
sbbb
rclb
fsubrs
iret
cli
incl
int
data16
dec
mull
mov
and
les
bound
cli
sbb
sub
shr
iret
jmp
aam
pop
scas
pushf
gs
insl
pop
dec
mov
int3
push
sub
int3
out
stos
shll
dec
test
sbb
hlt
repnz
cmp
push
stc
pop
jns
test
xchg
pop
popa
test
cmpsb
cwtl
cmp
cmpsb
cmpsb
stos
call
popf
sub
adc
popa
loope
or
mov
sbb
cmp
loopne
cmc
je
xchg
fmull
rep
push
push
imul
push
aas
les
daa
loope
das
sub
push
nop
leave
mov
cld
dec
mov
sbb
pushf
inc
pop
dec
loope
addl
bt
sub
push
mov
cwtl
xchg
dec
xlat
ror
push
inc
faddl
mov
pop
adc
dec
clc
test
inc
dec
std
in
int3
push
cmp
push
push
imul
movsl
mov
and
cmp
mov
add
or
jnp
mov
dec
sbb
dec
shlb
and
xchg
pop
mov
test
test
inc
inc
mov
adc
jo
je
cmp
xlat
inc
pushf
xor
fwait
mov
loop
loopne
scas
jle
repnz
les
xchg
push
test
push
rcrl
iret
addl
sar
xchg
ds
fcmovb
xchg
adc
out
into
push
mov
roll
dec
sub
cli
pop
mov
fwait
bound
push
add
push
cmpl
cs
sbb
cmp
mov
ds
sbb
imul
adcl
or
cmpsl
loopne
cmpsb
or
je
add
adc
inc
pushf
ret
pop
movsb
lods
scas
xor
cmp
enter
jl
daa
mov
addr16
xchg
fidivs
out
loopne
push
sbb
mov
inc
xchg
in
dec
arpl
daa
xor
das
shll
and
pusha
ret
out
call
mov
idivb
lds
out
push
and
cmp
mov
sahf
insb
pop
mov
and
jbe
mov
and
sbb
stos
dec
lret
mov
and
insl
fwait
mov
jecxz
imul
in
add
cmpsb
pop
loop
lods
mov
mov
jno
stos
adc
ss
fimull
pop
lahf
add
dec
sbb
push
pop
jecxz
daa
lds
inc
sahf
jbe
push
adc
sbb
sbb
sub
pop
mov
adcb
pop
call
cltd
lods
add
jnp
outsl
out
pushf
mov
ficoms
xchg
mov
je
adc
aaa
in
or
pop
rolb
addr16
fbstp
jno
sub
daa
mov
jmp
mov
loop
push
cmpsl
rcl
stos
xchg
inc
mov
je
lds
sbb
cmp
mov
popa
sbb
scas
inc
xchg
cmp
xorl
pop
dec
inc
mov
jg
fstps
inc
sti
xchg
mov
adc
pop
push
mov
xor
rcll
aaa
add
adc
xorps
and
lret
add
jg
arpl
and
in
loopne
lods
cltd
xchg
dec
mov
inc
iret
jno
jg
mov
or
cmpsl
lcallw
push
inc
jmp
mov
push
mov
rcll
sarl
cmp
pop
inc
mov
lods
cmpsl
cmpsb
das
repnz
xor
mov
outsb
cmpsl
pop
mov
adc
das
dec
inc
push
and
or
out
imul
xor
in
addl
or
adc
out
enter
popa
jl
ja
fsubp
xchg
daa
out
jbe
test
ret
aaa
jmp
xchg
adcb
xchg
cmc
lcall
mov
push
inc
inc
cmp
push
lsl
pushf
mov
sbb
dec
mov
ficoms
cmp
mov
lods
ficoml
push
popf
push
pusha
stc
xchg
cwtl
in
dec
fldl
pop
scas
lret
shll
out
shrl
cmc
mov
pop
into
sahf
je
testl
movsl
cmp
add
jp
pop
fs
pop
cmp
adc
xor
rorl
jnp
inc
mov
or
in
push
fidivl
xor
xor
ljmp
pop
cmpsb
dec
jnp
das
adc
es
or
inc
and
add
and
or
jg
mov
cmp
lods
cmpsl
jmp
push
testl
enter
testl
xor
sub
mov
sbb
insl
adc
xor
aaa
jp
push
lds
fidivs
push
clc
scas
mov
ja
aas
jnp
jbe
sahf
loop
mov
xor
loop
and
lret
fstcw
adc
repz
into
pop
filds
push
test
mov
sub
mov
inc
lods
mov
cmp
mov
leave
mov
pushf
xor
push
xorb
dec
cmpb
jnp
xchg
mov
inc
xrelease
mov
pop
stos
xchg
jl
sub
inc
daa
hlt
repnz
xor
les
movsb
sarb
cwtl
das
mov
mov
enter
mov
adc
add
pop
jge
mov
mov
or
push
cli
sub
pop
mov
lods
and
xor
adcl
or
xchg
into
xor
fistl
add
int3
sub
xor
xchg
imul
data16
push
pop
stos
pop
sub
loopne
lret
dec
dec
ficomps
shr
dec
push
jne
sbb
or
ss
mov
int3
rclb
mov
out
jecxz
xor
cs
inc
jnp
cmpsb
pusha
push
mov
out
aam
lret
out
aam
sarl
and
scas
fldl
mov
ss
dec
data16
into
scas
or
ljmp
movsb
mov
mov
cmpsb
sbb
jge
pop
push
sbbb
push
push
outsb
inc
shrl
pop
stc
sub
mov
aas
jecxz
dec
es
mov
jg
xor
scas
int3
ljmp
das
pop
mov
adc
cmc
out
dec
push
imull
lcall
mov
pop
lret
int
inc
lds
cmc
sbb
arpl
and
push
sbb
aad
test
rol
aam
mov
inc
insl
add
sahf
ds
ret
cmpsl
inc
or
and
outsl
loope
mov
test
shll
jg
jp
cmp
sar
xor
leave
mov
int3
cli
sahf
cmp
xor
cmp
push
je
add
test
sub
dec
inc
jne
mov
xor
js
in
sbb
ret
pop
pop
dec
push
pop
test
xchg
mull
mov
mov
fwait
push
push
xchg
sbb
pop
push
dec
out
jno
out
adcb
or
int
loopne
jno
cmp
lcall
sbb
xchg
mov
mov
jbe
orl
push
jne
sub
out
imul
int3
orl
push
sub
sub
test
into
dec
cld
jl
out
cmp
adc
lret
sbb
mov
in
dec
mov
xor
xor
dec
test
popa
loop
pop
add
sahf
push
rcrb
lahf
ret
cmp
pop
mov
lock
loop
pusha
out
mov
test
mov
jno
ret
adc
push
addb
xchg
rcl
movzwl
lret
rcrl
pop
push
mov
pusha
pop
aam
pop
jmp
push
cmp
ret
mov
jae
stc
fmuls
or
adc
and
lret
sub
mov
es
xor
iret
lods
dec
les
cmp
aas
ss
xchg
sub
outsl
repnz
popf
jbe
test
inc
inc
pop
shlb
mov
dec
scas
sub
sub
in
out
mov
xchg
sbb
scas
stos
movsb
pusha
jg
fisttpl
ja
add
daa
pop
and
inc
inc
dec
lea
cmp
cld
sub
and
mov
mov
jb
jg
cld
adc
inc
addr16
push
and
and
out
mov
sub
stc
int3
add
arpl
pop
lods
dec
call
inc
insb
jae
leave
lea
mov
mov
jnp
sub
or
ja
addl
sub
xor
push
xchg
andb
stos
loope
stos
xchg
roll
cmp
jge
fistpl
lea
pop
fisttps
mov
jecxz
xchg
jmp
xor
cmpb
outsb
inc
add
mov
rorb
xorb
sbb
pop
mov
push
test
inc
xor
pop
ds
add
scas
jmp
cmp
insl
sar
imul
sbb
movsl
xchg
in
in
sub
adc
cmp
movsl
mov
mov
jno
addl
dec
mov
and
mov
ss
decl
lds
inc
mov
jae
pop
lock
jae
jl
cmp
testl
mov
inc
loopne
das
mov
sti
push
lock
fidivrs
test
imul
dec
and
cmp
mov
sbb
pop
rolb
ret
jle
jnp
adc
mov
lock
xor
mov
jbe
inc
sbb
pop
jns
xchg
rorb
nop
outsl
xlat
and
jns
sbb
cld
pop
xor
jp
add
mov
das
and
ret
xchg
or
jle
lret
jns
and
xor
jb
mov
lods
imul
jo
or
xor
inc
data16
rcll
fcomps
xchg
lcall
shll
add
push
jl
arpl
outsl
pop
lods
or
jecxz
jae
mov
rcll
lea
ror
xlat
pop
aaa
popa
pop
ljmp
cmpsl
xchg
dec
lret
mov
test
sbb
mov
push
ret
ficompl
pop
pop
push
cld
xor
dec
fwait
ret
jmp
push
int3
testl
rcr
sbb
add
lahf
insb
call
mov
andb
aas
or
pop
and
jno
icebp
pop
fimuls
test
cmpsb
dec
pop
mov
or
xchg
push
loope
outsl
les
outsl
cld
dec
push
popa
pop
dec
mov
out
cmp
hlt
in
cld
outsb
dec
jge
xchg
mov
fucomip
out
daa
add
mov
insl
or
fcmovnbe
xchg
fwait
clc
popa
ljmp
add
icebp
lock
loopne
dec
fwait
add
fidivrs
int
mov
cltd
popa
dec
pop
test
cmp
push
out
pop
fldl
xchg
mov
pushf
jmp
push
adc
push
jecxz
jno
inc
jmp
inc
add
shrb
xchg
nopl
outsl
pusha
mov
ljmp
cmpsl
sub
add
xchg
aam
lret
xor
or
mov
dec
dec
xorl
jnp
sahf
pop
fdivl
inc
and
push
stc
rorl
sbb
mov
pushf
stc
in
xor
and
pop
inc
mov
inc
dec
sub
inc
jbe
inc
mov
push
xchg
ret
aam
into
sahf
mov
jnp
xchg
inc
test
hlt
xlat
out
mov
fsubs
pop
int
push
fwait
pop
pop
loopne
shll
jl
adc
push
inc
daa
sbb
inc
clc
divb
jno
mov
int
lea
mov
jbe
insb
outsb
jmp
lcall
das
inc
xchg
xor
cwtl
xchg
dec
cmp
gs
push
into
or
xchg
mov
inc
loop
cli
mov
scas
add
pop
mull
icebp
sbb
mov
dec
jnp
sub
jg
sub
fstpt
mov
mov
in
pop
aas
mov
sbb
sub
in
add
xor
fsubrl
xchg
xlat
jb
bound
lock
mov
dec
dec
in
fstpl
rcrb
pusha
jbe
shlb
aaa
push
xor
add
ficomps
out
cmpsb
pop
sbb
mov
sahf
and
test
aam
xor
mov
repnz
sub
xchg
insl
in
adc
call
xchg
in
int3
or
xchg
xor
and
loope
xor
aad
insl
ret
sbb
mov
push
scas
xchg
arpl
mov
mov
pop
sbb
push
mov
mov
pop
or
in
mov
stos
out
pop
pop
xchg
sbb
shlb
cwtl
es
dec
sub
fiadds
out
jge
gs
outsb
pop
fcoml
stos
sub
pop
loope
sub
gs
xchg
mov
mov
jnp
in
dec
xchg
sbb
xor
sub
mov
insb
psllw
mov
mov
cmp
js
clc
imul
xor
int
sub
scas
xchg
ljmp
and
pop
mov
or
jae
fucomi
push
lret
jnp
js
xor
daa
ds
push
aaa
bound
sti
and
divl
lahf
jp
or
dec
mov
dec
xchg
push
mov
mov
int
leave
push
lods
sbb
push
sub
fdivp
fstps
jmp
lds
lahf
xchg
in
je
js
jg
cmp
dec
sub
fcomip
into
ret
xchg
sarb
mov
popa
sub
add
insb
insb
mov
xor
insl
daa
xchg
ficoms
cli
add
mov
mov
mov
mov
rcrb
std
in
out
popf
jp
or
testl
lds
cmp
lds
mov
xlat
in
div
outsb
mov
out
call
xchg
test
lret
xchg
in
inc
sub
inc
cmp
cmpsb
adc
sar
jmp
out
mov
mov
pop
cmp
xor
mov
dec
and
ret
rorl
push
pop
dec
lcall
cmp
bound
js
adc
test
mov
jle
sbb
adc
push
insl
or
jg
or
mov
xor
fcomi
fmul
pop
repz
or
insb
adc
xor
in
test
jle
inc
xchg
test
repz
out
mov
jp
scas
or
stos
sub
gs
adc
popa
cmp
subb
sbb
xchg
dec
pusha
out
xor
pushl
lret
and
fdivs
negb
mov
shrb
in
mov
fdivrl
adc
mov
inc
mov
xor
dec
stc
mov
add
dec
ss
lcall
jb
icebp
dec
cmp
into
cli
lods
testb
cs
pop
jnp
pop
in
mov
outsl
stc
mov
mov
mov
loopne
scas
movsl
icebp
fcomps
push
mov
jmp
movsl
mov
mov
cltd
cmp
rolb
sub
fdivs
sbb
push
sub
pop
out
out
sahf
je
cmc
cmpsl
stos
sub
int
pop
jecxz
test
sbb
mov
adc
pop
pop
cmpsl
mov
pop
or
sub
xor
add
xor
es
fisubrs
cmp
repnz
mov
dec
cmp
ss
dec
jmp
rcll
movsb
push
push
mov
jbe
sub
sub
mov
lock
mov
cmp
cmp
fidivs
mov
fsubrs
lret
loop
inc
xor
dec
into
push
jb
aaa
je
data16
fistps
adc
adc
add
adc
and
insl
icebp
shl
addr16
xchg
icebp
lcall
push
dec
cmc
rclb
jmp
stc
ret
imul
mov
scas
inc
int3
sti
stc
inc
fistl
out
ja
push
jo
add
jo
test
je
out
adc
push
aas
add
sbb
fistpl
jmp
outsl
mov
aas
cld
out
insb
add
pop
je
and
int
push
mov
push
cwtl
dec
or
xchg
cmp
adc
jmp
push
mov
ror
ret
sub
mov
clc
xchg
sbbl
outsb
out
je
mov
push
xor
mov
aaa
cmpsb
fcomps
pop
arpl
hlt
fnstcw
adc
repnz
mov
and
addl
xchg
cmc
cmp
nop
testl
sti
add
and
jb
mov
sub
mov
out
rcr
inc
xor
addb
pushf
and
test
lcall
sti
or
push
ret
sub
lcall
mov
test
adc
sub
les
ss
cmp
jle
inc
mov
dec
es
adc
in
inc
or
mov
rcll
cs
aas
sbb
ss
jbe
dec
jo
pop
repz
insb
popl
aaa
jmp
mov
loope
or
cmp
or
add
mov
push
int3
xor
lcall
test
sub
loop
popa
and
insl
xchg
jae
cmpl
and
push
lret
lds
xchg
dec
sub
call
and
push
jecxz
dec
xor
inc
test
cli
rcl
pop
cli
jne
xchg
inc
inc
xor
dec
jp
or
mov
cwtl
xor
push
popa
aad
or
int
cmpsb
outsl
xor
mov
mul
out
movsl
sti
rorb
pop
or
cmp
fmul
rolb
js
les
imul
and
jne
imul
fisubs
pop
pop
xlat
push
cmp
add
xchg
jb
inc
test
aad
sub
pop
hlt
in
fsubrs
stc
emms
insl
dec
icebp
push
dec
jne
ror
sbbl
adc
lcall
hlt
aas
shrb
repz
inc
or
out
jge
mov
aas
and
out
std
inc
test
lret
jnp
pop
mov
pop
test
ljmp
dec
dec
and
outsl
test
push
jne
sbb
mov
rorl
dec
cmp
and
mov
outsb
ljmp
sub
mov
leave
adc
mov
out
out
cli
xor
inc
std
sub
popa
mov
inc
js
pop
scas
ds
jecxz
call
out
lods
ss
ljmp
fbstp
mov
jl
xlat
dec
xchg
rcrl
leave
pmaddwd
pop
mov
xchg
dec
lret
sbb
fs
je
and
sbb
out
insb
or
data16
add
or
cmp
hlt
adc
inc
bound
test
shll
and
sbb
adc
insl
add
sub
dec
hlt
scas
or
fcomps
pop
into
add
push
cmp
sbb
jmp
into
mov
xlat
inc
jmp
js
loope
ja
in
mov
rcll
cmp
or
mov
ficoml
lret
push
pushf
das
jmp
fmul
sbb
popa
cmpsl
mov
outsb
popf
xor
adc
data16
fmul
jecxz
mov
lcall
cmp
hlt
ret
or
shlb
xor
mov
sub
adc
mov
aaa
push
les
mov
out
repnz
pcmpgtw
jne
or
dec
jl
rcrb
or
sbb
or
dec
lds
add
or
mov
inc
sub
cmc
xchg
mov
add
inc
push
icebp
sar
sbb
lret
test
mov
xchg
mov
in
loopne
lahf
pop
stos
aaa
add
imul
test
pop
lds
js
add
mov
xchg
mov
fldenv
adc
arpl
mov
dec
pop
test
cmpsb
mov
xor
mov
scas
jle
ljmp
sbb
in
in
je
cmp
xlat
sbb
aad
iret
sbb
cwtl
pop
fbld
push
into
push
popa
sbb
xor
cmp
xor
xchg
xor
xchg
sbb
jne
xchg
ret
jmp
sub
jae
std
pop
imul
pop
fwait
add
dec
scas
sbbb
sbb
pop
xchg
das
inc
pop
xchg
in
insl
jmp
jae
mov
push
aas
ficomps
push
sub
push
and
inc
std
push
int3
and
adc
mov
cli
adc
imul
mov
sbb
pop
ja
xchg
pop
jno
xchg
aad
enter
ret
pop
stos
aas
repz
sahf
push
daa
xor
lret
xchg
ljmp
inc
sbb
sbb
scas
scas
push
nop
mov
loop
mov
add
in
sub
sti
shrl
push
lods
clc
es
shll
xchg
xor
stos
lret
mov
add
add
or
outsl
push
sar
cmpsb
loope
aas
out
jns
stos
jmp
arpl
cltd
sub
xchg
and
cmp
mov
mov
nop
call
mov
inc
lea
push
insl
repnz
xor
jns
mov
dec
frstor
dec
mov
mov
dec
loope
lods
dec
imul
xchg
pop
test
icebp
dec
ja
sbb
jge
call
add
push
adcb
lock
inc
mov
sub
sbb
mov
adc
data16
outsb
pop
bound
mov
test
pop
sub
sti
mul
jne
dec
inc
shl
pop
outsl
movsb
outsl
adc
flds
xor
jge
sbb
jp
ds
divl
in
stos
and
cmc
mov
cwtl
dec
lret
adc
ficomps
sbb
jo
fwait
adc
add
fstpl
pop
add
sub
and
jl
mov
inc
jnp
inc
sbb
adc
orl
lret
and
push
mov
or
fnstsw
xor
mov
push
sbb
outsl
daa
mov
stos
or
xor
repnz
pop
cwtl
rcll
push
ja
pushf
mov
cmpsl
xchg
jmp
inc
stc
mov
or
mov
xor
int3
sub
cmp
das
hlt
insl
xchg
inc
sbb
adc
inc
adc
mov
ja
ss
js
stos
iret
test
sbb
sbb
adc
data16
fucomi
scas
loope
dec
or
daa
insl
xchg
mov
mov
ljmp
adc
dec
mov
xor
outsl
fxam
mov
sti
js
push
inc
in
push
push
mov
xchg
cmp
lcall
sbb
rorl
out
movsb
pop
stos
xchg
and
dec
enter
adc
inc
shll
cmp
mov
cmpsb
iret
mov
push
test
fisubrs
cmpsb
xor
fcomps
mov
mov
pushf
adc
test
adc
cld
dec
mov
fbld
clc
mov
arpl
aam
sub
fsts
stc
lret
imul
int3
adc
iret
out
ret
adc
sub
mov
xchg
cmpsb
lods
call
orl
aad
js
mov
test
daa
les
and
push
pushf
mov
out
mov
sahf
movntps
mov
bswap
stc
arpl
jbe
xor
push
xchg
pop
ret
fsubrs
shll
push
movsb
xchg
and
insl
movl
int
xchg
ret
push
cltd
aas
inc
mov
lock
cli
and
rep
mov
jle
out
out
xchg
fadd
push
cli
scas
jle
sbb
adc
dec
mov
fs
sahf
push
dec
dec
out
pop
rcl
dec
or
xchg
and
push
push
pop
mov
push
test
lahf
mov
int3
shll
mov
mov
mov
shll
ljmp
and
push
test
push
mov
and
mov
loope
xchg
fsub
ficoms
jbe
daa
ja
jge
lods
dec
sarl
shl
pushf
jge
leave
or
es
int3
sub
and
xchg
jo
jl
inc
loopne
mov
cs
mov
movsb
lods
pop
xlat
out
and
mov
push
and
jecxz
push
inc
or
arpl
sbb
cmc
dec
xor
stos
lea
sahf
into
and
add
popf
cmpsb
in
or
adc
push
pop
cmc
sti
cmp
cmp
jno
fstpl
push
adc
stc
mov
std
mov
fwait
aam
iret
test
fisubrl
sbbl
insb
and
out
mov
repz
xchg
jbe
pop
stos
sub
lea
mov
inc
enter
sti
adc
popf
insb
mov
out
hlt
popa
ficoml
inc
nop
scas
jno
mov
jge
dec
repnz
outsl
arpl
pop
dec
xchg
icebp
stos
ljmp
or
movsl
rclb
cmpxchg
dec
adc
call
jmp
in
mov
jmp
rolb
cmpb
outsl
sub
cmp
mov
stc
jbe
jo
mov
adc
push
and
jne
fldcw
add
mov
mov
fisubl
sub
add
movsb
xor
je
mov
cs
movq
das
loopne
add
iret
mov
mov
pushf
notl
inc
mov
and
cmp
test
in
jmp
mov
sbb
sub
fld
bound
pop
lahf
push
push
inc
mov
arpl
xor
mov
dec
xlat
dec
mov
add
jo
mov
scas
mov
sahf
xchg
mov
jns
xlat
cmp
js
push
sahf
cli
sbb
sahf
sub
jbe
mov
xchg
outsl
dec
cmp
pop
push
xor
lods
hlt
int3
loope
push
lock
jp
jbe
ds
fcomp
lods
cld
sub
int
cmp
xor
and
jge
clc
jne
pushl
add
lock
inc
shr
daa
mov
xchg
and
mov
mov
fisubrs
push
jo
test
lret
mov
mov
sub
mov
lret
dec
cltd
sub
in
push
les
scas
ret
cmp
lahf
aaa
xlat
dec
adc
imul
xor
dec
hlt
hlt
mov
xor
sub
orb
cmc
or
jae
clc
push
adc
out
inc
leave
lret
ljmp
or
test
push
in
lahf
mov
test
and
movsl
adc
jnp
xor
cmc
sub
and
fistps
cmpsb
mov
dec
sahf
sub
pop
sub
cmc
mov
out
test
popa
notb
jmp
pop
mov
jne
mov
in
and
test
test
scas
mov
enter
mov
inc
sahf
adc
push
mov
fisubs
adc
xor
push
js
dec
xchg
inc
xor
cmp
aad
aaa
sub
movsb
in
sub
cmp
lock
mov
ret
pop
sbb
jo
movsb
or
imul
mov
cltd
out
jae
lret
sarl
cld
les
notl
mov
das
push
xchg
cmp
xchg
pop
adc
popa
outsb
push
sbb
ret
cmp
xor
call
jmp
mov
sahf
push
sbb
cmp
pop
je
fistpl
mov
jb
xor
loope
jmp
mov
loop
sahf
mov
fwait
loope
sub
loop
inc
push
cmp
repz
xchg
cmp
jnp
sub
mov
jnp
xchg
fstpl
inc
movsl
flds
cmpsb
ret
imul
push
mov
cltd
stc
es
dec
mov
lods
lea
sbb
fsubrl
xchg
js
cmpsl
or
repnz
jl
jb
inc
xor
aam
pop
mov
cmp
in
push
punpckhdq
mov
rorl
mov
bound
mov
jmp
cmc
in
mov
pop
scas
add
out
insb
mov
cmp
rol
mov
jp
pop
fistl
jb
lods
ljmp
xchg
inc
mov
mov
and
jmp
pop
scas
inc
nop
jae
js
xor
push
in
add
xchg
imul
dec
sbb
add
pop
aaa
dec
pushf
add
push
sarb
rolb
adc
mov
leave
loopne
push
mov
ds
fldt
adc
or
mov
stc
mov
mov
push
jle
cmpsb
or
mov
gs
ret
loope
shlb
outsl
daa
pop
stos
pop
scas
std
repnz
xor
inc
aaa
jg
std
xchg
inc
jle
jo
add
pop
loop
push
push
loope
mov
add
imul
mov
lock
mov
xor
popa
testl
outsl
dec
sub
aam
loopne
jmp
int3
pushf
mov
cmp
ss
jne
sub
lods
dec
sbb
je
mov
mov
inc
in
mov
cltd
popf
stos
push
xchg
cwtl
sub
call
movq
movsb
test
pop
cmpsb
or
mov
xchg
xchg
repnz
fdiv
pop
push
add
adc
das
xchg
pop
jmp
dec
xor
sbb
clc
xor
orl
out
xor
cltd
ret
xchg
adcl
cmp
jge
push
popf
orl
mov
and
xor
push
push
jb
imul
push
mov
mov
sub
mov
inc
roll
and
add
sub
xor
jns
inc
iret
dec
aas
cmp
pop
pop
push
xlat
sahf
ret
mov
shl
and
outsb
sahf
add
dec
jne
sub
imul
dec
cmp
push
add
iret
mov
or
in
push
fldt
adc
push
dec
inc
sbb
fadd
ficoms
movb
leave
mov
pop
sahf
repz
and
lds
sbb
push
scas
adc
test
xchg
int
pop
call
xor
incb
and
fnstsw
insb
jp
into
ja
xor
js
mov
outsb
lcall
hlt
mov
add
lds
mov
insb
test
ret
es
xor
std
dec
in
or
mov
scas
xchg
pop
cmp
jg
xor
addl
jp
jmp
ret
push
dec
push
cmp
xchg
push
aad
pusha
jp
fs
scas
xor
sahf
ljmp
enter
jns
mov
and
daa
mov
add
push
addb
aam
lds
out
inc
xadd
or
pusha
or
das
add
inc
lret
test
pop
int3
or
cs
and
daa
in
in
mov
push
out
js
aad
sub
fmull
adc
push
fisubrs
jp
push
dec
inc
pop
xor
fs
jge
push
nop
add
add
insl
dec
cmp
lods
aad
std
icebp
dec
and
adc
cmp
jns
cmp
insl
sub
rolb
mov
popf
clc
cmc
xor
jmp
je
aas
fwait
stos
xor
cs
dec
out
inc
jle
mov
inc
mov
mov
shlb
or
jecxz
mov
adc
addr16
movsl
in
adc
xchg
push
scas
stc
push
xor
movsl
push
scas
sbb
stc
push
xchg
mov
lea
xchg
je
call
out
mov
or
sarl
pop
lea
daa
jnp
push
ljmp
in
fnstenv
ficomps
std
push
jne
add
xor
icebp
adc
loopne
inc
push
ja
jne
paddb
lahf
fdivs
pop
cmpsl
mov
add
xor
ljmp
js
sbb
arpl
leave
ficoms
pop
iret
into
lea
jecxz
jmp
cmpsl
pop
je
and
lcall
xchg
jo
ja
jl
pop
lods
jecxz
fidivs
inc
fnstcw
test
pop
shlb
xchg
mov
xchg
bound
xchg
push
and
insb
test
les
popa
iret
aad
pop
cmpl
xchg
ljmp
sbb
jge
aad
mov
mov
sbbl
mov
sub
cli
mov
xchg
cmc
cld
shll
lods
cmc
xchg
adcl
iret
out
aas
xchg
hlt
sbb
mov
add
or
mov
scas
push
pop
sarb
imul
gs
push
push
fucom
test
sub
add
xchg
fmuls
push
aaa
mov
mov
or
icebp
ja
mov
push
jno
idivb
pop
fsubrl
insl
or
mov
add
sti
mov
fcompl
inc
xchg
sahf
mov
mov
fwait
xchg
hlt
or
out
pop
push
cmpsl
pop
add
jmp
aam
add
daa
add
stos
mov
fimuls
in
fst
cmpsb
dec
sbb
stos
arpl
inc
stc
lret
add
cmp
push
xor
jp
scas
mov
jmp
ja
mov
out
bound
push
scas
repnz
mov
push
sbb
scas
fldl
shl
mov
push
add
pop
or
fs
inc
cmpsl
out
xlat
cmpsb
mov
xor
mov
in
scas
insl
data16
inc
or
lock
enter
or
lods
into
aas
mov
sbb
adc
test
add
cltd
xchg
out
mov
adc
inc
out
xchg
push
xchg
aas
fiaddl
popf
sti
cmp
push
push
stos
jp
pop
mov
jo
xchg
outsb
mov
jnp
std
aaa
and
movsl
repz
mov
scas
push
jmp
sub
nop
xor
dec
adc
aam
sbb
dec
jne
adc
clc
test
adc
adc
faddl
push
jmp
arpl
insb
push
jnp
jecxz
xchg
pop
dec
out
ljmp
add
inc
jae,pn
popl
notl
add
mov
xlat
adc
imul
outsl
pushf
push
add
repz
pop
dec
xchg
aaa
push
mov
popf
mov
pop
aad
and
cli
sbb
lcall
mov
adcb
ficomps
xchg
fbld
push
adc
test
in
outsb
popf
pop
ljmp
ret
setl
adc
in
pop
pop
shl
clc
cmpsb
sub
scas
sbb
mov
movsb
rcll
xchg
pop
xchg
mov
sbbl
jbe
sbb
in
rcrl
insl
cltd
aam
mov
dec
dec
and
dec
sub
aad
and
sahf
push
or
insb
loope
leave
out
dec
mov
ljmp
bound
fdiv
and
fbstp
ljmp
stos
sub
stos
ret
push
pop
cmp
fdiv
stos
pop
jne
fnstsw
push
fsub
inc
mov
pop
loope
lods
fistps
xchg
lock
xchg
jo
xor
cld
mov
adc
adc
popa
div
or
and
mov
aaa
sub
xchg
sub
pop
shrl
sbb
push
xor
adc
adc
into
ja
fs
out
out
cmp
nop
aas
push
xchg
jb
fwait
pop
dec
insl
push
stos
xor
push
or
stos
in
pushf
movsl
pop
ljmp
push
jb
fdivl
lahf
aaa
enter
add
dec
push
sub
call
loope
jns
mov
fiadds
lcall
leave
sahf
cs
and
roll
xor
rolb
aas
xor
dec
pop
shrb
ficoms
adc
jo
or
cltd
arpl
dec
mov
cld
sbb
push
scas
jp
lods
lret
inc
jle
pop
sub
lret
adc
fldcw
or
sbb
push
jg
sub
stc
iret
pop
mov
loopne
inc
fcomps
addr16
lock
pop
pushf
adc
xor
jae
ret
enter
faddl
arpl
data16
inc
cltd
in
cmp
mov
imul
add
negb
das
cli
popf
mov
inc
add
push
pop
mov
divb
inc
ret
cmp
xor
mov
or
enter
stos
into
pop
mov
movsb
mov
adc
add
xor
in
ljmp
inc
dec
jmp
inc
inc
pop
sbb
arpl
xchg
push
shlb
clc
and
lss
rolb
loope
cmpsb
pop
sub
and
inc
inc
cmc
mov
and
dec
push
jl
xchg
or
ret
mov
add
and
enter
loop
loopne,pn
addb
mov
adc
lret
inc
notl
dec
repz
jle
sbb
out
negb
aas
mov
ds
push
notb
mov
xlat
inc
jmp
sub
pop
and
push
in
fcomip
je
pop
pushf
fisttpll
dec
pop
addr16
jb
in
mov
xlat
and
pop
lock
test
and
enter
lret
cltd
shrb
clc
enter
rcrb
push
inc
int
fbld
adc
je
ljmp
sbbb
outsb
and
sub
cmp
xorb
ljmp
mov
out
cmpl
lahf
jle
aaa
sub
mov
out
xchg
sahf
scas
arpl
rcll
iret
adc
mov
movsb
jae
lret
xchg
cmp
cld
dec
sbbl
adc
sbb
xorl
sub
ja
andl
lock
pop
pop
jecxz
mov
pushf
jmp
scas
push
fbld
bound
mov
sub
mov
lods
ret
add
jnp
xor
and
xchg
imul
pop
mov
in
or
into
fildll
inc
into
xor
jg
jp
cmp
inc
incb
push
sub
push
xor
jmp
icebp
mov
lcall
jl
sub
daa
fidivl
dec
mov
sbb
in
scas
mov
mov
jnp
mov
ds
fnstcw
mov
pop
add
out
lods
lcall
jecxz
sub
loope
insl
icebp
push
in
push
rcll
mov
jno
ret
mov
lods
pop
aas
or
push
mov
mov
repnz
mov
lods
add
xchg
inc
stos
imul
mov
js
fwait
ret
mov
cmpsb
pop
fadds
add
popf
out
xor
push
shll
jae
mov
jne
mov
mov
sub
clc
pop
out
jmp
fsubrs
cmp
lock
jne
inc
fstps
addl
dec
mov
jg
shlb
cmp
insl
cmp
jb
frstor
loop
mov
pop
sub
outsl
les
mov
cmp
jns
push
dec
dec
cltd
mov
ja
mov
xchg
outsb
push
divb
mov
outsb
mov
xchg
negb
mov
es
jp
and
sub
add
fdivp
inc
dec
in
sbbl
push
arpl
repz
lods
jo
sub
mov
push
inc
mov
outsl
insl
mov
int3
js,pn
push
mov
lods
popl
out
lahf
out
ds
cmp
xchg
mov
repnz
popf
cmc
addr16
dec
sub
and
mov
into
or
fnsave
xchg
sub
insb
data16
push
out
push
ja
ret
inc
jecxz
sbb
pop
test
in
subl
mov
jnp
add
mov
sub
in
cmp
fimuls
xchg
in
gs
loop
les
stos
roll
lods
add
sub
ret
push
xchg
mov
adc
enter
mov
arpl
jb
mov
mov
stc
add
sbb
push
jne
nop
imul
cwtl
sbb
dec
and
loop
leave
ljmp
fldenv
dec
sub
adc
xor
dec
push
push
sahf
xchg
pusha
daa
and
or
inc
mov
push
cld
jae
xor
rclb
mov
dec
int3
out
lds
lods
push
xor
xor
xchg
mov
stos
out
int3
loop
dec
in
xchg
mov
in
movsl
test
lret
xor
sbb
clc
pop
je
cmp
out
xor
popf
mov
mov
pushf
mov
dec
mov
iret
jp
out
jo
sbb
jmp
jnp
mov
lret
push
outsl
push
mov
sbb
xchg
out
mov
pcmpgtd
fstl
mov
sub
aaa
ret
pop
nop
pop
or
mov
sbb
lret
or
push
mov
insb
cmp
cmpsl
stos
ret
mov
fists
jo
pop
xchg
fidivrl
roll
in
sbbb
jne
mov
aam
decb
into
in
dec
js
ret
or
mov
sbb
insl
add
mov
cmc
or
insl
lods
dec
adc
out
loop
call
test
sbb
cmp
xor
mov
sub
dec
push
adc
inc
cs
mov
mov
pop
jp
jmp
push
xchg
lret
int3
cltd
dec
sub
test
ret
or
inc
jge
jl
pop
mov
mov
mov
testb
jb
out
dec
sub
fnsave
iret
fadd
mov
lods
mov
and
imull
cmp
or
or
add
xor
fdivs
movl
xlat
or
int3
dec
mov
adcl
xlat
test
and
fucom
xor
imul
cmpb
pop
dec
pop
aad
jo
jns
ljmp
shlb
repnz
int
dec
jbe
mov
subb
dec
outsb
test
jl
push
aad
or
mov
outsl
out
mov
add
mov
sahf
mov
dec
lret
addr16
shrl
dec
lret
popf
lea
push
pop
pop
pop
repz
mov
sub
add
insl
insl
cwtl
or
mov
daa
and
popa
das
cltd
push
fs
sbb
sbbb
inc
lret
jle
mov
int
push
sub
dec
dec
rcl
daa
push
push
mov
jle
in
jle
xchg
or
and
fmull
sti
or
adc
gs
daa
dec
pop
in
and
or
and
cmp
xor
cmp
loope
cli
mov
push
shlb
and
fdiv
in
add
stos
xlat
push
xor
les
xor
repnz
test
ljmp
subl
or
sbb
ret
scas
push
xchg
or
mov
pop
jmp
pop
pushw
nop
mov
and
mov
aas
jns
sub
les
data16
lea
imul
inc
cmp
mov
lcall
pop
inc
mov
shl
into
push
iret
pop
adc
pop
test
daa
fisubl
pop
in
cmc
mov
cld
xchg
jl
push
dec
or
cmp
or
es
add
test
sbb
mov
inc
jge
hlt
pop
mov
lahf
push
jo
loopne
sbb
mov
int
fs
jns
and
push
push
jmp
vpackssdw
loope
xorb
lret
dec
jae
mov
lcall
rcrb
jo
or
pop
sti
addr16
push
jmp
pop
push
sbb
lcall
stos
ds
insb
sbb
es
lds
jb
fmull
outsl
sahf
mov
push
fcompl
mov
and
pop
ljmp
pop
and
xchg
fcompl
sbb
push
into
addr16
ja
je
mov
fsubs
aam
or
aaa
es
nop
inc
fdivp
sbb
pop
scas
les
jns
pop
mov
push
outsb
xchg
in
jnp
dec
mov
sbbb
dec
mull
adc
gs
push
add
addr16
loope
ja
xor
mov
sbb
popf
jecxz
push
xchg
out
push
inc
xor
out
or
xchg
imul
sbb
adc
jb
fdivl
push
aas
out
pop
sahf
push
xor
pop
lods
xor
push
push
mov
lea
je
pop
mov
sub
jo
mov
aad
xor
inc
xor
nop
sbb
push
div
insl
jl
ljmp
std
jecxz
mov
push
adc
insb
ss
and
aaa
cmp
call
outsl
roll
pop
cmp
out
movsl
pushf
mov
repnz
jmp
adc
out
push
push
daa
das
jbe
movsl
push
adc
jbe
xorl
in
add
fmuls
test
cmp
pusha
xchg
fsubs
push
adc
ret
out
pushf
clc
push
fists
dec
xor
dec
lret
lea
out
push
pop
sub
test
xor
rorl
pushw
mov
mov
cmp
ficoml
xor
and
ss
add
rcl
xchg
jns
cs
outsl
push
jle
lret
adc
and
stos
jmp
xor
enter
sbb
bound
call
xchg
test
push
cmp
add
sub
out
movsb
jle
push
into
dec
xor
add
jmp
out
push
int3
or
bnd
inc
xchg
mov
and
cli
dec
dec
je
adc
les
inc
adc
jle
dec
mov
jl
dec
jecxz
pop
scas
and
cmp
add
dec
incl
stc
sbb
mov
fcmovbe
pop
pop
sbb
sub
xor
jns
add
add
inc
or
xor
sub
popa
mov
fistl
xlat
or
dec
aas
and
lods
lods
xor
in
xlat
mov
cmp
pop
movl
sub
shll
enter
cltd
cmpsl
cmpsb
xor
jns
jecxz
sbb
loop
loopne
loope
loope
mov
or
adc
orb
jle
test
jl
dec
fs
fsubl
hlt
fsubr
mov
jecxz
mov
insb
sarb
lahf
arpl
loope
test
jg
pop
notb
pop
icebp
cmp
or
xor
dec
pop
cmpsl
push
pop
mov
xchg
fldt
cli
jnp
xchg
popf
or
lea
cmp
pop
ja
insl
fs
lods
xchg
out
popf
sub
dec
xchg
outsb
xchg
mov
loop
nop
cmpsb
scas
stc
inc
sarb
mov
or
jae
mov
add
xor
ret
sbbl
out
mov
mov
mov
inc
nop
jb
cmc
test
mov
sub
out
pop
movsl
dec
shl
lcall
loope
mov
pop
jb
adc
in
cmp
jmp
lods
arpl
xor
imul
mov
mov
mov
mov
das
enter
loope
mov
mov
inc
lsl
gs
insl
cmp
pop
cmpsl
rolb
cmp
sbb
mov
mov
jnp
dec
fwait
loopne
push
mov
ljmp
mov
or
xlat
daa
sbb
ljmp
dec
jns
mov
push
leave
mov
xchg
movsb
insb
dec
fcmovu
dec
or
xor
push
jnp
in
js
scas
arpl
sub
cmp
xor
pop
mov
jecxz
mov
mov
and
idivl
adc
adc
push
popa
pop
ljmp
daa
cld
pushf
sahf
sti
repnz
or
jg
push
fdivs
dec
adc
shrb
clc
fnstcw
or
testl
add
into
out
pop
pop
enter
icebp
gs
push
data16
ss
mov
les
add
int3
pop
jnp
push
insl
push
mov
or
int3
xor
out
push
adc
pop
xchg
and
jae
mov
mov
fwait
cld
stos
dec
add
and
pop
xchg
add
mov
mov
sub
sub
gs
in
xchg
or
sub
in
enter
cltd
pop
xchg
es
xchg
mov
add
xor
sub
arpl
scas
stos
out
mov
fsubrp
sub
ret
ljmp
rep
cmpsb
jmp
mov
ljmp
es
fidivl
pop
and
frstor
insb
fs
inc
movsb
in
rclb
add
xchg
repz
xchg
imull
sbb
sub
dec
test
cmpsb
cld
cltd
outsb
push
stc
out
push
cmp
pop
popa
hlt
lods
lods
aad
push
and
or
sbb
insb
xchg
nop
test
adc
insb
jge
or
inc
insl
cmp
jg
adc
jb
adc
fistpl
shll
dec
xchg
push
inc
in
pop
shlb
cmpb
in
push
arpl
scas
int3
mov
push
sahf
xchg
dec
popf
push
push
stos
inc
icebp
adc
sbb
icebp
inc
cld
test
push
dec
and
mov
mov
cs
pusha
pop
dec
dec
popa
and
std
xorl
inc
icebp
out
cmp
xchg
push
rep
jb
call
out
imul
mov
in
lock
imul
std
jmp
adc
ja
sub
push
pop
sub
popa
imul
xor
inc
sub
lods
imul
cmpl
add
mov
bnd
pusha
shl
sub
in
gs
jp
mov
mov
fnstsw
aad
cmp
scas
mov
cwtl
xchg
pushf
pusha
loope
add
call
out
pop
pop
aam
gs
jns
mov
xchg
fcoml
pop
fsubrl
movsb
xchg
cmp
cld
add
out
cmp
mov
push
mov
daa
mov
lods
loop
stos
jb
or
xchg
out
std
lret
mov
popa
mov
jnp
jecxz
shll
mulb
add
mov
pop
cs
incb
repnz
fisttpl
xchg
sbb
mov
cld
cltd
sbb
sub
and
push
leave
int
out
shlb
jne
std
aad
in
fldl2t
mov
les
popa
in
xchg
mov
aad
out
int
in
push
mov
mov
pop
mov
and
outsb
int3
jecxz
aam
in
or
pop
int3
sbb
sbb
pop
lret
push
cmp
cs
dec
push
insl
mov
scas
jns
xchg
or
adc
or
sbb
enter
mov
fcoml
dec
lret
idiv
shll
xchg
insb
jge
ja
jle
mov
pop
fildl
stos
mov
mov
out
inc
test
lods
xorl
jnp
sarl
out
pop
cmp
fcmovne
sub
mov
dec
adc
adc
mov
movd
pop
xchg
adc
sub
repnz
pop
inc
cld
pop
pop
jae
dec
test
imul
sub
mov
or
stc
cli
aam
les
lahf
push
sbb
loop
sub
rolb
fadd
ss
stos
adc
sbb
ret
push
mov
inc
xor
push
insb
and
fistpl
loop
loop
and
mov
add
inc
lock
clc
push
jecxz
mov
pop
popf
mov
push
icebp
sub
adc
inc
mov
push
test
mov
nop
xchg
jle
and
and
cmp
mov
icebp
pop
das
adc
out
cmpl
adc
jg
les
popa
pop
mov
adc
lea
jmp
pop
pop
pop
addr16
xor
dec
sub
inc
and
pop
cltd
insb
mov
test
cs
test
popf
inc
adc
xor
and
pop
or
adc
notb
add
push
cmp
xchg
dec
int3
lock
sub
pop
xchg
dec
fnstsw
nop
sahf
and
push
mov
jge
xor
nop
and
add
cmp
add
pop
mov
dec
xchg
adc
push
add
inc
push
jnp
repnz
push
add
mov
jg
mov
xlat
fwait
mov
or
and
lods
call
into
sub
fisttpl
bound
xor
enter
sbb
bound
add
popf
inc
inc
jmp
out
sbb
xchg
in
adc
or
pop
fldl
cmpsb
xchg
cmp
fcmovb
inc
jnp
fcoml
arpl
cmp
sub
dec
test
lds
outsb
rcrb
and
add
nop
repz
test
cmp
dec
scas
jb
sahf
push
push
push
std
testb
mov
mov
out
repz
xchg
mov
jecxz
loop
cli
and
sub
mov
leave
popa
jo
pop
mov
daa
and
stos
push
insl
js
loopne
dec
xchg
xchg
sub
lahf
mov
inc
sbb
es
testl
cwtl
pop
xchg
out
jg
push
testb
or
adc
movsb
sub
mull
stos
adc
movsl
jns
or
jmp
xchg
inc
cmp
push
cmpsl
pop
lods
cltd
cmp
loopne
and
lcall
xchg
lret
bound
cmp
stos
mov
pop
aad
sahf
mov
mov
or
popa
fsubr
dec
jle
xchg
icebp
aam
jp
push
mov
and
mov
mov
andl
add
les
hlt
sub
xchg
mov
popa
bound
xor
mov
and
rorl
mov
dec
mov
dec
out
push
jmp
inc
push
iret
jge
mov
push
outsb
xor
and
lods
and
out
mov
sti
mov
jp
notb
mov
test
ret
dec
pop
mov
sub
cmp
mov
inc
mov
test
ficoml
and
jb
or
sbb
and
mov
mulb
adc
xchg
mov
xchg
add
and
test
adc
rclb
stc
rcr
cwtl
and
clc
xor
dec
shr
dec
cwtl
lret
mov
push
adc
jecxz
aas
rcll
aaa
sbb
lock
leave
cmp
por
sub
push
ds
sbb
decl
test
push
jle
aas
cmp
push
fiaddl
inc
loopne
mov
xchg
push
int
sub
fstpl
stc
cmp
and
add
xchg
and
sub
sbb
cmp
shrl
mov
lret
xor
mov
lea
aad
fldl
jne
cmpsl
jo
push
dec
sub
xchg
scas
movsb
mov
rclb
sbb
cli
das
mov
cmpsl
sbb
or
dec
mov
in
jg
add
pop
cmp
xchg
mov
std
mov
mov
fnsave
test
jae
mov
ja
add
xlat
ds
cmpsl
into
fwait
fwait
nop
sub
mov
in
popf
cmc
test
pop
int
dec
cmp
jl
mov
fdivrl
ret
loope
xchg
iret
mov
cmp
leave
insl
aaa
stos
sub
add
or
les
sub
sbbb
xor
jns
pop
stc
in
push
addl
cmp
xorl
fs
add
mov
push
xchg
gs
daa
test
clc
cmp
mov
xlat
jl
lcall
and
sub
fstpt
mov
ret
mov
inc
into
in
rcr
mov
cmp
mov
stc
and
xchg
push
loop
ret
push
cmc
test
sbb
xchg
aam
shll
jbe
push
pop
sub
adc
lahf
cmp
add
adc
pushf
or
popa
in
cs
es
lods
cmp
sub
insb
pop
ja
out
jge
adc
sbbb
xchg
or
mov
jne
fiadds
xchg
mov
inc
outsb
adc
test
loopne
jnp
mov
or
mov
push
cmp
push
cmp
xor
insl
dec
mov
jmp
in
cmp
orb
jp
ss
in
ja
xor
adc
cmc
fisubs
push
subb
leave
mov
ja
int3
inc
shl
jl
test
sub
roll
sub
push
pop
data16
cwtl
sub
mov
xchg
test
aad
and
mov
push
add
sub
cld
mov
add
sub
loop
lods
mov
ljmp
adc
lock
es
rcrl
xchg
cmp
cmpsb
mov
or
push
inc
scas
inc
jecxz
sub
lcall
or
or
jl
nop
sbb
cmpl
mov
mov
testb
imul
addr16
out
stos
cld
cmp
ss
fimuls
fwait
xlat
stos
lock
scas
repnz
mov
push
call
aad
cs
and
fildl
push
out
cmp
mov
xchg
pop
mov
add
sbb
push
dec
jle
xor
insb
rclb
pop
or
adc
and
das
adc
dec
insb
iret
push
shll
lods
xor
das
shrl
inc
test
and
jnp
lahf
fstl
mov
cmp
lods
iret
aas
outsl
dec
mov
leave
xchg
test
imul
test
insb
xchg
pop
push
mov
add
insl
int
pop
stc
pop
xchg
push
jmp
shl
jb
dec
sub
andb
test
outsb
add
xchg
jns
shrb
fcomp
mov
push
inc
das
fwait
js
sub
jbe
pusha
ja
xchg
sbb
mov
push
ret
push
mov
and
aas
sub
outsl
dec
insb
mov
lock
cmpb
out
xchg
ja
sbb
scas
push
repnz
cld
xchg
push
ret
jle
fisubl
push
xadd
mov
inc
push
mov
cmp
xchg
scas
fs
pop
mov
xor
cli
lods
repnz
push
sbb
push
mov
stos
ds
sbb
cltd
push
mov
push
in
outsb
sbb
sbb
ret
fistl
lcall
pop
add
pop
lds
sbb
jp
cli
ret
lock
pop
sbb
mov
push
outsb
sub
pop
ja
or
shlb
fbld
cmp
fwait
sub
scas
mov
mov
mov
out
popa
int
jecxz
mov
xchg
adc
movsb
jp
mov
sub
mov
jp
in
lea
dec
add
cmp
mov
dec
or
scas
and
jno
pop
daa
mov
bnd
lods
inc
add
mov
push
adc
sbb
out
pop
xchg
ds
push
stos
mov
sub
push
and
in
out
xchg
pop
imul
cmp
lcall
icebp
or
ss
mov
mov
inc
cmp
insb
sbb
add
mov
gs
dec
adc
inc
jecxz
jae
test
ljmp
and
pushf
jecxz
andb
and
fcmovnu
mov
mov
imulw
les
test
cld
popa
push
xchg
in
jp
mov
sub
add
sub
rcll
xor
jo
ficompl
or
add
adc
imul
cmp
pop
sbb
push
clc
out
stc
rorl
test
fmuls
les
movl
mov
mov
dec
pop
or
cmpsl
dec
or
pushf
cmpsb
fwait
mov
pop
enter
adc
mov
sbb
movsl
xor
loop
xor
rolb
cltd
inc
mov
mov
adc
push
loopne
push
repnz
push
add
cltd
in
nop
xchg
xchg
adcl
sbbl
cmp
andb
xor
arpl
jns
daa
xor
or
sbb
add
sarl
pop
mov
push
std
add
arpl
aad
aad
push
dec
xchg
movb
jo
das
pop
mov
out
sbb
out
std
insb
les
inc
fdivr
aaa
jne
dec
or
add
mov
jae
cmpsb
cltd
adc
cs
fcmovb
fnstcw
cmpsl
mov
int3
sbb
push
not
pop
push
insl
dec
push
push
pop
in
pop
enter
pop
add
sbb
mov
jg
xchg
pusha
sahf
jae
push
inc
cli
or
jmp
lret
jbe
roll
outsl
pop
xchg
sub
dec
repz
sub
out
imul
scas
jle
ds
out
mov
and
outsl
es
inc
jbe
repz
xor
xchg
dec
inc
sub
jo
jns
popf
jecxz
sar
dec
add
fiadds
inc
ret
lahf
xchg
dec
lahf
es
add
ja
test
data16
jg
pop
lcall
loopne
into
inc
cwtl
xchg
shlb
stos
sbb
adc
and
arpl
loope
cmp
ja
add
inc
ret
mov
dec
icebp
xlat
xchg
mov
mov
ffreep
lret
pop
pop
popf
pop
or
sti
ss
jnp
mov
add
jns
add
addb
dec
or
in
das
lods
sahf
mov
xor
cmp
outsl
arpl
pop
mov
in
in
hlt
ljmp
fwait
sbb
xchg
mov
ljmp
sbb
lahf
xor
popf
rol
lea
fstps
arpl
cld
mov
fidivrl
dec
in
stos
fbld
stc
mov
insb
jnp
nop
pop
jl
jnp
bound
outsb
pop
push
mov
mov
xor
mov
inc
sbb
movsl
lds
push
or
push
jo
and
das
les
mov
jle
sub
sub
lret
mov
fstpl
xchg
outsb
sub
inc
icebp
mov
icebp
pop
sbb
les
xor
jg
xchg
jb
nop
sub
hlt
jp
xchg
mov
pop
push
sub
push
jnp
mov
xchg
test
push
into
pop
jae
rcrb
stc
mov
xor
sbb
pop
sahf
arpl
enter
gs
or
mov
lods
add
pop
lahf
test
rclb
popa
dec
ljmp
test
mov
lock
int
and
shrl
mov
push
stos
xor
mov
jo
sub
ret
popf
mov
xchg
js
movsl
imul
sbb
sti
les
shl
inc
add
jecxz
mov
sbb
sub
aam
js
stos
mov
fcoms
jle
into
jo
das
andb
in
mov
inc
sbb
or
inc
insl
insl
push
jnp
fists
cmp
jb
outsl
insb
inc
imul
xchg
sahf
dec
stos
mov
in
mov
addr16
addr16
adc
xchg
add
jns
and
cmpl
sahf
adc
loope
sbb
fcompl
insl
sub
pusha
fwait
mov
popa
push
lret
div
rorl
xchg
test
or
cmp
test
imul
negb
mov
push
cmpsl
xchg
sub
les
aas
inc
imul
cld
in
xor
or
push
add
aad
mov
mov
sub
inc
stos
inc
fildll
or
add
mov
lea
or
mov
mov
cs
cli
test
sbb
sarl
jb
mov
repz
adc
mov
sub
movsb
mov
adc
cmp
ljmp
xor
cmp
movsl
push
pop
lcall
inc
cmpsl
or
aas
sub
pop
push
dec
inc
movsb
mov
out
fwait
in
mov
and
stc
ret
adc
mov
mov
pop
xor
sub
pop
sbb
ret
pop
and
inc
sahf
into
pushf
push
xchg
mov
das
fwait
push
sti
push
out
adc
pop
or
sub
lods
popl
test
out
pop
sbb
lahf
sbb
add
push
push
jns
faddl
mov
and
lret
lret
sbb
mov
cltd
cltd
call
mov
dec
das
xor
pop
orl
sub
add
and
lds
loope
je
jl
loop
xor
lahf
aas
dec
je
sub
loopne
inc
xchg
fildll
dec
js
pop
dec
or
ljmp
cs
jae
out
cmp
fidivs
push
in
std
subl
pop
push
scas
out
test
sub
cmp
jae
ss
mov
xchg
jmp
je
mov
popa
sti
ret
mov
push
pop
popf
rorl
lret
loopne
call
adc
out
dec
shrl
fistps
js
dec
or
add
mov
adc
mov
jmp
pushf
jb
mov
repz
mov
cwtl
push
mov
std
pop
ret
cmp
pop
jne
nop
jbe
into
ffreep
jecxz
and
fldl
or
pop
shrl
sub
dec
jnp
int
call
std
lea
cmp
imul
roll
cmp
sbb
clc
loopne
mov
in
mov
scas
pop
mov
fs
cmp
pop
pop
rcr
fldt
inc
mov
mov
mov
popa
es
or
jg
lock
fwait
lahf
cmp
cmpsb
jge
sub
negb
sbb
or
out
mov
pop
dec
pop
push
push
add
call
shrl
testb
jecxz
nop
data16
jecxz
imul
and
inc
xor
xlat
xchg
or
dec
xlat
shlb
loopne
fcom
mov
xchg
mov
cltd
xor
sahf
jo
std
sbb
xchg
push
cli
mov
xchg
addr16
mov
pop
mov
cli
and
test
adc
jo
xchg
cmp
adc
scas
jns
pop
nop
mov
addr16
jg
inc
pushl
cmp
adc
fnsave
jo
mov
adc
out
fs
call
xor
aas
add
dec
imul
jb
mov
mov
in
ficoms
mov
xor
outsb
call
pop
sbb
fldcw
pop
mov
jp
imul
ds
add
ja
xchg
xchg
loopne
pop
push
xlat
in
jp
mov
jns
inc
arpl
and
lock
call
ret
pop
sbb
cmp
mov
pop
xchg
jecxz
dec
out
lcall
push
cmc
dec
mov
inc
aaa
sub
fwait
in
inc
jne
xchg
or
dec
or
mov
jp
pop
dec
jno
sbb
push
mov
mov
fnstenv
xchg
sbb
int3
jp
and
xchg
in
lret
sub
push
or
add
add
mov
and
sbbl
shl
out
imul
pop
push
arpl
sbb
sub
subl
push
mov
mov
pop
mov
mov
cmp
inc
es
int
outsl
and
insl
adc
or
xchg
cs
sub
adcl
pushf
sub
adc
outsl
inc
xchg
jnp
mov
xor
inc
push
scas
fnstsw
fiadds
jmp
enter
jecxz
add
mov
mov
xchg
lea
scas
xchg
fpatan
xor
sub
xchg
dec
clc
pop
outsl
mov
lds
sahf
scas
shll
test
stos
cltd
lods
cwtl
push
mov
test
lret
mov
sub
adc
sub
jo
imul
fistpll
fidivrs
mov
popa
or
repnz
jne
mov
mov
pop
aas
in
mov
loopne
jbe
lods
lds
loope
mov
mov
mov
imul
fmuls
in
push
jno
call
add
adc
insl
cltd
test
fildl
int3
lret
fwait
sbb
lret
out
sahf
cmpsb
lock
aas
outsl
cwtl
dec
addr16
ret
das
mov
imul
mov
imul
test
test
ror
cmc
dec
int
and
scas
xchg
add
insl
test
cmp
adc
lcall
mov
or
push
and
pop
out
stos
add
mov
mov
popa
outsb
std
mov
xor
xor
inc
hlt
cmp
outsb
aaa
les
and
cmc
xchg
mov
inc
out
pop
lods
cmp
test
inc
xchg
adc
rorb
sbbl
pop
aaa
xor
scas
orb
jbe
add
mov
inc
les
js
into
or
popa
add
jne
mov
rol
adc
xor
inc
in
add
xchg
cmp
inc
popa
mov
xchg
adc
lcallw
pop
std
mov
inc
cmpsb
xor
push
cmpsl
cltd
or
or
imul
mov
xor
mov
js
cmp
add
aas
ret
adc
xor
lcall
jno
out
and
xchg
test
add
push
das
mov
or
mov
inc
lods
push
cmp
mov
jbe
into
decl
jnp
push
in
push
roll
idivl
ss
cs
mov
jb
mov
jne
les
mov
pop
mov
sub
mov
insb
jl
out
and
jo
shl
jge
leave
xchg
jle
fwait
mov
mov
or
dec
mov
daa
inc
test
cmpl
sti
dec
stc
scas
add
loopne
addr16
insb
aad
or
fxch
dec
push
add
aaa
xor
lret
mov
cmpsl
test
imul
xchg
sub
pop
mov
mov
and
push
loopne
mov
iret
cmp
shr
mov
pop
gs
pop
mov
fisubrl
icebp
filds
cli
je
xlat
das
in
xchg
and
sbb
ret
ja
repnz
mov
mov
cmp
or
or
push
loop
xor
mov
jb
jb
inc
nop
add
push
dec
mov
scas
and
insl
in
jo
push
loope
xchg
jbe
inc
mov
xor
aad
lret
cmp
mov
lahf
dec
mov
xor
stc
pop
mov
cmc
mov
pop
cmp
dec
sahf
cli
sbb
adc
and
mulb
insb
sbb
shld
xor
push
xchg
xorl
jns
and
add
js
aas
pushf
push
jnp
ret
je
push
lea
cmp
aam
test
out
cmp
cmpsl
inc
mov
lods
dec
hlt
or
xchg
mov
push
ljmp
inc
inc
adc
cmp
pushf
fsub
and
gs
mov
pop
ds
mov
dec
jg
push
into
adc
lahf
sub
movsb
lods
xor
lods
test
dec
fwait
lods
ja
mov
mov
fcmovb
inc
test
inc
xchg
cmp
fwait
lods
bound
idiv
popa
ja
dec
push
mov
imul
aas
cmp
outsb
adc
xor
inc
insb
mov
test
testl
jge
add
data16
mov
mov
dec
lods
and
test
out
aas
js
mov
std
mov
or
out
mov
ljmp
pushf
xor
ljmp
adc
and
hlt
dec
xorl
push
push
add
lods
jge
mov
in
jl
in
push
loopne
push
movsl
push
fsts
in
aad
xor
addr16
and
xchg
fwait
sbb
cli
pop
int
mov
cmp
icebp
mov
rcl
or
mov
aad
cmc
ret
sbb
movsb
arpl
mov
out
and
sar
jbe
bound
cmc
nop
loopne
and
mov
cld
daa
inc
bound
cmpsw
push
and
daa
dec
int3
stos
stos
ret
test
je
mov
add
or
cmpsl
push
or
pusha
imul
ljmp
leave
and
mov
xorb
push
sbb
aaa
push
dec
jo
andl
push
insl
xcrypt-ctr
cmpsl
lahf
pop
xlat
ja
xorb
inc
dec
or
ss
cltd
stc
mov
inc
std
push
xchg
std
jo
xchg
jno
icebp
lock
add
adc
popf
sub
or
inc
popa
mov
push
imulb
int
icebp
out
mov
int
xchg
into
aam
push
or
call
out
enter
mov
pop
xchg
roll
jecxz
jge
lods
out
jg
fcoml
dec
mov
insb
out
mov
in
pop
sbb
in
or
test
shl
test
test
xchg
ror
loopne
push
icebp
push
jne
sub
arpl
inc
in
pusha
into
and
int3
push
jecxz
adc
arpl
adc
jne
cmc
pushf
mov
sbb
inc
out
and
pop
fbstp
adc
xor
mov
inc
mov
jmp
sbb
pop
sarb
ja
push
stc
jns
xor
lock
xor
aad
ljmp
aas
popa
pop
out
xor
jp
cmp
add
out
mov
jmp
or
movsl
inc
and
xor
and
mov
negl
imul
imul
fabs
verr
mov
in
lea
flds
aaa
push
inc
js
jo
mov
mov
lcall
and
jg
add
jne
pop
sbbb
fmuls
out
scas
sti
sbb
insb
lahf
xchg
ds
cmpsl
jp
mov
ffreep
adc
lods
add
imul
sar
and
pop
cld
ja
pusha
dec
jae
shr
sbb
cwtl
in
dec
push
mov
cmp
aaa
adcb
jl
aam
dec
aad
lds
add
and
mov
pop
fwait
pop
int
xchg
dec
clc
icebp
ljmp
repz
mov
mov
mov
repnz
cli
aas
fsubr
inc
xorb
repz
mov
loope
lds
and
and
pushf
imul
sub
cld
lahf
in
ficompl
out
popf
cmp
insb
and
stos
cmc
fs
scas
fcomps
lea
and
push
mov
stc
inc
xchg
sbb
push
mov
repz
pop
out
cs
push
mov
mov
lret
roll
xchg
fxch
inc
repnz
rcl
sub
jne
cmpsb
inc
pop
lea
xorl
mov
adc
sbb
sub
pop
add
in
or
dec
jecxz
movsb
xor
lret
mov
lret
xor
mov
icebp
xchg
jb
pusha
xchg
popf
nop
testb
test
sbb
or
ret
or
adc
push
cmovl
in
ljmp
and
dec
adc
rol
cwtl
lds
js
xchg
and
jo
popa
dec
ja
xchg
sub
inc
mov
cmp
sbbl
mov
hlt
gs
xor
lret
pop
ss
rorl
xor
push
outsl
mov
xchg
sahf
lea
dec
ficoml
inc
or
pop
ss
lahf
lret
push
je
inc
sub
mov
movsb
das
shr
sub
jb
dec
mov
bound
call
mov
pushf
std
push
mov
mov
push
ret
mov
dec
lret
xchg
fsub
mov
int
jmp
neg
xchg
push
aad
inc
dec
mov
dec
adc
xchg
jecxz
loopne
jbe
into
pop
cmpsl
je
es
js
push
aam
pop
cmpsb
loope
xchg
mov
jg
and
mov
das
stos
sbb
aad
popa
sbbb
enter
sbb
leave
ljmp
shrb
add
mov
int3
popa
lds
stc
or
arpl
repnz
inc
out
adc
or
insl
sub
loope
addb
jmp
in
push
sbb
dec
lods
ja
sahf
push
inc
arpl
jno
or
imul
push
jbe
std
jg
mov
imul
jmp
inc
mov
sbb
stos
scas
dec
jmp
sub
pop
and
push
add
stos
lahf
in
out
es
pushf
iret
hlt
jl
mov
ljmp
add
jl
popf
xlat
xchg
xor
or
or
mov
mov
fistpl
lea
sbb
add
neg
lds
cmpsl
scas
inc
jmp
sbb
fmul
cmp
push
add
imul
sub
pop
dec
xchg
push
fwait
sub
mov
stos
jnp
dec
arpl
jmp
nop
aad
adc
lods
mov
mov
xor
sti
addr16
and
sub
push
hlt
out
jmp
adc
sahf
fdivrl
pop
dec
imul
sti
sbb
mov
out
into
jg
fistpl
dec
les
insl
ja
mov
mov
les
dec
mov
repz
js
jle
sbb
pop
pop
mov
inc
xchg
xchg
mov
push
and
lods
jno
jp
inc
std
pushf
or
daa
adc
xor
adc
cltd
sar
inc
daa
pop
out
std
inc
inc
in
jb
add
inc
movsl
ret
add
test
adcl
test
iret
jb
xor
std
popa
xchg
fbstp
sub
mov
ja
in
jecxz
aaa
jbe
xchg
push
adc
mov
add
ljmp
jb
repz
outsb
and
fs
push
stos
les
fadd
pop
mov
mov
arpl
or
and
bound
inc
repnz
jmp
mov
push
inc
scas
test
push
gs
or
scas
or
daa
fists
lods
mov
pop
mov
adc
dec
lds
pop
push
loop
pop
jns
loop
mov
push
imul
test
push
adc
shrb
pop
push
imul
fdivrl
ja
lods
xlat
out
rcl
dec
fildll
jp
inc
xor
push
ret
mov
negl
cmc
imul
fnsave
movsl
jmp
loopne
pop
mov
shll
sbb
add
cli
arpl
cmp
or
sub
mov
jnp
push
inc
aas
loopne
ret
push
fnsave
fisubl
fcomps
jbe
mov
dec
fcomps
mov
cmp
daa
and
inc
fiaddl
inc
jno
and
mov
jnp
hlt
scas
adc
mov
push
jbe
orb
jg
mov
lret
push
ret
test
adcw
push
in
sub
sbb
in
or
enter
jl
dec
out
sbb
icebp
xchg
sub
mov
adc
rcrl
jae
imul
pop
test
fs
insb
movsl
cmpsb
adc
loope
scas
mov
sahf
mov
push
into
roll
pop
test
adc
push
rcr
lret
and
shrl
pop
outsb
jl
fstpl
pop
jg
mov
hlt
cs
and
mov
icebp
aad
scas
mov
aad
lds
fucomi
mov
and
aam
popf
fimuls
dec
dec
cltd
dec
mov
mov
roll
add
pushf
xchg
inc
fs
les
mov
insb
mov
xchg
aam
xchg
xchg
sub
xor
mov
sbb
shrb
lock
aaa
pop
leave
xchg
outsb
sbb
lods
mov
push
xchg
pop
adc
sahf
notb
popa
faddp
mov
push
stos
xchg
aam
pop
popf
aas
aam
pop
xorb
popa
pop
xchg
addr16
mov
insb
mov
sbb
in
xchg
rcll
inc
in
push
mov
bound
sbb
cmp
sbb
mov
unpcklps
lcall
lahf
iret
sub
jle
pop
test
pop
add
mov
sahf
and
in
mov
and
stos
jg
mov
sti
and
or
mov
sub
mov
sub
mov
sbb
fucom
mov
xor
icebp
out
xor
dec
push
adc
test
call
aam
mov
xchg
and
lods
andb
scas
jbe
sub
gs
dec
rorl
daa
and
jp
cmp
rcrl
pop
or
xor
cmp
cltd
inc
sti
jg
cmc
lods
add
fldl
pop
jmp
pop
jmp
daa
fnstsw
cmpb
out
xchg
rcrb
mov
sub
xor
xchg
test
insb
aad
xchg
loope
fsubrs
rolb
inc
jbe
push
ljmp
icebp
fdivr
mov
dec
ret
mov
add
sbb
cmpsb
stc
mov
pusha
adc
inc
enter
and
mov
mov
lods
push
mov
and
std
out
shll
inc
clc
mov
mov
push
add
jle
mov
add
adc
in
lahf
pop
mov
cld
mov
hlt
in
cs
xchg
xchg
cld
outsl
loopne
imul
iret
sti
out
test
iret
iret
inc
mov
in
gs
pop
xor
inc
push
fwait
sub
stos
inc
push
fidivrs
cmp
fs
cmp
fnstsw
pop
xchg
xchg
push
inc
movsb
divl
mov
cmc
jle
shl
mov
lret
xchg
cmp
ja
cltd
xchg
push
dec
xor
scas
lcall
lds
xlat
sbb
push
call
sbb
and
dec
push
add
jno
cmc
fsubl
or
int3
add
lret
jge
test
sub
jno
rcr
mov
xor
push
cli
pushf
xchg
push
or
scas
shlb
int3
xor
xchg
xchg
push
add
mov
pop
pushf
scas
lret
mov
ljmp
lods
mov
mov
jle
mov
jmp
push
out
adc
mov
cmp
aaa
fldl
jns
sub
or
xchg
rsqrtps
lret
sub
test
mov
push
pop
cmp
insl
mov
shr
mov
pop
imul
repnz
xchg
sub
xchg
dec
inc
push
push
xor
push
or
cltd
sub
inc
push
mov
sbb
jb
dec
sub
mov
dec
mov
loope
aam
lods
jno
and
lret
out
jecxz
cld
adc
aas
scas
icebp
ljmp
adc
mov
sub
push
cwtl
or
sbb
mov
pop
aam
imul
pop
in
sub
lods
test
test
in
pop
popa
add
sub
sub
mov
mov
xchg
or
sbb
mov
or
bound
popf
mov
mov
addr16
xchg
cmp
push
imul
dec
sbb
iret
xor
and
pop
sbb
loopne
std
cmp
les
sub
fildll
cli
loopne
mov
pop
es
sbb
leave
pop
cmp
pop
cmp
lods
mov
add
call
addl
aam
je
mov
aam
call
paddd
sbb
add
adc
sub
jp
sbb
daa
jbe
mov
pushf
add
push
push
sub
mov
mov
daa
jmp
inc
jns
mov
pop
or
fwait
mov
loop
jo
and
out
xchg
out
push
sub
jb
shl
push
mov
inc
inc
sti
jl
mov
adc
xor
push
fs
mov
xchg
inc
mov
mov
cmp
les
sub
mov
pop
jno
cmp
add
mov
ljmp
adcl
adc
and
push
shrb
jge
inc
loop
mov
mov
js
or
enter
rorl
test
xor
sub
cmp
aaa
pop
fistpl
insl
sub
or
ret
fwait
stos
popf
push
lcall
cmp
fiadds
xor
out
subb
and
dec
mov
movsb
dec
inc
cli
pop
or
add
dec
adc
pop
mov
and
out
dec
loope
mov
jmp
sub
sbb
les
add
fstp
pop
jle
sub
cmp
pusha
jnp
fs
data16
push
insl
cmp
mov
push
aas
icebp
shll
or
in
popa
mov
lret
out
push
jns
pop
imul
call
xchg
stc
or
mov
fdivs
movsb
mov
gs
mov
jno
push
fsubs
out
inc
xor
popa
push
nop
ja
cmp
add
inc
das
stc
adc
lock
xor
xchg
mov
and
js
ret
adc
addr16
push
and
es
xor
sub
rorl
clc
fcomps
imul
sub
xor
push
dec
push
incl
cmpsb
jns
into
lds
add
sub
jmp
arpl
xchg
mov
xor
test
push
xchg
adc
sbb
lods
cli
aaa
cmovle
fwait
xchg
daa
pop
imul
push
dec
push
jae
cmc
div
ret
sbb
sub
int3
adc
scas
aaa
jl
and
mov
arpl
stos
stos
dec
gs
vphadduwd
mov
mov
je
shlb
add
ljmp
jne
in
test
rorl
pop
push
mov
push
xchg
movsb
lahf
sbb
sbb
incl
mov
adcb
xchg
push
sti
fcoms
mov
and
mov
push
andl
das
mov
jg
mov
dec
pop
push
or
sbb
out
xchg
pop
jmp
jbe
or
pop
test
sbb
stos
leave
adc
and
das
stc
cmpsl
cmp
fsubl
cmp
fistl
push
sub
rcrl
int3
shlb
or
cmp
sbb
fistl
mov
inc
pop
push
pop
insw
scas
mov
push
xor
scas
push
dec
hlt
and
je
fdivs
clc
outsl
add
imul
sbb
call
lcall
push
lret
adc
mov
out
mov
push
imull
adc
cmp
dec
imul
in
rorb
or
insl
inc
lret
sub
sub
popa
daa
mov
mov
mulps
dec
mov
xor
enter
aaa
fidivrs
mov
adc
in
movl
test
mov
aam
push
outsl
push
out
adc
sub
loop
testl
xchg
aas
aam
dec
dec
pop
shlb
pop
cmp
jp
mov
test
add
adc
xor
and
call
mov
outsb
jle
xorb
and
cmp
mov
jae
nop
shlb
adc
daa
in
ljmp
scas
movl
or
pushf
jb
xchg
movsb
aas
inc
dec
xor
cld
lock
jle
out
xchg
rep
mov
mov
sbb
xorl
adc
push
xchg
push
or
popa
shll
daa
xchg
push
jmp
mov
nop
out
mov
pushf
aaa
sarl
sarl
mov
push
mov
jg
imul
xor
hlt
movsb
mov
push
jge
enter
sub
xchg
or
xchg
sbb
mov
inc
fidivs
mov
lret
scas
nop
sti
pusha
sub
xchg
pop
xchg
inc
fs
add
add
loop
xor
iret
add
mov
jg
out
jl
in
or
fidivs
jo
aad
adc
shr
pop
cmp
sbbb
lods
and
les
shl
mov
add
sub
jbe
lock
aaa
xchg
jo
mov
xchg
mov
or
mov
pop
or
xchg
and
lret
sbb
xchg
scas
leave
add
stc
out
imul
lock
rol
outsl
cmp
push
ljmp
repnz
mov
dec
pop
out
mulb
fcomip
xlat
mov
je
stos
sub
mov
dec
iret
inc
leave
sbb
out
jl
fst
jg
fisttpll
mov
pop
aas
addr16
test
jae
xchg
pop
and
andb
push
test
cwtl
xlat
jnp
ljmp
adc
adcl
scas
pop
gs
lock
xlat
or
daa
mov
or
cmp
jecxz
lods
and
inc
js
dec
fwait
xchg
lret
lret
in
lcall
add
pop
cwtl
into
fildl
pop
dec
pop
cld
jmp
movsb
out
lret
cwtl
or
paddq
fldt
push
std
pop
in
mov
xor
lret
sti
and
push
test
dec
repz
and
xor
adc
ja
xor
out
aam
mov
adc
fwait
push
cmpsl
pop
inc
std
pop
push
inc
mov
mov
and
mov
mov
clc
jmp
insl
push
mov
lea
ret
sbb
xor
inc
inc
xchg
aam
jmp
les
sbb
in
add
mov
sub
xor
inc
mov
or
xor
xlat
insl
pushf
and
sub
popa
fisttps
push
pop
and
scas
andb
or
insb
ja
shl
mov
adc
test
cs
lret
repz
outsb
fnstenv
and
mov
fimull
dec
test
xchg
push
adc
push
push
adc
pop
mov
insl
mov
lock
xchg
pushf
cmp
addr16
mov
pop
leave
cmp
outsb
fld
test
pop
movsb
ffreep
repz
popf
xor
mov
dec
cld
in
imul
mov
dec
test
or
iret
sub
add
mov
xchg
das
ret
sub
stos
out
outsl
push
push
in
mov
sti
gs
js
fisttpl
clc
dec
pushf
mov
imul
iret
pop
push
xor
jp
sbbb
int
in
xchg
out
aam
dec
cmpl
sahf
lock
shlb
sarl
and
lods
jnp
test
pop
repz
add
mov
js
mov
xor
shlb
dec
cmpsb
inc
adc
fsubp
mov
scas
sub
popf
out
jbe
push
into
sub
in
aaa
or
mov
and
sbb
mov
sbb
sub
xor
hlt
orl
mov
into
orb
add
jle
in
divps
out
jne
popa
mov
mov
push
mov
sub
add
out
and
lret
mov
xchg
inc
inc
mov
xchg
aam
in
sarl
in
mov
les
mov
testb
and
mov
shrl
daa
cmp
mov
mov
push
gs
call
xor
jno
xchg
fnstcw
cs
fsubrs
and
xor
sub
sbb
jmp
mov
and
sub
test
sbbb
xchg
pop
xchg
xchg
jns
call
fdivp
test
mov
push
mov
outsl
add
mov
mov
popf
cwtl
xchg
mov
ljmp
push
dec
mov
sub
push
dec
jne
insb
dec
mov
inc
pop
mov
mov
ficompl
push
daa
negb
fldl
fists
dec
jg
cs
das
and
or
pop
aad
add
int3
iret
or
sbb
cmp
and
das
rep
cmp
add
pop
repnz
test
fwait
push
mov
dec
and
jo
notl
pusha
outsl
in
dec
mov
fbld
hlt
inc
stos
inc
cmp
arpl
ja
inc
arpl
in
jle
lds
pop
inc
pop
js
cwtl
icebp
je
jg
jl
sbb
fdivr
cmpsb
daa
cmpsl
fsts
xchg
and
mov
pop
ret
les
xchg
xor
pop
pop
xchg
xchg
aad
mov
sub
stos
pushf
cs
pop
push
sub
js
cmp
js
pop
sbb
jbe
hlt
dec
sub
and
jg
sub
popf
jne
dec
movsb
lret
test
clc
aaa
in
scas
fs
pop
notb
lcall
jle
fnstcw
mov
lret
push
cmp
fwait
sti
dec
or
sub
or
jmp
outsl
push
pop
mov
lahf
fdivs
das
lcall
or
lret
sbb
push
dec
adc
add
pop
or
inc
xchg
fidivrs
xchg
cmc
xlat
mov
test
scas
aaa
enter
and
incb
aam
nop
ret
fstl
icebp
sub
out
cmp
lods
dec
mov
add
fdivrl
mov
testb
mov
loopne
lea
pop
inc
nop
xor
mov
lahf
clc
sub
pop
mov
sahf
pop
je
clc
daa
dec
out
movsb
adc
dec
sbbl
mov
movsl
jmp
cmp
cmp
div
inc
cmp
sti
cmp
out
fs
out
fwait
push
push
jp
xlat
sub
jl
repz
push
add
mov
xlat
jl
inc
sbb
rolb
adc
adc
sbb
subl
push
sbb
stos
daa
add
test
and
push
inc
fiadds
jmp
call
ret
rcrb
jnp
or
mov
gs
je
ret
sbb
andb
inc
ds
sbb
xchg
push
push
jae
pop
pushf
sti
pop
jnp
insb
in
mov
out
sub
mov
sahf
fsubp
mov
cli
lea
pop
in
xor
jg
mov
add
sbb
push
jle
adc
dec
push
sub
cli
jb
mov
mov
in
repnz
cmc
xchg
xchg
inc
in
imul
nop
popf
pop
jl
xor
in
lods
cmp
in
or
mov
or
jne
test
shlb
mov
movsl
test
pushf
out
shlb
adc
nopl
fldz
sar
or
jno
pop
or
orl
cmp
out
add
or
jecxz
cmp
gs
cmp
loopne
mov
or
imul
push
or
test
call
mov
jecxz
test
jmp
sbb
mov
dec
or
inc
mov
or
xor
out
gs
cmp
pop
mov
mov
notl
cs
aad
jb
pop
cwtl
cs
js
jbe
dec
aad
or
or
clc
stc
add
fstps
inc
nop
mov
sti
pop
data16
outsl
cmp
adc
jle
clc
imul
mov
sub
xchg
inc
inc
push
in
rol
in
in
or
repz
jge
push
sbb
mov
imul
js
push
jecxz
and
pop
adc
mov
lock
or
mov
sub
movsb
cmp
cmpl
and
pusha
aam
out
cmp
xor
loopne
inc
iret
roll
data16
in
and
mov
imul
inc
loop
xor
jnp
pop
lock
xchg
add
ja
rclb
and
imul
into
sub
mul
stc
jmp
ja
loopne
lea
adc
mov
jecxz
bound
test
jg
mov
push
in
mov
dec
jge
out
pop
addl
push
inc
dec
push
in
sti
inc
call
push
repnz
int3
dec
xchg
je
adc
sbb
add
rclb
lret
es
mov
mov
push
cld
jle
aad
push
test
ror
insl
inc
and
icebp
addb
mov
daa
ret
enter
lods
popf
dec
push
jb
dec
xchg
xchg
cmp
out
fldcw
verw
or
mov
push
xchg
adc
lahf
xchg
cmpsl
test
cmpsl
mov
pop
nop
sbb
dec
ficoms
test
adc
or
in
lods
pushf
loop
inc
fidivrs
sub
dec
shlb
cmp
push
lcall
imulb
jg
rclb
addr16
and
aaa
rcrl
lods
or
gs
sbb
outsb
or
iret
jb
sub
sbb
daa
push
jno
and
push
andl
xchg
lcall
inc
mov
scas
stos
cmp
adc
out
jle
xchg
push
cmpb
add
cmp
repz
xchg
push
fbstp
push
cs
push
pop
mov
loope
sbb
repz
and
subl
cmp
std
xor
shll
add
stc
xor
iret
ss
stos
mov
xor
pcmpgtw
and
cmpsb
movsb
lock
outsb
xor
mov
cwtl
jl
adc
mov
fiaddl
dec
aad
push
add
aaa
bound
mov
jle
or
mov
mov
pop
jae
xor
xor
mov
xor
outsl
add
fidivrs
sub
sbb
aam
pop
cmp
sub
cmp
cmp
hlt
popl
test
lcall
les
popf
shlb
imulb
jns
insl
mov
mov
bswap
xor
sbb
cwtl
dec
icebp
lret
dec
xchg
into
es
testb
jl
jecxz
push
mov
jp
scas
or
push
cli
jbe
mov
and
leave
pop
or
mov
mov
xchg
pusha
out
mov
fcmovbe
test
js
sub
cld
xchg
mov
je
cmpsl
mov
daa
xchg
mov
push
cs
dec
mov
aaa
xor
lods
int3
push
mov
daa
shl
insb
aad
push
sahf
xchg
dec
xlat
inc
push
xchg
rcl
xchg
cwtl
sub
cmpsb
cmp
jecxz
jo
mov
inc
fnstsw
adc
js
adcl
popa
mov
jecxz
mov
mov
and
insl
or
mov
mov
mov
setp
inc
clc
pop
adc
pop
xlat
roll
dec
xchg
fwait
mov
lods
mov
xchg
or
sub
cmpsb
cmp
aad
pop
adc
stos
cli
fldcw
ret
test
cmp
push
adc
inc
sbbb
cltd
xchg
push
sub
mov
out
inc
lahf
inc
or
push
xor
rorb
shll
mov
push
cli
jmp
fists
in
xchg
cmpsb
cmpsl
xor
dec
lods
icebp
pop
mov
pushf
pop
xor
jo
hlt
ss
mulb
sbb
mov
fnstsw
xchg
sub
jle
mov
dec
sar
mov
mov
push
es
jbe
sub
popf
shll
xor
inc
aam
stos
mov
or
jecxz
fs
in
add
lds
push
sub
jle
movsl
in
inc
das
jp
stc
call
mov
call
mov
mov
push
dec
mov
lock
scas
mov
add
gs
int
or
lahf
gs
mov
movsb
insb
xchg
jae
jo
jb
xor
inc
aad
int3
jg
or
sub
mov
jnp
cs
xchg
xor
ja
iret
mov
xchg
into
pusha
outsl
or
nop
sbb
push
push
movsl
or
popa
mov
scas
push
pop
mov
into
sub
or
js
lcall
mov
and
xchg
orl
data16
and
mov
imul
jo
mov
outsl
fcompl
cmp
xchg
sub
cli
sub
dec
aad
fadds
imul
jae
and
sub
fdivrs
xor
lahf
in
xor
jecxz
out
mov
mov
fcomp
adc
jge
sahf
call
sbb
add
sub
or
and
inc
xchg
mov
inc
jle
add
cld
std
add
test
sub
daa
sbb
and
adc
das
xchg
add
inc
xor
test
fistpll
repnz
stos
adc
push
aad
fnstenv
xor
sbb
repz
xorl
icebp
std
push
xor
clc
sti
popf
stos
loopne
je
pop
cli
lods
ficompl
pop
mov
emms
pop
ja
loope
pop
mull
test
data16
loop
lock
and
mov
loope
nop
incb
data16
cwtl
dec
mov
and
sbb
add
push
gs
jmp
scas
add
push
popf
inc
adc
leave
test
ss
lret
cmp
push
xor
pushf
inc
pop
pop
push
ja
out
scas
cmp
les
int
imul
add
daa
push
dec
sahf
xchg
mov
push
inc
sbb
mov
test
or
cmc
mov
les
adc
test
mov
lret
mov
mov
orb
push
cmp
imul
add
xor
es
ret
into
int3
mov
sub
inc
mul
mov
mov
pushf
test
in
mov
and
cmp
aam
lret
pusha
sub
push
repz
jecxz
cmp
sti
pop
xor
mov
pop
pop
sahf
ss
xor
dec
sub
arpl
fildl
and
rclb
fld
mov
sub
and
xor
mov
cmp
out
js
adc
sub
in
jl
xlat
cltd
xchg
movsl
mov
jns
ret
push
push
pmaxub
aaa
jl
mull
cltd
mov
andl
rol
mov
in
inc
outsl
jnp
lock
lahf
adc
cmp
jl
das
xchg
test
mov
pop
lret
inc
mov
mov
add
mov
loopne
aas
cmc
pop
ss
cmpsb
icebp
mov
in
sbb
jecxz
pop
clc
out
stos
lcall
faddl
push
cmp
push
push
sahf
lds
sbb
fwait
dec
mov
mov
pop
dec
jb
add
ret
lea
dec
filds
in
ss
mov
cmp
inc
outsl
in
push
clc
jp
mov
data16
rorb
outsl
sub
call
cmc
stos
inc
pop
outsb
push
inc
fcoml
andl
insl
sbb
outsb
decb
push
xchg
push
jne
movsl
pop
add
fadd
mov
or
fs
das
lds
or
movsl
mov
mov
in
mov
pop
lods
mov
inc
aaa
enter
add
jns
add
cld
xchg
nop
or
aam
mov
dec
dec
lahf
je
push
mov
mov
lret
cli
push
in
je
mov
adc
cmp
loopne
mov
push
ljmp
inc
sbb
mov
icebp
push
in
xor
jno
int
mov
lods
das
xchg
lock
pop
ret
xor
clc
adc
addr16
jmp
mov
test
stos
movsl
dec
insl
sti
stos
sub
cmp
dec
adc
in
push
cwtl
push
xor
and
sbb
cmp
repz
jbe
cmp
icebp
xchg
scas
mov
mov
or
bound
stos
popa
call
mov
clc
push
mov
add
xor
mov
call
add
inc
push
ret
pop
es
mov
pusha
popa
mov
daa
incb
or
adc
dec
scas
loop
je
aas
push
cltd
pop
sar
in
jnp
aaa
mov
dec
je
sbb
mov
cltd
test
arpl
bnd
adc
shl
sbb
in
adc
mov
arpl
lea
xchg
mov
stos
add
sub
test
inc
popf
mov
cmp
push
aam
adc
jmp
jmp
hlt
push
ljmp
lods
and
lds
xchg
xlat
cmp
movsb
out
mov
shr
dec
sub
lds
mulb
inc
push
lods
xor
lock
sti
pop
sub
push
add
jo
xor
lcall
fdivrl
ljmp
fidivs
sbb
adc
inc
jnp
in
popf
ljmp
dec
pop
inc
cmc
jo
xchg
or
cmp
divb
add
fwait
mov
or
sub
loope
and
jmp
xor
dec
adcb
push
stos
cmc
mov
pop
xchg
or
xchg
mov
fldl
ljmp
into
scas
fimuls
pushf
repnz
popa
jp
adc
mov
sub
mov
in
cmp
xchg
push
in
rclb
gs
popf
mov
int
and
cmp
js
rclb
sahf
sub
xchg
dec
loope
out
adc
and
dec
ret
jno
das
jbe
and
gs
loop
push
sbb
mov
push
pop
jle
push
insb
pop
pop
inc
ja
aad
rcrl
int3
push
push
cmpsl
fildl
test
pop
test
xor
sbb
pop
pop
inc
leave
push
call
xchg
or
mov
dec
fwait
xlat
dec
not
jb
dec
dec
pop
ret
pop
movsl
clc
std
fcmovnu
sub
arpl
sub
dec
loopne
or
xor
in
xchg
cmpsb
xor
jp
sbb
and
and
mov
lret
inc
mov
pop
jnp
mov
fcompl
adc
dec
in
inc
mov
or
pop
or
mov
scas
pop
pop
insl
and
daa
push
repnz
repz
jle
mov
push
adc
inc
pusha
ficompl
cmpsb
xchg
sub
sub
clc
fbstp
mov
cltd
mov
in
cmp
fstps
aam
inc
out
lret
sub
nop
mov
push
fs
pushf
and
fcmovne
jmp
inc
orl
addl
clc
push
fninit
test
aaa
xchg
cmpb
repz
mov
sub
mov
movsb
popa
xor
pusha
adc
and
jle
dec
pop
mov
jg
jnp
sbb
out
jb
jb
imull
adc
cmp
mov
cmp
xor
lods
xor
fisttps
or
stos
push
std
dec
dec
dec
cmp
fs
adc
mov
out
stos
mov
mov
cld
push
addl
repnz
and
in
push
jne
sarl
pushf
popa
push
push
sub
mov
aaa
pavgw
imul
inc
jae
je
push
cmc
bound
outsl
in
aam
pop
in
or
cmpsb
mov
int
dec
out
xor
test
push
in
adc
cmp
push
and
rcll
xchg
dec
push
inc
pop
xor
cmpsl
repz
and
cmp
mov
jnp
aad
or
xor
lahf
aas
sti
out
movlhps
cmp
inc
sub
dec
hlt
sbb
push
sahf
icebp
arpl
lock
push
test
mov
jae
fnstcw
mov
pop
lock
sbb
fldcw
stos
xchg
xlat
mov
cmp
data16
mov
mov
jl
hlt
into
xchg
das
gs
sbb
iret
mov
inc
lcall
mov
push
jecxz,pn
imul
xor
pop
stos
sbb
cltd
lods
push
pop
js
lcall
adc
hlt
in
jp,pn
mov
xchg
push
cmp
fcmovu
cmc
js
cs
jmp
xchg
xchg
dec
stos
or
adc
imul
push
dec
clc
lods
mov
fsubrp
mov
fcomps
xor
pop
lods
lock
cmp
lds
dec
ljmp
in
mov
dec
setge
jae
in
and
popa
mul
fidivl
lods
out
push
and
clc
xor
call
inc
ficoms
mov
add
push
jp
jecxz
and
adc
out
cmp
or
jno
jl
nop
pop
lea
aad
jge
jns
int
xchg
xchg
cmp
push
sti
mov
mov
mov
push
daa
pop
rcr
mov
dec
jge
sub
mov
mov
mov
rorl
testl
or
push
loopne
cmp
xlat
xor
sbb
or
cmpsb
mov
daa
xchg
push
shll
clc
mov
pop
adc
inc
pop
outsl
adc
xchg
test
xchg
fxch
shll
push
mov
fistpll
push
pop
cmc
and
test
fisttps
aas
gs
pop
inc
dec
pop
pushf
sbb
cmp
orl
push
rep
sarb
rclb
sahf
imul
cmpsb
int3
pop
lret
aam
jae
pop
stc
cmp
int3
jns
adc
aaa
or
dec
pop
mov
shrl
out
mov
lea
mov
arpl
fistpll
rol
loopne
inc
shlb
lahf
es
jmp
outsl
mov
sbb
xchg
insb
xor
sbb
shlb
ficoms
dec
or
add
mov
fistl
add
jge
out
popa
rcrb
sbb
sbb
mov
add
sbb
test
repnz
call
jns
fs
insl
sub
lea
mov
nop
scas
sub
je
sahf
dec
out
negb
add
out
push
xchg
iret
jmp
sub
popl
cmp
and
shl
cmp
jl
jle
fdivrs
inc
inc
adc
outsb
pop
mov
inc
add
and
mov
notb
cmpsl
lret
leave
adc
lods
xchg
mov
fs
lret
xchg
inc
das
push
pop
mov
mov
outsl
outsl
sub
repnz
jge
adc
adc
mov
pop
xor
gs
cmp
sbb
xor
js
out
or
es
or
cmp
adc
in
mov
xchg
jnp
sub
push
add
push
and
ljmp
push
ret
jle
mov
xor
jno
lcall
mov
push
adc
push
jbe
daa
sub
sub
jg
ret
out
in
stos
xor
xchg
pop
scas
mov
xor
cltd
pop
xor
sbb
or
imul
ds
insb
neg
xchg
hlt
lock
pop
jecxz
or
pop
sbb
sbb
xchg
daa
or
inc
add
adc
int3
mov
pop
outsl
cwtl
dec
xchg
dec
and
ret
push
or
fistpll
outsl
iret
dec
insl
ljmp
lods
mov
mov
shll
add
lahf
fidivl
in
cmp
jne
in
inc
lahf
push
add
push
add
cmp
jb
cmpsb
imull
or
out
arpl
in
imul
push
or
sub
mov
jb
mov
push
mov
les
pop
cmpsb
int
lret
or
decl
push
movsb
jecxz
pop
add
or
data16
fistl
jns
sbb
insb
mov
outsl
pmaxsw
xchg
jno
cmpsb
pop
in
cmpsl
xor
push
shrb
cmpsl
or
jae
sub
cmpsl
jo
stos
movsb
lret
imul
adc
loope
aad
out
mov
mov
sbb
inc
push
arpl
test
mov
xchg
out
arpl
inc
jg
js
es
and
test
mov
cmp
rorl
leave
pop
add
xor
cmp
jbe
adcb
lds
jmp
mov
ja
mov
xchg
fstps
mov
and
in
dec
enter
ret
xor
mov
cmp
lea
xor
jo
mov
jecxz
adc
imul
cwtl
negb
mov
stos
pop
or
or
jnp
dec
jp
xor
sbb
add
int
icebp
int3
add
lock
jge
lret
pop
mov
loope
ss
dec
cmpsl
add
in
stos
andl
nop
lahf
hlt
lock
ljmp
ret
mov
insl
xor
mov
lahf
or
scas
xor
dec
fs
xor
jno
mov
hlt
stc
xor
inc
mov
xor
sbb
push
dec
pop
rorb
mov
dec
add
mov
stos
adc
or
mov
jle
mov
repnz
cmp
jbe
les
daa
inc
pop
mov
out
dec
fs
loope
dec
pop
jl
jno
or
mov
mov
and
shlb
fmull
push
xchg
inc
sarl
daa
mov
mov
scas
in
mov
pop
ja
test
test
inc
pop
fdivs
scas
cmp
outsl
out
push
dec
cmp
push
push
lahf
nop
fnstsw
addl
xlat
dec
xchg
fcompl
imul
fcompl
out
pusha
rorl
jno
nop
jmp
cs
xchg
call
add
popf
and
jle
cmpsb
mov
xor
cltd
cmp
imul
or
inc
mov
xchg
rolb
inc
or
or
cwtl
fnsave
dec
push
stos
jecxz
lds
iret
or
icebp
pop
sbb
in
mov
negb
arpl
push
jg
mov
mov
xchg
push
ljmp
aas
mov
mov
ljmp
icebp
or
dec
sahf
pop
adc
ret
fidivl
dec
lock
je
aaa
cmp
push
fcompl
dec
mov
jne
pop
lock
mov
mov
add
and
lcall
jbe
fs
xor
inc
addl
mov
in
sub
xchg
dec
js
outsb
lret
pusha
sub
or
aad
xchg
inc
loopne
adc
or
add
cmp
xor
sbb
addb
cmp
fiadds
jbe
xchg
imul
add
xchg
in
scas
inc
data16
jmp
push
adc
xchg
mov
cmp
inc
pop
pop
jge
clc
or
xchg
fcmovnb
scas
mov
fnstcw
dec
sbb
fadd
das
sahf
sub
lcall
adc
push
test
sub
inc
xor
xor
jecxz
push
or
pop
aam
xchg
push
imul
mov
xor
adc
stos
jbe
mov
xchg
mov
mov
dec
outsl
cmp
mov
arpl
dec
nop
and
lock
push
xchg
xchg
xchg
push
xchg
xchg
mov
in
jns
ret
mov
add
cmp
pop
mov
cwtl
dec
inc
jle
in
xlat
movsl
sub
or
inc
sbb
out
xchg
dec
mov
shrl
in
aad
sti
pop
push
adc
aaa
fmull
lods
mov
in
cmpsl
rorl
loopne
fildll
ret
cmpsl
in
pop
adc
xor
rorb
popa
cmp
mov
cmp
jbe
sub
nop
ret
pop
data16
fbld
mull
dec
leave
inc
mov
test
lock
mov
inc
sbb
cmc
int3
xchg
mov
xchg
add
sbb
sarb
sahf
cmp
xor
ret
pop
icebp
popf
inc
cli
sti
dec
jmp
lcall
xchg
sarb
mov
mov
icebp
push
shlb
movsb
clc
pop
inc
jne
push
lods
iret
jecxz
leave
insl
dec
mull
mov
xchg
adc
pusha
pop
into
andl
pop
cmp
mov
ds
movsb
cmp
int3
sbb
adc
pop
loop
adc
jns
push
test
cmp
insl
stos
xchg
stc
stos
cmp
test
lds
std
pushf
xor
and
in
inc
inc
pusha
mov
pop
mov
jg
and
or
mov
repnz
pop
lahf
ret
and
subb
pop
lret
xchg
dec
xchg
ret
pop
mov
jge
adc
inc
mov
iret
push
mov
push
cmpsl
outsb
xchg
rcrl
fnstcw
push
movsb
mov
mov
scas
test
shrb
mov
std
js
xor
pop
xchg
inc
lods
dec
push
xchg
sbb
mov
dec
cmpl
enter
lea
leave
xchg
xchg
cmp
scas
and
sbb
cmp
jae
sti
fdivs
loop
scas
mov
repnz
or
fwait
mov
fsubrl
cmp
mov
cwtl
mov
sbb
adc
in
out
mov
push
ss
add
enter
arpl
jae
inc
scas
push
fsubr
xor
mov
inc
imul
push
les
int3
add
imul
inc
cld
jbe
inc
das
data16
or
xchg
movl
idivb
push
mov
daa
lea
xchg
sub
iret
outsb
mov
ja
xchg
neg
decb
adc
lret
mov
dec
andl
mov
xchg
mov
loopne
cmpb
fisttpll
cltd
negb
xorb
lods
dec
imul
imul
shll
sub
data16
std
notl
scas
in
test
cmpsb
data16
fwait
fwait
aaa
jp
lahf
mov
dec
sub
dec
mov
pop
and
subl
outsb
scas
cmpsb
jo
lods
cwtl
mov
pop
or
or
leave
mov
xor
mov
mov
jno
fsubl
sbb
scas
add
out
aad
imul
addr16
and
xor
das
or
inc
xor
adc
mov
sub
ljmp
mov
popa
cmpsb
ret
pmaxub
daa
inc
push
je
test
inc
jb
xor
xor
cmp
sbb
add
stc
push
pop
mov
mov
pop
cmp
daa
xchg
ret
cmp
cmp
inc
in
clc
inc
movsl
mov
mov
mov
pop
movsb
cmp
sbb
xchg
pop
lcall
xor
in
imul
rcll
xor
jle
cmp
push
int
ret
or
shll
sbb
dec
adc
push
xchg
lret
mov
test
mov
jp
mov
dec
pop
scas
test
frstor
dec
xor
add
push
cmp
int
cltd
out
add
jmp
push
out
ret
incl
mov
pop
and
sbb
cmp
stos
cmp
leave
clc
inc
imul
in
push
jo
insl
popa
and
sbb
jle
mov
xchg
lcall
jae
pusha
add
in
mov
dec
sub
sbb
rorw
cmp
ss
jae
jns
sbb
rclb
push
and
sbb
cli
es
scas
iret
mov
cld
xor
inc
push
xor
loop
inc
xchg
test
lock
int
and
inc
cmp
fmuls
scas
hlt
rcrl
orl
jno
lea
inc
dec
dec
pop
filds
and
lods
push
push
mov
cmpsl
mov
daa
and
pop
aaa
xchg
xor
ss
aam
pop
dec
imul
ret
mov
cmp
jp
lds
lock
mov
dec
aas
movsb
dec
nop
and
dec
dec
mov
imul
pop
idivl
jne
mov
addr16
nop
pop
or
int
xchg
and
sub
stc
inc
mov
push
repnz
out
lds
outsl
imul
pop
pop
adc
sbb
lret
or
jecxz
sub
arpl
pop
sub
inc
sbb
or
repz
rcrl
push
rorb
jae
test
cmp
mov
sub
add
add
pushf
das
jnp
std
cmp
test
movsb
adc
push
lcall
xchg
rcl
jbe
add
xlat
xor
cmc
int
call
xchg
fnsave
push
out
xor
pop
sub
push
rclb
push
js
and
xor
mov
mov
adc
out
pusha
mov
fistps
push
and
rcrb
xor
cmp
cmpsl
inc
adc
or
loop
and
jge
sahf
dec
inc
push
lods
mov
mov
into
clc
add
into
add
mov
xchg
jo
add
popl
jae
xlat
int3
xor
add
aaa
fistl
imul
mov
push
fistpl
insb
sub
test
xchg
xor
scas
pop
mov
arpl
mov
sbb
add
push
aaa
mov
ljmp
jp
mov
jae
jo
lahf
outsb
pushf
and
sbb
and
lea
in
daa
lahf
rcl
jnp
ljmp
push
mov
xchg
sub
or
loopne
stos
jecxz
rorl
or
sbb
add
xchg
sbb
and
pop
test
outsb
lret
fnstenv
sbb
xchg
or
aam
dec
xchg
stc
mov
inc
daa
pop
inc
mov
fdivs
jns
and
xor
xchg
lds
and
sahf
jno
sbb
testb
sarb
lahf
dec
mov
mov
movsl
jl
and
adc
lcall
mov
pop
jp
lret
ja
cmc
lods
mov
jns
rcl
adc
pop
pop
fisubs
cbtw
es
shlb
jmp
stos
in
out
add
int3
das
push
inc
loop
outsl
mov
pop
adc
and
xchg
mov
ret
lea
and
sti
mov
adc
clc
sub
scas
inc
xchg
mov
push
jo
add
jecxz
push
fdivs
xor
inc
stos
jb
mov
and
adc
lahf
clc
adc
repnz
sub
jbe
pop
push
push
pop
or
push
sub
inc
outsb
mov
aas
xchg
sbb
mov
or
aam
cmp
test
xor
pop
inc
outsb
mov
cmc
jno
adc
ds
outsl
lds
repz
xor
xlat
sub
dec
xor
adc
mov
xchg
rcrl
repz
data16
mov
or
push
stos
cli
lcall
fcoml
mov
and
movsb
arpl
in
mov
sub
cmp
or
das
jbe
cmp
cmp
jl
fadd
sub
jbe
out
lahf
or
xor
ret
mov
jge
daa
push
xor
les
rep
call
xor
jb
mov
pop
dec
push
fistl
aam
fmull
ljmp
ret
cmp
mov
jle
int
jmp
aam
out
and
aas
push
mov
leave
and
stc
sub
aas
pop
test
add
cli
or
idivl
jle
sub
adc
lods
call
xchg
cmp
stos
or
orb
pop
fcoml
inc
or
out
or
je
jle
les
call
mov
test
mov
xor
movsl
jns
fildll
sub
xchg
mov
ja
ds
inc
shlb
jb
fbstp
jae
int3
xchg
sub
lods
mov
push
testl
mov
fists
push
stos
cmc
adc
push
jecxz
sti
popf
in
mov
push
ljmp
pop
and
mov
jmp
adc
mov
jae
cmpl
aad
cmp
pop
neg
jne
rorl
and
or
xchg
jg
xchg
xchg
scas
push
nop
daa
lcall
das
jl
loopne
das
push
sbb
stc
fildll
pop
jne
and
or
xor
lret
sbb
ret
out
inc
aaa
cmp
xchg
movl
add
clc
ja
and
jae
iret
inc
inc
fbld
test
mov
leave
mov
das
pop
adc
lea
icebp
push
loop
bnd
popf
and
pop
test
loopne
sbb
dec
mov
jp
inc
and
imul
inc
or
pop
ret
mov
push
aad
jne
std
sbb
mov
adc
ret
and
add
xor
clc
das
ret
in
mov
imull
mov
dec
adc
and
mov
cmpsb
xor
leave
mov
movb
testl
sahf
xchg
push
pushf
sahf
and
repnz
popa
mov
ret
subl
xchg
and
sbb
inc
insb
mov
jge
mov
push
je
clc
mov
and
loopw
push
cltd
and
jg
ljmp
andb
mov
cltd
loopne
pminub
pop
imul
sbb
dec
imul
sub
sti
mov
ljmp
xchg
mov
fbstp
inc
loop
ds
mov
leave
mov
pop
loopne
dec
jns
cmc
jmp
loop
idivb
xor
std
cs
test
arpl
xlat
repz
adc
sub
add
add
call
orl
jl
movsl
ror
xchg
je,pn
xor
stc
bound
fwait
aaa
mov
push
rorl
es
sbb
cmp
loopne
fsubl
divl
popa
fisttps
jo
lods
mov
mov
adc
ss
addr16
or
cmp
call
test
mov
add
add
std
push
jnp
sbbb
pop
push
ljmp
jne
mov
mov
lock
adc
or
out
repnz
movsb
mov
adc
loope
mov
nop
std
cmp
mov
inc
sarb
ljmp
xor
jbe
jge
xor
shll
add
and
xchg
fstl
add
mov
push
mov
sub
adc
inc
lea
xchg
iret
lahf
in
push
scas
adc
gs
push
fbstp
cltd
addl
xor
jno
std
xchg
imul
repz
sahf
cmpsb
iret
xchg
mov
cmp
pop
pop
and
sub
push
cwtl
mov
loope
add
xchg
sbb
stc
aas
xor
jp
lcall
mov
daa
shlb
sarb
push
mov
mov
ret
in
add
div
stos
jmp
mov
cmpsb
or
adc
loope
add
lods
xchg
clc
jle
insb
out
xchg
int3
cmp
es
add
fistpl
pop
cmp
movb
ret
cmovno
add
sahf
ret
pop
dec
or
push
les
xor
js
push
dec
and
js
xchg
xchg
imul
loopne
js
jge
cmp
xchg
lahf
insl
lcall
addr16
pop
jns
gs
loope
mov
mov
mov
sahf
mov
mov
xchg
ds
imul
cwtl
and
sub
xchg
dec
insl
dec
imul
pop
dec
jmp
xchg
jl
pop
inc
mov
lahf
rcr
push
decb
push
inc
outsl
rclb
nop
clc
movsl
mov
adc
test
adc
pop
dec
lahf
iret
mov
xor
test
loop
lret
push
mov
pop
pop
in
inc
pop
cltd
js
jb
aam
add
xor
ja
call
or
cvtdq2ps
or
push
jl
jp
cs
sub
clc
push
jl
orl
popa
insl
push
dec
mov
pop
aas
sbb
sbb
jg
int
or
dec
add
js
fisubl
dec
add
jmp
icebp
pusha
ljmp
xchg
cltd
mov
and
cmpsb
sbb
iret
push
ss
adc
sbb
mov
std
stc
sahf
mov
xor
das
jl
fiadds
cs
sahf
movsl
dec
sbb
dec
in
push
sbb
dec
push
cmpsl
sub
nop
out
push
call
xchg
aaa
pop
xchg
mov
mov
aaa
js
pop
cmp
jp
shl
jmp
xor
or
mov
loop
fiadds
push
dec
stos
push
imul
dec
inc
push
jb
inc
jne
sub
lahf
mov
adc
nop
dec
xchg
lcall
scas
sbb
push
repnz
addr16
dec
inc
pop
movb
out
cmp
mov
pop
push
test
xlat
fiaddl
mov
jmp
aam
dec
pushf
sbb
ja
in
imul
in
push
fildll
sub
and
out
jns
movsl
dec
xor
add
out
xchg
testl
js
push
fdivl
xlat
dec
popa
or
pusha
pop
or
shrb
leave
pushf
movsl
pop
and
add
xchg
insb
sti
pop
in
enter
leave
pop
inc
out
adcl
adc
lret
div
roll
jo
xor
pop
or
xor
push
xlat
xor
cltd
pop
loope
mov
aam
data16
adc
sarl
jmp
adc
ds
and
lahf
fisubl
sub
ss
mov
sub
push
stos
xchg
push
int3
add
mov
lds
mov
pop
or
movsb
dec
mov
mov
fistpl
addr16
dec
stos
cwtl
jle
aaa
insl
call
and
mov
test
in
loop
in
aam
bound
push
fdiv
xor
add
popa
xchg
imull
mov
pusha
push
xlat
stc
pop
ret
jb
jp
mov
mov
xchg
sub
aaa
and
and
inc
aaa
or
das
repnz
rorb
les
jo
arpl
xchg
in
jg
mov
jns
dec
mov
out
cmc
mov
or
sbb
add
inc
inc
movsl
test
ja
incl
add
std
aam
dec
xchg
or
iret
jmp
rcrb
int
adc
xchg
fldcw
inc
data16
adc
xor
jbe
or
movsb
jle
dec
adc
les
mov
mov
ljmp
pop
lods
and
int3
scas
xchg
cli
push
addr16
cli
cmp
xchg
sub
loop
mov
daa
bound
xchg
lods
pop
pop
sub
stos
and
out
adc
orb
stos
lret
les
punpckhwd
jecxz
repz
dec
cmp
xor
in
inc
leave
insb
add
adc
in
jg
lahf
add
ljmp
ljmp
xor
jne
aas
ds
mov
xor
pop
sbb
jnp
fistpl
jg
push
fldenv
pop
mov
lea
fiaddl
je
test
test
addr16
add
inc
push
or
lahf
rol
push
push
jl
and
in
push
decl
sub
jl
cmp
into
pusha
cmp
push
in
xchg
shl
gs
jne
data16
sub
ss
stc
jns
sahf
mov
and
icebp
in
push
adc
pop
push
and
movsl
out
lcall
nop
addr16
lea
movsl
pop
push
adc
aas
dec
fcomp
imul
jne
push
negl
hlt
adc
jb
es
jb
and
push
jns
pop
jno
mov
ret
orb
push
into
jmp
test
jns
fnstenv
cs
fprem1
outsl
daa
in
stos
shll
cmp
addr16
jecxz
mulb
jne
shl
fidivrs
loopne
cmp
ss
fiadds
xor
mov
jmp
jae
out
in
ret
jp
fwait
sbb
pop
ds
add
cltd
xchg
adc
mov
loop
cmp
outsb
pop
bound
ss
popf
dec
ljmp
xchg
sub
lock
ds
aas
scas
lret
sub
and
inc
jg
xchg
inc
jns
scas
aaa
aaa
or
xchg
fs
dec
mov
push
or
cmpsb
dec
xor
mov
cld
mov
fucomp
push
xor
daa
jmp
clc
mov
fs
mov
jecxz
add
rcrb
repz
fs
pmullw
push
sbb
and
in
fwait
jbe
jno
adc
int3
dec
add
sahf
cmp
mov
inc
mov
mov
inc
adc
into
xchg
mov
into
out
es
add
cmp
and
je
fsub
nop
mov
movsb
sub
lcall
and
scas
push
test
in
shll
push
add
not
inc
enter
mov
addr16
jp
sub
cmp
loopne
rolb
and
sub
test
and
pop
imul
cmp
mov
cmp
out
mov
out
mov
pop
inc
xlat
in
dec
adc
xchg
cmp
decb
push
movsl
nop
imul
lods
fdecstp
or
push
or
mov
cmp
int
fsubs
call
jnp
mov
dec
and
std
pop
daa
xor
pop
fldcw
adc
sbb
sarb
add
cmp
into
test
das
fwait
mov
xchg
shrd
loop
jl
mov
pop
cltd
jle
dec
lahf
lods
stos
xor
hlt
and
push
mov
and
loop
test
gs
inc
call
hlt
pop
jb
rcl
sub
cmpsl
pop
dec
and
into
ret
jle
adc
xchg
mov
dec
aad
ficoml
iret
outsb
into
fwait
or
push
xor
mov
loopne
xchg
xor
mov
pop
push
xor
sbb
sbb
jae
inc
pop
aaa
jnp
out
fmul
xchg
fidivl
sub
les
popf
sbb
jg
sub
lods
jb
jp
xchg
jcxz
sub
jge
mov
fcmovu
cmpsl
jns
ror
mov
orl
testl
sarb
adc
adc
jnp
pop
push
rorl
es
mov
es
outsl
push
outsl
jle
clc
lahf
insl
scas
jecxz
lds
gs
cs
mov
ficoml
push
and
jne
lcall
mov
cli
imull
clc
lods
iret
inc
fucomp
cmp
adc
inc
or
pop
ja
push
mov
aad
shr
cmpsb
xchg
mov
and
ss
cmpb
xchg
sbb
inc
xchg
jo
mov
add
jmp
fstpt
in
mov
int3
rcrb
cmpsb
mov
push
test
inc
test
mov
insb
out
mov
roll
negb
ja
aaa
jb
cltd
int3
mov
add
inc
enter
sub
jp
aaa
clts
shlb
mov
stos
ud2
mov
test
pushf
pop
fldl
cltd
clc
jnp
je
imul
les
fcoml
bound
push
pop
iret
aaa
or
imul
frstor
js
xchg
mov
pusha
mov
cs
in
push
pop
loop
adc
pop
call
add
pop
jg
dec
js
das
sbb
ljmp
mov
mov
icebp
fs
add
xor
push
fnstcw
fisttpl
out
mov
lods
incl
jmp
xchg
jmp
test
xor
dec
imull
pop
lods
mov
into
scas
in
daa
xor
push
and
mov
jle
push
mov
imul
cltd
je
mov
push
cld
or
daa
rclb
aam
lods
pop
sub
sbb
mov
rolb
push
and
pop
clc
les
lods
popa
loopne
cwtl
pop
ja
adc
xchg
cmpsb
jnp
js
scas
cmp
cmp
mov
lods
in
ds
dec
jb
mov
add
add
dec
in
addr16
push
das
repnz
and
add
mov
jnp
pop
sub
xchg
cld
cltd
pusha
insl
sub
xchg
cmp
jecxz
ss
pushf
mov
test
mov
pop
cmp
test
mov
repz
cmp
stc
jbe
out
fistps
in
aad
jno
mov
xchg
shrl
mov
je
lods
xor
xor
push
rcll
out
bound
clc
xor
loopne
or
sbb
pop
aad
in
je
data16
xchg
inc
add
adc
xor
test
lcall
adc
cmp
fldl
push
pop
lds
adc
inc
in
cmp
ss
xlat
xor
cmpsb
ret
imul
inc
inc
cli
roll
test
stos
and
mov
inc
inc
outsb
mov
sub
push
jb
test
icebp
pop
ds
sbb
jmp
rclb
jb
mov
lea
and
mov
inc
push
movsl
xor
in
hlt
pop
shll
fwait
std
fstps
loop
push
sub
les
or
pop
scas
add
repz
xor
jecxz
mov
inc
sub
xchg
push
divps
push
enter
ret
scas
xor
xchg
stc
xchg
loopne
fsubs
lret
xor
mov
mov
in
or
sbb
cmp
rclb
out
push
xchg
xchg
and
leave
mov
rclb
push
repz
dec
mov
int
sbb
ds
xor
andb
cld
roll
sbb
ljmp
cmpl
jns
nop
add
jmp
xchg
and
xchg
pop
leave
fcoms
testl
mov
xor
jb
pop
or
xchg
sub
cwtl
ja
jmp
leave
sbb
es
loop
loope
inc
add
adc
in
movsl
pop
int
sub
xor
jle
xor
adc
std
mov
mov
out
rcr
dec
xchg
loop
xor
jo
or
mov
rclb
sahf
cld
mull
mov
es
mov
lret
push
fldcw
jns
push
fstpl
popf
sti
or
sbb
vmovlps
bound
xor
and
test
je
int3
rcl
pop
mov
dec
sbb
scas
into
shld
cmpsb
mov
dec
ljmp
lret
sbb
pop
push
in
pop
idivb
dec
adc
js
inc
sahf
adc
fbld
and
push
push
mov
push
insl
jne
jge
xchg
data16
outsl
fldt
lods
outsl
out
and
aas
sbb
jl
les
cli
fistpl
lock
es
xchg
cmp
push
iret
stc
test
iret
daa
xor
icebp
or
lret
dec
hlt
jl
insl
notl
ljmp
pop
cmp
cmp
xor
sub
out
cmpsb
fiadds
add
xlat
and
lods
jmp
push
pushf
aam
repz
in
pop
cmp
jl
inc
add
sti
adc
lcall
andb
in
aam
xchg
jo
mov
jmp
andb
cmp
sbb
in
std
repnz
and
lods
adc
stos
sub
or
sbb
test
nop
mov
fwait
push
mov
fistpll
dec
les
push
mov
test
imul
out
mov
enter
and
pop
and
dec
scas
push
mov
out
push
add
xor
push
mov
sub
sbb
pop
imul
jp
or
mov
add
mov
jg
xchg
sbb
in
jno
out
inc
pushf
ds
xchg
out
mov
jbe
jmp
ret
lock
int3
sbb
std
bound
push
repnz
or
jmp
mov
cmp
inc
xor
in
jo
add
adc
sub
adc
adc
int
aaa
lods
add
pop
nop
data16
dec
aas
out
pop
aam
dec
pop
mov
in
call
dec
outsl
dec
mov
sti
sbb
mov
mov
adc
sbb
jnp
jnp
push
das
or
out
and
mov
cld
scas
das
loopne
addr16
xor
sbb
and
xchg
jns
mov
sbb
mov
add
sbb
dec
rorl
flds
lahf
inc
rcll
rolb
mov
push
add
push
or
das
test
ds
pop
or
ss
into
push
ficoml
xor
adc
pop
out
push
jge
rclb
mov
pop
sbb
pop
xor
mov
popf
sbb
push
cmp
stc
dec
ss
in
imul
loope
clc
or
hlt
inc
jge
mov
outsb
dec
mov
sbb
and
movsl
xchg
add
xchg
into
cmpsb
mov
sbb
inc
test
fildll
push
cvttps2pi
add
lods
mov
fs
ds
jl
cmc
jb
adc
je
mov
loop
bound
mov
mov
enter
jle
bound
jecxz
sub
adc
jae
pop
enter
jbe
test
insb
iret
lahf
xchg
aam
cmp
sbb
jae
lock
pusha
adcb
pop
mov
dec
cmp
xchg
jl
inc
sbb
sub
popa
jp
lods
iret
cmp
xlat
xchg
add
adc
lds
rcll
adc
pop
or
lods
outsb
jle
jmp
cmp
pop
fst
push
ss
adc
sbbl
pop
scas
adc
xchg
sarb
adc
loope
dec
icebp
sub
shl
mov
mov
inc
mov
dec
data16
rcrb
dec
add
cwtl
cmp
xor
fxam
and
fidivrs
jbe
inc
sub
pop
jmp
xor
pop
pop
iret
outsb
xchg
push
push
movsb
jmp
loope
lea
test
push
xor
xchg
pusha
fdiv
inc
pop
inc
jne,pn
stos
pop
lods
lahf
or
pop
dec
insl
cmpl
sbb
jle
pop
stos
addr16
aad
cwtl
lcall
or
sar
add
cltd
xchg
outsb
testb
test
xchg
daa
mov
pop
or
pushf
cmp
inc
and
addr16
add
int3
inc
mov
stc
ljmp
mov
xlat
insb
daa
push
ja
sub
test
stos
cli
xchg
pusha
loop
xchg
rclb
mov
ret
cmp
adc
dec
cmp
cmc
loope
imul
dec
cmpb
aas
jbe
mov
cli
add
fbstp
into
repz
into
stos
jle
bound
push
push
sbbb
enter
int3
push
into
cli
daa
pop
das
xchg
fstpt
or
sbb
adc
scas
loop
mov
inc
ljmp
out
pop
test
adc
int
push
push
clc
mov
mov
pop
cmp
call
dec
pusha
aad
push
mov
jns
adc
and
add
test
mov
push
jbe
and
orl
fisttpll
inc
cmc
pop
rcrl
jno,pn
adcb
or
cmc
sub
pop
add
sarb
je
pop
xchg
data16
and
inc
mov
jl
out
lahf
or
pusha
loopne
inc
nop
cmpsb
adc
mov
repz
adc
andps
xchg
mov
stos
das
pop
in
sete
int
std
fisubrl
out
jno
das
aas
mov
xor
push
inc
jae
sub
sbb
or
xor
neg
shll
cli
or
icebp
loopne
adc
jb
das
das
xor
out
arpl
adc
scas
roll
sbb
jne
push
dec
jne,pt
jbe
aas
mov
in
outsw
mov
xor
jle
mov
cmp
mov
scas
mov
dec
jb
cs
lods
loopne
inc
dec
cmp
out
cmp
ja
pop
lret
inc
fwait
dec
ret
inc
mov
js
cli
test
jo
push
dec
rorb
xchg
inc
stos
push
and
pop
dec
mov
jnp
test
in
insl
dec
mov
fdivrl
stos
cld
mov
mov
daa
mov
and
mov
dec
or
negl
adc
fst
loope
mov
imul
lds
loop
or
lea
and
sbbl
fbstp
mov
xchg
or
repnz
movsb
movsb
add
mov
dec
mov
dec
sbb
popa
mov
xor
mov
mov
ds
popa
xor
xchg
sub
mov
mov
inc
dec
rcll
mov
jae
sub
or
rclb
xchg
mov
jns
out
pop
add
stos
jge
jp
fwait
and
rcr
jmp
repz
int3
aam
leave
sub
enter
mov
xchg
sub
cltd
inc
push
jg
push
and
mov
mov
push
push
scas
dec
xor
int
pop
fdivrl
bound
enter
inc
aaa
addr16
bound
mov
jl
in
repnz
xchg
pop
iret
lods
xchg
jnp
sti
sub
push
cmc
jge
int3
stc
aam
daa
sub
or
pop
icebp
pop
xor
jbe
inc
sub
stos
or
incb
add
or
or
jl
imul
fisttps
fisttps
xor
lret
push
pop
shlb
jp
adc
and
lock
mov
push
mov
mov
mov
or
stc
inc
adc
outsl
add
jmp
inc
ja
int
mov
jge
lods
addr16
pop
fnstenv
push
sbb
jg
mov
scas
lods
movsl
push
dec
repnz
cmp
loop
push
in
add
push
pushf
call
inc
mov
in
pop
pop
dec
icebp
rolb
mov
sub
sub
int
jno
mov
in
in
daa
or
jecxz
dec
mov
jb
fcmovu
add
push
sbb
push
int
loope
jecxz
enter
outsb
and
es
inc
scas
push
faddl
inc
mov
ja
int3
add
stos
fmul
negl
rcr
sub
rcll
cmp
insb
pop
lahf
rcrl
sti
or
notb
cld
bound
xor
sbb
into
xchg
jno
lods
mov
or
dec
mov
pop
call
lock
das
jmp
mov
scas
mov
ret
sub
mov
or
loop
xchg
add
out
leave
or
pop
fnstsw
sub
add
mov
clc
add
sub
push
popa
nop
aas
cmp
mov
dec
jp
shrb
scas
push
mov
push
scas
out
xor
mov
sbb
jb
mov
cmpsl
test
fs
mov
xlat
popf
movsb
dec
cwtl
lods
push
inc
out
adc
aas
fdivrs
mov
and
jo
add
je
adc
mov
movsb
lahf
mov
cmc
inc
jnp
fstp
fnclex
mov
in
mov
pop
sub
mov
mov
push
sbbb
rorb
mov
loopne
and
xchg
cmp
or
inc
cmp
cli
inc
outsb
jns
push
mov
movsb
jo
repnz
xlat
hlt
add
ja
in
mov
pop
imul
dec
aam
sub
sbb
into
leave
les
jg
hlt
iret
insb
jecxz
xor
xchg
outsb
pop
mov
and
add
out
add
xchg
sbb
xchg
jns
pop
int3
mov
cld
xor
mov
test
ja
fwait
pop
test
sub
cmp
adc
cld
stc
dec
push
cltd
out
arpl
cmp
mov
mov
popa
and
dec
cltd
lcall
mov
mov
sub
cmpsb
push
jo
xchg
push
xchg
pop
adc
in
dec
or
cmp
adcb
fdivs
adc
inc
add
pop
jp
pop
int3
jg
jbe
in
or
inc
in
xchg
lcall
cmp
sbb
jp
jbe
sub
adc
dec
icebp
aaa
loopne
fidivl
pop
inc
mov
and
enter
in
repnz
orl
mov
fsubl
pop
jecxz
je
test
pop
decb
sbb
punpcklbw
icebp
lds
xlat
jg
mov
mov
leave
jnp
popf
cs
push
add
jne
aaa
movsl
or
in
ja
mov
sbb
in
call
loopne
mov
mov
hlt
in
xor
in
mov
push
cld
aaa
fs
jle
sbb
adc
adc
es
jbe
vmread
sub
scas
int
addb
cmp
pop
mov
addr16
ret
sbb
movsl
stos
push
jp
adcl
mov
dec
push
icebp
jb
push
cmp
inc
lods
jge
pop
lods
mov
dec
push
cli
out
mov
fbld
clc
inc
xchg
sbb
inc
enter
add
mov
mov
cmp
mov
loop
lahf
mov
sbb
adc
shll
sub
dec
shll
nop
xchg
test
mov
insl
sbb
aam
add
jmp
mov
add
adc
sub
adc
mov
stos
rcl
je
repnz
xchg
aam
shl
jle
add
jg
stos
dec
jnp
inc
inc
jecxz
and
xchg
repnz
flds
and
enter
andl
clc
mov
int
pop
lods
add
sub
lods
daa
fwait
fs
sub
ja
adc
call
jg
ror
cli
fld1
or
movsb
fwait
ret
and
mov
stos
addr16
add
sbb
aas
jb
mov
pop
daa
and
push
mov
fcomps
orb
xor
push
xchg
leave
dec
pushf
jno
in
jle
push
movsb
iret
sub
in
sbb
pushf
imul
mov
jle,pn
pop
lock
lret
pop
ds
lcall
gs
cmp
push
adc
xchg
inc
cmp
dec
sub
shr
out
fisubrs
cltd
fmulp
jmp
mov
movsb
dec
mov
cmp
outsb
leave
pop
sbb
sub
inc
mov
aaa
cmp
xchg
jnp
call
repz
fmuls
mov
movsb
test
xlat
mov
fdivrp
std
ja
push
cmpsb
dec
xor
gs
ljmp
mov
mov
pop
xchg
rolb
lds
adc
iret
pop
decl
je
mov
lea
insb
or
xchg
add
dec
push
clc
dec
and
ljmp
cwtl
jp
dec
in
aam
jmp
loopne
sarl
sub
stos
add
push
outsb
das
aas
mov
ds
sbb
hlt
mov
push
and
pop
sub
xchg
mov
xchg
les
mov
fs
cmp
and
xor
test
enter
mov
inc
pushl
sbb
cmp
flds
xchg
mov
inc
xchg
mov
std
xchg
xor
rorl
enter
out
sti
jge
dec
xchg
fnstsw
pop
jb
leave
loopne
mov
xchg
lcall
xchg
sub
bound
in
adc
repnz
jo
inc
aaa
mov
and
jecxz
adc
inc
sub
mov
xchg
xor
jl
mov
sbb
fnsave
mov
gs
xor
cmp
clc
dec
adc
popa
loope
lcall
xor
xor
xchg
inc
xchg
cmp
mov
lret
push
in
out
jo
cmp
test
lret
xchg
movsl
je
cmc
and
aad
pop
inc
xor
rcr
push
jecxz
ds
cmp
sub
fists
shrb
sub
cmpsb
lea
add
mov
dec
jbe
xlat
and
adc
aaa
outsb
sub
add
outsb
push
push
repz
cwtl
icebp
or
fwait
decl
imul
sbb
mov
jne
dec
sub
movsb
cmp
sbb
sub
daa
inc
sbb
in
jl
imul
dec
outsb
lcall
fsubrl
aad
dec
sbb
cmpsb
fcomps
stc
mov
xor
outsb
lahf
stc
jbe
inc
push
in
cltd
es
outsl
mov
xchg
out
sahf
xlat
xor
fsts
pushf
sarl
stc
scas
mov
inc
shll
in
pop
arpl
divb
popf
lahf
add
cmp
stos
mov
clc
cmc
sub
dec
mov
out
mov
cmp
jo
adc
inc
out
or
pop
test
lcall
out
mov
jbe
mov
mov
jle
flds
or
fs
rcr
insb
loopne
mov
jge
aas
nop
pop
jmp
aas
imul
xor
push
sub
xchg
aam
out
js
push
jl
adc
bound
push
leave
rcr
adc
in
pop
mov
dec
les
icebp
jne
sub
jecxz
and
cwtl
test
add
out
dec
pop
rorl
lret
rcll
xchg
outsb
pop
push
das
gs
sbb
divb
addr16
push
pop
push
sbb
adc
and
shll
push
inc
je
and
adc
cmp
sbb
idivb
and
mov
data16
addr16
mov
fisubrl
cmp
adc
jp
cmp
pop
mov
cmp
jp
cli
inc
das
sbb
int3
sub
andl
das
shl
jle
in
push
pushf
aaa
shll
jmp
in
mov
jmp
pop
xchg
jmp
push
scas
add
adc
out
jno
movsl
addr16
inc
mov
adc
das
mov
dec
divb
xchg
mov
imul
dec
xchg
add
sbb
pop
loop
jge
dec
decl
inc
sbb
test
test
jp
pop
or
cmpsl
outsb
ja
test
divl
in
sbb
fbld
jno
push
out
mov
mov
xor
addr16
sbb
and
lcall
imul
dec
pusha
test
fldcw
or
add
pop
push
lret
adc
bound
loopne
orl
int
jne
cmp
inc
or
push
pop
dec
jmp
int3
mov
movsb
inc
add
sbb
lret
jp
ljmp
fwait
test
mov
xor
mov
rcr
xlat
mov
mov
lock
shrb
lcall
xchg
repnz
mov
imul
popf
jg
stc
std
call
iret
flds
ret
gs
adc
imul
add
inc
pop
or
xchg
fistpll
loop
lret
jge
pop
jae
xlat
jbe
push
shlb
jp
pop
loope
jbe
and
or
enter
clc
addl
dec
add
pop
pop
cmp
cmp
dec
lret
hlt
cmp
pop
pop
push
lods
aad
sub
mov
dec
sbb
jno
pop
test
cwtl
fs
push
add
pushf
pop
nop
shr
or
ret
scas
and
int
ret
sub
int3
mov
fnstcw
sarl
daa
jne
fsubl
push
data16
rcrl
inc
mov
in
and
cs
test
out
popf
jmp
cmpsl
roll
imul
ret
mov
add
xchg
dec
rcr
jmp
or
inc
scas
mov
out
data16
cmpsl
inc
and
cwtl
cwtl
test
aas
fcomi
xor
clc
cmp
jns
mov
fnstsw
dec
jg
cwtl
or
mov
and
es
cmpsb
shrb
loopne
adc
add
push
lret
jns
fmuls
pusha
pop
and
int3
dec
mov
and
mov
sub
pusha
add
jg
movsl
and
pop
out
dec
lcall
push
popf
adc
or
in
lock
sbb
and
stos
jge
push
jle
push
hlt
lods
addr16
insl
imul
mov
ljmp
sbb
push
movsb
cmp
mov
cmp
out
cmp
add
addl
iret
lahf
sbb
or
mov
mov
lahf
aas
jb
xchg
scas
sub
nop
popa
movsl
ds
jbe
in
mov
pop
push
sub
ja
fwait
adc
or
sub
sbb
mov
gs
aam
sti
sbb
mov
nop
movsl
push
or
fwait
jp
sub
outsb
dec
fsubs
mov
out
imul
fcmovb
push
mov
sbb
dec
jecxz
xlat
divl
ljmp
into
push
decl
outsl
arpl
or
dec
mov
imul
repz
xchg
fsin
push
enter
out
jb
inc
xor
add
push
add
or
loope
popa
dec
inc
add
adc
pop
leave
push
fcmovb
dec
repz
cmp
ljmp
adc
or
dec
cli
fisttps
repnz
rorl
push
add
repnz
or
ja
and
jle
aas
jno
jp
sbb
andb
loop
cmp
inc
adc
jno
xchg
ficomps
out
lds
pop
cmpsl
orl
movsb
mov
mov
popf
jmp
int3
and
sub
mov
jge
mov
mov
cmp
inc
cltd
mov
or
pop
stos
aas
mov
push
sahf
cmpsl
fcoms
mov
push
adcl
adc
lods
jle
inc
scas
mov
and
xchg
adc
xor
xchg
shlb
lcall
daa
lock
rolb
sub
cmp
and
mov
mov
inc
leave
mov
or
mov
sub
ljmp
inc
dec
pop
cmc
pop
and
shrb
mov
gs
sahf
mov
popf
xchg
sti
xlat
cli
xchg
sbb
inc
jmp
in
push
dec
dec
or
jo
xor
mov
or
cmp
dec
push
stc
out
scas
sbb
mov
iret
faddl
lock
dec
sub
nop
mov
adc
subps
pop
add
shlb
or
push
insl
lret
pop
cs
dec
pusha
nop
xlat
jnp
xchg
adc
sub
add
and
jb
test
jmp
pop
fmuls
nop
jno
xchg
ja
repz
scas
cmp
dec
les
add
sub
mov
imull
push
out
cmp
call
pop
adc
daa
jg
das
cmc
lret
mov
mov
fldl
cmpsb
lods
pushf
and
hlt
dec
pop
sbb
mov
push
push
data16
in
mov
nop
push
dec
xchg
xchg
xor
xchg
sbb
push
aaa
je
add
data16
xchg
lcall
aam
imul
mov
and
dec
lret
jne
jmp
inc
negb
xchg
out
push
dec
mov
test
inc
daa
imul
pop
dec
inc
rclb
dec
jg
sbb
pop
addr16
sbb
js
cwtl
lahf
cli
lea
cmc
dec
lock
sbb
mov
dec
out
lds
jbe
fildll
mov
shlb
push
or
cli
flds
jbe
or
sbb
dec
sbb
cli
into
les
clc
ficoms
pusha
fsts
add
xlat
mov
inc
cmp
pop
sbb
scas
mov
push
jmp
pcmpeqw
testl
fs
xor
mov
dec
gs
fstl
adc
inc
int
add
add
pushf
stos
dec
xor
cmpsl
adc
and
test
lods
jle
out
jmp
xchg
scas
mov
or
mov
push
repz
insl
push
cmpsb
xchg
das
add
fs
hlt
imul
inc
int
jmp
and
push
and
mov
cld
dec
or
xchg
pushw
and
addl
dec
jge
pop
dec
adc
inc
aaa
or
bt
push
out
xchg
stos
scas
test
mov
xor
pop
jp
les
rolb
aaa
add
insl
loop
xchg
jg
pushf
or
js
mov
xchg
xchg
cli
cmp
dec
pop
mov
sahf
inc
je
ljmp
adc
mov
hlt
cli
cmp
in
mov
add
cmp
fdivs
cwtl
ljmp
leave
into
xor
add
or
xorl
fidivrs
lcall
and
jle
sub
pop
out
testl
push
enter
push
xorb
hlt
jb
dec
pop
cmovle
sbb
or
and
scas
lods
mov
push
push
mov
dec
pop
stos
in
push
mov
pop
jno
or
testl
xor
leave
je
fsubrp
cmp
arpl
mov
dec
push
in
push
jge
and
insl
fistpl
jg
dec
mov
into
out
data16
inc
and
jo
je
insl
mov
sub
pop
cli
lock
pop
popa
das
or
push
mov
pop
xor
mov
ret
test
or
sbb
push
jno
push
imul
stos
push
nop
jle
pusha
inc
add
mov
popf
stc
push
jbe
sbb
hlt
in
mov
pop
adc
jno
jge
inc
xor
and
xchg
push
inc
and
jl
int3
test
je
movsl
mov
mov
jmp
mov
lahf
or
lahf
fcmove
pop
or
test
xor
ja
rorb
stos
sbb
add
out
icebp
add
fwait
outsl
fistpl
es
mov
push
cmpsl
lock
mov
stos
test
mov
add
cmpsl
pop
ja
xor
out
int3
inc
mov
mov
or
xor
test
sub
jbe
mov
dec
pop
mov
cld
imul
cmpsb
xchg
test
xor
and
es
xchg
aaa
test
sbb
cs
in
add
add
enter
mov
mov
call
ljmp
enter
es
scas
and
cmpsl
xchg
scas
xlat
dec
test
xor
out
lahf
pop
sbb
cmpsl
icebp
xchg
push
sub
fbstp
fistpll
jno
push
cmp
movlhps
dec
es
aas
popa
aaa
ds
andl
insb
pop
xor
mov
cmp
sbb
jns
xor
cli
cld
dec
mov
add
outsl
out
addl
lods
sbb
push
cmp
pop
sub
jge
cmc
rcrb
aam
push
fisubrl
push
jg
and
jb
sbb
cmp
loop
sbb
mov
dec
jnp
pop
aaa
jle
add
pop
jp
insb
in
jae
bound
fstl
adc
push
xchg
lea
fstcw
push
inc
int3
mov
pop
bound
dec
lods
pop
fldt
sarb
mov
out
push
leave
jb
mov
inc
inc
mov
cmpsl
xchg
adc
xorb
movsb
jnp
push
hlt
decb
push
gs
loop
repz
jp
imul
stos
and
fsubr
inc
xor
sbb
jle
push
std
incl
jne
outsl
xor
inc
jp
or
push
sub
inc
mov
and
jnp
lret
add
adc
sbb
mov
pop
jecxz
jge
pushl
push
rcr
out
xchg
cmc
pop
lea
pop
enter
sbb
sbb
dec
out
popf
pop
or
testl
xchg
fstps
addr16
sahf
sub
xor
pusha
ret
es
lds
imul
or
data16
nop
icebp
sub
out
aas
arpl
push
lea
rorb
shlb
popf
sub
push
cmpl
cmp
inc
inc
sbb
insl
cmp
mov
or
jmp
mov
adc
jae
xchg
adc
test
fmuls
mov
daa
xor
sub
fdivrp
stos
sar
rolb
jnp
push
lret
popl
ret
dec
lret
xor
sub
sarl
sub
bound
icebp
dec
and
dec
jecxz
sbb
sub
dec
mov
sub
rcrb
shll
int3
fsubr
rclb
push
and
xchg
iret
xchg
in
sahf
lahf
or
jb
in
push
cmp
dec
inc
out
cmp
inc
dec
leave
mov
push
inc
jno
lret
mov
xchg
mov
outsb
sub
loopne
add
mov
mov
pushl
je
push
sub
nop
je
scas
inc
lods
jg
in
scas
je
movsb
je
mov
lret
add
decb
push
mov
fs
mov
jae
cs
xlat
or
aad
jb
jns
sub
mov
xchg
gs
xchg
cmpsb
mov
or
ljmp
adc
cltd
mov
add
pop
push
lds
mov
repz
or
arpl
pop
ja
and
pop
pusha
clc
pop
add
push
ret
xchg
mov
sbb
xor
mov
or
scas
mov
cmpl
iret
dec
xor
out
insb
or
mov
stos
addl
cld
aas
ljmp
repz
and
ss
cmp
mov
cmpsl
rolb
aas
and
loopne
mov
mov
scas
gs
aas
jno
mov
mov
call
dec
adc
xor
shl
mov
xchg
cs
inc
aad
scas
push
jnp
push
inc
adc
cli
inc
jl
ret
int
push
scas
jge
cmp
mov
dec
test
lea
mov
cmp
jo
lahf
push
mov
jbe
add
rcr
shll
sbb
sub
adc
loope
paddw
das
into
or
xchg
add
xchg
sti
mov
push
fidivrl
pop
imul
push
push
in
mov
jp
or
jg
lret
sub
or
ja
out
data16
adc
aas
mov
xchg
scas
dec
imul
xchg
iret
scas
push
pop
xlat
fistps
loop
push
cmp
xchg
dec
lds
dec
inc
fs
xor
mov
sbb
out
jbe
je
movsl
xchg
push
adc
adc
add
outsl
mov
lock
faddp
jmp
pushf
lret
cli
into
jae
pop
loop
pushf
lods
and
pop
ja
cmp
into
add
mov
mov
pop
pop
rcll
fs
bound
loopne
fldl
mov
mov
lret
xchg
sbb
rorl
ja
ret
mov
xorl
fnsave
adc
imul
cmp
sub
jb
jge
jp
mov
pop
fbld
imul
test
pop
dec
xor
mov
sahf
dec
push
inc
fs
lcall
stos
int
or
sub
in
out
daa
pop
cltd
jne
arpl
push
push
xorl
pop
jbe
arpl
aad
xor
icebp
mov
mov
cmpsl
fisttpll
pushl
add
push
lock
jnp
roll
loop
scas
ret
test
jg
jmp
adc
or
add
imul
xchg
or
mov
mov
sahf
pusha
loop
call
jnp
mov
fldl
pop
dec
and
pop
sub
add
jae
lret
jge
mov
push
add
jns
movsl
out
mov
jg
in
enter
add
repnz
ja
sub
mov
test
xchg
cmp
mov
pusha
cs
sti
or
or
pop
pop
push
mov
outsl
pushf
arpl
sub
lea
pop
fstpt
push
sub
test
and
imul
les
sbb
adc
movsb
aad
std
das
mov
loop
push
enter
ja
nop
jb
jo
nop
jns
cmp
or
xchg
sub
push
into
xor
test
xorl
jge
lahf
xor
xor
inc
sbb
push
js
repz
cmp
in
aam
mov
in
jbe
sub
pop
xchg
adc
adcl
in
mov
imul
shll
call
push
xor
loop
outsb
stc
pop
jae
mov
dec
inc
nopl
mov
push
insb
xor
mov
sbb
xchg
push
mov
stos
out
sub
mov
add
imul
outsb
add
stos
jecxz
jnp
or
pop
icebp
jns
pop
in
push
inc
xlat
fsubr
clc
pop
mov
movsl
ss
jo
jae
lods
gs
pop
rcll
push
and
es
das
pop
and
xor
mov
mulb
aam
insl
loope
cmp
in
jecxz
mov
cmp
sub
stos
clc
lea
nop
stos
and
insl
push
add
es
add
push
mov
int
std
mov
mov
dec
sbb
insb
mov
push
scas
rcrb
mov
sub
icebp
cmc
dec
popa
mov
dec
xchg
or
inc
mov
sub
xor
daa
in
sub
icebp
xchg
push
sahf
ljmp
jmp
xchg
jo
or
mov
or
pop
scas
adc
inc
cmp
cli
cli
sub
bound
mov
int
movsb
fidivl
xorl
imul
arpl
pop
repz
mov
dec
fistpl
adc
cmp
ret
sub
int
xor
and
sti
fidivrl
sbb
lret
outsb
jmp
arpl
jp
mov
mov
test
xchg
mov
adc
cltd
ss
test
je
mov
jo
icebp
xchg
sub
scas
ss
shrl
subb
js
decl
repnz
pop
push
fldenv
ja
inc
xchg
notl
scas
push
scas
add
and
adc
jnp
dec
xlat
insl
mov
arpl
pop
jge
push
fs
jp
adc
andb
jecxz
test
push
inc
or
out
inc
nop
sub
dec
push
push
or
pop
adc
ljmp
xlat
jge
fnstcw
adc
sbb
repz
div
xchg
xchg
outsl
sbb
stos
fnsave
mov
xchg
test
sahf
int3
es
mov
test
out
jg
sub
jl
repz
dec
lds
insl
cli
and
ret
mov
sub
lods
rolb
cmp
leave
jecxz
mov
daa
mov
or
nop
test
ret
or
adc
sbb
xor
fistpll
js
jnp
mov
xchg
add
clc
orl
mov
pop
call
test
dec
int3
mov
xchg
pop
das
dec
xchg
adc
and
in
stc
adc
and
notb
jp
inc
pop
cltd
test
out
dec
pop
xor
cmp
mov
sahf
ja
dec
dec
cmp
add
or
dec
cmp
movsl
in
dec
mov
out
dec
les
out
orl
clc
mov
call
xor
icebp
out
adc
dec
xor
hlt
clc
lods
loopne
xchg
out
pop
test
push
bound
inc
fsubr
sbbb
sahf
add
fldl2t
and
mov
dec
mov
in
mov
aaa
adc
aad
lret
sub
inc
cli
sub
dec
test
push
mov
aas
add
pop
aas
dec
sbb
test
inc
fnstsw
mov
aas
cmp
lcall
insb
imul
in
inc
bound
cmpsl
mov
xchg
cld
jp
mov
jmp
andl
sbb
insb
xchg
mov
scas
jo
mov
jge
pop
add
or
sbb
adc
pop
sbb
dec
xlat
dec
mov
data16
es
sbb
sbb
sub
mov
lods
mov
or
cmpsl
iret
push
cmp
mov
loopne
xchg
xchg
data16
dec
xor
push
xchg
dec
mov
movsb
es
xor
repnz
xchg
es
in
pop
xchg
cmp
sbb
lret
out
xchg
sbb
int
add
xor
repz
sub
testb
je
push
and
iret
xor
jmp
add
mov
pushf
repnz
xor
xchg
sbb
popa
xor
adc
sub
xor
daa
pop
imul
sub
lret
add
mov
movb
imul
mov
pop
int3
jnp
sub
mov
xchg
push
sbb
insl
test
arpl
adcl
scas
or
xor
clc
in
mov
sbb
pop
dec
inc
lods
or
push
push
inc
xchg
cmp
jle
xchg
push
xchg
cmp
fcoml
fistpl
mov
mov
je
mov
push
push
testl
jmp
adc
daa
imul
nop
cwtl
mov
hlt
or
mov
ret
int
ja
mov
adc
fcoml
cmpsb
cmp
jmp
cli
push
cmpsb
cld
xchg
push
pop
jmp
push
enter
jle
xchg
jecxz
xchg
cmp
ret
mov
sbb
cmp
and
or
pmulhuw
das
xor
and
push
das
pop
pop
adc
bound
call
xor
and
cltd
jge
lods
or
xchg
xlat
dec
flds
or
xor
loope
cld
dec
push
sti
in
lods
repnz
and
push
dec
fs
and
lea
ds
mov
mov
inc
push
mov
pushf
adc
cmp
inc
dec
leave
or
loop
sbb
fcompl
jne
or
out
sbb
cmpsl
je
add
add
or
xlat
in
mov
mov
rorb
and
dec
std
sbb
in
xor
lods
outsl
or
inc
aaa
add
mov
cltd
je
push
push
push
xor
sbb
fisttps
add
nop
cmp
mov
popf
imull
lods
or
insb
push
push
ljmp
mov
inc
pusha
lret
fwait
cltd
mov
dec
push
and
andl
ret
repnz
lret
jl
pop
pop
and
stc
test
out
mov
xchg
dec
stos
ret
inc
adc
add
dec
cmp
cmp
push
push
cmp
inc
mov
sbb
call
aaa
adc
ret
mov
dec
push
lds
push
jmp
push
stos
lds
aas
mov
mov
test
bound
jb
sahf
or
add
mov
mov
or
loope
lret
mov
cmp
jne
add
inc
dec
jo
mov
mov
rcll
adc
add
push
pop
or
sub
cmpb
push
add
imul
stos
shrl
mov
dec
mov
push
pop
push
mov
ret
sbb
rcll
addb
stc
xor
jmp
inc
adc
cli
in
xchg
addr16
jl
test
sti
push
out
cmp
test
dec
aas
into
icebp
cmp
cli
xor
sub
adc
push
test
jnp
jmp
push
xchg
pop
outsl
lahf
in
into
das
shrl
rorb
fisttpl
out
mov
sub
test
cmp
movsb
and
fwait
mov
rcrl
sub
clc
and
call
mov
adc
xor
push
inc
insl
push
pushf
inc
mov
add
xchg
lret
xchg
arpl
dec
lret
outsl
fadd
inc
ret
jecxz
mov
jne
and
xor
pop
push
aaa
ret
test
ss
dec
popf
and
test
mov
jne
cmp
btsl
sbbb
into
sbb
mov
push
add
ror
aaa
mov
jp
push
hlt
jae
jecxz
inc
push
daa
int3
sbb
inc
mov
xchg
ret
xor
rolb
and
pop
adc
push
stos
mov
push
mov
xchg
nop
sahf
adc
out
aas
dec
xor
push
mov
jae
push
iret
ja
fisubl
jns
pop
cmc
push
data16
push
pop
mov
xor
mov
jns
ret
jo
mov
mov
in
pop
jno
sbb
dec
adc
clc
push
mov
dec
jge
ffree
enter
dec
pushf
push
push
lea
sub
mov
pop
sub
aas
roll
jbe
scas
fmuls
cmp
jbe
push
inc
out
sbb
xlat
xchg
stc
dec
out
pusha
xchg
xor
xor
jl
xchg
daa
fisttps
idivb
outsb
aam
data16
dec
mov
adc
dec
jns
and
clc
lds
mov
fstp
push
sbb
mov
mov
sub
sub
fs
scas
cwtl
adc
mov
sub
and
add
popf
cwtl
jmp
push
rcrb
out
fs
in
fsubs
lret
inc
ljmp
rcrl
adc
negl
push
and
jmp
sar
popf
or
cmp
inc
imul
cmp
repz
inc
push
jns
sub
cmp
inc
test
cmp
mov
xchg
mov
stos
dec
push
lcall
jns
stc
dec
scas
loopne
and
push
mov
in
cmp
repnz
push
ret
and
push
or
js
rolb
pop
out
jle
push
xor
loop
push
cmp
jns
insb
jb
push
jae
jg
aas
out
imul
imul
dec
and
lret
outsb
adc
cld
pop
fstpl
mov
adc
jno
and
lea
add
xchg
jle
xchg
xlat
jg
dec
je
xchg
cmp
fs
out
cltd
jmp
push
adc
or
aad
insb
push
nop
and
jmp
push
pusha
fsts
add
jno
movsl
cmp
mov
sbb
fs
stos
xor
add
outsb
or
insb
int3
xor
imul
das
cmp
dec
mov
jmp
adc
add
or
mov
sahf
xchg
mov
adc
andb
lea
inc
pop
dec
xchg
xchg
mov
in
sbb
jecxz
repz
xor
mov
subb
fstps
imul
xor
adc
push
pop
fstl
lods
int3
jne
push
in
pop
inc
push
jns
scas
lods
loop
loopne
daa
inc
les
or
test
push
pushf
aaa
push
jp
mov
insb
cld
or
push
or
add
pop
enter
loop
push
and
shll
test
dec
jmp
xchg
push
mov
push
xchg
test
repz
mov
cmp
pop
jno
inc
mov
dec
or
rcrl
push
mov
push
jle
sub
enter
cmpxchg
stos
lods
jp
mov
xor
movb
cmc
ds
aas
and
add
jns
sub
bound
stc
add
pop
lahf
test
inc
add
aad
das
shl
fstpt
fwait
jmp
pop
scas
and
push
adc
sub
repz
test
rclb
push
testl
ja
int
insb
and
loop
bound
add
fcmovnu
push
repnz
dec
mov
and
dec
cmc
and
sarl
movsb
sbb
push
or
ja
lret
jecxz
or
in
cmp
add
add
repz
pop
test
dec
lahf
push
and
popl
mov
clc
mov
and
mov
pop
jne
stos
ret
push
push
cmpsb
adc
cld
cli
pop
push
mov
sbb
inc
sub
test
lds
push
idivl
dec
inc
cmp
or
mov
mov
sbb
bndstx
pop
in
jecxz
mov
xorb
or
fimuls
addr16
mov
cmp
sbb
push
es
test
int3
shlb
push
push
push
nop
or
mov
inc
push
sub
mov
scas
jne
mov
clc
adc
inc
or
pop
jle
adc
lods
sbb
shl
cmp
dec
fistl
imul
rorb
stos
cs
or
popf
jnp
leave
push
call
and
fdivrp
or
rcrb
add
idiv
or
pop
mov
movsb
xchg
ljmp
push
movsl
or
sti
add
in
xorb
rcr
sbb
pushf
sarl
sub
hlt
xlat
lea
dec
pop
sahf
ret
adc
addr16
push
or
sbb
push
lcall
cwtl
fisttps
pop
arpl
pop
cmp
notl
push
jbe
pop
das
jmp
mov
popf
pop
cmp
xchg
dec
inc
sbb
in
and
mov
dec
jle
outsl
fadds
cld
insl
sbb
lods
iret
sbb
mov
repnz
shlb
into
sbb
ss
xor
xchg
mov
sub
pop
test
negl
sarl
jg
mov
pop
ret
bound
add
or
cmp
inc
dec
push
cmp
mov
add
lcall
cmp
outsl
push
sti
jl
jb
js
int3
test
insl
jo
fdivl
gs
add
inc
std
mov
bound
mov
jl
xchg
inc
and
filds
xor
or
outsl
fldcw
jns
icebp
mov
push
popa
push
sbb
pop
jns
in
cltd
not
cmp
mov
jl
popf
bound
mov
dec
push
inc
cmp
inc
and
or
shlb
int3
push
push
mov
xchg
push
add
js
push
jns
out
jo
fwait
pushf
or
sahf
sahf
cmp
and
or
notl
push
cli
fsubrs
or
cld
fcom
mov
jl
pop
xchg
stos
in
jno
cs
std
scas
lods
add
mov
jg
pop
or
push
fcoms
xor
xor
inc
mov
and
push
pusha
jle
add
nop
divb
ret
mov
subl
jae
call
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
ret
pop
and
add
dec
add
add
pushf
int
and
movsl
add
add
pushf
mov
test
mov
add
add
addb
lret
cmpsb
add
add
movb
clc
and
add
add
lret
adc
add
add
mov
pop
add
add
inc
cmp
std
adc
add
add
xchg
lock
out
xchg
sub
add
add
add
rolb
add
mov
add
add
fstpl
inc
pop
fildl
add
add
add
cmpsb
add
add
and
fcmovnb
ret
add
add
bound
add
add
stos
in
mov
add
add
add
mov
test
xchg
add
add
cmp
das
pop
aad
add
add
es
mov
fldl
add
add
xchg
cmp
add
lods
pop
icebp
lret
add
add
mov
add
jle
add
add
out
mov
add
push
xchg
ret
cmp
add
sbb
jno
add
add
add
add
test
and
add
add
jmp
add
add
push
jno
ucomiss
add
add
jmp
addl
add
out
lods
jl
add
insl
add
add
add
sbb
add
add
roll
add
test
jb
add
movsb
lods
add
add
sbb
add
add
lods
ja
mov
add
xor
lcall
add
add
daa
inc
mov
add
in
add
add
or
mov
add
and
add
insl
arpl
cmpsl
add
add
mov
cmp
add
add
add
add
add
pop
in
mov
push
add
add
std
jge
xchg
xor
add
add
mov
lahf
dec
add
inc
mov
add
add
clc
dec
pop
test
adc
xchg
je
jae
add
add
mov
add
sldt
add
mov
stos
add
add
fwait
dec
jne
mov
add
add
xchg
leave
rorb
add
add
scas
sub
xchg
insl
add
add
aaa
addr16
mov
jle
mov
add
sub
add
add
fcomp
iret
ret
add
out
jmp
add
add
add
filds
add
add
addl
add
int3
out
jnp
aad
add
add
ret
flds
add
add
ljmp
or
inc
add
add
sbb
mov
add
push
adc
add
add
push
add
add
cltd
outsb
iret
cmp
add
add
inc
enter
add
int
add
add
push
add
add
xchg
mov
add
rorb
add
pop
movb
add
repnz
cmpb
add
lock
add
or
or
add
add
add
int3
lret
ret
add
add
repnz
sbb
add
add
std
lods
add
add
jbe
int
xor
orb
add
add
outsl
add
add
jo
in
adc
add
add
pop
cmp
push
jg
add
add
pop
xor
add
or
add
add
pop
nop
add
add
add
movsb
dec
dec
add
insl
add
add
push
push
or
add
add
push
fcoml
ss
add
add
cs
in
mov
add
add
faddp
add
add
jecxz,pt
or
add
and
lahf
pop
sub
add
add
rclb
add
pop
mov
js
paddusb
add
add
sub
cmc
add
add
shlb
daa
add
cmpsl
flds
add
add
aam
add
add
xor
cli
sbb
add
lcall
ret
add
fsubrl
add
add
adc
add
add
cltd
enter
add
imul
filds
or
add
sahf
iret
push
adc
add
add
add
subb
add
add
push
add
add
fadd
push
and
add
out
add
add
imul
xchg
addb
add
fidivrs
sbb
sub
add
add
push
mov
add
jo
add
add
fs
xchg
loop
add
add
mov
add
cmp
and
ljmp
mov
or
add
add
lret
test
movsl
cmp
add
add
mov
add
add
mov
add
add
adcb
out
loopne
add
add
pop
rcr
add
add
gs
add
add
mov
shll
add
add
sub
into
add
lods
jg
add
add
pop
mov
add
add
inc
gs
add
add
les
xor
add
add
xchg
jecxz
adc
test
add
add
xlat
xor
add
add
cs
xlat
push
add
addl
into
pop
add
addl
sbb
inc
cmp
add
add
call
add
adc
add
add
outsl
fs
add
add
popa
jmp
and
add
add
jb
std
js
add
rolb
add
add
addr16
repnz
add
repz
add
movl
mov
fwait
add
add
add
push
cmc
push
add
add
dec
xor
adc
mov
mulb
fwait
dec
add
mov
add
in
add
add
push
add
insw
adc
add
add
icebp
adc
add
into
add
add
add
pop
add
add
aas
enter
add
add
mov
add
add
aad
adc
add
add
fsub
mov
stos
test
add
add
shr
add
add
es
push
leave
mov
add
add
enter
add
add
mov
and
add
add
dec
add
add
clc
xor
add
add
add
add
ljmp
add
add
mov
add
add
roll
add
xchg
add
add
add
add
cmp
fstpl
filds
add
add
add
add
add
adc
add
xchg
fisttps
mov
add
xchg
dec
add
mov
test
jecxz
cmp
add
add
sub
roll
add
cmp
insl
pop
add
add
xor
add
inc
add
add
and
mov
add
add
mov
add
add
or
cld
loopne
xor
add
add
adc
add
add
in
dec
inc
add
mull
add
add
mov
sbb
add
add
push
ja
inc
fadds
add
add
jb
add
cmc
or
mov
jge
cmp
add
add
addr16
add
add
or
dec
pop
add
pop
fildl
add
add
sub
sub
add
add
sub
addb
add
xchg
dec
orl
xchg
xchg
cli
in
sbb
add
add
sub
add
add
mov
add
stos
add
add
jle
not
test
add
add
out
loop
push
mov
add
lds
add
xor
add
jecxz
add
add
mov
out
xchg
add
add
adc
in
add
fcmovnb
add
add
ret
outsb
adc
add
add
xchg
je
mov
xor
add
add
sub
pop
add
xchg
push
add
add
sbb
inc
xchg
gs
push
lock
jne
jbe
add
add
mov
sub
add
add
add
fisubrs
pusha
add
push
movl
arpl
add
add
add
add
leave
mov
add
sbb
out
add
add
add
or
add
add
add
add
and
dec
sub
add
add
add
add
add
and
add
add
mov
add
push
mov
add
add
mov
sub
pop
add
add
cmpsb
xor
xchg
add
add
push
sbb
jo
add
add
pop
pushl
pop
pop
add
add
and
incl
add
add
xor
pop
and
add
add
pop
inc
push
sahf
scas
add
add
push
xchg
addb
stc
cmp
add
add
push
imul
add
add
movsl
scas
push
int3
add
add
add
dec
add
cs
add
add
xchg
cmp
add
add
pop
push
mov
add
or
add
mov
add
add
rclb
ret
mov
add
add
outsb
sbb
leave
add
add
sub
xor
add
pop
inc
add
add
lcall
add
add
sub
add
mov
pushf
mov
add
add
add
mov
xor
popf
add
add
stos
ror
jo
inc
add
add
mov
mov
add
mov
fidivrl
sub
add
mov
pop
add
insb
add
add
fdivrs
cmp
and
add
add
inc
shll
add
add
xor
pop
add
sti
add
add
add
in
lcall
imul
sbb
add
mov
in
add
xlat
add
add
cmp
ljmp
add
cmc
bnd
add
add
adc
sub
mov
data16
jmp
add
jecxz
out
and
add
add
scas
leave
lea
add
add
cmc
popa
cwtl
in
sldt
add
loop
imul
lahf
filds
add
flds
add
add
lds
or
add
add
lods
lcall
add
inc
mov
adc
add
add
pusha
xor
in
bound
add
add
dec
add
add
pushf
and
add
sbb
add
add
mov
add
add
and
dec
stos
ja
add
add
dec
pop
scas
add
xor
add
add
call
xchg
add
add
pop
jne
cmpsb
das
cmp
add
add
insl
nop
add
mov
add
add
jb
cwtl
push
mov
add
or
sbb
add
add
test
add
add
mov
add
push
mov
add
add
and
cli
lods
add
pop
add
add
add
pushw
and
cmp
add
add
mov
jo
add
add
mov
xor
add
add
lock
add
lret
add
add
faddl
add
add
data16
add
es
add
add
loopne
add
add
lret
sub
sbb
add
add
mov
add
push
loop
add
add
mov
add
add
test
add
add
jne
add
add
mov
xor
add
add
jbe
mov
insl
add
add
push
negl
add
add
add
imul
testl
fwait
popa
sbb
add
daa
push
add
add
add
and
add
adc
mov
adc
add
add
sbb
pop
lcall
inc
push
pushf
inc
add
add
fmulp
xchg
add
add
xor
jbe
add
sbb
add
add
xchg
sbb
add
call
mov
add
add
inc
aas
inc
add
sahf
imul
add
add
jo
xchg
add
add
mov
or
dec
and
add
add
and
add
iret
mov
dec
fmul
sbb
cld
add
add
adc
adc
add
add
or
add
mov
add
lods
fstpl
faddl
add
add
add
add
mov
add
add
add
dec
or
xchg
push
add
add
outsb
and
repz
out
aad
add
jnp
add
add
or
cld
inc
je
add
add
mov
inc
pop
add
add
pusha
ret
sbb
add
add
xchg
and
inc
xchg
add
add
jne
subl
add
add
add
dec
cmc
add
add
add
in
inc
cli
add
add
inc
stos
and
add
add
push
mov
pop
out
insl
add
add
inc
jnp
movsl
fcmovb
add
add
scas
insb
pop
js
add
insl
add
add
adc
scas
scas
jp
add
add
clc
cli
pop
xchg
cmp
add
add
push
add
and
add
add
fistpll
add
add
iret
add
add
repnz
in
inc
add
add
hlt
shlb
shrl
add
aad
or
add
add
popf
adc
pop
add
add
fimuls
mov
add
sub
add
add
mov
add
mov
add
sub
add
add
add
add
jo
mov
popf
add
add
and
test
call
add
insl
push
push
xchg
and
cmp
jg
add
add
jl
cltd
jmp
add
add
add
xor
add
add
xchg
add
inc
mov
add
add
sahf
add
add
xchg
nop
daa
and
cmp
add
add
sub
in
add
in
cld
add
add
and
add
add
mov
add
add
js
sbb
add
add
add
push
sbb
mov
add
add
pop
movsl
cmp
popl
add
add
add
add
add
add
mov
test
add
add
loopne
add
add
add
add
mov
add
xor
add
jne
das
jecxz
add
add
push
outsl
daa
mov
add
add
add
sub
lods
ss
js
push
pop
pop
push
add
add
and
mov
add
les
add
add
icebp
add
add
pop
and
cmp
add
add
lret
xchg
add
in
ret
add
add
mov
popf
sbb
add
add
lret
cli
test
pop
pop
add
add
fs
sub
add
add
stc
loopne
pop
fadds
add
add
inc
pop
scas
add
add
into
jns
cltd
add
dec
addb
add
xor
add
add
iret
test
add
add
mov
int
add
add
cli
ljmp
add
sub
sbb
add
adc
lret
push
add
imul
adc
rorl
adc
add
lods
add
add
in
fisttpll
repnz
add
shll
add
adc
inc
add
add
xchg
imul
add
mov
add
add
fisubrs
add
add
nop
test
lock
dec
or
add
add
sarl
add
add
ret
repz
mov
add
add
andl
add
add
add
add
daa
int3
aad
and
add
add
je
mov
js
add
add
dec
xor
and
add
add
mov
or
mov
add
add
test
sbb
add
add
movsb
les
add
dec
push
and
add
add
add
add
add
mov
addr16
incl
add
add
sbb
shr
leave
add
add
mov
add
add
add
add
hlt
in
std
mov
add
add
cld
sub
sub
add
mov
add
add
fadds
add
add
icebp
das
sti
lret
jnp
add
add
js
ret
add
xorl
add
add
lods
insl
mov
add
add
and
dec
ficomps
add
add
mov
add
push
add
add
rcrb
mull
add
add
or
ret
je
fiadds
add
add
je
movsl
add
lcall
lods
cwtl
sub
cli
lds
add
add
inc
and
add
add
mov
mov
add
add
jne
xchg
je
repz
add
out
incb
add
add
lret
cltd
add
add
xor
sbb
das
add
add
test
addb
add
add
inc
cwtl
ja
pop
add
add
lret
sbb
outsb
inc
in
add
add
ret
add
xor
add
add
sbb
add
mov
dec
or
add
add
add
add
add
push
out
and
add
add
add
std
call
popf
cmpsl
add
add
mov
mov
add
jmp
add
in
in
fdivp
add
add
mov
rolb
add
add
add
add
add
loop
mov
add
addb
add
jp
adcl
add
add
add
add
clc
clc
jne
sahf
sbb
xchg
sub
add
int3
out
add
add
cmp
movl
or
jp
add
add
lods
mov
add
add
pusha
pop
pop
add
add
add
push
adc
test
push
add
add
mov
add
add
mov
add
add
in
add
add
pop
push
scas
add
or
inc
jno
scas
jecxz
add
add
dec
out
popf
nop
mov
add
add
sbb
out
pop
add
aad
add
add
scas
iret
je
xchg
add
add
fs
push
sbb
add
addr16
add
add
add
add
sub
add
js
xchg
test
push
add
add
rcrb
loopne
add
add
mulb
add
add
mov
add
add
or
push
lea
add
add
add
int3
mov
rolb
add
add
lds
add
enter
add
jbe
aam
push
xor
add
add
or
add
add
test
xor
add
add
enter
add
add
sub
cmp
sub
add
add
dec
test
add
mov
add
add
cmp
adc
lds
add
add
rcrl
add
add
sbb
add
add
xorb
add
add
je
in
sbb
nop
add
add
sub
lds
inc
insl
add
add
ds
cltd
add
testb
add
bnd
mov
add
sbb
add
jns
add
add
js
jp
fcompp
add
add
push
arpl
cmp
rorb
and
add
add
add
cmc
add
add
js
xor
or
add
add
add
hlt
add
add
fsubrl
add
add
dec
mov
lock
add
add
jae
add
add
push
jb
lret
cmpsb
mov
pop
pop
mov
add
add
add
add
addb
add
cld
add
add
push
xor
add
add
xrelease
add
add
add
lret
decb
add
add
jmp
or
add
add
or
add
les
add
add
fs
xor
pusha
sbb
add
add
inc
cmp
add
add
lock
add
add
add
into
pop
aam
xchg
add
add
mov
pop
add
add
data16
loope
add
cli
add
add
mov
add
add
mov
adc
add
add
sub
pushf
add
mov
add
fsubp
jp
pop
add
add
int3
movsb
add
add
sub
cmp
add
add
dec
orb
jae
filds
mov
add
add
jbe
jp
add
push
add
add
xchg
sub
sahf
mov
add
add
sbb
add
add
cmpl
inc
add
add
nop
pop
jno
out
sub
add
add
mov
add
add
sar
iret
add
mov
add
lcall
add
sbb
rorl
add
jb
imul
add
add
cmp
add
jnp
lea
cli
inc
add
add
dec
jle
jge
add
add
aaa
leave
repz
add
add
out
jg
out
push
add
add
imul
push
jecxz
add
leave
add
add
cwtl
inc
add
add
add
icebp
add
add
lock
scas
add
add
mov
std
add
add
push
dec
add
add
mov
add
cld
push
jge
aaa
jmp
add
add
xchg
add
add
aam
cltd
mov
add
mov
add
add
sti
outsl
pop
aaa
add
xchg
cmpsl
and
pop
add
add
mov
add
add
add
mov
roll
add
jbe
sub
add
clc
loope
cmpsl
add
shrl
out
jns
pop
add
add
rorl
rolb
add
add
add
js
add
dec
lock
add
test
sti
inc
mov
cld
sub
int
pop
add
add
pop
test
adc
add
add
cmp
push
push
addl
rorl
cltd
push
xchg
pop
add
lret
add
add
je
add
add
mov
aas
add
add
add
mov
add
adc
add
add
adc
mov
add
add
gs
add
add
or
lds
add
add
add
add
ret
add
fildl
mov
sub
das
jge
add
add
ja
jae
add
add
dec
into
stos
push
add
or
add
add
mov
icebp
inc
sbb
add
add
jle
loop
sub
add
add
daa
dec
popl
add
add
jno,pt
or
add
add
pop
mov
xor
xchg
mov
add
add
xchg
cmc
imul
add
sub
add
add
adc
add
add
add
jle
mull
add
stos
ja
mov
pop
add
add
push
push
icebp
inc
add
paddd
add
add
flds
add
add
push
add
add
adc
adc
add
add
ret
mov
add
fdivrs
add
add
fiaddl
data16
mov
add
add
sbb
add
add
add
add
add
add
hlt
push
lock
add
filds
add
add
insl
jp
hlt
add
add
cmp
add
add
ficoms
dec
add
push
add
add
shlb
add
shrb
push
xor
add
add
sbb
cld
enter
add
lahf
mov
add
add
scas
call
add
add
and
cld
add
adc
add
add
movsb
test
add
add
jge
aad
add
add
jl
fnstsw
add
addl
add
push
addr16
add
add
add
out
scas
leave
adc
add
add
cmpsb
mov
add
add
inc
dec
push
fs
add
add
push
jno
cs
add
add
and
or
add
nop
xchg
add
add
fistpll
add
pushl
lret
imul
and
out
add
add
sub
push
pop
icebp
test
add
add
movsl
les
add
add
add
mov
add
addl
fisubrs
add
jo
pop
rol
outsl
add
add
outsb
imul
add
add
add
shl
jecxz
sub
add
les
out
lock
add
add
dec
pop
into
add
jge
add
add
lcall
add
add
xor
push
xchg
lock
add
mov
jg
add
pop
insb
add
add
mov
icebp
aad
adc
add
add
int
call
add
sbb
add
add
sahf
pop
popa
stc
xlat
lret
add
in
and
imul
add
add
jg
mov
add
add
fsubrs
add
add
pushf
scas
sarl
add
add
xor
mov
add
add
loop
out
shrl
add
add
adc
adc
addr16
add
cli
push
lahf
scas
add
fisttpll
add
add
xor
add
add
jg
cmc
inc
and
add
add
adc
sbb
add
das
add
add
data16
xchg
out
jp
add
add
inc
leave
out
mov
add
add
pop
aaa
inc
add
jge,pt
add
add
mov
add
add
fildll
daa
fildl
add
add
cs
jo
add
add
push
faddl
add
ret
lock
repz
add
add
inc
clc
in
add
jo
add
add
les
add
add
out
loopne
dec
cmpsl
stos
add
add
pushf
and
dec
add
mov
cs
jp
sub
add
add
ret
add
add
push
cmp
add
mov
add
add
call
xchg
add
add
sub
stos
xchg
inc
ret
add
dec
push
add
add
mov
add
add
jecxz,pn
mov
add
add
leave
add
add
dec
imul
add
add
icebp
add
add
and
push
lahf
add
adc
add
add
imulb
and
xor
add
add
mov
enter
add
mov
mov
add
add
lock
cmp
add
add
mov
add
add
imul
add
pop
popf
add
add
mov
dec
add
add
repnz
lret
jbe
xor
add
add
add
mov
add
add
aam
jnp
mov
add
insl
hlt
int
add
add
lods
outsb
dec
loopne
add
add
add
mov
cmp
add
add
pop
jmp
add
push
inc
jp
add
cmpsl
movsb
add
add
clc
sbb
clc
call
add
popa
pop
push
xor
add
add
dec
repnz
ret
add
add
sbb
add
add
pop
les
add
add
lods
aad
add
adc
pop
das
pop
fsub
xchg
add
add
sbb
xchg
in
add
add
bound
add
movsl
aad
add
add
out
add
add
xchg
push
add
add
push
sub
rcl
add
add
add
add
add
call
incb
add
add
cmp
add
dec
mov
inc
dec
add
add
pop
sbb
fst
cltd
add
add
out
movl
add
add
dec
xor
add
adc
dec
add
add
mov
add
add
add
push
movsb
fadds
add
add
mov
loop
add
add
ds
add
jg
add
add
or
and
and
lods
mov
fs
add
add
adc
add
adc
add
add
sub
add
add
add
push
aam
add
add
stos
xlat
imul
add
add
add
insb
imul
std
in
loope
add
add
inc
xchg
add
add
fldl
add
add
rorl
xorl
mov
out
add
add
scas
xchg
mov
add
inc
add
add
adc
add
add
scas
dec
pop
cmp
add
loope
add
js
add
add
subps
add
add
out
imul
loopne
add
add
pushf
adc
add
inc
add
add
hlt
mov
add
add
out
or
add
add
pop
mov
cmp
fdivp
push
mov
enter
add
add
jbe
jae
add
aaa
pushf
add
add
sbb
xorl
in
pop
add
add
jo
sbb
add
push
ret
add
add
and
or
add
add
or
repz
cld
add
add
cmp
sub
add
add
jl
mov
add
add
mov
jge
push
add
add
push
rorl
add
fbstp
cmpsb
aas
xchg
push
dec
std
add
add
xchg
daa
and
add
xchg
cltd
imul
add
add
pop
ss
xor
add
add
xlat
pop
test
add
add
cli
js
add
add
fmul
mov
add
add
add
andb
inc
add
scas
add
add
add
clc
andl
add
add
arpl
pop
or
inc
add
add
faddl
ljmp
add
outsb
into
pop
cld
xchg
add
mov
dec
pop
lret
add
add
push
js
jno
add
add
enter
pop
add
add
aad
push
or
sub
add
add
add
fwait
add
add
mov
fidivs
pop
xor
shlb
hlt
lods
lods
add
add
lret
add
orl
add
add
add
add
sbb
add
add
adc
add
mov
add
add
ss
addl
add
add
testl
and
add
add
add
xor
sbb
adc
add
add
shrl
je
loopne
add
add
add
inc
add
add
cli
subl
imul
lock
jns
add
add
test
sbb
add
add
mov
add
add
lods
sar
add
add
in
push
pop
icebp
add
or
add
add
cmp
push
fnsave
stos
movsl
pop
pusha
filds
add
add
add
add
add
cmp
repnz
add
add
addr16
add
add
nop
adc
inc
lret
add
inc
or
xlat
mov
cmp
pop
and
add
out
add
inc
pop
add
add
pushf
iret
test
nop
dec
add
add
inc
pop
aad
cld
cmp
add
add
lcall
add
pop
jo
push
ret
add
dec
mov
add
add
pop
inc
xlat
add
out
add
add
inc
ffree
dec
das
push
add
add
sbb
add
add
add
add
add
mov
xor
lret
stc
add
add
das
sbb
pusha
lods
inc
add
add
mov
add
add
add
sub
out
jecxz
add
add
std
jle
xchg
add
add
cld
lods
cmp
dec
add
add
mov
out
inc
push
add
add
jns
das
cwtl
out
add
add
add
sub
add
add
add
dec
ds
push
jnp
add
add
out
icebp
aam
and
add
add
add
add
add
rcr
push
jb
add
add
mov
ret
and
xchg
add
add
ljmp
nop
add
add
lods
fstps
add
add
mov
add
add
test
dec
add
mov
add
add
push
add
jle
add
add
jl
xor
out
call
add
ss
add
add
push
lods
sub
add
popf
push
cltd
ror
add
add
test
pop
add
in
je
add
add
pop
add
add
pop
xor
add
add
mov
mov
add
add
add
push
stos
dec
inc
push
repz
add
or
lds
add
add
rclb
pop
in
add
add
fstps
push
add
add
add
add
add
add
pop
inc
les
add
rcl
inc
pop
xchg
add
add
mov
sti
aaa
add
pop
push
add
add
bound
mov
add
pop
aaa
xchg
dec
jb
add
add
jp
shrb
add
cmpsl
add
add
mov
pushf
add
add
jmp
jne
or
xchg
mov
and
add
add
rcrl
add
mov
jg
jg
add
add
gs
add
xor
add
add
pusha
das
mov
add
xchg
lahf
jmp
add
add
add
mov
stos
dec
rcrb
ficompl
sti
mov
add
add
ret
xchg
add
dec
loop
add
add
xor
pop
add
add
cltd
fcompl
add
add
cmp
add
add
push
add
add
lds
iret
jae
adc
add
add
aad
add
pop
dec
add
add
push
mov
add
add
cltd
xchg
lods
sub
add
add
ljmp
add
add
repnz
xchg
jnp
xor
add
add
mov
fcomip
movb
add
or
imul
add
add
int3
dec
cltd
lcall
inc
cwtl
lds
ret
add
add
mull
jbe
lock
jge
add
add
fsub
aaa
jno
mov
add
add
sub
ss
add
add
jo
pop
mov
sub
add
add
cmp
enter
add
enter
add
lcall
mov
mov
sbb
jno
dec
popf
fs
add
add
add
add
add
add
push
sahf
insl
sub
add
jns
into
mov
add
mulb
add
add
ds
sbb
std
add
add
jne
lahf
pop
fs
xor
add
add
js
sbb
sbb
das
or
jg
add
add
add
cltd
mov
test
add
add
insl
add
add
mov
xor
mov
add
add
add
add
scas
das
xchg
add
add
dec
mov
add
add
mov
xor
add
mov
add
add
push
jnp
pop
pop
or
add
add
movl
add
add
add
adc
adcb
mov
add
add
jo
mov
inc
add
add
fsubs
mov
add
add
lret
cmpsb
push
or
add
add
sbb
sub
add
add
ret
into
ret
fdivl
sahf
into
pushf
inc
into
add
add
xchg
push
cmp
add
add
cli
pop
add
add
into
add
add
add
arpl
add
add
add
add
bound
mov
add
add
in
xor
add
loopne
mov
add
int3
jecxz
add
add
push
jbe
je
add
add
mov
add
add
sub
add
or
in
mov
insl
xchg
add
add
cwtl
test
loopne
add
add
les
pushf
mov
add
add
mov
es
inc
lret
rolb
add
add
stos
cmp
add
or
add
add
nop
lock
hlt
sub
add
add
mov
add
add
call
add
pop
add
add
add
int3
add
mov
add
add
jb
lods
stc
add
jle
add
add
je
inc
xor
test
add
add
lea
lds
add
add
mov
add
xchg
add
add
pop
ljmp
add
dec
mov
add
add
divb
mov
add
add
cwtl
jae
roll
add
add
mov
in
add
add
lock
movb
mull
add
add
lea
add
add
add
add
mov
add
mov
add
add
xlat
pop
mov
add
divb
cmpsl
ret
add
add
cmpl
add
add
es
cmpsl
rolb
add
nop
ret
sbb
add
add
mov
add
inc
add
add
mov
mov
lods
push
sub
pop
add
add
clc
xchg
lahf
loop
add
les
add
add
inc
std
fwait
loop
add
add
outsb
mov
add
add
inc
jg
add
jg
add
add
test
aaa
adc
add
dec
fldl
adc
add
add
mov
add
add
out
bound
loopne
add
add
sbb
pand
data16
add
xchg
add
adc
add
add
les
add
add
fcmovbe
mov
add
movsl
xchg
add
sub
add
add
xor
or
add
add
pusha
mov
add
add
xchg
lods
add
out
add
add
or
add
scas
adc
add
add
add
add
add
arpl
add
add
mov
dec
cmc
pop
and
add
add
push
ja
inc
xchg
add
add
dec
ja
dec
add
mov
add
push
add
add
dec
cmp
xchg
or
xchg
add
popf
fwait
add
add
jp
cmpsl
icebp
xlat
arpl
add
add
add
add
xchg
inc
dec
add
dec
testl
push
int
ljmp
sub
add
add
movsb
add
sub
add
add
jle
mov
add
add
sbb
add
add
push
push
popf
test
add
clc
add
add
mov
loopne
add
add
andl
add
add
pop
cmp
pop
add
add
ret
ret
cmpsb
nop
add
add
adc
jae
mov
add
add
ficompl
push
add
sbb
add
add
sbb
sub
add
add
push
lcall
hlt
aaa
adc
add
data16
add
add
aaa
imul
adc
add
cmp
fwait
add
add
add
add
add
add
add
dec
push
leave
imul
add
add
sbb
pushf
mov
add
movl
mov
fwait
push
sub
add
add
pop
daa
mov
add
adc
adc
add
add
add
add
loope
jge
test
add
add
jl
cli
in
add
cmpsb
into
add
add
push
adc
jns
inc
add
add
mov
mov
cmpsb
inc
jle
add
or
add
add
enter
cli
xlat
add
add
jmp
sbb
add
add
xchg
leave
add
test
push
adc
add
add
and
js
jbe
add
add
aaa
cmp
add
add
add
sub
add
nop
add
add
imul
add
leave
mov
add
movsb
add
add
daa
xor
mov
add
xor
nop
mov
add
add
outsb
xchg
aaa
mov
add
xor
add
add
je
jbe
push
add
add
mov
xchg
add
add
sub
inc
stc
add
add
lcall
add
add
sub
pop
ja
add
add
add
add
add
mov
push
jbe
sub
add
add
int
add
add
add
mov
xchg
push
add
pop
jb
add
add
data16
add
mov
jg
popa
mov
add
add
dec
mov
addb
add
fcomp
mov
add
add
roll
ljmp
ret
or
add
lods
add
add
loop
adc
add
stos
loopne
lds
add
jmp
or
add
add
cmp
in
lods
mov
cmp
add
add
adc
cld
testl
add
add
in
lods
pop
add
add
fstpt
out
out
jne
add
add
cmpb
add
inc
mov
add
add
xchg
leave
xor
mov
add
add
imul
incb
add
fmul
add
add
sub
addb
add
add
sti
add
add
mov
hlt
add
add
les
add
add
dec
test
add
add
in
add
add
cs
add
add
add
test
add
pop
xor
add
cmp
add
add
call
cmc
add
add
add
adc
add
inc
adc
jae
add
add
add
jb
xorb
add
jecxz
sbb
add
add
mov
and
add
add
dec
sub
add
add
push
add
add
and
aaa
pusha
add
je
add
add
idiv
inc
and
add
mov
mov
lds
add
add
add
add
outsb
sub
add
add
lock
add
add
mov
movsl
add
add
mov
ja
add
add
lret
ret
xor
sarb
outsl
add
fisubrl
add
add
dec
sbb
shlb
add
add
popa
jno
test
add
lods
scas
mov
xor
add
add
xor
add
add
stos
pop
inc
mov
add
stos
dec
add
push
fadds
add
add
int
add
add
fisubrs
mov
add
push
bound
add
add
add
push
xlat
test
xchg
inc
mov
loop
add
add
sbb
ja
add
inc
popf
add
add
pop
xor
xor
add
out
xchg
scas
out
xchg
add
add
inc
and
add
xchg
xchg
inc
add
add
sub
xor
add
add
push
xchg
and
add
add
cli
test
add
in
adc
movsl
dec
ljmp
lea
jmp
add
or
add
add
fwait
push
sub
add
add
and
add
rclb
add
add
in
sbb
sbb
idivl
add
add
lock
add
add
dec
pop
sti
mov
add
mov
loope
add
add
mov
add
xchg
add
add
or
push
and
add
mov
fadd
stos
add
add
pusha
gs
inc
add
add
xchg
adc
xor
add
add
addl
cwtl
add
add
stos
xor
xor
add
add
shll
add
and
add
add
push
add
nop
xor
add
add
sbb
add
add
add
push
pop
sbb
mov
loop
add
add
adc
leave
push
test
add
add
cmp
pop
frstor
add
dec
addl
stos
inc
add
add
ficoml
mov
add
add
int
add
add
xchg
cmp
push
add
add
hlt
xorb
mov
or
sbb
add
add
pop
rorl
add
loope
add
add
inc
test
add
add
pop
jno
cmp
add
inc
dec
add
mov
add
add
sbb
add
add
add
jge
add
add
sub
add
add
and
add
add
sete
shlb
lock
std
add
add
jl
push
push
lods
push
add
add
stc
inc
xor
add
add
inc
add
cmpsb
enter
mov
add
add
mov
add
add
sti
mov
cmc
add
add
and
cmp
add
test
fnstcw
add
add
js
adc
add
cmpl
into
add
add
in
cmp
add
add
sbbb
add
rorl
add
add
das
jmp
add
inc
inc
pop
jge
dec
add
add
faddl
jne
add
add
outsb
notl
sbb
add
add
scas
sbb
add
add
push
orl
add
cmp
cmp
add
add
test
push
adc
add
add
or
add
add
incb
add
add
jge
and
add
add
adc
add
add
add
add
sti
xor
add
add
lods
add
sub
add
add
mov
fs
xchg
add
add
pushf
jno
mov
add
into
lret
mov
add
jg
add
add
xor
ss
dec
xor
add
add
jns
add
add
add
add
sbb
mov
aad
add
add
or
add
adc
orl
add
add
lcall
add
push
lods
jbe
call
in
pop
es
add
add
mov
add
add
cmc
ret
test
add
add
add
add
cmp
push
jae
add
add
inc
sbb
adc
add
add
add
add
inc
inc
sahf
xchg
in
add
add
insb
fdivp
lds
add
add
pop
imul
add
add
pushf
rorb
add
add
jge
add
xlat
add
add
je
add
add
add
popa
les
test
sbb
add
push
add
add
pop
xor
add
rorl
add
add
xchg
and
lret
add
add
xchg
dec
push
test
add
add
cwtl
jmp
lret
add
add
hlt
add
add
add
cwtl
add
add
mov
add
dec
add
add
and
cmp
sbb
add
add
in
std
jae
and
add
add
sub
sbb
add
add
mov
hlt
pushf
jmp
add
aam
add
add
mov
add
adc
dec
das
jnp
jecxz
add
add
add
pop
add
add
add
mov
add
mov
rclb
rolb
dec
mov
add
add
ljmp
and
lods
sbb
add
add
push
add
add
test
repz
add
add
stc
ljmp
sub
xchg
out
lods
jo
add
add
sub
lods
add
add
push
cmp
add
add
cltd
data16
add
add
test
aas
and
add
add
js
clc
negb
arpl
or
add
add
xor
mov
xor
fistps
add
jb
dec
jne
imul
add
or
sti
xchg
add
xchg
push
add
add
push
mov
add
add
jns
call
mov
mov
dec
and
add
out
add
add
rclb
add
cmp
inc
in
ja
add
add
add
add
xor
ret
cmp
add
add
mov
add
add
jp
jb
add
add
add
mov
sub
add
add
jne
sti
add
add
xchg
in
or
add
adc
out
jb
cmpsb
mov
cmp
add
add
jle
mov
add
jge
add
add
pusha
add
insb
add
add
cmpsl
add
jb
cmp
add
add
add
ret
add
add
stos
mov
add
add
sar
pop
add
add
add
int
cltd
add
dec
jnp
add
add
or
add
jns
jp
roll
add
add
lds
add
add
scas
and
adc
inc
add
add
push
lods
add
add
inc
jecxz
add
add
insb
add
add
push
mov
lods
out
mov
roll
add
sarb
cmp
add
add
bnd
add
add
and
or
movsl
add
add
or
fbstp
add
add
int3
or
and
jo
add
add
dec
lds
add
movsb
cmp
fwait
add
mov
add
add
jbe
and
add
xlat
gs
scas
inc
lds
add
add
in
out
add
jb
add
add
jo
stos
test
add
inc
mov
inc
sub
enter
add
dec
lahf
add
add
cmp
push
inc
push
add
add
xchg
ljmp
push
mov
idivl
add
add
push
incl
add
add
jae
sbbl
add
add
lcall
add
add
push
or
fadds
add
add
add
add
lods
lret
inc
add
cmp
add
add
jmp
cli
cld
add
add
bound
loope
ret
add
add
sub
inc
add
sub
add
or
add
add
xor
mov
add
add
add
add
add
fdivl
add
add
in
adc
add
add
push
push
add
add
push
test
mov
add
add
fidivs
add
add
sahf
mov
add
add
andb
add
add
mov
enter
add
fcoms
into
add
push
int
add
add
divb
add
add
sbb
add
loop
das
push
add
mov
add
mov
out
add
add
sbb
cmp
add
add
jecxz
add
pusha
mov
into
scas
daa
cmpsb
push
add
add
mov
sub
add
add
pop
insb
add
jmp
add
add
mov
add
add
xchg
push
xor
xor
loopne
les
add
add
rcr
jmp
pushf
add
add
mov
add
add
sub
roll
add
add
lret
xor
add
add
or
add
add
les
pushf
add
xchg
mov
add
add
push
sbb
add
add
ror
stc
add
cwtl
stc
add
add
nop
addl
add
int
fldcw
fstp
add
add
call
add
mov
add
add
in
push
xchg
js
add
add
or
pop
dec
jg
add
add
ret
aaa
add
jge
add
add
je
fmul
sbb
add
add
inc
lea
add
dec
add
add
mov
add
add
pop
rorl
add
push
js
test
xlat
add
add
idivb
movsb
add
cmp
add
add
cwtl
movsb
subl
add
add
xchg
xorl
xor
inc
jae
add
add
fiadds
add
add
or
add
add
add
inc
add
add
cld
pop
scas
mov
mov
loope
mov
xchg
push
add
add
aam
aad
add
add
add
es
add
add
into
and
add
add
add
adc
add
add
adc
add
add
into
add
add
clc
inc
push
inc
add
push
add
cltd
mov
add
add
mov
add
add
jl
ret
jae
add
add
test
add
add
mov
movsl
add
add
pop
xchg
xlat
add
add
out
mov
add
add
psubb
imul
add
xchg
pop
add
add
test
in
ret
xor
add
add
add
add
add
xor
add
add
pop
dec
pop
insl
aad
add
add
jp
aaa
xor
jo
mov
add
inc
add
add
or
mov
lods
mov
add
add
add
add
in
and
add
or
add
add
sbb
add
add
mov
add
add
add
add
mov
leave
sub
add
ja
jns
pop
mov
add
add
or
sbb
add
add
jp
gs
add
add
movsl
mov
push
add
add
xchg
mov
pop
jle
add
add
add
add
mov
repnz
add
insb
adcb
add
test
add
add
mov
pop
lcall
fildll
cmp
add
add
mov
roll
add
add
mov
dec
add
add
jae
and
add
adc
sbb
add
std
xchg
add
add
ret
lahf
xchg
xchg
add
add
inc
mov
cld
pop
les
add
add
ja
sub
add
and
add
add
into
iret
jnp
add
add
jmp
push
outsl
pop
push
add
add
hlt
sbb
push
add
popa
hlt
add
add
inc
out
jae
in
add
add
int3
jo
inc
pop
incb
add
add
and
pop
add
pop
xchg
add
add
rclb
add
add
fadds
add
add
add
add
add
add
or
add
add
pop
mov
add
add
and
pop
push
add
out
add
add
movsb
mov
add
add
jge
orb
out
mov
add
add
mov
add
add
inc
adc
add
add
add
add
add
enter
xor
add
xor
and
stos
add
lahf
daa
add
add
push
mov
add
add
inc
inc
and
add
push
test
add
add
and
add
add
movsl
out
into
xchg
add
add
add
divl
add
add
jo
xor
ret
add
add
pop
push
pop
dec
clc
xchg
add
add
outsb
mov
enter
add
rolb
add
add
dec
sbb
add
sub
dec
cmp
add
add
sub
add
add
jl
out
jg
add
add
mov
ror
add
adc
add
add
add
add
dec
ror
and
add
sbbl
add
sahf
sub
add
add
sub
jg
jl
add
add
adc
xchg
add
add
fcoms
dec
imul
add
add
stc
push
add
add
xor
mov
add
add
prefetch
clc
add
add
cmp
add
add
and
add
jl
add
add
cmp
sbb
add
add
aad
add
add
subl
loope
add
add
movsl
push
out
int
add
add
jmp
aam
add
add
loopne
mov
xchg
push
add
add
pusha
test
add
add
cmp
sub
add
add
shlb
add
add
sti
or
add
inc
push
out
add
ja
add
add
and
add
add
mov
filds
add
add
and
add
add
cs
cmp
add
add
xchg
dec
lahf
fimuls
add
add
addr16
or
add
and
add
add
sub
add
add
lock
adc
add
inc
fs
mov
jb
xor
flds
add
add
out
jecxz
cld
jecxz
add
add
add
add
iret
loopne
add
add
and
pushf
dec
add
add
and
inc
addl
add
add
sarl
rolb
add
add
mov
mov
add
add
add
add
jg
mov
add
push
sbb
add
add
dec
and
mov
add
xor
add
add
lret
adc
or
add
add
test
add
add
add
scas
mov
dec
push
add
add
pop
mov
add
add
lods
lock
jno
add
add
out
add
add
pop
pop
mov
add
push
shl
into
add
push
add
add
clc
jle
push
cmpsl
sahf
add
add
mov
jge
add
add
mov
add
push
mov
add
add
or
mov
add
add
add
sbb
insl
or
add
cmp
add
add
out
sbb
add
add
dec
jb
test
add
add
xor
adc
stos
add
add
xchg
add
add
push
sbb
add
add
lcall
mov
add
pop
stc
cld
add
add
lds
or
add
add
pop
out
adc
add
add
dec
arpl
add
add
fwait
testl
icebp
add
nop
jbe
add
add
movsb
lret
add
add
and
add
add
mov
add
add
add
dec
add
movsl
jecxz
add
add
outsb
dec
out
lret
add
add
out
inc
int3
add
xchg
std
add
add
or
push
lds
js
pop
outsl
sbb
add
add
sbb
cltd
add
add
xchg
mov
add
add
add
add
stos
mov
add
adcl
out
add
add
cmpsb
push
in
movsb
bound
add
add
mov
add
add
push
arpl
loope
dec
add
add
cmp
sbb
add
add
add
pop
add
add
adc
in
mov
add
mov
push
add
add
add
fisubrl
mov
inc
push
add
add
stos
stos
imul
out
add
add
mov
outsb
add
add
hlt
arpl
add
inc
xchg
or
add
add
loopne
test
add
add
add
faddp
ds
loopne
add
add
mov
add
add
cs
add
cmp
add
add
sbb
add
add
add
xor
add
jo
jmp
add
mov
add
add
and
rorl
add
add
xchg
push
int
xchg
add
add
cmp
sti
push
add
add
in
pop
dec
add
add
scas
xchg
xor
add
add
scas
add
cmp
add
add
cmpsb
push
enter
add
add
mov
add
add
ds
add
in
cwtl
add
add
and
fbld
add
ljmp
add
add
pop
and
add
add
add
push
pop
sub
xorb
add
sbbb
inc
add
add
add
pop
mov
add
aaa
pop
repnz
add
add
faddl
add
adc
add
add
gs
pop
add
add
pop
rorl
add
add
mov
jbe
add
add
stos
push
push
xor
add
add
mov
push
dec
mov
add
add
add
pop
add
add
mov
pop
inc
aad
add
add
pop
stos
and
cltd
add
add
lret
sbb
add
add
add
add
add
jo
test
add
fs
gs
add
add
ss
popa
dec
frstor
add
std
clc
idiv
jbe
add
add
into
je
or
add
add
add
xor
or
scas
and
add
add
mov
add
add
mov
pop
bound
add
add
mov
jl
addl
add
sub
add
cmpsl
add
add
adc
repz
insl
pop
add
add
adc
imul
add
push
add
add
in
mov
fcompl
add
decb
add
add
fstps
adc
xchg
inc
lds
add
add
cmp
and
add
jbe
mov
add
add
add
add
lret
std
add
add
xchg
push
repz
or
add
add
test
add
xchg
test
pushf
shr
insb
mov
add
aad
aas
ret
add
add
je
xchg
test
add
add
add
push
xchg
mov
add
ret
movl
hlt
pop
add
pop
loope
add
add
sbb
fbstp
add
add
dec
sbbl
add
add
add
addb
add
mov
lret
add
add
push
xor
jp
pop
add
add
mov
add
test
add
add
inc
sub
xchg
add
add
jp
std
push
add
cld
scas
pop
lds
add
add
add
mov
add
add
xchg
das
rolb
add
adc
add
add
dec
and
ja
add
add
add
icebp
fdivrp
or
add
add
add
add
lret
pop
jp
add
add
mov
jnp
adc
add
add
jg
testl
add
add
add
add
scas
frstor
add
add
mov
add
lcall
add
stos
imul
add
add
push
std
adc
add
adc
add
add
pop
push
addb
add
out
ficompl
add
add
add
jmp
add
add
xchg
shlb
add
add
fsubr
stos
aad
push
add
add
xor
push
mov
xor
scas
sub
mov
lock
stos
push
pop
add
add
or
movsl
testl
add
add
mov
add
add
into
xor
lods
aaa
iret
add
add
mov
cmp
add
add
add
adc
mov
add
and
test
add
mov
sub
add
add
add
add
in
lcall
add
xchg
sub
add
sub
add
jmp
add
add
add
add
mov
pushf
outsl
adc
add
add
dec
stc
add
add
out
pop
cmpsl
pop
dec
add
add
sbb
movsb
add
add
jle
nop
mov
add
add
add
punpckhwd
add
addl
call
nop
add
add
stos
cld
cld
dec
add
add
xor
cmpb
push
lret
add
add
add
inc
aam
ret
scas
lea
add
add
popf
out
xor
add
add
sbb
pop
fiaddl
add
add
mov
shlb
lods
xchg
inc
in
in
xchg
add
sub
add
sahf
add
push
movl
rorb
add
add
repnz
call
add
xor
arpl
mov
add
add
or
adc
add
add
int3
lret
ss
sub
in
lds
fiaddl
add
add
sbb
jbe
fs
fld
add
add
push
loope
jmp
addl
jg
repnz
xor
jo
test
add
add
mov
add
add
sbb
fwait
icebp
add
add
cmp
add
add
fisttps
outsl
loop
add
add
dec
int
add
add
add
push
pusha
xchg
mov
add
mov
adc
add
add
mov
add
xlat
push
add
add
xchg
add
add
nop
add
add
negb
test
add
add
repnz
jle
add
add
out
loope
sarb
add
sarb
clc
mov
add
add
pushf
add
add
push
xchg
xor
add
lcall
mov
add
add
mov
sbb
lcall
adc
add
add
push
add
add
push
loope
add
jmp
addl
jae
mov
add
add
xor
adc
or
and
mov
or
add
add
xchg
add
insb
sbb
add
add
iret
cld
and
add
add
stc
sbb
leave
add
add
loop
fs
add
add
add
fs
pushl
leave
add
add
mov
cmp
add
add
or
add
stos
sub
add
add
push
das
sbb
pop
add
add
lret
mov
sbb
add
add
add
je
add
jns
add
add
mov
cmc
fiaddl
add
add
addb
add
loopne
jo
add
xchg
lahf
add
add
adc
stc
mov
add
add
add
sub
jbe
add
add
in
or
cmpsb
xlat
popl
add
add
cltd
add
add
fldenv
leave
add
add
xchg
pop
inc
pop
pop
and
add
add
mov
add
add
cs
jmp
add
test
add
add
nop
adc
add
add
xchg
add
add
call
add
inc
add
add
pop
aaa
adc
dec
adc
add
add
in
add
add
jb
lods
mov
add
add
add
je
imul
xlat
xchg
and
add
add
lret
add
test
add
add
adc
add
add
inc
aas
test
fldl
add
add
inc
ljmp
add
add
sub
add
add
cmpl
add
xor
mov
add
add
mov
mov
lcall
add
add
add
add
fnstenv
lock
add
pop
fdivs
add
add
inc
bound
add
lock
add
add
xchg
inc
pop
xchg
inc
add
add
test
add
add
add
add
add
add
xchg
repz
xchg
mov
clc
hlt
xor
add
mov
add
add
ljmp
add
add
in
testl
add
sub
add
add
add
mov
lcall
scas
cmp
add
adc
add
add
mov
add
sti
add
add
jb
unpckhps
add
add
add
or
add
add
mov
cwtl
sbb
add
add
add
js
add
add
xor
pop
add
add
pushf
pop
mov
add
add
icebp
push
add
add
or
fisttpl
popl
add
add
or
addb
add
in
movsl
fwait
add
fmulp
add
add
mov
enter
add
add
mov
sbb
add
add
rorb
add
add
add
mov
cmc
mov
inc
add
add
jp
jns
out
lret
add
or
xchg
xchg
add
jno
add
add
jp
ja
xchg
jne
add
add
dec
mov
add
xchg
xor
pop
add
add
xchg
sbb
nop
ja
add
add
mov
add
add
and
add
rolb
add
jle
insl
loope
cmp
add
add
inc
mov
add
add
push
jmp
mov
add
add
mov
pusha
add
add
dec
test
sti
pop
movsb
add
add
adc
push
addb
add
ret
pop
dec
enter
add
jae
loope
add
add
ficoml
mov
add
add
sbb
jecxz
cmc
add
add
add
sub
add
hlt
stc
xor
add
rclb
add
add
pop
test
out
add
add
in
inc
rorb
add
fimuls
mov
add
cmpsl
ds
adcb
into
leave
xor
add
sbb
aas
xchg
add
mov
add
add
data16
adc
add
loope
pop
inc
test
add
test
movl
add
add
add
add
or
xlat
add
add
jl
sub
add
add
add
push
bound
cmp
add
add
jnp
scas
mov
add
cmpsb
push
and
pop
add
add
enter
adc
add
add
dec
jno
xor
add
add
and
arpl
add
xor
push
pop
out
dec
lods
add
add
inc
into
inc
shlb
add
add
push
sub
add
add
sub
mov
gs
mov
aas
add
add
add
sbb
add
sbb
mov
add
add
sbb
pop
or
aam
add
add
mov
add
cmp
add
add
rclb
add
add
leave
xchg
sbb
mov
add
add
sub
ret
add
add
sub
add
add
sub
add
add
add
add
mov
repnz
add
int
dec
mov
add
add
lea
sahf
push
das
inc
dec
xor
pop
inc
jg
mov
add
fidivrl
add
jo
add
add
fadds
cmpsb
out
add
add
shrb
mov
xchg
add
add
xor
add
add
add
loop
fstl
sub
mov
bound
add
add
sbb
sldt
xor
add
add
cmp
shrb
dec
add
add
outsb
push
cmc
inc
cmp
adc
fwait
push
add
insb
inc
add
add
cbtw
mov
add
add
sbb
add
add
push
divl
add
in
add
add
loopne
add
adc
add
jmp
dec
mov
add
add
cmp
push
add
push
sub
add
add
sub
xchg
add
add
shl
sbb
add
xchg
ret
add
and
add
add
in
add
add
add
cmp
add
add
pushf
daa
testb
add
add
pop
mov
add
add
scas
nop
dec
mov
add
jo
lds
add
add
add
call
adc
add
add
aam
mov
add
inc
mov
push
add
in
add
add
jb
mov
add
add
add
add
mov
dec
add
cmpb
add
add
dec
std
pop
add
add
sub
add
add
and
inc
xchg
add
bound
add
testb
add
add
fnstenv
add
add
add
cli
add
add
lock
sub
add
add
mov
dec
fiadds
add
add
loop
add
loop
add
add
mov
dec
add
add
pop
or
pop
and
add
add
jo
nop
add
jb
add
add
aam
cmp
sub
add
add
insl
adc
movsb
add
add
lods
xor
add
mov
mov
and
mov
pop
add
mov
push
sbb
add
rcrl
clc
das
test
add
add
push
popa
sub
scas
add
add
push
test
in
add
js
add
add
enter
add
add
add
inc
mov
inc
repnz
add
sbb
mov
add
jg
add
add
pop
xor
cmovge
add
add
push
add
add
xor
fnsave
add
add
xchg
add
add
inc
sti
xchg
add
push
call
mov
add
add
add
add
add
or
daa
add
add
pop
pop
lret
add
dec
cmp
cmp
mov
add
add
xor
add
add
mov
add
pop
add
add
in
and
insb
movsl
add
add
mov
add
add
mov
add
add
or
pushf
add
add
add
addr16
mov
out
out
add
mov
add
cmc
cltd
add
sbb
cmp
loop
sub
add
add
xor
add
mov
add
mov
fistpl
add
add
stos
loop
xor
add
test
add
add
jp
test
add
add
adc
sub
sub
add
add
scas
add
push
adc
add
add
lods
pusha
cmp
and
add
add
cltd
in
add
add
scas
adc
cmp
add
add
pop
mov
pop
push
add
add
lret
daa
and
push
add
incl
add
add
inc
pop
inc
sahf
pop
add
add
cmp
imul
add
xchg
filds
add
aaa
add
add
hlt
inc
mov
adc
add
add
xchg
clc
or
add
add
mov
xor
add
add
mov
stos
mov
add
insb
mov
add
add
sub
add
popf
add
add
sbb
or
sbb
add
add
xchg
add
add
jo
bound
add
xor
add
add
and
mov
add
add
lcall
add
cmp
mov
add
add
jl
jecxz
out
add
add
imulb
add
add
push
testb
add
add
add
add
push
mov
daa
pop
adc
ds
dec
add
sahf
rolb
add
and
inc
les
add
rolb
add
add
add
adc
add
sbb
add
nop
ret
mov
add
add
pop
add
add
add
ja
dec
imul
add
cmp
stos
add
add
faddl
jne
add
ret
add
add
dec
fcom
xor
add
add
xchg
add
add
push
xchg
inc
faddl
add
add
add
sub
aad
shlb
loopne
push
sbb
cld
add
add
subb
sbb
add
add
pop
add
add
pop
out
jnp
cmc
add
add
lret
cmp
add
mov
add
add
add
add
jnp
test
jmp
fs
inc
add
dec
mov
add
add
sbb
add
add
xchg
and
add
add
into
sbb
mov
add
cmc
mov
xor
add
add
mov
add
add
mov
in
add
sub
add
dec
pop
mov
add
dec
aad
push
push
out
add
add
adc
mov
add
dec
pop
add
add
adc
xor
cwtl
add
add
add
lods
loopne
or
add
add
loope
push
add
sbb
add
add
jne
cmp
xchg
add
add
movsl
jp
ja
fwait
add
add
xchg
lea
sub
add
add
jl
jg
pop
add
add
sti
mov
popf
mov
add
add
mov
add
add
lret
adc
add
add
data16
add
pop
popf
pop
add
and
sarb
add
add
aad
cmpsl
into
add
add
je
adc
cwtl
add
add
jae
idiv
add
add
inc
sub
and
pop
add
mov
add
add
push
in
test
add
add
cmc
dec
call
add
cwtl
dec
sub
add
pop
add
add
mov
in
sub
add
add
data16
cmp
add
add
mov
add
js
add
add
inc
lods
mov
add
std
pop
mov
add
add
cld
das
sbb
and
mov
into
in
mov
add
das
outsl
push
adc
es
sti
push
add
scas
testl
adc
fsubs
add
cltd
icebp
arpl
xchg
add
add
mov
add
add
add
rolb
xchg
hlt
movl
pop
ret
sub
add
fdivrs
push
add
add
add
add
push
and
add
add
jmp
add
add
push
fimuls
data16
add
add
addb
add
out
jp
js
add
add
add
push
pop
test
cmp
add
add
xlat
jae
mov
mov
add
add
add
add
stos
cmp
push
dec
add
add
lret
stos
stos
mov
add
xor
mulb
add
add
add
add
subl
add
add
ret
add
add
mov
addr16
add
dec
decl
add
mov
cmp
add
cmc
mov
pop
fiaddl
add
add
inc
outsb
add
add
add
add
aad
fstpt
divb
add
add
jp
mov
add
inc
ja
add
add
add
add
aaa
cli
jne
addr16
add
add
out
add
add
out
pop
xor
sbb
add
add
data16
add
jle
add
add
add
pop
mov
add
dec
mov
cmp
les
add
add
add
sbb
add
add
add
add
cmpsb
out
jnp
out
add
add
ret
dec
add
mov
add
out
adc
add
add
add
add
add
sbb
imul
rolb
add
add
inc
add
add
lret
mov
lret
add
add
inc
cmc
xchg
mov
add
add
push
push
add
add
xor
xchg
mov
add
rcr
addl
xchg
testl
fisubrl
in
pushf
add
add
xor
xlat
add
add
or
add
xorb
mov
add
add
sub
add
add
fdivl
jbe
mov
add
add
aaa
sub
cmp
add
add
sub
add
add
jo
pop
pop
addr16
add
add
inc
add
add
enter
add
xchg
pop
add
add
cmp
negl
or
add
add
push
lods
mov
add
push
aas
add
add
push
rcrl
add
push
mov
in
mov
add
ds
add
add
ds
dec
add
add
ss
lahf
outsl
adc
add
add
aas
jle
add
push
icebp
add
add
js
sub
add
add
ss
add
add
add
dec
push
xor
add
jg
add
add
cmc
add
add
sub
add
add
lcall
jb
add
add
mov
bnd
add
add
rorb
add
add
mov
sbb
fwait
add
add
push
xchg
mov
add
add
pop
pop
jle
adc
add
add
add
add
add
addb
testl
fisttpll
add
add
mov
push
add
gs
add
add
lret
pusha
repz
add
add
out
add
add
out
insb
and
add
add
sbbl
add
popa
movsl
cmp
add
add
cmpsb
loop
add
or
add
add
add
stc
test
add
add
lock
mov
jne
add
add
mov
out
add
add
mov
push
cmpsb
add
add
out
mov
and
add
loopne
pop
xchg
add
sub
adc
sbb
add
add
sbb
xor
pop
add
add
sub
xchg
sldt
adc
add
add
in
dec
xor
add
orl
cli
mov
add
add
xchg
push
andb
or
xchg
xlat
ja
ljmp
mov
stos
add
add
nop
mov
add
add
xor
jns
roll
add
add
xchg
jl
add
adc
pop
push
sbb
add
add
push
lret
sarl
add
jb
imul
add
les
add
add
push
insb
push
add
add
fs
lea
cwtl
add
add
dec
orb
cmp
add
add
xor
adc
add
add
add
notb
lock
add
dec
xchg
add
add
cwtl
push
rcr
push
add
add
cmp
rolb
add
add
inc
and
add
inc
loopne
add
add
incb
add
add
and
add
add
add
test
add
add
pop
scas
fsubp
adc
jb
mov
ret
add
add
cmpsb
loop
add
data16
add
es
push
sub
mov
add
add
jl
adc
add
mov
add
push
add
add
mov
jmp
inc
xor
push
sbb
clc
movsl
dec
rolb
mov
add
dec
cmp
mov
add
add
inc
pop
mov
add
add
out
mov
add
add
add
add
leave
mov
add
add
pop
mov
sub
add
add
fstl
jno
add
add
sub
add
add
xchg
cld
daa
add
add
test
jmp
add
add
popf
mov
add
add
add
push
aad
add
add
add
xor
aas
jae
mov
add
add
mov
add
add
sbb
sti
add
add
or
je
push
lock
add
mov
xchg
add
add
inc
sbb
aad
add
add
cmp
rcll
push
cwtl
sldt
add
dec
jb
daa
add
addb
add
mov
aad
rclb
xchg
jns
dec
and
add
add
jmp
in
add
push
dec
add
add
jp
fadd
push
iret
add
add
in
mov
sub
add
add
xchg
stos
repz
add
stos
add
add
xchg
jns
and
add
inc
push
sub
add
add
sub
add
add
mov
add
add
or
add
add
xor
int
add
add
jns
add
add
and
sub
add
add
adc
aaa
add
jo
add
add
push
lcall
add
jae
push
int3
add
add
fisubrl
loop
add
add
sbb
insb
test
add
mov
adc
add
add
fidivl
push
add
andl
mov
add
add
xor
inc
cmp
add
fdivp
or
add
in
add
add
sar
cmp
xor
idivl
add
add
sbb
add
lods
flds
add
add
aas
imull
cmp
fimull
into
andl
add
and
int3
mov
add
add
add
add
rcrb
cmp
add
add
jl
pop
push
add
jo
add
add
push
or
test
add
add
push
scas
cmp
add
cmpsb
loopne
mov
add
add
enter
xchg
les
add
add
repnz
add
and
outsl
add
ds
push
and
dec
add
add
inc
addl
mov
push
push
push
add
mov
add
add
sub
rolb
add
mov
add
add
das
je
add
adc
add
dec
repnz
add
add
jne
mov
add
push
cmp
add
jo
add
add
daa
push
sbb
add
std
sbb
add
sub
adc
add
add
lcall
add
add
sub
add
mov
push
movsb
add
stos
nop
add
add
mov
xor
imul
add
jne
int
jno
add
add
mov
pop
add
jp
add
add
sahf
push
nop
jle
add
add
cmp
add
add
add
mov
sti
loopne
add
add
jb
out
cli
add
add
mov
add
add
xor
pushf
lods
add
add
loop
andb
add
out
mov
add
add
cli
mov
mov
add
add
cmp
fadds
jo
add
add
out
cmc
fwait
cmc
push
add
add
adc
pop
push
add
mov
add
inc
imul
add
add
in
hlt
jne
add
add
mov
jnp
add
add
loopne
sub
mov
add
sub
imul
repnz
testb
mov
add
add
sub
add
add
test
mov
inc
fmul
loope
add
add
add
add
add
sar
sbb
add
add
inc
mov
mov
add
add
dec
fnstenv
jns
xchg
add
jmp
add
cmovns
add
lret
mov
add
inc
push
add
or
jb
adc
inc
and
adc
cld
call
add
add
add
and
pusha
add
add
and
add
add
and
cmp
add
out
rolb
add
notb
int
int3
add
add
push
clc
mov
xchg
xchg
add
add
mov
or
add
lods
add
add
lock
add
add
xchg
dec
mov
add
add
inc
or
add
add
xchg
add
add
adc
sub
add
add
jmp
in
add
add
aam
mov
push
add
add
cmpl
add
lods
jb
xor
add
add
roll
add
sub
pop
pop
pop
popf
add
add
push
fs
add
cmp
add
add
clc
loopne
shl
xor
add
add
popa
jno
incl
add
add
out
add
jmp
add
add
add
jbe
lds
loopne
rorl
xchg
add
add
adc
add
cmpl
out
add
add
leave
push
xchg
cs
add
add
xor
cltd
test
add
add
sub
fwait
inc
xchg
push
add
add
push
shll
add
rol
add
add
add
ljmp
add
xchg
or
nopl
add
add
mov
add
add
add
dec
adc
add
add
cli
cmp
add
add
lret
add
add
pop
ret
add
add
in
xchg
lea
orb
lds
add
add
movsl
les
add
add
jo
add
add
add
sub
add
add
add
add
bound
testb
add
or
sub
stc
mov
mov
mov
pusha
fdivr
add
jecxz
add
add
xchg
jle
cmpl
add
add
add
or
add
add
stos
cmp
int
add
add
jecxz
cmc
add
add
imul
inc
or
aaa
add
add
push
cmc
movsb
sarl
nop
adcl
add
scas
cmp
mov
add
add
adc
aaa
ja
xchg
add
add
iret
xchg
pop
int3
xchg
add
add
movsl
add
adc
add
pop
lods
mov
add
inc
shrl
movsl
fildl
add
add
cmpb
add
add
hlt
and
add
add
testl
add
add
aad
add
test
add
cltd
js
push
adc
add
add
ds
add
add
cmp
add
dec
lcall
out
adc
add
roll
mov
add
jo
lea
add
fnstenv
add
add
sarb
jecxz
add
add
cmp
insl
sub
add
add
mov
dec
pushf
add
add
jl
fsubrs
add
shll
add
add
push
push
jo,pt
add
repnz
add
cmpsb
arpl
xor
add
add
daa
adc
mov
ds
inc
add
aam
add
add
and
add
add
dec
xchg
test
add
add
enter
xor
add
add
sub
add
add
add
add
orb
push
add
xchg
jae
add
add
mov
jnp
add
add
pop
rcrl
rcrl
or
loop
add
add
roll
add
add
lret
add
add
add
pushf
mov
push
add
add
sub
add
add
or
add
add
add
std
add
add
mov
and
xchg
add
add
xchg
lds
test
push
add
add
lret
jb
add
add
add
add
sbb
add
add
fs
push
js
add
pop
add
add
ss
ljmp
pop
xchg
jne
sbb
add
add
idivb
add
add
push
leave
data16
add
add
lret
pop
stc
or
fiaddl
add
add
add
mov
add
add
out
jae
jmp
add
add
icebp
or
add
adc
lods
add
out
stos
add
add
adc
ljmp
add
lods
xchg
mov
add
add
in
and
mov
add
add
int
inc
add
add
or
add
add
xchg
xchg
sbb
add
lret
add
cmp
add
add
aad
mov
add
add
add
add
sahf
mov
add
fdiv
or
cmp
add
add
mov
mov
pushf
sar
lds
add
add
mov
aad
xchg
leave
add
add
je
mov
add
test
add
add
jl
mov
add
test
jnp
scas
add
add
pop
jmp
jnp
add
add
add
inc
and
and
add
in
test
dec
pop
jns
add
add
add
leave
add
add
mov
mov
cmp
add
add
inc
and
xchg
xchg
add
add
mov
add
add
xor
cld
and
add
add
outsb
inc
add
add
cld
mov
mov
add
add
mov
cwtl
fwait
icebp
inc
add
add
gs
or
aam
add
add
and
adcl
add
sub
add
dec
aaa
icebp
call
add
mov
add
add
add
sarb
add
add
lcall
add
ljmp
mov
lods
fucomp
mov
add
dec
add
add
test
cmc
int3
add
jle
add
add
push
daa
sbb
add
inc
push
xchg
and
add
out
mov
cli
add
add
add
mov
dec
push
add
add
xchg
mov
push
xchg
test
loopne
add
das
xchg
add
add
sbb
repnz
sbb
add
add
filds
add
add
lahf
fcompl
add
add
sub
mov
sub
add
add
or
push
push
add
push
mov
add
add
je
popf
pop
cmp
add
add
sldt
add
mov
push
inc
add
xor
add
add
sub
add
add
inc
xor
add
add
mov
and
add
cmp
add
add
in
or
add
xchg
add
add
add
jp
dec
add
add
pop
add
add
mov
out
add
add
jne
in
add
add
xchg
psrlq
add
mov
add
add
in
and
incb
add
add
mov
add
add
or
add
add
pusha
jae
mov
add
fmul
jmp
add
add
add
add
xchg
add
add
enter
xor
ret
adc
add
loopne
add
add
sbb
inc
add
add
mov
rolb
add
add
in
insl
add
mov
add
mov
add
add
pop
add
add
inc
push
jne
add
add
add
icebp
movsl
sarb
cmc
out
shll
shrb
inc
add
dec
stc
add
add
repnz
add
add
arpl
add
or
mov
add
dec
movsb
notl
xlat
mov
insl
pushf
inc
add
add
movsb
pop
scas
test
add
add
daa
pop
inc
pushf
add
add
add
aaa
add
add
add
rcrl
add
cmp
add
add
jo
ret
or
popl
add
add
cmp
add
enter
add
sub
add
out
jg
lods
mov
add
add
rorl
cmp
add
add
jmp
movsb
add
add
push
and
add
add
dec
mov
sub
aas
faddl
add
add
pop
mov
addl
add
mov
lahf
mov
popa
add
add
mov
ret
je
add
add
js
fwait
data16
add
add
icebp
cmp
xchg
xchg
add
add
rcr
mov
xchg
add
add
jecxz
add
add
js
mov
push
ret
