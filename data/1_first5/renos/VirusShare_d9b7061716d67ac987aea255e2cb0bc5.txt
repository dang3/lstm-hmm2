mov
push
pushl
mov
xor
mov
push
inc
inc
outsl
insl
jo
arpl
adc
xchg
neg
push
dec
bound
or
mov
imul
sub
in
mov
push
into
mov
fcoms
iret
mov
repz
scas
or
into
in
rclb
stc
sub
mov
fisttpll
adc
jp
out
sub
push
mov
mov
pop
cmp
data16
sbb
int3
xor
pushw
cwtl
dec
inc
mov
dec
retw
lahf
mov
or
loope
cmp
in
call
xchg
pop
test
sahf
mov
aas
add
and
dec
adc
int3
ja
dec
test
fistps
pop
or
xor
push
xor
dec
pushf
lcall
xor
outsb
mov
and
std
mov
negl
lds
mov
ja
pop
daa
push
sahf
add
mov
mov
test
mov
in
mov
or
push
push
jae
jecxz
ret
xchg
xchg
mov
popf
push
je
lds
lock
pop
js
in
sarl
or
fdivl
int
push
push
test
and
inc
in
outsl
push
fsub
dec
adc
xor
test
mov
sub
jl
lea
inc
add
shll
lea
dec
imul
jp
roll
sub
inc
xor
clc
insl
jb
xchg
inc
add
jo
pop
ss
sub
leave
inc
outsb
insb
lea
or
stos
rcll
add
push
push
lcall
and
rcrb
jmp
mov
loopne
mov
or
stos
loop
loop
mov
inc
inc
lcall
outsb
loopne
rcl
adc
push
outsb
and
dec
sti
ljmp
cmp
imulb
xchg
pop
std
and
mov
mov
outsl
pop
mov
push
rorb
mov
mov
xor
xchg
push
std
inc
inc
sbb
xor
jle
cmp
add
jne
inc
in
scas
insl
lods
mov
outsl
std
test
sahf
sahf
std
mov
stos
enter
xchg
pusha
xor
in
mov
ja
fnstsw
pop
cmp
clc
inc
jb
mov
test
sub
dec
xchg
sbb
sahf
lcall
flds
jl
sbb
shl
outsl
icebp
jo
xlat
xor
cmp
fildll
scas
movsb
ror
repnz
fwait
cmp
sub
cld
add
test
xchg
mov
mov
jl
bound
and
xchg
imul
jbe
xor
jp
xor
xchg
push
clc
xchg
enter
popa
ss
daa
lock
js
lcall
xchg
ret
jne
fsub
jne
mov
dec
xor
int3
sahf
ss
js
arpl
mov
adc
movsl
add
movsb
repnz
stos
ror
test
iret
fs
arpl
loopne
sarl
inc
xchg
jle
pop
jae
leave
sbb
push
xor
pop
int3
xchg
bound
jne
inc
pop
sub
cmp
add
scas
ret
and
jg
jmp
fidivrl
je
imul
xor
cwtl
dec
decl
addr16
jns
push
icebp
les
inc
fwait
sbb
jge
mov
mov
or
mov
ficomps
dec
push
mov
and
test
out
adc
lock
in
adc
icebp
out
pop
dec
sbb
jno
cmp
sbb
fdivr
xchg
repnz
or
stos
pop
sub
in
in
add
xor
push
pushf
add
lret
or
arpl
ljmp
arpl
rcrl
inc
pop
into
mov
dec
faddl
xchg
sub
sbb
pop
fistl
sbbl
es
into
sahf
inc
mov
sub
adc
cmp
mov
leave
pxor
inc
jg
dec
adc
adc
punpcklwd
ret
cmp
push
mov
or
notb
pop
push
leave
push
xor
sbb
xor
push
les
jo
test
enter
xchg
jl
cmc
push
cld
push
outsb
rcr
xchg
mov
or
xor
insl
cmp
popa
enter
cmpsl
out
jge
imul
cvtps2pi
or
push
push
cmc
popa
pop
mov
push
arpl
nop
pusha
dec
dec
rclb
jo
loope
shrb
mov
cli
push
insl
mov
xor
sub
ds
les
daa
sub
xor
out
pop
mov
push
mov
add
popa
fstpt
sahf
add
push
mov
in
inc
mov
xchg
fidivrs
pop
or
or
pop
inc
fstps
testb
lret
cmc
mov
out
sub
movsl
fiaddl
jg
out
jns
pusha
ja
mov
roll
addl
sub
lret
popf
ds
scas
inc
popa
cmpsl
int
fldcw
mov
andl
jmp
xor
pop
inc
clc
lods
adc
jno
nop
mov
jecxz
dec
push
ret
imul
mov
lret
dec
cwtl
aad
unpcklps
mov
cmp
mov
subl
pop
ret
adc
sahf
out
adc
out
rcrl
dec
jg,pn
jmp
cmp
mov
jle
int
sarb
cmp
mov
nop
jne
xchg
mov
out
outsb
pop
movsb
fcmovbe
pop
pushf
fstpl
jg
inc
ljmp
insb
push
test
push
repz
cwtl
mov
pop
dec
xor
ss
push
loop
add
das
sbb
arpl
sub
dec
mov
mov
dec
clc
inc
outsb
or
dec
fldenv
inc
ljmp
iret
xor
xor
mov
lret
jp
pop
mov
iret
cwtl
insb
leave
enter
out
clc
lods
outsb
adc
loope
xor
cmc
xor
daa
inc
lock
dec
mov
and
insl
aam
out
mov
imul
and
std
lret
xchg
mov
add
in
mov
push
push
or
nop
aam
add
inc
jno
adc
shlb
pop
aaa
mov
cwtl
in
dec
adc
xchg
xor
mov
xchg
addr16
test
mov
push
out
adc
stc
cld
mov
mov
mov
in
int3
ja
dec
mov
xor
mov
jne
mov
dec
int
pop
pop
sbb
out
and
cmp
dec
xor
je
cli
fisubs
pop
inc
xor
stos
push
adcl
cltd
imul
loop
into
pop
stos
ret
mov
dec
mov
xchg
or
loope
push
add
out
pushf
aaa
loop
sbb
and
cmp
test
fnstcw
mov
cs
mov
pop
loope
add
pushf
jecxz
mov
cmp
push
adc
sahf
aad
mov
fdivs
cmp
jne
sbb
mov
mov
and
int3
mov
xchg
mov
ljmp
pop
fnstsw
jmp
loop
hlt
iret
dec
fcompl
xchg
jmp
gs
xchg
repz
scas
cmp
cli
les
fdivr
imul
test
icebp
mov
das
loop
mov
cmp
and
cmp
adc
push
xchg
shrl
push
add
jne
cmc
imul
sub
mov
cmc
mov
and
lret
div
jnp
hlt
cmp
leave
call
cmp
add
imul
add
push
movsl
shl
inc
into
add
pop
sbb
or
or
pop
in
outsl
pop
mov
fsub
and
movsl
xor
dec
das
cli
addr16
jmp
xor
scas
sbbb
cmp
inc
orb
jb
in
xchg
jbe
mov
dec
xor
or
jo
dec
pop
sbb
xor
or
jb
or
and
push
push
sub
scas
fcmovbe
int3
and
std
lret
and
pop
int3
arpl
adc
dec
jecxz
pop
inc
mov
sub
sub
sbb
inc
ret
sarb
mov
inc
arpl
cltd
idivl
xor
stc
pusha
rolb
mov
xor
mov
rcr
out
stos
cmc
popf
ret
add
dec
mov
mov
fldl
push
inc
aam
dec
sti
pop
scas
lret
es
fnstsw
mov
divl
mov
jne
jns
adc
jmp
notb
data16
xor
jge
stos
mov
cli
cmp
in
scas
in
mov
fsubrs
mov
and
lods
cmp
push
neg
arpl
mov
aas
lret
cmp
into
xor
dec
pop
movsb
test
add
lods
inc
gs
enter
fnstcw
mov
sarb
shld
push
lcall
pop
xchg
sbb
xor
mov
call
cmp
orl
cmpsb
or
out
cmpl
sbb
xor
or
jecxz
sub
pop
mulb
cmc
jp
jo
mov
fs
call
sbb
mov
shlb
daa
xchg
adc
fbstp
shrl
repz
mov
add
jno
xchg
shlb
mov
lods
ljmp
and
jp
nop
lds
cmp
sub
pop
cltd
and
test
xor
addr16
gs
fidivrs
fidivrl
pusha
sbb
inc
sbb
pushf
adc
add
outsb
sbb
jns
mov
jae
roll
and
xchg
in
mov
test
push
loop
pushf
sub
cli
lret
inc
loope
sub
mov
pop
sbb
aad
inc
out
stos
jg
pop
cmp
dec
mov
add
mov
je
pop
hlt
push
cmp
add
mov
addr16
cmpsl
js
das
mov
test
icebp
cmpsb
rorl
cmp
xchg
xor
enter
push
cmp
xlat
pop
xor
mov
mov
inc
xor
pop
sub
lahf
jmp
pop
jge
and
lods
xchg
pop
and
lret
cmp
pop
mov
icebp
xchg
sub
dec
mov
leave
nop
add
icebp
syscall
xor
loop
stos
fwait
or
clc
xchg
inc
arpl
fwait
dec
call
or
movsb
xchg
and
dec
push
cmp
sbb
mov
cmp
inc
inc
mov
and
xchg
cmpl
xor
hlt
ffree
mov
subb
scas
dec
int
dec
jae
dec
add
test
scas
cmc
xchg
xchg
les
jb
mov
adc
push
cli
cmpxchg
cmp
insb
stos
jae
xor
dec
icebp
pop
and
std
mov
dec
dec
add
or
mov
and
inc
enter
divb
lods
or
fists
inc
je
clc
adc
dec
ss
lods
jo
mov
popf
shrl
jle
test
sahf
inc
lods
xchg
mov
iret
rcrb
inc
or
imul
repz
mov
les
lcall
pop
pop
imul
cmc
ret
mov
aad
jns
iret
pop
xor
dec
xchg
cwtl
jb
mov
int3
subl
stos
mov
pushaw
pop
inc
sub
fwait
adc
cli
insb
daa
lea
add
lret
cs
lret
pop
movsb
mov
fxch
inc
mov
cli
incb
out
pop
jnp
jb
sub
repz
mov
push
insb
nop
sti
lds
out
out
pop
cmpsl
es
fnstenv
in
movsb
mov
dec
icebp
imul
adcl
add
subb
jmp
je
lds
mov
out
mov
pop
es
inc
mov
es
aam
sub
pop
sbb
adc
pop
xor
pop
fwait
adc
repz
icebp
jmp
cltd
mov
mov
push
scas
cmp
sahf
std
jno,pn
pop
cmp
jg
add
jmp
test
pop
addr16
out
dec
jmp
rolb
fs
iret
icebp
dec
imul
lea
iret
inc
push
jp
outsl
jns
subl
xchg
mov
adc
jmp
xlat
test
inc
ds
add
leave
inc
xchg
jns
aas
jmp
mov
xchg
sub
shrl
into
nop
xchg
xchg
mulb
cmp
mov
sbb
stos
and
xchg
ret
sub
rorb
jg
jnp
push
aaa
push
rcll
gs
pushf
stc
jo
fidivrl
cltd
mov
add
jb
movsl
sbb
sbb
int
and
clc
push
fwait
aad
pop
aam
xor
inc
scas
xchg
sub
xchg
outsl
pushf
in
andl
cmpsb
mov
fnsave
or
fiaddl
std
xchg
es
leave
inc
cltd
jp
fdivr
dec
jecxz
insw
in
xchg
mov
mov
mov
or
xchg
xchg
mov
mov
daa
out
jecxz
push
mov
jne
out
push
sub
jecxz
adc
addl
push
sbb
pop
and
push
xor
sbb
repz
jle
mov
jg
sub
jmp
mov
inc
dec
sahf
fisubrs
shl
xor
into
push
pop
cmp
stos
aas
jb
add
cmp
cmp
fists
cmpsb
pop
cltd
xor
fucomp
xorl
add
movsl
cld
jecxz
or
shlb
and
and
outsb
pop
lock
add
ss
adc
in
out
lds
and
jb
aaa
ret
xchg
lods
cmp
mov
pop
push
sbb
xchg
out
xchg
scas
shl
mov
sub
add
sbb
lahf
pushf
int
addr16
fdivl
in
fcmovnb
lea
loopne
shlb
pusha
insl
inc
bound
test
in
dec
pop
clc
xor
or
xor
test
fwait
sti
xor
cmp
cmp
sub
test
mov
jecxz
xchg
or
pop
loope
pop
lcall
aas
cli
jb
mov
or
mov
push
add
sbbl
repnz
inc
xchg
aas
into
lret
dec
or
jo
lret
mov
stc
js
and
repz
jbe
inc
push
mov
mov
or
mov
or
movsl
pop
aas
and
fbstp
in
add
add
popa
adc
cmpsb
jg
cmp
xor
push
push
xchg
outsb
xor
sarl
dec
adc
and
and
cmp
daa
xor
pop
sub
fs
loope
xlat
adc
jno
aaa
mov
jg
stos
pushf
ljmp
out
lret
sbb
repnz
pop
sbbb
sub
sbb
push
and
and
fwait
xor
push
pop
jmp
add
dec
dec
pusha
xchg
inc
or
into
mov
mov
mov
mov
mov
jae
sar
dec
add
pop
add
inc
int3
sub
fimuls
bound
cmpsb
addl
testl
adc
dec
xchg
fsubrp
outsb
pusha
lock
pop
jl
fxtract
mov
lods
int
aas
sub
mov
jno
mov
mov
aad
loop
loope
adc
cwtl
or
push
xchg
loop,pt
jmp
into
xchg
pop
sbb
andl
push
xor
ret
imul
inc
jle
dec
pop
in
pop
and
jecxz
lock
xchg
popf
mov
sbb
popf
fwait
push
stos
loope
cli
push
jae
std
push
hlt
xor
dec
enter
in
lock
sbb
sub
mov
fistpl
pop
push
fs
mov
outsb
sti
imul
aad
cmp
cmp
pop
mov
frstor
or
ja
sbb
xchg
cmc
ret
or
outsl
dec
jbe
arpl
scas
jmp
sub
cmp
or
movsb
dec
xor
mov
xor
data16
icebp
pushf
inc
jecxz
mov
cmpsl
movsl
xor
es
enter
out
xchg
adc
paddusb
jns
jnp
xorb
and
push
outsb
shl
call
cmc
mov
psubq
xor
mov
xor
mov
sbb
and
mov
cmc
decb
and
adc
outsb
inc
test
and
xchg
outsl
inc
xor
sub
outsl
sub
sub
hlt
iret
jecxz
aaa
pusha
jmp
sbb
and
push
loop
addl
dec
ljmp
imul
adcl
xor
mov
out
mov
dec
in
adc
fisubrs
ljmp
inc
jae
xorb
pushf
mov
test
pop
shll
rcll
pusha
dec
loopne
and
push
fistpl
pop
mov
mov
jnp
stos
fistpll
fwait
sub
or
add
nop
mov
push
lcall
mov
pop
adc
div
call
clc
xchg
add
mov
mov
jne
gs
mov
fstpl
lcall
js
std
cltd
pop
and
ljmp
inc
sbb
or
jle
xchg
add
call
out
lahf
loope
sbb
cmp
daa
mov
mov
or
out
popf
push
push
into
je
stc
xor
rcr
repnz
push
sbb
iret
add
pushf
inc
scas
push
test
test
and
orb
jae
leave
adc
sub
mulb
bound
ja
mov
mov
nop
cmp
push
and
or
push
packsswb
pop
cltd
add
sub
mov
pop
add
pop
call
popf
pop
test
jecxz
mov
or
jns
leave
daa
and
add
testl
sti
jge
mov
lcall
and
mov
xchg
sub
fbstp
leave
dec
xchg
outsb
jecxz
imul
cmp
mov
in
push
mov
dec
xor
mov
dec
pop
pushf
or
jb
pop
adc
lds
fs
cmp
ret
add
repnz
cmp
xchg
sbb
fcompl
lds
add
mov
popa
cmp
vmovhps
mov
aas
push
jp
add
push
jg
cmp
repz
std
in
cmp
aas
mov
jns
inc
rorb
rcrb
dec
ffree
mov
xor
jnp
mov
pop
aad
mov
jg
push
pop
out
orl
sbb
cmp
stos
jbe
stos
rcll
test
test
cs
pusha
out
test
cmp
hlt
sti
jno
fildl
icebp
mov
dec
sub
icebp
mov
xchg
push
xlat
in
or
test
xchg
lods
jb
xor
add
fabs
xor
lds
cmpsl
mov
popa
mov
sub
push
jae
mov
mov
push
ret
fistps
setb
cld
mov
mov
sub
int
sbb
xchg
scas
mov
xor
xchg
jae
and
pop
fs
dec
mov
and
sub
mov
and
xchg
enter
adc
outsb
xor
enter
hlt
push
cmp
test
daa
fwait
pop
xchg
out
sti
fbld
jmp
in
or
cltd
push
push
mov
cs
stos
out
fcompl
addr16
enter
ljmp
lods
in
lret
sbb
sub
adc
arpl
ljmp
dec
jp
stos
mov
adc
jp
dec
es
lods
hlt
dec
test
inc
add
cmp
js
sbb
decl
adc
rolb
add
pop
or
ljmp
mov
dec
in
loopne
add
or
or
cmp
aaa
shrb
std
push
arpl
pop
pusha
std
mov
repz
mov
mov
xchg
addr16
push
pop
jmp
add
xchg
jb
pop
and
cmp
push
inc
decb
filds
fstpt
mov
sub
inc
enter
pop
leave
and
xchg
sub
loopne
push
fs
jmp
lds
xchg
push
fisttpl
push
xchg
repnz
xor
sub
das
fs
jno
jecxz
aad
lcall
xchg
loopne
xchg
cmp
inc
mulb
fsubs
pushl
mul
addr16
popf
in
in
add
sub
js
in
jecxz
lcall
int
mov
pop
and
insl
movsl
mov
cmp
xor
pop
add
sub
idivl
imul
inc
mulb
xchg
clc
sbb
jle
lea
sahf
fists
cmp
rorb
cmpsb
adc
add
fldl
lock
pop
xchg
lods
arpl
aam
sbb
insb
pusha
ljmp
adc
mov
outsl
popa
jmp
pop
je,pt
outsb
popa
jp
push
js
xchg
lret
outsl
sbb
jb
xchg
sub
xchg
mov
js
cmp
rclb
rcrb
out
push
or
or
js
dec
or
push
cmpsb
inc
mov
and
call
cmpsl
popa
jl
out
push
or
icebp
pop
lock
loop
dec
pop
push
sbb
sbb
xor
addb
inc
push
mov
add
in
mov
sub
rorb
scas
mov
adc
or
push
push
mov
out
ja
in
sbb
xchg
xchg
jg
das
je
je
es
popa
fnstsw
ds
add
jns
ret
rolb
cltd
and
lret
in
mov
fisubrs
scas
push
div
shrl
add
jg
mov
cmp
cmpsl
in
and
mov
gs
mov
pop
adc
dec
movsl
adc
sbb
insb
sarb
test
cmp
jnp
rol
mov
xor
clc
and
pop
add
push
mov
pusha
inc
iret
into
lods
or
inc
add
xor
push
out
int3
es
or
mov
pop
adc
jo
sbb
mov
inc
mov
cmpsb
jo
push
and
dec
add
xor
cmp
lds
dec
loop
xchg
xchg
not
or
or
sub
mov
dec
adcb
fwait
pushf
fwait
testb
mov
repz
or
ficomps
int3
outsl
add
popf
movsl
loope
fwait
iret
inc
xchg
mov
out
pushl
lods
leave
inc
aas
mov
mov
push
bound
push
faddl
or
sub
mov
lods
push
subl
add
arpl
insb
cli
push
fwait
outsb
pop
int
jge
or
add
dec
cmp
gs
mov
pusha
insl
inc
cmpsb
sar
shl
mov
pop
cltd
pushf
in
inc
std
xchg
cmpsb
xlat
jge
js
or
fstl
xor
mov
icebp
imul
cli
adc
lds
xchg
add
pop
jno,pt
fs
testl
adc
adc
push
ja
push
pop
out
xchg
sub
imul
cwtl
sbb
mov
pop
adc
sbb
cs
or
ss
push
pop
sbb
insb
test
gs
lret
repnz
or
push
push
aas
lcall
js
or
or
ja
mov
mov
mov
jecxz
pushf
shl
loope
icebp
in
and
in
cltd
mov
inc
dec
add
jbe
imulb
insl
in
adc
push
lock
and
and
and
lods
loop
fsubrp
cmpsb
shlb
dec
xorl
call
rcl
jnp
jecxz
in
sub
cmpsl
jecxz
clc
ja
pushl
xchg
inc
fsubrp
mov
enter
sarb
pushf
dec
subl
jmp
lret
fisttps
push
dec
mull
jnp
pusha
ss
pop
and
mov
shrl
in
fwait
addr16
ja
aaa
fidivl
ss
jne
push
repnz
out
xchg
and
dec
jp
jecxz
mov
sbb
mov
sbb
push
ret
es
xchg
sahf
pop
rcl
xor
mov
test
imul
pop
sti
clc
imul
and
cmp
mov
adc
xchg
sti
imul
ljmp
fimuls
ss
mov
xlat
les
adc
leave
xor
in
xor
sub
les
adc
xor
cmp
jnp
push
cmp
inc
jecxz
cmp
add
mov
rcr
rol
ss
dec
xor
mov
jl
xor
out
add
aad
arpl
xchg
push
dec
and
sbbl
scas
xchg
push
mov
sbb
or
mov
pop
ds
dec
pop
push
sbbl
ds
mov
push
shl
add
push
dec
sbb
xor
inc
jg
std
insl
push
xchg
out
cmp
inc
xchg
push
lods
fs
into
out
dec
iret
sbb
cmp
in
fistps
aaa
icebp
mov
clc
inc
cld
mov
pop
or
xchg
fstp
mov
fstps
sub
ja
test
sahf
push
movsl
js
inc
xor
out
or
xchg
inc
into
cwtl
add
sti
dec
arpl
bswap
test
or
mov
out
fcoml
inc
and
sub
int
xchg
repz
jle
jns
mov
scas
es
std
out
sub
push
jl
outsb
sbb
dec
add
lahf
xchg
cli
fmulp
xchg
lock
insb
das
inc
jle
push
mov
fdivrl
jnp
in
mov
movsb
xchg
stc
aam
xchg
jae
int
cmp
and
clc
vprotb
or
loope
mov
fcoml
cltd
xchg
xorl
mov
mov
repnz
fnstsw
pop
jecxz
mov
fsubrs
paddsw
mov
xorl
fidivl
test
jge
and
cld
out
out
cmp
mov
mov
lods
xor
testl
adc
mov
cmp
outsl
cli
push
adc
es
dec
cwtl
addr16
mov
sti
insl
push
rclb
daa
fldt
push
pusha
jecxz
mov
outsl
cltd
aad
xchg
mov
rcll
call
mov
adc
gs
add
sbb
aas
imul
xor
jmp
loope
out
outsl
inc
and
ljmp
stos
je
push
aas
mov
sti
or
xlat
xchg
rolb
in
lahf
pop
je
rcrl
xchg
lods
cmc
cmp
push
cwtl
push
xorl
cmpsl
xorl
adc
jmp
pop
add
iret
gs
mov
imul
scas
cmp
pop
lahf
notb
ret
and
fcoml
xchg
push
fiaddl
xchg
mov
jl
movsb
sbb
in
cmp
add
insl
mov
mov
into
mov
std
in
xchg
adc
and
push
cld
test
push
add
sub
or
jg
xchg
xchg
cmp
and
sbb
mov
seto
xchg
test
inc
sbb
xchg
mov
popa
pop
mov
scas
mov
sub
out
sbb
mov
fwait
lret
mov
test
jge
stos
xchg
mov
ficomps
stc
lock
push
dec
notb
imul
pop
mov
ret
xchg
adc
gs
insl
sbb
lcall
jnp
push
push
pop
cwtl
leave
out
imul
pop
js
movsl
sbb
shr
shl
aaa
xor
dec
out
lods
jno
sbb
inc
pop
cmp
imul
sub
pop
adc
js
lret
cmp
sbb
push
jne
inc
mov
inc
ja
xchg
fcomi
inc
jae
cmp
sahf
xchg
mov
jno
sbb
sbb
bound
andb
sbb
in
dec
lods
push
pop
jne
cmpsb
aad
adc
imul
cmp
mov
scas
fadds
sbb
add
cmc
cs
cmp
mov
bound
push
and
test
pop
cmc
dec
outsb
ror
mov
pop
pop
mov
jae,pn
rorl
faddl
xor
jno
out
in
repnz
pushf
xor
outsb
mov
pop
xor
lret
jnp
dec
js
js
cmpsl
shlb
in
jge
imul
cmpsl
cmp
test
out
xor
adc
out
cmp
mov
pop
jmp
mov
fwait
jg
jmp
cmpsl
xor
out
pop
mov
scas
inc
mov
push
adc
mov
call
push
mov
hlt
lret
inc
outsb
in
les
les
push
xchg
pop
inc
lock
js
or
jo
mov
call
dec
xchg
add
rcll
imul
or
stos
jp
sbb
out
je
and
jbe
xor
testl
cmp
inc
xor
mov
xor
std
jbe
sub
icebp
pushf
sbb
ja
inc
dec
hlt
mov
mov
jmp
xor
or
ljmp
repz
mov
enter
add
enter
mov
stos
imul
scas
pop
jmp
jne
xchg
andl
out
aam
gs
mov
or
cli
ret
mov
xor
xor
mov
in
xchg
xchg
shlb
cmp
jno
mov
cmp
mov
test
ja
fisubrs
jecxz
je
cld
mov
dec
in
std
in
adc
inc
ficomps
push
jle
cltd
pop
in
enter
push
dec
add
or
jg
cmp
lea
ja
adc
cld
sub
lock
aad
jns
xor
or
sbb
xlat
add
mov
add
jne
cmp
bound
test
out
push
jb
decl
gs
mov
mov
inc
ficompl
mov
lret
aas
pop
dec
add
xlat
rclb
test
cs
aam
hlt
xchg
push
or
dec
shrb
add
xchg
mov
jns
int
add
in
mov
mov
or
lcall
push
mov
xchg
out
add
es
jb
add
pop
mov
popf
and
sahf
les
jle
outsl
out
or
add
gs
les
push
pop
pushf
incb
push
ljmp
push
aam
cmp
pop
outsl
enter
cli
decb
cmp
xchg
mov
popa
outsl
lods
popa
push
xchg
je
push
inc
push
filds
stos
dec
daa
xor
stos
lahf
aad
cmp
cltd
sti
test
cmpsb
es
jo
fs
and
jne
push
add
mov
mov
sub
add
rcll
sbb
mov
cmp
mov
loopne
stos
rol
int
or
lret
inc
mov
xchg
add
imul
adc
xor
je
mov
xchg
subb
call
xor
sbb
fistps
jl
pop
js
scas
inc
mov
jbe
push
xchg
shll
clc
fstpt
fcoms
push
mov
sbb
inc
imul
cmpl
sub
daa
push
pushf
adc
pop
pop
mov
mov
pop
sbb
push
adc
push
jle
pop
ja
lcall
push
push
orl
mov
mov
cli
mov
push
pop
sti
movsl
insl
call
jge
sbb
and
pop
out
lea
xor
dec
push
aad
push
imull
xchg
arpl
fidivl
or
mov
lahf
and
lret
push
repz
je
add
mov
inc
in
in
sti
loopne
pop
popa
xchg
ss
icebp
and
sub
mov
jns
jnp
push
adc
cmp
cmpsl
mov
lahf
lret
sti
pop
int
inc
ds
sarl
push
repnz
pop
call
sahf
lret
ljmp
pop
add
sbb
pusha
xchg
hlt
pop
mov
hlt
sbb
dec
outsb
lds
sub
xchg
xchg
sub
sub
outsl
dec
out
out
repnz
sub
mov
and
inc
rorb
xchg
sbb
pop
int
out
push
inc
and
pushl
xor
and
jg
xchg
test
mov
rolb
int
daa
mov
mov
rorl
push
dec
xlat
stc
das
dec
pusha
mov
mov
ja
cld
and
xchg
mov
movsl
rol
cs
rclb
movsb
rcl
call
add
int
or
inc
insl
aam
push
xchg
jno
xchg
jno
add
adc
insl
push
gs
incl
xor
dec
stos
mov
stc
jae
cmp
dec
outsb
lahf
push
jne
es
sub
sub
cmp
xor
movsb
xchg
xor
push
jg
int3
movsl
mov
ret
je
rcrl
mov
xchg
cwtl
pushf
std
in
or
sbb
aam
cmp
js
shlb
mov
test
js
mov
out
test
outsb
mov
xchg
xchg
adc
xchg
dec
cltd
push
movsl
inc
repz
lahf
push
lret
pop
inc
loop
or
mov
xchg
shrb
inc
dec
xchg
push
cmp
push
inc
leave
inc
addr16
pop
dec
jg
lds
mov
mov
imul
mov
dec
mulb
aad
fistpl
adc
push
or
jnp
adcl
inc
je
ljmp
push
out
out
lods
inc
sub
lret
sahf
call
insl
scas
pop
adcb
mov
lcall
mov
push
jbe
push
mov
xor
dec
call
out
mov
in
push
dec
popf
push
out
imul
add
inc
and
repz
nop
bound
and
sarl
or
jo
pcmpeqd
adc
pop
add
scas
mov
or
std
mov
aaa
and
iret
xchg
inc
mov
inc
xchg
lcall
and
push
jnp
xor
push
push
cmp
xchg
xor
insb
rolb
popl
sahf
mov
add
mov
fnstenv
mov
pop
out
fsubr
iret
push
cltd
lahf
xchg
fstpt
movsb
mov
ss
mov
lcall
cwtl
mov
xchg
push
outsl
into
adc
mov
inc
pop
aas
push
filds
fs
shrl
sbb
stos
and
bound
cwtl
add
and
xor
sti
lds
dec
mov
loop
cmp
bound
adc
push
imul
je
popf
sahf
popa
popf
jge
xchg
stos
dec
xchg
stos
fsubl
hlt
mov
and
mov
cltd
add
adc
fisttps
push
mov
sub
rcll
cmp
jmp
mov
mov
mov
dec
movsl
mov
push
pop
push
xor
pop
sti
cmp
cmpsl
dec
xchg
in
xor
mull
xor
push
sbb
sbb
cld
xchg
jle
xchg
movsb
pop
inc
inc
nop
pop
fwait
cmpsl
mov
leave
ds
std
pop
in
adc
fnstsw
pop
mov
stos
mov
out
test
inc
add
mov
inc
aaa
sti
pop
adc
lea
lcall
int
in
xchg
repnz
lcall
or
sbbb
enter
iret
and
mov
fiadds
sahf
sti
lcall
mov
dec
sub
jl
cld
cmpsl
lock
int3
inc
repz
mov
cli
aad
or
mov
rcr
dec
sub
jnp
jmp
and
mov
repnz
mov
cli
sub
and
cmc
cli
mov
stos
loop
push
push
repz
fcomps
dec
jge
sbb
rcrl
push
mov
mov
es
push
jmp
xor
lods
xor
push
mov
and
gs
cli
movsb
dec
cmp
fsubrs
fsubrs
sub
mov
subl
push
lea
into
jbe
adc
punpckldq
in
cmc
mov
xchg
add
lahf
aas
mov
scas
sbb
nop
ljmp
mov
adcl
mov
add
fucomip
dec
out
loope
hlt
seto
add
hlt
movsl
push
or
in
push
popa
movsb
test
hlt
xchg
cmp
je
and
mov
fsts
mov
sarb
xlat
mov
in
loopne
stc
daa
imul
and
pop
and
addr16
push
dec
mov
mov
mov
cmc
pop
into
gs
and
fbld
iret
add
push
aam
dec
add
adc
jle
test
or
pop
in
pop
test
sbb
cmc
int
subb
sbb
add
xor
inc
mov
popf
jbe
insb
out
mov
cmpsb
ret
pop
jae
scas
mov
jae
sub
inc
popw
je
cmp
mov
or
mov
mov
lods
sti
cmp
pushf
jmp
neg
imul
popf
mov
into
hlt
bound
mov
dec
xor
out
or
test
sarl
or
inc
insb
std
pinsrw
les
addr16
cmp
jb
and
sbb
mov
xor
sbb
popf
in
xchg
mov
push
lods
mull
add
in
jno
inc
mov
mov
adc
rcll
mov
jecxz
lret
jp
jns
xlat
loopne
ss
in
in
jecxz
and
in
call
cmp
sbb
dec
es
sub
movl
xor
lcall
outsb
xor
enter
int3
or
mov
pop
cmc
sbb
fisttpl
shll
lret
lret
cmc
cwtl
mov
mov
xor
add
sub
sbb
cmp
sub
and
xchg
jnp
lret
mov
gs
ss
or
xchg
or
cmp
xchg
int3
out
fbstp
bswap
or
adc
insl
int
cmpsl
sahf
lods
in
jbe
mov
pop
or
push
js
or
xor
lahf
mov
in
lods
inc
nop
or
pusha
popf
pop
jae
pop
test
dec
mov
aam
mov
aas
dec
insb
xchg
insl
mov
stc
sbb
push
mov
data16
push
movsb
cld
inc
xchg
sbb
int
pop
lcall
push
and
aam
jno
fs
ljmp
mov
js
and
adc
push
repnz
push
adc
jge
pop
dec
cld
adc
pop
les
mov
sbb
adc
lock
mov
mov
das
push
movsl
iret
cmp
adc
inc
sahf
test
jmp
pop
roll
mov
lods
jbe
adc
dec
xor
stc
ja
add
fistl
aas
pop
out
loop
pop
mov
xchg
push
dec
push
lods
xchg
adc
mov
xchg
out
sbb
add
imul
push
dec
or
mov
xor
in
push
jmp
sub
imul
loope
popa
pop
jne
jecxz
mov
pop
sbb
ret
inc
and
lds
inc
push
cwtl
cmp
xor
mov
mov
and
mov
inc
in
pop
fwait
test
insb
fmulp
sub
subl
inc
sbb
xchg
loope
xchg
push
cli
jne
adc
sbb
inc
je
or
ja
xor
mov
decl
enter
dec
cli
push
push
xor
xchg
cmpsl
decb
int3
mov
cld
inc
xor
arpl
xor
mov
lea
imul
xchg
loop
dec
jb
push
rcll
cmp
mov
mov
jo
pop
push
fiaddl
cmp
cltd
cltd
dec
mov
or
iret
pop
inc
repz
call
test
fiaddl
fisubrl
sub
xor
pop
jno
imull
pmaxub
icebp
mov
shlb
adc
sbb
cmp
lret
adc
dec
add
fcomps
jo
fsubrl
subb
jnp
dec
fidivrl
rorl
mov
lock
mov
sub
je
stos
scas
jo
push
jne
inc
xor
lock
cmp
loopne
and
lahf
xlat
outsb
sub
ffreep
in
shl
cmp
sbb
and
xchg
mov
jmp
int
inc
nop
das
ss
andl
mov
dec
outsl
int3
jg
js
fcmovne
fisubl
test
push
stc
sbb
mov
jno
sti
and
mov
pop
push
mov
mov
cld
mov
sub
pop
xor
xlat
icebp
in
call
dec
loope
jns
push
ret
dec
inc
mov
mov
imul
out
xchg
scas
jb
pushf
or
testb
ljmp
sbb
jle
sahf
adc
cmpsb
cs
and
rep
and
mov
mov
sar
aam
lret
dec
jns
push
or
cmpsb
pop
sbb
xchg
lds
pushf
push
cmp
or
cmp
push
pop
js
fs
mov
rclb
pushl
aam
sub
orb
pop
pusha
mov
loop
ret
ret
mov
cld
repz
dec
mov
cwtl
fisubrs
pushl
sub
mov
lahf
cmp
sbb
cmp
dec
push
mov
rclb
or
fwait
daa
cmp
lcall
xchg
clc
imul
push
cmp
das
mov
push
sti
jb
mov
jno
test
hlt
arpl
out
xor
aas
ret
lods
push
out
dec
in
out
fwait
xchg
jne
fisttpll
imulb
adc
mov
push
dec
bound
push
jne
lret
and
sub
mov
imull
mov
cld
pop
jl
pop
in
mov
sbb
repnz
cs
mov
sbb
movsl
insl
mov
popf
ficompl
cwtl
jne
out
into
rclb
out
add
mov
and
push
sbb
pop
mov
mov
rcll
pop
aas
out
aad
out
sahf
adc
dec
ljmp
add
dec
push
insb
mov
sbb
ret
lcall
inc
mov
cmp
pop
xorl
push
out
sub
cmp
mov
sahf
aaa
shlb
ret
bswap
mov
cmp
movsb
sub
in
inc
cmpsb
dec
test
scas
arpl
mov
cmp
jbe
dec
sbb
lds
test
mov
movsb
inc
icebp
dec
lret
mov
out
or
movsl
mov
pop
push
outsb
ds
xchg
imul
xchg
stos
bound
mov
sub
lds
xor
push
into
aaa
inc
aam
into
punpckhwd
pop
sar
mov
xor
fnstenvs
dec
int
movsl
pop
dec
popl
pop
aaa
out
popf
sbb
cmp
and
addr16
adc
stos
lret
add
or
scas
sbb
mov
push
les
xor
cltd
and
add
inc
xor
ret
lods
xchg
lods
and
ret
sub
and
dec
push
add
xlat
sub
adc
cmp
call
sub
mov
mov
aas
sbb
dec
lock
adcb
push
sahf
mov
cli
jg
adc
dec
por
cwtl
push
push
icebp
out
jecxz
push
frstor
sbb
jle
popa
stos
sub
dec
sar
hlt
push
jae
push
pop
jge
push
inc
mov
movsl
lahf
inc
cmpl
cmpsb
sub
ffreep
inc
jne
jecxz
sbb
jmp
shr
dec
mov
dec
pushf
sub
cmc
rcrb
movsl
scas
push
rorl
inc
shrb
out
dec
std
jmp
aam
iret
idivb
jns
xchg
sbb
sbb
sti
and
das
lock
rcll
inc
jmp
cs
ds
mov
pop
mov
repnz
cmp
mov
jp
into
sahf
lret
sti
add
stos
jl
add
int3
sub
or
js
fisubs
push
out
ljmp
data16
dec
xor
mov
pushf
in
jle
movsl
dec
pop
arpl
add
lds
pop
subl
jge
pop
dec
push
scas
jo
xor
cmp
mov
fcomps
add
inc
rcr
test
inc
arpl
mov
or
mov
sarb
pop
mov
test
sbb
sub
push
out
inc
mov
push
cltd
je
add
dec
imul
lea
daa
adc
fsubrp
jo
dec
in
mov
jp
fldl
js
decb
outsl
das
mov
lahf
xchg
scas
test
sti
add
add
inc
mov
lcall
and
in
orl
mov
add
cmpsl
dec
cld
or
xor
pop
loop
add
jo
mov
push
aam
pop
rcll
or
hlt
shll
in
xchg
out
sbb
cvtps2pd
sbb
pop
lods
mov
mov
pushf
int3
sub
stos
imulb
push
fsubrs
inc
inc
outsb
popf
pop
rolb
popf
lret
out
lahf
push
add
cli
pop
cmpsl
int
jmp
ror
xchg
inc
int
scas
xchg
aaa
cltd
cwtl
and
fmuls
pop
or
test
cmp
xchg
cmpsb
xor
test
sahf
lods
cld
ret
sbb
clc
sub
jns
mov
lock
clc
mov
push
adc
adc
sbb
leave
adcl
inc
lods
push
faddp
int
push
jne
lcall
mov
mov
in
out
xchg
rep
sub
inc
xor
or
je
dec
lods
xor
enter
nop
test
fs
sub
mov
jns
pop
cmp
xchg
mov
sbb
fsubl
out
mov
scas
ds
dec
add
mov
mov
aam
fdivr
cli
sbb
push
dec
push
leave
sbb
icebp
gs
lods
imul
xor
cltd
ja
lods
popa
sbb
lds
xchg
std
lret
inc
pusha
cmp
mov
dec
sbb
cwtl
adc
xchg
sarb
push
xor
mov
gs
fs
call
movsl
mov
xchg
in
aam
push
fsubrs
add
lret
mov
xchg
push
mov
xlat
and
insb
inc
and
pushf
movsl
xchg
cmp
cmp
lea
into
pop
aaa
jnp
mov
mov
mov
adc
out
shrl
jecxz
mov
inc
mov
stc
insb
out
das
adc
fildll
lock
mov
add
add
adc
loop
xchg
pop
pop
aad
inc
jo
ljmp
in
xlat
out
les
pusha
mov
push
std
mov
dec
dec
sbb
mov
xor
jb
int
lcall
test
into
cmc
out
mov
mov
gs
push
mov
mov
mov
es
jecxz
adc
mov
dec
mov
bound
mov
mov
and
sub
es
rol
ljmp
ret
mov
sti
mov
sbb
dec
pop
jmp
test
sti
nop
ret
ja
jp
add
sub
aad
in
data16
pushf
mov
xchg
mov
xor
jle
pop
push
ds
out
cmp
mov
pusha
and
fmuls
std
aad
hlt
lock
push
in
pop
xor
negb
mov
inc
jns
cmp
popf
jns
or
dec
jno
call
adc
arpl
lods
imul
loop
mov
in
xchg
xor
repz
cld
jl
ret
mov
add
jg
mov
ret
mov
out
adc
inc
and
dec
jmp
shrb
stos
mov
add
push
sub
sbb
dec
xor
mov
lahf
mov
clc
std
xchg
dec
xchg
inc
cmp
mov
stos
or
push
cmovns
loope
leave
xor
jg
popa
in
in
ffreep
add
gs
loopne
fs
mov
sbb
adc
aaa
cmp
shrd
dec
cs
dec
xchg
nop
std
fcoml
and
movsl
pop
cmc
pusha
sub
movsb
xchg
sti
ss
movsl
out
out
orb
pop
mov
and
ret
out
pop
shl
ret
scas
cmpps
inc
fistl
adc
pop
rolb
mov
movaps
mov
or
cmpl
cltd
sub
jl
mov
push
rorl
push
mov
shrl
sbb
nop
stos
mov
dec
inc
push
stos
es
or
inc
pop
mov
dec
arpl
cmp
imul
lret
scas
sahf
cmp
mov
pop
dec
push
dec
dec
xor
jmp
mov
test
adc
cmp
lods
into
sahf
pop
pushf
gs
xor
lret
mov
int3
cmp
popa
and
cwtl
sub
mov
lock
adc
iret
mov
clc
loopne
scas
pop
add
pop
cli
insl
push
or
addr16
jge
std
xchg
bound
mov
and
xchg
mov
jnp
xlat
add
jl
push
lods
repnz
jg
mov
loope
mov
out
and
outsl
clc
cmp
jns,pn
into
ret
fimuls
jg
mov
inc
dec
xchg
pusha
push
mov
pop
xchg
xlat
xchg
sbb
dec
pop
sbb
data16
cmpsb
push
in
aam
loope
dec
push
clc
loopne
dec
sub
jnp
les
hlt
and
pop
pop
inc
arpl
and
fwait
stc
ret
mov
mov
out
js
dec
test
cwtl
clc
adc
mov
scas
leave
dec
movsl
push
fwait
shll
jb
push
and
cltd
adc
adc
fcomps
push
push
sbb
mov
aad
inc
jo
fwait
lods
cs
cs
jp
idivb
or
ds
xchg
pushf
push
pop
sarl
stc
xchg
mov
or
in
jp
test
mov
mov
jp
jbe
scas
cmp
out
inc
ret
and
pop
or
add
scas
adc
sub
cmovs
fisttps
lods
sub
gs
inc
ficomps
insb
cld
sbb
lea
pop
inc
xchg
push
adc
push
fcomps
mov
pop
loopne
jmp
dec
imul
cmp
stos
inc
je
jge
leave
sub
or
out
cmp
push
rcrl
mov
lret
nop
and
cmp
sub
jp
int3
cmpsb
adc
xor
cs
in
push
loopne
mov
mov
or
repnz
pusha
cmp
xor
aas
add
ret
in
clc
lods
mov
xor
add
sub
push
inc
push
andb
push
repnz
stc
mov
jp
aaa
jae
xor
test
mov
std
setl
mov
aam
jmp
movsb
daa
lds
es
mov
scas
icebp
outsl
cs
jb
push
mov
mov
and
lcall
out
clc
insb
and
push
and
ja
aas
nop
popa
cmp
pop
lret
jmp
movsl
adc
or
addb
pop
in
or
push
roll
scas
pop
insl
adc
jno
push
loopne
push
jnp
sarb
outsb
shr
inc
daa
push
push
pop
cld
sti
mov
lds
sub
cmpb
dec
and
frstor
mov
xchg
dec
insb
hlt
sbb
inc
jmp
js
dec
jp
and
mov
fiadds
mov
xchg
cmp
push
andb
cmp
xchg
add
dec
test
pop
ret
ret
xchg
mov
mov
mov
idivb
test
cld
mov
loope
push
pop
loopne
repnz
out
clc
aas
cmp
pop
loope
mov
pop
lahf
aas
ja
lds
test
decl
xchg
cmp
cli
or
aam
cmp
pop
or
test
mov
shl
pop
shlb
xlat
xor
sbb
sub
push
sbb
inc
bound
or
dec
jp
pop
cs
popf
sbb
jl
dec
out
push
ffree
aaa
dec
les
mov
adc
popa
pop
sbb
outsb
into
ror
mov
mov
repz
fisubrl
iret
dec
mov
mov
xchg
cltd
imul
sub
sbb
dec
mov
sbb
imull
pusha
xlat
mov
fstps
gs
mov
sub
test
bound
filds
jge
mov
xor
popl
aad
adcb
divb
mov
inc
xor
aam
mov
lret
push
xchg
inc
dec
imull
inc
ds
xor
inc
and
pop
je
lret
stc
pop
cli
mov
fstps
push
and
rcl
clc
sub
stos
jecxz
ret
addr16
and
shlb
push
jb
jbe
inc
ja
orb
or
je
mov
push
adc
cmp
std
cld
cltd
leave
out
inc
mov
pop
mov
mov
sub
xchg
std
dec
js
aaa
sbbl
add
addr16
jbe
shl
jle
add
and
cmp
insl
and
adcb
js
imul
insl
push
gs
or
adc
mov
push
nop
lret
aas
cmp
add
jecxz
and
pushf
or
sub
mov
xor
call
cmpb
rorb
out
cltd
lcall
mov
add
xchg
xorl
xchg
sub
mov
pop
lea
inc
and
xchg
cmp
jb
lret
jb
jp
mov
stc
cmp
mov
mov
sbb
rclb
lcall
mov
repnz
pop
cmp
push
pop
mov
out
nop
sub
dec
dec
and
or
rol
jns
cli
imul
xor
mov
jns
add
fisttpll
rclb
mov
loop
inc
xor
dec
fdivrp
movsb
mov
cmc
sub
lahf
jp
cmp
mov
outsb
fsubl
push
int3
or
test
cli
mov
pushfw
in
jbe
pop
pop
cmc
sti
pop
mov
lock
xorb
test
pop
mov
insl
in
mov
jge
mov
jns
scas
add
comiss
xchg
icebp
pushf
ja
out
push
pop
sar
in
ljmp
pop
sbb
dec
fwait
cmp
dec
je
sub
jno
cwtl
fidivrl
push
sub
dec
push
sbb
mov
jb
adc
adc
dec
idivl
xor
dec
push
lods
jb
mul
loope
subb
pop
xor
mov
orl
lahf
test
or
fs
mov
sub
sbb
sbb
js
cmp
push
cmpsb
inc
push
push
xchg
test
jno
mov
mov
mov
push
jecxz
sub
jbe
cmp
push
xor
and
mov
into
movsl
mov
sub
aad
mov
pop
cwtl
inc
clc
cli
enter
mov
rclb
dec
addb
repnz
jmp
cmc
insl
jl
dec
rcrb
dec
mov
hlt
insl
pop
repz
cmpsl
add
in
ret
dec
jo
pop
iret
icebp
jbe
mov
ret
pop
pop
call
jl
inc
cmpsb
push
lods
test
fs
sbb
xor
push
adc
movsb
dec
fdivl
or
in
ret
lock
fadds
cmp
arpl
or
lret
data16
iret
notb
mov
mov
js
lods
out
cmp
testl
cld
push
pusha
xchg
ja
mov
rcrb
dec
lea
mov
rclb
out
jns
adc
push
push
leave
stos
jle
cli
mov
adc
sti
jne
lcall
pusha
jg
sub
pop
mov
sub
xor
push
sbb
fstpt
pop
gs
pop
push
push
fwait
mul
or
je
push
adc
fidivl
adc
mov
cmc
sub
shrb
fsubrl
pusha
cmp
arpl
outsb
orl
xor
in
sub
fs
movsl
mov
dec
and
pop
test
lds
mov
in
popa
dec
jg
mov
or
aas
mov
scas
mov
sbb
fstpl
lcall
xchg
xchg
jg
stos
xchg
lds
push
fadds
lret
and
into
mov
jge
fists
dec
mov
loop
in
jnp
push
and
push
out
out
xchg
cmp
leave
xor
outsb
pushf
adc
data16
mov
xchg
cmp
cmpsb
movsl
imul
out
push
xchg
loop
mov
xchg
imul
js
les
arpl
ret
stos
pop
and
shlb
les
les
xchg
xlat
lods
lea
roll
xor
and
ss
sub
sbb
popf
cwtl
scas
in
leave
adcl
mov
cmp
fmul
jl
xchg
ja
gs
jno
rol
outsl
pop
adc
xlat
or
sub
lret
mov
mov
or
test
cmp
cld
push
enter
add
pop
leave
mov
jle
pop
mov
stos
dec
inc
and
fsubp
je
fwait
icebp
and
mov
outsl
hlt
popf
fisttpll
push
ljmp
ss
sub
hlt
ret
cmp
jbe
jle
aam
cs
cld
adc
or
inc
jae
repz
sbb
add
into
dec
jne
stos
bnd
imul
and
lods
xorl
pushf
adc
int
pushf
pop
in
mov
jb
jmp
out
movsb
movsb
xchg
mov
lret
cwtl
pop
nop
pop
daa
jns
int3
ret
es
mov
aad
jle
adc
es
outsb
nop
loop
adcb
lcall
inc
daa
jae
mov
xor
sub
jns
lds
sub
loop
sub
add
jno
cmp
adc
jns,pn
cmc
sarb
inc
dec
xlat
jnp
comiss
sub
in
out
xchg
loop
mov
mov
inc
xchg
sub
int
push
dec
popl
jb
xchg
addl
push
test
es
dec
lds
inc
enter
mov
in
fcoml
out
pminub
pushf
push
daa
lahf
cmp
cwtl
cld
int3
enter
fstl
out
pop
sub
aas
xor
lods
jae
inc
arpl
popa
hlt
sbb
add
sbb
scas
or
imul
adc
xchg
add
mov
inc
in
lds
jb
mov
xor
in
xor
mov
push
dec
lea
enter
test
push
test
iret
inc
out
or
fisubrl
mov
test
and
cmp
jmp
cmp
dec
stos
adc
int
scas
cs
je
mov
sbb
pop
sarb
push
movsb
fsubrl
movsb
testb
sti
cmc
mov
fs
in
pop
div
sti
add
cmc
and
cs
push
in
push
cmpsl
sahf
push
xor
jmp
jo
push
or
cwtl
cwtl
push
mov
js
dec
cmp
in
lret
in
mov
hlt
dec
movsl
outsb
aam
insl
mov
push
insl
sbb
dec
mov
push
gs
fadd
icebp
push
and
jb
mov
or
mov
adc
fsubp
xchg
sahf
in
and
add
mov
int
sbb
cs
pop
lea
ds
fbld
pusha
mov
mov
mul
sbb
xor
cli
je
jle
dec
test
jne
mov
jecxz
mov
imul
xchg
imul
adc
out
loopne
mov
cld
das
xor
mov
leave
pop
subb
mov
xchg
adc
ret
nop
inc
insl
cwtl
adc
xorb
mov
xor
jle
mov
pop
push
stos
js
adc
ror
in
push
clc
js
cli
adc
sbb
or
pop
sub
stc
mov
lcall
cmp
cwtl
sti
test
pop
add
sbb
sbb
int3
add
mov
std
loopne
sbb
iret
xor
gs
rcll
inc
dec
lret
imul
insb
int
jp
scas
imul
es
push
std
mov
dec
inc
mov
fcompl
ljmp
pop
push
inc
jmp
inc
and
mov
jo
add
stos
aas
adc
mov
pop
sub
mov
outsb
test
outsl
enter
sub
fdivrl
add
test
fldl
fistpl
je
jecxz
inc
inc
es
push
popa
out
ja
xchg
cwtl
fwait
or
dec
fwait
xor
xchg
jno
or
pop
and
sub
ljmp
cmp
loope
xchg
imulb
gs
mov
inc
js
inc
pusha
subb
sub
aam
cmp
out
pop
xchg
lea
cld
mov
int3
imul
sub
cmpsl
in
sbb
push
or
mov
and
push
cmp
add
popa
dec
jb
mov
andb
insb
push
movsl
loope
xchg
xchg
mov
rclb
andb
xchg
push
popa
sti
jl
pop
adc
jne
inc
mov
rcrb
cmp
aaa
dec
dec
pop
add
add
shll
xchg
movsl
adc
lods
cmpb
andb
mov
sbb
shrb
sub
xchg
mov
arpl
dec
dec
je
cld
pop
popa
aas
pushf
insl
sub
pop
pop
jnp
and
rorb
es
mov
inc
ljmp
loop
cmp
xchg
loop
and
mov
cmp
pop
or
insb
out
insl
sub
adc
cwtl
insl
js
leave
iret
pop
inc
mov
loopne
dec
fimuls
out
sub
insl
pop
not
sbb
or
and
orl
mov
pop
mov
cld
xchg
xchg
into
aas
test
mov
xchg
push
sbb
xchg
pushf
jnp
out
dec
pushf
in
inc
xorb
jns
push
and
sub
push
xchg
push
xchg
fwait
mov
loope
or
outsl
lods
sbb
pusha
into
sub
gs
lea
jmp
aad
mov
jmp
int
jb
jp
cmp
cmp
adc
push
sbb
inc
mov
sub
into
movsb
push
mov
dec
imul
jp
xchg
les
jg
ret
xchg
xor
sub
fdivrs
lods
iret
fxch
sbb
jns
inc
das
and
cli
dec
mov
mov
aam
pop
addr16
aad
cvtdq2ps
or
inc
push
mov
jae
fwait
xchg
into
jbe
push
pop
inc
pushf
and
aas
movsb
clc
inc
movsb
scas
fldl
arpl
mov
xchg
xchg
xor
xchg
loop
clc
mul
mov
xor
cwtl
or
and
pop
jmp
and
mov
fmuls
andb
xor
jle
cmpsb
out
jne
push
jno
inc
mov
pop
jecxz
rcll
push
sbb
rcll
jp
dec
das
pop
int3
es
add
xchg
clc
inc
movsb
inc
add
sahf
mov
xorb
repz
push
shlb
cltd
inc
sbb
mov
push
xchg
sub
or
hlt
mov
cwtl
lret
pop
lret
lods
dec
sar
popa
xchg
and
sbb
icebp
jae
test
inc
stos
cmp
or
and
adc
pop
push
movsb
inc
push
int3
lea
mov
inc
xor
pop
cmpsl
out
je
inc
cmc
mov
ljmp
imul
jl
sti
fidivrl
and
les
popf
jne
jbe
hlt
sub
arpl
lea
pop
sub
fwait
inc
std
add
mov
cmpsl
bound
mov
dec
add
inc
jae
int
insl
inc
lea
ds
loopne
je
ljmp
js
and
out
push
inc
aam
xor
jns
pop
icebp
push
loope
int
enter
pop
pop
add
lret
clc
pop
test
mov
push
pop
lds
or
lods
je
imull
and
adcl
lods
shl
xchg
cltd
jb
push
pop
je
pop
rcrl
jl
sti
clc
xorb
imul
movsl
xchg
enter
leave
mov
gs
jb
rclb
jno
cld
clc
sbb
lds
xchg
mul
mov
repz
sahf
add
adc
out
sub
iret
hlt
test
daa
lcall
cmp
loop
mov
push
in
push
pop
fs
test
mov
push
fisubrs
push
out
pop
call
stos
imul
push
test
xor
test
and
jns
shrb
pop
aad
jl
shrb
xor
mov
repnz
aad
or
ljmp
cltd
shlb
push
in
pop
add
mov
lret
add
push
cwtl
push
and
and
leave
jb
dec
iret
or
rcll
push
inc
popf
sbb
lods
push
stos
push
add
jge
push
mov
dec
mov
fdivrs
ja
mov
repz
out
mov
std
cmp
xor
add
dec
mov
inc
push
adc
inc
stos
add
dec
scas
daa
mov
sub
int
rcll
data16
jno
sbb
je
jo
popf
lret
popa
mov
js
stc
inc
aad
rcr
hlt
inc
leave
mov
push
cmp
or
les
fbld
push
mov
or
pop
ljmp
push
add
jae
or
xlat
jg
sub
push
pop
adc
movsl
outsb
xchg
xchg
dec
and
rclb
xchg
push
jecxz
push
dec
pop
dec
ds
rcr
mov
add
bound
fnstenv
cwtl
cs
cmpsl
add
stos
cmc
mov
shrb
push
push
pop
clc
cmp
xchg
or
jo
mov
adc
movsl
adc
mov
and
push
cli
xchg
add
pand
xchg
iret
push
iret
mov
xor
pop
jae
daa
xchg
mov
or
xchg
mov
rolb
movsb
fldt
cltd
int
cmpsb
xor
mov
sbb
das
sti
rcr
dec
es
enter
enter
aad
cld
dec
pop
dec
sarl
daa
fisubrs
incl
push
movsb
lock
jg
xlat
xchg
jp
sub
daa
outsl
mov
test
pop
jbe
jmp
fdivrs
and
ss
pop
inc
xorl
fidivl
cmp
clc
adc
shlb
jns
loopne
push
arpl
push
faddl
jmp
and
or
repz
out
xor
dec
mov
mov
ficoms
jp
dec
xor
sub
loop
cmc
push
lds
mov
mov
clc
sti
jmp
sbb
pop
int3
or
dec
lods
jmp
jnp
aas
adc
sbb
movsl
std
xchg
lahf
ds
jl
pushf
and
cltd
push
notb
rorb
cwtl
or
js
cld
xchg
mov
sub
int
ljmp
fsubl
ret
pop
dec
pop
jns
lahf
into
lods
stc
dec
data16
or
cmp
adc
cmp
movl
rorl
mov
jns
mov
mov
pusha
xchg
cs
dec
enter
push
aad
dec
ss
data16
pop
xchg
mov
imul
jecxz
rcr
and
arpl
xchg
enter
out
add
inc
loope
sub
and
lret
cmpsb
sahf
mov
in
inc
inc
push
orl
ret
ljmp
pop
push
mov
leave
lea
inc
xchg
lock
sbb
sti
pop
pop
mov
fldt
jge
jge
lock
jp
movsb
cwtl
jge
les
stos
xchg
or
inc
or
mov
out
cmp
dec
xchg
push
fadds
fcomps
add
arpl
les
shll
imul
cltd
jbe
sub
stos
stos
ret
hlt
popa
dec
push
dec
test
jecxz
pop
shr
idivl
aaa
in
mov
xchg
mov
out
sub
mov
jecxz
mov
add
inc
inc
iret
jp
dec
rclb
test
jns
bound
xor
int
mov
sub
push
cmp
fadds
test
fs
bnd
sub
fst
out
sbb
pop
inc
mov
add
aam
and
sub
xchg
add
cmpsl
push
cmp
loope
mov
sbb
cmp
jbe
cmpl
lcall
pop
sbb
add
pushf
inc
js
cmp
mov
mov
data16
out
nop
xor
stos
inc
or
iret
pop
pop
popl
xchg
dec
mov
cmp
cmp
push
repnz
into
sahf
data16
sub
pop
repnz
es
jae
rcrl
or
sbb
sti
stos
stos
subb
ret
push
and
add
pop
test
bound
rep
lahf
push
fsubs
inc
lods
sub
leave
fcoms
xor
repz
mov
mov
xchg
movb
push
lock
or
scas
shll
faddl
scas
jb
outsl
ficoms
xor
sbb
push
inc
adc
das
hlt
pop
sbb
mov
in
je
movsb
jg
sub
out
inc
xchg
inc
mov
xchg
sbb
inc
sub
jmp
les
cmc
cwtl
jnp
and
or
fsubl
add
sub
mov
push
adc
mov
cmp
aaa
push
jmp
pop
cmc
int
xchg
stos
das
repnz
jno
push
ja
add
and
add
jmp
sub
arpl
arpl
add
gs
lds
aam
das
or
ja
cmp
xor
sub
inc
push
inc
mov
xor
inc
imul
or
rorb
dec
mov
pop
push
and
push
pushf
xor
fcomp
cmp
sub
push
fsubl
lret
pusha
pop
ja
imul
push
jb
daa
ret
add
mov
and
push
aas
xor
mov
inc
cmp
movsl
mov
enter
xchg
loop
cwtl
xchg
sbb
rcrb
jo
clc
mov
push
xchg
inc
jno
pop
popf
sbb
addb
pop
std
popa
fs
or
cmp
adc
mov
outsl
mull
imul
jge
mov
lods
cmp
cmpsw
int3
inc
mov
psubq
fimuls
xchg
outsl
ds
aaa
mov
jmp
lock
sub
ss
mov
outsb
jmp
subl
and
shl
insb
imul
inc
mov
or
xlat
mov
cld
fisttps
mov
xlat
push
pmulhw
lret
add
dec
pushf
scas
lods
sub
les
aaa
scas
rcrb
loopne
data16
or
inc
push
ss
dec
inc
shrl
adc
mov
scas
adc
dec
jmp
cmp
push
aad
inc
xor
loopne
xchg
xor
push
sub
in
adc
dec
lahf
and
fists
cmp
jne
pop
loop
adc
push
push
inc
mov
clc
xchg
push
enter
sbb
sbb
loopne
es
das
xchg
add
pop
pop
fbld
clc
xorb
sahf
cmpb
add
sbb
cmp
xchg
mov
inc
into
push
pop
adc
fs
adc
push
push
inc
mov
les
lods
pusha
scas
xor
hlt
cmp
inc
inc
cmp
cmp
sbb
rorl
pop
loop
int3
sub
ret
and
or
ds
inc
lock
xor
or
pop
aaa
psrad
mov
xor
jecxz
sub
cmp
lret
push
mov
and
xchg
ss
lods
movsl
jmp
mov
push
cmp
in
inc
push
pop
and
jp
out
xchg
out
arpl
sub
inc
jbe
xchg
fdivr
inc
insb
scas
sub
cmc
fnsetpm(287
out
sbb
fisubs
enter
std
daa
pop
and
int
sub
sub
add
cld
jnp
imul
lret
inc
inc
xor
mov
sbb
jns
pop
je
movsb
lcall
ss
mov
fsts
sub
or
jecxz
movsb
in
jns
push
mov
jl
and
dec
xor
mov
bound
ret
out
cwtd
fldt
push
push
push
andl
int3
test
out
sbb
das
test
adc
xchg
pusha
mov
out
lods
leave
mov
jnp
leave
and
add
adcb
adc
mov
inc
cmp
or
and
mov
xor
sar
mov
push
test
cmp
sti
shll
or
dec
lret
je
in
mov
xor
jmp
pushf
or
inc
mov
jbe
in
push
or
cmp
dec
negl
mov
mov
les
xchg
fsubrl
ret
sub
xor
jae
jo
repz
addr16
mov
push
push
mov
int3
outsb
lcall
xchg
shr
push
cmpsb
add
mov
cmp
sarb
in
loopne
xchg
stc
sbb
jnp
divl
test
ficomps
fdivl
inc
lret
movsb
insb
test
mov
and
leave
pushf
dec
cmc
pop
jo
cwtl
jge
jmp
insb
xchg
mov
add
inc
add
sub
les
pop
inc
fsubs
fucom
sahf
dec
jo
or
arpl
pop
pusha
push
add
mov
dec
movsl
in
ja
push
mov
jbe
mov
xor
nop
xorb
clc
xorb
push
imulb
and
sub
cli
push
push
fimuls
sub
scas
popf
inc
repnz
cmp
decb
jg
cmpsl
jbe
inc
movsl
cs
mov
xor
pop
cmp
repnz
mov
push
xchg
movsl
pushf
lods
mov
xchg
jb
cld
repnz
pop
outsl
cwtl
fstpt
lcall
and
push
inc
pop
loopne
fmul
and
fs
sbb
into
mov
inc
arpl
cltd
or
ljmp
and
subb
mov
leave
pop
lods
in
iret
xor
sbb
movl
aaa
sahf
test
daa
sbbl
or
icebp
fstps
adc
lret
shll
rolb
insb
aam
in
arpl
imulb
int
cli
insb
cmp
push
nop
dec
cmp
jmp
add
xor
push
fldt
push
mov
rclb
dec
jae
sub
jmp
fcoml
jle
or
cmp
int
push
sbb
pop
pushf
sub
or
icebp
dec
xor
mov
pusha
in
aad
ja
loope
xor
popa
lock
xor
dec
push
mov
rorb
sahf
mov
mov
stos
test
or
cmp
movsl
cwtl
fsts
fwait
loop
cmp
jp
ret
ljmp
in
or
sub
scas
push
nop
jae
pop
rcll
addr16
mov
pushf
jb
cmp
test
rolb
in
mov
lcall
icebp
sub
aaa
push
int
int3
sarl
ljmp
jno
sti
test
mov
or
rol
into
aad
jb
cmc
and
dec
sbb
xchg
jmp
sbb
vcvttps2dq
push
mov
mov
gs
cmp
mov
insb
inc
pop
lret
mov
sbb
in
and
call
sti
jb
xchg
jnp
sub
mov
cmpsb
dec
xchg
test
ja
aad
sub
adc
and
je
fdivrl
and
lds
add
adc
push
movsb
cmpb
inc
mov
sbb
divl
in
mov
and
ss
and
imul
adc
loope
sti
ret
mov
dec
sti
in
stos
pop
mov
arpl
push
inc
inc
movd
lea
xchg
cltd
nop
fsubl
insl
dec
pop
push
leave
call
dec
aad
cltd
sbb
decb
mov
push
jbe
add
int3
pop
or
movsb
gs
cwtl
xchg
cltd
lret
mov
cmp
mov
and
adc
adcb
adc
jae,pt
repnz
lds
sub
jae
pop
lret
lock
mov
ficompl
jp
movsb
lret
leave
enter
and
sub
outsb
add
or
cmp
jne
pushf
testb
fxch
insb
xor
fistpl
xchg
dec
scas
lods
inc
fldcw
jne
pop
leave
fisubrs
mov
jnp
out
shrb
insl
pop
mov
dec
dec
adc
pop
in
js
fistpll
sub
aad
and
xchg
sbb
add
jb
add
and
pop
sbb
mov
aas
adc
mov
loopne
nop
loop
fildll
out
add
dec
xor
jp
adc
cltd
addr16
cmp
hlt
aam
pop
sub
mov
mov
aad
xchg
rorl
pop
dec
cmp
mov
or
jo
clc
jbe
or
orb
sub
lock
or
repnz
repnz
mov
inc
dec
and
push
jb
xchg
movsb
adc
or
js
jae
into
repz
ret
ret
inc
lret
lods
sub
pop
and
cmc
sub
subl
adc
mov
push
loop
mov
enter
xor
aad
sub
jae
and
push
les
push
mov
cmp
dec
inc
and
mov
and
inc
sbb
test
rcrb
mov
inc
fmulp
shll
push
mov
cld
dec
lods
inc
aaa
leave
add
xchg
dec
out
sub
bound
cli
adc
mov
sbbb
cmpsl
pop
or
jecxz
imul
ja
ss
sahf
out
cmpsb
movsb
jne
scas
cmpsl
iret
push
push
outsb
fimull
pop
roll
in
fbstp
cmpsb
xchg
and
je
mov
mov
sbb
mov
pop
inc
inc
sbb
mov
rcrl
pop
sub
pop
test
divl
xchg
jp
mov
pop
fmull
dec
pop
icebp
in
loope
stos
popf
pop
cmp
test
movsl
mov
inc
dec
data16
sbb
xor
cld
pop
roll
adc
popa
sti
scas
xchg
mov
scas
loop
shrl
rcr
mov
mov
or
mov
inc
hlt
inc
idivb
jae
stc
cmp
xchg
add
mov
add
push
lods
je
in
rolb
or
lea
cmp
cli
push
or
dec
movsb
aad
cmp
icebp
xor
pushf
mov
movsb
addl
filds
xchg
inc
pop
mov
dec
adc
js
iret
xor
stos
jnp
pushf
je
daa
jnp
inc
sbb
mov
mov
addr16
aam
jb
gs
aad
enter
cld
sbb
sub
cmpl
movsl
imul
xchg
sub
mov
jno
ja
jp
mov
adc
dec
loop
pop
xor
cmp
rclb
inc
pop
jb
shl
push
cli
test
ret
lret
call
cwtl
jge
fisubrs
xor
loop
repnz
cmp
jle
cs
fnsetpm(287
sub
repnz
popa
pop
push
xor
sbb
mov
jnp
dec
insb
data16
or
push
lahf
lahf
mov
mov
adc
rcr
xlat
fisttps
sub
jecxz
rclb
lcall
and
lahf
ret
sti
cmp
sbb
push
sub
in
stos
push
cmpsl
fwait
lahf
clc
arpl
fstpt
mov
ficomps
clc
repnz
cmpsb
cmp
cmp
repnz
gs
std
in
cltd
jmp
push
and
aaa
dec
cmp
rcll
leave
pop
test
xchg
jg
aas
fistpll
xchg
cltd
or
in
scas
lret
ret
pop
fisttps
aaa
ficomps
loop
inc
push
outsb
mov
jns
int
ds
xchg
out
pop
add
xor
mov
sbb
pushf
mov
lock
sar
or
mov
jle
mov
push
nop
inc
popa
dec
pop
test
scas
fwait
pushf
xchg
fdivrs
test
and
push
mov
imul
xor
cmp
cmp
push
xchg
adcb
dec
cmp
sbb
sub
xchg
lds
jecxz
mov
fidivrl
dec
out
das
dec
aaa
sub
in
pop
push
out
orb
or
int
adc
divb
enter
cmpsl
pop
push
lret
cmpsb
mov
jl
shr
js
shrb
pop
sbb
sbb
pop
fcoms
test
inc
adc
popa
lret
or
dec
xor
fldenv
xchg
or
add
bound
pusha
add
pop
cltd
xchg
mov
or
mov
outsb
xor
sub
sbb
push
arpl
inc
sbb
push
test
or
or
mov
and
add
inc
inc
mov
cmpsl
loope
aad
pop
cmp
add
add
mov
pusha
test
dec
pop
mov
js
decl
leave
mov
icebp
lahf
mov
lret
push
in
cmc
mov
in
push
inc
cs
jmp
lods
imulb
mov
inc
jne
and
jnp
sub
lahf
lahf
pop
mov
dec
mov
mov
in
jnp
lahf
push
or
and
out
stos
inc
lea
incb
jle
nop
andb
or
pop
cli
fcomps
stc
cmp
fldcw
cs
das
icebp
pop
pop
add
into
imul
jge
cmp
cmp
rolb
jbe
jp
xor
xchg
push
aad
push
int3
fmulp
cmp
pop
jnp
dec
sub
xor
aad
jne
lods
into
popf
int
pop
popa
lods
dec
and
mov
lods
mov
fldl
dec
ret
popf
sub
jb
movsl
adc
xchg
dec
mov
sbb
mov
mov
jp
cmp
in
pop
pop
pop
cmc
dec
out
andl
int
pcmpeqd
enter
scas
in
imul
cs
int
xor
and
sbb
sub
ds
test
mov
stc
push
or
popa
imul
push
xchg
inc
out
andb
in
nop
mov
dec
sbb
aad
push
jge
daa
dec
xor
xor
incb
lret
cmp
aas
cmp
sahf
sbb
mov
push
lret
inc
dec
insl
leave
addr16
cmp
repnz
adc
push
and
sbb
fs
shll
jbe
aaa
xchg
xlat
push
test
mov
loope
push
loopne
jo
push
repnz
push
lcall
fsubrl
int3
out
cmovl
and
lods
js
push
arpl
inc
xor
mov
test
add
jae
mov
mov
pop
aaa
sahf
pop
dec
lea
cmpb
std
inc
lea
icebp
and
mov
scas
pop
fisubs
enter
stos
mov
jge,pn
jne
jns
sbb
dec
sbb
xchg
mov
and
pop
test
add
xor
mov
pop
mov
xor
sbb
les
push
mov
pop
das
inc
and
mov
push
lcall
fs
call
add
inc
in
xor
jbe
jae
xor
imul
lahf
dec
fidivrs
cltd
loopne
lret
cltd
lret
xchg
gs
mov
xor
arpl
pop
in
mov
cmc
add
push
push
f2xm1
fsubrs
insb
mov
xchg
push
mov
mov
sub
icebp
sbb
xchg
test
mov
orl
mov
push
dec
daa
std
xor
loop
add
push
repz
mov
dec
add
popa
jp
pop
cmp
mov
push
std
mov
inc
and
dec
subb
xor
xchg
subb
lcall
stos
mov
xchg
jg
and
mov
mov
xor
pop
or
icebp
leave
cltd
mov
repz
push
mov
xor
fdivs
push
test
ds
loopne
or
cmp
sbb
ret
push
push
add
push
add
pop
lahf
sub
in
xchg
cltd
andb
shlb
cld
pop
and
xchg
fldenv
cmp
popf
inc
inc
lret
push
mov
mov
xor
repnz
dec
pusha
bound
stos
mov
sub
insb
jecxz
push
inc
cmp
hlt
sbb
pushl
jns
ror
test
insl
push
pop
and
dec
mov
stos
sete
int3
dec
cld
mov
fimuls
and
add
mov
lods
or
xor
js
jp
sub
lods
adc
cs
cltd
cmp
cmp
push
mov
mov
mov
aaa
ds
xchg
dec
and
jae
lds
int
inc
mov
adc
lret
mov
bound
setp
ljmp
scas
push
jp
and
shrl
pop
fsubl
imul
or
cmp
movsb
adc
jae
pop
insl
mov
add
mov
adc
adc
stos
mov
gs
dec
push
mov
leave
mov
xchg
ret
push
or
sub
sub
test
sbb
mov
xchg
mov
test
ja
fdivrs
pusha
cmp
and
cmp
idiv
ret
pop
dec
pop
dec
lcall
sub
sbb
and
mov
pop
or
xchg
inc
adc
lcall
call
out
lods
popf
mov
fistpl
inc
push
dec
fsts
cmc
sbb
fwait
and
test
pop
mov
shrb
jg
shl
cltd
ret
mov
sbb
push
cmp
push
add
and
xor
inc
ljmp
add
daa
aam
mov
cmp
fadd
sti
in
es
js
bound
push
cmpsl
dec
pop
xchg
icebp
push
clc
push
and
lods
rcl
and
jecxz
fs
cmpsl
stc
inc
pop
stos
pushf
push
je
scas
rol
xorl
insl
or
cmp
insl
inc
xor
add
das
mov
ret
mov
xor
les
push
xchg
imull
testb
bound
lock
fcompl
mov
or
imul
cmc
frstor
in
cmc
sti
lret
sbb
cmp
adc
imul
sbb
dec
popa
call
cmp
jge
hlt
and
test
outsb
dec
stc
push
jp
lcall
adc
fs
pop
push
shl
jnp
jbe
xchg
out
lcall
mov
mov
adc
push
mov
add
or
fsubs
call
insb
sbb
fistpl
sub
xchg
dec
cmpsl
inc
cmp
dec
or
jns
je
jecxz
pop
adc
bound
sbb
xor
in
imul
mov
dec
add
insb
andl
sbb
movsb
repz
inc
ljmp
inc
scas
movsl
lar
cltd
fdivp
adc
or
js
pop
mov
movsl
clc
loope
sbb
arpl
ss
mov
out
ja
aad
jno
and
jbe
pushf
adc
cld
pop
mov
mov
out
mov
lcall
jmp
dec
movsl
bnd
cmc
and
inc
or
aad
xchg
ljmp
loopne
out
cwtl
clc
pop
push
ficompl
cmp
add
pop
andb
dec
or
ljmp
jae
orb
cmp
stc
bound
aam
cltd
ss
adc
xlat
jae
bound
lcall
jg
mov
std
js
adc
or
mov
imul
inc
mov
sbbb
xor
mov
das
cmp
lods
cmpsb
dec
inc
sbbb
test
hlt
imulb
faddl
aaa
and
rclb
fdivp
add
push
inc
fcomps
jg
shll
imul
iret
push
je
inc
or
mov
sbb
lahf
inc
andb
jne
cmpsb
mov
jecxz
std
das
jg
andb
cmp
nop
xchg
add
lea
add
sbb
cmp
jl
fldenv
fsubs
fcomp
cmp
pop
and
loop
sub
lods
push
fildll
jno
push
dec
stos
jb
xchg
push
xchg
xchg
sub
xchg
out
call
pop
inc
cmpsl
cmp
repz
stos
inc
lds
pop
ret
push
rcl
or
mov
in
xor
inc
shrl
into
test
mov
mov
adc
and
cmp
ss
inc
adc
mov
mov
das
pop
cmp
inc
or
xchg
lret
push
pop
pop
cmp
xchg
dec
mov
xor
or
xlat
lds
and
and
out
cmp
ror
call
and
pop
mov
xchg
mov
imul
cmp
cmc
icebp
pop
mov
xchg
pxor
iret
js
je,pn
ja
inc
sbb
mov
jno
push
push
ja
aad
outsl
sti
sbb
cmp
repnz
jmp
jle
fs
jp
call
push
sti
fsub
jl
data16
xor
fidivl
jnp
addr16
mov
adc
sub
jo
popa
mov
dec
and
fldl
mov
adc
mov
movsl
jnp
addr16
sbb
push
fcomi
pop
das
mov
cld
hlt
push
rolb
mov
out
mov
adc
pop
xor
mov
pop
loope
add
and
xor
push
rorb
fmulp
adc
mov
pop
push
dec
cmp
clc
lret
aad
xlat
or
sbb
popa
loopne
lahf
stos
imul
movsl
lahf
cli
jl
lock
cmp
cmp
mov
jbe
adc
imul
les
mov
xor
push
sbb
mov
cmp
cli
fisttpll
les
or
out
test
rorb
cmp
jge
and
jo
cmp
outsl
push
mov
adc
adc
inc
into
fdiv
pop
lds
call
ucomiss
sarb
push
ljmp
dec
sub
xchg
xlat
sbb
mov
xor
inc
fists
xor
jb
cmpl
pop
call
cmp
cltd
frstor
xchg
push
ret
adc
adc
push
cmc
std
test
fimuls
clc
mov
mov
dec
pushf
mov
mov
mov
test
inc
icebp
mov
sti
mov
adc
dec
and
mov
xchg
pusha
pop
xchg
dec
cmp
rcrb
movsb
rcll
and
leave
pop
in
mov
imul
pop
lcall
sti
jl
sub
or
jl
push
enter
cmpsb
stos
and
inc
roll
cwtl
pop
dec
imul
ficomps
push
shrb
fstpt
hlt
jle
aas
lcall
in
add
dec
ja
sti
addr16
mov
push
and
xor
rcr
das
insb
lock
cs
mov
or
xchg
jg
rclb
les
clc
cli
cmp
mov
movsb
jecxz
aad
and
incb
fildll
and
addl
xor
outsb
jb
lods
mov
mov
in
leave
cmp
mov
mov
loope
cmpsb
adc
dec
icebp
insl
rcrl
movsb
fbld
iret
push
push
cmp
lahf
push
data16
gs
stos
cmpsl
insl
in
sbb
lcall
dec
xor
push
cs
movsl
scas
bound
js
outsb
dec
testl
mov
push
fs
jb
jnp
jno
les
ljmp
mov
cltd
cmp
sar
jecxz
arpl
das
out
fs
push
push
test
sar
cmp
pushf
cmpsl
pop
int
or
mov
scas
cld
andl
and
add
jge
rorb
aas
ds
ljmp
fs
and
sub
das
ds
push
mov
aaa
mov
ucomiss
mov
cmpsl
xchg
aas
addr16
arpl
push
pop
insb
lods
std
rolb
mov
lds
popf
test
jge
aam
push
dec
fistpl
sub
lret
and
xor
ror
ljmp
dec
mov
and
add
push
push
inc
push
insb
xchg
nop
sti
push
or
inc
in
aaa
je
sarl
inc
sub
repnz
popf
jns
jp
inc
stos
mov
shrl
sub
fucomp
das
sub
outsb
push
xchg
xchg
std
jmp
sbb
stos
or
mov
iret
mov
dec
dec
rorb
sbb
pop
scas
xor
flds
add
std
fldl
sbb
ss
clc
add
jg
dec
jmp
in
push
jnp
enter
dec
jno
into
mov
clc
jb
pop
mov
das
cld
jne
jo
adc
and
xchg
dec
repnz
mov
xor
add
lds
sahf
icebp
shlb
push
dec
sbb
jp
out
pushl
and
lods
xchg
pusha
ja
loope
pop
int3
popa
mov
add
or
scas
mov
hlt
and
inc
fstps
push
add
addr16
pop
leave
stos
rcr
push
test
xchg
ror
pop
xchg
push
int3
fld
lock
outsl
dec
test
push
mov
mov
fstp
in
sbb
call
mov
sahf
sub
dec
push
fsubrp
test
out
mov
sbb
xchg
fcmovne
pop
adc
ljmp
insb
es
xor
mov
addl
ret
push
stc
add
dec
and
adc
in
popl
mov
in
xor
dec
gs
sub
rolb
add
push
push
rcrl
out
inc
test
fisttpll
fmuls
xor
outsb
ja
add
sub
sub
pop
mov
xor
dec
lods
xchg
fnsave
inc
aam
add
ret
loope
jno
push
adc
ds
add
out
pop
xor
push
adc
mov
mov
ret
or
pop
adc
es
mov
int
bound
outsl
sbb
inc
xchg
mov
dec
nop
punpcklwd
into
jae
push
addb
pop
ficomps
pusha
cmpl
mov
iret
sub
addr16
cmp
inc
mov
cmpsb
mov
scas
iret
push
or
jl
cltd
cmp
pop
adc
test
dec
fmul
mull
jg
or
push
mov
inc
dec
adc
push
test
sbb
movsl
and
and
xor
inc
add
pop
hlt
cwtl
inc
pop
xor
push
lret
push
cmc
pop
cmp
add
lds
push
xor
sahf
jle
call
sub
outsb
sub
xchg
fwait
push
inc
fiadds
mov
lds
leave
mov
push
or
xchg
pop
das
movsl
dec
in
xchg
xorl
jmp
jne
cmp
pop
stos
mov
pop
jge
jge
xchg
add
mov
jl
push
sbb
fcoms
and
xor
jns
push
add
or
adc
addr16
xchg
mov
lock
addr16
pop
sub
scas
add
inc
aas
scas
mov
ret
cmp
es
pop
cmp
mov
sarb
popf
sti
cli
cmp
mov
xor
sti
mov
aam
pop
pop
cmc
stos
insl
jge
mov
or
test
repnz
mov
sub
lahf
jp
pop
test
dec
mov
repz
inc
cli
and
xor
aad
push
jp
xchg
inc
pop
mov
psubq
push
pop
shlb
aas
mov
ret
hlt
stos
fidivs
xchg
jg
mov
and
sti
fcomps
push
push
pop
lahf
sub
mov
loope
sub
or
loope
inc
fnsave
jo
mov
clc
jge
jle
push
mov
and
dec
cmp
mov
and
push
dec
nop
or
xor
in
ss
shl
or
cmp
lods
push
pop
or
mov
sbb
or
js
lahf
push
andb
add
arpl
adc
push
xlat
pop
imul
pop
dec
fistpl
lods
sub
adc
add
or
mov
add
push
dec
dec
bnd
gs
or
sub
pop
mov
xchg
psrlq
outsl
aaa
cmp
jo
call
xchg
jnp
jne
cmp
out
mov
std
popa
clc
rorb
out
cmp
aad
mov
stos
call
in
mov
pop
outsb
addl
push
ds
push
add
dec
adc
sbb
adc
in
and
mov
mov
push
xchg
cmp
notb
add
out
add
lock
call
inc
pop
and
es
into
cmp
jb
mov
out
sbb
shlb
pop
test
dec
add
mov
dec
cmpsb
scas
je
xchg
testl
test
stc
test
xor
sub
jge
ds
pop
sbb
aas
mov
aad
pop
mov
jbe
test
call
and
dec
push
jmp
mov
cmpsl
push
xchg
scas
adc
fnstsw
lods
mov
loop
fcomps
pop
mov
enter
loopne
in
mov
shrb
xor
fisubs
cmp
mov
dec
inc
xchg
lahf
shlb
push
jp
and
out
stc
add
mov
inc
ds
loope
out
pop
cmp
stos
xlat
mov
mov
add
mov
inc
arpl
int
outsl
xor
sbb
add
movsb
std
or
iret
fs
out
lods
mov
adc
fidivl
js
dec
insb
js
rcr
push
pop
jb
das
mul
es
mov
lahf
loopne
push
mov
out
cmpsl
mov
jno
hlt
xlat
mov
insl
lock
popf
mov
out
mov
fstpl
sub
aam
push
stos
repnz
sbb
xor
and
sbb
cli
xor
xor
xor
int3
inc
xor
cmpb
pop
rolb
pop
and
adc
xchg
mov
cmpsb
add
sbb
sbb
dec
aas
add
sbb
mov
mov
out
inc
push
add
movsl
jecxz
lcall
add
jb
sbb
and
push
nop
push
add
add
dec
sub
sbb
push
push
jnp
dec
in
popf
dec
pusha
push
inc
in
pusha
rcr
stos
pop
xlat
enter
hlt
aas
out
xchg
cmp
mov
ljmp
aam
jle
bound
negb
add
outsl
cs
sub
mov
test
inc
cmpsl
cs
hlt
daa
shll
adc
repnz
jno
sub
push
mov
xor
mov
pop
loop
sub
out
aaa
stc
leave
loope
mov
mov
cmpsl
xchg
xchg
inc
loope
push
jecxz
sbb
aad
mov
cmp
cmp
mov
pop
mov
jne
repz
out
jmp
cltd
jl
push
mov
cld
sbb
sbb
xor
test
std
and
push
sub
rcrb
and
mov
mov
pop
pop
adc
std
or
sahf
mull
adc
xor
jp
or
nop
sbb
dec
pop
and
xorl
mov
lock
lcall
iret
out
xchg
and
lods
aas
jae
mov
push
outsl
dec
lret
aam
mov
cwtl
rol
jno
data16
ja
subb
mov
pop
pop
push
sbb
jo
insl
dec
aam
sbb
add
in
xorb
push
ja
enter
xlat
adc
add
xchg
clc
sbb
in
pop
pop
imul
cwtl
cmp
arpl
lret
sbb
sbbl
adc
jns
mov
lret
inc
lret
mov
mov
mov
rolb
mov
mov
pop
xlat
or
cs
sbb
repnz
mov
push
mov
call
in
dec
adc
test
inc
aas
mov
push
or
scas
imul
adc
mov
mov
push
in
int
xchg
aas
in
xchg
aam
mov
sub
jge
jnp
scas
mov
rclb
dec
push
lret
mov
fs
cmpsb
ds
ss
mov
jb
pop
test
jnp
inc
lea
xor
cmc
sbb
mov
hlt
push
aad
pop
sbb
add
lods
shlb
push
xor
xchg
bnd
je
idivl
sub
mov
mov
sub
inc
clc
pusha
pop
mov
je
test
cmp
jnp
push
inc
daa
sarb
adc
shll
mov
clc
call
push
ret
mov
xchg
fs
mov
sub
mov
push
into
scas
xchg
add
pusha
in
jg,pt
jge
xor
inc
xchg
push
jle
xchg
aam
sub
ds
mov
int
pop
popf
dec
pop
or
sahf
shl
pushf
stos
shrl
push
mov
or
insb
xor
mov
jg
cld
int
rep
jmp
adc
shlb
dec
loopne
mov
inc
sbb
cmp
cs
push
add
jnp
xlat
icebp
ret
aam
jo
push
xchg
lret
sub
dec
mov
and
hlt
mov
push
repz
add
call
outsl
xor
and
stos
sbb
mov
das
mov
fwait
inc
mov
lahf
pop
repnz
fildll
lea
pop
pop
add
clc
mov
mov
xor
repnz
xchg
pushf
dec
push
scas
add
mov
in
xor
jle
xorb
dec
mov
lods
adc
decb
jae
jge
ss
mov
icebp
adc
add
jne
fmuls
cmc
sub
divb
cmpsl
repnz
xchg
push
sub
lcall
push
mov
int
sti
insb
ja
jne
mov
test
repz
inc
orb
lahf
lahf
dec
test
cmp
lods
loop
mov
das
fs
nop
xor
cmp
fmull
mov
and
movsl
dec
fcomip
ja
cmp
sub
enter
in
orb
inc
mov
dec
or
cmp
and
out
dec
loopne
pop
pop
das
mov
pushf
into
loop
out
and
mov
xor
dec
cmpb
fs
sbb
int
fmul
lods
jmp
test
leave
jg
add
mov
xchg
xchg
mov
and
xlat
sbb
xor
push
notb
lahf
xor
jl
pop
adc
cltd
out
mov
adc
icebp
aaa
or
or
xchg
pop
lcall
nop
inc
mov
in
out
mov
daa
je
pop
or
stos
cmp
mov
mov
les
mov
push
push
cmc
xor
lds
lcall
mov
adcl
ret
outsb
sarl
cwtl
cltd
aas
imull
cmp
ljmp
add
cwtl
mov
cltd
roll
jae
cmp
adc
jne
sbb
inc
test
or
sbb
mov
stc
mov
daa
adc
repz
push
sti
and
jge
lcall
jns
das
aad
rcrl
imul
imul
push
fdivrs
mov
sub
call
in
fadd
sbb
or
sub
scas
pusha
rcrb
or
mov
push
cltd
push
cmp
mov
push
jbe
das
test
mov
add
packuswb
mov
inc
lcall
lock
inc
mov
test
jp
into
orl
xor
or
or
js
pop
xchg
adc
push
fistpll
and
cmpsb
cmp
dec
xchg
ljmp
sbb
sub
arpl
inc
insb
mov
hlt
int
ficoml
sbb
adc
pop
and
loopne
movsl
jmp
cmpsl
and
and
mov
daa
fstl
fistps
test
mov
and
or
cmpb
pop
xchg
lcall
hlt
mov
sbb
notb
mov
pop
test
add
push
popa
adc
out
and
and
stc
and
out
clc
rclb
scas
insb
push
xchg
ret
pop
les
mov
js
cs
sbb
or
xchg
fnsave
add
jle
inc
shll
push
or
xchg
popa
jl
inc
ljmp
cmc
cmpsb
frstor
cmp
jge
lret
add
pop
scas
in
mov
lret
mov
sti
sbb
fs
shrl
dec
pop
sub
adc
js
les
jno
fisttps
out
daa
push
xor
dec
ret
mov
push
bound
pop
aaa
rep
push
insb
cwtl
lret
ret
pop
mov
xor
ljmp
inc
lods
das
pop
sbb
adcb
mov
dec
sub
jle
enter
adc
xchg
sub
pop
pop
movsb
rep
dec
jmp
sub
cmp
add
fs
push
mul
ljmp
loop
daa
xchg
pop
es
dec
adc
xorl
cmpsb
aam
lret
aas
dec
push
inc
repz
ret
in
push
push
xor
mov
outsl
mov
adc
ss
pop
lret
test
stos
insl
scas
sbb
fiaddl
push
mov
cmp
and
sbb
pop
cmp
add
xchg
xlat
push
cmpsb
clc
loop
cmp
dec
mov
sub
mov
cmp
or
cmp
fdivrl
jecxz
ret
hlt
lds
fistpll
jle
and
xorb
mov
gs
mov
testb
sub
mov
pushf
dec
jno
xchg
xchg
mov
fsubrl
push
pslld
xor
frstor
inc
daa
bound
stos
fiaddl
cs
mov
push
imul
adc
cmp
leave
dec
push
leave
daa
mov
jbe
ret
sti
out
or
push
cmp
cmp
mov
sub
sbb
imul
adc
add
fsubl
out
repnz
inc
repnz
imul
fdivl
ret
test
lcall
dec
andl
sub
inc
int3
daa
jmp
sbb
pusha
sbb
add
jne
mov
jnp
cmp
lret
movsl
mov
pop
xor
fs
mov
sub
clc
sbb
sbb
inc
adc
popf
cli
xchg
pop
sbb
and
or
mov
repnz
movsl
dec
adc
rcr
jb
jae
and
sbb
ss
pop
cs
subl
xor
pop
jle
jne
cmp
incb
lea
dec
test
loop
add
adc
jnp
mov
or
ljmpw
xchg
nop
jle
out
mov
inc
mov
xchg
subl
ljmp
mov
push
dec
mov
mov
repnz
sub
aas
xor
lretw
dec
dec
ret
xchg
fidivs
ud0
xor
push
outsl
or
sbb
fs
push
jmp
jb
dec
and
cmp
jge
into
std
stos
dec
mov
sub
mov
jnp
stos
and
fdivrs
push
add
cmpsb
inc
ret
lcall
dec
push
int3
lods
es
mov
and
dec
cmp
xchg
mov
cmp
mov
imul
cmc
cmp
mov
push
leave
out
push
in
fsubrs
nop
mov
or
push
ret
sub
lods
or
lock
aaa
cmp
cs
stc
insl
ljmp
cmp
outsl
jg
xlat
subl
aam
mov
jnp
xorl
loop
aad
and
mov
push
rcl
jns
inc
sbb
mov
sbb
frstor
imul
mov
fbld
dec
mov
jo
dec
cmp
xchg
inc
cmpsl
imul
sbb
and
inc
lds
or
mov
jecxz
pusha
aam
mov
xor
inc
xor
mov
stos
pop
pop
xor
xchg
dec
push
cltd
mov
sbb
jns,pn
icebp
and
notl
and
inc
lods
scas
adc
xor
or
adc
jl
xor
clc
dec
mov
ret
push
cltd
and
jecxz
loope
dec
stc
repz
fstp
jae
loope
pop
push
ss
shr
ficoml
stos
jbe
cmp
and
ror
lret
test
insl
xchg
and
fidivrs
xor
dec
mov
repz
cmc
jnp
rolb
fwait
cmc
add
mov
pop
sbbl
mov
insb
scas
popf
mov
lock
mov
subl
dec
pusha
xchg
cmpsb
or
lret
inc
push
mov
jo
imul
mov
hlt
inc
js
jge
fdivrs
mov
pusha
xchg
fwait
push
xchg
in
outsb
lods
sbb
mov
mov
insl
popf
adc
movsl
jne
mov
adcl
mov
add
test
or
add
js
les
std
mov
ret
dec
pop
inc
lahf
pop
mov
mov
and
xor
cmpsb
push
jb
xor
mov
and
in
fiadds
aam
data16
call
xchg
movsl
movsb
push
add
movsb
and
cmpsl
fcomp
dec
rorl
fwait
mov
inc
sahf
and
flds
loopne
lahf
inc
cmp
xor
mov
cmp
cmp
inc
sbb
add
stos
das
dec
jg
js
or
mov
rcll
aam
or
cmc
rcr
sbb
sbb
xchg
pop
xor
outsl
push
cmp
add
stos
mov
movsl
icebp
xor
xchg
pusha
stos
adc
stos
or
inc
cld
lods
jl
popa
push
mov
push
out
cmp
in
enter
dec
loope
idivb
jmp
dec
test
cmp
shll
pop
or
xchg
cmpsb
aaa
idivb
pop
lea
outsl
jbe
fstps
addr16
xchg
mov
pop
jne
push
pop
ret
out
sarl
orl
dec
loop
pushf
jecxz
push
lcall
and
lods
bound
test
cmp
jg
fistl
adc
mov
jo
popa
pusha
mov
dec
test
mov
imul
mov
leave
into
loopne
lock
jo
mov
add
adc
push
sti
mov
cmp
jo
ret
mov
negb
loope
je
pop
adc
sarb
jae
push
andl
rol
or
loope
sbb
mov
dec
pop
cmpsb
jo
dec
and
daa
dec
pop
mov
adcl
jge
imulb
pushf
fwait
xchg
add
insl
cmp
lods
add
aaa
mov
mov
mov
or
sti
mov
repnz
adc
std
add
aam
add
bound
out
dec
or
insl
and
fwait
dec
inc
cwtl
jecxz
pop
lods
dec
sub
dec
movsl
xchg
icebp
ja
or
mov
arpl
pushf
shrl
sarb
das
into
xor
cmp
imul
jbe
shrb
addr16
cmp
cmp
pusha
push
jbe
roll
mov
je
and
dec
repnz
inc
xchg
pop
inc
jae
insb
sub
test
xchg
movsb
inc
adc
in
pop
sbb
roll
fidivs
call
cltd
inc
aaa
fidivs
cmp
jmp
jle
ljmp
and
mov
je
pop
push
add
mov
insl
insl
mov
shll
mov
cli
decl
mov
push
xchg
mov
sbb
pusha
pop
adc
pusha
loop
jl
cmp
push
sub
or
adc
fnsave
mov
dec
clc
shl
pop
cs
out
xor
pop
jb
sahf
sub
sub
adc
loop
dec
dec
fs
xchg
xlat
mov
dec
enter
das
test
cmp
push
mov
jns
jg
jmp
divl
xchg
in
lea
test
sbbb
inc
mov
insb
or
daa
mov
std
jge
xor
cltd
les
inc
bound
enter
add
fldl
ss
dec
mov
and
mov
pop
adcb
loop
xchg
les
pop
int3
sub
add
bound
push
ss
pop
outsl
mov
sti
mov
jmp
cmp
lahf
cmp
loopne
push
scas
push
call
lahf
hlt
lret
outsl
or
and
fdivrp
gs
push
mul
ret
adc
icebp
sti
lcall
int
inc
and
mov
xor
mov
jmp
in
jmp
or
stc
shlb
mov
stos
jmp
inc
pop
aaa
imul
adc
ljmp
jnp
jne
adc
outsl
dec
xor
mov
scas
jns
cwtl
aam
jnp
xchg
mov
jle
sub
lock
test
and
out
pushf
and
nop
mov
jp
lar
stos
cmpsb
sbb
stos
dec
fbld
aam
lods
std
rorl
mov
pop
je
sbbb
push
pop
sbb
jnp
sub
sbb
pop
mov
push
icebp
jns
mov
dec
xchg
stos
orb
dec
out
inc
daa
fldt
std
fs
movsb
mov
jmp
sbb
add
sbb
push
or
sub
pop
and
xor
jne
fisttpll
lock
jl
add
test
jle
aaa
cmpsl
push
lret
bnd
subl
pop
aas
mov
out
inc
jne
sbb
xchg
addr16
xchg
add
popa
and
inc
test
dec
les
fadd
cmpsl
popa
cs
pop
movsl
add
cmp
leave
xor
and
mov
push
adc
jno
add
dec
pusha
jae
jl
fdivl
les
push
repnz
adc
iret
ficoms
mov
inc
fistl
xor
push
sub
pop
popa
imul
ljmp
mov
inc
divl
adc
test
dec
out
movsb
arpl
scas
dec
test
adc
mov
stos
and
cmp
js
mov
fbld
jns
stos
loop
daa
xor
stc
test
jecxz
mov
mov
in
inc
push
test
out
popa
call
fnstenv
or
movsl
or
mov
out
jle
adc
adc
mov
sub
lods
in
push
outsl
loop
frstor
out
ljmp
pop
jbe
mov
sbb
xchg
roll
shrl
mov
dec
adc
cwtl
add
test
sub
enter
sub
in
add
xchg
cmp
pop
hlt
rcll
xlat
inc
xchg
adc
mov
pop
jo
push
mov
icebp
mov
xchg
in
pusha
sahf
xchg
in
mov
xor
rcll
xchg
jb
ljmp
or
inc
pop
dec
sub
ja
fxtract
inc
cmp
sub
jnp
adc
dec
jno
pop
jae
insb
mov
sbb
leave
rolb
lods
and
js
mov
adc
jns
xlat
out
sub
xchg
adc
mov
or
mov
sbb
cmp
pop
cmpsl
cmp
div
rorb
in
sbb
pusha
adc
js
mov
sbb
push
outsw
jge
lcall
enter
movsl
jecxz
stc
or
sti
hlt
sub
pushf
dec
hlt
sti
adcl
lahf
sub
aam
in
mov
cmpsl
in
lock
or
call
frstor
movsl
xchg
pop
outsl
xchg
mov
movsl
icebp
mov
ret
jno
icebp
dec
cmpsb
fucom
cwtl
gs
stc
and
out
fcmove
xchg
sahf
enter
call
fildl
dec
mov
insl
lea
or
lea
jne
cli
jne
pop
sbb
sub
mov
sar
aas
fisubrs
push
adcl
inc
orb
sbb
jnp
insl
fs
es
shlb
jge
xor
test
add
dec
std
shll
nop
adc
imul
out
ljmp
mov
sbb
lods
jmp
add
jecxz
jbe
test
mov
sub
in
cmp
scas
pop
dec
imul
or
xchg
out
mov
mov
mov
inc
movsb
cltd
push
xchg
in
xchg
sbb
sbb
fcmovnb
pop
sub
loope
xchg
lcall
jmp
cli
inc
ds
int3
jae
jbe
aas
lods
leave
jp
inc
adc
in
mov
add
or
cs
sbbl
push
pop
and
ret
sahf
dec
or
mov
mov
lods
jg
test
sub
push
inc
cmp
iret
addps
mov
jl
je
sbb
pushf
frstor
jecxz
push
xor
sub
in
cwtl
ss
sub
outsb
lock
je
jmp
ret
fidivl
lahf
push
xor
cltd
popa
aad
inc
jno
pop
mov
push
jl
mov
cld
stc
sbb
jle
aaa
outsl
xor
je
stc
ret
mov
rcr
xchg
lods
xchg
dec
mov
movsb
cmp
mov
aad
fwait
lods
or
inc
nop
jmp
xchg
test
inc
inc
packsswb
xchg
mov
les
push
push
dec
loope
adcb
sbb
cmpsl
les
pusha
stc
data16
subl
insl
or
and
sahf
sarl
add
xchg
lods
cmc
aas
inc
mov
jmp
dec
mov
jae
idiv
adc
cltd
jecxz
xor
ljmp
or
repz
inc
loop
mov
mov
andb
test
lea
ror
es
xchg
outsl
jae
sbb
stc
adc
cmc
test
filds
fistpll
inc
jp
mov
or
push
ljmp
jo
jg
cwtl
in
fildl
stos
or
add
inc
scas
sbb
mov
xchg
jl
lret
or
jmp
clc
cmp
adc
mov
mov
inc
popf
loope
repz
dec
addl
aaa
or
movsb
push
jmp
xchg
and
or
jmp
mov
and
and
fcomp
xor
push
enter
stos
sbb
xchg
ret
jle
imul
dec
pushf
jge
iret
pop
jle
mov
lahf
cmp
ljmp
addr16
mov
and
int
shl
jg
cli
sub
dec
dec
jo
pop
dec
das
and
add
js
int3
loop
jno
xchg
shll
cs
mov
mov
and
xchg
lea
inc
insl
adc
and
lcall
icebp
xor
pop
push
cmc
mov
scas
jle
sahf
icebp
insb
mov
or
lock
inc
repz
and
nop
add
addr16
xchg
and
fadds
ss
js
mov
icebp
loopne
das
add
xchg
mov
in
or
mov
jle
lahf
mov
adcl
mov
fistpll
inc
in
or
lret
sub
pop
je
jns
adc
mov
mov
dec
in
ret
mov
push
mov
push
xor
ds
inc
sti
mov
hlt
jb
add
sbb
std
popa
dec
pop
mov
add
repnz
cmpsl
jmp
aad
mov
jecxz
mov
pop
popa
popa
test
ficoml
insb
je
jb
jo
and
xchg
addl
or
adc
dec
mov
inc
adc
enter
nop
out
lahf
and
enter
cli
out
dec
cmp
sub
fnstsw
loop
into
cs
loop
xchg
scas
add
out
fwait
lock
rolw
pop
sarb
lods
xor
cs
mov
pop
cld
jbe
das
jmp
ds
cmp
imul
in
dec
movsb
or
lret
lds
pop
stos
popa
addr16
mov
pop
push
fcomps
pop
int
xorb
js
jns
sahf
sar
lock
fimuls
mov
ds
push
mov
loope
lahf
and
cmp
pop
insl
shlb
adc
xor
mov
inc
adc
xor
mov
xor
divl
int
movsb
movsl
sbb
test
xchg
sbbl
out
aam
push
adc
push
movsb
cmpb
in
imul
shlb
loope
xlat
loope
jmp
add
sub
stos
inc
imul
test
and
cmp
out
mov
pushf
xchg
mov
xor
test
std
and
hlt
fwait
jnp
test
lods
cmpsb
adc
push
inc
mov
outsb
loope
and
and
outsb
xchg
jns
xchg
sub
and
idiv
push
mov
aaa
xor
ljmp
iret
xchg
cmp
push
fwait
out
sbb
inc
jle
xchg
imul
loope
lret
or
push
je
shlb
aaa
push
dec
fistl
mov
out
fs
fsubs
popa
out
add
mov
mov
int
sbb
in
mov
adc
mov
test
daa
inc
lcall
inc
inc
rcl
sub
scas
pop
push
or
jns
test
add
test
sub
movsb
pusha
mov
push
jno
fstp
push
addl
cmp
add
rcrl
mov
and
xchg
out
dec
xorl
jne
scas
jle,pn
mov
lods
mov
aaa
jg
add
je
xchg
mov
sbb
neg
jge
push
imull
pop
aam
cmpsl
es
stos
xor
int3
push
jnp
pushf
cmp
leave
fcmovu
movsb
sarb
sub
inc
sbb
or
imull
push
fnstenv
inc
pop
sbb
pop
jo
add
push
sahf
sahf
dec
or
cmpsb
sarl
and
jg
fistpll
mov
jnp
adc
mov
dec
ja
push
or
std
xchg
sbb
jne
repz
jae
shlb
test
outsl
stc
adc
push
shr
cs
mov
xchg
mov
stc
and
sbb
decb
xchg
lds
call
add
ds
jle
fldenv
sub
jno
sbb
pop
push
out
loope
inc
cmpsb
add
hlt
and
nop
popa
sbb
sahf
lea
out
daa
pushfw
test
loop
aaa
fsubl
stos
pop
cmp
mov
mov
jle
xor
mov
mov
add
push
jae
je
mov
cmpsb
mov
or
jp
inc
xlat
idivb
inc
out
js
fistpll
adc
das
lret
inc
add
js
test
mov
ficompl
cmp
fwait
mov
mov
mov
imul
sti
add
xchg
and
push
sub
inc
xor
je
add
jb
push
ret
dec
pusha
jbe
add
je
rcrb
rorl
add
cmp
std
leave
mov
outsb
iret
push
mov
adc
ja
push
cmpsb
in
mov
sub
hlt
cmp
pop
scas
rol
in
cltd
cmpl
ss
idivb
ss
mov
mov
sub
adcb
arpl
scas
movsb
xor
test
dec
pop
xchg
icebp
and
mov
inc
cs
mov
jae
gs
dec
cltd
outsl
inc
xchg
iret
jmp
jae
pushf
jb
cs
test
shrb
mov
jnp
xor
push
sarb
fcomi
dec
push
push
daa
rorl
hlt
in
pop
or
cli
repz
xor
cmpsl
js
arpl
push
mov
add
mov
divb
xchg
out
lods
jge
movsb
lret
negl
xor
scas
sbb
sub
loop
mov
push
jle
addr16
or
vpmovusdw
pushf
jno
add
incl
test
sbb
push
aad
add
dec
add
int
cwtl
scas
fnsave
jno
push
insb
outsl
cld
push
call
pop
pop
popl
shr
fsubs
mov
movsl
in
inc
xor
cmpsl
dec
outsb
in
in
dec
inc
out
cmc
cltd
sti
test
jle
jg
sub
xor
pop
sub
push
inc
int
inc
and
lcall
in
imul
sbb
imull
repnz
cli
sahf
and
fstps
pusha
clc
clc
sahf
js
in
add
inc
cli
jno
cmpsl
cmp
jb
ret
xchg
add
icebp
push
sbb
jecxz
cltd
jnp
int3
out
add
mov
or
js
imull
xor
lahf
lret
or
call
mov
popa
mov
movsb
inc
jo
sub
test
fwait
pop
add
cmp
inc
mov
mov
incl
or
movl
fs
xchg
mov
xchg
shll
fimull
add
leave
loop
test
adc
push
hlt
out
lods
imul
enter
jns
lret
mov
mov
adc
dec
cli
mov
jmp
sahf
outsl
jnp
mov
lods
jmp
xlat
push
pushf
mov
jns
or
fcmovnbe
mov
jns
data16
insb
jb
push
aad
rcrb
outsb
loop
ljmp
js
adc
repz
lds
push
mov
add
insb
or
or
pop
add
movsl
fwait
rol
sub
ds
sub
enter
bound
sti
xor
cmp
or
orb
pop
in
aad
xchg
cmpsb
movsl
setbe
in
cmp
mov
cmpsb
push
popf
push
mov
sbb
testb
fiadds
mov
sub
arpl
sbb
cltd
popf
scas
mov
and
cmp
shlb
xchg
lods
shlb
xor
fs
jecxz
mov
arpl
mov
inc
dec
cli
adcb
dec
test
lahf
inc
out
fwait
sahf
repnz
loopne
mov
popa
mov
mov
ret
imul
out
js
popf
mov
inc
sahf
adc
fwait
cmc
fsubrs
jg
jle
icebp
mov
fildl
out
mov
mov
fwait
mov
mov
ret
jbe
cmp
mov
sbb
popf
jge
arpl
daa
dec
mov
rcr
fdivs
stc
out
pop
mov
fdiv
cld
cwtl
fisttps
mov
cs
fists
inc
or
fsubrl
dec
and
sbb
jno
sub
and
push
jae
in
scas
push
pop
pop
jp
sub
push
push
aaa
jnp
cmpsb
mov
imul
jle
lock
loopne
xchg
insl
push
pop
inc
ror
ljmp
imul
jno
js
lods
fdivrp
notl
shlb
pop
loop
jno
jle
push
fmul
xchg
shrb
inc
fsts
sub
xchg
scas
popf
mov
xchg
push
adc
jns
mov
cmp
adc
mov
sub
xchg
push
and
in
addr16
inc
xchg
lahf
loop
mov
or
loopne
fbld
mov
add
jg
xchg
lds
or
dec
or
or
push
push
mov
mov
ds
loopne
outsl
mov
dec
mov
cmp
inc
in
jno
bound
cmpsb
ss
xchg
jl
test
xchg
xor
loop
out
dec
and
arpl
in
or
mov
fists
das
data16
inc
jp
imul
cmp
sbb
or
mov
aad
out
mov
ficoms
jmp
outsb
ret
pop
fdivs
sbbb
push
xchg
dec
jp
outsb
cwtl
push
pop
in
sub
es
xor
mov
pusha
loope
mov
orb
pushf
lods
or
xchg
push
fs
push
inc
add
bnd
xor
les
and
add
sbb
lock
mov
xor
test
lods
push
and
pushf
sti
shll
sahf
mov
jmp
scas
cmc
mov
mov
mull
or
ja
adc
rcll
jecxz
mov
xor
push
fwait
and
dec
lret
push
jmp
push
xchg
and
jge
push
outsl
inc
jae
push
mov
sbb
push
fstl
cs
mov
aaa
dec
xor
stos
mov
orl
inc
repz
xchg
jg
jl
xlat
sahf
out
jl
jl
call
iret
repz
sub
icebp
inc
not
int
or
imul
or
pushf
pop
movsl
loopne
xor
lahf
test
sbb
fcompl
insb
adc
addb
fmulp
std
cmp
xorb
push
and
and
jo
imul
adc
push
test
xchg
bound
outsl
push
or
xchg
dec
js
dec
inc
hlt
add
repz
push
jb
push
out
pop
pop
and
xchg
shr
sub
ficompl
mov
scas
xchg
xchg
mov
add
add
dec
pop
adc
fcmovnb
mov
and
and
fsubrs
outsb
or
xchg
sub
cmp
movsl
adcl
decb
mov
arpl
add
push
insl
pop
push
jge
mov
repnz
leave
cmp
stos
cmp
aas
mov
fsubrs
sub
mov
lea
mov
movsb
bound
sub
inc
mov
jbe
hlt
sub
lods
outsl
xchg
mov
and
mov
xchg
pop
inc
push
dec
mov
movsl
and
and
pushfw
add
xlat
jo
out
sub
sbb
sti
xchg
push
jge
push
jmp
fnstenv
mov
jo
iret
push
mov
cmp
xlat
inc
pop
xor
dec
stos
aad
ret
xchg
xor
movsl
clc
xchg
pop
inc
xchg
mov
stos
mov
movsb
shll
push
mov
cli
es
ja
add
sbb
xchg
out
dec
ja
outsb
mov
mov
sbb
sub
cmpsb
ficoml
and
pusha
inc
movsb
aaa
into
outsl
out
cld
repz
push
sbb
repz
cmp
daa
add
insw
mov
aas
xchg
and
xchg
insb
sahf
or
fsubrl
jo
fnstsw
xchg
cwtl
stos
push
mov
push
inc
mov
dec
jg
movsb
xchg
or
or
mov
ds
pushw
in
mov
imul
repz
cmpsl
gs
mov
fstl
lcall
call
push
mov
repz
dec
mov
ret
push
fcomip
testb
mov
mov
mov
mov
inc
or
mov
mov
ret
pop
daa
andl
xor
int
cmp
insb
std
scas
add
mov
mov
dec
xchg
jo
mov
sbb
xchg
dec
lahf
stc
push
int
dec
xchg
sub
push
pop
lods
movsl
movsb
adc
sub
sub
sbb
sub
or
ja
clc
dec
incb
mov
fisubl
mov
pop
mov
aaa
push
add
scas
add
stos
sbb
xchg
pop
imul
jb
dec
or
dec
into
cmp
inc
adc
mov
lods
add
cmp
mov
mov
or
mov
int
sub
jo
jns
xchg
pop
js
mov
imul
xchg
xrelease
sub
inc
mov
aaa
and
rolb
xchg
xor
push
repz
jo
jb
jo
mov
and
or
lods
int3
test
insl
sbb
out
cmp
ret
jno
inc
fstps
out
popa
mov
cmp
popa
jo
inc
enter
je
pop
sbb
bound
pusha
iret
inc
push
inc
cmpsl
test
test
std
in
pop
push
xchg
adcb
icebp
in
mov
dec
push
mov
movsb
inc
and
jle
jmp
pusha
jo
mov
mov
adc
repnz
lea
fimull
in
xlat
into
xchg
mov
dec
mov
jb
adc
adc
call
push
xor
pop
and
add
bnd
stos
shrb
loope
jmp
lea
push
insl
xchg
in
stos
jge
mov
jae
pop
dec
and
and
out
data16
pop
push
or
jns
sub
iret
cmc
xlat
lods
mov
ret
jmp
hlt
int
xchg
std
gs
add
jp
imulb
mov
adc
push
dec
dec
mov
bsr
int3
jno
add
loopne
adcb
aad
aad
jb
shrl
out
cltd
daa
outsb
lods
mov
adc
ja
cld
shll
jge
xor
jb
mov
jmp
xor
movsb
xchg
mov
cltd
sub
lea
inc
mov
hlt
test
cmp
jg
xor
enter
insl
sarb
inc
mov
or
xchg
sbb
ss
xchg
mov
std
add
sbb
ss
push
sub
xchg
jo
cmp
ja
add
push
inc
icebp
mov
mov
cmc
into
gs
es
add
pushf
stos
add
inc
mov
jle
ds
loope
and
fdivs
ds
jnp
in
sarl
shlb
or
jle
orb
inc
and
pop
lcall
and
pop
out
lea
xor
sbb
xor
das
mov
sahf
repz
jmp
mov
mov
aaa
scas
sbb
inc
add
inc
int3
mov
and
lret
lret
pop
insl
and
xchg
popf
fidivl
clc
xlat
pusha
loop
push
out
insl
das
vmovntps
out
push
xor
pop
sbbb
dec
imul
dec
jb
jbe
jmp
cmpsl
out
mov
sub
push
mov
movsb
jmp
dec
sti
dec
sbb
mov
fcoml
jle
push
mov
arpl
and
lahf
imul
fcmovnb
adc
cmpsb
pop
int3
imul
ret
xchg
mov
das
add
popa
xor
test
jge
test
outsb
movsl
and
cmp
and
mov
lcall
push
jo
mov
adc
scas
jb
lret
in
jo
test
lret
dec
clc
xlat
rol
outsb
fisubrl
and
pop
inc
addr16
inc
mov
je
sbb
xchg
lcall
push
cwtl
enter
xor
add
sarb
or
jbe
mov
movsl
xor
lods
cmp
rcll
js
out
out
jo
rcll
dec
dec
dec
lahf
adc
xor
mov
add
or
lods
inc
cmc
fs
and
jb
clc
cmpsb
leave
out
scas
and
mov
hlt
jle
inc
jp
xlat
xchg
mov
sub
push
jp
dec
test
push
push
cmp
cmp
mov
shrl
pusha
pusha
cmp
push
das
leave
push
sbb
data16
std
inc
cmc
out
dec
jl
and
inc
rolb
inc
xor
ss
adcl
in
mov
std
inc
mov
into
popf
imull
push
fnsave
mov
insl
mov
pop
and
jmp
xchg
aas
fwait
in
sub
in
stos
rcr
lods
mov
xchg
pop
arpl
js
xchg
adc
iret
das
adcl
sbb
push
jb
xchg
fnstsw
fdivrs
mul
add
cmp
out
lods
pop
lock
gs
gs
in
cmpsl
dec
sbb
ret
movsl
out
pop
daa
lock
adc
xorb
jae
push
pop
xor
xchg
mov
jg
outsl
int3
fstpl
fildll
jecxz
out
ficoml
mov
xor
loope
inc
dec
inc
je
inc
lret
add
sub
and
insl
daa
shlb
inc
sub
faddp
sbb
jb
jecxz
push
and
push
rep
rcl
insb
cmc
jmp
loop
add
sbb
jae
sub
in
mov
push
cld
call
jg
imul
inc
loopne
jnp
add
mov
jg
cs
popf
pop
in
es
mov
cmp
movb
xchg
jne
mov
in
add
daa
xor
lds
jbe
test
inc
stos
mov
pop
divb
sbb
cmp
add
sbb
repnz
outsb
or
mov
pop
adc
mov
addb
mov
ret
icebp
stc
fbstp
add
or
dec
rorb
cmpb
mov
xor
fimull
xor
push
mov
cmp
sbb
movsb
push
sbb
test
jle
dec
sub
sbb
dec
adc
mov
ret
jle
cmp
cmpsl
loopne
mov
mov
shl
add
je
cs
xor
fwait
scas
add
test
leave
arpl
mov
or
fstps
mov
scas
je
loop
dec
int
pop
fisttps
fbstp
dec
inc
and
or
out
pop
mov
dec
andb
mov
shl
ret
outsl
sbb
add
fisubrs
es
jnp
cs
in
insb
fcomi
jl
cmpsl
aam
jno
cli
mov
adc
cmp
arpl
sub
notb
or
ret
stos
sub
sbb
imul
insl
jbe
icebp
push
loope
mov
inc
cmc
and
sbb
lods
cmp
scas
in
or
jne
dec
jnp
es
xor
std
add
add
pop
or
xchg
loop
adc
jg
ret
dec
stos
sti
lret
movsb
je
cmpsl
out
mov
imul
pop
lea
daa
cmp
cwtl
xor
or
popf
push
mov
shlb
sub
aas
xchg
push
ds
cmp
push
lret
xchg
xchg
cs
xchg
xor
cwtl
xor
shr
hlt
xchg
jae
or
das
mov
stc
dec
push
loope
pop
mov
pusha
call
pop
movsl
stc
pop
sbb
dec
daa
sahf
outsb
mov
ret
pop
rorl
jno
mov
and
adc
add
mov
enter
js
cmpsl
and
iret
test
add
jg
sahf
jnp
add
jmp
movsl
cld
push
ret
mov
test
cmp
and
insb
fwait
pop
lahf
jmp
pop
idivb
fidivrs
call
jbe
jl
xlat
iret
testl
aas
aad
je
cltd
loop
push
test
stos
cmpsl
loop
shlb
cmp
es
push
push
add
mov
inc
movsb
bound
adc
pop
js
movsl
mov
sub
imul
mov
add
push
jmp
xor
dec
fwait
ja
pusha
sbb
shl
int
xchg
cmc
test
or
inc
in
and
cs
inc
mov
adc
daa
inc
leave
fiaddl
pop
push
add
fcomi
nop
push
repnz
popa
push
push
ret
ret
cmp
and
cmp
xchg
push
mov
cli
incb
pop
sbb
clc
push
push
sbbb
jne
pop
fsubrs
add
out
pop
mov
ds
pop
pop
sub
scas
xchg
jl
sub
xor
mov
loop
pop
cmp
int
push
adc
std
lock
pop
shl
mov
dec
cmp
xor
jns
sbb
mov
fs
ret
jnp
fistpll
aad
and
xorl
lret
repnz
pop
rclb
cltd
clc
arpl
stos
mov
stos
or
add
fs
ret
ficoms
rcrb
inc
test
jl
sbb
mov
or
mov
and
pop
pop
push
dec
unpckhps
and
paddw
and
xor
xor
cmp
fidivs
xor
inc
test
insl
repnz
cmp
jbe
nop
jmp
xchg
or
scas
jbe
jne
inc
sub
fadds
mov
dec
jl
cvtpi2ps
dec
sbb
repnz
mov
and
xor
xchg
push
cmc
lods
adc
in
leave
mov
mov
js
and
mov
push
pop
fidivrl
pop
mov
push
test
cmp
inc
or
ficoms
aad
jb
inc
ret
mov
jnp
xor
pop
mov
push
scas
mov
adc
push
cs
fldl
mov
int3
fs
frstor
fstl
jns
aam
loope
stc
sbb
or
sub
ret
sbb
mov
ds
sub
or
bound
xchg
pop
push
push
dec
or
xorl
and
in
pop
add
jmp
mov
les
sub
sbb
fsts
inc
xchg
ud1
or
iret
clc
pop
pushw
enter
pop
sbbl
push
mov
leave
pop
pop
shl
aaa
into
int3
inc
ror
xor
sub
dec
cmc
call
mov
repnz
mov
jo
xor
add
or
imul
sti
aaa
test
mov
lret
cmp
cli
in
stc
stos
sub
sarl
lret
sti
push
inc
xchg
repz
pop
cmp
xchg
pop
lahf
cmc
sbb
mov
ret
sahf
enter
cld
loopne
fisttps
jmp
lcall
add
negb
push
stc
lea
out
dec
imul
outsb
add
xor
icebp
xor
fwait
pop
fldcw
xchg
jb
bnd
xor
push
es
stos
in
sti
jno
adc
ret
insb
push
mov
test
out
out
lea
popf
jbe
mov
adc
inc
add
push
test
push
mov
pop
imul
ja
stos
sub
iret
ret
shl
mov
inc
mov
rolb
sub
and
lret
in
mov
sbb
out
and
adc
ffreep
sbb
xorb
clc
mov
aas
cmpsb
pop
jae
xchg
jns
repz
mov
push
shl
xchg
fbld
push
inc
mov
lret
in
mov
mov
loop
push
push
idivb
sbb
sub
and
mov
sbb
call
adc
mov
mov
hlt
pop
pop
mov
jbe
out
push
in
adc
jge
repnz
inc
insl
test
or
mov
rol
jl
repnz
imul
mov
pop
adcl
outsl
adc
jg
inc
out
sbb
sub
xchg
dec
bound
mov
pop
cli
xor
cld
mov
mov
div
push
inc
dec
clc
jo
data16
fistpl
or
sub
iret
repz
aas
and
fndisi(8087
xor
cltd
sub
sbb
jecxz
aam
mov
add
pop
in
je
ficompl
mov
mov
and
adc
aam
fidivrs
repnz
mov
in
mov
lret
push
cmpsb
jns
ret
sub
push
int3
mov
scas
cmpsl
dec
aam
je
jecxz
jg
ja
repz
and
pop
mov
pop
lock
subl
xor
into
push
rorl
cli
fsubs
dec
jle
mov
movsb
xor
subl
stos
push
int3
jo
jge
popa
mov
xor
and
stos
cmp
add
movsl
fistpll
movsl
cmpsb
jns
stos
push
or
fcomi
in
mov
fcmovbe
sub
inc
pop
daa
mov
xchg
dec
je
and
fstpt
orb
inc
lock
ret
sub
or
inc
sbb
pop
jns
or
pop
xorb
mov
cmpl
push
push
das
dec
cmp
xor
mov
sub
rol
jle
loopne
lret
clc
pop
xchg
jnp
push
xor
pop
dec
xchg
inc
push
add
xor
and
rorl
or
arpl
stos
pop
gs
and
lock
in
push
dec
add
ficompl
cltd
sub
xchg
cs
add
inc
pop
mov
mov
inc
add
and
dec
int
movsb
and
adc
add
xchg
and
lret
icebp
xchg
cltd
shll
pushaw
push
or
or
pop
sub
cli
push
pop
jg
dec
sbb
cli
addr16
rcr
adc
es
adc
sbb
inc
mov
mov
test
je
bound
pop
enter
jmp
inc
lock
out
lret
jo
stos
ret
jge
fstl
loopne
lahf
int
and
xor
push
les
es
mov
pushf
enter
lret
insb
mov
inc
and
sar
jbe
popa
or
fbstp
test
ss
ret
div
xor
hlt
lock
loopne
sbb
outsl
cmp
push
xor
inc
push
ljmp
adcb
sub
loope
mov
dec
mov
ja
dec
pop
adc
enter
sub
jb
bound
scas
jbe
scas
mov
scas
out
cmp
pop
push
inc
sbb
dec
xchg
xchg
js
xchg
mov
mov
sti
add
cld
lret
adc
xchg
outsl
inc
les
sub
repz
push
stc
ja
mov
push
pop
mov
hlt
mov
int
lods
in
add
push
mov
or
adc
mov
iret
sub
lods
mov
test
iret
insb
fisttpll
sar
insb
mov
in
ret
icebp
xchg
iret
jb
mov
xchg
ret
scas
xchg
popf
insl
add
xchg
filds
ficoms
or
pop
rcrb
push
mov
inc
dec
dec
inc
lahf
mov
daa
push
mov
lret
xor
dec
mov
sarb
scas
push
push
movsl
jnp
push
lret
mov
cmp
cmp
and
loopne
sahf
daa
shll
mov
push
jbe
fstpt
outsl
and
cmp
xor
sbb
xchg
enter
hlt
cmp
aas
int
repnz
clc
push
fidivrl
dec
sub
sbb
jge
icebp
lea
testb
mov
sbb
xchg
andl
das
inc
mov
or
jl
sbb
sub
outsl
or
adc
in
jmp
cmc
dec
or
into
fwait
dec
pop
jne
mov
sub
repnz
pop
sbb
or
icebp
mov
insl
jmp
sub
mov
cmpsl
mov
leave
test
jae
rorb
adc
pushf
mov
repz
int
imul
mov
cld
pop
push
pop
cmpsl
jp
jl
arpl
out
not
inc
notb
jge
dec
add
inc
and
xor
into
je
pop
out
xlat
dec
add
push
push
jb
dec
aad
js
or
inc
mov
xor
mov
dec
mov
cmp
sub
lds
inc
insl
je
xor
shll
mov
fidivrs
push
test
std
or
jmp
xchg
stc
pop
shlb
pop
out
xchg
fdivs
push
or
mov
in
repz
jle
xor
scas
mov
inc
mov
hlt
clc
addb
mov
adc
stos
jne
je
lret
pop
cmp
cmp
ret
sbb
sbb
mov
shrl
sbb
dec
in
xor
push
mov
hlt
pop
ret
jle
sub
mov
cmp
dec
test
dec
js,pt
jno
jecxz
aad
scas
and
xor
test
iret
stos
push
orl
lea
jmp
aam
xchg
inc
lcall
xlat
mov
cmpb
loopne
test
cmp
xor
dec
adc
sbb
cmpb
jmp
in
adc
sti
je
push
jl
pop
sbb
aam
sarl
daa
test
mov
out
loop
push
popf
jmp
leave
test
add
pop
movsl
adc
orps
arpl
lods
mov
pop
jmp
shlb
int
addr16
or
fwait
insb
incb
dec
xlat
les
pop
ret
jbe
and
fcomip
dec
cmpsb
shll
call
cmpsb
mov
fcmove
js
lea
mov
outsl
jecxz
es
inc
xlat
or
iret
lcall
fisubrl
into
cltd
loop
push
lahf
rcll
pop
in
add
loop
stc
inc
es
cmpsb
rcll
out
xchg
sub
jmp
pusha
sbb
ljmp
inc
jo
sbb
jmp
ret
adc
ds
dec
xchg
cmp
popf
and
lock
popa
adcl
push
mov
icebp
loope
add
mov
push
inc
in
hlt
leave
xor
pop
add
push
stc
hlt
add
mov
push
sar
pop
aas
and
push
sbb
cmp
adc
fs
loope
or
dec
insl
aas
sub
pop
test
inc
cli
xchg
out
into
dec
lret
imul
jne
ss
push
add
int3
in
mov
lods
jo
cmp
inc
jae
clc
ss
fiadds
adc
lods
adc
jo
jecxz
in
xchg
sbb
xor
cwtl
xchg
jp
push
and
cmpsl
xchg
lcall
out
aad
aaa
dec
xlat
inc
je
les
fs
repnz
inc
xchg
pop
lcall
out
dec
div
sbb
jae
mov
jno
loope
mov
outsb
jg
adc
mov
inc
inc
cs
pop
loopne
inc
into
ljmp
jns
cmp
jae
xlat
ss
or
es
cmpsl
mov
out
outsl
mov
push
negl
sub
xor
xchg
pop
dec
lea
jecxz
test
cld
in
inc
mov
shll
out
or
mov
enter
xchg
pop
xchg
std
and
adc
or
jae
xor
pop
mov
mov
add
mov
ret
dec
stc
iret
xor
adc
sbb
fs
xor
addr16
popf
aaa
fmuls
and
xchg
and
inc
xorb
cmp
shrb
ret
cmpsl
pop
dec
jecxz
int
xchg
ja
es
mov
cmp
jl
out
mov
cs
imul
jl
aad
jmp
sbb
outsb
pop
adc
loop
scas
lret
lahf
mov
inc
out
rcrl
sub
add
pop
mov
and
mov
dec
cmp
add
ds
cmp
out
mov
xchg
enter
cltd
mov
das
sbb
cmp
push
dec
or
or
cmp
adc
out
push
add
add
std
cmp
lea
mov
pop
sub
arpl
leave
lds
shll
push
pop
mov
data16
sub
rcll
and
pop
xchg
pop
roll
fdivrp
adc
or
or
insl
int3
xor
ljmp
xor
pop
sbb
jns
in
mov
and
mov
dec
lret
aam
mov
gs
pop
pop
out
fdivs
cmp
vpmovsxbd
dec
ret
mov
mov
xchg
in
sbb
jp
and
lods
out
fcomps
pusha
sahf
push
scas
jmp
addr16
fdivs
pop
and
sbb
or
mov
push
lret
cmpsl
cmpsl
loopne
xor
adc
sbb
fiadds
movsb
pand
add
mov
mov
fdivrl
decl
add
repz
into
outsb
cld
dec
out
addr16
fdivrl
stc
xchg
push
xor
push
mov
dec
inc
or
pop
xor
ret
ljmp
dec
sbb
or
jae
movsb
out
cmpl
hlt
leave
int
cmpsl
mov
cwtl
aaa
adc
add
xor
imul
loopne
fadd
ss
mov
sbb
cmpl
cmp
rcll
testl
aad
jmp
adc
pop
or
cmpl
push
enter
bound
aaa
ja
ljmp
int
push
mov
jle
pop
dec
lcall
ljmp
lahf
das
xchg
outsl
rcrb
leave
loop
in
icebp
jbe
and
mov
jle
sub
jne
nop
lds
fsubr
sarb
pushf
and
push
fbstp
inc
cmpsb
xchg
pop
repz
jb
cmpsl
fisubs
lock
aad
lcall
pop
mov
stos
or
lods
sbb
repz
cmp
bound
sbb
mov
mov
xchg
pop
jae
mov
stos
cld
inc
inc
jnp
inc
lods
or
mov
int3
cld
cld
push
xor
and
addl
push
cld
mov
fstps
inc
and
nop
pop
jne
sti
lods
xlat
adc
xchg
out
push
sub
and
imulb
out
lds
outsb
js
xor
pop
mov
int3
std
xchg
cmpl
rorl
lds
push
jne
decb
push
xchg
push
test
push
mov
and
sarb
jle
int3
hlt
mov
mov
mov
repz
xchg
decb
inc
sbb
test
fcomps
gs
or
cmp
cmp
cmp
cltd
mov
add
mov
nop
sbb
push
bound
mov
rorb
pop
cld
jl
je
inc
dec
lds
and
jg
cmp
lcall
setns
cmp
dec
aam
loope
push
std
shrb
mov
nop
adc
dec
inc
sbb
scas
add
xor
pop
pop
push
xor
cmpsb
cld
enter
dec
push
hlt
xor
push
adcb
sbb
loopne
rorl
cltd
push
sbb
cld
adc
lods
int3
arpl
jmp
inc
lret
daa
jae
mov
imul
int
cmp
or
xchg
out
jecxz
out
jle
imul
sbb
jno
lret
sahf
fcmovb
gs
push
shll
sub
mov
int3
jnp
xor
stos
push
or
jae
addr16
adc
gs
or
js
sbb
mov
outsb
xor
clc
xor
jecxz
pop
lret
arpl
mov
in
sti
push
call
mov
cmc
in
dec
push
dec
cmpsb
mov
in
adc
mov
in
sub
lock
dec
push
test
pop
outsl
repnz
add
ret
xor
jbe
cmp
sbb
push
jbe
imul
fcoms
pop
sub
inc
cmp
push
addr16
dec
jbe
sub
or
scas
pop
xor
mov
flds
call
stos
push
arpl
test
mov
shrl
sahf
cmp
nop
push
mov
ja
movsl
jo
testb
mov
imul
push
mov
repnz
inc
pop
cltd
lods
or
ljmp
jge
push
pop
cli
jae
movsb
cmp
psubusb
faddl
jbe
mov
sub
clc
or
mov
sub
rclb
out
mov
mov
das
sbb
mov
shlb
adc
jno
sbb
test
rorb
pop
bound
fs
mov
popa
in
xchg
insl
jo
andl
test
mov
xchg
jp
push
rcll
test
or
push
jno
adc
insb
in
inc
add
push
loope
out
mov
fmull
pushf
jns
cli
lret
xor
mov
ret
dec
mov
xchg
pop
test
and
mov
es
clc
jbe
xor
ror
jbe
mov
sbb
push
mov
dec
dec
push
xchg
mov
mov
dec
shlb
test
test
lahf
lcall
call
dec
ds
mov
aam
in
sub
sub
mov
mov
scas
aas
imul
cmp
cmp
sarb
jo
vfnmsub132ps
mov
iret
ja
addr16
dec
jp
push
arpl
movsl
imul
mov
cmp
xor
mov
scas
jo
lcall
idivb
jne
xchg
jmp
pusha
xchg
pop
jp
movsbl
int
scas
ret
nop
jne
mov
jl
pop
cwtl
scas
sbb
adc
popf
imul
fcomps
sbb
jp
insl
loopne
jne
movsl
and
jge
mov
xchg
push
sbb
and
inc
xor
inc
fwait
xchg
es
xchg
mov
outsl
mull
mov
iret
jl
jle
sub
push
sti
inc
fbld
outsb
xor
sub
cmp
stos
sub
fsubr
adcb
mov
in
ret
loope
hlt
adc
faddp
int
xor
ljmp
pop
repnz
and
scas
aas
dec
xor
and
mov
adc
loop
xchg
xchg
cmp
jg
mov
loop
mov
jmp
or
test
in
ljmp
jg
cmpsl
adc
jecxz
dec
faddp
mov
sbb
scas
xchg
mov
negb
mov
lcall
loope
outsl
sahf
imul
add
sub
xchg
scas
mov
cld
or
ss
std
out
fdivrp
add
push
es
ja
ficomps
pop
ret
xlat
lods
lds
jno
dec
in
xchg
add
iret
or
inc
mov
rorl
jns
add
mov
fs
sti
lds
mov
add
cmpsb
add
scas
loopne
or
pop
rcl
and
sub
insb
xchg
test
fs
lcall
ja
xlat
repnz
or
mov
scas
testl
ret
test
inc
jecxz
xor
jp
push
daa
sbbb
sub
repnz
jbe
imull
sub
pop
pusha
mov
arpl
inc
dec
mov
outsb
sub
jmp
xor
adc
repz
push
dec
sbb
dec
addr16
nop
das
pop
add
dec
cmp
xlat
hlt
dec
filds
fistl
fistps
das
hlt
in
cwtl
cld
adc
hlt
or
mull
adc
push
push
mov
push
adcb
emms
jp
cmp
xor
mov
or
mov
lds
adc
cmp
adc
mov
pop
dec
pop
xor
mov
hlt
push
insb
rcll
mov
mov
mov
out
adc
mov
lds
adc
or
mov
popa
sbb
or
pushf
mov
adc
loop
ror
or
aaa
imul
ja
xchg
lock
lods
daa
pop
out
js
mov
ds
mov
arpl
stc
or
enter
cli
ljmp
mov
fs
jge
pop
mov
inc
fistl
pop
push
insb
shr
nop
pushw
scas
iret
mov
sub
and
insb
xchg
out
lret
adc
fwait
xlat
fsubrl
inc
sub
cltd
in
ljmp
xchg
sub
sub
and
aas
pop
pop
addl
aam
lods
mov
nop
addr16
mov
mov
out
movl
popa
jae
dec
fimuls
mov
ja
jb
lock
inc
imul
inc
sbb
or
sub
popf
sub
add
clc
xor
cmp
cmp
out
xchg
ret
jbe
out
adc
into
daa
mov
negl
add
jp
lea
cmp
faddl
and
pop
jbe
cmp
leave
insl
jmp
sbbl
cmpsl
mov
and
jbe
pop
sbb
dec
ret
mov
push
mov
ret
ljmp
pop
aaa
push
repz
mov
add
cltd
aam
mov
mov
jne
std
mov
mulb
sbb
inc
mov
rolb
popa
cmp
lods
mulps
enter
clc
push
hlt
push
mov
lock
dec
fsubs
cltd
sbb
sahf
pop
inc
adc
sbb
pop
cltd
jmp
shll
mov
push
xchg
lods
cmp
xchg
sub
jp
ds
cli
insb
adc
lahf
dec
adc
mov
andl
out
pop
mov
mov
ds
std
cmpsl
subl
or
mov
fisubrs
arpl
out
mov
cmp
cltd
mov
mov
iret
insb
dec
fwait
inc
pop
pusha
push
iret
lret
xchg
adc
and
or
lods
jne
push
cmpsb
addr16
pop
or
mov
mov
lahf
ss
test
subb
xlat
nop
jle
mov
stos
mov
or
fidivrl
mov
pop
adc
and
cmp
sub
test
shl
hlt
stos
incb
lods
push
or
outsl
cld
pop
stos
dec
subb
ret
out
test
xorb
jmp
dec
pop
mov
lods
or
pop
dec
repnz
nop
mov
dec
inc
enter
pusha
and
out
adc
mov
jmp
lea
popf
cs
jae
loopne
out
add
fildl
call
sti
cmc
sbb
add
enter
mov
and
xor
das
fisubs
testl
popa
or
inc
and
insb
adc
pusha
push
leave
pop
iret
xchg
stos
rep
and
test
cli
pusha
aas
fwait
scas
sbb
data16
rclb
mov
clc
leave
mov
sbb
fmuls
clc
je
dec
aaa
or
dec
push
imul
mov
aaa
mov
comiss
sbb
lock
daa
out
sbb
lret
xchg
jp
xor
js
movsb
cld
sub
fidivl
mov
pop
cli
sarb
in
fdivrl
push
pushf
out
push
cs
out
mov
xor
js
std
mov
rcll
in
add
fisubs
daa
cmp
mov
jo
cmpsl
enter
in
nop
in
sub
shrb
mov
mov
jg
pop
cmpsb
ss
stc
adc
xchg
sarl
int
ret
xor
out
adcb
or
gs
sbb
xchg
dec
call
adc
cli
jb
or
arpl
jp
movq
dec
adcl
out
mov
dec
pop
cld
in
dec
fdivs
mov
daa
push
lods
pusha
fucomip
mov
or
sbb
add
and
test
fildll
mov
inc
insl
imul
sub
dec
test
outsb
mov
lcall
push
mov
push
add
sub
mov
mov
dec
cld
sub
test
shl
cmp
pop
cmp
call
cs
loop
into
xchg
pop
nop
mov
mov
pusha
sahf
jge
mov
fidivrs
clc
outsb
mov
decl
iret
icebp
mov
sub
stc
adc
das
call
iret
mov
test
int
addr16
les
sub
gs
xor
test
repnz
xor
mov
xchg
std
arpl
or
test
out
cmp
aaa
out
adc
xchg
test
iret
jno
jge
fwait
mov
sub
inc
fldl
lods
outsb
addr16
jge
stos
and
shll
mov
mov
sbb
insl
test
pop
fisttps
shll
scas
gs
dec
fs
push
imul
jmp
adc
fwait
in
jae
loop
ret
das
xchg
jmp
cmpsl
aad
int3
push
mov
aas
addr16
sbb
sub
js
ljmp
adc
pop
loop
fnstsw
adc
inc
fdivr
movsl
pop
pusha
stc
mov
arpl
out
decb
fs
nop
sbb
fwait
mov
addr16
xor
sub
adc
or
shlb
and
mov
outsl
scas
rorl
fadds
pop
sub
push
std
orl
adc
repnz
popf
xor
xlat
xchg
mov
dec
cmp
inc
add
loop
mov
lds
xchg
negl
mov
dec
addl
adc
dec
inc
add
js
inc
sbb
cmpsb
mov
and
movl
cmpsb
and
in
aaa
das
std
in
pop
mov
sti
adc
outsb
cs
fcmovb
jo
xchg
out
stos
inc
ljmp
imul
test
cmp
incb
testl
pop
bound
mov
aam
clc
jo
add
dec
mov
push
push
hlt
in
sub
lea
or
adc
andl
sub
xor
outsl
fcoms
ljmp
mov
sbb
loopne
mov
sbb
pushf
test
fildl
inc
pop
mov
mov
sarl
fsubrs
lds
push
push
ret
call
sub
mov
test
sub
pop
loope
test
aad
test
pop
jmp
cmp
dec
into
xchg
jl
hlt
push
movl
mov
pop
in
lahf
cmp
dec
add
popf
mov
ja
mov
push
daa
adc
out
add
test
jmp
mov
sbb
das
leave
inc
mov
cld
sbb
pop
xchg
dec
dec
add
inc
push
sub
push
jb
push
out
push
push
and
shll
popa
ret
pop
shlb
dec
push
cwtl
int
jb
mov
test
push
push
jle
popa
test
mulb
inc
in
cmovs
push
aam
jge
aas
popf
repz
popf
inc
loopne
divps
stos
je
mov
mov
jno
pushf
scas
mov
shlb
sbbl
sub
cmp
adc
out
adc
cli
push
cmpsl
rclb
jp
pop
push
dec
add
je
push
imul
lret
sbb
pop
push
sub
pxor
cmc
insl
dec
pop
fwait
inc
pop
lds
xor
out
jge
lods
into
and
adc
fs
test
test
mov
cmc
in
mov
xor
push
lret
and
test
in
dec
cltd
in
mov
loope
jno
mov
leave
xor
xorb
and
cli
iret
ficompl
add
lret
xlat
stos
lahf
mov
ljmp
inc
fdivs
mov
pop
pop
fsubrs
loopne
cmp
sahf
mov
push
jno
int
or
leave
les
fildl
lahf
mov
cltd
test
cmp
cmpb
imul
aaa
fdivrs
mov
push
daa
mov
stos
add
addb
inc
jne
or
inc
pop
aad
adc
cld
mov
jo
push
arpl
stc
or
into
and
sbb
adc
cltd
jg
add
out
inc
in
clc
pop
out
cltd
add
mov
add
sub
and
aam
mov
scas
add
sub
mov
sub
shlb
movsl
jae
mov
sbb
icebp
addr16
js
mov
idivb
ficomps
pushf
dec
and
popa
jae
sbb
dec
mov
inc
add
cmpsb
push
inc
int
xchg
sbb
mov
xchg
pop
xor
fdivrl
cmc
cld
outsl
lahf
outsb
xchg
lcall
xor
int
dec
jb
lea
clc
inc
mov
mov
addb
les
fwait
xor
out
adc
lds
xor
aam
outsl
test
jb
ret
fcomi
aas
xchg
int3
push
fistps
mov
sub
adc
inc
jae
jns
inc
mov
sbb
fsubrs
mov
jo
sbb
stos
push
jo
adc
ss
lret
jge
xchg
add
mov
ja
mov
mov
or
retw
cmpsb
pushf
addr16
jb
jns
into
dec
fsubrs
adc
sub
jp
out
aad
inc
cmpb
rorb
sbb
movsb
inc
or
fs
pop
lea
dec
lcall
and
lods
push
xchg
imul
xor
aaa
movsl
cli
jne
dec
and
jo
ror
testb
dec
or
push
sub
push
jno
or
subl
xchg
push
in
mov
mov
mov
inc
xchg
int3
or
ds
mov
sub
sarb
adc
xor
inc
sub
outsl
lea
add
jp
push
loope
mov
mov
cmc
cmpsb
cmc
adc
pop
mov
fcom
dec
orb
adc
sub
fwait
stos
pop
test
outsl
adc
xor
jne
adc
add
adc
or
push
mov
dec
lret
popa
pop
out
enter
push
cltd
call
mov
ja
xchg
test
cmpsl
cld
and
lock
leave
test
lock
cmpsl
jno
push
bnd
mov
movsl
jmp
mov
jle
jbe
bound
cld
ds
mov
pop
jmp
jb
sets
rclb
xor
xor
or
dec
or
mov
data16
test
dec
testl
add
fdivr
ret
add
fistpll
mov
or
lcall
xchg
popf
mov
hlt
fwait
es
stos
mov
fwait
sub
adcl
mov
out
mov
call
clc
cmp
jbe
shll
adc
nop
mov
sub
test
sub
xchg
aaa
mov
and
sbb
inc
dec
stc
aad
in
mov
stos
das
iret
lahf
sbb
xchg
inc
mov
scas
pop
jbe
mov
sbb
shrl
dec
movsl
sub
loop
jo
or
and
test
jo
pusha
mov
addl
nop
mov
jne
enter
adc
adc
adc
and
rorb
jl
lgs
cmpsl
mov
es
jl
sub
mov
das
outsb
pop
xor
xor
mov
add
pop
dec
insb
jg
sub
jecxz
push
pop
call
sub
cmp
push
loopne
mov
xor
ja
sub
xor
cmp
dec
lods
ret
jb
popf
mov
pusha
xchg
sbb
lods
ds
mov
and
movsb
jnp
cwtl
fildl
mov
and
mov
push
or
push
jb
gs
mov
aas
xchg
inc
fmuls
and
sub
ss
pop
mov
aaa
adc
jae
adc
mov
lea
out
pop
das
test
lahf
lret
movsl
and
in
pushf
mov
imul
push
test
orl
rcr
xor
icebp
repz
push
and
popa
lock
and
sub
jne
mov
mov
or
jo
xor
mov
loopne
xchg
push
dec
mov
repnz
dec
aas
sbb
ja
cli
shl
and
insl
inc
mov
mov
bound
nop
dec
dec
inc
mov
add
jecxz
mov
mov
jge
fnsave
je
xor
adc
paddusb
push
inc
pop
xor
int3
jg
mov
adc
out
rcrb
inc
jmp
mov
inc
mov
ja
orb
aas
lahf
stc
out
out
pop
push
lret
fstpt
call
bound
and
and
lcall
and
lea
xchg
decb
inc
add
xor
iret
shll
inc
gs
push
push
mov
dec
pop
je
xor
iret
mov
ljmp
push
jo
out
das
sbb
adc
push
sub
ljmp
sbb
stos
add
fstl
and
adc
add
adc
mov
push
cmp
icebp
in
sub
sub
aaa
lods
and
nop
int3
sub
aad
mov
sbb
sbbb
inc
pop
jle
add
and
mov
jbe
movsl
decb
jne
in
jecxz
xlat
popf
orl
shrb
data16
push
insl
sub
mov
and
push
mov
fcomps
sbb
mov
xchg
es
fbld
test
insb
mov
cmp
push
dec
push
test
mov
inc
inc
push
sbb
cmp
inc
xchg
aaa
mov
push
and
cmp
sbb
inc
push
in
dec
in
jbe
test
jmp
out
sbb
mov
lods
mov
lcall
push
mov
push
fldcw
mov
or
pop
mov
test
cwtl
xchg
inc
xor
dec
add
out
sub
lods
jbe
lods
add
mov
ja
fstpl
popf
std
ja
and
mov
mov
or
sbb
std
mov
jae
cmc
mov
sbb
lea
insl
add
mov
popf
jns
push
in
pop
mov
outsl
lods
and
inc
adc
inc
mov
inc
xor
mov
push
shll
or
bound
and
mov
sub
sub
jecxz
xor
fdivp
push
add
jmp
sub
xor
fstps
dec
add
inc
mov
mov
jg
loope
cmp
pop
jno
das
test
aad
in
das
sarl
push
scas
pop
push
out
mov
cmp
shr
jecxz
std
sti
scas
mov
scas
or
xor
mov
mov
fldl
out
dec
mov
lock
jb
xchg
xorb
mulb
pop
or
jecxz,pt
cmc
ja
mov
inc
jmp
dec
push
enter
scas
out
rclb
adc
shl
leave
ficomps
xor
pusha
addr16
mov
lock
mov
jmp
les
jge
popf
add
xchg
mov
inc
insl
inc
cld
and
cli
inc
cld
jecxz
in
or
jo
insb
flds
sbb
add
rcll
cmp
jo
dec
mov
mov
bound
test
std
jno
jb
sbb
xchg
add
jne
mov
sbb
scas
cmp
adc
js
sbb
popa
inc
sbb
pop
inc
xor
stos
in
fisubrs
or
cmp
pushf
out
sub
rclb
sahf
sub
jne
in
test
scas
addl
dec
cmc
jb
enter
js
lahf
aam
ror
jp
cmp
mov
xchg
push
jge
les
sahf
or
inc
inc
outsl
dec
mov
sbb
sub
bound
sub
mov
sub
inc
lods
test
pop
mov
xchg
push
test
cmpb
dec
mov
push
scas
ljmp
fcom
or
inc
pop
mov
mov
pop
sti
inc
loope
mov
scas
cs
pusha
xchg
inc
lock
outsl
cmp
bnd
xor
insl
test
sub
or
and
fmul
push
sub
inc
movsl
xchg
xor
inc
sahf
push
mov
roll
faddp
or
ljmp
jbe
stos
and
js
aaa
pop
das
fwait
ret
aas
stc
test
add
cmp
sbbl
loopne
repnz
into
lret
sbb
sbb
jge
fisubs
cmp
out
add
push
adc
test
pushf
xor
mov
loopne
lods
jne
jbe
or
aaa
xchg
sbb
or
je
pop
ret
xchg
js
mov
sarl
jp
je
mov
or
mov
sbb
test
push
or
repz
mov
iret
mov
xchg
mov
pop
dec
outsl
in
xlat
pop
xchg
stc
andl
sub
stos
clc
jmp
dec
sub
add
fwait
inc
not
test
int
das
xchg
jg
xor
mov
sub
test
xchg
xlat
jmp
lods
mov
add
jg
sub
ret
lret
dec
ret
mov
pop
es
mov
js
mov
clc
and
cld
add
mov
lds
inc
pop
inc
testl
dec
addr16
das
jnp
jle
mov
stos
jo
lods
aaa
loop
sub
and
js
repz
aaa
inc
ficoms
jg
hlt
dec
andb
lods
movsb
pusha
dec
int3
cltd
mov
adc
xor
add
mov
cmp
lahf
and
push
adc
in
mov
mov
inc
or
mov
sbb
popa
pop
addr16
or
enter
jno
flds
lret
xor
jno
xlat
sbb
xchg
rol
loope
inc
mov
loopne
imul
cwtl
jo
es
loop
sarl
jnp
fmuls
mov
inc
ret
cmc
gs
pop
push
int
xor
inc
test
and
cmp
adc
xor
jle
jae
dec
mov
lret
adc
cltd
sub
sub
out
pop
xchg
push
sbb
lods
pop
mov
fs
testl
call
loop
repnz
and
std
xchg
fstpl
movsl
pop
fstpt
lret
loope
mov
ja
mov
lret
pushf
jns
test
stos
hlt
test
or
xlat
jae
pushf
xor
leave
out
fucomip
imull
adc
mov
stos
dec
int3
sbb
mov
pop
pop
sahf
pop
sbb
jl
scas
adc
pushf
loope
xchg
movsb
mov
leave
fcomps
ss
adc
shlb
pop
mov
lock
aas
aaa
add
xchg
pop
mov
int
lods
dec
cld
jmp
scas
add
aad
shrl
add
pop
data16
ss
xchg
push
jecxz
xchg
pushf
leave
mov
mull
and
mov
push
lcall
pop
add
xchg
pop
push
cld
outsb
inc
movsb
lcall
cld
nop
mull
or
fnstsw
ficoms
popa
stos
mov
popf
ss
jmp
xor
out
std
pop
scas
insl
ss
ljmp
jno
xor
jns
xchg
pushl
mov
adc
mov
push
testb
lock
or
loop
add
mov
rol
or
xor
das
xchg
cmp
cmc
jne
negb
pop
pop
lods
repnz
mov
ljmp
cltd
stos
add
out
push
mov
fidivrl
js
xor
jecxz
inc
add
je
pop
scas
mov
xor
aaa
mov
jg
push
pop
mov
jge
pop
aam
dec
int
dec
es
push
sahf
push
pop
aas
adc
and
push
mov
sub
notb
arpl
cwtl
push
xchg
lea
adc
ljmp
sarb
mov
dec
inc
inc
stos
dec
jne
lods
leave
ret
jo
mov
das
repz
or
test
cmp
mov
jmp
popf
clc
popa
push
arpl
xchg
ss
mov
popf
mov
sahf
mov
dec
andl
idivl
sbb
inc
or
clc
fisttps
cld
jnp
mov
xchg
dec
xlat
je
cmp
pop
cs
sti
mov
push
mov
daa
lea
cmpsl
insl
test
inc
pushf
ret
inc
mov
mov
arpl
xchg
pop
cmpb
aam
push
popa
arpl
jne
ret
adc
sbb
stos
jnp
ljmp
push
in
mov
fcmovbe
pop
rorb
call
add
xchg
xchg
push
repz
xor
in
nop
addl
push
mov
sub
add
out
inc
incb
iret
out
bound
mov
out
dec
scas
scas
std
pop
cmp
xchg
jp
loop
pop
sub
call
cmpsl
lock
inc
mov
xchg
xlat
cmp
sti
fldenv
in
insb
push
cmp
ss
lret
pop
outsb
or
fists
mov
jns
jmp
push
dec
les
std
xadd
sbb
add
imul
cmp
adc
aad
or
movsl
lock
call
movsl
cwtl
inc
push
xchg
icebp
pop
mov
test
shlb
sbb
cmc
inc
jbe
mov
fisubrl
xor
xor
mov
imul
inc
sbb
insl
scas
pop
or
inc
outsb
out
inc
movsb
xchg
lahf
jle
jae
cmp
cmp
or
or
push
mov
cmp
push
mov
outsl
into
adc
jb
or
sbb
arpl
cmpl
sub
push
fcomip
inc
loop
loopne
cmp
jo
xor
mov
inc
out
cmp
in
aam
lret
pop
pop
fsubrs
cmc
es
lock
lods
aad
shll
ficompl
add
inc
mov
xchg
pop
and
out
cli
divl
jo
jno
stos
pop
lods
popf
adc
adc
xor
ret
xchg
xchg
cmp
in
mov
fimuls
mov
orb
ja
imul
arpl
addb
add
sub
test
or
daa
push
scas
insb
mov
xchg
mov
sbb
test
xor
nop
mov
outsl
mov
mov
ficoms
lahf
rol
std
stc
mov
test
mov
jnp
rolb
out
cmp
lret
stc
lahf
test
mov
mov
rolb
inc
test
sub
hlt
jno
inc
scas
mov
adc
fnstsw
ret
sub
lds
aaa
ss
rorb
adc
jb
popf
inc
add
push
push
scas
flds
negb
or
int
rolb
pop
push
ja
jne
push
pushf
jmp
mov
hlt
aam
cmpl
mov
pop
xlat
mov
and
test
jnp
ds
mov
sahf
das
stos
sbb
out
in
insb
fs
insl
out
mov
sub
cld
popa
repnz
cltd
loope
into
ss
jg
js
mov
pop
sbb
outsl
pop
sbb
dec
sub
cltd
mov
cli
cltd
aam
and
cmp
cli
fs
mov
mov
pop
jne
cmc
icebp
sub
mov
in
into
jle
cmpsl
lahf
mov
shl
adc
mov
rcrb
ljmp
mov
inc
mov
hlt
or
scas
cld
loopne
bnd
adcb
insl
gs
lods
test
dec
popa
fsubl
stc
pop
mov
cmp
cmpsb
lods
push
add
xlat
xor
out
cmpsb
in
iret
push
mov
fstl
test
cmp
aad
xchg
pop
out
xchg
int3
mov
sub
testb
mov
movsl
mulb
sbb
pop
call
cltd
movsl
cwtl
push
sbb
add
into
lea
pop
das
pop
push
inc
popa
push
mov
shl
mov
cmc
std
and
pop
and
negl
push
inc
out
mov
shr
pop
lock
out
repnz
pop
jno
lods
pusha
adc
cmpsb
pop
cmp
pop
push
jnp
mov
out
pop
sub
cwtl
loope
inc
dec
and
int
xchg
push
mov
and
es
adc
push
xchg
adc
jg
lret
ljmp
xchg
ds
sub
lods
out
jg
xorb
int3
mov
dec
mov
add
nop
popf
xchg
jl
mov
les
mov
js
aaa
pop
sub
popf
xor
push
fbstp
pushf
and
pop
int
movsl
push
repnz
int
outsl
inc
inc
sub
pusha
jg
jmp
std
sahf
fbld
arpl
ret
cmp
aas
mov
aas
lea
ja
or
xlat
pop
or
and
iret
lea
add
clc
pop
and
push
mov
into
xlat
and
jmp
test
pop
fldenv
pop
mov
mov
int3
inc
ret
and
jnp
cmpb
mov
mov
pop
ds
leave
leave
ss
dec
scas
mov
enter
mov
sub
xor
test
lcall
ret
or
fcoms
std
sbbb
es
in
xor
mov
cli
mov
jae
add
ja
xchg
enter
pop
stc
add
jo
bsf
out
repnz
vandps
dec
dec
dec
adc
pusha
push
sub
cmp
or
push
pop
insl
mov
cmc
and
inc
fs
and
push
cmp
xor
dec
adc
pop
ficompl
lock
push
adc
les
insb
adc
jmp
cs
dec
jle
aas
xlat
cmpsl
sbb
call
pop
fcomi
orb
cmc
pop
sbb
cmp
nop
inc
into
xor
xlat
add
xchg
shlb
repz
sub
cmp
pop
dec
push
and
gs
push
and
mov
outsb
xchg
inc
jl
fwait
and
xor
xor
push
cmpsl
adc
add
loope
outsb
lods
jmp
jb
xor
pop
out
scas
push
or
dec
mov
cmpsb
movsl
dec
sbb
sbbb
jb
icebp
sub
add
das
adc
cmp
sbb
pusha
je
xlat
in
and
fmuls
arpl
inc
dec
xchg
sahf
rorb
sti
sbb
cmp
xor
xor
stc
cmp
xor
cmp
rcr
ret
xor
jnp
enter
dec
insl
or
ss
push
shl
movl
jmp
xchg
clc
mov
jecxz
mov
into
hlt
cltd
hlt
cmpsb
mov
scas
rcl
shlb
in
jmp
fwait
negl
mov
stc
int3
push
lods
test
sbb
dec
fmuls
push
pop
stc
push
jb
pmaddwd
enter
jnp
push
fists
add
outsb
imul
mov
mov
sub
mov
inc
xchg
std
xchg
fucomp
stos
out
add
cmp
ret
dec
adc
mov
shlb
mov
sbb
and
mov
mov
jle
ds
mov
sub
sbb
sbb
push
out
ds
mov
mov
es
or
add
add
cmp
mov
lock
ljmp
pop
mov
mov
jnp
pop
jle
loop
sub
rorb
test
push
dec
jge
pop
dec
adc
mov
mov
addb
insl
mov
shrl
cmp
aaa
mov
mov
mov
ljmp
adc
outsl
imul
inc
dec
ret
fdivrl
push
push
test
xchg
insb
xor
lcall
mov
jb
jp
or
sub
xlat
pop
in
add
push
cld
push
mov
mov
sbb
mov
dec
sbb
test
adc
jp
loopne
mov
popa
add
aad
cwtl
fstpl
xchg
sahf
xor
cmp
and
outsb
jbe
mov
stos
loopne
mov
je
shll
lds
xor
sbb
dec
call
aad
dec
ror
lds
mov
cli
jmp
es
in
gs
push
inc
push
jno
pop
ss
loop
add
movsl
sub
cmc
iret
mov
dec
dec
pop
add
adc
hlt
pop
push
fincstp
push
mov
adc
push
cwtl
add
xor
cmp
sarb
movsl
inc
stos
mov
jo
rcll
pop
cmp
push
xchg
jns
int3
sub
cmp
cmp
cwtl
push
ljmp
sbb
cli
xlat
pushf
sarl
xchg
sbbl
cmpl
mov
nop
cmp
shll
loopne
mov
cli
or
push
ds
jmp
insb
scas
ss
mov
xchg
pop
stc
push
sub
testb
mov
sbb
rcll
adc
ljmp
xchg
push
aad
testb
sti
nop
sub
cmp
xbegin
jecxz
adc
or
aad
and
lea
lods
lcall
ret
pop
push
out
gs
sub
push
or
testb
cli
arpl
sahf
icebp
aam
mov
push
push
mov
cwtl
sub
cmc
xlat
pushf
aas
das
push
xlat
pushf
fcmovu
xchg
in
out
insl
in
daa
push
dec
jb
or
jle
in
test
filds
adc
adc
mov
sahf
mov
shrl
and
dec
cmpsl
stc
loopne
ret
adc
int3
adc
pop
out
out
push
gs
xor
sbb
xchg
fwait
shlb
dec
lock
insl
jo
lcall
xchg
test
fcomps
stos
sub
mov
xor
stc
pushf
imul
mov
or
loopne
xor
fnstsw
in
scas
push
push
les
pop
fsubl
cmp
inc
mov
sahf
and
jno
xchg
mov
subb
popa
rclb
xor
bound
or
call
cmp
sub
jo
xor
xchg
movsl
adc
xchg
mov
out
sbb
dec
in
pop
sti
lea
add
mov
mov
xchg
rcrb
pop
lcall
fbstp
mov
pop
inc
xchg
and
test
or
das
ficoms
xchg
stos
jle
push
enter
sar
mov
arpl
cmpl
adc
inc
fiaddl
fistpl
add
fwait
stos
popa
cltd
icebp
mov
js
xor
sti
fiaddl
test
inc
jmp
mov
jmp
sub
out
cltd
shl
inc
je
mov
negb
inc
jnp
xchg
rcll
cmp
fisubs
arpl
sub
pop
cmpsl
pusha
mov
pusha
mov
mov
div
jmp
aad
ret
je
cmpsb
scas
cmp
xchg
rorl
xchg
in
stc
mov
sti
js
enter
inc
cmc
loopne
sub
jg
cli
push
add
xchg
pop
movsb
inc
call
call
mov
test
cmpsl
les
inc
insb
test
add
xor
xor
and
pushw
aam
inc
xchg
fmul
sub
out
fs
in
mov
aaa
in
pop
cwtl
hlt
pop
dec
push
fnstenv
shll
adc
jge
stos
and
dec
jae
stc
stos
push
jb
pop
mov
cs
jnp
out
mov
xchg
test
inc
das
push
shll
inc
mov
mov
fsubrs
add
adc
stos
pop
movsl
mov
ljmp
dec
aaa
sub
pop
mov
addr16
loopne
shlb
out
xchg
repnz
mov
daa
jmp
mov
out
cld
cwtl
imul
mov
push
inc
or
push
inc
enter
sar
repnz
icebp
scas
xchg
dec
mov
mov
and
movsl
int
push
jecxz
setnp
addb
mov
fdecstp
xchg
clc
pop
scas
fwait
mov
push
call
insl
add
out
dec
push
push
enter
jmp
pop
lret
inc
cmp
hlt
lds
push
fsubs
push
inc
je
cli
xchg
daa
mov
mov
lods
mov
or
mov
popa
in
sbb
je
mov
mov
mov
out
cld
gs
daa
imul
pop
add
ds
add
adc
mov
push
out
xchg
pushf
scas
scas
jecxz
aad
ret
cli
mov
inc
subl
orl
into
test
pop
out
enter
inc
mov
popf
mov
ja
movsb
dec
popa
lcall
mov
sbb
cmp
imul
cs
fnstenv
movsl
mov
cmp
lret
or
daa
jns
les
mov
adc
cmp
fisubs
sti
cmpsb
push
pop
mov
ss
div
xchg
mov
push
add
repnz
lahf
xchg
and
dec
hlt
ja
xchg
or
push
pop
sti
mov
push
inc
xchg
int3
enter
neg
add
pop
cmp
jb
popf
fwait
xchg
mov
addr16
insw
cmp
cwtl
pop
stos
inc
mov
or
mov
pop
fcompl
fnstsw
add
xorl
cltd
clc
cmc
push
push
mov
add
sbb
popa
mov
loopne
in
inc
int
in
in
xlat
hlt
sub
push
adc
pop
call
movsb
jecxz
outsl
adc
sarl
cmpsl
mov
stc
ret
mov
adcl
lods
and
and
mov
ret
pop
rolb
test
jnp
mov
jp
imul
or
xchg
divb
dec
jg
mov
fdivrs
mov
jb
bound
int3
sub
mov
outsb
lea
icebp
clc
cmp
cmp
rcr
popa
shl
mov
push
push
aam
sub
ja
gs
cli
mov
cs
out
jge
mov
adc
and
std
popa
mov
or
je
sub
cltd
jo
xor
test
push
out
inc
pop
aad
mov
aam
je
andl
iret
sbb
mov
inc
mov
inc
fnstcw
sbb
xchg
add
mov
out
pop
movsl
adc
jns
and
inc
ret
ja
inc
jbe
mov
xchg
sbb
adc
dec
and
xlat
int
test
push
test
sahf
int
mov
addr16
xorl
lods
fcoml
rolb
xchg
fsubl
pushf
xor
in
js
dec
and
scas
xor
push
popa
notb
pop
and
mov
push
mov
xchg
push
lcall
jmp
mov
outsb
mov
mov
addb
out
jecxz
shrl
pop
in
adc
inc
aas
and
insl
and
loopne
inc
jo
dec
pop
lods
and
fidivs
sub
xchg
mov
lods
mov
lahf
or
fsubp
aam
adc
push
pop
adc
cs
sbb
xor
inc
jecxz
mov
popa
je
sarl
out
jle
push
sub
and
dec
or
incb
mov
hlt
jns
loopne
stc
or
add
ds
stos
fstpt
cmp
sbb
or
je
fcmovnu
loop
in
and
fisubs
or
leave
inc
sbb
lret
sbb
aad
mov
test
subb
pop
in
and
sbb
out
aaa
rorl
popf
std
mov
push
popf
jg
ja
ljmp
pop
pop
cmpb
push
jae
cltd
sahf
sub
out
ret
inc
jge
mov
or
mov
cmp
dec
popf
sub
jle
movsb
push
sub
fsubrl
sub
stos
cmp
scas
popa
ficoms
dec
mov
xor
add
fcmovnbe
push
hlt
pop
mov
cltd
int
adc
adc
adc
outsb
shlb
imul
xchg
testl
push
jb
mov
cwtl
enter
arpl
call
jle
movsb
test
cmp
inc
push
aas
sti
sbb
sahf
pop
imul
pop
das
add
shlb
in
sbb
test
sub
push
imul
sbb
xor
add
sub
mov
add
daa
dec
shrb
push
bound
fcompl
testl
cwtl
lods
cmpsl
into
call
ss
pop
insb
inc
lret
pop
jmp
hlt
imul
sbb
movsb
mov
int3
mov
leave
popf
xor
and
fbstp
fwait
and
out
icebp
cwtl
jb
mov
add
insb
sahf
pop
or
aam
sarl
shrb
pushf
mov
insl
out
leave
mov
cld
jmp
mov
rorb
inc
adc
add
xchg
jl
mov
and
pop
and
aaa
add
xlat
testb
loop
hlt
andl
xchg
mov
jle
mov
shl
sbb
int
jecxz
jmp
push
mov
js
fisubs
nop
fwait
movsl
sbb
dec
sti
insb
hlt
enter
cmp
jnp
mov
add
pop
pop
daa
add
inc
shr
mov
into
pop
rorb
inc
ljmp
mov
arpl
andl
sub
shrb
in
cmp
mov
mov
cmp
cmpsb
daa
aam
lahf
sbb
mov
lcall
stc
xchg
mov
adc
inc
xchg
cmp
lahf
mov
cld
idivb
in
pusha
inc
sub
mov
xor
sub
push
dec
jbe
mov
push
and
shl
sbbl
and
mov
test
ret
jecxz
std
inc
ss
int3
fistl
mov
adc
neg
ficomps
popa
jle
jl
xlat
fucomip
or
adcb
repz
jne
inc
mov
adc
adc
cmpsb
push
mov
jne
int
ss
xchg
aad
out
imul
movsl
dec
repnz
adc
or
fidivrl
rcrl
pop
cmp
popf
cmc
icebp
inc
fadds
inc
sar
push
jb
jae
push
daa
into
and
fildl
insb
mov
scas
nop
inc
outsb
insl
outsl
leave
in
int3
jbe
mov
pop
stos
xor
mov
mov
cmp
mov
push
outsl
mov
arpl
ja
mov
pop
add
andl
cmp
bound
icebp
inc
arpl
cmp
addr16
adc
les
ret
jns
cmp
je
pushf
inc
or
sbb
out
pusha
push
scas
cld
add
add
popw
or
cmpl
or
push
in
dec
imul
mov
and
xchg
adc
xor
jae
mov
ret
cmpsl
subl
or
lret
mov
push
sub
clc
cli
mov
cmp
pop
stos
push
xor
aam
or
gs
sub
jmp
mov
xchg
loopne
mov
pushf
outsl
das
test
test
cltd
dec
pop
jns
rep
cmovae
mov
popf
xchg
mov
push
js
or
mov
pop
sbb
loope
jg
sti
rolb
cmpsl
mov
popa
xchg
jl
lods
xchg
fistpl
cmpsb
inc
in
or
leave
xchg
xchg
scas
mov
cmp
inc
popf
inc
pop
decb
bnd
inc
mov
jns
xor
mov
mov
outsb
jne
xor
cld
push
mov
inc
mov
mov
fstpt
popa
scas
divb
mov
out
cmp
pop
popf
sahf
cmp
mov
sub
or
pop
push
mov
cmp
enter
int
mov
cmp
insb
xor
dec
outsl
jge
cmp
mov
mov
pop
hlt
ret
adc
mov
jno
lds
and
mov
add
pop
pop
stos
aaa
int
xchg
in
lea
jge
ds
xchg
jbe
add
and
or
sub
push
jne
push
out
test
jne
loopne
sbb
aaa
xor
mov
push
mov
push
lods
pop
mov
cmp
and
in
imul
andl
or
outsb
daa
mov
aaa
repnz
stos
or
cmpl
inc
outsl
aad
xor
imul
rcll
sti
aam
inc
or
loopne
ret
insl
andl
push
stos
lret
adc
mov
bound
adcb
cld
push
mov
cmpsb
mov
jecxz
inc
mov
gs
scas
sbb
xchg
cmpsb
outsl
sbb
sbb
add
or
movsb
aad
enter
mov
or
sbb
jmp
push
jnp
add
or
xchg
add
outsl
mov
sub
es
push
sbbl
add
shrl
add
lret
cld
movsb
adc
xor
mov
push
xor
inc
jp
ljmp
les
mov
fucomp
pop
mov
dec
lret
lea
inc
add
cmp
sbbb
mov
mov
pop
xor
mov
pushf
add
arpl
inc
jbe
mov
fiadds
xchg
jl
cmc
sbb
sbb
mov
idivl
and
pop
xchg
sbb
cld
dec
inc
and
push
mov
roll
sbb
mov
das
insb
mov
loop
data16
loopne
test
out
ficoml
mov
ds
mov
add
xchg
sbb
add
mov
jge
in
jns
andb
js
das
sub
hlt
rclb
push
popf
lock
xchg
xchg
mov
mov
pop
daa
stc
imulb
dec
sbbl
or
xchg
xchg
aaa
cmpsl
ret
dec
mov
xor
adc
mov
jo
outsl
cs
repz
mov
adc
jmp
cmc
mov
jns
enter
pop
or
adc
xor
mov
mov
push
loopne
jecxz
in
dec
inc
mov
subb
insb
lods
mov
xor
addb
push
xchg
xchg
fst
in
lea
jecxz
add
pushf
jnp
add
jg
addr16
push
daa
std
into
pop
inc
mov
idivb
arpl
add
xorps
sarl
movsl
cmp
mov
loop
pop
aas
mov
loopne
or
shrb
stc
into
jno
ss
jb
xchg
push
and
aad
ret
idivb
adc
or
push
pop
inc
arpl
sahf
iret
out
mov
clc
mov
stc
jne
mov
or
popa
shll
aad
ja
lea
je
dec
adcl
insl
xor
mov
push
cwtl
cmp
xchg
pushf
cmp
mov
hlt
add
out
fildll
scas
mov
inc
enter
lea
push
lock
xchg
cmp
and
shlb
jo
dec
inc
testl
es
adc
sbb
test
out
pop
lret
fcompl
mov
and
sub
cmp
lods
loop
jbe
in
data16
mov
xor
cmp
hlt
cmp
sub
sbb
popa
xchg
push
ljmp
lock
jecxz
cmpsb
mov
cmp
int3
sbb
dec
xorl
pushf
inc
xor
aas
mov
xor
xchg
cmpsb
rcll
mov
inc
mov
add
sbb
gs
add
or
inc
adc
dec
and
push
dec
loope
lcall
or
jno
push
cmpsb
lods
lods
cli
std
jns
cmp
xchg
xchg
and
sbb
inc
dec
cli
lea
pop
push
sbb
lods
int3
or
fdivrl
sbb
inc
mov
in
loopne
ret
add
sbb
and
mov
inc
mov
xchg
add
push
pop
shlb
stos
add
adc
inc
addr16
in
mov
aad
mov
outsl
or
mov
xchg
test
jg
pushf
mov
or
in
pop
rclb
out
and
jmp
cvtps2pd
pop
lret
mov
push
test
js
sbb
in
lret
movb
mov
lcall
mov
cli
inc
lahf
popf
xchg
leave
push
test
xchg
mov
jl
dec
add
xchg
aas
mov
and
dec
inc
add
cs
jno
mov
inc
outsb
aam
inc
sub
add
adc
pop
push
jno
shr
addr16
mov
cmpsl
xlat
std
mov
add
pop
mov
sbb
in
fisttps
jmp
jmp
ficoms
push
jno
mov
mov
sub
inc
fucomi
dec
test
ret
neg
cltd
dec
push
loop
sbb
mov
aaa
hlt
jbe
sub
xchg
mov
jae
hlt
rorb
pop
je
dec
mov
mov
inc
repnz
outsl
sub
cwtl
jnp
nop
sub
popa
cmp
out
mov
mov
dec
xchg
dec
xchg
adcb
and
add
jns
mov
test
ds
aad
jae
xor
popa
outsl
mov
push
mov
clc
test
add
popf
addr16
dec
dec
subb
in
out
insb
sbb
clc
movsl
push
pushf
test
das
aad
ss
dec
stos
pop
sahf
and
cmpsl
icebp
imul
push
insl
data16
test
ret
test
mov
push
pop
std
into
cs
outsl
fidivs
imul
xor
jg
outsl
test
cmp
push
cmp
jns
push
ret
cmpsb
jns
out
jo
cmpsb
shll
int
jnp
sbb
es
out
popf
cmpl
test
inc
inc
or
dec
mov
in
pop
daa
out
test
xor
fs
mov
push
or
xchg
inc
scas
cmp
dec
sub
dec
ret
dec
popf
mov
lret
clc
dec
pop
into
mov
push
xor
jae
repz
xchg
mov
and
jp
addr16
push
adc
jae
sub
xor
daa
loop
fwait
test
jp
push
lock
stos
cmp
push
xlat
jle
or
ljmp
test
pop
mov
loope
jo
ja
xor
lods
jle
or
stos
cld
add
pop
mov
xor
mov
push
es
xor
or
xor
adc
or
incb
sahf
adc
push
inc
mov
ljmp
in
call
aas
jo
and
push
sahf
scas
mov
xor
adc
add
xor
imul
cmpsl
xor
cltd
in
sbb
push
ds
stc
mul
sub
fisttps
adc
subl
flds
mov
xchg
jmp
jp
or
movsl
mov
lock
cmc
inc
fldenv
inc
push
addb
notl
inc
xorb
fdivrs
cwtl
testb
ret
add
inc
xchg
sbb
pmullw
sti
enter
xchg
jge
push
cltd
xchg
add
and
inc
jb
arpl
repnz
xchg
insl
neg
dec
jp
xor
call
adc
rclb
fnstcw
mov
or
cmp
mov
mov
sbb
out
xor
iret
jmp
dec
aaa
xor
jge
mov
push
arpl
adc
mov
in
sub
xchg
mov
dec
mov
arpl
mov
aad
sarb
popf
ljmp
adcb
mov
dec
cmp
jb
ljmp
dec
add
cld
in
test
or
mov
xlat
pop
scas
adc
repnz
sbb
add
cmpb
mov
or
push
movsl
push
dec
lds
js
sahf
push
inc
in
push
dec
movb
bound
adc
pop
in
push
jecxz
bound
idivb
jae
cmc
jp
aam
inc
push
sub
stos
test
enter
shll
mov
cmc
std
sarl
jo
mov
mov
in
mov
lahf
int
dec
in
push
stos
mov
push
stc
hlt
vpand
and
adc
adc
xchg
enter
pop
pushf
aad
mov
mov
and
xor
inc
or
mov
push
push
mov
jbe
push
fistpll
mov
cli
and
push
mov
addr16
jecxz
icebp
xchg
std
and
adc
pop
sbb
cmpsl
pop
sbb
adc
jp
test
jle
sub
outsl
call
push
rcrl
sub
inc
or
cld
stos
into
fistpl
ljmp
jne
dec
jb
xchg
int3
cmp
testb
bound
andb
dec
ret
and
test
xchg
jbe
jecxz
sub
sub
loopne
fdivl
mov
xchg
je
and
xor
out
xor
inc
mov
js
test
subl
sbb
xor
xor
add
lea
shll
pcmpgtb
int
mov
loopne
or
push
pop
cmp
push
faddp
or
rcrb
test
xor
shlb
lea
xor
cmpsb
xor
out
xor
outsb
movb
pop
loopne
fisubs
out
xchg
jns
stos
adc
loopne
xor
cmc
jp
xlat
stos
sbb
fldl
pop
mov
orb
in
jmp
cmpsb
sahf
and
fsubrp
inc
ffreep
mov
insl
sbb
adc
jp
fmuls
mov
sbb
xchg
popa
sub
aas
or
inc
push
inc
rcll
cltd
adc
sbb
mov
push
adc
mov
add
mov
test
dec
insb
mov
aam
clc
sbb
dec
adc
dec
leave
pop
inc
xchg
pop
dec
dec
notl
adc
mov
cld
mov
and
jg
xorl
movsl
loopne
xorl
nop
and
imul
clc
cltd
and
outsl
push
lcall
rcll
xchg
mov
push
or
iret
lock
xchg
inc
je
fimuls
mul
cs
inc
je
pop
mov
jle
mov
popa
popf
cli
jo
popf
inc
lock
sarl
xchg
imul
das
xchg
cli
frstor
mov
fsubl
fwait
lods
dec
rorb
xadd
fmuls
outsb
icebp
and
sub
sub
orb
add
fisubrs
jbe
push
mov
movsl
fcoms
xor
mov
xchg
nop
sbb
xor
or
pop
ret
insb
adc
pushf
xor
out
icebp
std
scas
sti
iret
push
lds
outsb
dec
testl
pop
psubq
scas
sub
xchg
test
mov
inc
test
lcall
sub
inc
mov
cmp
shlb
jg
rclb
cmp
daa
jnp
xchg
inc
push
ss
jne
cmp
sub
scas
mov
jne
cmp
mov
lds
sti
xchg
cmp
lret
push
jo
or
adc
jnp
sub
cmp
addb
mov
adc
adc
std
inc
sbb
push
inc
mov
int
sub
mov
arpl
pop
and
sbb
test
xor
in
rolb
xchg
xor
push
hlt
repnz
push
pop
push
pop
cli
fcomps
cmpsb
fdivp
and
push
mov
mov
xchg
ret
scas
or
xchg
mov
mov
pop
aam
cmp
mov
pop
mov
sarb
cmpsb
test
mov
setnp
insl
add
lcall
push
sbb
lock
fcmovnbe
push
mov
aam
inc
adc
rclb
mov
cltd
movsl
arpl
mov
pop
lret
adcb
sub
xchg
adc
xchg
sti
jp
xor
out
pop
cltd
and
inc
outsl
jo
jo
in
icebp
jmp
add
jne
ss
xor
xchg
arpl
loop
dec
imul
push
aad
adc
hlt
in
sbb
fldenv
imul
sub
in
popf
mov
sub
cld
ja
pop
dec
and
loopne
cmp
inc
movsl
xchg
mov
arpl
ret
notl
push
stos
pop
mov
xor
popf
pop
xor
call
xchg
dec
jmp
insl
pop
out
and
into
int3
and
jns
pop
fidivrs
outsb
xchg
mov
push
lcall
fmul
mov
inc
test
xor
iret
mov
inc
push
mov
mov
mov
addl
adc
cmp
loopne
sub
jno
add
mov
popf
push
or
push
sbb
mov
cwtl
pushf
sub
xlat
or
stc
shll
jo
adc
mov
sub
popa
mov
iret
mov
sbb
stos
fcompl
pop
cmp
jecxz
adc
xchg
push
jne
movsb
sbb
inc
ret
rcr
mov
mov
fmull
mov
lds
sub
sbb
mov
add
xor
xchg
popf
mov
xchg
int3
mov
lea
dec
and
or
stc
loopne
test
and
jg
add
mov
mov
jns
testb
and
or
out
inc
and
dec
hlt
dec
stc
adcl
lds
and
sub
jp
lds
sbb
sub
mov
sub
nop
fldcw
push
test
std
adc
test
fsts
in
ret
pop
out
testl
in
rol
sub
add
stc
arpl
inc
mov
mov
scas
les
scas
test
int
sub
popa
mov
sub
mov
pop
mov
inc
add
jb
dec
sub
xchg
jne
xchg
xor
add
or
aad
mov
xor
aaa
sahf
inc
and
add
je
leave
scas
cmp
loop
push
cltd
insl
fistpl
jb
pop
inc
jbe
mov
xchg
cwtl
inc
rclb
xchg
pop
xchg
xchg
imull
dec
mov
rcrl
ss
jecxz
add
les
das
ja
popa
into
in
xchg
outsl
lock
out
push
mov
lahf
test
mov
sub
loope
pop
sub
icebp
data16
mov
roll
test
stos
adc
mov
inc
mov
outsl
inc
xchg
xor
ja
jg
and
imull
and
or
mov
in
stc
in
sub
xchg
ljmp
mov
loope
and
adc
fwait
push
stc
push
shlb
dec
incl
cltd
ret
inc
mov
xchg
mov
and
xor
ret
lock
test
cmpsl
inc
jle
decb
pop
add
cmpsb
in
push
dec
cli
fyl2xp1
mov
push
movsl
xchg
and
xchg
lock
test
pop
push
insb
xchg
dec
jmp
mov
loope
loope
adc
sub
sbbb
xchg
mov
jbe
sbb
dec
sbb
push
sbb
out
movsb
xor
xor
or
inc
enter
cmp
out
sub
pop
jecxz
pop
cmp
fbstp
xchg
mov
push
xchg
add
pop
je
xchg
jmp
mov
push
xchg
mov
add
pop
fwait
repz
sub
adc
scas
inc
repnz
shll
cmp
pushf
inc
mov
cmp
and
dec
stos
cmp
fbstp
mov
adc
pop
push
leave
xor
int
dec
cs
test
aaa
icebp
hlt
pushf
fisubrs
adc
or
mov
pusha
add
pop
add
enter
jp
stos
inc
push
dec
inc
andb
das
mov
test
popa
jg
pushf
inc
or
add
int
insb
test
xor
push
cmp
add
fsubrp
scas
cmpsb
js
mov
dec
dec
cs
arpl
stc
jg
fs
sub
xchg
aaa
maskmovq
or
test
pop
outsl
test
sub
cli
push
shr
test
ret
xchg
repz
cmc
in
or
push
jle
das
leave
sub
aad
jb
and
scas
pop
aad
xchg
xor
xor
nop
lea
dec
fcoml
sbb
cmp
dec
decb
xor
fdivrs
adc
fcoms
mov
sub
xor
pop
add
leave
mov
into
nop
mov
cmpb
xchg
outsb
cmc
sub
push
xor
repnz
aam
sbb
out
xchg
inc
push
xor
cs
lret
cwtl
jp
mov
and
dec
add
push
out
bound
cmpsl
add
fucomp
add
dec
or
loopne
pushf
les
lcall
enter
mov
jecxz
ljmp
call
or
dec
sub
jecxz
cs
outsb
push
adc
and
mov
addb
hlt
push
cmpb
test
mov
push
push
out
mov
inc
insl
fnsave
xchg
adc
mov
testl
jle
mov
lahf
and
notb
out
and
xchg
adc
dec
clc
mov
sub
cmc
das
pop
lret
xchg
hlt
out
and
enter
inc
repz
cmp
inc
cmp
xchg
mov
mov
shlb
push
aam
into
gs
jnp
and
ret
ja
xchg
loop
push
out
or
or
pop
mov
sbb
movsb
mov
mov
add
adc
pop
dec
fs
mov
lret
fldcw
mov
pop
les
push
mov
outsl
pop
cmovp
sahf
ficomps
push
imul
cmp
insb
lcall
imulb
xor
push
fistpl
and
sbb
mov
mov
imul
loop
jle
ret
pop
cmp
jge
dec
mov
or
mov
push
mov
gs
xorb
dec
jae
or
mov
inc
out
inc
clc
push
lret
dec
push
mov
mov
mov
push
out
mov
push
loopne
stos
lock
jb
lds
in
pop
clc
in
inc
leave
loopne
aam
cwtl
dec
xor
or
sbb
ss
faddl
idiv
xchg
add
lods
rorl
and
xchg
jns
jo
ds
mov
push
adc
nop
testb
addr16
cli
add
and
movsl
lahf
or
cmpsb
dec
xchg
scas
cmpl
insb
pusha
pusha
fcoms
dec
and
out
sti
mov
int3
xchg
sub
insl
xor
fadds
outsl
adc
jb
imulb
mov
or
addl
pop
jmp
stos
scas
lcall
imul
mov
pop
dec
push
test
hlt
jo,pn
scas
inc
or
pop
mov
push
xorb
into
jne
and
les
adc
cmp
pop
shll
jbe
jno
popa
bound
or
ret
adc
jmp
addr16
loopne
xor
in
add
pop
sbb
lahf
out
ja
inc
xor
in
cltd
jmp
xchg
int
rcrb
cmp
dec
add
ret
mov
outsb
jno
mov
rclb
xchg
std
icebp
mov
sub
in
lock
cmp
fnstsw
idivb
stos
or
les
mov
std
push
and
mov
out
nop
adc
sub
add
daa
inc
imul
inc
adcb
dec
lcall
jp
out
sub
mov
sub
stos
xchg
and
fcmovne
insl
imul
ss
fisttpl
movsb
push
incl
cld
inc
add
loopne
fidivrl
aas
mov
or
test
stos
mov
inc
inc
ds
pop
fcompl
mov
pushf
sbb
testb
xlat
in
outsl
leave
sbb
fs
xor
clc
cmp
clc
fidivrl
repnz
xchg
and
mov
mov
inc
mov
sbb
or
inc
lcall
inc
int
adc
test
out
push
aam
jg
loop
sub
imul
push
jbe
dec
aas
push
jmp
insl
xchg
sti
lahf
repnz
dec
xchg
cmc
mov
repz
addb
cmp
in
adc
and
mov
push
adcb
int3
xorl
jns
pop
mov
mov
ret
or
sahf
pop
mov
push
popa
jns
or
addb
roll
push
sarl
or
xchg
fildll
mov
rolb
sti
mov
popf
inc
fwait
jmp
jl
dec
cli
mov
popa
test
shrb
outsl
jl
cmc
adc
inc
sti
pop
arpl
jb
mov
enter
dec
shr
sbb
pushf
ret
jle
dec
aas
std
gs
ja
rcll
pop
test
pop
dec
bound
jg
or
xor
adc
jnp
and
adc
shr
icebp
xor
xchg
adc
cmp
pop
push
mov
sbb
ficomps
insb
fwait
mov
ret
cmp
insl
mov
scas
sbbb
jecxz
xchg
int3
pop
inc
test
rorb
push
push
mov
fistps
pop
les
xchg
int
inc
mov
pop
sti
sbb
mov
dec
daa
push
dec
mov
leave
das
mov
clc
iret
scas
data16
push
and
push
adc
mov
pop
out
addb
inc
push
sbb
sbb
dec
jo
pop
lret
call
loope
outsb
rcr
pushl
lock
dec
add
lds
pop
test
adc
push
pushf
dec
out
adc
pop
xchg
jmp
mov
insl
ljmp
cmpsl
inc
cmp
ja
pop
mov
int
sub
ds
push
cmpsl
gs
aas
mov
sbb
and
jns
pop
cmp
ss
clc
inc
add
inc
in
ja
push
aad
lods
mov
test
jne
jbe
mov
aam
lcall
cltd
mov
xor
sub
and
aad
out
mov
sarb
mov
repz
daa
mov
outsl
je
cld
mov
in
bound
ds
and
mov
mov
mov
xor
fbstp
das
mov
test
xchg
pushf
dec
scas
std
test
leave
call
test
mov
mov
pop
repnz
mov
mov
xchg
fbstp
jmp
int
push
pop
lods
adc
fsubr
frstor
in
pop
adc
sbb
push
je
and
lds
jg
cmpsb
fsubl
inc
in
push
cmp
sbbb
lods
xchg
ret
repnz
mov
popa
shrb
fisttpl
das
jae
out
xchg
flds
and
psllw
aad
fs
hlt
add
xor
shl
mov
std
cltd
dec
jne
mov
into
mov
dec
pusha
sahf
cld
cmpsb
and
iret
movl
sbb
jg
xor
fsubr
mov
pop
push
mov
out
push
xchg
push
sbb
xchg
dec
dec
loop
cwtl
push
xchg
jg
aad
mov
imul
pushf
imul
xor
adc
xor
or
mov
pop
icebp
push
test
ds
movsb
fnsave
insb
int3
call
pusha
xchg
xchg
movsb
pop
add
inc
sub
jnp
int
pushf
insl
pop
scas
enter
test
sbb
leave
cmp
icebp
int3
movb
fbld
leave
out
adc
in
push
in
and
aam
clc
in
mov
jmp
test
inc
addr16
inc
nop
sbb
jnp
divl
cmp
fdivl
test
loop
pop
push
adc
test
inc
dec
push
push
mul
add
jo
ss
jae
lock
sbb
sbb
cltd
cmp
fisttps
movsb
add
pop
fstpl
xor
adc
rclb
mov
and
push
cli
pop
xchg
mov
popf
stc
nop
daa
shl
in
imul
test
lea
dec
xor
mov
push
xchg
xchg
icebp
test
mov
in
xchg
mov
xchg
nop
xor
mov
daa
dec
fistps
xchg
rcll
je
mov
je
jmp
iret
jo
and
bnd
addr16
jnp
icebp
and
lahf
dec
push
jne
push
jno
ret
sarb
sub
aad
jb
cmp
dec
xchg
mov
and
add
test
bound
nop
dec
sbb
sub
imul
data16
cmp
aad
inc
imul
out
nop
aas
push
mov
cmc
push
stos
push
out
mov
inc
out
push
jge
mov
xlat
and
lret
iret
sub
movsb
enter
jecxz
sub
lcall
movl
call
jecxz
adcl
pusha
in
lahf
jp
add
xor
sbb
inc
sbb
inc
sub
adc
mov
dec
scas
add
fsubl
test
or
adc
cmp
xchg
je
and
popa
out
call
inc
fstp
mov
jecxz,pt
mov
andb
pop
dec
inc
mov
mov
pushf
xchg
and
fwait
push
pop
loope
xor
shr
jne
cwtl
test
jbe
mov
das
stos
cmp
sub
cmp
pop
stos
or
pop
add
dec
fildl
negl
add
or
outsl
nop
call
je
mov
bound
mov
icebp
or
add
or
jnp
inc
xchg
inc
pop
xchg
out
lahf
fcmove
xchg
or
lea
lret
shrb
inc
sbb
pop
scas
lods
addr16
stos
subl
cmp
dec
hlt
jl
repz
push
mov
xchg
call
mov
mov
jo
sti
lods
aaa
mov
loop
xchg
and
cmp
daa
fiadds
mov
rclb
jecxz
cli
lahf
jge
add
frstor
aaa
jge
sbb
popf
imul
push
insl
lcall
call
or
les
js
push
xor
ja
sub
push
mov
cmc
inc
xchg
pop
out
enter
adc
movsb
fs
xchg
test
mov
mov
rclb
andb
mov
xabort
andb
adc
lods
push
cld
jl
ljmp
adc
push
mov
adc
push
aaa
xor
sbb
push
enter
push
fldenv
mov
xchg
and
mov
cmc
cmpsb
lea
stos
xor
fisttps
shl
xchg
mov
dec
outsl
nop
gs
loopne
js
outsl
inc
or
ja
call
test
test
data16
stos
lods
xor
push
xchg
repz
push
jb
je
mov
push
adc
fadds
mov
mov
dec
push
test
add
in
inc
dec
push
xchg
das
add
inc
movsl
sub
mov
fs
hlt
add
shlb
mov
xchg
mov
mov
clc
mov
cmp
repz
dec
pop
jmp
mov
and
mov
cltd
xchg
jnp
fs
inc
push
cmp
sahf
jne
inc
dec
xchg
jo
xchg
loope
mov
xchg
aad
sub
repz
adc
and
mov
xchg
mov
mov
mov
imul
mov
push
mov
out
cs
outsb
and
jnp
movsl
sub
je
icebp
jp
push
cmp
not
test
int3
jp
adc
mov
loopne
sub
cmpsl
dec
repnz
add
dec
or
leave
and
imul
push
lret
push
nop
adc
dec
shll
popa
sbb
pop
pop
jmp
loop
add
jb
cwtl
adc
jle
in
lods
jae
cmpsb
mov
sub
and
clc
or
inc
inc
mov
mov
cmp
dec
gs
in
dec
lock
pushf
jb
sub
cltd
xchg
xor
add
ljmp
cmp
add
push
jo
lods
xchg
xchg
xor
test
leave
jp
insb
push
lret
lahf
aad
int3
fneni(8087
push
bound
jge
xor
jb
mul
jg
jne
push
into
dec
fstl
test
push
push
ds
or
push
bound
in
or
xor
aas
popa
ja
mov
outsb
push
out
mov
loopne
sub
rorb
ret
sbb
or
scas
xchg
daa
cmpsb
lret
or
in
push
lds
cli
flds
lods
mov
cmpsl
ljmp
add
popf
mov
stc
fucomip
or
add
mov
cmp
lods
mov
push
pop
or
popa
ljmp
test
mov
in
imul
and
es
push
stos
adc
and
mov
lret
in
icebp
adcb
xchg
push
add
pop
or
jno
jecxz
sarb
enter
gs
cld
or
in
mov
dec
mov
add
fidivrs
loopne
dec
mov
loopne
jnp
and
sub
js
dec
inc
ja
outsb
cmp
mov
mov
test
mov
movsl
call
pop
jnp
mov
aas
xor
cmpl
es
ljmp
add
stc
or
leave
fwait
leave
shlb
outsb
pop
pusha
ja
jl
aam
outsl
mov
cwtd
lds
pop
jbe
mov
mov
dec
mov
sub
jne
sbb
jne
add
jns
jle
and
dec
and
lock
les
jbe
fcomps
mov
mov
add
hlt
jp
pushf
add
in
cwtl
sti
dec
hlt
mov
cmp
cmpsb
or
adc
icebp
out
sahf
insb
sbb
sarb
lea
inc
rol
xchg
adc
jo
pop
jmp
mov
gs
pop
push
xchg
adc
dec
lret
sti
les
popa
loop
daa
or
lods
add
dec
xor
out
xor
lret
nop
rolb
leave
jno
mov
aaa
add
ja
add
jae
or
fisubrs
lock
cs
ret
pop
in
addl
mov
jl
cmp
add
lods
popf
jb
mov
or
insl
xor
fdivr
mov
dec
dec
sub
cltd
lds
cmpsl
sub
jp
pushf
pop
dec
and
clc
daa
jge
push
and
and
popf
jb
jns
pop
sub
sub
jmp
data16
pop
adc
bound
scas
bound
jle
or
pusha
leave
arpl
in
les
cmp
loope
xchg
in
pop
daa
inc
mov
jg
xor
xor
dec
sahf
outsb
cli
imul
inc
inc
jnp
repz
movsl
or
add
sub
push
or
lret
cwtl
mov
sbb
es
enter
lret
imul
adc
pop
and
and
rcrl
push
divb
in
inc
mov
std
jecxz
pop
cli
xchg
icebp
stos
int3
push
push
dec
push
lret
mov
jp
mov
fadd
pop
mov
call
rcr
xchg
sbb
mov
mov
pop
adc
mov
mov
dec
add
jo
negb
mov
mov
adc
out
sbb
sbb
xchg
punpcklwd
sarl
into
adc
cmp
or
push
xchg
push
inc
mov
repz
and
push
je
imul
mov
push
ds
push
leave
iret
insl
and
enter
sahf
out
lock
lret
inc
dec
mov
daa
push
ss
mov
adc
lret
pop
in
pop
cli
stc
pusha
sbb
xor
fstp
mov
or
test
jl
cmp
mov
add
inc
cmp
inc
add
push
jo
inc
aaa
leave
and
push
divl
mov
ds
ret
mov
push
push
push
pop
bound
xchg
lock
pop
pop
test
jne
test
mov
mov
fcoml
jge
xchg
sub
sbb
ret
mov
jecxz
pop
jo
add
adcl
jb
and
bound
sub
mov
test
lcall
add
jbe
std
xchg
je
ficoms
test
orl
iret
xor
mov
test
sub
stos
scas
jb
lcall
push
jns
sbb
xor
adc
std
or
cmp
insb
push
aaa
jo
bound
ja
pop
lret
int3
nop
sub
test
mulps
imulb
icebp
dec
enter
lcall
std
aam
mov
scas
aas
pop
int
pop
mov
xor
inc
mov
inc
sub
jnp
add
jo
jbe
jecxz
cmp
lock
and
jno
mov
pop
mull
mov
test
xor
pop
ficompl
pusha
loope
push
pop
mov
stos
mov
hlt
rcll
sti
aad
adc
jp
test
imul
lods
push
push
cmp
xor
mov
xor
inc
xchg
pop
dec
xchg
add
push
adc
popf
insl
fld
ss
repz
cltd
test
cli
mov
je
repnz
xor
haddps
lea
jl
mov
add
cli
in
pop
adc
xchg
stc
jns
out
cmp
je
fnstcw
cmc
fmulp
jle
xchg
xorb
je,pn
test
and
cltd
insb
jp
pop
repnz
imul
mov
or
lods
rcrb
mov
add
jl
jmp
mov
pop
fcmovb
xor
divb
adc
stos
cltd
xor
loop
test
xlat
lahf
rol
loope
out
sub
loop
bound
jnp
sub
bnd
inc
dec
mov
ficoms
movsl
sbb
xor
dec
out
shll
sbb
call
push
dec
adcb
cwtl
mov
iret
dec
std
inc
imul
insb
mov
stos
paddd
add
inc
movsb
pop
int3
xchg
mov
nop
adc
cld
shl
lcall
rol
ror
push
pop
popf
in
cmc
stos
cwtl
fwait
mov
test
push
std
mov
sbb
cmp
inc
pusha
inc
inc
pusha
sbb
and
and
jns
mov
mov
cld
xchg
jo
or
out
adc
adc
fistpll
arpl
and
fldl
cmp
lds
adc
inc
ja
cmp
daa
pop
add
addr16
int3
jg
mov
call
fwait
mov
or
push
fmuls
jb
dec
fildl
aad
adc
std
sbb
xchg
std
fcomps
jp
xchg
addr16
cli
popa
mov
jg
mov
prefetchnta
sarb
and
and
inc
cmp
enter
int3
pop
in
cmp
aad
xchg
or
rcl
mov
xchg
xchg
clc
shll
loope
dec
xchg
test
cmpb
xchg
add
lcall
xchg
mov
pop
divb
testl
inc
stos
cli
es
pop
push
sbb
shll
cmp
cmp
es
mov
pop
pop
jns
inc
push
sbb
xor
imul
mov
in
xchg
cld
push
push
icebp
pop
cmp
loop
mov
push
lret
dec
adc
ret
test
sub
fisubrs
and
pop
cmpsl
jle
adc
add
mov
lret
mov
dec
shrl
jle
pop
pop
xchg
sub
sub
mov
or
pop
cmp
shll
push
cmc
popa
mov
addr16
push
insb
ljmp
jb
inc
mov
xlat
cmpsl
das
gs
lds
loope
ds
pop
mov
outsb
inc
jae
jmp
xchg
ljmp
fisubs
ss
call
or
jle
lea
fdivrl
sar
and
aam
jl
lods
mov
push
addr16
cmp
xchg
sti
dec
test
sub
adc
std
xchg
orb
out
mov
cmp
xchg
jne
cli
pmulhw
lahf
dec
bnd
loope
daa
cmp
mov
repnz
push
cli
outsl
scas
rcrl
push
or
cs
cmp
lea
test
adc
jecxz
sbb
adcb
sbb
inc
adc
int3
aaa
ret
push
out
inc
fcompl
push
cltd
std
fidivl
stc
das
cmp
imul
cmpsl
sbb
pushf
rcrl
sub
nop
mov
shlb
sbb
push
daa
mul
or
test
std
and
repz
cwtl
push
stos
out
iret
mov
enter
sub
jp
daa
dec
test
xchg
mov
cltd
mov
es
mov
roll
jg
add
inc
cmp
sub
lret
push
clc
pop
adc
cmp
in
pop
aam
inc
push
mov
dec
lcall
loop
mov
jne
aas
stos
cs
pop
inc
cltd
push
es
push
out
out
push
xor
inc
mov
pop
out
test
dec
sti
and
movsl
or
pop
jo
lea
test
int
ret
adcb
dec
and
mov
dec
shlb
out
mov
mov
or
les
mov
in
sub
lods
cmpsl
cli
aad
ficompl
adc
aas
lods
out
dec
sub
sbb
push
scas
sbb
push
inc
arpl
aam
mov
jl
ret
jg
subl
cmp
cld
inc
aad
add
sub
out
loop
int
adc
int3
clc
repnz
test
repnz
loope
insl
sub
clc
push
fs
xchg
popf
cmp
push
mov
sbb
push
pop
mov
sub
cmp
mov
mov
out
push
mov
add
out
in
xor
xchg
movsb
js
inc
out
fiaddl
fcompl
scas
not
jns
jge
adc
pop
adc
addb
sahf
arpl
pushf
adc
mov
and
adc
adc
stos
cmp
outsb
sbb
inc
mov
mov
es
and
loop
clc
pop
jns
and
lds
mov
mov
call
pop
popf
adc
adc
fsubl
dec
out
jo
or
push
pop
lret
pop
dec
dec
dec
jg
addr16
push
inc
imul
pushl
dec
add
fs
jmp
lds
add
movsb
stc
test
mov
sub
cmp
aaa
add
fnstsw
pop
ret
in
mov
push
add
xor
fidivrs
mov
inc
dec
in
push
ljmp
dec
cmc
sti
and
add
dec
inc
jno
push
out
cltd
sub
mov
push
mov
orl
test
lods
roll
pop
dec
and
and
xchg
cmp
jnp
stc
aam
sub
lcall
mov
aam
rorl
mov
mov
cltd
pop
mov
sahf
loop
cmp
fdivrp
xor
daa
dec
rclb
add
xchg
fnsetpm(287
stos
enter
pop
aaa
lea
add
testl
adc
aaa
das
insl
fdivp
fs
jo
stos
popf
stos
jp
xor
sbb
es
fcmovnu
add
dec
fildl
imul
and
mov
pop
add
lods
pop
sarl
test
mov
fidivrs
mov
test
mov
jmp
ret
jae
adc
andl
ljmp
xchg
cltd
rcr
jnp
push
sub
js
sub
xchg
std
fistl
and
xchg
test
in
loop
pop
add
sub
jecxz
aaa
mov
xor
loopne
andb
hlt
cmpsb
test
scas
sti
sub
test
sbb
shrl
dec
enter
das
inc
sti
repnz
out
mov
das
xor
data16
lds
or
rcrb
cwtl
iret
ds
loope
mov
pushf
xor
cs
cmp
cmp
jp
lea
gs
add
orb
jmp
lret
jne
pop
rclb
mov
int3
push
push
dec
sbb
mov
push
out
cmpsl
mov
mov
sbb
mov
jbe
dec
adc
cmp
movsb
mov
loope
fiaddl
in
push
cmp
dec
mov
or
mov
sbb
mov
mov
js
or
mov
xchg
xchg
xchg
out
insb
and
and
cmp
pop
cs
lea
push
ret
or
xchg
ret
out
repnz
sub
sub
loop
cmp
cmp
mov
js
sub
mov
pop
jle
nop
push
xlat
std
mov
roll
bound
sub
mov
popa
or
insl
stos
jle
push
lods
and
mov
push
aad
in
mov
pop
add
xchg
mov
xchg
neg
mov
dec
lahf
xchg
fnstsw
out
repnz
test
and
mov
add
cs
repz
push
and
in
daa
negl
push
or
inc
xor
scas
mov
xor
mov
js
adc
sti
stc
push
adc
push
movb
inc
fucom
and
lock
adc
les
cwtl
rol
int3
or
xchg
repz
jp
fildll
out
outsl
jns
jmp
into
inc
in
mov
and
mov
xchg
ds
add
shl
xlat
xlat
push
int3
cltd
push
lret
sub
rorl
inc
sarb
outsb
add
test
sub
shrb
pop
in
mov
and
and
adc
jne
jno
mov
sub
scas
ret
mov
fs
xchg
inc
cmp
mov
inc
push
inc
sbb
icebp
inc
mov
stos
add
ret
mov
mov
jl
jb
pusha
or
or
es
and
mov
add
fistps
mov
int
mov
fiadds
fisubrs
jae
arpl
cmp
jno
lret
dec
xchg
scas
push
cmc
fbstp
mov
or
lods
int
sahf
sub
mov
ret
or
inc
cmpsb
fucomp
enter
pop
adc
push
pushf
cmpsl
mov
cld
jno
subb
ljmp
mov
bound
sti
jae
push
outsb
mov
cli
or
xchg
je
mov
inc
push
add
jecxz
jns
into
ret
sbb
les
and
scas
xlat
sub
aad
jecxz
aam
repz
and
push
out
sub
es
jnp
push
popa
sub
or
into
cmp
addl
dec
xor
rcrb
test
push
js
sbb
push
fstl
xor
sbb
jl
jl
clc
pop
insl
dec
and
es
popf
mov
jl
sbb
call
lret
movsl
cmpsl
jecxz
loopne
mov
adcb
inc
nop
xchg
pop
rcrb
movsb
movsl
ja
cmp
popf
mov
fstpl
cmp
inc
jmp
fistps
and
or
cwtl
fldl2t
int
jecxz
mov
xor
push
fldl
push
mov
push
cltd
pop
lock
mov
sbb
mov
or
rcrb
inc
or
outsb
add
movsl
adc
push
inc
or
mov
cmp
push
cmp
enter
push
mov
push
add
mov
pop
stos
iret
and
loope
sbb
roll
xchg
and
add
scas
out
push
jne
shlb
nop
jbe
mov
xchg
dec
call
sub
pop
sarl
in
mov
scas
cmp
inc
adc
ret
xor
xchg
xor
xchg
iret
leave
cltd
fs
mov
and
out
mov
imul
stos
or
ss
loop
ret
dec
dec
negb
subb
mov
add
sub
sub
insl
cmp
cmp
in
sbb
xchg
xchg
jnp
adc
hlt
jge
iret
sbb
idivb
aas
xchg
pop
shll
pop
ror
int
inc
jg
ret
out
jmp
pushf
mov
lds
lret
add
dec
mov
popa
stos
jg
in
cmp
xor
dec
cld
mov
push
pop
sbb
adc
xor
xor
fisttpl
pop
sbb
ret
sbb
push
cmp
incb
xchg
adc
dec
orl
notl
lods
out
dec
dec
fs
pop
imulb
in
dec
mov
das
xor
test
sub
in
loope
jb
adc
push
jb
rcll
mov
loop
push
dec
push
clc
jge
cltd
jp
xchg
and
call
sub
push
mov
mov
or
arpl
mov
add
rolb
adc
in
js
inc
jle
push
imul
pop
outsb
loope
lock
nop
adc
pop
daa
lahf
push
lahf
das
cmp
mov
mov
mov
loop
push
lods
sub
dec
mov
repnz
jae
xchg
dec
out
aas
js
jne
mov
movsb
in
pushf
mov
pop
lods
mov
and
dec
sbb
mov
add
mov
and
cmc
dec
and
mov
jb
dec
int
sarb
loope
mov
cltd
lds
aaa
adc
shrb
inc
add
dec
in
xchg
push
mov
imul
cmp
mov
in
xchg
call
insb
ret
rcrb
rorl
mov
test
pushf
push
adc
xchg
pop
and
push
sbb
pusha
inc
push
xor
loope
aas
add
nop
push
mov
pop
mov
mov
push
mov
movsb
cld
xor
push
xchg
sbb
leave
stos
popf
dec
rorl
or
mov
inc
xor
mov
cmpsl
test
cs
stos
ret
fdivl
add
ds
adc
lds
sahf
jae
mov
pop
xchg
and
daa
pushf
clc
in
mov
movsb
test
pop
loop
cmp
imul
jecxz
pusha
insb
sahf
or
xor
ja
mov
sub
adc
push
push
aaa
adc
mov
push
daa
les
lret
pusha
std
cmp
shlb
fstl
je
mov
pop
sbb
call
add
inc
imul
fldcw
ss
push
sub
adc
mov
cmp
fcoms
mov
outsl
inc
xor
mov
test
imul
fisttpll
cmpsb
inc
lods
ffree
cmp
shlb
pop
hlt
add
add
lcall
cmp
jne
es
adc
data16
pop
mov
in
adc
cmc
es
pusha
push
mov
dec
mov
clc
pushf
add
push
daa
shlb
ficoms
rcrl
cwtl
add
movb
push
mov
push
mov
lods
cmc
rolb
push
jp
roll
aam
in
jmp
cs
jg
cmp
sbb
inc
sub
xchg
mov
rclb
pop
pop
add
jmp
sub
test
aam
push
clc
jl
subl
cmpsl
adc
in
sub
push
add
push
mov
pop
mov
jbe
out
add
xchg
push
lds
mov
pushf
cli
int3
pop
roll
inc
inc
push
cmc
inc
jne
incb
xor
sub
sbb
rcll
out
dec
cmpsb
out
and
mov
push
je
push
xor
inc
pcmpgtd
lock
fisubrl
inc
mov
xchg
aas
imul
inc
push
cmp
or
lock
repnz
out
out
pushf
mov
mov
sarl
ja
loope
ds
mov
mov
movsl
sub
inc
pop
inc
xor
test
mov
cmpxchg
movsl
cld
or
or
push
call
adc
loope
mov
lods
cmp
rorb
out
je
cld
cmp
movsl
in
adc
pop
cmpsl
dec
into
push
lret
sbb
adc
jns
pop
pop
pop
cld
add
sub
scas
sub
xchg
xchg
inc
mov
pop
push
popf
icebp
bound
sbb
or
push
and
sti
dec
sub
jbe
sti
enter
dec
in
xor
jg
mov
das
jg
testl
aam
jns
rcrl
dec
push
xchg
cld
nop
fucomip
dec
mov
dec
movsb
cli
popf
movsl
sub
popa
pusha
ret
inc
cmp
aaa
pop
testl
push
lret
into
mov
jecxz
rclb
push
nop
pushf
mov
cwtl
cmp
rcrl
rcr
daa
or
enter
mov
sub
data16
pushf
out
in
mov
inc
lock
lret
jmp
lcall
bound
lock
ficoml
test
add
arpl
jp
rorl
ljmp
orl
mov
cltd
cwtl
fsubs
sub
pop
cmpb
fdiv
jge
aad
mov
aaa
pop
aad
lock
or
inc
shll
mov
subb
fldl
fwait
add
jbe
mov
loopne
fs
testl
icebp
xor
outsb
mov
mov
push
lret
mov
loop
push
cmp
push
jp
das
xorb
add
das
pop
lret
push
in
push
and
jae
xchg
call
aaa
out
ljmp
outsl
push
cmp
pop
js
mov
rclb
cmp
lahf
loop
dec
sub
ret
inc
imul
pop
pop
jae
repz
fldl
xchg
cltd
std
ljmp
andl
popf
out
fwait
nop
sbb
push
mov
push
subb
ljmp
insb
xchg
or
rolb
out
js
in
fisubl
pop
out
jnp
mov
and
push
ljmp
lock
in
fs
test
dec
cmp
js
orb
test
sub
leave
jo
xchg
stos
out
add
lock
pop
xlat
in
fcmovnb
jns
inc
push
jg
pop
and
out
cld
mov
cmc
push
out
cmc
jge
in
push
add
push
add
cmpsb
insb
xchg
jge
mov
aad
dec
dec
inc
jne
mov
es
mov
fistl
call
mov
shl
pop
and
fldenv
lds
fists
pop
out
out
int3
jecxz
mov
add
loop
and
outsb
jne
test
fwait
lcall
inc
ds
mov
xor
addr16
imul
xor
sbb
aad
jg
add
loopne
dec
mov
cmp
je
inc
into
neg
arpl
ret
xchg
int3
mov
js
das
or
sub
outsb
xor
add
sub
cmp
inc
pop
mov
adc
pop
shlb
cld
and
sbb
pushf
das
push
mov
mov
push
fs
or
adc
cmpsl
into
sbb
js
cmc
adc
add
xchg
stos
mov
fwait
add
mov
fldcw
mov
sbb
pop
dec
fmull
sahf
sbb
jo
add
repnz
xor
mov
or
xor
push
jb
clc
sbbl
popa
pusha
enter
mov
jl
push
push
dec
cmpsl
and
cmp
mov
andb
push
or
inc
cmovl
jo
add
loope
mov
ja
rol
sub
mov
inc
sarb
jecxz
jns
mov
jns
pop
icebp
lret
inc
mov
mov
inc
mov
xchg
ret
sbb
xchg
insb
or
xchg
inc
push
enter
stos
outsl
mov
adc
mov
ss
mov
imul
jg
dec
push
and
push
das
das
mov
stc
push
ja
jb,pt
adc
dec
xor
push
out
jae
jmp
xchg
cwtl
out
call
jns
jae
xor
fmull
sar
iret
lods
add
repz
loopne
sub
bound
dec
jbe
xlat
mov
std
cmpsl
in
leave
inc
mov
mov
mov
loop
sahf
adc
adc
and
call
insl
subb
fcoms
popf
aam
rep
dec
das
loopne
scas
mov
fsubp
dec
lea
aam
sbb
and
pop
fwait
sahf
leave
mov
in
adc
bound
inc
mov
pop
pop
testb
repnz
xor
pop
dec
stos
pop
sar
lea
sub
or
pop
cmp
adc
nop
xor
aaa
into
outsb
sbbb
lret
pop
add
pop
pushf
add
insb
stos
popa
fildll
adc
jmp
and
js
insl
inc
cmpb
pop
sbb
cmpsl
jg
orl
push
mov
push
adc
movsl
mov
cmp
rcl
mov
int
sub
xor
enter
xlat
outsb
adc
lcall
mov
stc
jns
scas
and
mov
bound
xchg
push
insl
jns
loop
push
jmp
mov
iret
arpl
inc
cmpsb
cs
fstps
test
iret
cmpsb
xor
and
jo
cmp
aaa
push
in
inc
jno
les
cmp
xchg
mov
cwtl
popa
insb
js
jmp
stos
nop
xchg
or
inc
or
dec
inc
jb
mov
and
cs
xchg
enter
mov
push
xor
xor
fs
dec
test
iret
push
test
jns
or
adc
push
hlt
mov
push
cld
int3
xchg
loope
lds
adc
cld
mov
cli
sti
test
pop
xchg
or
sarb
mov
xchg
into
fcoms
movsl
sub
and
in
push
fwait
lahf
add
xor
xor
push
mov
jnp
mov
dec
mov
je
ja
dec
jns
mov
out
or
loopne
fdivp
aas
lahf
loope
pop
or
jo
push
test
neg
divb
push
add
sbb
xor
pusha
mov
imul
lcall
adc
inc
addr16
leave
or
jnp
fs
jmp
aas
sub
pop
sti
out
add
sbb
xlat
lcall
pushf
cmp
addr16
popf
int3
pop
xchg
sbb
fldt
pop
jecxz
sbb
sbb
xchg
lea
fnstsw
push
sub
sub
xor
push
xor
cld
pop
or
xchg
mov
mov
aas
hlt
sbb
test
pop
push
loopne
xor
scas
cmc
sbb
adc
aaa
mov
dec
insb
add
push
push
ljmp
or
cmp
repz
adc
out
popa
mov
mov
cli
adc
sub
ss
mov
inc
loopne
dec
adc
mov
or
test
sub
push
lods
mov
or
lahf
xchg
sbb
cmpsb
mov
lret
and
pop
mov
das
xchg
fistl
loopne
mov
into
fildll
add
pop
es
push
inc
loopne
cmp
int3
fwait
rcrl
lcall
ret
in
and
insl
loopne
cmp
pop
aas
push
or
test
cmp
dec
shll
fyl2xp1
rcrl
cmp
lock
pop
testl
cli
and
adc
add
inc
mov
and
out
andb
aas
aas
int3
mov
sahf
dec
cmp
in
gs
push
ljmp
pop
push
fisubrl
aas
ja
cmp
adc
pushfw
and
jb
xchg
xchg
test
dec
frstor
jp
mov
adc
inc
cmpl
loop
and
mov
loopne
sbb
xor
addr16
ret
loop
add
fildll
inc
daa
leave
int
xchg
inc
aad
stc
lea
outsl
aad
dec
xchg
subl
jae
and
inc
mov
inc
sbb
xor
pop
mov
js
out
pop
js
add
sti
inc
inc
sub
mov
pop
inc
into
lahf
mov
es
mulb
jb
dec
lea
jmp
dec
cmp
repz
fwait
jl
fnstcw
in
mov
add
enter
sub
in
cwtl
call
shrb
enter
cmp
jmp
jb
adc
cmp
cmc
cmp
stos
pop
aas
fdivrp
lahf
adc
and
xlat
xchg
bound
cmp
pop
pushf
add
sbb
sub
lcall
sub
jle
pop
sarb
fisttpll
mov
jnp
test
popf
out
push
add
data16
mov
or
adc
cmp
mov
jp
mov
and
mov
dec
inc
js
out
push
or
dec
push
push
cmpsb
lret
mov
or
nop
inc
push
mov
inc
or
jl
mov
je
pop
test
aad
aad
or
jg
sub
jne
clc
and
mov
xchg
dec
pop
mov
les
push
mov
mov
in
daa
and
adc
gs
mov
and
out
add
dec
out
mov
cmp
in
lea
out
sub
cs
xchg
fsincos
lahf
add
adc
jp
fiaddl
pavgb
pop
mov
mov
sbb
dec
xor
leave
mov
sbb
int3
jmp
inc
fs
loop
sub
lcall
shll
adc
xlat
xchg
out
insl
outsb
pushf
stos
xor
mov
xorb
inc
pusha
push
std
rcll
sbb
imul
cmp
jmp
push
repz
testb
cmp
cmp
fisubl
xchg
xchg
fidivrl
or
xchg
lcall
icebp
push
or
aad
fcoms
or
push
lock
mov
nop
push
jb
lods
cmp
mov
sub
and
dec
pop
pop
pop
lods
leave
or
inc
loope
gs
pusha
lock
in
les
push
inc
shlb
out
pop
popf
shl
hlt
mov
mov
insl
jbe
std
xor
and
inc
int
fmul
or
adc
faddp
xor
cmp
test
sub
aam
gs
icebp
cmp
and
inc
mov
mov
xorb
mov
pop
adc
lock
dec
sub
mov
and
mov
xorl
cmc
and
inc
add
mov
divb
mov
insl
cmp
int
mov
test
mov
cmp
sub
mov
or
mov
cmpl
mov
ljmp
push
jmp
dec
sahf
adc
cmp
or
fildll
in
or
xchg
pop
pop
push
leave
add
and
adc
adc
mov
dec
test
pushf
push
hlt
aas
scas
adc
sbb
sub
shll
jg
adc
mov
adc
sbb
mov
les
mov
repnz
adc
push
js
push
out
fdivl
adc
cmpsb
lret
fsub
push
es
outsl
inc
and
imul
lods
and
psrlw
je
push
fisubl
in
adc
imul
adc
nop
and
out
mov
pop
adc
mov
gs
sub
lock
es
jp
pop
insb
cs
sub
push
jle
xchg
loop
loope
cmp
imul
in
cmpsl
std
int
int3
mov
mov
cmp
sbb
call
pusha
aaa
mov
repz
ljmp
push
push
adc
mov
inc
mov
mov
adc
stc
mov
push
jmp
push
cmpsb
jg
aad
and
cmp
and
pop
add
loopne
fimuls
pop
stos
mov
inc
or
inc
sub
shlb
scas
cs
lahf
cmp
inc
and
sti
fxch
xor
cmc
push
pop
fmuls
mov
jmp
mov
shr
rcr
dec
mov
scas
test
jmp
repnz
jl
call
mov
out
push
or
repz
rcl
jns
lahf
cmpsb
call
inc
inc
and
pushf
fwait
call
mov
mov
xor
or
je
addb
int
ja
mov
xchg
xchg
inc
pop
jp
dec
popf
jmp
int
cwtl
xor
jg
add
push
inc
dec
cmp
jg
lahf
out
test
enter
pop
push
inc
aas
dec
mov
ljmp
xadd
xchg
jp
arpl
insl
or
inc
xor
xor
mov
inc
cmpl
in
cld
adc
fiadds
and
adc
cltd
orl
cmp
xchg
mov
xor
stc
rolb
xchg
outsl
or
ds
xor
jbe
ja
mov
add
insl
idivl
jl
ffreep
repnz
sbb
sbb
movsl
pop
into
es
jge
aad
stc
aas
mov
mov
mov
inc
jne
sarl
hlt
mov
jns
adc
in
add
push
hlt
enter
inc
xor
aaa
ja
idiv
sub
xor
mov
jecxz
adc
and
lods
mov
and
or
mov
xchg
iret
faddl
out
cmp
mov
inc
and
ficoms
sar
sbbl
push
sbb
rorb
aad
and
mov
cld
dec
pop
andb
shlb
int3
dec
mov
push
adc
test
test
adc
sbb
xchg
lods
or
out
adc
dec
push
stos
pop
adc
jns
xor
mov
jae
inc
jl
movsl
outsb
dec
mov
pop
inc
sub
sub
lods
aaa
fsubl
out
insb
pop
ficompl
pop
cli
shl
insl
jo
lea
imul
mov
xchg
mov
pop
in
insb
mov
pop
mov
lock
cs
pop
lret
pop
xchg
mov
inc
ret
mov
inc
jmp
mov
fbld
mov
dec
and
into
testb
cld
push
dec
and
movsl
mul
pusha
outsb
ljmp
hlt
mov
pop
sbb
inc
fwait
and
popf
and
xchg
add
mov
jle
jnp
mov
popf
or
out
nop
imul
and
rolb
xchg
out
cmpsb
adc
stos
mov
fildl
xchg
enter
std
outsl
cmp
jmp
out
ss
mov
pusha
sub
stc
pusha
add
dec
sbb
jmp
out
sub
adc
lret
push
out
pop
or
pop
sarl
sbb
add
rol
mov
insl
aaa
pop
xchg
sbb
arpl
loop
ret
call
iret
ficoms
leave
push
rol
outsb
ja
dec
mov
sbb
call
mov
and
pop
fists
in
mov
lock
in
add
mov
int
push
stos
add
fs
in
iret
lods
mov
sbb
xchg
insb
popa
xchg
aas
int3
jne
stos
stos
push
xor
lock
mov
rcll
xor
mov
pusha
ret
mov
aam
mov
push
cld
inc
mov
xor
mov
pusha
fldl
cld
mov
mov
inc
push
push
cmp
stc
mov
es
test
inc
add
imul
repz
into
cmp
push
jnp
pop
jle
push
dec
sub
mov
push
xchg
pop
pop
pop
sbb
fwait
cs
inc
push
sub
mov
cld
jbe
xchg
imul
jmp
aam
xor
adc
mov
mov
jno
ljmp
mov
rol
fsts
fnstsw
test
clc
adc
dec
cmp
test
xor
stos
cwtl
mov
lds
push
mov
aaa
sub
pop
xchg
repnz
cs
iret
mov
inc
sub
jmp
sbb
insb
into
out
repnz
fidivl
xor
or
add
sti
mov
and
gs
mov
dec
cmp
popf
mov
sbb
icebp
movsb
iret
mov
arpl
stos
cmp
dec
and
ret
push
dec
imul
fcompl
pop
movsb
hlt
sahf
inc
leave
inc
add
rcrl
xchg
rcr
mov
mov
pop
jecxz
add
lds
mov
jmp
mov
adc
mov
adc
mov
sahf
ficomps
xchg
das
mov
scas
out
mov
test
adc
cmpl
aam
sbb
je
bound
adc
mov
mov
fstpt
lret
xchg
or
lcall
dec
sar
pop
mov
mov
rorb
divl
cmp
iret
imul
mov
or
jmp
mov
mov
inc
fs
pop
inc
fdivrl
ret
inc
mov
mov
xchg
adc
push
jns
xchg
dec
sub
sub
pop
jae
inc
cmc
dec
es
aad
addb
cmc
fsubrl
add
jo
out
fidivs
out
aaa
dec
push
int3
loope
ja
fistps
sub
fisttpl
pop
mov
loopne
imul
inc
dec
add
jg
icebp
push
outsb
mov
pop
pop
mov
inc
and
jnp
push
cmp
pop
dec
xchg
fbld
outsb
lds
decl
pop
cmp
add
dec
or
pushf
xor
sahf
sbb
std
jmp
mov
cmpsb
add
rol
mov
sbb
sub
jae
adc
ss
sbb
cwtl
sub
gs
clc
or
aam
aaa
add
outsl
into
jle
jbe
aad
push
lahf
xor
xchg
mov
sub
xlat
sbb
std
dec
subb
adc
gs
cmpsb
jns
adc
lret
dec
or
mov
adc
sub
addb
test
scas
cmpsb
mov
push
cmc
rorl
lods
stos
cli
xor
notb
pop
jno
push
xor
push
js
mov
pop
and
xchg
push
xor
in
xchg
and
loope
aas
test
mov
in
lds
inc
mov
cwtl
push
ja
push
loopne
mov
mov
sbb
add
pop
lods
xor
sub
cmp
fstl
mov
lods
or
cs
rcrb
jne
dec
addb
pop
sbb
pop
cs
jmp
mov
rol
adc
cmc
pop
das
fisubs
inc
mov
push
adc
inc
imul
outsl
das
lret
outsl
xor
adc
scas
jl
sub
lea
into
sub
hlt
jg
xchg
sub
jns
and
sbb
inc
dec
pop
in
mov
punpckldq
cmpsl
arpl
out
add
movsl
sub
loopne
clc
test
dec
fsubrl
pop
add
in
outsl
xchg
mull
addb
adc
xchg
cmc
add
jne
cmpsl
in
addr16
pop
addr16
das
inc
aad
push
jb
xchg
ds
xor
xor
mov
bound
inc
shrb
popa
fwait
test
xchg
das
adc
ret
or
and
mov
mov
loopne
mul
data16
mov
in
push
test
mov
dec
insl
gs
push
or
cs
add
bound
sbb
and
into
sti
nop
mov
out
pop
icebp
inc
jg
adc
push
or
fs
lahf
inc
mov
aam
and
sbbb
mov
outsl
jl
inc
gs
scas
call
add
or
mov
mov
mov
rcr
xor
lds
lods
into
and
xor
pop
xchg
push
aaa
jg
daa
mov
dec
push
aam
test
pop
inc
sbb
xchg
popf
mov
ret
js,pn
js
in
adc
sub
sub
push
clc
lahf
ss
into
scas
xlat
test
jo
sub
push
ds
test
inc
push
push
adc
lret
jo
clc
dec
add
sbb
fdivl
xchg
out
mov
outsl
push
adc
push
and
push
push
dec
pusha
dec
jle
loop
dec
mov
xchg
add
fadds
hlt
fildll
outsb
and
cmc
je
repnz
test
cmpsl
sub
lahf
add
into
insl
cwtl
lods
repnz
push
and
cmp
fs
cmpsl
mov
xchg
cmp
xchg
sub
aas
clc
je
loopne
sub
push
shrl
mov
aam
out
lcall
add
popf
or
pusha
mov
loopne
or
xlat
jb
and
mov
mov
addr16
jno
xchg
sbb
mov
ljmp
cmpsb
enter
sub
xor
xlat
loop
xchg
inc
lods
test
nop
jnp
testl
sti
mov
iret
push
inc
xchg
pop
sbb
mov
call
sbb
pushf
shl
adc
mov
in
sbb
in
daa
xchg
add
push
push
xor
add
lahf
cmp
lock
movsb
sub
or
adc
mov
lea
jb
jle
shr
das
movsl
push
jecxz
test
mov
or
cmpsb
jl
gs
ss
int3
inc
pop
filds
dec
outsl
mov
jae
icebp
cmpsl
mov
xor
iret
add
in
into
lods
push
inc
das
mov
jmp
test
enter
mov
mov
cwtl
sub
lock
push
mov
xchg
scas
xlat
jg
cli
mov
push
outsl
dec
test
add
sub
mov
pushf
jle
fisttps
cmp
gs
sbb
iret
loop
fwait
loope
cmpsb
cld
adc
movsl
pop
adc
mov
cmp
hlt
in
cs
mov
imul
jmp
lds
cmc
int
mov
movhps
pop
mov
and
mov
mov
sbb
sbb
adc
insl
xchg
dec
imul
aas
addr16
push
fsubrs
xchg
xlat
mov
insl
and
rcl
aad
or
push
imul
and
mov
cmp
or
cmp
adc
stos
sbb
or
test
xorb
mov
movsl
imull
hlt
or
in
flds
fwait
es
out
jge
pop
pop
pop
add
cmpsl
jnp
push
dec
leave
into
pop
fdivs
lcall
addr16
pop
xchg
fstl
les
add
ljmp
popf
mov
inc
je
lcall
pop
imul
pop
or
lds
sbb
jmp
mov
lds
push
sbb
xor
mov
jp
adcl
lock
xchg
xchg
mov
push
rorb
das
jns
js
cmp
add
ret
xlat
out
xchg
decb
cld
jbe
hlt
jnp
dec
or
in
shlb
enter
into
sub
jbe
ret
fsub
ljmp
out
push
or
add
daa
out
push
fs
xchg
pop
mov
icebp
lods
xchg
sub
mov
mov
pop
inc
mov
ret
jmp
repnz
iret
sbb
push
imul
jns
jno
xor
das
mov
gs
cmp
adc
sbb
mov
fsubrp
add
jnp
repz
adc
lcall
mov
lret
fcomps
mov
push
xor
sub
stc
cmp
xchg
es
cmp
jl
cmpsb
leave
repz
push
xchg
xchg
shll
dec
test
push
mov
push
into
sub
popf
adc
popa
add
test
sub
out
pop
sub
daa
pop
shrb
mov
and
jl
cmpsl
rolb
out
fs
and
ret
movsl
push
add
lea
pop
or
add
and
xor
jae
fstpt
inc
mov
popf
ss
mov
stos
test
pop
jecxz
jle
js
clc
mov
add
sbb
adc
inc
mov
iret
jo
or
push
cmp
or
inc
addr16
mov
stos
inc
dec
xchg
mov
ficomps
and
cmp
dec
int
js
lock
and
pushf
scas
jae
cld
aas
add
jp
jmp
push
fmuls
sub
add
and
push
mov
imul
fisubs
fbstp
cwtl
mov
fstl
sbb
mov
cmp
int3
ds
hlt
mov
adc
fisubs
scas
cmp
mov
jg
scas
push
ret
sbb
iret
mov
lock
or
mov
jg
dec
and
add
push
icebp
mulb
es
shrb
rcll
out
neg
sbb
repz
mov
mov
rclb
xor
stos
xor
xor
inc
and
cmp
and
jmp
js
add
add
add
jg
and
add
xlat
pop
or
xor
mov
pop
mov
jecxz
stos
jne
loopne
sbb
fwait
mov
int3
and
stos
rcl
nop
push
mov
outsl
cmpsb
outsl
cld
push
shlb
into
sbb
mov
adc
mov
fiaddl
inc
pop
sub
push
jmp
jg
pop
mov
cmp
inc
stos
aam
fwait
fwait
es
mov
lea
test
push
sbb
imul
bound
push
jge
push
dec
mov
jle
data16
cmp
xlat
sub
dec
je
jb
push
xchg
pop
cs
jb
ret
sub
lahf
mov
std
mov
mov
das
mov
js
inc
jge
cli
add
fwait
out
sub
inc
sti
adc
dec
sti
dec
xor
add
lret
add
orl
push
push
jne
cmc
mov
addb
and
sbb
insb
xchg
mov
push
jo
fimull
add
mov
cld
mov
push
jg
pushf
push
ds
int
js
aaa
inc
mov
test
arpl
jmp
xchg
into
xlat
popw
int3
js
mov
xor
das
clc
inc
enter
and
scas
jnp
mov
lds
xor
rorb
out
sbb
xor
push
inc
push
push
xchg
or
movsb
and
out
arpl
jnp
loope
push
mov
mov
ret
es
aas
dec
pop
jo
add
xchg
push
or
int
xchg
subl
das
sbb
mov
push
scas
sbb
rcr
mov
ror
ds
call
out
repz
out
jb
in
push
push
pop
xor
pop
xchg
stc
jo
cwtl
aas
sub
sbb
pop
push
cmp
inc
in
mov
push
aam
sub
add
imul
sub
sbb
fwait
xor
jecxz
push
aad
cmpsl
cmp
fisubrs
mov
jnp
mov
mov
push
jbe
sub
and
cmp
cmp
pushf
push
cmp
jo
sbb
fisubrs
iret
ja
fsubrs
test
push
push
lock
jle
adc
fs
mov
cmp
xchg
insl
cmp
pop
push
dec
hlt
outsb
scas
insb
das
dec
lcall
xchg
call
cmc
cmc
dec
cmp
lock
sbb
hlt
mov
jae
cmp
pop
iret
jmp
add
into
inc
sub
jp
and
xor
mov
imul
mov
ret
push
mov
sbb
dec
ljmp
out
mov
push
incl
xchg
mov
rclb
imul
pop
xor
pop
mov
sub
cmpsl
incb
jnp
lret
aaa
gs
pushf
and
xchg
xchg
adc
sbb
ss
movsb
shll
dec
mov
enter
std
out
add
xchg
mov
scas
hlt
inc
mov
push
xor
insl
loope
or
ss
jmp
jns
aaa
xchg
sahf
test
xor
orb
adc
loope
cltd
sahf
popf
push
and
lahf
loope
inc
lahf
mov
cmc
in
scas
sub
call
jno
pop
cmp
js
negb
dec
push
push
jecxz
insl
push
cmpsb
mov
scas
xchg
xor
sub
cmp
dec
mov
sbb
push
cmpsl
push
mov
lock
mov
notb
outsb
xlat
jb
lods
mov
stc
mov
fwait
xchg
push
in
push
cltd
jnp
or
push
stos
aad
loop
cmp
jbe
sub
ret
out
cmp
lods
mov
pop
lds
cwtl
mov
jne
adc
pop
mov
popf
push
jle
shrb
adc
cwtl
push
xchg
cmc
and
add
push
mov
push
fbld
jecxz
sbb
insb
jg
cmp
sub
inc
lds
test
adc
xchg
sahf
jecxz
clc
mov
dec
mov
push
jle
and
xchg
sbb
dec
lret
rcrb
fisubl
and
lds
pop
mov
jb
dec
rcll
outsb
adc
push
testl
jb
inc
loope
imul
pop
adc
out
call
mov
mov
into
mov
xor
push
sub
adc
pop
add
sarb
pop
data16
add
sbb
xor
mov
cs
pop
lock
mov
test
test
arpl
into
xchg
jecxz
cmpsl
test
dec
push
shrl
jbe
das
add
int
xchg
stos
xchg
sub
adc
xchg
xor
pop
cmp
dec
xor
jge
imul
dec
popa
repz
mov
inc
shl
rcrb
jno
jne
dec
popa
fwait
dec
jecxz
pushf
stc
lret
loope
popa
cmc
sub
sub
int3
pushf
out
or
dec
xor
jmp
inc
popl
out
xor
sbb
fneni(8087
test
push
lret
test
cmp
jbe
call
std
pop
jae
cmpsb
add
cmp
mov
sti
pushf
rclb
std
test
mov
pop
in
inc
aad
and
out
pop
jge
fwait
push
sub
rcrl
outsb
orl
lea
cmpsb
sbb
pop
fs
jl
mov
stos
adc
scas
stos
aad
rcll
xor
inc
mov
dec
ror
jnp
cmp
mov
inc
xlat
and
adc
jl
mov
pop
aas
inc
fsubl
scas
push
fadds
in
push
xor
pusha
mov
xor
test
in
lds
sbb
mov
sub
insb
in
mov
push
icebp
or
call
mov
inc
fwait
inc
push
sbb
sub
push
add
and
mov
push
das
test
mov
mov
sbb
push
mov
push
int
lcall
pop
sub
loope
jae
mov
inc
lds
pop
mov
cmp
fldcw
fsts
test
mov
test
mov
inc
insb
inc
jbe
mov
pushf
add
scas
add
in
cld
mov
stos
sub
lahf
jge
mov
loopne
cmc
xchg
movsb
cmpsl
jle
or
and
cmpsb
test
leave
adc
cs
jae
das
and
jge
jne
in
iret
xor
jo
jnp
xor
mov
jmp
xchg
sbb
mov
adc
int3
sub
lret
addr16
fidivs
cmpb
and
movsb
jo
push
outsb
les
cs
out
xorl
neg
sub
adc
test
add
or
adc
mov
in
and
scas
ret
ds
movsl
jns
push
mov
fimuls
ja
inc
mov
orl
push
xorb
xchg
into
leave
cmp
or
dec
pop
xor
shrb
xlat
push
pop
mov
loopne
lret
in
jb
pop
arpl
out
scas
jbe
popf
mov
cli
xchg
mov
popa
cmpsl
mov
aas
test
add
imul
mov
jns
repz
lock
dec
imul
loop
or
mov
lahf
jbe
ret
xchg
push
pushf
pop
rolb
sbb
mov
ss
movsb
cmp
adc
arpl
sub
push
inc
lea
repz
push
fnsetpm(287
negb
sti
out
nop
push
testl
push
arpl
sbb
mov
pusha
jl
push
cs
in
sbb
cmp
data16
xchg
ja
ljmp
sub
pop
mov
pop
aad
sarl
fdivr
jecxz
out
xchg
rol
jmp
ficoml
fdivs
jp
rcl
loope
outsb
sbb
rcrb
out
xchg
or
sti
mov
sub
xor
push
in
je
add
clc
jo
mov
and
mov
out
shl
xor
pop
jecxz
in
push
inc
clc
dec
enter
mov
sar
sbb
dec
sub
in
push
cwtl
push
mov
pop
jo
mov
adc
stc
sub
jo
mov
int
sbb
cmp
sbbb
sub
pop
fbstp
out
sbb
hlt
jo
mov
je
or
or
mov
inc
nop
mov
push
xchg
leave
inc
repz
pop
ljmp
push
shrl
push
and
sub
adc
adc
cld
xchg
jge
orb
push
mov
roll
push
lret
lds
pop
int3
xor
mov
hlt
mov
cmp
and
fstpt
sub
std
loop
andb
push
jle
inc
outsb
data16
ja
push
cs
repnz
lcall
int3
lea
loopne
cs
mov
push
mov
leave
jg
inc
mov
or
sub
out
push
je
shr
or
pop
pop
jmp
xchg
test
shll
into
popa
bound
aaa
loopne
adc
adc
mov
jecxz
xor
pop
jb
and
and
pop
in
and
xor
adc
mov
add
das
adc
cs
xor
adc
mov
sbb
nop
clc
sahf
pop
sub
pop
dec
add
sbb
dec
pop
dec
jnp
cmc
cmpsb
jg
cmp
inc
sub
lea
mov
fiadds
and
idivb
addr16
daa
lea
pop
dec
inc
rolb
arpl
pusha
mov
in
shlb
add
loop
fdivl
leave
jg
cmp
pop
scas
arpl
mov
or
push
aaa
lock
jg
cmp
push
pop
sub
push
pop
push
push
cwtl
stos
dec
xor
xor
mov
repnz
jp
loopne
iret
clc
xchg
or
sbb
iret
inc
sahf
jp
mov
sub
pop
mov
mov
stos
push
xchg
mov
pop
bound
mov
mov
jecxz
into
pop
xchg
scas
mov
or
jg
sub
mov
and
ja
popa
jmp
jl
add
sbb
sub
jl
in
stos
iret
adc
jecxz
jmp
icebp
mov
movsb
cmc
ret
out
jecxz
pop
mov
xchg
lock
jecxz
ret
push
xchg
test
movsl
mov
sbb
adc
xor
pushf
xor
sti
shrl
setb
mov
add
jae
mov
adc
popa
jl
mov
or
push
lock
dec
or
pusha
daa
insb
cmc
sbb
mov
add
je
fnstcw
cwtl
fiaddl
ret
lret
fucom
stc
clc
cmpb
ljmpw
je
fwait
stos
add
push
outsb
add
clc
xlat
mov
inc
xor
hlt
push
mov
push
loopne
add
out
daa
stos
mov
cmp
iret
insl
sub
ja
cltd
subl
xchg
test
in
jg
es
lods
lahf
scas
repz
sbb
or
xchg
cmp
out
adc
push
xchg
test
mov
lea
in
std
gs
test
mov
stos
push
inc
clc
xor
adc
inc
jo
adc
xchg
je
fs
outsl
shr
std
xor
dec
lret
insl
test
outsb
mov
data16
lods
cmp
mov
ficompl
mov
in
push
dec
insb
and
stc
cmp
ret
data16
inc
inc
add
enter
daa
and
cltd
negl
fcmovbe
popa
mov
xor
in
and
mov
sbbb
mull
iret
adc
int
pop
xchg
out
idiv
add
add
fwait
push
stc
lods
test
jg
xchg
sub
stos
loop,pn
xchg
mov
cmp
outsb
dec
mov
adc
and
sbb
push
jae
rolb
outsl
and
jg
jg
icebp
lods
sub
orb
or
insl
jnp
lods
inc
mov
mov
push
lods
cmc
inc
cmpsl
xlat
movsl
cmp
inc
and
jbe
push
dec
push
mov
sub
mov
sub
stc
mov
and
dec
out
fwait
clc
sbb
add
stos
imul
cs
fucom
and
mov
adc
gs
push
fnsave
or
sub
loope
lret
rcl
or
and
je
inc
out
and
lea
pop
sbb
addr16
mov
fs
sub
pop
sbb
in
mov
mov
mov
pop
mov
xor
les
fmull
adc
add
clc
sub
shr
test
shlb
addb
push
and
out
shrb
dec
rolb
test
xor
sbb
fdivrl
mov
popa
pop
mov
sub
in
push
cmp
sub
jne
xorl
adc
sbb
aad
ljmp
pushf
out
mov
dec
js
pop
movsl
icebp
sub
stos
or
mov
insl
add
fnstsw
fcmovnbe
push
push
dec
fsubs
sub
mov
dec
cmp
fdivrl
cmp
xchg
lcall
ret
es
cmpsl
sub
inc
sbb
fstps
cli
jo
xor
insb
jo
out
in
mov
pop
pusha
pop
jae
inc
inc
pop
pop
movsl
das
add
adcl
mov
roll
push
adc
and
imul
es
sub
lods
test
iret
sub
and
pusha
dec
or
sbb
sbb
int3
mov
stc
adc
mov
jle
rcrb
sub
pushf
aas
pop
xchg
jno
stc
pop
or
pop
clc
mov
sub
andl
lcall
test
dec
rcll
mov
inc
test
out
jmp
push
add
shrb
push
cmc
push
mov
dec
ret
xor
dec
jle
popf
movsb
ret
mov
test
sti
mov
pop
rcll
popf
call
add
aam
mov
and
dec
cli
push
es
adc
subb
jbe
xlat
push
and
and
cmc
mov
inc
mov
pop
dec
int
aas
cld
xor
cld
ficompl
pop
imul
pop
les
jmp
flds
jno
insb
ss
fcompl
lods
mov
xchg
inc
out
jmp
xor
and
test
dec
iret
sub
or
pop
add
cmp
movsl
iret
cmpb
movlps
jae
in
fistps
jno
and
and
imul
jns
enter
xor
loopne
shlb
out
imul
xor
ds
jb
inc
xchg
cmp
push
jmp
cwtl
and
sub
adc
lods
sti
hlt
dec
mov
cwtl
sarb
inc
test
cltd
sub
dec
stos
add
in
test
out
inc
call
xchg
fiadds
fwait
stos
dec
xor
cmp
pop
cmp
sbb
push
xchg
cmp
xor
sub
fwait
outsl
movsl
rcll
call
outsb
pop
iret
or
jecxz
push
fstpt
outsb
ss
add
adc
js
xor
or
cmpsb
int
aas
inc
jo
frstor
fsubrs
leave
loopne
push
ljmp
addr16
add
stos
sbb
lods
xor
xchg
loop
popf
cwtl
daa
insb
adc
pop
stos
nop
add
jle
mov
mov
int3
pop
ss
sbb
mov
pop
adc
add
pusha
or
fdivrp
into
xchg
xor
mov
into
cmpsb
mov
cmp
popf
es
mov
cmp
xorb
in
inc
inc
pop
mov
jne
adc
mov
push
cmp
sbb
imul
out
pop
push
or
mov
mov
gs
and
fimull
dec
in
mov
mov
inc
sub
dec
cmp
das
pop
or
sbb
insl
or
loope
movsl
sbb
and
inc
test
xlat
int
negb
and
xchg
add
adc
lds
xchg
mov
mov
orb
jno
cmp
xlat
mov
sub
jno
imul
adc
ror
or
inc
arpl
je
jecxz
repnz
mov
jg
das
xchg
mov
stos
js
rcrb
aam
push
lahf
dec
scas
push
test
int3
icebp
negl
add
sbb
pop
and
int
nop
into
mov
inc
test
push
cld
dec
repnz
loopne
mov
mov
sub
mov
fwait
jae
stos
rcr
and
int3
movsb
in
jle
mov
outsl
lds
xor
xor
pop
fcompl
mov
cmp
das
inc
pusha
pop
nop
inc
pop
cmpsl
cmp
les
jns
xchg
inc
and
ror
aam
xchg
sub
pop
inc
cli
out
ud2
outsl
out
test
push
cmp
in
mov
and
push
outsb
mov
mov
roll
daa
icebp
pop
sbb
xlat
mov
and
and
jg
pop
shll
or
call
and
xor
jl
push
sub
sub
adc
and
mov
andb
add
pop
popa
test
mov
gs
sbb
icebp
insb
addb
sti
xor
cmp
and
stos
pop
nop
scas
rorb
inc
sbb
iret
mov
loop
cli
jnp
mov
fidivrs
jle
jns
jge
jno
icebp
dec
lods
push
cmpsb
or
clc
shl
jmp
pop
and
fisubrs
lods
pop
pop
dec
jl
insl
or
mov
test
jmp
sub
pop
and
cs
je
xchg
aas
inc
pop
lret
sbbb
sarb
and
fimuls
into
xor
arpl
shrb
ret
push
jne
or
in
int3
adc
jl
adc
adc
aaa
sub
push
sbb
nop
push
cld
clc
mov
mov
and
xor
pop
or
std
sub
ret
push
daa
mov
mov
jmp
pop
mov
xchg
movb
push
int3
pop
xchg
sbb
xchg
dec
mov
stos
push
and
test
stos
jne
push
xlat
lret
nop
xchg
nop
fldl
xorl
cmc
jp
sbb
sbb
pop
je
nop
pop
jnp
xchg
cmc
mov
xor
in
jp
mov
sbb
sub
push
mov
cmp
dec
xor
cmpsb
test
clc
sbb
in
shll
call
lahf
and
adc
push
adc
push
adc
test
je
clc
jmp
push
fstpl
push
xchg
lahf
scas
aas
addr16
mov
rcrl
popa
mov
loope
dec
lods
imul
out
adc
and
stos
mov
jl
test
shr
lock
add
push
mov
and
stc
mov
xchg
insb
xor
daa
xor
push
sub
mov
jecxz
mov
imul
adc
mov
mov
aad
jae
mov
adc
add
sbb
and
cmc
lahf
push
std
std
sbbb
aaa
pop
in
loop
mov
dec
add
pop
inc
xchg
xchg
test
mov
inc
dec
mov
movsl
or
js
jecxz
fistl
in
and
pop
cmpsb
mov
cmp
addb
inc
sbb
shrl
movsb
adc
and
sub
adc
or
fldenv
jns,pt
mov
and
sub
outsb
jge
in
ds
ret
in
and
ds
mov
jbe
pop
xchg
fsubr
inc
mov
inc
mov
xchg
dec
iret
pop
xlat
sub
rcrb
xor
dec
sub
fisttpl
push
test
loope
es
cld
in
push
sbb
xor
loope
into
aam
rcr
ret
adc
adc
lret
push
rcll
inc
ljmp
insb
inc
dec
and
std
jecxz
iret
inc
nop
mov
and
add
cmp
fmull
adc
icebp
mov
sub
std
and
mov
mov
lret
cld
fwait
sbb
stos
mov
fs
mov
dec
dec
rcll
mov
std
xchg
xchg
repnz
inc
ret
int3
into
rclb
inc
bsr
lahf
repz
leave
out
sub
or
add
pop
call
scas
jb
xchg
mov
jmp
in
adc
add
sbb
sub
mov
jae
inc
dec
mov
clc
xor
clc
jge
adc
call
cmp
ret
mov
cmp
callw
jbe
mov
bound
and
sbb
pop
mov
mov
arpl
fs
js
cmp
rol
sti
fisubl
ds
ja
jmp
or
or
aam
mov
into
out
xor
pop
xchg
push
mov
push
and
xchg
lret
xchg
push
jne
fidivs
daa
and
lods
sub
test
xor
psubb
out
xor
xor
dec
push
cs
xor
inc
xchg
mov
push
and
add
mov
cmp
mov
pop
imul
into
or
mov
pop
sub
pop
or
cmp
in
sti
cs
mov
dec
xor
inc
iret
xor
mov
pop
dec
mov
push
jns
adc
jecxz
subl
or
mov
imul
mov
sub
aas
cwtl
in
shrb
adc
into
or
bound
sub
repz
xchg
add
adc
in
decl
lods
dec
mov
addr16
rolb
mov
ljmp
mov
scas
add
and
test
das
ror
jo
pop
lods
inc
nop
dec
outsb
mov
jno
jle
mov
dec
or
mov
fisubrl
sbb
sub
ret
inc
dec
out
loop
movsl
and
test
js
test
stos
fs
in
add
outsl
sbb
test
jecxz
sbb
add
inc
dec
in
daa
inc
cld
sarb
pop
out
incb
lret
xchg
inc
in
pause
xchg
xchg
scas
xor
shlb
addr16
lret
loope
inc
lea
jns
scas
ljmp
push
inc
pop
cmc
test
sbb
icebp
push
test
inc
stos
pop
lods
mov
scas
ja
bound
mov
mov
cmpb
fstl
push
fs
icebp
sti
cmp
xchg
dec
inc
sbb
mov
xor
cmc
aam
testb
mov
mov
test
inc
cltd
rorl
and
insl
scas
xor
dec
mov
xor
aam
shlb
push
pop
loop
scas
int
in
cmp
sub
in
in
int
adc
or
xchg
push
mov
addr16
and
in
mov
push
push
sub
cmp
or
sbb
arpl
aam
mov
jbe
adc
in
jo
dec
gs
cs
jno
in
mov
cli
jb
inc
out
lds
xor
adc
lcall
divl
xlat
inc
adc
cltd
jns
in
pop
lret
mov
nop
or
popf
out
cmp
dec
lret
or
jne
or
adc
fwait
aam
mov
sbb
loope
pop
and
and
lret
pop
adc
and
arpl
and
leave
sbb
jae
das
repnz
sahf
iret
addr16
mov
in
shr
cld
addr16
push
xor
stos
outsl
cmc
adc
andnps
sub
pushf
jo
sahf
sub
inc
xchg
sub
stos
adc
push
mov
mov
pop
rcl
fwait
mov
data16
push
sbb
cmc
and
xlat
and
mov
adc
sbb
cmp
orb
cld
inc
je
mov
fstpt
fcmovnb
sub
push
pop
pop
lock
popf
test
pushf
adc
jmp
inc
pusha
adc
pop
pop
xchg
mov
arpl
stos
pusha
imull
subl
cmp
cmc
mov
leave
cld
sarl
stos
xchg
adc
loopne
sarb
xchg
int3
jle
add
test
push
stos
imul
adc
movsb
lahf
addr16
pop
jo
adcb
enter
imul
xchg
dec
sub
sbb
test
mov
push
enter
leave
ss
mov
sub
imul
mulb
pushf
jae
push
sub
sbb
pushf
enter
sbb
jge
cmp
cmpsb
sti
das
int
repnz
adc
fisttpll
clc
xor
hlt
jnp
std
inc
fs
ficomps
mov
std
lahf
pop
inc
xor
cmp
inc
mov
lods
xor
ja
incl
pop
lret
mov
gs
or
lret
pop
add
cs
mov
mov
xor
sbb
enter
add
jae
mov
test
or
adc
fistpl
jecxz
xor
imul
or
push
test
inc
lahf
mov
adc
xchg
fisttpll
rcrl
inc
pusha
js
pop
sub
test
mov
sub
repnz
cmp
or
addr16
push
and
es
pop
pop
pop
adc
or
and
fwait
jo
pop
jae
stc
mov
cmc
xchg
fldenv
test
dec
mov
stos
jmp
cmp
js
sbb
leave
sub
cmp
mov
out
sbb
mov
cli
test
xchg
inc
pop
lahf
dec
pop
push
sbb
inc
sarb
pushf
push
sahf
mov
jg
pop
sti
pop
fadds
cmpsl
dec
cmc
mov
les
xchg
fnstcw
adc
out
incb
stos
inc
out
nop
cld
aas
inc
scas
cmp
xor
sahf
clc
jnp
test
xchg
inc
inc
sub
mov
pushf
aam
not
xor
bswap
dec
nop
or
sahf
mov
adc
les
sbb
movsb
js
jg
sbb
fidivs
popf
loop
inc
pop
cltd
push
pop
cli
pop
movsl
and
ljmp
jg
sub
xor
xlat
dec
lret
xchg
sti
adc
out
dec
pop
jo
sbb
jb
lods
jg
es
decb
notl
ret
into
pop
clc
repz
mov
xlat
mov
pop
stos
jge
push
add
and
and
fwait
jnp
xor
gs
xor
mov
jbe
ror
ret
cli
adc
sbb
lods
push
sub
imul
dec
test
test
pop
cmp
and
notl
lret
fcomi
insb
or
cld
fdivrs
out
movsb
xchg
daa
cmp
lock
mov
adc
loope
pop
rcl
mov
mov
fcomps
push
cmpsb
push
negb
xor
adc
sbb
sbb
xchg
push
mov
pushf
ja
scas
and
rclb
fs
insb
shll
sbb
add
fwait
stos
hlt
sbb
mov
test
xchg
jmp
outsb
test
add
shl
daa
cmpsl
push
sub
mov
stc
add
pusha
aam
lcall
mov
cmc
xlat
in
movl
hlt
xchg
mov
aas
push
outsb
aad
push
adc
sbb
rcrl
push
fdivl
sahf
shlb
movsb
lock
push
xor
and
inc
push
int3
mov
lds
fstps
lods
test
sub
fstps
cmp
fadds
add
pusha
orl
add
pop
test
mov
addr16
xor
and
cld
cld
pusha
xchg
add
mov
mov
sbb
mov
ss
mov
hlt
bound
cltd
test
in
mov
add
lods
adc
mov
ret
aas
xchg
pop
xchg
push
xchg
add
pop
or
lret
ss
bound
mov
aaa
test
cmc
out
push
hlt
pop
dec
add
cs
jecxz
jb
lahf
push
arpl
cmc
cmc
outsb
xchg
loopne
jl
dec
test
repnz
and
push
add
mov
popa
outsb
mov
fistps
out
mov
pop
repz
fldenv
push
fdivr
pop
aaa
aaa
scas
gs
push
imul
pop
xchg
nop
mov
mov
sub
mov
adc
cs
or
pop
push
xor
pop
push
aas
arpl
xor
cld
jne
pusha
das
inc
jns
fdivl
outsl
imul
lahf
mov
mov
arpl
jmp
ja
ret
loop
cld
test
sbb
clc
push
and
lret
mov
mov
int
mov
fldl
mov
add
jo
and
inc
cmp
idivl
dec
pushf
out
out
and
stos
sub
mov
lahf
rcr
icebp
sub
sub
outsb
add
mov
clc
xor
pushf
lret
mov
and
or
sbb
test
adc
and
idivl
pusha
jle
inc
jbe
fldt
fs
mov
sub
iret
cmpsb
gs
dec
xor
fsubrs
mov
inc
clc
cmp
dec
sub
xchg
add
out
mov
xor
mov
add
add
dec
add
jae
aad
pop
gs
or
mov
mov
loopne
push
scas
mov
ljmp
inc
lock
jmp
pop
sbb
add
incb
sbb
mov
jecxz
pop
movsl
mov
and
adc
icebp
jecxz
mov
fimull
ds
mov
dec
js
adc
daa
subl
xchg
xor
scas
pop
insb
or
ljmp
dec
mov
dec
mov
popf
jle
sub
pop
dec
mov
push
add
cmp
out
jbe
daa
test
or
pop
out
stc
jne
mov
les
sbb
jp
jl
and
shrb
into
push
push
xchg
call
cli
fisubrl
pop
add
insl
ret
sub
inc
mov
int3
xchg
sbb
mov
out
push
sbbl
sahf
loopne
imul
in
out
aam
lcall
jno
jns
mov
into
flds
xor
leave
loopne
filds
call
ljmp
js
cmp
lret
les
jle
jo
test
pslld
mov
mov
xchg
mov
jno
sub
jns
int
jnp
ret
fcomi
scas
xchg
cwtl
jecxz
push
test
jge
insb
sarb
std
cltd
cli
hlt
cmp
pop
mov
flds
mov
orb
das
in
test
dec
add
jecxz
stc
cmp
mov
dec
pop
add
bound
fwait
loope
adc
mov
dec
lock
loopne
sub
and
xchg
ds
add
jno
nop
mov
std
xchg
movsl
cmp
popf
nop
aad
call
stos
les
xor
inc
cwtl
mov
popf
loop
jne
adc
adc
adc
in
es
sarl
test
mov
xor
fists
jno
stos
jne
jp
daa
lds
pushf
or
fiadds
mov
call
mov
adc
xchg
call
adc
stc
mov
cmp
pop
int3
pop
std
xor
mov
inc
lcall
push
sbb
je
arpl
ljmp
xor
pop
jbe
cmp
and
lahf
clc
enter
pop
sub
lahf
inc
mov
inc
mov
mov
cmp
or
scas
inc
jl
inc
add
push
dec
js
sub
movsb
roll
pusha
add
pop
ret
inc
lret
inc
stos
ljmp
jmp
test
movsb
sbb
dec
mov
and
mov
addr16
adc
mov
fdivrs
jns
mov
test
aam
popa
add
xlat
nop
inc
lcall
mov
jne
xchg
mov
testb
adc
mov
pop
lahf
jecxz
aam
test
push
hlt
push
cmpsl
arpl
mov
scas
std
imul
and
dec
mov
mov
cmp
mov
mov
and
jecxz
cmp
and
stc
cmc
loop
xlat
xchg
push
cltd
sti
xor
rcll
fstpt
push
push
push
jg
fprem
jg
loop
fisttpl
out
dec
loope
mov
fwait
aas
inc
and
imull
stos
adc
adc
adc
cwtl
cltd
aaa
add
and
fidivrs
pusha
and
fbstp
in
or
dec
xlat
lret
sbbl
notl
push
lcall
or
sti
inc
loope
dec
mov
inc
xor
es
mov
push
and
jecxz
sbb
mov
pop
pop
cmp
mov
jbe
mov
adc
jg
mov
xchg
push
jmp
cmpsb
data16
pop
xor
loop
jb
adc
mov
shll
ljmp
fldenv
sti
mov
sub
jmp
push
sbb
loop
stc
test
fwait
test
mov
sarb
nop
pop
shlb
xchg
pop
jno
dec
push
aaa
scas
cmpl
popf
clc
in
and
inc
inc
jp
push
jno
in
dec
push
mov
fdivs
out
pusha
outsb
hlt
ret
sti
xchg
ret
out
test
cmc
imul
out
or
out
int
pop
cmp
push
ret
inc
in
mov
add
ja
ja
or
and
adc
cmp
sbb
lods
aad
int3
or
pop
lds
cmc
js
or
xor
das
xchg
or
mov
int3
xlat
call
andl
lcall
xor
cmp
pop
mov
cmpsb
lds
jne
xchg
iret
fidivrl
or
les
cmp
mov
and
or
iret
xor
sbb
ficoml
xor
jb
je
and
fs
scas
mov
adc
cmp
sahf
inc
mov
inc
xor
xchg
es
adc
mov
or
arpl
add
xchg
call
mov
addr16
das
mov
xor
test
and
ficomps
mov
scas
and
push
aaa
test
inc
clc
xchg
pushf
cli
es
jo
add
dec
sub
lea
es
mov
lock
daa
lret
ja
add
hlt
js
ljmp
cs
sub
pmullw
js
int
call
fstl
addr16
inc
sub
mov
aad
dec
mov
cmc
jno
cli
in
jl
fcoms
sbb
inc
aad
cmp
and
or
into
fs
scas
lods
clc
push
sti
mov
in
scas
jb
pop
cmc
lds
jno
jae
jno
sub
test
mov
adc
dec
shrb
sub
sub
dec
jl
imul
fsubs
fdiv
pop
jl
dec
mov
sar
pusha
xchg
or
sbb
adc
jg
outsb
sub
loop
pop
imul
imul
cmpsl
mov
inc
mov
jbe
mov
pop
stc
mov
and
sub
push
mov
adc
enter
pop
stos
xor
xor
and
fcompl
xchg
jno
pop
jae
lds
push
sti
icebp
jmp
mov
cmc
inc
scas
xor
into
xchg
sbb
xchg
pop
inc
adc
push
sbb
pushf
aaa
sub
sbb
insb
ret
mov
into
aam
shlb
aam
xor
add
mov
push
cli
pop
and
push
pop
jg
loop
or
cwtl
leave
out
outsl
cmp
push
cmp
pop
int3
int3
scas
fcmovu
or
lahf
jmp
stc
fimuls
lock
or
mov
insl
jle
xchg
cmp
push
jnp
xchg
filds
jo
test
add
xchg
pop
inc
aad
ds
loopne
xchg
xchg
adc
lahf
stos
jbe
dec
jge
xor
dec
push
and
mov
sbb
scas
fildll
push
test
mov
inc
and
jb
jmp
xor
jno
mov
idivb
xchg
leave
xchg
aad
inc
aam
pmullw
lret
call
sahf
popf
aaa
or
cmp
cmp
ret
sbb
inc
xchg
mov
xor
leave
sbb
push
dec
insb
pusha
cmpsl
insb
jmp
icebp
in
cmpsb
push
and
nop
sbb
mov
xor
xchg
repz
jne
or
ss
or
cs
in
stc
fmull
sbb
fdivs
outsl
jb
jg
cld
in
adcl
insb
cmp
movsb
lds
repnz
mov
mov
movsl
cmpsb
sub
mov
xor
jg
addr16
stc
push
imul
xchg
out
mov
scas
dec
jne
push
jo
in
cmp
xor
mov
addr16
insb
cmp
hlt
push
mov
cmp
lcall
jnp
mov
adc
add
mov
jne
lret
out
inc
pop
xchg
into
lret
adc
jmp
sub
and
sbb
push
stc
sahf
jmp
subl
dec
pushf
lret
sub
subb
push
dec
pop
sbb
or
and
lea
jg
push
inc
ds
lods
push
stos
mov
ss
xchg
and
ljmp
pushf
mov
jo
movsl
pop
mov
sub
popf
mov
lock
cmp
dec
xchg
xchg
push
cmpsb
inc
aaa
xchg
cmp
inc
das
loope
mov
add
dec
js
pop
sub
out
push
in
jno
repnz
cmp
xor
inc
push
inc
sbb
or
mov
or
dec
fimuls
xor
sbb
inc
sbb
xchg
push
jg
jne
sbb
in
cltd
subl
aam
mov
mov
mov
imull
inc
sbb
mov
pusha
les
dec
fbstp
out
popf
adc
out
mov
or
hlt
loope
cmp
leave
cmp
ss
xchg
cmp
hlt
mov
mov
pop
shl
or
jp
sbb
sbb
lahf
gs
push
cli
pop
dec
ret
out
adc
mov
push
aam
dec
das
pop
xlat
jae
stos
xor
cli
sub
dec
or
aam
addr16
push
inc
shll
mov
xchg
jbe
push
mov
notb
mov
je
and
xchg
dec
lret
jmp
js
cmp
test
loopne
dec
mov
scas
sbb
shlb
jnp
adc
popa
rclb
pop
push
test
arpl
addb
movsl
out
xchg
xchg
negb
xchg
mov
and
notb
mov
jns
cmp
pop
mov
dec
sahf
fstpt
push
repz
sub
les
mov
movsb
inc
and
jnp,pn
sbb
rorl
inc
dec
inc
scas
add
mov
pop
arpl
and
add
xchg
or
jl
int
ret
dec
aad
mov
fwait
push
or
movsl
sbb
pop
ja
sub
xchg
and
mov
mov
incb
push
lods
fisttps
negl
cmp
icebp
stos
xchg
jmp
insb
ret
mov
mov
lcall
add
imul
enter
lea
test
fs
push
sub
cld
add
mov
cmp
imul
sbb
insb
inc
mov
loopne
inc
sbb
test
jge
sub
or
pusha
sbb
repz
ret
sahf
lcall
adc
push
dec
xchg
aam
sbb
test
clc
push
fwait
pop
mov
sub
jecxz
enter
and
std
mov
jb
stc
and
std
fmuls
leave
popf
cmpsb
inc
adc
xchg
cmp
fnstenv
shlb
adc
in
rcrb
lret
xchg
data16
int
ret
add
adc
cmp
lods
cli
testb
jns
rorl
insb
mov
jmp
fimull
jns
in
push
out
pop
dec
or
adc
insb
mov
test
stc
mov
test
mov
lcall
lahf
inc
scas
scas
je
and
jae
leave
push
je
jae
sub
sbbb
repnz
inc
jb
dec
mov
mov
add
ret
popa
and
rol
repnz
mov
loope
dec
jns
inc
xchg
adc
mov
repz
jecxz
cli
sbb
lds
in
push
test
mov
fs
adc
add
std
push
bound
mov
cmp
fs
xor
lcall
jle
xchg
cmp
mov
xlat
out
test
or
pop
mov
jae
fists
jns
mov
mov
or
jbe
orl
inc
dec
shrl
je
ret
call
push
pop
and
pop
stos
js
mov
dec
cmc
data16
adc
xor
stos
push
mov
cmpsl
fstl
jl
push
aam
stos
xor
notb
lret
jge
sbb
int3
outsb
adcl
cmp
ficompl
adc
dec
inc
add
bound
jl
loopew
cmpsb
daa
push
mov
mov
push
push
ds
jne
fstpl
mov
mov
adc
popf
xchg
loop
je
mov
sbb
fisubl
pop
nop
aaa
xchg
es
es
imul
dec
sbb
aaa
jno
sbb
shl
lret
lret
aaa
or
and
push
pop
enter
shrb
test
leave
mov
sub
mov
dec
lock
popa
xlat
mov
inc
mov
icebp
les
lahf
in
test
dec
sub
cmc
jae
adc
rclb
or
pop
push
addb
mov
mov
es
xchg
inc
dec
hlt
jbe
pop
mov
add
xchg
fcomp
movsb
mov
sbb
into
and
mov
mov
adc
sub
sahf
movb
lret
xor
pusha
arpl
sti
pop
mov
push
test
jecxz
inc
es
cmp
je
adc
sbb
fcoms
dec
xor
pop
lret
js
dec
outsl
dec
subl
or
sbbl
rcrl
or
cwtl
js
mov
maxps
jb
scas
dec
sbb
ds
rcll
fisubrl
inc
aas
in
push
xor
push
clc
fs
popa
daa
retw
clc
scas
adc
std
ret
icebp
sub
pushf
out
jmp
in
push
lea
scas
adc
sbb
xor
stos
in
mov
or
xor
in
leave
lcall
fldcw
inc
mov
sub
mov
pop
sub
fstl
mov
ficomps
rcrb
xor
xor
mov
push
or
cmpsl
pushf
jp
cmp
mov
js
or
hlt
sbbl
lods
out
adc
imul
mov
sarb
adc
lods
mov
xchg
andl
mov
popa
push
push
add
mov
jg
and
out
out
adc
jno
cltd
gs
xchg
fs
adc
pop
adc
add
xor
outsl
inc
nop
inc
out
jle
arpl
mov
jmp
ret
shl
xchg
xchg
mov
push
inc
sub
jno
xchg
mov
mov
mov
mov
push
adc
mov
and
gs
rcrb
pushf
test
lock
adc
mov
xor
add
sarl
in
sub
into
mov
adc
ja
add
or
imul
shll
jbe
mov
cmpsl
jbe
pop
xlat
mov
movsl
pop
test
push
stos
cmp
rcr
mov
lidtl
cmp
push
js
test
hlt
cmp
stc
js
pop
arpl
pop
leave
scas
fucom
mov
fwait
addr16
mov
pusha
mov
imul
sub
push
andl
xchg
adc
xor
inc
jp
mov
mov
jns
and
and
mov
sbb
hlt
dec
push
clc
mov
mov
fisubs
jmp
jne
int3
sahf
pand
and
fwait
jo
and
mov
cmpb
push
mov
inc
push
xchg
out
pusha
mov
jl
mov
dec
inc
jo
adc
fdivrl
adc
addr16
out
jo
mov
icebp
or
mov
xchg
mov
xchg
or
ret
mov
mov
and
lret
push
test
mov
dec
jne
fidivrl
mov
cmp
and
lahf
aam
adc
xchg
rorb
push
add
xor
inc
ja
xor
ds
pop
mov
add
cmpb
scas
adc
fimull
xchg
scas
loope
push
sbb
pop
ret
mov
or
pop
xchg
and
cmc
shll
sahf
push
fstps
adc
rorl
lods
dec
repz
in
fisubl
fsubrl
mov
ret
scas
rcl
lds
mov
jae
cli
lods
xchg
lea
aas
jo
pop
add
pop
out
push
pop
inc
and
in
xchg
bnd
cld
gs
fwait
jge
std
lahf
jecxz
hlt
jb
js
inc
aam
push
ds
clc
js
or
lds
sbb
arpl
xlat
pop
movsl
out
or
stc
xor
add
or
aaa
sbb
push
ret
adc
fistpll
ja
gs
stos
pop
cltd
jl
int
jl
sti
xchg
scas
dec
add
mov
xchg
pop
mov
add
jecxz
jmp
test
imul
cmp
leave
insl
pop
out
inc
adc
out
outsb
pop
jnp
pop
inc
cmp
mov
cs
sbb
mov
roll
xorl
outsb
push
mov
sbb
cmc
mov
xchg
sbb
and
stos
cmp
mov
aas
sub
stc
dec
aas
loope
fsubp
sub
into
adc
das
sub
mov
dec
fidivl
mov
add
cmc
cmpsl
test
shlb
push
jg
lods
mov
lods
daa
push
xchg
popf
xlat
inc
fimuls
loop
in
mov
imul
movsl
push
dec
scas
mov
neg
fadd
cmp
pop
sbb
xor
add
in
xchg
jns
xor
lods
je
cmp
jb
inc
and
jns
jo
fldcw
jae
sbbl
and
into
in
xor
ficoms
out
pop
cltd
nop
jnp
rcr
movzbl
and
sbb
or
push
subl
cld
insl
dec
imul
stc
icebp
push
xor
mov
push
test
or
test
add
cwtl
mov
test
sbb
orl
out
lret
xchg
enter
loope
outsb
jb
mov
mov
fmuls
fisubs
inc
push
movsb
outsl
enter
frstor
stos
rclb
sahf
add
push
fdivrs
mov
and
jle
lds
and
sub
cmp
mov
out
add
and
adc
int3
in
lret
mull
add
loope
jge
pop
mov
xchg
cltd
sub
js
and
inc
adc
rol
movsl
mov
sub
aad
and
cli
das
inc
push
jecxz
cmpb
xchg
xor
test
subl
jle
idivb
inc
dec
aam
movb
lcall
and
inc
insb
cmp
push
push
cmp
das
jne
in
mov
sbb
mov
mov
dec
inc
sbb
daa
inc
addr16
outsb
inc
sub
in
aad
xchg
lahf
xor
shll
into
and
push
mov
cmpsb
scas
lea
test
call
xor
outsb
movsb
adc
ret
in
dec
add
test
movsl
jmp
icebp
in
int
stos
shlb
mov
mov
fcomip
pop
arpl
mov
xchg
loop
nop
stos
out
xchg
cli
loop
lea
pop
mov
movsb
mov
inc
out
inc
cs
vmwrite
pop
sbb
inc
lods
jo
add
or
push
sbb
in
fiaddl
aaa
cld
sarl
mov
aad
sbb
sbb
push
push
xor
xchg
cs
cltd
sub
and
sbb
add
fisttpl
popa
scas
sbb
mov
fstpt
pop
jl
lahf
add
push
loope
sbb
jnp
inc
icebp
lcall
inc
imul
insl
mov
repnz
prefetch
mov
jo
and
jge
fstp
ror
popa
or
lds
shlb
rolb
xor
cmp
lods
adc
jmp
insl
bound
stc
jb
sub
outsl
mov
lret
out
imul
or
div
shrb
dec
adc
inc
mov
icebp
sub
push
mov
cltd
and
or
xor
sbb
xchg
clc
jecxz
aaa
aam
mov
add
sbb
test
pop
and
jmp
sahf
add
cld
mov
arpl
add
adc
adc
nop
fxch
fdivrp
cmp
add
dec
nop
sbb
xchg
shl
xchg
js
ror
or
or
sub
sub
sti
ljmp
sub
daa
or
pushf
mov
iret
jg
fistps
rcrb
sti
mov
sub
sub
jo
lret
call
jnp
pushf
xor
or
rcrb
test
enter
mov
aas
sbb
xchg
mov
shrl
sub
lcall
cs
mov
and
push
lahf
ljmp
pop
cmp
xchg
jl
xchg
jecxz
xlat
mov
dec
mov
inc
xchg
adc
adc
push
int3
sbbl
sub
mov
xor
pop
mov
in
iret
imul
mov
hlt
inc
xlat
jo
push
cmc
loope
add
das
pop
ret
or
mov
std
adc
ljmp
outsb
xchg
pop
loopne
loopne
sub
sub
mov
and
ret
fcomp
push
xor
mov
ficoms
or
push
inc
pushw
push
test
mov
js
sub
cmpsb
adc
jmp
or
sbbb
mov
div
ficomps
ja
in
jmp
test
repz
in
sbbb
jmp
movb
xchg
push
mov
cmc
xlat
add
test
or
sarb
std
or
outsl
jl
jmp
sbb
adc
jle
cmp
sub
inc
jmp
out
cmp
das
mov
mov
ss
add
push
sbb
das
popf
push
xorl
out
cli
icebp
daa
mov
hlt
cli
pop
xchg
sub
mov
push
test
xlat
into
inc
pop
sbb
add
ret
inc
pop
sbb
fistl
sub
pop
mov
pop
xchg
ret
push
and
daa
and
sub
push
lods
ja
inc
rcrl
fiadds
dec
shll
clc
push
mov
xchg
push
inc
jmp
shll
mov
push
inc
into
jmp
mov
pop
stos
popa
cmpsb
cld
push
pop
cli
xor
push
outsb
aam
and
mov
dec
hlt
dec
and
das
dec
mov
fldt
xchg
and
fistpl
insb
icebp
imul
mov
ljmp
xchg
cmp
jecxz
test
lahf
push
lds
adcl
in
jne
push
xchg
das
mov
inc
jbe
xchg
xchg
js
add
mov
popf
in
sbb
and
cmp
sarb
adc
mov
xchg
lret
mov
pushl
test
fsub
add
xchg
int
sub
shlb
cmpsb
and
jmp
rcll
inc
inc
push
mov
sarl
sub
test
fisubl
out
insl
cmp
push
fidivrl
icebp
add
popa
vpunpckhqdq
int3
cmpsl
mov
xchg
loopne
lahf
xor
lgdtl
fstpt
inc
jne
arpl
add
ret
lea
adc
mov
xor
push
and
mov
dec
sub
lods
inc
cmc
adc
mov
mov
test
lahf
push
aaa
push
jo
dec
ret
out
jmp
add
push
mov
and
das
aaa
push
out
mov
pop
pop
sub
imul
or
push
xchg
out
cmpsl
sbb
in
repnz
scas
aas
test
ljmp
xlat
mov
mov
inc
mov
push
jg
pop
ret
mov
dec
xchg
movsb
jg
cmp
sub
push
dec
dec
inc
mov
clc
ficoml
xor
sub
inc
aaa
in
xor
push
xchg
sti
sub
pop
and
divl
fstpl
clc
or
sahf
int
cmp
mov
insl
enter
out
mov
outsl
loope
rorl
add
ftst
fsubrl
cwtl
add
push
orb
clc
mov
xorb
test
test
out
mov
movsl
cmpsb
dec
jg
cmp
inc
xlat
cmp
int3
dec
idivb
jge
js
mov
sbb
sarb
test
outsb
and
xorb
notl
loop
std
sbb
fwait
adc
das
popl
add
int3
sbb
ret
and
mov
pop
mov
leave
testl
test
sbb
jl
xlat
hlt
xchg
jnp
into
adc
add
out
int3
xchg
sbb
push
cmpb
add
clc
fcomps
inc
scas
mov
and
call
jae
cwtl
pop
inc
int3
rcll
rcl
mov
pop
call
outsl
scas
lret
out
stos
pop
and
dec
clc
cmpsb
dec
pop
mov
or
inc
jnp
gs
roll
push
movsl
push
fsubl
inc
fcmovnu
rep
sbb
repnz
sub
aas
xor
fisttpl
test
fmull
push
fdivrl
scas
dec
adc
jns
mov
loopne
dec
lods
scas
push
addb
sahf
sahf
addr16
mov
ret
aam
imul
gs
dec
test
mov
mov
xor
ret
loop
sbb
sahf
ret
sahf
shlb
das
nop
inc
int3
loop
sbb
dec
xchg
xor
pop
out
cmp
push
ficoml
mov
inc
movsb
ficomps
cmp
dec
mov
test
sub
je
cmpsb
sbb
test
fimull
scas
mov
ja
or
cmpsl
mov
mov
push
int
dec
mov
sbb
leave
dec
pop
pop
mov
jo
test
out
cltd
jl
add
inc
stos
or
jns
and
leave
imul
arpl
enter
cmc
insl
lahf
xchg
inc
inc
stos
xlat
and
push
popf
push
mov
or
mov
pop
dec
jne
loopne
xor
cmp
or
daa
jp
mov
push
mov
jl
inc
mov
cmpsl
loop
push
lds
sbb
rorl
jb
outsl
or
inc
or
sbb
and
loope
call
in
jmp
sbb
cmpsb
xorl
cmp
inc
pop
mov
dec
aad
and
mov
pop
test
and
sub
lcall
out
xor
subb
mov
fmulp
sbb
lds
adc
jl
lds
filds
fld
xchg
pop
add
jg
jp
out
mov
inc
mov
test
jmp
leave
dec
gs
push
int3
mov
mov
adc
addl
les
inc
call
add
sahf
rcr
pop
in
xor
dec
ljmp
lahf
loop
mov
mov
ss
cwtl
cmp
imul
mov
int3
pop
aam
mov
mov
cs
inc
lahf
fbstp
pop
lods
push
xor
enter
add
jmp
cmp
addr16
movsbl
pop
mov
pop
cmp
inc
mov
cmpsl
sbb
sub
xchg
sub
inc
xchg
dec
mov
out
xchg
lretw
add
add
jb
mov
dec
cltd
les
out
adc
and
sbb
inc
cli
and
ficoms
mov
imul
ret
in
insl
pop
mov
repnz
sbb
mov
pop
dec
mov
test
in
pop
enter
sbb
and
mov
enter
dec
loop
xor
adc
sarb
and
mov
lret
add
add
in
sub
xor
xor
xor
in
pop
xor
lret
cmpl
loop
sbb
add
cmp
add
fst
int3
mov
push
cli
cmc
enter
add
xor
aam
in
ret
push
out
lahf
mov
jae
add
jbe
dec
ret
add
and
jmp
pop
xor
pusha
leave
aaa
aaa
test
jns
shrl
mov
add
sub
mov
repnz
dec
call
fwait
jge
fsubrl
ret
xchg
push
dec
filds
jmp
test
xchg
push
mov
jmp
dec
dec
scas
mov
loopne
adc
mov
imul
xchg
inc
pop
adc
dec
push
mov
hlt
outsl
adc
call
pop
repz
fs
ret
mov
pushf
out
enter
aam
push
jbe
mov
pusha
cmp
push
mov
ret
xchg
push
das
pop
cmpsl
icebp
dec
out
pop
lods
jg
or
mov
jmp
cltd
out
out
push
sti
lds
and
push
pushf
ret
mov
into
aad
mov
and
mov
sbb
test
inc
fdivrs
fsubrp
mov
aad
inc
pushf
mov
pop
andb
das
dec
std
das
sub
stc
test
push
cmp
shll
mov
pop
dec
pop
fcmove
pop
jecxz
lret
popf
mov
mov
daa
push
mov
cmp
je
stos
daa
jo
js
rep
and
and
repnz
jnp
fidivrl
pop
in
inc
inc
inc
test
jle
sti
jb
lods
push
sbb
mov
int
aam
js
stc
je
ljmp
pushf
test
mov
xchg
insl
jle
cmc
push
xchg
lods
mov
xor
mov
ljmp
flds
ror
iret
xor
fadd
sbb
jle
pop
xor
shl
leave
dec
xchg
xchg
repnz
cmpsl
push
ret
mov
lods
sbb
stos
add
nop
mov
push
mov
inc
fs
pop
jnp
inc
cmp
outsl
and
in
xchg
add
sub
pop
or
in
ds
daa
mov
daa
or
xor
inc
movsb
nop
jbe
insl
xchg
mov
testl
dec
add
add
pop
and
or
mov
and
mov
sub
mov
and
add
sub
outsb
xor
or
test
adc
rorl
push
dec
xchg
testb
inc
push
and
sub
fiadds
push
gs
push
stos
div
add
adcl
add
push
jo
jns
cwtl
xor
mov
outsb
push
and
inc
repnz
mov
int
xchg
mov
repz
cmpsb
pusha
dec
xchg
imul
adc
rcrl
inc
cli
iret
push
shll
xchg
or
jo
mov
adc
push
jno
mov
pop
mov
mov
xchg
xor
pop
cmpsb
outsb
mov
and
cld
xchg
bound
fnsave
and
je
adcl
jbe
out
pop
xchg
daa
gs
and
out
hlt
or
xor
push
cwtl
popf
in
out
lds
and
pop
daa
cld
mov
mov
cs
xchg
push
mov
pshufw
fidivl
lret
shrb
adc
das
inc
lahf
lret
cmp
cmpsl
lret
mov
movl
jnp
popa
mov
inc
mov
push
and
cmc
inc
xchg
ds
mov
insb
inc
iret
pop
out
adcl
popf
mov
es
mov
pop
repnz
cld
sub
adc
inc
popa
cwtl
sbb
in
loopne,pt
ss
or
addb
movsl
ret
out
mov
jge
outsb
add
xlat
ret
xchg
sub
outsl
sbb
lock
loope
aad
shll
js
push
cli
in
cmp
pusha
aas
fimuls
loope
pop
adc
pop
test
in
push
inc
cmpsb
xchg
jno
mov
sbb
movsb
mov
test
and
call
xchg
jle
mov
scas
mov
mov
pop
inc
xchg
push
popl
or
mov
mov
shr
mov
mov
and
arpl
mov
mov
pop
testl
stos
imul
inc
arpl
mov
loope
jno
in
push
adc
repnz
arpl
sbb
addl
mov
je
add
popf
inc
and
sub
stc
jbe
push
fisubs
ss
jo
jae
and
mov
mov
imul
imul
or
pop
and
add
jno
inc
inc
ss
pop
or
jb
mov
and
sbb
shrl
rorl
loope
das
lret
repnz
xorb
insl
push
xchg
das
jl
test
push
sbb
push
gs
adc
mov
push
loopne
pop
loop
int
push
lds
lcall
cmpsl
dec
hlt
testl
lods
pop
push
push
and
lret
notl
mov
push
dec
push
pop
mov
out
add
test
sbb
cmp
sbb
scas
cwtl
lcall
pop
test
hlt
sub
add
fiadds
jmp
and
pop
in
cmp
imul
mov
aas
jecxz
cmp
dec
out
ds
push
outsb
in
add
repnz
xchg
mov
cmp
idivl
lock
clc
lods
jne
mov
mov
scas
cmp
lea
adc
in
mov
dec
xor
test
fisttpl
push
mov
cmp
xchg
cmp
mov
leave
cmpsl
fiaddl
or
lds
test
mov
cmp
pop
fstp
adc
out
mov
hlt
push
mov
dec
jnp
incl
sahf
insb
fldt
xor
ret
aam
iret
cmpb
push
xor
adc
or
dec
in
xchg
call
in
inc
fxch
xor
and
sbb
and
jo
inc
jecxz
mov
std
mov
jae
add
aad
stc
cld
mov
pusha
notl
iret
mov
pop
xchg
adc
push
icebp
cltd
fldcw
xchg
fimuls
push
inc
test
pop
test
loopne
loop
jne
mov
pop
aad
fidivl
pushf
cmp
mov
xchg
mov
gs
mov
fwait
jmp
pop
adc
cmpl
stos
outsb
adc
xchg
adc
xor
lods
dec
adc
negb
cmp
pop
mov
not
inc
es
inc
or
adc
or
and
pop
xchg
or
push
aas
int
dec
xor
pop
insl
jnp
dec
mov
cmpsb
in
cmc
lock
lret
fists
testl
repnz
fnstcw
inc
xor
cs
into
shrb
lcall
sub
stos
xchg
and
xlat
xchg
xor
lcall
movsl
insb
jnp
xchg
mov
fnstenv
popf
mov
jg
mov
cmp
stc
sbb
inc
mov
jo
pop
jl
xchg
jmp
cs
xlat
sbb
dec
jle
dec
lods
cmpl
cmp
adc
cmpsb
sub
idiv
sbb
dec
lgs
inc
or
movsb
enter
nop
cmp
mov
fucomi
xchg
mov
mov
loope
sub
adc
mov
movsb
xchg
sbb
ret
incb
mov
adc
push
dec
push
sti
pop
mov
sub
dec
into
sti
add
jno
mov
jp,pn
adc
mov
fwait
push
mov
aas
mov
dec
push
pop
sub
xlat
ja
shl
mov
push
clc
stos
not
dec
fildll
stos
out
adc
jmp
jbe
and
inc
or
dec
subb
shlb
fwait
push
fucomi
mov
rcll
xlat
in
out
adc
lahf
xor
mov
cmp
and
lcall
cmc
adc
pop
xchg
movsb
push
cs
enter
sbb
idivb
inc
sub
arpl
xor
out
fs
cmp
jmp
out
mov
or
push
push
ficoms
bnd
or
cmova
lret
xchg
pop
mov
fabs
andl
fidivrl
sub
les
das
mov
bound
int3
and
pop
repnz
mov
fwait
lret
dec
and
mov
ror
scas
in
gs
sub
je
stos
test
inc
add
aas
loope
pop
jge
iret
jb
enter
pop
fiaddl
jg
std
inc
lock
pop
jge
jg
or
hlt
adc
fldl
lea
mov
fidivs
nop
lea
pop
add
enter
mov
dec
pop
outsb
shll
and
and
es
sbb
shll
fldl
push
lods
enter
aaa
inc
xor
xor
or
sti
or
push
rclb
ss
push
test
jnp
adc
xchg
mov
gs
sbb
sbb
pusha
inc
cbtw
and
dec
pop
push
mov
movsl
add
es
repnz
inc
lods
pop
inc
pop
inc
std
adc
dec
movsb
mov
add
add
pop
aaa
cmp
push
mov
jb
stos
aam
jge
xor
shlb
mov
add
push
adc
xor
jb
xchg
adc
inc
sti
add
mov
sub
sti
das
push
add
xlat
notl
adc
into
pop
sub
mov
cmp
jne
fs
mov
es
dec
jle
mov
cmp
aas
or
sub
xchg
les
mov
cld
and
test
leave
jne
mov
xchg
jbe
pop
inc
sbb
jbe
cmp
imul
pop
push
dec
cmp
dec
das
stos
je
fiaddl
add
adc
daa
ss
dec
test
insl
filds
in
dec
add
cld
push
rorl
cmpl
jnp
sbb
movsl
test
cs
jae
js
mov
cld
mov
loop
sarb
int
daa
aam
insb
or
cmpsl
test
sub
push
cmc
faddl
decb
xchg
test
aad
pusha
sub
xlat
jae
mov
mov
insl
clc
dec
cmp
mov
das
jle
mov
pop
fs
pop
stc
xor
push
pop
sub
pop
aad
lahf
repnz
cmp
jp
adc
aas
inc
or
xchg
inc
adc
faddl
lret
push
mov
dec
out
xlat
lret
mov
or
scas
xorl
adc
cwtl
gs
adc
push
aad
test
push
popa
int3
push
rcrb
jbe
xor
negb
aad
and
and
sub
add
imul
cmpsl
push
jnp
test
in
jl
sahf
sbb
push
push
daa
sub
adc
xor
and
loopne
test
adc
hlt
sbb
out
lcall
inc
lcall
icebp
xchg
pushf
je
xor
push
lret
and
int3
daa
outsl
ret
mov
xor
add
shlb
jnp
enter
test
jp
add
js
adc
pop
ljmp
pushw
dec
ror
cmp
out
mov
out
ljmp
xchg
push
test
jne
cs
cmp
iret
mov
jle
add
cmc
lods
movlps
push
leave
mov
xor
aam
or
les
jae
mov
imul
and
pop
jne
cmp
test
sbb
loope
push
dec
popl
out
push
jg
in
mov
sbb
inc
cmp
imul
push
aaa
adc
jl
mov
push
shll
sahf
pop
lret
lods
pop
sub
jnp
jbe
or
rcr
fisttpl
sti
in
data16
push
or
jp
cs
adc
pushw
in
stc
sbb
data16
ds
aad
sub
test
or
int
sbb
js
ret
mov
xor
mov
or
pop
mov
sbbb
inc
leave
cld
jbe
and
push
jno
js
inc
inc
jo
and
xchg
iret
jge
sub
and
push
jle
sti
cmpsl
test
pop
dec
test
loope
cmpsb
adc
clc
push
arpl
ds
jbe
cmp
shrb
jb
test
into
push
aas
push
lahf
xchg
and
das
aad
mov
fistpll
push
rorb
xor
push
repnz
mov
mov
cmp
xchg
dec
outsl
les
cmc
jb
pop
jmp
lods
shlb
inc
sbb
add
pop
es
shlb
pop
inc
addl
pop
xchg
xchg
push
outsl
daa
adc
scas
dec
mov
je
push
xchg
jne
loope
dec
cmp
je
test
xchg
and
mov
pop
xlat
sbb
das
je
sub
xor
mov
scas
xchg
mov
cmc
xchg
pop
lahf
pop
cld
cmp
imul
xor
xor
mov
jnp
fldcw
ja
jecxz
fcmovb
movsl
sub
push
cmp
add
hlt
mov
sub
pop
pushf
adc
shr
fucom
xor
inc
mov
rolb
mov
jmp
push
bound
pop
inc
xor
mov
add
push
lahf
int
mov
hlt
das
rcr
sbb
fisubl
lods
nop
pop
and
cwtl
adc
mov
in
enter
mov
sub
pushf
cmpsb
pop
jmp
or
rcl
xor
push
aam
lods
push
sub
jl
or
cmpsl
daa
mov
sub
pushl
ja
dec
repnz
hlt
sbb
std
out
add
push
aad
aas
pushf
stos
fsub
mov
mov
mov
inc
dec
inc
bound
mov
insb
leave
dec
aam
sahf
movsb
or
scas
sbb
xor
gs
jle
pop
jns
test
and
cmpsb
or
int3
sbb
adc
in
fidivrl
popf
push
popf
data16
cmpsb
mov
lahf
movsb
add
test
sbb
jmp
insl
stos
xchg
in
adc
outsl
mov
push
pushf
test
int3
outsb
sub
ficoml
clc
xor
stos
scas
or
mov
cmc
xchg
cmpsl
adc
mov
popa
popa
jnp
dec
inc
iret
and
mov
int
push
sbb
cmp
cmp
sub
mov
or
jns
dec
lods
push
fdivrl
push
add
jmp
pop
mov
fcoms
test
mov
add
popf
test
gs
aas
inc
jmp
push
shl
lods
js
add
inc
jo
pcmpgtw
ja
xor
cmp
in
ficoms
out
mov
cmp
inc
ja
mov
mov
cmp
insl
fstpl
rorb
mov
push
cmp
push
in
xchg
sbb
push
xchg
pop
testb
cmp
clc
mov
mov
jb
dec
add
mov
adc
fmuls
jae
inc
rclb
aam
sbb
mov
pop
mov
xchg
xchg
in
gs
xchg
cmp
iret
pop
mov
jmp
mov
int3
push
sbb
mov
cmp
sub
clc
dec
dec
or
rclb
push
xor
cmovp
adcl
mov
jae
mov
nop
outsl
inc
shrl
fwait
push
rcll
push
sub
je
pusha
out
push
mov
fiaddl
lock
aaa
mov
aaa
sub
ret
scas
cmp
mov
jo
xchg
adc
sbb
xchg
mov
lods
lea
add
and
xor
sub
les
test
mov
mov
push
fnstenv
cli
sbb
adc
xchg
or
cmc
aad
stos
ret
xchg
inc
mov
dec
pop
mov
enter
inc
or
or
ficomps
mov
aad
push
add
mov
cmp
nop
fstpl
or
dec
test
jno
cmp
dec
imul
ret
mov
loope
popa
and
or
mov
popf
in
inc
in
cld
sar
rorb
sbb
add
stos
pushf
in
inc
add
mov
sub
test
add
dec
adc
pop
mov
loop
mov
xchg
cli
mov
dec
mov
je
xchg
loopne
cltd
lods
popa
push
insl
jo
test
lcall
and
stc
push
dec
dec
mov
dec
mov
cmp
cmc
xchg
mov
add
stos
mov
cld
std
lcall
decb
jl
xchg
push
or
pusha
pop
push
iret
outsb
add
xchg
push
lods
clc
jecxz
cmpsl
pusha
fwait
xchg
fsubrl
shlb
jmp
mov
inc
adc
xor
pop
das
nop
rol
out
push
leave
arpl
test
clc
shlb
loope
pop
dec
js
je,pt
out
addb
or
out
or
push
adc
xchg
jmp
mov
stos
xor
add
lret
mov
shrl
adc
inc
xor
mov
clc
inc
cmp
pushf
stos
xchg
lea
add
inc
test
adc
test
jns
daa
repnz
test
fcoml
add
xorb
dec
dec
addl
popf
inc
cmp
adc
cwtl
dec
dec
les
xchg
or
add
fcoml
lock
fcmovnb
adc
repnz
xchg
mov
cmp
jae
mov
xor
cmp
cmp
sahf
sbb
imul
mov
notl
imul
mov
cmp
xor
xchg
xchg
cmp
xchg
int
jns
jne
fwait
sbb
cmc
inc
xorl
mov
mov
push
or
mov
enter
mov
xchg
repz
inc
test
sub
lret
icebp
mov
pop
fwait
popa
imul
faddl
and
stc
cmpsl
aaa
fcomps
mov
mov
lods
cwtl
sbb
cmp
fimuls
xor
jg
mov
or
out
inc
add
push
jmp
sarb
dec
or
lcall
ds
lds
mov
mov
addb
xchg
std
movsl
lret
cli
cltd
add
call
xchg
mov
ds
mov
cmpsl
aas
xchg
ds
je
pop
xorl
sahf
xchg
bswap
cmc
mov
cld
icebp
adc
fucomi
loop
mov
and
pop
mov
fidivrl
scas
jecxz
rcrl
je
aas
fiadds
xlat
repnz
int
outsb
jno
aaa
mov
jne
es
mov
mov
dec
push
xor
push
ja
push
cmp
adc
add
mov
add
rcrb
push
mov
mov
lods
lds
leave
cmc
loop
mov
push
xchg
loope
jae
movq
sub
call
je
mov
or
scas
jno
xchg
pop
sub
jns
mov
mov
xchg
imul
mov
jmp
testb
enter
fldcw
inc
xchg
mov
orl
adc
subb
fdivs
xor
outsl
xchg
push
fisttps
push
cli
inc
lea
insl
fistps
fisubs
ja
outsl
pop
cmp
xchg
pop
adc
in
ss
mov
je
lock
cmc
in
jo
dec
pop
jae
in
mov
mov
push
jmp
or
outsl
repnz
fs
inc
cmp
cmp
enter
push
in
sub
stos
out
jecxz
fwait
int3
sahf
xlat
and
clc
jg
insl
dec
push
sub
cmp
cmp
xorb
ret
je
pop
inc
ficomps
pushw
int3
pop
cmpsl
inc
sub
inc
mov
push
mov
cli
xchg
sub
sbb
loopne
out
cmp
mov
lret
cmpl
xchg
cmp
daa
mov
xor
lock
mov
aad
data16
cld
je
jns
movsl
ss
roll
movsl
cmp
pslld
pop
pop
gs
mov
test
pusha
push
das
mov
mov
jp
add
in
xorb
test
mov
addl
adc
pop
aad
jp
push
jmp
mov
push
enter
and
add
lret
fists
xchg
imul
inc
or
xchg
test
imul
sub
cmc
xlat
cwtl
data16
xchg
or
iret
xchg
jl
lahf
fmuls
in
mov
cld
xchg
or
cmp
cmp
insb
mov
stos
sbb
mov
cli
jle
xchg
xchg
cltd
aad
mov
inc
addr16
mov
mov
fcmove
icebp
cmp
jno
pusha
sbb
test
mov
push
mov
in
xor
js
sub
fs
pop
xchg
insl
fidivs
inc
push
in
lret
hlt
and
pop
outsl
sbb
push
jg
xchg
sub
dec
or
nop
jo
in
dec
fldcw
cmp
clc
jmp
add
mov
push
into
jo
jns
push
outsb
aas
push
clc
in
push
sub
pop
pop
dec
inc
stc
sti
jo
and
aad
lods
stos
pop
mov
bound
or
rcll
pop
push
sbb
mov
stc
int3
rcrb
mov
sti
inc
push
pop
sbb
ret
pop
dec
popf
lea
push
cmp
bound
mov
test
jle
and
cmp
test
sub
dec
pop
out
inc
cmp
inc
jle
mov
aas
sbb
xor
mov
sbb
repnz
xchg
paddusw
xchg
rolb
das
addl
pop
pop
pop
push
pop
mov
push
jp
fidivrs
inc
fidivrl
jns
adc
jmp
scas
push
rcll
xchg
ss
in
cmp
cltd
lods
or
xor
mov
ret
test
ljmp
cmc
lods
dec
mov
or
inc
pop
test
mov
je
ss
adc
pop
call
push
xchg
dec
fistps
or
dec
int
lcall
pop
mov
pop
aas
addr16
sub
ret
inc
sbb
or
adc
je
sahf
sbb
sub
ds
stos
adc
adcl
xor
sbb
sbb
data16
push
inc
mov
sbb
lret
and
imul
sti
or
out
push
loope
jle
add
xchg
ja
repnz
fucomp
decb
mov
mov
iret
jb
pusha
mov
sbb
out
inc
jns
sahf
jecxz
movsl
mov
sbb
mov
dec
xlat
jbe
mov
int
sbb
js
mov
ja
xlat
pop
sbb
bound
movsb
xchg
mov
adc
sbb
jnp
scas
mov
les
push
dec
repnz
push
push
aad
ljmp
pop
inc
lds
orl
add
ret
adc
push
mov
pop
or
or
lea
inc
out
je
pusha
shlb
gs
imul
or
adc
ja
xchg
dec
maxps
adc
sub
pop
mov
mov
dec
sahf
outsw
pop
mov
dec
mov
rorl
add
hlt
insb
xchg
fldenv
std
inc
pop
and
pop
sbb
stos
pop
mov
arpl
jmp
pop
fwait
xorl
push
sarl
mov
xor
sub
xchg
xor
jo
xor
inc
mov
xchg
mov
out
jmp
popf
movsb
add
xor
mov
mov
fildl
and
stc
dec
cmpsb
loop
xorl
add
jecxz
xchg
into
xor
stos
dec
mov
insb
test
and
sbb
sbb
ret
mov
cmp
push
fcom
cmp
lret
je
sti
shlb
add
mov
into
mov
mov
adc
mov
testb
inc
add
push
dec
imul
and
je
nop
inc
pop
or
sbb
xchg
and
pop
test
fcom
adc
dec
outsl
outsl
pop
xor
ret
pop
test
xor
mov
push
pushf
jno
jp
imul
adc
ds
arpl
jbe
add
push
xlat
inc
add
sbb
mov
inc
push
jne
bound
mov
sahf
pop
shll
flds
lock
lret
sub
push
pop
ret
int3
or
lret
and
inc
jnp
scas
sub
push
or
inc
inc
movsb
fmul
mov
aam
rorb
roll
sbb
xchg
in
ret
sbb
push
add
xchg
outsb
and
frstor
mov
scas
or
add
gs
leave
leave
mov
pop
and
cld
mov
lea
fwait
sub
pusha
movsl
ja
jne
pop
jno
add
scas
fnstsw
mov
push
adc
jno
outsl
pop
addl
mov
cld
fstps
sbb
pop
push
fst
jle
push
jnp
mov
mov
pop
push
mov
mov
mov
jl
push
adc
bound
je
cmp
xor
dec
in
repnz
push
or
mov
repz
int3
add
into
mov
imul
mov
rcr
decb
lds
into
dec
or
test
add
cs
cli
inc
mov
mov
dec
leave
aam
movsb
stc
xor
xchg
movb
xchg
inc
push
cmp
add
insl
dec
cmp
cld
clc
jecxz
jne
mov
mov
and
add
sub
mov
push
ret
sub
shlb
sahf
push
adc
jo
sbb
jp
and
push
and
icebp
xor
orb
or
das
sbb
inc
pop
jb
pop
scas
cs
arpl
push
lahf
cmp
and
adc
outsl
sub
ret
xor
mov
out
mov
inc
outsb
mov
sub
push
inc
or
testl
mov
pop
push
dec
pop
lret
xor
cmp
imul
add
pop
dec
dec
jb
mov
xchg
or
pop
loope
into
inc
and
sbb
jl
mov
mov
mov
fmull
test
fdivrs
iret
ret
std
cmp
dec
inc
fcomps
and
mov
in
push
and
repnz
sti
sub
cmp
mov
lret
add
jl
bound
pop
insl
rclb
mov
sub
mov
push
push
rep
out
daa
mov
or
ljmp
gs
cli
jnp
das
xor
gs
or
ret
and
repz
outsb
lea
mov
test
call
push
push
and
out
xor
xchg
ficompl
data16
sbb
push
pop
ret
imul
rcll
push
in
mov
enter
jb
insb
lock
push
pushf
addr16
xchg
loope
sbb
pop
movntps
xlat
sub
sub
and
out
sbb
dec
call
loope
inc
and
inc
push
inc
and
jge
inc
cmp
stos
leave
xchg
cld
stos
popl
shll
xor
shll
dec
jo
fcmovu
sub
push
dec
scas
aas
cli
sub
shrl
adc
test
dec
lahf
pop
rcl
test
cs
or
fwait
out
imul
xor
les
jle
pop
inc
mov
jl
scas
scas
jbe
outsl
push
pop
cltd
ret
cli
std
fdivl
mov
out
sti
cmp
ret
cli
into
adc
int3
mov
push
cmp
test
cmp
mov
xchg
jo
in
and
mov
or
jo
mov
push
add
push
shlb
mov
nop
into
or
inc
rol
ret
fs
pop
adc
push
mov
daa
cmp
das
sub
xor
fstpl
inc
mov
sahf
xchg
ja
and
push
imul
dec
or
sub
and
pop
lcall
inc
stc
add
and
inc
cli
loope
adc
fst
dec
lock
stos
fnstsw
js
loope
cld
xor
dec
jecxz
and
cmp
in
push
iret
repz
loop
rorl
xchg
mov
cmpsl
fidivrs
into
xchg
add
xchg
mov
das
das
dec
adc
fiadds
mov
adc
jne
or
xor
stc
int3
xor
push
cmpsb
mov
fbld
loope
lds
jae
and
test
and
ss
ret
jp
pop
aam
test
lock
and
popf
jb
sbb
jo
or
push
push
shrl
jp
mov
mov
xabort
mov
stos
and
xor
mov
xorb
adc
jp
mov
lret
and
idivb
test
je
mov
ds
jae
mov
shlb
outsl
fld
xchg
pop
sbb
and
mov
into
dec
and
lret
cli
jbe
adc
loope
add
lds
sbbb
loopne
mov
sub
sbb
ds
jbe
fcmovnb
pop
adcl
and
sub
iret
jno
or
pusha
push
inc
test
mov
test
push
sub
and
repz
inc
aas
pop
in
mov
leave
inc
cmp
scas
cmp
mov
xchg
add
xor
movb
or
or
sbb
mov
push
pop
nop
or
or
mov
pop
sub
dec
inc
testl
adc
lock
xlat
ljmp
mov
xchg
mov
push
and
repz
adc
int3
outsl
addb
mov
nop
mov
roll
mov
adc
clc
push
rcll
mov
jg
mov
mov
push
lcall
sub
cwtl
int
cmp
shlb
cmp
leave
mov
inc
sbb
xchg
push
lret
xor
adcl
int3
outsb
adc
pop
sub
in
xor
cmpsl
dec
andb
jno
pushf
shlb
cmc
jno
dec
and
adc
incb
xlat
shl
sub
js
out
fdivs
dec
push
push
fidivs
adc
sub
xor
inc
xor
cmp
mov
xchg
int
cltd
cmp
mov
push
xor
jecxz
enter
lahf
sub
jle
adc
pop
fisttpll
jae
adc
subb
cmp
fildl
push
mov
repnz
or
xchg
addb
jle
push
pop
dec
enter
int3
push
sub
and
sbb
cmp
addr16
aas
pop
lea
and
sub
or
ffree
mov
dec
mov
mov
bound
mov
lcall
repz
xor
jbe
and
daa
mov
push
push
xor
cld
clc
sbb
js
stos
adc
sarb
lret
jns
pushf
inc
pop
adc
jne
mov
test
xchg
es
jle
fsubp
pop
add
sbb
test
pop
mov
xchg
inc
and
cmp
push
push
mov
xchg
push
ss
aam
sbb
imul
push
lods
pop
movsl
sub
int
andl
xor
into
pop
fdivp
mov
mov
mov
add
jle
cmp
xor
call
and
push
xchg
adc
jae
or
xchg
mov
ret
mov
aaa
shlb
add
pop
and
xchg
cmp
xchg
sbb
and
or
shrb
or
js
cmp
out
jmp
adc
mov
lahf
cmc
leave
inc
jns
stos
xchg
push
lods
imul
test
mov
sbb
push
outsb
mov
push
shll
dec
mov
xchg
cli
and
fstpl
pand
mov
mov
test
test
ss
sub
inc
sbb
push
jbe
add
nop
shlb
fsubp
or
lea
int
mov
lods
fwait
add
pop
std
dec
push
popf
fstpt
cld
rcrl
or
mov
test
xor
repz
ret
inc
int3
pushf
mov
in
mov
popa
and
inc
testb
lcall
or
jmp
pop
sbb
add
cmc
inc
scas
sbb
clc
sbb
gs
fsin
or
xchg
or
sub
cmc
add
mov
mov
lret
das
pop
dec
mov
mov
or
add
cmpsl
ficoms
cld
adc
fstpl
mov
pop
imul
lock
and
in
das
add
push
out
in
or
jmp
add
shrb
fnstsw
js,pt
faddl
xchg
sub
and
mov
mov
dec
pop
lods
dec
jmp
mov
or
mov
push
inc
xchg
fidivs
mov
xor
or
adc
out
cmpsb
movb
nop
sbbl
insb
lods
shlb
mov
leave
push
fidivs
sbb
add
and
xor
enter
mov
sub
loop
out
lcall
sbb
sub
movsb
push
sbb
mov
sub
fdivp
xor
fidivrs
pop
push
inc
dec
mov
je
xchg
fs
pop
mov
inc
pop
std
cmp
js
shll
sub
inc
mov
icebp
and
xor
andl
daa
add
push
lret
addr16
or
in
dec
cmpsb
pop
mov
imul
ljmp
shl
fldcw
inc
sub
or
or
or
lods
loopne
add
mov
int
mov
leave
scas
loop
into
push
mov
iret
lea
add
pop
adc
dec
jae
xchg
decl
mov
mov
pop
push
insl
and
cmovnp
popf
jno
shlb
or
mov
sub
out
in
hlt
repz
dec
mov
inc
mul
mov
pop
sti
lds
mov
sti
pushf
cmc
mov
pop
cmp
mov
scas
test
lds
sub
scas
pop
ret
lock
sbb
mov
jno
add
out
lret
cmp
mov
dec
sbb
xor
jp
dec
sbb
xchg
popa
je
add
repnz
xchg
scas
xchg
and
rcr
dec
lds
dec
and
mov
shll
or
adc
cmc
shrl
adc
aaa
adc
repnz
pop
mov
shr
cli
jae
in
mov
cmp
sbb
xchg
jno
jmp
cmc
imul
ret
mov
cmp
cmp
pop
fnsave
mov
dec
and
xchg
shl
xchg
test
xor
fldenv
imul
xchg
adc
popf
bound
adc
movsl
jge
pop
mov
in
mov
inc
add
xor
mov
stos
in
cwtl
lahf
div
fs
jbe
pop
fsts
sar
inc
in
scas
cwtl
push
xor
ds
int
and
lahf
lods
and
adc
and
into
sub
stos
dec
shll
in
lret
rcll
enter
inc
or
std
push
in
in
int3
pop
sarb
sub
jl
dec
mov
adc
icebp
inc
xor
daa
lea
pop
lea
cld
mov
mov
dec
insb
dec
or
add
test
imulb
imul
adc
repnz
fcmovnbe
adc
lahf
adc
pop
push
cmp
into
xchg
jb
cmpsb
inc
lds
sahf
jg
xor
and
xlat
jne
lds
jg
jb
and
stc
pushf
jg
push
xchg
ds
ss
pushf
add
sub
adc
sub
loope
stos
ja
mov
jl
jne
add
out
cli
cmp
xchg
lahf
xor
or
pop
cmp
and
shr
xchg
jge
jle
lret
push
ret
mov
cs
fcmovne
in
mov
std
mov
in
mov
jo
popa
mov
mov
ljmp
xor
ret
inc
leave
sub
fs
xor
or
pop
mov
mov
lock
ss
stos
sti
ljmp
imul
push
icebp
jecxz
xchg
xchg
xchg
scas
or
scas
bnd
popa
xor
mov
dec
pushf
mov
mov
jg
fistl
pop
mov
and
mov
data16
addr16
pushf
aad
or
repnz
adc
sahf
das
mov
and
push
pop
into
cli
cs
pop
pushf
je
mov
xchg
mov
das
sbb
shrl
clc
idiv
adc
jmp
lret
jns
mov
int
or
pop
pop
sbb
adc
mov
pusha
adc
les
dec
cmp
je
inc
or
adc
daa
arpl
ss
mov
cmp
sti
ret
jne
orb
fbld
stc
aad
test
cld
adcb
sub
adc
mov
mov
mov
lods
xor
jae
pop
push
mov
les
fcompl
inc
and
dec
xchg
pop
movsb
jae
jo
test
jb
pop
mov
ficomps
movsl
inc
inc
loope
mov
mov
aas
cwtl
cmp
addr16
insl
lahf
mov
and
lods
cmp
add
shr
cs
pop
add
roll
adc
pop
xchg
dec
inc
mov
cld
orb
repz
ja
icebp
js
xchg
std
xchg
push
stos
scas
cmovnp
jmp
hlt
adc
mov
mov
and
sbb
xchg
xchg
dec
mov
fsts
fcmovnbe
jl
bnd
push
adc
fdivl
scas
in
fistpll
add
mov
insl
mov
pop
sub
and
inc
inc
gs
mov
in
and
sarb
js
ss
out
popf
mov
push
arpl
jp
sub
mov
sahf
adc
lods
mov
dec
cli
imul
fistps
int
jecxz
cmp
mov
inc
push
mov
rorb
inc
or
adc
gs
jecxz
das
or
in
mov
mov
jae
push
adc
mov
rolb
dec
imul
mov
and
dec
aad
imul
add
mov
mov
testl
mov
mov
adc
ja
insl
idivb
adc
sbb
imul
fsubrl
push
or
mov
sbb
mov
and
sbb
mov
loope
mov
loop
adc
sub
fldenv
shll
insl
xor
stos
and
stos
push
rcl
push
adc
xchg
mov
mov
dec
stc
jae
lcall
sbbl
cmp
push
push
les
jmp
stos
mov
sbb
mov
lods
shll
popa
dec
dec
cmpsl
push
dec
mov
cltd
testl
adc
out
rclb
lea
or
dec
je
sub
xchg
mov
push
pop
inc
jmp
fwait
dec
adc
dec
shlb
inc
ja
enter
daa
inc
mov
mov
ror
dec
sbb
push
fsubrp
mov
mov
outsb
popf
mov
rolb
loope
adc
inc
outsb
test
lret
les
jecxz
sbb
insl
es
mov
hlt
xchg
repz
push
add
lock
iret
sub
pop
and
push
cmp
jmp
or
ret
fildl
fnstcw
push
pop
movsl
dec
xlat
dec
iret
shlb
xchg
orl
popf
adc
sub
jne
in
sub
repz
jle
movsb
icebp
stc
daa
push
int3
ljmp
mov
adc
lods
jge
lock
mov
imul
popf
dec
rclb
mov
icebp
inc
mov
pop
jle
cld
jo
inc
das
movsl
loop
sbb
popf
mov
lret
jne
xchg
push
pop
repnz
imull
sub
popf
mov
mov
loope
jae
dec
jae
popf
test
out
decl
jl
lcall
add
sbb
lret
mov
lahf
loop
cmp
pop
mov
pop
xor
sub
andl
sbb
adc
inc
sub
cmp
out
pop
mov
lahf
inc
call
adc
in
leave
dec
stc
dec
loope
inc
lret
xchg
adc
das
adc
xchg
inc
mov
adcb
push
mov
pusha
mov
pushf
mov
pusha
lods
insb
pop
ja
inc
call
and
cmpsl
sbb
add
les
imul
dec
pop
aaa
out
mov
cmp
cld
cmc
inc
rcrl
add
loope
lret
adc
sti
iret
cmc
mov
sti
xchg
xchg
jo
cmp
dec
call
fdivl
movsl
or
int
inc
test
xor
mov
movsl
inc
mov
rorl
push
popf
out
outsb
test
fucom
adc
ja
xchg
cltd
divb
pop
adc
jb
enter
sbbb
mov
push
test
xchg
popf
out
cltd
bound
dec
das
cmp
mov
hlt
push
mov
push
xchg
movsb
dec
sahf
jp
or
xor
nop
xchg
filds
js
pop
xchg
pop
andl
mov
pushf
or
cmp
mov
jl
cmp
ds
sahf
push
data16
and
out
xor
pop
nop
iret
into
icebp
mov
jbe
push
jl
popf
aad
pop
loopne,pn
mov
test
imul
sbb
and
xor
cli
lds
fstps
ss
test
stc
mov
and
sub
xor
add
xlat
lret
test
mov
cmp
repz
cmpsl
or
out
lds
inc
inc
cmp
cmc
push
mov
sarl
lret
mov
jp
adc
sub
xor
fnstenv
add
sbb
push
pop
dec
stc
into
shl
add
idivb
ret
pop
scas
pop
das
js
adc
in
jp
jg
xchg
loopnew
das
sbb
mov
sbb
test
xchg
push
inc
push
stos
rorl
dec
nop
in
daa
mov
cmc
ret
std
push
js
repz
or
cmp
push
and
sub
push
pop
sahf
mov
add
and
mov
and
lods
cmpsb
xchg
inc
flds
fstl
sub
icebp
add
div
cld
fnsave
cmc
fstp
sbb
push
pop
inc
xor
fstps
pop
or
outsl
ret
xchg
test
fldcw
lret
cmovo
and
ja
popf
push
inc
out
mov
arpl
and
and
jg
in
jbe
sbb
jb
pop
addb
pop
lea
ret
add
fdivs
inc
fnstsw
xorb
popf
imul
movsl
scas
mov
notb
xchg
mov
fnstcw
and
pop
call
mov
test
data16
mov
fdivrs
mov
adc
mov
and
jo
cld
push
dec
dec
jbe
sbb
sarb
mov
xchg
lods
fnstenv
add
sub
xchg
dec
push
mov
inc
add
pop
outsb
adc
jb
shlb
inc
push
pusha
mov
adc
xchg
lret
and
mov
aam
inc
arpl
test
test
nop
mov
and
fsubrs
push
fadds
xchg
sti
aam
das
into
fidivl
imul
mov
ljmp
out
push
xor
leave
xchg
mov
push
push
negb
dec
xchg
lret
inc
lock
in
shrl
push
dec
iret
sub
repnz
shlb
dec
orb
sbb
subl
cmc
push
cmp
sbb
cmc
cmc
subl
jns
mov
dec
imul
testb
rorl
fbld
lret
enter
xchg
shrb
push
add
mov
aas
arpl
mov
lods
sahf
pop
push
or
lret
imul
stos
cmpsb
shll
lcall
insb
sahf
jns
aaa
bound
lret
lahf
mov
add
pop
sub
dec
xchg
cmp
movsb
mov
insl
sbb
mov
adc
in
or
ja
in
nop
daa
xchg
movsl
inc
aaa
mov
rcrb
jecxz
xchg
mov
out
mull
inc
xor
in
ror
jecxz
pushf
outsl
and
iret
arpl
imul
jmp
jo
movsl
sbb
jae
fwait
push
filds
movsb
xlat
call
mov
dec
xorl
out
divl
push
loopne
inc
push
push
jnp
popf
imul
shrb
cmpsl
xchg
addr16
cltd
pop
pop
pushf
xchg
pop
dec
inc
pusha
cmp
pusha
sub
test
push
sbb
and
cmp
shr
lret
ljmp
imul
pop
xchg
xor
or
mov
out
add
xchg
popa
bnd
hlt
mov
pop
lcall
or
mov
nop
ja
ja
mov
mov
xor
movsb
popa
lret
push
repnz
les
sbb
dec
test
sbb
in
je
sbb
pop
mov
cli
jnp
mov
add
aaa
fcmovnb
pop
lahf
xchg
arpl
fidivrl
add
or
in
and
adc
dec
dec
mov
cmp
mov
inc
sub
cs
sub
inc
pop
xchg
aas
sahf
jecxz
inc
dec
mov
xor
and
cmp
inc
jg
insl
mov
mov
pop
ret
jbe
addr16
divl
jns
inc
mul
out
jmp
pop
aaa
push
cli
fisubrs
xor
popf
iret
nop
sbb
jle
in
xchg
clc
shrl
std
imul
orb
xor
inc
pushf
cmp
pushf
lahf
xor
add
jmp
and
stos
push
imul
test
iret
into
inc
sti
sbb
test
shll
lea
lahf
pop
adc
pop
xor
mov
push
test
mov
mov
repnz
xchg
leave
sub
add
ffree
pop
arpl
out
test
adc
out
xor
js
xor
je
mov
xchg
inc
pop
and
lret
mov
and
testl
xchg
imul
push
cltd
fstps
jb
lock
mov
movsb
cmp
jmp
adc
jb
fcmovbe
int
push
shll
out
jecxz
adc
mov
mov
mov
sahf
pop
lea
mov
jmp
movsb
push
mov
daa
inc
sub
and
mov
mov
mov
lea
push
fiadds
sub
mov
imul
jns
xor
inc
push
add
jo
push
push
mov
mov
insb
sbbl
add
sub
push
mov
pop
aas
xchg
and
add
mov
imul
fs
adc
or
and
push
jmp
and
sbb
dec
or
inc
sub
scas
loopne
cli
and
xchg
cltd
mov
cmc
test
dec
test
mov
and
fmull
cli
dec
sub
and
sbb
sahf
xchg
cmp
aaa
out
jmp
mov
out
add
and
jbe
bts
inc
pop
xorl
jno
adc
or
daa
xchg
out
out
push
adc
popa
add
add
lds
push
rcr
jp
or
dec
out
loope
mov
cmpsb
imul
jmp
push
sub
pop
sbb
cmpsl
iret
into
adc
sub
in
shrl
adc
in
je
loop
in
sub
fistpll
aam
lods
popa
test
gs
out
sbb
ret
cli
inc
loop
lret
leave
push
push
ss
clc
mov
jmp
xor
sahf
jmp
enter
xchg
jmp
test
and
dec
loopne
adc
or
mov
inc
fistps
fxtract
das
jg
orl
xchg
inc
xchg
mov
fdiv
test
or
pop
sarb
enter
mov
rorb
fists
pop
fdivrs
push
pop
int3
popl
scas
xor
pop
xor
jb
sbb
mov
popa
inc
mov
pop
push
movsb
cmp
inc
ficomps
jp
adc
dec
and
cmp
xchg
rclb
xchg
mov
xchg
insl
test
jl
push
xchg
cs
imul
mov
sub
push
fs
int
shrb
aaa
movsl
int
sub
mov
xor
mov
sbb
cmp
leave
dec
xchg
mov
xchg
xor
cmpsb
cwtl
ss
out
aad
scas
out
bound
call
inc
or
pop
ds
jecxz
pop
adc
jp
enter
bound
out
inc
inc
shrl
in
xor
movsb
or
add
pop
xchg
dec
or
xchg
popf
cmp
mov
dec
fldcw
mov
mov
or
std
mov
add
sub
sub
les
mov
and
xor
scas
mov
popa
sti
roll
pop
inc
mov
test
push
mov
clc
jne
fxch
add
out
jp
cld
push
popl
out
xorb
inc
fsts
push
in
adc
fistl
ljmp
lcall
jo
shll
mov
pop
jo
sub
daa
jnp
inc
mov
loopne
sbb
xor
push
imul
fdiv
adc
sbbl
je
jmp
cmp
aam
dec
xchg
call
loope
addl
ljmp
jns
jl
xchg
movsb
pop
xor
mov
mov
jle
mov
je
pop
ds
lods
nop
arpl
outsb
xchg
jl
cmp
lret
mov
stos
mov
jo
push
fcomi
jbe
xor
xor
lret
stos
jnp
in
icebp
cmp
pop
gs
ljmp
dec
xchg
xor
jg
into
leave
push
cmp
subb
in
sbb
pop
pop
push
push
andl
adc
ficompl
inc
int3
cmp
cltd
imulb
pop
lods
mov
ljmp
push
xchg
into
leave
aam
jmp
rol
add
mov
cmc
imul
aam
jbe
or
xor
cmpsb
loope
arpl
aas
test
xchg
ficompl
shr
and
pmaxsw
lea
cwtl
xchg
repz
fdivrs
pop
cltd
stos
mov
ja
cmp
es
cld
fimull
movsl
sub
cs
cmp
sbb
dec
xor
xchg
pop
xchg
push
mov
fdivrl
insb
xlat
and
cmp
xchg
adc
enter
aam
stos
popa
dec
mov
pop
pop
dec
mov
xor
je
int
push
decl
jl
test
inc
iret
push
jle
lcall
pop
xchg
jo
fnstenv
mov
mov
popa
stos
and
jecxz
int
xchg
jmp
add
in
subb
cmp
pop
fs
mov
mov
sub
push
and
in
aad
inc
or
mov
jo
fcmove
mov
jno
mov
mov
sbb
loope
dec
inc
xor
mov
push
cwtl
and
leave
out
xchg
in
lahf
or
dec
pop
sbb
push
mov
push
and
aam
xchg
mov
and
mov
sahf
cwtl
lahf
ja
adc
scas
fimull
pop
shlb
shll
mov
movsl
cmpsl
outsb
dec
incl
pop
jno
pop
scas
xchg
les
mov
xchg
lret
jg
mov
mov
incl
mov
xchg
cmp
shlb
stos
pop
and
aas
in
jb
sti
lcall
pop
cmp
cmp
push
add
insb
mov
arpl
adc
add
xchg
imul
sbb
or
popf
sub
mov
xor
das
jno
inc
cmp
aad
pop
xlat
popf
add
imul
popf
cmp
clc
repz
add
pusha
jae
dec
push
xor
or
or
dec
pop
and
fwait
pop
xor
cltd
mov
sti
fbld
jb
or
sbb
cmp
ljmp
dec
mov
cmp
shll
dec
in
push
stos
add
mov
gs
add
stc
xchg
adc
hlt
in
add
xor
mov
out
fisubrs
add
popa
pop
loop
mov
adc
rcrl
shlb
ud0
leave
jmp
dec
popa
mov
lahf
pusha
mov
imul
inc
add
adc
sub
jecxz
mov
mov
mov
div
push
or
jno
jno
jbe
mov
popw
je
test
aad
cmp
std
leave
add
test
adc
popa
mov
flds
out
das
push
pop
mov
and
mov
ret
ss
mov
mov
arpl
std
or
or
lret
ret
fwait
daa
cmp
mov
push
sbb
mov
add
ds
jle
notl
and
sbb
xchg
jb
mov
lea
pop
jge
inc
lahf
lock
inc
js
pop
stc
js
subb
je
adc
stc
xor
add
mov
fucomp
adc
push
push
pushl
mov
jnp
mov
loope
cmp
ja
in
or
mov
adc
push
in
mov
sti
mov
pop
icebp
out
fdivl
mov
lods
lcall
fildl
shlb
push
es
cs
loope
sub
out
loopne
jb
cmp
lahf
leave
out
shll
gs
push
test
clc
ljmp
adc
aaa
subb
je
xor
icebp
fdivrs
sub
cs
out
and
movsl
xchg
addr16
and
mov
inc
xchg
lods
xchg
ja
pushf
test
rcll
and
cmpsl
add
jecxz
mov
fistpl
push
inc
pop
icebp
jl
arpl
and
push
roll
xchg
push
xor
mov
sarl
dec
cld
dec
sbb
gs
idiv
push
dec
sbb
adc
cmp
push
lahf
bswap
cmp
int
out
adc
sysret
inc
outsl
test
das
dec
cld
cmp
into
push
add
scas
push
pop
mov
int
outsl
xor
or
xchg
rorb
das
sbb
jns
mov
stc
js
xchg
iret
push
sbb
xorb
in
js
dec
inc
sub
shll
andb
dec
and
std
sbb
das
xor
es
popa
stc
rcll
rcl
call
adc
fsubr
add
dec
jg
cmp
imul
loopne
rclb
push
lret
inc
jbe
xchg
mov
mov
xchg
add
data16
lahf
sbbl
push
ror
aas
jnp
sub
in
test
shll
cld
pop
sbb
mov
loope
cmpsl
roll
xchg
nop
mov
dec
pop
cld
push
je
sub
les
jg
enter
sbb
dec
cmp
lret
mov
test
push
ja
in
or
outsl
ficompl
cltd
push
inc
push
push
add
loope
es
xchg
jno
mov
in
xchg
xlat
test
mov
sub
sub
mov
nop
out
mov
outsl
in
adc
dec
pop
pop
mov
imul
pop
das
lock
fs
repz
inc
push
jp
dec
inc
pop
sbb
out
stos
pop
fidivl
fiadds
pop
sarb
orl
adc
movsb
roll
sti
ja
adc
fiadds
or
fistpll
cmc
adc
or
push
mov
xor
mov
dec
jl
or
daa
sbb
scas
or
das
push
and
xchg
push
mov
fldt
jno
pop
sbb
scas
cli
arpl
sub
xchg
movsb
mov
fistl
popf
sub
push
pop
cmp
in
push
shrb
fwait
pop
scas
mov
stos
test
sbb
hlt
and
leave
jnp
leave
fucomip
sub
pop
fs
adc
jae
or
xchg
fcoms
dec
mov
cmpsl
xor
int
mov
fwait
mov
dec
inc
popa
xchg
push
cmp
pop
test
fisttps
jo
jne
push
es
mov
mov
cli
roll
stos
pop
scas
add
push
aad
enter
and
bsf
push
pusha
fwait
sbb
inc
jbe
in
loope
rolb
add
jnp
mov
adc
pop
jbe
push
mov
mov
xlat
ljmp
test
lds
jns
xchg
push
idiv
pop
cmpsl
ret
sar
cmp
mov
std
fldenv
aaa
stos
sbb
or
ja
addb
pop
addr16
pop
jle
xchg
mov
inc
push
int3
xchg
outsl
push
push
pop
clc
out
mov
in
test
mov
imul
pop
gs
hlt
call
data16
jp
test
or
or
popa
lds
mov
cltd
push
mov
push
imul
int3
sbb
shl
xor
shrb
add
cmp
lret
mov
jno
push
adc
jb
push
loop
rolb
addl
adc
stc
jl
lds
push
xchg
mov
fldl
mov
jle
imul
fsubr
loop
mov
jp
loop
out
stos
cmp
cmpl
ja
leave
cmpsb
mov
cmp
mov
fucomi
sub
test
mov
pop
pop
adc
and
test
mov
out
movsl
add
scas
pop
push
xchg
jb
mov
fidivs
aad
into
mov
loope
int
shrl
and
mov
dec
lret
in
test
cmp
mov
int
xor
push
add
inc
je
pop
mov
push
in
xchg
daa
in
sbb
dec
mov
or
add
cli
pop
sahf
leave
pop
mov
add
mov
pop
shl
push
dec
mov
xor
arpl
xchg
lods
push
aad
mov
in
cltd
mov
imul
dec
xor
call
fbstp
outsb
lret
sbb
out
jns
sbb
dec
push
xchg
lock
pop
aam
mov
out
and
fdivrl
cwtl
xor
test
adc
sub
mov
movsb
adc
jecxz
xlat
nop
inc
pop
shll
fistps
fwait
inc
mov
in
bnd
out
push
pushf
das
cmp
cmp
lcall
mov
cmp
push
dec
mov
mov
sbb
push
aad
icebp
fildll
lods
aad
movsl
test
fndisi(8087
aaa
inc
ljmp
xor
ljmp
add
or
ss
lods
nop
test
sbb
mov
xchg
mov
pop
cmp
and
cmp
out
pop
jne
cmc
mov
insb
cmp
jecxz
arpl
enter
stc
std
cltd
add
fwait
cli
bound
ret
and
add
mov
cltd
add
out
rcl
fucom
add
fadds
inc
jge
arpl
pop
gs
clc
testb
cmp
adc
xchg
mov
int
outsl
mov
loopne
ret
jmp
mov
ret
sbb
js
jo
popf
call
inc
gs
shll
sahf
cwtl
xor
adc
jnp
pop
aad
repnz
inc
sbb
mov
cli
lods
jbe
ret
jnp
cli
iret
or
cmp
inc
ret
push
inc
fcomp
xor
jae
push
sbb
movsb
mov
jb
pop
push
fiadds
lahf
lretw
or
cmp
rol
sbb
xchg
mov
ljmp
dec
loope
sub
jo
inc
ja
lret
das
mov
or
pop
mov
adc
imul
dec
pop
fdivr
jmp
rorl
jecxz
add
pop
adc
fs
sbbb
sub
iret
xchg
mov
lods
stc
add
js
and
jmp
gs
mov
push
mov
ret
mov
xor
and
cli
ficomps
outsl
adc
out
scas
pop
cmp
mov
mov
dec
pop
add
jp
sub
or
sbb
lock
mov
stos
out
mov
fsubrs
jno
xor
rorb
or
pop
sub
pop
pop
mov
roll
push
sti
cld
lods
clc
data16
add
orb
push
cmpsb
sahf
xchg
pop
arpl
cmp
adc
stc
mov
imul
xchg
adc
pusha
pop
dec
adc
in
ss
xchg
ljmp
decb
and
jns
out
sahf
clc
aaa
andl
imul
ret
push
sti
mov
cmc
fcmovu
outsb
and
push
inc
jge
mov
xor
ret
ss
mov
inc
cli
xchg
mov
ljmp
stos
out
pop
or
mov
lods
xchg
push
or
dec
and
dec
lret
cmp
and
les
mov
xchg
or
push
and
shrb
mov
inc
adc
ja
pusha
pop
sub
nop
pop
in
dec
imul
in
push
push
stc
lds
ja
cmp
out
mov
jle
lcall
jge
sbb
xchg
fnstsw
bound
pop
fistpl
leave
xchg
xchg
pop
sub
mov
dec
and
ret
lahf
jg
mov
and
jge
aaa
sahf
cmc
jae
pusha
dec
jge
lcall
stos
lods
iret
gs
loop
out
out
clc
bound
std
or
out
cmp
ret
push
mov
subl
dec
xchg
scas
stos
popa
shll
repz
mov
mov
cmc
mov
jae
jo
cli
arpl
addr16
jmp
mov
sub
stc
out
test
cld
dec
dec
idivl
repz
xchg
enter
into
lods
scas
and
xchg
xchg
dec
lds
push
adc
pop
leave
pusha
rcll
int
je
sub
fidivl
orl
and
dec
dec
or
popa
mov
pop
in
insb
cld
cmpsl
ficoml
outsb
int
popf
lea
into
and
negb
inc
push
dec
in
mov
insb
sub
pushf
xor
decl
xor
jmp
mov
fcmove
push
push
adc
std
pop
xchg
xchg
dec
inc
pop
cmp
push
jb
jo
daa
fs
into
test
jmp
ss
mov
bound
lea
scas
in
lcall
cmp
in
js
and
cli
loope
out
pop
test
sbb
pushf
xor
inc
dec
jecxz
popa
add
and
iret
loop
dec
sbb
jp
push
push
xlat
cwtl
addr16
inc
aas
sub
mov
imul
daa
mov
mov
lods
jbe
push
dec
push
jmp
push
inc
icebp
jge
push
into
out
add
test
push
mov
mov
bound
mov
and
jb
iret
xchg
push
add
loopne
sbb
stos
cmpsb
pop
clc
inc
ja
pusha
mov
addr16
test
daa
shrl
loop
mov
jb
nop
nop
pop
andl
and
mov
sti
mov
push
add
sub
jle
es
lock
xchg
pop
mov
sub
xor
sub
push
mov
ljmp
sbb
les
cltd
mov
test
adc
cmp
out
bound
ljmp
sub
cmp
add
arpl
dec
loope
nop
jmp
jmp
das
pop
xor
jp
push
adc
sbb
jecxz
cmp
fisttps
pusha
jl
sub
mov
inc
cmpsb
imul
sbb
xchg
aam
cmpsb
dec
lret
mov
or
cltd
bound
out
add
push
and
pop
sbb
mov
lcall
in
pop
mov
cmp
sub
add
xchg
sub
iret
in
or
fdivrl
js
adc
push
jge
sub
pop
push
imul
sbb
inc
cmp
rcrl
jmp
xor
imul
pop
adc
dec
jge
mov
popa
cmpsl
mov
dec
insb
lock
cli
shr
mov
into
xor
in
push
adc
push
sub
std
adc
lock
jno
cmp
les
sbbb
sbb
lods
mov
lret
mov
repnz
rclb
mov
mov
sub
cmp
mov
movsl
sbb
push
stos
push
inc
xchg
jl
sbb
pop
std
outsl
jns
jg
dec
cltd
pop
or
aas
ret
inc
divb
sub
pop
hlt
push
add
scas
scas
cmp
mov
sbb
inc
aaa
sbb
mov
dec
int3
andb
dec
xor
adc
mov
jne
fcmove
jne
mov
dec
test
fsubl
mov
movsl
jne
cs
and
fsubs
dec
and
das
mov
das
sti
mov
lods
mov
daa
and
sub
adc
and
shrb
add
push
cltd
fucomi
int3
dec
xchg
sbb
mov
mov
mov
test
or
fldl
lret
mov
lahf
pop
jae
mov
mov
dec
pop
xlat
adc
std
mov
mov
aaa
stos
mov
or
sbb
sub
in
shrl
into
push
dec
push
outsl
in
mov
ljmp
xor
stc
popaw
mov
in
mov
jne
push
jle
bound
sbb
cmp
fsubrp
push
insb
loop
iret
xor
ja
mov
jp
cmpsl
js
sbb
repnz
mov
sub
int
cmp
movsb
iret
out
cmp
iret
mov
mov
imul
or
xchg
cli
cli
jmp
mov
xor
or
in
stos
push
sbb
xchg
pusha
lock
mov
lods
mov
push
ljmp
scas
xor
loopne
sub
mov
push
dec
cmc
fs
push
xor
frstor
xor
cmp
push
push
roll
mov
jecxz
jno
dec
repnz
cmp
jle
cld
inc
addr16
cld
setle
push
xorb
movsb
pushf
xchg
iret
jne
rcl
in
movsb
mov
rorb
lret
nop
les
mov
pusha
push
cmp
movsl
aaa
add
call
popf
adcl
jg
jmp
dec
pop
fimuls
popa
mov
in
out
movsl
fwait
xor
fwait
jnp
pop
pop
cmc
in
cmpl
mov
sahf
sarl
xlat
jmp
nop
enter
fnstcw
and
mov
icebp
pop
lahf
cmpsl
insl
jns
xor
mov
in
pushf
adc
mov
push
cmp
dec
push
xchg
mov
pop
clc
push
and
or
xchg
test
arpl
hlt
pop
xchg
lret
adcb
dec
cmc
mov
loopnew
and
add
repz
test
test
push
push
ret
lods
pop
int3
xor
sub
stc
cmpsb
mov
mov
push
fadds
cmp
mov
ficomps
out
adc
out
test
xchg
add
std
push
or
js
fsub
outsb
cmp
push
stc
or
out
pop
pop
push
mov
shl
add
pop
push
pop
jae
cs
mov
jg
lahf
mov
xlat
loopne
imul
sbb
push
pusha
repz
jp
repz
stos
int3
insl
loope
scas
rclb
jl
insb
pushf
or
insb
pop
or
jne
insb
mov
lahf
lock
cmp
mov
mov
in
mov
insb
add
jb
in
outsl
in
mov
inc
fcomps
mov
jae
movsb
fidivrs
rolb
jmp
adc
pop
andl
xchg
mov
ljmp
movsl
aaa
push
or
mov
insl
push
clc
scas
pop
sahf
das
adc
and
push
lock
and
mov
mov
gs
lods
sbb
or
aas
fs
mov
cmpsl
gs
nop
out
jg
mov
adc
cld
pop
sbb
in
dec
js
or
insb
or
push
outsl
adc
jnp
dec
mov
mov
xor
aaa
das
cltd
sub
in
sbb
adc
mov
pop
sarl
sbb
mov
fiaddl
fwait
sbb
pop
das
sbb
pusha
subl
jnp
jbe
jle
adc
in
lea
cmp
mov
test
lods
pop
xchg
add
outsb
sub
or
add
add
pop
fwait
movsb
pop
and
adc
pop
imul
and
scas
mov
cs
outsb
push
mov
xchg
cmp
lock
lahf
adc
xor
mov
clc
pushf
enter
mov
jmp
push
lock
inc
pop
shrl
loopne
daa
arpl
lret
outsl
fmuls
inc
popf
jnp
aad
push
inc
sbb
mov
jbe
mov
jae
pop
roll
push
and
push
xchg
pop
out
nop
mov
lea
das
or
xor
sti
sub
ss
mull
int
daa
lret
decl
jae
adc
dec
mov
jae
xchg
hlt
pop
or
cmp
jae
repz
rcrl
lock
inc
scas
mov
aam
dec
in
mov
pop
shll
imul
pop
mov
data16
stc
mov
repz
hlt
mov
jg
dec
testb
mov
mov
aam
lret
fnsave
or
lds
mov
sub
flds
les
repnz
push
test
test
fcmovnbe
out
cli
and
out
pop
jecxz
scas
sbb
cmp
popa
sbb
and
out
adc
jbe
xlat
call
mov
pop
sbb
data16
popa
push
in
adc
enter
fistpll
roll
xchg
fidivl
push
push
cmp
mov
shl
cmp
xlat
shll
mov
and
pop
stc
pop
jo
jae
out
sbb
lds
lods
add
or
mov
loopne
mov
jnp
xchg
ja
mov
lds
push
fstl
rorl
push
and
nop
push
notl
aad
sbb
sti
push
sub
loop
and
cmpsl
and
mov
iret
fwait
xchg
sub
add
push
xchg
adcl
push
push
pop
add
outsb
ja
bound
inc
call
mov
rcpps
fwait
pop
fmull
in
push
das
jl
jp
push
std
insb
hlt
ret
adc
icebp
popf
je
mov
stos
mulb
dec
adcb
fcmovnbe
sahf
sub
call
lock
push
push
sub
add
in
push
push
pop
mov
jl
sbb
ljmp
stos
nop
fcmovnu
out
stc
data16
outsb
nop
lret
int
mov
jne
rorl
xor
xchg
adc
addr16
or
es
adc
rclb
shrl
iret
cmpsl
cmp
xchg
xlat
add
cmp
mov
add
fwait
inc
adc
dec
or
rolb
test
cli
test
jno
std
adc
or
int
lcall
adc
cmp
test
push
jbe
lea
adc
adc
xor
in
jmp
ficompl
mov
xor
adcb
test
icebp
xchg
inc
outsl
jb
repz
roll
sti
aas
jecxz
and
lret
dec
pusha
daa
push
stos
xchg
xchg
mov
shll
adc
sub
pop
sbb
shrb
mov
mov
dec
pcmpgtb
call
mov
and
mov
cmpsl
xchg
and
inc
mov
or
mov
pop
dec
push
cmp
cli
ret
xchg
jbe
gs
test
xor
fidivs
jo
stos
mov
jb
add
dec
fwait
push
add
cld
xchg
cld
xor
and
scas
jb
push
scas
rclb
cmpsb
push
cmpsl
popa
xor
xor
insl
and
aaa
scas
xchg
pop
pop
insl
cmp
lahf
mov
push
pop
sbb
int3
scas
xor
and
mov
shlb
test
int3
xor
push
movsb
divl
xor
mov
push
test
repz
bnd
jg
sti
ret
aas
int
jo
das
mov
aas
jnp
pop
in
test
or
lea
cwtl
mov
sti
xchg
add
pop
mov
xor
out
push
adc
xabort
mov
sub
mov
sub
dec
cmpsl
stc
andl
jno
aaa
xchg
aad
mov
dec
nop
adc
inc
dec
jbe
repz
loope
jne
jbe
imul
inc
lea
or
rcrl
xor
test
lcall
out
rcrb
aas
xlat
or
les
mov
test
xchg
outsl
pop
mov
push
mov
add
inc
imul
dec
mov
push
add
movsb
xchg
imul
lahf
mov
ret
mov
xor
inc
pop
test
std
hlt
mov
adc
addb
int3
les
mov
jae
imul
xchg
enter
jns
addl
cmp
xlat
and
sbb
mov
jmp
jns
aas
pop
insb
jg
lret
in
jbe
mov
mov
loope
inc
jmp
in
sbb
cltd
repnz
in
mov
or
push
push
and
notl
jo
pop
lods
outsb
sub
sbb
popf
sub
pop
jb
das
idivb
sbb
jmp
bound
shll
xchg
or
push
iret
sbb
xchg
adc
aam
lcall
and
cs
xor
cmp
test
push
mov
mov
xlat
push
xor
outsl
loope
out
pop
xchg
mov
inc
cld
aad
and
xchg
mov
sub
loopne
lock
lea
jo
nop
rol
adc
lret
aam
sbb
das
insb
jbe
mov
mov
les
or
dec
loopne
fdivrl
dec
cli
cmp
ljmp
je
rolb
cmp
push
ret
xor
int3
ss
add
rep
inc
cmp
xor
sarb
imul
jae
inc
xchg
movsl
aas
mov
and
adcb
fldenv
inc
xchg
stos
xchg
fldcw
add
je
fwait
sahf
sarl
popa
repz
jo
stos
jno
insl
ret
push
or
sub
push
jl
push
roll
enter
pushf
jo
stc
pop
add
ljmp
and
jbe
sub
and
adc
dec
add
xlat
inc
fcomip
testl
sub
add
loopne
push
jns
adc
jge
lods
out
adc
mov
dec
ja
xor
jno
pop
je
jle
icebp
sbb
movsl
lock
lret
aam
je
fwait
loop
into
or
pop
insb
shr
mov
mov
push
imul
or
ljmp
mov
pop
dec
pop
lds
sbb
xchg
inc
mov
imul
mov
push
push
jmp
push
dec
je
inc
fwait
test
iret
inc
ret
stos
scas
gs
arpl
int
sub
movsb
mov
nop
test
adc
fidivrl
dec
xor
into
scas
out
std
loop
or
filds
push
add
fistps
repnz
and
jge
js
data16
mov
inc
es
in
adc
fdivl
pop
scas
sbb
sbb
mov
pop
imul
es
inc
push
push
int
stc
enter
mov
push
sbb
lret
mov
jmp
int3
dec
jecxz
arpl
xchg
add
mov
pusha
es
dec
mov
push
mov
and
push
stos
mov
ja
dec
lret
into
cld
pop
je
mov
xor
jmp
xor
jbe
mov
or
bound
lock
pop
adc
imul
pop
dec
push
cmp
sbb
sub
pop
ja
jnp
sbb
leave
mov
pop
inc
pop
imul
jno
dec
and
sub
leave
inc
lret
push
int3
jecxz
xlat
out
into
ret
js
add
mov
xchg
jp
aaa
out
insl
jnp
imull
inc
and
lods
ljmp
mov
arpl
adc
test
je
fidivrs
push
xor
and
hlt
arpl
pop
test
sub
aaa
and
rcrb
xchg
pop
xor
mulb
jmp
std
push
arpl
mov
sbb
push
jnp
cwtl
cmpsb
cmp
mov
out
dec
popa
icebp
dec
enter
lods
jecxz
fnstcw
and
jg
repz
ja
je
sahf
push
cmp
xor
movsl
in
lock
adc
push
push
popa
xchg
mov
sti
cltd
fildl
jo
push
pop
movsl
lds
shrb
sbbb
inc
jno
lock
and
mov
cmp
mov
shlb
call
push
int3
sub
add
movl
sbb
pop
xchg
movsb
test
pop
jp
xchg
add
mov
subb
ja
mov
loopne
xchg
jge
mov
sahf
pop
adc
data16
inc
bound
mov
ret
seta
push
xchg
sbb
xchg
dec
out
jnp
dec
loopne
lods
mov
lcall
leave
repnz
dec
adc
inc
dec
jae
xchg
mov
pop
mov
rcrb
cltd
cs
push
mov
sub
adcl
in
outsl
imul
outsb
shr
cli
xor
out
daa
push
fiadds
jl
fldenv
jnp
lcall
and
movsl
addr16
jecxz
add
push
jno
test
dec
xchg
scas
hlt
xor
adc
pop
mov
mov
sub
xor
jg
cmp
call
out
notl
pop
jle
fwait
mov
leave
cld
stos
loope
jo
mov
push
jnp
xor
jl
int3
xor
mov
sub
or
cmpl
mulb
cli
jge
push
mov
jge
mov
mov
inc
test
mov
vxorps
inc
xchg
inc
je
stc
cmc
test
sbb
dec
xchg
xor
pop
push
cwtl
cs
test
out
or
sbb
xchg
hlt
ficomps
xchg
push
popf
xchg
or
dec
xor
push
in
add
mov
push
push
ss
cmp
adc
fwait
cmc
int3
sar
add
sbb
sbb
lret
add
loope
add
mov
aam
lahf
lds
sbb
shll
dec
lahf
mov
stc
jo
cmpsl
int3
sbb
ss
cmp
xchg
cmp
pop
inc
hlt
jo
push
aas
push
sbb
adc
in
dec
or
jmp
arpl
int
adc
jecxz
mov
sahf
dec
mov
stos
add
jne
ss
sub
gs
adc
ljmp
push
add
push
push
test
push
fdivrs
lock
pop
adc
adc
movsl
int
jp
add
aam
jmp
add
jg
xchg
adc
fidivrl
mov
fiaddl
loop
mov
in
call
fwait
add
ret
and
jbe
mov
and
or
lahf
push
out
xor
rorl
and
lahf
je
aad
je
mov
lods
das
inc
cmp
mov
shrb
loope
cltd
ret
out
xlat
add
inc
sbbb
test
pushf
xor
xlat
dec
jno
pusha
stos
dec
cs
aaa
sbb
cmp
fisttpl
adc
cwtl
mov
stc
mov
jge
bound
adc
js
rol
jno
mov
jg
fs
sub
cwtl
aad
xchg
push
mov
pop
sahf
sub
testb
jg
push
dec
xchg
adc
into
out
mov
cwtl
or
inc
fimull
sbb
mov
iret
cwtl
xor
pop
leave
addr16
jg
jle
push
xor
sub
cmpsl
scas
xchg
xchg
aas
cltd
dec
arpl
es
inc
ret
movsl
and
jo
mov
cmp
jecxz
lahf
scas
cmpb
push
jecxz
adc
mov
or
ja
addr16
push
aaa
or
cld
or
inc
or
adc
lea
imul
out
pusha
pop
js
and
add
mov
sahf
test
and
lods
sub
lods
mov
stc
jb
or
jle
add
iret
sbb
and
dec
gs
fs
stos
jne
sarl
movsl
je
xor
mov
or
mov
push
sub
movsl
dec
cli
add
dec
sub
mov
cmp
andl
ds
jg
xrelease
cmp
pop
push
xchg
std
sbb
mov
add
sub
dec
push
popf
stc
aaa
add
aam
imull
xor
cmp
push
sub
push
inc
sbb
pop
rcl
inc
fnstcw
push
jbe
xchg
cmp
jo
xor
jne
cmp
lods
xor
incl
stos
dec
mov
jg
lock
cmpsl
jne
fidivl
fldcw
xchg
gs
jae
dec
add
jmp
jecxz
or
iret
mov
sahf
xchg
inc
add
jb
ss
dec
stos
mov
loope
mov
ljmp
das
je
popf
jne
cmpsb
cmpsl
lods
cmp
push
jge
push
cwtl
addr16
sub
loope
and
pushl
or
fsubr
rcrl
push
jp
fdivrl
jl
pop
pop
rcll
mov
or
outsl
xor
sub
cld
imul
imul
xlat
call
mov
push
in
test
dec
xchg
or
rcrl
ret
bound
addr16
mov
jns
mov
ljmp
movhps
or
outsb
das
insb
aas
sbb
jb
pusha
ret
lret
adc
cmp
push
add
or
mov
in
xor
data16
aam
fs
and
and
cli
cmpsb
leave
cmpsb
aaa
push
lret
scas
sarb
cmp
cmp
xchg
push
xchg
sbbl
jo
nop
pop
xor
out
pushf
ss
inc
cwtl
push
add
stc
mov
mov
insb
fnsave
fmul
outsl
jno
cmc
repz
xchg
inc
les
mov
push
arpl
pop
fmuls
dec
scas
mov
mov
iret
data16
jnp
lcall
into
inc
sub
xchg
imul
imulb
lock
out
push
mov
je
and
test
shll
scas
jmp
ja
pop
fnstenv
je
push
xchg
shl
dec
mov
mov
jbe
lret
xor
jo
popf
ljmp
fnsave
push
daa
pop
inc
es
push
inc
push
movsb
push
out
adc
mov
inc
or
mov
inc
loop
pop
inc
add
lret
out
mov
cmpsb
pop
dec
je
push
arpl
cmp
test
mov
xchg
adc
sbb
mov
loop
sub
and
or
sbb
cmpb
loope
mov
test
pop
xor
repz
cwtl
xchg
and
mov
mov
sbb
sbb
into
mov
jle
mov
or
xor
mov
js
cmpsl
sbb
and
push
fs
cmpsl
scas
fwait
cs
jno
adc
lcall
cld
mov
xor
idivl
xor
daa
sahf
or
and
scas
add
daa
mov
inc
shlb
mov
out
jae
outsb
or
dec
and
fadd
shl
lods
push
dec
sub
in
lret
inc
or
lret
fsts
pop
jge
inc
xor
xor
fisttpll
sbb
jb
int
js
movsl
mov
or
add
inc
push
lahf
and
js
sbb
or
mov
mov
cs
mov
imul
and
stc
and
jo
ret
cs
cs
icebp
adc
cmpsb
or
mov
mov
aad
call
pop
push
sbb
inc
cli
aam
add
aad
jl
mov
fdivl
roll
cmp
xchg
sti
ret
adc
les
mov
adc
lret
cmp
sub
pop
push
push
test
mov
push
rorl
dec
mov
pop
xchg
dec
cmp
and
inc
push
cmp
cs
push
ror
popa
shlb
aaa
jns
mov
out
mov
xchg
push
scas
xchg
fadds
xchg
rorb
sbb
in
mov
sbb
in
std
shl
mov
push
movsb
pop
xchg
pop
mov
add
xor
jb
mov
inc
inc
addl
mov
stos
fisubrs
mov
pop
rcrb
sbb
mov
push
fstpt
jbe
pop
add
stos
mov
mov
jne
sub
lahf
mov
mov
inc
push
add
cltd
adc
jg
push
out
cmp
mov
mov
filds
xchg
pop
mov
xchg
cmp
mov
repz
nop
cmp
rcr
cmpl
mov
pop
pushf
outsb
nop
sbb
xchg
stos
fsubrs
popa
movsb
adc
scas
pop
rcll
inc
push
imul
sub
mov
adc
add
int
or
inc
loope
adc
sbb
addr16
dec
lret
inc
sbb
outsl
mov
mov
call
jl
out
dec
in
sbb
mov
mov
test
mov
cwtl
out
gs
imul
mov
shll
add
xlat
cmc
lea
and
push
push
dec
psubusb
stos
mov
jge
test
das
xor
xchg
je
scas
into
lret
ljmp
sub
push
int
sbb
pop
adc
insl
sub
jno
js
jmp
add
imul
or
and
jecxz
xchg
inc
cmp
shrb
xor
imul
cmp
ficompl
repz
jecxz
cltd
jbe
scas
mov
push
int3
jnp
imul
popa
lea
out
fiaddl
cwtl
int
xchg
mov
adcb
ror
and
test
xor
or
and
insl
fmuls
cmpsb
pusha
or
mov
imul
mov
lods
rcll
mov
int
push
stc
lds
fimull
andl
test
inc
inc
pop
pusha
mov
mov
xor
roll
sarl
pop
je
and
sahf
and
lods
negl
mov
jbe
iret
insb
fisubs
loop
mov
mov
orl
pop
push
xor
ret
aam
add
cmc
jne
xor
mov
lcall
fidivl
out
pop
lahf
pop
or
mov
loop
aas
cmp
repz
test
xorb
pop
push
mov
pop
int3
stos
sarb
arpl
outsb
inc
jle
mov
mov
push
lret
add
push
mov
test
xor
bound
sbb
add
outsl
lods
pop
inc
jmp
adc
in
js
fisubs
aas
outsl
pop
es
outsb
xor
out
repz
pop
sbb
pop
iret
outsb
jne
push
xchg
ja
mov
jo
shll
adc
jmp
daa
and
jle
cwtl
pop
sbb
pop
shrl
inc
push
mov
repnz
aas
mov
rorb
push
in
fcompl
testl
push
dec
cs
jo
xchg
popa
xchg
pusha
cld
inc
cltd
push
mov
sti
push
mov
cltd
sti
js
jmp
nop
clc
fs
outsb
into
int
pop
dec
out
aas
test
rcrl
mov
adc
inc
test
lahf
jmp
mov
sbb
push
repz
sub
cmpsb
jge
icebp
fcomi
dec
jl
aaa
call
ja
cmpsl
and
int3
imul
mov
cmc
imulb
scas
xchg
jae
mov
push
fnsave
or
add
mov
shrb
pop
jg
mov
xor
cmp
shrl
icebp
or
mov
jb
xor
mov
rcll
repz
repnz
sbb
sbb
out
jne
pop
fwait
xchg
lcall
es
inc
sbb
jmp
cmp
sbb
mov
repnz
xchg
fmull
movsb
mov
or
inc
jge
dec
or
pusha
enter
inc
ret
cs
add
pop
lods
int
lods
push
xchg
insl
pusha
leave
push
adc
lods
xor
push
ret
or
pop
pop
and
and
xchg
es
sbb
push
icebp
test
xor
push
push
mov
push
sub
dec
mov
in
gs
xchg
inc
mov
mull
xor
xchg
inc
std
stos
or
cmp
jmp
add
pop
outsb
int3
cmp
add
fdivrs
sahf
lods
sub
pop
sbb
gs
xchg
dec
dec
lahf
or
test
mov
out
xor
out
xchg
pop
cmpsb
pop
mov
les
cmc
aaa
cld
add
xchg
pusha
fdivs
lcall
and
je
jge
loope
mov
jl
sub
cmp
clc
or
stos
jbe
int3
out
sub
roll
add
mov
insb
outsl
shrl
jb
sarl
mov
and
mov
mov
jns
cmp
es
out
shlb
shll
dec
dec
dec
jg
jl
add
mov
sbb
out
icebp
mov
adc
test
cmp
gs
xchg
jbe
inc
aam
adc
into
stos
or
fistpll
scas
cwtl
call
cmp
sub
fisubrs
pushf
xchg
mov
movsb
or
in
fistpl
add
sbb
mov
lea
xor
lcall
dec
out
outsb
jae
adc
aam
test
lock
pop
mov
popa
add
mov
jl
mov
aam
add
mov
roll
out
fistl
cmpl
popf
inc
outsl
sarb
mov
push
rolb
popf
cmpsl
and
clc
leave
sub
dec
or
pusha
xchg
dec
icebp
test
push
test
jp
xchg
mov
cmpsl
pop
mov
int
mov
and
pop
xchg
mov
loope
dec
add
loope
repnz
pop
dec
sbb
pop
adc
loop
subl
jnp
int3
ret
or
stos
enter
cli
jle
adc
mov
les
sarl
daa
mov
mov
pop
mov
inc
sub
fsubrs
fs
fadds
pop
stos
movsb
inc
notb
inc
dec
mov
dec
inc
or
pop
imulb
test
pop
stos
dec
fidivrl
fsubrl
test
popf
cmp
scas
into
jbe
loop
popf
mov
sub
pushaw
adc
pop
pop
popf
dec
mov
push
je
mov
std
mov
xor
test
mov
cli
or
xchg
fcomip
leave
mov
inc
mov
stc
inc
jb
jno
mov
in
mov
imul
jp
sbb
sbb
add
jecxz
leave
lea
add
ljmp
jbe
add
pop
mov
rcrb
xlat
xor
cmpsb
scas
movsb
cli
jle
decb
mov
push
mov
push
sbb
push
sub
pop
ljmp
mov
nop
mov
pop
sbb
mov
sub
sub
and
pop
stos
sub
aas
sub
fnsave
repz
xchg
dec
movsb
outsl
xchg
ja
push
jo
mov
aas
pop
aas
add
cwtl
xor
sbb
test
jns
pop
cmp
pop
jae
out
clc
stc
jmp
fsubrs
inc
inc
mov
das
xchg
add
xor
push
push
scas
xor
scas
mov
push
sbb
xchg
cli
hlt
data16
iret
sub
testb
push
arpl
sbb
pop
std
add
leave
clc
fnstenv
ret
add
pop
mov
ja
jb
xchg
jbe
sub
adc
dec
pop
insb
mov
out
dec
adc
lcall
test
sbb
jbe
aaa
mov
add
pop
aas
std
addr16
repnz
outsb
xor
cmp
cmp
jns
mov
pop
pop
scas
repz
dec
in
jge
rolb
jo
and
cmp
js
mov
lret
add
push
or
jbe
push
add
add
dec
sub
mov
xchg
bound
fs
ret
je,pn
and
mov
lahf
pop
add
jo
jb
aam
clc
test
fwait
jb
mov
fs
adc
xchg
and
testl
push
mov
xor
js
pop
stos
sbb
xchg
jp
inc
popf
cwtl
iret
ss
jbe
test
pop
cld
mov
mov
imul
jo
lcall
jecxz
mov
push
fld
aad
jge
sub
pop
push
les
aad
pop
scas
out
add
add
test
add
dec
jp
inc
lcall
leave
sarb
aaa
sti
sbb
cmpsl
add
cmp
inc
clc
and
push
es
cltd
pop
dec
xchg
adc
sarb
mov
inc
daa
lods
in
lock
shlb
push
mov
leave
cmpsb
pop
movsl
test
cli
push
aas
mov
outsl
ljmp
aad
mov
push
jl
dec
mov
mov
pushf
test
ret
jns
mov
mov
dec
test
sbb
add
loopne
xorb
cmp
mov
js
sbb
or
cmpsl
dec
scas
dec
loopne
rol
dec
jp
inc
pop
loope
mov
jbe
std
mov
pop
mov
fnstenv
cmp
adc
int
or
ja
mov
cmp
hlt
dec
int3
sub
inc
test
ss
stos
cli
movsl
jp
cmp
lea
int3
or
inc
add
int3
push
jne
ja
push
insl
push
lock
ret
xchg
inc
lcall
push
inc
jbe
int3
jmp
stos
out
vmwrite
add
or
xor
adcb
notb
pop
push
mov
jb
pop
inc
xorb
rcrl
adc
int3
and
xlat
sbb
add
popa
insl
in
iret
mov
fmuls
add
xlat
lods
aam
mov
pop
push
in
or
cld
xchg
pop
out
mov
dec
ja
inc
push
fnstcw
mov
out
dec
inc
dec
pop
out
test
ja
jae
out
stos
testl
mov
pop
add
fst
mov
jle
insb
mov
or
fdivrs
shll
dec
xchg
mov
fwait
push
add
ret
jg
loope
cwtl
repnz
mov
jle
or
lods
and
xor
mov
xor
sub
jecxz
movb
les
cmp
iret
in
int3
add
xchg
cmp
out
icebp
jae
push
in
lret
cmp
jg
bound
loop
mul
pop
add
subb
lret
adc
inc
sbb
or
outsb
clc
rol
into
adc
lds
mov
cmp
aaa
jle
cmp
std
jmp
push
jbe
add
imulb
mov
mov
jne
pushf
xchg
test
xchg
out
mov
push
les
adc
and
out
adc
ficoms
mov
imul
rcr
jbe
cld
add
or
aas
add
aad
and
sbb
add
mov
fisttps
cmpsl
sub
ss
aam
pop
xchg
mov
add
cwtl
dec
shll
dec
push
push
test
pop
sbb
or
mov
idivb
test
filds
push
pop
xor
decb
addb
sub
iret
stc
dec
dec
leave
add
push
ss
adc
push
jbe
cmp
mov
insb
xchg
mov
rorb
inc
addb
in
fiaddl
aad
maxps
testl
clc
inc
xlat
rolb
inc
pop
add
call
subl
mov
or
pop
push
daa
test
pop
and
jno
aad
sub
push
cli
in
and
lock
inc
int3
cwtl
sti
fprem
ljmp
xor
cmpsb
scas
jo
lret
sbbl
iret
push
mov
insl
les
add
sbb
adc
sub
pop
ret
xchg
sub
mov
fwait
scas
add
push
in
mov
jbe
test
arpl
pushf
add
lret
adc
fimull
mov
inc
mov
pop
push
mov
and
lods
mov
pop
mov
pusha
divb
test
dec
mov
in
iret
sub
aas
mov
stc
mov
andl
pop
dec
inc
mov
add
enter
jecxz
sbb
xchg
test
mov
xor
dec
rcrl
movsl
fisubl
enter
outsl
adc
daa
movsb
pop
mov
ja
cmp
mov
sub
test
pcmpeqb
sbb
or
sbb
out
int3
xor
addr16
aaa
push
ret
repnz
pop
and
sbb
jl
rcl
aad
imull
xchg
xlat
std
out
inc
movsb
fbstp
into
jns
ljmp
sbb
adc
inc
jae
decb
test
push
in
lods
andl
addl
dec
int
xchg
jp
cmp
js
popa
inc
mov
xchg
movsw
imulb
data16
jge
nop
sub
or
js
cltd
in
push
xchg
push
sub
sbb
dec
push
xchg
adc
test
mov
and
rcll
movsb
sbb
stc
es
xchg
xchg
repz
jo
stos
repnz
xchg
pusha
int
inc
popa
sti
daa
inc
adc
cmpsl
mov
test
sub
jp
xchg
push
mov
es
or
add
sub
mov
xchg
mov
mov
fwait
xor
or
pop
outsb
mov
cmp
or
cld
or
push
cli
add
rcrl
push
cmpsb
pop
lds
roll
fidivs
sub
mov
fcmovnu
sti
mov
repz
pop
mov
insl
nop
je
sub
in
mov
pop
andb
test
ficomps
ret
cwtl
fstl
jb
test
lahf
into
xor
gs
mov
sub
mov
sbb
aaa
add
xchg
sbb
push
cmp
daa
mov
lret
cwtl
sub
xchg
mov
mov
jno
fs
outsl
sahf
push
jp
call
cs
or
pop
shr
jecxz
loopne
or
outsb
pop
jl
jb
pop
scas
pop
rorb
mov
addr16
jno
fdivrl
in
ds
sub
loope
shr
pop
xchg
and
cmp
addl
xor
pusha
andb
fs
mov
and
jecxz
xchg
push
int
ja
adc
mov
mov
gs
pop
leave
lcall
xlat
shlb
repz
loopne
mov
dec
lret
pushf
pop
out
inc
mov
dec
not
fndisi(8087
jns
inc
movsl
lahf
or
inc
es
dec
arpl
xor
shll
mov
sbb
jmp
andb
mov
das
sub
push
arpl
int
xchg
repz
lods
incl
clc
cmp
push
int3
mov
mov
sbb
jnp
cmp
sbb
add
std
or
dec
rep
decb
cmp
pop
mov
push
fdiv
sbb
xchg
ja
nop
stos
mov
sti
pusha
sbb
int
leave
dec
inc
imul
xchg
aaa
inc
lret
cld
aas
jnp
pop
cmp
sub
sbb
popa
movsb
cmpsb
adc
sub
outsl
rep
int
push
js
inc
adc
mov
insb
call
rol
inc
mov
out
out
jg
lahf
sbb
or
ror
leave
xor
inc
orb
add
sub
jp
mov
or
gs
arpl
add
fs
loop
fistpll
in
xchg
xor
jg
clc
xchg
dec
adc
mov
sub
cli
sub
and
dec
push
cmpl
or
mov
scas
in
int3
or
in
sarb
inc
rcl
fsubl
ljmp
push
in
xor
mov
fcoml
out
sar
mov
and
pop
sbb
jbe
jp
mov
mov
push
cs
shrb
cmpsl
popf
popl
adc
roll
ja
test
data16
mov
adc
mulb
stc
mov
add
ja
cmc
or
loop
dec
ret
sub
pop
cld
sahf
jecxz
loope
pop
mov
clc
mov
fadd
fwait
rcll
fisubrs
adc
dec
xor
sbb
xor
lds
int3
dec
jb
negl
mov
fs
std
sub
mov
imul
fstl
and
popa
out
xchg
cmp
pop
adc
dec
jmp
flds
or
fstl
sahf
out
in
shrl
jmp
xor
jmp
clc
adc
aaa
test
fisubrs
fstpl
fld
add
dec
outsl
stc
out
fisttpll
popa
xor
lods
call
or
popf
movsb
cmp
or
push
mov
pop
inc
push
inc
xchg
out
mov
push
dec
hlt
sub
xchg
or
js
loope
rclb
sub
in
sub
mov
cmp
adc
sbb
dec
pop
aaa
push
adcb
movsl
outsl
popa
lea
jp
xchg
mov
pop
lret
or
cmp
adc
sahf
jb
and
icebp
jmp
and
arpl
testb
or
das
mov
inc
je
gs
jno
sub
lods
andl
cmpsb
insb
xor
jle
hlt
rol
testl
xchg
inc
dec
sarb
out
cwtl
mov
loope
test
cmpsl
addb
repnz
pushl
push
push
aas
cmpsl
cltd
xor
popa
mov
mov
arpl
mov
xor
sub
aas
xchg
xchg
inc
mov
mull
lods
repnz
or
push
hlt
push
cmp
cmp
stc
sbb
mulb
mov
ret
roll
pusha
dec
sahf
jecxz
inc
ds
in
mov
inc
mov
inc
pop
in
mov
jmp
jl
cmpsl
xor
mov
add
push
add
outsl
add
popa
repz
orl
pop
push
xchg
int
and
stc
jnp
push
clc
cmp
fiadds
jl
cwtl
repnz
cmpsl
push
push
inc
push
sub
dec
and
sub
bound
mov
jae
loope,pn
scas
es
and
cmp
stos
jbe
incb
rcll
sbb
inc
mov
leave
addr16
mov
pop
add
les
in
inc
sbb
pop
sbb
imul
fmuls
mov
pop
pop
sbb
and
insl
arpl
and
jb
loope
sarb
aas
pop
jns
add
insb
mov
insl
nop
pop
fwait
cmp
subl
cmp
cmpsb
leave
jmp
xor
lods
icebp
push
mov
mov
dec
into
dec
mov
in
aaa
cmp
maxps
cmp
cmp
cmp
mov
rcrb
pop
fmull
jbe
movsb
aas
inc
test
sbb
adc
dec
nop
and
jecxz
into
test
pushf
rol
inc
pop
xchg
cmp
mov
pop
adc
mov
lret
pop
xor
push
push
movsl
inc
pop
ss
bound
mov
add
sub
mov
xchg
loopne
xor
fwait
push
or
insb
push
fldcw
rcrb
icebp
aaa
sarl
psadbw
loope
jb
xor
hlt
outsb
testl
cmp
lods
and
ds
outsb
repnz
mov
cmp
repz
mov
insb
push
xor
dec
shlb
inc
into
jo
cltd
popf
faddp
das
and
mov
inc
xor
add
lea
pop
dec
test
lock
cmp
mov
push
and
ss
std
push
add
pusha
cmp
fwait
push
rorl
lock
mov
ret
adc
adc
cs
data16
test
leave
ljmp
fisubrs
or
dec
hlt
into
inc
dec
mov
sub
dec
pop
dec
outsb
pop
mov
mov
jne
fbld
add
xchg
pop
sbbl
bnd
xlat
mov
jmp
lcall
ds
mov
xchg
and
jp
insl
and
int
sub
and
xchg
xor
stos
clc
adc
dec
cmp
mov
or
xchg
fildl
std
test
mov
push
and
jl
xchg
or
and
and
and
pop
je
mov
fisubl
rcrb
mov
movsb
xchg
sub
outsb
jno
sbb
cwtl
adc
inc
add
push
fwait
outsb
test
jl
loop
mov
jle
or
cmp
jne
cmp
das
sub
data16
aam
add
into
pushf
pop
jae
gs
xor
loopne
pop
jno
pmaxub
aaa
in
push
mov
sub
xchg
mov
cwtl
inc
mov
lret
fs
out
pop
adc
sti
or
mov
and
fdivs
mov
sub
cmp
cmpsb
cmpsl
adc
ljmp
rol
xor
dec
push
pop
jns
mov
loope
sub
xchg
fidivrl
ror
aam
lret
repnz
push
mov
xor
mov
into
call
xchg
sbb
adc
xchg
add
inc
pop
nop
add
mov
mov
das
sub
jecxz
adc
mov
nop
or
pop
dec
dec
jbe
mov
mov
popa
sti
mov
mov
leave
xchg
pop
imul
dec
divl
fisubs
mov
clc
popf
in
add
shlb
fldt
rorb
xchg
shl
inc
push
sub
mov
mov
mov
es
adc
xchg
fisttpl
xchg
lea
add
nop
cmp
mov
scas
fidivrl
lcall
popa
out
adc
xchg
pop
push
lahf
out
push
ljmp
mov
lcall
bound
ret
push
leave
cltd
test
jecxz
lcall
and
out
fwait
and
popf
pop
pop
jns
dec
mov
jle
jl
pop
leave
cmp
fwait
mov
ret
pop
js
push
dec
ja
lds
xor
int3
nop
sub
sbb
mov
mov
add
push
push
xor
shll
sbb
mov
inc
rol
js
pushf
movsl
mov
and
mov
mov
sub
faddl
xlat
sti
xor
adc
xchg
loopne
repnz
add
mov
xchg
aad
sti
or
jg
xlat
sbbb
rcrl
push
xchg
movsb
cmpb
rcr
ss
cmp
add
push
lret
xor
bound
addr16
jp
sbb
aam
xorl
push
fwait
loop
mov
adc
clc
out
rcrl
xor
out
popf
adcl
adc
push
xchg
arpl
push
dec
add
xchg
das
and
sub
jb
movsb
sbb
or
rorb
mov
test
dec
das
movsl
cs
xor
cmpsb
jecxz
scas
or
out
push
ljmp
stos
dec
in
push
xchg
mov
and
icebp
or
jbe
ret
mov
dec
jb
adc
in
into
adc
jmp
jl
lcall
or
ljmp
pop
mov
adc
mov
sub
out
dec
push
popf
mov
movb
jb
adc
cwtl
out
shlb
lcall
inc
sbb
mov
lock
cmpsl
nop
pop
test
cmp
imulb
dec
test
and
ret
adc
daa
mov
lods
repnz
cmp
int3
push
or
pop
xchg
out
xchg
lea
jp
push
gs
cmpsl
xchg
sbb
add
int3
jle,pt
arpl
dec
popf
in
mov
jb
sbb
jbe
lods
fstpt
ret
shrl
jno
pop
in
mov
rorb
sub
pop
mov
mov
test
or
sti
out
fwait
mov
mov
cmc
sarb
sbb
cmpsb
sub
sbb
and
js
mov
insl
adc
popf
lret
enter
and
leave
data16
xlat
je
sub
jecxz
cli
inc
lcall
mov
cmp
adc
out
jmp
jno
test
jbe
pop
popa
das
adc
leave
adc
push
push
arpl
sbb
sbb
inc
jg
imul
in
and
lock
push
lahf
js
or
xchg
dec
stc
add
sbb
xchg
std
enter
jecxz
adc
mov
mov
sbb
dec
lret
js
add
push
cmpsb
popf
gs
push
hlt
sbb
mov
dec
jp
jbe
js
sbb
sti
inc
mov
out
popl
push
jne
mov
push
std
test
rcr
sbb
cmp
xchg
inc
cmc
pop
hlt
push
jg
aas
lret
pop
test
js
push
fdecstp
push
push
rcrb
cmc
dec
ret
hlt
scas
int3
cmpsl
call
and
pop
imulb
mov
rolb
iret
sub
cmp
scas
xchg
mov
push
jl
push
aad
pop
mov
sbb
daa
xor
dec
jl
jbe
add
jmp
sub
popf
jp
stos
mov
sub
xchg
mov
addr16
imul
inc
sbb
dec
je
jne
pop
nop
repnz
out
push
ss
fld
dec
cltd
sar
call
nop
andl
lret
adc
sub
sti
sbb
inc
nop
je
hlt
pop
push
mov
loope
sbb
mov
dec
clc
mov
xchg
movsb
sbb
sahf
ljmp
or
push
xor
cli
inc
insb
mov
cmp
push
push
xchg
repz
sub
lds
int3
cwtl
stos
mov
push
es
adc
movsl
cli
into
pop
adc
jmp
stos
mov
cmp
sbb
cmc
pop
mov
movsb
cli
scas
sub
scas
add
jge
mov
imul
sub
mov
mov
addr16
push
xchg
mov
ret
mov
cmp
push
mov
pop
add
adc
jo
stos
mov
flds
jb
scas
hlt
jnp
test
iret
pusha
dec
cmc
notl
sbbb
xchg
cmp
je
cltd
jmp
sub
or
repnz
leave
movl
dec
dec
jle
or
out
test
jecxz
pop
mov
shll
dec
lea
xchg
pop
cmpsb
js
pop
jl
adc
sbb
lods
sbb
fucomp
in
repnz
xor
add
insb
push
adc
inc
out
adc
mov
orb
out
cmp
push
mov
flds
or
sub
mov
push
dec
push
add
cmp
cmp
aam
int
sbb
pop
ljmp
mov
lahf
mov
insl
pop
xchg
repz
mov
xor
push
push
aaa
adc
add
cs
mov
xor
lret
test
enter
sbb
xor
add
mov
cmp
sbb
adc
es
inc
push
shll
andl
ljmp
or
jge
sbb
xor
xchg
leave
jmp
push
dec
negb
js
and
sub
fwait
cmpsl
sti
in
addl
jle
in
add
gs
aad
inc
or
jg
add
mov
lret
jmp
mov
cmp
leave
insl
push
jns
pop
and
aam
pop
sub
popa
out
push
jp
jl
sub
call
or
sub
inc
cld
or
jge
add
xor
pop
aam
or
adc
test
out
pushf
stos
scas
mov
jg
sbb
test
fsubrl
xchg
and
rorl
cmp
test
cmp
sub
push
pusha
cmc
icebp
xchg
loop
bound
popf
push
xor
xlat
les
addb
mov
inc
sub
add
lret
and
lret
inc
mov
xchg
push
xchg
aaa
push
sbb
push
testb
cli
push
mov
insl
pop
dec
mov
test
adc
pop
in
push
bound
shl
push
cmp
sub
rolb
dec
loop
sbb
mov
add
mov
pop
mov
mov
mov
xchg
mov
mov
mov
dec
into
push
xchg
andb
nop
fs
in
ds
jne
xlat
lds
pop
mov
or
jmp
pop
dec
ds
or
or
push
jge
add
add
lcall
and
jecxz
or
mov
mov
mov
jmp
lds
lret
out
int3
aam
pop
pop
mov
mov
clc
jecxz
dec
mov
mov
out
or
fisttpll
mov
imul
push
scas
jp
push
mov
mov
sbb
ja
out
fwait
push
xor
mov
andb
lods
and
bound
xor
and
pop
into
ffree
jns
sub
lods
mov
dec
push
mov
xor
jns
fcoml
rol
jle
xor
test
inc
and
popa
bound
dec
hlt
cli
cmpsb
mov
inc
hlt
das
ja
nop
sbb
into
inc
daa
call
jbe
push
xchg
adc
dec
das
js
loop
mov
les
xor
mov
add
jne
aaa
and
stos
cltd
xchg
movsb
sub
pop
inc
jle,pt
mov
xchg
addps
and
xor
or
out
mov
jne
leave
and
aam
je
dec
mov
add
clc
fisttpl
sub
lock
cmp
mov
ljmp
hlt
mov
insl
mov
shrb
fsubrs
dec
add
xor
scas
jnp
jno
stc
dec
icebp
xor
jge
pop
in
dec
xor
inc
cs
popf
xchg
dec
xor
dec
mov
jle
out
xchg
popf
inc
lods
pop
jge
aam
mov
in
mov
sbb
adc
ljmp
out
imul
push
push
test
mov
jb
cmp
xchg
jg
push
dec
cld
adc
push
daa
cmc
cld
or
cli
mov
fsts
icebp
test
stos
fs
mov
popa
outsb
sbbl
jnp
dec
push
hlt
movsl
xchg
mov
or
std
repz
cmpsl
jecxz
aaa
cmp
outsb
out
or
inc
xchg
movsb
jb
cmpsb
je
push
test
jp
mov
cmp
cltd
inc
cmc
sbb
icebp
xchg
call
mov
jne
test
and
cmp
sub
pop
sub
and
adc
jbe
in
lods
add
iret
or
mov
inc
pushf
add
adc
sub
rorl
and
sbb
pop
pusha
lcall
mov
clc
inc
inc
or
jp
or
mov
int
add
popf
aas
mov
or
scas
jb
push
mov
aaa
insl
push
fildll
insl
push
jecxz
inc
lahf
inc
pop
xchg
jp
test
shll
loop
and
xchg
stos
fcomip
jg
sti
inc
fcmovne
mov
inc
inc
push
xor
or
jbe
std
rcll
cmp
jae
xor
dec
outsb
ret
in
insl
or
or
mov
imul
loope
ljmp
cmc
clc
js
sub
lock
push
rorb
inc
dec
inc
and
jge
push
test
push
lods
jns
mov
cmpsb
out
or
adcl
mov
xchg
scas
cmp
dec
int
lret
cwtl
cmp
mov
repnz
loopne
mov
mov
sub
jle
cmpb
xchg
and
in
mov
xchg
xchg
int
repnz
push
lods
pop
jb
add
add
dec
cmp
pop
pop
insb
dec
mov
aaa
ret
xchg
in
cmp
popa
lods
call
nop
movsl
stos
mov
sbb
xor
adc
call
adc
dec
clc
or
adc
sbb
aas
and
mov
not
iret
clc
inc
mov
xchg
in
mov
sbb
in
dec
xchg
ss
xchg
sbb
repnz
frstor
and
repnz
lahf
pop
mov
call
dec
jo
adc
cmpsb
and
repnz
mov
inc
mov
fmull
cmp
and
mov
and
arpl
hlt
ficoml
push
lods
test
adc
sbb
insl
or
xor
movsl
ret
cld
adc
fs
sub
mov
leave
stos
out
jne
dec
cmp
insl
aas
aam
mov
sub
jnp
sub
jno
or
gs
sbb
sub
xchg
mov
push
xchg
mov
bound
add
enter
or
pop
les
test
mov
fucomp
cmp
push
pop
adc
sti
mov
aas
cmp
in
ret
xor
pop
cwtl
mov
addr16
or
add
dec
enter
push
data16
jno
xchg
data16
jmp
pop
adc
dec
mov
xlat
xchg
dec
jle
cmpsl
mov
dec
scas
shl
sbbb
adc
mov
jp
lds
lret
or
jmp
mov
add
and
xchg
lds
fcomi
test
add
testl
pop
pop
imul
stos
xchg
rcrl
mov
lods
fsts
sbb
dec
into
mov
gs
or
ror
jo
pop
jnp
fcoms
pusha
mov
jb
std
mov
sbb
jle
pop
jp
pop
sub
sub
mov
inc
push
jge
cmc
fwait
lea
and
push
push
mov
jne
out
clc
mov
sub
push
inc
jmp
mov
sahf
xchg
pop
addr16
dec
xor
add
push
rcrb
xor
push
and
mov
cwtl
mov
mov
jne
shl
pop
jecxz
sub
and
mov
incl
cmp
inc
jne
jp
push
mov
xor
aad
xor
inc
jnp
mov
xchg
cld
add
test
and
mov
mov
gs
out
dec
add
pushf
xchg
or
cwtl
stos
dec
in
pop
daa
sub
pop
cmpsl
adc
pop
jmp
and
cmovl
out
inc
adc
pushf
lcall
aam
push
mov
dec
hlt
inc
mov
sub
test
sbb
out
push
imul
sub
pushf
fidivl
out
ljmp
loope
push
loope
mov
jg
push
push
les
adc
add
mov
lcall
add
mov
push
xor
jmp
mov
push
jmp
add
push
mov
pop
inc
stc
enter
push
stos
js
cmp
xchg
mov
adc
xor
mov
pop
xchg
mov
aam
insl
daa
flds
inc
mov
cmp
pop
xor
mov
pop
imul
insb
shl
dec
mov
scas
out
arpl
jae
xlat
sub
test
outsl
jae
fidivs
stos
out
testb
out
fcomp
aas
scas
dec
xor
mov
or
ret
jbe
dec
lods
out
stc
pop
mov
lock
dec
jae
ljmp
inc
mov
push
daa
mov
lret
push
imul
enter
mov
push
dec
and
mov
xchg
xchg
in
ds
scas
or
pop
inc
and
adc
fcmovne
inc
popa
mov
ret
pop
dec
and
sbb
pop
fcoms
mov
out
pop
xlat
lret
ss
pop
out
mov
in
xlat
sbb
iret
inc
xchg
pop
dec
xchg
cmp
cli
xchg
pop
jo
test
ljmp
push
fcmovnb
xchg
cmp
jecxz
cmpsb
ficomps
in
mov
xchg
cmp
sbbl
pop
sub
rorl
out
sar
jge
leave
cwtl
test
in
push
in
add
je
test
test
fsts
ret
pop
sub
in
addl
out
out
add
push
pop
jo
ret
fucomip
xchg
xlat
and
xor
sub
pop
jne
lea
fldl
imul
jge
xor
je
andl
lods
mov
insb
int
pop
pop
sar
jp
sti
add
cmp
add
aam
add
gs
aad
pop
xchg
cmp
adc
clc
sti
sti
mov
ret
popf
into
sbb
dec
sbb
cmc
jle
pop
fmull
mov
dec
xchg
lea
fsubs
cmp
jne
sbbb
movl
pop
test
pop
daa
mov
push
bound
stc
in
or
xor
dec
fdivl
push
popa
and
jne
mov
stos
jg
inc
cmp
out
addr16
jmp
repnz
sub
xchg
inc
add
cmpl
cmpb
xor
xor
jl
or
jbe
stc
and
adc
andb
imul
dec
sbb
shll
imul
into
fimull
in
xor
shrl
sbb
inc
xchg
out
pop
mov
lock
xchg
pop
cwtl
cmp
scas
mov
inc
jne
test
cs
push
jl
dec
xor
andb
insb
cmp
aad
jne
jl
mov
cmpsb
xor
inc
leave
pop
xchg
rcrl
sub
or
xor
lcall
mov
popa
and
aad
sarl
nop
jl
dec
lods
mov
jge
dec
aad
icebp
push
aad
pop
push
ret
repz
inc
arpl
fs
pop
xchg
aam
popa
or
hlt
sub
fstl
mov
fists
dec
dec
movsl
sbb
cmp
xchg
incb
cmp
rcll
add
lret
sub
stos
cs
scas
jns,pt
std
insl
pop
dec
aad
xchg
outsl
outsl
jne
fidivs
gs
js
cmp
mov
xchg
jnp
push
push
iret
insl
out
cmp
icebp
push
popf
pop
std
ljmp
andb
jno
out
jbe
jo
and
mov
outsl
or
pusha
jno
jae
pop
mov
mov
fidivl
pushf
insl
stos
inc
data16
push
out
xor
sub
nop
in
push
out
test
clc
xchg
lret
ret
stos
add
sub
scas
jo
aad
push
dec
adc
xlat
cmpsl
sbb
cmp
movsl
jb
ss
stos
insl
mov
ret
push
jl
or
pop
adc
inc
dec
fsts
mov
daa
cmc
mov
int
pop
xor
push
jg
lods
fildll
imul
mov
push
int3
xor
mov
push
test
shrl
aaa
test
addr16
ljmp
cs
or
mov
inc
mov
clc
pop
jge
cwtl
jno
int3
cmp
aaa
adc
nop
xchg
or
hlt
fldcw
icebp
aaa
dec
dec
and
pop
lods
inc
sbb
test
xor
mov
jo
leave
ret
add
shrl
scas
bound
outsb
movsl
out
jae
xchg
in
shrb
or
ret
add
push
sti
xchg
add
idivb
mov
jnp
lock
out
xchg
out
push
sahf
int
push
pop
popa
push
jecxz
inc
dec
mov
jo
push
inc
cmpsl
aad
int3
cmp
and
fisubrs
lods
add
inc
cli
dec
cmp
pop
adc
jo
gs
push
pop
mov
inc
add
pop
xor
cs
fidivl
roll
xor
hlt
push
jg
push
push
mov
orb
mov
sbb
adc
dec
jl
mov
repnz
jbe
dec
push
sub
cmp
jecxz
ret
or
or
insl
gs
cltd
jge
sbb
dec
dec
mov
mov
inc
rclb
dec
mov
inc
push
and
test
mov
xor
lods
sub
es
jns
adc
pop
mov
xchg
rcr
sbb
jp
test
sub
dec
jbe
dec
lahf
sub
sti
sbb
out
clc
pop
loopne
mov
jbe
add
sbb
in
cmp
xchg
xchg
cmpsl
pop
jge
and
pop
movsb
popa
mov
pop
dec
pop
enter
or
pop
pop
in
stc
xor
or
lock
jo
sub
xchg
ror
fsubrs
sbb
cli
imul
xor
and
pop
in
stc
inc
jnp
mov
pop
or
mov
adc
cmp
xor
in
enter
scas
mov
rcrb
ret
xchg
cwtl
pop
mov
aad
mov
jg
xchg
scas
fsts
xchg
stos
adc
jmp
das
mov
inc
ss
dec
inc
add
jno
add
ds
adc
les
mov
imul
ds
or
hlt
cli
sub
jae
mov
in
popa
dec
sbb
mov
sarb
jnp
testb
and
insl
mov
add
lds
in
add
aam
sbb
mov
popa
mov
loopne
sti
movsb
mov
out
and
addr16
outsb
sbb
inc
mov
jb
lods
popf
ds
mov
cmp
sub
adc
lret
pop
out
push
jg
cld
out
in
xchg
repnz
lea
nop
lds
pop
xlat
es
and
clc
xor
xchg
lret
add
pop
inc
es
repnz
ds
dec
xchg
jl
add
aam
insb
cmp
nop
adc
clc
jp
loope
movl
dec
rolb
and
fcomps
mov
adc
lcall
in
movsb
call
sbb
jecxz
fisubl
mov
cli
popf
outsb
test
adc
jmp
and
mov
cmp
in
std
test
stos
pop
or
repnz
outsl
add
out
xchg
dec
push
pop
dec
stc
stc
stos
ficoms
cmp
push
outsb
pop
jmp
mov
in
lock
and
xor
scas
int
jno
fsubs
imulb
push
and
lock
mov
aam
into
stc
xchg
test
mov
and
sti
mov
dec
int3
xchg
sub
push
jl
sub
sub
push
sti
xchg
loope
adc
dec
outsl
ljmp
dec
js
jns
loopne
pusha
sub
pop
inc
aaa
out
cwtl
jmp
stos
shrb
push
xlat
inc
cmpsb
negb
xorl
xor
leave
decb
repnz
dec
hlt
mov
push
pop
mov
loope
ret
mov
cmp
inc
mov
js
ja
inc
cmp
cmp
adc
sub
sti
les
add
bound
cmp
adc
je
roll
enter
imull
add
dec
push
push
daa
mov
cmc
push
and
add
out
push
addr16
in
adc
mov
pop
in
sbb
jo
cmpsl
jg
xchg
test
sub
clc
xchg
in
jmp
mov
into
cld
lea
scas
mov
mov
es
mov
enter
fcmovu
adc
push
xchg
fmuls
adc
test
or
bound
jecxz
rorl
daa
cmp
test
ficompl
add
mov
int3
inc
mov
icebp
pop
shrl
sub
mov
in
les
jp
xchg
mov
push
pop
in
mov
inc
aas
lret
mov
les
int3
mov
fcomps
adc
ficoms
lret
pop
jg
adc
pop
rclb
pop
fs
xchg
fdivs
mov
jae
sbb
jo
gs
test
scas
fsts
scas
or
inc
adc
mov
add
fidivrs
mov
outsl
jnp
adc
mov
mov
ss
dec
jns
mov
adc
and
sub
push
pushf
mov
enter
push
jae
loop
addr16
mov
jns
out
out
mov
add
jecxz
ficoms
cmpsb
popa
leave
out
add
push
loop
dec
add
loop
cltd
mov
lock
imulb
jl
insb
aas
enter
sub
in
sub
outsl
lea
add
pop
jbe
jbe
in
popa
and
ss
pop
mov
popf
rolb
mov
cwtl
cmpsb
or
inc
add
daa
sbb
push
push
mov
mov
js
addl
shl
roll
pop
sub
out
add
jmp
ret
jecxz
sbb
test
out
aad
xor
in
dec
out
in
xchg
ss
call
add
and
inc
xchg
pop
pusha
pop
jp
andl
stos
jle
call
insb
push
jne
mov
adc
pop
dec
dec
les
lea
pop
or
jl
cmp
xchg
rcll
ja
push
sahf
cs
sbb
xchg
test
insl
and
fisubrl
imul
lcall
mov
insb
pop
shlb
test
sahf
and
push
mov
je
cmp
sbb
xor
imul
or
bound
cmp
popa
mov
sbb
bound
jb
movsb
out
jns
push
lds
negl
test
mov
rcll
add
and
outsl
lds
pushf
mov
loopne
stos
jmp
and
push
data16
addr16
fists
adc
sub
jns
lds
mov
inc
mov
mov
pop
enter
test
cmp
mov
mov
xchg
call
mov
fucomip
dec
scas
cs
dec
scas
pop
shr
add
sub
push
xlat
mov
std
cmp
cs
adc
xchg
jbe
inc
add
test
lret
lock
jmp
inc
jo
cmp
inc
xor
popa
sub
pop
mov
sbb
push
pop
pop
xor
rcrl
mov
ret
test
xchg
shrb
lret
and
xchg
dec
insl
lea
cmc
inc
jno
jmp
or
pop
dec
insl
out
jp
cwtl
daa
int
dec
aam
add
mov
lods
gs
iret
push
cmp
call
xchg
push
jmp
add
and
in
or
xchg
or
aad
pop
shll
pop
jmp
pop
leave
xchg
arpl
and
ror
shl
stc
mov
mov
pop
mov
or
fadds
out
scas
sarb
mov
pop
mov
pop
dec
xchg
imul
test
lahf
loopne
out
nop
jp
shl
cmpb
cmp
aam
aad
or
inc
jl
data16
fs
jnp
mov
adc
jp
inc
and
dec
mov
test
xor
scas
fimuls
cmp
popf
mov
mov
jecxz
shl
popf
xor
push
mov
push
mov
mov
adc
inc
sub
mov
jne
out
jl
sbb
jle
negb
bound
ret
cmp
pop
pop
aas
loopne
mov
mov
pop
repz
repz
and
sbb
into
or
hlt
xor
jnp
jno
mov
movsl
inc
xchg
mov
scas
cmp
pop
ret
cmc
lods
adc
fldt
mov
decl
into
ja
push
pop
ljmp
hlt
rclb
xchg
into
lret
daa
scas
cltd
jmp
push
int3
mov
sbb
pop
dec
fisttpll
push
imul
or
mov
jl
in
pop
jnp
iret
cmc
out
add
add
jge
sar
inc
xchg
mov
xchg
sbb
mov
xchg
rorl
mov
scas
int
jp
lret
imul
hlt
shl
jnp
shrl
icebp
dec
scas
inc
pop
add
push
mov
inc
cltd
stos
sub
shlb
ds
roll
in
scas
int
jo
mov
rolb
les
xchg
fsubl
mov
ljmp
popfw
dec
cmp
scas
imul
scas
repz
rcrb
leave
adc
ds
inc
mov
mov
shl
mov
jae
sub
pop
dec
jns
mov
pop
jo
out
jge
clc
mov
adc
push
adc
jmp
daa
jmp
cmp
mov
into
sub
in
and
mov
out
push
out
jno
dec
add
and
arpl
ret
dec
bnd
mov
adc
push
sti
gs
sub
add
push
xchg
xor
stc
mov
jge
sbb
pop
inc
pop
mov
xchg
mov
test
ss
push
dec
cwtl
and
aas
in
cmpsl
fldl
mov
xchg
daa
and
sbb
stc
hlt
hlt
lcall
mov
push
imul
and
sub
mov
jno
add
rorw
mov
cmp
jmp
fstl
mov
ret
pop
jg
cmp
lret
cmp
fcompl
adc
aad
mov
lret
adcl
jno
or
and
push
in
aad
xor
scas
hlt
adc
cli
inc
data16
rcrl
jo
stos
test
rolb
xor
push
xchg
fwait
or
bound
out
repnz
sbb
add
inc
xchg
cmp
mov
or
adc
or
sbb
ljmp
loope
jmp
daa
xor
xchg
div
fstpl
jne
adc
cmp
in
mov
lret
jbe
imul
push
push
push
ret
inc
movsl
jle
sbb
divb
mov
mov
mov
sbb
int3
jg
pop
add
jne
ret
inc
add
js
cld
cmp
mov
rcr
in
test
mov
and
aad
test
dec
inc
push
rclb
mov
mov
adc
jno
adc
hlt
add
push
and
cmpsl
fs
rclb
scas
adc
aam
jnp
mov
testl
cmp
xor
or
out
mov
notl
lret
fcomi
adc
and
inc
movsb
fwait
aas
cmp
movsl
sub
mov
popl
fincstp
lret
jp
and
cmc
pop
and
ds
pusha
xchg
xchg
dec
subb
mov
pop
test
mov
jl
inc
test
pop
add
std
lret
popf
mov
shrb
xor
sbb
loop
cmp
mov
loope
and
and
adc
jae
aam
add
into
push
or
test
movsl
adc
add
adc
lods
and
add
pop
pop
adc
and
push
adc
je
xchg
imull
mov
push
call
les
rcrl
pop
iret
mov
and
adc
mov
push
mov
fcompl
or
mov
sbb
aad
fs
dec
ja
outsb
xorb
jmp
mov
pop
pop
loope
das
mov
lahf
in
add
or
xor
or
popf
xchg
mov
xor
inc
and
add
mov
push
xchg
xor
enter
aaa
or
push
mov
outsb
fildll
jae
jge
arpl
xchg
lahf
mov
adc
pop
inc
popf
sub
std
lahf
jnp
xchg
add
and
jge
int3
push
fcomps
es
ret
dec
repz
adc
sbb
mov
jne
sbb
cmp
push
mov
test
fcompl
sahf
repnz
cmc
lods
arpl
pop
mov
mov
or
daa
icebp
push
and
stos
push
add
das
sbb
insb
xchg
rcrb
mov
sub
cmc
pop
idiv
je
adc
aas
dec
push
aas
aaa
loope
adc
test
clc
daa
jno
jmp
xchg
mov
fldl
add
or
add
mov
js
sub
adc
fstps
stc
sbb
adc
xchg
inc
or
or
or
cltd
push
push
mov
jae
std
adcl
testl
imul
cs
stc
push
into
fmuls
xor
jo
xchg
dec
in
jp
jns
lods
jae
mov
xor
mov
je
jne
push
out
or
mov
in
mov
loope
jmp
stos
push
out
sub
xlat
mov
jmp
arpl
mov
dec
pop
lcall
cltd
or
and
nop
cmp
push
mov
pop
xlat
lods
rorl
jmp
sbb
pop
aas
aaa
lods
sarl
adc
mov
test
lahf
xchg
iret
dec
jnp
pop
lret
jmp
out
ret
xchg
adc
outsl
testl
push
outsl
shlb
sbb
repz
lock
data16
sarl
stos
jo
cmp
cmp
push
out
pop
and
pop
pop
fdivrl
cltd
sbb
repz
cmc
fisubrs
ljmp
stos
aad
or
rclb
jae
push
fidivrs
mov
inc
pop
push
and
jbe
lods
leave
loop
imul
lret
sub
stos
adc
sub
xchg
dec
inc
or
andb
sarb
xchg
xor
test
jg
rcll
sbb
lods
pop
lds
frstor
and
decb
mov
inc
and
push
dec
add
sbb
dec
cltd
stc
push
push
adc
jbe
inc
jo
push
dec
jnp
jbe
loop
in
movsb
mov
xor
dec
js
sub
xor
imul
lahf
cmc
mov
lret
adc
pop
out
push
or
out
xor
outsb
addr16
adc
ret
scas
arpl
mov
jno
inc
cmpsb
aad
pop
ret
int3
cwtl
int
ja
push
inc
test
lds
dec
shrl
aas
sub
mov
pop
ret
push
jno
fmuls
or
inc
imul
lods
in
mov
xchg
cmp
int3
dec
push
and
insb
loope
dec
stos
sbb
bt
ror
popa
jle
jnp
mov
sahf
pushf
test
and
dec
sub
lahf
insb
ret
cli
outsb
inc
lea
or
pop
mov
inc
inc
pusha
mov
push
xchg
sub
mov
adc
cli
cmc
aaa
fsts
mov
xor
jg
aaa
sub
mov
sahf
stc
add
adc
pop
out
push
shlb
or
bound
repz
fadds
jecxz
xchg
sbb
stc
rcrb
or
sbb
xor
jbe
inc
nop
fcoml
mov
jl
stos
push
es
iret
cs
push
push
cvttps2pi
mov
sub
sbb
filds
jb
scas
or
divb
push
rclb
ret
in
aad
adc
js
push
push
ljmp
fwait
push
mov
les
enter
std
lahf
xchg
loope
or
lahf
cmp
mov
dec
xor
and
mov
out
nop
outsb
or
dec
cli
lea
xchg
and
jmp
pushf
lret
in
scas
inc
xchg
pop
lret
test
in
xchg
push
adcl
pop
add
ds
ret
pop
pusha
fwait
idiv
inc
scas
in
mov
outsl
xchg
dec
and
mov
test
fsubp
out
clc
add
das
mov
mov
mov
rolb
aaa
iret
sbb
xor
popf
movl
jnp
in
je
iret
je
movsl
jmp
stc
sbb
xchg
in
mov
mov
dec
std
cmpsb
jp
fmul
cwtl
enter
ds
cmp
data16
repz
xor
loope
inc
mov
jmp
or
aad
add
pop
in
sub
pop
dec
xchg
dec
pop
arpl
add
jmp
cmp
cmp
iret
daa
aas
les
and
sbb
aad
mov
dec
scas
insl
cmpsl
aam
pop
insl
aaa
scas
adc
xor
fcompl
mov
lock
fimuls
cli
clc
mov
inc
cmpsb
daa
pushl
test
jp
imul
movsb
inc
adc
out
mov
insb
subl
stc
fsub
pop
movsl
into
sbb
dec
and
xlat
jg
push
out
push
xor
mov
add
cmpsl
outsb
pop
shlb
cmc
aad
xor
push
int3
into
mov
push
inc
in
shll
ffree
je
das
xor
jmp
jns
pop
data16
cmp
push
pop
pop
and
xchg
negb
push
jg
xchg
pop
out
sub
cs
sub
jmp
test
daa
inc
mov
rorl
pop
les
and
js
shlb
xchg
movsb
ficoms
lret
push
loop
daa
xchg
dec
test
add
add
xor
stos
mov
xchg
add
push
dec
pop
mov
mov
scas
out
mov
sub
inc
dec
push
add
push
idivb
add
aas
shrb
stos
or
adc
in
pop
pop
imul
xor
mov
fldcw
std
adc
cmp
and
mov
add
icebp
or
movsb
orb
mov
and
adc
xchg
sarb
jb
ljmp
push
daa
rorb
xchg
fsubl
ror
adcl
add
add
pop
cmp
xchg
mov
les
cmp
test
popa
mov
in
in
or
rclb
lret
ds
and
jo
cmpl
pushf
xor
aam
dec
add
jecxz
push
and
or
xchg
inc
imull
mov
pop
inc
in
xor
add
sub
sbb
push
xor
mov
sahf
jmp
iret
rcr
or
arpl
test
jle
mov
or
test
pop
fsubr
push
cld
add
lock
jbe
mov
inc
jmp
std
mov
stos
jl
sahf
lret
or
inc
into
into
or
sti
adc
lock
jbe
push
adc
cmp
stos
aaa
mov
pusha
repnz
and
mov
and
inc
dec
ja
dec
mov
fmuls
andl
mov
add
mov
inc
or
rorb
popf
in
int
cmp
mov
pop
push
lcall
cmp
lock
mov
xor
sbb
mov
cmp
push
add
fwait
dec
mov
lret
jns
xor
mov
pop
pop
mov
lcall
shlb
adc
aad
jnp
fsubl
mov
push
out
mov
add
dec
ret
push
add
sub
hlt
jecxz
xchg
dec
xchg
hlt
mov
imul
xchg
cmp
icebp
push
rolb
push
es
stos
add
cmpsb
arpl
add
xchg
push
pop
call
sub
iret
jae,pn
icebp
jl
xlat
fldl
sbb
jne
pop
add
cld
mov
add
pop
dec
idiv
push
repnz
in
lret
js
clc
add
pushf
mov
push
popf
mov
cmpsb
enter
dec
repz
dec
push
fiaddl
stc
inc
fs
push
imul
lods
movsb
inc
lahf
fwait
push
popa
std
imul
xor
mov
and
xchg
jne
incl
cmpsl
in
movsb
ret
inc
jbe
fidivrs
enter
sti
jno
je
pop
lods
bound
mov
ja
test
out
insb
jle
xor
subl
and
lret
call
xchg
or
xor
fmull
jecxz
mov
push
ljmp
push
mov
and
add
pop
push
mov
jge
sub
pop
cmc
pop
jo
push
test
push
frstor
pushf
lcall
jp
pop
add
and
cld
inc
dec
fnstenv
lock
inc
lahf
dec
xchg
testb
je
test
xor
mov
pop
movsl
es
pop
scas
sub
iret
fwait
xchg
fs
shll
repnz
or
hlt
gs
insb
cmp
cmp
mov
cltd
dec
clc
enter
xor
out
std
mov
cmc
cmp
xchg
xor
sub
loop
nop
jnp
lcall
sti
add
adc
and
in
or
or
inc
scas
cld
mov
pop
sub
inc
out
cmc
push
push
fcmovnbe
hlt
popf
cmp
adcl
inc
fsubl
jg
dec
push
lcall
cwtl
in
icebp
mov
cmpb
les
jno
push
sub
xlat
jnp
cwtl
mov
mov
and
repnz
test
pusha
or
aaa
mov
pop
scas
out
pop
inc
xchg
das
sbb
enter
cmp
xchg
inc
cmp
ret
jns
pushf
lahf
push
mov
pop
and
shll
jecxz
xor
or
cmc
shlb
dec
and
jmp
jmp
mov
outsl
or
add
fld
sbb
bound
push
push
mov
arpl
shl
mov
xchg
jae
es
sarb
xchg
push
out
jae
sahf
and
sbb
mov
xor
jmp
jge
jecxz
xchg
test
fstps
divb
xchg
mov
shll
out
add
testb
ja
jno
adc
sahf
repnz
dec
mov
pop
adc
aaa
out
mov
sbb
dec
stc
mov
mull
lcall
cld
pushf
call
mov
cli
lock
jecxz
pop
adc
jg
jle
pop
fisttpl
lahf
push
sbb
loopne
mov
push
fistpll
inc
add
jnp
pop
mov
jp
dec
cli
cmp
fisttpll
and
inc
mov
lahf
iret
jae
scas
fcompl
sub
push
pop
inc
cld
inc
inc
lcall
into
pop
into
or
js
and
mov
mov
cmc
cltd
dec
leave
mov
das
adc
dec
mov
int
in
push
cmp
icebp
and
pop
fdivs
xchg
and
flds
mov
iret
cmp
cld
push
or
in
adc
ret
mov
outsb
inc
nop
push
shll
aas
cmpsl
cli
pop
push
fldl
test
out
jns
push
lds
fldt
add
cmp
imul
icebp
rclb
and
in
fdivl
dec
xor
add
dec
mov
mov
push
jmp
dec
xor
ljmp
in
push
sub
sub
loope
xchg
sbbl
jne
inc
xor
or
sub
mov
test
fcmovnu
data16
loop
daa
sub
xchg
cmp
shrb
sbb
xchg
stc
leave
imul
insl
sub
je
ret
push
into
inc
add
xchg
mov
pop
mov
cmp
sub
ficomps
xchg
pusha
bnd
mov
jg
fidivl
cmpsl
inc
or
sub
lret
xor
in
ret
and
lods
mov
lds
push
in
xchg
xor
cltd
into
pop
cs
and
inc
push
push
mov
adc
xchg
xchg
mov
mov
xchg
fists
stc
sbb
aad
lock
jmp
pushf
mov
leave
push
mov
xchg
arpl
pop
xor
cmpl
mov
dec
mov
popa
insl
mov
xor
sbb
jge
push
push
das
mov
dec
or
out
pop
pop
sub
push
sub
mov
jl
repz
xchg
mov
sub
fiaddl
lahf
outsb
sahf
mov
add
sub
inc
mov
shll
test
xor
mov
mov
add
shll
push
movsb
or
dec
jg
push
mov
sub
mov
pushf
mov
cmp
or
paddusb
ljmp
mov
jne
adcb
mov
mov
inc
mov
pop
movsl
loope
adc
lods
movsb
adcl
cmpb
push
daa
in
xchg
rcll
lcall
sub
xchg
adc
roll
scas
cltd
xchg
std
pop
sarl
movsl
lcall
lahf
pop
add
movsb
dec
pushf
imul
int3
insl
test
icebp
push
ljmp
das
push
push
lds
addb
bound
int
mov
xor
mov
dec
test
jne
sub
fdivp
sub
out
add
popa
jle
cltd
xor
outsl
xchg
sbb
roll
sbb
loopne
push
clc
mov
ljmp
inc
popf
jg
mov
push
add
ljmp
xor
push
dec
es
movsb
dec
lret
into
imul
cmp
mov
adc
sub
inc
push
push
test
int3
notl
jnp
sub
int3
add
mov
xor
jae
mov
das
bound
aam
int
int3
movb
out
sbb
cmpl
stc
or
fwait
test
or
inc
mov
fwait
dec
cmp
xchg
inc
shr
lcall
and
jg
sub
push
ds
xchg
jp
mov
in
add
inc
or
in
push
in
jae
pusha
shl
jge
aad
leave
aaa
xchg
sbb
into
imul
inc
mov
jbe
lret
add
xchg
out
int
mov
lock
mov
mov
mov
fwait
rcrb
lods
roll
orb
push
and
int3
enter
adc
adc
jb
push
add
pop
stos
fs
fnstenv
cmp
jns
std
inc
das
inc
mov
push
ss
shrl
mov
push
jp
imul
xchg
out
std
aad
sbb
aam
ss
inc
int
andl
je
lods
sbbb
push
dec
jl
aaa
test
sbb
fwait
and
test
shrb
dec
fdivs
sub
cmp
movsb
pusha
out
push
sbb
sbb
aas
addl
jl
pop
sbb
les
xor
xor
int
push
adc
push
call
aas
sbb
ret
sub
shl
xlat
lea
icebp
xor
enter
add
jbe
or
jp
adc
inc
pop
cmp
xor
jl
das
dec
test
and
call
inc
push
sbb
and
jmp
pop
push
or
or
xchg
cli
jg
ja
jo
les
jo
add
mov
cltd
call
mov
inc
loope
das
mov
inc
or
ss
int3
loopne
mov
out
mov
je
add
cmpsb
shrl
testb
jns
or
push
pop
psubw
jnp
mov
jle
scas
mov
dec
dec
sub
out
popa
push
mov
mov
xor
sahf
push
popa
loopne
test
lock
xor
pop
mov
adc
dec
leave
inc
add
aam
adc
pop
loop
ret
lods
ds
movsl
arpl
dec
in
cmp
jg
sar
mov
shll
movsb
adc
xchg
notb
inc
ret
test
jne
imul
dec
cwtl
daa
or
mov
xor
daa
sti
sub
cmp
pusha
arpl
xor
mov
int
fiadds
mov
bswap
mov
movb
mov
loop
adcl
nop
mov
dec
ja
setae
sbb
test
cmpsb
mov
inc
xor
loop
mov
mov
pop
or
sti
sub
cld
loop
xchg
push
pop
int
aam
mov
std
imul
xchg
add
mulb
es
sub
push
es
mov
dec
inc
lahf
and
jbe
pop
xor
dec
call
shll
xchg
and
mov
add
movsl
mov
and
call
movsl
pop
inc
push
jmp
out
mov
sbb
xor
movsl
inc
fmull
or
arpl
xchg
sbb
push
aaa
mov
xor
mov
inc
jge
mov
imul
mov
adc
fildl
je
lret
cmp
cmp
movsl
shll
add
mov
imul
in
jle
push
push
jl
imul
aam
mov
push
mov
xchg
cmpsb
dec
and
dec
add
stos
fdivrp
call
xchg
mov
jl
fisubrl
dec
cmpsb
ljmp
inc
gs
lods
outsl
imul
arpl
and
jo
ss
mov
mov
jnp
js
stos
dec
cmpsb
add
mov
jecxz
mov
mov
mov
mov
mov
mov
and
fwait
in
mov
pop
inc
js
ret
mov
loopne
push
cmp
adc
xor
shll
cmp
mov
or
xor
testl
jmp
int
outsb
popf
xchg
mov
aad
xchg
add
adc
or
xchg
movsb
in
or
cmpsl
xor
jmp
cs
mov
aas
in
push
add
or
push
sbb
repnz
or
je
adc
lods
sub
cli
lock
fsub
and
call
push
stos
or
cli
shll
push
and
in
pop
pop
xor
cli
cmc
jns
mov
addr16
cmp
fcmovb
dec
lcall
jp
aaa
xchg
imul
mov
hlt
cmp
ret
sbb
sub
mov
fucomip
outsb
cs
rclb
sti
dec
aam
leave
pop
lahf
cwtl
xchg
test
repnz
imul
icebp
and
mov
repz
jle
xor
and
test
dec
lock
jl
or
sub
and
bound
jae
sub
inc
ret
bound
mov
sub
cmp
nop
fbld
cmc
lret
inc
mov
xor
rcll
sub
or
push
bound
mov
mov
mov
in
mov
loope
mov
pop
and
pop
sbb
xor
scas
cmp
cltd
adc
outsb
dec
pop
test
pop
loopne
xchg
dec
into
stos
and
jl
mov
sub
ljmp
or
iret
pop
pop
cld
sub
aaa
loop
int
inc
lcall
jb
cwtl
xchg
mov
popf
jmp
add
mov
rol
mov
dec
sbb
add
fnsave
pop
push
mov
dec
das
inc
sub
xlat
shlb
xchg
pop
aad
mov
xchg
dec
aas
repnz
jle
xor
pusha
pmuludq
push
mov
les
test
and
mov
ljmp
dec
lahf
test
rorl
flds
sbb
sub
dec
in
imulb
inc
subl
fs
push
mov
lock
push
xchg
rcl
pushf
mov
mov
repnz
in
push
fisubrl
jle
fsubr
daa
ljmp
mov
incl
in
add
sbb
aaa
lahf
mov
mov
xor
stos
mov
jo
dec
dec
jg
shufps
jnp
fsubrs
mov
inc
pop
jecxz
das
subb
es
stos
faddl
sbb
pop
mov
movsb
pop
daa
mov
lock
sub
mov
gs
add
ret
test
inc
mov
lahf
fs
icebp
jns
in
imul
or
sti
mov
test
icebp
loop
movsl
popa
cltd
and
add
adc
cwtl
lds
popf
jo
popf
fcoml
mov
mov
xor
dec
add
sbb
dec
pop
mov
frstor
sti
aad
push
jbe
pop
xchg
cwtl
mov
inc
dec
xor
cmpsb
cmp
cmp
outsb
cld
int3
xchg
ss
in
sbb
dec
sub
jnp
and
into
dec
push
mov
out
xor
pop
dec
lahf
push
push
jne
stos
mov
repnz
xor
fstpt
fsubr
and
mov
or
aaa
mov
cmpsl
push
data16
xchg
jo
les
dec
ror
and
mov
adc
mov
or
mov
mov
sar
pop
sub
jmp
sub
and
mov
test
pop
dec
push
loop
int3
mov
mov
js
dec
jp
rclb
out
mov
dec
ret
adc
sahf
push
aaa
movsl
fdivs
lds
mov
je
jo
pop
sub
mov
pop
fst
test
or
aas
std
dec
jae
add
xchg
aam
push
push
dec
cmp
insb
out
jmp
out
mov
mov
adc
scas
mov
ret
mov
cmp
jno
cld
sbb
aam
dec
int
inc
mov
enter
adc
cltd
ljmp
sbb
out
cmp
lea
insb
dec
jecxz
int3
orb
mov
test
cmovl
in
xchg
aaa
scas
cmpsb
sub
cli
fmulp
test
cmp
jbe
data16
stc
lock
sarl
pop
int
cli
pop
scas
lods
fiaddl
mov
adc
mov
inc
bound
les
cwtl
add
ret
mov
xchg
shlb
add
jno
or
into
stos
mov
cmp
les
cmpsb
aas
movsb
push
xchg
loope
leave
scas
mov
bound
xchg
or
lods
repz
orb
imul
jl,pt
out
xchg
mov
jp
xchg
cld
xor
mov
aas
nop
scas
je
pop
out
lahf
push
xchg
jl
js
hlt
and
mov
fnsave
cltd
xlat
sub
test
outsb
xchg
or
pop
imul
ret
mov
xchg
das
cmp
int
sbb
push
mov
mov
jp
pop
adc
sbb
pop
mov
fdivrp
mov
cmp
outsb
dec
test
cltd
sub
jnp
rcrb
xor
inc
inc
je
ret
sbb
fs
mov
mov
clc
mov
mov
mov
outsb
and
adc
ss
jg
rol
icebp
jb
and
jg
jb
inc
test
mov
mov
repz
test
das
push
psrlw
sbb
mov
cmp
mov
add
fs
fistpll
sub
inc
xchg
pop
jge
push
ja
sub
jbe
adc
sub
ljmp
dec
stos
sbb
fdivs
fs
add
mov
mov
push
repz
pop
inc
push
out
movsb
xor
dec
stos
pop
mov
insl
and
les
sbb
cmpsb
lock
loope
jne
mov
bound
loop
fs
pop
and
fldcw
add
mov
lock
arpl
push
xor
add
mov
movsl
repnz
pop
popa
xchg
adc
mov
jmp
sbb
sti
dec
jb
push
sbb
insl
aad
sbb
cmpsl
into
aam
add
mov
les
movl
pop
pusha
daa
jle
je
das
xchg
push
pop
xchg
int
xchg
repz
fists
adc
xchg
mov
iret
or
pop
in
int
mov
lret
pop
mov
xchg
addb
xor
sbb
inc
test
jmp
jbe
inc
stc
jnp
cmp
xlat
adc
sub
int3
mov
loopne
out
inc
mov
mov
aas
lcall
and
ficompl
sti
pop
insb
xchg
repz
js
dec
push
loope
push
std
and
int3
inc
xor
lock
sub
sbb
leave
lock
je
jnp
inc
fidivrs
insl
inc
cmp
lods
adc
sbb
lea
shrb
mov
ret
mov
daa
mov
aad
shll
pusha
cmp
mov
xchg
xor
mov
add
in
movsl
jno
dec
inc
mov
mov
and
inc
inc
enter
dec
and
lea
ret
mov
test
jno
mov
out
les
call
and
mov
inc
in
lret
xor
aad
fcomi
pushf
outsl
jno
adc
add
cld
pop
and
add
loope
push
sbb
ret
push
push
jmp
ss
push
and
pop
xchg
out
dec
mov
insl
jge
or
imul
sbb
js
push
jmp
mov
cli
loopne
mov
and
sbb
jmp
xchg
icebp
cmp
loop
xor
fsub
mov
popa
jo
popf
fidivs
repnz
xchg
fldl
sub
push
pop
pop
jne
jp
push
stos
loopne,pn
dec
mov
out
cmp
push
xchg
movsb
inc
mov
xor
push
cmc
push
imul
pop
ds
jnp
xchg
lock
int
mov
push
mov
inc
lods
adcb
cmp
pop
sar
sbb
push
mov
insb
jo
out
push
inc
ret
mov
mov
dec
in
int
mov
fs
int3
scas
or
int
inc
sub
daa
pop
xor
scas
fwait
adc
sbb
and
push
scas
jg
mov
mov
cmp
ds
xor
std
jb
adc
outsl
les
xlat
adc
push
insl
inc
mov
sahf
incb
mov
pop
mov
stc
or
clc
into
sahf
mov
adc
xchg
clc
sbb
cmp
fiaddl
push
mov
int3
scas
add
cmp
inc
xchg
insl
xchg
cmpb
ret
or
jp
or
lds
fcomip
xchg
sub
movl
cmp
cmp
lock
jg
mov
mov
xchg
lods
stc
sub
jmp
cmp
xchg
loopne
pusha
pop
adc
cmp
shrb
dec
or
fwait
icebp
subb
fldcw
inc
pop
shll
jno
push
mov
cmpsb
hlt
sub
arpl
out
pop
ja
adc
pop
jnp
imul
jg
aas
sarl
mov
and
dec
xor
adc
mov
ficompl
scas
fisttpll
xchg
not
push
mov
lret
call
cmp
lcall
jne
lahf
or
pusha
mov
out
dec
dec
ds
fnsave
sub
fsubl
mov
mov
or
andb
push
cmp
add
lcall
cmp
cmp
gs
mov
xchg
movsl
mov
nop
jmp
xor
pop
data16
and
mov
xor
fmul
sub
xor
sub
sub
lock
jnp
cmpsb
out
ficompl
fidivrl
arpl
mov
inc
loopne
adc
cmpsb
je
jmp
xchg
mov
jmp
int3
int
data16
xchg
in
addl
push
inc
inc
nop
mov
hlt
pop
outsb
roll
mov
jl
cmpl
sub
cmc
inc
dec
xchg
scas
xchg
int
jne
in
push
decb
push
fidivrl
mov
rsm
lea
lods
fdivs
repz
mov
and
mov
movl
dec
pop
mov
and
movsb
ficompl
aas
fs
xchg
mov
lock
adcb
shrb
jne
dec
stc
adc
mov
pop
mov
daa
out
push
cmp
fsubr
mov
xor
mov
mov
mov
or
xchg
js
add
sbb
jg
lds
push
inc
add
xchg
pop
lock
add
add
outsb
int
pusha
test
cmp
ja
jns
mov
test
nop
adc
and
jge
xlat
arpl
stos
adc
lock
scas
js
pop
cwtl
imul
icebp
xor
push
cmp
cmp
aam
lea
sbb
mov
or
test
sbb
jmp
pusha
pop
das
addr16
pop
push
aas
bound
add
les
pop
and
jnp
xchg
and
mov
loop
sub
jae
int
xchg
rcr
adc
rcl
test
call
repnz
xor
lods
rclb
pop
inc
cld
jg
jle
in
mov
lret
pushf
sbb
mov
push
lods
sbb
jecxz,pn
addr16
shlb
jl
leave
cli
ljmp
xchg
outsb
xchg
inc
push
fcmovu
imul
mov
mov
popf
out
or
das
fldcw
bound
lahf
sub
jmp
xchg
jl
les
sbb
loope
sbb
leave
cmc
in
sub
out
clc
icebp
ret
pop
lods
pop
jae
mov
fstps
jo
loope
rol
mov
sub
dec
clc
xchg
jp
or
adc
movsl
jecxz
push
xchg
sub
lds
mov
in
loop
pop
adc
aas
push
dec
or
imul
or
fwait
cmp
movsb
push
mov
js
out
ja
popf
fisttps
mov
cwtl
push
add
and
inc
movsb
and
test
movsl
mov
jmp
ljmp
fmul
or
push
pop
pop
push
mov
mov
mov
repz
ficompl
fistpl
sbb
mov
in
outsl
out
jmp
push
push
sti
or
fldcw
adc
mov
push
rorb
cmc
fsts
jecxz
mov
push
pop
sub
sub
mov
int
js
xchg
dec
dec
out
test
push
sbb
bound
push
sub
pop
mov
mov
jge
cmpsl
fsubrs
pop
mov
aas
xchg
loop
loopne
jg
push
cmp
dec
jmp
xchg
in
mov
pop
dec
add
jp
pop
push
cmpl
jo
aaa
rorb
cmp
push
pop
out
mov
add
cmp
xlat
outsb
mov
cmp
pushf
shufps
xor
and
mov
xchg
sbbl
mov
into
clc
dec
scas
pop
cmp
fnstenv
dec
gs
leave
dec
add
icebp
jb
add
or
mov
in
or
xchg
adc
pop
jecxz
insl
call
rol
xor
xchg
addb
pop
push
test
cli
outsb
sub
push
jp
add
inc
adc
out
mov
add
cltd
repnz
ss
loope
jb
in
mov
shll
aaa
dec
jbe
loopne
push
inc
ret
in
mov
jg
ret
mov
adc
push
fwait
xchg
fistl
les
push
adc
ljmp
dec
imul
sbb
adc
jp
mov
aad
leave
pop
ret
adc
mov
push
jo
aam
imul
inc
jmp
call
es
mov
lods
outsb
test
roll
pop
adc
inc
jb
sub
pop
and
ja
xchg
call
inc
fidivl
repz
cli
cmovo
mov
dec
enter
cs
inc
fwait
cmp
or
pop
adc
lods
bound
xchg
test
out
sbb
xchg
shrb
iret
mov
xor
mov
out
adc
dec
push
stos
or
jbe
push
push
and
ss
fmull
dec
fldz
jge
mov
call
mov
pop
sub
cmp
scas
adc
cmc
push
dec
sbb
int
sub
dec
xor
leave
cmp
xchg
xor
inc
and
adc
xchg
movsl
fs
inc
sbb
cmp
push
cmp
in
imul
jae
sub
cli
mov
movsb
mov
aas
loope
sub
daa
xchg
imul
int
loopne
xor
lret
sbb
pop
or
out
dec
mov
ret
mov
jbe
or
mov
jmp
lds
cld
add
cmp
dec
mov
push
int
push
sub
jb
in
lock
push
add
ret
add
mov
and
or
bswap
xchg
sti
ds
scas
push
mov
cli
push
inc
movsl
or
xchg
std
rclb
xor
mov
in
inc
add
xchg
lret
jg
mov
movsb
jge
xchg
or
cld
pop
sub
repnz
xchg
dec
in
sarb
popa
mov
add
or
insb
jnp
jnp
dec
icebp
aam
jbe
dec
push
jecxz
dec
sub
mov
outsb
fcomp
stos
xchg
cmpsb
pop
push
and
cmp
divl
push
imul
mov
xor
sub
ficompl
mov
jbe
repz
mov
mov
out
inc
cwtl
aas
inc
mov
mov
and
push
push
or
add
or
or
popa
sbb
mov
out
test
jle
aas
add
cli
lret
ror
jle
int3
out
sbb
pop
rolb
sub
and
testb
daa
sub
kmovb
push
pushf
ret
xchg
rorb
jbe
dec
mov
jns
sahf
jno
pop
pop
mov
call
mov
pop
sub
insl
iret
push
sub
cmc
push
jne
sub
rorl
cmp
sub
xlat
or
into
fimuls
rorb
mov
and
lods
jge
push
push
roll
add
divl
sub
sub
cwtl
cld
sarb
dec
pop
jmp
sar
das
popf
adc
adc
and
push
push
xchg
std
movsb
mov
ds
cltd
xchg
rcrb
xchg
std
push
jmp
scas
daa
clc
aam
mov
lret
sbb
pop
jbe
in
pop
dec
testl
ret
add
cmc
mov
adc
pop
xor
cli
push
leave
fisubrl
add
in
push
pop
out
sbb
out
cmpsb
jbe
aaa
pop
loopne
cmp
or
cmpsb
add
popa
into
pushf
clc
mov
jo
aad
sbb
pxor
outsl
ds
jmp
sub
shrl
mov
out
insl
jne
out
cmp
sub
fisubrs
sub
cmp
int
xor
or
dec
lret
push
sub
out
xor
das
fcomp
or
adc
fisttpl
adc
rorl
push
mov
mov
xchg
shrl
sbb
aaa
jbe
jnp
push
out
ret
movsb
das
cmpsl
inc
mov
or
mov
lds
pop
cmp
fxch
out
test
fcmovnbe
pop
aaa
rolb
sub
addl
andl
stc
dec
push
mov
shlb
mov
jnp
jp
sub
sbb
fisubrl
dec
mov
fisttps
dec
ret
loope
test
or
insb
mov
jnp
jl
insl
lcall
sbb
or
jg
pop
pop
or
fcmovb
call
xor
popa
pusha
cmp
ds
sub
lock
inc
inc
lea
sbb
mov
lods
mov
fwait
pop
add
xchg
cmc
movsb
test
ljmp
jnp
das
inc
adc
imul
adc
pop
mov
lds
mov
loop
xchg
mov
add
les
insb
inc
arpl
xlat
inc
popl
or
xchg
hlt
cmp
inc
test
mov
jae
dec
mov
push
push
jns
das
jp
mov
fimuls
ds
out
xchg
mul
lods
pop
sbb
in
sub
mov
push
cwtl
lcall
mov
aaa
roll
stos
xor
cmp
gs
xlat
jbe
cmp
jae
mov
loop
jo
enter
dec
jle
mov
cmpsl
push
out
call
out
rcr
ss
push
arpl
and
addr16
jecxz
lea
push
out
cmpsb
test
push
push
pushf
sbb
out
inc
cmc
adc
loopne
pop
icebp
adc
aas
xor
pop
mov
in
stos
jg
jo
leave
arpl
inc
mov
cmp
cmpsb
int3
sub
xchg
inc
or
movsl
test
mov
xchg
lods
or
mov
push
push
jp
stos
inc
jb
and
sub
jne
loopne
cs
into
and
pop
adc
add
repnz
and
jge
aaa
push
ror
sbb
and
inc
mov
xchg
pop
gs
xchg
mov
stos
inc
push
jne
pop
ds
jbe
aad
outsl
sub
sub
pusha
aad
mov
sar
inc
mov
fwait
and
dec
roll
adc
std
pop
imul
push
stos
pop
movsl
fnsetpm(287
daa
jp
xor
pop
push
xor
lds
cmp
cmc
imul
xor
int3
pop
xchg
cmp
aad
lods
nop
and
dec
jge
push
rcrb
jae
mov
data16
push
shrb
inc
fcoml
sub
sti
xchg
pushf
lods
fbld
leave
pop
mov
sti
imul
mov
push
les
jnp
lock
repnz
push
les
inc
fimuls
jmp
sbb
pop
mov
push
les
in
lock
gs
rol
cmp
std
push
jns
hlt
cmp
mov
sub
rcrb
fnsave
iret
aaa
pop
daa
sub
aas
pop
jmp
pop
and
repnz
sub
fwait
test
lcall
stc
mov
stos
cmpsl
shlb
xchg
sub
mov
jg
or
dec
scas
popf
pusha
add
and
mov
mov
std
xor
shlb
imul
aas
push
mov
xlat
divb
dec
cwtl
pop
out
int
pop
xchg
pop
cmp
int3
or
shll
imul
dec
mov
cli
sbb
pushf
addr16
xchg
imul
push
push
jb
loop
dec
clc
rol
lods
xlat
xchg
pop
mov
les
fsubrp
add
loope
push
push
inc
out
or
xchg
fdivrp
cmc
pop
add
cld
scas
cwtl
push
pop
push
fcmovnu
and
pop
pop
push
stos
fsubrl
inc
inc
push
popf
shrb
mov
es
ljmp
cmp
test
and
pusha
fsubl
adc
loopnew
ljmp
nop
add
xor
or
sbb
rorb
lcall
xchg
rcl
sti
cwtl
mov
push
xor
and
lods
dec
mov
push
mov
cld
sbb
int
aaa
out
ss
adc
jmp
ds
xor
jg
pushl
sub
sahf
andb
sbb
pushf
fsubrp
or
jnp
icebp
add
cmp
mov
dec
int
adc
shl
std
lds
mov
jae
arpl
jb
imul
pop
mov
pop
sbb
aam
loopne
mov
xchg
pop
jl
pop
divb
out
shll
in
dec
pushl
movsl
jne
stos
call
jae
xchg
push
aaa
or
inc
ret
and
ficomps
insl
dec
in
enter
mov
or
sbb
lret
sti
jmp
iret
dec
cmc
int3
sbb
je
stos
into
cmpsl
daa
stos
cmp
outsb
test
mov
sahf
repz
aas
and
inc
pop
adc
les
xor
enter
pop
jp
pop
test
adc
xlat
push
mov
lahf
fcomps
sbb
clc
adc
push
jmp
add
in
in
cmp
xchg
icebp
adc
loope
loopne
cmpb
mov
adc
call
pop
pop
jnp
pop
dec
xlat
add
idivb
fists
or
mov
adcb
push
loope
sub
or
push
adc
lcall
mov
pop
inc
mov
into
dec
dec
xor
pop
adc
cmpl
pop
shl
cli
ficoml
jo
cs
aad
mov
mov
xor
adc
divl
and
jbe
jg
icebp
jecxz
adc
mov
cltd
xchg
je
test
jp
jnp
test
and
bound
mov
cmp
jp
ret
mov
mov
mov
sbb
jns
mov
fiadds
das
pop
pop
mov
dec
lods
jns
adc
fstl
jmp
xor
inc
call
std
mov
sub
loop
mov
mov
ds
jl
mov
mov
adc
xlat
or
jbe
cwtl
xchg
int3
cltd
sbb
icebp
mov
adcb
ljmp
jg
sbb
sub
out
enter
loopne
sub
clc
fnstenv
jmp
cmpsb
pop
shl
mov
adc
push
xor
jmp
push
neg
repz
push
rclb
int3
adc
xchg
nop
jb
or
mov
sbb
rcl
mov
fs
in
mov
ljmp
inc
jl
pop
lret
test
cmc
adc
mov
or
jecxz
mov
mov
ds
dec
dec
xchg
nop
movsb
xor
test
ja
mov
enter
jp
cld
loope
incl
adc
or
outsb
dec
jg
sbb
lods
cmp
stos
mov
scas
clc
or
cmp
movsb
inc
pop
adc
lcall
inc
rorb
push
sub
pop
fisubrs
test
ja
xchg
cmpsl
jecxz
lods
fstpt
lahf
iret
mov
cmc
cmp
push
movsl
sbb
add
sub
dec
mov
adc
repz
dec
repz
inc
call
imul
mov
in
into
dec
jns
push
addl
inc
cmp
add
lods
popf
xchg
ja
adcb
push
or
inc
pop
pop
cltd
clc
out
movsb
icebp
sbb
dec
and
add
jb
mov
push
jne
sub
xchg
or
mov
insl
inc
adc
leave
fwait
rcll
dec
inc
push
inc
mov
lock
lahf
dec
cmpsb
or
outsb
inc
outsl
mov
out
js
add
or
sub
mov
imul
xlat
shlb
in
in
outsb
push
and
and
scas
sbb
jbe
sub
les
cmpsb
cmpl
mov
sbb
mov
mov
push
js
in
dec
push
mov
sub
dec
inc
ss
loope
popf
cli
mov
push
xchg
xor
inc
cltd
xor
dec
cwtl
sahf
repnz
insl
scas
mov
adc
jle
aas
ret
adc
sub
mov
pop
je
jne
stos
mov
push
xchg
cmc
not
push
mov
hlt
test
mov
mov
dec
xchg
push
decb
jecxz
hlt
fcomps
shlb
or
clc
rcrb
pop
cmc
pop
mov
or
add
test
sub
push
stc
lret
and
mov
loope
popf
aaa
jp
xchg
stc
push
push
jnp
out
mov
pushf
mov
gs
push
das
adc
lods
push
and
push
enter
ffree
test
xor
xchg
test
or
jns
in
inc
add
sbb
outsl
push
mov
dec
pop
lret
jae
outsb
les
xor
xor
paddusw
scas
ljmp
ret
imul
mov
push
test
inc
ret
mov
inc
or
mov
xor
stos
pcmpgtw
xor
lods
and
ljmp
aas
cmp
xor
jecxz
or
stos
push
movsb
idivb
push
pop
fstpt
adc
ja
fistpl
into
bound
adc
xor
mov
adc
pop
aad
xchg
or
call
inc
pushf
dec
ljmp
lock
bound
inc
fisttpl
mov
mov
pop
mov
into
mov
cmp
aas
or
mov
iret
pop
ret
sub
shlb
aaa
gs
outsl
xchg
leave
xchg
sbb
mov
iret
loope
pop
mov
adc
mov
lret
mov
inc
lods
sub
mov
scas
xchg
jmp
icebp
add
lea
push
cmpsb
out
fbstp
ss
push
push
xchg
push
movsl
jb
mov
pushf
adc
shrb
les
sub
loop
insb
inc
shl
std
daa
adc
icebp
stos
fbstp
mov
cs
outsl
clc
cwtl
dec
jcxz
lods
stos
inc
xchg
loopne
mov
loopne
xor
mov
pop
lds
iret
sbb
or
jge
inc
jmp
cwtl
lods
xchg
jbe
and
pop
jle
adc
or
jge
lea
shrl
mov
cmp
sti
icebp
pop
inc
push
xchg
sbb
dec
sbb
mov
icebp
and
ja
mov
lcall
dec
mov
icebp
stc
pop
call
or
nop
call
xorb
jg
xchg
fiaddl
test
adc
jno
mov
fs
or
sub
mov
sub
sub
xor
fadd
sbb
insb
xchg
lea
dec
das
icebp
cmc
mov
bound
in
fimull
sbb
jl
je
sbb
mov
das
mov
lahf
arpl
mov
mov
sbb
xchg
add
cmp
pop
jle
test
fwait
jbe
fs
inc
and
sbb
mov
mov
jecxz
push
cmp
jb
jecxz
outsl
inc
jmp
rorb
push
mov
mov
jp
fstpl
cs
pusha
mov
xorl
bound
cmp
pusha
sbb
gs
mov
add
lret
int3
adc
leave
sbb
stos
movsb
jmp
xlat
arpl
cmp
push
jb
popa
mov
into
gs
sbb
jns
pop
outsl
test
lock
jecxz
adc
push
pushf
push
cmp
jp
cmp
xor
cli
or
scas
adc
xor
lret
jbe
sbb
jne
mov
and
dec
ss
ret
xchg
outsl
jmp
xchg
jecxz
jae
out
lret
inc
scas
add
xchg
movsl
int
loop
mov
and
or
outsb
imul
jecxz
dec
pop
jne
cmc
movsb
adc
jne
jle
and
insb
pop
cmpsl
mov
lds
js
or
cmc
mov
insl
ret
in
je
xor
dec
jbe
adc
push
pop
cmp
pop
popf
jmp
jno
aad
push
dec
cmpsb
xchg
pushl
dec
cmp
xchg
addb
lods
sbb
lods
pop
sub
lods
outsb
xlat
or
adc
daa
movsb
add
pop
or
mov
or
aad
fidivl
and
aaa
dec
pop
sbb
jnp
cmp
push
adc
js
subb
aas
sbb
adc
repz
or
push
mov
add
add
push
test
add
test
es
repnz
lods
ljmp
sub
test
jle
ss
adc
fisubrl
add
push
mov
subb
mov
or
movl
stc
dec
inc
pop
push
pop
push
or
movsl
std
daa
and
push
mov
insb
inc
dec
leave
shll
push
mov
xchg
enter
jp
mov
shrb
fcmove
enter
mov
addr16
push
in
std
inc
dec
das
in
lds
call
sbb
in
call
stos
or
pop
xlat
jne
jae
dec
insb
sbb
addr16
fnstsw
inc
xor
mov
lahf
popf
dec
mov
cmp
adc
sub
mov
scas
lahf
pushf
push
jae
dec
xchg
outsb
pop
pop
int3
adc
in
shrb
cs
sbb
lea
sarb
stc
mov
fwait
mov
push
cmp
dec
sbb
mov
sarb
mov
inc
and
or
adc
mov
and
aas
aad
add
jbe
push
rorl
xor
ror
xchg
adc
rolb
adc
stc
sub
sub
test
negb
ds
mov
sbb
push
mov
aaa
hlt
xchg
pop
mov
xchg
inc
out
xlat
icebp
into
xor
fs
and
cli
andb
pop
popa
lods
mov
lods
lods
xchg
or
xlat
dec
jbe
jns
mov
sbbl
les
xlat
and
pop
aas
push
std
frstor
mov
adc
sub
adc
ret
cmp
xchg
cwtl
jae
lcall
loope
imul
xchg
and
jle
and
push
jle
jo
sbb
or
popa
ljmp
movsb
mov
cmp
xchg
add
push
repz
bt
mov
popl
mov
jns
adc
nop
sbb
sub
and
push
cmp
fcomps
pop
stc
add
sub
movsb
insl
inc
std
adc
lret
movsb
jb
test
es
push
xor
fcoml
lahf
lods
and
jmp
pusha
lea
test
pushf
lret
xchg
shll
dec
addb
add
mov
fdivl
jo
dec
ficoms
xchg
and
add
clc
popf
clc
inc
aas
and
stc
cmp
or
out
sub
out
dec
add
fiadds
adc
xchg
cmp
movsl
pop
adc
mov
xor
jp
enter
push
inc
js
push
jmp
inc
pop
es
push
sub
mov
cli
add
dec
mov
sbb
and
loope
psllq
add
mov
mov
jp
frstpm(287
dec
xchg
xchg
movsb
ret
fisttpl
lods
sub
mull
mov
fwait
pop
xor
and
mov
bound
pop
test
xor
mov
mov
fistps
mov
arpl
mov
xchg
shrb
dec
mov
pop
insb
adc
imul
cmpsl
aad
lret
ret
or
sub
xchg
and
sub
ret
xor
xor
dec
mov
outsb
fbld
int3
cmp
fidivs
testl
cmpsl
aaa
pop
ds
cmp
dec
sub
pop
cmp
rcr
into
fadds
in
shr
aaa
sbbb
xchg
andb
add
add
clc
imul
jecxz
pop
mov
js
cmp
dec
push
pop
or
push
std
add
adc
dec
pop
inc
mov
lcall
and
push
inc
cmp
lcall
ss
icebp
xchg
mov
mov
repz
inc
and
push
notl
mov
cli
sbb
inc
clc
mov
lods
jne
pop
js
lods
loope
imul
rcr
push
push
notb
mov
mov
lods
pushf
dec
cmp
gs
add
mov
pop
cmpsb
mov
addb
and
and
cmp
cmp
hlt
clc
lds
lds
ret
push
lcall
lods
inc
pop
mov
or
popa
divl
cltd
sbb
xchg
lahf
lods
jg
inc
cs
clc
sub
xor
adc
int3
insb
push
adc
mov
cmp
sub
mov
lods
add
in
stc
jmp
inc
or
fdivl
mov
add
gs
das
jae
test
cld
insb
mov
int3
ljmp
out
ficompl
daa
gs
lds
fmuls
stos
repnz
lret
sub
inc
dec
les
add
xor
push
dec
mov
pushf
mov
xor
add
loope
je
rcll
movsb
cmpsb
bound
in
xor
push
iret
inc
jle
inc
xchg
scas
or
inc
fucomip
adc
lret
inc
jecxz
pop
or
jecxz
dec
and
mov
add
jmp
popa
and
sarl
dec
lcall
mov
sbb
push
leave
pop
xor
pop
dec
xor
insl
or
pop
xchg
xchg
add
xor
lret
ss
jmp
js
adc
and
push
sbb
test
mov
outsl
in
and
mov
mov
push
mov
xor
sbb
addr16
shrl
push
mov
xchg
pop
lahf
bound
inc
jno
dec
fxch
das
sub
inc
out
icebp
fcmovne
pop
in
fs
inc
loope
sar
jo
aam
inc
ror
fists
repnz
enter
jnp
daa
test
pop
lcall
pop
add
jae
not
add
mull
add
xor
xor
pushf
loop
sub
loopne
adc
test
xor
push
clc
stc
test
push
dec
push
cmpl
cld
dec
iret
mov
repnz
fnstenv
mov
out
cmc
or
mov
call
cmc
gs
adc
repnz
orb
mov
xchg
loope,pt
mov
inc
push
sbb
inc
addr16
sub
aad
xor
cmp
sub
iret
dec
mov
call
out
test
push
scas
repz
mov
xor
dec
inc
mov
pop
xchg
cmp
push
sbb
arpl
dec
or
mov
out
lds
ja
sahf
or
push
mov
or
jecxz
jmp
es
flds
lods
push
mov
mov
pop
andb
sbb
mov
loopne
dec
mov
mov
in
pushf
jecxz
adc
adc
mov
das
imul
xchg
cmp
xchg
movb
pop
push
cld
fwait
js
inc
pushf
add
cmp
jne
aam
lret
mov
push
lock
push
mov
push
dec
pop
lea
ds
inc
jae
arpl
and
pushf
lock
iret
nop
add
add
loope
pop
cmp
pop
popf
adc
iret
popf
scas
mov
mov
adc
xor
cwtl
pushl
jae
xchg
pop
cmp
sbb
adc
nop
mov
fidivrl
sti
push
and
dec
mov
out
add
popa
loope
inc
mov
adc
sbb
inc
dec
mov
ljmp
addr16
outsb
pop
lcall
fisubs
jmp
lock
mov
sub
lea
in
roll
dec
pusha
negl
xchg
jl
xchg
xchg
lret
je,pn
mov
and
out
push
fnsave
xlat
push
xor
outsl
adc
xchg
iret
push
fsubrl
shll
lods
movsl
lcall
adc
into
xchg
and
scas
sbb
mov
sub
dec
mov
sub
sbb
shll
iret
or
lret
xchg
fildll
xchg
cwtl
data16
mov
nop
aam
addr16
push
mov
js
cmpsb
sub
nop
cmpsb
stos
mov
xor
push
push
iret
dec
mov
movsl
mov
outsl
dec
sub
pop
lahf
sti
jge
scas
mov
mov
test
into
jg
inc
lahf
aas
bound
cmc
scas
mov
sub
sti
cwtl
mov
loop
pop
lahf
scas
lcall
je
lock
fmull
out
shlb
dec
mov
sub
stos
scas
and
cltd
push
cli
out
fistps
mov
int3
fimuls
xor
aaa
sub
push
repnz
out
jno
push
in
out
push
imul
xchg
mov
mov
or
cmp
sbb
adc
mov
sti
inc
dec
cmp
adc
insl
mov
sub
add
das
daa
push
xchg
out
outsl
push
andb
jo
imul
and
ja
xorb
jecxz
jno
cmpsb
jno
cmp
mov
pop
pop
cmc
icebp
mul
dec
in
andl
imull
aad
xlat
mov
daa
push
or
and
add
inc
mov
shll
mov
idivl
push
sti
in
fstl
xchg
rcll
xchg
or
call
jno
in
adc
ret
xor
fsubrs
jbe
mov
call
or
insl
sub
out
test
cmp
addl
ja
pop
push
sbb
cmp
loopne
test
popf
inc
jg
jo
je
cltd
aaa
inc
jno
mov
or
add
sbb
dec
sbb
pusha
cmc
adc
pop
mov
and
mov
imul
sbb
sbb
mov
mov
stos
jno
iret
or
mov
cmp
imul
jge
into
arpl
mov
lods
mov
and
cmp
adc
lea
icebp
push
scas
sub
xorb
lret
xchg
lds
in
stos
sub
das
mov
sub
add
aas
fs
jb
js
jp
stos
cwtl
insl
scas
jmp
mov
push
pop
push
or
divb
add
rcll
in
aas
jmp
mov
and
pop
call
xor
hlt
cmc
out
sbbb
mov
addr16
jmp
and
mov
cmp
fwait
and
leave
xlat
test
sbb
popf
push
add
js
xor
xchg
adc
outsl
outsb
cmp
js
or
mov
inc
jp
scas
adc
push
push
mov
fdivs
lcall
aam
pop
dec
fwait
inc
add
out
into
cmp
out
xlat
xor
mov
gs
repz
add
iret
ret
mov
adc
and
inc
inc
mov
or
scas
fldl
test
enter
shrb
xchg
or
or
por
sub
icebp
dec
sub
das
mov
sarb
add
notl
sbb
sti
xor
icebp
jnp
pop
jne
cmp
pop
pop
fucomp
out
repnz
lods
div
hlt
dec
lret
cmp
pop
xor
jno
cltd
out
inc
sbb
sub
mov
movsl
push
ret
cmc
inc
sbb
dec
push
mulps
gs
push
cmc
and
or
in
sbb
in
jbe
hlt
jp
cmc
scas
js
stc
push
pushl
push
les
cli
pop
dec
push
jo
ss
sarb
sti
inc
pop
pop
adc
jo
into
add
xor
jne
jae
adc
and
mov
xor
sub
notl
jl
pop
xor
popa
dec
dec
mov
mov
test
mov
jl
mov
test
cli
xor
mov
jo
ficoml
add
xchg
mov
sbb
into
lods
sub
push
das
ret
or
test
cli
jmp
sbb
and
divl
sbb
sbb
push
and
mov
sarb
roll
ret
dec
adc
sub
cmpsl
js
pop
repnz
dec
fucomp
xor
in
mov
pop
xchg
sti
mov
test
fdivrs
jmp
jae
nop
sub
scas
les
or
je
stos
push
cmp
aam
cwtl
aaa
pop
in
int3
mov
push
cmpsb
orl
mov
roll
in
mov
pop
out
cs
mov
xor
fsubr
xchg
inc
cwtl
dec
sbb
lock
mov
xor
cmp
in
lret
sbb
fucom
xchg
lock
mov
fildl
aam
insb
add
mov
cmp
pop
loopne
int
inc
lods
shl
nop
mov
or
inc
sub
mov
mov
sub
mov
inc
and
add
xor
and
out
call
in
enter
sbb
mov
and
mov
rclb
int3
mov
dec
test
test
mov
adc
dec
popf
cmpb
lret
into
xor
les
inc
mov
jecxz
pop
lret
inc
rolb
lahf
pop
push
add
lods
icebp
lret
push
xor
push
loopne,pn
and
pushf
push
pusha
dec
lret
int3
ret
fmuls
adc
cwtl
and
xchg
dec
loopne
xchg
xchg
pusha
ja
std
cli
and
sarb
add
xchg
stos
mov
xchg
jecxz
cwtl
loopne
inc
xlat
les
or
and
jbe
enter
and
jg
jmp
stos
je
mov
mulb
push
mov
xlat
pushf
inc
mov
add
mov
push
clc
inc
jg
pop
mov
jle
inc
addr16
add
pop
sbb
std
add
mov
cli
jbe
in
cmpsb
push
ror
xchg
lods
xchg
sub
add
fwait
repnz
pop
and
fsubrs
andb
xlat
mov
push
sbb
cmp
rep
sub
lcall
xchg
loope
sbb
inc
sub
pop
out
pop
lods
mov
mov
dec
cli
xchg
lret
sub
movsb
popa
adc
mov
dec
jmp
cld
push
push
jno
lods
mov
xchg
dec
push
jp
adc
in
jmp
mov
ret
cld
pop
push
daa
sub
scas
cmp
rolb
lret
inc
rcrl
sbb
std
add
or
jbe
pusha
dec
and
dec
cmp
sub
cli
sbb
sub
cltd
ret
rcrb
cmp
movl
dec
insb
popa
fstl
aam
icebp
inc
das
rcrb
and
ds
inc
lahf
xor
sub
out
mov
mov
inc
and
fsubr
and
jae
xchg
lret
imul
mov
jo
ret
cmp
push
sub
xchg
std
ljmp
fmul
push
mov
sub
fs
iret
in
icebp
dec
push
inc
pushf
fdivrs
sbbb
inc
sbb
and
add
or
cmpsb
xchg
sti
or
cwtl
mov
int
pop
mov
adc
xchg
inc
adc
daa
cs
pop
sub
imul
inc
pop
imul
mov
icebp
and
jp
sub
nop
pcmpgtw
das
mov
push
mov
addl
mov
dec
fs
and
jns
push
dec
push
cmp
bound
into
das
outsb
jp
mov
shrb
push
loope
add
adc
loope
dec
dec
out
mov
mov
jae
imul
dec
rcrl
aas
jbe
in
push
cli
pop
push
mov
movsl
lret
and
test
sbb
inc
mov
mov
cmp
dec
xchg
and
stos
imul
sub
ja
and
shrb
fs
scas
mov
clc
jno
cmc
arpl
lock
test
mov
outsl
aaa
out
and
push
mov
pop
mov
insl
and
cmpsb
push
stos
shl
sahf
lods
test
jmp
mov
pushf
pop
push
jl
cs
add
pop
js
or
mov
xchg
test
call
ficomps
sub
lahf
mov
adc
inc
jge
nop
scas
test
and
and
out
sbb
es
or
mov
sbb
xchg
jg
vxorps
cmp
popf
mov
movq
sahf
push
mov
add
sbb
jnp
xchg
cmpsb
mov
enter
leave
rcrb
mov
in
mov
mov
sub
sbb
lock
push
mov
mov
xor
pop
dec
inc
dec
inc
insl
jle
xlat
mov
add
in
or
push
inc
in
inc
in
xchg
loop
sbb
insb
sbb
adc
xchg
gs
imul
cltd
inc
sub
ret
data16
aad
jg
sub
mov
xchg
jno
mov
xchg
ss
dec
inc
dec
icebp
mov
cmp
jle
scas
incl
mov
lret
gs
fcmovu
sub
shlb
xchg
aad
xchg
clc
js
sub
xchg
cmp
mov
or
addb
sbb
pop
leave
int3
rclb
push
adc
je
jge
lret
les
push
in
hlt
ljmp
jae
daa
mov
adc
mov
es
adc
xor
or
aas
ret
shl
lcall
sub
jg
and
lods
inc
mov
lods
into
xchg
mov
mov
mov
insb
pop
pusha
mov
adc
push
adc
in
xor
fimuls
mov
js
mov
adc
lods
fdivl
jge
int
pusha
lods
into
cs
jle
pop
insb
es
loopne
mov
jne
ljmp
and
cld
shlb
mov
inc
and
xor
clflush
or
nop
imul
ret
mov
sub
sub
xlat
fsubrs
pop
pop
mov
or
mov
sbb
add
push
dec
hlt
and
pop
push
pop
andl
pop
ja
ljmp
fdiv
arpl
fsubrs
out
std
flds
jns
and
adc
lock
jb
xor
jmp
inc
mov
inc
rorb
fsub
push
jg
add
aad
aam
cltd
add
daa
sbb
test
push
gs
in
cs
xor
pop
and
lea
lahf
xchg
jge
fcmovu
push
arpl
lds
inc
into
gs
loopne
xchg
adc
ljmp
lock
cmpsl
out
mov
int3
xor
sub
fldcw
pop
dec
stos
iret
idiv
adc
inc
dec
mov
push
xor
xor
iret
jo
loop
aad
jp
cmp
or
mov
sahf
outsl
push
pop
hlt
push
int
jl
sbb
fs
and
ffree
mov
loop
mov
mov
push
imul
scas
addr16
pop
jb
pop
dec
lock
xchg
mov
leave
jnp
inc
lods
scas
bound
js
insb
push
mov
push
incl
sub
xchg
insb
dec
mov
out
insb
and
and
std
mov
add
xchg
loope
sbb
pop
sbb
or
push
sub
adc
inc
call
xchg
push
push
xchg
jecxz
dec
mov
cmp
je
rcl
loopne
test
sub
cmpl
sub
jmp
cmp
inc
mov
stc
movsl
xor
loope,pn
push
adc
add
popa
popf
cmpsl
iret
cs
popf
in
idivb
movsl
and
xor
xor
xchg
shlb
cli
insb
sbb
test
jl
cs
xor
push
roll
add
mov
insl
and
mov
and
mov
or
jg
mov
xchg
loop
jge
mov
out
and
sti
push
cmp
data16
into
inc
cmpsl
xor
sbb
sbb
jne
enter
pop
cmp
addr16
cmp
adc
mov
or
push
sub
lret
outsl
adc
sub
mov
adc
mov
das
or
js
pop
pop
out
aas
inc
ret
mov
or
iret
sub
xchg
sbb
lahf
add
lret
ret
aad
ja
lret
xchg
lods
in
sub
outsl
sbb
inc
shll
lcall
aaa
enter
or
imul
fwait
push
lcall
sbb
pushf
fsts
sub
or
mov
jl
fmuls
rclb
test
lahf
cmpb
cwtl
adc
cli
jae
adc
adcl
push
pop
test
sahf
adc
and
dec
dec
add
outsl
imul
cmc
loop
pop
pop
jo
inc
xor
mov
sbbb
sub
xchg
push
mov
mov
ret
lret
lods
movsl
or
cmp
bound
mov
faddl
sbb
aad
jo
fs
das
xor
xor
mov
fists
jne
insb
pusha
je
sahf
daa
adc
out
jg
cli
lret
imul
xor
sub
fimull
push
dec
fcomi
push
push
cmp
xchg
sub
mov
jne
lret
outsb
xor
jne
dec
xchg
mul
mov
add
jecxz
loope
shlb
lea
adc
adc
mov
lods
sbb
rolb
ret
xchg
adc
push
dec
xchg
test
test
cli
push
mov
and
je
scas
jae
stos
and
add
mov
cmp
test
and
push
lock
fiaddl
xchg
insl
mov
inc
data16
xor
jle
gs
hlt
adc
bound
ljmp
mov
out
lret
xchg
xor
call
jmp
clc
xor
adc
stc
inc
jo
push
cmpsl
mov
hlt
bound
jns
mov
mov
mov
mov
jne
imul
daa
ret
dec
mov
outsl
or
std
shlb
jmp
adc
xchg
xor
mov
lahf
push
int
jmp
sbb
jp
push
xchg
or
sarl
mov
sub
repnz
mov
jo
push
test
or
or
pop
pop
mov
loopne
outsb
cwtl
jp
lods
xor
fwait
in
loope
add
cmp
mov
setne
in
test
rcr
jnp
movaps
pop
jmp
xchg
cltd
jne
xchg
outsb
cmp
pop
pop
in
jno
orb
cmpsb
pavgb
push
mov
add
cmp
stos
ds
mov
mov
jne
dec
rcll
addr16
adc
and
pop
dec
int
iret
in
adc
shrl
xor
mull
aam
cli
dec
addr16
std
jne
sub
out
sub
js
insb
loopne
xlat
jg
pop
xor
fcom
cmpsb
xchg
loop
and
je
mov
imul
stc
jle
push
pop
jno
adc
pop
ret
mov
mov
jp
test
adc
jmp
sub
mov
mov
test
stos
addl
pop
rcrl
es
or
ja
pop
pop
mov
sbb
fidivs
rorl
jne
cld
lods
jmp
xchg
xchg
pop
or
or
add
lods
jns
insb
fistl
cmp
pop
test
jne
test
jo
push
mov
inc
add
dec
fcomp
imul
push
mov
rcrb
pop
inc
jne
insl
inc
cmpsl
arpl
or
mov
sti
and
cmp
sahf
jae
cld
or
inc
and
mov
adc
arpl
push
cmp
mov
mov
xor
lds
stc
jne
idivl
mov
popf
mov
jle
cmp
dec
stc
lods
imul
sbb
or
and
jmp
dec
mov
sbb
pop
cmp
inc
dec
xchg
stos
jb
movsl
into
pusha
inc
sub
mov
int
loop
sbb
sahf
xchg
xor
and
fisttps
xor
lret
push
sub
test
dec
cmpsl
xor
xlat
enter
jae
arpl
clc
repnz
orl
and
mov
dec
cmp
scas
stos
es
clc
out
lods
out
test
adc
mov
shlb
add
std
xlat
fs
outsb
or
sahf
stos
arpl
inc
or
push
adc
pop
jle,pn
out
pop
icebp
push
gs
orl
loopne
fcomi
jl
sub
movsl
ucomiss
pop
rorb
rorb
dec
inc
mov
out
jne
mov
jo
or
pushf
int3
mov
in
cld
mov
mov
cli
adc
out
jecxz
dec
sub
cwtl
mov
ljmp
mov
popa
stos
out
loope
or
jno
jmp
xor
jmp
mov
fnstcw
jnp
xor
repnz
sbb
xor
pop
imul
cmp
inc
dec
mov
lret
inc
mov
xchg
cmp
sbb
pop
in
xchg
add
add
addr16
or
mov
ret
dec
mov
mov
cli
int
cmp
out
sub
xor
dec
xchg
xor
fldl
mov
inc
push
mov
pop
xlat
inc
or
pop
data16
xchg
icebp
leave
pop
ffree
cltd
pop
stc
xlat
jl
pop
jp
mov
imul
sub
mov
pop
jmpw
enter
vcvtpd2psx
lahf
push
cmpsl
xor
inc
jno
push
jb
push
pop
push
notb
js
test
mov
rcl
dec
pop
pop
cli
push
mov
test
out
inc
sbb
xor
pop
or
mov
xor
xchg
mov
fcompp
or
sbb
hlt
out
pop
clc
mov
jo
pop
iret
mov
imul
pusha
jge
cmp
cmp
push
mov
lahf
push
adcl
cmp
jbe
cmpsl
xchg
pop
popf
add
ja
jmp
xlat
mov
mov
and
mov
leave
in
fisttps
enter
loopne
insb
std
xorl
cli
inc
xchg
jecxz
imul
jp
or
andb
fcomip
daa
mov
dec
xchg
cmp
xchg
flds
popa
addr16
mov
pusha
mov
loopne
or
enter
fisttpll
inc
aad
pop
icebp
jge
xlat
cmp
xor
popf
mov
jg
nop
mov
mov
cmp
push
sbb
cmp
cwtl
loopne
movsl
mov
inc
insl
mov
inc
push
mov
cwtl
add
xchg
pusha
cli
push
daa
rcl
mov
fwait
js
sbb
mov
scas
test
andl
jb
mov
add
scas
in
cwtl
adc
xor
inc
sbb
in
xchg
mov
cmpsb
roll
and
mov
push
movsb
decb
mov
or
cs
in
cmp
lea
inc
shrl
xor
or
aas
jp
mov
jg
gs
popf
mov
dec
scas
stos
sti
cltd
pop
add
push
std
dec
xchg
or
in
stc
push
mov
jns
lods
aaa
sbb
add
mov
mov
mov
addr16
dec
mov
pop
in
xchg
fisubs
fs
xlat
push
in
daa
mov
mov
out
pop
out
arpl
lcall
push
hlt
mov
arpl
rclb
cwtl
and
aaa
xchg
bound
imull
push
jle
adc
repz
pusha
lahf
push
or
popf
out
orl
jae
pop
push
jo
daa
hlt
mov
js
out
das
xchg
mov
mov
mov
fs
push
add
push
and
icebp
sub
dec
aad
jp
and
loop
scas
mov
and
cmpsb
cmpsb
fistl
xor
out
ret
xchg
pop
mov
inc
mov
stos
cmp
add
push
out
jne
fldl
push
mov
pop
and
adc
pop
xchg
or
pushf
popf
pop
bound
jno
nop
push
or
out
dec
inc
outsb
subl
jle
sub
loope
gs
ss
jmp
inc
jo
jmp
mov
scas
rol
imul
ja
inc
mov
cmc
pop
inc
sub
cmpsb
ljmp
int3
loope
aaa
pop
call
decl
pop
jg
or
jg
cwtl
enter
sbb
xor
scas
push
lock
js
scas
jnp
stc
add
xchg
xor
xor
dec
ret
popa
xor
lret
mov
mov
inc
push
bound
sar
xchg
ljmp
inc
xor
mov
inc
add
shrb
aas
lea
push
jnp
jge
cmp
dec
mov
imul
mov
add
mov
outsb
mov
jne
stos
nop
test
mov
mov
shll
inc
push
jne
xor
push
nop
scas
scas
nop
stos
inc
std
lock
sub
dec
mov
ror
fs
in
mov
lahf
push
jbe
jo
xor
dec
dec
adc
inc
or
mov
jae
xchg
push
push
xchg
pop
int3
dec
and
enter
insl
dec
mov
fstenv
mov
popa
cmp
inc
insl
adc
jmp
int3
or
pop
cmp
and
sub
xor
mov
jg
jb
pop
jg
cltd
mov
fpatan
push
sub
scas
xor
jg
sti
inc
inc
rorl
cmp
or
push
ror
xor
add
cmpsl
push
mov
mov
pop
fcomps
test
jmp
inc
sti
aam
xlat
clc
std
adc
mov
dec
dec
pop
sbb
and
cmc
int
jmp
lcall
cmp
mov
cmpsl
aad
test
dec
ret
and
loop
pop
jecxz
cmpl
testl
shll
lds
je
xor
push
mov
lods
push
ret
pop
jmp
cmpb
push
push
sub
mov
inc
inc
add
or
ds
adc
xorl
sub
outsl
mov
push
nop
add
fcomip
add
dec
test
pop
and
mov
xchg
cmpb
movsl
cmp
lea
pop
outsl
push
xor
jp
pushl
sbbb
scas
push
sub
fcompl
adc
add
add
mov
xchg
xor
je
mov
jnp
insl
inc
stos
pop
add
xor
jo
bound
dec
or
add
cmp
push
sbb
div
aas
js
lea
icebp
repnz
scas
std
or
xor
push
push
jge
jge
cmp
and
mov
and
js
fmul
mov
push
test
mov
inc
into
into
jl
out
out
xchg
ss
push
outsl
push
mov
int
push
pop
dec
jmp
clc
xchg
jo,pn
cmpsl
int3
push
mov
xchg
or
nop
mov
and
and
xchg
and
xor
mov
jp
mov
subb
fwait
cwtl
sbb
aad
pop
and
insl
mov
lretw
je
out
jge
add
push
mov
bound
mov
ss
andb
aas
ud0
mov
add
out
lea
sbb
mov
fwait
scas
pop
fcoml
or
xchg
sbb
mov
dec
sbb
fwait
jns
xor
addr16
cmc
and
mov
lcall
in
dec
add
mov
cld
sbb
and
movb
jbe
adc
arpl
iret
faddp
xchg
dec
or
push
and
xchg
test
dec
push
out
push
mov
mov
ret
xchg
fsubs
fs
pop
jne
sub
mov
mov
cltd
mov
test
cld
imul
jle
push
xchg
mov
jne
push
std
icebp
stos
push
mov
stos
into
mov
out
mov
loop
inc
lea
mov
iret
and
fdivr
fnstenv
movsb
and
or
dec
cmp
fwait
and
sahf
sub
xchg
sbb
or
arpl
adc
adc
xor
inc
push
adc
xchg
or
and
mov
xchg
cmp
add
sbb
and
out
mov
mov
fcompl
leave
decb
mov
outsb
pop
scas
lods
cwtl
ret
dec
outsl
xor
data16
cmpsb
jbe
lods
inc
into
arpl
inc
or
xchg
sbb
mov
lret
fists
mov
mov
cmp
arpl
cmpsl
inc
int
adcb
add
int
mov
xchg
push
xchg
sahf
ds
mov
mov
jns
loope
adcb
or
sub
inc
inc
mov
mov
sahf
mov
lcall
pushf
loopne
sbb
mov
dec
cmp
cltd
fidivrl
xchg
mov
repz
sub
push
add
or
daa
arpl
push
inc
jmp
pop
hlt
mov
fldcw
imul
pushl
mov
out
mov
imulb
or
add
aad
outsb
sub
cmpsl
xchg
sub
clc
add
inc
int3
lods
ret
pop
xor
sarb
rorl
sub
cmp
sub
push
lds
in
aad
ret
jmp
lret
out
push
add
mov
int
in
in
fnsave
mov
add
mov
jnp
daa
sub
jno
pop
daa
ret
mov
loope
and
test
inc
and
jae
lds
jg
and
sbb
addb
push
ds
into
int
and
arpl
mov
jmp
shl
cmp
pushl
add
sub
out
jmp
mov
cmp
push
and
push
push
ret
xor
pop
jl
fisubl
jge
mov
test
cli
or
or
hlt
cld
sbb
mov
das
aaa
das
sub
into
movb
sub
add
fadd
aas
std
cmc
shll
ljmp
mov
les
jl
enter
sub
and
mov
iret
and
loope
rorb
addr16
js
add
stos
jnp
mov
push
pop
out
mov
incb
pop
cmp
pushf
loopne
int
push
shr
out
jg
or
mov
pop
sbb
pop
movb
fldenv
in
dec
mov
and
pop
sbb
mov
cmpsl
sbb
fwait
push
sub
jle
or
push
orb
cmc
call
add
ja
sub
in
sbb
sbb
fucomp
pop
add
mov
bound
jecxz
sub
xchg
mov
gs
inc
cmpsl
out
pop
pop
movsl
inc
jp
test
cmpsl
cwtl
sbb
or
cmpsl
sub
xchg
xor
adc
mov
sub
movsl
or
ja
push
adc
out
scas
inc
or
xchg
jnp
icebp
cs
sub
add
cmp
repz
jae
rorb
movsb
or
outsb
push
inc
jo
mov
jo
dec
shlb
cmp
jne
inc
shrb
imul
jae
xor
push
sub
inc
mov
and
add
outsb
iret
and
xchg
scas
mov
inc
xchg
xchg
xchg
aad
mov
cmp
pop
test
lods
pop
pop
xor
xor
jae
sbb
xor
lahf
fcomps
sbb
sbb
ret
out
ljmp
push
jne
mov
nop
jbe
outsl
in
int3
xchg
dec
hlt
xchg
sub
rorl
scas
sahf
mov
lods
inc
pusha
cmc
pop
mov
pop
aas
or
lcall
cmpb
pusha
sbb
cli
mov
mov
and
mov
mov
sbb
add
pop
mov
aad
mov
addb
sahf
pop
aam
loopne
outsb
lock
cmp
ret
and
es
push
ds
add
lahf
sti
ds
and
xchg
cmpsb
outsb
dec
sbb
xchg
in
repz
xchg
sbb
out
sbb
out
ret
jg
cmp
cmp
xlat
add
fidivs
lods
call
fmuls
in
imul
es
sti
mov
pusha
sub
fmull
popf
jno
xchg
cmp
hlt
jb
outsl
mov
scas
and
xchg
inc
ds
mov
push
cmpsl
insl
pop
jle
pop
repnz
leave
jecxz
shr
lahf
test
scas
outsb
daa
mov
push
stos
add
jmp
xchg
mov
icebp
pop
xor
jge
jg
xchg
push
ds
pop
add
ds
fsubrs
jnp
clc
or
into
daa
xchg
or
lahf
xorl
fwait
or
cwtl
sahf
jmp
mov
dec
popa
pop
fildll
mov
mov
shrb
aas
push
mov
sub
cwtl
push
fwait
sbb
stos
sbb
mov
pop
aaa
and
ss
xchg
in
or
or
inc
lcall
mov
lock
inc
lock
dec
push
scas
push
fldt
pop
stc
pushf
or
je
and
ret
mov
idiv
in
popf
mov
jecxz
pushf
mov
xor
lods
jae
xchg
vmlaunch
test
sub
adc
fucomi
scas
push
lods
pop
or
sub
fldpi
rorb
iret
std
pop
pop
test
cmp
clc
jne
adc
mov
push
xor
sahf
cmp
dec
das
sub
jo
popf
lahf
int3
mov
into
cld
mov
cmp
aam
dec
xchg
fildll
repnz
scas
and
inc
std
or
stc
adc
rclb
inc
dec
push
ret
mov
sahf
es
imul
or
and
out
dec
lds
and
xchg
sub
insb
mov
daa
xor
pop
jb
or
jmp
add
insb
into
pop
pop
cmc
rcrl
dec
test
popf
dec
mov
es
jp
dec
bound
jg
aam
push
push
xchg
aaa
out
int3
sbb
dec
cmpsb
jnp
pop
int
sub
sbb
rorl
inc
or
xor
in
sahf
mov
stos
push
or
adc
mov
lock
aaa
push
mov
mov
aad
jb
outsb
push
mov
or
aaa
cmc
jne
mov
fs
jne
xchg
xchg
insb
mov
cltd
dec
mov
lahf
aas
cs
fnstsw
xchg
loop
lods
sti
jmp
cmp
push
inc
mov
ret
ret
cmp
push
loop
inc
push
jecxz
push
icebp
adc
push
adc
xor
lea
xor
add
push
and
mov
mov
loope
pop
mov
out
lea
stos
mov
cmp
add
repnz
stos
dec
icebp
push
jp
adc
iret
ja
sbb
mov
xchg
test
es
lds
shrb
and
cmp
pop
jbe
inc
out
outsl
insb
out
lcall
push
movsl
xor
leave
jp
xchg
cmpsb
out
xchg
push
call
mov
inc
pop
mov
fucomip
mov
insl
sub
popf
les
xor
mov
jmp
pop
jb
and
mov
outsb
addr16
fistl
ret
out
pop
ror
ret
add
and
ss
push
push
sbb
in
mov
xchg
shl
test
sbb
pushf
add
jno
notl
cwtl
scas
out
fmuls
in
or
lcall
cmp
cmpsl
xacquire
gs
adc
negb
sub
inc
xor
ror
cmpsl
adc
or
sub
fistpll
cld
xor
sub
hlt
push
in
shlb
aam
out
aas
shlb
xchg
lea
sbb
sub
adc
sbb
xor
mov
cld
adc
dec
out
mov
subl
sbb
jae
xchg
and
adcl
iret
cmp
movsl
add
sub
out
testb
das
and
mov
xchg
push
lahf
daa
imul
lcall
sti
jge
jo
sbb
push
out
jmp
dec
shrl
into
xor
add
fdivs
mov
jno
xchg
int
dec
lret
imul
pop
adc
popf
xlat
cli
fcomip
xor
dec
and
nop
xlat
fisttpl
sbb
ficompl
test
cwtl
jp
sbb
arpl
cmp
xor
cmp
dec
loop
sbb
sbb
ljmp
lds
lret
or
cmp
cltd
add
pop
mull
and
dec
xorl
mov
iret
and
stc
mov
xchg
and
out
test
push
xor
es
or
jbe
inc
adc
jp
ja
movsl
xor
pop
push
mov
adcb
out
arpl
mov
mov
in
inc
movl
pop
test
inc
sbb
psrld
and
xchg
push
push
or
mov
cmp
test
mov
or
mov
sbb
cld
loopne
mov
or
mov
xchg
fistps
mov
mov
test
pushf
aad
push
out
movsl
or
stos
aam
adc
je
xor
ds
inc
scas
sbb
enter
movsl
push
repz
cltd
inc
xchg
fadd
outsl
xlat
js
pop
mov
repz
and
clc
adc
push
xchg
xlat
push
repz
mov
push
jp
cmp
jno
or
sbb
lret
add
xchg
add
cmp
and
bound
add
mov
imul
in
push
mov
orb
ret
pop
xlat
xchg
arpl
adc
dec
int3
push
add
jne
push
jp
mov
cmc
cli
out
stos
push
mov
mov
add
fcmovnu
push
das
test
xchg
sbb
adc
mov
inc
adc
std
jb
lods
mov
inc
insl
push
out
rol
lea
test
pop
call
jg
scas
cs
xor
dec
or
lea
mov
mov
ret
dec
cmpsl
rcr
dec
dec
jbe
mov
into
data16
mov
lret
call
jg
push
push
pop
into
daa
fadds
les
iret
xor
mov
and
mov
in
push
inc
fimuls
daa
pop
cmpsb
or
rcrb
ret
sbb
divb
xchg
mov
int3
insb
xchg
xlat
imul
push
inc
xorl
test
adc
inc
push
dec
and
mov
sub
je,pn
add
and
mov
shll
mov
sbb
xchg
orb
mov
lods
add
cmc
das
popf
jmp
push
xchg
and
testl
clc
xor
scas
sub
mov
data16
mov
adcl
xchg
sbb
pop
fidivrs
or
cmc
gs
and
push
jmp
jb
inc
dec
mov
insb
mov
outsl
negl
inc
pop
cmp
jo
pop
rcrb
sbb
fdivl
dec
xor
or
adc
adc
inc
sti
pop
sub
fcoml
jmp
or
shll
sbb
sub
adc
mov
jp
or
xor
lods
jmp
inc
shrl
pop
push
enter
std
jmp
daa
pushf
jbe
mov
js
in
mov
mov
cmove
movsb
jle
jno
aas
loopne
in
inc
lcall
insl
in
subb
dec
sti
and
clc
jo
xchg
int3
add
clc
add
inc
pop
insb
add
add
mul
inc
sub
filds
ret
fwait
mov
fisubrs
mov
mov
mov
xchg
or
ja
xchg
xor
insb
xchg
mov
jg
push
ds
sbb
imul
mov
loop
and
sub
xor
lds
jae
inc
add
push
fidivrl
in
lea
and
sub
outsl
cmpsl
cmp
fldl
aad
mov
out
ficoms
test
aas
les
sbb
push
ficoms
push
repnz
inc
cmp
repnz
iret
stos
scas
repnz
lret
shll
outsb
pop
or
fs
fnstcw
fwait
adc
xchg
push
mov
cld
xorb
or
cmp
outsl
xor
lcall
in
cmc
xchg
in
add
lahf
xor
lahf
cld
fisubrs
into
cmpsb
movsl
push
xchg
insb
ficoml
mov
push
or
lret
movsl
xchg
dec
popa
jo
add
icebp
inc
popf
mov
cmp
mul
or
dec
sbb
repnz
rorl
push
adc
cmp
xchg
xchg
insb
sub
inc
mov
mov
sub
xchg
popf
pop
sub
push
les
mov
imul
gs
add
mov
ljmp
cmc
push
and
push
pop
cmp
inc
sub
sub
mov
add
pusha
repz
ljmp
xchg
movsb
inc
js
or
xchg
sub
mov
sbb
ss
adcb
call
pop
addr16
shr
xchg
roll
enter
scas
pushl
sbb
int3
lahf
daa
adc
outsb
adc
cmp
and
jns
or
dec
adc
adc
add
sbb
add
sarl
fmull
push
test
lds
ds
mov
jmp
outsb
cmpb
stos
mov
jne
int
pop
adc
out
xchg
xor
fiaddl
pop
and
push
cmp
xchg
aam
pop
add
jecxz,pt
or
lret
fwait
cmpl
lret
jns
dec
lds
cmp
or
mov
loopne
push
jo
dec
repz
dec
xlat
outsl
test
imul
adcb
stos
ret
and
stos
add
inc
int3
mov
jp
arpl
shrb
out
pop
out
push
push
push
roll
test
inc
lods
loop
pusha
jp
imul
shrl
push
push
gs
aam
sbb
mov
push
push
push
pop
es
sbb
dec
aaa
in
shll
adc
lcall
insb
push
pop
je
jge
ljmp
sti
mov
cwtl
push
dec
dec
popa
rcll
orb
sub
push
test
mov
mov
ret
ds
sar
xor
push
fldcw
push
push
inc
sbb
mov
cmpsb
sbb
sbb
sti
xlat
in
xchg
pop
mov
test
test
pop
jp
xchg
push
je
mov
sbb
add
pop
fstl
incl
stos
fisttpl
arpl
fs
in
adc
adc
addr16
rclb
arpl
pushf
rorb
or
imul
cmp
inc
dec
shll
xchg
xchg
inc
dec
and
adc
call
add
stos
in
fisttps
hlt
xchg
and
sub
cmp
xchg
dec
pop
and
cmpsl
rcrl
add
in
pop
int
add
incl
mov
mov
push
mov
adc
and
sub
int
out
add
xchg
cmp
sub
leave
leave
scas
into
sub
mov
mov
fdivr
mov
pushf
push
enter
stos
scas
mov
fmuls
leave
je
mov
test
stos
shll
icebp
scas
xchg
sub
jp
icebp
inc
outsb
pop
sub
dec
push
insl
jl
mov
stc
xor
aaa
or
mov
inc
cli
push
lods
aam
in
mov
out
xor
lahf
std
aad
and
dec
lea
inc
inc
dec
mov
mov
jp
or
push
xor
imul
test
decb
xchg
cltd
xor
sahf
in
mov
and
stos
xchg
test
pusha
das
xor
scas
and
les
add
push
jle
sar
enter
mov
filds
xor
test
out
hlt
jmp
dec
lea
jo
push
cld
call
mov
fwait
sub
ret
push
lods
lret
sub
jle
int3
jl
adc
cmp
mov
ds
xorb
mov
shrl
daa
lods
pop
xchg
xor
inc
add
push
jno
mov
stos
push
mov
jns
lock
mov
xor
movsl
sbb
and
and
push
jb
sti
fmul
push
xchg
cpuid
xchg
and
pop
sub
cmp
inc
or
add
in
lock
shll
push
aas
mov
dec
in
pop
xor
mov
inc
mov
ds
jg
faddl
mov
mov
lods
dec
js
xor
adc
or
jne
rcll
stos
lods
rcr
cmp
xor
out
in
arpl
fwait
pop
xchg
test
popa
inc
sbb
out
or
xchg
popf
mov
mov
mov
fadds
loope
xor
es
sbb
aad
fidivrs
ficoms
and
pop
sbb
push
add
mov
repnz
pop
mov
lock
dec
call
xor
sbb
dec
pop
jmp
cs
mov
mov
mov
mov
mov
loope
mov
ret
or
mov
jae
push
fidivrs
sbb
ja
xor
inc
jb
lea
cmp
in
cmpsb
or
inc
xor
cltd
shll
add
pop
push
popl
cmp
ljmp
sbb
dec
daa
sbb
jecxz
insl
xor
dec
insb
inc
arpl
cwtl
jp
adc
std
adc
into
popa
and
sub
lea
mov
dec
fidivrs
or
jecxz
leave
xor
out
cmpsb
call
xchg
enter
add
imul
jbe
imul
xchg
or
repnz
int
jge
add
mov
movsb
mov
dec
scas
push
xor
insb
sbb
mov
data16
mov
xchg
cmp
iret
jg
cld
or
mov
imul
xlat
imul
pushf
inc
xchg
in
xchg
pop
arpl
xor
int3
xor
int
sbb
inc
pop
fwait
rclb
rol
gs
xchg
hlt
fdivrl
and
xchg
fs
dec
int
lcall
xor
lods
dec
fcmovnb
nop
push
movb
inc
insb
push
sbb
lods
idivb
lret
mov
sahf
push
sub
ljmp
sub
fcomp
add
mov
mov
sub
popf
rorl
mov
xchg
and
hlt
repz
cltd
mov
loope
mov
in
test
sub
cmp
outsb
jo
shll
enter
or
cmp
mov
or
mov
pop
xor
stos
push
repnz
sbb
adc
repnz
nop
je
rorl
sbb
nop
arpl
std
outsl
inc
imul
mov
decl
dec
jno
xor
mov
jge
pop
mov
imul
lret
push
inc
mov
add
xchg
push
push
outsl
cld
ret
fcoml
mov
subl
mov
ret
dec
and
mov
cmp
shlb
movsb
sub
mov
gs
std
arpl
inc
jl
push
pshufw
lret
int
xchg
gs
das
fmuls
jmp
mov
pusha
xlat
inc
nop
mov
pop
aas
jmp
add
aad
shrl
pop
in
push
int3
js
popf
addr16
js
out
fiadds
enter
fnsave
rcrb
dec
push
add
rclb
out
xchg
cld
mov
jns
jmp
xchg
pop
pop
pop
ds
mov
mov
push
jg
inc
dec
scas
andb
leave
sbb
pushf
out
xor
loopne
shr
jecxz
std
or
stos
jecxz
sub
cmp
pop
fcmove
xchg
std
push
lea
cmpsb
xchg
jg
cmc
mov
sub
dec
mov
fnclex
push
ss
jno
lds
dec
loop
xchg
cs
ss
jnp
inc
jge
pop
in
mov
dec
mov
in
cwtl
sbb
outsl
sbbb
pop
movb
addr16
and
iret
dec
sbb
sub
test
jbe
gs
adc
jle
loopne
push
jle
mov
mov
inc
sub
mov
adc
xchg
adc
sbb
mov
or
aaa
sub
fidivrl
xlat
sbb
adc
mov
fmuls
shlb
lcall
imull
mov
xchg
mov
push
lret
pop
fstpt
daa
add
and
cmp
cmp
cmpsb
pop
fdivl
lret
inc
test
mov
js
or
enter
adc
fimuls
inc
cmp
sarl
sub
adc
fldcw
popa
aad
mov
pop
inc
push
xchg
or
fbstp
scas
test
add
lods
jae
mov
fs
dec
jb
das
add
loop
testl
and
repz
mov
out
and
adc
addl
fldcw
or
dec
jb
or
push
imul
stos
outsb
sbb
cmc
jmp
pop
popa
lcall
idivb
add
jb
jge
mov
cmp
xsaves
xlat
fmul
lcall
inc
add
mov
nop
arpl
xchg
in
aas
adc
out
pop
mov
int
cltd
scas
adc
movsb
out
test
cltd
ret
cmpsl
dec
bswap
cmp
imul
jmp
mov
xor
roll
cmpsb
pop
push
push
outsl
push
pop
dec
push
ret
jmp
or
xlat
jbe
xor
cmp
pop
adc
xchg
mov
jle
and
in
xor
das
lret
sbb
sub
mov
ret
jbe
adc
ljmp
push
mov
pop
imul
les
clc
pop
mov
dec
int3
xchg
lds
push
in
push
adc
jbe
mov
ret
xchg
lods
sbb
xorb
fisubl
pop
sub
push
andb
int
mov
pop
ret
repz
test
stos
in
cld
or
outsb
sub
sub
jecxz
shlb
cli
in
mov
int3
test
adc
aaa
sub
lcall
lahf
pop
shrb
cmc
jecxz
cmp
pop
hlt
idiv
jnp
fwait
cmp
imul
inc
sbb
pop
ret
add
mov
sub
xchg
insl
loope
adc
jb
sbb
dec
arpl
xor
mov
mov
cmpsb
jb
fsts
aad
jb
jbe
in
gs
cmp
cld
es
arpl
mov
sbb
xchg
rcrl
jge
movsl
call
loope
cld
mov
sub
sahf
pop
adc
push
sub
fstps
mov
sbb
loop
and
enter
push
xchg
adc
lret
sbb
mov
jle
pop
sbb
mov
arpl
test
clc
mov
sub
jmp
cmp
bound
mov
fwait
cmp
lods
jnp
aas
inc
adc
xchg
xchg
or
mov
popf
mov
test
mov
and
lcall
retw
cld
push
repz
jle
push
stc
cwtl
or
sub
iret
pop
jo
adc
outsb
mov
jb
adc
movsb
xchg
dec
push
push
addl
inc
xor
mov
jnp
inc
fmull
adc
je
add
cltd
inc
pop
push
adc
shlb
push
sub
dec
mov
lret
test
sbb
ret
ror
sub
adc
test
xchg
ja
int
rclb
pop
xor
inc
sub
adc
dec
pop
pusha
add
es
cmp
cmpl
inc
movsl
or
mov
scas
sbb
push
push
mov
fdivrs
inc
xor
ret
daa
sahf
call
xchg
xchg
insl
mov
and
mov
and
outsl
pop
cmp
cmp
pop
shll
lea
out
push
loop
repnz
mov
cmp
pop
mov
int
test
ljmp
pop
jae
lds
pop
out
imul
ret
call
ljmp
xchg
mov
inc
push
fists
add
mov
insw
ss
mov
mov
repz
jl
pop
xchg
sub
pop
jg
and
add
mov
sub
outsb
jmp
lods
sbb
daa
cmc
jne
ret
inc
lret
pop
push
outsl
jno
mov
jg
es
popa
stc
pop
jb
test
testb
lahf
arpl
stc
scas
les
out
iret
lods
inc
sbb
fucomp
ficoml
inc
jecxz
inc
sub
and
mov
outsl
js
enter
jno
push
iret
into
xor
xor
or
xor
xchg
cmp
dec
xchg
jle
dec
cwtl
xor
stc
jmp
int3
in
push
cld
lods
sti
pop
mov
push
test
push
test
data16
or
clc
daa
sub
xor
lock
fists
cs
push
repz
leave
push
aad
fistpll
scas
idiv
and
aaa
pop
add
out
imul
sub
andl
push
mov
and
gs
pop
mov
in
in
xorb
cmp
cld
jl
xor
push
jne
xor
mov
adc
sbb
pushf
pop
mov
mov
cmp
pop
inc
push
dec
jae
ja
xor
mov
fistps
lods
fyl2x
nop
mov
xchg
rcrl
ss
add
lods
sbb
out
sahf
mov
sbb
mov
sbbb
je
ss
sti
xchg
out
sarl
fsubrp
xchg
out
pop
sbb
xchg
inc
cmp
outsl
fsubr
inc
imul
pop
mov
pop
mov
ret
fdivl
inc
cmp
imul
inc
or
mov
fxch
push
lods
jmp
mov
jl
fcoml
jb
push
cmp
adc
sbb
stc
test
popf
notl
std
pop
xchg
mov
std
mov
movups
and
bound
adc
sub
xor
cld
mov
int
inc
popa
sbb
adc
out
shrb
or
pop
pop
fstps
pop
xchg
nop
push
iret
insb
fdiv
dec
sbb
fcoml
mov
xchg
cmc
sbb
out
sbb
inc
sub
mov
and
sub
mov
int3
fs
and
stc
xchg
adc
or
mov
testl
cmp
mov
scas
xor
or
mov
mov
xor
aam
xchg
mov
cmp
fsts
sub
dec
sahf
ss
icebp
jne
scas
push
test
sar
cmp
aam
jnp
xchg
xchg
cmc
push
aam
test
pop
dec
hlt
pop
push
sub
push
aas
bound
into
push
les
mov
mov
movsl
jg
sub
nop
add
pusha
lret
imul
lcall
and
or
fwait
int3
clc
dec
pushf
aam
xor
dec
imul
jecxz
clc
sbb
dec
cmp
repz
out
cmp
stos
or
imul
mov
shll
rolb
push
int3
fists
lret
mov
and
bound
dec
rcrb
jl
sub
sub
jae
test
in
adc
fs
mov
jmp
cmp
push
adc
pop
add
movsl
test
mov
xchg
andb
fcoms
test
popf
xlat
fstpl
stos
fld
outsb
pop
add
or
test
aas
data16
fcoml
bound
inc
shrb
mov
dec
or
nop
sub
xor
mov
cld
cmp
or
jmp
arpl
adcl
add
pop
ss
xorb
cltd
pop
shl
sbb
in
adc
push
les
fistl
sbb
xor
add
mov
and
jg
xor
adc
bound
cmp
iret
ja
and
jno
andb
repnz
or
rolb
aas
cmp
vcvttsd2si
int
aas
push
shll
sub
jne
cmp
cltd
mov
ret
sub
std
insl
sub
cmp
insb
or
sbb
jg
xchg
jno
mov
mov
dec
jmp
push
lock
jge
cmp
pop
aad
dec
inc
xchg
xchg
rcrb
lahf
adc
add
add
clc
divb
mov
push
pop
addr16
cli
adc
imul
jle
movsb
jle
sbb
sarb
xchg
sti
test
add
sub
jns
repz
push
imul
pop
and
xor
lods
xchg
or
popa
call
mov
test
icebp
pop
test
dec
adc
cwtl
addr16
sub
lds
cmpsb
xchg
push
pop
pop
bound
mov
pop
mov
xchg
lods
or
adc
push
cs
dec
int3
pop
insb
mov
outsl
pop
mov
imul
add
int
pop
movl
pop
adc
pop
nop
inc
mov
lods
mov
push
sbb
adc
sbb
or
or
das
or
cld
orl
cmpsl
aam
xor
addr16
mov
dec
pop
shrb
xchg
fidivrl
les
pop
push
shl
aam
push
xor
fwait
pop
fldenv
mov
shlb
stos
fsubl
sub
xchg
pop
lret
clc
movb
out
outsb
mov
int3
lcall
das
pop
and
sbb
in
pop
mov
lods
clc
or
adc
jecxz
push
jg
xor
lret
js
aam
in
enter
pop
xor
sub
xor
xchg
sub
cmp
imul
and
leave
or
adc
shl
inc
mov
pop
ljmp
loop
in
inc
shlb
pop
jp
xor
inc
es
xchg
or
std
mov
inc
outsb
dec
lcall
push
into
dec
pop
jb
pop
int3
sahf
shr
std
push
pop
or
lock
daa
jns
stc
dec
lret
inc
cs
push
sti
or
test
inc
stos
mov
sub
cltd
mov
js
test
mov
xorb
xor
mov
cmp
enter
mov
int3
out
and
push
jmp
xor
js
jae
dec
pop
cwtl
pushf
in
aam
idivl
inc
in
jb
aaa
test
mov
add
pop
cmc
lods
adc
push
mov
mov
shl
push
test
dec
inc
movsb
and
lret
pop
int
sub
dec
inc
sbb
das
test
vsqrtpd
das
add
dec
js
inc
ljmp
pop
ljmp
lock
call
sbb
sub
popa
sbb
lahf
mov
test
inc
xlat
mov
aaa
jae
dec
mov
and
push
add
cmp
or
pop
push
shl
xor
lret
add
push
adc
scas
mov
insl
out
jns
lds
test
mov
iret
idivb
insl
stos
cltd
cmp
sbb
imul
xchg
movsl
push
les
jp
dec
das
sbb
movsb
fstpl
sub
stos
jge
scas
lods
fs
adc
xor
xor
push
jns
cmpsl
xor
and
shr
xlat
jne
xor
lret
xchg
pop
mov
xlat
cmp
popl
shr
mov
pop
in
fimuls
jno
lea
sbb
or
pop
xchg
pop
movsl
nop
jmp
out
leave
call
sub
jmp
and
inc
mov
divl
lea
push
movsb
fsubs
lds
and
xorb
in
mov
mov
cmp
cli
dec
xchg
jg
daa
and
jbe
nop
sbb
stos
xor
mov
sbbl
jp
subb
cmp
xchg
mov
int3
pcmpgtw
dec
mov
sbb
xchg
inc
jne
xor
add
jnp
sub
jecxz
test
adc
arpl
inc
sbb
and
and
lock
mov
in
imul
enter
pop
sbbl
rcrl
pusha
xchg
push
cld
jmp
dec
rcrl
arpl
xchg
out
and
cmp
test
ror
in
stos
mov
jp
or
fists
sbb
push
jmp
pop
ss
out
aas
dec
inc
std
cmpsb
fsubp
sub
dec
lahf
push
in
pusha
pop
outsl
fwait
sbb
int
inc
and
cmpsb
sub
xlat
arpl
mov
insb
int
mov
mov
mov
inc
cmc
mov
cmc
fs
cmp
push
and
inc
negl
nop
cmp
xor
inc
ret
or
dec
out
aad
ds
outsl
stos
jmp
adcb
mull
cwtl
inc
and
ljmp
je
cltd
mov
loope
dec
stos
sarb
and
incb
push
ret
loopne
jge
mov
idivb
pop
mov
adc
sub
mov
xor
sbb
test
xor
movl
enter
arpl
pop
ljmp
mov
dec
dec
mov
cmp
in
mulb
rdpmc
popa
add
jl
and
add
or
mov
scas
sahf
mov
dec
add
mov
mov
lods
sbbb
pop
aas
lret
pop
jo
xchg
int
mov
in
mov
sbb
xor
icebp
sarb
hlt
adc
mov
ss
je
mov
fwait
push
shrl
cmp
dec
sbb
pop
fwait
mov
lret
loope
sahf
fbstp
xor
int
add
ret
cmp
stos
das
into
test
xchg
hlt
sahf
ljmp
fldpi
cmp
lods
popa
mul
inc
data16
fsub
icebp
daa
sti
sbb
sar
mov
sbb
jns
mov
out
rolb
jnp
fsubs
inc
mov
aad
vmovdqu
push
sarl
mov
cmpsl
adc
push
jmp
jnp
pop
add
shlb
movsb
adc
fsubrs
mov
inc
int3
js
mov
in
nop
lcall
mov
push
jnp
mov
lods
mov
jecxz
sbb
iret
xchg
add
xchg
test
addl
sbb
test
int3
adc
mov
sbb
stc
test
ljmp
hlt
mov
call
iret
out
sbb
test
enter
dec
pushf
mov
sbb
jbe
and
enter
jb
pcmpgtb
sti
sbbb
xor
mov
mov
or
ret
push
gs
jne
and
popf
pop
dec
xlat
jne
mov
jne
pop
test
sbb
or
fnstenv
or
out
pop
xchg
push
insb
std
jnp
les
mov
or
cmpsb
dec
pop
sub
popf
pushl
jecxz
dec
ret
sbb
aad
sub
cltd
insl
mov
int
clc
pop
adc
shrd
insl
dec
xchg
pop
dec
stos
mov
roll
xor
cwtl
pop
aad
xchg
lcall
in
or
push
dec
es
fs
movsb
ja
gs
pushf
insw
dec
int
ljmp
cli
rclb
jmp
xor
jl
sbb
popf
mov
fucomp
pushf
fwait
pop
mov
and
int3
cwtl
mov
out
and
dec
lea
jmp
jp
pop
xchg
mov
vsubpd
fcoms
aad
loopne
adc
jo
xor
mov
ja
unpckhps
and
cmc
cltd
jge
or
add
or
mov
fs
xchg
mov
jp
test
les
dec
pop
mov
add
out
mov
fs
lea
cmp
jbe
sub
stc
stc
sub
in
dec
imul
push
das
pop
mov
clc
andl
jle
xchg
imul
lds
xchg
sub
inc
decb
pop
bnd
int3
fdivrs
add
mov
ss
jmp
pop
cmp
mov
sub
push
addr16
sub
and
fists
adc
data16
dec
call
fiaddl
xchg
xchg
push
lcall
mov
and
pop
sahf
loope
mov
or
sub
jno
xlat
cmpb
pop
mov
jecxz
add
lcall
sbb
iret
rclb
mov
popa
sub
inc
mov
mov
sub
xor
cmpsl
mov
stc
lahf
dec
sub
rcrl
sbb
mov
outsl
pop
sbb
enter
test
xor
xchg
aad
push
int3
clc
push
into
sub
sbbl
es
jmp
fdivrs
mov
pushf
int3
adcb
out
add
nop
xlat
pop
inc
cli
fwait
mov
icebp
or
jo
ja
repz
lock
sub
pop
adc
mov
sbb
icebp
loope
subl
test
arpl
adc
cmp
mov
fmuls
in
call
lods
and
jecxz
jecxz
push
jae
cld
mov
gs
pusha
jmp
push
lret
xchg
xlat
push
mov
xor
mov
inc
sbb
iret
inc
repnz
mov
aam
or
pop
jne
jb
jns
mov
mov
gs
jbe
cmp
jb
movsl
mov
mov
out
pop
jmp
inc
lret
sub
xor
cmc
sarb
dec
pop
push
cltd
fstl
fcomps
lret
sub
ret
mov
fidivl
mov
xor
or
aas
std
lods
dec
dec
jns
lods
push
mov
jg
pop
mov
lea
stc
cmp
push
dec
xchg
push
adc
mov
mov
lock
mov
and
jne
fs
jnp
inc
sub
mov
cmp
mov
repz
aad
inc
mov
movl
and
fidivrs
int3
jb
xchg
cs
fs
push
push
mov
rolb
jge
pop
add
fiadds
pop
sbb
jns
pop
in
dec
sar
adc
cmp
push
jb
or
cwtl
movsl
push
sbb
daa
mov
popa
pop
cmp
mov
push
mov
movsl
jecxz
vfrczpd
xchg
sub
popa
add
inc
negb
jns
jnp
mov
std
push
mov
adc
pop
xchg
or
mov
filds
push
mov
add
repnz
jle
das
mov
pop
dec
lock
mov
push
dec
mov
mov
in
cmp
mov
lahf
mov
cmpsb
clc
lea
or
stos
scas
xor
xchg
sbb
pop
pushf
sbb
sbb
fs
sbb
call
pushf
movsl
and
cs
cmpsl
add
xlat
stos
or
jne
sti
mov
lahf
mov
in
popa
sahf
shlb
fstps
inc
arpl
cld
sub
sbb
pop
mov
jne
pop
mov
insb
test
lcall
jge
scas
cmp
cmp
lods
jp
inc
and
inc
sub
xor
and
mov
and
stos
adc
push
out
and
das
mov
sub
mov
push
push
popa
adc
adcb
and
testl
out
ficoms
cmp
cwtl
lret
ja
adc
cmpsl
icebp
mov
popa
cmp
es
fsubrs
cmpsb
mov
lds
pop
jmp
xchg
scas
fnstsw
mov
add
jmp
and
and
sub
mov
pop
push
leave
inc
cmp
and
jge
lret
inc
push
mov
enter
inc
and
cmpsl
outsl
adc
push
cs
lahf
shll
xlat
sti
push
scas
repz
aaa
adc
js
jae
popf
fnsetpm(287
mov
notl
push
mov
leave
xor
mov
mov
lcall
jne
cmp
rcrl
push
add
popf
das
stos
dec
mov
mov
dec
pop
test
in
push
pop
pop
push
sbbb
inc
xchg
fcomip
pop
jbe
jno
leave
inc
jae
les
icebp
mov
xor
das
jbe
add
pop
sbb
and
je
test
sub
mov
adcb
addr16
popl
xor
in
frstor
fstpl
cmp
ret
addr16
dec
rcrl
and
sub
and
add
stos
mov
adc
scas
insl
xorb
xchg
pop
xchg
leave
xor
int3
insb
and
incb
popa
stos
push
xchg
push
movsl
in
adc
jp
out
push
std
aad
hlt
dec
push
xchg
lahf
pop
sbb
and
jo
std
inc
jbe
sub
add
and
pop
xchg
xchg
fadds
jnp,pn
call
and
jnp
inc
mov
ss
or
dec
pop
sub
lcall
xchg
jo
mov
xchg
dec
or
pop
mov
int
mov
imul
jmp
mov
push
xor
lret
xchg
or
or
push
cld
mov
and
mov
mov
push
out
push
jg
ret
jp
sbb
dec
jl
adc
insl
lret
sub
mov
sub
rorb
fldl
push
push
or
or
dec
stos
aad
sbb
jne
xor
lret
pop
xor
dec
cmp
mov
cmp
ret
add
lret
cwtl
fwait
sub
in
cli
sarl
push
fiaddl
mov
movsb
dec
fnstsw
xchg
ljmp
in
mov
leave
jmp
xchg
inc
dec
incl
fists
mov
xor
mov
jb
fmulp
lahf
cmp
push
cmc
push
in
call
xchg
scas
sbb
pop
mov
ds
push
mov
arpl
inc
sub
dec
and
jno
sub
cmpsl
inc
mov
in
xchg
fmul
js
or
mov
nop
imul
sbb
and
sub
fnstsw
mov
es
lods
fimull
mov
fisttpl
insb
jo
cmpsl
and
sub
pop
xchg
test
insl
pop
cli
scas
xchg
mov
xor
mov
jmp
loopne
inc
or
loope
insb
mov
mov
out
push
xor
push
jecxz
out
sub
mov
adc
sbb
pop
loop
ja
cmpsb
pusha
dec
repz
pusha
sbb
dec
mov
cli
add
rorl
dec
and
mov
lock
xor
push
pop
sti
pop
popa
in
mov
cmpsl
iret
int3
xchg
lea
xor
movsl
fsubl
js
cmp
or
ret
movsb
jo
arpl
xlat
sub
dec
movsl
movsl
mov
stos
out
call
sbbb
xchg
je
ljmp
xlat
cmp
push
jo
inc
mov
push
ret
xchg
pusha
in
and
push
movsl
or
inc
popf
jae
popa
sub
xchg
pop
xchg
adc
add
addr16
cmp
stc
testl
mov
jae
dec
sub
cmpsb
popa
fidivrl
or
iret
popa
std
jae
mov
pop
xor
mov
xor
loop
into
imul
ss
iret
cli
push
cmpsl
dec
je
sub
lea
stos
mov
test
xor
push
testl
lea
movsbl
xchg
or
in
in
mov
xchg
idivl
lock
roll
mov
adc
std
ds
mov
and
xchg
es
cmp
insb
inc
sbb
sbb
pushf
mov
mov
pop
mov
fidivl
pop
or
outsl
shll
js
in
cmp
and
xchg
mov
sub
cmpl
push
xor
fimull
mov
and
cmp
mov
ret
mov
jo
sub
adc
incl
cmp
pop
repz
hlt
mov
add
pushl
xorl
out
mov
add
pusha
mov
mov
mov
mov
xor
mov
popa
sbb
inc
dec
out
testl
sub
call
jno
mov
divl
adc
movsl
pop
pop
test
mov
cltd
out
xchg
loope
std
pushw
in
rorb
pop
cmp
inc
sbb
push
cmp
lock
xchg
push
rol
dec
fwait
or
cmpsl
out
aas
mov
xor
pop
mov
dec
and
es
in
lret
mov
push
dec
pop
push
mov
pushf
jo
xchg
imul
aad
or
stos
mov
mov
adc
xchg
pop
inc
pop
sub
xchg
clc
pop
and
cmpsl
push
push
xchg
mov
clc
mov
push
mov
dec
xor
scas
ficomps
test
cld
adc
dec
sub
lret
mov
cmp
enter
xlat
mov
jb
pushf
movsl
inc
push
mov
jp
enter
fmull
daa
arpl
pop
pop
push
fwait
cmpsb
aad
aad
fstpl
xor
xchg
dec
mov
mov
cmc
jp
ror
int3
into
mov
lret
adc
cmc
mov
push
dec
fisttpl
dec
mov
cmpsl
insb
lret
pop
mov
dec
mov
and
push
add
push
fcomp
test
out
push
inc
fisubrl
mov
xchg
lods
mov
jbe
or
in
das
loop
lds
dec
or
mov
fstpt
aas
shr
xchg
xchg
push
arpl
popa
popa
sbb
in
hlt
out
add
mov
mov
xor
push
pop
push
loope
jecxz
imul
mov
inc
bound
out
sub
pushf
push
xlat
cmp
scas
pusha
ds
cld
inc
insb
or
lcall
sbb
jecxz
mov
push
sub
and
lock
pop
adc
pusha
aas
jb
ss
nop
popa
mov
ja
stos
popa
out
xchg
mov
jae
bound
xchg
xchg
dec
pop
xor
lods
cltd
inc
or
ljmp
sub
or
jl
or
adc
andl
mov
and
lods
push
pop
mov
mov
inc
mov
jl
pop
xchg
dec
ret
and
or
xlat
cmp
or
call
push
or
rorb
mov
pop
popf
mov
lods
jns
arpl
jle
loope
jnp
sub
cmpsb
sysret
xchg
repz
mov
xchg
out
dec
cmp
push
lea
jnp
push
jbe
jmp
lds
loopne
and
jnp
loop
in
loop
xchg
or
push
mov
mov
clc
rorb
aaa
jg
add
inc
sbb
fdivs
fbstp
cs
push
inc
insb
popf
push
adc
cmovl
in
xor
dec
out
outsb
jle
inc
adc
or
mov
repnz
lea
adc
sbb
popa
dec
icebp
inc
aas
adc
imul
xchg
mov
inc
push
push
inc
rcr
call
add
jne
shrb
cs
cmp
repnz
adc
shl
daa
shll
shll
lea
xor
cmp
inc
scas
mov
nop
mov
mov
sub
cli
hlt
shrl
aas
dec
sbb
push
mov
dec
es
shll
xlat
jmp
xor
or
mov
push
sub
mov
loop
out
stos
add
cmp
add
dec
jnp
mov
mov
popa
sbb
sub
comiss
push
mov
jp
push
sbb
out
and
lea
sbb
gs
sbb
repnz
push
rorb
pusha
les
outsb
cld
jbe
cmpsl
jecxz
into
fidivrs
xor
mov
stos
pop
sahf
xchg
insl
subl
aam
jnp
jp
mov
push
cmp
jge
pop
stos
test
push
repz
push
pop
push
inc
cmp
cmp
fildll
push
jmp
cmp
dec
jg
mov
sub
xor
ret
scas
shrl
mov
xor
lds
lahf
fistps
inc
sbb
in
notb
jecxz
loope
jp
popa
negb
mov
shlb
or
jns
adc
mov
aad
xchg
jg
pusha
sub
xor
cwtl
pop
cld
add
adc
cltd
lods
inc
rol
frstor
jmp
pop
push
iret
sub
cmpsb
adc
int
inc
lock
notl
lock
sub
lds
in
jae
cmc
add
pusha
inc
outsl
inc
mov
in
rcrl
mov
dec
loopne
mov
sbb
faddp
sarl
shlb
test
push
mov
popa
jne
test
cltd
jecxz
insl
insl
lahf
pop
jge
in
xor
jo
cld
cs
ror
adc
outsb
jl
jp
test
or
iret
mov
out
ja
mov
pop
fmulp
xchg
xchg
xor
push
sbb
mov
or
adc
shr
add
and
ss
daa
clc
mov
enter
inc
mov
pop
push
jmp
in
arpl
lea
mov
xchg
xchg
dec
incl
ja
jae
out
push
jo
inc
xor
mov
jecxz
sarl
orl
imul
xor
pushf
popa
mov
push
jp
aad
mov
add
gs
adc
sbbl
mov
fldl
bound
pusha
push
adc
fstl
pusha
jmp
push
and
fldenv
fsubr
mov
rep
mov
jb
cmp
pushf
xchg
pop
imulb
adc
jo
lods
bound
mov
nop
add
sub
shlb
push
dec
std
call
mov
popf
fiaddl
insb
add
aas
ret
mov
mov
add
test
lea
fwait
jmp
loop
movsb
loop
add
and
lcall
xlat
mov
bound
push
ljmp
fildl
xor
pop
rclb
adc
push
in
push
dec
mov
and
scas
cmp
mov
roll
jne
pop
mov
popa
int
sub
add
dec
xchg
enter
rorl
mov
push
pop
jo
fstl
jbe
jae
cmp
and
mov
rcl
dec
mov
test
xchg
dec
or
sub
jo
lock
mov
mov
and
xchg
push
fiaddl
xor
dec
fdiv
jb
lcall
push
stos
xchg
mov
xchg
jge
ds
jmp
int3
scas
cs
pop
mov
mov
inc
jb
xor
mov
inc
cmp
mov
gs
mov
pop
cltd
sub
es
xor
push
loope
push
leave
rcr
ror
sub
call
imul
inc
seta
mov
jbe
cwtl
lcall
xchg
lods
or
or
int
pop
mov
push
mov
jge
pop
ljmp
mov
sti
and
mov
add
int
xchg
pop
mov
inc
imul
and
or
lods
shrl
jo
push
or
push
add
call
lock
cmp
sub
lea
rcr
or
out
add
xor
shrb
jne
mov
loopne
out
clc
shrl
mov
mov
lret
sub
into
and
dec
sbb
scas
xor
lea
shlb
xor
in
push
cltd
push
std
fcompl
sub
lahf
les
mov
stos
outsb
fcmove
push
int
cmpl
addb
sar
test
mov
repnz
mov
into
cwtl
popa
cmpsl
push
sub
or
adc
xor
and
mov
xor
fsubrl
xor
nop
push
pop
loope
stos
es
int3
lock
adc
test
sbb
mov
add
std
and
sbb
mov
adc
sbbl
jno
or
loop
icebp
jmp
jmp
pop
xorl
cmp
les
push
pop
rcl
loopne
adc
andl
pop
cmp
push
iret
lods
xchg
rolb
xchg
lahf
xor
rcrl
dec
ss
cmp
lahf
mov
aaa
inc
mov
sub
cli
xor
mov
insb
mov
pop
ret
lea
and
dec
sub
into
repnz
cmp
pusha
mov
xchg
pop
dec
push
push
sahf
enter
loop
das
mov
and
sahf
mov
into
ds
mov
hlt
dec
and
into
inc
scas
nop
ja
xor
mov
dec
enter
ret
sub
mov
daa
aas
mov
in
rcrb
mov
add
iret
push
pusha
dec
outsl
mull
outsl
cmp
inc
stos
cmp
outsb
jl
pop
xor
inc
hlt
sub
dec
mov
cmp
stos
adc
push
pop
dec
push
and
imul
push
in
cli
movl
jae
or
jb
cmp
out
sbb
out
test
stc
mov
pop
xchg
cmp
fistps
add
into
iret
mov
push
fwait
rclb
jmp
jno
and
call
out
adc
add
or
xor
mov
and
xor
das
xor
mov
adc
std
icebp
hlt
fistpl
bound
lahf
addl
cmpl
xor
inc
cmp
rorl
enter
xor
or
sub
repnz
push
rcrb
sub
fsincos
lahf
pop
mov
pop
pushf
xchg
in
mov
lret
jae
add
lods
sahf
add
xchg
or
pop
pop
mov
lds
test
insb
mov
xchg
mov
mov
pushf
imul
adc
sbb
fldl
loop
or
pop
jl
xlat
je
jb
gs
addl
cmp
orb
add
push
rcrb
pop
sbb
mov
test
loopne,pn
mov
outsl
imul
dec
cmc
or
lods
into
ret
cs
loop
pop
inc
push
cli
mov
les
push
aam
inc
dec
lahf
push
xor
rclb
mov
dec
adc
into
imul
and
mov
add
test
xchg
pop
or
jmp
sarb
arpl
cmc
sarb
mov
sbb
jb
inc
jne
nop
lcall
push
stos
cmp
inc
dec
es
rol
dec
inc
fwait
xchg
fbld
lock
pop
jo
lods
push
iret
cmp
dec
int3
stos
addr16
loopne
lret
stc
add
cmp
loopw
xchg
cmpsl
jl
mov
insb
mov
aam
xor
scas
daa
jae
xchg
movsl
cmpsl
outsb
adc
mov
mov
lret
ret
xchg
and
dec
mov
lahf
add
icebp
xchg
andb
jns
loop
stc
add
out
push
loop
dec
popa
xor
cmp
dec
movsb
jnp
jmp
push
popa
sub
jg
stos
daa
cld
data16
cmc
ja
loope
jmp
inc
loope
daa
or
add
inc
sti
sbb
mov
adc
iret
popf
fisttpll
gs
cmp
dec
inc
daa
pop
stc
xchg
adc
and
or
sbb
mov
bound
cmp
dec
pushf
cmp
mov
sti
sub
xor
daa
scas
shlb
mov
std
stos
fwait
mov
in
push
lcall
jecxz
mov
jg
inc
insb
and
or
cmpsb
daa
mov
sub
cmpsl
sub
add
jno
leave
xor
cmp
nop
aam
push
add
mov
lods
in
mov
cmp
nop
mov
xchg
push
cmp
sbbb
dec
mov
mov
je
cmp
mov
sbb
mov
out
fmul
gs
fisubrs
cmp
lods
fsubp
inc
push
sub
int3
call
jbe
xchg
test
out
push
ljmp
movsl
pop
dec
leave
subl
mov
imul
xor
enter
mov
and
ljmp
add
push
into
add
pop
movsb
in
pushl
and
mov
test
adc
hlt
fucomp
mov
mov
and
mov
pop
sbb
jecxz
mov
sti
cli
ficoms
clc
xchg
jg
out
push
ret
pop
repnz
sarb
cld
fiaddl
add
test
adcb
idivb
mov
movsb
aad
sbb
push
scas
jno
push
das
mov
dec
enter
shl
mov
aam
fstps
aaa
pop
or
xor
and
out
xchg
add
mov
popf
xor
fsubrl
cmpsl
fwait
cmp
lock
or
adc
stos
jg
jns
xchg
faddl
jns
xchg
das
xchg
in
jle
xor
sti
xchg
shll
mulb
inc
inc
shlb
dec
inc
xchg
mov
xchg
into
add
sub
xchg
mov
out
or
pop
xor
fbstp
mov
pop
scas
mov
test
inc
mov
cs
arpl
mov
xchg
push
fstpt
mov
mov
mov
cmp
jae
loope
hlt
sarb
dec
cmc
xchg
jno
icebp
fildll
pop
mov
cld
jmp
push
xchg
mov
jecxz
lahf
or
testl
in
mov
dec
repz
jo
adc
lea
andl
push
pop
cmp
ret
mov
dec
jns
sbb
ss
out
jmp
insl
and
dec
jmp
lock
shl
iret
sbb
cmp
int
mov
test
xor
cwtl
lods
xchg
xchg
push
dec
movsb
inc
cmc
ret
pop
xchg
mov
lds
sbb
mov
push
or
mov
pop
bound
sub
mov
lret
addl
lret
add
dec
pop
repnz
lods
push
out
sbb
inc
jle
imul
ja
mov
lods
in
stos
call
sbb
out
sub
sbb
xchg
xor
lcall
enter
repnz
idiv
and
shl
xchg
cmpsl
aad
push
int3
inc
pop
dec
lea
cltd
jbe
int3
mov
push
inc
movsb
inc
mov
cwtl
mov
pop
add
outsb
cmp
jmp
xor
add
jnp
adc
decl
scas
hlt
repz
int
push
test
adc
or
pop
and
mov
inc
dec
sbb
jnp
loope
push
mov
loope
push
mov
aad
stos
mov
mov
push
call
pop
enter
sbb
mov
nop
mov
aas
xchg
in
pop
sbb
xlat
jns
cmp
scas
mov
mov
sub
xchg
jecxz
outsl
push
aas
sbb
add
pop
fcom
sub
add
or
call
cs
push
push
sahf
jnp
cmc
or
clts
push
push
or
orl
es
call
ret
adc
fnstenv
xchg
mov
pusha
sbb
add
or
cli
test
dec
lods
jns
outsl
fwait
cs
push
pop
bound
bound
mov
pop
mov
in
xor
xchg
cmc
roll
inc
movsl
sbb
insb
mov
pushf
sub
lock
cmp
mov
movsb
std
call
addl
ss
js
les
mov
inc
mov
in
cmp
negb
adc
sbb
ds
cmp
xor
test
xchg
das
fisubrs
cmc
ret
add
enter
jle,pt
jmp
fstpl
pop
inc
ljmp
dec
mov
inc
dec
outsl
js
cltd
in
mov
sbb
xor
xor
xor
imul
xchg
bound
jl
mov
mov
movb
lret
add
jge
push
xor
arpl
test
lea
jb
adc
jbe
pop
loopne,pn
mov
xchg
lds
std
test
arpl
pop
pop
mov
andb
push
jb
dec
pop
pop
dec
lea
outsb
std
mov
sub
jecxz
mov
add
jg
sbb
cld
push
jno
or
push
je
jge
dec
sarb
shrl
add
and
lods
xchg
popa
dec
shrl
dec
add
int3
push
add
jle
stos
xchg
jecxz
aam
fdiv
rcl
xor
cmpsb
mov
subb
inc
jp
mov
pop
sub
sbb
je
adc
push
jle
cmp
xor
std
jbe
ljmp
rorl
imul
pop
test
out
or
jbe
cmp
xor
mov
hlt
es
lods
subb
push
shll
scas
stc
dec
adcl
jmp
push
push
movsb
sub
cld
lock
and
push
loop
decl
or
out
lds
sbb
dec
lods
test
pop
in
lods
and
xor
fcmove
pop
push
lret
sub
aaa
cmp
cmp
xchg
xchg
out
gs
icebp
jl
insl
inc
iret
lahf
int
notb
jle
xor
nop
mov
stc
dec
sbb
rcll
fucomp
xor
fcmovnu
out
call
xchg
andl
xchg
xor
shrb
or
imul
dec
push
cwtl
lock
push
pop
inc
or
or
jb
mov
pop
and
push
imul
mov
sbbb
insb
aaa
orb
jmp
sbb
xor
jne
movsb
ja
inc
js
mov
sub
and
fisttpll
negl
add
fbstp
sub
mov
push
ja
mov
inc
adc
xor
shlb
repnz
and
aam
adc
nop
in
lods
fsts
fsub
call
jmp
and
jne
cli
inc
mov
es
lcall
cmpsb
or
mov
ljmp
add
jge
and
negl
ljmp
push
jp
out
stc
mov
sub
ljmp
and
mov
outsl
mov
int3
sbb
mov
sbb
and
xchg
jp
sbb
int
repnz
or
or
ss
add
in
repnz
dec
mov
mov
fstpl
daa
adc
outsb
cwtl
jo
cmp
repnz
jae
in
mov
addr16
push
mov
mov
in
adc
cmp
test
xchg
and
dec
das
insl
xchg
push
loop
mov
ret
bound
jb
sbb
xor
lock
mov
xor
fwait
sub
cwtl
pop
rcl
xor
nop
sbb
xor
arpl
nop
icebp
xchg
shlb
stc
cwtl
dec
push
daa
mov
pop
test
shll
aam
jmp
pusha
fcmovbe
adc
lds
mov
adc
adc
xor
jb
mov
arpl
lret
sarl
jbe
and
and
sub
mov
sbb
js
inc
adc
hlt
jbe
fldt
in
stc
add
jbe
push
fidivs
js
gs
xorb
jb
lds
xor
lret
inc
lcall
outsl
mov
xchg
orb
in
fsubp
inc
dec
adc
dec
mov
and
xor
roll
xor
mov
imul
pop
data16
lret
cmp
loop
ret
dec
je
adc
fcomps
frstor
fidivrl
dec
adc
mov
fsubs
dec
mov
jp,pn
loopne
or
aad
fstps
mov
js
add
push
jge
pop
xor
pop
push
ja
adc
cltd
in
scas
push
lret
stos
and
pop
shr
clc
or
sub
inc
aad
icebp
lds
xor
cs
sub
stos
mov
inc
fmul
clc
in
dec
mov
stos
das
testb
fcmovb
icebp
mov
in
aas
pushf
in
xor
sti
faddl
add
push
sub
bound
lcall
icebp
xchg
dec
les
shr
cmp
call
js
cmp
xchg
push
push
cmpsb
pop
loope
xchg
mov
cld
fldcw
test
and
mov
dec
xorl
mov
popf
scas
imul
dec
xchg
or
rcrb
jp
inc
inc
and
out
fnstcw
aas
jo
add
jp
movsb
or
stos
inc
fsubrl
jmp
icebp
dec
outsb
and
jbe
xchg
pop
mov
adc
mov
test
and
stc
add
inc
stc
fcomps
call
push
sub
sub
movsb
sub
xchg
andb
add
repnz
iret
mov
lods
out
push
decl
scas
aas
pop
xor
and
cltd
in
dec
aaa
cmpsl
test
faddl
mov
arpl
dec
jl
enter
pop
pop
sub
add
insl
cmpsb
dec
ja
and
testl
dec
adc
mov
mov
jle
out
xor
mov
xchg
mov
push
call
mov
mov
dec
xchg
stos
pop
xchg
aam
fildl
jo
xchg
aaa
pop
dec
inc
or
add
pop
into
dec
jp
pop
push
inc
dec
sub
pop
or
jg
lret
movsl
loope
xchg
sti
loopnew
dec
test
outsl
jmp
cmc
test
cld
mov
adc
jp
ja
in
or
pop
imul
subb
loope
or
or
test
pop
pop
clc
dec
lret
xor
mov
mov
and
xchg
mov
mov
popa
cmp
and
xchg
xor
cmp
int3
loopne
xlat
dec
jno
push
pop
jl
jae
and
jnp
push
std
js
adc
fs
sbb
push
or
lea
fcomps
xor
xor
enter
fidivs
aaa
mov
mov
add
into
xchg
rcrb
lcall
loope
push
sbb
xor
ret
cmp
repnz
aas
cmp
sub
cwtl
sub
loopne
test
mov
mov
daa
jmp
sti
cltd
adc
adc
into
rolb
xchg
stos
mov
lods
mov
adc
push
test
lahf
jne
xchg
dec
mov
es
pop
jle
push
idivb
and
pop
sahf
mov
pop
mov
mov
mov
ret
ja
stos
insl
add
hlt
add
std
int3
cmpsl
xchg
mov
jno
xor
sbb
loopne
mov
mov
int
loopne
into
mov
inc
fmull
std
pop
mov
cmpl
outsb
push
xor
lds
in
mov
movsl
fcmovbe
mov
inc
xor
inc
lods
cmp
scas
xor
pop
pop
ds
mov
leave
scas
je
mov
push
jmp
sbb
sti
xor
cmp
movsb
sarl
outsl
mov
popa
push
shll
scas
imul
cmp
xchg
divb
aaa
lods
hlt
and
dec
in
fildl
mov
or
insl
sub
test
add
rcrl
rep
leave
repnz
lcall
inc
pop
and
jp
rorb
add
fcoms
adc
mov
mov
sbb
xchg
test
or
cmpsl
mov
ret
cmp
xor
pop
cwtl
sub
int3
dec
xchg
je
jmp
xlat
or
add
sti
or
in
jns
adc
aad
cwtl
mull
rcrl
iret
cmc
push
or
stos
aad
xchg
int
call
lods
shrb
test
ficoml
out
out
jle
pop
shrl
cmp
cmc
movsl
mov
add
cmp
push
stos
add
jns
cmp
loopne
jmp
call
sub
std
sub
hlt
outsb
mov
test
outsl
sub
push
ja
xchg
popf
in
arpl
test
mov
into
call
jns
divb
stos
sub
pusha
test
and
stc
shll
mov
or
inc
inc
incl
nop
data16
sub
sub
inc
cmp
sti
out
push
popf
sarb
les
loopne
pop
aaa
leave
inc
insl
sbb
mov
and
lea
xor
stos
xchg
ss
jb
pop
dec
sbb
flds
in
jno
adcl
dec
pop
adc
push
mov
stos
and
jbe
mov
sub
push
pop
stos
out
sbb
sub
fisubl
test
out
jo
movsb
xlat
mov
outsl
pop
movsl
movsl
movsb
sahf
in
andb
pop
and
add
inc
mov
xchg
add
push
push
jmp
sbb
test
outsl
xchg
sbb
sbb
adc
insl
imul
fcom
mov
jmp
xlat
jns
pop
sbb
inc
cltd
lahf
jecxz
fistps
movsb
lcall
mov
pop
mov
mov
outsl
add
decl
cmp
cwtl
lds
mov
aam
or
cmpl
push
xor
sbb
xor
push
lret
movsb
iret
nop
sbb
out
cmp
push
push
sbbl
ljmp
mov
mov
xchg
int
sub
push
push
dec
in
dec
and
adc
scas
ds
pop
adc
pop
in
cmp
loop
xor
dec
mov
scas
mov
cmp
xchg
pcmpgtw
loope
xorb
fwait
inc
inc
mov
sbb
mov
cmpsb
xchg
inc
mov
bound
bound
sti
enter
loopne
pop
mov
push
add
add
cs
xchg
sub
in
jbe
push
loop
mov
in
pop
test
mov
imul
mov
repz
out
dec
mov
ss
pop
test
clc
aam
lret
cld
or
out
adc
push
push
sbb
in
push
repz
loop
gs
cmp
push
xchg
es
mov
push
and
jp
sbb
iret
in
mov
out
scas
cli
aad
mov
popa
roll
mov
out
clc
mov
jo
and
mov
pop
sbb
into
insb
inc
loopne
data16
je
scas
stc
jne
je
sbbb
jle
mov
xchg
frstor
in
sbb
in
push
mov
or
loope
xor
frstor
fcoms
push
dec
xor
and
leave
imul
fwait
inc
push
pop
mov
and
cmp
mov
jg
and
sub
subps
mov
in
js
mov
xor
push
jecxz
rcrl
popa
push
scas
sbb
insl
xor
xchg
enter
scas
cli
ds
push
inc
es
dec
mov
push
and
jmp
jmp
jle
push
outsl
cmpsb
cmp
lods
mov
mov
cld
pop
mov
jp
inc
jne
jno
xchg
mov
into
pop
test
repz
iret
in
adc
mov
jmp
mov
jp
adc
inc
inc
fnsave
jae
or
mov
leave
std
mov
out
fsub
sar
inc
and
rcrl
roll
pop
bound
xor
movb
into
jecxz
mov
mov
xchg
mov
daa
add
dec
xchg
out
loopne
adc
xchg
xor
jne
jge
out
push
or
sbb
push
mov
add
scas
packuswb
inc
iret
int3
scas
sub
js
rorl
mov
clc
adc
push
xor
inc
inc
jne
mov
lock
jge
cs
cs
fcoml
dec
jb
or
push
add
icebp
push
lods
std
jecxz
sbb
in
iret
xor
pmuludq
jb
or
adc
lods
data16
popa
pushf
insb
aaa
push
fs
pop
mov
std
cmp
loop
pop
mov
jne
lret
xchg
lods
shll
dec
movsb
lds
pop
xchg
inc
lahf
push
sub
in
add
or
jecxz
lock
jmp
rcll
rolb
test
mov
jb
sub
stos
jle
push
out
insl
and
jl
pushf
fidivl
adc
cmp
repz
andl
push
cmpsb
mov
push
mov
mov
cmc
lea
xchg
mov
shrb
sti
fsubp
cmp
pop
fdivs
sbb
fistl
imul
insl
cmp
jmp
mov
arpl
pop
sub
ud0
aam
push
jle
or
test
dec
nop
pusha
add
cmp
pop
sub
fldt
xchg
lock
pop
push
mov
scas
test
addr16
imul
inc
rolb
inc
pop
in
inc
je
mov
pop
sub
xor
sbb
out
add
mov
iret
nop
push
in
shr
mov
dec
cwtl
insl
adc
stc
rcr
stc
insb
call
jnp
insl
cmp
add
aas
shrb
aam
outsl
mov
xor
add
adc
ds
clc
pushf
inc
cmp
mov
maskmovq
testl
sar
test
dec
repz
or
pop
int
jns
sbb
jmp
sarl
lods
inc
aam
pop
in
push
testl
or
push
mov
mov
add
add
shrd
inc
pusha
int3
or
xlat
cmp
mov
cmp
mov
cmp
ja
push
mov
cld
xlat
dec
mov
mov
sbb
lahf
push
outsb
adc
mov
adc
pop
cmp
in
sbb
push
fdivl
jg
das
insl
adc
arpl
and
movsb
test
push
or
iret
xor
outsl
inc
ja
mov
push
imul
push
xchg
add
std
dec
push
adc
pop
mov
pop
test
xchg
xchg
dec
movsb
inc
loopne
jne
imulb
pop
adc
pop
mov
sbb
cs
add
sub
stos
fidivrs
subl
jle
mov
aaa
dec
addr16
dec
ss
or
call
lea
sub
ret
test
mov
fstps
xchg
jle
cmp
mov
scas
xchg
outsb
test
fidivs
test
xchg
sub
sub
cmp
aad
xchg
pop
pop
stc
or
mov
lds
test
push
aas
adc
adc
mov
push
movsl
dec
mov
pop
mov
pushl
outsl
pop
dec
mov
loopne
test
imul
or
fsubrl
outsb
aaa
test
aaa
and
test
addb
test
mov
andl
das
test
mov
adc
fistl
cmp
popa
adc
or
ds
mov
jle
or
jno
stos
xchg
cld
mov
push
ret
call
out
stos
mov
lock
pop
test
add
rcrb
aam
jle
ja
mov
and
sbb
push
mov
stos
xchg
sub
out
and
cmpsl
push
mov
and
cwtl
insb
sarb
or
mov
fcomip
loopne
repnz
dec
pop
sbb
bound
mov
cwtl
cmp
repnz
loope
sbb
icebp
mov
arpl
mov
aas
mov
add
mov
add
mov
jl
ror
push
leave
test
andl
jl
ss
mov
fisttpll
jmp
inc
pop
mov
add
fcomps
mov
sbb
and
mov
push
pop
out
aas
movsl
mov
pop
add
shlb
int
outsb
mull
sub
push
mov
xchg
lret
cmp
push
push
jnp
mov
out
fisttps
xchg
xor
pop
pop
les
dec
lret
xchg
jmp
dec
sub
xchg
adc
lock
lea
jno
lds
dec
adc
fwait
mov
fwait
lret
je
pop
adc
loope
scas
dec
and
fisubl
jo
dec
repz
in
inc
sbb
mov
sbb
stc
das
push
scas
in
jo
jl
ret
aas
cmp
test
xor
add
inc
jb
jl
jbe
mov
xor
ss
mov
in
add
inc
mov
xchg
sub
mov
add
pop
insb
addb
testb
shl
outsl
test
fbstp
adc
popa
push
pop
add
cld
sahf
push
outsb
pop
es
cmc
and
les
and
sbb
sbb
mov
popf
outsl
das
pop
aas
out
aam
aaa
dec
mov
or
adc
adcl
bnd
out
sub
clc
in
xchg
inc
fisttpll
mov
mov
dec
out
cmp
outsl
mov
sbb
cmp
idivl
adc
iret
and
jo
subl
pop
jg
pop
inc
loope
jl
adc
int
mov
lds
bound
jp
lods
push
mov
and
jbe
xchg
incb
and
mov
ljmp
push
orb
fs
cmp
push
mov
dec
test
xchg
dec
mov
sbb
dec
inc
call
or
lret
iret
ret
dec
adc
push
lcall
cmp
je
loope
lcall
jne
iret
imul
in
iret
push
lahf
ret
push
or
dec
in
adc
fsubs
insl
xchg
or
jne
and
ret
mov
ds
lods
and
aam
lea
mov
lret
adc
fldcw
add
sbb
mov
ljmp
lds
lea
mov
outsb
pop
pop
dec
push
mov
pop
mov
aad
iret
das
cmp
xchg
fs
dec
andb
or
shll
repz
sbb
pop
loope
in
cltd
xor
test
in
sbb
fimuls
or
jg
sbb
pop
pop
pop
xlat
ror
push
xor
repnz
imul
adc
xor
in
sarb
nop
pusha
inc
cs
pop
test
pop
and
mov
or
test
cltd
leave
xchg
icebp
sbb
xchg
jecxz
clc
or
and
popw
lret
pushf
mov
mov
shl
and
aad
ret
leave
cwtl
sahf
mov
jb
lret
aas
cmp
adc
add
bound
inc
dec
inc
dec
cmp
popf
int3
mov
push
push
ss
dec
cmc
test
adc
aaa
pop
test
arpl
sahf
jbe
add
int3
dec
push
lods
cmp
and
orl
fs
dec
andb
mov
sbb
insb
push
pushf
rorl
shlb
lods
or
aas
push
ljmp
into
pop
leave
into
movsb
rorl
hlt
adc
add
dec
jb
inc
icebp
mov
inc
popf
inc
and
adc
shlb
mov
cltd
test
shl
ret
in
ss
les
mov
cmp
push
dec
sbb
notb
push
into
lea
push
aas
push
push
cmp
cmpsb
mov
xchg
adc
cmpsb
sub
dec
or
sub
jmp
test
xchg
js
jns
xchg
notb
jmp
cmp
jl
adc
repz
imul
adc
aad
push
jnp
pop
mov
popf
mov
push
sti
pop
int3
rol
xor
pop
shlb
pop
cmp
mov
loopne
loopne
dec
and
inc
add
ss
pushf
cmc
movsb
in
sbb
push
cmp
call
adc
lds
inc
lahf
or
das
mov
xchg
dec
dec
push
xchg
pop
mov
add
jnp
adc
xchg
lock
cwtl
jge
outsl
mov
mov
outsb
fwait
ljmp
cwtl
sbb
inc
push
ret
push
add
fcompl
fucomip
aaa
add
jecxz
push
pop
fstpl
das
cmp
jmp
inc
sub
xchg
mov
inc
shrl
sbb
pop
sub
sub
aas
imul
into
sti
mov
incl
mov
add
cmp
popf
jmp
mov
stos
push
pusha
movsl
sbb
out
jmp
les
cmpsl
orb
notb
fwait
lahf
inc
sbb
cmp
icebp
int3
enter
loop
cmpsl
les
jns
jge
out
je
std
inc
mov
addr16
xchg
rcr
ret
daa
xchg
jb
mov
push
shrb
aaa
outsl
pop
repnz
in
mov
mov
xchg
ds
push
add
lods
scas
dec
scas
sbb
inc
popf
dec
sub
adc
fnclex
xchg
aaa
cmpsl
jg
dec
xor
pop
adc
add
sub
push
xor
sti
popf
scas
pop
lret
mov
sbb
mov
mov
rol
ja
aam
cmp
dec
ret
and
sub
cmp
hlt
cld
test
hlt
xchg
jg
add
sti
test
mov
sub
xchg
jecxz
leave
sbb
scas
mov
xchg
out
mov
addb
sbb
mov
xor
outsb
push
dec
pop
push
sahf
fdivrs
fldcw
push
mov
push
arpl
testl
pushf
lcall
out
imul
sub
push
inc
outsb
frstor
jo
pop
lahf
outsb
and
repnz
jbe
jbe
mov
jle
xchg
stos
test
sahf
les
fimuls
adc
pop
sbb
out
jbe
xlat
cwtl
mov
imul
inc
hlt
jg
rorb
sbbb
shll
add
scas
jmp
lods
jg
jmp
aas
push
add
loop
sbb
ja
clc
jg
mov
fisubrl
movsl
bound
pop
rcr
hlt
clc
push
and
jg
ja
enter
movsb
mov
pop
pop
lock
adc
xor
fs
nop
xor
xor
aam
and
out
add
lds
imul
cmp
roll
fdivrl
jne
mov
adc
jbe
add
or
mov
pop
outsb
stc
pop
std
lods
push
push
mov
and
scas
cs
test
mov
sarl
into
lret
add
xchg
jmp
jge
mov
rclb
xchg
lock
jge
nop
and
mov
je
shrl
or
jp
mov
into
icebp
mov
out
mov
ds
scas
imulb
mov
addr16
in
jmp
popa
rcrl
lret
jno
add
imul
mov
push
inc
xchg
fwait
adc
pop
jo
out
adc
daa
cs
adc
adc
mov
scas
pop
adc
lcall
xchg
jbe
pop
mov
repz
mov
popf
add
ds
mov
scas
or
out
xchg
scas
dec
fisttps
cmp
adc
cmpsb
jecxz
mull
inc
or
out
sub
cltd
repz
fnsetpm(287
dec
std
fwait
je
push
aaa
js
stos
inc
adc
push
dec
dec
adc
push
je
xchg
mov
and
inc
sbb
aam
and
add
dec
jge
fs
int
push
sbb
insl
pop
mov
mov
xor
jbe
imul
or
int
push
inc
pop
mov
sti
mov
test
mov
push
push
cmp
or
clc
mulb
mov
push
es
sbb
dec
shlb
cs
dec
push
out
fdivl
jbe
mov
cmc
push
jo
sub
or
in
js
mov
sbb
popa
int3
cmp
sbb
in
sti
in
ss
jnp
les
pop
mov
enter
fstpl
xchg
add
in
mov
xchg
adc
sbb
into
and
mov
sub
sub
adc
adc
jl
fucomp
fisttps
mov
shrl
push
pushf
adc
movsl
lea
into
aaa
pop
stos
sbb
ljmp
sub
mov
xchg
lods
add
in
jb
inc
xor
loope
mov
push
cmc
xor
dec
mov
sub
ds
in
outsl
sbb
pop
jb
clc
lret
pop
inc
and
leave
outsl
sub
fcmovnb
fimull
insl
mov
push
and
jg
sub
aam
jmp
mov
sbb
addr16
xlat
lahf
mov
aad
lcall
in
pop
jnp
mov
inc
lea
lcall
sahf
sub
mov
loope
mov
cmp
in
jmp
jb
mov
cmp
fistps
mov
xchg
xor
cmp
lcall
fistpl
insl
aaa
mov
out
xlat
push
dec
xor
jne
adc
xor
jae
push
std
push
pop
pop
aad
mov
add
rorl
fistpll
xor
sbb
pushf
mov
outsl
popf
dec
insl
ret
jg
in
repz
data16
arpl
std
dec
clc
push
imul
push
dec
pop
push
dec
mov
cltd
dec
push
ss
in
push
mov
ja
cs
and
push
out
inc
xchg
jae
xchg
shll
pop
test
inc
and
aam
lar
clc
mov
mov
arpl
bound
mov
mov
xchg
es
push
mov
cmp
xlat
outsb
adc
or
jb
cli
push
jmp
pop
ret
jae
pushf
jne
das
xor
dec
lret
leave
adc
sub
xor
int
cmp
in
xchg
sbb
inc
xchg
cmp
pushf
push
pop
add
dec
nop
xor
lods
ficompl
mov
aas
inc
and
inc
shlb
out
adc
shr
mov
sbb
je
mov
xor
rcr
enter
stc
in
scas
fs
repz
cmp
ret
lea
lcall
cmp
out
aaa
stos
adc
jnp
and
mov
andb
aaa
and
lcall
sti
xchg
insb
and
mov
fiaddl
pop
mov
in
std
in
repnz
or
ret
pop
in
pop
call
test
xor
icebp
gs
icebp
insl
inc
mov
cmp
mov
inc
adc
push
lds
or
dec
hlt
into
repnz
fwait
sar
lret
mov
mov
ret
lcall
inc
clc
test
sahf
xor
dec
nop
loop
xchg
pop
imul
pusha
lods
push
shll
imul
jb
or
subl
notb
fucomip
sti
inc
and
push
leave
or
cld
inc
mov
hlt
xchg
leave
push
lock
leave
fmull
rclb
pop
push
insl
push
cli
mov
int3
aas
les
faddl
mov
lret
jge
mov
mov
dec
push
xor
ds
xor
stc
add
loopne
rol
faddl
arpl
push
js
add
pop
pop
int3
lret
and
orb
fdivs
out
sti
test
sub
dec
mov
stc
pop
das
clc
mov
mov
inc
test
stos
scas
dec
add
fs
pop
dec
loope
popf
jne
mov
xor
sbbb
mov
or
sbb
cli
repz
nop
or
pop
xchg
scas
leave
sbb
enter
mov
les
cmpsl
sbb
nop
data16
xchg
imul
loope
mov
cmpsl
shlb
dec
call
pop
push
ja
test
popf
add
es
iret
jae
xchg
rcrb
and
sbb
test
sub
adc
in
test
xchg
dec
sbb
ret
pop
add
popf
sbb
ret
pop
jno
pop
xor
xchg
add
push
std
mov
push
icebp
and
ds
mov
movq
movl
adc
push
push
cmp
pop
lods
pop
xor
push
jb
or
inc
aam
aad
xor
xchg
out
movntq
mov
xor
mov
jbe
fiaddl
call
jl
stos
jb,pn
adc
test
cmc
ret
bound
pop
pop
push
mov
and
lret
xor
sub
testl
inc
or
sub
mov
adc
sub
stc
pop
js
data16
ds
lods
mov
cmp
push
es
out
xchg
sbb
imul
stc
bound
addr16
jne
mov
xchg
mov
jne
push
fidivs
aad
jno
std
outsb
cld
test
ja
cltd
clc
mov
add
cmp
rcrb
mov
inc
push
popa
rcrl
mov
xchg
idiv
jle
pop
ss
repnz
mov
add
fmull
sahf
nop
ret
cmp
repnz
fmull
sub
mov
repnz
mulb
loopne
xor
jg
adc
mov
repz
mov
scas
fmull
jae
mov
daa
xor
sbb
jnp
cld
test
mov
mov
push
jle
imul
rorb
jno
mov
subb
and
xchg
add
sub
lods
leave
test
jl
cmp
cmc
dec
xchg
cli
adc
add
jl
xchg
jl
or
popf
ret
arpl
scas
in
push
and
dec
push
test
dec
xlat
fpatan
into
dec
nop
xlat
rclb
inc
nop
xchg
mov
inc
mov
fbld
inc
movsb
cld
pop
test
negb
mov
sbb
in
jb
idivl
or
inc
sbb
add
sbb
jecxz
sti
lds
call
sub
xor
jne
ljmp
jae
shrl
and
clc
ret
movsl
push
shlb
cmp
sbb
ret
add
std
pusha
hlt
in
data16
iret
add
outsl
scas
sbb
rcll
push
fisubrl
lahf
xor
cmp
jmp
mov
lock
mov
in
xor
insl
dec
int3
push
pop
imul
push
out
inc
sbb
fwait
adc
ds
das
data16
inc
mov
clc
sti
ss
jno
mov
jmp
inc
pop
mov
fcmovu
push
add
and
notb
fiaddl
adc
adc
inc
jb
xor
aaa
in
pushf
cmp
sbb
dec
cli
or
sti
enter
clc
filds
mov
jge
loope
cmp
out
mov
fstps
aad
stos
mov
jno
lahf
pop
loop
sbb
mov
adc
sahf
int3
cwtl
das
loope
popf
pop
dec
and
mov
aas
sbb
and
mov
addr16
in
out
mov
outsl
and
data16
xchg
rorl
stos
rorb
push
mov
insb
clc
add
ds
insl
popa
nop
push
or
xor
add
xchg
add
jno
inc
add
daa
test
lea
gs
test
fidivl
jne
fcompl
xor
add
inc
orl
fwait
stos
data16
cmp
shrl
in
mov
sbb
repz
dec
fwait
pushf
push
mov
mov
xchg
nop
je
mov
jo
push
andb
sub
out
push
jle
fwait
push
sbb
and
add
aas
jmp
mov
inc
loope
jmp
insl
fadds
imul
lcall
lret
or
cmc
enter
out
int3
mov
sbbl
rolb
cmp
lods
xchg
sub
loop
inc
fwait
mov
stos
popa
pusha
mov
pop
dec
add
mov
push
mov
std
cld
in
inc
pop
mov
in
jmp
cmp
dec
cmp
ss
mov
and
mov
lds
and
cmc
inc
or
xchg
loopne
popa
pop
mull
cmp
mulb
cmp
inc
inc
fnstsw
dec
nop
jge
out
std
imul
sbbl
jae
xchg
out
test
cmc
jecxz
jle
inc
ror
out
adc
jno
andb
lcall
add
jg
dec
call
mov
sub
dec
mov
xchg
aaa
push
inc
gs
adc
test
test
in
pop
es
aam
sbb
nop
jecxz
push
pop
sarb
xchg
sbb
cmp
lock
decl
xchg
sub
clc
push
xor
lahf
and
inc
loope
cmp
sbb
les
rcll
mov
xor
repz
cmpsl
loope
leave
or
repnz
cmp
adc
inc
incl
fiadds
fstp
icebp
scas
cli
clc
jae
in
sbb
xlat
testb
mull
push
push
data16
in
dec
mov
inc
inc
in
add
cmpsb
inc
sbb
xorb
push
sbb
add
pushf
stc
out
lods
scas
pop
push
pop
pop
cmp
sbb
push
ds
clc
push
jne
pop
xchg
add
outsb
jno
inc
or
mov
in
mov
mov
aas
mov
popf
popf
ret
jp
add
mov
jle
in
mov
jno
dec
inc
mov
out
sub
lcall
xchg
inc
mul
fbld
shlb
jge
inc
cmp
movsl
xchg
pop
or
or
fisubrs
inc
push
cmp
adc
out
push
xlat
mov
cmp
sahf
popa
pusha
jecxz
mov
fiadds
pushf
xor
repz
xor
dec
xlat
xchg
aaa
cmpsl
mov
dec
push
inc
aaa
dec
js
cmp
push
es
mov
push
das
cmc
mov
int3
cmpsl
mov
hlt
inc
push
inc
mov
cmp
mov
inc
les
dec
jecxz
in
pop
mov
ficompl
sbb
or
roll
adc
add
in
fisubl
add
divb
push
sbb
xchg
xor
sar
cmp
jge
sbb
sbb
sub
and
jp
push
decb
imul
cmp
mov
mov
sub
mov
push
imul
inc
imul
and
sarb
pop
pop
pop
adcl
jne
ljmp
inc
pop
daa
and
mov
sub
sub
xchg
js
rolb
mov
hlt
daa
pushl
push
rclb
xorb
fnstsw
sbb
hlt
xchg
cmpsb
insl
insl
dec
mov
out
mov
adc
cmpsb
mov
push
mov
outsl
adc
cltd
adc
mov
add
sbb
ljmp
cs
add
movsl
idiv
movsl
xchg
jp
cmp
mov
jne
dec
ja
outsl
scas
xor
imul
mov
cs
jnp
sbb
cmc
xor
cmp
push
dec
mov
mov
sub
push
jecxz
or
outsb
movsl
cmp
sbb
mov
xchg
xor
mov
das
loopne
sub
inc
sub
dec
fsubrs
mov
cmp
pushw
jl
lods
call
inc
rorl
cmp
sub
aad
jp
dec
add
lods
ds
adc
mov
das
lcall
inc
imulb
pop
inc
inc
mov
jae
stos
dec
mov
mov
std
jne
mov
rdtsc
xchg
and
inc
pop
cwtl
sbb
aam
sbb
or
arpl
push
jnp
into
loop
sbb
jle
nop
outsl
push
hlt
jmp
cs
in
rol
lcall
enter
mov
mov
mov
or
filds
sbb
cmpsl
xchg
das
mov
sahf
pushl
inc
push
repnz
je
sbb
pop
and
shr
cld
jnp
adc
cmp
clc
ret
or
in
jbe
mov
arpl
sti
js
fcomps
out
mov
in
std
mov
jno
mov
push
or
mov
scas
xchg
clc
jnp
mov
stos
inc
data16
bound
dec
ret
lds
stc
lret
xchg
test
jnp
mov
lahf
rorl
fadd
sbb
mov
add
cltd
sbbl
push
fidivl
add
and
dec
fwait
push
add
inc
hlt
pop
adc
ja
imul
decl
jo
and
mov
push
enter
jae
cmp
out
pop
sub
inc
or
push
pushf
mov
sbb
sbb
sub
mov
fcoms
inc
scas
inc
pop
mov
jmp
ss
fmull
sbb
mov
orb
negb
out
lds
mov
cmp
jg
addr16
dec
mov
notl
dec
jecxz
cwtl
arpl
cmp
pusha
arpl
out
in
cmp
and
jo
inc
js
and
mov
rorl
adc
and
fdivl
cmp
das
ja
movaps
dec
and
sbb
dec
std
mov
jle
jo
or
inc
orl
cmp
mov
rcll
out
xor
je
push
or
fdivrp
fldcw
pop
sbb
pop
stos
xchg
movsl
pushf
add
pop
and
mov
pop
push
subl
mov
xchg
std
scas
vmaxss
nop
dec
daa
push
add
in
sbb
jmp
push
insb
arpl
jge
pusha
or
mov
ja
into
adc
or
fs
fs
repz
lcall
mov
push
xlat
test
imul
adc
mov
mov
ret
jb
mov
add
inc
push
add
mov
mov
and
pop
push
xchg
sbb
push
cs
std
sub
push
sahf
or
test
sub
xchg
aas
fdivrs
mov
call
mov
test
mov
les
xlat
imul
jns
cwtl
sbb
mov
jae
xchg
mov
push
into
push
cmp
fsubrl
sqrtps
inc
lds
sub
fldenv
cli
jg
push
aad
cmp
xor
sbb
push
cmpsl
and
out
and
sar
xchg
int
cmc
test
pop
add
clc
stc
shrl
sub
cwtl
fimuls
pusha
sub
and
push
out
adc
xor
out
repnz
cli
outsb
pushf
mov
or
sarb
aaa
sbb
mov
mov
add
stc
jmp
inc
std
aaa
inc
scas
in
fisttpl
adc
push
jno
fdivrs
jnp
insb
insb
mov
hlt
mov
pop
push
lahf
and
inc
xor
inc
adcl
lock
mov
jmp
sub
mov
imul
jmp
mov
dec
pushl
mov
jp
xorb
adc
aaa
mov
push
xchg
aas
xchg
adc
ret
inc
ds
repz
lods
mov
cltd
or
push
mov
ret
out
mov
sarb
repz
test
lahf
je
mov
push
incb
xor
lock
sub
xchg
das
xchg
mov
cwtl
or
mov
mov
fwait
adc
dec
pop
xlat
cmp
push
gs
fistpll
or
and
and
loopne
pop
ds
mov
sbb
in
mov
aam
or
inc
out
and
cmc
push
add
popa
rorl
push
insl
push
sub
jg
sub
or
or
inc
lods
sbb
adc
push
jns
xchg
xor
mov
idivb
ret
xor
and
mov
push
jp
cmpsb
repnz
dec
cmp
ret
push
clc
ja
js
and
or
sub
push
imul
mov
jno
adc
sub
sbb
inc
fidivl
lods
std
adc
inc
lcall
stc
mov
jl
inc
sahf
ss
fwait
mov
mov
lods
mov
fwait
dec
scas
sarl
mov
jnp
pop
stc
jg
out
lods
jge
inc
adc
call
outsb
lds
mov
loop
mov
or
push
adc
pop
pop
xor
add
push
fwait
and
jmp
imul
xor
fwait
mov
sbb
fwait
pop
cwtl
push
mov
stos
std
push
xchg
lcall
les
push
adc
ss
subb
into
jge
out
ljmp
mov
call
jmp
inc
jb
incl
sub
ret
arpl
mov
mov
cli
push
xor
fidivs
sbb
outsl
jmp
inc
or
sub
inc
sub
mov
cmpsb
pop
notl
jmp
adc
mov
and
std
enter
addr16
xchg
inc
mov
in
or
test
pop
ja
push
ror
mov
mov
jne
adc
insl
xchg
xchg
push
add
push
add
sbb
lret
push
pusha
out
jne
mov
inc
mov
inc
jne
dec
jge
in
jnp
fwait
das
ljmp
mov
iret
and
roll
cmp
jp
pusha
mov
cmp
inc
mov
adc
stos
push
and
dec
es
xlat
jge
mov
movsb
lds
mov
and
aam
stc
into
mov
pop
call
push
cmpl
pop
mov
outsl
fbstp
rcrl
cmp
cmp
lock
push
push
push
fstpl
nop
lock
mov
imul
xchg
jno
je
dec
dec
push
stc
out
fs
sub
icebp
sub
and
out
repz
pop
sahf
jno
cs
stc
imul
cli
jb
hlt
pusha
mov
add
jge
xchg
ja
sbb
jecxz
inc
cltd
or
adc
ret
pusha
inc
nop
fistpll
push
es
scas
insb
fsts
inc
or
orb
inc
cmpsb
shl
mov
aaa
push
movsb
scas
sub
imul
test
cltd
call
pop
mov
shrb
shll
aas
cmc
std
jae
xchg
pop
ds
xchg
xchg
mov
push
mov
ds
add
cs
sbb
sbb
adcl
push
int
test
stc
push
lahf
insl
stc
repz
not
loopne
add
popa
jle
push
inc
push
xchg
mov
dec
fwait
insb
mov
push
fdiv
add
xchg
lret
push
mov
sub
xor
in
stos
add
into
mov
mov
fisubrs
lds
std
sbbl
lret
outsb
or
into
ret
fsubrl
pushl
dec
fs
popa
in
adc
or
jb
popf
ds
xchg
scas
adc
pop
stos
ss
mov
aam
test
add
jle
lods
or
and
push
aam
push
xor
mov
fisttps
js
sub
stc
pop
adc
lahf
fwait
jnp
aas
ret
out
add
iret
popa
icebp
push
andl
xchg
sbb
xchg
scas
hlt
cmpsl
push
lcall
inc
and
inc
mov
inc
mov
rcrl
jo
sbb
fldcw
jl
pop
out
and
or
rolb
andl
int
in
sbb
xchg
into
inc
push
mov
jne
and
add
scas
movsb
out
dec
iret
sbb
push
mov
mov
xchg
cmp
xchg
sub
aas
jl
sbb
mov
and
cmp
push
rdrand
inc
into
mov
xor
addr16
xchg
xchg
loop
bnd
and
fdivr
mov
inc
fs
push
cltd
insl
jb
mov
inc
aad
xchg
jb
das
popa
xor
imul
daa
loop
mov
xchg
xor
sub
aas
std
stos
fdivp
and
and
jecxz
mov
outsb
je
stos
outsb
outsl
es
push
dec
hlt
stos
push
xchg
pandn
ss
sti
jo
xor
das
add
ljmp
sbb
xchg
cmpl
jo
xor
sub
mov
sub
loop
mov
mov
popf
pop
mov
test
jae
push
rcl
in
cmp
xor
std
cmp
negl
das
jp
cmpb
int
jae
fistpll
int
xlat
jne
cld
ret
mov
jl
jp
int
pop
in
pop
inc
loope
test
in
imul
xorb
lcall
pop
loope
rolb
and
and
icebp
mov
push
sub
out
sub
cmpsl
daa
push
xchg
cmp
call
xchg
xchg
in
or
pop
xor
mov
mov
lods
adc
into
mov
cli
add
mov
cmpsl
pop
add
mov
inc
push
cmp
andb
pushf
push
negb
cld
pop
adc
roll
fldcw
sbb
mov
adc
mov
out
lahf
fstcw
jno
dec
cli
xorb
xor
imul
mov
sub
not
lock
cld
mulb
insl
sbbl
dec
dec
dec
or
mov
mov
cmc
mov
in
push
cmc
dec
shrb
loope
sbb
test
dec
aaa
xor
xchg
or
xchg
pop
notl
popf
mov
or
bound
adc
cmp
pop
das
mov
mov
std
jle
in
das
loope
aaa
ss
data16
js
adc
sub
fsubr
push
lds
sbb
in
fcoms
imul
fs
adc
adc
jns
cmp
push
push
out
jb
inc
ds
aaa
adc
or
pop
add
test
mov
mov
std
push
inc
adc
pop
loop
mov
arpl
inc
in
and
push
add
xor
cmp
into
or
push
test
outsb
xchg
mov
xor
inc
pop
fcomi
add
dec
loop
shrb
pusha
dec
sbb
xor
xchg
iret
insb
cmc
imull
loop
push
adc
scas
mov
in
jb
sbb
lahf
in
mov
xor
mov
andl
ja
mov
jae
dec
ss
mov
adc
fstl
adc
or
test
aam
cmp
jno
xchg
jo
lods
jle
mov
mov
loop
xor
cmpsl
xor
fnstsw
loope
sub
mov
adc
and
ds
popa
inc
std
inc
test
dec
shll
stc
out
std
enter
lret
test
jnp
fs
push
adc
inc
adc
cmpb
mov
cmp
inc
lret
xor
pmuludq
in
push
lret
xor
loopne
sqrtps
mov
and
rol
in
stc
xchg
fnstsw
pop
sub
data16
lret
sub
jnp
ja
cmp
inc
xor
adc
push
mov
dec
clc
inc
xor
and
adc
fistl
and
out
pop
push
movsb
sbb
jp
gs
cmp
sahf
lret
lahf
push
aaa
jp
cmp
js
imul
inc
lahf
lahf
cmpsb
outsl
test
pop
addr16
inc
add
loope
jmp
mov
aam
or
divl
fdivs
lret
or
jp
xchg
aam
insb
xchg
cmp
mov
mov
lret
aad
push
adc
pop
cmpsb
mov
fdivl
call
fucom
nop
cmp
inc
adc
gs
mov
cmp
jno
mov
mov
add
mov
or
jbe
mov
shll
sarb
or
lds
dec
mov
and
into
inc
ss
pushf
lcall
mov
std
or
inc
push
cwtl
mov
mov
sti
test
jns
iret
nop
sub
nop
cmp
insb
push
xchg
rorb
mov
mov
dec
xor
mov
push
js
sarb
in
jg
mov
jmp
loopne
push
imul
cmp
fs
mov
adc
add
loop
lds
push
jne
je
lock
insl
mov
mov
fsubrs
icebp
sbb
cmp
mov
jmp
adc
mov
pop
pop
scas
movsl
ds
and
mov
jecxz
and
pusha
cmp
pop
jmp
shlb
shlb
mov
inc
pusha
xchg
add
cs
push
and
dec
push
sbb
sbb
sti
push
sub
test
cli
divps
adc
jp
nop
mov
ja
out
inc
sub
lea
enter
xor
lds
fnstsw
aam
xchg
xchg
fildll
add
jnp
lret
mov
pop
xor
xor
xchg
shll
in
out
cmp
dec
and
or
jne
in
shlb
clc
imull
xchg
cmp
popf
cmp
repnz
out
out
add
jp
call
dec
xchg
and
mov
xlat
shufps
pop
cltd
pop
cmp
inc
pop
enter
jae
es
ja
or
jmp
adc
jbe
and
scas
push
push
or
stc
lahf
mov
dec
adc
push
lret
xor
cmc
mov
insb
lcall
adc
pusha
insl
es
popa
ja
jle,pn
or
cmp
push
mov
jnp
push
in
outsb
push
in
test
in
not
and
faddl
lock
mov
dec
jp
jns
into
nop
aas
push
aam
jo
pop
jbe
mov
aaa
ret
gs
xor
outsl
mov
push
clc
lea
xor
xor
dec
dec
mov
stos
loope
mov
in
dec
push
pop
jnp
push
pop
jmp
cs
dec
stos
and
mov
gs
lcall
push
xchg
mov
out
cmp
fs
ret
jno
pop
mov
add
mov
mov
pop
cmp
mov
xor
mov
icebp
add
cmp
les
mov
cmc
sub
xchg
push
mov
ret
mov
and
out
push
cmc
pop
js
xchg
mov
mov
mov
adc
mov
hlt
fistpl
xor
nop
sub
and
repz
xchg
ficoml
ja
push
and
jbe
pushf
outsb
cli
adc
pop
dec
and
dec
test
ja
cltd
aas
scas
jo
out
pop
mov
cmp
test
stos
xor
cmp
lods
mov
in
push
sub
push
jmp
dec
clc
mov
addr16
cmpsl
mov
std
outsl
bound
mov
out
inc
sub
encls
and
mov
mov
cmp
mov
test
inc
test
sbbl
cwtl
push
stc
add
push
test
jge
jae
icebp
movsl
dec
or
scas
add
adc
in
das
mov
out
adc
ret
cmp
xchg
in
sarl
sub
popa
test
jbe
and
imul
cmpsb
out
lods
out
cmp
outsl
mov
xor
jns
mov
dec
out
lahf
push
or
mov
xor
and
nop
adc
xchg
outsl
jae
icebp
mov
int3
mov
lods
or
push
mov
xchg
sahf
mov
cltd
sbb
or
dec
js
add
jg
add
jo
rolb
and
cwtl
jle
movsb
ljmp
or
loop
xchg
xchg
insb
es
push
jns
dec
mov
cwtl
imul
xchg
pop
les
test
pushf
mov
pusha
or
sub
mov
gs
push
rcll
rcr
dec
subl
push
je
mov
mov
in
icebp
jp
mov
and
test
out
aaa
xchg
aad
sbb
pushf
xchg
imul
rorb
cwtl
jl
fnstcw
je
out
or
mov
pop
rcrb
mov
loope
stos
add
mulb
cmp
pop
arpl
loope
xchg
lods
movsl
mov
xorb
push
mov
insl
in
mov
in
pop
cmc
je
push
dec
dec
jg
push
lret
mov
xchg
mov
and
shl
xor
sar
jg
xchg
out
sub
hlt
add
fcomps
es
cmpsb
add
jae
sub
cmpsb
or
xor
adcl
mov
in
out
je
ljmp
jns
cmpsl
xorb
out
adc
mov
pop
in
jp
mov
add
add
push
outsl
shl
jne
scas
xor
xor
push
ja
stos
dec
push
js
xchg
iret
push
adc
adc
xlat
leave
xor
fs
leave
lods
xor
mov
aaa
xlat
or
push
fstp
not
mov
jnp
jno
pop
sub
fiadds
push
cmp
shrl
lds
loopne
xchg
out
mov
push
popf
movlps
push
je
mov
dec
jne
sahf
flds
fucomi
add
popf
or
xchg
hlt
out
adc
lcall
adc
lea
adc
jnp
pop
cmpsb
jnp
jge
push
fimuls
out
ljmp
sbb
pop
and
repz
ljmp
adc
and
out
pop
sbb
js
ficompl
inc
sahf
jo
pop
pop
ret
inc
mov
repnz
les
sbb
ljmp
cmpsl
pop
lahf
int3
cmp
scas
dec
fs
pop
mov
ret
aam
fmul
inc
pop
xor
andb
outsl
aas
jg
dec
push
mov
jle
mov
movsl
js
fdiv
xor
xchg
ds
lods
or
mov
aas
xchg
ss
cmp
stc
or
pop
shrb
scas
cmp
fstpl
subl
jbe
insb
pop
in
mov
pop
out
lret
push
jle
aam
pop
enter
xchg
testb
div
or
lret
nop
pop
jae
dec
jae
sbb
sbb
mov
jns
shrb
cltd
inc
cmp
aaa
mov
sub
inc
dec
jns
icebp
push
shrl
pop
jnp
jg
push
popa
sub
out
call
fisttps
add
dec
jg
xchg
mov
add
scas
rdpmc
sub
sub
popf
repz
gs
jo
inc
sub
xchg
loop
push
mov
stos
push
enter
dec
cmp
mov
add
xchg
push
or
lods
aaa
arpl
data16
lret
inc
ds
das
pop
out
daa
dec
bound
insl
mov
sub
xchg
sbb
mov
adc
repz
fidivrs
pop
mov
mov
push
cli
mov
cltd
sub
fisttps
xchg
lahf
mov
jmp
xchg
cmp
outsb
sub
fidivs
sbbl
push
xorl
data16
adc
pop
mov
xor
frstor
lods
xlat
adc
pop
in
in
popa
jae
or
and
inc
clc
pop
cwtl
lea
ficoml
cmpsb
dec
sbb
dec
lret
and
lcall
js
fadd
mov
gs
xor
bound
loop
xchg
push
pop
push
lahf
push
and
fwait
push
pop
or
push
ret
pop
and
stc
outsb
stc
loopne
scas
add
sbb
dec
inc
jp
push
movsb
jge
enter
mov
lea
add
rorl
loopne
adc
jecxz
cmp
icebp
xchg
into
push
ret
gs
sahf
mov
notl
inc
pushf
inc
jmp
push
insl
rcr
repz
loop
push
adc
js
mov
lret
lret
jo
ficoml
daa
and
stos
sti
cmp
outsb
and
pop
into
negl
pop
push
cmp
loop
push
cwtl
mov
inc
cmp
in
or
scas
sub
sub
addr16
in
add
iret
data16
inc
mov
movsb
aas
ss
sbb
adcl
int3
add
mov
mov
xchg
mov
testb
test
call
pop
xor
shr
sub
mov
mov
jno
push
xchg
pop
xchg
jns
out
cmc
jno
mov
cmp
pop
jb
ret
xor
inc
into
insb
xor
cltd
fdivs
sub
push
mov
shll
imul
and
jnp
sarb
clc
and
inc
repnz
sar
adcl
cmp
fisubl
out
dec
cmpl
outsb
pushf
lcall
dec
push
adc
addr16
mov
jns
dec
std
sti
test
mov
cmc
iret
jb
lahf
xor
test
leave
xor
mov
or
mov
mov
scas
push
out
lods
icebp
das
inc
jmp
xor
push
inc
scas
xor
jg
dec
or
scas
lea
push
sbb
cli
inc
repz
imul
dec
inc
enter
int3
and
ret
lea
pop
das
popa
out
cmp
inc
int3
cld
je
push
lahf
sahf
sbb
fcmovnu
aam
loope
cmp
shl
dec
dec
je
and
rcrb
cmp
inc
imul
stc
subb
cmc
lods
aad
pop
mov
mov
dec
lret
add
push
repnz
lea
in
ffree
sbb
sub
les
pushf
jl
pop
cmp
mov
adc
add
pusha
sub
imul
fisubrl
pop
and
push
cmp
dec
cli
data16
inc
sbb
mov
out
push
faddp
sub
cmp
orb
mov
dec
js
hlt
inc
push
jl
cmp
outsl
xor
lahf
sbb
stos
ret
jnp
and
inc
pushf
and
mov
movsl
pop
mov
jo
xchg
leave
ret
xchg
sbb
push
es
or
fldcw
nop
add
stos
inc
sub
je
andb
add
into
pop
xchg
dec
pop
xchg
dec
gs
inc
sub
fwait
jne
lret
lahf
add
rolb
mov
mov
jle
aad
test
pop
xchg
add
push
push
pushf
shll
pop
push
and
in
push
test
insl
movb
bound
cmp
loopne
int
adc
mov
inc
mov
flds
sbb
xchg
das
cmp
adc
ds
cmc
jns
stos
lret
jne
dec
xchg
sub
addb
aam
adc
cmpsl
and
cmp
loopne
and
test
cmp
jecxz
and
cs
in
jl
mov
xchg
jbe
lahf
test
lret
mov
xlat
push
lea
pop
xor
fsubs
cltd
outsl
cwtl
clc
icebp
xlat
xchg
jecxz
dec
and
xchg
xchg
test
nop
sub
push
lods
push
pop
out
add
sbb
and
test
xchg
lock
pop
pop
fs
dec
bound
adc
mov
jmp
rorl
pop
out
mov
iret
ljmp
mov
sub
outsb
aad
inc
out
out
mov
in
or
fildl
mov
inc
add
lds
stc
pop
mov
pop
mov
sub
mov
call
aam
pop
cmp
in
jge
xor
xor
loopne
cmp
and
shrb
mov
pushf
adc
and
in
std
cmp
dec
lret
out
inc
das
push
ja
insl
jp
or
cli
addr16
pop
push
idivl
push
inc
outsl
mov
inc
ret
jmp
push
xor
pop
push
fbld
cmpsb
xchg
mov
and
lret
lods
and
xchg
sti
add
shl
xchg
sub
push
daa
int3
out
push
cmp
xlat
fneni(8087
fcmovnbe
int
or
xchg
push
adc
cmp
ljmp
sbb
shll
pop
and
push
test
and
adc
loope
mov
and
fidivl
inc
addb
sbb
insl
test
xchg
lea
enter
pop
xor
popa
cltd
pop
xor
fimuls
je
mov
js
mov
int
lods
decl
jnp
sbb
and
lea
mov
ret
xor
mov
std
minps
repz
inc
sbb
sub
mov
inc
mov
jb
and
movsl
filds
aaa
cmpsb
in
loopne
or
popa
push
addr16
cltd
scas
into
xchg
iret
les
mov
inc
jb
js
cmp
adc
je
fsubrs
insb
cmp
stos
lods
lret
jle
fsts
dec
repnz
or
jmp
pop
add
int
orb
aaa
loope
ret
sti
lcall
enter
arpl
sbb
aam
push
mov
cmpl
mov
shlb
mov
cli
pop
rcll
push
hlt
adc
stos
sbb
aad
das
scas
les
ss
xlat
ret
negl
or
loop
sbb
lret
enter
dec
shll
sub
dec
sbb
dec
decb
int
cltd
and
xchg
pushf
jns
stc
or
imul
std
xchg
lds
loopne
ss
push
jae
xor
sbb
cmp
shll
fwait
ret
jns
fdivrs
cld
mov
popa
dec
fmul
mov
in
test
xor
shl
add
mov
push
lods
es
xchg
push
insb
mov
ret
aad
mov
mov
add
lea
dec
popa
mov
daa
push
push
inc
add
in
hlt
sbb
push
stos
or
sbb
fldl
std
push
out
icebp
xor
je
cmp
xor
push
adc
mov
cmp
xor
lock
inc
subl
inc
sbb
movsl
mov
jns
sub
mov
inc
ds
enter
loopne
dec
imul
shrl
ss
and
iret
or
ficoml
into
xchg
jg
es
out
ret
dec
scas
test
xchg
cmp
pop
or
clc
daa
je
loopne
rorl
div
lods
cmp
push
lods
sub
dec
mov
pop
xchg
ror
mov
sub
xor
lea
mov
cmpsl
jae
xchg
jnp
outsl
dec
push
lods
loopne
fisubrs
idivl
cmp
jno
daa
inc
daa
pop
loope
sub
and
xrelease
cld
or
sarb
inc
les
push
fildll
pop
fstps
xchg
movsb
pop
mov
cli
push
in
nop
shr
sub
xchg
fdivrp
push
mov
mov
xchg
jne
push
jmp
jbe
and
out
iret
aaa
sbb
lret
fidivs
aas
sbb
out
mov
or
add
loopne
sub
sbb
popa
add
push
xchg
loop
out
fldl
cld
test
or
ds
jno
aaa
leave
xchg
add
xchg
push
lea
or
outsl
outsb
mov
lcall
and
sbb
push
push
xchg
jle
adc
dec
repz
cmp
mov
iret
notl
push
xor
in
inc
mov
xor
lret
ret
xlat
sub
jbe
rcll
pop
ret
out
stos
movsb
push
das
push
mov
or
pop
fisttps
add
mov
pop
jl
sub
or
pop
add
addl
fcoml
add
dec
notb
cmp
sbb
mov
mov
inc
gs
les
cwtl
and
jbe
aad
dec
xchg
cmp
push
loope
into
jbe
rorb
mov
sti
inc
cmpsb
pop
data16
sub
dec
in
or
or
adc
outsb
stos
pop
sahf
pop
push
stc
and
flds
xchg
and
xor
sub
in
imul
mov
xchg
lods
mov
push
stos
jb
and
scas
negl
aad
rcrb
xchg
int3
imul
cmp
push
loopne
jo
fsub
sbb
jbe
pop
sbb
and
jns
push
aaa
sbb
mov
sub
or
shlb
and
into
data16
pop
dec
mov
fisttps
and
jae
jge
sti
stc
sti
ret
movsl
adc
and
clc
lret
add
xchg
sti
and
outsb
out
xchg
add
adc
ret
jmp
loopne
cmp
out
clc
divb
mov
and
lahf
movsl
mov
imul
mov
jns
popf
cs
xchg
out
fdiv
pop
pop
les
adc
icebp
xor
mov
xchg
aaa
int3
xchg
clc
gs
dec
jbe
fistl
xchg
dec
orb
std
aaa
add
inc
pop
dec
dec
inc
or
mov
test
pop
test
push
popa
aam
cli
pop
sub
pop
jmp
inc
or
je
out
push
enter
js
sub
aas
sti
ret
cmp
fistps
aad
leave
adc
fs
pop
xor
shl
cltd
out
add
movsb
push
push
sub
insl
shr
out
push
push
jbe
aam
sub
cmp
imul
cmova
mov
incl
mov
mov
push
push
das
pop
ljmp
dec
mov
or
pop
ret
test
shll
adc
ret
mov
push
shll
mov
push
sub
int3
test
mov
push
jle
js
mov
stos
push
sbb
cmp
mov
lret
xor
loop
jmp
roll
sbb
xchg
stos
jl
pop
sbb
pop
cld
jg
push
adc
and
in
inc
sbb
pop
sbb
out
cld
mov
pushf
and
pop
popa
ja
vmovmskps
xor
ja
stc
sub
add
adc
out
ja
aas
imul
imul
les
leave
pop
pop
mov
adc
pop
pop
cmc
imul
mov
push
sub
mov
inc
sahf
xchg
adc
ljmp
mov
xorb
push
sbb
sbb
push
scas
sbb
xor
xchg
xor
out
or
cmc
xor
mov
fstl
inc
push
add
cld
jbe
je
lods
fsubrl
sbb
cmpsb
add
sti
push
xchg
inc
iret
out
mov
mov
aas
push
push
jmp
bound
int3
or
sub
adc
fistpl
or
and
adc
rolb
or
aad
push
rol
xchg
orl
mov
scas
fstl
pop
lret
or
out
sbb
out
clc
inc
aam
inc
add
cmp
or
sti
rolb
xor
inc
sbb
inc
jecxz
fs
sbb
push
cmpsb
jge
rol
jb
push
lods
sub
arpl
inc
adc
lock
pop
scas
adc
insl
in
mov
inc
xchg
push
je
jg
das
loope
pop
dec
mov
mov
jns
mov
in
and
cs
aas
and
sarl
adc
mov
pop
addr16
jp
push
pop
popf
xchg
xlat
mov
stc
sbb
mov
test
mov
or
push
adc
mov
cmp
xor
sub
loopne
movsb
pop
sbb
and
inc
xor
daa
sti
xor
pushf
gs
pop
mov
push
pop
and
arpl
and
xchg
adc
outsl
jle
and
call
or
push
push
cmp
add
xor
lahf
xchg
out
adc
jno
adc
mov
mov
rcll
ja
lock
fstps
adc
rcrl
mov
jle
daa
xlat
pop
sub
in
ret
cmp
imul
jb
rcrb
add
aas
pop
dec
ret
subb
out
push
pop
push
push
xor
cmc
lret
pop
ja
mov
outsb
outsl
and
in
mov
jbe
mov
lds
add
daa
sarl
cmpb
dec
mov
push
fstpt
arpl
stos
mov
pusha
lcall
decb
fwait
lret
cmp
lret
lea
adc
shrl
test
nop
cmpsb
int3
outsl
xlat
sub
push
dec
int3
mov
add
and
rcrb
pushf
mov
mov
nop
je
mov
or
inc
out
in
add
sbb
pop
lea
add
mov
xor
sbb
adcb
aad
cld
outsb
sbb
or
jno
fidivrl
cs
ljmp
adc
fcompl
xchg
cmp
sti
cs
lret
mov
out
mov
xchg
add
popf
hlt
movsb
cmpsl
aas
dec
and
adcl
xor
inc
add
and
das
mov
mov
enter
data16
inc
movb
xor
idivb
xor
divb
stc
sub
dec
mov
iret
jnp
addl
jmp
and
push
pop
bound
adc
aaa
add
cld
bound
xchg
addl
test
loop
cld
shlb
dec
js
lret
shrl
pop
repz
scas
ss
mov
stc
daa
insb
and
out
inc
std
addb
sub
lods
jmp
cmp
jnp
or
jbe
pushf
ds
std
or
push
lahf
dec
push
mov
sti
sbb
nop
lock
ret
jo
mov
inc
adc
inc
dec
icebp
add
pop
mov
mov
jne
into
scas
fs
push
pusha
or
inc
xchg
sarb
sahf
push
aam
pop
jl
mov
dec
mov
mov
movsl
jbe
inc
pop
cmp
aaa
outsb
jbe
sbb
mov
dec
gs
xor
popa
jl
fxch
bound
gs
mov
jb
fdivs
pop
addb
mov
stos
sarb
lret
pop
mov
ss
add
les
or
sub
cld
mov
xor
in
stos
mov
or
push
sub
lcall
addr16
imul
adc
std
pushf
ljmp
sub
ljmp
jp
mov
outsb
xchg
inc
notl
push
gs
pushf
pop
bound
jno
test
jmp
mov
jmp
mov
imul
dec
in
inc
cmp
cmp
ljmp
cmpsl
fsubl
xchg
sbb
jmp
jo
jae
ret
test
das
xchg
ds
nop
xchg
sub
sti
lahf
ret
mov
test
paddusw
lretw
ret
ret
jns
loope
mov
in
mov
gs
adc
test
pusha
pop
sub
das
xor
in
fstpt
cmp
outsb
lret
add
incl
mov
mov
jecxz
xor
xchg
cmp
shrl
sub
pop
or
mov
outsb
test
repnz
push
mov
fcompl
adcl
inc
jg
fcmovu
enter
xorb
cs
sbbl
push
or
outsl
or
insb
sub
or
cmp
pop
push
cwtl
cmc
inc
cmp
call
ffree
push
das
icebp
push
shrl
iret
test
cld
and
out
lcall
adc
adc
sbb
negb
adc
cwtl
js
xor
mov
hlt
adc
imul
sbb
out
pop
pop
cmp
fsubrl
add
pop
test
mov
jl
pop
enter
aaa
ret
movsb
dec
imul
and
sub
mov
mov
sar
push
dec
lret
lods
add
movsb
add
adc
hlt
and
imul
mov
out
es
add
xchg
push
mov
jecxz
cwtl
dec
mov
mov
lea
int
or
inc
sub
push
gs
mov
std
insb
mov
pop
cs
fstps
push
and
dec
sub
out
xchg
nop
ja
sti
stos
cmpsb
int
mov
push
roll
icebp
inc
mov
push
sbb
and
or
fdivs
cmp
loop
mov
out
lret
or
movsb
incl
loopne
inc
inc
mov
out
in
aam
mov
aas
xchg
add
cmp
pop
push
push
mov
popa
push
hlt
popa
dec
rol
in
aad
cs
insb
inc
pop
dec
subl
sbb
mov
adc
cmpsb
addr16
mov
loop
lret
xor
xchg
lds
fimuls
and
shll
fisttpl
mov
adc
test
fsts
add
in
or
or
and
pop
lea
push
jno
cwtl
mov
jg
arpl
test
mov
push
lds
add
and
or
cmp
stos
es
xchg
xchg
test
lods
lods
adc
xor
jb
lock
mov
outsb
mov
adc
out
push
push
cmp
mov
fwait
out
mov
dec
pusha
aam
outsb
mov
mov
call
lret
idivb
or
fistpl
pop
and
or
pushf
test
sti
mov
sbb
jg
insb
fisubrs
pop
shlb
ret
lahf
jmp
movsl
lds
hlt
popf
xchg
movsb
jae
imull
xchg
mov
mov
adc
imul
data16
shrb
sarb
mov
adc
xor
aam
pop
out
fwait
out
xchg
cmp
outsl
popf
aam
mov
and
adc
xchg
pop
mov
mov
fsubl
aam
pop
shrb
mov
cmp
add
or
addr16
jge
mov
es
dec
popf
mov
mov
je
lret
push
mov
loop
loope
aas
xchg
mov
ret
xor
mov
cvtdq2ps
idivb
add
or
mov
in
mov
das
push
cmp
mov
mov
mov
inc
pusha
jns
imul
je
rolb
cmp
fwait
mov
imul
mov
mov
xor
les
ja
pop
cmc
lahf
mov
xlat
pop
int3
fwait
pop
inc
scas
call
cltd
lcall
popf
lods
aad
push
push
mov
mov
js
cmp
push
insl
fistps
iret
in
push
je
xor
push
fdivrl
mov
mov
or
dec
nop
push
jge
testl
pop
dec
jmp
add
push
stos
lods
js
fs
data16
cmp
negl
mov
popa
lcall
dec
pop
adc
jge
arpl
sub
pop
sbb
shrb
jg
jg
xchg
aad
out
push
sub
fnsave
jnp
adc
xor
mov
fbstp
shll
fwait
fdivrs
pushf
mov
not
lods
test
jne
jecxz
stc
popf
mov
push
daa
sub
push
inc
dec
js
leave
mov
or
jmp
xor
sub
rclb
mov
fdivrs
stos
je
xchg
and
test
imul
std
mov
fs
push
inc
or
inc
leave
xchg
mov
aaa
inc
push
scas
shrb
outsb
add
es
mov
xchg
push
cmpl
cmc
xchg
push
add
lret
jno
or
js
pop
shlb
push
addr16
es
dec
push
iret
jbe
sub
mov
dec
pop
in
and
loop
or
push
cmp
in
dec
cmp
push
push
jg
je
mov
xchg
call
clc
mov
pop
push
pop
sbb
dec
push
xor
aam
push
in
inc
outsl
push
dec
push
js
aas
pop
mov
or
bound
add
xor
xor
mov
sbb
sub
jecxz
out
aas
lahf
adc
cs
cli
cmp
jne
movsl
dec
jo
xorl
outsb
sub
imul
xchg
xchg
shlb
xchg
pushf
xchg
inc
pop
xchg
mov
cltd
pop
jne
xor
cmp
jg
jge
fstpt
shr
push
add
or
cwtl
aaa
jno
sub
sbb
mov
push
outsl
cmp
sbb
popf
adc
fcompl
push
out
and
mov
ljmp
sbb
stos
cmp
push
mov
movsl
xchg
je
xchg
loop
sub
ds
out
pop
sub
je
je
test
rcrl
ret
call
jbe
push
adc
mov
xchg
dec
and
cli
sub
pop
in
stc
jmp
mov
and
inc
mov
ret
fxch
outsl
shl
fs
cli
je
cmpsb
aam
push
rcrb
adc
mov
lahf
inc
rcr
adc
mov
push
popf
sbb
and
xlat
aad
out
stc
xchg
popf
jnp
pop
adc
call
add
fs
mov
les
or
loop
sub
xor
dec
mov
adc
jnp
outsl
add
in
in
dec
adc
mov
inc
mov
or
ds
adc
mov
outsl
push
icebp
loope
leave
flds
dec
add
inc
or
aam
pop
xor
je
and
bound
lcall
push
movsb
push
stc
mov
mov
xchg
mov
xor
das
scas
jnp
jge
scas
js
push
xor
fimull
dec
pop
and
xchg
adc
push
stos
data16
jns
ss
mov
jge
jne
inc
and
push
adc
xchg
pushf
cmp
or
push
int
fdiv
int3
sti
test
pop
mov
es
lahf
movsb
or
dec
xlat
out
lcall
cmp
push
int3
xor
fsubl
mov
in
push
mov
dec
xchg
jmp
mov
add
in
out
in
jecxz
mov
push
leave
cld
xchg
repnz
jmp
loopne
outsl
adc
pushf
loopne
ja
fiadds
push
jge,pt
lds
iret
push
and
mov
sub
pop
movsl
xor
jne
test
mov
dec
fstl
sub
out
xor
and
jns
adc
orl
xor
and
cli
mov
dec
mov
mov
addr16
pop
sbbl
repnz
sbb
dec
xchg
mov
mov
cld
iret
lds
out
leave
es
cmpsb
dec
leave
mov
cwtl
insb
pop
pop
enter
into
dec
add
cmc
or
repz
sub
call
and
mov
test
cmp
add
sub
cltd
int
push
push
mov
mov
cmc
mov
or
cmpsl
fs
push
mov
sarb
cld
or
gs
lahf
scas
xchg
icebp
inc
dec
ljmp
ficoms
dec
in
sub
push
sbb
jnp
dec
inc
cmpb
add
jg
ljmp
call
pushl
dec
pop
push
mov
sub
hlt
pop
les
scas
aaa
lea
cmpsl
push
pop
imul
jge
outsl
lds
mov
pop
cmp
ret
pop
cmc
in
or
jl
inc
fs
insl
test
pusha
pusha
mov
fnstcw
pop
pop
push
sbb
mov
adc
xor
test
clc
fucomi
pop
sti
sbb
add
add
je
leave
outsl
dec
mov
jb
dec
outsb
pop
bound
cltd
cmp
push
ljmp
lahf
arpl
add
mov
sbb
inc
in
subb
sub
imulb
popa
scas
fnstsw
and
cmp
add
js
push
cmp
mov
fs
out
sub
test
jnp
pop
stc
dec
in
fildll
mov
lock
test
lahf
sahf
mov
mov
test
in
cld
jb
je
mov
pop
inc
jge
movsb
ret
sbb
xor
jp
mov
rcrb
dec
sbb
push
push
into
jno
inc
outsb
addl
inc
leave
jne
outsb
imul
pop
pop
push
push
pop
jge
mov
lods
je
inc
jns
pop
cmp
sbb
pop
and
dec
popa
and
cwtl
push
inc
pop
mov
ret
or
repnz
lods
dec
loopne
sti
loopne
push
nop
mov
add
cs
fdiv
ret
ss
test
imul
lods
mov
mov
jge
jns
push
clc
mov
insl
dec
pop
jo
cmp
cmp
stos
mov
pop
mov
out
stc
adc
test
je
inc
bound
insl
mov
xchg
mov
sti
cmpsl
cmpsl
mov
cwtl
and
popa
cltd
add
sbb
push
or
or
adc
mov
fdivl
lcall
adc
iret
into
xchg
popa
push
jbe
movsl
cmp
pop
jbe
xchg
jb
das
outsl
enter
aaa
cld
shlb
cli
mov
cmp
sub
stos
out
lret
jmp
push
or
lock
jmp
lods
scas
mov
mov
jns
fcom
data16
cmc
jg
maskmovq
negl
pop
cmp
insb
sub
les
adc
fistps
mov
insb
ja
enter
daa
adc
aaa
cs
add
sbb
cs
lcall
mov
dec
xor
mov
or
mov
add
push
ror
and
nop
pushf
fs
flds
cmpsl
jg
push
add
adc
mov
sbb
xor
inc
lods
repz
scas
dec
xor
lahf
ret
in
std
decb
cmc
lcall
lock
test
data16
adc
adc
mov
pop
add
adc
test
pop
push
cmpsl
jae
add
aam
mov
xor
lea
sar
adc
dec
pop
pop
aas
inc
rcrl
and
pop
stc
push
pusha
std
mov
add
adc
int
xchg
mov
fwait
inc
jo
mov
insl
repz
dec
movsl
mov
fistl
mov
imul
xchg
dec
xchg
xor
mov
xlat
mov
inc
push
mov
pop
push
ss
mov
xor
mov
call
sbb
cltd
push
jnp
push
insl
sub
pushf
sub
movl
cmp
pop
mov
inc
push
jp
mov
sbb
ds
add
lods
sub
sub
pop
pop
icebp
pop
scas
sti
test
fstpl
into
sahf
push
xchg
add
insl
mov
dec
jne
jb
in
mov
loopne
out
js
jbe
mov
popf
jb
inc
xchg
sub
or
out
movsl
or
or
js
sub
stos
push
rolb
pop
fistpl
dec
inc
addr16
clc
fwait
adc
ret
aaa
mov
mov
jle
jns
outsb
in
add
push
rcrb
in
in
and
inc
xor
and
and
mov
push
sub
cli
pop
mov
lahf
pushf
js
insl
pop
pop
aas
cmp
es
mov
repnz
sbb
and
pop
jnp
xchg
add
stos
jne
mov
mov
test
cmp
lock
popa
adc
mov
pop
int
xchg
pop
lods
es
pusha
and
and
adc
jmp
shl
or
sbb
lods
fildl
shlb
cs
test
and
outsl
imul
shrl
popl
mov
sbb
stc
popa
stc
mov
mov
sbb
lock
jmp
leave
jecxz
cmp
xchg
dec
push
mov
xchg
fs
push
push
jmp
push
mov
jge,pt
pop
sbb
jns
dec
enter
data16
and
push
xor
fwait
inc
xchg
lock
or
out
pop
jns
ljmp
orl
ret
adc
popa
imul
or
inc
les
sub
cli
xchg
push
add
push
inc
xor
test
das
cmc
into
jnp
jge
xchg
mov
das
xchg
jb
xchg
add
mov
dec
int
or
out
sti
push
mov
adc
sbb
jecxz
add
jle
outsb
or
mov
adcl
and
and
jp
push
jne
clc
jb
test
sbb
in
push
das
pop
push
push
divb
jb
icebp
mov
outsb
leave
mov
sbb
sub
aam
mov
lea
test
mov
adc
dec
jmp
call
inc
sbb
push
aad
inc
cmp
fxch
call
pushf
cmp
adc
rcll
hlt
lahf
mov
dec
scas
jp
je
mov
and
push
mov
adc
push
inc
cmp
int3
clc
or
sbb
jmp
sti
lcall
xor
gs
pop
pop
xor
jge
xor
in
xor
aad
or
stc
dec
pushf
mov
bound
adc
pusha
xor
sub
xchg
mov
sub
adc
std
lea
xor
imul
stc
or
sbb
sbb
sti
xorl
sbb
add
sbb
ret
push
xchg
call
and
and
shrb
dec
push
or
pusha
cltd
mov
rol
cmp
push
int3
aas
mov
repnz
mov
rol
push
pop
jae
test
pop
test
or
push
cltd
cmp
or
je
fstpt
cmp
das
or
mov
jo
inc
out
pop
add
push
scas
imul
xchg
jmp
pop
das
ret
adc
xchg
inc
imul
data16
hlt
les
mov
cmp
daa
jp,pt
push
pop
xchg
and
add
sub
adc
sub
mov
sbb
sub
push
sbb
pop
mov
sub
out
xchg
rcr
into
adc
jae
pop
xchg
fs
fs
negb
imul
mov
ds
imull
inc
and
xor
jmp
inc
adc
outsl
sub
mov
lea
test
jmp
sub
sbb
dec
in
outsl
bound
sbb
stc
or
insb
fbld
aas
fstpl
icebp
out
mov
or
imul
cmp
shll
adc
mov
movsb
pop
outsb
rorb
xchg
or
imul
insl
cli
outsl
xchg
pop
cltd
pop
inc
push
push
cmp
cmp
jge
xor
sub
nop
pop
adc
dec
pushf
xchg
sbb
mov
repz
jae
insb
cs
addr16
loop
or
call
push
add
rorl
pushf
pop
push
scas
xchg
lea
jmp
mov
movsb
je
test
mov
nop
sub
fdivrl
add
inc
xor
sub
out
stos
add
dec
and
das
pushf
xchg
sbb
mov
out
jg
les
mov
icebp
mov
dec
imul
dec
sbb
sub
mov
pop
clc
push
shl
movsl
adc
mov
aas
mov
test
mov
aad
sub
adc
fwait
push
fidivs
in
std
pop
call
push
mov
xor
mov
rcll
cmpsl
xchg
or
or
sub
push
cli
xor
cmp
out
sub
and
push
mulps
push
sub
xor
test
adc
ljmp
loop
pop
add
sti
insb
push
push
dec
mov
push
decl
adc
adc
or
mov
and
imul
jp
popf
fucomp
ljmp
fstpt
mov
lods
fstl
push
outsb
cmp
jg
jmp
aas
mov
push
testb
xchg
cli
pop
mov
xor
shl
lods
out
rcrb
add
mov
inc
push
sub
add
fnstsw
and
inc
pop
push
jb
add
mov
sub
pop
add
mov
xchg
je
and
jmp
stos
int
test
dec
add
or
cmp
adc
adc
or
pusha
gs
and
out
inc
dec
add
mov
and
jne
fldcw
imul
mov
cmpsl
push
loopne
inc
inc
fcomip
in
and
outsl
into
imul
jns
les
fs
orl
imul
mov
mov
mov
rclb
jne
sub
pop
add
add
jmp
scas
stos
call
sti
push
cmp
sbb
sub
cmp
rcrl
pop
ljmp
mov
or
add
jg
pop
or
mov
pop
lret
ds
inc
aam
mov
test
loopne
and
rcrl
sub
fnstcw
std
movsb
or
fstps
and
xchg
mov
xchg
fs
jmp
adc
inc
ret
rclb
and
fisubl
mov
test
cmp
sahf
je
add
loopne
pop
or
add
clc
in
cmc
repz
adc
xchg
or
jp
xorl
lods
adc
push
loopne
cmpsl
imul
sbb
jb
in
and
lcall
sub
jae
ret
cltd
sbb
push
xor
and
cmp
jle
and
xor
pop
or
hlt
sarb
fstl
sbb
sahf
pop
stos
lock
test
mov
sbb
jo
insl
xor
pop
mov
pop
test
inc
inc
les
inc
jbe
ret
jnp
xchg
xlat
loop
push
addl
pop
jmp
ss
test
adc
lods
fsubr
fistpll
addr16
outsl
dec
xchg
ja,pn
test
push
mov
adc
imulb
js
dec
adc
mov
icebp
cmc
or
mov
sbb
or
in
add
incl
sbb
xor
xchg
and
mov
sbb
pop
inc
fwait
mov
aam
mov
call
mov
outsl
adc
sbb
mov
push
in
ds
rorb
xchg
sub
xchg
hlt
rolb
mov
sub
push
in
leave
jbe
lea
and
sub
mov
or
jns
add
in
in
je
testl
int
or
insl
jle
in
push
xchg
jmp
sahf
clc
aad
dec
jnp
fistps
push
pop
gs
call
jb
sub
repz
sub
jne
cmpb
nop
aam
into
mov
mov
push
mov
sbb
cs
xchg
imul
dec
pop
add
and
xchg
inc
pop
jbe
orb
arpl
push
ss
adc
xor
adc
adc
repz
sub
jg
inc
in
mov
push
call
hlt
call
jns
into
rorb
jmp
fisttps
movsl
xchg
mov
push
xor
imul
pop
mov
cwtl
sub
adc
xchg
sub
lods
test
je
sbb
push
push
cmpsb
mov
ja
xor
aaa
call
ljmp
inc
xchg
jmp
jnp
xchg
sahf
addr16
ss
cmp
mov
dec
fdivs
xor
outsb
repz
cwtl
test
testb
cmp
popa
mov
orl
iret
xchg
xorl
scas
pushl
pop
mov
mov
lods
lds
cmp
jae
jge
jbe
xor
xchg
mov
call
in
aam
pop
or
loopne
dec
xchg
cmp
mov
call
fistl
inc
test
dec
add
out
xchg
sbb
out
push
lcall
push
mov
mov
mov
icebp
in
sub
and
insb
push
orl
aas
ret
sub
pop
inc
pop
stos
outsb
mov
mov
jo
fptan
cmpsb
adc
data16
dec
sbb
or
pop
mov
fxch
leave
dec
xor
sub
mov
fldenv
ret
push
add
lea
repz
jae
push
ja
xchg
lock
int3
test
add
ret
mov
push
lcall
or
into
into
sbb
jbe
push
test
pusha
in
loope
fsubrl
in
jge
insb
icebp
out
jbe
je
mov
mov
mov
mov
dec
mov
ret
add
pop
loope
dec
stos
add
out
push
sub
rcrb
sbb
imul
fs
dec
mov
outsl
cmp
and
popa
leave
dec
push
stos
dec
push
arpl
daa
ljmp
adc
sbb
outsb
xor
xor
pop
rcll
fcmovne
mov
or
in
lcall
sarb
fwait
stos
int
mov
xor
push
xchg
data16
push
dec
std
fists
scas
pop
push
lret
scas
pop
gs
pop
adc
lds
pop
sbb
daa
imul
repz
ret
mov
addl
mov
inc
or
mov
jae
xor
notb
js
push
sub
pop
dec
or
rorb
add
xorl
jmp
into
ja
xchg
and
cmc
sbb
test
sbb
sbb
int
fisubs
push
jge
stos
jne
sbb
ss
mov
out
insl
fiaddl
ja
and
push
add
das
cmpsb
int3
lea
adc
push
stos
aam
call
adc
and
mov
mov
dec
mov
xchg
subl
xor
mov
or
std
inc
jmp
mov
sub
mov
mov
cli
outsl
dec
js
sahf
mov
add
insb
xchg
jmp
gs
rcrb
imul
pop
outsl
cmpsb
bound
subb
pop
push
stos
ds
test
pop
fwait
dec
outsl
sub
xlat
and
ret
scas
dec
push
pop
sub
mov
inc
and
aaa
mov
cmp
push
and
pop
movsb
pop
sub
jecxz
popa
bound
and
and
adc
in
adc
ror
sbb
xchg
subl
movsl
mov
jbe
mov
lods
dec
pushf
cmc
lock
cmp
inc
in
mov
jp
xchg
mov
xchg
push
aaa
cmp
add
mov
pop
inc
test
cs
mov
daa
push
das
mov
inc
mov
fwait
jno
and
in
mov
xchg
inc
push
pop
dec
mov
mov
std
xchg
int3
push
push
shl
adc
cmp
popf
mov
push
add
pop
aam
nop
data16
rcrb
fnstsw
xor
sbb
jnp
cmp
xchg
cmp
xor
xor
imul
cmp
xor
jns
repz
cltd
push
adcb
hlt
icebp
xchg
fimull
std
or
lret
lods
dec
inc
fwait
imul
ja
push
and
leave
or
sarl
mov
lods
adc
xor
cmpsl
js
ret
leave
jb
sub
mov
aam
mov
and
pop
pop
push
hlt
jp
adc
icebp
ja
mov
lea
jge
add
adc
mov
sti
repnz
push
add
lcall
jno
imul
testl
xchg
pop
jl
or
bound
push
xchg
int3
mov
stos
lret
xor
xchg
jae
scas
out
call
sbb
mov
popa
das
leave
push
lcall
mov
test
aaa
scas
pop
test
mov
inc
idiv
pop
inc
add
inc
test
cltd
cmp
mov
popa
das
and
jb
xorl
and
cmp
mov
inc
cmp
adc
adc
loope
mov
push
ss
fadd
cmp
sbb
cwtl
das
and
imul
outsb
mov
or
jb
mov
clc
or
add
jbe
jno
rorb
sub
fcompl
std
lea
orl
mov
lret
enter
push
and
mov
ret
inc
sbbl
out
pop
xchg
adc
test
cli
and
fcomps
inc
stc
cwtl
mov
pushf
cltd
sbb
push
or
addr16
orl
nop
cmpsb
test
shll
push
adc
mov
lret
ret
cmc
sahf
scas
mov
pop
out
xlat
jl
int
cmp
push
icebp
and
sahf
add
gs
in
cmp
into
jns
rcl
mov
cmp
in
xor
sbbb
push
shll
jmp
cli
cltd
pop
jmp
or
push
or
dec
xchg
xchg
fidivrl
mov
sbb
orl
mov
lds
repz
pop
xchg
dec
adc
insl
rorl
xchg
inc
adc
add
mov
push
xor
loope
cmpsb
sbb
movsl
sbb
sub
cwtl
addr16
xor
mov
or
cmp
sub
sbb
sub
xchg
cmpsl
ror
lahf
les
es
or
dec
jo
sbb
pop
mov
lods
lahf
push
mov
sub
pop
or
data16
and
daa
jnp
lcall
jp
imul
stc
lcall
cltd
adc
mov
repnz
push
push
xor
loope
popf
lea
movsl
pop
aam
stos
popl
scas
mov
sti
je
add
cs
push
push
dec
adc
push
push
mov
call
jge
sbb
cmp
js
mov
jge
push
in
cs
mov
fidivrl
and
stos
dec
bswap
rorb
fnstenv
xchg
testl
add
sarb
mov
in
fisubl
mov
add
stc
pop
adc
xchg
xor
add
ds
cs
data16
add
ret
sbb
pusha
inc
cltd
stc
or
fsubrl
dec
sbb
shrb
or
mov
rorl
xor
pop
add
mov
adc
ja
popaw
shlb
push
mov
xor
aad
fs
cwtl
ja
sub
push
or
sbb
call
rolb
inc
pop
dec
dec
inc
xchg
mov
inc
or
xchg
idivl
repnz
and
mov
leave
sbb
xor
inc
mov
dec
push
dec
mov
es
flds
cmp
lds
adc
daa
xchg
jns
adc
push
cmp
lods
push
insl
shrb
xor
into
or
jg
mov
dec
dec
push
scas
jo
xor
lods
mov
lret
pop
dec
pusha
out
mov
cmc
movsl
outsl
xchg
add
das
or
jg
mov
cmp
popf
inc
jle
pop
jno
push
aad
inc
shlb
in
dec
pop
add
xchg
pop
dec
aad
push
add
xchg
inc
or
inc
push
xchg
jmp
and
inc
add
xor
popa
into
jb
jnp
lods
mov
mov
mov
inc
popw
clc
int3
pop
lea
jnp
jmp
xchg
or
adc
add
mov
cmp
fidivl
xchg
stc
nop
inc
dec
xchg
cmc
cld
jo
jnp
push
push
lcall
stos
cmp
mov
push
test
mov
jl
out
mulb
push
out
sarb
pop
imul
and
ret
loope
jns
mov
xchg
clc
test
out
push
sarl
cvtdq2ps
test
jg
jo
call
in
xchg
daa
pop
test
xor
sahf
int3
mov
mov
mov
pop
or
test
mov
fsubrl
sbb
adc
fidivrl
int3
jno
mov
fstl
in
mov
and
pop
out
movsb
sbb
das
xor
push
sub
popf
sbb
cmc
cvtpi2ps
jmp
adc
sbbb
xor
lret
adc
pop
xor
cmp
add
xor
fistps
dec
sub
add
pushf
ljmp
cld
cmpsl
mov
xchg
orl
mov
sbb
in
jle
dec
aam
and
cld
imul
lea
test
mov
enter
inc
in
inc
and
bound
divl
jae
sub
sbb
push
bound
jmp
test
adc
mov
data16
pop
imul
sbb
mov
dec
fcomp
pop
pop
push
pusha
mov
test
pop
andb
xor
ss
popf
aam
ja
mov
mov
pop
ljmp
add
xchg
adc
pop
push
and
std
xchg
cmp
xor
mov
ja
std
push
std
pop
jle
dec
push
mov
iret
mov
in
lock
insl
mov
push
sbb
inc
push
cmp
add
lods
mov
cmp
xchg
cltd
fisubs
xor
mov
addr16
mov
dec
add
ss
in
repnz
jge
movsl
cmpsb
out
aas
imul
mov
test
pop
es
inc
fs
adc
imul
mov
icebp
lahf
out
adc
xchg
sub
jno
loopne
out
jae
cli
ret
xchg
jecxz
adc
pop
pusha
adc
jecxz
xor
mov
insb
sub
jbe
inc
out
cli
jge
mov
dec
adc
inc
inc
pusha
push
mov
ds
mov
pop
es
outsb
mov
outsl
xlat
fldcw
punpcklbw
pop
out
sub
pop
dec
mov
dec
mov
in
enter
test
jp
mov
js
cld
in
fdivs
cmp
in
popa
push
mov
les
dec
stos
lcallw
insl
sub
add
push
inc
jl
cmp
and
push
repz
int3
push
cmp
aam
jb
scas
cwtl
in
mov
or
mov
mov
lods
push
aam
sub
xor
and
ret
cli
pop
push
sub
inc
lea
adc
aaa
pop
push
mov
xor
scas
aad
dec
loope
sbb
popa
mov
mov
pop
inc
insl
jl
std
loopne
jb
ds
fsubp
test
daa
jno
dec
mov
loope
push
test
adc
cmp
jp
je
test
add
or
ret
enter
inc
add
jno
pushf
or
push
ret
repnz
push
cmp
pop
popf
sbb
cmp
rcrl
sbb
xor
pop
cmp
pushf
sub
pop
ds
loope
insl
aam
xchg
add
xchg
dec
js
in
sahf
or
test
push
adc
stc
add
or
test
jmp
inc
je
test
loop
adc
test
jecxz
cmc
sti
dec
leave
cmc
test
sti
int3
nop
mov
ret
or
jae
fnstcw
stc
hlt
insl
push
cltd
jb
mov
or
es
js
pop
pop
inc
enter
jno
gs
dec
sub
fld
sbb
or
ret
jmp
adc
inc
push
adc
xchg
xchg
imul
ret
call
pushl
or
test
and
pop
cmp
in
es
pushf
lds
or
mov
lahf
sub
mov
and
jle
loopne
mov
bound
ret
les
scas
sbb
xor
pop
jb
xchg
stos
adc
lahf
outsl
call
dec
push
js
iret
lcall
js
imul
sbb
pop
or
pop
mov
sbb
fxch
test
dec
jecxz
pop
adc
inc
mov
adc
andl
or
pop
std
out
push
jne
pop
mov
fstpt
cs
mov
mov
push
test
mov
xlat
ja
cwtl
loop
push
sbb
shlb
mov
cmp
push
stc
call
add
dec
sub
dec
jecxz
mov
mov
lahf
push
xchg
pop
mov
xchg
fstps
xor
mov
fdivl
mov
xor
les
jae
fimuls
or
mov
lcall
fwait
dec
inc
iret
jl
push
xor
inc
stos
jae
and
out
dec
jns
dec
mov
mov
mov
negl
mov
outsl
lock
seta
sub
push
mov
js
lock
std
sub
mov
or
andps
call
sub
mov
xor
or
rcrb
std
mov
nop
gs
or
movsl
bts
fcompl
or
mov
rolb
arpl
fs
es
out
inc
lahf
addr16
sub
movsb
push
outsb
inc
push
xor
repnz
pop
test
sarl
xchg
push
outsb
jle
inc
pop
mov
xor
out
rcl
testb
mov
call
movsb
mov
mov
int3
cltd
ficoms
shl
pop
pop
lret
mov
fstpt
xor
add
dec
mov
sub
lret
sbb
test
jl
test
mull
mov
pop
cmpsl
push
popa
add
pop
sbb
lock
jle
cmp
and
pop
stos
fst
and
dec
insl
test
push
sub
or
rolb
xor
or
out
pop
jl
jo
in
sub
das
cltd
pop
inc
das
repnz
ljmp
pop
adc
and
jecxz
sbb
push
sub
ds
outsl
loopne
sarl
pop
pop
and
sub
ja,pt
mov
push
mov
sbb
push
orl
fsubrs
shlb
jmp
and
sbb
pushf
push
mov
mov
sbb
cli
popa
cmpsb
loopne
push
ret
lret
pop
jb
dec
inc
mov
out
push
sub
mov
mov
addb
dec
dec
imul
push
loope
test
andb
lods
xor
ss
xlat
jo
loope
div
jp
jnp
dec
movsb
lods
xchg
into
xchg
ljmp
lock
jb
xchg
addr16
push
int3
pop
cmp
sbb
daa
nop
mov
jp
sbb
push
das
mov
mov
or
inc
push
test
sarb
psrad
ljmp
add
sub
mov
stos
cmp
jg
ss
imul
push
xor
pop
mov
sub
cmpsb
adc
mov
mov
xchg
nop
aas
push
xor
iret
sub
stos
xor
mov
mov
xchg
or
aaa
lock
into
or
dec
outsl
aaa
and
fidivs
shrb
push
lret
shlb
cmp
daa
jne
roll
imul
xor
jo
imul
xchg
xor
mov
das
adc
push
ljmp
dec
dec
fldenv
data16
stc
pop
xchg
sbb
jo
fwait
and
dec
add
pop
add
jne
aad
sti
pusha
cmp
daa
mov
out
mov
cmp
orl
repz
ret
xor
mov
jbe
xchg
cwtl
cmpsb
es
dec
fnsave
gs
cmp
hlt
add
pop
jmp
add
test
pop
adc
sub
stc
sub
stos
jnp
movsl
lcall
mov
testb
push
daa
out
sbb
xchg
leave
test
sub
jbe
or
ljmp
sbb
inc
out
sbb
in
add
cs
push
in
dec
subl
lret
std
pop
sbb
or
mov
inc
sub
xor
pop
dec
jge
cs
lock
cmpb
call
in
xor
push
movsl
testl
lock
inc
rcr
push
imul
out
sub
xor
outsl
xor
push
sub
push
jecxz
dec
mov
xor
adc
rolb
mov
inc
mov
in
mov
std
scas
scas
push
xor
mov
xchg
dec
jg
stc
stos
repnz
jmp
data16
leave
and
out
sbb
jb
push
or
leave
in
je
idivl
cmp
mov
fldln2
iret
push
and
loope
add
jecxz
add
pop
sub
push
arpl
or
inc
or
jg
rorb
adc
popa
repz
add
adc
dec
pop
push
fwait
pop
mov
leave
in
les
lret
aam
push
or
xlat
lds
and
ja
pop
addb
cli
adc
subb
xor
rolb
mov
cmc
lret
fwait
jno
adc
mov
rep
aam
xor
daa
fcoms
out
push
mov
sti
inc
repz
cli
push
push
xchg
sub
sbb
loope
push
pop
push
adc
xchg
inc
sub
std
je
dec
and
jg
cmc
inc
push
push
mov
jecxz
xor
imul
jns
adc
sarl
inc
ror
jecxz
repz
out
es
mov
aas
pop
movswl
leave
ljmp
mov
pop
mov
jg
shlb
lock
push
js
inc
in
pop
out
popa
cmp
scas
popf
out
and
adc
loopne
scas
data16
push
adc
xchg
dec
lcall
andb
les
int3
cmp
mov
pop
jmp
clc
add
push
mov
fldl
mov
test
pop
cmpsl
addr16
push
das
mull
dec
adc
mov
sbb
lea
push
adc
jg
es
fsubrl
cli
dec
xor
fbld
push
into
push
ds
lods
iret
or
insb
lret
jnp
sbb
arpl
std
jl
dec
rolb
mov
bound
stos
in
popa
testb
lret
std
pop
cmp
loopne
or
lahf
movsb
hlt
nop
outsb
and
xchg
ficoml
cli
dec
add
out
fcmovu
cmpsl
push
xchg
scas
sbb
lea
repnz
adcb
push
pop
push
inc
pop
leave
pop
xchg
mov
push
xor
and
xor
lods
sub
jle
stc
xor
cmp
pop
or
stc
adc
push
cld
adc
out
cwtl
sbbb
sti
sub
push
jns
mov
leave
orb
dec
mov
mov
xchg
xor
mov
jle
pop
sbb
dec
inc
inc
mov
cld
pop
hlt
pop
pop
lret
es
subl
addr16
inc
arpl
xchg
in
ds
cld
adc
ds
fdivs
and
lahf
in
sti
mov
ljmp
xchg
pop
and
fcompp
mov
ffreep
jle
push
popf
test
lea
cmp
fiadds
sahf
sahf
mov
sbb
cmc
lcall
mov
out
mov
ljmp
fcoms
out
testb
xchg
inc
clc
das
fisubs
inc
mov
add
lahf
dec
sbb
xchg
popa
xchg
xor
sbb
js
mov
lret
in
js
popa
sti
ret
sbb
sti
pusha
sbb
and
xor
dec
fs
sbb
or
xchg
mov
lcall
xor
inc
iret
cs
ss
into
cmpsl
fucomi
enter
in
faddl
mov
jmp
pop
add
or
daa
jge
leave
jle
cli
test
or
aam
add
lock
jl
pop
push
bound
aam
orl
sahf
insl
cmpb
loopne,pn
leave
and
or
fisubrl
push
mov
xor
int3
adc
mov
cmpsb
dec
xchg
xchg
xor
push
ljmp
test
pop
stos
cmp
pop
pop
test
out
cmc
inc
loopne
inc
lock
fnstenv
inc
jb
shlb
xor
add
test
stos
add
movsb
aas
cmp
dec
pop
ret
das
dec
jae
fwait
fs
xchg
aaa
cmpsl
xor
jmp
cld
add
or
adcb
pushf
dec
rcll
jae
xchg
jl
mov
add
cld
jae
adc
out
jo
sbb
mulb
outsl
cs
mov
sub
fisttpl
add
pop
jl
fwait
jo
and
jp
rcl
insl
xchg
jnp
jne
je
sub
ret
lcall
fsub
fdivrl
fs
in
pop
pop
js
fiaddl
ja
jp
xor
idivl
mov
mov
adc
xor
das
fcoms
inc
cwtl
cwtl
imul
loop
jecxz
jbe
addb
scas
sbb
daa
xchg
push
int
call
push
inc
call
inc
mov
out
rorb
lods
xchg
pop
orl
fstpt
into
seto
mov
sub
lret
lods
xor
aad
pop
push
push
or
xor
pop
push
sbbb
mov
mov
push
sbb
mov
add
and
or
adc
pop
jnp
cmpsl
stos
xor
es
or
pushf
shrb
mov
je
std
mov
arpl
or
adc
push
test
sub
mov
aad
adcb
push
addr16
pop
mov
mov
sbb
lret
mov
or
js
and
jb
leave
sub
jmp
iret
loope
xchg
lea
add
jmp
inc
sbb
lret
inc
sub
and
dec
call
cmp
add
push
test
sbb
cmpsb
sub
xchg
cmp
push
movsl
mov
loop
xor
rcl
jb
rcr
mov
adcl
push
mov
add
shlb
and
pop
adc
xchg
inc
dec
in
leave
in
add
int3
adc
jb
mov
push
and
insb
dec
out
imul
cmc
lds
dec
inc
dec
mov
pop
insl
sbbb
lods
push
mov
dec
lcall
rolb
fs
arpl
push
sub
mov
xor
mov
xor
popa
insl
or
xor
mov
sub
cmp
and
shrb
xchg
pop
cmc
es
sbbb
fwait
adc
cmp
sti
iret
mulb
aaa
sub
xor
adc
pop
pop
dec
mov
add
jo
cmpsl
bound
push
test
xor
push
push
popa
gs
pop
int
cwtl
adc
lds
lds
dec
sti
and
into
stos
inc
mov
data16
testb
push
jne
mov
pop
jmp
adc
add
jge
fdivr
lahf
faddp
movsb
mov
cli
inc
repz
push
mov
inc
mov
jb
cmp
xlat
fs
xor
xor
xchg
out
mov
imul
sahf
jnp
push
inc
mov
inc
sbb
adc
stos
sahf
pop
xchg
mov
adc
dec
lea
mov
test
adc
pop
jl
cmpsl
push
xchg
pop
jle
lock
test
jp
jno
lret
cwtl
jecxz
out
lods
aaa
dec
enter
jo
out
xor
mov
js
sub
loopne
arpl
xor
pop
lcall
mov
mov
dec
add
cmc
push
sbb
add
inc
stc
inc
cmp
adcb
mov
push
push
shlb
add
into
frstor
xchg
xchg
cmpsb
pop
sub
movsb
shl
dec
addr16
jbe
or
push
jnp
scas
xchg
add
stc
lcall
or
scas
push
sub
jge
sbb
bnd
inc
xorl
lods
cwtl
sahf
inc
cmp
addl
xchg
sub
sbb
mov
adc
in
pop
pop
fsubrs
inc
mov
push
xor
test
mov
cmp
push
je
ja
cmp
icebp
or
call
xor
xor
and
mov
pop
xor
push
cltd
mov
dec
and
pop
imulb
inc
push
lcall
mov
sarb
inc
adc
aas
mov
imul
lahf
lea
test
sbb
repz
jbe
sub
mov
pop
lds
cwtl
adc
pusha
rol
sahf
jp
and
sahf
inc
push
loop
stc
aam
andl
fsubl
psllq
popf
or
subb
in
sub
orb
inc
and
inc
addb
and
inc
add
test
sbb
xor
in
pop
jns
mov
push
mov
sbb
cld
pop
std
or
stos
jnp
push
sahf
mov
cli
shll
aam
arpl
cmp
xchg
sbb
orl
movsl
pop
int
inc
shr
in
outsb
adc
lret
idivb
adc
or
sbb
stos
nop
push
inc
int
cmpsb
xlat
cmc
fistpll
ljmp
lock
or
imul
not
fidivs
data16
repz
dec
jle
jle
pop
lret
mov
lods
rclb
push
xchg
fbld
mov
icebp
out
movsl
lahf
jmp
push
push
aaa
mov
out
cmpl
mov
add
scas
das
inc
ret
sbb
test
mov
push
xchg
mov
xorl
xlat
popf
push
mov
es
lock
inc
dec
jb
scas
notb
mov
jecxz
cmp
pop
stos
pop
mov
aas
flds
mov
fsubs
cmp
bound
out
aas
xlat
mov
mov
inc
or
jmp
pop
push
mov
lret
es
xor
mov
push
push
xlat
cmp
sub
inc
cli
lea
mov
frstor
shl
or
outsl
and
addr16
lods
adcl
in
shlb
insb
push
mov
adc
negl
sbb
jp
cs
cmp
cmpsb
call
jl
mov
je
out
xlat
pop
jno
mov
dec
adc
mov
imul
or
inc
mov
sub
xchg
mov
mov
push
stos
pop
dec
nop
out
mov
arpl
dec
jle
sahf
push
mov
lcall
cmp
mov
out
lods
jle
jg
repnz
test
add
pop
xchg
aam
pop
mov
sbbl
lret
sub
mov
fmul
xchg
dec
into
cs
add
pusha
or
aas
inc
dec
mov
mov
inc
lds
nop
fcomip
jns
loop
fsubrl
test
dec
cs
or
lds
mov
add
or
repz
push
repz
xor
scas
addl
dec
adc
mov
xchg
daa
divl
lock
lret
es
call
inc
xchg
ror
pop
add
inc
in
pushf
inc
hlt
repz
fsubs
fs
mov
xchg
ja
mov
cld
fadds
fwait
adc
inc
je
adc
jg
sbb
imul
cmp
adcl
pop
dec
jmp
mov
cmovbe
mov
adc
mov
int3
lret
jge
popa
adcb
lea
pusha
mov
or
mov
xor
adc
adc
pop
mov
lcall
mov
imul
jb
inc
imulb
int3
push
pop
inc
cmp
and
insb
pop
pusha
cli
insb
or
arpl
mov
mov
mov
add
adc
pop
outsl
addr16
arpl
sbb
xchg
sar
add
int3
inc
cwtl
popa
pop
out
inc
mov
mov
mov
add
sub
rcll
and
shll
loope
inc
cmovns
ljmp
clc
jle
add
inc
inc
ss
mov
insl
mov
mov
push
shlb
aam
mov
enter
dec
pop
es
sbbl
and
sahf
add
emms
into
jl,pt
imul
sahf
or
adc
and
aaa
jnp
xchg
shlb
fcoml
jge
inc
pop
mov
sub
xlat
je
xchg
inc
cmp
mov
aas
arpl
adc
xchg
scas
cld
test
add
sub
pop
leave
mov
mov
clc
in
fisubrs
push
ja
into
jnp
divl
icebp
ds
fwait
imul
cmp
mov
std
loopne
xchg
mov
xor
pop
cmp
pop
mov
filds
xor
stos
adc
xchg
lcall
xor
jnp
cwtl
and
mov
adc
fs
inc
or
pusha
mov
pop
mov
andl
add
mov
jg
shl
push
mov
icebp
outsl
jg
jo
jecxz
popa
ret
lcall
andl
pop
mov
test
addl
out
in
cs
push
rol
repz
lock
adc
add
sarl
lock
ja
mov
jns
push
pushf
fldt
out
or
push
mov
push
loope
in
mov
push
xchg
push
pop
jmp
cmpsb
js
aam
mov
dec
stos
add
out
imulb
xchg
dec
and
sti
enter
and
pop
inc
lret
and
fimuls
lcall
in
les
fisubs
popa
loop
mov
and
fisubrs
push
push
cmc
out
out
dec
mov
mov
cmp
jnp
xchg
dec
fldenv
das
cwtl
nop
int
notl
inc
xchg
scas
mov
dec
aaa
pop
cwtl
jg
jge
test
xchg
std
std
and
cmp
jns
xor
popf
mov
jo
sahf
adc
std
in
jnp
adc
fistpll
ret
repnz
in
fstpt
mov
push
cmp
mov
or
jbe
mov
cmp
jae
sbb
nop
sbb
push
xor
xor
movsl
and
jmp
in
in
clc
fadd
popa
rcr
popf
push
cmpsl
loopne
sarb
sub
push
xorb
dec
pop
and
lea
add
bound
movsl
repz
std
mov
pop
leave
adc
daa
mov
and
mov
movsl
adc
jg
or
sbb
cwtl
or
dec
adc
dec
adc
ror
mov
int3
and
inc
sbb
pop
xacquire
jmp
sub
ret
je
pop
dec
dec
add
or
lcall
fsubrs
jne
sahf
adc
flds
mov
sbb
dec
out
daa
ljmp
mov
mov
addb
push
adc
xlat
rcl
jg
jno
sbb
daa
mov
enter
mov
cwtl
and
pop
mov
jb
sti
fsubrs
shlb
mov
jo
jb
and
leave
arpl
xchg
and
jne
cli
mov
scas
psllw
leave
movsl
xor
in
call
xor
mov
icebp
sahf
sahf
cli
cli
and
call
jge
jae
aad
lret
lahf
sub
xchg
stc
aam
movsl
hlt
push
daa
lea
lahf
lods
cmp
fs
mov
adc
dec
jg
outsl
sbb
lock
jb
push
or
nop
out
inc
mov
es
jnp
pushf
xchg
test
movsb
mov
pop
shll
cmpsl
xchg
lret
inc
ret
add
jl
push
push
test
ret
shr
shlb
clc
or
inc
iret
jb
cmp
out
xor
lock
dec
mov
xchg
pop
rorl
push
fisttpll
int
or
xchg
lea
cmpsb
pop
outsl
je
fsubr
mov
mov
adc
pushf
insb
add
inc
mov
add
sbb
mov
push
pop
test
js
dec
mov
xchg
push
sbb
xor
movsb
mov
xchg
adc
lcall
xchg
out
les
cmp
repnz
mov
jmp
push
insb
in
lods
inc
push
xchg
fsubrl
lods
lds
ret
jl
out
xor
in
sbb
loopne
nop
and
cld
cltd
fdivrs
nop
sbb
mov
in
jp
jle
jns
cli
lahf
push
sahf
cltd
mov
lret
and
or
jno
loop
pop
jmp
or
lret
hlt
int
cmpsb
pop
mov
pushf
sahf
mov
in
xor
daa
xchg
push
mov
out
push
in
pop
sbb
ds
mov
test
inc
call
cld
fistpll
imul
push
cmp
pop
add
call
xchg
mov
sub
or
sahf
sbb
fiaddl
sbb
cmpsb
outsb
add
fbstp
out
mov
mov
pop
lea
testb
push
aam
pusha
push
push
cmp
call
outsb
pop
loope
and
pop
es
lea
dec
movsl
sbb
movaps
popf
andl
dec
movsb
scas
test
adc
jne
sbb
and
jns
xor
dec
add
inc
inc
and
xchg
scas
ds
popa
std
xchg
loopne
sub
iret
adc
fbld
lcall
push
imull
sarl
dec
ja
inc
dec
xchg
fcoms
fs
dec
dec
mov
int3
pcmpeqb
mov
push
pop
mov
js
or
push
cmp
lea
faddl
inc
lock
les
xchg
and
xlat
mov
bound
and
cmp
fs
and
jb
loop
xor
cwtl
mov
xchg
jno
mov
int
scas
xchg
shrb
mov
and
insb
std
dec
stos
lods
pop
incl
pop
outsl
movsb
lods
push
push
dec
mov
lock
test
test
inc
aam
and
mov
mov
in
insb
aas
std
jnp
sub
adc
sbb
add
xchg
test
lock
cs
scas
out
dec
pop
repz
jp
aad
push
adc
stos
mov
roll
call
push
arpl
pop
xlat
out
xor
add
add
sbb
pop
test
dec
push
rol
cmp
xchg
gs
sub
mov
es
mov
hlt
push
push
cltd
add
mov
sub
dec
jecxz
inc
xchg
das
add
mov
scas
jmp
andl
inc
jmp
jmp
fs
sahf
push
insb
sbb
adc
fcmovnu
daa
test
xchg
xchg
cmp
stos
mov
dec
fnstsw
in
pushf
xchg
pusha
sbb
mov
and
and
js
test
les
test
inc
and
jg
popa
mov
mov
outsl
int
mov
stos
jne
dec
jnp
inc
orl
fisttpll
fcomps
cmp
out
popf
test
xlat
jg
mov
jnp
andl
loopne
into
mov
loope
inc
movsb
lahf
xchg
xchg
mov
dec
shlb
jne
inc
gs
mov
mov
xor
mov
add
push
mov
xor
fldt
rorb
jmp
mov
sbb
ds
mov
jge
shll
fildl
movsl
stos
in
mov
adc
xor
data16
sub
xchg
inc
andb
in
ds
mov
imul
into
jge
outsl
sub
imulb
cmp
js
cli
incb
sti
mov
adc
lret
nop
jl
jp
aam
test
loopne
ret
push
test
fists
adc
xchg
xor
aaa
fcoml
fdivr
iret
leave
cmp
sub
mov
jns
testb
fwait
shl
cmpsl
mov
cmc
loopne
test
fists
fbld
mov
sub
es
cmpsl
add
push
mov
ljmp
imulb
outsb
fwait
sbb
mov
imul
aad
test
adc
std
add
xor
xlat
mov
push
xor
xchg
into
imul
jge
test
clc
add
xchg
or
dec
loopne
xchg
repnz
cmp
scas
jmp
xor
or
test
and
xchg
adc
lods
cmpsl
dec
iret
jo
out
pusha
push
out
dec
fdivs
lret
jae
shll
add
div
pop
jae
es
xchg
scas
adc
ljmp
pop
xchg
xchg
je
add
xchg
fs
cmp
sub
std
and
jne
aaa
stc
stos
and
out
push
pop
jg
cmp
xor
mov
lcall
xchg
mov
jbe
xchg
fcomps
mov
mov
int
sub
or
mov
mov
sbb
test
jne
adc
or
pop
jns
sub
xlat
outsl
xor
popa
inc
aaa
sbb
aaa
xor
push
push
inc
fistl
pop
jp
cli
outsb
push
push
mov
mov
out
aad
add
adc
push
pop
sub
loopne
cli
push
test
push
adcl
and
sbb
or
jl
js
insl
test
popf
mov
jle
mov
fisubrl
cmp
sbb
jae
iret
pop
adcb
lcall
bound
test
sbb
lcall
cltd
pop
jne
mov
sub
out
rolb
and
push
idivb
pop
ss
dec
test
mov
int
xor
pop
fwait
add
test
data16
leave
jle
sbb
test
dec
xor
mov
movsb
xor
lret
mov
int3
in
dec
jecxz
fucom
enter
sub
xchg
or
insl
push
mov
sbb
adcb
xchg
outsb
in
pop
out
push
fwait
out
shll
test
mov
mov
pop
ret
lds
jmp
lds
xchg
adc
daa
jne
jge
add
das
and
or
pop
mov
scas
jnp
sub
push
sub
push
mov
icebp
aaa
xchg
pop
inc
lret
test
and
rorb
dec
call
mov
ret
push
repnz
mov
pop
insl
pop
pop
push
dec
cmpsl
mov
mov
inc
pop
lods
movsl
mov
sbb
mov
jge
out
punpckhwd
sbb
xor
lahf
push
cmp
jp
divl
adc
cmp
pop
push
cltd
mov
pop
lret
xchg
fbstp
mov
xchg
jno
or
rcrl
aaa
jmp
stos
mov
std
in
jl
cmpsl
and
stc
adc
and
mov
add
inc
pop
push
push
add
dec
push
lret
pop
sub
adc
imul
scas
je
push
jno
pop
sub
xchg
cmpsb
test
sub
push
mov
scas
add
add
fcoml
dec
testb
push
enter
sub
pop
sbb
sub
cmpsl
repnz
cmpsl
cltd
add
mov
dec
orb
popf
cli
stc
inc
fwait
pop
popf
jb
mov
mov
add
mov
xchg
inc
cli
xorl
adc
test
dec
leave
jp
xor
add
test
adcb
adc
cli
aas
icebp
call
movsl
loope
mov
sbb
pop
inc
jne
pop
aaa
mov
ret
stc
xchg
xchg
inc
jg
sti
jno
scas
pop
popa
lods
sahf
rorb
mov
es
xlat
sbb
xchg
sbb
inc
cmp
in
fmull
daa
jp
scas
rcl
test
cmp
xorb
mov
add
push
aam
xchg
sbb
shl
push
imul
pop
jnp
mov
arpl
push
mov
add
dec
shll
adc
pop
push
test
add
out
nop
inc
sbb
mov
inc
inc
gs
popa
lea
icebp
loopne
sbb
lds
adc
popa
xor
add
cli
pop
in
adc
dec
stc
push
fdivrp
push
insb
inc
leave
test
jae
push
fs
or
mov
ljmp
nop
and
and
into
fdiv
testl
add
or
or
sbbb
mov
dec
fsubp
pop
repz
jmp
sub
or
mov
call
xor
insl
sahf
adc
xor
xor
dec
or
cltd
cmp
repnz
pop
mov
scas
outsl
cmp
adc
sti
sbb
ja
enter
mov
adc
xor
stos
mov
arpl
pushf
clc
movsl
push
mov
xchg
sub
jnp
test
jb
les
pop
jle
dec
inc
cltd
inc
inc
pop
pop
push
and
ds
rorl
cmc
or
in
divl
mov
jb
cwtl
inc
lret
inc
jae
mov
sbb
fbstp
ficompl
pusha
iret
fisttpll
loopne
mov
add
sbb
xchg
and
out
mov
scas
mov
cmp
or
add
sub
pop
pop
rcrl
adc
lret
xchg
mov
les
cmp
lcall
pop
pop
xchg
inc
cmc
sbb
stos
shrl
ja
fdivs
add
cmpsl
adc
or
bswap
clc
fdivl
inc
es
leave
sahf
cmp
mov
or
add
dec
mov
call
and
sbb
push
or
mov
add
sbb
push
popf
cmc
push
mov
add
push
mov
and
add
loope
daa
xchg
addl
cmpsl
jns
frstor
mov
jne
test
fstps
repz
std
inc
aaa
add
das
or
lock
push
inc
jae
cltd
jl
shlb
mov
jns
or
ret
jp
sub
inc
sub
push
sahf
mov
cld
pop
adc
sarb
adc
sbb
adc
insl
xor
or
xchg
lahf
lods
xchg
push
inc
dec
adcb
movsb
sbb
cmp
mov
adc
dec
mov
adc
lahf
mov
dec
hlt
mov
in
loop
cwtl
test
and
sub
in
std
nop
push
mov
fisttpll
daa
sbbl
jecxz
jecxz
dec
inc
mov
fdiv
cmp
lock
adc
push
in
ftst
scas
stos
fcmovnb
add
dec
insl
or
in
sub
cmpsl
dec
sub
xor
sahf
arpl
xchg
in
xchg
pusha
jnp
stc
cmpl
inc
fldcw
sbb
push
arpl
fwait
xor
loope
adc
inc
pop
loope
ret
and
outsl
jge
add
in
xchg
in
pop
mov
push
mov
inc
loop
dec
mov
mov
ds
mov
mov
cmp
push
les
dec
mov
jmp
in
jne
ds
jo
ret
fistpl
xchg
or
mov
sub
cmc
adc
ret
outsb
loopne
mov
fisttps
jecxz
jg
ja
jge
loope
scas
fsts
test
inc
mov
arpl
dec
aas
xor
test
ljmp
loop
mov
sub
shlb
adc
aad
pop
imul
popa
hlt
clc
push
in
stos
out
jmp
push
in
jle
push
lcall
cmp
push
push
mov
and
idivl
popf
dec
and
jns
jno
mov
mov
int3
jge
ficomps
or
pop
add
inc
popf
ficoml
fidivl
stc
dec
mov
addl
add
dec
scas
out
mov
daa
sti
and
jecxz
push
inc
jl
xchg
push
dec
push
sbb
push
mov
and
mov
negl
mul
xchg
lret
cmp
stos
fstps
aas
test
sbb
inc
xor
call
jbe
cld
pop
or
cmp
fsubl
mov
out
or
js
xor
fwait
leave
iret
mov
mov
push
loop
cmp
push
pop
xchg
aas
out
or
mov
sbb
imul
jnp
popf
arpl
or
adc
pop
leave
stos
repz
adc
jno
pop
pushf
insl
adc
adc
test
mov
movsb
in
sarb
les
scas
sub
sub
arpl
mov
js
xchg
mov
std
or
in
cltd
pop
xor
mov
cld
mov
lret
ficompl
hlt
test
dec
mov
sbb
loope
or
sub
jnp,pt
aaa
in
jb
cwtl
ret
ror
std
jp
mov
dec
or
xchg
mov
jb
out
xchg
test
stos
mov
cs
dec
xchg
inc
xchg
mov
xchg
popf
xor
sub
int
fcmovbe
jg
mov
icebp
xor
movsl
cli
cmpsl
push
imul
pop
test
inc
out
mov
mov
popf
jmp
cli
adc
adc
adc
cs
inc
cmp
mov
pop
out
and
enter
cmp
test
loop
jg
adc
fisttpll
sarb
and
add
pop
sub
and
mov
movl
xchg
jne
popf
in
add
jecxz
or
aad
dec
addr16
popf
loope
scas
xchg
push
aad
pushf
mov
outsb
subb
rcrb
xor
ret
or
leave
inc
shll
icebp
push
mov
and
movsb
inc
xor
lcall
push
jle
jo
aad
push
sub
pop
std
cltd
in
adcl
hlt
aad
negl
bswap
lods
out
mov
sbb
fldt
xchg
jp
addr16
fidivrl
add
scas
jl
xor
mov
in
add
xchg
into
sbb
dec
mov
notb
push
cld
or
fs
mov
mov
mov
es
enter
dec
adc
mov
test
lretw
or
out
les
movsb
push
jge
in
xchg
add
repz
lods
dec
mov
outsl
inc
and
aaa
ja
adc
inc
or
ror
movsb
icebp
insl
imul
cmp
push
stos
push
jno
inc
xchg
jmp
xor
jne
inc
push
cmp
inc
dec
xchg
pop
mov
sbb
mov
pop
sbb
push
pop
dec
aaa
jle
negb
icebp
pop
inc
in
into
jg
mov
mov
xor
or
lods
mov
lods
sbb
into
push
aaa
loope
dec
data16
dec
sub
adc
setl
dec
mov
cltd
mov
dec
test
push
push
cld
jbe
and
dec
aaa
int3
bnd
push
mov
pop
scas
push
add
mov
ret
fiadds
mov
ret
pause
jns
fisubl
int3
test
sub
mov
mov
fwait
les
cmp
es
test
and
or
pop
mov
cmp
push
fisubrs
push
mov
pop
xchg
jg
addr16
add
cs
loop
mov
push
lret
ss
sub
sub
negl
subb
ret
loop
out
add
xchg
mov
mov
stc
arpl
sarl
mov
sbb
outsb
adc
shl
adc
fwait
icebp
or
sti
sbb
dec
test
ficoms
xor
sub
dec
cmpsl
xchg
xchg
insl
out
inc
or
mov
rcl
loope
xchg
popa
push
sbb
mov
test
lea
test
fcmove
cmp
cmc
mov
imul
roll
dec
loopne
imul
js
cli
test
paddd
adc
test
xchg
adc
or
js
mov
adc
subb
cmpsb
lock
fildll
push
jnp
test
push
daa
popa
jno
ret
pop
and
imul
add
pusha
call
push
adc
xchg
gs
fucomi
lds
jne
shrb
insb
push
fcomps
xor
aas
aas
or
repz
adc
sbb
in
sbb
repz
into
gs
inc
sub
loopne
aas
call
sbb
mov
adc
adc
sbb
xor
ret
addr16
xlat
int
daa
mov
cmp
fldl
cmp
shlb
dec
out
sub
and
subl
and
mov
repnz
repnz
scas
sbb
jle
scas
mov
and
imul
inc
clc
inc
add
mov
lret
sub
push
cmp
fidivrl
xlat
outsl
jp
insb
jns
aas
mov
mov
inc
add
test
popf
xor
stos
popf
mov
outsb
cmp
daa
mov
lahf
popf
xchg
add
xor
cmpsb
xchg
pop
jp
add
mov
cmp
push
lods
cmc
out
adc
imul
rorl
fcmovnb
and
dec
sahf
mov
into
pop
ds
inc
and
aas
jmp
jno
dec
xchg
mov
pop
aam
std
out
cwtl
xchg
push
pop
iret
sbb
stc
scas
loope
ret
inc
rolb
ljmp
push
mov
push
lods
mov
das
sbbb
sbb
and
pusha
stos
mov
add
sub
xchg
repz
popf
cmp
or
jne
pop
sbb
shr
in
shll
in
fstpl
cmp
cmpsb
cmp
outsl
mov
stos
mov
movsb
mov
inc
and
cli
ljmp
js
pushf
add
push
pusha
fimull
scas
dec
jp
loopne
mov
sub
aam
daa
cltd
xchg
outsb
and
imulb
inc
cmp
mov
adc
enter
test
test
inc
jmp
int
jmp
out
clc
imul
adc
fcomi
rorb
popf
xchg
ret
sbb
jl
inc
or
xchg
incl
nop
iret
test
and
push
stos
sbb
dec
cli
mov
mov
bound
pop
in
jp
inc
repz
xchg
or
jno
jo
jno
jle
mov
mov
loop
cld
jne
adc
push
jecxz
cmc
push
jg
or
xchg
sub
lock
movsl
enter
cmc
cmp
xor
adc
sub
pop
mov
sub
inc
adc
in
cmp
cmp
and
sub
push
cltd
test
or
shlb
iret
xor
adc
outsl
jbe
scas
add
inc
cs
shrl
mov
adc
icebp
sub
jmp
outsb
lcall
loop
ds
outsb
rclb
push
push
push
test
adc
pop
cltd
out
pop
lods
adc
out
hlt
dec
negb
inc
sbb
cli
orl
jnp
in
in
xchg
jecxz
iret
push
push
fst
fldt
mov
mov
pop
jne
xchg
push
lcall
mov
ret
out
daa
push
incb
rcll
mov
insl
or
xchg
xchg
cltd
add
faddl
cmpsl
pop
dec
pusha
push
dec
sbb
inc
xchg
or
aas
jbe
mov
jmp
adc
flds
pusha
lahf
lock
cmp
test
add
ds
pop
fsubrp
push
mov
or
sbb
imul
enter
and
sub
xchg
stc
sbb
fwait
jmp
clc
testb
ds
ficomps
movsl
daa
js
enter
dec
scas
data16
mov
cld
outsl
sub
mov
nop
sub
outsl
cld
out
ss
xor
cmp
push
test
xor
testl
pop
xchg
jae
ja
xor
adc
dec
inc
notl
addl
inc
in
scas
jo
lcall
jmp
ror
xor
rol
std
and
outsl
cmpsl
dec
xchg
sbbb
cmpsl
rorl
shll
cmp
xor
sbb
jbe
mov
dec
lcall
pop
jns
insb
int
mov
dec
sub
outsb
xlat
xor
bound
jb
mov
cmp
leave
div
pop
je
push
mov
daa
inc
pmaddwd
adc
fcom
fs
int3
dec
repnz
sub
and
fcomps
fistl
movsl
ljmp
sub
add
shlb
rsm
stos
push
ja
xchg
pop
movsb
mov
fdivrs
cmp
cmp
xchg
loop
mov
cld
out
xorb
inc
inc
jecxz
jmp
or
repz
gs
inc
mov
pop
arpl
enter
or
mov
push
scas
push
pop
int
mov
in
xacquire
movb
out
test
mov
xchg
push
push
or
push
cmp
out
lcall
add
mov
inc
or
add
stos
out
push
aam
testl
xor
push
leave
out
add
jecxz
arpl
dec
lret
sub
mov
icebp
fiadds
cs
push
fwait
pushf
mov
lcall
jmp
popf
adc
lods
je
ret
adc
and
xchg
outsb
aas
in
xchg
les
stc
cmpsb
in
jno
popa
jmp
adc
xchg
dec
inc
lods
lods
cmp
xchg
xor
jb
cmp
jecxz
in
xor
ficoml
insb
popa
xor
adc
sarb
outsl
sti
mov
cld
lods
aad
int
push
test
cli
leave
and
add
mov
mov
mov
shl
hlt
fwait
sub
lcall
and
push
invd
leave
xchg
push
aaa
xchg
pushf
push
lock
inc
and
cmc
pushf
lahf
int
out
popa
jl
lret
push
mov
leave
aaa
xchg
ret
mov
mov
jnp
jle
mov
test
xchg
mov
mov
negl
dec
mov
and
mov
xchg
mov
iret
adc
insb
jg
mov
push
push
adc
rcll
daa
or
sbb
add
mov
push
movsl
fsts
test
inc
and
out
xchg
movsb
or
sbb
sbb
outsl
adc
cmp
lahf
je
xorl
repz
fcomip
cmp
add
in
out
inc
pushf
lea
rcrb
adc
pop
mov
sarb
les
das
mov
xchg
insl
pop
icebp
cs
fiaddl
das
mov
stc
mov
into
and
out
insl
adc
xchg
xchg
push
jmp
enter
popf
sbb
clc
push
pmaxub
or
pop
clc
adc
jge
scas
mulb
movsl
sbb
and
es
test
xchg
adc
xchg
loop
dec
movsb
dec
jno
divl
decb
ret
mov
nop
xor
mov
les
dec
lods
int3
daa
adcb
push
loopne
sub
mov
loope
jbe
movsb
push
int3
stos
pop
mov
mov
shrb
test
out
jnp
repz
hlt
arpl
cmp
mov
ljmp
and
adc
imul
mov
add
sbb
fisubs
stos
mov
sbb
rcrl
sbbl
or
cli
data16
loope
fwait
dec
lods
repnz
cli
add
es
sbb
addb
nop
repz
ja
adc
cmp
cs
scas
scas
xor
sbb
stc
lahf
movsb
das
push
xchg
jmp
sub
pusha
push
cltd
push
pop
jo
loop
cmp
sahf
js
stc
pop
mov
or
add
jecxz
xchg
sub
test
das
mov
mov
jle
aam
cmp
imul
int3
pop
xor
add
sub
xor
mov
pop
mov
jne
in
out
int
sbb
inc
lods
ljmp
dec
mov
cs
mov
movsb
pop
push
mov
adc
addl
cli
xlat
lea
in
fldt
pop
and
and
add
scas
outsb
push
cmp
add
push
sub
inc
aad
or
dec
xor
out
sbb
loop
mov
repz
jns
xchg
enter
jb
scas
push
and
movsb
xor
push
andl
in
movsl
pushf
xor
outsl
punpckldq
pop
lret
inc
inc
cli
mov
sub
out
ud1
cmc
leave
loope
sbb
in
imul
out
shr
sub
cmp
mov
dec
mov
sub
mov
cs
mov
iret
push
add
movb
mov
out
pusha
in
mov
addr16
pusha
xchg
sub
insb
jbe
mov
dec
or
xchg
insl
ds
imull
roll
sbb
pop
pop
lock
shrb
lcall
jo
jmp
lahf
adc
adc
fdivs
mov
cmp
cmp
mov
and
and
xchg
inc
pusha
or
sub
xor
fdivrs
cli
add
mov
icebp
cmpsl
mov
inc
inc
arpl
cmc
mov
imul
inc
rcrb
or
ret
cmp
mov
or
sbb
int
into
cwtl
fistpll
and
rorl
popf
sbbb
loop
ficompl
insl
pop
mov
out
push
bound
cmp
out
sub
outsl
mov
sahf
aad
dec
lret
loopne
lahf
mov
sbb
testb
cmc
mov
gs
out
stos
fwait
jae
xchg
mov
inc
xor
cwtl
test
cltd
adc
shlb
int3
icebp
add
push
fidivl
mov
ret
xchg
in
lods
in
and
push
xorb
inc
mov
inc
and
mov
out
mull
inc
arpl
fsubs
push
dec
pop
popa
lret
call
adcb
mov
pop
or
pop
pop
scas
fsubs
sbb
cmp
adc
ret
stos
pop
mov
ret
idivb
pop
mov
inc
js
lods
icebp
sub
movsl
lock
clc
in
mov
cmp
shlb
mov
pop
sub
add
sbb
sub
pop
aad
pop
loop
cmpsb
cmp
mull
push
cmp
hlt
inc
jmp
dec
xor
xchg
dec
or
inc
sti
scas
test
clc
pop
aam
pop
mov
lret
push
and
in
pop
fsubp
imul
cltd
out
fdivs
jnp
outsl
pop
mov
out
jecxz
adc
push
hlt
mov
iret
cmp
icebp
shrb
inc
and
icebp
mov
clc
fldenv
jecxz
push
mov
stos
pusha
sbb
sbb
pop
daa
jbe
stos
add
pusha
jle
lret
lods
in
jb
imul
js
xchg
push
pop
inc
aam
or
jge
jg
push
xor
mov
lahf
sbbb
xchg
aas
loop
es
subl
mov
adc
fstpl
sbb
adc
pop
cmp
andl
push
lock
popa
or
in
loopne
ret
loop
bound
ret
dec
xchg
add
aad
jne
cwtl
scas
cmpsb
mov
cmp
add
adc
push
sub
clc
adc
jl
mov
hlt
adc
pop
jl
xchg
rcrl
insb
adc
popf
fisttpll
insl
cmc
shll
dec
adc
jmp
loopne
mov
insb
and
loop
cmp
mov
out
xchg
daa
xchg
xor
ret
fcompl
push
mov
mov
ja
sub
add
sbb
shlb
in
or
jecxz
mov
jmp
and
sub
xor
out
je
inc
pop
test
test
test
sub
mov
test
fisubs
pop
clc
test
fidivrl
jecxz
push
mov
lcall
scas
adc
roll
mov
ret
cli
jmp
fnstsw
imul
push
pop
int3
inc
je
lcall
dec
mov
mov
mov
adc
dec
data16
mov
xor
xchg
nop
cmp
rcll
sti
fsubrp
inc
cltd
int
lds
jb
dec
jl
in
fnstenv
adc
cmp
and
xorb
push
test
xchg
insb
jecxz
mov
push
je
or
jae
xor
mov
mov
or
jnp
outsl
lods
jle
outsl
ret
sub
jge
jno
arpl
and
inc
adc
mov
push
fsubr
test
or
repz
ds
xchg
daa
enter
sahf
jge
adc
pop
xor
lcall
test
test
das
mov
adc
jecxz
cmp
imulb
stos
test
dec
cmpsb
je
fimull
jecxz
ds
aam
jmp
rorb
hlt
loope
lds
cmpsb
adc
mov
dec
outsl
jmp
inc
and
fbstp
and
mov
cld
mov
fidivs
fsubrs
jo
aad
sarl
insl
dec
or
pop
or
inc
movsl
lea
mov
or
fstps
cmp
sub
inc
fcmovbe
test
shrb
mov
xchg
int
mov
pop
lret
jns
and
loope
or
dec
sarb
mov
jne
add
sbb
dec
cltd
leave
mov
push
mov
lcall
pop
fisubrl
clc
xchg
arpl
in
loopne
imul
aam
or
jle
cmp
mov
loope
pop
sbb
jnp
pushf
sub
mov
addr16
adc
imul
push
outsb
push
mov
xchg
inc
rolb
inc
push
lods
adc
jbe
lods
cmpsl
popf
rcrl
rol
out
jnp
or
int3
mov
aam
popf
cld
loop
dec
pop
fdivl
dec
addr16
lods
repz
adc
rclb
inc
bound
in
cmp
fsubrl
mov
aad
pop
sbb
out
sbb
dec
scas
popa
mov
sbb
push
pop
xor
scas
fs
mov
mov
sti
adc
insl
sbb
aad
mov
and
mov
jge
call
ret
iret
int
sub
idivl
test
call
cmc
jns
cmp
repz
sub
pop
shl
stos
push
das
scas
pop
adc
xor
or
pop
jo
and
jecxz
jecxz
clc
int
mov
pop
mov
mov
push
stc
pop
ja
mov
lds
sbbl
repnz
push
jg
in
push
out
inc
push
in
push
dec
sbb
push
bound
scas
pop
gs
or
mov
xor
xchg
lds
mov
or
daa
in
repnz
dec
loopne
fimuls
xor
or
inc
fsubrl
and
out
mov
aad
fcomps
rcrl
add
insl
push
gs
and
sub
jg
jb
xchg
xlat
jne
addb
outsl
jge
pop
shll
pop
or
mov
push
xchg
daa
lods
inc
xor
push
push
mov
dec
daa
and
sbb
adc
xchg
into
mov
scas
cmp
fwait
sub
scas
pop
nop
push
ja
xchg
or
dec
pop
lcall
sahf
push
ljmp
ds
pop
push
sbb
and
pop
jle
push
mov
repz
push
je
insl
in
es
rcrb
icebp
xor
push
push
lret
jo
sub
pushl
loope
out
addl
adc
sbbb
filds
mov
push
push
rclb
add
and
test
mov
inc
mov
pop
inc
jp
sub
xor
jmp
cmpsl
sbb
push
jge
pop
stc
pop
js
scas
cmp
lea
pop
arpl
aad
inc
in
cmp
lea
jmp
xchg
fsts
dec
ds
xchg
imul
cmpsb
daa
int3
inc
xor
enter
inc
fcomp
mov
lcall
pop
inc
dec
fs
imul
das
je
jecxz
pusha
ret
xlat
pop
mov
push
pusha
ret
aaa
hlt
loop
fisubl
cmp
cmpsb
pop
jg
xchg
inc
cmp
push
sahf
dec
sub
pop
jnp
push
inc
jecxz
jnp
nop
sub
sahf
dec
insl
inc
dec
mov
sub
outsb
xor
mov
mov
jl
stos
jle
call
in
insb
subl
mov
mov
shr
loopne
inc
pop
mov
aas
cmp
jnp
out
insl
pusha
out
pop
aad
sbb
popa
ja
xchg
dec
push
lret
or
cltd
call
shlb
aad
mov
aaa
test
in
xor
mov
lods
dec
adc
leave
stc
mov
lcall
aam
mov
aas
cmp
cwtl
push
fnstcw
imul
dec
cmpsb
in
jmp
add
popf
xchg
inc
gs
mov
test
leave
js
adc
mov
push
cmpsl
out
shlb
jmp
sarb
mov
test
add
jbe
mulb
xchg
pop
xchg
xchg
jge
shr
into
ret
jno
and
mov
sbb
push
aam
add
inc
iret
sub
sub
mov
dec
xor
inc
pushf
push
adc
pop
push
pop
rclb
shl
mov
in
mov
addb
sbb
ret
setbe
mov
sub
data16
call
lcall
cmp
pop
mov
pop
xor
inc
fcompl
test
inc
fnstcw
lahf
fcomip
arpl
shll
in
lret
test
hlt
or
xchg
jle
loopne
addr16
in
sbbb
hlt
inc
mov
cmc
out
lahf
ret
push
sub
gs
pusha
cmp
ja
add
jb
cmp
movsl
ja
icebp
lret
in
sti
adc
mov
push
pop
sbb
dec
arpl
inc
lret
pop
sbb
icebp
fs
in
xchg
ja
pop
aaa
insl
insl
mov
je
mulb
add
popa
push
jne
sbb
cmp
andb
pusha
cmp
mov
imul
pop
test
sti
xor
test
sub
mov
adc
xchg
push
and
in
fcoms
xchg
lods
jb
repz
jb
fimull
xor
cwtl
sbb
ret
pusha
mov
xor
popf
xchg
pop
and
ret
stos
sub
sbb
cmc
shll
lret
jmp
dec
jmp
sbb
ja
mov
mov
shlb
test
mov
push
xlat
jo
mov
in
dec
push
or
mov
adc
or
lahf
mov
iret
add
imul
cmc
jae
lods
and
incb
jge
jnp
fidivrs
push
adc
mov
mov
add
pop
outsl
push
and
mov
xlat
and
icebp
mov
sbb
cli
in
pushf
pop
mov
jecxz
jb
ffreep
div
fimull
ljmp
xor
and
mov
and
adc
pop
push
add
in
xlat
push
xor
es
bound
pop
xchg
inc
sub
ret
mov
outsl
dec
popf
lret
in
outsl
or
in
test
in
stos
mov
mov
xor
inc
add
inc
mov
cmpsl
in
cltd
sub
pop
ds
loop
scas
cmp
repnz
into
push
in
cltd
divl
jge
lret
push
shll
jae
in
pusha
push
sub
push
popa
xor
cmpsl
outsb
mov
inc
xchg
popa
lahf
mov
iret
and
decb
hlt
movsb
sub
sahf
loop
out
or
inc
and
cmpsb
insb
fwait
dec
loop
test
lods
repnz
inc
loopne
shrb
lea
pop
cmp
sbb
jnp
dec
mov
scas
mov
sub
xchg
rcrl
test
popf
add
sbb
or
mov
sub
pop
mov
sbb
pop
into
les
pop
jns
sub
scas
mov
cs
inc
cmpsl
in
fiadds
cld
stos
cli
inc
cmp
push
push
or
adc
imul
xor
das
mov
cmc
insb
ja
jle
dec
arpl
lods
icebp
pop
mov
sub
popf
sbb
test
out
cmp
mov
cmp
ds
in
xor
in
sbb
js
xchg
cmp
repz
jl
jl
imul
sub
push
dec
out
enter
addr16
inc
aas
and
cli
or
xchg
or
jno
push
std
outsb
inc
int
pop
sbb
dec
cltd
insb
pop
or
or
push
fildl
mov
jns
xorl
aam
flds
xchg
in
mov
push
outsb
dec
push
or
mov
cs
out
imul
inc
test
rol
mov
jb
int3
jl
cli
mov
clc
nop
cmp
add
mov
xor
jge
movsl
dec
adc
bound
loope
imul
dec
mov
aam
test
xorb
stos
lea
xor
xchg
xchg
and
lret
sbb
test
shll
lods
sub
adc
ficoms
mov
cmp
push
sbb
sub
or
aam
push
pushf
and
sahf
push
inc
icebp
pop
fcompl
cmp
and
xchg
out
jle
xchg
mov
adc
add
pop
clc
or
jecxz
jne
roll
jns
dec
xchg
int3
mov
push
cmp
xchg
gs
jp
aam
push
push
icebp
xchg
or
mov
adc
push
xlat
popf
mov
addb
sub
lret
loop
jne
rcr
jb
pop
cmp
lock
add
shll
out
xlat
sub
adc
mov
xor
out
das
mov
insl
mov
cmpsl
pop
sahf
or
repz
sbb
aam
or
icebp
mov
aad
dec
rorl
mov
cld
stc
push
sbb
out
jge
stos
dec
or
sub
push
ret
mov
add
xchg
sub
mov
mov
xchg
daa
test
insl
cmp
ss
outsb
movsb
jg
testl
mov
add
mov
dec
lea
and
std
cmp
mov
loopne
in
push
out
mov
repz
dec
add
inc
sbb
jnp
add
lods
popf
fmulp
leave
dec
push
sub
stc
cmp
lods
out
cmp
aas
or
inc
cmp
dec
sub
cmp
addr16
push
mov
in
dec
out
cmp
adc
push
mov
push
iret
sbb
mov
mov
outsb
nop
pop
lcall
add
int
pusha
movsb
jns
addr16
pop
jecxz
in
enter
std
mov
jae
lret
mov
xchg
jb
mov
pop
shr
xor
mov
pop
loop
push
push
repz
out
dec
call
pop
mov
mov
insl
add
pop
push
dec
outsb
inc
pop
sbbl
jp
lods
cmp
pop
mov
jno
sbb
call
mov
dec
mov
icebp
xchg
pop
cmp
sbb
or
mov
adcl
xchg
clc
scas
ljmp
pop
and
dec
inc
xor
imul
frstor
lods
out
rolb
mov
adc
inc
pop
add
ja
out
popl
pop
cmpsl
test
adc
daa
mov
or
scas
pop
sub
int
cmpsb
ds
push
or
xorb
in
dec
push
push
cmp
add
add
or
test
push
adc
mov
imul
push
loop
mov
or
int3
mov
lret
js
fucomip
mov
lcall
add
dec
xor
insb
ljmp
ljmp
ja
fadds
lahf
jl
adc
adc
jmp
xor
pop
adc
ljmp
push
xor
leave
inc
test
arpl
lcall
cmp
push
dec
fst
and
popa
lret
sbb
xchg
scas
pushl
xchg
or
push
or
jne
jns
pop
repz
jl
xchg
inc
adcb
mov
je
cld
in
jle
jg
dec
dec
inc
mov
adc
ss
xlat
adc
andl
loopne
ret
mov
jno
jno
sub
dec
jno
gs
sti
fmuls
mulb
je
dec
fs
sbb
adc
mov
jae
ss
jns
sub
mov
bound
jnp
inc
xchg
int3
in
inc
adc
insl
aam
xchg
repnz
test
lret
inc
inc
mov
xor
inc
xchg
cwtl
std
out
lahf
adc
push
aaa
adc
mov
pop
cld
ja
std
add
sbb
cmp
sbb
dec
jmp
push
adc
sub
pop
push
dec
leave
fnstenv
fistpl
mov
dec
add
push
pop
jge
ss
mov
lahf
cli
loop
das
cmp
mov
jmp
jle
inc
jne
lods
and
lods
clc
leave
aaa
sub
mov
scas
stos
xlat
iret
cmp
arpl
ret
fnsave
lahf
test
lcall
hlt
adc
jne
mov
scas
sti
adc
movsb
das
int
jmp
cmpsl
stc
bound
aad
ficoml
sub
xchg
movsl
adc
pop
daa
js
adc
loope
daa
subb
push
jb
push
test
adc
pop
in
fisttpll
or
in
mov
sbb
jp
sub
pop
lds
mov
xchg
mov
call
cmpps
lods
out
insl
rol
pop
sub
fdiv
inc
push
xlat
mov
xchg
fwait
push
xor
xor
stc
out
shlb
loopne
leave
push
stos
ss
pop
add
push
mov
cmpxchg
mov
out
mov
xlat
cmpsl
in
xchg
ds
movsb
and
loope
mov
inc
mov
pop
sbb
cltd
popa
pop
repz
scas
sub
push
mov
dec
aas
popf
adc
inc
call
repnz
mov
in
scas
jl
sbb
mov
cmpsb
mov
and
scas
daa
or
add
adc
lret
fstpt
sbb
pop
lock
je
mov
xlat
inc
inc
mov
or
ljmp
inc
jns
push
rcl
dec
pop
mov
jno
stc
mov
pushw
xor
xchg
xchg
adc
sub
lcall
movsb
lret
arpl
outsb
cmp
call
dec
mov
cmp
fnstsw
or
lret
pop
idivl
cmp
into
mov
enter
lahf
pop
pop
test
lahf
test
push
xor
or
ret
sub
mov
icebp
lock
call
xchg
mov
inc
and
jle
add
mov
jmp
sbb
push
fists
mov
and
inc
dec
stos
mov
mov
mov
cmpsl
bound
mov
loopne
jae
test
imul
test
rcll
call
shlb
pop
or
or
pop
daa
je
mov
push
lcall
mov
cltd
or
pop
subb
cmpsb
mov
jnp
cmc
lods
mov
jp
add
xchg
lret
mov
adc
ljmp
leave
pusha
sub
sahf
xor
ret
jl
ss
adc
xchg
cmpb
sahf
icebp
push
orl
pop
sbbb
repnz
add
sbb
and
test
dec
push
test
mov
loop
mov
das
mov
mov
mov
clc
addb
adc
bnd
lods
scas
adc
repnz
fcompp
dec
into
mov
mov
sub
aad
or
fs
imul
mov
ret
and
mov
inc
fincstp
nop
mov
mov
cmp
or
or
or
or
pop
jb
data16
hlt
and
and
rorl
cmp
and
test
dec
mov
xchg
icebp
je
xchg
jecxz
mov
mov
in
mov
dec
xchg
in
out
pop
test
in
imul
or
jns
pushf
and
in
mov
cmp
ret
fisttpl
sub
mov
mov
cmp
pop
xor
and
movsb
jnp
ss
outsl
or
jne
mov
mov
dec
lock
cmp
int
cmc
add
outsb
in
cmp
clc
insl
sub
in
mov
xchg
or
mov
scas
test
ljmp
sbb
stos
xor
outsb
push
mov
fwait
repz
lret
pop
cmp
xor
xor
lea
in
push
sbbl
jmp
decb
ja
cmpsl
xchg
mov
shlb
xor
cmp
mov
or
add
mov
pushf
cmp
sub
pop
mov
outsb
arpl
pop
jle
mov
insb
scas
adc
inc
sarl
repz
push
mov
repz
mov
dec
pop
cmpsb
les
loop
xor
mov
xlat
call
out
mov
fucomp
fcmovnb
insb
adc
xchg
and
fdivr
and
xchg
int
and
loopne
mov
pusha
cmp
cmpsb
add
test
test
test
jmp
xor
fiaddl
jo
inc
mov
testb
les
mov
test
arpl
sbb
push
and
xchg
cld
imul
add
loopne
pop
mov
jo
sbb
iret
outsb
in
add
push
pushl
add
jo
outsb
dec
repz
mov
mov
cmc
inc
jbe
scas
dec
mov
mov
push
pmaxub
inc
xor
aas
popa
fisubl
notb
inc
fs
pusha
push
or
and
lds
xchg
insl
inc
dec
xchg
outsl
adc
and
clc
or
push
cmp
mov
cs
xor
jle
cwtl
insl
mov
addr16
mov
nop
add
rcrl
add
adc
mov
call
stos
and
fimull
xchg
les
push
imul
and
leave
xchg
xchg
mov
aaa
insb
lock
mov
pusha
nop
adc
sbb
stos
pop
mov
xchg
xchg
sti
add
lahf
lds
loope
cmp
sub
adc
int
ds
int3
cmp
and
mov
push
jbe
push
ja
nop
lcall
cmp
xchg
add
ja
push
mov
and
xchg
mov
sub
sub
cmpl
in
call
stos
mov
clc
sti
insb
je
insb
pop
xchg
add
test
fcomi
mov
movsb
test
push
pusha
xchg
mov
pop
in
lea
push
mov
arpl
mov
jns
loope
roll
mov
mov
jl
or
fdivs
xor
xchg
les
cmc
roll
je
cmpl
sbb
and
mov
and
push
jg
or
xor
lods
lret
sub
testl
cli
jb
mov
sti
popf
xchg
mov
test
mov
pop
rol
sub
sub
cmc
mov
out
pusha
jecxz
aaa
into
fcoms
ds
fnstenv
sub
xor
jno
inc
ja
mov
jle
and
mov
fcomps
push
movsb
in
mov
data16
aad
ficompl
jge
cwtl
inc
xchg
std
out
pop
xchg
shrl
call
out
daa
xchg
pop
cmc
inc
sbb
dec
jo
pop
loop
xor
add
shll
int
frstor
lret
jmp
scas
mov
add
rclb
mov
mov
out
jo
test
jmp
ret
jecxz
inc
pop
mov
ret
repnz
sbb
inc
adc
out
aad
mov
xchg
adc
push
aad
and
sbb
inc
or
push
in
inc
dec
fucomip
xor
and
pop
push
lds
pushf
stc
iret
cmp
xchg
into
add
aas
aam
cmpsl
movsb
outsl
repz
xlat
xchg
lods
popa
std
loopne
mov
fsubrs
aaa
push
sub
sbb
in
arpl
inc
dec
rcr
or
mov
mov
mov
mov
push
stos
sbb
cmp
jno
jo
repnz
fs
test
add
out
pop
icebp
push
cmpsb
mov
loop
dec
insl
or
mov
jns
fildll
jle
sbb
mov
push
push
and
jnp
loop
popf
cmp
or
jle
pop
icebp
jg
shlb
and
imulb
adc
sbb
push
pop
dec
jbe
pop
pop
mov
mov
loop
xor
lods
icebp
xor
cld
inc
pop
ficoml
addr16
out
sub
jge
iret
test
movsb
sub
mov
push
fistpll
in
xchg
jbe
mov
xchg
jno
xor
mov
xor
jno
loope
ret
add
into
jbe
push
fidivs
add
nop
movsl
orl
mulb
shrb
ret
hlt
xchg
jmp
jne
shlb
je
jp
icebp
pusha
xor
scas
in
inc
sub
mov
add
push
cltd
and
fst
jmp
subl
jb
dec
sub
insl
sub
push
jns
cmp
xor
lods
and
push
test
or
into
in
push
dec
xor
sub
xchg
xchg
fnstsw
jge
out
cmpsl
mov
mov
cmpsl
loopne
dec
lods
aam
lahf
cli
stos
mov
mov
sahf
and
in
ret
sti
into
xor
bound
imul
add
enter
in
pusha
in
xchg
jp
jbe
inc
adc
or
xor
paddsw
arpl
cmp
xor
and
sbb
push
dec
or
and
cs
rcl
sbb
sub
mov
jl
iret
lret
jae
and
push
int
pop
push
hlt
jg
aas
xchg
add
jb
enter
in
nop
pop
push
mov
arpl
jnp
or
daa
or
pusha
xor
jg
sbb
in
inc
insl
insb
fistpl
jno
aas
ret
pop
popf
jecxz
pusha
lret
das
sub
xchg
jne
cmpl
out
cmp
ret
lret
fwait
ret
leave
call
sub
sub
aas
jge
cs
dec
xchg
inc
jmp
lret
enter
push
adc
mov
dec
jg
cltd
ret
and
inc
pop
push
xor
dec
or
push
in
xchg
jg
cmp
loope
mov
lods
mov
push
std
test
leave
call
dec
push
push
sub
xor
sbb
or
cmp
scas
mov
inc
push
stos
jl
xchg
gs
scas
iret
adc
popa
movsb
ss
daa
mov
pop
clc
jo
mov
idiv
mov
test
scas
jne
xchg
jno
mov
rol
les
mov
std
cs
inc
divb
pop
cld
int3
inc
lret
jnp
cli
es
push
jo
pop
cld
aam
jns
add
clc
imulb
add
lret
xchg
xor
mov
aad
mov
shll
popa
mov
push
inc
jo
cltd
xchg
fnstcw
jecxz
push
dec
or
enter
outsb
cltd
push
sbb
sub
into
push
sub
or
out
pop
aam
pusha
fcoml
mov
push
or
fnstsw
ss
test
div
dec
adc
hlt
jmp
sti
aas
cmc
test
mov
pop
ja
xchg
outsb
mov
incl
mov
sbb
lock
repnz
loopne
adc
and
arpl
stos
adc
jmp
add
push
cmp
mov
decb
sbbb
jo
fcmovne
fwait
jmp
pop
fwait
out
jns
xor
lret
iret
mov
ss
mov
daa
mov
out
inc
dec
lret
sar
cmp
jno
std
sbb
push
dec
fnstcw
add
test
mov
data16
lods
cld
xchg
jne
jnp,pn
adc
lea
inc
adc
icebp
cmp
mov
std
lahf
sub
xchg
sbb
xchg
push
outsl
sbb
test
cmp
jae
jle
cmp
and
lock
inc
rolb
je
adc
push
pop
aas
adc
jbe
or
es
xor
call
cwtl
xchg
pop
mov
lcall
pushf
sbb
xchg
inc
pop
into
cmpsb
fwait
mov
sub
out
out
adc
inc
mov
ret
cwtl
notl
jno
repnz
imul
ret
int
or
lds
je
loope
inc
stos
iret
mov
jle
je
inc
inc
dec
in
inc
mov
jns
mov
mov
push
fisubrl
push
xchg
jo
fs
push
pop
mov
and
fisubl
adc
js
insb
mov
lea
pop
sarb
jge
in
inc
cs
xor
aam
xchg
xlat
sub
insb
push
aaa
dec
add
or
mov
xchg
xchg
sbbb
sti
push
les
cmpsl
popf
rcr
or
inc
fldcw
mov
addr16
loopne
jmp
cltd
gs
mov
stc
mov
xchg
dec
jns
jg
xor
dec
xor
sbb
jle
dec
out
push
lods
dec
cld
ljmp
sarl
enter
in
lret
test
fistps
pop
dec
gs
jp
inc
mov
cmpsb
jo
xlat
cltd
insb
push
dec
nop
cwtl
adc
notl
inc
shlb
cli
cmp
testl
shlb
lds
and
mov
shlb
ret
popf
or
or
pop
cmp
lret
repz
aad
inc
fsubs
jne
fidivrl
jns
add
mov
lahf
pop
rcll
cmp
xorl
mov
sub
scas
outsb
and
xchg
cwtl
xchg
sbb
cmp
movsl
aad
jle
shrl
dec
lret
lcall
inc
mov
sahf
outsb
in
mov
aas
imul
stc
push
es
cmp
popa
decb
mov
sub
mov
push
jecxz
or
int3
pop
pop
add
adcl
mov
fists
add
xchg
shrb
mov
push
aaa
arpl
das
pop
mov
lret
xchg
pcmpeqw
cmp
and
cmp
or
lcall
test
lds
sub
rep
rcrl
out
or
push
test
mov
ret
and
dec
pop
sub
or
fildl
xor
xchg
loop
sti
es
jl
dec
into
into
pop
mov
test
mov
fistpll
movsb
push
or
lock
arpl
adcb
inc
sub
mov
sub
or
lcall
lahf
out
into
ljmp
cmp
ljmp
pop
xor
test
xchg
inc
jae
push
mov
es
push
push
xchg
stos
in
in
dec
pop
mov
sbb
enter
pusha
das
adc
cwtl
push
lds
cltd
sub
adc
sub
lods
int
push
jbe
stos
mov
enter
cmp
xchg
int
xchg
cmp
inc
dec
lods
stos
jae
xor
imul
xchg
lcall
mov
dec
int
arpl
sti
cmpl
imul
nop
dec
sub
cmp
sub
cmpsb
or
mov
stc
xchg
xchg
inc
or
lock
inc
cltd
test
ss
int
fcomps
and
pop
filds
clc
xor
out
push
aad
ljmp
pop
sahf
cmp
lds
out
jle
cmpsl
push
ljmp
dec
repnz
imul
cmp
movsl
addr16
cld
insl
xor
outsl
push
xlat
jbe
cmp
inc
les
pop
push
fistpll
pop
adc
insl
hlt
lds
jno
and
scas
xchg
lods
cmp
cmp
mov
adc
xchg
cmp
pop
mov
cli
test
into
fiadds
test
cltd
push
pop
loop
addr16
mov
stos
hlt
sahf
addl
or
add
imulb
div
cmc
andb
sub
or
int
loope
jae
hlt
out
mov
movsl
sub
pop
lcall
sub
subb
jb
sub
aam
imul
or
loopne
dec
pop
mull
adc
stos
sub
repnz
jns
jns
xor
pop
lcall
insl
jnp
stos
test
les
pusha
clc
pushf
stos
add
xor
ja
or
and
shll
mov
fidivl
mov
rcrl
in
xchg
fdivr
sahf
lods
ss
xchg
push
std
repnz
icebp
mov
enter
iret
pop
stos
dec
and
ds
hlt
int3
sbb
nop
or
ss
xor
into
mov
mov
mov
add
or
push
stos
jae
jg
cmp
or
in
mov
dec
lock
pop
nop
sbb
fsubrl
dec
push
incl
and
divb
clc
test
mov
sub
jo
jno
std
enter
imul
lds
shrl
mov
out
ljmp
push
lea
xor
xor
pop
and
mov
fistpl
dec
insl
add
int3
xlat
cmpsl
cmp
mov
outsb
push
push
nop
fidivrs
sub
jno
ret
fisubl
shll
scas
bnd
dec
lock
insl
rcrb
rcr
fsubs
mov
iret
add
aad
jl
push
sub
mov
jnp
sbb
lcall
iret
mov
xchg
sub
inc
pusha
std
test
in
mulb
or
dec
mov
cld
or
mov
insb
dec
pop
shll
stos
pop
mov
push
loope
cld
adc
enter
mov
mov
cld
rcll
insl
push
jg
iret
fldt
push
cmc
orl
dec
jo
sbb
sub
int3
shll
and
pop
clc
inc
sbb
xchg
mov
pop
adc
push
dec
cmp
xchg
fists
inc
scas
aam
add
sbb
dec
jg
mov
popf
lods
lds
insl
or
stos
dec
mov
leave
inc
outsb
push
lcall
pop
dec
inc
pop
jns
out
xchg
repz
in
rcrl
xchg
setne
dec
addl
addb
mov
ret
les
mov
sub
sbb
enter
adc
inc
mov
sbb
das
cmp
insb
fcompl
clc
ss
mov
iret
scas
xchg
popa
data16
ss
cmpsl
and
enter
sbb
mov
pusha
dec
push
in
fbstp
vpmuludq
jb
mov
jle
pushf
addl
stos
add
push
hlt
bound
popa
incb
aaa
sub
scas
cwtl
insb
arpl
inc
dec
add
inc
movsb
mov
fldcw
and
lock
fstl
aaa
jle
mov
cmpl
ds
adc
jecxz
ret
xor
and
mov
jb
jns
call
sar
jo
mov
add
cltd
jl
jge
inc
mov
push
incb
fimull
push
movl
imul
jno
dec
adc
jb
sbb
mov
mov
das
iret
in
dec
fstps
pop
arpl
cmpsl
hlt
add
add
stc
xchg
mov
cmp
mov
dec
xchg
loopne
les
pop
or
sarl
int3
call
and
inc
inc
push
dec
and
inc
iret
in
lret
add
jb
pop
xchg
int
push
pop
sbb
mov
in
pop
je
add
filds
mov
in
mov
push
in
inc
mov
out
sbb
lcall
add
add
push
xor
out
and
dec
cwtl
xor
js
aas
popf
mov
hlt
mov
test
in
testb
inc
and
outsl
mov
dec
or
js
cmpsl
adc
mov
aam
and
scas
jne
xor
out
ja
mov
popf
dec
xorb
addr16
mov
setle
test
mov
adc
enter
mov
das
xchg
or
pop
stc
adc
mov
mov
xlat
or
or
movl
loop
aas
iret
popa
lods
les
cltd
or
lahf
dec
or
inc
push
mov
rolb
loop
cld
repz
mov
sbb
in
xchg
pop
mov
aam
fisttpll
add
adc
int3
sbb
movl
ljmp
mov
pop
jmp
cmpsl
mov
mov
jle
push
jno
mov
push
pop
loop
mov
aam
pop
pop
pusha
and
iret
push
xchg
iret
int3
leave
sbb
jbe
inc
jns
or
aaa
loop
imul
or
and
iret
mov
icebp
addr16
sbb
xchg
lcall
scas
push
push
add
mov
sub
dec
fsts
repnz
or
loop
and
ljmp
clc
les
pop
mov
adc
test
lahf
sbb
stos
popf
imul
les
negb
insb
mov
inc
mov
stos
cmp
lock
adc
inc
imul
arpl
inc
pop
jnp
inc
jne
add
mov
mov
push
pop
pop
lahf
jb
pop
addr16
pop
clc
pushf
mov
jle
pop
inc
xor
lret
shl
lcall
or
cli
fstps
mov
jecxz
mov
std
shrl
pop
mov
adc
xor
shll
and
stos
push
or
or
sub
incl
mov
ss
imul
mov
add
or
pop
push
jb
push
dec
or
cmp
mov
push
and
fisubrl
push
inc
jmp
adc
xlat
mov
test
mov
mov
push
sbb
enter
push
jb
js
lea
or
jecxz
mov
orb
arpl
fstl
dec
jno
mov
cmpsb
ss
sub
iret
pop
pop
sbb
in
or
push
dec
lret
jns
adc
pop
test
gs
pop
mov
cmp
or
stos
data16
popf
aas
into
mov
jbe
stc
push
add
pop
cmp
sbb
mov
scas
sahf
movsb
cli
mov
mov
cmp
adc
outsb
pop
adc
dec
cmp
nop
rcrb
ret
sub
negw
cmp
lahf
jb
aad
and
scas
jae
out
sbb
pop
rol
loop
xor
and
sub
out
mov
aad
mov
in
cmp
pop
mov
xchg
in
push
mov
ja
mov
stos
test
adc
pop
mov
rcll
in
mov
sbb
jecxz
test
jge
dec
pop
stos
pop
pop
cmp
dec
loope
lea
insb
movsb
push
les
or
arpl
ljmp
imul
xor
mov
add
pop
jnp
addl
rcll
mov
add
sbb
sub
fimuls
xchg
adc
dec
pop
test
mov
jbe
scas
aad
lahf
shl
stc
add
insb
sbb
sti
mov
fsub
mov
pusha
out
das
dec
jle
scas
xchg
xchg
mov
je
pop
and
jge
and
cmc
pop
xorb
or
ds
or
xor
add
cmp
daa
sub
mov
pop
lcall
xchg
push
add
mov
and
mov
bound
cs
adc
imul
enter
mov
pusha
dec
lods
movsb
loopne
out
enter
stos
fidivrl
sub
and
pop
cmp
sub
inc
push
movsl
rol
add
jmp
movups
pop
pushf
jo
call
mov
mov
or
fmul
mov
add
xor
adc
lds
inc
mov
lods
ret
push
loop
pop
cmc
sbb
xchg
int
test
lahf
xchg
ss
sti
icebp
aam
inc
outsb
add
xchg
out
cmp
xchg
rclb
movsb
sbb
fisubrs
divb
xor
mov
rcll
outsb
xor
jmp
fwait
pop
jmp
out
pop
jno
dec
dec
repnz
or
inc
icebp
test
ds
or
movsl
aaa
inc
sarl
inc
mov
xchg
xchg
out
cmp
in
popf
jno
shll
cs
aaa
cmp
xor
xlat
push
xchg
xchg
jbe
std
push
jecxz
inc
sbb
test
adc
mov
iret
and
pop
jno
cli
adc
xchg
sbb
sub
pop
pusha
cld
rcrb
cmp
idivl
and
or
dec
pop
je
xor
push
jbe
mov
test
mov
popf
sub
icebp
mov
mov
lcall
push
outsl
ficoml
lret
mov
rcr
adc
adc
mov
sub
jmp
int3
jl
fwait
aas
lods
xor
and
js,pn
roll
inc
fs
push
mov
and
mov
in
lret
push
or
aaa
nop
sbb
rcll
inc
sbb
xchg
mov
pop
iret
test
jno
enter
xor
dec
sub
cmc
or
push
loopne
push
shrl
or
int
add
arpl
mov
and
das
movsb
insb
push
mov
or
subb
dec
notl
jnp
mov
push
jge
add
mov
or
jne,pn
cs
push
or
pop
cltd
pop
pusha
jnp
inc
ss
cmp
lret
mov
pop
daa
ret
push
add
push
popa
xor
jae
dec
shrb
in
xchg
xlat
push
fisubs
jae
sbb
icebp
mov
jne
push
dec
lods
push
scas
jmp
sub
sbb
push
sbb
pop
cs
inc
adc
jae
xchg
jg
mov
dec
jge
addr16
inc
xor
dec
iret
mov
or
lds
int
imul
add
cld
test
popf
ja
mov
in
in
add
adc
pop
inc
ljmp
mov
sbb
xchg
cltd
fs
mov
mov
inc
clc
aad
fadds
ds
cmp
ror
daa
xchg
xchg
adc
es
jmp
loope
inc
jae
push
and
ret
inc
cmpsl
jno
push
sbb
and
or
inc
stos
jmp
loopne
dec
push
sbb
jbe
hlt
dec
out
sub
xchg
adc
data16
clc
and
adc
push
jp
cmpsb
les
push
daa
cld
cmp
loope
or
inc
lret
jnp
or
cmpsl
xchg
ret
mov
jmp
shl
push
mov
or
popw
dec
rolb
push
fistl
movsb
xor
cmpsb
pushf
xor
push
mov
jecxz
push
test
add
cmc
out
sbb
jmp
js
lods
push
scas
in
mov
sti
iret
jbe
fabs
movsb
aas
aaa
or
arpl
push
adc
inc
repnz
cmp
jl
push
shr
pop
and
mov
lds
xor
inc
xor
adc
jge
jmp
mov
lcall
sbbl
mov
loop
add
jo
insb
shll
lret
movsb
adc
sub
aam
or
and
xchg
and
in
mov
iret
mov
or
jne
sub
daa
fsubs
movsb
sub
xor
xchg
pop
mov
pusha
mov
nop
jns
je
movsl
xchg
and
divb
sahf
adc
popa
test
aaa
stc
sbb
gs
xor
movsb
mov
or
xchg
push
add
mov
and
cmc
outsb
add
mov
jg,pt
fdivr
sbb
test
sub
and
pop
mov
xor
jp
adc
in
lods
in
repnz
jne
pop
fmuls
xor
rorl
push
ret
repnz
and
cmp
cmpsl
in
ficoms
ja
xchg
push
inc
mov
cli
jge
ljmp
or
jns
fcoms
iret
outsb
mov
or
andl
sbb
pop
mov
jae
cmc
inc
or
scas
addl
pop
cmp
or
scas
mov
mov
pop
jg
mov
packssdw
adc
dec
in
movsl
imul
xor
js
repnz
insb
dec
mov
adc
shll
les
cld
mov
jg
cld
insl
sbb
pusha
jb
aaa
push
stc
outsl
inc
insb
cmp
cmp
sbb
xor
adc
popf
sbb
xchg
cld
cmp
sub
sbb
push
in
xor
mov
outsb
mov
rolb
sbb
adc
mov
pop
loopne
hlt
sub
lret
js
adc
sti
scas
pop
adc
xor
inc
popa
pop
jmp
adc
cmp
and
mov
adc
mov
movsl
xchg
push
shll
cmpxchg
cli
adc
mov
or
shrb
jecxz
add
xor
stos
outsb
test
sbb
pop
inc
adc
jle
add
add
addb
ljmp
mov
mov
lea
mov
mov
lods
and
insb
int3
pop
test
and
inc
xchg
and
cltd
cmp
pop
jle
jl
adc
push
push
insl
movl
ficompl
xor
and
jae
xchg
cmp
jns
inc
mov
enter
mov
or
and
push
push
inc
jmp
push
popa
dec
outsb
inc
inc
inc
cmp
dec
push
lods
jg
sbb
into
jg
cs
scas
in
inc
fildll
je
fs
call
and
jmp
jno
add
jb
cld
and
cmp
cmc
xor
push
cmpsl
add
and
adc
scas
xlat
mov
lret
push
or
sbb
xchg
xor
inc
jecxz
cmp
fldl
test
push
jno
aaa
mov
test
sti
fsubrp
inc
mov
sub
dec
movsb
fnsave
ja
jns
rorl
mov
pop
cs
jg
cwtl
clc
ret
jl
out
aam
shll
scas
jle
xor
mov
jns
leave
mov
cmpsl
inc
in
lcall
into
mov
lea
clc
jl
mov
std
mov
data16
repnz
sub
add
xchg
fsubs
dec
pusha
ljmp
je
fs
push
push
ds
mov
adc
imul
in
sub
cwtl
out
std
lods
addr16
mov
popf
dec
inc
add
xor
pop
jns
xor
sbbb
pop
dec
fstl
dec
lods
mov
cs
push
mov
jb
icebp
mov
ja
pop
ljmp
out
sub
pop
ljmp
mov
mov
idivl
jne
jmp
xor
xchg
mov
mov
enter
test
stos
stos
test
mov
mov
dec
fwait
cli
adc
add
clc
xor
adc
into
push
dec
pop
addr16
ds
sub
stos
xlat
sub
push
xchg
rcr
xor
mov
jno
jae
mov
scas
mov
sbb
cmp
push
bound
jecxz
out
mov
mov
mov
and
mov
enter
pop
sub
pop
mov
sbb
divl
popf
dec
lock
ss
push
sub
and
imul
jbe
lret
inc
cmc
lahf
notl
xchg
in
enter
movsl
push
inc
call
mov
rorl
insb
shlb
pusha
adc
loope
xorb
mov
f2xm1
ja
fwait
scas
into
cltd
data16
sub
pmullw
mov
xchg
ror
aaa
scas
leave
xchg
insl
mov
and
test
pop
and
and
pop
adc
repnz
lret
push
xor
orl
mov
icebp
pop
sbb
jne
cli
xchg
sahf
iret
mov
or
movsl
or
adc
fwait
xchg
adc
dec
push
dec
sbb
clc
cmpsl
clc
mov
adc
fs
jg
mov
mov
lcall
addl
jge
int3
jnp
insb
mov
sbb
xlat
rorl
inc
push
push
call
jmp
insl
adc
stc
leave
pop
sti
add
mov
mov
dec
and
xchg
outsb
pop
or
inc
sbbl
fsubl
pop
xchg
fdiv
mov
mov
movsl
mov
scas
gs
popa
push
push
xchg
cmpsb
outsb
mov
dec
push
mov
mov
push
out
out
sahf
mov
push
aaa
in
jl
xor
or
scas
inc
icebp
mov
in
jno
shr
add
or
inc
jg
push
in
and
inc
lock
push
xor
in
out
xchg
movsl
arpl
insb
xor
pop
add
fiaddl
lods
xor
adc
fiadds
fsub
push
ficoml
mov
jns
shl
es
stos
enter
sbb
in
adc
iret
call
mov
outsb
sti
test
push
push
outsl
mov
sub
mov
cmp
lods
lcall
adc
and
push
xlat
sbb
or
jae
mov
js
mov
jmp
jb
ja
fwait
sti
movsl
pop
mov
push
icebp
sub
xchg
test
xchg
dec
sub
cmp
add
roll
push
ja
and
daa
std
cwtl
icebp
fldt
push
fidivl
aaa
hlt
xchg
or
push
mov
add
scas
insb
and
dec
jl
ficoml
cmpsb
inc
mov
mov
adc
adc
out
lcall
out
aaa
test
call
xchg
lods
cmp
insl
inc
adc
test
mov
xchg
jbe
sub
mov
pop
test
dec
adc
jo
inc
push
cmc
or
clc
cmc
cli
add
out
pop
pop
pop
sbb
jno
mov
leave
flds
mov
mov
mov
jle
addr16
adc
sub
mov
mov
add
lds
adc
nop
cli
in
in
gs
cmp
out
sub
sbb
pusha
xchg
fcmovu
sub
add
jo
popa
jns
and
pop
push
outsb
xchg
scas
or
jbe
sbb
pop
fcoms
in
fmuls
mov
jnp
add
mov
lds
add
jg
cli
rorl
popf
int
sub
test
test
cmp
xchg
fldenv
ds
inc
stos
jl
dec
mov
in
stos
or
das
fisubs
mov
loopne
andb
adc
stos
iret
fisttpll
fildll
cwtl
and
mov
lcall
add
jb
in
dec
adc
loope
movsb
xchg
imul
or
adc
aas
aad
test
sahf
mov
scas
arpl
and
sub
popf
in
dec
and
adc
push
les
pop
movsl
jmp
xor
add
negb
fdivp
push
pop
mov
cmp
outsb
inc
inc
test
mov
jo
loope
popf
in
imul
inc
and
pushf
xchg
js,pn
lock
call
and
jg
out
shlb
xor
icebp
push
lcall
cmp
mov
daa
and
dec
adc
lret
clc
and
scas
shrb
popf
push
stos
jecxz
cs
or
adc
jl
mov
inc
in
stos
push
jbe
push
in
mov
jmp
testl
jmp
ds
jecxz
fxch
xor
inc
lret
cmpsb
jo
xor
mov
rclb
add
in
xchg
ret
daa
add
inc
xor
ret
cmpsb
fs
aaa
adc
daa
fstl
daa
adc
and
and
popa
jb
sub
in
adc
mov
add
pop
aad
adc
mov
xor
rolb
adc
enter
jae
sarl
arpl
cmpsb
cld
shlb
dec
fstpt
pop
mov
add
loope
cmp
imul
in
jbe
subb
imul
jb
das
adc
mov
inc
aas
test
out
sub
xor
scas
je
xchg
inc
jae
cmp
jae
lea
popa
lock
pop
or
popf
aad
jge
sub
clc
pop
test
jmp
negb
into
adc
push
movsb
int3
cwtl
push
jecxz
jle
outsb
mov
jne
call
pushw
xor
mov
fistpl
ret
fwait
rcrb
xor
xor
mov
xchg
mov
sbb
cmp
sub
enter
mov
add
cmp
decl
inc
sub
push
jecxz
sub
xor
mov
xchg
sub
js
and
int
ljmp
cmp
pop
jecxz
ja
mov
lods
ds
nop
xlat
push
int3
loopne
pop
xor
pop
sti
sbb
movsl
add
fbstp
push
aaa
jmp
inc
adc
inc
iret
sub
jns
push
mov
push
pop
cmp
fwait
push
xchg
pop
sub
cmpsl
lock
pop
rorb
scas
movsl
push
cmc
adc
insb
je
inc
push
sub
xchg
int
rcrb
mov
dec
add
inc
cmp
or
cmp
test
pop
mov
cmp
mov
sub
sub
cmp
jl
sub
xchg
pop
mov
sbb
inc
pop
mov
dec
mov
and
scas
dec
jae
fsubrs
mov
ret
cmp
pop
mov
xchg
xchg
in
lret
repnz
out
ljmp
mov
rcr
cmp
int
mov
jno
je
inc
iret
lret
sahf
push
or
cltd
add
jle
addb
push
add
cmpsl
mov
out
xchg
enter
dec
es
cmpsb
out
loope
or
push
enter
arpl
and
jno
mov
in
jmp
xchg
popa
outsl
pop
subb
jmp
add
or
fisttpll
sbb
ss
or
jmp
push
in
mov
adc
mov
arpl
in
adcb
xchg
mov
sub
sbb
sbb
cmp
fsubrl
mov
mov
repz
test
lods
decb
mov
icebp
js
add
iret
fnstcw
fmul
sbb
std
rorb
ja
cmpsl
lds
jp
sbb
fnstsw
dec
jne
add
shrl
jne
xor
dec
jno
out
dec
cmp
push
or
add
add
fmull
std
insb
or
dec
mov
dec
inc
jnp
cli
loopne
pop
push
leave
sarl
icebp
lock
lret
adc
inc
fstpl
hlt
mov
aad
xor
jl
rclb
rolb
inc
fcmovnb
jo
int
inc
xor
iret
push
fstpt
jp
sbb
mov
cmp
sub
in
adc
call
jb
push
mov
aad
in
push
sbb
mov
out
add
imul
arpl
cmp
push
js
mov
dec
push
out
mov
or
stc
add
adc
lret
pop
decl
hlt
les
or
scas
add
std
shll
dec
sub
mov
mov
movsb
jmp
xchg
xor
xor
jp
xchg
and
insb
sbb
lcall
adc
xor
push
test
hlt
ror
ret
dec
adc
es
pandn
xchg
cmpps
negl
rcl
shr
int3
sbb
add
inc
mov
fisubrl
add
sahf
push
mov
inc
mov
lds
or
outsl
out
ljmp
loopne
xor
loop
add
inc
out
sti
mov
jecxz
andl
cmp
dec
push
ljmp
and
and
add
popa
pop
ds
cmp
jge
mulb
clc
mul
jne
out
add
sub
add
push
int3
imul
jns
add
dec
in
add
sub
cmp
aas
mov
inc
inc
in
or
aaa
push
mov
stos
das
inc
jne
cwtl
out
inc
mov
mov
push
lods
imul
addb
movsb
sub
aas
jnp
cmp
xchg
in
gs
lahf
insb
hlt
xor
icebp
in
cltd
or
mov
arpl
xor
mov
mov
fcmovu
movsb
xchg
roll
push
lret
movsb
dec
mov
int3
mov
daa
push
fs
mov
jl
insb
pop
or
push
pusha
in
mov
sti
xchg
push
in
mov
ja
in
loope
push
or
mov
adc
mov
sbb
adc
cs
fstpt
mov
sarb
inc
lods
subl
repz
in
mov
sbb
xchg
mov
fdivl
sub
jmp
push
or
jmp
imul
add
mov
pop
inc
mov
add
xor
inc
pop
jno
imul
addl
dec
push
pop
sbb
dec
add
add
fcmovne
adc
pop
sbb
fidivrl
lods
loope
mov
sbb
mov
adc
mov
xchg
push
cmp
push
rcrl
adc
and
daa
jnp
jo
mov
mov
and
cmp
clc
sbb
in
nop
adc
roll
mov
sub
ret
sbb
add
mov
adc
loop
pop
mov
dec
pop
movsl
mov
fisttpll
imul
push
fldenv
xor
dec
aaa
or
add
mov
add
pop
fiadds
or
scas
jbe
push
lock
jnp
xlat
xchg
sub
xor
pusha
dec
pop
fcmovbe
mov
mov
inc
sbb
sti
gs
and
xchg
imul
div
test
push
jb
inc
call
xchg
scas
mov
lods
pop
mov
inc
cmc
sti
inc
std
add
out
call
lea
cmp
cmc
lcall
mov
pop
test
push
mov
pop
or
jo
push
out
mov
jg
sbb
xor
mov
or
mov
sub
xor
sbb
out
jo
sub
fcompl
sbb
fstl
leave
inc
add
push
mov
pop
inc
jp
jae
sbb
rclb
add
stos
sbb
addr16
mov
cmp
ss
insl
jge
mov
add
xor
pop
in
xor
sti
addl
out
inc
jp
in
add
in
add
inc
aam
mov
mull
xor
jge
loope
jge
fdivl
mov
mov
pop
ffreep
cmp
test
or
outsl
arpl
loopne
cld
dec
out
sub
mov
out
pop
les
test
rep
ds
cmp
add
push
std
add
and
cmc
lock
push
push
movhps
sub
dec
mov
sub
push
xor
cmp
repz
mov
clc
lcall
lock
out
les
and
or
insl
push
pushf
mov
test
adc
xchg
mov
jl
in
cmp
or
push
in
sbb
lret
in
stos
jbe
push
inc
int
gs
loop
rclb
xor
xlat
andl
sub
and
adc
std
fldt
mov
pop
or
inc
jl
push
out
mov
xor
sub
mov
push
sub
dec
fists
pop
lret
fstpl
lcall
mov
adc
rol
and
jne
lcall
bnd
test
xchg
mov
mov
sbbb
cmp
or
int
mov
jb
mov
cwtl
mov
shlb
xor
cmp
push
ds
dec
popa
mov
stos
pusha
cmpsb
inc
lahf
push
sbb
mov
cmp
cs
jg
mov
xchg
jg
dec
pop
dec
lock
lods
sbbb
int
or
nop
jle
int
mov
cmpsb
outsl
dec
stos
mov
xchg
dec
sub
mov
imul
push
mov
cmp
push
inc
jnp
mov
loopne
rcrl
fcoml
popf
add
xor
and
daa
aas
mov
lcall
push
je
inc
das
dec
add
aam
rol
ds
mov
out
adcl
mov
xchg
push
mov
or
mov
mov
mov
lods
sub
push
int3
inc
mov
add
ret
pop
lods
mov
inc
cmp
call
mov
fwait
or
call
mov
js
orb
outsl
inc
inc
sbb
jno
dec
xor
or
push
fistl
rcrw
mov
aad
adc
iret
imul
push
push
lret
and
inc
lods
jo
or
jg
popa
mov
xor
lea
sbb
jge
cmp
movsb
decb
pop
and
test
test
mov
jmp
jne
arpl
cltd
cltd
loop
cmp
and
pop
or
push
xchg
mov
out
mov
xor
js
push
sub
xchg
iret
xor
rcr
xchg
xchg
inc
loop
jno
out
dec
ja
addr16
jnp
inc
sbb
xlat
xor
fisubl
jp
cwtl
mov
xchg
push
inc
or
jno
mov
mov
push
sub
aad
rcrl
or
cmc
pop
hlt
rcrb
inc
cmc
call
sbb
mov
fldt
testl
push
sub
push
aas
mov
das
sub
notl
pop
loop
pop
pop
in
push
hlt
push
cmp
stc
fisttps
cmp
out
dec
shl
iret
lahf
mov
movsb
push
fsubp
cwtl
xchg
sub
js
loopne
sahf
pop
lcall
lock
dec
inc
lods
ret
gs
mov
sub
test
xchg
fcmovnu
mov
sbb
pop
call
jns
inc
ds
mov
jo
sub
scas
xchg
test
rcrb
adc
inc
sub
sub
pusha
push
pop
scas
or
lea
loopne
lock
lahf
ret
jp
lret
or
int3
inc
rorb
rol
mov
or
add
push
lea
cwtl
nop
repnz
lahf
jns
mov
pop
xchg
sbb
inc
sarb
lea
mov
shrl
cltd
aaa
aaa
mov
add
and
mov
sarl
stos
mov
push
cld
mov
jmp
mov
divl
andl
cmpsb
insb
push
divl
or
adc
lea
jbe
in
es
sbb
mov
xchg
ret
pop
lret
cmp
xor
sub
push
mov
les
add
out
test
or
pop
sub
pop
inc
xor
into
push
ret
aad
pop
iret
fcompl
int
sbb
ret
or
sbb
dec
pop
inc
mov
cmc
inc
mov
pop
add
stos
int
mov
cmp
aaa
movsl
xchg
aam
and
jbe
sub
scas
push
jp
jl
movsl
or
xor
lea
das
sbb
mov
push
jo
xchg
les
mov
das
or
rcrb
add
test
dec
pushf
mov
xor
movsb
jb
adc
insb
es
mov
inc
add
mov
popf
jle
out
call
mov
in
or
movsl
add
or
mov
xor
push
lds
dec
push
jbe
ds
lret
dec
movl
lret
arpl
int3
mov
xchg
ret
incb
cmp
and
stos
xchg
cmpsl
pop
cld
das
xchg
in
mov
or
cmc
jmp
jno
cmp
mov
nop
notrack
out
in
add
jp
add
outsl
xchg
jns
test
mov
aaa
push
mov
ljmp
jno
xor
movsl
add
in
insb
ja
mov
push
jecxz
mov
cs
jae
mov
sub
int
push
mov
decl
aam
sbb
icebp
stos
add
cmc
mov
fwait
aam
in
aad
xchg
mov
jb
lret
jnp
jle
mov
adc
mov
sub
dec
add
xor
jge
arpl
push
xchg
and
aas
fstps
dec
ficoml
popf
jg
inc
mov
lods
in
hlt
dec
shrb
or
loope
neg
fdivp
add
cmp
jl
adc
mov
jp
fbld
fnstsw
test
out
imul
rcrb
mov
imul
lods
stos
xchg
xor
loope
test
mov
jle
std
xchg
or
inc
xchg
movsb
inc
dec
push
sahf
pop
out
and
mov
std
mov
into
jle
xchg
mov
test
xchg
shr
xchg
aaa
inc
in
xchg
daa
sti
jmp
jo
cmpl
movsb
sub
imul
aaa
cli
mov
in
ljmp
push
inc
fs
add
pop
insb
or
imul
cltd
out
xchg
adc
sti
jo
nop
sbb
and
mov
icebp
xchg
jg
sbb
inc
test
xor
mov
insb
addr16
lcall
call
fisubrs
aaa
cli
xchg
mov
sbb
sub
mov
lret
fisttpl
stc
dec
mov
out
popl
out
repnz
dec
sub
gs
xor
mov
adc
add
test
mov
stos
mov
dec
xor
insl
ret
ret
cli
mov
lahf
stc
mov
inc
divl
add
test
int
iret
inc
and
cli
inc
sbb
out
add
add
les
into
sub
testl
dec
xchg
ds
pushw
js
xchg
xchg
cltd
lods
inc
mov
fsub
aad
loope
dec
ljmp
inc
fwait
jp
adc
loope
pop
dec
jp
fwait
pusha
dec
bound
pushf
scas
jp
lods
andb
test
stc
push
adc
insl
push
fistpl
leave
sbb
sarb
stos
pop
pop
inc
loope
add
sbb
cmp
xchg
pushf
int3
jmp
out
test
jl
xlat
test
mov
and
xchg
lahf
les
lods
aas
mov
xor
ss
mov
cwtl
scas
pop
jle
xchg
into
cwtl
xchg
push
subb
add
inc
outsb
adc
outsb
fdivrs
mov
scas
aaa
fstpt
xor
xor
stc
xorl
or
test
add
clc
push
stos
test
pusha
dec
out
or
cmp
in
dec
pop
aaa
fnstsw
or
fsubrp
cli
dec
popf
fsubrl
shll
adc
sbb
xchg
mov
lock
bound
pop
mov
shrb
cmp
xchg
pop
push
mov
hlt
mov
leave
stc
mov
xchg
sub
and
cmp
inc
mov
or
pusha
pop
inc
arpl
pop
mov
out
mov
dec
jmp
imul
aaa
in
imul
in
ret
and
insb
jnp
jae
dec
cmpsl
leave
daa
mov
test
mov
pop
sub
mov
pop
mov
int3
push
arpl
dec
stc
xchg
lock
in
stos
mov
cmp
mov
and
test
inc
push
scas
cmp
xchg
scas
pop
mov
arpl
nop
and
and
dec
stos
dec
inc
jecxz
sub
lds
ds
fnstsw
push
ds
rolb
mov
or
or
pop
xor
pop
pop
movsb
jb
push
mov
pop
pop
xlat
xlat
xchg
sar
outsl
push
fwait
int
hlt
xchg
push
iret
ret
in
push
stos
outsb
xchg
add
jge
bound
fwait
iret
push
push
insb
pop
aam
push
add
pop
xchg
xchg
pop
pusha
addr16
int3
lcall
xor
jecxz
outsl
loope
inc
mov
mov
in
cmpsl
and
mov
lahf
jl
add
ds
xchg
xchg
loop
hlt
push
and
addr16
xor
testb
call
xor
mov
cmp
xlat
dec
popa
call
adc
in
jg
imul
cmpsb
lret
or
xor
cmp
dec
inc
and
adc
hlt
add
jge
jae
lahf
sub
cmp
lret
int
or
aaa
pop
cmp
mov
insl
out
sbb
cmp
ficoml
nop
bound
movsb
pusha
mov
mov
mov
popa
lcall
je
stos
jae
pushf
inc
adc
or
imul
pop
dec
add
xchg
sub
sbb
mov
push
xchg
enter
clc
or
div
hlt
adc
and
jecxz
je
lods
es
icebp
popf
dec
jnp
call
pop
or
stos
negb
popa
jecxz
lock
dec
xchg
andl
and
xbegin
popf
sbb
mov
repz
dec
fcomp
in
xor
cli
fwait
jne
add
out
cli
and
push
xor
lods
imul
lods
notl
xor
std
lds
mov
gs
leave
hlt
ljmp
sbbl
inc
push
and
pusha
xchg
add
push
adc
add
pop
jge
cli
add
adc
je
xchg
into
xlat
daa
in
dec
jge
xchg
test
push
dec
movsl
stos
pushf
mov
xchg
or
mov
test
jb
mov
push
jmp
jae
lcall
xor
sub
and
mov
and
sbb
jg
notb
fnstsw
inc
mov
arpl
pop
jle
inc
mov
push
imul
add
nop
adc
pop
add
push
xchg
repz
sub
test
sahf
mov
orb
sub
aaa
pop
mov
icebp
adc
push
ja,pn
mov
inc
popa
xor
xor
lock
jp
push
pop
stos
xchg
mov
xor
data16
clc
lahf
in
loope
cmp
leave
jno
inc
out
jecxz
xchg
inc
in
fldcw
icebp
push
mov
test
sbb
cmp
negl
sbbl
inc
lahf
or
dec
scas
and
das
or
fwait
or
pop
mov
in
push
jnp
in
sub
pop
mov
fs
cwtl
or
mov
cs
mov
stc
mov
or
mov
ljmp
outsb
xchg
mov
dec
movsl
xchg
mov
fisttpll
mov
pop
mov
data16
fs
mov
jo
mov
int3
mov
inc
pop
cmp
mov
push
stos
pop
mov
stc
pop
mov
insb
push
test
or
fdivrs
fcomps
push
push
mov
dec
stos
push
nop
push
jb
and
lcall
push
or
add
out
xor
lods
je
and
or
ljmp
int3
jnp
pop
cli
jg
xchg
xchg
xchg
adc
cmp
push
xchg
mov
andb
mov
xor
sub
inc
xchg
es
insl
mov
cmp
xlat
mov
jbe,pt
mov
movsb
mov
mov
sti
sbb
and
dec
mov
jnp
jmp
cmp
add
movsl
dec
dec
xor
inc
data16
and
sbb
aaa
mov
inc
cmp
sbb
stc
pop
mov
sbb
adcl
aaa
imul
mov
pop
and
leave
add
adc
push
hlt
stc
out
std
dec
jo
pop
dec
in
cmp
int
stc
lea
push
imul
hlt
lods
fmull
std
xchg
xor
scas
hlt
push
out
icebp
sub
xor
cld
aad
jle
xchg
xor
shrl
rclb
inc
and
xchg
outsl
pushf
push
pusha
addr16
enter
iret
mov
cltd
push
dec
add
in
adc
ljmp
sbb
pop
dec
pop
lods
pop
xor
pushf
aaa
leave
xor
cmc
lret
dec
mov
rclb
add
xor
lods
fimuls
popf
and
and
mov
xor
inc
push
nop
rcll
stos
jl
ret
dec
jne
xchg
std
pop
rcl
sbb
enter
sub
in
shl
dec
fwait
sahf
testb
repz
jbe
pushf
negl
stc
lcall
mov
pop
add
cmp
dec
adc
pop
mov
imul
stc
inc
fstpt
out
sbb
rcll
sti
xorb
int3
add
mov
fcmovu
xorl
or
adc
push
int3
jp
xchg
pop
jmp
push
jmp
dec
out
pop
jge
ret
pop
in
and
idiv
mov
dec
cmpsb
xor
aas
xchg
ja
add
cmp
scas
pop
push
inc
xchg
push
xor
lcall
push
add
orl
jne
aad
mov
push
dec
lds
lods
push
push
dec
dec
mov
jo
les
shll
notb
sbb
movb
pop
out
lods
cmp
arpl
mov
xor
cmp
jp
jl
xor
lahf
push
push
mov
arpl
dec
arpl
lret
push
pop
testl
movsb
lahf
dec
das
sub
cli
xchg
push
xor
mov
adc
rcr
ja
bound
roll
je
testb
outsb
arpl
adc
gs
fs
push
shl
pop
mov
inc
dec
shll
mov
out
icebp
mov
inc
rorb
pop
out
ss
sti
aaa
fisubs
cmp
lret
sbb
push
inc
scas
inc
cmpsl
and
push
push
popa
dec
scas
mov
push
pop
push
enter
pop
dec
or
fldcw
in
sub
xor
dec
xor
stos
adcb
imul
xchg
ljmp
xchg
push
mov
out
push
stos
rol
aas
push
lds
in
out
aaa
dec
movsl
sbb
call
adc
pop
dec
xchg
test
stos
dec
and
pusha
sub
mov
repz
sbb
cmpsb
push
insl
stc
cmp
sbb
in
mov
mov
or
shl
add
cli
jp
add
addb
add
mov
xor
outsl
out
jae
stc
push
mov
ja
jmp
mov
mov
adc
xchg
lds
pop
aaa
rorl
cmp
jmp
jmp
push
das
stc
and
fsubrl
stc
outsl
scas
mov
pop
push
push
adc
add
inc
xor
mov
jge
popf
scas
cmp
push
enter
pop
xchg
mov
jle
setnp
xchg
scas
add
jnp
loop
scas
mov
dec
daa
jl
mov
xchg
int3
lea
cmp
push
out
mov
cli
lock
lret
and
fisttps
test
enter
lahf
fidivs
push
xor
fnsave
popf
add
sbb
pop
addr16
inc
icebp
inc
rolb
call
mov
sbb
inc
lret
sub
idiv
nop
xchg
lock
dec
pop
push
repnz
out
adc
sub
lea
push
add
jbe
cltd
repnz
and
push
test
outsb
xchg
pop
adc
or
sub
jecxz
scas
inc
imulb
or
mov
rclb
xchg
or
mov
inc
adc
icebp
sub
rep
outsb
sub
dec
or
loop
xor
popa
mov
iret
push
or
lods
loopne
mov
jae
pop
ljmp
in
jp
bound
mov
jp
xor
int
ficompl
push
idivb
dec
cmp
mov
inc
xor
insb
jge
sahf
lret
mov
push
push
xlat
dec
mov
in
shlb
outsb
repnz
dec
sub
das
push
jnp
sti
push
out
insb
sbb
mov
xor
add
push
push
xchg
and
cmp
loopne
cmp
push
or
mov
add
dec
pop
jne
xchg
xor
jbe
xchg
mov
cmp
icebp
sbbl
hlt
aas
dec
mov
arpl
xchg
jnp
in
stc
add
outsl
aaa
mov
ljmpw
sbb
popf
lea
ret
xor
pop
outsb
mov
xlat
pop
sub
shl
out
cltd
xchg
cmp
int3
cmpb
sar
push
bound
neg
fsts
cs
xor
les
test
cmp
inc
lret
mov
int3
push
cmp
scas
xchg
jns
mov
movsb
pusha
or
xchg
adc
adc
mov
jae
ja
pop
jns
mov
je
cmp
cmpsb
lcall
push
stos
fnstcw
outsl
mov
call
xchg
fcmovne
dec
cmp
hlt
in
jle
lret
xchg
in
and
movb
mov
mov
add
sub
aam
push
and
jge
sbb
mov
jno
pop
out
mov
test
inc
xchg
mov
test
cmc
call
or
add
es
mov
and
mov
sbb
js,pn
ss
push
pusha
sub
popa
pop
jmp
mov
cmp
xchg
dec
cltd
mov
push
hlt
adc
sahf
lock
test
testl
mov
dec
mov
jmp
jae
ss
daa
addr16
pop
cmp
jmp
test
repz
fistpll
js
xor
fbstp
push
lock
insb
hlt
fildl
arpl
outsl
jge
popa
push
fdivrs
push
jne
movsl
loopne
pushf
pop
nop
jl
out
add
mov
sahf
xchg
ret
mov
xchg
cmp
push
xlat
inc
shlb
sar
mov
dec
ret
dec
out
xor
adc
mov
mov
or
testb
jo,pt
ret
sub
out
mov
arpl
loop
sub
mov
lds
jns
add
mov
jle
push
jle
mov
pop
push
cmpsl
inc
dec
shl
push
daa
pop
fimull
push
jnp
add
cmp
xchg
adc
enter
aas
add
xor
clc
jg
lods
jmp
xor
aad
adc
jb
cwtl
test
push
add
xor
ret
repnz
mov
lea
pop
mov
test
test
std
shll
pop
jae
insl
xchg
xchg
lcall
mov
jae
lods
jge
jne
and
testb
loop
cmpl
or
loope
xchg
inc
cli
ljmp
jo
out
fcmovnbe
and
mov
xor
mov
pop
mov
test
popa
or
mov
push
dec
out
mov
push
lods
sbb
xor
nop
fcomip
in
mov
and
fidivs
jno
pop
mov
mov
push
xchg
add
cmp
test
xor
and
pop
mov
in
dec
push
push
sbb
mov
lret
adc
push
cs
icebp
test
adc
add
outsb
jne
mov
mov
jae
inc
int
fsubrl
cmpl
push
push
mov
sbb
inc
jno
int3
int3
enter
mov
push
push
in
cmp
in
cmpl
aam
dec
cld
push
stos
imul
pop
cltd
push
jp
movsb
cs
xchg
mov
sub
pop
dec
sti
dec
fsubr
bound
pop
fildl
inc
push
pop
xor
push
in
and
cmp
ret
adc
aad
sbb
cmc
jo
rorl
mov
data16
setae
mov
scas
push
lock
add
jle
mov
movsb
cmp
out
inc
xor
or
adc
mov
pushf
xchg
lcall
jecxz
fwait
mov
mov
mov
scas
sbb
jns
xor
in
sub
and
push
dec
lahf
push
cld
orb
jmp
or
fcmovnbe
pop
les
test
dec
push
dec
push
sbb
cmpsl
mov
dec
dec
test
int3
test
sahf
subl
repz
xchg
sub
cmpsb
loop
jnp
inc
aad
adc
je
js
idiv
pop
mulb
stos
push
or
scas
mov
cwtl
ja
mov
scas
jecxz
xor
out
cmp
and
arpl
and
push
and
mov
dec
push
or
push
mov
loope
sbb
add
xchg
mov
js
clc
shl
mov
xor
aas
sbb
and
lret
arpl
inc
cmp
ret
mov
leave
jns
lcall
adc
outsl
test
add
dec
sub
in
inc
or
arpl
in
sub
lods
add
pop
cli
inc
mov
shl
mov
pop
sarl
mov
cmpsb
push
add
jle
jb
bsf
pop
xchg
lret
out
movsl
add
dec
jbe
xchg
sarl
test
dec
clc
inc
rclb
testb
clc
daa
iret
leave
cli
shlb
xor
push
jno
es
jg
jge
mov
pop
mov
sbb
xor
fs
and
cmp
add
sahf
mov
imul
cmp
movsb
dec
dec
cmpl
dec
adc
inc
fldl
pushw
pop
ret
and
imul
mov
test
movsl
stos
jae
fmull
pop
add
xlat
or
divl
push
pextrw
add
adcb
cs
fcoml
dec
mov
adc
mov
sub
daa
sbb
cmc
js
xchg
mov
in
cmc
mov
pop
gs
int3
gs
aad
lcall
popa
out
stc
push
push
inc
or
cmpl
mov
push
sbb
mov
dec
rcrb
arpl
push
lds
pushf
arpl
xchg
movsb
add
or
cmp
or
sbb
mov
pusha
call
pusha
aaa
lea
ret
shl
cmp
xchg
insb
xchg
mov
out
jae
jle
or
xchg
sbb
jae
neg
and
mov
sarb
jmp
xchg
adc
out
lea
das
gs
loopne
nop
adc
mov
mov
sarb
rorl
sbb
mov
ds
scas
cli
in
xchg
frstor
and
xchg
xchg
cs
sub
xchg
push
cmpsl
sub
in
add
pop
jg
pushf
lock
pusha
xor
icebp
inc
adc
les
stos
jne
scas
fistpl
fisttpll
cli
into
xchg
leavew
das
int
shlb
or
shll
xor
cmc
into
repz
ds
push
mov
stos
fbstp
stos
lea
cltd
int
stos
scas
outsb
mov
loope
rcll
out
mov
add
sbb
test
jp
dec
and
movsb
pop
jbe
add
mov
imul
stc
cmp
xor
pop
in
mov
insl
rcll
out
xor
sub
int
and
inc
mov
inc
mov
pop
mov
and
dec
add
shl
mov
cmpsb
pop
inc
mov
fsubs
sub
cmc
aas
fs
or
dec
aaa
imul
xor
out
ret
loop
shlb
shl
test
mov
cli
fdivrs
arpl
int3
sub
mov
ret
aaa
xchg
dec
xchg
dec
jo
clc
test
pop
push
mov
dec
jae
pusha
jecxz
negb
cmp
lods
hlt
xor
mov
stos
sub
icebp
test
test
stos
mov
sahf
out
das
fcomps
fistpll
adc
dec
push
sbb
mov
dec
cmp
and
xor
test
out
mov
fs
mov
mov
jo
out
xchg
pop
adc
adc
cltd
jbe
das
fbstp
sub
add
jg
xchg
push
push
lahf
cs
cmp
stc
scas
in
mov
jge
enter
jecxz
test
and
xor
divl
aas
neg
mov
fnstsw
or
jnp
loopne
mov
push
fistpl
insb
and
add
adc
mov
pop
lods
jno
dec
subb
inc
pop
sub
or
pop
dec
jl
es
mov
jecxz
scas
imul
shlb
inc
rorl
subl
nopl
outsl
nop
les
xor
scas
jo
in
sbb
outsl
dec
out
pop
mov
add
mov
adc
xchg
push
rcrl
xor
adc
pop
fwait
dec
cld
cmpsl
aam
fcoms
jo
pop
push
and
cmp
sub
xchg
sbb
xchg
call
cmp
lahf
cmp
adc
push
in
cmp
mov
sub
jb
cmp
xor
jecxz
push
add
add
mov
push
sub
cmpsb
hlt
pop
filds
inc
loop
in
sub
test
sub
pusha
mov
sub
jo
cmp
cli
std
xchg
and
jle
inc
scas
ljmp
jns
popa
push
lods
test
inc
insb
mov
jle
lcall
fidivl
xchg
lcall
pop
shlb
inc
add
adc
push
mov
mov
fsts
popl
inc
cli
outsl
add
fstp
movsb
xchg
shrl
push
fdivrp
fcoms
dec
cmpsb
jo
imul
les
jo
xor
sub
rolb
imul
lea
jb
jge
push
add
in
sub
mov
mov
shr
imul
sbb
inc
insb
shll
test
rorl
iret
fistpll
loop
xor
add
push
and
push
sub
js
push
pusha
mov
xorl
add
es
inc
add
inc
stos
shll
sub
add
mov
pushf
rolb
mov
cmp
or
dec
subb
and
andb
int3
push
mov
inc
xchg
aaa
mov
aaa
xchg
stos
or
sub
int
xlat
popf
add
xlat
mov
cmp
pop
icebp
test
dec
sahf
dec
jecxz
xchg
test
or
pop
jmp
icebp
mov
or
and
mov
gs
xor
mov
add
push
aam
mov
fidivrl
cmp
pusha
sbb
push
push
in
cmp
push
imul
xor
fs
gs
dec
pushf
sbb
test
or
pushf
inc
pop
dec
or
in
xchg
addr16
xchg
lods
jo
push
cld
arpl
or
test
or
aad
inc
inc
mov
fwait
xor
cmc
gs
cmp
ffree
pusha
lret
xlat
shll
in
push
jle
cmp
jno
and
sub
ja
pop
xchg
adc
dec
mov
mov
mov
jmp
sub
fimuls
es
push
movsb
mov
cli
push
nop
arpl
jg
add
dec
mov
scas
sarl
mov
icebp
push
movsl
fwait
dec
in
subl
mov
mov
dec
jle
loopne
fsubrs
leave
push
sub
cwtl
xchg
aad
loopne
dec
sbb
dec
imul
aad
ret
call
dec
jo
cltd
jno
and
mov
sub
ja
push
inc
es
sti
mov
mov
cmp
inc
sahf
adc
xchg
sub
addr16
rcll
jg
and
out
iret
inc
cli
mov
xchg
add
xor
loop
adc
mov
and
call
jl
aaa
dec
inc
roll
cltd
ficompl
xchg
jnp
ljmp
in
out
adc
rcll
cmp
cmpsb
nop
in
or
mov
inc
arpl
mov
or
add
sbbb
in
hlt
push
ficompl
jl
and
push
inc
leave
jns
std
xor
inc
pop
fisttpl
dec
clc
in
or
aam
fcmovu
sarb
dec
mov
cmpsb
jle,pt
scas
sbb
in
pop
push
jge
out
fst
inc
push
test
dec
movsb
push
popf
ja
cmp
imul
sub
cmc
insb
add
dec
ds
popf
cltd
xchg
sbb
ret
cld
xchg
call
mov
insl
inc
lds
loope
jno
inc
push
add
mov
and
stos
mov
jmp
clc
ja
add
scas
jg
mov
ja
pop
push
mov
mov
sti
mov
xchg
insl
and
fcmove
mov
je
push
xor
xchg
fisubl
paddb
xor
aad
rclb
and
mov
mov
xor
mov
inc
inc
or
sub
jle
fisttpl
dec
stos
nop
inc
mov
pop
push
add
pop
sahf
push
xchg
aam
fidivl
xchg
lcall
jo
xor
notb
sbb
imul
pop
push
xor
add
or
pop
sbb
ss
repnz
test
pop
scas
dec
hlt
mov
pop
dec
fsubr
and
frndint
pop
push
mov
dec
xchg
mov
add
leave
popf
aam
sbb
iret
jno
testl
jb
jecxz
cmp
movsl
aaa
sarl
and
dec
xor
insb
adc
sahf
test
rcr
add
jae
mov
enter
sub
adc
int3
xchg
cmp
cmpsl
pop
stos
insl
or
les
push
sub
jmp
addl
imulb
push
ljmp
stos
sub
addr16
daa
out
add
dec
inc
subb
cmp
lods
pop
jmp
daa
pop
cmp
adc
cmpl
sbb
sbb
add
out
out
jne
mov
add
dec
xorl
jp
ds
and
mov
or
or
filds
cltd
aad
lret
dec
xor
scas
pop
fbstp
mov
mov
pop
int3
sbb
jle
and
cld
mov
in
sub
bound
leave
push
push
push
popl
and
jb
or
or
jge
sar
pop
sub
scas
add
xor
fmuls
popa
rcl
mov
pop
sbb
hlt
mov
test
dec
lock
int
xchg
xlat
out
mov
jecxz
out
push
fcoml
xor
int3
xorb
or
in
movsb
mov
inc
aad
dec
pop
mov
inc
jnp
or
loopne
dec
outsl
cwtl
cld
pusha
in
pminub
repz
sbb
stos
or
jp
rcrb
ret
or
and
adc
cmpsl
pusha
and
ljmp
sarl
cmp
xchg
and
aad
and
inc
adcb
sub
add
and
add
adc
mov
in
push
mov
addl
cwtl
loop
pop
push
in
movsb
mov
adcl
pop
pop
push
pop
rcrb
jmp
ss
in
andb
jecxz
and
add
jne
out
sbb
lcall
test
mov
icebp
leave
and
mov
sub
jecxz
xchg
hlt
jbe
mov
inc
adc
enter
mov
push
xchg
adc
mov
in
decb
xor
push
jl
mov
stos
push
xchg
mov
sub
movsl
jp
push
and
hlt
cld
sub
jp
dec
dec
ret
jp
xchg
popa
cli
jle
popf
mov
mov
int
imul
pop
sbb
test
nop
jnp
push
push
push
mov
sub
gs
mov
outsb
sub
mov
shlb
or
jno
fistps
jge
ret
mov
rcl
nop
dec
cmpsl
sbb
test
mov
pushf
loope
ja
mov
loope
cwtl
lds
faddl
pop
clc
idivl
and
mov
inc
mov
xor
out
imul
pop
or
cmp
pop
ljmp
clc
into
mov
mov
adc
xchg
xor
push
neg
mov
jo
mov
aas
dec
imul
dec
divb
mov
into
or
or
fistl
xchg
jl
cmp
sbb
pushf
shlb
iret
xor
adc
xchg
cmp
push
push
fwait
pop
add
in
xor
inc
lcall
cmpsb
pop
mov
jle
jl
outsl
pop
jno
inc
cmpl
push
inc
inc
ret
popf
hlt
or
mov
inc
jo
jle
adcb
dec
inc
mov
stos
jmp
and
mov
jae
mov
mov
inc
std
enter
into
mov
push
daa
into
fcomi
sti
mov
sbb
ja
cld
arpl
or
outsl
pop
mov
or
in
ret
mov
push
pusha
mov
in
pop
lods
lret
outsb
out
pop
repnz
fadds
adc
hlt
pop
mov
adc
sub
stos
mov
outsb
sarl
movsb
push
push
cmp
and
js
fwait
iret
jmp
movsb
cli
mov
adc
add
lods
or
rorl
test
arpl
jbe
push
mov
int3
xchg
sbb
mov
push
es
dec
cltd
inc
jecxz
lods
orb
sbb
lahf
lods
and
lahf
ljmp
loopne
mov
adc
or
sub
and
jbe
inc
xchg
jl
mov
pusha
out
dec
in
mov
push
stc
in
or
cmpsb
mov
fsubl
mov
xor
fisubl
cmp
cli
jle
out
dec
xchg
mov
in
mov
aad
cmc
data16
fdivs
in
mov
fimull
sub
jne
push
jnp
mov
cmp
loop
data16
cmp
inc
data16
cmp
jbe
mull
mov
push
orb
and
test
pop
add
sarl
outsb
jne
adc
adc
mov
jnp
push
sbb
dec
sub
push
stos
daa
sbb
mov
in
adc
nop
push
sbb
adc
mov
pop
into
adc
vpsrlw
mov
movsb
or
mov
sti
andb
push
push
mov
mulb
stos
out
andl
je
cmc
adc
push
xchg
mov
push
mov
inc
sub
repz
xor
jb
sub
inc
xchg
inc
push
iret
pop
inc
out
jnp
ret
pushf
lods
mov
pop
mov
sti
cmp
jp
cmp
arpl
push
rcr
push
sbbl
lock
push
and
or
sub
sub
nop
pop
push
hlt
into
inc
into
ss
sub
and
or
das
lock
stos
push
lcall
lret
sti
sbb
jbe
fisttpl
lods
mov
ljmp
xchg
sbb
jno
fstpl
stos
cmp
push
aas
lret
js
push
or
add
push
dec
loope
mov
cltd
imul
add
cmp
jp
push
fsubrs
mov
iret
xlat
daa
dec
mov
jns
mov
xor
cmpsb
pop
lret
mov
add
outsb
aam
add
and
addl
je
push
add
jmp
out
mov
test
das
sbb
cmp
sbb
cld
xlat
xchg
insl
pop
cmpb
stc
xor
or
leave
js
ds
cmc
lahf
push
fisttps
loopne
cmp
add
cmp
mov
test
jmp
shll
aaa
cmp
pop
pushf
cmp
jl
popa
jns
loope
xor
xor
sub
mov
rorl
xor
mov
or
fsts
xchg
sub
sti
add
push
das
push
insb
mov
arpl
mov
sarb
jo
pop
mov
popa
and
or
push
inc
sub
dec
addb
dec
test
negb
lret
adc
loope
push
popf
js
add
loope
lods
arpl
ret
xchg
in
movsl
pop
push
xchg
outsb
dec
test
pop
fisttpll
sbb
ret
hlt
daa
stos
pushf
pop
sub
into
xchg
sti
mov
movsb
jecxz
pop
dec
xchg
mov
jl
in
jp
push
push
dec
aam
inc
adc
or
and
jae
lods
es
and
sub
push
mov
fmulp
cmp
inc
mov
mov
js
gs
jo
out
shl
imul
das
jo
into
push
mov
arpl
add
and
sbb
xchg
pop
jmp
mov
es
sbb
pusha
or
or
mov
dec
lds
and
xchg
push
mov
adc
je
dec
in
jns
je
in
adc
ljmp
shr
add
mov
mov
xor
int3
je
out
in
xchg
mov
mov
int3
jae
cmp
xchg
fxch
pop
cltd
movsb
les
and
mov
ret
add
or
mov
ret
lods
shrb
cmpsl
nop
pusha
lcall
mov
aad
dec
in
mov
mov
xchg
daa
int
insl
xchg
dec
outsl
jecxz
movsb
int3
sub
in
test
pop
or
pop
mov
push
shrl
jno
sub
push
test
mov
xchg
je
lds
jmp
stos
xchg
sub
xor
lcall
insl
push
push
cmp
pop
fdivs
js
lds
lret
add
in
mov
fs
shll
jo
int
sub
popa
enter
pushf
lock
int
inc
inc
scas
ss
adc
movsl
test
xchg
aas
dec
and
inc
leave
push
filds
xchg
mov
or
loopne
les
and
cltd
jo
push
pop
int
xchg
inc
sbb
sub
je
pop
mov
stos
incl
and
push
mov
push
mov
shrb
fcomip
loop
or
or
test
filds
loope
scas
cli
shrb
adc
aaa
adc
pop
jge
fstl
addb
jns
xor
das
out
lret
cmp
aas
leave
lahf
jg
lods
sub
inc
cmp
cld
mov
in
mov
call
xor
faddl
cmpsb
mov
jb
jns
cs
pusha
cmpsl
dec
nop
jmp
sub
mov
jmp
push
fcomp
jbe
add
out
lds
pop
call
xlat
mov
sbb
lcall
mov
jge
popa
outsb
ss
mov
jbe
les
and
pop
stc
push
out
pusha
lcall
stc
mov
adc
movq
inc
jg
arpl
jl
out
hlt
lods
inc
cmpsb
das
xor
fisttpl
aas
aas
push
mov
into
inc
jbe
es
daa
shlb
xor
xlat
in
ffreep
jmp
jecxz
pushf
loope
cltd
leave
jl
mov
xor
xchg
or
push
and
insl
sbb
adc
mov
push
fistpll
iret
pusha
movsl
cs
fs
mov
fs
xchg
sbb
stos
mov
cmp
pop
mov
sub
inc
xlat
mov
and
aas
pushf
add
ja
or
and
sub
shll
cld
cs
clc
or
scas
push
es
adc
sbb
sub
cs
sbb
hlt
inc
sbb
or
adc
or
jmp
movsb
adc
xor
pop
push
xchg
jle
xchg
shlb
cmp
shll
fnstsw
or
inc
pop
jl
fcoms
push
sub
fsts
dec
cs
pop
fsubrl
xlat
test
xorl
hlt
xor
cmpl
mov
or
mov
cmp
inc
popf
xor
mov
aaa
xchg
cmp
or
popa
push
adc
or
cmp
out
adc
inc
xchg
flds
or
into
fbld
jns
js
push
jl
sarl
and
daa
shr
das
adc
fcoml
fsub
mov
xacquire
cmpsb
push
rclb
fwait
push
jns
add
adc
adc
mov
pop
add
lods
inc
add
mov
sub
sbb
in
ljmp
pop
hlt
or
mov
sbb
add
sbb
or
push
pop
jl
outsl
int3
popf
rolb
sub
mov
imul
adc
xor
push
inc
push
dec
add
int
inc
sub
sbb
dec
mov
adc
xor
bound
das
cmpsl
out
pop
adc
cli
fmull
repz
aaa
jp
xor
outsb
inc
jl
dec
pop
push
fwait
hlt
mov
rcll
pusha
mov
jmp
das
sub
xchg
xchg
sbb
aas
xor
cmpsb
imul
inc
shl
scas
inc
mov
mov
xor
mov
and
cltd
add
test
faddl
add
and
hlt
jnp
mov
fadds
je
mov
testb
andb
mov
lahf
push
movsl
mov
fwait
cmp
mov
xchg
xchg
inc
loope
js
mov
loop
mov
addb
mov
jmp
jo
popf
push
stos
aaa
sub
jb
sub
add
xor
outsl
sub
sbb
in
mov
fs
jns
test
cli
inc
cmp
sti
pop
sbb
add
and
aad
jnp
aaa
addb
sub
repnz
adc
or
cs
sbb
cmp
js
fcomps
cltd
mov
mov
jecxz
pop
fwait
das
test
sbb
push
scas
adc
test
rcrl
xchg
sub
jnp
sti
cmp
xor
mov
loop
icebp
jle
cmovge
mov
pusha
sqrtpd
clc
push
in
jae
into
mov
cli
xor
fdivl
lret
mov
jns
adc
outsl
mov
lahf
xchg
popf
subl
enter
in
push
inc
test
adc
les
fimuls
add
xchg
ds
jns
outsb
jne
je
out
daa
hlt
lds
pop
mov
and
in
loopne
mov
adc
xor
lcall
add
stos
mov
cmpsl
sbb
cmp
scas
outsl
je
and
xchg
negb
out
inc
lcall
xchg
ret
mov
in
jnp
cli
gs
cld
push
and
shld
addr16
shll
xlat
shrl
mov
inc
push
sub
mov
pop
iret
ja
mov
pop
imulb
and
dec
mov
addl
mov
stos
mov
xlat
iret
and
cld
xor
dec
ret
test
icebp
xchg
ljmp
xchg
inc
inc
sub
jl
lock
sub
orb
or
jae
jb
dec
mov
leave
int3
cmpsb
sbb
notl
rorb
add
adc
lret
int
insl
inc
sub
jns
cmp
xor
out
les
push
ret
push
movl
cmp
lds
std
xchg
adc
push
inc
js
dec
adc
mov
pop
push
insb
test
xor
inc
sbb
pop
out
std
sahf
xchg
inc
or
cmp
xor
icebp
add
addr16
dec
sti
mov
adc
subb
lea
call
cs
mov
xor
lahf
bound
inc
pop
lods
pop
lahf
aas
push
mov
xor
xchg
sbb
or
stos
xchg
cld
xlat
xor
out
mov
push
call
pop
push
out
int3
hlt
pop
xchg
test
stos
inc
daa
cmp
and
xlat
mov
xor
sti
outsl
xchg
sub
lods
imul
fldl
xor
std
jp
xchg
sti
fcompl
inc
sbb
out
xor
mov
adc
mov
push
mov
mov
mov
adc
pop
test
jae
push
jae
sbb
int
out
xor
and
lds
or
cmp
and
mov
repnz
jmp
test
ljmp
pop
outsl
cmp
into
xchg
popa
cmp
sbb
pop
xor
cmc
jnp
dec
mov
xchg
mov
push
dec
fisubrl
dec
mov
dec
rcll
mov
cmp
push
mov
add
cmp
aas
push
sub
mov
loope
or
or
repnz
inc
call
addr16
movsb
addb
pusha
or
push
loop
cld
mov
pusha
lods
daa
inc
dec
js
jno
cmpsb
test
cmpsb
push
add
mov
xlat
insb
loop
pop
cmp
or
and
cli
es
push
ret
and
int3
mov
repz
cmp
mov
push
mov
mov
cmp
sub
push
xor
sub
jmp
mov
sub
and
mov
sbb
jp
mov
add
int
jae
sub
add
sub
pop
push
jp
roll
fisubrs
hlt
and
ljmp
cmp
out
sahf
dec
push
inc
sub
and
insl
dec
pop
sbb
jbe
stos
jecxz
mov
das
sub
scas
lret
out
xchg
call
mov
daa
fstpt
mov
sahf
out
and
adc
xor
and
sub
fimull
adc
aam
mov
sahf
push
jbe
or
xchg
adc
mov
lret
inc
cmp
mov
cmpsl
mov
push
and
stos
cmp
outsl
pop
adc
enter
cmc
lea
sub
mov
scas
lahf
mov
fmul
shr
dec
arpl
jmp
adc
sti
xchg
xorb
mov
iret
pop
inc
mov
mull
enterw
popa
in
push
dec
jbe
stc
sub
insl
mov
enter
or
data16
test
pop
xor
sbb
jne
pop
mov
xchg
add
aad
xor
or
int
fsubp
mov
fwait
jl
aam
cmp
aam
push
pop
mov
sbb
les
push
int
jle
mov
jg
into
lret
pop
popf
adc
in
test
jns
mov
cmc
aad
sub
cs
xorb
xchg
js
int3
inc
push
xchg
ret
fucomp
sub
pop
lea
adc
fwait
int
sbbl
and
mov
dec
mov
or
mov
add
movsb
repnz
mov
rol
xchg
cmp
icebp
ljmp
lret
xor
and
es
fiadds
test
mov
mov
mov
dec
sti
jg
aam
inc
dec
jmp
jns
lahf
repnz
mov
pop
add
cltd
and
jnp
shlb
cmp
fwait
les
sub
ret
push
int3
jbe
push
aam
mov
loopne
ret
mov
and
jmp
jnp
adcb
dec
push
dec
jnp
rorl
and
movsb
dec
pop
mov
pop
inc
shlb
out
pop
dec
inc
jp
add
into
mov
shl
rclb
adc
xchg
out
jge
cmp
push
push
in
mov
fisttpll
add
sub
sub
cld
jae
xchg
mov
jns
mov
xor
outsl
in
sbb
dec
in
out
ja
ljmp
mov
pop
int3
push
hlt
inc
mov
xchg
inc
xchg
sbb
push
rcll
add
push
xor
cwtl
fistpll
mov
lea
out
pop
add
fldt
jno
sbb
mov
mov
sbb
movsb
in
out
int
dec
jp
out
pop
dec
or
xor
in
in
mov
jo
jo
push
test
adc
xchg
mov
or
push
pop
mov
xchg
xlat
aas
jne
in
adc
pop
xor
pop
push
add
sbb
pop
mov
cli
dec
inc
fdivrs
gs
pop
stos
mov
paddq
int3
popf
xlat
loope
mov
mov
insl
jg
in
push
push
jle
rcl
push
dec
xchg
push
sub
push
mov
push
pop
xor
iret
sub
push
pop
mov
xor
movsb
cwtl
adc
insb
enter
sub
test
imul
loopne
stc
cwtl
fisttpl
jl
mov
ret
int
orb
imul
inc
orb
jmp
cmc
sbb
es
test
jmp
push
mov
pop
xchg
mov
inc
fisttpll
push
test
cli
add
inc
outsl
and
xchg
push
push
xchg
push
stos
or
pop
mov
scas
sub
inc
jg
pusha
lcall
das
idivb
cld
mov
or
mulb
dec
repnz
dec
out
orb
mov
movl
cmpsb
push
lds
mov
sti
dec
inc
mov
mov
xor
loop
and
xor
fdivrs
lret
sub
xor
leave
shll
ret
insb
mov
pop
cmp
repnz
mov
add
or
jecxz
mov
sub
movsb
add
arpl
jg,pn
mov
lcall
xchg
adc
xor
and
and
inc
push
adc
pop
insb
adc
nop
fcomip
fsubrl
fs
stos
jnp
inc
mov
jbe
dec
insb
xor
inc
cltd
xor
mov
mov
xchg
es
loope
push
leave
in
add
mov
and
repnz
push
jne
xchg
call
dec
out
pop
stos
cmpsl
add
fcmovne
mov
cmp
lods
imul
inc
inc
das
add
fisttpl
add
pop
push
popl
push
jns
jecxz
inc
jmp
movsl
inc
imul
imul
mov
and
mov
jle
shlb
xor
clc
jo
push
push
xchg
jb
imul
adc
xchg
and
fs
xor
add
mov
or
les
push
inc
xor
jp
adc
mov
les
dec
scas
push
imul
jmp
ljmp
ljmp
sub
fcmovu
xor
or
mov
loopne
inc
jnp
clc
lret
fs
push
ljmp
add
mov
cmp
out
or
sub
mov
js
dec
xchg
out
or
sub
imul
or
mov
leave
shl
mov
push
in
pop
fdivs
adc
push
int
je
pop
js
fmuls
cmpsb
repz
popa
cld
mov
mov
jmp
push
mov
negb
arpl
enter
addr16
outsb
outsb
cmpsl
jno
or
and
movsb
xor
ret
lahf
sub
call
out
or
icebp
fildll
xor
lds
sbb
js
inc
xor
es
aad
cmp
pop
stc
add
push
fmuls
cli
mov
stos
cmp
pop
int
pop
stc
sbb
iret
and
aad
pop
cmpsl
and
subl
or
mov
push
jo
jp
out
mov
xchg
sbb
add
push
inc
and
cmpsb
repz
xor
add
inc
lret
out
pop
mov
jle
jo
nop
add
xchg
inc
push
daa
dec
lret
fs
cmc
cmc
fld
cmp
jge
jae
movsl
inc
std
shr
nop
sbb
icebp
or
xor
movsl
stos
scas
pop
fs
adc
popa
push
xor
stos
add
inc
ret
sub
add
xor
xor
dec
in
mov
mov
xor
mov
aad
call
out
ret
mov
mov
sbb
adc
xor
cltd
fbstp
add
scas
mov
es
adc
add
jne
sub
outsb
ficomps
aam
sbb
lcall
cmp
xchg
ret
aas
or
out
jecxz
mov
sbb
and
mov
sbb
jecxz
aaa
cmp
xor
pop
loopne
fmuls
inc
movl
dec
shl
pop
loope
xchg
inc
inc
call
popa
inc
data16
movsl
popa
pop
sub
sub
test
xrelease
ret
sbb
inc
cmp
shlb
cmp
ja
or
popf
loopne
iret
mov
pop
cld
push
fisubs
clc
pop
pop
movsl
lods
dec
js
inc
jp
pop
fnstenv
test
fdivrp
rolb
in
mov
xchg
ret
fstps
push
mov
lcall
sbb
xor
stc
cmp
and
xor
add
sbb
test
aad
and
mov
in
xor
mov
push
js
int3
xchg
lea
incl
aaa
jmp
mov
xchg
inc
jmp
clc
adc
mov
dec
lods
sbb
sub
add
sbb
shrl
xchg
hlt
cmc
push
mov
lock
ret
inc
stos
mov
mov
dec
pop
xchg
testb
mov
iret
pop
sahf
ja
or
scas
cmp
in
jmp
or
sbb
inc
fdivrs
loop
mov
push
adc
dec
xchg
in
push
xchg
out
mov
loop
and
push
sbb
xlat
jae
ljmp
and
inc
in
shlb
mov
shr
adc
add
mov
inc
xchg
inc
or
xor
loopne
pop
xchg
shrb
sbb
pop
push
jne
fs
insl
fsub
stos
icebp
xor
outsb
enter
lods
popa
dec
cmp
xchg
stos
or
mov
aam
jmp
mov
outsl
xchg
int3
faddl
stos
jmp
xor
inc
leave
lret
cwtl
dec
and
mov
xchg
and
mov
aad
jecxz
xchg
aas
aaa
hlt
jge
cmpps
jge
cmp
testl
pop
loope
add
aam
sti
jge
fidivl
xor
addr16
mov
dec
jmp
faddl
cmc
out
xor
cld
subl
cmp
xchg
rclb
pop
das
inc
pop
cmp
xor
cwtl
add
push
ljmp
mov
lods
push
popf
rcrb
test
dec
orl
in
sbb
push
mov
sbb
in
popf
xor
add
das
fcom
and
xor
jb
movsl
cmp
jb
push
stos
insb
imul
ljmp
out
sub
cmpsw
into
mov
jno
outsb
sub
repz
adc
cmp
push
mov
ljmp
adc
inc
pop
adcl
mov
push
inc
inc
call
sub
mov
or
icebp
das
add
in
cmp
pop
hlt
sbb
push
cli
jmp
int
ss
xchg
inc
push
inc
xchg
dec
in
out
xor
cmc
xchg
test
cmp
mov
daa
sbb
inc
add
outsl
pop
cmp
jb
mov
ja
cmc
mov
ss
aam
lea
xor
pop
incl
imul
and
sti
add
insl
push
idivb
push
insb
mov
in
scas
cmpsb
xchg
and
fdivp
test
mov
fcoms
mov
pop
cmp
das
stc
push
rol
mov
iret
pop
add
aam
adcb
lods
mov
enter
sub
imul
imul
or
bound
sahf
fwait
pop
jg
repz
loop
ret
inc
sbbl
fwait
gs
fbstp
lret
jmp
repz
mov
jno
add
jb
xchg
or
sub
movsl
clc
pop
mov
ss
mov
repz
adc
xchg
dec
push
pop
jle
mov
je
xor
daa
adc
loopne
ret
shll
dec
out
jge
in
imul
ss
les
loop
in
cmp
jnp
ret
in
cmpsb
push
sbb
xchg
nop
loopne
cmp
loopne
hlt
jl
fsubrl
cmc
clc
sbb
dec
inc
pushf
out
ja
jne
xor
outsb
xor
test
or
cli
or
sub
addr16
aad
in
mov
stos
cmp
shrb
rolb
pushf
cmp
mov
data16
mov
mov
mov
cmpsl
sub
cltd
push
or
inc
jae
push
add
divps
push
divl
mov
es
cli
mov
jmp
mov
syscall
in
and
lcall
daa
adc
jecxz
xchg
push
lret
push
dec
push
push
sub
and
xor
push
jg
out
movb
cld
movsb
cld
lret
imul
es
int3
stos
xchg
insb
sbb
not
fwait
pop
xchg
add
stos
fcmovnbe
or
lahf
sub
popf
fld
add
xchg
out
popf
ret
inc
jb
jb
sub
cmp
and
xchg
notl
inc
pop
inc
cmc
xchg
inc
mov
mov
jo
repnz
mov
jnp
cld
sti
jnp
repz
pop
and
jmp
shll
pop
cmp
or
jno
sbb
aad
inc
loopne
dec
fs
in
xor
cli
xchg
mov
jns
pusha
pop
outsl
adc
imul
imul
cmpsl
jle
sub
xlat
mov
std
jmp
push
cmc
dec
mov
incb
dec
bnd
fstps
pop
push
fidivs
clc
jle
adc
adc
aaa
inc
push
data16
sub
push
inc
adc
adc
sbb
xchg
jne
cmp
push
loopne
xchg
enter
sub
xlat
pop
sbb
adc
es
adc
pop
sbb
or
inc
lods
push
in
dec
mov
adc
into
fs
sub
xchg
lock
jbe
push
sti
mov
jp
xchg
daa
jecxz
jne
xchg
ficomps
mov
pop
xor
mov
rcll
sbb
inc
lods
pushf
jp
pop
jb
xor
mov
repnz
hlt
jp
fucom
frstor
sbbl
lcall
pop
int
das
shl
mov
pop
inc
fsts
inc
stc
ret
and
ljmp
lods
test
jge
lods
data16
xchg
pop
push
fildll
sahf
stos
mov
cmp
cmp
sbb
lods
lea
je
add
loope
xchg
loopne
mov
fwait
gs
dec
das
nop
imul
jle
sub
stc
mov
cmpsb
and
xchg
ret
mov
pop
mov
into
xor
lods
ror
popf
mov
outsb
test
mov
pop
in
mov
jg
adc
in
int3
add
mov
jb
xor
inc
jecxz
scas
outsl
xchg
pusha
imul
jbe
sbb
aaa
loop
fsubs
push
dec
jb
pop
jg
mov
xchg
xchg
pop
ss
cmpsb
jg
jb
dec
pop
pop
cld
xor
testb
and
int
scas
insl
sbb
jle
mov
lret
loopne
iret
insertq
xor
xor
arpl
das
rcll
adc
mov
enter
and
xchg
ljmp
lret
pop
xor
sahf
jecxz
xor
mov
cmc
and
icebp
add
sub
jb
repnz
or
mov
call
mov
mov
shr
pop
js
adc
shlb
cmp
xchg
repz
cli
test
mov
jne
fdivrl
xchg
das
shll
loopne
lock
push
outsl
sahf
iret
jno
cmp
mov
xchg
lret
pop
xor
inc
nop
clc
or
pop
test
es
xchg
idiv
js
fs
sub
xor
or
hlt
push
outsb
outsb
xor
mov
imul
ret
testl
inc
sub
push
jno
shrb
add
xor
xchg
outsl
jg
in
sub
xor
les
insl
test
mov
addr16
add
enter
int3
cli
outsl
xor
rol
icebp
cld
xor
imul
sbb
dec
mov
mov
js
add
iret
pusha
cmpsb
out
mov
pop
mov
and
hlt
stos
pop
dec
lods
lods
cmpsb
xchg
dec
mov
aad
mov
dec
dec
je
lret
dec
gs
mov
jg
aam
push
mov
fistpll
repz
js
int3
mov
pop
mov
push
fcmovnu
push
dec
imul
stos
dec
xchg
fwait
lret
dec
dec
push
jbe
js
jecxz
fwait
jns
pop
repnz
mov
xor
ftst
outsb
movsl
mov
imul
push
xor
pop
shrb
mov
test
dec
add
in
adc
les
and
add
cltd
sahf
push
dec
mov
je
sub
xchg
jg
mov
lcall
cld
test
stos
jmp
insl
push
and
cmp
mov
add
testb
or
test
addl
ds
pop
call
gs
add
aaa
mov
das
mov
mov
lcall
scas
leave
mov
mov
dec
cmp
sub
jbe
pop
push
xorb
call
lds
cmp
push
xchg
cwtl
mulps
mov
insb
arpl
js
popa
aam
lea
mov
cmc
scas
fdivl
daa
mov
xchg
sub
xorl
lret
scas
nop
test
xor
add
dec
test
cmpsl
jns
jmp
inc
int3
inc
in
xchg
outsb
leave
movsb
call
lcall
es
lds
dec
je
mov
adcb
loopne
sub
scas
or
sub
test
cmpsb
pop
push
cmp
imul
mov
jnp
cli
xlat
shrb
lock
sbb
jb
add
sbb
mov
xchg
sbb
call
push
and
sahf
data16
pop
xchg
les
inc
or
imul
cmpsb
cmp
iret
xchg
fnstcw
clc
or
mov
mov
adc
mov
and
mov
jmp
clc
notb
inc
test
js
sub
enter
xor
loopne
push
jge
xor
and
in
cmp
cli
pop
dec
sarb
lcall
jnp
mov
sub
push
jecxz
ljmp
aaa
loopne
in
push
mov
lock
pop
in
les
les
aam
sbb
cli
sub
in
mov
adc
jo
and
and
dec
ljmp
pop
sti
stc
popf
sahf
cmpb
in
scas
sti
insb
and
inc
dec
aam
dec
in
pushf
or
les
out
jge
ds
cmpl
xchg
in
jmp
pop
loop
sub
outsb
outsb
cmp
andb
into
sub
pop
outsb
or
das
aad
inc
test
dec
aam
in
adc
mov
or
loope
xchg
sub
imul
call
and
andl
je
pusha
mov
test
pop
xor
jecxz
sub
sbb
sub
lret
push
mov
hlt
xchg
daa
cmp
cmpsb
lret
ja
or
hlt
cmp
and
mov
jne
dec
push
inc
les
jmp
sub
movsl
cmp
pop
mov
dec
adc
and
stos
push
and
or
add
mov
stos
inc
outsl
jbe
ss
and
push
filds
and
push
mov
je
adc
aad
stos
icebp
cs
push
loope
cmp
push
je
pop
dec
pop
jle
fs
inc
sbbb
cmc
add
push
xor
sbb
lods
lcall
inc
cltd
adc
ja
sahf
loop
jns
dec
stc
or
xor
cs
pop
jo
xchg
push
pop
movsl
jmp
mov
or
int3
add
jle
aaa
jle
ja
pop
dec
lahf
lret
and
cltd
cltd
pop
test
sti
sbb
repnz
sub
in
add
insb
movsb
jmp
test
jbe
leave
cmpsl
and
enter
mov
xor
cltd
lcall
xor
xor
pop
stos
insl
inc
xor
imul
pusha
iret
std
das
push
sbb
mov
or
cmpsl
jns
sbb
push
or
push
jge
rcl
sbb
fwait
cmc
cwtl
jp
sub
out
lods
fcmovne
aad
cmp
push
xchg
mov
cli
jne
dec
pop
mov
std
out
das
jne
sbb
dec
xchg
jbe
movsb
sbb
xorb
inc
fs
cld
dec
fdivrs
out
icebp
pushf
test
adc
mov
stos
cmp
sub
lods
ja
push
cltd
movsb
sub
addr16
jnp
jno
hlt
in
sahf
ret
popf
inc
test
xchg
and
outsl
add
cld
jb
mov
cs
add
fistpll
ret
mov
ret
push
add
loopne
test
add
outsb
aad
adc
adc
pop
adc
and
arpl
sti
lods
and
push
cwtl
sti
cli
and
dec
int
lret
jb
scas
jle
sti
mov
cmpsb
pop
adc
cltd
mov
test
push
cmp
adc
pop
push
stc
loope
in
in
mov
lahf
int3
adc
call
pushf
std
cltd
pop
cwtl
sti
xchg
cmpsl
mov
adc
nop
jnp
mov
scas
inc
push
andb
jno
and
jl
js
lret
in
xchg
in
fimull
ret
mov
pusha
xorl
adc
mov
jmp
in
outsl
xchg
insb
push
hlt
out
mov
adc
stc
inc
xor
jecxz
mov
pop
dec
shrb
ret
or
jp
mov
ss
das
loop
shlb
insl
adc
mov
call
pop
push
add
dec
mov
push
aam
out
mov
xchg
shll
pushf
dec
push
insl
fsubrs
mov
fcoml
sub
sub
xchg
fs
loop
xchg
sbb
xchg
in
out
lds
rcrb
loope
push
cmp
cmp
dec
adc
xchg
mov
xchg
clc
and
sbbb
mov
xchg
cmp
loope
xchg
xchg
repz
mov
rol
stos
sub
fldl
jl
adc
arpl
faddl
push
xorl
and
add
test
pusha
mov
iret
cwtl
xor
mov
lahf
loopne
mov
inc
test
sub
repz
mov
add
pop
sub
or
xchg
and
arpl
addr16
jg
cmp
std
shlb
movsb
stos
jmp
sub
sbb
test
or
inc
mov
jnp
or
or
sub
and
pop
jl
hlt
xor
sbb
mov
flds
imul
rcll
lcall
rcll
dec
xlat
andb
int
cmp
in
pushf
lds
loope
adc
push
push
pop
loop
jmp
andl
sarb
sbb
fidivrl
push
inc
mov
xchg
or
jo
mov
mov
dec
sub
or
fstp
loop
aam
xlat
pusha
or
outsl
es
and
fstps
sbb
lcall
mov
lahf
js
add
stos
cli
mov
xor
sti
push
stos
mov
jo
cmp
pop
enter
xchg
stos
mov
aas
cmpsl
nop
sbb
addr16
fstl
bound
ljmp
into
imul
out
in
and
jp
cmp
jmp
hlt
popf
mov
mov
jns
sbb
and
xchg
lret
mov
jns
std
lcall
decl
js
movsl
sub
xorl
cmc
in
ljmp
fisubl
int
add
pushf
mov
jb
pusha
insl
js
or
sub
pop
pop
inc
fisttps
ret
sub
shl
jns
inc
outsb
int
jl
cld
cmp
scas
xchg
add
rorl
add
pop
mov
jg
repnz
mov
fldenv
dec
pusha
mov
cmpsb
push
push
fstl
cmp
ljmp
inc
push
push
push
push
sub
xchg
scas
add
mov
sti
rcrl
stc
adc
dec
mov
fs
clc
add
mov
popf
adc
ja
int3
popf
pop
push
xchg
xchg
in
mov
aaa
stos
pop
jecxz
jbe
jg
das
jne
mov
pop
iret
inc
in
ret
mov
jmp
rcrl
pusha
imul
es
mulb
dec
xor
mov
leave
sub
push
cmpsb
cmpsb
ficoml
ljmp
add
shlb
push
cltd
cwtl
mov
call
push
push
les
dec
adc
inc
jo
xchg
adc
add
iret
mov
subb
mov
and
sbb
jecxz
test
test
pop
mull
lods
mov
pusha
sbb
rcrb
mov
pop
mov
and
adc
mov
outsl
mov
or
adc
pop
paddsw
mov
lret
mov
test
sbb
add
jbe
sahf
popa
cltd
test
fimull
lock
push
jo
xor
add
xchg
xorb
mov
mov
sbb
and
push
xchg
iret
arpl
popf
jp
xlat
lahf
pop
and
and
dec
mov
adc
pushf
adc
mov
movsb
jno
in
movsl
or
sarb
mov
int3
xchg
or
or
out
push
push
and
inc
adc
or
int
sub
nop
cmp
cltd
lahf
iret
in
and
adc
xor
lahf
repz
sbb
bound
inc
cld
dec
fwait
aas
decl
mov
std
in
jns
jg
lret
or
mov
stos
aad
scas
mov
jg
xchg
xor
jno
cltd
dec
mov
pop
fidivrs
mov
js
mov
fwait
popl
inc
jecxz
push
or
cltd
add
daa
lods
hlt
lcall
sbb
call
push
out
mov
cmpsl
add
jmp
and
popa
sbb
fldenv
movsb
jmp
pop
lock
fwait
je
jg
and
cmpsb
push
add
mov
xor
cld
je
lahf
insl
push
mov
or
push
adc
xor
stc
std
dec
testb
mov
fwait
dec
lods
xor
adc
jne
ljmp
fbld
inc
out
sbb
dec
dec
xorl
xchg
lea
or
mov
enter
lods
testb
push
enter
cs
bound
cmpsl
lea
das
push
jmp
repz
insl
fmulp
insl
mov
jp
pop
mov
adcb
call
lea
call
pop
xchg
jl
and
lcall
add
iret
push
xlat
push
cmp
pop
push
je
mov
jecxz
stos
sbb
mov
mov
inc
gs
pop
ds
and
in
jbe
inc
andl
pop
xchg
fs
lock
es
dec
push
cli
shl
mov
sbbl
fs
dec
and
jmp
lods
or
fidivs
cli
dec
sbb
imul
and
adc
insb
dec
lea
cmp
lods
jge
repnz
movsb
ret
mov
mov
fldt
nop
sarb
mov
xchg
test
nop
pop
cmp
mov
jl
mov
lea
adc
push
vmwrite
pop
fcoml
mov
es
xchg
es
xor
loop
jmp
mov
scas
in
gs
sbb
sbb
shlb
jb
notb
aas
mov
jge
adc
cs
jmp
fists
jo
fwait
push
inc
popa
xchg
xchg
xchg
cmc
sahf
pop
pop
stos
jl
inc
sbb
xor
adc
shrl
imul
mov
ficompl
jmp
shr
cmp
sub
call
sub
jbe
enter
lcall
cld
mov
mov
ret
jmp
jp
xchg
loop
stos
jnp
addr16
pop
sub
sub
dec
imul
sbb
mov
pop
adc
je
outsb
inc
gs
xor
mov
loope
aam
sbb
xor
mov
lock
cmpsb
out
xor
aam
push
mov
jecxz
or
outsl
nop
repnz
xchg
jmp
lods
jmp
into
jnp
aas
xchg
sbb
inc
jnp
adc
jle
fmuls
lret
fidivl
repnz
pop
and
cmp
push
cmp
xorl
faddl
cltd
shll
shlb
imul
cwtl
xor
outsl
sbb
movsl
mov
sub
jle
in
mov
aad
arpl
push
pop
xchg
stos
mov
jb
fnstcw
dec
cmpsb
push
xor
aam
mov
sub
or
adc
pop
mov
std
popa
daa
into
imul
leave
js
fsubr
rclb
pop
push
lcall
cwtl
mov
push
xor
add
and
pop
or
orl
rorl
test
sub
sarb
mov
out
xor
sar
pop
sar
lea
adc
gs
lock
cmp
cmpsl
jns
mov
add
lods
sbb
push
js
stc
sub
pop
jae
rolb
sub
dec
fdivrp
pusha
cmc
xor
mov
sti
or
dec
and
fisttps
xchg
push
ds
loopne
dec
mov
mov
gs
jne
addr16
mov
xlat
pop
push
lcall
mov
fs
lods
pop
mov
test
leave
add
push
je
add
lret
pop
sti
test
ret
mov
and
movb
in
add
aad
inc
pusha
cld
es
icebp
int
mov
aas
sbb
mov
pop
sub
dec
ffree
jmp
lcall
xor
add
fnstcw
fnsave
xchg
xchg
icebp
cmp
dec
and
int
mov
les
adc
loopne
pop
add
push
pop
push
arpl
mov
call
das
sti
data16
and
test
subb
push
xchg
leave
dec
shll
addr16
cld
mov
jo
loopne
xor
fucomi
add
jb
xchg
je
les
stos
ds
je
mov
fidivrl
mov
icebp
adcl
idivb
addl
pop
inc
pop
or
xchg
stos
jno
popf
dec
outsb
enter
xor
cmp
jp
cmpsb
dec
lock
scas
and
stos
pop
jg
fnsave
arpl
cmp
setbe
mov
jae
hlt
mov
xor
push
mov
mov
jge
popa
lret
imul
pop
sbb
pop
aaa
push
xor
aas
sti
or
jp
pop
xchg
in
mov
xor
cld
pushf
testb
mov
test
dec
dec
iret
cmp
cmp
pop
mov
pushf
push
sti
mov
aas
sbb
negb
bound
rcll
sbb
sub
mov
outsb
mov
jns
test
mov
xor
sbb
xor
ret
pop
std
pop
imul
xor
inc
push
push
lret
lret
cltd
mov
push
inc
call
jmp
jle
cmp
icebp
cwtl
popf
dec
xor
insb
mov
pop
and
jno
shlb
aaa
fbstp
cwtl
stc
cmp
test
pop
sarl
and
js
add
mov
fwait
xchg
mov
or
mov
add
outsb
outsb
and
addr16
orb
mov
inc
imul
aad
dec
mov
fildl
shll
lea
jb
ss
cmp
sbb
and
sbb
mov
mull
in
fwait
test
stc
xor
cmp
xchg
sbb
mov
mov
push
sarb
fbstp
cmp
pop
icebp
pop
stc
push
and
mov
rcrb
push
xchg
out
jno
pop
mov
xchg
lea
lret
out
popf
outsb
pop
push
daa
das
cltd
jg
cmp
cli
sahf
jge
std
insb
jno
xchg
or
sahf
mov
mov
cmpsl
cmc
mov
mov
fsubs
or
les
movsb
lret
vmwrite
ljmp
int
iret
ret
cmp
or
mull
dec
aad
jecxz
add
and
jp
push
ret
cmp
push
jae
dec
mov
push
mov
xchg
inc
add
mov
inc
hlt
iret
pop
leave
jne
cmp
xchg
inc
gs
cmp
fmuls
popf
adc
idivb
push
mov
mov
xor
mov
repz
test
push
andl
repz
cld
mov
call
xor
out
cmpsb
adc
fcomps
mov
inc
dec
enter
das
gs
mov
xchg
xchg
mov
movsb
popf
nop
sbbl
mov
jecxz
cs
pusha
add
xchg
jecxz
mov
pop
es
adc
cli
lea
mov
fdivr
push
add
insb
fmull
or
sbb
dec
in
push
movsl
mov
push
lahf
test
out
leave
jnp,pt
sub
out
adc
dec
aad
popa
fcomps
repz
xor
xlat
cmp
pop
jl
fs
add
popf
jl
dec
jg
fidivs
popa
fldenvs
push
rcrb
cltd
pusha
dec
mov
jno
jge
icebp
and
in
mov
popf
mov
mov
cmc
test
stc
sub
push
mov
jg
and
push
and
sahf
sub
es
mov
xor
out
push
or
push
inc
pop
daa
data16
cltd
icebp
pop
xchg
xor
sbb
and
ret
push
cmp
dec
cwtl
jbe
push
loop
shrb
xchg
iret
popf
rclb
es
movsb
jmp
into
inc
xchg
mov
jecxz
int3
jle
cmp
in
stos
fnsave
pushf
cwtl
mov
gs
mov
push
std
lahf
jge
sbb
cmp
xchg
in
pushf
aaa
in
out
jg
cld
xlat
pop
and
push
std
ds
dec
imul
jnp
add
das
aam
in
cld
loop
mov
cmp
mov
xchg
mov
gs
or
fsts
push
daa
jl
fadds
cmp
xor
aad
pop
xchg
cmp
js
xor
and
jecxz
pop
out
add
aad
jl
dec
daa
mov
paddq
cld
sub
subl
xlat
jo
lods
jmp
mov
gs
push
repz
mov
stos
cmp
jb
stc
cmc
cmp
hlt
rorb
bound
push
cltd
xor
mov
jp
mov
sti
or
and
mov
in
push
test
pusha
dec
mov
pcmpgtb
ret
mov
pop
out
inc
and
ror
sub
or
inc
ret
mov
test
cmc
xchg
add
sub
xchg
xchg
fs
stc
jo
lcall
adc
ss
or
mov
lock
popa
stc
ret
movsb
mov
sbb
ja
sub
lods
xchg
push
ret
dec
cmp
jns
and
mov
fs
cs
add
inc
xchg
xchg
cmc
shlb
pop
xchg
push
jecxz
push
jl
or
insb
adc
cli
sub
movsb
xchg
pop
aas
es
sub
jmp
push
in
mov
add
push
cmp
push
xchg
sub
jecxz
out
orl
popf
popf
dec
nop
int
imul
incb
inc
add
adc
mov
xor
mov
cmc
out
mull
shlb
clc
js
sbb
xchg
mov
popf
gs
data16
jmp
inc
or
loope
bound
cmp
lret
or
adc
fiaddl
xor
sbb
dec
pop
push
push
pop
out
sahf
in
adc
or
xchg
add
fldt
loope
xchg
fisttpll
adc
add
aad
inc
add
loop
bound
sub
adc
push
or
and
inc
out
in
jbe
jg
jl
pop
pop
mov
push
pop
pop
or
daa
aad
sub
pop
cmpl
cmpsl
loope
add
nop
pop
cli
fisttpll
shll
adc
ret
cmp
fdivrs
and
inc
into
xchg
jp
loope
std
insb
aaa
sarb
decl
pop
je
and
stos
cs
adc
adc
cmp
sti
pop
add
adc
roll
fidivrl
sbb
addr16
ret
int
int3
mov
jle
and
jne
cmpsb
sub
test
rolb
xor
jp
inc
push
push
push
repz
jmp
out
dec
lcall
fcomps
xchg
cld
scas
jmp
inc
clc
inc
sbb
mov
sbb
pop
repnz
dec
rcll
cmp
mov
mov
xchg
and
mov
ds
cmp
lcall
filds
jl
je
movsl
repz
les
push
fcoml
enter
dec
out
sub
cmp
cmp
mov
stos
test
stos
jb
mov
std
adc
loop
jns
outsb
popf
or
sbb
xchg
pop
adc
movsb
mov
into
push
mov
scas
cmp
inc
push
shlb
test
aam
lds
add
cltd
jno
fmul
inc
dec
in
dec
ljmp
insb
daa
xchg
scas
mov
jbe
xchg
xor
cld
jl
lea
push
jne
add
jge
push
inc
jmp
jge
je
mov
test
jno
xor
xorl
push
inc
int
or
dec
imul
mov
jb
add
adc
push
dec
loope
pop
lahf
jl
roll
mov
fs
push
jg
pop
jb
test
mov
mov
test
dec
xor
inc
sbb
faddl
mov
enter
lea
pop
adc
scas
sti
mov
test
or
jbe
push
into
cmc
and
jl
mov
jge
dec
push
sub
ret
test
dec
mov
adc
or
outsl
test
mov
fdiv
lret
inc
cmp
mov
sarl
lret
clc
and
loope
fdivs
xlat
inc
xor
push
gs
mov
pop
sbb
repz
adc
lea
push
push
cltd
rcll
shll
stos
mov
adc
sahf
mov
std
les
mov
jl
loope
adc
fsubl
pop
out
loopne
jecxz
inc
insl
mov
push
xchg
out
leave
test
mov
push
adc
xchg
xchg
and
inc
scas
cmpl
testl
sub
mov
insb
mov
push
mov
push
mov
sbb
rcrl
mov
and
mov
lods
adc
pop
and
repnz
cmpsb
pop
lods
pushf
mov
fbstp
xor
test
mov
aaa
rol
and
pop
xor
dec
push
rol
sbb
jae
inc
test
fwait
or
inc
sbb
cmp
cmp
or
and
sbb
jl
jmp
out
fnstenv
push
push
lods
stc
mov
adcl
adc
jle
pop
sub
xor
out
mov
stc
dec
les
inc
pop
cltd
cmp
pop
push
or
jne
pop
stos
cmpsl
jmp
pop
jle
in
cmpb
jnp
insb
daa
inc
and
lea
pushw
sub
divl
lcall
xchg
aad
aas
mov
xchg
inc
inc
nop
or
sub
mov
inc
sub
fisttpll
out
clc
pusha
mov
insb
mov
aaa
outsl
sbb
xorl
mov
pop
stos
mov
loopne
jns
test
ja
push
cld
mov
nop
pop
pop
ret
test
cld
or
outsb
and
daa
cmp
cmp
adc
out
push
inc
inc
fcoml
les
mov
repz
jo
je
push
xchg
gs
push
jecxz
movsl
mov
add
enter
inc
and
pop
mov
repz
and
push
les
add
xchg
jle
cli
mov
cld
popf
adc
inc
xchg
add
lret
mov
jmp
stos
push
xchg
sub
shl
lahf
or
or
popf
ss
mov
arpl
fldz
pop
stc
daa
loopne
push
mov
and
push
pop
mov
inc
or
mov
and
int3
call
dec
mov
cs
rcr
aaa
fcompl
add
cld
inc
aas
mov
leave
addr16
adc
xchg
test
xlat
lahf
push
dec
cli
sbb
jmp
jmp
outsl
insb
cltd
jle
xor
ds
xchg
ret
push
ja
decb
and
jae
and
xchg
lods
movsl
dec
push
fisubrl
cmp
shl
fucom
mov
jnp
clc
cmp
ss
out
cmp
cli
dec
mov
mov
xor
leave
lcall
pop
mull
lret
pop
int
rcl
popa
inc
xacquire
inc
mov
cmpsl
mov
out
sub
aas
ljmp
mov
adc
ljmp
cmp
popw
jmp
jmp
jbe
mov
xchg
inc
imul
mov
jl
inc
je
scas
sti
push
dec
sbb
xchg
jmp
and
and
aam
mov
inc
xor
xorl
mulb
jge,pt
push
push
pop
dec
adc
xor
and
sbbl
test
aas
jg
adc
lods
mov
push
imul
hlt
in
fisubs
dec
adcb
popa
cmp
cmc
imul
es
loop
divb
and
cmp
inc
mov
push
mov
jg
pop
inc
js
mov
xchg
and
dec
push
mov
add
cmpsb
mov
jno
xor
dec
sub
minps
imul
push
repz
mov
cmp
lock
mov
loope
mov
cmp
aad
push
or
sbb
add
ficoms
sahf
stc
or
stos
xlat
test
loope
lahf
lcall
mov
ret
jns
add
outsl
cmp
push
fisttps
fsubrl
push
push
in
inc
adc
add
push
jmp
mov
lods
call
lods
testl
lret
push
cmpsl
xchg
aam
loopne
push
fs
mov
xchg
jbe
dec
xlat
les
jmp
mov
xor
xchg
pop
out
decb
mov
cmpsb
jbe
xor
jl
int
lcall
mov
mov
sbb
int3
adc
lods
fcompl
xchg
cmpsb
fisttpll
in
jae
fsubs
sbb
push
dec
mov
mov
test
es
fs
aas
dec
inc
inc
pusha
xchg
test
sbb
out
sub
jns
and
loop
test
push
fwait
or
test
outsl
scas
xchg
ret
add
cmpsl
gs
cltd
adc
int
mov
jl
hlt
out
xchg
inc
cld
fistpl
faddp
movsl
xchg
dec
xchg
sbb
add
icebp
sbb
cli
dec
inc
cmp
fwait
neg
dec
push
andb
bound
sub
cmpl
test
out
fistpll
ljmp
mov
std
repnz
mov
or
jb
xchg
xlat
xlat
inc
xor
ljmp
aas
and
mov
xchg
mov
rolb
pop
add
outsb
fistpl
mov
cmp
add
adc
out
popf
out
out
cmpl
jecxz
arpl
inc
stc
or
mov
aam
mov
xchg
loope
bound
mov
mov
lcall
xlat
loop
mov
push
inc
pop
lds
sbb
push
mov
mov
incb
lock
xchg
mov
push
pushf
cmpsl
and
out
dec
cltd
jnp
popl
xor
dec
in
nop
mov
xchg
xchg
mov
movsb
lea
xor
loop
adc
dec
cmp
push
push
hlt
insl
jne
dec
and
dec
testl
pop
mov
ds
loope
mov
mov
jne
imul
lods
call
inc
mov
and
mov
jae
dec
and
subb
cmpsb
out
mov
shl
out
xchg
mov
xor
sub
das
movsb
push
pop
out
push
in
sbb
adc
jle
mov
in
cld
shlb
loop
loope
arpl
mov
es
bnd
push
std
or
pop
test
out
repz
adc
cltd
push
mov
adc
mull
ret
jbe
inc
pop
mov
imul
push
mov
aam
or
pop
std
gs
test
xchg
mov
jmp
add
xchg
lcall
mov
inc
mov
and
shl
cmp
nop
mov
js
lock
xchg
pop
in
jo
call
lods
adcb
xchg
outsl
shlb
dec
xchg
inc
scas
test
add
mov
and
or
inc
fimull
pop
das
lcall
jae
jle
xchg
in
mov
bound
mov
push
inc
add
mov
call
mov
sarb
jbe
cmp
and
dec
fistpll
clc
movsl
shrb
sarl
sbb
mov
mov
sbbb
push
push
imull
sbb
testb
mov
cmp
sub
xchg
sub
or
jne
sarb
rolb
testl
stos
cld
xchg
cmp
xchg
and
or
repz
andb
das
es
mov
cmp
and
add
push
negl
not
sub
mov
mov
pop
loopne
push
pusha
fcomi
mov
sbb
inc
inc
js
ds
mov
xor
mov
arpl
mov
pop
cmpsb
and
jecxz
aad
hlt
mov
mov
das
push
cltd
xchg
movsl
xor
and
data16
jl
test
add
test
in
icebp
mov
inc
dec
test
pop
lock
mov
adc
incb
lea
popf
jo
repz
stc
cwtl
gs
xor
hlt
sbb
lock
aad
out
lcall
lahf
jb
ret
xchg
ret
push
lcall
sbb
xchg
xchg
test
dec
mov
mov
mov
mov
sbb
lahf
loope
push
push
push
nop
les
jne
hlt
into
mov
outsb
aad
dec
aad
out
aas
in
lret
jo
cmp
cmpsb
push
das
adc
jbe
call
mov
call
xor
rorl
sbb
movsb
pushf
fbld
sub
daa
pop
aas
sbb
mov
fldenv
xchg
dec
sub
mov
clc
ds
pop
mov
push
jmp
dec
mov
add
add
cmp
popa
idivl
inc
mov
xchg
mov
push
gs
sub
lcall
test
bound
cmc
xchg
cmp
sbb
inc
ja
dec
or
ja
arpl
mov
roll
pop
jbe
les
jae
sarl
pop
in
dec
arpl
mull
daa
adc
clc
repz
xchg
mov
mov
mov
ret
inc
dec
and
addr16
xlat
or
in
fsubrl
xor
ret
out
jne
and
int
mov
adc
mov
filds
dec
push
sub
adc
pop
and
ja
movsl
jecxz
lods
icebp
xchg
loopne
fstps
mov
call
xor
add
sub
sub
out
leave
vandps
mov
arpl
sbb
mov
jb
mov
subl
ja
mov
push
pushf
dec
fiaddl
cmp
jbe
std
or
cmp
pop
push
lret
push
xchg
push
outsl
fwait
push
xor
mov
leave
shrl
push
jns
in
add
insl
cld
push
outsb
orb
mov
mov
lcall
fyl2x
inc
lds
xor
cmp
xor
into
cmpsb
je
push
nop
stos
in
push
jnp
or
lahf
cmp
mov
mov
ror
jmp
sbb
call
jae
pop
pop
lahf
insb
ret
lods
mov
jp
fisttpll
xchg
inc
push
xlat
mov
lods
pop
repnz
add
jg
repz
lret
jmp
orl
les
std
movsb
cmc
jmp
mov
sbb
mov
mov
sarb
sub
xor
out
shll
fucomip
insl
add
cmpsl
push
mov
mov
jae
notb
arpl
push
repnz
and
adc
fs
in
dec
cmp
lds
and
addr16
jge
sahf
ret
mov
in
mov
and
mov
mov
stos
mov
sub
mov
into
xchg
cmpl
mov
cld
sub
sahf
sbb
sbb
sub
pop
inc
xlat
fisttps
in
imul
jp
add
int
xchg
pop
dec
loope
inc
fadd
enter
addr16
cmc
pop
adc
dec
loope
fcoml
push
int
sbb
aas
inc
xchg
cmpsl
pop
pop
and
xchg
inc
aas
xor
push
addr16
in
rcrb
pop
cwtl
pop
daa
cld
in
repz
sub
xchg
xchg
sahf
loop
push
push
out
in
gs
cmc
add
movsl
mov
outsb
mov
mov
push
stos
sub
cmp
add
ljmp
push
or
jo
mov
jo
add
jl
std
jae
movsb
or
mov
xchg
sub
sub
xor
mov
lahf
cmpsb
scas
dec
out
jno
ret
mov
mov
mov
mov
aad
add
jle
fs
sub
pusha
mov
xchg
ss
jge
cmp
cmp
mov
in
jae
push
sub
outsb
jo
js
xor
inc
imul
add
stos
adc
gs
fwait
aas
dec
or
in
xor
loop
leave
fdivrs
push
jmp
dec
pop
rclb
sti
cld
inc
xchg
pop
fsubr
xchg
cmp
nop
mov
test
sub
scas
sbb
cmp
mov
cmc
repz
jl
dec
stos
sbb
mov
xchg
push
add
rcr
mov
leave
fldenv
mov
scas
sub
mov
mov
xor
pop
mov
stos
lret
dec
xor
cmp
or
pop
jno
xchg
sbb
shll
outsb
mov
rclb
inc
fidivl
inc
or
dec
ror
mov
adc
jecxz
pop
add
or
xor
dec
inc
cmp
jae
sarb
push
icebp
cmp
inc
xlat
inc
jo
cli
push
rcr
cmp
mov
cmp
ss
xchg
addr16
mulb
loope
push
sahf
or
cmp
adc
mov
and
inc
fidivs
pop
jecxz
bound
subb
mov
pusha
inc
fs
inc
cmp
add
mov
push
or
ss
loope
xor
sub
data16
sbb
cltd
inc
mov
push
pop
xor
mov
js
sub
test
jl
ds
inc
and
js
out
mov
sub
dec
jge
roll
out
mov
cmpsb
dec
orb
ds
stos
ret
mov
stos
aaa
clc
adc
xchg
jmp
mov
inc
lret
push
push
sar
bound
sbb
jp
xchg
movsl
rorb
fisubrs
shrl
push
pop
incb
sbb
jge
mov
and
stos
mov
sahf
sub
inc
jl
dec
xlat
sahf
pop
ljmp
hlt
cmpsl
or
xor
stos
out
lcall
lea
in
rorb
xchg
inc
push
xor
test
xchg
xchg
sahf
pop
sbb
std
mov
mov
xor
add
lock
mov
xor
xchg
shll
mov
inc
hlt
jmp
mov
cbtw
cmpsl
cmp
xchg
imul
popa
in
pop
add
mov
int3
xor
cltd
ret
test
cmpb
lret
mov
fsubl
jmp
aaa
mov
nop
add
shrl
outsl
incl
mov
inc
lea
push
lea
xchg
loopne
and
mov
ljmp
xchg
orb
mull
out
sbb
dec
cmp
cmc
clc
into
push
jp
mov
adc
es
test
clc
dec
popl
pop
es
js
xlat
xchg
xor
fnstsw
push
mov
jnp
mov
xchg
push
loop
pushf
push
fcomp
xor
pop
aad
loope
inc
and
stos
daa
shrb
jmp
inc
add
jmp
test
test
out
hlt
popf
lock
cwtl
mov
mov
test
adc
shll
inc
mov
push
mov
push
push
sbb
aad
or
cli
shll
dec
es
xor
mov
mov
into
nop
dec
rcrb
or
out
out
ljmp
lahf
pop
cmp
test
lea
inc
mov
mov
scas
inc
es
pop
in
js
cmpsl
out
sbb
lret
add
mov
fwait
push
xchg
mov
xlat
or
sub
pushf
mov
hlt
dec
out
or
dec
in
cld
push
mov
or
hlt
les
outsb
pop
insb
sti
mov
clc
dec
or
call
hlt
mov
dec
pop
stc
add
jns
lea
push
icebp
mov
cmpsb
pusha
addr16
xlat
pushf
inc
icebp
mull
rcrl
jl
sbb
leave
std
add
or
jmp
mov
jl
xor
and
cmp
test
adc
pop
mov
rcrl
mov
mov
jnp
gs
xor
mov
outsl
or
jno
or
mov
int3
adc
cmp
jo
pop
rolb
and
push
lods
jns
add
data16
popa
jge
adc
daa
lods
inc
int3
pop
rcl
into
repnz
daa
push
lcall
xchg
xchg
mov
sub
cmp
mov
sarl
mov
mov
pop
jae
fs
aam
inc
and
mov
sbb
jle
scas
int
dec
lea
divb
cmp
in
rolb
jnp
adc
ss
movsl
in
fsubrs
shll
loop
psrlq
pop
xor
outsl
sbb
cmp
les
add
jecxz
bound
jns
add
fwait
xor
scas
push
jns
push
jl
rorb
xchg
or
outsl
hlt
js
add
iret
movsl
add
stos
sub
jae
dec
aaa
sahf
sbb
imul
xor
adc
jnp
xor
loopne
fstpt
dec
mov
dec
pop
mull
jno
outsb
xlat
in
mov
cmp
icebp
add
mov
mov
xchg
clc
mov
fld
call
nopl
pop
aaa
popa
jle
cmpsl
cltd
lcall
xchg
mov
cli
mov
aad
xchg
addl
pop
mov
jecxz
mov
fisubs
test
rcl
cmp
cmpsb
lock
stc
xchg
sbb
nop
imul
aaa
and
in
add
mov
into
jbe
stos
rorb
aam
and
sub
ficoml
imul
addl
dec
jns
inc
sub
repnz
clc
arpl
outsb
dec
xor
int3
add
lahf
pop
mov
dec
lods
ret
scas
xchg
xchg
push
adc
mov
rcr
std
andl
aas
inc
inc
xchg
mov
mov
stos
fnsave
jbe
cld
dec
dec
repnz
jle
cli
mov
xor
sbb
mov
mov
iret
rorb
inc
cs
xchg
xor
movl
adcb
ret
stc
mov
add
movsl
cmp
out
pushf
test
cld
inc
mov
imul
sbb
je
xchg
xor
jne
fstpt
and
popa
jmp
out
xchg
sub
aam
jns
loopne
es
push
ds
leave
mov
test
xchg
or
push
pop
loope
les
add
aas
call
add
mov
pop
ss
cmpsb
dec
insl
pusha
push
xor
ss
adc
pop
je
mov
andl
mov
leave
and
mov
sbb
pop
test
lods
dec
cmp
sub
out
jae
bound
dec
xchg
std
mov
loope
mov
xor
jo
rclb
pop
push
xchg
push
jecxz
inc
cld
inc
out
dec
daa
sbb
mov
push
sub
add
sbb
out
mov
xlat
lahf
or
rcrb
cld
sbb
dec
cmpsl
cld
push
sbb
xchg
int
pushf
add
mov
push
sub
pop
cld
and
or
outsl
cltd
nop
pop
ret
icebp
dec
shrb
sub
inc
in
outsb
sub
cs
icebp
xor
xchg
inc
and
xor
mov
lahf
and
xchg
fs
mov
mov
lret
or
cmpb
cltd
jg
xor
ja
ss
pusha
lret
shlb
pusha
shll
inc
and
enter
or
dec
cmc
sbb
test
push
into
mov
mov
xchg
push
es
mov
adc
add
or
xchg
sahf
mov
cmpsl
or
outsl
imul
jmp
push
repnz
int
or
rcll
xchg
mov
push
nopl
xchg
add
addr16
push
push
mov
or
mov
jecxz
or
jno
pushf
jnp
cltd
icebp
lods
add
popf
jae
jmp
or
orb
out
std
mov
add
inc
push
cmp
jmp
push
fstps
push
mov
inc
mov
push
dec
add
arpl
jo
rolb
sahf
xor
lock
mov
stc
push
popa
mov
jl
movsl
mull
mov
maxps
add
imul
xor
fdivrs
inc
add
aam
dec
cld
xor
inc
and
ret
mov
mov
adc
sub
out
sbb
add
xlat
jbe
mov
mov
leave
insl
push
jecxz
xchg
sub
rol
lcall
lret
jo
mov
aaa
out
cmp
lds
in
out
call
loopne
fs
stos
int3
enter
daa
mov
stos
mov
fcmovnu
lahf
test
dec
cltd
neg
xchg
push
arpl
scas
xor
popa
aaa
test
pop
add
push
and
pop
sub
inc
les
xlat
ficompl
xorl
outsl
xchg
das
fisubl
dec
xchg
out
icebp
push
push
and
push
arpl
or
push
pusha
mov
std
loopne
lods
addr16
fdivp
inc
or
cmp
xor
mov
loopne
jns
add
jmp
mov
xchg
lods
outsb
inc
int
imul
idivl
dec
dec
outsl
ret
fucomip
mov
lcall
aad
leave
divb
fidivrs
jle
and
and
movsb
and
dec
jno
jbe
cmpsb
pop
jno
cli
aam
push
es
sub
pop
shlb
xor
dec
popa
dec
adc
mov
mov
mov
cmp
addr16
mov
mov
and
cltd
pop
jge
sub
cmp
fildl
jmp
clc
and
add
scas
imul
rcl
iret
mov
xchg
pop
add
adc
cmpsl
adc
mov
jae
mov
enter
jb
or
jmp
cmpl
gs
mov
rcrb
push
stos
in
dec
into
movsb
stc
sarb
cmp
cltd
xchg
and
cmp
sub
add
loope
sbb
xorb
ret
dec
incl
mov
or
xorl
adc
gs
push
cmp
pop
jecxz
jo
ja
ficoms
mov
dec
push
jno
aad
imul
lds
mov
stos
fsubrs
sbb
add
aam
sub
jl,pt
flds
lret
dec
pop
idivb
and
and
cmp
adc
fst
pop
repnz
popf
std
pop
dec
arpl
loop
xchg
pusha
pop
sti
pop
outsb
test
cmc
cmp
dec
cmpsb
inc
notl
or
test
popa
jno
iret
insl
leave
sub
aad
rorb
inc
filds
push
push
pop
dec
gs
or
push
movsl
jo
add
es
cmp
pop
mov
in
cmp
test
pop
stc
sbb
jne
xor
or
outsb
int3
push
mov
ds
push
jns
dec
mov
ret
and
jp
das
fidivrs
or
mov
and
add
mov
bnd
jge
mov
lock
js
andl
xor
cmp
stos
jbe
aad
ss
sti
popf
dec
mulb
pop
daa
bound
lahf
mov
mov
cmp
cmp
test
stos
in
lahf
cmp
inc
enter
and
repnz
test
sub
test
jge
je
shr
int3
xor
push
adc
mov
daa
lea
lret
dec
dec
mov
add
insb
bswap
cmc
mov
or
sub
pop
popa
jb
cmp
dec
aad
xchg
push
cmp
enter
lea
leave
sti
notl
mov
daa
ss
shll
xchg
or
mov
mov
ret
sbb
imul
movsl
aad
rol
adc
mov
in
pusha
dec
jmp
insb
dec
cmpl
jb
inc
or
pop
add
pop
inc
push
lcall
inc
mov
pop
cmp
test
push
jno
sbb
mov
test
adc
inc
fistpll
add
fsubs
das
adc
sbb
test
push
mov
pop
pusha
pop
cmp
into
icebp
jmp
push
inc
mov
aaa
dec
scas
test
ja
and
lods
mov
cmp
push
sarb
mov
sarb
rep
lret
inc
rorb
inc
stos
enter
aad
sub
sbb
inc
xlat
stos
nop
pop
push
jp
sub
ffreep
inc
sub
jmp
movsb
cld
adc
imul
jb
mov
ds
or
stos
sub
int
leave
dec
loopne
jns
hlt
test
lret
js
int
orl
push
aam
cwtl
mov
and
insl
lcall
inc
pop
lret
and
xchg
repz
push
hlt
adc
mov
mov
nop
and
int3
jb
xchg
pop
xorl
sbb
out
jb
popf
mov
adc
popf
inc
outsb
shrb
mov
dec
ret
ret
lret
lods
stc
loop
lcall
xor
mov
aad
add
mov
fs
lahf
sti
fcmovne
jmp
pop
ljmp
fdivs
jo
in
sbb
sub
pop
xor
aam
push
mov
sbb
out
sbb
sbb
test
ret
inc
mov
ja
out
xor
call
lret
add
push
add
or
and
outsl
jl
mov
push
outsb
repnz
lret
test
cmpsl
push
pop
and
and
mov
out
lods
push
sbb
hlt
leave
mov
mov
lret
fwait
pop
cld
push
cmp
in
rol
test
cld
mov
add
xchg
push
jno
push
cwtl
mov
sar
jae
popa
mov
sbb
test
or
cltd
lock
cmc
clc
fnstcw
sbb
fisubrs
shr
cmp
xchg
inc
out
dec
and
test
or
out
cmp
push
imul
ljmp
jae
add
push
sbb
sbb
test
lret
scas
iret
mov
dec
mov
mov
jmp
testb
imul
mov
dec
adc
and
lret
or
loop
xchg
xor
out
dec
push
mov
out
push
xchg
fnstcw
cld
repnz
xorb
cmp
pop
fadds
cwtl
loope
or
jnp
test
lods
dec
add
aam
xor
fstpl
mov
mov
xchg
sbb
call
and
cld
xor
sahf
xchg
jp
pop
or
cli
es
rolb
add
into
shufps
lods
cmp
mov
sub
jnp
pop
ret
popf
push
push
mov
push
pushl
mov
cmp
push
and
test
ljmp
loopne
sti
push
sbb
fnstsw
jne
push
enter
mov
movswl
adc
lahf
into
out
mov
xor
and
and
jbe
or
pop
inc
jae
sbb
cmp
dec
cmpb
xor
sbb
enter
std
inc
jae
xchg
int
shll
popa
pushf
sar
and
aas
mov
loopne
mov
sub
pushf
cmpb
mov
and
push
or
inc
xchg
fcomp
cmp
or
sahf
jne
xchg
mov
faddl
fidivrs
cmpl
daa
inc
sub
js
pusha
and
push
or
jecxz
push
iret
les
xchg
mov
and
sub
dec
jge
xchg
mov
aaa
mov
add
fidivl
mov
adc
test
imul
fcmovnu
push
mull
into
cmp
mov
push
pop
mov
or
pushf
cltd
or
hlt
cmc
pop
sbb
mov
sub
xchg
cmpsb
mov
mov
mov
scas
sbb
addl
out
sub
mov
jmp
jae
leave
fidivs
xchg
rcl
sar
dec
in
xchg
sbb
pop
mov
push
xor
sbb
mov
and
bound
cmp
lock
bound
in
movsb
rol
mov
xor
mov
repz
mov
mov
vpunpcklwd
ss
add
mov
inc
inc
stos
xchg
repnz
in
out
ja
loopne
data16
push
xor
fisttpll
mov
push
aad
fcmovnb
clc
repz
dec
jb
mov
arpl
imul
push
pushl
adc
cmpsb
cmp
inc
pop
lods
mov
scas
stos
sbb
sbb
adc
xchg
rclb
lret
mov
aam
data16
cmpsl
out
fwait
push
sbb
data16
cli
xor
push
xlat
aaa
mov
cmp
adc
daa
dec
adc
in
and
test
outsb
add
daa
int
or
lea
xchg
mov
cmp
push
xor
sbb
and
scas
lcall
xchg
add
xor
jae
rcl
jge
sub
sub
mov
push
xor
mov
out
fisubrl
ljmp
btc
mov
lcall
jg
xor
cs
push
int3
sub
add
or
and
shrl
mov
or
movsb
aas
xchg
imul
movsb
mov
push
and
jne
daa
loopne
xchg
test
sub
stos
outsb
sbb
push
testb
mov
pop
pusha
inc
fs
mov
adc
aad
xchg
int3
negl
pop
mov
mov
mov
add
push
dec
repz
add
fdivrl
fwait
or
jl
fldcw
movsl
mov
jmp
or
and
lcall
mov
push
repz
shlb
loopne
mov
xchg
sti
dec
mov
shrb
out
cmp
cltd
repnz
mov
leave
mov
mov
inc
xchg
push
push
std
cld
jmp
call
in
cmc
xor
xchg
sub
leave
add
xchg
pop
movsb
dec
repnz
fists
cld
ja
fnstsw
fsubrs
pop
je
daa
rorb
movsl
icebp
inc
lea
popa
jbe
inc
push
test
fcmovnb
dec
js
xchg
add
mov
testl
sub
xor
or
push
jmp
outsb
pop
inc
add
stos
sub
gs
dec
scas
mov
dec
les
mov
sub
dec
sub
cmp
rcll
out
in
cmp
xchg
mov
cld
pop
jbe
insl
ficoml
addr16
std
loop
lods
mov
push
test
lret
inc
pop
push
mov
popa
shll
push
jo
or
popa
mov
ja
fmulp
iret
movsl
lods
stc
jge
dec
dec
sbb
mov
fidivs
int3
int3
fs
addr16
sub
scas
jge
repz
mov
adc
jno
mov
outsb
push
nop
fidivl
dec
mov
sti
mov
jno
or
mov
push
inc
cmp
cmc
pop
imul
dec
pushaw
adc
pop
and
rclb
dec
sti
arpl
push
cmp
xor
xchg
mov
jb
push
dec
aam
in
pushf
aam
or
or
and
xchg
repz
jmp
insl
outsl
or
cmpsl
pop
pop
mov
cmpsl
xor
lods
jmp
and
outsl
repz
pop
sub
pop
sbbl
mov
sub
loopne
inc
and
dec
jo
pushf
inc
xchg
and
and
cmp
ror
into
cmp
and
mov
sarb
mov
sbb
es
stc
xchg
xchg
pop
jmp
ljmp
test
xchg
mov
roll
push
or
inc
jne
xor
sub
cli
jno
sbb
jo
lds
mov
addr16
push
mov
fstl
inc
int3
pop
jmp
sub
mov
fucom
stos
out
jmp
sahf
and
or
imul
mov
push
insl
ds
push
dec
dec
testl
cli
jns
leave
sbb
xlat
inc
stc
sub
das
and
ljmp
cwtl
and
test
rolb
aaa
mov
ret
pop
sub
jae
push
icebp
movsb
daa
das
add
ljmp
push
cmp
test
stos
stc
sbb
shl
repnz
imul
decb
loop
jne
sub
inc
inc
pop
rcrl
and
call
in
js
inc
dec
add
rolb
dec
add
js
sub
aad
add
test
and
pop
out
cmc
cld
js
lcall
repnz
xchg
inc
cmp
stc
or
idivb
xchg
cltd
stc
hlt
sti
jge
xor
pop
aaa
dec
popf
movsb
sub
in
sub
test
leave
scas
xchg
mov
ja
jns
mov
bound
cmp
pop
sbb
repz
arpl
in
add
jle
hlt
scas
rclb
jecxz
orb
lock
test
sbb
cmpsl
js
xchg
adc
shrl
xor
out
dec
inc
lret
xchg
jo
lock
push
cld
aam
enter
jb
or
ret
jge
pusha
and
in
das
dec
out
mov
out
scas
rclb
xor
dec
das
inc
dec
add
dec
negb
mov
and
push
in
fisubl
mov
xor
ffree
fsubrl
rolb
mov
pop
inc
or
les
lds
push
cmc
test
icebp
sarl
mov
hlt
pop
cmc
movsb
clc
mov
jmp
jge
cli
int
cmp
dec
int3
pusha
dec
in
adc
test
test
push
imulb
jne
ret
pop
cmpsb
and
add
inc
inc
inc
dec
pop
stos
es
push
adc
sbb
lds
sub
dec
mov
movsb
icebp
icebp
adc
add
mov
call
scas
or
pop
mov
bound
push
xor
mov
vpmacswd
cmpl
cmc
add
nop
nop
sub
outsb
cs
mov
aad
jl
lds
sbb
push
call
subb
dec
clc
icebp
movsl
inc
push
std
cmp
cltd
fidivs
outsb
mov
lea
push
xor
or
or
pop
push
jp
ret
cmpb
loopne
ss
aaa
push
repnz
cmc
push
push
mov
and
sahf
jne
mov
hlt
adc
adc
nop
mov
pop
loope
sbb
pusha
loope
jp
dec
ficoml
jp
push
xor
inc
or
popf
or
sbb
scas
in
and
cmp
lods
jne
out
lds
lcall
rcrb
mov
lea
pop
xchg
jg
hlt
and
enter
inc
stc
mov
xor
out
sahf
mov
fwait
sti
je
repnz
std
and
pop
int3
mov
cmp
dec
sub
sahf
js
sub
ret
je
adc
testb
and
std
test
xchg
aam
mov
subl
popl
icebp
rcl
push
insb
push
lock
cmpsl
push
pop
and
sbb
xchg
or
ljmp
jecxz
jmp
push
pop
fdiv
sbb
jae
shr
rcl
out
jmp
fimull
push
push
cwtl
inc
aas
dec
xor
je
test
sub
insl
add
adc
shrl
movl
sub
cmc
inc
sti
rcrl
je
push
call
add
insb
sbb
pop
ss
pop
xchg
adc
jecxz
xchg
mov
in
mov
pop
inc
in
call
out
pop
mov
pop
or
xor
sub
xchg
sub
cmc
inc
or
xor
out
test
clc
cmp
inc
hlt
lret
xchg
cmp
fmul
in
addb
mov
aad
jns
xchg
mov
outsl
inc
adc
xor
jne
shr
jecxz
ffree
inc
ja
lods
loopne
movsl
test
shll
mov
call
dec
cld
js
mov
cmp
cmp
addr16
int
aam
jle
stc
sub
dec
adc
popa
jle
jl
ja
stos
mov
gs
stc
test
ds
loop
lds
fs
nop
scas
push
pop
pop
jnp
stos
jmp
rclb
lcall
push
sbb
loop
int
sub
sub
dec
mov
in
rcrb
cli
mov
out
data16
fldl
xor
jne
daa
mov
push
repz
xchg
lods
out
sarl
sarb
aaa
mov
es
mov
pop
add
imul
insl
mov
or
xchg
fdivr
fildl
popa
loopne,pn
test
and
cmp
dec
adc
push
xchg
jns
insl
imul
push
mov
jne
aas
xlat
or
gs
mov
inc
stos
inc
sahf
cmc
imul
ds
ret
cmpsb
xchg
test
or
cmp
and
stos
pop
mov
cld
push
pop
ja
jb
jns
out
subb
xor
repz
xchg
subl
sbb
dec
or
jmp
mov
xchg
arpl
xchg
add
jge
pusha
xor
bound
dec
les
cs
fs
jp
pop
add
addr16
jns
push
add
mov
loop
cmp
cltd
aas
sbb
xor
aad
arpl
sub
es
ljmp
test
loope
lret
ds
popa
dec
test
stos
adc
lea
xor
sub
loop
cltd
fsubs
sbb
cmpsb
das
or
inc
xor
xchg
xor
xchg
push
inc
lea
pop
mov
or
xor
subb
xchg
jecxz
insb
sbb
in
je
negl
xchg
call
sbb
test
or
push
mov
mov
sbb
daa
std
push
lret
jne
sbb
mov
aaa
xchg
inc
repz
enter
sub
pop
les
push
mov
test
add
fwait
push
jo
dec
xor
add
out
cwtl
cmp
jg
movsl
push
xlat
mov
and
das
sub
pop
inc
je
mov
movsb
shlb
and
repz
repz
fwait
out
sub
pop
scas
fwait
sahf
mov
pop
int
fsubl
fcoms
pop
dec
mov
ljmp
inc
icebp
hlt
pop
lock
std
testl
add
dec
je
sbb
mov
sub
dec
int3
xorb
mov
dec
lahf
cmp
xchg
and
lods
sbb
xchg
add
jge
dec
xchg
and
adc
inc
add
pop
sbb
cmpb
or
das
mov
ds
inc
cmp
xchg
out
mov
xor
mov
jl
in
sub
paddd
or
cmp
cmc
rcr
mov
adc
subl
enter
dec
push
inc
iret
sarl
es
call
add
pop
and
arpl
fsubrl
out
push
out
lret
jbe
sub
ret
xchg
aam
out
and
testl
pop
mov
sbbb
in
push
je
cmpsl
lret
inc
aaa
mov
test
movsb
jno
lods
ljmp
jg
xchg
and
outsl
stc
inc
jecxz
jb
scas
or
rorl
mov
lret
pop
pop
aad
addr16
imul
ficomps
pop
jmp
loope
jecxz
push
lods
jo
cli
push
cmpsb
or
inc
push
pop
push
fcoml
imul
out
cmp
adc
je
inc
inc
or
or
fldl
cmp
adc
jns
xchg
inc
jbe
xor
lods
cmp
cs
stos
loope
fdivl
sarb
mov
sbb
inc
or
sbb
cmp
cmp
repnz
xchg
jmp
jae
lret
subb
push
test
inc
xchg
jne
xor
mov
shl
les
ret
mov
sbb
test
add
push
inc
aam
add
or
cmp
std
jns
imul
aas
and
std
ror
and
mov
nop
jecxz
push
pop
sbb
push
out
lcall
sbb
sub
push
mov
mov
in
sti
inc
cmp
cs
and
mov
lcall
popf
pop
sbb
in
dec
test
adc
stc
jnp
jo
cwtl
mov
clc
fcoml
mov
scas
push
outsb
xchg
dec
out
inc
std
rcrl
xor
lahf
cld
mov
cmp
add
sub
scas
jecxz
test
clc
mov
mov
pop
inc
dec
mov
rcrb
sub
movsl
nop
push
pushf
xchg
cmp
and
shr
inc
jecxz
pop
sbb
cmp
or
int3
loope
mov
shrl
lods
jno
clc
or
out
and
loopne
faddl
testl
or
dec
jp
cli
ds
fsubl
jnp
ja
pushf
mov
popf
jns
xchg
fists
andb
into
mov
jae
subb
push
je
addr16
push
mov
adc
popa
sub
xor
das
out
inc
mov
out
ret
scas
xchg
lret
cmp
cmpsl
leave
pop
mov
dec
rclb
pushf
and
shrl
xchg
mov
and
push
inc
push
test
ss
and
cmp
mov
push
cwtl
inc
aad
arpl
jne
and
ds
lcall
adc
cmpsl
dec
lods
jbe
divl
pushf
push
sbb
das
cmp
cmp
xchg
test
fsubs
mov
mov
outsl
fidivrl
popf
hlt
addb
ss
addb
jno
jns
loop
ret
xor
and
jmp
loopne
xor
nop
jg
push
ret
xor
sbb
cmc
pop
pop
mov
xchg
in
and
mov
or
pop
or
pop
adc
stc
mov
data16
mov
repnz
cmp
dec
inc
add
into
sbb
and
mov
dec
or
xor
jecxz
dec
insl
popf
dec
mov
repnz
ret
mov
imul
inc
daa
vpshrdvw
mov
mov
loop
cmp
jns
shl
imul
jle
pop
pushf
rorl
iret
fldenv
out
xchg
mov
loopne
leave
lcall
mov
lds
jecxz
stos
addr16
and
sub
pop
je
lahf
or
jns
shlb
subb
pop
jbe
push
mov
das
sbb
xchg
jbe
cltd
lods
adcb
cli
mov
das
xchg
iret
insb
les
dec
pushf
mov
jne
lods
or
xchg
push
pop
push
test
icebp
xchg
dec
aam
xchg
pop
and
or
jno
arpl
mov
call
pop
cmp
mov
je
push
cmpl
test
add
inc
xor
aaa
sbbb
cmpb
inc
bound
test
das
mov
dec
jnp
or
ja
cld
jne
push
aaa
adc
sahf
or
and
push
mov
push
rcr
into
xchg
mov
and
mov
notb
out
or
and
pop
outsl
jmp
mov
sub
test
int
das
shll
and
mov
ret
pushf
push
add
mov
pop
dec
push
add
xor
inc
jns
icebp
and
pop
pushf
std
shll
loop
fsubrp
jp
cmp
mov
jmp
int3
idivl
imul
add
inc
inc
insl
out
iret
mov
aad
xchg
addl
inc
clc
mov
jg
popf
jg
cwtl
test
jae
inc
imul
adcb
dec
pop
lds
icebp
adc
mov
das
movsb
adc
inc
pop
sahf
mov
sub
xchg
arpl
loopne
inc
xchg
push
inc
jmp
add
inc
sub
imul
sbbl
fistps
dec
adc
xor
fsubrs
xor
rcrl
cs
stc
sbb
dec
mov
mov
mov
add
mov
xor
xor
add
mov
imul
cmp
mov
test
std
std
in
in
fs
and
xor
push
shll
jge
fisttpll
sahf
xchg
dec
insb
pop
sub
mov
dec
mov
test
sbb
pop
mov
shr
shll
aam
dec
shlb
adc
lret
or
push
rorl
cmp
mov
push
out
and
xor
push
hlt
test
cmp
addb
cmp
sbb
test
push
sarb
pop
pop
mov
jp
pushl
and
sbb
or
mov
adc
test
iret
das
inc
dec
pop
cmp
outsl
mov
cld
lret
daa
push
cmpsb
adc
or
pop
push
adc
push
pop
push
jecxz
js
push
jle
frstor
jg
mov
or
cli
sub
popf
fildll
shlb
sub
into
stos
cmp
je
outsl
mulw
rclb
mov
out
mov
mov
jae
lea
loopne
mov
or
jmp
lds
xchg
jbe
add
mov
sbb
cmp
push
inc
out
sarb
cs
cwtl
out
cwtl
dec
or
ljmp
pop
lds
or
add
pop
bound
loop
ss
arpl
lret
stc
pop
inc
inc
frstor
dec
jg
ud2
cmp
lret
push
es
popf
leave
cwtl
aad
out
test
leave
insl
sub
sbb
mov
cmp
or
rcrl
nop
jge
lret
ljmp
loop
sbb
sbb
mov
hlt
lahf
xchg
pop
outsb
orl
xchg
adc
push
loopw
jo
cmc
push
shrb
xchg
ret
inc
xchg
adc
add
add
adc
je
cmp
dec
shll
rorl
and
aas
xor
clc
repnz
jae
repz
add
lods
out
inc
jmp
pushf
pushf
fwait
inc
mov
popf
pop
inc
lods
mov
stc
aad
push
scas
imul
xor
stc
dec
and
addr16
idiv
push
inc
dec
push
xor
xlat
sbb
das
dec
enter
adc
push
sub
test
test
cli
inc
mov
pop
test
cmpsl
sbb
stos
lahf
stos
loop
ret
jl
cmp
nop
mov
mov
jge
adc
aam
jl
mov
add
jmp
inc
call
sub
sub
mov
out
test
or
push
dec
and
sub
mov
lahf
cmp
pop
sbb
lods
mov
lods
fwait
mov
dec
and
xor
xchg
mov
xchg
clc
cmpsb
inc
mov
test
lret
adc
xor
out
sub
test
and
jle
push
mov
push
cmp
cmp
cmp
pop
adcl
bound
fisttpll
push
leave
sub
lahf
scas
cmpsb
cmc
cmc
mov
inc
jns
hlt
add
xchg
sub
dec
popa
lea
or
sbb
mov
jno
push
sub
daa
call
sarl
pop
mov
mov
movsb
mov
cld
jl
inc
movaps
and
mov
jne
in
xor
cltd
jo
mov
jl
scas
inc
std
lcall
xchg
movsb
scas
xchg
sbb
jle
dec
and
clc
and
pop
dec
jmp
fldt
out
enter
mov
inc
aas
sbb
inc
and
nop
cmpsl
sti
xlat
add
and
cmp
push
fstpl
cltd
adc
mov
in
test
andb
inc
mov
popa
out
pusha
js
and
and
jg
sub
xchg
lcall
xchg
inc
mov
loopne
inc
mov
mov
sub
fsts
sbb
imul
scas
arpl
lret
test
or
sub
pop
pop
decl
pop
xchg
xor
jo
mov
push
mov
movb
enter
xor
push
stos
lds
fildll
dec
stos
lock
mov
jp
inc
neg
inc
lds
sub
jns
pop
test
xor
xchg
movswl
fisubrs
or
das
pop
and
dec
sbb
jmp
inc
jnp
add
dec
stos
lahf
cmpsl
push
jne
aad
mov
rcr
dec
xor
pusha
cmpsb
mov
inc
jg
test
in
mov
cltd
xlat
sub
and
dec
lds
inc
testl
sbb
and
sbb
cmp
pop
sub
jae
jecxz
call
jle
lods
out
test
ljmp
ret
adc
out
sti
in
subb
jbe
cltd
sahf
lock
cmp
lock
xchg
jmp
jns
psubusb
adc
out
inc
mov
test
mov
loop
push
mov
jmp
xor
scas
fs
inc
dec
push
cmp
imul
xor
mov
xchg
or
jae
jnp
cmp
mov
jo
inc
cmp
xchg
push
dec
call
jmp
jl
mov
inc
add
in
pop
mov
mov
jecxz
xchg
mov
mov
sub
xor
repz
mov
cmp
mov
popa
sbb
addb
scas
ljmp
or
cld
outsl
divl
gs
adc
stc
fsubrl
mov
daa
jecxz
sub
notl
mov
repz
rclb
int
mov
std
nop
jns
push
shrl
fucom
mov
cmp
sub
pusha
bound
push
cmp
enter
sarb
mov
cmp
imul
cld
mov
mov
loopne
sbb
insl
xchg
repnz
mov
aam
lea
nop
push
sti
fwait
pop
mov
or
out
int
adc
jmp
ja
inc
scas
shr
or
inc
dec
jae
xchg
leave
sub
dec
or
mov
inc
loop
add
pop
fisttpll
clc
in
fld
xor
mov
popf
imul
xchg
mov
orl
sbb
sti
mov
pop
les
test
lds
mov
push
or
and
out
cli
cld
out
push
jo
lods
scas
xchg
out
push
out
xchg
push
inc
mov
jns
jmp
imul
sub
setl
jns
add
sti
fyl2x
popa
dec
xchg
ret
dec
ret
sarl
outsb
or
jg
dec
test
adcb
cmp
sbb
cmp
mov
test
sub
ds
shll
mov
neg
or
adc
push
lea
cmpsb
fnsave
test
fiaddl
mov
ret
sbb
xor
ret
inc
insl
arpl
sub
add
punpckhbw
xchg
jmp
test
daa
add
sub
mov
push
aam
or
test
lock
stos
push
or
jns
lret
leave
xor
dec
mov
xor
jecxz
pop
popl
and
sub
mov
dec
sbb
in
pop
mov
jge
jae
fdivl
sbb
mov
pop
jns
add
sub
idivb
mov
pop
pop
aad
adc
cmp
jns
sub
test
sahf
sahf
jbe
cmp
shl
movsb
jbe
pop
jmp
stc
rolb
pop
enter
adc
push
bound
mov
fwait
xor
aam
sbb
icebp
stos
fsubl
mov
push
lret
shlb
lret
push
dec
aad
imul
icebp
inc
mov
xchg
push
aas
inc
cwtl
xchg
pop
jbe
xor
roll
fnstenv
ja
inc
jp
hlt
bound
mov
jb
rcll
fxrstor
and
xchg
movsl
orb
mov
push
mov
mov
mov
ds
gs
lods
sub
pop
adc
arpl
int3
out
test
sub
dec
adc
mov
sbb
pop
into
pop
shrl
jmp
mov
leave
aas
xor
add
test
pop
adc
pop
gs
out
mov
adc
xchg
adc
clc
scas
sub
inc
sub
mov
leave
jnp
xchg
fstpt
stc
popa
xchg
es
insb
iret
pop
fnstsw
pop
out
imul
mov
loop
cmp
call
mov
sub
jge
push
push
lods
in
cmpsl
pop
sub
std
jae
lret
pushf
push
xchg
sub
mov
sahf
je
aad
mov
sub
sbb
jge
loope
adc
jnp
sbb
les
pop
aad
push
das
mov
pop
xlat
jnp
lahf
push
mov
divl
dec
pop
mov
ss
pop
cmp
dec
ja
cmp
mov
and
cmc
jg
faddp
push
xor
xchg
xor
stos
fdivs
lods
jnp
mov
sbb
push
lret
sarl
push
sarb
xor
nop
push
sbb
cmp
adc
mov
mov
stc
movsb
lcall
and
leave
cmpsl
dec
insb
vmread
dec
xchg
push
je
inc
adc
fnstcw
push
int
add
subl
cmpsb
ja
fsubs
shl
cmp
mov
dec
shll
pop
imul
jmp
fsubs
or
cmp
dec
inc
mov
inc
jae
mov
mov
aam
outsb
scas
rcll
jns
push
inc
pushf
adc
iret
test
iret
adc
and
out
push
hlt
ds
xchg
xor
xchg
jae
mov
pop
adc
ds
hlt
jb
sub
test
xor
lea
mov
lahf
out
mov
add
cmovnp
pushf
cmp
push
ds
jp
imul
jb
or
cmp
lret
push
jge
add
mov
lret
ret
inc
arpl
push
hlt
out
sarb
mov
in
cwtl
inc
out
sub
mov
jb
xor
sub
xchg
stc
data16
mov
into
cmc
leave
pop
cmpb
fldcw
cmp
push
mov
leave
dec
push
jmp
xor
roll
lods
add
mov
xlat
mov
stc
xor
jcxz
lahf
sti
sub
pop
scas
test
push
insb
adc
xor
insl
sub
enter
pop
cmpsl
repz
repnz
sbb
mov
ficompl
mov
sbb
lods
mov
xor
xor
jmp
xchg
inc
ja
or
cmp
dec
dec
aaa
or
lret
popa
inc
jp
fistpll
rcr
pop
sbb
cltd
pushf
adc
push
sti
je
das
cmp
sahf
mov
rcrl
inc
jno
adc
aas
sub
sub
xchg
inc
xchg
inc
sbb
fwait
xor
pop
out
lahf
adc
and
mulb
add
mov
push
mov
mov
std
int3
movsb
adc
add
xchg
sub
jge
sub
fadds
dec
or
stc
mov
into
lcall
cli
inc
loope
adc
aam
in
xchg
push
cs
pop
test
mov
pop
ret
xchg
inc
andl
jb
push
mov
dec
cmp
inc
js
pop
jp
ficoms
mov
sub
jb
sbb
stos
adc
fstpt
mov
mov
lahf
jae
clc
pop
mov
cli
movl
jmp
xlat
fiadds
adc
dec
fldenv
jp
mov
leave
sahf
xorb
scas
int3
jb
adcb
mov
mov
aas
pusha
insl
xchg
gs
nop
add
lret
add
xchg
je
shll
dec
pop
xchg
aam
xor
xchg
mov
push
aas
mov
in
lcall
in
fincstp
dec
xchg
or
daa
je
and
pop
xor
call
inc
push
je
ss
push
movsb
addr16
sub
loopne
int
ss
fwait
mov
or
in
out
fwait
mov
faddl
jg
imul
jne
mov
mov
dec
jae
test
adc
inc
das
repnz
and
ds
sub
xor
test
std
movsl
rolb
pop
adc
lret
dec
push
jl
shlb
insl
loop
movb
dec
pop
int
mov
sbb
or
or
shrl
sbb
sub
shll
mov
push
cld
test
stc
dec
aam
sbbl
xchg
adc
out
fists
xchg
push
sbb
andl
or
in
and
or
imulb
sub
jl
mov
outsb
push
jp
or
fs
and
lret
or
cmp
push
int3
fstpl
push
out
pusha
movsl
push
in
cmc
or
push
arpl
iret
aam
push
test
push
or
and
call
out
icebp
out
mov
cmpsb
sbb
xor
pop
mov
add
mov
xchg
cmpsl
or
mov
cmp
cs
cmp
mov
jl
pusha
xchg
shlb
movsb
mov
pop
loopne
ja
ret
shrl
sub
subl
mov
mov
sub
inc
lret
adc
test
ds
pop
filds
cs
iret
add
xchg
jge
or
mov
movsb
jl
cltd
xorb
outsb
rcll
dec
fwait
xchg
dec
addr16
mov
push
repz
data16
xchg
bswap
cmp
ret
pop
add
mov
hlt
push
sti
xor
xchg
lock
push
mov
outsb
insb
enter
xor
test
lcall
lret
dec
nop
mull
dec
enter
inc
jge
aad
mov
or
mulb
xchg
push
pop
add
jl
add
loope
je
adc
aam
inc
lods
push
aas
push
sbbl
shlb
test
mov
lret
mov
mov
and
cwtl
pop
in
sti
repz
jmp
ret
sahf
mov
call
test
mov
nop
movsb
movsb
inc
xor
vaesenc
jge
push
jo
jl
mov
pop
decb
or
xor
das
sub
mov
mov
sbb
xchg
pop
adc
sub
lea
push
fs
fdivp
xchg
pop
dec
xor
inc
loopne
push
arpl
or
or
das
stc
sbb
lcall
xor
xorb
pusha
cmp
or
xor
hlt
pop
dec
movsl
inc
jae
xchg
jge
jo
js
pusha
daa
or
pop
loope
jle
lret
inc
into
inc
mov
cltd
shll
push
fidivl
jnp
pushl
mov
mov
cmc
dec
mov
sub
mov
pop
pop
mov
inc
add
lcall
fucomp
inc
and
xchg
stos
pop
adc
cli
in
imul
in
xchg
lea
jle
je
pop
lret
pop
xchg
es
out
or
lds
ret
cmp
fnstcw
lcall
pop
inc
jmp
sbb
div
int3
lcall
pop
sar
hlt
repnz
aas
das
jecxz
psrad
dec
push
lcall
fwait
lds
data16
nop
ret
xor
ljmp
data16
pop
mov
in
icebp
cmp
mov
fisubs
add
add
ja
lods
pop
mov
sbb
lcall
fwait
mov
dec
push
out
lods
test
loope
adc
jo
xor
xor
sub
sub
pop
inc
xor
jbe
jl
iret
xchg
lods
subb
bound
inc
push
mov
sub
lods
push
xchg
imul
in
and
pop
adc
lods
cmpsl
pop
push
pop
adc
adc
icebp
mov
dec
sbb
sub
jp
das
das
xor
loope
fdivrl
filds
mov
or
mov
sbb
pop
cmp
repnz
in
push
out
jg
imul
sub
lret
arpl
mov
and
shrl
repz
push
jp
in
pop
aas
xlat
cld
mov
arpl
pop
into
cmpb
pop
andl
push
pop
icebp
mov
jno
xchg
jne
push
mov
leave
pushf
mov
push
movsl
dec
pop
addl
jg
add
inc
jg
mov
cmp
and
and
xor
popa
adc
jbe
or
insb
lea
add
add
xchg
push
fmuls
arpl
xlat
cmp
and
pop
push
aam
pushf
fsubr
dec
loop
lods
xor
adc
xlat
ficoml
inc
fwait
sbb
arpl
mov
movsl
inc
inc
xchg
add
xchg
rcl
cmp
sbb
lods
cltd
xchg
dec
or
mov
cmp
and
adc
ret
adc
cwtl
fwait
dec
les
dec
adc
ljmp
inc
and
mov
int3
icebp
pop
mov
enter
cwtl
mov
aam
scas
xor
ljmp
push
lea
outsb
mov
mov
adc
and
mov
std
jb
jb
dec
imul
decb
addr16
or
test
lret
jne
and
cmp
rcr
aas
clc
jge
xchg
sbb
in
loop
mov
test
loop
inc
out
jns,pn
push
mov
ss
dec
push
dec
bound
lcall
lods
dec
int3
xchg
nop
jl
pop
pop
cmpsl
in
inc
test
setb
jle
mov
cmc
sub
jle
in
in
cli
fildl
xor
inc
clc
test
dec
into
jecxz
cmpsl
jl
int
cmpsl
cwtl
sbb
mov
mov
testb
mov
inc
clc
loop
sub
outsb
mov
add
cmp
jmp
test
mov
xchg
mov
gs
movsb
lods
ds
mov
mov
sub
jo
and
push
and
mull
sub
push
sbb
push
push
add
test
xchg
rcrl
cld
cmpsl
fidivs
mov
sbb
ret
cmpsb
pop
test
pop
std
imul
sub
xor
push
loopne
shl
cltd
popa
into
add
lret
or
push
push
mov
lcall
mov
into
js
and
and
andb
fwait
hlt
inc
push
xor
mov
mov
into
xor
add
push
jae
outsl
sbbl
adc
fnsave
xchg
mov
add
pop
cmp
insb
mov
inc
mov
hlt
sub
sahf
jns
movsl
mov
dec
pop
add
stc
push
nop
add
mov
inc
cs
fisttpll
pushw
scas
cmpsb
adc
dec
daa
pop
out
mov
and
fs
push
dec
pop
cld
aam
or
push
push
xchg
mov
mov
sahf
loopne
cli
aad
aaa
mov
xchg
bound
xchg
push
jno
or
and
in
stos
xchg
cmp
call
lods
jae
push
insb
push
sub
test
mov
adc
sbb
repnz
or
loop
fcom
fmull
cmpsl
lret
xor
mov
mov
pop
adc
xchg
cmp
icebp
pop
data16
and
stos
mov
sub
mov
clc
out
or
ja
jecxz
nop
push
lret
fldcw
mov
mov
jb
sub
scas
adc
push
mov
cmpsb
out
xor
out
flds
aad
mov
mov
cmp
xchg
dec
ds
xchg
add
cmp
lods
sub
cs
pop
nopl
inc
or
lahf
xor
aas
lock
or
std
pop
lret
mov
xchg
aad
mov
jg
inc
out
and
push
xorl
jp
add
jo
push
jbe
pop
mov
jne
pop
xchg
lock
add
test
pop
loope
repnz
bound
pop
int3
and
mov
lret
mov
mov
sar
leave
pop
mov
pop
cmc
or
in
mov
dec
movsl
shl
or
shrl
inc
dec
dec
jb
lret
xchg
es
std
jl
inc
add
sub
dec
inc
sbb
pusha
and
add
push
jecxz
sbb
ljmp
pop
dec
neg
sarb
cmc
push
iret
sbb
fwait
adc
add
mov
pop
mov
sbb
mov
push
dec
push
push
lahf
and
clc
call
fstpt
push
sar
es
cwtl
mov
dec
aad
les
repz
mov
jo
push
test
push
sbb
aaa
call
loope
cmp
jo
jle
or
sub
movsb
test
inc
popa
and
xchg
sbb
jb
mov
mov
rcll
fcmovu
xchg
nop
xchg
jp
sahf
jp
or
dec
dec
push
sbb
jge
andb
insl
inc
xchg
mov
xor
jl
mov
movups
adc
cmpb
inc
inc
sub
js
int
hlt
data16
call
fxch
and
ror
xor
mov
cmp
sbb
js
xchg
insl
xchg
xor
cli
nop
jbe
add
cmp
rolb
cmp
xor
aad
or
push
sti
ja
movsb
lcall
bound
xor
sti
call
lods
mov
scas
mov
cmp
fists
sti
cmp
jo
loop
push
pushf
aaa
cmp
cmp
mov
daa
pop
pop
cmp
adc
cmpsb
je
push
mov
outsl
cli
inc
mov
pop
lods
sub
cmp
into
inc
arpl
pusha
adc
mov
fxch
lret
or
ds
mov
xchg
cs
inc
lcall
mov
xchg
pop
ret
add
sbb
sti
mov
push
mov
sub
fiaddl
push
pop
adc
sbb
and
repnz
mov
xchg
aaa
mov
data16
add
repz
scas
mov
dec
fcomp
adc
or
jle
mov
pop
repnz
test
call
push
add
inc
int3
cmp
or
push
and
push
add
add
popf
lea
sub
icebp
push
xorl
inc
int3
icebp
movsl
roll
push
push
lods
cld
xchg
les
cmp
out
subl
mov
dec
das
loopne
or
cltd
fsubr
test
in
repnz
data16
dec
outsl
cmc
orl
mov
loope
fucomp
mov
jnp
sub
jne
and
sub
out
mov
mov
repz
rorb
sti
scas
test
xor
xchg
mov
into
fwait
xchg
int
mov
stos
mov
sbb
mov
fidivs
add
mov
pop
les
int3
sbbl
sbb
pop
popf
les
xchg
rcrb
adc
sti
aad
das
adc
ja
orb
insb
jp
jbe
lret
sub
leave
int3
call
out
movsl
xchg
ds
mov
popf
fdiv
xor
and
add
mov
lock
es
push
pusha
push
fwait
call
push
cld
dec
push
imul
inc
lea
fs
jg
mov
pushf
mov
ret
lcall
shlb
add
cs
sbb
xchg
sub
jo
orb
mov
aaa
jo
pushf
lret
push
lods
and
idivl
add
inc
jnp
mov
mov
pop
mov
mov
jg
cli
sbb
pop
bound
cwtl
inc
shrl
ja
in
xchg
dec
mov
sbb
iret
test
pop
xchg
adc
addl
add
pop
dec
and
enter
sbb
arpl
nop
xchg
pop
mov
arpl
rclb
daa
ficoml
push
push
mov
push
jne
fsubrl
test
ret
sbb
test
or
cmp
mov
pop
sub
cmpsb
pop
xchg
mov
aas
and
jle
xor
pop
stc
pop
cmp
inc
xchg
adc
mov
push
mov
xchg
add
jbe
test
popa
ljmp
daa
jbe
out
mov
jne
adc
sar
sub
jmp
sub
sub
add
or
push
lahf
xchg
cmpsl
aam
daa
fiaddl
das
mov
adc
mov
pop
mov
lods
xor
push
inc
and
ret
cld
mov
mov
out
inc
out
and
pop
pushf
std
dec
push
roll
cmp
xchg
ss
mov
sbb
les
insl
mov
dec
xor
mov
lds
jnp
mov
adc
aaa
scas
mov
and
bound
cltd
jl
test
and
icebp
dec
sbb
loope
je
push
fisubl
xchg
inc
rcrb
decl
std
aad
pushf
and
gs
sub
gs
sbb
cmp
and
test
pop
ljmp
pop
hlt
add
test
andl
out
lea
jecxz
mov
pusha
cld
cmc
xlat
lret
test
mov
fisttpl
nop
cli
inc
aas
or
jl
cmp
adcl
daa
leave
dec
jmp
pushf
call
sbb
out
pop
and
or
xchg
shrb
jbe
cmp
dec
adc
movsl
xchg
jno
jg
xchg
enter
push
mov
fsincos
push
xorb
rorl
adc
fildl
rep
mov
inc
orl
adc
outsl
push
jb
pusha
hlt
fdivl
push
notb
pop
por
cmp
sbb
mov
jo
pop
mov
xchg
imul
data16
xor
arpl
js
jae
jecxz
mov
mov
test
and
shrl
and
sbb
or
push
leave
xor
jno
lds
call
pushf
push
jnp
into
insl
adc
sbb
sarb
jns
mov
subb
jb
ja
cmc
mov
mov
add
jge
leave
ret
fucom
lcall
xor
div
sbbb
in
xchg
in
jl
cld
test
jb
xchg
inc
sbb
jmp
push
test
cmp
sbb
jle
scas
maxps
idivl
gs
mov
push
add
clc
pop
stos
lea
iret
mov
out
dec
outsb
les
pop
inc
pop
mov
dec
mov
mov
jl
cmpsb
ret
cs
dec
and
cmpsb
add
pushf
bound
mov
ljmp
pop
sub
jno
lock
sub
arpl
das
xor
sahf
sbb
stos
cmp
jb
arpl
pop
testl
pop
cld
inc
mulb
or
inc
or
sbb
js
add
dec
fsubrl
insl
clc
mov
iret
or
aad
jno
inc
pop
ds
in
repnz
les
push
fnstenv
mov
mov
mov
mov
daa
mulb
push
dec
rolb
mov
cmc
jae
mov
popa
mov
leave
bound
xchg
dec
in
push
ret
adc
mov
lock
push
and
add
repnz
cld
jmp
pushf
sahf
enter
pop
jo
push
sbb
aad
sbb
imul
lahf
adc
and
sbb
lahf
dec
ljmp
dec
insb
lcall
insb
add
aad
cmpsb
scas
xchg
divl
std
gs
arpl
add
mov
imull
arpl
insb
mov
pop
loope
es
inc
in
popf
push
lret
jb
dec
je
fsts
addr16
jno
pop
or
shlb
sub
or
orb
xacquire
ret
mov
loopne
push
insl
sbb
fistl
push
xor
js
mov
push
aas
and
add
fwait
cmc
rcr
aad
sbb
xchg
adc
in
inc
pop
sub
test
adc
xchg
xchg
fsts
imul
lcall
frstor
pop
pop
dec
cltd
frstor
or
lock
lea
pop
pop
push
mov
mov
add
test
add
jg
pop
cmp
adc
aas
mov
lret
sub
sarl
dec
or
and
jp
inc
inc
push
hlt
aaa
inc
sub
lods
mov
jle
cli
fs
lret
push
xchg
xchg
sub
or
subw
iret
mov
dec
xor
pop
repnz
das
pop
dec
aad
mov
push
and
cltd
test
shrb
inc
es
orl
imul
daa
aas
int3
pop
jmp
sti
scas
test
repnz
xchg
js
xor
jb
arpl
xor
pop
pop
pusha
icebp
and
fstl
arpl
in
add
cmp
xor
ja
out
out
push
pop
cmpl
cmp
cs
cmpl
cli
insb
pop
push
xor
add
icebp
loop
and
stc
mov
add
imulb
fdivrs
ss
push
mov
sahf
int
and
or
mov
shrb
sbb
pop
fidivs
movsb
nop
data16
divl
push
lods
icebp
enter
lret
add
stos
xchg
xor
int
push
push
jle
push
ds
jne
loope
pop
xchg
add
aad
mov
push
pop
mov
cmp
into
mov
xchg
push
or
pop
dec
movsb
sbb
mov
fadds
jl
push
jbe
inc
push
xor
inc
push
int
mov
lock
lahf
cs
cld
out
jb
mov
mov
lock
fimull
mov
mov
sbb
cmp
test
push
rcr
aaa
les
push
sar
push
ja
shlb
stos
lock
icebp
jnp
ss
in
or
and
leave
push
dec
mov
mov
icebp
lahf
popf
mov
call
mov
mov
adc
pop
nop
mov
mov
mov
xchg
sarb
aaa
mov
mov
push
gs
fnstsw
jge
xchg
aas
mov
data16
ljmp
mov
dec
movsb
arpl
adc
add
test
je
fs
add
adc
add
mov
add
insl
in
daa
inc
cmp
dec
jns
push
mov
cs
fcompl
leave
and
add
cltd
or
pop
sbb
insl
sti
pop
lret
add
aas
push
jns
mov
js
fldl
fistpl
add
push
bound
pop
jg
adc
pop
sbb
cwtl
inc
movsb
and
cwtl
mov
mov
dec
push
das
daa
dec
sub
jne
mov
cmp
fs
xchg
mov
lods
cmp
jmp
mov
adc
inc
daa
sub
imul
cs
pop
xchg
jl
test
sub
fcoml
push
cmp
icebp
inc
insl
xor
push
push
decb
js
sub
mov
aam
ret
ljmp
sbb
cmp
adc
push
cmp
insb
test
in
inc
xor
push
shrb
lods
inc
idiv
inc
xchg
cmc
mov
or
pop
movsb
pop
mov
inc
dec
mov
jg
mov
xor
sub
mov
test
jmp
into
jp
es
sbb
into
jg
cmp
fistl
jp
push
int
int3
push
mov
cmp
lret
mov
sub
xor
sahf
push
cmpb
mov
stos
repnz
mov
setnp
push
iret
stc
lcall
in
cmpsb
inc
xchg
mov
orl
into
cmpsb
out
fmuls
mov
fst
jbe
mov
cmp
xor
push
adc
inc
nop
pushf
sti
xchg
xor
popa
cmp
cltd
mov
gs
lods
mov
mov
xchg
cmp
outsl
xchg
jg
test
pop
xor
xor
in
mov
test
push
inc
mov
pop
inc
inc
and
jae
hlt
cmp
sbb
xchg
les
xchg
mov
dec
push
in
push
fwait
sbb
ljmp
scas
into
mov
cli
mov
add
jge
outsb
push
ret
inc
jns
pop
arpl
xchg
adcb
jns
aaa
repz
rcll
and
sub
mov
mov
sbb
dec
mov
iret
jg
xchg
mulb
aad
jg
xor
mov
inc
adc
push
mov
push
jecxz
int
jmp
mov
or
je
jl
data16
mov
and
lock
aaa
mov
jle
sub
sbb
insl
push
fsubrs
mov
ret
xchg
sub
fsubrl
outsb
and
mov
je
push
mov
mov
lea
xor
sub
jmp
in
or
sub
push
enter
fldenv
jo
pop
and
jo
insl
fisubs
jle
adc
inc
xchg
adcl
push
int3
lods
xchg
xchg
imulb
ss
pop
sbb
and
jecxz
frstor
stos
in
cld
pop
xor
nop
xchg
iret
push
mov
mov
fcompl
es
insb
xlat
adc
cmp
adc
jbe
dec
xchg
sub
xchg
out
subl
dec
cmpsl
or
push
icebp
push
out
in
ds
mov
cmc
inc
andl
dec
iret
inc
and
orb
leave
jmp
out
pop
pop
call
ljmp
sbb
lret
jmp
outsb
lahf
inc
gs
xor
pusha
sub
in
mov
sbb
ljmp
sarb
ret
addr16
scas
inc
loop
mov
sbb
gs
and
loopne
mov
dec
jle
cld
xor
mov
xorb
or
scas
sahf
mov
mov
ret
xor
in
jb
outsl
int
sbb
and
push
add
inc
xor
movsb
mov
or
lds
test
pop
cmp
inc
sbb
int
lahf
pop
mov
or
test
subb
mov
push
fsubrl
cmp
adc
and
stc
inc
mov
aaa
sbb
inc
nop
pop
dec
fildl
lea
pushf
ja
loop
mov
and
lods
add
test
ret
out
in
rclb
imulb
mov
in
or
sbb
scas
imul
lcall
sbb
or
mov
xchg
icebp
rcll
lahf
aaa
leave
xchg
icebp
pop
pop
fbstp
neg
pop
mov
push
out
fmull
movsb
xchg
cs
clc
lretw
mov
xchg
aas
outsb
sbb
mov
push
push
dec
sti
cwtl
pop
mov
jmp
add
inc
mov
mov
daa
pusha
pop
jae
lods
sbb
push
ja
fldcw
cltd
nop
or
mov
dec
jl
arpl
mov
jne
xchg
sahf
jbe
cs
add
and
xor
lea
es
inc
leave
ja
or
mov
sub
mov
repnz
aad
jle
shll
sbb
xchg
pop
xor
inc
xor
out
xlat
popf
adc
dec
jae
rcr
push
dec
xor
mov
fsubrs
jns
cmpsl
lahf
inc
xchg
aad
std
inc
in
int
popa
repnz
push
repnz
dec
pop
add
dec
loop
repz
hlt
jno
cmpsl
mov
sub
xorb
loope
aam
pop
stc
fidivrs
aas
dec
out
and
repnz
dec
test
dec
mov
and
and
xor
push
jge
lahf
mov
push
jne
lods
sbb
mov
bound
push
sti
cmp
lret
call
inc
inc
ss
jmp
and
sbb
pop
adc
fisttps
mov
pop
jmp
sbb
adc
lahf
push
incl
mov
lret
mov
xchg
dec
sub
jge
mov
inc
jno
xor
jbe
lret
pop
daa
cmpl
inc
nop
testl
pushf
push
xchg
loop
aad
xor
xor
js
movsl
out
sbb
call
popa
paddsb
clc
insb
movsb
sbbb
jnp
notb
nop
into
orl
movsb
mov
push
nop
xchg
add
int3
inc
mov
roll
in
jns
cwtl
cltd
lods
jbe
cmp
mov
jg
jo
add
jmp
sbb
or
cwtl
push
insl
or
adcb
jl
jle
or
xchg
cmc
pop
aad
xor
scas
and
addr16
ficoml
or
dec
ret
xor
mov
in
flds
and
inc
dec
push
and
and
mov
sbb
lods
insl
add
lods
push
xchg
movsl
fs
jp
arpl
cmp
adc
sub
daa
repnz
out
iret
pusha
cmpsb
sub
aaa
dec
iret
leave
pusha
rclb
stc
jp
jmp
in
arpl
je
testl
inc
andl
enter
sbb
pushf
cli
push
into
or
fistpl
mov
das
mov
testb
loop
mov
std
test
push
push
dec
ljmp
pushf
movl
jg
xlat
fisttps
push
dec
sbb
add
xor
adc
ret
pop
adc
push
addr16
cmpsb
int
nopl
inc
div
adc
and
jecxz
test
add
pop
sbb
xor
add
mov
xor
scas
or
adc
daa
mov
xchg
jecxz
or
adc
loopne
mov
push
or
test
mov
sbb
and
imul
cmpsb
mov
stos
sub
out
mov
dec
inc
adc
fbld
gs
jns
add
pop
loop
push
popa
mov
loopne
jbe
mov
fs
lret
int3
inc
jl
stc
fisubrs
mov
aam
jns
mov
cld
cmp
out
scas
cltd
sarl
lret
lods
and
out
mov
adc
adc
cltd
mov
inc
adc
jbe
jmp
pop
out
or
les
dec
jge
and
lods
xchg
xchg
cmp
xlat
mov
and
add
add
into
fstpt
in
lock
dec
insl
ror
test
or
lods
in
xor
mov
imul
xchg
or
aaa
mov
adc
jmp
and
loop
popf
mov
jp
ss
fcomp
inc
lahf
mov
mov
dec
add
mov
jg
cmc
mov
shlb
ds
lcall
clc
mov
test
mov
push
cli
sbbb
imul
adc
sarb
lahf
mov
dec
cmp
sub
mov
xor
mov
incl
sub
push
cmp
ja
xor
mov
popa
push
jne
lock
mov
pop
mov
adc
add
adc
imul
sti
fisttps
test
mov
ret
pop
testb
je
mov
xlat
mov
sub
mov
push
jns
pop
sbb
xchg
ja
insl
xchg
test
xchg
pop
adc
out
push
mov
jae
inc
out
idivl
mov
or
xor
jmp
mov
ss
inc
mov
sahf
insl
cs
out
int3
inc
cli
inc
add
hlt
adc
sub
test
sub
test
pslld
cmp
sbb
pop
imull
and
xchg
inc
mov
ss
pop
scas
mov
cmp
lock
mov
sub
sbb
sub
fistpll
push
cmpsl
jo
enter
push
cmp
mov
add
xchg
mov
mov
es
movsb
jmp
inc
mov
mov
lods
roll
lods
jl
sbb
push
fidivrs
xlat
xchg
sbb
das
mov
lods
lods
mulb
sub
stos
rcll
fdivl
jp
xor
lret
or
imul
cmp
mov
cmp
montmul
cmpsb
add
lahf
jmp
xlat
nopl
cmp
cmp
cmpsb
xchg
xchg
pop
mov
mov
pop
daa
jnp
jno
loop
notb
and
js
pop
add
dec
rcr
sbb
lods
icebp
sub
cmp
inc
add
cld
call
cmp
stos
adc
fwait
clc
dec
stos
cmp
mov
outsb
cmp
mov
cmp
and
jne
popl
jge
mov
decb
fisttpll
xchg
xor
jns
push
xchg
dec
sub
sub
cmp
jb
in
leave
dec
fwait
loopne
or
inc
call
pusha
inc
out
xchg
push
in
mov
jo
cs
cli
push
aas
imul
push
xlat
icebp
cmpsl
pop
sahf
sub
lods
sub
pop
push
pusha
js
cltd
mov
adc
push
jge
add
mov
mov
nop
push
aam
sbb
inc
push
sub
and
pushf
inc
arpl
test
and
add
pop
cmp
xor
in
xor
dec
push
test
pushf
fistpl
add
ffreep
and
mov
sbb
fidivl
rcl
rcrl
adc
loopne
in
sbbb
adc
cwtl
pop
and
push
andb
and
and
xchg
not
js
loope
scas
repnz
jmp
mov
rorb
lahf
in
test
popa
xchg
pop
lock
jmp
mov
cmpsb
cli
int3
cmpsl
mov
mov
xor
ficomps
mov
cmp
mov
sbb
jge
cmpsb
mov
daa
mov
pop
jg
adc
adc
repz
test
sbb
pop
les
mov
sbb
insl
adc
lds
cld
xchg
fcom
inc
push
testb
clc
jge
incb
imul
jns
je
pop
mov
xor
loope
and
dec
movsb
inc
clc
into
jl
clc
out
mov
cs
js
jno
jmp
adc
arpl
xchg
and
jp
cmp
pop
dec
cmpsl
cltd
loop
xchg
cmc
push
lea
jl
daa
mov
add
or
mov
scas
dec
add
fbstp
xor
mov
test
inc
pop
into
fs
mov
cmp
push
fistpll
cmp
xchg
cmp
add
jno
jmp
push
lock
jae
and
xor
mov
xchg
lods
shrl
push
jno
xor
and
shll
or
insb
sahf
mov
std
lods
fisubrl
pop
mov
mov
repz
pop
adc
stos
pop
inc
in
cmpsb
mov
sub
lods
scas
push
pop
fbstp
pop
jg
je
pop
mov
mov
xchg
sbb
fstl
xor
lret
sub
popa
js
jg
inc
push
ds
sbb
scas
jp
loope
bound
outsb
xchg
pop
xchg
mov
dec
and
jae
pop
push
cmp
imul
push
cmc
xchg
cmp
jge
cmp
push
mov
dec
jmp
das
adc
xchg
in
sar
adc
popa
mov
cmpsb
xchg
push
mov
and
lret
fdivl
sbb
lret
pop
mov
cltd
out
xchg
shr
je
cmc
add
and
aad
into
and
mov
test
jl
ss
sbb
pop
test
sbb
or
dec
in
rorb
sub
pop
mov
daa
xlat
xchg
xor
lcall
mov
cltd
xchg
gs
cmpsl
std
shrb
repz
ret
push
and
mov
into
and
shlb
ds
or
inc
aam
mov
in
imul
sbb
sub
out
movsb
sub
push
jmp
clc
jb
je
scas
std
paddusb
jb
and
fdivrs
adc
lret
in
stos
cmp
mov
cld
loop
outsb
mov
pushf
aaa
bound
pop
fistl
cmp
rorl
jae
and
pshufw
outsb
clc
test
adc
push
fisttpll
pop
inc
jecxz
fidivl
testb
and
stos
lea
push
out
lahf
mov
inc
mov
add
xchg
mov
inc
pop
popa
sbb
mov
int
pop
jne,pt
loopne
dec
sub
or
and
repz
hlt
sub
rolb
cwtl
push
or
loop
jmp
mov
test
dec
ret
cs
cmc
mov
xchg
daa
scas
jno
add
mov
xchg
mov
xchg
gs
fisttpl
lahf
pop
stos
jge
out
lret
pminub
xchg
xor
insl
fnsave
nop
add
xchg
cld
adc
fucom
push
in
xchg
or
cwtl
orl
repnz
frstor
push
hlt
inc
sub
adc
mov
fs
mov
addr16
pusha
je
dec
jbe
lret
jae
and
mov
pop
pop
inc
dec
lods
inc
mov
fcoms
jp
out
stos
mov
popa
or
sbb
mov
int
mov
push
dec
popf
jecxz
dec
sbb
shrb
icebp
inc
lds
scas
clc
jmp
or
lock
push
pusha
imul
js
sub
fbld
push
arpl
lcall
fwait
test
imul
mov
pusha
or
dec
lcall
push
dec
leave
sar
sub
fnstenv
js
in
xchg
js
loope
jmp
pop
repz
repz
add
imul
mov
sahf
cltd
jmp
jne
test
xchg
outsb
jae
stos
loope
inc
xchg
lret
mov
mov
fnstcw
test
inc
das
rcr
sub
inc
cltd
xchg
lret
sub
pushf
or
nop
ds
mov
gs
dec
stc
or
xor
cmp
in
aad
flds
push
loopne
push
pop
ja
jb
repnz
mov
add
mov
and
cmpsb
insl
lahf
jp
pop
lods
scas
or
mov
mov
mov
jo
add
and
and
fbstp
inc
pop
stc
rolb
stc
cmpsb
icebp
xchg
rorl
mov
lret
push
ja
loop
test
push
rclb
and
ret
mov
push
ret
ret
xchg
lods
lea
imul
pushf
cmp
imul
add
adc
icebp
dec
into
les
stos
mov
jl
add
xor
mov
or
enter
je
dec
xchg
mov
push
cmpsb
outsb
inc
push
fnstcw
leave
mov
jmp
xchg
aam
andl
je
xchg
mov
cmp
lock
popa
fimull
cli
inc
mov
cmp
movsl
aaa
test
or
in
xor
gs
mov
pushf
mov
sahf
and
aad
add
sub
cmp
fs
mov
cwtl
and
or
pop
jg
mov
test
pop
inc
xor
pop
orb
sbb
sbbl
mov
add
push
mov
mov
sbbl
arpl
mov
sub
loope
and
lahf
pop
fs
aam
and
scas
sti
out
mov
cmc
xchg
test
hlt
enter
pop
mov
inc
push
lret
jb
jns
push
ret
mov
mov
in
jge
pandn
push
call
rcll
cmovs
daa
pop
mov
ss
jge
jno
push
hlt
ja
pop
test
leave
rol
fsubrl
push
call
leave
enter
xorl
mov
lods
outsl
pop
xor
jmp
icebp
mov
stos
dec
cmc
cmpsb
add
leave
jae
mov
clc
imul
int
pop
pop
xlat
push
add
mov
cmpsl
pop
fcomp
mov
sub
or
and
push
out
insl
push
and
sub
push
insl
cwtl
sbb
ljmp
mov
ficoms
xor
pop
adc
jle
mov
adc
cmc
xor
in
lahf
insl
xchg
sub
sub
mov
ffree
outsb
mov
out
arpl
loopne
fwait
xor
jg
or
sub
add
push
sbb
inc
shll
mov
mov
pop
adc
stos
pushf
pusha
clc
mov
add
gs
add
or
jmp
in
int
aaa
in
xlat
inc
push
or
jle
pusha
in
jae
and
cld
sub
es
mov
sub
adc
mov
clc
pushf
cwtd
frstor
xchg
dec
xor
xor
pop
aad
adc
add
lock
lock
cmp
add
mov
sub
popf
mov
mov
jmp
push
mov
ds
lock
dec
lret
mov
jle
jle
in
fs
add
inc
xchg
insl
cmp
inc
ret
imul
inc
daa
lock
leave
xor
and
mov
sbb
push
icebp
adc
in
adc
rcrl
rcll
orl
fwait
xchg
pop
jb
cs
add
add
fisttps
subb
pop
mov
ret
lcall
imul
inc
sub
mov
push
mov
mov
icebp
addr16
cli
sub
jns
sbb
icebp
popa
or
ret
mov
inc
ds
jns
add
jae
pop
and
xchg
inc
aam
push
rcrb
and
inc
pop
mov
add
sahf
dec
xor
xor
insb
add
mov
xor
imul
out
in
mov
dec
call
push
sahf
imul
add
push
mov
mov
pop
push
insl
rolb
jno
cmc
adc
movsl
mov
add
js
cmp
push
inc
hlt
dec
cmpsl
push
sub
push
cmp
jg
adc
mov
mov
inc
rdpmc
fisubl
add
insb
push
cwtl
out
aam
clc
pop
sbb
popa
rcl
popa
loopne
add
in
repnz
cmc
add
sbb
add
aaa
jp
in
adc
in
inc
ja
mov
adcl
xchg
insb
mov
pop
out
inc
xor
mov
in
xor
inc
insb
shl
cmp
mov
je
jp
lods
adc
or
jp
jle
adc
ret
out
pop
xchg
xor
pop
into
fisttps
mov
rclb
lret
bound
push
push
icebp
mov
mov
jo
pop
lea
hlt
sbb
aas
imul
pop
xchg
sti
xor
addr16
mov
sbb
imul
pop
mov
or
cltd
mov
popf
mov
adc
and
dec
mov
movsb
cmc
call
in
sub
out
cmp
or
dec
and
or
push
arpl
cmp
jp
gs
test
sahf
adc
adc
adc
test
xchg
xor
xor
push
rorb
lock
mov
sub
xchg
ja
outsl
lock
imul
xor
mov
sbb
jae
mov
imulb
addl
and
jl
rcll
add
cmp
mov
in
push
cmp
jnp
outsb
xchg
adc
lods
dec
mov
pop
jo
out
add
outsb
cltd
pop
xchg
cmpsl
sbb
inc
pop
dec
orl
mov
imul
cmp
daa
js
cmp
jnp
adc
fwait
mov
mov
jl
push
xchg
pusha
cmp
sub
mov
pop
adc
ja
cli
pop
and
clc
mov
sub
ret
std
mov
push
xchg
test
push
xlat
iret
test
jae
nop
xor
daa
xchg
dec
xchg
orl
cs
or
xchg
xchg
mov
adc
xchg
lds
cs
sbb
sub
mov
mov
ret
out
fucom
add
test
pop
outsb
xor
xor
or
dec
jne
lods
popa
or
fidivs
testl
and
arpl
ret
jb
cs
ljmp
andl
pop
shll
xchg
adc
dec
adc
cmp
inc
in
adc
xchg
clc
iret
cld
push
jbe
dec
lret
in
jecxz
add
push
in
ja
mov
xchg
dec
jns
sub
dec
pop
push
sbb
int
sarl
sub
cmp
jns
lcall
pop
int
es
jnp
or
adc
rorl
mov
out
mov
imul
jg
mov
mov
jl
subl
sbb
jp
push
xchg
fs
mov
jne
js
pop
mov
aas
stos
push
adc
mov
cmp
jo
xchg
mov
dec
out
pop
mov
sbb
mov
dec
xchg
bswap
subb
jb
es
fdivrp
sub
pop
pushl
or
or
jecxz
add
shr
jmp
dec
in
aaa
repnz
cmpsb
ss
inc
popa
into
hlt
xor
sub
andl
test
out
in
fimull
sub
sarb
clc
pushf
pop
aaa
mov
sub
pusha
imul
mov
test
inc
xchg
aad
sub
cld
cli
aad
pop
pop
popl
dec
and
out
xchg
push
push
mov
lods
adcb
jmp
xor
dec
sbb
hlt
rcrl
in
pop
fcompl
mov
aam
mov
mov
pop
into
scas
adc
arpl
stos
fisubs
int
mov
mov
mov
mov
push
nop
add
mov
adc
ret
insb
adc
push
fnstcw
pusha
pop
jmp
xor
pushf
out
sbb
pushf
addl
das
in
xor
or
xor
dec
loopne
fiaddl
roll
jae
cmc
push
leave
imul
adc
insb
leave
pop
into
mov
lea
inc
jmp
or
mov
dec
add
sbbb
outsl
js
dec
aaa
sarl
dec
std
mov
ja
shl
and
jmp
sbb
mov
and
roll
xor
shrl
cmpsb
sti
and
and
mov
ljmp
jecxz
lea
sti
ret
cli
ja
cli
sub
lds
mov
lcall
loop
jne
dec
xchg
loop
shld
push
cs
in
ret
push
enter
sahf
inc
in
cli
icebp
lock
add
scas
cmp
pushf
and
push
pop
push
push
sub
lret
addb
fdivs
add
xchg
mov
jb
cwtl
out
fcmovnb
mov
cmp
xchg
rclb
hlt
loopne
test
mov
in
ljmp
popf
movl
cmc
mov
sbb
ret
mov
push
adc
lcall
sbb
out
push
subl
push
sub
out
jne
stc
pusha
push
icebp
pop
xor
xchg
dec
dec
mov
daa
jns
test
mov
ja
sub
jmp
cltd
push
shrl
enter
add
or
dec
and
repnz
adc
nop
pop
inc
gs
outsl
mov
xchg
add
imul
push
adc
adc
test
scas
jmp
mov
es
dec
enter
rcrl
push
icebp
push
mov
cmpsl
mov
movsl
jl
jnp
xor
and
xchg
cmp
mov
dec
pop
inc
rcrl
out
sub
clc
pop
incb
fcompl
add
xlat
push
mov
pop
mov
stos
mov
out
sbb
outsb
sub
fscale
decl
es
das
add
jb
xchg
xchg
add
jge
lahf
inc
dec
dec
roll
mov
nop
add
push
cmp
imul
xor
cmp
pop
scas
sti
cmp
xor
test
mov
or
cmp
loopne
mov
xchg
pop
in
scas
push
lock
sbb
mov
jge
pop
jl
pusha
adc
pop
cmp
or
jno
stos
ret
sbb
add
pop
inc
comiss
je
in
inc
or
push
sub
push
dec
pop
clc
adc
sahf
mov
ret
inc
aas
sub
jbe
repz
mov
xchg
rcl
sbb
orb
adc
cltd
in
js
adc
add
jno
and
xchg
dec
scas
pop
in
cli
push
nop
pop
out
xchg
adc
cs
in
fmul
lahf
scas
cmp
movsb
or
cli
jmp
cmp
cmp
ds
and
adc
cmpsl
dec
nop
imul
je
popf
inc
xchg
xchg
jnp
mov
aas
xchg
pop
jo
loope
lods
int
mov
ss
push
popa
test
pop
cmp
mov
icebp
loope
cmp
lahf
cmp
jl
pushf
aad
mov
push
cmp
xor
ret
insl
fwait
iret
xor
lea
mov
cmp
or
or
cmc
shll
stos
adc
in
sbb
loop
lahf
cmpsb
popf
out
repnz
lret
adc
fidivs
ss
adc
jns
xor
sbb
mov
xlat
mov
in
mov
push
jl
pushf
sbb
das
add
sbbb
sub
fcompl
movsl
or
add
adcb
mov
jns
pushl
inc
insb
std
adc
dec
sbb
lret
enter
lcall
dec
adc
stos
push
jmp
test
in
inc
sub
cmp
lods
in
test
mov
cltd
aad
or
imul
mov
pop
sbb
cli
xor
mov
xorb
mov
sahf
jne
mov
repz
lds
icebp
jmp
mov
sub
push
mov
fwait
adc
mov
mov
inc
push
lods
outsb
mov
xchg
jge
dec
cwtl
jo
dec
jmp
lcall
sarl
xchg
mov
popl
push
dec
xor
inc
cmc
cmp
sarl
add
xchg
clc
stc
or
xchg
cmpb
mov
idiv
leave
ja
xor
adc
stc
dec
clc
dec
fwait
mov
gs
jno
cmpsl
lea
push
std
lods
inc
lds
std
or
das
sbbb
pop
mov
xchg
mov
adc
mov
js
hlt
dec
aad
inc
push
insb
out
xchg
pop
push
inc
and
jbe
sub
push
jg
mov
add
jg
push
inc
loop
repz
ss
adc
in
push
jne
dec
ds
clc
movsl
test
out
push
push
mov
dec
aas
roll
dec
cmp
and
and
cmp
sti
pop
sahf
dec
or
out
inc
sbb
fwait
pushf
mov
push
pop
pop
scas
lods
or
cs
fs
inc
cli
arpl
xchg
mov
mov
pop
data16
dec
lret
jle
and
mov
lret
jl
adcb
nop
cmp
loope
pop
and
sub
pop
dec
fs
pop
js
cmp
dec
jnp
xor
add
bound
fistpl
adc
sbb
je
movsl
imul
outsl
cmp
push
jmp
nop
dec
in
xchg
fwait
lcall
pop
xchg
mov
jne
int
or
fnsave
inc
incl
sub
add
adc
or
xchg
pop
mov
loopne
add
stos
rcl
shrl
adc
sbb
out
test
les
add
dec
mov
adc
inc
dec
and
push
inc
mov
xchg
pop
lock
add
pop
enter
jnp
cmc
xchg
daa
cmpb
mov
sbb
jbe
pop
fsub
int
dec
pop
clc
xor
jno
icebp
push
mov
xor
cmp
lahf
jl
pop
adc
aaa
xchg
imul
daa
push
ss
mov
mov
pop
popf
xchg
sbb
push
pop
outsl
enter
bound
aam
jns
rclb
leave
sub
dec
jg
popf
cli
xchg
rcr
addb
dec
aaa
dec
jnp
je
int3
dec
mov
cmp
loop
fstpl
push
jo
insl
add
mov
push
ret
popf
jg
fld
scas
jo
or
rcrb
sbb
add
sbb
sbb
cld
leave
test
and
sbb
movb
sub
mov
ficoms
add
ja
jbe
test
fistpll
sbb
cli
iret
jge
pop
icebp
dec
daa
cli
mov
sbb
cmp
add
insl
push
gs
mov
mov
popa
movsl
aad
sti
das
adc
test
add
or
lock
sbb
ret
cmpsl
test
lret
movsb
out
adcl
cmp
popf
pusha
rol
push
and
aam
ja
xchg
adc
xchg
lahf
pop
jb
pop
add
sub
arpl
add
loopne
add
jecxz
out
ja
mov
jle
adc
pop
enter
add
dec
es
mov
xlat
js
stc
test
cmp
cwtl
sub
xchg
js
in
lock
cmp
sub
sbb
fisubrs
in
xlat
and
push
adc
xchg
jecxz
inc
xchg
sarb
or
sarl
out
mov
xor
les
out
ret
jb
into
flds
lret
shrl
ja
dec
jb
xor
pop
nop
adc
fmull
adc
adc
lods
inc
repnz
jno
sub
mov
mov
cmp
popf
mov
arpl
sbb
xchg
ja
fisttps
add
gs
sbb
jo
push
pushl
ja
push
xor
xlat
in
ljmp
sbb
lcall
fstps
cld
mov
mov
jge
aaa
dec
and
add
faddl
hlt
pop
mov
mov
mov
add
lahf
mov
scas
gs
mov
mov
xchg
lret
outsb
or
mov
fdivs
and
xor
es
aas
push
pushf
adc
push
mov
dec
lahf
push
push
xlat
and
rorb
jle
popa
std
sub
sti
pop
sbb
rclb
popa
mov
scas
add
jns
pop
int3
inc
add
sbb
jno
out
mov
jp
jg
negl
jmp
dec
je
ret
mov
loop
xor
mov
push
inc
pop
jo
push
push
repnz
cwtl
sbb
sub
out
sub
jb
inc
lahf
aas
pop
inc
jae
inc
sbb
iret
mov
jecxz
pop
or
add
adc
or
stc
lcall
push
in
or
push
inc
add
lods
ja
xor
sbbl
xor
xrelease
and
lea
rcl
push
fsubs
decb
ss
popf
pop
xor
rolb
add
popf
inc
scas
shlw
jg
bnd
cmp
pop
hlt
mov
xchg
pushf
jno
xchg
rorb
push
iret
mov
jb
jl
insb
aam
inc
imul
jne
les
mov
xor
dec
flds
mov
hlt
xchg
ss
fucom
sub
push
inc
xor
fucom
sub
fldenv
fists
repnz
lods
mov
push
lods
adc
inc
or
jbe
mov
adc
xchg
push
imul
xchg
sbb
insb
jbe
push
lret
hlt
jecxz
movsl
fdivrl
iret
xor
loop
mov
cmpsl
mov
mov
jecxz
aas
mov
out
dec
xchg
jmp
xor
cmpb
movsb
loop
int
and
test
in
inc
jb
xchg
sarb
and
add
xor
cmpsb
lods
aad
daa
aam
dec
cmp
inc
lea
dec
adc
stos
or
data16
loop
jecxz
mov
mov
cmp
jnp
in
mov
inc
loope
cmp
stos
std
scas
ja
mov
cmpsl
cmp
imul
movsl
add
imul
pushf
dec
scas
mov
or
inc
movsb
fdivrs
repz
ljmp
insl
add
out
inc
jbe
ljmp
shlb
sub
xchg
mov
or
movsl
shll
mov
inc
stos
std
das
loope
xchg
mov
test
fbld
stc
clc
cmp
iret
mov
inc
or
mov
lahf
addr16
fcom
idivb
xlat
mov
in
movsl
cmp
loopne
mov
push
inc
sbb
fwait
cwtl
icebp
rcrl
cmp
in
outsl
xor
mov
xor
call
sub
enter
add
mov
aas
dec
loope
mov
ds
fmuls
dec
inc
imul
cmp
or
inc
addl
mov
stc
ss
jl
fstps
outsl
andb
test
cmpsb
fdivrp
ficomps
popf
mov
xlat
out
movsb
add
pop
negb
add
fcoms
ds
fldenv
mov
test
mov
dec
mov
jns
adc
sub
nop
sbb
pop
push
das
jecxz
ror
lock
stc
mov
pop
sbb
cmp
adc
negl
mov
pop
xor
movsl
aaa
pop
stos
shr
mov
adc
xchg
pop
adcb
xchg
bound
imul
push
push
adc
out
test
lods
movsl
xchg
out
pop
test
fsubs
inc
repnz
xchg
fsubrs
mov
jp
sbb
xchg
lret
mov
mov
dec
push
test
jo
data16
fistps
xor
mov
sbb
mov
inc
int
xchg
nop
shrl
mov
ljmp
pop
dec
mov
xor
xchg
push
stos
add
dec
pop
loopne
xchg
sbb
insb
and
push
xchg
stos
and
adc
call
mov
adc
inc
ss
dec
and
add
mov
push
pusha
divb
jae
out
outsl
mov
into
in
test
xchg
ficoml
xor
pop
jp
sub
adc
pop
push
pop
cmp
pusha
xor
js
inc
pushf
sub
pop
add
cmp
mov
mov
xchg
popf
cli
add
pop
dec
push
mov
call
into
das
jne
insb
inc
xor
xchg
pop
lret
lahf
mov
dec
clc
sbb
or
fcoms
push
or
call
dec
or
filds
xchg
dec
jns
addr16
iret
push
fadd
fucomi
jb
cmp
push
push
out
and
dec
lock
mov
fwait
bound
lea
xor
lea
mov
int3
mov
cmp
or
mov
mov
xor
add
inc
add
pop
dec
mov
pop
bswap
jne
es
jno
inc
push
xor
jmp
inc
enter
das
hlt
addl
outsl
aas
pop
cmp
jp
das
sub
and
jge
mov
sub
jmp
and
pop
loop
dec
push
adc
push
pop
test
jmp
and
imulb
inc
cs
movsl
pushf
mov
pusha
fdiv
and
xchg
jge
adc
popf
adc
test
addl
testb
cmpl
cmp
mov
js
xchg
dec
mov
inc
mov
dec
leave
dec
fwait
mov
sbb
das
sub
loope
pop
loop
sbb
mov
mov
push
ret
xor
mov
mov
xchg
call
cmpsb
inc
add
jp
out
icebp
sbb
and
push
stc
cwtl
xor
xlat
jg
push
xor
and
adc
inc
xchg
enter
pop
xchg
push
insb
aad
adc
iret
enter
or
and
clc
rolb
jno
insl
ldmxcsr
imulb
mov
cmp
addr16
pop
xchg
adc
jge
int
movsb
adc
sub
imul
mov
imul
das
lret
sbb
and
lahf
out
cmp
mov
dec
jno
popf
pop
jnp
mov
mov
sub
dec
adc
mov
scas
pop
dec
shll
xchg
mov
pop
fnsave
inc
pop
lea
fdivl
out
test
mov
imulb
fwait
jle
pop
xchg
jo
pushf
out
xor
push
add
sub
out
sti
sub
test
ds
adcl
jbe
or
dec
add
push
jmp
outsb
pop
aaa
xlat
mov
dec
inc
push
push
jle
cltd
jl
push
adc
sbbl
inc
icebp
std
es
cwtl
jle
mov
out
jb
adc
sbb
push
mov
lods
ljmp
mov
lcall
jnp
fnstcw
lds
mov
ja
js
lods
mov
dec
push
mov
mov
cli
push
into
mov
push
jg
jae
push
cld
and
push
test
adc
sub
add
fsubrs
shlb
mov
xlat
sub
test
out
outsl
push
push
cwtl
xlat
sub
cmpsl
in
imul
push
mov
cli
xchg
adc
mulb
cs
mov
xor
adc
mov
sbb
popf
mov
repnz
jo
xor
fldenv
add
push
lcall
arpl
cmp
jmp
dec
les
xor
out
orb
lret
dec
sbb
fs
jnp
orb
sti
lods
icebp
stc
cld
sahf
imul
mov
mov
shlb
out
jg
add
xor
sar
pushf
mov
inc
push
ds
pop
andb
and
outsl
out
dec
inc
out
xor
push
aam
xchg
jns
pop
out
sub
lret
mov
lods
aad
in
mov
push
push
lock
xorl
mov
nop
and
pop
pop
scas
aaa
pushf
cltd
mov
shr
and
das
sbb
xchg
ds
jae
int3
adc
cmc
insl
mov
xchg
dec
or
movsb
dec
stc
dec
mov
mov
adc
and
inc
cmp
rcrb
push
or
lock
pop
jno
ljmp
movsb
popa
sbb
aam
addr16
int
and
mov
ficoms
inc
xchg
repz
lds
xchg
pop
push
sub
sub
xlat
jne
clc
xchg
push
mov
cmp
div
fucomp
adc
enter
sub
out
jo
int3
push
insb
cmp
xchg
xchg
adc
mov
push
sbb
push
aad
push
or
fldt
dec
and
add
xchg
push
lret
shlb
push
in
push
movsb
aas
xor
mov
xlat
xchg
loop
pop
add
clc
push
sub
loop
fistps
xchg
xchg
ficompl
fnstcw
xchg
mov
lock
xor
adc
push
xchg
pop
mov
xchg
push
call
je
out
cwtl
lods
mov
pop
je
push
add
jp
loopne
sub
pop
imul
mov
insb
pop
dec
jbe
dec
inc
and
jbe
and
xchg
cmp
jmp
out
sub
cmpsb
clc
and
sub
and
jne
les
fdivr
pop
call
mov
notl
cli
mov
test
test
adc
loop
sub
push
lret
imul
in
dec
jo
inc
adc
stc
jmp
mov
test
lret
int
ret
xchg
pop
into
rcll
jl
pop
lahf
std
jp
in
add
addr16
in
nop
fimuls
sahf
lods
mov
insb
out
sbb
inc
jmp
inc
cs
js
sbb
hlt
les
bound
or
lea
add
fnstcw
rolb
mov
xchg
es
adc
insl
lods
push
cs
int3
jns
mov
lcall
jo
ret
mov
popa
add
pop
dec
iret
mov
cmp
adc
xchg
in
pusha
dec
insb
jp
mov
dec
pop
jnp
out
hlt
daa
push
test
push
dec
inc
cs
fisubrs
movsl
test
mov
add
dec
or
inc
jb
scas
sbb
cmpsb
fistps
cmp
out
lret
imul
pop
sbb
mov
negl
lea
rorb
mov
jecxz
fs
in
sbb
jno
or
cmp
xor
addl
push
ret
in
inc
mov
mov
leave
and
idiv
jo
pusha
cmp
stos
lahf
cmp
inc
leave
push
add
xor
ret
xchg
out
leave
mov
ss
pop
mov
aad
jl
push
pop
jge
mov
xor
dec
cmp
dec
mov
adc
out
xchg
nop
std
sub
divb
push
clc
outsl
sahf
add
testl
or
test
add
loopne
cwtl
xchg
clc
filds
neg
lret
xor
adc
mov
cltd
lods
add
test
mov
mov
xchg
push
shll
lds
jg
dec
cli
jg
cld
inc
aam
daa
incb
cmp
push
mov
std
sbbl
mov
push
fstl
notb
cmp
mov
push
outsb
stos
cld
jo
and
fs
cltd
leave
push
lret
push
incb
outsb
and
or
cmpsb
jmp
jmp
add
pop
jp
imul
or
or
fidivl
jle
jno
inc
push
imul
lea
aam
inc
pop
inc
or
mov
jo
test
notb
adc
push
cmpsb
and
xchg
loopne
out
out
notb
add
fsubrs
push
inc
adc
movsb
inc
push
mov
dec
adc
lcall
push
fidivs
mov
mov
mov
and
push
call
mov
repz
fcompl
push
jae
push
in
push
xlat
xchg
das
popa
xor
pop
repnz
rcrb
inc
push
inc
ds
push
mov
jge
xchg
fildll
sub
fnstsw
xchg
and
mov
and
jns
mov
ja
xor
jae
cmp
or
stc
xor
in
adc
cmc
fsubs
sti
xchg
gs
out
mov
sub
mov
cs
fisubl
out
and
pop
lea
dec
pusha
hlt
dec
inc
mov
add
inc
push
mov
stc
mov
jno
fisubs
xchg
ret
les
add
push
push
outsl
cli
mov
mov
fsubrs
fcomps
aam
loope
add
pushl
pop
fdivrl
rcll
aam
movsb
popa
dec
fcomi
cli
adc
push
test
aas
jbe
mov
hlt
inc
dec
ret
or
push
inc
mov
aam
jns
out
jnp
inc
dec
nop
and
jnp
xor
loope
aas
scas
mov
arpl
adc
test
dec
std
arpl
addr16
mov
loope
je
mov
adc
xchg
fmul
stos
fiaddl
jne
lret
xchg
xchg
imul
and
sub
ja
cld
rcl
xor
call
rolb
dec
cwtl
sub
loopne
xchg
mov
push
push
bound
lret
imul
jne
pop
mov
out
jb
imul
sub
decl
or
mov
mov
fildll
inc
sahf
test
sbb
jne
or
loopne
fcomip
cmp
daa
inc
mov
cmp
call
cmp
stos
fistl
push
fcmovne
and
and
mov
rcrl
jg
lds
es
leave
jl
xchg
push
fistl
sbb
push
movsl
mov
int
negl
add
sbb
gs
or
dec
mov
xor
aaa
jl
dec
xchg
mov
les
adc
jno
scas
xchg
sti
insb
jae
add
out
aad
xchg
mov
aad
dec
mov
lods
adcl
mov
mov
push
mov
cmp
xor
loopne
shrb
nop
sub
jo
jle
push
push
imul
es
sub
xchg
int
push
mov
ret
mov
notb
ds
add
mov
lds
and
fcoms
and
inc
bound
mov
lcall
cld
dec
or
icebp
adc
movsl
fs
arpl
mov
loope
mov
int3
inc
fisttpll
sarl
push
rclb
and
fwait
rcl
xor
out
out
mov
scas
lods
and
mov
cmp
scas
in
mov
inc
jne
in
or
arpl
mov
out
pop
mov
and
add
popa
xlat
add
xchg
mov
imul
fbld
pop
mov
mov
sbb
fbld
inc
inc
xchg
add
andl
adc
iret
mov
push
cwtl
es
pop
pop
inc
cmc
dec
jbe
mov
shlb
mov
push
stc
lret
push
sbb
mov
or
scas
sbb
das
inc
aas
jae
outsl
jb
test
xor
sub
push
push
jle
xchg
int3
addr16
popa
pushf
mov
or
shl
jns
mov
xor
xor
in
xchg
stos
push
xor
push
push
test
pop
scas
xchg
xchg
popa
cmpsl
cltd
repz
ret
cwtl
add
scas
mov
push
loop
adc
mov
pop
fs
push
push
fwait
cmpsb
test
fisttps
xchg
or
xchg
loop
sub
repz
xor
jno
je
fs
pop
scas
imul
std
or
outsb
inc
dec
sub
adc
js
cmp
out
mov
ljmp
loopne
rcll
dec
lret
sbb
aas
out
leave
cmp
cmp
pop
cmp
out
dec
push
iret
mov
ljmp
dec
outsl
add
sbb
test
pop
mov
mov
adc
push
lock
imull
lock
xchg
sbb
xlat
jle
ret
inc
inc
clc
jl
repnz
dec
mov
pop
subb
ss
cmc
cmpsl
push
jbe
stc
add
movsb
cmp
popa
adc
or
cld
add
rolb
aad
outsl
jmp
mov
jecxz
pusha
arpl
das
popf
push
push
or
or
xchg
int3
lret
test
xchg
xor
lret
clc
aas
sbb
mov
jecxz
mov
and
jns
stos
ret
mov
test
cmp
idivb
insb
lea
inc
jno
jmp
mov
adc
sbb
jge
ds
mov
fwait
loope
cmp
sbb
pop
add
rcl
jg
cmp
inc
fistl
jno
jne
mov
js
repz
test
mov
bound
fadd
fs
push
gs
fildl
cmp
cmc
cmc
push
ss
sti
dec
imul
pop
in
or
cmp
add
dec
and
lock
xchg
movsb
adc
cmp
dec
ss
pusha
mov
jno
mov
pop
cmp
pop
sub
dec
and
test
cmp
xor
test
mov
push
addb
cmc
les
outsl
inc
test
pop
ret
mov
aam
js
push
mov
pop
rcll
push
movsb
ds
xlat
pop
out
xchg
mov
push
sub
arpl
mov
add
test
push
add
mov
cwtl
sti
lret
jecxz
mov
in
mov
push
out
cmpsl
jns
xchg
xchg
pop
outsl
sahf
jp
movsb
dec
and
inc
xor
pop
aaa
fdivrs
jnp
push
or
adc
popf
inc
inc
mov
and
jge
testl
dec
cmp
out
je
xchg
cmp
icebp
insb
mov
cmp
lret
adc
mov
lock
mov
pop
mov
sbb
subl
sub
enter
inc
and
dec
call
shlb
aam
xchg
sub
daa
pusha
jb
aam
fsts
pop
xchg
pop
negl
shl
jae
je
fucomip
xor
mov
add
test
jg
fistpl
jge
in
xor
inc
mov
push
test
jl
push
jge
scas
mov
push
pop
mov
shrl
add
push
adc
xor
bnd
lods
jns
sbb
cs
dec
jns
push
jg
sti
push
jmp
and
bound
nop
sar
insl
push
mov
fs
in
add
test
pusha
pop
test
out
aaa
jge
ja
push
repnz
stos
movsl
jbe
jl
pop
into
push
jne
testl
inc
or
jnp
out
fwait
es
xchg
insl
cmpl
hlt
fsts
jge
mov
push
fiaddl
push
push
sbb
pop
push
loop
jg
popa
incb
mov
mov
call
or
shr
pushf
dec
imul
mov
cmc
shl
push
or
pop
jne
xor
dec
and
loopne
test
and
scas
fmuls
gs
je
rcrb
push
pop
xchg
ss
lock
or
jmp
xor
pop
sbb
out
ja
jmp
add
jmp
add
push
xchg
dec
xchg
ret
test
dec
pusha
xchg
xchg
push
adc
dec
iret
aas
jo
adc
fstpt
addr16
insl
pop
pop
pop
xchg
push
jb
push
mov
xorl
pop
jmp
js
dec
pop
scas
cli
fsubrs
shl
lahf
jl
lods
scas
inc
or
test
test
mov
cmpsl
cmp
or
fisubrs
jne
xchg
mov
cs
xor
inc
call
xchg
dec
mov
mov
stos
leave
lea
mov
int3
vmread
dec
cwtl
scas
push
out
fiadds
push
std
test
or
dec
push
inc
icebp
mov
sub
xlat
cmp
int
cmp
sbb
push
xor
mov
gs
adc
test
cmp
push
jl
pop
pop
pop
test
xchg
sub
dec
dec
cwtl
dec
xchg
pop
dec
insl
cmp
sbb
das
cmp
bound
dec
loop
inc
jmp
pop
xor
cltd
cli
push
lret
and
mov
push
pop
inc
xchg
pop
jns
cmpsl
adc
or
xor
mov
sub
add
lea
rcll
pop
cli
aam
lock
bound
imul
jp
mov
aas
bound
shrl
jo
xchg
and
es
fnstcw
and
mov
dec
ss
jmp
sbbl
pop
pop
mov
xor
das
xor
mov
pop
jnp
mov
sahf
out
fidivs
jg
pusha
jbe
add
repz
push
sbb
dec
pop
sub
xchg
dec
push
lret
dec
addb
mov
jo
push
fmuls
inc
and
dec
ret
je
std
dec
mov
xchg
loop
cmc
int3
ljmp
insl
cmpsl
pop
mov
or
shl
out
sahf
ret
add
ret
insb
cmpsl
fdivrl
in
fsubs
sbb
in
das
loop
adc
adc
xchg
mov
dec
xor
lret
xchg
inc
mulb
mov
lcall
xorb
in
push
std
add
mov
jmp
mov
inc
and
ret
sbb
ficomps
fs
mov
aam
inc
adcb
loop
mov
mov
test
test
dec
dec
in
sti
or
cmp
int
in
pmaxub
sbb
jecxz
add
sbb
and
je
enter
cmp
pop
inc
outsb
sbb
mov
mov
stc
fs
jecxz
sbbl
jb
pushf
call
bnd
fsubrl
sbbl
loopne
ljmp
pop
out
adc
cmp
cmc
lods
js
mov
mov
mov
sub
imul
in
sbb
ljmp
mov
out
popf
in
mov
cmp
xchg
je
sbb
aaa
and
push
ljmp
into
xchg
stos
scas
aas
xlat
call
fs
dec
cwtl
mov
mov
addr16
xchg
lods
in
mov
push
jo
xchg
rcrl
inc
in
inc
sbb
mov
test
int3
xlat
daa
fisttps
inc
out
xchg
mov
in
sbb
call
jne
jne
mov
mov
pcmpgtd
cmp
dec
ror
or
shlb
daa
imul
test
xchg
movsl
inc
daa
mov
cwtl
push
mov
cmp
push
arpl
jo
or
jmp
xchg
adc
cli
shlb
and
fisttpll
push
idivb
pop
xchg
pop
iret
sbb
push
push
popf
mov
inc
mov
mov
mov
cmp
pop
pop
bound
lahf
std
dec
push
imul
xchg
inc
mov
call
inc
fxch
push
scas
int3
xchg
adc
pop
push
cs
popa
out
pminsw
inc
mov
mov
lea
ficoml
negl
test
imul
push
sbb
scas
fstl
xchg
fwait
int
jl
inc
imul
add
mov
push
cmpsb
jmp
mov
fidivl
setne
mov
scas
scas
xchg
pushf
lcall
mov
lods
jecxz
ror
mov
inc
adc
cmp
mov
mov
inc
push
add
xchg
or
fs
aam
xchg
imul
cmp
inc
es
sbb
fcoml
and
sbb
push
sti
ss
and
sbbb
out
sub
rcrb
shll
int
aaa
inc
and
push
sub
cmp
mov
add
in
loopne
xor
lret
jg
fs
sub
jmp
adc
test
mov
iret
fwait
mov
xchg
shrb
adc
js
pushf
jmp
sbbb
pushf
mov
in
inc
sbb
jbe
movsb
mov
sbb
pop
adc
daa
cwtl
add
cwtl
out
sub
add
adc
js
repnz
and
lea
in
test
xor
mov
jle
leave
pop
jle
add
mov
or
mov
mov
cld
jbe
repz
and
xor
mov
jle
xchg
mov
cmc
push
and
sub
xor
fldenv
jbe
test
sub
mov
lds
cli
push
mov
movsb
sti
sub
xlat
adc
inc
cltd
test
mov
in
ljmp
push
jbe
leave
inc
fbstp
pusha
adc
mov
outsl
lea
xchg
lods
or
xlat
aaa
loop
pop
xor
xchg
jo
sub
cld
in
sub
movsb
lcall
insl
test
sub
xchg
lret
add
mov
lds
xchg
cld
push
fisttps
in
loopne
pop
movsl
jb,pn
jb
fldcw
cmpl
js
adc
add
shl
jp
flds
pop
outsb
push
sub
loope
dec
xchg
sbb
mov
cwtl
scas
subb
and
push
ds
jno
xchg
lods
cmpsb
ja
mov
or
cmp
cmpsb
push
pusha
aam
lahf
jl
call
stos
cmp
add
cld
movsl
fldz
call
push
and
insl
roll
daa
cmp
sub
inc
test
mov
push
lcall
pop
mov
jnp
adc
sbb
lcall
jecxz
fdivl
lcall
mov
enter
cli
ds
mov
cmc
mov
hlt
aaa
push
lret
or
fiadds
cmp
and
sub
mov
rolb
out
adc
aaa
fcoml
int3
movsb
add
mov
bound
sub
test
orb
mov
add
aaa
sbb
mov
loop
fiadds
data16
mov
mov
lahf
pop
inc
bound
push
and
inc
out
pop
mov
xor
pop
or
adc
test
stos
xchg
fwait
cltd
repz
mov
arpl
dec
std
xor
push
push
dec
xchg
test
cmp
scas
mov
test
cld
shrb
xchg
je
out
mov
add
adc
xchg
pop
ret
lcall
popa
cmp
ss
daa
xor
mull
push
or
lds
or
ds
movsl
test
mov
sbb
subb
sbb
mov
cltd
sub
lock
out
inc
mov
lds
loope
sub
mov
or
inc
pop
leave
jmp
mov
icebp
sbb
gs
xor
jo
add
lock
je
adc
jnp
into
mov
dec
jmp
cwtl
icebp
inc
clc
in
hlt
cmp
sbb
mov
repnz
repz
mov
xor
mov
cmp
loop
nop
ffreep
lods
push
es
in
sub
xchg
jnp
repz
nop
dec
fidivrs
pop
aam
pop
mov
or
insl
addr16
mov
dec
jns
call
cmp
idivb
cmpsl
in
repnz
es
cmp
and
and
mov
rcll
xchg
sub
scas
adc
adc
test
xchg
mov
jae
sub
rcll
or
test
xor
dec
or
jmp
push
repnz
fwait
mov
divl
cmp
cmp
out
or
cmp
stos
outsb
mov
xor
or
push
in
adc
pop
pop
cmp
stos
fbld
sbb
int3
xchg
test
iret
mov
imul
jle
shlb
fnsave
loope
sbb
mov
xchg
negb
xchg
fcomps
lea
push
cmpsb
inc
lahf
lahf
sub
xchg
lods
test
subl
xor
jno
or
jbe
push
mov
push
push
pop
pop
test
shrb
outsl
sbbl
ja
mov
cs
pushf
dec
or
xor
ljmp
cmp
jne
enter
es
shlb
scas
mov
test
mov
mov
sub
xchg
sahf
and
dec
or
icebp
mov
cmp
arpl
into
sahf
int3
in
jne
sbb
jmp
or
loope
ret
daa
lahf
mov
and
jl
leave
or
inc
jmp
ljmp
inc
fidivs
push
cltd
fdivs
in
mov
jae
shrb
sub
test
pop
pop
lahf
push
fimuls
dec
mov
in
mov
popf
sub
inc
rorl
inc
ss
pusha
in
ret
aas
push
sahf
les
lock
push
movl
add
addl
adc
out
fs
and
mov
adc
cmc
divb
add
lcall
fdiv
mov
icebp
mov
sub
or
test
cmp
in
push
ljmp
in
unpcklps
fildll
jmp
mov
mov
ljmp
fnstsw
movsl
mov
push
insl
shll
ljmp
and
jle
cmp
mov
rol
add
stos
mov
repnz
imul
into
in
scas
mov
xchg
add
dec
jl
popf
sbbl
or
lahf
dec
mov
mov
jb
cmpsb
in
push
pusha
jmp
fists
mov
and
pop
cltd
dec
pop
mov
leave
inc
andl
pop
push
cmovle
mov
ljmp
sbb
aam
sti
test
adc
xchg
int
hlt
dec
in
ror
mov
add
ja
push
sbb
jge
mov
aad
fs
xchg
outsb
mov
rclb
loope
and
xchg
stos
in
adc
mov
cmpsb
sbb
lods
subl
inc
adc
mov
mov
sbb
mov
push
push
ret
ljmp
xchg
jle
sub
xchg
rcll
inc
insl
inc
or
and
add
out
xlat
inc
cli
and
xor
mov
sbb
sub
sub
aaa
or
dec
rcrl
icebp
cltd
and
cld
dec
mov
jno
fcomi
mov
mov
push
out
push
lods
mov
inc
out
out
push
adc
pop
das
add
mov
insl
cmp
cmpsl
adc
sub
cmc
enter
call
push
lods
dec
adc
sarb
in
out
add
call
ljmp
lock
stc
cmp
adc
bound
mov
jl
in
push
movsb
adcb
sub
or
xor
sub
cmp
imul
cltd
push
sahf
jnp
leave
mov
movsb
inc
js
and
int
cmpb
popf
lret
pop
sub
mov
loopne
or
ret
and
mov
push
fisubs
push
shll
cmp
jp
cmp
sub
sub
push
jne
js
and
outsl
mov
sbb
call
loope
pop
mov
dec
aad
dec
ds
jns
push
inc
inc
lret
and
or
push
hlt
xlat
xor
pop
mov
test
pop
imul
xor
xchg
adc
push
push
fistps
inc
fcmovu
cmp
loope
cmp
push
roll
push
clgi
pop
sub
gs
xlat
xor
pop
outsl
mov
jecxz
ljmp
xor
out
rcr
or
nop
dec
mov
push
pop
jmp
xchg
xlat
jno
test
clc
mov
andb
mov
in
cmpsl
adc
inc
andb
pop
mov
out
add
mov
xchg
fdivrs
add
xchg
push
mov
pop
dec
jg
out
xlat
shrl
ds
pusha
loopne
xchg
inc
and
cmp
jb
mov
loopne
ret
mov
lret
push
imul
sub
cli
repnz
inc
decl
mov
push
push
sti
push
adc
mov
rcrl
jne
mov
jge
leave
pop
shl
xchg
lret
aaa
dec
jno
mov
push
inc
jae
lea
sub
push
xor
push
inc
ss
inc
jecxz
xchg
xor
aaa
adc
cmpsl
repnz
inc
out
in
test
das
insl
and
aaa
xlat
or
mov
inc
sbb
pop
cli
add
ja
xchg
dec
push
leave
mov
mov
iret
add
dec
shl
sahf
pusha
or
shll
out
test
data16
stos
xchg
imul
repz
jg
sub
add
stc
mov
jle
inc
bound
mov
mov
lock
lds
sub
dec
jns
mov
mov
inc
loop
or
jge
mov
mov
mov
rol
sbb
stos
inc
insb
leave
cmc
add
add
xchg
inc
inc
dec
pop
or
xchg
sbb
daa
mov
jmp
les
jns
inc
jno
push
inc
cltd
and
clc
shlb
inc
jmp
adc
push
daa
mov
popf
fisttpll
push
pop
subl
pop
or
aas
push
add
push
cmpsl
jp
icebp
sub
fwait
lods
cmc
rcll
jbe
sub
cmpw
cwtl
push
add
push
cmp
ss
cmp
lea
arpl
cmp
mov
cmp
lahf
mov
adc
lock
roll
cmp
stc
lods
push
stos
aad
pop
jp
dec
cmp
out
lcall
fistpl
inc
add
aaa
hlt
ret
sbb
xor
out
mov
xchg
fdivl
sbb
scas
add
mov
inc
push
pop
add
xchg
xchg
jno
ja
xorb
jno
cli
loope
fadds
and
push
xor
mov
loopne
mov
in
cmp
inc
cmc
cs
or
imul
dec
mov
sub
sub
fwait
ljmp
outsl
sbb
mov
sub
inc
outsl
popf
lret
addr16
push
cmpsl
sub
call
and
faddl
jecxz
fistl
sbb
and
cmc
inc
es
pop
decb
push
push
pop
mov
and
ret
add
lods
stos
stos
leave
push
push
aaa
lcall
inc
dec
cmc
sub
rcrl
push
cmc
pop
push
js
stos
push
movsl
pushf
shrl
sub
sbb
test
test
add
dec
out
push
lret
mov
inc
cmpsl
push
cmp
xorl
or
and
cwtl
push
jns
cmpsb
call
shl
push
test
push
lahf
push
arpl
xorb
je
ficompl
mov
fistpll
aas
dec
jle
pop
fldcw
data16
sbb
in
bound
jg
inc
cmp
mov
mov
les
mov
fwait
adc
mov
mov
cmpsb
jp
test
mov
dec
sub
jno
inc
hlt
nop
mov
adc
fisttpll
dec
into
xor
inc
cmp
jae
lret
push
xchg
aam
shl
out
out
xchg
stc
dec
inc
sub
mov
adc
loop
loopne
js
sbb
into
stos
gs
push
addr16
aam
pop
or
dec
sbb
sbb
mov
mov
addr16
pop
adc
mov
cmc
stos
xorl
add
into
jnp
out
insb
mov
jb
push
add
mov
jne
push
pop
cmp
sub
xlat
insb
mov
add
ja
xor
addl
adc
cmp
jne
xor
xorb
sub
rolb
test
jno
mov
movsb
mov
push
cmpsb
int
in
mov
loope
xorb
in
mov
ret
loop
lods
scas
cmp
stc
les
leave
add
and
xor
notl
aaa
xor
jae
or
xor
jmp
xor
scas
xchg
lea
xchg
out
dec
pop
adc
scas
cmp
nop
jo
adc
sub
pushf
lds
xchg
push
in
pushf
aaa
pop
aas
mov
jmp
sub
rorl
add
lea
or
out
sahf
int3
pop
jle
insb
ja
jge
stc
pop
mov
insb
insl
jnp,pt
mull
or
inc
mov
jne
xchg
xor
sbb
dec
add
add
pushf
int3
jmp
and
loop
out
sub
inc
push
xchg
movsl
jecxz
jne
push
mov
aas
and
jl
mov
mov
jg
and
shlb
adc
cmpsb
pop
add
addl
and
push
lock
add
fadd
out
pop
mov
lock
stos
insl
xor
lret
sub
pop
xchg
mov
ss
dec
enter
jne
stos
mov
or
jno
push
and
dec
push
mov
imul
pop
mov
xor
xchg
sbb
call
push
mov
xchg
cmp
dec
push
xchg
imulb
lods
sub
fimull
sub
jp
push
rcrl
push
dec
inc
outsb
test
wbinvd
lea
and
ljmp
cld
dec
lret
jge
mov
jne
cwtl
outsl
dec
push
mov
mov
dec
lods
pop
out
mov
fdivrs
push
incb
jg
push
adc
xor
pop
fprem
xor
inc
cmp
cmp
xor
and
ret
cld
add
jp
mov
mov
pop
js
rdtsc
xor
cli
dec
xor
repnz
fadd
fisubrl
push
lea
popa
out
mov
outsb
push
fs
pusha
cmp
push
sub
push
out
movsb
push
fs
jne
pushf
mov
cmp
loope
cmc
insb
andb
mov
imul
sbb
mov
lahf
xchg
jae
enter
pop
push
xor
mov
leave
std
lahf
ds
scas
mov
push
sub
or
mov
mov
shr
jg
xchg
adc
or
lahf
les
popa
int
jns
inc
clc
stos
push
fs
sbb
icebp
jne
xor
fcos
dec
mov
push
repz
push
notb
add
cltd
movq
sbb
sub
xchg
das
insb
std
pop
jnp
cmp
cmc
loopne
xchg
divl
loope
jae
pop
push
cmp
adc
lds
mov
and
mov
sub
push
lds
lods
pop
cmpsb
cs
insb
call
icebp
lret
lds
popa
jns
shrl
add
lods
jl
mov
add
lcall
mov
mov
xlat
adc
mov
pop
fcomi
cmp
inc
sub
dec
std
sub
dec
adc
in
inc
repnz
xor
or
cmp
sbb
cmp
movsb
sti
pop
dec
pop
jp
inc
adc
popf
pop
shll
pop
test
rcrb
nop
dec
sub
add
lahf
mov
rcr
or
and
inc
fidivs
mov
fadd
movsb
cmp
subb
or
pop
mov
popf
gs
es
std
fcomps
rol
sub
imul
out
or
clc
jp
cmp
jp
scas
int
push
repz
adc
imul
pop
in
push
xchg
cmp
cmp
mov
das
leave
lcall
cwtl
out
or
pop
or
dec
inc
inc
ljmp
ficoms
into
mov
jmp
fadds
push
out
lods
push
scas
pushf
xor
in
lea
push
int3
add
ss
jnp
lret
xchg
cmpsb
mov
inc
push
mov
movsl
ljmp
push
pop
shll
push
lock
cmp
or
nop
and
sbb
loop
and
jbe
xor
cmpsl
xor
pop
loope
xor
add
dec
gs
rcll
mov
jne
mov
jl,pt
mov
mov
mov
out
mov
je
add
fstpl
imul
and
mov
push
sbb
mov
adc
mov
fldt
fstps
mov
xor
mov
add
shrb
fs
les
int
shl
and
aad
jnp
and
xor
cmp
jbe
popa
cmp
cmp
pop
add
ja
jge
jnp
in
sti
scas
popf
popa
ss
decl
scas
mov
mov
test
add
repnz
push
dec
sbb
cmpb
ret
gs
inc
sbb
lcall
pop
in
gs
aaa
mov
mov
mov
ret
add
and
and
push
pop
xor
call
xchg
xchg
stos
adc
outsb
xor
test
xchg
jo
cmc
sub
in
jae
pushf
js
fists
cmpsb
movsl
inc
xchg
sbb
or
xchg
add
ja
scas
daa
in
xchg
fiaddl
lods
inc
mov
xor
mov
cmp
inc
test
dec
leave
outsb
add
fidivl
imul
lret
and
cmpl
ds
jno
dec
js
loop
and
mov
dec
hlt
push
movsl
or
push
insb
sbb
outsb
xchg
scas
and
mov
loope
jae
xchg
outsl
xchg
push
xor
enter
sub
sbb
scas
push
adc
inc
and
mov
sbb
cld
frstor
and
cmpsl
dec
jbe
sbb
xchg
mov
inc
push
cmpl
aam
pop
in
dec
sbb
xor
pop
mov
xor
jnp
pop
xchg
lcall
and
fldcw
cmp
out
int
jmp
jp
jp
cmp
out
adc
push
stos
cmpsl
iret
sub
pushf
xor
xchg
mov
test
cmp
jmp
inc
js
hlt
mov
mov
js
inc
dec
sti
adc
in
adc
scas
cmp
out
push
mov
divl
cmc
adc
out
jns
lret
scas
out
mov
adc
jmp
mov
cmp
out
pop
inc
arpl
jmp
xchg
jge
jmp
imul
mov
icebp
aad
adc
sti
ret
in
xchg
loop
dec
iret
cmpsl
aas
cmp
jae
je
mov
dec
call
cwtl
add
in
xor
scas
add
adc
mov
fcomi
fisttpl
pop
jo
les
or
xchg
ret
fmull
add
inc
inc
shlb
cmp
cld
ljmp
fnstcw
adc
test
fucompp
mov
jo
test
notl
xchg
jmp
aad
scas
jge
xchg
imul
imul
mov
pop
lods
xchg
out
je
and
dec
fwait
sub
cmp
inc
mov
dec
sbb
and
les
movsb
sbb
test
dec
xor
ret
pop
fdivs
fs
adc
sbb
push
repz
stos
cmp
adc
or
or
and
jp
push
fstl
mov
xlat
sub
test
orl
or
mov
lcall
mov
adc
cs
pop
daa
stos
jge
and
xor
adc
out
and
xchg
cmp
fcmovnbe
int
mov
xchg
jbe
adc
jb
ret
inc
lock
and
decb
inc
xor
int3
jmp
jge
push
in
daa
nop
xor
xor
adc
mov
or
lahf
xchg
imul
add
sbb
shlb
add
push
xorw
addr16
dec
dec
jge
pushf
push
push
aad
sbb
lcall
push
jb
sbb
xchg
imul
sbb
jmp
cmp
xchg
ret
int
rolb
push
pop
nop
sbb
mov
pop
stc
dec
xor
mov
arpl
push
mov
les
repz
insb
ret
push
jmp
scas
roll
rclb
jmp
in
xacquire
jno
lds
pop
xchg
mov
push
dec
test
add
adc
ret
lods
inc
jbe
cli
roll
subb
test
std
sub
mov
insb
mull
sbb
sub
inc
shl
mov
mov
or
sbb
mov
roll
into
sarl
jl
mov
rorb
mov
subl
pop
sti
lcall
inc
nop
orb
cmc
and
insb
mov
icebp
fmul
pop
lods
jecxz
dec
push
repz
ror
cmp
jnp
in
rcrb
in
orl
lods
stos
out
cmp
or
sub
movsl
sub
inc
sub
add
sub
mov
push
xchg
loop
aam
icebp
mov
mov
cld
lock
lock
ret
imul
pop
cmp
enter
jg
and
mov
adc
mov
data16
mov
add
xchg
xchg
pushf
data16
adc
cmpsl
pop
mov
push
insb
add
pop
mov
and
dec
icebp
in
dec
cld
test
adc
adc
test
sub
sbb
mov
jp
jbe
mov
jnp
je
add
xchg
negb
fs
xorb
fwait
sub
mov
popa
ja
ss
out
shll
jne
loope
mov
push
xchg
outsl
mov
das
jb
filds
pop
sbb
enter
loope
call
mov
pushf
inc
mov
cli
in
pop
push
unpckhps
xlat
imul
xchg
add
jno
push
xchg
add
or
int
mov
xor
addr16
das
sub
jnp
pop
repnz
fcompl
push
mov
xchg
popa
and
xor
jo
in
and
xchg
or
pop
scas
xor
inc
inc
jmp
es
pop
mov
out
dec
push
fisubs
in
pop
popf
mov
add
or
sub
jo
xor
dec
inc
fadds
repnz
fs
iret
inc
iret
push
rolb
cld
cli
jmp
das
pop
mov
int3
stos
xor
adc
lcall
jp
cltd
xor
mov
insb
cmp
lret
or
lods
bound
cmp
nop
mov
lcall
inc
push
jmp
push
outsl
sarb
stos
shlb
fbstp
dec
adc
xchg
add
int
in
inc
pop
scas
mov
or
scas
test
dec
mov
push
les
int3
dec
cltd
aas
leave
cli
subl
and
xchg
outsl
movsb
jmp
scas
xorb
pop
mov
xchg
inc
or
add
stos
sti
jecxz
sar
xchg
adc
adc
pop
fnstenv
jnp
adc
jnp
clc
call
repnz
dec
sbb
out
mov
jno
push
mov
sub
and
icebp
dec
adc
sub
addr16
fistps
cmp
leave
into
xor
push
ja
movsl
daa
sbb
and
test
add
cld
jno
adc
add
repz
adc
mov
adc
mov
xchg
out
jae
sbb
or
js
out
cs
cld
gs
xor
daa
jno
push
mov
cld
xor
aam
pop
adc
cs
or
jg
in
imul
pop
leave
dec
gs
cmp
in
shrb
push
xchg
mov
rcrb
das
sub
insb
mov
adc
aam
ljmp
scas
xor
cs
push
jne
xor
stos
stos
jmp
cli
mov
shll
jo
add
outsw
mov
mov
les
xchg
iret
adc
dec
pop
jp
sub
cltd
fwait
orl
pop
scas
mov
mov
addr16
sarl
dec
and
add
or
add
lods
pop
xchg
and
rclb
lods
cmp
xor
test
out
test
push
shlb
out
pop
mov
and
cmpb
adc
dec
test
inc
fwait
movsl
jg
repnz
movsb
icebp
cwtl
insb
fmull
add
cmpsl
popa
adc
fmuls
or
stos
pop
stos
leave
or
pop
movsl
test
adc
adc
mov
mov
jp
or
and
inc
xor
mov
je
inc
das
xor
inc
shrl
test
std
sub
imul
adc
dec
gs
imul
insl
xor
fprem
mov
inc
mov
push
out
test
ret
sub
push
es
enter
fnstcw
mov
pop
test
popf
fwait
and
dec
stc
data16
ficompl
cmpsb
pop
in
test
jp
lock
sub
adc
rcll
das
testl
popa
xchg
hlt
cmpsb
mov
dec
stc
xor
lock
mov
mov
xor
and
rclb
sbb
inc
imul
pop
pop
ljmp
mov
test
add
mov
lock
aad
jp
jae
cmp
push
bsf
pop
xor
mov
xchg
mov
inc
sub
loop
in
xchg
push
out
fildll
pop
mov
fstl
jbe
cmp
push
inc
push
mov
push
sub
adc
clc
add
and
ss
mov
mov
movsl
stos
out
sti
imul
cmpsb
mov
adc
mov
stos
inc
xchg
sbb
pop
push
jge
xchg
push
mov
xchg
pop
add
and
jo
andl
cmp
xor
pop
mov
jns
adc
movsb
mov
rorb
lods
outsl
lret
gs
mov
adc
or
sub
push
xor
in
negl
into
mov
cmp
push
xchg
call
out
pop
jmp
test
inc
add
fsub
pusha
stos
pop
lahf
leave
jmp
jno
fisttps
push
pop
jg
shr
inc
xchg
dec
sahf
sbb
mov
enter
and
lock
repnz
les
js
rorl
push
xor
xchg
add
sahf
jbe
mov
into
icebp
imul
fwait
mov
jns
fistps
loopne
pop
dec
cs
dec
imul
cs
test
in
xor
rorb
mov
xor
xor
rcll
daa
adc
xchg
pusha
mov
in
push
fimuls
inc
xor
dec
pop
andb
sarb
jecxz
mov
lahf
aad
in
cltd
cmp
shr
sbb
loop
or
repz
jl
cmp
out
sbb
lods
mov
testl
mov
mov
clc
jmp
subl
das
jo
ja
pop
jp
jmp
dec
adc
shlb
xchg
dec
jmp
adc
lret
scas
pop
and
push
xor
or
adc
scas
mov
loopne
inc
inc
inc
sub
shlb
sbbl
ss
les
stos
test
xchg
int3
fs
scas
mov
cmp
jl
mov
imul
mov
and
or
pop
int3
stos
xor
lea
adcl
rclb
out
pop
les
test
adc
dec
das
addr16
sub
jecxz
pop
dec
cltd
sub
loope
mov
insl
mov
lret
cmp
sbb
inc
stos
lds
mov
sar
inc
pop
pusha
in
adc
push
jmp
in
sub
sub
fildl
repz
adcl
xor
loopne,pt
test
sbb
shll
push
rcll
inc
dec
xor
shl
xor
mov
jmp
xor
push
aad
jno
push
push
out
in
fnsave
push
and
insl
insb
push
cmpsb
movsl
cmp
cmp
dec
pop
jb
fstpt
das
repnz
jmp
jbe
cmpb
pop
scas
insb
dec
fcompl
mov
adc
push
cmp
push
fwait
mov
icebp
adc
ror
lcall
lock
decl
push
pop
jo
and
adc
jle
xor
xchg
ja
sti
out
repz
push
mov
in
cmpsl
adc
out
iret
mov
sarb
pushf
inc
scas
inc
mov
inc
xchg
jecxz
outsb
xor
notl
outsl
out
es
mov
std
xchg
clc
xchg
dec
dec
mov
mov
sbb
imul
pop
fstpt
push
rcrl
jmp
ret
insb
loop
subb
mov
hlt
inc
pop
mov
dec
sbb
dec
stos
mov
loope
lret
cmp
out
mov
fs
aaa
popf
xor
mov
cmpb
repnz
int3
xchg
mov
out
nop
lods
xchg
pop
fidivrs
xchg
outsb
lods
and
lods
repz
cmp
jmp
inc
dec
and
aaa
lret
push
push
test
mov
mov
mov
and
out
mov
dec
push
movsl
or
mov
mov
add
jno
jne
push
mov
cwtl
stos
fldcw
cmp
jmp
imulb
add
into
fistpl
cmp
mov
cwtl
add
fcmovnb
adc
xor
dec
outsb
mov
lods
mov
mov
adc
sub
or
adc
shrl
cmp
push
pop
mov
sub
iret
pop
into
test
push
push
xchg
pop
loopne
sbb
clc
mov
cmp
xchg
mov
pop
lret
rcrl
xchg
lcall
rorl
hlt
adc
add
or
push
ficomps
imul
test
mov
int
xor
lcall
sbb
xor
mov
sti
mov
jnp
clc
outsb
rcl
mov
rolb
mov
aas
add
mov
dec
and
dec
shlb
mov
mov
adc
sub
dec
repz
xlat
das
adc
sub
adc
xchg
movb
data16
and
or
std
sub
je
sub
rclb
cmp
mov
les
cltd
ja
dec
adc
add
outsb
jge
out
sahf
bswap
or
cmpsl
movsl
mov
loope
add
ja
cmp
ret
sbb
or
sbb
hlt
push
cmp
arpl
jge
or
pusha
jmp
std
sbb
pop
call
daa
fnsave
add
shrl
sbb
rol
adc
or
push
cmp
gs
inc
push
jmp
test
pop
pop
lock
ret
cmp
in
cmp
cld
movsl
pop
mov
rorl
inc
fimuls
loope
repz
cmp
push
push
pop
je
cmpsl
mull
sub
out
test
clc
not
cwtl
clc
dec
and
out
pop
aaa
push
pop
inc
inc
cli
lcall
in
stos
repnz
xchg
cmp
jle
mov
cmpsl
faddp
std
jno
push
pop
test
push
dec
int3
lods
fsts
xchg
xchg
stos
movsb
cmpsl
sar
bound
push
xlat
decl
push
inc
push
sub
or
inc
sbb
in
lcall
fmull
popa
mov
mov
sbb
xor
xchg
xchg
mov
adc
dec
push
mov
add
lock
jae
xor
or
addr16
xor
sbb
jmp
and
sbb
xchg
lret
imul
enter
les
test
dec
add
int3
pop
repnz
lods
mov
cmp
mov
in
sub
out
std
popf
ss
and
inc
les
jmp
xor
dec
push
pop
aaa
pop
lods
daa
mov
ljmp
aad
dec
mov
dec
ja
movl
mov
mov
cmovb
jo
sbb
in
aam
add
mov
outsl
jo
in
in
daa
add
add
cltd
dec
jne
pop
inc
pop
test
lods
cmp
lods
in
adc
stos
mov
cs
inc
mov
xor
out
mov
pop
jnp
sbb
daa
sbb
rol
push
mov
push
repz
ljmp
jae
divb
popf
jne
dec
sbbb
scas
cmc
loop
mov
lock
push
test
xor
mov
mov
popf
scas
push
push
mov
out
jo
lcall
movsb
call
sub
adc
mov
mov
aaa
or
adc
pushf
jmp
jmp
adc
movsl
into
outsb
imul
mov
cmp
lret
mov
mov
ret
stos
adc
jns
push
and
or
les
filds
pop
dec
push
aam
call
out
sbb
sub
stos
ja
lahf
mov
mov
cmp
scas
js
repnz
pop
mov
pop
jp
jp
sti
mov
jecxz
mov
xchg
pop
outsl
or
cmpsb
jno
fimuls
popf
mov
jg
test
std
lods
mov
dec
cmpsl
enter
sub
stc
mov
lods
aam
or
aam
int3
jle
mov
cltd
nop
pop
sbb
iret
push
imul
xchg
xchg
jg
pop
std
mov
jns
imul
xlat
jno
or
cmc
es
aad
pop
sub
cmpsb
sub
sbb
adc
cmpsb
push
lea
test
push
adc
ds
cli
xchg
dec
scas
xchg
jo
aas
sub
push
push
int
and
mov
lret
leave
push
arpl
pop
jmp
push
jmp
out
dec
outsl
jne
adcl
jbe
repnz
add
mov
outsb
or
icebp
push
push
mov
xor
inc
or
das
outsl
cmp
xchg
add
pop
mov
pop
sbb
dec
mov
push
add
mov
inc
mov
int3
jmp
sbb
xchg
outsl
pushf
idivb
adc
mov
insb
inc
mov
cmc
dec
aas
repnz
jae
push
push
fiadds
adc
orb
jmp
xor
jo
je
inc
mov
clc
sahf
sbbl
test
mov
pushf
adcb
adc
and
invd
sahf
mov
hlt
and
sbb
icebp
addl
jl
repz
mov
and
inc
nop
in
xchg
xchg
or
adc
shl
bound
jmp
ficomps
push
pop
movb
cli
movsb
or
cmpsb
aam
das
andb
cmp
pushf
sbb
adc
cmp
cmp
shll
int3
push
out
insb
in
inc
hlt
addb
sti
movsl
cli
sahf
cmp
data16
rolb
lret
loope
adc
xchg
leave
jnp
xor
mov
mov
out
movsl
or
das
clc
mov
test
jae
push
push
outsb
lods
lahf
adc
inc
mov
fstpl
pushf
cmp
sbb
int3
inc
or
cmp
cmpb
sub
push
push
sbb
lods
out
ljmp
sub
stc
xchg
leave
aaa
sbb
pop
jno
cmp
loopne
jo
out
sub
jns
xor
cs
test
iret
push
enter
push
push
lods
mov
in
loop
add
aaa
rorl
mov
mov
test
and
and
icebp
cmpb
jo
add
lea
movsb
cmp
cs
cli
es
aad
ljmp
mov
stc
xchg
mov
push
das
ret
adc
rcrb
mov
cltd
lret
insl
inc
dec
jl
cmpsb
push
idivb
jno
push
adc
jno
add
mov
mov
adc
cli
nop
push
mov
or
push
aad
mov
lahf
lods
cmc
gs
imull
ds
fildll
mov
rcrl
fistpll
lahf
iret
cmpsb
mov
outsl
pop
xor
aad
and
inc
ss
fdivrl
loopne
loope
dec
jl
adc
cmp
jae
sub
sbb
push
or
call
dec
pop
outsl
jle
loop
sbb
mov
mov
dec
dec
xor
mov
test
aad
mov
xchg
pushf
stc
sub
test
js
mov
mov
xchg
rorl
cs
inc
adcb
mov
mov
jnp
jns
stos
xor
div
lods
repz
stc
push
push
sbbb
andb
pop
notrack
sahf
and
shl
pop
loope
mov
cmpsb
jmp
repnz
push
leave
sub
cmp
or
dec
aaa
xor
jnp
xor
sbb
xchg
mov
inc
xor
loope
lret
add
cli
aas
dec
adc
into
lods
push
lret
shl
lods
stos
cli
jmp
sub
int
shrl
pusha
xchg
add
sub
lods
pop
push
test
push
push
xchg
sbb
push
sbb
sarb
jmp
and
sahf
out
stos
movb
push
mov
hlt
movsl
iret
push
ret
hlt
mov
jle
cld
popa
fildl
lahf
jecxz
inc
jmp
lret
jl
cld
ja
fmuls
test
lods
out
and
or
cwtl
rcl
hlt
xchg
dec
jne
imul
decl
cmpsb
mov
ror
int3
pop
push
repnz
popf
mov
jne
mov
ficompl
xor
call
ss
cmc
icebp
movsl
out
and
fwait
subb
mov
lahf
mov
repz
loop
and
adc
mov
sbb
sti
pop
cmp
mov
popa
enter
xchg
mov
jge
push
mov
dec
std
es
int3
cmpsl
xchg
jno
mov
mov
jg
in
and
jl
sbb
scas
call
jnp
daa
in
push
mov
cmp
pop
aad
lcall
mov
lret
imul
mov
xchg
dec
div
pop
adc
add
js
cs
lock
mov
push
pop
roll
stos
pop
add
mov
mov
jl
fsubs
pop
dec
dec
or
imul
loop
push
mov
jne
in
and
fldenv
push
scas
jmp
js
inc
mov
adc
ja
imul
sbb
jbe
cwtl
mov
xchg
je
or
dec
test
mov
sbb
mov
ret
mov
mov
inc
js
sti
and
xor
pop
loopne
out
inc
dec
cmp
aaa
dec
aam
shrl
xchg
mov
rclb
and
mov
mov
fisubrl
dec
fldz
xchg
push
es
fildll
in
mov
mov
xchg
jno
loop
decb
lods
adc
and
add
sahf
jge
inc
fsub
rcll
cmp
lock
dec
mov
cmp
sbb
and
add
subb
test
xchg
pop
mov
js
jns
or
fdivrl
lods
insl
ret
in
push
dec
mov
ss
dec
push
out
jl
dec
xor
cmc
in
sti
xchg
and
bnd
lock
jg
xor
sub
mov
cmpsl
pop
popf
orb
dec
pop
or
test
xchg
push
jb
mov
scas
and
movsb
subl
pop
ret
push
ret
iret
or
push
mov
push
les
fisubs
push
aaa
xor
cltd
mov
and
notl
rorb
je
push
fmuls
nop
pop
inc
rcll
lods
mov
ja
data16
fsts
jp
in
repz
mov
mov
sti
lods
inc
fbld
in
push
movsb
jl
pop
add
xor
mov
xor
fcoms
andb
mov
inc
repnz
and
leave
das
mov
nop
test
adc
lods
xchg
lock
mov
cs
mov
insb
xor
outsl
jmp
jae
xchg
insl
movsb
fwait
inc
mov
and
cld
test
xchg
dec
loop
or
xor
dec
das
pop
pop
pop
push
rcr
jb
xlat
or
jmp
test
incb
sbbb
xor
nop
mov
or
mov
jecxz
leave
rcrl
repz
jno
lahf
fs
out
enter
call
inc
xor
mov
scas
out
bound
xchg
adc
subb
cmp
mov
fwait
cmp
or
mov
and
out
cmc
fwait
mov
in
jmp
rorb
xor
jecxz
mov
dec
mov
nop
dec
cld
lea
xchg
jne
pop
fwait
or
jmp
mov
sti
sub
aam
test
mov
fsubr
adc
dec
fsubs
addr16
jne
leave
or
mov
addr16
mov
push
cld
imul
mov
mov
sbb
mov
adc
test
inc
cmpsb
int
enter
or
jle
setl
mov
dec
mov
adc
sub
push
sbb
cmp
scas
fisttpll
sub
push
or
dec
rorl
mov
aad
movb
mov
sub
cmp
add
mov
jge
adc
sbb
push
and
inc
mov
mov
in
xor
lret
call
xor
call
fcomps
loope
es
cmpsl
repz
pop
outsl
nop
ja
jle
mov
xchg
test
lahf
inc
es
xlat
jg
pop
icebp
pusha
and
pop
or
orl
repz
fsubr
lock
cmp
outsb
divl
push
mov
or
push
xchg
xchg
jne
push
mov
imul
stc
dec
and
pop
enter
cli
mov
jg
call
push
cmp
or
daa
into
loopne
sub
mov
mov
popf
mov
sub
add
xchg
test
cmpsl
push
dec
fisttps
mov
and
jmp
into
or
push
mov
xor
pop
mov
cld
sbb
inc
outsb
fadd
pop
insl
xchg
sahf
sahf
sub
fistpl
push
adc
imul
fcomi
mov
fscale
mov
in
push
add
hlt
cmp
lods
xchg
sub
cwtl
push
mov
iret
inc
les
mov
and
cli
dec
test
icebp
and
ficoml
pop
cmp
popf
mov
pop
or
inc
lock
dec
pop
dec
dec
sbb
sub
arpl
test
or
sub
xchg
cltd
arpl
popa
add
ljmp
add
jnp
scas
fwait
pushf
xchg
sub
addb
pop
push
dec
inc
mov
mov
mov
fistl
push
int3
pusha
repnz
int3
cmp
push
push
insb
popf
jp
pop
dec
mov
stc
fyl2x
cmp
pushf
xchg
adcb
or
hlt
pop
rolb
jp
ficompl
outsb
adc
inc
mov
lds
arpl
pusha
int3
movsb
popf
mov
pop
add
out
data16
pop
jmp
aam
daa
xor
mov
add
xor
loope
mov
mov
pop
fists
lods
mov
mov
nop
into
mov
push
lret
movsb
mov
jl
aaa
mov
sub
insl
dec
lods
lock
test
sbb
int3
mov
or
icebp
sub
shlb
pushl
adc
mov
testl
pop
negl
std
mov
mov
shlb
lcall
das
adc
add
in
pop
jns
ljmp
pop
inc
sbb
es
adc
lcall
imul
mov
sub
pop
xor
in
arpl
sti
clc
inc
cmp
push
xchg
push
dec
mov
or
pushf
inc
bound
outsb
cmp
jb
aam
icebp
loop
dec
loop
test
inc
sub
movsl
mov
mov
pop
loope
jp
int3
fistl
mov
loope
shlb
inc
fstl
mov
and
es
ljmp
cld
xchg
adc
ds
nop
jge
push
out
ficoms
into
or
aas
push
jb
aad
js
dec
pop
js
mov
pop
cwtl
std
push
push
push
jno
and
je
xor
jmp
scas
mov
xchg
inc
push
scas
cld
pop
mov
adc
adc
pop
pop
rclb
ret
cli
gs
xlat
data16
dec
pop
inc
cmp
or
insl
jo
xchg
fisubl
cwtl
xchg
shrb
int3
aaa
data16
mov
loope
sub
add
xor
push
push
push
scas
cmpb
pop
sbb
xor
rcll
xchg
outsb
out
pop
hlt
cmpsl
xor
dec
cmc
daa
aad
es
lret
pop
push
addl
test
lock
insb
hlt
xor
push
pop
jb
ds
rorb
jbe
mov
cmp
cli
add
lret
and
and
mov
clc
push
xchg
movb
pop
pop
mov
xchg
mov
mov
idivl
test
lahf
mov
das
dec
rolb
pop
push
inc
xor
dec
dec
pop
bswap
jg
pop
xor
dec
mov
jle
cltd
jle
fisubrs
hlt
mov
sbb
inc
push
imul
ret
lahf
bound
xor
jo
popa
rolb
xchg
dec
pop
mov
adc
decl
dec
jo
dec
mulb
into
es
jns,pt
icebp
scas
jae
push
loop
roll
dec
outsb
jb
inc
cmp
mov
stos
jbe
fdiv
add
hlt
inc
int
jo
jge
push
lods
gs
lcall
fsubl
dec
adc
xor
out
gs
hlt
jmp
jle
jb
jns
push
push
std
mov
push
lock
mov
rolb
and
aam
sbbb
incb
icebp
jge
jo
mov
jne
xchg
adc
sbb
xor
jbe,pn
fnstenv
jmp
cli
cmpsb
std
jecxz
pushf
jbe
gs
cmp
jle
std
pop
jns
into
in
jbe
xchg
jg
cmp
dec
sub
gs
movsl
fimull
orb
add
dec
sub
or
lods
fxch
sbb
data16
inc
sbb
inc
sub
rorb
nop
or
dec
xchg
xchg
lods
sbb
jns
cmp
inc
pop
leave
jge
push
xchg
add
jg
shrl
push
js
popf
inc
sahf
add
xchg
pushf
add
int3
lds
jl
ret
dec
and
cmp
mov
push
mov
je
jns
xchg
fs
adc
jg
or
cmp
nop
cmp
inc
sbb
jp
or
lods
push
adc
cmp
mov
gs
add
pushf
dec
jno
add
mov
movzbl
inc
add
push
mov
xor
mov
jge
sub
bswap
loop
add
addl
cmpsb
repz
xor
mov
or
in
clc
movsl
sbb
sbb
or
pop
test
sbb
xchg
xchg
into
adc
arpl
mov
or
sub
xchg
mov
inc
gs
stos
loop
cmc
dec
sub
xor
push
inc
mov
push
in
adcl
jnp
outsb
fs
cmc
in
es
xor
push
stos
jmp
mov
cmp
loop
add
aas
ret
aam
stos
faddl
dec
into
mov
xchg
shrb
sub
jb
or
xchg
adc
repz
movsl
imul
or
cld
cltd
mov
cltd
mov
xor
mov
pop
mov
lds
cmp
inc
xchg
add
or
ja
stos
xlat
pop
pushf
lcall
clc
shll
or
xchg
dec
pop
push
push
mov
xchg
mulb
mov
pop
shl
fldcw
xorl
jae
cli
inc
jmp
daa
outsb
jne
divb
xor
sbb
gs
adc
jno
adc
lahf
mov
pop
je
das
test
aaa
lods
xchg
sbb
stos
ds
mov
mov
pushf
mov
cli
and
rcrl
or
sbb
dec
and
in
into
pop
ret
adc
addl
jle
in
pop
cwtl
lods
je
cli
jnp
testl
mov
nop
xor
aas
mov
fcomps
xor
inc
xlat
movd
cmp
stos
inc
xchg
jl
xchg
add
outsl
dec
xor
cmp
addr16
jae
xor
mov
pop
xlat
xchg
dec
xor
jg
test
insb
js
add
mov
cli
enter
xor
xchg
lock
mov
jge
sub
clc
jle
cmp
inc
xor
int3
push
xchg
jno
orb
scas
add
scas
jns
fdivl
dec
and
stos
sarb
xor
xchg
ljmp
push
mov
insl
cmp
cmpl
sahf
mov
fstps
sbb
out
fnstsw
icebp
cmp
mov
pop
in
dec
sbb
add
push
pop
jecxz
scas
sub
lods
clc
jo
sub
out
imul
ja
call
add
stos
pop
inc
cmp
dec
cmpsl
and
or
aam
inc
vmread
movsb
fcoml
cwtl
push
mov
fwait
sbb
dec
mov
cmp
push
jmp
push
dec
push
and
sti
daa
sbb
mov
daa
inc
jg
rorl
into
movsl
lret
mov
xchg
mov
stc
nop
jo
pop
lahf
pop
xor
sti
sub
movsl
pop
jmp
inc
iret
mov
jbe
movsl
mov
ret
lods
inc
aam
inc
mov
mov
testb
cmp
mov
les
inc
cld
fsts
addl
add
inc
jg
mov
pop
repnz
cwtl
pop
mov
subps
mov
fisttpll
data16
lds
push
aaa
dec
outsl
inc
jle
fsts
mov
jns
ljmp
sub
push
sub
cli
into
xchg
imul
xor
loop
out
mov
sbb
cs
push
stc
mov
and
jne
shll
loope
mov
pop
mov
push
mov
mov
cs
stc
xor
mov
xchg
or
rorb
xchg
cmp
dec
repnz
mov
inc
scas
popa
push
pop
xchg
out
push
shlb
mov
lret
movsl
in
xchg
cmpl
jmp
outsw
int3
cmc
jecxz
into
test
mov
mov
fidivrs
push
loop
das
xor
xor
sbbl
roll
add
sbb
add
adc
dec
imull
push
xor
and
or
mov
push
sub
sbb
push
inc
push
lret
inc
xchg
jge
cld
fdivrl
jge
mov
mov
mov
jae
fcoml
sbb
mov
add
sbb
mov
jl
xor
xchg
lea
pop
lret
xchg
shl
cmpsl
out
xchg
push
sbb
fcmovnu
inc
sahf
call
or
lds
rcrl
lret
fisubrs
fdivrl
movsb
inc
jl
adc
repnz
add
dec
dec
jge
xchg
xchg
ja
inc
icebp
mov
stc
lcall
add
addl
int3
out
or
repz
inc
adc
xchg
aam
or
jecxz
xchg
or
fidivl
daa
repnz
dec
stc
stos
testb
xor
loop
shr
cld
pop
ds
dec
shr
mov
int
test
add
add
jb
popa
xor
sbb
pop
popa
cwtd
cmp
push
cmpsb
dec
lock
adc
stos
mov
inc
xor
pusha
adc
or
or
sub
lret
inc
stos
cs
push
jmp
sub
push
pop
xor
xchg
cli
loope
jae
cmpsb
movsl
jg
push
push
lret
jecxz
iret
push
xchg
scas
sub
outsb
sub
mov
nop
dec
cmp
xor
dec
and
scas
xor
xchg
mov
hlt
mov
sub
inc
fcoms
mov
icebp
add
mov
and
lcall
ss
addr16
scas
loop
xor
sbb
mov
int
or
gs
add
push
insb
in
in
push
fwait
lret
aas
cmp
dec
push
out
xchg
mov
add
xchg
sti
loop
add
cli
cltd
pop
movsl
sub
rcll
stos
jecxz
ss
in
test
sub
pushf
popf
ret
cli
popf
int
cwtl
jmp
shrl
fists
xchg
aam
in
cmp
push
or
sub
dec
mov
sti
jns
fisubl
loopne
xor
in
cmc
mov
lods
sub
popa
pop
xor
push
inc
and
movsl
ficomps
push
dec
sbb
cld
mov
mov
inc
cmp
inc
rolb
out
mov
mov
jno
lcall
xchg
cmpsb
inc
push
aad
xlat
dec
cs
aam
test
jg
bound
test
add
and
and
cli
popf
shrl
or
pop
clc
shr
imul
xchg
add
js
xor
pop
xchg
mov
mov
test
call
pop
adc
push
pushf
std
fstpt
fidivl
in
and
incl
sbb
dec
mov
pop
outsl
into
add
jb
cwtl
lock
ds
and
inc
or
add
add
call
clc
cmc
shl
lock
mov
jbe
mov
pusha
push
test
cli
inc
clc
out
cmpsl
cmpsb
sbb
sarl
xor
mov
sub
inc
call
sahf
xor
inc
dec
push
xor
adc
mov
and
jno
jmp
cmp
jo
or
dec
test
daa
and
mov
adc
rolb
lahf
lahf
cmp
lea
sub
jmp
nop
cmpsb
and
cld
out
add
mov
dec
mov
xlat
push
jns
xchg
and
in
dec
sbb
sbb
test
out
pop
mov
mov
popw
lcall
and
aad
jbe
test
scas
cmp
sub
xor
sbb
int3
or
sub
cli
loop
in
sarl
div
das
jmp
out
push
xchg
mov
push
aas
aaa
mov
and
lock
sbb
mov
iret
or
jnp
mov
sbb
hlt
gs
sbb
pop
mov
shl
mov
lods
or
rorb
mov
lcall
sub
into
add
dec
push
sub
pusha
icebp
lret
jb
xor
mov
out
adc
int
cmp
mov
sub
lret
push
std
mov
mov
int
outsl
adcl
loope
ret
lods
dec
popf
test
stos
push
sbb
and
enter
mov
cwtl
push
jmp
and
cmp
fldcw
add
add
jge
iret
ror
xchg
out
jge
fidivs
lds
std
adc
icebp
popf
xchg
mov
pop
imul
repz
hlt
xorb
push
push
jno
sahf
inc
fimull
cltd
loopne
jmp
sub
xorl
call
decb
jmp
scas
push
mov
cmp
and
lret
push
mov
sub
mov
in
loope
into
pop
out
dec
cmp
aam
ret
arpl
jb
aaa
or
mov
add
add
adc
jo
xor
mov
or
fisttpl
push
insb
push
mov
lea
mov
fdivr
xchg
stos
mov
test
imulb
inc
popf
sub
mov
mov
jp
shrb
leave
or
mov
push
rcl
insb
push
mov
roll
in
inc
or
sbb
nop
test
loope
jmp
inc
xchg
jge
stos
cmc
inc
xorb
in
imul
imulb
leave
je
fcomps
mov
cmpsl
jns
fcomps
repz
ja
push
cmp
sbbb
les
push
jp
pop
rclb
rcll
cmpb
xor
or
xchg
lcall
pop
jnp
mov
xchg
out
lock
loope
xchg
mov
out
adc
aas
push
mov
leave
hlt
js
cmpsb
cltd
loopne
mov
and
push
adc
cmp
sbbl
adc
mov
inc
out
ror
and
scas
inc
xor
pop
repz
testb
dec
cmp
notb
cmp
inc
ret
jb
push
or
mov
pop
lds
mov
stc
je
bound
cli
mov
adc
push
dec
and
mov
sbb
xchg
dec
xor
addr16
adc
push
imul
add
jnp
and
rorb
inc
push
cmc
push
idivl
push
mov
incb
lea
xor
pusha
sbbl
and
movsb
or
lods
insb
rcl
inc
cmpsl
les
mov
add
and
std
lret
sbb
aad
mov
adc
jmp
mov
lods
cmc
cwtl
xchg
jecxz
lock
and
repz
mov
sbb
xor
pop
lahf
mov
mov
shrl
dec
or
hlt
fldcw
sbb
xchg
dec
andb
inc
scas
cli
stos
pop
icebp
iret
jno
and
loop
daa
cmpsb
repnz
rcll
add
pop
or
fisttpll
addr16
mov
push
or
xorl
pop
out
jg
lods
mov
jge
and
in
cmpsl
lea
movsl
out
inc
pop
lds
xchg
aaa
jecxz
cltd
les
inc
cmp
sub
shlb
mov
test
cmc
pushf
pop
jne
xor
mov
xlat
or
sbb
into
clc
test
push
cmp
and
add
mov
cltd
mov
movsb
jne
adc
testl
das
adc
outsl
or
fwait
orb
jle
xchg
cmpsb
cmp
or
mov
push
imul
cmp
insl
mov
in
cltd
fcmovnb
lock
inc
testl
add
jg
cld
or
cld
mov
cwtl
ret
pop
push
cli
push
pusha
daa
xchg
inc
fcmovb
movsb
mov
jae
jmp
jnp
cs
inc
mov
loop
pop
mov
inc
lds
ds
adc
mov
jne
push
outsb
lret
and
xchg
xor
loopne
mov
and
push
sbb
nop
mov
mov
xchg
and
mov
xchg
jo
fadds
fnstenv
xchg
inc
movsb
cmp
dec
cmp
pusha
mov
mov
scas
xor
les
frstor
flds
fists
ret
cmc
push
cltd
add
mov
stos
test
es
mov
shll
clc
and
mov
cli
lock
iret
rorb
popa
lods
repnz
cmp
xlat
sbb
popf
and
pushf
xchg
sbb
xchg
inc
cmp
jne
push
pusha
mov
sahf
mov
add
fwait
and
push
and
lahf
js
sbb
xor
lret
mov
in
add
dec
arpl
jae
fiaddl
lret
dec
pop
push
jno
cwtl
push
pop
mov
mov
dec
pop
sbb
jae
movsl
cmpsb
out
xor
push
int
cmc
push
xor
arpl
sbb
add
mov
dec
jb
inc
push
inc
jl
int
shlb
cmp
stos
dec
dec
imull
cmpsl
cmp
fcompl
inc
outsl
fs
inc
out
ffree
dec
dec
and
aas
inc
push
inc
imul
leave
inc
inc
sub
fdivrl
fstp
jl
orb
fnsave
xchg
lea
add
sub
mov
inc
mov
xor
jno
int3
or
or
rcrb
xor
and
xlat
fistpl
sbb
inc
mov
jae
pop
call
mov
mov
leave
imul
add
rol
stos
pop
adc
add
xor
dec
xor
gs
mov
dec
and
sub
adc
push
jecxz
addr16
sub
mov
aas
je
js
inc
mov
inc
lods
scas
cmpl
call
mov
dec
push
mov
sbb
push
sub
insb
repnz
shl
subl
mov
es
sub
sti
mov
mov
test
clc
mov
gs
pop
inc
dec
pop
push
stc
sub
lret
cmp
aam
jg
addr16
or
inc
add
xchg
push
mov
cmp
xchg
push
aad
mov
mov
mov
adc
scas
cmp
pop
repnz
jo
mov
inc
test
shll
and
add
repnz
stos
les
inc
in
into
sub
inc
adcl
or
lods
hlt
sub
sbb
sub
test
add
int3
sub
loope
mov
mov
push
and
sbbb
inc
and
sub
mov
add
jne
mov
lods
pop
mov
sarb
mov
add
push
inc
sub
jg
fucomi
dec
mov
add
and
stos
enter
sahf
dec
insl
insb
inc
lret
in
movsl
xor
lds
loope
xor
cld
insl
pop
lret
dec
jle
imul
test
ja
cmpsl
cltd
outsb
lds
call
adc
add
subl
dec
gs
mov
mov
and
fwait
test
jg
lods
notw
mov
add
jmp
sarl
adc
loop
cmp
jl
stc
filds
sub
sahf
lea
and
nop
jl
in
test
pusha
or
mov
add
popf
push
clc
push
nop
imul
dec
into
and
and
or
mov
sub
repnz
sbb
inc
pop
lret
fldt
call
push
sbb
cmp
test
jl
data16
clc
jno
jbe
jae
arpl
pop
jmp
or
jnp
ds
bswap
out
cltd
fwait
pop
outsb
imul
cmp
push
clc
sub
ret
add
mov
test
mov
les
push
push
fcmove
pop
jae
lock
filds
add
rcrl
js
test
jecxz
ficompl
jne
mov
mov
sub
pop
push
jle
in
add
mov
out
roll
jne
nop
push
or
pop
in
js
push
add
add
dec
jne
mov
lods
jb
movsb
adc
call
mull
xchg
cmp
xchg
or
pop
cmp
or
repz
scas
mov
dec
mov
ja
xchg
cmp
int
pop
xchg
popa
xchg
mov
fwait
sub
dec
dec
test
pop
push
mov
dec
cmp
or
jno
lods
cmpsl
sub
push
jo
lret
into
cmp
lahf
mov
cmpsl
and
mov
pop
fisttpl
arpl
clc
in
or
mov
call
push
aad
std
jge
push
out
push
cmp
loope
ss
fwait
pop
sbb
jmp
jmp
scas
lock
loope
mov
sti
es
sbb
push
jb
and
mov
sti
dec
push
movsb
icebp
notl
xor
jns
jle
sbb
and
lcall
add
jmp
test
dec
push
jmp
loop
mov
sub
xor
pushf
adc
jo
fcmovbe
mov
addb
arpl
out
mov
add
pop
mov
fstpl
add
ds
inc
lret
push
push
scas
mov
repz
sahf
popf
ja
in
lcall
les
fbstp
bound
pusha
movsb
cmpsl
out
push
mov
fcomp
aad
pusha
test
mov
ret
mov
aam
out
jle
inc
mov
ss
aaa
sbb
cs
repz
mov
jb
inc
dec
xlat
testb
push
pusha
inc
and
xchg
cli
mov
movsb
push
or
jbe
mov
pop
mov
adc
pop
in
adc
or
add
inc
sub
btr
dec
mov
cwtl
rolb
inc
adc
roll
add
or
jb
cltd
mov
repz
push
sti
movsb
loopne
pop
gs
mov
add
scas
xor
hlt
aas
push
xchg
fstpt
scas
es
repz
inc
sub
dec
in
in
leave
mov
stos
ds
int3
mov
imul
inc
mov
insl
or
gs
lea
incl
movsb
pop
push
nop
cwtl
dec
test
pop
xchg
fidivl
fidivrs
jecxz
in
ja
pop
jnp
ds
add
xchg
or
inc
jne
mov
insb
loop
idivl
dec
out
shll
repz
sub
cmp
push
dec
jno
adcl
jecxz
cmp
ja
sbbb
stos
in
stos
in
add
fidivrs
dec
std
aaa
aam
fs
and
lock
push
ja
addr16
mov
fs
inc
ror
mov
sub
jne
mov
sbb
ja
addr16
jle
add
shrb
lahf
push
add
xor
cmpsb
mov
dec
inc
ret
fdivl
scas
gs
insl
fists
pop
loop
mov
inc
cmc
icebp
dec
mov
repnz
mov
push
cmp
into
lods
and
pop
and
imul
aaa
test
ja
cmp
add
sarl
movsb
pop
push
jnp
fmuls
loope
dec
sub
or
out
cld
idivb
cli
ffreep
and
inc
mov
sbb
jg
rolb
inc
mov
jp,pt
or
xor
in
sarl
inc
mov
xchg
xchg
xorl
and
sbb
aas
jge
mov
insb
sbb
cmc
mov
mov
jbe
dec
sbb
mov
inc
jmp
es
inc
cwtl
add
xchg
addr16
outsl
cmp
into
sbb
or
mov
and
xor
cli
movsb
movsb
xor
aad
leave
push
pop
in
and
cmp
aam
psubusb
pop
cmpsb
movsb
adc
and
jl
xor
jg
sub
and
loop
aad
adcl
jg
cmp
sub
dec
mov
jo
pop
test
popf
or
mov
pushf
mov
into
scas
add
rolb
xchg
pop
mov
stos
imul
sbb
mov
lock
mov
xchg
shll
sub
pop
imul
les
or
cwtl
or
lock
outsb
sub
and
ud0
push
out
nop
js
push
inc
int
add
sarl
test
xor
cmpsb
push
out
inc
test
scas
bound
stc
ss
insb
or
aam
or
je
inc
les
mov
test
lods
dec
cmc
rclb
lea
ss
mov
ljmp
inc
enter
lahf
mov
mov
cld
jb
mov
adc
sbb
mov
out
push
sub
dec
lds
jo
dec
outsb
add
out
cmp
sub
and
and
xchg
add
movsl
inc
xor
lock
push
mov
xor
push
or
dec
jmp
mov
into
movsl
mov
pop
call
or
daa
das
mov
cmc
dec
mov
sbb
lds
fildll
lods
repz
adc
xchg
or
push
jge
lret
mov
ja
ja
mov
sti
pop
dec
cmpb
add
test
lret
mov
jp
xchg
nop
cmp
je
xchg
and
test
rcrl
cmp
pop
outsl
add
outsb
mov
mov
inc
frstor
and
mov
fs
out
mov
test
bound
cld
rcrl
jb
loop
xor
hlt
js
xor
add
das
jecxz
mov
pushf
add
repnz
imul
rcrb
mov
mov
imul
jle
mov
dec
pop
int3
test
push
lcall
fwait
mov
dec
aas
das
addr16
push
jo
xchg
xchg
xor
sbb
cld
mov
xchg
enter
push
ds
adc
lea
icebp
ljmp
mov
xor
xchg
loop
sub
out
pop
dec
sbb
pop
mov
out
add
test
mov
in
xor
pop
mov
dec
adc
fistpl
in
jns
xor
jno
dec
das
mov
push
add
push
repnz
mov
or
inc
ljmp
stos
sub
push
dec
pop
adc
jb
movsl
les
mov
mov
cmp
les
movsb
push
sub
ret
jae
jno
sub
repz
in
or
fdivrl
repz
dec
fidivl
stos
jmp
push
mov
arpl
mov
adc
cmp
or
clc
out
mov
mov
imul
rclb
push
cmpsb
mov
aam
addps
test
ret
fiadds
jp
push
je
ss
push
cmp
and
pop
sub
lahf
es
mov
test
cli
repz
xchg
lret
lcall
imulb
dec
xchg
insb
xor
and
mov
xor
test
inc
push
xchg
arpl
push
arpl
int
inc
in
push
leave
out
imul
hlt
dec
and
gs
dec
xchg
pusha
mov
icebp
mov
mov
xchg
fbstp
xlat
push
aam
push
je
movsb
sbb
addr16
jnp
sbb
sub
adc
outsb
mov
mov
sub
pop
inc
xchg
testb
xor
js
gs
ficoml
sub
ficoms
pop
dec
push
daa
psubsb
lock
adc
add
and
cwtl
lock
fisubrl
outsl
js
test
daa
scas
or
inc
cmp
mov
out
push
xor
gs
cmp
sub
outsl
add
mov
sbb
mov
xor
pop
adc
mov
cmp
jl
jmp
push
shrl
int3
jnp
jle
cmp
push
mov
jnp
rorl
rolb
clc
scas
sub
add
jae
daa
adc
std
mov
mov
aas
push
orb
sbb
cli
jge
lods
enter
das
nop
cmp
inc
jge
imul
test
inc
ds
or
cmc
roll
aaa
sbb
test
leave
mov
dec
mov
jbe
cmp
jmp
sti
test
inc
int
sub
mov
movsl
or
int3
sbb
xchg
jl
call
nop
dec
or
lds
aaa
xchg
mov
and
xchg
adcl
ljmp
in
push
xor
dec
or
jo
xchg
sub
push
shl
inc
call
mov
dec
loopne
pop
fidivl
jp
mov
push
and
aad
add
jg
push
jge
xchg
or
js
cmp
stc
addl
cmp
push
jo
pop
int3
pop
fnstcw
pusha
insl
push
or
sbb
pop
and
mov
int3
imul
add
and
sub
xchg
aas
shl
mov
dec
ja
xchg
aad
push
jb
cwtl
sbb
dec
push
scas
and
in
sarl
cmp
lcall
add
cmp
call
sbb
pop
jmp
dec
fwait
aam
ja
lock
xchg
cmpsl
aas
lds
add
idivb
rcrb
mov
mov
int3
mov
cmp
rorb
lea
xchg
jns
addr16
mov
ss
fst
scas
jp
lods
pop
ds
lcall
js
mov
dec
mov
push
xor
mov
pop
ds
xchg
leave
push
mov
fistps
call
sbbl
lret
cmp
mov
ljmp
dec
dec
addb
sti
sbb
mov
popa
sbbl
sub
and
scas
jl
jmp
xorb
lret
mov
stos
xchg
das
sub
xchg
fisubrs
fldt
cmp
in
imul
mov
mov
in
inc
push
inc
shll
fwait
add
sbb
or
xor
xchg
sahf
xchg
push
adc
aas
or
cld
jns
push
jmp
fsubrl
mov
cmpsl
mov
pop
jecxz
cli
xchg
push
cmp
mov
lahf
push
push
and
fisttpl
mov
mov
mov
jmp
es
mov
xor
mov
cltd
into
addr16
ljmp
mov
aas
pop
push
mov
xor
out
rol
adc
shll
aas
rcrl
adc
jbe
mov
push
ficoml
adcb
push
jo
or
daa
xorl
aas
cwtl
int3
and
int
lock
in
fstps
lock
xchg
push
mov
stc
push
out
or
cmp
add
jp
lret
adc
sahf
push
adc
lds
ds
sub
lods
jp
xor
ja
cmp
mov
in
fists
pop
loop
test
xchg
cmp
mov
jg
enter
sbbb
xchg
and
or
xor
xchg
xchg
jns
decl
mov
push
mov
jns
mov
push
out
pop
loop
jge
pop
fs
lods
xor
loop
push
inc
jmp
imul
or
data16
ss
sub
subb
jo
xchg
out
fbstp
mov
push
jnp
or
test
sub
lcall
cmp
push
and
lahf
push
in
fistps
jmp
add
jecxz
daa
sbb
jns
mov
pop
lahf
scas
sbb
sub
outsb
imul
xchg
dec
and
push
cld
pop
xchg
sub
cwtl
xchg
or
movsb
leave
sahf
imul
out
sar
seta
push
js
pop
xchg
test
negb
mov
daa
cmpsb
jno
jmp
rcll
jo
pop
mov
jb
leave
insl
outsb
pop
jle
cld
inc
inc
aas
or
subl
push
cmp
and
outsb
push
sbb
test
pop
or
in
inc
sub
lcall
test
sbb
sbb
nop
add
lods
jle
push
cmc
leave
jo
and
cmp
mov
inc
addr16
addl
int
cmc
sbb
sbb
iret
pop
shl
popf
mov
imul
fwait
aaa
outsl
paddq
testb
idiv
cmpsl
and
popf
or
adc
sbb
mov
shlb
add
int
sub
dec
cld
fwait
pop
ja
sti
add
test
in
clc
mov
mov
lods
push
jo
cmpsb
stos
daa
push
lds
inc
xlat
decb
movsb
mov
lods
push
aas
jecxz
push
hlt
mov
xor
pop
clc
lods
sub
xorl
repz
arpl
loope
cli
or
pop
pop
test
mov
hlt
jecxz
mov
jle
aas
cli
fisubs
ret
sbb
and
jp
inc
rolb
sti
xchg
add
push
push
test
fisttps
jmp
mov
sahf
dec
mov
sub
scas
pop
insl
xorb
sub
xor
out
pop
sti
addr16
or
and
loopne
or
lods
sub
insl
pushf
mov
push
stos
pop
add
push
jge
into
in
jo
mov
je
add
mov
xchg
adc
cmp
in
lods
inc
sarl
jg
xchg
pop
xor
ja
jg
xor
lcall
fstpt
cmp
pop
pop
mov
xor
ljmp
or
fsub
arpl
nop
mov
jo
test
mov
repnz
xor
in
push
iret
and
xchg
imul
cmpsw
pusha
ficomps
mov
sub
mov
and
and
adc
push
mov
mov
aad
push
adc
pop
ja
adc
and
imul
dec
or
xor
lret
call
jle
sub
sub
or
mov
mov
mov
adc
xchg
repnz
mov
rol
movsl
inc
test
add
pop
cs
or
and
xor
jg
cmpb
arpl
mov
insl
mov
seta
adc
xor
adc
push
mov
inc
xor
xchg
cmc
sub
in
sar
mov
subl
cltd
and
fsubr
mov
rcr
call
mov
insl
nop
cmp
jae
insl
jo
add
aaa
mov
jae
push
repz
pop
out
inc
imul
xchg
int3
xchg
cmpsl
xor
push
mov
or
dec
aas
jp
add
cmp
xchg
xlat
pop
roll
aad
insl
jns
xorb
xchg
or
mov
aas
jle
test
and
and
lds
push
and
icebp
sub
or
lea
xchg
jmp
mov
loop
inc
jbe
std
or
rorb
push
pop
or
leave
adc
call
pop
push
or
es
out
inc
xlat
fwait
mov
mov
xorb
mov
pop
mov
mov
pop
or
sbb
pop
adc
fstl
ja
dec
jg
les
test
enter
fdivrp
test
sbbb
xchg
jns
inc
jle
adc
mov
in
sbb
movsl
sarb
mov
lahf
fisttpl
jo
push
mov
popf
sbb
iret
mov
sub
cmp
adc
shl
out
inc
movl
cmp
cld
cmp
ja
cli
adc
icebp
cs
jge
lods
in
cltd
divl
adc
pop
insl
sbb
subb
mov
in
ja
ja
js
mov
imul
sub
into
rorl
aam
mov
imul
call
test
mov
out
xor
add
int3
push
xor
in
jl
xchg
sbb
sbb
push
lock
imul
sub
adc
cmc
inc
jecxz
mov
daa
mov
shll
push
push
sbb
ret
mov
mov
cmp
mov
repnz
ret
fcompl
testb
arpl
orl
fisubrl
mull
bound
scas
xchg
cs
enter
lcall
lret
adc
fildl
ftst
cwtl
pop
into
cwtl
dec
mov
jp
sub
xchg
repnz
lea
jp
ficoml
dec
mov
movsb
push
clc
mov
mov
cmp
pop
and
std
jl
out
inc
gs
lods
lcall
cmp
ret
cwtl
sbb
push
and
sbb
push
je
pop
add
test
idivl
dec
pop
mov
push
push
gs
stc
out
test
xor
in
push
dec
rorb
mov
aaa
xor
sub
mov
mov
mov
mov
pushf
and
mov
push
cld
pop
and
fisubs
xor
dec
adc
mov
add
fldl
mov
mov
sbb
pop
xchg
pop
repz
push
and
push
cmp
sub
push
mov
xor
addl
or
mov
shr
mov
jae
fisubrs
mov
nop
lret
xchg
out
mov
dec
sahf
movq
mov
cmpsl
mov
sar
mov
out
mov
lock
outsb
add
or
cwtl
mov
xor
mov
pop
or
pop
dec
imull
pop
out
push
imul
mov
mov
sbb
rol
fdivs
ret
sbb
cwtl
push
xchg
push
or
popf
mov
test
fsubl
pop
xor
mov
xor
cli
rcr
or
pop
push
test
xor
cmp
pop
inc
mov
ret
or
cmp
sbb
jecxz
adc
cs
inc
push
jbe
daa
cmp
add
loopne
pusha
jae
loope
cmp
hlt
sbb
je
js
mov
mov
testl
fldpi
shlb
sub
sub
fwait
xchg
mov
int3
sahf
stos
or
xchg
cmpsb
movzwl
pop
test
fcomp
xchg
fidivrs
adc
sbb
test
dec
xchg
add
cmpsb
jo
mov
out
bound
inc
sbbb
xchg
in
cmpsb
es
inc
and
outsl
test
stos
mov
fwait
add
push
xor
pop
mov
lret
enter
or
test
adc
aam
xlat
or
out
add
xchg
shlb
shll
cmp
cld
lret
outsl
outsl
mov
pop
xchg
outsl
std
ret
ret
int3
sbb
mov
adc
rcll
dec
pop
mov
cmc
sub
sbb
dec
add
push
and
mov
and
push
sub
pop
push
push
into
jl
adc
aam
jbe
dec
jno
cmpsl
jl
insl
or
aaa
pushl
xchg
jle
fwait
roll
or
add
cmp
mov
mov
mov
dec
je
and
pop
popa
ret
leave
les
inc
push
mov
lret
fistps
cld
sub
cmpsb
decl
cs
push
adc
dec
xor
scas
mov
mov
scas
xchg
cmp
mov
in
or
jmp
mov
xchg
pop
and
into
xlat
icebp
mov
pop
es
test
sub
push
roll
lods
ja
dec
aas
mov
sbb
jo
insl
mov
cmpsb
aaa
jmp
call
mov
push
xor
sub
mov
insl
fcomps
xor
unpcklps
ficomps
lret
mov
sbb
xchg
inc
rcll
mov
rcll
mov
add
mov
movsl
pop
sbb
outsl
or
sbb
cmp
jge
pop
and
out
imulb
jns
bound
pop
pop
fcmovnb
mov
outsb
sub
push
jmp
stos
push
cmpsl
pusha
jno
push
test
popa
or
arpl
sub
mov
inc
mov
cmp
lds
jg
repnz
mov
sarl
sarb
jb
xlat
adc
sahf
popf
fs
sub
movsl
xchg
out
jae
in
xor
dec
addr16
into
cmpsb
fmull
add
cs
push
xor
mov
adc
xchg
sarl
pop
xlat
scas
outsb
inc
mov
mov
and
popf
scas
mov
jne
inc
outsb
jne
cmp
out
mov
sbb
fwait
pop
push
jne
jne
pop
jb
xor
adc
dec
addb
js
jb
pop
cmp
adc
rol
add
inc
xchg
add
and
out
rolb
xor
mov
push
in
sbb
lods
and
fwait
jle
icebp
mov
outsl
daa
add
add
add
xor
sbb
clc
cmp
push
mov
jo
mov
xor
iret
enter
push
cmp
cs
and
addb
cmp
cmc
dec
out
mov
jns
loop
loopne
sbb
xchg
xchg
push
push
out
arpl
xor
pop
pop
ret
mov
addr16
into
jbe
add
xchg
rclb
and
int3
sbb
pusha
pop
mov
lock
xchg
fbld
dec
jle
rcrl
and
add
cmp
repnz
ret
jle
push
mov
dec
pop
outsl
and
mov
arpl
inc
mov
popa
cmp
xchg
jns
push
jle
outsl
jp
sbb
pushf
dec
dec
es
xchg
push
test
mov
jb
sub
daa
aas
daa
inc
mov
add
sbb
popf
dec
fistpl
lea
jge
mov
addr16
jns
xchg
fdivrl
pop
out
lret
cmp
or
jle
adc
jbe
pusha
mov
roll
push
outsb
pushf
jmp
pop
stos
jns
test
inc
mov
adc
ret
add
jp
dec
lods
mov
addb
aaa
add
fwait
mov
test
ret
in
ljmp
xchg
nop
popf
out
fwait
cmp
or
mov
test
fs
push
push
aas
das
aaa
sbb
or
bnd
or
bound
mov
xlat
enter
pop
xchg
out
pushf
xlat
pop
and
cwtl
mov
or
das
xchg
or
mov
inc
fdivp
sbb
das
push
or
jg
add
jae
loopne
xor
sbb
out
adc
ret
dec
push
adc
xlat
and
mov
lods
inc
repnz
and
sub
repnz
jp
icebp
add
mov
sub
or
aas
rolb
lahf
xor
push
adc
push
jecxz
push
loope
mov
arpl
dec
mov
inc
nop
push
mov
mov
out
test
fs
ljmp
insl
add
iret
xchg
or
jne
and
shl
push
into
inc
pop
scas
imul
addr16
mov
cmp
xchg
push
inc
pop
mov
icebp
lret
dec
push
lahf
scas
hlt
xor
pop
out
shrl
lds
pop
rorl
push
dec
push
push
jp
mov
mov
scas
mov
fisubs
inc
adc
or
fwait
xchg
cmp
fcomip
xchg
pop
fmuls
xor
xchg
or
lods
stos
pop
daa
push
bnd
out
stc
mov
fimull
fmulp
xchg
popf
push
cwtl
test
pop
pop
loope
or
mov
push
test
data16
dec
arpl
fsubr
jnp
ja
dec
xor
fwait
and
dec
mov
mov
daa
aad
or
insl
and
lcall
shrl
into
fnstcw
mov
mov
sub
call
fsubl
mov
cmc
loop
push
jbe
outsb
bound
mov
addl
aaa
gs
or
mov
ss
mov
outsb
mov
mov
cmp
pop
dec
shll
mov
mov
scas
ret
loopne,pn
push
and
xchg
add
add
cwtl
lahf
or
inc
ds
roll
inc
pop
sbb
xor
repz
sbb
sti
cld
rcll
cltd
inc
cmpsb
scas
ljmp
mov
sub
mov
mov
sarl
inc
fs
fidivl
jae
mov
mov
ret
in
insl
jmp
jl
push
mov
call
xchg
addb
mov
pusha
popa
rolb
cs
scas
mov
xchg
fsubrs
xor
add
add
int
or
std
sub
idivb
push
push
xchg
xor
out
shr
inc
sub
pop
dec
jg
or
mov
cmp
out
xchg
jne
sbb
jmp
sub
push
jmp
ret
subl
sub
mov
es
fsubs
sbb
or
xchg
scas
or
and
sub
xchg
mov
repz
iret
cltd
and
and
stos
xchg
cmp
inc
outsl
push
sub
jns
mov
aaa
or
lret
lahf
inc
data16
mov
and
push
stos
mov
popf
push
das
xorl
enter
ds
fisttps
xchg
jo
xchg
imul
movsl
decb
fs
int3
imul
kmovb
adc
jle
bnd
out
jp
jmp
xor
mov
pop
test
mov
dec
in
lds
adc
jge
jo
hlt
popf
pusha
push
aad
std
sub
lret
jmp
out
aam
je
rorl
mov
les
mov
out
adcl
add
pop
cmc
mov
shrl
jo
mov
sub
hlt
fsubs
xchg
hlt
in
dec
xor
jnp
xchg
aad
mov
or
add
cmc
mov
insb
mov
jmp
rcrb
stos
stc
push
xor
or
and
cmpsl
imul
inc
adc
mov
jecxz
sbb
sub
add
stc
inc
fmull
jae
fsts
jb
inc
sub
movsb
xor
cmp
jb
enter
inc
daa
or
jb
sarl
push
sbb
mov
push
mov
xor
dec
sbb
je
push
push
push
push
cmpsl
sar
lds
xor
notl
xchg
jp
cmp
push
js
jns
gs
sbb
adc
or
enter
cld
mov
inc
dec
ret
or
xchg
call
jae
adc
mov
or
fists
call
mov
cmp
movsb
jl
mov
arpl
fwait
and
adc
jmp
idivl
mov
push
cmpsl
lds
dec
xchg
adc
and
sbb
xchg
dec
adc
clc
shl
fs
lahf
xorb
lds
loop
adc
loop
push
cmp
mov
sbb
adc
sub
aas
mov
and
imul
xor
aam
pusha
mov
adc
or
lods
mov
and
xor
movb
ds
jbe
daa
outsb
jl
out
dec
cmpsl
add
inc
add
and
or
sbb
cmp
stc
repz
icebp
jp
xchg
lods
loopne
push
pop
imul
jl
aaa
mov
mov
loopne
out
movsl
pop
sahf
xchg
or
inc
int
dec
cli
mov
xor
dec
bound
pushf
ja
pop
icebp
aas
int
mov
jl
mov
jo
or
adc
dec
jno
mov
rclb
in
xor
ret
dec
fcoml
jne
loope
popa
jnp
insb
flds
mov
or
cmpsb
dec
je
pop
cld
pop
mov
cmc
sbb
sbb
shlb
cld
sahf
and
insb
jg
inc
cmp
mov
pop
pop
jmp
stos
daa
dec
mov
mov
addr16
into
pop
notb
inc
test
and
mov
jbe
les
inc
scas
add
loop
and
and
stos
addr16
scas
sbb
inc
ja
pop
push
movsl
mov
xchg
sub
add
sub
mov
xchg
mov
inc
ret
cmc
cmc
imul
pop
or
mov
mov
sbb
mov
cmp
sbb
jg
mov
push
out
lahf
inc
leave
psllw
dec
cs
adc
ljmp
data16
in
test
dec
pop
mov
add
mov
push
shlb
movsl
mov
sbb
arpl
sti
cmpsb
loope
mov
stos
cmp
pop
mov
jl
adc
out
rolb
sub
pop
pop
xchg
xor
cmp
lods
sbb
pop
mov
mov
mov
sarb
daa
mov
out
pop
mov
cs
adc
inc
push
inc
sahf
lock
add
xor
arpl
inc
or
mov
les
mov
mov
or
sbb
mov
inc
scas
aaa
jg
rcr
adc
out
pop
inc
fnstcw
mov
sub
jo
xchg
pop
jnp
xchg
adc
add
sub
dec
adc
sub
scas
inc
ds
les
inc
add
mov
ret
jmp
fisubrl
clc
dec
ljmp
data16
push
and
pop
and
fwait
orb
mov
in
jecxz
xchg
or
inc
cmc
incl
jle
xlat
mov
jecxz
xchg
popl
add
cmp
jo
in
sbb
das
inc
jle
sub
in
lahf
or
insl
mov
jmp
adc
mov
push
inc
or
fistpll
push
adc
xchg
mov
lods
out
lahf
ljmp
pushf
imul
xchg
in
and
scas
cmp
mov
dec
jmp
sub
movsl
lret
loopne
jl
add
xchg
shr
test
or
shlb
movsb
rorb
cmp
in
add
sub
ret
jne
fstps
sbb
mov
arpl
dec
cmp
and
cwtl
cltd
insb
cmpb
out
iret
push
int3
jg
ss
in
mov
rcll
inc
mov
dec
sub
inc
push
bnd
insl
add
sub
fstps
sbb
adc
lret
scas
ret
mov
or
push
dec
mov
mov
xchg
adc
sarb
xchg
cwtl
jp
enter
imul
sbb
cmp
mov
in
rcrl
psubb
ja
iret
inc
popa
jle
push
fcoml
mov
mov
adc
inc
arpl
dec
sbb
inc
mov
out
jb
sub
dec
inc
outsl
int
shlb
xchg
xchg
push
cld
sbb
push
or
xlat
cmpsl
fisttpll
inc
sub
int
xor
sti
clc
cmovnp
sbb
ss
xlat
cltd
or
hlt
mov
cmp
pusha
sbb
sub
stos
fimull
test
gs
test
enter
mov
nop
xchg
lret
arpl
sarb
das
mov
xor
sub
sarb
mov
mov
icebp
inc
and
adc
jg
sub
push
push
das
cmpsl
sbb
pop
adc
hlt
push
repnz
xor
pop
mov
idivb
sti
push
mov
stc
ss
imul
xchg
pop
js
or
mov
push
insl
pop
imul
add
xchg
adc
mov
movsl
cltd
ds
aaa
xchg
lds
mov
lret
xchg
test
xor
ret
sub
add
fisubrl
xchg
push
jp
arpl
push
mov
dec
dec
dec
hlt
xor
jne
stos
cmp
mov
sahf
aas
bsr
lret
adc
push
lahf
dec
mov
mov
cmpsl
xchg
stos
loope
pop
adc
lods
jbe
cmp
push
push
xchg
xchg
dec
inc
leave
mov
imul
adc
fwait
in
jnp
pop
push
xor
mov
push
dec
jge
and
pop
xchg
enter
shrl
enter
cs
filds
outsb
sarl
inc
in
pop
in
adc
mov
std
xchg
pop
fistps
out
fists
jae
inc
push
jp
add
pop
jnp
dec
lods
lea
add
aad
orl
mov
ret
xchg
das
push
imul
movsl
mov
push
add
ja
std
and
test
pop
jecxz
shr
sub
pop
or
xchg
pop
cmp
mov
dec
inc
out
repz
scas
inc
repnz
das
dec
sbb
std
adc
ljmp
jge
inc
jo
jg
xchg
in
fbstp
mov
jno
add
xchg
and
xor
pusha
fistpll
movsb
pop
int
xchg
movsb
xchg
mov
mov
xlat
in
sub
fisubrl
mov
and
xchg
and
int3
push
mov
adc
cmp
in
insb
inc
adc
mov
mov
lods
mov
push
cmp
aam
test
xor
hlt
pop
sub
jns
xor
in
cmp
jecxz
mov
inc
rcrl
movsb
mov
xor
inc
xchg
jge
lds
int3
sbb
into
lahf
dec
mov
sub
in
sub
call
cld
inc
mov
pusha
xchg
movsb
cwtl
xlat
lret
iret
push
adc
xchg
push
xor
push
jnp
dec
out
sub
into
test
das
std
gs
lods
scas
or
fadd
mov
inc
scas
mov
mov
pop
inc
das
mov
fstl
mov
aad
mov
dec
mov
fmull
mov
push
orl
pop
dec
push
loope
xchg
xchg
jmp
pop
cmp
addb
fsubl
or
cmp
je
xchg
divl
mov
cli
into
xchg
mov
add
scas
jno
dec
in
inc
test
pop
add
pop
push
adc
mov
xor
fldcw
cmpsb
popa
dec
or
cmc
aas
repnz
leave
jbe
arpl
add
xor
pusha
arpl
test
into
jne
rclb
pusha
pusha
loopne
out
xchg
adc
cmpsl
in
inc
call
adc
dec
sar
and
nop
jno
insl
inc
or
xchg
mov
scas
and
lahf
or
pop
in
mov
xchg
shrl
hlt
mov
sub
push
cltd
push
adc
sub
and
mov
call
pop
adc
adc
or
and
sti
stos
test
mov
js
int
adc
rcll
inc
test
add
int3
daa
push
jno
mov
sbb
push
lahf
sub
or
cs
push
cmp
ficompl
in
push
cmp
dec
cmc
shl
sarl
cmc
mov
clc
jbe
ret
popa
xor
inc
sbb
sub
mov
sbb
xchg
xchg
addr16
idiv
cmp
sti
pop
loope
fmul
xor
mov
adc
mov
in
add
int3
pusha
daa
dec
stos
jnp
pop
xor
ret
cmpsb
fwait
sbbl
das
shlb
sub
dec
lret
cmpsb
jnp
ficoml
push
bound
push
push
test
mov
sbb
fdiv
jp
jne
sarl
push
aad
dec
stc
push
push
xchg
ds
xlat
leave
mov
mov
mov
out
pushf
add
sub
pop
xchg
in
or
test
decl
pop
adc
insl
in
cmp
push
xor
es
mov
sbbb
sets
iret
repz
cmp
dec
int
imul
ja
shlb
mov
mov
int
addr16
addr16
ficoms
dec
and
pop
push
inc
outsb
xchg
out
inc
test
push
pop
icebp
mov
add
jns
mov
adc
lret
out
hlt
adc
test
mov
ret
and
mov
out
sub
push
add
test
sub
lcall
cld
lods
pop
fisubrl
cltd
stos
divl
pop
mov
les
addr16
rcll
ret
or
aam
cmpsl
loop
or
mov
ret
fadds
lcall
stos
sub
xor
mov
addr16
and
xor
push
or
adc
dec
stc
push
sti
or
je
mov
jecxz
pop
mov
jns
aam
push
cmpsb
loop
cmp
out
lds
push
mov
sub
imul
cmp
dec
arpl
in
jge
or
mov
cmp
in
arpl
jp
outsl
popf
cld
call
std
xchg
fdivs
mov
into
lahf
pop
sahf
outsb
jecxz
ds
mov
pop
repnz
ret
cmp
clc
out
xor
stos
test
imul
add
addb
daa
xor
adc
mov
xchg
push
mov
movups
loop
divl
jge
test
lret
fdivl
adc
icebp
pop
adc
sub
add
sub
ja
mov
stos
add
cmpb
cmpsb
pop
iret
cmp
mov
push
fsubr
jnp
push
lret
movsb
or
cmc
mov
cmpsl
pop
fcmovne
inc
pusha
mov
or
cmp
js
push
mov
jb
mov
add
dec
mov
in
in
out
fdivl
in
cmp
mov
das
mov
rorl
clc
icebp
sub
cmp
icebp
scas
es
inc
idivb
aaa
mov
in
repnz
loopne
mov
cld
rolb
lcall
rcrl
sbb
cmp
xchg
outsl
stos
mov
ds
inc
inc
mov
pop
sarb
mov
dec
data16
lods
sbb
into
mov
push
cli
fwait
pop
outsb
push
push
aam
dec
push
cwtl
push
push
sub
add
in
je
int
mov
dec
adcb
nop
push
lea
lahf
add
pushf
daa
jno
mov
mov
ret
xor
jne
aam
daa
dec
cmp
jmp
scas
fldl
into
push
add
push
xchg
stc
std
cli
cmp
mov
pop
mov
and
loop
push
pop
test
inc
and
in
or
xchg
xchg
cmp
mov
add
pop
repnz
inc
mov
shll
push
adc
aas
jae
mov
adc
lfs
js
inc
in
jp
push
jbe
enter
xchg
pop
and
movl
scas
sbb
sarl
fsubrs
push
mov
inc
pop
das
cld
fdivl
ljmp
pop
inc
jo
orl
out
mov
pop
sbb
pop
push
iret
xchg
rolb
jp
push
or
pop
mov
xchg
insl
mov
sbb
add
mov
add
push
or
shlb
push
mov
ja
insb
daa
repz
mov
or
mov
jecxz
dec
xorb
out
mov
cmpsl
jmp
rorl
pop
add
fwait
out
in
pop
adc
xchg
adcb
xor
inc
and
stos
fiadds
dec
insl
cmp
stos
lods
sti
lods
push
testl
adc
and
push
xor
mov
lds
push
xorb
xchg
sub
js
mov
fwait
mov
dec
jecxz
jmp
mov
push
nop
mov
aad
xor
mov
sbb
jbe
cmp
push
mov
data16
push
cmp
out
daa
out
jb
cs
rorl
xchg
sub
in
and
insb
vpor
movb
mov
xchg
insb
or
lret
xchg
fcmovbe
negl
ja
mov
popf
jmp
xor
sub
mov
mov
fildll
inc
or
cs
xor
jge
sbb
push
aam
inc
les
push
mov
jle
gs
mov
fwait
adc
pop
repz
lret
gs
cmpsl
xchg
or
fs
or
subb
test
jno
and
mov
xor
into
push
xchg
and
mov
xor
movsb
in
and
jl
mov
aas
cwtl
stos
xlat
mov
shll
pop
setp
rorb
mov
pop
xchg
cmpsb
movsl
loopne
inc
push
mov
loope
out
xchg
daa
es
cli
xchg
mov
or
add
xor
fstpt
inc
mov
ljmp
ljmp
pusha
mov
lods
mov
push
loop
fisttpll
add
aas
das
cltd
data16
and
or
xchg
fcomps
fmul
inc
pusha
out
xchg
sahf
fst
fs
push
cs
int
xor
repz
mov
or
add
xchg
insb
mov
mov
insl
out
jbe
pop
jg
jle
sbb
mov
mov
xor
in
das
clc
pop
shl
movlps
loopne
faddl
iret
xor
cld
inc
out
jne
bound
out
sbb
stos
enter
jp
test
lds
jns
repnz
ret
sbb
movl
cmp
lret
sub
insb
jae
sar
pop
icebp
push
mov
rorb
push
fsubs
mov
into
sbb
add
loop
dec
jns
push
pcmpgtb
push
je
mov
cmc
in
mov
int3
xchg
fwait
mov
or
sub
xor
dec
or
cs
out
mov
jge
in
cmp
inc
data16
cmpsl
mov
mov
pop
xor
sub
idiv
je
lds
into
push
leave
sub
movsb
or
fwait
adc
push
in
xor
fs
addr16
or
ret
test
sbb
fists
andb
dec
aad
rorb
idivl
pop
fists
inc
insl
and
sbb
mov
push
add
cwtl
xor
and
idivl
push
and
popf
dec
sbb
pop
loope
inc
repz
push
scas
pop
pop
pop
push
in
cmpsb
inc
jne
jns
std
dec
xor
fidivs
cmp
lahf
push
xor
cli
mov
mov
fcoms
fs
xchg
bound
outsb
jmp
data16
cmpsl
int
repnz
or
je
shr
add
inc
test
mov
xor
cmp
mov
sub
repnz
cmp
push
popf
shlb
xor
cltd
mov
cmc
ret
sub
in
or
out
push
insl
xchg
or
andb
mov
rcll
imul
inc
std
push
rol
mov
xchg
sbb
push
dec
arpl
cmpsb
gs
jge
mov
push
repnz
stos
mov
js
pop
shrb
mov
xchg
cmpsl
mov
xor
ds
push
mov
sub
movsl
or
pop
mov
mov
sarl
sub
push
mov
xchg
xchg
or
or
adc
or
add
mov
mov
je
pop
sbb
add
inc
xchg
rcl
jle,pt
rcrl
cmp
lock
adc
adc
mov
cld
push
insl
mov
push
ss
lods
test
popf
push
jecxz
aad
or
push
das
xchg
dec
push
xchg
das
xor
dec
mov
lea
lret
push
jge
cmp
lret
mov
mov
ljmp
xchg
jle
jnp
mov
jp
pusha
pushf
in
push
loopne
mov
aam
xor
jne
cwtl
frstor
arpl
mov
ret
push
clc
xor
pop
sub
into
xchg
outsl
aas
ret
bound
cwtl
jle
xor
mov
repz
and
lock
mov
sub
xchg
test
ret
lods
push
push
and
in
je
mov
lret
dec
insb
jbe
in
arpl
mov
mov
mov
call
and
mov
jo
mov
inc
pushf
lds
dec
cmp
shlb
scas
jnp
add
add
xor
and
fmulp
lods
push
mov
sub
sub
imul
jnp
xchg
mov
divl
nop
jae
jno
int
test
and
insl
or
shl
jge
push
inc
push
fwait
mov
addr16
xchg
stos
pop
sarl
mov
and
cld
push
jecxz
push
or
or
push
pop
mov
adc
sub
push
movsb
pusha
sbb
push
mov
pop
mov
sti
inc
lods
dec
mov
fwait
imul
icebp
mov
out
or
inc
mov
insl
push
sub
mulb
cld
adc
sbb
aas
in
mov
in
and
dec
mov
je
sarl
push
test
test
xchg
xor
and
cld
ret
popa
adc
sub
das
scas
in
add
adc
sub
jmp
out
loopne
js
pusha
scas
inc
sbb
ret
out
adc
mov
mov
dec
andb
loopne
aaa
sbb
adc
clc
lock
loopne
jmp
jne
mov
mov
iret
out
pushf
dec
cmpsl
fldcw
pop
pusha
cmp
sub
and
neg
test
sti
add
int3
push
mov
das
pusha
or
jl
mov
pusha
test
mov
jle
mov
ja
cmp
and
sub
mov
xor
cmp
lcall
test
fsts
movsl
sbb
loope
call
incl
sbb
gs
mov
jl
imul
jne
mov
maskmovq
mull
xchg
popf
stc
das
cmpb
outsl
sub
andb
fistl
or
adc
fsubs
out
and
inc
and
iret
mov
add
int
mov
lret
mov
and
xchg
jno
jl
xchg
dec
lods
mov
push
inc
and
jbe
lahf
scas
andb
sbbl
fprem
fidivl
mov
in
cmp
shlb
lds
mov
into
jle
sbb
inc
cmp
cltd
jno
scas
mov
push
lds
insb
xchg
and
sarb
xor
pop
inc
test
sbb
dec
fs
sbb
cmp
out
ljmp
popl
andb
or
xchg
dec
in
xor
out
in
cmp
cmp
cmp
add
adc
lahf
sbb
jbe
icebp
dec
add
dec
mov
rclb
xor
es
mov
fidivl
inc
imul
ljmp
jbe
stc
jle
lock
or
xchg
mov
adc
xchg
sbb
imul
test
cmc
pusha
cmpsb
mov
jmp
dec
xchg
mov
push
icebp
xor
insb
shll
xlat
adc
imul
lods
lds
mov
xchg
or
sahf
dec
out
adcb
xlat
sbb
fs
and
out
jecxz
xchg
sub
mov
mov
or
pushf
push
dec
or
sbb
cmpsb
jmp
jp
js
movswl
out
xchg
sub
aam
fwait
sbb
stc
in
in
dec
xchg
daa
hlt
std
hlt
mov
sub
pop
insl
mov
and
mov
sub
dec
outsb
fs
or
repz
iret
aam
sub
mov
sbb
mov
adc
pop
push
and
mov
push
js
jno
sti
adc
xchg
in
test
ret
mov
sub
cmc
cltd
rcrl
sbb
mov
mov
xchg
xchg
test
cs
mov
jecxz
fstpt
mov
movsl
ljmp
fwait
pushf
push
mov
fs
enter
xchg
sub
scas
push
sbb
dec
sbb
test
clc
int3
in
xor
mov
mov
fldt
xchg
xlat
mov
loopne
ja
out
lret
dec
push
or
jg
ljmp
outsb
fwait
sarb
cmp
mov
fcmovnu
inc
pop
jno
lods
mov
xchg
inc
enter
sub
xchg
out
cmp
ss
push
lret
jae
adc
mov
mov
packsswb
in
cmp
xchg
inc
mov
xchg
dec
test
ja
and
pop
pop
xlat
icebp
adc
xchg
jnp
sbb
or
or
cmp
mov
mov
sub
xchg
or
repnz
and
xchg
test
sub
xor
fwait
jmp
push
push
push
out
ret
xor
loop
insb
fstl
mull
das
cli
or
xchg
jl
hlt
jg
dec
xor
cmp
push
sbb
mulb
sub
fwait
in
sub
or
out
vmread
rclb
lahf
or
aam
cmp
test
je
nop
rcll
insl
xchg
popa
in
push
leave
cld
das
aaa
sub
lods
leave
mov
sbb
jecxz
sub
xor
xor
mov
jne
pop
test
jae
sbb
sub
hlt
or
je
out
mov
loop
cmc
add
lods
push
lcall
cmp
mov
push
lods
lret
sub
es
imul
push
fsubr
and
or
gs
and
xor
push
fistl
imul
cld
cwtl
sub
fsubl
sbb
push
rcrb
insl
lods
dec
xorl
cmpsb
hlt
sbb
push
pop
frstor
add
mov
xor
xchg
push
popa
jle
jmp
adc
ret
adc
pop
in
adc
mov
lret
fnsave
ds
ret
js
mov
jnp
rcrb
and
leave
inc
or
adc
rorl
push
neg
in
call
fbld
aad
imul
lret
push
mov
adc
push
xchg
into
imul
pop
adc
ljmp
rorb
jle
cmc
pop
xchg
lcall
lea
nop
ss
mov
aaa
inc
shl
into
je
cmp
pushaw
lock
adc
sti
pusha
scas
adc
pop
sbb
pop
push
cli
dec
xchg
cmpsb
or
in
sub
mov
lret
cs
mov
stc
test
es
adc
insb
aad
lret
je
ret
inc
cmc
mov
cmp
jns
imul
cltd
xlat
lret
enter
movsb
jnp
pop
xchg
setns
mov
fildll
sarb
push
popa
push
fstl
cmp
pop
scas
sbbl
cmpsb
mov
enter
les
sub
mov
sbb
je
mov
adc
lock
push
and
lods
xor
add
sub
mov
adc
lock
xchg
push
jge
imul
gs
flds
hlt
test
xchg
inc
and
and
cmp
fs
add
test
cmp
cld
inc
adc
mov
fs
cmp
scas
gs
test
shll
mov
add
pop
add
imul
mov
dec
lcall
add
adc
xor
cltd
sbb
push
ret
addb
rorl
mov
test
jmp
push
cli
out
mov
loop
pop
jl
dec
in
stos
inc
fldcw
out
jecxz
outsl
xchg
pop
insb
or
xchg
fisttps
cmp
push
mov
fisubrs
mov
jnp
push
aad
pusha
sti
scas
mov
dec
xor
mov
lds
loop
ret
dec
mov
or
push
imul
or
rorl
mov
or
loope
aad
mov
in
lds
mov
repnz
lods
or
insb
adc
scas
pop
adc
cmpsl
shl
or
arpl
in
ljmp
testb
sarl
ljmp
stos
push
xor
je
push
movsl
cli
sbb
dec
leave
add
mov
ss
pop
call
mov
out
test
jnp
movsb
shlb
lahf
dec
daa
and
popa
push
mov
mov
bound
shr
and
xor
adc
xchg
lods
mov
mov
test
ror
sub
fnsave
sbb
adc
clc
sub
aaa
dec
cmp
cmp
xor
ret
pop
dec
cwtl
or
fdivp
imul
nop
fcoml
jo
aad
pop
cmp
add
xor
sub
out
pop
push
notl
ret
push
xlat
xor
add
std
test
xchg
sbb
push
jo
js
inc
mov
jecxz
sub
icebp
mov
mov
dec
mov
mov
cli
aaa
pusha
rol
pop
icebp
xchg
lock
aad
lahf
mov
add
cmc
jno
xchg
xor
mov
xor
imul
push
lock
mov
xor
xchg
rep
jecxz
push
fnsave
aaa
gs
sub
xlat
dec
xor
fldl
mov
lret
pop
pop
mov
shrb
jbe
inc
cmpsl
addr16
fucomip
popa
shl
shll
jecxz
sbb
cwtl
and
arpl
cmc
pop
mov
aam
jmp
out
data16
cwtl
outsl
or
xchg
outsb
scas
mov
xchg
testb
adc
and
icebp
pop
call
push
sub
add
jmp
sub
sahf
fldt
inc
test
in
loopne
jns
cmp
mov
orl
fwait
xor
sbb
sbb
pop
cmp
jo
jmp
inc
lock
pop
cmp
adc
cs
in
test
xor
xchg
add
mov
iret
movsb
mov
popa
mov
out
in
lds
outsl
iret
dec
jle
orl
inc
xor
push
pop
push
jno
out
mov
popa
fadds
bound
data16
jecxz
and
cmp
rcrl
bound
dec
es
inc
sub
dec
cmc
jae
xchg
xchg
inc
adc
bound
pause
fldt
lods
jge
cmc
push
popa
pop
cltd
push
adc
test
mov
pop
push
sbb
test
int3
inc
data16
xchg
mov
out
cmp
enter
cs
cmpsl
jmp
and
in
leave
dec
xchg
scas
insb
cmc
sbb
fwait
cmpsb
scas
fdivrs
or
and
imul
data16
push
aad
and
lret
call
mov
stos
imull
addr16
lods
lock
jne
sub
sbb
inc
sbb
xchg
mov
sbb
mov
js
imulb
inc
push
push
push
loopne
push
add
aas
mov
cmpsb
jp
dec
cmp
clc
test
lcall
xchg
shrl
pop
adcb
in
out
mov
jmp
adc
rorl
cmp
xor
jae
xchg
push
out
stc
inc
cmp
pop
fnstcw
push
or
lods
sbb
ret
and
jecxz
push
adc
hlt
icebp
inc
mov
sub
in
jge
push
push
dec
dec
popa
loopne
pushf
and
or
xorb
push
rcr
ret
testb
insl
dec
out
jae
xchg
insl
push
push
test
add
pusha
rolb
lret
repz
rol
pop
xchg
sub
dec
rcll
jbe
push
adc
cmp
inc
inc
sub
dec
mov
ret
add
rclb
push
sub
dec
es
mov
sub
cmp
pop
ret
int3
push
mov
out
aad
jae
sbb
adc
arpl
adc
inc
aaa
hlt
adc
adcb
mov
jns
lret
iret
sti
pop
loopne
and
cmp
push
mov
cmp
or
stos
repnz
sbbb
jle
mov
jo
or
jb
push
es
stos
push
fucomp
jge
in
out
aam
aas
pop
jns
push
xor
dec
lahf
and
jmp
adc
add
jb
and
sub
outsl
ret
ja
xlat
mov
sub
inc
lock
data16
scas
adc
push
shl
jno
dec
jg
cwtl
xor
mov
dec
daa
xchg
hlt
insl
mov
data16
test
add
ljmp
cmp
test
cmp
mov
push
scas
aad
sbb
pushf
out
cmc
ljmp
mov
mov
adc
pop
push
xor
testl
push
mov
imul
imul
stos
jne
or
ds
dec
sub
test
or
lea
aam
notl
and
dec
xlat
pusha
mov
cltd
inc
push
sub
lods
sbb
cmpsb
xchg
into
jl
sarl
dec
lahf
sbb
lahf
push
and
xor
pop
jb
aaa
mov
xor
xor
mov
and
and
call
ficomps
inc
jp
and
push
cmp
jle
or
mov
and
cmc
testl
ret
jo
aam
andl
mov
or
dec
mov
sahf
lock
test
leave
dec
into
pushf
push
push
mov
in
pop
cmp
aad
outsb
push
jbe
out
inc
call
lds
leave
and
popf
movsl
ja
jmp
addl
sub
xchg
jo
popf
ja
xchg
mov
push
xor
pushf
push
insb
dec
jle
std
adc
and
jnp
cmp
adc
dec
icebp
jp
xor
jg
or
call
out
cmpsl
mov
es
cltd
addr16
fcmove
sti
push
and
std
mov
jge
jne
adc
fadds
gs
xchg
xlat
scas
in
or
mov
and
mov
xchg
mov
aaa
mov
mov
and
pop
js
pop
mov
insb
fistpl
and
scas
sbb
lahf
add
hlt
ret
mov
test
enter
sub
das
and
rolb
sub
loop
mov
cwtl
sub
xchg
clc
and
dec
cs
test
xor
rcrl
subl
jp
pusha
leave
push
mov
mov
pop
in
pop
ds
fdivp
mov
xchg
xchg
sbbl
mov
push
add
sbb
cmc
push
fisubrs
xor
cmp
mov
gs
jp
jle
loope
stc
adc
imulb
add
divb
mov
mov
pop
mov
notl
sbb
jns
sub
iret
jmp
pop
shlb
in
sbb
xlat
frstor
lods
xchg
outsl
inc
inc
mov
inc
aad
in
mov
mov
fstpt
sahf
loop
fwait
stc
lcall
and
push
add
lods
ljmp
repz
cmc
inc
sbb
les
cmpsl
je
pop
insl
pop
xlat
aam
push
mov
push
and
dec
lcall
fiaddl
mov
int3
dec
clc
test
ficoms
fs
popl
movsl
and
mov
push
adc
out
hlt
es
lahf
push
fcompl
mov
test
and
scas
arpl
testb
ds
or
mov
fs
pop
cmc
loope
dec
mov
imul
dec
jmp
cltd
aaa
aad
insb
aad
xor
cmpsl
aad
arpl
inc
fnstenv
fld
fidivl
aad
lret
push
cmp
je
inc
daa
je
push
lds
clc
shlb
add
inc
pop
je
adc
adc
and
out
movsb
in
aas
mov
lahf
ss
cmp
xor
push
xor
ret
xlat
mov
dec
push
fdivrl
sbb
xor
push
mov
inc
mov
test
cmp
pop
push
push
or
sbb
sbb
iret
mov
shll
mov
dec
pop
dec
and
jle
mov
iret
mov
sub
pusha
xor
je
ljmp
sub
adc
test
mov
andl
scas
cmpsb
ss
rorl
aaa
pop
sbb
xchg
sbb
jecxz
sbb
or
xor
mov
push
mov
mov
jg
adc
mov
fisttpll
mov
clc
jl
iret
sub
hlt
or
cmp
mov
inc
imul
shl
mov
xchg
lahf
mov
dec
xchg
mov
xchg
xchg
pop
adc
mov
stc
and
icebp
in
mov
adc
stos
addr16
int3
pop
in
testb
xchg
jo
jmp
pop
addr16
mov
rcrl
push
das
inc
dec
xchg
mov
mov
mov
fwait
lea
push
inc
pop
je
in
or
push
jo
sbb
psubusb
lret
mov
jns
dec
cmp
into
mov
mov
mov
gs
mov
call
es
ss
sbb
mov
call
addr16
xchg
and
ja
sbb
sub
out
adc
mov
ja
inc
lea
push
ds
dec
call
add
arpl
idivb
mov
inc
clc
lcall
jno
movsl
ret
push
fcmovnu
xor
sub
jmp
push
popa
incb
cmp
iret
fidivs
mov
stos
popf
add
cmp
inc
out
pusha
repnz
shlb
dec
int
faddp
insl
and
push
arpl
rcll
iret
push
ljmp
xor
cld
mov
sahf
lahf
std
inc
test
aas
loopne
mov
cmp
fsubr
mov
test
incl
fimuls
dec
in
mov
ficompl
jle
loopne
mov
pushf
hlt
scas
push
cmpl
outsb
dec
jg
outsb
lea
in
cmp
add
add
xor
mov
pop
sahf
sbb
pop
mov
in
insb
data16
pop
pop
add
orl
pop
in
pop
jbe
push
dec
int3
add
movsl
add
or
dec
or
jle
nop
lods
inc
dec
push
sbb
imul
push
rcl
in
std
loope
inc
mov
dec
lret
mov
pop
dec
pop
fs
xor
mov
pop
adc
test
and
pop
xor
lcall
insb
int3
nop
pop
jno
inc
jecxz
and
sub
lcall
fnstsw
and
rol
cwtl
pop
sbb
add
loop
sbb
ret
outsb
jae
fsubrp
scas
mov
cmp
inc
add
add
jae
add
arpl
je,pn
out
cs
mov
mov
pop
adcl
sbb
aas
cli
jge
mov
repnz
mov
cmp
jmp
jno
sbb
cmp
sbb
jmp
push
faddl
mov
andb
test
in
lock
pop
pop
jno
out
and
dec
ret
and
dec
inc
or
out
into
lds
orb
sub
ret
subl
pop
add
ret
ds
ret
mov
ffreep
ljmp
lds
imul
cmp
dec
lret
adc
in
sbb
pop
push
sub
xor
ret
cmp
ss
rcrl
mov
sub
inc
adc
clc
insb
cmpsl
add
fldenv
xor
cmc
mov
ja
jo
xchg
outsl
push
roll
loopne
jge
sub
std
int3
sub
rol
lcall
sub
push
lahf
ret
sbb
pop
xor
popa
and
or
out
scas
loopne
mov
cmpl
addr16
cli
cmp
js
std
fisttps
mov
sahf
test
loop
xor
jmp
ret
jge
sahf
jnp,pn
mov
mov
sub
sbb
sbb
jle
ficoml
rorl
fdivrs
cmp
insl
mov
in
add
or
dec
in
mov
cwtl
loopne
out
lods
jge
mov
or
xor
push
test
movsl
inc
test
lret
jp
add
shll
pushf
jmp
inc
or
out
adc
cmpsb
cli
loop
cmp
pop
xchg
add
cmp
mov
jns
push
push
int3
mov
nop
mov
aaa
rcll
roll
addr16
jle
bound
rep
fildll
add
or
jne
pop
rorl
daa
repz
outsl
jo
outsl
sub
orb
jno
out
cmp
js
dec
ja
add
ret
cmp
call
nop
or
cmpsb
push
mov
imul
cli
clc
jp
out
push
pop
stos
cmp
lret
loop
and
fwait
lods
sub
insb
int3
pop
sbb
and
and
push
sti
mov
add
test
stc
sbb
out
push
jl
lret
into
iret
xadd
fisttps
mov
jle
fnstenv
stos
aaa
fcmove
js
movsb
std
xchg
cmp
out
mov
ja
sub
iret
inc
lods
xchg
in
inc
in
mov
cld
push
xorb
fstl
mov
xor
outsl
loope
pop
jb
mov
imul
lea
adc
mov
popf
and
pop
daa
ret
je
sub
inc
mov
mov
mov
rolb
stc
push
adc
push
xor
lcall
nop
inc
mov
lods
repz
push
inc
xor
jp
rcll
int3
fnsave
mov
out
dec
add
repz
lods
addr16
xchg
xchg
loope
mov
sub
pop
in
bound
push
test
or
out
test
mov
jle
jge
js
xor
movsl
aaa
mov
in
test
ficompl
sub
in
xchg
mov
lahf
sarb
xchg
scas
mov
imull
adc
mov
stos
cmp
mov
mov
inc
adc
mov
repz
xor
sbb
push
fwait
pop
lret
iret
fwait
cmpb
sub
lret
dec
jne
mov
nop
push
in
dec
pop
shll
add
addr16
adc
sub
xchg
btsl
sahf
inc
xchg
cld
aad
mov
xchg
nop
out
insl
lds
in
rcl
push
push
pop
leave
popf
xchg
cli
mov
js
xor
mov
adc
jno
mov
mov
shll
push
adc
sub
lods
jecxz
fwait
sahf
imul
sub
pusha
test
or
adc
adc
imul
adc
insl
xchg
adc
add
loop
mov
mov
bound
xchg
jbe
icebp
imul
jo
xchg
mov
popf
into
push
dec
out
mov
push
jae
adc
fdivrs
jno
jp
jmp
pop
cmp
outsl
xor
pushf
ljmp
leave
js
ret
mov
testb
lea
xchg
and
out
mov
push
popa
jnp
icebp
and
push
dec
xchg
mov
dec
std
mov
outsb
outsl
inc
cmp
sub
jns
fists
dec
dec
lret
enter
dec
cltd
jl
out
xchg
out
into
pop
add
xchg
cmp
fmulp
add
arpl
sub
or
or
std
mov
popa
test
push
jno
in
sub
mov
data16
fwait
mov
add
out
ret
jnp
jb
cmpsb
jle
pop
sub
aam
das
cmp
jb
in
imul
pop
cmp
fists
popa
sbb
or
sbb
cli
je
dec
sbb
fimuls
fildll
push
push
in
aas
stos
pop
fsubrl
add
pusha
out
add
negl
lret
insl
lods
fsts
bound
ret
shl
push
imul
sub
fmulp
test
jmp
pop
shrl
sarl
ret
sub
jnp
pop
cltd
subl
ret
cld
pop
jmp
cli
jg
push
inc
out
std
xchg
sbb
divb
imul
sub
pop
lret
adc
kmovb
insl
adc
adc
ror
xorl
and
hlt
inc
dec
jecxz
push
insl
cmp
lods
push
pop
and
cmp
push
pop
adc
ror
mov
push
call
imul
pop
xor
sbb
lock
mov
dec
sbb
add
jns
outsb
imul
cmpsl
mov
adc
mov
mov
shr
nop
repnz
js
neg
mov
pusha
test
mov
xor
jp
aaa
lahf
mov
mov
or
cmp
xchg
mov
rcrb
push
movaps
add
js
in
xchg
dec
lret
ljmp
pop
ss
dec
fs
push
push
into
push
jp
std
hlt
lret
add
ret
stos
ljmp
imul
jg
pop
mov
push
inc
jbe
lea
jecxz
push
sub
es
enter
xchg
adc
push
cmp
fcomp
call
pop
inc
sbb
mov
mov
pop
mov
lretw
das
fimull
pop
push
jae
es
mov
in
sub
repnz
add
hlt
jbe
jp
fst
dec
test
fbstp
rcl
sbb
xor
out
xchg
int
cmpsl
sbb
test
loop
push
adc
cmpsb
std
loope
xchg
mov
ret
leave
dec
fcmovb
mov
test
je
mov
push
mov
lods
pop
pop
ret
push
jg
mov
clc
or
push
mov
jb
adc
push
rcrl
dec
or
or
in
pop
xchg
cmp
lahf
or
xchg
pop
dec
mov
sbb
cld
lret
push
mov
mov
loope
mull
shll
or
push
les
sub
lret
andl
in
in
dec
push
push
pop
pop
pop
add
es
or
add
add
cmp
or
adc
cltd
push
fsubr
in
shlb
sti
sti
int3
fs
das
mov
loop
and
push
daa
xchg
shlb
adc
dec
jmp
clc
cmp
and
loopne
jo
mov
sbb
js
std
insb
jb
data16
fstps
cmpsl
push
call
out
mov
insb
xor
lods
pop
mov
cs
fsts
xor
jae
scas
jbe
sub
and
sbb
popa
xchg
pop
mov
pop
sbb
or
and
nop
jecxz
or
adc
mov
mov
mov
push
frstor
cmpsl
xor
mov
and
adc
sub
jge
popf
sub
jbe
rolb
sub
jb
jne
lock
dec
xchg
mov
mov
inc
sbb
mov
loope
das
mov
push
jae
pop
ret
lea
and
mov
aam
jp
adc
stos
add
sbb
jmp
or
outsl
fiaddl
icebp
hlt
addr16
decb
cmc
mov
sub
push
cmp
loop
imul
cli
mov
repz
mov
outsl
int
mov
iret
cmp
cmp
pop
xchg
lret
push
cmp
xchg
mov
xor
sub
inc
or
sbb
sbb
dec
mov
ljmp
fildll
pop
cwtl
sub
sub
xor
sti
cmc
adc
cmp
scas
sub
js
pop
subb
aaa
in
push
inc
hlt
sub
push
iret
mov
or
es
sbb
jns
adc
push
addr16
jmp
loopne
push
pop
in
jge
ds
xor
aaa
adc
cld
test
pop
and
fwait
adc
mov
xlat
xchg
pop
pop
sbb
push
int
cld
lock
sahf
inc
push
aas
xchg
pushf
inc
push
xchg
xchg
dec
inc
sub
sbb
mov
xchg
imul
nop
popf
stos
fcoms
pop
xchg
push
mov
out
in
pusha
test
fisttps
dec
and
popa
and
add
rorb
and
into
sub
out
mov
lahf
pop
sub
enter
add
xchg
lahf
hlt
mov
jns
cmpsb
cmc
mov
cmpsb
jp
ret
nop
lock
fisubl
les
adc
js
adc
sub
cmp
ret
jno
jns
fcomi
cmp
scas
cmp
aas
scas
cmp
testl
aad
test
pop
xchg
or
lea
in
data16
adc
cld
sbb
add
pop
cmp
sub
xchg
xchg
adc
push
negb
jmp
sub
inc
mov
sahf
add
or
cmpsl
pop
cli
add
and
in
add
je
mov
ret
pop
push
adc
mov
or
mov
push
mov
shrl
aaa
sbb
test
sub
icebp
into
pusha
in
add
jae
jge
cs
push
movl
add
cmpsl
pushf
cmp
fadd
loopnew
shll
and
pop
jo
mov
jb
mov
pop
hlt
aaa
aaa
mov
push
clc
hlt
jge
sub
loop
inc
push
fmuls
ret
outsl
inc
cmp
sub
daa
leave
or
pop
jno
fbld
loope
inc
fmull
in
pop
mov
lods
cmp
xchg
xchg
scas
popa
xchg
pop
cld
outsb
mov
pop
adc
cmc
jp
inc
and
and
xchg
mov
mov
ret
mov
mov
dec
gs
and
sub
push
sub
sub
pusha
push
mov
nop
lcall
mov
nop
mov
jg
fldenv
push
lret
add
mov
inc
ss
lret
adc
ret
mov
add
decb
or
add
and
dec
mov
mov
test
dec
stos
pop
mov
mov
sub
inc
pop
and
xor
roll
mov
test
lods
lcall
inc
sbb
jno
jb
rcll
mull
test
std
add
mov
and
mov
nop
in
or
or
scas
aam
bsr
mov
jne
cli
aaa
out
cmp
daa
add
rcl
dec
sub
add
dec
lret
outsb
imul
or
aad
sbb
jo
xor
mov
bound
jns
mov
xchg
call
lds
lahf
xchg
arpl
fwait
shl
cmpsl
xor
dec
or
fdiv
or
repz
fstps
jmp
lea
ljmp
fs
std
in
mov
nop
fsubl
xchg
push
mov
lds
and
and
cmpsb
clc
lods
push
xchg
adc
outsb
lea
icebp
inc
xor
js
push
xchg
int3
call
mov
inc
dec
sarl
sbb
sarb
adc
icebp
adc
fimuls
lcall
outsb
call
lods
test
pop
add
jl
nop
cli
fsub
jns
je
pop
pop
movsb
mov
mov
lods
lcall
push
jae
rorb
cltd
sbb
test
dec
and
xor
jbe
loop
xchg
mov
xchg
iret
pusha
fildl
out
mov
push
daa
cmp
xor
dec
push
mov
push
xor
or
push
outsl
pushf
and
je
pop
xchg
in
cs
mov
movsb
mov
jmp
xchg
push
nop
je
hlt
adc
fdivl
cld
mov
adc
ds
int3
flds
shrl
stc
cmp
popf
dec
in
and
inc
or
in
push
cmp
jg
cmp
or
enter
fs
jae
sarb
pop
mov
mov
in
xor
jno
popf
sbb
and
sbb
dec
and
adc
loope
mov
inc
pop
icebp
mov
in
fcmovnb
cmp
stos
push
cmpl
inc
xchg
stos
lret
fcoml
or
out
sbb
loope
inc
dec
xlat
sarb
cmpl
fsubs
or
add
ja
sbb
mov
xor
mov
jmp
cmp
push
sbb
js
aad
dec
clc
shrb
lahf
call
sbb
mov
cmp
push
xchg
aam
divl
mov
xchg
js
jle
pop
mov
xchg
gs
inc
jmp
repz
jle
lock
sub
pusha
and
sbb
test
clc
adc
and
cltd
popa
xchg
insl
cmc
movsl
das
push
mov
inc
sub
sti
inc
xor
insb
xchg
inc
scas
ret
cmpsl
psrlw
outsl
call
fnstsw
movl
int3
push
popf
int3
negb
int3
jno
aam
lock
mull
xor
sub
fdivr
hlt
int
movsl
pushw
inc
out
aas
js
jns
add
addr16
add
mov
es
out
cmp
xor
loop
mov
xor
aas
pusha
inc
dec
add
in
mov
hlt
and
leave
xor
xchg
add
cmp
mov
stc
cmp
jp
push
sbb
fmull
mov
notl
sub
and
sbbb
xchg
addl
xchg
mov
cmp
jecxz
mov
xor
dec
cs
fsubs
imul
adc
xchg
mov
push
sbb
es
pop
xor
test
jnp
xchg
xchg
cmp
jne
or
dec
mov
pushf
insl
push
leave
enter
orb
mov
not
fadd
shl
mov
and
add
xchg
sbb
xor
sub
push
outsb
mov
outsl
mov
negb
imul
mov
loop
mov
mov
mov
andl
dec
mov
mov
or
xchg
sbb
jg
jb
xor
sub
lods
cmp
xor
inc
cmpsl
mov
lock
and
int3
clc
test
jnp
xor
xchg
xor
in
inc
sahf
mov
jno
clc
movsl
xchg
stos
jecxz
imul
mov
lret
daa
dec
loop
mov
fisttpll
scas
insb
jle
dec
mov
and
xchg
cli
cmp
nop
popf
frstor
sub
mov
xor
pop
sbb
rcrl
sub
into
fwait
lret
out
stos
inc
fldcw
fdivrl
adc
xor
mov
testb
fwait
daa
jecxz
std
adc
es
sahf
jae
and
dec
fildll
mov
xlat
adc
mov
cmp
and
aaa
test
adc
jae
add
mov
sbb
adc
test
mov
iret
dec
dec
sbb
cwtl
cwtl
nop
in
imul
mov
sub
xor
push
fisubrl
inc
push
loop
fisttpl
push
pop
call
cmp
movsb
pop
fiadds
sbb
repz
or
mov
mov
and
ret
jle
adc
sahf
and
cmp
and
cmpsl
stc
loope
rolb
lods
push
je
jbe
xchg
pop
aaa
and
outsl
pop
and
lret
retw
lock
or
push
inc
sub
rorb
mov
jns
pop
or
in
in
dec
mov
fucom
mov
mov
jno
imul
pop
inc
xchg
loop
push
xchg
xor
stc
cltd
lahf
imul
arpl
in
push
push
aad
ds
lods
rorb
divl
sbb
mov
lret
mov
lock
and
cmp
pop
fucomp
inc
fldl
out
pop
cltd
lea
std
or
lods
sub
aad
pusha
aas
mov
lods
pop
ficoml
push
xor
outsb
pop
cwtl
or
int
idivl
cs
test
movl
iret
mov
cltd
pop
int3
sar
leave
xchg
icebp
xchg
and
adc
xchg
jbe
test
jmp
iret
ret
mov
es
mov
adc
push
aaa
lcall
push
ret
jnp
inc
outsl
unpcklps
jne
and
mov
dec
dec
ds
xchg
movsb
xchg
int
and
in
ret
cmp
push
jns
jp
ja
add
sbb
loope
test
enter
jnp
mov
inc
push
out
pop
rolb
sbb
aaa
sub
js
mov
ret
gs
shrl
outsb
lods
mov
pop
push
inc
mov
adc
icebp
je
mov
pop
xchg
push
scas
lods
or
mov
movsb
aaa
mov
fs
data16
mov
mov
ret
inc
lcall
imul
fldcw
out
repz
dec
inc
sbb
mov
adc
mov
or
xchg
lea
arpl
ret
popa
xchg
sub
mov
data16
rolb
inc
sub
incb
gs
mov
xchg
jb
nop
iret
roll
subb
xchg
dec
notb
ljmp
mov
push
push
lret
test
fsub
fstpt
sub
mov
cmpsl
jns
in
dec
daa
std
stos
sub
lahf
dec
arpl
cwtl
mov
jg
pop
test
test
inc
add
enter
cltd
aaa
inc
jge
aas
jo
inc
aaa
inc
pop
push
mov
popa
daa
mov
in
jge
mov
dec
and
push
mov
insl
pop
jecxz
xchg
sbb
jo
movsb
rcll
push
mov
mov
fucomip
dec
stc
dec
shll
sub
or
and
pop
lock
push
xchg
sbb
int3
add
inc
pop
mov
add
in
ret
imul
ret
and
jl
xchg
popa
daa
sbb
je
cltd
sub
dec
pop
sbb
movsb
mov
or
test
mov
xor
xchg
fdivs
repz
insl
mov
push
fidivl
xor
fldenv
lahf
pusha
sbb
mov
out
je
call
mov
xor
xchg
push
ljmp
es
xor
xchg
sub
xor
rorl
and
pop
pop
push
mov
popf
scas
xchg
adc
mov
hlt
pop
int
xor
pop
inc
pop
push
addb
aaa
daa
test
scas
jne
push
xor
aas
aad
jno
stos
xchg
icebp
mov
fdiv
dec
sub
test
movsl
dec
push
push
cmpb
add
in
addr16
add
scas
hlt
add
sub
xchg
cmc
pop
or
pop
mov
shlb
out
xor
xchg
mov
ss
or
aam
mov
add
ja
aaa
mov
cmp
mov
fsub
dec
dec
add
clc
xlat
scas
or
lods
lea
outsl
loopne
scas
xor
xor
loope
lahf
cmp
lret
sbb
sbb
shll
adc
mov
dec
adc
mov
lcall
dec
lods
repnz
mov
xchg
pop
fucomip
sub
add
adc
xor
pop
dec
or
sbb
pop
pop
xor
ret
ss
stos
ficompl
mov
scas
jp
pop
push
push
push
sti
xchg
flds
mov
sbb
fcompl
inc
sub
pop
jmp
sbb
jno
add
dec
jmp
roll
lods
mov
inc
dec
lods
in
add
xorl
jl
or
fmuls
cltd
xor
xchg
add
add
out
lods
mov
mov
lods
cmpl
imull
mov
push
ret
daa
je
push
jb
aam
sti
aaa
pop
push
fimull
pop
idivl
pop
mov
cld
sub
gs
sbb
stos
mov
sbb
movsl
lock
cmp
cmp
jmp
pop
dec
stos
push
mov
pop
ljmp
out
cmc
xor
pop
add
cmp
pop
lea
or
mov
addb
sahf
push
sub
sbb
mov
inc
je
jmp
add
sub
dec
push
push
popf
mov
flds
dec
dec
mov
add
push
xchg
mov
into
scas
jecxz
icebp
aas
test
cmp
xor
xchg
or
push
adcb
imul
xchg
shlb
lds
mov
data16
add
push
mov
das
les
in
fiaddl
adcl
inc
and
shll
imul
cmc
aam
sbb
xchg
cs
rolb
stc
cmp
xchg
arpl
clc
mov
fldt
mov
sub
push
and
lret
fmul
fwait
sub
pop
xchg
xchg
es
subb
addb
xor
popa
addl
fs
dec
into
cmpsb
sbb
xor
fucomp
dec
flds
cwtl
lods
imul
fidivrl
out
movb
dec
rcl
cltd
clc
mov
outsl
cmpsb
jg
or
test
push
lods
and
mov
dec
in
int3
sub
mov
mov
insb
in
shlb
pop
sub
sbb
xchg
xchg
jp
rol
cmp
lods
movsb
loop
divb
mov
adc
or
sbb
scas
pop
pop
xchg
sub
xor
xlat
xchg
pusha
sub
imul
jns
pop
movsl
jle
jmp
into
ficompl
lods
push
addl
ret
loope
push
fwait
sbb
or
jo
movsb
and
pop
push
lea
inc
faddl
les
cli
lock
xchg
ds
insb
fwait
stos
jecxz
jns
pop
shll
or
les
push
adc
xchg
mov
pushf
and
push
inc
push
cmp
sbb
ja
inc
add
int
xor
insb
push
sub
sti
cmc
xor
fsubr
jo
adc
sub
push
test
repnz
adc
jmp
and
out
js
sbb
xlat
clc
xchg
mov
push
push
mov
adc
mov
test
fwait
or
clc
loopne
in
add
sti
add
in
jl
pop
rcrb
push
lea
lods
fucomp
notb
mov
add
into
fistps
push
mov
cwtl
aas
stos
lods
js
aam
dec
aam
lcall
pop
add
add
push
adc
repz
xor
outsl
dec
out
hlt
scas
add
nop
subb
pop
pushl
dec
in
mov
iret
or
outsl
out
mov
dec
insb
fwait
add
add
shrb
inc
push
sub
pop
mov
xor
jmp
adc
mov
or
pop
inc
and
push
push
inc
xchg
cmp
dec
adc
xlat
jb
jnp
adc
pop
cmp
xchg
sbb
and
into
sub
mov
push
and
lods
or
ss
das
pushf
jbe
cmpsb
push
mov
xor
sbb
adc
out
out
fcmovu
dec
negl
dec
mov
inc
cmp
dec
pop
lcall
in
push
push
into
je
repnz
mov
or
jne
rcrb
xchg
sbb
sub
mov
cmp
repnz
cmp
in
cmpsb
rclb
lret
aas
add
leave
lret
jmp
enter
daa
mov
popa
enter
jg
xchg
pushf
xchg
jge
repz
enter
jmp
outsb
jge
dec
arpl
mov
lods
jp
add
dec
shll
bound
xor
out
dec
xor
pop
aam
pop
mov
mov
and
cs
jb
movsb
cs
jmp
and
pusha
bound
mov
dec
xor
push
add
pop
outsb
jmp
inc
mov
mov
inc
inc
sub
int
rolb
icebp
inc
cmp
imul
xchg
lcall
or
pop
xor
nop
sub
pop
dec
lods
popa
mov
cld
repnz
mov
pop
cmp
xchg
lods
scas
jp
dec
shrl
in
cld
stos
xor
add
mov
cmp
mov
jne
push
mov
pop
sbb
mov
dec
dec
sbb
sbb
orb
and
cmp
imul
insb
add
int3
dec
dec
cltd
jns
adc
test
lret
std
mov
leave
aas
add
xchg
inc
out
push
xor
push
fdivrl
scas
jge
push
sbb
lret
push
cmpl
dec
pushf
ret
push
xor
xchg
imul
adc
mov
xor
divb
repz
mov
cmpsl
mov
lcall
and
or
loopne
leave
stc
call
mov
or
rolb
cld
and
mov
adc
popf
jne
subl
inc
add
xchg
mov
stos
pop
aas
mov
mov
pop
jb
cmp
mov
and
sti
mov
cltd
add
ret
sub
dec
jg
sub
mov
bound
decb
dec
cli
jns
dec
enter
mov
sahf
clc
ds
movsl
jg
dec
xchg
xor
jecxz
sbb
bnd
xchg
cwtl
inc
lret
sub
ds
or
mov
popf
push
dec
dec
lcall
lret
sub
ficoms
push
add
daa
add
xor
shl
add
xor
in
mov
fcompl
and
inc
test
in
int
dec
movsl
fwait
movsl
inc
adc
adc
mov
mov
in
pop
xchg
jbe
mov
sbb
dec
pop
jg
push
inc
sarb
test
lods
and
mov
xor
adc
mov
test
pop
add
push
mull
pop
or
push
frstor
pop
or
mov
or
dec
rorb
push
insl
out
dec
push
fwait
test
cmpsl
fcompl
cmp
cmp
push
stos
jg
into
xor
and
in
cmc
test
xchg
mov
test
fwait
jbe
inc
rcr
cmp
and
xchg
inc
add
test
mov
aas
dec
sti
mov
mov
mov
mov
sahf
rcl
cltd
sbbb
and
jne
adc
dec
aad
dec
jne
std
ljmp
cli
pop
push
mov
cmp
movsb
ds
lahf
stos
aas
pop
push
ljmp
dec
loopne
jns
lret
sarb
inc
xchg
cmp
shl
out
xchg
mov
ja
rcrl
nop
notb
mov
std
push
and
adc
xor
sub
dec
dec
aam
or
jge
cmc
jl
es
test
cmp
aad
insb
dec
js
arpl
sub
cmp
mov
aaa
and
and
fidivrl
and
insl
or
mov
das
pcmpgtd
gs
std
ffreep
pop
mov
mov
add
jle
adc
dec
and
xchg
xchg
sbb
or
int3
xor
or
outsl
mov
adc
xchg
rcrw
and
movsl
pop
mov
stos
test
sub
in
push
clc
lahf
dec
push
leave
ds
cld
dec
mov
dec
xchg
mov
lods
jno
insl
sarl
addr16
lret
and
mov
pop
xor
push
js
mov
cmpsb
test
xchg
lret
and
push
hlt
stos
fisttps
lcall
aas
sub
sbb
outsl
lret
stc
dec
push
fsts
xchg
pop
push
fwait
clc
cmp
fistpll
pop
js
loope
mov
push
roll
leave
js
daa
lahf
imul
mov
dec
sub
jecxz
mov
jns
and
mov
mov
add
lods
mov
jnp
pop
cmp
in
lahf
and
cmpsb
xchg
fnstcw
divpd
cmp
stos
dec
cmp
sbb
add
mov
sub
test
cmp
loop
dec
xor
aaa
jb
mov
aas
test
fs
add
jg
sbb
cld
push
sub
sub
mov
xchg
aaa
jge
xchg
lret
sub
jl
int3
mov
push
sbb
cmpsb
jb
push
jo
mov
fnstsw
jns
pushf
in
and
lret
mov
movsb
test
add
popf
xchg
sub
adc
fwait
sbb
inc
cmp
or
cmc
sub
pop
add
mov
or
int3
orb
insl
inc
dec
shrl
insl
inc
mov
push
pop
xchg
add
js
shrb
movsb
push
and
push
movsl
push
cmp
pop
test
es
rclb
adc
call
outsb
insb
jmp
out
mov
cli
repnz
pop
je
xor
movsb
jb
jbe
das
adc
ficoml
jle
imul
add
inc
push
fistpll
xchg
outsl
push
sbb
fisttps
mov
xchg
xchg
add
ret
xchg
sti
test
ss
xchg
in
push
lock
xchg
stc
iret
inc
call
loopne
push
pop
mov
mov
aad
repz
jmp
fisubrl
imul
cld
sbb
loopne
loop
gs
imul
loope
ss
sub
and
push
mov
or
stos
cmpsl
mov
cmp
mov
add
or
das
stos
sbb
bound
sbbl
and
cmp
xor
shrb
subb
movmskps
jp
rep
sub
subb
loop
imul
shlb
jp
pop
rcll
mov
in
out
stos
gs
pop
cmc
nop
jl
push
cld
outsl
es
push
mov
decb
rolb
in
dec
mov
push
popf
scas
out
pop
ret
sub
inc
mov
cmp
pop
pop
pop
add
outsb
adc
xlat
jae
dec
jp
cwtl
mov
push
dec
push
sbb
insl
cmp
and
pop
insb
cs
jecxz
repz
jecxz
inc
ret
aaa
xchg
fiadds
cli
and
lret
jmp
rcrl
xchg
pusha
add
repnz
cmp
mov
scas
sbb
out
add
pop
and
fxch
cs
nop
repnz
cli
out
popf
inc
outsl
into
stc
in
shlb
repnz
sbb
jmp
and
imul
inc
pop
dec
sbb
popa
repnz
insb
mov
jle
jmp
popa
loop
out
nop
sub
mov
add
sbb
fcmovb
add
in
mov
test
pop
sbb
push
jge
dec
fstpl
sub
pop
data16
adc
and
adc
pop
roll
cmc
or
ss
addb
jno
pop
fists
jecxz
iret
mov
xor
and
dec
mov
mov
mov
ret
mov
mov
cmp
sbbb
std
and
cmp
mov
xor
pop
arpl
mov
xorl
push
push
mov
ret
mov
push
lods
inc
lock
mov
mov
and
and
cli
test
pop
cmp
push
inc
outsb
push
sub
xchg
in
pusha
mov
or
sub
push
andl
jp
add
and
push
pop
dec
push
push
popf
jecxz
push
push
pushf
daa
divb
aas
pop
pusha
mov
cltd
mov
dec
std
idivb
xor
sarb
aaa
mov
lock
push
and
outsb
mov
cmp
jno
js
jb
jg
ficoms
shl
lods
lahf
jge
mov
repnz
out
pusha
ret
and
test
xchg
push
lock
scas
dec
into
cmp
xor
aas
iret
mov
test
das
mov
jb
cmp
imul
stos
insb
mov
out
inc
es
js
iret
add
mov
fisttpll
mov
insl
xchg
push
push
jg
xchg
inc
mov
pusha
cs
cmp
push
jae
imul
push
xor
pop
shl
testb
stos
cli
dec
aad
mov
shll
pop
xor
sbb
adc
mov
bswap
mov
fcomp
js
xchg
dec
nop
xchg
repnz
xlat
in
mov
jle
add
leave
jns
lds
cmpsb
mov
push
and
jne
fldt
add
push
adc
test
call
dec
xchg
dec
mov
outsl
rol
test
push
adc
jge
pusha
dec
xor
icebp
insl
int3
popa
inc
imul
sub
mov
daa
in
xchg
inc
pop
sahf
and
or
jmp
mov
inc
test
adc
lock
cs
inc
adc
dec
xchg
inc
loopne
rcll
inc
ret
mov
sbb
push
xlat
in
inc
adc
shll
ret
and
mov
sub
aas
jl
inc
fdivs
es
leave
sbb
push
pop
rcll
push
push
pop
popf
mov
in
push
cld
test
getsec
fstpt
std
outsl
lret
or
shlb
call
sbb
clc
fwait
cmpsb
xor
cli
fdivr
pop
or
cmp
pop
std
movsb
mov
outsl
in
imul
mov
and
push
or
xor
es
sub
and
cmp
sbb
sbb
sbb
mov
cld
dec
inc
cltd
jge
pop
push
and
cmpsb
repz
or
adc
sahf
loopne
jp
mov
in
xor
xor
jle
test
inc
lahf
cmp
mov
mov
loope
push
ret
cs
cmp
fsubp
movsb
mov
lret
cmp
jns
push
fiadds
enter
xor
popa
jae
cmc
adc
daa
mull
push
loop
mov
popf
mov
inc
and
xor
inc
addr16
std
dec
lea
scas
divl
in
cli
subl
mov
loop
inc
push
mov
mov
jp
xchg
arpl
cmp
aas
pop
sti
add
dec
pop
js
jne
iret
iret
or
ret
mov
ss
les
mov
and
ret
and
mov
xchg
popa
or
sub
xchg
sbb
sbb
jp
cmp
mov
adcb
pushf
pop
es
sub
mov
mov
call
scas
repnz
pop
and
sbb
adc
bound
fnstcw
iret
mov
xchg
xor
rcrb
addr16
gs
repz
push
test
mov
cmp
inc
out
push
add
insb
adc
int
lock
cmpb
call
popa
hlt
imul
fadd
pop
push
or
dec
stos
push
clc
jge
push
fisttps
mov
adc
shl
in
or
mov
test
stc
xor
movl
jbe
adc
cmc
mov
mov
push
cs
or
push
cwtl
jmp
arpl
aas
jmp
xchg
push
mov
mov
cltd
dec
adc
or
jns
int3
adc
fadds
mov
inc
bswap
add
in
xlat
aas
jbe
or
in
stos
sub
mov
jge
pop
add
add
pop
or
add
mov
lock
mov
dec
xchg
ss
mov
push
movsl
out
jb
or
sbb
popa
mov
dec
cmp
sbb
cmp
jg
mov
imul
or
cmpsl
and
movsb
into
out
pop
and
xor
sbb
pop
xchg
or
in
test
xor
stos
xor
lea
not
outsb
push
andb
sub
js
je
lret
cmp
and
arpl
repnz
dec
icebp
jg
cltd
cmc
fdivs
orb
shrb
cmp
mov
adc
and
cli
jmp
mov
lea
push
ss
test
mov
pusha
in
xor
lods
add
imul
dec
dec
xor
in
jle
push
inc
xor
xchg
dec
jo
icebp
dec
out
fdivs
ja
test
push
xor
insl
fsubrl
mov
mov
imul
arpl
push
mov
leave
clc
rclb
add
pusha
jl
fistps
shlb
push
je
outsb
mov
jae
adc
pop
lds
push
daa
mov
mov
push
sti
fucomp
sub
mov
push
fucomi
lret
jmp
xor
imul
ss
js
push
aad
jle
xchg
bound
pop
shlb
out
ljmp
sub
je
lods
mov
out
jmp
bound
mov
idivl
inc
fmuls
popf
cmp
loope
mov
push
jae
das
xor
jge
and
or
dec
cmpsl
push
xchg
sub
cmp
incb
in
mov
je
frstor
lea
push
ror
ds
sti
bound
mov
xor
ret
push
sbb
mov
js
xchg
scas
frstor
in
jne
mov
sbb
jl
jecxz
les
push
outsb
jg
mov
imul
vpmacssww
mov
or
push
push
repz
xchg
pushl
je
and
adc
fdivrs
mov
mov
scas
sbb
mov
xor
sbb
mov
push
sbb
and
lods
dec
xchg
jns
insb
andl
inc
std
in
jns
cmp
xor
sbb
xor
cmp
jmp
push
fsubs
pop
mov
arpl
shr
imul
add
adc
lret
into
mov
mov
inc
sub
mov
sbb
enter
or
cmp
jp
mov
arpl
inc
and
xchg
subl
pushf
jb
daa
jg
xchg
gs
dec
ss
test
xor
aas
sub
cmpsb
test
xchg
jl
jle
push
mov
jecxz
lock
inc
sub
icebp
leave
push
aas
aaa
sub
mov
dec
pop
add
cmp
out
push
jmp
cwtl
mov
cmp
push
pop
add
mov
push
int
jmp
rcl
addr16
mov
sub
xchg
xchg
cmp
and
sub
leave
insb
mov
fcoml
dec
addr16
pop
push
in
lret
sbb
aas
jbe
push
negl
sti
les
clc
cmpsl
arpl
jnp
pop
dec
cmp
outsb
dec
cld
insb
mov
fprem
mov
dec
xor
fwait
aam
imul
out
pop
mov
adc
pop
clc
sbbl
in
and
insl
mov
daa
stos
push
pop
aad
mov
inc
loop
xor
sti
mov
addl
add
repz
cli
outsl
dec
push
hlt
movsl
sub
xlat
outsl
ret
rep
jl
rorl
daa
mov
sahf
ret
sub
aam
push
fs
andl
dec
and
pop
add
jge
jno
leave
imulb
outsb
shrb
push
xor
adc
arpl
sub
mov
clc
dec
dec
mov
cmp
rorl
jne
jmp
lcall
nop
sbb
into
cmpsb
loopne
sbb
jbe
cmp
push
push
mov
inc
adc
mov
ret
mov
push
add
pop
adcb
lods
lods
and
push
in
inc
pop
outsb
enter
dec
jl
ret
pop
xchg
ds
jns
jmp
outsb
or
jp
and
ret
or
push
enter
add
daa
scas
scas
inc
es
rorl
mov
and
mov
add
inc
inc
leave
sub
inc
sbb
lods
add
add
mulps
xor
mov
cli
lcall
mov
es
loope
cmp
sbb
sbbb
fisubrs
jg
aaa
popf
inc
cltd
orl
xlat
out
cmp
js
hlt
lret
sarl
mov
sbb
orb
scas
out
gs
shll
rcrb
and
mov
pusha
sbbb
sti
xchg
insb
push
mov
add
cltd
pop
das
mov
add
mov
in
sub
std
jne
mov
xchg
mov
loopne
xchg
arpl
jbe
aam
mov
popf
mulb
adc
mov
mov
movsb
mov
sti
lret
cwtl
idivl
jnp
mov
orb
add
dec
cmp
lea
ror
sahf
ret
pop
lea
fsub
sbbb
mov
push
sarb
loope
xlat
and
mov
pop
adc
pop
xorl
push
push
or
lret
fstpt
pop
insl
es
lds
mov
cwtl
mov
pop
sub
shll
inc
andl
shl
dec
js
push
not
dec
fs
jnp
aad
or
mov
or
adcb
or
movsb
fstl
push
movsb
mov
push
test
fldenv
fwait
dec
dec
insb
int
xor
dec
imulb
mov
les
pop
mov
push
cltd
inc
mov
cld
jg
je
push
push
jo
fdivl
cmp
pop
cmp
pop
test
daa
dec
mov
pop
in
pop
jp
les
sbb
stc
lahf
in
jae
outsb
sub
paddw
cmpsl
hlt
adc
cmc
jno
out
pop
fcoml
hlt
jmp
adc
add
mov
outsb
or
mov
mov
repz
adc
inc
add
sub
into
pushf
sbb
sbb
or
cmp
pop
ficoms
sahf
mov
adcb
mov
hlt
add
insl
loope
lret
aaa
scas
imul
fisttpll
stc
mov
push
stos
push
std
and
fcompl
loop
lret
popa
lea
or
out
xchg
dec
div
lret
aas
cmpsb
jp
add
and
dec
or
movsl
lods
cmp
jbe
popf
cli
push
inc
out
insb
into
fstpt
and
std
push
out
pop
jge
or
in
sub
mov
pusha
subb
jl
jae
rorb
arpl
add
mov
lods
loope
inc
push
push
cld
cmp
jmp
divl
push
sub
add
cmp
push
jp
stos
xor
pop
mov
out
pop
or
ffreep
xor
cs
sti
clc
daa
push
fdiv
jns
jp
fcmovnb
lea
push
xchg
dec
push
and
imull
pop
mov
cs
enter
cs
pusha
xor
pop
and
mov
pop
ret
jp
iret
xlat
cmp
cs
cmp
ficoml
mov
out
mov
xlat
lcall
out
add
dec
out
dec
pop
repz
xchg
iret
sarb
leave
clc
mov
pop
call
and
cld
stos
jecxz
cld
lcall
xchg
add
popa
fsub
dec
scas
push
inc
in
in
mov
rcl
lods
push
cmp
cmp
dec
push
outsb
pop
xchg
sbb
rorb
inc
push
fiaddl
cld
jae
pop
inc
in
cmpsb
aaa
test
mov
jmp
pop
fdivp
popf
call
sbb
jb
in
mov
pop
sbb
fwait
enter
ss
dec
mov
int3
repnz
test
int
dec
cmpps
out
xchg
into
jae
mov
jecxz
in
mov
and
cmp
pusha
sub
push
cmc
pop
out
out
fwait
adc
mov
dec
cmp
cltd
add
xor
adc
in
and
jbe
push
mov
cmpl
cmpsl
lcall
cmp
and
das
xor
mov
cld
sub
jmp
pop
xor
stos
sti
rcll
jle
cmp
mov
clc
lods
or
test
fs
out
cs
arpl
mov
dec
fstl
push
rclb
out
or
iret
das
imul
jno
stos
or
jmp
test
data16
cmp
scas
lahf
addr16
loope
cmp
add
xchg
pop
pop
enter
pop
bound
mov
aad
xchg
push
push
imul
andb
sbb
jne
and
movb
cli
les
outsb
imul
addr16
xchg
cmp
xchg
pop
xor
mov
jge
arpl
xchg
mov
adc
xchg
push
leave
scas
pop
inc
xchg
call
jae
call
pop
cwtl
sbb
jmp
adc
mov
and
ja
out
outsb
fisttpll
and
dec
rclb
adc
out
scas
fcomps
and
jo
xchg
mov
inc
sub
pushf
cmpsl
sbb
xlat
lahf
shrb
or
pop
das
sarl
inc
imul
movsl
dec
jle
xor
das
clc
jne
push
cli
testl
jo
popa
stc
jp
inc
decb
mov
loope
lcall
xchg
sub
mov
fdivr
mov
aaa
addr16
sysexit
gs
arpl
notl
adc
sti
mov
push
and
cmc
mov
xchg
mov
adc
mov
rclb
ret
push
mov
mov
or
mov
sub
sbb
push
out
and
xchg
xchg
mov
aam
cld
dec
xchg
add
ja
xchg
dec
inc
push
sbb
xor
pusha
mov
and
push
stos
sbb
dec
pop
inc
out
add
inc
movsl
pushf
xor
js
mov
movsb
add
movsl
lods
and
mov
dec
adc
es
stos
in
dec
lea
xchg
fwait
popf
addl
dec
fprem
sub
lds
pop
mov
sbb
mov
je
mov
push
jecxz
xchg
lcall
push
bound
xor
adc
add
scas
lea
scas
ljmp
mov
jb
pop
cld
outsb
push
shll
clc
mov
enter
scas
mov
mov
jmp
sbb
xchg
dec
adc
xchg
arpl
mov
in
int3
hlt
je
test
fwait
adc
out
fcoml
fcmovu
or
sub
lret
dec
lcall
aam
mov
jl
adc
push
inc
sbb
xorb
in
das
or
out
paddq
gs
jge
jle
cmp
popl
mov
imul
call
in
in
jb
shrl
loope
dec
lds
mov
sbb
fwait
lret
jge
in
icebp
loop
xor
push
pop
loop
ja
scas
mov
jmp
fldl
inc
mov
xchg
shlb
lods
in
hlt
pop
cmp
daa
mov
test
xchg
add
mov
mov
push
push
sbb
pop
ret
leave
mov
stos
in
mov
bnd
popa
scas
adc
insb
xchg
xchg
add
test
sub
rsm
insl
pop
or
icebp
rcr
dec
cmpsb
dec
sub
lret
mov
or
xchg
xor
pop
sbb
imulb
lahf
mov
dec
ja
xor
add
jbe
jge
hlt
mov
dec
hlt
jp
add
out
dec
sub
push
cmp
lahf
jb
ja
jle
call
inc
popl
xchg
adc
xchg
sub
mov
mov
mov
lods
mov
pop
mov
or
mov
dec
in
cmpsb
roll
div
mov
cmp
mov
shl
cltd
or
xchg
idivl
adc
add
xchg
outsl
ret
shl
int3
jp
xchg
mov
sbb
pop
push
mov
xor
and
cli
jae
pop
and
pop
xchg
and
mov
lret
push
mov
jg
pop
mov
rorb
daa
imul
cwtl
ljmp
ja
loope
or
loope
fistl
es
adc
bound
sahf
cmp
inc
ss
cmp
dec
add
adc
andb
or
mov
xchg
out
jmp
jle
inc
mov
sahf
or
out
xchg
mov
push
dec
outsl
jnp
es
sbb
cltd
add
push
rcll
cmp
loop
or
rcrl
push
xchg
push
int3
cmc
ljmp
xchg
insl
fwait
mov
dec
nop
clc
in
std
repz
lret
subb
lret
shl
cmpsl
dec
addb
loopne
icebp
sti
jno
fs
cmp
das
fdivrp
ret
sarb
add
cmc
mov
loop
nop
jl
cmp
pop
adc
push
jp
int3
dec
dec
sbb
movsb
hlt
push
cwtl
jno
mov
cmp
imul
cmp
es
sahf
cmc
xchg
and
pop
jae
idivl
mov
push
jecxz
addr16
xor
xor
xor
fistpl
xor
sub
repnz
mov
mov
add
jb
test
gs
test
jo
into
jmp
aas
mov
in
imul
sahf
xchg
pop
cwtl
lcall
ss
inc
sbb
pop
repnz
or
pop
ljmp
fistl
xchg
stos
or
mov
inc
mov
int3
test
ss
aad
mov
and
xchg
pop
cmp
jne,pn
shrl
jnp
xchg
rcl
mov
std
dec
mov
js
and
mov
filds
repz
daa
retw
dec
or
jnp
test
shrb
outsl
lret
nop
hlt
loop
lcall
adc
int3
sbb
jg
add
int3
xchg
loope
cmpsb
cmp
clc
loopne
out
lcall
add
or
mov
movsb
push
push
dec
push
cmpsl
pushf
aad
in
xor
push
push
rolb
adc
push
pushf
into
push
push
mov
push
sub
jp
xchg
sub
cs
inc
mov
popa
jp
fwait
push
fsubp
bound
cltd
sbb
ror
cmp
fwait
mov
adc
cmc
popf
shrb
and
push
stc
hlt
push
xchg
imul
lea
mov
xchg
lods
ret
hlt
jbe
sbb
ret
and
mov
rolb
jbe
inc
cmp
fwait
dec
aad
fnstsw
repz
adc
push
mov
add
mov
mov
inc
cmp
adc
call
icebp
cmc
jo
pop
sub
sti
test
loopne
sub
inc
jne
pop
das
add
mov
pop
imul
mov
mov
or
mov
daa
pop
lods
fwait
subl
or
push
inc
adc
bound
ret
xchg
dec
pop
stos
or
add
movsb
lret
aad
inc
push
fs
mov
inc
mov
rcr
les
cmp
scas
es
push
and
in
in
push
xor
sbbl
sbb
mov
jmp
or
mov
push
jb
pop
sbb
cmp
push
xchg
jmp
popa
dec
cli
fwait
ja
arpl
pop
ss
inc
sbb
mov
mov
shl
fisubrs
xor
cmp
in
fildl
inc
test
shll
arpl
inc
dec
inc
int3
xor
dec
rclb
or
adc
add
lods
or
les
imul
jae
shll
popf
mov
in
das
bound
xchg
cmpsl
rolb
dec
dec
xchg
sbb
dec
or
rcll
in
sub
fs
aam
dec
add
or
in
xchg
leave
mov
mov
mov
cli
inc
mov
divb
mov
test
or
sbb
dec
push
cwtl
dec
in
lcall
inc
add
je
mov
xchg
and
ss
push
sbb
adc
orl
mov
and
fnstsw
iret
mov
add
sbbb
mov
cmp
jecxz
mov
jge
add
push
mov
sub
in
and
fsubr
data16
inc
dec
js
lea
jmp
xor
pop
mov
cltd
xchg
std
jg
ss
dec
stos
in
outsb
or
push
je
dec
cwtl
enter
out
out
jp
mov
fimull
push
mov
rcll
cmpsl
add
inc
lock
adc
cwtl
movsb
adc
inc
add
pusha
lods
mov
xchg
push
dec
shrb
and
add
mov
and
xchg
leave
jmp
pop
xor
inc
lea
sahf
push
in
or
sbb
fmull
in
or
dec
test
loopne
inc
add
push
mov
call
test
lods
mov
xchg
lods
insl
add
and
jp
cli
xor
fs
arpl
adc
dec
cmp
je
in
clc
xchg
cltd
mov
arpl
sbb
sub
push
or
mov
add
dec
push
addr16
rolb
popf
sub
sbb
cmp
sub
jecxz
mov
lret
dec
and
pinsrw
movsl
pop
sti
sub
fcomip
or
push
sub
push
lret
in
mov
xchg
and
jno
int3
and
pop
shlb
mov
sbb
daa
add
add
xchg
pop
cs
sbb
lret
lock
mov
mov
arpl
jp
sti
test
xchg
ror
dec
in
pop
lahf
mov
mov
bound
into
jae
ret
jp
cmp
mov
nop
imul
imul
jmp
icebp
ljmp
rclb
jmp
mov
pop
pusha
sbb
data16
jns
in
fnstcw
out
cs
lds
push
or
pop
jns
pop
cmp
in
ja
shr
test
inc
rol
scas
mov
cmpsl
orl
out
out
cmp
lods
jecxz
mov
dec
dec
sub
jnp
mov
in
sti
shrl
movsb
adc
push
fnstenv
fdiv
movsl
flds
xchg
es
cmp
dec
iret
lfs
inc
repz
mov
popa
inc
repz
and
mov
mov
call
xchg
cwtl
push
inc
xchg
ret
inc
imul
xchg
mov
shll
sub
loope
into
fsubr
sub
jae
xchg
and
outsb
xchg
push
pusha
aam
int3
stos
cmp
adc
cmc
jo
or
in
and
mov
lret
outsb
push
jmp
repz
cmp
mov
cmp
or
add
enter
add
leave
cmp
imul
lcall
rcll
cmp
movb
xchg
scas
dec
popl
jecxz
inc
rcrb
mov
lret
popf
je
rorb
mov
and
into
xchg
lds
add
popf
jns
cli
data16
icebp
mov
hlt
or
dec
rorb
pusha
stos
jmp
pop
gs
shr
pop
xlat
shlb
fadd
cmpsl
xchg
or
xchg
or
xchg
clc
dec
popa
stos
lcall
cli
rol
out
or
or
pop
push
sub
repz
ljmp
and
add
inc
notl
push
dec
mov
jge
dec
jb
inc
lods
jbe
pop
stc
pop
jne
and
fstpt
pop
mov
and
xor
mov
push
pop
mov
cltd
cmp
jmp
insl
xlat
adc
sub
jmp
mov
jl
rorb
pop
push
add
pushf
xchg
push
add
leave
daa
xchg
pop
popa
push
jp
call
pop
mov
mov
fstpt
imul
aaa
or
push
divb
dec
cmp
cli
in
jg
dec
pop
mov
push
inc
xchg
xchg
xor
fildl
stos
cmp
mov
fimuls
lcall
inc
pop
outsl
xor
jb
push
in
movsl
mov
cwtl
arpl
repnz
add
mov
pop
sub
and
xchg
adc
sbb
movsl
popl
call
mov
inc
call
add
addr16
adc
xchg
cmc
mov
pop
rcrl
jle
xor
mov
xor
xchg
cmp
leave
fbstp
movsl
xchg
push
mov
or
stc
in
jnp
and
xor
push
shr
sub
popa
out
test
and
ja
pop
outsb
pop
sub
bnd
dec
cli
and
mov
push
push
stos
and
sub
mov
out
mov
rolb
in
pop
gs
sbb
movb
adc
imul
push
cmp
mov
dec
movsb
dec
pop
hlt
xchg
or
inc
inc
hlt
cmp
insl
pop
lock
cmp
mov
or
pop
imul
sbb
xchg
pop
push
adc
mov
les
xchg
dec
ret
cmp
mov
fnstcw
lret
sub
adc
leave
push
mov
inc
push
mov
mov
adc
mov
push
outsl
call
mov
adc
lods
iret
mov
or
inc
mov
shll
insb
negb
xchg
and
sti
ret
jmp
call
add
pusha
inc
xchg
push
outsb
fisttpl
into
imul
cltd
and
xchg
inc
insb
in
fimuls
std
adcl
add
jl
dec
pop
daa
sub
clc
mov
enter
mov
out
xchg
cmp
and
cli
pop
loopne
ss
sbb
ljmp
mov
and
inc
inc
jno
mov
imul
ficompl
movsl
scas
dec
mov
dec
jp
push
rcl
stc
add
add
movsl
sub
xlat
add
sbb
cmpb
pop
ss
sbb
push
leave
sti
push
add
cmp
dec
in
pusha
push
or
or
dec
xchg
xor
or
sbb
jp
sub
fucomip
adc
icebp
cmpsb
dec
mov
cmp
and
int3
int
out
aas
aad
jo
repz
mov
inc
outsl
dec
cmc
mov
rorl
std
inc
movsl
fildll
jno
shrb
and
xchg
dec
jne
xor
pop
pop
clc
pop
push
bound
fsubrs
mov
clc
psllw
imul
test
mov
jne
popa
cld
scas
out
add
popf
dec
stos
and
push
std
dec
gs
sbb
loop
jle
std
lcall
sbb
pusha
mov
scas
xor
jg
das
lds
test
inc
fcmovne
and
pop
loopne
xor
mov
push
mov
mov
loop
cmp
push
js
icebp
add
mov
jp
cmp
push
xchg
arpl
mov
mov
xchg
dec
push
add
test
into
lcall
xor
dec
dec
push
push
jns
push
sbb
movsb
jle
mov
shrl
sub
pushf
mov
pop
push
xor
or
cmc
jmp
xor
daa
bound
into
ss
cmp
test
scas
mov
jo
or
xor
out
add
lea
loopne
cmpsl
mov
xchg
fildll
lcall
push
mov
mov
into
shlb
xor
les
rorl
dec
je
out
mov
hlt
loop
xor
cmc
insl
add
push
lods
scas
test
dec
adc
pop
xor
popa
pop
adc
mov
dec
mov
inc
shll
add
stos
mov
push
push
sti
pop
mov
push
cmp
gs
push
sub
cwtl
in
jae
add
sbb
loope
xlat
add
scas
loopne
add
aaa
in
cmp
loope
sub
inc
push
movsb
mov
push
out
roll
pop
popf
or
stc
out
xchg
leave
ret
clc
jb
inc
pusha
es
xchg
adc
in
fdivl
stos
fisubl
jnp
sub
lods
lret
sahf
fists
push
or
lock
leave
sbbl
jnp
mov
dec
dec
aam
xchg
insb
jnp
and
andb
cmp
loope
hlt
adc
and
stc
sti
sub
cs
sub
int
or
scas
inc
lods
cmc
cmp
scas
cmc
mov
cmp
adc
lea
push
cmp
gs
je
ljmp
stc
push
adc
mov
lds
shl
mov
sub
mov
inc
orl
js
fimuls
cmc
fcomps
adc
je
push
stos
add
mov
or
xlat
sbb
pop
inc
push
xchg
add
bound
ss
loop
in
icebp
aam
jmp
mov
inc
fwait
test
pop
test
sub
mov
shrb
loopne
pop
jne
jo
addr16
adc
sti
xlat
push
jge
lahf
lret
pop
add
xlat
fistpll
pop
mov
lcall
jp
js
orl
in
lea
dec
loopne
fchs
mov
stos
pop
push
iret
sbb
push
adc
dec
in
stos
mov
clc
or
xchg
xor
inc
pop
push
imul
mov
jg
lock
stos
cli
and
out
push
test
rol
aas
push
push
xchg
test
jo
pop
sub
loopne
push
daa
mov
pop
mov
ss
inc
pop
cmp
in
jge
orb
fwait
imul
fildll
mov
in
imul
jae
cltd
add
jns
add
jmp
sti
or
push
jae
aaa
cwtl
test
push
xor
xlat
xor
push
scas
imul
shrl
dec
ds
sub
xchg
push
int3
xor
popf
in
loope
cmp
imul
cmp
scas
into
ljmp
insb
push
sub
jg
xchg
mov
adc
jno
jb
mov
sbb
insb
shlb
loop
and
xchg
jne
xchg
xchg
or
dec
mov
add
hlt
or
inc
iret
push
jne
ret
les
mov
inc
lret
or
push
dec
cli
mov
pop
xor
mov
loopne
fwait
ljmp
stos
loope
mov
test
insb
nop
mov
ror
fs
aaa
lods
sub
jge
imul
adc
sbb
out
sahf
repnz
scas
int3
outsl
leave
mov
sbb
xor
mov
mov
and
fsubl
push
xchg
popf
xchg
inc
cltd
jecxz
lret
movsb
xchg
mov
test
scas
jg
add
js
inc
lret
fldenv
add
loop
fidivl
push
fistpll
cwtl
xor
dec
fldenv
jle
push
mov
jle
cltd
add
leave
and
jecxz
cwtl
mov
xchg
gs
and
dec
sub
jmp
jp
mov
pop
jno
gs
xchg
inc
mov
push
or
cwtl
sarl
mov
sahf
jp
mov
inc
jnp
mov
enter
push
inc
call
or
subb
sbb
xchg
fnstcw
lea
mov
and
adc
jecxz
test
in
add
jno
dec
mov
xor
scas
in
jns
fsubrl
or
es
xchg
repz
cs
gs
push
and
jno
mov
pusha
or
mov
pusha
leave
cltd
dec
inc
outsl
push
push
scas
push
xchg
push
mov
push
les
iret
test
incb
mov
icebp
sub
shlb
fidivs
subb
inc
jp
addb
add
add
mov
icebp
inc
push
je
push
xor
call
inc
cmp
xchg
lds
insl
mov
sbb
sbb
gs
push
jge
pop
or
xor
push
dec
inc
push
and
push
movsb
inc
pop
fbstp
xor
push
push
lock
scas
out
or
adc
dec
rolb
bound
popa
shrb
loop
fadds
adc
enter
mov
mov
sub
push
or
aas
push
fcmove
mov
jg
xchg
inc
pop
repz
mov
pop
sbb
stc
ret
negb
loop
aaa
pop
jmp
shrl
lret
arpl
push
cwtl
pop
xchg
into
insl
push
mov
jge
orb
hlt
mov
sti
push
insl
lcall
jge
sbb
mov
test
test
pop
popa
lea
xor
sbb
lahf
out
arpl
jle
insl
and
mov
nop
pop
sub
pop
inc
out
test
mov
mov
jecxz
add
xchg
and
out
mov
push
cmp
sub
insl
push
push
fwait
pusha
inc
add
loop
sarb
push
adcl
movl
into
adc
movsl
fisubs
inc
and
rorl
ret
sbb
pop
test
push
xchg
div
cmp
clc
ret
jle
rcl
or
int
out
int
mov
sbb
dec
sub
cli
cmp
push
insl
xor
pop
in
and
mov
pop
xor
cmp
cli
or
bound
mov
jno
and
xchg
negl
ljmp
sbb
daa
mov
inc
add
hlt
fistpl
imul
pusha
or
adc
data16
das
add
inc
and
xchg
pop
ss
and
inc
std
mov
mov
into
lahf
mov
out
add
scas
cs
mov
aaa
dec
xchg
or
cs
mov
lods
outsb
icebp
adc
test
or
fs
and
mov
jp
adc
sub
pop
imul
nop
iret
cld
idiv
dec
xlat
dec
sub
dec
xchg
dec
adc
scas
mov
lods
stos
in
mov
adc
mov
mov
shlb
xor
mov
dec
stos
sub
dec
aaa
dec
inc
mov
jle,pn
mov
sub
or
jne
aad
sub
pop
jmp
mov
and
data16
fsubrs
mov
push
mov
test
mov
mov
jo
test
fcom
jo
and
pop
xor
dec
mov
push
fimull
pop
dec
repz
test
out
lahf
aas
dec
cmp
jecxz
push
clc
cwtl
scas
add
ds
fldt
add
inc
aas
loop
cmp
push
jl
xor
xchg
fidivrs
ret
out
in
push
fcoms
mov
mov
xchg
push
leave
test
inc
mov
inc
cmc
fnstsw
mov
addr16
andl
jg
inc
rcl
dec
inc
pop
cli
rorb
imul
jno
pop
cwtl
iret
cmc
xlat
mov
jp
ret
js
lock
sbb
arpl
or
out
jb
mov
les
inc
xchg
push
jne
iret
cmp
add
ljmp
call
xor
inc
lret
stos
add
loope
jl
mov
rcll
ret
movntq
out
imul
insl
les
and
imul
mov
or
int3
xchg
lret
or
dec
push
xchg
aam
jmp
push
push
lds
and
out
or
mov
pop
pop
or
sbb
or
je
xlat
std
aas
and
popf
cmp
add
cmp
cs
xchg
dec
outsl
sub
cmp
sbb
push
xor
fiaddl
jb
outsl
insb
inc
add
mov
fidivrl
push
mov
leave
pop
fcmovnbe
out
push
sti
jo
mov
mov
inc
cltd
cmp
xor
push
jle
jmp
test
cmp
ficomps
sub
pop
jnp
add
lret
movsb
or
scas
pop
sub
test
ds
xchg
aaa
leave
xchg
fldcw
cmp
pushf
mov
sbb
in
mov
pop
and
or
shl
mov
in
ja
inc
xchg
cmp
mov
leave
hlt
or
pop
pop
mov
xor
and
dec
lahf
lret
int
mov
sbb
popf
push
inc
repnz
jb
mov
aaa
push
mov
jmp
outsl
sti
mov
int3
int3
jo
xlat
test
pop
cmp
lds
hlt
aad
sub
test
imul
mov
data16
bound
cvtps2pd
call
push
cmp
es
fdivrs
movsl
adc
xor
into
cmp
pop
loop
dec
mov
add
adc
decb
cmp
xor
jle
or
inc
insl
mov
cltd
sarb
inc
or
and
sbb
jae
aaa
pop
sbb
xchg
sub
mov
adc
movsl
dec
xchg
adc
lds
jnp
repz
sub
pop
cmp
nop
repnz
add
out
repz
cltd
add
das
andl
mov
and
outsb
scas
inc
fwait
loop
sbb
mov
shlb
inc
adc
movsb
add
jae
gs
or
out
mov
mov
addr16
mov
add
ret
fdivr
jnp
mov
int
in
mov
popf
mov
repnz
aam
xor
fsts
or
push
xchg
pop
aaa
sub
jmp
push
mov
xchg
add
scas
fsts
daa
in
out
test
xchg
pop
mov
and
xchg
dec
in
or
adc
or
and
pop
dec
adc
es
lcall
add
sub
push
mov
sarb
xor
rorb
mov
outsl
stc
push
jb
roll
fstps
dec
mov
jecxz
push
out
xor
dec
outsl
aaa
lahf
push
ficomps
dec
mov
fisubrs
push
xchg
pop
pop
in
mov
dec
jge
sbb
dec
lret
mov
mov
in
sarl
pop
mov
mov
sarl
xchg
in
xor
lock
loop
fistl
cmpsl
cmp
add
out
out
fldcw
sbb
dec
popf
inc
sahf
data16
cmpsl
adc
jl
or
push
cs
aam
cmp
jecxz
fs
scas
lods
mov
inc
dec
sbb
pop
inc
cmp
in
push
clc
cltd
xor
les
stc
ret
push
push
fcomps
aaa
push
test
lahf
mov
cmp
les
sbb
arpl
lea
imul
cltd
popf
mov
adc
call
lret
dec
or
jno
add
sahf
add
mov
xchg
and
scas
push
jp
mov
and
fdivs
xchg
jo
push
sbb
sahf
xchg
mov
stos
cmp
fstl
gs
xor
addr16
add
ljmp
or
push
cmc
adc
or
xchg
aas
cmpl
fs
mov
push
lret
push
test
sahf
push
push
add
stc
adc
imul
xor
rorb
adc
sub
popf
orl
mov
cs
cmovp
pop
filds
cli
push
test
or
punpckhwd
test
test
cmpsb
pop
mov
xor
add
xchg
test
cmc
push
inc
mov
sub
loop
xlat
popa
mov
mov
jmp
xor
jmp
mov
std
jmp
pop
cwtl
dec
cmp
push
hlt
fwait
into
push
imul
push
gs
out
lea
mov
cwtl
cli
cmpsl
dec
jbe
mov
ret
adc
cmp
xor
push
jns
mov
and
sbb
inc
daa
aas
fiadds
stos
push
mov
aas
jge
add
roll
xor
in
outsb
mov
ret
adc
pop
fsubs
nop
and
mov
fs
out
out
mov
in
int3
sbb
mov
xchg
add
pop
ret
pusha
fistps
sti
rcl
xlat
jge
aas
es
aam
cmpsb
push
adc
fwait
mov
fldcw
dec
jl
push
in
outsl
cli
pop
adc
jnp
jle
scas
divb
cld
jge
xor
mov
sbb
add
cmp
jae
cwtl
jp
jno
shr
or
lahf
inc
lods
adc
push
popf
outsl
stos
jno
dec
pop
int3
mov
loopne
mov
jb
mov
test
mov
movsb
pusha
and
insl
push
cltd
jmp
mov
outsb
outsb
sub
or
mov
mov
sbb
mov
shlb
or
movsb
rorl
movsl
cmc
mov
ds
add
daa
mov
aas
pop
mov
dec
jecxz
cmp
add
push
insl
lods
inc
call
jl
insl
inc
mov
xor
cmp
mov
insb
loop
iret
cltd
sub
in
bound
add
xchg
test
imul
in
cltd
sbb
push
test
xchg
popf
das
aaa
mov
adc
inc
jecxz
add
jnp
xchg
sbb
test
adc
inc
mov
add
xor
lods
mov
add
bnd
aaa
test
dec
sbb
dec
dec
inc
je
mov
in
sbb
sub
mov
cld
mov
mov
popa
popa
fidivrl
push
xchg
mov
sbb
aaa
jg
pop
sbb
idiv
cmp
push
and
push
roll
ret
mov
cmp
push
jle
dec
out
sbb
pop
push
xchg
pushf
ret
movb
ficomps
in
inc
ficoml
sub
xor
test
addr16
lods
call
imul
push
add
mov
sbb
imul
or
xor
aaa
shlb
xor
pop
sbb
xchg
cmpsl
inc
pop
in
mov
push
insb
hlt
ss
pop
es
push
mov
cwtl
sub
jp
lret
movl
cltd
jg
adc
cmc
inc
mov
movsb
call
ja
adc
pop
int3
sti
or
cmpsl
pop
stos
lret
pop
jmp
pop
test
mov
out
adc
mov
repnz
dec
pop
fsqrt
inc
dec
add
sub
loopne
jbe
dec
and
cld
xor
out
aam
sbb
fisubrs
ret
mov
or
pushf
xor
or
stos
adc
mov
ror
movsl
repnz
or
int3
jl
mov
and
gs
fdivr
pop
iret
xor
pop
aam
ret
sub
lahf
rcrl
cmpl
notl
ja
xor
fidivrl
or
fs
mov
lea
in
fcoms
push
scas
test
rorb
pop
xchg
adc
push
sbb
dec
cmpsb
cmp
enter
lods
mov
adc
pop
enter
fimull
enter
jne
int3
push
dec
lock
mov
out
pop
aad
inc
push
bound
pop
std
mov
ret
xchg
pop
mov
sub
aas
mov
notb
jge
int
cmp
mov
dec
cmp
lcall
xchg
jnp
lds
aaa
test
sub
and
icebp
test
xor
xchg
lcall
push
js
pusha
jmp
cld
loope
fcoms
pop
jmp
fmuls
or
repnz
js
sub
push
cwtl
cmp
mov
ljmp
sbb
bound
int3
icebp
jo
lret
fildll
cmp
addr16
test
popa
and
roll
pop
and
nop
xchg
dec
bound
dec
mov
xor
jle
aam
cwtl
jnp
fsubs
lahf
or
fisttps
add
ds
xor
or
fwait
js
push
push
sbb
add
sub
mov
sbb
cwtl
test
movsl
pusha
mov
dec
add
jno
sbb
adcl
insl
aas
adc
into
rorl
fbstp
push
arpl
xchg
aaa
mov
mov
sbb
xchg
or
sub
mov
pop
or
push
js
cli
cmp
and
cmp
inc
pop
aas
insb
mov
fs
jbe
push
inc
mov
xchg
jge
pop
dec
or
clc
mov
inc
lea
mov
push
sarb
cs
mov
add
popw
cltd
fcoms
jno
jl
testb
add
cmp
jp
cmpsl
roll
out
push
push
add
popf
cli
movsb
outsb
stos
mov
imul
pop
or
and
mov
cli
ja
lret
jbe
jbe
fistpl
push
repz
sbb
xchg
test
add
adc
sub
fildl
xorb
dec
or
or
repnz
sub
jo
mov
mov
stos
jns
adc
hlt
or
out
jns
xchg
roll
das
lods
in
inc
cwtl
es
sahf
push
std
mov
fstpl
in
push
sbb
ret
jmp
int
popl
pop
add
push
jge
out
mov
fwait
push
imul
add
push
negb
fwait
roll
and
cs
and
outsb
mov
outsl
dec
sbb
mov
cld
mov
cmp
push
out
ljmp
inc
pop
jle
and
push
mov
adc
xchg
ficoml
into
pop
fs
lcall
out
xchg
aas
mull
insl
mov
popf
ljmp
imul
add
lock
adc
loopne
push
pop
inc
loopne
push
sbb
mov
push
inc
imul
mov
sbb
cs
adc
cld
adc
sbb
mov
and
in
mov
out
sub
xor
scas
push
idivb
mov
pop
sub
mov
jae
push
cmpsl
jne
js
pop
mov
or
lret
mov
xchg
test
jo
jns
jg
icebp
jle
push
mov
pop
xor
and
ds
shll
inc
lea
out
mov
push
mov
inc
sub
cmpsb
dec
adc
fdivs
mov
outsb
in
jne
jae
jnp
mov
inc
nop
xchg
or
dec
mov
daa
out
jmp
paddb
test
outsl
je
idivb
mov
in
rcrb
cmp
jge
cmp
test
jg
jg
stos
add
adc
movsl
mov
cli
cmp
neg
popl
lahf
stos
std
nop
pop
js
push
sbb
sub
repnz
and
cld
jmp
jns
cmp
xor
stc
lock
mov
mov
sub
es
movsl
jge
fldenv
iret
ds
pushf
and
pushf
push
sub
and
ss
mov
jmp
fisubrl
loop
in
roll
stos
jb
stc
rcll
scas
sub
inc
ds
adc
outsl
and
mov
or
push
pop
pushf
hlt
lds
cltd
push
mov
jb
daa
popf
add
shl
pop
mov
outsb
movsl
mov
mov
fwait
add
jb
mov
call
andl
movsb
xchg
xchg
shrl
mov
push
dec
int
jle
dec
sub
and
arpl
aaa
push
fsubl
cld
push
sarb
jp
lock
sub
dec
ss
mov
dec
ja
jbe
cmp
sub
jecxz
sti
daa
outsl
jmp
jns
and
pop
lds
into
lods
jb
or
sar
push
movsb
and
sbb
lret
sub
adc
xchg
and
scas
or
jp
push
out
mov
mov
addb
push
sti
int
inc
repnz
std
int3
andl
push
sub
test
arpl
loop
push
push
std
mov
dec
fstpl
pushf
daa
or
xchg
or
std
inc
leave
cwtl
mov
push
lahf
add
cmp
pop
into
aas
fnstenv
out
xchg
push
inc
shrb
xchg
pop
rol
mov
inc
mov
xchg
ss
inc
scas
adc
je
inc
jae
mov
inc
mov
daa
xchg
pusha
pop
les
repz
lret
mov
xchg
popf
movsl
in
dec
das
cmp
push
mov
scas
out
mov
rcrl
fistpll
adc
std
sahf
pop
cmp
les
fwait
xorb
cmpsl
push
je
jl
decb
sysret
add
out
sub
scas
lds
or
cli
loopne
sub
xor
inc
cmp
sub
ja
add
pop
sbb
inc
jg
stos
mov
and
add
cmpsb
sahf
loop
mov
jae
fwait
pusha
inc
cmp
testl
les
ljmp
test
fldl
mov
cmc
fbld
in
cmp
and
sub
mov
test
sbb
icebp
int3
movsl
xor
mov
add
inc
mov
add
stos
test
sub
outsb
add
cmpb
fmuls
les
inc
ret
mov
jbe
fidivrl
aaa
add
sub
stc
jle
inc
xchg
stos
pop
ss
or
xlat
xor
aaa
xor
mov
sbb
test
lods
mov
add
mov
mov
hlt
fistpl
shll
xor
mov
stos
jno
jmp
lds
xchg
sub
outsl
mov
mov
mov
mov
mov
cltd
dec
pop
xchg
lods
hlt
shll
insl
mov
outsb
and
inc
cmp
mov
shlb
aaa
dec
scas
int
sbb
xchg
mov
or
ss
in
loope
imul
ljmp
adc
push
cmp
fwait
lock
jnp
daa
out
pop
dec
movsl
insb
arpl
lods
xor
arpl
or
mov
sbb
push
push
xchg
mov
pop
shrb
cmpsl
push
dec
pop
lcall
lret
xor
cmp
push
jno
jmp
ljmp
add
add
push
ljmp
pop
cmp
imul
in
lock
bound
dec
dec
cmp
mov
cmp
inc
mov
mov
scas
mov
add
ljmp
fstpt
mov
stc
imul
xor
sti
lods
notb
lcall
jle
adc
dec
push
into
xchg
mov
stc
pop
lds
dec
xchg
test
jmp
lahf
stos
jne
std
addb
cmpsb
jl
or
jg
add
push
and
lret
fdivrs
sbb
cmpl
inc
insl
jno
aas
dec
ljmp
or
inc
mov
inc
mov
cmpsb
stos
notl
jne
pop
pop
in
sub
dec
sub
cmp
cmc
xchg
jne
xchg
in
gs
xor
out
dec
xchg
mov
movlps
mov
mov
mov
adc
insb
fstpt
in
inc
imul
and
dec
outsb
iret
movsb
sbb
pop
shlb
cmpsl
push
and
mov
xchg
inc
jge
mov
ljmp
sbb
sub
fidivrs
lret
lods
imul
dec
inc
in
mov
adc
mov
fistpl
mov
add
call
push
mov
jecxz
sbb
mov
mov
int3
sub
cmp
inc
fcoml
xchg
jbe
add
cs
fcomps
dec
sbb
mov
mov
popa
imul
jmp
ffree
lock
and
js
int3
push
mov
and
or
and
mov
mov
repz
mov
test
jbe
add
inc
cld
sub
xor
iret
aas
enter
mov
dec
lock
aas
sub
cld
lds
ljmp
out
push
test
enter
imul
xorb
pop
push
dec
adc
push
xlat
sbb
cwtl
pop
and
or
test
sub
sahf
loopne
push
xor
dec
rolb
inc
ljmp
aas
mov
out
or
mov
push
lcall
mov
std
mov
push
jge
xchg
ret
hlt
and
dec
movsb
lods
xchg
pop
repnz
cmc
ja
clc
jb
xchg
xchg
add
mov
xor
push
or
cmpb
cmp
int
lds
pop
fidivl
add
ljmp
sahf
push
adc
das
push
ret
sbb
jno
or
sbb
mov
sub
xchg
jle
bound
push
xchg
stos
pop
add
mov
lock
cmp
inc
mov
mov
jo
jb
sbb
push
mov
cmpsl
mov
inc
xlat
add
loopne
push
lea
cli
mov
xchg
adc
hlt
aas
jl
jne
movsb
sbb
fdivrs
ret
sub
fistpll
inc
and
es
sub
imul
aam
pop
fisubrl
adc
lcall
jg
jmp
xor
push
daa
push
mov
add
xor
push
xchg
jecxz
mov
adc
es
cli
and
mov
cmp
loop
fiadds
jecxz
inc
cmc
ret
stos
pop
sub
int
repz
pop
add
lods
mov
xor
mov
mov
into
sbb
mov
ret
mov
mov
jo
in
mov
out
int3
and
push
cld
mov
lret
jne
cmp
pop
into
scas
mov
arpl
icebp
movsl
cmp
cli
mov
sub
mov
dec
mov
ja
imul
xchg
out
pushf
jmp
xor
push
sbbb
aam
jecxz
movsl
imul
xor
mov
popf
insb
in
push
mov
mov
in
scas
add
push
push
pop
js
jmp
in
daa
decl
jno
ret
in
aam
pop
popf
dec
or
jecxz
xchg
pop
mov
pop
dec
mov
sub
ret
test
add
xchg
add
xchg
jb
pushf
or
push
les
inc
push
jg
mov
sbbl
int
add
push
movsb
inc
test
fstps
mov
cmp
xorl
push
push
rorb
out
jmp
ds
or
movsl
cmp
adc
dec
jg
pop
mov
repz
and
aam
jge
int3
incb
lahf
movsl
ret
ss
xlat
popa
push
push
or
pop
lahf
bound
stos
mov
mov
pop
addr16
mov
xor
std
jno
push
lods
push
xlat
xchg
out
ficompl
inc
jns
into
lock
out
pusha
mov
inc
mov
leave
out
mov
fistpll
cs
xchg
pop
pop
pusha
cmp
xchg
mov
cmp
lds
push
mov
push
inc
scas
in
lcall
sbb
cmpb
sub
sub
aaa
or
push
pop
in
push
das
cmp
cld
jmp
rol
in
push
cmp
mov
xchg
lret
negl
adc
inc
cmp
in
and
and
pop
hlt
inc
inc
adc
aam
adc
fsubrs
es
mov
adc
stc
nop
mov
int
mov
popa
repnz
iret
stc
popa
mov
xchg
lret
cmp
testb
jg
mov
sub
es
cmp
mov
mov
js
test
cs
xor
ret
jl
gs
push
fsts
bound
ja
push
inc
ds
cmp
pop
sub
mov
xchg
xor
mov
js
and
jge
xlat
sbb
jo
add
fnstcw
bound
sub
call
subl
adc
inc
enter
fdivrs
or
mov
sbb
int3
adc
cmp
mov
jle
icebp
std
les
and
inc
int3
push
xor
dec
rol
dec
mov
push
pop
inc
sti
dec
bound
leave
fwait
mov
rol
adc
inc
insb
jp
or
add
push
jns
mov
pop
sbb
stc
dec
fucomip
subb
xor
sbb
ror
subb
dec
mov
dec
aad
test
cs
push
xor
sbb
aad
xchg
mov
add
fs
cmp
clc
pop
dec
xor
popa
push
xor
push
sub
or
test
pop
scas
ss
inc
push
sarl
dec
cmc
mov
cmp
sbb
test
sbb
dec
sar
add
jne
add
dec
inc
adc
gs
lret
jne
cs
test
cmpsl
fs
lret
movsl
mov
dec
pop
or
stos
bound
push
jge
and
out
add
mov
ss
shlb
xchg
aam
pop
aad
jmp
pop
adcb
jae
movsb
fstp
add
stos
aaa
push
adcl
scas
aaa
rclb
aam
fsubl
adc
mov
test
mov
pop
fisttpll
popa
out
sbb
inc
hlt
xlat
push
xor
and
sahf
cmc
inc
push
pop
mov
mov
jg
test
cmpl
test
loope
xor
dec
and
jno
xor
aas
jecxz
scas
cs
sbb
data16
xchg
mov
push
push
pushf
mov
lods
insl
push
or
ljmp
js
inc
add
sbb
mov
stos
cltd
sar
into
je
stc
inc
stos
adc
cmc
test
jle
mov
pause
ficompl
loope
cwtl
jae
ds
mov
ds
push
imul
jns
sub
push
pop
iret
mov
fsubrs
dec
out
out
adc
inc
cltd
sub
loope
loopne
push
dec
fcoml
js
stc
push
mov
loope
xor
mov
sbb
pop
iret
das
outsl
cmpl
pop
inc
add
ficoms
or
push
mov
fs
inc
dec
inc
dec
je
push
inc
ds
mov
aad
sub
shlb
mov
ficoml
js
test
mov
mov
popa
sbb
fcoml
pop
cmp
xor
repz
cmp
add
push
inc
jp
add
subl
mull
xlat
xchg
inc
jge
movsb
cltd
xchg
cwtl
pushf
cmp
push
sbb
sbb
hlt
mov
jmp
ret
bound
inc
cltd
ficoml
xchg
jg
sbb
pop
fs
es
repz
add
test
inc
cmp
cltd
jecxz
adc
sbb
decb
push
push
adc
xchg
sbb
mov
jg
imul
sub
es
aam
sarl
add
movsb
mov
sub
ljmp
push
jecxz
test
inc
or
cmp
xchg
fldt
sbb
xchg
pop
dec
inc
inc
roll
loopne
aaa
out
pushl
xor
add
mov
cmp
pop
cwtl
fistpll
std
dec
sub
decl
ljmp
xchg
xchg
xchg
in
rcr
push
mov
mov
or
das
fildl
shlb
pop
inc
stos
aad
adc
xchg
in
mov
lods
mov
xchg
cs
sbb
movsl
aas
outsl
pop
lods
lock
mov
xor
insb
je
sub
mov
loopne
je
cmp
cmp
sbb
xlat
lods
addr16
iret
push
arpl
push
sahf
add
ret
jge
ror
xorl
clc
repz
lds
cmp
into
int3
lcall
movsb
pop
or
mov
xor
xor
mov
lods
je
movsb
pop
cld
cmpsb
iret
sar
std
xor
cmp
es
es
fsubl
fstpl
jl
sbb
dec
inc
pop
cmc
rclb
dec
shrb
mov
fistps
leave
add
xor
aad
jecxz
jmp
or
scas
rclb
xor
push
fisubs
xor
adc
test
xchg
cmp
loop
push
orb
jno
sbb
add
mov
imul
mov
ja
out
insl
sbb
mov
add
pminsw
mov
clc
mov
and
popa
daa
pop
sahf
xor
out
mov
cmpsl
or
dec
cli
psrld
dec
fistpl
lcall
test
push
sub
outsb
mov
xchg
mov
push
out
test
dec
cmp
inc
je,pt
jg
dec
add
rcll
or
sbb
test
jle
dec
mov
pusha
dec
leave
adc
jne
cmpsl
mov
sbb
das
jns
cwtl
fstl
mov
sub
cld
xchg
loop
jne
add
mov
lods
test
rclb
inc
and
pop
fs
pushf
rcrl
idivl
mov
mov
push
pop
lods
mov
lcall
and
xchg
mov
sbb
jo
xchg
lret
mov
sahf
scas
jmp
ficomps
lahf
push
leave
jns
pop
inc
xlat
pop
push
dec
jne
xchg
mov
icebp
sub
adc
ret
push
xchg
inc
mov
not
mov
xor
popa
push
scas
jecxz
inc
jg
ficoms
mov
fadds
loopne
or
pop
mov
scas
push
fldt
adc
loopne
mov
mov
lock
mov
jbe
push
jno
adc
cmpsl
push
ret
in
add
shlb
or
shll
add
icebp
orb
dec
out
push
aaa
mov
loop
sub
sub
lret
adc
push
sbb
jo
mov
or
hlt
int
sub
adc
mov
dec
fs
aad
fdivl
add
mov
pop
jle
aaa
dec
adc
xchg
push
lea
stc
shll
push
dec
leave
gs
rcrl
pop
bound
fldt
xor
inc
stos
adc
sbb
dec
inc
mov
addr16
cmp
jns
xchg
xchg
push
mov
push
lcall
mov
lret
addl
mov
mov
inc
cmp
sub
int
in
js
pusha
pop
push
imul
dec
fnstsw
jns
data16
inc
xchg
div
inc
mov
icebp
sbb
push
fsub
inc
fisubrl
sbb
pop
jg
add
andl
test
cmp
or
push
icebp
pop
fstl
repnz
pusha
hlt
in
js
inc
push
sub
shl
ret
jno
test
or
pushf
nop
add
jae
jnp,pt
pop
ret
jmp
in
sub
subb
insb
or
mov
or
nop
sub
subl
inc
dec
jns
mov
and
lret
jb
dec
adc
lods
jns
cli
daa
adc
cmp
mov
out
mov
jae
xor
sub
mov
inc
idiv
mov
into
in
or
mov
mov
jo
out
cmp
jmp
icebp
inc
add
sub
dec
arpl
jns
scas
push
cmp
es
add
sbb
enter
repnz
leave
divb
cmp
sahf
xchg
jbe
enter
xlat
sbb
fcmovnu
cmp
sarl
mov
xchg
imull
cmp
push
stc
mov
loop
jbe
aad
push
jle
jnp
inc
cltd
xchg
testl
inc
in
dec
or
enter
push
xchg
xor
jmp
pop
add
jmp
or
push
inc
lods
or
and
out
das
das
jmp
sbb
loop
mov
sub
call
sbb
pop
or
or
or
ljmp
fxch
es
or
jg
cltd
dec
mov
cwtl
sbb
xchg
in
add
jno
mov
lock
cmp
or
hlt
lcall
pop
mov
shlb
incl
xchg
fcoml
insb
push
into
sub
ret
mov
mov
fadds
dec
inc
jb
xor
sub
adcl
fistps
out
sub
lret
push
scas
shl
inc
mov
les
cmc
pop
sub
pop
or
adc
das
mov
dec
fistps
fidivs
cli
lods
test
repz
in
sub
mov
jecxz
sub
outsl
cltd
mov
adc
mov
cmp
mov
repnz
push
mov
bound
adc
inc
in
gs
add
lds
dec
ret
pusha
dec
adc
ljmp
fisttpl
mov
xlat
jge
sub
xchg
shll
pusha
iret
mov
inc
fisttpll
sub
movsl
xchg
xchg
int
add
xchg
and
push
bound
popw
sub
cld
imul
pop
test
arpl
dec
test
or
scas
rcrl
jle
sahf
add
mov
pop
outsb
and
xchg
out
adc
mov
xchg
shr
xchg
imul
sub
repz
fcoml
sub
and
clc
lods
jae
and
mulb
movnti
sti
mov
jb
fdivr
cltd
jae
jnp
cwtl
out
mov
lds
jne
inc
lahf
int
clc
cmp
popa
mov
xor
popa
push
sub
inc
bound
pop
jne
test
bound
push
jl
add
sub
mov
hlt
sbb
add
sub
jmp
std
mov
cs
bound
in
sbb
hlt
jae
sbb
push
shrb
jne
in
add
sahf
push
sarb
outsl
jnp
cmpl
arpl
add
or
fstl
sbb
dec
lock
add
push
pop
icebp
stos
test
out
jmp
dec
sub
stc
jmp
lret
mov
cmp
mov
and
adc
dec
pop
pop
xchg
hlt
mov
in
sub
xchg
in
adc
int3
xor
pushf
cmp
loopne
mov
xor
dec
and
sbb
scas
lods
inc
or
int
in
sti
mov
pop
je
stos
jp
pop
ja
xor
in
add
inc
sbbl
push
lds
pop
cmp
xlat
cmpsb
cmp
hlt
aam
or
xchg
notl
mov
dec
sub
test
popa
std
lock
sbb
inc
lods
ljmp
aas
fsubp
cmp
cltd
xlat
push
ljmp
imul
es
sbb
or
imul
fwait
les
hlt
repz
pop
adc
lock
mov
notb
cltd
xlat
lahf
fdivl
xchg
jecxz
push
nop
sub
and
ss
and
aam
int
stc
add
fstps
jns
iret
xor
ss
add
insl
lock
cmp
sbb
iret
test
daa
or
loopne
orb
xor
mov
sti
sub
mov
push
pushf
adc
xchg
inc
sub
mov
pop
popf
and
mov
lahf
xor
lock
add
cmp
rcr
jno
sbb
xorb
inc
imull
arpl
mov
fisubl
lret
fbld
andb
mov
add
mov
into
pop
cltd
data16
xor
jb
pop
dec
scas
sbb
xor
mov
iret
dec
leave
ja
imul
insb
mov
pop
xorl
or
lods
inc
sbb
xchg
mov
and
in
mov
leave
push
cmp
out
and
push
mov
adc
lahf
dec
ds
adc
sub
call
jge
push
negb
inc
inc
mov
hlt
sbb
xchg
fiaddl
cmp
xor
test
xor
rcll
int
jmp
xchg
jae
mov
dec
adcl
ss
mov
pop
add
or
pusha
xchg
xor
xor
stos
mov
int3
dec
pop
aas
ret
pop
add
add
mov
mov
fbld
dec
inc
adc
ds
bound
and
inc
push
mov
fucom
pop
in
adc
and
jb
testl
mov
test
adc
mov
test
jae
cmp
testl
repnz
jno
popf
cmp
mov
mov
xlat
add
pop
mov
add
loop
cmpsl
pop
mov
push
or
xchg
xchg
loop
cmp
dec
jl
mov
mov
pusha
xor
cmpsl
or
dec
jo
fsubrs
jecxz
roll
fsubs
stc
pop
int3
add
je
sbb
popa
jns
adc
ja
cld
cmp
sbb
cmp
aam
mov
out
push
in
shll
fisttpll
lods
sub
cs
inc
cmp
lret
inc
in
jns
data16
stos
pop
and
je
aaa
popf
cmp
adc
ss
loope
xchg
mov
sbb
xchg
pop
and
jecxz
loope
ret
aam
lret
xor
fistps
pop
jbe
mov
orb
inc
pop
sarb
popl
sarl
sub
adc
xor
or
dec
or
push
imul
sbb
pop
push
pop
fwait
js
fbstp
mov
mov
pop
clc
jmp
dec
push
pop
inc
ret
not
jge
inc
mov
test
icebp
adc
fwait
shll
xor
cmp
sarb
jmp
int
mov
and
xor
jle
andl
push
xor
cmp
ljmp
clc
mov
clc
jo
and
test
jns
add
pop
icebp
xor
cmpsb
jne
jnp
andb
mov
jecxz
jne
xchg
cmp
cmp
sub
add
mov
cmpsb
out
gs
cmp
cli
or
sub
sub
cltd
lret
lret
call
mov
sbb
mov
jl
outsl
lcall
dec
pop
jbe
out
jbe
sub
mov
leave
xor
out
adc
pop
and
addb
ljmp
xchg
jno
test
out
mov
mov
xor
roll
fwait
or
outsl
jae
xor
vpxorq
or
jmp
lods
lods
xchg
pop
pop
dec
gs
cld
fwait
mov
movsb
out
out
xchg
cmp
push
sahf
pop
mov
mov
clc
mulb
mov
cs
and
adc
test
lret
gs
pop
aam
jl
add
fcoms
jae
mov
jmp
imul
enter
xor
mov
push
mov
jg
mov
push
mov
iret
xchg
mov
gs
mov
aad
pop
andb
pop
iret
jg
add
rorb
mov
fs
daa
dec
mov
sbb
fldz
xor
ljmp
jno
pop
xlat
sbb
mov
les
lret
data16
into
mov
or
mov
daa
sbb
and
cli
dec
jnp
xor
or
or
sub
jbe
lea
jb
in
sahf
push
aam
add
mov
xchg
insb
ljmp
repz
lea
enter
ficompl
outsl
lods
out
cmp
enter
dec
push
jp
fwait
loopne
mov
ljmp
clc
dec
imul
repnz
inc
pop
fstl
pop
xor
cwtl
cld
aas
nop
lea
popf
dec
lods
lret
cli
inc
sbb
arpl
nop
pop
push
dec
add
mov
sbb
loopne
adc
in
js
inc
into
enter
add
stos
mov
and
shlb
and
movsl
or
sub
cmp
pop
mov
jbe
in
subl
in
dec
pushw
fdivl
pop
stos
or
inc
push
arpl
mov
xor
scas
stos
in
out
sbb
xlat
leave
cmp
jmp
inc
xlat
inc
jl
xchg
push
inc
or
repz
mov
xchg
sbb
cmp
push
fcmovnb
and
into
pop
push
jg
push
push
jg
sub
jbe
shl
push
push
jge
xor
jnp
cmp
push
rolb
popf
sbb
dec
add
push
fdivl
test
cmp
pop
pusha
lods
into
jae
cmpsb
inc
sub
dec
dec
gs
mov
or
and
push
lcall
mov
cmp
xchg
or
popa
mov
xor
lods
xchg
pop
add
xchg
cmp
daa
sbb
insl
push
shlb
outsl
js
das
loop
push
daa
cvttps2pi
pop
mov
aaa
daa
dec
fstl
mov
push
sub
out
popa
arpl
lcall
decl
and
sbbl
jnp
mov
ficomps
mov
and
pop
inc
enter
and
int3
stos
dec
push
xchg
xabort
sub
enter
pop
adcb
inc
pop
aaa
xchg
inc
or
jge
cs
xlat
adc
mov
ljmp
scas
fprem
cmpsb
and
push
lds
cmp
clc
mov
xor
or
push
push
inc
repnz
call
cmp
imul
rcrl
push
stos
push
push
push
sub
xor
inc
cmp
xor
mov
mov
es
out
ret
scas
ljmp
mov
outsb
mov
fisubrs
sbb
mov
inc
in
das
leave
into
mov
mov
xorl
sbb
pop
bound
dec
enter
bound
lret
sarl
push
test
push
cmp
jp
sbb
mov
push
add
lahf
arpl
mov
xorb
mov
lret
pop
mov
fstpl
subl
or
rorl
divb
clc
mov
dec
cmp
test
cwtl
nop
jle
jl,pt
pop
xchg
inc
xchg
pop
xchg
mov
xchg
inc
dec
pusha
mov
stos
jae
movsb
movsl
stc
dec
dec
ror
mov
jp
shrl
sub
fadd
and
mov
sub
sti
repz
fistpl
mov
mov
or
popf
push
cltd
adc
subb
mov
mov
subl
inc
pop
dec
inc
out
or
jne
xor
js
popf
jno
sub
subb
mov
and
imul
test
lret
pop
adc
mov
mov
push
jl
jl
ffreep
shl
repnz
stos
sub
dec
fs
push
adc
clc
test
mov
xchg
mov
ja
stos
or
pop
push
sub
fmuls
xchg
jb
std
cmp
add
pop
clc
int3
mov
test
out
inc
mov
pop
adc
mov
sub
lret
push
data16
outsl
dec
push
inc
xchg
jns
movsb
ss
cld
inc
mov
adc
or
xchg
clc
daa
imul
ret
mov
mov
jnp
adcb
dec
pop
out
clc
or
adc
push
xchg
arpl
xlat
jne
xor
cwtl
jmp
sub
push
xlat
sbb
inc
scas
out
stc
aad
into
bound
push
mov
add
dec
lds
pop
mov
cmp
icebp
cld
xchg
cmpsb
sahf
fisubl
stos
dec
movsb
jecxz
add
jmp
dec
mov
test
adc
mov
adc
add
mov
inc
xor
cmpsl
lahf
xor
sub
stos
aad
mov
aas
sti
jae
lahf
mov
jp
sbb
popa
xchg
xchg
lcall
xchg
popf
push
rorb
inc
adc
sbb
jae
jp
mov
mov
movsl
lods
cmp
mov
into
rclb
cmpsl
inc
mov
stos
scas
jg
js
sti
xchg
mov
incl
jecxz
jp
gs
loope
out
ficomps
add
int
out
mov
sti
push
add
test
scas
push
push
push
arpl
add
test
jle
mov
hlt
or
in
jb
in
mov
aam
out
xchg
lret
in
dec
xor
imul
and
push
add
adc
inc
call
xchg
xorl
jns
inc
mov
xchg
mov
pusha
pop
push
js
xor
in
add
bound
leave
sub
jg
scas
inc
xchg
cmp
popf
xchg
rorl
mov
clc
out
mov
pop
inc
lcall
ficoms
sbb
push
into
gs
dec
aam
sbb
inc
jle
xor
ljmp
sub
hlt
xchg
xor
std
and
iret
nop
pop
dec
orb
inc
xchg
lds
aaa
dec
sbb
je
test
out
aad
xor
mov
cmp
sbb
mov
mov
cltd
push
jne
jno
sbb
test
shrb
cmp
lods
mov
in
jb
sbb
push
insb
dec
jmp
ljmp
sbb
dec
add
push
sbb
mov
xchg
pushf
mov
mov
movsl
pop
add
xor
sub
push
and
sar
and
or
and
lea
pop
call
movsb
and
mov
dec
and
dec
adc
faddl
mov
add
adc
push
popf
je
hlt
cmpsb
in
jnp
lea
fstpl
insb
xchg
orb
fildll
jle
sub
sahf
movsb
jp
mov
and
sbb
or
jle
out
and
cmp
lahf
cmc
sub
in
adc
cmp
jae
rcrl
in
mov
loopne
mov
mov
inc
lahf
mov
pushf
adc
rorb
clc
pop
cli
ds
mov
or
cmp
pop
mov
dec
sbb
inc
sub
or
movsb
lock
jne
mov
push
fdivrp
xor
and
shr
fisttps
push
pop
lods
push
add
ss
lret
stos
sbb
gs
cmp
sti
enter
pop
sub
add
aam
mov
mov
mov
repnz
mov
ficomps
stc
sbb
jnp
and
fstl
sbb
inc
ds
sub
xchg
insl
push
inc
inc
adc
and
xchg
lahf
pop
add
push
push
pusha
ljmp
test
les
jmp
jle
outsl
sub
xchg
jo
sub
in
inc
sbb
mov
jecxz
loop
fisubl
sub
stos
andb
sub
mov
mov
testb
rorb
aaa
jmp
push
test
cmp
iret
movsl
sub
mov
and
in
or
ror
sbb
stos
xor
pop
lods
idiv
loopne
orb
cmpsl
jp
daa
out
inc
js
movsl
fsubl
call
pop
jle
adc
inc
dec
and
xor
fucomip
dec
inc
mov
sbb
jmp
in
sub
xchg
test
in
or
sub
mov
sar
iret
cmp
pusha
xchg
mov
insl
in
call
test
mov
mov
fidivrl
movsl
mov
stos
ja
in
push
xchg
ret
aaa
and
jne
cmp
pusha
jne
test
adc
xlat
or
add
adc
mov
mov
cmpsl
and
sub
or
mov
jl
lret
push
dec
jo
sti
sub
sbb
jg
adc
mov
xchg
data16
popf
push
mov
mov
pop
xor
mov
pop
scas
adc
mov
xor
adc
ss
pushf
dec
sub
fistps
not
xchg
inc
das
mov
into
push
or
imul
das
cmp
dec
clc
xlat
xor
lea
jo
cmp
cmc
sbb
or
xchg
pop
lret
in
test
mov
jb
mov
mov
mov
mov
push
insl
repz
stos
aam
sub
dec
push
push
rcll
push
iret
iret
insl
pop
sbb
mov
imul
sbb
jp
jg
jnp,pt
adc
icebp
lock
push
in
adc
pop
fistl
jg
jp
or
aaa
lds
cli
insl
daa
push
and
jecxz
xor
or
daa
push
adc
pushf
push
sub
ljmp
stc
push
push
inc
pusha
lods
and
sahf
pop
or
inc
xchg
pop
movsb
xchg
pop
xchg
stos
jno
ja
mov
int
fldl
push
xchg
aad
jle
int3
pop
cmpsl
fwait
neg
lret
rorl
out
aam
lods
add
pusha
bound
push
inc
lret
in
cmpsl
dec
mov
push
in
cwtl
jp
popf
lods
loop
cmp
inc
xchg
sbb
out
in
xchg
mov
outsl
and
cwtl
popf
xchg
push
sahf
mov
ljmp
arpl
rolb
fs
clc
add
jecxz
out
and
xor
pusha
insb
ret
dec
dec
sbbl
out
xchg
je
xchg
xchg
jle
and
adc
sbb
sbb
xlat
aaa
cmp
icebp
dec
dec
subb
loop
jb
adc
mov
daa
push
jl
aam
sbb
stos
or
or
movsb
movsl
aas
mov
push
sbb
adc
push
fsubl
rolb
jo
setno
lds
push
outsl
lds
mov
test
jns
dec
mov
dec
test
jge
ret
inc
ljmp
gs
xchg
sbb
cld
std
sbb
cmp
test
add
aam
xor
test
loop
int3
jmp
dec
lret
or
sbb
mov
push
ror
sub
inc
aam
push
xor
xchg
lcall
sub
dec
sbb
ret
pop
or
fdivs
sub
jecxz
jne
popa
fldl
adc
ja
ja
xor
into
push
loopne
mov
movsb
inc
stos
sti
push
sti
jmp
cwtl
mov
cmp
fld
xlat
mov
adc
jno
cmp
test
mov
cmp
dec
fldt
cwtl
add
xchg
add
jns
sbb
ds
rolb
cmp
xor
mov
fadds
mov
fdiv
cld
push
stc
xchg
adc
jns
jbe
cmp
mov
stos
inc
outsb
cmp
rcrb
push
shlb
sub
mov
lods
cld
gs
or
mov
les
loope
adc
cmp
bound
loop
pop
sbbb
ljmp
or
call
pushf
fdivl
stos
popf
adc
jo
adc
sbb
inc
fs
outsb
add
jb
jg
xchg
mov
sbb
lock
mov
adc
rolb
out
test
jecxz
jge
scas
rcr
hlt
in
pop
gs
or
pcmpgtw
sbb
mov
hlt
adc
or
push
cmp
stc
adc
into
or
test
stc
addr16
jecxz
sbbb
out
jns
and
xchg
fsubrs
jge
inc
cld
add
adc
mov
cmp
jo
insl
ret
push
jne
jp
daa
cld
add
jb
lock
mov
int
or
pusha
push
mov
xor
fxch
fmulp
add
mov
or
mov
subl
rolb
es
testb
cs
jae
lods
mov
mov
cmpsb
bound
sub
jbe
int
into
pop
test
mov
ficomps
fistl
and
jnp
xchg
mov
test
in
cld
das
stos
pop
inc
mov
test
cld
push
hlt
jb
sbb
lcall
insl
repz
in
xchg
mov
sbb
adc
dec
fdivrs
sbb
test
sti
and
imul
or
xlat
mov
inc
lcall
cmp
es
ja
icebp
mov
pushf
pop
lds
cwtl
push
arpl
pop
nop
xor
mov
inc
and
leave
stos
sub
fistpl
nop
xorb
mov
sub
dec
push
mov
add
xlat
outsl
loope
fnsave
push
sub
push
subb
inc
push
test
repz
sbb
cmc
das
xchg
loope
dec
cmpl
inc
nop
fimuls
mov
mull
rcll
scas
cmp
rol
jae
mov
cwtl
adcb
je
add
sub
cmpsb
or
dec
nop
outsb
xchg
sbb
push
mov
out
adc
sbb
push
add
mov
std
xor
pop
dec
push
jg
enter
sbb
into
mov
std
add
ss
or
movsb
pop
lret
sbbl
into
sahf
add
repnz
pusha
mov
add
imulb
xchg
push
mov
fwait
xor
frstor
or
dec
popf
nop
stc
jb
or
inc
jo
fs
test
adc
enter
pop
push
xchg
xchg
and
and
jge
sub
add
movl
data16
outsb
dec
adc
mov
movsl
cmp
mov
sbb
jnp
cmc
out
mov
xchg
adc
add
xchg
loope
xor
inc
push
aam
xchg
fsubr
int
lret
movsl
cmp
push
and
push
xchg
fidivrl
mov
jno
subl
dec
scas
push
cmp
fdivrs
pusha
add
jns
push
or
setl
dec
inc
push
ret
mov
in
and
mov
adc
add
fdivs
test
pop
jne
jb
sub
lods
gs
push
shrl
insl
icebp
jae
jge
int3
cmp
cvtpi2ps
xchg
jle
jl
inc
shlb
ror
xchg
jp
imul
loopne
sbb
cltd
adc
in
divl
cmpsb
data16
sbb
bnd
push
fcmovb
pop
sbb
pop
ja
add
gs
into
jne
sti
and
out
fstps
lahf
adc
sbb
cs
gs
hlt
cmp
cmpsb
or
ret
shlb
cmp
test
cmc
imul
aam
stos
test
mov
int3
dec
ret
cmpsb
ljmp
int3
pop
xchg
orb
cli
xchg
ds
sub
sbbl
jge
gs
shl
mulb
pop
jb
sub
inc
mov
imul
add
es
cmpsb
xchg
out
or
xchg
daa
sarl
adc
jo
jge
stc
cmp
aad
jno
or
add
mov
adc
lods
add
cli
jo
adc
sbb
movsb
mov
aas
jbe
pop
es
fwait
add
sbb
jecxz
nop
jb
xchg
fmul
xor
ss
cmp
jno
aam
jecxz
push
pop
adc
and
xor
iret
or
pop
dec
push
fsubs
mov
fdivr
xor
jmp
inc
xchg
pop
rcll
dec
sub
mov
and
sub
adc
cmp
jge
cltd
adcl
mov
sub
lods
push
sbb
ds
sbb
adc
js
loop
loopne
ss
stos
mov
cmc
add
dec
mov
sahf
movsl
or
inc
in
mov
addr16
std
pushf
sub
aaa
xchg
stos
call
stc
inc
or
sbb
shll
lds
fcmovbe
mov
jmp
jl
repnz
data16
jnp
or
pop
mov
aas
stos
sbb
inc
jbe
int3
aas
or
scas
xchg
mov
sbb
xor
aaa
xor
cli
mov
insl
sub
push
adc
add
mov
sub
lds
cmp
cld
jcxz
mov
sbbb
icebp
and
mov
xor
test
jge
je
iret
aad
js
leave
popa
rcll
adc
mov
cmp
dec
jmp
xchg
xchg
stc
sub
mov
jae
fistpl
jb
aas
xchg
in
mov
dec
jns
call
movsl
jg
pop
ds
cli
jge
fcmovnu
std
mov
push
mov
fidivrl
popa
imul
cli
inc
push
lahf
sbb
mov
pop
subl
rcrl
pop
or
rorl
dec
push
and
cmp
mov
lds
nopl
movsb
movsb
lock
lea
je
popa
inc
rolb
out
lret
jo
int
pop
lods
sub
mov
xor
xchg
dec
xchg
add
in
pop
dec
sarl
insl
and
xchg
lea
std
pop
enter
mov
inc
lds
repnz
xchg
es
add
pop
das
push
std
sbb
xor
sbb
jp
pushf
mov
inc
push
aam
shld
data16
repnz
stos
inc
scas
push
iret
cwtl
addr16
lea
push
pop
cwtl
stos
cwtl
push
divb
xor
cmp
cmp
lods
inc
shrb
leave
xchg
push
or
sub
or
sbb
add
lret
xchg
mov
push
sbb
jo
int
sti
sub
dec
loop
mov
bound
push
bound
das
js
sahf
jp
gs
cs
out
pushf
dec
ret
adc
xor
inc
xchg
lret
int3
mov
push
js
out
sbb
mov
je
rcrb
pop
data16
dec
and
mov
inc
cltd
dec
imul
in
sub
sbb
inc
jge
dec
push
adc
int3
adc
push
nop
out
mov
cld
or
pop
or
push
jns
cmc
jae
nop
enter
ficoml
addr16
and
push
push
cmp
aas
imul
dec
mov
int3
dec
mov
mov
push
inc
insb
test
add
xchg
std
pop
add
fimull
pop
loop
xchg
cmovns
movsb
mov
pusha
lret
dec
cli
fdivl
sbb
sbb
clc
icebp
or
add
xor
out
dec
and
fldl
sbb
xchg
sbb
add
xchg
or
pop
mov
push
cmp
jg
or
inc
or
testl
push
cmpsb
cmp
popa
rcll
pushf
dec
mov
mov
dec
negl
sbb
pop
or
inc
mov
in
pop
pop
sbb
pop
clc
je
cld
gs
push
hlt
inc
call
call
imul
or
mov
sbbl
pop
imul
aaa
lods
mov
in
xchg
mov
xor
fldenv
xchg
iret
pushf
incb
test
jp
ret
call
mov
in
jo
mov
jnp
nop
dec
dec
lods
push
jl
lock
jle
or
arpl
cltd
fsubrp
push
or
into
jnp
fidivrl
mov
fsub
push
sti
bound
fistps
mov
and
jo
fwait
out
jb
cld
lcall
xor
xchg
mov
cmpsl
adc
rcr
and
push
fstpl
ss
inc
test
adc
and
subl
test
icebp
push
mov
xchg
mov
adc
push
dec
cmpl
ss
cmp
rorl
ss
insl
mov
lds
daa
mov
rorl
test
fdivrp
pop
xor
push
int
stc
ljmp
xor
outsl
sub
lods
sub
lods
dec
inc
repnz
mov
mov
xchg
xor
mov
es
ljmp
sub
dec
dec
ret
inc
mov
and
adc
mov
test
mov
cmp
fists
jae
mov
je
popa
subb
sub
and
test
jge
xor
sti
ja
xchg
sbbb
cmp
xchg
lea
daa
dec
fucomp
push
push
cmp
xor
test
sub
fwait
dec
mov
aad
add
jl
ss
dec
adc
dec
leave
sub
or
stos
adc
or
in
movsl
hlt
ficompl
int3
dec
adc
push
test
pop
add
mov
fdivs
es
mov
and
xor
outsl
xor
cmp
mov
mov
daa
ret
stc
or
pop
dec
js
addr16
and
push
push
mov
test
cmp
mov
imul
cwtl
out
push
in
aaa
lret
inc
jecxz
pop
jg
adcb
shlb
adc
lods
lods
jne
call
out
or
shl
rcll
push
addb
mov
fs
fcmovne
jo
out
push
lahf
dec
mov
xor
ljmp
mov
int3
jecxz
sbb
pop
rolb
movsl
push
push
xor
inc
test
adcb
out
mov
leave
pop
jge
push
cmpsl
bound
dec
in
shl
ljmp
ret
mov
pop
cmp
pop
imul
leave
andl
stc
add
adc
test
jl
xchg
inc
cmp
jo
fmul
outsb
dec
mov
dec
shll
pushf
cmpl
jecxz
xor
add
mov
lret
nop
mov
fwait
jle
shll
xchg
push
inc
stos
sub
fwait
jp
fbld
cmp
mov
stos
mov
les
pop
or
mov
jmp
jne
add
lret
adc
mov
pop
in
aas
pop
jmp
out
test
pop
scas
cli
inc
adc
pop
sbb
iret
xor
dec
adc
into
pop
lret
xchg
popf
sahf
ljmp
das
aam
dec
outsb
fwait
mov
cmpsb
in
cmc
pop
cmp
cmc
mov
cli
sub
push
adc
lds
and
aam
pop
jns
loop
adc
lock
add
mov
adc
fldl
fucomip
dec
lahf
jb
ret
ficoml
lds
mov
push
adcl
lret
xchg
xchg
wrmsr
add
outsb
push
insb
push
data16
lea
scas
push
pop
mov
enter
dec
cmpsb
fdivl
jmp
mov
jbe
shrb
pop
ja
mov
les
adc
push
or
adc
outsl
cltd
jmp
or
inc
jmp
pop
test
clc
sbb
or
fs
cmpsb
jno
jns
shlb
add
jecxz
in
or
sbb
in
xchg
mov
push
xchg
jp
and
dec
test
xchg
add
adc
pop
mov
icebp
shl
insl
pop
mov
shll
sub
daa
xlat
test
inc
dec
repz
mov
mov
nop
rcll
out
xchg
inc
loopne
cwtl
and
jno
shrb
in
sbb
inc
jg
sub
mov
xchg
test
fs
ret
scas
lcall
test
mov
mov
or
push
and
mov
aaa
sbb
push
adc
push
sbb
mov
pop
push
ds
mov
aad
mov
xor
imul
mov
mov
movsb
mov
pop
js
cmp
test
pop
leave
xor
inc
fs
pop
cvtpi2ps
scas
fistpll
sbb
out
add
aas
jne
push
add
push
pmaddwd
bound
add
je
xchg
shl
leave
ret
insb
aas
dec
push
inc
in
add
add
add
in
push
and
insb
xlat
cmp
data16
insb
scas
jb
mov
pop
lea
pop
in
in
or
lahf
daa
push
sbb
mov
jecxz
fnstcw
repnz
lretw
mov
xchg
xchg
sub
xchg
push
dec
pop
or
sub
fisttpll
push
cmp
je
pop
inc
scas
sbb
jnp
pop
mov
test
aam
std
int
stc
mov
or
mov
inc
pop
jbe
push
and
bound
xchg
sbb
les
fwait
push
loopne
aaa
sbbl
adc
sbb
and
or
push
pushf
sbb
jge
mov
jbe
test
adc
sub
push
and
dec
rclb
imul
xlat
or
jae
repz
mov
mov
ret
inc
cmp
insl
insb
or
lods
dec
mov
jl
jmp
aaa
into
cmpsb
insl
mov
ja
xorl
outsl
shr
cmpsb
xchg
mov
sub
out
ljmp
cmp
out
adc
mov
cli
inc
push
pop
jbe
int3
xor
ss
add
test
lods
adc
xor
das
into
adc
mov
ja
xlat
cmpb
sti
outsl
push
push
mov
iret
enter
cmp
pop
fcoml
mov
xchg
subb
cmp
adc
push
subb
pop
add
repz
pop
lea
sub
test
gs
int3
ds
jo
aas
push
jb
out
std
jmp
pop
jmp
inc
bound
ret
xchg
xor
scas
mov
pop
xchg
adc
mov
fcmovbe
addl
jle
cmp
xchg
andb
mov
test
popa
call
mov
icebp
jl
clc
pop
push
lahf
sub
xor
das
mov
lret
loopne
and
js
pop
cmp
pusha
push
mov
adcl
in
lret
push
hlt
movsl
notl
jnp
js
fabs
ret
pop
sub
pop
mov
pushf
and
pop
sub
dec
dec
movsb
push
add
data16
push
jne
unpcklps
mov
aam
dec
mov
mov
pusha
mov
popf
stc
push
inc
push
mov
call
jg
imul
sub
xchg
jecxz
js
arpl
push
out
push
enter
xchg
xor
sbb
sbb
push
mov
inc
mov
adc
sti
inc
push
sahf
out
push
stos
mov
fcoml
or
in
dec
cmp
dec
adc
or
stc
cs
lret
mov
and
in
add
lcall
jne
in
fsubs
sub
scas
ss
neg
cmp
call
sub
adc
xor
xchg
push
or
mov
pop
je
xchg
into
jnp
push
int3
outsl
push
leave
xchg
insb
out
aas
sub
imul
xchg
stos
mov
js
mov
cmpsl
data16
ficoml
sbb
dec
dec
mov
mov
int3
or
lds
push
xchg
sarl
xchg
call
nop
cld
cmpsl
test
hlt
sti
test
inc
gs
jp
sbb
pop
in
andl
adc
mov
dec
xchg
shr
mov
outsb
addr16
repnz
xchg
int
ljmp
add
xchg
mov
mov
mov
add
out
xchg
scas
xlat
or
or
jb
imul
adc
pop
in
xchg
xchg
in
clc
adc
cld
leave
popf
xlat
sub
sbb
cmp
sub
xchg
nop
cmpsl
push
shlb
loop
xchg
dec
xor
jnp
xor
movsb
ss
inc
repz
loopne
xchg
add
sbb
inc
mov
enter
cmpsb
adc
adc
in
cmpsb
sbb
and
lahf
popa
pop
push
rclb
movsl
and
push
mov
push
mov
test
cmpsl
adc
jecxz
dec
mov
xchg
test
mov
add
aas
int
pop
jmp
sar
iret
jo
call
sub
int
out
mov
jle,pn
aam
add
das
aas
pushf
cwtl
sub
push
stc
pop
cwtl
mov
arpl
imul
lcall
dec
out
xor
cmpsl
lret
orb
add
and
in
mov
mov
outsb
or
fs
repz
push
jbe
loope
cli
cs
pop
lcall
les
cmp
xchg
adc
add
scas
lahf
mov
mov
jae
and
pop
movsb
push
pop
icebp
leave
ret
enter
and
sbb
sbb
or
xchg
inc
jg
mulb
test
in
pop
inc
imul
pop
adc
mov
and
cmp
mov
inc
cltd
jl
scas
fists
xor
into
imul
push
negl
sub
push
push
in
mov
addr16
std
fwait
pop
repz
add
fsubs
pop
mov
add
iret
jae
sub
mulb
loopne
inc
cltd
mov
mov
xchg
mov
loopne
or
sub
xchg
mov
negl
push
shll
pop
lret
mov
rorl
jnp
repnz
lock
rcr
nop
xor
jecxz
rolb
mov
sbb
pushf
or
in
pop
loop
cmp
fiadds
inc
jmp
mov
pop
arpl
sbb
es
scas
cmp
rol
test
inc
sahf
lods
mov
xchg
ja
es
popf
pop
test
out
rcll
xor
sbb
ljmp
arpl
pop
ss
out
outsb
push
adc
mov
lea
out
push
mov
and
pop
pop
aad
lds
sbb
fidivrl
test
in
and
ffree
adc
bound
and
sub
andb
cltd
fcomps
in
jl
jb
ss
mov
cmp
out
and
jle
push
pop
pop
mov
xor
inc
movsl
push
in
add
ljmp
pop
jno
mov
pop
mov
push
push
ljmp
push
mov
lret
test
leave
cltd
out
or
lcall
add
adc
push
imul
or
js
cmp
mov
and
testb
xchg
adc
in
jnp
cmpsl
loopne
int
push
dec
or
dec
xchg
sbb
les
add
inc
in
xor
mov
mov
xchg
inc
fidivs
cmc
loope
icebp
fwait
aad
aaa
fstpt
jo
pop
adc
xchg
sbb
jle
adc
in
stc
jae
mov
adc
xor
jmp
ljmp
sbb
adc
into
iret
inc
add
gs
subb
lods
cli
imul
insb
pop
call
test
clc
arpl
lods
mov
sub
adc
cli
pop
in
pop
dec
cwtl
sub
dec
add
fcoms
into
addr16
push
mov
pop
iret
pop
test
jmp
pop
aad
idivb
cmp
es
xor
pop
adc
ficoml
aad
pop
iret
sub
fisubrs
cmpl
inc
gs
repnz
outsl
sbbb
adc
leave
mov
in
test
test
js
fstl
push
xchg
nop
or
mov
stos
ret
lock
jne
adc
clc
stos
add
clc
outsl
ja
outsl
arpl
xchg
push
call
xchg
adc
rorb
fcompl
rcrb
cli
movsl
mov
mul
or
jle
xor
and
sbbl
xchg
cmp
andl
inc
jo
shll
popa
sub
decl
cmp
push
add
sbb
sbbb
push
out
dec
cltd
mov
int
mov
adc
push
in
loopne
test
call
pop
lahf
mov
add
cld
sub
add
movsb
cltd
or
inc
sub
ja
mov
test
leave
rcrb
jnp
fsubs
and
cli
mov
inc
lret
stc
ror
fs
dec
mov
sbb
mov
repnz
xor
inc
cmp
add
loop
jl
lcall
mov
jecxz
or
add
push
dec
xor
xchg
xchg
imul
inc
rcll
outsb
adc
and
repz
in
pop
push
ja
jp
xor
mov
adc
aad
inc
hlt
jo
aam
mov
clc
test
js
popf
push
lock
pop
icebp
push
push
arpl
push
mov
addr16
sar
mov
mov
and
jne
insb
loope
bound
stc
popa
xor
sbb
add
xchg
dec
aas
gs
mov
cmpsb
rorl
sti
ja
call
ljmp
inc
test
adc
orb
push
loop
fcompl
shlb
fdiv
cld
int3
ja
ret
daa
jmp
sahf
sar
das
mov
push
push
pop
cmp
add
jo
xor
mov
int3
jl
cwtl
lahf
inc
loop
pop
mov
rcr
cmp
test
fdivrs
mov
sarl
aad
xor
or
lods
adc
adc
sub
ret
pop
lods
mov
jp
inc
clc
mov
popf
rcll
gs
hlt
jns
lretw
mov
and
adc
fstps
xchg
sub
sbb
push
insl
pop
inc
hlt
pop
push
repnz
adc
adc
outsl
pop
mul
sbb
lods
jo
bnd
fcomp
and
cwtl
repz
sbb
lea
pop
ret
rcll
aad
test
pop
jle
int
enter
aam
leave
fisubrl
xchg
adc
jmp
fwait
ja
pop
mulb
test
mov
loope
aad
ss
leave
in
and
xor
shlb
xchg
in
ret
push
decb
xchg
stos
fcomps
into
cmp
lds
ds
int3
out
xchg
aam
pop
add
jne
or
in
out
push
mov
ljmp
test
push
ss
xlat
lock
inc
sbb
ror
dec
fisubrs
es
clc
sbb
orl
add
mov
and
push
jecxz
mov
cmpsl
add
frstor
loop
repz
jmp
hlt
and
pop
or
mov
jl
outsl
lret
xor
icebp
inc
dec
loopne
dec
call
dec
aam
mov
fucom
mov
adc
repz
test
xor
in
loopne
leave
pop
lcall
mov
xor
add
jo
pop
mov
jno
sub
popa
mov
int
and
jo
mov
enter
mov
nop
jle
in
mov
divl
cmc
aam
ljmp
pop
mov
mov
pushf
add
inc
xchg
sub
fsub
ret
mull
push
fcompl
push
enter
xor
ret
push
sbb
dec
push
and
cmp
loope
jb
fidivs
push
test
xchg
insb
mov
mov
jo
cmp
cltd
mov
bound
outsl
cmp
into
or
test
shll
mov
data16
mov
loopne
jp
inc
push
dec
std
dec
pop
jnp
out
lea
push
fstps
cmp
mov
dec
sbb
repnz
sub
mov
icebp
imul
rcl
outsb
rcr
cmp
in
stc
and
mov
lret
rolb
aaa
pop
cltd
mov
or
jne
addl
sbb
jno
pushf
imul
fistpll
xor
rcll
into
dec
push
xchg
pop
test
mov
adc
imul
out
push
and
push
sub
pop
cmp
adc
adc
and
push
mov
xor
insl
push
and
xor
pop
and
mov
pop
jge
sub
sbbl
or
insl
fldt
dec
pop
adc
scas
mov
movl
lods
pop
push
js
sub
scas
and
cs
jmp
push
in
out
sub
pop
and
push
pop
cmp
mov
jecxz
loop
add
lcall
mov
hlt
pop
leave
mov
mov
cmc
xchg
sbb
es
mov
xchg
rcl
adc
jo
ret
movsb
shr
push
dec
jae
fmull
aam
add
push
inc
aam
inc
lcall
les
jb
jbe
outsb
scas
sbb
test
lret
imul
stos
pop
gs
push
mov
dec
xor
je
ret
dec
inc
daa
push
jno
call
fwait
dec
xchg
inc
add
mov
adc
lods
fadds
lret
fld
or
jmp
pop
dec
pop
scas
addb
shrb
push
xchg
cwtl
out
jnp
mov
xchg
sbb
std
sub
adc
jae
jecxz
std
xchg
cltd
or
bound
mov
cmp
sbb
mov
lret
xor
push
sbb
sti
jbe
jle
or
sbb
clc
incb
mov
clc
dec
ds
adc
shl
cwtl
rorl
adc
pop
mov
cwtl
sbb
mov
or
jnp
das
pop
icebp
sbb
lcall
imul
and
xchg
int
sub
mov
xor
sti
xchg
xor
ret
fdivrs
cltd
push
dec
adc
inc
or
int3
push
pop
mov
xchg
cmpsb
push
fwait
imul
test
mov
ja
movsb
imul
imul
adc
aaa
or
popf
test
push
pop
movsb
cwtl
adc
or
or
cs
addr16
shlb
sbb
lret
push
ficoms
cwtl
mov
sbb
daa
outsl
jne
jo
out
xchg
movsl
ja
lds
inc
xor
push
dec
jmp
outsb
cmc
sub
cs
nop
inc
cmp
mov
fiaddl
shll
cmc
push
mov
test
icebp
dec
ja
jl
icebp
in
xor
pop
stc
sub
jecxz
jns
scas
enter
adc
shlb
cltd
mov
push
aam
push
lods
add
test
add
loop
cmpsb
addl
push
lret
vfrczss
push
mov
sub
scas
out
or
cmp
frstor
stos
movsb
cmpsl
cmp
sub
xor
xor
push
inc
push
fs
mov
mov
xor
sbb
adc
and
xor
adc
mov
sbb
adc
lret
mov
aas
push
dec
sub
xor
push
outsl
repnz
das
and
shlb
pop
in
push
or
aas
dec
push
or
xchg
cltd
and
add
jbe
jb
xchg
mov
repnz
in
jg
shlb
or
es
mov
lock
fstpt
jmp
xchg
dec
dec
mov
das
push
nop
adc
ljmp
inc
sahf
mov
inc
adc
in
dec
push
aas
sub
loop
lods
sahf
icebp
jp
test
dec
mov
xchg
xchg
and
sub
stos
pop
stos
sbb
adc
subb
jb
test
sbb
and
add
adc
in
pusha
lods
jg
imul
inc
jle
fsubr
fsub
fucomi
test
jno
negl
push
imul
push
pop
not
and
in
lret
sub
jecxz
fcomps
mov
mull
aas
js
leave
popf
push
pop
outsb
mov
sub
jp
js
sahf
add
adc
loopne
imul
sbb
jecxz
aad
inc
add
sub
inc
push
repnz
dec
lds
xchg
sbb
loopne
jmp
jae
jb
mov
pusha
ds
shr
inc
cmp
and
lcall
lret
sub
fnstcw
mov
imul
rcrb
inc
xorl
nop
in
std
outsb
test
dec
push
outsl
xor
aaa
push
add
cld
insb
in
cmp
aam
jnp
mov
int3
in
inc
sbbl
jmp
mov
mov
je
das
xor
cld
pop
js
pushf
mov
cmpb
xchg
enter
xchg
scas
testb
xchg
mov
sbb
sbb
and
and
loop
mov
inc
jbe
xchg
xorb
mov
movsl
xor
sbb
xor
pop
mov
dec
sub
adc
lret
pop
test
in
test
add
inc
mov
jns
mov
push
das
inc
lods
ds
sbb
lds
or
jo
jno
movsb
rcrb
push
pop
cmpsb
imul
dec
lret
scas
imul
stos
jbe
insl
pop
outsl
lods
mov
lahf
aaa
test
repnz
cs
pop
out
pop
mov
cmp
add
fidivs
fdivrl
fisubrl
push
sbb
insb
fwait
mov
pushf
and
xor
int
sub
iret
je
push
xchg
sbb
jae
lcall
or
jb
aad
cwtl
sub
loop
ljmp
cmp
inc
mov
fs
inc
arpl
jo
sbb
mov
lods
push
mov
xor
dec
jle
mov
jns
mov
jg
mov
leave
std
xor
mov
aam
dec
outsl
in
sub
cmpsl
jnp
mov
push
and
sub
cs
ds
add
adc
stos
mov
push
dec
repnz
stos
dec
dec
sahf
mov
xchg
dec
inc
imul
mov
sub
push
mov
data16
add
idivl
shr
xor
xchg
jp
insb
push
fcmovne
rorb
in
mov
sti
in
incb
or
mov
dec
stc
cli
sbb
push
cmp
jb
push
ss
jns
cmp
idiv
insl
add
sub
lods
push
in
fwait
mov
sti
jmp
sbb
mov
adc
push
push
pop
add
stos
aad
movsb
cmpsl
add
adc
push
testb
push
inc
xor
leave
cli
test
adc
mov
rorb
loope
mov
test
sub
movsb
outsb
lock
push
or
cmp
andl
fwait
cmp
jnp
mov
xor
or
addr16
sub
xor
sbb
stc
push
fstpl
jge
dec
pop
out
fmull
lds
mov
and
icebp
es
bound
mov
dec
fxch
data16
out
pop
dec
insb
inc
dec
pop
aas
push
mov
jne
xchg
mov
jp
xchg
fcoms
adc
movsl
js
ja
out
ja
ss
mov
mov
xlat
push
push
cld
subl
inc
into
add
fldcw
adc
cmp
mov
lock
and
and
jne
inc
bound
dec
fldl
xlat
and
cltd
mov
xor
cmc
dec
xchg
push
push
mov
loop
fldenv
xor
gs
pop
jo
xchg
movsl
jge
xchg
andl
enter
adc
jne
push
sarb
add
stc
jb
mov
movsl
xor
lods
xchg
in
push
cmpsl
dec
adc
lods
test
pop
mov
ja
and
cmp
jae
ds
in
fs
aaa
and
jge
stos
dec
decl
add
icebp
adcb
ret
outsl
push
std
mov
xchg
imul
data16
push
js
les
sbb
mov
pop
and
ja
push
mov
mov
out
rcll
lock
scas
cli
and
mov
or
xor
into
test
mov
outsl
notl
fcomip
push
mov
xchg
in
mov
add
ret
mov
mov
cmpsb
pop
ljmp
mov
push
stos
cltd
push
sub
jbe
jecxz
adc
stos
inc
pop
xor
xor
loopne
sub
push
js
insl
jo
cmp
gs
sbb
xor
jnp
ret
cmp
jae
pop
icebp
scas
push
xchg
jno
push
mov
adc
and
loop
push
cmp
cmpsl
outsl
mov
xchg
xor
inc
pop
mov
outsl
xor
lods
push
rolb
mov
lret
cmpsl
jnp
lea
xor
mov
cltd
mov
cmpsl
mov
mov
imul
push
imul
cmc
xchg
sbbl
hlt
jle
stc
pushf
cli
jno
mov
jbe
inc
fwait
stos
inc
fisttpll
push
jne
divb
sahf
sub
lea
rclb
cli
pop
push
mov
inc
mov
jecxz
aad
repz
sub
dec
pop
inc
ret
adc
cmp
inc
mov
cwtl
lret
xchg
pop
adc
xchg
inc
and
adc
out
stc
imul
pop
loop
std
push
mov
dec
xlat
sub
repnz
mov
jmp
lret
in
mov
icebp
mov
lds
out
inc
pop
int3
add
das
jo
call
cmp
fs
repnz
fdivrs
push
stos
xlat
sub
arpl
popf
ja
pushf
sbb
mov
add
stos
pop
ja
out
dec
xor
scas
ret
leave
mov
lahf
aad
mov
push
rcr
jg
lock
or
rclb
push
dec
aam
mov
dec
jno
vandps
jae
stc
mov
jb
mov
lahf
insl
jle
arpl
nop
mov
shrb
js
sub
test
ds
cli
icebp
xchg
lods
pop
dec
jne
dec
dec
cli
adc
divb
imulb
je
mov
call
lahf
ficoml
aas
xchg
sub
in
stos
sub
or
sub
imul
sar
xlat
movsl
scas
inc
lock
pop
fwait
pushf
fs
lock
cld
add
sbb
sub
pop
dec
cmpsb
add
aam
ficoml
pop
test
cmpsb
jle
cmp
push
scas
add
ljmp
cltd
fmull
popa
xchg
mov
add
jns
cmpsb
xor
popa
adc
and
xchg
movsl
wrmsr
cmp
data16
in
stc
lret
mov
ret
rep
stc
pop
sub
fs
idivb
xchg
adc
int3
cmp
inc
outsl
test
xor
std
pop
ret
pop
inc
sub
push
xor
mov
shlb
mov
jge
sub
adc
imul
int3
mov
inc
popa
es
xchg
add
xor
inc
cmp
add
in
mov
and
stos
push
dec
push
ss
jp
sub
sbb
in
adc
push
add
or
jo
dec
mov
xor
leave
pop
xchg
lcall
je
insb
icebp
push
cmp
inc
fcom
test
xor
mov
outsb
push
sahf
fdivs
mov
mov
fwait
jg
cmpsb
mov
push
decl
mov
jbe
mov
lret
cmp
mov
lods
jno,pn
cmp
test
data16
into
dec
pusha
leave
dec
push
clc
inc
jbe
in
mov
push
jp
or
cmpl
loopne
push
adc
cmp
testb
xor
stc
mov
cld
les
sub
jns
jmp
inc
adc
cmpb
sbb
mov
inc
xor
cmp
daa
pop
ds
ja
adc
mov
mov
stc
jle
ds
je
inc
jo
sarb
mov
sahf
or
fdivp
sbb
adc
and
xchg
cmc
push
into
ret
imul
push
jb
enter
clc
jle
add
fstpl
jbe
cmpsl
dec
int3
inc
jl
fucomi
jne
inc
or
addr16
movsb
and
push
aaa
inc
call
mov
push
js
or
sub
orl
push
fisttpl
cmpb
push
loop
sub
inc
xchg
mov
testb
pop
push
pop
or
mov
mov
pushf
pop
fistps
cmp
aam
mov
jge
mov
mov
and
cltd
or
leave
adc
and
jecxz
test
add
mov
cld
jge
cmp
ret
lret
icebp
mov
pop
xchg
add
jns
fimuls
cld
mov
jb
fidivs
sahf
mov
xor
lahf
rcr
leave
mov
mov
stc
xchg
stc
fwait
inc
xor
pop
test
push
sub
sub
push
stos
sbb
lea
jge
jg
jns
jg
int3
ret
dec
arpl
xchg
adc
pop
data16
ret
pop
inc
test
cmp
stos
sbb
push
dec
xchg
and
jbe
and
ja
ret
cmp
sti
or
testl
pop
push
sub
andb
js
inc
cmpsl
xchg
adc
les
in
leave
scas
adc
lea
loopne
popa
and
and
aam
adc
jmp
pop
push
insl
jbe
mov
cmp
test
and
enter
call
fs
jns
dec
lods
pop
xlat
sub
inc
jmp
icebp
xchg
orl
notl
and
mov
add
out
orl
dec
imul
jl
dec
cmp
movsl
and
outsb
movsb
std
jae
nop
pop
cltd
cltd
cmp
mov
test
add
cmp
xchg
das
mov
loopne
sarb
mov
adc
jmp
adc
jle
daa
jl
mov
not
xlat
iret
push
aad
and
xor
mov
dec
popa
data16
cwtl
fidivs
scas
jne
mov
mov
push
leave
pop
and
mov
js
popf
nop
dec
test
inc
sub
and
dec
cmpsl
imul
cmc
mov
and
scas
mov
int3
aaa
xor
mov
pop
add
iret
lods
ret
jb
mov
dec
repnz
push
sub
push
sub
xchg
jns
pop
jp
adc
and
xchg
cs
xchg
pop
mov
bnd
sub
jecxz
mov
xor
mov
aas
loop
mov
mov
in
shlb
loopne
bound
rolb
sbb
and
mov
clc
adc
xor
frstor
xor
jnp
aaa
roll
add
jae
repnz
mov
sbb
loop
rclb
orl
inc
cld
jbe
push
push
jb
or
ret
mov
fisubs
cmp
hlt
cmpsl
ss
pop
jnp
stc
sbb
outsl
mov
stos
mov
mov
mov
pop
outsl
or
mov
fmull
out
ss
mov
adc
pop
nop
in
dec
adc
leave
mov
test
aaa
xchg
add
inc
lods
shl
outsl
stc
in
or
nop
cli
jne
or
push
jg
mov
insl
fnsave
jo
xchg
repnz
and
gs
pop
cltd
jp
xor
jle
in
cmpsb
fcmovnb
stos
nop
xchg
push
inc
jns
mov
mov
sbb
sbb
and
xorl
ficompl
andl
and
cli
sti
sbb
inc
or
push
lcall
jnp
shl
and
shr
or
icebp
int3
xor
and
xor
sub
sbb
or
dec
and
lods
insb
lods
popl
add
fistpll
mov
loopne
pop
cmp
out
jnp
ljmp
incl
xchg
movsb
outsl
mov
pop
mov
adcl
dec
jle
pop
stos
jge
ret
cwtl
mov
push
shll
mov
xlat
jno
ljmp
repz
pop
xor
jbe
jle
jg
push
push
outsl
loopne
lcall
or
lods
movsl
clc
repnz
rcpps
cld
push
in
sahf
push
hlt
mov
sub
dec
jecxz
push
call
mov
push
repz
lahf
xor
push
mov
lods
cmpsl
push
lods
in
lcall
mull
cmp
fbld
ret
and
fiadds
insb
pop
stos
sub
int
add
xchg
ljmp
mov
repz
repnz
xor
int3
add
sub
aad
scas
adc
push
jb
sbb
adc
jl
or
mov
push
shrb
jb
xor
sahf
fnstsw
xchg
nop
mov
sbb
ss
flds
popl
push
stos
xchg
pop
jns
iret
xor
decb
fld
add
int3
cmpsl
dec
sub
mov
jb
sarb
pop
test
sarl
jecxz
les
inc
adc
psraw
jp
loop
mov
lods
jns
lock
in
cmpsl
sbb
xor
or
addr16
loopne
xchg
dec
xchg
inc
push
mov
push
or
sbb
stos
push
inc
inc
push
f2xm1
adc
cmp
fwait
cmovno
mov
push
out
je
mov
ret
cli
shlb
mov
jne
adc
sub
fildll
xchg
lcall
scas
dec
xchg
jge
andl
sbb
xlat
ffree
xorb
shlb
inc
jge
jb
imul
cs
sub
int
les
sbb
outsl
push
stos
jb
rcll
stos
ss
jae
in
cli
xor
mov
and
into
mov
jmp
int
fnsave
mov
inc
cltd
ljmp
pop
cli
inc
ret
test
and
pop
cmp
dec
data16
imul
sahf
jmp
pop
fstpt
enter
mov
cmp
sahf
jmp
test
inc
push
icebp
fdivr
mull
mov
cmp
rcll
xor
aad
cli
adc
jo
int3
mov
mov
mov
and
jns
lea
shl
lods
xchg
cwtl
sti
out
dec
adc
fbstp
popa
mov
mov
or
in
mov
push
ss
adc
loope
pop
insl
stos
push
daa
push
add
push
jne
ret
popa
pop
outsb
adc
jle
or
inc
xorl
mov
xchg
notb
dec
mov
dec
les
xor
mov
loop
mov
cld
scas
addr16
ror
push
and
mov
ds
xchg
ja
enter
push
push
jne
rorb
push
cmpsl
sbbb
add
stc
in
xchg
daa
into
into
or
jmp
inc
xchg
jg
aaa
push
loop
inc
push
into
sub
into
adc
mov
mov
mov
add
fisttpl
xor
mov
jb
das
xor
leave
xchg
sub
fidivl
outsb
jecxz
pusha
adc
jnp
xchg
pushf
lea
add
push
cmp
cmp
fucom
sbb
xchg
pop
lods
call
add
cmp
push
stc
sbbl
repz
push
fwait
push
and
xchg
add
jae
cmp
sti
cld
mov
pop
je
into
dec
push
fwait
mov
jno
cmp
mov
test
cmp
lods
sbb
sub
mov
jmp
mov
jg
loope
sbb
aam
dec
imul
adc
add
xlat
sub
call
and
inc
or
loop
test
mov
cli
repz
push
mov
push
cwtl
test
adc
ffreep
mov
clc
call
push
sbb
mov
jne
or
cmp
test
add
dec
xor
mov
sub
sarb
lret
ja
xchg
fmuls
and
mov
mov
mov
popf
xor
jne
insl
int3
cld
adc
jecxz
pop
jl
sub
jno
jbe
mov
cmpb
imul
pop
and
mov
lock
or
pusha
loopne
loope
ss
cmp
sub
lods
pop
jb
mov
xchg
sbb
jns
test
in
mov
mov
sbb
mov
xchg
add
lret
stos
out
daa
adc
sbb
inc
jp
add
cmpsl
data16
fwait
cwtl
and
push
inc
or
mov
pop
add
jb
cltd
adc
xor
cmpsb
aad
call
pop
jl
push
dec
addr16
add
xchg
fisubrs
das
lret
movsb
dec
in
mov
mov
lods
xchg
cli
sar
cltd
add
adc
add
mov
mov
loopne
clc
lret
in
out
push
xchg
sub
scas
repz
jp
shrb
push
stos
movsl
push
inc
out
decl
lock
cmpb
adc
and
popa
stc
dec
stos
movsb
test
hlt
fdivr
leave
fadd
mov
xchg
sbb
jbe
jl
sub
sbb
aad
xchg
iret
mov
push
dec
add
cs
inc
jecxz
mov
cmp
sbb
fsubl
call
push
fwait
xor
inc
imul
jle
mov
ror
inc
mov
addr16
lcall
sub
sbb
pop
ror
sub
dec
cld
or
ret
pushf
inc
movsb
fistps
fbstp
add
dec
int3
les
mov
and
push
mov
push
into
imul
pop
es
inc
lds
and
and
les
in
lea
mov
or
pushf
mov
stos
inc
jnp
mov
mov
scas
out
loopne
lahf
pushw
inc
cmc
inc
dec
loop
sub
xchg
icebp
outsb
inc
aad
aam
or
mov
scas
rcll
dec
pop
inc
test
rorl
push
push
fimuls
out
sbb
add
jns
pop
popl
imul
pop
adc
mov
or
mov
pop
pushf
stc
push
lret
hlt
fstpt
in
out
mov
inc
mov
and
aaa
mov
cmp
data16
jo
push
rcrb
pop
mov
insb
push
insb
insl
stos
test
repz
inc
icebp
aam
test
out
dec
dec
push
std
push
fmull
jb
pop
loope
lret
xor
fidivrl
lock
outsl
mov
dec
push
iret
jns
ret
adc
and
mov
fldenv
push
stos
push
daa
arpl
jl
and
xchg
xor
sub
sub
bound
or
data16
sub
pushf
dec
mov
stos
push
and
aad
adc
jo
pop
jge
js
lcall
adc
movsl
lret
mov
call
xchg
push
jmp
sbb
iret
gs
insb
jle
xlat
repnz
sub
fmul
add
mov
pop
mov
lcall
sbb
or
dec
outsl
aaa
push
jp
ret
inc
or
xchg
or
xor
pop
sbb
cmpsb
inc
mov
mov
nop
xchg
and
add
cmp
movsl
sbb
mov
push
dec
pop
outsl
movsb
pop
fnstsw
mov
mov
pop
jg
hlt
sub
je
sbb
scas
push
call
movsb
je
shlb
cmp
or
mov
adc
cmpsl
add
sub
and
lds
dec
adc
lds
pop
or
cltd
ficomps
mov
mov
jae
sub
dec
out
out
in
push
mov
mov
push
fildl
and
pop
sub
add
lock
mov
out
int3
sbb
xlat
dec
add
cmp
popf
out
mov
popa
xchg
push
test
ss
ja
mov
add
ljmp
mov
clc
jp
push
jns
jno
push
jmp
out
movsb
test
xchg
mov
mov
adc
das
xor
cmpsb
add
inc
sbb
pop
or
lods
lea
repz
jmp
in
std
xchg
dec
into
subb
dec
out
push
pop
jo
xchg
addr16
mov
mov
insb
test
or
add
and
cmp
adc
push
scas
dec
mov
xor
jae
xchg
aas
repnz
or
adc
sbb
sarb
push
out
mov
roll
scas
scas
sahf
mov
or
jne
lock
xchg
dec
testl
add
dec
ljmp
adc
sbb
iret
push
mov
iret
pop
repz
imul
int
je
loope
sbb
insl
outsb
out
cmp
ret
in
fldenv
lock
testb
insb
adc
sarb
and
push
sahf
inc
pop
xchg
pusha
jb
add
inc
push
jo
divl
mov
test
fnstenv
data16
mov
jnp
sbb
cmpsb
addr16
test
rolb
call
inc
cwtl
imul
push
rclb
popf
pop
dec
int3
xchg
and
adc
push
sbb
imul
dec
xor
inc
xor
push
popf
out
jae
mov
addr16
xchg
push
je
push
jecxz
or
std
jg
fcmovu
bound
inc
dec
cmp
je
mov
push
add
aaa
mov
cli
pop
mov
sbb
enter
ja
xor
pop
and
pop
pusha
sbb
mov
cmpb
cmp
or
adc
jbe
cmpb
dec
pop
jmp
adc
push
fwait
jle
dec
cmp
imul
xor
mov
ficompl
push
pusha
or
scas
shr
mov
cmp
test
aas
pop
push
inc
insb
lahf
push
adc
cmp
sub
repnz
dec
lea
pop
dec
jle
jno
rcll
cmpsb
insb
or
jl
lcall
hlt
lods
out
ss
ficoms
les
push
loop
mov
loopne
jns
cltd
mov
out
aam
je
push
xchg
xorl
mov
inc
js
xchg
loopne
cmp
insl
mov
clc
lret
aas
andb
pop
mov
cmp
mov
and
ret
pop
and
xor
push
sub
jno
adc
cmp
xor
cmp
cmp
fwait
xchg
xor
vmaxsd
ja
or
rcrl
loope
push
jno
icebp
xchg
enter
jmp
mov
lock
sbb
add
pop
inc
ds
or
sub
or
aaa
and
loope
xchg
push
xchg
mov
outsl
xchg
mov
push
stos
sbb
or
xchg
sarb
or
std
mov
adc
inc
mov
mov
test
scas
jne
inc
xor
xor
jle
popf
scas
scas
sti
xchg
es
sbb
addl
adc
jp
ds
aad
getsec
add
iret
and
rcrl
addl
jmp
fisubrl
cmpsb
movsb
movsb
fstps
out
dec
jg
pop
xlat
jns
ret
cmp
pop
dec
push
mov
pop
jle
pushf
xchg
enter
dec
cmp
push
mov
adc
fwait
cmpsb
push
iret
addr16
adc
sti
mov
leave
jne
je
mov
dec
or
jae
std
daa
or
jb
mov
outsb
mov
pop
mov
hlt
push
xchg
or
ds
call
cmpl
testl
push
rcrl
cmpsb
jns
mov
jge
movsb
in
fnstcw
stc
pop
jmp
pushf
or
lods
andl
sbb
push
xchg
xchg
add
dec
repnz
imul
inc
ljmp
mov
xchg
dec
lods
mov
jno
andb
sti
mov
iret
fcoml
cmc
not
adc
in
popa
mov
inc
pop
adc
add
lds
repz
mov
push
mov
loopne
push
es
mov
iret
arpl
cwtl
adc
push
pop
xchg
dec
packssdw
mov
sbbl
sahf
push
mov
fwait
sbb
mov
push
cmp
fmull
mov
enter
mov
pop
fsts
movsl
mov
mov
movsl
xchg
rorl
xlat
or
gs
mov
or
cmp
mov
jge
aaa
and
scas
es
test
push
pop
pop
out
pushf
movsb
notl
mov
xlat
inc
add
adcl
hlt
inc
dec
pop
adc
inc
popf
shll
adc
cmp
jo
or
pop
adc
xor
and
inc
xchg
nop
jo
repnz
adc
cmp
xchg
push
test
int3
pop
out
rolb
xchg
xor
testb
lock
jnp
int3
cmp
jg
pop
xor
es
lcall
push
ret
sbb
mov
shll
lahf
jmp
xchg
ja
int
sub
or
bound
jno
sub
and
xlat
inc
popa
and
cmc
adc
sub
mov
adc
popa
loop
std
xchg
lds
cmp
cmp
aas
dec
jmp
arpl
loopne
loop
lahf
int
sub
in
lods
inc
int3
sbb
cmpsl
jno
sub
xor
pop
and
inc
sti
data16
push
mov
dec
mov
or
lcall
pop
dec
mov
cs
adc
jecxz
sbb
push
push
fstl
jp
sbb
push
xchg
fcmovnb
cli
and
fidivrs
test
xor
imul
lahf
cmp
xor
lret
pop
adc
and
ret
inc
mov
fldz
addr16
test
mov
sub
lret
fstp
sbb
mov
pop
add
cli
fadd
ja
mov
movsb
push
xlat
shl
jo
push
mov
push
jno
jmp
imul
pop
aad
aad
add
and
cmp
add
shlb
aam
es
adcb
cmp
es
outsl
mov
xor
in
add
ljmp
shl
andb
ret
popa
mov
xor
or
xchg
daa
rolb
xor
arpl
mov
lock
loope
hlt
dec
xor
adc
push
sub
cltd
xor
neg
out
jmp
push
cmc
inc
xor
sbb
push
xorb
dec
cmp
xchg
dec
out
out
sub
mov
popf
jl
pop
fmuls
pop
adc
leave
stos
je
test
cmp
xchg
push
mov
aas
ret
dec
push
pop
cmp
sub
or
mov
test
add
scas
mov
pop
jg
lret
xor
mov
xor
faddl
or
lret
and
mov
shrb
lret
cmp
sbb
in
adc
rorl
loope
cld
bound
shll
je
jno
xchg
xorl
int3
test
cmc
mov
and
or
ret
jle
xor
mov
fidivrl
xor
inc
js
jg
and
jp
movsb
jmp
sbbb
or
or
mov
jbe
hlt
jne
hlt
pmuludq
and
push
mov
mov
xchg
shl
xor
leave
gs
jmp
xlat
movsb
mov
cmp
sub
mov
scas
inc
shlb
add
das
sbbb
jl
inc
mov
test
outsb
adc
std
test
rcrl
sbb
cltd
cmpl
adc
fdivp
out
inc
mov
or
aam
imulb
fwait
mov
into
push
fimuls
shll
arpl
lret
xchg
or
fs
jecxz
dec
cmp
lods
iret
out
hlt
dec
icebp
xchg
dec
xchg
push
movsb
jmp
push
dec
mov
xor
insb
mov
xchg
test
xchg
or
test
dec
xchg
cwtl
push
jmp
jle
jecxz
push
dec
or
stc
pop
ficoms
mov
fildl
xchg
pop
add
imul
movsl
ljmp
loopne
testl
subb
add
popf
push
sub
inc
les
push
mov
pop
shl
and
in
imul
ret
lds
xchg
adc
out
fbstp
mov
or
xchg
dec
imul
mov
les
jae
and
mov
aas
xchg
stos
add
fcoml
call
inc
movb
jo
fidivl
sti
andb
in
jns
xor
adc
mov
aad
adc
call
fwait
xchg
div
ljmp
pusha
mov
mul
xchg
test
clc
cmp
mov
mov
cmpsl
cmp
dec
fs
out
addr16
lahf
cmp
push
mov
xor
lods
push
or
cltd
pop
sub
lcall
push
mov
xor
shrl
clc
dec
or
dec
dec
cmp
adc
xlat
mov
call
jno
insl
or
pop
sub
fisubrl
popa
out
repz
lea
sbb
int
shll
std
movsb
add
adc
das
dec
sbb
jb
dec
imul
sub
mov
insl
test
pop
lock
lods
pop
in
fstpt
repz
pusha
movsl
sbb
mov
mov
push
sub
push
rorl
dec
sarb
lods
insl
mov
and
loopne
movsl
or
cmpl
movsb
pop
mov
sahf
pop
fisttpl
adc
add
jmp
sbb
add
in
fdivs
loopne
sub
ja
jecxz
es
pop
les
shlb
ljmp
in
scas
sub
mov
dec
stc
dec
sarl
dec
mov
inc
or
push
jl
lret
sub
sbb
aaa
push
loop
bound
jecxz
push
sub
nop
add
out
xor
sbb
pusha
ret
xchg
cmp
inc
add
iret
mov
xchg
sub
lods
lahf
rol
inc
test
cld
adc
sub
mov
pop
cmp
testb
dec
scas
inc
mov
push
lds
popa
jle
mov
mov
mov
jbe
lea
fisttpl
imul
cmp
in
cltd
push
jnp
aas
jb
xchg
dec
lods
adc
inc
mov
xchg
in
out
ss
add
xchg
sarl
push
js
ss
ret
lods
add
cmp
minps
enter
lea
loope
adc
out
sbb
mov
daa
ret
fiaddl
stc
add
cmp
aam
fdivl
pop
inc
add
and
in
sub
cmp
push
dec
xor
sbb
jge
mov
fsubrl
inc
loopne
leave
stc
out
and
adc
imul
or
icebp
and
ja
icebp
inc
adc
push
stos
jbe
mov
jp
push
insl
jl
decl
in
and
mov
adc
mov
cmpsl
faddl
sbb
inc
insb
icebp
jne
cwtl
jp
dec
xchg
loopne
in
incb
std
and
pop
push
ss
push
xchg
popa
loop
pop
cmp
dec
pusha
aas
pop
test
dec
mov
lcall
ds
insl
pop
cld
jecxz
jae
jbe
and
popf
lcall
pop
test
sub
repz
sub
lahf
cmc
pusha
dec
push
push
push
frstor
push
int3
fisttps
fwait
nop
test
mov
xor
loop
dec
int3
mov
dec
roll
imul
pop
add
xchg
push
repnz
mov
scas
out
aam
enter
ja
lret
inc
outsl
or
push
int3
fdivrs
pop
sarb
mov
mov
add
push
sti
aaa
movsb
out
xchg
mov
sbb
cmp
inc
in
ret
mov
jne
cli
add
stos
dec
enter
out
jmp
jb
pop
dec
sub
ja
out
leave
lahf
in
out
xchg
scas
xchg
push
mov
push
scas
mov
adc
lods
icebp
jns
or
xchg
fidivrl
jge
adc
and
test
jae
test
inc
and
sub
mov
mov
jmp
jmp
stc
fwait
xlat
push
fucom
int3
jmp
scas
mov
jp
push
jae
push
lahf
dec
fidivs
and
into
pmulhuw
pushf
cmp
jmp
pushf
imul
push
stos
imul
aaa
ds
mov
call
cs
ret
mov
out
xchg
iret
ja
mov
lcall
jp
sub
cmp
and
mov
out
out
inc
xchg
lret
icebp
or
dec
test
leave
xchg
daa
fimuls
dec
shrl
mov
jl
cmp
sub
dec
push
popf
xchg
inc
xor
and
push
lret
nop
pop
mov
adc
movsb
xor
push
into
dec
mov
dec
mov
jecxz
dec
leave
cmp
push
into
subl
stos
dec
cld
and
leave
mov
push
jnp
insb
jl
sub
jmp
outsl
std
dec
dec
jno
sub
pop
lahf
nop
push
adc
or
ret
out
push
fisttps
push
and
js
scas
jb
mov
test
xchg
jg
cmc
push
xor
push
fmull
adc
push
lret
loopne
sahf
jne
mulb
dec
test
xor
ret
mov
sub
sub
ret
lahf
xor
push
loop
outsb
test
std
stc
mov
jnp
jmp
bound
sub
mov
mov
push
mov
loope
call
jl
imul
mov
scas
in
arpl
or
nop
aam
mov
xlat
or
jmp
pusha
aas
sahf
dec
movsl
insb
mov
dec
test
mov
aas
popa
cmp
sti
scas
cmp
cld
ja
pop
aam
sbb
into
fsubrs
jbe
sbb
pushf
pop
jmp
shll
rol
fwait
xchg
cli
subb
add
rorl
push
adc
adc
inc
pop
lcall
scas
stos
add
jge
xchg
push
xor
pop
pusha
aad
mov
insb
and
mov
jl
fsts
movb
insl
imul
lret
into
lock
jle
int3
inc
dec
mov
stc
loop
add
and
cld
stos
mov
xlat
cmp
fwait
ret
mov
xor
inc
push
pop
ror
call
or
hlt
in
pop
jb
hlt
mov
or
sbb
cmc
jle
jg
jne
adc
ss
aaa
jge
mov
pop
pop
stos
push
push
dec
push
test
xchg
mov
cli
int
adc
lahf
and
mov
dec
outsl
inc
mov
sbb
push
sbbl
cmp
ss
rcl
shll
mov
jne
sbb
mov
stos
mov
xor
xor
xchg
dec
ret
arpl
inc
mov
jb
stc
cld
xchg
sub
pop
push
fidivrl
sbb
jnp
jge
dec
mov
pop
or
mov
cmp
out
sub
js
icebp
or
cmp
xchg
mov
cmpsl
mov
push
pop
lcall
fcoms
mov
jae
jmp
lcall
and
mov
sbb
ja
pop
rclb
sub
mov
dec
xor
dec
nop
daa
hlt
repz
outsl
ljmp
bound
cwtl
lret
mov
pop
mov
inc
inc
push
popa
dec
add
out
fbld
pop
or
testl
dec
or
dec
push
and
jp
xor
jne
and
fwait
je
jl
cmp
push
mov
sub
push
lea
dec
iret
repnz
imul
mov
sti
or
jns
inc
xor
es
je
mov
ss
mov
dec
rcrl
in
jmp
xchg
shrb
sbb
xchg
inc
cmp
pop
push
push
in
dec
in
and
and
test
push
in
fsubrs
sbb
xchg
xchg
cli
push
jecxz
mov
push
testb
push
and
clc
mov
add
mov
in
popa
cli
mov
lret
sbb
jmp
mov
adc
daa
insl
jecxz
leave
xchg
test
ds
mov
xchg
test
mov
mov
pusha
ror
mov
lret
mov
jns
cmp
out
and
nop
hlt
scas
gs
out
loopne
cmp
lahf
pop
mov
xchg
add
in
and
xor
cmc
cmp
mov
mov
icebp
test
jno
xchg
pop
imul
xchg
mov
mov
mov
je
add
push
mov
adc
mov
xchg
call
nop
and
push
dec
sti
sarb
add
mov
cli
outsb
stos
stos
push
mov
mov
mov
sub
mov
hlt
stc
aad
dec
sbb
xchg
cs
inc
mov
shll
mov
jp
fstpt
xlat
cmp
mov
mov
test
in
ds
adc
in
push
lcall
jge
cmpb
sub
mov
test
or
sub
mov
pop
jmp
pop
pop
cltd
fwait
imul
inc
push
sub
imull
adc
dec
push
mov
or
popf
loopne
es
adc
dec
btr
pop
clc
push
add
dec
jo
cs
mov
mov
xchg
jmp
and
cmp
fidivrl
jle
dec
pop
sub
xchg
cmp
fildll
testl
ret
lods
cmp
je
or
test
repz
sarb
xchg
test
int3
mov
int3
jnp
cli
mov
and
outsl
sbb
outsl
jo
test
jne
pop
push
mov
xor
mov
or
jae
sbb
xor
inc
inc
mov
call
sbb
mov
cltd
mov
hlt
rolb
push
cli
and
xchg
xchg
add
scas
movsb
jge
xor
push
bound
xchg
ror
or
or
das
rol
enter
bound
mov
dec
cmp
jmp
dec
mov
lock
mov
push
cmpsl
pop
out
in
adc
sbb
idivl
rorl
test
adc
jbe
mov
lret
ja
insl
add
pop
mov
roll
xlat
in
pushf
fstps
dec
pop
push
outsb
test
in
cmp
sub
adc
dec
mov
neg
xorl
mov
ds
sbb
rcll
outsb
and
in
mov
cmp
int
mov
jns
push
xchg
adc
insb
movsl
jae
js
jno
bound
test
lahf
push
jmp
jne
and
sub
sti
jmp
jo
mov
sti
add
mov
hlt
pop
aad
sbb
loope
insb
or
fcompl
sub
jecxz
xchg
cmp
mov
sub
dec
xor
mov
rorb
rclb
push
add
rolb
xchg
push
aad
xor
ljmp
mov
push
insl
cmp
adc
fnstsw
add
pop
fisubrs
outsl
jge
in
push
sbb
shll
stc
daa
stc
mov
adc
mov
sti
fdivl
imul
or
testl
jmp
jp
jmp
jle
or
jb
cmp
xchg
clc
xchg
mov
je
sbb
inc
mov
data16
outsl
jecxz
lcall
dec
adc
sub
rcll
jns,pn
or
inc
mov
add
pop
rcl
or
sbb
into
jno
dec
test
aas
jmp
ret
mov
mov
add
sti
or
mov
xor
inc
test
arpl
xchg
std
jge
dec
lods
mov
sub
movsw
lea
loope
jmp
scas
lods
inc
subl
repnz
ret
cmp
ja
insl
sbb
out
adc
in
enter
xor
repnz
sbb
leave
mov
enter
sbb
sub
cmp
dec
pop
stc
lock
push
and
imul
inc
mov
cmp
fwait
jbe
push
adc
pop
ret
fucomip
push
cmp
in
out
add
sub
aad
pop
mov
in
mov
rcrl
shrl
cmp
ljmp
mov
mov
push
lds
in
sbb
daa
pop
xor
scas
ds
mov
or
sahf
ss
repnz
mov
push
out
loope
jnp
mov
pushf
xchg
add
mov
stos
ljmp
xlat
sahf
inc
pop
add
lcall
xor
stos
fstps
sbb
push
fildl
jmp
stc
and
into
jp
sahf
mov
jmp
xor
mov
dec
mov
pop
inc
push
mov
inc
insb
out
xor
adc
jno
mov
dec
mov
outsl
fs
cwtl
mov
or
cld
sub
cmc
xchg
out
xorl
scas
js
mov
loop
or
test
mov
lret
add
loop
sti
cs
xchg
inc
xlat
cwtl
insl
fwait
cmp
or
dec
test
xor
push
cmp
sub
add
leave
dec
mov
es
xlat
stc
add
clc
ds
popf
inc
mov
mov
cmp
mov
adcb
repz
inc
and
mov
outsb
cwtl
jbe
pop
adc
inc
dec
sti
nop
outsb
pop
or
in
popa
mov
dec
sub
jecxz
and
sarl
cli
sub
test
jno
xchg
orb
mov
inc
fbld
das
sub
sbb
jns
xor
xor
ret
rclb
mov
in
scas
gs
in
mov
lcall
enter
test
jb
xchg
jnp
push
xor
orl
add
cmp
fstps
sbb
enter
pop
icebp
fcoml
and
pusha
push
push
adc
nop
dec
or
mov
or
orl
notb
push
aaa
imul
cmp
and
cs
and
repnz
stos
test
lahf
cmovne
jnp
rclb
std
sbbl
pushf
inc
repz
sub
int3
out
mov
sub
mov
lods
xor
xchg
jbe
sub
xchg
push
iret
jne
sub
push
jecxz
mov
test
outsb
cmpsb
ret
loopne
inc
out
aas
mov
or
xchg
inc
push
mov
imul
scas
push
xchg
mov
mov
leave
loop
xor
or
mov
xchg
sub
hlt
aaa
cmp
dec
push
addr16
movsb
and
jns
dec
xchg
jl
imul
xor
loope,pt
push
and
das
pop
testl
aad
lock
mov
pusha
inc
adc
mov
xlat
jo
fsubp
iret
subl
push
push
add
jae
bound
push
int
xor
mov
mov
icebp
xchg
loop
pop
int3
fdivrl
sbb
imul
ljmp
mov
enter
mov
xchg
dec
sbb
inc
and
xor
push
xchg
add
cld
pop
fcmovb
mov
cmp
add
mov
pushf
int3
push
pop
mov
inc
fidivrl
add
mov
jecxz
sbb
xchg
inc
lods
sub
inc
cmp
test
xor
cmp
test
insb
in
mov
ret
adc
scas
jle
dec
xor
dec
mov
or
into
or
ds
dec
inc
xchg
cwtl
xor
loopne
lea
ss
shrb
xchg
test
pop
and
jge
adc
xchg
ljmp
cwtl
xchg
outsb
jne
xor
jmp
jl
pusha
xor
adc
inc
test
repz
inc
fmul
mov
sti
ss
sbb
iret
cli
stos
cmp
mov
lds
and
not
and
mov
push
rep
nop
pusha
mov
xchg
insb
sub
mov
inc
lods
lods
mov
fwait
push
or
xor
insl
ljmp
cmp
xor
fldcw
aad
pop
dec
test
sbb
mov
xchg
js
xchg
stos
dec
fninit
jge
je
xlat
adc
dec
mov
xorl
mov
loop
int
gs
xor
bound
pop
stos
test
dec
xchg
dec
mov
lock
int
imul
ret
jno
or
in
clc
mov
pop
adc
mov
xchg
adc
test
inc
mov
lock
jnp
mov
andl
flds
jno
in
cmp
xor
in
jmp
pop
xor
out
sbbl
pusha
test
xchg
lahf
jae
test
nop
mov
mov
xchg
pushf
addl
loope
xchg
pop
shlb
movsl
mov
andl
add
push
ds
stc
lds
push
ds
enter
sub
push
movb
cmc
push
xchg
leave
xchg
mov
pop
mov
adc
inc
icebp
xchg
cmp
stc
fdivrl
daa
in
xchg
add
cmp
or
and
inc
outsl
mov
int3
adc
jg
mov
mov
mov
ret
aas
xor
arpl
stos
adc
jle
adcl
push
rorb
rcll
stos
jge,pn
pop
fadds
cmc
inc
jns
push
mov
mov
rolb
jae
gs
push
and
lds
dec
lods
sub
adc
test
lods
xchg
push
add
cmpsb
jb
cmp
cld
push
xchg
xchg
fs
xchg
jne
movsl
test
loopne
sub
mov
int
dec
es
mov
in
popf
in
mov
pop
push
sti
scas
pop
out
fnstenv
scas
or
mov
lds
mov
daa
jne
mov
cmc
stos
mov
psubw
add
popa
or
or
out
ja
lods
cltd
mov
fwait
dec
mov
mov
std
mov
cld
push
addr16
ljmp
pop
cwtl
cmp
sub
adc
xchg
ss
mov
jp
rolb
xlat
fisubrs
gs
mov
inc
push
mov
repnz
jae
xor
repz
dec
pushf
xchg
and
dec
xchg
push
ret
aad
push
sub
add
mov
xor
fwait
sbb
jae
stos
in
sub
lds
and
nop
inc
xor
or
xlat
cld
inc
cmpl
in
sbb
outsl
cwtl
movq
jnp
add
cmp
cmp
pop
jg
stc
push
cmc
repnz
fldcw
es
cmp
xor
dec
add
sbb
std
in
add
push
xchg
inc
pop
add
sahf
jno
mov
mov
sub
fs
popf
jns
mov
pop
or
inc
mov
scas
pushf
or
sbb
rorb
fiadds
push
mov
icebp
push
pop
dec
aad
jo
or
and
lock
adc
js
in
inc
std
test
add
mov
push
jmp
inc
sbb
test
inc
pop
xchg
dec
pop
pushf
popa
movsb
push
mov
dec
or
loopne
cmp
inc
fnstsw
pushf
mov
cmp
and
push
pushf
adc
ljmp
lea
lods
je
fdivrs
dec
mull
lods
incl
stc
insb
mov
lds
out
xchg
data16
xchg
aas
fiaddl
in
les
inc
xor
cmp
inc
outsb
add
pavgb
mov
or
push
cmp
xor
jne
xlat
mov
add
jle
negb
fucom
cmp
cwtl
sbb
mov
int
rolb
dec
cld
ljmp
fsubrl
outsl
into
lods
fisttps
adc
or
mov
test
mov
add
addr16
xchg
hlt
or
sbb
ljmp
leave
rorl
mov
or
xor
jno
or
ss
roll
mov
cmp
das
pop
sub
lahf
adc
push
lea
scas
sbb
fmuls
cwtl
xchg
fimuls
xor
mov
xchg
cs
mov
rorl
push
adc
lods
mov
mov
lahf
mov
sbbb
ljmp
rcll
pop
rcll
imul
lods
std
sahf
ds
fadds
xor
jb
xchg
sbb
push
push
mov
xorl
decl
and
js
daa
flds
and
into
pop
lahf
fistpll
fwait
sub
lods
mov
das
mov
mov
outsb
jno
xchg
stos
and
ret
mov
mov
movsl
rorl
jbe
adc
sub
testb
inc
jmp
loopne
pop
cli
cmpb
mov
pop
out
xchg
jbe
or
xor
fnstsw
pop
xlat
fmuls
mov
adc
dec
pop
xchg
lret
popa
lcall
jle
test
xchg
adc
mov
pop
addr16
jge
mov
mov
fdivrs
mov
andb
repz
rcr
pop
loopne
jnp
mov
push
jp
fisttpll
inc
add
dec
adc
fcompl
cltd
aaa
std
xchg
ljmp
popf
pop
daa
ficompl
ret
cli
mov
jge
adc
icebp
mov
iret
push
dec
clc
jecxz
adc
cmc
loope
mov
and
jns
inc
push
jnp
jmp
adc
xchg
std
sbb
andb
dec
adc
popf
mov
adc
fs
clc
ret
lahf
subb
lds
fcoml
arpl
jnp
or
push
jle
imul
fimuls
rorb
mov
lcall
add
aam
inc
cmp
fs
or
dec
add
out
or
push
outsb
push
test
pop
xchg
loopne
loope
dec
lods
ja
bound
fmuls
bound
pop
leave
cmp
xchg
cmp
std
cmc
fldcw
push
mov
and
fdivp
inc
and
push
xor
push
mov
mov
adc
shl
jno
cmpsl
dec
xchg
push
gs
test
cmp
push
push
cmp
inc
std
sbb
mov
sbb
dec
movsl
pop
inc
xchg
xor
dec
ds
js
cli
cmp
xor
cmp
jp
xor
nop
ret
xchg
enter
push
lahf
test
mov
jno
std
mov
pusha
pop
lahf
stos
ljmp
pop
pop
fidivl
jbe
xor
mov
and
inc
or
mov
lret
dec
sub
imul
adcl
or
cltd
push
mov
scas
xchg
push
out
pop
jae
sahf
xor
inc
adc
lea
pusha
push
data16
jle
jle
pop
or
popa
add
jb
cmp
push
hlt
lahf
mov
cmp
dec
xchg
push
mov
mov
pop
sarl
xor
lods
inc
push
adc
xor
enter
pop
pop
add
test
ljmp
lods
and
jecxz
adc
push
test
or
repz
add
push
or
cltd
push
cli
xor
mov
mov
cmc
adc
orl
xlat
arpl
or
push
test
jo
mov
out
and
push
mov
fisubrl
pushf
add
jb
add
jno
das
mov
inc
fs
adc
ror
mov
inc
mov
dec
adc
dec
cmp
adc
and
lods
xlat
add
dec
test
cmp
mov
movsb
mov
mov
stos
mov
cmp
arpl
ret
cmp
imul
push
xchg
dec
lock
fisubs
stos
push
scas
xor
xor
mov
lods
mov
dec
xor
mov
in
cmp
outsb
lret
les
inc
and
or
pop
jl
iret
sbb
bound
jl
sub
mov
jo
popa
xchg
das
lods
lods
imul
daa
cmp
sbb
bound
inc
insb
arpl
mov
testl
xlat
inc
add
lods
xor
sbb
dec
in
add
dec
cld
int
outsl
sub
adc
test
jmp
stos
stos
repnz
outsb
jae,pn
adc
xchg
push
sub
pusha
jb
fsubrp
push
mov
dec
sub
lds
out
sbb
scas
imul
push
test
pop
add
cmpl
lret
movsl
ss
mov
and
enter
data16
jl
inc
and
push
mov
iret
repz
xor
xchg
imul
pop
outsb
aam
xor
loopne
add
insb
push
shlb
dec
sbb
pop
dec
cmp
fdivp
push
mov
gs
ljmp
push
punpckldq
xlat
out
lcall
out
jbe
xchg
rclb
outsb
jl
fsub
out
outsl
mov
lods
scas
clc
insb
cs
ja
ss
iret
dec
adc
xchg
pop
enter
dec
dec
shr
and
addr16
mov
push
mov
sub
nop
pop
test
sub
enter
inc
sub
xchg
cmp
into
pop
in
mov
les
pusha
adc
cmp
inc
shrl
mov
icebp
pop
cmp
inc
add
cmp
js
sub
push
lods
lcall
jno
test
fisubrs
or
outsb
hlt
flds
lea
lret
or
mov
enter
mov
adc
sbb
ds
adc
aas
movsb
mov
scas
int3
jl
adc
mov
shlb
jecxz
sbb
adc
add
pop
mov
mov
les
or
leave
aam
test
adc
shlb
filds
bound
add
arpl
inc
stos
cltd
sub
ljmp
aas
mov
inc
mov
sub
loope
xchg
leave
mov
loope
mov
ja
cmpsb
or
mov
outsb
pop
jp
jno
data16
jae
xchg
gs
dec
and
xchg
xor
js
rorb
inc
popa
iret
jmp
lods
mov
jmp
pop
insb
add
add
out
xorb
add
add
add
add
add
sub
add
dec
add
addb
add
nop
pop
add
rolb
add
xor
add
rorb
orb
add
adc
orb
add
rclb
add
push
add
out
xorb
add
add
add
andb
add
lock
adc
add
lock
addb
adcb
add
add
add
out
xorb
add
add
add
mov
nop
adc
push
jecxz
add
xorb
add
add
add
loopne
add
pop
jae
add
jae
add
xorb
add
add
add
or
add
mov
adc
mov
add
out
xorb
add
add
add
xor
add
adc
adc
test
add
out
xorb
add
add
add
pop
add
add
inc
add
out
xorb
add
add
add
addb
add
pop
add
add
inc
add
push
add
add
add
add
or
inc
add
push
add
inc
add
push
add
inc
add
add
or
inc
add
dec
add
dec
add
dec
add
inc
add
add
add
add
dec
add
push
add
push
add
push
add
dec
add
or
add
dec
add
push
add
push
add
push
add
dec
add
add
add
pop
add
push
add
inc
add
push
add
out
xorb
add
add
add
add
add
add
add
add
add
addb
add
add
addb
add
pop
add
addb
add
addb
orb
add
test
add
rolb
add
clc
add
orb
add
and
addb
add
out
xorb
add
add
add
add
xchg
adc
xor
add
out
xorb
add
add
add
add
add
add
add
add
xorb
add
add
add
add
add
add
xchg
adc
xor
add
out
xorb
add
add
add
add
add
add
xchg
adc
xor
add
out
xorb
add
add
add
add
add
push
xchg
adc
xor
add
out
xorb
add
add
add
add
add
mov
add
out
xorb
add
add
add
add
cwtl
adc
xor
add
out
xorb
add
add
add
add
add
add
cltd
adc
xor
add
out
xorb
add
add
add
add
add
add
fwait
adc
xor
add
out
xorb
add
add
add
add
add
add
adc
xor
add
out
xorb
add
add
add
add
add
add
add
add
xorb
add
add
add
xorb
add
or
add
lock
add
add
add
sbb
add
sub
add
cmp
add
push
pop
add
pusha
pop
add
jo
add
add
add
out
xorb
add
add
add
add
add
add
sahf
adc
rolb
add
out
xorb
add
add
add
add
add
add
add
add
xorb
add
add
add
add
add
adc
rolb
add
out
xorb
add
add
add
add
add
pusha
movsb
adc
rolb
add
out
xorb
add
add
add
add
add
xor
add
out
xorb
add
add
add
add
test
add
add
add
xorb
add
add
add
add
add
adc
rolb
add
out
xorb
add
add
add
add
add
adc
rolb
add
out
xorb
add
add
add
add
push
add
jo
adc
rolb
add
out
xorb
add
add
add
add
push
add
inc
scas
adc
rolb
add
out
xorb
add
add
add
add
add
adc
add
out
xorb
add
add
add
add
mov
add
add
add
add
inc
add
inc
add
push
add
add
add
add
add
add
dec
add
add
add
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
add
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
add
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
add
dec
add
dec
add
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
out
xorb
add
add
add
add
add
add
xorb
add
add
add
add
pop
add
js
adc
test
add
out
xorb
add
add
or
sub
add
out
xorb
add
add
add
add
or
add
mov
add
add
or
inc
add
add
add
push
add
add
add
xorb
add
add
push
add
orb
xor
add
test
add
rorb
add
clc
or
sbb
add
and
add
dec
or
sbb
add
jo
add
cwtl
or
and
add
rorb
and
add
call
sldt
adc
add
cmp
add
pusha
or
and
add
mov
add
mov
add
fmuls
add
add
sub
add
sub
sub
add
push
or
sub
add
js
add
mov
sldt
enter
out
sldt
lock
xor
add
sbb
add
inc
or
add
push
sldt
nop
or
add
mov
sldt
loopne
add
or
add
xor
add
pop
push
add
orb
cmp
add
test
add
rorb
add
clc
push
add
and
add
dec
sldt
jo
add
cwtl
sldt
out
xorb
add
add
add
add
mov
add
add
out
xorb
add
add
add
add
or
add
add
add
xorb
add
add
add
add
or
add
adc
sub
add
out
xorb
add
add
add
add
or
add
add
add
xorb
add
add
add
add
or
add
adc
jl
add
out
xorb
add
add
add
add
add
clc
mov
add
out
xorb
add
add
add
add
les
add
add
out
xorb
add
add
add
add
adc
cwtl
add
add
xorb
add
add
add
add
or
add
adc
rolb
add
out
xorb
add
add
add
add
or
add
adc
add
add
out
xorb
add
add
add
add
or
add
adc
in
add
out
xorb
add
add
add
add
add
xor
adc
mov
add
out
xorb
add
add
add
add
add
loopne
adc
pushf
or
add
xorb
add
add
add
add
jmp
add
out
xorb
add
add
add
add
or
add
adc
mov
add
add
xorb
add
add
add
add
or
add
hlt
adc
pop
add
add
xorb
add
add
add
add
or
add
adc
pusha
add
add
xorb
add
add
add
add
add
enter
mov
add
add
xorb
add
add
add
add
add
mov
adc
inc
add
add
xorb
add
add
add
add
cld
adc
sbb
add
out
xorb
add
add
add
add
std
adc
rolb
add
out
xorb
add
add
add
add
or
add
add
add
add
add
xorb
add
add
add
add
or
adc
fadds
add
out
xorb
add
add
add
add
or
adc
cwtl
add
add
xorb
add
add
add
add
add
or
adc
je
add
out
xorb
add
add
add
add
or
add
add
out
xorb
add
add
add
add
or
add
add
add
xorb
add
add
add
add
or
adc
xchg
add
add
xorb
add
add
add
add
or
adc
cwtl
add
add
xorb
add
add
add
add
push
add
cmp
adc
lock
add
xorb
add
add
add
add
add
sub
add
out
xorb
add
add
add
add
add
fcomps
adc
faddl
add
out
xorb
add
add
add
add
sbb
add
add
add
xorb
add
add
add
add
push
add
mov
adc
or
add
out
xorb
add
add
add
add
push
add
cwtl
and
add
add
add
xorb
add
add
add
add
sldt
jo
adc
lock
add
xorb
add
add
add
add
sldt
pusha
and
add
out
xorb
add
add
add
add
add
push
sub
add
add
out
xorb
add
add
add
add
sub
add
out
xorb
add
add
add
add
xor
add
add
out
xorb
add
add
adc
subb
add
push
adc
adcb
add
and
add
cmp
add
push
adc
xor
add
sbb
add
inc
adc
add
add
clc
adc
adcb
add
add
add
out
xorb
add
add
add
add
add
enter
adc
add
out
xorb
add
add
add
add
add
fdivs
adc
or
add
out
xorb
add
add
add
add
adc
add
add
out
xorb
add
add
add
add
push
add
out
xorb
add
add
add
add
adc
add
adc
data16
add
xorb
add
add
add
add
adc
add
adc
add
xorb
add
add
add
add
adc
add
adc
add
xorb
add
add
add
add
add
sub
add
out
xorb
add
add
add
add
lcall
out
xorb
add
add
add
add
mov
add
adc
add
xorb
add
add
add
add
adc
add
adc
add
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
add
add
add
add
dec
add
inc
add
inc
add
add
add
add
add
add
dec
add
inc
add
inc
add
add
add
add
add
add
dec
add
dec
add
push
add
dec
add
dec
add
dec
add
add
add
add
dec
add
dec
add
inc
add
push
add
dec
add
add
inc
add
add
add
or
push
add
push
add
dec
add
inc
add
dec
add
push
add
add
add
add
sbb
push
add
push
add
dec
add
add
push
add
inc
add
push
add
push
add
dec
add
inc
add
dec
add
push
add
add
add
add
or
push
add
push
add
push
add
inc
add
add
add
add
add
add
dec
add
inc
add
dec
add
dec
add
out
xorb
add
add
add
jo
add
nop
adc
add
adc
cmp
add
cmp
cmp
add
pusha
adc
cmp
add
mov
cmp
add
mov
add
fcoms
cmp
add
add
add
sub
add
out
xorb
add
add
add
add
jmp
add
add
out
xorb
add
add
add
add
adc
add
jmp
add
add
out
xorb
add
add
add
add
adc
add
jmp
add
add
out
xorb
add
add
add
add
adc
add
adc
adc
add
out
xorb
add
add
add
add
add
pusha
jmp
add
add
out
xorb
add
add
add
add
add
js
adc
adc
add
out
xorb
add
add
add
add
jmp
add
add
out
xorb
add
add
add
add
adc
add
add
add
xorb
add
add
add
add
adc
add
jmp
add
add
out
xorb
add
add
add
add
adc
adc
adc
add
out
xorb
add
add
add
add
add
lock
add
add
or
dec
add
inc
add
inc
add
inc
add
push
add
dec
add
add
add
add
or
dec
add
dec
add
dec
add
add
push
add
dec
add
add
add
add
or
push
add
pop
add
add
inc
add
push
add
add
or
push
add
pop
add
inc
add
inc
add
push
add
add
add
add
out
xorb
add
add
push
add
add
add
out
xorb
add
add
add
add
adc
adc
adc
add
or
dec
add
dec
add
dec
add
dec
add
add
out
xorb
add
add
add
add
push
add
out
xorb
add
add
add
add
add
cmp
add
add
or
push
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
and
add
add
adcb
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
push
jl
adc
decl
outsl
ds
pop
incl
add
incl
add
incl
add
incl
add
cmp
xor
ljmp
addr16
incl
dec
test
add
call
cmp
pop
insb
pushl
dec
pop
incl
add
incl
add
incl
add
decl
fwait
decl
lahf
incl
test
add
incl
pusha
int3
incl
pop
into
incl
pop
decl
pop
mov
incl
jle
xor
jmp
ds
incl
add
incl
add
lcall
lcall
scas
incl
popa
enter
sar
add
incl
imul
incl
loopw
or
lcall
outsb
mov
pushl
push
imul
cmp
add
add
add
push
scas
jmp
mov
incl
push
incl
imul
add
incl
insb
out
add
incl
push
decl
out
and
ljmp
sbb
ljmp
push
jo
sbb
push
incl
add
incl
add
pushl
incl
arpl
incl
push
add
incl
insl
in
add
incl
insb
out
add
incl
push
decl
call
ljmp
out
xor
lret
jo
ljmp
pop
cmp
cmp
add
add
add
add
jge
mov
jge
mov
incl
insb
fdivrp
add
incl
outsb
in
add
incl
outsb
out
add
add
incl
push
decl
call
ljmp
out
cmp
fdivrp
ds
cmp
sbb
xor
add
add
add
add
mov
sar
push
incl
outsl
fdivrp
add
incl
outsl
jecxz
add
incl
insl
in
add
incl
insb
out
add
incl
push
decl
call
ljmp
xchg
ljmp
xchg
inc
mov
aas
ja
call
inc
insl
incl
daa
dec
incl
add
incl
add
lcall
mov
aad
add
incl
jno
jmp
jmp
out
jmp
call
lock
jmp
incl
insb
out
add
incl
push
decl
call
jmp
ljmp
out
fsub
ljmp
int3
incl
cmpsl
incl
xor
incl
sub
add
add
add
add
test
jo
incl
jb
incl
jno
incl
jno
incl
outsb
loop
add
jmp
ljmp
jecxz
bnd
in
repz
push
incl
push
jmp
in
repz
jmp
jmp
jmp
jmp
ljmp
dec
popf
in
decl
jmp
call
leave
incl
lahf
incl
xor
add
add
add
add
mov
int3
fcos
add
incl
je
incl
jno
jmp
ljmp
jecxz
bnd
in
repz
out
hlt
jmp
out
cmc
jmp
out
idiv
add
incl
push
jmp
lock
out
idiv
in
hlt
jmp
in
repz
ljmp
fsubp
in
call
jmp
call
mov
incl
sub
add
add
add
vpaddusb
or
js
incl
je
jmp
ljmp
in
hlt
jmp
out
idiv
call
icebp
clc
jmp
repz
incl
push
incl
push
ljmp
jmp
icebp
clc
jmp
out
idiv
in
repz
ljmp
pop
cmpsl
out
pop
sahf
aad
dec
subl
add
add
add
add
rcl
enter
adc
incl
icebp
jmp
jmp
jmp
out
cmc
call
hlt
sti
jmp
sti
jmp
sti
jmp
sti
in
cmc
cld
incl
push
incl
push
in
cmc
cld
jmp
sti
jmp
sti
jmp
sti
jmp
cli
call
in
hlt
jmp
jmp
in
jmp
loope
pop
xchg
ret
aas
js
add
push
incl
add
incl
add
add
add
add
add
call
fcmovnu
lcall
test
call
jle
incl
je
jmp
jmp
jmp
in
hlt
call
hlt
sti
in
cmc
cld
in
cmc
cld
jmp
sti
jmp
sti
jmp
sti
incl
push
incl
push
jmp
sti
jmp
sti
in
cmc
sti
in
cmc
cld
in
cmc
cld
jmp
cli
jmp
lock
jecxz
bnd
jmp
call
call
test
add
incl
add
incl
add
add
add
add
fucom
lcall
xchg
decl
loope
add
incl
jae
jmp
out
idiv
jmp
hlt
sti
jmp
sti
jmp
cli
jmp
icebp
clc
incl
insb
out
add
incl
push
decl
call
ljmp
jmp
sti
jmp
sti
call
in
hlt
jmp
out
jmp
in
jmp
fdivrp
pop
mov
incl
add
incl
add
add
sbb
jmp
loope
loop
pop
xchg
incl
js
incl
jae
jmp
in
hlt
jmp
out
idiv
call
repnz
jmp
lock
out
idiv
add
incl
insb
out
add
incl
push
decl
call
jmp
out
idiv
call
repnz
jmp
icebp
idiv
in
hlt
jmp
jmp
jmp
out
ljmp
out
popa
cltd
enter
jg
add
add
xor
xor
in
in
aaa
xchg
in
pop
xchg
incl
ja
jmp
out
cmc
jmp
out
cmc
jmp
out
idiv
out
idiv
out
idiv
out
idiv
in
hlt
incl
insl
in
add
incl
insb
out
add
incl
push
decl
call
ljmp
out
cmc
jmp
out
idiv
out
idiv
out
idiv
in
hlt
jmp
in
repz
in
repz
jmp
aam
push
subl
add
add
aas
aas
aas
jmp
out
aas
xchg
in
pop
xchg
incl
jne
jmp
out
idiv
out
idiv
out
idiv
out
idiv
out
cmc
jmp
in
hlt
incl
outsb
in
add
incl
outsb
out
add
add
incl
push
decl
call
ljmp
xchg
ljmp
out
cmc
jmp
out
cmc
jmp
in
hlt
jmp
in
hlt
jmp
out
hlt
ljmp
out
ljmp
push
mov
incl
add
decl
dec
jmp
pushf
out
and
out
idiv
add
jmp
out
idiv
out
cmc
jmp
in
hlt
incl
outsl
jecxz
add
incl
insl
in
add
incl
insb
out
add
incl
push
decl
call
ljmp
xchg
ljmp
in
hlt
jmp
out
cmc
jmp
out
cmc
jmp
out
jmp
out
idiv
outsb
mov
ljmp
lcall
mov
incl
add
call
push
ljmp
jmp
mov
incl
jne
incl
jae
call
lock
out
idiv
add
incl
outsl
jecxz
add
incl
insl
in
add
incl
insb
out
add
incl
push
decl
call
ljmp
xchg
ljmp
popf
in
jmp
out
idiv
out
idiv
out
idiv
addr16
ljmp
lock
loope
pop
nop
mov
incl
add
call
push
ljmp
jmp
mov
incl
jne
incl
jae
jmp
icebp
clc
jmp
lock
add
incl
outsl
jecxz
add
incl
insl
in
add
incl
insb
out
add
incl
push
decl
call
ljmp
xchg
ljmp
popf
in
jmp
lock
call
icebp
clc
jmp
out
ljmp
lock
loope
pop
nop
mov
incl
add
call
push
ljmp
jmp
mov
incl
jne
incl
jae
ljmp
incl
jno
incl
outsb
loop
add
incl
outsb
in
add
incl
outsb
out
add
add
incl
push
decl
call
ljmp
xchg
ljmp
popf
in
call
in
jmp
repnz
jmp
out
ljmp
lock
loope
pop
nop
mov
incl
add
call
push
ljmp
jmp
mov
incl
jne
incl
jae
jmp
cli
ljmp
incl
outsb
loop
add
incl
outsb
in
add
incl
outsb
out
add
add
incl
push
decl
call
ljmp
xchg
ljmp
popf
in
call
in
ljmp
jmp
out
ljmp
lock
loope
pop
nop
mov
incl
add
call
push
ljmp
jmp
mov
incl
jne
incl
jae
jmp
sti
incl
jno
incl
jno
incl
outsb
loop
add
incl
outsb
in
add
incl
outsb
out
add
add
incl
push
decl
call
ljmp
xchg
ljmp
popf
in
call
in
lcall
in
jmp
sti
jmp
out
ljmp
lock
loope
pop
nop
mov
incl
add
ljmp
imul
outsb
mov
decl
out
sub
in
and
in
push
and
push
jge
decl
jb
incl
outsl
in
add
incl
outsb
out
add
add
incl
push
decl
call
ljmp
xchg
ljmp
lahf
in
call
out
jmp
pushl
lock
jnp
icebp
incl
lock
lret
dec
test
add
add
mov
lcall
mov
lcall
jmp
popa
test
jmp
in
lcall
in
call
jmp
inc
xchg
jmp
jmp
sub
decl
outsl
out
add
incl
push
decl
test
pushl
cltd
jmp
push
mov
out
pushl
lock
jg
icebp
decl
lret
mov
enter
scas
in
add
incl
add
ljmp
cmc
cmc
ljmp
shl
xlat
in
call
in
dec
loop
dec
loopne
inc
fsubr
jl
lock
out
jmp
out
decl
in
cmp
jmp
decl
jo
call
js
pushl
in
lcall
out
ljmp
lock
js
icebp
pushl
jae
jo
fdivrp
mov
loopne
movsb
shl
jg
icebp
incl
arpl
mov
mov
jmp
test
addl
call
loop
inc
fucomip
inc
fsubr
mov
shr
js
bnd
out
incl
in
pushl
xchg
pushl
mov
incl
in
call
mov
cmpl
dec
call
push
jmp
arpl
outsb
outsb
outsb
jmp
popa
pushl
aaa
aaa
incl
add
incl
add
incl
add
add
fwait
fwait
lcall
mov
out
mov
int
pushl
bnd
lock
ret
lea
xor
cmp
cmp
aas
aas
aas
cmp
add
add
stos
stos
pushl
shl
mov
lret
and
and
and
and
lahf
lahf
lahf
incl
popa
pushl
aaa
aaa
incl
add
add
cld
aas
push
ud0
rolb
incl
add
incb
add
add
aas
clc
add
pop
lock
pavgb
add
loopne
add
rolb
add
add
add
add
add
add
add
add
push
ud0
cld
aas
incl
add
add
add
and
add
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
or
je
jo
cmp
xor
and
and
insl
gs
jo
imul
popa
je
outsl
outsb
and
and
jb
imul
xor
xor
xor
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
or
add
add
pusha
pusha
add
mov
add
add
add
lods
adc
add
and
add
sub
add
mov
add
add
cmpsl
add
push
and
add
push
add
sub
fs
add
add
cmp
add
push
in
add
and
add
mov
add
push
mov
add
test
add
xor
add
fdivr
add
hlt
or
add
jne
add
add
std
add
add
add
dec
push
add
add
js
add
rolb
add
and
add
das
pop
add
pop
add
popf
pop
add
or
cld
rorl
push
out
or
fs
or
adc
or
lock
add
add
sub
or
fsubrs
or
xchg
bound
add
or
les
or
pushf
or
call
jb
add
js
add
mov
or
add
or
add
or
add
es
add
push
add
add
add
and
add
pop
add
or
add
add
add
add
dec
adc
sbb
sub
adc
cmp
adc
add
add
pop
dec
adc
add
add
jl
adc
add
add
mov
add
add
dec
adc
add
add
loopne
adc
add
add
add
add
add
add
add
dec
dec
adc
add
add
jo
adc
add
add
rorb
add
add
clc
dec
adc
rorb
aam
adc
add
add
decl
add
dec
adc
fmull
add
add
add
ljmp
add
dec
adc
in
adc
add
add
call
dec
adc
in
dec
adc
add
add
pushl
adc
hlt
dec
adc
add
add
call
dec
adc
hlt
dec
adc
cld
dec
adc
add
add
push
dec
adc
cld
dec
adc
add
adc
add
add
call
adc
or
adc
add
add
incl
adc
or
adc
adc
adc
add
add
jmp
add
adc
imul
gs
xor
cs
insb
add
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
gs
xor
fs
insb
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
jbe
jo
xor
cs
insb
add
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
outsl
insb
gs
jne
xor
cs
insb
add
add
add
push
jns
inc
jb
gs
je
imul
add
jb
imul
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
imul
insb
add
add
add
jb
popa
insb
imul
arpl
add
xor
cs
insb
add
add
add
push
popa
jae
dec
gs
inc
jb
add
add
add
insl
arpl
xor
fs
insb
add
add
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
add
gs
insb
xor
cs
insb
add
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
add
outsb
insl
insl
cs
insb
add
add
add
fs
insb
popa
jns
outsl
jne
fs
add
mov
add
add
add
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
push
bound
add
pusha
adcb
inc
and
pop
dec
add
push
mov
jecxz
add
push
cmp
shl
mov
inc
add
mov
loopne
in
sub
or
add
sbb
insb
or
sbb
mov
adc
je
sbb
or
sti
adc
or
rep
jo
dec
movzbl
push
add
leave
mov
cmpl
add
dec
hlt
dec
std
push
shl
or
aaa
push
decl
cmp
mov
ja
add
pop
xor
pop
add
xor
sbb
jmp
lea
xchg
rcl
xor
and
adc
fwait
and
int
add
lret
push
cmp
adc
xchg
xor
dec
add
shl
int
mov
mov
fdivrs
jmp
imul
cmp
test
mov
stc
rcrl
sbb
inc
mov
and
cmp
shll
xor
sbb
jne
adc
imul
std
pop
add
mov
fcomps
adc
cmp
sub
push
mov
inc
lea
dec
sbb
sbb
push
fldt
mov
adc
mov
or
dec
sub
mov
jae
aad
mov
cmp
cli
add
lea
into
sbb
cmpsb
test
add
adc
or
push
mov
cmp
mov
cmpsb
jmp
cld
in
push
mov
in
mov
jle
push
adc
je
fs
mov
call
jmp
and
mov
and
and
movsb
orb
iret
push
mov
mov
adc
stc
add
nop
cmpsl
push
inc
jge
lcall
es
and
adc
cmp
push
jb
xor
rolb
ret
in
and
fxch
xor
or
xor
adc
repnz
rcl
ljmp
dec
loop
dec
adc
mov
cs
cmp
ja
test
and
push
imul
aad
pushf
ret
sub
sbb
adc
lea
ljmp
sbb
or
dec
sub
dec
repnz
jns
lret
jne
jae
nop
and
jo
ret
mov
push
mov
into
xor
nop
lret
arpl
mov
fcmovbe
jne
push
lea
add
add
pushf
xchg
sub
stos
loop
cmp
dec
rcr
lods
and
push
cmp
push
out
dec
xorb
enter
jmp
add
add
ret
fwait
mov
and
ret
or
nop
int3
xor
or
or
cmpsb
cmp
inc
stos
fistpll
in
jp
sub
jmp
cli
sar
dec
mov
add
call
sub
push
pusha
dec
xchg
adc
movsl
lods
inc
test
mov
xor
nop
mov
inc
sbb
mov
xor
je
or
stc
jbe
imul
cs
orl
xlat
iret
or
sub
cwtl
sbb
rclb
jmp
cmp
mov
pop
adc
cli
nop
cmpsl
fmuls
jmp
js
add
in
xchg
adc
dec
jmp
inc
cli
sub
sti
adc
pop
cld
push
push
add
enter
jns
movsb
xor
xchg
mov
jo
lods
sub
and
mov
enter
mov
loope
lds
mov
jecxz
adc
cltd
test
adc
jo
jmp
adc
pop
lea
add
dec
sub
jl
cmp
shl
sub
add
xorl
adc
aad
sbb
sbb
inc
std
shrl
pop
test
add
adc
and
pushf
or
push
mov
inc
sub
nop
mov
insb
repnz
into
xchg
shl
loope
and
loope
faddl
lret
in
add
xchg
add
pusha
push
mov
aas
in
dec
dec
leave
and
imul
cltd
sbb
add
xchg
push
xchg
xor
shr
add
sbb
lock
cmpsb
mov
aad
orb
in
and
xor
adc
dec
subb
pop
test
fs
sbbl
xor
mov
cmp
out
movsl
bound
dec
pusha
add
cmp
ja
inc
sbb
std
pop
add
adc
sub
mov
sub
xchg
test
sub
mov
cli
cs
mov
mov
and
addr16
jb
adc
pop
push
xchg
rolb
sbb
stc
cmp
sub
add
rcll
pop
add
rcrb
ljmp
nop
daa
and
daa
add
push
push
call
mov
mov
mov
push
pop
xchg
call
mov
adc
push
neg
dec
fs
sbbb
push
hlt
rcrl
mov
ret
in
and
inc
add
int3
jg
add
test
rorb
rorl
adc
mov
andb
mov
lss
and
dec
xor
jb
xchg
sbb
lds
mov
or
int
pop
jo
test
nop
xor
mov
or
dec
sbb
adc
cmp
pusha
cli
mov
test
add
sbb
mov
push
test
ret
mov
lods
push
mov
jmp
dec
sbb
call
adc
call
in
xor
lea
inc
cld
add
add
jbe
fdivp
push
jle
dec
jbe
add
lea
lods
stos
add
add
pop
jae
test
jno
mov
loop
inc
pusha
xchg
rep
out
iret
and
cmp
das
sbb
push
arpl
stc
lcall
xchg
call
add
mov
mov
inc
cltd
or
loop
popa
aaa
and
push
call
and
pand
or
and
xchg
lcall
push
mov
push
xor
jnp
adc
sbb
jne
inc
cmp
daa
sub
je
push
and
push
lea
push
aas
pop
mov
sbb
enter
iret
aas
shlb
bound
test
dec
xor
or
and
and
or
lcall
movb
adc
movsb
rorb
ret
adc
pop
mov
sbb
pushl
cmp
pop
pop
pop
pop
cmp
fsts
cld
dec
mov
sub
loopne
push
add
lret
push
call
nop
mov
jle
jb
pop
sti
scas
jbe
add
fnstsw
ret
mov
xor
stos
pop
loopne
add
jne
popa
lods
push
jne
lcall
cmc
call
shll
inc
enter
dec
mov
or
fs
movsl
xor
push
and
ds
cwtl
pop
push
cmp
or
or
inc
xor
dec
pop
rorb
inc
adc
fidivs
xchg
xchg
sub
insb
int3
dec
cld
inc
pop
jl
add
add
cmp
jge
repnz
pop
inc
repnz
add
sub
in
shll
push
enter
sbb
cmp
ret
shr
cwtl
rclb
dec
les
adc
add
mov
xor
enter
mov
xor
xor
int3
pop
jmp
mov
push
push
mov
clc
nop
xor
sub
data16
adc
call
pop
mov
dec
aas
es
out
mov
in
inc
pop
out
fists
jb
fiadds
and
jae
pop
jge
dec
pop
or
cmp
test
add
movsl
subl
push
cli
sahf
movsb
push
aam
sbb
stos
and
or
pusha
cmp
inc
cmp
ret
sub
mov
push
pushf
lcall
and
push
xchg
outsb
push
xor
mov
outsb
mov
movsl
mov
pop
lret
and
jl
add
push
mov
push
hlt
push
dec
dec
or
das
int
push
push
sti
and
enter
dec
mov
inc
push
adc
push
adc
mov
pop
lods
sbb
xor
stc
jmp
mov
or
add
adc
push
pushf
dec
jecxz
cmp
fimull
push
inc
scas
or
sub
lret
fidivl
inc
or
pop
rolb
mov
push
je
add
push
push
dec
or
into
cmpl
cmp
push
push
push
call
sbb
mov
and
add
jmp
out
pop
insl
jae
bound
mov
in
sbb
mov
rclb
scas
adc
inc
loop
and
pop
inc
or
rorb
cs
xor
dec
adc
and
mov
jge
push
push
adc
rcrb
testb
mov
in
mov
jg
test
and
jmp
mov
inc
mov
push
jno
xchg
dec
fs
dec
pop
push
dec
sbb
xchg
add
push
xchg
mov
push
xlat
sub
repz
sub
mov
shr
push
adc
sbb
dec
or
inc
jmp
pop
ss
imul
jmp
sbb
inc
add
inc
cmp
dec
adc
add
add
ror
shr
pusha
jae
xor
jbe
fisttpl
push
add
add
rorl
push
out
in
movsl
inc
gs
movsl
lcall
or
nop
xor
iret
imul
mov
js
push
adc
mov
inc
jo
insb
imul
outsb
and
push
fdivr
push
adc
ljmp
add
out
mov
in
fs
fistpl
adc
jae
lret
insb
out
outsb
addr16
bound
mov
imul
xor
popa
outsb
insb
and
xor
daa
popf
arpl
ss
fwait
cmp
xor
dec
js
popa
jnp
push
inc
outsl
js
emms
je
arpl
data16
adc
cmp
or
je
movsb
dec
dec
roll
push
fs
rorb
loop
sbb
je
cmc
inc
les
pop
jl
imul
jle
sub
fs
mov
int3
cmp
or
mov
cmp
dec
xor
jp
dec
pushf
lea
movsl
sbb
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
add
movsb
dec
adc
xor
add
cmp
add
xor
add
dec
adc
int3
dec
adc
add
inc
add
dec
adc
les
add
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
in
pop
push
add
pop
push
add
pop
push
add
pop
push
