incl
push
add
in
pop
lock
cmp
jns
sti
call
mov
xchg
lea
inc
cmp
jp
xchg
int
jge
mov
adc
dec
mov
mov
mov
mov
lea
mov
lea
inc
mov
dec
inc
cmp
mov
jnp
mov
data16
into
in
rcll
xor
idiv
jnp
in
mov
mov
int3
in
fcom
into
sbb
push
mov
dec
xchg
mov
cld
inc
mov
lea
inc
mov
out
mov
mov
mov
decb
pop
hlt
jne
mov
lea
inc
mov
jle
and
in
lcall
xchg
inc
sub
xchg
lock
cmp
jbe
dec
mov
out
out
mov
inc
inc
lea
dec
dec
cmp
push
inc
clc
jg
sti
mov
xchg
inc
dec
into
lock
mov
loopne
lock
push
pop
dec
mov
cmp
add
push
cmp
fdivrl
nop
jno
and
dec
dec
cmp
adc
daa
test
push
das
xor
pop
sbb
mov
mov
out
mov
aaa
mov
loop
clc
mov
mov
mov
mov
xchg
insl
call
test
mov
idivl
push
add
call
sub
pop
loopne
movb
xor
clc
dec
xchg
loop
fdivrl
jp
mov
or
lea
out
loop
inc
xchg
shrl
insb
nop
sbb
dec
loopne
xchg
jl
jg
clc
or
aaa
int
mov
cld
roll
push
pusha
cmp
push
or
cmpsl
mov
adc
mov
push
inc
mov
push
mov
add
adc
cmp
testb
push
sbb
xchg
cmp
mov
mov
dec
dec
mov
inc
psubq
cwtl
dec
jp
mov
cmp
push
pop
loop
ret
push
jl
fstps
hlt
mov
push
lock
pop
jecxz
cltd
mov
inc
inc
dec
cmp
sbb
pop
mov
mov
decl
std
mov
mov
inc
inc
inc
cmp
jbe
lock
in
std
add
pop
mov
sbb
ja
inc
pushl
jl
jb
cmp
sbb
push
sbb
mov
mov
jg
push
push
fstpt
sbb
dec
mov
and
mov
jmp
je
mov
cs
rorb
fcomip
pop
inc
pusha
dec
sbb
jmp
mov
push
call
pop
cmp
stc
int3
fmull
fcom
rcrb
xor
sub
pushf
pushf
pushf
sub
sbb
pushf
pushf
pushf
sbb
or
popf
pushf
pushf
or
cld
jb
jb
hlt
lock
leave
in
jbe
call
dec
leave
leave
leave
leave
push
movsb
mov
leave
cwtl
xchg
nop
mov
leave
leave
leave
mov
leave
js
jo
leave
leave
leave
leave
push
shl
int
push
mov
add
inc
in
push
lods
lds
cmp
sbb
clc
pop
pop
pop
ret
aas
int
shr
mov
mov
fdiv
jg
incb
test
add
sbb
test
jb
jg
inc
mov
xor
add
rorb
cmp
or
xchg
scas
sbb
je
repnz
mov
and
xor
mov
pop
sti
fbstp
and
xor
jle
pop
aas
lock
lock
add
dec
cwtl
add
js
mov
sub
add
pop
out
fbstp
repz
jne
mov
mov
xlat
fidivrs
fisttpll
stc
adc
cld
out
mov
mov
add
add
cld
add
push
lock
mov
add
push
lea
lea
lock
jge
negl
or
adc
loope
lcall
add
sub
cmp
loop
clc
imull
imul
push
mov
pop
pop
cmc
sub
pop
sub
pop
sub
sbb
mov
add
scas
pop
push
aad
xchg
bound
adc
add
mov
std
addr16
in
push
sub
jae
in
mov
push
mov
xchg
and
fisttpll
scas
es
fcmovu
outsl
mov
shll
and
adc
adc
loop
and
jg
stos
jno
and
jle
in
mov
mov
enter
aas
jae
xchg
aad
push
jge
cs
and
scas
pop
je
fs
mov
mov
pop
outsb
pop
in
jle
addr16
in
shl
pop
ss
mov
xor
sub
sub
std
xlat
cmpsb
or
in
cmpsb
jg
lahf
std
cmpsl
and
pop
mov
lea
loop
mov
and
test
out
jle
loop
jecxz
orb
test
jl
fisttps
sub
dec
mov
pusha
lahf
and
aam
shll
stos
sbb
lcall
lret
mov
push
push
pop
sti
mov
add
int3
pop
and
sub
stc
xor
loop
cli
into
bound
pusha
loopne
sub
dec
mul
xor
push
xor
loop
aaa
imul
addb
sbb
add
dec
mov
fists
ss
jne
xor
aad
push
dec
imul
pop
es
lcall
mov
repnz
cmp
in
sbb
lods
movsb
iret
faddl
mov
dec
sub
sub
mov
bound
loope
shl
jl
and
popf
push
movsl
mov
adc
outsb
and
cmpsb
shrb
mov
out
push
mov
pop
push
scas
mov
sub
cs
sbb
xor
neg
outsb
jo
imul
lret
mov
jle
loop
in
mov
adc
lcall
cmp
push
jp
xor
cmp
data16
inc
and
dec
cmpsb
push
adc
or
mov
ret
jg
cmpsb
pushf
scas
and
sub
test
nop
jp
push
jne
hlt
loop
pop
mov
xchg
je
pushf
sub
sub
out
xchg
fsubrs
in
bound
stos
pop
pop
jns
jecxz
out
sub
in
pop
aad
or
mov
cmc
sbb
mov
adc
addb
mov
mov
jecxz
int3
mov
and
jecxz
xor
ds
imul
out
stos
and
dec
scas
sub
pop
inc
dec
cmpsb
inc
mov
cmpb
add
ret
lea
jg
xor
ret
sbb
divl
test
jne
push
daa
inc
iret
adcb
insl
clc
jmp
call
sahf
add
push
call
sar
rolb
or
push
clc
movzwl
dec
test
jecxz
in
jp
add
in
movl
or
mov
inc
ret
sbb
mov
fistpl
sti
add
cmp
jbe
inc
jmp
imul
pop
cmpl
je
pop
or
xchg
add
and
push
nop
and
cmp
jle
adc
nop
add
iret
insb
shll
inc
dec
rcll
add
and
sbb
or
sub
dec
jg
sti
in
jne
ret
dec
outsl
popa
fs
imul
stc
decl
outsb
push
push
outsb
insl
popa
jo
imul
ja
inc
imul
popa
insb
inc
insb
insb
outsl
arpl
push
icebp
out
push
pop
bound
mov
mov
ja
mov
or
notb
push
mov
pushf
mov
call
hlt
lods
add
lcall
xor
cmp
jp
inc
lea
lea
icebp
mov
andl
sbb
add
gs
ja
xchg
data16
xchg
lock
xor
jnp
xor
adc
xor
mov
dec
or
mov
lea
mov
sbb
lea
mov
jge
jg
pop
cmc
inc
mov
fdivp
dec
mov
mov
inc
cld
fistpll
bound
out
add
mov
inc
inc
inc
or
test
cld
sbb
sbb
push
inc
das
sbb
push
in
lea
push
dec
xchg
sbb
push
dec
mov
pop
push
in
inc
cli
mov
das
shlb
les
jbe
sbb
xor
xchg
mov
sar
or
insl
in
adc
jnp
lods
xor
fmulp
aaa
jl
inc
inc
xchg
ret
pop
jmp
or
xor
stos
shll
jo
mov
je
sbb
dec
dec
lea
mov
dec
pushw
push
loope
ret
incl
xor
mov
mov
jbe
cmpb
mov
mov
adc
rorb
adc
pop
or
cmp
push
hlt
push
cmc
inc
add
rolb
fs
xchg
shl
mov
in
call
sub
mov
and
subl
or
add
aam
rcl
aam
push
fadds
hlt
cmp
loopne
xor
shlb
add
shlb
cs
mov
xchg
add
mov
les
sbb
add
enter
sbb
adc
push
test
scas
rcrb
je
mov
mov
imulb
ja
lea
pop
fistps
pop
jae
out
or
stos
sbb
and
xchg
inc
dec
in
pop
cmc
sub
jp
cmp
dec
dec
cmp
fcoms
jl
js
dec
inc
mov
xchg
jae
cmpsb
push
scas
aad
outsb
js
cmpb
pop
ljmp
add
jecxz
outsb
aad
adc
insb
mov
mov
xor
push
push
daa
lock
jge
lock
std
push
mov
arpl
xor
mov
jo
inc
cmpsb
test
repnz
sbb
inc
in
mov
mov
sar
les
dec
mov
popf
inc
pop
js
rcl
mov
xchg
adc
sbb
fadds
pop
push
cld
cmp
jns
cld
mov
clc
mov
pop
shrl
cld
out
or
inc
lea
in
mov
cld
cmp
jbe
inc
lock
pop
mov
mov
dec
testl
sbb
bound
sbb
inc
adc
repnz
jb
mov
adc
push
jno
or
js
cmp
cmp
xor
sahf
ret
push
mov
push
inc
daa
dec
dec
inc
dec
and
add
or
xor
cmp
xor
iret
fnstenv
xor
push
xor
xor
aaa
xor
xor
cmp
aaa
add
lcall
push
into
gs
jb
arpl
fs
sub
icebp
gs
add
and
cmp
les
insb
pushl
dec
movaps
cld
sub
fsubrs
sub
push
add
add
int3
lahf
push
or
cmpl
mov
push
mov
inc
and
add
dec
jne
loop
pop
popa
clc
and
stos
dec
ja
mov
add
or
popf
mov
stos
adc
add
add
and
push
mov
mov
cmpsl
cld
les
sahf
or
dec
xor
sub
incl
jg
mov
mov
adc
testl
or
or
mov
iret
lods
add
and
enter
test
sub
lcall
xchg
out
rcll
inc
sub
sub
rclb
cmp
add
cmp
sub
pop
or
inc
xor
mov
daa
inc
mov
dec
movsb
cmp
and
or
daa
xchg
les
push
dec
and
daa
cld
inc
cld
push
or
hlt
add
mov
rorb
mov
cmp
and
pop
mov
adc
ret
ret
xchg
lock
aam
lock
inc
cld
inc
xor
adc
and
lock
jl
mov
test
inc
and
pop
and
and
and
and
sub
shrl
lock
lret
push
loopne
adc
inc
mov
dec
xor
lods
pop
add
fidivs
je
pop
fisubs
mov
cmp
and
fistps
decl
jne
add
push
cld
mov
popf
or
push
imul
add
adc
outsl
pop
call
shll
adc
rorl
xorl
addb
cmp
sbb
movsl
repnz
lods
in
and
orb
push
lock
fisubl
shr
ja,pt
push
and
test
mov
icebp
mov
and
xchg
lret
test
add
hlt
or
fadds
mov
cs
pushf
cwtl
hlt
add
mov
out
jge
leave
push
popf
aad
or
add
pop
add
enter
mov
add
add
cs
lahf
out
fs
insb
pop
add
gs
and
ss
stc
outsb
sbb
fs
add
jg
js
push
pop
popa
jb
jge
fs
jb
jl
imul
mov
ljmp
add
dec
popa
outsb
insb
dec
outsb
jl
jns
addr16
insb
fs
jae
jo
imul
dec
outsl
jp
imul
bound
dec
outsl
jnp
dec
and
scas
std
outsl
outsb
pop
jl
inc
addr16
inc
gs
outsb
add
rcl
push
pop
aas
mov
cmpsb
add
lds
mov
pop
ret
aaa
or
loopne
pop
lods
sub
xchg
inc
mov
xorb
add
push
lods
lock
dec
loopne
jno
push
adc
fnstsw
push
fdivl
push
add
pop
add
inc
mov
ret
push
ret
insb
or
push
movsl
and
mov
pop
sub
sbb
int3
mov
adc
pop
dec
testl
mov
hlt
add
call
pop
jno
jl
ds
sbb
or
add
or
pop
cmpl
jle
jne
mov
mov
jns
call
lods
jmp
je
cmp
shrl
pop
sbb
out
lods
push
sub
add
inc
imul
mov
paddw
aaa
js
dec
call
inc
roll
push
push
lods
or
or
jmp
ret
addr16
mov
outsb
icebp
adc
fdivrs
inc
adc
xor
jnp
pop
and
jmp
test
or
int3
mov
mov
push
mov
or
mov
and
loope
or
cmp
xor
cmp
addb
cmp
xor
cmp
xor
popa
jl
shrb
andb
into
inc
adc
incl
dec
addb
adc
add
test
in
sbbl
popa
and
add
aaa
inc
xchg
add
movb
cmp
roll
shll
jne
jbe
cmp
push
je
xor
rcrb
mov
dec
or
clc
out
sub
ds
lods
hlt
xor
adc
add
mov
subl
adc
add
sbbb
mov
test
popa
xchg
xor
subb
jbe
jle
or
cld
add
add
mov
stos
ret
dec
mov
fs
add
cmp
iret
and
and
cmp
sub
hlt
dec
fisubs
push
ljmp
inc
and
adc
adc
sub
fdivrs
out
and
cs
push
decb
or
inc
add
shlb
cli
in
test
mov
call
nop
add
xchg
imul
adc
cmpw
ja
mov
jnp
test
jne
mov
cmp
repz
fmull
mov
add
or
jl
push
aaa
adc
popl
insb
cmp
mov
or
add
mov
bound
jo
in
sahf
in
inc
add
ret
and
nop
sbb
stc
push
sahf
xchg
je
loope
nop
fsubs
and
mov
mov
push
pop
pushf
or
mov
les
mov
add
cmp
cmp
xor
repnz
imul
inc
es
xor
xor
xor
lods
mov
data16
cmp
push
cmp
xor
xor
inc
pop
out
aas
clc
xchg
adc
xor
adc
fs
adc
sub
lds
outsl
inc
pop
add
mov
mov
inc
test
sbb
mov
icebp
orb
mov
push
ret
pop
loope
call
lds
pop
pusha
xchg
lcall
cld
pop
jns
pop
adc
sub
mov
push
icebp
push
sbb
inc
sub
adc
fildll
dec
dec
inc
mov
dec
mov
cmp
add
xchg
mov
push
ret
shlb
mov
dec
dec
into
jg
dec
inc
mov
in
daa
mov
mov
in
add
add
add
inc
dec
push
mov
ja
lds
pop
mov
ja
inc
fdiv
andl
out
cmp
sbb
mov
inc
out
dec
addb
push
inc
xchg
sub
lds
rorb
dec
xchg
repnz
sbb
sbb
into
in
dec
add
aam
mov
adc
orl
jp
xchg
xchg
in
mov
jmp
data16
dec
mov
out
js
jo
std
cmpsl
inc
dec
dec
mov
xor
mov
iret
clc
push
mov
mov
inc
inc
clc
mov
stos
cs
fdivrl
xor
je
sbb
lock
jge
pop
in
adc
ret
mov
lea
adc
pop
in
push
jae
dec
or
dec
cmp
jns
dec
or
xchg
cmp
pop
pushf
fdivr
jne
popa
inc
adc
ss
adc
adc
mov
push
aas
das
push
leave
shll
cmp
mov
dec
inc
inc
mov
in
jnp
mov
dec
push
cmp
jle
test
mov
les
ljmp
notl
xchg
push
dec
push
dec
dec
lea
and
cmp
je
push
mov
mov
add
push
std
call
pusha
clc
inc
cmp
push
subb
jae
mov
inc
adc
jge
and
mov
popl
cmp
xchg
hlt
adc
test
jge
mov
mov
mov
dec
mov
rorl
and
xchg
inc
mov
out
cmp
bound
push
jge
ja
nop
call
cmp
clc
in
cmp
inc
mov
mov
inc
mov
es
mov
popa
or
dec
fmuls
ret
push
mov
jmp
daa
or
js
or
and
dec
popa
xor
jne
adc
sbb
std
and
adc
dec
test
add
icebp
xchg
and
add
sub
dec
cld
mov
push
inc
push
dec
or
int3
call
or
sub
add
cmpsb
add
testl
push
push
or
mov
push
cmp
lcall
div
adc
dec
jmp
or
in
mov
hlt
test
add
add
in
js
xor
pop
lock
pop
add
push
mov
rcrb
pop
insl
xchg
in
inc
inc
mov
inc
popa
mov
add
mov
rolb
enter
push
je
and
movsb
call
ljmp
add
mov
xchg
mov
mov
lea
cmp
pop
pop
outsl
adc
dec
pop
in
sbb
mov
aam
jl
insb
mov
dec
mov
icebp
aas
jb
lods
lock
sbb
mov
in
jle
mov
lahf
cmc
aas
in
stos
inc
cmp
or
ds
inc
mov
jge
call
lea
mov
push
mov
cmp
jnp
mov
xchg
sbb
mov
mov
xchg
cld
dec
int
stos
or
mov
mov
mov
lock
push
xor
addr16
inc
xchg
ja
pushl
xor
cmp
xor
cmp
xor
add
add
ljmp
xor
xor
xor
xor
aas
in
add
and
adc
pusha
out
push
lret
dec
dec
add
hlt
jg
cmp
popa
fdivrl
pop
add
add
inc
inc
cmp
inc
mov
add
arpl
stos
sbb
cmpsl
add
mov
jge
add
and
add
mov
add
add
add
lahf
sbb
fwait
mov
xlat
or
add
add
pop
sub
mov
xchg
cs
ljmp
pop
add
push
dec
add
ja
stos
inc
add
inc
inc
dec
dec
sbb
inc
inc
add
mov
xor
push
dec
or
or
push
testb
dec
inc
or
add
sub
lods
add
add
int3
test
or
int3
or
inc
out
add
imul
fwait
pop
sbb
push
jle
add
inc
fwait
rorb
fsubl
push
dec
ja
out
adc
dec
push
dec
fistpl
mov
inc
push
add
add
pop
adc
neg
add
inc
fldt
or
int
hlt
cmp
jne
inc
dec
cmp
sbb
add
pop
sbb
ja
daa
adc
in
cld
add
aam
arpl
jge
mov
es
and
and
cmpsl
popf
push
outsb
idivb
lret
add
cmp
and
push
aaa
lret
and
es
or
and
fwait
mov
sub
jnp
adc
out
mov
mov
insl
pop
fimull
or
sbb
shld
sub
call
and
mov
push
add
push
jns
fadds
and
lea
ret
insl
or
sbb
pop
mov
rolb
inc
add
leave
jno
addr16
ja
daa
mov
pusha
add
push
mov
sub
or
mov
add
mov
dec
icebp
pop
add
ss
pop
jge
fisttpl
add
insl
adc
adc
imul
xor
mov
mov
cmc
movsl
imul
and
lods
insl
add
insl
and
push
inc
dec
adc
inc
fildl
add
arpl
fsincos
insl
sub
fwait
rol
push
dec
or
xor
mov
jne
repnz
mov
and
std
mov
add
fs
out
add
adc
in
sbb
roll
push
push
jle
add
aaa
inc
iret
out
imulb
and
add
es
iret
jg
sti
ja
fists
leave
adc
or
xchg
add
cmp
sub
sub
push
adc
in
mov
scas
popl
and
sti
inc
inc
xchg
sbb
fsub
mov
sbb
lahf
arpl
ret
pusha
adc
pusha
adc
stos
fincstp
in
mov
sub
or
dec
das
jnp
fsubrs
ror
jmp
inc
fildll
push
ja
add
pop
fstl
fs
stos
das
or
scas
or
das
mov
xlat
mov
pop
inc
aas
inc
and
test
cmp
movaps
adc
insl
and
jne
and
and
inc
insb
inc
ja
loopne
shl
loopne
jg
out
mov
jg
inc
inc
test
push
mov
ja
xchg
test
rorl
dec
test
mov
cmp
jecxz
add
or
add
bswap
cmp
cmp
test
sbb
mov
sub
sarl
inc
xor
test
aas
add
adc
mov
sub
add
sbb
mov
xchg
jnp
fsubr
in
test
inc
add
xchg
dec
push
push
ss
mov
sarl
scas
sub
sub
ja
ss
and
inc
scas
mov
out
push
or
and
cli
mov
mov
call
mov
mov
iret
stos
in
ss
jno
in
ss
out
and
inc
int
xchg
lret
xlat
mov
out
cmp
std
ret
inc
push
into
iret
test
fnstsw
insl
cmc
ds
shrb
xchg
cmpsl
fbld
das
test
or
pushf
mov
jns
addr16
aas
imul
mov
sub
sub
push
dec
mov
or
pop
and
inc
inc
lds
push
addr16
mov
jno
jmp
mov
adc
and
xchg
add
repz
inc
out
jmp
sahf
sti
icebp
outsl
fld
xchg
lret
add
and
sub
or
cmp
add
adc
loopne
stc
pop
test
sbb
mov
xor
mov
cmp
inc
jg
adc
add
mov
out
invd
sbb
cmp
icebp
or
jp
push
dec
adc
jae
or
popa
mov
push
scas
or
jmp
fidivs
pop
arpl
xchg
mov
imul
jp
sbb
repnz
pop
xor
adc
fucomp
enter
in
mov
dec
nop
add
mov
and
mov
pop
lock
stos
iret
cltd
dec
ret
jbe
sbb
xlat
int
push
daa
fildll
cmp
mov
das
and
imul
dec
popf
sub
mov
scas
jecxz
mov
or
push
mov
lcall
push
add
mov
mov
or
mov
add
mov
push
adc
stc
es
fsubr
mov
jmp
sbb
mov
sarl
loope
lret
cmp
xor
inc
fstpt
jne
mov
jge
adc
cmp
stos
in
add
int
xlat
aaa
xor
xor
pop
idivl
mov
mov
pop
out
jbe
jge
addr16
repnz
outsl
gs
ja
push
mov
or
repz
mov
out
movsl
int
or
fsts
push
fcompl
adc
jno
scas
xchg
xchg
jmp
jae
lahf
dec
scas
int
mov
push
mov
out
pop
mov
icebp
mov
mov
xchg
in
out
xchg
popl
fmull
xchg
imull
lahf
xor
pop
fldl
sub
mov
mov
and
adc
in
incl
ret
or
mov
xlat
xor
fistl
fsubl
add
fcmovnu
fucomip
into
mov
or
sbb
arpl
pop
scas
repz
jae
rol
jo
out
arpl
mov
pop
push
sbb
cmc
movsl
mov
push
stos
jae
mov
icebp
fdivrl
jmp
cmp
scas
add
or
push
pop
ret
pop
data16
add
test
dec
jbe
shll
fisttpl
inc
mov
in
sqrtps
jb
test
es
loopne
in
arpl
mov
xchg
or
jle
testl
test
dec
cmp
sub
daa
pop
fs
push
and
pop
cmp
into
addr16
jb
add
cmp
insl
mov
test
nopl
ja
cmp
aas
test
je
popa
and
in
add
fdivs
inc
aaa
pop
ret
jbe
addr16
xchg
adc
xlat
pusha
and
scas
or
inc
and
cmp
inc
out
mov
push
dec
sub
inc
or
pop
stos
pop
mov
sbb
pop
movsb
xchg
sub
mov
pop
push
xchg
cmpsl
sbb
in
mov
ljmp
xchg
div
int3
jmp
inc
xchg
xchg
mov
add
xor
xchg
stos
lret
iret
sbb
fsubrs
push
add
xlat
add
cmp
add
xorl
stos
mov
mov
pushf
inc
add
cli
mov
add
cmp
push
outsl
jo
pusha
into
lods
and
lcall
lret
add
divb
and
push
dec
cltd
filds
dec
jae
jo
imul
push
verr
add
loopne
mov
add
shlb
cvtps2pi
lock
sbb
mov
rolb
mov
mov
lods
xor
or
jo
jns
jl
iret
xor
fnstsw
adc
add
sub
sahf
pop
out
repz
sbb
or
ds
test
mov
and
push
mov
pop
es
add
push
push
call
jb
lret
fmuls
adc
mov
push
inc
lcall
inc
push
fcmovnbe
clc
ds
jo
inc
iret
scas
push
insb
sbb
fisttpl
push
shl
negl
and
popa
fstps
in
jle
jecxz
push
outsb
iret
add
mov
jecxz
fcomps
dec
pop
rorb
adc
imul
jp
js
add
jne
je
mov
mov
rcr
pusha
push
lods
je
ds
out
push
call
mov
add
adc
fucomip
inc
sbbl
pop
in
add
push
loopne
cmpl
push
mov
dec
push
mov
cmp
push
std
cmpsb
out
cs
sub
mov
push
mov
pop
xchg
or
sbb
push
and
push
sub
push
add
movsl
push
and
push
push
outsl
mov
push
sbb
lret
int3
test
push
or
cltd
sbb
cwtl
es
fisttpl
sub
es
cltd
xor
cpuid
add
out
int3
jl
xor
pop
popf
cmp
and
sbb
fimull
sub
cmpsb
out
mov
xor
das
mov
mov
mov
add
cmp
inc
lods
cmp
push
jne
mov
je
sub
in
enter
add
mov
pop
jmp
mov
in
lods
neg
fnsave
add
mov
pop
fbld
iret
mov
scas
and
int
aad
bound
int3
loope
ds
push
fsubrs
xchg
add
out
push
pop
sbb
sbb
pop
adc
frstor
fs
add
shrl
test
add
mov
fisubrl
mov
pop
popa
push
and
add
add
and
xor
and
ds
cltd
test
add
aaa
ja
out
add
add
jne
jae
imull
push
ja
es
cmc
adc
repz
push
dec
xchg
push
mov
and
dec
mov
mov
stos
adc
jo
icebp
int
ljmp
add
mov
jbe
xchg
jnp
cltd
nop
push
repnz
ljmp
pop
inc
or
fcoms
ret
fisttpl
repnz
ret
inc
addr16
ja
pop
ret
inc
adc
push
xor
ret
and
lods
ljmp
pop
stos
mov
ror
leave
add
jae
loopne
adc
cmpsb
lret
out
push
sub
mov
js
xor
cmpsl
mov
fsubs
and
pop
adc
jb
iret
fwait
add
pop
jl
cmp
ljmp
mov
fldcw
dec
cmpsl
xorb
fnop
ja
xor
out
ja
xor
ret
add
jge
dec
sbb
cmpsb
cltd
pop
xlat
xor
jle
es
jbe
loopne
leave
popa
xor
pushf
add
xchg
adc
sbb
mov
insl
jp
mov
pusha
out
xchg
mov
inc
push
call
popf
ljmp
sbb
fucomi
mov
cld
subb
cmp
or
mov
sub
push
adc
int3
and
sub
and
imul
xchg
inc
mov
mov
jno
lock
pushf
or
xchg
push
cmp
iret
pop
popa
mov
orb
dec
in
push
shr
add
enter
inc
dec
lock
xor
movsb
add
loope
out
sti
jnp,pt
cltd
add
xchg
loope
in
adc
loopne
popf
adc
in
aas
shrb
jnp
movsl
sbb
jmp
jmp
mov
pop
mov
pop
into
adc
jl
imul
mov
es
fs
pop
shll
stos
je
lcall
lea
fsubrp
cmpsl
orl
rclb
fwait
jne
sahf
add
xchg
push
adc
cmp
adc
nop
add
int
xchg
adc
adc
adc
fldcw
lret
mov
inc
sbb
pop
in
sbb
sub
jnp
pushf
sbb
repz
dec
pop
fiadds
rorb
test
imulb
xchg
xor
je
jno
push
insb
and
jo
cltd
inc
into
jno
dec
out
loope
jbe
sub
mov
shl
xor
call
add
dec
enter
mov
or
mov
add
mov
cmp
scas
pop
lods
add
and
push
push
iret
and
push
cmp
shrl
mov
jo
or
or
add
stos
adc
ljmp
xorb
mov
adc
lock
dec
pop
cli
iret
mov
andl
stos
add
jecxz
sub
iret
lock
pop
dec
out
pop
or
push
cmp
sbb
lret
dec
push
jle
push
repnz
icebp
inc
add
push
mov
mov
gs
jnp
int
adc
sub
cmp
ds
mov
pusha
push
cld
out
mov
test
repz
push
fwait
stc
pop
iret
push
push
xchg
mov
mov
aas
ja
ds
out
mov
jne
es
in
out
xor
jb
mov
shll
jg
stos
push
jmp
mov
jl
pop
in
pusha
cmpsl
pop
jnp
jp
mov
jns
mov
js
push
mull
jge
fisubl
inc
adc
out
adc
lea
into
adc
out
inc
push
fs
lds
ss
adc
add
fdiv
rcrl
dec
ds
mov
xor
mov
enter
pop
cmp
xor
daa
outsb
dec
fwait
or
and
add
aam
lods
sahf
lea
ret
cmp
cmp
or
cld
or
mov
fcoml
or
add
push
rorb
aas
sub
add
cmpsl
sbb
push
inc
mov
xor
adc
pusha
shld
pop
xor
or
mov
arpl
repz
mov
mov
cmp
push
clc
es
scas
cmp
inc
inc
sbb
jg
decl
xchg
lods
out
in
das
iret
ljmp
xor
add
add
aam
xor
and
dec
add
and
mov
cli
sahf
add
lods
cli
pop
in
xchg
test
mov
adc
jno
pop
xchg
add
inc
cmp
frstor
dec
jno
repnz
or
pop
les
into
adc
add
out
adc
clc
sbb
ret
adc
inc
popf
mov
xor
gs
inc
jl
pop
jecxz
jmp
push
insl
add
jg
lret
dec
push
push
loop
xchg
cmp
nop
pop
jb
push
inc
and
adc
les
add
mov
mov
xor
clc
movl
test
adc
dec
ss
ficoml
insb
mov
xchg
pop
stos
or
sub
jecxz
adc
in
loop
fmuls
rcrb
xor
add
fsubrl
test
inc
movsb
pop
int3
jo
arpl
xor
in
inc
iret
shll
xchg
fwait
ret
pop
xchg
mov
shl
sbb
popl
xchg
pop
and
clc
or
scas
dec
ret
push
adc
xlat
dec
and
dec
adc
cmp
ja
sub
jl
add
sub
xchg
sub
das
and
mov
gs
ljmp
inc
or
pop
inc
dec
clc
push
or
jecxz
test
fdivrl
aaa
mov
add
idivb
ja
dec
cmp
lret
sbb
ds
cmp
jecxz
xchg
jnp
jecxz
cld
jnp
cmp
cld
sub
or
xchg
je
push
pop
push
jge
adc
or
pushl
and
xor
dec
xchg
and
add
fldt
sub
loopne
inc
hlt
pop
in
dec
and
int3
test
outsb
sub
add
push
sub
inc
add
lea
add
xchg
sbb
js
scas
aam
jae
and
loop
push
out
xchg
xchg
cwtl
ret
add
negb
les
xchg
aaa
cmc
int3
add
pop
pop
mov
std
cmpsb
int
fsubl
in
dec
lock
push
insb
pop
mov
inc
mov
aad
outsb
lock
mov
shlb
lods
in
pop
xchg
stos
cmp
loop
add
mov
out
inc
jne
out
imul
pop
push
push
mov
orl
mov
or
lahf
rcrl
fsubl
dec
sbb
push
jbe
iret
fidivrs
cmc
sbb
enter
jb
shrb
js
dec
js
scas
shr
jge
add
jecxz
dec
add
adc
mov
sub
jg
push
jmp
cmp
or
in
outsl
arpl
cmp
cmp
xchg
adc
pop
xor
sbb
xchg
out
mov
push
or
mov
popa
mov
add
push
jbe
pop
xlat
fmuls
mov
out
sub
loopne
sbb
sub
js
movd
add
push
call
popa
xor
or
insb
or
add
or
mov
cmp
sub
jnp
rcrb
aas
jge
popa
and
lret
push
fnsave
sahf
or
adc
icebp
sbb
cmp
sbb
fistpl
rolb
mov
out
pushf
andl
pop
push
cmp
pusha
rorl
dec
push
bound
xchg
cmp
jae
adc
dec
push
jle
add
stos
push
ja
mov
or
je
pop
or
gs
scas
push
xor
mov
iret
jno
sbb
push
mov
sbbl
shll
test
xchg
mov
add
push
lods
and
dec
mov
iret
mov
int3
mov
fnstsw
test
dec
adc
jl
loope
hlt
adcb
xchg
lods
pop
push
sbb
add
sbb
in
and
gs
add
and
jns
rclb
dec
int
mov
jae
xor
or
mov
aaa
inc
pop
rsqrtps
icebp
test
out
push
fcoms
rcrb
pop
dec
xchg
dec
rcrb
jns
imul
mov
sbb
add
test
xor
icebp
and
or
shld
push
lods
mov
in
sbb
mov
mov
daa
mov
scas
and
scas
adc
dec
or
jle
popa
shll
ret
adc
mov
xchg
mov
lock
sub
in
mov
clc
aam
jo
adc
ret
sbb
in
and
das
mov
jl
jno
push
mov
mov
mov
scas
lret
adc
cwtl
jno
aam
addb
or
adc
sahf
loopne
ja
mov
iret
push
movsb
in
addr16
add
adc
xor
out
out
in
push
cmp
iret
shrl
and
inc
jb
jb
and
test
push
scas
xorl
lea
mov
cmp
push
lock
ds
xchg
cmp
fstpt
pushf
fiaddl
push
mov
pop
faddl
mov
xlat
loope
pushf
rorb
sub
xor
iret
mov
or
jo
add
mov
rorl
cs
es
ret
ja
loopne
adc
add
add
vmovhpd
pop
stos
in
je
mov
cs
add
cmp
cwtl
add
add
jo
orb
jg
fcomip
idivl
pusha
push
out
negl
iret
cmp
stos
out
dec
ja
lock
xor
jp
rolb
jmp
xchg
push
mov
push
cmp
dec
jge
sub
pop
ljmp
aas
rcll
movsl
daa
pop
das
loopne
fmull
and
mov
mov
sub
mov
stos
mov
mov
dec
sti
sbb
cmc
fsub
mov
aam
insl
andb
sub
pop
jecxz
inc
fdiv
mov
fdivs
pop
das
cs
out
movsl
pop
aaa
inc
sub
and
lahf
testb
pop
es
adc
sbb
push
insl
aam
and
dec
incl
int3
loopne
lcall
inc
adc
and
lret
mov
lock
cmpsl
jp
and
movd
aad
ljmp
sbb
mov
faddl
in
lret
sbb
pop
shl
lcall
push
les
hlt
push
nop
or
ljmp
jb
jnp
mov
ret
lcall
jbe
or
outsl
push
pop
cmp
enter
outsb
mov
sbb
ficomps
hlt
and
push
dec
lea
inc
push
xor
mov
add
sbb
adc
xor
add
test
ret
imul
xor
fnop
adc
or
inc
out
iret
into
jecxz
sbb
jecxz
add
mov
ret
xor
add
jb
cmpsl
push
jl
jno
xchg
mov
jo
hlt
mov
stos
iret
in
cwtl
xor
shll
das
mov
mov
jae
js
sbb
or
f2xm1
movsb
and
fldcw
and
push
cmp
in
mov
pop
adc
repz
jle
fildl
jge
add
add
push
cmp
out
ljmp
jne
or
fadds
push
cmp
push
imul
xor
mov
push
or
out
aad
mov
das
or
or
stos
sbb
inc
inc
pop
sbb
add
loope
mov
add
inc
and
push
push
adc
loopne
cmpsl
inc
fdiv
adc
mov
outsl
mov
and
out
inc
cltd
or
or
jp
or
lds
xlat
push
je
js
scas
pop
ja
pop
ret
shrl
dec
bsf
lds
xchg
movsb
add
mov
loope
mov
or
dec
cmp
and
fistps
idivb
ret
pop
jg
daa
add
fsub
fldcw
cmp
ss
aaa
lret
addr16
xor
and
rcrb
mov
adc
sbb
mov
out
xchg
out
punpckhbw
xchg
mov
jne
add
push
push
adc
add
inc
cmp
adc
adc
push
fisubrs
mov
fdivs
push
sbb
mov
roll
and
push
das
and
mov
pop
xor
adc
dec
aad
loopne
mov
jns
mov
pop
ret
lods
fstpl
call
jecxz
pop
movsl
test
int
rcrb
mov
mov
cmp
xor
xchg
jno
outsl
mov
sbb
rcrb
aam
dec
pop
outsb
mov
shll
cli
cmp
xor
add
cmpsl
bound
mov
sub
rorl
dec
push
add
pop
sbbb
daa
imul
jl
sar
out
pop
mov
adc
cmp
adc
and
incl
ds
cmp
xchg
lods
ret
mov
jae
xchg
fists
out
mov
mov
push
in
nop
xchg
fistpll
jo
test
iret
subb
repz
loope
es
xchg
icebp
pusha
xor
add
pop
sbb
loopne
cmpsb
cltd
adc
dec
pop
pusha
dec
jo
pushf
int
es
adc
lods
and
add
push
adc
or
stos
dec
pushf
and
iret
addb
and
mov
fisubl
nop
clc
flds
test
fdivrs
inc
lcall
movsb
cmpsb
or
xor
add
flds
ss
push
in
xor
adc
push
sub
or
sub
mov
mov
sub
mov
pop
aam
sub
and
sub
iret
outsb
pop
and
lock
xor
jle
pop
push
adc
or
js
enter
sbb
nop
iret
mov
lods
mov
or
test
sbb
out
push
push
mov
sbb
cmc
and
xor
pop
sbb
andb
and
mov
pusha
clc
cmp
aas
je
shrl
mov
rcl
roll
je
cmp
inc
mull
sub
adc
or
pop
xchg
ficompl
sbb
outsl
xor
adc
add
add
mov
mov
jo
or
inc
rclb
xor
dec
lds
daa
int3
ljmp
call
mov
jmp
cmp
popf
or
mov
fisttpll
sub
popa
and
rorb
test
jns
loop
call
lret
xchg
sub
lock
push
adcb
pop
mov
lock
push
pop
fidivl
sub
addr16
mov
sbb
dec
lret
xor
mov
cmp
sti
mov
pop
jl
lds
cmp
pushf
cmpsl
fisubs
sub
fucomi
push
sub
ret
rcrl
pop
lea
pusha
mov
adc
inc
out
push
inc
adc
and
mov
dec
inc
ret
mov
lahf
mov
ret
push
inc
push
jecxz
xor
add
sub
inc
jmp
rorb
iret
mov
or
dec
dec
sarl
aaa
shl
cmp
ret
and
call
pop
scas
push
and
and
into
push
pop
nop
mov
and
xchg
addl
lret
dec
jns
xchg
test
pop
std
outsl
adc
cmp
out
dec
rcrb
dec
mov
lock
and
mov
mov
out
cmp
pop
in
pusha
cmp
pop
les
std
rcll
mov
insl
add
mov
xor
mov
imul
add
xchg
add
test
and
movsl
cmp
or
aas
pop
mov
fildll
in
pop
or
mov
jp
push
bnd
push
loopne
std
mov
push
pop
mov
test
pop
daa
cmp
dec
adc
repz
cmp
jno
push
add
out
add
sub
or
sub
lds
xor
add
addr16
loopne
loopne
scas
push
pop
jl
sub
jmp
movsb
js
jle
and
fldcw
ret
adc
js
mov
mov
dec
dec
or
out
lds
lds
xor
cmp
jo
movsb
data16
mov
and
scas
int3
push
ja
dec
dec
inc
sar
iret
mov
pop
fs
rorl
out
jmp
push
ljmp
insl
xchg
xchg
or
scas
int3
lock
ss
cmp
in
pop
mov
dec
fnstenv
in
test
stc
sbb
cld
enter
sbb
popa
adc
sbb
sbb
mov
pop
das
mov
mov
loopne
or
sahf
or
lock
sbb
popa
or
pop
test
push
inc
fsubrs
js
ljmp
fdivs
adc
pop
aas
test
jl
es
push
add
push
enter
cld
jo
sub
ret
mov
test
jmp
mov
test
xchg
cmp
add
sub
mov
cmpsb
add
movsl
push
sbb
std
aam
push
adc
lods
outsb
lock
pop
add
outsl
nop
call
bound
sub
sub
mov
inc
jae
inc
nop
mov
sub
lret
pop
mov
mov
jne
push
add
sbb
out
inc
adc
pop
pop
or
mov
aam
lock
xor
mov
jg
mov
sbb
adc
iret
adcb
orl
push
cmp
jl
push
daa
jne
out
add
mov
lcall
sub
loopne
movntps
xchg
lock
cmpsb
sub
xor
xchg
lahf
enter
add
into
add
mov
sbbl
xchg
shrb
ds
addr16
inc
or
and
test
cmp
sub
jne
xchg
ds
lea
xchg
pop
imul
and
fsubr
xor
out
imul
popa
out
shll
adc
sub
or
jl
inc
jl
bound
es
sub
mov
inc
add
cmpsl
aas
push
inc
cmp
add
lea
inc
sub
std
aam
jne
pop
fwait
out
loop
jno
xchg
shl
dec
and
test
push
nopl
and
dec
out
xor
mov
inc
inc
iret
test
pop
inc
or
fbld
mov
iret
daa
dec
push
adc
inc
add
or
cmp
xchg
add
sbb
dec
sub
out
cmp
movsb
xor
sbb
ret
cmp
js
dec
js
sbb
inc
pop
popf
das
testl
pop
push
ss
jae
sub
addb
clc
ficompl
and
fcoml
cmp
in
push
lock
jb
dec
and
hlt
out
es
adc
mov
movsb
push
test
ja
stc
push
icebp
jo
mov
mov
cmp
imul
sub
aad
mov
out
xor
pop
mov
outsl
das
inc
push
mov
cmp
int3
mov
push
cmp
and
jge
test
mov
pop
mov
js
clc
sub
and
les
incl
sahf
imul
out
sahf
mov
rol
push
jp
pop
xorl
insb
or
inc
hlt
aam
jl
outsl
icebp
cmp
sub
pop
lret
or
ds
loope
pop
and
dec
jl
push
cmp
mov
push
push
sub
push
xor
or
push
in
xlat
lret
mov
ret
xlat
push
sub
add
adc
add
cli
inc
call
jbe
scas
push
push
fistl
lret
adc
jle
and
cs
jp
mov
je
pop
add
adc
mov
adc
fisubs
add
das
push
in
mov
push
cmp
imul
int
sbb
lret
mov
cmp
std
movsb
adcl
sbb
xor
xor
sbb
xchg
aam
mov
sbb
popa
or
bound
bound
or
idiv
pop
cmpsl
sbb
in
dec
add
mov
add
mov
push
mov
jo
xchg
insb
push
lret
negb
loop
xchg
call
fidivrs
loopne
seto
stos
add
jae
push
sbb
pop
pushf
stos
test
jo
pop
and
jns
lcall
fdivs
xor
add
add
imul
cmp
out
xchg
or
and
sub
jnp
mov
popa
aas
lock
sahf
test
sbb
aam
outsl
iret
pop
lock
int3
pop
mov
cmc
lea
push
sub
inc
lock
mov
mov
lods
fisttpl
icebp
enter
mov
dec
xlat
xchg
sbbl
jb
and
mov
lahf
pop
add
sbb
push
daa
loopne
out
inc
leave
sub
push
inc
sbb
push
add
jp
xor
mov
lock
mull
push
xchg
xlat
and
push
jae
push
add
or
fucomi
mov
and
clc
fstpt
outsl
mov
cmp
mov
cmp
stos
mov
mov
lret
xor
arpl
push
icebp
jo
and
or
das
push
rcrb
frstor
lock
std
scas
daa
push
add
addr16
mov
pop
pop
add
sbb
cmp
in
mov
push
or
dec
mov
pop
and
sub
es
inc
mov
cld
sub
inc
add
les
scas
add
mov
cmp
pop
mov
mov
mov
cs
and
or
pop
push
or
cmp
popf
sti
movsl
sbb
aam
cwtl
adc
cmpsb
or
sbb
and
sbb
pop
and
data16
jge
jb
inc
pop
pop
xor
or
into
fisubrl
push
bound
adc
inc
cwtl
test
pop
mov
les
lahf
test
push
sbb
sbb
insb
test
pop
mov
nop
jb
out
pop
ss
sbb
mov
push
push
ret
dec
stos
roll
cmp
mov
push
sub
stos
std
pop
imul
mov
rorb
jecxz
push
in
mov
xchg
loope
fstpt
fs
mov
mov
stos
or
lea
das
xchg
jg
test
jp
cmp
int
push
xchg
pop
or
xlat
jbe
or
push
jb
push
sbb
cld
or
imul
xchg
jecxz
dec
testb
movsl
cmpsb
jo
dec
setnp
add
dec
mov
test
js
and
rolb
pop
inc
and
fucomip
mov
daa
sbb
js
inc
or
outsl
sbb
jo
mov
lods
adc
aaa
daa
sub
jae
popf
jl
dec
lods
jg
jg
test
sar
push
sub
add
mov
sbb
inc
cmp
nop
lods
inc
jle
les
xor
push
lret
je
arpl
mov
push
mov
cmp
stos
imul
scas
cmp
test
fs
jno
imul
fdivrs
cmp
xchg
pop
sti
jnp
jae
es
daa
push
add
cmp
pop
pop
jns
scas
das
ljmp
jg
mov
xchg
icebp
ret
test
popf
stos
or
cmp
sub
pop
add
push
push
jp
cwtl
xlat
mov
out
stos
pop
movl
pop
sbb
lods
push
push
sbb
inc
cmp
pop
hlt
sbb
inc
and
jmp
jbe
fwait
mov
xchg
push
xor
push
inc
sbb
sbb
movsb
and
popf
jg
cmc
rcrb
sbb
es
popf
imul
ret
xor
mov
inc
fucomi
lods
aaa
sahf
andb
adc
daa
push
cmp
hlt
or
sarl
cmp
into
sub
daa
sbb
data16
mov
rorb
je
mov
xor
movsl
xlat
push
les
add
xchg
cmpsl
sub
inc
stos
arpl
ret
pop
data16
push
sbb
iret
scas
repz
push
adc
imul
scas
push
xor
int3
int3
dec
les
xchg
add
icebp
cmpsl
movsl
call
and
call
push
mov
fldl
push
test
js
and
addr16
js
pop
es
add
add
inc
mov
pushaw
jl
mov
lods
fsubp
aaa
xchg
shl
adc
lret
stos
pusha
mov
das
nop
fwait
inc
push
fidivs
ja
dec
clc
cmpsb
fbld
jp
xchg
dec
add
mov
cltd
cmp
jae
pop
jb
xlat
and
push
push
js
xor
popf
mov
mov
ret
mov
mov
cmpsl
cmp
jno
cli
enter
mov
ja
cltd
aas
cmc
pop
loopne
js
clc
ss
clc
lea
xor
xorb
push
idiv
adc
std
sti
sbb
clc
xchg
and
and
push
jmp
shrl
inc
push
jns
sarb
and
cmp
xor
outsl
aam
inc
dec
shll
test
shlb
fmuls
add
push
rorb
pop
cmc
in
mov
loopne
add
lock
fucomi
dec
dec
fildll
sbb
repnz
ret
iret
lods
subb
lret
orl
and
sbb
and
pop
loope
inc
sub
xor
cmp
sbb
dec
xorb
xlat
push
dec
or
push
test
test
push
lcall
je
addb
and
mov
scas
jne
sub
loope
mov
and
outsl
movsb
mov
push
jbe
inc
jo
xchg
jo
xor
sub
pop
xor
xchg
inc
push
gs
roll
pusha
out
and
rorb
inc
push
scas
jecxz
or
sbb
sbb
cwtl
jne
jae
push
xlat
mov
push
jmp
mov
mov
int3
add
stc
mov
mov
pop
test
popa
push
sbb
cmp
out
cmp
mov
jp
dec
sub
sub
hlt
test
sub
bound
jmp
pop
and
ds
jle
stos
icebp
push
xor
aaa
mov
pop
xchg
pop
pop
cwtl
out
jno
sbbl
jns
popl
jle
add
mov
add
ljmp
or
pop
dec
ficompl
int3
or
loop
jae,pt
mov
cmc
fadds
sbb
mov
jne
cmp
mov
hlt
test
sub
or
adc
inc
ret
push
dec
pop
sub
sarl
iret
jle
cmp
lock
sbbl
test
outsb
cli
leave
les
jp
jmp
jae
push
ss
and
and
push
divl
cmpsl
pop
and
cmp
add
dec
call
ss
jg
lods
sahf
nop
inc
jecxz
pop
ret
pop
jns
sbb
jecxz
jno
lods
or
push
lock
or
xchg
out
dec
xchg
jo
cmp
xchg
push
adcl
adc
cmp
das
sub
mov
jg
sub
jbe
fdivrs
dec
shlb
sarl
xor
mov
lret
mov
push
es
nop
fwait
push
pop
dec
lods
outsb
push
or
cltd
push
test
mov
out
pop
out
jl
mov
xor
mov
xchg
mov
lods
or
cli
sbb
mov
rcl
psubusw
jne
add
mov
rcll
or
cs
iret
push
dec
call
inc
out
cld
gs
sub
sub
lret
mov
out
stos
and
cmpb
adc
adc
sarb
out
push
fsts
test
mov
lcall
fistpl
jo
jno
jecxz
push
xorb
pop
add
test
ds
pop
xor
scas
lods
pop
adc
neg
push
or
sbb
shl
xor
add
jbe
xor
sub
or
jo
sub
sub
fimuls
fisubs
push
in
push
iret
push
and
jb
data16
mov
test
jmp
ss
or
push
cmp
pop
xlat
pop
and
dec
mov
fnsave
gs
leave
push
inc
pop
sub
int
imul
js
mov
or
clc
fmuls
adc
inc
iret
mov
iret
push
fidivrl
cwtl
jp
xorl
cmp
push
dec
add
cld
outsb
test
test
mov
mov
jge
outsb
or
xor
jno
jg
iret
aad
pop
out
aas
movsb
pushl
scas
loope
add
or
mov
hlt
jo
push
enter
push
pop
leave
movsl
dec
pop
sub
cmp
sbb
addr16
xchg
ds
rcl
add
mov
xor
aaa
add
scas
add
inc
test
lods
lods
cld
je
add
fwait
push
xor
popa
fwait
dec
clc
inc
mov
dec
arpl
out
and
adc
jle
inc
jge
inc
shll
iret
ljmp
loope
inc
and
sub
pop
push
and
or
sbb
iret
idivl
insb
and
xor
nop
xchg
add
in
daa
add
lods
or
inc
push
sub
push
iret
int3
xor
loop
push
je
bsr
inc
or
arpl
call
add
jns
pop
ds
js
push
das
addl
mov
orl
push
addr16
jo
xchg
rcrb
xor
imul
out
lds
iret
iret
movsb
dec
inc
fmuls
imul
push
add
dec
movsb
dec
adc
push
addl
cmp
iret
cmp
jl
pushf
push
push
and
int3
jns
and
sbb
sbb
add
outsl
call
jb
mov
sub
test
in
sub
sarl
and
xor
lret
ficompl
or
and
mov
and
sub
cs
clc
sbb
pop
jno
sti
push
jne
mov
mov
adc
imul
mov
js
inc
pop
test
cmp
cmp
movsl
jecxz
aam
cmp
add
loope
les
add
adc
inc
imul
adc
test
outsb
lret
adc
es
test
filds
xor
inc
insl
push
cmp
popf
les
inc
outsl
ret
ds
js
jle
nop
in
jecxz
sub
dec
xor
adc
sbb
insl
push
and
mov
and
xchg
jo
add
repz
cmp
mov
mov
rcrb
out
jnp
test
xchg
popa
call
jno
pop
mov
movsb
cs
out
es
popl
push
or
shlb
or
call
pop
jo
push
sub
out
xor
jne
loopne
aas
imul
xor
xchg
enter
out
hlt
inc
mov
push
jl
leave
mov
xchg
loope
pop
ret
lods
imul
in
lods
call
loopne
mov
gs
popa
call
fcoms
aaa
sarl
inc
sbb
mov
les
repnz
rcr
cltd
into
xchg
ss
out
stos
pop
cmp
xor
mov
test
sub
mov
test
fwait
scas
mov
jmp
imul
sub
jecxz
push
xor
lret
out
ljmp
inc
test
sub
sarb
bound
cs
xchg
ret
sub
fstpt
sbb
testl
popa
jp
jp
call
xorl
lret
mov
mov
faddp
adc
loope
dec
cmp
add
lcall
test
and
sbb
pusha
cmp
sub
fwait
jnp
cwtl
icebp
push
fcoms
add
cmpsb
rorb
cmp
orb
sub
insb
sub
stos
insl
and
insb
xchg
pop
out
out
adc
mov
jmp
test
pop
lahf
sub
add
psrad
mov
add
in
xchg
and
stos
mov
pop
jg
cltd
fmuls
movsb
push
cmpsl
lret
inc
add
aad
popa
adc
std
dec
add
lods
loop
xchg
loop
icebp
and
sbb
lds
outsb
out
add
add
xor
jecxz
dec
mov
and
cmp
js
cmc
push
add
push
sbb
mov
sub
add
div
add
daa
inc
sub
jbe
sub
icebp
inc
lds
inc
pushf
sahf
cwtl
aaa
loopne
insl
and
cmpsb
fldlg2
shrb
stos
sbb
sbb
movsb
lods
lea
xor
mov
sbb
adc
mov
add
inc
test
loopne
cmp
mov
pusha
and
mov
push
pop
mov
cmp
push
ljmp
hlt
imul
mov
loop
lahf
add
add
iret
clc
sbb
test
in
popa
and
xor
fistps
push
sbb
adc
movsb
fsubl
ljmp
stos
popf
xchg
jmp
cmpsl
add
mov
mov
out
js
dec
pop
aaa
sahf
jg
jno
ja
mov
roll
mov
pop
cwtl
adc
xor
loopne
stos
lods
das
push
inc
pusha
test
xor
sbb
sbb
movsl
jnp
add
xchg
paddd
and
sbb
fists
and
roll
mov
sub
jnp
sub
imul
and
leave
jns
lahf
into
jnp
xchg
cmp
adcl
jo
fdivs
xlat
ret
cmp
inc
mov
inc
cwtl
lods
popa
hlt
sub
rcr
addl
arpl
add
cwtl
nop
push
pop
dec
sbbb
mov
fsubs
ja
inc
orl
cmp
push
and
js
ror
add
pop
leave
test
sbb
inc
and
fsubrl
fistpll
je
cmp
icebp
test
jns
jg
cmp
add
dec
add
ss
pop
mov
test
inc
pop
daa
xor
jl
inc
cmc
btr
xchg
sbb
ja
add
std
ja
or
rcll
int3
das
xor
push
add
push
popa
test
aaa
dec
lods
loopne
std
rorl
push
mov
cltd
dec
ret
rolb
mov
rol
adc
add
pop
scas
iret
mov
shr
adc
sub
cmp
sub
mov
jno
rcrl
jge
je
and
mov
mov
repz
adc
pop
pop
movsl
mov
fisttpll
or
ret
mov
imul
push
mov
dec
addr16
add
lods
inc
and
xor
nop
idivb
and
jns
add
lods
jmp
inc
cmp
aad
iret
mov
sbb
mov
mov
jne
xchg
adc
push
xchg
imul
in
test
jmp
mov
gs
jle
mov
das
add
adc
icebp
imul
js
ror
int3
roll
loopne
or
iret
adc
or
push
lret
in
mov
jmp
jbe
push
xchg
add
push
aam
mov
push
clc
fiadds
mov
in
lea
dec
mov
aam
dec
mov
dec
mov
jge
inc
pop
dec
addr16
daa
bound
sbb
mov
shlb
gs
dec
and
jp
adc
jno
jecxz
js
dec
daa
int3
dec
scas
aam
sub
cmp
push
sbbb
scas
dec
cmpl
and
fstps
mov
ljmp
xor
aad
xor
js
adc
out
adc
and
bnd
pusha
lods
les
test
in
sti
ret
jo
cs
lea
add
pop
add
adcb
or
adc
pop
or
push
hlt
add
nop
pop
js
sub
xchg
adc
in
sbb
incb
cmpsl
out
and
jo
leave
dec
push
scas
jmp
sti
add
fs
adc
xor
int
sub
xor
pop
and
and
pop
add
enter
pop
mov
cmp
js
jno
pop
mov
roll
cs
je
mov
push
jae
movb
je
pop
pop
pusha
mov
sahf
jnp
sbb
loop
bound
rcrl
jne
sbb
pop
pop
xchg
lds
js
inc
xchg
sarl
mov
movsb
out
adc
or
and
neg
xchg
push
add
mov
mov
cmp
sub
xchg
xlat
add
cmpsl
add
push
push
fistpll
fsubrl
cmpsb
push
add
les
push
cmpsl
mov
fimuls
fldlg2
xor
mov
daa
dec
or
lock
movb
xchg
fsubrs
pusha
pop
roll
outsb
mov
nop
cmp
xchg
jl
leave
xadd
xlat
pop
testl
jecxz
mov
popf
clc
lock
add
lods
in
and
imul
dec
ds
jo
cmp
or
cmc
addl
dec
add
mov
movl
pop
inc
repnz
add
je
sbb
nop
adc
test
mov
pop
sub
ljmp
pop
and
xchg
inc
push
mov
fstl
idivl
pop
inc
sub
ja
testl
jp
pop
fisubs
xchg
rcll
incl
mov
shll
sub
pusha
imul
sar
cmp
bound
pop
push
push
push
ret
xor
movsb
iret
iret
cmp
sub
int
push
mov
repnz
jmp
add
push
sbb
adc
gs
add
jne
shll
push
xchg
aad
mov
add
sti
cmp
xchg
loope
sub
inc
outsl
daa
or
popa
fsubs
sbb
negl
xchg
std
lcall
call
mov
mov
pop
and
jge
pop
xchg
and
loopne
sbb
cwtl
outsb
andl
pop
and
aam
xlat
mov
ja
mov
and
ret
or
lods
pop
andb
xchg
cmp
push
mov
push
add
or
sbb
push
in
add
std
adc
movsb
xchg
hlt
jecxz
add
add
push
dec
pop
fcompl
mov
xchg
xchg
faddl
addr16
pop
inc
ja
jge
inc
loopne
fsubr
pop
iret
xchg
jb
xor
lods
jl
pop
bound
push
push
xchg
jp
jp
ja
dec
pop
rcl
hlt
inc
dec
fcom
sbb
mov
addr16
call
pop
xchg
enter
mov
dec
mov
sbb
and
cmp
xchg
aam
lret
mov
and
and
adc
test
mov
xchg
and
movsl
or
and
ret
xor
push
mov
test
je
mov
imul
inc
jnp
jnp
inc
mov
int3
jmp
push
outsl
je
test
or
or
or
aam
outsb
cmp
ja
cmc
loopne
xor
jl
sub
jb
jg
cmp
adc
int3
and
lods
adc
mov
adc
or
fstps
lahf
pop
pop
dec
pop
clc
add
push
mov
xchg
ja
jp
ret
adc
add
js
add
xchg
jle
dec
sti
movsb
sti
inc
notl
or
jno
test
enter
push
sub
pop
adc
jnp
pop
stos
xchg
stos
js
addr16
push
insl
loope
cmp
int
into
and
xchg
pop
out
push
aam
mov
cmp
dec
sti
cmp
add
mov
fldenv
jo
pop
pop
xchg
lods
pop
add
push
and
addr16
push
stos
push
scas
pop
pop
xor
mov
add
jo
push
insb
scas
and
ja
arpl
ja
or
ljmp
xor
loopne
push
cmpsl
arpl
add
mov
or
jno
xchg
xchg
cmp
adc
pop
sbb
adc
xchg
xchg
dec
and
pop
test
sbb
fidivrl
loope
jo
pop
fiadds
mov
std
adc
push
xchg
rol
addr16
jns
mov
cltd
popa
or
das
out
and
fldl
mov
out
clc
sbb
fiadds
adc
lcall
bt
cmpl
sub
mov
pusha
or
mov
not
incb
sub
ljmp
pop
mov
addb
xor
mov
cmpsl
movsb
cmp
fbstp
push
scas
andb
push
in
ror
or
add
xor
mov
mov
push
pop
shll
push
xor
cmp
js
jge
addr16
stos
shr
lds
adcb
enter
and
jbe
test
add
xlat
pop
xchg
inc
insb
xchg
dec
out
ljmp
imul
into
jo
pop
outsl
jnp
lock
pop
sub
adc
xchg
and
jle
xchg
sbb
repz
clc
sub
rorl
ret
dec
jb
mov
dec
mov
clc
xchg
dec
fnstcw
jge
jecxz
inc
add
adc
mov
call
jle
mov
add
jmp
scas
mov
repz
loope
jo
inc
pop
mov
adc
sarl
mov
into
test
fsubs
daa
adc
mov
mov
jb
outsl
stos
jecxz
nop
push
shl
lods
jg
cltd
mov
cmp
push
adc
and
and
xchg
add
incl
xor
cmp
jl
iret
rorl
pop
loopne
dec
orl
and
add
jne
pusha
and
iret
test
test
xchg
sbb
add
rol
and
cmp
imull
xchg
mov
jp
sbb
mov
jbe
mov
mov
sub
shr
adc
rcr
mov
sahf
sbb
das
loopne
arpl
test
das
insb
xor
inc
mov
addr16
loop
int
xchg
mov
inc
or
mov
loope
cmp
mov
ret
stos
adc
jp
add
out
andb
xor
push
cmp
ret
je
icebp
dec
cmp
mov
je
push
and
push
lea
xchg
xor
jb
pop
js
or
ss
mov
mov
or
sbb
aad
inc
gs
push
andb
xor
out
xchg
pop
test
iret
xor
fnstenv
xlat
out
jae
add
dec
std
mov
enter
cmp
or
mov
sub
aad
pusha
pop
jne
pop
and
or
cmp
xor
dec
or
sub
inc
add
adc
pusha
or
mov
add
push
or
in
or
xor
testb
pop
add
imul
imul
mov
sub
sub
xchg
subb
fldl
dec
push
ret
pop
xor
xor
iret
and
ret
verr
mov
aas
mov
lret
pop
mov
or
push
pop
add
fs
inc
shrb
test
jecxz
arpl
rol
aaa
into
or
push
inc
loope
ja
xor
iret
mov
sub
aaa
push
inc
mov
fists
int3
adc
aam
aaa
loopne
imul
sahf
in
jp
aad
mov
jne
jle
push
hlt
rolb
pop
loopne
push
add
outsl
jne
adc
movsb
test
repnz
out
iret
push
mov
dec
xor
mov
iret
xor
sbb
cmpsb
and
cwtl
idivb
cmpb
mov
adc
jne
inc
mov
test
cmp
clc
popf
aaa
andb
iret
ljmp
mov
sarl
jns
arpl
dec
mov
inc
das
pop
xor
sbb
mov
les
adc
daa
cmp
ds
inc
call
shl
xchg
cld
dec
push
cwtl
dec
or
aam
adc
mov
aas
pop
lods
mov
adc
dec
add
or
popa
popa
fucomi
adc
or
aas
add
jns
js
push
loopne
fadd
dec
js
adc
sub
cmp
mov
add
cmp
mov
mov
xchg
ja
inc
jns
cltd
add
jp
xchg
gs
out
cmp
adc
sub
test
add
rol
test
xchg
xor
or
insl
dec
mov
inc
loopne
scas
mov
in
mov
movsb
pop
cltd
imul
xchg
inc
sbbl
idiv
add
push
and
cmp
xorl
ja
mov
rcrl
lcall
add
in
add
sbb
adc
aaa
call
test
cmp
push
sbb
xorl
das
sbb
add
xlat
xor
lahf
movsl
iret
loop
pop
xor
adc
add
ret
iret
hlt
push
inc
pop
cmp
fs
add
call
enterw
mov
jnp
mov
ret
push
cs
lods
mov
test
ds
lods
pop
ret
sub
add
out
repz
cmp
add
jge
enter
je
out
and
js
inc
out
mov
dec
sub
push
mov
xor
fcomps
leave
aam
fsubrs
cmp
aaa
lods
sub
or
loopne
jns
add
outsb
sub
in
in
lret
out
sbb
orb
sti
adc
cli
or
mov
jo
xor
lods
enter
ret
aam
dec
ljmp
dec
sbb
out
dec
adc
mov
add
test
push
or
push
xor
lcall
sbb
push
or
jbe
cmovbe
sub
jnp
lods
push
sub
cmc
push
ss
cmp
jge
jmp
mov
jae
mov
push
xchg
int3
add
arpl
mov
xchg
xchg
push
xchg
xorb
inc
and
xchg
or
pop
gs
pop
sbb
jb
or
test
push
add
test
dec
in
push
les
inc
push
push
push
filds
icebp
add
insb
sbb
loop
lret
in
jp
imul
cmpsb
imul
mov
int3
test
orl
adcl
insb
inc
shl
mov
shlb
arpl
rclb
mov
add
and
ja
addr16
push
inc
sub
sub
mov
movsb
ret
out
fsubl
push
or
imul
push
jp
scas
lahf
mov
or
lcall
push
mov
xor
or
sub
sub
push
mov
cmpsl
cmp
xchg
push
das
lcall
mov
sbb
and
ret
test
xchg
pop
pop
sbb
jno
stos
sti
cmp
inc
cmp
inc
lret
push
fs
cmpsb
cmp
sahf
mov
inc
ret
adc
jg
inc
mov
push
daa
add
dec
rclb
ret
adc
sub
outsl
lods
jae
call
es
pop
xchg
cwtl
xor
les
xchg
les
jmp
or
jnp
push
xchg
je
aas
mov
jae
jo
lods
sbb
pop
hlt
add
mov
dec
js
in
mov
data16
jno
jne
imul
jmp
inc
imul
ret
xor
imul
push
shlb
clc
cmpsb
jecxz
push
inc
shrb
in
mov
lods
jg
je
rorb
inc
movsb
fisubl
pusha
pop
pop
movb
test
ret
sbb
sbb
aaa
jne
movsb
or
dec
stc
loopne
jmp
add
test
aam
add
inc
cmpsb
jne
sub
adc
dec
adc
xor
or
aam
clc
and
sbb
hlt
popa
pop
ud1
push
mov
iret
sbb
movsb
imul
test
je
sub
mov
jnp
ss
loopne
rcll
stos
jbe
bound
jbe
sbbb
pop
jns
sub
jae
pop
pop
iret
rolb
gs
jno
shll
push
lock
repnz
aas
icebp
lods
out
pop
cmp
je
mov
mov
popf
jmp
mov
push
fwait
arpl
fstpt
and
push
xor
or
jb
xor
adc
outsl
sarb
shlb
out
pop
insl
mov
or
ret
jne
push
adc
or
pop
mov
pop
aaa
ret
pop
je
mov
sbb
xchg
push
fwait
sub
sub
mov
adcb
xchg
out
out
cmp
push
cmp
pop
ja
inc
test
adc
lock
in
movsb
aad
or
add
or
fs
pop
cli
mov
lret
sbb
xor
ror
stos
xorb
scas
mov
nop
or
push
mov
add
mov
mov
rclb
and
xor
nop
das
cmp
orl
das
je
scas
lods
icebp
in
add
adc
pop
nop
mov
mov
mov
iret
inc
add
loope
pop
lcall
clc
mov
dec
inc
jmp
and
cmp
aad
stos
mov
push
loop
pop
add
lcall
in
pop
sub
test
mov
sbb
fsub
push
ret
push
xchg
pop
pop
adc
inc
scas
ja
ljmp
mov
loopne
sbb
popf
jmp
aad
ret
lods
ja
mov
or
js
mov
imul
sbb
adc
inc
cmp
sub
fiaddl
cmp
lea
adc
insb
mov
loopne
int
rcrl
adc
and
jo
aam
fiadds
jmp
pop
scas
movsl
fcom
mov
or
rcll
adc
sub
mov
sbbl
add
lock
mov
push
sbb
cmp
aas
adc
and
sbb
sub
add
aam
nop
fstpl
movsl
nop
stos
fwait
pushf
jecxz
or
xorl
lcall
and
xlat
aad
inc
ja
adc
aaa
add
loopne
shll
lods
ret
fsubrl
es
xchg
daa
cmp
push
das
xchg
rcl
cmp
lea
or
call
add
or
imul
inc
idivb
xor
pop
xor
xor
mov
enter
sbb
inc
aaa
aaa
push
movsb
cmp
or
orl
and
sar
roll
sbb
loope
sbb
in
mov
jbe
jecxz
popf
imul
adc
ficomps
push
cmp
rcl
xor
add
sub
fstl
sub
inc
cmp
jnp
in
dec
jb
fbld
add
xor
cmp
mov
mov
xor
hlt
or
loope
enter
and
sbb
cmp
pop
shl
or
iret
imul
cwtl
lret
lret
push
sub
jmp
dec
sbbb
dec
xchg
ret
mov
sbb
and
xchg
addb
dec
cmc
mov
bound
or
lret
jo
ss
aaa
js
add
in
lret
adc
mov
jmp
pushfw
lret
lret
iret
cli
mov
and
std
stos
adc
fisttpll
mov
shl
push
push
adc
lahf
mov
bound
pop
mov
lret
shll
loope
mov
mov
cmc
fs
push
or
jnp
outsl
jecxz
daa
push
mov
push
and
int3
jo
pop
jo
cmpb
jo
js
xchg
aam
loope
sub
cmp
es
adc
lret
out
sbb
sbb
call
push
xor
add
mov
pusha
sbb
shrb
dec
mov
cmp
out
shl
dec
test
ljmp
cmp
add
ret
in
push
pop
js
push
push
lret
or
sbb
mov
fldcw
shrb
dec
roll
imull
mov
cwtl
adc
insb
nop
ss
pop
imul
das
sub
mov
sti
pop
rolb
sub
sub
scas
jecxz
negl
inc
jmp
push
add
lock
or
or
test
sbb
xlat
rclb
dec
inc
pusha
daa
inc
js
inc
sbb
mov
int
sahf
shl
pop
sub
inc
or
xor
add
cmpsb
sub
cmpsl
ss
mov
adc
or
xor
jp
lahf
lahf
sarb
jno
gs
jle
out
jp
insl
sub
imul
pop
pop
dec
adc
mov
pusha
das
cltd
inc
rcrl
shll
dec
pop
insl
push
inc
iret
xchg
push
adc
test
xchg
popa
and
pop
cmp
lret
popa
and
cld
cmp
push
test
arpl
dec
repz
adc
adc
lock
adc
lcall
pop
add
add
mov
cmp
addr16
and
pop
or
inc
imul
inc
pop
out
push
add
adcb
jno
movsl
and
mov
arpl
aaa
iret
pop
push
add
arpl
loope
pop
mov
cs
adc
add
cltd
and
mov
arpl
leave
shrb
push
frstor
roll
into
rolb
adc
sbb
inc
jb
add
fidivrl
add
add
lods
mov
xchg
mov
shll
iret
cmpsl
push
es
adc
sub
mov
or
or
inc
sub
adc
dec
iret
pop
cmp
cmp
add
popf
aam
dec
test
loopne
sub
jae
mov
adc
dec
lods
and
fsubrs
mov
in
dec
push
xor
jle
rorb
mov
mov
xchg
add
cltd
loope
or
lret
push
loope
inc
movsl
pop
jb
ja
iret
std
add
jge
out
inc
mov
sbb
xchg
rclb
inc
push
or
cmp
cmpsb
adc
pop
rcrb
xor
sti
and
xorb
pop
mov
adc
in
test
sbb
xor
sti
ret
inc
and
adc
clc
sbb
inc
inc
lret
out
mov
sbb
cs
or
pop
cmp
push
sub
loopne
inc
push
xlat
sub
add
lds
das
cmp
and
mov
orb
pop
clc
rolb
int3
imul
adc
or
adc
fstps
and
and
rolb
mov
dec
scas
cmpsl
pop
cmp
dec
ljmp
inc
mov
xor
rolb
sbb
jns
inc
rolb
int3
ljmp
lock
ror
int
ffreep
pop
xor
pop
out
add
xchg
imul
xor
and
inc
pop
and
xorl
add
in
out
and
jno
mov
nop
mov
sbb
popf
cltd
add
mov
and
or
push
mov
gs
xor
data16
test
pop
dec
or
or
xchg
or
push
and
xchg
dec
fs
mov
adc
and
and
shll
xlat
add
push
rorl
fldcw
sbb
fsubrs
sbb
mov
orb
ds
ss
push
test
xchg
and
jle
push
add
cwtl
xor
pop
and
xchg
jnp
popa
nop
inc
or
les
or
mov
or
scas
dec
stc
jnp
js
sub
rorb
outsb
scas
pushf
enter
fwait
and
stos
xor
test
in
cltd
pusha
test
add
dec
mov
fcoml
cmc
pop
daa
arpl
xchg
scas
mov
mov
es
cmc
je
cmp
jne
jno
pop
pushf
filds
int3
arpl
cmp
shr
rcrb
inc
inc
popl
cmp
adc
push
adc
cmp
cmpsl
push
test
loopne
xor
push
add
fsts
xor
jae
sbb
mov
push
divb
push
xchg
fadd
fwait
inc
jmp
notl
sahf
cmp
cs
pop
xor
aaa
cmpsl
add
adc
add
movsl
jbe
xor
jle
jmp
mov
lock
lret
test
or
shll
mov
pop
popf
sub
dec
jmp
and
fidivrl
cltd
fcomps
push
mov
push
sub
sbb
ret
in
aaa
jp
rorl
mov
icebp
ficompl
sbb
rcrb
mov
and
sub
out
stc
xor
or
inc
enter
mov
push
arpl
inc
nop
roll
xlat
and
ja
rolb
cld
sti
dec
jp
in
in
mov
xchg
stc
inc
sub
push
or
sbb
inc
sbb
jmp
cmp
or
add
mov
int
sbb
in
aaa
jmp
adc
cmp
mov
mov
inc
add
insb
jno
leave
and
clc
push
out
mov
add
mov
push
ja
ret
mov
mov
cmp
jle
mov
dec
cltd
aas
lock
pusha
mov
aaa
aad
cmp
hlt
mov
mov
sub
inc
or
popa
addps
sbb
and
rclb
and
add
les
sub
lock
stos
roll
sbb
rorl
cmp
mov
adc
push
cmp
cmp
js
test
jecxz
cmc
mov
sub
comiss
and
fldl
xchg
push
cmpsl
loopne
jbe
pop
mov
jle
andl
mov
shrl
in
mov
mov
movsb
mov
loope
pop
test
andb
into
test
pop
dec
and
inc
fcom
sti
add
mov
inc
popa
add
inc
sbb
sbb
mov
adc
pop
inc
dec
fadds
xchg
lahf
insb
push
lds
loopne
adc
cmc
or
jo
pop
add
dec
cmp
mov
add
add
add
cmc
sub
xchg
pusha
xlat
cmp
outsb
pop
insb
push
loopne
mov
lock
lcall
fnsave
sbb
pop
mov
insb
lret
stos
inc
push
data16
loopne
and
sti
push
in
int
lods
loope
popa
or
and
imul
out
xor
mov
cmp
cmpsl
pop
scas
lock
mov
xor
jge
cmpsl
outsl
inc
orl
xor
andb
jmp
outsl
adc
push
and
aaa
icebp
sar
mov
outsb
cmpsb
sub
aaa
jnp
jecxz
adc
stos
fimull
hlt
add
es
push
and
pop
sbb
in
mov
xchg
loopne
lea
sub
sbb
in
or
inc
popa
jge
test
movsb
and
inc
sub
loop
insl
push
or
and
cmp
and
sbb
and
sbb
inc
or
andb
in
or
fdivl
cli
xchg
xchg
es
push
popf
mov
je
insb
fistps
push
xchg
sub
mov
fldenv
into
mov
dec
mov
xor
adc
ret
push
icebp
orb
pop
dec
xor
pop
cmpl
enter
and
cmpsl
mov
pusha
lock
rorb
int
nop
popa
scas
inc
jo
mov
hlt
sub
negl
fmuls
mov
mov
add
push
fisttps
dec
xor
addr16
mov
jbe
or
ljmp
lock
shr
jecxz
mov
and
rorl
push
sbb
inc
add
or
inc
and
jne
ret
dec
fs
scas
mov
push
jecxz
lret
adcb
mov
jecxz
push
lret
xor
aam
decb
mov
jb
sbb
pop
and
push
xor
xor
pop
cmp
add
push
and
pop
sbb
sbb
mov
jge
push
mov
jo
test
popa
ja
jo
cmp
ret
pop
pop
or
sbb
or
aaa
loope
xchg
sub
cmp
sbb
push
loopne
and
mov
and
cmp
test
mov
fstl
or
cmpsb
push
mov
insb
imul
push
xor
cmpsl
das
inc
fsts
jbe
push
push
fidivrl
mov
xor
rolb
outsl
subl
daa
orb
and
aad
shrb
sub
pop
jg,pn
pop
test
xchg
icebp
and
add
js
out
fcmovu
sarl
and
dec
dec
push
or
sub
inc
sbb
mov
pop
cmp
or
stos
jge
shlb
pop
adc
cmp
cs
jecxz
imul
push
lods
jb
jne
das
or
stos
or
lods
lock
ss
or
or
and
dec
cltd
out
sbb
and
pop
iret
leave
lea
in
loopne
in
xchg
or
inc
test
icebp
xchg
ret
ds
add
out
cmc
xchg
je
popa
jge
loope
fucomip
sahf
jmp
add
aam
and
repz
add
and
rorb
leave
sahf
ret
sarl
iret
add
filds
mov
push
xor
add
imul
push
mov
imul
into
cmpsb
jne
int3
cli
add
sub
push
out
rorb
adcl
inc
sub
mov
add
cltd
rcl
cmp
int
je
ret
push
neg
mov
dec
movsl
dec
call
iret
cmp
cmp
shr
mov
mov
hlt
push
loopne
mov
inc
pop
daa
push
and
dec
hlt
xor
xchg
xchg
add
add
or
add
popf
jmp
inc
es
jle
sahf
scas
js,pt
aaa
xor
pop
mov
pop
dec
jl
mov
jmp
pop
dec
sub
out
dec
or
push
rcrl
inc
dec
mov
lea
xor
addr16
cmp
and
int3
fldcw
cmp
lahf
mov
xchg
mov
imul
push
pop
jbe
mov
scas
push
ret
lahf
lret
or
call
xor
stos
sbb
scas
push
jp
jno
xchg
test
aaa
jne
push
imul
dec
jge
sub
jmp
dec
loopne
add
inc
cwtl
push
mov
in
fadds
sbb
lods
inc
jmp
pop
outsb
movsb
add
leave
inc
shl
pop
cmp
shl
push
ret
mov
xchg
shrb
push
pop
sbb
xor
push
xor
jns
loopne
add
xchg
mov
in
call
psraw
fisubrs
cmpsb
fs
jle
imul
shlb
insl
out
pushf
mov
add
jae
stc
mov
add
pop
imul
cltd
ret
lods
sbb
neg
xchg
add
repnz
sbb
push
pop
mov
mov
xchg
jb
adc
and
call
stos
mov
fidivl
dec
neg
int3
add
lret
and
adcb
dec
stos
jne
sub
xor
lods
aas
mov
int3
jae
mov
daa
push
outsb
sbbb
shrb
sbb
scas
iret
and
or
sub
sub
jo
movsl
sub
pusha
xor
dec
stos
inc
sbbl
fimull
roll
orl
pop
dec
mov
xchg
pop
pusha
cmp
mov
in
jmp
out
add
sbb
mov
sub
cmp
test
sbb
fiaddl
add
sub
aas
iret
pop
orb
inc
and
aaa
je
fadds
sub
or
mov
adc
rol
cmp
icebp
aas
fiaddl
fisubrl
xor
iret
iret
aas
adc
xlat
popa
adcb
sbb
add
cmp
je
std
jp
inc
and
xor
jg
cmpsl
cli
push
fsubs
lea
lahf
std
sub
ror
inc
mov
xchg
arpl
push
push
add
mov
imul
fdivrs
dec
add
sub
sbb
push
arpl
roll
add
push
sub
addr16
ret
add
in
dec
loopne
int
loopne
lock
sbb
jns
loope
push
sub
cmp
push
lahf
shll
push
add
fcom
arpl
sub
shr
jb
test
ret
pop
mov
add
push
call
cmp
xchg
cmp
aaa
sbb
loopne
out
xchg
sbb
dec
inc
adc
lds
imul
add
add
jns
mov
jle
sbb
aad
push
and
dec
mov
cmpsb
xor
mov
loope
xchg
inc
bnd
jnp
hlt
cmp
fcmovnbe
adc
dec
scas
xchg
adc
lods
data16
ds
ret
mov
mov
sub
pop
add
mov
lahf
ljmp
pop
cmp
add
adcb
mov
push
dec
xchg
mov
inc
push
shlb
dec
mov
add
movsl
dec
mov
jnp
mov
les
sub
fadds
xchg
jp
outsl
mov
xchg
push
jno
sub
scas
call
and
ret
push
dec
stc
ljmp
lahf
adc
xor
iret
cmc
add
add
fldenv
push
int
lret
or
pop
test
cld
sarl
jecxz
inc
inc
xor
dec
adc
pop
add
and
and
arpl
addr16
inc
jmp
shrb
mov
jge
jg
push
xchg
inc
push
push
adc
pop
push
movsb
push
add
or
loope
aad
loope
es
int3
lea
push
cs
cmp
sbb
push
lods
aam
adc
pop
das
rol
add
push
mov
loope
lock
xor
js
cmp
inc
dec
call
imul
add
push
test
mov
call
imul
mov
rolb
jnp
rol
lock
push
pop
adc
add
jge
cmp
jb
mov
lea
add
ret
inc
outsl
sub
movsb
rolb
pop
into
js
push
jne
scas
dec
or
jae
dec
test
loop
lea
push
or
lock
adc
jle
cmp
adc
mov
mov
icebp
push
adc
test
lret
cmc
and
push
iret
cmp
adc
pop
clc
add
cltd
dec
cmp
mov
mov
cltd
mov
roll
lods
into
sti
mov
fsubl
imul
cmp
mov
lret
sub
or
inc
popf
gs
mull
adc
dec
sbb
mov
cmp
fstpl
push
jmp
dec
jl
xchg
pusha
pop
sti
inc
push
adc
loope
flds
sub
fistpll
dec
add
add
inc
je
jnp
adc
cmc
fildll
mov
mov
add
cmp
sub
or
push
mov
shl
or
mov
rcl
scas
fildll
and
orl
jmp
dec
xor
xchg
call
xchg
ret
xor
xchg
dec
mov
cmp
xchg
mov
push
jge
cmpsb
add
push
push
das
hlt
call
js
lahf
pop
jno
scas
lock
add
movsb
cmp
xchg
int3
stos
push
push
sub
mov
or
push
sub
sub
sarb
and
rolb
adc
push
in
mov
outsb
test
daa
sbb
popa
test
arpl
sbb
mov
push
mov
in
jg
pop
ret
sub
jbe
or
iret
inc
iret
pop
clc
test
and
out
je
stos
pop
mov
fidivrl
ficoms
leave
ffreep
xor
xor
inc
cmp
add
rolb
pop
sbb
cmp
ds
mov
dec
push
out
vmovss
adc
adc
add
pop
sub
rol
sub
scas
cmp
int3
stos
fsubl
sahf
and
xchg
out
je
adc
push
rolb
icebp
fwait
shll
add
ss
and
lock
ljmp
push
dec
add
loopne
add
js
xchg
mov
ja
mov
jp
fsubs
dec
xor
test
xchg
pop
jl
int
pop
or
cs
ret
jno
mov
add
fsubs
dec
in
adcb
movsl
sbb
out
aas
in
test
gs
sub
mov
stos
xor
pop
imull
sahf
add
imul
add
ret
xor
or
std
xor
out
or
xchg
mov
or
mov
ficompl
imul
rsm
adcb
test
xor
and
add
cmpsb
xchg
mov
fcomip
inc
dec
popf
cs
add
jae
lds
ljmp
rorl
scas
mov
or
and
inc
pop
lods
mov
mov
mov
lcall
add
push
add
in
lcall
ret
inc
add
push
cmpsb
xchg
push
outsb
inc
dec
gs
xchg
pop
fprem
imul
fadds
sti
cmp
inc
daa
mov
cld
or
pop
bound
sahf
lcall
jle
mov
sub
adc
mov
adcb
and
stos
lods
push
mov
arpl
dec
add
pusha
adc
add
cwtl
sarb
lret
inc
sub
or
push
push
imul
ret
popa
loopne
mov
jae
jmp
test
mov
xchg
rol
or
lods
or
pop
xchg
add
addb
das
sub
mov
mov
jg
lds
jno
mov
test
dec
nop
and
imull
mov
ja
adc
sbb
push
pop
cmp
out
sub
ret
pop
dec
aam
push
es
cmp
lock
add
test
pop
sub
or
js
sar
popa
addb
repz
jb
movsb
out
sub
sbb
cs
dec
in
mov
adc
pusha
pop
xchg
pop
jne
jecxz
fwait
lods
in
dec
and
add
jno
push
sbb
adc
jae
rcrl
push
add
mov
cltd
ss
push
sbb
mov
lods
test
jle
cmp
jp
push
les
dec
repz
mov
in
ret
push
jg
xchg
in
lods
mov
movsl
shll
mov
mov
add
dec
nop
xchg
mov
stos
mov
ffreep
repnz
pusha
add
inc
push
bound
lock
mov
das
mov
aam
mov
cmp
lods
mov
and
xchg
jne
mov
inc
sbb
dec
sarl
cwtl
sarb
or
xchg
cmp
adc
popf
loope
lahf
add
push
cli
add
push
mov
mov
dec
mov
mov
les
ret
lods
adc
or
push
push
inc
test
aas
xor
sbb
ss
xchg
das
iret
and
xor
inc
in
pop
fsubs
push
adc
jge
mov
js
scas
sub
test
mov
gs
xchg
pop
dec
out
lret
or
push
mov
jle
jnp
rclb
xchg
movsb
or
scas
test
cmp
loope
ss
bound
pop
repz
add
xor
in
aas
cli
adc
popa
cmp
call
dec
repz
jbe
sahf
cmpsb
xlat
inc
dec
out
push
and
daa
add
mov
sub
mov
test
call
xor
mov
stos
rcrl
sbb
imul
dec
ret
ret
adc
fs
ds
and
sbb
iret
pop
aas
test
push
flds
inc
pop
scas
mov
insb
xchg
pop
jmp
mov
dec
cmp
add
add
or
dec
xchg
jle
adc
loope
sarb
cmc
adc
test
es
xchg
out
and
inc
xchg
or
xor
and
icebp
out
dec
cmpsl
or
pop
loopne
adc
xchg
sahf
push
and
xchg
xlat
out
pusha
lods
pop
or
jno
dec
imul
ds
mov
nop
and
xadd
mov
test
gs
push
pop
xor
inc
mov
pop
mov
adc
fidivrs
mov
push
wrmsr
adc
clc
jp
or
cmpsl
xor
lods
add
push
inc
xchg
ja
xchg
insb
jp
sbb
push
loope
popa
jle
add
out
stos
lret
sbb
in
mov
mov
push
mov
aaa
test
int
out
sub
iret
iret
inc
xchg
sub
cmc
xor
call
push
or
addr16
pop
outsb
or
scas
jae
push
outsb
xchg
mov
mov
inc
aas
movsl
add
mov
ficompl
sbb
add
push
pushf
xor
nop
add
lahf
dec
xchg
dec
testl
or
nop
subl
test
mov
fs
ficoms
cli
stos
shrb
add
and
addr16
mov
dec
sbb
pusha
push
push
cmpsb
mov
or
mulb
lahf
popa
xchg
aaa
jnp
cmc
inc
or
sahf
icebp
pop
add
jge
add
in
dec
inc
push
rcrl
enter
add
mov
sysret
cmpsb
imul
movsb
xchg
push
add
js
dec
mov
xor
pop
mov
mov
adc
jp
sbb
sbb
mov
dec
mov
or
add
mov
sbb
mov
imul
test
cmp
mov
jno
enter
inc
pop
stos
mov
jge
notl
add
lods
bound
push
and
ljmp
push
arpl
je
je
aas
in
sbb
daa
aaa
std
sbb
scas
adcl
cmp
bound
in
xor
imul
mov
and
adc
mov
push
clc
jecxz
xchg
je
add
inc
cmpps
sbb
or
das
mov
xchg
outsl
loope
push
xor
mov
mov
orl
iret
sbb
data16
sbb
pusha
lcall
addr16
iret
pop
pop
lea
jmp
mov
dec
pop
xchg
pop
mov
or
xor
push
sbb
cmp
mov
mov
in
scas
xchg
fcoms
aaa
incb
dec
es
enter
into
sbb
pushf
sbb
cli
xor
int3
xlat
shlb
xor
popa
push
inc
push
test
or
scas
cmp
out
pop
mov
lock
inc
mov
xchg
jmp
lret
add
push
loopne
xchg
dec
dec
or
lds
push
scas
push
je
insl
popa
hlt
cmpsl
push
fcmovb
outsl
shl
scas
fcomps
in
sub
inc
cli
push
sar
sub
mulb
ljmpw
and
dec
movl
test
loop
and
insb
es
xchg
sahf
pop
gs
adc
in
popf
mov
xchg
in
add
add
cwtl
nop
repz
ss
orb
xchg
andb
and
ja
sub
out
dec
pusha
sbb
iret
mov
repz
imul
xchg
imul
push
sbb
ror
jle
out
aaa
mov
loope
ror
lock
mov
mov
jns
sub
sub
cld
mov
decl
cwtl
mov
fcmovnu
js
outsl
mov
or
push
xor
xor
test
push
cli
sub
rcr
out
pop
iret
out
ja
fwait
cs
inc
mov
add
mov
in
outsb
and
addr16
or
call
call
and
xorb
pop
sub
add
ret
in
fisubs
sub
jecxz
cmp
jmp
in
add
inc
sub
mov
or
add
push
mov
or
mov
mov
imul
sub
enter
sti
out
xchg
scas
mov
fidivs
gs
shrb
adc
cmp
leave
lods
shlb
add
and
mov
add
ror
mov
dec
jle
je
out
out
xchg
adc
jmp
inc
jecxz
xchg
sarb
jge
xor
add
mov
xor
psubusw
js
das
popf
xchg
xor
popa
andl
nop
cmp
and
out
add
cmp
inc
mov
inc
mov
or
inc
dec
sub
call
add
and
sub
sbb
repnz
pop
sub
mov
aam
push
repnz
outsl
aaa
mov
fldcw
cmp
mov
sbb
out
pop
sub
fldcw
bound
ja
xor
ret
jnp
add
push
mov
sti
sbb
jnp
pop
andb
or
lods
push
add
or
add
and
pusha
mov
sbb
sti
jne
ds
jbe
mov
inc
ds
js
add
xor
movsb
iret
je
test
mov
xor
into
xor
sbb
pop
xor
cwtl
jmp
pop
out
rclb
xlat
js
and
xlat
sbb
push
ret
lret
push
rcrb
ret
ja
addr16
xchg
aam
adc
xor
das
cmp
push
mov
stos
stos
pop
out
iret
fnsave
jb
int3
pop
dec
jp
pop
push
insb
adc
or
sbb
add
into
stos
loope
dec
jge
xlat
add
xchg
mov
sub
inc
shl
push
fisttps
jmp
popa
les
sti
cmpsl
fildll
cmc
push
loope
xchg
mov
inc
mov
scas
fwait
popf
inc
push
aas
xchg
push
add
stos
xchg
aad
cmp
js
cmp
js
push
add
mov
jae
aaa
jp
dec
sysexit
cmp
xchg
jno
or
inc
mov
jecxz
and
clc
add
in
icebp
xor
xor
fst
cmpsb
popa
insb
xor
lret
adc
or
fwait
je
clc
inc
sarl
dec
sub
inc
fiaddl
aam
sbb
cmpsl
push
fadd
or
pop
sub
inc
push
adc
cmp
das
rcrb
pop
pop
or
push
mov
cmc
sbb
add
mov
push
mov
iret
push
mov
xchg
dec
movsb
jo
out
pslld
mov
aaa
inc
sbb
inc
cmp
cmpsl
stc
ret
and
and
nop
shlb
sbb
push
daa
pop
pop
cs
xchg
popa
cmp
mov
mov
ret
imul
fs
ror
add
aaa
aad
add
aam
aas
ds
jmp
ret
pop
dec
dec
fadds
add
stos
das
rolb
mov
mov
hlt
lret
sub
pop
testl
and
xchg
push
jl
sbbl
data16
les
mov
fstps
bound
fisubrl
sub
inc
cmp
aas
je
jbe
popa
push
pushf
mov
inc
and
lods
sbb
and
jbe
pop
adc
mov
mov
sbb
cmp
or
add
xor
xor
adc
clc
mov
lret
inc
sbb
cmp
nop
mov
int3
in
sbb
das
add
add
aam
dec
scas
imul
cs
daa
call
pop
int3
xor
lcall
pop
mov
into
test
lcall
les
mov
or
pop
mov
shlb
test
dec
les
fcoml
and
push
push
add
jbe
cmp
jae
mov
pop
jle
jg
loopne
loopew
xchg
jecxz
sbb
push
movsb
fsubrs
cmp
inc
jp
dec
fnsave
rolb
jecxz
jbe
cmp
xchg
jecxz
mov
jmp
mov
fucompp
add
ja
sub
cmp
jo
inc
adc
or
lock
and
mov
push
or
pop
inc
mov
mov
xchg
mov
test
mov
js
sub
mov
pusha
test
lods
adc
repnz
cmp
pop
sub
rcll
xchg
lock
loope
add
jbe
aam
push
or
push
cmp
add
inc
andl
int3
movb
inc
lcall
cmc
cmp
or
pop
or
jmp
sarb
push
sbb
insb
orl
js,pn
mov
pop
add
adc
sbb
cwtl
inc
fildl
mov
push
xor
pop
call
iret
inc
dec
mov
lds
pop
sbb
adc
and
adc
xor
cmp
pop
sub
loope
dec
sub
and
mov
cmpb
adcl
and
lds
jmp
lds
lea
sti
xchg
add
inc
ljmp
cld
in
mov
cmp
jle
enter
int3
dec
jb
mov
cmp
sub
adc
or
cmovbe
cwtl
mov
add
mov
stos
lret
cmp
dec
fdivrl
add
cmp
ds
mov
and
mov
pop
repz
loope
cs
imul
pop
shrl
inc
jle
faddp
xchg
sub
sub
addb
mov
mov
movsb
mov
loopne
jo
loope
sarb
push
cltd
xchg
fstpt
jns
or
popf
int3
mov
sbb
arpl
nop
mov
and
in
inc
insb
adc
push
add
pop
push
inc
imul
shrl
push
jbe
sbb
add
sub
add
lods
rcr
out
rol
jmp
aam
iret
jle
aam
cs
fldcw
sarl
jo
add
push
mov
adc
cwtl
cmp
daa
icebp
iret
movsl
xor
mov
push
ficomps
push
icebp
daa
scas
insb
hlt
adc
and
or
in
jne
hlt
fidivrl
ljmp
lods
lea
push
adc
add
sub
xchg
xchg
push
dec
cmp
and
jno
pop
sbb
dec
mov
orl
out
cmpsl
jge
sub
jl
sbb
jne
pop
sub
mov
pop
add
lea
adc
push
call
test
pop
xorb
mov
ret
inc
jns
and
ffreep
adc
xchg
jge
push
jo
push
xlat
mov
or
test
adcb
shrl
xchg
jb
jne
mov
mov
mov
cli
test
divl
in
and
xor
imul
inc
sbb
add
bound
jbe
or
fisttps
push
sbb
out
test
add
mov
and
jge
jle
out
sub
xchg
jne
faddp
stc
jo
mov
mov
add
rcrb
and
fcomi
xchg
loopne
das
lcall
and
loope
dec
stc
xor
add
xor
cwtl
das
or
pop
cmp
loopne
arpl
push
push
loop
mov
cmp
insl
dec
inc
loope
jp
mov
test
mov
das
lcall
scas
lahf
inc
pop
mov
test
daa
mov
ret
xchg
shr
lods
mov
mov
loope
cmpsb
jg
shlb
pop
das
add
mov
xchg
insb
xor
mov
push
xchg
xor
andb
sbb
pop
ret
add
aaa
and
mov
test
lods
add
scas
loopne
outsl
and
push
adc
das
adc
push
mov
or
aas
add
pop
adc
les
mov
or
mov
push
das
cs
lods
loopne
sub
sahf
insb
pushf
insb
fnsave
sub
push
lcall
insb
cmp
pop
mov
jecxz
or
or
clc
and
sbb
movl
in
sub
scas
mov
imulb
in
push
dec
in
aam
loope
push
stc
mov
bound
mov
insl
mov
hlt
adc
push
cs
iret
stos
xlat
sub
ds
jo
and
imul
in
jo
clc
ret
outsl
sub
lret
or
cmp
jnp
in
sub
aaa
push
ret
push
and
mov
mov
es
sub
and
push
faddl
shlb
data16
lods
pop
and
out
push
add
push
fdivrl
push
fxch
and
idivb
iret
les
sbb
sub
adcl
fistl
stos
push
xor
add
cmp
sbb
test
cmp
test
xorb
lret
shlb
mov
push
mov
cmpsl
adc
jne
addb
mov
xchg
mov
xor
aas
sbb
pusha
mov
adc
lret
xorb
adc
das
ret
xlat
pop
addl
fcomps
sarb
loope
push
repz
test
ret
inc
repz
or
sbb
jnp
cmpsl
mulb
add
jmp
in
ss
out
pushf
iret
xor
or
lods
mov
jle
xchg
cmp
shll
pop
aam
or
or
nop
sbb
xchg
sarb
lea
lahf
imul
push
shlb
xchg
int
jo
scas
out
sbb
leave
hlt
data16
jmp
lcall
data16
xchg
push
andl
test
inc
and
aad
loop
sbb
mov
out
add
in
int3
fsubs
rcrl
je
in
popa
cmp
sbb
push
das
xchg
das
cmp
pop
mov
int3
or
inc
sbb
inc
int3
movsb
into
jl
out
filds
out
outsl
and
js
mov
pop
cs
pop
popa
or
jl
je
lcall
imul
dec
out
in
lea
popa
cmp
adc
es
and
or
popa
out
xchg
in
pop
cmp
pusha
leave
jns
push
and
das
ficoml
inc
mov
inc
xchg
xchg
adc
inc
cmp
push
js
aam
sbb
int3
stos
pusha
pusha
pop
mov
sub
ja
loope
push
sbb
es
and
outsb
ss
mov
jge
test
popf
loopne
cmp
fsub
mov
cmp
bound
ret
repnz
ret
and
adc
sub
sub
mov
popa
out
cld
in
pop
stos
int
loopne
out
mov
fistl
shlb
incl
dec
cmc
jns
mov
insl
cmp
lds
dec
and
aaa
lret
cmpsb
xchg
bound
movsb
dec
cwtl
mov
pop
mov
jbe
bound
popf
inc
sub
pop
lret
cmpsl
shll
out
int3
rcrb
mov
xlat
out
and
shll
rolb
add
adcb
sbbb
ja
or
push
fidivs
and
nop
shrb
xor
mov
push
imulb
popf
cmp
popa
or
inc
rcl
lods
adc
popa
loopne
leave
cmp
pop
aaa
push
add
enter
paddsw
fistl
push
add
add
or
pop
dec
das
inc
pop
je
sti
popf
mov
inc
test
lock
roll
sub
hlt
adc
icebp
cmp
jle
lcall
add
jbe
ja
mov
ds
push
and
sbb
and
mov
pusha
jnp
notl
or
add
in
shl
stos
popf
sub
or
add
shl
mov
or
fnstcw
jno
rcr
push
add
ljmp
pop
jbe
lahf
insl
xlat
add
js
je
bound
mov
insb
or
imul
jle
mov
or
push
cmp
mov
fmuls
arpl
shlb
insl
movsb
and
loopne
not
and
inc
lods
push
dec
lcall
pop
xchg
arpl
add
repz
sub
lods
xchg
push
cltd
js
sbb
jb
xlat
jne
pop
dec
xor
sub
sub
add
out
scas
xlat
inc
sbb
jns
js
dec
fsubl
pop
and
jo
sbb
inc
adc
dec
push
push
arpl
sbb
push
lcall
lods
xor
xchg
add
or
ficompl
add
cld
insl
lods
add
sub
or
jmp
lret
jp
mov
jg
and
call
inc
push
scas
aaa
add
stos
and
bound
aaa
ret
fwait
int
jne
fstpt
pusha
sbb
mov
out
inc
add
push
and
arpl
testl
pop
sbb
and
int
into
les
inc
cmp
or
dec
jp
dec
dec
mov
jnp
aad
push
push
mov
jo
iret
dec
test
xor
push
or
sub
adc
popf
js
inc
inc
mov
loopne
sbb
pop
iret
push
divl
dec
sub
clc
xor
adc
or
mov
xorl
push
add
fadds
pushf
pop
pop
add
cmpsl
movsl
sahf
mov
xor
xlat
ja
pop
cwtl
pop
shlb
xor
in
ficoml
ret
xchg
cmp
aaa
push
ret
repz
jo
cmpsl
or
sahf
pop
push
je
test
mov
pop
dec
xor
ret
sub
lahf
ror
add
dec
add
scas
js
pop
movb
mov
mov
js
dec
or
pop
nop/reserved
loop
push
into
push
dec
mov
fildll
jne
das
add
enter
repz
mov
and
lret
mov
in
test
popf
imul
pop
push
add
je
in
adc
pop
mov
nop
dec
inc
or
stos
bound
ret
push
incl
lea
and
push
dec
scas
pop
pop
and
lds
loop
lods
mull
xor
lods
aam
movsl
push
inc
fdiv
sub
test
push
dec
push
pushf
mov
test
fists
cmp
andb
mov
xchg
jp
push
ret
xchg
xor
lcall
adc
or
das
lock
outsb
ror
das
xor
addr16
push
cld
pop
inc
push
lods
push
roll
push
inc
jmp
popa
push
imul
nop
andl
mov
pop
xchg
xor
mov
xchg
lods
ret
and
fcoms
jno
adc
lcall
testl
scas
repz
push
cli
or
push
jno
dec
imul
ret
cmp
cmp
cld
pop
int3
cmp
pop
daa
int
sbb
push
push
bound
jnp
add
sub
aaa
jp
js
add
sbb
dec
es
push
or
inc
jbe
pop
or
jle
movsb
outsb
pop
in
xchg
push
inc
movsb
push
mov
in
or
pop
and
and
into
mov
out
clc
insb
or
jg
cmpsb
out
add
and
daa
adc
pop
shll
orb
jno
jecxz
cmp
test
cmp
pop
push
imul
out
add
mov
and
sbb
fldcw
cmpsb
mov
sbb
sti
bound
ljmp
shlb
xchg
inc
and
xor
adc
ja
xchg
stos
sub
cltd
mov
push
cmp
scas
jb
in
inc
sub
and
ja
cmp
xor
adc
lea
mov
push
popf
mov
pop
das
lea
sub
push
or
xor
inc
and
outsb
bound
jmp
lock
data16
cmpsl
mov
dec
and
mov
inc
lret
rcll
or
in
push
add
add
call
cmp
add
mov
pop
dec
lret
loopne
push
lcall
shll
sbb
ficompl
dec
es
lock
push
out
mov
pop
push
lock
pusha
adc
loop
jo
adc
mov
or
jbe
mov
cmp
int3
and
addb
or
movsb
pop
ss
pusha
je
push
ficompl
pop
xchg
shr
and
jns
aaa
sbb
cs
push
sbb
dec
or
shrb
and
sub
mov
fisttpl
lret
jl
scas
popa
or
subb
push
cmc
sbb
sub
nopl
mov
dec
loop
push
fiadds
sbb
jp
outsb
pop
jns
test
mov
cs
inc
out
and
enter
loopne
add
mov
pop
xor
out
push
ss
movsb
xchg
cmp
es
sbb
cmp
pop
jp
inc
cmpsb
push
mov
js
push
pop
and
mov
sbb
call
clc
inc
or
lock
pop
data16
jnp
push
add
sbb
and
mov
shrl
fstpl
ret
int
push
daa
sbb
out
sub
push
and
ss
and
lahf
and
pusha
mov
push
push
push
scas
sub
test
sbb
dec
and
cmp
inc
hlt
sbb
lea
loopne
enter
loopne
ja
dec
je
and
xor
push
wrmsr
and
jle
pop
cmpb
sub
mov
and
mov
mov
in
and
jle
ds
mov
jle
jp
shll
sub
jmp
test
ret
dec
pop
in
stos
add
mov
loopne
lea
cli
add
inc
sbb
dec
push
cmp
pop
mov
iret
push
add
mov
aaa
pushf
xchg
shrl
jnp
in
out
test
push
leave
in
shll
push
leave
rclb
push
push
mov
out
cmp
jge
push
sbb
sub
loope
xchg
je
loopnew
xor
sub
sbb
cmp
push
sub
pop
cmp
mov
xor
popa
jbe
adc
push
scas
sahf
aaa
push
in
sub
adc
fldenv
es
in
jmp
imul
mov
cmp
push
jl
cltd
lret
lds
das
movsl
and
mov
je
mov
icebp
dec
test
popa
pop
push
mov
clc
clc
mov
fs
or
test
pop
rolb
mov
sub
and
into
mov
scas
sbb
mov
hlt
out
ds
in
and
push
push
ds
pop
ret
xchg
add
insl
test
lahf
addb
les
jb
leave
divl
or
jo
or
and
and
sbb
cmp
sub
mov
mov
std
nop
dec
aaa
mov
push
cmp
arpl
cmpsl
add
jnp
mov
push
ret
es
push
pop
add
mov
sub
inc
ja
je
xor
adc
loopne
and
loope
jp
sbb
rcrl
test
cli
fbld
mov
mov
out
sbb
mov
mov
pop
or
pop
mov
mov
or
movsb
lods
push
cltd
test
cmp
xor
dec
cmp
je
jae
fists
or
imul
add
xchg
bound
rcrl
lods
inc
xchg
mov
push
push
sub
sbb
das
mov
mov
popa
add
loope
out
scas
loope
das
sub
sub
pop
or
cmp
fdivrs
jnp
jmp
sti
pusha
inc
xlat
scas
inc
cmp
sarb
int
sbb
mov
daa
mov
fucomip
jg
push
cmp
in
jb
push
stos
cmp
lods
loope
es
pop
fcom
or
sub
pop
or
fmuls
ss
push
add
sub
insb
push
aam
add
addb
out
data16
fildl
lods
insb
dec
push
mov
push
cmpsb
mov
adc
push
and
scas
push
and
notb
movsl
jb
jns
add
or
inc
push
aad
mov
xor
sub
js
cmpb
or
scas
gs
fildll
mov
jnp
mov
daa
add
aaa
mov
shll
pop
sti
adc
jle
push
jbe
inc
or
jl
sub
push
sbb
hlt
add
jbe
das
call
push
fsubrl
and
or
lods
lods
xchg
push
sub
clc
cmp
xchg
lds
jg
test
shll
popa
adc
lret
xor
add
jno
pusha
pop
imul
cmp
add
das
inc
mov
push
inc
and
daa
or
cmp
sub
aaa
test
lods
pusha
in
ror
mov
test
sub
or
gs
xchg
insl
push
xchg
outsb
or
in
imul
test
sbb
out
jmp
push
mov
shrb
cmp
add
sub
xchg
jae
das
jp
leave
shlb
lahf
mov
xchg
dec
fs
inc
lods
stos
adc
outsb
mov
iret
adc
mov
lret
aaa
movsb
dec
pop
sbb
js
mov
ret
shlb
in
or
cmpsb
or
push
dec
push
xor
xchg
add
adc
rorb
popf
push
dec
cmpb
popf
outsb
cmc
hlt
xor
xchg
mov
cmpb
mov
lods
repnz
jns
es
add
loope
lret
dec
xchg
dec
jo
mov
pop
xorb
xchg
pop
cmp
lods
inc
cmp
iret
inc
mov
pop
movl
stos
pushf
push
jge
mov
sbb
insb
add
dec
incl
sbb
and
rep
xor
or
sti
jl
push
cmp
lret
jb
loopne
fimull
fisubl
sbb
fsub
mov
inc
cmpps
in
cmp
push
xchg
mov
test
xorb
jle
ret
or
mov
daa
jg
pop
add
push
jno
push
and
and
push
xor
fisubl
xor
in
daa
fs
out
xor
into
rcr
stos
push
xor
jbe
mov
inc
mov
cmp
in
iret
push
xlat
pusha
inc
in
jle
and
dec
fdivs
hlt
in
dec
mov
mov
inc
mov
aam
fbstp
movsl
xor
das
fdivl
adc
shr
loopne
enter
jno
jnp
sbb
stc
into
mov
xor
add
jecxz
rcrl
outsl
fmull
cld
jecxz
add
or
jno
mov
rcll
or
stos
jl
fistl
add
ficompl
or
push
push
orl
stos
repz
and
xor
ss
push
ja
push
outsl
dec
sahf
inc
sbb
adc
pop
sti
pop
mov
xchg
push
jmp
mov
add
lods
mov
fsubp
jmp
iret
add
push
jmp
lcall
cld
fbld
adc
les
mov
fcoms
out
leave
lock
mov
fs
mov
test
scas
fxch
mov
jo
or
dec
stos
inc
jne
notl
mov
pop
in
mov
rcr
cwtl
pop
sbb
in
jno
and
daa
ds
add
mov
jge
pusha
mov
cmp
pop
sbbl
mov
mov
add
sub
ret
sbb
cmp
or
movsl
xchg
iret
inc
in
or
movsb
sar
jne
stos
push
push
stc
test
nop
shl
lahf
lods
pop
and
sub
lods
imul
aam
xchg
out
out
adcb
adc
jo
je
dec
lcall
inc
arpl
jbe
andl
fs
adc
and
push
divb
fiadds
fimull
in
xor
pop
fs
sub
xchg
fistl
dec
pop
or
push
shr
pop
sub
lcall
testl
sub
xor
add
jno
add
pop
mov
or
popf
and
push
lock
in
std
sar
std
mov
movntps
loopne
scas
sbb
andb
test
add
aas
pop
mov
aam
test
pop
fidivl
aad
and
xor
fs
adc
adc
ficoml
lock
cmpsb
push
lock
mov
push
add
lods
das
push
out
or
cmp
sub
daa
mov
shld
cmc
xchg
sbb
push
pop
ljmp
add
mov
bound
negb
popa
and
mulb
mov
gs
out
adc
adc
pop
xor
fisttpl
jecxz
sbb
stos
ja
adc
loop
and
das
jp
out
push
loope
das
movsl
fcom
insl
sbb
xchg
inc
lock
popf
add
and
fs
xor
rorb
orl
jg
lods
sbb
adc
fnstcw
outsb
push
pop
scas
push
cld
add
imul
mov
scas
lcall
fistl
iret
and
movsl
jbe
mov
dec
add
or
adc
movsl
adc
inc
cmpsl
mov
adcb
imul
add
gs
pop
xchg
lods
les
test
and
add
sub
add
jns
and
mov
les
loop
adc
arpl
std
xchg
mov
mov
fsubl
gs
or
push
xchg
cmc
mov
mov
xor
loopne
jo
sub
adc
fisubl
lods
ret
or
dec
or
mov
sbb
es
dec
cmp
loope
xor
cmp
or
adc
xor
popl
or
ret
adc
mov
in
cltd
mov
dec
mov
outsb
dec
sti
mov
iret
jno
mov
or
insb
lds
imul
push
out
cltd
lds
dec
leave
ret
mov
sbb
push
dec
add
test
ret
adc
addr16
neg
pop
xor
mov
das
xchg
push
data16
das
xchg
mov
push
mov
ret
mov
scas
dec
mov
pop
jmp
pop
insb
das
mov
lods
sub
cmpsb
popa
jmp
pop
out
sbb
sub
mov
in
jl
jge
push
mov
arpl
add
out
mov
test
aaa
xchg
aam
pop
flds
sbb
gs
add
push
cmp
test
adc
push
sub
sbb
scas
and
icebp
mov
and
pop
leave
es
jae,pn
xor
and
bound
popf
in
push
scas
pop
sub
adc
mov
add
clc
loope
or
pop
jne
movsl
andl
inc
rol
divb
and
es
xchg
mov
pop
lds
fwait
inc
or
xchg
cmc
sbb
in
outsl
mov
scas
es
cs
psllw
add
outsl
fstps
xor
push
gs
jo
sub
fldt
add
aam
inc
xor
lods
sub
ss
xor
mov
mov
inc
out
inc
or
rorl
xor
push
popf
and
cs
xstore-rng
cmpsl
sbbl
inc
lods
or
test
add
sbbb
ror
and
sub
dec
js
push
insb
cmp
loope
das
push
jg
mov
int3
test
mov
add
pop
insb
jmp
xor
and
dec
jnp
loop
les
popf
jl
or
shlb
xchg
cmp
dec
call
pop
js
or
insb
and
xchg
scas
mov
or
push
add
xlat
and
dec
xchg
in
sub
js
roll
and
sbb
xor
mov
sub
push
mov
add
jb
cmp
or
mov
cltd
jp
pushf
push
inc
sbb
inc
and
add
adc
add
nop
jno
adc
lahf
xchg
or
sub
dec
inc
out
shlb
or
add
mov
es
out
in
inc
lret
push
outsl
sub
inc
fnsave
mov
dec
daa
dec
adc
out
push
pusha
stos
mov
sub
xchg
and
add
cmp
jb
mov
mov
stos
fwait
add
shlb
shll
and
mov
push
fnstenv
cwtl
bound
dec
adc
mov
mov
sub
mov
lahf
mov
push
mov
lret
shll
push
sub
adc
adc
or
outsb
cmp
sub
mov
add
ret
out
cmpsl
loope
movsb
loopne
in
leave
outsb
je
pop
add
sahf
pop
sbb
andl
adc
add
nop
inc
add
lahf
sub
cmp
fwait
mov
aam
or
or
jno
xlat
aaa
inc
repz
andb
jb
pop
idivl
adc
mov
outsl
shl
mov
dec
mov
movsb
sub
xchg
mov
add
pop
stos
cmpsl
aaa
pop
mov
lods
jo
cmpsl
test
popa
inc
pop
scas
add
pop
adc
pop
lock
adc
je
mov
pop
outsb
das
pop
sub
sub
inc
pop
and
frstor
adcb
add
lret
lock
add
popa
out
fcmovnb
or
fstpt
in
mov
fsubrs
jle
stos
xchg
fsts
push
aaa
push
or
add
push
jns
jne
inc
iret
mov
adc
xor
pushf
adc
cmpsl
cmpb
in
or
cmp
mov
sub
cs
and
push
out
lea
arpl
push
pop
inc
movsb
jecxz
leave
sarb
pop
pop
inc
sbbl
daa
jp
in
dec
or
outsl
lahf
std
iret
into
jno
ljmp
xor
mov
sarb
xor
iret
sbb
push
add
sub
jbe
jo
adc
push
add
cmp
cmp
ljmp
sbb
sub
pinsrw
push
sub
xchg
push
aam
inc
lods
push
inc
fdivrs
mov
movsl
hlt
or
xor
and
mov
add
icebp
dec
outsl
jmp
xor
sti
ljmp
sbb
jmp
ret
enter
jge
out
xchg
and
pop
adc
fisubs
mov
lock
nop
push
mov
adcb
mov
or
mov
jle
push
xchg
iret
sub
sbb
push
dec
rcrb
jbe
aaa
xchg
lock
mov
sbb
fucomi
mov
mov
rolb
dec
pop
sysret
sub
cwtl
cmp
mov
stos
add
sbb
jge
inc
cmp
movsb
fidivrs
jae
or
aam
repz
xor
mov
int3
sub
push
inc
insb
push
not
adcb
arpl
leave
fimull
imul
xchg
mov
add
xor
sub
movsb
jecxz
mov
sub
cmpsb
lret
xlat
xchg
xchg
cmp
in
adc
lcall
sbb
sub
movsb
dec
push
or
stos
add
and
xchg
rol
fsubrp
jb
andl
loope
rclb
rorb
lret
mov
adc
loope
pop
or
adc
add
pushf
xchg
loopne
pop
or
mov
sub
ret
push
push
sub
aad
mov
ffree
out
insl
and
xor
nop
lret
add
pop
loopne
jl
xor
mov
daa
pop
enter
jno
js
fldl
add
ficomps
dec
push
sbb
rcpps
push
rolb
cmp
popf
ret
shll
loop
shlb
fldl
add
or
repz
adc
mov
sbb
sub
andb
sub
sub
sub
lock
add
or
push
aaa
or
stos
add
or
pop
or
rcll
shrb
xchg
sbb
inc
fisttpl
or
xor
adc
js
add
andb
jnp
mov
jnp
sbb
arpl
int3
mov
mov
cmp
sub
imul
or
and
daa
push
mov
rol
bnd
cmpsb
mov
pop
dec
jecxz
movsb
add
sub
dec
leave
cmp
push
sbb
cmp
out
mov
imul
pop
push
add
add
cltd
das
leave
sbb
pop
leave
mov
scas
bound
sbb
jb
loopne
inc
or
adc
das
test
xchg
and
cld
pop
sbb
sbb
das
pop
aas
inc
dec
shll
ja
sub
jnp
arpl
loopne
sbb
xchg
xchg
jmp
jge
bound
gs
adcl
cmpsb
inc
sbb
sbb
jo
dec
aas
cwtl
jge
pop
dec
lods
movsl
mov
jmp
add
and
or
push
jno
jle
fwait
in
pusha
aas
sbb
add
add
pop
cmc
rclb
fsubs
push
dec
sbb
xlat
adc
je
jnp
mov
enter
test
rorb
ret
cmp
or
push
xor
cmp
in
cmp
into
mov
mov
bound
in
hlt
jg
js
mov
jne
shlb
inc
std
movsl
pop
pop
stos
icebp
sub
fstpl
mov
adcl
outsl
outsb
mov
test
pop
imul
mov
daa
add
or
daa
adc
sarb
hlt
out
dec
mov
mov
shll
rorb
test
sub
mov
jg
icebp
pop
fs
cmpsb
hlt
cmp
and
jb
testl
test
jecxz
out
sub
add
adc
and
es
fcoml
pop
loope
jmp
shlb
push
test
push
mov
adc
dec
add
inc
in
inc
add
xchg
xlat
jo
jo
loop
das
lods
daa
call
pop
cmp
cmpb
fsubr
cs
jg
push
orb
sbb
add
enter
popa
add
push
ret
and
addl
xor
inc
fadds
ja
xchg
testb
pushf
cmp
mov
jl
lahf
mov
add
push
and
mov
lret
inc
cmp
out
dec
icebp
add
pop
xrelease
lds
sbb
mov
clc
lds
pop
push
stos
cmp
adc
hlt
sbb
xchg
test
adc
cltd
jo
orb
mov
pop
pop
jge
fadds
loope
aad
pop
sbb
notb
and
add
lock
lea
add
pop
addl
sbb
leave
imul
dec
bound
cmc
ret
das
and
adc
ret
add
push
lock
aad
shr
xchg
mov
lea
dec
jnp
jg
mov
add
push
pop
pop
ss
icebp
jae
adc
add
cli
nop
or
add
ljmp
add
push
adc
xchg
cmp
add
jb
fildll
jo
int3
das
pop
fmull
xorl
push
and
loope
and
push
inc
pop
and
shrb
xor
cmp
aas
or
adc
ss
xchg
ja
sbb
test
flds
js
ret
pop
stos
pop
jo
cmp
or
lods
sbb
into
add
ret
test
fs
out
test
cmp
loop
sub
or
jl
adc
mov
test
and
aad
push
push
push
xor
xor
cwtl
pop
push
dec
les
dec
jl
jne
lock
test
pop
and
pop
mov
inc
mov
pop
adc
dec
jmp
mov
and
xchg
ja
ss
pop
sbb
add
jbe
push
adc
shrb
addr16
xor
sbb
xchg
pop
pop
das
and
mov
mulb
sarl
nop
add
push
mov
or
push
jno
lock
push
loopne
add
pop
out
shll
gs
aad
outsl
xorb
jae
sub
rolb
shll
jae
cmp
dec
inc
xor
mov
or
addb
add
mov
je
imul
jecxz
lock
ja
add
sbb
cmp
nop
loop
subl
imul
push
sbb
bound
mov
and
adcl
repz
and
push
test
rcrb
aad
push
push
enter
insb
stos
jno
lret
addr16
call
xchg
ror
adc
ret
lods
in
cmp
mov
in
stc
adc
push
ds
and
jecxz
and
sub
mov
adc
or
push
push
jbe
add
jg
push
insb
push
test
cmpsb
popl
ss
shrl
sub
fdivs
cs
lea
rorb
jne
inc
xlat
cmp
roll
or
jg
pop
dec
fldcw
aaa
cwtl
jecxz
cmpb
rcrb
inc
addr16
xchg
fisubs
bound
fiaddl
je
pop
cltd
je
add
mov
add
xchg
int3
jo
jne
dec
push
sub
xchg
test
popa
ja
test
shrl
xor
aas
cmp
jno
push
movsl
lds
call
jae
mov
inc
dec
out
iret
ret
xchg
les
lret
paddb
popa
cmpsl
das
pop
stos
or
not
loope
xor
stos
jno
and
inc
or
sbb
pusha
es
jns
sub
add
jge
fs
pop
and
push
cmpsl
ret
pop
ljmp
dec
mov
mov
pop
test
or
sbbl
pop
aad
out
lahf
arpl
cmpsl
add
arpl
cmp
cwtl
pop
je
sub
adc
movsl
scas
sbb
lea
cltd
cmp
mov
hlt
and
aam
cmc
outsb
movsl
inc
jecxz
int3
lods
test
cmc
mov
test
or
test
int
cmpsl
loope
dec
js
les
or
mov
push
cmp
rcll
xor
add
mov
jno
in
inc
dec
and
cs
sbb
add
ficoml
aam
leave
lock
dec
fstpl
pop
test
sbb
inc
jl
dec
dec
imulb
jno
ja
sbb
sub
popf
addr16
inc
call
dec
and
push
or
jo
jb
sub
es
shl
or
out
divl
jp
stos
fs
adc
scas
pop
sub
lods
lock
scas
ret
adc
pop
pop
insl
xchg
cmp
fimull
dec
add
cmpb
and
jo
es
sahf
push
inc
inc
mov
popa
mov
adc
pop
cmp
xlat
pop
bound
ret
jae
xlat
in
iret
or
pop
or
dec
inc
or
fcomps
jmp
push
fnstcw
jne
lods
and
ret
pushf
addr16
xor
call
push
push
mov
js
daa
xor
push
out
nop
subb
stos
mov
lahf
jl
mov
fldln2
push
cmpb
popa
pop
shlb
sbb
mov
sahf
dec
ret
outsb
mov
mov
xchg
push
stos
sub
sahf
or
in
out
pushf
mov
ret
sub
bound
or
jmp
push
mov
imul
or
jo
add
and
pushf
leave
push
push
lods
dec
daa
cmp
inc
push
adc
jmp
or
ds
lods
xchg
xor
dec
mov
cmpsl
mov
es
mov
jno
mov
lahf
jmp
out
roll
mov
mov
cmp
add
pop
sbb
testl
cmp
inc
jo
and
test
adc
popa
mov
jl
out
js
scas
in
push
cld
add
sbb
push
pop
sbb
or
aas
imul
lahf
mov
jbe
pop
mov
ja
xchg
inc
or
jo
or
lcall
inc
outsb
add
lods
lock
adc
push
and
int3
inc
xchg
lods
adc
repnz
cmp
jns
mov
cmpsl
pop
xchg
pop
lret
cli
or
or
gs
pusha
cmpsl
imul
movsl
xchg
aas
aam
imul
pop
fcomp
int
add
cmp
adc
inc
pop
add
pop
lock
andl
and
and
mov
mov
js
push
ret
pop
mov
lds
push
pop
push
aaa
cmpsl
mov
xorl
ss
arpl
pop
dec
mov
bound
xor
insb
sub
les
ss
xor
call
adc
pusha
int3
sbb
jge
test
xor
xor
aas
push
adc
fcoms
sbb
loopne
push
and
add
cli
or
sub
cwtl
aaa
jecxz
sbbb
pop
adc
pop
cld
mov
jecxz
insb
das
cltd
xchg
hlt
dec
pop
ja
scas
mov
movsb
ss
sbb
into
sbbb
sahf
pop
sbb
shlb
add
aad
inc
xor
mov
dec
pop
fs
bound
xor
add
inc
cld
test
movsb
dec
mov
out
andb
lea
pop
add
sbb
test
rcl
pop
dec
dec
lods
call
adc
sub
bound
je
jbe
lods
or
aam
scas
add
inc
pusha
jo
cmp
or
mov
pop
mov
sarb
mov
mov
out
push
bound
mov
std
and
lods
xchg
xor
adc
mov
test
iret
scas
push
daa
add
sbb
mov
ja
repz
push
pop
out
cmp
test
cwtl
sub
lea
ss
aad
jnp
jg
popa
pop
imul
push
sub
xchg
or
xchg
jo
loope
inc
or
imul
cmc
lods
push
aaa
int3
add
add
adc
and
or
mov
sub
mov
movsl
cmp
xchg
out
sub
shll
gs
loope
jl
sub
cmp
xchg
adc
inc
or
or
pop
and
inc
sub
cltd
aad
push
popa
insb
jnp
push
outsb
nop
xchg
xchg
loopne
add
lret
pop
js
dec
pop
mov
in
pop
add
std
push
push
jne
je
sarl
jae
mov
fwait
iret
dec
lcall
scas
push
movsl
xchg
ret
iret
mov
imul
fs
pop
inc
movsb
rcll
pop
aaa
sbb
or
insb
dec
loop
or
fxch
pusha
or
sub
pop
xchg
out
pop
out
mov
les
add
jecxz
insl
xchg
xor
lcall
data16
loopne
out
sub
dec
ja
sbb
adc
int3
adc
inc
loop
push
and
jl
mov
in
sbb
loope
subb
add
xchg
rolb
repnz
out
lds
xchg
in
xor
add
cmp
sbb
out
lods
andl
imul
shrl
data16
test
cmp
nop
ret
jmp
xchg
dec
es
mov
cmp
loopne
lods
orb
lcall
and
inc
add
fistl
je
push
loop
cmpsl
scas
bound
sti
lock
jle
xor
xor
lret
add
cmp
aas
pushf
xor
push
popa
lods
cmp
jmp
cs
mov
and
sub
lahf
rol
inc
mov
jo
jge
add
and
sbb
mov
ret
inc
aas
pushf
or
pusha
insl
popa
jae
ror
add
loope
push
out
pop
popf
pop
es
add
add
pop
dec
adc
cwtl
mov
into
in
movsl
cmp
or
pop
add
or
fidivrl
sbb
roll
jo
loop
enter
bound
add
jae
mov
inc
cmpsl
xorb
xor
fmuls
inc
add
or
cmp
outsl
add
sub
add
jle
pop
sbb
pop
ja
loope
sarl
add
loope
cwtl
jne
test
jb
sbb
push
out
jae
ret
popa
xchg
into
lahf
lcall
cs
sahf
mov
dec
aad
das
xor
or
or
rcrl
arpl
js
inc
xor
mov
xlat
jge
ljmp
cmpsb
es
js
push
gs
jo
push
push
out
jne
cmpsb
sub
int
cmp
ret
add
sahf
push
cli
inc
mov
les
or
fwait
mov
loopne
or
add
cmp
or
std
hlt
fstl
add
test
dec
ret
dec
and
fs
ret
mov
fld
cmp
jl
popa
shlb
bound
rep
push
daa
mov
test
add
mov
add
ret
mov
push
jle
scas
clc
inc
dec
out
sahf
rep
popa
int3
add
icebp
mov
aas
jp
popf
rcrb
dec
add
sarl
sub
xor
pop
jo
or
rclb
add
push
pusha
psllw
test
and
lea
mov
jge
jne
xchg
pop
rclb
in
xchg
mov
or
adc
add
and
push
ds
sub
sbb
fiaddl
orb
push
icebp
or
jecxz
cs
in
out
cli
sub
scas
add
sbb
pusha
mov
xor
sub
ret
icebp
inc
sbb
xchg
push
mov
gs
data16
and
cwtl
add
pop
sub
cmp
mov
and
ss
adc
push
popf
iret
enter
pop
pusha
stos
inc
mov
and
movsb
out
push
jmp
mov
dec
cs
xor
jo
movsl
dec
sbb
mov
fs
push
lea
rcrb
xor
pop
mov
jo
rolb
jmp
jo
cmc
out
daa
sub
jmp
adc
je
sbb
jl
loope
lods
ss
lea
mov
cwtl
sub
bswap
dec
sbb
mov
add
ds
rol
aam
lcall
xor
mov
insl
xchg
js
push
pushf
push
jecxz
in
subb
mov
or
sbb
rcl
xchg
imul
ret
cwtl
xchg
nop
xchg
pop
mov
jae
das
jl
adc
cli
out
cwtl
or
les
mov
mov
sbb
ds
aam
enter
stos
aas
scas
jg
adcl
fiaddl
sbb
mov
or
into
fcoml
add
pop
dec
lock
test
and
pop
jge
xor
pop
ss
mov
push
inc
add
pop
xor
add
dec
jb
test
dec
jo
stos
mov
cmc
pop
int
shlb
aad
xchg
xor
xchg
sahf
sbbb
inc
loopne
push
mov
mov
pop
fisubs
mov
push
pop
or
add
cmp
sti
in
or
data16
mov
dec
add
push
jecxz
js
or
fisttps
imul
pop
sbb
into
int3
jo
pop
mov
xchg
push
sbbb
sub
add
daa
cmp
add
inc
mov
push
xor
adc
push
mov
xlat
aad
jmp
mov
ds
arpl
mov
adc
fwait
cwtl
das
mov
cmpsl
lahf
sbb
add
test
add
aaa
scas
xlat
and
fs
jg
lret
jo
mov
fcmovne
xor
lret
popf
icebp
dec
cltd
add
add
add
cmp
and
mov
cmpsb
xor
adc
lret
fiadds
push
cmpsb
lret
mov
jmp
add
testl
stos
mov
andl
aaa
stos
inc
jl
inc
cmp
xor
or
or
mov
mov
or
dec
or
cmp
nop
adcl
cmp
xor
cmp
jmp
divb
cmp
pop
shrl
sub
fisubs
mov
pop
andb
pop
push
or
mov
dec
xchg
test
xorb
pop
add
loopne
ja
adc
and
mov
shll
fsubr
and
push
fsub
add
leave
pop
sbbl
iret
dec
jecxz
testb
imul
mov
pusha
add
mov
cld
xchg
cwtl
sbb
add
lea
cli
pop
mov
dec
sub
test
mov
mov
cmc
and
popf
xchg
fnstsw
cwtl
jo
shlb
test
pushf
ja
or
dec
dec
pop
idivl
cmp
pop
imul
cmp
sbb
add
adc
imul
in
xchg
jecxz
stos
aas
test
fs
push
xchg
or
sahf
mov
lea
mov
cli
and
lods
sub
dec
cmp
push
imul
data16
add
cmp
or
imul
lret
xorb
pushf
incl
add
add
pop
into
pop
int
cmp
adc
jl
or
sbb
xor
in
popf
xrelease
xlat
sarb
and
fst
lret
sub
daa
sbb
fwait
sbb
mov
sbb
pop
and
xchg
pushf
mov
mov
jo
pushf
add
jmp
sub
or
dec
inc
sub
sub
push
stos
fists
fsubrs
xchg
and
adcb
decb
mov
cmc
xchg
xchg
pop
jno
dec
popl
das
xchg
or
lods
js
clc
hlt
lcall
add
fadds
cli
and
sbb
and
jo,pt
xor
cwtl
push
fcmovb
add
sbb
je
pop
or
pop
sbb
mov
roll
sub
pop
les
xor
sti
xchg
js
cltd
xchg
test
xor
inc
xchg
cmc
gs
iret
cmp
xchg
dec
xorb
and
cmc
hlt
inc
int
cmp
jl
iret
in
jle
push
ljmp
pop
push
inc
loopne
mov
pop
pop
add
adc
inc
bound
xchg
popa
loope
xchg
repnz
test
xchg
add
cmp
mov
mov
popa
out
and
lahf
cmp
fwait
dec
xorl
sbb
mov
sbb
sbb
mov
out
gs
loopne
inc
rol
xor
and
cmpsb
push
pop
lods
js
shlb
pop
sub
cmp
popf
test
mov
xor
ss
mov
pop
unpcklps
test
jns
add
das
stc
push
sub
push
pop
dec
sbb
inc
mov
add
rcll
jbe
jnp
in
into
xlat
dec
cs
xchg
jo
dec
cmp
add
outsl
dec
xchg
call
dec
inc
mov
dec
daa
aas
jo
cmp
mov
add
or
and
dec
sub
dec
mov
jge
xchg
mov
js,pn
xlat
in
inc
sub
adc
cmp
es
xor
mov
rorl
pop
jbe
sbb
fs
jb
sbb
jnp
mov
jno
push
pop
sbb
data16
add
or
hlt
and
and
outsl
es
scas
jnp
push
movsl
imul
jne
xor
sub
cmp
push
add
outsb
add
mov
sub
call
out
pop
cli
rclb
mov
lret
sub
cmp
jo
scas
or
pop
fdivrs
push
frstor
sbb
jb
cld
lods
insl
cwtl
dec
sub
add
int3
inc
imul
iret
sub
push
pop
jp
cmp
fsubrl
repnz
and
loope
xorb
lods
stc
pop
divb
icebp
imul
cs
rcll
ds
lea
icebp
lods
jbe
pop
cs
sbb
repnz
inc
insl
out
mov
adc
xor
and
pusha
mov
sub
pop
dec
sbb
call
cli
sub
jle
mov
inc
fcmovnu
push
pop
testb
sti
inc
aam
and
shlb
popa
mov
sbb
adc
cmp
aad
imull
inc
mov
pop
lret
adc
ja
imul
popa
jno
mov
sbb
outsl
push
sbb
push
les
mov
lahf
jmp
das
iret
sub
pop
stos
outsl
das
push
jbe
jl
push
add
into
push
dec
sbb
cwtl
sub
scas
das
dec
mov
iret
mov
and
addl
push
add
fsubrp
sbb
js
jo
or
sbb
xchg
popa
cli
or
inc
mov
jmp
cmp
ret
add
ret
xchg
sub
mov
imul
andl
and
sbb
mov
das
rolb
dec
push
cld
stos
push
lret
aam
adc
movsb
cmpsb
aam
inc
adc
imul
insb
sub
sub
add
jns
xchg
fwait
call
jg
cmpsl
movsb
pop
sub
pop
mov
or
js
bound
bound
fcoms
pop
repnz
add
xchg
lret
test
pop
insb
inc
or
scas
xchg
sbb
leave
in
das
dec
sub
push
int
pop
hlt
mov
jns
aaa
jge
adcl
outsl
fdivrl
femms
inc
int
lock
xchg
addl
rclb
pop
and
xorb
jnp
sarl
push
testl
loop
push
and
push
cmp
movsb
cmpsl
sbb
out
fsubs
test
add
outsl
add
mov
add
subl
pop
xorb
rcl
sub
cs
or
iret
mov
adc
pop
add
sbb
rcl
sub
inc
add
xor
leave
sbb
mov
movl
add
or
or
push
mov
mov
flds
cmp
adcb
repnz
and
mov
scas
jp
int
sbb
add
inc
or
shrl
scas
add
lret
lret
and
mov
or
out
or
mov
adc
or
adc
add
sbb
mov
sbb
push
iret
add
cmovb
sbb
add
add
push
stc
add
mov
rolb
lods
sahf
push
mov
ds
fldl
push
push
pop
push
fsts
sub
xchg
or
xor
fxch
push
sub
sti
mov
iret
add
cmp
or
inc
addb
add
jnp
or
sub
lret
je
mov
add
add
push
lret
add
and
xchg
and
sbb
add
pop
push
jle
dec
add
les
sbb
jo
xchg
scas
or
ficomps
js
andb
repz
or
scas
mov
mov
and
push
iret
gs
add
xor
sub
jecxz
dec
pop
pop
add
add
sbb
mov
push
add
or
or
xor
dec
daa
fnstsw
insb
push
movsb
or
add
int3
add
push
mov
ja
or
push
jb
out
jno
imul
ret
shll
add
dec
jl
or
inc
dec
jecxz
pop
pop
push
sub
pusha
add
test
punpckhwd
ja
andb
icebp
ljmp
xor
sbb
ja
push
xchg
mov
les
add
jecxz
das
aaa
add
sar
add
dec
push
lret
add
or
mov
adc
xor
sbb
aaa
mov
mov
or
xchg
cwtl
xor
inc
fstp
xchg
test
call
mov
pop
mul
sub
pop
or
jecxz
jge
sbbl
dec
imul
adc
and
outsl
or
sub
sbb
jo
cmp
das
add
adc
add
adc
fsubrl
dec
inc
sbb
sbb
mov
andl
mov
inc
shlb
add
add
push
sub
jno
dec
fmul
jb
test
inc
jmp
xorl
push
iret
sub
sub
or
out
sub
xchg
in
sldt
adc
push
ss
imul
dec
enter
add
test
jp
addb
inc
fnstcw
fsts
xchg
je
push
xchg
push
sbb
pop
scas
inc
cmp
fsts
sub
and
inc
rcl
in
mov
test
xorb
jbe
xor
je
xchg
sbb
frstor
jns
outsb
adc
add
inc
sbb
testl
in
mov
test
aad
xchg
cmc
add
mov
pop
sub
lock
loop
mov
das
push
pop
and
popf
mov
movsb
jmp
ss
ror
xchg
adc
lods
mov
scas
cmp
js
push
stc
cs
mov
or
push
lods
adc
shrb
jo
add
jbe
or
jae
mov
mov
jo
jl
sbb
idivl
sbb
push
aas
cmp
add
gs
data16
out
jecxz
push
xor
push
inc
ja
cmc
call
iret
dec
mov
icebp
loope
push
add
addb
push
dec
mov
mov
test
mov
addr16
dec
pop
dec
lods
retw
add
leave
pop
ret
les
adc
mov
xor
jl
xor
lods
mov
ljmp
mov
lahf
xchg
ret
loopne
jbe
xchg
xlat
lret
out
in
dec
push
ret
movsb
stos
inc
into
testl
jno
pop
scas
pop
loop
fwait
jge
sub
push
xor
flds
cmp
mov
daa
inc
xchg
lock
xchg
and
xor
push
sub
hlt
cwtl
dec
xor
enter
nop
and
mov
sub
pusha
adc
sbb
or
dec
jle
pushf
xchg
and
cmc
mov
xor
or
xor
jno
push
dec
mov
push
and
jbe
scas
add
cmp
stos
cmp
cmp
jno
push
mov
scas
and
push
int
ret
sub
nop
das
sarb
jno
push
mov
cltd
jnp
push
int3
enter
shr
inc
sub
enter
sub
jle
ja
into
rol
mov
into
je
xor
pop
sbb
jb
aam
push
stos
popa
sub
adc
daa
cmp
mov
or
clc
int3
icebp
inc
data16
std
inc
shlb
push
repz
gs
add
fldl
inc
pop
scas
clts
aam
mov
inc
add
test
iret
xorl
add
mov
sub
pop
mov
sbb
cmp
or
xchg
push
dec
push
divb
fsts
fs
or
sub
and
xor
pcmpeqb
jmp
xor
mov
or
pop
cmp
popf
jo
clc
mov
fwait
into
dec
testl
inc
js
bswap
pop
lret
test
lods
cmp
and
and
pop
cmpsl
stos
add
add
add
daa
rol
lcall
or
mov
add
jns
xchg
lret
popf
push
dec
xlat
cmp
lock
fadd
xor
dec
gs
add
lea
roll
or
xchg
add
sahf
into
les
add
rolb
das
mov
orl
adc
add
ljmp
cmp
dec
dec
pushf
popf
add
mov
fimull
ja
cmp
and
sbb
or
lahf
mov
adc
mov
pop
ror
cmp
or
or
fstl
xlat
bound
leave
rolb
adc
cmp
pop
mov
jno
pusha
fs
and
add
clc
frstor
lea
add
xchg
fistl
iret
push
test
pop
and
fwait
add
or
xor
pop
jp
loope
iret
loope
or
and
jns
cmp
xor
pop
test
scas
dec
sub
xor
and
sbb
sub
std
xchg
mov
push
cmp
jb
mov
push
out
cmpsl
or
fsubl
and
mov
add
fistpl
outsb
iret
xchg
mov
jne
add
loop
mov
das
push
pop
add
cmp
mov
adcb
sahf
sar
lods
bound
fistps
mov
xlat
cmpsb
dec
jge
or
fsub
cld
lret
xchg
jae
clc
and
or
cli
jae
in
add
fimull
int3
scas
inc
and
add
or
xchg
sub
add
and
or
push
mov
mov
mov
push
in
sbb
push
sti
inc
sub
loop
lods
rcrb
repnz
or
pop
loopne
pop
subl
roll
iret
cmp
push
sbb
into
fldl
xor
jo
push
cmpsb
dec
mov
and
cld
sub
sbbb
mov
ret
mov
subl
and
fnsave
mov
mov
push
push
and
and
add
fstpl
or
sahf
cmp
add
daa
add
jecxz
cmp
or
xchg
add
pop
and
pusha
add
imul
mov
dec
jae
loopne
ficompl
addr16
ret
fistps
fidivrs
jo
or
popa
adc
lret
movsb
mov
push
push
out
fimuls
jge
pop
adc
adc
jno
add
push
jecxz
stos
ljmp
mov
mov
add
push
movhps
inc
in
addr16
push
mov
xchg
pop
lcall
xchg
popa
das
cmp
rorl
pop
fcmovnbe
incb
es
andb
inc
sub
push
and
mov
bound
loopne
cmp
sbb
adc
adc
jo
out
push
and
out
and
inc
addr16
pop
inc
lods
or
shlb
jge
xchg
das
push
mov
mov
dec
negb
mov
sub
and
push
nop
mov
sbb
rcrb
jge
fdivl
add
xor
movsl
es
cltd
or
fs
insl
das
add
loopne
movsb
dec
push
cmp
es
lods
cltd
fisubrl
jbe
and
add
push
inc
int3
inc
cmp
xor
xlat
add
dec
ljmp
push
dec
popa
and
jb,pn
insl
and
jp
call
fsubrl
shlb
int3
loop
xor
jns
push
xchg
imul
mov
adc
sub
adc
pop
ja
mov
andl
inc
xorl
xlat
dec
or
mov
mov
xor
inc
loopne
xor
sar
ss
dec
sbb
sbb
or
dec
sub
mov
dec
jo
pop
jbe
xor
fisttpll
cmp
inc
cmp
je
outsl
loope
icebp
push
mov
gs
fldenv
adc
popa
test
pop
ja
xor
adc
add
int3
push
or
lods
and
add
bound
loop
lock
aas
mov
xor
gs
pop
movsb
sbb
sbb
aad
push
dec
sub
out
lock
pop
and
xor
in
mov
ja
in
pushf
mov
repnz
cmp
cmc
loope
push
shlb
sub
out
xchg
xor
ret
add
iret
lret
add
lock
or
xchg
push
fstpl
xchg
fs
shl
pop
inc
or
cmp
movsb
test
pop
shll
das
cmpsl
movsl
push
sbb
mov
je
and
mov
inc
icebp
mov
pop
cs
push
add
out
lods
xchg
and
jmp
test
lock
das
aam
pop
xor
and
clc
adc
inc
sub
decb
out
mov
pop
jne
pop
add
lock
gs
cmp
lret
adc
push
fnstsw
icebp
lock
loopne
mov
shlb
ret
mov
sti
clc
sub
and
mov
mov
aaa
popa
jae
lods
mov
cmp
cmp
ficomps
push
fcoms
fcom
or
push
sbb
and
mov
adc
mov
out
and
xor
arpl
rcr
inc
dec
xchg
mov
cwtl
subl
or
dec
add
in
outsb
loopne
loopne
push
mov
mov
das
out
sub
pop
mov
pop
in
out
in
fdivrl
repnz
xor
aad
pop
sahf
je
add
lahf
pop
faddl
sti
sub
stos
add
shrb
push
inc
xlat
shl
sbb
inc
jg
aaa
iret
xchg
aad
das
popa
add
pop
and
mov
lods
subl
fdivrs
nop
or
rolb
inc
push
mov
lods
jnp
inc
sti
sbb
adc
push
sub
ja
sbb
mov
jge
sti
ds
push
adc
mov
lea
jne
mov
daa
sub
ss
jns
lret
jbe
aaa
stos
sbbb
inc
adc
dec
jb
xorl
lret
rcr
mov
jns
movsl
or
test
fs
add
jp
pop
cwtl
and
andb
push
fmull
adc
dec
mov
jg
and
inc
aaa
xor
xchg
add
mov
add
loopne
add
lahf
test
or
and
pop
mov
clc
cmp
sbb
std
psubb
jo
xchg
scas
mov
pop
js
adc
cmp
push
add
add
ret
mov
je
sub
pop
add
lahf
ss
loop
or
movb
dec
stc
mov
dec
fists
pop
xor
jne
push
or
out
mov
test
shr
les
insl
or
xchg
mov
xchg
dec
push
scas
push
shlb
push
je
sbb
loop
movsb
in
cs
add
and
addr16
sbb
adc
inc
filds
mov
add
cmp
in
dec
scas
mov
push
das
add
flds
shlb
in
pavgw
add
push
xchg
pop
inc
jge
pop
movl
xchg
push
pop
dec
ja
push
imul
push
iret
pop
imul
adc
cltd
les
call
mov
xchg
ljmp
stos
and
sub
les
xor
out
nop
or
in
adc
and
jecxz
popf
fistps
inc
inc
loop
cmp
fucomp
sub
or
dec
loop
mov
push
cmp
cmp
push
cmp
data16
mov
movsb
test
ret
sahf
dec
cmpb
push
outsb
push
adc
test
jnp
rcrb
pop
inc
push
dec
pop
cmp
mov
inc
add
mov
in
aas
movsb
pop
and
dec
dec
sub
leave
js
push
leave
cmpsl
inc
mov
nop
jo
dec
shl
lock
inc
xor
jl
leave
fsubl
int3
sub
mov
pop
fidivrs
push
aam
mov
adc
cmp
push
pop
frstor
lock
mov
push
inc
push
and
mov
in
xchg
fadd
sbb
xor
xor
scas
insl
jl
ja
movsl
and
sbb
xor
cmp
ret
cmovo
dec
jmp
mov
xchg
dec
dec
lret
loop
mov
xor
mov
into
adc
pop
jecxz
ret
mov
je
rolb
dec
outsl
dec
inc
inc
rcrb
or
pop
and
test
popa
push
lret
sub
sbb
sub
ja
mov
xor
adc
int
popa
jae
mov
insb
mov
fstpl
mov
sub
loope
mov
mov
data16
loop
or
nop
jae
add
je
arpl
cwtl
sarl
jno
cmpsl
xor
pop
repz
jmp
cmpsl
movsb
rolb
pushf
and
fbld
cltd
add
adc
lods
loope
gs
sub
leave
pop
adc
jno
xchg
mov
and
push
inc
iret
cltd
lret
lcall
mov
inc
movb
addr16
and
pmaxsw
sbb
jp
adc
inc
into
lea
in
aam
add
arpl
add
loopne
xor
or
fwait
push
mov
lahf
push
dec
imul
aas
sub
adc
add
stc
fwait
cltd
sahf
and
inc
jmp
std
and
push
sbb
and
adcl
dec
adc
inc
imul
stos
pop
clc
ss
jecxz
push
jmp
xchg
sbb
js
sahf
add
add
pop
adc
jp
repnz
movsl
mov
adc
add
pop
add
push
fisttps
adc
jo
or
sub
sub
xchg
stos
dec
inc
ret
mov
cmp
pop
or
outsl
xchg
stos
sbb
lods
sbb
mov
fwait
sub
push
jp
lea
xor
and
pop
mov
cmp
fsubl
jbe
lods
jo
sbb
pop
lds
inc
xchg
add
ljmp
xor
sbb
mov
fbstp
int3
xor
orb
push
fcmovb
xorb
cmp
push
aaa
test
jl
cwtl
rcrb
sti
add
lret
rcll
imul
mov
add
sbb
pop
test
dec
aad
push
shrb
push
cmp
nop
nop
jecxz
push
push
cmp
pop
push
prefetcht0
punpckhwd
and
int3
mov
xchg
pop
data16
or
mov
mov
sbb
cmpl
pop
push
xchg
push
xor
shrl
sub
ret
fnsave
and
push
out
popa
or
push
inc
push
insb
xchg
jecxz
mov
das
adc
sub
scas
das
movsl
rol
lcall
mov
xchg
sbb
push
pop
xchg
in
lea
aaa
xchg
pop
cltd
stos
xchg
push
test
add
mov
das
push
sbb
int3
aas
mov
pop
mov
jns
fistpll
sbb
add
push
notb
jo
test
xchg
add
sbb
xor
sarl
inc
pop
inc
push
popf
push
pop
stos
sub
push
pop
in
push
sub
cmp
mov
push
inc
dec
cld
mov
pop
test
xchg
xor
jo
sbb
mov
leave
lret
es
dec
test
stos
inc
out
sbb
adc
push
sbb
test
fistpl
cs
imul
scas
add
pop
fsubs
add
push
xchg
sbb
cmpsb
push
cmpsb
in
or
aas
out
ss
jle
jns
sub
mov
idivl
and
cmp
gs
mov
pop
cmp
test
push
ja
push
fildl
push
gs
and
adc
pusha
sub
sbb
jle
adc
inc
and
inc
cmp
out
inc
add
out
pop
leave
mov
and
insl
dec
mov
cmp
sbb
cmpsl
add
insl
cltd
out
sub
sub
cmp
ds
or
push
inc
inc
adcl
ret
adc
or
aaa
inc
inc
or
bsf
push
repnz
pop
or
minps
push
popa
orl
dec
out
mov
cmp
add
ret
mov
int3
cmp
stos
push
pop
jmp
ret
fadds
cmp
push
add
lods
and
or
inc
mov
in
and
popf
repz
and
bswap
inc
daa
fisttpl
push
and
jge
pop
sub
adc
das
pop
pop
fsubs
cltd
dec
pushf
out
add
sahf
cmp
iret
scas
pusha
in
and
pop
test
inc
out
arpl
mov
in
ss
loopne
rorb
cli
and
and
je
pop
gs
jb
push
lock
add
pop
pusha
ja
cmp
mov
jb
xchg
add
ds
add
cmp
imul
jmp
mov
lret
pusha
dec
roll
and
cmp
testb
dec
rcr
and
jecxz
mov
imul
jne
adc
pop
push
shrl
push
pop
xchg
inc
clc
xchg
push
adc
int
dec
and
cmp
fcomps
or
pop
jae
mov
cmp
add
mov
adc
sub
lret
into
subb
dec
dec
or
ja
lret
add
jp
xchg
cmp
pop
jmp
fistpll
jl
inc
movl
dec
loop
jne
jae,pn
fisttps
jle
push
push
sbb
lods
icebp
sub
mov
rclb
xor
pop
lahf
movsb
arpl
add
dec
mov
lods
sbb
adc
mov
pop
hlt
xchg
mov
xchg
inc
jecxz
aam
daa
scas
js
rcrb
cmp
nop
faddl
and
fstl
es
in
mov
imul
inc
and
jle
cmp
push
scas
add
mov
push
das
pop
lock
and
in
rcrb
cs
movsb
pop
movsb
test
or
adc
int
mov
inc
psrlq
test
lods
out
sub
imul
push
mov
mov
sahf
sub
jmp
ret
iret
push
jge
hlt
in
test
and
inc
test
sbb
or
pop
scas
popf
repnz
into
ds
cmpsb
insl
lret
movsb
pop
inc
mov
das
or
mov
xor
icebp
sub
sti
pusha
icebp
in
test
jno
rolb
leave
mov
scas
push
lcall
popa
repz
and
pop
inc
push
lock
test
ret
mov
xor
sbb
dec
and
stos
mov
stc
stos
jae
add
out
and
lods
rcr
push
xchg
pop
sub
mov
adc
ret
ror
mov
icebp
push
fcompl
mov
jp
addr16
jge
jbe
pop
mov
cmp
adc
push
addr16
sub
mov
cmp
inc
or
cmpsb
pushf
inc
cmpsl
je
mov
pop
cli
xor
sub
add
dec
adc
out
and
push
jmp
xchg
in
lret
movsb
mov
movsl
adc
xchg
add
cmp
rolb
pop
sbb
adc
dec
cld
je
sbb
xchg
add
addr16
mov
cmc
xor
or
repz
push
pop
lds
push
loope
push
sub
add
insb
sti
in
cmp
rorb
xchg
adc
insl
inc
cmp
insb
sub
and
pusha
test
in
add
add
scas
out
test
push
enter
mov
pushf
popa
and
add
mov
inc
cs
loopne
sub
sub
lahf
sbb
leave
lret
movsb
or
jbe
in
mov
jns
loopne
movsb
ret
mov
mov
or
xor
add
add
shll
or
pop
push
in
or
xchg
cmp
inc
fbld
and
push
rol
xor
into
xchg
call
inc
sub
daa
push
dec
loopne
fdivrl
xor
addl
sub
stos
and
shll
push
dec
jmp
sub
out
pop
inc
bound
cmp
ss
daa
outsl
mov
cli
xor
pop
das
stos
movsb
sub
in
movd
mov
das
mov
jp
xor
lods
ret
pop
push
ss
insl
call
sbb
push
ja
iret
dec
loopne
adc
bnd
nop
ret
ja
or
cmpsb
scas
cld
and
sub
inc
sbb
js
fdivrs
inc
and
stos
push
cmpsb
add
inc
mov
cmp
ret
cmp
jo
mov
rolb
pop
addr16
test
in
scas
add
rcr
insb
mov
mov
and
dec
popa
orl
inc
addb
push
xchg
adc
pusha
loopne
and
mov
mov
inc
xchg
test
and
push
cmp
xor
dec
cwtl
add
inc
and
addb
add
lret
mov
mov
or
add
lock
cmp
ficompl
push
jno
push
in
out
shr
dec
imull
in
hlt
pop
xor
pop
sbb
shrb
icebp
rolb
jne
lods
dec
and
jnp
mov
sub
or
aaa
enter
fnsave
jno
mov
xchg
add
js
pop
nop
aad
push
sbb
clc
mov
fsubs
ret
dec
add
hlt
and
adc
adc
xchg
xchg
roll
xchg
movsl
stos
in
test
mov
jecxz
iret
pop
addl
loop
aaa
mov
sbb
movsb
add
mov
and
dec
inc
push
arpl
push
loop
popf
pop
test
mov
pusha
adcl
adc
add
pushf
lahf
or
pusha
scas
sub
andl
push
sub
or
or
sbb
push
mov
adc
scas
push
cwtl
pop
adcb
lret
insb
lods
cmpb
adc
movsl
nop
and
inc
sahf
iret
mov
addr16
lret
inc
ss
rcr
add
cli
jns
add
add
dec
ja
aad
pop
lret
add
test
orl
inc
lahf
pop
jg
cmpsb
clc
and
and
sub
adc
adc
xchg
sub
and
jo
adc
addr16
or
lods
pusha
or
and
ret
dec
jp
or
jb
ljmp
lods
shlb
and
int3
add
pushf
inc
loopne
xchg
mov
xor
popf
lods
inc
sbb
sub
imul
pop
sub
shlb
pop
addb
inc
test
das
mov
aam
inc
mov
lahf
jbe
push
or
xor
sub
dec
shrb
into
scas
sub
mov
movups
jge
ds
mov
mov
mov
adc
xchg
testb
popf
add
jb
call
or
jo
cmpsl
rcl
sbb
jp
jmp
adc
aas
out
inc
cmp
lret
xor
jmp
xor
or
mov
andl
mov
push
repz
or
std
dec
push
mov
or
movsb
xchg
sti
movsl
or
subb
sahf
aas
xlat
pop
ds
ds
clc
out
and
push
dec
fisubrs
jbe
sbb
or
xchg
fnstenv
clc
and
mov
xchg
loop
adc
adc
jp
pusha
mov
or
test
insb
mov
sub
xchg
inc
dec
sbb
lahf
push
adc
pusha
stos
sub
sbb
mov
mov
outsb
stos
stos
push
lods
mov
mov
pop
inc
into
dec
cld
sbbb
add
pinsrw
loope
cwtl
jp
incb
adc
xor
inc
push
adc
and
sub
lods
add
and
mov
mov
sub
sub
sbb
lods
subl
jp
mov
iret
sbb
ret
push
jmp
rcrb
push
and
hlt
mov
cmc
sahf
xchg
add
sub
popf
or
xchg
lock
jg
loopne
jg
xchg
add
movsb
sub
xchg
xorl
arpl
xchg
popa
push
arpl
sub
nop
roll
push
adc
lret
and
sbb
cmp
ljmp
cltd
and
lods
movzwl
or
imul
stos
data16
test
xor
fistps
inc
mov
pusha
and
jnp
dec
mov
fs
adc
push
inc
lds
stc
icebp
and
dec
imul
popw
and
jp
fwait
mov
cmp
xor
jmp
xor
daa
lock
jnp
rorl
or
sbb
and
mov
add
pop
push
dec
pushf
fs
cmpsb
ret
scas
sbb
orb
adc
pop
jno
int3
xlat
sbb
xchg
add
sarb
ja
lods
je
xchg
push
inc
scas
fs
cmp
pop
scas
inc
xlat
out
sbb
jge
icebp
push
sub
xlat
mov
and
mov
push
pop
cmp
jno
pop
mov
es
and
ficomps
cmp
cmp
scas
nop
or
mov
mov
inc
aas
daa
movsl
int
gs
jmp
lods
test
sub
ljmp
add
or
mov
push
pop
cmp
adc
int
sar
jne
xchg
xchg
mov
xor
push
mov
and
xor
cli
dec
les
add
dec
jb
ja
mov
movsb
fimuls
adc
mov
inc
out
bound
sub
xchg
xchg
mov
ss
js
push
mov
arpl
sti
stos
test
cmpl
adc
mov
stos
data16
xchg
mov
and
mov
dec
ret
xchg
adc
and
pusha
inc
es
pop
sbb
cmc
xchg
dec
stos
mov
jno
or
dec
push
xchg
rcll
or
test
mov
mov
stos
daa
cltd
sub
mov
adc
inc
adc
ret
and
imul
dec
pop
or
mov
loopne
iret
jne
testl
add
enter
push
xchg
dec
inc
aas
cmpb
mov
xor
sbb
loope
cli
fsubr
sub
dec
fidivs
xchg
adc
lret
mov
xchg
adc
add
adc
push
rorb
fadds
dec
dec
mov
jnp
cmp
mov
push
jg
outsl
jg
sbb
xchg
mov
jmp
or
imul
sbb
jl
push
lret
xor
jne
rol
mov
popl
pop
gs
pop
mov
push
sbb
sbbl
xchg
mov
adc
mov
jns
xor
cli
les
xor
pop
mov
rorb
jb
insb
or
push
sbb
xchg
pop
mov
cmp
in
sbbb
imul
mov
mov
mov
stc
stos
push
jle
xchg
aaa
xor
bound
mov
cmp
xchg
sbb
call
movsb
push
pop
jne
pop
sub
xchg
std
popf
xchg
mov
pop
iret
mov
sub
mov
movsb
push
out
adc
jbe,pt
lcall
and
div
dec
je
and
in
sbb
ret
push
sub
stos
orl
xlat
mov
pop
stos
xchg
das
icebp
in
adc
bound
gs
xchg
mov
xor
add
inc
movsb
pop
or
xchg
xor
fs
mov
subl
xchg
cmpsb
xchg
sbb
test
pop
scas
and
dec
push
pop
mov
sbb
cmp
mov
xchg
loope
pop
clc
jg
inc
xchg
add
iret
ret
stos
sbb
dec
fcomps
cli
out
nop
mov
frstor
mov
jo
and
xchg
cmp
je
mov
jge
cmpsb
sahf
add
xor
add
es
adc
add
loope
xor
test
pop
fidivl
sub
or
or
out
and
insl
xchg
xor
push
mov
inc
dec
loope
push
lcall
lcall
imul
gs
inc
mov
or
insl
sub
and
icebp
jo
popa
push
iret
fdivr
rorb
mov
insl
sbb
mov
je
je
add
or
push
mov
adc
pop
lret
mov
and
scas
ja
js
xor
mov
xor
pop
sub
push
cmp
mov
js
jb
xor
push
mov
addr16
subb
and
cmp
pop
xchg
outsb
dec
icebp
out
or
repz
mov
test
rcrb
lods
xchg
inc
mov
outsl
pop
rclb
pop
pop
push
and
mov
popa
jle
dec
cli
push
fstpt
pop
pop
ljmp
and
pusha
xchg
pop
jle
dec
sub
gs
insl
inc
add
add
mov
fcoms
and
scas
jns
jle
push
enter
sbb
inc
sub
and
push
stc
adc
mov
setle
sbb
cmpsb
add
mov
or
lods
nop
and
sub
jl
fiaddl
xchg
mov
and
movl
sbbb
mov
in
adc
adc
mov
add
dec
insl
loop
jnp
pusha
sub
stos
jle
clc
lret
dec
jno
and
push
scas
std
mov
xor
cmpsl
jb
xchg
loop
call
scas
jecxz
test
mov
sub
mov
sub
iret
mov
push
movsb
xor
xchg
shll
xor
xchg
jp
out
nop
xchg
nop
in
xorl
mov
push
adc
add
pop
mov
inc
xor
jg
adc
mov
cmpsl
test
push
and
push
inc
xchg
rorl
mov
or
push
cmp
cmp
xchg
mov
cmpb
lods
aas
fwait
cmpsl
sub
add
loop
sub
addr16
test
mov
add
test
and
jmp
mov
gs
mov
cwtl
add
loope
aad
popa
mov
jnp
sahf
daa
imull
fistpl
push
repnz
inc
stos
or
inc
and
mov
mov
push
fcomp
inc
push
mov
fiaddl
stos
mov
push
inc
pushf
add
add
mov
or
mov
inc
test
fmuls
inc
adc
das
loopne
pop
xlat
rolb
xchg
xchg
jmp
loopne
inc
iret
daa
inc
cmp
xor
or
ret
stos
dec
mov
stos
test
mov
loop
adc
int3
pop
addb
nop
mov
mov
gs
clc
mov
or
jbe
jb
inc
pop
cli
mov
lret
adc
lcall
aas
dec
cmp
add
pop
push
daa
aaa
and
pop
adc
or
aaa
mov
inc
lea
xorb
test
adcb
jmp
adc
xor
xchg
dec
iret
or
int
cld
jle
call
stos
pop
and
pop
jp
dec
test
ret
adc
cs
mov
fsubs
add
mov
je
test
or
jg
out
jne
xchg
hlt
outsb
in
fcoms
iret
xchg
push
xchg
push
jge
pop
jne
fdivr
or
mov
pop
loope
fiadds
xchg
test
dec
out
pop
jmp
or
shll
das
and
jae
pusha
loope
jp
sub
adc
cmp
stc
cmp
inc
and
add
mov
adc
cltd
pop
movsb
xor
xchg
or
test
test
inc
or
xchg
push
ja
add
sub
push
xor
add
lods
jp
idivl
nop
add
sbb
jge
lods
inc
or
ljmp
push
arpl
pop
hlt
inc
arpl
xchg
mov
popa
adc
popa
notl
fcoms
loopne
mov
cmp
les
cmpsb
add
inc
aaa
add
push
sbb
mov
cmp
lods
inc
mov
ljmp
or
cli
cmp
inc
rclb
sub
stc
mov
stos
inc
cmp
cmp
sbb
or
add
dec
cmp
loopne
inc
lock
mov
lods
xor
add
or
cmp
insb
ret
insb
mov
ja
js
mov
cmc
sub
push
mov
adc
xchg
in
xchg
jp
sbb
pop
mov
jl
daa
xchg
cmp
pushf
test
or
inc
loopne
add
dec
idivb
jecxz
stos
ret
test
adc
and
pop
loopne
sti
sub
sub
imul
sarb
xlat
lea
or
xchg
js
adc
into
sahf
roll
or
call
mov
ljmp
sub
inc
add
sbb
sbb
fiadds
ret
mov
sub
test
jecxz
inc
fsubs
add
adc
fstl
pavgw
pop
mov
sahf
xor
sub
mov
mov
outsl
int
and
adc
lret
lea
push
push
adc
inc
ja
jne
movsl
and
mov
push
enter
test
push
push
mov
fildl
xchg
lahf
leave
xchg
push
les
push
js
mov
push
mov
adc
test
add
sub
outsb
and
inc
mov
pop
push
jnp
je
inc
push
add
lret
xlat
xchg
push
test
test
adc
out
test
jnp
and
into
add
cmp
mov
daa
cmp
xchg
adc
and
jbe
dec
mov
adc
lods
cmpsl
ret
pop
iret
cmp
fwait
xor
sub
xor
mov
test
dec
pop
pop
aaa
rcrl
pop
les
add
rsqrtps
add
or
mov
cli
iret
push
scas
push
imul
push
int3
fnstenv
les
inc
fcoms
mov
add
xchg
xor
dec
push
adc
sub
pop
xchg
sbb
inc
jbe
imul
and
ja
cmpsl
popa
add
test
inc
data16
dec
lret
dec
aam
out
in
adc
mov
mov
popa
xchg
jnp
jo
in
add
dec
clc
stos
icebp
imulb
or
sub
pop
push
add
fs
or
gs
inc
js
loopne
adc
inc
jns
push
jge
pop
push
in
inc
jmp
popa
push
rclb
pusha
jno
adc
dec
adc
repnz
es
loop
dec
gs
arpl
add
add
enter
lods
mov
mov
icebp
xor
or
test
pop
in
and
int
xchg
add
xchg
xchg
ret
bound
loopne
das
sbbl
jne
and
jp
and
jbe
lahf
pusha
mov
add
in
aam
push
fs
cmp
jecxz
mov
dec
or
add
and
sub
mov
inc
clc
ret
hlt
mov
hlt
inc
mov
fdivr
xchg
xor
inc
inc
adc
setb
add
sbb
dec
std
jmp
jbe
ret
cs
add
lock
adc
pop
mov
pop
jo
ret
mov
add
ljmp
add
mov
and
cmp
add
imul
loopnew
sbb
call
dec
aaa
rorl
js
dec
cmpsl
dec
dec
mov
mov
outsl
xorb
das
ja
xor
xchg
pop
xorb
xor
and
addr16
pop
rorb
cwtl
mov
loope
ret
fimuls
xchg
es
fwait
and
sub
jae
mov
jecxz
adc
adc
sarb
stc
aad
jp
xchg
xchg
movsb
andl
pop
lds
and
dec
loopne
add
pop
jno
mov
in
adc
aas
and
fdivrl
rcrl
loop
cltd
push
push
add
flds
test
lods
or
lods
adc
xlat
adcl
pop
movsb
arpl
add
addr16
pop
sub
std
sbb
and
jne
js
call
lods
adcb
out
or
push
test
filds
add
std
push
xor
add
arpl
jge
inc
push
jl
das
imul
dec
and
or
or
inc
pop
out
maskmovq
xchg
int3
aaa
add
call
lds
stos
and
push
test
xchg
pushl
and
pop
add
pop
scas
or
adc
rol
jne
lcall
std
push
dec
cmp
xorl
lods
push
inc
leave
inc
rolb
pop
stc
loopne
mov
inc
adc
out
imul
out
rcrb
shrb
and
mov
xor
and
jmp
lcall
and
shll
add
aad
sub
test
sbbb
mov
mov
insl
cmp
ss
es
loope
mov
push
lock
cmpsb
adc
mov
and
xchg
sub
in
add
inc
repnz
movsb
push
and
xor
jns
pop
and
ret
lahf
push
cmpsl
repnz
and
xchg
jecxz
jne
cmp
jmp
loope
subb
sub
sub
pusha
stos
ror
jno
or
test
jo
in
jb
jp
or
sub
loop
mov
push
dec
sbbl
jmp
ret
clc
inc
mov
loope
sbb
pop
test
add
test
cmp
shr
adc
in
pop
mov
dec
lods
xor
cmp
push
loope
or
in
arpl
jle
sub
insb
push
outsl
jno
arpl
or
in
push
jmp
inc
imul
mov
mov
add
mov
inc
xchg
push
daa
pop
add
aam
inc
or
loope
sub
iret
rolb
xor
and
mov
dec
cmp
addr16
pusha
cmp
aaa
mov
rcll
push
fidivl
sub
test
jne
cmp
and
jne
lods
jno
jo
mov
and
xor
scas
xor
dec
cmpsb
cmp
imul
dec
movaps
inc
ret
lcall
aas
dec
jnp
adc
stos
out
rolb
or
push
mov
es
add
int
ljmp
shrb
out
fimuls
jmp
lret
push
inc
shrb
rcrb
decl
inc
jecxz
je
dec
sub
jo
fisubs
fsubs
add
test
and
xchg
adc
cld
or
jno
stos
cmp
add
jbe
stc
or
je
xor
jge
xor
mov
adc
adc
pop
push
add
jbe
arpl
or
push
and
xchg
lock
inc
cmpsb
sub
add
push
and
das
or
stc
push
push
add
push
mov
and
push
inc
pusha
sub
sbb
lea
popf
jnp
inc
into
jle
frstor
mov
push
mov
dec
aad
das
xchg
sbb
push
and
ja
fmuls
mov
es
or
pop
cmp
push
dec
sub
aam
pop
jge
popf
test
mov
pop
lret
ret
dec
fwait
test
or
shll
repz
cmp
fucom
nop
xchg
mov
mov
popa
jnp
aaa
push
cmpsl
sub
mov
mov
sbb
rorl
pop
je
and
divl
rolb
sti
xlat
int
loope
cmp
pop
insb
in
and
call
ljmp
sahf
mov
stos
leave
cmp
sbb
add
fucomip
mov
cmc
ret
xchg
pushf
rol
stc
lods
add
add
adc
movsl
aam
daa
and
nop
shl
sbb
lret
sbb
push
add
ficoml
mov
hlt
xlat
sub
je
sbb
rorl
scas
push
imul
pusha
add
in
add
loope
aas
fildl
xor
shlb
xlat
mov
andb
xchg
push
jne
iret
cmpsl
mov
mov
repz
cmpsl
cli
mov
test
aam
sub
lods
sub
adc
sub
sbb
xchg
mov
call
add
insl
sbb
adc
lods
lds
dec
add
fildl
icebp
inc
inc
xor
movsb
xor
outsb
xor
ret
push
clc
fidivs
shrb
ss
sbb
mov
sub
pop
push
xchg
repnz
popa
ret
mov
xchg
mov
xor
dec
test
mov
inc
jl,pn
push
pop
shlb
fsubp
mov
xor
sbb
cld
cmpsb
test
jne
les
xchg
les
popa
jle
mov
mov
push
cmc
out
mov
mov
ja
jg
jmp
into
mov
inc
lret
cltd
cmpsb
xor
push
ret
js
dec
inc
jecxz
mov
js,pt
jle
jmp
cmpsl
daa
xchg
ss
push
ja
push
icebp
nop
gs
xchg
jb
mov
mov
fsubs
xchg
mov
sbbb
push
test
fnstcw
iret
cmp
or
sbb
sub
fdivrl
inc
roll
cmp
jg
mov
add
jnp
pop
sub
sahf
xchg
sarl
nopl
fwait
pusha
cli
jl
jl
jmp
adc
adc
jge
mov
sahf
mov
pop
test
jge
int3
enter
mov
into
xchg
clc
mov
mov
adc
test
xchg
sub
movsb
mov
sub
sub
in
sub
or
cmp
mov
or
push
mov
sub
xchg
mov
in
mov
xor
rorb
pushf
jbe
iret
pop
sti
aam
dec
lahf
pop
xchg
pushf
out
loope
mov
adc
popf
test
adc
mov
aad
push
cltd
jle
add
int3
std
add
cmp
in
int
xor
test
lea
icebp
pop
and
ret
int3
add
sub
pop
pusha
fdivrs
mov
pop
int
notb
push
jp
cwtl
sbb
add
pop
subl
lret
push
mov
xchg
imul
push
fsubr
mov
mov
mov
insl
add
or
std
fcomp
fmulp
gs
adc
inc
notl
inc
pusha
and
push
cmovnp
pop
sbb
dec
loope
xchg
cmc
movsb
ret
jnp
sub
sbb
daa
iret
pop
outsb
mov
adc
dec
scas
loopne
mov
and
push
mov
add
mov
aas
sbb
ja
inc
test
push
fsts
andl
cwtl
lods
mov
or
sbbb
sub
shll
add
or
fbstp
sub
mov
xchg
mov
xor
addr16
mov
push
daa
pop
pop
je
add
popa
sbb
cmp
call
loop
cld
and
mov
fcomp
pop
adc
add
or
push
mov
movsb
adc
or
mov
inc
and
imul
sbb
mov
adc
mov
push
insb
jne
popa
shll
and
lods
mov
test
icebp
xor
mov
insw
ret
jno
stos
gs
lods
add
push
mov
dec
mov
sub
push
scas
xchg
addb
xchg
and
dec
test
imulb
add
push
mov
pop
mov
push
pop
jae
push
lcall
lds
imul
mov
test
add
es
je
mov
out
dec
addl
lret
shl
mov
xor
into
orb
fmuls
movsb
dec
xchg
push
or
out
xlat
push
mul
dec
and
aam
pop
push
lar
fcomps
gs
sbbb
orl
cmp
cmp
std
xchg
movsb
dec
aas
dec
mov
aad
sbbl
mov
js
adc
dec
loopne
jmp
inc
pushf
fwait
call
lods
add
adc
jns
push
sbb
xchg
mov
adc
or
insl
xchg
mov
jne
add
cmpsl
push
xor
sub
or
imul
orb
loope
ljmp
js
push
pop
pop
es
movb
mov
pusha
push
or
inc
pusha
dec
jg
xor
add
in
xor
in
push
lods
das
cmc
mov
mov
mov
add
add
xor
fistpl
sub
xor
xchg
rcrl
xor
jno
push
aaa
mov
mov
jle
adc
mov
adcb
mov
mov
mov
pop
sbb
or
xor
das
cmp
shrl
lock
insl
cmp
mov
cmpsb
adc
push
xor
add
pop
shll
sub
xchg
popa
or
push
adc
xor
inc
push
xchg
jae
mov
sub
push
dec
lret
test
sbb
ss
mov
nop
adc
ja
add
iret
jbe
mov
test
ret
or
sbb
or
outsl
cmp
dec
xor
sub
push
dec
push
gs
aas
mov
rorl
or
cmpsl
stos
sub
rolb
pusha
sub
imul
mov
xor
mov
icebp
add
xchg
mov
xchg
dec
test
push
test
repnz
add
cmp
push
movsl
or
fwait
test
insl
cmp
sahf
iret
dec
mov
push
push
adc
pop
cmove
push
add
sub
cli
jne
inc
clc
insb
das
ret
shrl
jae
inc
int
loope
jb
xchg
movsl
mov
adc
mov
push
js
aaa
stc
repnz
push
fldl
sbb
dec
lret
adc
or
jo
mov
popf
ds
adc
pop
fs
ja
test
push
iret
pop
loope
rolb
jns
cmp
dec
adc
fisubl
ljmp
imul
sbb
enter
call
xor
xchg
xor
add
rorb
aaa
or
iret
mov
cmp
inc
xorl
ret
and
xchg
jl
sbb
mov
xchg
imul
std
add
pusha
cmc
lock
xchg
stos
lods
pop
cmp
and
dec
sub
xor
out
jno
mov
push
inc
or
fcompl
rcrb
int3
iret
add
filds
iret
add
lea
or
in
lret
ja
mov
push
adc
iret
add
and
adc
inc
pop
fadds
mov
flds
movsb
popl
lods
jb
and
cmpsb
bound
subl
xchg
push
push
jns
repz
popa
dec
mov
mov
mov
mov
xchg
adc
cwtl
xor
or
lahf
rcrb
mov
adc
mov
mov
mov
adc
fisubl
push
das
or
imull
jno
sbb
js
inc
and
or
pushf
aam
negl
sub
in
cmp
ret
mov
sub
arpl
adc
or
mov
pop
pop
addb
or
dec
jne
mov
add
or
cmp
xchg
adc
lret
stos
lock
loope
jg
pop
loopne
lea
sbb
js
or
arpl
mov
mov
jae
std
call
mov
adc
mov
leave
xchg
push
cmp
and
pop
add
iret
or
xor
and
sahf
mov
and
add
sub
loope
xchg
jge
xchg
hlt
inc
mov
mov
xchg
mov
movsb
xor
sbb
push
aad
insl
pop
in
lea
push
in
or
test
popa
mov
sahf
mov
and
lock
fsts
rclb
mov
jle
add
fidivl
inc
ret
dec
or
shrl
mov
je
inc
imul
loopne
xchg
pop
xor
inc
pop
imul
lock
jbe
push
cs
xchg
daa
cmp
rcr
rcrb
mov
outsl
mov
jb
lahf
hlt
flds
gs
sbb
sub
adc
add
sbb
pop
cmpsl
add
jno
inc
add
repnz
dec
sub
fcoms
or
inc
ljmp
add
mov
imul
dec
test
add
cmpsl
sub
push
ftst
jnp
int3
or
lahf
sbb
xchg
sub
outsl
lret
out
popf
aaa
ljmp
inc
movsb
xor
lods
inc
add
pop
xchg
pop
mov
sahf
inc
adc
xchg
pop
push
imul
rolb
mov
inc
ret
rolb
cltd
or
cmp
mov
pop
in
in
inc
call
jmp
dec
sbb
dec
loopne
sbb
cmp
push
adc
in
inc
movsl
xchg
mov
test
imul
push
enter
adcb
sub
pop
sub
hlt
shlb
lock
orb
push
mov
test
divl
jnp
mov
bound
and
je
cmp
gs
xorl
xor
lods
lret
rcrl
and
dec
fs
mov
mov
and
cmpsb
push
movsl
out
pop
mov
push
mov
cmp
push
add
push
pop
test
mov
add
pop
inc
or
cmp
and
push
add
mov
imul
sbb
mov
sbb
mov
dec
repnz
push
js
jne
fs
pop
push
out
and
iret
adc
xchg
shl
imul
sub
stos
ret
mov
sbb
mov
mov
mov
iret
push
xor
pop
movsb
and
and
add
jmp
ds
loop
mov
mov
adc
fidivl
call
inc
push
mov
adc
jnp
ss
aas
sbb
mov
outsb
mov
insb
jge
xchg
stos
mov
add
and
jp
dec
out
popa
pavgw
lret
daa
inc
je
test
push
add
and
roll
negb
ljmp
adc
gs
cmp
lock
nop
push
mov
or
mov
xchg
add
insl
ljmp
cltd
push
sub
in
sub
es
ss
xchg
xchg
js
xor
addl
adcb
mov
xor
aam
or
jge
sbb
rcrl
push
test
jnp
fs
data16
out
stos
pop
dec
out
test
or
popf
inc
or
lea
pop
fcoms
cli
dec
std
inc
and
jle
out
es
out
jbe
mov
xor
sbb
pop
ljmp
add
inc
outsb
arpl
push
mov
and
into
in
adc
js
outsb
or
sbb
leave
push
ss
fldenv
into
dec
inc
ds
andl
mov
imul
pop
or
outsb
and
arpl
popa
sub
or
add
jae
xor
int
add
lods
push
pop
and
xor
mov
popf
add
sahf
jbe
and
dec
addr16
pop
pop
rorl
mov
movl
pop
add
xchg
inc
adc
mov
mov
sub
es
mov
fs
mov
out
xor
add
push
enter
xchg
loope
xchg
xor
jo
add
jne
jbe
pop
mov
inc
inc
add
dec
pop
das
adc
lcall
sti
je,pn
das
push
and
pop
cwtl
cmpsw
and
sub
add
xor
enter
hlt
nop
cmp
jbe
mov
jo
add
push
push
xchg
es
movsl
jmp
fdivl
aaa
mov
jbe
scas
pusha
mov
adc
imul
pop
fucomp
add
xchg
cs
and
out
adc
pusha
jnp
addb
xor
or
lahf
or
jno
push
test
cmp
adc
pop
and
ret
push
int3
mov
cltd
cmp
push
sbb
xor
mov
cmp
mov
into
lods
pop
and
dec
fldenv
pop
push
ja
cmpsb
iret
add
jo
insb
ds
and
in
pusha
sbb
sbb
mov
outsb
pop
iret
jnp
adc
cs
push
jl
push
ss
push
inc
shrb
test
lret
sub
dec
outsl
cmp
dec
push
mov
xchg
cmpsb
outsl
imul
out
adc
outsb
test
sbb
daa
sub
push
pusha
or
sub
sbbb
enter
aaa
aaa
fiaddl
mov
mov
cmp
lret
movsb
pop
inc
xor
addr16
inc
addl
mov
mov
iret
add
inc
pop
cmpb
bound
test
add
nop
dec
inc
xchg
std
jp
cmp
hlt
ljmp
or
daa
and
xor
jne
cmp
jne
fdivrl
or
cmpsb
test
fidivrs
mov
ret
and
jp
aas
cmc
xor
bound
or
push
sub
dec
fwait
adc
repnz
stos
and
add
mov
jg
icebp
jmp
add
or
fisttps
jnp
push
push
enter
leave
sbb
xor
cwtl
int
xchg
mov
ret
mov
loopne
arpl
dec
loop
xor
sbb
add
addb
sbb
pop
mov
jl
jnp
or
jmp
push
jle
iret
fxch
xchg
stos
jne
dec
ja
mov
rcl
nop
rorb
insb
popa
rol
fdivrp
sub
cs
mov
lahf
cmovl
or
movsl
sub
lods
xor
daa
hlt
push
mov
mov
imul
pop
xor
repnz
dec
sbb
adc
and
filds
cmc
inc
jg
iret
decl
in
xchg
pop
popa
cmpxchg
lods
pop
rolb
repz
sub
add
add
lret
insl
jmp
jne
push
add
shrb
shr
push
xor
pop
inc
test
and
adcb
jle
repz
push
add
inc
loop
add
jbe
ficoml
push
imul
add
jmp
movsb
mov
cmpb
pop
mov
mov
mov
sbbl
mov
pop
adc
and
cmp
cmpsb
add
loopne
fwait
into
push
ja
fwait
mov
push
addr16
imul
or
stc
je
add
pop
cmp
scas
cld
movsb
pop
insb
add
sahf
popa
je
popf
jecxz
mov
or
ljmp
aaa
mov
adc
out
mov
roll
add
aam
dec
adc
test
adcb
scas
rcr
test
adc
push
xor
pop
pop
or
test
lock
mov
pop
lcall
out
push
mov
loop
lea
scas
dec
pop
xor
xchg
shrb
xor
mov
test
ljmp
stc
jns
popf
xchg
sub
nop
aad
fs
shr
sub
dec
mov
dec
cmp
add
push
push
push
mov
aam
movsb
add
hlt
pop
ja
mov
jo
or
aas
cmp
jmp
sbb
cld
ds
pusha
outsl
pop
or
push
lods
sub
xchg
pusha
hlt
sar
gs
clc
or
ret
sahf
fisttpll
int
sub
cmpsb
sbb
inc
or
mov
jecxz
xchg
jno
in
jo
push
push
lods
sbb
pop
pop
mov
xchg
jno
addr16
add
cmc
shl
sub
lea
push
adc
and
inc
dec
cmp
movsb
adc
cmp
bndstx
fsubrl
adc
rcl
add
ds
add
iret
into
adc
out
cmp
mov
sub
shll
scas
sti
sub
lods
adc
dec
popf
mov
rcrl
ds
sbb
pop
add
cwtl
or
adc
outsl
xor
aaa
or
movsl
lods
fidivs
test
popf
scas
cmp
mov
inc
cli
add
jnp
out
addr16
scas
sbb
imul
jbe
push
fadds
push
btr
mov
popa
leave
cmpsb
ret
inc
insb
push
stos
mov
sbb
rorb
into
jnp
sbb
pushf
jge
ret
ja
js
clc
adc
dec
adcl
sub
lock
sbb
sub
ficompl
sub
dec
fisubs
test
outsb
jecxz
notl
mov
icebp
into
shl
and
dec
mov
sbb
xor
adc
jg
lea
pop
call
enter
push
fists
mov
movb
dec
sbb
mov
push
fisubs
test
xlat
imul
mov
and
nop
movsl
cmp
adc
mov
inc
sub
mov
add
stos
dec
loop
fsubrs
mov
sbb
ret
das
inc
frstor
mov
insl
ret
cmp
imul
lahf
cli
xchg
xchg
fwait
sbb
icebp
adc
and
sbb
add
adc
ja
sbb
push
xchg
jp
mov
jge
and
or
mov
adc
jne
adc
sbbb
ss
push
jl
xor
cmp
jbe
test
add
mov
js
adc
pop
add
lret
into
and
sahf
jmp
aas
sbb
in
test
xchg
or
jne
popa
xchg
sub
adc
add
testb
jge
out
xchg
sbb
and
bound
aas
push
stos
and
inc
pop
xchg
les
cmp
jp
xchg
mov
adc
adc
sbb
xchg
or
adc
mov
sbb
sub
sub
pop
icebp
test
outsl
lock
shr
sbb
sbb
mov
jb
jne
rcrl
jmp
repz
jbe
pop
add
and
in
pop
mov
or
movsl
xchg
dec
icebp
push
or
fidivrl
push
fdivl
iret
push
ss
notrack
test
xor
popf
movsb
or
sbbb
cmp
cwtl
jb
mov
sub
iret
pop
cmpsb
or
hlt
cmpsl
imul
sbb
shrb
push
aam
jecxz
jae
mov
cmp
test
clc
push
fisubrs
mov
rcll
mov
jmp
addl
or
adc
pushl
mov
test
add
pop
adcb
lods
imul
inc
cmpsb
aam
stos
es
cmp
das
xchg
stos
nop
inc
fiaddl
in
mov
das
lea
xchg
or
pop
test
and
xchg
movsb
push
xchg
xor
add
or
inc
sbb
mov
movsl
mov
sbbl
and
shrb
test
scas
pop
or
mov
inc
test
ds
fcmovu
scas
push
mov
data16
add
or
shlb
mov
sub
cmc
nop
ret
cwtl
push
push
subl
sbb
and
sbb
dec
out
or
icebp
movsb
aaa
ror
xor
pop
shrb
push
sbb
xchg
aaa
je
jmp
cmp
test
add
sarb
mov
cltd
rcll
mov
adc
je
loopne
jnp
loopne
add
loopne
and
loopne
fidivl
popa
or
cmc
test
push
sub
cmp
test
push
addr16
lahf
or
rcl
ljmp
dec
jmp
in
xchg
stos
lods
push
shr
cmp
dec
mov
rorl
xor
dec
adc
cltd
or
gs
loopne
in
je
loopne
shll
imul
adc
push
in
xor
sub
push
lahf
adc
mull
cmp
pop
xchg
cli
mov
inc
xor
inc
fisttps
sbb
stos
push
push
pop
or
jnp
lods
jle
call
sbb
and
sbb
lods
add
add
sub
test
add
xchg
push
dec
loop
sub
fsts
mov
daa
lods
and
bound
add
insb
sbb
stos
aaa
dec
out
jns
movsl
mov
pop
xchg
cmp
or
adc
mov
push
and
sarl
pusha
repz
mov
add
add
scas
fcmove
sbb
aaa
jnp
mov
inc
cli
scas
xor
pop
test
add
lahf
addb
outsl
popf
adc
rclb
pushf
inc
ret
push
je
daa
cmc
dec
mov
xchg
and
mov
add
cmp
pop
popa
addr16
clc
add
xor
inc
xor
push
aas
mov
sbb
xchg
dec
lock
inc
fsubl
sub
or
popf
nop
pop
ret
jmp
movsl
jmp
push
lock
sbbl
and
imul
dec
popa
xor
lods
adc
fiaddl
daa
push
sub
adc
mov
cmpsb
test
hlt
dec
aam
mov
sbb
pop
mov
lret
cmpsl
add
movsb
xchg
dec
movsb
test
and
push
bound
sub
gs
in
push
in
or
add
push
mov
dec
pop
adc
adc
and
jb
mov
adc
pop
dec
loop
push
adcl
pop
loope
sub
push
lods
inc
pop
jno
push
mov
sub
sub
fisubl
stos
inc
js
popa
cmp
testl
ficoml
int
mov
cmpsb
inc
ret
or
push
shrl
xchg
ret
cmp
mov
jmp
push
icebp
jle
add
mov
jne
jo
sbb
pop
mov
mov
lcall
cmc
inc
movsb
test
xor
js
mov
cmpsl
mov
test
push
scas
cmp
cmpsl
or
dec
sub
cmp
xchg
adcb
sarl
push
ss
int3
jmp
iret
nopl
dec
adc
loopne
xchg
adc
jecxz
push
subl
mov
push
lods
jge
adc
push
sub
orl
xor
nop
inc
aaa
outsw
daa
repz
inc
mov
mov
push
arpl
inc
fidivrl
nop
fwait
and
jo
insb
inc
iret
sub
xchg
push
test
fsubl
mov
pop
inc
in
xor
jae
imul
shrb
in
and
mov
jno
fistpll
popa
xchg
and
sbb
xor
addl
nop
adc
iret
pop
mov
inc
outsl
pop
leave
dec
push
pop
pop
mov
mov
shlb
sti
pop
shlb
sub
jmp
loopne
dec
cmp
inc
pop
jle
jo
inc
in
das
stc
ss
sub
je
rolb
lea
sbb
inc
sbb
shlb
adc
sbb
arpl
jo
jo
push
and
shr
fmull
dec
and
lods
pusha
adc
add
cwtl
xor
xchg
push
xchg
bound
add
cmp
pop
lret
xchg
loope
cmc
into
fdivp
cmp
movsb
cmc
roll
pop
mov
ja
mov
xor
xchg
adc
rorb
jb
push
mov
jno
lds
js
inc
pusha
int
in
push
js
push
repz
daa
jecxz
out
into
xchg
lcall
cmp
mov
add
xchg
inc
push
xor
jge
lock
loope
mov
push
sub
adc
pop
arpl
adc
cmp
add
int
cltd
push
popa
sub
pop
sub
movsl
xchg
jo
loope
mov
inc
mov
loope
sahf
add
imul
or
jae
int
sub
testl
pop
mov
inc
pop
and
adcb
dec
pushf
stos
cltd
out
xchg
lcall
and
sbb
fcmovne
xchg
push
xorb
sbbb
fbstp
nop
inc
push
lret
add
pop
test
mov
fwait
es
cli
inc
xchg
popl
divl
xchg
mov
push
fidivrl
movsb
outsb
xor
scas
shrl
pusha
dec
test
shrl
orb
pop
push
push
pop
adc
decl
sbb
or
inc
sbb
cmp
fwait
arpl
arpl
push
in
push
sarl
pop
das
filds
mov
aam
push
fiaddl
pop
lods
filds
or
jnp
push
sub
pop
pop
or
cwtl
xor
xchg
shl
mov
xor
push
jp
adc
lea
rolb
arpl
add
xor
xchg
mov
xor
pop
or
adc
andl
add
cmpb
ret
rorb
xor
iret
adc
jb
or
mov
loop
sbb
aad
aaa
pusha
cmp
fisttpll
jb
cmp
gs
mov
push
or
test
scas
das
fdivs
mov
inc
push
roll
jbe
and
jne
inc
mov
push
dec
iret
dec
test
push
xchg
add
movsb
pop
pushf
fs
or
fldl
and
mov
cmpsl
sti
inc
add
fsts
pop
icebp
stos
add
add
div
and
mov
xor
push
sbb
mov
daa
fisttpll
sbb
lods
fmuls
cld
mov
pop
or
nop
out
ds
and
xor
pushf
xor
sbb
mov
inc
loopne
cmp
push
cmp
jne
adc
adc
dec
ja
push
shlb
test
push
mov
jecxz
sti
xchg
sbb
ret
cmp
lds
jge
push
xchg
jae
subl
sub
sub
in
mov
das
jne
or
xlat
lods
inc
sub
mov
call
sub
mov
sub
xchg
pop
test
fisubrl
arpl
jmp
mov
inc
cltd
pop
mov
pop
add
divl
add
adc
movsl
aam
mov
sub
mov
mov
fisubl
push
sub
push
cwtl
add
movsl
jl
scas
xlat
rol
out
sub
clc
bound
scas
cmp
arpl
push
cmp
xor
xchg
push
shlb
xor
jle
test
scas
enter
pop
lods
or
cmpsl
popf
xchg
jp
push
push
pop
xor
and
scas
orl
lcall
xor
inc
mov
xor
rolb
sbb
add
sarl
pop
sub
lea
stc
test
ja
mov
sub
mov
rcrl
cmpsb
push
sbb
ret
in
push
loopne
shl
xor
jbe
ja
cli
add
mov
test
add
in
js
cmp
aam
cmp
pop
lods
xor
das
xchg
cmp
adc
sbb
pop
mov
lock
pop
das
stc
sbb
imul
leave
dec
xor
fisubrs
gs
ret
icebp
leave
jns
adc
sub
movsl
jo
je
add
dec
das
adc
sbb
dec
xchg
or
lea
daa
push
arpl
sub
mov
dec
test
pop
add
idiv
mov
std
sbb
fwait
lret
mov
add
fwait
aad
sahf
ds
jg
stos
xor
nop
or
inc
ja
jb
scas
cmp
xchg
incl
lret
fsubs
int3
jne
inc
adcl
addr16
pop
pop
lea
inc
sub
push
lds
sbb
dec
mov
mov
jb
mov
xchg
jbe
sub
leave
mov
add
sbb
or
and
mov
outsl
sub
lcall
cmp
jecxz
ret
adc
bound
add
rorb
ljmp
lods
add
addb
pop
sbb
popa
icebp
pop
and
inc
or
push
mov
sbb
stc
xor
cmp
sbbb
push
outsb
or
adc
or
loopne
push
pop
jle
mov
hlt
sub
push
int
imul
cmp
dec
fstpt
push
xchg
out
add
xor
add
add
into
xchg
mov
add
lock
or
push
loope
cwtl
loope
dec
ret
xor
stos
pop
or
push
pop
imul
imul
pop
rep
xchg
and
subb
jecxz
test
stos
ret
inc
aad
xor
push
aam
cmp
adc
dec
and
rcrb
inc
xchg
shlb
imul
jns
lret
test
sub
sub
mov
mov
sub
push
iret
sbb
dec
jb
add
rolb
push
mov
lret
mov
sub
aas
dec
dec
jecxz
inc
sti
jmp
js
jno
addr16
lcall
xchg
shll
pop
adc
adc
subl
and
pop
shrb
jo
arpl
shrb
leave
xor
lods
loopne
mov
fldz
push
fxch
js
rolb
xchg
daa
cmp
pusha
inc
std
and
sbb
js
ljmp
add
ret
push
dec
mov
pop
rolb
add
subl
imul
arpl
add
push
add
inc
push
lods
psrlw
sbb
add
test
fldenv
dec
xchg
loope
fwait
xchg
ret
mov
data16
mov
lods
add
lret
movsl
xor
js
pop
aas
jle
mov
push
cs
stos
or
cli
std
rcl
out
dec
ljmp
js
loope
mov
pop
push
stos
push
stos
or
out
push
inc
push
scas
movsb
outsb
jmp
push
filds
dec
push
movsb
ds
icebp
inc
and
pop
sbb
sti
adc
or
loopne
sub
push
stos
je
shl
adc
push
jns
xlat
mov
cmp
push
loopne
dec
addl
mov
add
dec
add
lahf
ret
mov
pop
bound
mov
cmovnp
or
iret
push
and
lock
jb
icebp
dec
ja
aad
adc
pop
adc
lahf
and
dec
adc
aad
mov
les
sbb
push
xchg
mov
jmp
lods
imul
add
xchg
adc
mov
cmp
adc
inc
scas
sub
dec
push
add
jp
mov
and
push
arpl
mov
mov
enter
dec
cmp
negl
frstor
sbb
xorb
movsb
xor
push
outsb
mov
pop
frstor
leave
insl
test
nop
sub
ja
adc
xlat
or
cmp
or
lcall
add
fwait
popa
cmp
fadds
js
fs
cmp
xor
push
sub
cltd
mov
and
popf
push
jecxz
jmp
loop
add
sbb
scas
or
sub
add
rcl
mov
jne
shrl
lods
jge
mov
adc
js
sub
add
add
and
add
sysenter
adc
stos
push
jae
scas
mov
push
cmp
loopne
popf
aam
xor
mov
pop
dec
js
popa
iret
add
in
xor
clc
pop
add
insb
or
and
sub
pop
ljmp
add
jo
push
push
mov
lea
or
and
lds
std
add
jnp
ret
ret
jb
icebp
and
les
dec
inc
jp
loopne
les
pop
jp
push
orb
cs
adc
push
push
fstl
add
repnz
inc
jecxz
and
add
test
inc
scas
test
mov
adc
mov
test
and
insl
imul
sti
sbb
add
test
jae
ret
sub
sbb
or
xchg
add
loopne
push
imul
adc
xor
add
cmp
pop
push
pop
pop
jecxz
xor
jmp
bound
dec
cli
pop
aam
dec
out
push
xchg
les
ret
push
sbb
or
xchg
xor
xor
stc
mov
add
pop
add
cmp
sbb
sbb
repnz
add
int
inc
inc
sub
pop
imul
add
add
aam
test
dec
mov
dec
adc
repz
pushf
test
cmp
notl
movsl
enter
imul
xchg
js
dec
adc
push
scas
add
stos
adc
out
movsl
lea
mov
popf
or
pop
icebp
mov
out
sbb
xchg
pop
ja
mov
icebp
add
mov
xlat
mov
or
outsl
aam
fcomps
lds
or
imul
loopne
loope
push
pop
sbb
sbb
lret
pop
lods
or
pop
and
cltd
xchg
dec
fsubr
sbbb
jno
mov
pop
aaa
or
lock
and
adcl
dec
pop
rclb
inc
fs
sbb
mov
push
add
add
adc
dec
cli
movsl
add
popa
cmpsl
xor
mov
sub
mov
mov
and
stc
adc
sub
mov
pop
add
mov
add
push
or
push
je
and
ret
xchg
push
test
dec
add
movsl
xchg
push
cmp
xchg
mov
fldcw
xchg
cld
rcrb
subl
cs
loopne
add
xchg
mov
mov
dec
and
pop
fcoml
cmp
and
andl
sub
push
jb
pop
lea
pop
add
lret
xchg
shlb
aam
or
cmp
mov
sub
push
mov
pop
lods
lahf
fs
test
mov
mov
pushf
push
mov
rolb
fildll
or
shlb
into
jl
imul
or
das
imul
fnsave
notb
in
inc
repnz
ret
out
iret
or
xor
div
fs
mov
pop
sbb
js
sbb
sub
stos
xor
cmpsl
popl
shrl
jbe
roll
shr
loopne
out
push
cld
mov
and
pop
loope
sbb
xchg
mov
xor
mov
mov
and
mov
lods
andb
sbb
jmp
iret
push
sub
arpl
adc
subl
addl
lds
clc
ret
pop
sbb
hlt
rcrl
mov
mov
dec
das
add
xchg
mov
mov
push
in
pop
mov
pop
jg
push
stos
stos
mov
mov
dec
out
push
jecxz
mov
push
lods
subl
je
pop
daa
mov
jecxz
daa
std
jmp
jne
aaa
dec
addr16
fwait
mov
pop
jne
xor
push
or
dec
mov
gs
cltd
xchg
xor
ss
bound
aaa
scas
dec
adc
orl
inc
xor
add
inc
cli
sbb
xchg
jb
cmp
lock
sti
adc
je
and
pop
lea
loop
sarb
insb
dec
sub
test
into
fnstcw
add
push
push
jo
into
add
out
mov
out
adc
aaa
iret
pop
gs
jmp
sub
mov
movsl
or
pop
lahf
cmc
push
flds
push
add
popf
jne
or
out
sub
xchg
dec
pop
pop
jge
pop
mov
sub
sbb
jmp
das
add
xor
add
cmpsl
xor
xorb
out
pushf
adc
xor
imul
pop
iret
sar
pop
scas
cs
xor
adc
or
xchg
loope
es
pop
or
test
or
dec
adc
jge
loope
lret
sbb
pop
sarl
add
out
sbb
inc
das
loop
sub
xor
jnp
bound
xor
inc
dec
pop
or
sbb
test
sub
mov
imul
pop
dec
pop
inc
xor
fwait
data16
and
stos
cmp
inc
clc
aad
xor
in
mov
and
gs
mov
inc
push
adc
cmpsb
add
xchg
addl
dec
mov
fcoms
leave
inc
call
jne
inc
inc
jmp
fisubrl
pop
dec
jno
xchg
sahf
fmuls
xchg
cld
sbb
bound
jbe
shl
shll
cmc
out
jbe
repz
cmp
js
add
adc
push
rcrb
and
int3
add
pop
shl
adc
fldt
push
enter
adc
lods
xor
add
xor
mov
mov
dec
mov
movsb
mov
xor
sub
and
dec
lods
insl
jns
mov
aaa
lahf
inc
test
push
es
test
sbb
add
mov
add
push
mov
push
adc
jge
dec
mov
inc
and
mov
shlb
nop
add
std
and
call
addl
or
arpl
jne
xchg
faddp
out
and
xchg
mov
pop
fwait
push
xlat
mov
shll
int
jmp
testl
in
jmp
xor
or
mov
imul
xchg
ja
add
dec
push
dec
roll
scas
jmp
push
jg
ljmp
insl
sbb
xor
mov
jmp
ret
shl
loop
xchg
adc
iret
repnz
cmp
xor
xor
mov
or
dec
rolb
iret
inc
pop
inc
dec
cmp
out
jns
adc
flds
add
jno
xor
clc
adc
sbb
lcall
jecxz
in
movsl
test
mov
outsl
in
adc
ds
pop
add
movsl
inc
mov
ss
jns
sbb
xchg
nop
lahf
mov
and
pop
xchg
shrb
setno
add
scas
hlt
jnp
mov
je
xchg
xchg
cmp
adc
outsb
bound
clc
adc
shl
outsl
mov
push
aam
jne
test
jg
mov
mov
stc
and
jnp
sti
and
clc
ret
fsubrs
bound
popa
dec
addr16
mov
ror
pop
orb
ljmp
in
out
and
xchg
loopne
popa
pop
sbb
ret
xor
xchg
imul
push
pop
pusha
xchg
cmp
mov
xchg
xor
loop
repz
call
pop
sub
mov
enter
pop
inc
cmpsb
and
mov
aas
add
subl
jge
sbb
xor
icebp
lahf
pop
adcl
mov
out
add
testl
jae
lahf
les
test
div
cmp
inc
enter
and
sbb
adc
mov
movsb
fidivrs
inc
xor
mov
push
test
test
cmp
es
lret
pop
stos
push
pushf
test
fdivl
cmpsl
sbb
pop
bound
in
and
loopne
aad
iret
mov
mov
sub
lock
inc
adc
ds
sbb
lods
pop
pop
in
les
bound
orl
stc
and
mov
jle
jo
movsl
push
xlat
test
mov
popf
xor
xlat
and
inc
or
mov
loope
xchg
sbb
dec
movsb
ret
sub
inc
xchg
jge
mov
dec
and
mov
push
lret
lret
push
mov
mov
jecxz
mov
add
sub
inc
stc
push
push
popf
test
mov
inc
mov
sbb
loopne
mov
adc
sbb
add
popa
jle
outsb
dec
add
sbb
jne
push
push
add
lahf
push
or
mov
into
push
dec
popf
movsb
ja
sub
xlat
mov
push
inc
add
add
and
stos
inc
and
cld
sbb
ss
das
add
lret
in
mov
sahf
add
push
pusha
lahf
dec
aaa
dec
rorb
xchg
cmp
shll
dec
jecxz
gs
repz
out
daa
pop
and
pop
push
adc
jecxz
xor
cltd
out
jp
xlat
rorl
xor
inc
dec
or
mov
cltd
mov
add
and
add
xorl
cmp
inc
movzwl
jp
sbb
gs
sub
ljmp
jne
es
xchg
fwait
push
push
sti
and
mov
lods
out
pop
pop
sbb
iret
xor
popf
pop
js
inc
dec
in
movsb
add
popa
flds
and
mov
cmc
xbegin
test
jmp
aaa
add
and
imull
mov
push
iret
popf
in
adc
push
xchg
out
push
pop
and
or
pop
dec
push
and
cvtps2pi
xchg
xor
or
push
loopne
cmp
ljmp
jbe
into
adc
dec
rcrb
and
mov
sbb
daa
add
lock
arpl
pop
test
and
sub
test
aas
jle
out
iret
push
bound
dec
loop
in
fisubrs
inc
les
cwtl
out
mov
icebp
sbb
sbb
jecxz
pop
es
inc
outsl
jecxz
dec
jno
mov
jb
sub
std
xchg
adc
mov
mov
sbb
inc
bound
xlat
nop
jmp
push
aaa
sub
sub
inc
fcompp
test
out
insb
mov
sti
pop
rol
pop
fcmovne
setae
jae
mov
inc
sub
out
xchg
stos
mov
adc
add
enter
std
mov
nop
sbb
inc
or
or
mov
mov
cmp
sbb
pop
shr
lcall
mov
test
in
xchg
in
xchg
inc
fdivr
mov
sbb
test
repz
inc
movsl
inc
aad
test
jmp
dec
movl
and
shlb
jno
imul
stc
es
inc
scas
add
xchg
pushf
mov
adcl
lock
adc
add
lods
sub
fisubrl
push
and
test
fiaddl
push
push
orb
jno
sub
shlb
arpl
aaa
fisttpl
fadds
adc
inc
sbb
xchg
jae
jmp
or
xchg
mov
addr16
fwait
jo
jmp
adc
rcll
jae
xor
xchg
mov
and
fdivs
ss
or
or
mov
mov
cmpsb
pusha
nopl
or
scas
rol
add
fnstcw
cld
or
addr16
add
xchg
les
lds
pop
adc
inc
pop
sbb
add
movb
jno
mov
jmp
push
arpl
aaa
or
loope
mov
adc
sub
cmpsl
fs
repz
pop
sub
lock
and
sub
jbe
xor
inc
or
jmp
push
data16
push
filds
cmpsb
xchg
daa
stc
insl
and
pop
push
loope
add
jns
fsubrs
cmp
sub
xchg
add
jge
mov
or
pop
punpcklbw
lods
xor
pop
dec
add
xchg
mov
adc
das
insl
js
aad
adc
aas
pop
pop
hlt
xchg
ds
loopne
dec
js
shll
adc
scas
or
mov
pop
pusha
shl
in
loop
sahf
and
add
dec
jmp
arpl
pop
ret
pop
or
jbe
das
je
add
dec
sub
jmp
fadds
and
xbegin
mov
sbb
and
jnp
adc
es
rol
mov
repz
mov
out
and
aaa
test
sbb
jne
push
adc
jmp
inc
dec
lods
test
mov
dec
add
xor
daa
and
sbb
mov
cmpsl
ja
insl
and
adc
cwtl
fsubrl
sarb
jge
add
test
mov
mov
test
push
inc
scas
fcmovb
xchg
aas
lock
mov
pop
xchg
adc
shlb
fwait
sbb
or
adc
pusha
ja
lods
fbld
adc
or
sbb
lea
xor
cmp
fnstsw
or
dec
add
call
popf
call
and
xchg
shlb
pop
clc
adc
or
pop
cmp
jb
jp
pop
sbb
fcmovb
lds
sbb
xchg
cmp
add
nop
sbb
popa
mov
fwait
jno
push
pop
add
xchg
test
dec
movsl
dec
sub
and
jp
add
mov
inc
and
gs
mov
or
cmp
leave
leave
pop
lock
xlat
adc
push
rorl
xchg
mov
sbb
add
stos
fwait
stos
dec
mov
push
cwtl
iret
lret
inc
lret
aaa
push
test
mov
pop
bnd
pop
enter
lret
scas
dec
popf
adc
adc
loope
add
ss
or
xchg
outsb
arpl
inc
aaa
rolb
shl
push
je
mov
push
lcall
xchg
sarb
inc
pusha
popa
imul
icebp
jge
rcr
or
pop
inc
insl
push
shl
adc
sbb
leave
nop
scas
call
iret
dec
shll
rcll
nop
add
mov
lret
sub
pop
addr16
fisubrs
dec
stc
ret
fsubl
popf
aaa
sbb
cli
adc
sbb
xchg
sahf
mov
pop
dec
pop
popf
sti
mov
shrl
xlat
jecxz
xor
rorl
push
repz
sub
pushf
sarl
sti
fimuls
or
lock
pop
or
or
pop
mov
add
push
sbb
push
les
push
add
lock
clc
fnstcw
test
or
ja
scas
adc
gs
or
pop
inc
jl
pushf
or
pop
lods
lret
loope
jp
add
mov
icebp
xor
mov
test
ja
sub
out
and
pop
jae
push
sbb
ret
jg
mov
or
hlt
fiadds
jge
sub
out
and
stos
xor
jp
pop
add
loop
lret
jae
fildll
cmc
test
incl
lcall
repnz
push
fisubrl
iret
mull
out
inc
sbb
or
incl
subb
push
push
sub
das
sub
xor
mov
shlb
fmuls
nop
xchg
add
mov
iret
roll
hlt
adc
jmp
fwait
xchg
dec
add
nop
pop
xor
push
mov
loope
fldl
jmp
inc
test
jg
pop
stc
add
mov
add
andps
sub
xchg
push
add
mov
mov
fucompp
add
out
popa
push
cmp
adc
aas
movsl
xlat
dec
or
out
aas
sub
pop
and
pop
gs
sbb
add
lock
cmp
scas
and
add
xchg
ret
xchg
addl
or
xor
repz
xchg
push
lea
push
mov
xchg
mov
test
push
cmp
mov
mov
fstps
sti
dec
mov
sub
push
sbb
fldenv
test
les
sub
stos
insb
cmp
pop
add
push
arpl
sbb
daa
fldl
push
stos
pop
push
pop
sub
sbb
lea
jp
cmp
stc
adc
dec
and
addr16
fcmovbe
pop
pop
fistl
dec
stos
mov
pushf
into
mov
xchg
jno,pt
mov
xor
add
pop
enter
or
out
xchg
jae
add
push
sbb
adc
fwait
rcrl
inc
lods
test
dec
jne
outsb
sbbb
push
ficomps
jg
aaa
outsl
ss
and
out
add
jge
fwait
sub
jle
nop
nop
aam
sub
rorl
in
push
sbb
inc
loopne
ret
sub
cmp
push
xlat
stos
iret
jp
aam
cmp
mov
and
xsha256
cmpsb
push
insl
push
mov
addr16
xchg
in
dec
xor
mov
lock
divl
iret
mov
mov
xchg
dec
dec
cli
xchg
push
inc
movsb
xor
xchg
aas
xor
in
std
daa
adc
icebp
xchg
mull
add
es
xchg
clc
addr16
int3
and
pop
mov
push
sbb
add
fistpll
mov
in
cmpsl
daa
rclb
pop
cmp
xor
xor
xadd
ljmp
cmp
jmp
adc
sbb
divl
dec
pop
pop
repnz
adc
push
push
or
jae
ja
xchg
mov
xchg
aad
sarb
sub
xorl
aam
lret
push
inc
stc
jl
jmp
mov
lods
jbe
xor
into
push
push
pop
fmull
dec
xor
les
rorb
stos
push
mov
adc
mov
ds
addl
in
pop
sbb
ljmp
add
test
pushf
decl
mov
jnp
outsl
imul
movsl
lea
cwtl
sbb
lods
dec
repz
aam
loope
pop
hlt
xchg
addr16
lods
repz
and
out
xchg
pop
sti
xorl
xchg
popl
pop
mov
sub
adc
fdivs
jne
push
xchg
jb
mov
sbb
fwait
push
ret
or
inc
out
sbb
and
add
mov
jge
das
rorb
es
cld
je
cmc
sti
fistl
adc
add
sbb
in
pop
mov
loop
outsb
lods
push
rorb
cmp
jecxz
adc
add
jge
inc
pop
lods
movsl
cmp
roll
fwait
jns
ffree
inc
je
lcall
jecxz
xor
iret
xchg
add
push
cmpsb
inc
aas
and
push
and
adc
addr16
sub
xor
fmuls
add
lcall
mov
jge
xor
mov
arpl
icebp
enter
ret
pushf
adc
dec
leave
aaa
pop
dec
add
mov
int3
es
cmp
cmp
aaa
mov
jae
xchg
cmc
hlt
leave
jno
xchg
enter
movsl
clc
stos
add
pop
inc
mov
and
into
mov
ja
push
jns
xchg
mov
mov
adc
pusha
sub
je
adc
in
dec
dec
push
xor
shrb
les
add
pop
push
popa
and
or
data16
add
mov
sub
dec
aad
push
pop
sub
or
dec
nop
leave
push
mov
clc
movsb
jge
sbb
mov
cmp
or
xor
add
adc
enter
jo
add
jmp
mov
clc
mov
sbb
xchg
push
aam
imul
jecxz
test
iret
pushf
mov
jecxz
pop
adc
rsm
lds
xor
add
jb
repnz
xchg
data16
outsl
xchg
rolb
inc
jnp
adc
mov
cmp
call
mov
jmp
or
mov
pop
inc
rcll
movsb
jmp
sbb
mov
out
sub
and
xor
dec
jmp
jo
das
lret
xchg
dec
mov
and
jae
and
jae
or
xchg
inc
add
cmp
add
pop
sarl
loopne
loopne
push
test
add
rorb
fwait
xchg
sbb
sub
mov
aaa
cmpsl
icebp
and
fcoms
and
mov
lods
xchg
cmp
xorb
jnp
jp
roll
adc
mov
push
lahf
add
pop
push
mov
js
xor
push
sub
dec
jo
cmp
push
sub
out
jns
dec
js
sbb
inc
mov
fdiv
push
hlt
cmp
cmp
pop
ret
jns
mov
movsb
or
cmp
lret
add
dec
insb
inc
or
scas
rorb
push
mov
xchg
sbb
push
mov
sub
loopne
das
jecxz
add
push
dec
mov
adc
xor
or
imull
sub
lahf
inc
outsb
inc
jmp
fwait
inc
cmp
out
scas
adc
pop
mov
inc
xor
xlat
je
pusha
inc
fiadds
pop
shl
imul
push
add
add
test
jno
in
movsb
sahf
mov
mov
loopne
xor
inc
lea
dec
loopne
cmp
loopne
test
test
mov
jge
mov
es
xor
cmpb
das
pusha
or
mov
es
add
adc
sbb
inc
fsubrs
and
insb
test
xor
cwtl
pop
test
xor
stos
negl
ja
sub
pop
enter
popf
adc
sbb
push
cwtl
mov
adc
movsb
jnp
jo
and
pop
je
scas
xchg
imul
inc
cmp
xchg
mov
push
ret
jp
mov
shll
sub
adc
fmull
das
or
adc
loope
or
loopne
add
hlt
icebp
jae
sbb
add
push
mov
cmc
push
ljmp
or
rorb
jae
aas
aas
xor
jecxz
in
and
clc
adc
mov
jg
in
adc
jbe
aaa
fcomp
cmp
loope
in
mov
dec
or
sbb
xchg
ret
mov
movsb
cmpsl
orl
mov
add
add
or
adc
scas
aas
pop
or
cmp
cwtl
ret
push
pop
inc
add
xchg
jne
mov
add
inc
pop
inc
or
inc
or
push
xchg
mull
jb
pop
add
cmp
cmp
mov
mov
das
insl
inc
dec
sbb
sbb
add
jbe
aam
cmp
or
sbb
jge
or
or
and
mov
mull
pop
aaa
je
hlt
inc
dec
dec
inc
sub
push
test
adc
fs
add
mov
xchg
loop
adc
cmpsb
jecxz
xchg
inc
push
dec
jl
pop
lret
lods
mov
or
push
inc
fistpl
fstpt
jae
sub
in
xor
stos
into
cmp
subb
mov
xlat
lods
icebp
jmp
mov
insb
dec
inc
mov
fisttpll
push
xchg
sbbb
adc
push
rcl
add
iret
push
mov
test
lods
lock
sub
push
loope
popa
or
mov
sarb
fwait
xchg
xor
or
outsl
push
dec
inc
and
add
xor
lret
test
dec
jo
dec
xchg
shll
testl
in
or
call
cmp
js
in
inc
sub
jo
enter
adc
pop
mov
mov
ja
pop
mov
fsubs
pop
mov
stos
inc
mov
push
mov
add
incl
and
jne
popf
push
push
inc
loopne
in
stc
sbb
mov
loop
adc
dec
add
mov
and
pop
aam
sbb
addr16
stos
sub
adc
adc
xor
xor
xchg
cmp
xchg
mov
push
lahf
gs
mov
inc
outsb
ja
and
std
and
sbb
es
adc
pop
xor
cs
gs
fcomps
add
dec
test
cmp
shrl
lods
in
ret
jo
mov
jne
jae
pushf
stos
and
movsb
imul
push
or
xchg
sbb
or
iret
or
call
and
mov
popf
add
inc
fdivl
sub
or
std
push
insb
fnstenv
icebp
inc
xorb
arpl
pop
mov
or
mov
or
dec
aam
sub
hlt
adc
lahf
add
ret
push
mov
mov
test
cmp
and
sbb
aas
aaa
inc
xchg
or
movsl
out
add
mov
repz
inc
sbb
add
movsl
lret
mov
cwtl
sbb
pop
adc
or
pop
or
mov
dec
arpl
loope
popa
mov
or
imul
pop
imulb
bound
add
sti
pop
test
dec
adc
push
jns
cmp
jecxz
jnp
imul
push
addb
pop
bound
das
loope
sub
test
jg
aas
xor
pop
iret
insb
dec
fucomi
push
in
pop
adc
push
adc
jbe
js
insb
add
pop
xchg
cltd
adc
icebp
in
fnstcw
or
sbb
mov
ljmp
sub
fcomip
dec
add
cs
and
or
scas
jp
mov
mov
scas
xchg
test
int3
add
pop
loope
xchg
sub
mov
lea
shl
inc
add
insb
fcoml
sbb
daa
pop
push
out
or
loope
and
cld
mov
pop
test
mov
pop
sub
addr16
xchg
nop
xchg
adc
int
imul
mov
jns
arpl
movhps
inc
popa
mov
mov
ret
shrb
inc
lods
das
int3
mov
jnp
call
arpl
push
scas
xchg
nop
pop
mov
add
jno
push
jg
adc
jmp
scas
iret
popf
imul
dec
sbb
and
cmp
popa
xchg
adc
andl
cmpsl
dec
xchg
mov
push
iret
popa
dec
push
pop
mov
fidivrl
pop
adc
icebp
les
sub
jno
add
push
add
add
xchg
sarl
shrb
cld
loope
leave
test
popf
iret
je
xor
aas
int
dec
sbb
push
inc
and
pop
test
mov
test
sub
sub
je
sub
cmp
add
xor
jecxz
sub
mov
cmpsl
adc
addb
push
popa
push
mov
psubsw
sbb
push
mov
mov
insb
insl
add
rcr
xchg
mov
ljmp
fimuls
pop
insb
mov
scas
insl
les
push
aaa
lcall
pusha
jmp
sub
dec
mov
jne
mov
jne
and
rcrb
jmp
rcl
adc
out
popa
addl
and
testb
enter
test
jecxz
cmpb
iret
mov
cmpl
add
xlat
add
sub
orb
in
loopne
cmp
lcall
dec
jae
mov
xor
lret
sbb
add
push
and
mov
dec
lock
push
lock
sbb
cmp
xor
cmp
mov
xchg
jne
ljmp
out
push
shll
test
shr
mov
sbb
xor
stos
lds
rorb
mov
jb
subb
add
stos
loope
inc
js
rorb
ret
jmp
xchg
test
pop
sub
call
sbb
aad
xorl
rcrl
mov
call
lret
push
inc
test
mov
movsl
imul
push
insl
mov
push
inc
aaa
test
outsl
and
shll
jle
mov
icebp
hlt
sub
jg
jno
push
inc
jnp
pusha
mov
int
jo
jbe
dec
mov
push
jmp
je
sarb
movsb
mov
adc
push
mov
mov
test
adc
sbb
sub
enter
pop
test
push
jle
aam
xor
mov
dec
mov
dec
into
ljmp
test
cs
dec
dec
jp
xorl
jg
adc
mov
jge
pop
addb
mov
int3
push
add
adc
add
sbb
sar
mov
nop
out
inc
xchg
pop
xorb
sbb
dec
ja
dec
jb
and
sbb
push
pop
or
cmp
add
ret
test
and
or
jnp
stc
loope
jns
pushf
inc
es
lret
push
shlb
loope
xchg
sahf
inc
cltd
rcrl
or
mov
dec
add
pop
inc
pop
ret
push
ss
das
rorb
lret
lcall
test
mov
jge
nop
outsb
and
lret
scas
inc
xchg
pop
sub
jne
jae
mov
pop
in
push
or
call
aad
notb
icebp
add
sub
mov
imul
js
sti
mov
add
or
loop
jle
sbb
sub
loop
loope
xor
mov
test
inc
popf
cmp
pop
xchg
mov
and
fisubs
adc
xchg
cmc
cmp
xor
push
xchg
xor
add
stos
adcl
pop
sub
out
adc
jp
lock
dec
cmp
jbe,pt
insb
roll
xor
std
jecxz
lods
sbb
dec
gs
lea
into
aaa
orb
js
xchg
and
sbb
and
sub
jno
sbb
xchg
cmc
nop
mov
push
rclb
cmp
jmp
push
rcrl
sub
push
lods
jg
and
test
lcall
sbb
test
mov
mov
mov
dec
test
pop
and
add
imul
fisubl
cmp
add
push
add
nop
push
lods
fdivrl
mov
jmp
pusha
daa
enter
lahf
jecxz
xlat
lods
fcomps
lret
dec
ret
push
mov
addb
lahf
xchg
fdivrl
loop
inc
cmpsl
dec
aaa
pop
mov
test
push
insl
cli
lods
lret
mov
sbb
lcall
lock
jg
xchg
pop
orb
clc
ret
test
mov
fidivl
inc
and
pop
jmp
sbb
mov
test
rcll
js
les
cltd
adc
iret
adc
sbb
sub
adc
push
mov
repnz
lea
clc
ja
add
mov
add
js
sub
push
jbe,pn
adc
cmpsb
sahf
jnp
dec
sub
or
jge
mov
and
jmp
sbb
loopne
daa
pop
sbb
int
mov
xchg
xchg
ret
cli
cmp
sarb
hlt
fadds
jmp
mov
jo
cmp
insl
dec
or
outsb
outsb
sub
and
mov
inc
sub
mov
sbb
movsb
nop
rorb
xchg
dec
sub
out
fisubs
pop
sub
add
mov
sbb
shr
dec
cmc
popf
inc
or
fbld
or
cmp
bound
cltd
mov
adc
js
pop
sti
aaa
push
gs
iretw
push
sbb
push
or
addr16
mov
cmp
jae
pop
fxch
add
test
cmpsl
dec
push
das
dec
push
xchg
das
or
push
xchg
xchg
pop
sbb
stos
sahf
subl
push
daa
shll
adc
jns
rcll
iret
mov
and
rorl
loop
idivb
jo
ffree
orl
lahf
imul
dec
dec
or
int3
iret
xorl
fsubr
jge
inc
cmp
popw
sbb
mov
frstor
dec
and
test
les
ds
and
cmp
inc
aad
jne
inc
dec
pop
stos
cmp
add
xor
jno
and
or
hlt
dec
imul
inc
xchg
jmp
daa
mov
xchg
xchg
mov
jae
cmp
dec
mov
mov
dec
xchg
mov
cmpl
push
bound
scas
jg
mov
sub
sbb
fildl
push
lock
mov
dec
inc
dec
int
pop
sbb
sbb
adc
xchg
lods
iret
cmp
gs
cmp
lahf
inc
hlt
add
sub
xor
sbb
jmp
add
test
sbb
idivb
mov
sbb
sbb
test
loopne
into
movsb
mov
sbb
mov
test
dec
sbb
out
inc
aaa
and
add
imul
push
mov
xchg
adc
and
mov
inc
ret
adc
addb
orb
mov
mov
js
xchg
adc
std
mov
test
add
cli
or
xchg
inc
mov
add
jp
adc
das
je
sarb
sti
lock
jno
sbb
and
pop
out
mov
push
gs
das
popa
nop
fisubs
or
testl
xchg
push
pop
rclb
flds
es
add
push
mov
test
add
add
mov
pop
or
imul
out
mov
pusha
sbb
pop
lods
loope
cmpb
jle
push
and
je
adc
or
into
dec
cmp
xor
dec
jbe
or
inc
fstpl
sub
frstor
xchg
jno
lods
inc
or
jmp
rcrl
pusha
repz
xchg
ss
push
insb
nop
pop
mov
les
ficomps
mov
cmp
mov
pop
or
adcb
and
xchg
push
fbld
loop
dec
add
inc
add
mov
inc
cld
mov
daa
ret
or
xchg
pop
dec
loope
stc
iret
xor
scas
ja
jns
inc
pavgb
clc
add
mov
adc
pop
movq
push
mov
cmpsl
xor
stos
pop
push
adc
icebp
sub
fstpl
xchg
mov
pop
sub
jge
cmp
push
lret
das
push
cmp
in
jmp
jg
push
shrl
lods
inc
add
ljmp
jmp
adc
xchg
cli
test
dec
in
and
outsb
cmpsl
mov
orl
jne
jae
enter
adc
and
iret
mov
imul
add
out
cmc
pop
es
mov
mov
jmp
mov
addr16
pop
loope
cmpsl
and
stos
adc
in
testl
xchg
inc
enter
js
loopne
xchg
fisttpll
js
fs
add
add
sbb
call
dec
xor
test
jle
js
pop
idivl
test
jge
or
add
or
adc
mov
push
inc
subb
movsb
sti
out
iret
and
xchg
xchg
movsb
xchg
les
out
sahf
inc
dec
loopne
adc
scas
js
das
sbb
push
jecxz
ja
inc
cld
insl
xor
popa
testb
cmp
insb
push
cmpb
cltd
inc
imul
sub
inc
lods
stos
mov
or
sbb
loopne
dec
cmp
fwait
lret
sub
jns
xchg
lds
adc
fimull
fcomps
imul
push
enter
push
and
fistpll
into
insl
inc
sbb
or
pop
or
add
pop
xor
xchg
iret
mov
fs
stos
mov
push
ljmp
add
push
gs
mov
jg
adc
fmul
jg
and
xchg
pop
sti
push
inc
xor
out
jl
and
insb
sbb
dec
dec
mov
mov
das
pop
mov
push
xchg
insl
jp
jne
inc
jl
adc
iret
mov
jmp
in
inc
xchg
mov
rcrl
daa
and
sbb
or
add
mov
enter
adc
enter
sbb
sub
lret
jle
lods
loope
cmc
xchg
push
int
leave
add
jne
or
into
pop
mov
shlb
iret
push
lret
addr16
arpl
sub
test
inc
subb
xchg
sub
adc
mov
sub
sub
es
pop
lret
add
andb
mov
sbb
mov
sub
xlat
lcall
jno
dec
push
fstl
jmp
and
fnstsw
divl
cmc
std
fsts
sbb
adc
fsubrl
iret
pop
sbb
sbb
mov
popf
cmpsl
or
outsb
mov
fsts
jp
dec
xchg
nop
mov
add
orb
subl
outsb
imul
sbb
fistpll
or
lea
icebp
sub
adc
or
xor
cmp
push
enter
lcall
pop
fld
pusha
jge
and
insl
pop
adc
add
sbb
iret
clc
sbb
sub
xorb
dec
and
xchg
or
aaa
jge
subb
xchg
imul
in
ret
dec
inc
dec
shrl
nop
add
cltd
ret
ljmp
inc
leave
icebp
insl
inc
insl
in
aam
pusha
mov
dec
loopne
mov
cmpsl
sub
ret
test
cmc
clc
cmpl
lds
sbb
ds
ds
dec
movsb
jb
and
and
adc
push
sbb
xor
jae
sub
lcall
push
jp
xchg
jne
mov
lods
imul
mov
xchg
pop
ret
mov
cmp
pusha
and
ret
dec
xchg
lea
cmp
jl
adcl
lods
sbb
fstpl
sub
dec
cltd
dec
mov
jb
cs
sbbb
scas
adc
inc
xchg
jnp
or
std
pop
push
sub
jo
xor
mov
rcrl
jno
sub
in
or
dec
pop
ljmp
xchg
movsl
pushf
adc
mov
out
dec
aaa
jno
fwait
pop
mov
dec
jl
aaa
xorl
jmp
push
jmp
std
ficomps
adc
rcr
jbe
gs
scas
inc
into
shl
frstor
push
mov
lret
and
mov
fwait
test
add
leave
cmp
shll
cmp
cmpsl
push
lock
cmpsl
pop
lds
push
xor
xchg
add
movb
dec
lret
mov
movsb
pop
dec
xchg
arpl
push
mov
jle
or
dec
mov
pop
stc
sub
bound
inc
add
mov
ljmp
arpl
jle
pop
add
lock
add
imul
add
pop
lahf
sbb
out
add
pop
jl
cwtl
and
mov
in
inc
mov
pop
mov
mov
fwait
adc
sub
fidivrs
push
mov
imull
aad
xchg
loopne
cmp
fdivl
div
xlat
sbb
xchg
mov
inc
add
out
xor
enter
pop
or
ret
add
mov
pop
adc
mov
fcomps
lods
dec
push
dec
jo
insb
sbb
dec
fstp
xlat
xchg
or
push
or
pop
add
repz
jnp
jnp
ret
mov
mov
pop
hlt
lcall
sub
xor
insl
inc
cmpsb
daa
sub
leave
and
add
jg
inc
adc
shr
sub
and
dec
adc
push
jl
leave
cmc
jle
outsl
std
hlt
test
xchg
adc
cmp
jecxz
push
ficoms
pop
fxtract
adc
add
loope
and
sbb
shlb
cmp
pop
cmp
xorl
mov
fiadds
dec
cmp
add
scas
std
inc
addr16
mov
cli
adc
imul
pop
adc
movntps
xlat
inc
xlat
hlt
jecxz
add
pop
pop
add
cmp
rcrl
mov
loopne
push
or
shrl
inc
inc
add
cmpsl
or
ret
iret
daa
sar
fsubrs
inc
fstps
sbb
enter
andb
cmp
arpl
add
or
arpl
add
js
add
mov
jns
out
mov
int3
add
pop
iret
mov
xchg
ret
cltd
mov
popf
mov
decl
pusha
out
xchg
out
fiadds
fs
pusha
scas
sbb
mov
lea
xor
jno
pop
in
dec
add
cmpb
lock
lea
cmp
je
shll
cmp
cmpsb
iret
push
push
or
adc
arpl
scas
sarb
adc
adc
pop
iret
sti
sbb
and
hlt
xor
and
sub
mov
mov
jnp
xchg
or
mov
adc
or
jnp
rolb
jno
shll
xchg
dec
sub
or
dec
jl
xor
mov
fmuls
cmp
cmpsl
pop
sbb
mov
js
nop
mov
sub
push
sahf
inc
aaa
xchg
popf
and
push
adc
rorl
lea
and
pop
push
mov
lock
push
mov
xchg
jbe
dec
scas
ret
popa
or
xchg
and
loope
and
imul
cs
icebp
loopne
aam
movsb
icebp
pop
mov
inc
dec
sbb
mov
and
inc
xor
cmc
pop
dec
loope
sbb
push
push
mov
push
ret
xor
fldt
xchg
mov
faddl
fidivrs
pop
shlb
mov
pop
ret
lods
lods
xchg
scas
cltd
ret
dec
sbb
mov
adc
mov
inc
mov
sub
or
mov
xchg
xchg
iret
into
lea
inc
loop
je
sub
pop
lods
fimull
repz
mov
call
test
dec
cmp
sbb
repz
insb
adc
add
nop
icebp
mov
ds
pusha
popa
dec
fidivrs
rorl
mov
xchg
sarl
cmp
add
fwait
dec
int3
ffreep
imul
adc
ss
in
add
mov
xchg
mov
adc
sub
jno
insl
xchg
xor
jne
ret
adc
mov
lcall
sti
out
out
cmp
sbb
addr16
les
fisubs
jecxz
sub
dec
stos
into
mov
ja
and
adc
jnp
cld
fildl
cmp
xchg
and
cltd
in
fsub
add
add
arpl
test
ror
add
scas
push
repnz
dec
mov
pop
and
mov
xchg
mov
insl
xlat
dec
inc
mov
imul
pop
adc
daa
ret
rcrb
push
andb
orps
pop
xchg
push
jo
add
test
cmp
les
xor
mov
sbb
sbb
pop
sub
sbb
in
ds
mov
push
stos
xor
fsubrl
mov
ret
inc
or
loop
into
test
aad
jecxz
sahf
mov
ss
push
mov
lock
sarl
pop
scas
ss
popw
iret
out
pop
lret
mov
pushf
push
and
add
ret
in
shrl
in
push
and
push
xor
pop
in
daa
inc
icebp
jb
inc
sbb
jge
add
jg
adc
sti
jmp
scas
popa
push
push
lods
addr16
push
pop
mov
js
adc
dec
jmp
test
loop
loope
sbb
or
add
aad
push
dec
xchg
mov
ret
stc
hlt
ds
leave
xor
mov
add
add
add
and
repz
jbe
les
adc
insb
add
inc
stos
inc
push
call
push
pusha
test
cmpb
mov
int
xchg
xor
inc
and
pop
leave
cmp
pop
or
outsl
ret
and
xchg
or
pop
sarl
cli
inc
and
rclb
lret
cmp
addr16
jbe
xchg
ds
or
cltd
pop
adc
ja
and
lds
sbb
jnp
add
jae
cmpsl
fidivrs
sub
pop
dec
loope
xor
mov
out
and
lds
pushf
sub
mov
or
scas
cmp
insb
loopne
cmc
xor
xor
mov
sbb
xor
mov
outsl
push
sbb
and
repz
mov
push
and
fadd
or
popf
xchg
push
sahf
sbb
lods
fs
clc
sbb
sub
das
insb
iret
mov
mov
pop
and
pop
jae
jnp
imul
aad
adc
mov
add
in
xor
pop
bound
or
jb
cmpsl
adc
adc
adc
adc
fucomi
mov
or
jge
cs
testl
adc
rcll
loopne
sbb
or
cmc
or
lahf
xchg
ljmp
and
jmp
inc
push
pop
cmp
sub
stos
sub
popf
add
test
pop
jno
or
test
mov
jnp
orl
pop
mov
mov
add
push
jle
rcr
jg
rolb
inc
add
das
or
subl
mov
sbb
and
add
insl
push
mov
pop
cmpsb
or
js
push
es
xor
lea
mov
mov
jmp
push
push
adc
push
and
sbb
fsubrl
cmp
mov
xor
pop
adc
addl
divl
aad
cmpsl
mull
mov
scas
out
adc
or
test
push
pop
mov
test
hlt
arpl
shrb
popf
stc
pop
jmp
or
pop
ss
sbb
push
push
or
je
hlt
push
loop
test
mov
daa
scas
push
icebp
add
lods
test
adc
dec
bnd
push
adc
add
dec
cmc
cmp
mov
es
dec
loopne
push
sbb
pop
push
adc
add
jecxz
or
xchg
sub
inc
andl
xchg
or
push
arpl
call
loope
push
aad
mov
into
inc
add
sbb
in
adc
and
or
pop
dec
sbb
add
cwtl
test
pusha
or
or
mov
cmp
xchg
and
inc
pop
arpl
push
lds
adc
out
rorl
ja
mov
cmc
addr16
sub
addl
fldl
aas
sbb
pop
push
xchg
push
xchg
xor
jle
test
add
and
fldl
hlt
dec
add
cmpsl
inc
or
cmp
cmp
aas
push
es
sbb
scas
ret
pop
xor
push
xor
out
outsl
push
push
push
fsubs
cld
mov
es
mov
inc
jmp
jge
addr16
or
subl
or
jle
fcompl
push
push
aas
pop
nop
mov
xchg
adc
or
inc
push
or
xor
addb
lods
adc
adc
insb
sub
int3
push
lcall
jbe
pop
sub
xlat
xchg
jle
out
fldenv
cmp
push
gs
lods
ja
inc
mov
push
jnp
or
dec
dec
cmp
and
xor
push
test
cmpsb
hlt
add
mov
jp
mov
and
movsb
xor
inc
dec
jns
jle
das
movsb
cmpsb
mov
sub
in
fildll
sbb
xorb
xor
mov
mov
jne
jbe
rorb
shl
mov
mov
nop
fidivl
movsb
in
xor
es
mov
xchg
data16
aam
jbe
movsb
mov
scas
inc
shlb
jno
clc
jp
push
add
dec
jmp
xor
or
dec
jb
adc
mov
adc
pop
jl
mov
jl
gs
xchg
pop
push
popf
jp
or
xor
sbb
inc
ja
dec
cltd
push
outsl
popa
and
xchg
mov
out
mov
pop
jbe
pop
xchg
fiadds
xor
mov
gs
push
aaa
cmc
push
inc
sub
push
std
jne
popf
fdivrs
dec
dec
mov
add
cmpsl
push
inc
or
push
push
addr16
syscall
push
push
add
sbb
fdivs
and
xor
andl
shll
into
pop
adcb
ss
addb
mov
push
scas
pusha
jl
repz
scas
sti
jo
push
and
repz
dec
push
pop
adc
cmp
iret
mov
inc
lea
leave
lods
out
pop
cld
dec
lods
jmp
loopne
xchg
and
mov
lahf
es
in
sub
add
in
push
mov
insl
int
aas
roll
dec
sbb
es
pop
push
or
push
shll
cmp
jno
mov
or
cmp
fsubrs
lea
sub
dec
sbb
and
pop
adc
mov
call
cmp
mov
push
xchg
jnp
aaa
mov
pop
mov
jo
and
das
pop
movl
mov
lods
loop
mov
aas
scas
lahf
cmpsb
lret
mov
ja
lahf
fisubl
xor
sbb
sbb
sub
jo
sub
and
dec
pushf
fsubl
lea
mov
jns
fs
mov
push
adcl
and
movsl
adc
fildll
push
insl
adc
pop
in
and
xchg
shlb
cmpsb
sub
or
dec
in
stos
pop
add
add
sub
das
or
sub
in
mov
cmp
mov
add
adc
and
clc
mov
sbb
daa
mov
int3
lret
scas
test
iret
arpl
fnsave
leave
sub
jmp
sahf
call
cmp
ja
add
add
shl
imul
inc
dec
loope
out
movsl
mov
je
pop
add
test
mov
mov
adc
add
ss
cld
jb
mov
jb
push
stc
add
or
push
adc
sub
push
xor
push
xchg
mov
rol
mov
mov
sbb
mov
or
add
sarb
add
adc
popf
out
into
out
add
or
in
xor
shlb
push
xor
push
ss
adc
jge
pop
ljmp
pop
inc
mov
jns
push
pop
nop
cs
mov
mov
filds
sub
or
icebp
dec
insl
jns
shlb
sbb
xchg
pusha
adc
sbb
dec
les
add
dec
lds
in
sub
inc
fildll
add
daa
aaa
and
test
sarl
fsubl
and
pop
or
in
arpl
mov
and
add
mov
pop
pop
sub
rorl
sub
push
or
mov
sub
mov
pop
jb
aaa
movsb
scas
rorl
jmp
sub
jmp
add
pushf
rcrb
sbb
xchg
xchg
or
sar
add
inc
ret
xchg
sarb
push
jle
repnz
add
je
jmp
das
push
dec
push
jns
add
lret
roll
push
xor
xchg
and
sub
imul
lods
inc
mov
and
add
and
or
out
into
or
aad
push
shlb
mov
push
loopne
pop
add
inc
and
sub
sbb
loopne
add
xor
add
jp
or
iret
insb
push
iret
test
xor
mov
sub
fbstp
mov
push
loopne
dec
shlb
and
fiadds
and
enter
enter
into
dec
fnsave
fs
cwtl
pop
mov
and
or
addl
out
inc
adcl
push
push
inc
roll
add
and
and
adc
xor
je
pop
je
inc
add
push
loopne
lea
lret
add
push
dec
jo
jle
in
inc
xchg
imul
enter
enter
lock
and
and
lret
sub
sbb
pop
mov
add
ss
jbe
push
sub
movsb
and
mov
jge
int
and
orb
imul
adc
pop
dec
pop
lock
pop
out
and
sbb
pop
add
shrb
jbe
shll
aad
add
or
imul
ljmp
stos
jle
aad
xor
fisttps
ret
dec
mov
xor
mov
lods
in
xor
call
gs
adc
dec
aas
jl
addr16
outsb
push
int3
repnz
hlt
and
mov
aaa
jp
cmp
shrl
or
in
ficomps
rorb
addb
xor
push
aam
inc
add
in
iret
mov
out
sbb
insl
pop
jno
bound
add
jg
loope
push
fstps
cmp
cmc
pusha
fistps
cmpsb
inc
imul
cmp
adc
xchg
in
add
push
fcmovb
divb
mov
push
add
js
or
pop
rol
enter
scas
cmpsb
cmp
pusha
cmpsl
inc
jb
push
iret
sbb
mov
or
fisubs
loop
pop
in
mov
test
loopne
loope
push
pop
xchg
sub
loope
lods
xchg
xlat
imul
cs
push
scas
sbb
mov
jo
mov
jnp
scas
je
rcl
mov
jae
inc
push
mov
xchg
cmp
xchg
push
pop
enter
scas
in
lods
xor
pop
mov
sub
fmull
iret
or
loopne
sub
movsb
ja
mov
and
ss
fwait
xor
cmp
ds
cs
movsb
add
stos
xchg
sbb
les
or
xchg
popa
push
nop
cmp
daa
adc
out
lahf
mov
add
cmc
mov
push
push
inc
inc
inc
xchg
loopne
xor
ror
mov
popf
fsubs
pop
out
lcall
out
scas
cmpsl
outsl
add
mov
cmc
mov
imul
push
xchg
jne
scas
ss
adc
cmpsb
and
roll
push
jp
test
lcall
es
loopne
xchg
inc
xchg
xor
fdivs
add
pop
pop
mov
pushl
rorl
pop
cmp
or
add
mov
xor
xor
ret
cs
sub
or
or
push
test
shll
adc
push
cmp
mov
inc
insl
push
sbbl
popa
and
push
pop
sbb
xor
add
les
cs
loope
loope
fmuls
xor
push
rcrl
add
cmp
push
fs
jp
out
add
inc
and
or
mov
mov
popa
and
push
add
popa
and
jmp
or
dec
loope
and
lcall
mov
cli
mov
sahf
aad
mov
adc
addr16
imul
rcrb
out
inc
mov
out
sub
sub
mov
pop
jbe
mov
or
insb
mov
mov
pop
pop
mov
fdivs
loopne
insl
lds
and
outsb
mov
add
jle
and
nop
lea
mov
lds
sub
and
adc
and
inc
cmc
sahf
push
in
scas
loopne
into
inc
push
test
adc
add
fdivs
sub
pop
mov
loopne
adc
jne
ret
out
pop
into
aas
or
stos
push
shrb
cmp
inc
jmp
addl
movsb
mov
pop
arpl
mov
pusha
mov
inc
popa
add
or
dec
lahf
movsb
jle
mov
sbb
andl
jecxz
fwait
push
pusha
pop
mov
xlat
into
push
or
aam
inc
sub
outsl
add
push
loopne
fimull
adc
es
xchg
dec
mov
jmp
cwtl
sub
gs
outsb
dec
push
jecxz
divl
cmp
in
jno
push
pavgb
js,pn
inc
test
pop
in
inc
sub
xchg
subl
or
cmpb
pop
xor
jg
test
ja
scas
mov
enter
cmc
and
fists
inc
adcl
sbb
jns
dec
test
into
sbb
neg
mov
mov
lds
mov
dec
nop
pop
lahf
sarb
jbe
add
jno
leave
js
dec
movsb
loope
jle
inc
orb
mov
ss
lds
sti
ret
push
adc
or
add
lret
or
xor
ret
and
mov
fmull
in
push
rcrb
sbb
imul
or
jmp
jl
adc
push
xor
dec
loop
test
movsb
pop
dec
lock
pop
jmp
dec
mov
sub
daa
mov
js
ja
pop
pusha
lret
push
dec
xlat
fiaddl
cmp
inc
dec
or
mov
jl
jno
ret
aam
xchg
xchg
pop
insl
stos
add
test
cmp
adc
push
test
cmp
mov
jo
and
loopne
insb
sub
cs
scas
mov
and
jg
loope
js
jae
aam
sbb
shl
adc
inc
fsub
ljmp
and
xor
mov
test
lea
std
cmpb
test
shrb
mov
popa
sbb
jmp
mov
cmp
in
rcl
inc
arpl
mov
ret
iret
inc
inc
subl
mov
pop
outsl
jmp
ret
push
xor
fldl
ud1
cmp
cmp
sbb
pushf
and
movswl
dec
jp
lods
stos
pop
bound
mov
xor
sbb
dec
sbb
or
lret
lcall
test
xor
aad
faddp
mov
sub
xchg
es
aad
lret
and
add
pop
lea
dec
push
loopne
jp
fistl
jo
popa
sub
cmpsb
rol
jne
mov
inc
in
popa
add
in
outsb
int
xchg
mov
jnp
or
sub
xchg
jmp
and
add
mov
dec
cmpsb
movsl
test
outsb
cmc
pop
push
insb
xlat
rolb
lds
sbb
bound
aad
mov
and
mov
movsl
adc
jo
mov
mov
push
sbb
stos
jle
je
out
leave
jno
stos
adcb
adc
iret
push
push
push
inc
aas
test
add
adc
inc
bndstx
pop
or
sbb
inc
xor
xor
and
xor
xchg
inc
scas
push
jbe
xchg
add
sbb
cmp
lods
xorl
xchg
out
adc
jge
aas
lock
push
cwtl
cwtl
rolb
pop
inc
push
loope,pn
sub
test
popa
sub
push
addl
sub
mov
jecxz
dec
je
or
call
xchg
ss
xchg
push
mov
fdivs
jge
lock
andb
notl
pop
pop
cmp
call
rclb
jl
pop
imul
jmp
sar
or
icebp
aaa
mov
aas
cmc
add
repz
mov
pcmpgtd
pop
push
xchg
and
mov
push
lcall
jnp
and
sub
push
dec
ret
sbb
jecxz
cmpl
jge
sbb
and
mov
ret
les
test
sub
xor
mov
adc
or
push
imul
pusha
int3
and
pop
in
adc
pop
push
cmp
test
dec
pusha
nop
leave
xchg
pop
pop
lods
lret
jne
lret
mov
fmul
in
adc
xor
nop
jmp
mov
repz
mov
mov
lret
xor
leave
mov
mov
sbb
addr16
xlat
shr
stc
xor
das
outsb
arpl
jno
add
add
or
inc
sbb
or
rcll
jmp
or
and
adc
or
mov
btc
mov
mov
fildl
pop
xor
sub
pop
dec
adc
inc
aaa
addr16
adc
or
int
adc
loopne
jmp
dec
lods
nop
es
bound
pop
mov
push
enter
mov
icebp
test
insl
popf
inc
add
mov
inc
push
rorb
sub
dec
push
enter
sub
outsl
add
jle
or
sbb
das
sub
repnz
and
int
pop
xchg
adc
jne
cmc
inc
movsb
jmp
fnstenv
iret
mov
inc
mov
lret
in
or
dec
cli
add
mov
cld
pusha
icebp
mov
push
iret
stos
add
cmpsl
test
idivl
jo
inc
or
or
hlt
outsl
sahf
cmp
cmp
xor
daa
pushf
pop
fistps
fdiv
add
or
xor
imul
jge
and
orb
add
xor
push
xchg
daa
xor
inc
jecxz
push
insb
adc
in
dec
sub
dec
mov
xor
dec
push
dec
add
and
inc
pop
xor
adc
in
test
inc
ds
cs
js
add
loope
ljmp
cmp
dec
lahf
popa
aaa
mov
ficomps
add
rorb
push
stos
enter
push
or
lret
and
push
dec
maskmovq
cvttps2pi
je
xchg
xchg
mov
jb
aas
xchg
inc
bound
lods
cltd
xchg
ret
scas
mov
ja
mov
adc
inc
imul
test
and
and
sub
rorl
popa
or
sub
mov
or
dec
mov
mov
xchg
andl
aas
stc
movsb
popa
dec
aas
andb
lods
push
aam
ret
and
sti
add
xchg
aam
rolb
push
out
xchg
outsb
sbb
lods
fdivrs
lods
fadd
mov
mov
cmpsl
pop
cmp
add
adc
jl
bound
test
mov
lea
test
shl
inc
es
daa
cmp
js
ror
mov
in
pop
xorl
dec
add
pop
mov
pushf
pop
jae
pop
stos
mov
sbb
testl
fs
sbb
sbb
lea
jmp
mov
in
adc
dec
sub
aam
or
iret
push
xchg
or
inc
push
push
sbb
push
sub
mov
adc
stos
movsl
cmp
jno
stc
js
and
idivl
xchg
xchg
xchg
mov
icebp
mov
sbb
jnp
clc
mov
test
movsb
sub
outsl
or
iret
fwait
dec
fwait
jns
cmpsb
inc
sub
mov
or
mov
adc
cltd
mov
push
cmp
es
fldt
sub
mov
lret
sub
jle
sub
int3
shlb
cs
in
xchg
dec
jecxz
flds
fidivs
mov
pop
xor
icebp
test
pop
adc
mov
xor
xor
lea
mov
sbb
daa
repz
dec
dec
add
xchg
es
push
out
clc
and
or
mov
or
and
arpl
sub
push
stos
aaa
pop
add
shlb
xchg
fs
jl
sub
imul
dec
add
cmpsl
movsb
jecxz
and
xchg
lea
sbb
lods
daa
roll
or
sbb
cmp
les
mov
push
and
int
mov
test
cwtl
outsb
inc
dec
mov
inc
add
and
pop
in
daa
adc
or
jnp
cwtl
add
mov
insl
add
push
dec
inc
or
nop
stos
fsubs
adc
xchg
xchg
test
push
fnstcw
fwait
popf
jmp
out
add
lds
data16
out
inc
push
xor
jae
mov
lcall
adcl
ret
rolb
int
dec
dec
dec
inc
xorb
outsl
nop
adc
gs
mov
pop
and
mov
popa
xor
sar
ret
lret
xor
cld
subb
cmp
shr
jmp
lret
dec
cltd
cmp
xchg
movsl
add
sub
rorb
lock
add
in
ror
mov
sbb
mov
incl
cmp
push
add
sub
mov
add
or
fstps
and
xor
leave
xor
nop
call
push
jg
clc
sbb
and
jp
andb
sub
pop
cmc
loop
add
push
adc
pop
rolb
mov
pop
xchg
enter
cmpsl
dec
cmpl
and
pop
cmpl
xchg
ret
pop
bound
test
popa
or
inc
std
mov
inc
ja
rcl
mov
xchg
jmp
cmp
hlt
fdivrs
xchg
adc
popf
cmp
pop
mov
xlat
sahf
or
pop
test
pop
and
sub
add
xor
mov
shrb
cmp
mov
and
pusha
add
inc
cli
mov
add
or
mov
pop
pop
ljmp
mov
push
enter
call
xor
push
cmpsl
cs
inc
cmp
addr16
loope
jbe
mov
rcrl
xchg
inc
sarb
or
insb
push
pusha
cmc
add
imul
test
dec
add
mov
jo
dec
dec
das
jmp
stos
lock
cmp
push
sbb
push
ret
stos
das
mov
add
mov
pop
je
jne
add
enter
jmp
fs
xor
inc
cwtl
mov
je
dec
mov
mov
add
push
cmpsb
rclb
test
bound
cltd
popf
rol
or
jns
or
icebp
and
fdivr
xchg
loopne
rcl
lods
out
aam
lods
fdivrl
add
and
addl
sub
add
lock
insb
imul
cmc
dec
cmpsl
and
mov
nop
sti
inc
adcb
movsb
iret
xchg
sbbb
xchg
test
lods
jmp
popf
add
or
push
xchg
add
sbb
imul
jge,pt
lahf
or
push
and
add
outsb
dec
sub
je
pop
pop
in
shll
inc
xadd
add
mov
subb
mov
ja
nop
mov
or
xchg
popf
xchg
push
cmc
mov
jne
sbb
inc
insb
in
mov
jb
add
mov
leave
sbb
or
scas
enter
pop
clc
xchg
fsubl
xchg
adc
lock
and
mov
aaa
fadds
pop
jns
and
test
mov
icebp
add
pusha
lods
xchg
push
add
fsts
or
pop
pushf
adc
es
add
inc
mov
xor
sub
sbb
xchg
xchg
mov
ljmp
mov
sbb
movups
mov
lds
sbb
adc
test
ljmp
divl
xchg
rol
cmpsb
ret
or
add
stc
rcl
imul
jno
cmc
sbb
mov
xchg
dec
adc
push
loope
shl
sub
mov
push
imul
add
test
cmp
outsl
and
pop
cmp
and
aam
xchg
xchg
mov
lods
testl
lods
negl
cmp
ds
pop
sub
jl
iret
enter
adcb
mov
fs
insb
sub
mov
pop
scas
dec
and
push
add
jne
adc
pop
add
xchg
insb
push
push
inc
testl
jecxz
lea
jge
inc
ja
sbb
sub
adc
xchg
adcl
pop
xchg
pusha
add
inc
sbb
clc
or
xor
cmp
mov
fbld
or
xchg
sbb
fisubl
test
add
ss
jae
and
ljmp
xchg
and
or
or
push
stos
mov
add
xor
push
fstpl
adc
mov
mov
cmc
mulb
cld
andb
imul
aaa
loope
jns
xor
ss
in
pushl
mov
je
mov
mov
pop
add
jmp
rolb
lahf
inc
adc
subb
xchg
push
aas
jno
push
mov
lret
sub
loope
pusha
cmp
loope
push
adc
movsl
test
or
rol
push
bound
cmpb
movsl
roll
arpl
call
lds
mov
dec
data16
pop
push
xchg
je
push
mov
sbb
mov
aad
add
lahf
jmp
pusha
idivl
pusha
popf
ror
push
les
mov
add
add
add
in
push
pop
lods
mov
sbb
cmc
dec
add
jae
jmp
movsl
iret
adc
pop
inc
ds
jmp
xor
shr
dec
cmp
loopne
pusha
sbb
xchg
xchg
xor
pusha
movsb
add
aam
xchg
mov
xchg
outsl
in
sub
andb
loopne
push
pop
out
aas
xor
popa
mov
sbb
jo
push
sarl
push
dec
lahf
push
and
mov
fs
mov
clc
inc
or
lods
push
adc
fisubl
ficomps
push
cmp
jbe
fstps
test
dec
inc
or
cmpsl
add
rorb
push
pop
push
sub
jo
int3
pop
mov
mov
jno
or
pop
pop
xchg
xor
xlat
xorl
pop
xchg
sub
aad
mov
test
mov
xchg
dec
add
popa
lea
adc
inc
dec
mov
inc
xchg
mov
jl
dec
inc
movsl
jns
leave
sahf
les
insl
and
ret
sbb
das
mov
scas
decl
int3
jb
popa
lock
dec
fnstenv
out
insl
fld
or
pop
or
ror
xor
js
jbe
and
cs
xchg
pop
xor
out
fdivl
push
jmp
fstpl
mov
xor
loopne
cs
xchg
xchg
je
pop
lret
mov
sbb
mov
movsl
jae
xchg
outsl
sti
clc
dec
jne
rcl
outsb
aam
jmp
imul
fidivl
test
jl
xchg
mov
sub
jge
sub
push
add
mov
xchg
add
pop
pop
and
and
xor
jo
dec
push
sbb
fxch
rcl
and
push
out
ret
nop
push
pop
das
mov
push
push
imul
pop
rol
add
jmp
xorl
clc
js
popa
mov
pop
inc
test
or
or
pop
mov
mov
fsubr
cwtl
mov
in
or
in
in
aas
daa
xchg
adc
sbb
testb
add
or
pop
and
out
pop
adc
shrl
out
xor
iret
inc
sub
lods
ss
dec
imul
mov
mov
sbb
popf
xor
xchg
sbb
nop
loope
loop
in
shll
mov
push
fmuls
pop
mov
outsb
js
lods
cmc
xchg
jo
loopne
inc
cmp
or
and
mov
mov
cmp
stos
sbb
outsl
add
sub
rolb
cmpsl
orl
cmp
jl
outsl
pop
je
ret
adc
leave
nop
or
mov
test
sbb
xor
jecxz
cmp
clc
repnz
flds
or
xor
and
cmp
scas
xor
ror
add
mov
or
int
mov
adc
pop
leave
jg
cmp
and
add
pop
jo
mov
inc
add
xchg
dec
sbb
add
dec
push
inc
adc
fisttpll
pop
adc
addl
das
and
cltd
loop
add
inc
sub
test
jae
or
movq
negb
sbb
stos
mov
jmp
sbb
and
and
jg
or
daa
xor
dec
loope
pop
shlb
or
pop
out
cmc
enter
add
xor
test
js
sbb
jecxz
jecxz
leave
push
lret
rcl
sarb
lret
xchg
and
dec
call
and
sbbb
push
xor
aaa
add
and
ret
lret
push
js
xorl
sbb
lods
xchg
dec
call
aam
xchg
iret
fs
and
jns
popa
pusha
mov
adc
xor
fldenv
test
push
mov
popa
sbb
aam
add
leave
outsb
or
loopne
lret
jl
iret
pop
dec
out
cmp
cs
in
add
push
lcall
mov
popa
sub
ja
pop
into
dec
fdivrs
add
int3
and
inc
stos
push
mov
push
jbe
sbb
arpl
stc
mov
pop
cld
sub
add
ss
jb
jle
call
lret
cmp
dec
insl
imul
out
enter
adc
pop
iret
or
movsb
fcomp
add
je
lahf
xchg
mov
pop
test
jecxz
mov
fsubs
adc
xor
jae
shr
pusha
test
pop
out
ss
or
pusha
xchg
or
or
movsb
inc
daa
dec
int
shrb
mov
push
pusha
xchg
jmp
push
add
andb
cld
sub
pop
aam
sbb
adc
roll
stos
add
btr
in
fsubs
test
arpl
dec
fs
outsl
jo
sub
lods
ds
adc
cmp
add
or
push
mov
lret
push
icebp
fldenv
or
and
mov
xchg
push
cmpl
movsw
pop
add
aaa
add
loopne
push
mov
pushf
xchg
pop
loop
pop
lods
xor
sub
pop
xchg
andb
or
jmp
in
mov
jmp
jns
mul
adc
cmp
push
cmp
add
jmp
lret
pop
imul
cmp
das
mov
dec
cmp
out
movsb
int3
push
imul
test
sahf
lea
adc
test
dec
xchg
leave
sub
mov
cmp
arpl
inc
cmp
sbb
cmpsl
mov
sbb
mov
stos
fwait
pop
aam
sub
mov
stos
mov
aam
dec
add
cmc
mov
cmp
jl
mov
sub
mov
adc
xor
in
xchg
jo
add
dec
popf
mov
xchg
psraw
jge
jmp
stos
or
and
mov
cmp
repnz
out
adc
push
push
ret
mov
inc
frstor
aam
mov
ret
inc
sbb
lret
pop
xchg
lret
fisttpl
bound
xorl
insb
add
ret
lret
aaa
lcall
sbb
xorl
enter
ret
push
inc
mov
xchg
sbb
ret
sbbb
ret
cld
inc
sahf
add
pop
jle
lods
mov
mov
pop
rcrl
test
inc
adcl
or
push
enter
and
jne
shll
int
xchg
js
mov
mov
ss
mov
daa
pusha
icebp
add
cmp
xor
push
add
rolb
pop
jae
push
xlat
or
dec
les
sub
dec
int3
ret
add
dec
gs
adc
test
cli
pop
add
insl
cmp
aaa
pop
pop
add
xchg
fistpll
xor
enter
sub
cmp
es
or
rcrb
test
push
outsb
pop
lods
fwait
cmp
mov
push
das
jg
pop
dec
cmp
add
xor
jnp
xchg
add
iret
add
mov
addb
sbb
pop
dec
pop
out
mov
lock
adc
mov
and
add
inc
pusha
or
xor
pop
jle
push
jmp
lret
push
cmp
fucomip
mov
push
add
dec
mov
or
push
or
or
inc
scas
sub
cmp
inc
je
outsl
ds
add
xchg
pop
add
testl
xor
inc
sbb
pusha
jecxz
jp
mov
mov
pop
sbb
dec
jmp
mov
je
scas
adc
and
pop
mov
fldcw
mov
cmp
push
cli
add
movsl
rcrl
inc
lds
xor
popa
add
mov
sbb
or
in
xor
cltd
mov
addl
movsb
aaa
xchg
andl
push
ret
mov
aaa
jp
adc
ds
lea
daa
cmp
mov
cmp
filds
nop
repnz
xchg
or
xor
inc
xor
mov
loope
sbb
jge
ss
lea
push
test
clc
nop
inc
push
js
popa
ret
imul
test
sbb
mov
test
fcomps
mov
push
add
push
push
mov
jp
or
add
aaa
xor
mov
aaa
nop
inc
js
imul
add
add
je
sbb
movsb
xchg
outsl
sbb
nop
lret
jg
addb
add
and
test
adc
xor
mov
jmp
push
push
cmp
adc
repnz
or
rcrl
lock
jbe
lret
sbb
mov
mov
xor
lock
push
rorl
int
add
std
cmpsb
sahf
lea
ret
orb
xor
lahf
sbb
push
insb
push
cmp
outsb
cmp
stos
pop
inc
mov
mov
adc
push
push
adc
dec
adc
adc
shl
insl
imul
xor
ljmp
rcll
sbb
lea
inc
adc
xor
dec
ret
adc
mov
fs
ret
mov
adc
loopne
xchg
clc
das
inc
daa
sub
push
enter
xchg
pop
jo
imul
add
mov
mov
out
adc
jnp
movl
out
cmp
pop
in
push
cltd
mov
mov
in
out
pop
imul
mov
dec
mov
add
fists
xor
inc
hlt
add
arpl
in
pop
pop
sub
stos
mov
data16
adc
push
iret
movsb
rol
jno
loop,pn
je
arpl
lahf
push
and
nop
sbb
jo
sbb
je
out
sub
jmp
insb
pop
gs
imul
sbb
jecxz
shrb
test
mov
lods
xlat
dec
pop
adc
xor
das
and
or
nopl
ret
add
popa
bound
mov
lds
aaa
adc
mov
mov
push
jns
or
xchg
sti
shll
out
jns
push
jecxz
inc
stc
stos
add
lcall
push
dec
push
fistpl
pop
jnp
xchg
sub
je
mov
lods
jmp
cld
dec
sub
add
dec
cmp
aam
dec
xchg
iret
inc
xor
xor
push
lcall
add
sbb
aam
out
inc
movsl
jp
xchg
jo
sbb
adc
cmc
dec
stos
add
roll
pop
adc
xchg
inc
imul
and
mov
or
pop
add
fistpll
sbb
cmp
sub
pop
push
sub
jo
test
push
push
mov
sahf
lea
sbbb
test
push
xlat
leave
lds
sbbl
in
outsl
sti
add
add
add
mov
js
adc
out
sub
dec
mov
iret
orb
xchg
xor
add
pop
aaa
sub
into
testl
cs
stos
mov
ja
or
je
out
cmp
fimull
js
or
push
sbb
xor
pop
mov
dec
push
lock
cmc
fcompl
popf
push
sbb
jecxz
orb
ljmp
outsb
rolb
or
in
scas
stos
insl
jne
test
aad
cwtl
inc
stos
add
je
xlat
xchg
std
aaa
out
add
test
add
insl
mov
or
pop
sahf
pop
add
xor
je
movsw
dec
lret
pop
scas
das
xor
icebp
lret
outsl
frstor
mov
jecxz
test
and
test
popf
shlb
scas
daa
pop
mov
push
call
cmp
pop
popa
adc
mov
leave
xchg
clc
adc
mov
xor
mov
scas
lock
mov
dec
inc
dec
push
bound
jae
xor
js
pop
adc
shll
cmc
stc
loopne
shl
stos
push
mov
test
dec
gs
xor
adc
jg
mov
lods
repnz
xor
pusha
sub
hlt
xor
leave
subps
jns
adc
cli
sti
mov
pop
dec
push
fildl
mov
clc
adc
push
leave
inc
icebp
dec
lcall
enter
xchg
and
repz
or
cwtl
fldcw
xchg
mov
flds
int3
xor
xchg
es
mov
mov
into
mov
inc
sbb
test
es
jge
or
add
outsl
xchg
repz
push
lods
adc
xor
es
mov
int3
imul
lods
and
cmp
push
xlat
or
mov
cmp
adc
ljmp
and
dec
lock
add
ja
jmp
jbe
ja
or
sub
add
insl
or
sbb
ja
insb
imul
fstp
add
je
cmpsl
adcb
dec
adc
bound
aam
rorl
inc
les
frstor
ficoms
data16
jge
addr16
clc
jae
pop
or
subl
or
or
rcrl
or
and
arpl
mov
jg
test
adc
incb
int
std
cmp
stos
scas
jnp
mov
lods
push
gs
xlat
xorl
iret
aad
ds
xlat
jo
ret
sbb
sub
add
add
cwtl
cmp
cs
ret
daa
es
js
sub
lret
pop
stos
xor
mov
test
sub
sahf
inc
adc
sub
cmp
or
pop
cmpsb
jg
daa
cmp
scas
into
push
test
add
sbb
pusha
inc
gs
and
rcrl
inc
dec
fs
pop
lds
mov
adc
sbb
movsl
jle
add
out
stos
or
push
fistpll
inc
dec
in
mov
or
dec
xor
xor
mov
mov
cmp
cwtl
addb
mov
lret
adc
pop
movsl
xor
lods
ja
cltd
mov
jnp
clc
add
xchg
dec
fists
fnsave
imul
fwait
mov
outsl
cwtl
add
xor
dec
jecxz
mov
pushf
int3
mov
sbb
add
and
lock
cmp
sub
aam
loop
xorl
and
ret
inc
insb
mull
inc
push
add
pop
mov
pop
push
add
mov
jnp
cltd
mov
push
inc
mov
xchg
inc
push
imul
xlat
and
neg
dec
test
std
shll
fsts
and
mov
pusha
es
xchg
dec
rcrl
xchg
sub
fcomp
div
loopne
fildl
out
popf
fiadds
mov
aas
xor
jnp
bound
insl
xor
jne
jne
lahf
leave
adc
or
inc
cmpsb
data16
inc
jmp
mov
loopne
jnp
hlt
test
mov
mov
mov
dec
jge
js
mov
stos
pop
pop
cmp
je
sbb
cltd
popf
aas
xor
mov
sub
data16
jecxz
test
imull
jo
adc
dec
mov
cmpsb
add
jl
xchg
out
mov
cmc
adcb
xlat
faddl
pop
cmpsl
int3
inc
push
out
sarl
jns
out
popa
xchg
push
mov
repz
popa
sti
test
pop
xor
aas
mov
in
mov
pop
lret
cmp
xchg
fldl
filds
shl
pop
mov
mov
xor
add
iret
xor
jecxz
cmp
mov
pop
dec
sbb
sahf
xor
or
mov
add
into
fstpt
pop
pop
stos
sbb
mov
sbb
js
rorl
inc
pop
jae
popf
mov
sbb
xlat
mov
cmp
out
inc
iret
pushf
lods
movsl
push
jle
push
and
pop
or
emms
adc
adc
fwait
mull
loop
push
mov
cmp
test
mov
dec
xchg
jge
push
dec
lahf
leave
push
xor
ret
cs
mov
adc
add
subl
out
fwait
inc
js
push
cmp
leave
jge
js
fdivl
in
stc
sahf
mov
repz
add
aas
pop
sub
pop
cmpsl
mov
cs
fisubl
inc
das
faddp
and
add
push
sbb
loope
data16
out
lds
cmc
sbb
pushf
mov
pop
cmp
cmp
popa
rcll
xchg
and
pop
testb
push
loopne
mov
jecxz
sub
pop
adc
cltd
inc
js
mov
push
jb
in
mov
rcrb
orl
fs
ljmp
add
and
out
mov
lods
pop
push
fs
adc
cmp
xlat
xor
or
int
push
xor
or
mov
cmpsl
daa
sbb
xchg
push
imul
test
inc
mov
scas
aaa
or
mov
adc
xchg
sbbb
and
or
in
dec
pop
jg
add
or
add
xor
dec
mov
cmp
shrb
jp
sbb
fmulp
sub
lahf
lahf
test
fcmovbe
and
shrb
add
fnstcw
inc
inc
add
xchg
addl
in
inc
cmp
js
or
jns
lret
pop
jo
push
test
adc
mov
push
jg
pop
rorl
nop
and
mov
mov
push
or
jmp
push
mov
nop
mov
sub
loopne
ret
nop
loopne
add
lea
test
arpl
jnp
sub
pop
rclb
add
and
jb
pop
and
push
xchg
imul
fsubp
lods
jg
xchg
fdivrl
call
inc
add
mov
and
mov
or
cltd
sahf
popa
xorl
stos
adc
xchg
mov
sbb
mov
mov
sub
fcomps
xchg
or
ds
cmp
fs
cmp
jecxz
add
mov
pusha
outsb
roll
fbld
cmpsl
test
lock
sub
dec
inc
ret
mov
pop
test
aas
ret
iret
out
or
jle
pop
pop
dec
rcrb
inc
jl
push
xor
jae
lea
clc
cmp
loope
lret
das
aad
add
mov
lret
xor
mov
jo
inc
sub
mov
cmp
in
add
xor
movsb
pop
pop
and
test
jmp
sbb
xchg
add
stc
popa
aam
mov
incl
add
js
test
pop
sbb
add
nop
add
mov
cmpsl
push
subb
lds
push
out
clc
sub
jo
xchg
lods
add
add
test
insl
mov
inc
adc
push
add
mov
fwait
dec
cltd
mov
fildl
popf
shr
jne
push
jbe
mov
iret
mov
sub
add
js
daa
scas
push
adc
stos
js
push
les
push
sbb
loopne
shll
iret
add
sbb
test
shll
add
add
loope
rcrl
adc
sub
push
inc
or
dec
add
add
jb
test
in
add
mov
xchg
jmp
loopne
pop
add
cld
push
add
add
pop
add
add
and
sbb
shrb
and
das
sbb
push
cs
lods
loop
or
ficompl
ja
lods
push
sbb
test
ja
or
mov
and
mov
pop
popa
add
push
jb
add
sbb
pusha
add
sbb
add
xor
push
or
shll
loopne
add
mov
subb
test
pop
add
xor
jo
add
add
jae
rol
cmp
pop
add
sbb
rol
jg
mov
pop
xor
pop
pand
and
lods
or
xor
cli
je
xor
hlt
add
and
push
and
xor
cmpb
mov
sbb
js
shll
cltd
cmp
das
add
adc
cmp
add
jmp
sti
jbe
repnz
xorl
je
lods
push
imul
mov
xchg
dec
xor
clc
mov
inc
mov
cmp
xorb
adc
outsl
imul
push
adc
les
dec
add
or
xorl
xchg
cwtl
mov
scas
mov
scas
dec
pop
mov
shr
mov
xor
fnsave
xor
xlat
mov
scas
pop
inc
adc
aam
lret
scas
jp
test
cmp
add
sbb
dec
or
inc
add
and
jle
pusha
test
sbb
push
cmp
mov
sub
mov
adc
mov
xor
cmp
fsts
pop
or
lock
mov
subb
jo
ljmp
and
filds
add
push
cwtl
xor
mov
inc
mov
scas
cmp
dec
mov
add
push
out
and
filds
xor
cs
jmp
cmc
push
orps
mov
push
dec
add
add
mov
jp
fwait
sbb
jge
rcll
xchg
and
jl
inc
add
jl
shlb
add
loop
pusha
mov
adc
popf
adc
call
stos
cld
pop
xchg
jmp
mov
add
mov
out
cmpb
pop
add
repnz
out
sub
add
or
in
lods
adc
shlb
or
sbb
stos
shll
leave
jmp
push
push
jp
insb
xchg
add
add
add
scas
xor
nop
add
jge
add
lahf
jo
out
or
in
and
fs
daa
cmpb
out
hlt
mov
inc
in
icebp
pop
lds
mov
and
lea
popf
adc
lret
je
or
daa
pop
pusha
add
add
lods
xor
iret
adcl
in
xor
fimull
rolb
icebp
push
push
dec
add
jmp
adc
mov
add
add
rorb
add
fwait
sbb
sbb
cld
pusha
sub
mov
aam
out
xchg
add
xor
cmp
movsb
in
xor
push
test
or
and
xor
adc
sbb
sbb
iret
adc
jnp
popf
ds
jge
mov
in
dec
and
add
and
repz
repz
or
cmc
iret
xor
ja
add
add
and
cmp
cmp
lock
arpl
inc
or
or
push
add
mov
push
mov
incl
les
mov
repz
mov
in
daa
add
popa
or
add
xchg
xorb
jbe
sarb
hlt
adc
add
mov
mov
inc
loopne
pop
ret
add
sub
aaa
pop
in
sbb
in
add
cmp
sub
add
js
or
mov
jo
mov
push
adc
loopne
ret
jecxz
add
adc
mov
jecxz
fimuls
add
jno
push
add
pop
and
scas
mov
xor
mov
addb
xchg
sbb
jo
or
fildl
add
insb
sbb
testl
add
and
call
xchg
fsubp
stc
mov
shrb
mov
adc
or
push
push
nop
xor
add
pop
test
loopne
mov
iret
sub
mov
pop
lods
dec
sbb
add
je
inc
add
cmpl
sbb
or
ds
arpl
push
pusha
cmove
in
add
add
rorl
adc
cmp
add
imul
or
add
sub
add
inc
add
pushf
mov
cmpsb
aad
add
fld
cmpsl
loope
mov
in
fistpl
mov
xlat
aam
rol
ret
orb
lds
ss
mov
xor
push
popf
add
and
out
sub
rcll
adc
nop
or
dec
xor
mov
nop
ret
in
xor
jno
movsl
adc
shrb
pusha
xor
inc
sbb
mov
add
movsl
mov
and
cmp
cmp
das
mov
jo
lea
in
mov
repz
fadds
push
sbb
icebp
push
add
xorb
add
fisttpl
scas
roll
mov
xor
lret
xor
int3
or
ja
pushf
icebp
add
rolb
int3
rcrl
testl
adc
cmp
imul
lock
test
out
xor
push
jbe
sahf
xchg
daa
add
mov
jno
ja
loopne
movhlps
dec
cmp
lds
add
decb
imul
loop
sbb
adc
or
in
pop
lret
data16
jl
lods
adc
add
test
aam
and
fcomp
inc
or
xchg
orl
add
ljmp
cmpsl
sbb
inc
mov
ret
xchg
icebp
add
fadds
mov
cwtl
lds
add
add
sub
jg
add
jo
or
negl
mov
icebp
mov
clc
xchg
in
sbb
push
scas
or
movsl
cmp
je
shll
or
sub
xor
push
lock
repnz
fbld
push
arpl
das
test
ret
push
or
lcall
pop
fistps
movb
negl
xor
bound
shll
pop
or
and
loope
jg
lret
add
inc
jae
inc
mov
dec
loop
test
xchg
pop
add
shl
shl
cmp
sub
pop
cmpb
sub
mov
push
cld
inc
push
sbb
iret
pushf
xor
sbb
push
jne
stc
cmp
aas
fildl
or
lods
insb
insb
xchg
jo
not
aaa
shr
test
outsb
sbb
jp
icebp
lahf
xor
lret
dec
or
push
xor
inc
dec
push
cs
pop
pushf
fs
dec
push
add
cmpsb
dec
inc
inc
jl
push
ret
mov
inc
sbb
adc
aas
inc
jmp
xchg
jb
sbb
sbb
push
nop
ret
pop
adc
and
cmpsl
mov
lods
adc
mov
mov
push
sbb
shll
or
movsb
add
mov
fcomip
sti
test
fidivrl
push
xorl
loopne
fists
lea
rorl
push
push
mov
test
jnp
cmpsb
sbb
bound
jp
jmp
pop
sub
cmpl
sarl
mov
add
sub
popf
xor
outsb
sbb
and
insl
mov
push
mov
xor
cli
sbb
add
add
fnsave
fists
pop
pop
loope
in
xor
sbb
mov
sub
add
imul
sbb
cmpsl
shlb
jmp
ret
mov
pop
jge
sub
iret
aad
leave
shll
sub
mov
mov
out
gs
movsb
pop
dec
jl
in
inc
cli
sti
roll
mov
jmp
outsb
adc
add
test
fwait
push
add
mov
or
mov
das
pop
adcl
or
dec
imul
xchg
in
clc
push
sub
mov
sub
and
es
xor
and
add
lods
inc
pmullw
jp
mov
push
cltd
inc
inc
or
dec
shrb
dec
jl
xchg
rolb
insb
xchg
xchg
lea
cmp
sub
mov
aaa
jle
icebp
rorb
jmp
fdiv
fwait
es
pop
lea
rorl
mov
lea
jmp
lods
sub
sub
ljmp
pop
rorl
adc
push
sub
add
mov
icebp
adc
add
or
inc
sbb
fs
lcall
add
mov
inc
adc
pushf
ret
shlb
xor
inc
cmpsb
dec
push
mulb
pop
std
les
lds
ljmp
pop
fadds
sbb
cmp
movsb
mov
popa
fiadds
push
jnp
and
cltd
test
test
or
jmp
xchg
adc
cmpsl
cmp
arpl
jnp
and
xor
cmpsl
sub
loopne
xor
jb
push
das
flds
cmp
add
dec
repnz
mov
ret
mov
dec
jl
or
or
dec
inc
cmp
adc
lds
pop
shrb
shl
and
and
lods
hlt
fisubrs
loope
into
imul
movb
and
adc
inc
shlb
inc
mov
adc
xor
xchg
repnz
loope
mov
add
xchg
push
jle
ja
xchg
cmp
mov
push
outsl
dec
add
cmp
xor
or
cwtl
push
add
imul
sub
dec
ljmp
cmp
push
add
xchg
push
lret
cmp
inc
add
test
adc
pop
data16
mov
inc
outsb
lcall
out
aad
sbbl
add
sbb
jnp
or
inc
rcll
shlb
sbb
sub
testl
jge
add
dec
insl
loop
imul
push
mov
scas
clc
andb
movsb
push
stos
push
inc
sub
and
out
shlb
xchg
mov
mov
test
xor
mov
inc
addb
mov
cmp
fsubp
xor
or
mov
sub
in
jg
push
sub
xor
fwait
and
mulps
inc
lea
ud2
inc
inc
fldenv
pop
mov
shr
stc
xchg
inc
test
nop
scas
es
adc
adc
enter
out
loop
outsb
push
and
ss
int3
test
cmp
and
sarb
mov
loope
loopne
mov
xchg
mov
pop
insb
sahf
iret
in
adc
std
or
inc
pop
ret
ja
sub
sbb
sbb
push
das
inc
sbb
inc
std
aad
ret
sbb
add
jnp
add
or
add
lods
sbb
in
scas
push
inc
cmp
jmp
test
rclb
clc
clc
xchg
and
je
inc
pop
push
push
aam
mov
and
xchg
sub
nop
add
mov
test
mov
cmp
insb
or
imul
lret
ja
and
mov
push
popa
lea
psllq
sub
repz
fiaddl
jg
subps
into
cli
rclb
or
sbb
pushf
push
push
xchg
push
adcl
incl
imul
xchg
negb
lea
and
mov
cmp
enter
or
inc
sub
push
xchg
sbb
sbb
inc
loope
mov
adc
push
dec
aaa
mov
test
es
cmp
xor
or
lock
mov
mov
orps
leave
sbb
dec
arpl
mov
add
mov
and
xchg
andl
repz
pop
mov
mov
dec
add
push
or
xorl
outsb
sbb
jne
dec
add
lds
pop
inc
adc
jmp
jp
ret
jl
imul
xor
sub
cmp
ja
scas
mov
xlat
nop
xchg
sbb
sbb
outsb
ret
mov
and
sarl
inc
shll
cmpsl
pop
out
mov
imul
das
in
push
dec
les
fsubl
in
pusha
push
rcl
or
ret
test
clc
sti
xchg
loope
xorl
xor
cmp
xor
or
mov
dec
inc
dec
es
pop
mov
movsl
xor
jmp
cmpsb
in
add
cmpsb
xor
add
add
mov
adc
lcall
mov
and
insl
pop
inc
xchg
sub
and
mov
andl
inc
or
lahf
or
shlb
imul
aaa
addl
imul
lods
inc
mov
sub
sbb
sub
mov
pop
lods
movsl
mov
and
je
cmp
rcll
jmp
cmpsl
pop
and
dec
xor
add
ret
stos
std
xchg
negl
or
push
mov
cmc
or
cmp
adc
shll
xorl
sahf
cld
mov
loope
iret
neg
mov
loopne
push
into
cmp
lret
repz
repz
push
xor
rcll
dec
sbb
push
test
jo
jmp
insb
imul
cmp
jp
clc
ret
in
dec
pop
pop
fs
xor
arpl
fwait
clc
cmpb
inc
popa
mov
addb
add
jp
adc
push
mov
adc
jp
inc
test
or
daa
add
pop
add
mov
xorb
add
mov
dec
scas
xchg
add
inc
cmp
adc
mov
and
subb
movsl
inc
stos
sub
repz
jecxz
jg
or
insb
inc
ja
les
inc
filds
cwtl
fcmovb
inc
lret
popa
insb
and
push
xchg
and
jmp
loope
sub
mov
cmp
insl
pop
imul
jo
add
add
jnp
call
in
sbb
mov
lcall
add
add
call
or
addb
std
mov
sti
add
cmpsb
and
sbb
cmc
cwtl
fs
inc
and
jge
mov
pop
mov
sbb
xchg
int
push
lret
test
xor
ds
and
sub
leave
adc
xchg
jb
lahf
mov
ja
xchg
jo
xchg
pop
ret
sbb
or
push
std
and
loopne
fldenv
mov
in
mov
js
pop
aam
xchg
add
xchg
mov
adc
test
and
or
add
xchg
fistpll
imul
iret
loop
jns
xor
sarb
mov
mov
lret
dec
pusha
lock
inc
jno
lahf
aaa
cmp
and
inc
fadds
cwtl
lods
sbb
repnz
or
mov
inc
jp
add
jge
mov
mov
sub
jne
xor
nop
dec
xchg
ret
add
xchg
lock
xchg
cltd
pusha
test
cmp
js
inc
mov
pop
loopne
xchg
jo
adc
flds
test
je
push
xchg
dec
add
jle
sbb
daa
add
sbb
xchg
cmp
inc
xorl
adc
nop
sub
xor
out
call
xchg
repz
das
push
dec
loopne
xchg
fstps
push
push
xor
pop
subb
fs
loope
push
mov
pushf
outsl
iret
cli
roll
stc
cmp
dec
adc
pop
aam
sbbb
test
cmc
dec
or
shll
insl
arpl
es
mov
mov
push
iret
cwtl
pop
xchg
sub
add
dec
bound
pextrw
gs
data16
xor
mov
add
jae
fldl
movsl
adc
inc
or
mov
push
addb
inc
es
inc
push
loope
aas
add
ret
fidivs
out
loope
lea
call
add
insl
mov
or
imul
mov
push
fdiv
aas
hlt
adcb
call
sub
push
or
pop
adc
shr
sahf
mov
sbb
jge
cwtl
sbbl
inc
test
mov
mov
xchg
es
test
and
cmp
gs
bound
sbb
addr16
jl
stc
xor
sbb
pop
dec
mov
aam
inc
pop
insl
loop
sbb
mov
pop
mov
orb
fistps
jno
hlt
xchg
pop
imul
dec
pushf
push
pop
cmpsb
sbb
push
xor
or
push
jp
sub
adc
mov
imul
leave
inc
and
lock
mov
sbb
mov
addr16
sbb
fisttps
adc
mov
jb
and
and
adc
cmp
lods
pop
or
lds
bound
insl
cmp
scas
cmpsb
cmp
test
loope
pop
dec
sbb
or
xor
inc
int
ret
jno
addr16
jo
mov
pop
jne
and
sub
shll
fidivs
inc
scas
les
or
aam
mov
iret
xor
ret
cwtl
fildl
xchg
jge
or
jp
mov
sub
or
sbb
ret
add
rcrb
filds
ds
dec
movsl
jp
popf
cmp
sub
out
loope
lods
in
sbb
imul
xor
push
cmc
aam
test
and
xor
insl
iret
call
cmpb
jo
ljmp
imul
sub
ds
dec
das
aaa
or
dec
aaa
adc
or
ret
mov
pop
pusha
push
cmpsb
das
dec
mov
popl
data16
cs
stos
test
pop
adc
add
hlt
inc
inc
sub
sbb
ret
mov
loope
xor
into
adc
and
push
pushf
jle
bound
sub
fldl
cmpb
mov
pop
data16
push
arpl
lods
xchg
ret
lahf
jae
cs
or
inc
mov
clc
mov
es
xor
cmp
outsl
daa
shlb
js
cld
insb
shlb
popa
mov
scas
and
dec
popa
shll
outsb
pop
adc
cmp
sub
sbb
mov
push
andb
mov
adc
cltd
lds
add
or
ja
int3
std
mov
xchg
popa
add
scas
pop
pop
adc
inc
adc
int3
popw
sub
stos
ret
dec
and
orb
push
jmp
xchg
mov
outsl
sub
cmp
adc
xor
dec
scas
cmp
xchg
xor
add
mov
mov
mov
call
mul
sub
xchg
or
jnp
mov
ss
xbegin
in
shlb
xchg
or
cli
call
fdiv
cli
cmp
mov
sbb
sub
add
sub
aam
int3
inc
in
int3
hlt
fnstcw
adc
sbb
add
ljmp
or
add
mov
sbb
inc
dec
in
sbb
push
xor
and
fisttps
xchg
shl
sahf
shrb
test
dec
add
or
pop
mov
push
jns
add
test
add
sub
mov
lock
inc
jb
cmp
pop
sarb
sarl
movsl
push
loop
xchg
movsb
or
cmp
shr
push
add
xchg
es
sub
mov
push
fsts
adc
sub
sbbb
sbb
xchg
mov
adcb
mov
orb
dec
movsl
in
shl
inc
inc
lahf
adc
testb
pop
call
push
shl
getsec
fnstsw
add
lock
cmp
test
or
enter
ficoml
inc
jne
xchg
add
mov
and
popf
scas
inc
and
inc
aaa
pop
xchg
js
sbb
jg
out
inc
push
rolb
adc
mov
jbe
shr
movsl
xchg
push
cld
push
cmpsb
lock
ss
push
cmp
fstpl
gs
into
mov
sub
and
test
pop
jne
jns
sub
xor
pop
aaa
push
sub
stos
and
das
clc
add
shll
pop
movsl
shll
xchg
jne
rcr
xlat
sub
je
fists
xchg
fiadds
cs
jg
arpl
leave
cli
add
xor
inc
and
pop
notb
xor
ret
js
sbb
int
add
jmp
push
pop
adc
das
push
xor
add
xor
push
sbb
pop
adc
mov
add
cmp
sbb
cmpl
adc
lea
das
lods
jmp
or
mov
insb
add
roll
xchg
xchg
cltd
ret
out
lret
das
add
inc
add
mov
in
dec
pusha
inc
andl
jmp
mov
rolb
push
sub
dec
call
cmp
pop
jle
push
or
dec
cmpsl
and
clc
inc
xchg
mull
cltd
push
arpl
xchg
cmpsb
mov
xchg
leave
sbb
jl
inc
cs
rol
pop
inc
popf
jbe
xchg
mov
inc
mov
scas
push
xchg
pop
adc
xor
aam
mov
cltd
mov
test
das
and
cmp
jl
push
mov
pop
inc
inc
mov
or
push
jb
push
push
pop
lret
movsb
or
sbb
cmp
nop
lea
sbb
adc
mov
mov
movsb
clc
add
orl
pop
add
fildl
push
mov
and
add
xchg
push
adc
mov
lcall
jns
test
ljmp
arpl
inc
orb
or
sbb
std
test
cmpsl
leave
inc
mov
adc
inc
push
imul
test
push
or
adc
pop
or
subw
imull
cli
and
les
cmp
mov
push
add
dec
pop
jl
in
jmp
xor
pop
pop
subb
out
add
push
jp
sbb
in
sti
push
cmpl
cmpsb
iret
mov
ljmp
inc
dec
push
jmp
or
sub
addr16
or
pop
xchg
jbe
inc
push
xchg
scas
sub
push
sahf
xlat
imul
xor
pop
test
scas
sahf
pop
fmuls
insb
add
hlt
scas
test
add
mov
repnz
xchg
adcb
mov
pop
das
les
lds
sub
push
mov
jecxz
or
pop
push
push
cmp
cs
lret
mov
lea
iret
lods
bound
mov
js
fstpl
push
mov
pusha
xchg
or
or
pop
mov
jmp
test
dec
iret
jecxz
xchg
rcll
fmuls
dec
add
adc
inc
setno
nop
lock
es
fstps
dec
ret
out
divl
push
add
clc
lods
sub
cwtl
inc
lea
jge
pop
jecxz
adcb
or
mov
adc
outsl
dec
iret
jge
es
pop
stc
sub
loopne
inc
iret
push
cmp
jne
dec
sbbb
jmp
movb
jns
jg
stos
push
repnz
mov
andl
rolb
lods
and
pop
shl
test
push
jo
les
fs
and
fnstcw
jecxz
xor
cmpsl
jno
push
scas
popa
pop
movb
insb
add
sbb
loopne
mov
lea
sub
shlb
xlat
rorb
es
sbb
mov
inc
jo
js
inc
out
daa
popa
popa
mov
inc
or
add
or
mov
loopne
movl
inc
scas
xor
fimuls
roll
lea
mov
jb
or
ja
daa
ds
pop
clc
add
jo
loop
xorb
add
or
push
arpl
mov
sahf
gs
inc
sbb
add
jmp
sbb
iret
cmp
jp
and
cld
icebp
push
sub
jb
pop
xchg
lcall
mov
pop
jns
loop
and
cs
test
inc
sbb
stos
and
sti
andb
out
movsl
insl
adc
mov
daa
sbb
pop
out
sub
add
push
push
jg
push
pop
jp
or
mov
iret
push
xchg
push
cmp
mov
ret
roll
into
faddl
and
push
jno
adc
outsl
mov
mov
test
cli
popf
insl
pop
lcall
mov
out
lahf
mov
clc
jmp
lds
lea
bound
dec
orb
pushf
add
adc
movsb
stos
ljmp
xor
out
jg
movsl
xchg
test
pop
lds
adc
or
dec
sub
repz
sbb
inc
cltd
dec
fstpt
dec
pushf
sbbl
adc
fs
inc
jo
mov
sub
and
jne
sbb
push
adc
iret
mov
arpl
pop
out
jecxz
test
push
in
sahf
ret
je
add
pop
test
data16
divl
xor
mov
ja
push
sub
pop
and
dec
xchg
xor
sbb
pop
xchg
pop
sbb
and
je
decb
xchg
movsl
je
loope
add
adcb
xchg
cli
mov
fs
mov
mov
addr16
xchg
adc
cmp
jl
js
pop
dec
dec
rol
arpl
dec
mov
in
adc
push
popa
js
je
fimull
enter
sub
popa
sub
data16
ljmp
and
adc
repz
dec
lods
in
out
mov
mov
leave
push
or
or
inc
push
arpl
xchg
xchg
test
inc
cmp
or
pop
cmpl
adc
xor
enter
out
xor
jp
jae
es
mov
leave
sub
loop
shlb
cmp
outsb
pop
shrl
adc
inc
mov
mov
mov
pop
gs
pop
rcrb
push
cmp
sub
and
mov
stc
les
jp
jmp
jb
mov
lods
ret
jle
or
jne
sbb
addr16
js
and
fwait
add
pop
and
insl
popf
pusha
out
test
pop
les
clc
inc
jle
pop
and
mov
daa
lahf
call
mov
gs
sub
out
fildl
push
pop
lret
xchg
sarl
or
loope
and
addr16
mov
xchg
movb
ss
pop
mov
pop
xorl
nop
xchg
jnp
out
arpl
fdivl
in
addr16
clc
inc
sub
add
gs
sbb
fadds
loope
or
daa
das
mov
cltd
insl
add
test
sub
movsb
daa
cmpsb
lock
add
sbb
pop
sub
sub
mov
inc
jle
test
cmp
inc
lods
sahf
xchg
xchg
arpl
mov
mov
imul
leave
and
sub
orl
lods
and
cmpsl
push
lea
rolb
je
xor
and
loop
or
add
xor
je
inc
cs
add
cs
sbb
or
rcrl
mov
aaa
xor
xchg
lods
notb
inc
enter
and
nop
les
inc
push
mov
push
rcrb
and
adc
push
shlb
sbb
push
and
test
loope
sbb
fsubrs
fisubl
or
inc
mov
sbb
jae
dec
lock
inc
ret
mov
dec
push
lock
or
jns
call
fcmovnu
add
out
dec
pop
inc
imul
dec
jo
mov
lret
jmp
and
addr16
int3
and
pop
sbb
adc
add
xlat
ds
pop
adc
in
xor
rcll
jp
clc
sbb
jo
leave
in
les
dec
or
movb
leave
dec
mov
dec
xchg
nop
xcrypt-cbc
cmpsl
xchg
cwtl
dec
xor
mov
jl
test
cmp
jo
in
movsb
adc
aaa
sbb
push
lock
seto
cmp
jne
add
jns
jnp
sbb
jbe
pop
jae
and
iret
mov
jmp
xor
adc
mov
gs
pop
pop
mov
push
outsl
sbb
ret
mov
or
sbb
cmpsb
test
add
jno
out
scas
add
or
in
cmp
test
iret
and
in
iret
pop
cmp
pop
fwait
cli
dec
arpl
mov
js
imul
or
jae
adc
mov
push
mov
sbb
or
sub
ss
xor
sahf
and
je
mov
nop
lock
adc
pop
hlt
jecxz
pop
dec
sbb
and
pop
lret
adcb
mov
adc
ja
pop
icebp
insl
popa
or
adc
frstor
or
xchg
inc
cmp
das
ja
or
and
jmp
int
fs
movsb
ja
iret
adc
imul
mov
int
int3
lea
int3
sbb
mov
shlb
ret
add
test
rolb
jle
test
xchg
cmp
lcall
adcb
xor
jo
aam
test
inc
adc
and
inc
dec
inc
inc
cmp
add
fsubr
rorl
adc
and
dec
lods
sbb
lods
arpl
dec
add
mov
adc
dec
sbb
rol
xchg
ror
xor
shrb
scas
cmp
pop
shrb
or
in
sub
cmp
lock
ret
int
jnp
xlat
stos
sub
and
ds
ss
adc
and
test
test
sub
pop
mov
sbb
call
jp
aam
pop
popa
mov
movsb
jbe
adc
push
mov
push
dec
xor
lods
out
xor
xchg
add
xor
jo
test
mov
mov
mov
mov
test
aam
shl
iret
dec
or
inc
and
adc
push
push
xchg
inc
arpl
push
inc
add
jmp
pop
popa
dec
adc
push
dec
in
xor
push
mov
into
add
ret
pop
add
addr16
out
add
mov
pop
add
out
subb
shll
mov
dec
lock
inc
add
cltd
xlat
inc
dec
pop
xchg
mov
incl
or
data16
cmp
xchg
mov
sarb
and
imul
pusha
mov
push
ror
loop
push
int3
jbe
and
mov
inc
ja
imul
sbb
je
add
adc
inc
ss
push
fstl
sub
sbb
call
xchg
sbb
test
pop
inc
in
cmp
je
sub
in
int
mov
in
in
and
or
enter
and
pop
mov
xchg
icebp
out
test
imul
and
add
das
xchg
test
pop
mov
mov
fs
lock
inc
inc
jo
loopne
sbb
jo
cwtl
pop
pop
je
adc
add
movsb
lcall
jno
das
sbb
push
mov
cvtps2pi
mov
pop
pop
push
test
shll
rolb
add
adc
push
or
adc
sbb
add
and
fdivs
and
cmp
xor
xor
lods
jnp
addr16
icebp
popa
outsb
mov
mov
inc
add
and
movsb
pop
and
push
inc
add
add
jo
pop
das
stos
inc
mov
cmp
push
test
cmp
ljmp
je
jns
aad
lock
jns
mov
inc
dec
adc
jnp
mov
add
rcrb
scas
and
add
mov
add
xchg
xlat
test
xor
inc
addr16
rorl
lock
outsb
lock
fstl
pop
aam
sarl
xlat
sahf
lods
arpl
or
push
stos
pop
aaa
lea
mov
cmp
sbb
xor
imulb
out
stos
jns
inc
inc
xor
add
xor
ret
call
mov
jle
ljmp
int
aam
inc
jle
push
adc
aad
and
mov
sti
xchg
fidivs
cmpsl
inc
sbb
int
stos
cmp
ds
sbb
ror
inc
bnd
lock
pusha
add
xor
jmp
sarl
shr
jae
mov
sti
cli
pusha
sbb
cmp
xchg
xor
into
push
mov
push
and
mov
and
add
push
mov
xor
aad
or
push
push
sbb
adcb
push
inc
mov
test
dec
flds
push
and
jmp
rcrb
ljmp
adc
dec
movsb
lods
add
xchg
add
roll
cmpsl
lret
lods
xchg
push
test
dec
sub
rep
dec
loopne
cltd
add
lock
push
es
cmc
add
icebp
out
add
addr16
jmp
cltd
mov
inc
sub
and
xor
add
add
imul
imul
push
stos
xor
pop
add
mov
ljmp
pop
gs
or
add
xor
insb
daa
gs
sbb
xchg
or
adc
pop
js
into
xchg
add
insl
jbe
sub
cwtl
in
daa
jne
sbb
jp
ds
andb
xor
mov
mov
jl
sahf
and
mov
xor
inc
pop
imul
lock
adc
je
dec
lret
clc
cmp
pop
add
shrb
adc
rolb
push
popf
aam
xchg
sbb
and
imul
sti
movsb
fdivl
cwtl
addr16
cmpsb
lods
xchg
movsb
xchg
dec
and
xor
pop
mov
int3
jecxz
lods
add
add
lods
or
jo
ljmp
adc
cld
xchg
outsb
dec
dec
cld
adc
sbb
inc
inc
cmp
les
aas
xor
pop
sub
mov
inc
xor
add
mov
sub
ret
or
inc
dec
pop
mov
lea
arpl
pusha
rcrb
add
pop
lods
mov
shlb
aam
imul
xchg
cwtl
pop
or
subb
adc
jmp
xchg
pop
sub
icebp
or
xor
and
push
data16
dec
mov
in
mov
scas
sti
lcall
test
mov
dec
aaa
pop
xchg
and
sub
testb
add
icebp
fstp
insl
mov
add
js
andb
js
sub
data16
nop
pop
xchg
mov
and
loop
and
inc
jecxz
pusha
inc
dec
stc
add
add
int3
cs
dec
loopne
mov
fistpll
addl
out
mov
int
shl
outsl
icebp
add
sub
insl
in
in
xchg
inc
data16
dec
push
add
movsl
xchg
rcll
adc
and
dec
inc
ficoms
int
adc
mov
icebp
xlat
mov
popf
jmp
jnp
js
add
jns
add
mov
fwait
jo
roll
rol
pop
mov
inc
ret
or
jo
test
ja
sub
mov
add
cmp
and
xchg
aas
mov
inc
or
push
push
inc
mov
les
xchg
sbb
out
sub
es
push
ret
adc
sbb
fdiv
mov
in
subl
mov
das
movsb
roll
ds
or
pop
mov
or
or
pop
push
xchg
mov
loope
or
inc
add
mov
add
pop
inc
pop
sti
les
pop
enter
repz
add
inc
ret
imul
in
dec
fiadds
loop
push
mov
mov
inc
cmpsl
fisttpll
pusha
movsb
xchg
les
lret
pusha
loopne
sbb
addr16
aad
jecxz
rcl
loop
ret
cmp
les
jecxz
js
xchg
push
jle
jg
fsubrs
loop
jecxz
sub
popa
les
push
ja
mov
push
je
add
and
sbb
push
insb
cltd
pusha
xor
popa
js
call
lahf
adc
popf
iret
and
push
fildll
loop
shlb
or
xchg
and
jp
jge
jge
dec
xor
adc
orb
movsl
js
cld
xchg
lods
or
xchg
xchg
or
push
js
or
and
sub
sub
pop
jp
frstor
mov
ret
insl
mov
mov
sbb
aam
or
test
jne
fmuls
sub
add
sbbl
sbb
xor
jns
dec
aas
xchg
ljmp
push
inc
dec
loop
stc
or
cmp
cltd
mov
sbb
inc
dec
pop
pop
test
mov
aas
ror
les
xchg
inc
lods
dec
mov
mov
iret
mov
xchg
in
push
pop
lods
mov
int3
popa
shll
xor
inc
sub
lods
call
and
jns
cmp
add
fstpl
inc
fsts
mov
pop
loope
xor
mov
mov
adc
adc
dec
add
daa
adc
loopne
aad
push
loopne
mov
inc
dec
add
popa
add
test
sbb
ds
and
adc
loope,pt
sub
adc
add
mov
std
and
sbb
cwtl
xor
lahf
sbb
hlt
add
or
lea
cltd
shlb
rorb
inc
and
cwtl
add
out
loope
mov
add
inc
sub
mov
rolb
jns
or
leave
add
in
out
clc
inc
adc
std
in
mov
or
push
cld
loopne
push
call
fsubl
movsb
inc
add
pusha
cmp
pop
or
or
loopne
imul
add
adc
stos
push
int
fwait
cmp
fists
sti
fisubl
add
adc
mov
add
add
mov
push
cmp
stos
outsb
roll
rcrl
lcall
shll
in
jg
push
pusha
push
xchg
aaa
jne
sbb
jecxz
jl
inc
jecxz
fiaddl
cmpsb
pushf
test
pushf
cltd
mov
add
pop
dec
xor
add
dec
adc
dec
adc
push
addr16
out
or
iret
lds
cmp
jmp
iret
dec
loopne
ret
fidivs
dec
cmpsb
push
sbb
xchg
loop
dec
adc
inc
xor
mov
aad
jo
clc
sbb
adc
adc
shll
add
pusha
fs
inc
cmp
and
fsubs
xor
andl
add
mov
je
fnsave
fsubs
mov
pusha
andb
jbe
nop
add
xlat
push
adc
push
int3
loopne
sbb
lods
add
dec
stos
or
mov
inc
stc
mov
pop
mov
ja
jne
dec
inc
jo,pt
insl
pop
cli
adc
into
fidivrs
jge
dec
xor
push
imul
push
xchg
and
sub
or
inc
stos
lods
fwait
dec
rcrb
loopne
or
xor
mov
add
mov
pop
mov
iret
fwait
lret
mov
notl
sbb
or
xchg
sbbl
add
clc
and
adc
or
pusha
adc
adc
insb
dec
roll
daa
pop
daa
arpl
sahf
mov
add
clc
mov
mov
add
adc
pusha
adc
outsl
mov
testb
clc
or
jbe
inc
pop
sub
add
lock
sub
frstor
pusha
sbb
add
xor
adc
add
insb
mov
lods
arpl
pop
cwtl
or
subl
aam
jns
xchg
aad
shll
jl
inc
pusha
mov
adc
add
mov
rolb
mov
fsubrl
pop
fistpl
div
and
iret
call
push
loope
and
idivl
xlat
dec
aad
jbe
pop
cmp
lahf
lods
and
add
rcrb
and
test
or
fnsave
shll
jo
sbbb
out
jo
fstl
ret
pop
test
clc
lret
arpl
test
jno
push
rorb
std
xchg
addb
shrb
mov
inc
cmp
and
into
or
movsl
lea
sahf
cmp
inc
std
and
stos
xchg
lret
adc
add
push
loopne
inc
adc
pushf
cmp
js
xchg
jno
lock
sbb
into
and
or
jns
scas
xchg
aaa
test
mov
lret
inc
cmp
push
sub
inc
daa
test
xor
mov
pop
les
imul
jecxz
sbb
int3
push
rorb
mov
add
xchg
fs
je
cmp
inc
pop
dec
pop
fstpt
xchg
xor
and
jmp
outsl
cmp
push
das
cmpsl
mov
cmpsb
xor
lods
das
outsb
lahf
cmpsb
outsb
movsl
mov
mov
push
dec
add
fadds
or
jo
lret
mov
out
mov
lds
or
dec
dec
test
cmp
orb
xor
inc
mov
fstl
dec
inc
sub
mov
mov
mov
push
add
es
dec
xchg
aam
mov
or
rcrb
lcall
mov
pop
andb
icebp
jno
xor
sub
dec
rclb
sbb
lock
setns
adc
sbb
xor
ja
mov
dec
add
dec
inc
ljmp
fiaddl
rcll
testl
jno
enter
push
mov
shlb
int
cmpsb
sbb
jecxz
cld
xor
es
fdivr
ret
fstpt
inc
and
lock
sub
jnp
jecxz
jp
push
and
cmp
push
inc
push
subb
inc
ret
leave
shll
xor
inc
and
addb
lock
or
lret
pushf
inc
lods
adc
and
mov
push
mov
cs
loop
loopne
cmp
mov
push
pop
xchg
or
inc
xor
leave
sbbb
clc
orl
jmp
fwait
and
sbbb
and
mov
cmp
xchg
rcrl
shlb
addr16
add
mov
test
add
push
dec
mov
dec
mov
das
pop
adc
push
fsubs
cmp
nop
mov
xor
adc
sub
inc
sub
out
or
sub
lgs
xor
mov
sbb
mov
bound
fisubrs
out
gs
int
add
lret
xor
add
and
subl
cmp
mov
inc
mov
fcoml
mov
imul
es
in
and
push
fldl
xor
pusha
mov
add
xor
test
jl
sub
add
inc
cmp
lods
dec
inc
dec
pop
jno
mov
xor
add
xlat
push
jno
popf
daa
icebp
push
sub
mov
adc
int
and
or
addl
nop
daa
inc
mov
fwait
cmp
stos
pop
testb
dec
or
pushf
add
xchg
fwait
rolb
cmp
dec
xchg
mov
and
cmp
rclb
lea
pop
into
dec
std
test
adc
shlb
movsl
jae
push
cmp
adc
push
push
lock
jbe
push
lea
aam
pop
aas
mov
scas
jp
xor
and
adcb
mov
jnp
rolb
mov
jae
sub
inc
cmpsl
adc
pop
adcb
pop
iret
repz
push
add
cmc
sbb
push
mov
testl
xchg
out
sub
pop
addr16
iret
add
add
add
adc
xchg
sti
mov
sub
scas
gs
xchg
enter
cmp
orb
pop
scas
ret
cs
rcrb
sub
mov
cmp
jns
add
pop
mov
mov
fdivrs
aas
jg
in
loop
jp
sbb
aam
ljmp
jne
neg
mov
mov
lcall
xchg
mov
inc
arpl
jmp
cs
sub
dec
aam
stos
xchg
into
dec
sbb
xorl
dec
test
dec
mov
and
push
loope
imul
ljmp
mov
cmp
sbb
imul
fdivs
fiaddl
mov
pop
pushf
cmp
push
inc
insl
pusha
das
jle
ret
imul
push
jmp
or
adc
loop
xchg
or
inc
or
fsubs
call
jl
push
mov
call
rorl
rclb
add
loope
inc
and
imul
cltd
std
adc
xor
xchg
jb
push
es
icebp
xlat
les
mov
sub
xor
mov
pop
push
fstpl
cmp
ja
sbb
mov
dec
mov
push
and
push
nop
loopne
add
fsubl
jecxz
inc
dec
and
imul
clc
movsl
fwait
hlt
fnstsw
pop
and
lods
addb
popa
pop
inc
sbb
addl
adc
pop
shrl
or
jns
dec
pop
aam
pushf
mov
inc
xlat
test
mov
sahf
out
bound
aam
ret
aaa
mov
adc
je
xchg
xchg
imul
call
lret
jg
pop
ljmp
pop
push
fsubrs
xchg
loop
ret
fimuls
fimull
sbb
push
push
fcomps
std
dec
ret
cmp
mov
movsb
loopne
push
jo
adc
or
add
cmp
jbe
jo
dec
push
mov
mov
push
push
loope
mov
cmp
adc
and
add
sub
pop
lods
lea
mov
or
inc
andl
push
jmp
int
into
inc
jbe
sbb
and
add
sub
jne
add
cmp
ljmp
cmp
pop
ret
lds
sbb
jo
lret
sti
sbb
jnp
push
cmp
jae
stos
nop
or
mov
lret
test
data16
sbb
fmull
movsb
sbb
mov
jmp
cltd
ja
mov
inc
fcmovnu
inc
test
fs
orb
loopne
mov
adcb
mov
add
or
pop
shlb
mov
adc
loope
xchg
es
lock
test
mov
adc
loopne
cmpl
insb
popa
negl
push
je
sbb
dec
rorl
das
fwait
pusha
inc
clc
and
push
shll
add
cs
sub
jg
jl
pop
pop
jecxz
fstl
adc
test
ret
shrb
inc
and
movb
pop
pop
fildll
jno
insl
jno
xchg
jo
js
dec
je
adc
jbe
add
fsubl
fucomi
cmpsb
fdivl
imul
add
jbe
hlt
dec
iret
jno
sbb
mov
fucom
pop
inc
mov
insb
jg
mov
jo
xorl
xor
fidivrs
add
rcrl
jnp
and
jle
repz
out
mov
add
icebp
add
mov
fiadds
mov
add
jge
sub
adc
das
les
cmp
add
ret
xlat
loopne
mov
stos
mov
test
pop
mov
mov
cld
in
cli
inc
aaa
xor
fwait
repz
loope
jecxz
mov
aaa
jnp
jb
rcr
fidivrs
mov
insb
aam
inc
and
jl
sbb
mov
sub
lea
mov
xchg
or
test
push
loopne
jbe
pop
sub
inc
pusha
push
shll
cmpsl
dec
mov
shl
ret
ja
orb
pop
ss
xchg
inc
or
jle
jp
lock
xlat
inc
insb
add
push
bound
movsb
mov
daa
push
stc
jns
add
int
xlat
sahf
xchg
xor
adc
mov
call
push
outsl
imul
sbb
pop
xor
sub
and
and
fwait
inc
test
jge
and
loopne
pop
push
cmpsl
add
sbb
xchg
add
cmp
loopne
subl
cmp
loop
lea
sub
sub
push
mov
stos
hlt
imul
mov
lods
sbb
mov
cmp
dec
sbb
ffree
jne
aaa
push
pop
clc
adcb
push
dec
mov
inc
lret
dec
inc
cmpsb
jno
xchg
enter
xorb
jo
in
mov
xor
loop
inc
xchg
sahf
pusha
sbb
mov
pop
mov
and
add
andb
lods
xchg
test
add
pop
inc
sub
pop
pop
into
in
jecxz
lea
hlt
fnop
mov
in
insl
test
lods
or
out
jl
mov
and
mov
xor
leave
ret
pop
sbb
xor
push
and
push
arpl
push
and
inc
mov
loope
es
inc
dec
and
pop
adc
push
or
test
add
leave
int
iret
mov
addb
inc
fldl
movsb
int3
cmpb
stos
aaa
hlt
fadd
pop
and
stos
subl
xchg
jo
mov
test
or
cmp
and
sbb
scas
xor
shll
sbb
movsb
push
dec
push
shrl
inc
iret
cmpsb
jmp
pop
dec
add
mov
and
test
shrl
push
ret
push
or
loopne
and
and
js
add
and
xchg
xchg
fcomi
pop
test
push
jbe,pt
fsubs
insw
sub
imul
lea
rcrl
sbb
add
inc
mov
or
inc
mov
sbb
fcomps
nop
push
movsb
fadds
imul
dec
fwait
cmp
pop
inc
lea
iret
mov
jge
push
sub
xchg
mov
add
cmpsl
mov
and
add
dec
js
fiadds
scas
bound
lods
rolb
cmp
and
push
xchg
add
pop
int3
cmp
sbb
mov
mov
dec
push
and
stos
lods
sub
push
inc
dec
pop
or
lea
mov
cmp
je
ljmp
scas
mov
push
and
push
xor
addr16
pop
arpl
fcmovbe
addl
or
pop
pop
xor
lock
pushl
mov
xchg
mov
test
jo
sub
aad
inc
lret
sbb
add
rorl
adc
mov
insb
jecxz
sub
push
or
dec
cmp
arpl
js
adc
pushf
in
iret
jne
jne
lea
fnsave
push
aas
aad
dec
xor
pop
jl
sbb
pop
cmc
push
inc
and
lds
jp
pop
and
adc
incl
and
loopne
push
pop
js
pop
fisttpll
aam
test
in
aad
ret
push
sub
nop
sbb
xchg
sbb
sbb
and
test
cwtl
fisttpll
rclb
cmp
mov
sbb
jg
int
push
or
xchg
adc
stos
in
xchg
xchg
imul
mov
movsb
inc
shl
cmp
xlat
mov
push
and
dec
in
loope
inc
enter
jbe
lcall
jo
adc
lods
or
xor
pop
stos
or
scas
lods
adc
and
adc
andl
lods
cld
add
add
push
mov
hlt
add
out
xchg
pop
adc
and
sbb
or
dec
jge
iret
inc
and
cmp
enter
push
mov
jnp
lods
lret
xchg
mov
aam
cli
int3
fidivrs
bound
subb
aas
rol
in
test
mov
cli
and
cmpl
push
add
mov
sbb
pop
sub
sbb
push
and
dec
enter
cld
adc
adc
cmp
and
pop
pop
test
xor
xchg
pop
dec
and
add
push
inc
ret
in
lcall
jae
jo
pop
sub
pop
popa
loope
xor
js
and
loope
or
adc
pushf
iret
jg
sbb
rolb
or
mov
pushf
adc
add
push
arpl
scas
scas
cmp
push
jo
add
clc
rclb
fadds
or
add
push
pop
mov
or
add
das
add
adc
add
xchg
or
xchg
test
rcrl
imul
movsl
mov
sub
adc
adc
sub
push
pop
add
sub
sbb
pop
lds
cmp
cwtl
and
xchg
lods
and
mov
dec
jecxz
push
xchg
push
ffree
dec
jnp
adc
sbb
dec
and
pop
xchg
sbb
add
pusha
sbb
scas
sbb
popa
add
adc
pop
push
inc
ljmp
cs
mov
movsl
lods
add
mov
ja
aam
or
loop
sub
adc
sbb
cli
pop
mov
lods
ja
sub
or
cmp
out
jmp
movsb
mov
cld
es
push
sbbl
jge
sar
or
cmp
aam
cltd
sbb
scas
pop
mov
daa
dec
sbb
lret
pop
adc
andl
ret
xchg
faddp
std
subb
cmp
and
mov
pop
int3
rorb
hlt
lret
out
pop
mov
lods
xlat
jbe
dec
pop
xchg
movsl
pop
push
cmpsb
and
push
daa
mov
loopne
orl
jae
add
jp
or
lret
jg
mov
add
jecxz
xchg
into
mov
out
pop
sbb
into
mov
inc
and
mov
ds
out
les
test
ficomps
imul
dec
pop
mov
ja
push
mov
jae
mov
jg
repnz
iret
pop
jnp
ds
mov
mov
lret
enter
add
outsl
mov
mov
lock
gs
jno
xor
mov
lds
or
arpl
jns
mov
push
adc
push
mov
inc
xor
xor
cmp
pushf
mov
mov
sti
js
outsl
add
fsub
add
aam
adc
popa
sar
or
xchg
cmp
inc
inc
daa
pop
xchg
enter
mull
push
mov
enter
fisubrs
mov
xor
push
aam
dec
inc
fnop
icebp
out
rcr
sbb
cmp
cmp
popa
roll
inc
outsl
xor
stos
and
and
jbe
fwait
mov
repz
and
out
sarl
fs
lds
sbb
ds
dec
mov
int
test
sahf
insl
test
inc
fcompl
mov
aam
jb
sbb
inc
jl
arpl
out
addl
xchg
inc
xchg
call
mov
es
arpl
xor
pusha
les
ret
sbb
sbb
sahf
jno
jmp
inc
cmp
mov
int
aam
cmc
ljmp
lret
and
testl
and
or
xchg
sbbb
xchg
cmp
add
bound
xchg
or
mov
out
scas
insb
cmp
mov
lea
cmp
pushf
int
stos
xor
shlb
imul
xor
push
push
adc
inc
jl
add
and
push
aas
add
dec
xchg
mov
imul
gs
mov
sub
or
or
xchg
jl
cli
inc
gs
in
aad
ja
jne
nop
pop
pop
inc
mov
pusha
pop
sbb
push
xchg
fiadds
push
mov
pop
add
mov
lods
movq
mov
arpl
sbb
sub
enter
insl
push
mov
push
cmpsb
mov
loope
or
inc
pop
and
inc
add
pop
add
cmp
and
arpl
and
inc
mov
inc
popa
insl
sub
loop
aas
and
les
je
mov
add
xchg
jo
sbb
dec
fnstsw
lds
rclb
cwtl
jnp
pushf
cmp
fdivrs
cmp
cmp
popa
dec
fs
je
and
scas
mov
and
push
ret
adc
loop
scas
sbb
add
sbb
mov
test
xor
mov
lock
loope
jo
sub
inc
ja
xchg
lret
xchg
scas
enter
stos
insb
dec
test
outsl
dec
mov
repnz
sbb
pushf
push
dec
inc
out
xchg
sbb
xor
or
incl
or
lcall
add
aas
dec
or
imul
cmp
jbe
fists
inc
push
clc
add
xlat
inc
insl
mov
aam
outsl
stos
fwait
and
pop
cltd
xor
push
ljmp
ret
and
mov
push
daa
les
mov
xchg
xchg
sbb
adc
imul
int3
movsb
xor
sti
mov
push
mov
lock
adc
jp
movsl
vmovdqa
cli
mov
sub
addl
and
mov
dec
pop
and
rclb
repnz
add
xor
lods
leave
icebp
insb
pop
mov
shrl
sub
push
pop
cmpxchg
jmp
ljmp
shrl
and
cmp
int
xchg
call
push
fsubr
mov
sbb
adc
xchg
in
sbb
and
push
mov
arpl
dec
test
aad
xchg
sbb
adc
add
dec
rorb
adc
xlat
dec
popa
pop
movsb
sub
lods
movsl
enter
mov
dec
lds
pusha
pop
dec
and
cltd
lock
movsb
mov
mov
dec
out
lret
std
xchg
cmp
out
cltd
ja
nop
mov
dec
cmp
setl
sub
push
xchg
add
rcll
iret
add
xor
dec
lret
ret
add
adc
daa
inc
push
subl
repz
rcrb
je
and
aam
adc
and
adc
add
pushl
adc
out
pop
xor
sbb
loopne
dec
test
aam
push
addr16
je
pop
fst
pop
jbe
sbb
mov
sbb
mov
mov
mov
lods
add
xor
insl
mov
mov
hlt
testl
shrb
into
clc
xchg
jl
fs
sbb
and
push
add
outsb
sbb
dec
and
xor
inc
arpl
pop
sbb
xchg
andl
loopne
jo
sti
stos
push
outsb
ds
lock
mov
fstpl
sub
sarb
and
outsb
lock
rolb
jns
loopne
mov
lret
or
enter
mov
cmp
push
dec
sub
and
push
je
sub
nop
das
fcompl
mov
mov
add
add
jl
bound
or
push
loope
inc
popf
inc
jl
add
icebp
aas
sbb
insb
and
xchg
cmovno
ficoml
mov
clc
sbb
int
pusha
iret
or
inc
cmp
xor
adc
mov
shlb
push
push
sbb
dec
ja
fildl
pop
ret
pop
xchg
add
xchg
bound
sub
movsb
test
nop
lahf
dec
mov
or
sbb
icebp
cmp
ss
aam
loop
lods
das
stos
out
jne
out
inc
stos
daa
inc
iret
mov
bound
xor
inc
int3
dec
es
mov
xchg
or
mov
add
fs
inc
or
sub
add
pop
add
popa
lret
fs
rclb
jne
jge
push
sub
adc
mov
repz
roll
and
xor
mov
mov
add
push
fisubs
rcrb
jno
cmpl
int
mov
lcall
mov
inc
and
movsb
and
dec
xor
cmp
inc
js
cmpsl
roll
and
mov
ss
scas
dec
adc
xchg
shlb
push
nop
or
lahf
push
push
lea
rcrb
cmp
lods
push
loope
loopne
mov
test
pop
repz
adc
mov
leave
loope
jo
mov
mov
xor
sub
sbb
test
add
fisttpl
rcrb
dec
pop
adc
mov
test
inc
add
mov
shr
sub
gs
bound
and
loope
add
cmp
xlat
push
dec
mov
adc
cmp
and
xor
imul
movsl
mov
insl
aas
in
add
repz
xchg
jbe
pushf
fcmovnbe
xchg
testl
jge
scas
fcmovbe
push
jbe
adc
inc
add
jno
push
sbb
popa
and
jge
out
cli
stos
xchg
cmp
popa
adc
clc
shl
pop
cli
adc
pop
mov
sub
ja
add
or
mov
ja
std
sbb
mov
les
add
scas
addr16
sub
and
movsl
stos
mov
inc
test
int3
hlt
sbb
aaa
sbb
mov
aam
sub
mov
sub
mov
jb
cmp
stos
pusha
lds
or
int
adc
adc
and
lret
and
and
pop
add
call
into
xor
or
ja
sub
cwtl
jl
mov
sbb
loope
insl
popa
jmp
lds
sarl
push
or
in
sbb
testl
aad
lahf
mov
es
pop
cmp
cmp
dec
push
mov
jg
orb
dec
pop
cmpb
mov
jbe
add
rolb
and
cmpsl
pop
add
adc
dec
imul
sahf
xor
or
push
mov
and
and
pop
js
js
test
cmp
stos
popa
sbb
xchg
das
pop
sbb
and
dec
cmp
stos
pusha
xor
jo
sub
bound
loopne
cmp
pushf
aad
or
lret
sbb
dec
jae
std
test
mov
adc
in
push
fadd
stc
sbbb
add
push
mov
jmp
lret
sub
in
stos
xor
sbb
jmp
or
push
lods
loopne
clc
pusha
mov
je
xchg
mov
and
mov
add
lds
mov
out
cli
mov
lahf
shll
outsl
adc
loop
jno
add
xchg
push
dec
leave
mov
xor
and
xchg
jmp
lahf
pop
cmp
and
xchg
aam
mov
aad
loopne
sti
icebp
mov
faddp
out
test
mov
or
mov
dec
lret
or
in
cltd
add
sbb
aas
ds
sub
mov
inc
rep
push
mov
xor
mov
inc
es
lahf
cmpsb
pop
filds
adc
push
dec
testl
push
lcall
cwtl
std
mov
adc
push
dec
xor
sbb
or
test
mov
or
cltd
push
gs
cmc
flds
xchg
and
nop
and
add
rorb
adc
push
push
lcall
lods
jp
push
add
or
mov
add
sbb
js
fs
aas
push
dec
mov
dec
movsl
orl
push
insb
imul
jae
sub
fistps
fstpl
loopne
arpl
xor
orl
pusha
sbb
lock
dec
adc
cmp
push
or
enter
cmp
movsb
inc
mov
inc
aaa
jno
and
pop
test
nop
aad
loop
movsl
sub
repz
cmpsl
mov
dec
popa
add
inc
xor
fadds
or
rolb
push
fnstsw
clc
aas
lcall
movsb
fdivrl
pop
and
jl
or
popa
outsl
add
ljmp
test
hlt
cmp
push
add
pop
add
mov
into
sbb
and
lahf
push
push
adc
mov
push
inc
addr16
xchg
xchg
bound
mov
aaa
jp
cmp
jecxz
xchg
mov
or
push
xor
and
cmpsl
adc
hlt
sbb
xor
cmp
jmp
movsb
push
sub
aas
and
or
inc
sub
or
rol
nop
rclb
lret
test
mov
or
adc
jge
and
call
sbb
insb
and
data16
test
or
imul
adcb
stos
popa
jg
push
mov
cli
fadds
movsb
add
add
sub
sub
dec
dec
ret
mov
adc
loope
and
sbb
and
hlt
jp
dec
orl
test
lahf
or
ds
outsb
stos
pop
push
sub
xchg
and
bound
add
add
icebp
imulb
and
popf
addr16
das
add
or
lret
jns
adcb
aas
imul
inc
fdivp
push
or
sbb
imul
into
dec
das
mov
jb
fwait
in
push
nop
lock
iret
jp
add
dec
or
fs
push
inc
js
cmp
jmp
repz
pop
rorl
lds
adc
push
cltd
pop
add
lock
and
add
add
xor
ja
or
dec
or
mov
and
jmp
adc
xor
sub
test
scas
imul
test
aas
lock
fldenv
cwtl
clc
xchg
orl
sbb
in
push
cmp
inc
jb
dec
call
andb
inc
sarl
testb
sbb
mov
scas
dec
inc
sbb
add
sub
jecxz
mov
xchg
pop
sub
add
mov
pop
mov
cmp
add
subl
sub
scas
jno,pt
xor
adc
jno
jne
xchg
inc
int3
push
je
pop
movsb
in
mov
add
insl
add
add
mov
cmp
mov
push
arpl
fldl
jmp
sbb
loopne
stos
cmc
add
das
call
and
mov
out
mov
and
adc
aad
and
mov
inc
mov
adc
lock
clc
lods
icebp
cmp
and
xor
xor
or
sub
xchg
add
lds
punpckldq
shr
mov
adc
xor
cmp
cs
mov
loope
lock
mov
sub
imul
inc
les
enter
mov
popf
or
lods
ljmp
pop
ss
ret
sahf
das
lods
mov
js
sahf
imul
xor
loop
lret
add
mov
adc
dec
push
dec
add
movsl
inc
dec
shl
lahf
add
lods
jno
roll
popa
add
iret
fucomp
and
push
cmp
mov
pushf
popa
sbb
mov
and
in
xchg
cmp
jo
xor
mov
adc
lock
nop
sbb
cltd
dec
loopne
jecxz
inc
out
mov
or
add
add
mov
add
sub
mov
popa
iret
int3
jp
jne
dec
cmpsl
rclb
or
cmp
push
and
jmp
dec
rcrb
add
insb
push
mov
mov
pop
push
lods
pop
loop
sbb
dec
sbb
adc
mov
mov
mov
pushf
and
shrl
dec
iret
jo
xor
pop
loope
test
pop
iret
inc
lods
jle
dec
mov
clc
insl
lahf
pusha
lock
imul
call
mov
test
lahf
cmp
stos
daa
call
pusha
aad
or
add
test
lock
jl
scas
dec
push
arpl
out
add
adcb
inc
addr16
sub
mov
data16
ss
js
das
xchg
jne
jo
out
sub
in
shll
adc
adc
and
mov
sbb
jge
sbb
lahf
xchg
xor
jae
sub
dec
mov
shlb
leave
or
jle
add
push
jecxz
scas
xor
das
cmp
xchg
es
adc
cmp
add
sbb
adc
movaps
sbbb
and
dec
push
lock
adc
andb
lret
scas
les
inc
sbb
stos
and
inc
cmc
lcall
neg
icebp
adc
push
mov
faddl
jne
test
iret
jp
addl
in
lret
xlat
inc
jo
mov
mov
ret
adc
xor
pop
inc
test
push
stos
into
pop
addr16
pop
pop
pop
mov
mov
add
mov
cmpsb
jo
or
and
adc
sahf
mov
jnp
fidivrl
popf
arpl
add
sbb
test
out
sbb
dec
inc
int
mov
insb
push
push
xor
or
mov
test
sbb
lret
and
or
lods
mov
shrb
mov
daa
inc
sahf
test
out
test
push
adc
push
adc
aam
loope
cwtl
push
or
icebp
test
adc
lret
movsb
or
daa
pop
cmp
mov
adc
jp
sub
jb
addb
or
sahf
inc
int
ret
leave
xchg
and
cmp
push
jp
dec
xor
imulb
test
add
mov
lea
mov
push
sub
and
inc
mov
stc
mov
rcl
loop
xor
test
scas
fisttpl
add
ss
pop
and
push
adcl
pop
icebp
aam
pop
mov
jo
ret
hlt
scas
bound
imul
and
fsubp
mov
loopne
nop
or
rcl
cmpsl
cmpl
xor
outsl
sbb
mov
rcr
jp
pop
mov
add
adc
ret
aam
add
jmp
and
pop
addr16
lods
pusha
je
fwait
mov
pop
roll
das
push
mov
mov
ss
ficoml
pop
sbb
sub
shlb
add
imul
leave
xlat
inc
mov
mov
scas
fsts
in
and
out
jle
in
pop
lahf
insb
dec
stos
mov
and
xchg
mov
cmp
push
xor
es
or
into
sub
push
sbb
inc
cmp
add
nop
push
cmp
jo
or
sub
pop
repnz
filds
sbb
ds
push
inc
xchg
push
test
adcl
iret
out
adc
adc
mov
dec
scas
xor
cmpl
loop
xlat
dec
inc
inc
rorl
jo
mov
add
pop
mov
fwait
add
add
in
test
movsl
push
jo
mov
ret
negb
ss
pop
pop
pop
cmp
jecxz
jp
imul
in
cmp
pop
mov
sub
in
subb
scas
sbb
or
gs
fldcw
lods
push
clc
or
push
mov
inc
adc
dec
mov
jae
pop
rolb
ret
mov
or
dec
mov
in
push
ljmp
xor
je
movsb
leave
std
sbb
mov
mov
rcrb
bound
lahf
test
orb
adc
iret
xor
sbb
jp
sbb
adc
pusha
enter
jo
jecxz
dec
inc
lods
pop
inc
fldl
sub
sub
cmp
sub
xor
popa
popa
movsl
adc
test
shl
add
add
add
lea
inc
movsb
out
jl
test
mov
cmpsb
rclb
ja
mov
push
xchg
cmp
gs
cmp
pusha
xor
movsl
and
imul
and
mov
out
sub
mov
imul
ja
jo
iret
rcl
xchg
adc
fwait
call
aam
jo
add
mov
aad
leave
movsb
or
loope
mov
jbe
jae
and
aaa
mov
es
rol
mov
sbb
lock
and
stc
cmp
adc
mov
sbb
xchg
or
sub
jmp
negl
inc
ret
sub
mov
push
pop
inc
add
popa
sub
mov
mov
jno
add
ja
nop
in
xorb
cmp
jmp
and
or
sbb
sbb
loopne
test
and
mov
xchg
mov
mov
movsb
or
inc
scas
push
insl
xchg
fdivs
or
jb
mov
adc
inc
mov
dec
mov
mov
push
test
dec
shrb
mov
js
test
movsb
xchg
mov
in
mov
test
je
add
lret
pop
std
je
es
xor
in
mov
mov
aad
fadd
out
pusha
setb
inc
outsl
aad
pcmpgtw
out
pushf
xlat
jne
or
sti
or
pop
xchg
jae
inc
adc
sbb
test
pushf
lods
adc
mov
mov
xchg
orb
loopne
push
and
or
fstpl
jle
inc
cmp
daa
dec
bound
in
pop
daa
mov
jp
sbb
and
mov
pop
lds
mov
les
sahf
mov
mov
add
pop
and
divb
inc
sub
iret
loop
lods
adc
and
or
jmp
js
push
add
and
jns
fldt
mov
push
pushf
sbb
mull
sub
bound
mov
inc
mov
sarl
cmpsl
push
add
or
inc
mov
fdivl
jg
test
stos
aad
sahf
xchg
iret
pop
cmp
pop
fs
mov
xchg
sbb
inc
mov
push
cmp
daa
das
adc
inc
icebp
xchg
gs
ds
pop
sub
add
pop
mov
mov
dec
mov
in
mov
sbb
mov
imul
in
pusha
sub
jp
stos
rcll
xchg
sbb
xor
repz
pop
add
pusha
dec
mov
push
add
hlt
jecxz
popa
movsl
pop
and
adc
or
mov
in
popa
mov
mov
and
in
fs
cmpsl
adc
or
idivb
and
and
push
pop
sbb
cmp
lahf
into
xor
xor
test
push
cwtl
adcb
pushf
pop
js
xor
dec
jg
jg
sbb
and
adc
mov
sub
mov
loop
sub
mov
xor
movsl
jb
test
pop
adcl
pop
cmp
sbb
sbb
push
mov
add
call
mov
lods
filds
ret
adc
xorl
data16
hlt
pop
fwait
jo
cld
pop
leave
mov
inc
push
mov
es
mull
je
mov
or
ljmp
sbb
shll
lods
dec
fwait
ja
nop
ret
dec
dec
fldl
mov
mov
mov
jns
pop
bound
subl
scas
or
dec
rorb
bound
fldt
mov
lret
mov
sbb
orl
and
and
xchg
pushf
outsl
popf
mov
dec
cmp
in
and
pop
popa
setp
sarb
fldl
icebp
push
int3
leave
out
xchg
inc
iret
xchg
jb
add
dec
sbb
push
je
pop
push
das
enter
fs
cmpl
push
out
data16
mov
dec
dec
bswap
movsb
js
ds
dec
or
push
lds
shll
xor
xor
addb
xor
cld
push
inc
pop
add
mov
xchg
cwtl
sbb
sti
out
pop
adc
ss
and
and
int3
pusha
cmp
shrb
mov
fnstsw
rolb
aad
mov
insl
lret
xchg
ja
hlt
lret
xchg
jge
pop
into
incl
xlat
int3
dec
leave
std
push
std
xor
mov
fdivs
iret
and
jb
test
decb
and
sub
cmp
inc
lods
out
xchg
add
stos
jle
mov
jmp
mov
jo
push
loope
lea
xlat
sbb
dec
dec
das
stos
shl
data16
lret
pop
jo
sub
insl
xchg
rcll
into
sub
add
sub
and
mov
loope
mov
fwait
std
xor
pop
imul
cwtl
lret
sbb
xor
push
dec
jp
lea
xchg
mov
inc
dec
add
add
xchg
data16
fwait
int
dec
sub
sub
js
dec
sbb
iret
sub
sarl
add
pop
or
or
negl
adc
jbe
adc
cmp
push
add
sub
enter
jns
push
add
ror
xchg
xor
xchg
lahf
sub
and
cmp
adc
or
fnstcw
jp
jno
pop
pop
fnstenv
jno
fsubrs
imul
mov
mov
outsl
sti
addl
sbb
sbb
mov
add
jmp
imul
stos
int
inc
add
sub
xor
divb
jl
rolb
int
arpl
test
pushf
or
pop
daa
xor
mov
adc
out
dec
mov
jo
xchg
in
inc
movsl
cmp
rcrl
into
test
pusha
add
pop
addb
jecxz
mov
and
mov
or
mov
mov
inc
das
adc
sub
aas
and
and
or
and
push
sbb
inc
add
dec
pop
movsl
xchg
and
lahf
sub
add
int3
das
jmp
xchg
jo
xor
fsubs
rorl
xchg
adc
add
outsb
jmp
add
and
out
adcb
xchg
stos
push
mov
pop
loope
push
ret
push
push
pop
ret
test
repnz
pop
or
xchg
in
sarl
and
xchg
mov
scas
lcall
add
loope
or
lock
lock
mov
mov
insb
jbe
mov
ds
and
ss
jmp
sarb
in
xlat
add
and
es
push
add
cmovs
cmp
jge
sbb
push
xor
fidivl
lods
jne
jno
cmp
cmp
push
adc
and
pop
mov
inc
pop
in
aaa
repz
lock
ret
adc
cmc
lahf
add
arpl
ret
fistpl
aaa
sbb
or
jns
and
call
loop
mov
push
jb
wrmsr
add
aaa
sbb
ret
jnp
mov
cmp
cltd
sub
testl
fnstcw
cs
test
lahf
je
push
add
adc
mov
movsb
add
mov
loop
add
adcb
dec
pushw
xor
cmpb
cmpb
add
adc
jmp
xchg
mov
addr16
xchg
mov
les
add
add
cmp
pop
in
xchg
and
scas
popa
xchg
mov
rcrb
fisttpll
ret
and
arpl
push
adc
dec
bound
imul
iret
loopne
adc
stos
add
pop
add
outsl
add
sub
add
inc
shlb
gs
fwait
pop
or
dec
cmpsl
or
bound
push
pop
outsl
adcl
and
push
or
jno
xor
add
or
outsb
lea
add
xchg
xchg
jo
loop
outsb
add
cmp
pop
aas
add
jb,pt
andb
inc
sbb
sub
mov
adc
ror
fs
fidivrs
jle
daa
mov
add
adc
add
sub
out
adcb
das
add
inc
mov
test
add
inc
lcall
mov
add
sub
or
test
cmp
add
adc
mov
or
flds
and
sbb
add
and
scas
es
mov
insb
cli
aaa
and
enter
xor
loopne
out
jo
sub
add
sbb
jns
adc
add
pop
lcall
dec
xor
jno
xchg
add
or
sub
xchg
in
popa
sub
dec
lods
lods
jns
adc
sbb
mov
bound
js
pusha
sbb
xor
inc
jl
addl
inc
adc
lret
ret
inc
dec
imul
flds
add
pusha
gs
loop
scas
pop
loope
cli
and
mov
dec
es
fcomps
push
adc
scas
test
mov
sub
cmpsb
lea
or
leave
subl
mov
fwait
adc
sbb
xchg
lock
jg
mov
sub
xchg
cmpl
outsb
dec
mov
add
sub
movsb
jo
xchg
flds
fstps
and
mov
push
push
sub
adc
pop
out
test
or
or
jno
ja
pusha
movsb
sub
and
inc
andb
dec
aaa
cmpsl
iret
add
add
insb
push
and
mov
adc
cmpsl
leave
cwtl
dec
lds
and
adc
lds
adc
rol
xor
sbb
ret
pop
and
test
push
pop
xor
scas
ds
xchg
adcb
pop
pop
inc
mov
imul
je
aad
xchg
test
mov
and
or
rcr
sub
test
ret
lods
pop
sbb
ss
mov
repz
call
js
xor
mov
cmc
mov
mov
jl
fdivs
or
adc
push
test
add
jl
pop
scas
loopne
pop
movsb
add
stos
cmpsl
shlb
scas
lods
and
stos
add
add
jmp
or
loopne
or
loope
scas
xchg
or
sub
inc
mov
je
mov
push
movhps
sub
mov
push
jbe
fstl
push
test
mov
pop
les
das
mov
add
pop
mov
jo
jnp
mov
mov
es
cs
andb
es
xor
orl
dec
jne
sub
mov
mov
fisttps
jp
add
cmp
fs
xchg
nop
loopne
stos
inc
cmp
ret
inc
push
dec
xor
sub
ret
enter
adc
add
mov
sub
jno
dec
sub
inc
xor
fwait
and
mov
loope
dec
pop
adc
jmp
jo
test
ret
daa
ret
stos
and
dec
sti
add
jo
jl
push
xchg
and
mov
xor
sub
dec
movsl
and
subl
shl
jno
xchg
push
es
push
mov
add
sub
cmp
movsl
pop
lds
test
inc
out
jp
push
sbb
lahf
cmp
aam
pusha
adc
xchg
lock
psubsb
cmp
mov
mov
jecxz
icebp
xor
jne
xlat
push
lret
dec
imul
jmp
das
lcall
jne
dec
mov
mov
aaa
daa
fwait
add
rorb
or
sbb
pop
jbe
shlb
mov
adc
daa
cmp
aam
loopne
sbb
xor
mov
add
daa
mov
sahf
add
push
es
ss
sbb
fidivrs
dec
jo
push
enter
mov
add
pushl
iret
rolb
cld
mov
sbb
xor
mov
jae
or
add
dec
xor
icebp
jo
mov
scas
icebp
or
jae
xor
aam
jnp
je
push
jmp
test
sbb
xchg
push
aam
sbb
mov
loop
fwait
sub
sbb
jg
insb
push
push
push
adc
and
mov
mov
adc
dec
add
gs
fdivrl
inc
rorl
mov
sbb
js
shll
popa
pop
push
and
inc
jnp
xchg
add
loope
gs
dec
cwtl
inc
xor
sub
inc
push
cmc
sahf
and
inc
out
add
fldcw
push
mov
sbb
add
push
push
mov
aaa
arpl
ss
or
stos
and
adc
sahf
add
popa
sahf
mov
mov
sbb
test
push
pop
jb
imul
or
pop
rol
fmuls
movsl
hlt
sub
mov
iret
and
test
notb
and
pop
lret
sub
cmp
pusha
mov
add
lods
xchg
outsb
and
add
sbb
stos
xor
lods
cmp
dec
hlt
lds
add
cmp
and
bound
sbb
mov
data16
xorl
push
and
lahf
lea
int
dec
lret
inc
sub
dec
push
mov
js
dec
add
adc
sub
scas
out
cmpl
dec
shr
jns
dec
sbb
out
sbb
sbb
inc
sbb
push
adc
fimuls
adc
jge
sbb
xor
mov
sub
lahf
sbbb
adc
dec
or
lcall
or
dec
into
iret
jl
xchg
and
mov
mov
lahf
cmpsb
jg
xchg
sub
cli
push
mov
sbb
xchg
xchg
jnp
sub
rcrb
aaa
iret
arpl
push
neg
sub
jnp
aaa
inc
mov
add
sbb
stos
and
pop
and
sbb
test
and
and
faddl
jmp
cwtl
popa
pop
movsl
xor
jbe
jno
adc
push
inc
out
jo
and
pop
cmp
pop
loopne
or
popa
dec
fisubrs
fsts
stos
push
xor
add
jo
jo
iret
fwait
xchg
jge
sbb
scas
mov
jmp
xor
mov
sub
lock
call
dec
xchg
xchg
sarl
inc
mov
lret
nop
jmp
enter
and
rolb
daa
and
adc
icebp
jnp
add
sub
adc
dec
popa
icebp
pusha
mov
sbb
cmp
inc
pop
add
or
lds
adc
pop
push
pushf
das
cmp
testl
and
test
mov
xchg
inc
in
mov
add
jp
stos
pop
pop
or
je
mov
inc
shlb
int3
xchg
outsb
cltd
fsubs
js
mov
enter
and
hlt
jno
xchg
aam
mov
inc
and
repnz
or
mov
rcl
jmp
sbb
lret
fidivrl
out
popf
inc
push
xor
fistpll
daa
push
mov
cmp
inc
pop
roll
je
movsb
add
inc
test
xor
jecxz
inc
aad
orl
xchg
ret
fcomps
jo
xlat
daa
jge
cltd
sub
fildll
push
mov
xchg
daa
fwait
xchg
and
mov
insb
adc
add
and
dec
cmp
jle
xchg
aad
sub
jle
push
mov
mov
or
cmp
fwait
cmp
test
popf
lea
inc
out
mov
gs
loopne
dec
leave
pop
xor
jmp
inc
ret
and
lock
lds
or
bound
loopne
lods
push
out
inc
pop
inc
and
add
test
scas
jo
daa
adc
aaa
loope
insl
subl
lahf
test
cmp
mov
aad
dec
add
adc
adc
ss
roll
jl
jo
sbb
xchg
adc
inc
iret
movsb
pop
add
loop
hlt
adc
enter
lret
add
and
popf
pop
scas
and
jne
fistpl
sub
mov
add
addr16
mov
mov
push
inc
xchg
int3
push
rorb
je
js
gs
loopne
sub
pop
adc
mov
pop
loop
dec
loopne
mov
cmp
test
xor
inc
call
sbb
and
mov
test
jb
inc
or
jns
add
mov
mov
pop
pop
daa
pop
xchg
push
cmpsl
inc
push
popa
in
inc
and
rorl
add
pop
and
ret
test
dec
stc
jnp
push
and
rol
lods
sub
add
ret
mov
aas
test
daa
push
sub
aas
test
push
addl
inc
cmp
rcr
xchg
add
out
rorl
push
loopne
scas
cmp
sbb
jle
and
add
push
andl
ljmp
movsl
dec
or
dec
movsl
js
mov
lcall
ja
nop
insl
xor
mov
pop
in
mov
sub
jl
cmp
insl
fiadds
lea
or
cmpsl
jo
jmp
sbb
outsl
jno
arpl
rorb
dec
lret
arpl
jp
adc
sbb
dec
loopne
idivb
or
push
ret
jb
flds
dec
jne
push
in
sub
hlt
add
xor
mov
pop
sbb
dec
cli
negb
test
out
inc
mov
in
gs
cmc
add
xor
lret
cmpb
sti
call
cmp
rorl
adc
hlt
sbb
xor
sbb
dec
fmull
cmpsb
leave
test
dec
pop
push
cmpps
dec
lcall
pop
push
lret
add
push
xchg
push
or
add
cmp
mov
xchg
pop
and
cmpb
call
xor
mov
js
add
stos
sub
in
cli
push
lahf
cwtl
add
out
xchg
std
pminsw
movb
and
mov
push
or
loop
test
mov
out
jo
pop
shrb
ficoms
in
jne
jl
inc
inc
xchg
mov
sbb
and
inc
test
jmp
adc
aaa
daa
jnp
clc
adc
int3
adc
cmpl
dec
jno
add
pop
test
xlat
outsb
jl
dec
es
ljmp
popf
cmpsb
mov
jge
pop
popa
sub
pusha
push
push
add
cmc
cs
or
or
dec
ljmp
ret
sbb
mov
mov
aaa
inc
dec
inc
dec
fadds
aad
nop
mov
add
mov
leave
dec
arpl
dec
jae
or
jo
repz
pop
cwtl
push
aad
outsb
adc
mov
scas
or
rcl
movsb
xor
cs
adc
or
pop
pop
test
push
js
nop
xchg
mov
gs
inc
faddl
and
rorb
pop
sub
and
into
jno
es
adc
sub
mov
rcll
adc
cltd
pop
fists
pop
into
repz
jo
inc
imul
pop
xchg
add
mov
push
jbe,pn
rcrl
in
pop
aas
push
dec
imul
sarb
mov
mov
addb
int
popf
mov
inc
test
jl
xchg
xor
sbb
nop
mov
ss
sbb
sbb
ror
xorb
cltd
es
inc
out
push
inc
sub
cmpsb
aas
sahf
pushf
lahf
adc
xchg
jmp
mov
test
jp
js
lret
jmp
fdivrs
or
add
cmc
repz
push
mov
rol
mov
fwait
imul
inc
sbb
dec
and
mov
inc
sub
je
and
add
dec
dec
xchg
jecxz
inc
lret
cmp
out
gs
lods
push
jo
je
sbb
out
pop
dec
adcb
xchg
pop
jl
mov
sub
sbb
pop
push
jp
jecxz
xchg
add
pop
mov
and
cltd
push
test
inc
or
je
fldt
cmpsl
cmp
dec
mov
aaa
pop
sti
sbb
xchg
out
and
or
inc
and
pop
sbb
adc
test
jae
push
lahf
fsubrs
xchg
aaa
pop
mov
cmp
addr16
xchg
std
sbb
pop
arpl
xor
push
xlat
lahf
adc
xorb
xchg
inc
insl
pop
hlt
push
and
fldenv
mov
sbb
dec
insl
mov
add
dec
adc
cmc
cmp
fcmovu
cmp
arpl
stos
stc
cmc
sub
dec
or
add
jecxz
fisttpll
xchg
int3
and
mov
push
add
shr
scas
fsubs
fs
loope
and
fisubrl
std
sbb
shl
bound
addl
jmp
data16
das
sbb
fcoms
std
roll
sub
lahf
rolb
jmp
sbb
and
in
das
and
sbb
and
ret
pop
mov
pop
add
aaa
lahf
and
mov
xchg
lods
mov
inc
sbb
inc
rorb
iret
xor
jbe
loope
add
add
and
add
sbb
add
pop
sub
insl
insb
sbb
fs
fbstp
push
add
pop
inc
loope
lret
fiaddl
add
adc
cmp
lods
les
inc
adc
fdivr
cmpsl
inc
jo
inc
add
pop
dec
enter
mov
arpl
mov
or
gs
push
lcall
pop
insb
mov
jle
mov
xor
dec
dec
pop
sub
daa
adc
or
or
mov
cli
push
push
adc
jns
in
mov
sub
cwtl
mov
or
outsl
jo
xchg
mov
or
lret
mov
adc
mov
mov
mov
or
add
mov
decb
pop
add
pop
cmpsb
jo
xchg
das
loope
cmp
pop
insb
sbb
add
lods
scas
cmpsb
pop
and
push
ss
push
sub
pop
pop
outsb
mov
int3
dec
popa
les
adc
mov
js
push
call
mov
dec
adc
jmp
add
mov
fists
mov
or
jp
inc
sub
xor
mov
cmpsb
mov
adc
repnz
pop
pop
xor
fnstenv
xor
mov
push
pop
or
dec
ret
push
jg
repz
push
pushf
mov
add
test
dec
xchg
inc
push
mov
or
lea
or
dec
and
add
xchg
xor
add
arpl
lea
mov
imul
lahf
xor
or
sub
fwait
popa
mov
ret
xor
fisubl
pushf
ds
xor
sbb
enter
popa
push
or
push
pop
xor
cmpsl
imul
scas
dec
pop
dec
xchg
sub
shr
dec
mov
inc
xchg
fisubs
add
mov
xor
mov
mov
inc
outsl
xorl
insl
mov
mov
vpackssdw
out
addl
gs
add
push
movsb
lods
add
pop
loope
sbb
rol
aam
inc
rorb
jge
js
xor
mov
cmp
sub
daa
dec
inc
add
add
pop
jne
mov
adc
scas
and
add
mov
into
dec
xchg
cmc
inc
cmpsl
and
stos
lret
je
testb
xor
fs
mov
and
or
xor
imul
adc
cmp
add
xor
faddp
jg
popf
cmp
jg
jns
pop
test
fnstsw
sbb
xchg
xchg
xor
iret
loope
adc
mov
mov
jl
dec
add
stos
push
adcb
sub
cmp
adc
roll
push
in
push
cmp
fidivs
je
int3
mov
xchg
mov
adc
lret
outsb
sbbl
add
and
fisubrs
add
sbb
add
subb
adc
add
in
int3
mov
cmc
and
adc
push
add
mov
xorl
js
movb
cmpsb
sbb
adc
sub
and
or
arpl
ds
pop
xchg
dec
icebp
jg
dec
adc
and
andl
and
jno
lret
mov
add
add
push
add
fcmovnbe
mov
fildll
mov
pop
mov
jae
pusha
addr16
pop
sbb
leave
add
aaa
push
enter
int3
mov
add
sub
pop
cmc
sub
pop
mov
mov
xchg
pop
pop
adcb
sub
add
leave
sbb
xorl
add
sub
cmp
pop
sub
lock
adc
bound
adc
pop
add
add
add
sahf
sub
push
mov
movsb
pop
xchg
int3
mov
xchg
jae
sbbl
icebp
push
add
xor
xor
or
shlb
fbld
mov
les
sub
adc
push
dec
int
sbbl
pop
adc
add
pop
add
push
sbb
sbb
rcr
add
xchg
mov
out
add
iret
xchg
xchg
and
mov
jo
mov
arpl
or
adc
andb
push
jecxz
and
jo
pop
inc
and
bound
mov
mov
lcall
and
jne
ret
or
fiadds
sub
and
das
ja
rolb
mov
and
aad
jge
shlb
sbb
out
mov
jmp
pop
nop
add
xor
into
mov
popf
inc
add
shlb
scas
xchg
incb
and
mov
push
add
add
ss
sub
movl
jns
jg
daa
mov
add
jecxz
add
ds
sbb
movsb
mov
fstps
dec
scas
push
jo
clc
add
mov
sbbb
mov
aaa
sub
jae
je
xor
jns
push
cmp
cmp
and
jge
add
js
sub
out
inc
mov
xchg
inc
xor
and
loope
test
sbb
dec
inc
lds
and
cmp
fmul
stos
inc
inc
arpl
in
cmpb
xorl
add
add
mov
or
cmp
jl
mov
das
pop
rorb
cmpsl
pop
int3
adc
sub
scas
push
xorl
push
test
pop
iret
int3
mov
push
lods
sub
pusha
shlb
ss
dec
mov
add
lret
mov
jecxz
loopne
mov
setl
and
lods
stos
add
or
cmp
fistpl
and
in
sub
adc
sub
push
les
loope
or
adc
mov
add
mov
inc
or
mov
push
adcb
and
adc
inc
adc
adc
push
sub
xchg
lcall
mov
add
insb
inc
sbb
sub
mov
insl
or
fistpl
and
mov
jmp
or
nopl
popa
mov
out
nop
cmpb
cltd
sbb
sub
add
add
push
rol
sub
mov
adc
add
sub
test
ds
and
xor
int
sbb
sbb
adc
addb
jne
xor
addb
pop
mov
test
and
push
les
and
movsl
lea
lea
push
gs
push
dec
pop
sbb
adc
pusha
dec
push
add
sbb
cmp
push
or
push
in
inc
sbb
jbe
ljmp
inc
pop
add
lds
or
repnz
dec
add
lods
fildll
lea
das
jecxz
and
negb
dec
dec
jge
mov
dec
dec
cmp
loop
mov
repz
ds
ds
jecxz
ret
xchg
mov
push
mov
scas
out
pop
rol
inc
ja
aam
int
test
cmpsb
fs
jo
into
sub
inc
add
add
dec
dec
loope
jmp
xchg
add
fmull
cmp
dec
mov
adc
push
xor
add
sub
insl
es
cmp
push
sub
xchg
xor
add
push
lcall
mov
jmp
sbb
sbb
xchg
nop
pop
pop
es
and
pop
lea
sbb
lret
lock
outsb
push
pop
dec
sub
imul
nop
add
pop
inc
and
pop
xor
add
jmp
lret
add
inc
push
sub
fs
incl
lods
jo
add
dec
cmp
mov
test
inc
xlat
movsb
nop
out
in
mov
cmpsl
arpl
pop
mov
sbb
sbb
or
cmpb
decb
xor
les
roll
aas
imul
rcrb
add
mov
inc
int
orb
rolb
scas
test
loopne
sbb
mov
xor
push
cli
cmp
test
pop
xlat
dec
popa
mov
xchg
iret
and
add
cmp
aaa
lcall
dec
sbb
jge
testl
jge
ret
int
and
sbb
fwait
xor
test
ret
mov
push
mov
mov
andb
fadds
outsb
ret
pop
dec
popa
mov
and
or
clc
movsb
loopne
mov
fiaddl
out
repnz
sub
loopne
dec
xor
xor
add
cmp
out
sbb
sub
add
xor
rcll
push
sbb
or
shrl
call
add
call
push
bound
lcall
xchg
or
mov
jo
jge
xchg
outsl
or
jl
je
jno
mov
inc
jns
imul
mov
cmp
xor
pop
lret
push
cmpsl
cli
sbb
pusha
das
lcall
enter
adc
mov
imul
xchg
mov
shrb
sub
push
test
movsb
ret
arpl
jno
jle
test
mov
scas
jbe
push
ljmp
test
xlat
add
lods
shll
sbb
cmp
mov
aam
pop
lcall
xchg
loope
cmp
pop
pop
cmpsb
nop
jecxz
fildl
fsubrs
xor
adc
xchg
insl
mov
add
sub
mov
mov
xor
add
ss
sbb
jecxz
mov
jae
outsb
or
push
cmp
arpl
inc
pop
cmp
pop
test
mov
xchg
aaa
inc
sbb
adc
sbb
add
pop
mov
ds
inc
push
jg
scas
into
rolb
cmp
pop
arpl
aaa
mov
lods
jno
fisubrs
and
inc
scas
aaa
shr
cmp
mov
dec
pop
or
jle
mov
stos
mov
cmp
imul
pop
cmp
popa
adc
or
push
mov
arpl
cmp
mov
cmp
dec
dec
dec
js
mov
and
cli
jp
xor
fxch
mov
test
mov
adc
ljmp
pop
mov
adc
sbb
movsb
shlb
movsl
dec
jmp
cmpsl
push
sub
push
loop
xchg
add
imul
dec
pop
push
ret
mov
fcompl
or
fidivl
sub
insl
dec
jns
into
xor
jl
into
sub
adcb
mov
xchg
jne
out
jno
sub
cmpb
pop
das
sub
jns
inc
js
ret
das
sub
lea
sub
and
or
cltd
cli
push
push
mov
movl
and
pop
sbb
shll
adc
or
mov
pop
pop
or
inc
jp
lock
push
xchg
shl
out
out
loopne
test
sub
cmp
adc
jbe
popf
add
or
mov
subl
test
xlat
std
adc
es
outsl
insb
iret
dec
jae
les
cmpsl
sbb
pusha
ret
or
pop
ja
xor
sbb
shlb
inc
push
or
cmp
sub
adc
and
mov
mov
fnstenv
and
push
adc
mov
adc
sub
int
cmpsb
test
out
mov
mov
xchg
pop
ror
xlat
mov
pusha
nop
cmp
jl
or
xchg
in
jle
adc
xor
pop
or
cmp
or
push
shl
iret
adc
scas
insl
sti
jb
pusha
jge
cmp
xchg
xchg
adc
inc
js
xchg
mov
or
outsb
cltd
dec
fucomip
jmp
pop
pop
sti
or
iret
insb
int3
add
cmpl
adcl
jne
add
cmpsl
or
push
inc
popf
add
sbb
test
add
leave
cmpsl
out
loop
mov
cltd
lret
push
cmp
cmp
mov
sbb
mov
call
cs
call
mov
mov
push
lods
inc
push
mov
movsl
adc
les
sbb
daa
mov
add
add
arpl
cmp
inc
sub
cs
loop
push
push
jg
or
xchg
icebp
or
or
xor
lret
cwtl
sahf
xchg
or
sti
xchg
in
mov
sbb
cmp
jbe
insl
sbb
into
and
push
push
and
push
or
adc
cmp
adc
jne
mov
xchg
stos
repz
sbb
xchg
mov
xor
sbb
push
sub
nop
mov
push
gs
lds
xlat
push
sub
stos
push
xchg
adc
outsl
jmp
jle
xlat
insl
adc
or
jbe
insb
movsl
lret
xor
sbb
mov
push
jo
mov
pop
and
xor
aas
mov
scas
inc
ret
or
mov
and
cmp
fnstcw
xchg
push
je
jbe
xor
int3
rolb
add
add
ret
cmp
test
xor
addb
aaa
adc
jns
jo
sbb
fs
push
loop
adc
mov
push
mov
inc
js
adc
and
cmp
jp
push
mov
fistpll
jne
imul
pop
in
xchg
int3
loop
ret
push
cmp
sub
or
aaa
xchg
aas
in
sbb
test
dec
ja
sbb
push
insl
sbb
imul
mov
pop
or
loop
jne
in
add
sahf
mov
jns
mov
sub
loope
pop
insl
sbb
js
mov
add
jecxz
iret
push
mov
inc
adcl
cltd
and
loop
les
mov
and
es
adc
or
inc
push
mov
gs
jg
push
inc
mov
push
xor
or
movsb
loopne
adc
dec
test
ret
mov
rcr
xor
dec
sub
push
lea
aas
cmp
xchg
xor
adc
in
add
arpl
inc
and
insl
sub
dec
add
daa
inc
dec
cmpsl
les
ds
bound
stos
in
mov
push
pop
sub
adc
cmp
stos
jecxz
fisubs
xorl
sbb
or
aam
cmp
popl
sbb
or
ret
imul
sub
lea
lock
negl
ja
push
ds
push
xchg
or
pop
ss
scas
sub
sub
cmc
enter
push
xchg
sti
ret
mov
xchg
lret
cmpsb
test
and
int3
pop
sub
std
pop
aas
jb
add
sub
es
cwtl
repz
les
test
test
mov
pusha
add
lods
in
aas
std
test
dec
mov
mov
fmuls
cwtl
cmpsl
sbb
pusha
sbb
sbb
cmp
lock
and
aaa
and
fstp
push
daa
sbb
sti
inc
add
test
add
lods
lods
pop
fsts
pop
dec
pop
movsb
sar
or
ja
mov
sbb
sub
ret
je
inc
subb
xchg
movl
fucomp
rcll
push
mov
in
cmp
and
mov
mov
mov
and
ret
mov
xchg
and
pop
insl
push
cmpsb
jbe
imul
and
mov
ss
outsl
shlb
inc
roll
in
dec
lea
sub
cld
repnz
jne
push
dec
sub
mov
add
adc
das
and
mov
jne
sub
testl
sbb
outsb
mov
sub
cmp
inc
or
pusha
insl
mov
lods
jne
sbbl
dec
aad
xor
fsubrs
sbb
dec
add
or
dec
pop
or
push
scas
jmp
js
repnz
ja
sbb
gs
or
roll
adc
pop
lcall
jl
adc
lods
xchg
jecxz
or
xchg
movsb
inc
bound
cmpsl
mov
mov
add
sub
adc
add
sub
stos
xchg
jne
js
roll
into
inc
pusha
std
push
lods
fcmovnb
dec
mov
inc
ds
lahf
call
test
push
xor
add
out
adc
mov
add
enter
and
in
add
pusha
sbb
dec
xchg
jge
pusha
mov
out
popa
repnz
pop
cmpl
int3
add
or
mov
xchg
ds
sbb
orl
push
xor
cmp
shlb
cli
out
dec
les
stos
jl
cmp
lea
inc
cmpsl
lahf
fcoml
out
add
mov
sub
cld
lods
and
adc
andb
out
in
xchg
push
push
sub
or
shrb
mov
inc
pop
and
pop
pop
xchg
fisubrs
push
pop
jmp
jl
pop
sub
pop
das
add
add
test
sub
dec
inc
mov
dec
sub
shrb
lods
fstl
or
adcb
adc
and
fdivp
add
xlat
xlat
test
adc
and
data16
jecxz
mov
add
sub
or
cwtl
les
dec
test
or
or
dec
popf
mov
rorb
mov
mov
fucomp
pop
sub
mov
jo
jns
jne
fstpt
sbb
test
push
rcrl
jae
ret
pop
outsb
sub
or
fstps
mov
pop
bound
and
ret
mov
loop
in
aaa
jbe
mov
fldenv
jno
insl
pop
lea
flds
mov
aam
ljmp
mov
pop
aad
adc
adc
ret
lods
or
or
pop
adc
and
outsl
push
scas
mov
sub
pop
cmp
push
pop
movsb
add
adc
cmpsl
dec
sbb
mov
nop
pop
and
lods
ret
adcl
add
pop
push
and
popa
loop
filds
cmpsb
jb
or
mov
jns
jge
pushf
adc
mov
mov
lods
movb
and
insb
dec
mov
or
fdivl
movsb
insb
call
sub
rcr
or
add
loopne
out
bound
pop
jle
outsl
add
inc
pop
push
ficoml
lret
xchg
dec
movsb
insl
push
add
add
and
ret
sub
xchg
xorb
lret
arpl
fildl
push
or
xchg
or
adc
pop
movsb
fmul
xor
jne
enter
xchg
cmovl
daa
daa
or
sub
popa
mov
jmp
pop
jne
add
sub
push
movsb
fimull
test
test
jno
push
outsb
mov
outsl
xchg
dec
mov
and
dec
mov
push
es
jo
lock
and
or
addr16
adc
int
decl
inc
and
test
fldl
add
std
popf
or
and
cmpsl
cmp
adc
or
pop
movsb
and
rep
btc
cwtl
fldl
in
mov
mov
xor
iret
lret
scas
aam
xchg
mov
lret
mov
cmpb
inc
xor
mov
mov
adc
and
sbb
inc
movsb
jno
aad
sub
pushf
out
pop
adc
cs
cmpsb
dec
sbb
adc
cwtl
xor
push
or
add
and
roll
and
mov
in
or
mov
enter
and
mov
test
or
lahf
xorl
lods
pop
adc
pop
adc
es
xchg
ret
cmpsb
jb
loopne
mov
pop
pusha
imul
push
nop
test
push
mov
add
imul
xor
xor
rcr
fiadds
stos
cs
or
js
test
je
pop
inc
or
push
bound
push
iret
and
xchg
aaa
xor
lods
movsl
mov
pop
mov
adc
jne
mov
push
xor
dec
fwait
gs
ds
add
pop
popf
jg
push
add
xchg
add
and
adc
cltd
mov
lods
lahf
jae
and
cltd
lods
pop
add
mov
mov
int3
sbb
mov
cmpb
adcb
xchg
mov
xchg
xchg
ja
and
adc
add
fdivl
push
mov
sub
lock
insb
and
inc
xchg
sub
ret
mov
sbb
je
dec
in
aam
loope
clc
mov
int
inc
adc
xchg
cltd
mov
push
ret
mov
sub
adcl
ljmp
cmp
dec
test
iret
and
mov
push
nop
dec
mov
nop
or
jmp
mov
dec
sbb
lret
fucomi
adc
and
daa
ret
outsl
mov
add
leave
push
hlt
jp
add
scas
divl
and
dec
and
out
sbb
enter
scas
add
punpcklbw
add
adc
add
push
movsb
pop
sbb
mov
push
jecxz
sbbl
push
pop
push
out
jmp
fscale
add
sti
je
out
cwtl
test
loopne
arpl
scas
test
cmc
repnz
add
bound
and
inc
pop
js
int
lds
lret
push
sub
inc
test
push
outsb
insl
push
xor
push
push
adc
dec
xchg
imul
es
repz
rol
pop
or
scas
test
add
popa
or
cmp
mov
mov
mov
and
loopne
xchg
jo
jg
sub
and
jp
data16
xchg
sub
pop
add
popa
mov
loope
and
enter
mov
nop
and
ret
insb
loope
and
xchg
mov
sbb
pop
lcall
repz
scas
and
xchg
add
in
adc
repz
mov
ja
add
dec
shll
mov
jo
icebp
scas
cmpsl
sbb
mov
or
inc
sub
mov
mov
fwait
sbb
inc
js
call
or
fcoml
flds
pop
scas
jo,pt
movntps
stos
inc
mov
push
pop
clc
lock
add
adc
pusha
adc
insl
mov
fcoms
push
lods
cli
xor
dec
xchg
lods
aaa
lods
pop
xorb
pop
add
or
paddw
sti
sbb
scas
daa
xchg
aam
xchg
mov
xchg
jge
adc
test
lret
dec
nop
mov
ss
sahf
test
push
mov
addr16
pop
xor
or
and
lods
add
jno
fsubrs
mov
setb
adc
punpcklbw
adc
dec
popa
iret
lcall
xchg
pusha
cmpsl
insb
or
test
sbb
ljmp
loope
stc
test
lods
add
ja
xchg
inc
add
fadds
lods
push
pusha
add
jns
ret
fiaddl
inc
sbb
add
lret
mov
nop
ss
ljmp
test
xor
pusha
cmpsl
or
jp
inc
mov
lods
jle
jmp
ljmp
adc
mov
push
imul
gs
add
or
sbb
aaa
ja
addr16
ret
inc
add
xchg
jmp
enter
add
pusha
ret
lret
pop
ret
pop
cs
sbb
add
test
inc
push
add
xor
push
inc
loop
sub
testl
mov
jmp
sarb
add
insb
add
jne
call
adc
out
push
pop
pop
inc
imul
jns
adc
nop
ret
adc
daa
mov
push
sarb
or
jne
mov
test
int
hlt
pop
subb
roll
loopne
inc
rcrb
sub
mov
nop
adc
inc
gs
jo
sbb
mov
pop
mov
dec
or
aaa
clc
and
ret
or
cmp
cmovp
addb
push
pop
adc
cwtl
das
aaa
xor
dec
mov
ja
sbb
and
push
add
sbb
sbb
lods
rep
pop
or
pop
inc
and
mov
jle
xchg
pop
dec
ret
les
push
aam
scas
sub
add
ja
data16
sbb
pop
loopne
adc
pop
cwtl
pop
jle
xchg
lea
popa
movsb
popa
mov
call
and
fwait
sub
jge
loop
xor
mov
xchg
les
pop
or
push
fwait
movb
ret
cmp
and
adc
add
aas
pop
and
aaa
pusha
aad
jl
add
and
shlb
or
push
xor
outsl
or
aas
and
clc
fisubrs
das
fsts
popf
mov
lret
xor
imul
pusha
jmp
fdivl
arpl
iret
loopne
inc
out
lea
add
dec
cmp
mov
je
add
xor
pop
jg
pop
icebp
xchg
out
in
outsb
leave
mov
sarb
and
or
xchg
insl
jmp
xor
addr16
les
test
in
or
push
sub
or
jl
lock
cmp
adc
ret
hlt
sbb
in
or
inc
and
popl
call
sbb
or
shll
imul
cmp
inc
jmp
sti
out
jo
cltd
or
mov
xchg
add
shlb
and
xor
clc
daa
sub
push
xchg
push
or
sub
dec
fadds
or
mov
pop
les
pusha
popa
xor
push
push
pop
dec
pop
das
dec
je
mov
mov
pop
adc
cmp
xchg
sbb
or
lods
push
aaa
xor
add
mov
ret
add
cmp
mov
jb
adc
dec
adcb
inc
fdiv
rcrl
cmovno
ja
add
addb
les
test
sbb
aaa
loopne
mov
in
adc
cs
icebp
in
pushf
aam
ljmp
arpl
adc
mov
cwtl
mov
mov
in
push
adc
sub
les
ds
ljmp
mov
mov
les
test
adc
mov
jo
and
sbb
fldt
or
sbbl
iret
and
add
es
loopne
aam
loope
lret
xor
cltd
fnstenv
imul
cmp
sub
mov
push
leave
push
push
dec
xlat
xchg
cltd
cmp
xchg
xor
pop
stos
cmp
xor
and
loop
ja
pushf
jo
xor
mov
shrl
aad
inc
out
popf
jle
and
xor
inc
and
dec
pop
lock
add
dec
les
cmp
lock
sarb
pop
jl
dec
or
sbb
mov
insl
or
pop
pop
adc
fwait
xor
lret
sbb
js
aaa
dec
movl
add
fldenv
add
and
xorb
xor
jns
sbb
cmp
pop
and
jno
add
mov
rcrb
cmp
ret
push
pop
jecxz
jmp
or
inc
aas
sbb
jecxz
loope
rorb
sub
test
pop
out
fisttpl
ljmp
cld
mov
rcll
outsb
pop
xlat
loopne
popa
lahf
movsb
aas
cmp
mov
jmp
dec
add
outsl
ljmp
adc
addb
sbb
xor
mov
stc
mov
dec
rclb
lahf
pop
je
mov
inc
aad
or
cs
pop
sbb
jno
and
daa
or
sub
or
mov
jecxz
mov
addb
adc
mov
js
pop
push
push
inc
shrl
mov
add
int
loopne
cwtl
or
ret
outsb
lcall
aaa
inc
sbb
sub
shl
inc
subl
rcrb
test
data16
or
push
hlt
adc
add
push
cwtl
les
movsl
inc
mov
push
lock
out
or
xchg
adc
and
mov
push
push
je
addb
sbb
mov
lahf
and
loop
loopne
xchg
xor
mov
sub
idiv
fcomps
in
sar
loopne
fldl
loopne,pt
add
jl
cld
push
add
xor
out
add
inc
jmp
test
es
popa
pop
ret
mov
roll
icebp
fldt
stos
mov
inc
stos
lcall
lret
iret
sub
jns
push
mov
addl
mov
mov
mov
in
jecxz
xor
mov
pop
mov
sub
lods
divb
call
jae
ret
imul
cmpsb
out
mov
or
adc
inc
ret
std
push
loop
subb
loop
and
cmp
mov
adc
jne
jno
sbb
dec
jns
pop
cmp
push
cltd
lcall
in
or
ljmp
stc
adc
jmp
test
addl
fs
imul
je
xchg
ss
pushf
pop
pusha
shl
jne
roll
jp
in
push
stos
retw
mov
out
es
push
out
mov
cmp
push
cmp
xor
mov
xchg
mov
gs
loope
dec
mov
mov
inc
push
stos
mov
mov
or
mov
js
addl
xor
dec
cmp
es
add
mov
cmp
push
clc
push
jmp
cmp
out
pop
cld
scas
inc
add
insb
push
aam
add
js
lods
iret
data16
sarb
sub
mov
in
add
adc
jbe
jecxz
in
in
lods
hlt
add
jle
cwtl
mov
sti
andb
jl
fsubs
sub
jge
ret
shll
jl
imul
jbe
in
clc
enter
lock
subb
scas
xchg
dec
fidivl
call
scas
add
or
push
sub
ret
add
push
jae
mov
je,pt
lahf
in
adc
lock
push
test
dec
clc
xchg
add
xchg
xchg
push
push
mov
add
in
push
testb
cmc
or
cmpsb
lea
cs
mov
pop
xor
mov
mov
cmp
sub
decb
cmpsl
in
fmuls
subb
das
data16
mov
or
xor
rclb
lahf
lock
insb
and
lret
pop
aaa
test
popf
sub
ss
sub
cmpsl
das
rol
and
aad
add
cmpsb
dec
in
or
aaa
scas
outsl
hlt
lret
push
pop
das
xchg
outsb
int3
pop
iret
out
bound
cmp
in
insb
or
es
es
sti
sbb
cmc
repnz
shlb
cmp
fdivrs
leave
loopne
in
adc
and
lea
inc
add
shrl
and
icebp
xchg
mov
and
lock
ja
aaa
movsb
cmpsb
lret
xchg
ja
push
adc
out
cmpsb
movsl
cmp
rcl
dec
imul
subb
xchg
in
in
mov
sarb
adc
dec
fsubrl
es
add
into
push
sub
add
bound
pop
in
push
insb
sub
mov
imul
pushf
jns
add
in
lods
inc
push
xor
iret
sub
adc
mov
fcoml
inc
rorb
test
pop
sbb
and
lret
and
std
lea
xchg
into
dec
shlb
or
scas
inc
in
in
pop
rclb
test
add
and
cmpsl
or
sub
jne
inc
js
mov
ret
mov
mov
rolb
call
cmp
mov
or
jne
cmp
add
rorb
rclb
cmovbe
xchg
sbb
ds
sbb
in
shrl
adc
add
sti
das
jno
cmp
fisubs
mul
loopne
js
cs
sti
mov
jl
push
add
jg
gs
ja
jp
cmpsb
rcrl
lock
xor
dec
shlb
xor
dec
inc
xor
push
andl
ja
push
lret
inc
or
scas
jecxz
hlt
xor
mov
pop
or
imulb
test
pop
je
add
xlat
inc
mov
stos
pusha
shr
push
mov
mov
sub
mulb
or
adc
test
lret
jl
adc
add
add
xchg
add
or
xor
mov
mov
ret
enter
adc
ss
inc
popa
xchg
mov
inc
add
push
hlt
fwait
jne
jae
mov
push
and
xor
nop
xor
mov
frstor
in
roll
add
out
jno
sbb
pop
imul
imul
or
lods
jne,pn
xor
popa
outsb
pop
into
mov
add
mov
pop
addr16
dec
or
push
push
inc
xor
out
lods
rcrb
loopne
push
dec
sahf
stos
in
leave
adc
cmpsl
mov
sub
repz
or
mov
jno
scas
pop
inc
movl
loope
std
lods
in
mov
adc
and
test
push
repz
call
and
das
and
lea
jmp
push
rolb
neg
fldl
aas
sub
dec
pop
jl
sbb
jne
and
or
out
ret
adc
mov
scas
enter
lcall
add
lds
inc
lret
inc
clc
les
ljmp
pop
orl
rcrl
add
lcall
and
ja
insl
roll
add
adc
mov
sub
push
mov
jp
adc
sub
in
lcall
cltd
jp
add
cli
or
shll
mov
sarb
outsb
in
rcpps
jae
and
fwait
or
insl
movsb
xchg
fs
mov
dec
or
aam
push
push
ret
cltd
push
mov
push
into
mov
ds
addr16
push
sbb
mov
mov
inc
in
jp
and
in
int
or
das
notrack
adc
addl
mov
add
in
add
sbb
aas
icebp
xor
mov
stos
cmpsl
xor
insb
movsl
iret
xor
sub
xchg
and
loopne
mov
cmpsl
lods
jmp
pop
clc
inc
pop
pushf
rcll
cmpsb
aaa
pusha
popa
testb
cmp
push
nop
push
push
popa
mov
push
ret
mov
xchg
cs
jmp
call
push
hlt
cwtl
cltd
pop
push
adc
cmp
and
adc
iret
repnz
aas
push
rcrb
dec
pop
mov
mov
fld1
rolb
fldenv
mov
hlt
mov
lret
jmp
loope
ret
loopne
cmp
or
jle
jle
cs
xchg
loopnew
or
shl
nop
sbbb
fucomip
mov
bound
int
xor
push
popf
in
sub
mov
shll
ficoms
mov
mov
add
push
out
push
pop
mov
movsl
sub
pop
sub
add
add
xor
lret
jp
mov
sbb
add
cmp
out
jp
add
cmc
sbb
sub
ret
test
push
push
lock
jp
inc
add
mov
sbb
and
dec
sbb
loope
dec
mov
xchg
or
sbb
daa
dec
je
test
dec
push
loopne
ret
ret
jae
adc
test
dec
loop
cmpsl
shlb
push
xchg
xlat
lcall
pop
arpl
andb
mulb
pop
test
pop
mov
rorb
push
adc
jg
push
das
sahf
sbb
aas
or
push
btl
es
ror
or
fsubrl
jno
push
fwait
mov
and
and
test
add
mov
dec
cmp
mov
or
xor
pop
jae
mov
inc
or
enter
jae
shl
or
cli
pop
dec
fistps
arpl
test
cmp
push
sbb
dec
jp
cmp
neg
adcb
mov
movsb
and
or
into
xor
sub
or
cs
sub
in
das
push
sbb
lahf
jo
push
lods
in
in
sub
jmp
sbb
ret
inc
loop
jl
addb
inc
add
sub
push
out
xor
popa
mov
dec
pushf
add
mov
shl
out
sub
rclb
push
xchg
aaa
push
into
sub
and
add
cmp
pop
arpl
popa
pop
sbbl
mov
das
mov
out
mov
ja
cmp
jl
inc
mov
jbe
and
clc
push
hlt
loopne
pop
pop
or
xor
adc
or
sub
clc
movsb
add
adc
jnp
cmp
mov
sub
xchg
pop
mov
out
je
loope
xchg
test
in
push
movlps
jno
mov
in
inc
in
mov
je
push
rol
sub
lds
dec
jnp
enter
les
orb
stos
push
push
es
dec
fcoms
inc
lahf
push
adc
int3
lock
cmp
sbb
cmp
mov
lahf
adc
mov
xchg
dec
sbb
insl
imul
popa
push
test
dec
insb
test
hlt
outsl
insl
imul
add
rorl
int3
push
imul
xlat
notb
jae
add
inc
cmp
popa
push
xor
mov
jmp
xor
mov
cmp
mov
inc
in
and
in
push
iret
stos
sbb
dec
xchg
sub
sbb
adc
fs
dec
jno
mov
push
in
add
clc
bts
jecxz
cmc
movsl
pop
je
fcoms
cmc
icebp
add
and
int
out
cmp
push
data16
sub
xchg
cmp
aad
adc
outsl
iret
pop
or
aad
pop
gs
and
mov
xor
pop
iret
inc
fwait
add
mov
adc
arpl
test
cmp
or
or
hlt
mov
sub
in
or
adc
daa
cmp
fildl
adc
or
aam
or
in
push
jo
pop
sub
lods
adc
mov
sti
mov
mov
jb
mov
and
sbb
pop
lret
loopne
mov
inc
shll
pop
mov
pop
or
loopne
hlt
add
inc
fmull
add
sbb
adc
inc
lea
loopne
rorb
mov
test
add
add
add
std
andb
fsubrs
lea
adcl
mov
inc
in
push
mov
or
mov
inc
out
push
xorb
pusha
jbe
mov
cwtl
pop
mov
mov
jle
or
imul
outsl
insl
lret
adc
xor
mov
push
cmpl
push
cmp
add
in
push
in
push
push
push
xchg
incl
jns
mov
rcl
ljmp
in
das
push
lret
movb
xchg
pop
ja
lea
add
dec
add
cmpsl
in
fnstenv
sub
or
adc
cmp
add
bound
mov
sub
jnp
push
scas
mov
cmpsl
dec
rcrb
cmp
ljmp
lock
stos
jno
mov
hlt
cmp
loop
push
dec
cmpsl
iret
add
rcll
movswl
sbb
inc
lods
push
insl
cmp
mov
ljmp
jl
ja
mov
fiadds
sbb
scas
and
pusha
push
sbb
dec
dec
test
add
pusha
popa
jo
fidivrs
imul
xchg
icebp
std
adc
call
mov
xchg
nop
jne
jb
push
nopl
adcb
and
dec
mov
dec
popa
fstpl
popf
jge
js
jmp
ljmp
mov
sahf
push
lock
cld
addb
sbb
push
sbb
mov
xchg
inc
fists
rorl
enter
imul
cmp
xor
lock
adc
xlat
mov
and
push
cmp
dec
outsl
add
push
in
nop
hlt
and
adcl
out
out
dec
scas
les
push
dec
js
jo
test
aam
mov
aad
jo
jmp
inc
push
adc
add
jns
bound
popa
pop
or
jecxz
inc
cwtl
add
incb
sbb
adc
out
cltd
inc
iret
pushf
add
mov
nop
pop
or
and
mov
jl
out
cmp
in
addr16
sub
jae
je
lods
pop
fcompl
add
faddl
pusha
and
icebp
and
scas
int3
pusha
inc
xlat
xchg
mov
add
inc
add
inc
jbe
jnp
mov
jge
push
and
rcll
je
jo
in
push
in
sub
adc
rcll
das
popf
xchg
push
imul
orb
fimuls
pop
or
lret
jmp
jo
jae
addr16
sub
adc
cli
xchg
mov
sub
mov
into
mov
or
jo
std
jle
push
je
inc
mov
je
jo
mov
aaa
in
inc
imul
outsl
hlt
or
sub
jns
or
lods
adc
xor
icebp
pop
mov
sar
dec
out
fcoms
lcall
loope
mov
lcall
cld
inc
dec
push
testb
lea
xor
imul
add
add
call
add
inc
fistps
mov
popa
mov
mov
jb
jo
cmp
inc
cmc
mov
ret
adc
loope
cmp
out
xchg
cmp
pushf
pop
inc
and
xor
inc
add
or
push
arpl
mov
ret
inc
imul
mov
add
and
scas
or
or
pop
add
pushf
dec
cmp
imul
mov
pop
xor
movb
cwtl
jne
test
xor
sub
and
in
mov
sbb
inc
or
cwtl
and
and
cs
adc
es
add
orl
dec
mov
mov
mov
rcll
sub
add
inc
dec
rorl
dec
push
ds
lret
push
adcl
ret
cmpl
mov
pop
adc
rcrb
push
xchg
sub
push
lds
rol
scas
fbstp
jmp
or
cld
pop
das
stos
xchg
lock
test
sbb
arpl
cmp
popf
scas
in
or
inc
xchg
cli
mov
xor
inc
or
inc
add
or
jnp
test
out
cmc
insb
inc
outsb
mov
clc
mov
stc
test
mov
lea
xchg
pop
inc
jmp
mov
adc
sub
dec
cmp
add
or
arpl
aam
inc
push
js
pop
mov
sub
dec
xchg
and
sbb
sarb
add
sub
pop
dec
in
nop
jle
inc
loopne
cmp
add
fsubs
popa
mov
pop
mov
adc
xorb
in
mov
jp
mov
jmp
jle
outsb
adc
push
pop
xchg
rolb
dec
dec
imul
cmp
iret
add
xchg
adc
cli
xlat
loopne
ret
cmp
mov
js
mov
lcall
inc
test
lea
adc
push
xchg
ret
and
cs
push
push
dec
mov
jmp
jo
add
sub
sbb
adc
lret
stos
and
or
lret
inc
sbb
xor
cmp
xchg
je
sahf
adc
les
je
shlb
pop
addl
xor
sbbb
mov
frstor
xor
outsb
cli
pop
xor
adcl
mov
lea
js
iret
or
add
sbb
push
add
push
jno
adc
sbb
xor
rcrl
fdivs
pop
insb
subb
arpl
imul
pusha
movsb
jb
or
ss
lods
sahf
pop
ficompl
aam
sub
jne
sbb
or
inc
js
jne
testb
lock
shll
xor
sbb
add
outsl
xor
jl
jp
mov
sub
add
adcl
cmp
shll
clc
push
sbb
xchg
popa
int3
add
cmp
inc
ja
sarb
leave
movsl
add
insb
xchg
and
xor
je
movb
mov
test
push
inc
xor
lea
leave
rolb
xor
add
pop
loop
push
testl
mov
mov
or
cmp
pop
in
shll
or
fs
nop
sarl
fnsave
insb
jne
arpl
ror
cmp
sub
sbb
js
push
ss
addb
add
or
xor
add
jl
sub
inc
or
xchg
adc
add
add
push
mov
test
jecxz
and
test
loope
mov
add
rcrb
aad
push
test
jae
pop
outsl
xor
inc
enter
sbb
rorb
daa
outsl
adc
sbb
jno
pushf
out
push
mov
je
xchg
xchg
push
repnz
xchg
xchg
add
pusha
cmp
adc
aas
dec
pop
fcompl
mov
add
mov
cmp
sub
cmc
xor
mov
or
mov
sbb
and
jo
adc
js
mov
pop
faddl
loop
pop
adc
or
aad
aaa
push
cmp
js
cs
xchg
xchg
push
inc
arpl
lea
clc
adc
add
in
repz
subl
lods
push
add
adc
cmpl
sbb
sbb
cmp
mov
push
cmp
in
mov
jge
lods
outsl
xor
mov
inc
push
rolb
outsl
movsl
scas
outsb
cmc
or
inc
sub
push
xchg
mov
add
jo
add
mov
fstpl
mov
jge
adc
or
and
push
imul
sti
adc
dec
mov
cs
nop
jns
cmp
lea
mov
cltd
arpl
cmp
into
inc
sub
sar
test
and
lods
and
add
or
sub
and
fucomip
xchg
in
xchg
xchg
jg
and
add
xor
scas
inc
mov
inc
mov
cli
out
icebp
dec
or
adc
pop
adc
mov
adc
rolb
insl
arpl
je
pop
cmp
insb
mov
loopne
movsb
fcomp
sbb
sbb
xchg
xchg
fsubr
xor
mov
adc
arpl
sbb
stos
dec
and
push
adc
js
adc
or
jo
jge
iret
sbbl
ret
cmp
sbb
dec
stc
out
add
sub
sub
ja
sbb
pop
mov
cmp
inc
lcall
push
test
push
jecxz
ss
cmp
int3
outsb
pusha
xor
adc
jmp
lret
lods
cmp
add
mov
arpl
add
jno
je
add
cmc
jne
ss
adc
jmp
mov
nop
inc
add
rcr
mov
jp
lock
icebp
dec
sub
outsb
push
cmp
loope
ficoml
push
push
lods
imul
mov
mov
cmp
xorb
cmp
pop
addb
push
adc
xor
ss
pop
addr16
and
add
gs
mov
test
hlt
jl
sbb
or
inc
fbld
or
add
call
sub
jo
mov
push
or
iret
sbb
adc
ret
loope
movsl
add
dec
lock
push
pop
movsb
dec
mov
mov
jno
movsl
xchg
outsb
test
hlt
sub
sarb
xor
push
or
and
aad
xchg
cmp
pop
jno
sbb
pop
orl
orl
stos
les
call
push
dec
pop
sub
sbb
sbb
pop
cmp
into
in
xor
mov
adc
sbb
and
adc
pop
das
xchg
adc
inc
ret
sbb
es
mov
mov
push
mov
inc
push
fdiv
nop
sbb
dec
loope
and
xor
pop
sub
mov
and
dec
es
pop
push
mov
mov
or
inc
loopne
sub
mov
test
add
andb
and
clc
dec
fwait
and
add
movsb
cmp
jns
mov
popf
mov
lock
adc
mov
orb
or
rcr
lds
out
daa
js
or
jns
sub
push
inc
mov
pusha
add
cmpsb
xchg
in
adc
test
pop
repnz
fcmovb
lds
adc
rolb
addr16
mov
inc
mov
inc
je
mov
js
in
add
movzwl
mov
addb
jl
adc
mov
mov
cmp
scas
inc
in
xor
clc
inc
adc
loop
orb
cmp
das
pop
test
sbb
jl
adc
pop
cs
cmpsl
jns
xorb
lea
sub
add
sub
imull
insb
xlat
adc
lret
outsl
out
cld
add
mov
daa
cmp
mov
mov
push
or
and
loop
dec
leave
xlat
mov
cmp
and
scas
pop
inc
subb
jb
dec
lret
or
jo
mov
adc
cmp
pop
cli
mov
xchg
shll
push
adc
mov
ss
sti
cmp
stc
inc
mov
mov
mov
inc
mov
je
and
mov
pop
les
insl
loop
sbb
addb
inc
loopne
inc
scas
out
jne
cmp
cltd
mov
jle
lock
rolb
jo
inc
and
push
push
daa
mov
mov
dec
jns
xchg
sbb
imul
jns
iret
add
push
adc
jbe
jmp
mov
es
pusha
lea
test
add
and
xchg
hlt
lds
xchg
inc
add
scas
pop
add
rolb
xor
xchg
pusha
push
xlat
imul
fstl
cmp
and
sub
ja
xchg
push
mov
cmc
or
dec
int
ss
fmuls
add
sub
pop
push
push
rclb
test
xchg
repnz
jns
cmpsb
add
jno
addr16
cltd
cmp
outsb
dec
xor
mov
movsl
sbb
jle
aaa
sbb
sub
testb
xchg
adc
pop
cwtl
jo
hlt
jbe
mov
jb
inc
or
out
movb
add
and
xor
jno
pop
outsb
lds
shrb
shll
pop
push
xor
add
flds
pop
sub
pop
and
into
xor
rclb
pcmpeqb
sub
xchg
mov
pushf
sbb
or
je
pop
xor
pop
ror
or
test
adc
mov
and
add
ja
pop
in
or
stc
int3
rorb
sub
lret
xchg
mov
imul
push
es
rclb
jno
jg
cwtl
lods
push
nop
pop
dec
xlat
xlat
dec
add
pusha
lahf
xchg
inc
pop
push
sbb
xor
xlat
add
cmc
inc
sub
jge
test
iret
xor
andl
aad
stc
xchg
pop
inc
loopne
and
pusha
lock
rclb
sub
mov
addr16
inc
dec
lea
subb
mov
shufps
ja
push
loope
pop
cmc
mov
aam
pop
mov
pop
or
mov
xor
outsb
mov
push
jno
lds
inc
cmp
sub
sub
jmp
push
js
xor
lods
and
push
dec
add
xchg
cmp
inc
loopne
mov
inc
inc
mov
popa
mov
fdivrl
mov
push
xchg
mov
jle
test
sbb
cmpsb
popa
dec
rorb
pop
loope
bound
sbb
add
push
out
sub
sbb
jle
push
pop
xor
mov
call
stos
and
repnz
xor
sahf
sarb
dec
lea
adc
inc
add
jle
adc
scas
jg
cld
jle
sub
jl
pop
cld
jnp
cwtl
jge
sub
sub
dec
mov
adc
pushf
aas
inc
mov
movsl
mov
nop
pop
or
inc
out
mov
inc
test
pop
inc
sbb
lds
dec
ret
dec
sub
dec
es
das
sbb
loop
cmp
cmp
dec
jno
arpl
icebp
and
xor
mov
xchg
stos
clc
pop
mov
test
pop
pop
pop
hlt
inc
or
imul
into
in
iret
jne
ljmp
cmpsl
xor
and
push
adc
test
add
adc
sub
and
das
mov
add
loopne
lret
nop
sub
adc
jle
in
insl
dec
and
mov
or
lods
in
adc
fldl
inc
fcomp
and
push
sarb
mov
mov
cld
ror
or
sbb
xor
inc
push
cmc
outsb
or
jecxz
aas
mov
test
add
scas
jl
fnstcw
test
cmp
ss
jge
cmp
add
stos
test
pop
int3
imul
add
push
dec
decl
push
jno
aam
push
add
aad
mov
fsts
ficoml
inc
add
jle
insl
adcb
lret
movsb
jecxz
insb
fsubl
jg
push
xor
repz
loop
lods
popa
or
popa
in
add
out
adcb
add
or
fnstenv
push
and
jecxz
add
xchg
jae
mov
je
dec
loope
aam
jle
adc
or
cmp
enter
sbb
das
pop
adc
cmp
adc
add
jbe
test
fsubrl
inc
clc
xchg
xchg
mov
mov
shr
mov
fs
ret
pop
sahf
jo
jne
xor
in
mov
add
js
ret
daa
push
icebp
cli
sub
test
push
jp
xor
js
push
ljmp
xor
popa
inc
daa
cs
pop
jns
pop
mov
lea
mov
outsl
imul
test
sub
jp
jbe
cmp
in
mov
add
add
mov
xchg
fwait
shlb
imul
popf
cmp
fdivs
xorb
pop
insl
sbb
shrb
push
cltd
dec
mov
xorb
adc
sbb
leave
stc
jo
mull
pop
ljmp
pop
mov
push
loopne
iretw
insb
adc
addl
pop
mov
and
push
mov
pop
dec
push
iret
nop
scas
mov
aaa
int3
sub
add
mov
fcoms
dec
sbb
jle
out
xchg
and
daa
inc
cmp
cltd
mov
jb
cli
xor
pop
mov
dec
jb
inc
mov
inc
insb
sarb
lods
adc
adcb
mov
and
cmpsl
or
rdtsc
idiv
and
fs
outsl
xchg
or
sub
or
dec
jnp
cmp
fcoms
arpl
loop
imul
call
add
push
stos
xorb
loope
sbb
and
xchg
outsb
scas
imul
add
adc
mov
orb
inc
mov
xchg
in
int
lods
out
inc
mov
orl
xchg
daa
xor
inc
dec
insb
rcl
sahf
int
mov
jp
add
mov
shlb
nop
sbb
into
push
push
pushf
sarl
sbb
shlb
sbb
sbb
in
xor
stc
dec
add
lcall
rorb
cmc
aaa
or
xor
xor
and
in
jae
cmp
mov
shll
addb
cmp
jge
xchg
test
add
movsb
sbb
stos
mov
cwtl
sahf
ss
cltd
shll
insb
push
shrb
pop
xor
dec
pop
dec
cpuid
pop
push
add
push
cli
fldt
ret
add
push
mov
jae
rclb
adc
ss
lods
xor
pop
iret
xorl
mov
xchg
loopne
jno
sub
fs
ret
in
ja
stos
push
fiaddl
fs
or
or
or
fidivl
sarb
out
push
sub
ja
inc
mov
cmp
cwtl
aas
add
cld
adcb
or
icebp
adc
xchg
push
jge
setns
pusha
mov
pusha
add
out
lahf
xor
xor
out
adcb
jne
cmp
inc
mov
mov
and
rclb
push
pop
lods
xlat
xor
dec
ljmp
fsubl
cmpsb
lret
mov
rclb
imul
cmp
loope
lret
iret
xchg
pop
cltd
xchg
xchg
inc
mov
cld
sub
test
aas
fucomip
icebp
mov
out
jbe
cmp
sbb
cmp
divb
adcb
cltd
xor
iret
push
jecxz
movsl
lret
add
rcr
ja
pop
iret
inc
jne
test
xlat
adc
or
out
inc
aam
jno
aaa
pop
pusha
sbb
push
nop
pop
out
loopne
xchg
mov
xor
mov
adc
and
out
hlt
rcrb
out
mov
test
out
lods
mov
inc
dec
xchg
inc
loopne
addr16
fcompl
cli
mov
dec
jle
lcall
sub
sarb
lds
push
xchg
adc
mov
sti
inc
mov
xchg
sbb
stos
andl
push
aam
inc
mov
loope
add
mov
aaa
mov
pop
es
cmp
fld
and
pop
jl
roll
mov
insl
xchg
mov
ret
fiaddl
sti
aaa
repz
cmpsl
hlt
nop
punpckldq
mov
pop
clc
jge
adc
mov
into
adc
mov
cmp
mov
add
out
add
lds
adc
test
mov
movaps
push
jne
xor
mov
fisttpll
mov
cmp
aaa
mov
cs
jle
stos
stos
push
xor
add
and
sbb
jo
out
adc
add
push
push
cltd
xchg
push
jmp
add
scas
push
movl
jle
rolb
and
das
sub
sub
mov
test
push
rcr
push
jne
jbe
roll
mov
sbb
pop
xlat
je
jge
andl
lods
shlb
fwait
loop
bound
les
cmc
pop
addl
iret
mov
cltd
push
jge
shll
xor
sbb
and
lahf
es
sbbl
enter
cltd
mov
addr16
sub
and
push
jae
andl
mov
jo
sahf
push
mov
push
pop
inc
daa
add
xlat
mov
adcb
ss
cld
imul
push
iret
jmp
xor
rcrb
dec
cli
xor
stc
cmp
inc
sub
dec
xchg
adc
xchg
lock
pop
and
ss
loopne,pn
inc
xor
add
sub
lgdtl
dec
cli
fucomp
cmp
sbb
jbe
cwtl
jno
pop
sbb
cmpsb
mov
fistpl
scas
and
cmp
sarb
sub
xchg
mov
add
mov
jbe
popa
das
xorb
loop
or
sub
stos
and
push
push
movsb
ds
or
daa
xor
mov
xchg
mov
push
add
std
lock
xchg
and
daa
das
mov
mov
lea
mov
dec
popl
adcb
fs
add
aaa
mov
loope
sub
and
fs
aas
loope
fidivl
jbe
inc
cmpsb
sub
pop
jle
test
iret
pop
xchg
push
xorl
xchg
add
xchg
mov
cs
push
test
push
xor
into
push
and
jl
rorb
cmp
xlat
rcl
jmp
fistl
xor
lret
mov
cmp
or
dec
rclb
inc
outsl
or
mov
mov
roll
addr16
movsl
daa
jmp
push
mov
push
dec
out
add
js
xor
mov
addl
sti
and
movsl
pop
out
cmpsl
pop
adc
mov
and
sub
les
and
dec
shrl
arpl
outsl
lods
xchg
cs
int
mov
add
sub
xchg
enter
and
dec
mov
inc
pop
jmp
mov
pop
scas
mov
das
cmp
shrb
add
push
or
push
sbb
adc
xchg
arpl
add
dec
jecxz
xor
and
repz
jge
jl
pop
push
out
and
loop
lock
fadd
or
push
scas
iret
inc
sub
xchg
and
push
fdiv
jmp
stos
addr16
shlb
cmp
xor
lock
daa
inc
and
fs
pop
das
rcrl
jecxz
xchg
xchg
adc
ja
lret
iret
xchg
mov
out
mov
or
cmp
and
sbb
mov
pusha
xchg
mov
push
mov
test
addr16
aam
push
push
popa
dec
xchg
sbb
test
aaa
jo
pop
jle
ja
subb
add
fwait
sub
hlt
je
addl
imul
je
mov
sbb
ljmp
sbb
inc
das
mov
and
lea
iret
sbb
pop
nop
inc
add
and
push
pop
adc
lods
movsb
jne
sarl
and
add
push
leave
or
pop
sub
push
dec
iret
pusha
pop
mov
cmc
mov
mov
xlat
loop
push
inc
xor
lea
lods
xchg
fcomps
inc
push
fdivrs
jmp
inc
imull
imul
int3
push
or
push
sbbl
jo
or
xchg
xchg
insb
cs
lea
loopne
fmuls
loopne
inc
add
cmpb
int3
lods
add
imul
jecxz
iret
mov
inc
cmpl
inc
js
mov
lcall
test
repz
or
jle
inc
scas
and
add
pushf
dec
add
and
out
jmp
and
mov
sub
das
into
out
or
or
cmc
xchg
pop
jo
test
lods
fcomip
sub
pop
push
cs
add
xor
sub
iret
dec
das
jno
mov
pop
iret
das
pop
adc
pop
das
and
sbb
pop
andl
rorb
std
adc
sub
sub
mov
fidivs
mov
lods
out
lahf
inc
sub
aam
scas
test
dec
mov
lea
dec
fcomps
or
mov
mov
sbb
stos
push
xchg
mov
xchg
cmp
push
jle
rol
into
enter
sub
xchg
and
mov
test
cltd
fstps
jp
out
cwtl
ds
push
pop
or
mov
add
movsb
faddl
call
push
aas
xor
aaa
sub
xchg
pop
sti
adc
sbb
lds
or
jno
jo
xchg
lods
outsl
dec
sbb
adc
iret
push
stc
lock
mov
jnp
cmp
xor
mov
popw
jmp
fld
ret
pop
pushf
pusha
add
lds
sbb
inc
and
addl
adc
or
jno
outsl
mov
dec
rolb
sbb
or
jmp
add
and
jge
stos
inc
cmp
stos
bound
add
sub
xchg
or
loopne
jmp
or
insb
jl
mov
inc
pop
inc
dec
arpl
add
xorb
push
aaa
sub
imul
hlt
sub
sub
add
sub
out
dec
vmovdqu
push
sub
test
mov
stc
and
arpl
or
imul
out
add
sub
out
mov
and
mov
cmp
xchg
lret
repz
and
push
xor
mov
stos
xchg
jge
dec
test
insl
cmp
push
lret
in
dec
push
mov
rdpmc
mov
test
sarb
js
sbb
push
add
mov
daa
leave
aam
adc
addb
jecxz
lock
test
push
iret
sti
lret
add
cwtl
lret
sbb
inc
or
push
sbb
push
sti
rol
xchg
add
lds
lods
sbb
iret
or
jnp
jge
dec
pusha
test
add
adc
inc
adc
pusha
cmc
add
mov
daa
mov
xor
lret
ljmp
and
test
cmp
lods
jle
pop
cmpsl
sub
in
popa
in
stos
add
movsb
and
into
jmp
test
fbld
addl
mov
adc
test
jl
sub
lret
cmp
repnz
mov
dec
cmp
shlb
sbb
jno
add
cmpsl
loopne
pop
shrb
ret
adc
and
mov
push
jo
cs
inc
addr16
and
cmp
mov
fs
adc
inc
jl
lahf
sub
arpl
add
jecxz
dec
pop
inc
ja
pop
ss
loopne
add
pop
sar
inc
mov
imul
into
jge
sub
sbb
xchg
cmp
inc
inc
scas
adc
sub
insl
test
mov
ret
mov
push
pop
pop
lock
je
xlat
mov
add
jo
xlat
jne
loope
mov
outsb
lcall
int3
or
or
and
hlt
push
and
int
hlt
adc
xor
push
jecxz
push
repnz
xchg
data16
test
rolb
and
jo
inc
push
icebp
adc
cmc
call
aam
mov
popa
sbb
lock
cld
ret
and
aas
lahf
and
sub
cltd
lods
sbb
push
clc
inc
adc
rorb
fwait
add
inc
xor
sbb
jne
pop
pop
xor
xor
xchg
mov
mulb
or
ja
sub
movsb
addb
adc
pop
xorb
or
enter
pop
loop
pop
add
push
leave
jg
rclb
dec
loopne
negb
push
sbb
in
xor
push
dec
mov
fs
jge
add
or
lcall
pop
push
xchg
inc
sarl
hlt
cmpsl
sub
pop
add
xchg
xchg
and
sub
fimull
adc
push
dec
dec
stc
cmp
imul
scas
xchg
out
add
or
push
pop
outsb
dec
jecxz
fisubs
xchg
mov
lds
mov
dec
mov
dec
push
xlat
ror
test
cmpsl
and
rolb
aad
scas
cltd
xor
stos
mov
xor
sbb
andb
scas
movsl
adc
adc
subl
add
jl
jmp
push
jno
jb
cmp
bound
cmp
push
mov
les
add
insl
cmp
jmp
test
bound
jge
scas
int3
lahf
add
pop
repnz
pop
mov
mov
sub
jp
mov
cmpsl
inc
pop
xor
addr16
or
jnp
jb
mov
xchg
pop
stos
call
enter
sub
jp
icebp
lea
es
stc
sbb
mov
push
sub
adc
scas
or
cmp
or
mov
inc
sub
test
push
mov
lahf
jno
pop
filds
test
fistps
lods
or
jecxz
mov
rcpps
lret
mov
adcb
inc
or
fsubr
cwtl
adc
and
push
insb
cmp
inc
jno
jl
sub
clc
imul
adc
les
cmp
push
add
and
sbb
loop
or
xor
shll
stos
mov
xlat
mov
xchg
jo
sbb
andb
or
xor
jno
sbb
iret
insl
cld
xchg
sub
adc
sahf
ss
add
cmp
xchg
sbb
testb
lea
inc
push
fs
push
cmpsb
sbb
adc
and
cmpsl
add
jp
mov
mov
mov
inc
pusha
movl
push
mov
addl
sbb
dec
and
roll
daa
pushf
ret
mov
in
fwait
mov
adc
into
or
imul
add
stc
mov
jmp
scas
pop
je
push
or
fnstsw
push
mov
jno
fisubs
jno
mov
popaw
mov
popa
add
orl
stos
mov
out
es
lret
xchg
test
arpl
cmp
and
and
je
rcl
outsb
sbb
cmpsl
inc
sbb
jno
sahf
ret
test
or
out
flds
mov
daa
popf
fwait
cld
mov
scas
and
shl
lea
adcl
mov
jno
adc
jne
shlb
xchg
mov
sbb
or
mov
js
push
sub
jl
and
sbb
sbb
and
add
add
loopne
mov
mov
daa
mov
mov
out
lods
pop
js
andl
adc
andb
inc
outsl
sahf
js
inc
jp
sbb
push
pop
pop
xor
or
and
add
mov
jo
inc
add
popa
mov
lahf
or
sbb
mov
jae
mov
mov
lcall
add
add
test
push
syscall
dec
loopne
mov
mov
sbb
imul
inc
iret
scas
pusha
dec
mov
mov
xor
push
adc
cmp
or
jnp
movsl
sub
xchg
imul
mov
sub
repnz
add
lods
cs
sub
add
fs
push
cs
mov
and
mov
popa
orl
and
mov
xor
cmpsl
in
pop
cmp
je
xchg
sub
sub
push
adc
jb
cmp
push
mov
push
push
scas
pusha
loope
inc
fisttpll
cmpsl
lret
add
push
iret
pop
fcom
dec
sbbb
pop
mov
fidivl
mov
adc
sarl
and
icebp
push
movsb
push
icebp
inc
fcmovnu
psubw
stos
xlat
adc
in
in
sbb
mov
repnz
push
sub
dec
daa
pusha
xor
sub
bound
add
sbb
cmp
pusha
push
sarb
nop
or
sbb
xor
cmp
add
push
sbb
jb
or
add
popf
pushf
hlt
add
or
inc
sub
aam
dec
mov
rcrb
test
je
mov
test
imul
dec
test
push
inc
gs
jnp
dec
popf
xorb
jbe
pop
xchg
xchg
fwait
push
mov
sub
jbe
pop
pop
test
pop
lcall
dec
sub
and
mov
cmpsl
and
lock
push
pop
sbb
mov
or
insl
fsubrl
out
aad
adc
lret
iret
int3
fisttpll
or
pop
das
rolb
mov
je
mov
popa
out
xor
push
mov
xadd
pop
add
and
add
inc
cmp
shrb
xor
outsl
add
xor
dec
sbb
mov
fwait
adc
inc
push
gs
ret
lea
mov
or
adc
out
or
or
lods
test
pop
jo
pop
fwait
or
pop
fstpt
sbb
fisubrl
ror
xchg
out
and
push
push
and
sbb
prefetch
or
pop
fisttpll
ja
xorb
xor
xor
pop
insb
push
pusha
sub
loop
add
stos
push
lret
push
xchg
addr16
bound
insb
lea
das
sub
scas
dec
sti
or
xchg
jle
dec
iret
cmc
fstp
jno
push
iret
sti
sbb
xor
and
imul
pop
dec
sbb
sub
ret
ret
mov
gs
add
or
stc
aam
aad
rcrl
scas
lret
test
mov
mov
mov
inc
mov
push
dec
stos
pop
add
sbb
ja
lcall
push
jns
jbe
call
call
lds
sbb
mov
in
xchg
out
jno
cltd
push
jge
mov
imul
adc
negb
inc
add
sub
jno
dec
dec
cmp
popl
jmp
rcll
call
into
and
das
jne
cmp
pop
mov
jno
fsubl
fidivs
cmp
cmp
adc
push
pop
repnz
and
add
add
mov
sar
and
pop
jo
mov
cmp
dec
push
lods
inc
cmp
les
push
xor
xor
xchg
or
mov
jmp
sbb
adc
xchg
mov
inc
aaa
jb
cmp
rcl
jo
ret
push
and
sbb
popf
es
loopne
cmp
rolb
lods
popa
cmp
icebp
aas
cmp
or
mov
sub
pop
frstor
jo
cmp
ljmp
loope
mov
fs
sub
ret
and
cmp
lret
repnz
xchg
rolb
pushf
rcrb
jnp
orl
call
or
in
push
in
fstpt
or
cmp
and
push
pop
add
sub
pmuludq
sub
incl
out
or
xchg
adc
lret
cli
add
add
push
in
xchg
pusha
nop
adc
pop
xor
nop
or
xor
loopne
jp
and
mov
mov
push
jl
or
add
mov
and
sub
shll
sbb
pop
push
jb
cmpsl
pop
pop
push
pop
add
add
and
pop
loope
dec
inc
mov
loopne
xchg
sub
leave
inc
adc
mov
lods
sbb
jae
add
dec
inc
lea
inc
jmp
roll
adc
push
sub
lsl
loopne
js
jno
popa
add
jg
lahf
movsl
enter
or
andb
dec
insb
and
jo
es
lods
push
adc
repz
and
mov
fisubrl
inc
jo
or
inc
dec
sub
mov
lahf
dec
cmc
sbb
ja
add
pop
popa
push
and
mov
inc
jmp
mov
mov
inc
jnp
lahf
sbb
push
jge
iret
sub
sbb
push
xor
addr16
push
clc
adc
adc
mov
add
rorl
cmp
stc
or
jge
dec
xchg
adcl
add
daa
mov
into
add
int
dec
sbb
add
adcb
daa
adc
add
fcoms
dec
ljmp
adc
inc
cmp
mov
mov
in
fwait
mov
sub
ss
xchg
add
xorb
enter
inc
shlb
dec
mov
push
fwait
jle
add
pop
divps
push
jo
rclb
jecxz
cs
sahf
movsl
pop
leave
mov
imul
add
daa
mov
xchg
test
insl
dec
jecxz
adc
dec
je
out
sbb
gs
cmpsl
inc
sub
sbb
xor
ds
xchg
pop
popa
mov
adc
or
push
xor
in
pop
sbb
mov
daa
aas
pop
rolb
push
and
push
sbb
dec
sbb
lea
pushf
xor
jmp
in
shrl
call
mov
xlat
in
inc
and
jo
sub
pop
iret
or
scas
daa
inc
dec
pop
movsl
xor
and
inc
xchg
add
mov
sub
and
push
mov
or
sbb
inc
js
fcomps
xor
fcoms
mov
std
dec
ret
sub
vmovntpd
xchg
aad
das
or
jle
mov
outsl
lds
movsl
or
iret
add
push
pop
mov
cmpsb
add
rcll
jb
mov
dec
push
inc
mov
mov
sub
rorb
pop
sbb
iret
jae
add
push
jns
sbb
jp
fwait
addr16
lret
mov
sub
fistl
test
jg
add
shrl
ja
dec
dec
pop
and
add
inc
jbe
xlat
aaa
pop
lods
or
lds
add
mov
lret
sub
imul
test
mov
mov
bound
je
pusha
addl
sbb
xchg
mov
mov
xchg
xchg
push
call
or
fs
nop
or
add
mov
ljmp
or
mov
jb
adc
mov
push
xor
mov
mov
clc
stos
sbb
push
shll
clc
lock
es
popl
dec
inc
xchg
add
insb
inc
sub
fidivl
push
or
popa
sbb
jbe
in
xchg
sbb
or
test
ljmp
xchg
loopne
sbb
or
push
mov
cwtl
fmul
jns
imul
test
dec
shlb
sub
add
pusha
mov
insl
iret
and
xchg
add
addr16
imulb
mov
jp
nop
xor
stos
es
mov
repz
jecxz
adcb
aad
sbb
into
pop
push
hlt
mull
sbb
and
or
mov
pop
mov
add
mov
adc
sbb
inc
sar
push
or
test
mov
arpl
push
dec
jp
data16
and
loope
mov
testb
sub
inc
mov
pop
outsl
je
out
pop
mov
ret
fs
xchg
sub
push
test
dec
cmp
cwtl
sbb
xor
cli
jb
fdivrs
pop
and
mov
scas
pop
mov
pop
dec
push
sahf
inc
test
mov
lret
adc
adc
add
xor
xor
stos
pop
push
xor
pusha
aaa
xor
jp
mov
xchg
iret
cmp
xlat
and
xlat
pusha
jg
inc
bound
jle
add
xchg
mov
sbbb
addb
and
in
and
or
jmp
jmp
idivl
inc
in
shll
push
push
and
and
rorl
lea
jmp
cmp
mov
fisttps
imul
stc
arpl
push
push
test
mov
mov
cmp
jae
pop
push
sbb
add
inc
lods
add
mov
das
adc
ret
test
jmp
gs
and
sbb
or
xchg
xchg
lcall
add
mov
and
shll
inc
filds
mov
ret
add
and
xchg
pushf
fcomi
cmpsl
pop
add
dec
mov
mov
fcmovb
scas
aas
inc
lret
or
and
jp
cmp
and
imul
and
ret
sub
lods
sub
pushf
sti
test
adc
pop
sub
xor
push
daa
inc
mov
push
and
jp
insl
lea
pop
add
sbb
pop
or
add
xchg
jmp
loope
pop
or
mov
cmp
or
pusha
xchg
jmp
mov
lods
adc
cvtdq2ps
push
leave
aas
lods
mov
and
mov
andl
and
mov
lret
xchg
dec
sub
xor
inc
lock
aas
and
or
lret
addr16
mov
dec
fldcw
xor
rcrb
mov
dec
cmp
sub
cmp
pop
ret
arpl
or
lret
in
mov
xchg
mov
xchg
jmp
rorl
cmp
add
in
lds
popf
push
pop
adc
lods
inc
ror
imul
adc
iret
pop
aam
cld
sbb
das
mov
sub
cld
pop
pushf
mov
iret
cmp
pop
or
lahf
jo
loope
lret
add
sbb
sbb
repz
adc
mov
lods
push
push
push
inc
cmp
pop
es
incl
xchg
lcall
sub
shll
pop
pop
lea
and
adc
es
andb
jp
adc
push
outsl
gs
sbb
nop
roll
jge
mov
aad
cmp
js
lods
push
add
insl
xchg
push
inc
iret
jg
jo
sbb
inc
je
adc
jno
std
bound
push
cmp
lea
cmp
mov
jge
lods
cmp
addb
or
clc
dec
insb
stc
popf
mov
movsb
fmull
mov
or
push
test
and
push
dec
add
arpl
sbb
xchg
nop
push
mov
lret
stos
ret
inc
inc
inc
cmp
fstl
in
add
pop
rolb
pusha
jne
cmp
imul
popa
mov
xor
popf
popf
jne
cs
mov
push
aad
shl
mull
and
mov
addr16
call
fmul
adc
mov
mov
adc
addr16
xchg
out
lahf
movb
imul
ret
xchg
and
iret
add
push
scas
cmpsb
lcall
pop
jno
jle
dec
pop
fmul
pop
mov
sbb
mov
aaa
lret
das
add
add
sbb
add
inc
in
xor
imul
outsl
stos
cmp
adc
sub
dec
sub
xchg
test
cmp
test
mov
idivb
scas
and
xchg
adc
xchg
or
adc
inc
sub
loopne
sbb
lahf
jecxz
incb
pop
mov
push
xchg
fistpl
test
add
movsb
aas
inc
add
call
or
mov
nop
inc
insb
cmp
push
lods
pop
cmp
push
push
inc
sub
jmp
xchg
adc
mov
mov
or
sbb
adc
test
hlt
sub
pop
test
rcrl
mov
popf
and
fnsave
lods
mov
inc
add
inc
nop
sub
stos
and
sub
xor
into
andl
xchg
pushf
lods
ds
cmp
adc
sub
pop
cmp
or
call
in
dec
add
xor
es
sub
lods
and
lahf
cmp
das
cmpsb
add
adc
or
adc
lret
pop
fs
or
cmp
into
mov
dec
mov
icebp
mov
add
mov
fmul
ss
stos
add
lea
inc
push
xor
inc
mov
orb
nop
stos
cmpsb
leave
and
outsl
ret
sbb
jbe
aam
dec
add
adc
pop
bound
cmc
hlt
mov
in
mov
movsb
pusha
and
jmp
mov
lods
mull
sub
sarl
in
push
das
sbb
cli
and
jp
sbb
into
sbb
fisubs
inc
or
cmpsl
ss
pop
dec
cmp
xchg
pop
mov
shlb
cmp
cmp
sbb
and
sahf
mov
ret
xchg
pop
test
jle
fiaddl
sbb
lret
jle
mov
imul
cltd
dec
sub
mov
and
cli
cmpl
sbb
mov
inc
adc
fimull
inc
and
mov
and
adc
test
in
cmp
dec
lock
aaa
sub
adc
or
in
dec
fadd
ret
inc
jo
sbb
sub
jmp
mov
pop
jmp
insl
push
jecxz
sub
mov
or
enter
cmpsl
sbb
and
nop
jp
xor
imul
sbb
xchg
pop
pop
xor
xlat
xor
inc
xchg
push
mov
cltd
jge
xchg
shll
nop
scas
add
fildl
push
mov
inc
cmp
or
adc
xchg
fcmovbe
sbb
and
aaa
pop
aaa
fs
mov
iret
xor
pop
pop
inc
xor
inc
mov
testb
shlb
cmp
inc
sbb
out
adc
cmpb
loopne
lret
sub
lods
aas
lahf
dec
pop
imul
bound
cmpsl
or
pop
testl
xor
mov
jne
dec
push
shll
loopne
xor
es
ljmp
fwait
pop
sbb
dec
pop
popa
loopne
lock
mov
pop
packssdw
push
js
add
mov
lods
xchg
adc
mov
iret
and
add
sub
scas
pop
fsts
mov
jecxz
loope
lret
add
in
sub
popa
pop
rcll
push
mov
int3
adc
sti
and
and
in
jne
fbstp
call
popf
jbe
ret
dec
pop
cmp
add
adc
popf
or
mov
mov
xorl
fnsave
push
call
sub
and
leave
push
test
fidivs
clc
mov
bound
mov
lret
and
pop
adc
jo
shll
mov
jae
inc
iret
popf
pop
and
mov
les
nop
pop
or
inc
add
outsb
frstor
scas
push
push
nop
popa
pop
pop
inc
arpl
dec
sbb
adcb
sbb
add
jmp
xor
ret
or
jnp
mov
bound
mov
inc
subl
cwtl
outsl
add
cltd
lock
xchg
iret
push
add
test
push
inc
test
sbb
sub
movsb
sub
fwait
xor
cli
add
aas
and
cmp
or
or
ss
pop
and
push
lret
ds
ret
sbb
lods
add
sbb
sbb
gs
bound
sbb
out
or
jbe
mov
push
aas
push
sub
adc
and
inc
sub
mov
push
and
negl
mov
cmp
data16
inc
sbb
daa
mov
xor
push
and
inc
movsl
fsubp
insb
loope
lock
and
mov
or
adc
mov
sbb
inc
nop
ja
in
int
sbb
clc
cmp
jb
pop
inc
ja
mov
les
aad
dec
les
mov
push
fs
inc
or
xorb
add
push
sarl
sbb
pop
cmc
cmp
ja
lods
and
test
add
sbb
mov
repz
outsl
cmp
push
sub
mov
sbb
inc
aas
or
cli
add
mov
cmpsl
mov
push
test
xchg
push
fstpt
pop
in
push
ss
xor
or
aaa
pop
aad
jl
js
adc
gs
orb
ret
js
xor
xor
jnp
or
jecxz
icebp
push
jge
adc
jnp
sub
mov
fbstp
inc
inc
aaa
arpl
pop
test
and
insb
or
rcrb
repz
adc
movb
pop
dec
nop
loope
pop
leave
push
dec
sbb
jno
dec
ret
cwtl
mov
bound
add
mov
leave
jecxz
lods
add
adc
cmp
pop
pusha
ds
xchg
jb
imul
mov
sub
mov
pop
add
add
pop
pusha
mov
cmp
inc
mov
dec
lods
sbb
ja
sub
pop
imul
adc
pop
test
and
out
mov
shll
push
popa
cmp
jae
add
add
or
mov
or
jae
jmp
adc
lods
cmp
xchg
and
dec
ret
stos
pop
lret
mov
pop
cmpsl
nop
icebp
xor
out
sub
push
fnsave
inc
nop
dec
ret
movb
enter
xor
adc
dec
xchg
mov
std
outsl
rcrl
dec
xor
test
mov
aas
ret
bound
rorl
arpl
and
pop
pop
daa
adc
ds
xchg
inc
mov
cmp
inc
push
or
or
xchg
cwtl
or
jno
or
js
mov
in
stc
or
xor
movsl
or
mov
or
pusha
jl
jne
imul
or
xor
clc
adc
ret
movsl
mov
into
filds
daa
or
stos
shlb
sbb
push
test
fsubs
and
ficoms
fadds
cmpsl
dec
shrl
ret
sbb
push
xor
sbb
nop
dec
mov
xchg
adc
lcall
bound
sarl
pusha
and
popa
cmp
inc
leave
cmc
adc
pop
adc
add
faddl
add
jbe
mov
or
or
jbe
scas
and
xchg
clc
addr16
push
push
mov
inc
xchg
lods
mov
cli
test
cmpsl
pusha
add
xchg
dec
adc
xchg
mov
repz
aaa
add
das
jno
and
jg
adc
test
ss
movntps
or
lods
mov
movsl
stos
sub
aad
out
xchg
inc
faddl
sub
push
cmp
sub
fiadds
dec
inc
addl
mov
aad
mov
test
loopne
jbe
and
inc
or
imul
push
outsl
adcb
lods
add
mov
sbb
xchg
xchg
and
cmc
arpl
les
adc
add
ret
lahf
jne
addr16
lods
ss
test
xchg
xchg
cmp
dec
inc
outsl
sbb
mov
jns
ret
sbb
add
push
or
ret
mov
dec
and
or
mov
and
mov
bound
mov
mov
adc
pop
repnz
add
add
iret
and
add
lcall
xchg
cmc
test
xor
ret
and
sub
mov
add
pop
xor
or
cmpsb
inc
push
mov
jge
cmp
sbb
imul
pop
pushf
inc
subl
cwtl
inc
xchg
sub
mov
pop
add
push
mov
and
jecxz
mov
add
icebp
sbb
popa
pop
or
cmp
sbbl
iret
mov
imul
adc
bound
add
lea
es
hlt
and
jns
sub
pop
inc
pop
inc
add
add
adc
fldenv
mov
nop
inc
shrb
das
pop
loop
xor
loopne
dec
xchg
dec
inc
mov
repnz
stos
add
jne
xor
in
xchg
cltd
insl
mov
xorl
cmp
stos
call
mov
pop
ffreep
inc
popa
dec
xor
pusha
add
pop
lret
rolb
and
nop
int
cli
pop
sub
sbb
icebp
push
jae
add
pop
test
and
adc
sti
push
pop
push
imul
jge
int3
dec
int3
mov
mov
iret
adc
stos
pushf
add
jl
out
cmpsb
xchg
adc
out
or
imul
xchg
dec
sahf
fistps
push
imul
xor
jl
popa
cmp
inc
cltd
adc
out
in
and
rcrl
fxch
push
or
lds
add
iret
call
sbb
sub
lcall
xlat
andl
xor
add
fadds
sub
out
ds
jne
push
and
xor
mov
and
pop
sbb
adc
popa
cs
dec
xor
pop
push
clc
inc
and
loope
add
rcrb
dec
dec
dec
movsl
test
pop
leave
fsubrs
pop
push
sbb
cmc
sub
cmp
test
cmp
lock
fstpl
inc
adc
inc
insl
hlt
jb
pop
cmp
inc
mov
fwait
cltd
fcmove
add
icebp
push
jb
or
gs
in
xor
adc
mov
jecxz
add
mov
sarl
or
and
mov
sbb
push
sahf
shlb
movsb
addb
shlb
dec
stos
inc
leave
inc
push
dec
in
shlb
in
cltd
adc
in
fs
and
scas
jle
xlat
sub
ret
or
std
cwtl
mov
sbb
aam
mov
imul
inc
pusha
pop
push
jnp
fimuls
pop
out
mov
and
push
sbb
aaa
fnstcw
dec
jo
lods
and
xor
jge
je
out
pop
fisttpl
cs
mov
pop
ret
das
inc
dec
sub
call
mov
push
xchg
std
js
adc
fldt
or
xchg
mov
sbb
cmpl
call
push
mov
inc
inc
pop
mov
cmp
push
sbb
add
outsl
sub
mov
pop
jecxz
add
or
sub
and
adc
stos
inc
jne
aas
repz
and
jo
xchg
or
xchg
imul
or
or
loope
aaa
and
mov
sahf
push
sbb
xchg
cmp
in
ficompl
add
jge
mov
jmp
in
hlt
aas
rcr
fsubrl
jo
lret
adcb
orl
cmp
and
xchg
add
pop
xchg
mov
in
mov
in
xor
gs
es
sbb
push
sub
leave
ret
jo
pop
aam
ret
call
loopne
leave
andl
sub
int3
iret
xlat
dec
daa
jo
fstps
out
jmp
sub
dec
adc
hlt
jmp
jecxz
adc
int3
loopne
ficompl
dec
and
jp
cmp
sarl
js
jl
xchg
xor
ret
jne
jno
ror
add
push
cmp
lods
push
insl
adc
or
lock
xor
bound
in
mov
add
sbb
fsub
mov
add
adcb
outsb
cwtl
xor
ja
jg
xchg
and
or
mov
cmp
mov
mov
in
dec
adc
mov
leave
into
mov
jmp
sbb
out
loope
es
xor
adc
mov
lds
inc
cs
xlat
add
sub
mov
test
dec
mov
add
and
pop
mov
sub
mov
mov
inc
and
add
adc
pusha
xchg
adc
add
xor
inc
adc
fs
imul
mov
cltd
cli
inc
pushf
xor
add
fcomp
jle
movsl
nop
and
sbb
scas
out
push
mov
dec
pop
adc
xor
orb
out
jge
jo
xchg
mov
push
ss
rcrl
mov
pop
sbb
lods
adc
sub
pop
lock
jle
rorl
out
arpl
insb
dec
sbb
cmpb
roll
and
and
movsl
movsl
and
pop
sbb
mov
adc
ss
jne
add
test
popf
fwait
call
add
xor
aam
jmp
pop
xor
inc
andb
or
lea
jecxz
pop
call
jg
xchg
xchg
out
pop
dec
sbb
dec
push
push
pop
fwait
mov
scas
icebp
lds
subl
fdivs
rcrb
cmp
jmp
cmp
push
jb
shlb
jg
movsl
frstor
add
and
mov
loope
jno
or
shl
or
xor
inc
pusha
mov
mov
dec
lahf
adc
and
shlb
cvtps2pd
cmp
ljmp
xchg
xor
cmc
test
lods
setno
jle
hlt
pop
in
cmp
lock
shlb
iret
lods
scas
cmp
int
dec
push
aam
add
mov
mov
shll
mov
cltd
jb
mov
sub
jo
rclb
imul
popl
movsl
rcll
addb
inc
mov
pop
mov
pop
lock
sub
stc
popf
inc
add
and
or
and
loop
xor
adc
outsl
fmuls
and
fdivrs
or
popf
scas
nop
xor
and
add
push
ja
test
mov
icebp
inc
std
ret
test
mov
icebp
adc
outsb
pop
jb
enter
mov
jns
das
cmpsl
mov
adc
adc
ret
mov
je
adc
xor
xchg
js
shrb
arpl
addl
jo
adc
dec
inc
dec
iret
sub
push
dec
push
repz
and
fisubl
or
add
pop
or
out
loope
in
adc
lods
cmp
inc
fwait
bound
adc
sbbl
stos
enter
mov
inc
into
jecxz
mov
cmpsl
je
pop
or
ds
push
test
xor
mov
or
fs
cmc
or
test
loopne
arpl
lods
mov
pop
or
mov
xor
xor
out
push
movsl
mov
daa
sub
nop
adc
add
cmp
add
jno
pusha
push
insl
rep
adc
or
lods
adc
and
in
sbb
insl
dec
js
mov
xor
jle
loope
or
add
push
enter
lea
and
xchg
fldt
aam
lock
ljmp
pop
data16
mov
cmp
fstpt
or
sub
pop
fdivl
xchg
mov
out
test
sahf
xchg
cld
repz
scas
adc
fcoml
loope
imul
repz
cmc
loope
mov
mov
dec
push
ret
inc
push
mov
push
jo
cmp
ja
push
dec
nop
or
add
int
mov
movl
aas
or
nop
faddl
ret
add
mov
shl
push
adc
push
sub
sbb
and
sahf
imul
mov
jmp
mov
add
scas
mov
xchg
sub
pop
lods
nop
xorb
sti
clc
rcrb
cmp
iret
mov
data16
rcr
or
push
xchg
cmpsb
mov
pushf
test
mov
or
sbb
jle
movsb
out
dec
sbb
fs
pmullw
xchg
push
dec
add
xor
stos
add
add
sbb
ljmp
lds
je
clc
and
vcvtps2pd
scas
push
mov
xlat
mov
jl
adc
push
lods
sub
rol
adc
sbb
js
mov
outsb
cmp
and
fstl
loop
or
rcr
js
sarl
jl
dec
sub
push
mov
stos
inc
xor
ret
pop
jg
jb
pop
xchg
push
scas
jmp
or
cmpsl
xor
jle
in
sbb
dec
fsubs
dec
mov
and
mov
test
orb
in
bound
xor
dec
inc
frstor
aad
jns
dec
fwait
add
xor
dec
push
dec
pop
je
xor
mov
push
mov
popa
out
addr16
add
sub
mov
cmpsb
mov
nop
enter
mov
pop
cmp
adc
jl
imul
stos
mov
stos
es
nop
push
loope
inc
cmpsl
and
jno
cmp
data16
int3
add
test
mov
dec
lock
fidivl
fstl
loope
xorb
or
add
test
test
sbb
int
mov
nop
xchg
in
push
icebp
add
push
leave
jo
inc
push
xchg
sbb
rol
add
pop
pop
cltd
ss
jmp
mov
sub
mov
sub
inc
mov
sub
inc
inc
ljmp
cmc
mov
xchg
lock
enter
inc
sbb
xchg
sbb
xor
nop
std
ljmp
fldcw
ds
daa
and
out
dec
leavew
jo
adc
testb
dec
or
xorl
popf
int
or
je
sub
push
and
adc
pop
in
mov
test
inc
arpl
es
mov
lea
cld
lea
pop
xchg
lds
fstl
and
test
imulb
inc
popa
dec
pop
or
inc
iret
push
jae
loopne
cmc
test
push
pop
mov
shl
call
cmc
js
dec
xor
rol
call
push
icebp
lcall
and
mov
push
pusha
ss
sbb
inc
or
xchg
xchg
ss
xchg
andl
push
or
imul
aas
sbb
push
jle
add
mov
lea
aam
inc
adc
mov
inc
mov
inc
movsb
adc
xlat
xchg
dec
adc
mov
sub
test
ja
fwait
add
cmp
and
inc
ljmp
mov
pop
imul
xchg
or
mov
adc
mov
add
add
mov
push
mov
sbb
inc
push
in
xchg
fistl
jp
js
js
fld
mov
xor
jmp
mov
movsl
sub
add
push
or
add
lds
sub
arpl
sbb
or
xchg
pop
out
xchg
xchg
add
lods
inc
ret
fiaddl
xor
adc
adcl
rorl
test
adc
pop
cwtl
add
sub
daa
popl
pop
cmpsl
shll
movsl
out
sub
ret
sub
iret
jne
call
sbb
cwtl
shl
arpl
mov
aas
test
out
lahf
push
xchg
clc
pusha
test
sub
push
shrl
push
lahf
xor
ret
push
lds
mov
js
leave
adc
in
dec
ror
dec
xor
or
sbb
std
adc
popa
or
idiv
das
add
inc
daa
pop
nop
pusha
test
das
fwait
and
movsb
and
or
fisubl
add
xchg
adc
test
aad
and
adc
or
roll
inc
lods
xchg
add
dec
cmp
push
xchg
mov
xchg
fdivl
es
lock
dec
dec
insb
sbb
out
ret
les
push
adc
stc
bound
mov
add
testl
adc
push
mov
lret
mov
push
xchg
bound
xchg
adc
outsl
lds
mov
inc
mov
and
mov
call
adc
hlt
fldenv
xor
xchg
test
or
cmpsb
loopne
add
in
test
mov
push
cs
xchg
ss
fnsave
inc
mov
jmp
adc
cmp
sbb
insl
fdivs
loope
xchg
adc
mov
mov
jge
in
or
in
cmp
add
xchg
mov
push
test
sub
mov
sarl
cmp
or
je
adc
inc
in
xchg
ret
push
or
sbb
jnp
sub
mov
cmp
loope
pusha
adc
arpl
sub
enter
push
add
iret
push
sub
mov
and
aas
or
cld
push
xor
bound
scas
fdivp
in
js
xor
xchg
add
decl
shlb
jmp
mov
rorl
lahf
js
clc
aam
sub
inc
pop
sub
mov
jne
mov
test
or
shlb
popa
movsl
test
sbb
ret
push
ljmp
mov
sarb
pop
hlt
xor
enter
out
push
ljmp
push
push
orl
jle
add
cmp
cmp
push
add
insb
sub
mov
inc
or
test
jnp
add
daa
mov
pop
iret
jnp
mov
xor
sub
ret
addr16
lods
or
les
or
outsl
jmp
clc
jne
aam
inc
pop
stos
cmp
inc
mov
cs
popa
adc
pop
cmp
dec
aam
aam
inc
jbe
mov
add
outsl
mov
out
lahf
cmp
or
mov
or
pusha
jmp
add
push
pop
inc
rcll
and
sub
push
pop
sahf
ja
insb
inc
pop
jg
ss
xor
inc
xor
mov
sbb
mov
cmp
in
push
scas
nop
les
ret
xchg
add
test
movsl
dec
add
xchg
sahf
test
movl
popf
mov
shlb
xchg
xor
dec
sbb
sbb
lret
aaa
test
mov
xchg
add
cltd
mov
xor
dec
xchg
fwait
out
iret
xchg
js
dec
dec
or
mov
and
add
out
jo
push
rcrb
sub
int3
push
inc
dec
cmp
cli
add
cld
iret
rcl
imul
out
sub
add
shll
xor
adc
sub
mov
loope
xchg
mov
xchg
addl
popa
ret
xor
dec
sbb
mov
mov
or
push
aas
xchg
cli
mov
jae
orl
out
inc
js
mov
or
mov
xchg
pop
or
insl
push
adc
xor
cmpb
in
sub
add
xchg
mov
push
or
cld
add
ljmp
xchg
outsb
fstpl
aam
cmp
jae
mov
leave
shl
jne
or
sub
sbb
lahf
pusha
subl
iret
shrl
sbb
lea
fdiv
mov
stos
dec
or
dec
or
lcall
push
loope
add
adc
jne
mov
push
fs
mov
mov
lods
mov
imul
ror
cmp
shrb
mov
jno
out
sbb
pop
pop
push
pop
pusha
xor
xchg
lods
jo
fdiv
xchg
fisubrl
ja
inc
imul
jg
and
js
and
jg
mov
jae
sbb
dec
add
iret
mov
adc
iret
sbb
xchg
hlt
mov
insb
inc
inc
sbb
sbbl
mov
gs
or
inc
cwtl
xchg
and
cmp
sahf
test
movsb
leave
mov
add
mov
loopne
xchg
sbb
jecxz
cmpsb
push
or
adc
inc
dec
sbb
repz
mov
inc
inc
and
or
inc
jecxz
mov
adc
and
push
push
or
xorl
shrl
sahf
jo
loopne
push
mov
repz
dec
cmp
pop
stos
repz
ja
xchg
sub
mov
push
loopne
and
lods
int
adc
lock
mov
lock
sbb
jecxz
lea
or
imul
icebp
movl
mov
pop
mov
sti
adc
les
bound
xor
fcmovnu
sub
sbb
xlat
sbbl
inc
add
sbb
test
dec
sub
inc
movsb
sbb
js
lods
movsb
mov
rcl
or
or
pop
pop
in
jmp
test
mov
scas
inc
sub
fbstp
jo
rorl
add
xchg
mov
arpl
sbb
aam
push
aas
aaa
jge
ret
out
shll
mov
pop
enter
addb
mov
mov
ficompl
inc
and
mov
iret
lods
xchg
or
dec
pop
dec
sub
pop
inc
insb
pop
loope
jne
gs
xor
lods
mov
mov
jo
int
ja
adc
les
cwtl
in
xor
inc
mov
sub
or
xor
in
jle
mov
es
loope
mov
sub
negb
xchg
sbb
lret
mov
or
xchg
sar
cmpl
addb
push
xor
mov
gs
adc
pop
add
jle
pop
shll
sbb
nop
hlt
movsl
add
xlat
nop
xchg
xchg
cmp
daa
inc
xchg
inc
pop
pusha
fcomps
pusha
je
addl
cld
rorl
iret
xor
loopne
bnd
ja
sbb
ss
push
cmpsl
cmc
in
xlat
cmpsl
xchg
mov
cmp
pusha
xor
loopne
movsb
sbb
out
push
xor
insb
dec
loopne
mov
sbb
sub
ror
daa
pop
mov
mov
dec
and
push
movsb
cmpsb
and
jns
adcb
lahf
sbb
call
cmp
shlb
dec
push
outsb
or
gs
and
and
inc
sub
cmpb
sub
mov
mov
fadds
add
add
movsb
in
daa
and
sarb
bound
andb
sbb
adc
dec
push
push
sbb
orb
lea
lret
push
cmp
add
or
cmpl
dec
push
xor
add
sbb
pop
and
stos
jmp
add
outsl
fcoms
jg
das
loope
adc
insl
push
dec
pop
mov
arpl
jbe
xchg
sub
das
cmp
adc
test
xchg
adc
add
and
inc
or
pop
cmp
add
aaa
mov
cmpsl
aas
pop
and
out
cmp
in
insb
sub
or
loope
adc
outsl
xor
mov
cmc
daa
xor
xchg
adc
dec
xor
cmp
ds
mov
sub
je
mov
cwtl
dec
dec
sub
outsb
add
pop
jbe
arpl
rclb
xor
or
sub
xchg
scas
shlb
daa
push
lret
rolb
mov
nop
addb
jl
and
ret
das
xor
fwait
mov
cmpsl
add
add
dec
sbb
adc
add
mov
faddl
jg
mov
cwtl
movl
pop
decb
xchg
pop
xor
inc
ss
dec
xor
addb
dec
fisubrs
mov
es
jmp
movsl
adc
pop
cmp
xor
pop
dec
dec
sub
push
mov
pop
aam
iret
cmpsb
cmp
sbbb
in
mov
add
lahf
clc
mov
inc
xchg
fcmovnb
or
mov
or
out
jb,pt
mov
sub
mov
shll
dec
inc
rcrb
push
lret
mov
xlat
lcall
push
or
test
or
cmp
add
rolb
push
add
mov
mov
scas
imul
mov
mov
push
test
jbe
sbb
rolb
inc
roll
add
subb
add
add
sbb
push
add
movsl
add
jle
adc
mov
adc
push
cmc
inc
push
jo
icebp
daa
dec
cmpsb
pop
inc
dec
cs
dec
lret
pusha
add
enter
and
mov
js
push
push
aaa
sub
or
outsl
aam
inc
les
je
add
lock
into
add
push
call
dec
cs
mov
bnd
mov
sub
jmp
pop
cmp
arpl
xor
fsubrp
and
and
rcrl
sbb
push
jnp
add
ficompl
into
idiv
or
add
sub
jbe
add
rcrl
fistpll
mov
lods
pop
arpl
pop
push
push
out
sbb
aaa
push
add
and
arpl
rcrb
dec
cli
out
cmp
js
jecxz
adc
rcrl
daa
je
inc
inc
shll
add
lret
mov
mov
adc
and
add
push
mov
loope
daa
push
fisubs
xor
mov
push
and
call
in
les
jae
sub
cmp
jle
or
cmpsl
sahf
cmp
cmp
jl
dec
dec
lahf
pop
stos
pop
lret
add
iret
ja
stos
cmpsl
cmpsl
push
xor
ret
scas
sub
shl
xchg
jle
inc
ljmp
mov
add
or
in
cltd
cmp
xchg
jecxz
inc
cs
inc
and
sbb
push
lods
pop
je
pop
mov
xchg
lahf
lock
add
je,pt
leave
imul
sbbl
out
cmpsb
push
or
test
xchg
mov
mov
add
in
xchg
bound
add
mov
add
ss
popl
mov
sub
into
fisubs
push
stos
cmp
and
outsb
adc
push
sbb
add
nop
insl
data16
cmp
add
arpl
dec
aad
testl
mov
pop
dec
add
divl
cli
add
push
pop
fs
mov
dec
sub
ljmp
je
testb
mov
dec
mov
ljmp
jbe
add
test
sub
mov
addl
mov
movsb
mov
push
cmpsl
movsb
jmp
ds
and
xchg
mov
sbb
jge
pop
adc
or
arpl
add
jo
rcrb
rolb
xchg
and
lea
leave
cltd
and
mov
push
mov
loope
dec
pop
mov
push
aam
jnp
aaa
and
dec
js
push
test
call
addr16
mov
pop
dec
pop
or
lods
push
adc
lods
call
push
mov
mov
cmp
inc
bound
dec
lahf
jge
adc
enter
dec
leave
mov
test
inc
loopne
mov
outsb
fs
or
adc
fcom
and
imul
adc
pop
xor
in
push
pushf
add
jno
inc
cwtl
sub
pop
add
add
xchg
and
or
stos
mov
mov
mov
ror
xlat
and
mov
sbb
jne
je
dec
and
sarb
and
sbb
push
pop
add
dec
pop
js
jb
lret
loope
andb
jno
jne
and
bnd
rcr
adcl
cmp
xchg
mov
ret
xor
xchg
scas
scas
pop
sbbb
add
repz
ss
push
adc
inc
xor
push
jge
jp
add
cmp
jp
test
mov
sub
push
mov
data16
dec
fsubs
xor
sub
shll
sub
jo
nop
bound
and
push
testb
mov
adc
dec
jl
jb
fidivl
xor
out
lret
pushf
test
fsubr
lods
dec
sub
arpl
and
and
inc
enter
cmp
and
in
addr16
push
ja
testl
mov
and
xor
pop
mov
out
lods
xor
das
pop
inc
jo
cwtl
cmpsl
shrb
ss
sub
insb
mov
jno
push
ret
mov
inc
fbld
inc
mov
fadds
fdivl
adc
into
xor
imull
repz
mov
push
dec
mov
loope
xchg
lea
pop
mov
shr
icebp
sbb
add
les
jne
cwtl
xlat
add
or
into
mov
aad
fbstp
scas
or
mov
lahf
add
in
adc
push
jmp
dec
adc
xlat
pop
data16
out
and
lret
sbb
mov
xor
sbb
lahf
outsb
jns
mov
sub
jnp
inc
inc
pop
xor
aad
daa
jg
movsb
pop
pop
into
sbb
inc
pop
insb
pop
into
mov
sahf
lahf
sbb
dec
into
lock
adc
inc
sub
mov
xor
pusha
add
or
adc
into
rolb
into
mov
icebp
inc
inc
pushf
and
rcll
repz
pop
mov
addr16
mov
push
dec
add
fists
dec
aas
xchg
jno
mov
add
sahf
push
scas
sub
push
jge
out
cmp
mov
jecxz
fs
out
popf
lds
ret
addl
pop
mov
stos
cs
sbb
ds
rol
and
pop
sbb
sbb
cli
add
pop
movsl
jge
add
cmp
int
fwait
cmp
in
sbbl
aaa
xor
jnp
push
fistpll
cmp
jnp
shll
pop
dec
add
dec
and
movsb
loopne
or
insb
or
mov
ret
pop
ja
mov
leave
jnp
loopne
xlat
push
mov
xchg
fldt
mov
cmp
push
adc
push
pop
cmp
xor
pusha
loopne
cmp
mov
roll
sub
sbb
pop
movq
add
std
pop
popa
pop
push
ret
sbb
pop
push
fisttpll
mov
jb
das
mov
rorb
fwait
xchg
cmp
mov
or
fists
fdivrs
insl
sbb
mov
jae
int
repz
jecxz
cmp
lock
fxch
push
push
out
push
lea
lret
cmp
scas
sub
jge
add
pop
add
sbb
into
mov
sti
je
jnp
xor
dec
sbb
push
push
dec
addps
outsb
aad
leave
add
in
mov
sbb
into
call
rcr
imull
cwtl
or
push
ror
jmp
loopne
enter
or
sbb
push
sbbb
mov
insb
add
loopne
adc
pop
shrl
test
inc
faddl
xor
mov
aam
push
pop
sbb
call
sbb
clc
push
push
fidivrs
in
jo
ror
push
inc
mov
outsb
hlt
aas
and
sbb
adc
pop
jp
mov
xchg
in
fiadds
negl
push
sbb
xchg
cmp
lods
fs
and
mov
sub
loope
mov
addl
in
fldenv
in
inc
fwait
xchg
shll
in
arpl
mov
add
daa
mov
xor
sbb
push
lds
imul
int3
fildl
xchg
lock
test
dec
out
aad
cmp
cltd
sub
sbb
rcll
jae
add
pop
jns
adc
lods
ljmp
add
fcoms
aad
cmp
ss
mov
ret
lock
inc
mov
sbb
xor
pop
inc
fidivrs
js
inc
out
mov
dec
ss
jb
xchg
mov
push
repz
into
paddsb
sbb
fnstcw
in
popa
mull
aad
jle
push
xor
dec
dec
inc
add
xchg
loope
mov
in
sbb
les
xchg
mov
out
scas
jmp
aad
mov
out
jno
ficoms
add
cmp
repz
popa
push
cs
notb
negb
inc
fsubl
orb
pop
push
jne
add
cmpsl
and
mov
xor
pop
out
lods
call
shrl
add
scas
and
popa
lret
fcompl
pop
test
insb
jno
sbb
add
ds
cmp
adc
or
adc
and
pop
sbb
arpl
inc
xlat
inc
cmc
movsl
fcom
mov
ret
jle
mov
xchg
insl
or
jge,pt
ja
xchg
mov
into
into
pop
pop
orb
lret
rcl
rcll
dec
xlat
aad
push
jbe
test
sbbl
out
iret
je
into
jb
loopne
adc
xor
icebp
add
jne
call
rcrb
cmp
mov
dec
mov
fs
dec
push
inc
iret
sbb
mov
mov
aaa
mov
lret
push
outsb
lock
add
enter
fildll
sbb
or
pop
andb
gs
dec
imul
loope
jne
dec
dec
pusha
xlat
aas
sti
dec
sbb
mov
sbb
sbb
pop
std
push
fsubrl
addr16
imul
addr16
add
pop
rcll
pop
negl
dec
mov
push
xchg
cmpsb
dec
pop
dec
cli
cmp
jne
sbb
cmp
loopne
cmp
ret
mov
pop
xchg
imul
js
imul
mov
loope
clc
and
sbb
insb
out
ret
lahf
add
sarl
adcl
cmp
add
mov
mov
outsb
jg
mov
xlat
daa
push
clc
mov
mov
push
sbb
sbb
xchg
jg
retw
pusha
std
jnp
xchg
cmp
into
jl
mov
cmp
xchg
push
les
mov
mov
cmp
adc
outsb
xorl
add
adc
ret
mov
js
add
gs
lret
xchg
and
mov
mov
add
std
cmp
js
push
outsb
inc
enter
ss
enter
add
adc
shlb
clc
arpl
lock
call
fdivl
mov
jp
es
mov
pusha
mov
outsl
push
mov
into
adc
pop
std
sbb
aaa
jne
dec
xlat
sti
sbb
out
dec
jb
inc
movsl
addr16
or
call
in
stos
push
into
int3
aaa
ret
push
mov
pop
pop
insl
pop
pushf
pop
sub
inc
xchg
subb
and
ss
out
insl
mov
xor
pop
adc
lret
pop
leave
shll
pop
test
jne
and
scas
ljmp
aad
xor
ret
adc
cmpsb
shrl
cmp
pop
movsl
push
inc
arpl
adc
leave
or
add
mov
xor
dec
cmpsl
popa
adcb
rorb
push
xor
testl
add
rcll
loopne
ja
inc
lahf
dec
cmp
lahf
lahf
arpl
pop
leave
sbb
mov
mov
adc
in
dec
in
pop
cmp
mov
rolb
shrb
mov
movsb
cmc
cmc
daa
jmp
rcrb
cmp
je
lret
inc
inc
xor
out
adc
rolb
lcall
imul
mov
scas
outsb
out
lea
inc
sbb
push
test
enter
into
scas
and
bound
lods
mov
leave
dec
xchg
popa
jmp
icebp
xchg
icebp
xchg
adc
imul
popf
xchg
inc
insl
or
addl
sub
add
cmpsb
xchg
cmp
xchg
inc
ss
stos
int
pop
inc
jmp
lcall
or
scas
mov
fldt
push
into
mov
movsb
mov
pop
jb
scas
out
dec
fmull
scas
and
jmp
into
sub
lret
dec
pop
cmp
pusha
fldcw
insb
in
cmp
jl
or
repz
cmp
xchg
and
lea
imul
stc
orb
xchg
and
loope
push
mov
test
push
xchg
out
xchg
push
and
mov
jns
jmp
mul
sahf
or
mov
xchg
pop
jae
or
or
sbb
imul
rorl
jns
pushf
mov
outsl
mov
out
mov
or
and
outsl
and
shll
cs
aaa
adc
dec
or
sub
adc
sbb
sbb
xchg
jmp
mov
add
push
adc
sbb
movsl
int3
loop
sbb
push
pop
fs
iret
mov
sbb
pop
mov
pop
mov
test
mov
sub
dec
ret
pop
call
mov
jge
inc
movsb
cmpsl
mov
xchg
stos
push
add
fsubrl
sub
ja
mov
iret
in
push
ljmp
mov
in
push
sbb
cmc
loopne
jae
push
adc
orb
fdivrs
jb
push
or
jmp
lds
jo
test
ror
jbe
imul
shrb
lret
out
pop
pop
inc
mov
push
outsl
rcrb
ljmp
loope
add
das
jmp
mov
cmpsb
mov
loopne
xchg
pop
jnp
mov
notl
test
xlat
mov
cmpsb
rcl
push
fwait
or
je
cmpsb
mov
mov
sub
xor
pop
and
jnp
push
xchg
pop
in
call
addb
mov
jl
into
jbe
repz
outsb
outsb
jno
jp
xor
adc
add
pop
subb
pop
hlt
xor
test
jmp
mov
insb
push
fldl
enter
adc
pop
cmpl
jp
sub
push
test
fs
sbb
or
das
or
pop
sbb
xchg
pop
cmc
in
push
loope
sub
jmp
inc
or
arpl
xchg
divl
pop
movsb
xchg
mov
inc
stos
sub
es
pop
fwait
loopne
cmpsb
or
cmpsl
test
mov
inc
into
in
repz
or
movsl
xor
sti
outsb
mov
xchg
push
bound
cltd
imul
mov
in
jne
push
xor
sti
add
push
div
popa
sbb
lret
icebp
push
add
ds
ss
shl
fcoms
sbb
pop
sub
in
push
add
push
inc
fnstenv
inc
mov
pop
cmp
sbb
testl
out
adc
popf
flds
adc
fistpll
push
sbb
or
mov
jmp
test
mov
mov
sarb
xchg
push
or
xor
or
stos
cmp
sbb
jnp
push
pop
shrb
xchg
ds
fldl
push
push
jae
push
inc
mov
inc
and
cmc
call
imul
xchg
xchg
and
mov
mov
loope
notb
aaa
mov
aas
ja
out
sti
mov
inc
cmp
incl
mov
mov
out
lods
xlat
loop
mov
fldl
movsl
imul
xchg
ficoml
popf
mov
sub
xor
add
pusha
push
xor
mov
pop
push
mov
out
js
xchg
scas
jmp
jne
and
push
mov
push
loopne
cld
test
dec
add
add
pop
xor
mov
dec
arpl
xchg
jns
xor
xchg
roll
or
stos
add
jnp
mov
mov
ja
clc
aad
ss
jo
jmp
fucom
insl
iret
popa
or
imull
data16
mov
mov
or
testl
sbb
cmp
gs
ja
insl
xchg
inc
inc
sarl
mov
sbbl
jmp
sub
inc
aaa
movsb
jbe
loopne
inc
ja
inc
inc
jns
mov
push
test
pop
into
loop
popf
mov
sbb
stc
loopne
cltd
mov
jg
mov
test
jne
xor
pop
inc
sub
scas
popf
mov
cltd
xor
cmpsb
add
rcrb
xor
push
das
mov
lock
into
call
movl
xorl
mov
jle
out
iret
jae
jne
or
cmp
inc
ss
mov
cmp
push
add
push
or
push
pop
add
push
ret
scas
movsl
inc
ret
scas
dec
into
pop
aaa
mov
push
sub
mulb
aaa
lds
scas
cwtl
jne
lcall
fistl
adc
cmpl
dec
addr16
gs
and
mov
and
mov
outsl
je
mov
arpl
aam
je
ret
pop
in
add
sub
mull
pop
sbb
mov
mov
inc
out
sub
or
stc
testb
lret
insl
nop
je
or
add
or
push
xchg
push
and
js
cmp
outsb
xor
cltd
and
negl
and
push
js
sbb
int
jmp
and
cmpsl
push
into
and
xor
call
sbb
loopne
out
into
xor
pop
sbb
pop
and
test
roll
adc
adc
add
and
xor
pop
rcll
mov
les
xchg
loope
or
mov
pop
inc
dec
fs
inc
mov
out
roll
inc
mov
inc
dec
inc
bound
fisubl
pushf
hlt
xor
adc
add
xor
mov
scas
lods
add
nop
lds
mov
add
cmp
and
sub
adc
stos
xchg
fwait
test
xchg
outsl
inc
dec
rcll
pop
adc
cmpsl
loop
mov
lds
fwait
push
cld
out
ret
aam
pop
dec
mov
daa
testl
mov
or
adc
in
sti
add
adc
movsl
xchg
pushf
addb
adc
ja
sub
aaa
into
sbb
pop
push
or
sarb
btr
nop
mov
xlat
dec
mov
movb
gs
ss
add
cs
xor
into
xchg
insl
pusha
into
jle
adc
adc
cmp
mov
cmpsl
jo
cmovnp
mov
imul
sub
xchg
lods
imul
or
sbb
js
push
ret
cld
add
mov
jecxz
popw
push
push
roll
outsl
and
or
push
sub
xor
lahf
sbb
inc
add
sahf
adc
pop
xchg
inc
mov
test
insb
mov
movsl
icebp
pop
mov
cmpl
cmp
push
or
cmp
push
out
popf
xchg
sbb
js
jo
fcoms
scas
les
cli
movl
mov
sbb
lret
lahf
or
test
sahf
or
add
jp
jg
xor
cwtl
mov
repz
jne
dec
sbb
pop
imul
xlat
jecxz
popa
int3
xor
in
enter
jg
push
nop
pop
addl
jp
test
cltd
xchg
inc
xchg
adc
loope
mov
and
fbstp
xchg
mov
insl
insl
adc
fadds
add
and
rolb
cwtl
cs
data16
add
adc
loopew
mov
jle
out
clc
add
add
test
lcall
add
cmpsl
jle
mov
out
mov
mov
pop
or
shll
hlt
roll
pop
or
pusha
test
lds
fldl
lcall
mov
scas
test
arpl
imul
inc
dec
scas
js
xchg
jge
adc
or
xor
mov
mov
imul
pop
cmp
mov
pop
ror
pop
mov
cltd
and
sub
test
mov
andl
push
lods
cmpsl
mov
or
xor
sub
cmp
sarb
fnstsw
scas
or
sbb
icebp
inc
add
cld
cmp
cmp
push
aaa
jl
scas
mov
cltd
cmp
xor
add
mov
mov
out
jl
jp
adc
xchg
mov
jg
cli
jl
outsb
add
adc
aad
into
cmp
add
push
fwait
mov
popa
daa
dec
sub
cmp
cmp
out
inc
ss
jnp
cmpsb
xchg
or
aas
xor
js
cli
leave
inc
insl
daa
fcoml
aas
adc
int
add
rcrb
shll
dec
or
cli
sbb
xor
aaa
cmp
in
out
call
cmp
add
and
incb
aas
add
fdiv
xchg
lahf
mov
cmp
push
inc
dec
cmp
mov
push
adc
xchg
andl
inc
out
das
jp
cmc
jmp
mov
push
lcall
in
test
jp
bound
and
popa
sub
sub
sbb
pop
out
push
dec
imul
mov
aaa
stos
insb
push
out
pop
arpl
xchg
call
sarl
dec
pop
push
fisubrs
cmpsb
ja
mov
mov
gs
pop
add
dec
xlat
pushl
insl
jae
aaa
pop
jns
mov
mov
sti
jns
add
rcrb
and
sub
mov
mov
jno
xor
pop
aad
addr16
sbb
mov
pop
cmpl
mov
fidivl
insb
xor
scas
loop
jne
repz
dec
je
bt
push
lods
and
rclb
dec
pop
and
mov
add
test
lods
xor
idiv
pusha
cmp
js
cld
inc
sbb
jne
xchg
in
cmp
add
popf
mov
hlt
sub
dec
fldl
dec
mov
test
stc
push
or
mov
imul
lahf
or
xorl
and
mov
jnp
mov
rcl
test
xchg
in
mov
xlat
push
or
add
addl
in
jo
xor
test
lods
pop
out
mov
jle
rolb
dec
jns
into
rcr
inc
dec
pop
adc
insb
mov
inc
divb
mov
cld
sahf
cmpsl
data16
mov
loope
std
push
ljmp
test
add
adc
leave
rolb
ret
bound
popa
outsl
mov
jns
das
inc
dec
push
std
cmp
clc
add
pop
mov
sbb
mov
fcoml
dec
fisubs
add
subl
cmp
jb
leave
movsb
pushf
fwait
sub
pop
adc
jb
dec
push
aaa
and
and
add
lods
add
das
add
iret
cmp
shr
xorl
xchg
jbe
imul
daa
mov
lahf
out
dec
xor
gs
push
jno
push
aaa
jmp
push
lock
ja
inc
sub
out
jae
daa
push
daa
lods
adc
or
jmp
in
cmp
or
ja
mov
or
addl
inc
sbb
mov
inc
daa
jno
inc
push
sbb
pop
xchg
minps
roll
inc
or
adc
testl
inc
or
sbb
mov
push
xlat
jne
iret
hlt
or
cmp
test
mov
mov
jmp
jmp
jbe
xor
or
sbb
jle
jo
or
insl
push
sub
add
negb
in
pop
adcl
dec
xor
imul
or
daa
adc
or
fnstsw
popa
push
stos
push
adc
pop
jne
mov
out
add
daa
arpl
test
into
testb
sti
jo
jne
cmpsl
cli
dec
dec
mov
loop
or
dec
and
outsb
js
mov
push
mov
mov
dec
addr16
or
daa
mov
jne
outsl
imul
sbb
sub
dec
sub
inc
out
mov
push
or
push
dec
jge
sbb
sbb
jno
div
addl
pop
pand
leave
push
mov
pop
imul
or
jbe
cmpsl
pop
adc
pop
imul
or
adc
fidivs
sub
cmp
xor
jmp
lock
lcall
out
cs
fprem1
and
and
sti
sub
or
mov
or
aaa
adc
sbb
push
push
cmpsl
aaa
shrl
lret
xchg
lods
mov
add
push
cmpsl
and
mov
orl
and
mov
frstor
xchg
sar
fs
mov
push
inc
pushl
mov
mov
sarb
push
insb
cli
or
popl
loopne
subb
aas
jno
pop
mul
sub
dec
pop
int
or
xchg
mov
out
mov
leave
js
mov
inc
cmp
pop
popa
sbb
lcall
push
pop
jb
subl
cli
xor
add
push
jecxz
arpl
rcrl
lods
lock
imul
inc
pop
call
dec
icebp
sbb
adc
jnp
sahf
push
mov
mov
out
jg
inc
jcxz
add
mov
sbb
xchg
xchg
ljmp
xor
std
pop
xchg
movb
sub
stos
stos
inc
mov
pop
pusha
lock
sbb
outsl
xlat
inc
loope
test
sbb
cmp
jp
push
scas
mov
dec
or
pop
xchg
les
popf
mov
or
push
imul
outsl
lretw
outsb
sbbl
mov
lcall
xor
or
mov
mov
mov
leave
into
cmpsl
xor
sub
mov
and
adc
cmpsl
jg
addb
jns
pop
push
mov
mov
push
sti
iret
insl
xchg
jp
aas
and
xchg
aas
xchg
cmp
xor
pop
sub
test
add
loopne
bound
sub
add
movsl
jge
es
and
cmp
out
add
mov
loopne
scas
test
cld
out
or
xor
adc
xor
fsubr
jg
ficompl
adc
ds
adc
jo
push
dec
sub
stos
clc
add
push
test
dec
call
adc
add
movsl
ja
lods
popf
inc
fiadds
call
mov
push
inc
xchg
scas
adc
pop
pop
test
dec
jp
and
loopne
fstpt
in
outsb
xchg
adc
mov
add
call
rorb
jo
popf
pop
movsb
sbb
lods
test
mov
in
push
in
cmp
loopne
and
jmp
int3
jge
loopne
xchg
push
push
call
roll
sbb
test
or
test
and
inc
or
repnz
lds
xor
mov
xchg
std
cli
push
add
pop
andl
repz
sbb
and
lcall
cmp
and
and
add
in
and
fucomi
clc
aad
dec
or
ja
push
inc
mov
cli
push
pop
pop
mov
add
shlb
jnp
xlat
mov
sbb
push
and
sub
call
int
lock
lahf
dec
pop
pop
out
xchg
dec
loope
mov
mov
mov
add
sub
jbe
lods
sub
xchg
inc
push
xor
frstor
inc
jo
xchg
orb
add
pop
sbb
pop
arpl
xor
in
cmpsl
js,pt
fimuls
push
dec
jbe
pop
aas
add
pop
and
push
jb
and
mov
mov
push
js
fsubs
add
jg
push
imul
lret
aad
fcoms
cmp
stc
roll
lods
mov
mov
add
xchg
lcall
and
cmpsb
sub
insl
pop
jnp
imull
sar
test
sub
or
cltd
scas
or
stos
or
mov
jp
mov
mov
or
push
loopne
lret
pop
mov
in
dec
sbb
lret
xchg
cmp
ror
adc
frstor
scas
clc
shlb
mov
cld
adc
mull
push
mov
adc
int
or
push
lahf
adc
test
insb
ss
ss
pop
insb
jbe
mov
xchg
hlt
jmp
int
push
int
out
outsb
push
jp
mov
cmp
pusha
imul
mov
xchg
sbb
jo
imul
jecxz
ret
jbe
fadd
cmp
xor
sbbb
push
cmp
push
adc
sub
ret
in
jb
xor
sbb
push
rcll
jne
sbb
or
int3
and
fldt
int
frstor
fimuls
mov
icebp
imul
dec
sbb
data16
mov
and
outsb
es
jge
out
dec
lods
std
lcall
jns
jl
stos
in
enter
loop
mov
lock
out
rcrl
mov
dec
outsb
ror
sub
mov
test
je
mov
aas
sbb
adc
xlat
mov
pushf
pop
mov
lcall
pop
adc
mov
or
pop
out
add
push
pop
adcl
jb
test
push
sarl
pop
rolb
loop
bound
cli
xchg
mov
cmpb
or
dec
or
call
fwait
aad
push
dec
inc
pop
pop
popa
fildl
stc
out
mov
sub
lock
mov
jo
mov
jmp
imul
repnz
enter
push
lods
xor
mov
adc
sub
mov
mov
inc
fdivrp
ljmp
imul
es
in
add
inc
es
jl
push
jg
pop
into
sbb
enter
xlat
xorl
mov
shrb
jne
add
push
xchg
loop
push
nop
adc
fisttpll
push
cli
into
mov
or
add
call
or
or
mov
dec
fnstsw
add
sbb
sub
int3
cmp
add
cmp
clc
das
jmp
cmp
ret
pop
iret
push
mov
fiaddl
imul
dec
ficoml
rdtsc
push
add
icebp
cmp
mov
sbb
xchg
loopne
outsb
stos
in
dec
xchg
fistl
repnz
mov
into
mov
clc
ret
xchg
lcall
mov
mulb
inc
xchg
out
test
and
push
sbb
dec
fsubs
addb
cmpsl
int
jmp
mov
or
test
push
mov
dec
jb
inc
stos
push
daa
jecxz
add
ret
lret
cmp
inc
arpl
push
and
jmp
dec
outsb
addr16
add
fcomps
pusha
in
xchg
cmpb
into
or
fisttpll
fstl
lock
addl
lret
xor
aam
ret
repnz
pop
mov
dec
je
out
xchg
js
out
negb
pushf
cmpsb
push
aad
mov
ret
outsb
or
cmp
cmp
mov
sub
sbb
xlat
sbb
aam
inc
out
xor
inc
pop
inc
ficoms
lret
dec
sbb
les
adc
js
ljmp
les
int
cmp
push
ret
aas
js
sub
mov
popa
fiaddl
mov
es
add
mov
test
push
mov
xchg
add
cwtl
mov
popf
jmp
mov
add
and
dec
cli
aaa
lods
cwtl
hlt
push
jecxz
insb
push
mov
mov
bound
xchg
adc
jne
add
xchg
and
mov
incb
mov
cmp
push
mov
pop
mov
mov
xor
push
insl
cmp
and
in
push
pop
xchg
ss
dec
dec
lahf
mov
mull
push
sub
loopne
add
dec
fsubrl
push
cmpl
push
pop
cltd
or
xor
ss
mov
jp
sbb
push
dec
iret
pop
xor
lcall
nop
aam
icebp
push
mov
cmp
rcrl
mov
jge
sub
jbe
out
add
shlb
movsb
xchg
test
sub
jp
jne
add
inc
push
dec
dec
mov
mov
pushf
sbb
push
cltd
push
movb
xchg
int3
scas
pop
mov
add
add
aas
cmp
pop
jb
xchg
mov
sub
js
movsl
pop
and
cmpl
js
stc
sub
pop
incb
icebp
sbb
dec
sub
into
mov
and
cmp
xchg
jo
dec
adc
clc
mov
jge
movups
neg
or
push
jecxz
push
cmpsb
movsb
movsb
ja
loopne
add
pusha
les
inc
data16
jbe
cmp
insb
fld1
inc
cmpb
ljmp
daa
or
adc
pusha
pop
jns
fs
jl
xchg
sub
imul
cmp
jle
sbb
dec
popa
cmp
loopne
xchg
mov
jae
xor
icebp
ss
jp
push
and
mov
pop
mov
cli
das
mov
push
jl
jge
dec
xor
add
push
mov
movsb
testb
dec
mov
xchg
insb
nop
mov
test
push
movsl
jnp
cmp
pushf
pop
scas
mov
sbb
dec
cli
pop
push
in
and
sub
pop
shrb
insb
mov
test
push
pusha
jp
rcrb
sbb
dec
leave
xchg
xchg
xchg
outsl
sti
test
sub
mov
popa
xchg
mov
orb
pop
pop
and
push
into
insb
cmp
clc
cmp
orb
fisubl
cmp
pushf
cs
lret
dec
rorb
icebp
ja
fcompl
movsb
add
pop
fmuls
sbb
enter
xor
nop
or
push
mov
add
ret
push
insl
movsb
je
xchg
push
fcmove
and
testb
leave
mov
sar
mov
fs
movsl
push
sbb
mov
xlat
inc
jbe
dec
jle
scas
nop
shll
mov
shlb
rclb
loopne
inc
sti
sbb
mov
fdiv
xchg
ljmp
dec
mov
mov
sbb
pop
mov
gs
and
test
sbb
push
push
inc
xorb
scas
les
lods
sub
and
out
pop
mov
sub
adc
es
mov
aad
jne
jne
dec
sahf
fwait
cltd
xor
mov
push
push
cmpsl
xchg
mov
adc
test
pop
iret
imul
sub
cwtl
pusha
xchg
nop
enter
lahf
popa
sub
add
shlb
fcmovnu
call
jp
fs
fidivl
aad
aaa
loop
inc
sub
lret
add
daa
jb
and
outsb
es
ss
mov
add
or
pop
imul
rolb
mov
mov
movsl
mov
mov
imull
outsl
cli
cmp
roll
adc
stos
sbb
ljmp
cmp
shrl
movsb
adc
sub
mov
jbe
dec
mov
dec
ja
les
adc
adc
insb
outsl
ficompl
xor
nop
mov
sahf
xchg
pop
or
or
adcb
cmp
ss
outsb
jp
xchg
test
imul
icebp
mov
and
mov
cmc
fisttpll
sbb
cmp
xlat
or
mov
xchg
add
popa
lret
enter
add
lock
or
rcr
insb
andl
roll
push
sbbb
aas
fisttps
sub
mov
int3
inc
push
and
fcoml
mov
outsl
push
shlb
cmp
add
and
inc
mov
or
into
mov
pop
cmc
jge
jmp
pop
das
xor
mov
jbe
mov
mov
aas
dec
cwtl
mov
add
fcompl
xchg
popa
aad
out
test
aad
push
fld
mov
in
xchg
xor
aaa
aas
loope
clc
dec
add
push
jb
test
cmp
pop
popa
xchg
dec
mov
ds
imul
loop
mov
or
push
mov
inc
imul
rclb
stos
sbb
adc
dec
jbe
or
daa
loopne
icebp
xor
inc
mov
mov
lahf
adc
test
lods
mov
jno
in
mov
imul
jle
fldenv
fisubs
add
xchg
xor
mov
jbe
jb
out
fsubrs
andb
int3
jge
test
dec
xor
jmp
add
lahf
and
outsl
jo
jnp
add
xchg
mov
loop
mov
out
pop
in
add
popa
push
fwait
mov
pop
cmpsb
jl
jae
push
mov
sub
sbb
and
addl
xchg
lcall
scas
movsl
or
lret
int
dec
jmp
into
shrl
fsubs
adc
ja
fstpl
and
fisubrs
decb
fsts
adc
insl
pop
rol
cmp
rol
inc
and
into
stos
lret
xor
inc
mov
inc
lret
cmpsl
add
ret
cwtl
dec
seto
iret
ror
push
dec
test
out
in
into
mov
mov
ss
and
aam
xor
lahf
add
or
xchg
push
xor
dec
sbb
aad
addb
cli
jle
popl
xchg
push
lea
lret
pop
xor
xor
jge
or
xchg
insb
push
jno
jl
insb
add
fiaddl
nop
hlt
add
mov
shll
push
mov
sbb
test
add
lcall
push
js
add
inc
out
lods
and
dec
cmpsb
cli
sahf
add
mov
les
test
sbb
fwait
push
aaa
ret
xor
outsb
sbbl
sbb
mov
div
push
dec
cmpsb
cwtl
and
and
sysret
stos
push
in
stos
mov
add
inc
add
pop
in
dec
into
sub
je
mov
add
pusha
das
call
add
jns
sahf
push
icebp
add
scas
push
pusha
rorb
es
dec
loopne
ds
cli
fcoms
scas
lods
cmp
loop
fdivl
fs
jmp
sub
or
adc
nop
int3
ja
shll
push
mov
xchg
adc
in
orb
mov
repz
and
mov
rclb
daa
inc
int3
ss
adc
ret
inc
ljmp
pop
push
cld
pop
lea
enter
add
xchg
enter
subb
test
cld
enter
inc
std
pop
push
cli
pusha
stc
daa
jnp
fadd
xchg
mov
mov
call
jbe
je
cmp
push
outsb
lea
mov
push
pop
adc
mov
jl
cld
sub
jns
mov
gs
mov
loopne
ja
xchg
enter
pop
jg
xor
loop
into
je
cmp
mov
jb
mov
and
or
push
adc
lods
mov
aam
mov
dec
call
add
mov
push
roll
inc
add
ret
negb
jo
cld
inc
movl
mov
push
lret
xchg
sahf
mov
xchg
jns
hlt
shrl
or
cltd
cmpsb
cmpsl
pop
and
int
jnp
jmp
fisubs
stos
push
sti
pop
mov
mov
mov
adc
dec
and
movsl
or
mov
sbb
ds
js
test
xor
into
xchg
or
inc
ret
rcl
push
jbe
xchg
pop
and
mov
cmp
aam
imul
pop
mov
sub
stos
pop
iret
adc
sbb
cld
jne
hlt
aas
nop
sti
popa
and
xchg
inc
inc
sub
mov
push
roll
int3
rcrl
sub
inc
and
scas
hlt
sub
cwtl
inc
pop
adc
xchg
inc
inc
addr16
jecxz
test
cli
cwtl
or
or
sbb
cmp
nop
movsb
scas
jge
popa
xchg
jmp
mulb
and
mov
and
es
decl
dec
in
xchg
pop
inc
fiaddl
push
popf
sbb
push
ss
fimull
mov
mov
es
cmp
pop
stos
stos
adc
xor
xor
xor
dec
mov
mov
aam
sbb
mov
lods
ja
sti
call
mov
call
pop
xlat
mov
sub
je
xchg
adc
or
outsl
cmp
jecxz
mov
ds
push
jl
push
xchg
lock
test
mov
sahf
nop
adc
iret
das
enter
push
insb
sbb
int3
jo
and
xchg
lcall
mov
push
add
mov
subb
int
pop
jge
jle
out
jb
xor
lea
sbb
sbb
or
push
mov
xchg
lock
add
insb
jle
roll
fs
imul
and
aaa
sub
xchg
out
add
jmp
andl
adc
flds
cld
inc
jg
dec
adcb
dec
pop
rcr
or
xchg
and
cmp
lods
mov
push
xor
push
jnp
ja
add
js
mov
pop
jg
mov
push
push
sbb
cli
dec
jmp
leave
sub
aad
push
fidivs
mov
sub
outsb
jnp
mov
mov
push
in
sbb
ds
add
cmp
cld
dec
push
lods
out
lret
movsb
mov
daa
dec
xor
mov
xor
out
cmp
fidivs
lahf
scas
sbb
dec
js
scas
mov
adc
push
icebp
bound
mov
mov
pop
fidivrs
sub
imul
cmp
aam
fisubrl
inc
ja
cmp
or
icebp
aad
jnp
mov
adc
pop
push
xlat
and
dec
dec
lock
push
pop
xor
jl
push
xor
jbe
or
gs
fldl
nop
dec
std
mov
cmp
rcrl
ja
push
and
jle,pt
das
push
cmp
int3
std
es
add
out
push
cmpsb
pop
je
lock
xor
cs
add
sbb
and
push
cmpb
mov
xor
jmp
mov
mov
subl
les
mov
popa
sbb
pop
sub
mov
xchg
mov
jle
aaa
xchg
cs
in
xor
in
jmp
popf
cwtl
pop
daa
js
cmp
push
add
cmpb
adc
in
adc
sub
push
outsb
cmp
aam
movsl
or
jno
int
fists
xorb
mov
inc
sbb
xchg
sub
adc
fiadds
add
mov
and
add
xchg
test
and
jg
jne
int3
ficomps
out
popf
repnz
inc
push
lcall
jp
and
jle
fcmovbe
jo
ss
pop
rol
jle
push
ds
data16
rcl
pop
or
xchg
mov
xor
std
imul
test
aas
cmp
int
fstpl
add
xor
cmp
ss
pop
pop
add
aas
cltd
aas
imul
inc
sbb
inc
mov
xor
dec
add
outsb
cmp
in
mov
jmp
xchg
data16
mov
ret
cmp
pop
rclb
mov
out
inc
ret
add
or
pop
xor
or
pop
hlt
vcvtsi2ss
xchg
aam
rclb
push
rcll
repnz
push
dec
add
lds
adc
add
dec
inc
xor
or
sub
andb
in
push
and
inc
mov
cmp
adc
or
sub
ret
push
lds
add
add
cmp
push
sub
sub
add
push
mov
roll
aam
add
add
xchg
mov
xchg
inc
xor
mov
and
out
je
push
insb
les
mov
cmp
cmp
lret
xor
out
mov
aaa
nop
ret
mov
ret
pop
push
jo
push
jo
and
ljmp
jp
xor
add
add
pop
testl
xor
shlb
jle
inc
xchg
ljmp
sbb
mov
mov
les
pop
into
dec
cli
fdiv
and
sbb
xor
rcl
andl
cltd
hlt
mov
adc
outsb
add
cmp
xchg
mov
and
icebp
xchg
rcrb
lods
bound
call
sub
jnp
push
inc
sahf
sbb
lods
scas
jne
mov
enter
shr
fmulp
testb
movsb
push
mov
rclb
in
push
push
sbb
int3
in
enter
cs
shll
xchg
lcall
or
add
lret
inc
add
pop
shrl
or
inc
pop
mov
insl
push
sbb
mov
mov
sub
jmp
cmp
pop
rol
and
inc
mov
or
inc
outsb
out
movsl
repnz
add
es
imul
cli
clc
pop
sarl
fimull
xchg
andl
mov
insl
and
mov
rcrb
inc
add
pop
sarb
scas
clc
aad
aad
sarl
gs
xchg
pushf
int3
jg
hlt
add
mov
dec
retw
xchg
mov
imul
outsl
xor
mov
xor
xor
xchg
ror
call
sbb
mov
mov
mov
add
push
mov
inc
sbb
and
cld
cli
popf
loope
stos
add
rolb
les
outsb
sbb
test
adc
inc
lcall
adcb
cmpsb
mov
push
lret
cwtl
js
lahf
js
or
or
mov
add
aaa
pop
call
cmp
xchg
or
and
std
add
pop
sub
ss
rorb
fdivrs
dec
and
dec
and
lods
push
fcmovnbe
cmp
pop
xchg
mov
scas
xchg
dec
add
pop
inc
nop
mov
incb
adcb
or
les
lret
cmc
xor
imul
mov
js
xor
dec
add
and
shrb
and
hlt
and
cmp
test
outsl
pop
ja
push
add
stc
mov
add
sti
push
rcll
lret
test
mov
xchg
jbe
push
fs
inc
fisttpll
fcoml
mov
stos
inc
adc
out
jbe
mov
inc
mov
cmp
movsb
pop
sub
mov
dec
lds
jge
js
cmp
jmp
hlt
in
mov
push
shrb
pop
xchg
add
pop
int
int3
test
mov
xor
xchg
dec
cmp
mov
aad
imul
push
sub
das
mov
popa
aad
xorb
add
imul
stos
int3
nop
sbb
dec
ss
adc
loope
fdivl
stos
cmp
jbe
adc
mov
addr16
cmp
into
cmp
test
pop
mov
mov
cmc
adcl
cmc
daa
fcom
lcall
adc
aad
test
push
in
stos
sahf
xchg
test
jl
xchg
pop
ds
add
les
lods
mov
loop
mov
sub
cmpsl
jns
rcl
stos
push
inc
frstor
enter
insb
cmpl
push
in
sub
cmp
lret
test
inc
mov
lret
xorb
add
xor
push
pop
sub
jbe
push
mov
dec
flds
ljmp
test
add
loopne
lcall
mov
stc
cmp
sub
je
sbb
cmp
mov
pop
push
and
cld
int3
cmp
sub
push
push
repnz
jne
add
pop
mov
mov
sbbb
add
data16
inc
add
add
mov
dec
mov
adc
jnp
mov
test
ja
pop
jl
sub
mov
loope
add
mov
mov
push
stos
sub
mov
and
cli
pop
adc
adc
push
cmp
inc
push
bound
inc
mov
outsb
cld
inc
jl
mov
push
fs
pushf
mov
sub
enter
pop
fildll
dec
aam
bound
lds
insb
adc
pop
xor
sar
xchg
les
inc
jbe
push
cmp
out
or
ds
out
cltd
icebp
xor
inc
arpl
outsl
mov
push
lock
push
into
sub
push
cmp
call
jnp
sbb
in
aam
daa
ss
cli
das
jle
add
sub
mov
xchg
inc
fwait
mov
pop
push
or
data16
and
or
outsb
adc
test
xchg
shlb
addb
mull
adc
or
push
sbb
adc
push
lcall
repz
mov
shlb
cmpsb
aaa
inc
test
xchg
test
shr
sub
sub
mov
mov
pop
mov
cs
push
int
add
repz
dec
xor
js
scas
fstp
test
int
mov
subb
insb
mov
in
mov
mov
xchg
jge
and
cmp
dec
xor
xor
stc
mov
sbb
jle
mov
push
enter
lods
pop
cmp
lret
pop
jo
jecxz
mov
xor
jo
push
lahf
popf
mov
add
fs
les
pushf
aad
mov
mov
and
fcompl
loope
cmp
rcr
js
push
stc
sub
mov
andl
fsts
adc
mov
test
jmp
data16
add
mov
add
mov
fsub
fists
push
or
outsb
cmpsl
push
sahf
aas
rol
inc
inc
mov
inc
movsb
push
xchg
jmp
pop
or
push
lret
fbld
fists
in
push
das
lock
loopne
rcl
sbb
in
out
push
sbb
mov
das
cmpsb
add
sbb
mov
and
dec
jge
lods
jne
mov
inc
push
jb
or
test
das
mov
jmp
dec
insb
cli
mov
mov
mov
push
rcrb
call
test
mov
cld
pop
sub
jle
mov
fdivr
hlt
pop
cmp
pop
lcall
aam
xchg
les
push
dec
stos
sbb
and
loopne
push
mov
js
inc
pop
testb
mov
sbb
inc
loopne
jne
lretw
push
cld
pop
out
add
dec
arpl
or
fwait
push
mov
xchg
mov
or
sbb
push
mov
hlt
out
fwait
in
mov
test
shlb
ret
cmpsb
lea
jp
inc
lea
pop
js
das
mov
sbb
imul
in
sbb
xor
pop
cmp
jle
sbb
aaa
pop
push
popa
adc
int
out
mov
and
arpl
fdiv
rcrl
push
pop
orl
aas
imul
andb
popl
xchg
jbe
sbb
sub
xorl
pop
jb
pusha
xor
int3
fcmovnu
pusha
pop
adcl
addr16
add
push
xchg
lahf
bound
stos
mov
mov
pop
push
inc
mov
rol
scas
movsb
shr
lods
xchg
mov
adc
std
sub
mov
pushf
daa
sub
lea
sub
mov
test
xchg
lahf
fucomip
jnp
xchg
sbb
add
daa
divl
ljmp
adc
push
test
pop
add
fildll
mov
aaa
xor
adc
pop
arpl
and
pop
out
mov
repz
xor
or
mov
jnp
xor
or
cmp
jp
or
xor
stc
pushf
mov
jnp
mov
push
xor
inc
fucomp
jmp
mov
mov
das
mov
jne
out
jne
out
jmp
repz
xor
pusha
in
mov
rcrl
xor
sub
negl
dec
cmp
xor
cmp
push
or
in
lock
pop
aaa
sti
xor
ja
jg
inc
cmp
inc
ss
push
push
jns
inc
mov
idivl
mov
rcrl
xor
lea
lds
stc
or
sbb
ja
dec
mov
iret
in
aam
fwait
sbb
repz
sbbb
aas
test
pop
push
cltd
frstor
jg
mov
mull
aas
mov
js
call
ds
add
out
repnz
pop
xor
and
jne
mov
and
push
jmp
subl
cmpsl
cmp
lods
je
pop
arpl
addr16
mov
dec
mov
and
cmp
das
ljmp
femms
out
pop
and
aam
inc
cmp
add
push
cmp
or
sub
xor
movsl
sbb
ljmp
out
fistps
das
cmp
cmp
pop
push
daa
xchg
ja
mov
scas
sub
idivl
mov
mov
sahf
fucomp
and
dec
ds
fistl
xor
mov
or
scas
inc
sub
test
push
mov
mov
decl
iret
out
call
cmp
cmp
or
popf
loope
cmp
sbb
push
or
scas
sub
out
mov
sti
pop
filds
cmp
sti
cmp
cmp
cmp
cmp
and
mov
or
adc
pop
testl
into
in
pop
and
js
lds
mov
and
in
jl
repnz
xchg
push
jecxz
sti
xlat
loop
mov
push
xor
xlat
push
mov
adc
imul
ret
jmp
cld
inc
dec
pop
mov
jmp
scas
mov
push
and
pop
in
int
scas
imull
fildll
add
aaa
add
dec
scas
repnz
adc
lods
fwait
jge
mov
mov
or
cmp
fs
mov
ret
or
add
add
in
or
or
iret
add
cmp
sbb
mov
or
lsl
push
outsl
es
mov
or
movswl
js
ja
addr16
inc
pop
jl
imul
push
stc
movsl
jp
add
xor
scas
or
int
xchg
dec
call
into
mov
aaa
or
imul
add
fsubrp
cmp
cmpsl
or
and
or
add
repz
add
fisttps
add
and
das
pop
sbb
hlt
sahf
push
fs
lods
pop
das
inc
xchg
xor
inc
das
or
push
sub
je
mov
mov
xlat
jmp
mov
out
and
mov
or
fsubl
enter
jmp
dec
arpl
adc
mov
pop
jmp
gs
push
int
xchg
xlat
or
fnstsw
cmp
adc
jo
pushf
dec
cld
xor
out
xor
fbld
or
or
pop
emms
fnstcw
sbb
pop
fdivl
fimull
mov
dec
int3
dec
mov
or
jecxz
repz
adc
jge
cmp
fistpl
enter
or
scas
sbb
mov
inc
fsubs
cmp
inc
or
fimull
push
idivb
pop
or
xchg
sub
jecxz
dec
ds
imul
bnd
add
jnp
movsl
insb
add
std
or
das
add
sti
test
push
xchg
or
jge
iret
pop
clc
into
or
enter
add
or
inc
or
and
sbb
hlt
inc
aad
pop
mov
cmove
testl
xchg
cmp
lea
xlat
add
and
sub
out
cltd
dec
scas
xor
xor
ss
mov
xor
xor
pop
jle
pusha
dec
addr16
push
das
cltd
mov
add
cmp
push
pop
add
fnsave
les
xor
cmpsl
jp
push
popa
mov
cmp
xchg
or
or
sbb
js
sbb
pushf
hlt
scas
cmp
and
in
jne
rorb
subl
push
add
xchg
je
mov
jge
push
in
imul
loop
ss
js
into
cmpsb
jle
pushf
mov
mov
or
sbb
sub
test
mov
test
inc
sti
jle
mov
sti
daa
shlb
ja
out
mov
or
xchg
out
sbb
mov
cmp
jge
mov
inc
and
adc
testl
mov
lods
dec
rorl
push
push
scas
movsl
xor
outsb
pop
hlt
out
sub
cld
cmp
adc
jmp
jb
pop
cmc
and
sub
mov
jbe
sub
add
jb
adc
dec
sbb
ret
popf
fdivl
js
sbb
popa
leave
jo
xchg
out
and
fistl
popa
aad
add
cs
push
jno
jle
data16
add
mov
dec
mov
xchg
adc
fiadds
mov
mov
pop
mov
sub
adc
sub
sbb
pop
push
pop
lock
xchg
add
aaa
xchg
pop
loop
pop
fucom
adc
and
jae
xor
jp
roll
xor
or
imul
jae
ljmp
cmp
popf
insl
popa
aas
daa
inc
sub
pop
test
cltd
add
fisubs
inc
pushf
jbe
test
push
xor
and
aas
js
mov
mov
movsb
in
es
mov
lds
shlb
and
add
dec
sbb
mov
loop
out
pop
pop
or
orb
test
mov
push
jmp
cmpsl
adc
sti
xchg
jo
movsb
sub
mov
rclb
xchg
sub
shll
imul
and
push
rolb
adc
jle
or
repz
inc
leavew
outsl
dec
outsl
sbb
imul
movl
mov
mov
sar
notl
inc
rdtsc
imul
cmp
or
mov
xlat
cmp
pop
pop
dec
movsb
dec
inc
and
aas
outsl
cmp
xchg
rol
pop
lds
lods
add
inc
and
leave
fmuls
fsubl
mov
jl
sbb
lea
add
out
lds
gs
inc
imul
pushl
cld
sbb
dec
pop
mov
loop
jge
sub
push
pop
es
mov
and
int
inc
aaa
adc
and
mov
lds
sti
outsb
ja
and
pop
fsubl
mov
jg
push
sbb
xchg
adc
or
les
iret
leave
add
sti
jno
into
ret
aam
xorb
dec
push
and
push
aad
sbb
xchg
xor
stos
mov
roll
jbe
gs
out
dec
sub
mov
test
sti
mov
inc
sbb
pop
mov
sub
ja
insb
lock
xlat
jle
mov
scas
adc
out
mov
popa
aad
mov
frstor
dec
mov
mov
push
mov
pop
lea
mov
pop
mov
sbb
pusha
pop
lret
xchg
pop
movsb
pusha
lea
mov
push
push
adc
repz
jbe
out
jp
xchg
and
jbe
popa
add
xchg
shll
sub
inc
sbb
popa
jge
push
lods
and
xchg
out
add
mov
aam
xchg
push
je
dec
xchg
js
mov
mov
adc
mov
mov
sbb
push
cmp
aam
inc
cltd
lods
mov
mov
pusha
adc
and
and
stos
xchg
adc
stos
push
int
push
addl
mov
xor
out
movsl
add
xor
rorl
add
mov
push
stos
sbbb
ficoml
add
and
lret
lahf
aad
add
sub
gs
xor
jne
mov
ja
sbb
or
out
adc
push
cmp
xor
arpl
imul
jae
int
fsincos
adc
and
dec
lret
mov
iret
sbb
mov
pop
push
or
int
stos
sbb
mov
scas
jb
add
mov
cs
sbb
lahf
xchg
and
sub
sbb
inc
out
jae
nop
dec
andb
pop
mov
shll
iret
sbb
add
negl
pop
cmp
pop
rcl
cwtl
fisubs
fs
fadds
adc
jp
cmp
cmp
pop
add
addr16
fwait
mov
adc
gs
xchg
in
ljmp
idivl
dec
ja
xor
cmpsl
push
inc
sub
push
out
dec
add
sbb
sti
mov
push
mov
arpl
leave
mov
stos
xor
push
sbb
fstp
adc
or
jae
jecxz
in
jle
movsl
sti
jmp
mov
or
xchg
mov
adc
mov
adc
iret
inc
int
sub
pop
lcall
xchg
jnp
shll
jno
jp
mov
xchg
sbb
adc
loopne
mov
mov
pop
aad
lds
in
jp
scas
jae
add
addb
aad
jle
xchg
add
movsb
daa
inc
and
outsb
fbld
cmp
push
test
mov
js
adc
inc
xchg
mov
xchg
loope
adc
and
in
shl
jge
jl
and
fwait
das
xchg
jno
in
push
dec
mov
sub
cmp
ja
pop
and
pop
das
or
mov
xor
fdivrs
out
cld
ja
rcrb
xor
sbb
mov
mov
xchg
lock
adc
sbb
jge
xor
data16
jg
xor
jb
xor
mov
jge
jp
xor
arpl
pop
fcoms
push
add
pop
addr16
inc
test
movl
ficomps
jo
imul
pop
test
xor
mov
xchg
and
cltd
dec
and
ficomps
je
pop
sbb
mov
sbb
ja
mov
and
mov
mov
sbb
adc
stos
je
pop
fldt
jp
push
adc
popa
int
or
outsb
xor
add
pop
push
mov
imul
stos
jg
mov
mov
inc
push
sbb
cmc
fdivs
cmpsl
mov
mov
das
sbbl
jae
insb
push
and
cmpsb
inc
mov
daa
jno
dec
and
dec
gs
adcb
mov
xchg
rcrb
mov
add
js
xor
ficoms
out
cmp
xor
adc
cmp
xchg
scas
push
cmp
je
inc
pop
cmpsl
mov
and
cltd
add
lods
xchg
inc
add
push
or
sti
push
enter
in
leave
add
mov
xor
inc
imul
push
pop
or
testb
rcll
or
mov
ret
or
mov
filds
pop
xlat
mov
pop
or
das
cmp
pop
mov
mov
jo
addr16
ret
addb
or
imul
scas
dec
and
pop
mov
lahf
xor
lods
mov
pop
xlat
inc
orl
xchg
sbb
jge
out
xchg
loop
push
in
cmpsb
cltd
pop
add
icebp
mov
mov
add
aas
int
or
xcrypt-ecb
cmpsl
jecxz
lcall
push
jge
jle
adc
jnp
rol
gs
add
dec
mov
mov
sbb
xchg
fnsave
aaa
lret
or
lods
fmul
inc
sub
lods
imul
daa
fstl
and
in
mov
ja
aaa
pushl
xorb
outsl
jne
gs
adc
adc
mov
cmp
fsubl
daa
or
enter
cmp
flds
orb
cmp
cmp
popa
mov
jp
pushf
jo
mov
adc
movsl
cli
xor
pop
pop
sbb
dec
mov
js
stc
mov
int3
out
out
gs
or
mov
push
push
fsubrl
adc
iret
mov
fildll
ficoms
pop
sub
mov
aad
arpl
daa
mov
ret
sub
jns
fwait
lcall
pop
data16
fildl
movsl
testl
mov
aaa
adc
outsb
sub
outsl
pop
mul
cmpsl
arpl
pop
popf
stc
outsl
je
scas
or
mov
push
xchg
push
jns
jne
pushf
cmp
fcoms
push
xor
or
pop
mov
mov
fs
mov
dec
aaa
daa
mov
lret
mov
jno
xor
scas
inc
mov
adc
xchg
and
or
cmc
insl
out
jecxz
out
shlb
aam
xchg
pop
rol
loope
sti
inc
dec
ret
divb
stc
sub
and
sub
pop
add
sbb
bound
cwtl
xor
sbb
testl
insl
add
icebp
mov
aas
ds
add
add
imul
dec
shrl
and
cmpsb
fisttpl
cmpsl
push
mov
jg
mov
dec
adc
call
stc
and
pop
scas
movl
mov
pop
xchg
mov
cltd
mov
nop
jge
and
sbb
addr16
je
in
add
jecxz
daa
and
aas
push
and
ja
mov
mov
sub
aaa
inc
jo
in
insl
filds
jmp
jns
dec
sub
or
rorl
pusha
mov
adcb
inc
mov
fisubl
inc
call
test
fucomip
aas
fimull
sbb
add
cld
mov
jbe
stos
fstps
fisubrl
arpl
pop
ret
sti
and
mov
cmp
adcb
xor
mov
fcmovb
xchg
and
jne
sbb
inc
mov
xor
jmp
xchg
dec
mov
mov
test
xchg
mov
mov
or
mov
push
add
movsl
sti
sub
leave
nop
dec
test
cwtl
jne
pop
cmp
jbe
enter
push
jns
jbe
xor
adc
xchg
fsubrs
mov
testl
sbb
cmp
adc
cmp
fxch
fdivr
popa
xor
push
outsb
cmp
adc
xchg
movsb
or
pop
pop
outsb
test
dec
fisttps
int3
mov
push
xor
mov
aaa
jne
fildl
xchg
sub
stc
jnp
sub
xor
mov
add
mov
sub
xchg
outsb
rcrl
sbb
add
cli
sub
fimuls
sub
adc
enter
xchg
pop
fistpl
pop
jecxz
cmpsl
jmp
ja
enter
repz
jno
xor
xor
test
mov
jb
pop
fcoms
out
sub
and
sti
sarb
sbb
xor
mov
addr16
sarl
add
repz
jp
mov
sub
in
jecxz
mov
cmp
outsl
andl
sub
fwait
pop
add
sub
outsb
subb
inc
and
out
push
mov
scas
xlat
and
in
fisttpll
sbb
mov
dec
xchg
outsl
in
and
lock
imul
dec
mov
cmp
movq
mov
not
push
fsubrs
ja
insb
lea
popf
sub
shrl
and
xchg
sbb
and
mov
push
cmp
xor
int3
pusha
cs
xor
or
das
popa
adc
fwait
xor
mov
and
loopne
js
mov
sbb
int
mov
or
inc
adc
pop
or
sbb
ja
push
shrl
xor
or
ficoms
test
mov
mov
jnp
push
push
insb
out
daa
outsl
imul
outsb
inc
ljmp
push
inc
dec
inc
add
cmp
cmc
jecxz
imull
push
cmc
pop
adc
ss
xchg
mov
sbb
je
jge
divl
jnp
pop
cmp
mov
gs
mov
dec
aam
add
frstor
xor
pop
jo
xchg
sbb
inc
mov
int3
int
xchg
mov
cltd
sti
fidivs
push
js
mov
pop
pop
push
mov
jg
mov
sub
dec
sbb
pop
pop
inc
mov
jne
test
jns
fsubrs
xor
push
sub
pop
mov
xchg
mov
adc
mov
dec
lret
xchg
inc
cwtl
sbb
out
push
or
adc
adc
test
add
loopne
xchg
imull
popa
test
pop
fldt
push
mov
inc
imul
inc
fwait
shrl
cmp
fistpll
mov
dec
movsl
scas
jmp
cmp
mov
jge
push
or
shll
mov
lock
sbb
add
pop
nop
sub
outsl
add
push
adc
mov
jge
mov
jae
add
push
bound
jmp
or
int
and
popf
out
pop
inc
stos
adc
ret
jno
arpl
out
jl
addr16
mov
or
adc
push
scas
jmp
jge
in
xchg
cmp
adc
mov
mov
ficoml
push
add
mov
outsb
cmp
adc
popa
dec
dec
and
xchg
jbe
fidivs
push
popf
xor
in
mov
jmp
inc
mov
sbb
fwait
adc
js
into
fsub
scas
jb
mov
sub
fnstsw
lock
push
shld
das
add
and
and
dec
pop
fdivrl
fnstsw
ds
jnp
fbstp
mov
sbb
faddl
push
or
rcll
jo
mov
enter
aad
xchg
inc
ret
cmp
lds
scas
push
cmc
jmp
repz
movsl
cmp
adc
mov
jg
mov
push
mov
sbb
gs
dec
mov
xor
ficoml
or
add
xlat
movsb
outsb
insb
sub
jge
pop
jmp
outsb
jecxz
lock
or
mov
or
fildll
pop
and
test
fisttpll
jg
and
sbb
data16
sub
mov
xchg
sti
cltd
xchg
out
adc
loopne
ret
add
pusha
das
arpl
loopne
dec
cmp
adc
adc
push
xchg
fs
shrl
stos
pop
stos
loopne
xchg
mov
push
push
xchg
add
xchg
inc
mov
jnp
cmp
int
add
es
jne
sub
and
andb
fcoms
sbbl
fwait
ja
and
add
jp
mov
inc
mov
or
sbb
bound
js
imul
inc
and
mov
push
pop
fldt
and
dec
sbb
mov
xor
jge
pop
and
outsl
lret
cs
repz
jo
test
mov
adc
inc
mov
leave
pusha
xchg
sarb
lods
add
shlb
shlb
test
adc
mul
leave
loope
scas
or
pop
jne
mov
xchg
arpl
fbld
push
popa
mov
mov
jmp
movsb
insb
cli
adcl
push
and
jecxz
xor
xchg
jecxz
and
or
repz
and
push
xchg
scas
add
loope
test
cmp
jae,pn
test
ror
inc
sbb
cmp
in
cmpsb
je
fldenv
popa
jl
xor
lcall
sub
mov
jg
adc
fcmovnbe
mov
adc
std
cmc
lret
fisttpll
sub
cmp
mov
sbb
pop
in
movsb
pop
mov
stos
jae
mov
adc
int3
push
push
mov
jnp
and
mov
nop
and
inc
xchg
pop
out
mov
push
test
jb
mov
pop
aas
sarl
movaps
rorb
shrl
and
and
cs
imul
inc
adc
inc
cmp
xlat
ss
push
imul
add
inc
ret
cmp
int
jg
xchg
insl
adc
lea
or
cmp
andl
jp
aaa
xchg
stos
cwtl
addb
add
or
faddl
pop
jae
repnz
ret
sub
mov
push
insb
mov
xchg
add
push
or
pop
sub
jmp
fldcw
jne
cli
das
jns
in
pop
aad
push
cmp
ss
stos
cmp
pop
jo
xchg
dec
in
jbe
sub
imul
stc
xorb
dec
in
or
push
dec
stc
and
or
push
pop
jnp
inc
ja
inc
scas
popa
jne
add
xor
inc
imul
cmp
add
loop
lret
lahf
mov
movsb
mov
mov
mov
cwtl
mov
jg
sti
pop
fs
and
nop
bound
movsl
loope
jmp
pop
imul
sub
jg
icebp
or
lea
pop
jle,pn
xchg
sub
dec
jg
outsb
popa
and
shll
sbb
pop
js
mov
or
or
add
jo
outsb
arpl
add
cwtl
sbb
jb
aas
cmp
cmpsb
loope
cs
and
jg
insl
xor
imull
test
test
mov
add
aaa
jle
outsl
stos
xor
adc
rorb
pop
loope
add
sbb
ficoms
repz
xchg
lret
cs
cmp
jmp
pop
rorb
push
jns
add
pop
mov
inc
lods
pop
ja
push
test
sub
jecxz
mov
or
loope
xlat
arpl
lods
add
jns
vpmaxub
xlat
dec
in
and
or
inc
test
bound
xchg
lds
test
lcall
pop
pop
inc
adc
xchg
sub
adc
das
push
sub
jne
sbb
lock
sub
jmp
push
ret
movsl
sar
lock
ficoms
cmc
int3
loope
mov
or
dec
xchg
push
fs
mov
dec
cmp
fsubs
xchg
sub
into
jns
sahf
fildl
movsl
pop
aad
sub
testl
cmp
mov
fs
mov
sbb
popf
mov
xorb
jl
adc
add
adc
sbb
lds
mov
xchg
xchg
adc
adc
mov
inc
subl
xchg
mov
loope
adc
push
xchg
push
or
push
and
out
or
sub
fidivl
jnp
sbb
add
cmp
addl
mov
inc
aad
jno
icebp
scas
xor
negl
push
pop
jecxz
ja
sub
aas
scas
call
shrl
ret
pop
xchg
out
fwait
pop
je
xchg
and
jns
add
adc
mov
arpl
daa
or
push
mov
fisttpll
push
pop
ljmp
adc
adc
adcb
jmp
jge
fnstenv
mov
cmc
outsb
fucomi
loopne
jecxz
lods
lods
mov
adc
out
sbb
mov
std
fwait
sarb
push
or
lea
push
fsts
loopne
mov
mov
xchg
mov
xor
xor
cmc
dec
and
std
sub
les
ja
mov
and
ljmp
mov
cmp
pop
push
test
pop
imul
lods
stos
mov
xor
jns
jo
test
mov
out
es
cmovbe
sbb
xor
jecxz
inc
repz
frstor
fucomp
xor
push
xchg
sarl
fmull
mov
repz
dec
and
sub
loope
aad
ret
fistl
xchg
dec
hlt
data16
xlat
xlat
mov
ljmp
push
lods
fwait
das
mov
aas
js
push
xor
subb
imul
aaa
outsb
push
jb
scas
out
pop
add
popf
jo
pop
aaa
arpl
push
adc
xchg
out
insl
in
jge
add
ja
lods
dec
movsb
dec
int
mov
sbb
adc
js
enter
jmp
mov
gs
inc
ret
mov
cmp
cmp
mov
movsl
sub
xor
sub
mov
bound
mov
jg
fldcw
jecxz
pop
fsubrs
enter
xchg
mov
roll
xchg
lret
jecxz
bound
jg
adc
adc
dec
sub
popa
or
dec
sub
add
test
mov
pop
cltd
rorl
sub
movsb
ret
adc
push
loope
and
sbb
cltd
imul
imul
loop
jne
mov
xchg
xor
jge
test
loope
fisubrl
add
dec
rclb
xor
push
cmp
fistpl
add
mov
bound
or
mov
fisttpll
enter
out
mov
inc
jecxz
das
jmp
shlb
sbb
xchg
jnp
adc
das
inc
xor
inc
sbb
adcl
adc
aaa
or
in
outsb
loope
ret
add
lcall
inc
add
mov
jno
mov
cmc
lahf
dec
cmp
add
iret
inc
cmp
sti
dec
pop
aaa
jo
in
inc
xchg
iret
lods
daa
aam
cs
gs
shll
cmp
add
or
and
dec
fnstcw
mov
loope
cmp
sbb
xor
leave
jbe
sbb
push
xchg
inc
ret
dec
adc
lahf
or
adc
adc
push
inc
or
scas
cmp
add
add
cmp
lahf
push
push
xlat
outsl
mov
enter
or
sbb
movsl
sbb
sub
or
sbb
rcrl
data16
clc
popa
mull
jge
daa
mov
cmp
jle
or
das
or
out
add
xchg
mov
xor
or
dec
add
outsl
idivl
sbb
inc
ja
push
bound
mov
jmp
push
inc
cmp
sbb
daa
push
push
jo
fmul
pop
or
jne
add
push
dec
push
add
adc
sub
mov
mov
sub
dec
mov
and
or
dec
push
js
add
or
push
dec
and
pop
mov
mov
dec
or
or
or
or
in
sbb
sahf
daa
cld
or
cmp
out
push
pop
and
or
popa
or
mov
hlt
loop
popa
sub
pop
in
insb
out
xchg
psubw
sbb
or
aad
testl
jns
sahf
jbe
xlat
jne
adc
add
pop
xor
sti
ds
and
ljmp
or
out
sbb
cmc
in
xor
and
add
js
push
fisttps
out
inc
inc
or
imul
outsb
xor
mov
popa
pop
sbb
cmc
or
add
ret
or
js
repz
and
test
mov
stos
mov
subl
addl
imul
popf
dec
and
dec
sbbl
or
data16
and
mov
jne
insl
cli
hlt
negl
fs
pop
push
add
mov
pop
mov
push
out
inc
and
pop
outsb
inc
cmpb
cld
mov
sbb
arpl
imul
pop
es
dec
xchg
inc
dec
ficomps
mov
inc
pushw
add
xor
jae
push
inc
inc
mov
jmp
add
js
data16
loopne
mov
daa
jbe
cmp
sub
inc
addb
mov
or
add
mov
outsb
xorb
dec
inc
repnz
sub
inc
inc
in
ja
sarb
test
push
arpl
inc
frstor
pop
addl
outsb
imul
mov
inc
inc
cmc
add
dec
dec
push
add
mov
lock
inc
and
adc
sub
sahf
push
xchg
loop
bound
xchg
call
mov
data16
scas
xorb
insb
inc
push
xor
push
daa
jmp
xchg
push
push
push
js
jmpw
and
inc
mov
inc
andl
arpl
in
inc
push
ljmp
imul
inc
cmp
sbb
daa
ljmp
jecxz
jo
dec
pop
jg
cld
add
cmp
fdivrs
jae
dec
dec
fcmovbe
ret
and
mov
shlb
cwtl
xorb
mov
add
pop
loope
sbb
mov
mov
cmp
lret
sti
cmp
dec
adc
imul
ds
push
sahf
sbb
push
int
mov
je
notb
fs
das
fdivp
or
daa
push
add
stos
inc
sarb
dec
add
fndisi(8087
test
and
lcall
lods
mov
sub
fisubrs
inc
push
ss
movl
inc
ja
lock
sub
xor
fwait
or
xchg
ret
push
lcall
setle
pop
test
stos
xlat
dec
push
std
sti
mov
jne
and
dec
jg
rorl
mov
es
pop
mov
inc
push
inc
idivl
xor
popa
sub
push
outsb
divl
push
add
push
daa
cmp
repz
mov
sbb
push
in
daa
mov
jb
push
inc
rcrl
cltd
inc
and
shl
clc
push
shl
scas
std
sbb
push
or
in
pop
loope
loopne
and
int3
inc
sbb
add
into
push
rclb
pop
or
ja
jnp
jg
rorl
mov
sbb
enter
test
jl
mov
inc
push
aam
inc
jae
pop
fisttpl
xchg
int3
bound
mov
mov
xor
enter
in
lea
sbb
sub
dec
mov
inc
jb
bound
cwtl
xchg
dec
int
gs
addr16
lods
dec
or
imul
mulb
xchg
inc
adc
insb
inc
mov
jge
pop
adc
es
adc
push
push
push
fbld
out
pusha
lret
add
imul
stc
or
mov
sub
rcrb
push
ficomps
orb
mov
xor
data16
add
adc
insb
add
jle
je
arpl
dec
inc
fsubr
dec
arpl
push
xchg
xor
pusha
in
mov
sbb
inc
lods
adc
daa
fisubl
push
nop
aaa
sbb
scas
mov
inc
inc
sti
jo
jnp
add
or
mov
adc
push
jb
adc
ss
daa
and
mov
adc
add
add
in
dec
test
js
aam
addr16
mov
inc
das
js
in
jnp
lock
inc
adc
pop
jne
inc
pushf
cs
fwait
mov
xor
inc
push
jbe
bnd
push
jb
pop
inc
lods
xor
add
add
fcmovne
cmp
pop
inc
jmp
out
inc
loopne
aad
pop
es
add
dec
dec
out
out
ret
or
push
in
and
in
or
sub
bound
xor
fimull
add
mulb
lcall
pop
icebp
add
ljmp
in
out
iret
push
les
push
out
or
aaa
adcb
inc
pop
mov
imul
fisubrs
es
shll
cmp
add
mov
insl
xchg
ret
mov
sti
mov
loope
sbb
sbb
add
pop
mov
xor
adc
outsb
in
les
pusha
sub
and
xor
push
or
xchg
popa
lds
leave
fcmovne
xchg
jl
jo
or
add
sbb
inc
or
fiadds
loope
ds
imull
sbb
cmpb
iret
add
test
mov
es
out
mov
sbb
loop
add
shll
jno
push
xlat
loop
shrl
loope
call
inc
dec
dec
push
push
nop
call
add
outsb
inc
divl
icebp
sub
inc
scas
add
call
sub
shrb
add
ret
loop
cmpsb
add
mov
adc
aad
jns
popl
xlat
jb
push
add
fprem1
adc
xlat
hlt
jno
lcall
inc
test
mov
adc
sub
push
sti
mov
push
push
addb
adc
add
add
add
sti
add
and
pop
loope
dec
or
dec
jno
data16
sbb
add
push
mov
rcr
and
inc
popa
pushf
out
add
pop
int3
mov
sbb
sub
fldl
loope
aaa
pop
out
fs
test
mov
cs
ljmp
or
add
icebp
or
cmp
add
loope
inc
adc
xchg
jbe
adc
or
clc
cmp
pop
scas
and
fmuls
adc
enter
daa
cmp
icebp
outsb
test
or
mov
imul
jl
int
xor
mov
push
push
sbb
insb
dec
andl
fidivs
jbe
add
add
or
loope
jmp
addr16
pusha
sbb
and
loope
sbb
mov
repz
dec
mov
push
hlt
mov
arpl
adc
out
mov
imull
test
lret
out
or
movsl
repz
loope
cs
mov
dec
cmp
nop
lcall
pop
inc
cmp
or
ja
add
mov
push
cmp
mov
dec
pop
xchg
sahf
addb
es
jl
push
push
inc
dec
push
jge
mov
test
add
sub
insl
xor
imul
mov
gs
outsb
pop
aam
lods
xor
inc
js
cli
sahf
popa
adc
adc
inc
jg
andl
push
cmpl
imul
jmp
push
popa
nop
xchg
add
outsb
mov
jo
sbb
mov
dec
dec
and
stos
add
mov
or
or
cmp
add
jbe
bound
outsb
mov
cwtl
pop
sbb
enter
loope
adcb
xor
xor
dec
cs
sbb
sarl
call
ja
pusha
ret
gs
int
out
pop
fsts
xchg
loope
xor
int3
xor
negl
daa
mov
sbb
fdivs
popa
cmc
or
mov
and
nop
add
imul
mov
in
mov
push
jmp
lds
cmp
fldl
lods
adc
sub
xor
jno
push
add
adc
cmpsb
xor
mov
lods
cmp
inc
cmc
mov
cmp
add
xor
add
fcomi
jge,pt
xlat
stc
cmp
push
xchg
inc
jo
rolb
or
mov
lea
xchg
inc
mov
push
insb
push
mov
jmp
sub
insl
or
or
sub
push
xchg
add
lea
mov
pop
inc
pushf
inc
push
cmp
mov
jae
inc
stos
jne
xorl
insl
pop
fwait
lret
dec
fstps
inc
pop
cld
jnp
jo
nop
adc
mov
hlt
xchg
jl
jno
or
push
pop
push
pop
adc
shl
stos
in
mov
xor
sbb
imul
sub
push
insl
cmp
or
mov
cltd
rolb
testb
outsb
push
adc
dec
hlt
xchg
incl
imull
cld
mov
aad
jnp
cmp
xchg
and
imul
imul
icebp
std
mov
test
sbb
lcall
jo
in
pop
or
dec
inc
push
and
es
in
aad
push
and
pop
mov
ja
push
movsl
inc
and
dec
inc
adc
mov
push
pop
or
inc
jl
adc
add
in
shlb
add
test
sbb
aam
out
js
mov
inc
cmp
inc
dec
or
xchg
add
ret
pop
xchg
pop
outsl
pop
popf
add
ret
and
ja
and
pop
push
sbb
addr16
pop
mov
dec
mov
mov
out
call
out
push
cwtl
in
dec
movsb
imul
inc
or
adc
push
push
pop
shr
push
push
in
xchg
js
outsb
xor
adcb
pop
popf
cmp
mov
jle
ja
jmp
mov
mov
hlt
mov
push
push
stc
ljmp
mov
push
jge
in
in
test
mov
inc
jmp
sbb
add
iret
outsl
mov
loopne
adc
add
mov
push
imul
dec
push
add
arpl
add
jno
pop
fldl
mov
jl
pop
mov
jmp
or
and
sahf
outsl
mov
adcl
cltd
push
dec
inc
test
out
movsb
or
loopne
out
loope
push
pop
push
pop
pop
mov
lds
stos
jnp
mov
jecxz
mov
mov
inc
rcrb
loope
stos
mov
sub
xor
cmp
jge
push
jle
push
or
cmpb
mov
dec
test
mov
ja
leave
scas
add
in
or
adc
leave
pop
push
rorl
push
pusha
rorl
orl
mov
add
arpl
ja
cmp
or
and
jg
inc
xchg
int3
xor
inc
adc
cmp
pusha
cmp
push
je
push
push
cmp
popl
xor
loop
sbb
pop
xlat
arpl
fstpt
bound
scas
add
lods
mov
cmp
xor
stos
pop
push
lods
js
lods
push
push
and
arpl
or
aaa
push
lret
or
mov
flds
push
adc
arpl
xor
push
pop
cmp
iret
dec
xchg
inc
loopne
inc
xchg
add
mov
sbb
jp
in
repz
xor
push
rcll
or
push
xchg
sub
and
mov
mov
mov
mov
dec
dec
jmp
or
sbb
pop
aad
add
sbb
xchg
mov
add
lea
pusha
sbb
mov
cli
sbb
cmpsl
inc
cmp
mov
ja
rorb
xchg
sub
dec
push
xchg
push
add
pop
repz
mov
add
jno
das
shrb
gs
xor
roll
push
fs
inc
xchg
adc
dec
addl
pop
xor
pop
mov
js
fs
add
shlb
mov
add
adc
mov
xor
or
inc
push
xchg
mov
icebp
js
mov
mov
icebp
ret
cmp
lret
aaa
mov
jg
adc
push
push
rcll
cmpsb
das
imul
or
inc
jmp
pop
pusha
nop
es
sahf
addr16
lods
jnp
and
dec
std
mov
aad
mov
and
jne
and
or
leave
call
inc
fsubrs
and
in
xchg
push
pop
sbb
or
or
mov
test
dec
push
lahf
adcb
and
pop
mov
cs
scas
and
and
mov
push
push
xchg
into
jecxz
out
adc
out
xor
pop
nop
xchg
aam
jbe
sbb
adc
ds
jnp
push
out
jge
sar
cmp
pushf
sbb
pop
mov
fs
or
jl
mov
push
push
ds
orb
rol
dec
jle
ret
dec
ret
shr
add
sbb
push
cltd
js
adc
loope
or
das
add
add
cmpsl
inc
sbb
add
or
loope
popa
cld
dec
lods
push
lret
jecxz
xchg
push
out
lret
pop
cmp
mov
pop
push
dec
inc
testb
faddl
xchg
bound
out
into
sbb
pusha
jg
daa
movsb
data16
or
xor
rorb
mov
mov
and
dec
push
call
mov
xchg
jmp
mov
xor
cmpsb
add
sbb
or
xor
fdivrp
mov
scas
inc
subb
dec
push
lds
mov
shrl
ja
xchg
push
inc
orl
nop
push
mov
aam
clc
les
jnp
cltd
xorb
cwtl
sub
outsb
bound
push
popf
rcrb
xchg
inc
mov
mov
mov
inc
rcll
mov
arpl
push
nop
dec
mov
push
add
int
sub
xor
mov
push
xor
insl
mov
test
or
dec
stc
push
push
dec
mov
push
inc
jmp
inc
insl
push
adc
dec
and
cmpsl
popa
fwait
pop
sbb
pop
inc
imul
addr16
xor
sbb
sbb
in
daa
jp
fstpt
adc
or
pop
push
daa
dec
or
xchg
popa
sub
sbb
ffreep
xor
subb
sbb
sbb
repnz
stc
sti
mov
aad
or
mov
mov
or
pushf
or
loopne
jo
or
orl
or
sbb
xlat
jns
or
xlat
ret
inc
or
scas
inc
or
push
inc
cs
or
sbb
sub
daa
popa
jns
scas
jecxz
ja
div
sbb
or
leave
mov
cltd
or
or
inc
sub
dec
fiadds
movsl
xor
lahf
roll
in
add
pop
imul
adc
sub
or
popa
xchg
jbe
addb
mov
daa
dec
dec
dec
xor
xchg
adc
xchg
test
cmp
xchg
dec
jno
dec
dec
shrl
pop
adcl
fwait
push
mov
sbb
daa
sub
lea
dec
sbb
sbb
daa
dec
dec
jl
mov
add
inc
push
xorb
fsubs
xor
nop
push
cmpb
xchg
ja
add
movsl
sbb
mov
sub
sub
or
sub
jae
xor
loopne
test
xor
sub
xor
pusha
mov
lcall
and
dec
xchg
sub
add
out
stc
hlt
dec
cmp
or
and
dec
inc
sbb
js
call
daa
inc
int
cmp
in
and
push
mov
insb
test
mov
push
sbb
and
ja
add
scas
pop
sbb
das
jae
popa
add
fdivl
push
lods
fbstp
xor
fmul
popa
sub
aam
sub
ret
aam
add
and
sub
xor
cmp
dec
sbbb
popa
dec
cmpsl
gs
mov
mov
push
push
cwtl
mov
sbb
pop
pop
adc
test
jae
pop
mov
outsl
adc
or
sub
pusha
in
mov
movsl
cmp
adc
adc
or
adc
jnp
adc
adc
imul
sub
outsb
dec
pusha
add
pop
adc
adc
jno
jnp
dec
pop
imul
or
fistpl
pop
insl
pop
sbb
fsubr
mov
jl
repz
cmpb
jo
xchg
adc
push
xchg
or
jl
or
fidivs
push
loopne
enter
outsl
add
dec
pop
inc
sbb
test
inc
sar
loop
aaa
test
mov
ds
cmp
cmp
dec
dec
xlat
inc
sub
cs
push
lods
gs
test
inc
pop
nop
incl
lds
and
std
sub
xchg
sub
cmp
jne
outsb
mov
cmpsl
popf
push
dec
xchg
aaa
sbb
nop
pop
test
jg
repnz
cmp
mov
adc
inc
pop
mov
jecxz
out
add
mov
inc
adc
pop
xlat
into
ss
ficompl
imul
push
jae
sbb
aas
in
mov
mov
xchg
pop
and
cmp
add
popf
fsub
inc
cmpsl
mov
hlt
ss
mov
repnz
movsl
and
and
loopne
dec
push
lds
mov
jnp
mov
push
setae
cmp
fisubrl
mov
sahf
fimull
push
mov
xchg
cmc
inc
in
sub
pop
sbb
aaa
push
fsubl
nop
and
sub
and
sub
sub
inc
cmp
dec
xchg
addr16
in
mov
push
or
push
dec
popf
in
dec
sbb
mov
cmpsl
mov
push
shrb
inc
ret
roll
add
pop
mov
add
adc
jbe
pminub
add
dec
cmp
push
enter
push
xchg
test
push
fisubrl
mov
aaa
movsb
jne
pop
popf
fisubrl
jbe
popl
xchg
or
popf
daa
or
das
loopne
das
nop
mov
xor
dec
sahf
add
mov
roll
mov
sbb
aaa
in
test
out
aaa
fistpl
aaa
in
aad
in
sbb
pusha
pop
xor
pop
and
mov
mov
scas
popf
inc
dec
dec
push
push
push
push
ja
shrl
xchg
aaa
jno
pop
mov
jl
xorb
or
in
and
mov
fsqrt
iret
or
push
cwtl
movsb
mov
fnstcw
dec
adc
lret
lea
and
sahf
xor
mov
sub
mov
outsb
push
or
xchg
dec
inc
mov
xchg
cwtl
xor
test
sub
jmp
test
in
add
je
dec
cmp
insb
outsb
inc
mov
push
jb
je
arpl
pop
mov
mov
adc
insl
imul
or
jns
gs
push
imul
sbb
jo
inc
js
fwait
adc
cltd
testb
outsl
fs
dec
popa
outsb
or
jne
pop
add
adc
mov
je
sbb
test
outsb
xchg
mov
inc
outsl
jb
popa
je
push
and
fldl
dec
inc
xchg
and
fstpt
outsl
inc
outsl
insl
jo
je
outsl
outsb
push
jp
rorb
xchg
inc
adc
and
pushf
sbb
daa
and
loopne
sbb
pop
imul
sarl
enter
loope
dec
stc
rclb
addr16
outsb
lahf
dec
gs
xor
mov
sbb
jne
stos
push
dec
or
scas
sbb
sbb
es
and
inc
gs
arpl
or
add
mov
in
xchg
arpl
cmp
mov
mov
pop
addr16
ja
push
pop
andl
push
lcall
ja
cmpb
cmp
dec
ss
pop
mov
push
adc
mov
outsb
sub
scas
cmp
mov
jbe
mov
pop
popa
jae
aam
ficoml
xor
sbb
push
popa
pusha
pop
jnp
fstl
xor
je
jle
jae
jle
pop
push
arpl
dec
outsb
outsw
lea
pop
push
hlt
inc
outsl
js
add
push
idiv
push
int3
xchg
jno
cmpsl
hlt
xchg
mov
mov
pushf
sti
and
ja
ljmp
clc
loopne
xchg
jo
arpl
sbb
gs
ret
inc
testb
outsl
jns
hlt
push
xor
dec
lret
mov
xchg
sbb
es
call
dec
sub
sbb
jae
push
push
imul
add
dec
add
or
lock
xor
roll
lock
testl
cmc
pushf
mov
mov
push
push
add
lock
add
push
lock
fcomi
add
add
repnz
prefetch
or
lock
push
cmpsb
std
mov
add
or
aam
lock
fsub
ret
mov
in
cs
mov
sbb
push
addb
out
aaa
popa
add
mov
add
inc
outsb
loopne
dec
ljmp
mov
loopne
mov
add
add
inc
and
addb
fwait
insb
fcmovnbe
add
nop/reserved
push
cmp
imul
ret
sarb
cmp
jle
enter
add
inc
dec
inc
inc
enter
mov
push
add
das
fisttps
inc
inc
push
inc
ss
fidivrs
push
outsb
in
inc
rolb
xchg
enter
add
leave
fwait
pusha
shrl
dec
popa
add
rorb
pop
inc
movsb
dec
inc
fisubrs
leave
repz
dec
add
jae
dec
jbe
scas
dec
lret
movsb
cwtl
sarb
and
xchg
lock
and
add
add
add
add
add
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
