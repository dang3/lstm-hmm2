xor
xor
add
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
mov
add
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
movl
mov
mov
mov
push
mov
push
call
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
call
movl
mov
mov
mov
push
mov
push
call
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
call
call
mov
mov
mov
push
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
call
pushl
pushl
call
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
movl
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
pushl
pushl
call
movl
mov
mov
mov
push
mov
push
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
movl
mov
mov
mov
push
mov
push
call
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
movl
mov
mov
mov
push
mov
push
call
call
pushl
pushl
call
call
movl
mov
mov
mov
push
mov
push
call
mov
pop
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
cmp
xor
cmp
aaa
add
add
add
in
add
pushl
pushl
call
call
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
call
call
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
call
pushl
pushl
call
call
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
pushl
pushl
call
pushl
pushl
call
mov
mov
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
pushl
pushl
call
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
mov
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
pushl
pushl
call
movl
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
mov
pop
ret
add
add
add
add
cmp
xor
xor
xor
xor
add
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
aaa
add
add
add
add
lea
push
mov
add
mov
mov
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
mov
cmp
je
jmp
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
xor
divl
test
jne
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
mov
mov
jmp
mov
xor
divl
inc
imull
mov
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
mov
mov
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
mov
cmp
je
jmp
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
pop
ret
mov
push
mov
add
mov
cmp
je
jmp
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
mov
sub
mov
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
push
mov
mov
xor
call
mov
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
mov
mov
mov
call
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
push
mov
mov
xor
call
mov
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
mov
movb
movb
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
lea
mov
push
add
jmp
mov
mov
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
lea
mov
push
mov
jmp
lea
mov
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
mov
add
mov
mov
call
mov
mov
add
mov
mov
movzwl
mov
add
add
mov
mov
push
mov
mov
mov
call
mov
mov
mov
cmpl
je
push
mov
mov
mov
xor
call
mov
mov
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
mov
cmpl
je
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
lea
mov
mov
cmp
jae
mov
lea
mov
mov
mov
incl
decl
jne
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
movzwl
dec
test
jl
inc
mov
movl
mov
lea
mov
cmpl
je
mov
mov
mov
lea
mov
add
mov
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
mov
add
mov
call
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
jmp
mov
mov
mov
lea
mov
mov
call
add
mov
incl
decl
jne
push
push
mov
call
push
mov
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
sub
add
add
mov
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
lea
pushl
call
mov
pop
ret
mov
push
mov
add
mov
mov
mov
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
mov
cmp
je
jmp
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
mov
mov
mov
mov
call
mov
mov
movzwl
dec
test
jb
inc
mov
movl
mov
lea
mov
mov
mov
lea
mov
add
cmp
jbe
xor
mov
jmp
mov
lea
mov
cmpl
je
mov
lea
mov
cmpl
je
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
add
mov
mov
call
mov
jmp
mov
lea
mov
mov
mov
lea
mov
cmp
jae
mov
mov
mov
lea
mov
mov
call
add
jmp
mov
mov
mov
lea
mov
mov
call
add
incl
decl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
mov
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
mov
mov
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
mov
movl
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
mov
call
push
mov
push
mov
mov
call
mov
mov
mov
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
pop
ret
lea
push
cmp
testb
pop
sbb
addl
pop
cmpb
cmpb
insl
jb
jae
sbb
dec
subb
jp
dec
insl
andb
sbb
dec
subb
jp
pop
insl
jbe
sbb
jg
subb
jbe
subb
sbb
pop
jbe
dec
insl
cmpb
insl
jbe
insb
sbb
test
xorl
jg
sbb
sbb
test
jbe
insl
sbb
sbb
sub
sbb
jg
sbb
sbb
inc
movsb
lcall
sub
movsl
push
lock
repz
lock
xchg
leave
inc
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
inc
pop
sbb
pop
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
repz
push
dec
fsubl
mov
mov
push
movsb
fcmovnu
sahf
pop
sbb
sahf
pop
sbb
lcall
mov
iret
dec
test
push
jecxz
pop
inc
dec
movsb
push
jecxz
pop
and
push
jecxz
dec
pop
movsb
push
jecxz
pop
and
jecxz
pop
aaa
dec
movsb
push
jecxz
pop
cmp
push
decl
push
jecxz
dec
push
movsb
push
jmp
push
sub
sbb
movsb
pop
out
mov
jmp
mov
jmp
fwait
sbb
sbb
rcrl
int3
sbb
sbb
push
jmp
sbb
sbb
push
movsb
pop
pop
sbb
decl
push
jecxz
dec
daa
mov
add
and
movsb
push
pushf
xor
adc
movsb
sbb
jmp
movsb
pop
or
jmp
movsb
push
movsb
pop
or
jmp
movsb
pop
or
jmp
movsb
push
imul
pop
sbb
shld
sbb
lock
dec
movsb
push
add
push
jecxz
dec
xor
cmp
sbb
mov
lret
pushf
fistpl
dec
movsb
push
jecxz
dec
xor
push
sti
pop
pushf
push
notl
movsb
push
negl
push
movl
jae
sbb
xchg
lock
push
jmp
pop
inc
sbb
jmp
jecxz
pop
aas
mov
fists
pop
sbb
pushf
fistpl
dec
movsb
push
fisttps
push
jecxz
dec
push
sbbl
sbb
test
movsb
push
jecxz
pop
cmp
push
jecxz
dec
inc
sbbl
sbb
test
movsb
push
and
push
jecxz
dec
inc
movsb
inc
rep
jbe
sahf
xchg
aaa
sbb
lock
xor
data16
lcall
fcomi
std
movsb
testb
sbb
sahf
pop
sbb
jnp
and
sub
mov
sbb
sbb
loop
ja
sbb
insb
cvtpi2ps
add
sbb
sbb
pusha
sbb
sbb
fldt
xor
add
add
sbb
inc
shlb
add
sbb
add
mov
or
add
mov
sti
and
sbb
sbb
sbb
out
push
insb
sbb
pop
xchg
mov
mov
add
sbb
pushw
movsl
or
int
sub
pop
add
lock
add
lock
in
fdivrl
frstor
sbb
mov
lock
icebp
lock
jecxz
enter
movsb
lcall
lock
and
sbb
fsts
and
sbb
fsts
sbb
movsl
push
hlt
movsl
inc
hlt
mov
sbb
push
hlt
fwait
outsb
hlt
sbb
fsts
sbb
lock
repnz
xchg
movsl
sbb
sbb
push
hlt
sbb
movsl
push
cmc
movsb
inc
out
movsl
pop
sbb
hlt
mov
lock
push
cmc
movsl
push
cmc
xor
fsts
sbb
push
hlt
fwait
outsb
hlt
sbb
fsts
sbb
push
hlt
sbb
movsl
push
cmc
sub
movsl
inc
hlt
and
lock
sub
movsl
inc
hlt
and
sbb
sbb
movsl
push
hlt
movsl
fwait
pop
jnp
sbb
movsl
push
cmc
movsl
inc
repnz
sbb
push
hlt
fwait
outsb
hlt
sbb
movsb
testb
pop
sbb
decl
push
lock
mov
pop
lock
sbb
sub
mov
sub
movsl
push
and
sbb
test
sbb
sbb
sub
mov
movsl
fwait
pop
jnp
sbb
mov
movsl
fwait
pop
jnp
sbb
pop
sbb
sbb
mov
movsl
inc
out
mov
sbb
mov
and
sbb
pop
sbb
test
sbb
sbb
movsl
push
out
movsl
fwait
pop
jnp
sbb
icebp
movsl
push
icebp
push
dec
faddl
and
inc
push
loop
pop
ret
lea
push
mov
add
mov
mov
cmp
je
jmp
movb
mov
cmp
ja
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
ja
mov
mov
mov
cmp
jne
mov
mov
movb
jmp
incl
cmpl
jne
mov
mov
pop
ret
mov
push
mov
add
mov
xor
mov
xor
mov
mov
cmp
je
jmp
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
mov
call
mov
mov
cmpl
ja
mov
mov
mov
mov
cmpb
jne
mov
inc
call
test
je
movb
mov
mov
mov
call
mov
mov
mov
mov
mov
incl
incl
cmpl
jbe
mov
pop
ret
mov
push
mov
add
mov
mov
mov
push
mov
push
call
mov
mov
mov
pop
ret
nop
push
mov
add
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
push
call
mov
lea
mov
subl
movb
movb
movb
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
mov
mov
call
mov
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
movl
lea
mov
subl
mov
mov
call
mov
cmpl
je
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
mov
mov
call
mov
cmpl
je
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
lea
push
push
mov
sub
push
mov
push
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
cmp
je
mov
subb
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
xor
add
mov
xor
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
incl
mov
cmp
jne
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
mov
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
push
mov
push
call
cmpl
je
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
push
mov
pushl
xchg
push
jmp
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
mov
pop
ret
add
add
outsb
add
insb
add
add
add
add
add
add
add
in
add
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
movb
mov
mov
mov
sub
add
mov
mov
add
cmp
jne
pushl
push
push
jmp
add
sub
and
cmp
jne
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
cmpb
jne
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
movb
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
push
call
mov
mov
mov
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
jmp
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
movb
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
mov
mov
pop
ret
add
popa
add
add
jae
add
je
add
add
add
add
in
add
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
call
test
jne
mov
jmp
movw
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
call
mov
pop
ret
mov
push
mov
add
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
movl
mov
mov
mov
push
mov
push
call
call
call
movl
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
call
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
pushl
pushl
call
call
mov
mov
mov
push
call
pushl
pushl
call
call
call
call
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
pushl
pushl
call
call
pushl
pushl
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
pushl
pushl
call
call
mov
mov
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
pushl
pushl
call
mov
mov
mov
push
call
pushl
pushl
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
call
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
call
call
mov
mov
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
push
call
mov
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
movl
mov
mov
mov
push
mov
push
call
call
call
movl
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
call
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
pushl
pushl
call
call
mov
mov
mov
push
call
pushl
pushl
call
call
call
call
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
pushl
pushl
call
call
pushl
pushl
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
pushl
pushl
call
call
mov
mov
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
mov
mov
mov
push
call
pushl
pushl
call
mov
mov
mov
push
call
pushl
pushl
call
lea
cmp
ja
mov
mov
mov
lea
lea
mov
xchg
mov
mov
xchg
lea
mov
add
lea
xchg
sub
inc
call
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
call
call
mov
mov
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
call
xchg
cmp
js
mov
xchg
and
inc
xchg
mov
inc
mov
mov
lea
xchg
xchg
mov
mov
lea
inc
mov
pop
ret
add
xor
cmp
xor
add
add
add
add
add
add
add
add
add
add
xor
cmp
aaa
add
add
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
cmp
cmp
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
xor
aaa
add
add
xor
xor
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
cmp
xor
xor
xor
cmp
xor
add
popa
add
add
jae
add
je
add
add
add
add
and
inc
mov
push
mov
add
pushl
pushl
call
call
call
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
movl
mov
mov
mov
push
mov
push
call
call
pushl
pushl
call
jmp
lea
lea
mov
mov
mov
xchg
inc
lea
xchg
mov
mov
lea
mov
xchg
mov
pushl
pushl
call
call
mov
mov
mov
push
call
call
movl
mov
mov
mov
push
mov
push
call
mov
lea
sub
mov
lea
lea
dec
jne
mov
sub
lea
mov
add
lea
mov
mov
xchg
mov
lea
sub
movl
mov
mov
mov
push
mov
push
call
mov
cmp
je
xchg
lea
xchg
mov
sub
mov
and
mov
inc
mov
mov
mov
mov
mov
mov
inc
dec
mov
mov
mov
push
call
call
mov
mov
mov
push
call
mov
mov
mov
push
call
cmp
jo
mov
sub
sub
lea
xchg
cmp
js
lea
lea
mov
mov
sub
mov
lea
add
dec
jne
add
lea
xchg
inc
mov
mov
mov
push
call
cmp
jbe
mov
and
lea
mov
xchg
lea
lea
lea
lea
lea
add
inc
xchg
lea
add
lea
lea
mov
mov
mov
push
call
call
mov
pop
ret
xor
cmp
xor
add
add
add
add
add
add
add
add
cmp
cmp
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
cmp
aaa
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
xor
cmp
xor
cmp
xor
add
add
xor
add
add
subl
jae
mov
xchg
cmp
jb
lea
xchg
mov
sub
mov
lea
lea
inc
xchg
add
xchg
mov
xchg
xchg
lea
mov
mov
lea
call
cmp
je
add
xchg
lea
sub
mov
lea
mov
inc
and
lea
mov
lea
xchg
mov
mov
mov
ret
sbb
pop
int3
jae
xchg
sub
push
fidivrl
je
inc
inc
outsb
cltd
mov
jns
pop
sub
adc
es
dec
xor
repz
sbb
inc
ret
sub
mov
adc
mov
lods
sbb
dec
xchg
aaa
adc
pop
or
mov
jne
xor
and
testb
enter
std
sub
mulb
cltd
or
inc
push
push
fdivs
pop
rclb
lcall
mov
add
out
xlat
cmp
push
jns
add
loop
jecxz
popf
loop
jb
arpl
mov
imul
sti
dec
xchg
inc
sbb
ds
fs
shll
dec
stos
arpl
pop
jle
push
and
loope
and
xchg
cmp
pop
repnz
bound
movsb
out
aaa
cmpb
jae
fstpl
dec
pop
dec
pop
mov
jae
iret
inc
pushf
stos
cmpsl
or
mov
or
cmp
xchg
dec
fistl
lods
les
insl
in
sub
sarl
inc
test
cmpsl
add
les
lret
mov
sahf
sarb
insb
insl
mov
popf
pop
sbbb
inc
pop
aam
outsl
sub
push
push
push
sahf
cld
xor
jnp
bound
cmp
mov
jo
push
fldenv
mov
mov
adc
add
or
push
ret
int3
pop
outsb
inc
and
mov
xchg
int3
insl
cwtl
out
call
repnz
jbe
mov
pusha
jle
dec
inc
loop
pop
dec
cmc
test
mov
mov
addr16
cwtl
es
adc
xlat
adc
sub
add
stc
pop
push
mov
and
pop
push
mov
cltd
sbb
xor
inc
int
in
outsl
dec
jle
pop
inc
cmp
ja
and
aaa
add
ja
lfs
jecxz
cmp
mov
and
call
mov
fcmovnu
jo
data16
aad
loopne
dec
cmpl
mov
inc
lea
hlt
xor
mov
inc
xor
push
in
inc
mov
push
cmp
fidivs
xchg
bound
cs
or
add
inc
aad
mov
jp
sbb
pop
cmc
pop
clc
jnp
sub
mov
mov
dec
mov
repnz
lret
pop
inc
ret
into
push
mov
lcall
fmul
xor
jne
lods
lods
in
ret
pop
push
cmp
in
mov
xchg
fs
lods
sub
jae
pop
nop
push
je
into
frstor
mov
push
pop
xchg
jae
aad
dec
jmp
inc
test
or
jae
dec
shlb
sbb
gs
mov
clc
add
out
xor
push
and
pop
ss
jl
cmp
or
or
out
lret
adc
mov
aad
xchg
jg
punpckhbw
das
in
je
in
std
xchg
js
push
sub
pushw
push
iret
and
pop
inc
data16
inc
ret
jle
loope
sbb
loop
sbb
and
xchg
roll
aad
scas
xchg
in
clc
mov
lcall
lahf
in
fwait
jp
subl
inc
mov
out
scas
mov
fisubs
dec
mov
sub
pop
mov
out
mov
mov
repnz
testb
inc
push
in
xorb
stos
shrb
bswap
fnstcw
pop
cld
push
sbb
mov
call
cmp
stos
inc
xor
rorl
xlat
inc
cmp
dec
add
dec
cltd
stos
bound
add
int3
fldt
fimuls
pushf
ss
outsb
add
and
imul
cmp
insb
in
and
sbb
add
mov
ret
sti
pop
xchg
jae
and
lahf
sbb
cmp
cmp
inc
mov
jb
in
pop
and
lret
xchg
fstl
rorb
sub
daa
mov
cltd
int3
mov
aaa
popf
add
xlat
stos
popf
das
xchg
mov
push
xlat
test
dec
jg
push
fmull
ja
or
inc
aaa
and
lcall
iret
jb
test
fstpl
mov
fcmovu
adcl
int
sbb
xchg
push
mov
pop
mov
mov
imul
and
dec
dec
add
shll
nop
jmp
iret
push
fmulp
in
dec
movsl
adc
fldt
das
call
les
lcall
mov
xchg
pop
insl
jbe
ret
int3
mov
inc
fldl
mov
fcoml
aam
mov
sbb
adc
mov
outsb
jbe
mov
into
lea
ror
fimull
adc
pop
push
out
imull
inc
jmp
and
lahf
lods
rolb
jne
pop
mov
imul
js
dec
test
lret
jnp
loop
xor
or
in
and
inc
jae
mov
adc
pushfw
sbb
subl
mov
pusha
outsl
in
test
jg
ljmp
xorb
out
mov
jle
bound
popa
test
dec
int
jg
pusha
add
out
in
gs
aam
mov
mov
adc
std
pop
clc
xor
inc
cmp
pop
repnz
mov
lret
xor
bound
xchg
int
and
push
pop
out
dec
js
shl
testb
inc
negl
call
imul
sbb
inc
fs
leave
pop
inc
pop
ret
addl
mov
dec
lret
sub
sarl
jmp
stos
mov
adc
insl
push
mov
xor
cmp
cmp
cmp
jp
stos
mov
dec
mov
int
adc
insb
cwtl
inc
add
adc
fimull
movsb
sub
cltd
frstor
add
pop
xchg
xchg
pop
test
inc
pop
movsl
outsb
push
mov
sarb
mov
push
xor
idivl
inc
xchg
pop
jecxz
mov
cli
or
fbstp
adc
lods
ss
das
mov
lahf
pop
int3
out
int3
test
cli
sub
repz
add
jmp
or
mov
dec
int
int3
aas
popf
bound
mov
sub
pusha
hlt
es
inc
pop
out
aaa
aaa
xchg
inc
inc
cmp
dec
sarb
clc
and
or
popf
les
mov
out
fsubrs
or
into
testl
sub
sub
push
shrb
xor
push
idivb
push
fsubrs
imul
popf
inc
xor
cli
popa
sti
lea
out
mov
hlt
int3
adc
adc
aaa
popf
push
pop
inc
insl
or
push
jl
fwait
and
andb
in
pop
aam
adcl
adc
mov
mov
test
push
jmp
and
sbb
inc
inc
dec
lock
push
sbb
stc
cli
push
enter
loop
push
mov
dec
mov
xchg
ss
add
mov
mov
leave
mov
sti
rolb
pop
out
jmp
cwtl
outsl
dec
mov
sub
pop
out
fwait
jae
mov
bound
mov
adc
sub
test
les
test
fdivl
mov
push
pop
aad
jge
movl
sbb
push
pop
inc
out
rorl
in
or
mov
pop
out
repnz
or
lcall
push
mov
divl
inc
xchg
push
int3
lods
rorb
add
gs
adc
mov
fidivl
sbb
bound
cmpsl
xorl
pop
or
mov
fsubrs
cmpsb
into
mov
jo
push
sub
mov
sahf
cld
stos
insb
dec
push
shlb
ret
sarl
inc
mov
push
xchg
bound
dec
outsl
and
outsb
andw
aas
lock
jmp
data16
inc
popa
dec
adc
xor
les
or
dec
das
rclb
mov
and
push
ret
pop
mov
js
cwtl
adc
mov
mov
int
jmp
adc
lahf
pusha
idiv
ss
jl
or
dec
jbe
cmc
imul
or
dec
mov
loopne
pop
xor
inc
mov
mov
int3
nop
daa
sub
xor
xchg
xchg
pop
cs
in
dec
or
adc
arpl
jle
aaa
aaa
aaa
in
pop
xor
and
mov
loop
cmp
iret
mov
pop
clc
stc
xchg
jg
shll
adc
mov
or
iret
fnstcw
dec
cmpsb
and
and
scas
xor
fstps
sahf
aaa
lea
pop
ret
lret
xor
inc
mov
shlb
cli
or
xor
int3
aaa
xchg
gs
add
pop
and
movsb
aas
add
daa
sbb
adc
imul
int
int3
jbe
or
push
xor
push
aam
js
ss
les
lret
js
fdivrl
add
aaa
pop
out
and
push
mov
ret
sbb
mov
repnz
les
imul
insl
sbb
fcmovu
add
sub
loopne
dec
sbb
dec
dec
aas
dec
shrl
cli
pop
mov
stc
push
or
push
pop
sub
mov
dec
cmp
cmpsl
cmp
cmp
pop
adc
js
mov
pushf
xor
jo
rcll
scas
xchg
or
adc
xchg
stos
repz
test
add
xchg
inc
xlat
pushw
clc
insb
lds
call
emms
cmove
lods
push
imul
cmp
out
pop
je
xchg
xor
gs
les
pop
push
xor
sub
sbb
call
sub
sub
add
das
dec
or
sub
mov
sub
popa
xchg
push
push
repnz
bnd
or
mov
or
jg
scas
sti
iret
dec
push
xchg
and
jbe
pop
nop
sbb
ja
push
mov
xchg
mov
fucomip
jmp
movl
fdivrl
test
iret
ret
fwait
cmp
mov
pop
sbb
cmp
cmp
pusha
lock
ja
sahf
stos
test
mov
or
int
es
cmp
xchg
lock
enter
push
xor
rcrl
cmp
inc
add
pop
insb
arpl
add
stos
pop
aad
loop
data16
add
negl
fisubrl
add
mov
or
xchg
cmp
pop
stos
aam
ror
jae
xor
mov
pop
sahf
enter
xor
cs
mov
rcll
pop
xor
lahf
adc
ret
pop
pop
and
outsb
pusha
outsb
dec
push
ljmp
xchg
jle
inc
mov
cmp
test
mov
pop
pop
xlat
or
sarl
mov
inc
cmp
mov
xor
int
lret
sub
nop
out
ljmp
ret
loopne
cmp
addr16
mov
test
mov
mov
pop
jo
arpl
cwtl
jns
pop
jb
mov
push
cltd
xchg
sub
fnstsw
pop
cmp
adc
js
les
flds
neg
sbb
aad
pop
adc
cltd
rcll
push
inc
push
inc
in
ja
jns
leave
pop
mov
xchg
mov
fwait
out
ja
mov
in
flds
lea
daa
push
scas
lods
rcr
mov
and
and
hlt
or
jbe
stos
xchg
xor
andb
mov
jno
imul
les
andl
cmp
es
in
cmp
add
lock
fimuls
fldz
lods
mov
dec
clc
mov
push
fdivrl
xchg
shrl
sub
stc
mov
add
cmpb
aad
test
add
xor
pop
push
push
xor
xor
sub
out
mov
adc
call
cld
in
loopne
xchg
outsl
repz
xchg
or
fnstsw
lcall
jg
pop
sarl
mov
sub
and
sbb
fistpll
jae
in
cs
inc
fsubrl
lods
lods
es
leave
repnz
in
dec
cltd
mov
mov
mov
repz
or
jb
aaa
test
dec
mov
fistpll
mov
std
and
mov
imul
lds
sub
mulb
mov
outsb
shll
lret
sbb
add
cs
lret
jns
std
mov
mov
adc
in
call
dec
repnz
pop
iret
jp
jo
sbb
cwtl
add
xor
enter
push
pop
out
push
fmull
faddl
sub
fsubs
test
in
dec
xor
in
sub
pop
sbb
inc
xchg
mov
fidivrs
lods
fistpll
jmp
addl
pop
test
fdivs
scas
jge
insb
mov
lds
mov
lcall
jge
jb
mov
gs
inc
in
rcll
test
int
xorps
add
mov
and
ret
out
loopne
add
scas
pop
cltd
cld
dec
jmp
xor
sbb
ljmp
push
das
fldt
fcomp
xor
ret
lret
adc
push
ljmp
mov
mov
pushf
aaa
out
xor
xlat
insb
inc
lret
cmpw
gs
cmpsl
imul
ret
movsl
cmp
xor
mov
push
loopne
shl
push
mov
or
dec
cli
push
jb
xchg
sbb
je
cmpsl
dec
out
mov
gs
imul
sbb
mov
dec
repnz
sub
outsb
xlat
arpl
outsl
push
fs
mov
lock
sbb
movsl
leave
dec
sub
cmc
es
or
les
lret
xchg
sbb
ja
add
dec
adc
aaa
out
or
push
daa
frstor
das
enter
inc
idivl
lds
cmpsl
push
sub
repz
sub
push
int3
pop
outsl
je
xchg
aam
cltd
jno
stos
ja
out
add
jbe
negl
jle
rcr
dec
movsb
stos
inc
or
xor
sbb
fistl
push
push
mov
mov
imul
pop
negb
cmp
fistl
push
out
enter
xor
andl
nop
nop
jo
push
lods
jo
and
aad
xor
rorb
push
in
rep
or
popf
sbb
test
addb
dec
jae
fcomip
imul
idivl
cltd
mov
mov
xor
cld
adc
mov
mov
stos
addr16
ss
inc
mov
adc
sahf
push
push
xchg
call
sbb
inc
inc
push
xor
and
push
jmp
jbe
jle
jnp
cltd
loopne
test
pop
adc
cmp
dec
add
fnstcw
or
int
push
rcll
scas
mov
or
adc
js
in
sahf
inc
jo
test
daa
mov
dec
in
ss
ja
sub
xchg
xchg
js
and
mov
pop
mov
adc
cld
rol
add
cmpsl
mov
pushf
cmp
jb
ret
in
sub
lret
adc
repnz
sbbl
add
add
mov
xor
inc
mov
dec
ror
pop
jp
add
ljmp
lock
push
xchg
cmpsl
lret
xchg
aaa
and
sbb
xchg
xchg
adc
nop
mov
cmpb
mov
es
or
mov
dec
insl
or
push
loope
jle
pop
aas
sub
jns
cmp
movsb
and
std
dec
xchg
in
leave
pop
aam
rorl
imul
in
mov
pushf
in
add
std
out
inc
test
push
shlb
fnclex
inc
stc
xlat
fidivrl
inc
inc
popf
xchg
pop
push
cwtl
lcall
es
cmpxchg8b
dec
push
rolb
in
out
xchg
jne
repz
fwait
pop
adc
nop
xor
test
inc
push
enter
mov
in
mov
pop
xor
outsl
rorl
adc
cmp
dec
cli
lahf
into
xchg
push
push
jmp
test
mov
mov
pop
cld
lret
out
sub
lock
ret
aaa
shl
xor
or
mov
jns
popf
jmp
lret
fdivrs
and
ret
mov
and
jge
dec
sbb
pop
adc
in
mov
and
data16
jnp
popa
nop
or
outsl
mov
mov
push
add
mov
addr16
mov
xor
sarl
arpl
test
mov
je
inc
cltd
popf
shll
repnz
pusha
push
cmp
ficomps
ss
cmp
inc
lock
in
and
cmp
and
mov
dec
test
lret
mov
pop
sub
out
lea
ret
fiaddl
call
jmp
lcall
dec
fildll
hlt
jne
push
test
push
icebp
in
or
and
add
leave
inc
sbb
xor
push
mov
add
gs
xchg
shrl
and
push
pop
adc
cwtl
test
add
es
rcl
bound
mov
fsubrs
in
mov
pushf
outsl
pop
aaa
out
mov
shll
fwait
lcall
roll
sbb
insb
sbbb
push
sbb
sbb
stos
adc
sub
out
sahf
sbb
xchg
cmpsl
adc
jne
adc
pop
xchg
loope
bnd
mov
mov
cmc
cmp
dec
sub
mov
loop
cmp
ljmp
sbb
mov
popf
out
pop
inc
mov
fcomp
fs
push
aam
daa
mov
fs
or
sub
pop
nop
adc
xchg
add
cmp
jo
clc
out
jg
cmp
cmp
mov
fs
pop
mov
je
and
sbb
repnz
imul
adc
in
or
mov
mov
iret
or
stos
lods
es
aaa
or
sbb
popf
sub
push
iret
xor
std
dec
sarb
or
mov
inc
mov
movsb
mov
ljmp
cld
push
je
mov
xor
ret
rcrb
add
mov
sbb
mov
xchg
in
aam
lock
jge
nop
popa
out
xchg
pop
jae
and
xchg
aam
mov
cmpl
jbe
mov
sbb
xchg
add
sti
inc
pushf
sahf
cmpsb
jae
adc
ja
add
ljmpw
xor
push
jecxz
mov
enter
xchg
lahf
aad
mov
mov
loopne
ret
out
and
leave
test
repz
test
and
gs
mov
std
adc
das
arpl
push
or
stos
pop
mov
or
dec
adc
fistpll
dec
lds
mov
ret
mov
shr
push
xchg
cmp
adc
rorl
adc
aad
lock
ja
jmp
fimuls
jge
fs
test
mov
adc
imul
adc
outsl
iret
mov
out
stos
jbe
mov
push
imulb
xor
arpl
addr16
fs
mov
cmp
imul
push
test
in
pop
iret
stc
push
mov
add
mov
dec
sbb
sbb
loope
icebp
mov
mov
test
scas
xor
fsubrs
jge
sub
pushf
push
ljmp
imul
inc
mov
int3
inc
fisttps
js
test
cmp
push
mov
mov
ret
mov
repz
pop
xchg
mov
and
pop
xor
mov
repnz
icebp
mov
xor
or
std
xor
mov
jmp
jg
nop
sub
enter
mov
stos
test
jno
xchg
sub
rclb
xchg
xlat
ss
xchg
pop
mov
cli
dec
mov
xchg
ja
aad
movsb
inc
or
outsl
jge
mov
insl
lds
pop
cltd
cltd
int3
imul
les
test
or
inc
shll
add
push
shlb
int3
inc
call
fs
hlt
sti
sub
cmp
cli
fistpl
aam
lock
push
cmpl
jecxz
stos
cmp
and
loop
inc
fnsave
pusha
call
or
cltd
clc
std
aad
in
cld
cmc
inc
jecxz
int3
insb
mov
mov
aam
lcall
mov
inc
adc
popf
lods
mov
xor
adc
mov
out
push
addr16
rolb
push
jmp
mov
shl
rorb
aam
outsb
mov
int3
mov
jmp
sti
sub
dec
in
cmp
rcrl
jmp
adc
jecxz
cmpsb
mov
mov
outsl
movsb
jecxz
mov
sbb
jl
pop
adc
or
xchg
mov
mov
adc
mov
popf
pop
fs
xchg
jp
mov
setne
cmpb
je
pop
lret
cmp
mov
mov
into
ds
dec
push
jno
sub
fwait
scas
fists
or
lods
notl
fistl
or
lret
sbb
jns
insl
cwtl
inc
pushf
add
jle
xor
inc
sub
das
fisttpl
mov
jno
and
xchg
stos
push
sub
jecxz
pop
and
jae
push
inc
cmp
dec
pop
inc
sti
cmp
adc
sub
mov
aam
push
lcall
loope
sbb
xor
cmc
add
fsubp
pop
bound
cmpsl
sub
aaa
cmp
add
fidivl
cltd
inc
ret
std
dec
jle
rorl
adcl
xchg
lcall
in
jb
sub
daa
push
cmp
pop
mov
mov
vcvtsd2si
dec
dec
out
not
loope
pop
jle
lods
insl
push
in
and
xchg
cmp
gs
adc
jg
lea
add
lret
arpl
mov
cmpsb
jo
or
in
cmp
pop
ja
repnz
loop
std
out
nop
loop
dec
adc
lret
fdiv
pop
mov
inc
test
mov
jnp
mov
pop
fmuls
arpl
mov
jp
mov
ret
mov
call
ljmp
sub
jle
pop
nop
mov
icebp
dec
test
and
lahf
shr
jge
ljmp
sti
nop
nop
adc
push
mov
sbb
jns
subb
dec
jp
and
stc
shll
lcall
sbb
and
fimuls
lcall
mov
imull
js
or
pusha
loopne
or
push
rorl
lods
setle
inc
jae
lahf
cmp
sbb
cmp
dec
or
gs
mov
pop
adc
xor
pop
xor
ret
mov
jle
mov
cmp
mov
pop
mov
push
mov
fisttpll
pop
mov
and
icebp
loope
mov
ss
in
mov
dec
jmp
and
aam
mov
push
insb
stc
sbb
mov
add
xchg
movsl
roll
mov
xor
dec
pop
aaa
xchg
cmpsb
jecxz
lea
pop
sub
inc
int3
or
int3
gs
rorl
or
mov
push
addr16
mov
lock
out
lods
mov
push
pusha
imul
jecxz
roll
fs
dec
xchg
adcl
sub
jge
pop
pop
xchg
dec
dec
jno
repnz
ret
mov
jo
sbb
mov
dec
push
cmpsb
push
outsb
fsubrs
xor
out
enter
nop
test
mov
cmc
push
sbb
and
adcl
pop
pop
sti
arpl
sbb
fsubs
imul
aam
out
cmp
push
adc
and
or
push
fcoml
dec
cmp
lds
arpl
cmp
dec
and
xchg
cmc
cmp
inc
aaa
mov
dec
push
push
inc
ja
scas
notb
orl
jb
mov
fildll
out
dec
sbb
jle
push
bnd
test
in
rorl
cmp
push
sbb
jmp
push
adc
mov
push
xchg
stos
push
imul
jnp
inc
cmpsb
push
jno
outsl
ljmp
out
and
adc
pop
mov
cmp
test
loop
fwait
mov
add
or
mov
outsl
out
icebp
aam
mov
or
lret
shrb
jg
pop
and
push
outsl
gs
dec
inc
jo
pop
mov
lea
loope
js
scas
ret
inc
leave
ja
add
inc
imul
push
mov
xor
cmp
and
data16
imul
repz
or
xor
shll
xchg
dec
jno
jg
add
into
mov
ss
add
xchg
scas
js
leave
insl
xor
ja
jle
mov
adc
stos
mov
push
pop
sbb
lds
scas
cmpsl
stos
mov
les
xor
push
test
in
inc
fiadds
xchg
ficompl
dec
jmp
outsl
add
iret
xor
sbb
xor
mov
outsl
out
adc
in
sub
adc
push
dec
clc
insb
mov
adc
jo
sub
jne
pop
push
pop
addr16
shl
add
dec
xchg
xor
fnstenv
rcll
daa
mov
xor
sub
test
mov
cmp
lea
inc
movsl
sbb
push
cs
stos
lahf
jle
loop
sbb
out
push
incb
popa
iret
push
ror
pop
cltd
jmp
add
fmull
push
scas
sub
cli
ror
xor
outsb
outsl
jns
mov
dec
cmpsl
sbb
mov
loopne
mov
lods
repz
lods
scas
loopne
fcmovnb
scas
movsl
xchg
xchg
ret
les
lock
xchg
loop
testl
int
sbb
adc
push
inc
and
rclb
adc
and
add
jbe
cld
cmpsl
push
mov
aad
cmpsb
test
insb
out
insl
or
dec
inc
adc
jmp
jle
xor
xor
popf
adc
lret
lods
popf
fwait
test
and
enter
cmovp
mov
jnp
xchg
xchg
mov
jmp
cmp
out
jns
shufps
mov
adc
lret
xor
lods
add
cmp
cwtl
negb
addl
push
and
fsubrs
int3
shrd
call
lds
test
pop
scas
or
push
iret
scas
inc
adc
cmpsl
add
mov
mov
jg
push
das
push
lea
push
jp
repz
out
pop
inc
xchg
mov
cmpsb
pop
xor
roll
leave
bound
aam
into
adc
imul
sbb
jp
xchg
std
ja
and
addb
jmp
test
fsqrt
cmpb
inc
negb
aam
mov
lret
add
in
add
loopne
pusha
add
cmpsl
dec
or
test
and
or
in
push
cmp
or
test
cmc
inc
stc
fs
lock
outsb
inc
cmp
cmpsl
pop
dec
orb
addr16
xor
mov
mov
add
scas
add
mov
popa
mov
subl
dec
fldenv
pop
popa
sub
lahf
pushf
push
ds
inc
lret
push
cli
push
out
adc
loope
mov
pop
or
testb
dec
testb
push
movsl
mov
stos
push
lods
dec
mov
fcoms
hlt
or
lret
mov
into
add
fisttpll
pop
cmp
and
mov
imul
imull
aad
push
call
sbb
cmp
push
outsl
jno
push
adc
sbb
push
gs
call
shr
imul
inc
outsl
adc
mov
cld
dec
repnz
sbb
sbb
dec
dec
jmp
in
xchg
das
lods
adc
adc
int
xchg
mov
xchg
sbb
sub
roll
mov
mov
outsb
dec
or
or
je
push
jo
jle
ret
pusha
sbb
inc
stos
shrl
pop
int3
dec
sahf
adc
and
push
jb
cli
cld
fimull
mov
call
cmc
mov
rclb
enter
imul
pop
and
mov
xor
cmc
cmpsb
mov
sub
mov
jg
pop
inc
popf
clc
out
popf
jae
mov
pop
mov
push
ja
inc
mov
jg
jp
out
rolb
mov
lds
fimull
popf
fadd
das
adc
xlat
in
out
xchg
in
lcall
pop
inc
jo
cmp
push
mov
mov
and
dec
in
fs
outsb
mov
mov
ret
jo
out
xchg
adc
inc
aas
decl
popa
inc
icebp
data16
push
ret
mov
inc
cmc
out
dec
sbbl
ljmp
fs
cs
aam
add
sbb
push
ret
leave
jno
dec
push
xor
lods
sbb
mov
sub
das
add
sbb
insl
or
mov
out
xchg
or
push
imul
cmpsl
pop
ret
xchg
stos
mov
pop
add
leave
inc
rolb
pop
imul
pushf
in
or
cmp
inc
add
loop
scas
in
pop
test
push
movsl
fiadds
xchg
adc
push
enter
push
or
push
inc
iret
out
popf
sub
sub
add
sbb
push
add
js
das
fwait
jnp
sbb
out
sbb
lock
lock
push
jne
lds
out
inc
xchg
stc
jle
popa
add
push
inc
out
mov
and
out
mov
notl
inc
scas
jle
sub
xor
ret
js
mov
stos
push
xor
pop
int
daa
mov
push
mov
cmp
imul
ret
cmp
mov
ljmp
push
andb
xchg
and
adc
adc
aad
inc
add
pop
pop
sti
fisttpll
jns
incl
jb
aas
push
stos
gs
in
push
inc
xchg
scas
xor
test
dec
cmp
clc
sbb
pop
int
jbe
in
push
cmp
icebp
sub
es
fstps
cmp
scas
pushf
xchg
xor
fcmove
mov
mov
push
dec
mov
and
test
adc
fs
xor
scas
stos
outsb
iret
in
gs
dec
mov
neg
xchg
mov
jmp
mov
icebp
mov
add
int3
sbb
and
jne
mov
in
incl
or
xchg
lret
mov
jg
lock
movsb
std
leave
sub
loopne
rcll
jae
mov
xchg
out
or
add
inc
or
fdivp
leave
repnz
mov
stos
inc
fidivl
arpl
sbb
out
lods
or
add
pushf
fimuls
mov
pushf
rol
xor
je
jno
sbb
inc
out
cmc
neg
mov
loopne
and
mov
and
push
out
sub
inc
dec
add
jmp
pop
and
jns
popf
popa
test
dec
and
and
fwait
addr16
sub
cmp
cwtl
sub
xchg
cmpsl
in
lock
xchg
xor
mov
jno
xchg
add
sbb
jp
lods
push
fisubrl
ja
cli
out
add
push
add
mov
jl
outsl
adc
xchg
arpl
pop
jne
popl
jns
push
dec
add
or
outsl
dec
outsb
cmpsl
or
xchg
mov
lods
out
or
cmp
lock
mov
push
test
xchg
jle
push
or
cmp
push
xor
and
cmp
js
shl
jg
jns
jle
inc
dec
sete
sarb
daa
imul
inc
sub
test
or
push
mov
jb
int3
dec
pop
add
mov
add
jbe
sub
push
pushf
fninit
jle
push
jae
xchg
ret
scas
imul
push
jecxz
flds
rclb
int3
cltd
pop
movlps
xchg
aas
test
jle
popa
xchg
dec
xor
sbb
and
adc
inc
add
jl
mov
insb
pop
es
fwait
cmp
adc
in
shll
xor
sub
xchg
cmovle
add
mov
mov
dec
dec
gs
jmp
sahf
lods
inc
lret
xchg
shll
scas
inc
in
dec
push
imul
push
sbbb
sub
push
loop
sti
xchg
roll
add
addb
mul
cmpsl
out
cmp
jle
cmpsb
push
xorl
cld
in
popf
or
add
shl
mov
mov
orl
repnz
add
xchg
test
test
scas
arpl
in
xlat
inc
shr
push
xchg
fcmovbe
jo
mov
and
adc
cmc
adcl
lds
imul
pop
and
sbb
mov
mov
ja
hlt
cmpsb
pop
test
pushf
push
out
sbb
or
jne
jae
aad
cmp
dec
mov
jp
mov
dec
pushf
inc
sbb
daa
orb
xchg
sub
jno
xchg
cmp
shll
push
or
pop
lret
mov
mov
mov
or
leave
imul
cltd
jno
pushf
cmp
push
test
les
frstor
jle
lods
lock
sarl
popf
cld
ja
jle
mov
or
loopne
xchg
push
sbb
pop
mov
adc
cmp
mov
je
xchg
data16
popf
cld
lock
jno
pusha
xchg
inc
addr16
mov
adc
lea
sbb
lcall
push
cltd
pop
xor
loope
movsb
mov
andl
subl
test
mov
pop
or
in
lret
mov
or
jns
push
sbb
or
lods
and
mov
test
pop
pushf
icebp
or
adc
gs
jge
sbb
pop
call
or
lea
jne
jae
or
mov
enter
jle
mov
inc
push
and
add
add
mov
addr16
mov
adc
cmpsl
or
repz
dec
data16
jmp
andb
testl
lods
dec
sbb
inc
jge
fcomi
pop
andb
ljmp
pop
js
gs
shlb
out
daa
xchg
xor
push
xchg
jbe
add
cli
pop
push
insb
and
and
andl
xor
cs
imul
push
ss
xchg
mov
sub
sbb
mov
jl
lahf
cld
ret
outsb
imul
push
repnz
gs
push
push
or
daa
xor
xchg
mov
ret
lods
je
pop
dec
mov
gs
popf
sub
inc
sbb
push
and
mov
flds
mov
xchg
repnz
mov
push
push
aam
pop
xchg
bound
in
xchg
mov
ret
inc
mov
in
das
jno
sub
sub
std
mov
inc
sbb
cmp
cmp
cmp
jae
loope
int3
mov
inc
jb
stos
mov
mov
scas
leave
or
push
inc
push
mov
pop
pop
jb
push
fldenv
sbb
jl
adc
lea
mov
push
mov
pop
mov
loop
std
push
xchg
fsubs
aam
dec
lea
or
out
sbb
aam
sahf
pop
jg
repz
fcmovne
movsl
lret
add
ret
pop
xor
mov
inc
adc
test
cmp
mov
xor
gs
out
mov
mov
mov
and
mov
fs
push
or
mov
jle
add
sub
xchg
das
cmc
push
rorb
mov
inc
xchg
out
jg
mov
std
leave
pushf
and
das
nop
adc
roll
test
xor
shr
es
or
add
mov
movsl
mov
icebp
jb
or
add
stos
imul
pop
andl
nop
aad
sysret
dec
pop
arpl
repnz
inc
dec
xchg
faddl
mov
movsb
xor
fbstp
rcll
sub
and
movsb
pop
hlt
pop
cli
shl
pop
mov
pop
iret
roll
add
nop
je
in
inc
dec
add
mov
rol
xor
aaa
mov
imul
inc
mov
inc
jge
test
jmp
adc
lahf
aam
adc
push
loopne
fsubl
cmpsb
dec
inc
pop
pusha
push
jg
lock
fdivrs
inc
cwtl
jb
lods
std
mov
xchg
mov
dec
mov
lret
push
xor
push
into
mov
popl
sahf
loop
mov
shrl
inc
push
and
vsubps
push
xlat
in
repz
popf
xchg
shrl
cmp
cmp
test
add
or
or
or
ds
mov
xchg
pop
cmp
aam
lock
push
outsl
xor
repz
sbb
jns
pushf
jae
std
mov
adc
nop
es
ljmp
pop
cmp
cmp
inc
dec
dec
xchg
sub
push
sub
sbb
fsub
stos
or
mov
sub
pop
adc
adc
pop
es
sub
shll
push
mov
pop
cld
jb
stc
in
mov
jns
mov
and
adc
movsb
mov
fs
push
adc
scas
cmpsl
lock
lcall
stos
jb
movsb
decl
inc
pushf
test
shrl
mov
iret
pop
xlat
push
sahf
fxrstor
cmpsb
ss
mov
sub
cmp
out
jnp
push
pop
xchg
xor
cmp
pop
repz
mov
fistpl
repnz
cli
add
out
lret
mov
sub
loope
gs
inc
fistps
hlt
bound
pop
jbe
test
add
push
cli
cmpsl
lock
out
xor
jmp
xchg
out
dec
or
hlt
push
cmp
es
popf
rclb
sbb
orb
outsb
divl
mulb
out
jmp
or
adc
sbb
jp
pop
mov
addr16
rcr
dec
jo
ljmp
stos
dec
leave
mov
push
jbe
movsl
mov
cmp
or
jbe
in
inc
pop
inc
xchg
imul
mov
xchg
mov
test
jle
cmp
push
jns
ficoml
cmp
mov
shll
cli
dec
jg
sub
out
mov
pop
push
repnz
loopne
xlat
push
xor
dec
lret
insb
mov
jl
cmpsb
ret
jne
popf
lods
in
fdivl
out
into
lret
xchg
lcall
pop
cmp
xchg
sbb
cmp
dec
and
add
out
sahf
add
mov
fistl
fadds
push
ss
adc
mov
mov
fmull
jecxz
pop
cld
stc
sbbl
jae
push
add
pop
push
cmpsl
popf
push
popf
pop
adc
stos
xchg
ja
mov
cwtl
mov
jmp
subb
out
enter
inc
sete
in
int3
mov
mov
lret
add
ret
inc
sbb
ret
popf
les
jp
xlat
xchg
enter
push
mov
pop
cltd
or
pusha
push
sub
push
lea
push
test
pop
imul
push
shrb
and
rorb
outsl
sbb
mov
and
mov
add
dec
push
ja
mov
clc
sbb
les
jp
ret
lods
sbb
jle
pop
movsb
scas
adc
mov
test
pop
int
ss
and
out
lods
fnstenv
adcl
lods
call
out
icebp
add
fisubl
xor
xor
mov
xor
addr16
sbb
pop
dec
push
xchg
pop
adcb
mov
test
xorl
jno
aaa
or
xchg
movsb
mov
fiadds
sub
adc
mov
adc
sub
or
or
out
xchg
mov
inc
pop
and
mov
inc
testb
insb
xor
jae
cmp
dec
ret
sbb
pop
lods
jae
test
and
adc
imul
jge
repz
and
and
mov
loopne
test
iret
or
lea
push
add
mov
push
dec
mov
push
adc
fxch
push
movsb
inc
dec
movsl
imul
or
mov
mov
push
cmp
sbb
stc
mov
movsb
std
stos
sub
jno
fistpl
mov
and
pushf
stc
cmp
jle
xlat
push
js
add
ret
sbb
insl
ret
movaps
test
aaa
and
jns
bound
stos
and
arpl
or
scas
xchg
push
push
dec
and
xlat
ja
shll
fsub
std
into
fidivs
sbb
and
test
cld
jge
push
shrl
orl
rolb
jecxz
xor
mov
push
negb
aas
pop
push
in
push
xor
sbb
filds
out
sbb
int
andb
xchg
daa
or
xchg
jg
cmc
cmp
add
sbb
cmpsl
cmp
and
mov
stos
insb
inc
dec
mov
mov
aad
pop
adc
dec
jb
xchg
adc
push
daa
xor
cmp
sub
hlt
leave
or
lods
jp
lahf
dec
dec
inc
xor
arpl
mov
sub
cmpsb
dec
in
imul
rol
test
adc
jl
es
rolb
outsl
aad
pop
sbb
jge
mov
xor
hlt
mov
shlb
sub
mov
std
jecxz
adc
mov
ret
push
sbb
sub
mov
inc
psubb
mov
lcall
mov
scas
int
leave
mov
mov
push
test
iret
mov
fdivrs
xor
xchg
into
xor
ja
in
and
fadds
inc
lret
mov
lret
mov
add
shlb
or
data16
dec
adc
xor
pop
fnsave
in
add
test
sbb
mov
fiaddl
cmpsl
xchg
add
cmpsl
sbb
push
pop
cmp
jb
jno
and
and
mov
mov
lret
std
adcb
test
push
add
and
lahf
outsl
in
ljmp
or
cmp
jne
cmp
lds
xor
sub
lods
mov
jg
scas
movsb
ror
inc
or
and
mov
mov
xchg
mov
jae
cmc
or
sub
pushf
inc
scas
mov
pop
inc
pop
jne
bound
pop
movsb
pop
mov
xchg
jge
xor
xor
shl
cli
mov
movsb
xor
push
test
mov
lahf
stc
and
scas
stos
sub
loopne
xchg
rol
jge
test
inc
ljmp
jno
lods
push
mov
push
inc
and
or
daa
sub
iret
pop
lret
sbb
mov
fwait
imul
add
pop
sbb
out
cmp
mov
and
mov
pop
pop
sbb
aad
in
mov
sub
clc
ds
cltd
cmc
sbb
repz
loopne
sarl
scas
sub
add
and
xlat
cs
mulb
sub
dec
lcall
and
jnp
iret
and
push
jge
xor
das
jmp
lahf
jae
ror
sbb
insl
xchg
in
xchg
out
mov
loopne
adc
into
pop
fnstenv
shll
sahf
pop
push
out
inc
cmp
cmpsl
adc
inc
inc
xchg
fs
dec
mov
addr16
mov
mov
sub
subb
or
push
push
ss
mov
xor
inc
popf
dec
mov
and
or
add
push
mov
pusha
out
test
and
add
aaa
lods
cs
sbb
pop
repz
data16
sub
inc
lea
jbe
movsl
xor
lods
sbb
cmp
adc
xchg
lods
xor
in
in
fcompl
push
inc
push
orb
jo
xchg
bound
lcall
and
outsl
mov
inc
pop
pop
sarl
inc
sub
adc
and
mov
imul
pop
lods
cwtl
and
inc
cli
popf
adc
cmp
cli
mov
shrl
sub
out
sahf
repz
shll
add
push
or
jo
andl
nop
mov
sub
loop
adc
or
xchg
nop
into
stc
mov
int
mov
iret
mov
in
js
mov
incb
ret
add
fadds
xchg
inc
pop
shrl
aam
mov
aam
push
adc
test
push
in
adc
sub
mov
mov
stos
jmp
sahf
aad
pushf
fldlg2
push
cmp
pop
xor
enter
xlat
and
adc
scas
pop
and
fcompl
push
push
std
xor
push
stc
jo
mov
fwait
add
cli
pop
adc
mov
and
in
pop
mov
aam
int3
mov
sub
aam
cmp
bound
out
or
xchg
mov
ljmp
repz
nop
sub
pop
xor
cmp
mov
lcall
test
and
xor
or
mov
lods
cwtl
pop
dec
sbb
pop
and
xor
jge
aaa
sub
test
mov
push
mov
imul
xor
mov
mov
orb
push
jp
scas
pop
lods
mov
jg
add
sub
or
js
push
fwait
inc
js
mov
push
and
and
sbbb
sub
inc
xor
insl
call
pushf
cmp
cld
adc
pop
dec
mov
into
add
sbb
dec
xor
push
mov
sub
negb
cmp
xchg
scas
mov
dec
jb
dec
jnp
pop
mov
test
add
loop
sti
adc
dec
hlt
cmp
mov
lock
ret
popa
cltd
loop
mov
pop
hlt
popf
fbstp
jp
ss
push
lcall
fscale
sbb
orl
sbb
lret
or
add
inc
jmp
lcall
push
cld
out
fiaddl
out
cmp
mov
sbb
nop
mov
sti
in
jae
xor
insb
mov
movsb
mov
dec
rcrl
mov
mov
push
inc
fistpl
push
lods
imul
mov
lea
je
cmpsl
shr
mov
push
pop
addb
dec
fprem
mov
add
mov
out
stos
xchg
xchg
or
push
stos
xchg
int3
mov
push
jne
je
xchg
cmp
dec
shrl
in
aam
iret
inc
cli
mov
pop
fucomi
paddw
jno
sahf
ret
mov
push
sub
outsl
in
cld
pushf
xor
cmp
je
mov
add
inc
dec
pop
push
sbb
dec
leave
mov
popf
jno
faddl
loop
es
iret
in
sbbl
add
add
mov
dec
ljmp
out
scas
add
movsl
sbb
xor
pusha
and
test
xlat
push
sbb
inc
out
adc
imulb
iret
xchg
gs
sbb
pop
lods
mov
add
or
pop
mov
jmp
jno
add
sbb
popf
enter
arpl
inc
es
lods
cmpsl
es
xchg
or
ret
jle
xor
inc
pop
xor
imul
add
int
push
repz
test
mov
scas
mov
scas
mov
pop
sbb
sub
inc
popf
and
and
mov
adc
adc
arpl
add
dec
fstl
addr16
lods
push
in
lea
pop
pop
xchg
aas
sbb
in
sti
jno
std
js
in
push
cmc
shlb
ljmp
lods
lret
xor
popa
test
xor
cmp
push
dec
pop
test
mov
pop
add
jmp
pop
nop
or
insl
std
push
ficompl
mov
arpl
subl
mov
mov
mov
pop
lahf
cli
mov
push
pop
test
adc
push
inc
push
adc
mov
int
xor
jp
or
pop
lods
mov
daa
adc
sahf
sub
or
push
xchg
test
adc
pop
jge
ret
sbb
jne
or
dec
xchg
loop
in
subb
xchg
mov
jb
inc
icebp
cmp
mov
push
pop
ljmp
pusha
imul
cltd
ljmp
mov
lret
jno
push
daa
lcall
add
out
cmp
js
xchg
out
mov
jnp
jmp
pop
ljmp
or
cmpsb
jmp
push
dec
dec
loope
cmc
dec
fmulp
push
sti
rcll
inc
addb
sub
dec
and
sbb
stos
ret
xor
orl
scas
pop
dec
sbb
sub
push
fisttpll
enter
fbld
fisubrl
in
ret
andl
enter
fimull
xor
or
jecxz
cmpsb
scas
or
pop
fs
inc
lods
cwtl
cmp
inc
scas
stc
and
sbb
push
or
pop
lcall
sar
push
jno
sbb
jmp
mov
ljmp
cmpsb
and
daa
mov
sub
push
add
cwtl
xor
or
ljmp
out
inc
xchg
gs
rcrb
jl
push
push
outsl
xor
push
or
cmpsb
inc
pop
jmp
into
jp
stos
inc
insb
adc
dec
push
gs
pop
popf
cltd
divb
fcmovbe
xchg
or
fmull
into
cmp
ret
mov
jg
mov
mov
and
pop
mov
jae
or
aas
cwtl
inc
xchg
adc
mov
push
mov
lea
pop
inc
push
into
gs
fcmovne
inc
pop
out
jmp
lret
adc
loopne
daa
sub
jmp
loopne
scas
stc
call
adc
inc
subb
test
out
xor
test
inc
sbb
outsb
xchg
ljmp
mov
fists
adcl
mov
push
dec
jbe
mov
mov
pushf
and
and
incb
mov
arpl
cltd
xchg
xor
test
lds
shr
cld
xchg
cltd
push
jmp
into
sub
repz
inc
fcmove
sub
xchg
cs
lret
mov
js
in
xor
cmpsb
sbb
mov
cmc
sub
in
popf
stos
jl
push
inc
scas
sahf
mov
mov
aam
xchg
sub
jp
dec
add
inc
das
les
ret
inc
and
daa
roll
les
movsl
lea
lret
sub
push
hlt
loop
push
outsb
leave
aas
les
lea
sbb
outsb
dec
fs
mov
xchg
ds
ds
mov
cmc
xor
paddd
push
mov
and
sbb
aas
mov
xchg
sahf
xorb
stos
in
sbb
jp
jmp
push
std
or
jb
js
add
pop
fst
in
stos
outsb
mov
and
aas
outsl
enter
mov
jp
mov
inc
into
jo
lods
test
test
bound
enter
and
push
stos
xchg
aam
lar
push
mov
leave
jp
mov
shlb
mov
ret
lods
push
notl
pop
push
inc
cmp
dec
sub
jmp
out
dec
or
stc
xchg
mov
mov
shl
lds
cmpsl
add
inc
test
ljmp
aad
jno
das
jle
mov
jmp
fsubl
cmp
push
movl
arpl
inc
mov
mov
sub
and
cld
inc
or
dec
bound
mov
adc
and
loope
push
xchg
cmp
int
jl
mov
mov
adc
sbb
push
dec
adc
jne
and
cld
sub
imul
jno
icebp
xchg
mov
loopne
mov
pusha
out
xchg
cli
test
aad
aam
or
and
aaa
mov
mov
outsb
addr16
pop
mov
pop
jae
or
loopne
dec
fcomps
xor
test
inc
adc
jo
std
gs
pop
inc
inc
imull
fiaddl
ss
pop
or
pushf
call
sbb
mov
shl
push
cmp
xchg
or
cltd
sub
pcmpgtd
imul
and
sbb
stc
imul
or
popa
or
lods
dec
sub
jbe
in
jae
cmp
shlb
xor
cmc
or
push
or
cmp
cmc
sarb
cwtl
leave
and
fldt
jns
add
fdivrl
cld
insb
ljmp
mov
gs
enter
cs
push
pcmpeqb
insl
aaa
movsl
loopne
jmp
ret
push
test
mov
enter
cmp
cmp
bound
pop
pop
das
jns
jge
stos
mov
mov
inc
fsubrp
pusha
les
mov
sbb
push
cld
jbe
iret
jnp
push
pusha
cld
xor
data16
clc
pop
sub
xor
adc
pop
mov
sbb
fnsave
pushf
pop
dec
hlt
addr16
insb
insl
and
std
jnp
mov
mov
icebp
test
aam
sub
push
jle
and
jp
arpl
ss
pop
je
sub
pushf
bound
outsl
faddl
push
daa
loopne
into
or
lock
cwtl
inc
js
mov
sbb
xor
pop
or
pop
cwtl
ljmp
mov
adc
aas
out
in
jmp
mov
cltd
aam
or
add
fiaddl
mov
fdivrl
jmp
add
and
sub
ss
sub
inc
ret
push
cwtl
jmp
or
mov
out
dec
in
lahf
ds
mov
pop
sbb
mov
fistpll
and
sti
adc
pop
pop
int
and
dec
pop
aam
ret
stos
icebp
sti
adc
push
pop
cmp
ja
leave
stos
xor
in
push
icebp
pop
xor
test
add
add
cli
or
sbb
popf
sub
push
adc
jns
push
rclb
pop
adc
xlat
rolb
loopne
outsl
pushl
ja
fmull
test
sub
cmp
pop
cld
jne
jo
negb
and
inc
mov
stc
mov
bound
dec
mov
cmp
fildl
pop
repz
pop
push
jo,pt
in
shl
andb
mov
push
scas
pop
xchg
dec
fwait
ljmp
popf
out
outsb
xlat
add
mov
and
cmp
xor
xchg
mov
push
shrl
mov
enter
cmp
xchg
dec
popa
add
sub
sbb
inc
sti
out
and
jb
sti
xor
ljmp
pushf
pop
and
mov
scas
xchg
sub
push
cwtl
andb
jns
jle
fmulp
psubusb
mov
push
lret
cmp
dec
xchg
mov
add
bound
adcb
movsl
sbb
push
jmp
xor
inc
mov
cmp
xrelease
andl
pop
push
call
arpl
cmp
rol
pop
adc
lret
in
push
int3
and
mov
cld
lea
xor
xchg
mov
mov
xchg
cli
pop
inc
notb
fsubl
sub
enter
adc
and
scas
jb
jg
out
cmpsb
push
aaa
loopne
outsl
fnstsw
shlb
dec
pop
mov
mov
test
fdivrs
ficomps
div
push
les
cmpsl
jle
roll
sbb
incl
pop
ror
pop
xchg
nop
xlat
pop
in
les
orl
inc
xlat
lods
and
push
or
aam
cmp
fisubrl
hlt
popa
imul
js
mov
jg
loopne
les
ljmp
adc
out
xor
lret
xchg
cmpsl
mov
fstpl
icebp
ljmp
aas
lods
dec
add
ljmp
daa
aaa
outsl
jle
mov
pop
cmp
popa
ljmp
aad
repnz
les
jo
inc
or
jle
sbb
inc
sub
xorl
mov
loopne
adc
movsb
or
fsqrt
and
repnz
or
mov
ja
jmp
push
aas
ja
fsts
lcall
push
jg
clc
mov
fs
xor
mov
cs
push
scas
xor
xor
dec
add
and
xor
xor
add
jl
xor
push
pop
pop
cmp
icebp
mov
es
aad
jae
add
adc
sub
cmc
je
and
mov
pop
and
outsb
or
adcb
dec
aaa
inc
sub
insl
outsl
and
ja
shlb
xor
movl
push
and
aad
xlat
inc
jne
add
or
bound
sahf
ret
call
xor
pop
sti
mov
std
call
pop
pop
push
or
pop
cmp
lock
inc
jns
pop
sub
adc
dec
leave
leave
cli
sub
clc
push
popf
notl
outsb
sub
lods
mov
mov
andb
out
fildl
ljmp
pushf
stc
jg
mov
testl
add
or
ret
int3
sahf
je
das
aam
fimull
add
pop
jno
adc
xchg
movsl
dec
sub
mov
in
xchg
sub
cltd
fld
cli
lret
sbb
fucomi
mov
push
jns
xchg
xchg
cmpsl
daa
adc
popf
dec
mov
repnz
push
loop
xchg
mov
rcrb
xchg
and
out
mov
test
mov
jb
inc
push
int
ljmp
jg
gs
lea
outsb
sbb
add
dec
daa
inc
into
insb
push
xchg
imul
into
outsb
pusha
ds
push
jns
imul
mov
insb
stos
rcrb
mov
les
sbb
imul
fnstenv
mov
lods
jl,pn
sbb
adcb
pusha
gs
fcoml
lret
pop
jle
icebp
cwtl
cmpsl
pop
push
pop
nop
mov
in
jge
jno
adc
stc
dec
jnp
jne
and
fimull
add
cld
xor
dec
rorb
push
popl
je
adc
push
dec
and
test
mov
mov
inc
xchg
scas
or
or
lods
pop
jo
lock
aas
hlt
inc
inc
fdivr
mov
push
dec
mov
adc
push
out
xchg
add
aaa
inc
mov
in
cmp
dec
jmp
pop
cmp
adc
lea
sbb
mov
mov
mov
daa
lcall
dec
mov
cmp
or
xchg
insb
dec
adc
jb
out
fs
dec
xor
jb
mov
data16
mov
int3
dec
lds
or
jecxz
pop
loope
les
sub
jecxz
pop
and
jle
jo
ljmp
adc
cmpsb
jnp
or
and
pop
sub
enter
sub
fbld
pop
jle
xor
lret
mov
outsb
cmp
add
push
jecxz
ds
add
xor
lods
xchg
pop
aaa
lds
movsl
xor
cmp
data16
add
jmp
lcall
das
cmpsb
mov
mov
repnz
int3
lret
and
push
sub
mulb
xor
jns
jmp
jno
nop
popa
ds
addb
mov
adc
pop
cmp
int
stc
mov
sti
inc
add
loope
jl,pn
pop
scas
aaa
push
and
lods
sahf
dec
push
enter
in
dec
push
into
outsl
fs
mov
xchg
sti
add
mov
sbbb
icebp
mov
pop
dec
bound
cmp
and
cmp
fisttps
sub
mov
add
xor
movsb
add
lea
xchg
das
inc
dec
jmp
and
cli
scas
jbe
cwtl
add
enter
or
arpl
popa
pop
inc
popf
jl
mov
outsb
orb
sbb
pushf
dec
stos
ret
data16
or
int3
pushf
jns
shr
test
mov
cmp
mov
in
lahf
inc
push
cmpsb
mov
sbb
mov
and
inc
push
test
pop
jmp
popa
or
fdivrl
stc
movups
addr16
arpl
add
push
pop
cmpsb
and
repz
sub
dec
ja
imul
xchg
andb
sub
add
jl
fimuls
hlt
into
loop
fnstenv
sarb
imul
jno
and
call
ja
sub
lret
dec
fisubrs
mov
mov
and
sbb
jp
jl
mov
aam
mulb
jmp
roll
scas
cmp
cmpsb
xchg
enter
gs
stc
pop
loop
mov
cmp
cmpsl
xchg
aas
and
mov
dec
sub
cmp
pop
insl
or
jno
rorl
ficoml
jle
mov
xchg
push
cli
fsubs
inc
push
sbb
push
jne
mov
mov
or
sub
ss
and
jbe
sbb
jns
je
mov
jbe
test
insl
popf
xchg
lcall
test
cmp
push
push
mov
sbb
lret
xchg
xor
and
sub
push
rcr
fdivs
out
pop
xchg
sbb
mov
pop
mov
xchg
sbb
cld
mov
push
push
cmpsb
and
fwait
inc
inc
push
sbb
xchg
inc
pop
adc
mov
cli
popf
shrl
rol
xlat
popf
scas
mov
inc
push
mov
push
jns
and
or
jbe
mov
jno
push
pop
xchg
mov
push
jg
pusha
push
xchg
cli
jp
add
ja
adc
pushf
mov
stc
mov
hlt
aad
pushf
call
dec
inc
leave
mov
and
sahf
lock
jl
es
jae
in
jmp
dec
pop
dec
insb
pop
loopne
fwait
push
repz
add
outsl
imul
imul
jmp
in
insb
gs
push
and
idivb
aam
jbe
popa
inc
mov
insl
sub
xor
fs
test
mov
pop
adc
xchg
push
or
mov
lea
adc
cmpsb
adc
sub
ror
lods
mov
jb
jmp
inc
stos
adc
test
or
dec
dec
rclb
call
cmp
or
and
stos
or
popa
loope
jo
fidivrs
push
in
fildll
pop
and
bound
pop
aas
push
imul
mov
inc
in
cmp
and
and
adc
push
clc
loope
pop
push
and
test
or
popa
movsb
cltd
inc
rolb
jp
push
cmp
jge
and
ljmp
nop
xor
orl
into
fidivrl
push
sbb
fistl
xchg
lahf
jecxz
int3
stc
push
mov
push
xchg
jp
sub
mov
xchg
xor
mov
adc
push
cmpsl
ret
arpl
and
mov
xchg
and
pushf
clc
push
adc
in
pushf
neg
leave
mov
fwait
xor
clc
mov
mov
mov
mov
push
push
sbb
xchg
call
pop
gs
stos
fstpl
cwtl
test
push
or
jns
mov
int3
inc
xor
cmp
mov
cmpsl
aad
mul
dec
jmp
xchg
je
mov
fwait
jge
int
nop
cmpsb
pop
insb
jle
fcomps
out
test
xchg
push
mov
mov
sub
repz
adc
add
inc
sub
mov
push
and
fadd
or
cmp
sub
movsl
adc
or
outsb
xlat
stc
mov
xchg
orl
mov
pop
and
movsb
mov
fldl
push
jmp
xchg
add
mov
cmpsb
xor
or
mov
les
inc
pop
and
pop
jle
pop
arpl
cmp
outsl
aam
mov
push
aas
mov
int
pop
jo
pop
add
inc
rorl
cmp
sub
loop
mov
inc
ja
dec
cmp
clc
add
dec
bound
fdiv
jne
adc
push
cmp
pushf
into
or
rorb
ds
adc
xchg
jne
push
xor
jle
add
shll
stos
fildl
xlat
xchg
adc
add
xchg
sub
pop
and
dec
cld
rolb
sub
mov
cmp
out
loop
push
cmp
bound
sbb
jg
imul
lods
std
mov
loope
cmp
sub
dec
pop
in
and
cmpsb
and
ja
push
and
ret
enter
rcrb
sub
or
movb
adc
cmp
outsb
in
push
or
daa
push
stc
insl
int3
jl
pusha
out
or
jmp
rclb
or
arpl
mov
icebp
inc
cwtl
pop
std
dec
sub
mov
roll
pop
adc
insl
jmp
pop
xor
cmp
out
dec
cmp
test
dec
jecxz
jae
enter
cld
push
and
pop
test
and
test
pop
cwtl
cmp
arpl
jo
push
jl
daa
stc
pop
test
cmp
aas
and
aam
shlb
es
test
out
or
iret
jnp
adc
imul
xchg
loope
std
pop
enter
dec
paddb
mov
or
adc
insb
das
stos
aaa
js
sbb
imul
setge
out
pop
cmp
popa
sub
lods
pop
push
adc
jg
pop
cmp
xor
mov
pushf
add
sub
ror
push
leave
flds
dec
rcll
fisttpl
aad
insb
inc
and
mov
adc
clc
inc
adc
or
jp
das
pop
mov
push
mov
mov
sbb
out
pop
rol
mov
popf
push
std
das
fstpt
icebp
popa
or
subb
daa
adc
and
test
sub
rorb
lea
cmpsl
or
fcmovnu
mov
xor
orb
dec
adc
push
scas
or
xchg
mov
jle
outsb
xlat
loope
lock
xchg
arpl
loop
fsts
push
add
adc
jg
jae
stc
notl
out
movsb
add
imul
xchg
js
cmp
fcompl
inc
out
push
xchg
bound
out
cmp
cmp
daa
cmp
in
fabs
and
cmc
mov
mov
sub
lret
filds
stos
fdivrp
pop
lret
scas
xchg
call
fimuls
jmp
fwait
cmc
out
mov
in
orb
addb
mov
sbb
pushf
mov
xchg
push
jl
jge
lret
ds
cmp
and
ret
lahf
pop
add
divl
sub
icebp
in
push
push
movsb
inc
xor
out
sbb
mov
lahf
and
push
cltd
jnp
sti
ret
jns
inc
xchg
fnstsw
pop
pusha
and
adc
mov
sbb
xor
mov
mov
mov
sbb
pop
into
push
push
fsubs
inc
adc
dec
mov
xchg
pushf
add
mov
sbb
mov
dec
dec
inc
nop
adc
fmull
rcll
sti
loopne
push
and
or
pop
xor
sub
xchg
leave
neg
fmull
inc
lcall
mov
jg
inc
xchg
mov
or
addb
mov
in
out
push
maxps
addr16
scas
je
lods
inc
jb
dec
adc
dec
sub
cmp
jge
call
fisttpl
mov
fmuls
int3
xchg
mov
xchg
cmp
fdivrl
ljmp
stc
loop
lcall
lret
and
ret
mov
xchg
adc
add
pop
xor
mov
cmp
gs
mov
xor
jo
jne
mov
dec
adc
mov
mov
lods
daa
xor
or
and
sbb
jle
dec
adc
push
mov
shl
mov
test
stos
mov
push
popa
int3
add
mov
xor
insb
dec
lcall
icebp
add
inc
scas
mov
push
mov
jns
aaa
paddb
pop
push
lods
fdivp
scas
testb
stc
mov
dec
sti
cmp
cmp
in
mov
fnsave
mov
in
mov
ret
cld
test
mov
aam
cltd
dec
jbe
cmpsl
and
int
sub
mov
add
jno
cwtl
aas
push
in
jge
jle
inc
pop
xor
push
pushf
mov
or
icebp
sbb
jp
ret
test
lods
into
or
push
mov
ss
stos
sub
jno
les
fcoms
mov
jl
rclb
jb
ret
dec
adc
and
fstpt
les
sub
test
and
lods
add
outsb
and
add
sub
cltd
mov
dec
out
xor
jge
mov
jb
fldl2e
xlat
sbb
sub
mov
jae
mov
jmp
fcoml
dec
mov
push
popa
jo
fcompl
jecxz
mov
mov
sub
mov
mov
mov
cli
int
dec
push
xor
das
rcrl
stos
je
in
and
test
ret
test
pop
arpl
push
repz
pusha
sub
xchg
int3
lahf
cmc
dec
or
nop
test
iret
ret
xor
pop
sub
in
inc
push
enter
inc
repnz
dec
jle
aas
daa
inc
hlt
cmpsb
mov
pop
mov
xchg
lret
aas
fldl
inc
jmp
push
fmul
or
mov
pop
iret
mov
stos
xlat
testb
mov
fists
data16
sub
jne
testl
movsb
dec
or
hlt
loopne
icebp
jae
lods
ficoms
cmp
lret
je
mov
push
push
nop
or
mov
dec
inc
mov
sub
aam
outsb
movsl
test
push
sahf
push
or
lea
xchg
mov
or
aaa
cmp
mov
lock
faddl
add
movsl
clc
fisttps
fucompp
fcompl
fsubr
pop
sbb
mov
xor
movsb
mov
inc
xor
out
jmp
dec
andb
movsb
inc
lret
fs
and
mov
push
ljmp
mov
push
mov
jl
movsb
mov
mov
sub
ss
cmp
fcos
adc
aad
mov
sbb
xchg
negb
in
clc
push
stc
xchg
sub
pushf
mov
push
in
xor
jb
sbb
mov
loopne
xchg
dec
div
push
aaa
dec
mov
jbe
push
mov
inc
add
jecxz
enter
push
adc
sub
ret
mov
adc
aaa
cmpsl
pop
and
mov
mov
push
inc
scas
mov
pop
loopne
cwtl
test
inc
cltd
push
aam
push
or
cmc
pop
out
or
mov
sbb
stos
lods
mov
es
jo
pop
pop
mov
arpl
addr16
sbb
jbe
jmp
fwait
aad
or
popf
mov
xor
ja
repnz
lret
ljmp
ffree
adc
fwait
mov
xchg
das
aad
addl
fldenv
ret
rorl
in
shrl
js
mov
rolb
ret
or
pop
lea
les
cmp
mov
jmp
mov
addr16
mov
lret
xchg
jb
in
add
jg
mov
or
pushf
dec
fs
mov
popa
divb
adc
or
dec
cmpsl
aaa
sbb
mov
inc
jmp
push
xchg
add
push
jno
movsb
rolb
rcrb
and
adc
out
push
push
or
pop
sti
into
int
pop
mov
pop
xlat
cli
das
inc
and
xchg
mov
add
mov
mov
es
outsl
loope
aam
iret
or
push
mov
lds
cmp
out
pop
ljmp
aam
mov
adc
mov
cli
or
pop
rorb
aad
push
and
outsl
cld
jnp
dec
sti
cmpsl
pop
or
add
add
ret
adc
mov
es
repz
jmp
mov
fiaddl
mov
fnop
or
pop
movsb
js
mov
mov
inc
js
inc
loop
nop
jae
aad
out
add
mov
mov
sbb
icebp
jle,pn
mov
push
int3
das
hlt
cmpsb
sub
rclb
push
shll
pop
push
ss
xor
ja
aas
xchg
cmp
pop
push
cmp
fldlg2
adc
enter
fildll
pop
pop
or
js
test
jle
jge
test
lock
adc
mov
paddw
movsb
xor
push
ficomps
bound
dec
pop
xchg
sbb
loope
mov
xchg
and
fcmove
or
sub
pushf
add
outsl
arpl
sbb
mov
pop
loop
jecxz
fcoml
cwtl
dec
loop
inc
xor
cmp
jg
mov
inc
pop
mov
imul
pop
mov
rorl
loopne
out
push
imul
xchg
push
dec
ret
add
mov
adc
pop
push
inc
mov
gs
xlat
lock
dec
loop
and
mov
pop
lods
pop
repnz
inc
and
push
in
mov
sbbl
sub
mov
lods
dec
fistps
xor
js
xor
pop
test
mov
push
push
xor
movsb
mov
lret
add
lods
mov
repz
push
ret
sub
push
add
shrb
jb
daa
push
mov
jmp
push
pop
mov
add
rolb
xchg
pop
sbb
and
fs
xchg
mov
test
mov
dec
xchg
mov
clc
mov
test
fsubs
inc
test
sbb
mov
aad
adc
mov
xchg
adc
adc
lds
pusha
jg
dec
std
hlt
sbb
push
outsb
into
icebp
pop
test
nop
rcr
dec
jmp
add
in
xor
mov
adc
jbe
and
mov
dec
repz
pop
aas
in
lock
cmc
inc
fstp
pop
dec
xor
or
das
dec
xor
push
movsb
out
and
lcall
mov
sbb
cwtl
outsl
xchg
lret
pop
shll
loopne
lock
imul
inc
outsb
in
and
jmp
xor
or
lods
pop
movsb
inc
cmp
sbb
loope
xchg
mov
ja
mov
push
dec
ja
stc
loope
sbb
enter
mov
xchg
push
ja
mov
out
and
sub
or
push
sbb
and
or
clc
pop
or
je
jnp
cmp
and
inc
sub
sub
jnp
leave
fisttpl
jo
mov
mov
testb
mov
lock
repz
pslld
pushf
fucomip
sub
fnstenv
pop
int3
pop
cmp
das
mov
cmp
into
sub
push
jmp
data16
inc
or
mov
fisttpl
scas
or
adc
test
aad
scas
test
out
mov
fists
cmp
inc
lret
cli
jns
imul
lea
xchg
std
xchg
xchg
sub
jge
pop
jg
push
xor
mov
inc
int3
sub
sbb
jl
sub
popa
arpl
movsb
repz
pop
and
adc
inc
cmp
js
orb
pop
xchg
and
xor
inc
pop
dec
add
mov
and
stos
push
add
cld
movsb
cmp
mov
dec
ja
pop
repnz
jmp
test
sub
lock
daa
mov
pop
sbb
popa
clc
push
std
and
in
mov
gs
inc
jge
in
sub
cmpsw
loope
xchg
jb
push
jp
addr16
cmc
and
bound
jo
je
sarl
fdivl
jg
shlb
mov
rcll
sbb
lds
shl
js
loopew
test
lods
sbb
mov
cmp
je
jne
mov
mov
fidivrs
mov
dec
into
fidivrs
jmp
pop
push
jecxz
lret
ljmp
loope
arpl
mov
aad
push
adc
sub
loope
mov
mov
jg
or
adc
cwtl
push
pusha
mov
add
mov
add
push
loope
push
addr16
push
pusha
cli
inc
in
js
std
dec
push
leave
jb
push
cld
nop
fbstp
xlat
dec
adc
fwait
add
sbb
cmp
cmp
fisubrl
dec
insb
cmp
xchg
pop
aad
mov
push
movsl
dec
dec
int3
popf
add
adc
xchg
scas
outsl
push
jle
pop
mov
je
sbb
aas
mov
stos
lret
push
mov
sbbl
xchg
test
call
es
xchg
iret
jbe,pn
ficomps
adc
mov
lcall
dec
sub
and
xchg
inc
outsb
pop
mov
js
scas
ret
sahf
mov
sarb
loope
insl
lcall
stos
pop
movsl
jle
rep
sarb
dec
lcall
mov
pop
cltd
mov
sub
jns
dec
cld
out
lds
hlt
push
sbb
push
rolb
dec
in
push
xor
sbb
push
jnp
mov
loope
shll
test
vcomiss
pop
std
push
jmp
adc
out
mov
or
mov
sbb
mov
dec
jno
xchg
sti
pop
add
cmc
jns
int
mov
lcall
mov
hlt
insl
xor
lcall
or
or
movsb
and
aas
cmp
xor
add
mov
fs
out
jp
sbb
inc
outsb
and
adc
and
addl
jmp
inc
adc
aas
outsb
movsl
cmp
ret
push
push
aam
sub
push
lds
scas
pushf
xor
inc
shll
daa
pusha
out
pop
xchg
push
xor
jns
shl
out
stos
pop
add
xchg
or
pop
jae
xor
in
mov
ljmp
sbb
decl
pop
js
cmp
nop
mov
mov
jns
fnsave
mov
push
mov
or
call
xor
fldenv
fs
enter
or
push
inc
dec
adc
push
cltd
mov
inc
dec
shl
mov
sbb
sti
xchg
jno
lret
jg
test
lock
cmc
xor
cmpl
aaa
jno
fiaddl
mov
scas
mov
bound
cli
lret
mov
imul
jmp
lret
pop
aaa
and
je
hlt
push
dec
loop
enter
sub
leave
mov
cli
mov
jmp
ror
inc
push
cmp
aaa
push
mov
lcallw
pop
sbb
jb
mov
xchg
lea
jge
pop
call
or
push
pop
mov
je
jecxz
jle
ret
adc
add
movsb
and
call
push
mov
incl
sub
jae
xchg
adc
and
imul
lds
add
ss
push
mov
sbb
jg
cmc
pushf
sub
jle
lods
testl
jb
sub
push
sahf
repz
xor
roll
and
outsb
gs
sbb
mov
test
insl
jg
sbb
jno
flds
mulb
loope
int3
test
and
insl
mov
test
cs
xor
fisubs
pop
arpl
cmpsl
pop
les
mov
pop
push
jo
addl
repnz
icebp
adc
push
mov
pop
jbe
inc
cmp
inc
jne
jns
je
xor
pop
push
in
push
jae
xor
adc
fdivrs
pop
pop
mov
fcomip
dec
popa
mov
out
jae
dec
fnsave
mov
das
fs
loopne
inc
popa
out
movsb
mov
cmp
fiaddl
imul
icebp
lds
inc
ss
and
mov
or
arpl
mov
pop
push
xorb
adc
dec
mov
mov
jno
adc
sub
orb
sbb
dec
jo
ret
lret
adc
push
shll
cmc
std
test
subl
stos
aaa
iret
jbe
fwait
jb
ss
outsb
sbb
int
lcall
cmp
hlt
and
mov
sub
pop
add
jno
jl
scas
xchg
adc
inc
or
jo
leave
test
out
and
mov
in
movl
das
int
mov
push
xchg
pop
mov
push
out
mov
adc
pop
out
rcl
into
mov
fmuls
cld
sub
leave
out
aas
xor
sbb
mov
fisttpll
cmp
pop
aas
mov
and
add
insl
or
and
loop
adc
int
das
jecxz
rclb
sbb
addr16
std
pop
daa
lock
or
jp
roll
push
cmp
sub
pop
mov
bound
cmp
decb
imul
sbb
mov
fidivl
mov
cmc
inc
mov
and
push
mov
fists
lret
movsb
es
sbb
pop
push
rorl
in
xor
xchg
pop
rolb
ds
sbb
sub
push
ss
inc
push
cmp
adc
inc
inc
dec
or
or
lea
or
jecxz
pop
xor
es
or
jecxz
jae
mov
xchg
nop
push
ds
subl
xor
arpl
pop
test
or
sbb
in
xor
xchg
sub
bound
dec
mov
mov
lahf
nop
xor
aas
int
enter
pop
or
pushf
pop
aad
outsb
add
clc
adc
pusha
adc
pop
movsl
inc
mov
inc
out
dec
mov
mov
jns
xor
mov
not
pop
inc
dec
dec
push
test
and
loopne
pop
sbb
push
dec
fimull
ret
mov
xor
sarb
insl
out
adc
and
push
mov
pop
into
shlb
push
insb
add
jns
and
loop
jo
push
xor
repnz
lods
and
clc
sub
xchg
add
cmc
xor
push
js
loopne
inc
and
mov
xlat
imul
loop
mov
cmc
and
mov
fcoms
dec
push
clc
cmc
fucomip
inc
pop
cmp
push
xlat
shl
jg
int3
outsl
lret
inc
test
add
ret
sar
add
stos
cs
jns
dec
lret
pop
test
es
pop
adc
sbb
movsl
gs
insl
jp
mov
cmp
cmpsb
sub
sbb
add
repnz
xor
jle
in
adc
adc
pusha
mov
mov
out
mov
add
push
mov
cld
or
inc
rcrl
hlt
jns
lods
out
ds
xor
cmp
cli
inc
jb
xor
out
pop
iret
mov
jne
xchg
arpl
add
repnz
cmp
dec
into
cmp
pop
cmp
shll
fldl
pop
aad
in
push
sti
aas
daa
adc
clc
cmpsl
in
popa
mov
lock
dec
push
call
in
mov
gs
mov
mov
insl
pop
add
jecxz
inc
mov
dec
mov
js
ret
popa
lcall
pop
test
test
push
in
int
and
dec
pop
xchg
testb
add
mov
cmp
xchg
push
stos
enter
sbb
inc
js
or
fimuls
mov
test
add
or
add
inc
push
jge
sti
or
push
sbb
xchg
ljmp
daa
adcl
popa
xchg
push
pop
inc
jbe
ret
cs
adc
jb
imul
insb
lds
scas
iret
and
in
jmp
sti
ja
add
popa
popa
or
shl
mov
cmp
inc
push
les
out
sub
push
scas
clc
insb
dec
incb
inc
jle
enter
xor
stos
and
add
flds
lea
xor
lea
arpl
and
imul
push
pop
ret
mov
outsb
fisubs
cli
push
icebp
cli
mov
push
or
mov
jg
test
jle
jp
cmp
adc
bound
dec
cmp
dec
jae
scas
or
enter
push
jl
mov
sbbb
out
push
cmpsl
sbb
add
leave
mov
dec
push
rcl
cmp
inc
cmp
and
push
push
cld
pop
subl
cmp
push
or
mov
mov
nop
leave
add
bound
jo
rcrb
cmpsl
push
sub
sub
popf
repz
clc
or
and
mov
xlat
or
nop
test
jp
popa
daa
js
cmp
xchg
add
gs
or
adc
mov
sbbl
test
or
cmpsl
lds
popf
adc
call
add
rclb
or
or
dec
addr16
xchg
jmp
pop
repnz
cmc
jbe
sti
mov
pop
pop
mov
cli
cld
mov
dec
mov
rcrl
inc
xor
mov
fs
fcomi
ficoms
into
lds
popf
xchg
sbb
push
push
push
jl
pop
mov
cmp
jp
or
pop
daa
adc
inc
cbtw
sbb
jle
mov
xor
xor
xor
mov
push
in
outsb
push
arpl
sbb
jg
in
pop
sub
or
xchg
mov
adc
insb
push
pop
sbb
xchg
mov
stc
inc
out
add
sub
dec
xchg
popf
je
jmp
cwtl
das
stos
dec
cmp
mov
mov
call
lods
test
jb
sbb
sub
lret
pop
pusha
push
mov
xchg
bswap
inc
dec
loopne
mov
jns
pop
icebp
fadds
stos
dec
out
push
rcrl
sbb
mov
movsl
jns
mov
and
das
lock
push
adc
fistps
sub
push
add
xchg
xchg
pop
in
mov
adc
adc
push
mov
adc
cltd
xchg
insl
mov
xor
jg
pop
fsts
sub
loopne
idiv
xor
mov
xor
push
or
xor
push
inc
push
fildll
mov
dec
pop
push
push
pop
push
mov
adc
ficoms
imulb
aam
mov
and
sub
insb
xchg
mov
dec
xor
push
add
in
cmp
decl
repz
inc
and
insl
in
inc
push
fistps
cli
aaa
xchg
sub
xchg
jle
das
jle
iret
push
xchg
mov
jg
push
mov
fisttpll
xor
push
mov
or
in
inc
xchg
xchg
and
and
lods
and
ret
bound
cmp
cmpsl
mull
xchg
jnp
jle
jae
das
or
outsb
int
cmp
mov
inc
in
frstor
inc
shlb
push
xlat
mov
lods
sub
sub
mov
ss
aaa
sub
insl
stos
and
cmp
push
dec
push
mov
cmp
push
lret
ljmp
lahf
rol
outsb
cmp
daa
nop
jg
inc
cmpsb
mov
jns
mov
cltd
pusha
cwtl
mov
mov
es
fnstcw
pop
inc
mov
push
jmp
mov
jl
push
or
out
dec
mov
xchg
xchg
popa
loope
addr16
sarb
push
pushf
in
mov
pushf
lea
pop
mov
pop
mov
in
sbb
loope
repnz
fadds
sti
in
inc
scas
lods
lds
aam
xor
addr16
pop
ss
gs
sbb
sbb
or
mov
and
leave
xchg
test
cmp
mov
and
pop
jno
add
mov
add
and
mov
cmp
test
xchg
fwait
push
mov
cmpl
xor
jecxz
jge
lret
in
xchg
sub
mov
pop
dec
stos
int
pop
pusha
sub
mov
rolb
sbb
adc
andl
and
xorl
pop
jp
flds
je
test
cmpl
cmp
pop
pop
imul
inc
test
xchg
in
or
or
sbb
bnd
push
jno
mov
or
rorb
or
bound
lcall
cld
mov
js
or
notl
jl
or
xor
lret
xor
mov
push
stos
xchg
mov
push
jecxz
cmp
xorb
dec
adc
lock
pop
push
dec
lds
inc
adc
push
xchg
xlat
pop
insb
push
fsubrl
sub
shll
enter
mov
out
add
in
adc
jecxz
clc
dec
addl
cmp
inc
xlat
pop
and
xchg
push
pop
call
xchg
or
les
hlt
mov
pop
push
jbe
imul
loopne
addr16
lods
out
xor
dec
fstp
pshufw
imul
mov
xchg
fdivrs
test
xor
jg
mov
add
test
and
xor
ss
lcall
sbb
andl
sbb
pop
mov
in
jne
insb
xor
sti
ja
mov
mov
inc
jae
or
sub
pushf
inc
filds
mov
push
sbb
gs
jne
sbb
dec
or
mov
cld
dec
jns
ret
in
scas
and
in
jle
out
push
sub
mov
xchg
call
push
loop
std
adc
fimuls
hlt
adc
mov
arpl
shll
sub
mov
mov
fadds
dec
enter
and
mov
lea
mov
mov
out
xchg
repz
add
add
stos
push
in
stos
sbb
sub
or
mov
add
jns
loop
sarb
fcmovb
pusha
adc
clc
or
aaa
sub
xchg
inc
or
call
xchg
cld
outsb
loopne
inc
xchg
sbb
mov
or
sbb
pop
or
xorb
pop
rcrl
add
jmp
or
pop
sub
insb
xor
cli
mov
test
es
push
lds
rclb
pop
sub
cmp
mov
and
mov
ja
jbe
xchg
in
pop
pop
inc
fldcw
mov
cltd
mov
pop
negl
pop
adc
sub
add
mov
mov
mov
mov
or
adc
in
push
mov
push
sub
je
sub
insl
movsb
dec
ja
outsb
outsb
insl
push
insl
shll
movsl
pop
and
out
daa
jne
jge
or
and
dec
pushf
cltd
mov
jns
in
aaa
iret
imul
xchg
jae
and
test
aas
leave
pop
mov
cltd
mov
idiv
add
and
orl
shll
jo
push
std
add
mov
dec
aam
aad
arpl
mov
inc
pusha
fcmovnb
dec
iret
push
clts
stos
lods
fidivs
push
sbb
fildll
pop
ja
rcrl
pusha
and
in
mov
insb
aaa
dec
dec
add
sbb
adc
mov
faddl
pop
fidivl
sub
call
push
jns
mov
mov
xor
in
psubusb
test
adc
not
movsl
dec
imul
pop
loope
cmc
call
jns
xchg
mov
push
sub
not
ja
es
mov
sub
testl
push
sbb
xlat
aaa
push
scas
push
mov
mov
sub
cs
mov
into
cmpsb
jmp
xor
scas
icebp
pop
cli
ret
push
cmp
sarb
test
pop
fucomi
inc
std
stos
ret
js
inc
sahf
ss
js
sub
scas
stos
outsb
adcb
or
iret
bound
adc
mov
aam
jmp
jecxz
jmp
loop
fists
cmpsl
dec
call
xchg
hlt
add
into
pop
in
mov
loope
fsubs
sahf
pop
aaa
jmp
pop
je
sar
mov
sbb
mov
sbb
loopne
xor
mov
adc
sti
sbb
mov
outsl
mov
inc
and
mov
push
or
nop
push
imul
lds
popf
jns
mov
jno
sahf
mov
mov
ljmp
inc
adcb
fwait
mov
in
scas
stos
sbb
mov
cli
push
outsl
xor
stos
arpl
xor
xchg
dec
scas
call
cmp
jns
gs
jnp
inc
adc
lret
mov
mov
pop
sbb
and
mov
je
mov
fmull
push
inc
xor
cmp
aam
outsb
mov
cld
hlt
inc
repnz
adc
iret
push
adc
inc
mov
dec
dec
mov
dec
shlb
dec
fisubs
jl
out
sti
hlt
fsubl
dec
into
jp
dec
lahf
mov
inc
fwait
movsl
ljmp
cmc
xchg
dec
adc
mov
sub
cmp
mov
or
pop
dec
inc
pop
add
inc
xlat
jge
aad
xchg
repnz
jae
inc
mov
lods
ret
mov
cltd
mov
in
fstpt
ret
cmpsb
push
addr16
sbb
dec
xchg
mov
scas
cmp
cmc
loop
insb
js
mov
push
hlt
cmc
xlat
pop
or
adc
rorb
push
push
dec
inc
push
pop
and
aad
push
cmc
and
out
adc
test
sahf
mov
outsb
lahf
scas
pop
les
adc
lods
xchg
mov
ja
adc
negb
xor
bnd
cwtl
popf
push
sbb
sbb
mov
scas
into
pop
cmp
push
xor
sbb
push
clc
xor
push
sub
pop
rol
and
pop
jb
aam
loope
jne
in
adc
adc
out
imul
int
pop
fwait
pusha
pushl
loopne
cmpsl
nop
adc
inc
jle
aam
cmc
jg
pusha
fsubs
lret
into
jp
mov
xor
dec
out
aaa
push
xorb
mov
push
in
jb
daa
scas
dec
xchg
cmpsb
xchg
je
dec
xor
and
push
test
xor
push
pop
add
scas
push
in
xchg
sub
and
sbb
cs
fsub
fsubs
xor
sub
lods
jmp
lods
lahf
jge
lods
inc
loope
into
sbb
jmp
aam
test
sub
leave
adc
jg
xor
mov
int3
pop
and
movsl
aas
stc
adc
jg
pushf
and
cmc
out
insl
movsl
gs
iret
xlat
sbb
jmp
push
push
push
je
loopne,pt
mov
sti
mov
aam
push
inc
in
outsb
push
pop
sub
xor
and
out
adc
or
push
lea
repnz
xchg
pop
jns
jne
pop
leave
jge
mov
sub
enter
call
inc
inc
and
cmp
mov
or
push
stos
sbb
or
or
or
dec
and
pop
popf
xchg
mov
aam
and
xorl
fsubrp
nop
pop
fcompl
aas
dec
add
xor
mov
test
into
cmp
enter
xchg
sub
cmpsl
loopne
or
rolb
add
or
sbb
test
xchg
lock
inc
fwait
dec
push
lods
push
popf
fadd
xor
mov
addl
jae
push
lock
dec
mov
lahf
loope
pop
daa
inc
repnz
loope
xor
mov
xlat
scas
es
mov
out
inc
jmp
push
sahf
addr16
movsl
stos
mov
stos
cmp
mov
fxch
movsb
loope
sub
ficoml
test
lcall
bound
mov
jle
ret
pop
adc
pushf
movsb
repz
jb
out
sbb
add
add
or
stc
out
out
mov
pop
push
repnz
subb
fadds
and
loope
dec
cmc
gs
dec
cmpsb
add
ds
sub
idivb
sub
inc
push
and
add
dec
add
mov
subb
sub
pusha
repnz
or
xor
mov
int
jecxz
sbb
jge
lret
sbb
in
ss
dec
push
in
cmp
lds
shl
adc
ss
pop
inc
out
mov
or
and
xor
es
mov
arpl
mov
in
xchg
pusha
mov
dec
lods
add
icebp
sti
mov
aaa
mov
push
mov
dec
dec
dec
jl
sbb
neg
pushf
push
in
pop
rcrl
push
sbb
in
mov
in
popf
ret
mov
repnz
out
mov
fcomi
subl
pop
es
addl
arpl
cwtl
out
jnp
and
mov
mov
sbb
mov
sti
ja
sbb
fsubr
lret
xor
ljmp
mov
adc
stos
pop
flds
ja
mov
into
jne
clc
inc
or
mov
lcall
mov
adc
rol
xchg
xchg
xchg
fildl
fimuls
xchg
outsb
cld
int3
movsl
mov
jp
sbb
xor
cli
stos
loope
lea
xchg
jno
movsb
fwait
icebp
adc
inc
pop
scas
push
fimull
outsb
xor
out
ljmp
mov
lret
repz
lret
jns
cli
outsl
sbb
cmp
pop
mov
xor
jnp
je
pop
nop
xor
imul
cmc
sbb
icebp
icebp
mov
mov
and
mov
mov
popa
pop
mov
pop
mov
push
nop
lret
sbb
rclb
push
ss
lds
adc
adc
pop
call
rclb
push
sbb
mov
dec
movsb
xor
daa
inc
test
xor
cltd
insb
aaa
pop
and
push
pop
push
cli
stos
mov
ss
push
and
rcll
movsl
pop
add
sbb
mov
adc
inc
or
cmp
xchg
push
lahf
push
stos
cwtl
cmp
inc
addr16
dec
sti
ret
out
lods
es
cmpsl
mov
jecxz
test
sahf
loope
pop
jns
leave
xchg
and
inc
add
inc
mov
sbb
jno
push
loop
pop
scas
fucomp
cmpsl
es
sub
mov
inc
mov
xor
adc
imul
test
mov
add
add
mov
xchg
das
xchg
sub
mov
fwait
push
je
scas
mov
jmp
and
jbe
ss
out
nop
scas
sahf
sbb
jmp
out
jns
xchg
pop
loopne
inc
or
sbb
xchg
or
aam
lret
pop
in
loop
stos
pop
pop
test
fcmovne
fidivrl
mov
cmp
mov
or
jb
xor
stos
pusha
xor
xchg
inc
imul
lret
fwait
mov
adc
lds
out
mov
std
xchg
and
ljmp
movsb
pusha
sub
mov
outsb
mov
dec
push
add
insb
push
dec
pop
aaa
inc
fdivrs
xchg
shlb
mov
in
cmp
jecxz
dec
inc
xor
xor
stos
outsb
loop
mov
sub
mov
es
out
jno
das
add
cli
cwtl
vmwrite
push
pop
mov
mov
add
aas
faddl
scas
mov
push
rcrl
pop
ss
popf
mov
rorl
sahf
push
mov
cld
push
sbb
mov
jecxz
xor
mov
mov
add
mov
insl
fs
push
xchg
and
ss
cmp
dec
pushl
stos
inc
fwait
push
add
or
in
cmp
lret
cmp
pop
push
push
ja
sbb
leave
or
mov
outsl
jno
jg
repnz
imul
jbe
lds
inc
fs
stc
stc
psrlq
ret
cmc
jae
mov
xor
out
push
into
out
xchg
fbstp
or
sub
push
add
cmpsl
aam
in
add
and
loope
xchg
test
jns
cmp
push
push
inc
into
xchg
adc
lcall
or
jb
andl
push
dec
sbb
or
es
sub
ffreep
fbld
pushf
int
fadds
loop
scas
push
mov
lds
jns
adc
or
cmp
or
cmp
pop
mov
test
fucomp
repnz
push
sub
mov
add
cmp
dec
mov
sahf
jmp
iret
sbb
jge
lods
sbb
xchg
insl
jecxz
les
in
add
jecxz
enter
shl
mov
jmp
lret
std
int
jge
mov
pop
jmp
inc
fwait
add
inc
fnstenv
popf
cmp
scas
pop
inc
mov
ret
mov
pushf
push
mov
xchg
mull
jmp
push
insb
add
lods
jecxz
sub
jo
dec
xchg
popa
pusha
mov
pop
adc
or
xchg
cld
lds
cld
mov
stos
inc
mov
push
ret
repnz
ret
imul
inc
lods
jbe
shlb
mov
shlb
or
xchg
aad
mov
dec
xor
aaa
jnp
mov
inc
lea
adc
dec
pop
lods
mov
add
out
xchg
jecxz
int
aad
mov
sti
jge
subl
pop
stc
dec
jnp
jp
inc
sbb
notb
sub
jb
push
int3
mov
movsl
add
add
inc
scas
pop
cmp
je
pop
les
adc
lock
cmp
cmc
dec
sub
sub
int3
mov
test
jb
xchg
lahf
push
cmp
lret
xchg
inc
inc
cmpsl
cld
cltd
pusha
popa
pop
lock
cmpl
ja
dec
rcrl
push
mov
jp
lea
rorl
and
and
mov
sti
pop
and
bound
imul
dec
ja
popf
int
mov
pop
pop
iret
add
in
mov
dec
nop
shrl
inc
in
or
mov
xor
mov
sbb
std
adc
xor
cmp
fisubrl
or
mov
jg
mov
rorl
lcall
popf
or
out
mov
xor
mov
sti
bound
loop
lea
roll
sbb
loopne
inc
scas
scas
roll
xor
rolb
shlb
dec
xor
mov
lea
push
dec
popa
jno
sbb
push
mov
or
push
jg
cmpl
push
mov
int
leave
or
mov
clc
pushl
mov
jne
push
xor
mov
xor
push
jb
inc
cli
inc
ficoml
nop
mov
add
adc
inc
and
add
pop
push
xor
and
pop
cltd
sub
stos
cmc
inc
mov
jo
test
data16
cmpsb
sbb
cmp
and
ret
dec
mov
insb
insb
aaa
arpl
movsb
pusha
jp
movsb
in
inc
and
out
mov
in
mov
js
mov
mov
sub
pop
jns
pop
cmp
add
cltd
pop
add
jno
and
scas
mov
inc
rorb
push
in
mov
cmp
cld
into
movsb
push
clc
cmp
or
mov
adc
mov
in
je
xor
add
sub
sarl
inc
jmp
and
add
imul
mov
dec
prefetch
jg
and
popf
pop
hlt
jl
leave
fs
aas
mov
dec
lret
test
pop
lret
aaa
ja
fs
mov
repz
mov
test
jge
into
jl
int
dec
xor
repnz
lods
int
pop
sbb
mov
pop
scas
push
data16
ja
enter
in
adc
cmp
das
cwtl
push
push
mov
xchg
cs
jne
mov
or
mov
test
xchg
pop
or
gs
sub
in
movsb
out
lock
and
cmp
lock
inc
push
pushf
adc
xchg
xlat
repnz
xchg
mov
cmp
pop
rolb
mov
add
sbb
dec
sub
leave
add
ds
or
mov
hlt
jmp
cs
jne
pusha
add
push
jg
mov
aaa
ret
cmc
outsb
cmp
flds
clc
inc
cmp
mov
mov
nop
mov
outsb
loopne
jmp
les
les
rcr
imul
scas
mov
loope
mov
add
dec
adc
dec
rol
int
and
lahf
xchg
and
lahf
in
scas
dec
inc
lds
rcr
sbb
xchg
loope
push
xor
or
jno,pn
shlb
cltd
test
jae
cmp
push
push
out
mov
inc
dec
loopne
cld
out
push
ss
push
jmp
inc
cmp
adc
cli
push
or
out
xor
ret
lds
pop
pop
adc
dec
das
mov
push
cmp
pop
in
xchg
pop
repnz
idivb
and
mov
addr16
insl
inc
jmp
inc
or
in
in
popa
rolb
pop
pop
call
je
mov
pop
mov
je
adc
mov
push
addr16
push
mov
lcall
adc
push
scas
fidivs
neg
mov
fucomp
push
ret
mov
add
imul
cld
inc
call
xor
jno
or
dec
jns
cmpsl
or
fmul
movsl
adc
cs
cmp
dec
jge
adc
mov
mov
or
std
mov
cmc
adc
sbb
in
ljmp
adc
popf
inc
sbb
fnstenv
pop
pop
sarl
loope
lods
jb
addr16
and
pop
or
cmp
fwait
lods
ja
sbb
bound
test
repz
int
test
add
push
test
and
sbb
xor
shrl
inc
push
int
mov
inc
jecxz
cmp
sbb
mov
clc
add
in
add
idivb
mov
cmp
push
dec
mov
or
mov
sub
lods
adcl
push
xchg
adc
inc
push
divl
mov
mov
lods
adc
cwtl
dec
fwait
movsb
out
dec
lret
and
adc
pop
test
add
add
jne
dec
lods
or
push
movsl
nop
testb
movsb
idivl
and
js
jns
push
mov
xor
movsl
push
popf
xchg
ret
dec
xchg
push
xor
sub
fmull
insb
xor
iret
mov
ss
mov
imul
pop
lcall
fs
sbb
jmp
pusha
divl
addb
lock
jae
pop
adc
or
in
out
xchg
clc
lock
sbb
movsl
jmp
pop
incl
orb
dec
clc
jecxz
dec
push
jnp
adc
out
inc
les
and
mov
mov
push
adc
stos
jns
mov
iret
jl
scas
jl
pushf
xor
popf
ret
push
test
cmc
pop
mov
icebp
std
or
xor
outsl
out
test
outsl
loop
sbb
cli
push
push
bnd
mov
dec
lcall
mov
inc
sbb
mov
clc
mov
test
sub
xor
outsb
ss
lods
icebp
mov
inc
xlat
push
iret
adc
mov
push
pop
and
or
sbb
xlat
lea
test
pop
jecxz
outsl
push
adc
inc
pop
add
mov
rcll
lahf
jle
push
lea
arpl
xchg
push
pop
dec
fcmovb
ret
ficoms
inc
xchg
sti
inc
ss
imul
shrl
imul
and
mov
fcmovnbe
outsb
fldt
inc
dec
dec
add
out
mov
jno
mov
pop
and
ja
push
xchg
fs
pop
add
stos
dec
out
and
ficoml
xchg
out
add
push
cmp
mov
cltd
scas
push
jne
je
cmpsb
add
stos
or
lret
cmp
dec
and
mov
dec
rolb
push
cmp
movsl
outsl
mov
adc
cmp
movsb
dec
and
xor
aad
ret
arpl
fldt
ljmp
sub
loopne
out
xchg
add
inc
test
jns
cld
fidivrl
dec
adc
sub
and
mov
dec
test
repz
jl
xor
mov
outsl
mov
into
int
pop
lds
pusha
sub
mov
data16
in
enter
lods
test
dec
test
pop
add
test
rolb
push
repz
mov
pop
add
test
sti
pop
or
aam
dec
sub
cmp
and
leave
lods
inc
cmc
cmp
sub
sbb
sbb
lea
jb
and
push
int3
test
lods
stos
dec
mov
mov
cmpsl
pop
psadbw
push
sbb
fs
je
add
lret
cld
xchg
xor
pop
lock
or
pop
mov
xchg
or
std
addb
xchg
mov
cmc
pand
cwtl
lods
xlat
cli
dec
shll
dec
in
in
stos
mov
xchg
mov
scas
das
jle
sub
iret
jl
inc
loop
and
pop
cmp
cmp
push
cli
pop
adc
pop
xchg
add
je
adc
adc
xchg
pop
mov
pop
and
movl
sub
jne
jecxz
xchg
loope
dec
es
stc
or
mov
sbb
dec
adc
dec
xchg
sub
addr16
push
ljmp
outsl
lock
dec
hlt
js
popa
nop
aam
dec
pusha
daa
enter
div
pop
ss
imul
lret
stc
sub
cmp
cs
call
out
and
and
leave
ljmp
sbb
jl
shlb
jne
mov
adc
add
add
mov
add
fidivs
cmc
inc
mov
out
lret
mov
jns
mov
jae
shr
popf
dec
sub
mov
ret
sbb
adc
test
mov
sbb
push
hlt
bound
imul
jb
divl
test
cld
mov
pop
push
int
in
mov
gs
lahf
addl
jecxz
int3
sbb
bound
adc
ljmp
pop
mov
mov
gs
push
adc
outsb
insl
fldcw
out
dec
shlb
mov
popa
test
rcr
or
xchg
mov
loop
shll
call
or
xchg
add
shl
sahf
shrl
and
rorl
push
inc
data16
fcomip
add
imul
cmpsl
cli
loopne
cmp
lods
pusha
dec
xlat
cltd
add
jle
shl
push
arpl
adc
xchg
pop
pop
insb
fwait
and
js
scas
cltd
or
movsl
mov
add
sbb
push
and
data16
jmp
movsb
fildll
fnstsw
xchg
mov
div
or
cmpsb
sub
cmpl
push
iret
xor
cli
push
adc
mov
movsb
popa
inc
insb
les
and
ret
mov
xchg
adc
enter
jns
mov
repz
mov
xor
rcll
mov
lret
jnp
or
mov
jg
into
add
in
pop
xchg
pusha
fadds
arpl
popa
xor
push
vpmaddwd
lds
xor
out
repnz
loop
inc
ja
movsb
pop
cmp
jge
jae
idivb
xchg
cmc
mov
jl
cmc
cmp
mov
and
and
xchg
and
lock
jge
jb
xchg
jecxz
ror
xchg
lock
ret
pushf
sbb
scas
out
pop
outsb
sub
fildl
lcall
xchg
test
sbb
push
adc
iret
mov
xchg
sti
push
lds
xchg
inc
and
mov
xor
loopne
out
xor
lock
fwait
xchg
loopne
dec
ja
jo
imul
cmp
test
or
xchg
movsb
hlt
aad
jae
mov
repnz
arpl
test
jl
fstpt
cmp
out
vpsraw
xor
lock
scas
jecxz
std
shll
xchg
leave
cmpsl
shl
fsub
movsb
popf
testb
inc
rol
sbb
lret
mov
xor
nop
cmpsb
les
push
cmc
mov
dec
dec
push
inc
pop
jae
stc
movsl
jns
sub
adc
out
imul
aas
and
jmp
xchg
imul
repnz
add
rcr
sbb
push
mov
mov
dec
stos
addr16
and
xor
loop
movsb
int
mov
mov
test
dec
adc
jp
gs
sub
int
pushf
outsb
xchg
sub
adc
scas
pop
sahf
adc
stos
mov
push
movl
mov
ds
fisttps
mov
inc
xlat
in
xor
hlt
add
and
push
adc
std
mov
mov
fimull
jmp
insl
imul
repz
leave
dec
pop
xchg
push
mov
scas
fsub
xchg
or
gs
xor
mov
jle
sub
mov
jge
jne
mov
mov
push
add
push
das
into
jo
cmp
lods
push
les
daa
cltd
in
popf
mov
dec
mov
out
inc
push
dec
mov
sub
sub
test
lcall
nop
jne
jne
mov
cmp
pop
cmp
inc
fiadds
xchg
xchg
ficompl
stos
repz
sbb
dec
addr16
pop
mov
popa
mov
mov
insl
push
sbb
and
sbb
xlat
scas
shrl
into
icebp
aad
js
xor
and
push
dec
ja
ja
inc
popa
jbe
sahf
in
aam
cmp
iret
pop
repz
in
rolb
pushf
les
loope
push
ret
adc
data16
sub
aad
jae
push
fucom
jmp
push
sub
mov
mov
js
shl
mov
mov
adc
cmp
add
mov
pop
sbb
sbb
fcompl
adc
dec
ss
call
stc
test
push
mov
mov
jg
mov
add
sbb
hlt
insb
lar
jp,pn
in
and
and
aad
repz
mov
mov
push
add
les
sub
fdivs
hlt
sbb
and
outsl
dec
push
aad
cmp
pop
xor
movsb
or
jo
js
decl
and
lea
dec
pop
jp
xchg
pop
sbb
ret
xor
insb
xchg
sbb
mov
and
fisubrs
adc
cmp
ss
push
mov
sub
dec
jae
mov
sub
jno
iret
cmp
fisttpl
fsubr
test
or
xor
pop
sti
xchg
sbb
and
mov
jge
xor
les
xor
ret
jecxz
mov
fidivrl
ret
ficoml
leave
das
sbb
add
das
push
adc
in
add
and
out
and
jmp
jg
jbe
fcmovne
pop
dec
push
and
iret
cs
jmp
ret
or
add
xchg
adc
sbb
out
gs
test
sbb
push
push
loopne
out
ret
imul
push
inc
pop
out
in
and
mov
lcall
dec
test
pushl
mov
xchg
push
jbe
out
jae
and
mov
mov
cwtl
xorb
mov
mov
mov
in
xchg
mov
sub
pop
fwait
sahf
rolb
jns
lods
push
test
mov
aam
and
jbe
xor
data16
es
adc
and
out
lret
sbb
mov
mov
imul
sti
insb
repnz
sbb
sub
mov
clc
mov
push
push
add
mov
mov
push
xchg
cmp
pop
popa
bound
aas
jo
mov
jg
shlb
jne
insl
imul
movsl
adc
stc
inc
idiv
jg
aaa
fwait
int3
pop
xor
lahf
loope
pop
pop
adcb
adc
cmp
sbb
cmpl
stos
lea
mov
sbbl
daa
push
inc
mov
mov
lds
push
pusha
inc
xor
xor
inc
jb
aaa
imul
lock
in
mov
jl
adc
xor
pop
out
inc
xor
fnstenv
cmc
das
fwait
pushf
lods
in
add
sti
sbb
cmpsl
pop
sub
xor
add
dec
mov
xchg
insl
sbb
mov
mov
dec
sbb
mov
or
int
ja
pop
aad
je
pop
repz
jae
push
jge
mov
or
in
xchg
loop
sbb
push
inc
add
sbb
popa
mov
xor
pop
pop
iret
dec
je
rcrl
ret
fstps
js
pop
cmp
sarl
aas
imul
and
fstl
pusha
pushf
cli
inc
dec
int
les
cmp
out
rcl
frstor
mov
enter
sub
sub
inc
dec
mov
fdivrs
std
bound
out
sub
addr16
out
scas
xlat
mov
mov
jecxz
push
fwait
add
scas
xlat
loope
std
push
out
addr16
dec
ret
mov
idivb
fst
adc
mov
sub
mov
add
mov
add
data16
add
hlt
repz
sub
push
cmpsl
cmpsb
push
xchg
test
std
dec
fs
rcrb
lds
ss
insb
mov
jb
mov
dec
push
dec
mov
mov
push
icebp
add
or
fisubrl
movsb
mov
pop
dec
or
iret
and
mov
mov
arpl
and
andb
data16
out
out
xchg
pushf
loop
pop
icebp
movsl
jno
mov
push
stos
ret
mov
bound
jns
sbb
xchg
xor
fidivs
ret
fstps
inc
data16
xor
and
jl
pop
dec
popa
add
mov
fisubrl
int3
cs
push
pop
push
xchg
fisttpl
and
sub
popa
addb
daa
fisttpll
lods
push
ret
js
jl
aam
lret
mov
and
cmp
aam
fsub
pusha
insl
and
test
fcmovb
pop
mov
mov
out
jg
in
enter
pushf
mov
lock
fninit
xchg
shlb
mov
cltd
shrb
pop
lock
daa
push
dec
or
test
test
rclb
add
cmc
xor
mov
adc
das
iret
test
pop
lds
push
or
rorl
cmp
jle
mov
jo
mov
ret
push
add
sarl
outsl
push
add
ret
pushl
gs
add
mov
pop
xchg
flds
push
fmulp
sahf
inc
push
dec
cld
imul
cltd
add
push
clc
outsb
or
dec
stos
insl
out
ret
inc
cmp
adc
mov
stos
loop
lods
repnz
mov
sbb
sbb
inc
repz
mov
pop
mov
ret
not
stc
fisubl
sar
xor
mov
stc
mov
ret
ds
lahf
test
ss
pop
fbld
aad
inc
loopne
add
push
scas
popa
mov
dec
push
dec
jo
add
sub
repnz
aaa
insl
into
ljmp
adc
inc
dec
fwait
in
cwtl
fs
or
or
xor
xchg
cmp
mov
jnp
xor
out
andl
stos
pop
mov
xor
call
push
pop
push
cltd
push
ss
xchg
mov
add
pushf
jno
rorl
popa
inc
inc
sbb
cmpsl
mov
test
push
out
inc
sahf
mov
fidivrl
add
outsl
mov
das
xor
mov
pop
rolb
stc
and
movsb
jb
popa
out
dec
test
jne
xchg
push
sub
inc
push
insb
mov
cmpsb
mov
outsb
cltd
movsb
loopne
mov
dec
sub
out
mov
inc
lds
mov
or
ss
js
lahf
inc
ficoms
cmp
icebp
mov
out
negl
lret
cld
push
popa
or
fstl
dec
add
cld
sbb
scas
cli
jg
loope
divb
xor
push
jns
roll
add
push
push
add
add
add
push
dec
popl
sbb
inc
pusha
loope
inc
hlt
inc
imul
insl
scas
fwait
add
mov
mov
fwait
jno
cltd
fmuls
outsb
fdivrl
movsl
cmp
flds
xor
add
and
and
push
lds
xor
int
shr
ss
dec
pop
sub
stos
test
imul
mov
mov
push
jne
add
jge
js
fistpl
cld
mov
and
stc
or
jmp
popf
adcb
popf
push
lea
outsb
cltd
push
dec
idivb
pusha
sbb
adc
push
mov
pusha
add
jl
ds
cmp
sub
fwait
mov
jmp
mov
or
arpl
sti
and
jg
jg
inc
pop
repnz
rclb
popf
jge
out
fcomps
jecxz
fwait
jmp
jl
or
pop
mov
adc
hlt
test
daa
push
mov
subl
sti
and
sub
or
int3
sub
push
dec
lret
fbstp
pop
xchg
pop
call
push
xchg
pinsrw
push
push
fld1
js
pop
pushl
add
pop
ss
repnz
shlb
add
imul
adc
in
lods
push
and
push
aad
push
add
jmp
jns
in
inc
lret
mov
sti
stos
stos
and
jbe
popf
sub
insl
scas
inc
xchg
stos
in
adcb
andb
jmp
xlat
aaa
xor
adc
test
xchg
pop
pop
repz
or
cmp
xor
push
add
rep
insl
stos
mov
inc
mov
mov
add
insl
mov
sarb
adc
mov
push
rorl
dec
xchg
sbb
mov
push
or
fisttps
out
dec
decl
ljmp
aas
pusha
adc
jle
jl
jbe
jecxz
ja
pushf
pop
inc
es
jns
mov
xchg
push
dec
out
xchg
rcrb
pop
cmpsl
fdivr
into
and
clc
js
cs
sahf
cmp
cld
push
imul
inc
xor
fsubrs
mov
arpl
std
ljmp
sahf
mov
push
inc
arpl
mov
pop
or
loope
cwtl
adc
cwtl
or
mov
in
std
xchg
test
repz
jb
adc
pop
mov
cmp
int3
stc
dec
and
stos
inc
jae
mov
out
xor
shlb
idivb
pop
insb
movsb
imul
push
jmp
in
repz
add
dec
sub
dec
push
sub
test
sbb
mov
fsubl
add
mov
cmp
push
mov
pop
in
insl
ss
ficomps
jne
aas
xor
cltd
fdiv
aaa
mov
add
mov
pop
pop
mov
or
bound
rcrl
loope
dec
das
jg
testl
and
jne
shlb
add
ret
inc
fmulp
stos
add
jg
add
mov
pop
repz
xor
pushf
cmp
cmc
xchg
repz
pusha
out
mov
jecxz
stc
popf
pop
sbb
arpl
add
neg
mov
into
cmp
outsl
mov
push
adc
loopne
out
mov
cltd
xor
jl
add
cltd
out
call
pop
add
add
in
or
cmpsl
mov
shll
xchg
push
push
test
into
fdivrl
clc
push
fsincos
mov
popf
xchg
mov
rcl
mov
imul
das
shll
xchg
xor
pop
cli
in
pop
inc
cmpsl
jb
test
test
mov
loope
in
es
fucomi
fsubs
jp
fdivp
bound
arpl
rcrb
push
xlat
stos
pop
sbb
cltd
inc
sbb
ss
mov
dec
inc
daa
or
mov
sbb
stc
aam
xor
repz
testl
out
rcrl
pushf
pop
add
out
movsl
cmp
adc
xchg
insl
lods
adc
inc
cmpsb
xchg
inc
and
rcrl
lock
outsb
mov
sbb
in
jle
mov
mov
add
stos
jge
cwtl
test
int
jle
adc
pusha
dec
shl
shll
jl
mov
adc
or
xor
xchg
insl
add
xor
adc
sub
int
sar
xchg
test
push
js
mov
xchg
inc
fldt
inc
imull
adcb
inc
adc
xchg
fcmovne
cmp
or
and
mov
sbb
daa
lret
xor
fstps
in
sub
adc
push
mov
std
push
xchg
iret
jne
int3
into
adc
fs
mov
sub
jge
mov
pop
jo
and
test
nop
xlat
sti
rclb
cmp
sysenter
mov
rorl
adc
nop
sub
mov
stos
stc
inc
or
enter
xchg
fs
sbb
or
lock
add
xchg
push
or
xor
cmp
mov
mov
adc
stos
jbe
clc
inc
push
je
mov
repnz
xchg
cmc
xchg
adc
ret
jnp
movsb
xchg
pop
nop
and
mov
jne
mov
aam
ficoml
push
aas
add
push
je
cwtl
mov
jecxz
mov
repz
and
adc
out
loop
fidivl
sbb
ljmp
inc
pushf
dec
cmc
popf
int3
sti
add
sub
lds
scas
mov
adc
mov
pop
repz
pop
ffree
fwait
push
dec
iret
pop
pop
hlt
std
xor
and
xchg
pop
inc
cmp
mov
jp
jp
sbb
pushf
mov
mov
enter
call
mov
push
jge
fcomi
jp
setle
inc
repz
jl
in
adc
xchg
xlat
sti
fdivrs
xchg
pop
mov
cli
rcll
cmp
ljmp
cmp
xor
arpl
xchg
mov
decb
cs
repnz
das
mov
cwtl
insl
add
cwtl
sahf
jge
inc
pop
test
push
mov
lock
std
or
dec
loope
mov
test
add
xchg
and
les
jae
sbb
sub
pop
dec
inc
stos
and
add
xchg
inc
dec
ds
xor
mov
call
popf
sbb
scas
mov
mov
insl
mov
jns
pop
ret
shr
loopne
test
jge
push
pop
filds
sub
inc
pushf
test
or
lcall
pop
pop
flds
iret
mov
ljmp
bound
sahf
popa
ret
fimull
jmp
mov
xchg
and
push
punpcklbw
mov
mov
mov
smsw
adc
imul
filds
pop
inc
inc
lcall
sbb
cmp
pop
repnz
mov
lock
out
mov
shlb
fdivl
scas
mov
rcrl
push
cmp
cmpl
loop
xor
loopne
pop
fcoml
cld
aas
js
pop
pusha
stc
xor
and
pusha
push
lock
and
dec
xlat
js
add
std
lds
mov
xorl
and
sbb
push
inc
movsl
cld
mov
mov
inc
rcrl
or
and
sbb
aas
mov
aaa
mov
flds
mov
in
xchg
jle
cli
mov
xor
les
loop
mov
mov
pop
fbstp
push
nop
add
push
clc
or
fs
jne
adc
out
out
fldt
cmp
lock
dec
push
pop
sub
rcrb
xlat
sbb
daa
or
movsb
loope
clc
push
add
negl
push
pop
xor
cmp
shlb
push
lods
or
pop
gs
pop
dec
test
and
jo
out
mov
popa
clc
mov
stc
fs
xor
rcrl
push
and
clc
cmp
scas
push
mov
sbb
hlt
cmpsb
adc
sbb
lahf
lcall
xor
mov
cmpsb
lods
aam
dec
out
nop
push
sbb
and
outsb
inc
shlb
pop
in
and
sahf
out
cmp
push
mov
ret
daa
lea
les
gs
cmp
test
cld
adc
or
inc
mov
movsb
pop
dec
pop
out
dec
shrb
dec
sub
clc
sub
mov
les
sti
jmp
pop
pop
mulb
hlt
hlt
daa
sbb
bswap
sub
jle
inc
lret
or
cs
pop
adc
add
or
xor
xchg
fdivrs
jnp
mov
je
push
pop
sbb
fs
push
pop
sbb
xchg
cmp
pop
xchg
in
leave
das
clc
mov
ja
mov
dec
test
sub
xlat
mov
mov
jns
ss
popf
lret
pop
mov
aad
test
lcall
jge
iret
decb
xchg
adc
mov
cmpsl
pop
jle
movsl
xchg
sti
fidivs
mov
xor
dec
int3
mov
push
cli
pop
inc
fisttps
xor
ljmp
lret
leave
push
xorb
or
cmpsb
jecxz
add
loope
faddp
popf
stc
cld
int
out
add
mov
repnz
sbb
insb
push
dec
filds
xor
add
imul
addr16
sbb
add
push
xchg
ljmp
lea
push
push
inc
mov
sbb
repnz
std
push
arpl
xchg
jno
mov
shrl
or
inc
push
sti
fcoml
jno
or
jg,pn
sarl
mov
aas
mov
cmp
out
enter
push
pushf
pop
ret
adc
jns
cmpb
lods
mov
cmp
sbb
jmp
lret
sbb
cmpsl
in
or
pop
xorl
repz
ss
inc
and
mov
mov
clc
xor
inc
mov
push
push
loopne
mov
hlt
fiaddl
xor
adc
sbb
gs
xchg
dec
mov
jmp
jo
push
adcb
pop
lods
fisubs
bound
mov
inc
adc
cltd
pushl
out
sub
jle
fldcw
xchg
sub
mov
mov
xlat
adc
cmpsl
mov
xor
comiss
ljmp
lods
mov
xchg
lret
push
mov
movzwl
mov
mov
iret
inc
dec
add
call
sbb
inc
xchg
cmp
and
pop
in
pop
cmp
mov
int
insb
xor
xchg
push
push
jb
jno
inc
and
add
ss
or
rcll
ficoms
movsb
testl
mov
clc
loop,pt
mov
or
dec
pushf
pushf
xor
fnstcw
sbb
lods
push
ret
push
imul
fdivrs
mov
test
test
lahf
in
cld
xor
xchg
mov
cmp
aam
fs
je
inc
xor
inc
adcb
jnp
add
xchg
pop
insl
sar
in
push
ja
dec
icebp
xlat
xchg
shlb
andl
jp
jl
sub
sub
dec
sar
mov
push
test
cmp
push
push
repnz
lret
movsb
pusha
mov
inc
or
mov
mov
mov
out
jp
insb
push
mov
lods
add
je
dec
adc
push
mov
hlt
push
dec
movsl
fwait
add
mov
call
sbb
jmp
popf
out
outsl
sbbb
xor
in
leave
fsubl
mov
mov
movsl
mov
fstpl
push
sahf
lds
adc
addr16
lods
xchg
lods
xor
mov
scas
xchg
hlt
add
stos
rcrl
pusha
loopne
and
outsw
lods
add
adc
inc
xorl
lods
int3
stos
add
scas
push
pop
sbb
repnz
push
in
xchg
mov
pop
aas
mov
adc
sbb
int3
popf
jne
lcall
and
mov
mov
stos
adcl
call
outsb
add
and
mov
or
lds
inc
pop
inc
andl
adc
mov
push
add
push
popa
rcrb
ja
repnz
add
mov
aad
rcrl
sub
or
add
sbb
js
mov
dec
mov
ja
lea
pop
dec
stos
add
cmp
pop
cmpsl
pop
adc
movsb
test
dec
das
cmp
cmp
jae
lods
or
inc
andb
pop
sbbb
xchg
dec
cmp
mov
jg
daa
in
adc
inc
or
rcrl
mov
push
mov
sub
or
shll
jnp
and
mov
cmp
stc
lods
aad
test
jo
popa
cmpsl
inc
pop
jno
sub
das
push
cmc
out
orl
xchg
adc
shll
orb
rcll
outsl
sarb
pusha
les
lahf
sbb
push
stc
gs
loopne
icebp
adc
add
mov
xchg
xlat
inc
and
fadds
sbb
ss
call
jne
aad
ss
js
cltd
push
mov
jge
sbbb
mov
cmc
jns
stc
mov
cmpsl
out
xor
out
out
imul
insb
jb
daa
call
insl
add
xchg
jmp
cld
jp
insb
xorb
mov
bound
push
fsubrl
xchg
mov
out
fwait
xchg
sbb
dec
rolb
xchg
cmp
dec
push
pop
push
or
jnp
loop
xchg
or
dec
movsl
stos
add
jp
addb
cs
inc
cmpsl
outsl
adc
and
adc
xchg
cmp
dec
or
xor
nop
adc
clc
sbb
mov
dec
movsl
out
enter
push
outsl
ljmp
push
ja
or
rolb
int3
push
cmc
popa
mov
add
ja
or
sub
in
test
jle
mov
adc
or
ja
xchg
nop
into
adc
fstpl
repnz
pop
imulb
sbb
fcomi
jb
jns
addr16
ret
pop
das
sti
test
loope
or
jns
fwait
stc
xor
push
mov
scas
xchg
mov
pop
mov
sbb
sbbb
sbb
fdivrs
dec
test
inc
pop
ja
jo
jno
dec
ret
sub
jl
pop
and
shl
sbb
jns
icebp
stos
jmp
add
pop
cli
mov
dec
sub
stos
jl
mov
cmp
repnz
test
pushf
add
xchg
bound
add
xchg
mov
pop
mov
in
inc
xchg
add
mov
pop
or
out
out
pop
faddp
sbb
out
xchg
pusha
lea
mov
lahf
fcomps
adc
pop
push
cmp
xlat
mov
mov
in
mov
shrb
test
push
aam
rcr
aaa
sbb
pop
pop
push
adc
lea
dec
test
pop
add
jns
leave
pop
mov
test
cld
jl
lds
dec
xchg
pop
incb
push
stc
adc
xor
cmp
pop
je
arpl
fisubl
es
push
sub
ret
outsb
xchg
add
movsl
xchg
or
inc
cltd
rol
cmp
pop
stc
scas
jo
sbb
in
inc
xchg
clc
mov
inc
pop
sti
cmp
in
insl
push
pop
pop
mov
fimull
mov
xchg
xchg
xchg
inc
jp
push
lods
or
xchg
add
add
in
and
add
pop
push
inc
loop
addr16
push
gs
push
cs
xor
aam
out
test
mov
into
jbe
dec
call
insl
enter
xor
xor
insl
into
in
mov
lret
xchg
bound
incl
pop
lea
icebp
xchg
out
ss
adc
repnz
pop
ja
jno
rorl
or
inc
cld
stos
xlat
ret
jp
pop
or
inc
jae
fs
cmp
jae
mov
xchg
int3
cli
fwait
aas
dec
lcall
movsb
xchg
imulb
test
mov
nop
icebp
outsl
mov
and
jge
mov
jno
jns
movsl
sbb
xchg
jl
lret
scas
les
cmp
sub
cmpsb
fwait
inc
sub
inc
sub
rolb
in
jecxz
or
div
jbe
pop
jno
inc
jnp
imul
pop
sbb
cmpsl
mov
inc
push
cli
sbb
mov
inc
jle
lea
and
fisubrl
and
pop
xlat
es
sbb
daa
mov
negb
daa
cmpsb
pop
or
and
mov
pop
andps
stos
push
push
adc
fimuls
push
push
fsubrl
mov
inc
das
shlb
cmc
std
adc
into
shlb
arpl
push
jl
jg
stos
popf
std
xchg
sub
and
jl
out
adc
popf
loope
sub
mov
xchg
insl
adc
pop
xor
mov
mov
push
dec
cltd
das
push
sub
ja
jno
fadds
mov
sub
test
out
ror
mov
rorl
and
dec
rep
out
mul
lods
sbb
jp
mov
inc
loop
fldl
bound
xor
cmpsl
mov
xchg
nop
test
push
ret
or
xor
out
dec
fmuls
popa
inc
inc
lahf
or
int
mov
lcall
lret
mov
pop
out
add
mov
lahf
cmp
sub
hlt
inc
adc
insb
lcall
dec
mov
das
dec
pop
test
stc
std
ret
enter
aaa
jl
pop
out
aam
xor
sub
adc
xor
dec
mov
js
sbb
stc
add
push
aam
mov
inc
or
or
loop
mov
out
aas
and
loopne
jno
or
or
jp
inc
jbe
mov
push
outsb
adc
leave
pushf
jmp
int
sub
dec
lods
or
filds
add
mov
fstl
imul
adc
mov
jle
pushf
out
test
cmp
and
adc
fidivrs
scas
dec
push
test
cmp
lret
push
cmpb
cmpsl
inc
subb
es
fcmovnb
or
mov
mov
cwtl
in
shr
in
push
in
imul
xor
jnp
rcll
mov
pop
test
cld
dec
push
pop
fs
testb
jecxz
fstpl
cmp
fsubl
les
mov
je
js
or
movsl
sarb
or
cli
fistpll
lret
or
lock
scas
xor
jns
push
and
pop
mov
jecxz
pop
std
mull
cmpsl
and
xchg
pop
lahf
aas
sbb
stos
mov
pop
loop
gs
nop
outsb
shll
nop
mov
add
jecxz
std
aas
movsl
jo
mov
mov
sbb
xor
divl
ss
push
jg
movb
dec
imul
dec
jge,pt
inc
lret
lock
push
jl
pop
jns
cmp
pop
imul
dec
sbb
push
adc
mov
insl
daa
inc
add
jo
mov
out
dec
mov
sub
xor
test
and
jbe
mov
jp
mov
push
dec
or
mov
sbb
mov
sub
mov
pop
fidivrl
dec
add
push
inc
sbb
cmc
rcrb
jne
pop
out
sbb
scas
or
loopne
fcompl
shrb
sub
enter
jb
mov
mov
pop
aad
and
fsub
adc
data16
push
pop
mov
sbb
test
jmp
movsl
mov
push
add
pop
cmpsl
cmp
addl
dec
push
cltd
movsl
bound
add
add
dec
xchg
sub
cs
xlat
in
data16
scas
movb
aam
imul
pop
insl
push
iret
jmp
jmp
movsl
mov
fnsave
cmp
inc
xor
push
lret
test
push
push
push
leave
cltd
adc
cmp
ffree
cmp
sub
sub
push
cmp
cmp
jecxz
or
sbb
add
pusha
mov
mov
fcos
pop
repz
adc
push
scas
adc
add
lea
adc
in
leave
mov
push
or
out
iret
into
inc
gs
cltd
ret
jns
hlt
movsl
sub
adc
arpl
jns
mov
fs
ja
jle
fsubrl
push
fimuls
mov
ja
daa
sarl
adc
jns
stos
icebp
cwtl
imul
addr16
xchg
mov
or
adc
adc
or
or
cmp
ljmp
cmp
fdivs
jns
jne
dec
jge
adc
cmp
int
add
sub
mov
pushl
dec
mov
js
mov
dec
add
repnz
mov
fs
mov
stos
outsl
pop
bnd
and
mov
cmp
gs
inc
rcrb
and
mov
or
fs
pop
push
nop
mov
adc
popa
mov
hlt
fists
jl
addb
aas
xchg
test
fs
loopne
xchg
sbb
xchg
pop
mov
or
pusha
test
fs
and
imul
sbb
jp
mov
aam
sbb
mov
xor
jcxz
fildl
xchg
jbe
arpl
into
outsb
push
in
mov
int
loop
mov
cmp
cmp
fstpt
mov
pop
pop
jmp
push
mov
and
mov
repz
or
jge
xchg
mov
pop
xchg
mov
adc
mov
clc
data16
mov
js
inc
outsb
clc
or
xor
sub
stos
push
sub
lahf
in
inc
sub
jns
xchg
ret
in
push
fidivs
inc
dec
jg
push
jo
sbb
pop
xchg
cmp
ds
xchg
or
jg
shll
outsl
sub
mov
loop
stc
mov
out
mov
mov
dec
pop
icebp
aad
popf
popf
xor
inc
push
dec
test
add
cmp
into
push
add
inc
push
rclb
dec
sarl
jb
std
aam
or
nop
test
or
jne
sbb
outsb
push
sbb
adc
pop
sarb
pop
sbb
hlt
jno
loopne
data16
adc
int3
mov
inc
jmp
push
fimull
and
cld
xor
fistpll
inc
add
sub
add
sbb
xchg
pop
mov
dec
std
loop
hlt
into
xchg
andb
xlat
xchg
ljmp
and
jne
data16
xlat
inc
mov
imul
out
insl
mov
out
cmpl
jno
mov
test
std
arpl
pop
leave
xchg
pushl
jecxz
xchg
xchg
jo
push
imul
add
stos
add
push
add
pop
mov
push
adc
jg
xor
cwtl
pop
test
es
aam
pop
pop
jne
insl
ffree
insl
inc
mov
sbb
sub
decb
dec
movsl
cld
sbb
jecxz
insb
inc
push
aaa
cmp
jge
inc
fnstenv
cmp
xchg
mov
jnp
sbb
into
mov
dec
push
mov
mov
in
cwtl
in
mov
cmp
arpl
push
cmpsb
sbb
and
cmpb
in
adc
pop
mov
mov
push
pop
arpl
push
ror
test
adc
xchg
addb
mov
mov
xor
bound
idiv
scas
adc
lret
add
cmp
ljmp
mov
dec
lods
jmp
cmp
imul
mov
and
adc
leave
xchg
push
ss
shl
mov
xor
pushf
cmpsb
xor
sbb
xor
add
rcl
mov
outsb
cld
xor
in
dec
mov
imul
dec
add
adc
inc
icebp
outsl
and
add
pop
pop
xchg
push
std
xchg
aam
loope
adc
cmp
cld
cmp
mov
enter
dec
cmp
pop
inc
lods
pop
xlat
inc
test
cmp
inc
imul
adc
cmp
lds
mov
or
mov
rclb
pop
xor
push
stos
jae
lret
das
rolb
inc
xor
jg
test
out
sti
cmpl
lods
jg
cld
sbb
loope
testl
ret
imul
loopne
inc
lret
mov
inc
xor
cli
les
lea
push
shrb
sub
scas
lahf
ja
push
sbb
imul
andl
rol
mov
or
aas
mov
repz
aas
xchg
inc
jecxz
push
xchg
pextrw
sub
jmp
jmp
mov
mov
cmp
test
call
xlat
or
rcll
stc
jmp
xlat
cmp
lods
cltd
js
jmp
xlat
jns
jae
mull
repnz
adc
xchg
sahf
mov
mov
adc
daa
out
cmpsl
sbb
xor
push
pushf
mov
stc
inc
mov
fbld
sub
pop
mov
sub
mov
test
cmc
sub
jb,pt
mov
or
inc
sbb
xchg
and
scas
push
jg
mov
adc
imul
fsubl
jl
in
pushf
or
ljmp
mov
fisttpl
sti
loope
in
shll
pop
clc
pop
cwtl
test
inc
adc
inc
mov
je
lahf
insb
dec
mov
outsl
ret
imul
ss
push
int3
lahf
mov
xchg
sbb
aas
inc
sbb
jns
add
adc
out
cmc
or
sti
shrb
sbb
xchg
rorb
cltd
cmp
and
std
or
test
or
nop
leave
fdivrs
mov
andl
mov
in
mov
xlat
and
inc
fdivrs
xchg
push
pop
stos
adc
fimull
out
adc
js
xor
arpl
push
mov
loopne
pusha
shrb
sahf
xor
mov
sahf
push
add
cld
rcrb
inc
sub
mulb
mov
mov
mov
je
xor
add
push
push
hlt
pusha
dec
repnz
cmpsb
in
cmp
in
dec
cmp
push
mov
inc
ret
je
xchg
mov
int
push
mov
fnstcw
or
pop
scas
mov
iret
add
xchg
cmp
jle
aam
jmp
xchg
dec
pushf
jno
popf
xor
out
inc
test
sbb
addl
xor
mov
cmp
mov
or
pop
sub
cwtl
insb
pop
and
cld
loop
push
shlb
cli
test
and
mov
inc
and
sarb
scas
lahf
shrl
jbe
ror
sbb
outsl
cmp
lcall
push
scas
aad
push
je
adc
mov
sbb
call
leave
popf
in
pop
sbb
nop
pop
decl
outsl
pop
lock
push
inc
fisttpll
lret
loop
jg
add
cmpsl
pop
mov
jmp
cmp
std
push
and
scas
movb
icebp
mov
inc
xchg
and
sub
push
or
es
jnp
mov
xlat
lret
imul
xor
ret
and
imul
push
push
push
imul
imul
mov
outsl
das
in
cmpsl
stos
xchg
ss
mov
xchg
cwtl
mov
or
cmpsl
dec
rclb
std
and
push
or
insb
scas
mov
or
mov
pop
dec
fwait
rclb
test
ds
fldt
stos
pop
pushf
xchg
pusha
inc
mov
jns
or
inc
sti
dec
or
cmp
pop
mov
fwait
test
sbb
mov
inc
adc
mov
cld
inc
xor
les
jno
adc
push
aad
test
jmp
cmpsl
shll
jp
lock
outsl
mov
mov
pushf
sbb
mov
insl
out
inc
xchg
sbb
pop
shrb
or
int
pop
sti
sbb
push
or
mov
mov
bound
mov
or
jnp
movsb
cmpsb
xor
lods
sub
insb
mov
fistpl
test
dec
loop
or
dec
jg
enter
dec
cmp
mov
popa
dec
mov
int3
mov
cmp
add
adc
jge
mov
adc
push
sub
sbb
and
ss
sbb
loop
in
std
or
insl
and
imul
adc
cmp
loop
imul
pop
adc
pusha
mov
sbb
jns
das
xchg
or
dec
movsl
pop
cmc
shll
orb
xchg
subb
add
add
xchg
pop
mov
aam
lds
sub
sbb
fsubrl
xor
xchg
shrb
sub
xor
out
in
in
cld
sbb
js
pop
icebp
mov
inc
fsubrl
cmp
sar
outsl
ficomps
sub
cltd
and
cltd
cltd
dec
imul
jno
add
or
les
mov
daa
push
gs
adc
jge
call
cmpsb
jbe
cmpl
test
push
sub
cmp
xor
xchg
std
cmp
pop
pop
rorb
sbb
les
add
into
imul
jg
insl
sub
cltd
or
cmp
mov
out
add
dec
int
stc
cmp
addb
rorb
popa
mov
inc
out
mov
push
mov
inc
arpl
pop
inc
mov
fbstp
mov
cli
out
fnstcw
es
iret
inc
push
sti
xchg
cmp
or
cmp
pop
int3
push
arpl
jns
imul
sub
xchg
dec
stc
hlt
lock
movsl
gs
loopne
adc
lea
add
insl
or
jbe
out
movsb
fstpl
loop
cld
push
adc
ds
rcl
outsb
test
adc
lds
add
js
dec
jno
popa
mov
mov
xor
xchg
xor
xor
inc
or
lret
les
imulb
test
popf
mov
push
ret
scas
and
xchg
sbb
loop
dec
sbb
call
gs
inc
mov
sub
scas
inc
test
inc
mov
ret
adc
push
imul
dec
xor
xchg
ret
add
inc
fdivl
ja
pop
or
lods
push
pusha
mov
mov
popf
mov
cmpsb
fprem
mov
sub
xchg
sbb
jnp
add
fdivrs
push
pop
mov
iret
push
out
or
jb
jns
jl
cmpsb
bound
xchg
xchg
cmp
cld
push
int3
sbb
stos
cmp
sbb
pop
inc
mov
push
stos
hlt
mov
and
divl
ret
mulb
fisttps
ret
lds
and
add
mov
in
aas
fistpl
cmpsb
mov
and
cli
out
out
sahf
pushf
arpl
push
loopne
ror
or
xchg
cld
and
jno
inc
ss
fcoml
insb
and
add
enter
and
sahf
arpl
mov
ss
pusha
mov
add
mov
jbe
mov
cmpl
mov
ret
rcl
push
dec
sub
lods
push
iret
jg
loope
les
sti
add
cli
sub
mov
inc
lcall
ds
sub
sub
clc
jnp
loope
pop
sbbb
ret
push
cwtl
mov
mov
lcall
dec
jge
std
push
lcall
cmp
inc
and
je
popa
push
push
in
pop
xor
loope
push
insb
dec
pop
lret
aad
call
lcall
hlt
mov
lock
adc
popf
sbb
shl
ret
lahf
and
or
fs
push
pop
insl
jo
aad
fsubrl
sbb
xchg
add
adcl
or
sub
push
mov
push
mov
sub
jo
imul
mov
sub
jl
inc
and
add
pop
ret
add
das
mov
ror
sub
into
jecxz
test
ds
testl
pushl
je
cmpsl
cmp
pusha
pop
jge
clc
ficompl
add
sub
call
scas
xor
push
int3
xor
mov
mov
ret
xchg
sbb
adcl
pop
xor
inc
add
or
incb
push
in
mov
mov
jo
jns
cmp
gs
cmovs
repz
mov
outsl
sar
movsl
and
sub
sbb
into
mov
mov
sbb
mov
dec
dec
in
push
cmp
movsb
dec
scas
xchg
push
lcall
scas
jge
sub
das
jo
mov
sti
push
inc
dec
lock
fmuls
jg
mov
add
popa
push
lock
les
jno
mov
out
fs
and
js
outsb
sub
ss
rorb
sub
xor
cwtl
mov
xchg
repnz
cmc
push
sub
fsubrl
xor
cmp
jp
ffreep
enter
stos
cld
es
popf
imul
sbb
push
and
insl
and
mov
push
inc
jp
loop
jno
cmp
xor
sub
shrb
or
lods
arpl
hlt
pop
hlt
bound
fcomps
lcall
clc
sbb
push
out
pop
mov
div
insb
es
and
lret
mov
or
push
sbb
mov
jl
fwait
pop
jg
cltd
fs
lahf
push
push
out
jecxz
mov
cwtl
jle
dec
xor
outsl
mov
and
jo
pop
mov
add
jae
lds
xchg
dec
mov
leave
dec
jge
repz
shl
sti
cs
add
inc
inc
inc
inc
jo
jno
xor
pop
in
out
adc
xchg
mov
dec
mov
jecxz,pt
mov
rorb
inc
jmp
adc
negb
jmp
ss
mov
sarb
mov
fwait
out
mov
xor
hlt
sbb
pop
iret
adc
loope
sbb
imul
cli
xchg
cmp
jnp
cmp
pop
jne
leave
mov
xchg
decb
sbb
jp
mov
cwtl
jmp
lcall
fldcw
or
xchg
or
in
lods
fsubs
pop
jbe
movsb
dec
mov
imul
mov
sub
push
jmp
xor
jge
outsb
mov
rorb
loopne
imul
add
mov
rcrl
jg
push
addr16
jmp
fldenv
mov
mov
xchg
jb
test
mov
push
or
push
mov
roll
push
pop
insl
mov
or
push
cmpsb
sub
fdivrs
inc
lahf
and
sbb
vmwrite
lret
call
add
push
jmp
jmp
je
cmp
mov
rorl
shufps
cld
sub
sub
cmp
test
loopne
mov
hlt
xchg
xchg
mov
push
cmp
and
pusha
icebp
push
adc
xor
insl
cltd
xor
lock
imul
mov
dec
rcl
mov
or
inc
inc
pop
xlat
cmp
movl
push
sub
xchg
sahf
sbb
pop
pop
imul
fidivs
inc
stos
xchg
test
push
and
xor
repnz
sti
dec
xchg
mov
adc
fstpl
ds
stos
js
rclb
loop
pop
jecxz
add
mov
or
xchg
jo
aaa
lock
arpl
insl
stos
jo
push
cmp
fucomp
cmpsl
jbe
jge
xchg
out
pop
xchg
cli
jl
fisttps
mov
lea
push
xchg
add
sbb
mov
mov
lret
mov
out
sub
pop
adc
call
je
adc
shll
xor
sarb
out
cmp
outsb
outsl
or
sbb
push
pop
push
cmp
imull
jo
push
xchg
mov
dec
mov
cli
pop
sbb
punpckldq
xchg
stos
mov
in
out
mov
mov
sbb
mov
int
sub
enter
gs
je
adc
in
sbb
push
fdivrs
cld
fistpl
in
jo
aam
jmp
mov
scas
mov
jg
stc
inc
pop
pop
cmp
and
xchg
cmp
or
test
push
pop
jmp
das
jmp
dec
fbld
enter
imul
in
decb
mov
sbb
mov
test
xor
stos
test
lods
mov
pushf
or
std
ficoms
adc
xchg
xor
inc
xchg
imul
cld
adc
xor
jo
inc
cmp
sti
or
cmpsb
add
xchg
rcll
ds
pop
and
test
into
imul
mov
push
jae
mov
xchg
jae
aad
jp
ret
jl
addr16
pop
mov
add
push
mov
ljmp
inc
push
push
pop
xor
sub
push
mov
int3
or
out
lcall
enter
stc
xor
inc
sub
cwtl
icebp
call
pop
aas
adc
mov
adc
movsl
arpl
push
mov
imul
xchg
dec
xchg
sub
cmpsl
push
ljmp
insb
js
sub
out
in
jnp
ds
ds
xchg
push
cmpl
or
leave
add
pop
loopne
add
jmp
mov
mov
lods
mov
dec
xchg
test
mov
out
dec
out
push
sbb
aaa
shl
mov
out
mov
aas
dec
sub
pusha
pop
movb
mov
icebp
movsb
sub
or
cmp
idivb
bound
dec
sbb
sbb
lea
jno
xor
subl
cmp
aam
scas
cmp
sbb
xacquire
add
xchg
aad
lods
or
cmpb
or
jae
out
jmp
movsl
cmc
sahf
push
fst
push
ja
aas
mov
xchg
aaa
call
cmp
jns
repz
cmpsl
or
xchg
mov
jno
inc
aad
stc
xchg
or
add
mov
lea
adc
into
pop
sub
sahf
dec
mov
aas
aaa
add
test
andl
ret
ret
cwtl
pop
sbb
mov
and
leave
pop
gs
lcall
push
cmp
fcmove
fldcw
push
xchg
xor
clc
mov
out
mov
add
jnp
inc
adc
imul
fwait
imull
dec
push
test
and
imul
std
jge
ret
ret
xchg
sub
scas
stos
dec
and
push
mov
loop
loopne
scas
insl
es
in
cmc
push
inc
mov
mov
xor
or
inc
jns
jbe
jbe
jecxz
shll
pusha
repz
pop
mov
fs
jle
cmp
jb
pushf
in
icebp
and
lcall
xchg
xor
dec
dec
pop
movsl
dec
add
or
aas
fldt
shll
lock
popf
dec
sbb
aam
push
fstpl
jo
jl
ror
dec
fidivrl
inc
outsb
jae
int
jecxz
in
imul
lds
cmc
inc
enter
cli
das
mov
sarl
adc
add
test
add
jge
and
pop
xorl
ret
xor
popa
out
inc
aas
sub
add
pop
adc
mov
dec
pop
rclb
mov
pop
jge
sti
es
sub
sub
andl
xchg
and
out
hlt
push
in
lcall
xchg
das
cmc
sahf
loope
mov
loopne
scas
xchg
pop
mov
fidivs
mov
cmp
jl
sbb
fwait
mov
hlt
xsave
add
adc
movsl
test
das
cmpb
xchg
mov
xor
mov
insb
mov
push
stos
lret
inc
mov
rcrb
stc
or
adc
jnp
add
mov
test
push
pop
or
pusha
movsl
sti
aaa
jbe
lods
sahf
add
nop
dec
ss
jae
pop
mov
cltd
mov
jne
ret
jle
and
rorb
fimuls
inc
hlt
push
rorb
jecxz
sub
cli
test
loop
insb
out
pop
addr16
or
xchg
loopne
scas
xchg
into
pop
mov
jg
shl
push
sbb
cmp
xchg
out
loop
arpl
lret
or
mov
lock
in
in
movsb
stos
ficompl
movl
outsb
add
add
das
pop
inc
mov
mov
mov
daa
jo
dec
mov
mov
addb
inc
idivb
int3
pushf
movaps
arpl
imul
sahf
stos
je
shrb
cld
imul
push
insb
adc
inc
js
das
arpl
add
xchg
decb
mov
test
outsb
adc
inc
pushl
mov
and
enter
xor
xor
cld
divl
mov
jbe
aas
rclb
add
sbb
gs
into
adc
mov
rorl
std
mov
icebp
mov
mov
adc
jae
sbb
and
jno
mov
lret
sbb
mov
sbb
inc
and
in
pop
push
das
fstpt
aas
hlt
dec
fnstcw
das
std
icebp
fs
pop
xor
je
cmp
mull
daa
jl
test
out
mov
dec
xor
pop
lea
les
pop
sub
negl
loop
jmp
or
loopne
inc
pop
test
lcall
cmp
jns
iret
mov
jp
filds
mov
cmpsl
jmp
adc
or
stc
lods
dec
pop
mov
push
sub
leave
xlat
or
aad
dec
pop
sub
lahf
inc
lods
sub
mov
orb
xchg
jg
mov
js,pn
ficompl
outsl
ja
fdivr
ja
cmp
fisubs
xor
adc
mov
push
lods
decl
pop
xor
xor
push
test
out
push
adc
ret
mov
adc
and
cs
stos
dec
push
push
xchg
test
popa
xchg
lcall
add
ret
std
pop
fwait
jns
mov
cmp
and
pop
mov
inc
mov
add
icebp
adc
mov
jge
pop
jns
adc
cmp
iret
into
shrl
call
mov
js
adc
rcll
ss
int
adc
cmp
imul
mov
sbb
and
mov
mov
inc
adc
out
pop
xorb
push
push
shrb
pop
or
js
out
hlt
cmpsb
sar
xor
clc
or
leave
mov
lds
pop
cmp
jbe
inc
or
jg
jmp
popa
xor
pusha
mov
dec
jae
xchg
movsl
jmp
int
fnstsw
xchg
and
sub
fldl
icebp
cltd
lcall
jne
frstor
test
int
out
pop
faddl
gs
shrb
or
shlb
cltd
cmpsl
movzwl
push
inc
xchg
out
les
mov
add
jno
outsl
movsl
and
cld
fdivl
sar
inc
popa
fwait
dec
or
lods
lods
lods
mov
or
xchg
int
cmpsb
cltd
xchg
push
int3
repz
arpl
loop
pop
add
rol
shlb
cltd
shrb
mov
dec
shr
cltd
mov
mov
movsl
cmp
packssdw
mov
inc
or
sbb
addr16
inc
ljmp
fnstcw
jecxz
mov
xchg
xchg
cmpl
cmpsl
cli
inc
xchg
loopne
mov
insb
bound
cmp
inc
sbb
push
or
imul
shlb
mov
enter
daa
leave
mov
cli
stc
iret
pop
push
jno,pn
xchg
xor
lret
mov
sub
out
dec
pop
sub
bound
or
cmp
pop
dec
pop
mov
in
dec
test
les
mov
jbe
scas
aad
adc
add
cli
adc
testl
out
add
mov
push
xchg
add
lods
cmp
sub
mov
pop
es
mov
or
mov
sub
fidivl
testl
arpl
addr16
in
aad
ljmp
shr
mov
cwtl
icebp
inc
enter
ficompl
mov
push
xor
mov
shll
cld
in
pop
out
mov
pop
mov
mov
push
test
push
push
sahf
aaa
iret
ja
add
frstor
fdivr
fdivl
adc
or
sbb
xor
fisubrs
int
imul
aad
cwtl
sub
adc
sub
xchg
clc
jp
sbb
mov
or
in
add
xor
je,pt
fwait
sub
xor
push
in
lcall
jae
sbb
call
jo
bound
nop
dec
fucom
loopne
roll
mov
dec
xchg
inc
icebp
pop
arpl
cs
sub
aas
sub
mov
sub
adc
mov
mov
outsl
add
cmp
cmp
sti
cmpl
popf
jnp
lret
hlt
imul
in
in
xor
scas
cmp
sbb
pop
mov
loope
sub
ficompl
and
push
dec
mov
mov
ret
xor
jge
stc
pop
mov
clc
stos
xor
ljmp
movsl
sbb
jo
xor
and
mov
icebp
stc
daa
mov
cmp
mov
sbb
in
popf
mov
cmp
adc
pop
popa
xlat
sahf
pop
xor
ja
imul
and
sub
xchg
xlat
and
insb
xchg
add
mov
movsb
sahf
and
mov
fldcw
inc
mov
es
push
push
lret
cmp
inc
dec
mov
sbb
jle
arpl
popf
or
shlb
fmulp
test
movsl
xchg
pop
sub
cmpb
ds
fcmovnb
gs
mov
sbb
or
fsubr
jnp
in
ja
cmovnp
cmp
insb
and
pop
jno
fst
and
aad
jmp
xor
sub
popf
mov
mov
pop
enter
faddl
shrl
push
aad
jb
or
ret
fwait
in
mov
mov
and
sub
frstor
sub
ret
xor
jo
or
dec
sub
out
cmp
cmp
mov
push
dec
aam
mov
filds
js
cmpsb
xchg
arpl
movsb
sbb
outsb
fstps
sbb
imul
fwait
mov
adc
test
xlat
jb
cltd
dec
dec
je
pop
aas
add
jp
sbb
add
addl
mov
fisubrl
out
xchg
xchg
add
repnz
stos
push
imul
adc
pop
pushf
icebp
and
out
cli
sub
imul
cltd
or
insb
lods
ljmp
orl
sbbl
cld
sub
lea
fcoms
inc
push
mov
stc
insb
sub
roll
adc
sub
mov
fistl
fidivs
sarb
aam
jmp
xchg
imul
adc
stos
lret
jmp
loopne
inc
aad
or
inc
ss
xor
in
cmp
mov
test
or
notb
and
cmpl
sbb
andb
pushf
ret
pop
pop
or
add
sub
or
out
xchg
stos
test
cmpb
and
jle
pop
and
test
mov
pushf
inc
addb
sbb
sbb
in
clc
pop
jg
sbb
stc
adc
push
lea
dec
dec
xchg
aad
cld
mov
out
adc
mov
clc
xlat
out
testw
pop
enter
mov
idiv
je
inc
js
push
fmull
and
subl
fcoms
or
fstpt
pop
pop
ja
insl
roll
aas
adc
sti
iretw
nop
sbb
lcall
aam
push
cmc
add
or
sahf
aaa
test
adc
cltd
imul
xor
cmp
xor
fisubs
push
lret
iret
push
push
idivb
or
gs
inc
mov
adc
pop
in
movsb
test
add
enter
jae
iret
push
pop
bound
iret
scas
ficomps
dec
pop
cmp
jmp
adc
dec
push
inc
lods
into
out
out
data16
ret
pop
xor
cltd
pusha
mov
addr16
and
hlt
mov
lods
insl
mov
jge
jns
mov
and
xchg
push
outsl
fldl
call
inc
stos
and
test
xor
inc
lods
movsb
pop
xchg
pop
add
mov
inc
es
icebp
std
xor
inc
jecxz
sti
arpl
std
lea
and
jb
pop
cltd
shlb
ret
add
or
sbb
mov
in
lods
add
addl
icebp
and
scas
push
not
movsl
xlat
lahf
xor
stos
pop
pushf
addr16
mov
sbb
add
adc
pop
cld
lret
lods
ljmp
inc
add
or
in
fdiv
jnp
jb
out
in
pop
stos
leave
mov
shll
ds
iret
add
test
xchg
fwait
pop
jb
sbb
popf
dec
push
lret
lahf
arpl
pop
mov
movsl
adc
add
jp
dec
sub
aaa
test
not
stos
aas
movsl
pop
cmp
fcmovu
enter
xor
rol
out
es
mov
push
test
std
sub
lods
ljmp
sbb
lcall
xchg
dec
push
lret
jnp
dec
and
push
cmp
sub
push
pop
out
fistpl
ret
mov
imul
sbb
outsl
lret
hlt
rcl
je
int3
lods
dec
sbb
adc
aad
dec
aam
cmp
jl
dec
pop
dec
lods
or
stos
enter
xchg
xor
adc
inc
sbb
mov
cmp
mov
add
mov
cli
mov
rcrb
gs
xchg
xor
ret
adc
mov
jb
jmp
rorl
lock
dec
imulb
hlt
ljmp
fstpl
adc
hlt
pop
lret
aas
sti
insb
sub
cmp
lods
pop
add
data16
add
add
dec
push
stos
ret
xor
jp
fwait
push
shrl
lahf
stc
mov
push
out
xor
mov
outsl
ja
xchg
shr
arpl
cmc
xlat
jmp
loop
mov
and
push
jmp
icebp
jmp
andb
loopne
or
outsl
sahf
or
push
push
xchg
lea
mov
xlat
nop
pop
dec
ret
sbb
icebp
xor
or
in
sub
mov
icebp
imull
cmpsb
stc
mov
jmp
push
inc
mov
arpl
inc
jo
push
add
jb
pushf
jp
imul
sbbb
pop
data16
push
mov
xor
adc
pusha
dec
cmc
and
push
pusha
jmp
xorl
add
ja
jmp
imul
cmp
push
xchg
je
ficoml
jo
mov
jns
mull
aam
mov
pop
jo
jae
loopne
pop
adc
cmc
xor
push
adcb
cmpsl
cmc
cltd
sbb
lods
repnz
sbb
adc
sbb
sti
xchg
inc
ljmp
xor
xchg
jae
int3
pop
mov
call
hlt
or
or
xor
mov
cmp
add
sbb
scas
fcmovne
jg
cwtl
leave
imul
mov
or
ss
cs
xchg
fdivrs
dec
fbld
push
sahf
jmp
dec
xchg
scas
xchg
movsb
push
jmp
es
cmpsb
comiss
add
add
add
cmp
pop
inc
mov
mov
sub
adc
jo
mov
mov
scas
pushf
fsubrs
inc
inc
xchg
jge
push
push
xchg
arpl
add
clc
fistl
lods
push
xchg
push
pop
pop
dec
mov
orb
mov
lods
pop
in
jp
cmp
xor
cwtl
cld
lcall
xchg
stos
insb
jg
xor
cltd
push
sub
mov
add
and
fcmovnb
ds
negb
adc
xchg
add
shll
sub
xor
repnz
fdivrl
pop
sbb
movsl
popa
and
xchg
in
inc
lret
popa
push
stos
lcall
inc
imul
pusha
repz
mov
and
adc
pop
add
mov
insb
pop
mov
lock
mov
push
and
push
out
mov
push
sarl
add
xor
sub
pushf
shll
mov
xchg
aaa
or
xchg
mov
jno
pop
and
mov
andl
cmc
mov
in
outsl
xchg
dec
mov
imul
pop
daa
popf
xchg
mov
sbb
dec
fisttpll
cmp
push
lret
repnz
mov
lahf
out
jp
push
lret
in
insl
pop
insb
mov
mov
add
sarb
xor
jg
sbb
nop
mov
fdivs
outsl
mov
es
push
pop
dec
lods
sub
mov
pop
mov
js
out
push
mov
cmpsl
nop
jne
or
inc
addl
jle
push
pushf
or
jae
mov
add
loop
pop
icebp
mov
dec
adc
out
in
or
xchg
xchg
pusha
arpl
mov
cmp
inc
cmpsl
fsubl
xlat
sahf
in
cmp
mov
mov
jl
mov
xchg
pusha
lea
in
cld
rcll
push
or
scas
or
fistpl
or
or
ja
xchg
popf
cmp
sub
dec
movsb
xchg
sbb
cwtl
ret
les
jle
dec
movsb
iret
mov
das
shl
iret
je
decb
add
sahf
shrb
cmc
aam
or
sbb
ljmp
jp
pop
xchg
aad
pop
out
loopne
popf
cmp
xchg
repz
ds
nop
fldcw
out
inc
inc
inc
inc
int3
pop
fidivrl
repnz
pop
loope
pop
xor
cwtl
loopne
inc
cs
test
cmp
out
leave
mov
pop
add
aaa
ljmp
mov
xchg
sub
sub
inc
inc
es
cli
fs
and
xchg
push
xchg
popa
mov
add
push
stos
test
scas
nop
hlt
sbbb
ljmp
scas
mov
test
jnp
push
mov
push
dec
out
mov
or
xor
xor
jecxz
mov
cmc
pop
lods
cltd
mov
mov
inc
clc
push
jbe
jb
jno
xchg
iret
inc
ficoml
and
shlb
mov
push
mov
add
sub
les
out
xchg
mov
xor
mov
cld
dec
aam
adc
pop
xchg
xlat
mov
cmp
pop
xchg
pop
fidivrs
fistpl
loope
add
sbb
or
adc
jne
popf
mov
bound
pop
mov
lcall
push
and
inc
ret
incl
in
push
mov
adc
sahf
pop
in
pop
stc
mov
movsl
jge
xchg
mov
sbb
adc
inc
push
or
je
pop
adc
pop
jmp
or
cli
sbb
sbb
and
fsubrs
add
inc
mov
pop
pop
test
pop
inc
sub
jl
outsb
clc
cli
xchg
inc
iret
out
std
inc
and
xchg
cmp
mov
or
in
gs
rcll
inc
cmp
or
xor
loopne
popa
inc
in
sub
rorl
lahf
mov
pop
je
stc
jge
push
loop
pop
pop
aad
sbb
push
movsb
pop
imull
out
push
cmp
cmp
dec
loop
xchg
mov
inc
jne
rorl
leave
aas
lock
rcrl
adc
xchg
xchg
outsb
jge
xor
pop
dec
int
fwait
pop
add
jnp,pn
stos
cs
shlb
mov
xor
fisttpll
mov
cmp
xchg
jno
mov
jns
mov
enter
cltd
and
cmp
sbb
sti
pop
adc
fstpl
or
test
add
inc
push
cmp
loope
jno
mov
out
outsb
xchg
or
addr16
adc
cmp
pop
pop
cs
adc
pop
int
mov
loope
add
out
add
into
push
add
scas
xor
jno
push
mov
cmc
adc
adcb
ja
fcmovnb
xchg
in
dec
test
daa
xchg
fwait
cmp
stos
pusha
pop
mov
jb
aam
out
adc
xchg
mov
push
popf
in
stos
jp
push
out
sti
jecxz
push
negl
loope
je
fwait
xor
and
sub
add
ss
std
cmp
add
pop
add
daa
push
mov
adc
stc
sbb
fbstp
xor
inc
pop
inc
mov
repz
sti
pop
jp
inc
mov
in
sub
jmp
std
xor
xor
fisttpll
aas
pop
xchg
cmp
dec
ja
arpl
andl
xchg
int
movsb
xchg
mov
icebp
fdivl
xlat
cmp
mov
pusha
sbb
packsswb
aaa
pop
inc
cmp
xchg
and
push
rcrl
rep
cs
xchg
out
gs
mov
insl
fcmove
loop
mov
leave
push
xlat
sbb
mov
aam
sbb
xchg
lods
sub
pop
in
fldt
pusha
mov
push
mov
mov
aas
sbb
insl
push
lcall
mov
sub
mov
dec
pop
adc
sahf
jo
or
xchg
hlt
fsub
xor
mov
cmp
inc
inc
out
push
xchg
push
mov
mov
fcoml
xor
xchg
or
std
movsl
rcrb
mov
push
mov
or
ljmp
insl
inc
cmp
xor
iret
je
inc
cmp
daa
rcrb
add
pop
ja
stos
inc
mov
dec
not
fadds
pusha
pop
xchg
push
scas
popa
fsubr
clc
xchg
scas
inc
xor
pop
xor
dec
hlt
xor
in
sub
int
push
xchg
ret
mov
mov
cmp
aas
add
stos
or
mov
lret
push
or
sbb
les
inc
test
add
jno
pop
rcrl
lret
mov
mov
pop
push
cli
or
sbb
data16
cmp
sbb
and
faddl
ret
daa
cmp
inc
sub
cmpsl
cmp
or
jns
sbb
push
pop
jae
test
in
test
int3
xchg
sbb
xchg
orl
aas
in
dec
mov
enter
cmc
adc
pop
dec
shll
sub
jae
fildl
cmp
sarb
mov
jmp
imul
sub
mov
ja
push
jb
xor
xchg
ja
mov
jbe
fists
mov
inc
out
add
js
sub
pop
sub
addb
add
ljmp
rcrl
or
sbb
bound
cld
out
out
push
xlat
pop
pop
mov
xor
out
in
jb
sub
dec
and
lea
in
daa
lret
popa
in
inc
fadd
daa
sub
dec
arpl
stos
mov
or
xchg
dec
lods
push
sbb
dec
and
pusha
insl
gs
pop
scas
flds
aad
ds
xor
and
pop
pmulhw
fistpll
or
shrb
pminub
cwtl
jg
test
dec
xchg
inc
and
jecxz
or
test
cs
out
cmpxchg
gs
jne
sub
push
ljmp
push
int3
stos
rcrb
add
fsubl
pop
out
js
jne
adc
stc
push
imul
leave
push
ds
outsb
mov
cli
dec
adc
mov
mov
enter
subl
aaa
ficompl
mov
mov
aaa
mov
mov
inc
xor
lret
inc
push
adc
adc
mov
mov
popa
nop
xor
sbb
insb
orb
push
push
inc
jbe
insb
push
dec
in
push
lds
out
aas
mov
mov
int
adc
ljmp
jns
push
and
jno
sbb
sub
dec
xchg
xchg
lods
loop
and
xchg
das
inc
push
sub
or
mov
cmc
pop
push
mov
jge
cmc
outsl
test
pop
call
int
mov
and
and
pushf
mov
dec
lidtl
add
jne
xchg
push
adc
push
andb
xor
iret
inc
pop
ret
pop
insb
mov
cltd
add
jo
ds
fwait
inc
jl
or
shll
pop
sbb
adc
sarl
test
jmp
test
icebp
mov
push
mov
mov
test
mov
push
xchg
lods
lods
out
stos
jno
sub
sub
dec
jns
adc
lock
adc
pop
pop
jbe
add
adc
int
ret
bt
cwtl
lcall
jl
lods
jge
lret
lods
mov
cmp
mov
gs
cmpsb
pop
addb
insb
lcall
sub
pop
pop
dec
cmp
or
nop
out
pop
add
and
cli
or
pop
adc
inc
mov
arpl
sbb
andb
xorl
add
movsb
mov
cmp
jb
lods
add
jae
jnp
mov
adc
lock
xlat
mov
mov
out
in
repnz
es
xchg
add
out
mov
cmp
fisubs
data16
aad
fsubrs
inc
pop
popa
cmp
movsl
fidivl
adc
add
jno
jb
inc
jl
mov
xadd
les
xor
dec
mov
and
jg
aad
mov
call
add
sbb
data16
jecxz
mov
add
push
out
or
ja
dec
adc
pop
neg
add
cmp
test
push
mov
cmp
lret
mov
ror
sbb
rolb
int3
lahf
loope
mov
dec
mov
pop
mov
ret
mov
cwtl
xchg
jecxz
in
out
xchg
scas
xlat
xchg
mov
inc
movsb
cltd
jmp
xor
hlt
loop
insb
push
clc
ljmp
mov
sbb
pmulhuw
push
rcrb
shl
test
out
push
lods
inc
dec
test
cwtl
clc
sub
call
jns
rorb
dec
outsl
add
in
insl
fistpll
fisttpll
sub
push
xor
mov
sbb
mov
enter
sti
call
mov
jno
adc
arpl
sbb
jns
iret
out
lcall
jg
shlb
xor
subl
sti
divb
mov
sub
enter
lea
mov
mov
repnz
fwait
push
in
dec
mov
mov
adc
mov
inc
int3
stos
sbb
out
and
mov
shrb
std
pop
cmp
add
out
push
lods
pop
mov
push
movsb
mov
cmp
mov
push
mov
dec
mov
jb
push
mov
dec
cmpsb
sti
pop
cld
mov
test
fisttpl
mov
inc
mov
jb
aad
mov
cmp
call
lret
iret
mov
bnd
xor
jns
push
insl
and
push
mov
aam
and
jecxz
arpl
nop
cmp
les
ficomps
cmp
jmp
rorb
pop
inc
xor
dec
xchg
cmp
leave
inc
into
int3
xor
xchg
and
out
push
das
es
aam
xor
les
and
movsl
les
push
stos
xorl
jb
gs
jo
mov
xrelease
shrb
mov
call
ss
lret
dec
xor
mov
add
xor
mov
or
adc
xchg
inc
dec
insb
call
pop
push
sbb
in
push
jae
push
jg
sbb
shll
mov
nop
mov
js
pushf
xor
sub
sbb
and
insb
xchg
push
mov
out
rolb
push
mov
mov
sbb
out
test
pop
cmp
addb
out
insb
fdivp
loopne
or
jae
pushl
pushf
fs
lret
dec
faddp
add
daa
popf
sbb
sbb
inc
mov
cmpsb
mov
sub
dec
xchg
mov
shr
fdivrs
pop
jno
sbb
aam
mov
out
push
out
ror
add
sbb
adc
dec
enter
fistl
cmc
lahf
and
add
scas
into
imul
xchg
xchg
jne
or
mov
popf
or
hlt
inc
mov
jmp
cmp
pop
leave
leave
push
iret
sub
xlat
jl
rcrl
lahf
cmp
mov
dec
sbb
push
jmp
mov
sbb
lods
add
arpl
in
cmc
add
shll
inc
dec
in
rcrb
mov
mov
lahf
cmove
das
insb
clc
mov
mov
and
xor
clc
inc
xchg
or
sub
dec
xchg
mov
arpl
mov
fs
movsb
aas
gs
xchg
mov
jbe
jmp
call
popa
shl
cmpsb
and
cmp
dec
jl
addr16
adc
push
xchg
insb
inc
fiaddl
imul
cmp
xchg
imul
scas
pop
mov
shll
decl
dec
aaa
in
jbe
or
mov
je
shlb
mov
and
jmp
push
daa
sub
data16
ja
popa
lahf
dec
jbe
gs
test
jnp,pn
inc
cmp
aaa
ljmp
cmpsb
mov
das
shrb
xchg
aas
gs
pushf
xor
cmp
ja
shrl
cli
inc
mov
ss
sub
inc
shlb
mov
push
ja
add
les
popa
jecxz
fwait
cs
push
cmpb
dec
mov
jmp
pushf
inc
mov
jae
popf
jb
lahf
outsl
mov
and
mov
imul
scas
imulb
or
pop
rclb
jge
pop
cmp
mov
inc
std
lcall
cmpsb
ret
jmp
mov
cwtl
push
imulb
or
push
iret
or
outsl
aas
loopne
popa
sbb
leave
fisttpl
pop
xchg
mov
call
xor
mov
insl
es
jnp
push
fisttpll
dec
mov
and
pop
adc
stc
clc
or
cmp
inc
inc
pop
jge
sub
lahf
fiaddl
inc
insl
jle
test
rcl
push
movsb
jp
es
fwait
and
inc
iret
outsb
fidivs
sbb
lahf
xchg
mov
mov
fstpl
xor
negl
mov
cmp
test
pop
jmp
inc
fcomps
xchg
mov
xchg
std
push
pop
insl
pusha
cli
xchg
imul
daa
inc
xchg
scas
xor
and
mov
ret
push
mov
xor
dec
xor
or
mov
loope
mov
sub
pop
mov
dec
outsl
fmuls
xor
mov
mov
fidivrl
xchg
adc
pop
push
insl
jae
pop
xor
push
pop
dec
rcr
add
add
fcompl
popa
and
adc
enter
adc
pop
xor
shl
clc
fidivrs
jne
jge
lret
jp
fucom
jno
fnstcw
cmp
sbb
sub
jae
push
jp
xlat
mov
pop
jbe
and
and
inc
fdivrl
mov
pushf
sub
out
out
or
pusha
xchg
or
xchg
inc
or
dec
mov
xor
pop
push
mov
mov
sahf
es
or
roll
movsl
jge
jns
sub
inc
out
outsb
push
fwait
sbb
and
test
xor
xchg
enter
ret
lods
andl
clc
out
je
jle
int
sbb
sub
shr
negb
in
test
push
out
xor
mov
in
lret
ss
pop
pop
mov
cmp
fxch
jle
adc
add
jae
cmp
dec
sub
sbb
lret
push
cmp
xchg
jl
push
xchg
popa
jnp
stc
jmp
and
clc
ljmp
jl
pop
popf
dec
enter
pushl
push
loopne
daa
iret
jmp
add
jge
cmc
sbb
push
jmp
mov
pop
add
stos
pushf
push
adc
or
pop
dec
mov
inc
sti
lods
mov
adc
mov
dec
pop
std
popa
in
stos
dec
mov
or
loope
pusha
or
or
mov
or
in
mov
aad
jmp
lds
add
and
lock
inc
jbe
xor
outsl
jg
jecxz
cwtl
mov
xchg
hlt
aad
out
cs
rcrl
popa
add
and
ret
pop
cs
pushf
cmp
mov
xchg
cmpsl
cmp
mov
mov
test
in
or
cmp
fimuls
cmpsl
scas
rolb
scas
adcb
adc
pop
mov
mov
loop
or
aas
push
fildll
cmp
movsb
xor
jp
dec
test
fdivl
xor
push
test
mov
mov
xchg
xor
in
pop
rol
ret
push
mov
cmp
jne
pop
push
cmp
sbb
inc
int
std
pop
mov
add
xchg
ss
fstps
pop
in
pop
js
add
in
rorb
div
nop
out
je
push
movsl
push
jl
loope
fcoms
aaa
popf
xorl
fidivl
add
inc
adc
push
xchg
jge
scas
test
jb
test
mov
xchg
out
inc
repz
sahf
psrlq
and
jg
lock
xor
or
jo
xchg
xchg
mov
jne
push
mov
cmp
fisttpll
jne
js
add
xchg
imul
arpl
jae
pop
jbe
dec
js
ret
out
and
popa
scas
fistpl
jo
aad
push
out
incb
popa
movl
mov
stc
mov
cmpsl
inc
ret
push
arpl
out
outsb
and
aam
xchg
outsl
rcl
int
dec
jmp
jge
add
xchg
mov
test
into
scas
fstpt
pop
xchg
dec
add
sbb
test
cld
enter
fildl
or
enter
ret
or
sti
daa
mov
lcall
stc
inc
imul
enter
push
xor
andl
dec
lret
sahf
add
repz
dec
arpl
hlt
dec
shlw
pop
cmpb
pusha
sbb
adc
jae
add
dec
mov
inc
sub
lods
or
mov
jl
ret
jecxz
sbb
and
dec
cli
hlt
inc
call
js
sub
pop
stos
bound
pushf
rcrb
mov
cwtl
push
filds
xchg
outsl
fnsave
lock
repz
xor
repz
add
mov
mov
or
leave
into
bswap
repz
xor
jle
push
dec
xchg
icebp
pop
xchg
sub
int
enter
inc
data16
dec
arpl
xorl
mov
imul
jb
out
jae
mov
lret
shlb
xchg
inc
pop
or
mov
xchg
mov
stos
lods
scas
frstor
and
or
xor
adc
inc
adc
xchg
dec
mov
adc
push
pop
jns
cli
mov
sub
test
aas
push
sub
push
jns
xorl
inc
cmp
dec
popf
mov
xorl
push
dec
fdivp
mov
mov
xchg
cmp
add
xchg
sbb
js
imul
data16
imul
inc
mov
mov
out
pop
jo
mov
mov
cmp
ss
clc
decl
pop
sub
cmpsl
repnz
xchg
mov
fcomps
or
sbb
cmp
dec
in
sbb
xchg
cli
and
shrb
les
mov
mov
out
dec
movsb
dec
jp
push
addr16
dec
stos
xor
scas
mov
lock
mov
pop
cmpl
cli
das
pop
aaa
xchg
lret
sbb
les
push
push
ficoml
aad
and
push
xchg
mov
mov
cmc
xorl
clc
dec
cmp
jne,pn
scas
jecxz
mov
inc
retw
pop
pop
fcomps
lahf
mov
inc
mov
jnp
cmp
fldcw
ljmp
mov
pop
decb
imul
outsb
fidivrs
sbb
ror
aas
outsb
or
stc
push
xor
enter
adc
pop
mov
mov
adc
xchg
shld
push
sub
pop
dec
insl
dec
mov
jg
mov
add
cltd
cmpsl
pop
dec
dec
mov
xor
inc
push
ja
sub
jle
mov
xchg
mov
push
fnstsw
xor
and
mov
cmp
shl
loope
outsb
lcall
or
out
int3
rcll
mov
adc
mov
stc
add
pop
mov
add
dec
mov
or
jg
cli
dec
imul
jmp
xchg
xlat
ret
je
sbb
pop
cmp
jecxz
mov
push
negl
jae
gs
xor
addr16
adc
popf
adc
testb
rorl
add
loope
lea
adc
pop
and
xchg
dec
int3
aam
inc
jno
xchg
pushf
ret
push
dec
aam
loope
cmpb
fs
out
push
mov
inc
roll
push
test
in
sub
push
cltd
repnz
dec
je
or
jne
jmp
push
scas
xor
xchg
dec
push
lds
or
cltd
mov
inc
mov
scas
push
cmpsl
mov
lods
or
mov
xchg
sbb
int
inc
or
xor
aam
in
sbb
xlat
adc
push
jmp
or
jp
test
nop
mov
cmp
arpl
cmp
rol
xchg
int3
dec
iret
pop
dec
or
push
sarb
clc
ret
scas
mov
and
lea
daa
adcb
loope
cmp
test
insb
into
aad
aas
xchg
push
lods
lret
es
stos
pushf
outsl
imul
dec
xor
in
jno
inc
add
arpl
aad
call
aam
sbb
movb
dec
out
in
aam
jo
mov
out
or
sub
iret
rcrb
mov
mov
adc
into
and
dec
and
cmpsb
mov
pop
or
xchg
lret
enter
and
pop
cmp
pop
jno
inc
mov
pop
cmp
inc
rol
es
mov
aad
push
test
lret
addr16
jnp
or
je
mov
mov
sbb
xor
jo
jne
xor
jno
add
cwtl
aad
outsb
xchg
sub
or
inc
insl
ret
jnp
sbb
and
push
pop
hlt
inc
ds
cmpsb
pusha
pop
daa
hlt
cltd
out
sbb
outsl
sub
inc
into
push
into
add
jo
je,pn
xchg
fldcw
mov
jmp
fldenv
lea
dec
inc
daa
xchg
adc
stc
push
lock
pop
push
gs
adc
xor
adc
mov
dec
test
pusha
test
popf
dec
xor
jb
out
add
mov
pop
scas
mov
lea
popa
rolb
mov
and
sar
push
or
int
andl
mov
dec
push
sbb
xor
push
fprem
mulb
xchg
lods
and
cmp
jge
cmpsl
xchg
in
outsl
dec
lcall
cli
jecxz
adc
add
mov
dec
mov
sti
mov
repnz
cmpsl
push
outsb
jns
daa
das
mov
iret
sbb
cld
mov
jae
mov
and
cltd
jp
jmp
jae
pop
jl
loopne
jle
je
ret
push
adc
mov
add
lods
mov
sti
movsl
push
jle
inc
xchg
icebp
fldenv
cmp
aad
dec
xor
xchg
dec
xchg
jp
sbb
mov
dec
loop
xchg
daa
mov
in
orl
cmp
lahf
orb
push
movsl
cwtl
push
and
lods
pushf
lods
mov
xor
pop
inc
jecxz
or
push
sub
push
popf
or
add
movsl
gs
pushf
xor
je
cwtl
jmp
push
aas
mov
outsb
jnp
out
stos
fldenv
cmp
lods
pop
jmp
and
inc
fcoml
mov
cltd
cmpb
cmp
xchg
mov
sub
mov
dec
sbb
jns
xchg
movsl
mov
popa
pop
aas
lods
test
jmp
out
cmc
outsl
je
lea
les
cmpsl
in
stos
gs
dec
popa
int
dec
xchg
cmp
jl
mov
mov
xlat
and
addr16
mov
popf
je
aad
cmp
fstpl
ljmp
jne
pop
out
out
sub
mov
mov
dec
jnp
lea
cmp
pop
loope
dec
fildl
fistpl
loopne
inc
rcrb
xor
xchg
mov
dec
xlat
xchg
xchg
fwait
lret
lods
xchg
jo
pop
mov
mov
test
cmpsb
loop
or
pop
bound
xchg
push
lods
push
jb
push
mov
pusha
shll
call
inc
adc
xchg
cli
loopne
pop
xor
mov
orb
adc
and
ds
inc
mov
and
cwtl
dec
fwait
or
and
pop
sub
dec
addr16
inc
inc
stc
mov
sbbb
mov
nop
arpl
push
out
ljmp
sub
jae
or
dec
dec
push
fldt
es
js
sbb
inc
das
xor
rclb
cmpsl
mov
pop
pushf
sub
ret
dec
scas
jbe
jmp
or
cmp
jns
jns
sbb
es
lods
std
insb
aas
inc
sub
stos
mov
xchg
xlat
sbb
fwait
mov
popa
rclb
inc
push
bound
stos
push
popa
in
pop
lock
and
inc
cmp
aaa
push
loop
mov
mov
cmp
cmc
fstps
addl
test
out
rcrb
lock
mov
mov
cmp
xor
mov
aam
mov
push
mov
inc
and
dec
jae
dec
and
add
iret
xor
ficomps
jmp
movsl
out
test
push
lahf
xor
lcall
pop
inc
jbe
pop
int
repz
dec
sub
or
lock
pop
shrb
fmulp
dec
rol
fs
jno
jbe
pusha
int
jmp
in
sbb
repnz
in
adc
inc
daa
push
scas
xor
mov
pop
addr16
lcall
sti
je
jnp
sub
jl
mov
stc
or
scas
aad
imul
int3
push
mov
int
mov
dec
test
std
in
mov
out
aaa
cmpsl
or
sarb
or
in
adc
test
jp
dec
dec
or
sbb
adc
loop
xor
fnstsw
jnp
rclb
mov
shr
dec
push
dec
icebp
or
cmp
dec
xor
mov
adc
add
int
cmc
int
dec
xchg
loopne
int
xchg
cmp
pusha
dec
lret
xchg
enter
push
test
cmp
cmp
add
sub
das
pop
leave
addr16
and
mov
mov
pop
add
and
mov
lods
push
sub
cmc
xor
mov
inc
jns
jp
into
xor
cmp
push
dec
and
insl
mov
add
mov
sbb
add
push
xor
gs
jnp
dec
add
lret
sub
sbb
out
dec
cmp
pop
push
fiadds
inc
js
pop
or
add
xor
cmp
in
sbb
lahf
mov
xor
bound
pop
mov
dec
cmp
pop
xchg
sub
aaa
in
sti
pusha
adc
xchg
adc
mov
in
jbe
mov
lods
mov
pusha
mov
repz
mov
imul
xchg
leave
push
mov
sub
loopne
mov
cmpsb
cmpsl
mov
sbb
pop
or
inc
push
push
daa
pop
adc
cmp
aam
mov
es
in
test
repnz
jae
pop
push
jmp
lods
mov
xor
sti
xor
ljmp
mov
stos
stc
mov
push
imul
dec
pop
push
push
cmp
push
repz
jns
in
imul
icebp
xchg
clc
mov
inc
sarl
hlt
and
xchg
pushf
lock
add
iret
insb
in
test
cld
test
in
fs
nop
add
or
cmpsl
int3
rclb
mov
cld
or
in
mov
or
enter
gs
fstpl
gs
jecxz
adc
xlat
xchg
fsubs
je
cmpsl
xor
sub
repz
lret
push
lcall
sub
inc
shlb
mov
adc
into
test
sub
clc
mov
clc
mov
loope
inc
outsl
inc
mov
adc
dec
jbe
push
or
movsb
call
insb
loop
xor
push
sbb
ljmp
jno
stc
or
decb
mov
loop
stos
mov
jle
and
pop
ss
and
scas
add
cmp
lods
testl
jmp
aam
addr16
aad
inc
or
mov
or
pop
movsb
push
add
stos
xor
test
pop
ja
mov
stc
mov
jae
push
testl
ret
imul
fwait
cld
outsl
mov
jne
add
pop
mull
inc
or
adc
sbb
rolb
xchg
cmp
pop
or
jmp
fidivl
mov
sbb
mov
sarb
ljmp
loopne
loope
out
mov
inc
and
xor
mov
xchg
sbb
cltd
pop
ljmp
jne
or
cmp
jge
or
ret
nop
jne
loope
cmp
and
xchg
rcrl
fisubs
xor
and
add
imull
fisubrs
push
rcll
xchg
aas
lock
sub
mov
fildll
cli
popf
sub
negl
test
xor
aam
add
lock
sub
xor
jns
imull
push
mov
daa
mov
rorb
dec
les
cmc
push
dec
adc
pop
push
jecxz
out
gs
aad
mov
sub
out
add
fwait
hlt
arpl
push
daa
lds
add
lods
jmp
mov
cli
rcrl
dec
lret
stos
or
jge
into
das
add
js
test
jns
xchg
xor
adc
adc
or
jmp
lret
sub
sub
aas
xchg
pop
cltd
test
lods
negl
push
in
and
mov
mov
dec
outsl
pop
fistpll
icebp
jns
cli
xchg
jle
and
add
sahf
inc
push
push
dec
dec
add
aam
ljmp
inc
xor
cmc
xchg
xchg
mov
fwait
ds
xchg
fwait
jp
sbbl
gs
adc
aaa
or
push
stos
out
push
fistps
aaa
mov
outsl
test
scas
pop
adcl
sub
fistps
fistl
int3
mull
leave
bound
sub
shrl
adc
jg
addb
mov
pandn
pop
popf
fdivrp
cs
in
bound
shr
and
jnp
push
imul
sbb
cmc
repnz
cmpsb
sub
mov
into
dec
cmp
xor
in
xchg
or
das
popf
or
mov
pusha
mov
push
jb
cmp
mov
cmpsb
out
pop
pusha
jo
jge
mov
mov
imul
ljmp
pop
xchg
and
popa
or
pop
mov
in
sub
add
js
int3
and
push
imulb
fadd
sbb
mov
std
hlt
sbb
jnp
lret
cmp
xchg
jns
sub
lea
sub
in
inc
out
push
lea
pop
testl
sub
mov
push
mov
iret
sbb
sbb
mov
insb
mov
inc
mov
sub
jo
mov
or
mov
push
fdivrl
cmpsb
sub
push
pop
push
pushf
pop
pop
ljmp
add
or
push
fistpll
and
or
cmp
mov
fcoml
nop
xchg
aam
and
insb
mov
leave
push
loopne
arpl
bound
ror
dec
out
movsl
jge
inc
aam
pusha
andb
out
jmp
imul
and
cs
testl
jbe
sub
sbb
cmpb
xlat
dec
push
add
push
mov
xchg
rorl
aas
lock
dec
pushl
ds
xchg
xchg
sar
movsl
mov
or
adc
push
fcomp
cmp
and
ja
push
fwait
aad
iret
add
mov
adc
add
icebp
scas
sub
mov
pop
mov
push
add
sbb
repz
hlt
lods
pop
xor
adc
jl
icebp
imul
rcrb
add
out
mov
sbb
js
je
lods
out
add
je
outsb
ss
lock
in
call
and
adc
sbb
add
loope
insb
adc
sbb
cmp
push
out
push
add
pushf
dec
sub
mov
pusha
mov
lret
sub
dec
lea
pop
js
add
pop
les
mov
jecxz
ds
push
mov
dec
jb
insb
sbb
add
adc
ss
or
dec
enter
or
pop
xchg
xor
or
jl
add
std
add
mov
int
aaa
cmp
icebp
hlt
cli
ds
inc
push
adc
rorb
enter
push
sbb
sbb
xchg
cmc
xor
dec
hlt
fwait
orl
inc
and
int
mov
out
stos
sub
mov
outsb
enter
scas
repnz
inc
push
sarl
mov
mov
ds
adc
cltd
pop
fdivrl
aad
movsb
outsl
mov
jbe
push
push
mov
sub
imul
lock
add
sub
clc
repz
inc
in
mov
add
push
pop
jbe
inc
das
adcl
xor
mov
enter
inc
out
clc
xlat
aam
in
mov
jp
xchg
call
js
inc
add
jge
cmpsb
add
adc
into
sbb
adc
faddl
loope
jb
stos
jp
mov
out
inc
ljmp
repnz
sbb
xchg
pop
xchg
sub
push
cmp
jge
lea
loop
sbb
loope
add
out
cmc
sub
and
arpl
fnsave
adc
inc
inc
loope
popf
and
fcomps
fstl
and
jo
cmc
addr16
dec
cli
cwtl
inc
dec
ret
mov
dec
fisttpll
in
insl
sub
idivb
push
outsb
je
cmpsl
add
cmp
adc
or
sub
repnz
mov
cld
mov
push
mov
jnp
push
jne
loop
adcl
leave
mull
shll
push
sbb
ficoms
dec
loop
add
insb
faddl
bound
int
cmpsl
sbb
lods
dec
adc
inc
lods
repz
mov
lea
mov
cmp
add
int3
mov
pop
xor
test
xor
in
pop
lods
and
pop
xchg
mov
cmp
jnp
add
jae
xchg
outsl
icebp
test
mov
loop
lds
xchg
sarl
mov
popf
popa
mov
xor
ja
sub
repz
jbe
ret
inc
lcall
rcll
cmp
stos
pop
jle
or
fstpt
sub
and
lods
ljmp
cwtl
daa
mov
mov
push
mov
push
lods
pop
mov
subb
loopne
xor
pop
cld
push
enter
mov
sub
xchg
cltd
divb
push
pop
fstps
mov
out
add
rorb
or
adc
pop
iret
pop
into
scas
pop
ficomps
in
xchg
das
xor
cltd
sarl
or
inc
lcall
adc
notb
jp
sub
sbb
xor
sub
inc
pop
mov
xabort
fcomps
fldcw
push
jecxz
imul
cmpsb
into
cmp
add
outsl
movsb
inc
repz
out
fidivrl
sbb
dec
push
mov
mov
hlt
inc
leave
jecxz
ret
pop
out
repnz
loop
or
sahf
fld
shrl
push
in
mov
lret
sub
repz
or
loop
loop
lret
cltd
jo
inc
lea
call
popa
adc
sarl
pushf
and
pop
leave
std
stos
push
stos
mov
aaa
adc
ss
sbb
es
pusha
inc
jns
pop
pop
xor
out
push
jge
lret
mov
mov
shl
xchg
inc
inc
sbb
loopne
inc
mov
jne
scas
jmp
or
push
hlt
pushf
push
test
ds
fwait
mov
leave
sbb
arpl
xchg
adc
xor
fwait
and
insl
push
sti
out
scas
pop
popa
xor
cs
lret
lret
add
shll
cwtl
push
mov
daa
xchg
call
sbbb
add
or
dec
jo
xlat
pop
ret
push
call
xchg
sub
xor
xchg
sbb
mov
sbb
in
inc
xlat
dec
adc
fnstenv
pop
lods
or
inc
push
sbb
fwait
push
aad
rorl
movsb
xlat
xor
sbb
mov
lahf
lods
dec
inc
sbb
mov
mov
push
sub
stc
cwtl
in
cltd
push
icebp
std
mov
jae
pop
daa
and
lahf
imul
fbld
pop
popl
sub
into
ja
or
cwtl
sub
and
jae
fcomps
fstpl
lods
ljmp
pop
in
out
dec
inc
mov
loopne
enter
jb
xor
xor
dec
imul
enter
cltd
push
scas
xchg
sbb
push
movsl
mov
xor
and
mov
mov
frstor
fnstsw
mov
ret
and
in
inc
leave
cmp
aad
jb
fists
lea
sbb
movsl
dec
ja
adc
cmp
pusha
push
mov
add
and
mov
inc
mov
mov
icebp
or
mov
xchg
mov
mov
push
cmp
fmull
jmp
sti
mov
idivl
test
jae
xor
mov
fsubl
out
mov
cmp
outsl
xchg
xchg
adc
push
mov
jo
aas
out
sbb
sbb
ja
fcoms
pop
inc
testb
and
fstps
pusha
and
and
push
mov
jb
mov
daa
dec
popf
data16
mov
negl
shlb
mov
dec
fisubrs
or
and
mov
roll
and
rclb
enter
loop
push
data16
xor
push
iret
popa
cld
testl
mov
aaa
je
mov
xchg
jae
movsb
shlb
sub
mov
imul
pop
lods
sbb
es
sbb
lcall
in
rol
outsb
inc
cli
rolb
jno
repz
jnp
inc
inc
stos
cli
sub
inc
and
jp
outsb
mov
or
insb
faddl
cmc
cli
call
fsubl
shll
lods
adc
adc
rcrl
mov
and
xchg
add
sahf
paddusw
es
mov
mov
add
loop
jb
cld
fldcw
xchg
fsubr
enter
daa
pop
dec
imul
or
fstps
push
lahf
shll
inc
mov
cmp
leave
dec
jb
clc
enter
aas
sbb
jp
sbb
xchg
mov
nop
jmp
push
sbb
repnz
lret
push
mov
push
push
add
out
aam
xchg
clc
leave
cld
scas
insb
mov
xor
rclb
jnp
icebp
pop
repnz
scas
pop
shlb
stc
cmp
daa
and
outsb
arpl
cmc
in
and
cmpsb
not
mov
outsb
sti
cwtl
fists
in
push
stos
clc
lods
or
mov
test
adc
jns
lcall
or
cli
mov
cmp
shlb
mov
xchg
add
push
push
or
adc
outsb
mov
pop
lods
les
fmuls
ret
jb
add
adc
sub
xor
xor
dec
pushf
adcb
jle
dec
out
jo
pop
sub
fcomps
mov
arpl
frstor
add
insl
adc
sub
and
popf
stc
pop
pop
insb
push
sbb
and
push
dec
mov
out
fadds
movsb
out
xchg
adc
mov
adc
nop
pop
dec
push
push
lock
pop
in
cmp
iret
ret
std
cmp
pop
jmp
push
mov
and
jmp
jge
mov
rcll
fdivrs
cli
pop
dec
insb
jmp
sub
pop
lahf
and
mov
inc
out
xchg
test
stos
idivl
push
pushl
or
xor
addr16
pop
jae
jae
cmp
cmp
xchg
aam
mov
adc
fsubl
sbb
scas
mov
lods
inc
enter
adc
or
jmp
pop
xchg
xchg
gs
add
pop
call
mov
adc
push
loopne
jg
stc
or
aaa
pop
into
push
mov
jb
or
push
es
pop
mov
xor
leave
sbb
jo
cmp
fdivrs
imul
lahf
shlb
xlat
add
lret
xchg
fs
popf
mov
dec
in
dec
cmpsl
add
pop
pop
das
adc
ljmp
orl
cmc
rcl
or
cmp
mov
jb
adc
fimull
test
outsl
sahf
movsb
adc
ret
andl
adc
mov
xchg
in
in
push
test
fs
adc
in
mov
adc
frstor
or
out
adc
mov
push
xchg
xchg
js
ljmp
call
ss
sbb
push
cld
inc
mov
fwait
bnd
jnp
push
movsl
popf
mov
add
pop
dec
cmp
insb
int
pop
paddd
pop
icebp
xor
in
push
sub
lods
test
cs
mov
add
push
sahf
inc
xor
mov
cs
pushfw
in
aad
std
pop
dec
loopne
mov
loopne
sbb
incb
cmpb
pop
fcomps
add
je
cmpsb
sbb
jne
jge
sbb
sti
outsb
adcl
sbb
and
xchg
mov
out
subb
cmpsl
push
mov
add
mov
xor
setne
ss
push
mov
adc
sbb
adc
daa
dec
jmp
jecxz
sbb
into
sub
xchg
out
dec
jge
mov
syscall
and
push
push
sbb
bound
loopne
adc
jg
insb
fwait
push
mov
sbb
arpl
test
hlt
fcoms
loop
jmp
clc
inc
stos
inc
in
cmpb
jl
mov
sbb
sahf
lret
pop
inc
or
mov
add
sub
mov
mov
xchg
inc
rclb
pop
or
add
insb
mov
pop
xchg
dec
loop
aaa
push
ds
shll
loope
movsb
fs
cmp
push
push
xor
jae
dec
ljmp
xor
or
xor
jg
test
xchg
adc
pop
jmp
mov
mov
repnz
shl
or
repnz
popf
repnz
nop
call
sbb
push
and
add
dec
fs
imul
mov
cwtl
cmp
movsl
and
jne
xor
push
mov
xor
add
cwtl
in
nop
in
mov
sbb
mov
into
mov
scas
rclb
ljmp
lcall
cmc
out
in
adc
mov
cmp
push
jmp
dec
push
mov
and
aas
sbb
jg
loop
dec
push
sbb
mov
sbb
xchg
jo
add
inc
cmc
xchg
pop
mov
mov
xor
fs
add
cmp
cmp
push
nop
xchg
fwait
dec
jnp
mov
repnz
leave
sbb
into
dec
lcall
push
shrl
scas
push
or
add
mov
int3
aaa
out
in
mov
addr16
and
lods
jp
fistpll
fistps
sti
mov
or
testl
fs
inc
movsl
sub
push
cli
cmp
icebp
lcall
mov
pushf
in
mov
add
daa
xchg
cmp
mov
add
mov
pop
call
xchg
pop
push
out
cs
pop
add
and
stos
adc
jmp
pop
sub
cmp
pusha
push
add
and
mov
pop
dec
ds
aad
aas
cwtl
inc
jl
cli
bound
mov
adc
fsubr
sbb
popf
fmulp
out
mov
dec
js
jmp
fmul
ficoml
loop
daa
mov
add
in
outsb
sbb
mov
push
cmp
shlb
or
sbb
fimuls
dec
out
imul
jns
lret
gs
mov
inc
icebp
sbb
sahf
xchg
int3
mov
insl
xchg
mov
xor
out
adc
mov
dec
push
push
repnz
sub
repz
push
sbb
call
loopne
clc
or
push
call
les
xlat
cli
adc
mov
lcall
loopne
ds
push
pop
lahf
cmpsl
jo
pushf
out
adc
push
xor
inc
jb
leave
fmul
gs
push
sti
pop
sub
shll
inc
mov
inc
cwtl
pop
dec
in
insl
xor
xchg
aad
mov
int3
mov
jmp
mov
lds
movsb
jg
fbstp
repnz
or
dec
mov
push
mov
iret
mov
cmpsb
call
cmp
dec
inc
push
scas
cltd
pop
loopne
push
add
std
xchg
in
sub
pusha
lahf
add
bswap
xchg
inc
mov
or
sbb
imull
adc
loopne
in
push
fidivs
push
insb
sbb
fwait
xor
stos
aaa
aam
into
shrl
sahf
clc
jle
jbe
orl
pushf
popa
push
add
xlat
add
pop
into
pop
enter
and
je
cwtl
lret
xchg
jo
fisubrs
je
push
sbb
add
xor
int
stos
or
adc
sti
test
and
push
xchg
mov
add
jge
lret
jl
popf
or
stos
dec
js
cmpsl
jmp
pop
cmpb
out
cmp
push
and
or
cmp
popa
repz
jne
mov
sub
gs
xchg
pop
mov
xchg
push
fs
fwait
add
pop
adc
dec
sbb
dec
into
cmp
repz
xor
adc
or
inc
pop
pop
inc
jp
cld
into
scas
push
je
roll
inc
repz
mov
and
add
mov
adc
jae
sub
mov
xchg
cmpsb
add
imull
shlb
xchg
mov
inc
test
xchg
leave
mov
out
cld
push
cmpsl
sbb
inc
mov
or
and
inc
out
int3
popf
nop
pushf
mov
adc
je
fwait
sbb
ss
pop
jp
popf
push
dec
fnstsw
mov
mov
cli
add
lea
mov
repz
lret
loope
xor
jbe
xor
mov
pop
push
push
mov
ss
imul
dec
sub
iret
je
scas
dec
sahf
sbb
pop
shl
imul
ret
in
jbe
lock
xor
sbb
data16
xor
test
negl
fnstsw
inc
mov
push
push
aam
insb
faddl
shl
das
add
sub
push
pop
out
in
leave
push
sbb
mull
jno
dec
push
push
mov
mov
mov
jge
jp
inc
inc
jmp
std
cli
pushl
push
sti
cmp
lods
stos
or
movsl
je
clc
mov
and
xor
ja
scas
push
sarb
enter
cs
inc
inc
dec
fldt
inc
add
pop
pop
out
ret
pop
jp
push
aaa
xchg
pop
xchg
adc
adc
cmp
in
aas
add
out
lods
push
aas
xchg
mov
jp
popa
pop
inc
rcrl
jns
pop
cmp
scas
push
jbe
ljmp
std
push
inc
repz
ljmp
add
adc
xor
mov
icebp
and
mov
mov
cli
jns
jnp
divb
adc
inc
mov
addr16
icebp
ss
in
push
rcrl
sub
xchg
add
out
adc
stc
lahf
xchg
test
sbb
mov
fdivrl
inc
sub
into
or
adc
jecxz
cmovp
mov
insb
mov
xor
lahf
adc
cmp
fwait
lods
sbb
cwtl
cld
test
sbb
repnz
shl
pop
mov
popa
inc
mov
popf
cmp
cmp
cmp
negl
add
dec
ficoml
stos
sqrtps
xchg
mov
lahf
dec
pushf
xor
push
fisubl
rol
adcb
dec
cli
sbb
fidivl
inc
adc
dec
push
ss
hlt
gs
loop
test
cmp
inc
data16
cld
mov
dec
push
clc
cs
dec
aam
mov
mov
unpcklps
cmp
insl
out
into
jo
inc
xchg
jp
icebp
add
xorl
xor
or
jg
sti
xchg
dec
ds
adc
jmp
mov
mov
inc
cs
jno
cmpl
loope
xchg
mov
dec
popa
mov
adc
lret
movsl
push
cmp
lea
out
mov
sahf
gs
xor
int
vmwrite
push
mov
mov
pop
insb
xor
mov
jg
add
popa
mov
insb
imul
dec
loopne
andl
ljmp
and
xchg
daa
nop
popa
cmp
inc
popa
mov
pop
inc
push
mov
mov
sbb
push
mov
mov
sarb
mul
mov
mov
pop
in
inc
lea
lods
dec
stc
sub
jmp
cmp
pop
stos
xchg
inc
ret
sbb
pushw
call
aad
xchg
and
aas
in
inc
pop
iret
out
into
mov
push
xor
pop
mov
idivl
xchg
stos
into
aam
sub
push
in
cmp
sub
mov
int
jmp
orl
cmpsb
das
fisubrl
pop
jns
jmp
lret
hlt
push
fidivl
sub
xchg
ret
subb
das
pop
push
mov
aam
cmp
imul
sbb
push
or
add
sbb
dec
sti
test
xorb
and
insl
fisubl
ja
pop
jae
push
lahf
add
dec
sub
test
push
aas
clc
dec
xchg
mov
cmpsl
push
xchg
loopne
pop
mov
sti
mov
inc
push
inc
sub
or
ljmp
sub
mov
dec
dec
jmp
fildl
jns
inc
sbb
mov
pop
jo
les
test
xor
idivb
jo
orb
jne
add
fbstp
cmp
stos
add
push
push
xchg
loopne
lock
arpl
aad
mov
xor
or
insl
bnd
xchg
jae
mov
mov
mov
sub
aas
and
or
clc
shrl
loope
mov
cmp
dec
lahf
and
sahf
arpl
jp
addb
mov
out
aas
push
cmpsb
push
gs
jbe
dec
mov
or
adc
movsb
jle
lds
rcll
jge
cmpsb
mov
shl
lods
mov
mov
inc
lods
pop
mov
in
repnz
out
shlb
add
dec
pop
jb
or
adc
and
gs
mov
inc
pop
push
les
inc
rcll
cltd
pushf
push
cmpsb
pop
jmp
rclb
imul
push
mov
mov
jbe
jl
cmp
js
dec
fldt
jg
ret
xorl
jbe
es
scas
in
and
popf
idivl
cmpsb
scas
out
inc
js
in
push
push
sbb
xchg
adc
sbb
arpl
cli
xchg
and
fisubs
xchg
imul
into
push
movsl
es
adc
ficoml
dec
xor
push
jmp
add
mov
add
clc
imul
cmp
add
jle
sub
xor
mov
or
dec
jb
das
mov
mov
mov
test
push
mov
cmpsb
or
je
pop
int
xchg
pop
js
out
imul
popa
cmp
shll
sub
sub
mov
adcb
je
stc
mov
je
xchg
or
mov
pop
in
push
push
jmp
dec
adc
sbb
xchg
dec
mov
in
xor
jb
adc
xchg
call
adc
or
sbb
pop
mov
mov
pop
test
push
movsl
shrl
lret
rclb
inc
scas
movsb
aam
insl
shl
dec
mov
in
repnz
sub
lret
rcr
push
daa
add
or
and
movsb
or
sub
lock
cmp
loopne
lds
iret
add
in
inc
jne
xchg
negb
das
adc
sbb
and
fldl
push
sbb
int
mov
fcomps
sub
sbb
xor
ljmp
pusha
pop
pop
dec
add
fwait
mov
imul
jnp
ss
cltd
sbb
fmull
cltd
test
rcll
fsubl
add
add
pop
xchg
jl
xchg
aas
mov
or
push
das
scas
and
or
cmp
sub
push
push
inc
sub
in
scas
inc
int
mov
jne
xchg
out
pop
dec
add
mov
push
dec
push
adc
mov
pop
cli
popf
pop
fwait
lds
cmpsl
pop
adc
aas
jl
jbe
roll
test
inc
dec
mov
arpl
pop
test
addr16
lcall
mov
pop
xchg
jle
mov
push
test
inc
cmp
or
insl
pop
mov
movsl
aas
in
mov
mov
dec
cmpsl
inc
push
pop
rol
bound
fmull
pop
shlb
das
das
leave
leave
mov
scas
pop
aaa
and
test
mov
mov
repnz
adc
mov
enter
push
mov
dec
or
xor
push
jne
mov
mov
add
rcrl
mov
shr
sarb
pushf
pusha
or
pop
mov
adc
das
mov
out
dec
dec
popa
add
aas
or
insl
push
xor
push
xchg
pushf
mov
icebp
lds
jbe
js
ds
fidivrl
pop
cwtl
jecxz
xchg
clc
insb
push
icebp
out
in
jns
add
fbstp
lea
xchg
xchg
out
inc
jg
cmp
cmc
mulb
int
mov
std
dec
fdivs
lods
sbb
sarb
jae
clc
push
xor
loopne
and
jg
sbb
lods
pop
sbb
subl
inc
jbe
xor
sbbb
xlat
jno
or
mov
xor
jbe
mov
imul
dec
inc
ret
mov
mov
gs
mov
mov
push
mov
addr16
or
mov
imul
imul
out
int
imull
jae
lods
push
mov
cmpsl
std
pop
push
faddl
fidivrs
cmp
fldcw
xchg
scas
dec
jg
cmpsl
mov
inc
pop
enter
pop
ja
loop
push
pop
rorl
sti
into
lret
fstps
mov
arpl
out
mov
das
ljmp
pop
jnp
cmp
imul
test
pop
cld
push
xchg
pushf
pop
outsb
scas
add
push
fcom
rol
sti
test
xchg
aas
push
xor
out
adc
movsb
faddl
stos
hlt
dec
lds
lea
cmpsl
push
jecxz
and
push
mov
mov
and
jmp
fucomip
nop
cwtl
sbb
or
shll
or
pusha
lds
notl
push
pop
pop
leave
xor
loopne
call
call
aaa
add
jo
pop
adc
push
mov
mov
test
mov
push
cld
into
jg
fimull
dec
sbbl
popf
cmpsb
rcr
shll
es
daa
sbb
mov
pop
fmulp
cmp
enter
addl
mov
sbb
mov
dec
push
roll
cltd
cmp
jae
das
inc
fildll
xor
mov
nop
cmpsl
imul
add
pop
lea
in
popl
cld
or
jae
fidivrl
imul
sbb
mov
mov
iret
inc
or
xchg
rcrb
push
add
adc
jl
cmp
roll
jp
push
dec
lods
jl
add
mov
divl
push
jmp
xor
inc
rolb
sub
pop
notl
mov
dec
test
jo
sbb
cmp
out
dec
and
fwait
shrl
testb
nop
inc
loopne
orl
push
push
daa
sbb
out
cs
shll
add
cmp
test
dec
sbb
out
das
push
and
outsl
xchg
sbb
sti
xor
fiaddl
jnp
iret
outsl
push
ret
pop
push
sbb
mov
or
test
mov
aam
lods
pop
lret
call
lahf
stc
das
push
popf
js
cvtps2pd
cwtl
cmp
ljmp
imul
or
arpl
nop
jmp
fidivl
divl
cmp
and
add
or
xor
pop
xchg
add
push
inc
cmpsl
add
and
cmp
push
mov
imul
int3
orl
stos
xor
adc
jne
iret
sbb
xor
mov
adc
and
fisubrl
and
in
mov
mov
test
jp
sarb
sar
xchg
ret
pushf
add
call
jne
les
cli
aas
jmp
ja
or
lret
mov
xchg
adc
adc
shr
ret
pop
jbe
cs
inc
andl
xchg
sbb
jae
xchg
lock
pop
lods
je
repz
insw
adc
jge
fstl
inc
stos
inc
cmp
lcall
shlb
inc
loop
rol
or
test
andb
paddsb
outsl
lock
test
cbtw
loopne
lret
jb
push
out
sbb
cmp
lahf
mov
and
jmp
hlt
lret
nop
ret
std
movl
hlt
lret
dec
jle
jb
xchg
fdivrl
test
ljmp
mull
jb
cmp
or
pop
cli
ret
test
cmp
lahf
js
nop
int
mov
test
dec
ret
nop
iret
mov
cmp
fadds
sarl
push
lcall
imul
ljmp
cmp
dec
pop
insb
push
mov
fs
xchg
add
inc
scas
xchg
aam
push
dec
test
jbe
clc
lods
mov
in
loope
into
xchg
into
and
repnz
cwtl
push
xchg
lret
mov
imul
shl
fidivs
scas
outsb
jg
xor
cwtl
inc
mov
nop
and
inc
push
int3
sbb
mov
pop
lret
sbbb
jnp
flds
add
shlb
addl
stc
ss
pop
hlt
dec
into
mov
hlt
repz
outsb
popf
push
cmpsb
outsl
and
loop
and
xchg
repz
pop
mov
and
jle
icebp
push
jg
lahf
mov
pushf
pop
and
lock
iret
ret
pop
jg
push
lret
xchg
or
lahf
dec
xlat
jno
adc
mov
mov
mov
cvtpi2ps
or
out
xor
js
bound
std
lret
adc
nop
mov
fisubrl
push
push
mov
add
aaa
xchg
push
movsb
ja
pop
popl
fidivrs
xchg
cmp
adc
xorl
enter
and
sbb
test
push
ds
xchg
mov
mov
mov
xorl
inc
js
in
push
or
jnp
outsb
aam
and
mov
mov
iret
mov
push
push
mov
andb
jp
dec
mov
pop
pop
scas
or
mov
or
mov
fs
es
movsl
data16
in
add
dec
mov
mov
test
jbe
xchg
shlb
popf
mov
popa
dec
lcall
pusha
icebp
movsl
add
mov
lea
pop
dec
mov
pop
push
sbb
push
aas
jns
test
adc
add
jmp
mov
or
sub
pop
pushf
lea
pop
and
popf
lock
mov
ljmp
jmp
inc
add
jmp
ds
pusha
add
cli
dec
lret
cmp
add
pop
sbb
es
mov
adc
cs
add
shrl
pop
mov
push
jp
jle
mov
lcall
jecxz
rorl
cmp
sbb
mov
hlt
jb
xchg
lcall
idivb
adcl
shl
and
xchg
ret
jecxz
lret
mov
stos
aas
mov
inc
push
jnp
shll
mov
xorb
stos
sub
gs
repnz
cld
cmp
fiaddl
xor
push
xchg
sahf
rcll
fcmovb
mov
pushf
mov
sub
cld
scas
sbbl
lods
es
add
mov
enter
cmp
outsb
ljmp
mov
pushfw
jns
mov
jl
popa
jge
imull
pop
and
leave
dec
es
bound
dec
inc
jle
jno
mov
mov
xor
mov
cltd
stc
divb
sbb
jl
sub
cmp
std
mov
call
ror
pop
pop
test
xchg
ud2
mov
popa
sub
insb
push
movsl
sti
push
shlb
ss
and
and
and
xor
push
mov
fildl
pop
mov
scas
and
sub
pop
fisubl
cmpsb
js
repz
jne
add
aad
std
test
jo
mov
int3
cmp
xlat
out
mov
fnop
cmp
pop
mov
and
rclb
popf
pop
fstps
andl
cmp
and
test
dec
jge
push
jmp
xor
daa
and
bound
leave
mov
pop
mov
fdivrl
pop
add
rorl
notl
outsl
mov
mov
lret
in
fdivl
mov
int3
push
ret
test
xchg
push
inc
inc
or
cld
mov
into
movl
xchg
loope
mov
dec
js
addr16
movsb
mov
inc
pop
testb
in
nop
fstl
test
ds
gs
fcompl
mov
xor
add
sub
das
gs
data16
jb
push
xchg
je
mov
push
out
and
popa
call
aam
and
sub
inc
out
fcmovnu
imul
jb
pop
lods
stc
ret
xlat
mull
and
pop
adc
loope
jecxz
add
adcl
mov
jno
pop
and
stos
in
mov
cmp
lods
cld
jecxz
mov
rcrl
cwtl
test
lcall
xchg
jnp
int
dec
lock
and
jmp
mov
pop
fiaddl
inc
xchg
lret
icebp
movsb
push
daa
movsl
lods
push
into
ficomps
lret
xor
sbb
pop
sbb
cs
andl
jecxz
out
les
popl
insb
pop
cmc
test
hlt
imul
stos
push
or
add
out
shl
das
data16
pop
cli
fildll
mov
int
jbe
mov
xorl
jbe
loopne
sbb
jl
xchg
jb
dec
jnp
xchg
outsl
jb
sbb
push
lds
push
rcrb
test
xorl
test
lock
cmpsb
fiaddl
test
pop
mov
or
clc
std
push
mov
test
out
lock
xor
cmp
repz
fistps
or
sub
pop
inc
lds
pop
mov
add
fwait
xor
sub
mov
aad
mov
rorl
ret
jo
or
push
add
lds
stc
mov
mov
inc
shrb
jge
iret
sub
sub
lds
test
cmp
jl
push
aas
shll
sub
pop
stos
mov
adc
dec
inc
push
pop
xlat
mov
mov
mov
pop
stos
fidivl
sub
add
lcall
mov
stc
movsb
or
xchg
jecxz
icebp
pushl
xor
mov
pop
jbe
cmp
lock
pop
shll
and
add
pop
and
pop
pop
nop
add
out
enter
and
stos
pop
dec
pop
jg
nop
aad
jnp
xchg
mov
sub
aam
xor
cmpsb
pop
or
xor
in
sbb
mov
rorb
jo
divb
shlb
test
test
push
cwtl
mov
pusha
sar
lods
dec
aad
pop
sub
pop
dec
xchg
fwait
rcrb
mov
add
sub
les
add
std
sub
pop
dec
dec
mov
xlat
jb
or
lret
mov
mov
push
mov
das
add
mov
out
out
fs
adc
mov
push
inc
popf
add
cli
arpl
arpl
push
fwait
jo
pop
test
inc
hlt
nop
sub
out
inc
punpcklwd
adc
lcall
cmp
fildl
lods
sbb
xor
xchg
jmp
ds
mov
pop
inc
fiaddl
fistl
push
sbb
mov
mov
incb
pop
xchg
testb
jb
jb
and
mov
mov
ja
gs
adc
jle
mov
adc
cmp
adc
stc
cli
iret
adcb
icebp
scas
cld
stos
test
pop
mov
test
jae
xchg
or
scas
insb
mov
in
jmp
in
cmp
mov
push
sub
cltd
imul
lea
lds
lcall
or
sub
sub
ss
call
mov
pusha
inc
mov
popa
pop
cmc
mov
lods
xchg
stc
ja
loopne
mov
aam
hlt
ljmp
jmp
sbb
cmp
jg
insb
testl
das
pop
hlt
add
mov
mov
inc
xorl
or
pop
mov
push
scas
addl
pop
sub
addb
mov
lds
addr16
lcall
push
and
in
mov
loop
xor
add
mov
mov
push
lods
add
xchg
inc
inc
popa
add
lea
fdiv
mov
cmp
xchg
or
xor
arpl
in
push
jo
idivb
add
sarl
sub
bnd
mov
dec
stos
dec
outsl
sub
sbbb
aas
dec
mov
lea
xor
xor
mov
sub
outsl
inc
mov
xlat
or
mov
fwait
sub
cmp
jmp
dec
push
dec
pop
std
jae
cmpsb
mov
mov
sbb
insl
or
or
mov
mov
cli
mov
push
mov
outsb
inc
pop
mov
cmpsb
pop
pop
dec
pop
pusha
push
call
mov
ret
dec
sub
jp
cli
pop
mov
iret
jmp
mov
std
jo
dec
mov
aas
shlb
mov
lret
push
leave
and
out
sub
decb
mov
push
push
fdivr
xor
push
mov
lods
cmp
xor
add
js
inc
or
inc
mov
or
test
in
mov
lret
mov
add
fcomps
prefetcht0
cmp
insl
mov
ffree
xor
imull
adc
sbb
mov
sahf
adc
andl
into
sub
jbe
movsl
mov
pop
aam
add
jl
cmc
jl
mov
arpl
sbb
ja
addr16
and
stos
sub
mov
inc
add
gs
push
into
insl
lods
mov
imul
pop
or
fstpl
stos
scas
jbe
inc
add
mov
add
lods
ret
pusha
dec
roll
imul
xchg
fiadds
sbb
test
mov
std
fs
lock
xor
fwait
aam
shr
movsw
or
mov
xchg
jb
xchg
and
test
cmp
cmp
or
jno
jl
enter
push
in
repnz
mov
call
jne
lret
or
xor
js
jb
xor
or
xchg
lea
shll
jae
scas
push
fimull
cltd
push
mov
xchg
dec
std
out
sbb
fisubs
and
clc
lock
daa
addr16
into
outsl
adc
jge
jg
idivb
mov
push
hlt
jo
in
xchg
push
mov
push
mov
pop
cmpsl
fnstenv
and
mov
loope
and
into
mov
xor
out
cli
add
sbb
push
add
lret
das
popa
mov
mov
sahf
arpl
aam
xlat
adc
mov
cmp
fiaddl
movsl
aam
sub
enter
jmp
fisubrl
mov
sub
in
leave
rolb
cmp
add
popf
sbb
loope
adc
repnz
stos
inc
sub
lret
daa
xchg
insl
shrb
mov
rorb
push
loopne
cli
xchg
pusha
jmp
mov
ja
jle
push
adc
scas
cltd
mov
xor
popa
adc
jge
scas
mov
push
jae
push
pusha
push
sub
dec
hlt
sbb
jecxz
insl
add
inc
mov
outsb
jb
xor
ja
addr16
fiadds
out
jno
sti
mov
sbb
nop
mov
mov
pop
inc
or
js
sti
mov
push
mov
dec
sti
adc
push
jo
jbe
add
and
sub
xchg
lock
stc
stos
sub
jb
insl
jb
in
stc
jg
jae
dec
jo
std
add
loopne
pop
sub
fsubrl
jmp
les
inc
xchg
sbb
push
sbb
dec
mov
sbb
ud1
fsts
imul
mov
incb
dec
inc
sti
cld
lock
in
inc
mov
mov
fidivrs
arpl
das
out
jp
pop
into
jnp
mov
adc
fs
lods
cs
jns
mov
je
adc
and
mov
mov
jo
dec
xchg
aad
mov
or
jnp
pop
rcrb
xchg
mov
cmp
jle
dec
pushf
lret
or
xor
inc
lods
mov
aam
dec
fs
movsl
and
cmpsl
inc
adc
cwtl
xchg
cltd
loop
jb
imul
mov
dec
push
and
std
or
pop
dec
or
rclb
or
mov
inc
mov
dec
rolb
dec
movsl
mov
mov
stos
jo
int3
xor
xor
mov
mov
dec
addl
out
cld
xchg
fcmovnu
mov
enter
repz
mov
push
fmulp
xchg
sub
test
loopne
popf
xchg
fs
sahf
and
cld
mov
xor
addr16
cmpsb
sub
mov
stos
sbb
add
daa
push
and
inc
rcrl
or
call
jg
movsl
ret
mov
dec
popa
sub
scas
push
shll
pop
add
or
xor
jl
lret
gs
dec
sub
in
push
in
lock
xor
add
iret
pusha
mov
dec
in
ret
xor
popf
or
ss
dec
cltd
sub
cmpsb
not
mov
xchg
mov
aam
rorl
test
aas
xchg
test
pusha
jmp
setge
sub
push
rol
sub
mov
mov
test
rolb
inc
fwait
jo
or
push
test
jne
inc
xor
cmp
gs
out
mov
sahf
push
sbb
mov
sbb
loop
cmp
icebp
out
or
xchg
xor
mov
push
mov
loope
add
mov
push
sbb
push
adcb
and
jge
xchg
sahf
stc
ss
jo
das
sbb
mov
push
iret
ficomps
popa
jno
dec
lock
fadds
js
cltd
fisubrs
ds
mov
sub
ds
xor
fdivrs
rcrb
pop
sbb
pop
sub
js
icebp
or
pop
or
popa
ja
ljmp
adc
pop
aas
pop
pop
sarb
cmpsb
lahf
push
cwtl
and
insl
sbb
outsb
inc
mov
xchg
or
mov
mov
enter
mov
and
aad
pop
jo
cmpsl
pushf
or
push
paddw
call
adc
push
jo
shrb
mov
mov
lock
xchg
andl
inc
leave
or
loope
cli
add
scas
das
sahf
fwait
sub
xchg
add
sarl
dec
hlt
repnz
mov
push
out
addb
add
add
inc
add
push
xor
push
cmp
ja
add
insb
push
adc
lcall
inc
ds
add
fimull
aas
loop
push
mov
mov
pop
enter
es
inc
jo
ss
or
call
cli
push
lret
scas
fisubs
call
and
xlat
mov
out
sub
or
fs
repz
cmp
sub
jmp
dec
test
loop
dec
inc
sahf
xchg
or
nop
push
and
test
mov
test
xchg
insl
cmp
fists
inc
lahf
and
xor
push
jne
push
sub
rolb
add
leave
pop
fmuls
clc
sbb
fidivl
testl
mov
or
icebp
outsb
outsb
lahf
lahf
and
cmpsl
cld
loope
fsubl
addr16
mov
sub
and
movsl
roll
movsl
pusha
mov
adc
and
sbb
mov
icebp
rol
jge
adc
pusha
cmp
fimull
push
jne
mov
xchg
and
mov
and
mov
push
cltd
fs
cmc
icebp
stc
test
and
push
xchg
add
test
jns
test
push
xchg
lea
cmp
movsl
cmp
sbb
push
test
rcll
xchg
or
add
adc
in
push
loopne
rcr
aas
aaa
in
adc
fld
push
adcb
xorw
mov
leave
mov
mov
mov
push
dec
cmc
dec
mov
test
sbb
leave
xor
mov
pop
xchg
scas
hlt
ljmp
sub
and
inc
dec
es
iret
mov
ror
mov
pop
mov
sbb
inc
lods
cld
insl
add
pop
sub
dec
cmp
jle
bound
lods
cld
fptan
mov
xlat
mov
test
es
jno
mov
fs
mov
test
inc
xor
rorb
xor
in
mov
xchg
outsl
adc
adc
test
and
pop
mov
and
push
jmp
xchg
sub
push
ret
push
mov
mov
test
push
jl
repz
and
cwtl
cmpsl
and
jbe
fsubr
cli
lret
jge
xchg
adc
ret
sub
fs
cld
pop
ret
adc
mov
fidivs
sti
jecxz
add
pop
push
out
pop
das
or
cmp
sub
pop
push
es
jp
fmuls
jge
jp
ds
push
adc
insb
repz
js
daa
repnz
xchg
and
repnz
jns
jmp
push
jmp
inc
adc
mov
sbb
inc
cmp
mov
cld
lret
add
lds
mov
lea
rcrb
out
or
mov
in
int
addb
xlat
rcrl
lock
push
in
mov
outsb
inc
adc
mov
shlb
es
fiadds
mov
std
jne
les
js
adc
ret
je
lcall
jle
je
xor
test
loopne
ds
int3
jne
mov
cmp
xchg
cmp
jecxz
push
xchg
into
and
sahf
rcrb
mov
scas
fisttps
push
xor
lahf
lahf
adc
jp
fwait
adc
fists
addl
sub
pop
sbb
add
dec
out
stc
fldcw
iret
mov
cmpsb
xchg
jbe
adcb
clc
xchg
mov
addr16
shl
cld
adc
dec
mov
inc
sbb
test
jecxz
mov
shr
xor
mov
dec
inc
dec
xchg
icebp
inc
mov
and
stc
dec
bound
ret
repz
sub
int
clc
mov
pushf
cmp
adc
dec
push
lods
or
adc
xor
ljmp
scas
daa
pop
cmp
push
ljmp
or
inc
mov
cmp
mov
jg
ljmp
add
inc
mov
lods
inc
cmp
inc
push
mov
push
mov
movsl
shl
aas
icebp
pop
subb
jae
mov
push
in
loope
mov
repz
mov
movl
in
aaa
call
add
mov
add
adc
pop
mov
out
add
mov
pusha
aaa
pushf
cli
mov
rcrl
and
fs
cltd
or
sub
fsubs
and
in
loop
in
ss
je
fcoms
jmp
sub
mov
xchg
fcomi
std
cltd
mov
gs
push
lock
dec
and
stos
pop
xchg
test
loope
test
test
leave
out
aad
jmp
xchg
hlt
jg
repnz
out
pop
pop
xor
inc
cmp
bound
push
xchg
push
je
xchg
in
xor
mov
xorb
aad
adc
repz
fadds
out
add
mov
ja
es
fcomps
fdivl
pavgb
scas
fcmovnbe
addl
gs
lahf
xchg
cmpsb
or
sahf
cmc
mov
sarb
pop
arpl
pop
dec
push
and
ljmp
or
and
and
or
imul
cmpsb
popa
and
mov
loope
movsl
movsb
inc
punpckhwd
adc
and
push
aam
aam
jmp
jae
subb
pop
or
shll
jb
jl,pn
loop
or
bnd
xchg
and
pop
movsl
mov
or
stc
repz
xor
std
jl
dec
jne
xor
add
outsb
jge
movups
mov
xorb
xchg
ja
jae
sub
push
add
add
cld
cltd
add
mov
xor
aaa
jmp
popa
mov
push
test
add
dec
data16
outsb
iret
scas
mov
push
sbb
adc
stos
outsl
popa
sub
insb
daa
mov
sbb
enter
fsts
in
or
int
xor
cmp
pop
jno
cltd
outsl
adc
and
out
sar
clc
loope
inc
cltd
movsl
mov
out
add
jno
push
jnp
dec
aas
push
sbb
cmp
pop
out
mov
mov
std
stos
out
push
std
jo
pop
adc
roll
add
into
sbb
jb
in
aam
cmp
sahf
mov
sub
scas
mov
and
lods
shll
mov
xchg
pop
test
and
call
notb
inc
cpuid
xchg
inc
iret
and
ret
roll
push
das
xor
or
stc
roll
add
or
es
jne
imul
into
lods
add
fwait
adc
mov
jne
scas
or
pop
cmc
aad
xchg
pop
shr
dec
imul
add
adc
out
xor
add
loopne
into
out
mov
daa
adc
ds
test
rcl
shll
mov
pop
mov
or
std
push
mov
fsubs
lret
out
ja
cmp
cs
add
jne
add
jg
jmp
pop
xor
testl
outsb
or
push
in
xor
gs
fldl
es
pop
cli
cmp
push
mov
push
dec
and
mov
scas
fs
sub
test
xor
pop
push
lret
jne
into
cmpl
lahf
imul
mov
lret
jae
aad
cmp
xchg
call
dec
mov
dec
cld
insl
shrl
jl
cmp
mov
pop
push
shrl
pop
testl
cltd
cltd
stc
sub
in
ret
inc
xor
out
das
or
in
cmp
sub
movsb
shl
stos
fwait
inc
mov
loope
dec
cwtl
punpckhwd
sahf
mov
fistpll
xor
mov
rcrl
pop
imul
xor
mov
sarb
dec
xor
xor
inc
push
xorl
and
push
dec
stc
push
in
repnz
adc
test
fistps
dec
jp
jae
inc
sub
dec
mov
cld
xor
and
jmp
push
lcall
xor
or
daa
bound
fimuls
imul
xchg
cmp
fldenv
pop
mov
push
add
cmp
ss
test
stos
mov
mov
jmp
scas
xchg
and
jns
sub
pop
and
loope
in
fldl
mov
repnz
movsl
dec
jmp
mov
iret
or
ja
int
out
rcr
imul
jnp
and
test
outsl
sti
and
cmpsl
inc
jge
in
push
mov
out
mov
jp
sbb
sbb
push
nop
or
add
pop
orb
int
mov
ljmp
pop
jmp
sbb
loopne
jae
or
xor
dec
daa
jo
pop
dec
jecxz
out
ds
cmpsl
int
add
jne
mov
inc
push
xchg
outsb
inc
pop
add
imul
test
cmpsb
sahf
xchg
push
rorl
enter
xor
sub
test
cmp
cwtl
cmp
add
inc
xchg
pusha
fmull
stc
push
scas
pop
imul
lods
int
push
or
nop
pop
imul
dec
icebp
int3
push
fs
cltd
arpl
fs
fistl
dec
adc
pushf
lahf
lahf
hlt
sbb
std
fs
sar
inc
inc
dec
xchg
ljmp
mov
bound
imul
rclb
or
dec
ja
stos
cmpsb
inc
pop
sbb
and
dec
test
xor
cmc
lds
jecxz
push
inc
shll
dec
fcmove
fldl
adc
xchg
xor
mov
sbb
shr
or
xlat
pushf
xor
xor
pop
nop
pop
test
fistpll
jae
mov
adc
out
pusha
jg
mov
pop
mov
add
leave
sub
xor
xchg
adc
cmp
xchg
push
mov
push
sub
mulb
pop
aam
out
xchg
aas
sahf
shrl
mov
inc
insl
mov
xor
ret
mov
push
push
add
sahf
fwait
xchg
gs
mov
mov
push
sar
mov
xchg
add
movsl
or
lcall
jnp
rorl
sbb
sbb
mov
or
imul
test
mov
push
and
loope
and
sbb
mov
push
fcmove
cwtl
xchg
add
cmp
call
mov
clc
or
sub
mov
lods
jmp
jo
jns
pop
push
aaa
ret
das
and
and
jns
nop
ss
pop
clc
or
fsubrl
inc
xor
fsts
jp
cwtl
xor
dec
push
or
sub
rcrb
das
insl
pushf
imul
push
pop
fcmovb
sbb
add
test
add
pop
cmpsb
dec
mov
rclb
outsl
mov
aam
adc
push
arpl
sub
mov
mov
and
fiadds
inc
pushf
push
mov
xchg
test
pop
fs
jns
pop
jmp
mov
dec
xchg
ljmp
pop
loop
std
mov
xchg
mov
scas
xor
inc
movsl
sbb
pusha
idiv
jns
cmpsb
lret
xchg
mov
sbb
push
jno
push
scas
mull
std
bound
pop
push
fcoms
loope
out
cmpsl
lahf
add
cmpsb
push
stos
push
push
cwtl
mov
push
cli
add
pop
ret
or
sub
fadd
inc
ja
mov
bound
add
add
adc
xchg
and
jnp
or
jmp
or
loopne
inc
inc
sbb
xchg
pop
sub
pop
xchg
or
sbb
mov
xorb
sbb
scas
loope,pn
les
pop
sub
sub
push
mov
xlat
mov
hlt
addr16
xor
ret
push
pop
rclb
sub
adc
out
fmull
inc
cmpsl
das
popa
js
int3
mov
dec
adc
ds
pop
xor
mov
bnd
cld
jmp
das
mov
test
push
fwait
popf
iret
das
dec
or
sub
add
and
enter
movsl
addb
fmull
push
adc
cmpsl
ret
push
fnstcw
pop
imul
cmc
aam
or
ja
pushf
push
xor
mov
stc
sbb
js
cmp
aam
mov
movsl
push
repz
mov
lret
and
mov
adc
pop
jl
push
popf
push
adc
mov
sub
leave
xchg
or
push
add
jae
xchg
jl
push
cli
shr
leave
jp
inc
int
mov
jmp
mov
xor
rorl
jae
daa
addb
mov
xor
mov
shrb
mov
jns
inc
int3
lcall
jne
lahf
add
fdivrl
mov
test
mov
xor
es
pop
mov
movsb
add
or
dec
xor
jp
cli
mov
pop
cmp
dec
lret
loopne
or
lret
pop
sbb
adc
push
in
mov
jno
pop
and
xor
dec
adc
inc
or
mov
call
aaa
pop
into
mov
lea
dec
or
clc
cmpsb
ds
and
fcomip
mov
stc
fdivrl
ret
fisubl
aam
mov
dec
and
jp
es
mov
out
fbld
fcoms
adc
jmp
push
mov
xlat
push
out
add
mov
outsl
shrb
cmp
cmp
int3
in
sti
sbb
ds
mov
push
jmp
popa
cmp
jmp
jmp
das
stos
lods
lea
nop
mov
shrb
ror
cmp
repz
dec
sub
jmp
aas
loopne
jp
or
cli
sub
int
pop
inc
sbb
iret
pop
stc
in
adc
cld
dec
inc
xor
and
fsubrl
jae
clc
test
mov
inc
xchg
movsl
xchg
adc
sub
mov
jg
mul
pop
ret
mov
pop
adc
scas
rclb
test
repz
ljmp
xchg
stos
popf
pusha
in
cld
lret
xor
lea
pop
sahf
jecxz
outsl
and
ss
pop
fbld
shrb
mov
mov
frstor
lock
xor
clc
cli
into
xor
xor
int
dec
fadds
cli
push
pop
cmp
js
dec
mov
test
xor
outsb
aaa
cmp
ja
adc
jge
jo
shrl
fwait
cmp
jb
sbbl
aaa
sbb
and
jno
xor
out
jecxz
sub
inc
arpl
add
cmpsb
mov
repnz
jl
push
iret
and
add
cmp
das
stos
int3
lea
pop
xchg
mov
or
aam
mov
fs
repz
inc
xchg
jmp
and
fsubrs
mov
lds
clc
lret
jmp
aad
sbb
movsl
rcr
xor
shll
movsbl
jbe
push
sub
in
push
dec
xor
insl
ficompl
mov
sub
inc
js
adc
scas
stc
xor
out
push
mov
lcall
popf
mov
cs
psrad
pop
mov
lods
je
xchg
cmp
and
pop
adc
fldenv
jg
fs
pop
xor
mov
xor
insl
pushf
aaa
scas
clc
dec
mov
add
jge
ret
ficomps
loop
cmp
jmp
push
pop
ja
es
rol
mov
and
stos
ljmp
xor
insl
inc
cmp
xchg
ror
popf
adc
adc
into
sbb
push
push
sbb
lods
dec
jl
out
adc
add
xor
int3
fnstsw
loope
xchg
inc
repz
xor
test
cmp
jmp
iret
divl
fs
sahf
rolb
int
aas
es
repz
inc
lds
cld
push
mov
leave
imul
repnz
imul
lock
inc
cltd
inc
int
cmp
inc
int
mov
xor
jecxz
fnstenv
pop
adc
in
jae
mov
pop
add
jmp
pop
push
cmp
das
leave
push
xorb
push
leave
pop
loop
cmp
push
sarb
sbb
mov
push
inc
outsl
lds
add
sub
in
fs
mov
insb
in
add
and
sub
and
mov
fiadds
pop
cld
test
mov
add
mov
lods
push
in
inc
mov
and
cmp
dec
fnstsw
fidivrs
cmp
or
ljmp
cmp
inc
push
dec
aaa
cs
es
ffreep
add
aam
mov
call
and
xorb
xchg
mov
mov
push
mov
das
add
loop
iret
jae
or
mov
mov
ficomps
fsubs
cld
das
and
jmp
pop
pop
cmp
dec
jo
ds
je
movsl
lcall
lahf
addl
pusha
jmp
pop
cmp
jmp
mov
jge
jecxz
pop
lds
add
and
loopne
test
mov
pusha
sub
les
and
pop
cmp
in
scas
cwtl
mov
xchg
dec
xor
stos
jnp
pop
sub
jle
xchg
hlt
div
test
cmp
jmp
out
je
dec
cmp
mov
pushf
fwait
aas
mov
aaa
xlat
arpl
lret
adc
mov
sub
pop
xor
mov
in
and
int
movsl
fdivrl
mov
movl
in
out
icebp
dec
mov
pop
and
sarb
lea
cmp
shl
aam
repnz
xchg
aam
daa
out
shlb
or
xchg
in
or
xor
into
lret
xchg
movsl
hlt
pop
mov
insb
inc
aam
and
add
je
jae
xchg
dec
stc
mov
pop
push
mov
aas
mov
pop
fmuls
xor
int
and
mov
lret
cmp
aas
mov
cmpsl
adc
mov
fistl
gs
scas
in
shll
push
stos
mov
popf
out
jmp
sub
cwtl
jmp
jg
and
or
cmpb
xchg
shlb
pop
popa
rcrb
jg
mov
add
icebp
push
in
bound
stos
mov
cmp
cmc
jecxz
mov
scas
xchg
in
sub
lods
pop
popl
sarb
ds
addr16
sbb
fildl
push
lahf
xor
daa
movsb
mov
cmp
push
pop
int
ss
dec
cmpsl
sahf
sbb
xor
adc
xchg
call
mov
arpl
adc
sub
jae
repnz
test
xchg
int
mov
and
push
lcall
jmp
jo
jo
imul
loope
push
cmpsl
mov
jmp
jae
test
lret
idiv
bound
stc
popf
sbb
jbe
xchg
dec
or
fs
aam
inc
int
jmp
mov
dec
push
imul
xor
push
xor
mov
mov
shl
sbb
dec
xor
mov
adcl
mov
shl
sbb
lock
test
pushf
push
nop
pop
fstpt
pop
jmp
das
scas
xor
xor
outsl
mov
shll
push
xor
adc
jns
push
push
inc
cmp
jg
clc
adc
mov
inc
and
mov
lret
arpl
scas
adc
and
ss
jnp
mov
std
in
cmpsb
push
adc
sbb
cmpsb
or
mov
jb
add
fldenv
loop
inc
jnp
ja
or
mov
hlt
pusha
add
aaa
jl
out
inc
stc
je
mov
arpl
iret
bound
pop
sub
ret
inc
decl
dec
outsl
jge
xchg
in
insl
inc
aaa
xchg
lods
loopne
int3
iret
jae
dec
jg
sub
push
add
mov
push
pop
mov
aad
shlb
jmp
jmp
sti
popf
add
mov
mov
fnsave
nop
and
lcall
pusha
clc
jns,pt
aaa
loop
add
imul
imul
xor
in
jb
in
mov
sbb
sarb
pop
dec
xlat
loope
mov
sti
jmp
jmp
jne
push
fs
fdivrl
dec
stc
dec
inc
mov
jne
sbb
out
cli
inc
movsb
dec
and
into
push
ds
jp
in
arpl
xchg
add
push
ret
orb
inc
repnz
ja,pt
lods
sub
sbb
push
adc
push
adc
arpl
mov
inc
into
int
jmp
imul
movsl
or
sub
movsb
jge
mov
addr16
push
fists
lahf
or
mov
cs
nop
jae
push
dec
mov
dec
mov
cmp
imul
xor
pop
sub
mov
dec
jmp
lods
ds
cmp
dec
xchg
lea
push
sti
je
incb
stc
outsl
mov
insb
sub
out
inc
icebp
cltd
adc
adc
fbld
xchg
sbb
xlat
inc
shlb
in
push
inc
fidivl
jo
cs
sbb
out
xor
inc
cli
test
repnz
mov
das
jbe
imul
push
jp
dec
ds
call
pop
cmp
cmpsl
mov
dec
js
jl
sti
inc
mov
push
or
xchg
stos
addl
pop
xchg
in
jo
jecxz
daa
jne
ja
dec
repz
imul
mov
ljmp
stos
adc
cmc
pop
pop
out
adc
cmp
and
xchg
sti
mov
inc
ljmp
jmp
mov
into
dec
inc
fisttpll
sbbl
push
enter
stc
push
xor
mov
push
mov
jne
pop
push
mov
fsubrs
sbb
setp
rcr
das
dec
mov
cmpb
lods
dec
test
ret
dec
mov
xor
repnz
popa
and
inc
mov
into
hlt
rcll
lods
fmul
rorl
pop
inc
call
lret
jecxz
stos
or
jbe
xchg
lret
dec
roll
daa
mov
cli
shlb
into
aad
data16
cmc
lea
dec
jno
cmp
fisubl
lds
pop
xchg
or
sub
xchg
fstpl
cwtl
fwait
mov
add
into
sub
add
imul
and
movsb
ds
or
push
sub
je
test
xor
xchg
sarl
mov
lods
mov
xchg
jnp
ja
xchg
sub
fcmovne
add
adc
inc
xchg
out
sbbb
lods
sub
lret
xchg
and
movsl
lea
out
and
xchg
inc
in
adc
icebp
lret
sti
sub
fists
mov
das
fcoml
movsl
push
lcall
out
int3
gs
inc
cmp
jae,pt
dec
jnp
aad
jae
xor
out
mov
loope
lcall
mov
mov
push
loop
fists
sbb
pop
xor
pop
push
inc
sub
push
push
test
and
addr16
aad
pop
mov
pop
jge
es
das
popf
xorb
mov
dec
pushf
shl
pop
xchg
shrb
cmpsl
js
sub
xor
and
pop
dec
jmp
cmc
call
jp
inc
pop
mov
into
roll
sub
add
mov
je
dec
push
mov
lds
and
jle
in
mov
ja
sbb
or
mov
cli
pop
and
adc
sbb
mov
sti
outsb
add
push
xor
xchg
or
push
test
mov
sbb
ja
adc
jne
les
mov
push
cli
and
outsb
mov
fdiv
sbb
pushf
jmp
ds
loopne
cmpsb
aad
into
pop
jo
xor
pop
sbb
iret
data16
fstps
jns
adc
cltd
adc
pop
subl
les
test
push
stc
test
fstpt
inc
xor
push
test
and
dec
popf
push
stos
jl
and
stos
dec
pop
mov
cli
xchg
add
jns
movsl
xchg
push
mov
mov
fwait
pop
xor
das
outsb
xchg
inc
jno
roll
mov
scas
pop
stos
mov
lock
xlat
das
mov
mov
repnz
jl
ficomps
push
xchg
aam
jl
lods
or
cli
clc
rcrl
call
cltd
sbb
pop
dec
or
cmp
push
data16
bound
outsl
mov
incl
fcmovnb
stos
jg
sbb
mov
cmp
das
xchg
dec
sub
leave
lahf
or
mov
lods
mov
cmp
orb
sti
pop
inc
push
push
mov
scas
out
add
pushf
cld
xor
loope
add
fistps
aam
in
loope
and
cmp
cmc
outsw
jns
stos
push
outsl
push
pop
icebp
lds
scas
adc
pop
cwtl
pop
loop
jl
rcrb
xchg
adc
lea
xor
fidivrl
sub
mov
and
cs
lret
jae
pop
fsubs
dec
or
dec
adc
mov
filds
lods
sub
xchg
push
testl
sbb
jmp
ss
imul
push
scas
mov
or
jg
push
jg
mov
stc
aam
cmp
cmp
sub
mov
leave
std
and
add
xor
fwait
roll
arpl
popa
cmp
movsl
xor
sub
inc
sahf
xlat
inc
sbb
jecxz
fdivp
imul
sbb
jnp
jl
push
xchg
cmp
mov
mov
and
or
pop
cmc
mov
pop
or
lahf
lea
cld
dec
int3
test
dec
sbb
dec
add
add
xchg
cmp
data16
xlat
or
sub
dec
movsb
xchg
out
pop
mov
cmovno
xchg
sub
jle
dec
mov
mov
insb
pop
scas
jnp
mov
xchg
movsb
call
sbb
or
daa
mov
bound
or
mov
imul
test
bound
dec
fisubrs
call
pop
and
outsl
dec
outsl
inc
push
inc
bound
mov
jb
mov
xor
je
dec
lock
adc
aaa
lds
dec
and
and
add
add
xchg
test
loopne
mov
pcmpgtb
insb
test
int3
enter
push
jbe
xchg
pop
rolb
push
push
push
mov
xchg
pop
fcompl
jb
outsl
rorb
test
aad
push
inc
xor
jae
sub
xor
bound
cmp
out
gs
dec
fwait
out
dec
sub
cmp
clc
lcall
aad
xor
outsl
shl
and
dec
out
popa
rorl
dec
out
jo
jle
in
out
fcompl
cmp
inc
adc
notb
cs
or
inc
sbb
push
out
sbb
fsub
int
ss
arpl
dec
out
pop
enter
sahf
dec
loope
inc
movsl
aam
fwait
pop
xchg
lret
je
inc
int3
mov
add
sbb
insl
sub
xor
mov
lods
arpl
cmpb
jo
mov
xchg
movsb
xchg
add
jo
mov
xchg
aad
js
jne
adc
test
mov
cmp
cli
mov
sbb
jge
pop
mov
test
hlt
xchg
pop
pop
sahf
fwait
rolb
push
mov
hlt
push
ja
push
out
ss
stos
jnp
mov
scas
sbb
incl
pop
fbld
leave
xchg
test
xlat
add
jae
mov
mov
es
and
out
fildl
xchg
push
shll
and
outsb
scas
fnstenv
inc
in
xlat
cmp
push
dec
sub
jns
pop
mov
mov
ljmp
rorl
out
mov
mov
imul
lret
ret
inc
cmpsl
inc
iret
mov
jbe
push
mov
loope
jo
xor
out
in
inc
in
loop
in
ja
adc
inc
outsl
xor
adc
mov
ja
mov
aas
sub
dec
mov
js
add
pop
mov
es
pop
clc
test
dec
xchg
dec
movsl
mov
rcrl
test
sbbl
jp
push
jae
mov
pop
xchg
cmp
cmc
mov
outsl
xchg
cmpsl
jl
jge
mov
test
shl
aam
mov
in
inc
lcall
in
mov
mov
jb
xchg
xchg
pop
push
add
insb
in
notb
xchg
loop
in
jmp
rclb
mov
push
imul
dec
xchg
lock
pushf
and
sub
sbb
pop
jno
leave
sbbl
mov
cwtl
in
cmp
push
mov
and
dec
mov
leave
or
add
fbstp
test
xor
fwait
xchg
sbb
sbb
ret
push
clc
insl
int
sub
adc
icebp
testl
popf
gs
cmc
popa
enter
loopne
nop
mov
arpl
xchg
test
pop
push
cli
jge
sahf
lds
cmp
pop
mov
js
mov
xlat
sbb
dec
bnd
mov
xchg
addr16
icebp
sub
sbb
in
mov
sub
outsb
aam
lods
inc
jmp
and
and
pop
jo
adc
lret
mov
jbe
in
mov
int3
cmp
jno
cltd
jl
xor
push
push
xor
sbb
adc
inc
nop
jno
dec
data16
sub
mov
cld
jle
js
jmp
add
jbe
add
test
mov
pusha
cmc
fiaddl
dec
xchg
xor
add
dec
mov
test
add
adc
push
notl
in
jl
lods
dec
mov
shll
imul
cmp
pop
jp
jns
sbb
mov
incb
push
jge
movups
push
jnp
sbb
fmul
ret
aas
aad
mov
mov
pop
cmpsl
jnp
jb
jno
xchg
jg
cmpsb
adc
xlat
jae
xor
fs
insl
push
or
push
mov
sahf
ss
pop
call
inc
mov
push
mov
and
adc
or
jle
fdivl
add
divb
xor
dec
xchg
call
mov
shll
fdivr
xchg
fbstp
aaa
into
or
xchg
push
xor
pop
xchg
xor
mov
outsl
mov
cmp
jmp
jno
and
lds
sbb
and
and
jno
sbb
ljmp
inc
int3
pop
jno
cmpsb
sub
inc
xchg
pop
notb
pop
bound
and
jmp
ja
inc
sbb
push
inc
jae
or
push
jg
mov
adc
mov
sbb
sbb
inc
cmp
mov
testl
out
nop
pop
xchg
les
xchg
add
pop
out
jno
lods
in
push
test
dec
push
dec
ljmp
aad
outsb
sysret
mov
rorb
push
fcomp
popa
scas
sub
mov
cmp
mov
jae
pop
adc
adc
subb
les
cmp
ret
int
es
ss
hlt
stc
sub
cwtl
jmp
test
pop
mov
repz
lahf
xchg
hlt
pop
inc
xlat
xchg
and
pop
outsb
pop
loopne
jae
aam
mov
and
cld
cmp
mull
xor
je
jo
jbe
mov
addl
sbb
mov
cmp
sub
jecxz
not
mov
sbb
pop
sbb
push
dec
daa
mov
mov
gs
cmp
mov
fimull
ret
pop
sbb
stc
stos
mov
pop
inc
lret
mov
movsl
mov
sarb
and
fnstenv
sub
pop
push
dec
push
push
enter
adc
add
movsl
mov
rcrl
adc
lds
push
test
gs
hlt
pusha
sbb
xchg
inc
lcall
imull
cmp
mov
sbb
fstl
mov
das
outsb
fcomps
xchg
pop
cmc
std
cmp
lds
sarb
mov
sbb
or
push
aas
add
jae
ret
and
ficompl
cwtl
mov
inc
add
xchg
loopne
mov
inc
dec
mov
cmp
cmc
sub
mov
es
cmp
mov
out
push
xor
mov
movsb
or
out
daa
jl
aaa
ds
mov
dec
and
sbb
fld
js
inc
inc
pop
push
fsub
lea
daa
insb
xchg
aas
shll
pop
push
out
outsl
mov
je
pop
or
push
rcrb
popf
mov
dec
xor
sub
inc
jmp
rcrl
push
movsl
mov
jno
or
cmc
pop
mov
cmp
adc
add
or
in
clc
or
jp
sarb
rcrl
ret
adc
pop
mov
roll
aaa
dec
cmp
cwtl
fs
insl
jae
pushf
xchg
xlat
stc
jp
cli
jecxz
jae
jmp
dec
imul
rcll
add
add
sbb
jge
pushf
bound
sbb
mov
pop
in
ret
enter
mov
bound
xor
pop
stc
imul
mov
insb
and
push
les
xor
imul
push
jmp
dec
mov
or
and
push
test
cmc
in
and
mov
xor
jb
push
mov
xor
pop
mov
dec
jbe
cmpsb
stc
or
jne
shlb
fiaddl
xchg
into
jl
out
sbb
xchg
aas
mov
xor
ficompl
sub
rorb
jne
loop
into
xlat
ljmp
divl
je
out
lahf
pop
mov
loop
add
jp
inc
add
mov
aas
adc
ja
iret
mov
ss
pop
fnstenv
and
jne
jno
adc
addr16
cmp
negb
push
mov
mov
fsqrt
mov
xchg
in
dec
jmp
inc
fucomp
int
mov
ljmp
jns
stos
dec
int
fcomps
jge
mov
fwait
cwtl
out
mov
lea
test
rcrl
inc
pushf
adc
dec
xor
mov
xchg
sub
faddp
ret
xchg
cmp
push
xchg
xchg
push
xchg
stos
lds
movsb
pusha
xorb
push
xchg
mov
adc
or
pop
add
add
inc
mov
rclb
movsb
xchg
or
icebp
aas
imul
xor
aas
rorl
fcmovbe
sbb
lahf
imul
js
xchg
push
or
jmp
jns
push
jle
loopne
imul
add
xchg
mov
imul
orb
mov
mov
jns
xchg
mov
call
arpl
push
push
mov
shlb
mov
icebp
cmpsb
divb
xlat
and
mov
cmpsb
repnz
jle
cwtl
cmp
insb
or
xor
xchg
inc
call
nop
ss
ljmp
or
call
roll
or
je
jge
mov
mov
subl
aaa
jle
xor
mov
or
adc
fwait
sub
add
xchg
orb
or
cmp
jnp
popa
push
mov
and
mov
and
pop
adc
or
es
lea
sub
lods
into
cld
or
test
insl
ljmp
jle
xchg
xlat
xchg
push
jb
cmp
mov
sub
lock
mov
sub
push
les
mov
adc
mov
cli
stos
sarb
in
test
fcomp
pop
cmp
or
and
fiaddl
lods
in
dec
cmpsl
lahf
mov
das
loopne
movl
daa
lock
call
ret
sub
lods
mov
les
notl
ret
xchg
aaa
or
movsb
mov
inc
and
or
loope
xchg
jle
add
and
mov
xchg
xchg
dec
jle
sbb
adc
sarb
push
cli
xor
shrb
pop
mov
jecxz
outsb
out
shrb
adcb
mov
int3
jne
pop
iret
and
push
mov
pop
sti
dec
cmp
or
sub
xchg
fadds
pop
data16
pop
in
jne
sbb
mov
loopne
push
and
push
push
test
pusha
xor
cltd
lods
out
jge
fidivrl
stc
pop
xchg
push
add
cltd
add
hlt
mov
and
mov
xorl
lret
cmp
aam
fisubl
add
mov
pop
cwtl
or
xor
push
add
stos
push
add
push
adc
sbb
idivb
test
ss
jae
test
add
cwtl
insb
xchg
add
pusha
xor
cli
ret
and
ja
pop
xchg
add
stos
es
mov
cld
bound
sahf
pop
mov
rcrl
or
mov
cmp
xchg
fs
adc
sbb
sbb
sbb
es
mov
lds
mov
inc
aam
mov
outsb
mov
icebp
repnz
mov
je
mov
xchg
mov
lods
rorb
jnp
add
add
or
popf
jmp
pop
inc
dec
push
jo
lret
jmp
cltd
add
addr16
fs
mov
xor
xchg
cmp
mov
pop
pop
mov
dec
xor
jne
js
adc
add
out
lcall
loopne
sub
pushf
leave
sub
pop
mov
xor
mov
imul
adc
pop
add
cmp
fisttps
xor
cmc
loopne
and
sbb
or
test
aas
movsl
enter
jg
inc
or
shlb
insl
jo
mov
sub
addl
cmp
sub
add
outsl
les
jbe
mov
ss
dec
dec
ds
scas
sbb
leave
pop
xlat
dec
popf
outsb
jb
jmp
test
lret
std
mul
or
sub
leave
iret
call
out
sbb
mov
enter
fcmovnb
mov
sub
dec
lahf
mov
pop
dec
mov
sahf
sbb
test
pusha
test
push
ret
jmp
add
add
stc
adc
sub
ljmp
int3
jo
out
cmpsl
fld1
lods
push
sbb
cwtl
mov
push
sub
sbb
loopne
icebp
fists
sahf
xor
pop
imul
lock
andb
and
jne
push
sti
xlat
pushf
in
scas
inc
test
pop
lret
dec
pusha
imul
and
loopne
aam
sbb
ret
paddq
jl
cmc
dec
out
jb
xchg
popa
mov
loope
ja
shrb
mov
xchg
jae
inc
lret
aad
pop
rorb
mov
jo
mov
mov
xchg
mov
dec
movsb
and
mov
les
jno
in
jg
mov
dec
xchg
mov
xor
out
es
in
pop
shrl
insl
push
push
mov
mov
mov
cmp
lds
xor
leave
jmp
cmp
rolb
mov
cli
add
fisubl
sti
and
insb
aas
sub
jb
mov
jp
xor
add
cmpsb
pop
push
inc
divb
in
lea
pop
add
in
gs
add
jno
rcr
push
mov
push
or
rorb
mov
push
sbb
das
mov
inc
in
aam
mov
and
mov
xor
push
cmp
dec
in
in
lcall
add
dec
pop
xchg
or
xor
pop
push
jbe
jecxz
enter
fstpt
les
test
loopne
repnz
or
fsub
test
fsubs
loope
mov
jecxz
add
je
test
mov
xchg
ljmp
jae
ds
xor
and
sbb
das
mov
lds
test
stc
fs
ss
dec
add
mov
out
ficoms
and
mov
mov
mov
pop
and
repz
xor
xor
jns
xchg
or
insb
adc
cmp
push
cltd
push
add
daa
inc
adc
das
sub
mov
and
rorb
pop
rcrb
iret
add
rcrb
shl
stos
dec
xchg
lcall
mov
arpl
and
outsb
enter
inc
sub
mov
das
jb
outsl
xorb
sahf
in
pop
sbb
jbe
test
xor
stos
mov
xchg
mov
std
or
iret
imul
dec
and
icebp
and
mov
add
xchg
aaa
outsb
imul
insb
jo
bound
cmp
inc
pop
stc
inc
daa
cmc
sbb
mov
filds
dec
inc
push
sbb
and
lock
xchg
push
xor
and
int3
jmp
lahf
mov
arpl
jg
rclb
movsl
ret
xor
dec
adc
call
jns
push
xchg
mov
and
mov
decl
dec
arpl
xchg
lods
popf
dec
insb
mov
lea
mov
jmp
sbb
xchg
jno
fldcw
jle
inc
xor
mov
sbb
add
and
ja
repnz
push
xor
lods
mov
sub
add
jnp
or
lret
xchg
push
mov
mov
xor
lret
js
and
xchg
push
call
pop
push
les
loopne
andb
fs
xor
andl
jle
ret
int
inc
lret
test
sub
xor
out
movsl
xor
ret
js
xchg
push
shrl
and
shlb
sub
jmp
jmp
ret
movsl
ss
imul
cmp
add
sarb
test
cmpsl
movsb
out
call
std
push
or
push
xchg
dec
fistps
pop
jmp
xor
or
lock
test
inc
jmp
cmpsb
inc
inc
ds
push
in
xor
and
pushf
lea
xor
andl
push
addr16
test
or
scas
lea
cmp
out
mov
fistl
rorb
cmp
dec
jne
jne
ret
shll
sbb
stc
xor
push
sbb
lahf
aaa
inc
je
iret
mov
xchg
sbb
div
adc
fbld
iret
fwait
or
mov
cmc
lods
mov
fstl
mov
and
sub
lcall
loopne
jmp
cmp
jge
mov
cmovb
mov
sub
pop
adc
or
sub
into
add
sbb
cs
push
hlt
push
sbbb
dec
aas
into
sub
sbb
jge
adc
inc
xor
cmc
nop
roll
out
inc
sbb
icebp
adc
jmp
mov
or
sub
inc
pushf
lods
fdivs
das
mov
orl
jmp
pop
nop
jg
ret
dec
mov
sub
mov
mov
test
bound
mov
cwtl
test
aas
repnz
inc
sub
sub
push
and
xchg
push
sbb
cmpb
icebp
test
fistpl
push
idivb
or
push
add
testl
lahf
push
enter
test
in
jne
lods
scas
cmp
add
xchg
hlt
cmp
mov
sbb
std
xchg
mov
sbbl
mov
xlat
dec
adc
mov
es
sub
xor
and
pop
add
stos
sbb
inc
jbe
xor
lret
stos
cmpsl
add
js
cmp
aaa
stos
scas
loopne
outsl
push
xor
mov
lods
fsubrl
popf
test
mov
push
mov
scas
int3
in
insl
pop
fcoml
sub
movsl
test
cmpsl
push
hlt
mov
jge
jp
jecxz
popa
mov
dec
mov
emms
inc
arpl
arpl
cltd
mov
ja
mov
sti
and
aaa
lret
loopne
lods
iret
cmp
pop
das
ss
les
pop
pop
ret
jmp
loop
xchg
fwait
shrl
je
daa
cmpsb
bound
cltd
jns
sti
dec
cmc
inc
popf
ret
adc
xchg
lret
cmp
jbe
xor
jns
adc
mov
je
add
test
rorb
sub
xchg
jae
mov
add
sbbb
pushf
and
dec
dec
movsb
xchg
popf
repnz
inc
cmp
xchg
push
js
sbb
cmp
add
addr16
pop
jae
lds
mov
mov
div
mov
cwtl
dec
xor
scas
in
or
cs
mov
fnstenv
pop
loopne
cmpsl
ficomps
in
out
lahf
or
dec
sbb
add
and
je
cwtl
fstpl
xchg
pop
push
xchg
test
je
scas
dec
or
shll
lcall
push
adc
fcmovnbe
dec
mov
bnd
cs
mov
test
push
int3
or
push
mov
inc
and
push
push
daa
cmp
mov
inc
and
add
add
add
sti
or
clc
add
mov
cs
xor
push
xor
pop
lret
rolb
aad
scas
pop
add
lcall
cwtl
jnp
mov
pushf
mov
sti
insb
fstl
sub
pop
ljmp
int3
xor
mov
mov
xchg
das
add
cmp
xchg
pop
push
jp
xchg
mov
jecxz
add
popf
ret
add
aad
push
jo
loope
xchg
mov
xor
ret
inc
lds
or
mov
fcompl
movsl
clc
pusha
ret
test
xchg
cwtl
aad
sbb
sub
icebp
xor
mov
cmc
pop
pop
sbb
fwait
loope
xor
push
popf
pop
cmc
mov
mov
sub
stc
xor
push
mov
int3
push
xchg
xor
dec
cltd
or
aam
mov
packssdw
pop
push
mov
jnp
cmpl
pop
xorl
test
mov
cmp
dec
nop
mov
xor
rol
push
sbb
jno
sub
inc
pop
addr16
ljmp
xchg
je
pusha
rcrl
ljmp
mov
movsb
pop
cmp
lcall
rcll
sti
cld
or
mov
js
jne
and
bound
jg
xchg
rorb
xlat
rcrb
lds
setae
push
mov
add
neg
call
ret
int
mov
jne
shll
jge
loop
add
mov
lcall
jmp
jecxz
pop
cmp
andb
jg
dec
lahf
push
or
or
cltd
mov
ljmp
xchg
xchg
xor
dec
mov
jp
push
in
inc
push
pusha
sbb
and
sub
xchg
enter
sub
iret
test
jo
in
pop
fdivs
test
dec
ret
cmpl
xlat
and
push
in
mov
mull
mov
jnp
daa
cmpsl
inc
aad
pop
bound
xchg
push
jae
add
cs
out
inc
push
lret
xor
sar
cmp
cmp
cmp
ja
addb
or
jno
and
popa
cmp
xor
xchg
pop
cmpsl
lret
mov
cli
mov
test
pop
test
dec
xor
fcoml
pop
out
and
and
dec
repz
or
aad
sub
xchg
pop
add
sub
dec
popf
arpl
ja
mov
sub
xchg
repz
add
mov
adc
push
push
adc
mov
xchg
or
imul
dec
xchg
xchg
pop
outsl
fildll
cmpsb
adc
cli
je
test
lcall
imul
test
cld
lds
dec
xor
or
int3
sub
lcall
movsb
sbb
xor
mov
out
pop
mov
inc
push
pop
adc
jge
pop
data16
scas
repz
dec
ret
xor
mov
adc
mov
daa
cmpsl
jae
ret
adc
mov
orl
enter
fimuls
jge
insb
decl
xchg
cld
dec
daa
test
jp
cmpsl
imul
pop
xchg
bound
jg
inc
mov
daa
cmp
js
mov
xor
nop
mov
pop
pop
cmp
sbb
push
cmc
dec
mov
popf
mov
add
push
testb
dec
les
mov
cld
xchg
test
fiadds
ret
mulb
les
in
es
sbb
imul
cltd
rorb
dec
xchg
imul
scas
insb
icebp
out
rorl
xchg
popa
sbb
jl
call
pop
mov
jbe
rorb
push
test
loope
loop
dec
xchg
cmpsb
push
xor
je
cs
fs
mov
and
mov
xor
stos
xor
test
out
test
jnp
sub
sub
sbb
sbb
int3
jle
sarb
dec
call
cwtl
outsb
cmp
dec
dec
or
add
les
sub
adc
dec
inc
xchg
xlat
clc
out
inc
push
pop
or
repz
pop
jmp
test
add
out
test
std
in
dec
jns
inc
xchg
sub
scas
loop
faddp
mov
rolb
add
sub
jbe
call
aam
arpl
inc
sub
jae
mov
push
push
shl
imul
call
nop
pop
ljmp
pop
xor
imul
cld
pushf
inc
imul
clc
xor
xchg
cwtl
or
xor
pop
or
lcall
rclb
imul
arpl
mov
adc
outsl
lods
mov
mov
add
loopne
outsb
movsb
xchg
cs
sbb
push
jmp
xor
xor
lcall
cs
push
xor
sub
mov
xor
pop
mov
jmp
enter
add
daa
into
fwait
add
push
mov
inc
subb
and
sbb
hlt
sub
fidivl
push
push
imulb
jo
pushf
sbb
rcrb
inc
cmp
mov
scas
mov
stos
mov
push
lahf
mov
ret
lods
cwtl
or
loope
add
movsb
mov
xchg
sarb
std
pop
adc
adc
cmpsb
cli
adc
arpl
pop
es
xor
aaa
or
test
idivb
dec
and
sub
mov
mov
sbb
lds
push
push
jne
or
cli
adc
or
popl
mov
mov
out
jb
mov
popa
xchg
adc
or
mov
mov
xchg
jns
cwtl
stc
fwait
fwait
out
adc
dec
es
ficoml
add
shll
pop
cmp
add
out
lock
in
jl
repz
cmp
cld
rcl
fisubrs
xor
inc
push
sbb
std
xor
rcr
in
rcrl
sarl
stos
call
inc
xor
cld
fucom
and
and
pushf
push
fisubs
mov
adc
xor
mov
dec
stos
movsb
add
sbb
nop
insb
int3
sbb
es
lock
mov
sub
sub
dec
or
cmpsb
stos
lahf
addr16
add
xor
push
lret
jp
xchg
xor
pop
or
dec
std
add
adc
jno
xor
scas
jns
and
in
adc
stc
or
stc
hlt
jnp
and
sub
movsb
test
xchg
jae
xchg
inc
repnz
loope
fdivs
mov
jmp
jecxz
sbb
xchg
adc
mov
cmc
lock
inc
call
cli
add
cmp
mov
mov
out
and
mov
out
xor
lds
and
rorl
scas
sub
js
mov
lret
mov
nop
pushf
mov
ret
jp
shrb
pusha
pop
add
push
push
add
xor
hlt
sub
lods
push
adc
cmp
enter
sub
shl
dec
movsl
movsb
fwait
lcall
inc
rcrl
mov
jnp
pop
es
sbb
mov
bound
inc
out
cmp
rcrb
bound
sbb
or
pop
adc
jnp
inc
dec
jmp
subl
shlb
lcall
sbb
or
iret
or
sbb
into
cmp
cmpsb
mov
popf
add
ds
int3
add
xchg
out
pop
cmp
aas
decb
xchg
pop
xor
mov
movsl
xor
lret
and
cld
aad
and
int3
enter
dec
sbb
mov
aaa
fsubrp
int
insl
adc
addb
pusha
lds
fidivs
mov
adc
jge
sub
fidivs
loope
insl
push
std
out
xor
pop
lods
inc
push
pushf
pop
push
sbb
adc
push
imul
rcr
or
inc
xor
adc
jg
sbbb
and
scas
data16
inc
push
dec
mov
sub
ficomps
icebp
movsb
dec
adc
xchg
aaa
outsb
in
lock
adc
sbb
pop
out
ja
iret
jae
or
int3
lcall
std
pop
lods
xor
aaa
inc
xlat
or
mov
in
roll
mulb
nop
jo
insl
les
dec
jnp
movsl
rcll
or
dec
dec
sahf
mov
xchg
push
pop
adc
sbb
outsb
lock
lods
es
xchg
sub
dec
and
fiadds
test
or
int
push
pop
push
out
mov
add
sbbb
std
out
mov
mov
das
jmp
sub
aaa
movsb
repz
faddp
jne
lret
test
stos
scas
mov
psrld
sbb
jl
inc
mov
cmp
rcrb
out
lret
aaa
add
subl
jp
sub
lods
stc
xchg
sub
cld
imul
dec
stos
int3
cmpsl
xor
mov
push
test
mov
dec
or
jo
fistl
jbe
out
and
nop
mov
push
ficompl
push
sbb
xlat
andb
sbb
icebp
sub
or
xor
mov
push
cmpsb
jb
and
jne
inc
sub
jns
sbb
jg
cltd
inc
xchg
xchg
stc
xchg
cmp
fcomps
mov
fmuls
mov
int3
mov
push
lret
icebp
dec
rolb
adc
movsb
xchg
jmp
into
daa
push
inc
sbb
pop
out
aam
int
xchg
jnp
pop
aam
popf
sbb
pop
movb
push
sbb
sbb
ror
pop
int3
dec
push
dec
repz
imul
xorb
and
movsl
cmp
and
int3
out
cmp
cltd
in
iret
push
movsb
jle
lods
xchg
hlt
xchg
mov
push
adc
mov
in
adc
mov
ja
push
xor
imul
jns
add
inc
xor
es
mov
add
imul
fsubs
mov
mov
std
negb
ret
inc
jecxz
cmpb
xor
mov
and
pop
outsl
jl
dec
push
cwtl
inc
rolb
jg
bound
sahf
xchg
jge
sahf
dec
mov
test
xchg
sbb
mov
mov
scas
mov
nop
and
adc
jg
jg
mov
mov
data16
test
insb
and
jecxz
pusha
mov
insl
mov
push
mov
add
adc
jb
and
cmp
inc
dec
jae
cwtl
movsb
dec
cmp
sbb
cs
jo
push
and
mov
ja
sbb
hlt
dec
cmp
pusha
cmp
dec
scas
inc
pop
cwtl
jnp
mov
push
mov
fimuls
adc
push
xchg
arpl
fisubl
test
mov
in
fdiv
fldenv
rcrl
sbb
lcall
loopne
imul
mov
add
pop
roll
xor
out
mov
and
jnp
pop
push
loopne
and
pop
sbb
enter
inc
popa
stos
cmc
popa
jnp
xor
insl
xor
fldenv
fmuls
jle
insl
push
ds
cmp
lcall
out
fdivrs
sti
fmuls
sub
out
push
add
stos
inc
pusha
jno
mov
jle
int3
mov
cwtl
insb
mov
push
fwait
xchg
lods
mov
mov
fidivrs
inc
and
push
pop
dec
add
stos
or
in
mov
mov
fs
pop
push
add
clc
mov
dec
add
mov
push
fidivrl
ret
cld
lock
dec
mov
rcrl
aas
lea
add
cmp
xor
jno
and
or
stos
mov
movsl
mov
jge
inc
xchg
jl
loop
add
lcall
xor
push
out
ficoml
pop
cmpsb
jo
cmp
cmp
outsb
leave
jl
and
fmul
pop
dec
aaa
stos
xchg
clc
xor
jae
push
bound
xchg
nop
test
pop
inc
xchg
mov
push
pop
ror
gs
pop
dec
sbb
repz
jbe
fwait
sub
and
push
dec
repz
sub
fstpl
ja
mov
rcl
jp
adc
aaa
mov
imul
jmp
lock
xchg
inc
fiaddl
xchg
shl
jl
outsl
insb
ret
pop
cwtl
rcll
jnp
mov
add
or
sbb
shrb
out
addr16
hlt
int
and
or
out
mov
jns
jge
cwtl
rclb
cs
movsb
loope
lcall
or
es
sub
xchg
xchg
stos
push
hlt
mov
add
add
ljmp
das
cmp
push
das
je
addr16
push
das
cs
mov
mov
enter
mov
cmpsl
ret
add
aaa
sbb
dec
cwtl
lods
push
lods
mov
sub
shlb
adc
sbb
test
adcb
jbe
adc
repz
mov
push
scas
xchg
fstpt
jbe
roll
jo
cwtl
and
push
push
sub
mov
cmpsl
pop
fstpt
add
jecxz
inc
jne
mov
out
and
and
pop
pop
sub
das
xor
xchg
sti
sbb
in
mov
inc
in
pop
sbb
xlat
sub
cmp
pop
ljmp
and
cs
xchg
mov
mov
sub
gs
jg
mov
and
sbb
xchg
mov
andl
push
testb
lds
sti
icebp
cli
cmpsb
icebp
pop
mov
enter
and
inc
add
addr16
sbb
insl
pop
pop
adc
push
repz
arpl
stos
imul
xor
hlt
addr16
mov
pusha
decl
or
fisttps
filds
ds
out
add
lods
aas
push
dec
adc
lods
jecxz
push
lret
sbb
loopne
xchg
movsb
cs
iret
mov
xor
rcr
icebp
adc
popa
or
pop
ljmp
daa
sbb
fsubl
in
mov
mov
pop
xor
and
cld
in
mov
hlt
dec
cs
arpl
push
popf
inc
lahf
test
xor
negl
ret
mov
xchg
mov
pop
jb
sub
repz
cld
sub
mov
ljmp
dec
jbe
lea
inc
inc
pop
or
ja
pusha
ja
add
outsb
pop
lds
push
xor
inc
enter
xchg
sahf
xchg
fsubrl
xor
lds
out
cmpsl
fildll
lock
ss
adc
test
mov
push
jnp
inc
mov
les
inc
fidivs
outsb
sbb
cmp
out
mov
addb
mov
test
lahf
je
es
adc
lods
loop
and
scas
pushf
sub
mov
cld
imul
loope
sbb
adc
push
shr
repz
or
mov
mov
dec
fs
movsl
popf
pop
push
outsl
push
data16
pop
adc
push
enter
sub
pop
add
pop
ljmp
sbb
arpl
mov
or
xchg
addr16
repz
mov
loope
out
pop
inc
mov
pop
cmpsb
push
add
inc
cmp
lock
add
arpl
pop
int
jle
jl
pop
add
and
mov
push
sub
dec
sub
mov
les
shrl
idiv
jl
jecxz
in
idiv
xor
and
mov
rorb
loop
cmp
and
cmp
clc
push
not
or
mov
pushf
gs
dec
cmp
lock
mov
mov
and
bound
std
mov
lahf
and
xor
outsb
adc
and
lret
dec
ror
leave
push
fdivrl
rorb
popf
icebp
cmp
shll
mov
sbb
adc
iret
sub
add
imul
xchg
or
cwtl
mov
xchg
fisubs
repz
push
imulb
sub
push
stos
je
push
pop
jecxz
adc
aas
jne
mov
out
xchg
jle
rcr
lret
sahf
mov
mov
dec
jns
xchg
idivb
lret
mov
mov
cwtl
add
jecxz
fnstsw
test
or
cmp
fmuls
xchg
and
mov
mov
push
cwtl
push
inc
das
sarb
imul
jns
sub
into
and
sar
repz
push
push
inc
in
cmp
fsts
mov
clc
xchg
xor
mov
adc
or
push
add
jle
push
mov
or
mov
add
jecxz
inc
mov
dec
jl
cmpb
jns
dec
rorl
cmp
push
mov
out
pop
inc
ja
push
jno
les
pop
push
push
sbb
out
jge
int3
adc
fdivl
sbb
std
popf
mov
ljmp
mov
jns
stos
or
pop
add
push
test
insl
int3
sbb
arpl
push
push
mull
sub
pop
arpl
movsb
adc
inc
mov
pop
stos
rcrb
pushf
fcoml
mov
aas
jmp
sub
enter
sub
lods
sti
xchg
inc
sub
stc
push
les
jle
xor
jmp
or
dec
mov
imul
xchg
les
std
pop
imull
test
addb
fisttpl
movsl
add
add
push
and
xchg
mov
aas
inc
pop
or
insl
adc
cwtl
adc
imul
xchg
sti
cmp
xchg
addl
roll
jne
clc
das
mov
sub
xlat
and
ja
push
jmp
mov
out
push
jae
mov
arpl
imul
jle
movsl
add
or
je
repnz
aaa
dec
and
andb
jne
xchg
sub
mov
imul
repnz
popf
sbb
or
add
in
out
shl
cmp
mov
dec
fwait
ja
mov
lock
push
xor
cmp
jo
clc
scas
or
filds
mov
ret
in
inc
jg
lea
dec
cs
or
rolb
popa
aaa
pushf
call
mov
shll
sub
pop
fucomp
fildll
scas
push
xchg
aas
add
in
pop
stos
movsb
cmc
mov
xor
enter
cmp
inc
push
sub
jp
sub
inc
and
repnz
int
in
daa
mov
shl
add
aam
dec
idivl
in
dec
mov
cs
sahf
mov
or
popa
cmpsl
out
sbb
dec
idiv
addr16
in
adc
lret
orb
xor
mov
aam
xchg
addb
mov
adc
or
xor
inc
vmwrite
cld
mov
mov
xor
mov
jbe
jb
imul
ficompl
push
lods
jae
mov
dec
test
roll
leave
pop
jb
sbb
sbb
scas
pop
xor
sarl
push
aas
push
cmp
and
fistpll
out
cmp
or
les
stos
sub
sub
push
test
clc
sbb
test
bound
jae
mov
insb
mov
jp
xchg
scas
imul
cmp
daa
mov
call
mov
movsl
mov
aam
dec
xor
scas
cmpsb
add
sub
xlat
movsb
xor
mov
mov
xchg
push
and
loop
test
or
xchg
sbb
nop
mov
dec
in
mov
dec
fcomi
popf
imul
mov
je
lods
mov
sarb
in
sub
xorl
das
fbld
test
adc
lret
mov
faddl
aad
idivl
mov
or
in
fistpll
jmp
push
jnp
jae
jbe
push
insl
loope
push
jecxz
rep
jnp
add
mov
jnp
std
jns
sbb
push
and
scas
dec
es
cmp
jae
add
push
mov
les
scas
push
mov
inc
cmovle
flds
push
movsl
lods
in
xchg
movsl
mov
jg
cmp
jp
rorb
ds
sbb
jg
fsubs
out
stos
popa
push
test
rol
and
xchg
inc
les
cmp
cmpsb
jne
xchg
xchg
les
cmc
cmp
inc
loope
mov
adc
sub
cmc
repnz
or
mov
mov
pop
sub
xor
sahf
popl
pop
mov
dec
xchg
icebp
push
cmp
popf
std
mov
inc
xchg
outsl
adc
arpl
lcall
or
cwtl
lock
addr16
jnp
inc
pop
xchg
or
xor
cmp
gs
xor
cmpsl
fldt
sub
push
and
call
push
pop
cmpsl
lret
dec
mov
repz
pushf
sub
les
sub
pop
xchg
movsl
out
movsb
xlat
push
call
incl
test
mov
pop
movsb
dec
aaa
pusha
jg
adc
insb
xchg
icebp
jge
aaa
add
sbb
int3
mov
and
mov
jle
lock
xor
popf
aas
push
adc
mov
sub
xchg
in
push
sarb
mov
xlat
lcall
sub
out
enter
ficompl
dec
mov
stos
fsubl
pop
in
fidivl
cli
dec
add
mov
pop
cmc
mov
and
stc
dec
jae
xchg
je
sbb
je
add
addr16
das
push
xchg
mov
arpl
xchg
daa
es
je
xchg
cld
aam
pop
icebp
jnp
sub
cmp
cmpsl
sub
add
adc
movsl
data16
mov
inc
cmp
fidivrs
inc
shlb
shrb
mov
xor
aaa
dec
and
push
pop
out
add
loop
mov
pusha
addr16
jno
aaa
xor
sbb
fs
mov
fldl
sbb
xchg
test
sub
and
jmp
stos
adc
popa
or
aam
jne
je
in
hlt
shrl
dec
add
pusha
cld
sub
rcr
dec
iret
popf
test
mov
lret
or
pop
cli
lret
je
add
adc
lea
push
inc
add
mov
test
add
popa
pop
sub
push
popf
push
stc
or
jbe
scas
ret
ljmp
and
in
cltd
push
push
dec
loopne
test
cmp
mov
push
cli
mov
adc
cmp
in
sub
in
addr16
popl
ret
or
cmpsb
call
jno
negl
test
bound
fstpl
daa
iret
dec
fstl
ret
insb
test
adc
ficoml
mov
ja
arpl
dec
mov
inc
dec
stos
ss
imul
hlt
lods
ja
and
fsubl
push
arpl
jbe
stos
out
cmc
push
frstor
cmc
push
or
cltd
cwtl
pop
out
xchg
cld
leave
push
sub
push
cli
jge
inc
ja
xlat
sub
scas
or
jno
pop
dec
jmp
call
mov
popf
sbb
jnp
sub
rorb
add
nop
js
jl
inc
popf
xchg
cmp
ret
push
inc
pop
jno
add
cld
repnz
movsw
cld
and
jnp
popf
xchg
mov
add
pushf
push
sahf
ret
mov
repnz
jb
or
in
ficoms
dec
lock
cmp
jecxz
enter
or
cmc
arpl
push
sarb
int
mov
in
sub
mov
xchg
movsb
mov
js
int
sbb
insb
mov
out
dec
jecxz
and
push
insb
pop
rcl
xchg
push
xchg
push
bound
shl
shl
dec
or
pusha
add
movsb
xor
inc
or
mov
sub
testb
inc
lea
outsb
cmpsb
test
push
mov
pop
mov
push
dec
jg
or
mov
inc
push
mov
cld
jb
pop
sbb
data16
aas
adc
out
sub
xchg
scas
xor
cs
pop
or
ss
xchg
sub
rcrl
loop
inc
jb
mov
daa
mov
lods
pop
xchg
mov
sbb
stos
push
nop
mov
and
loopne
jg
jmp
push
inc
jnp
pop
sbb
aas
inc
clc
fildll
outsl
aam
push
stos
mov
mov
push
cwtl
and
gs
dec
sbb
sub
push
mov
outsl
dec
ja
push
or
mov
jns
xchg
mov
daa
std
loop
inc
mov
mov
leave
scas
mov
pop
in
enter
pop
js
jle
and
iret
fsubrs
push
dec
and
aas
add
mov
cli
adc
scas
gs
mov
test
pop
dec
nop
xchg
nop
mov
test
xor
lock
push
or
jmp
loope
mov
or
icebp
call
pop
xchg
pop
pop
and
sub
push
stc
js
repnz
rolb
dec
orb
jp
es
mov
inc
xchg
mov
sub
pushf
fcmovne
or
cld
push
jns
and
ja
fildl
and
cmp
and
test
imul
cltd
add
jle
lods
adc
jecxz
js
pop
nop
jbe
push
ss
mov
mov
imull
test
loope
sahf
dec
sbb
inc
xchg
sub
out
loop
loopne
inc
js
mov
nop
add
dec
cmp
mov
xorb
cmp
into
push
ret
add
lahf
lret
int
movsl
adc
fcomi
cmp
inc
scas
scas
pushf
mov
mov
insb
fmul
mov
fmuls
xchg
push
sub
test
or
mov
imul
js
inc
xor
jb
sbb
mov
xor
dec
in
addr16
sub
xchg
push
sub
sub
adc
ja
hlt
mov
cmp
sarb
lret
mov
sar
outsb
add
loopne
mov
sbb
pusha
popa
pop
repz
and
xchg
scas
adc
mov
mov
push
arpl
clc
cmp
pop
mov
pop
es
jne
mov
jo
add
std
cmc
insb
jne
and
nop
loop
mov
xchg
out
lcall
daa
and
mov
addb
nop
js
xor
fnstsw
lahf
loop
clc
les
cmpsl
test
jmp
js
cmp
pop
pop
addl
jb
sbb
flds
dec
stc
sbb
fcompl
add
mov
idivl
je
sbb
sbb
mov
pop
push
or
lret
fldcw
mov
mov
dec
cmp
and
dec
rorl
mov
xchg
add
inc
inc
es
add
nop
xchg
push
adc
cmp
pushf
jmp
scas
add
fisubrs
xchg
stc
xor
mov
pop
mov
adc
inc
fsubr
add
sbb
jb
out
xchg
pop
xchg
xchg
or
and
adc
mov
dec
inc
mov
in
xchg
mov
ret
mov
jmp
mov
sti
aas
shlb
roll
and
jo
popa
pushf
push
sub
out
idivl
inc
in
and
lahf
mov
xor
clc
jecxz
mov
lods
stos
xlat
arpl
std
pop
or
inc
and
jge
daa
loope
or
xchg
adc
int3
call
add
inc
mov
bound
sub
cwtl
popa
out
negl
mov
pop
mov
cmc
push
dec
fisttpll
sarl
mov
rep
inc
nop
lahf
jl
pop
dec
jbe
adc
in
rcrb
mov
test
sbb
out
and
enter
add
pavgb
outsl
lods
cmp
mov
cmp
scas
cwtl
and
or
xchg
rcll
mov
xchg
test
add
icebp
lods
pushf
jno
cmc
inc
ljmp
pop
cmp
andl
inc
push
js
and
subb
imul
cmp
add
adc
leave
and
rorl
pop
sub
mov
push
jg
mov
or
shrb
arpl
addb
outsl
mov
inc
ret
btc
push
add
push
cwtl
insb
pop
and
nop
jo
test
push
into
mov
sub
jge
enter
mov
or
aaa
stc
sbb
outsb
cltd
cmp
mov
dec
in
xor
fadds
test
loope
jns
jmp
pop
in
cmp
mov
scas
add
pushw
ror
push
sbb
outsb
inc
jl
sub
or
bound
aad
int
hlt
or
add
mov
xchg
ja
fwait
daa
pusha
fs
cmp
mov
cmp
repz
subb
lret
or
jae
cwtl
js
sbb
clc
add
cld
pop
subps
inc
movsl
mov
outsl
mov
jae
das
adc
mov
mov
shll
xchg
mov
pop
test
dec
push
lret
xor
xor
push
cld
adc
or
push
pushf
add
dec
or
add
mov
mov
test
stos
dec
into
adc
xor
push
jbe
aam
jmp
popa
mov
divps
cld
cmp
sbb
pop
mov
sub
push
pop
pop
mov
sbb
push
mov
and
imul
jge
hlt
sbb
mov
outsl
add
int
xchg
inc
int3
fadds
xchg
sub
jno
jge
test
aam
in
mov
jno
xchg
shlb
jmp
adc
xor
arpl
nop
lds
adc
jne
jns
test
xchg
push
xchg
in
sub
add
movsb
dec
adc
push
push
ficomps
inc
mov
in
test
test
cli
mov
inc
pop
xchg
lds
rcll
test
out
ljmp
lcall
pusha
xchg
push
mov
xor
fucomp
into
lds
jno
jo
jnp
shlb
lock
xor
popf
movsb
shrb
adc
jg
push
nop
add
add
mov
mov
sti
lea
xchg
and
aas
jp
sub
mov
outsb
or
jo
push
rol
sub
push
mov
popf
ds
fildl
push
out
inc
mov
into
stos
ds
int
xchg
inc
adc
jb
cmp
clc
dec
jne
cmpb
pop
push
imul
mov
dec
inc
jmp
mov
subb
and
sbb
adc
sub
sub
cmpsb
test
push
test
outsb
mov
add
les
dec
movsb
fstpl
cmp
mov
sub
add
dec
loopne
sbb
int3
lock
mov
cmp
cmp
out
xor
lret
call
stc
push
xchg
sub
sbb
movsb
cli
jnp
add
cmp
or
xor
mov
js
iret
negb
pushf
sub
fwait
leave
icebp
mov
testl
cmpsl
inc
inc
xchg
or
dec
mov
insb
popa
ja
dec
xchg
mov
mov
add
xchg
mov
mov
aas
mov
movsl
adc
sarb
faddl
adc
fstpl
movsb
inc
bound
or
sbb
loopne
movsl
xor
pushl
pushf
in
das
shll
pop
and
aad
pop
xor
icebp
push
push
mov
aam
and
sub
cmp
mov
mov
adc
mov
lods
cwtl
inc
jg
adc
jge
lret
add
js
inc
mov
inc
push
push
das
repz
mov
push
mov
add
and
push
xchg
dec
ss
push
add
outsb
xchg
lods
jbe
ja
xchg
jg
mov
pop
stc
push
nop
lods
xchg
adc
mov
je
cmp
jae
pop
in
data16
addr16
sarb
push
mov
xor
test
stos
outsb
popf
addr16
mov
jns
sub
jnp
cmpl
ds
xorb
add
cmp
jp
xor
lea
push
lcall
sub
call
cmp
outsb
dec
xchg
cmp
pop
push
mov
cmc
out
mov
push
mov
std
sub
and
fidivrl
dec
ljmp
das
cltd
cmc
mov
lcall
ljmp
add
std
insb
test
movsl
into
fimuls
cmp
cli
sub
mov
je
xchg
or
adc
or
cmp
andb
std
adc
sti
sub
sub
dec
pop
jecxz
idivb
jbe
inc
jns
mov
sub
adc
in
push
inc
add
xchg
jp
cmc
fdivr
nop
xor
or
in
cld
cmpsl
xor
mov
clc
aad
leave
dec
jge
fsubl
cld
cld
mov
int3
cmpsl
push
jns
in
aas
jnp
and
fidivs
xlat
mov
pop
cmp
std
test
mov
ret
mov
mov
dec
stos
mov
sbb
xor
in
nop
sub
mov
mov
xchg
call
fidivrl
ja
or
in
mov
jl
cmp
sub
jo
inc
and
and
scas
jecxz
outsb
add
test
add
call
testl
or
inc
adc
sbb
and
scas
xchg
or
pop
and
idivb
shlb
andl
cs
xchg
fs
xchg
jne
es
clc
lock
mov
movsb
std
aas
xor
cmp
push
jb
mov
dec
pusha
push
nop
push
sub
fwait
mov
sub
pop
test
mov
adc
pop
pusha
inc
sub
add
outsl
push
push
mov
pop
dec
dec
sbb
mov
cmp
inc
adc
pop
int3
pop
or
cmpl
cmp
cltd
jmp
push
push
pop
sub
jmp
adc
in
aas
inc
dec
cmp
cmpsl
or
cmp
adc
push
add
add
cmc
js
inc
rclb
add
cld
cmp
sub
adc
movsb
dec
add
push
loop
clc
shr
jle
xorl
mov
push
xchg
adc
add
out
jg
aas
cmp
xchg
sub
adc
cmpsl
idiv
call
filds
sti
pop
push
push
adc
cmpsl
or
lods
jmp
je
mov
xchg
out
test
push
fs
mov
out
inc
xchg
mov
sbb
pop
shr
icebp
bound
and
insb
int
adc
roll
in
rcll
add
stc
add
xorl
mov
or
push
xchg
dec
test
inc
xchg
and
push
test
les
mov
and
arpl
ds
push
dec
cmpsb
inc
leave
push
ret
push
fcomi
dec
cmp
dec
aad
stos
jle
adc
loop
ss
mov
fdivl
push
mov
push
mov
sarl
lea
or
and
dec
cltd
aad
or
clc
mov
jb
insb
pop
cmp
lret
dec
adc
or
mov
mov
dec
xor
push
loopne
jmp
aad
sub
fiadds
in
cmp
sub
push
pusha
xorb
sbb
divb
pop
xchg
and
out
mov
xor
xchg
jecxz
adc
jle
mov
pop
xchg
ja
sbb
adc
movsl
cmp
push
testl
cmp
popa
dec
mov
iret
les
xor
movsb
gs
jo
ret
xor
addr16
and
mov
cmp
in
cmpsb
pop
xor
add
mov
inc
shll
sbbb
mov
out
xor
fwait
enter
dec
mov
mov
jno
shll
xchg
push
adc
push
mov
adc
push
lods
mov
add
xor
pop
imul
mov
inc
push
xchg
cmp
dec
lret
sub
jle
push
fidivs
xchg
xlat
mov
mov
sahf
xchg
xor
and
pop
jmp
pop
push
add
mov
add
dec
dec
or
mov
add
push
fistps
mov
repz
pop
in
arpl
xor
pop
or
dec
xchg
out
push
rcll
loope
adc
cmp
dec
loopne
dec
addr16
pushf
xchg
es
adc
and
mov
mov
or
pop
sub
cmp
jl
sbb
add
xor
dec
call
jle
adc
sub
push
sub
pop
sub
stc
push
push
test
loopne
jge
adc
adc
mov
sti
jnp
jmp
insl
rolb
sub
gs
stc
lods
in
xlat
mov
and
cmp
out
frstor
jp
fists
jns
pop
rorl
xchg
or
mulb
cli
movsl
aad
sbb
movsb
pop
jmp
pusha
jmp
fidivs
inc
outsl
cmp
inc
add
and
add
sbb
add
in
aas
test
xlat
or
int
sahf
dec
sbb
daa
bound
sub
xor
jmp
push
mov
sbb
cld
push
pop
or
dec
fs
inc
jl
mov
mov
or
push
aam
jae
repnz
jp
pusha
add
hlt
inc
fs
push
mov
mov
add
mov
xchg
add
arpl
das
mov
push
call
lcall
xor
pushf
or
scas
add
cmc
xor
cmpsb
sub
mov
fistps
sbb
xchg
fmuls
pop
gs
ret
cmpsb
lds
out
pop
jnp
daa
and
in
adc
sub
clc
xchg
adc
sub
fmuls
mov
push
js
add
jo
popa
lods
pop
cmp
fdivrl
mov
fidivl
loop
sbb
shlb
ret
add
fs
and
in
adc
dec
push
fldt
xor
cld
enter
gs
aaa
sbb
push
loop
dec
clc
mov
mov
sahf
dec
pop
xor
push
enter
adc
les
xor
jecxz
andl
push
sub
dec
sti
movsb
pop
xor
fstpt
add
xchg
out
sbb
outsb
add
popa
in
ret
jmp
inc
mov
mov
mov
inc
mov
cltd
das
lea
xlat
outsl
cmp
push
lods
xchg
sbb
mov
pop
lods
pop
gs
push
inc
and
in
lea
xchg
push
jne
adc
sbb
cmc
jne
movsb
adc
mov
aam
fimuls
shlb
inc
outsb
jg
sbb
psrlw
cmp
outsl
fdivrs
mov
dec
pop
outsb
addr16
dec
pop
adc
cmp
and
pop
cmpb
fwait
mov
inc
testl
lahf
das
bound
pop
shll
cmp
hlt
push
out
pushf
sbb
adc
ljmp
enter
adc
mov
aaa
inc
jg
adc
dec
bound
jg
jae
inc
daa
cs
inc
mov
add
adc
inc
lea
lea
mov
push
xchg
mov
push
mov
xor
add
das
push
jecxz
loop
loop
mov
outsb
xchg
daa
aas
xchg
dec
inc
in
mov
or
pop
stos
sub
or
xor
stos
repnz
xchg
fwait
xchg
in
xchg
jbe
es
aad
lds
cmpb
and
xchg
cmp
mov
mov
or
xor
outsl
push
je
std
mov
scas
cmp
mov
lahf
sub
test
sbb
push
dec
enter
xor
lds
aaa
mov
clc
mov
mov
out
mull
jnp
dec
xchg
clc
lods
scas
stc
adc
rol
or
pop
in
fwait
hlt
and
push
sarl
js
sbb
jl
inc
cmp
test
pop
add
dec
outsb
mov
pop
push
sub
repnz
fistps
lods
cmp
or
movsb
lods
push
imul
mov
add
mov
push
int
sub
ljmpw
cmp
lods
push
insl
mov
ret
je
add
cmp
ja
daa
jg
ds
mov
out
out
es
ret
test
mov
cmp
sahf
out
mov
cld
in
cmpsl
out
inc
testb
and
shr
popf
and
into
cs
xor
cltd
and
outsl
inc
stos
in
lods
push
push
ret
andb
sbb
cmpl
push
shrl
dec
movsb
push
insb
dec
addps
dec
mov
jl
cmc
or
imul
push
add
cmpsl
cmp
cld
call
aas
rcl
xor
push
cmc
pop
shrb
sti
jns
dec
push
test
push
insb
fstpl
inc
add
pop
aas
xor
xchg
push
inc
leave
aam
aam
jo
sbbb
jecxz
out
mov
sub
lods
shrl
jae
adc
add
es
imul
inc
adc
mov
mov
stc
mov
pop
insb
and
lock
test
push
mov
insl
fistpll
sub
add
pushf
mov
sub
inc
addr16
fiadds
shrl
xor
mov
enter
jno
jge
es
mov
xor
rorl
leave
sbb
jge
jg
loop
add
jecxz
mov
adc
inc
mov
push
ds
repnz
xchg
push
imul
fwait
xor
jo
aas
cmp
mov
mov
and
sub
pop
jl
xor
and
mov
popa
cmpl
add
lret
xlat
sarb
lret
xor
push
das
cmp
arpl
inc
push
push
imul
dec
push
faddp
loope
cmp
out
sub
adc
fsts
xchg
jecxz
enter
xor
xchg
xor
pop
rorb
push
je
and
jns
pop
or
gs
into
jbe
cmp
lahf
mov
jb
mov
dec
movb
or
popf
int
test
fiaddl
sub
xlat
call
push
sub
mov
adc
fmull
sub
inc
adc
mov
sbb
mov
mov
inc
add
push
jmp
and
loopne
push
and
mov
add
int
xchg
rcrb
mov
aam
ficompl
aaa
test
dec
and
xorl
pop
push
mov
push
xor
loope
push
ds
popa
stc
rorb
ja
mov
xlat
xor
inc
xor
and
out
arpl
cmp
loop
jmp
js
cltd
and
cltd
ds
and
in
and
in
mov
push
movsl
pop
cmp
popf
xchg
pushf
insb
icebp
mov
jecxz
xchg
jnp
xchg
pop
cli
xor
sub
into
loope
cmp
pop
mov
pop
in
xchg
xchg
dec
add
subb
or
mov
pop
insb
xlat
lcall
push
js
cmpsl
arpl
bound
sbb
mov
repz
inc
leave
mov
subb
adc
sbb
inc
das
inc
jle
mov
ss
repz
stos
popf
repz
jmp
scas
jmp
and
roll
xchg
dec
pop
ds
xor
mov
int
jp
sbb
mov
xchg
mov
js
or
push
filds
push
inc
xor
ret
pop
jg
push
loope
in
mov
insl
cmpsl
mov
jmp
lods
xchg
pop
stos
divl
pop
mov
dec
je
pop
testb
rclb
pusha
imul
sub
pop
test
aas
and
inc
dec
pop
dec
sbb
arpl
stos
mov
cmp
push
test
imul
dec
jp
and
lods
icebp
mov
in
jmp
jnp
mov
mov
lock
enter
mov
pushf
xor
mov
jns
sahf
jns
inc
xor
push
scas
roll
aam
rorl
mov
sub
ret
or
lcall
jl
cmp
cmc
push
mov
pop
lock
popf
mov
enter
test
push
add
sbb
loop
movsl
movsl
cli
jns
movsb
add
mov
out
push
aaa
je
jb
cmp
mov
pop
bound
dec
push
cli
jne
idivb
lock
leave
dec
out
clc
sub
fcomps
lret
xor
imul
inc
mov
outsb
popa
or
repnz
mov
pop
aad
pop
dec
dec
pushf
int
enter
lret
leave
mov
xor
pcmpgtw
in
fisttpl
hlt
int
daa
lea
aad
aas
popf
jp
fcompl
inc
inc
stos
roll
adc
lea
mov
lcall
sahf
aaa
inc
fs
sub
enter
pushf
mov
repnz
je
sarb
sub
ffree
insb
shl
cmp
shll
cmp
pop
in
jnp
adc
movsl
divl
mov
pop
mov
fisttps
mov
mov
push
xchg
outsl
mov
sub
pop
jo
int
lods
cmp
cmp
mov
cmp
sti
shlb
cmp
mov
jle
mov
push
or
and
int
push
adc
out
jg
sbb
fsubrl
daa
mov
adc
aad
add
js
and
clc
inc
lock
outsl
inc
jne
icebp
ja
dec
shr
outsb
iret
inc
movsl
jb
dec
sbb
pop
or
mov
mov
xchg
and
dec
inc
or
popa
xchg
sbb
mov
cmpl
pop
verr
mov
mov
xchg
xor
lea
cmp
push
clc
mov
add
xorl
adc
and
adc
sahf
jmp
movsl
jo
push
xorb
inc
sub
add
push
xchg
pop
ss
cmp
or
xchg
inc
sbb
scas
cmp
imul
pop
gs
dec
mov
mov
or
mov
inc
ss
mov
sbbl
add
stos
cmp
cmp
repz
aad
inc
lahf
dec
aam
xor
ja
pop
pop
and
cmp
sbb
nop
lock
filds
xor
repz
gs
mov
mov
fadd
aaa
xchg
fcomps
jbe
mov
in
pushf
leave
xchg
xor
cli
inc
lret
pop
pop
push
nop
lds
inc
pop
in
imul
fistl
int3
sub
sub
sbb
jo
inc
ljmp
adc
dec
iret
sbb
jb
mov
es
ret
jb
jp
jp
cmp
lods
repnz
sbb
cmp
pop
push
lock
mov
aad
or
cmp
cmp
xorl
out
or
int
pop
mov
mov
fwait
and
fcompl
ja
cld
pop
xchg
push
and
out
sar
cli
add
and
xor
test
dec
push
push
inc
out
out
test
int
cmc
adc
mov
ja
sar
or
jo
stos
rcrl
inc
repz
push
sub
xchg
jl
loope
enter
cmp
into
repz
cmpsl
push
repnz
inc
or
add
adc
push
push
push
push
add
or
sti
adc
adc
cmpsb
inc
and
idivb
mov
dec
adc
movsl
sub
xor
xchg
test
test
roll
push
cmpsl
sbb
mov
insl
jecxz
shlb
dec
test
jne
jge
adc
push
enter
dec
insb
push
pop
mov
add
inc
add
jae
call
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
lea
ret
pop
and
add
dec
add
add
pushf
int
and
movsl
add
add
pushf
mov
test
mov
add
add
addb
lret
cmpsb
add
add
movb
clc
and
add
add
lret
adc
add
add
mov
pop
add
add
inc
cmp
std
adc
add
add
xchg
lock
out
xchg
sub
add
add
add
rolb
add
mov
add
add
fstpl
inc
pop
fildl
add
add
add
cmpsb
add
add
and
fcmovnb
ret
add
add
bound
add
add
stos
in
mov
add
add
add
mov
test
xchg
add
add
cmp
das
pop
aad
add
add
es
mov
fldl
add
add
xchg
cmp
add
lods
pop
icebp
lret
add
add
mov
add
jle
add
add
out
mov
add
push
xchg
ret
cmp
add
sbb
jno
add
add
add
add
test
and
add
add
jmp
add
add
push
jno
ucomiss
add
add
jmp
addl
add
out
lods
jl
add
insl
add
add
add
sbb
add
add
roll
add
test
jb
add
movsb
lods
add
add
sbb
add
add
lods
ja
mov
add
xor
lcall
add
add
daa
inc
mov
add
in
add
add
or
mov
add
and
add
insl
arpl
cmpsl
add
add
mov
cmp
add
add
add
add
add
pop
in
mov
push
add
add
std
jge
xchg
xor
add
add
mov
lahf
dec
add
inc
mov
add
add
clc
dec
pop
test
adc
xchg
je
jae
add
add
mov
add
sldt
add
mov
stos
add
add
fwait
dec
jne
mov
add
add
xchg
leave
rorb
add
add
scas
sub
xchg
insl
add
add
aaa
addr16
mov
jle
mov
add
sub
add
add
fcomp
iret
ret
add
out
jmp
add
add
add
filds
add
add
addl
add
int3
out
jnp
aad
add
add
ret
flds
add
add
ljmp
or
inc
add
add
sbb
mov
add
push
adc
add
add
push
add
add
cltd
outsb
iret
cmp
add
add
inc
enter
add
int
add
add
push
add
add
xchg
mov
add
rorb
add
pop
movb
add
repnz
cmpb
add
lock
add
or
or
add
add
add
int3
lret
ret
add
add
repnz
sbb
add
add
std
lods
add
add
jbe
int
xor
orb
add
add
outsl
add
add
jo
in
adc
add
add
pop
cmp
push
jg
add
add
pop
xor
add
or
add
add
pop
nop
add
add
add
movsb
dec
dec
add
insl
add
add
push
push
or
add
add
push
fcoml
ss
add
add
cs
in
mov
add
add
faddp
add
add
jecxz,pt
or
add
and
lahf
pop
sub
add
add
rclb
add
pop
mov
js
paddusb
add
add
sub
cmc
add
add
shlb
daa
add
cmpsl
flds
add
add
aam
add
add
xor
cli
sbb
add
lcall
ret
add
fsubrl
add
add
adc
add
add
cltd
enter
add
imul
filds
or
add
sahf
iret
push
adc
add
add
add
subb
add
add
push
add
add
fadd
push
and
add
out
add
add
imul
xchg
addb
add
fidivrs
sbb
sub
add
add
push
mov
add
jo
add
add
fs
xchg
loop
add
add
mov
add
cmp
and
ljmp
mov
or
add
add
lret
test
movsl
cmp
add
add
mov
add
add
mov
add
add
adcb
out
loopne
add
add
pop
rcr
add
add
gs
add
add
mov
shll
add
add
sub
into
add
lods
jg
add
add
pop
mov
add
add
inc
gs
add
add
les
xor
add
add
xchg
jecxz
adc
test
add
add
xlat
xor
add
add
cs
xlat
push
add
addl
into
pop
add
addl
sbb
inc
cmp
add
add
call
add
adc
add
add
outsl
fs
add
add
popa
jmp
and
add
add
jb
std
js
add
rolb
add
add
addr16
repnz
add
repz
add
movl
mov
fwait
add
add
add
push
cmc
push
add
add
dec
xor
adc
mov
mulb
fwait
dec
add
mov
add
in
add
add
push
add
insw
adc
add
add
icebp
adc
add
into
add
add
add
pop
add
add
aas
enter
add
add
mov
add
add
aad
adc
add
add
fsub
mov
stos
test
add
add
shr
add
add
es
push
leave
mov
add
add
enter
add
add
mov
and
add
add
dec
add
add
clc
xor
add
add
add
add
ljmp
add
add
mov
add
add
roll
add
xchg
add
add
add
add
cmp
fstpl
filds
add
add
add
add
add
adc
add
xchg
fisttps
mov
add
xchg
dec
add
mov
test
jecxz
cmp
add
add
sub
roll
add
cmp
insl
pop
add
add
xor
add
inc
add
add
and
mov
add
add
mov
add
add
or
cld
loopne
xor
add
add
adc
add
add
in
dec
inc
add
mull
add
add
mov
sbb
add
add
push
ja
inc
fadds
add
add
jb
add
cmc
or
mov
jge
cmp
add
add
addr16
add
add
or
dec
pop
add
pop
fildl
add
add
sub
sub
add
add
sub
addb
add
xchg
dec
orl
xchg
xchg
cli
in
sbb
add
add
sub
add
add
mov
add
stos
add
add
jle
not
test
add
add
out
loop
push
mov
add
lds
add
xor
add
jecxz
add
add
mov
out
xchg
add
add
adc
in
add
fcmovnb
add
add
ret
outsb
adc
add
add
xchg
je
mov
xor
add
add
sub
pop
add
xchg
push
add
add
sbb
inc
xchg
gs
push
lock
jne
jbe
add
add
mov
sub
add
add
add
fisubrs
pusha
add
push
movl
arpl
add
add
add
add
leave
mov
add
sbb
out
add
add
add
or
add
add
add
add
and
dec
sub
add
add
add
add
add
and
add
add
mov
add
push
mov
add
add
mov
sub
pop
add
add
cmpsb
xor
xchg
add
add
push
sbb
jo
add
add
pop
pushl
pop
pop
add
add
and
incl
add
add
xor
pop
and
add
add
pop
inc
push
sahf
scas
add
add
push
xchg
addb
stc
cmp
add
add
push
imul
add
add
movsl
scas
push
int3
add
add
add
dec
add
cs
add
add
xchg
cmp
add
add
pop
push
mov
add
or
add
mov
add
add
rclb
ret
mov
add
add
outsb
sbb
leave
add
add
sub
xor
add
pop
inc
add
add
lcall
add
add
sub
add
mov
pushf
mov
add
add
add
mov
xor
popf
add
add
stos
ror
jo
inc
add
add
mov
mov
add
mov
fidivrl
sub
add
mov
pop
add
insb
add
add
fdivrs
cmp
and
add
add
inc
shll
add
add
xor
pop
add
sti
add
add
add
in
lcall
imul
sbb
add
mov
in
add
xlat
add
add
cmp
ljmp
add
cmc
bnd
add
add
adc
sub
mov
data16
jmp
add
jecxz
out
and
add
add
scas
leave
lea
add
add
cmc
popa
cwtl
in
sldt
add
loop
imul
lahf
filds
add
flds
add
add
lds
or
add
add
lods
lcall
add
inc
mov
adc
add
add
pusha
xor
in
bound
add
add
dec
add
add
pushf
and
add
sbb
add
add
mov
add
add
and
dec
stos
ja
add
add
dec
pop
scas
add
xor
add
add
call
xchg
add
add
pop
jne
cmpsb
das
cmp
add
add
insl
nop
add
mov
add
add
jb
cwtl
push
mov
add
or
sbb
add
add
test
add
add
mov
add
push
mov
add
add
and
cli
lods
add
pop
add
add
add
pushw
and
cmp
add
add
mov
jo
add
add
mov
xor
add
add
lock
add
lret
add
add
faddl
add
add
data16
add
es
add
add
loopne
add
add
lret
sub
sbb
add
add
mov
add
push
loop
add
add
mov
add
add
test
add
add
jne
add
add
mov
xor
add
add
jbe
mov
insl
add
add
push
negl
add
add
add
imul
testl
fwait
popa
sbb
add
daa
push
add
add
add
and
add
adc
mov
adc
add
add
sbb
pop
lcall
inc
push
pushf
inc
add
add
fmulp
xchg
add
add
xor
jbe
add
sbb
add
add
xchg
sbb
add
call
mov
add
add
inc
aas
inc
add
sahf
imul
add
add
jo
xchg
add
add
mov
or
dec
and
add
add
and
add
iret
mov
dec
fmul
sbb
cld
add
add
adc
adc
add
add
or
add
mov
add
lods
fstpl
faddl
add
add
add
add
mov
add
add
add
dec
or
xchg
push
add
add
outsb
and
repz
out
aad
add
jnp
add
add
or
cld
inc
je
add
add
mov
inc
pop
add
add
pusha
ret
sbb
add
add
xchg
and
inc
xchg
add
add
jne
subl
add
add
add
dec
cmc
add
add
add
in
inc
cli
add
add
inc
stos
and
add
add
push
mov
pop
out
insl
add
add
inc
jnp
movsl
fcmovb
add
add
scas
insb
pop
js
add
insl
add
add
adc
scas
scas
jp
add
add
clc
cli
pop
xchg
cmp
add
add
push
add
and
add
add
fistpll
add
add
iret
add
add
repnz
in
inc
add
add
hlt
shlb
shrl
add
aad
or
add
add
popf
adc
pop
add
add
fimuls
mov
add
sub
add
add
mov
add
mov
add
sub
add
add
add
add
jo
mov
popf
add
add
and
test
call
add
insl
push
push
xchg
and
cmp
jg
add
add
jl
cltd
jmp
add
add
add
xor
add
add
xchg
add
inc
mov
add
add
sahf
add
add
xchg
nop
daa
and
cmp
add
add
sub
in
add
in
cld
add
add
and
add
add
mov
add
add
js
sbb
add
add
add
push
sbb
mov
add
add
pop
movsl
cmp
popl
add
add
add
add
add
add
mov
test
add
add
loopne
add
add
add
add
mov
add
xor
add
jne
das
jecxz
add
add
push
outsl
daa
mov
add
add
add
sub
lods
ss
js
push
pop
pop
push
add
add
and
mov
add
les
add
add
icebp
add
add
pop
and
cmp
add
add
lret
xchg
add
in
ret
add
add
mov
popf
sbb
add
add
lret
cli
test
pop
pop
add
add
fs
sub
add
add
stc
loopne
pop
fadds
add
add
inc
pop
scas
add
add
into
jns
cltd
add
dec
addb
add
xor
add
add
iret
test
add
add
mov
int
add
add
cli
ljmp
add
sub
sbb
add
adc
lret
push
add
imul
adc
rorl
adc
add
lods
add
add
in
fisttpll
repnz
add
shll
add
adc
inc
add
add
xchg
imul
add
mov
add
add
fisubrs
add
add
nop
test
lock
dec
or
add
add
sarl
add
add
ret
repz
mov
add
add
andl
add
add
add
add
daa
int3
aad
and
add
add
je
mov
js
add
add
dec
xor
and
add
add
mov
or
mov
add
add
test
sbb
add
add
movsb
les
add
dec
push
and
add
add
add
add
add
mov
addr16
incl
add
add
sbb
shr
leave
add
add
mov
add
add
add
add
hlt
in
std
mov
add
add
cld
sub
sub
add
mov
add
add
fadds
add
add
icebp
das
sti
lret
jnp
add
add
js
ret
add
xorl
add
add
lods
insl
mov
add
add
and
dec
ficomps
add
add
mov
add
push
add
add
rcrb
mull
add
add
or
ret
je
fiadds
add
add
je
movsl
add
lcall
lods
cwtl
sub
cli
lds
add
add
inc
and
add
add
mov
mov
add
add
jne
xchg
je
repz
add
out
incb
add
add
lret
cltd
add
add
xor
sbb
das
add
add
test
addb
add
add
inc
cwtl
ja
pop
add
add
lret
sbb
outsb
inc
in
add
add
ret
add
xor
add
add
sbb
add
mov
dec
or
add
add
add
add
add
push
out
and
add
add
add
std
call
popf
cmpsl
add
add
mov
mov
add
jmp
add
in
in
fdivp
add
add
mov
rolb
add
add
add
add
add
loop
mov
add
addb
add
jp
adcl
add
add
add
add
clc
clc
jne
sahf
sbb
xchg
sub
add
int3
out
add
add
cmp
movl
or
jp
add
add
lods
mov
add
add
pusha
pop
pop
add
add
add
push
adc
test
push
add
add
mov
add
add
mov
add
add
in
add
add
pop
push
scas
add
or
inc
jno
scas
jecxz
add
add
dec
out
popf
nop
mov
add
add
sbb
out
pop
add
aad
add
add
scas
iret
je
xchg
add
add
fs
push
sbb
add
addr16
add
add
add
add
sub
add
js
xchg
test
push
add
add
rcrb
loopne
add
add
mulb
add
add
mov
add
add
or
push
lea
add
add
add
int3
mov
rolb
add
add
lds
add
enter
add
jbe
aam
push
xor
add
add
or
add
add
test
xor
add
add
enter
add
add
sub
cmp
sub
add
add
dec
test
add
mov
add
add
cmp
adc
lds
add
add
rcrl
add
add
sbb
add
add
xorb
add
add
je
in
sbb
nop
add
add
sub
lds
inc
insl
add
add
ds
cltd
add
testb
add
bnd
mov
add
sbb
add
jns
add
add
js
jp
fcompp
add
add
push
arpl
cmp
rorb
and
add
add
add
cmc
add
add
js
xor
or
add
add
add
hlt
add
add
fsubrl
add
add
dec
mov
lock
add
add
jae
add
add
push
jb
lret
cmpsb
mov
pop
pop
mov
add
add
add
add
addb
add
cld
add
add
push
xor
add
add
xrelease
add
add
add
lret
decb
add
add
jmp
or
add
add
or
add
les
add
add
fs
xor
pusha
sbb
add
add
inc
cmp
add
add
lock
add
add
add
into
pop
aam
xchg
add
add
mov
pop
add
add
data16
loope
add
cli
add
add
mov
add
add
mov
adc
add
add
sub
pushf
add
mov
add
fsubp
jp
pop
add
add
int3
movsb
add
add
sub
cmp
add
add
dec
orb
jae
filds
mov
add
add
jbe
jp
add
push
add
add
xchg
sub
sahf
mov
add
add
sbb
add
add
cmpl
inc
add
add
nop
pop
jno
out
sub
add
add
mov
add
add
sar
iret
add
mov
add
lcall
add
sbb
rorl
add
jb
imul
add
add
cmp
add
jnp
lea
cli
inc
add
add
dec
jle
jge
add
add
aaa
leave
repz
add
add
out
jg
out
push
add
add
imul
push
jecxz
add
leave
add
add
cwtl
inc
add
add
add
icebp
add
add
lock
scas
add
add
mov
std
add
add
push
dec
add
add
mov
add
cld
push
jge
aaa
jmp
add
add
xchg
add
add
aam
cltd
mov
add
mov
add
add
sti
outsl
pop
aaa
add
xchg
cmpsl
and
pop
add
add
mov
add
add
add
mov
roll
add
jbe
sub
add
clc
loope
cmpsl
add
shrl
out
jns
pop
add
add
rorl
rolb
add
add
add
js
add
dec
lock
add
test
sti
inc
mov
cld
sub
int
pop
add
add
pop
test
adc
add
add
cmp
push
push
addl
rorl
cltd
push
xchg
pop
add
lret
add
add
je
add
add
mov
aas
add
add
add
mov
add
adc
add
add
adc
mov
add
add
gs
add
add
or
lds
add
add
add
add
ret
add
fildl
mov
sub
das
jge
add
add
ja
jae
add
add
dec
into
stos
push
add
or
add
add
mov
icebp
inc
sbb
add
add
jle
loop
sub
add
add
daa
dec
popl
add
add
jno,pt
or
add
add
pop
mov
xor
xchg
mov
add
add
xchg
cmc
imul
add
sub
add
add
adc
add
add
add
jle
mull
add
stos
ja
mov
pop
add
add
push
push
icebp
inc
add
paddd
add
add
flds
add
add
push
add
add
adc
adc
add
add
ret
mov
add
fdivrs
add
add
fiaddl
data16
mov
add
add
sbb
add
add
add
add
add
add
hlt
push
lock
add
filds
add
add
insl
jp
hlt
add
add
cmp
add
add
ficoms
dec
add
push
add
add
shlb
add
shrb
push
xor
add
add
sbb
cld
enter
add
lahf
mov
add
add
scas
call
add
add
and
cld
add
adc
add
add
movsb
test
add
add
jge
aad
add
add
jl
fnstsw
add
addl
add
push
addr16
add
add
add
out
scas
leave
adc
add
add
cmpsb
mov
add
add
inc
dec
push
fs
add
add
push
jno
cs
add
add
and
or
add
nop
xchg
add
add
fistpll
add
pushl
lret
imul
and
out
add
add
sub
push
pop
icebp
test
add
add
movsl
les
add
add
add
mov
add
addl
fisubrs
add
jo
pop
rol
outsl
add
add
outsb
imul
add
add
add
shl
jecxz
sub
add
les
out
lock
add
add
dec
pop
into
add
jge
add
add
lcall
add
add
xor
push
xchg
lock
add
mov
jg
add
pop
insb
add
add
mov
icebp
aad
adc
add
add
int
call
add
sbb
add
add
sahf
pop
popa
stc
xlat
lret
add
in
and
imul
add
add
jg
mov
add
add
fsubrs
add
add
pushf
scas
sarl
add
add
xor
mov
add
add
loop
out
shrl
add
add
adc
adc
addr16
add
cli
push
lahf
scas
add
fisttpll
add
add
xor
add
add
jg
cmc
inc
and
add
add
adc
sbb
add
das
add
add
data16
xchg
out
jp
add
add
inc
leave
out
mov
add
add
pop
aaa
inc
add
jge,pt
add
add
mov
add
add
fildll
daa
fildl
add
add
cs
jo
add
add
push
faddl
add
ret
lock
repz
add
add
inc
clc
in
add
jo
add
add
les
add
add
out
loopne
dec
cmpsl
stos
add
add
pushf
and
dec
add
mov
cs
jp
sub
add
add
ret
add
add
push
cmp
add
mov
add
add
call
xchg
add
add
sub
stos
xchg
inc
ret
add
dec
push
add
add
mov
add
add
jecxz,pn
mov
add
add
leave
add
add
dec
imul
add
add
icebp
add
add
and
push
lahf
add
adc
add
add
imulb
and
xor
add
add
mov
enter
add
mov
mov
add
add
lock
cmp
add
add
mov
add
add
imul
add
pop
popf
add
add
mov
dec
add
add
repnz
lret
jbe
xor
add
add
add
mov
add
add
aam
jnp
mov
add
insl
hlt
int
add
add
lods
outsb
dec
loopne
add
add
add
mov
cmp
add
add
pop
jmp
add
push
inc
jp
add
cmpsl
movsb
add
add
clc
sbb
clc
call
add
popa
pop
push
xor
add
add
dec
repnz
ret
add
add
sbb
add
add
pop
les
add
add
lods
aad
add
adc
pop
das
pop
fsub
xchg
add
add
sbb
xchg
in
add
add
bound
add
movsl
aad
add
add
out
add
add
xchg
push
add
add
push
sub
rcl
add
add
add
add
add
call
incb
add
add
cmp
add
dec
mov
inc
dec
add
add
pop
sbb
fst
cltd
add
add
out
movl
add
add
dec
xor
add
adc
dec
add
add
mov
add
add
add
push
movsb
fadds
add
add
mov
loop
add
add
ds
add
jg
add
add
or
and
and
lods
mov
fs
add
add
adc
add
adc
add
add
sub
add
add
add
push
aam
add
add
stos
xlat
imul
add
add
add
insb
imul
std
in
loope
add
add
inc
xchg
add
add
fldl
add
add
rorl
xorl
mov
out
add
add
scas
xchg
mov
add
inc
add
add
adc
add
add
scas
dec
pop
cmp
add
loope
add
js
add
add
subps
add
add
out
imul
loopne
add
add
pushf
adc
add
inc
add
add
hlt
mov
add
add
out
or
add
add
pop
mov
cmp
fdivp
push
mov
enter
add
add
jbe
jae
add
aaa
pushf
add
add
sbb
xorl
in
pop
add
add
jo
sbb
add
push
ret
add
add
and
or
add
add
or
repz
cld
add
add
cmp
sub
add
add
jl
mov
add
add
mov
jge
push
add
add
push
rorl
add
fbstp
cmpsb
aas
xchg
push
dec
std
add
add
xchg
daa
and
add
xchg
cltd
imul
add
add
pop
ss
xor
add
add
xlat
pop
test
add
add
cli
js
add
add
fmul
mov
add
add
add
andb
inc
add
scas
add
add
add
clc
andl
add
add
arpl
pop
or
inc
add
add
faddl
ljmp
add
outsb
into
pop
cld
xchg
add
mov
dec
pop
lret
add
add
push
js
jno
add
add
enter
pop
add
add
aad
push
or
sub
add
add
add
fwait
add
add
mov
fidivs
pop
xor
shlb
hlt
lods
lods
add
add
lret
add
orl
add
add
add
add
sbb
add
add
adc
add
mov
add
add
ss
addl
add
add
testl
and
add
add
add
xor
sbb
adc
add
add
shrl
je
loopne
add
add
add
inc
add
add
cli
subl
imul
lock
jns
add
add
test
sbb
add
add
mov
add
add
lods
sar
add
add
in
push
pop
icebp
add
or
add
add
cmp
push
fnsave
stos
movsl
pop
pusha
filds
add
add
add
add
add
cmp
repnz
add
add
addr16
add
add
nop
adc
inc
lret
add
inc
or
xlat
mov
cmp
pop
and
add
out
add
inc
pop
add
add
pushf
iret
test
nop
dec
add
add
inc
pop
aad
cld
cmp
add
add
lcall
add
pop
jo
push
ret
add
dec
mov
add
add
pop
inc
xlat
add
out
add
add
inc
ffree
dec
das
push
add
add
sbb
add
add
add
add
add
mov
xor
lret
stc
add
add
das
sbb
pusha
lods
inc
add
add
mov
add
add
add
sub
out
jecxz
add
add
std
jle
xchg
add
add
cld
lods
cmp
dec
add
add
mov
out
inc
push
add
add
jns
das
cwtl
out
add
add
add
sub
add
add
add
dec
ds
push
jnp
add
add
out
icebp
aam
and
add
add
add
add
add
rcr
push
jb
add
add
mov
ret
and
xchg
add
add
ljmp
nop
add
add
lods
fstps
add
add
mov
add
add
test
dec
add
mov
add
add
push
add
jle
add
add
jl
xor
out
call
add
ss
add
add
push
lods
sub
add
popf
push
cltd
ror
add
add
test
pop
add
in
je
add
add
pop
add
add
pop
xor
add
add
mov
mov
add
add
add
push
stos
dec
inc
push
repz
add
or
lds
add
add
rclb
pop
in
add
add
fstps
push
add
add
add
add
add
add
pop
inc
les
add
rcl
inc
pop
xchg
add
add
mov
sti
aaa
add
pop
push
add
add
bound
mov
add
pop
aaa
xchg
dec
jb
add
add
jp
shrb
add
cmpsl
add
add
mov
pushf
add
add
jmp
jne
or
xchg
mov
and
add
add
rcrl
add
mov
jg
jg
add
add
gs
add
xor
add
add
pusha
das
mov
add
xchg
lahf
jmp
add
add
add
mov
stos
dec
rcrb
ficompl
sti
mov
add
add
ret
xchg
add
dec
loop
add
add
xor
pop
add
add
cltd
fcompl
add
add
cmp
add
add
push
add
add
lds
iret
jae
adc
add
add
aad
add
pop
dec
add
add
push
mov
add
add
cltd
xchg
lods
sub
add
add
ljmp
add
add
repnz
xchg
jnp
xor
add
add
mov
fcomip
movb
add
or
imul
add
add
int3
dec
cltd
lcall
inc
cwtl
lds
ret
add
add
mull
jbe
lock
jge
add
add
fsub
aaa
jno
mov
add
add
sub
ss
add
add
jo
pop
mov
sub
add
add
cmp
enter
add
enter
add
lcall
mov
mov
sbb
jno
dec
popf
fs
add
add
add
add
add
add
push
sahf
insl
sub
add
jns
into
mov
add
mulb
add
add
ds
sbb
std
add
add
jne
lahf
pop
fs
xor
add
add
js
sbb
sbb
das
or
jg
add
add
add
cltd
mov
test
add
add
insl
add
add
mov
xor
mov
add
add
add
add
scas
das
xchg
add
add
dec
mov
add
add
mov
xor
add
mov
add
add
push
jnp
pop
pop
or
add
add
movl
add
add
add
adc
adcb
mov
add
add
jo
mov
inc
add
add
fsubs
mov
add
add
lret
cmpsb
push
or
add
add
sbb
sub
add
add
ret
into
ret
fdivl
sahf
into
pushf
inc
into
add
add
xchg
push
cmp
add
add
cli
pop
add
add
into
add
add
add
arpl
add
add
add
add
bound
mov
add
add
in
xor
add
loopne
mov
add
int3
jecxz
add
add
push
jbe
je
add
add
mov
add
add
sub
add
or
in
mov
insl
xchg
add
add
cwtl
test
loopne
add
add
les
pushf
mov
add
add
mov
es
inc
lret
rolb
add
add
stos
cmp
add
or
add
add
nop
lock
hlt
sub
add
add
mov
add
add
call
add
pop
add
add
add
int3
add
mov
add
add
jb
lods
stc
add
jle
add
add
je
inc
xor
test
add
add
lea
lds
add
add
mov
add
xchg
add
add
pop
ljmp
add
dec
mov
add
add
divb
mov
add
add
cwtl
jae
roll
add
add
mov
in
add
add
lock
movb
mull
add
add
lea
add
add
add
add
mov
add
mov
add
add
xlat
pop
mov
add
divb
cmpsl
ret
add
add
cmpl
add
add
es
cmpsl
rolb
add
nop
ret
sbb
add
add
mov
add
inc
add
add
mov
mov
lods
push
sub
pop
add
add
clc
xchg
lahf
loop
add
les
add
add
inc
std
fwait
loop
add
add
outsb
mov
add
add
inc
jg
add
jg
add
add
test
aaa
adc
add
dec
fldl
adc
add
add
mov
add
add
out
bound
loopne
add
add
sbb
pand
data16
add
xchg
add
adc
add
add
les
add
add
fcmovbe
mov
add
movsl
xchg
add
sub
add
add
xor
or
add
add
pusha
mov
add
add
xchg
lods
add
out
add
add
or
add
scas
adc
add
add
add
add
add
arpl
add
add
mov
dec
cmc
pop
and
add
add
push
ja
inc
xchg
add
add
dec
ja
dec
add
mov
add
push
add
add
dec
cmp
xchg
or
xchg
add
popf
fwait
add
add
jp
cmpsl
icebp
xlat
arpl
add
add
add
add
xchg
inc
dec
add
dec
testl
push
int
ljmp
sub
add
add
movsb
add
sub
add
add
jle
mov
add
add
sbb
add
add
push
push
popf
test
add
clc
add
add
mov
loopne
add
add
andl
add
add
pop
cmp
pop
add
add
ret
ret
cmpsb
nop
add
add
adc
jae
mov
add
add
ficompl
push
add
sbb
add
add
sbb
sub
add
add
push
lcall
hlt
aaa
adc
add
data16
add
add
aaa
imul
adc
add
cmp
fwait
add
add
add
add
add
add
add
dec
push
leave
imul
add
add
sbb
pushf
mov
add
movl
mov
fwait
push
sub
add
add
pop
daa
mov
add
adc
adc
add
add
add
add
loope
jge
test
add
add
jl
cli
in
add
cmpsb
into
add
add
push
adc
jns
inc
add
add
mov
mov
cmpsb
inc
jle
add
or
add
add
enter
cli
xlat
add
add
jmp
sbb
add
add
xchg
leave
add
test
push
adc
add
add
and
js
jbe
add
add
aaa
cmp
add
add
add
sub
add
nop
add
add
imul
add
leave
mov
add
movsb
add
add
daa
xor
mov
add
xor
nop
mov
add
add
outsb
xchg
aaa
mov
add
xor
add
add
je
jbe
push
add
add
mov
xchg
add
add
sub
inc
stc
add
add
lcall
add
add
sub
pop
ja
add
add
add
add
add
mov
push
jbe
sub
add
add
int
add
add
add
mov
xchg
push
add
pop
jb
add
add
data16
add
mov
jg
popa
mov
add
add
dec
mov
addb
add
fcomp
mov
add
add
roll
ljmp
ret
or
add
lods
add
add
loop
adc
add
stos
loopne
lds
add
jmp
or
add
add
cmp
in
lods
mov
cmp
add
add
adc
cld
testl
add
add
in
lods
pop
add
add
fstpt
out
out
jne
add
add
cmpb
add
inc
mov
add
add
xchg
leave
xor
mov
add
add
imul
incb
add
fmul
add
add
sub
addb
add
add
sti
add
add
mov
hlt
add
add
les
add
add
dec
test
add
add
in
add
add
cs
add
add
add
test
add
pop
xor
add
cmp
add
add
call
cmc
add
add
add
adc
add
inc
adc
jae
add
add
add
jb
xorb
add
jecxz
sbb
add
add
mov
and
add
add
dec
sub
add
add
push
add
add
and
aaa
pusha
add
je
add
add
idiv
inc
and
add
mov
mov
lds
add
add
add
add
outsb
sub
add
add
lock
add
add
mov
movsl
add
add
mov
ja
add
add
lret
ret
xor
sarb
outsl
add
fisubrl
add
add
dec
sbb
shlb
add
add
popa
jno
test
add
lods
scas
mov
xor
add
add
xor
add
add
stos
pop
inc
mov
add
stos
dec
add
push
fadds
add
add
int
add
add
fisubrs
mov
add
push
bound
add
add
add
push
xlat
test
xchg
inc
mov
loop
add
add
sbb
ja
add
inc
popf
add
add
pop
xor
xor
add
out
xchg
scas
out
xchg
add
add
inc
and
add
xchg
xchg
inc
add
add
sub
xor
add
add
push
xchg
and
add
add
cli
test
add
in
adc
movsl
dec
ljmp
lea
jmp
add
or
add
add
fwait
push
sub
add
add
and
add
rclb
add
add
in
sbb
sbb
idivl
add
add
lock
add
add
dec
pop
sti
mov
add
mov
loope
add
add
mov
add
xchg
add
add
or
push
and
add
mov
fadd
stos
add
add
pusha
gs
inc
add
add
xchg
adc
xor
add
add
addl
cwtl
add
add
stos
xor
xor
add
add
shll
add
and
add
add
push
add
nop
xor
add
add
sbb
add
add
add
push
pop
sbb
mov
loop
add
add
adc
leave
push
test
add
add
cmp
pop
frstor
add
dec
addl
stos
inc
add
add
ficoml
mov
add
add
int
add
add
xchg
cmp
push
add
add
hlt
xorb
mov
or
sbb
add
add
pop
rorl
add
loope
add
add
inc
test
add
add
pop
jno
cmp
add
inc
dec
add
mov
add
add
sbb
add
add
add
jge
add
add
sub
add
add
and
add
add
sete
shlb
lock
std
add
add
jl
push
push
lods
push
add
add
stc
inc
xor
add
add
inc
add
cmpsb
enter
mov
add
add
mov
add
add
sti
mov
cmc
add
add
and
cmp
add
test
fnstcw
add
add
js
adc
add
cmpl
into
add
add
in
cmp
add
add
sbbb
add
rorl
add
add
das
jmp
add
inc
inc
pop
jge
dec
add
add
faddl
jne
add
add
outsb
notl
sbb
add
add
scas
sbb
add
add
push
orl
add
cmp
cmp
add
add
test
push
adc
add
add
or
add
add
incb
add
add
jge
and
add
add
adc
add
add
add
add
sti
xor
add
add
lods
add
sub
add
add
mov
fs
xchg
add
add
pushf
jno
mov
add
into
lret
mov
add
jg
add
add
xor
ss
dec
xor
add
add
jns
add
add
add
add
sbb
mov
aad
add
add
or
add
adc
orl
add
add
lcall
add
push
lods
jbe
call
in
pop
es
add
add
mov
add
add
cmc
ret
test
add
add
add
add
cmp
push
jae
add
add
inc
sbb
adc
add
add
add
add
inc
inc
sahf
xchg
in
add
add
insb
fdivp
lds
add
add
pop
imul
add
add
pushf
rorb
add
add
jge
add
xlat
add
add
je
add
add
add
popa
les
test
sbb
add
push
add
add
pop
xor
add
rorl
add
add
xchg
and
lret
add
add
xchg
dec
push
test
add
add
cwtl
jmp
lret
add
add
hlt
add
add
add
cwtl
add
add
mov
add
dec
add
add
and
cmp
sbb
add
add
in
std
jae
and
add
add
sub
sbb
add
add
mov
hlt
pushf
jmp
add
aam
add
add
mov
add
adc
dec
das
jnp
jecxz
add
add
add
pop
add
add
add
mov
add
mov
rclb
rolb
dec
mov
add
add
ljmp
and
lods
sbb
add
add
push
add
add
test
repz
add
add
stc
ljmp
sub
xchg
out
lods
jo
add
add
sub
lods
add
add
push
cmp
add
add
cltd
data16
add
add
test
aas
and
add
add
js
clc
negb
arpl
or
add
add
xor
mov
xor
fistps
add
jb
dec
jne
imul
add
or
sti
xchg
add
xchg
push
add
add
push
mov
add
add
jns
call
mov
mov
dec
and
add
out
add
add
rclb
add
cmp
inc
in
ja
add
add
add
add
xor
ret
cmp
add
add
mov
add
add
jp
jb
add
add
add
mov
sub
add
add
jne
sti
add
add
xchg
in
or
add
adc
out
jb
cmpsb
mov
cmp
add
add
jle
mov
add
jge
add
add
pusha
add
insb
add
add
cmpsl
add
jb
cmp
add
add
add
ret
add
add
stos
mov
add
add
sar
pop
add
add
add
int
cltd
add
dec
jnp
add
add
or
add
jns
jp
roll
add
add
lds
add
add
scas
and
adc
inc
add
add
push
lods
add
add
inc
jecxz
add
add
insb
add
add
push
mov
lods
out
mov
roll
add
sarb
cmp
add
add
bnd
add
add
and
or
movsl
add
add
or
fbstp
add
add
int3
or
and
jo
add
add
dec
lds
add
movsb
cmp
fwait
add
mov
add
add
jbe
and
add
xlat
gs
scas
inc
lds
add
add
in
out
add
jb
add
add
jo
stos
test
add
inc
mov
inc
sub
enter
add
dec
lahf
add
add
cmp
push
inc
push
add
add
xchg
ljmp
push
mov
idivl
add
add
push
incl
add
add
jae
sbbl
add
add
lcall
add
add
push
or
fadds
add
add
add
add
lods
lret
inc
add
cmp
add
add
jmp
cli
cld
add
add
bound
loope
ret
add
add
sub
inc
add
sub
add
or
add
add
xor
mov
add
add
add
add
add
fdivl
add
add
in
adc
add
add
push
push
add
add
push
test
mov
add
add
fidivs
add
add
sahf
mov
add
add
andb
add
add
mov
enter
add
fcoms
into
add
push
int
add
add
divb
add
add
sbb
add
loop
das
push
add
mov
add
mov
out
add
add
sbb
cmp
add
add
jecxz
add
pusha
mov
into
scas
daa
cmpsb
push
add
add
mov
sub
add
add
pop
insb
add
jmp
add
add
mov
add
add
xchg
push
xor
xor
loopne
les
add
add
rcr
jmp
pushf
add
add
mov
add
add
sub
roll
add
add
lret
xor
add
add
or
add
add
les
pushf
add
xchg
mov
add
add
push
sbb
add
add
ror
stc
add
cwtl
stc
add
add
nop
addl
add
int
fldcw
fstp
add
add
call
add
mov
add
add
in
push
xchg
js
add
add
or
pop
dec
jg
add
add
ret
aaa
add
jge
add
add
je
fmul
sbb
add
add
inc
lea
add
dec
add
add
mov
add
add
pop
rorl
add
push
js
test
xlat
add
add
idivb
movsb
add
cmp
add
add
cwtl
movsb
subl
add
add
xchg
xorl
xor
inc
jae
add
add
fiadds
add
add
or
add
add
add
inc
add
add
cld
pop
scas
mov
mov
loope
mov
xchg
push
add
add
aam
aad
add
add
add
es
add
add
into
and
add
add
add
adc
add
add
adc
add
add
into
add
add
clc
inc
push
inc
add
push
add
cltd
mov
add
add
mov
add
add
jl
ret
jae
add
add
test
add
add
mov
movsl
add
add
pop
xchg
xlat
add
add
out
mov
add
add
psubb
imul
add
xchg
pop
add
add
test
in
ret
xor
add
add
add
add
add
xor
add
add
pop
dec
pop
insl
aad
add
add
jp
aaa
xor
jo
mov
add
inc
add
add
or
mov
lods
mov
add
add
add
add
in
and
add
or
add
add
sbb
add
add
mov
add
add
add
add
mov
leave
sub
add
ja
jns
pop
mov
add
add
or
sbb
add
add
jp
gs
add
add
movsl
mov
push
add
add
xchg
mov
pop
jle
add
add
add
add
mov
repnz
add
insb
adcb
add
test
add
add
mov
pop
lcall
fildll
cmp
add
add
mov
roll
add
add
mov
dec
add
add
jae
and
add
adc
sbb
add
std
xchg
add
add
ret
lahf
xchg
xchg
add
add
inc
mov
cld
pop
les
add
add
ja
sub
add
and
add
add
into
iret
jnp
add
add
jmp
push
outsl
pop
push
add
add
hlt
sbb
push
add
popa
hlt
add
add
inc
out
jae
in
add
add
int3
jo
inc
pop
incb
add
add
and
pop
add
pop
xchg
add
add
rclb
add
add
fadds
add
add
add
add
add
add
or
add
add
pop
mov
add
add
and
pop
push
add
out
add
add
movsb
mov
add
add
jge
orb
out
mov
add
add
mov
add
add
inc
adc
add
add
add
add
add
enter
xor
add
xor
and
stos
add
lahf
daa
add
add
push
mov
add
add
inc
inc
and
add
push
test
add
add
and
add
add
movsl
out
into
xchg
add
add
add
divl
add
add
jo
xor
ret
add
add
pop
push
pop
dec
clc
xchg
add
add
outsb
mov
enter
add
rolb
add
add
dec
sbb
add
sub
dec
cmp
add
add
sub
add
add
jl
out
jg
add
add
mov
ror
add
adc
add
add
add
add
dec
ror
and
add
sbbl
add
sahf
sub
add
add
sub
jg
jl
add
add
adc
xchg
add
add
fcoms
dec
imul
add
add
stc
push
add
add
xor
mov
add
add
prefetch
clc
add
add
cmp
add
add
and
add
jl
add
add
cmp
sbb
add
add
aad
add
add
subl
loope
add
add
movsl
push
out
int
add
add
jmp
aam
add
add
loopne
mov
xchg
push
add
add
pusha
test
add
add
cmp
sub
add
add
shlb
add
add
sti
or
add
inc
push
out
add
ja
add
add
and
add
add
mov
filds
add
add
and
add
add
cs
cmp
add
add
xchg
dec
lahf
fimuls
add
add
addr16
or
add
and
add
add
sub
add
add
lock
adc
add
inc
fs
mov
jb
xor
flds
add
add
out
jecxz
cld
jecxz
add
add
add
add
iret
loopne
add
add
and
pushf
dec
add
add
and
inc
addl
add
add
sarl
rolb
add
add
mov
mov
add
add
add
add
jg
mov
add
push
sbb
add
add
dec
and
mov
add
xor
add
add
lret
adc
or
add
add
test
add
add
add
scas
mov
dec
push
add
add
pop
mov
add
add
lods
lock
jno
add
add
out
add
add
pop
pop
mov
add
push
shl
into
add
push
add
add
clc
jle
push
cmpsl
sahf
add
add
mov
jge
add
add
mov
add
push
mov
add
add
or
mov
add
add
add
sbb
insl
or
add
cmp
add
add
out
sbb
add
add
dec
jb
test
add
add
xor
adc
stos
add
add
xchg
add
add
push
sbb
add
add
lcall
mov
add
pop
stc
cld
add
add
lds
or
add
add
pop
out
adc
add
add
dec
arpl
add
add
fwait
testl
icebp
add
nop
jbe
add
add
movsb
lret
add
add
and
add
add
mov
add
add
add
dec
add
movsl
jecxz
add
add
outsb
dec
out
lret
add
add
out
inc
int3
add
xchg
std
add
add
or
push
lds
js
pop
outsl
sbb
add
add
sbb
cltd
add
add
xchg
mov
add
add
add
add
stos
mov
add
adcl
out
add
add
cmpsb
push
in
movsb
bound
add
add
mov
add
add
push
arpl
loope
dec
add
add
cmp
sbb
add
add
add
pop
add
add
adc
in
mov
add
mov
push
add
add
add
fisubrl
mov
inc
push
add
add
stos
stos
imul
out
add
add
mov
outsb
add
add
hlt
arpl
add
inc
xchg
or
add
add
loopne
test
add
add
add
faddp
ds
loopne
add
add
mov
add
add
cs
add
cmp
add
add
sbb
add
add
add
xor
add
jo
jmp
add
mov
add
add
and
rorl
add
add
xchg
push
int
xchg
add
add
cmp
sti
push
add
add
in
pop
dec
add
add
scas
xchg
xor
add
add
scas
add
cmp
add
add
cmpsb
push
enter
add
add
mov
add
add
ds
add
in
cwtl
add
add
and
fbld
add
ljmp
add
add
pop
and
add
add
add
push
pop
sub
xorb
add
sbbb
inc
add
add
add
pop
mov
add
aaa
pop
repnz
add
add
faddl
add
adc
add
add
gs
pop
add
add
pop
rorl
add
add
mov
jbe
add
add
stos
push
push
xor
add
add
mov
push
dec
mov
add
add
add
pop
add
add
mov
pop
inc
aad
add
add
pop
stos
and
cltd
add
add
lret
sbb
add
add
add
add
add
jo
test
add
fs
gs
add
add
ss
popa
dec
frstor
add
std
clc
idiv
jbe
add
add
into
je
or
add
add
add
xor
or
scas
and
add
add
mov
add
add
mov
pop
bound
add
add
mov
jl
addl
add
sub
add
cmpsl
add
add
adc
repz
insl
pop
add
add
adc
imul
add
push
add
add
in
mov
fcompl
add
decb
add
add
fstps
adc
xchg
inc
lds
add
add
cmp
and
add
jbe
mov
add
add
add
add
lret
std
add
add
xchg
push
repz
or
add
add
test
add
xchg
test
pushf
shr
insb
mov
add
aad
aas
ret
add
add
je
xchg
test
add
add
add
push
xchg
mov
add
ret
movl
hlt
pop
add
pop
loope
add
add
sbb
fbstp
add
add
dec
sbbl
add
add
add
addb
add
mov
lret
add
add
push
xor
jp
pop
add
add
mov
add
test
add
add
inc
sub
xchg
add
add
jp
std
push
add
cld
scas
pop
lds
add
add
add
mov
add
add
xchg
das
rolb
add
adc
add
add
dec
and
ja
add
add
add
icebp
fdivrp
or
add
add
add
add
lret
pop
jp
add
add
mov
jnp
adc
add
add
jg
testl
add
add
add
add
scas
frstor
add
add
mov
add
lcall
add
stos
imul
add
add
push
std
adc
add
adc
add
add
pop
push
addb
add
out
ficompl
add
add
add
jmp
add
add
xchg
shlb
add
add
fsubr
stos
aad
push
add
add
xor
push
mov
xor
scas
sub
mov
lock
stos
push
pop
add
add
or
movsl
testl
add
add
mov
add
add
into
xor
lods
aaa
iret
add
add
mov
cmp
add
add
add
adc
mov
add
and
test
add
mov
sub
add
add
add
add
in
lcall
add
xchg
sub
add
sub
add
jmp
add
add
add
add
mov
pushf
outsl
adc
add
add
dec
stc
add
add
out
pop
cmpsl
pop
dec
add
add
sbb
movsb
add
add
jle
nop
mov
add
add
add
punpckhwd
add
addl
call
nop
add
add
stos
cld
cld
dec
add
add
xor
cmpb
push
lret
add
add
add
inc
aam
ret
scas
lea
add
add
popf
out
xor
add
add
sbb
pop
fiaddl
add
add
mov
shlb
lods
xchg
inc
in
in
xchg
add
sub
add
sahf
add
push
movl
rorb
add
add
repnz
call
add
xor
arpl
mov
add
add
or
adc
add
add
int3
lret
ss
sub
in
lds
fiaddl
add
add
sbb
jbe
fs
fld
add
add
push
loope
jmp
addl
jg
repnz
xor
jo
test
add
add
mov
add
add
sbb
fwait
icebp
add
add
cmp
add
add
fisttps
outsl
loop
add
add
dec
int
add
add
add
push
pusha
xchg
mov
add
mov
adc
add
add
mov
add
xlat
push
add
add
xchg
add
add
nop
add
add
negb
test
add
add
repnz
jle
add
add
out
loope
sarb
add
sarb
clc
mov
add
add
pushf
add
add
push
xchg
xor
add
lcall
mov
add
add
mov
sbb
lcall
adc
add
add
push
add
add
push
loope
add
jmp
addl
jae
mov
add
add
xor
adc
or
and
mov
or
add
add
xchg
add
insb
sbb
add
add
iret
cld
and
add
add
stc
sbb
leave
add
add
loop
fs
add
add
add
fs
pushl
leave
add
add
mov
cmp
add
add
or
add
stos
sub
add
add
push
das
sbb
pop
add
add
lret
mov
sbb
add
add
add
je
add
jns
add
add
mov
cmc
fiaddl
add
add
addb
add
loopne
jo
add
xchg
lahf
add
add
adc
stc
mov
add
add
add
sub
jbe
add
add
in
or
cmpsb
xlat
popl
add
add
cltd
add
add
fldenv
leave
add
add
xchg
pop
inc
pop
pop
and
add
add
mov
add
add
cs
jmp
add
test
add
add
nop
adc
add
add
xchg
add
add
call
add
inc
add
add
pop
aaa
adc
dec
adc
add
add
in
add
add
jb
lods
mov
add
add
add
je
imul
xlat
xchg
and
add
add
lret
add
test
add
add
adc
add
add
inc
aas
test
fldl
add
add
inc
ljmp
add
add
sub
add
add
cmpl
add
xor
mov
add
add
mov
mov
lcall
add
add
add
add
fnstenv
lock
add
pop
fdivs
add
add
inc
bound
add
lock
add
add
xchg
inc
pop
xchg
inc
add
add
test
add
add
add
add
add
add
xchg
repz
xchg
mov
clc
hlt
xor
add
mov
add
add
ljmp
add
add
in
testl
add
sub
add
add
add
mov
lcall
scas
cmp
add
adc
add
add
mov
add
sti
add
add
jb
unpckhps
add
add
add
or
add
add
mov
cwtl
sbb
add
add
add
js
add
add
xor
pop
add
add
pushf
pop
mov
add
add
icebp
push
add
add
or
fisttpl
popl
add
add
or
addb
add
in
movsl
fwait
add
fmulp
add
add
mov
enter
add
add
mov
sbb
add
add
rorb
add
add
add
mov
cmc
mov
inc
add
add
jp
jns
out
lret
add
or
xchg
xchg
add
jno
add
add
jp
ja
xchg
jne
add
add
dec
mov
add
xchg
xor
pop
add
add
xchg
sbb
nop
ja
add
add
mov
add
add
and
add
rolb
add
jle
insl
loope
cmp
add
add
inc
mov
add
add
push
jmp
mov
add
add
mov
pusha
add
add
dec
test
sti
pop
movsb
add
add
adc
push
addb
add
ret
pop
dec
enter
add
jae
loope
add
add
ficoml
mov
add
add
sbb
jecxz
cmc
add
add
add
sub
add
hlt
stc
xor
add
rclb
add
add
pop
test
out
add
add
in
inc
rorb
add
fimuls
mov
add
cmpsl
ds
adcb
into
leave
xor
add
sbb
aas
xchg
add
mov
add
add
data16
adc
add
loope
pop
inc
test
add
test
movl
add
add
add
add
or
xlat
add
add
jl
sub
add
add
add
push
bound
cmp
add
add
jnp
scas
mov
add
cmpsb
push
and
pop
add
add
enter
adc
add
add
dec
jno
xor
add
add
and
arpl
add
xor
push
pop
out
dec
lods
add
add
inc
into
inc
shlb
add
add
push
sub
add
add
sub
mov
gs
mov
aas
add
add
add
sbb
add
sbb
mov
add
add
sbb
pop
or
aam
add
add
mov
add
cmp
add
add
rclb
add
add
leave
xchg
sbb
mov
add
add
sub
ret
add
add
sub
add
add
sub
add
add
add
add
mov
repnz
add
int
dec
mov
add
add
lea
sahf
push
das
inc
dec
xor
pop
inc
jg
mov
add
fidivrl
add
jo
add
add
fadds
cmpsb
out
add
add
shrb
mov
xchg
add
add
xor
add
add
add
loop
fstl
sub
mov
bound
add
add
sbb
sldt
xor
add
add
cmp
shrb
dec
add
add
outsb
push
cmc
inc
cmp
adc
fwait
push
add
insb
inc
add
add
cbtw
mov
add
add
sbb
add
add
push
divl
add
in
add
add
loopne
add
adc
add
jmp
dec
mov
add
add
cmp
push
add
push
sub
add
add
sub
xchg
add
add
shl
sbb
add
xchg
ret
add
and
add
add
in
add
add
add
cmp
add
add
pushf
daa
testb
add
add
pop
mov
add
add
scas
nop
dec
mov
add
jo
lds
add
add
add
call
adc
add
add
aam
mov
add
inc
mov
push
add
in
add
add
jb
mov
add
add
add
add
mov
dec
add
cmpb
add
add
dec
std
pop
add
add
sub
add
add
and
inc
xchg
add
bound
add
testb
add
add
fnstenv
add
add
add
cli
add
add
lock
sub
add
add
mov
dec
fiadds
add
add
loop
add
loop
add
add
mov
dec
add
add
pop
or
pop
and
add
add
jo
nop
add
jb
add
add
aam
cmp
sub
add
add
insl
adc
movsb
add
add
lods
xor
add
mov
mov
and
mov
pop
add
mov
push
sbb
add
rcrl
clc
das
test
add
add
push
popa
sub
scas
add
add
push
test
in
add
js
add
add
enter
add
add
add
inc
mov
inc
repnz
add
sbb
mov
add
jg
add
add
pop
xor
cmovge
add
add
push
add
add
xor
fnsave
add
add
xchg
add
add
inc
sti
xchg
add
push
call
mov
add
add
add
add
add
or
daa
add
add
pop
pop
lret
add
dec
cmp
cmp
mov
add
add
xor
add
add
mov
add
pop
add
add
in
and
insb
movsl
add
add
mov
add
add
mov
add
add
or
pushf
add
add
add
addr16
mov
out
out
add
mov
add
cmc
cltd
add
sbb
cmp
loop
sub
add
add
xor
add
mov
add
mov
fistpl
add
add
stos
loop
xor
add
test
add
add
jp
test
add
add
adc
sub
sub
add
add
scas
add
push
adc
add
add
lods
pusha
cmp
and
add
add
cltd
in
add
add
scas
adc
cmp
add
add
pop
mov
pop
push
add
add
lret
daa
and
push
add
incl
add
add
inc
pop
inc
sahf
pop
add
add
cmp
imul
add
xchg
filds
add
aaa
add
add
hlt
inc
mov
adc
add
add
xchg
clc
or
add
add
mov
xor
add
add
mov
stos
mov
add
insb
mov
add
add
sub
add
popf
add
add
sbb
or
sbb
add
add
xchg
add
add
jo
bound
add
xor
add
add
and
mov
add
add
lcall
add
cmp
mov
add
add
jl
jecxz
out
add
add
imulb
add
add
push
testb
add
add
add
add
push
mov
daa
pop
adc
ds
dec
add
sahf
rolb
add
and
inc
les
add
rolb
add
add
add
adc
add
sbb
add
nop
ret
mov
add
add
pop
add
add
add
ja
dec
imul
add
cmp
stos
add
add
faddl
jne
add
ret
add
add
dec
fcom
xor
add
add
xchg
add
add
push
xchg
inc
faddl
add
add
add
sub
aad
shlb
loopne
push
sbb
cld
add
add
subb
sbb
add
add
pop
add
add
pop
out
jnp
cmc
add
add
lret
cmp
add
mov
add
add
add
add
jnp
test
jmp
fs
inc
add
dec
mov
add
add
sbb
add
add
xchg
and
add
add
into
sbb
mov
add
cmc
mov
xor
add
add
mov
add
add
mov
in
add
sub
add
dec
pop
mov
add
dec
aad
push
push
out
add
add
adc
mov
add
dec
pop
add
add
adc
xor
cwtl
add
add
add
lods
loopne
or
add
add
loope
push
add
sbb
add
add
jne
cmp
xchg
add
add
movsl
jp
ja
fwait
add
add
xchg
lea
sub
add
add
jl
jg
pop
add
add
sti
mov
popf
mov
add
add
mov
add
add
lret
adc
add
add
data16
add
pop
popf
pop
add
and
sarb
add
add
aad
cmpsl
into
add
add
je
adc
cwtl
add
add
jae
idiv
add
add
inc
sub
and
pop
add
mov
add
add
push
in
test
add
add
cmc
dec
call
add
cwtl
dec
sub
add
pop
add
add
mov
in
sub
add
add
data16
cmp
add
add
mov
add
js
add
add
inc
lods
mov
add
std
pop
mov
add
add
cld
das
sbb
and
mov
into
in
mov
add
das
outsl
push
adc
es
sti
push
add
scas
testl
adc
fsubs
add
cltd
icebp
arpl
xchg
add
add
mov
add
add
add
rolb
xchg
hlt
movl
pop
ret
sub
add
fdivrs
push
add
add
add
add
push
and
add
add
jmp
add
add
push
fimuls
data16
add
add
addb
add
out
jp
js
add
add
add
push
pop
test
cmp
add
add
xlat
jae
mov
mov
add
add
add
add
stos
cmp
push
dec
add
add
lret
stos
stos
mov
add
xor
mulb
add
add
add
add
subl
add
add
ret
add
add
mov
addr16
add
dec
decl
add
mov
cmp
add
cmc
mov
pop
fiaddl
add
add
inc
outsb
add
add
add
add
aad
fstpt
divb
add
add
jp
mov
add
inc
ja
add
add
add
add
aaa
cli
jne
addr16
add
add
out
add
add
out
pop
xor
sbb
add
add
data16
add
jle
add
add
add
pop
mov
add
dec
mov
cmp
les
add
add
add
sbb
add
add
add
add
cmpsb
out
jnp
out
add
add
ret
dec
add
mov
add
out
adc
add
add
add
add
add
sbb
imul
rolb
add
add
inc
add
add
lret
mov
lret
add
add
inc
cmc
xchg
mov
add
add
push
push
add
add
xor
xchg
mov
add
rcr
addl
xchg
testl
fisubrl
in
pushf
add
add
xor
xlat
add
add
or
add
xorb
mov
add
add
sub
add
add
fdivl
jbe
mov
add
add
aaa
sub
cmp
add
add
sub
add
add
jo
pop
pop
addr16
add
add
inc
add
add
enter
add
xchg
pop
add
add
cmp
negl
or
add
add
push
lods
mov
add
push
aas
add
add
push
rcrl
add
push
mov
in
mov
add
ds
add
add
ds
dec
add
add
ss
lahf
outsl
adc
add
add
aas
jle
add
push
icebp
add
add
js
sub
add
add
ss
add
add
add
dec
push
xor
add
jg
add
add
cmc
add
add
sub
add
add
lcall
jb
add
add
mov
bnd
add
add
rorb
add
add
mov
sbb
fwait
add
add
push
xchg
mov
add
add
pop
pop
jle
adc
add
add
add
add
add
addb
testl
fisttpll
add
add
mov
push
add
gs
add
add
lret
pusha
repz
add
add
out
add
add
out
insb
and
add
add
sbbl
add
popa
movsl
cmp
add
add
cmpsb
loop
add
or
add
add
add
stc
test
add
add
lock
mov
jne
add
add
mov
out
add
add
mov
push
cmpsb
add
add
out
mov
and
add
loopne
pop
xchg
add
sub
adc
sbb
add
add
sbb
xor
pop
add
add
sub
xchg
sldt
adc
add
add
in
dec
xor
add
orl
cli
mov
add
add
xchg
push
andb
or
xchg
xlat
ja
ljmp
mov
stos
add
add
nop
mov
add
add
xor
jns
roll
add
add
xchg
jl
add
adc
pop
push
sbb
add
add
push
lret
sarl
add
jb
imul
add
les
add
add
push
insb
push
add
add
fs
lea
cwtl
add
add
dec
orb
cmp
add
add
xor
adc
add
add
add
notb
lock
add
dec
xchg
add
add
cwtl
push
rcr
push
add
add
cmp
rolb
add
add
inc
and
add
inc
loopne
add
add
incb
add
add
and
add
add
add
test
add
add
pop
scas
fsubp
adc
jb
mov
ret
add
add
cmpsb
loop
add
data16
add
es
push
sub
mov
add
add
jl
adc
add
mov
add
push
add
add
mov
jmp
inc
xor
push
sbb
clc
movsl
dec
rolb
mov
add
dec
cmp
mov
add
add
inc
pop
mov
add
add
out
mov
add
add
add
add
leave
mov
add
add
pop
mov
sub
add
add
fstl
jno
add
add
sub
add
add
xchg
cld
daa
add
add
test
jmp
add
add
popf
mov
add
add
add
push
aad
add
add
add
xor
aas
jae
mov
add
add
mov
add
add
sbb
sti
add
add
or
je
push
lock
add
mov
xchg
add
add
inc
sbb
aad
add
add
cmp
rcll
push
cwtl
sldt
add
dec
jb
daa
add
addb
add
mov
aad
rclb
xchg
jns
dec
and
add
add
jmp
in
add
push
dec
add
add
jp
fadd
push
iret
add
add
in
mov
sub
add
add
xchg
stos
repz
add
stos
add
add
xchg
jns
and
add
inc
push
sub
add
add
sub
add
add
mov
add
add
or
add
add
xor
int
add
add
jns
add
add
and
sub
add
add
adc
aaa
add
jo
add
add
push
lcall
add
jae
push
int3
add
add
fisubrl
loop
add
add
sbb
insb
test
add
mov
adc
add
add
fidivl
push
add
andl
mov
add
add
xor
inc
cmp
add
fdivp
or
add
in
add
add
sar
cmp
xor
idivl
add
add
sbb
add
lods
flds
add
add
aas
imull
cmp
fimull
into
andl
add
and
int3
mov
add
add
add
add
rcrb
cmp
add
add
jl
pop
push
add
jo
add
add
push
or
test
add
add
push
scas
cmp
add
cmpsb
loopne
mov
add
add
enter
xchg
les
add
add
repnz
add
and
outsl
add
ds
push
and
dec
add
add
inc
addl
mov
push
push
push
add
mov
add
add
sub
rolb
add
mov
add
add
das
je
add
adc
add
dec
repnz
add
add
jne
mov
add
push
cmp
add
jo
add
add
daa
push
sbb
add
std
sbb
add
sub
adc
add
add
lcall
add
add
sub
add
mov
push
movsb
add
stos
nop
add
add
mov
xor
imul
add
jne
int
jno
add
add
mov
pop
add
jp
add
add
sahf
push
nop
jle
add
add
cmp
add
add
add
mov
sti
loopne
add
add
jb
out
cli
add
add
mov
add
add
xor
pushf
lods
add
add
loop
andb
add
out
mov
add
add
cli
mov
mov
add
add
cmp
fadds
jo
add
add
out
cmc
fwait
cmc
push
add
add
adc
pop
push
add
mov
add
inc
imul
add
add
in
hlt
jne
add
add
mov
jnp
add
add
loopne
sub
mov
add
sub
imul
repnz
testb
mov
add
add
sub
add
add
test
mov
inc
fmul
loope
add
add
add
add
add
sar
sbb
add
add
inc
mov
mov
add
add
dec
fnstenv
jns
xchg
add
jmp
add
cmovns
add
lret
mov
add
inc
push
add
or
jb
adc
inc
and
adc
cld
call
add
add
add
and
pusha
add
add
and
add
add
and
cmp
add
out
rolb
add
notb
int
int3
add
add
push
clc
mov
xchg
xchg
add
add
mov
or
add
lods
add
add
lock
add
add
xchg
dec
mov
add
add
inc
or
add
add
xchg
add
add
adc
sub
add
add
jmp
in
add
add
aam
mov
push
add
add
cmpl
add
lods
jb
xor
add
add
roll
add
sub
pop
pop
pop
popf
add
add
push
fs
add
cmp
add
add
clc
loopne
shl
xor
add
add
popa
jno
incl
add
add
out
add
jmp
add
add
add
jbe
lds
loopne
rorl
xchg
add
add
adc
add
cmpl
out
add
add
leave
push
xchg
cs
add
add
xor
cltd
test
add
add
sub
fwait
inc
xchg
push
add
add
push
shll
add
rol
add
add
add
ljmp
add
xchg
or
nopl
add
add
mov
add
add
add
dec
adc
add
add
cli
cmp
add
add
lret
add
add
pop
ret
add
add
in
xchg
lea
orb
lds
add
add
movsl
les
add
add
jo
add
add
add
sub
add
add
add
add
bound
testb
add
or
sub
stc
mov
mov
mov
pusha
fdivr
add
jecxz
add
add
xchg
jle
cmpl
add
add
add
or
add
add
stos
cmp
int
add
add
jecxz
cmc
add
add
imul
inc
or
aaa
add
add
push
cmc
movsb
sarl
nop
adcl
add
scas
cmp
mov
add
add
adc
aaa
ja
xchg
add
add
iret
xchg
pop
int3
xchg
add
add
movsl
add
adc
add
pop
lods
mov
add
inc
shrl
movsl
fildl
add
add
cmpb
add
add
hlt
and
add
add
testl
add
add
aad
add
test
add
cltd
js
push
adc
add
add
ds
add
add
cmp
add
dec
lcall
out
adc
add
roll
mov
add
jo
lea
add
fnstenv
add
add
sarb
jecxz
add
add
cmp
insl
sub
add
add
mov
dec
pushf
add
add
jl
fsubrs
add
shll
add
add
push
push
jo,pt
add
repnz
add
cmpsb
arpl
xor
add
add
daa
adc
mov
ds
inc
add
aam
add
add
and
add
add
dec
xchg
test
add
add
enter
xor
add
add
sub
add
add
add
add
orb
push
add
xchg
jae
add
add
mov
jnp
add
add
pop
rcrl
rcrl
or
loop
add
add
roll
add
add
lret
add
add
add
pushf
mov
push
add
add
sub
add
add
or
add
add
add
std
add
add
mov
and
xchg
add
add
xchg
lds
test
push
add
add
lret
jb
add
add
add
add
sbb
add
add
fs
push
js
add
pop
add
add
ss
ljmp
pop
xchg
jne
sbb
add
add
idivb
add
add
push
leave
data16
add
add
lret
pop
stc
or
fiaddl
add
add
add
mov
add
add
out
jae
jmp
add
add
icebp
or
add
adc
lods
add
out
stos
add
add
adc
ljmp
add
lods
xchg
mov
add
add
in
and
mov
add
add
int
inc
add
add
or
add
add
xchg
xchg
sbb
add
lret
add
cmp
add
add
aad
mov
add
add
add
add
sahf
mov
add
fdiv
or
cmp
add
add
mov
mov
pushf
sar
lds
add
add
mov
aad
xchg
leave
add
add
je
mov
add
test
add
add
jl
mov
add
test
jnp
scas
add
add
pop
jmp
jnp
add
add
add
inc
and
and
add
in
test
dec
pop
jns
add
add
add
leave
add
add
mov
mov
cmp
add
add
inc
and
xchg
xchg
add
add
mov
add
add
xor
cld
and
add
add
outsb
inc
add
add
cld
mov
mov
add
add
mov
cwtl
fwait
icebp
inc
add
add
gs
or
aam
add
add
and
adcl
add
sub
add
dec
aaa
icebp
call
add
mov
add
add
add
sarb
add
add
lcall
add
ljmp
mov
lods
fucomp
mov
add
dec
add
add
test
cmc
int3
add
jle
add
add
push
daa
sbb
add
inc
push
xchg
and
add
out
mov
cli
add
add
add
mov
dec
push
add
add
xchg
mov
push
xchg
test
loopne
add
das
xchg
add
add
sbb
repnz
sbb
add
add
filds
add
add
lahf
fcompl
add
add
sub
mov
sub
add
add
or
push
push
add
push
mov
add
add
je
popf
pop
cmp
add
add
sldt
add
mov
push
inc
add
xor
add
add
sub
add
add
inc
xor
add
add
mov
and
add
cmp
add
add
in
or
add
xchg
add
add
add
jp
dec
add
add
pop
add
add
mov
out
add
add
jne
in
add
add
xchg
psrlq
add
mov
add
add
in
and
incb
add
add
mov
add
add
or
add
add
pusha
jae
mov
add
fmul
jmp
add
add
add
add
xchg
add
add
enter
xor
ret
adc
add
loopne
add
add
sbb
inc
add
add
mov
rolb
add
add
in
insl
add
mov
add
mov
add
add
pop
add
add
inc
push
jne
add
add
add
icebp
movsl
sarb
cmc
out
shll
shrb
inc
add
dec
stc
add
add
repnz
add
add
arpl
add
or
mov
add
dec
movsb
notl
xlat
mov
insl
pushf
inc
add
add
movsb
pop
scas
test
add
add
daa
pop
inc
pushf
add
add
add
aaa
add
add
add
rcrl
add
cmp
add
add
jo
ret
or
popl
add
add
cmp
add
enter
add
sub
add
out
jg
lods
mov
add
add
rorl
cmp
add
add
jmp
movsb
add
add
push
and
add
add
dec
mov
sub
aas
faddl
add
add
pop
mov
addl
add
mov
lahf
mov
popa
add
add
mov
ret
je
add
add
js
fwait
data16
add
add
icebp
cmp
xchg
xchg
add
add
rcr
mov
xchg
add
add
jecxz
add
add
js
mov
push
ret
mov
